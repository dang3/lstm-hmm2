sbb
add
adc
pop
je
sub
in
pushf
mov
ret
es
dec
xchg
dec
enter
fisubrs
ficompl
jle
lods
push
popa
mov
pushf
arpl
shrb
inc
pop
mov
xchg
ficoml
sub
in
and
jb
cmpsl
xchg
or
mov
sbb
cmpsl
mov
inc
xchg
xchg
ljmp
xlat
scas
adc
movsb
add
mov
mov
dec
ret
jge
imul
clc
sar
cmp
dec
inc
lret
jbe
test
cmpsl
and
lods
std
aad
mov
pop
aad
and
push
push
dec
sbb
pop
xchg
sarl
sti
sub
or
cltd
mov
int3
sub
cmp
mov
mov
mov
jns
push
pushf
stos
das
lods
mov
inc
cltd
test
enter
xchg
mov
dec
pop
jmp
or
in
mov
mov
xchg
mov
inc
xor
or
dec
inc
clc
sbb
sbb
cld
pop
or
inc
adc
inc
xchg
pop
psubsb
cmc
icebp
lret
das
add
shr
pusha
and
sub
push
aam
and
sbb
pop
std
rcrb
lods
aam
out
sbb
into
push
popf
adc
jmp
out
movsb
pop
xor
insb
sub
icebp
sbb
add
pop
mov
push
pop
cmpsl
jecxz
mov
stos
mov
js
mov
adc
negl
xchg
fistps
in
lock
inc
fistl
pop
mov
cmpsl
aad
orb
das
jp
pop
hlt
adcb
lret
push
scas
lahf
out
push
sbb
fcoms
fs
mov
enter
test
xchg
aaa
inc
sub
jo
jnp
ret
loop
nop
cmc
aaa
pop
mov
pop
mov
fs
jae
jp
or
mov
dec
in
mov
les
adc
jp
dec
subb
push
fwait
test
jl
clc
mov
and
push
mov
ja
mov
sub
and
sub
jl
mov
mov
repz
cmp
cwtl
mov
push
xor
lods
hlt
cmc
push
inc
scas
fdivl
ja
and
sti
in
sub
je
dec
rcrl
scas
rcll
sahf
test
loopne
adc
inc
pop
xchg
inc
mov
add
data16
mov
repz
pop
sti
cld
mov
lds
push
dec
jmp
inc
inc
dec
stc
fcmovu
cli
mov
mul
stc
mov
in
int3
xadd
push
mov
fnstcw
xor
or
stos
mov
mov
cmp
enter
lcall
mov
fildl
and
leave
jne
jge
xchg
jle
into
xor
enter
cld
jae
sbb
adc
and
inc
stos
add
dec
ja
popa
into
fdivp
sbb
xchg
lock
adc
sti
lods
mov
mov
cmp
mov
inc
rorl
push
adc
dec
push
cltd
xchg
leave
lock
add
out
repz
xchg
cmp
cmpb
jo
pop
fidivrl
push
or
hlt
lods
adc
cld
sub
stc
fadds
imul
jge
sbb
mov
ljmp
sti
mov
fwait
pushf
sbb
cmp
jae
fucomip
outsb
and
rorl
stc
or
jnp
adc
in
stos
mov
loop
pop
rcr
call
fmuls
jle
push
out
addr16
sti
test
dec
fildll
mov
push
sbb
or
sbb
leave
or
insb
inc
cmp
test
or
inc
sbb
and
xchg
mov
push
cmp
and
mov
and
rcl
mov
jno
pop
mov
pop
sbb
scas
loop
lods
jecxz
imul
adc
jle
gs
int
sub
rcrl
push
jmp
xor
mov
jp
dec
add
and
cmpsb
jae
addl
out
jecxz
int3
call
dec
fistpll
out
adc
in
add
stc
inc
adc
es
fld
adc
inc
xchg
jl
stos
and
repnz
je
rcll
icebp
ret
fistl
das
data16
xor
sarb
xchg
mov
xor
in
inc
jl
sbbb
adc
rorl
sub
push
pop
mov
clc
mov
and
add
pusha
pop
jbe
clc
ret
mov
out
in
cmp
cld
or
inc
loope
sti
fiaddl
int3
mov
jmp
fsts
add
lret
xor
push
xor
push
jl
dec
fwait
lods
mov
test
cld
xadd
movsl
pop
out
in
jl
hlt
push
mov
lods
cmp
sbb
test
sbb
dec
bound
xchg
jnp
inc
icebp
jp
cmpsl
mov
mov
ret
pop
pop
lds
insb
mov
pop
shlb
jge
aam
scas
pushf
jne
inc
push
xchg
frstor
imul
jg
adc
xchg
or
outsb
mov
xor
sbbl
int3
or
push
push
mov
call
xchg
add
push
fcompl
dec
andb
cmp
out
test
cmovns
adc
and
mov
jb
dec
or
int3
fmull
ret
test
add
sub
push
mov
and
stos
iret
cs
inc
dec
push
mov
xor
inc
push
cmp
sbb
mov
leavew
push
dec
lds
mov
push
filds
sub
cmp
mov
inc
mov
mov
ret
adc
loope
arpl
subb
ja
insb
or
ficomps
fcmovbe
add
mov
rolb
jle
dec
sbb
push
and
dec
jae
push
adcl
cmp
add
jp
lds
int
out
or
mov
rcl
xor
repz
mov
in
jb
loope
jns
jbe
push
cmp
sarb
call
loop
mov
xlat
mov
or
xlat
mov
and
xlat
mov
cmove
scas
jbe
out
and
or
icebp
inc
add
inc
aad
lock
aam
xorb
stc
sub
fstpl
push
cmc
dec
mov
sbb
fstpl
aad
adc
jg
cmpsb
jp
pushf
mov
les
fwait
add
test
cmp
xchg
pop
jbe
in
sbb
enter
mov
pop
fs
inc
mov
aas
xchg
cmc
inc
sub
jle
ficoml
add
inc
jno
push
cmpsb
jae
or
ljmp
add
lods
sbb
mov
cwtl
jnp
inc
fwait
insl
ret
test
cli
gs
push
mov
jle
mov
in
out
lods
mulb
fstl
jae
mov
js
xchg
mov
xchg
loop
cs
mov
or
mov
pop
sti
ficomps
cs
loopw
cld
mov
xor
xlat
shrl
and
jle
and
mov
and
sub
dec
adc
jbe
or
mov
rclb
sbb
cli
push
cmp
lahf
loop
lcall
leave
xchg
and
clc
out
push
es
jmp
mov
jl
into
adc
insb
data16
and
testb
sub
js
enter
ror
fs
dec
std
ja
enter
sub
imul
jns
push
lret
sub
rclb
add
push
sub
mov
ret
pop
sbb
in
imul
loope
push
or
pop
out
addr16
add
xor
push
outsl
nop
ja
gs
popl
mov
nop
mov
movsl
fstpt
dec
fsubs
jle
fsubrl
xchg
mov
ret
jl
lret
xor
fistpll
scas
pop
add
shrl
xor
fdivl
jb
jnp
sbb
push
mov
ret
push
cmp
inc
mov
shll
dec
das
add
mov
icebp
dec
jp
cmp
std
shll
cmp
outsl
cmpsl
pop
cmp
lea
insl
inc
repz
or
movsl
insl
mov
jmp
std
lret
xchg
jmp
ljmp
mov
or
sub
push
mov
stos
fdivl
and
loopne
aam
lods
inc
inc
test
cmp
pop
jle
int
inc
daa
pop
mov
in
dec
add
ljmp
push
jae
or
push
aas
cmp
pop
lea
lods
add
scas
mull
adc
sahf
out
fimuls
cmp
sbb
cmp
mov
orl
jne
or
and
lret
lock
pop
pushf
loopne
dec
and
mov
loopne
push
in
fldcw
loop
ds
enter
outsb
repz
xchg
xchg
stos
ja
xlat
int
add
pop
dec
adc
pop
push
std
jne
push
add
and
or
add
inc
or
jne
hlt
jbe
ljmp
sub
push
loop
pop
and
out
or
mov
or
and
cmp
icebp
jp
test
mov
jno
jg
mov
push
lock
push
dec
xorl
xor
stos
cmp
sub
mov
sub
push
sbb
mov
repnz
jb
push
push
popa
aam
cli
insl
bound
fwait
andb
in
loope
inc
sub
pushf
insb
div
pop
andl
lea
div
jmp
clc
sub
lcall
int3
jp
repz
inc
clc
icebp
add
jmp
fldcw
insb
aam
push
mov
in
sbb
pop
adc
push
lcall
or
out
ljmp
push
inc
repz
daa
mov
cltd
test
pop
into
sub
xor
out
sbb
xor
into
notb
je
add
sub
test
cltd
mov
lcall
jb
jp
fnstsw
imul
gs
mov
jp
sbb
dec
fwait
dec
or
mov
mov
mov
test
inc
lds
fstpl
imul
ljmp
in
xchg
pop
xchg
out
adc
pop
fmull
jae
mov
cwtl
sti
clc
sub
push
xor
roll
xchg
enter
lock
jne
stos
lahf
inc
es
sbb
xchg
xor
sub
sbb
pop
or
subb
inc
ss
and
mov
outsb
jbe
into
mov
fldcw
mov
inc
and
pop
push
ds
cmpsl
fists
dec
mov
jle
mov
inc
pop
jmp
inc
and
aam
xor
mov
negl
sub
add
pop
mov
cld
push
movl
int
out
dec
adc
loope
jmp
movsl
lock
scas
xor
jmp
popf
or
dec
inc
mov
cld
rcll
pusha
sub
lcall
jnp
subb
lret
pushf
jb
xor
out
lcall
dec
jbe
jp
lods
lcall
xlat
subl
and
push
mov
ret
xchg
punpcklwd
sbbl
clc
mov
cld
test
lret
mov
xchg
xchg
and
aas
lds
add
cmc
pushf
aaa
inc
dec
cld
mov
xchg
test
lcall
nop
inc
fldl
mov
jbe
mov
sub
add
mov
pop
inc
xchg
inc
ljmp
std
pop
pop
and
insl
add
xchg
mov
sbb
mov
xchg
cmp
dec
je
lock
or
add
cmp
push
xchg
jo
shrb
sub
add
in
flds
lds
xchg
push
scas
mov
mov
xchg
mov
cmc
and
cli
shrw
adc
xor
lock
test
xor
xchg
dec
fwait
xor
loop
cli
push
divb
imull
jo
pop
jl
sarb
adc
cld
pop
jo
nopl
imul
mov
push
adc
fisttpl
xor
dec
sbb
call
jae
pop
lcall
push
sub
les
inc
and
jo
clc
cli
mov
sete
loop
aaa
lret
cmp
mov
int3
lcall
test
and
movsl
mov
rorl
xor
mov
cmpsb
jnp
adc
jg
lea
lcall
mov
add
ljmp
sbb
xchg
ds
jg
test
add
add
dec
aas
push
mov
sbb
cmp
mov
rol
jecxz
or
xor
je
cmpsb
xlat
arpl
jno
cwtl
pop
pop
cmpsl
dec
rorb
push
mov
xchg
or
mov
subl
fmuls
jle
xor
inc
dec
andl
out
inc
sbb
jle
inc
mov
lahf
pop
cs
xlat
mov
fidivl
xchg
inc
scas
or
mov
mov
or
jecxz
mov
loop
sti
sub
mov
sub
or
mov
inc
xchg
inc
add
xchg
test
test
jno
lahf
icebp
mov
es
lahf
and
xchg
popf
push
lahf
mov
inc
mov
mov
cli
push
dec
or
mov
push
push
adc
or
fs
mov
jnp
xlat
mov
popf
push
or
xacquire
enter
pop
movsb
lods
cmp
pop
jmp
xchg
aas
mov
adc
repz
pop
rcll
jae
aaa
add
adc
out
or
test
inc
dec
insb
outsb
iret
fsubrl
out
and
std
rorl
push
ja
lret
mov
jg
sub
int3
ficoml
clc
pop
in
jns
es
flds
test
fs
mov
push
pop
xchg
xor
xchg
sbb
pop
hlt
jl
fidivs
std
push
lods
lret
dec
ljmp
fsubrl
dec
jb
inc
jnp
ret
inc
mov
sub
aad
adc
scas
fbstp
pop
imul
repz
sub
dec
jmp
imul
movsb
mov
push
imul
and
gs
push
outsl
dec
lcall
jb
xor
into
mov
and
ds
mov
pop
ret
nop
es
adc
mov
and
outsb
out
add
iret
lcall
pop
rolb
lods
loop
fistpll
data16
aaa
idivb
repz
xchg
pop
loop
pop
bound
cmpsl
out
jl
push
lods
jmp
xor
xchg
mov
lea
sbb
add
lret
inc
mov
fisubs
xchg
cmp
out
mov
and
aam
ret
insl
sub
inc
and
in
sbb
dec
add
mov
lret
or
push
sub
icebp
adc
adc
out
mov
add
ss
sbb
ret
pop
push
or
jmp
pop
rcr
pushf
or
mov
sub
mov
pop
cltd
mov
repz
in
or
jmp
inc
into
fs
in
pop
aam
daa
mov
push
jnp
xchg
jg
mov
jl
jg
pop
cmp
mov
push
nop
out
pop
hlt
outsl
fstpt
mov
test
xor
pop
in
mov
div
aad
call
sub
mov
cmpsb
cmc
jbe
incb
test
jl
popf
jecxz
popl
loope
sub
cs
icebp
aam
xchg
push
jb
and
dec
push
out
xchg
xor
mov
push
sub
icebp
outsb
adc
test
addr16
sbb
mov
sbb
lock
mov
inc
dec
and
xchg
add
and
jo
arpl
nop
stos
or
jb
and
int
and
mov
sahf
add
pusha
jp
jp
loopne
inc
xor
pop
sbb
cli
push
std
sbb
inc
add
dec
add
dec
jg
inc
fisttpll
or
andb
push
je
repz
or
scas
shll
mov
xchg
dec
fs
push
insb
call
mov
push
inc
add
add
pop
and
fistl
fldl
sbb
push
test
cmpsb
popf
ds
test
pop
sbb
out
ds
sbb
dec
fisttps
or
adc
xchg
jecxz
testl
ret
or
ljmp
push
shrb
je
lret
fidivrs
cld
test
adc
fstpl
dec
inc
add
lods
std
sbb
xchg
nop
pop
push
pop
cld
insl
push
jg
mov
push
dec
xchg
cmpsl
cld
cmp
test
mov
mov
xor
cld
out
rcrb
cmp
or
ljmp
outsl
lret
sub
jge
xchg
jl
fcmovb
xor
dec
mov
xchg
push
sub
jg
sbb
aaa
imul
mov
jo
fildl
out
lods
clc
pusha
shlb
mov
cmpsl
loop
inc
insl
inc
sbb
icebp
mov
or
or
mov
ljmp
cwtd
ret
and
or
aaa
enter
xchg
dec
inc
adc
jecxz
and
or
test
add
hlt
mov
sahf
lea
iret
pop
outsb
sub
rclb
sarl
inc
lret
mov
jbe
loopne
incb
and
cs
pusha
fstp
jns
or
mov
jno
in
cmp
jl
ljmp
test
sbb
pop
xorb
cmp
jg
sbb
dec
mov
nop
xor
mov
jb
bswap
pusha
push
dec
mov
mov
or
pop
mov
xor
pop
adc
andl
dec
fsts
lods
movsl
fisttpl
popa
xchg
adc
sub
or
or
xor
inc
push
xor
icebp
and
in
mov
sbbl
les
pop
or
mov
mov
sub
xchg
jmp
gs
das
imul
das
std
fildll
jmp
adc
sbb
cli
int3
sub
std
and
jb
inc
idiv
pop
bound
testl
cmp
xor
test
fs
mov
xor
pop
cmp
xor
or
sbb
call
mov
sbb
add
push
ficomps
jae
cmp
inc
inc
into
sbbb
icebp
jne
mov
aad
shlb
iret
movsb
pusha
flds
push
stos
ljmp
sbb
xor
add
cmp
xor
imul
lds
inc
jecxz
int3
xchg
scas
std
jecxz
out
daa
dec
push
jecxz
fldt
add
mov
jns
pop
xchg
std
mov
icebp
sub
xor
clc
jno
cmpsl
icebp
scas
jo
xor
stc
inc
inc
shll
fiadds
pusha
addl
cld
and
mov
jl
sub
je
cli
nop
jnp
fildll
pop
add
or
adcl
xor
cmp
es
xor
xchg
jg
jae
jecxz
fimull
fimull
cld
imul
fisubrs
std
je
push
mov
push
add
or
xchg
movsl
xor
pop
and
mov
mov
and
and
mov
pop
dec
jl
dec
stc
jmp
incb
lret
rolb
cltd
inc
mov
icebp
in
mov
aaa
mov
loop
cmpsl
mov
shlb
dec
cli
mov
imul
mov
insb
add
push
and
sbb
es
je
fnsave
cld
add
jle
adc
jo
push
sarl
xor
out
mov
lods
inc
push
add
xchg
inc
xor
jbe
cmp
sub
mov
sub
loopne
pop
and
or
pop
or
mov
nop
jp
out
adc
movsl
enter
mov
jo
xor
pop
sub
sbb
cli
xor
jne
mov
sub
jl
lret
imul
push
aad
add
sub
lret
xor
out
das
add
cmp
nop
mov
and
cmp
iret
wrmsr
loope
sub
jecxz
popf
aam
es
adc
sbb
mov
sub
pop
xor
or
test
sbb
ret
je
pusha
mov
cmp
ret
dec
dec
clc
ret
outsl
push
loope
push
pop
add
pop
and
lds
por
test
cld
kxorb
repnz
and
xchg
pop
test
inc
cmpsb
fiadds
sub
and
gs
mov
push
cmc
jne
pop
xor
xchg
insb
sub
pop
addr16
mov
xchg
jne
push
pop
adc
jle
bound
push
divl
int3
aaa
sti
push
inc
sbb
fsub
stc
mov
pop
pop
jns
mov
fidivl
popf
adc
hlt
adcb
jb
or
mov
into
dec
adc
cmpsb
ret
mov
shlb
fs
jp
sub
imul
stc
stc
in
dec
cld
add
out
jecxz
dec
fmulp
popf
mulb
dec
shrb
popa
enter
test
sub
mov
xor
pop
test
mov
shr
mov
xor
push
jmp
inc
ljmp
andb
neg
pop
push
pop
cli
and
and
sbb
std
inc
push
jno
in
xor
xchg
xor
aas
dec
fsubl
xchg
sbb
or
jbe
pop
rol
xor
cmp
sbb
xchg
in
pop
xchg
mov
cli
cli
out
push
ja
hlt
adc
int
scas
xchg
fidivs
sbb
sub
decl
pusha
aas
cli
sbb
push
jnp
daa
int3
scas
adcb
cld
mov
and
pop
xor
jmp
sub
push
add
fsubrl
cli
push
outsb
adc
pop
js
inc
pop
jo
aam
addr16
or
arpl
push
lock
mov
mov
mov
lods
adc
push
lret
dec
icebp
pop
fldcw
cwtl
mov
js
mov
mov
push
jle
pop
dec
mov
imul
push
mov
inc
cwtl
stos
addr16
test
pop
pusha
adc
push
adc
mov
fwait
dec
sbb
pop
jp
scas
clc
xchg
xchg
test
dec
in
mov
mov
not
imul
mov
push
sbb
sub
sbbb
ja
je
dec
sbb
dec
out
lret
nop
ss
in
sbb
sbb
cld
mov
lods
enter
jmp
xor
inc
inc
inc
ret
sub
addl
cwtl
addr16
jle
and
dec
xchg
sahf
xorl
rcrl
pop
cmp
outsb
inc
call
mov
sub
ljmp
mov
and
mov
mov
sahf
mov
push
repnz
rcr
loopne
push
xor
push
bsr
sbb
subb
mov
lcall
cmp
fildll
jb
subb
std
cli
movsl
inc
out
idivb
pop
xchg
add
jg
sbb
jp
sti
ficoml
adc
push
icebp
push
das
dec
jmp
xchg
jae
cltd
push
std
enter
aam
xchg
ja
xor
xchg
in
adc
hlt
dec
fwait
test
sbb
mov
mov
add
dec
sub
xchg
cmp
std
add
xchg
jp
fnstenv
in
decb
cmpsl
mov
pop
or
inc
pop
loop
xorl
leave
push
push
cwtl
add
cmpb
scas
pop
xchg
icebp
mov
fcomip
rcl
sar
and
add
cli
mov
inc
jg
sub
or
iret
add
mov
out
shld
mov
pop
mov
cmp
cmpsl
mov
add
test
jmp
fwait
dec
mov
xchg
cmpsb
inc
adc
sub
fsubl
or
loop
insb
sarl
mov
push
pop
xor
push
mov
pop
out
ss
push
adcb
fisubl
pop
adc
cmp
sbb
ret
notl
sbb
mov
xor
daa
pop
adc
or
das
lods
mov
loopne
xchg
xlat
std
xchg
mov
in
inc
cmpb
dec
push
sbb
lahf
aaa
mov
loopne
xchg
cltd
nop
push
mov
filds
fsubs
pop
pop
pop
sti
pop
fwait
jno
dec
push
dec
mov
icebp
fsubl
into
aam
jae
hlt
jp
rorl
add
scas
inc
sbb
outsb
outsb
jbe
or
in
hlt
scas
or
and
mov
xchg
mov
sbb
popf
xchg
or
xlat
outsl
inc
sarb
mov
mov
dec
xchg
or
jmp
mov
push
pextrw
adc
cmp
pop
and
xor
orb
mov
push
jg
fidivrs
jae
or
pop
call
es
jecxz
mov
pop
mov
ret
pushf
insb
dec
mov
aam
pop
vlddqu
jecxz
xor
movsl
push
push
and
mov
cmp
dec
pusha
repz
lahf
xor
xchg
xor
movb
adc
sahf
jne
sub
mov
je
andl
or
iret
pop
push
xchg
mov
push
or
pop
inc
mov
cmp
jbe
cmpsb
arpl
jb
dec
push
movsl
das
test
ret
pop
push
add
dec
int
sbb
jge
test
in
mov
stc
cmp
adc
mov
sti
mov
sbb
sub
mov
stos
outsl
and
jle
mov
mov
test
fwait
sub
pop
scas
jbe
movsl
mov
inc
push
xchg
push
cmc
subb
cmp
sub
mov
test
fistpll
std
sub
insb
mov
xor
cmp
das
mov
cmp
stos
clc
xchg
mov
lea
sbb
add
das
jmp
out
cmp
pop
mov
das
in
lea
push
mov
nop
cmp
sbb
fisubrl
test
inc
ret
pushf
xor
jns
sbb
lods
notl
setno
std
test
inc
dec
jl
dec
les
sbb
arpl
pop
add
inc
and
xlat
scas
push
jge
les
repnz
out
push
add
pop
loop
pop
les
loop
adcb
lock
push
lods
adc
test
xabort
or
pushf
dec
jg
dec
jp
inc
loope
fdivl
je
mov
or
dec
cmpsb
cmc
mov
add
cltd
mov
and
inc
dec
in
mov
iret
pop
les
sahf
fnsave
ljmp
adc
or
mov
dec
rorb
adc
xchg
jge
lods
lea
cltd
cmpsl
jge
inc
adc
in
loope
fucom
or
lret
scas
sbb
mov
cmp
rcrb
pop
mov
out
pop
jne
xor
iret
sub
add
sahf
push
insb
adc
mov
xchg
shl
les
enter
in
flds
xchg
lock
leave
sbb
mov
lods
and
or
add
repz
fwait
mov
scas
out
mov
popf
loopne
cmp
and
stos
in
sahf
daa
les
sub
lahf
aas
popa
xor
test
int
cli
out
push
cmp
gs
add
mov
int
sub
sbb
fisubs
jmp
or
mov
arpl
scas
or
lods
das
push
lahf
cltd
sbbl
pop
sub
xor
xchg
jp
mov
jge
jnp
movsl
pop
lret
dec
repz
bound
or
sti
and
lods
or
loope
out
push
daa
jle
push
movl
cmp
inc
sub
lcall
sahf
lods
push
pop
mov
out
enter
roll
inc
and
jge
cmp
imul
mov
lock
ret
lds
cmp
lret
xchg
inc
mov
or
aas
pop
cwtl
rorb
ja
xchg
fs
test
xchg
cmp
inc
iret
loop
neg
outsl
inc
or
mov
in
mov
insl
add
popa
loopne
loop
add
iret
jmp
mov
bound
lods
dec
scas
jmp
add
insl
cmp
iret
and
mov
div
mov
sbb
add
add
mov
ss
repz
andb
outsb
pushf
jno
mov
daa
cmpsl
sbb
ljmp
test
mov
mov
sub
loopne
dec
iret
mov
mov
repz
pop
inc
out
or
hlt
or
jp
lea
jge
fadd
xchg
popl
push
fdivs
test
cmp
dec
pushf
xor
neg
popf
in
adc
aaa
nop
out
jp
mull
push
inc
in
cmpsb
test
adcb
or
outsl
in
nop
scas
xchg
pusha
xchg
mov
clc
fwait
std
lret
je
sbb
shrl
leave
push
test
dec
push
xchg
sti
sub
pslld
xlat
in
push
ret
mov
fwait
mov
mov
arpl
adc
xchg
loopne
inc
cmp
int
pop
xchg
cs
push
xchg
mov
insb
cmc
xor
mov
jb
pusha
xchg
jl
sub
mov
mov
lods
xchg
mov
push
dec
mov
in
insl
test
or
mov
outsl
in
and
jge
je
cmp
jbe
movsl
push
dec
push
add
sub
or
nop
mov
cmp
push
adc
cmp
movsl
in
sbb
ds
fildl
lcall
xchg
jae
pop
push
dec
dec
aam
movsb
outsb
lahf
add
inc
scas
loop
push
and
push
inc
push
lock
movsl
lret
jae
cltd
adc
jae
mov
adc
iret
das
jno
lods
dec
scas
add
mov
pop
push
cli
je
mov
mov
ficoml
addr16
leave
mov
inc
lds
in
out
aad
leave
xor
lds
pusha
fldenv
sub
add
imul
sbb
lea
inc
imul
mov
int3
pop
sbb
push
add
je
fdivrs
mov
or
pop
aad
inc
xor
shrb
add
mov
arpl
int3
adc
xor
xchg
fwait
rcl
leave
movsl
fcomps
and
notb
popa
jbe
adc
jg
pop
pusha
push
pop
movsb
addl
add
cmp
ds
les
xor
add
inc
pop
imul
test
fcoml
pop
dec
xchg
outsl
mov
push
lret
jns
push
and
or
lea
mov
xor
pop
inc
push
add
xor
out
lahf
clc
pop
lods
adc
dec
je
lea
pop
pop
jl
cmp
cli
mov
pop
orl
lods
stos
mov
roll
js
addr16
dec
fdivrs
mov
leave
push
clc
sub
out
dec
jle
xchg
and
fsubs
bound
fildl
dec
mov
leave
or
adc
fwait
push
pop
or
stos
mov
hlt
mov
push
outsl
jae
out
mov
lret
mov
nop
add
sbb
lea
add
dec
xchg
mov
stos
cmpsl
or
xchg
hlt
cmp
mov
push
movsl
inc
dec
xchg
fistpll
aam
rol
mov
dec
sbb
mov
and
std
fstps
inc
xor
sub
cwtl
in
pop
scas
add
mov
add
mov
jo
scas
and
outsb
push
repz
sub
cmp
lahf
mov
jno
xor
xlat
pop
cli
je
imul
shlb
daa
test
jb
rol
mov
lcall
aaa
insb
cmpsb
in
jno
hlt
push
lcall
push
sub
das
shlb
movsb
orb
sbb
mul
popa
enter
pushf
or
daa
mov
sub
push
sub
ljmp
adc
aas
jge
xor
xchg
mov
mov
mov
or
loop
mov
sbb
cmovs
push
jne
jo
mov
repnz
lahf
aad
lea
in
das
cmp
adc
aad
xchg
into
aad
mov
fmuls
nop
ficompl
lock
repnz
data16
mov
repnz
add
or
ret
movups
dec
mov
jb
aad
pextrw
inc
fwait
iret
pusha
jl
inc
mov
pop
adcl
faddl
jl
flds
loop
adc
cld
mov
into
lret
lods
cltd
adc
ds
xchg
std
es
fsub
push
jne
sub
xchg
bound
push
addr16
mov
nop
xor
jge
rcrb
imul
iret
push
dec
push
cld
sbb
movb
bound
aad
mov
notl
jb
aas
pushf
pop
push
sub
in
cmp
fists
xchg
push
cwtl
mov
cmp
mov
xchg
sti
lock
push
or
sbb
or
mov
jns
fnstcw
adc
clc
stc
adc
jb
or
outsb
in
lahf
das
pop
mov
sbb
orb
xlat
les
fcoms
xor
in
scas
lock
mov
cmp
mov
sub
stos
xor
andl
mov
out
jb
and
dec
lahf
or
and
xchg
jl
lahf
popf
test
fldcw
push
push
adc
mov
push
stos
je
inc
mov
dec
call
rorb
stos
xor
adc
movsb
inc
sub
ljmp
inc
add
loope
ja
test
imul
push
mov
sbb
jl
filds
shll
loop
cmp
and
push
in
pop
insb
inc
add
sub
fbstp
pop
sub
lds
mov
insb
jmp
in
inc
mov
fcoms
lds
icebp
xchg
or
test
incl
add
icebp
pusha
or
fwait
popf
or
jl
out
cli
orl
jo
mov
lret
mov
pop
add
ja
pop
test
js
add
insb
arpl
inc
dec
dec
popa
jbe
mov
out
bound
mov
jl
mov
out
mov
lret
pop
mov
pop
and
adc
andb
cmp
xor
jno
dec
xor
into
insl
sarb
jle
les
jbe
out
dec
int
nop
jmp
lods
cld
cmp
mov
popf
lods
loopne
mov
jo
xchg
call
add
fwait
sbb
in
jne
sbb
icebp
clc
mov
pop
jecxz
cmp
jbe
add
mov
cmp
add
fwait
shll
dec
sbb
lock
jg
imul
adc
mov
xor
subb
pop
stc
jb
fistl
mov
negb
ret
mov
aam
leave
int
jge
inc
dec
xchg
inc
fs
add
or
and
aas
cmpsb
and
in
sub
pop
push
mov
ljmp
mov
es
aaa
int
pop
jmp
out
idiv
fcomps
sub
stos
jge
mov
mov
cmp
add
and
sbb
insl
and
cmp
push
sbb
push
push
movsb
xchg
test
mov
xchg
ficoms
cmp
sbb
test
mov
call
jge
xlat
jp
mov
cmpsl
cwtl
dec
lods
int
into
mov
add
xor
cmc
xor
int3
push
jmp
imul
ret
push
stc
movsb
jl
ja
bound
lahf
mov
adc
sbb
push
xchg
iret
mov
pop
popf
adcb
push
into
push
cld
sbb
je
pop
dec
sub
jb
xlat
fiaddl
lret
mov
mov
pushf
imul
push
fdivl
mov
jbe
fs
cli
aad
ficomps
popf
dec
es
insb
or
stos
je
xchg
int
dec
fcoms
imul
push
daa
pop
fidivrs
sbb
repnz
popf
adc
mov
loop
push
inc
loope
pop
sub
xchg
iret
ja
push
pop
aam
xchg
out
into
gs
fistpll
repz
pop
xor
xor
popf
ret
into
xchg
mov
movsb
or
popa
daa
movsl
mov
js
mov
jb
shrl
jg
sbb
ds
push
dec
fidivrl
es
lods
fchs
ret
sub
out
mov
xor
sub
cmpl
xor
and
incb
pusha
mov
cld
sbb
dec
sti
sub
movsl
xchg
cmp
mov
add
int3
jmp
sbb
mov
clc
in
sub
addb
lret
cltd
mov
ret
dec
cmovg
clc
xchg
add
dec
sub
jl
cmp
shrl
scas
arpl
cmp
loope
xchg
sub
pop
xor
in
scas
inc
sbb
pop
subl
popf
sub
or
xor
inc
inc
and
mov
hlt
popf
dec
and
xchg
mov
adc
add
add
mov
sbb
into
push
pop
lea
mov
out
mov
xlat
xchg
mov
mov
mov
cs
mov
enter
fsubrl
dec
xchg
es
into
pop
adc
push
fcomi
nop
test
cmp
mov
dec
mov
std
mov
lret
ret
add
and
jge
jecxz
jmp
jp
xor
negb
xchg
loop
nop
mov
pop
sub
dec
mov
cwtl
shll
cmp
cmpb
inc
outsb
mov
dec
xorl
hlt
mov
jmp
test
aam
push
or
into
dec
addr16
aaa
test
sub
insb
fbld
mov
inc
and
push
mov
pop
repnz
dec
push
ret
adc
mov
mov
inc
out
mov
cli
mov
jbe
je
lret
or
loop
stos
pop
test
rolb
xrelease
ret
loopne
cli
mov
pop
cmc
int3
insl
ret
xor
into
andb
mov
stc
fnstcw
cld
stos
mov
jns
pop
sbb
daa
jecxz
imul
xchg
adc
mov
scas
pop
cmp
push
ss
scas
fsts
imulb
loope
jnp
out
push
sub
cmp
call
sti
ss
lds
lods
and
mov
push
jae
je
ss
inc
sahf
out
push
sti
imul
gs
loope
cmp
inc
jne
jnp
add
dec
daa
push
inc
pop
inc
xchg
lret
fcom
testb
ret
mov
fsub
jmp
fnstcw
adc
sbb
pop
jb
mov
xchg
xchg
sarl
test
or
loope
ret
and
hlt
cmp
cmc
xrelease
pop
add
mov
fwait
cmp
aas
ror
shl
es
xchg
outsl
scas
lret
ret
fcomip
pop
int
xchg
lods
mov
jle
frstor
js
mov
scas
pop
outsb
test
push
ljmp
xchg
outsl
add
and
mov
jge
dec
xchg
sahf
and
jbe
and
xor
ja
xlat
inc
sbb
mov
out
sbb
pop
ror
mov
hlt
bnd
outsl
sub
mull
add
adc
sbb
jbe
jle
iret
mov
dec
das
adc
pop
jmp
lret
scas
inc
shll
xor
inc
add
shlb
pop
sbb
xchg
cmc
jbe
mov
xorl
mov
int
mov
sbb
add
insb
sub
cltd
sub
xchg
pop
icebp
daa
sahf
mov
push
mov
pop
add
and
add
lret
fisubs
sbb
mov
imul
dec
loope
scas
dec
cmp
shll
mov
pop
rcll
dec
cmc
xor
pop
adc
lods
hlt
jns
mov
outsl
jp
jns
test
movzbl
add
insb
cmp
mov
mov
mov
sub
scas
clc
orb
imul
mov
pop
sub
movsl
jno
fisubl
mov
loope
test
pop
inc
push
xchg
outsl
push
sub
sub
dec
mov
testb
push
shlb
mov
shrl
dec
add
and
sti
imul
mov
sbb
mov
jl
fstps
fcmovnbe
nop
xchg
sbb
hlt
cmp
scas
pop
mov
test
sbb
mov
notl
pop
xchg
cs
and
or
sub
dec
dec
sub
and
dec
add
aas
lds
inc
mov
dec
fisubl
sbb
adc
mov
jae
mov
sub
jmp
adc
ss
in
rcrl
fsubrl
lods
movsb
movsb
mov
sbb
or
loope
mov
int3
cmpl
mov
pop
mov
ficoml
add
mov
in
pop
xchg
inc
sub
clc
arpl
pop
xchg
jecxz
sub
push
xor
dec
test
add
jnp
cmc
sbb
mov
out
or
fisttpll
mov
lea
test
cmp
dec
mov
mov
mov
outsb
imul
mov
cmpsb
inc
inc
jge
insb
inc
int3
cmp
jle
ret
sbb
les
cmp
mov
and
faddp
aam
inc
and
pop
mov
cmc
xor
cmp
mov
push
inc
ds
test
mov
mov
notb
mov
adc
inc
xchg
fbstp
cs
adc
xchg
mov
sub
jae
js
fldl
mov
out
int
push
lcall
mov
enter
xchg
push
enter
adc
fcoms
das
movsb
sahf
add
punpckhbw
xor
sbb
mov
pop
adc
inc
sbb
and
mov
sub
adc
movsl
pusha
jmp
mov
hlt
pop
and
ss
dec
xchg
les
xchg
loopne
insb
adc
add
dec
dec
in
mov
fsubl
pop
or
mov
pop
sahf
std
push
push
iret
fsubr
imul
xor
lods
pop
mov
movsb
adc
js
arpl
or
int
mov
push
bound
movsl
adc
jne
fstpt
push
jnp
repz
arpl
dec
cmp
lds
add
rcrw
pop
test
loopne
xor
scas
jnp
push
test
sarl
pop
clc
andl
aaa
sarl
and
incb
adc
mov
in
mov
sbb
and
adc
jmp
pop
sub
lods
cmp
jge
mov
jo
stos
add
pop
jmp
std
dec
mov
inc
dec
inc
cmc
pop
inc
jmp
iret
mov
int3
xchg
xchg
mov
xchg
mov
xor
mov
jne
ret
fs
bound
cs
xor
sbb
xchg
das
dec
lret
insb
imulb
dec
mov
fbstp
imul
jmp
or
call
push
imul
mov
push
pcmpeqd
fstp
inc
add
mov
subb
mov
inc
or
mov
enter
pop
andb
inc
mov
jbe
add
das
add
bndldx
and
xor
and
and
rorl
inc
loope
inc
push
or
xchg
jno
or
in
and
sub
push
insb
pop
pop
sbb
sub
mov
hlt
jno
xor
sbb
pop
cmc
add
jno
scas
sbb
mov
xchg
xchg
out
sbb
aam
into
jle
pop
mov
mov
dec
lods
mov
lds
sbb
push
push
arpl
lock
inc
stc
cli
in
push
push
inc
icebp
fdivrl
arpl
repnz
lcall
xor
addr16
lea
sub
adc
pop
mov
adc
dec
cs
add
addr16
out
enter
cs
push
hlt
sbbb
push
jnp
or
pop
jle
sub
adc
dec
call
mov
leave
jne
in
push
out
nop
cmp
push
mov
mov
add
lret
mov
pop
jnp
not
adc
push
jg
dec
lret
in
pop
imul
gs
or
movsb
inc
fsubs
negl
mov
js
enter
mov
cld
push
pop
in
jmp
dec
mov
nop
mov
pusha
ret
loopne
mov
out
mov
xor
pop
stos
sbb
int3
stc
adc
ficoml
inc
stos
filds
mov
mov
fdivs
int
fadds
out
jnp
jmp
hlt
mov
mul
xchg
jecxz
in
pop
lret
add
in
mov
enter
or
sbb
push
dec
inc
sub
in
mov
xlat
sbb
pop
or
ret
xchg
jb
sar
test
js
cmp
fs
xor
adc
xlat
mov
or
or
aad
paddsw
scas
test
mov
push
dec
add
cmp
icebp
out
ret
test
xsaveopt
movsb
imul
in
mov
jle
inc
sub
sbb
or
push
pop
gs
inc
mov
out
in
cld
xor
xor
test
imul
and
repnz
arpl
sub
mov
add
ss
lods
push
mov
es
cmp
xchg
das
adc
adc
sbb
nop
sub
xor
sbb
and
xor
xchg
jg
int3
xchg
adc
push
push
push
mov
jg
test
adc
and
sarl
inc
loopne
cmp
je
or
mov
inc
fcmovb
mov
cmp
mov
cmp
insl
outsb
mov
dec
bound
push
adc
mov
and
mov
mov
sti
test
enter
data16
stc
lret
mov
mov
pop
push
jge
jmp
imul
push
jmp
dec
leave
sbb
pop
sysret
rcrl
mov
fwait
stos
or
add
stc
addr16
cmc
or
in
fnstenv
cltd
xor
pop
push
frstor
stc
add
or
push
repnz
in
int3
push
xchg
popf
lea
test
cld
xor
hlt
jle
addl
jo
mov
and
repnz
dec
fucomp
or
sarl
adc
mov
and
sub
insl
mov
adc
push
fucom
inc
or
cs
repz
ret
aad
test
and
in
out
mov
mov
int3
mov
mov
or
loop
fists
rcrb
shll
mov
pusha
add
sub
js
testl
mov
jne
and
mov
mov
lock
popf
cwtl
adcl
int
aad
mov
jl
xchg
cmpb
pop
or
push
xchg
or
add
je
jg
mov
sbb
add
arpl
iret
sbb
movsb
aaa
fidivs
ljmp
xor
push
lret
dec
mov
add
xchg
in
pop
sbb
movsb
add
jle
out
out
sub
ljmp
int3
lret
mov
fs
test
add
shl
sub
sbbl
lock
ret
add
push
sub
inc
pop
pop
mov
fstpt
xor
push
scas
mov
call
push
cmp
imul
lds
push
sbb
jae
mov
fbstp
add
sub
out
daa
out
lods
outsb
adc
les
lcall
ret
test
cmp
mov
adc
aaa
aad
cmc
ret
sub
sti
cmp
js
mov
test
test
out
sub
filds
sub
push
mov
cltd
jae
outsb
cmp
push
push
mulb
gs
inc
repz
jne
test
jle
cld
jmp
mov
pop
mov
jo
out
repnz
ja
inc
pop
fcompl
je
dec
scas
dec
jo
lods
sub
ret
mov
mov
je
fisubl
dec
mov
jecxz
mov
lahf
notl
xor
or
addr16
sahf
sub
xchg
mov
gs
mov
rol
cmpsb
jne
pop
mov
mov
sahf
pop
outsb
sbb
aas
pushf
ds
addr16
push
mov
adc
dec
cmpsl
cmp
dec
dec
sub
mov
mov
pop
pop
sub
fs
mov
cli
sti
mov
fcom
das
aam
dec
jo
in
mov
xor
outsb
mov
push
int3
jne
jnp
test
or
cs
mov
sub
jle
sub
mov
jnp
testl
idiv
push
in
push
or
insl
mov
add
lock
stos
xchg
cmp
cmpsl
in
mov
into
mov
dec
movsl
mov
data16
jge
cmp
and
in
push
sbb
imul
imul
rcr
adc
test
imul
loope
mov
sti
inc
mov
or
mov
push
fldcw
xchg
adc
and
stos
and
call
mov
mov
outsb
fnstsw
sub
popf
sub
loop
xor
xchg
loope
xorl
pop
add
push
in
jp
xor
fimull
dec
add
inc
cmovnp
mov
mov
add
out
insl
fisttpl
lds
ds
call
int3
sbb
mov
rcl
loop
aaa
shll
decl
xchg
outsb
rcr
popf
cmpsb
jae
push
sbb
mov
mov
push
clc
push
xchg
inc
insb
pop
popa
dec
sub
out
fists
lods
adc
jae
inc
cmp
xlat
and
jbe
xor
pop
push
or
js
cmpb
cmp
lret
push
mov
jl
movsb
test
clc
inc
jae
fwait
inc
aam
js
jns
dec
sbb
aas
shlb
jg
mov
icebp
mov
movsb
adc
mov
mov
jg
jle
sbb
in
xchg
lds
or
dec
add
daa
and
pop
jae
stos
jg
std
sbb
daa
sub
inc
jg
subb
ljmp
xchg
mov
ja
sub
daa
hlt
je
int3
pop
fisttpl
push
xchg
inc
sub
mov
mov
rcll
push
pop
mov
popa
shrb
sub
mov
xchg
int3
mov
fists
out
inc
dec
cmpl
xchg
int
xlat
out
ds
adc
bound
movsb
data16
in
rcrl
test
int
xrelease
push
or
into
rcll
inc
cwtl
mov
mov
cmp
cmp
movsl
and
push
lods
and
mov
xlat
sbb
js
dec
rclb
leave
outsb
rcll
insb
adc
lea
test
stc
dec
orl
pusha
popf
arpl
mov
mov
xor
int
pop
addr16
adc
call
fcompl
jl
rcrl
lret
shlb
sub
or
jnp
or
jno
adc
popf
lods
xor
xor
mov
ds
cmp
dec
cmp
lahf
rcrl
repnz
or
ja
lahf
push
lret
stc
cmp
je
push
add
iret
pushf
xorb
mov
dec
add
add
push
push
xor
sbb
and
xchg
ret
inc
sub
dec
int3
sbb
mov
push
mov
mov
arpl
bnd
call
fs
gs
fisubl
scas
sub
int3
imul
jae
in
jbe
cs
test
adc
pop
fsubrl
scas
cmc
jp
xchg
sahf
mov
mov
dec
cli
xor
loopne
fbstp
add
add
ftst
es
or
xchg
inc
and
enter
popf
jg
mov
and
inc
inc
imul
jle
nop
insb
popf
mov
stos
lret
pushf
xor
enter
lock
add
enter
aam
adc
or
add
sbb
pop
and
aaa
sub
incb
pop
or
in
imul
std
cmp
xor
mov
lds
mov
cmp
inc
or
cltd
sub
push
cmp
je
push
lock
mov
pop
inc
sahf
and
mov
jmp
mov
movsb
mov
mov
arpl
pop
es
add
fisubl
dec
repz
das
xchg
mov
jae
sbb
inc
shll
sbb
adc
mov
pop
enter
inc
dec
jbe
loopne
xchg
fadd
push
mov
pop
rorb
cltd
insb
xchg
mov
push
lret
pop
jno
sub
cmpb
xorb
cmp
imul
and
mov
test
daa
leave
mov
xchg
push
pop
sub
pop
inc
fisttpll
mov
out
add
cmp
xchg
pop
or
les
xlat
jle
mov
xchg
dec
inc
pushl
jns
pop
xchg
sbb
mov
jge
out
xor
mov
add
mov
loope
lods
mov
sbb
mov
mov
jecxz
mov
loop
int
adc
jno
dec
in
paddd
dec
xor
test
bound
sub
dec
inc
push
pop
loop
das
push
xor
cmpsb
and
sub
or
fistpl
cltd
xchg
mov
mov
insl
enter
insb
and
cmpsl
in
outsb
fistpll
std
xor
rcl
js
sbb
popl
jecxz
lret
lret
jmp
fdivs
mov
cmp
push
inc
mov
ljmp
lock
fwait
cmp
nop
xorl
cmp
mov
call
negb
mul
and
add
sub
pop
adc
popa
ficompl
loop
add
xchg
orb
push
jo
sub
fldl2t
scas
pop
jnp
xchg
sti
loope
lds
push
push
cli
aam
fdivrl
sahf
pop
sub
push
mov
stc
stos
sbb
or
es
adc
xor
mov
xchg
fucomip
xchg
dec
repz
leave
or
push
mov
or
mov
mov
fsts
fdivrp
iret
dec
push
jbe
xchg
jge
insb
lock
xlat
and
repnz
push
jl
cmp
ljmp
adc
mov
imul
xlat
in
int
pop
mov
insl
adc
je
sbb
cmp
pop
ds
popa
inc
mov
push
ljmp
aaa
xlat
and
pop
mov
mov
mov
mov
lcall
lds
cmp
fldt
jb
adc
xor
int3
push
ret
pusha
insb
jmp
sub
jb
xchg
aaa
dec
daa
sbb
enter
out
popa
dec
cld
pop
scas
mov
ds
xchg
and
sahf
mov
int3
dec
push
jnp
xchg
add
int
cmp
cmp
cld
xor
and
frstor
pop
lsl
add
imul
and
test
jb
sub
imul
dec
loope
clc
rclb
fldenv
jo
aas
pop
ss
scas
push
push
sbb
shll
and
adc
lret
jnp
out
insl
outsb
inc
gs
fistpll
xorb
loopne
fidivrs
popf
cmp
jle
je
adc
lahf
cmp
or
pop
imul
or
cli
xchg
mov
int3
test
push
es
mov
sbb
nop
cmp
jno
cmp
push
loope
pop
std
mov
sub
fxch
repnz
sbb
daa
or
leave
mov
or
push
sub
mov
pop
mov
call
mov
xchg
jmp
fdivrp
pop
mov
mov
out
xor
dec
inc
rcrl
xchg
xor
jmp
dec
in
jbe
pop
xchg
bound
mov
jp
adc
mov
push
and
movsb
push
or
mov
pop
sub
jge
in
pop
pop
jle
rcr
imul
out
outsb
aad
add
pusha
sbb
lahf
loop
push
fnstsw
rcr
fadd
mov
test
mov
xchg
cmp
inc
loop
out
flds
les
adc
mov
dec
inc
push
xchg
push
push
aas
fldcw
push
sub
test
dec
jl
fucomi
fisttpll
or
out
enter
mov
sbb
sbb
scas
mov
adc
sub
ja
mov
dec
icebp
jmp
lcall
leave
push
mov
cmp
out
leave
das
xlat
mov
ljmp
stos
cli
loopne
mov
jp
pushf
repz
mov
adc
push
loope
rcl
push
mov
fwait
lcall
je
rorl
push
xchg
pop
int3
dec
imul
add
stos
stos
sahf
xor
jbe
or
xor
sbb
add
out
push
leave
ret
inc
testb
cmpsl
push
pop
divl
out
push
cmp
mov
aad
push
out
and
sbb
add
or
sub
xor
mov
rcpps
jmp
jb
rcrb
dec
dec
pop
inc
xlat
and
sub
cmp
cltd
fcomps
mov
cwtl
add
in
clc
cli
pusha
pop
push
repz
shlb
in
aaa
inc
sahf
insl
adc
out
scas
dec
and
in
iret
sahf
lods
das
add
cmc
mov
fiaddl
out
cmp
and
jno
sbb
mov
jmp
adc
sarl
add
push
and
aad
cs
lret
std
jne
lock
popa
dec
or
je
mov
in
test
xchg
jmp
stos
je
or
adc
das
jle
mov
xchg
aas
aam
add
mov
test
int
and
andb
cli
or
sbb
arpl
andl
sbb
fwait
shll
cld
pop
mov
nop
stos
or
jl
push
in
jp
fbld
mov
daa
dec
hlt
sarb
or
xor
cmc
ja
mov
sbb
xlat
xor
js
jg
or
cs
dec
icebp
loopne
mov
outsb
cmpsb
pop
mov
sub
jns
imul
imul
test
lret
cmpsl
mov
imul
addr16
inc
jo
jbe
jge
testb
push
xchg
xor
xlat
inc
push
stc
adc
fidivrl
pop
jg
hlt
add
xchg
cmp
lods
xchg
jns
xchg
adc
test
es
jbe
arpl
mov
push
lods
outsb
push
inc
pop
mov
int3
jmp
xor
jns
xchg
mov
mov
or
ds
rcrb
cmp
sub
loop
jo
es
enter
pop
add
dec
ds
cld
loope
inc
mov
data16
pushf
ss
mov
jecxz
sbb
xchg
push
stc
cmc
dec
testb
shlb
xchg
pop
mov
add
jmp
lcall
cs
or
push
testl
pop
lock
sub
or
jecxz
lcall
cmpsb
xor
add
lea
sarb
xorb
cwtl
pop
call
mov
cmp
ret
cmpsb
adc
or
into
jo
cmp
xchg
call
movsb
in
push
fstp
ljmp
and
es
cmp
in
inc
jns
xlat
sbb
mov
xor
mov
lret
popa
test
jl
xor
push
sub
shlb
jl
call
add
cmpsl
adc
sub
mov
cmp
pop
xor
mov
lcall
rcll
mov
push
mov
pop
aam
adc
or
cltd
into
add
push
scas
popa
and
andb
leave
jo
fisttps
pusha
test
jmp
mov
sti
fnsave
popf
leave
push
jmp
lcall
cmp
and
mov
jmp
adc
stos
push
adc
fs
enter
adc
js
imul
adc
jb
int3
pop
dec
mov
or
cmp
ret
mov
setns
pop
sub
add
sub
ret
add
push
sub
inc
sbb
xor
out
fsts
clc
lcall
xchg
pop
sub
sub
negl
xor
mov
mov
sbb
addr16
cmp
mov
pop
int
leave
popa
fwait
call
test
mov
lcall
add
sbb
movsl
in
jno
mov
or
roll
lcall
xchg
in
je
sub
jno
js
out
xor
add
arpl
jne
push
pop
out
jmp
xchg
repz
cmp
es
jns
push
shrl
xor
add
mov
inc
in
repnz
and
imul
fnstcw
out
rorl
out
xchg
xchg
outsb
pop
dec
jecxz
out
ss
xchg
pop
and
mov
sarb
push
jecxz
xor
push
jmp
adc
mov
or
and
mov
pop
cmp
sti
jbe
xchg
sub
jb
cmp
mov
push
addb
jle
cld
out
mov
roll
mov
stos
dec
xor
lods
pop
sbb
mov
jle
sbb
cltd
mov
sahf
das
test
add
in
call
push
in
xor
mov
fldt
fistpll
mov
lds
dec
int3
inc
ss
sub
outsb
enter
cmp
sub
pop
les
inc
test
pop
test
mov
mov
add
pop
cmp
movsl
out
adc
xchg
push
popa
inc
lret
shll
xchg
nop
mov
nop
filds
xor
xchg
test
cmpsb
jo
addr16
push
js
mov
adc
std
enter
mov
inc
and
in
test
outsl
sub
outsl
out
daa
seta
mov
repnz
inc
sbb
outsb
and
ds
dec
xor
in
subb
xor
ds
mov
pusha
jb
cmp
or
jge
or
insl
push
mov
out
sbb
jle
ror
push
jecxz
faddl
fcmovbe
jno
std
pushf
dec
sbb
loopne
mov
loopne
mov
inc
push
mov
fdiv
repnz
aam
in
mov
push
inc
adcb
adc
mov
mov
repnz
dec
lret
imul
test
out
cmpsb
xlat
out
lret
push
jb
lret
pop
popa
adc
or
inc
ljmp
mov
mov
ret
dec
xchg
bound
inc
das
je
jne
out
dec
data16
mov
push
jp
pusha
cmpsl
sbb
mov
lahf
inc
addr16
cmp
test
js
loopne
mov
add
adc
loopne
jns
inc
inc
cwtl
popl
or
xchg
mov
inc
cs
inc
dec
xchg
je
imul
sub
cmp
sbb
aas
cwtl
cmp
std
cwtl
sub
mov
hlt
cmp
xor
xchg
xor
mov
pop
and
in
push
shll
stos
pop
ret
mov
ja
xchg
mov
bound
out
jbe
inc
es
sbb
inc
jb
or
or
in
and
mov
or
ud1
mov
mov
push
mov
imul
jmp
add
and
sbb
xlat
fnstsw
jo
xlat
insl
insb
mov
out
shrl
pop
and
pand
or
pop
fs
sub
push
sub
cmpb
cmp
insl
or
fnstsw
rclb
out
xchg
shll
fs
push
sbb
jae
lret
mov
out
imulb
inc
pop
xor
popf
xchg
sahf
jno
enter
fs
out
aam
gs
cli
fnsave
xor
add
and
test
cmp
jle
adc
xor
rorl
ret
inc
adc
mov
mov
sahf
and
das
jbe
int3
inc
mov
cmpsl
repz
imul
push
mov
test
lea
add
dec
sti
push
jmp
dec
and
into
push
push
outsl
inc
inc
shll
ljmp
je
into
sbb
sbb
fstpl
addl
xchg
pop
xchg
test
xchg
sarb
fldcw
lds
insb
jecxz
cli
dec
pop
sbb
cli
xor
jg
pop
mov
add
dec
pop
adcl
mov
popa
mov
cmp
int
inc
xchg
inc
push
into
orl
jnp
aam
jns
xlat
pop
ds
jp
out
sub
stos
dec
xchg
pusha
sti
mov
xchg
sub
icebp
sub
jnp
out
test
inc
jo
adc
fidivrs
mov
mov
ror
repz
mov
out
jle
popa
push
movnti
pop
mov
mov
pusha
movsb
cmp
mov
and
pop
or
adc
rcll
repnz
xorl
leave
addl
lret
and
adc
in
lret
lods
dec
rolb
daa
fisubs
add
lret
xchg
jg
push
cmp
jecxz
dec
repz
mov
lods
jbe
dec
aad
leave
fwait
jno
and
cli
and
xor
incl
sub
mov
dec
imul
leave
test
xchg
inc
xor
adc
faddl
insb
mov
mov
mov
leave
lods
fwait
jb
stos
ret
dec
shlb
push
sbb
flds
mov
fcomps
cmpl
xchg
mov
sarb
pop
pop
cmp
mov
test
les
std
fisubl
dec
lds
leave
stc
aas
gs
cwtl
lahf
sub
scas
mov
ret
mov
int
enter
mov
imull
psrlw
stos
xchg
ret
cmp
and
test
ret
fwait
mov
stc
sarb
stos
cmc
mov
or
int3
hlt
pop
or
cmpsl
mov
dec
lods
ret
sub
or
scas
push
push
push
lahf
stos
ljmp
lock
sbb
sbb
lahf
jle
cmp
pusha
adc
leave
pusha
xor
sbbb
in
jns
rclb
xchg
mov
add
outsb
lods
in
popf
repnz
out
xchg
xor
mov
shrb
jl
outsl
outsl
test
xorl
cmc
sub
les
dec
mov
xchg
in
mov
dec
jne
or
imul
test
jg
mov
in
and
in
in
or
push
or
xor
jae
sub
pop
push
outsb
stos
ljmp
arpl
out
push
xchg
lods
mov
cmp
decl
mov
push
and
mov
adc
decb
fcmovnbe
jne
jno
shlb
mov
add
and
jno
push
and
rcrl
je
mov
movsl
mov
dec
cmp
mov
ds
dec
sar
rorl
scas
pushf
or
add
pop
imul
lret
lds
subb
cs
sbbl
das
les
sbb
lds
jge
sbb
dec
inc
fldl
push
push
test
jmp
cltd
arpl
fistpl
jecxz
xor
cmp
mov
push
lds
mov
imul
sub
cs
rcrb
sahf
xor
inc
cs
sbb
out
adc
pop
fwait
jecxz
jb
mov
mov
push
clc
mov
jae
dec
xchg
xchg
fcmove
xchg
mov
jle
adc
outsb
loope
jmp
push
jnp
fcmovne
ret
fstpl
int3
and
inc
and
sbb
xor
push
pop
dec
mov
ljmp
fcomps
rcrl
ljmp
cmp
fsubrs
int
xchg
mov
push
movsl
shrl
out
sarb
fidivs
mov
stos
xchg
inc
scas
inc
gs
out
notl
addr16
bound
and
movsl
pushl
push
fimull
movsb
or
pop
mov
andb
lods
and
insl
lea
repz
and
ss
pop
scas
mov
call
sahf
shrb
xor
cmp
push
mov
pop
or
pusha
loopne
repz
inc
out
or
mov
pop
daa
jne
dec
sbb
cmp
in
sub
mov
insb
jnp
sbb
popf
dec
popf
push
jbe
sub
inc
xor
add
cmp
scas
jns
inc
push
into
out
or
pushf
dec
jecxz
ja
or
aam
imul
sbb
inc
mov
pop
push
dec
jno
lods
bound
push
jae
pop
andl
inc
test
call
test
test
outsl
mov
ja
clc
into
mov
test
es
stos
loop
fcmovnb
popf
xchg
pop
and
loop
cmp
mov
jge
mov
xor
inc
sub
mov
js
xor
xor
imul
out
stos
mov
loopne
dec
sub
and
push
sbb
dec
enter
scas
xchg
out
scas
shr
subb
pop
pop
mov
mov
mov
aaa
or
push
xchg
push
mov
jb
cld
fldln2
mov
push
jns
add
jge
or
jno
test
test
sbb
loopne
mov
je
loopne
jmp
xor
idivb
test
test
or
push
je
dec
out
ficomps
mov
out
mov
mov
lods
pop
imul
jle
push
mov
in
decl
punpckhdq
popf
cwtl
out
push
pop
adc
and
mov
popa
aaa
das
addb
insb
cmp
mov
out
test
subl
insb
popa
cmpsl
outsb
pop
mov
sbb
jl
xlat
sub
repz
adc
jecxz
jmp
mov
repnz
cmp
inc
cmp
sbb
sub
mov
jge
sub
rorb
add
icebp
fstps
out
pop
popf
xchg
cmp
shrl
mov
sub
jg
fadds
aam
stos
cld
stos
call
jecxz
cli
and
cli
lcall
repz
add
inc
mov
push
xor
pop
inc
mov
out
outsb
push
jecxz
inc
pusha
divps
push
ret
add
idivl
gs
repz
pop
mov
and
xor
into
xchg
sbb
daa
lock
cltd
push
enter
xchg
arpl
cmp
loope
sbb
sub
dec
je
mov
ret
xchg
jg
pop
add
or
xchg
fsubl
das
dec
xchg
enter
push
ljmp
mov
fs
xor
push
aaa
dec
xchg
daa
repnz
out
in
leave
ss
loopne
xchg
sbb
mov
adc
mov
mov
jb
add
popa
dec
dec
lcall
mov
sti
into
inc
push
aad
mov
push
je
xor
lea
stc
sub
adc
fs
lods
mov
pop
jle
fcoms
hlt
mov
push
sub
inc
movsl
inc
or
sub
xor
add
punpckhbw
repz
fidivl
outsb
jnp
std
movsl
loope
sub
out
mov
hlt
xor
or
or
sahf
lcall
std
sbb
push
and
stos
jnp
jb
sub
cmc
dec
jns
pop
mov
lcall
lods
mov
into
popa
adc
iret
fnstcw
lock
xor
and
push
scas
add
jmp
js
iret
adc
lock
add
mov
push
jecxz
leave
test
jb
mov
pop
dec
sub
leave
mov
int3
clc
sbb
das
mov
gs
popf
push
rcll
cmpsb
lahf
fstl
in
ljmp
shl
sbb
clc
mov
sub
test
xlat
fwait
ds
mov
mov
xchg
or
ljmp
adc
leave
cli
scas
stos
mov
cmp
lahf
jle
sub
push
mov
add
mov
lods
mov
adc
pop
in
test
movsb
scas
shlb
mov
je
pop
jb
movsb
je
xchg
add
imul
xor
jb
out
cmp
in
push
push
fsts
sub
ret
xchg
inc
cld
ljmp
inc
lds
push
mov
and
scas
shlb
adc
add
ficompl
repnz
add
rclb
sbb
fstpl
and
sbb
mov
mov
jge
mov
cmp
fstpt
and
and
xchg
mov
push
pushw
xlat
ljmp
push
xchg
inc
dec
hlt
mov
push
out
jge
movsb
push
add
jns
cwtl
mov
aaa
adc
shll
dec
test
imul
shll
add
or
test
int
jb
cmp
addr16
out
jae
repz
cmp
jmp
jae
arpl
sub
inc
jb
xchg
mov
test
mov
ljmp
dec
movsl
insb
sub
fildl
jb,pn
pop
inc
jno
fcmovnbe
mov
cmp
push
cmc
jns
rorb
lret
pushf
add
call
fidivs
add
stos
mov
add
dec
dec
adc
push
inc
inc
xchg
xor
or
subl
xlat
test
and
inc
popf
leave
cmp
add
mov
inc
push
xor
xchg
or
push
std
scas
insl
jo
mov
bound
incb
insb
loope
fdivrl
loop
xchg
pop
dec
mov
adc
inc
sbb
sbb
sbb
mov
ja
pushf
xor
jbe
dec
add
push
cld
and
push
or
push
adc
lock
xor
mov
xor
dec
jge
sub
ret
xchg
push
mov
mov
aad
lahf
push
lea
mov
jno
fcmove
les
imul
jp
adc
inc
jmp
ret
pop
int3
bound
mov
xchg
push
sbb
mov
jne
insl
sbb
or
inc
push
in
push
xor
out
mov
ret
or
xchg
stos
call
push
js
lods
sbbb
popa
inc
les
hlt
and
sub
dec
mov
mov
pushf
pop
or
ja
adc
repz
imul
aaa
das
std
sbb
cmpsl
push
jbe
cwtl
sbb
pop
and
pop
push
mov
jno
push
adc
push
pop
in
dec
rclb
in
push
mov
mov
jecxz
add
icebp
xchg
in
and
stos
mov
mov
jge
pop
jns
push
stos
pop
push
sub
cmp
push
shlb
sarl
xchg
mov
mov
loopne
fistl
xchg
mov
cmp
scas
clc
pop
and
xchg
or
lods
aaa
xor
inc
add
mov
out
shl
es
jae
stos
jmp
cmc
popa
cltd
aaa
add
xor
fxtract
outsl
or
andb
jmp
je
jno
sub
into
mov
out
aas
cs
xchg
jg
push
movsl
inc
fsubrs
sub
sti
stc
es
push
inc
mov
aas
enter
inc
std
mov
shrb
out
in
sbb
mov
cltd
outsl
lahf
cld
sbb
xchg
rcl
jp
add
sbb
or
mov
add
mov
sbb
jae
push
test
pop
cmp
ret
mov
int
push
lret
xchg
cmpsb
mov
es
ljmp
pop
call
sub
outsb
cli
loopne
dec
fistpll
pop
mov
lods
pop
repnz
cs
sbb
in
pop
adc
scas
sbb
test
test
add
sti
rorb
dec
or
push
xchg
or
or
lahf
outsb
xchg
push
gs
push
inc
xchg
fisttps
xchg
pop
les
pop
in
daa
fwait
push
xchg
mov
sub
test
fldcw
or
addr16
cwtl
js
ret
test
dec
shrb
lods
lea
loope
and
das
add
inc
inc
mov
lods
aaa
bound
lds
mov
fsincos
pop
pop
fs
lahf
jo
sbb
mov
cmp
cmc
loope
push
push
test
dec
in
insb
stc
or
fmulp
mov
scas
push
xor
test
push
dec
xor
insb
fdivrs
push
mov
push
out
pop
dec
jo
int3
pop
push
cmp
mov
xor
dec
and
lock
inc
xor
sub
or
pop
inc
int3
fisubrs
leave
sbb
imul
inc
clc
sti
mov
shrl
out
dec
or
sti
dec
inc
fimull
inc
ror
push
dec
mov
pop
cmpsl
cmc
jb
or
pop
aad
cmp
das
mov
stos
lods
xchg
cmp
fwait
mov
dec
stc
jo
mov
push
out
jb
inc
adc
pop
flds
xor
xchg
jge
or
or
subb
cmp
xlat
dec
pop
mov
mov
mov
sub
or
sbb
push
fsubl
jae
mov
add
repnz
mov
out
xrelease
cld
mov
rcr
mov
shlb
sub
xor
sub
ss
lds
sub
sbb
inc
mov
push
ficompl
test
mov
sub
ss
jae
out
pusha
pop
sbb
or
flds
aam
jo
inc
mov
data16
fidivs
iret
add
xchg
ret
outsb
nop
and
out
rorb
test
sub
sbb
into
push
mov
or
addb
lds
jmp
pop
sub
shrb
orb
mov
ret
je
into
push
cmpsb
cmc
sahf
xlat
cmp
sbb
int3
dec
cs
inc
lret
inc
adc
popf
imul
inc
xchg
adc
adc
es
add
imul
xor
xchg
sub
sarl
enter
stos
adc
dec
mov
pop
arpl
push
je,pn
sub
sti
js
mov
xchg
push
xor
in
xchg
fwait
inc
xchg
xor
int
data16
popf
sbb
inc
hlt
aas
fbstp
sbb
sbb
jl
clc
add
inc
lret
lahf
sub
pop
ds
push
mov
loope
or
sbb
ds
dec
pop
push
shl
and
mov
mov
das
das
pop
push
adc
andl
into
sbb
mov
dec
jo
xlat
mov
push
jo
call
mov
ss
cmp
clc
jo
movsl
call
ja
mov
icebp
push
or
inc
push
out
cmpsl
cmp
inc
ja
data16
inc
push
jnp
fwait
shl
mov
adc
sti
cmp
mov
add
outsb
sub
xchg
shr
in
lahf
mov
test
push
and
clc
mov
enter
lahf
hlt
cld
data16
dec
cwtl
popf
aaa
addr16
jge
call
lret
sub
movb
sbb
inc
jl
jo
dec
cmpsl
repz
dec
jbe
jnp
daa
mov
fisttpl
les
fildl
fsts
xchg
jbe
aam
cmpsb
lea
dec
cwtl
mov
cwtl
and
push
idivb
mov
cmp
loope
sub
fs
push
nop
mov
cmc
cmp
les
cmp
xchg
sub
inc
push
sbb
ret
dec
cmpb
movsl
push
pusha
icebp
mov
pop
sahf
and
pop
mov
pusha
pop
xchg
mov
mov
sub
test
mov
dec
out
in
adcb
stos
or
jns
loop
cmpsb
jnp
fbld
fisubl
pop
mov
lea
mov
mov
hlt
out
pop
push
add
jmp
shll
dec
nop
xor
out
inc
add
pushf
or
pop
add
or
mov
rorl
imul
pop
loope
xor
loop
mov
dec
or
nop
inc
xchg
inc
push
and
fidivrs
sbb
push
loop
xor
inc
dec
outsl
outsb
pop
jg
sub
push
cmp
insb
push
mov
mov
enter
pop
sub
mov
fsts
out
xlat
push
pop
les
dec
xorb
add
mov
outsl
add
fstpl
add
cmp
jne
fs
sub
cmp
cmp
test
pusha
js
pop
js
add
pop
stos
push
mov
daa
rcl
adc
nop
outsb
aas
inc
xchg
pushl
test
mov
xor
xor
int3
xor
and
push
fwait
or
add
mov
xlat
mov
adc
mov
add
inc
cltd
ret
xchg
orl
rorb
and
cmp
or
push
jo
sub
mov
sbb
fwait
out
mov
popa
mov
ret
xchg
gs
mov
jne
outsl
int
in
test
push
xchg
pop
and
out
dec
rolb
outsb
dec
ret
push
mov
xchg
mov
pop
ja
push
out
lds
xor
gs
mov
mov
repnz
ljmp
jmp
repz
dec
fdiv
inc
and
hlt
and
std
dec
inc
cs
enter
mov
pusha
pop
insl
add
sbb
call
xchg
sub
movsb
mov
int
add
push
xchg
push
scas
adc
scas
xchg
push
cmpsb
xor
or
add
int
into
push
mov
out
sub
repz
lea
ficoms
js
cwtl
jbe
loope,pt
js,pn
imul
xor
mov
cltd
add
inc
inc
aas
fldl2t
sub
cmc
inc
cmp
mov
adc
test
cli
shr
stc
push
movb
pop
pop
jg
xchg
aam
mov
in
icebp
hlt
dec
aam
mov
pop
cmc
xlat
push
jno
je
xor
xchg
or
ljmp
lahf
push
dec
sbb
cmp
roll
or
rcl
cmp
addr16
js
lods
mov
pop
call
pop
es
insl
xchg
pop
push
cmp
outsb
es
jno
mov
gs
sar
pop
sub
mov
cmp
mov
das
dec
in
xchg
xor
aam
add
dec
adc
outsb
mov
xchg
popa
hlt
clc
aas
dec
adc
lcall
jnp
lea
mov
cmpb
insb
repnz
addr16
ret
ja
mov
cmp
adc
dec
cmpsb
xchg
fiadds
in
mov
aas
cwtl
adc
push
add
icebp
mov
stos
sbb
dec
mov
or
scas
lods
dec
push
repnz
and
adc
arpl
cmpb
add
add
addb
or
sbb
cmp
push
movb
or
mov
icebp
in
add
inc
cmp
or
xchg
mov
cwtl
loopne
cmpsl
lods
or
xchg
imull
xlat
leave
push
rclb
push
inc
or
outsl
push
sub
rolb
sbb
jo
cs
push
sahf
nop
mov
repz
mov
insl
popa
out
mov
pop
lea
mov
aad
mov
sbb
mov
mov
or
test
aaa
lahf
shrl
scas
mov
ror
add
adc
lds
or
test
inc
cmp
xchg
jle
push
dec
or
sub
sub
dec
shll
cmp
jecxz
movsb
popa
bound
hlt
mov
test
fistpll
fcomp
jo
sub
push
mov
xlat
push
sarl
dec
or
mov
rcr
dec
inc
popa
aaa
pop
cli
mov
and
inc
and
inc
xchg
fidivs
mov
add
pop
push
mov
in
adc
push
int3
cmp
cmp
jp
adc
outsb
scas
imul
jge
cmp
cmp
pop
or
inc
jg
and
mov
mov
test
arpl
or
adc
divb
rolb
outsb
iret
push
cld
aaa
decl
fbld
and
jmp
stos
lods
cs
dec
es
inc
icebp
jae
add
scas
mov
fmul
sbb
int
jle
push
jns
adc
lret
and
mov
int
sbb
cmp
dec
mov
cmp
dec
sbb
nop
mov
jp
movsl
sub
jae
call
or
cmp
pop
pop
fcmovnb
loope
popa
xor
out
popf
push
leave
add
push
insl
cli
mov
ja
outsl
sarb
xchg
fisubrs
dec
xor
dec
add
jl
sbb
fcomps
imull
inc
mov
push
pop
jne
cmpsl
mov
out
mov
jbe
cs
sbb
jae
stc
shll
xchg
mov
or
mov
cwtl
or
adc
jle
push
fisubrs
call
or
mov
sbb
shl
lret
xor
inc
mov
imul
cwtl
lcall
lcall
add
push
test
or
std
cmpsb
outsl
fdivs
bound
outsl
stc
and
and
push
pop
mov
aas
subb
mov
test
push
xor
cmp
pop
fcoms
pop
xchg
stc
mov
out
mov
cmp
repz
inc
leave
inc
ret
inc
aas
add
aas
test
xchg
fadd
xor
shlb
mov
pop
daa
inc
and
test
sub
mov
xor
adc
sub
loopne
add
xchg
xchg
negb
push
xchg
ja
mov
mov
mov
and
lods
xor
int3
pusha
mov
cmpsb
fstps
hlt
jne
aaa
out
sbb
sbb
mull
paddsb
inc
add
jnp
adc
sahf
int3
dec
sub
lods
pop
mov
pop
shll
ret
addr16
repz
dec
pop
or
xchg
icebp
int
pop
xchg
rorb
inc
pop
fstl
out
clc
adc
fsubrl
pop
outsb
xor
aad
aam
popa
or
and
insl
mov
bound
pushf
movsl
sub
int
jp
movsb
dec
mov
les
and
cmpsl
add
cltd
loopne
pop
xchg
inc
sahf
or
cmc
mov
cmpsb
fidivrl
or
mov
test
ret
pop
cmp
push
cli
push
mov
cltd
sbb
and
add
or
and
sub
jp
sub
xor
popf
inc
in
lea
ja
cli
xchg
mov
lret
jge
fcoml
imul
test
xor
lock
dec
inc
out
adc
jnp
lretw
push
fidivs
sahf
jbe
jle
repnz
mov
movsb
fs
sub
cwtl
mov
inc
or
js
adc
adc
cmp
cmp
je
mov
insb
repz
or
sub
sti
testb
scas
lock
cwtl
lds
test
mov
add
fcoms
outsl
push
sbbb
negb
dec
lcall
xor
jb
adc
jns
nop
or
or
sub
mov
jg
mov
sarl
jb
inc
jbe
xchg
push
pop
inc
mov
adc
je
addr16
mov
icebp
dec
imul
lds
mov
push
cmpsb
fdivs
mov
cmpsb
push
outsl
fcoml
jno
in
lock
hlt
das
imul
imull
into
adc
xchg
in
mov
mov
xchg
jmp
dec
addl
mov
xchg
loopne
adc
loop
inc
xchg
fcoms
mov
push
adc
shrl
cmp
sbb
pop
jno
insb
mov
push
cmp
bound
xor
inc
out
xchg
pop
jae
push
and
push
cld
mov
adc
arpl
cwtl
enter
cmc
jge
push
lock
fsubs
js
or
lret
cmp
arpl
shll
mov
and
jb
gs
push
cs
pop
add
mov
mulb
or
clc
mov
jl
xchg
mov
jns
ja
push
scas
pop
cmpsl
sub
push
jns
repz
pop
add
ret
jg
inc
jno
xor
sub
outsb
inc
test
idivl
popf
cs
out
fs
mov
jmp
ret
in
add
dec
pop
aad
push
mov
add
and
adc
mov
popa
pop
dec
push
xchg
rcrl
xor
test
mov
movsl
out
sbb
xor
or
call
dec
lret
mov
xchg
imul
xchg
cmp
sub
push
xor
push
loope
mov
in
adc
lret
mov
in
sub
pop
loope
div
outsl
or
cmp
add
sbb
pusha
popf
out
insb
sbbb
data16
or
icebp
dec
cs
add
xor
and
fwait
jae
in
lds
mov
cmc
sub
lock
mov
mov
dec
hlt
or
cltd
sarl
jno
pop
sahf
fdivrs
sbb
mov
cmp
or
clc
cmc
nop
mov
cmp
push
and
popa
adc
adc
aas
fcmovnu
les
in
push
sub
test
pop
add
or
hlt
and
daa
ja
dec
sahf
pushf
popl
jb
cmp
adc
pop
jge
push
sbb
pop
ljmp
pop
inc
test
dec
mov
jno
js
popl
mov
sub
mov
lds
xchg
sub
adc
dec
mov
test
add
jb
or
mov
sub
jge
fwait
in
or
fcompl
rclb
jae
and
push
xchg
pop
aam
add
mov
fdivl
xor
lds
dec
dec
mov
ds
sbb
and
mov
pop
cmp
out
cmpsl
cmp
xor
mov
adc
test
pushf
std
mov
imul
fdivl
insb
add
loopne
lret
add
cli
push
cwtl
sbb
inc
cmpsb
push
and
xor
xor
fimuls
or
jbe
push
mull
mov
data16
sahf
mov
xchg
sub
inc
inc
push
mov
and
enter
push
cmp
mov
xchg
jg
into
xchg
dec
loopne
add
dec
addb
idivl
dec
cltd
cmpsl
imul
mov
sub
and
lahf
data16
xchg
icebp
add
adc
jnp
fbld
and
out
frstor
pusha
xor
fcmovbe
xchg
cmp
cmc
mov
test
jae
sti
loope
imul
lods
mov
xchg
aad
aad
and
ja
dec
outsl
out
outsl
test
mov
push
repz
scas
xorl
lcall
inc
jnp
jnp
insl
jno
adc
rcr
es
pop
jbe
daa
ss
sub
lds
cmp
push
pop
das
sub
xchg
popa
addr16
add
xor
inc
mov
sub
addr16
xchg
mov
pop
push
pop
insb
sbb
outsl
jae
movsl
or
push
xor
mov
and
push
pop
push
jbe
stc
sub
cmp
in
in
pop
orl
mov
xchg
cld
es
jno
hlt
cli
cmpsl
and
das
mov
je
jno
ret
test
out
add
jg
mov
in
xchg
xor
and
xchg
flds
rcl
mov
addl
xor
out
adc
mov
stc
jl
add
sarl
ljmp
mov
hlt
fwait
hlt
aad
xlat
mov
loopne
xchg
addr16
add
jmp
xor
push
dec
repz
mov
add
jbe
outsb
inc
fisttpll
in
orl
pop
cltd
dec
push
in
cwtl
dec
or
push
andl
es
mov
imulb
rolb
sub
or
fimull
sub
jae
mov
pop
or
out
push
mov
push
outsb
mov
mov
xchg
hlt
or
lahf
xchg
or
and
mov
rorb
sub
clc
adc
jbe
jecxz
xchg
sarl
lret
xor
mov
loope
inc
stc
jle
pop
xor
sub
mov
jno
dec
mulb
sti
gs
jecxz
or
faddl
je
inc
arpl
mov
pusha
mov
push
sub
sub
cmp
pushf
test
push
ret
stos
cmp
xor
dec
dec
xor
jb
xlat
sbb
jnp
hlt
mov
aad
into
decl
pop
xlat
int3
dec
xchg
xor
scas
sub
fidivrl
outsb
jg
lcall
dec
sbbb
or
sbb
into
arpl
or
mov
mov
xlat
and
pop
cmp
loopne
cmp
fisubrs
jno
jnp
addr16
scas
imul
les
xor
aaa
mov
hlt
fistpl
sbb
loopne
aam
lahf
enter
imul
mov
sub
shr
out
stos
fcmovb
fucom
adc
data16
lods
mov
cmp
xchg
ds
inc
lret
imul
lret
sbb
scas
mov
xor
jno
pop
jl
mov
es
das
dec
icebp
stc
sbb
shrd
push
jecxz
insb
fsubrp
sub
popa
lock
sahf
jbe
movsl
iret
call
sahf
mov
jg
lods
test
sbb
or
lock
and
ret
push
fdivl
cmp
scas
mov
shrb
rcrb
mov
out
xlat
mov
mov
out
mov
test
dec
or
adc
jmp
insb
nop
incb
sbb
pushf
lods
lds
pop
xchg
sbb
bound
inc
stos
repnz
es
stos
nop
ret
pop
push
ficoms
out
and
push
add
lods
sbb
sub
insl
lds
pop
into
push
ja
xchg
adc
cmp
into
cmc
mov
sub
scas
repz
lods
mov
sub
mov
rolb
std
cmpl
ss
add
mov
xor
ds
in
test
inc
les
jle
add
sbb
hlt
sub
pop
fnsave
add
pop
sbb
lods
movsbl
pop
movsl
mov
jne
mov
sub
in
lahf
pop
jns
je
repnz
sbb
ret
mov
mov
dec
xchg
mov
enter
daa
and
popa
movsb
fisubs
decl
jmp
and
add
rorb
stos
pop
dec
into
adc
lods
adc
xchg
add
xor
pop
jg
xor
xor
daa
push
xchg
dec
lods
cmpl
dec
inc
sub
adc
scas
or
add
adc
fiaddl
xor
add
ficoms
mov
das
hlt
pop
outsb
adc
dec
jns
je
jnp
ss
loopne
adc
pop
mov
xorb
rorb
push
push
cwtl
repz
push
jg
sti
aaa
mov
fbstp
jg
jmp
pop
mov
lods
xor
sbb
aaa
stos
cmp
jb
gs
in
push
mov
loope
scas
enter
mov
sbb
sub
sbb
and
or
or
pushf
fldt
add
fnstcw
cmpsl
dec
xor
movsl
out
arpl
daa
rcl
jg
ret
add
xchg
sbbl
or
pop
push
pop
lods
in
testb
inc
push
xchg
xchg
fistpll
outsl
ret
cltd
push
add
movsb
mov
jp
adc
and
fimuls
call
es
hlt
push
cli
fs
dec
scas
jmp
xchg
addr16
or
out
movsb
fmulp
sub
xor
mov
ja
cmp
sbb
mov
mov
mov
mov
jb
in
insb
stos
ret
loop
xchg
clc
lods
xchg
push
cli
push
inc
cmovb
iret
xchg
movsb
les
leave
sub
pop
ljmp
adc
sbb
test
das
les
leave
jmp
xor
rolb
test
out
and
es
mov
push
jle
in
adc
sahf
cmp
sub
mov
mov
lea
pop
mov
jns
pop
or
std
enter
or
cmovbe
add
fadds
sub
sbb
or
jg
fidivrs
cltd
jp
fsubs
div
sti
push
js
xchg
aas
cmp
cld
cmp
mov
rcr
dec
iret
les
test
test
test
jge
andl
andl
and
mov
dec
inc
stc
inc
das
xor
inc
iret
mov
leave
xor
mov
inc
decl
inc
mov
sbb
or
xor
jno
sbb
sub
push
and
jnp
movsb
lahf
repz
or
fmul
cmpsl
mov
adc
ds
lret
xchg
push
inc
push
jo
mov
adc
mov
or
mov
rorl
xchg
cmp
dec
push
fstpt
and
addb
stos
js
mov
fstl
mov
adcb
push
xor
jae
mov
cmc
rclb
mov
pop
fwait
jae
popf
pop
xor
movsb
adcl
inc
shl
repz
outsb
adc
cmp
popf
andl
loope
mov
lods
cmp
mov
mov
and
xchg
dec
jns
or
dec
daa
jns
out
int
fsubs
sbb
xorl
mov
jp
pop
cmc
xchg
dec
sbb
dec
jne
outsb
sbb
dec
adc
bound
test
xlat
fwait
cs
cltd
mov
sbb
dec
cmpsb
cmp
cld
xor
fidivrs
add
outsl
xchg
das
pop
leave
lahf
repnz
sar
xor
adc
cmp
lret
jo
mov
ljmp
sub
xchg
dec
jmp
cltd
sub
jb
cmc
loope
bnd
fistl
loop
mov
fistpl
sbb
test
inc
push
and
jnp
adc
sub
dec
dec
js
xlat
xchg
in
fs
add
sub
mov
js
stos
mov
cmp
in
cld
ret
push
mov
push
into
mov
and
and
fstl
jg
sub
xor
popa
xchg
sahf
and
mov
sbb
ljmp
into
aad
pop
mov
add
sub
sbb
inc
lods
inc
push
xchg
ljmp
test
das
mov
pop
inc
and
xchg
rcrb
test
imull
and
push
ss
test
pop
dec
or
cmc
jp
cmp
ret
cmp
inc
std
or
jp
stc
sti
pop
hlt
inc
call
bound
inc
int
or
in
sbb
lcall
push
iret
call
stos
ja
pop
inc
cltd
jmp
pop
bound
lea
test
icebp
sub
imul
ja
mov
insb
or
sbb
inc
fimull
rcrl
jb
xchg
adc
jne
popa
mul
add
jb
in
ret
jp
scas
xchg
push
mov
lea
insl
add
je
pop
adc
xor
mov
mov
ret
or
xchg
out
aam
jbe
js
push
cli
lcall
outsb
dec
inc
ds
rorl
jge
xor
cs
cmp
enter
add
push
or
push
ret
lcall
fcomip
scas
cld
gs
lcall
repz
into
mov
clc
push
or
int
call
jne
mov
add
inc
in
cmp
inc
cmp
jnp
clc
insl
dec
movsl
xchg
jb
xchg
lret
jb
aad
int
icebp
cmp
pushf
lret
js
les
xchg
inc
dec
aad
sub
cmpsl
fiaddl
icebp
stc
sbb
icebp
push
adc
sbb
leave
jle
in
xchg
adc
cmp
outsl
push
shl
lds
adcb
push
repnz
pop
cli
dec
stc
sub
lret
adc
mov
pop
lahf
call
testl
jb
or
sahf
cmp
repz
mov
sub
mov
mov
lods
xchg
add
pop
insb
gs
cmpb
and
xor
cmc
cmpb
test
scas
and
xor
ret
cmpl
pop
mov
mov
pop
int3
rorb
mov
sbb
arpl
sbb
scas
iret
jne
fidivs
loopne
sub
push
inc
mov
sub
iret
or
into
loop
and
ret
aaa
test
cs
imul
jp
in
jecxz
dec
mov
push
lock
sub
mov
inc
enter
mov
inc
jnp
sbbl
cmpsb
imull
cmp
int3
add
sub
mov
sbb
push
cmovl
pop
outsb
sbb
mov
dec
jns
jg
sti
ret
nop
or
shrl
fdivl
mov
popa
fisttpll
mov
scas
cmp
push
fcomps
push
cli
popa
fists
mov
xchg
dec
sahf
jecxz
sahf
int3
mov
ss
add
and
scas
arpl
fsubrl
ret
xlat
gs
ja
test
ret
mov
xchg
add
cmp
mov
fsubp
int
mov
push
dec
loopne
sbb
cld
lret
iret
pop
aas
out
push
jbe
lds
inc
mov
mov
cltd
jae
out
lret
mov
les
xorl
cmp
pop
ljmp
jae
dec
gs
cmp
leave
inc
inc
int
mov
and
and
pop
into
jge
add
fsubl
jae
xchg
cmpl
cmp
sub
jmp
lods
data16
pop
jle
adc
lahf
clc
fptan
leave
ficoml
in
je
sub
test
xchg
iret
call
adc
mov
cmpsb
in
loope
and
or
ret
dec
insb
pop
lock
mov
xor
mov
dec
fs
aaa
xlat
mov
fisttps
dec
mov
jp
sbb
stos
or
lea
mov
sub
rcrl
mov
std
dec
pop
pop
dec
pop
arpl
test
push
add
jns
jno
aaa
dec
and
add
or
cmpsl
xor
lret
cwtd
fs
lret
adc
or
lods
jg
xor
sbb
xchg
cmc
adc
pop
clc
ds
lahf
jl
mov
or
pop
mov
inc
dec
push
add
ja
adc
mov
in
mov
lret
pop
xor
add
sahf
jmp
sbb
popa
add
ret
sub
sbb
int3
push
js
and
cmpsb
or
jbe
and
pop
dec
mov
push
loopne,pt
vpmadcsswd
push
pop
sub
add
add
ds
jg
mov
aad
mov
sti
stos
test
in
adc
inc
mov
xchg
rcll
daa
enter
and
mov
nop
ja
fwait
adc
mov
test
test
and
sbb
aas
push
clc
and
adc
int
xchg
aaa
mov
lea
lock
sub
imulb
nop
mov
sub
mov
inc
rorl
xor
das
cli
push
or
insb
fxch
cmp
mov
out
int3
mov
lds
iret
or
shll
std
shlb
xor
or
faddp
pusha
out
cmp
stc
sub
jecxz
cmp
js
cs
aas
sbb
scas
out
in
sbb
loop
add
mov
add
nop
shlb
push
ret
add
lods
sbbl
push
jge
inc
iret
rcr
mov
mov
js
and
negl
out
out
fiaddl
push
inc
shll
lret
sbb
out
pop
xchg
jmp
push
cmp
cmpb
out
sti
mov
mov
jmp
ljmp
inc
add
push
cs
mov
add
out
pop
mov
into
xchg
lods
movsb
in
cmp
push
sbb
arpl
mov
push
add
jns
inc
xchg
inc
inc
stos
jle
sti
and
lock
sbb
jb
out
adc
loopne
out
fldt
dec
ja
lret
jmp
push
inc
and
fwait
lret
into
push
jg
into
add
out
inc
mov
ret
in
cmovl
incb
jmp
inc
mov
push
sub
mov
dec
bound
aas
or
jno
push
dec
sub
addb
ficompl
xchg
arpl
mov
dec
pop
pop
xor
pop
push
xchg
jno
dec
repnz
xorb
mov
fs
or
inc
push
lea
push
or
adcl
jecxz
pop
jle
or
ficoml
jmp
adc
xor
push
cs
in
stc
enter
into
cmp
stos
bsf
fnsave
loopew
outsl
mov
xor
cmp
cmp
add
ljmp
imul
push
xchg
mov
int
pop
add
adc
push
xchg
xchg
jge
sbb
mov
int3
xchg
fidivrl
jb
add
mov
mov
cmc
cmp
test
mov
dec
push
dec
xchg
push
push
stos
mov
lahf
insl
and
jno
negl
pop
mov
xchg
add
mov
mov
xor
les
jnp
add
arpl
or
cmpsb
cmc
idivb
scas
cmp
cs
inc
outsb
inc
sahf
ds
sbb
pop
fs
adc
aaa
frstor
lea
and
adc
in
mov
mov
movsl
inc
push
std
popf
pop
pushl
inc
sub
imull
fwait
xchg
icebp
nop
out
scas
aaa
inc
enter
sbb
jno
jno
popa
dec
sbb
das
dec
cmp
sbb
add
lods
and
cli
dec
in
lds
jge
sub
mov
inc
leave
lea
cld
mov
sbb
push
push
scas
adc
mov
jb
loopne
ret
in
aam
icebp
inc
loop
loopne
fsubr
jbe
add
xor
jns
pushf
mov
fcomip
fisttpll
std
data16
add
es
fs
std
mov
cmp
mov
and
outsb
push
stc
xor
mov
mov
cli
in
andb
or
mov
test
xchg
scas
sub
and
flds
lcall
or
jge
pop
fldcw
mov
cwtl
sete
inc
divl
xchg
or
aam
mov
inc
cmp
inc
mov
pop
jnp
cs
xlat
xchg
pop
lods
cmp
out
stc
fnstsw
or
xchg
or
and
jnp
shl
xor
ss
mov
fsubrl
data16
imul
std
in
js
xchg
xor
jmp
stc
shlb
int3
mov
mov
inc
ret
jle
test
mov
mov
gs
mov
stos
add
pop
push
in
mov
lock
dec
pushf
insb
stos
add
std
clc
or
mov
dec
add
cmpsl
test
inc
data16
push
rcrl
cmc
mov
add
popa
in
in
mov
pop
xchg
xor
pop
sub
adc
sub
xchg
popa
test
lret
out
popf
mov
loopne
call
faddl
orl
jge
mov
or
ror
sahf
add
add
adc
rcr
add
test
repnz
pop
cmp
ret
int3
decl
xor
outsl
out
jl
stc
shlb
xchg
jge
mov
sub
cmp
out
icebp
in
imul
cmp
push
xchg
pop
insb
cmp
lcall
mov
cld
xchg
inc
out
dec
push
imul
mov
dec
mov
loope
xchg
test
sub
movsl
add
fs
or
leave
mov
and
pop
cmpsl
daa
xchg
std
or
push
push
adc
inc
fnstcw
sbb
pop
adc
jnp
rol
inc
and
dec
hlt
rcrb
jb
mov
repz
push
cs
cmovno
or
and
mov
cmp
inc
add
arpl
mov
les
and
cld
and
or
cmp
out
cmp
xchg
jno
or
jl
mov
sbb
mov
dec
fucomip
popf
pop
inc
pushf
sti
int3
es
cmp
inc
aad
mov
data16
rol
sub
neg
xorb
loopne
pop
fucomi
cmp
sbb
bound
sbb
push
mov
js
jbe
sub
stc
push
or
add
mov
add
sahf
inc
cmp
sub
ret
pop
mov
iret
ljmp
loope
dec
cmp
dec
cmpsl
pop
dec
aam
ret
cs
sub
xor
add
push
mov
mov
xchg
call
iret
loopne
cs
mov
test
repz
outsl
fimuls
push
jl
push
sub
xor
sub
fldl
sub
sbb
and
fistpll
outsl
gs
mov
xor
out
xchg
cmpsb
ds
shrl
mov
jnp
mov
mov
pushf
push
mov
dec
or
and
add
jne
pop
lret
cmp
in
push
ja
in
pop
aas
xchg
mov
push
push
push
das
and
sub
or
ret
jle
or
inc
test
loopne
push
popa
jne
stos
cmp
ret
fidivs
pop
addr16
imul
and
and
cmpsb
pop
sub
sub
lods
mov
push
aad
xchg
std
push
addr16
out
arpl
adc
add
mov
mov
xor
in
lods
or
push
or
sbb
outsl
push
dec
mov
shrl
in
loopne
cmpsl
jge
into
mov
outsl
popf
stc
mov
sub
rcl
pop
into
dec
pop
jmp
mov
vphaddbw
int3
sub
jb
loope
jmp
add
aaa
js
shlb
push
popa
pop
push
or
or
mov
icebp
int
add
mov
lock
adc
pop
nop
js
dec
aad
out
outsl
lock
dec
and
mov
jo
pop
out
decb
dec
std
mov
ror
in
outsl
and
loopne
call
loopne
sub
stos
enter
pop
cmpl
mulb
adc
aas
lods
sub
or
sbb
xchg
je
push
cld
push
mov
mov
add
or
sub
icebp
inc
sbb
sahf
jnp
inc
xchg
aam
xlat
sbb
xor
dec
shrl
lret
sub
push
adc
xchg
push
xor
mov
mov
cld
inc
xchg
loopne
hlt
pop
jl
sahf
nop
je
mov
push
push
inc
aam
push
lret
xchg
or
or
mov
pop
push
add
shlb
ret
mov
std
iret
outsb
jge
cltd
xchg
mov
mov
inc
out
nop
sbb
sbb
scas
ljmp
icebp
out
mov
loope
sub
dec
mov
shlb
xchg
out
shll
outsb
push
jb
and
loopne
push
mov
mov
add
jbe
pop
mov
ja
rol
inc
or
das
xor
pop
dec
dec
outsl
data16
pop
inc
lea
and
sbb
mov
add
js
dec
scas
rcll
jns
out
jp
aas
fsubr
pop
lret
sub
jae
dec
mov
cmp
mov
push
inc
popa
fldt
ljmp
insb
xlat
movsl
xor
les
scas
pop
dec
loope
sti
je
xor
fsubp
inc
loop
xchg
add
and
pop
xor
leave
jb
dec
inc
pop
mov
aas
outsb
outsb
pusha
lea
not
rcrl
and
mov
fiaddl
mov
imul
cmpsb
sahf
dec
cli
sub
sahf
push
popa
loopne
aas
loope
rcll
mov
call
or
js
jp
test
xchg
roll
mov
lock
in
jmp
sbb
or
js
sahf
lds
xchg
fldl2e
mov
loopne
jl
sbbb
xlat
sbb
inc
mov
out
cmp
sub
add
rcr
xchg
stos
cld
rclb
je
jmp
insb
insl
lret
mov
rclb
cmc
mov
ror
stc
hlt
xor
pop
insb
aaa
in
call
add
mov
outsb
out
mov
call
js
mov
sahf
jne
adcb
cmp
xor
pop
jg
xor
loope
stos
cmp
inc
out
push
sbb
mov
pop
inc
dec
push
cmp
add
jle
mov
scas
fwait
pop
push
fldenv
or
cmpsl
call
stos
xor
and
in
cmp
les
lds
adc
imul
fs
xchg
cmp
ror
sbbl
or
pusha
pusha
lods
inc
push
cmp
sti
loopne
movlps
sbb
jb
jmp
pop
subl
sbbb
movsb
sub
sti
add
test
xchg
mov
clc
aaa
mov
movb
xchg
lods
test
cmp
pop
xchg
xchg
pop
dec
pop
or
aaa
pop
stos
inc
pop
push
neg
dec
cli
jne
push
pushf
dec
cltd
shll
sti
jl
pop
aaa
fwait
sbb
ja
cmp
cmpsb
lds
pop
or
xor
mov
js
out
sarl
push
mov
or
xchg
addb
cmp
cmp
xchg
fcmove
loop
push
push
nop
lods
lret
dec
icebp
xlat
inc
int
pusha
addl
aam
icebp
and
adc
pop
lret
icebp
mov
cli
dec
ret
inc
outsb
mov
jl
mov
es
lret
lret
pop
cmp
hlt
out
das
adc
cmp
sahf
or
pop
pop
lods
inc
adc
xor
leave
mov
test
in
inc
and
push
mov
lock
push
jo
mov
mov
lahf
mull
fsubs
inc
aam
mov
mov
out
clc
pop
lock
mov
loope
adc
mov
enter
ss
sbb
and
xor
jo
insb
fsub
xchg
lea
inc
lods
xchg
jae
xor
mov
mov
push
nop
adc
dec
jge
mov
inc
mov
sbb
xchg
jnp,pt
sti
dec
xchg
xor
cwtl
sbb
shrl
mov
fcmovu
mov
sub
adc
stos
testb
jge
stos
lahf
iret
and
out
cs
mov
lods
stos
imul
xor
ret
mov
cwtl
or
jmp
push
outsb
les
cmp
leave
ljmp
jecxz
call
mov
sbb
sub
sub
fs
enter
mov
mov
xchg
test
push
es
pop
mov
fldpi
sub
addl
lcall
enter
mov
xchg
in
mov
push
mov
outsl
adc
dec
jge
push
jnp
lret
adc
fs
push
sub
test
mov
lods
or
cmp
sbb
lods
into
and
in
mov
loop
int3
ja
fiaddl
xchg
jb
fs
ss
data16
sti
jecxz
aam
sbb
push
dec
push
sti
imul
lahf
pop
mov
shl
xchg
leave
test
jg
fbstp
or
popf
push
in
cld
sbb
testl
dec
sbb
jno
call
movsb
add
jmp
inc
pop
dec
fstps
push
inc
mov
mov
pop
mov
int3
sbb
mov
aam
dec
enter
notb
sub
add
or
xchg
lock
inc
aas
xchg
dec
mov
fs
gs
cli
mov
jns
adc
or
sub
pop
sub
xchg
mov
cmc
out
dec
push
xchg
sbb
pop
xchg
mov
mov
lret
cmp
pop
pushf
or
inc
dec
add
cltd
mov
shlb
jmp
scas
or
mov
dec
push
xor
insl
in
add
repz
push
pop
cmp
and
pop
push
jo
testl
call
in
inc
cmp
jns
mov
add
arpl
bound
xlat
fldt
das
scas
into
imul
pop
push
mov
enter
ror
ret
mov
mov
pop
xor
mov
bound
adcb
mov
xor
bound
popf
and
daa
pop
std
out
xchg
pop
lahf
imul
pop
lcall
daa
movb
add
fidivs
push
jne
or
mov
push
sahf
xor
lcall
mov
pop
inc
jecxz
cmp
imul
ds
inc
add
loope
mov
jmp
gs
or
testl
and
push
lret
sub
lahf
test
daa
dec
pushf
mov
or
pop
xchg
mov
icebp
lods
or
xchg
jae
and
ja
movsb
inc
hlt
and
cwtl
mov
cmp
xchg
push
cmpsl
add
scas
adc
cmp
and
repnz
cmp
test
and
lret
inc
mov
fstpt
add
inc
or
adc
mov
or
dec
mov
jge
or
imul
cmc
mov
pushf
xchg
push
imul
adc
pop
in
jmp
outsb
aam
or
lock
or
nop
repz
stos
aad
add
outsb
cs
xchg
pop
xor
push
pop
ja
xchg
pop
inc
sbb
mov
outsl
jmp
ret
cmp
adc
jl
pop
in
iret
test
pop
lret
xor
adc
lods
cmp
sahf
mov
or
fsubl
xchg
lea
fwait
pop
jnp
dec
xor
div
das
push
push
inc
clc
mov
scas
pushf
jno
cmp
ljmp
mov
push
mov
cli
stc
shrb
cltd
arpl
out
push
and
push
mov
inc
movsl
scas
adc
and
fstpt
mov
int
cs
mov
pop
std
adc
mov
push
fst
hlt
sub
mov
data16
pop
jne
pop
pop
ja
mov
cltd
mov
test
test
repnz
or
adc
mov
xor
fwait
outsl
jns
cmpsb
jo
movb
fcoms
fisttpll
dec
gs
xor
test
cmp
mov
inc
cmp
jb
cs
xchg
imul
xchg
xorl
sbb
imul
faddl
jno
imul
int3
pop
pop
xchg
mov
adc
and
cmp
push
jl
in
jo
sbb
jge
out
mov
sarb
and
and
jl
icebp
mov
imul
pusha
imul
movsl
mov
psubq
xor
gs
or
sbb
outsl
jle
lods
or
sbb
mov
pop
clc
push
aas
or
ljmp
testl
fsubs
pop
jae
fidivrl
sbb
add
add
pop
jo
fiadds
xchg
sti
sahf
int3
mov
or
aaa
std
xchg
xor
mov
mov
lret
sbb
xchg
add
pop
jg
ljmp
mov
loop
sbb
aas
cmpl
mov
shrb
shlb
adc
repnz
int
push
and
mov
sbb
popf
paddw
sbbl
ja
adc
add
and
sahf
es
cwtl
mov
imul
clc
stc
mov
enter
shr
pop
icebp
gs
shrl
pop
cmp
jge
mov
aas
or
inc
enter
fwait
sub
pop
or
rcrb
sti
pop
call
lahf
jne
cmp
jae
mov
or
xor
dec
jge
mov
out
loop
xchg
dec
movsb
push
das
imul
imul
push
xlat
jae
mov
inc
clc
sub
push
mov
cmc
sti
movsl
leave
inc
pop
popf
xor
cmp
or
decl
pop
inc
test
cli
mov
daa
or
or
jecxz
icebp
jb
outsl
xchg
in
or
scas
jle
sub
aas
sbb
dec
scas
aas
xor
fsubrs
dec
adc
mov
nop
xor
fists
shll
xor
mov
into
and
loop
sub
in
adc
inc
lea
jecxz
push
sub
jp
cltd
push
pop
xchg
outsb
add
jle
sub
add
xchg
shrb
mov
mov
stc
dec
jns
out
jge
outsl
mov
movsl
mov
xchg
repnz
cmp
shll
bound
xchg
dec
ds
mov
leave
add
leave
cld
add
clc
pusha
add
das
cmp
mov
cs
in
xor
jge
lods
push
aas
dec
lods
mov
cmp
xor
jg
or
xchg
or
hlt
and
test
xor
mov
test
dec
jecxz
and
jnp
jmp
mov
pop
pop
fisttps
into
inc
sbb
mov
fadd
rorb
dec
mov
sbbb
xchg
jnp,pt
push
rcrb
pushf
shr
add
mov
sub
mov
push
nop
arpl
adc
cmpsb
movb
xchg
add
packuswb
andl
out
jno
sar
cld
stos
arpl
cmp
push
ret
cmp
sub
fwait
and
mov
aad
mov
shrl
sbb
mov
sub
and
hlt
out
stos
and
outsb
pop
cmp
cmp
inc
and
fstpt
jecxz
cli
mov
mov
outsb
out
and
xorb
push
psubsw
sbb
in
add
pop
pushf
adc
xor
out
cmp
adc
mov
scas
cmp
push
shrl
movsb
nop
lods
add
ud1
aaa
iret
inc
aam
pop
mov
inc
push
mov
lahf
imul
mov
or
jl
cs
xchg
mov
xchg
sub
sub
lret
subl
out
rorl
pop
out
repz
push
sbb
rol
push
addr16
in
popa
mov
jg
and
decb
xchg
mov
mov
inc
cmpsb
jle
test
lret
subb
enter
cmp
adc
mov
fisttpl
dec
xchg
sub
and
and
xor
inc
pop
ret
adc
pusha
dec
test
xchg
jecxz
fcmovnu
icebp
mov
fidivl
mov
adcb
js
push
pop
cmpsb
fwait
stc
cmp
call
jp
fwait
das
mov
popf
push
pusha
sub
jno
and
pop
cli
incl
mov
push
dec
push
cmp
mov
int
cmp
es
mov
lock
xor
nop
xchg
cmpb
jo
cli
cli
jp
mov
push
sub
push
int
add
mov
in
mov
rcll
adc
sub
jmp
jg
sti
inc
mov
xchg
jge
jb
int3
cmp
shlb
aad
inc
rcll
popa
sub
add
mov
fists
xchg
stos
jnp
stc
aas
imul
cmp
xchg
shll
test
shrl
subb
cwtl
pop
inc
lods
out
push
xchg
jo
ret
adc
mov
insb
mov
cmpsb
cmp
imul
loop
cmpl
in
cmpsl
ret
lods
jp
pop
aad
cmp
adc
adcb
decw
inc
sub
or
xchg
int
xor
pop
jp
loopne
mov
pushf
jae
mov
xchg
imul
lods
dec
addr16
adc
add
fldcw
jns
sarl
inc
dec
ret
gs
test
lds
adc
test
les
dec
test
nop
fiaddl
xor
lods
hlt
stos
es
out
push
xchg
add
lret
and
nop
popa
dec
lret
xchg
lds
inc
cld
pop
mov
cmp
mov
push
push
pop
xchg
das
repnz
fsubrs
cmp
or
sbb
fisttps
pushf
mov
pusha
addr16
push
push
mov
ljmp
scas
jecxz
rcrb
mov
loopne
xor
and
fstps
xchg
sbb
orl
inc
imul
loop
adc
add
sub
add
decl
pop
test
adc
push
push
xchg
imulb
jo
shrl
sahf
imul
lock
in
push
icebp
out
pusha
xor
and
push
mov
mov
dec
jg
loop
mov
les
cs
lahf
jb
mov
xor
out
inc
in
out
add
pushf
sbb
repz
lds
ja
add
cmp
and
and
mov
pop
inc
xor
adc
pop
mov
dec
hlt
xchg
sbb
movsl
aam
shr
xor
popf
icebp
mov
arpl
cmpl
adc
aad
push
test
jne
jmp
jp
cmp
push
jno
fcoml
inc
setno
movsb
ficoml
pop
ljmp
fistpl
and
loopne
jb
mov
pop
lods
dec
les
inc
aam
sub
cli
cmp
jge
xor
xor
push
dec
sub
inc
sbb
sbb
mul
shlb
es
rorl
sbb
xchg
xchg
lret
xor
jns
xlat
iret
push
jg
jbe
jl
jl
insl
or
dec
cld
shrb
out
push
push
mov
lods
arpl
or
cmp
adcl
adc
test
and
lret
inc
push
pop
fadd
pcmpeqb
mov
lret
jne
sub
ror
mov
faddl
sbb
mov
in
sbb
movsl
jl
mov
icebp
and
push
add
ljmp
inc
cli
jb
mov
loope
shlb
lock
les
dec
push
ret
gs
push
es
adc
jae
and
into
out
xchg
inc
xorl
cs
dec
pop
push
push
cmp
cmp
lahf
mov
push
jp
add
jns
mov
mov
faddl
mov
std
mov
sub
sbbb
xor
enter
lods
ret
add
cmpsb
xor
xor
rcrb
cmpsl
insb
scas
and
repnz
cmc
popf
jmp
fildl
aad
mov
in
adc
imul
push
fs
ss
xor
pusha
cs
fsubr
sub
push
sbb
mov
sub
scas
scas
test
fidivl
fs
pop
lret
cmpsb
fidivl
adc
ja
mov
fidivrl
mov
sbb
sub
xchg
pusha
pop
push
adc
pop
or
test
mov
loope
add
xchg
mov
lods
outsl
and
out
subl
jmp
jmp
ret
inc
cmpsl
scas
bound
in
mov
mov
movsl
aad
hlt
pop
testl
dec
je
andl
xor
mov
test
in
push
dec
test
pusha
inc
pop
movsl
hlt
test
mov
jns
cmpsb
insl
cmpsb
jo
cmp
sub
xchg
mov
scas
jns
pop
push
adc
test
addr16
cmp
jge
ror
cs
lahf
pop
rol
jno
pop
inc
pop
mov
daa
test
push
jne
fldt
inc
test
pop
fisubrs
cbtw
cmp
adc
scas
incl
lret
mov
cmp
and
shrb
xor
mov
out
dec
add
and
jg
mov
clc
dec
aas
xor
inc
ret
repnz
testl
loopne
fisubs
sar
push
ljmp
push
ljmp
cmpsl
cmp
roll
mov
rcll
popf
dec
sub
test
lea
xchg
loop
movsl
adc
stos
sbb
mov
inc
aam
rorb
mov
jne
inc
push
cs
pop
xchg
cmp
pop
dec
les
mov
cmp
push
test
jno
push
push
or
das
daa
movsbl
aad
lcall
das
mov
jge
pop
pop
gs
push
mov
bound
xor
xchg
cmp
push
cli
jmp
cmp
adc
adc
pop
sub
out
sub
xor
push
mov
or
lahf
sub
pop
jg
in
jno
lahf
push
add
mov
jecxz
mov
lds
or
pop
mov
cmp
adc
mov
lock
sbb
jp
add
adc
xchg
les
movsb
ljmp
loope
jae
adc
cmp
jns
jmp
pop
or
pop
stc
inc
push
fimuls
mov
sti
lock
rep
pop
sarl
sbb
fsts
mov
xor
sub
pop
and
ljmp
hlt
sub
fsts
push
xchg
jle
mov
pop
push
cmpsb
andb
dec
sub
pop
push
scas
add
sbb
lret
add
bsf
jae
imul
cmp
mov
inc
test
push
fldt
or
lods
jno
dec
orl
sbb
test
sbb
cmpsl
insb
adc
push
pop
mov
sub
sbb
fidivrl
xchg
or
jp
rorl
movsb
shlb
pushf
movsb
out
pop
add
imul
mov
jp
lea
push
or
push
iret
outsl
call
pop
add
fs
jns
lock
and
pop
popl
cmpsb
and
scas
adc
cmpsl
jo
inc
xor
mov
sub
push
adc
xor
loope
dec
sub
or
jbe
mov
aas
cmp
sahf
ret
mov
pusha
repnz
jle
icebp
stos
lahf
add
mov
sub
shll
pop
jmp
pop
pop
popf
and
adc
rolb
icebp
dec
xor
pop
test
imul
xchg
es
cmp
bswap
outsl
push
cmpsl
sbb
inc
nop
out
stos
scas
rorl
out
mov
mov
nop
ljmp
push
jge
push
sbb
arpl
call
mov
stc
mov
pop
stos
push
out
add
test
das
or
sbb
leave
pop
jmp
mov
scas
in
fwait
stos
inc
mov
in
add
push
cs
mov
popf
mov
mov
sbb
xchg
add
inc
dec
in
imul
in
cltd
popa
adc
in
mov
scas
adc
mov
repnz
idivl
outsl
loopne
ljmp
add
gs
out
sub
fsubs
test
push
lds
repz
dec
leave
bound
mov
sti
push
jmp
or
push
sub
out
and
xor
jns
stos
lods
aas
sbb
nop
std
push
rolb
jge
flds
jle
mov
sbb
mov
jns
scas
dec
mov
pmuludq
push
push
out
mov
les
es
dec
das
push
outsb
add
pop
dec
push
push
aad
leave
jmp
or
fsts
adc
lea
mov
mov
add
push
nop
mov
push
movsl
pop
mov
and
mov
daa
sub
je
xchg
ret
lods
cli
insl
adc
xor
fdivrs
data16
out
imul
push
fmulp
and
xchg
out
mov
mov
in
test
test
jp
andl
mov
mov
imul
std
rorb
push
fldt
mov
jo
mov
push
stos
in
in
test
xchg
clc
shlb
rolb
mov
xchg
mov
lea
loope
and
call
or
jp
lock
push
imul
cltd
and
mov
adc
out
add
ret
shlb
hlt
ss
jbe
mov
jg
jnp
or
push
mov
stos
xchg
xchg
std
out
push
in
pop
sbb
and
add
pop
jnp,pn
mov
inc
fisubl
pop
mov
or
lods
jno
xchg
mov
jbe
mov
call
dec
arpl
in
das
adc
cmp
mov
xor
mov
add
jmp
cli
xchg
and
fmull
sbb
xchg
jo
jne
ret
adc
mov
rcrb
xor
cmp
jo
inc
jo
movsl
lcall
sarb
xor
and
in
pop
orl
sbb
imul
push
mov
movsb
pop
sub
pushf
dec
adc
aam
out
push
push
inc
adc
mov
lcall
lahf
fdivrs
xchg
sbb
icebp
loopne
xor
fwait
cmp
sub
mov
cmpsl
jp
mov
movb
pop
dec
inc
sub
test
xor
and
pop
in
rclb
cli
sbb
aad
popf
pop
out
mov
and
pop
push
repnz
cmp
stos
sub
sti
mov
pop
fcoms
daa
scas
push
jne
sahf
push
aad
aam
mov
test
xor
packssdw
push
int
cli
repz
xchg
adc
pop
dec
adc
hlt
inc
int3
push
pop
in
ret
and
nop
or
loope
jnp
push
fsubrl
in
fdivrs
out
sti
test
mov
push
xor
push
testb
mov
or
test
arpl
sub
mulb
outsl
jecxz
cmp
jg
cmp
inc
aas
cmp
stos
mov
sahf
mov
call
icebp
shlb
xchg
inc
adc
xchg
rcl
mov
push
mov
mov
inc
mov
stos
sbb
scas
xor
pop
cmp
orb
inc
rolb
mov
xor
icebp
or
xchg
add
dec
lds
test
insb
dec
jle
xchg
jp
dec
xor
jns
jno
mov
cltd
cmpsb
dec
clc
out
lock
push
mov
cmp
jbe
loopne
push
sbb
cwtl
lcall
jmp
push
inc
jecxz
xchg
add
pop
xchg
add
ret
xchg
xor
loopne
jp
push
xchg
push
push
out
dec
ss
and
mov
dec
push
sahf
es
fstp
mov
out
jecxz
fcmovu
std
fistps
dec
xchg
sahf
lock
lcall
mov
or
jbe
inc
cs
sub
fs
or
add
push
movsb
xor
sahf
xchg
mov
push
cmpsl
mov
pusha
push
lea
jno
test
dec
push
mov
cmc
push
mov
jae
jle
mov
mov
dec
lret
pop
bound
jge
xor
cli
arpl
loopne
xchg
movl
addl
clc
repnz
js
ret
movsl
test
inc
mov
cs
xchg
jp
adc
sbb
pop
add
and
lods
mov
or
ret
lods
gs
in
lcall
pop
leave
sahf
aad
xor
fcmove
int3
pop
ja
rclb
jecxz
fcoml
arpl
aaa
in
nop
inc
add
js
cltd
add
fcmove
ret
sbb
insl
mov
in
ret
je
cmp
and
ss
and
mov
clc
aad
inc
movsb
in
add
sub
jns
loopne
dec
dec
icebp
clc
push
and
rcll
dec
pop
inc
fdivrs
xor
push
scas
sahf
inc
cmp
stc
dec
xor
jo
icebp
xor
push
mov
movsb
jecxz
out
sub
out
movsb
inc
push
pop
push
leave
jae,pn
mov
and
bound
jmp
sahf
pop
ret
xor
mov
imul
or
mov
mov
push
out
dec
mov
pop
pop
jge
and
add
adc
lods
sub
and
xchg
lods
dec
xor
or
imul
js
iret
push
iret
or
pop
in
ffree
lock
pop
push
in
cmpsl
xchg
add
std
imul
lds
and
jne
popf
loopne
popf
add
pusha
sbb
and
jo
movsb
lcall
mov
fdivp
sahf
mov
cmp
dec
lahf
cmc
or
sbb
mov
dec
push
outsb
adc
pop
mov
ljmp
jo
aaa
jg
dec
lahf
xor
fs
xor
fwait
pop
sub
insl
lea
insb
inc
fwait
subb
sub
ja
fistpll
jecxz
push
bound
lods
neg
out
ja
mov
pop
pusha
stos
pop
xchg
push
insl
sbb
lret
sbb
ss
push
les
xchg
or
nop
lahf
arpl
cmp
push
mov
das
roll
in
sbb
xor
push
adc
subb
lcall
clc
jl
sub
dec
das
mov
mov
cmp
sub
ds
mov
mov
inc
mov
and
mov
stc
shl
cmp
jne
ja
enter
dec
aam
mov
scas
mov
xor
inc
mov
jns
xor
or
or
sbb
es
iret
push
sub
pop
int
jg
pop
mov
push
fcmovnbe
aam
mov
hlt
cmp
imul
mov
sub
push
enter
push
int
push
je
push
cmp
add
fidivl
pop
fs
cmp
push
adc
rcl
jne
push
std
test
fidivs
xor
test
pushf
add
lods
inc
in
loopne
jle
out
loope
inc
jb
inc
sbb
or
inc
out
lock
and
ss
ljmp
jecxz
push
data16
push
mov
jae
mov
negl
stc
mov
xchg
lea
pop
dec
xor
jle
xchg
dec
jb
push
leave
push
imul
adc
fbstp
gs
pop
in
lds
idivb
enter
jmp
dec
andb
cwtl
xchg
inc
push
pop
fldt
bound
push
or
aad
movsb
jmp
out
sub
xchg
repz
push
sub
cmp
pop
int
pop
andl
cmp
or
inc
mov
lds
leave
loopne
lahf
inc
or
mov
pop
lds
fdivrl
dec
or
mov
rcll
test
xchg
call
sub
jmp
cwtl
imul
xchg
cmp
imul
fdiv
out
hlt
mov
push
daa
mov
push
movsl
cltd
test
push
xchg
cwtl
idivb
bound
fimuls
jmp
lcall
xchg
lret
cwtl
stos
fdivs
lods
ficomps
push
ret
mov
addl
jle
push
and
scas
xchg
fidivrl
inc
xlat
in
add
aam
mov
outsb
fwait
adc
cld
add
push
in
jb
test
incl
adc
dec
loopne
sti
dec
into
sahf
movsb
mov
sbb
out
mov
sbb
mov
mov
pop
popa
or
adc
lds
lret
movsl
jge
jns
jnp
lock
pop
and
shll
data16
jne
xchg
into
es
mov
xchg
gs
inc
sbb
inc
dec
push
mov
aad
jb
xchg
sub
mov
jb
dec
jle
notb
dec
mov
ss
mov
sti
js
std
leave
mov
sub
aad
cmc
pushf
jno
push
lock
cli
add
lods
cmp
ds
sahf
pop
pop
loope
mov
popa
or
jge
push
jle
adc
inc
mov
jg
fwait
jp
insb
mov
leave
aas
jp
enter
sti
sub
mov
push
daa
popf
movsb
ds
shll
lahf
inc
and
fstpt
cmp
push
sbb
test
sbb
xlat
fistpl
dec
push
aad
push
sub
imul
pop
jne
enter
xor
ja
stos
inc
mov
mov
mov
bound
aam
jle
jno
lods
dec
fdivp
mov
dec
test
in
lds
popf
inc
cltd
or
jbe
inc
sub
enter
fisttpl
mov
movsl
or
mov
cltd
ds
subb
ficoms
js
das
sbb
sahf
dec
lret
scas
mov
aaa
fistps
test
scas
fwait
test
hlt
xor
fwait
adc
popf
shlb
test
rclb
mov
push
stc
pop
ds
shr
mov
pushf
inc
fcomip
sub
xchg
pop
cmp
int
lcall
pop
icebp
cltd
mov
cmpsb
fidivs
test
xor
mov
rcll
pop
call
popl
loop
loopne
cmc
clc
xchg
cli
sub
cs
jl
jp
jle
lret
lahf
dec
inc
xor
bound
cmp
xor
stc
sub
fildll
inc
xor
icebp
cmp
push
std
xchg
lret
fsub
call
fistl
imul
insl
fwait
mov
and
lahf
lret
or
mov
shll
dec
ficomps
out
and
push
adcb
inc
dec
or
pop
and
scas
inc
push
push
rcl
fstps
mov
fnstsw
ja
sbb
outsb
or
sbb
cld
xchg
or
int3
and
int3
mov
ficompl
mov
cltd
mov
arpl
and
pop
cmp
mov
ss
outsb
test
fistps
push
test
sub
out
pop
mov
insl
scas
and
jae
loopne
outsl
inc
sub
mov
sbb
sub
cmp
popf
popa
aam
push
mov
jb
mov
pop
xlat
mov
push
jge
adc
pop
pop
pop
and
inc
xorl
ss
mov
jns
js
cmp
movb
push
xor
mov
int3
out
or
pop
push
add
jge
sub
int3
jmp
aas
aad
addr16
shl
mov
mov
xlat
mov
jmp
fdivrp
dec
ret
xchg
adc
into
add
jge
sbb
out
aas
push
mov
int
mov
fdivrs
jb
sub
fldl2e
hlt
cli
cmc
or
enter
shlb
jb
popf
mov
ret
test
subb
jbe
mov
xchg
out
enter
jg
lcall
cmpsl
or
stc
mov
fcmovnbe
ds
and
push
test
mov
cmp
ljmp
int3
inc
lret
outsl
insb
pop
or
pop
mov
dec
inc
arpl
mulb
aad
icebp
push
dec
aam
popa
loopne
dec
dec
mov
subb
xchg
sub
or
push
adc
fbld
and
cmp
cmp
cmc
inc
sbb
mov
mov
adc
and
and
movsl
and
pop
push
push
xor
mov
push
pop
sbb
je
idivl
mov
mulb
push
icebp
sub
jmp
cmp
mov
jb
into
addb
cmpb
jns
adc
jg
dec
mov
mov
sbb
lods
inc
rclb
and
mov
fdiv
ror
popa
sbb
jmp
add
js
and
add
jno
dec
dec
stc
fmull
and
mov
push
cmc
fstpt
mov
mov
stc
mov
jns
adc
dec
stos
sub
stc
sub
cmpb
mov
and
or
scas
xor
iret
push
mov
pop
inc
jg
add
mov
fscale
nop
rep
fidivrs
mov
pop
arpl
nop
push
pushf
sub
sub
inc
mov
cs
push
mov
mov
or
sbb
mov
adc
lcall
cmp
data16
bnd
lods
in
push
dec
push
repnz
mov
loopne
xor
cmpsb
stos
insb
div
int
jae
fwait
jns
mov
dec
scas
jge
incb
mov
mov
rclb
ret
jnp
fstpt
mov
sbb
dec
cmp
xor
add
les
xchg
out
adc
out
xchg
out
sbb
pop
rolb
dec
lar
and
lds
ja
ret
jge
jno
jbe
lcall
outsl
inc
inc
jp
mov
inc
roll
cmp
xor
fwait
xchg
mov
ret
sbb
ss
test
or
inc
loop
shr
ljmp
subb
mov
add
insl
mov
push
mov
sub
rorb
mov
outsb
mov
mov
sub
inc
lods
cmpsl
cmp
add
andl
dec
fnstenv
push
adc
xor
ret
rcl
pop
ret
adc
pop
cmp
test
stos
cmp
les
int
test
mov
xrelease
mov
mov
scas
mov
popf
cmc
mov
mov
jnp
call
xlat
sub
xor
mov
ljmp
mov
mov
add
fsubp
ljmp
add
cmp
fstl
fsubrs
rorl
jle
gs
in
cli
std
cmp
aad
xchg
and
sbb
mov
pop
and
xor
cmp
jp
add
mov
mov
jecxz
jb
aad
mov
rol
cmpsb
cwtl
sub
lret
or
pusha
jnp
add
test
call
sti
insl
shlb
addr16
mov
ds
mov
push
push
les
cmc
add
cltd
mov
mov
loopne
or
repnz
popf
pop
adc
in
jg
xchg
cmp
mov
test
sbb
arpl
call
mov
mov
dec
xor
iret
push
mov
mov
jge
fsubrl
popf
stc
sti
aad
adc
cmpsl
mov
mov
in
into
dec
push
xchg
and
adc
cmpsb
add
loope
and
xchg
repnz
lods
enter
fadds
das
adc
pop
mov
cmp
jmp
adc
add
push
pop
inc
fxch
cmp
mov
jp
adc
mov
inc
repnz
mov
pop
ret
jle
mov
insl
es
cmc
jmp
insb
lcall
nop
jns
arpl
xchg
push
cmp
jle
scas
pop
cmp
sub
pop
xchg
imul
mov
comiss
xor
movsb
sarl
cmp
pop
nop
jl
and
sar
addr16
loopne
adc
xchg
xor
xchg
cwtl
popa
outsb
pop
or
pop
cmp
fcompl
sarl
mov
sub
xor
cwtl
shrb
pop
adc
cwtl
pshufw
lds
jge
jae
daa
mov
inc
pop
dec
xchg
xchg
inc
ds
test
mov
pop
int
imul
jo
xor
xlat
or
nop
xchg
cltd
lock
sub
or
shll
mov
mov
mov
stos
mov
jl
jmp
bound
fcmovnu
scas
mov
dec
sub
dec
enter
popa
repz
pop
sbb
mov
inc
sbb
je
fbld
xchg
mov
nop
pop
add
pop
push
fisttps
sbb
mov
sbb
jg
or
shrl
imul
cli
mov
add
and
adc
or
add
bound
divl
xchg
mov
dec
aas
cmpsl
jecxz
aaa
pop
arpl
dec
ja
lea
mov
cld
stos
stc
add
test
mov
sub
xor
mov
xchg
pop
imul
lret
xlat
adc
loop
mov
mov
push
fmull
sub
out
mov
pusha
das
inc
or
fcomp
pop
xchg
test
mov
push
scas
arpl
mov
out
xor
cmpsl
inc
cmp
xlat
fmuls
push
push
rcll
stos
loopne
pop
out
inc
lahf
movsb
pop
inc
pop
and
cltd
lret
push
sub
jb
loopne
std
or
xor
jo
cmp
pop
mov
sub
movl
sti
fwait
inc
pop
cmp
popf
cmp
les
lods
pop
out
push
mov
mov
jae
pop
dec
dec
mov
sarb
cltd
cmp
cmpsb
add
popf
xor
je
fs
xchg
outsl
jle
xchg
adc
sarb
push
dec
add
cld
cmpsb
dec
and
imul
sbb
and
addr16
xor
sti
lret
and
dec
lcall
mov
mov
pop
imul
imul
iret
imul
and
xchg
cmp
repnz
outsl
cmc
lret
xchg
cli
hlt
stos
bound
mov
enter
and
jb
mov
push
inc
pop
out
jbe
or
mov
scas
lret
xchg
jge
fldcw
ljmp
lcall
sub
dec
mov
aam
add
andl
inc
nop
jmp
cltd
add
je
dec
mov
lahf
pusha
xchg
jo
dec
aas
xor
cmc
jnp
push
pop
pop
out
roll
fwait
lahf
sarb
in
adc
xchg
mov
pusha
hlt
int
mov
aas
cwtl
lahf
fdivs
lahf
mov
jge
stos
vsqrtss
mov
lds
dec
fwait
jl
or
adcl
test
mov
jl
iret
pop
fs
dec
jmp
bound
lds
cwtl
dec
fisttps
cmp
fstps
xchg
int
and
push
adc
or
mov
leave
jns
subl
aas
mov
mov
pusha
sbb
mov
mov
cmpl
loop
jmp
jno
sbb
or
imul
mov
clc
ret
mov
enter
or
jnp
int3
pop
enter
jo
test
rcll
sbbl
sti
xchg
sti
test
outsl
push
mov
mov
mov
xor
test
rcrl
xlat
push
testl
pop
mov
aad
iret
dec
pop
push
and
mov
add
aas
mov
lret
dec
cs
mov
dec
adc
pop
icebp
sbb
addb
cld
jo
outsl
fwait
jge
adc
pop
hlt
inc
scas
addr16
outsb
nop
mov
movsl
aad
ret
loope
xor
pop
pop
cwtl
sbb
cmpl
mov
repz
pop
jge
push
jecxz
mov
movsb
lret
arpl
or
rcrb
daa
lock
testb
push
sbb
mov
mov
sbb
xchg
inc
lcall
outsl
int3
repz
adc
mov
mov
lods
es
aad
xchg
sub
ret
dec
ret
movsl
mov
cmc
dec
or
movsl
shl
sbb
add
in
mov
jno
jnp
mov
shrb
fnstenv
adc
mov
mov
lea
rcr
or
and
xchg
mov
les
inc
fs
jne
push
adc
inc
sbb
divl
int
lcall
pushf
test
xchg
mov
ret
sub
nop
nop
icebp
sub
xchg
add
push
cmp
fildll
fs
push
cwtl
push
push
shll
int
insl
jmp
sub
es
jmp
and
cmc
insl
das
stos
mov
push
xchg
gs
scas
imul
jb
sbb
xor
lods
jno
push
cmpsb
ror
or
pop
ror
es
sub
xchg
lret
adc
cs
mov
hlt
mov
adcl
push
xchg
pop
or
cmp
insb
incb
stos
scas
cmp
leave
cmpsb
ljmp
dec
call
in
xor
xchg
mov
sti
aad
push
loop
into
jno
push
in
adc
or
popa
repnz
sbb
cmp
cltd
mov
xchg
rcrl
adc
sarb
pop
cwtl
movsb
push
mov
xchg
ss
je
cltd
mull
mov
dec
in
mov
push
xlat
lahf
shlb
mov
sar
stos
push
mov
sbb
lods
in
push
adc
insb
or
add
or
xor
jbe
xchg
lds
sub
adc
pop
xchg
int3
and
xchg
fstpt
insb
or
sub
add
int
mov
xor
sahf
push
sub
adc
imul
xchg
cltd
inc
inc
cmp
push
inc
scas
fldenv
addb
das
mov
lods
sbbl
jle
adc
mov
adc
lcall
cmp
cmp
mov
push
lds
pop
push
sbb
pop
xor
out
ljmp
pop
and
mov
jnp
cmp
out
mov
jo
mov
out
or
ret
jns
pushf
enter
mov
or
scas
aas
leave
das
addr16
dec
dec
imul
push
bts
mov
out
xor
das
or
popf
sti
mov
adc
add
ret
inc
test
cmp
arpl
mov
adc
mov
orl
mov
push
iret
fildl
adc
scas
jbe
pop
ss
stos
mov
or
out
adc
mov
sarb
or
hlt
in
arpl
pop
scas
fcmovnu
stos
push
clc
in
cs
lahf
cli
and
mov
cmc
pop
out
sbb
dec
inc
out
jg
nop
inc
out
sub
xchg
inc
push
shlb
lret
lahf
or
mov
les
xchg
or
aad
shll
inc
lock
pop
dec
jge
inc
cmp
push
dec
popf
push
sbb
add
pop
adc
aaa
adc
mov
ss
jge
push
mov
pushf
ret
sbb
jnp
mov
insb
lea
cli
cld
push
xchg
push
mov
sti
call
lods
out
pop
cli
test
cmp
decl
sbb
jnp
cmp
xlat
out
mov
xchg
es
or
push
in
jl
and
sbb
roll
out
jg
int3
fcoms
sti
scas
dec
negb
mov
sbb
lds
arpl
add
lea
cmp
std
pop
jp
mov
lahf
sub
xor
mov
push
ficoml
aad
jne
in
mov
adc
lret
ror
mov
pop
push
stos
inc
filds
in
push
inc
es
jnp
int
jae
sub
ds
lea
outsl
lods
push
das
push
push
test
pop
pop
pop
dec
sub
mov
or
cmpsb
xchg
outsl
out
jg
xchg
mov
imul
out
out
iret
sbb
outsb
add
jge
push
jg
xor
mov
fmull
adc
xor
jle
fstpt
mov
sbb
mov
icebp
out
shlb
mov
mov
idivb
outsl
pop
adc
ljmp
int3
sbb
and
test
jae
sub
cmpsl
in
inc
xchg
xlat
rclb
fwait
jle
xchg
mov
push
add
faddl
or
sub
ror
cmp
out
mov
dec
add
scas
scas
push
push
mov
imul
jns
add
dec
stc
adc
pop
lea
into
pop
push
xadd
mov
sti
outsl
int
sub
fwait
mov
jp
sub
cli
mov
xchg
push
movsb
xchg
xor
jl
fbld
popl
xor
adc
push
clc
test
das
cld
and
sahf
fstpt
cmp
mov
mov
rorl
push
std
mov
movzwl
cmpsl
subl
ficoml
lret
call
test
outsl
in
movsl
mov
xchg
adc
sbb
lods
and
mov
push
sbb
leave
xchg
outsb
inc
cmp
lret
jge
repz
or
mov
push
add
push
rcll
sbb
hlt
jmp
mov
push
in
pop
dec
cmp
mov
dec
sub
pop
mov
cmp
pushf
gs
push
testl
js
in
or
cmc
mov
mov
inc
or
or
rclb
sbb
and
in
jge
mulb
inc
js
cmp
jecxz
jnp
lds
insl
inc
ds
mov
jecxz
shrl
inc
pusha
jg
mov
or
adc
or
jne
xchg
aad
test
dec
pop
adc
ss
cmpsl
and
aas
clc
int
sti
or
es
dec
in
add
sti
call
repz
shl
push
adc
or
and
xor
or
mov
pop
dec
popf
dec
insl
sub
lods
addl
shlb
in
push
jecxz
xor
mov
mov
sbb
mov
fsubrp
pop
hlt
cmp
jnp
repnz
mov
mov
cmp
cmpsb
sbb
mov
call
fnstenv
mov
enter
testb
outsb
xchg
imul
pop
mov
mov
jo
mov
int3
nop
adc
cli
sbb
fnstsw
and
push
pop
repz
rcrl
je
mov
dec
inc
jne
and
push
xchg
xor
push
xchg
and
push
fstl
dec
mov
mov
repz
aaa
in
nop
sarb
dec
dec
mov
lcall
mov
pop
or
push
enter
nop
div
xchg
addr16
add
mov
or
xor
shlb
out
mov
add
fimull
insl
sbb
pop
jnp
cmp
arpl
repz
fisttpl
lcall
lcall
jl
jb
cwtl
test
adc
push
lret
dec
mov
adc
mov
mov
insl
flds
push
and
imulb
dec
fmuls
rcll
add
sub
or
sahf
sahf
sarb
fisttpl
pop
dec
adc
shl
out
imul
mov
and
gs
xchg
xor
jo
mov
jmp
pop
repnz
jae
sbb
xlat
outsl
jno
mov
das
cwtl
pop
xchg
lods
std
add
cmp
fwait
addb
jp
rcrl
mov
cltd
aaa
push
cli
fidivs
jge
popf
lods
ds
sti
cmpsl
mov
pop
in
call
hlt
xor
adc
int3
and
adc
mov
jae
stc
imulb
in
xor
jmp
xchg
push
imul
push
or
inc
pop
add
repnz
je
imul
push
fistl
push
cmp
mov
movsl
xchg
mov
mov
cmp
lret
into
xchg
mov
pusha
test
outsb
jecxz
sbb
xchg
jno
jge
rolb
dec
popf
or
xor
outsb
stos
cli
pop
addl
mov
aas
insb
incb
daa
xor
pushf
shlb
add
ljmp
cmc
pop
push
repz
cld
ret
mov
jne
sbb
out
mov
sbb
xor
insl
movsw
lcall
in
fstps
dec
or
mov
mov
imul
gs
cmp
adc
mov
sti
mov
lds
into
jecxz
mov
adc
insb
js
shr
push
adc
sbb
bound
or
pop
adc
or
or
das
insl
sub
loopne
dec
ret
xor
nop
js
je
arpl
inc
mov
add
mov
scas
sti
pop
loopne
dec
out
je
test
jge
bound
adc
in
pop
mov
mov
fdivrs
cld
mov
les
je
movb
adc
or
pop
pop
xor
mov
jae
inc
stos
aas
dec
rcll
push
cld
stc
pop
lods
mov
mov
and
aas
pop
in
push
push
dec
rcr
jae
inc
ja
test
jo
ss
dec
mov
push
inc
clc
pop
mov
cmp
mov
lahf
ret
out
mov
mov
aas
xor
dec
push
jle
sub
jns
ret
and
stos
into
repz
stc
insl
int
mov
ret
push
nop
cmp
adcl
lret
xor
fmulp
inc
and
hlt
jle
lods
sub
ljmp
or
dec
inc
xchg
xchg
jmp
loop
mov
jne
insl
in
sbb
pop
xchg
out
outsl
cmpsl
leave
push
lahf
testb
dec
loopne
pop
sbb
cmp
or
cmpsb
cmpl
adc
cmpsb
sbb
xchg
jae
aam
cli
iret
fs
inc
and
add
aad
sbb
mov
mov
xor
jne
mov
adc
in
aaa
fnstenv
test
mov
pop
dec
in
or
or
call
sub
add
jb
xor
scas
pop
mov
pop
fnstenvs
and
xchg
or
pop
push
inc
jl
lret
adcb
xor
cmp
leave
test
adc
jnp
and
add
jns
aas
ss
adc
inc
push
sahf
bound
jmp
in
outsl
mov
xchg
add
jp
and
movsl
sbb
rolb
popa
stc
lea
adc
or
sub
xchg
dec
cmp
lods
pop
xor
mov
add
sub
mov
add
imul
inc
inc
adc
xlat
xchg
sub
push
mov
or
mov
test
int3
cwtl
es
push
xchg
inc
faddl
fstpl
data16
xchg
stc
les
stos
push
lcall
xchg
leave
in
into
addr16
sub
mov
push
dec
push
adc
ret
negl
pop
mov
fstp
sub
add
jmp
cmp
mov
cmp
dec
dec
lea
inc
dec
cmp
mov
aaa
js
or
and
test
rcl
nop
push
ljmp
push
push
rol
pop
add
add
stc
data16
sarb
cmpsb
ljmp
insl
adc
mov
push
mov
mov
sub
shlb
or
inc
in
dec
popf
push
cwtl
and
fs
stos
out
mov
xor
rolb
adc
fisttpl
aad
pop
mov
cmp
mov
pop
jp
xchg
int3
push
jo
imul
aas
fs
add
mov
xchg
adc
lods
sub
adc
movsb
cmp
jo
inc
lret
cmp
pop
xor
js
xchg
xchg
sahf
mov
push
loop
and
or
sub
cmpsb
je
sbb
xor
pop
or
jno
sysret
inc
icebp
loope
pusha
mov
call
or
loope
inc
test
fucomp
mov
flds
push
fisubrl
mov
imul
popf
dec
aaa
insl
rol
mov
and
mov
jmp
push
add
dec
cs
std
clc
dec
orl
xchg
lret
and
jl
jg
popa
faddl
int
sbb
jnp
pop
mov
out
and
rcl
movsb
arpl
jbe
mov
sbb
inc
int
push
cmp
xchg
dec
fwait
cmc
cld
xchg
push
imul
xchg
outsl
adc
sbb
or
jbe
andb
dec
push
mov
ss
cmc
push
sbb
xchg
lcall
mov
add
mov
xor
push
int
pop
jmp
pop
sub
addl
push
jnp
loope
inc
daa
lcall
lds
sub
mov
xchg
jb
push
pop
cltd
pop
xorb
or
xchg
test
sbb
jle
repz
movsl
aad
add
pop
test
aad
les
rorb
push
and
aam
adc
sbb
jne
pop
lret
imul
xchg
sbb
xor
or
sahf
pop
sbb
and
sbb
push
push
and
cld
ljmp
jbe
sahf
hlt
data16
mov
cltd
loop
movsl
jp
jbe
sub
cmp
and
sbb
dec
mov
lods
mov
mov
enter
cmp
sub
les
int
cmp
mov
cmp
subl
adc
pop
stos
sub
adc
mov
out
rclb
mov
aaa
jmp
shll
loop
daa
pushf
out
jno
push
mov
push
mov
mov
lds
mov
lods
pop
mov
jae
lcall
sbb
dec
insl
mov
in
ljmp
xor
out
push
xor
jecxz
sbb
push
xchg
aam
daa
icebp
push
cmp
sub
loop
shlb
nop
daa
xchg
and
sbb
jg
pop
and
xor
in
in
daa
fcoms
adc
and
leave
jae
pop
sbb
xchg
xchg
fisttps
aas
sub
dec
cmpsl
mov
pop
jnp
je
fwait
xchg
push
ret
in
dec
pop
test
jp
lods
add
in
in
fdivrs
mov
ljmp
pop
xchg
dec
test
xchg
pusha
out
jge
xorl
mov
pop
loope
data16
ljmp
jecxz
pop
arpl
push
or
arpl
loope
mov
push
orl
mov
mov
push
gs
fiaddl
mov
lea
mov
bound
test
dec
push
mov
jae
negl
leave
mov
adc
and
test
jno
pushf
inc
xchg
pop
enter
loope
xor
das
push
push
fldenv
jbe
movsb
inc
jne
movsl
jae
sub
jnp
mov
repz
adc
sbb
inc
sub
sti
xchg
ret
scas
inc
add
push
mov
and
cmp
push
xchg
jmp
int
bound
pushf
mov
ja
test
xlat
jo
dec
add
imul
addr16
push
arpl
subl
mov
mov
dec
jbe
mov
xor
shlb
push
sub
mov
enter
or
ret
outsb
sub
mov
xor
inc
or
jmp
insb
fldenv
sbb
cltd
mov
jl
jp
sbb
jns
popa
out
inc
movsl
pop
mov
mov
adc
shlb
fs
in
pusha
fwait
insb
addr16
xor
shrb
jmp
push
pop
xlat
mov
mov
aas
cli
mov
out
mov
and
cmc
jp
or
incb
mov
mov
dec
dec
jg
inc
pop
pusha
xchg
ds
ja
adc
inc
xchg
and
mov
push
mov
xor
jp
iret
jns
fmul
xchg
call
sub
lret
xor
push
add
ret
dec
pop
nop
into
mov
lret
xchg
jl
pop
add
or
mov
fs
jl
aam
xchg
mov
and
push
mov
add
popf
and
imul
fwait
pop
inc
in
mov
arpl
repz
lock
jle
out
pushf
call
xchg
mov
pop
push
cmp
je
out
int3
es
cli
xor
mov
jge
sti
ljmp
out
dec
inc
jge
lahf
mov
movsb
or
fdivs
cmp
inc
push
outsl
mov
jnp
add
xor
sahf
fiaddl
push
jae
ja
sub
mov
test
popa
pop
dec
enter
sbb
mov
stos
mov
fistl
inc
popa
and
xor
mov
or
ds
push
test
sub
adc
popl
ret
sbb
push
add
std
mov
xlat
cmp
inc
pop
ja
or
mov
lret
inc
mov
inc
pop
cmpsb
pushf
sbb
xorl
dec
add
cmpsl
jecxz
or
mov
outsb
mov
pop
cmc
lea
xchg
xor
mov
aam
jnp
push
add
lods
pop
xchg
pushf
cmpsl
mov
adc
arpl
ret
movsl
pusha
dec
neg
in
insb
lret
sbb
cwtl
cmp
pop
dec
int3
out
lds
shll
pop
adc
cmp
push
push
xchg
push
aaa
mov
pop
int
cwtl
jmp
mov
mov
jl
mov
scas
incb
xor
lret
push
sub
hlt
dec
stos
mov
and
or
adc
push
popa
negb
in
xchg
btcl
dec
out
in
sbb
xchg
inc
or
xor
push
jo
xchg
out
mov
xor
adc
push
outsl
loop
and
repz
sahf
add
push
sub
mov
das
stc
dec
pop
jmp
mov
mov
cltd
cwtl
jno
ja
inc
jno
stos
mov
rolb
mov
lds
rorb
lea
fistpl
cmp
pushf
pop
dec
sub
adc
into
je
xchg
sbb
mov
ror
lea
leave
loope
and
inc
jle
mov
pop
shrl
int3
and
leave
mov
xlat
cmp
out
cmc
ljmp
xchg
rorl
mov
leave
xchg
xor
int
push
xor
dec
and
test
lcall
jo
and
mov
addr16
jmpw
in
mov
sbbl
mov
in
punpckldq
add
enter
aam
mov
stos
fst
rolb
sbb
and
inc
push
out
cld
ljmp
daa
faddl
popa
add
test
js
pop
call
ds
sbb
std
les
mov
rcrb
sub
ds
pop
fnstsw
out
push
inc
aaa
xor
sub
inc
call
cmp
les
outsl
shl
in
sbb
xchg
mov
mov
xchg
jl
sbb
cmp
inc
dec
fldl
lods
leave
enter
aaa
mov
popl
dec
test
xchg
add
mov
inc
icebp
inc
jbe
cmp
data16
mov
dec
fdivs
int
mov
imul
dec
inc
mov
imul
mov
sbb
push
or
mov
or
aaa
mov
xchg
sbb
sub
push
in
fsubrs
cmc
cmpsl
rorb
mov
dec
aaa
mov
and
sub
es
cld
es
and
out
jmp
xchg
xor
dec
add
clc
mov
cltd
sub
or
das
jl
mov
notb
add
jmp
dec
cli
mov
pop
lds
jmp
cmpsb
jnp
rcll
mov
in
push
sub
ret
test
cmp
ljmp
testb
insl
pop
out
subb
or
or
andl
js
and
idivb
daa
mov
aad
cli
negl
fdivrl
rclb
jnp
jecxz
popf
out
mov
pop
add
dec
xchg
sbb
sub
adc
mov
sarl
mov
rcrb
mov
mov
pop
cmpsb
repnz
fs
stc
mov
or
add
sbb
xchg
mov
popf
dec
jne
dec
aad
inc
xor
jl
lods
xchg
push
aas
sub
push
and
push
ljmp
jp
xchg
adc
xchg
xchg
mov
dec
jg
lea
jns
roll
mov
push
or
movsb
pop
inc
cmp
or
les
dec
call
mov
mov
stc
mov
repnz
mov
fs
adc
jnp
rclb
push
sbb
mov
daa
cld
lret
in
lea
push
push
mov
xor
mov
cli
scas
in
push
jns
add
xchg
pop
cltd
cmp
jmp
divb
lahf
mov
or
or
arpl
pop
jmp
add
sbb
test
mov
enter
xor
dec
mov
and
jo
sub
dec
lds
mov
add
in
mov
mov
push
cmpsl
jo
push
ret
push
inc
dec
paddb
and
dec
and
movl
and
and
xor
adc
nop
pop
dec
add
add
shrb
dec
xchg
dec
fcoms
pusha
mov
testb
dec
das
aam
and
aad
cmp
test
das
scas
jecxz
idivl
sbbl
or
aad
jmp
add
call
mov
xor
outsl
inc
mov
sbbl
dec
push
dec
test
fsubrs
jl
cld
pop
test
sub
fwait
imul
sbb
in
mov
clc
mov
adc
add
pop
fcoml
test
mov
fistpll
inc
mov
fcmovbe
mov
test
push
adc
mov
and
imul
cmpsb
or
adc
and
and
fldl
ret
sub
xlat
or
jecxz
mov
divb
stos
xor
dec
shll
mov
cmp
sahf
ret
outsl
in
jae
ja
repz
push
xchg
lock
std
scas
test
daa
sub
push
punpckldq
ret
xor
mov
ror
es
dec
adc
lcall
dec
pop
into
add
mov
out
mov
stc
rorl
xchg
dec
or
adc
lret
or
aaa
jl
arpl
nop
xchg
or
inc
pop
push
jecxz
repz
pop
sub
lods
jo
mov
data16
outsb
mov
lods
clc
lahf
lret
pop
xchg
adc
jle
pop
add
sub
hlt
add
stc
sahf
xor
push
cmpsb
xchg
pushf
fcomps
fs
lea
sbbl
fstl
ret
stc
fiadds
ss
pusha
shll
pusha
shrl
in
arpl
push
inc
mov
add
mov
and
or
fisubrl
jp
repz
mov
push
rclb
push
inc
push
jae
aas
xchg
mov
lcall
loope
xor
rcll
jb
es
and
add
les
jle
xor
cmp
cs
aaa
push
push
lock
std
fldt
mov
cmpsl
push
aad
lods
insb
pop
shl
test
jge
enter
cs
push
jmp
sbb
pop
out
jae
outsl
cmp
outsb
les
inc
outsb
std
inc
add
ljmp
outsb
ljmp
pop
xor
and
mov
push
jl
sbb
dec
dec
repnz
loope
xor
daa
and
add
xor
push
inc
into
jge
aaa
data16
hlt
adc
cmpsb
jns
fimull
es
sbb
mov
adc
dec
pop
jb
pop
pop
in
in
push
lret
and
pop
and
mov
int3
shll
jo
sbb
adc
cli
sub
stc
add
pop
cmpsl
orl
testl
rolb
orb
pop
mov
out
cmpsl
call
push
or
iret
mov
lcall
jno
test
test
mov
pusha
mov
add
frstor
xor
jnp
cmp
sub
or
xchg
in
sar
mov
cs
imul
inc
fs
mov
mov
pop
jbe
inc
mov
jle
pop
pop
ds
ss
xor
aaa
shlb
lret
adc
cmc
add
inc
jle
loopne
adc
enter
imul
cmp
hlt
pusha
cmp
pop
ss
mov
mov
popf
pop
inc
outsl
cmp
xor
stc
sarb
sbbb
sbb
cmp
outsb
dec
dec
mov
mov
divb
popa
push
cmpsb
out
dec
clc
call
mov
hlt
ja
or
out
inc
scas
fdivs
inc
mov
xchg
lret
pop
mov
jmp
lcall
jmp
fwait
xchg
lods
in
inc
test
cli
add
mov
shlb
ficomps
movsb
insb
ljmp
xchg
les
hlt
jmp
out
xchg
cs
dec
xchg
sbb
sbb
insl
fcompl
dec
in
lea
imul
inc
lcall
sub
pop
jno
dec
jb
or
imul
xchg
sahf
xchg
clc
lret
xorb
aam
das
push
shll
pop
stos
adc
int
jg
out
jnp
xchg
testb
iret
cmp
aas
neg
dec
daa
push
push
bound
leave
ds
xor
push
push
push
jns
outsl
jg
xchg
jl
inc
sub
leave
pop
inc
push
test
les
call
in
int3
aas
out
test
pop
pop
aas
lds
lock
xchg
sti
mov
mov
in
fadd
movsb
sub
lods
mov
aad
xor
bound
xchg
dec
xlat
in
fwait
dec
mov
cmc
sti
sub
mov
cmovnp
push
popa
mov
pushf
aas
arpl
bound
cmc
lcall
inc
xchg
mov
sub
adc
scas
test
mov
lcall
fdivr
pop
mov
add
outsb
push
cmp
jle
leave
jne
rorl
pop
aas
movsl
mov
add
add
addr16
lds
xchg
and
ror
adc
outsl
aad
xlat
pop
or
mov
sub
cwtl
xchg
movsb
popf
data16
inc
xlat
aas
xor
xchg
pop
mov
aad
xlat
sbb
js
mov
jg
jg
inc
dec
adc
lock
mov
jp
mov
jbe
cwtl
mov
adc
dec
mov
rcrb
mov
lea
out
mov
xlat
shr
dec
hlt
iret
push
or
loop
add
test
cmpsb
data16
aaa
in
clc
ds
pushf
daa
or
xor
mov
cmp
jl
push
cmpsl
loopne
cmp
mov
scas
clc
xor
or
nop
in
imul
mov
jb
lods
jns
mov
and
aas
mov
fwait
cld
mov
insl
lret
pop
fdecstp
pop
idivb
adc
pop
orl
mov
mov
aad
dec
stc
xchg
or
rol
mov
pop
adc
sub
aas
mov
daa
daa
or
inc
xchg
inc
iret
insl
jbe
incl
adc
push
mov
lods
jle
mov
cltd
dec
pop
je
std
ljmp
adcb
test
and
adc
inc
daa
gs
js
test
cltd
inc
mov
in
push
dec
sbb
nop
aam
pop
xchg
popa
cli
int3
or
aam
call
mul
pop
mov
sbb
pop
push
mov
scas
cli
popa
inc
shrl
sub
sarb
add
xchg
sub
sub
cld
push
daa
push
test
test
lods
flds
mov
in
mov
push
dec
bsf
mov
cld
cmp
test
push
stc
mov
jns
ss
xor
pop
int
cli
insl
test
js
mov
add
dec
aad
out
call
pop
lcall
xchg
dec
lock
mov
gs
in
outsl
push
jp
icebp
test
outsl
orb
mov
jl
inc
jge
cmc
stos
sbb
pop
ror
addb
stc
cmp
mov
and
insl
jne
adc
bnd
or
mov
jmp
cmp
push
xchg
adc
loop
in
mov
inc
es
shrb
test
loopne
mov
fs
insl
mov
sub
scas
mov
fs
fistpll
push
cmp
out
mov
add
jb
insb
mov
rorb
fs
arpl
fisubs
push
xchg
and
cmpl
and
clc
jae
repz
pop
or
cmp
ret
adc
add
sub
push
inc
ds
push
loopne
cmp
lods
repnz
or
arpl
leave
in
jo
rolb
push
adc
lcall
iret
xchg
and
push
push
and
ret
inc
out
roll
repz
add
xor
inc
dec
pushf
out
inc
aam
shlb
sub
and
hlt
cmpl
jg
lods
mov
sbb
je
xchg
arpl
sbb
test
dec
or
ss
xchg
or
xchg
jmp
or
mov
add
lcall
xchg
pushf
out
pushf
test
jle
jbe
das
mov
ret
sub
fisttpl
icebp
loope
out
add
rorl
iret
pop
mov
mov
dec
andb
andl
push
cld
dec
stc
lret
or
push
mov
adc
mov
mov
xchg
jo
mov
jg
in
mov
cmpb
stos
mov
popf
mov
popf
mov
adc
xchg
es
aad
jmp
mov
xchg
mov
inc
jl
xchg
iret
and
sbb
ljmp
bound
lock
repnz
aam
das
pop
mov
mov
lret
and
sahf
leave
aas
xchg
xor
jbe
test
cmpsl
int
addr16
ss
push
pushf
and
mov
mov
jmp
dec
pop
addb
std
outsb
jg
in
fwait
sub
push
scas
mov
inc
mov
xor
test
xor
cmc
out
stos
ljmp
adc
lahf
aad
ljmp
call
arpl
test
insb
popf
cltd
ret
push
popf
lahf
fadds
divb
lcall
pop
lcall
rorb
cwtl
leave
add
stc
xchg
cmp
jbe
sbb
loope
jno
enterw
aas
orl
fchs
cltd
loop
loope
xorl
pushf
and
out
jge
push
call
push
scas
icebp
pop
pop
das
les
add
jnp
mov
jbe,pn
cli
xchg
push
andl
sub
movsb
lret
aad
inc
mov
bound
sbb
sub
cmp
jecxz
vpaddw
push
fcompl
dec
hlt
mov
fidivrs
lret
cmpl
or
inc
stos
sbb
in
adc
fwait
xchg
sahf
dec
add
out
fsubrs
xchg
jecxz
repz
add
and
mov
dec
xor
xchg
das
icebp
and
add
xor
sbb
repz
mov
negb
ficompl
and
inc
out
cmp
std
mov
repz
dec
cmp
and
iret
in
popa
test
aam
dec
push
and
call
cli
aad
or
cmp
push
pop
out
loop
cmp
inc
jne
dec
imul
mov
test
test
dec
je
push
xor
xchg
lods
xor
dec
repnz
xorl
add
fiadds
add
hlt
out
in
scas
push
jmp
cmpb
bnd
inc
int3
mov
push
mov
or
adc
mov
aam
or
xor
outsb
and
and
xor
and
mov
movsl
inc
test
xchg
test
sahf
jg
repnz
out
sbbl
mov
add
inc
lds
dec
or
std
xorl
andl
and
inc
stc
movnti
cs
loopne
orl
xchg
inc
xor
mov
inc
lcall
xor
test
and
outsl
pop
cmp
shl
mov
movsb
mov
add
inc
std
pop
sub
or
cwtl
push
push
sbb
aaa
sub
push
xchg
mov
fisubs
cmp
ret
and
pop
jp
es
pop
shlb
push
in
or
gs
daa
scas
mov
rorl
aam
add
dec
out
je
shrb
ja
push
pop
mov
mov
adc
sub
jb
sbb
xchg
pop
inc
out
jo
test
xchg
mov
xor
dec
flds
push
cwtl
add
ret
mov
sub
cmp
cmp
xchg
dec
int
mov
loop
lcall
xor
adc
lea
lds
insb
pushf
xchg
jo
sbbb
mov
fists
dec
dec
fcoml
jmp
ret
into
fmuls
xchg
lret
mov
outsb
loopne
dec
dec
std
loope
dec
pop
imul
insb
dec
inc
data16
fwait
sub
add
stc
outsb
push
sub
xor
xchg
jl
pop
test
das
jge
das
mov
jecxz
cmpsb
jge
sbb
xchg
mov
dec
sub
mov
fstps
mov
lea
mov
repz
clc
mov
out
pop
xchg
mov
push
int3
dec
icebp
inc
in
inc
mov
fisubs
mov
inc
pop
dec
xchg
insb
cmp
xchg
add
shrl
and
pusha
or
jnp
inc
add
loopne
inc
inc
jecxz
mov
xor
cmp
sbb
mov
mov
popf
xlat
ss
in
loopne
xchg
sub
int3
lock
inc
pop
mov
or
mov
sbbb
inc
sub
cwtl
cli
mov
mov
mov
cmpsl
jnp
lock
adc
push
cmp
sbb
sbb
out
inc
and
ror
dec
push
mov
xchg
mov
push
mov
push
out
lds
cmp
out
repz
bound
sub
mov
cmpsb
xchg
clc
and
xchg
and
pop
mov
mulps
cmpsl
xor
std
jp
add
push
leave
mov
lods
les
lock
lods
sbb
pop
int
aaa
jo
or
ret
aaa
fwait
xor
arpl
sbb
sub
daa
lcall
scas
pop
dec
xchg
or
cmp
xor
aaa
popf
popf
push
mov
push
and
xchg
lods
add
push
xor
dec
loopne
or
or
inc
cld
repz
push
pop
fidivs
sbb
addl
add
xchg
addr16
hlt
sub
daa
sbb
xchg
fildl
adc
jae
and
arpl
leave
fwait
insl
sbb
dec
nop
jbe
pop
mov
jbe
aas
push
pop
mov
jb
inc
xor
cmpsb
ret
jbe
or
dec
das
repnz
push
mov
loopne
mov
xchg
lahf
dec
fisttpll
pop
xchg
inc
cmpsl
sub
pop
mov
dec
bound
mov
data16
int3
shr
adc
cmpsl
out
dec
cmc
lret
imul
and
les
addr16
and
loopne
pop
imul
cmp
in
out
jle
jle
lret
ret
jo
dec
cmpsl
pop
xchg
push
out
jo
dec
inc
jo
lock
leave
mov
mov
xchg
sahf
and
cld
pop
jb
push
das
insb
cmpsb
jb
push
fbld
hlt
and
pop
imul
xor
or
in
xchg
push
and
xchg
mov
jg
mov
pop
int3
mov
cmc
or
nop
inc
movsb
inc
or
mov
or
fimull
es
sub
mov
insb
jbe
in
jge
push
inc
outsl
lret
jno
mov
mov
mov
jno
pop
xchg
mov
sbb
cmp
mov
xor
cmpsb
hlt
xor
mov
push
orl
push
mov
cs
cmp
dec
ret
inc
ret
push
in
dec
pop
ss
outsl
dec
or
mov
dec
jmp
inc
bound
rorb
sbb
lods
adc
cmp
mov
xor
rcr
aad
push
pop
icebp
lods
pop
mov
xchg
movsl
sbbb
push
dec
xchg
dec
jne
je
mov
mov
dec
cld
mov
sbb
mov
orl
jno
stc
in
cmovns
jb
jne
and
cs
hlt
lods
in
push
in
jl
and
xor
push
std
loope
push
mov
xor
sub
icebp
add
mov
lock
jmp
mov
hlt
loop
pop
fwait
jl
cmc
cmpsb
test
daa
pop
imul
loop
out
in
or
pushf
mov
or
push
gs
lret
sbb
xlat
mov
cmp
mov
sbb
and
adc
mov
in
jmp
ds
xchg
imul
fldt
into
test
sub
dec
shrl
cld
pop
add
mov
add
and
mov
sti
mov
lahf
jl
les
int3
adc
je
decl
and
dec
in
movsb
mov
push
xchg
ss
pop
filds
ss
push
and
std
cld
ja
pop
pop
mov
jp
aas
sbb
rcrb
daa
mov
mov
loop
push
dec
test
xor
sbb
dec
jmp
mov
call
mov
sbb
add
cmc
lds
ja
sub
jp
jecxz
mov
jl
sbb
iret
frstor
lcall
mov
jg
lret
dec
notl
or
sub
pop
lcall
sarl
pop
and
aaa
mov
cmp
or
outsl
lds
or
and
in
sbb
adc
pusha
lods
or
dec
xchg
pop
push
aam
pop
hlt
inc
arpl
lea
sbb
or
or
jb
pop
xchg
mov
in
inc
int
mov
dec
pop
inc
jmp
jne
mov
xor
jnp
pusha
pop
add
imul
lods
xor
jae
test
out
stc
dec
mov
xor
xor
jmp
daa
mov
pop
scas
add
jl
mov
sbb
sub
pop
rcll
push
mov
arpl
mov
std
mov
xor
cwtl
inc
scas
xlat
lock
inc
add
jecxz
push
inc
xlat
inc
xchg
sbbb
imul
mov
arpl
cmp
push
mov
dec
inc
jle
ja
mov
ja
or
ret
xchg
cmpsb
pop
daa
xor
pop
popf
out
fucomi
out
or
lods
js
out
and
jae
pop
jge
shrb
adc
gs
psllw
sub
cld
repnz
fcoml
add
nop
dec
xchg
jnp
cmp
sub
xchg
in
add
pop
xchg
cmpsl
pop
sbb
push
xor
sbb
sbb
add
into
or
js
and
adc
xor
mov
fstl
push
pop
mov
or
jmp
ja
lcall
movsl
call
lahf
push
fstp
stos
jg
adc
imul
out
sbb
dec
rcll
pop
out
movsl
cmp
out
push
out
scas
inc
mov
mov
sub
sub
or
or
sahf
sbb
mull
mov
sub
cmp
jge
imul
xor
push
out
xor
inc
sbb
xchg
clc
inc
mov
mov
sbb
in
and
pop
mov
scas
or
pop
sbb
cli
and
add
sub
mov
imul
scas
cs
orl
fsubrs
add
adc
mov
xchg
push
cmp
mov
and
lret
xor
dec
push
or
fisubrl
std
sbb
xchg
dec
rcr
repnz
push
jbe
inc
scas
xor
int3
adc
jbe
mov
sbb
push
arpl
push
jmp
adc
js
out
call
fstl
fidivs
add
mov
or
jg
faddl
sbb
xorl
xlat
cli
sbb
sbb
inc
mull
xchg
popa
and
loope
xor
add
mov
adc
sbb
inc
inc
fimuls
mov
push
xchg
mov
cmp
bound
jp
pop
daa
cmp
or
cld
insl
inc
mov
test
mov
mov
in
adc
sbb
ret
lea
movb
std
add
cmpsl
mov
out
cld
pop
xchg
mov
loopne
mov
mov
movsl
jns
repnz
mov
out
dec
aam
pop
into
push
icebp
pop
pop
clc
adc
cmpl
fcmovnbe
fwait
xchg
int3
push
mov
sahf
or
xchg
mov
jecxz
mov
das
or
sbbl
outsb
por
stos
lods
gs
push
push
aam
inc
push
pop
jle
xor
pop
xor
rorl
inc
pop
hlt
in
and
mov
std
pop
mov
mov
ja
pop
popa
pop
fisubrl
jae
cmp
xchg
lahf
add
pop
add
adcb
mov
loop
nop
mov
jge
cwtl
lods
sti
and
inc
dec
mov
std
into
ja
lret
xchg
jo
cmp
cltd
in
pop
push
enter
xchg
test
gs
push
lock
iret
pop
push
call
pusha
dec
enter
inc
jge
ja
xchg
lock
and
mov
pop
addb
pop
das
push
rolb
mov
jp
xor
mov
lock
lcall
sbb
mov
jl
mov
test
divb
push
and
add
rorb
mov
fld1
andl
outsb
lock
mov
dec
push
out
sub
mov
fmuls
mov
ret
xchg
out
sbb
cmp
mov
faddl
push
xor
imul
dec
mov
loope
cmpsl
add
mov
push
and
pop
inc
xchg
jge
cltd
outsl
fldt
sub
mov
and
ret
mov
test
xor
and
xchg
sbb
adc
call
ss
pop
std
cmp
or
je
adc
cmp
add
es
mov
jne
dec
mov
vdivss
sarb
add
scas
fisubrl
int
arpl
add
hlt
test
xchg
and
cmpsb
inc
push
or
jo
addr16
pop
nop
sub
sub
adc
lock
scas
fwait
inc
hlt
dec
je
jno,pn
nop
mov
stc
outsl
and
xchg
or
ds
ja
and
aaa
loopne
pop
ret
outsl
jae
jmp
daa
xchg
int3
jecxz
in
adcl
insl
and
sub
jp
push
mov
push
aaa
cmp
out
stos
test
jge
mov
push
jno
ret
outsl
movsb
sbb
xchg
mov
xchg
cld
rcll
out
fsts
and
int3
sarl
inc
xor
lods
xchg
int3
pop
mov
dec
mov
adc
imul
or
xor
lahf
js
in
add
hlt
loope
push
cmp
shlb
ffreep
jno
add
ja
mov
cltd
loope
xor
add
pop
cmpsb
cmp
repnz
imul
sub
mov
test
rol
mov
movb
jae
es
rcr
insl
push
in
xor
stos
cmpsl
jno
xchg
lret
and
mov
sbb
xchg
sub
cwtl
lods
mov
aad
mov
fistl
sub
lods
lea
pop
mov
push
add
icebp
bound
shlb
xor
mov
out
insb
xchg
ficompl
lcall
bnd
mov
nop
adc
orl
dec
jne
mov
and
xor
adc
test
lcall
repnz
pop
aam
shrd
mov
sub
xlat
pop
sub
cli
pop
xchg
mov
sub
and
lea
shrb
in
mov
adc
mov
mov
sub
test
les
ret
mov
mov
pop
bound
jp
arpl
out
mov
inc
in
jmp
movsl
pusha
jbe
loopne
cmp
jge
fwait
insb
sub
addr16
in
popa
cmp
xor
push
sbb
mov
mov
sbb
repnz
pop
and
mov
sub
in
sbb
cmp
flds
dec
sbb
icebp
out
std
not
pop
fs
xlat
pshufw
shl
mov
test
push
and
and
test
ret
mov
dec
lret
pop
shlb
sbb
les
jnp
scas
or
outsb
jo
fildl
dec
daa
mov
lods
mov
scas
in
nop
mov
pop
and
mov
pop
jmp
gs
pop
cmp
pushf
inc
gs
cmp
pop
iret
dec
ja
xchg
jmp
push
fwait
or
loop
jp
cmp
mov
aam
int
int3
nop
add
fidivrl
divb
inc
aas
lock
pop
out
sbb
out
loopne
jp
and
push
dec
inc
notl
pop
jge
popa
lcall
mov
mov
xor
mov
pop
pop
xorl
and
mov
jmp
mov
dec
or
arpl
out
add
mov
int3
and
out
sahf
das
test
xchg
lret
aaa
loope
push
dec
jnp
and
ljmp
xchg
xlat
rcrl
xchg
sbb
shlb
and
xor
jns
or
sti
arpl
inc
movsb
add
fistl
mov
fcomps
imul
or
adcb
shll
jo
jmp
adc
sarb
mov
mov
pop
jo
push
mov
push
mov
cmpsl
jne
arpl
or
jecxz
pop
jge
gs
mov
jo
sbb
mov
add
addl
mov
sbb
stos
inc
scas
fwait
ljmp
lcall
jo
adc
lret
fiadds
or
insb
lock
xchg
stc
sbb
scas
lods
xchg
lcall
out
inc
cmp
mov
push
push
imul
rcr
in
dec
jae
pop
add
mov
imul
stc
adc
push
loope
add
sbb
pop
pop
test
ret
cltd
mov
adc
xor
fcmovb
jmp
aaa
dec
shrl
fmuls
mov
jnp
add
pusha
xor
or
mov
fisttpll
or
xchg
movsb
push
decl
sbb
stos
lods
cmp
sbb
out
lock
je
sub
dec
adc
push
fldl
mov
in
fldenv
push
aaa
cmp
mov
js
and
in
scas
subb
xchg
dec
imul
into
or
push
xor
mov
cltd
into
bound
sbb
mov
mov
mov
dec
inc
dec
mov
xlat
stos
dec
loop
push
xor
cmp
fdivrs
in
cli
add
push
nop
fcmovnb
dec
in
and
in
cwtl
mov
push
mov
stos
gs
xlat
fistl
push
dec
mov
iret
cmp
rolb
add
imul
jge
into
xchg
xchg
lods
outsl
cld
sarl
pop
cld
sbb
mov
dec
dec
jle
scas
mov
pop
mov
sub
adc
ljmp
sbb
test
jne
jnp
mov
xor
mov
or
fwait
mov
mov
daa
pushf
xor
stos
int3
dec
or
loop
cli
jp
iret
aaa
jg
repz
stc
xor
adc
hlt
inc
les
filds
xchg
push
push
xor
lcall
out
inc
mov
aad
cmpsb
and
cmp
mov
aam
in
jmp
shl
xor
hlt
push
es
xchg
repz
clc
gs
jle
popf
mov
jmp
popa
add
cmc
xchg
sub
xchg
cmpl
jnp
jbe
lcall
push
fildll
jecxz
and
xlat
lea
fcoms
lcall
pop
push
and
in
or
xorb
sub
lea
lea
lds
mov
roll
push
dec
inc
push
scas
sub
out
cs
gs
fcomp
cmp
cld
mov
das
pop
mov
or
cmc
jmp
xchg
test
addr16
hlt
jmp
hlt
xlat
xchg
gs
imul
test
xchg
gs
ds
or
dec
pop
movsl
jp
movsb
stos
ficompl
xchg
cwtl
iret
and
nop
aaa
sbb
fwait
mov
pop
pop
cmp
fidivs
stos
movsl
push
and
xchg
jae
imul
ljmp
sar
push
push
pop
xchg
ljmp
mov
sbb
xor
sahf
mov
stos
fistps
pop
in
xor
aaa
jae
jp
xchg
andb
or
arpl
or
or
inc
push
inc
mov
adc
or
sub
lret
xor
insl
and
int3
adc
adc
popa
jmp
nop
sub
xor
sub
dec
gs
jno
mov
mov
jl
inc
inc
std
or
push
push
sbb
bound
add
mov
repz
dec
xor
mov
adcl
or
clc
int
xor
mov
gs
repnz
sti
cmp
push
dec
insl
popa
mov
cld
mov
cmp
or
shrl
ds
xchg
inc
xchg
bound
mov
push
mov
scas
cmp
push
push
push
add
sbb
jecxz
xor
into
sub
int3
mov
mov
fidivl
push
sbb
gs
movsb
pop
pop
add
rolb
or
jo
aaa
into
cld
push
sbb
insb
pop
mov
jg
fadds
sbbl
into
ret
mov
lock
ja
fnsave
out
sub
dec
in
in
and
mov
lahf
cmp
filds
sbb
xlat
lea
repz
mov
test
cmpsl
mov
hlt
mov
cmpsb
loope
push
test
jnp
adc
lock
pop
dec
jbe
lahf
sub
repz
mov
mov
sbb
push
dec
add
jmp
test
dec
subl
inc
dec
daa
jns
xchg
xor
pop
mov
js
pop
xchg
push
imul
jle
xor
pop
iret
in
bound
sub
data16
dec
dec
sub
pop
xchg
and
jp
pop
jp
xchg
mov
mov
mov
mov
js
pushf
mov
imul
clc
cmp
shll
mov
dec
cmp
imul
sub
lea
jecxz
pop
hlt
dec
jnp
imul
and
sub
rcrl
mov
mov
orl
jbe
loope
jmp
cmp
jle
or
pop
dec
xor
sti
inc
add
adcl
cmp
outsb
add
cli
mov
sbb
cmc
out
push
pop
and
out
int3
and
inc
cmp
jae
bnd
mov
sub
jnp
repnz
sbb
push
jb
daa
dec
xlat
stos
xlat
cmc
test
in
mov
pop
or
xchg
bound
cs
nop
mov
repnz
adc
in
aaa
mov
inc
mov
push
outsb
and
out
xchg
insl
cmp
xchg
into
push
mov
fwait
clc
pushf
jne
adc
or
mov
dec
cmp
jecxz
ljmp
aaa
enter
push
nop
and
mov
notl
cmpsl
adc
ja
mov
jb
dec
adc
fidivs
xchg
push
js
jae
mov
inc
jmp
lahf
stos
fcompl
bound
sub
xlat
and
push
pop
lahf
stc
cltd
mov
out
mov
call
clc
and
jne
addr16
cmp
cmp
xchg
and
cmp
pop
xchg
mov
lock
jmp
pop
dec
fcmovnu
push
jo
scas
xor
mov
add
adc
nop
lret
pushf
jle
sti
nop
sahf
ljmp
add
xchg
into
mov
lods
out
imul
mov
sbb
dec
mov
sub
jns
roll
mov
lret
xchg
fcoml
xor
jmp
or
inc
jnp
pop
cwtl
push
xor
cwtl
ljmp
pushf
fwait
mov
cmp
jne
adc
xchg
inc
je
ljmp
xor
mov
sub
xchg
stos
repz
mov
mov
pop
mov
mov
fstpl
idivl
and
rclb
add
mov
icebp
jne
push
in
xchg
lret
xor
push
and
inc
add
jle
lret
std
push
inc
mov
xor
jo
cmp
in
pop
sbb
sub
andl
adc
cld
cld
imul
sarl
xchg
aad
repnz
jmp
adc
sub
out
sahf
cli
sbb
in
in
bound
jecxz
xchg
outsl
pop
scas
scas
or
cmp
out
pop
lea
and
sub
or
and
hlt
push
add
int
jle
outsl
or
sbb
mov
mov
push
iret
fs
inc
or
mov
mov
and
cmpsb
dec
xor
shr
movsl
adcl
ss
xor
push
jo
dec
mov
mov
les
dec
cmpsb
inc
mov
mov
rorl
movsl
mov
mov
es
mov
mov
sub
sub
cmpsb
andb
xchg
jno
ja
outsl
jle
cmpsb
dec
mov
imul
rcll
sub
sub
adc
movsl
leave
into
fsub
clts
mov
adc
cmp
adc
mov
mov
mov
sbb
mov
lods
shll
jnp
jne
je
jns
pop
mov
repz
imul
adc
loop
mov
lret
bound
ja
mov
nop
inc
in
sbb
or
cmp
sahf
xchg
xchg
jb
lods
pop
mov
aas
mov
xor
fwait
stos
fs
xor
enter
ljmp
jno
hlt
fcomi
jb
dec
mov
sub
push
rorb
addr16
xor
sub
add
mov
ja
out
cld
cwtl
mov
js
mov
mov
ljmp
adc
xchg
inc
movl
xchg
adc
xchg
jle
movsb
xor
out
out
fidivs
arpl
xchg
or
stc
jmp
mov
shrl
mov
pop
push
sbb
mov
sbb
in
sti
mov
push
subb
pop
cmp
hlt
les
add
or
shl
cld
test
nop
push
mov
outsl
mov
lcall
imul
sarl
int
jne,pt
sub
call
cmc
movsb
pop
out
xor
int
imul
icebp
fnstenv
pop
pop
js
in
xchg
inc
pop
inc
loop
fwait
xor
scas
add
outsl
ret
push
or
jge
cmp
lret
push
jmp
imulb
pushf
sub
jbe
je
imull
xor
out
in
lret
push
fmull
out
xor
gs
ficompl
xchg
pop
shrl
sub
xchg
call
scas
repz
xchg
mov
push
xchg
add
or
fwait
adc
inc
xchg
lock
fstps
stos
lret
stos
cmpl
pop
stos
xchg
sbb
mov
cmp
mov
jecxz
sub
pop
cli
cld
mov
push
cs
insl
ror
dec
lock
in
std
mov
repnz
jge
xchg
andl
inc
popa
cmpsl
adc
add
mov
lea
ficompl
loope
jmp
sbb
icebp
jnp
sbb
sub
xchg
mov
out
and
out
pop
fs
call
inc
lea
dec
adc
and
outsl
mov
notb
mov
pop
jo
or
mov
jno
bound
std
or
lods
bound
lcall
ds
xor
gs
pusha
jo
pop
mov
dec
mov
lock
divb
mov
mov
insl
cs
push
add
adc
cmpsb
stc
lahf
add
push
push
cmp
mov
sub
pop
lock
nop
pop
add
jne
lahf
dec
cmp
mov
lods
outsl
mull
inc
repnz
dec
test
popf
mov
sbb
imul
mov
inc
xchg
and
mov
jg
iret
xchg
lea
inc
in
xor
test
inc
fdiv
enter
push
or
xchg
test
addr16
mov
rorl
scas
pop
cmp
cmpsl
and
pop
dec
in
xchg
xor
dec
into
das
sub
loopne
cmp
ret
test
jno
mov
xor
or
cmp
je
in
jns
lahf
bswap
dec
lret
cmp
add
clc
pop
jae
xchg
sub
dec
and
mov
leave
xchg
shlb
sub
in
cwtl
xchg
or
ds
mov
or
sub
outsl
sbb
mov
jb
push
xchg
and
push
movsb
cmp
xchg
jae
imul
pusha
mov
pop
scas
outsb
hlt
loop
fldt
jle
fdivp
xor
inc
mul
dec
mov
lods
imul
and
insl
mov
push
sub
adc
mov
xlat
rcll
out
sti
dec
stc
pop
ficompl
rcll
jne
aam
mov
addr16
push
inc
push
mov
xchg
jl
sub
mov
imul
mov
test
imul
daa
sbb
push
call
mov
mov
xchg
loope
mov
loope
sub
dec
sub
std
dec
add
movsl
aas
imul
push
cwtl
fisubl
fdivrl
or
clc
jge
xchg
and
dec
xor
lahf
xchg
jno
fdivrl
fisttps
daa
push
adc
ja
mov
mov
dec
sti
adc
sub
adc
lods
mov
fs
add
sbb
ret
jbe
cmpb
xorb
mov
mov
sub
lret
pop
pop
xchg
push
cmp
cmp
repnz
ret
pop
push
fxch
std
add
and
sub
or
pusha
jmp
push
or
jne
push
mov
inc
pop
sbb
lock
sbb
sub
enter
inc
sub
mov
mov
jbe
and
pop
sbb
daa
test
or
mov
add
into
add
rcr
push
inc
push
sbb
sahf
and
aas
mov
fnstsw
xor
hlt
jo
cmp
adc
push
dec
stos
lret
mov
adc
pop
out
push
and
jecxz
push
or
test
into
xlat
jge
cmp
ret
adc
cwtl
dec
jg
jb
mov
lret
shll
sbb
imul
sub
dec
add
scas
test
loop
sti
les
pop
mov
lret
mov
enter
rolb
cmpsb
pop
stos
cltd
sub
daa
adc
enter
xchg
inc
jl,pt
fldcw
mov
xor
lret
cmpsl
leave
jge
in
add
outsb
pop
xor
sbb
or
cmpsl
inc
mov
sub
in
jmp
sarb
mov
push
daa
dec
dec
dec
test
xchg
jmp
popa
out
add
or
bswap
mov
stc
cld
int3
inc
jl
je
push
iret
in
mov
push
imul
aaa
xchg
cmpsl
fwait
das
jns
pop
mov
xchg
mov
mov
movsl
lret
stos
mov
pop
jg
outsl
dec
xor
ljmp
loop
stc
lea
push
mov
fprem
lcall
jbe
fnstcw
daa
mov
test
jb
inc
and
mov
jmp
int
mov
int3
or
bound
push
popa
cmpb
into
push
sub
sti
js
je
hlt
push
rcrl
int
xchg
jmp
push
fsub
hlt
and
lock
jb
jge
sub
jle
mov
test
xor
or
addb
out
fstl
sbb
add
mov
or
out
dec
cmpsb
int3
mov
or
lods
pop
lcall
xor
movsl
in
enter
bound
test
jns
lds
adc
les
push
push
es
filds
sarl
mov
mov
cmp
lahf
scas
add
xchg
cmp
scas
pop
sbb
adc
cmpsb
inc
insb
ffree
mull
out
mov
int
testl
in
int3
inc
enter
jbe
cmpsb
ss
popa
in
int
xchg
inc
lret
icebp
inc
ds
xor
mov
fidivrs
cmp
adc
or
fwait
leave
pop
repz
or
fwait
xchg
sbb
in
add
sub
pop
jne
xchg
add
or
dec
and
and
mov
or
test
lcall
icebp
sbb
rcrl
pop
mov
dec
xor
filds
std
mov
lods
cmc
iret
ja
stc
sbb
push
imul
jb
mov
mov
mov
and
pop
push
ret
mov
aas
cli
sbb
xor
les
add
and
ja
ret
arpl
xchg
add
loop
fisubrs
cmp
push
pop
xor
adc
daa
pushf
push
out
mov
sub
cmp
jmp
mov
ja
fmul
stc
dec
cmp
sub
imul
mov
ss
mov
and
push
adc
movsl
stos
lahf
mov
test
mov
sbb
sbb
sbb
and
das
xchg
stos
sbb
jp
jb
xor
add
pop
jns
xchg
jp
jnp
pop
xchg
pop
ja
testb
pop
aas
xchg
sub
mov
enter
lods
sub
jns
aam
mov
loopne
sbb
lret
hlt
in
add
cmp
cli
jle
push
daa
push
jg
inc
cmp
hlt
add
orb
cmpsl
in
mov
push
stos
push
in
mov
xchg
lret
mov
lock
mov
sub
mov
cmp
mov
sub
sub
fcmove
fbstp
jns
cltd
stos
fcomip
adc
xchg
inc
cli
dec
xchg
cmp
gs
inc
push
inc
loopne
call
xchg
cmpsb
fcomp
add
cmp
add
add
cli
sarl
or
addr16
or
lods
int
push
sub
cmpsb
scas
pop
mov
mov
xor
adc
mov
arpl
out
movsb
jp
pushf
out
push
sti
fiadds
ffreep
ljmp
pop
adc
add
rep
sub
mov
stos
jne
add
fcomp
mov
mov
loopne
sub
jmp
mov
xor
dec
and
popf
cmpsb
in
aad
sub
add
push
fildll
into
sbb
dec
jg
pushf
pop
js
jecxz
push
push
push
push
jle
faddl
test
sub
inc
inc
jmp
xchg
inc
std
sbb
in
popf
mov
mov
std
push
add
test
filds
mov
inc
mov
mov
inc
call
dec
js
sub
mov
push
jo
push
ss
pop
pop
add
pop
push
add
jp
hlt
in
cmp
push
xorl
jg
enter
sbb
loop
ds
mov
addr16
mov
sub
mov
jmp
mov
or
scas
inc
mov
inc
aam
xor
jne
int
push
addl
add
in
es
adc
jae
dec
xor
rcrb
mov
push
cmp
xchg
into
aaa
and
cmp
out
mov
push
xor
and
mov
mov
jge
lea
push
lret
jnp
and
add
jne
pop
lds
cld
jg
lds
sub
pop
sub
sub
lret
lahf
cmp
loopne
or
sub
cwtl
enter
ss
data16
popa
js
jecxz
or
repnz
mov
jo
xchg
popa
incl
mov
popf
cmp
jp
xchg
mov
cwtl
pop
and
inc
push
fbld
lods
mov
mov
inc
fadds
nop
shrl
push
sarl
je
add
adc
dec
push
pop
ret
rcll
ret
and
pop
testb
jge
lods
sub
ficompl
sti
mov
xchg
loop
ret
and
add
dec
jno
dec
test
lock
push
dec
out
jl
movsb
mov
out
aad
push
jl
adc
lds
ja
out
cmp
mov
repnz
jmp
ljmp
fcomi
nop
imul
sti
ja
fcoms
adc
xchg
dec
inc
ja
jb
or
sub
cmp
sub
hlt
shll
or
sbb
movsl
int3
jmp
out
and
and
clc
xor
cmp
xor
ret
cli
rcrb
fwait
add
mov
popf
push
insl
test
ror
jno
xchg
xchg
push
fldl
hlt
xor
jmp
push
or
push
call
aas
or
xchg
lods
cmp
clc
pop
subl
sbb
pop
pop
mov
push
inc
cld
aas
mov
adc
push
and
sub
in
lds
bound
jp
jae
out
or
inc
jae
pop
in
and
dec
and
lret
ret
mov
mov
mov
lods
xor
ja
mov
sbb
mov
les
mov
ss
loop
mov
push
pusha
testb
mov
jg
adc
mov
dec
in
add
and
sub
mov
test
add
xchg
xchg
sar
outsl
fiadds
sub
sbb
jb
or
inc
mov
into
xor
sub
sub
in
push
mov
insb
fnstsw
inc
xchg
fldt
dec
insl
or
add
cmp
add
cmp
pmaddwd
cli
push
pusha
mov
sti
in
push
dec
int3
jge
xchg
inc
push
imul
stc
xchg
test
cmpsb
mov
insl
lret
sbb
shl
das
cli
dec
out
addr16
or
push
inc
and
xor
sub
xchg
les
aaa
ljmp
push
xchg
ficoms
mov
fwait
ja
mov
clc
push
mov
jae
or
test
outsb
pop
mov
mov
lahf
leave
gs
iret
nop
scas
ret
gs
or
leave
stos
lret
pop
bound
pushf
jg
xor
mulb
push
jne
cwtl
jecxz
and
sarb
and
les
fnstsw
cmp
mov
xchg
cmp
enter
push
or
fimull
and
enter
loope
inc
inc
push
xchg
outsl
fdivrp
sub
roll
inc
fmuls
push
icebp
mov
sbb
fisttpl
inc
xor
dec
cmp
aas
int3
adc
mov
push
sub
cmpsb
add
mov
andb
icebp
aaa
xchg
shl
inc
repnz
pop
adc
push
fnstcw
loop
mov
adc
int
inc
jl
push
movsl
adcl
leave
pop
addr16
lods
loopne
push
int
cmp
jne
daa
je
pop
fbstp
in
jb
inc
inc
mov
add
adc
mov
cmc
dec
jnp
enter
xor
rorl
test
and
mov
pop
lods
repnz
loopne
lcall
pop
cmp
add
cld
adc
shl
leave
rcrl
adc
lds
adc
sub
lods
mov
or
cmp
cld
xor
sub
and
stos
rclb
repz
fs
pop
xor
and
jl
lds
leave
xor
dec
lahf
sarb
jb
bound
add
push
mov
push
xor
ja
orb
sub
mov
dec
jno
bound
gs
test
jle
sub
fbld
fnstcw
subl
movsb
xchg
adc
into
push
out
mov
or
lea
xchg
pop
and
jg
je
xchg
cmp
inc
fwait
ljmp
push
inc
cmp
adc
loop
sbb
rcl
ror
sbbl
cmp
in
jne
les
xor
push
movsl
cmpsl
mov
jnp
cmp
and
cld
daa
out
xor
sbb
xor
stc
pop
fcmovb
aad
xorl
imul
mov
xor
fnstsw
push
inc
xchg
ja
les
in
test
inc
dec
fcmovb
int3
lret
pusha
adc
pop
xlat
shll
jmp
lahf
mov
xchg
std
enter
and
dec
lods
dec
mov
push
test
cli
jo
dec
jge
sbb
jl
and
scas
sar
push
jge
push
lods
sub
hlt
push
inc
repnz
xor
lods
mov
pop
sbb
xchg
mov
int3
inc
pop
dec
jg
pop
push
sbb
out
add
ja
out
jne
sub
push
testl
into
pushf
jp
movsb
dec
popf
and
sub
xchg
xor
jnp
dec
loopne
test
push
inc
cld
mov
push
lods
movsl
xor
in
aam
pop
cmp
cmp
xchg
mov
es
jp
out
sub
mov
leave
inc
outsl
lds
sbb
mov
mov
int
movsl
clc
stos
lahf
sbb
in
mov
cmc
pusha
testb
into
inc
mov
add
xorb
xor
rcll
in
jb
mov
push
or
mov
adcl
inc
push
mov
or
test
jg
insl
adc
sbb
mov
aas
mov
stos
inc
and
inc
pop
shll
popf
push
in
pop
imulb
pop
jecxz
outsb
dec
cmp
iret
or
loop
ljmp
jo
mov
lahf
pop
movsb
inc
fwait
pop
sub
push
std
fisttpl
pop
dec
pop
jns
adc
rorl
cmp
xor
insl
mov
pop
fucomi
push
pop
sub
sub
insb
sub
ds
loop
std
pop
jle
dec
xor
mov
cmp
test
fstpl
mov
dec
dec
cmp
not
daa
cmp
mov
add
stc
fwait
cmpsb
adc
jp
xchg
cmovnp
jmp
add
adc
rorl
xor
mov
loop
pushf
jl
xchg
mov
lahf
dec
inc
xor
lock
jecxz
xchg
lret
pop
push
stos
mov
sub
mov
movsl
cmpsl
ficomps
cmp
sbb
int3
xor
inc
mov
jno
and
sti
movb
das
mov
dec
das
aam
sti
mov
push
jge
pop
sarb
cmp
js
cmpsl
sarl
xor
jcxz
xchg
dec
sbb
lods
cwtl
out
or
xchg
in
mov
pop
sbb
mov
pop
mov
add
dec
adc
sbb
fs
or
divl
dec
jecxz
or
in
inc
xor
pop
or
push
cld
mov
dec
outsl
jo
mov
stc
jge
fistps
sbb
push
inc
jae
out
insl
xlat
movb
mov
cmp
xchg
ss
mov
pop
xchg
lret
jge
cmp
fildll
cmp
jmp
xchg
iret
pop
flds
and
repnz
xor
xor
push
out
cwtl
into
pop
mov
pop
dec
daa
jle
push
cmp
ljmp
mov
pop
mov
mov
push
mov
iret
inc
or
cld
sub
popf
inc
add
sbb
inc
test
pop
pop
inc
lock
shll
test
cwtl
imul
psubw
scas
push
jl
insb
les
lods
fs
int
cmp
xchg
push
push
imul
add
push
fwait
cmpl
addr16
roll
jge
jb
xchg
cmpsl
fadd
daa
mov
nop
fisttps
adc
jo
notb
aaa
into
sub
mov
leave
int3
sbb
mov
jecxz
pop
lock
mov
push
mov
cmpsb
push
adc
dec
push
fildll
movsl
fidivrs
dec
inc
notb
lock
aam
push
repnz
data16
and
and
out
fdivrs
push
mov
aaa
jmp
push
xor
xchg
xchg
or
adc
loopne
sbb
popf
mov
cmp
out
test
loop
decl
and
adc
arpl
and
xchg
push
ret
cmp
daa
shll
cld
sbb
fs
adc
lret
or
pop
movsl
mov
insl
ja
xchg
fiadds
std
jecxz
inc
pop
dec
dec
lds
or
mov
mov
outsb
pushf
push
sbbb
xorb
add
inc
cmpsb
jne
push
inc
les
xchg
adc
mov
cltd
mov
cltd
xchg
mov
cmpsl
into
pop
pusha
iret
out
xor
push
icebp
xor
fucomi
xchg
int
mov
sbb
xchg
mov
fdivrs
and
adc
and
cltd
mov
cmp
in
xor
repnz
adc
dec
clc
push
enter
cmp
scas
fwait
mov
and
pusha
test
pop
out
add
test
mov
cld
sub
popa
and
mov
sbb
inc
mov
jl
jl
bound
xchg
ret
test
out
xor
jle
xchg
xor
faddl
cmp
pop
es
or
aaa
loopne
pop
data16
lds
bound
mov
mov
addr16
in
or
icebp
mov
add
mov
sub
stos
sti
outsb
dec
fisttps
add
aam
or
adc
inc
mov
fiadds
in
cmp
bound
ljmp
pushf
ds
xchg
gs
and
hlt
sbb
push
scas
scas
and
mov
imul
mov
ss
sbb
pop
xor
clc
rcrl
sahf
fiaddl
xor
adc
adc
mov
inc
push
aaa
push
inc
roll
mov
push
cs
jns
negb
add
ds
push
gs
jae
add
push
jno
imul
gs
enter
xchg
push
mov
add
jnp
aad
dec
xchg
arpl
std
insl
ja
popf
add
add
andl
int
movsb
add
xchg
xchg
fisttpll
cmpsl
test
enter
inc
loope
push
adc
aaa
movsb
fdivr
inc
in
xor
or
pop
mov
insl
js
inc
imul
imul
jge
sub
fiadds
arpl
ffree
imul
jp
push
cltd
inc
cmp
push
inc
lock
clc
adc
js
adc
lahf
out
lock
jno
pop
repz
out
sbb
loop
jp
and
dec
mov
cmp
out
push
out
ds
xchg
and
sbb
fmuls
dec
xor
and
scas
pop
movsl
or
mov
aas
push
adcl
jp,pn
xchg
jno
frstor
mov
ja
cs
out
mov
sbb
push
gs
call
pop
inc
and
ret
fnsave
and
push
repnz
dec
cld
lret
push
movsl
jp
push
push
ja
inc
enter
sti
ds
fidivs
mov
xchg
std
or
movsb
mov
stos
pop
sbb
mov
dec
mov
mov
mov
js
ret
mulb
ds
push
imul
mov
add
pusha
lahf
mov
cmp
fsubp
cmp
inc
lahf
xorl
aaa
mov
cwtl
push
fadds
repnz
jae
mov
mov
loop
cmp
int3
scas
jnp
aam
cmp
popl
xchg
cld
or
dec
inc
testl
pop
dec
mov
into
lret
lahf
test
or
xchg
adc
cmpsl
mov
add
pushf
jno
jne
mov
inc
mov
pop
shll
cmp
push
clc
jno
out
xchg
aas
dec
addb
outsl
sti
sarb
lret
xor
xchg
jno
and
lret
mov
sub
xchg
in
andl
and
int3
lret
clc
aas
sub
pop
int3
ja
add
cltd
fs
lods
lret
stos
sar
sarb
jb
mov
jge
cmp
sbb
es
sbb
mov
cltd
and
jge
leave
gs
push
jbe
jbe
xchg
popf
fstpl
enter
adc
add
sti
incb
mov
sbb
lret
fwait
sti
outsl
jnp
mov
sub
cmp
stos
repnz
outsb
out
sbb
sbb
mov
into
jmp
sbb
popa
lock
inc
pop
pop
cli
icebp
xchg
xlat
out
rol
fsub
mov
push
gs
ret
or
cmp
xlat
mul
lret
cmp
mov
add
out
xlat
movsb
orb
scas
lcall
lods
lock
loopne
and
negl
pop
inc
push
mov
loop
int3
xchg
loopne
push
imul
pop
sti
fadds
xchg
frstor
sbb
cld
cmova
in
xchg
jecxz
mov
aaa
push
add
scas
and
mov
mov
cmp
test
mov
rcll
ss
push
xchg
nop
mov
mov
xor
sub
inc
jg
mov
adc
int3
ss
pop
adc
stc
mov
fnstcw
mov
jle
in
cmpsl
mov
jp
fsubl
flds
sahf
mov
insl
pop
cmp
gs
aaa
or
aaa
sbb
inc
lret
cmpsb
mov
sbb
push
loop
sbb
cli
pusha
fmuls
add
sbb
rorl
mov
fnstsw
fildl
sbb
cld
scas
and
mov
sub
jbe
int3
ljmp
adc
jo
and
mov
rorl
push
outsl
popl
xchg
mov
lret
push
cmp
push
jg
push
lcall
add
inc
sbbb
and
mov
test
cld
test
dec
lea
test
xchg
ret
jg
jns
loope
stos
cli
and
push
or
cwtl
xchg
mov
loope
cmp
cmc
out
push
push
out
xor
movsb
ss
cs
mov
push
fnstenv
sbb
repnz
addb
add
movsb
jle
dec
mov
into
or
or
fsub
cmp
inc
mov
add
or
add
adc
xor
push
inc
sahf
ret
test
lcall
xchg
cmp
int
nop
int
adc
out
sub
cwtl
mov
mov
aas
xchg
sub
and
xchg
inc
push
ja
andb
cltd
fbstp
cmpsb
adc
ret
sbb
pop
inc
xor
cmpsl
xor
push
fwait
jns
roll
push
pop
insl
fists
fcoms
sbb
fidivs
rorb
and
push
aaa
mov
jne
and
sbb
mov
out
add
mov
jno
sub
cmp
test
icebp
call
xchg
aad
cwtl
pop
cmpsl
test
xor
mov
imul
in
adc
ljmp
ror
js
or
ss
mov
xchg
and
sarb
lret
adc
pop
sbb
cmc
mov
sbb
bound
scas
insl
push
add
xor
in
dec
cmp
icebp
repnz
scas
mov
sbb
dec
xor
pop
xchg
data16
lahf
aas
cmp
mov
mov
sub
mov
xchg
repnz
jns
sbb
pop
jno
mov
mov
jl
call
icebp
je
mov
loope
test
cmpsb
fists
loopne
mov
xchg
adcl
jo
jmp
dec
stc
int3
je
jns
pushw
mov
subl
sub
push
roll
cmp
arpl
sbbb
mov
aas
and
outsb
out
push
and
dec
inc
ficompl
sbb
and
inc
imul
imul
cmp
adc
nop
stos
xor
imul
and
sbb
jp
scas
cmp
sarb
xchg
push
jae
jmp
push
cmp
pushf
loopne
sbb
out
icebp
scas
push
push
lock
je
fstps
mov
xchg
mov
xchg
mov
jle
xchg
pop
pop
adc
mov
cmpsl
jmp
nop
jl
xchg
int3
cmp
loopne
hlt
addr16
ljmp
scas
cmp
lcall
xchg
mov
aad
pop
adc
arpl
pop
pop
jb
addr16
orb
prefetchwt1
or
sub
mov
jbe
or
clc
jle
pop
stc
mulb
cmp
and
or
mov
mov
nop
lock
out
add
pop
xchg
pop
js
pop
pop
test
into
and
sarl
dec
int3
arpl
jno
out
frstor
add
sub
jl
pop
dec
frstpm(287
push
push
hlt
andl
jmp
pusha
mov
pushf
negb
stos
rcrb
and
das
and
int3
mov
loope
notb
idivb
pop
in
les
pop
loopne
repnz
push
insb
xchg
lock
jb
mov
mov
mov
push
adc
loopne
inc
adc
inc
outsl
gs
inc
mov
ffree
outsl
mov
scas
adc
push
mov
mov
or
fcompl
or
stos
adc
aad
or
xchg
pop
aad
mov
insb
mov
sbbl
inc
mov
shlb
lods
xchg
data16
shll
jns
push
jne
dec
push
pop
scas
stc
iretw
dec
sub
imulb
adc
divl
or
aas
popf
arpl
dec
inc
fimull
mov
cmp
sub
lods
nop
test
cs
adc
xchg
icebp
mov
sbb
imul
ds
sahf
sub
and
xchg
mov
cs
jle
stos
test
or
jae
dec
fcompl
cmp
test
fldt
jmp
push
test
mov
jbe
inc
push
cmp
xchg
add
push
rcrb
push
jmp
mov
jmp
addr16
dec
dec
or
test
xchg
es
push
or
mov
sub
imul
mov
mov
mov
inc
pop
dec
dec
data16
or
push
xor
aas
xchg
jmp
and
pop
je
xlat
sub
dec
out
inc
xchg
push
testb
out
add
nop
sbb
mov
mov
push
je
xchg
outsl
into
outsb
test
xchg
pop
outsl
mov
sub
pop
jbe
sbb
bound
cld
movsb
les
je
adc
inc
addl
fnstcw
dec
and
frstor
xchg
or
lahf
mov
inc
add
in
cmc
sub
adcl
add
and
lahf
mov
aas
dec
daa
push
cmp
cmpsl
inc
xchg
shlb
jmp
mov
dec
adc
xchg
imul
push
ret
jnp
out
sbb
sub
iret
jne
test
clc
pop
push
leave
int
subl
popf
cmp
or
ljmp
dec
add
lret
pop
insl
mov
and
outsb
std
mov
pusha
mov
xchg
inc
fstpt
cmp
scas
lahf
jns
mov
xor
jno
mov
ret
add
pusha
rorl
shlb
xchg
and
mov
leave
ss
xlat
setbe
bound
sbb
inc
sar
movsb
xchg
sbb
mov
stos
xchg
dec
sbb
imul
cmp
or
popa
stos
inc
sbb
ja
shll
shrl
dec
lods
cmpsb
push
movsb
das
sub
and
xchg
test
pop
daa
mov
movsb
in
or
add
or
xchg
cs
cmpl
arpl
daa
fisttps
and
addb
sub
sahf
mov
cmp
in
js
adc
sub
popa
add
sub
loop
daa
mov
movsl
int3
mov
sub
enter
mov
push
pop
imul
int3
xchg
cmp
mov
in
mov
add
mov
push
adc
mov
pop
pop
xchg
mov
cmp
mov
arpl
insl
or
hlt
xchg
pop
repnz
stc
lret
dec
in
sbb
sub
aaa
jp
and
sbb
lds
jae
mov
fadds
pop
sbb
sub
sti
cmc
loop
jbe
jl
loop
cmp
push
bound
push
rolb
adc
or
pop
push
fstps
add
jmp
in
gs
push
js
pop
mov
ficoml
ret
and
es
movsb
dec
pop
inc
add
cld
adc
adc
setge
sub
mov
add
dec
out
fwait
push
jbe
jl
adc
xchg
es
or
push
xchg
leave
add
inc
sti
inc
rcrl
or
push
xchg
jb
inc
aaa
xor
xorb
pop
cmpb
adc
jl
jecxz
lods
mov
scas
jno
push
into
gs
xchg
das
rcr
mov
cmp
nop
sbb
dec
mov
in
mov
xor
ret
adc
data16
cmovbe
push
lahf
or
lods
pushf
sarb
mov
adc
mov
scas
and
sahf
lds
push
sqrtps
mov
in
mov
pop
lret
ret
add
push
repz
xor
add
mov
popa
or
push
pop
repnz
inc
xchg
popf
hlt
add
repnz
scas
adc
pop
mov
mov
fisttpll
fldt
add
jnp
andb
mov
pop
mov
fsts
xchg
orl
iret
xchg
loopne
int3
fdivl
pop
ds
dec
cmpsl
jg
mov
aad
fucomi
jmp
adc
xor
insb
pop
lea
push
cltd
nop
in
aas
jecxz
scas
and
mov
dec
pusha
sub
jno
cmp
dec
pop
popf
lods
in
mov
imul
mov
daa
dec
movsl
pop
jno
cmpsb
sub
inc
aas
xor
sub
add
mov
cli
push
call
adc
loop
adc
xchg
outsb
jg
out
mov
aaa
xor
dec
sbbb
push
dec
inc
pop
inc
and
aas
xor
sbb
xor
xchg
xchg
mov
add
or
xchg
inc
dec
fsubs
sti
out
jl
lock
lea
mov
jne
push
pop
pop
sub
fbstp
mov
in
or
jl
add
xchg
push
mov
and
mov
pop
mov
test
lods
xchg
mov
or
jb
pop
adc
pop
push
gs
test
mov
pop
mov
sbb
mov
data16
push
inc
add
pop
jae
sti
adc
inc
mov
add
dec
adc
jg
inc
jp
jge
addr16
cwtl
xlat
inc
sub
daa
dec
adc
popf
out
movb
pop
lds
iret
xchg
pop
push
xchg
dec
adc
shll
dec
push
aam
inc
add
sub
dec
mov
push
test
ljmp
fsubp
and
sub
xchg
xchg
pop
mov
push
in
lods
sub
fmuls
and
test
ss
pop
popa
add
leave
adc
xchg
lds
les
js
es
cmp
enter
out
sbb
xchg
daa
push
fs
dec
lcall
cmp
jno
lcall
push
popf
mull
into
mov
jo
js
jo
sbb
inc
cltd
gs
xor
fcoml
mov
lea
popf
and
adc
mov
xchg
dec
andl
mov
mov
insb
loopne
stc
add
inc
push
sub
lahf
movsb
repz
sub
mov
jo
ret
dec
jae
inc
add
stc
cmc
cmp
aam
outsb
jb
test
das
in
add
adc
sub
mov
fcoml
xchg
sbb
pusha
mov
pop
in
addl
xchg
pusha
add
xchg
xor
adc
mov
imul
inc
pusha
les
mov
fldt
add
cltd
popf
lret
jnp
add
sbb
mov
sarb
clc
icebp
icebp
lahf
cmp
mov
or
jae
mov
xcrypt-cbc
fchs
pop
sbb
loop
and
cmp
in
mov
iret
mov
test
push
jecxz
aas
xchg
xchg
mov
cmp
aaa
push
mov
cmp
mov
sarb
shll
loop
xchg
outsb
out
incl
push
dec
stos
inc
jmp
push
test
movsb
add
rclb
push
pop
lcall
sub
cld
fs
inc
pop
adc
xchg
fldt
test
sbb
stc
decb
xchg
mov
mov
push
mov
sub
and
jle
xor
push
lods
inc
idiv
arpl
mov
sbb
jge
ss
pop
xchg
xor
cs
mov
mov
jmp
xchg
shrb
gs
mov
add
mov
ljmp
sbb
push
cld
push
xor
dec
sub
and
je
mov
xchg
dec
and
add
je
cltd
sbb
or
mov
dec
repz
mov
mov
shll
jg
gs
cmp
mov
fcoms
push
gs
gs
sbb
fldt
add
shrl
sub
into
lods
out
add
les
jl
adc
pop
push
jmp
cmpsl
popf
push
xlat
push
test
loop
jmp
adc
inc
xor
mov
frstor
lds
idivl
and
rclb
ficompl
roll
mov
lds
stos
packuswb
mov
xor
out
add
jle
jns
mov
inc
bound
mov
out
jg
stos
xlat
cmp
out
mov
sti
insb
dec
int3
mov
lahf
movsl
or
sti
aam
cmp
push
insl
mov
call
xchg
xchg
mov
push
ret
push
cwtl
or
fsubrs
mov
push
fwait
adc
mov
xor
movsb
push
inc
in
and
xor
leave
sbb
mov
push
ja
jl
adc
pop
stc
inc
loop
shll
cmp
call
dec
dec
dec
enter
xor
or
mov
nop
ljmp
je
jbe
pop
cmp
or
or
mov
outsl
pop
jle,pn
ret
sbb
mov
out
lret
mov
jb
and
pop
xchg
jo
mov
test
push
mov
push
adc
mov
mov
pop
jbe
mov
add
sub
ss
mov
cmp
movsl
mov
stos
jmp
dec
push
in
data16
xor
sahf
inc
iret
add
pusha
jbe
roll
pop
pop
std
cli
xchg
movb
or
cmp
lret
in
cmpsb
dec
mov
xchg
mov
dec
fsub
and
cli
sub
push
outsb
nop
push
push
cld
outsb
mov
pushf
add
mov
adc
xor
sbb
leave
adc
int
cmpsl
imul
jge
sub
xor
inc
dec
movsb
cld
jle
inc
icebp
nop
jbe
fisttps
call
mov
xchg
xchg
test
lret
mov
mov
cmp
or
and
sbb
inc
sub
xchg
mov
gs
push
out
mov
call
sti
hlt
sarb
fists
js
jle
sahf
jo
jns
and
lea
xor
dec
cmp
dec
cmp
lock
xor
pop
sbb
test
jae
or
dec
adc
jbe
xchg
push
cmc
seta
daa
jno
dec
add
cmp
dec
lock
dec
cmpsl
into
add
adc
js
lret
ja
gs
je
pop
add
lods
int
jnp
inc
mov
pop
cmpsb
repnz
lret
adc
sti
xchg
jp
loope
adc
loop
fsubr
stc
cmp
es
inc
mov
or
shrl
test
lods
mov
fadd
or
dec
shrl
mov
and
cmp
lods
push
sbb
add
lahf
xchg
call
mov
clc
sarb
pop
sub
inc
mov
stos
dec
mov
pop
mov
cmpsl
jbe
jb
pop
enter
jne
popf
adcb
xor
outsb
loope
out
pop
push
pop
pop
shl
cmp
pop
mov
fs
loope
jo
aaa
cmp
or
jmp
mov
int3
lock
sti
sbb
mov
loope
push
xchg
scas
xchg
jo
inc
stos
sbbb
inc
and
xchg
xor
push
cmc
xchg
mov
int3
mov
mov
movsb
in
mov
jg
dec
faddl
pusha
cmp
sub
aaa
ss
mov
mov
cmp
roll
fldt
scas
pop
nop
mov
mov
or
jle
in
sub
lock
and
lret
push
mov
ds
jbe
xchg
mov
ljmp
iret
je
out
pop
push
rclb
rolb
mov
mov
mov
mov
or
fistpll
jne
int3
pusha
xchg
outsb
lds
xchg
mov
aam
aad
adc
lds
inc
clc
hlt
or
add
xor
sbb
xchg
add
repz
pop
push
or
sub
xor
sbb
mov
add
sub
call
in
jp
repnz
std
and
push
rorb
add
sbb
loop
sbbl
call
sbb
xor
pop
xor
jae
nop
mov
sbb
pop
or
cmpsl
and
ss
fldl2e
xchg
mov
xor
mov
add
or
loopne
add
mov
fiadds
jmp
daa
xlat
xlat
pop
pop
mov
xchg
lret
mov
lods
sub
sbb
jg
pop
scas
xchg
addl
fcomps
rcrl
cltd
cmp
sub
pop
sbb
pop
mov
jbe,pt
sti
and
mov
and
out
mov
adc
xchg
inc
pop
xchg
test
and
or
cmp
dec
daa
pop
scas
push
mov
sub
pop
pop
push
lods
inc
rcll
iret
push
push
icebp
cmp
sub
adc
cli
mov
insb
sub
mov
or
mov
fcmovbe
call
aas
adc
jg
int
insb
and
bound
push
scas
fstl
mov
hlt
pop
mov
in
sub
jnp
mov
pop
dec
mov
dec
test
lcall
lds
aam
adc
mov
add
mov
add
pushf
mov
push
push
icebp
xlat
add
cld
mov
xlat
xlat
aas
cs
mov
test
cmp
shlb
cmp
rolb
inc
aas
lahf
insb
fistpl
scas
cmp
gs
lret
rol
mov
jmp
insb
jge
sbb
cmovle
push
dec
add
jle
cmp
in
lods
hlt
jno
lcall
aaa
xor
sub
mov
sbb
jo
and
in
sbb
inc
inc
mov
inc
pop
pop
pop
or
nop
mov
fldcw
jl
mov
pop
add
or
inc
jle
cld
clc
lock
cmp
sub
dec
stc
int3
jg
jle
inc
je
dec
rcrl
cmp
fisubl
negl
fisubl
fstps
push
jmp
arpl
sub
mov
jne
faddl
add
mov
frstor
out
inc
nop
mov
fnstenv
and
and
stos
and
mov
mov
mov
lods
and
mov
incl
imul
adc
xchg
stc
or
out
iret
sub
idivl
sbb
mov
addl
fdivs
popf
shll
popa
xlat
push
into
aam
inc
mov
xchg
jne
push
xlat
lahf
out
xchg
repnz
test
sub
mov
fldt
lret
cmc
jecxz
cmp
in
hlt
insb
rol
xor
insb
enter
push
mov
sub
mov
ficomps
icebp
jnp
and
or
in
in
cli
ds
lods
and
pop
aad
stos
cmc
jmp
or
and
add
sti
clc
icebp
push
dec
push
les
xor
add
pop
and
sbb
and
jl
outsb
daa
insl
in
jle
push
sbbl
nop
xor
dec
arpl
xor
jmp
xchg
and
dec
and
loop
pushf
dec
paddw
xor
dec
xlat
push
xchg
cmpsl
adc
push
lahf
lock
mov
and
jo
mov
movsb
sti
xchg
lods
int3
cmp
push
xor
jle
pop
imul
and
jbe
jbe
sarb
push
or
rclb
clc
push
filds
hlt
hlt
adc
test
cmpsl
push
sahf
pop
mov
aad
ret
xor
or
fsts
clc
push
jmp
ficomps
adc
arpl
stos
ficoml
imul
mov
jnp
lods
leave
jbe
daa
adc
ret
sbb
mov
insl
clc
mov
int
scas
sub
pop
xchg
stc
out
xchg
xchg
lret
inc
mov
sbb
hlt
and
sbb
call
stos
add
ds
cltd
pop
sub
mov
movsb
cltd
mov
sub
fsubrl
psrld
dec
loop
pop
je
test
je
sub
adc
aaa
ret
ret
pop
sahf
shll
add
push
inc
jb
mov
pop
sbb
test
fldl
out
push
in
or
mov
push
xor
out
ljmp
call
in
sarl
pop
js
pop
dec
jo
xor
dec
jmp
mov
subl
fistpll
adc
add
mov
out
dec
test
mov
sbb
sbb
cwtl
jb
insb
xor
cld
add
pop
adc
add
shll
mov
popf
shrb
add
mov
insb
sbb
and
push
pop
insl
mov
cwtl
outsb
xor
sbb
test
pop
push
adc
cld
pop
lahf
pop
addb
nop
popf
loop
cli
dec
sbb
sub
pop
mov
movsb
or
sub
data16
iret
sahf
jnp
sbb
pop
cli
gs
movsb
icebp
push
mull
pop
inc
cltd
xor
bound
imulb
xor
sbb
clc
cwtl
in
pop
push
push
push
lahf
xchg
cmpsb
scas
outsb
push
sar
iret
int
int3
inc
insb
add
push
enter
leave
jo
cmp
mov
nop
jns
fnsave
insb
jecxz
push
notb
xor
adc
cmp
into
fisubl
sbb
pop
pop
out
or
pop
inc
lahf
movsb
mov
fprem1
fisttpll
cmpsb
cmpsl
rolb
loope
call
lock
pop
icebp
scas
pop
repz
push
jo
popf
cwtl
cmp
mov
mov
ss
mov
add
pop
sub
cmp
sbb
adc
and
sbb
fldcw
cmp
cmpsl
pop
pop
les
popa
fdivs
mov
loopw
out
inc
cmp
imul
stos
flds
repz
mov
adc
mov
xchg
mov
data16
jg
jg
cmp
push
jl
pop
jbe
or
std
dec
dec
xchg
jle
push
loop
fs
mov
xchg
fsincos
mov
and
sbb
cmp
repnz
push
sbb
inc
sub
mov
cmp
pop
cmpsb
fwait
inc
fs
stc
mov
pop
into
cmpb
int
imul
rorb
dec
or
es
cli
jle
repnz
mov
scas
std
call
enter
or
lods
cmp
int3
sub
js
sbb
int
sti
pop
fcoms
mov
data16
or
dec
push
cs
pop
pop
fbld
cmp
and
test
test
mov
aad
lods
lock
imul
fisttps
daa
cwtl
pop
std
push
lret
cmp
inc
popa
mov
cwtl
push
adc
dec
xor
adc
test
out
jno,pt
jae
leave
xlat
pop
mov
loope
sub
imul
paddb
xchg
out
cs
mov
mov
ss
lahf
xchg
or
xor
outsl
sub
stos
pop
les
loopne
or
adcb
and
shll
pop
orb
leave
loope
mov
loop
pushf
enter
sbb
jmp
adc
adc
xor
filds
fadds
les
xchg
mov
xlat
loop
nop
mov
lahf
fidivl
jae
stc
movsl
or
inc
sub
cmpsb
aam
sahf
push
nop
dec
call
mov
lcall
in
or
leave
arpl
cmc
fldenv
mov
sbb
xchg
std
xchg
clc
mov
xchg
decl
bnd
mov
cmpb
sbb
stc
insb
insl
cli
arpl
cmp
and
jmp
sbb
in
nop
testl
insb
push
hlt
jo
cmc
std
or
pop
js
cli
out
pushf
stos
jne
fldt
mov
pop
lahf
ss
mov
fcmovu
repnz
fs
lahf
push
cmp
mov
sbb
mov
add
pop
pop
cmpsl
outsb
inc
cmpxchg
test
xchg
xor
jle
pusha
xor
in
arpl
inc
pushf
test
notb
shrl
test
cltd
cmc
stos
jnp
jb
fldcw
inc
dec
call
or
out
pop
pop
out
pop
fiaddl
out
clc
xchg
je
or
xchg
imul
dec
xor
fxtract
shll
xor
jecxz
nop
addb
xchg
xchg
dec
cmp
andl
add
xlat
daa
or
out
lcall
jo
rorl
in
in
gs
stos
sub
cltd
pop
inc
pusha
jle
and
xchg
cmp
cmpsl
aam
jnp
std
lret
jb
push
adcb
es
ss
icebp
inc
inc
icebp
dec
dec
pop
push
mov
pop
and
push
mov
xchg
sbb
sti
and
xor
flds
addl
int
and
clc
jno
adc
add
cmpsb
inc
inc
adc
or
dec
enter
dec
and
sub
je
pop
cwtl
xchg
loope
hlt
push
and
mov
insl
mov
fldenv
in
dec
fwait
xchg
xor
jb
dec
inc
stc
xchg
mov
das
outsb
andb
ror
stos
or
cmp
inc
push
sbb
scas
adc
sbb
or
addl
push
inc
adc
or
mov
push
fst
in
sahf
mov
sbb
out
inc
data16
mov
outsl
add
loope
push
sub
mov
sbb
outsb
or
or
or
popa
or
inc
loop
pop
sbb
lcall
fistl
test
jg
stos
push
sbb
cwtl
dec
push
lods
loopne
aad
fs
mov
ret
xor
daa
sti
popa
dec
gs
in
push
hlt
sub
jl
hlt
movsb
xchg
mov
aas
insl
loopne
mov
gs
pop
prefetchwt1
ret
adc
popf
push
jmp
daa
inc
notl
pmaddwd
fwait
add
fs
ljmp
xor
dec
scas
dec
icebp
sti
scas
es
scas
hlt
pop
xchg
and
xchg
sbb
stc
adc
push
pop
jecxz
add
pop
dec
int3
scas
outsb
cmp
or
lods
repnz
push
cmp
orl
dec
sub
outsl
sub
data16
out
xchg
cmp
out
push
aaa
jge
add
insl
sub
dec
lret
mov
mull
xchg
xlat
ficompl
xchg
and
arpl
xchg
and
ljmp
in
popf
jns
push
bound
ret
sub
push
add
adc
push
arpl
lock
xchg
adc
mov
repnz
pop
lock
aad
cmc
inc
xchg
xchg
xchg
jnp
cmp
sub
imul
in
mov
fs
lods
xor
cmp
psraw
subb
repnz
adc
arpl
test
mov
fwait
pop
push
lret
or
in
scas
das
xchg
mov
jae
aam
jne
push
push
aaa
cmp
dec
in
xrelease
loope
mov
fmulp
jae
into
out
sub
sub
mov
add
sub
leave
aaa
idivb
out
pop
add
fsubs
xor
jg
sub
adc
pop
stos
popl
cld
xor
ror
xchg
mov
pop
arpl
sbb
sbb
leave
pop
mov
inc
xchg
push
dec
pop
enter
icebp
cwtl
std
jo
pop
int
bound
adc
pushf
push
fs
js
and
push
mov
in
imul
aam
fistpll
mov
leave
test
pop
fstpt
jmp
ret
insl
push
fidivs
jbe
or
ficoms
add
ret
punpckhdq
inc
popa
jbe
push
mov
cmp
cmp
inc
jmp
adc
push
int3
inc
mov
mov
mov
push
lock
mov
push
clc
mov
dec
sbb
leave
push
and
pushf
sub
nop
aas
clc
xlat
xchg
test
rclb
mov
mov
fdivl
jns
pop
add
jne
mov
xlat
lods
mov
insl
mov
jg
insb
fidivrl
mov
subl
cmc
push
daa
cld
ret
or
fisubrl
enter
push
mov
add
dec
call
and
adc
push
mov
xchg
mov
clc
and
push
sti
jb
inc
and
pop
xchg
pop
fmuls
fists
xchg
pcmpgtw
lret
les
rcll
hlt
rclb
rolb
ss
jl
dec
insl
sbb
jp
movsl
cmp
sbb
lret
arpl
inc
adc
mov
shlb
or
mov
mov
jmp
adc
out
les
sub
loope
movsb
les
adc
and
adc
xchg
push
xchg
daa
push
sahf
rcrl
jb
mov
pushf
mov
in
shl
and
cmpb
mov
and
xlat
dec
ret
adc
imul
add
mov
xchg
sub
and
incl
ss
inc
pushf
mov
mov
xor
and
das
cmp
lahf
pop
and
hlt
mov
xor
sbb
outsb
cs
pop
ss
mov
adc
rolb
inc
sti
adc
lret
lret
xor
ret
adc
in
xchg
scas
push
mov
jecxz
ret
add
sub
mov
mov
int
pushf
fmull
sbb
into
loopne
test
cmp
xchg
out
mov
jg
sti
pop
roll
fcoms
loop
xchg
dec
cmp
je
adc
cmp
cmp
adc
in
shrl
cmc
imul
mov
cmpb
lods
das
mov
push
inc
and
jecxz
or
fwait
ret
mov
mov
dec
cmp
pop
orb
ds
pop
and
mov
add
clc
push
gs
sub
jmp
push
cmp
dec
shr
xor
cli
mov
insb
adc
pop
add
lret
xchg
push
and
insb
in
jbe
or
cs
cmp
faddp
imul
fdivr
sti
xchg
sbb
ret
mov
add
jbe
in
test
scas
and
in
popf
daa
cwtl
mov
push
sub
push
pmullw
sub
xor
jecxz
jle
rorl
sub
lcall
call
mull
xchg
or
js
sub
test
les
pop
or
push
inc
loop
stos
je
add
jb
or
lock
fistps
inc
mov
lea
test
adcb
rcll
cmp
or
xor
jmp
mov
pop
jmp
xor
arpl
mov
mov
push
push
sbb
mov
out
loopne
aad
call
rorl
add
push
push
test
sbb
mov
fiadds
test
mov
rolb
sbb
inc
sub
insl
push
hlt
push
les
cmp
xor
fucomi
rcl
adc
push
sarb
movsl
lods
jbe
mov
jb
addr16
add
stc
adcl
adc
scas
xchg
scas
sbbb
dec
mov
cld
cmp
pop
mov
arpl
or
jne
adc
out
push
jns
imul
ffree
xor
lret
xchg
sbb
shlb
inc
daa
sub
xchg
mov
test
cmp
lods
adc
push
stos
adc
insb
fisubs
out
xor
jne
xchg
add
in
dec
add
icebp
adc
aas
mov
push
cld
int
icebp
stos
fiaddl
outsb
js
repz
rolb
int3
iret
mov
sti
sbb
lock
ja
out
and
andl
or
mov
add
inc
enter
jmp
shrb
and
lret
ljmp
mov
push
loop
or
fidivrs
mov
mov
push
data16
shrb
insb
sub
stos
add
sub
mov
ds
jle
xor
ljmp
js
sbb
sub
inc
sub
fdivrl
inc
jmp
push
cmp
test
mov
sarl
dec
aam
pop
or
mov
jmp
rol
jge
or
adc
sti
jle
lret
xchg
sbb
xor
lds
and
shll
cmp
pop
out
stos
mov
pop
pop
lds
mov
jo
pop
jno
movsl
sub
repz
jg
adc
hlt
lcall
pusha
xchg
fnsave
mov
fwait
pop
adc
mov
mov
xlat
push
xor
mov
cmp
fimuls
shrl
sbbb
adc
lods
gs
roll
fwait
int3
pusha
cmc
push
mov
fstpt
fcoml
xchg
jne
sbb
cmp
jmp
or
lea
xchg
lea
pop
sbb
xchg
out
inc
mov
push
adc
imul
lods
loopne
dec
ja
bound
in
dec
andb
cltd
data16
movsb
push
shll
aas
scas
mov
cmpsb
push
dec
out
mov
and
popa
imul
insb
jge
shlb
stos
ficomps
stos
out
pop
mov
shll
sahf
aaa
cmp
mov
insl
rclb
iret
cli
arpl
mov
das
mov
lcall
shll
out
add
pop
fdiv
pop
loop
cld
add
sbbb
push
sub
sub
mov
xchg
xchg
pop
dec
pop
movsb
stc
movsb
scas
sbb
mov
lds
adc
pusha
cmp
lret
std
ljmp
inc
cld
dec
xlat
lcall
outsb
insb
mov
mov
insb
sbb
or
js
mov
push
clc
cs
movsl
sbb
add
cli
lock
mov
sahf
sti
out
jns
cmp
imul
and
add
cmpsb
fistpl
out
cmc
dec
push
and
stos
push
inc
cmpsb
fistpl
xlat
mov
js
das
adc
mov
gs
flds
cltd
mov
mov
jae
mov
int3
fs
in
mov
xor
les
xor
outsl
dec
movsb
popa
jl
repnz
adc
pop
lret
popf
cli
lods
rol
cmp
sbb
add
loopne
dec
mov
aaa
dec
mov
pop
clc
lock
fildl
shl
jae
es
ljmp
mov
mov
sti
out
push
lods
mov
cmp
mov
mov
out
inc
notl
cmp
je
outsl
sub
jmp
mov
pushl
sbb
shl
xchg
ret
in
fs
outsb
cmp
cmp
add
and
mov
je
clc
mov
fs
loopne
mov
inc
int
arpl
dec
xor
out
fbld
and
lahf
xor
inc
push
iret
push
sbb
jecxz
ds
lds
pusha
pop
fcmovne
loopne
or
pop
aaa
imul
arpl
xchg
or
hlt
arpl
xchg
insl
mov
shlb
cmp
cs
sti
inc
cmp
add
stos
imul
jae
jecxz
int3
test
push
lret
add
jne
pop
loop
xchg
or
push
into
jmp
push
enter
je
jnp
lcall
divb
shrb
cmp
fstps
mov
xor
out
inc
sub
sbb
daa
add
lahf
in
outsb
sahf
xchg
adc
pop
pusha
ss
nop
inc
orl
jle
aam
clc
mov
jg
daa
jne
or
jbe
fistpll
outsl
xor
iret
pop
jno
rol
jge
mov
out
push
sbb
mov
repnz
mov
bound
dec
cmpsl
sti
pop
cld
bound
test
aas
cmc
lds
repz
xchg
or
push
cmp
repnz
sar
jp
sub
mov
in
rcrl
xor
enter
xchg
je
push
and
bound
movsl
sub
lret
mov
loop
and
xchg
cltd
push
test
cs
adc
faddl
push
aad
lods
jbe
pop
pop
adc
push
js
cld
xchg
dec
push
pop
icebp
mov
mov
and
cmp
lea
int3
gs
aad
shlb
scas
in
popf
je
inc
dec
cwtl
push
lret
stos
insb
movsb
dec
insl
bound
insl
mov
ss
int
jg
push
fnstcw
push
loopne
fidivrs
ljmp
inc
or
sbb
mov
pop
sub
mov
pop
push
xchg
pop
dec
hlt
lds
flds
aas
adc
adc
mov
repz
arpl
fstpl
push
in
shlb
inc
xchg
cmp
add
xor
testl
cmpsl
sar
push
mov
sbb
inc
insl
ret
xor
ret
sti
test
adc
fcompl
xchg
push
ret
sti
mov
inc
lds
jl
and
rcr
mov
sub
mov
sti
aam
jmp
aas
call
ret
sarl
xchg
pusha
xchg
loopne
jle
xchg
xchg
lods
mov
stos
fiadds
loope
sub
fsubrs
ljmp
loope
sub
cs
and
in
mov
fwait
es
dec
xchg
or
fimull
inc
push
mov
xorb
push
and
hlt
in
inc
push
sbb
ja
xor
sub
xchg
subb
add
out
pop
inc
push
lods
test
pushf
popf
std
and
addb
mov
lods
or
mov
sti
mov
jo
and
xchg
xchg
push
test
pop
push
in
mov
fdivl
icebp
push
fwait
pop
xor
jle
mov
repnz
jmp
dec
sub
popf
insl
ja
or
in
pop
ret
inc
cmp
jle
testb
mov
cmp
dec
insl
cli
mov
sbb
repz
mov
fs
xchg
es
daa
jge
mov
or
ja
js
adc
dec
and
das
add
punpckldq
push
mov
sahf
sbb
jo
mov
adc
rorl
dec
sbb
lahf
add
shlb
aaa
add
jns
fistpll
and
inc
dec
pop
adc
mov
ljmp
push
xor
pop
js
lcall
or
push
mov
call
pop
push
std
rorl
push
cmpsb
push
pop
push
push
add
or
mov
mov
mov
mov
xchg
jmp
sbb
es
cmp
nop
fcmove
jo
mov
mov
fcoms
xchg
push
xchg
aaa
jmp
lret
or
xchg
xor
loopne
lcall
xchg
add
mov
fnstsw
dec
inc
in
ret
xor
or
lods
ja
lcall
call
mov
mov
popf
es
cmp
and
aas
aas
jecxz
mov
lcall
imul
sub
int3
mov
sbb
in
sub
movsb
pop
fcomi
jo
cmp
outsl
cmp
pop
push
cmp
repz
jp
xchg
mov
in
jnp
jp
and
ret
mov
push
mov
out
fldl
push
cmp
adc
jnp
push
push
add
pop
aam
lods
pop
dec
test
jg
mov
es
cld
mov
arpl
sbb
mov
jmp
movsl
pusha
stos
mov
jno
cwtl
orl
jle
dec
nop
aaa
daa
and
mov
mov
cli
mov
inc
xor
or
aad
and
lds
mov
mov
sti
inc
cwtl
mov
fidivrs
cli
int
fwait
ljmp
and
das
clc
popf
jne
call
cmp
inc
inc
fwait
repz
inc
js
cltd
outsb
add
xor
mov
jp
outsb
insl
jne
push
dec
cmp
loop
push
jp
dec
inc
es
adc
push
mov
out
fstpt
nop
mov
xchg
outsb
jmp
pop
fisubrs
in
icebp
fcoml
cwtl
idiv
dec
inc
xchg
xor
dec
pop
lds
data16
mov
or
pop
popaw
add
out
adc
lret
rorl
xlat
jno
rcrl
mov
mov
addb
loopne
data16
mov
mov
or
push
sbb
cmp
out
daa
mov
pop
jb
cmp
xor
xor
mov
lret
iret
popa
xorl
lods
cmpb
arpl
adc
adc
sub
xor
les
adc
ss
dec
in
adc
push
sbb
xor
inc
pop
ds
xor
jecxz
decb
jmp
std
and
cmpsl
mov
mov
out
or
adc
xlat
sub
jl
lods
cmp
and
push
popf
popa
inc
leave
out
nop
hlt
call
sarb
add
mov
fnstenv
sub
jns
stos
mov
sub
cmp
fcomps
call
ja
bound
cmp
xchg
pop
mov
sbb
mov
pop
in
je
int
xchg
mov
out
push
cltd
xor
pop
cmc
insb
out
mov
cltd
xor
hlt
ds
repz
test
iret
fwait
mov
cmp
lock
aaa
lods
mov
mov
jno
inc
fisttpl
mov
xchg
sahf
sub
push
repz
jno
out
xchg
xchg
sub
loope
cmp
pushf
lea
mov
popf
popf
sarb
fcoml
outsb
dec
test
xchg
fcmovnbe
dec
nop
mov
in
jnp
lds
fwait
cmc
rcrl
push
pop
fldenv
mov
add
mov
fiadds
cmp
fwait
lcall
gs
cmpsl
out
clc
mov
das
inc
push
mov
js
cmp
jnp
jo
cwtl
push
pop
sahf
sub
sbb
stos
pop
sub
push
shll
aaa
in
or
mov
out
sub
jb
test
fcomps
pop
das
pop
push
cmc
jns
cmc
jge,pn
aaa
ret
stc
aaa
push
add
push
push
mov
shll
loop
xchg
shr
xchg
mov
pop
stos
or
inc
out
subl
mul
popf
sar
push
data16
out
insb
dec
enter
jg
and
sti
add
cli
inc
es
negl
arpl
ss
cmp
mov
mov
movsb
in
sbb
in
inc
pop
xor
mov
mov
mov
scas
std
ja
sub
and
push
jge
pusha
daa
out
rol
cli
iret
in
jecxz
xchg
aam
repz
mov
mov
popf
jns
stos
sub
bound
daa
mov
and
pop
sbb
into
sbb
push
int
into
lea
dec
xor
or
lahf
addb
aad
lea
cmp
jns
adc
loopne
sbb
push
mov
push
cmpsb
cli
jb
dec
sbb
xchg
cltd
loop
mov
cs
in
and
pusha
pop
xchg
outsl
out
outsl
xor
fcmovnb
ja
cs
jno
jle
mov
sbb
push
into
push
test
push
push
aam
jg
push
add
mull
enter
ficomps
popf
xchg
adc
loopne
insb
adcb
inc
bound
dec
pusha
mov
es
ficomps
mov
dec
les
and
xor
lods
fucomp
mov
push
aas
out
mov
mov
mov
add
jne
scas
mov
insb
call
in
push
jbe
and
cmp
mov
dec
jne
adc
push
and
ror
ja
or
cmp
test
jnp
push
ljmp
xchg
sbb
push
push
push
and
aaa
xor
lods
mov
pop
inc
mov
mov
dec
and
dec
std
aad
mov
les
cmp
fists
loopne
xchg
pop
cltd
into
loope
push
into
stos
lcall
xchg
mov
pop
ss
ljmp
mov
xor
jb
xchg
xor
mov
xchg
cmp
add
xor
stos
and
xchg
aas
mov
xchg
dec
push
test
push
dec
pushf
ret
mov
movsb
adc
ret
sbb
mov
push
cmp
xchg
push
lcall
mov
mov
jl
test
sub
es
pop
inc
ja
cmp
mov
iret
rcrl
push
add
dec
addr16
outsl
jo
adc
or
imul
sar
repz
mov
das
adc
xor
mov
xchg
sub
aas
fisubrs
add
mov
in
mov
xor
arpl
cli
pop
adc
add
push
pop
mov
and
mov
xchg
mov
cltd
enter
js
xchg
push
sbb
loop
mov
fisttpl
cltd
popa
int
popf
and
pmaddwd
ljmp
jecxz
popa
pop
and
call
into
cli
mov
push
inc
lcall
adc
rcll
push
movsl
push
test
jl
icebp
ss
inc
js
sbb
pop
cmp
out
jp
pop
push
or
push
inc
adc
fldenv
pop
pop
out
jne
lods
mov
or
xor
repz
pop
and
sub
push
scas
scas
mov
lea
cmpsl
sbb
lret
outsb
pop
jne
fwait
hlt
pop
cs
xchg
add
push
xchg
scas
sub
fnstcw
xchg
iret
add
ficoml
cwtl
or
sub
rclb
cwtl
jg
repz
and
insl
loop
in
xor
inc
jae
add
cmp
sbb
inc
jo
push
aas
imul
ljmp
in
test
aas
adc
and
mov
adc
repnz
mov
jo
fisubs
ret
cmpsl
fcmovu
push
js
pop
outsl
cltd
add
fdivrl
dec
fidivrs
push
and
adc
xchg
out
call
cmc
arpl
jo
inc
or
icebp
ljmp
test
xchg
int3
jne
pusha
add
ret
inc
dec
addr16
or
mov
pushf
test
mov
popf
shll
sub
mov
jle
dec
testl
sahf
pop
insl
aaa
sub
enter
js
mov
ss
js
out
pop
mov
mov
inc
mov
pop
xor
fildl
sbbb
loope
jb
lret
and
mov
inc
rep
push
dec
add
fisttpl
bound
fcomps
xor
push
dec
add
cmp
in
stos
ljmp
sbb
clc
pushf
outsl
adc
insl
movaps
sbb
dec
jge
aas
xor
testb
daa
pop
xor
xor
dec
inc
jno
pop
dec
inc
jle
pusha
lea
pop
test
sbb
rorl
xor
and
jnp
xor
jle
and
es
mov
xchg
incb
jg
push
cmp
sub
jecxz
popa
in
mov
rorl
push
cltd
test
xchg
add
mov
aaa
aam
push
in
mov
pop
cmp
mov
push
push
ljmp
xor
lds
adcb
or
mov
adc
jno
imul
loope
mov
or
movsl
mov
sbb
push
inc
out
pusha
or
add
imul
sub
push
inc
fdivl
stos
in
int
daa
xchg
cmp
aam
pop
xor
xor
and
dec
pop
push
inc
int3
addr16
push
test
loope
pop
iret
aad
fwait
mov
je
ror
mov
iret
mov
popl
jns
js
xlat
int
cmc
inc
mov
gs
imul
mov
pop
mov
ret
insl
cld
loop
or
repnz
mov
push
xor
sbb
std
inc
loop
in
xlat
pop
ljmp
insb
inc
fiadds
mov
in
leave
pop
cmp
arpl
shrl
ss
pop
outsb
sbb
inc
cmp
jae
popf
scas
cltd
dec
sbb
fldcw
xchg
inc
aad
jp
jbe
out
out
jno
sbb
stos
notb
pop
out
jmpw
icebp
jo
mov
or
pop
mov
push
sti
cmpsl
push
lahf
xchg
push
fcomip
adc
lds
ljmp
jp
pop
xchg
jp
sbb
dec
rolb
pop
clc
add
xchg
loopne
hlt
ret
adc
add
or
sbb
dec
adc
loope
jl,pt
pop
lahf
mov
push
enter
mov
or
out
mov
xchg
xor
or
adc
sti
stos
inc
ljmp
dec
cmp
das
adc
std
or
aam
test
mov
adc
dec
les
pop
das
xchg
in
test
xchg
fisttpl
int3
push
sub
and
or
inc
bnd
xor
xor
fld
je
mov
mov
jmp
or
in
int
mov
popl
inc
popa
jecxz
lret
jns
dec
inc
add
adcb
cmpsb
cmc
movsb
subb
sub
stc
int3
xchg
call
pop
jle
inc
hlt
ss
jnp
adc
out
into
jb
ret
or
xchg
mov
cld
repz
fnstcw
enter
hlt
jecxz
loope
je
mov
mov
sbb
faddl
lahf
call
xor
xor
push
call
je
aaa
inc
idivl
sub
adc
pop
mov
jo
rcrb
fidivs
add
outsl
test
addr16
mov
fdivrs
roll
xor
push
xchg
cltd
adc
sbb
or
aaa
mov
cmc
mov
mov
sbb
iret
xchg
jl
pusha
or
mov
cmc
imul
pop
iret
mov
aam
mov
xchg
sub
lcall
xor
in
mov
std
fnstsw
negl
je
insb
push
push
ljmp
mov
push
mov
shll
cmpsb
xchg
mov
les
popf
cmp
es
cltd
mov
movsl
sbb
loopne
adc
std
rorl
jp
pushf
pop
movsb
popf
mov
arpl
imul
jnp
mov
sub
aas
sbb
orl
in
nop
push
push
jns
mov
jp
cmp
push
mov
call
dec
jmp
sub
adc
dec
bnd
shll
cli
adc
pop
push
add
dec
fisttpll
adc
adc
sub
fstpt
jle
mov
dec
cltd
mov
pop
dec
jecxz
sti
mov
xchg
dec
leave
mov
imul
enter
scas
insl
mov
add
inc
dec
popa
jb
sub
aam
xchg
outsb
fwait
mov
push
pop
mov
aad
loopne
pop
in
mov
or
in
pop
jnp
subl
lock
inc
push
gs
xchg
mov
cmc
hlt
mov
cmpsb
sbb
lock
mov
imul
xchg
lcall
shrl
popl
lret
dec
xchg
popa
lds
sahf
xlat
repz
push
sbb
inc
mov
call
pop
push
test
repz
jnp
push
test
movl
test
in
xchg
push
outsb
clc
mov
aas
das
ljmp
sub
fcompl
enter
xor
jbe
movsl
adc
sbb
and
sbbb
lock
or
jns
ffree
or
subb
out
int3
sbb
xlat
and
mov
and
addl
es
pop
adc
and
loopne
adc
dec
test
xchg
mov
lock
cmpsl
mov
add
jl
or
imulb
notb
push
mov
jo
push
xor
add
cmp
adc
pop
rclb
xchg
mov
les
jl
call
repz
sub
lea
mov
jb
dec
jno
cmp
fdivl
and
imul
stos
call
mov
movsl
inc
push
movsb
clc
ret
pop
xor
sub
or
test
push
cwtl
add
std
xor
cltd
jb
popa
ds
xchg
rolb
xchg
mov
and
mov
mov
shl
mov
inc
aam
pop
clc
push
mov
data16
inc
inc
aas
testl
inc
xor
adc
mov
push
shrl
in
lods
call
jp
enter
mov
ds
loopne
repnz
adc
loop
mov
push
push
inc
push
aaa
add
insl
cmp
pop
adc
cld
fs
push
mov
fldt
add
push
fs
jg
movsb
push
push
adcl
xchg
cmp
lcall
push
push
cmc
xchg
pop
and
lods
add
mov
pop
xchg
jmp
mov
cmp
mov
jg
pop
mov
stc
sub
xchg
pop
inc
dec
sub
mov
stc
sbb
ja
mov
popf
sub
xchg
lret
fsubp
pop
and
repnz
cmp
arpl
dec
fdivr
adc
mov
xchg
mov
ss
scas
pop
fs
sub
movl
lret
mov
sub
into
inc
mov
mov
jns
dec
divps
mov
lsl
or
nop
cmp
out
xchg
mov
ja
lret
mov
movsl
hlt
in
jo
or
cmpsl
cld
xlat
insl
lahf
mov
test
mov
dec
ja
jns
aad
hlt
pop
ret
sbb
push
dec
popf
or
mov
popl
rcrb
in
jl
push
imul
cltd
xor
outsl
mov
inc
sub
call
insb
lods
add
push
push
es
mov
outsb
push
dec
adc
push
sti
sti
pop
sub
push
or
push
jns
mov
inc
add
cli
cmpsl
ret
mov
inc
adc
out
inc
rcr
repz
in
dec
pushf
inc
push
rorl
adc
push
adc
int
scas
in
sub
stc
push
push
xor
mov
insl
in
mov
xor
xor
fimuls
rorb
push
fs
jnp
imul
pop
pop
mov
push
idivl
fldcw
jbe
testl
imul
add
adc
in
dec
push
subl
pop
wrmsr
paddd
mov
adc
inc
push
dec
fidivs
shll
pop
push
std
inc
xchg
add
hlt
lea
push
push
add
dec
andl
adc
es
ficoms
xchg
les
jge
xchg
clc
pop
sbb
and
adc
add
adc
out
xchg
out
cmpsl
lods
sarl
push
and
notb
sbb
push
cmpsl
in
imul
enter
sbb
cmp
test
pop
inc
fs
xor
test
icebp
in
pop
aad
lret
cmp
xor
add
mov
pop
or
lods
movsl
negl
hlt
dec
loop
add
push
mov
jp
dec
loope
and
ret
add
lea
stc
adc
pushf
push
out
idivb
and
xor
std
mov
jb
mov
popa
push
aas
dec
pmuludq
ds
cmc
mov
mov
ret
aas
pushf
xchg
pop
mov
mov
aas
bound
pop
push
mov
repz
xchg
push
outsl
pop
loop
iret
jl
add
addr16
mov
fcmovne
pop
lret
pop
xchg
iret
data16
gs
test
int3
add
call
xorl
mov
dec
insb
pushf
cmp
push
mov
mov
push
stc
mov
and
fs
sbb
cltd
daa
call
dec
cmpsl
dec
mov
fidivrl
or
inc
aam
sub
fisttpll
pop
jle
cmp
rorb
aaa
mov
scas
test
or
push
jg
enter
push
pop
ret
cli
test
or
les
add
jecxz
iret
or
pop
mov
push
fldt
shrb
clc
xchg
adc
mov
je
jle
sub
cmpsl
add
in
movsl
clc
pop
pop
les
test
bound
cwtl
lea
ret
stos
dec
ret
pop
out
flds
cwtl
testb
clc
add
addr16
cmp
fcomps
cmp
dec
das
mov
adc
inc
insl
cmpsl
jl
subb
test
mov
sub
fidivrl
pushf
scas
ds
lds
aad
popf
outsb
not
fistpll
xchg
inc
rdpmc
xor
and
mov
movsb
call
rcll
out
in
ja
push
shrl
push
popa
jge
pop
inc
ss
sub
xor
mov
minps
in
jecxz
xor
jg
stos
add
stos
cwtl
push
and
cmp
out
lock
loop
xchg
cmpsl
mov
ss
scas
mov
fwait
inc
adc
daa
mov
and
push
add
imul
xorl
push
lods
mov
jbe
cmc
adc
cltd
add
enter
or
cmp
out
loop
xchg
xchg
shlb
insb
ss
test
fiadds
mov
and
aas
iret
popa
sub
cmp
dec
in
pop
mov
in
mul
ss
clc
ficoml
xchg
imul
dec
jbe
neg
lahf
mov
popf
pop
cmp
mov
mov
mov
or
outsl
out
outsl
rclb
cwtl
enter
mov
sbb
test
out
adc
jmp
aaa
aad
sub
inc
sahf
adc
sub
aaa
pop
data16
sti
test
xlat
mov
lahf
int3
add
fistpll
cmpsl
push
push
int3
fisubrs
cmp
iret
cmp
inc
test
testb
addr16
xor
or
inc
pop
fimuls
mov
incl
es
xor
add
je
mov
mov
adc
test
je
lods
sub
jns
mov
sub
clc
jns
imul
push
add
or
pop
add
add
outsl
ja
int3
mov
mov
ss
push
fidivl
xchg
mov
imul
fidivs
lcall
xor
je
es
pop
in
bound
mov
xchg
rolb
cmpsb
pop
xchg
sub
jae
ja
frstor
gs
je
push
jae
fadds
dec
add
das
push
cld
insb
cmp
mov
jl
sbb
add
mov
js
ret
mov
add
dec
inc
ror
cmp
adc
and
arpl
push
in
xchg
clc
sbb
arpl
mov
push
jmp
pushf
cmp
cmc
clc
mov
inc
ds
and
push
outsl
mov
jo
xchg
repnz
outsl
cmovo
push
or
push
pop
jge
test
data16
mov
lea
lcall
mov
mov
inc
pop
divl
push
iret
pop
adc
movsl
pop
push
mov
pop
dec
add
jle
pop
xor
inc
inc
mov
mov
adc
sub
iret
mov
cmp
hlt
push
mov
push
and
es
xorb
mov
stos
aas
cltd
mov
pusha
push
lea
loope
cmp
cwtl
xchg
imul
inc
adc
gs
lahf
mov
cmp
movsbl
pop
mov
xor
in
adc
rorl
divl
mov
sti
mov
call
dec
mov
pop
test
push
adc
cli
mov
mov
and
pop
out
test
add
dec
pop
fcompl
jge
ja
lock
cltd
mov
mov
jg
rcl
jo
pop
scas
test
cmp
hlt
fstl
fsubr
stos
push
inc
adc
or
in
fsubs
notl
adc
popf
imul
dec
lret
daa
scas
inc
mov
test
jmp
pushl
mov
push
pop
mov
xchg
scas
cld
add
mov
je
lea
add
cli
or
inc
mov
pusha
ja
pop
push
out
add
cmc
jecxz
dec
cmpsb
jge
and
loop
push
clc
pusha
xchg
jecxz
mov
xor
jne
popa
xchg
cmp
jg
shl
cmp
or
add
fdivl
or
divb
xchg
ret
adc
daa
ja
aas
pop
mov
lret
pushf
pop
jp
scas
loope
fmul
imul
lret
push
push
mov
xchg
addb
rcll
sbb
loopne
ss
sub
mov
sub
cmp
cmp
or
fucomp
jns
or
add
fistps
movsb
test
and
push
sub
xor
adc
lds
int
mov
pop
stos
mov
xchg
lds
outsl
xchg
leave
test
push
jb
out
mov
leave
sbb
loop
fcmovb
mov
push
mov
shrb
add
outsl
mov
pop
cmpb
shll
aam
push
mov
lds
inc
aam
push
add
xchg
sarb
dec
sub
push
jg
mov
insl
cmovne
add
lods
xor
mov
sbb
dec
or
inc
xor
mov
fsubl
dec
jmp
iret
test
pop
enter
cwtl
aas
pusha
mov
adc
leave
dec
and
push
xor
pop
test
jns
xchg
cli
or
mov
cwtl
inc
lret
ret
jo
mov
insb
sbb
mov
sbb
mov
push
inc
mov
arpl
mov
inc
mov
mov
and
popa
pop
nop
pushf
int3
add
out
push
out
je
push
mov
shl
dec
xlat
mov
cmp
pop
and
lea
jae
sbb
loopne
lods
movsb
inc
mov
insl
fcmovb
pop
jmp
mov
repnz
xlat
cmpsb
mov
imul
jp
cmp
xlat
inc
cmpsl
add
sub
mov
sbb
fimuls
sbb
mov
mov
divl
xchg
repz
cmp
sub
mov
lods
and
int
mov
sbb
sub
sbb
out
mov
pop
xchg
hlt
sarb
xchg
lahf
in
loope
insb
jae
mov
jae
inc
mov
notb
add
arpl
out
push
imul
push
push
testl
inc
leave
xor
dec
sar
pop
sub
orl
aam
sbb
dec
add
inc
dec
add
lret
cmp
lret
bound
add
xchg
clc
andl
sub
std
cwtl
pushf
cmp
in
add
add
cmpb
dec
push
loop
into
in
inc
jne
jecxz
sbb
aas
imul
jno
js
call
mov
jb
push
negl
loop
xor
push
sbb
fldcw
jmp
xchg
arpl
push
sub
sub
pusha
pop
mov
addr16
repz
into
pop
push
xchg
sub
scas
inc
imul
adc
outsl
sbb
aaa
xchg
cmp
mov
xor
iret
mov
or
jle
ret
ja
jecxz
cmc
sbb
cmp
mov
shrb
mov
or
sbb
scas
int
mov
jecxz
cld
incl
imul
repnz
mov
mov
shrd
scas
cwtl
cmp
push
jb
add
fldt
inc
ss
mov
pop
pop
jle
test
rcrb
mov
lcall
mov
jbe
rcrl
cmpsl
inc
mov
push
call
scas
xchg
divl
in
jns
aam
dec
inc
xor
enter
sbb
inc
stc
xchg
mov
test
int
adc
sbb
hlt
cmc
jle
ficomps
call
sub
inc
lahf
xchg
pop
dec
jno
rcl
and
pop
js
mov
inc
aad
add
mov
cmc
xchg
out
mov
inc
fsubrl
cmp
popa
add
data16
push
add
jo
in
inc
push
das
repnz
push
shrb
int
iret
xlat
or
pop
shrl
cwtl
jne
adc
ret
cmp
add
fildll
icebp
pcmpgtb
iret
or
add
out
cwtl
stos
adc
stos
sub
jnp,pt
dec
hlt
jnp
cld
mov
xor
jb
xor
cltd
mov
out
into
nop
loope
sub
les
sbb
jno
jp
sbb
addr16
in
xor
out
leave
pop
xchg
pop
add
icebp
and
das
dec
xchg
xchg
sbb
inc
inc
aas
sub
add
fwait
mov
stos
or
cld
out
scas
add
fldcw
lcall
cltd
ja
pop
sub
mov
nop
pop
rorb
insb
push
mov
adc
inc
lret
sbb
scas
aad
repz
mov
cmpsl
les
fcmovnb
fdivr
sti
push
dec
pusha
xlat
pop
fimuls
cwtl
insl
mov
gs
jg
xchg
sahf
add
leave
fistpll
or
in
sbb
cmp
adcb
cmpsb
xchg
xchg
call
stc
outsl
sti
test
push
push
pop
shl
jecxz
mull
leave
sub
into
push
push
add
in
push
sbb
adc
xchg
sbb
bnd
mov
push
int3
icebp
ret
icebp
aaa
sahf
xchg
in
mov
sbb
ja
loop
ds
arpl
sub
aaa
leave
ret
sub
dec
sbb
mov
pop
repnz
cmpsl
out
mov
jne
aad
dec
dec
rcll
adc
sub
xchg
imul
movsl
and
in
data16
aam
jno
in
ret
dec
pop
icebp
push
daa
jle
out
cmc
outsl
jbe
push
pop
and
adc
mov
insl
movsl
es
xchg
daa
mov
ficoms
mov
mov
es
leave
je
pop
inc
lods
mov
pop
lcall
test
test
or
jne
pop
mov
aad
push
loop
cs
aam
push
movb
mov
int3
adc
dec
and
repnz
and
fwait
popa
push
mov
adc
pop
xor
sub
lret
mov
xchg
das
lods
call
rsm
jge
pop
mov
pop
mov
sarb
aaa
int
mov
mov
mov
and
mulb
fwait
mov
aaa
push
jbe
jmp
cmpsb
mov
mov
pop
call
mov
xor
xor
xor
xlat
inc
shll
cwtl
jl,pn
xlat
mov
add
pushf
fstp
cmpsb
lds
fs
cld
mov
add
loopne
mov
cmp
xchg
shrb
dec
xchg
inc
sub
sub
imul
clc
test
mov
movsl
add
repz
xchg
fldl
mov
xor
andb
sub
repnz
push
adc
or
daa
and
sbb
fldl
imul
mov
sbb
add
xor
jno
push
sbb
pop
inc
adc
fwait
outsl
repz
rcr
mov
pusha
sub
lds
rol
mov
dec
adc
xchg
into
jnp
loope
cmp
xchg
cmp
insb
inc
stos
cmp
sbb
jmp
mov
fwait
dec
add
xchg
icebp
insl
addr16
cmpsl
ficompl
push
adcl
jns
orl
je
es
loope
push
icebp
jecxz
pop
push
dec
rcrb
ficomps
shlb
xchg
fiaddl
testb
jo,pt
out
push
sub
sub
fnsave
dec
push
mov
pop
pop
adc
int
sti
jae
push
and
shrl
out
mov
sbb
dec
inc
adc
popf
xor
ja
push
push
cmp
roll
pop
mov
fimull
mov
loopne
push
outsl
adc
leave
sbb
jg
dec
inc
bound
pop
outsl
adc
lock
mov
retw
leave
cmp
pop
xor
pop
shrb
pop
mov
mov
jmp
jl
mov
jge
mov
data16
dec
fsubr
rol
repz
stc
mov
sub
xchg
aam
out
xor
xor
mov
sbbb
xchg
inc
mov
test
pop
leave
jg
outsb
mov
sbb
dec
lods
pop
and
ljmp
sbb
push
sub
lret
pop
adc
mov
lcall
fstp
es
fidivrl
xor
in
popf
sub
ret
mov
arpl
jns
popl
add
rcrb
and
int3
mov
push
mov
popa
lret
scas
jae
aam
mov
pop
add
movsl
mov
jg
out
in
mov
push
aas
mov
mov
xchg
bound
cmc
push
scas
test
and
jecxz
decb
dec
sti
hlt
in
push
arpl
add
movsb
outsl
lret
std
dec
shll
pusha
jbe
adc
pusha
std
movsl
sarl
pushf
jne
and
sub
pop
mov
repnz
xchg
rcrb
mov
xchg
ret
xchg
jne
gs
daa
icebp
sti
cmc
jmp
outsl
mov
or
es
jmp
gs
int3
inc
inc
inc
jne
std
jge
lods
push
hlt
stos
in
dec
arpl
iret
in
ljmp
inc
sti
movsb
shll
mov
mov
std
rcrb
insb
repz
mov
das
push
add
and
stos
mov
pop
lea
loope
rcrl
xor
sbb
jbe
and
mov
cmp
adc
push
push
xchg
lea
mov
inc
push
xchg
cwtl
mov
out
inc
test
adc
xor
imul
ja
inc
and
cs
in
cmp
sub
rcrb
sub
pop
loope
movsl
scas
jmp
cmp
adc
lret
sbbl
pop
sbb
imul
push
jg
cli
and
dec
shl
cld
and
pop
je
adc
xchg
mov
lcall
xchg
jns
and
jmp
stos
fnstcw
push
pop
out
add
add
loopne
pop
xchg
and
fcomps
xchg
dec
iret
mov
movsb
std
pusha
dec
ljmp
insl
xchg
mov
sar
popa
popl
mov
jo
add
mov
xchg
jecxz
lock
cmp
xchg
cmc
and
je
gs
stos
push
sub
jbe
mov
mov
das
sub
push
sbb
and
clc
dec
pop
repz
cmp
or
mov
inc
mov
sbb
aaa
cs
xchg
jle
adc
sub
sub
enter
js
dec
xor
js
or
dec
xchg
adc
shlb
cwtl
mov
test
popa
cltd
stos
jl
mov
jbe
iret
loopne
xchg
jne
lahf
or
push
or
int
outsl
fwait
jne
insb
pop
push
or
enter
fildll
fs
dec
in
sbb
sub
push
mov
sbb
mov
push
mov
xor
adc
in
add
jp
mov
mov
xchg
add
adc
adc
adc
testb
add
push
ret
mov
sub
lods
xchg
cwtl
mov
mov
mov
cld
mov
fistl
pop
movsb
pop
rcrl
ljmp
pop
mov
pop
sbb
and
pop
fisttpll
scas
dec
cmp
shl
and
add
stc
jle
adc
movsb
xor
cmp
push
andl
leave
insb
xchg
push
ss
fldenv
mov
gs
jg
push
sub
jbe
mov
loopne
add
test
arpl
aad
mov
jno
pushf
push
push
sbb
xchg
sbb
mov
mov
cwtl
pop
inc
test
xor
arpl
jno
sub
scas
push
pop
jne
jns
dec
pop
pop
out
mov
cmp
ret
cs
jo
ja
sub
jbe
mov
mov
lret
enter
jmp
insl
mov
adc
mov
or
pop
sbb
adc
push
xor
or
stos
fdivl
sbb
xchg
es
or
cmp
push
push
or
pop
cmp
jnp
and
pop
xchg
add
cltd
mov
mov
jg
jecxz
loopne
scas
jns
sti
push
arpl
cmc
xlat
loope
xchg
and
lods
fdivrp
or
mov
cwtl
aad
mov
in
pop
push
mov
add
ja
lods
add
imul
lock
lock
sub
inc
sti
js
sbb
or
fcmovb
mov
int3
xchg
inc
scas
mov
roll
and
sbb
lods
push
add
jno
pop
lea
lcall
mov
jne
inc
aas
mov
jg
jmp
mov
daa
xchg
sub
mov
adcl
lahf
mov
cld
aam
dec
jl
test
sahf
adcb
sbb
sbb
fsubr
mov
int3
fidivs
cmp
gs
sbb
xchg
sahf
or
sbb
lods
ss
jae
dec
aas
jb
pop
mov
outsl
or
out
test
int
mov
sbb
cmc
and
frstor
test
inc
xchg
stos
ds
out
mov
rcrl
and
rclb
add
aas
fidivs
aad
push
ss
adc
sbb
orl
inc
mov
data16
js
loop
ljmp
cmpsb
dec
lock
or
inc
sub
jbe
sbb
inc
ljmp
int3
ss
cmp
xor
int
xor
xor
int
adc
xchg
mov
aam
sbb
stc
fs
iret
adc
cmp
add
ds
sbb
sub
push
xor
mov
and
scas
jns
ljmp
inc
cli
or
hlt
ljmp
arpl
lcall
and
jmp
mov
iret
cs
mov
mulb
adc
sahf
std
fcoml
and
sub
adc
push
enter
sbb
fnsave
loope
mov
pushf
push
push
mov
sub
pop
iret
xor
aas
push
cmp
mov
sbb
xchg
add
out
ds
mov
or
loop
add
outsl
push
test
pushf
or
jp
imul
or
mov
jne
icebp
aas
repz
add
inc
in
les
inc
xor
and
sahf
jmp
push
mov
addr16
or
sub
jle
pushf
imul
xor
dec
je
outsb
cwtl
mov
fs
lods
pop
lods
xchg
enter
rorl
adc
sbb
mov
jb
sub
fsubrs
repz
mov
sar
push
lret
fidivrl
test
push
pop
das
insl
inc
sub
pop
dec
push
lods
push
insb
xchg
mov
sarl
repz
aad
mov
je
pop
outsb
xchg
mov
fildll
push
into
stc
dec
shl
mov
shll
subl
sbb
and
sub
lea
pushf
frstor
test
mov
addr16
jecxz
xor
cs
adc
subl
jbe
xchg
sub
cmp
daa
sbb
xchg
sub
xor
fildll
and
adc
mov
rcll
xchg
pushf
pop
sbb
push
mov
jbe
sub
sbb
dec
push
sarb
cmpsl
mov
mov
jbe
mov
add
out
push
inc
aaa
pop
mov
mov
inc
in
and
repnz
pop
scas
outsb
cmpsl
fldenv
and
mov
outsb
push
jno
cli
aad
adc
cltd
cmp
pop
icebp
int
loop
leave
dec
xchg
scas
jae
or
ss
pop
push
mov
in
divb
inc
pop
xchg
je
sub
sub
mov
mov
xchg
sub
mov
test
cmp
pop
popf
subl
fidivrl
mov
mov
scas
or
mov
xchg
repz
xchg
add
dec
adc
aaa
js
sub
pop
leave
mov
jg
aas
pop
jb
dec
jl
lods
lcall
pop
lahf
dec
xor
bnd
insb
inc
bound
pop
lods
adc
push
insb
in
push
popl
inc
mov
adc
stos
icebp
xor
and
mov
aam
pop
jae
dec
and
faddl
dec
repz
dec
cmp
and
xchg
and
pop
pop
sub
mov
jno
and
in
push
adc
xchg
int
cmp
aad
movsb
cmp
xor
lret
leave
dec
imul
div
dec
inc
sub
int
orb
pop
xor
popa
aam
fnsave
sbb
lret
sar
mov
pushl
hlt
mov
xor
dec
cwtl
lcall
loop
mov
out
jne
roll
cmpsl
cmp
mov
sub
test
xchg
push
cmp
sub
cmp
xlat
aaa
jnp
add
arpl
mov
lret
sub
cld
loope
or
adc
cmp
lods
xor
outsl
jbe
cmp
mov
xor
imul
cmc
les
pop
xor
xor
cmpsb
sbbb
adc
sub
add
insb
or
push
mov
arpl
inc
jb
push
mov
test
mov
or
gs
xchg
lret
dec
inc
dec
push
cmp
and
inc
rclb
shrb
add
ret
fsubs
xchg
bound
outsl
push
cmpsl
int3
stc
add
aaa
shrb
lods
stos
xlat
std
sub
xchg
mov
cmpsl
or
adc
pusha
ljmp
sbb
movsb
es
pop
jne
fbstp
mov
push
push
rorl
out
aas
loopne
aad
cld
cmp
fcmove
xchg
les
add
mov
mov
adc
inc
or
fcomps
add
lret
or
mulb
jbe
xorl
loope
test
out
pop
dec
xchg
cmpsb
outsb
sub
aam
and
out
lds
int
daa
inc
iret
mov
sbb
jbe
test
add
hlt
bswap
add
iret
or
cmp
cmp
fwait
repnz
pop
divb
xor
cmp
jl
roll
ljmp
movsl
pushl
cmp
fistps
imul
inc
jne
fs
rcll
push
loop
jb
out
add
aaa
fwait
and
jp
xor
mov
call
insl
inc
mov
inc
int
ret
mov
xchg
and
inc
out
out
in
call
nop
imul
pop
mov
add
sahf
xchg
mov
adc
add
inc
call
jb
push
xchg
adc
jecxz
fsubl
add
adc
cltd
jo
mov
lock
sub
iret
es
mov
out
pop
cmp
les
loop
ds
repz
xor
cmpsb
mov
adc
or
cmpb
sahf
lods
jl
fldcw
addr16
mov
push
les
lret
aaa
pusha
sub
loopne
adc
xor
mulb
pop
mov
dec
outsb
mov
xor
arpl
cs
fldl
push
or
mov
scas
cmp
aam
xor
and
pop
xor
pop
sub
jo
into
repnz
cmp
push
in
lahf
cld
jb
cmp
jp
push
mov
mov
out
cs
lock
imulb
jp
jo
mov
jb
popf
aam
in
loopne
clc
jno
int3
lock
push
jnp
or
orb
mov
or
cmp
or
ja
jg
lds
out
movb
and
ret
movsb
inc
add
mov
dec
mov
xor
jno
push
add
inc
test
and
leave
loope
je
test
mov
test
lods
mov
add
and
nop
push
pop
test
ficoml
out
les
test
les
pusha
add
xchg
lcall
dec
test
jns
mov
out
jmp
push
sbb
sub
jl
rcll
push
inc
fnstcw
int
xor
in
add
push
in
push
sbb
popf
sub
divb
add
stos
lea
lods
or
push
sub
cmpsl
mov
mov
xor
jl
mov
orb
mov
inc
lds
js
push
pushf
adc
push
jmp
call
push
sti
sti
sub
in
and
fistpll
add
sbb
and
mov
mov
pop
add
lret
add
mov
pop
mov
stc
dec
pop
mov
ret
pop
mov
aaa
repnz
mov
cld
mov
mov
pusha
ljmp
mov
mov
pop
test
lret
sar
add
int
out
sbb
cmc
andl
stc
xor
lods
jp
push
hlt
or
jnp
or
xchg
pop
in
fmull
fcmovu
push
mov
icebp
outsl
mov
arpl
test
mov
arpl
dec
and
mov
fmuls
jae
leave
xlat
nop
pop
test
fs
sarl
lds
xor
arpl
mov
pop
addb
bound
popa
test
cmc
and
mov
push
call
push
sub
andl
gs
aad
das
loop
aas
fisubl
js
inc
sub
mov
mov
loope
push
or
sbb
mov
daa
adc
pop
push
stos
mov
or
jno
in
cmp
nop
dec
pusha
xchg
cmpsb
mov
das
xor
cmp
jmp
enter
xchg
pop
dec
ljmp
jecxz
sti
lods
lds
sbb
mov
adc
cmp
mov
addl
inc
out
cli
sbb
jo
sub
mov
aam
lods
push
fs
mov
dec
addr16
cmp
jp
push
dec
mov
push
addr16
lret
mov
pop
gs
jmp
fs
dec
xlat
cmp
mov
pop
inc
xchg
adc
lods
sub
repnz
loop
cmpsl
scas
loopne
mov
aas
jnp
and
movsb
clc
shl
mov
in
xchg
mov
outsl
cmp
cmc
inc
fstpl
mov
sbb
xor
repnz
or
cmc
push
pop
inc
mov
jge
or
test
cmp
add
pop
add
mov
repnz
lret
jp
pusha
jne
jo
rcl
mov
mov
aam
dec
push
xor
push
inc
xlat
popa
in
sahf
pop
mov
xchg
in
subb
jp
xchg
inc
shll
mov
test
cmpsb
sbb
cmp
ret
ljmp
in
jbe
popa
lods
jl
inc
aad
and
jge
mov
fisubrl
sub
inc
sub
cmp
jno
or
fidivl
sbb
int
push
xor
sar
dec
inc
jbe
test
aad
pop
cltd
dec
sti
cmp
daa
dec
lcall
mov
inc
sbb
enter
loopne
push
test
jecxz
pop
xor
shlb
test
leave
test
hlt
and
popa
xor
jle
les
shll
inc
mov
or
mov
and
jecxz
lret
loope
push
xchg
stc
xchg
jne
pop
sub
jecxz
andl
mov
and
adcb
pushf
dec
dec
mov
lcall
in
inc
lea
xchg
les
adc
dec
mov
repz
xlat
cmp
inc
xor
lods
pushf
js
cmp
cmp
popf
add
xor
rclb
scas
divb
mov
push
pop
pop
addr16
mov
mov
or
outsl
mov
and
pop
xchg
into
addl
ret
sub
adc
subl
int
aaa
cli
sbb
xchg
loop
mov
cmpl
and
jle
ljmp
xor
daa
int3
mov
out
icebp
mov
jne
and
leave
popf
jae
and
shrl
out
insb
dec
mov
pop
add
push
sub
cmp
movsb
dec
mov
int
sbb
sub
push
mov
stos
stos
add
adc
imul
mov
bound
jne
mov
sub
inc
dec
pop
mov
mov
dec
sbb
mov
fdivrp
clc
pop
mov
popa
xor
sarl
dec
push
dec
xchg
mov
xchg
or
ljmp
xlat
add
into
sbb
sub
jb
shr
add
loop
xchg
cld
sahf
fstl
sbb
neg
jbe
inc
sbb
push
mov
pop
xlat
das
ret
inc
mov
cmpl
fsubrl
adc
lahf
mov
adc
mov
mov
repz
jl
lret
dec
jnp
movsl
mov
pop
jl
imul
fisttpll
leave
sahf
sbb
inc
sti
in
call
imul
inc
repnz
pop
aaa
jo
push
cmpsb
cmp
rcll
ret
xor
sar
sbb
scas
cmpsl
cmp
rcl
sarb
or
jo
inc
push
add
push
mov
xor
out
xchg
in
and
push
or
push
pop
dec
sahf
divb
cmpsb
movsl
test
loope
mov
dec
xor
adc
mov
loopne
insl
inc
sbb
imul
pop
rdtsc
jae
les
daa
jo
out
test
dec
xchg
mov
push
mov
arpl
pop
enter
sbb
cmpsl
push
mov
adc
ss
pop
mov
mov
xlat
mov
push
inc
std
hlt
lcall
mov
call
push
int
mov
jge
jecxz
rorb
ss
loop
loop
arpl
cmpsb
aad
cmpsl
lock
divb
in
insb
cmc
ja
jbe
cmp
jns
outsb
sub
mov
dec
mov
xlat
int
inc
jo
dec
loope
movsb
fistl
insb
mov
popa
mov
adc
inc
nop
adc
clc
inc
xchg
movsl
and
mov
fcoml
ja
jle
popf
mov
jne
add
adc
aas
mov
jecxz
fcoml
loopne
mov
xor
inc
or
fcomp
pop
xchg
push
or
lods
mov
ret
outsl
jnp
pop
fistl
cli
std
ljmp
cmp
mov
or
adc
adc
xchg
mov
aas
cs
push
jg
push
clc
in
adcl
out
push
sbb
fidivs
fsubl
dec
push
fistpll
movb
jg
push
sahf
dec
and
xchg
cld
xor
xor
mov
pushf
cmp
sub
mov
cmpsl
jp
cmp
jecxz
cmp
xor
mov
jecxz
scas
fimull
jmp
cmp
pusha
lods
icebp
mov
sbb
xorb
loopne
sahf
mov
cld
iret
pop
and
cmp
sbbb
push
cmovno
mov
pop
pop
stos
iret
or
popf
fldl
mov
jae
movsb
fstpt
xlat
push
icebp
insb
rclb
pop
or
jmp
xchg
int3
adc
out
pop
stos
or
fnsave
mov
test
pop
lret
arpl
sbb
pop
jecxz
push
xor
jmp
sub
mov
adc
dec
inc
and
cltd
dec
test
mov
jns
lcall
push
xor
xor
dec
test
adcl
jl
lods
jecxz
cwtl
ret
std
outsl
cmp
jo
movsb
and
inc
fcomip
cld
jp
cmpsl
mov
data16
test
testl
xchg
das
in
sbbb
and
push
cmc
and
push
pop
shlb
les
add
xor
mov
push
daa
sti
xchg
sbb
ss
sub
jp
add
dec
dec
xchg
orl
fwait
pop
pusha
sbb
inc
inc
push
imul
in
dec
pusha
cmp
loopne
dec
mov
xor
insb
mov
stos
rcrb
les
imul
orl
bound
mov
mov
aad
rep
pop
pop
mov
mov
jbe
iret
add
mov
push
mov
lods
mov
and
das
jne
ficoml
sbb
add
mov
jns
or
xchg
or
ror
xchg
decb
xchg
insb
xchg
fldenv
pop
sbb
jae
jnp
int3
sbb
and
xchg
or
movsb
adcl
movb
adc
arpl
jmp
fiadds
cld
inc
inc
sub
xor
std
xlat
or
add
xchg
stos
mov
mov
out
mov
push
xor
popf
jg
cs
in
es
hlt
fs
decb
lcall
jnp
dec
inc
dec
out
sbb
addr16
or
scas
sub
pop
sbb
in
in
in
cs
xor
sub
lea
divl
shl
pop
adc
subl
pop
mov
jmp
lret
xchg
sahf
jp
addr16
jl
jo
test
pop
and
sbb
mov
movsb
push
adc
sarb
lahf
mov
mov
daa
xchg
lcall
push
lcall
out
out
into
dec
xchg
lcall
popf
pop
call
add
out
mov
mov
loop
mov
inc
insl
test
shrl
xchg
cmp
inc
int
xchg
sub
adc
les
mov
stos
lods
cmp
daa
mov
lea
stos
pop
or
pusha
enter
outsl
inc
mov
jecxz
stos
pop
enter
idivl
mov
leave
outsl
xor
mov
gs
enter
je
mov
push
enter
icebp
cmpsl
jmp
js
xlat
jecxz
and
fldl
sbb
popf
lea
add
fisttps
add
pop
out
jmp
jmp
mov
popa
mov
cmpsl
mov
icebp
int3
loop
sti
and
mov
sbb
xlat
std
hlt
cmp
ja
gs
xlat
inc
sub
fisubs
xor
jle
sbb
sbb
dec
test
adc
fimuls
mov
popa
mov
mov
mov
sbb
xchg
inc
stos
aas
and
sbb
xchg
adc
jle
in
inc
outsb
lock
jl
sub
or
pop
jp
jb
test
es
cmpsl
jg
or
dec
jmp
or
lret
rorl
sub
stos
movsl
sbb
data16
mov
xchg
cmp
out
jp
push
add
leave
ljmp
pop
mov
cld
inc
sub
push
sbb
sbb
arpl
pmovmskb
adc
xchg
fistpll
cmp
shl
mov
push
xor
push
pop
int3
jecxz
inc
roll
es
ljmp
mov
and
xchg
sarb
and
adc
xor
call
sti
dec
lods
sbb
das
mov
xor
jo
pop
fistpl
pop
clc
inc
imull
data16
dec
shl
fcoml
pop
leave
pop
xor
loope
aad
pop
repnz
sub
mov
cmp
arpl
pop
ss
add
jbe
jmp
out
outsb
imul
lods
adc
scas
xchg
cmc
lock
shlb
shll
jae
mov
enter
sub
push
cs
xchg
shlb
cs
sbb
das
push
lea
sbb
out
test
xchg
repnz
mov
popa
cld
xchg
or
xchg
stc
and
adc
cld
jl
cmp
lcall
je
lea
andl
mov
cmp
hlt
popa
aaa
ljmp
cmpsb
cmp
ret
sub
loopne
ficoml
jmp
sahf
mov
sahf
lahf
lds
int3
aam
in
pop
test
jnp
stos
sti
fsubrl
dec
rorl
jne
aad
and
clc
fs
and
lds
sarb
inc
sbb
vxorps
sti
lock
cld
lods
jb
cli
mov
pop
add
test
fucomp
lret
xor
pop
jo
inc
sbb
dec
shlb
in
fcmovnu
jnp
bound
cwtl
bound
and
mov
lahf
scas
stos
cli
nop
xchg
sub
cmp
and
sbb
loopne
loop
cmpsl
lea
inc
popf
and
mov
daa
pop
sbb
insb
or
out
adc
lock
adc
adc
fcompl
movb
xor
push
nop
out
push
test
sbb
push
aad
or
aaa
lahf
icebp
mov
mov
imul
loop
add
and
fisubs
mov
std
mov
adc
and
and
xchg
test
mov
lock
push
jbe
icebp
lods
sbb
and
jbe
mov
jp
sti
inc
pop
mov
and
add
out
clc
sbb
jecxz
adc
insb
and
mov
or
imul
mov
jl
idivb
pop
out
xor
hlt
shll
lea
test
pop
ja
scas
scas
shll
sbb
cmp
sub
xchg
sub
loop
cmpsl
fidivl
stos
imul
ds
outsb
xchg
or
push
xchg
clc
in
lcall
or
mov
xchg
lret
imulb
mov
sbb
jb
stos
mov
cmp
adc
and
push
in
clc
clc
or
sbb
cmp
in
dec
mov
popf
test
lds
dec
xchg
pop
popa
sub
test
sti
icebp
jo
lods
push
lcall
jae
xchg
andb
adc
xchg
out
cmp
pop
loop
shld
pusha
adc
outsb
hlt
sar
pop
inc
cmpsl
fdivrp
int
bound
sub
inc
jge
roll
jo
popf
add
push
popa
sub
xlat
sbb
and
jb
lcall
mov
cmp
pop
mov
pop
push
dec
cmp
daa
mov
dec
xchg
lcall
bound
add
jae
fldcw
add
lds
mov
cs
jmp
push
out
pop
sar
in
fsubrs
repnz
leave
outsl
cmp
push
in
loope
mov
sbbb
loop
test
adc
add
imul
lea
xchg
addl
xchg
inc
push
pop
popf
add
dec
mov
das
in
nop
mov
int3
ljmp
and
arpl
add
xor
call
push
lret
inc
imul
pop
mov
add
and
in
pop
mov
dec
fnsave
mov
in
jge
ljmp
dec
test
dec
and
mov
jge
idivb
pusha
ds
std
pop
pop
aas
jg
fisubrs
add
rcll
ja
mov
stc
xchg
int3
mov
lods
add
inc
xchg
fnstsw
mov
xor
sarl
cmpsb
imul
lock
adc
xchg
adc
aad
insl
movsl
sar
int3
push
push
jl
stos
xchg
cwtl
pop
fistl
frstor
lea
mov
ljmp
ljmp
dec
arpl
popf
lret
xorl
test
cmp
loope
mov
add
iret
pop
mov
xor
fiadds
mov
ret
sub
jge
sahf
mov
or
adc
es
sub
pop
rol
xor
inc
sbb
push
mov
jo
push
sub
sub
fisttps
or
scas
addb
outsb
mov
adc
dec
out
xchg
out
das
xchg
mov
inc
dec
in
sub
xlat
mov
mov
lods
jmp
nop
xchg
fsubrs
ds
jb
add
cmp
push
cmpsb
pop
dec
in
dec
pop
inc
in
int3
out
jmp
in
mov
cmp
adc
mov
xchg
stos
jecxz
jae
or
into
push
ljmp
outsb
sbb
sbb
and
or
pop
xchg
movsb
insb
mov
inc
enter
shll
push
loope
sbb
sbb
add
sub
iret
jecxz
pop
push
bound
cld
stos
and
es
xchg
mov
cmp
insb
icebp
push
insb
ret
ja
add
loop
roll
ss
jmp
cltd
pop
int3
sbb
ds
in
inc
icebp
leave
adc
jo
add
rcrb
out
js
movsl
xor
inc
cmp
push
pushf
scas
cmp
xchg
mov
and
jnp
ljmp
scas
dec
xchg
jle
out
adc
popa
lret
ret
inc
pop
mov
push
divl
adc
and
das
push
scas
pushf
mov
mov
jnp
mov
js
adc
orl
fstps
ret
jl
mov
dec
lret
call
mov
cmp
fwait
daa
insb
dec
push
jae
push
inc
imul
leave
lret
arpl
sbb
scas
and
js
xchg
rcrb
cmp
cli
imul
sub
faddp
arpl
aas
popa
mov
push
repz
xor
add
nop
dec
jmp
stos
loopne
jns
mov
shl
lock
test
aas
fistpll
lock
inc
je
xchg
sub
pop
roll
fidivl
iret
cwtl
arpl
push
in
adc
mov
and
add
dec
std
pop
orl
and
mov
pushf
or
cmp
loope
xor
adc
repnz
push
fstpl
aam
ret
in
pop
pop
std
pop
rcll
stos
test
and
pop
dec
pop
adc
lea
push
sub
hlt
rclb
cmp
sub
test
cmp
jmp
mov
iret
fldl
push
mov
jbe
stos
mov
pop
pop
push
es
cmp
push
add
cmp
xlat
pop
daa
adc
jno
fstl
adc
lods
popa
dec
lods
sub
push
mov
dec
pop
outsb
pusha
arpl
xor
popf
xor
jns
xchg
jp
push
sbb
std
adc
mov
mov
or
shr
imul
mov
clc
dec
cmp
cmpsb
jmp
pop
mov
jecxz
scas
out
cmp
imul
scas
dec
pop
sub
decl
and
jb
vmwrite
xchg
add
frstor
mov
lods
sub
loope
fistps
or
cmp
dec
mov
jnp
mov
jg
fwait
andl
sub
ret
pop
mov
imul
fldenv
sbb
int3
sti
mov
push
push
es
mov
lcall
push
hlt
lcall
dec
pop
out
mov
jl
push
add
shll
or
add
out
sbb
mov
fcomps
xchg
or
rcr
add
clc
xor
xor
add
sbb
and
or
mov
outsl
xchg
cltd
sub
pop
scas
clc
addb
andb
aad
pop
ret
test
sahf
mov
push
jl
les
or
xchg
rol
lds
sbb
pushf
push
outsb
xchg
sub
adc
pop
in
imul
or
aaa
loopne
ret
inc
outsb
loope
test
push
fbstp
out
cmp
jne
sarb
cmpsb
ds
test
jle
lahf
scas
mov
xchg
fs
popf
mov
out
lahf
out
imul
fs
or
fidivrs
mov
insl
jecxz
pop
jb
sarl
jecxz
lods
adc
jle
dec
push
and
in
cmp
or
gs
loop
xor
jo
movsb
in
repnz
outsl
inc
add
das
in
push
push
xor
push
popa
lock
fwait
cmpsl
mov
xchg
push
cmp
and
ljmp
inc
mov
mov
int
lret
mov
pop
fisubl
sub
adc
push
inc
xor
jg
leave
pop
cmp
sbb
sahf
adc
xchg
loop
adc
jns
pusha
dec
cmp
inc
imul
mov
mov
push
adcl
push
mov
sbb
dec
xor
clc
jae
std
mov
test
mov
push
es
push
sub
test
mov
out
pushl
xor
test
pop
mov
mov
mov
inc
and
xor
sahf
rcrb
xchg
jnp
orl
lea
push
cmp
dec
xchg
sbb
out
push
shll
xchg
lcall
sahf
jae
ljmp
push
pop
push
mov
adc
dec
loop
add
shlb
movsb
adc
aam
imul
shll
mov
data16
xorl
addl
xchg
mov
push
lcall
adc
push
loopne
inc
pop
daa
jp
mov
imul
pop
add
vunpcklps
mov
rcr
add
fstps
test
cli
rclb
roll
or
mov
xchg
adc
call
rorb
jns
pop
lret
cmp
arpl
cmp
ja
lret
clc
std
mov
mov
inc
add
push
in
ror
pop
inc
push
inc
mov
popf
mov
bswap
pop
sbb
loopne
cmp
adc
arpl
fs
stc
jl
fsubrl
sbb
iret
call
mov
adc
xchg
jmp
lret
out
jp
mov
mov
outsl
movsb
js
jecxz
repz
dec
adc
cmpsb
or
cmp
sub
aaa
mov
cmp
jns
andl
mov
mov
out
mov
cmp
xchg
xor
cmpsb
fadd
out
inc
fwait
add
and
mov
ror
out
test
das
push
aas
lds
push
gs
ja
daa
es
sahf
xchg
and
les
pushf
mov
mov
jg
daa
xchg
ljmp
loopne
add
mov
cmp
lahf
insb
cmp
pop
shlb
into
sub
popa
push
jl
pop
into
pushf
jl
xchg
jbe
orb
sbb
lods
cmp
hlt
fildll
shrl
push
mov
mov
lds
orl
and
movsl
jae
sub
inc
in
xchg
mov
movsb
into
cmp
xor
jns
lock
pop
cmpsl
pop
pusha
pop
inc
sbb
not
std
shll
mov
mov
rclb
aad
sbb
mov
inc
cmp
jnp
inc
gs
out
adc
jne
sti
dec
fsubrs
scas
jnp
adc
inc
call
cli
inc
inc
in
movsl
dec
insl
push
stos
shlb
fcompl
aas
inc
pop
dec
and
mov
imul
push
push
popa
push
pop
lods
xchg
add
mov
pop
jl
mov
adc
mov
dec
push
cmp
jbe
mov
push
das
movsl
sti
enter
or
cli
aas
subb
cltd
pop
mov
loope
xchg
xchg
mov
ja
fdiv
rcr
jo
roll
sahf
jg
mov
int
jle
in
in
popf
xor
out
cmp
fistl
and
sub
inc
push
xorb
orb
out
stos
xor
test
jmp
in
ficomps
inc
test
lds
sbbb
jecxz
cli
push
iret
ret
je
adc
or
call
js
scas
mov
test
aam
sbbl
push
out
lods
cwtl
jbe
xor
adc
add
jp
outsb
stc
js
sbb
mov
scas
mov
jg
hlt
mov
add
xchg
and
pop
xchg
bound
sbbb
and
jo
int
lret
adcl
pop
in
mov
insb
cli
adc
pop
shll
or
adc
pop
mov
mov
sbb
lods
imul
pop
and
mov
js
in
fmul
sbb
push
cmp
dec
jmp
cmp
das
js
movsl
enter
imul
mov
arpl
enter
xor
add
sbb
mov
popf
ret
lds
sbb
test
jo
xor
pop
jg
in
mov
je
and
int
xor
je
sub
jnp
dec
cmp
inc
and
les
fsubl
mov
outsl
imul
push
xchg
popa
iret
ficomps
xchg
jecxz
aaa
out
push
push
and
and
mov
aad
in
mov
sub
add
mov
add
push
cmpsb
or
jno
push
das
iret
xor
cmc
push
adc
mov
mov
dec
cmpl
divb
pop
add
dec
bswap
inc
pop
in
in
add
ss
les
xchg
and
sbb
mov
and
push
pop
aad
sub
inc
dec
push
addr16
cmpsb
iret
setb
cmp
jno
cmpsl
xchg
mov
stc
subb
jmp
cmp
lods
pusha
aad
outsl
cli
xlat
in
mov
sbbb
insb
mov
pop
fmuls
rorb
sti
and
mov
push
ss
mov
and
cmp
arpl
cmc
mov
lret
shll
ja
push
ds
flds
clc
fs
xchg
mov
test
faddp
cmpsb
sbb
adc
mov
adc
je
leave
ss
mov
aaa
xchg
insb
mov
arpl
push
xor
sti
jne
lock
lock
pusha
inc
sahf
lret
enter
stos
sarb
sub
adc
xchg
fdivl
fs
mov
cmp
mov
lret
pushf
xor
xlat
jl
idivb
mov
or
inc
sub
fwait
lahf
int
adc
mov
jge
fsubp
mov
push
adc
rcll
into
cmp
mov
repnz
popf
sub
leave
fisttpl
push
jne
lds
sub
lods
dec
xor
ret
ja
jmp
jg
cmpsb
xlat
mov
add
cmp
loop
mov
push
inc
adc
sbb
mov
pop
test
fistpll
in
add
mov
loope
sbb
subl
mov
test
lret
popf
or
mov
ss
fldt
js
mov
mov
adc
cmpsl
jle
dec
cli
hlt
pushf
xor
loope
pop
cmp
lahf
inc
lret
inc
xchg
xchg
xor
cltd
lret
push
dec
cmp
mov
sarb
pop
sub
xchg
mov
out
icebp
push
adc
xor
push
mov
xchg
mov
decb
jle
lahf
mov
movsl
add
cmp
leave
insl
jge
jp
or
call
or
lea
lcall
sbb
fildl
ljmp
adc
cmp
mov
cltd
xor
xor
mov
fwait
ja
mov
or
imul
repnz
mov
sbb
dec
pop
mov
lods
popa
stos
cwtl
mov
or
cwtl
pop
imul
mov
arpl
arpl
flds
sar
imul
rol
aad
push
mov
mov
loope
daa
mov
jl
pusha
sbb
pop
mov
cmp
int
je
aam
enter
xchg
jno
pushf
jb
pop
shrl
sub
adc
adc
ret
bound
outsb
lods
add
cld
inc
mov
sbb
mov
dec
leave
scas
ret
jns
mov
les
mov
test
cmc
movsb
mov
shr
test
mov
mov
mov
adc
cmp
loope
rcr
dec
pop
sub
rolb
cmc
inc
jae
sub
dec
rcr
push
mov
inc
lock
ret
mov
cmp
jle
pusha
outsb
sbb
out
fcmovnb
sbb
pop
mov
daa
out
fld
int3
out
loope
sub
rcll
push
cmp
mov
sbb
sub
loopne
mov
xor
jge
gs
pop
iret
xchg
stos
sub
or
mov
cmp
sahf
sbb
xor
shlb
xor
mov
jne
cld
addl
pop
inc
ret
negb
and
fcmovbe
out
out
repz
scas
jb
cs
pop
jae
xchg
xchg
cmpsb
incb
stc
in
and
outsb
mov
xlat
push
push
add
xlat
mov
addl
cmp
inc
sbb
test
or
mov
dec
pop
cmp
mov
and
or
std
dec
push
mov
sub
stos
pusha
out
lret
xor
fstps
jp
imul
int
pop
andl
and
adc
dec
je
fbstp
sbb
aas
je
push
nop
fadds
insb
inc
jge
loop
cmc
in
or
and
lds
jmp
jmp
xchg
pop
push
sbb
mov
movsb
lret
xchg
mov
insl
lret
or
cmp
add
inc
or
mov
cmp
pop
push
dec
jge
push
sub
iret
xchg
dec
push
dec
xlat
xor
xchg
mov
push
test
inc
or
pop
mov
repnz
pop
xchg
fldl
inc
xor
imul
sbb
test
loope
push
and
movl
inc
ret
les
mov
std
inc
cmp
loop
sbb
xor
decl
lret
leave
insb
or
lret
andb
xchg
addr16
sarb
jne
pop
add
ffreep
dec
push
jmp
ss
fmul
cmp
push
repz
fwait
mov
cmp
adc
push
cli
jns
mov
mov
inc
arpl
xchg
decb
subb
scas
push
call
mov
jne
test
into
mov
aaa
jl
fadd
ret
xchg
fcoms
mov
fildll
in
push
std
and
pop
ss
or
outsb
jno
test
adc
dec
fcom
sub
cli
scas
add
insb
jecxz
shlb
lahf
mov
sub
xchg
sub
jae
in
inc
mov
call
jg
pushf
roll
pop
pop
mov
push
lret
push
pop
ret
inc
insl
jl
jp
arpl
mov
out
lcall
cltd
add
in
movsl
je
addr16
cmp
or
ja
fwait
scas
add
xchg
and
int3
sbb
popa
pop
inc
out
sub
clc
sbb
into
rclb
cmp
fists
in
pushf
pop
xchg
dec
ret
pop
subl
xor
test
out
xchg
jp
pushf
test
add
loop
rcrl
pushf
data16
jg
into
cmp
mov
dec
mov
dec
push
jo
add
fcomps
dec
stos
xchg
les
in
scas
hlt
and
mov
ljmp
insl
or
jmp
popa
rorb
stos
ja
cli
inc
and
inc
dec
push
push
lods
sbb
inc
mov
out
stos
sbb
rcrb
jno
int
xorb
jge
cmpsb
adc
mov
cmp
icebp
sub
ret
dec
int3
sbb
mov
pop
out
inc
pop
xor
fbld
lock
push
cmp
mov
pop
dec
inc
cmp
outsb
arpl
lea
and
addr16
add
lods
pusha
jmp
rclb
sub
cmp
mov
das
fbstp
popf
cwtl
in
adc
mov
adc
cmp
pop
mov
fsub
mov
movsl
insb
push
jb
dec
loope
lret
cmpsl
stos
divb
repnz
mov
xchg
sbb
pushf
and
inc
add
lea
shlb
xor
cld
xchg
lahf
mov
jbe
cmp
loope
ss
cmp
jb
push
ljmp
mov
sbb
cld
repnz
loope
fldcw
inc
jns
mov
inc
inc
scas
or
xor
ja
add
jmp
xor
in
xor
sbb
das
mov
jns
fs
jl
mov
or
mov
dec
jle
test
scas
adc
xchg
std
nop
pop
insl
jge
cmp
jl
mov
loop
pop
sahf
and
push
adc
sbb
inc
fisubs
dec
repz
lods
sub
adc
push
jnp
cmp
jb
repnz
cmp
push
cld
orl
ret
add
aam
inc
mov
aad
jbe
mov
inc
stc
sub
repnz
inc
insl
or
popa
mov
pavgb
jg
pop
daa
ljmp
aaa
jnp
out
ror
in
sbb
or
push
add
mov
mov
cmp
ljmp
stos
cmpsb
fisttpl
cmp
pushl
jno
fisubl
mov
call
xorb
mov
pop
test
add
or
mov
push
pop
or
mov
imul
addr16
jno
or
ds
mov
cld
cmp
mov
les
js
xchg
shrb
xchg
out
cltd
add
jecxz
cltd
lods
pop
cmp
inc
into
bound
inc
xchg
xchg
mov
rorl
ss
movsb
or
test
adc
inc
mov
xchg
inc
ss
outsl
add
movsb
arpl
scas
mov
jge
pop
cmp
fstpl
outsb
in
sahf
push
test
sbb
repnz
push
mov
mov
jl
adcb
jle,pt
test
cwtl
mov
std
pop
sbb
xor
adc
or
loop
ficoms
pop
pop
gs
pop
and
mov
fsubl
ljmp
icebp
push
pop
into
cwtl
call
push
adc
sbb
xchg
addr16
inc
and
gs
or
jnp
lods
jns
fidivrl
sbb
fisubrs
lea
in
roll
sbb
or
cmp
add
pop
and
xlat
fs
or
popa
xorl
mov
dec
pop
es
inc
jge
test
pushf
sub
out
lock
dec
lcall
adc
mov
jo
or
xor
sbb
sbb
sub
mov
sub
mov
push
test
jns
push
inc
fiadds
mov
jecxz
pop
fs
ret
jmp
shlb
sahf
movb
popf
jbe
dec
jge
pop
adc
add
sub
rorb
push
ret
lods
mov
bound
mov
and
popa
shr
xchg
push
pushf
inc
lods
sbb
lahf
push
gs
pop
sub
mov
cmp
mov
je
stc
jnp
jns
cltd
das
jg
cmp
jp
ja
adc
ljmp
pop
lea
data16
jnp
movsb
adc
movb
push
or
xlat
add
lret
add
pusha
dec
loope
jmp
int3
inc
lea
aad
push
pop
mov
xchg
xchg
and
push
clc
push
cmc
cmp
push
sti
ret
rolb
dec
pop
test
movsb
jge
aas
cmp
inc
or
cwtl
in
mov
out
std
movsb
std
lock
fldenv
inc
push
cmp
andb
mov
mov
into
in
inc
fcompl
push
inc
hlt
dec
mov
dec
or
rolb
int
insl
getsec
pop
inc
test
mov
hlt
xorl
pop
ja
es
xor
ficoms
or
rcll
inc
or
int
inc
cmpsb
daa
or
adc
sub
jae
inc
pop
xchg
negl
jge
fadds
shl
fsub
xor
insl
dec
sbb
lcall
mov
cs
imul
or
rcr
fwait
pop
lcall
push
dec
jle
pushf
pop
xchg
adc
adc
add
sub
clc
sbb
in
sub
addb
les
push
pop
stos
mov
mov
cmpb
mov
sbb
mov
mov
jle
fsubp
mov
out
or
test
xchg
movsb
adc
lods
fidivrs
jle
sbb
fs
xlat
xor
and
montmul
cmpsb
add
mov
les
lock
clc
dec
mov
sbb
cmpsb
inc
testb
in
cmpsl
sub
push
lds
bound
js
jle
sahf
ljmp
pop
lahf
pop
mov
add
pop
xchg
movsl
or
jmp
sub
and
cmp
pop
jge
sbb
outsl
hlt
jp
mov
mov
icebp
add
jnp
inc
push
xchg
mov
xchg
fcom
lcall
pop
js
dec
in
sub
jmp
mov
mov
xor
adc
gs
ja
aas
insl
enter
test
test
add
add
loopne
mov
xchg
test
roll
fistps
ss
jb
loopne
push
or
adc
mov
dec
out
xchg
cmpb
jecxz
mov
ljmp
cmpsl
lret
fs
lcall
shlb
jns
add
xor
push
repz
mov
orb
pushf
jns
sti
push
adc
sbb
dec
sbb
pop
shlb
sbb
pop
adc
jmp
enter
pop
pop
cmp
data16
cmpb
xchg
mov
mov
es
sub
adc
add
loope
push
push
call
loopne
inc
ret
loope
arpl
imul
xchg
xlat
cmp
les
jl
inc
xchg
es
adc
add
or
ds
leave
xchg
cmc
pop
xchg
xchg
faddl
shrl
push
push
xchg
das
js
test
mov
cmp
add
loopne
stos
xor
push
xchg
je
xor
fistl
js
pop
test
ds
sub
xor
and
fidivrl
push
repnz
les
repz
or
push
sub
hlt
jp
pushf
mov
push
mov
jmp
enter
fwait
push
ficomps
sbb
insb
sub
ret
xor
fdivs
xchg
pop
push
fs
mov
jle
mov
push
enter
out
push
out
sub
orl
ljmp
adc
shl
and
mov
orb
jae
out
lcall
xchg
insl
cmp
lcall
push
mov
mul
push
nop
adc
xchg
jecxz
ss
fcoml
and
loopne
lcall
jmp
ficomps
sub
in
jae
out
int3
mov
add
inc
icebp
jae
scas
push
push
fwait
bound
mov
fs
lret
iret
inc
jnp
fsubl
mov
loope
ljmp
lahf
fistl
jg
fwait
sahf
sbb
mov
mov
cmpsb
jno
mov
pop
inc
xchg
aaa
mov
push
lods
insb
sbb
dec
xchg
xor
lea
outsb
test
mov
popa
lds
cli
push
adc
aad
dec
cmp
clc
popf
stos
cwtl
mov
and
pop
mov
jne
add
xor
xchg
dec
inc
lahf
ret
sbbl
push
push
jne
testl
testb
xor
test
pop
test
mov
scas
sub
ja
aas
inc
push
push
stc
jmp
cmpsl
arpl
int
inc
outsb
jmp
lock
out
test
push
sbb
iret
notb
aad
scas
in
xchg
sbb
xchg
scas
mov
shll
js
dec
mov
mov
mov
push
xlat
cmc
mov
inc
ret
fcomps
mov
adc
ret
icebp
nopl
in
divl
fildl
and
loopne
hlt
push
cmp
pop
adc
mov
test
mov
aaa
js
push
dec
mov
xor
sbb
dec
push
xchg
jl
cmp
and
aaa
jae
repz
dec
inc
dec
outsb
sub
insl
movsb
jne
mov
xchg
mov
stc
mov
cmpsb
and
mov
mov
jno
dec
lahf
mov
or
pop
addb
es
cmp
mov
jge
aas
mov
add
adc
jmp
std
sub
mov
jmp
scas
jb
mov
sti
test
xchg
repz
rcr
pop
pop
ja
test
dec
mov
fs
sub
fdivl
subb
js
jbe
mov
cli
sub
xchg
lahf
out
or
sarl
mov
subl
out
mov
cs
into
cwtl
and
pop
call
outsb
loop
xchg
in
das
daa
jae,pn
pop
fcomp
loop
mov
insl
push
xchg
xor
sbb
pop
mov
sti
rorl
sbb
mov
mov
outsl
mov
repz
sbb
cmpsl
cli
ss
pop
dec
movlps
push
or
push
ficompl
js
xchg
orb
jb
or
clc
call
push
mov
daa
dec
xchg
mov
pop
outsl
and
loope
aad
pop
cmc
popf
nop
divb
xorl
jb
add
scas
push
dec
or
push
mov
fcoml
lods
js
stos
dec
push
stos
pop
cmp
or
jg
arpl
cmp
std
xor
mov
fmuls
sub
push
adc
xchg
push
xchg
mov
imul
shrl
decl
test
cs
pop
adc
or
add
lods
and
push
push
or
insb
rcrb
or
in
mov
fsubs
fidivl
mov
popa
cmp
in
adc
sti
lds
mov
inc
shl
into
loope
mov
mov
inc
movsl
mov
xchg
pop
push
imul
cmp
cmp
adc
aad
mov
bound
shr
lods
cmpsl
add
mov
mov
sub
icebp
mov
mov
sbb
dec
pop
cwtl
sub
je
lret
jl
jge
dec
lea
xchg
insl
imul
gs
rorb
mov
aad
pusha
inc
push
loope
in
and
cld
lock
inc
sub
sbb
stc
filds
ljmp
jne
fdivrs
mov
mov
xor
icebp
jo
stos
inc
cwtl
cmp
sbb
adc
lods
pushf
imul
fidivl
lods
jns
cmp
scas
not
jecxz
mov
or
fsubp
addb
cltd
push
pop
sub
jl
cltd
or
dec
sbb
scas
push
hlt
mov
xchg
fdivrs
mov
lock
jno
aad
adc
ljmp
sbb
mov
xor
pushf
iret
mov
roll
jbe
dec
popa
cmc
sahf
cmp
mov
lods
fs
into
dec
mov
and
push
popw
mov
mov
imul
cmp
ja
lret
mov
movsl
jmp
loopne
inc
mov
mov
lret
movsb
rorb
fs
add
pop
mov
add
aam
mov
or
jno
push
fisubrl
fldcw
or
add
mov
xchg
loope
inc
ret
pop
or
fdivrs
push
rcll
sti
clc
mov
loope
repnz
mov
pop
lcall
loope
pop
sub
filds
lods
aad
mov
imul
popf
in
xchg
cltd
js
shl
cli
fdivrs
scas
loop
add
push
shrb
sti
lret
cmp
inc
pop
testl
dec
movsb
pop
sbb
pushl
mov
int
mov
and
movsl
push
ret
mov
test
xchg
cmpsl
xchg
inc
push
add
xor
cmpsl
cmp
add
inc
mov
xchg
pop
cwtl
inc
jne
xchg
int
mov
sbb
cs
jo
jle
addr16
xor
mov
repz
push
or
sub
xchg
aad
cmp
mov
repz
xor
sbb
jle
cli
mov
mov
dec
dec
je
enter
into
ret
push
dec
mull
push
pushf
jmp
in
dec
addr16
scas
xor
negb
repz
sarl
in
or
rcrb
sarb
cmpsl
je
cs
adc
outsb
jecxz
test
xor
pusha
in
inc
pop
xor
mov
push
pop
inc
lock
xchg
cmpsb
fisubs
iret
clc
stos
adc
jns
sbb
jecxz
mov
imul
in
cmp
jns
loopne
jecxz
and
and
shlb
adc
dec
add
xchg
sub
sbb
dec
jl
cmc
mov
aam
sub
orl
clc
inc
jae
pushf
cmp
sbb
lret
in
insl
pushf
les
sub
fldl2e
into
lret
sbb
mov
ficompl
mov
in
shl
aad
push
jge
dec
jmp
aam
adc
xchg
pop
inc
push
lea
dec
pushf
jmp
xchg
mov
adc
sub
fsub
xchg
inc
mov
cmc
dec
and
and
jno
jp
pop
jmp
dec
inc
int3
jns
cmc
push
mov
pop
pop
mov
push
jge
adc
push
negl
fmuls
jmp
pop
clc
psubsw
stos
lret
cmp
jne
mov
aaa
test
dec
sub
fisubrs
push
xor
movsb
lret
jge
in
and
adc
outsb
or
mov
mov
lret
sbb
push
mov
pop
das
loop
mov
repnz
mov
mov
movsb
xor
lret
enter
cmp
decl
push
sbb
mov
mov
inc
insb
arpl
xchg
cmp
jne
mov
push
insb
pop
push
cmp
ffreep
xchg
les
imul
test
filds
mov
cltd
mov
mov
imul
cli
push
js
mov
mov
stos
sub
dec
xor
mov
mov
inc
ret
jge
stos
aam
push
jge
pop
arpl
pushf
mov
sbb
int3
shlb
adc
sti
popf
pop
push
xor
xor
jl
jno
push
into
popf
mov
mov
nop
or
lret
loop
imul
xchg
or
cmp
mov
adc
push
fmul
jno
or
mov
pop
ds
mov
jo
lahf
rolb
out
stc
and
xor
int
mov
gs
fs
test
sub
imul
pop
mov
ud1
lcall
pop
std
jbe
scas
or
test
mov
loope
int3
nop
jns
sbb
xorl
test
sahf
shll
xchg
fnstcw
adc
pusha
xlat
mov
js
push
or
insl
hlt
inc
ja
adc
xchg
sub
xchg
mov
int3
pushl
xor
cwtl
adc
adc
rcr
pop
sarb
ss
cmpsl
into
jne
or
scas
rcr
lahf
xchg
push
in
filds
stos
insb
add
loopne
and
or
lret
xor
hlt
lock
loope
add
stc
cmp
cltd
stos
aaa
sarl
ss
mov
dec
mov
xchg
repnz
or
and
or
out
push
dec
pop
lahf
inc
fstpt
movl
addr16
jnp
pop
in
or
jl
insl
jnp
icebp
add
jo
out
cmpb
mov
push
mov
shrl
cmc
not
loope
push
push
shlb
push
in
or
mov
lods
or
out
mov
dec
pop
mov
fs
cmp
xor
mov
in
push
in
pop
les
mov
in
mulb
cmpb
enter
push
push
add
pop
inc
insl
xchg
addr16
xlat
mov
int
mov
xor
outsl
mov
rcrb
fwait
or
scas
int
pop
dec
cmp
xchg
push
add
sar
aad
sub
stos
inc
cmp
cmp
setae
cmp
jl
stc
icebp
insb
das
jl
jne
iret
hlt
cmpsl
lea
push
or
xor
dec
add
mov
arpl
ret
jo
mov
and
sub
orl
pop
iret
mov
mov
push
add
adc
arpl
roll
dec
and
or
sub
push
ret
jmp
fisubs
rcll
ret
add
push
cmp
xchg
sbb
mov
jnp
xor
gs
xchg
jmp
xchg
jo
pushf
xor
sbb
mov
ds
ficomps
pop
jmp
dec
jge
sub
mov
sub
loopne
popa
ss
mov
xor
xor
sub
stos
push
xchg
fcom
dec
jp
icebp
mov
xchg
push
les
aaa
div
sub
mov
lea
clc
aad
ficompl
dec
push
insl
loope
lcall
shlb
adc
lods
or
les
mov
popf
ljmp
loopne
pop
xchg
cmovp
jmp
test
stc
cli
push
cmc
jmp
mov
ja
pushf
movsb
inc
pop
fidivs
gs
xchg
addr16
ja
fnstcw
aad
test
les
xchg
mov
enter
pop
xchg
lret
push
sbb
enter
sub
outsb
loopne
sbbb
jne
jl
mov
out
pop
sahf
mov
push
icebp
pop
in
mov
pop
push
loop
xchg
daa
lcall
push
jmp
mov
out
cmp
test
push
pop
add
call
fmull
cwtl
push
shrd
test
outsb
push
cmpsb
push
jg
cmpsb
in
mov
dec
je
jp
push
inc
in
jle
ret
inc
sub
inc
or
push
xor
mov
xor
cmp
dec
jl
hlt
jne
xlat
iret
stos
mov
je
mov
mov
jl
pusha
ja
notb
test
and
xchg
mov
sbb
nop
lods
sub
inc
pop
push
ret
jae
pusha
mov
cmp
call
jne
pushl
out
insb
lret
mov
and
aam
insl
lret
jb
or
add
stos
movsl
mov
xor
jno
je
rcrl
cs
testb
push
negl
push
es
push
and
pop
out
jbe
jno
hlt
push
and
test
ret
adc
es
push
or
inc
cmp
mov
mov
je
add
mov
loop
push
out
mov
mov
sti
sub
lret
in
sub
pop
xor
push
jmp
add
pop
xchg
aaa
popf
cld
ja
gs
sbb
fstenv
jb
jmp
mov
cmp
pop
push
xor
je
ljmp
xchg
sbb
fisubrs
xchg
in
imul
mov
fildll
or
int3
sbb
inc
jnp
gs
les
adc
mov
icebp
daa
xor
push
scas
and
lds
pop
mov
add
ror
mov
out
or
loopne
pop
ss
sub
inc
imull
frstor
shll
adc
imul
std
test
push
pop
jge
sub
lcall
popf
push
adc
ss
adc
sub
add
sbb
shr
mov
xchg
imul
mov
mov
mov
mov
push
in
test
cwtl
mov
push
dec
dec
stc
add
push
inc
mov
into
mov
cmp
mov
mov
ds
mov
add
pop
imul
sub
inc
sbb
int
jnp
test
mov
arpl
xor
into
ss
stos
dec
sbb
in
leave
fldl
in
push
shlb
mov
loopne
cli
xor
pop
or
cld
icebp
jnp
mov
inc
add
xchg
xchg
push
mov
iret
scas
pop
or
pop
xor
jnp
sub
pop
aaa
jno
and
test
dec
dec
pop
mov
clc
insb
movsb
push
adc
mull
mov
push
jo
dec
lahf
lds
divl
aas
icebp
test
push
ffreep
xor
or
loope
push
mov
jo
xchg
jbe
mov
pop
dec
push
jp
imul
inc
jo
xchg
test
ret
xchg
out
data16
mov
sarl
sti
test
or
maskmovq
xchg
mov
inc
lods
inc
stc
fldenv
xchg
mov
stc
jl
icebp
fcompl
jo
add
repnz
in
and
daa
iret
mov
cwtl
fsubs
dec
in
pushf
cwtl
outsl
ret
repz
jmp
cmpsb
loopne
fildl
aam
lods
sbb
enter
dec
fwait
negb
adc
shll
jno
mov
adc
inc
das
scas
fs
xor
jge
fs
xor
adcb
loopne
ret
lods
shll
xor
adc
mov
rorb
push
push
cmp
std
out
je
rorb
lea
inc
mov
pop
insl
scas
or
out
and
inc
iret
daa
aam
mov
rorb
or
rorb
mov
add
je
inc
inc
js
mov
popa
dec
jno
mov
pop
scas
out
jbe
push
mov
jb
jns
jo
xor
mov
jmp
fildll
mov
sub
jo
cli
imul
cli
rcrl
mov
mov
dec
ds
mov
sbb
xchg
aaa
fsts
xchg
xor
data16
dec
and
cwtl
jnp
push
inc
rolb
add
cltd
fmuls
xchg
mov
das
outsb
dec
mov
mov
outsl
xor
fwait
rorl
mov
push
mov
dec
ret
and
sbb
xchg
adc
lret
jno
jmp
add
sub
lret
shll
mov
lahf
push
mov
push
js
push
dec
add
cmpsb
mov
or
cli
sub
out
je
ss
xor
xorl
lret
pop
and
and
fistpll
or
inc
subl
faddp
push
pop
lods
rcll
loopne
xor
xor
in
stos
ret
lcall
pop
push
pop
mov
mov
cmp
in
hlt
ret
sbb
cmp
in
repnz
mov
xlat
lret
shl
mov
movsb
mov
fidivs
push
or
adc
dec
repz
jb
jl
iret
add
movsb
sub
cmp
pushf
inc
or
lock
cmp
outsb
push
dec
pop
push
out
sbb
cli
push
inc
lds
mov
enter
xchg
push
pop
es
jecxz
loop
mov
lahf
xor
xlat
in
push
movsl
data16
clc
clc
pushf
add
xchg
jo
adc
mov
add
dec
or
cmp
xchg
imul
stos
flds
cmp
mov
sbb
xchg
pop
daa
pop
aas
or
push
inc
cmp
cs
shr
mov
mov
ror
xlat
pop
aad
mov
xchg
ja
xchg
lods
loop
push
and
cmp
cmp
dec
rolb
addr16
jg
inc
sbb
pop
inc
frstor
pop
adc
aaa
push
sub
xabort
dec
outsl
bound
xor
pop
mov
pop
dec
dec
mov
inc
repnz
xor
and
jno
push
gs
pop
xor
ja
xor
jle
xor
jbe
out
jecxz
test
push
in
jns
dec
js
repz
insl
shrl
cmpsb
std
ficompl
adc
nop
pop
lret
pusha
xchg
xor
aas
pop
pop
aas
fstp
pop
ficompl
sbb
cmp
cmp
in
mov
mov
lods
outsb
div
cmp
mov
aas
les
fs
sbb
push
sub
negb
adc
pop
mov
sub
ss
xor
push
pushf
cli
inc
sub
adc
adc
movsb
fwait
and
inc
shl
push
stc
push
std
mov
je
mov
mov
sbb
mov
push
mov
jno
sub
sti
es
bound
loope
jecxz
test
cmp
cmp
leave
push
mov
ja
sahf
loope
or
das
int3
lock
sub
mov
out
lods
mov
in
rolb
fdivs
das
pop
call
or
fldcw
lret
xor
inc
xchg
insl
sub
imul
sti
outsl
fdiv
lret
cmpb
into
call
xchg
movsb
test
fdecstp
jl
mov
nop
out
mov
xchg
dec
or
mov
cmp
cmc
push
loope
idivb
and
cltd
bound
push
shll
mov
in
cmp
cmp
dec
sti
and
inc
adc
pop
push
orb
fs
dec
pop
pop
and
out
jnp
cmp
popf
push
ja
js
xchg
mov
mov
fistps
rcrb
push
pop
ss
in
mov
inc
fdivs
jg
push
cmp
out
psllw
sub
ret
sahf
mov
inc
add
fwait
std
test
mov
sbb
aad
mov
or
sbb
leave
push
sbb
dec
fisubl
inc
orl
mov
dec
push
inc
dec
xor
adc
aaa
mov
sub
jp
outsb
rclb
pop
inc
adc
rcrl
ss
xor
mov
hlt
cli
or
repz
scas
rcr
push
mov
jle
or
push
pusha
les
and
xchg
xor
int3
xchg
out
stos
popa
pushf
mov
mov
rcl
aam
and
ljmp
nop
fwait
add
add
mov
push
add
add
divl
cs
add
mov
jno
lock
or
inc
cmpl
mov
repnz
arpl
stos
mov
mov
pop
mov
cmp
loop
cmp
cwtl
jnp
mov
mov
and
pop
aas
sahf
les
bound
adc
ljmp
mov
add
call
stos
add
add
inc
lods
sub
xor
lock
fwait
cld
mov
mov
aaa
into
xor
das
cmpsb
outsl
sub
push
xchg
jbe
dec
cltd
mov
mov
shl
imul
adc
cld
rolb
nop
jl
loop
movsb
cmc
stos
bound
stc
imul
jb
mov
dec
push
call
ja
xchg
addr16
aad
out
stos
pop
insl
adc
sbb
loopne
or
jb
push
pop
in
outsb
arpl
pusha
or
pop
jbe
jge
jb
mov
sbb
jnp
pop
fisttps
jecxz
cmc
cli
stc
out
jbe
mov
sbb
inc
sahf
lds
xor
daa
dec
cld
xchg
mov
repnz
clc
or
cmp
adc
push
mov
daa
and
or
repnz
push
dec
popf
loop
mov
jl
mov
pushf
out
lahf
mov
les
xor
jmp
sbb
lock
or
enter
push
pop
mov
sti
jo
or
adc
inc
cs
out
cli
outsl
cmp
dec
in
sub
in
mov
sahf
fdiv
lret
mov
adc
lods
fcmovbe
outsl
sbb
sub
sbb
pop
incl
dec
int3
fcmovnbe
xor
mov
dec
cmp
ss
fwait
in
mov
sarl
adc
mov
jbe
mov
mov
je
movsl
ret
xor
dec
mov
push
xchg
mov
call
mov
jmp
jp
ss
mov
leave
xor
add
cmp
cmp
out
inc
sub
cmp
push
inc
sahf
and
ds
jno
xlat
mov
lock
xchg
xchg
jb
mov
and
and
mov
push
aad
mov
test
mov
xchg
cs
insl
enter
push
outsb
icebp
lret
leave
push
cmc
cs
dec
mov
jge
mov
fnstcw
dec
subl
mulb
mov
pop
adc
enter
shl
push
xchg
inc
add
or
cld
pushf
arpl
es
jne
push
mov
jb
mov
pop
fisubrl
push
mov
popf
cmc
jle
pop
lods
inc
or
sbb
pop
sub
fs
add
push
clc
xlat
outsl
mov
and
inc
inc
push
movsl
xchg
mov
inc
es
test
xchg
jo
mov
loope
mov
jb
xlat
adc
repnz
dec
mov
cmc
gs
dec
psllq
out
arpl
into
in
out
push
es
cmpsb
hlt
jle
xchg
cltd
or
or
and
cwtl
popa
jo
fists
and
cld
or
push
pop
push
xor
inc
ss
lods
dec
aam
daa
daa
inc
jne
popf
dec
leave
or
mov
cmp
or
hlt
jbe
aad
incl
mov
mov
cltd
pop
sub
mov
aas
mov
fmuls
mov
jb
and
mov
clc
jne
mov
sbb
das
scas
mov
cmc
addb
cmpsb
cli
rcrl
in
aad
jns
cltd
gs
test
mov
sbb
push
idivb
ss
dec
imul
push
jle
fstl
and
dec
test
gs
lods
jmp
xchg
stos
or
add
sub
dec
mov
test
mov
jg
fstpt
dec
push
dec
popf
mov
xor
fimull
cltd
lds
push
sbb
test
jns
and
clc
mov
pop
push
mov
mov
out
shll
mov
or
mov
pusha
mul
adc
or
or
xchg
and
adc
dec
test
pop
dec
push
add
lea
fcompl
pop
jmp
sbb
lods
imul
or
or
cmp
jecxz
jmp
push
jl
or
rorb
push
in
repz
mov
loopne
xorl
cmc
push
inc
mov
ret
dec
xor
es
pop
aas
inc
jne
daa
mull
test
adc
ror
lret
daa
adc
dec
dec
mov
aad
and
cmp
in
stc
fsubrl
aad
jb
push
sbb
sqrtps
mov
mov
dec
aam
sbb
dec
and
xor
loopne
inc
cs
icebp
mov
push
jbe
lock
or
pushf
lcall
push
jecxz
ret
pop
mov
mov
repnz
or
scas
insb
push
pop
rorl
dec
mov
call
dec
push
mov
ljmp
loopne
lea
pop
cmpsl
lds
test
cld
mov
add
jg
sub
inc
mov
add
lods
xor
arpl
inc
xchg
test
mov
insl
and
repz
fstpl
js
mov
sbb
xchg
lds
add
fs
jp
jmp
cmp
ret
cmp
test
sub
fadds
pop
add
cwtl
pop
adc
aaa
stos
and
mov
test
outsb
andb
aad
jg
mov
adc
test
jp
lret
push
mov
fwait
xchg
out
dec
mov
jmp
shll
cwtl
mov
mov
push
popa
jbe
inc
and
mov
testl
dec
fists
pop
dec
and
or
xor
das
lahf
pop
push
cwtl
popf
mov
mov
ret
inc
jge
pop
fs
fldl
stc
pop
lods
rcl
adc
stc
aaa
fimull
xorl
fstpl
cmp
fs
enter
fidivl
mov
roll
xchg
lock
sbb
mov
out
mov
xchg
fists
push
stos
sub
popa
jg
adc
lds
rol
lds
movsl
mov
jg
clc
and
lods
das
pop
sub
lods
andl
test
cmp
pop
mov
inc
adc
cwtl
mov
ret
pop
ljmp
xor
ret
xlat
out
pop
ss
int
sub
sub
mov
push
pop
imul
inc
add
cmp
test
lret
mov
not
sub
pop
jae
pushl
daa
pushf
inc
dec
pusha
jmp
cmp
push
fldl
fisttpll
stos
push
sti
inc
jl
xorl
adc
imul
fcoms
imul
sqrtps
shrl
stos
pop
ret
out
jg
xchg
cmp
xor
xchg
nop
cmc
int3
shlb
inc
into
pushf
cltd
push
push
xor
push
push
pop
fs
lock
jle
cmpsl
add
adc
fistpll
les
aaa
jge
rclb
jnp
or
lcall
cld
sbb
push
cld
repz
roll
loop
xchg
ret
jb
xchg
adc
pop
out
add
shlb
fisttps
dec
out
inc
out
jno
scas
stc
mov
nop
jl
pushf
mov
popa
mov
sahf
dec
add
mov
xor
loopne
dec
aaa
scas
jmp
imul
or
push
jg
jp
lods
fistpl
les
xchg
addb
or
out
or
shll
xlat
mov
pop
out
fists
and
push
jle
loopne
popa
fldl
insb
sub
mov
xor
mov
sub
stc
lock
mov
pop
sub
fisubs
notl
mov
sbb
jmp
sub
jno
arpl
jmp
movb
mov
loopne
pop
jl
in
push
cmp
jno
mov
sbb
lods
xchg
cli
xchg
mov
sti
int
mov
cmpsl
gs
in
out
hlt
dec
addl
cmc
pop
pop
cmpsb
dec
mov
add
repz
or
fwait
jbe
leave
fsubrl
and
into
pop
inc
sub
push
adc
adc
sbb
pop
aas
sti
repnz
das
ds
iret
call
push
pop
mov
lret
hlt
mov
int
cmp
jno
fisttpll
cwtl
lds
push
es
aam
popa
sub
int3
rcrb
imul
je
xor
mov
cmpsb
negb
pop
add
push
das
cli
dec
jmp
xchg
cmp
ja
sbb
dec
mov
in
inc
aas
mov
decl
jp
test
pop
xor
mov
mov
imul
in
fs
in
fiadds
fs
cmp
lods
add
fs
xchg
int3
jmp
lea
pushf
cltd
movsl
into
in
fwait
xchg
addr16
leave
adc
ret
js
outsl
in
jnp
outsb
cmpb
push
leave
mov
outsl
or
cli
lds
jnp
mov
scas
adc
jl
test
loop
stc
int
push
pushf
and
xor
sbb
inc
add
ffreep
sbb
cmpsl
xor
cltd
in
lods
or
mov
pop
icebp
xchg
mov
movsb
push
jmp
cli
insb
lret
mov
shrb
ss
aas
inc
test
dec
pop
add
push
mov
loop
jns
lods
ror
movsl
lods
adc
cmp
mov
mov
mov
xor
pusha
in
mov
jns
and
mov
scas
shl
mov
or
popf
andb
call
data16
icebp
inc
cltd
outsb
sti
pushf
adc
pushl
or
cmp
xor
xor
jp
push
shrl
jmp
and
lahf
xlat
xor
mov
fdiv
test
inc
push
lock
test
dec
cmp
add
imul
outsl
push
jecxz
and
push
xchg
es
jbe
xchg
adc
aas
aaa
pop
inc
mov
test
mov
add
mov
mov
in
pop
mov
xor
cs
es
pop
test
lcall
loop
jmp
inc
lret
sbb
sub
xchg
mov
jmp
stc
cmp
outsb
fs
mov
pop
mov
mov
aaa
test
jecxz
orb
cltd
call
xor
outsb
push
mov
mov
bound
test
loop
ja
and
pop
aaa
bound
cltd
iret
sub
aas
and
jbe
and
pop
add
jge
mov
xchg
push
cmc
nop
imul
fisubrl
jno
je
das
xor
les
cli
out
call
cs
cmp
ret
jge
mov
sub
addr16
pop
lea
loope
mov
popf
test
xor
imul
pushl
sti
mov
je
xchg
outsb
test
xor
out
mov
or
fistps
ljmp
or
push
xchg
scas
mov
xchg
push
inc
data16
cmc
or
mov
sbb
stc
fstpl
mov
mov
sbb
adc
sbb
fwait
in
inc
neg
cwtl
pop
xchg
xlat
adc
ss
int
cmpsb
ret
enter
mov
xchg
jo
dec
mov
add
fsubl
in
mov
imul
inc
mov
adc
imul
cwtl
xchg
fiadds
push
into
rclb
pushf
jno
xlat
lcall
incl
test
mul
xor
and
add
ljmp
push
mov
xchg
shr
xlat
pusha
or
dec
lock
pop
sub
or
aaa
pop
pop
xchg
mov
outsb
sti
mov
push
ss
jb,pn
mov
pop
call
inc
xchg
pop
iret
cmp
sbb
add
push
fisubrs
xchg
enter
ja
pop
inc
outsl
mov
imul
outsb
sub
jne
lods
aam
sbb
adcb
mov
or
dec
faddp
mov
sbb
xchg
or
jecxz
mov
imul
imul
cmp
pop
push
test
mov
stos
call
mov
insl
cmpb
imul
push
mov
femms
aam
iret
sub
cmpsb
sbb
jecxz
push
xchg
sub
sbb
stos
or
jge
cltd
fildll
popf
add
mov
jbe
jl
loop
pop
push
js
and
jecxz
ja
sti
xor
popf
dec
adc
popa
lea
mov
push
rcrl
jnp
loopne
inc
sub
xchg
dec
jb
insl
pop
in
ret
jb
mov
out
fcmovnbe
jne
mov
adc
ljmp
jmp
push
jb
push
xor
dec
repnz
jns
and
call
dec
nop
push
jb
fmull
stos
or
sbbl
ss
push
cmc
int3
rol
repz
sub
jp
dec
cli
adc
xchg
xchg
mov
mov
or
push
divl
int3
sbb
inc
push
mov
cld
xchg
sub
outsl
sbbl
pop
or
pause
lods
sbb
mov
aad
js
test
mov
push
lods
shlb
inc
movsl
pop
xor
rorb
clc
test
sahf
bound
loopne
xchg
jb
adc
cmp
push
xor
mov
outsb
nop
loope
sarl
mov
cmpsb
cmpsb
mov
cmp
xor
test
fsubp
iret
pop
mov
xchg
cmp
orb
xorl
mov
jnp
xchg
or
push
mov
pop
loope
in
adc
sub
dec
mov
mov
lahf
jp
or
inc
pop
mov
lds
push
push
fst
or
push
loope,pt
rclb
sub
cmp
stc
jl
std
sahf
repz
cmp
call
and
nop
add
mov
ret
xor
aaa
orl
and
in
sub
mov
and
dec
out
jg
fdivrs
cmp
pop
pop
mov
leave
xor
les
adc
dec
fidivrs
mov
mov
pusha
cmp
das
adc
into
std
or
dec
mov
push
pusha
or
iret
xor
xor
loop
inc
mov
jmp
leave
jg
dec
orl
mov
lret
sub
loop
test
mov
dec
lahf
xchg
stc
dec
or
ret
loopne
sub
cs
in
stos
inc
adc
movsl
fadds
js
xchg
jge
xor
fisttps
xor
adc
addr16
stc
cwtl
int
bound
test
jge
sub
mov
sbb
mov
aas
jns
popa
icebp
xor
fptan
stos
or
sti
mov
sbb
sbb
push
pop
xchg
cltd
mov
jge
dec
xchg
adc
bound
push
into
scas
loope
mov
dec
xor
adc
adc
jl
push
fucomip
add
enter
pop
push
std
es
sub
jp
or
pop
pop
xor
and
cld
lahf
push
cmp
fcmovb
or
add
rorl
adc
mov
or
mov
enter
fwait
lret
lret
loop
sub
mov
mov
or
nop
jg
mov
xchg
lock
adc
xor
inc
sub
cmp
imul
xchg
shlb
sub
cs
push
ret
mov
loopne
jne
fdivrs
call
mov
and
out
or
jbe
mov
xor
popf
test
aas
inc
ds
add
ss
or
mov
xchg
bound
mov
add
mov
loop
icebp
popa
cmpsb
subb
test
cmp
sbb
loope
push
xchg
pop
mov
enter
ftst
cmpsl
adc
leave
xchg
or
pop
cmp
add
daa
rorl
xchg
lcall
cli
push
or
icebp
aaa
mov
daa
leave
xchg
cmp
xor
jno
popf
adc
xor
sub
std
clc
or
mov
lcall
sbb
sub
adc
dec
inc
or
adc
mov
rclb
cmp
fiadds
daa
xor
hlt
fbld
aad
mov
rorl
enter
push
or
mov
add
sahf
aad
dec
xchg
insb
fwait
popf
and
filds
mov
gs
xorb
dec
mov
testl
xor
xor
hlt
and
aam
jbe
cmpsl
add
lcall
shlb
adc
outsb
pop
bound
mov
popf
sbbl
outsl
mov
rcrl
hlt
out
push
std
inc
aas
repz
int3
ret
adc
fsubr
and
les
int
pop
popa
inc
push
arpl
icebp
js
inc
or
sub
add
jmp
mov
aaa
inc
sarl
dec
pop
sbb
int3
dec
fwait
add
mov
repnz
scas
lods
pop
jbe
cmp
in
adcl
or
sbb
add
mov
adcl
sbb
xchg
or
mov
bound
sarl
fisttpl
loope
mov
adc
push
cmpsb
or
sbb
ret
xor
lret
cmp
cwtl
lods
xorl
dec
clc
sub
cltd
sbb
adc
out
icebp
inc
popf
fwait
add
xorl
adc
das
lret
lret
cmc
xchg
sub
shl
sub
inc
mov
rolb
dec
andb
mov
js
pop
fisubrl
cmp
mov
sbb
stos
into
stos
cmp
mov
jmp
pop
out
xor
xchg
sub
outsb
cmpsl
je
mov
ljmp
xor
push
sub
mov
out
pusha
mov
cmpsl
sahf
mov
pop
jl
sahf
subb
andl
loopne
fmull
push
decl
mov
push
test
ja
dec
repz
mov
repz
leave
add
pop
sub
fstps
pop
sub
insl
out
mov
popf
cli
mov
iret
inc
sub
mov
adc
lret
fisubrs
idiv
mov
adc
jae
cltd
fs
lea
mov
bound
ret
xor
cltd
jae
push
enter
dec
std
push
jle
add
or
add
incl
mov
enter
ret
popa
fucomi
push
xchg
inc
mov
flds
mov
negb
and
scas
out
dec
insl
mov
jmp
mov
ror
pop
sbb
cmp
cld
xor
dec
out
outsl
mov
jl
mov
jnp
mov
push
fs
sti
in
out
xchg
pminub
scas
or
movsb
xlat
ja
loopne
mov
inc
cli
out
push
cmpsl
fidivrl
xlat
jns
mov
xchg
mov
mov
or
mov
outsb
push
add
je
fiaddl
adc
xor
jbe
xor
nop
adc
pop
addr16
inc
inc
or
arpl
sub
xor
repnz
repnz
xchg
pop
js
shrl
lcall
cli
xchg
andl
stos
lods
lret
inc
push
push
jle
pop
enter
dec
push
test
gs
lea
mov
dec
stos
pop
cmp
aaa
sbb
dec
cmp
mov
imul
pusha
jo
bound
fsub
outsl
push
adc
mov
mov
insb
aaa
xor
in
add
arpl
ja
scas
pop
test
out
push
jbe
push
push
int3
cmp
js
arpl
sbb
push
fdivrs
jle
andl
lret
mov
pop
or
movsl
fwait
sbb
dec
mov
imul
adc
sarb
pop
cmovae
std
adc
inc
xchg
add
jg
push
mov
addb
dec
sbb
scas
mov
andl
mov
pop
adc
push
or
xor
mov
cmpsb
sbb
inc
push
fdivl
add
or
repnz
repz
ret
repnz
adc
xchg
imul
inc
out
xchg
pusha
inc
sub
xor
mov
stos
seto
or
mul
cmp
xchg
outsl
out
add
stc
cmp
xchg
push
cmpsl
push
arpl
sbb
fwait
lea
rcrb
ficoml
pop
call
loopne
xchg
or
mov
mov
add
inc
jle
cs
icebp
sar
movsl
xchg
fcoms
aas
jae
cmc
sbb
cmp
mov
sub
in
out
arpl
xor
xchg
in
mov
gs
enter
or
stos
int
in
ror
stc
je
repz
lds
mov
xchg
mov
dec
outsl
xchg
std
cld
aad
sbb
inc
xchg
mov
or
pop
jl
dec
stc
enter
cwtl
mov
out
pop
hlt
jge
dec
cmp
add
rorb
and
or
std
xchg
cmc
mov
ret
out
xchg
popa
outsb
sub
sbb
test
mov
pushf
and
rcl
sarl
in
fisttpll
mov
aam
loope
leave
push
dec
shll
or
divl
in
cmpb
clc
jne
loopne
xor
inc
add
pop
cmp
inc
sbb
insl
push
or
faddl
call
ss
mov
test
mov
ret
je
das
sub
jge
dec
into
dec
lret
and
mov
popa
stos
lds
mov
pop
fdivrs
adc
and
insb
shll
popa
ret
loop
mov
push
adc
mov
test
call
arpl
test
pop
xchg
push
test
mov
stos
out
aaa
xchg
fisubl
lea
adc
and
push
pushf
cmp
inc
pushf
sub
cmpb
cmpsb
xchg
jo
gs
dec
jno
ficompl
cmpsl
lea
filds
pop
outsl
push
movsb
or
mov
int3
jae
fldt
xor
cmpsl
dec
xchg
ss
enter
lods
push
jge
adc
push
and
rcrl
mov
movsb
or
test
sub
xchg
pop
adc
and
insb
adc
xor
mov
jg
jbe
xor
mov
pop
mov
rclb
push
add
adc
imull
adc
cmp
push
neg
xor
lret
and
loope
xor
dec
fxch
add
out
xchg
mov
adc
jb
or
stos
and
fadds
mov
mov
popa
enter
cwtl
in
lds
adc
mov
adc
out
and
pop
cli
fwait
adc
es
pusha
sub
xor
cmp
pop
stos
jecxz
in
mov
pushf
popf
les
js
push
sbb
push
mov
int
jmp
push
mov
jle
ja
loop
dec
sahf
in
mov
cmpsl
dec
xchg
rcrl
mov
sbb
or
cli
cmp
dec
cwtl
mov
enter
std
mov
outsl
in
mov
push
scas
lods
fisubrs
sbb
xchg
lea
outsl
ret
lea
mov
jb
aam
mov
jmp
icebp
push
and
fs
inc
loopne
pushf
pushf
xlat
mov
xchg
mov
roll
les
sarl
sahf
lods
je
shl
das
das
xchg
scas
or
mov
xor
pop
and
fstps
jmp
sbb
testb
shll
push
sbb
int
dec
dec
sub
faddl
sti
and
rcll
testl
test
pop
leave
repz
es
inc
cltd
xchg
aad
lock
mov
mov
xchg
aam
xor
fwait
xchg
xchg
adc
rorl
mov
roll
lret
popa
add
nop
mov
dec
cld
addb
out
push
es
leave
sub
mov
sbb
cmp
test
add
xchg
shr
mov
push
mov
pushf
pop
cli
push
jecxz
ss
mov
sti
loop
mov
rcrl
inc
push
and
jb
inc
int
or
jg
jno
mov
or
xlat
je
inc
xor
push
rcrb
cli
pushf
adc
xchg
pop
aaa
sbb
mov
jecxz
adc
cmpsb
insb
or
cwtl
arpl
jnp
and
rorb
mov
cmp
imul
push
lcall
sub
bound
stc
fsubl
jnp
mov
shl
stos
and
in
mov
hlt
cmpsb
fdivrs
push
pop
pop
xchg
adc
cmp
pop
push
lds
inc
daa
lcall
mov
int3
jnp
aas
int
cmp
or
mov
cld
mov
jmp
dec
sahf
xchg
dec
sub
outsb
cld
and
push
mov
in
push
and
push
xor
and
dec
jl
adc
pushf
in
int3
push
jmp
xchg
sarb
jnp
ret
push
jmp
arpl
adc
incb
sahf
jecxz
pop
dec
cmp
mov
jae
scas
fs
push
cmp
xchg
sub
sahf
pop
push
call
add
push
movl
xor
loope
popf
xchg
std
pop
out
cbtw
lods
inc
and
fwait
mov
sar
inc
xchg
push
jne
out
fistps
test
addr16
rcl
mov
cmp
pop
je
mov
jns
add
lret
loope
mov
addb
mov
insb
sub
sub
push
shll
xchg
mov
mov
nop
mov
cmp
xor
cs
add
inc
push
shl
pop
pop
jbe
jmp
cli
ficoms
mov
scas
or
cmpsl
xchg
inc
aad
adc
adc
or
xchg
mov
push
sbb
push
insb
add
insl
xchg
fs
rcl
mov
cmp
mov
out
shll
in
popf
jns
loopne
out
hlt
push
and
sahf
jmp
sbb
push
cli
fsubrs
insb
inc
mov
sub
jecxz
insl
mov
mov
jo
ret
in
repnz
or
and
clc
sbb
push
adc
jbe
ljmp
stos
jno
push
adc
rolb
sub
test
popa
nop
add
dec
pushf
xchg
pop
jg
xchg
cmp
push
push
fs
and
add
cmp
lahf
je
int
xchg
movsb
in
jo
mov
jno
popf
int
jne
cmp
dec
outsb
fisubrl
sahf
mov
push
jbe
cld
or
xchg
lods
xchg
fsubs
sub
sub
xchg
mov
pop
mov
lods
sub
movsb
mov
dec
xchg
std
xchg
pop
or
jmp
jo
enter
jo
jnp
dec
les
jle
mov
and
xchg
mov
insb
sbb
mov
orb
in
loopne
inc
div
arpl
mov
loope
lock
sub
cmp
adc
xchg
icebp
popa
mov
pop
iret
mov
je
sysret
insb
stos
testb
sbb
cmpsl
xlat
shlb
mov
add
mov
mov
sbb
jns
notl
fadds
lahf
push
add
jge
stc
push
sbb
ret
shll
fimuls
in
ds
xchg
lcall
sub
stos
xchg
sbb
dec
xchg
dec
lods
pop
xchg
inc
insl
xorb
loop
mov
add
xchg
fisttpl
xchg
add
inc
xchg
daa
sbb
ret
ret
shr
mov
cmp
inc
lahf
decb
cmp
jp
lods
xchg
roll
les
stos
jbe
pop
lcall
clc
cmp
fnstenv
fcomps
pop
push
lock
dec
aad
mov
insb
mov
inc
adc
cmp
cmc
shrl
cmp
adc
popa
js
dec
mov
dec
orl
mov
out
mov
cmp
jbe
inc
push
sub
out
jno
outsb
repz
sub
sub
push
mov
adc
sahf
xchg
jecxz
add
mov
aad
xchg
inc
jns
dec
adcb
jne
gs
fisubrs
xchg
dec
aam
cmp
jno
cmp
sub
jmp
inc
or
xchg
pop
js
stos
dec
ja
sub
xor
and
mov
xchg
pop
mov
xchg
fadds
icebp
xor
test
jae
imul
mov
loopne
mov
mov
aaa
xchg
mov
int
aas
push
rorl
stc
popa
nop
lcall
lods
dec
add
loopne
inc
xchg
dec
and
out
pop
movsl
aad
pop
cmc
jo
jmp
add
cli
fwait
popa
cs
pop
incb
and
inc
clc
into
cmp
xchg
sub
dec
hlt
fstl
sbb
stos
mov
mov
outsl
mov
jecxz
aaa
jmp
sarb
int
xor
pop
pushf
fdivs
sub
inc
cmp
cmp
rcr
mov
repnz
adc
sbb
inc
pop
mov
adc
cmp
or
push
popl
or
mov
or
frstor
test
inc
sub
jno
inc
dec
xchg
std
jno
or
or
dec
jae
mov
sbb
in
ret
out
xor
lahf
xchg
push
test
cmp
into
adc
or
icebp
pop
out
das
es
icebp
dec
cmp
xchg
aas
cmp
mov
or
outsb
outsl
insl
adc
xchg
inc
and
xchg
xcrypt-ofb
cmpsl
in
inc
pop
std
cltd
mov
xchg
xchg
cmp
insl
pop
push
adc
sahf
mov
and
test
test
loop
vpunpcklbw
das
addr16
mov
adcl
mov
mov
pop
clc
sbbl
xchg
push
push
sti
push
sbb
repnz
lods
cmp
out
mov
cld
cmpsb
icebp
cmc
jecxz
jns
cmp
xchg
or
lods
dec
aas
xor
or
xorb
in
sbb
xor
adc
inc
imul
push
lahf
pop
int3
mov
push
xchg
bound
or
outsl
cmp
sub
sub
enter
bound
cmp
dec
adc
hlt
inc
rorb
test
out
push
jns
jp
sahf
imul
adc
daa
outsl
fucomp
cltd
out
cltd
sub
mov
xchg
in
push
lcall
inc
je
into
adc
in
shrl
mov
fnstenv
shlb
fs
xlat
leave
jae
dec
fdivrl
inc
std
negl
cmpsl
xor
mov
lds
mov
and
mov
adc
mov
out
add
cltd
btc
js
data16
pop
add
nop
sbb
stos
ror
testl
in
jle
stc
je
outsl
push
adc
loop
push
jns
js
and
jns
adc
xchg
adc
decl
sbb
pop
mov
test
ds
das
popf
inc
lcall
xchg
and
inc
fstl
push
push
nop
cli
mov
jmp
mov
inc
ror
cmp
inc
mov
inc
sub
hlt
jns
mov
dec
inc
adc
mov
int
mov
pop
aaa
push
sub
popl
testb
adc
call
jo
cmpsb
sahf
fs
mov
imull
push
jns
adc
addr16
cwtl
cmp
movsl
jo
mov
sbb
fmull
fnstsw
mov
mov
lock
test
inc
jnp
sbb
adc
jecxz
mov
hlt
xchg
stos
mov
or
decl
xor
xorb
icebp
adc
sarl
iret
nop
sub
mov
cs
cmp
lcall
xchg
or
adc
cwtl
cwtl
stos
cmp
push
push
push
mov
mov
jno
xor
mov
cwtl
pop
movsb
pop
movsl
movsb
rcrl
pop
stc
insb
aas
insl
mov
mov
push
cld
jle
cmp
push
stos
jns
cmp
mul
cmpsl
pop
jmp
mov
cmp
das
aaa
cmp
lret
cmpsb
dec
cmp
loop
adc
sub
test
inc
popf
mov
sbb
loopne
mov
add
jno
cmp
in
add
push
xor
ds
push
ss
or
cmp
in
shrb
cmp
cli
scas
sbb
sub
ret
push
xchg
cmpsl
pop
test
aaa
loope
mov
sub
xchg
and
xchg
sub
xor
mov
or
cmpsb
test
xchg
and
popf
andb
add
loopne
int
iret
cmp
mov
insb
je
nop
pop
jb
pop
fldcw
mov
sbbl
loope
outsl
xor
mov
fisttps
test
aam
ret
shrb
popa
sub
test
ret
sahf
jmp
mov
outsl
mov
pop
add
movsb
je
push
dec
lds
mov
adc
fcompl
inc
xchg
imul
popa
aad
outsb
and
outsb
xchg
std
jae
adc
gs
jecxz
test
xchg
stos
sbb
psadbw
pop
lods
jns
xorb
push
adc
dec
loope
es
leave
aaa
add
and
lods
ffree
push
cwtl
mov
lea
dec
ljmp
or
push
pop
cs
mov
lock
push
sahf
mov
aaa
cmp
leave
outsl
fsts
pop
inc
scas
mov
and
sbb
pop
xchg
cmp
pop
rol
add
fdivrl
fnop
adc
movsb
pop
push
pop
push
jle
pop
es
adc
sub
movsl
xor
pop
cmpsb
jo
enter
add
pop
aas
mov
daa
and
lahf
in
xchg
out
push
dec
cmpsb
repnz
pusha
push
cmp
jecxz
cmpsb
dec
cwtl
aad
sub
fdivrp
dec
cltd
stc
add
scas
and
popf
add
pop
dec
popf
mov
mov
xchg
sarb
fisubrl
mov
test
or
jecxz
std
shll
pop
rolb
je
leave
and
fdiv
or
mov
js
mov
and
movsl
push
inc
mov
cltd
xchg
xchg
xchg
cli
pop
jno
xchg
sub
and
mov
add
out
cmp
add
dec
scas
inc
cltd
jne
jmp
mov
lods
mov
out
cmpsb
iret
rcrb
dec
shr
add
mov
or
add
pop
lds
loopne
lahf
adc
sbb
jae
jbe
icebp
ret
jae
jp
sarl
xlat
stos
push
inc
jae
push
xor
mov
and
jle
mov
xor
mov
into
inc
pop
stc
dec
pop
inc
lods
movsb
sti
mov
lods
pop
clts
and
sub
pop
jge
fimull
cltd
ljmp
ror
mov
std
add
cmp
jp
mov
idiv
mov
jo
les
mov
mov
mov
and
cmp
xchg
mov
mov
cmc
out
test
cmp
add
shll
mov
pop
incl
test
outsl
dec
dec
insl
jecxz
adc
mov
and
xor
ss
add
fdivl
mov
loop
outsl
les
in
int
cltd
mov
fldt
mov
pop
call
movsb
cltd
xchg
data16
sub
aas
stc
adc
mov
addl
sti
xchg
add
sbb
adc
inc
shr
and
out
das
in
shlb
into
pop
pusha
cltd
sbbl
sbb
inc
insl
jp
aam
cmpl
fs
sub
add
loope
jg
xor
push
rorb
in
dec
lods
pop
stc
pusha
cli
cmp
insl
sub
mov
xchg
das
mov
fidivrs
jl
inc
push
jmp
mov
cld
xor
jno
push
js
mov
cmp
sbb
pusha
rorl
cmpsb
jae
mov
xor
hlt
hlt
aas
ja
lret
push
sub
in
addr16
dec
jae
jnp
sahf
sub
xor
in
icebp
nop
push
fwait
push
pusha
out
sub
loope
mov
cmp
fdiv
leave
xor
test
and
outsl
mov
out
aas
in
jge
xor
push
popa
inc
daa
std
mov
lods
dec
mov
jmp
cli
stc
dec
lods
movsb
xor
mov
pop
inc
cmp
jge
push
out
fistps
shrb
cltd
aaa
mov
or
sub
fwait
jl
cmc
mov
pop
lods
xor
push
movsl
mov
sbb
jge
dec
movsb
sarl
cmp
dec
push
clc
andb
stos
sbb
mov
fsubl
push
ljmp
jo
or
and
fs
out
fdivrl
cwtl
fistps
std
and
iret
and
imul
iret
inc
mov
outsl
stos
in
adc
xchg
mov
mov
xor
cmp
arpl
add
mov
int
pop
or
mov
popf
icebp
andl
add
adc
mov
leave
and
roll
rorb
pusha
clc
orb
sahf
popf
out
int3
push
enter
mov
aad
jmp
push
or
mov
jns
lcall
jae
in
aas
aad
movsl
adc
or
fcomi
jmp
mov
or
cmp
shll
adc
arpl
out
pop
xor
test
mov
hlt
lcall
enter
jp
pop
add
cmp
mov
out
subl
into
inc
jg
jne
pop
std
inc
pop
dec
sub
int3
adc
fucom
mov
inc
mov
pop
xchg
cmpsb
aam
xchg
inc
iret
insl
loopne
cmpsb
xchg
dec
sub
js
inc
sbb
mov
xor
sub
inc
adc
das
xchg
xchg
push
enter
rcll
add
cmc
nop
roll
ljmp
loope
xorl
ret
repz
mov
mov
imul
jle
cld
lods
inc
fwait
cmp
add
sub
fisttpl
pop
sub
popf
push
sub
out
add
cmp
jnp
mov
mov
ja
in
outsb
aad
into
and
imul
arpl
loop
jge
sub
mov
iret
imul
mov
je
push
js
lcall
lock
xor
std
mov
cmp
adc
in
dec
xchg
les
mov
pushf
xchg
inc
jbe
repz
jae
push
out
mov
ret
cli
icebp
hlt
dec
cmpsb
and
pusha
sbb
arpl
and
out
jl
mov
push
mov
in
push
addr16
and
cli
adc
clc
clc
jle
jno
repnz
movsl
push
push
mov
cmp
xchg
pop
xor
cmpl
ret
cmp
dec
iret
fildl
mov
xor
stos
adc
jae
push
cmp
lods
aas
out
cmp
pop
mov
mov
cmc
add
adc
in
push
adc
lret
push
xor
sub
inc
mov
mov
xchg
xchg
dec
pop
adc
push
push
sti
mov
cs
add
pop
mov
inc
sti
sbb
jp
lret
pop
popf
push
sub
dec
add
je
loopne
xlat
in
jno
daa
outsl
fwait
adc
hlt
jp
jl
add
cmp
sub
ret
jge
xor
dec
mull
xchg
and
mov
jg
iret
les
std
daa
arpl
xchg
out
andb
insb
dec
xchg
xchg
mov
lds
cmp
retw
pop
in
lcall
aaa
add
push
xchg
sbb
repnz
inc
bound
add
inc
das
jb
ds
sub
cltd
enter
sub
inc
xor
repz
mov
mov
adc
inc
inc
std
sub
fildl
out
cmp
or
and
mov
in
cs
inc
inc
mov
loop
imul
lods
loop
cmpsl
dec
mov
arpl
xchg
das
mov
mov
sahf
push
sbb
into
cmp
adc
jns
or
aam
cld
dec
cmpsb
clc
mov
das
add
fwait
sub
loopne
test
sbb
xchg
push
dec
stc
xchg
or
push
dec
test
ljmp
mov
push
or
jne
test
cmp
scas
aad
in
testb
sbb
and
lahf
xchg
inc
data16
and
mov
insl
hlt
lea
and
es
cmc
jg
fwait
or
xchg
cmp
mov
leave
movsb
dec
test
mov
inc
or
xchg
jne
popf
sub
push
clc
adc
jg
push
pusha
rol
mov
mov
nop
rcrl
testb
pop
add
push
mov
cmp
or
dec
inc
out
sarl
or
outsl
pop
lock
iret
mov
sub
dec
pop
ds
mov
mov
insl
and
test
push
mov
inc
pop
push
mov
and
adc
test
arpl
lcall
sbb
out
mov
xor
jae
xor
and
fs
or
fs
dec
pop
xchg
xchg
adc
gs
ret
mov
mov
insl
das
mov
ret
sbb
pop
jle
xchg
sbb
insl
lcall
push
lcall
mov
cmpsb
repz
or
andl
adcl
mov
popa
out
imull
mov
xor
push
or
enter
lcall
xchg
add
cmpsl
int
sbb
and
xchg
push
shrb
outsb
data16
iret
dec
cld
xchg
sub
adc
inc
int
inc
adc
mov
lock
inc
xor
sub
pusha
xchg
add
and
scas
aas
xchg
lods
aad
jecxz
imul
pop
fldln2
dec
loope
es
pop
adc
ss
imul
jl
mov
pop
lret
jb
pop
repnz
rcr
jp
xchg
shl
mov
mov
mov
out
mov
xor
xchg
push
cmp
mov
aad
sbb
addr16
jne
push
mov
mov
jg
mov
shll
adc
rcl
test
inc
adc
pop
insl
jns
cmp
and
loop
in
sub
in
test
xchg
xor
movsb
daa
insl
inc
pop
push
js
jp
sub
push
xchg
into
test
push
inc
mov
outsl
pop
push
jle
pop
or
ds
sub
sbb
pusha
mov
addr16
cmpsb
lods
add
inc
loop
push
bound
fldl
movsb
xor
jmp
push
and
jp
call
jecxz
enter
mov
in
bound
mov
and
ret
jg
andb
imul
adc
arpl
dec
mov
pop
mov
cwtl
add
xor
dec
fldl
dec
sub
sub
mov
xchg
cmpb
inc
insl
push
lcall
mov
add
xorl
pop
pop
xchg
incb
sub
js
mov
outsl
lods
jbe
pop
lds
cwtl
lods
cmpsb
push
pop
xchg
sub
popa
adc
cmpsb
dec
push
mov
jb
stos
pushf
sarb
iret
mov
xchg
push
lods
mov
dec
test
xchg
cltd
in
sbb
push
shrl
sub
fdiv
addr16
dec
es
sbb
ret
mov
fsubl
jmp
in
mov
adc
out
cwtl
mov
pop
sub
andb
andl
sar
inc
inc
push
and
je
sbb
pop
push
sbb
cwtl
enter
lods
dec
dec
out
lcall
cmc
inc
cltd
inc
jbe
lcall
cld
js
adc
add
mov
push
cld
mov
adc
addr16
push
adc
lret
imul
outsb
push
and
test
push
xchg
sub
push
dec
mov
ss
xor
aad
nop
pop
jge
and
dec
dec
arpl
or
xchg
lock
xor
outsl
cltd
add
shlb
xchg
rcl
out
push
lea
jmp
xchg
fmul
outsl
inc
movsl
icebp
cmp
iret
into
push
mov
pop
cmp
mov
push
mov
lods
testl
lcall
mov
cmp
mov
pop
pop
dec
cli
leave
adc
xor
orl
fsubl
iret
sbb
jp
lahf
or
dec
push
loope
mov
push
in
orb
mov
inc
hlt
cmp
pop
fwait
cmp
sbb
dec
addr16
push
ss
push
hlt
push
push
aaa
inc
pop
jge
fwait
imul
xchg
xor
in
pop
in
rorl
shr
mov
lock
out
cltd
adc
dec
pop
push
dec
pop
flds
mov
xor
shll
inc
sbb
sub
aad
jge
into
mov
add
movsb
test
inc
lds
xchg
jno
sub
dec
and
add
pop
pop
inc
pop
xchg
sbb
iret
divl
test
jne
inc
lods
xchg
mov
sub
decb
std
push
mov
sbb
jp
or
push
lahf
lea
add
mov
rcl
outsl
mov
outsl
paddusb
mov
or
pop
std
lret
aad
addb
scas
xchg
and
negl
xor
xor
jne
ja
or
xchg
mov
xchg
lea
lahf
sub
je
subl
addl
push
inc
xchg
mov
push
addl
adc
cmp
repz
jae
addl
pop
pop
gs
adc
dec
mov
cmpsb
sbb
and
mov
mov
lods
sti
jge
ljmp
cmp
lret
iret
aas
cmp
dec
xor
call
ret
cli
inc
mov
jl
leave
aad
add
mov
sbbb
cmp
dec
jp
sbb
xor
mov
add
push
adc
test
test
out
popl
js
fs
adc
sbb
ret
dec
jmp
dec
dec
xor
mov
pop
insb
jo
mov
push
pop
jg
fisttpl
mov
pop
mov
pop
jne
pop
out
xchg
xchg
fistpl
popf
pop
xchg
pop
std
and
cltd
fwait
jo
jp
cmp
movsb
jmp
mov
jo
mov
pop
das
cmpl
add
out
lret
orl
mov
and
stc
push
jne
lret
jmp
cli
mov
pop
xor
mov
mov
stos
xorb
inc
mov
stos
mov
pop
push
jle
xor
outsl
or
test
jl
cmpsl
inc
xor
mov
movsb
cld
fucom
cwtl
je
sarl
das
fdivl
inc
rol
movsl
outsl
jbe
int
mov
dec
mov
ja
aas
out
and
jle
test
loope
pop
sbb
ljmp
push
movsl
cs
test
testl
inc
les
js
cmp
push
mov
inc
loopne
add
lea
adc
movl
pop
pop
aam
push
adc
jns
pushf
test
imulb
sahf
mov
fistps
fs
insl
push
xchg
push
ret
sbb
shll
stos
inc
std
repnz
mov
xchg
and
insl
push
jnp
xchg
mov
jecxz
xor
mov
daa
popf
mov
mov
scas
sub
inc
mov
add
lret
loope
mov
clc
xor
push
cli
hlt
sub
rolb
scas
cwtl
arpl
jp
bound
push
gs
pop
xor
stos
in
jl
add
scas
cmp
fwait
in
iret
lea
add
out
sahf
mov
out
mov
ljmp
repnz
push
call
decl
push
push
mov
dec
pop
jo
lret
cmp
or
cmpsl
aas
pop
xor
outsb
test
xchg
mov
popf
stos
ds
dec
lods
jl
rorb
les
sub
sbb
rorl
fnclex
lcall
cmc
jge
push
inc
mov
xchg
xor
push
iret
fisubs
movsb
xor
std
not
push
xchg
outsl
inc
sbbl
sub
sub
push
hlt
xor
aaa
loopne
jge
in
rcll
push
sbb
cmp
addb
lods
cmp
xor
scas
push
out
into
icebp
es
scas
icebp
fisubl
lods
xchg
and
jge
dec
in
mov
cmp
push
jmp
aas
ja
inc
subl
in
andb
add
jo
and
imul
and
stos
adc
xchg
daa
lret
push
rorl
xor
mov
mov
mov
bound
fldl2t
or
inc
std
flds
addr16
xchg
cmc
pop
cmp
cltd
cmpl
lock
out
mov
cmpsl
pop
jns
pop
lcall
push
jp
aas
push
repnz
inc
cmp
mov
scas
cld
adc
pop
mov
or
xchg
in
mov
xchg
dec
je
es
xor
fidivl
mov
out
add
cld
mov
fwait
mov
mov
test
xlat
cmc
in
adc
xchg
nop
fmul
push
aam
push
push
in
xlat
mov
popa
jns
into
xchg
pop
negb
xorl
mov
adc
mov
stc
mov
adc
pop
xor
cmc
loop
sub
mov
movl
push
andl
std
orl
sbb
cmp
jle
xchg
sub
mov
cmp
mov
xchg
movsl
push
in
dec
testl
into
stos
inc
movsl
test
loop
out
mov
cld
hlt
xchg
shr
push
lea
xor
fwait
sbb
fcomps
mov
dec
sub
mov
mov
aad
test
aam
lret
loope
jnp
iret
popf
sarb
dec
into
dec
ret
mov
push
out
scas
adc
cmp
pop
ss
dec
pop
test
fbstp
xlat
cmpb
sub
dec
ja
dec
add
ds
xor
cmc
mov
je
sbb
pop
fnstenv
cmp
cltd
or
mov
test
call
repnz
imul
aam
andl
push
cmp
pop
pop
adc
sub
in
add
in
inc
pushf
adc
lock
xor
ja
fildl
stos
dec
insb
sbb
push
and
lret
mov
xchg
cmpsb
lahf
stos
jecxz
shrl
inc
mov
add
jns
pop
lret
sbb
repz
cwtl
sbb
mov
clc
inc
sub
shrl
lret
ret
lret
aas
scas
sub
iret
jecxz
mov
sub
stc
jns
mov
ljmp
mov
and
es
negl
xlat
leave
aam
dec
pop
fdivrs
std
cmp
mov
les
sub
out
add
adc
sub
loopne
xorl
xchg
jp
sti
and
mov
push
xor
mov
mov
sub
mov
pusha
loope
or
mov
cmp
lea
and
ljmp
mov
xorl
mov
push
mov
sub
out
adc
lcall
out
hlt
fdivrp
sti
push
lret
popa
les
mov
cmp
adcb
jae
mov
inc
sbb
jnp
and
add
enter
jg
je
jmp
fsub
icebp
inc
sbb
fdiv
inc
xchg
or
push
ds
enter
std
inc
inc
jae
cli
es
orl
shrb
mov
cmp
ljmp
daa
pop
clc
mov
push
inc
sbb
add
fcmovnbe
daa
je
or
and
cs
adc
pop
jne
or
lods
out
dec
rorb
pusha
shlb
iret
add
mov
sbb
cmpsb
lock
xchg
push
sbb
inc
xorb
push
mov
push
lret
mov
add
fcompl
out
inc
les
push
les
jmp
xor
inc
or
movsl
cmpsb
cld
sbb
out
push
fs
test
dec
xchg
cwtl
push
add
ljmp
xor
sub
sub
hlt
adc
jl
int3
dec
jae
nop
jns
popl
sbb
mov
adc
in
repz
mov
das
bound
mov
enter
sahf
ss
add
stc
inc
mov
xchg
daa
imul
or
dec
fcomps
mov
add
js
and
clc
aas
aas
push
js
repz
jle
mov
aas
test
xchg
lock
dec
sahf
lret
mov
mov
shlb
dec
add
cmp
pop
out
les
shlb
pop
fs
pop
mov
push
iret
dec
jo
push
dec
xchg
inc
dec
add
lcall
mov
aaa
and
push
fadds
sub
sub
sti
test
je
lods
repz
and
jecxz
cmpsb
sarl
out
es
pop
mov
sar
cmpsl
xor
out
or
test
adc
push
dec
lea
outsl
xchg
dec
loop
xchg
push
js
mov
in
nop
mov
aam
pop
les
aas
mov
cld
ljmp
sbb
lods
nop
imulb
std
out
aad
nop
jns
jg
enter
adc
addl
push
test
add
and
dec
cmp
sbb
out
xchg
ficoml
sbb
fcmovnbe
loope
push
leave
mov
add
push
movsl
xchg
pop
pushf
movsb
sarb
test
mov
movsb
mov
mov
mov
jo
aam
lahf
xor
push
movsb
push
pop
outsl
pop
push
add
rcrb
push
mov
imul
insl
lahf
cs
xchg
leave
push
data16
cs
jl
cwtl
cmp
add
and
jnp
mov
xchg
inc
btr
scas
lea
out
nop
sub
add
mov
push
add
xchg
addl
and
mov
arpl
cmpsb
clc
insb
icebp
xchg
adc
hlt
pusha
cmp
imul
fildl
jp
test
sub
mov
adc
inc
or
mov
jb
or
ret
ss
daa
test
dec
mov
and
lods
lds
sub
nop
xchg
nop
xchg
outsb
negl
or
adc
iret
pop
or
ficompl
mov
dec
decl
outsb
jns
sbb
mov
inc
lds
push
inc
xchg
adc
dec
mov
push
mov
xor
cmp
xchg
and
or
das
sbb
push
sbb
sub
add
das
mov
js
gs
out
aad
push
stos
insb
adc
jo
sbb
repnz
fisttpll
jg
orb
daa
xchg
push
dec
dec
mov
addl
xlat
pop
repnz
cs
leave
enter
roll
dec
xchg
lret
xlat
sub
mov
inc
xchg
inc
inc
nopl
in
mov
sub
lahf
or
xchg
outsb
add
mov
pop
mov
into
mov
cmc
in
int3
hlt
scas
lahf
or
sar
xchg
shll
mov
movsl
out
pusha
imul
sbb
ljmp
in
or
push
or
sub
sbb
xchg
scas
push
jae
push
xor
cmpsb
fdiv
adc
out
imul
aam
pop
and
imul
lods
mov
orb
sbb
sbb
add
arpl
mov
lock
cltd
pop
push
ss
rorb
sub
sbb
insb
jne
dec
cmp
lods
cmp
dec
fs
int3
jp
push
xor
clc
pop
lea
mov
mov
pop
sbb
in
push
shll
pop
dec
jb
pop
inc
imul
and
jbe
xchg
xchg
cs
and
pop
push
xchg
mov
mov
inc
adc
mov
mov
pop
iret
out
sbb
xchg
or
xchg
mov
std
loop
jecxz
sub
mov
fldl
popf
sbb
push
cltd
aad
inc
jmp
jp
pop
sbb
test
dec
cld
cmc
cmp
push
fs
fs
pushl
jo
movsl
jle
dec
pop
cmp
les
xor
fisubl
fildl
sub
sarl
repz
ficomps
add
and
inc
popf
lods
out
fucomi
jge
lret
push
mov
push
mov
aad
lea
fstps
inc
lods
sub
dec
lret
sar
dec
jmp
movb
dec
mov
test
lock
mov
cltd
sbb
mov
lods
or
sti
gs
cmp
insb
push
out
mov
sub
cmp
cmp
pushf
test
ljmp
fincstp
dec
fildll
sub
jb
sti
and
nop
xor
sub
adc
push
rcr
cmp
cmp
mov
mov
in
pop
pushf
lret
daa
add
or
xchg
js
cmp
aad
push
ds
or
inc
mov
and
ljmp
push
mov
and
cmc
lock
mov
cmpsb
mov
ljmp
dec
inc
int3
jbe
or
add
dec
inc
hlt
pop
mov
pop
cli
dec
adc
nop
push
and
repnz
cld
movsl
lahf
imul
outsb
cmpsl
pop
push
push
pop
ja
xchg
testl
data16
inc
fldl
mov
adc
jns
sbb
popa
xor
cmp
cmpsb
xchg
cmp
pushf
lock
xor
push
iret
cmp
jp
cmp
dec
clc
dec
mov
ja
lcall
and
push
cmp
pop
jecxz
and
sti
or
aaa
and
mov
lahf
ds
fsubrs
ret
fdivr
pop
jo
jp
andl
popa
pusha
fldenv
ja
test
loopne
into
adc
inc
mov
mov
mov
out
lds
out
fmull
arpl
movsl
stos
sub
stos
add
or
enter
mov
and
inc
aad
xor
hlt
and
je
aaa
pusha
outsl
out
add
lods
sub
cmp
pop
inc
and
insb
xor
xchg
or
fcoml
das
lahf
cmp
mov
push
sbbb
gs
cld
notl
push
ret
xlat
js
xchg
jecxz
insb
sub
xchg
insb
mov
in
or
sbb
outsb
icebp
mov
jle
hlt
push
mov
ret
ljmp
gs
test
push
int3
inc
sti
push
cmp
mov
push
clc
rorl
adc
arpl
inc
mov
je
pop
and
fstpl
xchg
scas
xchg
mov
mov
dec
ja
inc
adc
rorb
movsb
mov
je
push
sbb
cmpsb
icebp
dec
mov
fwait
pop
sarl
and
ret
and
or
jo
je
rclb
jp
das
mov
popf
jge
cmp
test
into
adc
mov
lods
sbb
inc
rcrb
mov
inc
je
sbb
lods
lret
push
sarb
mov
ja
stos
aad
pop
mov
sbb
fdivs
in
aad
sbb
sub
push
movsb
jg
out
xchg
rorb
adc
adc
jmp
cmp
cmp
out
jl
xchg
sub
push
push
xor
popa
mov
call
push
mov
sahf
xor
test
adc
jbe
jne
sbbb
xor
es
mov
dec
xchg
outsl
decl
fstl
sbb
out
rorb
pop
pop
mov
mov
xchg
jns
xchg
popf
ljmp
mov
xchg
sbb
dec
push
pushf
in
aas
pop
jo
shrl
mov
jecxz
mov
mov
add
cmpsb
dec
test
inc
dec
gs
inc
push
das
js
dec
repz
sub
push
into
jo
dec
mov
stos
out
loopne
xchg
popaw
aaa
or
lds
notb
ds
fcmovu
sbb
cli
out
add
adc
jmp
subb
add
loop
aas
adc
daa
pusha
sub
cmpsl
mov
out
loopne
sub
sahf
mov
xor
mov
fistpll
loopne
je
push
add
cmc
xchg
in
adc
in
sbb
lods
imul
out
cmp
xchg
stc
testl
mov
sbb
js
dec
push
push
xchg
js
pop
xor
xchg
pushf
pop
sbb
repnz
jne
xor
mov
xor
mov
std
popf
cmp
nop
push
lods
or
fldt
fucomp
mov
out
sub
sbb
leave
or
gs
add
push
mov
mov
inc
aad
sub
jl
clc
xchg
push
push
or
roll
xlat
mov
pop
popf
xchg
test
mov
loope
dec
inc
push
cs
pop
xor
loopne
shll
call
imul
inc
sbb
jbe
xor
pusha
aad
and
in
in
xor
movl
pop
fiadds
hlt
adc
pop
cld
data16
pop
icebp
roll
jb
mov
mov
mov
in
sub
testb
fs
adc
popf
insl
adc
jmp
test
sbb
and
cltd
dec
adc
dec
jl
pop
lcall
inc
push
jbe
addr16
sbb
add
repz
mov
push
or
sub
push
movsl
jo,pt
scas
clc
mov
test
iret
pop
arpl
mov
gs
sti
outsb
fs
dec
scas
out
adc
mov
arpl
adc
mov
jl
mov
xchg
xchg
pop
xchg
lock
xor
mov
adc
and
into
or
mov
xchg
cmp
push
adc
imul
mov
lds
pop
or
movsl
push
sub
int3
imul
and
sub
xchg
out
push
rcrl
or
mov
pop
pusha
pop
int
movsb
test
pop
xor
sbb
icebp
leave
daa
jbe
nop
xlat
push
into
mov
jno
sub
push
sahf
push
test
mov
or
orb
sub
test
inc
or
mov
les
rolb
sub
mov
mov
push
mov
add
cli
pop
add
xchg
into
pop
sahf
sti
jnp
fmuls
sbb
addr16
cmp
push
inc
loop
or
jbe
inc
mov
jle
shl
nop
imul
mov
pop
test
popf
shlb
subb
xor
test
iret
dec
sub
push
in
or
pushw
xlat
xchg
lahf
aas
xchg
dec
xchg
sub
inc
push
mov
mov
cltd
inc
fstps
inc
das
dec
and
test
jmp
sarb
and
jbe
xchg
fadd
rcr
lods
push
std
xor
dec
je
pop
dec
ja
fwait
mov
jl
mov
in
jmp
sub
rcr
jns
dec
fnstcw
mov
pop
mov
je
cmp
sub
cmpsb
cli
xor
mov
ds
leave
cmpsl
arpl
insl
xchg
cwtl
dec
dec
int3
loopne
mov
lock
arpl
cmpb
fidivrl
sub
mov
imul
push
aaa
push
push
outsl
aam
fadd
scas
in
int3
lods
repz
inc
aad
icebp
add
mov
ficoms
push
jmp
rol
shrl
sbb
int3
aam
fidivrs
pop
jp
in
cmpsl
daa
ds
rol
leave
hlt
test
cmp
sub
ja
insb
sbb
mov
ljmp
sub
xor
leave
inc
cmp
insb
xor
hlt
or
cltd
int
or
fs
fwait
jge
push
negl
pop
pop
inc
in
inc
mov
add
jl
jmp
push
loop
inc
bound
iret
mov
adc
mov
outsl
pop
rorl
cld
sbb
push
scas
and
ja
push
mov
xor
mov
test
xchg
pushf
lea
or
in
dec
and
xchg
das
mov
add
popf
pop
dec
xchg
pop
push
loope
aas
in
sub
imul
inc
sbb
jecxz
test
setne
pop
test
adc
mov
rclb
sti
push
push
rcrl
test
test
dec
sbb
jbe
loope
pop
sub
shll
dec
mov
cwtl
pop
out
aam
jmp
arpl
clc
and
push
xor
bound
xor
xchg
je
clc
fnsave
inc
pcmpgtb
add
or
aad
hlt
mov
cmp
mov
outsl
pop
push
js
outsb
shll
inc
jmp
frstor
insb
dec
pop
inc
xlat
push
ud0
mov
arpl
incl
in
or
movsb
test
mov
outsb
int
in
pop
cli
lcall
lret
cmp
push
xorb
xchg
icebp
xchg
dec
aaa
and
lcall
pop
mov
mov
out
adc
clc
add
add
negb
or
xor
int
scas
or
mov
xor
cwtl
outsb
sub
les
out
or
push
mov
push
pop
outsb
cmc
mov
out
cld
outsb
stos
rolb
pushf
int
out
pop
adc
loope
inc
faddl
leave
and
cmp
nop
inc
xchg
push
out
repz
jb
add
push
int
icebp
mov
enter
repz
mov
pop
int
cwtl
outsl
int
out
mov
adc
daa
inc
icebp
xchg
sbb
clc
scas
lods
cmpsb
push
cmpsb
in
sahf
pop
xchg
jbe
cmp
iret
cltd
fdivrl
push
inc
sub
cs
sarb
outsl
lret
mov
call
jmp
imul
gs
jl
cmp
push
push
notl
fists
in
cmpsl
in
cli
insl
inc
shll
int3
fxch
aam
xchg
je
aad
push
pop
xor
jnp
xlat
dec
aaa
jb
push
mov
sub
xchg
bound
clc
divb
jae
cmp
xchg
loope
in
jns
outsb
mov
in
inc
xor
cmp
cmp
adc
fnclex
mov
dec
jno
adc
incl
popa
pop
pop
into
adc
add
daa
adc
dec
decb
fcmovne
jae
loop
mov
xor
popf
jp
and
fmull
add
bound
mov
sub
clc
add
in
adc
inc
mov
mov
xchg
mov
pop
subl
loope
jae
cld
enter
jbe
cmp
mov
inc
sbbl
or
clc
iret
sbb
outsl
jae,pt
push
or
cmp
jmp
push
fistpl
hlt
data16
cs
jnp
in
aam
jmp
jbe
loopne
mov
inc
test
addb
popf
or
leave
xchg
sti
gs
pop
pushf
icebp
lock
orb
sbb
cmpsl
inc
xchg
es
mov
aad
xor
cmpl
punpckldq
ret
sahf
xchg
insl
xchg
daa
mov
rolb
leave
mov
cmpsb
push
arpl
ja
xchg
in
xor
mov
inc
push
cmc
push
or
mov
popa
insb
out
lahf
fbstp
or
orb
pmuludq
jno
or
into
out
inc
ret
addr16
add
cmp
sub
test
ljmp
das
aad
into
pop
popf
jmp
stos
btc
lret
fdivl
mov
pop
adc
push
imul
push
repz
sub
adc
int3
mov
movsl
dec
pop
inc
sub
adc
test
inc
jno
pop
push
lcall
int3
and
fwait
inc
pop
js
jecxz
mov
dec
xor
mov
insb
adc
sbb
shll
je
xor
scas
enter
popf
fsts
xor
inc
pop
mov
sarb
pusha
xor
dec
sbb
sbb
mov
loopne
and
mov
sub
rcrl
cmp
mov
push
test
shr
rolb
cmpsl
aam
push
lods
jmp
dec
repz
dec
fwait
inc
push
pusha
xor
xor
sbb
int
mov
into
and
test
xchg
push
negb
clc
movl
cmp
pop
scas
cmp
pop
jo
fnstsw
cwtl
addb
mov
imul
arpl
sub
stc
and
mov
pop
int3
ret
das
ficoml
sub
insb
leave
js
mov
into
jmp
ret
mov
adc
aaa
mov
int3
insl
xchg
adc
push
pop
adc
jmp
test
cmpsl
mov
jns
outsb
mov
das
into
roll
mov
mov
inc
repz
cmp
stos
aad
push
out
mov
pop
inc
fidivrs
cmp
je
addr16
inc
insl
sub
sub
out
dec
cltd
pop
add
jl
in
mov
sub
xor
out
dec
inc
and
fldenv
push
mov
scas
lret
dec
pushl
loopne
arpl
mov
sbb
inc
mov
jno
dec
mov
push
cld
sbb
int3
repnz
cmc
push
js
jno
in
pop
dec
mov
or
or
movl
adc
adc
pop
add
repz
push
push
icebp
or
cmpsl
enter
lret
sbb
clc
xor
jecxz
xchg
dec
jmp
push
aas
dec
push
sub
aam
mov
mov
xchg
cmp
and
orl
rcrb
cmp
sbbb
in
in
daa
pop
insl
adc
incb
xor
pop
fisubrs
repz
faddl
lods
fstpl
dec
jo
shrl
sbb
lods
sub
push
mov
test
add
cmp
pop
or
xchg
push
sbb
push
ds
and
mov
fidivl
or
nop
or
pop
xor
mov
dec
dec
call
pop
es
mov
sbb
call
mov
pop
xchg
ja
adc
cli
cmpsb
rorb
mov
outsl
dec
out
jbe
gs
pop
pop
addl
jge
xchg
add
mov
xor
cmp
rep
and
jg
aam
fnsave
iret
or
in
adcb
and
cli
push
lock
mov
imul
cmc
mov
insl
int3
jl
lds
or
and
fwait
or
sub
jns
cmp
pop
jbe
mov
divl
xor
test
push
add
icebp
add
je
adcb
push
repnz
push
lcall
cmc
insl
cmp
aam
lret
push
xlat
stos
in
mov
xchg
dec
loope
dec
xor
mov
stc
icebp
xor
lahf
jle
xchg
mov
mov
lods
sub
push
dec
dec
adc
loopne
fmuls
add
sbb
inc
push
icebp
inc
pop
mov
shll
dec
adc
lcall
jae
jl
pop
ret
adc
subl
mov
adc
push
mov
inc
inc
dec
push
mov
lret
addr16
sahf
jbe
sub
arpl
mov
imul
lahf
scas
je
call
inc
push
bndstx
pusha
mov
xorl
or
in
scas
push
stos
inc
les
ja
cld
push
loop
mov
push
nop
flds
push
das
out
mov
leave
cwtl
pusha
cmp
addr16
repnz
xor
push
mov
and
cmp
dec
sbb
movsl
hlt
and
ja
loope
xchg
push
negl
jns
and
mov
leave
shlb
jge
js
push
cmp
push
dec
cltd
inc
std
cmp
mov
ret
push
cld
sub
mov
out
pushf
dec
or
push
inc
xor
and
pop
inc
repnz
mov
adc
out
notb
mov
mov
push
cmp
movsb
adc
js
data16
pop
bound
or
int
mulb
xorl
sub
and
idiv
pop
or
cmp
cs
repnz
xor
dec
rcll
sahf
sbb
pop
lret
dec
mov
cmp
sub
or
dec
iret
sbb
or
mov
repz
icebp
cs
aad
mov
outsl
push
jb
push
shrb
xchg
lods
sub
adc
dec
xor
adcb
inc
xchg
sbb
and
les
inc
push
pop
lahf
cs
jge
fld
pushf
mov
mov
pop
sti
adc
dec
addr16
lea
add
add
addl
fs
jno
add
lock
xor
leave
fdivrs
pop
shl
shrb
jns
jle
mov
out
cmpsb
push
add
push
es
sub
adc
sarb
xchg
push
fmull
inc
jno
loop
stos
aaa
jg
dec
push
jbe
ss
mov
pop
mov
negl
xlat
and
and
or
ss
es
lds
repnz
test
loop
inc
mov
xor
sbb
pop
adc
dec
fidivl
adc
push
mov
dec
push
push
push
dec
mov
pop
jne
mov
lret
pop
fstpt
int3
fwait
adc
mov
lahf
mov
gs
push
mov
cmp
dec
je
sahf
loop
jle
ja
mov
mov
dec
jbe
xor
pop
loopew
dec
push
push
sbb
cmp
mov
int
cmc
xchg
mov
orl
iret
mov
into
loop
testb
add
mov
jae
cmpsb
test
test
mov
mov
int
adc
pop
jle
ffree
mov
jecxz
jae
xchg
or
push
sub
cwtl
lods
jecxz
movsb
iret
cltd
dec
and
iret
or
push
sub
push
pop
lea
inc
les
sub
and
adcl
lret
sar
mov
cmp
mov
push
into
mov
jg
add
cli
nop
shlb
outsl
push
rolb
lret
sub
not
jecxz
loope
aas
faddl
cmpsb
cmp
cmpsb
out
sbb
imul
sub
clc
mov
in
fdivrl
cltd
lcall
outsb
cltd
cwtl
push
ss
lods
jge
or
movsl
sub
dec
cmp
fiaddl
dec
lea
scas
loope
out
add
inc
enter
ss
xchg
jne
mov
mov
pop
jle
cld
fsubrp
pop
iret
test
mov
mov
jecxz
ret
xlat
jmp
in
outsl
jae
es
aas
mov
xor
sbb
xorl
cmc
xchg
mov
inc
sbb
jecxz
int
push
push
nop
push
testl
xchg
push
hlt
in
sbb
iret
cwtl
hlt
mov
cmp
or
cs
or
divb
mov
dec
xchg
subb
dec
adc
mov
mov
scas
loope
inc
pop
adc
xchg
jl
aas
out
inc
mov
leave
adc
psrlq
xchg
lds
clc
insb
adc
test
sub
dec
lea
sub
mov
adc
shll
and
sbb
adc
data16
fisubrs
adc
push
in
and
cmp
add
stos
pop
dec
arpl
loop
std
icebp
add
jne
shr
lods
ljmp
je
sub
outsb
xor
in
sub
push
jg
mov
in
sub
imull
xlat
lods
sbbl
xchg
cli
pushf
mov
sbb
dec
loopne
jo
loop
arpl
leave
loopne
xchg
push
sbb
insl
lret
ljmp
fcompl
test
inc
mov
addr16
xchg
mov
pushl
popa
cld
mov
sub
imul
fildl
sbbb
xchg
jmp
in
cmpb
stos
pop
push
sbb
xor
jo
or
mov
sub
mov
or
sub
inc
and
push
hlt
mov
push
js
push
jmp
lret
call
fdivl
and
mov
test
aaa
lret
lea
sub
mov
in
adc
or
and
mov
jbe
insb
dec
mov
in
xchg
lods
mov
push
mov
jb
push
jae
cmpsb
in
movsb
mov
or
std
int3
dec
scas
jne
push
fiadds
or
pushf
dec
push
and
loopne
or
push
ret
in
pop
bound
loope
mov
push
addr16
xlat
inc
inc
and
mov
adc
lcall
jb
cmpsl
inc
sub
jg
sbb
and
mov
mov
mov
outsl
out
and
push
cmpb
imul
fucomi
fs
jne
sub
add
mov
clc
iret
push
inc
cmp
lret
sahf
mov
out
and
rclb
test
or
adc
lods
adc
dec
cmc
scas
pop
xchg
jne
fdivrs
aas
xlat
inc
int
mov
scas
cmp
leave
loop
out
or
dec
lds
add
jle
mov
test
xor
ja
inc
loopne
ljmp
sbb
shll
dec
hlt
adc
in
in
repz
jo
movsl
dec
adc
lds
gs
adc
pop
sahf
push
daa
leave
xlat
inc
idiv
mov
xor
push
jge
int
adc
fisubrs
dec
pop
in
in
mov
enter
mov
sub
cmpsl
in
push
loope
in
testb
in
push
mov
mov
dec
js
rorb
inc
push
jecxz
je
push
jb
xor
shrl
popf
xchg
pop
inc
aad
pop
mov
fnsave
ret
xlat
cltd
mov
jg
mov
sub
pop
inc
xor
std
shl
ljmp
jnp
mov
mov
addb
sbb
mov
pop
sbb
adc
xor
in
mov
pop
icebp
xchg
fiaddl
adcb
enter
jge
add
pop
leave
sbb
pop
test
cmpsb
ja
lods
mov
cmp
mov
shr
pop
das
cwtl
iret
call
jp
inc
lcall
xor
leave
into
ret
movsb
pop
push
loop
jb
or
fwait
mov
rcrl
xchg
sub
loope
inc
adc
rolb
push
in
dec
shll
jo
adc
imul
mov
jb
xor
mov
lret
std
mov
je
out
push
push
or
aaa
sub
jmp
mov
add
out
or
sbbb
fldl
enter
dec
rorb
movsb
xorb
adc
fcmovnu
pop
pop
sub
inc
inc
push
jle
outsb
sub
or
add
insb
pop
cmp
jno
and
lahf
hlt
lcall
or
loope
add
mov
outsb
cmp
mov
pop
add
adc
mov
aaa
fildl
sub
movsb
stc
loope
cmc
jbe
mov
ror
imul
fstps
cmp
xlat
jbe
clc
cmp
mov
inc
ret
aas
or
mov
fmuls
push
test
mov
pop
xchg
mulb
jb
pushf
adc
xor
pop
divb
loopne
push
mov
fists
int3
sub
aaa
call
imul
pop
pop
lds
lret
dec
jge
pop
sub
loop
mov
rcl
sahf
lods
xchg
hlt
cmp
test
cld
loope
fwait
scas
sbb
popl
mov
mov
movb
clc
mov
aad
psllw
lods
icebp
loop
test
cld
jecxz
fsubrl
or
or
bnd
sub
test
cld
lock
mov
stc
out
repnz
dec
lret
mov
mov
ret
push
sbb
pop
lea
movsb
mov
stos
dec
add
pop
inc
jg
pop
idiv
test
mov
mov
dec
xchg
shrb
sub
sti
sti
int3
inc
mov
xchg
mov
test
mov
or
je
inc
adc
lds
hlt
cwtl
dec
das
sahf
xchg
and
add
cmpsb
xchg
inc
push
push
push
enter
or
mov
outsb
mov
fwait
dec
xor
mov
out
hlt
fst
aad
rorb
outsb
jle
adc
push
push
repz
jmp
and
repz
in
adc
push
stos
sbb
scas
dec
cmp
cs
xor
cltd
mov
xchg
xor
sbb
sbb
test
ljmp
fstpl
imul
or
push
mov
cmp
fisttpl
je
sub
add
mov
or
in
daa
cli
imul
mov
pop
pop
das
in
cmp
scas
mov
orb
das
pop
stos
pop
insb
inc
cmp
mov
xor
sbb
adc
push
scas
mov
sub
pop
mov
ret
arpl
stc
pop
pop
daa
lds
int3
lret
sub
arpl
cltd
dec
cmp
add
lahf
dec
add
xchg
pop
jb
xchg
sbbb
jge
jbe
inc
xchg
bound
imul
stc
js
xor
or
jbe
ss
or
lahf
push
outsl
lock
cmp
xchg
orb
je
icebp
in
js
and
lret
mov
inc
repz
jmp
push
loop
cli
add
mov
fwait
iret
pusha
jo
or
mov
dec
bound
stc
pop
sub
lahf
push
xor
loop
pop
into
cvtdq2ps
imul
loope
cmc
aaa
sbb
adc
push
sub
mov
repz
lds
jbe
jg
add
cmp
fildll
pusha
mov
cltd
into
int
and
jge
cmpl
movsl
xor
and
clc
addl
adc
jnp
aam
je
and
fcmovu
pop
rcr
mov
push
dec
cwtl
fists
inc
mov
xor
mov
cwtl
mov
sti
adc
push
fldcw
xchg
std
or
insl
mov
enter
sbb
jg
test
clc
sub
fildl
and
daa
or
mov
out
or
xlat
push
mov
push
fisubl
add
mov
lods
ljmp
subb
add
int3
or
sub
ror
jne
jnp
add
mov
sbb
cmpsb
fwait
adc
cmpsb
adc
xchg
push
mov
stos
cld
push
adc
shl
jmp
pop
loope
dec
jbe
sbb
xchg
ds
test
xor
xor
lret
movsb
aam
dec
ds
int3
mov
or
sti
xor
jecxz
push
stos
scas
movsl
xchg
repz
dec
adc
mov
mov
xchg
pop
loopne
fnstenv
nop
outsl
icebp
xorl
xorb
push
lret
aaa
dec
sub
inc
aad
inc
scas
loopne
gs
in
pop
clc
das
out
dec
mov
pop
mov
pop
loope
lcall
lock
mov
shll
aaa
sub
mov
in
std
cmp
inc
mov
mov
in
movsl
adc
gs
pop
dec
push
test
xchg
dec
lds
jo
cmp
and
movsb
inc
dec
test
push
das
in
sbb
inc
inc
xchg
dec
shrl
lds
adc
divl
cmpsb
std
aaa
and
and
andb
lahf
cmp
rorb
fidivl
in
jecxz
dec
sbb
dec
mov
jge
adc
dec
push
sub
int
lods
inc
lock
push
push
push
cmp
std
loope
fidivs
call
sub
ffreep
aam
hlt
mov
clc
fistpl
and
or
lcall
cld
add
fwait
movsl
test
push
mov
xorb
mov
xor
leave
and
add
repz
lret
scas
push
mov
in
xor
lods
ljmp
repnz
and
push
adc
lds
pop
push
cmpsb
sub
repz
lods
add
sahf
pop
inc
dec
rorl
dec
daa
es
cmp
add
mov
ss
clc
mov
daa
xchg
mov
add
lods
bound
cld
jne
mov
inc
shl
ss
pop
je
aam
mov
cmp
push
sbb
arpl
inc
jecxz
cmpsb
add
cmp
pop
cmpsb
sbb
pop
mov
xor
mov
sti
cmp
add
cmp
in
push
orb
mov
xchg
outsl
jno
lods
pop
adcb
call
push
adc
jge
pop
js
push
jp
lods
mov
mov
fwait
mov
jecxz
xchg
leave
mov
push
fiadds
je
xchg
and
nop
mov
dec
adc
lds
aam
fwait
daa
cmp
lock
xchg
sub
adc
inc
bound
int
dec
repnz
or
push
out
ret
insb
pop
mov
mov
test
push
shll
jg
in
add
jno
test
push
or
push
cmp
pop
dec
mov
ret
jae
and
sub
scas
fprem1
movsl
movsl
je
dec
lds
popa
nop
jl
lock
cmpsb
add
add
scas
jnp
in
out
aas
pop
imul
cmpsb
adc
fwait
dec
mov
xchg
leave
scas
dec
nop
cmp
and
mov
pop
movsl
imul
fwait
mov
pop
inc
inc
jg
fs
push
mov
dec
xchg
in
push
jecxz
lea
popf
hlt
add
or
iret
jnp
mov
and
out
sbb
and
cmp
jg
mov
jecxz
aad
pop
int3
das
popa
sbb
fwait
adcb
push
mov
divl
inc
or
adc
roll
xor
subl
and
mov
sbb
dec
adc
mov
mov
cld
out
lret
push
es
sbbb
jns
jp
stc
pop
mov
nop
push
outsl
leave
loop
push
inc
loopne
jg
inc
add
push
jp
mov
cmp
aad
or
mov
pushf
adcl
mov
loopne
loop
ret
push
push
xorl
xor
ja,pt
insb
je
adc
adc
cli
lds
enter
jl
fiadds
xchg
mov
leave
dec
fnsave
cmpsb
xchg
jno
add
mov
cmpsl
cmpsl
lods
adc
in
stc
push
jo
arpl
ficoms
lods
dec
addr16
or
ret
mov
cli
or
pushf
loopne
push
xchg
push
in
movsb
shl
sbb
inc
test
imul
push
jp
mov
inc
mov
jbe
fs
clc
fadds
lcall
insb
pop
ficomps
cmc
push
psadbw
jg
imulb
imul
inc
mov
iret
jo
fistpll
nop
pop
fisttpll
mov
mov
sub
or
or
insl
sub
mov
ljmp
push
sbb
mov
js
bound
sub
sahf
rcr
jnp
sbb
xor
stos
out
xor
mov
sbb
jle
cltd
dec
sti
sarl
repz
stc
repnz
setae
fstps
jge
cmpsl
pop
data16
jp
mov
lods
sbb
mov
fnstcw
inc
sub
dec
pop
shll
test
push
xchg
adc
adc
push
sub
rorl
repz
test
xor
sub
push
fistpll
adc
jecxz
jmp
movsb
ret
sbb
and
sbb
xchg
sarb
jl
mov
add
inc
dec
push
xchg
sahf
sbb
jl
out
out
xchg
inc
sub
sbb
jp
ljmp
in
sbb
and
icebp
pop
idiv
loopne
shrb
mov
jb
icebp
mov
sub
xlat
dec
dec
sbb
movsb
push
lods
add
push
imul
in
jp
jns
cmp
lcall
pop
lea
pop
sbb
and
dec
dec
or
shll
sarb
jge
js
inc
mov
adc
stos
mov
xchg
mov
shll
sub
mov
mov
negb
sbb
dec
ficomps
xor
fidivrl
cmp
push
addr16
rorb
xor
add
mov
pop
inc
jne
subb
inc
int3
cmpsb
aam
pop
xor
inc
fcom
push
dec
lret
sub
cli
iret
sbb
outsl
fs
push
inc
pop
je
inc
xchg
movsl
xchg
xor
xor
xchg
or
leave
enter
fisttpll
int3
xchg
jo
xlat
scas
mov
pop
loope
jmp
cmp
in
mov
stos
jno
into
pop
adc
pand
fstp
shlb
and
std
shlb
and
and
shrl
push
cltd
xchg
mov
mov
fidivrs
jl
inc
popa
lcall
repz
jns
push
ret
daa
sti
jb
mov
cmp
popa
jns
packssdw
outsl
es
mov
repnz
adc
xor
dec
das
int
test
and
mov
xchg
loop
pop
cmpsl
mov
es
add
push
test
mov
pop
into
repnz
add
ja
aas
stos
popf
jns
push
fwait
testb
iret
pusha
push
and
jns
mov
in
test
mov
leave
stos
loope
aaa
dec
popf
dec
ret
icebp
div
stc
rorb
in
jg
mov
adc
std
inc
dec
sarl
push
xorl
stos
sub
jmp
sub
ret
movsl
dec
push
and
in
xchg
jb
xorl
js
and
sbb
movsl
pop
mov
mov
stos
sbb
mov
movsb
out
xor
bound
ficomps
mov
dec
cmp
mov
mov
xor
lahf
lahf
add
dec
sub
mov
lcall
rcrb
insl
mov
rorb
fwait
jnp
in
into
jns
cmp
sub
pushl
dec
push
sbb
cmpsb
hlt
into
cmpsl
es
sarl
or
pop
test
cmp
push
and
aas
pop
mov
push
fildll
cli
mov
in
or
jecxz
cmpsl
sub
sbb
nop
and
or
sub
sbb
mov
xchg
mov
sub
pop
icebp
ljmp
pop
dec
mov
adc
popf
insb
test
mov
xor
push
outsb
jmp
addr16
out
sbb
and
stos
push
lds
repz
push
inc
ljmp
je
xor
movsl
mov
add
mov
lds
add
pusha
jns
jecxz
mulb
sbb
push
ja
in
mov
xchg
sbb
in
mov
adc
fisttpl
in
add
outsl
and
push
scas
int
lcall
repnz
or
sti
aaa
and
rcll
std
xchg
push
push
lods
andb
mov
pushf
dec
xchg
mov
ljmp
jns
fstl
inc
es
movsl
dec
and
pusha
lods
stc
test
sub
jae
xchg
push
cmp
jns
ljmp
pop
lods
jmp
mov
fldcw
adc
mov
add
xchg
mov
adc
fidivs
push
sti
adc
dec
jl
sbb
fcompl
push
pop
inc
push
clc
andl
dec
cmc
clc
cmp
cwtl
popa
sbb
mov
xchg
add
push
pop
add
mov
inc
test
std
fs
mov
mov
arpl
pop
jbe
push
test
ljmp
inc
cmpsl
pop
mov
je
adc
popa
sub
xor
pop
lret
or
or
cwtl
lret
fwait
les
xchg
mov
int3
mov
ret
pop
cmp
es
call
or
jnp
test
test
add
jg
pop
out
loope
jle
add
add
jne
cmp
xor
inc
das
and
push
rorl
aaa
divl
jg
data16
aad
clc
xchg
mov
or
add
cs
fxch
dec
push
notl
jno
jb
call
cmp
js
fs
insb
or
repz
aad
push
lea
xchg
rcrl
xor
jmp
push
je
out
outsb
xchg
mov
xchg
or
repz
dec
es
pop
pop
rcrb
aam
stos
mov
mov
pop
int
jns
pop
rcrb
movsl
fdivp
sbb
outsl
sub
cmc
mov
lds
xlat
cmpsl
iret
sbb
mov
pop
clc
mov
mov
fistpll
rorl
push
adc
mov
sahf
repz
sbbb
mov
fwait
push
mov
dec
stos
pusha
ljmp
mov
dec
hlt
pop
xchg
pop
adc
lret
pop
xor
mov
pop
or
or
movsl
stos
adc
adc
inc
jnp
aas
test
aas
mov
xchg
pushf
iret
dec
popa
jmp
dec
lock
aaa
cli
jo
imul
mov
mov
lods
cmp
loop
sbb
scas
push
and
insl
xchg
lods
sti
jecxz
mov
sarb
push
mov
and
xchg
ffreep
lcall
mov
bound
ficoms
pop
inc
out
xchg
sub
in
shlb
xor
scas
dec
dec
mov
sbb
in
push
and
push
icebp
cmpsl
imul
adc
cmp
xchg
ljmp
mov
stc
adc
insb
decl
inc
xchg
int3
pop
movsl
cmp
lods
outsl
enter
dec
push
leave
loope
dec
mov
xor
ret
addr16
pop
mov
icebp
scas
ljmp
or
rclb
loop
js
inc
mov
push
push
cs
dec
std
ficompl
stos
push
jp
cmc
push
lock
push
js
sub
mov
pushf
lcall
xor
clc
loop
fildll
rclb
out
arpl
mov
ret
dec
cmp
add
lret
adc
adc
popf
pop
cmp
repnz
xor
mov
loop
inc
jo
adc
jo
loopne
ja
dec
aad
xchg
dec
into
mov
insb
pop
jo
mov
sahf
xorl
sbbl
loopne
sbb
mov
pushf
andl
jo
inc
mov
or
mov
das
enter
add
xchg
mov
xor
lods
cmp
mov
dec
in
aas
in
icebp
idivb
and
jge
cmp
push
inc
gs
divb
push
movsl
sub
mov
mov
repz
stc
adc
cmp
and
pop
mov
mov
xchg
imul
out
test
add
add
sbb
or
gs
js
fcompl
jb
test
push
sbb
out
dec
mov
aad
sbb
cmp
out
int
test
add
icebp
cld
cmpsb
sbb
or
sbb
cmpsb
and
xor
sahf
inc
cmp
push
nop
sbb
pop
icebp
mov
imul
xor
rolb
cli
sub
and
mov
dec
mov
cmp
jo
int
inc
fwait
or
inc
mov
pop
das
ret
outsl
aas
fdivrp
dec
inc
or
ret
inc
mov
pop
in
fmul
dec
out
lret
push
xchg
and
pop
shlb
ljmp
cmpsl
sbb
sti
repz
call
mov
cmp
jl
and
mov
mov
loopne
aas
cmc
fcmovne
in
filds
push
testb
or
xchg
lahf
mov
push
push
in
icebp
sub
jae
cmp
clc
xchg
mov
pushf
cltd
adc
mov
push
stc
sub
data16
push
jmp
jp
push
or
scas
sub
jo
aam
sub
repz
adc
and
mov
cwtl
lcall
ret
mov
in
rorb
jle
hlt
sbb
inc
aas
xor
popf
scas
or
nop
push
mov
mov
stc
mov
jge
mov
add
sub
dec
xchg
mov
jecxz
sub
les
ds
jne
iret
inc
cmp
outsb
inc
enter
out
out
stc
lcall
aad
mov
insl
cmpsb
add
xor
out
out
cmp
aas
inc
inc
jl
xchg
aaa
sahf
lret
out
jge
pop
push
push
adc
xchg
sti
sbb
or
leave
sti
push
in
stos
cmp
mov
xchg
xlat
jge
adc
loope
jle
gs
xchg
call
movsl
xor
fbstp
arpl
repnz
arpl
insl
xor
ljmp
mov
mov
inc
pop
push
pop
adc
fildl
pop
pop
and
jno
mov
fcoml
dec
cmp
jle
cmp
ret
into
inc
pop
sub
test
hlt
or
lret
orb
iret
adc
ja
mov
out
mov
lahf
push
fisubl
jns
aaa
test
or
ss
sahf
stos
dec
jp
or
imulb
test
push
push
push
out
inc
dec
pop
push
sbb
test
and
add
idiv
pop
xlat
cmp
les
cmpsb
inc
inc
rcll
fwait
and
or
inc
popf
ret
jge
adc
push
fldt
jecxz
loop
xchg
push
aad
cltd
mov
add
fsubrs
cmp
mov
mov
jne
mov
iret
sbb
pop
cltd
or
add
xor
push
cwtl
inc
shlb
adc
mov
dec
xchg
lahf
xor
int3
popf
inc
sbb
sub
jge
jle
scas
test
sbb
sarl
pop
sub
or
jmp
imul
fcmovbe
mov
arpl
jbe
jge
fwait
dec
out
pop
in
mov
xchg
imul
sbb
xchg
push
xlat
mov
inc
mov
jg
fwait
mov
int
ret
lcall
xchg
enter
pop
aaa
int3
aas
mov
mov
jns
aad
push
xlat
cmpsb
jge
adc
rorl
test
in
mov
xchg
or
nop
xchg
mov
insl
sbb
jno
push
rcl
xor
mov
mov
and
ja
mov
mov
dec
mov
lea
or
cmp
gs
jb
mov
xor
scas
inc
sti
vmread
mov
inc
mov
divb
dec
popf
xlat
pusha
xlat
ja,pn
cmp
xor
sbbb
xchg
and
aam
inc
or
sti
fcmove
insb
lods
sbb
pop
lds
jge
inc
lods
mov
add
es
fmull
mov
push
push
jl
or
mov
and
jnp
outsb
xor
aas
pusha
idivl
inc
sbb
sub
pusha
dec
sub
mov
das
fisttps
aam
dec
mov
popa
ds
inc
fmuls
inc
xchg
mov
mov
adc
arpl
jg
jno
xchg
dec
repnz
daa
or
insb
adc
lret
xchg
das
aaa
xor
push
or
or
in
xor
lcall
jbe
fbld
fisubs
jo
dec
stos
inc
test
sbb
pusha
lock
into
or
dec
dec
pushf
mov
into
dec
mov
stc
loope
gs
xchg
mov
int
stos
decl
pushf
outsb
insl
outsb
add
iret
mov
call
orl
fistpll
push
jae
jmp
lahf
or
inc
addr16
dec
sub
mov
test
xlat
rcl
push
icebp
push
sbb
test
insl
insb
or
fwait
inc
jl
inc
adc
pop
lahf
aaa
out
lcall
arpl
rolb
xor
or
jle
out
dec
push
nop
xchg
loope
mov
fidivl
mov
push
ret
inc
or
dec
inc
in
mov
xchg
fmulp
cwtl
xor
sub
cmp
es
lods
cli
icebp
insl
mov
xchg
insl
jae
mov
aas
repz
call
leave
mov
pushf
adc
nop
aad
push
mov
insb
mov
in
mov
sub
vmwrite
fs
imul
scas
xchg
dec
int3
add
outsl
cmpsb
jnp
xchg
pop
loope
cwtl
push
push
es
popf
and
mov
mov
out
push
push
std
roll
xor
cld
dec
push
xorb
xchg
in
adc
out
push
cs
test
out
pushf
pop
dec
stos
pop
fldenv
sbb
ljmp
dec
adc
sahf
outsb
dec
xchg
adc
insl
mov
xchg
inc
outsl
mov
in
ss
xchg
dec
imul
cmp
aad
aad
jno
sub
jmp
lock
sbb
sahf
sub
or
subl
pushf
xor
test
gs
pop
lcall
or
add
mov
mov
cmp
sbb
and
push
jg
jno
rcrb
jns
xchg
jae
sbb
xor
cmp
gs
rcll
insl
adc
push
popa
bound
push
dec
push
rol
mov
pop
fnsave
mov
xchg
lcall
fchs
fwait
les
inc
mov
mov
mov
add
or
or
xchg
sub
xor
jmp
jmp
jg
and
sbb
xor
pop
sub
int3
jae
fs
test
orb
mov
les
or
popf
jns
shll
push
daa
cwtl
ss
jne
dec
addl
mov
mov
and
or
or
mov
ret
outsl
ret
sti
sbb
outsl
jge
in
stos
lods
xchg
insl
or
aam
jge
outsb
sbb
icebp
in
mov
cmp
lret
push
xor
xor
movsl
clc
decb
aas
enter
pop
mov
jnp
in
neg
and
add
fwait
jp
cmc
gs
mov
mov
push
js
nop
mul
loop
sbb
insl
push
das
add
adcl
push
inc
gs
scas
lods
mov
push
repnz
xchg
inc
rclb
inc
and
fs
out
shlb
inc
jb
jl
and
adc
mov
mov
add
or
push
ret
test
pop
in
dec
mov
into
sub
dec
popf
push
jae
aam
or
test
filds
fldenv
aas
dec
cs
aaa
jg
and
adc
push
xchg
and
mov
gs
fst
aas
mov
ret
lret
or
or
dec
lret
mov
pop
push
inc
xchg
call
push
ficoml
pusha
shlb
push
cmp
jae
pop
addr16
mov
clc
xchg
xor
xchg
and
je
cmpsl
mov
xor
test
cs
mov
inc
rcrl
mov
iret
add
adc
ret
in
cmp
or
xchg
pop
sbb
mov
adc
andb
fistpll
out
scas
jne
mov
inc
sub
ficompl
or
mov
stos
ret
cmp
add
in
cmp
in
cmpsl
fisubs
xchg
cmpsb
ja
xchg
jb
je
std
sbb
das
jge
rsqrtps
add
sub
push
hlt
push
je
push
enter
loopne
push
pop
add
or
pop
xchg
xor
or
jp
or
fildl
or
mov
jmp
push
mov
push
cli
push
stos
pusha
jbe
push
je
pop
dec
sbb
mov
pop
pop
aam
mov
xchg
out
mov
or
cmovno
div
sahf
mov
adc
cwtl
in
adc
inc
push
pop
or
pop
dec
or
ret
nop
push
cld
push
sahf
xor
mov
inc
imul
fistpl
sahf
sub
sub
mov
adc
add
sahf
cmpsb
inc
hlt
lods
add
arpl
pop
cli
pop
cmp
cmpb
test
push
mov
lcall
test
and
repz
ljmp
repz
sti
stc
jno
decb
push
lret
sub
scas
sbb
dec
cmp
xchg
flds
jg
xor
mov
ret
mov
mov
jmp
ljmp
movsb
mov
data16
fbstp
pop
mov
mov
movsb
stc
add
cltd
mov
pop
sbb
jp
jbe
scas
cld
push
stos
mov
fisttps
rcrb
loop
jb
aaa
dec
dec
lret
push
decl
adc
es
or
sti
clc
gs
dec
cmp
sub
cmp
in
inc
es
rcl
fcmove
xor
dec
dec
jecxz
sbb
in
das
push
mov
outsl
in
dec
cli
push
xor
jg
dec
call
gs
adc
push
xlat
sti
dec
mov
add
iret
test
push
adc
mov
jne
ss
sub
aaa
repz
jg
cmc
gs
daa
call
cmp
pop
sub
jp
movsl
pusha
lret
xchg
sahf
ja
fs
mov
jnp
rorl
jecxz
inc
sub
sbb
dec
loope
mov
cwtl
aam
dec
addb
push
sbb
rorb
pop
test
add
inc
loopne
femms
jbe
and
lock
pop
or
inc
aaa
pop
adc
mov
ss
sub
into
aaa
and
lcall
adc
std
loope
popf
scas
add
lahf
xchg
inc
xlat
ret
popa
push
sbb
push
jmp
cwtl
jnp
ljmp
out
cmc
lock
xor
fdivl
ss
icebp
jecxz
push
push
std
movsl
js
push
push
adc
shll
scas
dec
inc
dec
mov
fs
daa
fwait
lods
scas
mov
push
mov
mov
sbb
mov
pop
pop
gs
dec
jp
adcb
or
mov
jb
jl
adc
fsubrp
dec
push
std
or
lret
mov
cmp
sub
pop
les
les
adc
push
loopne
cld
jb
sbb
push
jmp
xor
jbe
aam
xlat
mov
push
aaa
pop
or
mov
mov
mov
cmovns
fucomi
movsb
je
inc
mov
loopne
jp
dec
ret
sbb
mov
xor
imul
jae
sbb
push
and
sti
mov
jmp
push
clc
add
dec
mov
test
mov
mov
scas
pop
mov
pop
out
sbb
lods
jge
mov
or
insb
xchg
pop
cmovno
inc
mov
xlat
sbb
dec
pop
mov
lret
scas
sub
movsl
addr16
aaa
xlat
add
or
push
dec
shlb
jl
data16
cmc
jbe
daa
bound
add
movsl
in
mov
into
iret
into
dec
sbb
rclb
add
push
adc
es
cmp
hlt
dec
push
fnstsw
and
xchg
scas
popa
aaa
dec
insb
xorb
mov
add
addb
push
call
jge
adc
inc
fisubl
mov
jle
aaa
and
aam
sbb
cmc
xchg
sbb
pop
cmc
and
xor
xlat
call
xor
outsb
mov
mov
mov
movsl
iret
cmp
or
rorl
imul
pop
iret
sbb
lret
inc
pop
loope
loop
test
call
cmc
sub
lea
dec
jge
adc
add
sbb
adc
inc
cmpsl
jecxz
sti
push
push
test
mov
mov
dec
hlt
scas
jb
das
lcall
pop
dec
es
adc
shlb
sub
repz
push
adc
xchg
dec
xor
in
cs
xchg
into
fistpl
add
ret
jge
push
aam
movsl
jne
sarl
add
insl
out
mov
stos
pop
inc
scas
push
jle
cs
iret
mov
pushf
aas
cmp
loope
mov
xchg
dec
sbb
dec
mov
in
push
add
imul
mov
in
out
pop
xor
aaa
dec
mov
jp
negl
dec
out
iret
jp
mov
imul
xor
jne
jl
inc
rclb
jle
cmpsb
stos
es
test
mov
cmpsl
push
repz
mov
negb
push
ja
jmp
or
cli
jne
inc
sbb
insb
ret
rcl
cmp
or
and
dec
arpl
ds
test
adc
xor
xchg
lods
jno
xor
call
test
cmpsb
push
adc
ljmp
dec
insb
cmp
ds
fistps
ja
mov
scas
or
push
cmpsb
mov
push
clc
sbbb
push
popa
mov
movsl
rorb
ss
leave
mov
xorb
je
and
inc
cwtl
pop
clc
dec
push
imul
push
into
int
xchg
push
adc
or
jmp
cmp
ret
in
xchg
ja
pop
mov
or
rorl
mov
test
sbb
imul
cmpb
pop
or
outsb
out
xchg
mov
faddp
xchg
mov
xor
out
push
popa
sbb
fmull
adc
sub
mov
jnp
dec
in
cmp
adc
call
daa
mov
insb
xor
mov
and
xchg
sbb
jno
pop
xchg
xchg
test
sahf
arpl
and
jnp
xor
scas
push
sbb
xor
mov
aad
rolb
rcrb
cmp
jmp
call
xor
lcall
test
mov
ss
mov
and
sarb
aam
mov
pop
ss
popa
insl
jb
adc
fucomp
or
mov
int3
cmc
xor
fisttps
mov
pop
hlt
pop
and
jg
push
int3
aad
push
and
cmp
dec
push
cmp
or
inc
data16
jl
stc
arpl
cwtl
ds
sbb
aaa
in
and
lea
jle
ror
shl
jmp
sbb
push
sub
push
cltd
inc
xchg
add
es
cltd
mov
cmp
ret
xor
or
xor
inc
shrl
xchg
andl
outsl
lahf
xchg
xor
add
daa
adc
sub
bound
pop
mov
mov
mov
mov
shr
imul
gs
fidivs
inc
pop
cmp
dec
inc
jle
push
orl
push
dec
adc
ljmp
ss
je
addr16
cmpsl
inc
push
aam
mov
movsb
and
mov
fmull
jmp
pop
jae
sub
xchg
adc
jno
loop
push
lods
push
jg
mov
or
adc
out
mov
push
shlb
xchg
inc
adc
les
roll
test
rcl
add
fstl
clc
sub
sbb
inc
or
ret
les
inc
jbe
cmpsb
stos
mov
sub
mov
out
cmp
adc
adc
jbe
sbb
mov
mov
and
xchg
mov
add
and
lea
fwait
pop
dec
mov
pop
call
in
pop
cli
push
add
push
mov
mov
iret
mov
movsb
sub
mov
cmpsb
mov
inc
push
mov
push
jle
das
stc
sbb
cli
mov
inc
xchg
lcall
mov
ss
fistpl
jbe
divl
arpl
xor
cmpsl
adc
mov
inc
xchg
imul
mov
gs
mov
fnsave
push
test
ljmp
and
fdivr
stos
jle
sti
cs
frstor
xchg
js
fwait
pop
jno
pusha
shll
xchg
fcomip
das
mov
jmp
sbb
lods
mov
pusha
inc
icebp
lea
out
iret
shll
call
mov
dec
jge
sub
mov
out
cs
mov
lahf
xchg
xchg
std
in
in
or
cltd
push
test
nop
arpl
lcall
xor
inc
outsb
push
xchg
ja
mov
out
ljmp
mov
or
movsb
popa
jecxz
xchg
jbe
repnz
popf
sti
adc
adc
sbbl
inc
int3
mov
fidivrs
out
stc
cmp
out
getsec
mov
out
sbb
push
in
lea
or
aaa
xor
std
cli
add
pop
fstpl
inc
pop
into
dec
xor
push
stos
stc
pop
sbb
insb
cmp
mov
test
ljmp
xor
cmp
test
jno
mov
sub
cld
mov
imul
lret
das
and
jmp
arpl
and
adc
ret
and
mov
push
xchg
jns
cs
mov
sbb
dec
sub
or
fsubr
sbb
push
sbb
push
mov
addr16
mov
fidivs
and
out
test
mov
or
mov
jge
aam
mov
dec
aas
fisttps
add
push
aad
fsub
and
lcall
jle
sbb
je
lods
rcrl
icebp
negl
mov
scas
xchg
xor
mov
xchg
popw
lcall
xchg
sahf
roll
push
lea
aas
adc
jecxz
or
gs
fcompl
xchg
jbe
cmp
sahf
sbb
xchg
lods
pop
xor
sbb
addr16
fs
push
and
jnp
xchg
or
pop
jae
fst
out
xlat
dec
xlat
test
cmc
stos
xor
add
mov
mov
push
jno
and
fwait
add
or
test
in
pop
jb
sub
xor
add
sbb
je
or
inc
jo
push
inc
in
cmp
jae
icebp
or
fcom
mov
pop
cmpsb
imulb
mov
push
shlb
imul
sbb
loopne
inc
idivl
and
sub
inc
sub
call
js
mov
pop
daa
cmpsl
test
je
nop
movsb
or
dec
cmpsb
dec
mov
dec
jo
dec
adc
pop
fmuls
andb
les
imul
test
jle
mov
jb
call
cmp
sub
add
sub
mov
mov
or
cli
mov
add
or
or
popf
in
or
scas
movsl
andl
aas
and
pop
mov
adc
mov
xor
push
test
jb
push
enter
push
dec
xor
sbb
dec
inc
ss
xchg
gs
mov
or
and
pop
aam
lds
mov
fs
dec
stos
adc
cmp
sarl
pop
enter
scas
jo
xchg
aam
adc
xchg
out
sub
ret
andl
lahf
cmp
xchg
inc
sub
icebp
das
outsl
mov
xchg
push
mov
sahf
dec
jnp
mov
cld
lods
mov
fists
subb
loop
fdiv
push
fisubrl
jle
sbb
pop
daa
scas
jg
add
cli
sbb
popf
lock
dec
aam
adc
and
into
outsb
or
dec
xchg
pushf
das
stc
lods
adc
push
data16
sub
pop
aaa
test
stos
pop
fwait
push
lret
mov
mov
hlt
inc
mov
ficomps
lcall
pop
mov
insb
jbe
jno
bound
mov
je
adc
nop
aam
in
lret
dec
sbb
cltd
mov
out
dec
mov
dec
lea
iret
mov
clc
ror
push
mov
out
sti
notl
sub
mov
fcompl
jg
lret
dec
test
dec
into
and
mov
inc
js
pop
addr16
dec
out
xor
sub
test
xor
in
ss
mov
xchg
mov
out
pusha
inc
jl
out
ret
loop
leave
popa
fistl
inc
and
cmp
jno
lods
jg
cmpsl
xchg
sahf
cwtl
cld
cmpsl
jns
test
xlat
cld
iret
arpl
jmp
shll
gs
sbb
sub
sub
pusha
add
arpl
xlat
pop
pop
jmp
push
test
mov
in
add
mov
pop
jo
cwtl
push
push
rcl
arpl
xchg
push
inc
mov
add
or
stc
inc
imul
and
sub
jns
mov
mov
xchg
cmp
push
dec
imul
enter
fisubl
sub
aas
imul
in
add
and
fs
lock
jbe
imul
movsl
xchg
outsb
mov
lock
xchg
or
inc
in
or
add
cs
xchg
subl
shrl
andl
jp
cs
mov
dec
loopne
and
push
pop
lds
je
or
jb
fldenv
std
dec
mov
add
sbb
xor
mov
fstl
ja
pop
or
push
push
divb
scas
jecxz
sub
sarl
fstl
adc
sub
insl
cmp
xor
and
xor
sub
test
loopne
mov
adc
cmp
ljmp
sbb
arpl
mov
sub
or
ljmp
sti
loope
xchg
cmc
cmc
cli
dec
cmp
scas
fbld
mov
pop
popa
outsl
xor
cmp
mov
repz
xor
stc
cs
sbb
inc
rcll
mov
outsb
dec
std
lret
int
xor
mov
dec
lcall
dec
pop
data16
scas
mov
jo
sbb
sbb
fucomp
scas
sahf
push
xor
xor
pop
js
int
scas
sti
sub
in
pusha
ss
outsb
fistl
inc
pop
cmp
mov
push
xor
movsl
xor
mov
mov
push
xor
add
stc
push
jo
dec
jno
outsl
in
push
outsl
add
movsl
enter
mov
sahf
push
aas
xor
dec
jmp
rcrl
xor
push
popa
mov
lret
lds
decl
dec
cmpsb
mov
aad
dec
push
lcall
pop
and
xchg
xchg
pop
push
xor
inc
fdivs
jnp
pusha
push
fs
add
xchg
or
dec
add
pop
xchg
subl
arpl
or
sahf
mov
lods
inc
mov
movsb
jae
out
cmp
dec
inc
push
pop
test
xchg
sahf
pop
popf
or
push
fstl
jo
cli
xor
lock
pusha
mov
inc
clc
insl
fildl
faddl
imul
out
push
jne
bound
cwtl
leave
insl
mov
adc
sahf
jns
lock
xchg
cli
test
push
loop
cmp
push
sbb
inc
das
add
or
scas
insb
cmp
push
jmp
aas
insl
outsl
lock
arpl
orb
xor
inc
mov
pop
imul
add
mov
and
in
aad
sub
xor
stc
incb
xchg
xchg
andb
cmp
mov
push
cld
out
je
jle
jle
stos
mov
aad
lret
enter
rcrl
jge
adc
sub
jg
dec
cmp
mov
mov
mov
push
pop
pop
push
inc
sub
shlb
insl
fisubs
fsubl
test
pop
mov
sub
and
addr16
lahf
mov
xor
dec
jmp
cmc
cmc
cltd
pushf
fcmovnbe
inc
pop
and
jmp
mov
mov
fcompl
cmc
out
pop
pop
dec
in
ja
out
lahf
lea
lds
xchg
inc
js
jmp
shrb
in
subl
or
lret
insl
loope
loop
in
daa
jb
fistl
fcmovu
push
enter
and
jecxz
stos
scas
outsl
nop
lods
sub
jbe
mov
xchg
int3
pop
ja
popf
inc
adc
cmp
adc
mov
aam
lods
in
clc
push
scas
sbb
sbb
ret
stos
sti
sub
jecxz
add
jns
pop
xchg
dec
jb
outsb
push
insb
pop
mov
add
jmp
in
push
lret
pop
dec
sbb
dec
gs
adc
sub
xor
and
call
mov
frstor
or
add
xchg
fisubl
sbb
add
mov
mov
sbb
cmp
xchg
lret
loopne
leave
xchg
push
mov
or
cmp
or
out
lret
pop
sarl
push
or
pop
jbe
or
lcall
mov
sbb
ret
loope
adc
pushw
fdivrl
xchg
adc
xor
out
sub
xor
and
or
push
cmp
jl
mov
arpl
xchg
pop
and
sbb
cmpsl
push
cwtl
mov
aam
and
jmp
iret
pop
xlat
gs
test
and
xor
scas
dec
sub
mov
add
xor
sbb
sbb
rolb
clc
nop
and
xorl
out
jl
cmp
incb
xchg
rcrl
mul
aas
adc
es
pop
xor
fstpl
pop
test
adc
and
das
push
mov
and
cmpsl
add
or
push
pop
in
outsl
mov
sub
imul
xor
cmpsl
das
lods
add
js
stos
lahf
add
dec
add
divl
jno
out
arpl
cmpsl
inc
in
dec
dec
in
xchg
push
fcoml
mov
inc
mov
ret
roll
addr16
mov
test
lods
push
fimuls
insb
or
xchg
sti
push
adc
pop
mov
jle
iret
daa
mov
add
lea
inc
dec
mov
ret
sub
les
pop
pushl
mov
jo
cmp
mov
jae
jl
adc
add
adc
clc
cmp
xor
jg
xlat
cltd
xlat
mov
sub
push
sub
or
jle
mov
in
sti
pop
sbb
sbb
xchg
dec
shll
mov
jb
cmp
push
xchg
mov
push
arpl
gs
fisubl
pop
mov
imul
pusha
and
shlb
insb
imul
int3
mov
jne
inc
jle
cmpsb
lret
jl
dec
es
jl
rep
out
stc
scas
sub
pop
mov
add
imul
pop
push
lock
jbe
mov
sbb
stos
cmpsl
sbb
jge
sahf
mov
clc
int3
xor
xchg
add
sub
xchg
push
mov
sub
mov
jbe
test
movsb
mov
out
mov
mov
cmpsb
sub
push
jae
xor
out
adc
imul
adc
pop
out
ja
xchg
insb
xor
aam
inc
or
push
aam
int
cmp
adc
pop
faddl
cmp
jne
xor
pop
test
fimuls
jbe
ds
gs
sbb
stos
mov
mov
inc
jno
cmpsl
lods
jg
idivb
aam
xchg
sbb
fsubrl
aaa
dec
shr
mov
sbb
xor
clc
shr
dec
and
cmc
in
sbb
push
or
and
movsb
in
stc
sub
mov
in
insl
pop
mov
lret
pop
outsl
and
push
cmc
push
fidivrs
popa
faddl
xchg
inc
lods
mov
vorps
and
or
rolb
lahf
int3
mov
xor
cld
lds
jg
mov
dec
push
mov
sbb
cmpsb
sarl
push
push
dec
jmp
lods
jne
xlat
in
or
jbe
arpl
out
xor
pop
sbb
pop
mov
push
xor
je
jg
leave
inc
dec
sahf
mov
hlt
aaa
sub
imul
jmp
popf
mov
push
into
iret
test
in
outsb
sub
lock
sbb
inc
pop
stos
lods
jno
test
sarb
xlat
clc
mov
xor
cmpsl
mov
push
mov
jmp
add
push
adc
pop
or
jo
out
clc
jle
enter
out
inc
ret
mov
insb
in
xchg
xchg
cmp
inc
enter
stc
les
mov
dec
lcall
sub
fnstcw
fld
cwtl
cmpsl
fdivrl
sbb
iret
fsubr
cmpb
dec
in
xor
jno
lea
dec
or
fnstsw
cmp
repnz
mov
insb
mov
jmp
lcall
pop
rorl
xor
lea
stos
xor
and
aaa
aam
insl
sub
sbb
fs
ss
lods
dec
push
icebp
data16
clc
mov
xchg
push
fidivs
aaa
lret
movups
pop
sub
in
jbe
add
cmpsl
insl
push
and
popa
nop
in
test
stos
cmp
imul
mov
pop
push
xchg
mov
mov
aaa
cmp
loop
iret
lods
sub
loop
adc
call
mov
int
inc
test
sbb
sub
out
pop
pop
add
mov
adc
dec
stos
leave
stos
in
loope
or
and
stc
cmp
test
flds
inc
push
test
xchg
cmpsl
roll
lds
xor
cmp
enter
lods
or
adc
dec
mov
xlat
xor
inc
pop
bnd
jmp
cmp
rorb
dec
sbb
xor
pop
xchg
dec
xlat
inc
push
dec
jbe
dec
aam
jl
adc
cs
jno
jl
ja
cmc
scas
dec
scas
pop
adc
ffreep
xchg
das
inc
and
insb
cmp
test
push
loop
pop
mov
mov
xor
mov
mov
std
icebp
add
sbb
cld
movsb
in
add
cs
cmc
lea
ret
imul
outsb
push
xor
shl
push
dec
data16
loop
jmp
push
fiaddl
lret
jnp
push
fsubs
push
cs
outsb
adc
scas
mov
dec
aad
test
shl
jo
dec
hlt
and
scas
jo
xor
or
cmc
mov
roll
int3
daa
mov
jmp
lret
aad
iret
xlat
popf
push
sub
xchg
xchg
and
cmc
mov
ds
xor
sbb
jp
jl
cmc
sbb
lret
mov
and
mov
lea
and
pop
call
mov
sub
cmp
push
inc
lret
or
fxch
push
xor
jae
arpl
xchg
or
inc
jg
or
aaa
mov
lock
std
pop
mov
jmp
and
xchg
or
mov
inc
mov
jns
lahf
jns
jl
inc
adc
jae
or
sti
dec
loope
dec
xor
test
test
mov
inc
jl
test
cmc
cmp
push
push
pop
bound
mov
js
ja
cmpsb
pusha
outsl
clc
or
mov
cli
cmp
dec
sbb
xor
xor
pushl
push
cmp
enter
xlat
adc
out
and
testl
and
xchg
repz
sub
lods
or
fists
jo
and
dec
sub
in
inc
scas
or
dec
cltd
bound
outsb
push
and
mov
sub
rcll
int3
sarb
xor
adc
into
inc
jne
je
into
sti
cltd
pop
imul
dec
js
dec
scas
movsb
clc
movsl
cs
inc
lock
jo
mov
daa
jnp
jbe
in
mov
sbb
scas
lea
arpl
push
push
pop
inc
fcmovbe
das
lds
stos
mov
mov
pop
lds
int
stc
xchg
sbb
in
hlt
and
adc
dec
sahf
loopne
hlt
mov
mov
jle
addr16
and
in
sarl
sbb
pop
sub
icebp
cmp
icebp
lods
cltd
xchg
decb
add
test
mov
mov
cli
xor
dec
inc
add
and
scas
gs
mov
mov
xor
mov
je
ret
enter
mov
or
or
decb
push
cmc
stos
push
shlb
jmp
push
cmp
scas
dec
adc
in
cli
jbe
into
dec
idiv
fdivrs
push
mov
mov
ror
xchg
dec
in
mov
cli
mov
pop
inc
idiv
in
fwait
pop
cmp
fnsave
aad
inc
rorl
mov
jle
outsl
push
push
stos
jmp
push
nop
mov
pop
lcall
xchg
insl
aad
js
divl
and
push
loope
ret
movsl
push
pop
sbb
bound
aas
mov
lret
mov
inc
inc
nop
jl
lret
dec
call
mov
dec
mov
xor
mov
dec
dec
dec
enter
das
mov
jae
xor
insb
test
push
in
insb
jmp
xor
sbb
adc
sbbl
hlt
xchg
rcll
mov
arpl
test
and
cmpsl
sbb
adc
out
inc
sub
mov
icebp
jle
jp
inc
sbb
in
pusha
mov
sti
mov
mov
inc
and
xchg
or
push
ss
inc
push
or
sbb
xchg
mov
ror
clc
out
push
or
mov
popl
cltd
mov
nop
mov
jle
scas
jle
mov
mov
popf
in
ljmp
push
xor
push
jo
mov
and
cmp
xchg
add
push
adc
add
sub
lds
cmp
stos
int3
dec
in
test
pop
scas
add
shll
int
jg
or
std
fwait
mov
mov
fisubrs
sahf
and
lods
push
jnp
dec
fsubl
popa
adcl
cmpsl
test
dec
sbb
cs
popf
sub
repz
pop
in
mov
push
and
jl
pop
dec
nop
xchg
mov
ljmp
or
jg
lock
jge
nop
cmpsl
std
sbb
mov
int
shl
js
aam
jg
xchg
jge
addr16
xor
jns
ljmp
in
xchg
cmpsb
leave
cmpsb
mov
dec
or
std
insl
rcr
out
xor
lret
lret
or
add
or
cmpsl
mov
outsl
pop
xchg
jle
or
sbb
jb
sub
sub
cld
andps
je
dec
outsl
add
fiaddl
aas
addr16
push
scas
out
dec
push
pop
push
pop
stc
or
icebp
or
pushf
shll
mov
cmpsl
push
imul
inc
cmp
adc
lea
out
inc
fildl
divl
push
sub
lock
cmp
mov
mov
xor
jbe
mov
push
imul
lret
mov
xchg
andl
fbld
loope
movsl
es
je
leave
mov
mov
add
imul
xchg
jnp
shr
mov
das
sbb
test
in
dec
testl
cmp
adc
cmpsb
lcall
jp
pop
cmp
pop
push
pop
repz
dec
push
fildll
aaa
jae
add
inc
dec
movsl
pop
add
inc
pop
cmp
pop
fnstenv
xchg
xchg
cmp
out
xor
push
imul
and
adc
xchg
cmp
rclb
rorb
rep
sbb
push
adcb
outsb
push
insl
sbb
pop
or
sbbl
push
xchg
in
jmp
sbb
lds
push
dec
je
aad
cmp
pop
lock
movsl
adc
xchg
out
lock
loopne
jge
hlt
idivl
mov
dec
jns
outsl
and
cmpl
or
xorb
sbb
in
pop
sbb
mov
sbb
dec
sbb
cmp
xchg
xor
and
jae
adc
pop
mov
in
imull
dec
imul
pop
push
data16
in
pusha
out
in
loop
mov
and
sbb
xor
ds
movsl
fwait
and
sti
xor
sub
cmp
mov
sbb
mov
inc
pop
add
dec
add
xor
out
addr16
dec
lds
popf
jne
add
pop
cld
and
dec
incb
mov
mov
xchg
add
mov
outsl
cmpsb
outsb
ror
jo
push
jmp
fiaddl
xor
xchg
std
mov
in
cli
inc
lahf
movsl
mov
xchg
les
mov
out
mov
ljmp
rcl
pop
and
inc
sub
sahf
mov
sub
rolb
test
scas
xor
mov
xchg
cld
jnp
cmp
rcl
repnz
mov
inc
jmp
push
cld
mov
enter
mov
and
scas
sbb
sbb
mov
out
adc
push
pop
fsubs
jl
jae
movsb
sbb
push
popf
cwtl
ss
add
push
add
das
faddl
out
insb
ljmp
and
push
repz
inc
leave
ret
xor
pop
les
cwtl
lahf
jnp
dec
lret
arpl
add
fwait
data16
fimuls
cwtl
cmpsl
pop
jge
test
in
pop
mov
gs
xchg
and
repnz
lret
and
rorl
sti
xchg
scas
or
dec
imul
pop
rorl
data16
xchg
jnp
add
adc
scas
inc
repz
xchg
pop
mov
or
fnstsw
test
and
hlt
das
or
call
inc
jmp
fcoml
divl
mov
cmc
jg
cli
lahf
les
rcrb
xor
outsl
lahf
mull
fnsave
fyl2x
inc
cmc
fstps
fwait
nop
jmp
pop
lcall
cld
mov
lahf
popf
stos
xchg
imull
jg
xor
pop
insl
sub
cmpsb
sbb
jb
pop
aam
shlb
push
outsl
jmp
inc
pop
setb
jl
jle
xor
ds
aam
es
jb
pop
push
lahf
dec
cmpsl
cmp
cmp
xor
xrelease
pop
sub
stos
test
xor
inc
nop
sub
addr16
xchg
jle
cmp
push
lock
in
les
out
jmp
lcall
sub
lea
aad
aaa
inc
scas
leave
mov
adc
mov
pop
inc
mov
daa
jmp
and
cwtl
sbbl
or
xor
inc
mov
or
dec
inc
lret
cmp
jle
dec
xchg
scas
mov
shlb
xchg
sub
daa
ror
ficomps
aas
aaa
jecxz
shll
and
pop
pop
mov
lcall
das
lret
add
repnz
jmp
ret
loop
outsl
mov
iret
sub
sub
je
or
mov
add
scas
xor
mov
insl
fsubl
les
ret
mov
dec
mov
jnp
fidivrl
cs
jns
jb
aas
sub
inc
and
iret
mov
mov
leave
scas
dec
dec
ljmp
mov
jmp
fdivrl
arpl
lret
aad
jp
loope
jl
adc
out
into
mov
pop
jge
aas
imul
mov
roll
stos
in
stc
pop
cmp
mov
les
mov
adc
addr16
sarb
or
jb
mov
imul
sub
loopne
mov
ror
mov
daa
negb
cmp
xor
xchg
add
adc
pop
mov
jnp
cmp
test
outsb
mov
sti
mov
test
mov
or
push
scas
cmp
push
add
xor
jl
pushl
lods
rclb
and
popa
sti
enter
stc
daa
mov
insb
sub
pop
lea
sbb
in
mov
mov
xchg
ds
cmp
sbb
dec
hlt
sub
insl
mov
mov
xchg
outsb
push
jns
loop
shlb
mov
jle
push
nop
jnp
lret
cmc
pop
daa
xor
sbb
dec
and
push
mov
lea
mov
adc
adc
mov
push
xchg
mov
mov
mov
aaa
inc
adc
loopne
loop
dec
cmp
mov
test
mov
xchg
stos
popf
mul
cmp
push
or
inc
scas
mov
pop
inc
mov
mov
add
bound
or
sub
add
rorb
shl
push
fcmove
xor
xchg
popa
es
inc
shll
fisubl
mov
daa
test
cld
xor
cmpsb
mov
in
test
idiv
std
push
cmpl
pop
mov
nop
adc
and
bnd
mul
cmp
mov
mov
aam
add
js
xchg
push
cmp
fsts
add
jbe
ret
in
loope
ret
rcrb
insb
test
icebp
cwtl
les
cmpb
jo
jle
enter
imulb
cmp
and
cld
dec
sbb
jl
icebp
inc
in
lahf
fnop
push
imul
mov
jl
js
ljmp
outsl
add
sbb
lret
movsl
cld
xor
sti
cmp
sahf
or
fiaddl
mov
pop
xor
in
jg
push
adc
adc
rorl
rcll
int3
pushf
je
and
mov
mov
out
sbb
ret
or
xor
xor
out
jne
xchg
stos
xor
sub
pop
std
add
mov
adc
out
in
mov
addr16
in
outsl
push
mov
xlat
in
out
or
bound
push
cwtl
sarl
pop
inc
stos
ja
jmp
js
mov
cmc
loopne
adc
mov
hlt
or
je
sub
orb
mov
add
cltd
cmc
ret
mov
mov
push
or
jmp
in
jge
mov
mov
dec
mov
ret
ja
std
push
sub
adc
mov
pop
aaa
cmpb
xchg
xlat
inc
pop
adc
lds
or
sarl
nop
cli
xor
sbb
mov
mov
push
fcoms
lds
fistpl
aam
ljmp
xchg
mov
jne
mov
dec
inc
cmp
inc
std
loopne
push
adc
das
push
inc
add
in
dec
lret
ds
cmpsl
mov
lret
or
xchg
pmaddwd
push
arpl
gs
clc
into
inc
jle
rcrb
les
adc
mov
mov
out
mov
loopne
fnsave
or
loope
cltd
xchg
pop
add
add
inc
mov
loop
insb
xchg
jae
cld
jo
in
sbb
xchg
push
mov
jge
test
add
pop
movsb
das
or
mov
cli
lahf
jg
ds
dec
sbb
sub
cmp
dec
or
and
roll
movsb
cli
jp
andb
and
rorb
aas
fnstenv
fdivrl
lods
imul
mov
mov
xchg
inc
mov
adc
pusha
aad
out
sbb
pop
dec
push
pop
xchg
mov
fstpl
loop
cmp
cmp
shll
scas
push
xchg
xor
not
movsl
jle
mov
xchg
sahf
sahf
pop
pushf
cmp
push
jg
jnp
pop
call
ljmp
cmp
or
cmp
pusha
cmp
insl
push
cmc
jbe
mov
add
jnp
push
repnz
or
in
lret
pop
mov
lds
and
dec
roll
xchg
das
and
pushf
test
mov
daa
mov
imul
mov
xchg
js,pn
xchg
or
icebp
mov
jo
mov
push
scas
std
adc
cmp
test
into
test
inc
mov
insb
jno
inc
dec
cmp
mov
xchg
icebp
jne
ljmp
xor
inc
repz
mov
leave
push
sub
dec
pop
inc
outsb
inc
jo
inc
mov
add
rol
pop
xor
mov
mov
movsl
dec
inc
push
mov
mov
push
adc
jae
fiaddl
or
mov
xlat
test
lcall
std
jo
xor
lds
xchg
lods
inc
inc
mov
pop
cmp
mov
test
inc
outsb
mov
cs
js
mov
sbb
icebp
inc
xor
and
lea
test
mov
jmp
xchg
rol
mov
mov
cld
incb
lea
stc
mov
in
leave
sbb
daa
sub
xchg
sarb
bound
xor
add
jecxz
mov
push
xchg
jb
test
inc
or
or
and
int
jge
mov
jl
lods
pop
jmp
xor
mov
mov
mov
cmpsb
push
xchg
aad
movsb
dec
loop
xor
pop
cmp
mov
xchg
ljmp
cmp
sub
imul
cld
dec
or
dec
add
js
fwait
mov
inc
or
int3
in
ret
into
popa
pop
add
movsl
sbb
inc
sti
iret
in
hlt
adc
jecxz
xor
push
insl
cmpps
aaa
scas
stc
sbb
movb
xchg
adc
arpl
or
xchg
cmp
and
out
push
mov
mov
cmp
fcomps
add
les
cwtl
jnp
mov
insb
sub
stc
cmp
ja
lds
jle
push
inc
and
add
cmpsl
aam
mov
sbb
ljmp
dec
iret
mov
sub
ds
pop
push
mov
inc
jnp
loop
lods
lea
cmp
lods
sbb
scas
inc
push
mov
lods
xor
adc
inc
imul
cmp
cld
mov
jno
repnz
pop
loopne
jo
sbb
xor
sbb
sub
pop
repz
jne
add
xor
inc
mov
mov
or
in
mov
adcb
xchg
icebp
shrl
test
fidivrl
sbb
test
pop
leave
sbb
inc
scas
leave
sub
inc
sub
dec
in
pusha
gs
cmp
scas
ret
out
xor
data16
outsl
adc
cmp
xchg
adc
lcall
cmpsb
movsl
scas
push
rorl
outsb
js
dec
loope
movsl
cmp
lahf
add
mov
ljmp
in
int3
jecxz
fwait
pop
mov
push
jecxz
in
filds
push
mov
mov
pop
mov
adc
decl
sarl
ljmp
xor
mov
test
movsb
rcrl
pop
mov
ret
and
out
scas
jnp
pop
xchg
jno
pop
aam
push
jg
pop
in
xor
fdivrp
aam
ror
stos
xor
sub
pop
aaa
mov
mov
mov
mov
pop
lret
loopne
jnp
push
lods
rcrl
stc
std
or
and
hlt
test
das
lret
dec
mov
sahf
inc
call
mov
pop
pop
xor
aaa
in
mov
leave
adc
sbb
push
mov
push
test
ret
nop
icebp
outsb
dec
cltd
mov
insl
std
mov
or
sbb
push
imul
mul
test
loope
jmp
pop
ljmp
sbb
xorb
xor
daa
jae
mov
daa
push
and
mov
xchg
and
mov
adc
or
shlb
add
cld
js
xchg
pusha
jp
sahf
aad
rorb
cmp
or
xchg
sub
cmp
jp
repz
push
rcr
lret
inc
daa
mov
into
iret
and
sub
testb
xchg
negb
inc
imul
mov
inc
ja
inc
xor
adc
incb
loope
imul
push
sarb
int3
sbb
jne
jnp
cmp
xor
movsl
popf
in
out
cmp
test
arpl
add
arpl
push
dec
in
mov
pop
xchg
jb,pn
push
fsubrs
cmp
mov
scas
iret
mov
mov
push
jns
aas
test
nopl
test
ret
inc
leave
rorb
in
jmp
xchg
test
cmpsl
cmp
leave
sbb
inc
dec
fnstenv
sar
rcll
ss
mov
push
sbb
mov
in
es
xchg
mov
jne
out
pop
xchg
xchg
stos
xchg
pop
out
addr16
das
mov
jg
arpl
stc
xor
ja
sub
mov
jmp
rclb
in
adc
push
push
dec
mov
or
test
lods
data16
decl
cmp
cmp
xchg
js
clc
lret
add
std
insb
sbb
stos
lods
std
les
cltd
daa
push
jnp
and
xchg
sbb
pop
mov
scas
fdivrl
xor
popa
adc
mov
repz
adc
cwtl
mov
sahf
inc
or
jne
sbb
adcb
fistl
andb
jns
orb
test
mov
shlb
leave
and
dec
xchg
cmpsb
mov
and
push
or
mov
scas
repz
mov
push
ret
movb
sti
push
and
mov
push
sbb
nop
cwtl
pop
xchg
push
xchg
pop
jnp
mov
push
cwtl
imul
mov
lcall
into
xor
sbb
cli
shll
stos
sub
es
ljmp
bound
in
cmp
sub
int3
cmp
mov
outsb
aaa
sbb
mov
mov
fwait
shll
pop
std
cltd
mov
out
mov
xchg
mov
adc
inc
pop
add
rolb
mov
int
daa
js
or
jno
jbe
sbb
jo
inc
ja
inc
adc
cmpsl
cmc
imul
sbb
jmp
test
mov
popa
pop
fsts
fstps
mov
dec
repnz
test
mov
adc
lock
pop
jge
sbb
push
loope
pop
arpl
and
shll
not
in
sti
stos
jmp
mov
push
mov
fnstenv
ds
push
cmp
in
lret
xchg
jno
dec
scas
cmp
pop
sbb
pushf
mov
push
jmp
mov
xchg
mov
enter
xor
lods
sub
pop
dec
std
lahf
mull
aas
xlat
setns
rsqrtps
mov
xor
dec
inc
inc
les
mov
shll
and
jo
or
div
fistl
sbb
mov
cwtl
mov
push
lea
jno
aas
add
les
push
sbbl
cmp
ljmp
das
push
push
ficoml
push
dec
shl
jle
loop
push
cmp
fwait
sahf
dec
or
mov
test
mov
lods
loop
dec
lahf
out
dec
sub
xchg
jmp
inc
xor
inc
adc
xlat
mov
add
or
dec
pop
jo
mov
ljmp
inc
out
test
cld
sbb
jno
pop
mov
adc
xor
xchg
js
lret
mov
in
out
dec
shrl
pusha
cmp
rolb
in
sbb
sahf
pop
xchg
sbb
icebp
mov
push
imul
xchg
sbb
or
jle
adc
pop
movsb
mov
jmp
std
cmp
mov
loop
cmpsb
aad
and
jbe
mov
mov
xchg
jne
jmp
pop
stc
pop
insb
sub
shll
mov
inc
movsl
jnp
dec
lret
mov
sti
cmc
fucom
popf
push
and
enter
test
testl
mov
mov
repz
or
leave
mov
fcompl
jnp
bound
cs
cmp
lds
and
sub
movsl
push
jae
fldt
inc
mov
jne
pop
les
push
iret
popa
jp
pusha
jecxz
jno
inc
xor
leave
stos
pop
mov
or
dec
push
mov
fcomps
outsb
add
push
das
jg
popf
scas
ss
jge
xchg
push
push
enter
cmp
in
cmp
mov
insb
orl
ja
add
leave
adc
dec
sbb
pop
decb
dec
popf
inc
mov
popa
xchg
mov
mov
xor
jmp
shlb
xor
lods
clc
push
xor
lds
rcrb
jmp
dec
out
lret
scas
pop
insb
aaa
jbe
sub
pop
addl
cmp
inc
into
shr
and
pop
nop
pop
xchg
or
cmp
rclb
iret
movsl
in
test
or
dec
inc
cmp
mov
mov
fisubrs
adc
fistpl
xlat
cmpsb
dec
lods
jbe
cmc
in
adc
xchg
test
hlt
dec
dec
sub
movb
dec
adc
sub
out
aas
test
js
addr16
out
mov
pop
roll
js
cmc
adc
hlt
mov
xor
rcrl
int3
lret
xor
clc
push
push
lret
iret
mov
arpl
xchg
arpl
fucomip
sub
sbb
ficoml
rolb
mov
mov
outsl
xor
out
jne
push
imull
jae
jmp
sbb
mov
outsl
mov
adc
enter
adc
adc
or
adc
xor
xor
push
dec
hlt
imul
mov
inc
test
aad
fimull
mov
mov
jno
mov
int
or
fiadds
jl
out
les
and
lea
and
std
mov
clc
ret
repnz
add
adc
iret
insl
out
test
fwait
ja
sti
jge
es
lock
pop
lds
and
push
movsb
mov
test
push
push
lcall
arpl
jge
dec
mulb
mov
push
cld
and
rcrl
add
jge
mov
add
xlat
push
pop
scas
xor
inc
popa
es
lods
and
xlat
ss
ficoml
in
insb
add
pop
mov
push
or
push
out
cs
pop
pop
arpl
adc
jo
rcrl
stos
pop
fnsave
cmp
pushf
lret
in
mov
incl
int
jo
pop
push
and
mov
mov
inc
jg
fcomps
js
pusha
push
orb
pop
xchg
jbe
dec
sub
shl
iret
cmc
call
push
cmpsl
or
adc
mov
stos
adc
inc
popa
jp
lods
pop
ret
adc
leave
mov
mov
push
sub
decb
gs
jp
add
mov
movsb
dec
sub
mov
mov
jmp
push
outsb
pop
movsb
jne
stc
and
mov
in
aam
out
push
mov
pop
mov
repz
sub
movsl
pop
shrb
std
daa
les
push
pop
mov
sbb
testl
inc
xor
ljmp
rep
sub
std
and
pop
pop
adc
mov
jbe
cmp
pop
test
insl
test
and
pusha
enter
icebp
pushf
cmpsl
xchg
jae
test
fsubr
lea
dec
inc
leave
out
inc
aad
pusha
and
sub
or
lea
pop
jns
pop
push
lret
cmp
or
pushfw
lods
arpl
mov
ret
dec
aam
xchg
cmp
fldt
mov
out
bound
popf
mov
jg
push
imul
sbb
je
bnd
jl
shl
cwtl
inc
pop
fwait
mov
rorb
dec
push
outsb
mov
in
adc
push
ret
or
adc
out
test
add
inc
addr16
sbb
stc
aad
cmp
xchg
or
adcb
adc
sub
jns
in
es
or
out
out
cmpsl
stc
andb
push
sub
mov
cmp
aad
mov
jge
pop
lea
adc
adc
pop
out
push
nop
stos
pop
js
jb
dec
push
push
sub
loope
movsl
jo
lock
pop
lock
cmp
push
push
ljmp
out
add
daa
nop
xchg
adc
sub
popa
add
mov
xor
int3
hlt
stos
dec
mov
cltd
cli
sub
mov
xlat
rorl
shlb
mov
dec
dec
dec
xor
rcr
jb
sbb
mov
sbb
xorl
out
push
cmpsb
les
pop
or
jbe
shll
add
dec
pop
nop
xchg
loope
pop
xor
pop
sbb
cs
pop
mov
sub
inc
add
cmp
out
hlt
dec
or
adc
lret
sub
movsb
scas
xor
fistpll
inc
xor
sbb
jp
aaa
frstor
inc
call
sub
lods
lret
and
loopne
mov
push
dec
add
mov
xor
test
insb
repz
dec
pop
cmp
and
int
hlt
dec
shr
outsb
loopne
dec
jmp
xor
aad
pop
adc
leave
imul
imul
xor
popf
in
in
shrb
or
ljmp
mov
cmovle
push
xor
cmp
mov
dec
xor
cmp
lahf
mov
popf
in
sub
xor
adc
es
xchg
incl
and
pushf
mov
mov
push
loope
fildll
push
test
xor
into
sub
xchg
sbb
adc
ja
jecxz
mov
or
outsb
pop
addr16
test
dec
or
ja
and
out
push
aad
loop
cld
pop
push
add
add
sub
mov
push
xor
test
mov
xor
js
lods
push
pop
aam
mov
mov
out
movsb
mov
mov
jmp
sbb
xchg
in
lret
mov
jne
ror
test
cmp
fimull
shlb
xlat
sub
xchg
adc
dec
and
fimuls
push
rcrb
in
out
loop
jo
pop
pop
add
pusha
lds
or
lock
mov
dec
push
aad
outsl
es
in
and
ja
sub
push
mov
xchg
aad
jo
mov
and
adcb
push
test
xor
inc
xorl
lahf
daa
inc
imul
stos
aad
push
mov
test
xchg
rcll
rol
push
mov
hlt
pop
sti
je
sbb
pop
jl
repnz
and
fsubrs
mov
pop
sti
rol
or
adc
std
ja
out
sbb
xor
xchg
sbb
jp
into
shlb
bound
pop
ds
adc
shrl
in
mov
cmc
cmp
push
add
fldl
pusha
jne
arpl
lods
sbb
cmp
jecxz
movsb
loop
inc
orb
sbb
or
jnp
imul
jne
sub
push
outsb
arpl
xor
aad
inc
sbb
nop
push
mov
mov
cmp
addr16
pop
fs
scas
sbbb
mov
loop
jl
in
orl
mov
dec
stc
xchg
jmp
in
add
lea
in
sbb
mov
imul
daa
loopne
outsl
xlat
mov
inc
jl
std
push
xchg
cld
imul
shll
pusha
or
out
out
cmpsl
sbb
ljmp
xchg
stos
inc
popf
idivl
bound
or
adc
mov
arpl
ss
daa
lea
mov
icebp
mov
jns
test
push
pop
add
xchg
adc
and
lock
aad
mov
ret
stos
fsubrl
jae
ljmp
test
mov
xor
xchg
or
or
gs
aad
jb
fists
or
jb
mov
jo
stos
or
sbb
dec
push
push
cwtl
sub
roll
adc
pop
les
inc
jns
dec
inc
rorb
jecxz
fwait
ljmp
cmc
cmc
sbb
outsb
push
sbb
dec
rolb
or
ds
iret
mov
jbe
sti
xchg
and
mov
lahf
bound
pop
arpl
cmc
jno
jp
nop
jg
cwtl
sbb
jp
test
lods
dec
or
aad
and
inc
adc
rcrb
push
test
and
in
lret
xor
pop
mov
add
insb
mov
jl
push
xchg
push
test
mov
inc
cmp
mov
aam
daa
mov
jno
imul
cmp
stc
and
and
dec
scas
mov
lods
jno
pop
xor
es
jmp
xchg
add
mov
mov
add
sbb
mov
or
jmp
push
loope
cltd
aam
add
lods
test
das
ret
jmp
inc
movsl
lahf
mov
sub
fildl
sub
cmp
loopne
les
jecxz
flds
dec
test
leave
ds
xchg
inc
dec
mov
gs
xor
and
sbb
xor
xchg
adc
adc
inc
pop
lea
mov
and
daa
rcl
sahf
call
jp
sub
pop
movsl
sbb
dec
lock
repnz
dec
clc
or
in
and
push
and
stc
sbb
or
sahf
lret
xor
cli
mov
outsb
jno
mov
pushf
mov
mov
dec
push
popf
rorb
xor
mov
icebp
dec
sub
add
ret
insb
inc
push
dec
xor
xchg
jnp
jns
cmpl
xor
jge
data16
loopne
xchg
repnz
pop
cltd
ret
mov
jg
or
cmpsb
das
sti
cltd
repnz
sub
mov
cmp
hlt
dec
dec
insb
lret
sbb
add
ret
sti
or
pop
cmpsl
lock
fcomip
lds
fmuls
stos
lods
sti
jae,pt
cmp
ljmp
mov
inc
push
push
rorb
in
cmp
mov
xchg
jo
out
sbb
pop
imul
ja
mov
iret
idivl
fiaddl
sahf
pop
adc
nop
dec
push
shl
xchg
ja
push
es
pop
or
and
cltd
sar
pop
jns
mov
out
push
adc
ficoms
loopne
ss
aaa
add
add
mov
shlb
push
and
je
das
sbb
repz
xchg
or
popa
inc
xchg
jle
and
fdivrp
cmpsb
jle
bound
jae
inc
pop
jo
iret
popf
and
cmp
idivb
data16
imul
test
jbe
pop
jmp
fidivs
xor
cmc
inc
call
mov
push
in
dec
sbb
repnz
roll
fsts
arpl
push
cmp
cmp
cmpsl
sub
push
jae
adc
mov
cwtl
int3
sbb
ja
add
push
pop
orb
stos
bound
test
fwait
push
cmp
rcl
cltd
shl
repz
fistps
in
aam
aas
or
mov
adc
test
fdiv
int3
adc
mov
aad
cmpsl
jmp
and
cmp
pop
or
mov
jg
std
test
sbb
insb
outsl
lea
push
and
push
rep
aas
adc
repz
iret
out
shl
mov
adc
movsl
sub
das
and
fs
outsb
xor
aad
subb
pop
lds
sbb
js
inc
movsb
dec
in
lret
aam
aad
dec
push
and
inc
sub
das
pushf
stos
orl
lahf
xlat
adc
bound
jbe
mov
mov
out
and
and
stos
or
xor
insb
xchg
and
mov
xor
cmpsl
mov
fdivrs
pop
and
dec
xchg
repz
das
ljmp
xor
push
sub
shl
cmpsl
xchg
rcrb
adc
outsl
cmp
jle
test
in
cwtl
lret
pop
inc
incb
scas
xchg
xor
adc
jno
dec
push
mov
orl
repz
jbe
or
aad
sahf
fcoms
mov
into
fsubrl
stos
mov
jb
pop
sbb
ljmp
xor
push
push
add
push
data16
int3
test
loop
dec
pop
sbb
outsb
or
bound
or
adc
inc
sub
popf
mov
in
xor
and
xchg
mov
xor
pusha
ja
xor
lods
mov
mov
stos
mov
insb
cmpsl
and
aam
mov
and
mov
mov
clc
dec
roll
or
push
incb
test
jno
cmp
frstor
mov
cwtl
or
jmp
lods
cmp
sti
insl
xchg
xchg
mov
push
dec
movsb
sub
js
cmpsb
inc
fdivs
repz
mov
cld
push
movsb
fistl
xlat
cli
mov
mov
cld
jb
repnz
push
dec
or
aaa
sarl
xor
adc
imul
or
push
mov
hlt
cmp
in
std
mov
mov
ljmp
mov
mov
popa
xchg
cld
inc
pop
sbb
fcomps
neg
pop
cli
clc
mov
lret
xchg
jge
push
hlt
sbb
dec
or
sub
ja
push
lods
jne
pop
out
std
jmp
pop
dec
cli
dec
jmp
mov
xor
adc
icebp
mov
sbb
and
xor
lock
jmp
sahf
inc
and
aaa
es
in
adc
leave
sbb
add
xor
es
inc
sub
loope
adc
lahf
jge
push
mov
lret
dec
xchg
pop
fs
adc
test
lcall
rcll
sub
add
add
xor
xor
stc
inc
jb
add
mov
mov
popa
arpl
fcompl
cmp
cmpb
mov
sub
mov
push
neg
in
daa
adc
adc
ljmp
cmp
testl
loop
ljmp
leave
popa
add
add
sbb
leave
push
sub
test
xchg
cli
les
xcrypt-ctr
cmpsl
cltd
test
sbb
cmpsb
jno
leave
int
push
cs
loop
dec
jl
lret
jecxz
add
dec
xor
in
dec
jge
sahf
pop
loop
ficomps
push
mov
pop
add
sbbl
rolb
fsubrp
adc
movsb
les
fdiv
adc
jno
mov
inc
fistl
addr16
adc
jle
jo
dec
pop
lea
js
fisttps
mov
jle
sub
dec
ja
lds
sbb
sbb
mov
sbb
inc
inc
pop
lea
mov
and
mov
jg
lock
test
pop
addl
mov
popf
shrb
mov
mov
repz
mov
pop
mov
and
sbb
out
sbbl
mov
sub
aad
dec
lea
shlb
and
in
mov
pusha
stos
jb
dec
ret
and
sbb
out
jb
out
cli
pushf
std
push
bound
test
sub
subb
popa
push
jns
dec
cmpsl
inc
fldt
pop
xor
jle
nop
xchg
mov
das
inc
ja
cmp
fldcw
jle
jo
lea
frstor
xchg
cmp
xchg
cmc
ds
xchg
and
dec
cs
pop
lds
pop
and
das
test
ljmp
xchg
cmp
insb
andb
mov
cmpsb
call
ss
or
dec
loop
push
fadds
dec
push
inc
addr16
jnp
xchg
xor
repz
orl
mov
cli
or
adc
fistpl
push
in
aas
mov
std
mull
mov
mov
xor
rcrl
push
lcall
push
lahf
cli
popa
lahf
dec
or
daa
popf
outsl
lret
movsb
pop
jo
scas
subl
sub
fadd
or
jne
test
outsl
cmpl
push
idivl
std
push
dec
imul
sub
stc
sbb
xchg
jle
arpl
mov
xor
inc
push
outsb
xlat
js
dec
jne
add
lret
inc
stc
nop
popa
inc
imul
dec
jge
push
frstor
jns
jle
aaa
js
add
hlt
mov
fnstenv
loopne
and
lret
push
xor
fs
fists
sbb
les
mov
movsb
cmpsl
jg
out
cmp
arpl
sub
mov
or
scas
jnp
stc
sub
jns
pop
addl
xlat
or
jo
lea
loopne
push
rol
es
ljmp
mov
out
movsl
outsb
subl
cmpsl
mov
pop
in
popa
pop
bound
inc
xor
pop
mov
test
and
int
pop
sti
pop
dec
das
insl
push
int
iret
mov
jl
iret
fidivs
adc
sub
and
out
stos
dec
ja
or
inc
add
mov
mov
pusha
clc
jb
in
pop
xor
imul
jecxz
jge
aad
xlat
xchg
lds
testb
jns
xchg
data16
pop
add
lret
push
out
enter
add
xchg
adc
mov
lret
jmp
bound
rclb
inc
nop
int3
adc
scas
jl
mov
add
movsb
insl
inc
pushl
enter
dec
inc
xchg
push
test
fwait
mov
divb
aaa
test
lret
mov
push
xlat
push
scas
xchg
xchg
es
push
scas
call
inc
dec
mov
enter
dec
push
cmp
adc
sub
adcl
and
fs
inc
push
jo
out
adc
dec
int3
push
sub
and
repz
pop
ss
fnstsw
out
xchg
pop
jle
call
push
in
nop
and
pop
sbb
loop
add
sahf
cmp
adcl
or
lock
xchg
cmp
mov
xchg
cmp
pusha
inc
add
sub
add
sub
cmp
int
jb
sub
xor
imul
xchg
add
cltd
outsb
push
cli
add
push
mov
mov
cmp
push
int3
or
xchg
or
mov
inc
or
fldenv
jbe
cmpsb
and
dec
imull
adc
int
mov
mov
inc
mov
xor
and
mov
in
inc
mov
pop
loope
sbb
or
and
ljmp
sahf
cwtl
outsb
loopne
jae
inc
out
leave
enter
add
adc
gs
or
push
jo
je
mov
ds
push
lock
fdivs
stos
add
in
sub
sti
mov
repz
xor
idivl
lcall
ljmp
dec
cld
or
pop
pop
addr16
outsb
sbb
mov
fildl
mov
add
ret
fsub
iret
in
fstpl
subb
sub
lods
jb
inc
or
xor
aaa
mov
out
addr16
add
out
lret
test
rclb
push
lret
in
out
negb
push
loopne
loopne
adc
adc
or
sahf
imul
or
popl
adc
in
inc
divl
mov
sbb
icebp
mov
stos
mov
jge
fucom
rcrl
mov
mov
out
mov
enter
push
adc
std
push
xchg
out
mov
dec
popf
jb
adc
mov
cmpl
push
pop
insl
add
je
xchg
out
imul
int
mov
jae
ljmp
jecxz
lret
movsl
mov
and
and
pop
rsm
scas
movsl
inc
aas
dec
ljmp
int3
xchg
sub
ret
rorl
stos
test
or
add
cwtl
shrb
add
push
loope
or
or
nop
sub
push
aas
jecxz
pop
aad
xchg
cmp
loopne
stc
jb
and
cltd
aad
push
dec
cwtl
fcoms
loope
mov
out
cld
test
lcall
pop
sub
and
in
jbe
adc
and
in
fcoms
pop
adc
sbb
shlb
data16
sub
push
insl
dec
mov
push
and
sub
shll
fbstp
add
fsubrl
loopne,pn
pop
mov
sbb
pop
cmp
iret
and
repnz
push
fs
lods
push
push
imul
roll
das
jae
add
mov
dec
mov
push
pop
ja
fwait
pop
test
lods
out
xor
pop
push
pop
and
mov
out
mov
cwtl
leave
divb
dec
push
mov
dec
sub
push
hlt
dec
push
in
rcr
and
sahf
imul
loope
xchg
sahf
jno
dec
iret
gs
inc
ja
jno
stos
sti
push
aam
insl
movb
cmpsb
or
testb
cmp
fld1
rorl
insl
clc
cs
test
fisubrl
xchg
dec
sub
jle
test
ror
pop
repz
xchg
adc
inc
push
rcll
dec
jle
test
or
xor
addr16
xchg
or
ljmp
enter
cld
jae
in
into
stos
fadds
fsts
test
dec
stos
nop
lods
mov
xchg
aam
repnz
pushf
mov
sub
in
or
pop
mov
push
xchg
bound
mov
into
pop
adc
test
xchg
out
pop
xchg
jbe
in
sub
xchg
xor
cmc
sub
bound
mov
fbstp
sub
loopne
test
dec
adc
dec
lds
xor
jl
insb
sbbl
push
mov
push
jno
rcll
shlb
mov
test
cmpsb
sbb
shlb
push
xlat
xor
movsb
fdiv
xchg
roll
xchg
jmp
mov
es
dec
cmpsb
test
mov
cld
dec
and
movsb
ja
and
mov
punpckhbw
sbb
dec
sub
pop
addr16
or
xchg
mov
addr16
sbb
pop
stc
or
pop
cmp
adc
inc
aam
mov
sbb
adc
popa
adcb
xchg
in
daa
bound
jo
rcr
rorb
mov
mov
jne
push
ja
mov
xlat
std
mov
fsubrs
push
jns
xchg
mov
in
insb
jp
push
lods
adc
fildl
sahf
cmpsb
cmp
xchg
andb
in
mov
int
pop
push
scas
rcll
mov
add
inc
lea
jl
inc
xorb
jle
mov
jno
push
mov
dec
es
inc
mov
push
inc
sarl
jmp
jno
pop
xchg
xchg
cmp
mov
negb
push
jmp
jg
mov
cld
cmp
sub
roll
and
cmpsb
adc
inc
add
subb
xor
pop
addl
pusha
pop
pusha
dec
jae
out
fwait
adc
jge
dec
dec
mov
mov
dec
clc
adc
mov
jmp
int3
xor
xchg
adc
pop
jecxz
pop
jmp
push
mov
cmc
testl
adc
bound
out
jle
mov
pop
aas
sub
popa
pop
sbb
pop
push
add
std
dec
mov
loopne
popf
mov
push
mov
sbb
xchg
aas
int
or
movsl
popf
sub
testl
pop
fwait
add
xor
adc
pop
fnstenv
jnp
das
arpl
xchg
gs
and
in
jle
out
dec
dec
pusha
sbbl
jno
test
and
and
lcall
cmc
push
jmp
jmp
in
jg
pop
call
cmp
add
mov
adc
push
pop
nop
lcall
jl
shrl
fwait
mov
out
sbb
mov
cmp
mov
xor
sbb
mov
int3
mov
lods
ja
movsb
xor
test
loope
add
jb
lahf
jnp
sbb
repnz
add
in
clc
gs
nop
or
mov
out
mov
sub
decl
pop
mov
and
xchg
fistps
sbbb
mov
test
mov
iret
std
adc
fistpl
jge
fwait
bsr
cwtl
outsb
notl
sub
cmc
push
push
insl
and
hlt
sahf
sbb
test
mov
pop
imul
mov
in
cltd
movsl
in
movsl
mulb
adc
sbb
aas
adc
and
mov
mov
sbb
mov
imul
loope
iret
fmuls
sbb
loope
cmp
mov
dec
inc
inc
ret
xor
jecxz
pusha
inc
cli
mov
cwtl
scas
mov
pop
cmp
xor
daa
es
imul
pop
rorb
xor
add
adc
or
sbb
jmp
repz
sbb
cmp
cli
lret
or
mov
mov
shrl
out
fldln2
mov
push
pop
sbb
sub
mov
faddl
loopne
pushf
mov
cmp
jge
sbb
std
je
sub
mov
popa
push
jae
adc
mov
sbb
ret
outsl
pop
sbb
ret
pop
xor
and
movsb
cmpsl
rcll
xor
lret
jle
out
jp
jge
fs
fidivl
loopne
shlb
fld
xor
adc
stos
mov
jno
xor
sub
and
nop
add
stos
adc
sbb
pushw
nop
jmp
jo
movsl
pop
cmpsl
adc
jle
pop
or
std
bound
cltd
cmpl
sarb
lds
popf
sub
jmp
popa
jmp
jo
out
or
jp
mov
jmp
push
jge
and
cmp
cmp
jp
out
xchg
jno,pt
orb
in
ds
xchg
cs
mov
std
pop
cmpsb
pop
inc
cs
enter
xorb
mov
or
lods
jnp
dec
popf
cmpsb
inc
mov
adc
adc
dec
scas
out
mov
mov
xor
mov
ja
int3
orps
cmpsb
cmp
add
xchg
cltd
sub
addr16
loop
mov
jg
nop
nop
scas
add
jg
xor
imul
sub
outsl
mov
jnp
lea
pop
or
cmp
stos
mov
mov
test
aas
jp
inc
inc
sarb
insb
cmp
jg
push
aas
or
adc
mov
mov
push
sti
add
xchg
xchg
movsl
sub
jecxz
jge
sbb
outsb
mov
in
call
xchg
mov
xor
or
test
jle
xchg
stos
sub
mov
or
mov
cwtl
dec
mov
movsb
xchg
in
daa
outsl
aam
cmp
push
std
mov
dec
push
add
sahf
mov
adc
xor
test
lcall
lret
mov
loope
pushf
aas
sahf
or
push
pop
mov
push
push
and
roll
jno
xchg
xchg
xor
inc
aad
jg
add
mov
push
and
aas
jo
xchg
negl
xchg
in
lret
mov
cmp
xchg
inc
adc
outsl
popl
xchg
add
movsb
data16
das
fcoms
jns
push
mov
push
or
xchg
push
jno
mov
int3
pop
ja
or
ret
cltd
xchg
pop
jno
mov
push
fiadds
mov
icebp
mov
out
ret
sarb
insb
in
xchg
xchg
repz
or
adc
fsubs
clc
fmulp
pop
push
lret
out
sahf
aam
xchg
cmpsb
xchg
sbb
fmuls
sbb
stc
mov
icebp
sub
mov
test
nop
lret
xlat
repnz
dec
mov
push
cld
arpl
test
cmp
jge
mov
inc
out
out
pop
dec
mov
xor
xchg
jo
xor
fcmovnb
jnp
insl
mov
test
mov
mov
sbb
das
mulb
dec
int3
pop
and
inc
stos
iret
pop
mov
dec
xor
imul
cmp
test
dec
lahf
push
push
inc
fsts
inc
push
xchg
lea
or
sub
enter
add
mov
ret
add
pop
ret
or
mov
loope
xchg
jl
imul
insl
loope
in
pop
rcr
mov
xchg
fistl
cs
sahf
jp
jae
jecxz
inc
lods
lods
les
sub
cwtl
xchg
imul
ljmp
jecxz
cmpsl
adc
rorl
int
lods
xchg
dec
fidivs
mov
lcall
jo
daa
push
pushf
xchg
arpl
inc
mov
xchg
mov
ds
and
ljmp
adc
fstpt
fisubs
add
mov
nop
test
or
ja
jbe
sbb
mov
push
inc
sub
jmp
lcall
pop
sbb
fisubl
add
cmpsb
dec
stc
loopne
jp
mov
popf
mov
cmp
and
push
lods
cmpsl
test
movsb
cmpsl
stos
and
dec
das
test
add
sbb
inc
ss
cmc
pop
outsb
ja
pop
repnz
jae
lods
dec
jbe
adc
jbe
icebp
test
adc
test
inc
jecxz
push
rolb
xchg
xchg
or
cs
aas
leave
mov
xchg
add
or
jo
mov
mov
mov
das
xchg
push
and
stos
xor
scas
xorb
insb
inc
addb
es
fwait
xor
pop
xrelease
iret
stos
aam
in
in
jge
loop
xchg
mov
leave
popl
mov
cltd
add
movl
cmp
movsl
mov
push
push
lock
je
xor
inc
add
cld
lock
out
or
mov
pop
in
scas
repnz
pusha
inc
adc
mov
aam
jns
dec
scas
xor
int3
add
mov
mov
xor
test
push
jg
push
pop
pop
inc
ja
in
or
mov
sub
sub
xchg
addr16
sbb
cli
mov
cmpsb
dec
push
test
cli
in
lods
inc
mov
imul
out
out
sub
mov
and
adc
mov
aad
bndldx
movsl
inc
xor
leave
popa
push
or
sub
movsb
push
ror
add
cmp
jo
faddl
dec
lret
adcb
push
iret
fiaddl
mov
pop
mov
in
xor
adc
sub
in
xor
pop
aas
dec
adc
div
movsl
pop
and
push
cmc
sarb
dec
cmp
jae
and
cmpb
out
mov
and
push
aad
out
aas
icebp
cs
add
fwait
sbbb
cmpsl
mov
adc
daa
fnstsw
xchg
xchg
dec
test
icebp
or
dec
adc
cli
pusha
sbb
cld
stos
and
sub
rorb
shlb
sub
lahf
mov
in
jl
push
sub
int
dec
test
xor
jo
into
rorb
cld
jle
sub
xor
xor
lahf
inc
popa
adc
sbb
sbb
repz
iret
add
adc
fwait
sub
or
addr16
mov
testb
movsl
test
in
add
out
push
cwtl
adc
sbb
mov
in
stos
dec
in
leave
dec
push
pop
fiaddl
mov
sbb
mov
daa
mov
test
or
cmpsl
repz
xchg
inc
push
jl
int
and
out
movb
test
decb
dec
adc
cmp
ret
jne
faddl
mov
add
in
cmpsb
or
cmovp
stos
in
out
pop
int
ficoms
out
divl
js
mov
dec
outsl
adcb
jg
jmp
sbb
dec
add
clc
dec
cmp
pop
xor
ss
out
push
mov
sbbb
push
ds
jl
lods
sub
arpl
jmp
cmp
jbe
sub
insb
mov
xor
arpl
fcoms
fwait
lods
enter
clc
fwait
and
mov
cmpsb
and
and
adc
mov
xor
push
mov
aad
or
out
out
dec
icebp
fcomps
aam
adc
in
adc
out
cmp
xor
xor
mov
jle
repz
or
int
shrl
out
mov
dec
mov
int3
stc
jecxz
jp
mov
xor
movsl
shlb
movsl
xor
lea
loope
push
xchg
inc
repz
fucom
stos
jae
sbb
sub
testl
mov
insl
pusha
or
xor
out
sbb
pushf
sub
and
push
jmp
cmpl
cs
ret
xchg
push
jnp
daa
dec
cli
push
cmc
mov
sub
rol
iret
xchg
dec
mov
sub
lahf
sub
notl
pop
mov
aaa
inc
and
test
sbb
arpl
push
xorl
sbb
mov
out
fisttps
jle
pushf
pop
jecxz
xor
sub
test
call
ret
jae
aas
data16
insb
mov
push
fsts
mov
shrl
xor
push
or
leave
jge
stos
call
push
mov
xor
xor
pushf
shlb
push
xchg
cli
add
push
aam
scas
mov
repnz
and
pop
jecxz
adc
pop
sbb
jne
sub
call
mov
add
dec
outsb
jnp
mov
aam
out
dec
and
jbe
in
int3
clc
add
cs
and
xchg
cmp
xlat
jo
xchg
dec
rcrl
addr16
inc
aam
out
iret
cmp
inc
cmc
fdivr
mov
push
mov
mov
fwait
out
ja
ja
or
jo
outsl
xchg
pop
cmp
dec
andl
inc
rcrb
lret
fs
out
or
icebp
mov
insb
pop
jno
or
xchg
pop
adc
bound
fists
mov
rolb
jg
icebp
das
aam
cld
movsl
pop
data16
add
scas
xchg
lods
adc
mov
lods
mov
jb
faddp
lock
or
mov
inc
mov
and
aas
pusha
imulb
lahf
insl
cmp
push
mov
dec
mov
xchg
mov
add
out
shrl
xor
aam
shlb
in
ja
fwait
addr16
gs
jno
mov
outsb
or
js
arpl
lods
std
lahf
push
add
insb
arpl
push
jo
add
ss
sbbb
mov
nop
sbb
sti
jb
mov
js
movsl
mov
mov
mov
dec
xchg
push
movsl
lahf
lret
int
mov
push
scas
les
stc
fdecstp
imul
scas
xchg
xchg
xor
sbb
xchg
repz
repnz
cld
cmpsb
rcrb
mov
inc
repz
inc
or
jp
mov
xor
xor
fdivrs
stc
pop
jae
xorl
mov
or
push
les
sarl
cmp
xchg
jns
sub
cmp
fdivl
div
xchg
xchg
vmulpd
js
lock
jl
mov
scas
je
cmp
and
inc
mov
ss
mov
ss
mov
shlb
ret
or
sahf
jae
cmp
xchg
xor
pushf
xchg
and
mov
nop
inc
mov
gs
clc
stos
out
sahf
mov
lods
popf
sub
sti
or
sub
pop
or
push
in
sub
jmp
xor
fs
gs
ds
es
cwtl
fcmovne
arpl
xlat
fscale
shll
scas
add
pop
data16
inc
sbb
lea
jnp
mov
xchg
rcl
dec
mov
aas
bound
mov
ret
call
inc
jle
pop
jecxz
int3
addb
scas
xchg
icebp
cmp
fwait
xor
sub
aad
bound
adc
sti
icebp
add
stc
dec
and
dec
je
fstl
add
sub
dec
lret
in
adcl
add
rcll
mov
cmp
bnd
mov
adc
cmpsb
pop
movsb
dec
mov
sar
jg
outsl
pop
int
jb
in
test
xchg
and
push
pop
fadd
sbb
rorl
pop
in
insl
jmp
fimuls
xor
push
jae
outsl
scas
cmp
lock
mov
push
addr16
push
aas
mov
sahf
cwtl
push
xchg
xor
outsb
mov
sbb
sub
scas
push
gs
pop
dec
fisttpl
jg
mov
loop
inc
cs
adc
jle
lds
cwtl
in
js
test
pusha
ja
enter
mov
clc
jmp
popa
dec
cli
int3
adc
arpl
in
enter
pop
cmpsl
sub
mov
push
loope
inc
pop
mov
enter
xor
jecxz
vpaddusb
dec
jle
mov
repz
daa
test
std
mov
add
mov
cwtl
pop
jmp
inc
and
inc
jge
push
push
push
jge
cmp
cltd
mov
sub
xor
xor
cs
or
andb
push
outsl
push
nop
lret
out
mov
popf
mov
scas
push
and
mov
pop
cltd
jmp
mov
jo
mov
les
outsb
lods
xor
sbb
pop
or
dec
ffreep
jne
inc
cwtl
mov
xor
pop
lods
push
adc
or
push
dec
inc
mov
pop
aad
movsb
pusha
in
push
mov
push
outsl
dec
inc
or
test
adc
sti
scas
sbb
sbb
push
hlt
mov
mov
sub
mov
mov
adc
insl
and
xchg
enter
sbb
push
add
mov
sub
das
test
enter
sub
push
loopne
fsubs
gs
push
jb
inc
sub
push
sbb
call
jb
xchg
add
or
cli
movsb
cld
pop
aas
imul
mov
pop
fnstsw
mov
insb
jecxz
popf
es
ss
gs
shll
inc
shlb
and
sbb
inc
lods
jecxz
and
push
push
sti
lods
aad
ret
dec
pop
das
ljmp
icebp
sbb
xor
test
xor
mov
outsb
sub
sub
cwtl
lock
jg
ljmp
or
mov
je
insb
adc
mov
mov
inc
mov
dec
adc
daa
outsb
and
cmpsl
mov
negb
or
mov
xor
iret
dec
or
dec
pushf
dec
xor
lea
imul
iret
jmp
cmp
popa
push
xor
cld
mov
or
mov
sub
dec
sahf
cmpsl
jmp
stc
xchg
ds
jp,pt
adc
stos
push
or
aas
test
mov
lds
in
popf
pop
test
push
fnstsw
out
fsubs
or
shll
adc
mov
xor
inc
int
and
popa
lcall
sub
add
mov
clc
repnz
cmc
lock
sub
jge
mov
mov
dec
ret
push
push
in
sub
sub
cmc
or
push
adcb
clc
or
loope
rcrb
loopne
rcl
out
sti
iret
dec
stos
andl
cltd
xchg
outsb
xor
movsl
sahf
loope
jb
or
xchg
fistpl
xlat
add
or
cwtl
leave
loope
cmpsb
mov
fdivrp
inc
pushf
sbb
enter
mov
cmp
cli
clc
mov
push
xor
ret
push
data16
in
jne
mov
mov
outsb
cli
outsb
fsubs
xor
jg
scas
adc
ret
sahf
in
out
ret
xor
add
test
xchg
out
cltd
adc
arpl
int
mov
aas
inc
mov
call
sbb
bound
xorl
aaa
sbb
xchg
and
pop
mov
adc
jbe
pushf
pop
lea
lds
rcl
iret
fucomi
and
fsubrl
mov
popa
or
sti
mov
lahf
pushf
xchg
pop
cs
dec
ret
stc
inc
and
jle
mov
push
jg
out
call
fists
lret
push
mov
imul
sbb
sub
ljmp
iret
jg
add
ss
jo
cmp
jbe
inc
mov
cmp
lcall
aam
in
fdivs
inc
popa
dec
outsb
cltd
repnz
dec
clc
mov
shll
sbb
cmp
adc
cmpsl
fildll
pop
js,pn
xor
ret
lahf
sub
xor
iret
xchg
sahf
or
pop
ret
out
cmpsb
jbe
mov
aad
outsl
and
cmpsb
sbb
mov
aaa
fidivrs
int3
testb
mov
clc
lds
loope
iret
mov
outsb
jg
iret
mov
loop
sbb
push
inc
sbb
mov
int
test
and
mov
jle
push
jecxz
aad
push
repnz
sub
or
dec
cmc
lods
outsb
jo
fcoms
adcl
sahf
or
mov
test
push
sub
mov
push
inc
outsl
cltd
int
fdivrp
into
scas
cld
ja
push
movsb
sub
je
test
clc
incl
cwtl
in
scas
rorb
js
adc
sub
dec
cmp
jns
xchg
mov
xchg
sarb
sbb
cmp
testl
and
iret
xor
imul
fadd
jg
movsl
xor
inc
jno
je
lret
and
mov
fdivr
mov
cmp
and
xor
in
cmp
hlt
pop
sbb
adc
pop
adc
and
mov
mov
ss
xor
rcll
sbb
cmpsl
push
js
mov
pop
add
push
mov
push
outsl
cmp
in
adc
test
or
mov
outsl
dec
das
mov
jo
push
or
lock
push
addl
inc
cmp
mov
xor
jmp
sahf
imul
dec
xchg
mov
insl
xor
jne
outsl
adc
push
dec
sbb
repnz
aad
adc
lret
adcl
xchg
das
cwtl
push
mov
test
std
clc
insl
jecxz
setns
std
repnz
jmp
jb
icebp
gs
in
and
xchg
adc
fstpt
fistpl
shll
jp
repnz
or
or
std
fadd
adc
or
mov
sbb
pop
inc
arpl
jbe
les
pop
xor
or
jno
mov
sub
sub
pusha
inc
jge
fidivrl
bound
js
mov
add
dec
lahf
mov
xchg
push
or
loopne
jne
xorb
cld
test
xor
mov
out
inc
repnz
jecxz,pt
jge
jle
out
frstor
pop
imul
in
imul
int3
lock
int
inc
loope
stos
sub
and
push
fisttpll
dec
hlt
std
popf
sub
jno
mov
fnstenv
push
arpl
push
sub
imul
fistpl
xor
xchg
inc
mov
stos
mov
push
sahf
or
cmp
insb
out
jo
in
and
or
and
adc
stc
and
inc
cmpsb
add
and
push
out
scas
pushf
mov
push
add
mov
mov
sub
cs
test
sub
pop
dec
dec
dec
imul
mov
aas
xchg
ss
pop
fisttpll
and
or
mov
fcomp
shlb
cli
test
push
das
xchg
int3
mov
dec
pop
and
mov
mov
jecxz
add
das
loope
test
stos
adc
or
push
push
cld
dec
decb
lcall
dec
hlt
push
clc
dec
sub
push
in
cmpsb
mov
jmp
mov
mov
lds
repz
lcall
mov
stc
xchg
popa
sub
dec
and
push
fists
adc
adcl
and
lods
pop
pop
js
adc
cmp
fs
adc
loope
inc
sub
cmc
adc
dec
xchg
push
or
add
ds
add
cmp
ret
lods
inc
xor
mov
sti
xchg
cwtl
popa
xchg
jge
adc
sub
add
push
mov
xchg
loopne
hlt
test
push
imul
outsb
aam
or
ljmp
lcall
xchg
cmp
roll
sti
xchg
and
daa
mov
push
cmp
in
dec
aaa
jb
cmp
pop
ret
mov
xchg
and
jb
popa
lahf
add
lret
imul
pop
nop
jno
mov
pop
adc
loope
ret
je
xor
cld
dec
cmp
nop
adcb
nop
dec
xor
push
and
lock
inc
cwtl
stos
cmpsl
jp
outsl
or
in
cmp
jle
mov
subb
jecxz
adc
jp
jle
mov
sahf
jg
cmp
into
movsl
leave
das
jg
xor
dec
inc
dec
mov
jbe
sbb
in
sbb
jbe
and
in
add
mov
pop
lock
popw
incb
push
in
jmp
mov
mov
push
push
mov
test
inc
dec
fildl
dec
lds
mov
popl
xor
stos
pop
mov
in
cmp
mov
xor
push
int
jno
lock
dec
mov
call
xchg
insb
sub
dec
pop
sbb
test
or
fdivrs
cmp
push
mov
call
push
scas
jae
ret
into
int3
push
mov
iret
loop,pn
dec
and
iret
cld
cmp
mulb
pop
dec
sbb
xchg
lahf
pop
cld
inc
push
or
add
mov
adc
dec
mov
call
sub
xor
ret
aaa
insl
popa
jb
imul
packuswb
xchg
inc
add
leave
sub
xor
push
dec
cwtl
cmpsl
lret
fdivrs
sbb
imul
jp
stos
pop
aam
lahf
push
adc
sbb
add
cmp
sub
cmp
ja
out
jae
dec
int
ljmp
xor
mov
aas
popl
inc
inc
mov
jge
xchg
lods
fisubs
gs
andl
fstps
push
fldenv
movsb
or
and
xor
nop
inc
iret
mov
js
shrb
push
pop
out
sbb
add
xorl
or
lods
pushf
jo
xor
jmp
in
jb
out
in
sbb
sbb
aaa
xchg
xor
push
fldt
es
jne
push
inc
mov
jb
popa
mov
jae
mov
cltd
adc
ja
jge
xorl
mov
sbb
popa
incl
push
xrelease
loope
inc
shll
dec
cs
mov
adc
scas
lea
cmpsl
xor
imul
xchg
and
push
push
stc
into
pop
xchg
stos
xlat
loopne
out
sub
pop
rcrb
fisttpll
xchg
ljmp
int
dec
mov
adc
enter
ret
pop
jge
lret
mov
xchg
stos
iret
jno
dec
jle
sbb
xor
xor
push
jg
jl
enter
popa
mov
pop
fdivrs
mov
lock
jno
dec
mov
stos
xor
mov
out
xchg
lret
movsl
xchg
out
jno
inc
bound
inc
rorl
aaa
mov
sub
sub
stos
iret
push
aaa
inc
in
in
jge
xor
cmp
not
xchg
das
jno
cs
rcl
decb
or
pop
shlb
cmpl
sub
adc
in
inc
adc
lock
push
mov
fistpl
mov
inc
arpl
mov
js
fs
inc
mov
es
leave
push
sub
addl
f2xm1
xor
addr16
xlat
mov
mov
int3
mov
lds
push
lods
jns
pusha
mov
aaa
fldt
into
fcom
dec
xchg
cs
dec
adc
fstpt
scas
in
dec
lcall
mov
adc
mov
loop
add
pushf
or
cmpsl
add
and
js
add
mov
mov
out
fdivs
inc
je
sti
repz
pop
push
seta
mov
xchg
lret
mov
addl
lcall
jo
clc
imul
mov
fadd
inc
test
inc
sahf
subb
arpl
rcl
inc
add
jo
outsl
sbb
into
cltd
popa
cmpsl
sbb
lock
in
mov
dec
cltd
lods
mov
fsubr
and
movsb
pop
sbb
sub
out
xchg
cmp
in
pop
add
stos
xor
fsubrl
sub
xchg
pop
scas
xlat
fcoms
data16
jno
test
sbb
pushf
mov
add
cltd
mov
sbb
mov
pop
imul
nop
idivb
mov
jno
mov
lea
sub
sbb
xlat
jmp
jmp
sbb
in
pop
dec
ds
fs
pop
push
outsl
xor
inc
xor
push
mov
inc
push
ret
rcrl
fdivrp
jb
or
rep
fdivl
xor
scas
fidivrs
xor
pusha
out
mov
icebp
xchg
push
lret
cmpsl
xabort
fsts
out
and
push
fsin
cmpsl
lds
call
aam
or
mov
lock
cs
and
inc
stc
mov
and
pop
and
movsl
mov
popf
ret
and
xchg
pop
clc
pop
cmp
and
lret
or
sbb
int
adc
adc
out
test
mov
mov
rcrb
xchg
out
aad
adc
jne
sti
push
ret
iret
insl
jnp
sub
xor
js
sbb
imul
add
sbb
jl
push
testb
movsl
dec
jno
insb
daa
jg
mov
mov
hlt
mov
enter
pop
mov
push
std
inc
je
mov
notb
fcompl
fwait
stos
popa
cs
pop
stc
fdivs
nop
pop
xchg
addr16
sbb
popa
xor
sub
cmp
repnz
dec
cwtl
aam
add
scas
dec
adc
fsubs
add
mov
lea
mov
das
mov
dec
mov
inc
fldl
dec
dec
push
in
push
pop
sub
les
sbb
mov
mov
jb
cwtl
and
sub
inc
mov
or
push
test
int
jae
clc
addr16
nop
add
push
bound
bound
in
adc
lds
outsb
leave
pop
jp
mov
mov
clc
dec
testb
or
call
cli
mov
jecxz
sub
adc
xor
pop
test
jl
inc
testl
inc
mov
xchg
loop
jge
imul
dec
lsl
and
add
out
inc
into
mov
ds
jl
or
mov
mov
jp
jns
ljmp
xor
sbb
fisubs
mov
or
sbb
insl
not
fidivs
or
jle
mov
loope
fisubs
mov
scas
sub
test
mov
loopne
popa
sub
cmp
xchg
lds
or
stos
lea
mov
mov
sbb
in
cmp
mov
jmp
in
mov
xchg
repz
pop
lock
pop
xchg
iret
sbb
push
jge
jge
mov
jnp
loopne
jge
fildll
mov
add
iret
int
and
cmp
lret
fimull
mov
xchg
call
xor
mov
fcmovb
push
and
sti
jmp
jns
scas
jecxz
xchg
jecxz
test
loope
jbe
inc
shr
dec
jge
ja
cmp
pop
repnz
push
bnd
push
movsl
arpl
push
sti
mov
jl
out
daa
adc
mov
push
lods
xor
filds
mov
xchg
inc
sub
scas
mov
ret
hlt
mov
push
pop
jl
or
call
xchg
sbb
mov
mov
dec
xor
movsb
xor
call
mov
lock
sbb
push
mov
add
scas
insb
ljmp
jns
lds
int
popf
push
lds
fwait
adc
push
outsb
sahf
popf
sbb
sub
sub
sub
jl
pop
scas
mov
or
or
or
mov
lret
xor
and
mov
fcoms
cmp
xlat
shll
adc
pop
xchg
xchg
sub
out
cmp
out
jno
cmp
cwtl
bts
jmp
loope
sub
dec
mov
shll
pop
mov
xchg
lods
sub
xchg
and
andb
in
push
dec
test
or
aad
arpl
or
inc
inc
enter
push
lods
sub
and
mov
pop
out
clc
cmc
scas
xor
and
dec
sbb
shlb
daa
aaa
pop
call
xchg
ficomps
push
shrb
mov
mov
outsb
stos
jne
mov
inc
mov
jp
cwtl
lea
roll
mov
adc
lcall
enter
icebp
mov
shlb
inc
xor
in
inc
xor
pop
mov
jg
and
inc
mov
shrl
add
inc
and
jae
or
in
lcall
pop
push
mov
pop
nop
ret
inc
sub
lret
popf
lret
sbb
ficoml
repnz
mov
xchg
or
jns
and
pop
and
pop
add
bound
or
scas
rcrb
cmpsb
vunpcklps
sarb
das
push
divl
fstpt
mov
aam
dec
mov
data16
xorl
push
jbe
jl
jo
test
jo
dec
jnp
push
lock
bound
xor
mov
int
mov
cltd
into
mov
xchg
pop
nop
enter
movsb
lcall
cmpsl
jbe
bound
imul
test
jle
lods
push
div
repnz
lahf
mov
adc
mov
pop
sbb
das
or
push
sub
lock
cmpsb
lret
ds
jp
mov
movsb
cwtl
cmp
inc
pop
lds
mov
aad
lahf
push
int
call
inc
mov
sahf
int
movsl
bound
test
scas
push
int3
dec
repnz
or
test
mov
xchg
aaa
cmp
mov
jmp
fidivl
mov
outsl
sub
or
xor
inc
ret
test
into
in
in
cld
into
outsb
aaa
addr16
xchg
xorl
pop
es
pop
nop
mov
push
push
and
in
sub
js
aaa
cwtl
xorl
adc
fucomp
cmp
jns
push
cmp
cmp
dec
mov
sbb
out
add
xchg
dec
push
sbb
movsl
or
xor
aam
in
push
jne
mov
sbb
xchg
inc
mov
or
and
ljmp
xor
mov
mov
les
mov
insl
sbb
outsl
add
pop
rcl
test
mov
in
jo
sub
stos
push
int3
push
dec
not
lods
repnz
push
les
cmp
psubw
ljmp
cmp
and
xchg
andl
test
mov
ljmp
into
xchg
mov
lcall
sahf
sahf
sbb
adc
aas
nop
push
mov
or
cmpsb
dec
pusha
jne
push
jmp
pop
mov
push
push
jmp
pop
out
xchg
shll
mov
push
push
icebp
pop
leave
pop
test
out
ds
push
xor
push
pop
or
fldenv
imul
add
pop
jnp
xorl
rcrl
and
xchg
mov
push
push
mov
cvtpi2ps
pop
or
test
test
xchg
or
dec
lahf
pop
cmp
in
std
pop
jbe
mov
ret
cli
and
xor
dec
arpl
mov
adc
sub
pop
in
cltd
mov
pop
pop
sbb
lods
imul
imul
xlat
inc
jnp
cs
pushf
inc
sbb
cmp
xor
lock
or
xchg
lcall
pop
aad
sub
mov
in
pop
popa
add
test
xor
ret
hlt
mov
cmp
jb
jmp
lds
xchg
arpl
mov
out
sarl
or
imul
leave
mov
clc
icebp
cmc
xchg
xchg
cmc
cs
push
inc
jmp
adc
xchg
stc
addb
test
xor
sar
lret
adc
sbb
out
push
std
adc
adc
adc
sbb
pop
cmp
cld
out
inc
cli
mov
cmp
mov
xchg
pop
and
pop
out
in
icebp
lret
jp
jge
in
sahf
fistpl
test
jno
leave
imul
push
or
ds
dec
sbb
jmp
scas
outsb
cmp
nop
mov
xchg
cmc
mov
fidivs
or
dec
imul
ret
mov
mov
lods
dec
faddl
fstpt
or
and
sbb
popa
sub
testb
sbb
push
fstpl
movsb
stc
mov
jo
pusha
js
sbb
movsb
es
pop
adc
repnz
push
movsb
pushf
add
cmp
mov
pop
popf
int3
xchg
xchg
dec
xor
jmp
sbb
pop
gs
cmp
mov
inc
pop
sub
test
and
std
in
xor
in
push
mov
mov
inc
sub
sub
xlat
pop
inc
xor
ficoms
inc
mov
iret
cs
and
es
das
cli
cmc
mov
push
popa
jg
mov
inc
lds
mov
lock
test
pop
xchg
jno
pop
or
add
fldcw
test
sbb
movsb
cmpsb
dec
aas
cli
dec
das
push
fcomi
call
jecxz
cwtl
lret
sub
test
xchg
daa
imul
push
push
sub
scas
push
cld
push
pop
pop
mov
aaa
ja
mov
cmp
mov
filds
or
icebp
or
push
les
scas
and
test
or
jmp
sti
lods
mov
out
jp
inc
stos
repz
les
push
push
push
cmpsl
adc
cmpsb
mov
lret
xchg
pop
cmpl
imul
and
mov
les
mov
lds
mov
lret
jns
mov
push
push
out
dec
imul
cmp
cwtl
jecxz
xor
inc
mov
inc
lock
push
cld
lcall
imul
or
outsl
sti
lock
jo
ja
movsl
jbe
sbb
sbb
add
or
add
hlt
sahf
mov
js
lea
add
lahf
xchg
aaa
xchg
loop
hlt
pop
sti
shll
push
add
jne
out
push
ds
popa
push
jo
arpl
cmp
mov
mov
add
bound
icebp
jl
ret
test
push
mov
cmpb
je
inc
xor
inc
lea
out
clc
xchg
loopne
and
mov
leave
call
push
cld
adc
add
movb
mov
aad
fs
mov
pop
xorl
in
sbb
jl
xchg
inc
adc
imul
loopne
lds
nop
xor
loop
sti
aad
add
or
popf
jo
jle
stos
jg
gs
sarl
jg
fidivrs
push
addr16
pop
jl
adc
das
addr16
mov
div
inc
and
shrl
lods
repz
outsl
daa
clc
cli
sbb
mov
xchg
lods
cmp
dec
push
test
mov
adc
les
in
push
sti
mov
shlb
es
loop
push
scas
ret
lods
sarb
xor
shlb
out
sbb
nop
inc
call
or
adc
daa
sbb
inc
leave
dec
xchg
and
pop
xchg
add
bnd
sub
xor
cmpsb
push
sbbl
push
push
fdivs
scas
or
lea
pop
pop
cmpsl
push
jo
test
dec
jno
push
or
shlb
pushf
call
sbb
sub
mov
bound
cmp
jp
jbe
mov
inc
scas
and
jnp
jecxz
sub
pop
add
in
mov
add
push
subb
xor
dec
adc
xchg
xor
xor
repz
push
rcr
add
cltd
push
pop
pop
add
xchg
loop
mov
pop
sahf
cmp
or
xchg
int3
inc
in
jmp
xchg
mov
lahf
cmp
mov
std
push
mov
xor
in
xchg
xchg
cli
xor
das
fwait
imul
dec
je
mov
xchg
cs
mov
cmpsl
and
pop
cmp
mov
jmp
and
jge
mov
pop
jp
and
adc
mov
or
push
stos
mov
push
sbb
jp
dec
es
adc
outsl
and
mov
and
test
mov
dec
in
cltd
xchg
jecxz
in
and
dec
arpl
mov
and
push
xchg
mov
xor
rcr
repz
test
add
ret
push
jns,pn
ret
ja
mov
jne
sarl
hlt
aam
sbb
fucomp
subb
imul
sahf
sub
xor
dec
inc
std
push
je
test
filds
sti
and
push
pop
jmp
ret
add
fdiv
pop
inc
stc
flds
or
enter
and
cmp
xorl
test
sub
pushf
or
xor
cmp
fldcw
addr16
outsb
xchg
loopne
aas
pop
sub
add
les
shll
fnstsw
jo
jge
int
ret
cmp
xchg
cmpsl
jmp
pop
sbb
dec
xlat
mov
fdivl
sahf
push
inc
or
xchg
cmpl
fmuls
mov
fnsave
dec
or
out
xor
jb
lcall
js
lea
les
sahf
pop
pushl
xchg
leave
sub
dec
xchg
ret
inc
inc
or
cmp
rclb
xchg
ret
in
mull
dec
add
pop
nop
lods
repz
scas
sub
int
nop
dec
out
lea
leave
test
mov
movsl
aaa
outsl
xchg
mov
or
in
add
sub
xchg
addr16
loop
loopne
xchg
fld
jnp
jle
jecxz
lcall
xor
testl
rcrl
inc
in
mov
push
fisttpl
pop
rcr
ret
jb
and
aas
mov
inc
jns
xchg
jecxz
das
and
mov
xchg
xchg
pop
dec
dec
fs
lret
jae
push
or
lret
lea
enter
pop
push
popl
xchg
dec
insl
fmull
enter
sub
dec
xlat
add
cwtl
pop
cmpsb
xor
cld
jno
gs
sahf
jl
popa
sahf
testb
leave
leave
flds
js
rorl
xlat
lock
test
xchg
loopne
sbb
xchg
dec
imul
pushf
imul
pop
shl
loope
mov
ds
cmp
gs
mov
mov
dec
test
fdivrl
scas
xchg
rcr
fiadds
cltd
xor
push
scas
cmp
fcomp
das
pop
call
outsl
sbb
jnp
pusha
dec
jne
push
icebp
dec
sub
insb
aam
mov
dec
sarl
pusha
xor
aaa
pop
clc
push
pop
inc
imul
out
mov
sub
dec
push
mov
and
es
std
into
pop
cmp
insb
pushf
movsl
ficompl
sbb
movsb
aad
jns
mov
cmp
aas
jno
lret
jns
jno
push
adc
push
adc
or
rolb
cmp
rcrl
xlat
xor
pop
mov
sub
and
fldl
in
fdivrp
add
aas
xor
pop
test
test
bound
lretw
pop
ja
out
sub
test
mov
or
pop
push
mov
ljmp
lds
repnz
ljmp
add
arpl
lret
mov
cmp
jl
les
push
mov
iret
jmp
jns
xchg
dec
add
fldl
add
cmp
xchg
pop
fimull
or
pop
push
push
xor
fwait
xor
push
outsb
out
lock
push
gs
out
jbe
ror
mov
add
mov
jl
fisubs
aas
popa
adcb
or
push
repz
inc
test
xchg
les
dec
sbb
dec
sub
imul
call
mov
hlt
and
mov
pushf
data16
orl
cld
daa
mov
sbb
add
sbbl
ret
sbb
push
xchg
data16
clc
jle
sahf
sub
lock
jl
popa
and
fisubl
enter
fimuls
data16
cmp
jl
call
insb
sbbb
mov
sbb
ds
mov
mulb
lret
mov
push
adc
xchg
push
inc
xchg
jo
sahf
mov
inc
push
inc
fcoml
jne
jno
inc
adc
testb
data16
fmull
lock
or
push
pushf
rcll
mov
jo
dec
cmpsb
clc
call
in
mov
dec
js
adc
inc
nop
mov
inc
xor
xlat
aam
cmp
cmp
push
xchg
pop
pop
dec
stc
inc
in
cwtl
jne
loope
repnz
dec
jg
jl
sbb
add
xchg
dec
jp
and
cld
jnp
or
sbb
filds
leave
dec
mov
pop
in
test
mov
xchg
jae
sbb
mov
push
aaa
pop
adc
cmp
mov
push
stc
cld
in
mov
xor
sahf
mov
aam
loope
inc
iret
jae
adcl
mov
inc
or
or
out
adc
addb
xor
stos
fisttpll
pusha
push
das
pop
aad
sub
leave
int3
cli
sti
pop
lods
or
cltd
dec
jecxz
adc
test
push
mov
sbb
xchg
dec
jns
mov
mov
enter
sbb
adc
sbb
int3
je
cli
xor
pop
xchg
dec
arpl
js
nop
sbb
mov
lret
and
mov
sbb
pushf
or
xchg
mov
mov
pop
repz
jle
rcll
and
adc
fimuls
arpl
sbb
mov
sbb
ja
ljmp
or
rcl
push
idiv
jmp
clc
dec
jg
push
inc
cmp
dec
mov
push
test
or
mov
sbb
cltd
cmc
sbb
divl
pop
aad
mov
mov
mov
add
jecxz
dec
dec
cmp
nop
negl
pop
stos
add
add
pusha
rcr
fnstcw
cmp
out
push
popa
lret
or
and
ss
clc
add
daa
mov
out
sbb
adc
sub
inc
movsl
movsb
push
jns
loopne
or
int3
pop
sarb
jo
inc
cli
pop
jns
xor
mov
es
fnstenv
or
add
data16
pop
or
loopne
mov
fisubrs
mov
fidivrs
sub
mov
xchg
dec
test
mov
aas
mov
inc
or
push
push
test
aad
mov
jmp
loop
imul
lods
aam
scas
add
mov
cmp
or
in
jne
mov
dec
jg
push
jmp
xchg
test
xchg
out
dec
hlt
pop
negl
ftst
pushf
jp
cmc
leave
pop
loope
mov
xchg
xlat
movsb
dec
push
jno
out
mov
add
xchg
sbb
jnp
jbe
mov
push
clc
add
pextrw
pusha
movsl
or
sbb
imul
mov
xchg
out
add
outsl
mov
pop
add
mov
and
bound
fwait
xor
mov
mov
les
movsb
push
inc
pop
push
hlt
mov
cmp
out
pop
pop
cmpsb
mov
fwait
push
add
out
imulb
ret
lods
pop
clc
add
mov
je
xor
ret
or
xchg
push
test
pop
inc
xor
xchg
pop
xchg
insl
inc
adc
ret
loopne
or
pop
mov
cmpsl
lods
pop
in
lret
movsl
add
popa
push
testl
push
push
pop
jno
mov
pop
add
stos
clc
fcmovu
lods
repz
jbe
xchg
xor
sahf
stos
pop
dec
fldcw
mov
mov
push
daa
push
pop
repz
jno
jb
test
fildll
ss
pusha
mov
mov
sbb
ljmpw
fiaddl
xor
int
nop
xchg
lods
nop
sbb
sbb
sbb
dec
ret
cld
cli
jle
jl
cmp
test
rclb
shl
xor
push
repnz
push
mov
lods
test
outsl
push
pushf
icebp
add
int3
adc
pop
dec
lea
dec
push
into
xor
sub
or
add
pop
cmp
dec
ja
fldt
mov
mov
and
movd
lds
pop
repz
or
sub
mov
testb
stos
ss
stos
icebp
xchg
out
jmp
xchg
add
insb
cmp
mov
loop
lods
cmp
jmp
ret
jno
xchg
orb
inc
decb
cmp
inc
mov
insb
dec
jmp
mov
push
pushf
push
imul
out
sub
hlt
inc
mov
adc
fnsave
aaa
scas
sarb
push
sbbl
jo
fnstcw
inc
minps
sbb
fiadds
xor
js
push
repz
insl
movb
shl
xchg
das
pop
mov
adc
jnp
ds
in
das
or
in
movsl
inc
lods
xor
or
mov
fs
pop
sti
push
lock
lcall
lret
dec
mov
xlat
jg
cmpsb
push
es
mov
xchg
mov
enter
xor
push
or
les
repz
xchg
into
int
js
mov
movsl
arpl
cmp
rcl
sti
inc
andl
mov
aaa
mov
jge
dec
scas
sub
sarb
sub
lcall
push
sarb
mov
outsl
xor
pop
decb
push
adc
mov
cmp
dec
rclb
incl
into
jle
movsl
lcall
stc
into
sahf
push
ds
movsb
scas
rol
mov
in
cltd
jb
mov
sub
pop
cmp
lret
mov
and
test
inc
xor
xor
sub
scas
sub
addr16
xchg
cmp
pop
icebp
cmp
das
xchg
inc
insl
push
pop
sbb
adc
adc
sahf
sub
dec
dec
cld
sub
sbb
movsb
mov
sub
js
mov
jl
adc
test
sub
mov
jne
xchg
stc
divl
and
icebp
push
pop
cmp
cwtl
adc
mov
sbb
leave
in
dec
orb
ds
or
cmp
push
imul
adc
cmp
mov
mov
and
mov
lahf
aas
fmuls
test
in
aad
mov
and
jmp
mov
adc
pop
cmp
and
mov
xor
push
jmp
inc
in
push
xchg
push
jnp
leave
stc
inc
add
cld
sbb
xor
and
cmp
repnz
mov
cs
dec
lock
sub
addr16
pop
into
xchg
mov
mov
xchg
mov
int
mov
fcomps
push
inc
xchg
push
xlat
dec
cmp
rcll
nop
dec
push
push
xchg
pop
mov
mov
pop
inc
mov
push
pop
inc
orl
mov
mov
adc
lds
pop
xor
cmp
mov
inc
xchg
cmpsl
mov
rcrl
imul
lahf
test
in
cmp
inc
imul
dec
xor
loop
dec
lret
jne
shrb
jbe
mov
cmpsb
in
push
aad
or
movsb
ds
push
adc
mov
enter
push
sahf
leave
lods
sub
imul
pop
ficoms
cli
pushf
mov
movsb
inc
testb
inc
inc
mov
cmp
dec
pop
lret
xchg
sub
arpl
xlat
inc
cs
cmp
jle
mov
rclb
insl
mov
iret
ds
xor
out
insb
adc
rol
mov
push
cli
pusha
lcall
fmuls
jl
mov
int3
mov
shl
add
cmpsb
lock
jbe
stos
nop
fists
ret
repnz
cmp
shrb
dec
mov
inc
js
out
or
fcoms
call
movsl
icebp
or
stc
mov
xchg
sub
cli
pop
shl
in
mov
shll
dec
fwait
xor
out
mov
xchg
shrl
dec
or
pop
or
std
std
sbb
cmp
lods
cmpsl
cmc
and
outsl
je
test
dec
pop
mov
jg
jno
inc
ret
inc
icebp
aaa
mov
shll
push
cmp
or
cld
nop
mov
inc
stc
out
lret
or
sub
xor
aaa
xlat
repnz
inc
jo
jmp
test
insl
lea
jae
lret
mov
jp
or
fs
mov
shr
cwtl
into
movsl
cmp
mov
idiv
mov
clc
jmp
dec
add
inc
xor
daa
cmpsl
adcl
aad
cltd
addr16
ret
iret
xchg
out
cmc
adc
push
gs
mov
xor
adc
inc
pusha
push
daa
and
push
adc
and
cmp
cltd
ss
pop
test
sub
mov
bound
jge
cmp
push
iret
ja
ja
stos
mov
mov
sar
fndisi(8087
loopne
std
dec
sbb
js
mov
mov
cmp
and
mov
adc
fisubl
out
xor
cmp
inc
pusha
repz
sub
test
push
mov
inc
jne
pop
aas
or
in
and
pop
sub
mov
push
pushw
fsubs
push
insb
and
leave
mov
jecxz
loope
sub
mov
insl
loope
lahf
fucomi
hlt
mov
cmpb
lahf
clc
fisttps
das
sti
call
dec
repnz
negl
loope
lds
jl
jmp
cmp
les
ret
rcrl
repnz
imul
pop
or
mov
stos
iret
mov
mov
pop
dec
cmpsb
inc
fs
mov
xlat
sbb
stos
sti
xor
mov
pop
sti
movsl
xor
loope
rorl
push
push
add
js
mov
push
xor
and
cmp
mov
cmp
push
sub
dec
addb
aas
andb
xor
xchg
push
jecxz
in
leave
mov
mulb
sti
adc
nop
add
jns
mov
je
pusha
pshufw
les
push
mov
pop
adc
faddp
pop
out
in
hlt
inc
adc
fnstenv
mov
mov
popf
dec
rorb
inc
mov
test
pop
sub
dec
dec
sub
xlat
unpcklps
sbb
dec
inc
cld
and
adc
and
std
ja
bnd
arpl
daa
pop
lar
inc
sub
pop
push
stos
push
and
cmpsl
or
incb
mov
sti
cli
in
push
imul
stos
add
add
xchg
inc
or
xchg
fcomip
or
addl
mov
in
pop
hlt
pop
sbb
js
mov
clc
inc
dec
pop
mov
cltd
xchg
mov
and
sbb
sbb
ds
outsl
cmp
jae
cmpsb
popa
cmp
adc
out
xchg
sbb
mov
cs
mov
push
pusha
xor
inc
pop
jns
xor
loop
and
dec
fidivs
adc
cltd
mov
into
adc
insb
jb
test
sbb
push
arpl
popf
xchg
jo
mov
lahf
das
shl
cli
jae
in
notb
push
sahf
and
mov
pop
dec
or
dec
add
jecxz
and
push
cmc
lods
rorl
cli
scas
call
dec
movsb
jecxz
stos
pop
sub
cwtl
shrl
push
sub
jmp
fwait
pop
in
cltd
aaa
pop
movsl
lds
lcall
gs
adc
jl
xor
dec
push
or
ljmp
hlt
jno
xchg
dec
xor
movsb
int
jnp
dec
sahf
addr16
dec
pusha
mov
push
mov
add
enter
divb
imul
jno
pop
and
mov
xchg
mov
sub
test
xor
scas
add
adc
xchg
test
sub
ret
cmp
sbb
enter
int3
xor
jl
sub
xchg
ret
push
adc
xor
inc
inc
leave
dec
fldcw
fs
inc
inc
add
aam
in
inc
mov
lahf
dec
arpl
inc
push
ficomps
js
test
lods
add
jge
adc
in
in
push
cmpsb
divl
and
jb
cmp
mov
js
pop
lret
shrb
xor
adc
mov
jg
mov
popf
rcrb
xor
push
cmp
push
mov
cmp
adc
mov
mov
and
xor
and
xor
sbb
imul
sbb
insb
mov
mov
push
js
push
dec
insl
mov
cs
repnz
mov
fisubs
call
inc
imul
xchg
cmpsb
mov
fnstcw
stos
cmpsb
inc
mov
stos
nop
dec
jg
push
pushf
sahf
jecxz
inc
out
mov
dec
pop
xchg
inc
insl
sub
sbb
popf
cmc
shll
sahf
je
jp
sbb
mov
orl
fs
mov
or
popf
push
cmp
dec
pushf
negb
cwtl
push
mov
scas
jns
nop
leave
add
movl
mov
arpl
push
inc
jbe
cld
cmpsl
dec
inc
lods
js
aad
into
inc
pop
push
xchg
and
add
sbb
fildl
jp
push
int
push
jnp
cwtl
jae
jl
dec
or
push
aam
int
jle
ja
lret
xchg
cmpsb
push
lock
cmp
cmp
sbb
pop
sbb
push
add
jp
xchg
mov
hlt
push
inc
ret
mov
or
std
cmp
push
je
test
xchg
pushf
adc
stos
mov
inc
push
or
add
mov
nop
in
jnp
cmpsl
cld
pop
mulb
add
je
inc
inc
pop
fwait
movsb
dec
inc
fistpll
jmp
inc
mov
movsl
test
rol
add
jl
adc
or
insl
mov
ss
push
xchg
mov
xchg
je
movsl
enter
xchg
insb
int3
dec
sub
cli
xor
scas
mov
xchg
mov
in
je
add
pop
call
adc
in
adc
jae
enter
test
mov
mov
push
add
mov
jmp
sti
popf
adc
inc
bound
int
xchg
inc
mov
inc
movsl
cmp
add
mov
push
mov
dec
push
pop
cmp
adc
imul
outsb
push
lds
cmpsb
rcll
xor
sahf
int3
out
ficoml
cmp
testb
and
mov
addr16
arpl
cmc
mov
mov
les
cli
xchg
pminsw
xor
int3
sbb
sbb
inc
rorb
cmpxchg
ja
jbe
je
push
test
testl
movsb
mov
in
popa
pop
fisubrs
push
jmp
mov
sbb
je
pop
xchg
mov
xchg
arpl
rclb
push
cmp
pop
mov
cmp
sub
popa
lods
sub
mov
shlb
sub
mov
in
inc
fnstcw
aam
xor
lock
inc
ss
in
jle
fldt
inc
sub
hlt
int
jecxz
fs
daa
out
push
xchg
push
mov
rcr
xor
jne
pusha
sbb
mov
int3
cwtl
out
ficoml
les
rcll
aas
mov
cmpsl
dec
lods
cmpsl
adc
addr16
or
push
ljmp
outsb
pop
xor
and
push
mov
adc
pop
pop
push
enter
incl
jmp
cmpsb
mov
mov
mov
in
fnstenv
mov
popf
mov
or
subl
pop
popl
xor
jp
sbb
jne
leave
mov
pushf
repz
sbb
inc
js
inc
push
je
test
inc
fnstenv
mov
ss
notl
std
inc
add
and
nop
add
mov
dec
iret
les
sub
addr16
lcall
repnz
pushf
jg
data16
jnp
jecxz
rolb
pop
pop
cmp
outsb
lret
sbbl
out
arpl
inc
outsl
subb
outsl
out
ss
xor
dec
movsb
xchg
jp
andl
mov
xchg
jno
roll
pop
jp
push
repz
insl
enter
test
das
pusha
sub
pusha
push
shr
mov
in
test
fimuls
pop
sbb
mov
sahf
outsb
jae
adc
sub
enter
std
inc
sti
lock
adc
outsb
insb
xor
sub
mull
fucom
cmc
push
mov
das
lret
clc
fisubs
dec
pop
push
add
mov
jl
sbb
mov
jbe
jmp
pop
imul
xor
push
mov
les
mov
lahf
push
push
add
in
add
sbb
fninit
jnp
shl
xchg
std
sarb
and
testl
call
out
lret
aad
xchg
adc
inc
clc
add
inc
jle
cli
cwtl
jl
dec
fsubl
sbb
inc
pop
les
cmp
test
rep
or
adc
jmp
je
pop
mov
and
cmp
lds
repnz
sbb
insb
mov
xchg
pop
ljmp
pusha
jecxz
push
xorl
lahf
js
test
push
sub
mov
xchg
jg
push
fsubl
xchg
into
clc
mov
cltd
mov
inc
add
add
bound
lahf
add
sbb
repz
and
sbb
test
push
jecxz
pushf
jmp
cld
pop
decb
fsubs
std
sbb
imul
ljmp
or
mov
cmp
cs
mov
popa
push
or
cmp
sbb
ffreep
in
mov
in
sub
inc
std
cmovae
pop
nop
xchg
ror
jns
xor
divl
cltd
lods
ror
xchg
dec
orl
xchg
add
cmp
rol
jg
jns
movsl
add
push
inc
mov
rclb
mov
adc
inc
adc
arpl
jecxz
push
fdivs
pop
cmp
int3
adc
adc
rep
repz
stos
out
adc
xor
outsl
push
mov
outsb
sbb
jg
movsb
shll
jle
mov
sbb
jns
inc
pusha
mov
push
dec
test
sbb
cwtl
data16
xchg
pop
cmp
mov
push
push
push
pusha
add
sarl
nop
aaa
clc
push
icebp
jae
xchg
loope
dec
jne
fwait
sar
int3
or
test
lods
xor
frstor
or
sub
rorl
or
nop
ljmp
push
sbbb
cmp
cmp
fstpl
cmp
iret
or
sbb
fs
cmpsl
sub
movsl
cmc
jg
inc
adc
test
or
sub
test
cli
pusha
addr16
push
fildl
sbb
in
scas
xor
les
mov
dec
xchg
imulb
dec
loop
lcall
iret
je
nop
cld
dec
iret
jecxz
jmp
cmpsb
pop
in
and
repz
mov
add
xchg
shrl
mov
mov
insl
test
mov
popf
jmp
jb
mov
xlat
pop
jae
clc
data16
hlt
inc
inc
cwtl
filds
or
dec
psubusb
lea
es
and
mov
shufps
push
xchg
cli
pop
cltd
lcall
jle
cmp
lahf
cmp
aas
lcall
sub
cli
cmpsl
shr
cs
in
jge
int3
jbe
std
incb
int
sbb
xchg
ss
aam
lahf
lcall
addr16
sub
and
cmpsl
sbb
pop
fdivrl
out
stos
xchg
stos
je
in
xor
mov
rcll
loop
inc
fists
stc
xchg
cmp
mov
in
adc
loope
repnz
jne
mov
inc
mov
daa
xor
subl
sbb
divb
call
mov
mov
and
inc
sub
jle
daa
test
fsubl
and
movl
xchg
arpl
sub
repz
pop
jg
movsl
pop
gs
stc
pushf
cli
push
fs
aad
and
push
xchg
loopne
pop
pop
aam
and
xchg
adc
rorl
sbb
or
arpl
lcall
stc
cmp
jg
clc
jmp
lret
add
in
fcmovne
add
pop
pop
mov
dec
lret
jne
hlt
lea
push
es
sbb
lret
mov
jle
nop
clc
push
inc
xchg
icebp
mov
fldcw
aas
pusha
push
call
cmp
inc
sahf
test
loop
sub
and
orb
andb
inc
adcb
fidivrl
ds
xchg
addr16
outsl
push
mov
xchg
dec
adc
sbb
test
arpl
into
jns
inc
and
pop
fucomi
mov
rolb
imulb
je
inc
push
mov
add
in
std
shlb
repnz
sarl
fisubl
xlat
cwtl
outsl
add
sahf
adc
insb
xchg
or
out
dec
aam
gs
and
adc
psubb
fs
jno
movsl
pushf
mov
xor
insb
sub
inc
xor
add
jge
add
xor
rolb
pop
cmp
dec
xlat
sbb
ja
xchg
cmc
loopne
rcl
xor
xlat
xchg
adcb
sbb
fsts
sub
imul
cltd
test
in
flds
pop
arpl
xchg
and
rcrl
add
mov
pop
cmp
in
sub
stc
je
pop
add
mov
les
dec
inc
xchg
jne
arpl
or
cltd
jmp
inc
pop
inc
pop
jecxz
imul
mov
cmpsb
les
xor
daa
divb
arpl
sbb
aad
enter
jg
lcall
stc
xor
dec
inc
push
sub
jge
ficoms
mov
sbb
jl
dec
xchg
imul
cmpsl
push
movsb
shr
and
sub
outsl
lods
sub
mov
adc
sbb
notl
xlat
mov
ret
mov
sbb
add
outsl
loopne
jge
mov
pusha
mov
dec
add
xor
pop
add
pop
pop
out
xor
outsb
and
add
imul
loope
out
mov
dec
stos
and
and
xlat
ljmp
mov
outsl
jbe
pushf
jns
scas
lret
mov
cmp
cmp
fs
jecxz
sub
dec
and
mov
jmp
push
sbb
mov
popf
mov
sub
and
outsl
mov
sub
mov
fsubrl
ja
mov
adc
mov
add
jne
jbe
leave
push
dec
xchg
mov
rcrb
sub
xorb
cli
pusha
sub
adc
movsb
push
cmp
in
test
and
push
mov
leave
pop
push
sbb
pop
jne
cmp
rcrb
or
xchg
out
sbb
lcall
andb
fsubrl
dec
outsb
inc
inc
pop
inc
lahf
loopne
xchg
xchg
or
cmp
fwait
mov
push
dec
xor
cld
shlb
je
jmp
ret
fiadds
dec
jge
and
mov
icebp
enter
ret
xchg
std
pop
movsl
sub
pop
bnd
xor
mov
loop
sub
pop
xchg
stos
add
aaa
lea
sbb
xchg
int3
dec
sbb
jmp
pop
ja
fbld
sahf
mov
pop
inc
cmp
js
adc
inc
lods
jg
xchg
sub
pusha
or
jp
sbb
xor
or
sbb
aaa
jb
lcall
mov
scas
iret
inc
mov
push
push
and
sub
arpl
cmp
lahf
jb
insl
dec
loope
pop
xor
fists
push
insl
loopne
jmp
pop
lea
mov
int3
sbb
lock
mov
test
out
stos
jae
sub
sbb
and
data16
mov
and
push
in
dec
mov
adc
push
loope
push
and
sbb
push
push
or
out
inc
imul
ja
mov
ficompl
jno
pop
fmuls
cmp
or
or
mov
sbb
pop
and
ficoml
sahf
or
out
ficoms
xchg
sbb
mov
pop
pop
dec
into
in
jp
mov
adc
add
push
adc
jbe
add
mov
xor
dec
adc
or
jmp
jb
loopne
call
clc
clc
dec
pop
mov
and
dec
clc
inc
mov
lret
popa
adc
fxch
xchg
or
lret
mov
and
or
or
sbbl
push
xor
inc
lea
mov
pop
std
xchg
scas
loop
mov
mull
aam
rorl
add
adc
sbb
cmp
enter
stos
clc
lods
mov
ja
cmp
sbb
iret
fld
mov
jp
pop
mov
push
cmp
adc
out
sahf
adc
push
pop
jne
inc
sub
js
xor
jbe
jb
inc
push
dec
xchg
push
out
mov
fisubrl
adc
xchg
icebp
jecxz
dec
aas
xchg
popf
push
in
pop
aas
and
lods
rcrl
jecxz
and
ret
orl
sbb
ret
mov
aad
cmp
xchg
data16
mov
cltd
movsl
jmp
scas
xchg
mov
cmp
dec
xlat
jg
cmp
call
pushf
je
mov
sar
pop
sahf
outsb
gs
sub
inc
cltd
and
inc
popf
jno
cmpsb
cmp
pusha
xor
ljmp
push
cmp
pop
push
push
mov
cmp
repz
rorl
pushf
jg
add
pop
mov
lods
cmp
sbb
push
nop
repnz
lret
fists
mov
movsb
xor
ja
js
cli
fcompl
add
bound
enter
pop
push
pop
and
scas
xchg
push
das
scas
inc
sbb
out
daa
lea
mov
sub
enter
fimull
fs
or
mov
mov
pushf
fsubs
xor
cmp
or
mov
outsb
shrb
sub
or
shrb
adc
mov
mov
jns
push
pop
and
mov
mov
mov
and
jb
test
adc
add
aaa
xchg
fsubr
sub
imul
int
std
cmp
xorl
and
or
xor
cmp
inc
jns
inc
in
out
jns
push
cmpl
das
scas
cmp
adc
popa
mov
in
ljmp
je
out
loope
not
xchg
idiv
arpl
test
fsub
aam
clc
popa
xor
mov
pop
std
mov
insb
lods
mov
jo
add
sbbb
mov
cmc
cmpsb
repz
imul
or
mov
fistl
cld
dec
sub
xor
outsl
repz
comiss
shlb
mov
js
add
shll
fistpl
in
jmp
insb
cmp
gs
int
and
stos
std
xchg
inc
add
sub
sarl
add
push
push
repz
push
mov
or
gs
stc
test
ds
push
dec
pusha
jl
push
into
out
dec
mov
jle
mov
mov
out
jmp
mov
out
inc
push
mov
lock
push
xchg
and
or
xchg
dec
pushf
pop
xchg
xor
xchg
dec
mov
mov
comiss
push
inc
xchg
jns
xchg
lea
mov
inc
fstpt
dec
cltd
adc
push
add
sti
loope
popf
push
loopne
lods
out
push
fnstcw
fsubrs
lods
js
stc
lea
and
cmp
push
sbb
inc
std
dec
shr
mov
les
mov
mov
pop
push
adc
outsl
inc
addr16
dec
cltd
loop
nop
mov
scas
les
sbb
dec
pop
test
jg
mov
call
push
dec
jb
sbb
jb
adc
hlt
arpl
cmp
cmp
out
xchg
fiadds
repnz
cmp
pop
inc
xchg
jo
stc
xchg
sbb
jns
lock
xor
stos
inc
sbb
adc
pop
loop
sub
cmp
mov
je
xor
mov
fisttps
mov
clc
data16
jg
insl
fdivrl
insb
dec
adc
inc
mov
inc
xor
mov
cld
ja
out
insl
xchg
push
pop
inc
adc
popf
cli
andb
xchg
roll
pop
push
xchg
or
lret
mov
mov
add
mov
repz
test
std
add
pop
subb
push
push
out
push
jae
mov
out
xor
aas
dec
mov
rcrl
cmc
outsl
into
iret
sbb
loope
shr
pushf
cli
xor
adcl
in
jb
or
fcomps
mov
iret
imulb
lret
push
inc
dec
lods
cld
scas
sbb
mov
sbb
sti
roll
adc
mov
shll
push
mov
in
out
jmp
adc
jnp
mov
cld
cld
dec
popa
fs
lea
xor
test
inc
les
cmc
data16
mov
nop
aad
cmpsb
in
data16
adc
push
inc
push
push
in
xor
test
repz
ss
sbb
loopne
sub
hlt
sbb
js
push
icebp
shl
fistps
daa
imul
adc
stos
jne
movsb
pop
jmp
adc
mov
inc
adc
adc
cmpb
fsub
mov
mov
or
mov
mov
stos
push
adc
arpl
jmp
loope
sub
insl
or
out
test
pusha
add
sbb
lods
ljmp
popa
jecxz
sbb
push
and
popa
adc
mov
fs
xchg
and
arpl
lahf
jle
jecxz
iret
add
or
or
cmpsb
sub
push
dec
mov
sub
mov
pop
xor
lods
nop
mov
int3
mov
pusha
pusha
mov
cld
push
sbb
lahf
lret
xchg
inc
lock
and
push
imul
test
inc
mov
add
cmp
insb
xchg
fwait
std
adc
mov
sub
clc
addl
and
jno
xor
clc
imul
subl
add
dec
int3
xchg
jmp
push
pop
xor
imul
adc
insl
or
loopne
or
nop
gs
push
in
lret
aaa
pop
xchg
call
popa
cwtl
xor
mov
and
sahf
push
cld
js
jns
jns
shl
mov
mov
sbb
cmp
enter
push
xlat
test
jp
in
fstpl
jl
dec
add
adc
mov
adc
inc
cli
repnz
cmp
shlb
clc
data16
bound
imulb
sub
dec
movzbl
pop
or
fdivrl
mov
jnp
ret
dec
aaa
icebp
pop
call
aas
mov
popa
ljmp
jp
jns
lret
leave
mov
sbb
fwait
das
cmp
inc
push
mov
push
jo
jge
xor
adc
test
add
add
in
and
loope
and
mov
mov
incb
cmp
mov
les
push
sbb
fidivrs
jmp
cmp
xchg
ja
fisttps
ret
std
ljmp
or
lock
xchg
push
mov
fstp
aad
xlat
dec
test
xor
xor
push
mov
lcall
popa
mov
out
cmp
inc
fidivl
leave
xlat
loope
cmpsl
out
lock
mov
mov
aaa
fcoms
mov
push
mov
aad
jecxz
fimull
or
int3
hlt
sarl
les
cwtl
xchg
cltd
jg
fwait
lods
bound
rorl
pusha
inc
pop
ret
push
mov
adc
cli
fs
sbb
jno
test
repz
mov
daa
aaa
jl
mov
adc
daa
outsl
xchg
push
pop
icebp
push
inc
enter
ja
pop
aaa
jge
mov
cltd
xlat
add
mov
lock
test
cmp
ss
or
mov
gs
pop
or
popa
fiadds
dec
dec
fistpll
popa
dec
xor
cmp
jmp
inc
push
mov
dec
mov
cmc
lahf
enter
aaa
rcrl
add
jae
jno
xor
jno
jno
pop
push
sub
fwait
addr16
mov
popa
imul
leave
cmpsb
dec
xchg
jno
pop
je
mov
sbb
shrb
pop
add
bswap
cmp
test
call
fmull
and
pop
fstl
mov
loope
inc
mov
cli
cmp
loopne
mov
in
orl
enter
and
dec
stos
mov
sub
xchg
jmp
pop
mov
test
cmp
sarl
ret
imul
movsl
jmp
jecxz
add
inc
inc
jne
mov
subb
cmpsb
cmp
call
lahf
repnz
inc
fpatan
notl
popf
add
jl
or
out
sub
out
pop
and
and
push
jg
jle
arpl
xchg
and
icebp
mul
cmp
rcrl
adc
loope
insl
clc
sahf
pop
or
loop
sub
mov
and
stc
pop
fstpl
std
add
imulb
xchg
lods
fs
aam
jg
and
sbb
outsb
loope
or
mov
mov
fcoml
ja
xor
or
leave
stos
lcall
ret
sub
enter
mov
std
enter
adc
xor
andl
mov
mov
cld
popa
sbb
jge,pn
mov
nop
pusha
xor
sarb
in
mov
and
and
and
test
ss
lds
scas
mov
sub
stos
inc
jge
leave
fwait
xor
or
imul
mov
das
xchg
hlt
inc
daa
ret
daa
in
cmp
and
or
xchg
push
cmpsl
add
adc
mov
dec
xorb
stos
test
jne
push
jns
cli
pop
dec
test
pop
pop
pop
cmp
out
mov
aas
fisubrs
fmull
pop
mov
xchg
ljmp
loope
mov
addr16
dec
pop
daa
jg
sbb
mov
dec
mov
adc
mov
push
push
icebp
lret
scas
fstpt
dec
sub
and
mov
mov
cmc
push
mov
add
add
mov
dec
pop
jno
fwait
adc
sbb
call
stos
push
lahf
pusha
inc
mov
das
xor
fmull
cmp
mov
stos
out
pop
dec
push
ret
jle
mov
pop
inc
inc
xor
aas
lods
loope
call
jae
outsl
inc
enter
lret
and
mov
mov
push
or
lods
push
aaa
cmc
into
mov
int3
mov
push
lods
cld
push
jge
shrl
xlat
cli
pop
push
lods
jecxz
xchg
add
ret
jp
clc
mov
scas
cpuid
in
cmp
sbbl
lods
sbb
shr
mov
mov
jmp
jb
repz
push
xor
dec
pop
jo
out
xchg
sbb
dec
xchg
sbb
jl
inc
loope
stos
stc
add
jno
fdivp
cli
add
inc
decb
jge
mov
cmpsb
xchg
aaa
int3
repnz
nop
stos
shrb
push
or
push
push
adc
fwait
fs
cld
bound
mov
and
ja
sarl
mov
push
dec
fdivr
jle
in
push
mov
jecxz
les
sub
stc
popf
filds
or
sti
in
or
lahf
and
sub
xor
mull
clc
loope
loop
imul
aam
mov
pop
popf
sub
loope
sub
rorl
fistpll
fildll
mov
sub
ficoms
cmp
mov
xlat
test
xchg
ret
mov
mov
fcomps
adc
scas
cmp
push
inc
ja
cmp
xorb
adc
insl
fdivrl
cmpsl
insl
sbb
dec
cld
pop
inc
sub
or
lahf
pushf
sahf
lahf
scas
adc
jg
mov
inc
mov
fisttpl
push
jl
adc
xorb
pop
sub
in
push
mov
xor
adc
insl
sub
rorl
pop
lds
mov
push
loop
mov
xchg
dec
sbb
mov
mull
loop
in
nopl
cwtl
inc
ja
mov
push
lock
and
or
dec
adc
loopne
out
or
sarl
mov
dec
rolb
push
adc
test
jg
lds
or
sub
rcr
xor
and
mov
sti
ret
lret
xor
wrmsr
mov
lods
mov
add
std
pop
out
fucomi
dec
jnp
fs
gs
in
mov
out
ja
ss
bound
add
loopne
sbb
adc
adc
rcll
divl
xchg
ja
insl
dec
pop
insl
mov
cmpl
shr
jl
or
or
add
pop
xor
sub
mov
lahf
pop
cli
pop
scas
repnz
xchg
push
std
lock
std
xchg
inc
sbb
sbb
mov
sarl
daa
sub
add
stos
lods
sub
loop
js
aas
push
bound
in
mov
int
call
jne
mov
pop
out
cmp
into
out
jecxz
or
mov
dec
jns
push
dec
lcall
mov
loop
stc
lock
mov
inc
leave
push
outsb
and
bound
inc
push
popa
repnz
sbb
fnstsw
adc
test
sub
cli
aam
sarb
pusha
mov
mov
mov
jp
pop
imul
mov
lods
dec
sbb
sbb
mov
shlb
inc
decb
and
dec
xor
inc
adc
xchg
xchg
xchg
xor
mov
xchg
jne
jge
cmp
adc
push
xor
mov
stos
test
pop
leave
iret
imul
fidivl
sbb
cmp
mov
dec
mulb
movsb
bnd
sbb
fsts
mov
repnz
cmpb
sub
arpl
mov
dec
push
jnp
pop
ss
rcr
inc
cmc
fwait
aad
fiaddl
mov
out
xchg
mov
aas
xorb
fstpt
lahf
and
dec
xor
loopne
adc
push
popa
mov
sbb
cmp
and
sbb
pop
sbb
sahf
mov
stos
or
jmp
fwait
gs
sbb
pop
adc
mov
fstpt
sub
test
dec
xchg
or
or
mov
lods
push
pop
adc
nop
repz
dec
enter
add
pop
adc
in
inc
hlt
pop
sbb
add
xchg
jae
loope
out
dec
adc
push
scas
cwtl
in
loope
les
dec
inc
in
std
fdivr
or
scas
addr16
sti
pop
fldt
jcxz
aad
add
cmp
fnstenv
mov
xchg
dec
adc
mov
add
in
or
pop
sbb
orb
and
sub
adc
jb
jmp
cwtl
out
loope
stc
lcall
pop
mov
lods
aam
pop
pop
sbb
dec
loopne
es
lea
xchg
inc
or
psadbw
jmp
dec
faddl
lahf
cmp
mov
sarl
mov
push
les
out
mov
cs
imul
clc
adc
popf
mov
sbb
xchg
movsb
shl
movsl
and
mov
push
push
jle
stos
loopne
call
and
dec
jge
shl
loopne
mov
mov
push
inc
in
arpl
push
push
push
adc
popf
cmp
aaa
push
adc
subl
aad
jo
bound
xchg
inc
aam
inc
roll
jl
or
addr16
out
inc
pop
or
jno
mov
inc
stos
cmpsl
dec
popa
mov
int
cmp
mov
mov
ljmp
les
push
cmpsb
nop
in
out
and
ret
ja
cmp
xor
and
fwait
dec
mov
push
sbb
cmp
xor
xchg
pop
and
imul
outsb
mov
in
xchg
dec
aad
lret
xlat
lods
xchg
inc
mov
out
aad
jg
rcll
push
cmc
mov
pop
add
jnp
ret
and
int
push
ja
xchg
js
push
pop
cld
adc
shl
stc
in
sti
rclb
js
dec
add
xor
fwait
jno
inc
ret
out
mov
pusha
ja
je
push
mov
repnz
icebp
aad
mov
movzbl
les
jle
push
cmc
and
out
adc
inc
stos
sbb
xchg
cs
xchg
lret
fidivrs
mov
int3
mov
push
adc
std
xor
dec
mov
jae
adc
pop
jle
imul
pop
mov
push
sub
iret
stc
sbb
mov
adc
jae
sbb
ja
xchg
pop
adc
test
jge
stos
test
sbb
inc
mov
lcall
iret
sub
and
jmp
cwtl
outsb
cmp
dec
dec
frstor
push
fwait
jmp
mov
movsb
jg
inc
adcl
xor
push
pop
cmp
insl
mov
and
arpl
les
or
cld
sub
cmp
xchg
pop
arpl
add
adc
in
push
or
lcall
or
sub
mov
adc
and
lea
inc
dec
lahf
int
movb
pop
sbb
dec
mov
enter
xor
cmp
push
sbb
outsb
fisttpl
dec
pop
outsl
pop
icebp
push
and
xchg
xchg
je
inc
test
or
push
adc
cmp
daa
pop
sub
lcall
push
mov
insl
add
adc
ja
imul
sbb
xor
gs
mov
imul
push
or
jecxz
mov
jbe
sub
pop
pop
movsl
arpl
int3
cmpl
xchg
xchg
and
clc
fwait
mov
test
sub
shl
cmpsb
icebp
inc
adc
out
mov
mov
pop
call
adc
sub
dec
movsl
stc
in
imul
or
inc
or
test
pushf
bound
enter
xchg
xchg
shr
and
nop
ret
pop
test
gs
nop
xorb
stos
push
push
mov
sbbb
sbb
clc
popa
sahf
dec
add
dec
push
std
cmp
add
cmc
out
sbb
or
adc
jp
stos
frndint
shll
hlt
out
fstl
push
mov
xchg
repnz
repnz
andb
call
add
cltd
or
sub
insl
das
push
popf
cmpsb
mov
pusha
ret
or
xchg
test
add
stos
mov
cmp
or
clc
pop
cmpb
mov
push
push
fs
inc
xchg
mov
lret
jno
mov
clc
movsl
bound
adc
sti
sub
pop
push
daa
inc
xchg
aad
mov
sbb
cmc
loopne
or
jae
stos
out
xchg
decb
xchg
aam
adc
fwait
or
push
and
imul
sub
mov
mov
dec
repnz
mov
adc
insb
lret
pop
dec
sbb
sahf
cmpps
pop
je
cmc
mov
and
in
sbb
sbb
je
js
inc
pop
push
insb
idivl
jl
inc
dec
xor
stos
mov
scas
push
jl
cld
xor
pop
or
shl
cwtl
ret
ret
and
add
sbb
lods
and
outsb
push
pop
out
fidivrs
out
and
cs
pop
xchg
in
pop
mov
ret
xor
es
lea
cli
sbb
clc
mov
jno
xchg
std
js
andl
xchg
xor
inc
sbb
xorl
xor
into
jns
dec
fcomi
sub
mov
or
push
xor
loopne
push
lcall
sbb
push
mov
sub
inc
jo
cwtl
jg
cmp
pushf
xor
jne
pop
push
pop
and
cmpsb
adc
pop
jecxz
and
adc
pusha
push
xchg
sahf
mov
or
dec
cmp
mov
dec
ljmp
jo
inc
insl
ds
mov
leave
add
and
jl
pop
pop
jecxz
cmp
insb
inc
mov
mov
lock
mov
pop
enter
pop
loopne
cmp
adc
nop
cmp
and
cmpsb
ja
cmp
dec
push
das
fdivs
add
cmp
mov
imulb
xchg
pop
jo
dec
add
add
inc
xor
jo
xchg
mov
out
mov
mov
out
mov
pusha
ret
popf
aas
mov
popa
gs
add
add
xchg
xchg
cmp
mov
adc
sub
pop
xor
sbb
stos
orb
or
sbb
or
jns
or
lret
outsl
in
jbe
mov
jecxz
div
push
add
xchg
adc
push
in
loop
stos
lahf
or
aad
pusha
mov
sub
out
fisttpl
orl
ror
stos
sub
dec
xor
popa
inc
cmp
inc
outsl
into
cli
pushf
dec
filds
xchg
sub
rolb
lcall
loop
jl
cmp
in
dec
fidivrs
mov
and
mov
clc
icebp
add
xor
or
inc
pop
insl
push
sbb
dec
scas
xchg
jge
mov
rorl
ret
pusha
cwtl
add
mov
inc
jns
insl
xchg
sub
scas
outsl
fisttpl
cmc
xchg
jge
stc
dec
mov
dec
bound
add
pop
xchg
nop
outsl
sub
js
ret
push
aas
add
and
push
lea
add
add
or
enter
mov
fcmovbe
xchg
aas
xor
or
not
xor
test
cmpsb
repnz
inc
fsubrs
lahf
jno
pushf
mov
mov
dec
das
mov
fs
and
sub
insb
lahf
jg
pop
sub
or
lods
fdivrl
adc
ret
call
and
arpl
mov
stos
mov
dec
pop
pop
out
or
jl
sub
and
aaa
dec
cmp
stos
pop
je
jl
jp
in
pushl
out
and
mov
scas
or
repnz
inc
xor
inc
lods
inc
outsb
mov
cmpsl
mov
push
pop
lods
add
inc
mov
lret
inc
xchg
inc
subb
sbb
mov
fsubrl
xchg
and
mov
pusha
insl
test
int3
push
xchg
jge
into
in
dec
aam
adc
ja
add
inc
mov
and
jl
jg
repz
and
add
ficoms
sbb
xchg
loop
popl
add
fsubrp
inc
pushf
stos
iret
or
push
fs
adc
in
in
cltd
and
out
loop
ret
sub
sub
stc
xlat
add
fnstcw
imul
mov
inc
sub
aas
in
popa
ljmp
push
and
std
mov
inc
add
cmp
mov
and
xlat
cmp
xor
jae
stos
inc
xchg
mov
mov
int3
xchg
ret
nop
adc
sub
dec
push
repz
lds
or
sahf
outsb
les
sti
ret
jbe
test
or
cmp
xchg
lcall
fcoml
insb
push
and
mulb
xor
popf
popf
movsb
cmp
cmp
insl
mov
popa
outsl
jle
dec
mov
cmpsl
or
push
mov
ja
inc
mov
int
sub
push
mov
pop
dec
inc
inc
icebp
cmp
fwait
sahf
enter
and
xorb
insb
dec
movsb
mov
faddl
lds
or
sub
dec
ret
inc
imul
jg
divl
lcall
adc
scas
es
mov
xchg
insb
lcall
and
or
pop
push
xor
jl
adc
in
lcall
cmc
pop
cltd
mov
push
jle
or
into
lods
sbb
adc
pop
inc
or
add
cmp
repz
sub
flds
std
out
pop
jne
mov
es
nop
or
inc
pop
insl
outsl
sub
fwait
in
repz
jae
out
pop
cwtl
dec
pop
jl
in
and
hlt
outsl
test
add
rclb
scas
bound
sti
in
and
cmp
mov
add
add
push
jle
test
mov
sbb
add
jg
repz
push
mov
inc
imul
adc
shll
outsb
inc
outsl
js
push
cmp
add
jo
xchg
adc
out
inc
pusha
daa
inc
pusha
jg
jmp
scas
loopne
xor
mov
inc
fisubrs
push
dec
pop
pminsw
sub
push
cltd
in
pushf
out
loopne
xchg
cpuid
mov
cmp
shl
xchg
or
out
mov
popa
pop
xchg
mov
push
inc
mov
enter
xchg
xchg
bound
rorl
cmpsb
lods
sti
adc
or
aaa
dec
setg
inc
fdiv
jle
jecxz
inc
scas
nop
mov
pop
mov
jo
fwait
in
fs
push
hlt
pop
mov
inc
cmpsl
cmp
mov
jg
cmpsl
ljmp
into
popa
cmp
nop
popf
jmp
inc
mov
fnstsw
aaa
inc
bound
orb
pop
mov
icebp
fistpll
add
sbb
lock
nop
xor
hlt
cmp
popf
insb
shrb
mov
cmp
jmp
dec
or
xchg
nop
das
stc
ret
sarb
aam
inc
scas
cld
jle
addb
inc
pusha
cld
repz
or
cmpsl
mov
data16
adc
or
ja
xchg
dec
mov
adcl
data16
sbb
fldenv
and
jp
pinsrw
dec
addr16
fs
test
jl
int
loop
mov
xchg
jne
jp
sti
iretw
inc
mov
outsl
ljmp
sahf
inc
and
leave
pop
dec
sub
rcl
or
xor
mov
ret
pop
push
sbb
aam
loop
loopne
xchg
es
dec
lods
add
call
xchg
push
jo
lret
nop
pusha
or
xchg
adc
mov
or
sets
sub
mov
rorb
rolb
push
and
or
or
sti
and
add
sbb
orl
and
movsb
je
decb
xchg
cwtl
push
adc
lret
dec
sar
je
mov
lea
pop
int
xchg
jnp
push
pop
push
cmpsl
leave
pop
lret
xchg
lret
jmp
mov
pop
test
adc
jp
push
aas
test
int
shrl
sub
push
loope
adc
sub
hlt
xor
sbbl
rep
cmp
sahf
add
push
out
xchg
push
dec
dec
inc
dec
pop
ds
cmpsb
ret
mov
inc
ss
pop
test
jbe
mov
das
xor
add
andb
pop
fwait
mov
sbbb
inc
in
mov
pop
push
and
xchg
dec
jecxz
aaa
ret
call
test
xor
fs
ja
pushf
shll
sub
test
mov
filds
cmc
cwtl
imul
sbb
mov
aad
push
inc
lods
imul
into
inc
mov
mov
and
or
inc
lods
dec
xchg
fwait
cli
sbb
and
xchg
xchg
in
or
loop
out
mov
sbb
test
jecxz
mov
push
cmc
xchg
pop
es
mov
pop
xchg
ds
add
cmpsl
xchg
or
inc
mov
and
aaa
xchg
inc
lock
jge
filds
divb
mov
popa
or
in
xor
imul
mov
xchg
sbb
jbe
out
push
loop
or
outsl
sbb
or
int
pusha
ficompl
xchg
adc
adc
mov
roll
shrb
and
push
push
mov
stos
xlat
xor
jno
int3
adc
xchg
xchg
and
ljmp
call
test
ror
int3
or
mov
shlb
movsb
jnp
gs
flds
jmp
lcall
inc
popf
sub
fcmovb
pop
stc
pop
int
test
out
jb
adc
jo
popf
fwait
adc
ljmp
sbb
cmp
pop
loop
push
in
sbb
leave
push
inc
popf
push
push
mov
adc
stc
int3
cmp
test
js
push
addb
jo
sub
stos
adc
pop
dec
pop
sub
add
cmp
cmp
fldenv
daa
xlat
push
push
mov
rcpps
bound
loop
push
push
loopne
hlt
imul
jl
mov
xor
add
mov
jne
movsl
xchg
in
xchg
inc
movsl
push
sbbb
repnz
jne
nop
mov
add
push
and
iret
je
xor
fcmovnbe
dec
dec
dec
xrelease
inc
pop
stos
pop
jnp
sbb
jge
inc
arpl
js
arpl
popf
push
push
jge
add
dec
sub
jae
ret
mov
dec
insl
hlt
mov
scas
lret
es
cwtl
mov
inc
cltd
aam
in
in
sbb
add
jge
in
sub
xlat
popa
fnstcw
dec
insb
popf
mov
push
jg
movsb
adc
jnp
imul
test
out
add
cmpsl
sbb
inc
int3
mov
outsb
je
in
dec
dec
inc
cmp
cmp
add
sbb
nop
dec
into
test
add
popf
cs
push
stos
dec
push
mov
or
mov
mov
rcrb
scas
je
jg
sarb
mov
jmp
loope
mov
scas
lods
or
xor
push
cli
aad
addr16
lods
xchg
xor
orl
sbb
ss
mov
or
cmp
dec
js
stos
mov
mov
inc
jbe
loopne
lock
inc
mov
pushf
out
xchg
lahf
mov
roll
and
popf
ror
in
xchg
sub
push
push
das
pop
fldcw
stos
adc
pop
and
jge
shlb
das
mov
jo
fimuls
scas
pop
dec
int
test
je
sahf
stc
jp
and
mov
and
adc
lret
ds
lea
outsb
or
enter
xchg
mov
add
ja
orb
imul
lea
sarl
sbb
mov
aaa
and
mov
sub
adc
jle
xchg
jecxz
ja
test
sbb
lcall
xchg
and
xchg
inc
lods
mov
inc
fsub
out
or
xor
lds
push
incb
hlt
fldt
inc
aad
out
loope
hlt
dec
iret
cmp
and
push
mov
pop
ljmp
sub
push
rorl
xchg
idivl
or
fisubl
cmp
cmpsl
test
xchg
test
adc
popa
add
imul
dec
test
loop
push
pushf
jge
sub
pop
mov
jecxz
and
scas
inc
andb
xor
mov
ja
imul
cmp
mov
out
pop
fcoms
pop
inc
cmp
adc
push
mov
and
stc
out
cmp
jbe
fldt
mov
stc
je
inc
jl
fs
xchg
lds
or
clc
push
out
fcmove
mov
inc
insl
cmp
outsl
xchg
jbe
push
mov
ds
pop
sub
outsl
fcmovbe
jne
dec
or
fstpt
fwait
gs
push
sub
sbb
lods
jo
hlt
in
in
jmp
inc
scas
xchg
xor
imull
mov
pop
jge
orb
xchg
into
pop
lock
pop
push
mov
mov
dec
inc
stos
dec
push
js
push
inc
mov
and
or
jne
into
jge
xchg
sub
or
mov
mov
jbe
std
jns
stc
cltd
jecxz
das
dec
or
mov
les
popf
sbb
sbb
test
adc
arpl
rolb
in
fdivs
mov
les
test
mov
outsb
test
sub
sarl
ja
and
xor
add
sbb
sbb
aam
cmp
push
in
repz
push
mov
push
fisubrl
loope
jmp
imul
dec
int3
loopne
jmp
out
aas
imul
pop
pop
addr16
pushf
clc
mov
sub
mov
mov
fs
out
ror
jmp
jne
out
fmulp
and
or
dec
push
test
ds
idivl
xchg
lret
test
movsb
jnp
test
mov
xchg
in
sub
xor
cwtl
icebp
and
ds
jmp
mov
ret
ds
xor
in
scas
daa
sbb
test
cmp
dec
das
hlt
jge
or
mov
sub
push
mov
sbb
in
and
sub
sbb
jge
out
movsl
add
cmp
jmp
mov
mov
mov
inc
mov
mov
jns
test
aas
mov
pop
xchg
rorl
lahf
jb
push
sub
mov
cmpl
test
clc
rcl
mov
aam
xor
mov
jno
cltd
push
in
cmp
test
aad
inc
jp
inc
adc
add
mov
insl
fwait
adc
sub
loope
hlt
pop
cld
mov
cmp
push
in
test
add
jns
int
xchg
sbb
mov
push
aam
or
mov
sbb
cmp
push
xchg
mov
jae
pop
xor
adc
loope
pop
outsb
pop
push
mov
pop
jbe
flds
neg
xor
mov
adc
jo
divl
sbb
xor
sub
out
xchg
mov
or
mov
popf
mov
inc
ds
lods
add
inc
mov
cmp
mov
int3
xchg
sub
lea
mov
add
adc
addr16
pop
loop
and
sub
in
sbb
jo
mov
pop
frstor
lcall
int
cwtl
lahf
cmpsb
je
popa
mov
push
cmp
pop
ret
inc
sbb
aas
adc
lods
in
mov
ret
cmp
pop
sbb
loopne
dec
dec
adc
jmp
je
pop
sub
pop
and
pop
add
cmp
or
fsubrl
fs
decl
mov
pop
jl
push
mov
mov
out
mov
push
les
pop
mov
rolb
in
fwait
sahf
or
in
jne
test
test
cwtl
lret
shll
xchg
push
mov
sahf
test
pop
or
dec
or
mov
sbb
ljmp
jbe
jmp
mov
pop
lods
jns
leave
jns
repnz
fistps
into
push
mov
jb
mov
sub
push
in
dec
push
dec
lret
aad
push
pop
call
add
inc
jg
imul
arpl
xor
sub
and
sub
in
push
test
fwait
push
dec
sbb
fdivr
movsl
mov
xchg
fwait
push
jl
mov
addb
scas
add
cltd
pop
lret
pop
mov
ret
fwait
repz
rolb
pop
push
xchg
xchg
pop
mov
xchg
test
lods
adc
lods
mov
push
incb
std
fucomip
push
jg
js
rcrb
mov
jne
in
pop
or
push
leave
pop
lods
push
jae
not
mov
outsb
push
fsts
jge
arpl
mov
dec
inc
sub
xchg
shll
and
sysenter
pop
icebp
ficoms
sub
mov
xorl
fistpl
pop
adc
pop
std
mov
repnz
jne
jns
fld
jb
dec
bound
cmp
mov
sbb
sub
dec
mul
cmpsb
push
mov
adc
mov
jle
cmpsl
xchg
sahf
hlt
imul
jmp
add
stos
sbb
movsl
adc
mov
mov
mov
rcrl
sub
filds
and
fs
outsl
adc
push
adcb
sbb
xor
cs
xor
das
lods
xchg
mov
cmp
mov
cmpsb
inc
cli
push
lods
mov
out
sub
mov
mov
or
jnp
inc
pop
or
cmp
pop
or
cs
subb
sub
cwtl
pusha
push
dec
stos
push
pop
add
mov
out
test
push
stos
or
in
and
mov
movsl
sbb
mov
cmpsl
mov
or
sahf
sarl
mov
xchg
sub
fcmovnb
arpl
dec
mulb
or
inc
popa
add
fdivl
cltd
test
push
inc
call
gs
dec
das
xchg
add
mov
hlt
dec
jge
shll
xchg
in
jle
fistpll
shll
dec
lret
test
mov
push
lahf
xor
cmc
les
or
test
and
push
fisubs
xor
inc
dec
adc
inc
dec
stc
adc
jecxz
hlt
into
lods
sbb
mov
jbe
scas
mov
adc
xchg
adc
sti
in
add
xchg
arpl
pop
aad
arpl
js
jge
lahf
add
ja
push
movsb
mov
xor
notb
jno
daa
inc
rcrl
inc
xchg
cs
adcl
xor
jmp
nop
cmpsb
add
push
xor
xor
cmp
movsl
popf
decl
xchg
and
pop
cld
es
fistpl
or
mov
das
and
jo
repnz
push
test
add
outsb
cmp
mov
mov
or
adc
or
mov
imul
xchg
jne
add
pop
mov
fs
adcb
dec
pop
movsb
pusha
or
sub
cwtl
jmp
cwtl
and
fisttpl
mov
insb
insb
cmp
icebp
mov
inc
pop
out
insb
adc
push
aaa
shlb
shll
leave
add
lea
or
nop
test
inc
dec
test
hlt
sub
rorb
push
cmp
push
inc
cmp
inc
cmp
cmp
nop
sub
xchg
pop
ljmp
add
xor
out
xchg
dec
mov
icebp
xor
mov
xor
xlat
mov
scas
xor
repz
push
pop
cmp
or
test
cmp
sbb
sbb
sub
rolb
fistpl
rorb
push
xchg
fdivrl
inc
xor
adc
ja
xchg
orb
jge
xor
dec
xorb
scas
xchg
cmp
add
gs
and
mov
inc
cmp
shlb
and
xchg
xor
test
mov
xchg
and
clc
mov
inc
imul
shlb
dec
in
rorb
pop
mov
aam
sbb
stos
mov
adc
test
xor
pop
repnz
sahf
daa
and
rorl
push
mov
add
mov
push
pop
dec
into
add
cmp
sub
mov
mov
int
popa
sahf
nop
scas
jg
ja
pop
jns
pushf
xor
adc
out
mov
xor
fld
aam
lcall
sti
pushf
mov
nop
dec
mov
pop
aam
fnstsw
test
or
mov
jbe
mov
cvtdq2ps
inc
pop
pop
dec
jge
negl
lcall
movsbl
dec
xchg
adc
insl
leave
repnz
xor
int3
and
mov
std
je
imul
mov
push
bound
adc
arpl
mov
je
mov
cmp
ss
aaa
mov
fistpl
mov
outsl
push
out
inc
mov
roll
adc
out
cli
and
rcr
es
add
add
xchg
pop
pop
xchg
dec
movsl
xlat
in
jne
inc
and
add
and
mov
icebp
xchg
add
push
lret
sub
mov
add
aaa
pop
add
dec
mov
xchg
movsl
mov
dec
pop
mov
dec
push
lds
mov
cmc
sbb
sub
push
test
jb
das
inc
xor
cwtl
sub
imul
jge
insl
repz
loop
mov
or
out
mov
and
testl
insl
sbb
adc
push
xchg
pop
push
sti
loopne
mov
mull
cmpsl
in
xchg
mov
fistpll
xchg
cmp
jl
rorl
jge
cmp
mov
pop
pop
cwtl
bound
or
mov
repz
outsl
pop
loop
nop
mov
xlat
jg
cmp
out
ret
jb
je
push
pop
shlb
movl
cmp
mov
addr16
mov
push
lea
sub
and
xchg
ljmp
mov
lods
cmc
aam
pop
pusha
mov
fwait
arpl
cmpsl
out
adc
ja
add
push
cmpsb
repnz
out
jbe
fmuls
aam
movsl
lret
loop
ret
jecxz
xchg
testl
mov
sub
xor
mov
pop
push
mov
pop
loopne
fsubl
jmp
and
mov
mov
stc
push
pop
lds
push
or
push
call
mov
repnz
in
int
fnstcw
lahf
pop
mov
push
mov
pushf
ss
repz
aad
mov
xchg
dec
scas
movsb
jns
sub
ljmp
adc
fsubrs
mov
jp
cltd
xlat
mov
fwait
add
jle
mov
jne
loopne
mov
xor
xchg
aas
int3
movsb
fidivrl
rcr
push
out
sbb
nopl
dec
mov
pop
mov
cmp
inc
jns
jne
cmpsl
insb
ss
or
adc
mov
sub
lock
scas
mov
out
fsts
les
sub
lods
mov
adc
jbe
icebp
push
js
es
popf
add
ss
test
xor
adc
pop
in
cmp
rcrb
jg
test
pop
aaa
dec
sbb
fstpt
push
nop
mov
inc
jbe
icebp
push
fsubr
aas
or
insb
jle
mov
lock
jmp
addl
cwtl
and
or
fsubrs
push
int3
push
mov
xchg
mov
dec
pusha
inc
sbb
pop
push
cmp
mov
test
push
aas
stos
pop
aas
add
nop
dec
aad
mov
scas
stos
or
popf
ret
in
or
mov
push
pop
out
icebp
or
add
insl
pop
jae
mov
sub
in
scas
sub
adc
inc
outsl
movsb
ret
sbb
repz
cmp
add
dec
test
mov
mov
push
mov
sub
add
push
mov
add
xchg
push
lret
scas
in
hlt
sub
inc
mov
outsb
sub
dec
fwait
xor
push
jb
sub
rclb
push
movsl
pusha
fucomp
mov
cmpsb
cld
insb
lret
sbb
pop
mov
mov
sbb
inc
iret
cltd
cmp
sbb
push
adc
out
push
and
mov
adc
popa
inc
in
movsb
fwait
cld
pop
xor
sub
test
fs
ljmp
mov
lods
rcrb
lcall
mov
sub
jbe
outsl
into
leave
aam
sti
ss
xchg
cmp
enter
repnz
jecxz
mov
pop
out
mov
jle
or
rcrl
mov
sub
bound
or
dec
sti
mov
in
jg
cltd
dec
push
lock
insl
ret
std
mov
sti
pop
test
out
push
adc
sub
or
sub
lret
ja
in
popf
in
fcom
call
stc
leave
je
ss
adc
mov
out
jp
loope
rcr
lds
cs
movsl
mov
cmpsl
jp
dec
mov
adc
add
dec
mov
xor
rcrb
jae
push
xor
pop
int3
adc
pop
insb
inc
sbb
add
fbstp
lret
and
jmp
sub
cs
push
and
in
mov
popa
cmp
cltd
or
add
xchg
add
repz
xor
out
cmp
fbld
dec
pop
mov
movb
into
mov
sub
into
cmp
mov
insl
mov
ss
or
or
cmpsb
sub
sti
fildl
stc
xlat
mov
aam
and
or
mov
enter
popf
pop
fstps
mov
adcb
bound
shrb
xor
loop
decl
dec
dec
mov
movsl
add
es
push
insl
gs
mov
cmp
out
push
lods
data16
negl
xchg
rcrb
sbb
inc
xor
stos
out
mov
gs
fisubrs
mov
jecxz
std
xchg
sub
lea
lods
popf
cmpsl
xchg
fiadds
mov
lahf
mov
imul
inc
xor
adc
inc
sbb
ja
aam
movl
mov
stos
mov
testb
cltd
unpcklps
adc
mov
fnsave
sbb
add
push
xor
pop
pop
in
rcl
ja
pushl
or
mov
std
inc
cltd
mov
dec
fs
in
and
push
ds
stos
mov
outsl
dec
jnp
lret
dec
sbb
or
ret
sbb
rorb
repnz
or
out
cmp
rolb
push
push
fnstenv
pop
lock
fsts
push
stos
int3
dec
ljmp
jae
xchg
pop
sti
je
out
mov
test
sbbl
xor
repnz
lcall
push
and
and
jle
fwait
and
test
sbb
adc
mov
jns
loop
aad
je
inc
or
loope
add
hlt
push
cmpsl
mov
xor
fisubrs
mov
popf
out
inc
lds
xlat
mov
ds
or
mov
xchg
xor
sub
punpcklwd
stos
popa
adcl
cltd
leave
dec
pop
mov
ljmp
dec
inc
popa
xchg
andb
cmp
pop
imul
aas
inc
mov
sbb
mov
pushf
xor
std
xchg
gs
pop
dec
test
xchg
adc
pop
stc
add
jmp
pop
scas
mov
mov
in
cmp
xor
mov
lods
pop
adc
clc
mov
mov
scas
and
mov
imul
fnstsw
test
dec
pop
sbb
inc
ss
ret
pop
jbe
mov
mov
cltd
sbb
pusha
lahf
test
push
lock
xchg
int
loop
es
cmpsb
pop
jnp
xchg
icebp
mov
push
mov
int
clc
ljmp
lock
out
dec
sbb
dec
mov
mov
jp
stos
pop
icebp
in
sbb
mov
sbb
iret
iret
outsl
xchg
aaa
dec
in
or
dec
or
mov
sti
push
sbbl
dec
xor
dec
or
fisubrs
sub
scas
push
and
insb
adc
daa
dec
nop
outsl
aad
xchg
cltd
pop
jns
clts
cli
adc
jnp
add
cld
and
loop
sub
pop
ret
lret
mov
clc
sar
sub
push
mov
punpcklwd
lock
mov
shrb
jmp
lret
xlat
pcmpeqd
jne
mov
jmp
xchg
enter
sarb
addb
inc
adc
push
shrb
xchg
dec
popa
jo
mov
or
sbb
jnp
cmp
and
out
lahf
xchg
add
adc
sbb
cmp
jbe
and
cmp
dec
sti
rclb
decl
add
and
add
call
sarb
push
sub
test
das
sub
sub
fisubs
into
data16
pop
std
in
jl
mov
lods
jge
cmp
outsl
mov
incl
mov
divl
and
jns
mov
add
fisttpl
clc
pop
je
mov
into
sbb
add
pop
jne
cli
mov
push
xor
sbb
sti
movsb
and
sbb
push
stos
dec
pop
es
cmc
hlt
xchg
mov
icebp
pop
ret
cmp
push
push
mov
sbb
sbb
mov
jl
push
or
in
or
mov
test
and
repz
das
jmp
push
mov
pop
pusha
out
outsl
jge
push
repz
xlat
jecxz
lea
les
insl
in
and
cld
mov
jp
dec
push
in
adc
insb
and
lret
pop
mov
pusha
mov
inc
sbb
cltd
or
decl
or
and
pop
into
push
adc
cmpsl
lds
mov
adc
mov
cmp
xor
out
xchg
mov
xor
dec
xchg
lret
fldt
les
popf
add
sub
and
lahf
or
inc
gs
xchg
jo
pop
jae
mov
ret
pushf
shl
sbb
add
cmpsb
imul
pop
scas
lahf
ret
aam
jae
test
dec
fnstsw
ljmp
loope
sbb
push
push
mov
adc
outsb
jmp
test
inc
mov
leave
push
ds
mov
in
pop
cmpsb
shlb
loope
ss
mov
sahf
popl
cmpsb
loopne
mov
jle
mov
jne
test
add
pop
fcoms
hlt
sub
pop
orb
inc
mov
in
xor
clc
jo
aad
aam
das
jg
and
inc
xchg
cmc
out
and
cmp
push
imul
repnz
cmp
xor
jecxz
xchg
fs
cmpsl
aaa
or
xchg
dec
rorb
lret
push
dec
lds
fdiv
in
inc
mov
cmp
cmp
and
or
xor
fwait
adc
pop
push
mov
mov
repnz
dec
hlt
dec
mov
rcr
pshufw
pop
sub
data16
mov
sarl
add
leave
roll
das
inc
pop
xor
shlb
imul
jp
sbb
testl
aas
gs
mov
test
mov
rcr
or
inc
push
mov
call
xchg
movsb
pushf
jno
add
jne
xor
dec
int
jecxz
push
add
inc
push
ret
in
sub
sub
sahf
test
aam
out
dec
iret
cmpsl
pop
cmc
inc
push
cmc
or
mov
and
in
pop
cmc
fcomps
imul
mulb
adc
insb
idivl
push
sub
movsb
mov
daa
je
cmp
push
mov
push
fxch
cmpsb
andl
scas
cmp
andb
in
push
jmp
das
fdivr
ss
sbb
and
xchg
pop
jmp
test
cmp
dec
dec
pop
mov
bound
cld
dec
in
add
sub
sub
fsubrl
out
mov
add
and
fdiv
filds
xchg
ret
jecxz
pusha
jns
and
sub
mov
ljmp
sbb
mov
push
add
pop
and
lcall
xchg
add
mov
lahf
adc
data16
or
shlb
lcall
and
mov
test
or
imul
sbb
ret
stc
adcl
test
cmp
popf
out
mov
test
mov
shrb
stos
sub
rcrl
les
ja
jae
mov
cmpsl
in
or
push
sub
adc
mov
pop
scas
imul
push
dec
xchg
adc
adc
daa
clc
xchg
hlt
add
or
push
mov
mov
in
rclb
popf
push
sbbb
enter
loopne
jle
dec
xor
dec
pop
cwtl
cli
push
pop
sub
xchg
inc
in
fidivrs
mov
sbb
sbb
push
dec
pop
mov
add
and
mov
and
mov
test
xor
xchg
imul
push
or
mov
xlat
pop
dec
jo
xchg
lret
nop
dec
cli
cli
dec
jbe
addr16
mov
lock
xchg
jmp
test
shl
xchg
gs
inc
jmp
or
adcl
push
les
pop
xchg
sti
xchg
ficompl
movsb
push
insl
jns
xchg
inc
mov
in
mov
xchg
adc
aaa
sbb
lods
dec
mov
dec
subb
sub
popf
stc
adcl
hlt
cmpb
lds
lods
or
xchg
in
xchg
repnz
xor
push
scas
pusha
cmpsl
jp
push
xor
cmp
mov
mov
rolb
pop
mov
cmp
or
inc
outsb
mov
fs
push
or
mov
dec
mov
hlt
jg
or
push
lock
pusha
xchg
ret
cs
cmpb
movl
mov
out
nop
movsb
mov
shlb
push
dec
fdivrp
cmc
mov
mov
mov
jge
or
ret
push
test
sbb
sub
mov
xlat
negl
mov
and
into
and
arpl
adc
out
jne
sbb
mov
enter
ljmp
jg
lea
stc
inc
xor
std
loope
push
lods
int
pop
xchg
ret
push
mov
mov
pop
mov
popa
adc
pop
pop
mov
mov
dec
mov
mov
ret
int3
fisubrl
lcall
cmp
jmp
ss
testl
fdivp
pushf
jp
test
cli
addl
add
jmp
in
mov
xchg
aas
fs
xor
inc
fbld
xor
jno
push
inc
adc
mov
sbb
mov
add
bound
popa
and
test
mov
popa
lock
sti
cmp
dec
out
mov
jmp
cmp
xchg
xchg
js
sub
push
and
lret
or
or
xchg
or
xor
ficoml
jnp
into
jo
xchg
and
inc
xchg
pop
mov
adc
inc
cmp
xchg
inc
inc
sbb
jae
ret
loopne
mov
stc
inc
fcompl
ucomiss
add
loope
add
sbb
das
or
fcom
cmp
mov
push
repz
je
xor
sbb
ja
jo
mov
scas
mov
cltd
add
out
mov
inc
cmp
xor
pop
mov
cmp
push
lods
and
int
sbb
int
and
xchg
popf
outsl
dec
mov
inc
bound
fnclex
int3
lret
add
or
add
jnp
mov
push
insl
or
sub
fwait
sbb
rorl
ret
and
pusha
fistpl
cwtl
mov
pop
testl
push
jns
pop
xchg
imul
bound
std
aaa
repnz
sbb
sub
idivl
cmpsb
daa
and
scas
xchg
add
stos
sub
mov
out
mov
outsl
or
push
sbb
mov
dec
inc
and
jmp
je
xchg
imul
adc
mov
push
addr16
inc
xchg
fcomps
adc
call
mov
and
fiaddl
sbb
jbe
or
jmp
adc
push
hlt
ss
loop
jmp
and
jns
movb
inc
inc
pushf
movsl
mov
movsb
sbb
add
sub
test
and
mov
dec
push
lret
pop
cmp
aam
pop
std
sbb
jl
fcmovbe
in
data16
mov
xor
call
xchg
testb
cli
in
adc
mov
mov
outsl
cld
inc
fs
mov
cmc
mov
mov
movsl
ss
jne
xor
pushf
shrl
lds
mov
mov
pop
mov
cld
mov
add
les
mov
mov
loopne
mov
inc
xchg
data16
pop
leave
xchg
push
sbb
stos
adc
add
mov
mov
add
xchg
xchg
add
mov
test
outsl
push
xchg
ljmp
es
imul
movsl
testb
sub
mov
cmpsb
leave
cwtl
testl
mov
iret
push
fnsave
xchg
orb
fcmovbe
add
and
add
xchg
cmp
fwait
or
stos
mov
into
fiaddl
xchg
lret
mov
icebp
pop
leave
add
jg
movsb
mov
sub
outsb
and
dec
pusha
xchg
aaa
mov
xorl
jno
outsl
nop
sbb
push
lock
mov
adc
jge
out
gs
dec
xchg
shl
pop
and
dec
add
mov
adc
and
rol
cmpb
mov
mov
hlt
call
leave
cmpsb
mov
push
rolb
jge
out
push
pop
push
cmpsl
xor
enter
inc
xchg
mov
insl
or
or
insb
pop
mov
ja
ret
test
and
adc
test
sub
cmp
arpl
imul
jne
stos
push
adc
test
xchg
ficoml
sbb
sbb
push
xor
movsb
cmpsl
mov
mov
int
enter
fdivs
and
mov
aam
inc
scas
xor
push
push
cmp
cmova
pop
sbb
and
cmp
int3
jl
dec
dec
cltd
or
jno
rol
adc
push
mov
jle
push
movl
pusha
dec
shll
and
push
loop
jg
les
cld
sub
push
lahf
inc
pop
out
enter
or
pop
add
loop
loop
fcmovb
js
mov
cwtl
cmp
repz
or
loope
mov
mov
inc
mov
xor
rcll
add
sbbl
lods
mov
jne
fdivrs
xchg
xor
xor
cli
mov
adc
nop
mov
das
cld
jmp
mov
mov
mov
pop
into
xchg
xchg
ret
nop
dec
cmp
into
outsl
jp
iret
xlat
and
mov
xchg
dec
fucom
xor
pop
add
or
popf
leave
icebp
mov
push
dec
push
subl
xchg
inc
loopne
xor
jmp
push
scas
jecxz
sub
push
aad
orb
cwtl
lock
shr
mov
and
sahf
fistl
mul
mov
iret
cmp
in
mov
pop
fstl
mov
mov
mov
cmpb
arpl
xor
imul
xchg
add
sbb
call
xlat
int
inc
push
movsl
mov
fidivs
cmp
and
mov
adc
scas
mov
jmp
mov
fwait
popl
leave
mov
ss
push
or
popa
push
adc
lods
ss
test
pop
gs
mov
jnp
mov
adc
inc
insl
outsl
out
je
mov
adc
aaa
mov
sahf
xlat
addl
in
fdivr
dec
xlat
xchg
mov
loop
in
je
mov
jnp
xchg
sarl
dec
push
in
and
jecxz
test
lea
adc
pop
sub
notl
push
mov
jle
repz
pop
jo
dec
loop
mov
out
jl
dec
jmp
aad
test
into
nop
arpl
lret
stos
xchg
mov
or
ljmp
neg
xor
out
xchg
xor
imul
shll
data16
sub
sbb
push
fildl
in
mov
jle
outsb
cmpsb
jnp
or
out
js
jb
stc
or
cmp
xor
cmp
sub
enter
in
mov
aaa
outsb
data16
scas
jp
and
lret
test
cmp
orb
dec
xor
push
lock
clc
pop
push
sub
test
jecxz
jnp
mov
inc
in
mov
mov
les
mov
cmp
lods
js
cmp
out
sbb
sti
rcr
pop
push
mov
out
stc
dec
insl
fsubl
shl
sub
sbb
pop
jnp
adc
push
daa
push
out
dec
sub
test
adc
fcomi
xchg
adc
jge
lcall
cmp
dec
mov
out
lahf
lods
cs
xchg
cmp
pop
movsbl
cmpsw
cmp
ret
mov
test
cmp
hlt
sbb
pop
sub
dec
push
xchg
negb
jp
push
imul
cmp
clc
fildll
test
inc
push
push
xchg
fwait
rol
testb
adc
adc
aas
inc
mov
jecxz
ret
movsl
sbb
jle
pop
mov
cld
jg
jbe
inc
dec
loope
or
imul
xor
arpl
je
pop
aaa
insb
inc
cmp
push
rcll
pop
add
adcl
fwait
aas
popa
ljmp
das
push
aam
lds
inc
push
insb
cltd
pushf
mov
in
repz
stc
icebp
je
pop
adc
mov
mov
pop
mov
ljmp
inc
mov
mov
sbb
jae
int3
movsb
mov
rol
cmp
dec
out
cmpsb
cmpl
push
mov
push
mov
mov
inc
ret
notb
xchg
repz
arpl
or
mov
mov
and
cs
ja
pop
fiadds
out
sahf
mov
push
fdivl
add
movsl
xchg
add
pop
xor
dec
inc
xchg
roll
or
or
js
pushf
mov
loop
gs
aad
data16
xchg
les
addr16
and
lcall
xchg
add
cmc
icebp
sbb
aad
pop
cwtl
roll
out
sub
mov
jge
push
add
push
inc
inc
xor
jns
ja
rorb
ffree
pop
sub
js
dec
movsb
sub
jmp
mov
jg
sbb
push
fistps
xor
lock
test
mov
pop
mov
cmp
jl
or
int3
cmp
jl
jge
jmp
filds
xchg
imul
xor
pop
pushf
pop
in
fldl
sti
cmc
mov
inc
mov
fmull
outsb
push
int
push
cmp
lcall
loope
scas
lret
insb
mov
mov
jne
cmp
cmc
dec
and
fimull
loope
sub
push
mov
dec
cmp
xchg
rcrb
shl
xchg
fsubrl
pop
shlb
lret
sar
lods
aaa
jno
ret
int
test
sub
enter
outsl
xorl
jmp
inc
push
cmp
lret
adc
popf
jo
fisubl
pop
inc
push
ficompl
sarl
xchg
out
test
sbb
xchg
dec
cmp
inc
xchg
out
and
subl
mov
jge
icebp
sti
pop
cmp
inc
add
daa
lods
fstpl
push
push
movsl
jo
out
xor
mov
add
lock
inc
adc
inc
mov
lret
adc
popf
pop
xchg
push
rcll
fcomi
lods
ret
ds
add
xor
and
fdivr
repz
es
test
negl
jae
cpuid
add
dec
sbb
pop
into
int
clc
movsl
das
sub
pushf
xchg
in
push
sub
in
mov
or
fdivrs
stos
adc
mov
loope
shrb
outsb
daa
jno
add
mov
jmp
mov
adc
inc
sbb
into
cld
mov
lods
fsub
or
jnp
repnz
inc
jecxz
mov
les
xor
out
shl
mov
rcl
in
ss
sub
lock
cmc
dec
repz
rolb
jno
enter
mov
test
div
insl
mov
jmp
mov
pop
rolb
add
imul
xchg
testl
cld
popa
test
pop
inc
outsb
fsubrl
pop
jge
push
jecxz
scas
inc
sub
inc
adc
jae
mov
dec
dec
scas
and
hlt
or
inc
movl
push
in
mov
or
into
scas
mov
lods
dec
test
sub
push
xor
xchg
std
and
test
das
lods
aaa
arpl
push
lret
data16
inc
lret
stc
sbb
adc
mov
sarl
push
test
push
mov
push
fs
in
stos
push
divps
sub
scas
stc
cmp
cmpsl
mov
scas
mov
repnz
push
cmc
xchg
mov
incb
xor
mov
push
sbb
decb
in
lods
clc
into
jp
cmp
jbe
pushl
mov
scas
popf
js
int3
test
popf
mov
xchg
rolb
push
in
fisubl
sbb
popl
arpl
cmp
sub
cmp
push
cltd
inc
aaa
js
jbe
jmp
cmp
pop
and
bound
inc
divb
push
jmp
daa
jae
lea
jns
xor
aaa
pop
adc
lods
sbb
jae
mov
sbb
adc
jge
add
mov
inc
mov
rcr
pop
cmp
outsl
lods
andl
and
lds
in
mov
mov
push
or
sahf
loope
jo
stos
mov
sbb
sub
and
sbb
xchg
stos
cmc
pop
adc
cmp
lcall
add
jle
dec
or
lods
add
aaa
mov
xor
push
push
les
push
cmp
and
mov
lret
shrl
jmp
gs
push
loop
in
adc
daa
mov
mov
lds
fisubrs
jmp
mov
arpl
sbb
jne
addb
pop
push
cmpsb
cmp
mov
test
inc
in
in
dec
push
cmp
jecxz
add
cmp
lods
add
fwait
or
aaa
in
pop
ficomps
push
jnp
sub
sub
mov
cmp
jl
mov
fisubrl
pop
bound
inc
xor
cltd
arpl
or
push
imul
inc
fwait
shlb
jmp
iret
sbb
pushl
dec
sbb
ret
add
cmp
movsl
loopne
pop
insb
xor
in
arpl
pop
or
cmp
xchg
ds
cmp
enter
mov
jmp
push
shll
lods
lahf
faddl
shlb
dec
or
xorb
outsb
pop
add
fidivl
ja
outsb
mov
jp
subb
ljmp
mov
aas
mov
fsubrs
xchg
lret
and
inc
dec
pushf
mov
popl
and
sub
insl
clc
cmp
lods
inc
negl
and
mov
lea
fimull
cld
sahf
xor
jle
in
inc
shll
add
push
pusha
xchg
scas
mov
mov
daa
mov
in
enter
pop
sbb
fnstsw
or
inc
dec
enter
mov
inc
outsl
push
in
arpl
push
shll
pop
mov
xor
adc
imul
daa
cmpsb
lds
add
mov
pop
mov
mov
jecxz
jns
cmc
leave
add
or
in
cmp
or
add
insl
push
sub
xor
ljmp
xchg
std
or
mov
add
mov
mov
jno
out
enter
jo
jmp
outsl
push
mov
cmpsl
jl
inc
push
or
je
dec
jns
test
push
xchg
shr
xor
enter
mov
and
jns
mov
sti
and
imul
insl
mov
ret
das
mov
xor
ret
cmc
push
and
insb
adc
popf
popa
lret
push
scas
pop
inc
push
mov
sarl
aam
int3
jp
dec
mov
fdivrs
jg
cwtl
fcoms
xchg
ja
arpl
inc
or
fistpl
lahf
mov
mov
sub
sbb
in
loopne
cltd
xchg
dec
out
test
cwtl
aam
push
stos
push
ss
inc
mov
mov
mov
cmpsl
mov
mov
jbe
mov
push
mov
fmull
or
sub
rcll
iret
int3
je
popl
insl
in
jecxz
jb
pop
push
fistpl
xchg
icebp
jae
ljmp
adc
cmp
pop
fisubl
in
mov
pop
adc
adcb
cmp
arpl
aas
pushf
pop
cmpsl
adc
in
push
jb
arpl
mov
xchg
add
repz
pusha
xchg
sti
ret
mov
hlt
in
mov
add
jne
aas
imul
into
mov
out
adc
lahf
outsb
outsl
icebp
lea
xchg
push
mov
sub
repz
push
enter
test
push
int3
jge
push
loope
xchg
xor
adc
sub
cmp
std
inc
xor
push
or
jle
jge
and
or
adcb
push
sub
loop
setbe
mov
dec
xlat
jle
inc
popf
and
mov
movsb
incl
or
sti
jae
lock
fwait
xchg
cmpb
sbb
cmp
xor
aaa
sub
mov
mov
jmp
ficoms
mov
repz
jmp
jmp
pop
popf
push
push
test
frstor
jecxz
test
sub
mov
daa
sbb
loopne
cmp
jo
and
fwait
pop
es
add
push
das
jno
push
es
sbb
andl
sbb
or
xchg
ret
movsb
cmp
sarb
sahf
jne
je
neg
dec
and
mov
pop
jno
mov
adc
fldcw
lods
adc
cmc
sarb
outsb
sahf
cltd
mov
pusha
cwtl
jae
jle
and
rcrb
jbe
cmp
mov
mov
in
shlb
data16
enter
cmp
pop
sbb
xchg
pop
mov
cmpsl
scas
sub
mov
mov
inc
dec
bound
sub
and
addl
shr
test
popa
jae
ljmp
add
jnp
shlb
stos
mov
mov
and
repz
imul
insb
inc
call
shll
das
sub
repz
pop
jge
mov
sbb
cs
sub
dec
add
adc
inc
jae
pop
fisttpl
and
adc
cltd
mov
xor
scas
inc
popa
push
ljmp
subb
mov
push
sahf
je
mov
xchg
push
xor
fsubrs
leave
lret
push
jg
sub
push
je
pushl
stos
mov
fimuls
outsb
pop
jp
rclb
sbb
and
int3
fiaddl
xchg
adc
cmpsl
adc
fs
in
dec
pushf
or
or
sbb
pop
add
cmpsb
pop
or
mov
clc
popa
xor
sti
pop
aad
pop
sub
and
push
jge
mov
add
mov
mov
mov
leave
sub
jecxz
inc
shlb
xchg
aam
push
sbb
test
sbb
bound
xchg
out
ljmp
inc
clc
scas
ret
or
rorb
inc
iret
addr16
loopne
mov
fstp
lods
scas
lds
loop
sub
enter
and
push
enter
and
js
dec
out
pop
in
jbe
sub
xor
outsb
sbb
or
add
mov
je
icebp
ficoml
out
orb
mov
and
inc
iret
out
xor
jl
nop
hlt
sbb
test
outsb
stc
daa
cmpsl
push
ja
outsb
xchg
mov
mov
dec
mov
jne
fs
pop
pop
jno
adc
push
push
test
pop
xchg
push
jbe
or
ret
mov
mov
aas
out
loopne
mov
mov
add
jmp
pop
push
add
mov
push
movsb
jmp
xchg
adc
test
cli
mov
adc
testb
mov
jmp
mov
sub
adcl
inc
call
shl
inc
inc
pop
xchg
mov
repz
insb
push
js
jge
jne
aaa
adc
outsb
or
inc
aam
psrlq
inc
sbb
xchg
inc
dec
sub
test
pop
imul
xlat
xchg
xchg
add
lret
cmpsb
jmp
mov
test
adc
pop
shr
fstpl
repnz
push
inc
shr
fucomip
pushf
mov
ss
ljmp
push
lods
jg
mov
in
and
scas
cmp
xor
cmc
das
lods
ficomps
sub
out
cli
je
inc
lods
add
inc
inc
pushf
mov
loopne
mov
sbb
insb
mov
lret
mov
hlt
xchg
or
jecxz
and
aad
dec
jo
adc
push
and
into
and
and
dec
cltd
test
cld
inc
sub
fsts
dec
jnp
and
pop
daa
mov
and
dec
sbb
pusha
mov
ret
aam
jns
push
cmc
lret
daa
mov
cltd
scas
dec
inc
xchg
mov
push
and
or
xchg
int
into
cmp
pop
xor
dec
popf
jb
push
mov
icebp
loope
adc
dec
pop
push
mov
and
pop
and
js
dec
cs
add
dec
xlat
jmp
pop
mov
xor
pusha
repz
jle
pushf
dec
out
mov
rcrb
xchg
icebp
add
fmuls
adc
add
pop
not
lret
sub
and
pop
shlb
mov
fisubl
mov
cmp
add
outsb
mov
jmp
cmp
lds
xchg
mov
fs
dec
mov
mov
nop
jl
enter
cmpsb
sub
mov
dec
enter
cmp
aam
das
mov
add
sbb
xchg
mov
or
inc
inc
pushf
std
xor
mov
xchg
sub
aaa
sarb
mov
or
mov
sub
fsubp
loopne
xor
cwtl
mov
and
sbb
pop
mov
bound
movsb
pop
sbb
in
pop
xor
cmp
movsb
jo
mov
add
add
mov
std
mov
test
pop
pop
test
jge
out
insl
into
mov
mov
add
pop
call
loopne
test
xor
dec
xchg
cmp
mov
mov
pop
scas
mov
pop
push
adc
inc
iret
movl
add
sbb
sub
leave
lods
hlt
movsb
outsb
mov
jge
jne
test
shlb
or
inc
fisubrs
out
int3
sub
push
dec
pop
sub
mov
leave
cs
cmp
xchg
dec
inc
int
dec
psubusb
jb
xchg
insl
cmpsb
push
mov
loopne
gs
mov
stos
mov
test
sbb
out
cmp
mov
fildll
and
sbb
arpl
jne
mov
ret
jae
insl
stos
lods
shll
push
lds
dec
std
jge
mov
jnp
dec
mov
lea
cmp
fmuls
lret
jp
test
sub
leave
or
push
sbb
mov
leave
cltd
pop
jg
xor
lods
int3
sbb
in
ret
jno
jl
stos
mov
xchg
inc
leave
stos
pop
mov
lods
dec
sarl
cmp
xor
cmp
mov
loopew
sub
xchg
or
adc
jne
lods
add
out
aas
or
cmp
inc
and
loope
ss
xchg
sahf
repz
shl
pop
pop
fisttpl
pop
and
pop
cmpsl
out
rcll
jmp
and
aad
cmp
and
jno
xor
xor
cltd
mov
leave
lcall
clc
stos
and
fisubrl
push
fs
xor
adc
cmp
in
cmc
sbb
arpl
jne
jle
fnsave
testl
mov
sarl
repz
mov
idivl
cltd
lock
popa
mov
pop
fstl
mov
xchg
mov
test
int
cmc
sub
arpl
int
inc
enter
xchg
adc
jecxz
rcr
add
ss
jle
mov
push
push
hlt
xchg
test
movlps
push
xor
sarb
or
shll
mov
mull
or
adc
cmp
popa
xchg
inc
pusha
fdivl
dec
inc
fsubrl
xor
lcall
xchg
mulb
xor
jp
repnz
cmp
in
push
sub
mov
movsl
lcall
pop
cmpsb
push
lret
cmp
xchg
pop
outsb
mov
push
daa
les
sbb
bound
int
sub
xchg
mov
nop
mov
xchg
into
sti
jno
daa
into
fistpl
cld
and
sti
xchg
lods
push
popf
int
fstpt
out
gs
inc
cmpsb
pop
pop
lock
popf
call
push
in
cmp
sub
cmp
cmp
int
pop
out
call
jae
xchg
aas
adcl
std
jb
stc
and
xor
lret
mov
push
mov
or
sub
cltd
outsl
lret
ret
test
inc
lods
daa
cmc
xchg
cmp
shlb
cmpsl
sti
xor
hlt
fcomps
mov
xorb
aas
imul
cmp
in
cs
pop
pop
jne
pop
ja
dec
daa
or
lret
pusha
xor
jno
movaps
scas
pop
lds
mov
in
scas
cmp
mov
push
mov
pop
adc
aas
push
and
jbe
pop
ds
jmp
push
ja
cmp
mov
icebp
inc
inc
aad
inc
lds
fistl
out
test
sbb
adc
ret
jg
xor
daa
jmp
cmp
lret
jg
test
rcll
sbb
sub
movsb
jp
sti
mov
cmpl
test
cmpsl
push
or
aaa
repnz
xchg
and
fstp
add
scas
jo
add
hlt
adc
push
ficomps
stos
subb
mov
ljmp
jmp
jbe
in
pop
fidivrs
out
stc
pop
ljmp
sbb
push
iret
ret
in
out
sub
fistl
xchg
push
push
sbb
icebp
std
loop
inc
xchg
fwait
inc
pop
push
imul
pop
cmp
mov
add
ret
insl
xor
int
jnp
mov
lahf
outsl
popa
add
std
out
sbb
jecxz
jb
iret
js
sbb
push
pmuludq
cwtl
adc
mov
mov
loop
mov
xor
and
inc
and
mov
mov
cwtl
loop
or
bnd
mov
inc
jb
lret
sbb
scas
adc
inc
add
sbb
les
inc
in
sub
push
dec
rclb
push
mov
addr16
sti
jmp
jne
repz
repnz
popa
les
adc
xchg
push
add
jae
or
rolb
scas
cmc
mov
mov
sub
push
mov
dec
flds
mov
jno
dec
push
jl
add
cwtl
lret
mov
xor
icebp
dec
out
call
frstor
leave
push
mov
mov
rcrl
addr16
fucomp
fdivs
jl
xchg
cli
popa
insl
mov
outsl
adc
outsl
adc
mov
jnp
fnstcw
add
adc
dec
mov
xchg
or
push
inc
jle
mov
xchg
jae
call
jnp
lahf
inc
pop
test
dec
ret
hlt
jo
jp
jle
xchg
movaps
jl
pop
lcall
sbb
in
xchg
rclb
add
dec
sub
and
xchg
test
das
mov
test
xor
dec
sub
ficomps
stos
lods
push
jns
xlat
psraw
dec
mov
sub
cmpsl
stc
push
jnp
adc
add
lcall
inc
push
sbb
test
repnz
jge
mov
daa
mov
rclb
and
fsub
sahf
scas
dec
mov
loope
ss
ds
push
lods
push
and
loope
cmc
dec
fs
test
pop
js
int
fwait
aam
jecxz
cld
addb
lods
ffreep
fucomi
aad
enter
xchg
sahf
add
enter
test
scas
loopne
arpl
cmp
lds
jge
cmp
push
pop
pop
mov
xchg
mov
cmp
xor
pop
movsl
sti
addr16
sub
pop
cmpsl
out
mov
lods
xor
les
xchg
lret
mov
aam
jo
cmp
rcll
mov
or
mov
cmp
cwtl
stc
xchg
or
cmp
ret
cli
xor
sub
xor
and
cmpl
les
jne
sbb
stos
fwait
lds
sub
aam
inc
gs
daa
or
adc
mov
mov
mov
cli
pop
sbb
nop
push
repnz
stc
xor
fstpt
pop
or
sti
sbb
add
push
push
daa
mov
xchg
stc
jle
repz
add
outsb
push
loope
dec
add
pop
sbbl
ret
popa
adc
pop
sub
xor
adcb
sub
xlat
repnz
sbb
aas
mov
mov
repz
and
dec
mov
sbb
movsl
or
sti
sahf
ss
jmp
mov
scas
cmp
loopne
cmpsb
lock
push
int3
int3
jg
lret
inc
jbe
or
adc
jge
cs
aaa
add
sbbl
in
lcall
dec
out
std
pop
xchg
out
mov
xchg
aad
sub
and
out
fucomi
push
lret
out
cs
mov
jo
add
add
mov
xchg
add
es
loop
mov
or
and
out
sub
pop
popf
jo
js
sarb
dec
sahf
xor
scas
ljmp
pop
jne
or
mov
pop
dec
out
cmp
xchg
ficomps
cmp
inc
fidivrl
push
test
daa
mov
mov
jnp
out
subb
scas
notb
scas
jne
adc
jle
mov
xchg
mov
dec
mov
push
into
jl
mov
push
or
pop
movsb
jnp
inc
pop
das
repz
addr16
inc
cli
mov
fiadds
test
mov
sbb
cmp
cmp
adc
enter
cmpsl
ljmp
pop
and
test
outsl
add
rcrl
pop
les
ret
pop
orl
adc
xchg
test
loop
int
xor
pushf
ret
adc
mov
lock
sub
jl
sub
insl
jae
dec
lahf
idiv
arpl
sar
mov
icebp
adc
push
sahf
stc
in
icebp
jne
aad
mov
mov
mov
je
fcomps
cwtl
lahf
adc
xchg
push
lret
cs
fdivs
aam
imul
inc
sbb
push
std
push
insl
lock
jle
repz
mov
cmp
or
cmpsb
mov
insl
push
lahf
and
xchg
movl
cmpsl
sbb
scas
xchg
cwtl
add
ret
orb
adc
shrl
xchg
daa
dec
clc
sete
and
cmp
xchg
mov
lds
dec
and
cmpsb
pop
jne
and
pop
cmp
icebp
pop
cmpsl
inc
add
in
inc
aam
hlt
sbb
incb
mov
or
test
add
and
mov
stc
outsb
into
ret
and
push
adc
cmp
lret
pusha
dec
or
ja
dec
jae
gs
sti
xchg
mov
jmp
cwtl
sub
ja
xchg
push
aam
dec
lret
cmp
cmp
outsb
jns
add
inc
out
or
je
dec
ret
dec
mov
jne
jno
mov
into
and
sub
pop
and
sub
das
cmp
call
imul
and
sub
mov
gs
xor
mov
popf
test
push
jno
out
aaa
xchg
jecxz
and
fcmovbe
add
bound
into
and
test
pop
clc
mov
xchg
cwtl
mov
adc
dec
cld
dec
stc
pop
xchg
popa
sub
jmp
hlt
pop
psraw
dec
push
xchg
lds
arpl
push
iret
ljmp
mov
jge
loope
sub
inc
push
inc
lcall
cmc
imul
and
loopne
mov
jl
add
adc
popf
std
adc
loope,pt
aam
fsubs
daa
sbb
mov
mov
aad
sbb
mov
test
les
repnz
jge
mov
push
pop
bound
pop
fwait
push
inc
in
or
imul
pop
sub
and
movsb
add
repnz
adcb
pop
fsubs
int
dec
popf
pop
shrb
int
pop
and
push
mov
mov
or
sbb
test
push
cmpsl
cmpsb
or
xchg
or
in
jb
dec
mov
push
inc
adc
mov
fwait
dec
icebp
push
out
sub
push
loope
call
adc
into
addb
sub
nop
fidivrs
pop
cmp
aaa
pushf
lret
mov
ss
jno
popf
push
imul
lods
pop
ret
loope
pop
cmp
notb
ja
jmp
adc
adc
test
rolb
lcall
add
movsl
jge
push
addr16
aam
data16
xchg
fcmovu
adc
cwtl
ret
into
test
jle
dec
lods
xchg
lods
pop
dec
in
clc
testb
sbb
stc
lds
pop
pop
push
push
cltd
sti
adc
orl
dec
sarl
push
cmc
imul
rcll
cmpsl
fs
sbb
pop
sub
dec
sub
adc
xchg
jg
xchg
or
in
movsb
test
lret
xchg
add
mov
pop
out
cmpsl
test
push
test
leave
sbb
cmc
inc
insb
or
pop
pop
xchg
call
ljmp
aad
int
adc
decl
mov
inc
stos
dec
lcall
xor
jnp
push
push
xchg
imull
fistpll
mov
dec
stos
mov
test
imul
loop
aas
pop
imul
inc
mov
sub
clc
mov
or
jne
lods
sub
sbb
mov
jge
add
pop
ja
adc
push
and
cmp
ja
dec
mov
test
mov
in
das
jg
inc
test
loope
das
aam
insb
adc
call
fdivl
dec
xor
mov
sub
ljmp
adcl
push
and
jl
add
push
in
or
xor
sarb
sahf
loop
mov
insl
xorl
test
sti
negb
sub
adc
sti
mov
mov
dec
das
jno
sbb
push
xor
dec
test
dec
xorl
lcall
dec
xchg
mov
pop
ja
add
dec
jl
cli
mov
sub
jnp
pop
jne
icebp
jo
leave
int3
jp
iret
dec
rsm
push
sti
dec
jbe
lds
outsb
sahf
jae
das
adc
loopne
scas
enter
dec
sbb
scas
mov
jecxz
push
shrb
data16
out
push
repnz
jo
xchg
mov
fidivrl
test
lea
add
push
jecxz
or
lahf
xor
xor
push
xchg
inc
cmp
push
sub
leave
inc
adc
inc
mov
dec
dec
cld
sahf
popl
repnz
out
or
mov
rcrb
sbb
push
dec
push
addr16
pusha
push
lds
scas
lahf
arpl
rol
xchg
push
rcll
int3
inc
push
xchg
enter
xchg
cmpsb
cltd
int3
mov
pop
push
scas
lods
cmc
push
pop
push
pusha
repz
movsb
fdivrl
sbb
mov
xchg
jg
int
pop
mov
subl
ja
testl
int
sub
in
cmp
leave
dec
dec
and
sub
inc
ret
mov
cmpsl
push
mov
nop
pop
xchg
cmp
cmp
mov
dec
fsubl
pop
adc
fisttpl
adc
sub
xchg
sti
push
pop
mov
lea
inc
adc
or
cld
js
lret
push
mov
or
shll
adc
pop
inc
loopne
fdivrs
mov
out
push
inc
out
pop
out
sbb
arpl
mov
mov
mov
loopne
mov
cmc
out
popf
inc
insl
xor
lret
sub
outsb
shll
lcall
sahf
pop
popa
add
mov
mov
out
pusha
mov
and
adc
lahf
sarb
jl
sbb
and
add
push
mov
mov
push
inc
push
movl
jns
and
std
lea
pop
inc
xchg
lret
mov
push
aas
dec
cmpsb
cmp
lret
cmp
lods
mov
dec
cmpsl
sahf
cmp
inc
stos
out
pop
cmp
repnz
cmp
cmp
test
xchg
and
test
cld
mov
dec
pop
andb
rcrb
jo
imul
paddw
scas
xchg
mov
sarl
test
or
cmp
push
stos
or
inc
sar
push
xchg
push
lahf
mov
adc
rclb
in
in
mov
int
sub
inc
lahf
ds
movsl
sub
push
arpl
out
lea
mov
out
bnd
jbe
popf
mov
sub
flds
rclb
out
xchg
xor
adc
xor
cmp
ret
hlt
xchg
dec
adc
dec
lret
mov
out
repnz
mov
mov
mov
or
repz
pop
dec
xchg
cmp
jg
jp
dec
pop
in
pop
push
scas
idivb
or
shl
mov
das
push
mov
cvtpi2ps
sub
fdivl
jge
ror
call
push
fdiv
adc
xchg
dec
imul
push
push
mov
jge
lahf
inc
mov
xor
add
mov
loop
mov
bound
xor
cmpsb
add
inc
cmpsb
test
jl
jae
sbb
movsb
cmpsb
scas
push
test
push
shlb
les
outsl
aaa
addr16
or
dec
mov
pop
push
mov
cmp
repnz
ret
xor
sbb
inc
cmc
in
sarl
cmc
daa
ss
push
mov
pop
jbe
mov
dec
jae
mov
frstor
cmp
mov
mull
cltd
es
bound
mov
daa
lods
jl
pushf
mov
jecxz
sti
mov
data16
and
push
xor
adc
lods
xchg
or
in
inc
rolb
mov
je
fcoml
mov
les
out
bound
cmp
aad
mov
sub
outsl
xchg
stc
jbe
mov
arpl
sarl
jb
fs
mov
xor
out
std
daa
add
pushf
lret
pop
jb
ds
sti
cmp
aad
stos
scas
aaa
mov
inc
cmp
stos
sub
ret
orl
xor
pushf
movsl
outsb
push
fadd
jne
push
lcall
lret
pushf
and
pop
adc
pusha
test
mov
mov
jns
shrb
push
or
lret
outsb
test
popa
xchg
sub
inc
cld
cld
addr16
es
add
cmp
in
negb
fs
and
and
popf
cmp
into
inc
xor
adc
adc
lahf
lods
data16
dec
ret
in
or
dec
and
pop
jg
fiaddl
repz
sub
jae
ret
out
mov
or
mov
pop
inc
jns
ja
fcmovb
mov
push
push
sti
and
adc
xchg
mov
test
dec
push
fbld
cmc
daa
fisttpll
ja
xor
dec
mov
scas
inc
mov
lods
daa
cmc
add
cmp
inc
push
cmp
in
cmp
xor
gs
jne
mov
jge
sub
loope
sub
outsb
xor
push
jns
rol
lds
sahf
sub
aam
xchg
adc
dec
and
dec
adc
test
and
push
jae
jb
mov
jbe
pop
jb
cmp
lcall
out
fdivrl
fidivrl
and
sbbb
or
add
aas
mov
cmovae
jne
cmpl
xor
cmp
or
je
mov
xchg
outsb
lea
mov
cmpsb
jl
jl
mov
call
imul
push
mov
lret
pop
push
movsbl
adc
xor
js
lods
inc
outsl
xor
or
push
call
aas
xor
aam
adc
sahf
ret
sbb
cmpl
add
incl
arpl
and
add
or
jnp
pop
mov
dec
inc
jl
add
pop
out
call
sahf
addr16
sub
pop
jne
leave
xor
out
mov
lea
mov
inc
je
jle
orb
adc
xchg
mov
hlt
push
mov
add
and
adc
jne
movsb
xchg
les
add
rorl
dec
sbb
insb
lcall
vpcomuq
enter
xchg
fsubl
bound
mov
or
jle
dec
xchg
push
repnz
jmp
mov
inc
mov
and
scas
icebp
scas
ficoms
push
inc
push
jmp
lret
stos
adc
xor
stc
jo
imul
out
jnp
push
sbb
rcrl
adc
ret
adc
jp
push
loope
push
scas
cld
mov
insb
outsl
mov
mov
push
ret
test
sub
fs
and
sub
or
out
cmp
test
fdivrs
or
addr16
or
inc
jmp
or
dec
imul
popa
lods
mov
aas
push
push
mov
lret
xor
dec
aad
shll
pushf
popf
inc
fmuls
mov
test
jno
xor
jno
or
iret
xor
out
scas
pop
mov
xor
add
into
inc
pop
loope
add
sti
xchg
and
jns
loop
stos
repz
sbb
and
xchg
sub
insl
ds
lock
popa
jmp
into
push
fld
add
cld
mov
lods
cltd
inc
iret
stos
outsb
or
add
sbb
ret
xchg
and
fisubs
mov
pop
add
insb
mov
sbb
js
add
jo
popa
xor
xchg
ret
push
pop
loop
pop
je
adc
hlt
or
popf
cli
cmp
sub
std
adc
sbb
pop
les
sbb
test
adc
dec
xchg
xor
les
lds
sub
cli
repz
jne
mov
add
lock
mov
push
push
mov
mov
jp
mov
pop
out
test
pop
cli
xchg
jg
fwait
mov
push
sarb
icebp
jl
test
xchg
jno
sti
xchg
pop
fnstcw
pop
scas
push
outsb
xor
adc
or
lea
cld
or
insb
fucomi
dec
adc
shrb
aad
enter
in
ret
or
or
ret
loope
sbb
mov
adc
xchg
sti
addr16
dec
out
cld
sbb
pop
xchg
xor
push
in
inc
cltd
cmp
aaa
sbb
es
loop
loopne
imul
push
jb
inc
enter
rcll
push
in
shrl
pop
out
mov
xchg
push
stos
popa
ficoml
xchg
ss
xor
inc
mov
mov
or
arpl
add
dec
cmpsl
and
sbb
insl
mov
cltd
fdivrs
xchg
jnp
dec
mov
jle
lcall
dec
loope
dec
ss
mov
xchg
inc
or
jmp
mull
aad
insl
lret
xlat
cli
inc
daa
cmp
cwtl
lcall
fsubs
pop
lds
stc
pusha
mov
xchg
gs
or
xor
push
fwait
jle
sub
xchg
xchg
xchg
shl
imul
decl
xlat
fcompp
sub
lea
sbb
mov
mov
mov
jns
inc
js
dec
repz
fdivrp
mov
pop
sub
xchg
dec
subl
cmc
sbb
dec
dec
cs
dec
ss
pop
cs
int
fstpt
inc
out
mov
jnp
dec
add
test
add
xchg
icebp
ljmp
rorb
dec
mov
dec
dec
mov
orl
scas
fwait
mov
mov
daa
mov
cmp
xor
push
jle
out
jnp
testb
cmp
pop
sarl
or
ret
pushf
lret
rolb
enter
or
lret
fmuls
mov
lcall
mov
sub
testl
jbe
fdivl
fdivl
loope
out
sub
sub
jg
cmp
xchg
popa
push
int3
test
sbb
mov
dec
jg
fmuls
cmp
ret
das
sub
dec
push
loop
jne
lret
aad
sub
lahf
repnz
imul
rcll
sbb
mov
sub
movsl
pop
jne
jmp
jmp
pop
dec
mov
sub
mov
insb
pushf
iret
add
mov
pop
jge
or
lods
xor
into
daa
jb
mov
out
scas
movsb
dec
and
fdiv
lea
push
hlt
pop
jnp
arpl
push
ret
popa
inc
stos
pop
xor
xor
pop
inc
sub
out
sbb
or
inc
and
cmp
scas
xchg
dec
js
mov
sub
cmpl
fwait
mov
adcl
dec
shl
cmp
movsb
loope
pop
call
inc
jecxz
xchg
adc
int3
dec
lret
mov
adc
xchg
add
rol
or
arpl
push
xor
lea
cmp
xchg
arpl
in
and
push
int3
mov
dec
inc
pop
in
rcr
ret
jp
add
sahf
xchg
or
dec
adc
xchg
inc
popa
cmp
je
jno
push
sbb
mov
std
add
test
imul
mov
out
xor
bound
stc
dec
mov
lods
xchg
jl
sti
clc
cmc
dec
int3
lea
das
pop
mov
sbb
xor
push
outsl
cmpsl
adc
mov
fadds
dec
sti
shrb
stos
or
and
jns
insb
xchg
mov
aam
cmp
mov
movsl
mov
fs
sbbl
out
les
and
xor
pop
loope
rclb
mov
add
push
cli
push
iret
inc
xchg
repz
or
enter
cltd
mov
movsl
lods
je
outsb
sub
incb
fildl
fistpl
in
pop
lock
mov
pop
aad
insl
jp
mov
inc
sbbl
sbb
jge
add
popf
push
in
pop
add
ja
mov
or
mov
rorl
mov
push
mov
xor
insb
inc
dec
pushf
loopne
inc
out
add
xchg
push
ret
and
add
push
rcrb
jo
push
jg
pop
add
scas
stos
mov
fs
daa
dec
jae
push
loope
xor
mov
xchg
icebp
dec
std
mulps
cltd
pop
xchg
push
int3
xchg
mov
addr16
dec
mov
and
lret
int
outsl
mov
sbb
aam
popf
gs
test
test
cmp
pushf
int3
movsb
fcom
out
xlat
pminub
rcll
jmp
xchg
stos
cmp
cs
pusha
out
icebp
leave
lcall
sub
in
xlat
loope
pop
xorw
inc
mov
fwait
mov
rorb
lods
movsb
aaa
lahf
ret
mov
jae
mov
sub
int3
xchg
loope
xlat
div
push
in
shlb
rol
inc
imul
mov
inc
mov
ret
add
xchg
xor
hlt
push
ret
pop
insb
mov
imul
stc
fdivl
ja
cld
dec
data16
fcmovbe
loopne
push
or
addr16
enter
pop
or
cmpsb
pop
cmc
inc
xchg
out
jae
mov
mov
or
xchg
leave
je
mov
sti
adc
push
leave
add
or
test
ja
pop
and
lods
sub
aad
ja
and
les
arpl
repz
test
fisubs
cmpsl
jns
mov
ret
sbbl
insb
not
aad
cmp
xchg
fs
add
aad
cmp
outsb
stc
ss
and
mov
cmpsl
nop
add
sarl
jns
dec
add
mov
adc
cld
insb
dec
xor
sti
loope
sbbb
mov
arpl
sbb
pop
pop
imul
stc
mov
rclb
jmp
jle
mov
mov
popf
pushf
cmp
mov
leave
sbb
adc
xchg
gs
call
add
cmp
enter
out
inc
das
xchg
jb
pop
jns
add
jge
popa
insl
cmp
xor
in
nop
xchg
fwait
ret
rcll
push
mov
sbb
inc
stc
xchg
add
cmp
adc
dec
add
cld
ljmp
lcall
daa
dec
xchg
test
repz
out
loop
inc
fistpll
lea
cmp
push
imul
cmpsb
out
gs
dec
movsl
rol
aaa
sbb
das
jl
add
loop
sbb
in
dec
scas
or
cmp
dec
jne
dec
scas
into
in
dec
mov
lea
adc
inc
push
pop
mov
or
popa
jne
xchg
sbb
pop
clc
roll
dec
stos
loope
inc
pop
stos
stos
push
sub
inc
ja
lods
or
mov
cmc
jg
insl
sub
mov
movsl
cmp
into
dec
xchg
adc
jno
fsubrs
rclb
push
or
push
aad
ljmp
dec
jb
cs
xchg
and
pop
jmp
incl
mov
aam
xor
xchg
lcall
or
lret
pop
push
xor
mov
jl
jae,pn
ret
insb
leave
movsl
fs
mov
outsb
mov
cli
cld
sbb
jle
jmp
xchg
xor
jmp
fsub
push
popf
cwtl
add
add
mov
std
ljmp
pop
aad
pop
fstpl
lods
rcrl
andb
and
mov
push
data16
call
mov
out
sahf
inc
pop
int3
push
sub
cwtl
inc
loope
arpl
sti
jb
rcrb
cmp
lods
push
testl
or
data16
aas
adc
sbb
jno
cmpsb
lcall
dec
icebp
fisttpll
adc
pop
jp
add
push
mov
dec
fsubl
test
mov
sub
dec
push
xor
ljmp
pop
stos
das
lret
mov
testl
stos
fisttpl
jnp
outsb
das
cld
or
jno
or
iretw
mov
sbb
sbb
cmpb
pop
sarb
add
sti
inc
and
xor
push
xchg
insl
dec
mov
fistl
hlt
into
out
dec
xlat
fmuls
lock
jl
xlat
addb
bound
xchg
pop
cmp
scas
imul
les
lahf
inc
jp
pop
add
pop
mov
sub
push
std
or
adc
cmpl
fdivr
inc
mov
subb
call
fstps
xlat
mov
dec
fstl
jg
cmp
adc
lahf
jb
inc
xor
clc
mov
hlt
rcl
hlt
in
inc
daa
jns
pop
sbb
sbb
push
shl
xor
clc
and
loope
sub
jmp
mov
add
and
sar
loopne
cli
lret
fcmovnbe
mov
sub
cmp
test
ds
xor
fiadds
jmp
and
in
sub
cmp
or
mov
push
stos
pusha
mov
fdivl
lahf
xchg
cld
cmp
fimull
push
cmp
nop
push
xchg
cld
xchg
movl
stos
enter
ud0
adc
into
jo
push
and
pushf
loopne
movsl
clc
push
aad
pop
xchg
inc
fisubl
cmpsl
pop
xchg
aad
scas
out
loope
test
cmpsl
push
mov
cmp
sub
mov
xchg
adc
clc
mov
stos
inc
out
inc
lea
mov
arpl
jp
loope
mov
stos
setae
fs
jge
jne
push
inc
movsl
xor
or
jno
lods
nop
xor
sbb
mov
jnp
aaa
fisttpl
imull
sub
loope
sbb
fidivrl
rolb
cmp
jnp
popf
inc
cmpb
insl
sbb
cmpsb
xor
je
pop
dec
sbb
jo
aad
xor
dec
sbb
adc
in
cmp
and
xlat
sub
imul
or
lock
dec
js
movb
in
dec
inc
push
xor
mov
ret
sbb
mov
cmp
popa
std
push
out
cmp
jo
jmp
scas
inc
mov
mov
dec
jp
adc
cltd
fldcw
out
fsubrp
adc
std
hlt
loop
cmpsl
pop
sbbb
loop
in
lock
add
fildll
dec
stos
dec
or
xor
stc
lds
add
jle
adc
lahf
jmp
fs
push
mov
xchg
adc
mov
loope
scas
add
pop
mov
fists
repnz
dec
fisubrs
lods
cmpsb
adc
xchg
mov
insl
pushl
sub
aam
movsb
loopne
movsb
adc
in
cmp
cmpsb
and
jmp
jmp
pop
mov
test
call
or
adc
xchg
adc
shll
push
sub
mov
jae
ficoml
loop
push
ficoml
pop
jb
mov
mov
andl
vpacksswb
jl
jp
adc
mov
ja
sub
sbb
daa
dec
xchg
adc
leave
push
iret
scas
sub
sub
cmp
pop
jns
mov
das
in
cmpsl
enter
push
dec
int3
jns
jbe
cmpsb
add
inc
lock
adc
jnp
mov
xchg
into
or
adc
push
push
dec
mov
mov
fdivl
cmp
dec
leave
rclb
divb
inc
xchg
and
jbe
fdivp
cmc
das
aaa
lahf
dec
dec
jge
inc
pop
xlat
out
pop
into
into
fsubs
hlt
dec
push
call
fcompl
add
add
out
insl
test
sbb
sub
aam
loopne
sbb
pop
or
adc
mov
frstor
mov
rcr
cld
movsb
std
inc
mov
xor
flds
cld
ljmp
movsl
repnz
lcall
pushf
xchg
stc
jmp
test
cld
fdivrl
pop
test
test
xchg
push
sbb
xchg
mov
mov
aas
jae
fcom
mov
sbb
and
loope
daa
nop
and
cli
cli
add
flds
stc
and
sub
jg
mov
insb
push
add
aaa
mov
cmpsl
mov
outsb
lcall
pop
cmp
rclb
sub
jp
clc
ret
inc
inc
out
rclb
popl
mov
iret
and
gs
jns
dec
adc
sbb
aam
xchg
push
or
xlat
sub
adcb
out
cld
mov
bound
enter
cmp
lods
cmpsl
jge
jae
lahf
adc
add
pop
out
sub
mov
mov
addr16
push
fs
movsb
mov
scas
sub
cmp
outsb
push
test
xchg
es
out
pop
gs
jecxz
mov
lea
shlb
cmp
stos
mov
jecxz
and
jo
icebp
sub
loope
sbbl
mov
jne
mov
addr16
repz
inc
mov
es
loopne
les
fwait
ss
arpl
push
mov
shll
loopne
in
daa
out
jnp
mov
cmp
lahf
push
cli
sti
movsb
mov
int3
loope
lret
jecxz
jbe
adc
mov
aaa
lea
cmpsl
jne
stos
push
or
xchg
insl
and
sbb
xor
lods
cwtl
dec
push
jle
addb
lock
rcl
pop
out
data16
xorl
lods
fsubrs
push
push
adcb
mov
idiv
mov
pop
dec
divb
xor
lahf
sub
test
fwait
jg
pop
jns
in
mov
fnstcw
mov
sub
fsubrs
adc
gs
daa
inc
adc
or
mov
sbb
pop
fnsave
dec
pop
int3
sbb
int
mov
dec
jmp
fistl
stos
cmc
push
ja
mov
jae
cmp
cltd
sub
cmpsb
imul
mov
hlt
sub
daa
jb
icebp
std
dec
or
lods
cmc
nop
mov
dec
popf
dec
xorl
inc
xchg
inc
loopne
daa
inc
add
add
push
sbb
pop
in
stos
adc
mov
aas
idivb
push
and
push
iret
hlt
test
pop
cmc
cmpsl
iret
push
jne
lods
mov
fidivrl
mov
out
push
vpunpcklbw
mov
in
ret
xchg
xor
cmp
lahf
cmp
arpl
sti
xor
insl
or
xor
jp
aad
pop
test
dec
jge
sub
cmp
shlb
out
sti
adcb
icebp
xchg
hlt
lahf
insb
ss
aam
xor
loop
movsl
enter
xor
sub
fidivrs
lahf
jecxz
div
mov
dec
cmp
push
out
inc
out
xchg
pop
imul
mov
inc
dec
bound
mov
lock
int3
test
test
loope
clc
jbe
cld
jmp
out
enter
add
sahf
ljmp
jns
enter
inc
stos
mov
jmp
cmp
out
pop
sbb
jns
jg
mov
mov
pop
xorb
add
loop
add
inc
xor
shrl
xchg
dec
cmp
add
cmp
lcall
fsub
cld
fists
aad
pop
mov
clc
jo
jno
divps
mov
mov
stos
dec
sbb
sub
outsb
out
xchg
shr
mov
repz
daa
or
cmc
inc
mov
pop
js
inc
popf
ja
loop
pop
lods
icebp
mov
std
sub
pusha
pop
mov
push
std
outsl
mov
jbe
sbb
add
stos
movsb
stos
jae
test
lea
popa
fmull
push
push
outsl
mov
mov
test
mov
add
imul
xlat
jmp
cwtl
xor
pop
inc
xchg
mov
fldl
in
and
push
adc
push
loopne
rorl
cld
push
sub
dec
stc
test
shll
popf
pop
xorb
sarb
jg
or
int
cmp
or
int
movsl
aad
popa
lcall
pop
shl
sub
xchg
das
aad
adc
insl
jecxz
pop
fbstp
mov
addr16
cmp
loopne
jge
and
xchg
lahf
push
jmp
aas
leave
mov
test
repnz
dec
loopne
inc
lods
cmc
mov
mov
pop
sbb
fldenv
icebp
mov
fistps
mov
sbb
xorb
cltd
fidivrl
daa
lods
test
sub
aam
inc
sbb
sbb
enter
inc
sub
js
inc
mov
sbb
scas
inc
cmpsb
loope
mov
cmc
js
ret
test
in
jp
scas
les
jne
out
add
jae
sahf
xchg
sub
bound
push
pop
dec
in
dec
inc
mov
adc
dec
rcrb
dec
fsubl
sub
nop
adc
aaa
test
and
das
mov
stc
mov
lcall
or
inc
js
stc
outsb
add
int3
dec
es
js
lea
mov
es
jnp
imul
std
sbb
enter
fsts
orl
mov
loopne
sarb
mov
jns
cltd
outsb
add
insl
cmp
sub
pop
imul
xchg
enter
sti
std
cmp
in
ja
dec
in
nop
aas
bound
push
pop
insl
ret
add
xor
sub
jp
fwait
stc
xchg
jns
jo
data16
cmpsl
pop
jmp
xor
sbb
mov
scas
add
pop
jae
jp
pop
cmp
jae
or
shrb
jne
inc
pusha
jg
mov
cmpsb
icebp
adc
pushf
pusha
insb
dec
inc
pop
sub
dec
loopne
or
stos
and
and
add
cmc
ret
pop
push
fidivl
cltd
das
push
xor
dec
lods
orl
pop
sub
js
adc
loope
aam
cmpl
inc
sti
or
push
jmp
lds
fisttpll
test
jns
or
inc
or
push
out
stc
out
repnz
sbb
rolb
add
mov
fildll
sub
lahf
imul
ljmp
ret
mov
and
insl
mov
push
ret
insl
into
andl
aas
fisubl
push
iret
xchg
aad
jmp
sub
sbb
shll
xchg
lds
mov
jb
fdivrl
mov
xchg
mov
out
mov
cmp
pop
icebp
stc
and
mov
je
in
sbb
add
push
fstl
sbb
outsb
sub
xchg
dec
and
dec
jb
jno
jno
sbb
dec
xchg
sub
jnp
inc
std
pop
sahf
int3
mov
bound
repnz
jo
jge
jp
push
mov
xor
mov
fcomp
jno
push
jnp
pop
mov
add
in
addr16
aam
inc
loope
sbb
lcall
inc
jmp
push
or
mov
repz
mov
pushf
jb
aad
iret
mov
insl
aam
pop
addr16
lret
xchg
loopne
mov
xchg
data16
pusha
test
pop
popa
inc
jo
jb
jns,pn
jnp
js
fidivl
ficomps
int3
cmp
aad
in
orb
xor
lea
mov
pop
je
adc
xlat
pop
jecxz
jns
jecxz
in
jne
pusha
add
jg
shlb
mov
test
sub
hlt
add
mov
inc
imul
jno
cmpl
cmc
enter
outsb
sti
fwait
jmp
lahf
popa
pushf
cld
sbb
inc
lahf
testb
xchg
faddl
push
popa
in
popa
jg
inc
sub
cmpsl
cmp
aas
adc
outsl
fdivrs
mov
mov
addr16
cmp
jno
xchg
fisttpll
lahf
jne
stos
negl
cld
jno
arpl
add
mov
stos
xchg
out
mov
mov
xchg
or
mov
fidivs
loopne
scas
out
test
ja
jmp
loopne
popa
cmp
and
xor
notl
inc
inc
and
scas
cmovns
loope
mov
mov
cmpsb
jb
pop
cltd
pop
mov
cwtl
sub
mov
jp
jns
add
cld
jbe
ss
mul
lea
or
test
cmpsb
pop
mov
lods
pop
or
jecxz
and
out
add
and
dec
push
mov
pop
aam
sbb
pop
sub
fwait
xchg
cmp
mov
xchg
dec
bound
enter
out
lret
fstps
cmp
xchg
pop
mov
jb
dec
add
faddl
dec
xchg
inc
mov
inc
enter
sarl
les
mov
rorb
jno
outsb
inc
jo
jb
pop
pushf
dec
sub
fisubrs
jae
je
mov
cmpsl
mov
fimull
jo
mov
loope
add
or
pop
out
fnsave
and
shlb
mov
repz
in
inc
in
lret
cmc
out
xor
mov
pop
mov
pop
mov
pushf
ficoml
xor
ret
xchg
sbbb
xor
pop
je
out
jp
sub
addr16
jge
lret
addl
sub
fs
dec
sub
dec
mov
imul
xchg
jge
push
jno
rcll
add
sub
daa
add
aaa
pop
mov
daa
imul
imul
and
popa
aas
int
inc
imul
or
sbb
sub
lods
and
xor
jle
mov
jnp
sub
test
xchg
ficompl
test
movsl
add
xchg
jbe
push
push
fiadds
ljmp
shll
fidivl
daa
scas
repz
mov
xchg
push
sbb
add
push
test
cmp
jnp
mov
adc
leave
inc
push
add
mov
test
leave
mov
mov
and
lods
pusha
shl
fistps
mov
jp
stos
jne
or
xchg
popa
and
jns
sarb
stos
and
inc
int
popa
call
and
mov
cmpsl
push
decb
bnd
mov
mov
pop
int
jle
ljmp
pop
dec
pop
dec
xor
pop
mov
push
rclb
stos
mov
sbb
mov
jne
cli
add
ficoml
les
mov
push
js
pop
pop
rcrb
test
mov
mov
sarb
mov
mov
aam
cmpsb
lcall
mov
cmpsl
xchg
jb
inc
jae
or
into
adc
in
ja
test
mov
insl
clc
xchg
sbb
cmpsl
icebp
inc
iret
out
or
popf
hlt
inc
or
mov
into
rcrl
jp
ret
testb
and
out
push
repz
sub
mov
mov
push
fwait
cmpsl
inc
out
mov
in
repz
int3
test
jle
mov
jns
sti
jl
incb
mov
mov
jmp
stc
jp
pop
xchg
mov
insb
jnp
jno
xchg
jecxz
lahf
jne
fdivrp
xchg
or
jg
jb
adc
xor
push
mov
data16
das
flds
aad
or
dec
pop
sti
mov
lahf
and
dec
imul
popf
out
sub
push
mov
gs
popa
push
xchg
aam
mov
inc
es
popf
pop
jmp
in
jae
bnd
pop
test
xchg
push
in
loopne
adc
jmp
in
adc
adc
lock
xor
mov
sar
push
testb
pop
add
xlat
fnstcw
int
jnp
mov
roll
mov
ds
iret
enter
ss
pop
and
insb
pop
fistpl
adc
rcl
sub
out
mov
and
insb
push
mov
push
pop
sub
in
mov
shrl
jg
xor
lcall
out
imulb
and
test
adc
mov
in
cmp
push
adc
dec
repnz
notb
sarb
sbb
inc
pop
jns
jg
outsb
in
pop
mov
cs
push
ret
movsb
outsl
add
mov
and
mov
arpl
aaa
stos
cmp
leave
dec
test
jecxz
mov
and
add
adc
clc
cmp
adc
mov
dec
pop
dec
jne
mov
jecxz
out
in
test
stos
mov
test
ja
mov
xor
loopne
out
int3
cmp
aaa
data16
and
daa
push
ja
and
insl
xor
inc
and
stos
loop
test
xchg
sub
lcall
mov
repnz
push
pop
test
pop
push
cmpl
mov
dec
pop
pop
lods
loop
xor
cmp
fwait
xor
fadds
and
dec
mov
or
sbb
setno
gs
lds
insl
std
pop
jg
push
mov
sbb
lods
inc
stc
or
or
ret
ficomps
outsb
std
clc
mov
inc
xchg
aad
insb
scas
and
leave
inc
mov
ljmp
or
xchg
pop
stos
loop
push
das
fs
jnp
dec
cmp
insl
jmp
out
cmc
xor
mov
jbe
inc
push
mov
and
jo
fists
aam
aad
cmp
sbb
cmp
sub
sbb
pushf
mov
int3
inc
mov
pop
jno
ss
sub
pop
pushf
js
lds
in
push
lret
xor
cmp
mov
js
mov
dec
psubw
jne
pop
shrl
sbb
sub
add
stc
je
xchg
mov
lods
stos
fstpl
sub
pop
rorb
xor
mov
mov
adc
jnp
insl
cmp
adc
jp
bnd
and
int
pop
or
stos
call
jmp
arpl
mov
mov
jns
loopne
adc
insb
mov
jl
cmpsl
aaa
ret
xchg
rolb
lea
add
clc
movsb
cmp
pop
mov
push
dec
inc
ss
enter
movsl
lret
and
cmpsb
pop
mov
les
ficoml
xchg
mov
mov
lea
test
je
das
aas
fadds
shll
cmp
inc
jmp
lcall
and
adc
imul
insb
cmp
incl
test
shlb
jnp
sbb
cmp
jo
movsl
insb
cmp
movsl
push
hlt
insl
idivb
aaa
mov
scas
nop
lock
insl
inc
fnstenv
arpl
loop
scas
cs
fsubrs
jae
sub
mov
rcrb
cwtl
xchg
xlat
xor
inc
adc
cmp
es
jo
sbbb
popa
inc
or
loope
aad
call
loopne
in
xchg
cltd
int3
push
or
stos
orl
stos
jno
gs
push
jmp
and
stos
scas
mov
pop
pop
leavew
pushw
adc
pop
pop
roll
dec
push
in
das
dec
fwait
sub
sbb
push
inc
sbb
jmp
fwait
cwtl
push
out
popa
inc
add
cld
dec
ficompl
pop
cs
sub
ret
xchg
insl
lret
sub
notl
jb
sub
insl
addr16
repz
jnp
mov
pop
mov
adc
pop
xchg
int
shll
xchg
shl
inc
xchg
xor
fcomps
ds
outsl
std
jg
cmp
xchg
pop
cmp
or
insb
mov
ds
add
pusha
jb
add
cmp
pop
addb
and
pop
sub
cmpsl
loope
inc
stos
test
jne
jbe
imul
out
cs
test
aad
or
dec
xlat
mov
sub
mov
test
cmc
or
es
add
inc
or
add
fwait
mov
cmpsb
cli
pop
pop
repnz
xchg
scas
mov
jno
arpl
jmp
pop
loopne
and
xlat
pop
js
xor
sbb
gs
push
das
aad
inc
lods
mov
rol
leave
and
add
xchg
mov
sti
mov
outsl
cli
ljmp
jmp
jecxz
imul
xchg
imul
movsb
or
out
mov
push
mov
mov
lds
pop
or
pop
cmp
lods
mov
jge
adc
test
in
jle
inc
and
pop
inc
lods
jg
rcll
in
jecxz
and
aas
imul
in
ljmp
or
gs
lods
or
mov
std
mov
sbb
push
jae
inc
xchg
jns
xor
ret
out
and
sub
dec
sbb
iret
cli
jnp
and
xor
cs
push
and
decb
fstpt
fstps
dec
iret
lret
xlat
pop
loope
push
cmpb
nop
sbb
mov
pushf
lcall
jecxz
or
dec
or
mov
pop
mov
mov
enter
push
sbb
jb
outsl
insb
add
dec
dec
sub
ret
iret
xchg
adc
ljmp
mov
and
cli
inc
aam
lret
pop
pop
movntps
push
jae
mov
inc
push
push
gs
repz
sbb
hlt
push
xchg
stc
mov
xor
jnp
enter
mov
mov
aas
sahf
lods
dec
push
mov
add
push
leave
jg
and
inc
and
rorl
adc
test
sub
cmp
into
jb
jl
dec
ret
loop
push
dec
mov
dec
popa
in
mov
pop
add
jecxz
mov
mov
rclb
and
or
fld1
in
das
and
adc
push
pop
cmp
xchg
aam
testb
cmp
mov
dec
or
cmp
dec
and
sbb
sub
sbb
lret
push
xchg
jae
sbb
sbb
addl
or
xchg
mov
faddl
xchg
shl
adc
out
incl
out
push
sbb
or
aas
call
lret
je
cmp
cmp
inc
adc
scas
repz
xor
mov
nop
fmull
gs
inc
jo
rcll
in
pop
push
negb
add
or
mov
dec
sub
and
push
sbb
outsl
pop
test
push
les
cmp
jo
cmp
pop
mov
jmp
incl
jl
out
je
pop
lcall
js
jbe
mov
jnp
push
jbe
sarb
ret
sahf
out
clc
xchg
popa
es
push
pop
aad
lds
dec
pop
outsb
jmp
inc
push
mov
mov
imul
mov
mov
mov
sbb
xorb
notb
jp
jne
cmp
mov
xchg
push
mov
out
jmp
fstpl
popf
add
cmc
mov
mov
jmp
data16
bnd
ret
xlat
outsl
das
pop
ds
mov
in
or
xor
pop
mov
dec
mov
scas
inc
pop
cmp
cwtl
sbb
inc
mov
push
es
pop
xchg
jae
jnp
lcall
testl
fldl
scas
aad
int
cwtl
add
xor
and
je
mov
sub
pop
mov
add
fs
stos
dec
dec
icebp
xchg
jle
jns
push
cs
push
shll
sbb
sub
mov
mov
sti
data16
xor
and
leave
aaa
jmp
mov
sub
and
out
sbb
or
lods
repz
and
mov
out
lahf
inc
sub
inc
adc
mov
adc
iret
inc
adc
mov
mov
jnp
lock
scas
cli
sub
lahf
xor
ja
mov
cmovo
jbe
xor
sbb
les
out
in
mov
and
inc
and
and
icebp
xchg
xchg
mov
xchg
dec
jo
xlat
stos
mov
jnp
inc
aam
fmulp
pop
push
push
insl
cmpsl
ret
push
xor
push
pop
movsl
repnz
or
fcoms
fcomps
inc
sub
push
add
xor
jae
add
mov
aam
cmp
or
sub
pop
daa
jmp
arpl
lret
push
mov
mov
push
filds
inc
shll
inc
mov
aas
paddusw
es
imul
sub
enter
enter
xor
inc
mov
je
pop
in
inc
lret
pop
push
daa
xor
cmp
xchg
jne
or
push
pop
pshufw
push
add
or
jle
inc
mov
std
negb
scas
pop
adc
xchg
shll
cli
jb
inc
out
push
notl
sbb
push
mov
arpl
or
outsl
ljmp
lea
xchg
movsl
cmpsl
test
xor
mov
and
leave
rcrl
lret
out
shlb
shrl
dec
push
mov
push
rol
inc
adc
jae
cmpsl
in
nop
jp
mov
cld
fdiv
popa
cltd
pop
std
das
js
sub
imul
adc
in
and
pop
imul
in
pop
ret
nop
push
dec
xor
push
out
cmpb
push
or
in
jb
test
push
subb
outsl
adc
cmp
pop
cmpsb
mov
mov
leave
lods
mov
xchg
or
pop
fcoms
mov
mov
loope
out
sub
add
loop
dec
insb
fisttpl
sub
xchg
rol
mov
jge
add
cmp
jnp
sbb
xor
int3
ds
stos
xchg
sub
insb
mov
sbb
rclb
icebp
mov
pop
jne
cmp
movsb
data16
cli
dec
insb
roll
pop
in
mov
sahf
js
sbbl
cltd
pop
not
call
insl
call
jecxz
adc
mov
push
pop
dec
addr16
mov
sahf
inc
leave
mov
dec
inc
xlat
test
pop
pop
mov
mov
test
mulb
xchg
dec
leave
imul
shl
xchg
dec
mov
dec
ja
mov
cmp
aam
js
mov
sahf
push
je
cmc
cmp
call
daa
xchg
imulb
mov
dec
sahf
mov
out
add
cvttps2pi
mov
aaa
mov
cmp
xor
xchg
or
lea
fs
mov
outsb
sub
je
inc
add
fstl
mov
adc
or
aad
scas
scas
inc
mov
cltd
cmp
mov
and
pop
call
mov
jae
sti
mov
xor
lock
push
stos
mov
sbb
push
test
cwtl
adc
sar
xchg
pop
inc
out
movsb
mov
pop
push
push
push
cmpsb
nop
jp
mov
dec
fiadds
fwait
repnz
mov
cs
rcrl
and
mov
lock
sub
push
xor
jl
push
ds
mov
ss
fscale
pop
rep
out
dec
cmp
or
push
punpckhbw
out
loop
into
ja
cltd
pop
jbe
ret
push
inc
insb
jbe
push
ss
std
xor
sahf
jne
sbb
push
push
xchg
pop
lock
mov
imul
and
test
or
jbe
dec
inc
mov
inc
add
dec
jnp
lret
sbb
fsubr
pusha
mov
adc
and
sarl
add
ret
jo
xchg
sub
fidivrs
stc
xlat
shr
ds
mov
lds
cs
jge
mov
xor
cmp
push
mov
xchg
mov
clc
shlb
jge
sub
cs
mov
jns
jmp
pop
rolb
inc
pop
jp
call
or
movsbl
dec
data16
fcoml
js
arpl
mov
fstps
jmp
arpl
out
mov
and
xor
icebp
fwait
pop
push
out
push
in
adcb
lret
dec
loope
jno
mov
daa
ss
add
xor
movsb
inc
inc
sbb
nop
inc
jge
ljmp
push
push
aam
xor
jp
pop
dec
add
shrb
jnp
nop
inc
mov
call
inc
lret
inc
jp
mov
xchg
xorl
icebp
movsl
test
es
fs
mov
dec
shrb
scas
imul
or
cmpb
adc
sbb
clc
mov
jl
movsb
sub
addr16
adc
cmpsl
inc
dec
lods
clc
mov
sub
dec
ja
movsb
mov
cmp
mov
mov
and
inc
aam
inc
mov
in
and
jg
inc
call
mov
mov
adc
mov
and
mov
xchg
sbb
xchg
aas
mov
xor
add
push
mov
xor
inc
and
pop
ret
into
inc
adc
dec
lds
pop
mov
mov
ja
mov
rorb
out
xchg
ja
ficompl
pushf
mov
push
add
jmp
fdivr
jmp
adc
jg
sbb
jl
aam
xor
cmp
dec
ret
inc
stos
cld
scas
scas
mov
jnp
ficomps
push
jmp
pop
sbb
push
mov
imul
sub
loop
add
out
repnz
dec
sub
mov
push
pusha
sbb
pushl
loopne
inc
cwtl
mov
push
xchg
dec
aam
lcall
xor
adc
and
push
pop
xchg
or
aam
mov
ja
cmp
inc
ret
stos
push
push
inc
rcl
jmp
inc
ret
test
mov
or
notb
jne
repz
xchg
inc
push
call
out
sbb
es
xchg
daa
push
in
or
shrb
adc
stos
cmpsl
dec
ja
shlb
das
pop
shlb
dec
movsb
stc
ret
repz
mov
jecxz
lahf
fwait
adc
jns
ret
testb
cmp
adc
hlt
mov
aad
lcall
cmp
test
mov
fldl
sti
fsubrs
adc
test
sub
jge
inc
iret
inc
xchg
push
fstl
inc
push
jmp
mov
std
adc
mov
cmpsl
xor
loope
pop
out
dec
test
cwtl
xchg
xchg
es
xor
cmp
push
mov
ficoml
inc
cmpsl
or
arpl
mov
jecxz
xor
mov
mov
fistpll
ret
int3
out
sub
arpl
ljmp
pop
adc
aam
js
pop
push
ret
subl
hlt
int
imul
add
mov
jne
cmp
push
int3
lock
clc
xorl
mov
mov
loope
mov
jp
adc
addb
nop
adc
xor
in
cmpsb
jne
cmp
shll
jnp
das
icebp
lret
ljmp
cmp
out
icebp
icebp
popf
push
test
xchg
lcall
dec
lods
out
shll
pop
push
popa
or
sbb
repz
adc
jne
adc
xchg
lods
and
lock
or
ds
pop
ret
insb
cmp
leave
push
xlat
cmp
hlt
clc
push
out
mov
push
mov
add
inc
sbbl
out
mov
push
cs
mov
pop
ficomps
add
inc
or
cmp
je
xor
jbe
aam
in
aad
dec
lods
push
sarb
xchg
inc
dec
mov
std
lcall
dec
shll
addr16
fnstenv
inc
xor
and
frstor
int
cmp
mov
xchg
loope
stos
mov
cmp
sub
nop
jnp
or
mov
push
sub
cmp
adc
fsubs
test
inc
mov
push
repnz
nop
mov
pop
inc
xor
and
ret
data16
push
or
pushf
lods
push
sub
mov
push
mov
sbb
sti
mov
test
and
sbb
xchg
jno
shlb
insl
sbb
xchg
lea
xchg
dec
push
movl
iret
push
cmp
adc
add
pop
inc
push
dec
push
xchg
xor
sub
fldt
ret
in
mov
jl
roll
bound
adc
imul
imul
icebp
popf
sbb
fwait
cmp
mov
std
repz
loop
je
popa
jo
jno
test
jae
mov
lock
insl
lahf
stc
in
lea
xchg
dec
jne
mov
pop
jge
sub
int3
jmp
sub
in
jnp
nop
roll
cmp
adc
xchg
lcall
rorl
mov
lds
pushf
push
jle
cs
or
jo
xchg
mov
mov
xor
cmp
insb
xchg
pushf
jno
jecxz
pop
dec
lcall
cmp
cmp
movsb
sbb
or
push
popa
sub
dec
pop
nop
push
xorb
and
jno
into
inc
cmpl
inc
sbb
repz
lds
daa
loopne
cmp
mov
push
xchg
xchg
sub
mov
aad
add
push
shrl
jge
xchg
push
in
jl
daa
mov
add
scas
jle
mov
insl
sub
shrb
ljmp
aad
stos
add
scas
xorl
add
jnp
push
and
adc
add
cmpb
daa
mov
faddl
mov
fisttps
movsb
lods
leave
mov
in
loopne
push
shr
sbb
jp
or
je
add
aas
rclb
pop
aas
sbb
push
dec
fists
out
add
inc
outsl
pop
xchg
imul
or
cli
xor
cs
addl
out
bound
or
push
andb
cmc
jbe
lcall
shll
cmp
dec
pop
push
pop
inc
or
fadds
add
and
or
scas
mov
add
dec
push
shlb
push
aam
testb
icebp
mov
pop
push
gs
jge
sub
cmpb
dec
pop
test
cltd
mov
icebp
stos
js
xor
push
inc
addr16
xor
and
out
in
inc
xor
cmc
sbb
push
repz
ja
cmp
or
xchg
mov
rclb
mov
mov
in
cmp
adc
lcall
sahf
repz
and
push
jae
xchg
negl
mov
in
inc
rolb
stos
pop
pusha
mov
mov
cld
mov
cmp
out
outsb
in
mov
dec
scas
pop
add
clc
dec
or
push
js
cmp
mov
mov
test
xchg
xor
ret
dec
or
out
xchg
sub
ror
nop
stc
mov
xchg
and
arpl
mov
xchg
jb
insl
dec
dec
movb
inc
mov
outsb
dec
in
inc
cmp
sub
and
or
cmpsb
push
loopne
mov
inc
sti
daa
push
xor
cmp
aad
push
mov
scas
xlat
or
sbb
xchg
fdivl
and
loope
lods
cwtl
popa
shlb
dec
popa
data16
aaa
mov
sbb
in
add
dec
push
or
push
xor
and
in
add
xchg
insw
jl
dec
jns
mov
jle
ljmp
cmp
je
cmpsl
fsubrs
into
xchg
int3
aad
mov
xchg
pop
inc
dec
ret
xor
sarl
add
je
loope
xor
inc
cmc
sub
or
or
pop
into
bound
aas
lret
js
lcall
fmull
xor
push
ja
dec
mov
sub
repz
hlt
pop
aam
in
mov
add
and
or
mov
sub
subps
aam
xor
xchg
jg
mov
outsl
or
test
jge
cmp
jno
addr16
cmp
cmp
inc
dec
popf
mov
jl
cld
call
fwait
mov
in
pushf
mov
or
jne
std
out
iret
sar
into
xchg
dec
filds
sub
scas
addl
xchg
sbb
xchg
sbb
das
jp
add
movb
nop
js
xchg
cmp
stos
inc
adc
xor
push
rcrb
xor
inc
xor
jmp
cmp
test
lret
lea
popf
ficoms
add
rolb
push
ret
sub
loopne
pop
out
pop
gs
sahf
popa
pop
inc
or
push
repnz
adc
mov
stc
jns
sbb
enter
ss
dec
xchg
scas
inc
mulb
imul
mov
mov
or
lds
mov
fadds
dec
dec
mov
cmp
icebp
mov
or
mov
out
pop
dec
dec
imul
out
xchg
movsl
adc
scas
cli
or
mov
imul
std
pop
movsb
push
adc
adc
es
sub
sbb
repnz
pop
sbb
out
mov
ss
fidivs
aas
sbb
fwait
negl
jmp
out
stc
lret
invd
ja
mov
jne
or
xchg
shlb
cmp
cmp
sub
jge
in
fldcw
hlt
sub
cmp
aad
mov
addr16
cmp
imul
mov
add
fnstsw
mov
lods
mov
ljmp
jns
jnp
xor
xor
lret
add
inc
pushf
sbb
and
xchg
es
ret
lret
clc
std
xchg
loope
inc
aas
and
pusha
jns
dec
mov
add
xchg
sub
movsb
fists
out
cmp
out
add
add
mov
shrb
fwait
cmp
xchg
lock
mov
lock
int3
or
inc
xor
out
xor
lcall
jmp
xchg
mov
rorb
test
add
out
in
lods
add
lahf
inc
call
xchg
popf
add
ja
or
jbe
mov
hlt
push
cmp
pxor
mov
test
lret
sub
sbb
pop
inc
repz
and
cmp
pop
nop
cmp
arpl
bound
andb
fcomps
xchg
push
cmp
call
push
and
sub
lcall
adcl
aad
mov
sub
cwtl
loopne
inc
mov
mov
pop
clc
xchg
inc
lret
sahf
xchg
inc
jl
dec
test
aaa
or
push
mov
sbb
lcall
dec
mov
sbb
jle
sub
pop
mov
lods
mov
jne
add
mov
adc
mov
and
xor
cmp
pop
xor
shlb
sub
jl
jmp
jl
lods
jecxz
or
sar
push
insl
xchg
divl
jl
je
insb
cwtl
sti
bound
and
je
lret
and
lods
lahf
inc
cwtl
es
into
ret
nop
push
xor
addr16
or
addb
xor
push
jp
jns
push
mov
in
cs
or
dec
pop
cmp
loopne
sbb
pcmpeqb
cmp
ds
cmp
repnz
push
sub
jl
xchg
ss
cmp
push
jne
fsubs
outsl
cmpb
pop
in
pop
ret
mov
xor
cmp
cmpsl
pop
std
enter
fsubrl
adc
pop
out
loop
adc
push
inc
sub
outsl
dec
mov
loope
mov
stc
xchg
push
cltd
rcrb
bound
sahf
out
dec
popa
insl
dec
xchg
mov
fndisi(8087
xchg
add
xchg
fldenv
add
xchg
lods
xor
adc
pop
or
or
loope
es
test
cmp
and
xor
adc
outsb
test
loop
ja
jge
in
cmpb
and
jae
jo
test
sahf
ret
pop
or
adc
loopne
add
xor
shrl
out
repnz
lods
push
pop
fisttpl
xchg
in
add
xchg
jl
into
mov
cli
cmp
rcl
mov
loop
pop
inc
out
mov
bswap
adc
pushf
popf
iret
pop
in
test
xchg
mov
addr16
or
xor
int
aas
js
addr16
adc
lret
test
and
pusha
xchg
inc
xor
xchg
pop
lahf
mov
aad
mov
jne
inc
ja
fnstenv
daa
fdivp
push
xor
mov
push
lret
out
rcll
cmc
pop
lods
mov
mov
dec
dec
hlt
stos
outsl
ficoms
ret
iret
mov
add
mov
jns
call
xlat
pop
cmpsl
cmpl
xor
mov
xchg
das
scas
xchg
sub
fidivrl
or
loope
rolb
fadds
sbb
jns
loopne
push
dec
incb
jmp
or
inc
lods
cmp
scas
leave
mov
outsl
fcos
sub
sbb
testb
in
adc
aad
pop
xor
mov
data16
lret
jle
fsub
lods
aaa
push
mov
sub
jb
mov
enter
cmp
test
sbb
sarb
push
in
fimuls
push
pop
xchg
lds
gs
mov
test
sbb
push
mov
and
dec
stos
scas
pop
cli
in
call
dec
xor
fisttpl
or
hlt
pop
and
mov
jp
fcomps
lods
pop
cld
into
fwait
mov
add
imul
out
pop
test
cmp
ja
out
xor
insb
enter
push
imul
jle
ss
out
shrl
xor
sbb
neg
xor
addr16
mov
out
test
sbb
mov
xchg
test
pop
dec
push
scas
xchg
adc
cmp
mov
int3
lret
adc
xchg
daa
push
mov
ficoml
movsl
or
loope
in
imul
mov
push
add
aam
add
mov
pusha
rcrl
adc
push
sahf
movaps
cs
jnp
sahf
push
cltd
jge
lock
mov
xchg
sub
mov
dec
out
adc
out
popf
fiaddl
inc
sbb
sbb
call
mov
popa
xchg
add
ret
aaa
stc
sbb
jmp
fiaddl
jl
mov
aam
dec
sbb
outsb
leave
mull
cwtl
dec
inc
pop
sbb
rcr
aas
add
jecxz
ljmp
lret
cmpsl
mov
popf
jns
mov
mov
mov
mov
into
lods
mov
test
test
mov
mov
stos
push
inc
mov
outsl
lcall
xor
outsb
jb
xor
and
enter
movb
pop
loopne
mov
sub
cmove
rcll
out
iret
repnz
push
sub
xchg
cltd
push
cmp
mov
cltd
arpl
jle
dec
jecxz
mov
xchg
mov
dec
add
pusha
mov
jge
push
mov
jp
mov
inc
jg
pop
outsb
and
sbbl
out
adc
add
es
jp
xchg
inc
lea
call
sub
imul
push
fcoml
lcall
mov
inc
fcompl
decl
rcr
cmpsl
inc
or
fst
sbb
lea
nop
pop
adc
aad
xor
gs
out
mov
lret
and
jge
add
cmp
rcrb
and
inc
mov
fs
lods
clc
rolb
cmpsl
rcrl
jp
es
sbb
jmp
cmc
ljmp
out
sarl
mov
and
xchg
dec
shl
add
push
aas
sub
adc
aas
nop
daa
dec
ret
out
dec
push
cwtl
flds
daa
mov
mov
xchg
stos
pusha
inc
xchg
movsl
in
push
dec
mov
scas
andb
adc
scas
dec
cs
sub
std
dec
cwtl
push
gs
xchg
pop
and
rorb
es
jle
fnstenv
das
popf
xor
aaa
ljmp
pusha
cli
push
pop
push
xor
xor
in
and
test
sub
mov
push
aam
sub
aam
mov
pushl
and
adc
outsb
in
addr16
mov
push
mov
std
das
ss
pop
push
stos
inc
push
inc
push
inc
cmpsb
cmp
xor
lret
ret
xor
mov
push
add
cmp
orl
arpl
jp
insb
or
arpl
inc
cmc
adc
dec
inc
or
add
fsubrp
xchg
dec
call
pop
jp
loop
push
and
cmpsl
dec
jge
movsb
and
xor
imul
add
lret
adc
cmp
icebp
dec
inc
jmp
sarb
hlt
push
dec
mov
fcompl
hlt
push
and
popf
push
das
lcall
push
aad
mov
jl
push
cmc
push
cmc
inc
into
or
mov
fbstp
pop
inc
xchg
repnz
jne
jno
xor
outsl
es
icebp
mov
stc
cmp
arpl
test
out
push
jg
cmp
cmp
and
jle
xchg
test
arpl
fimuls
fwait
lret
addr16
insl
incb
xor
adc
and
jp
jns
imul
fwait
jecxz
mov
xchg
es
loopne
mov
sbbl
aas
xchg
and
xchg
jno
mov
insb
pop
movsl
mov
push
mov
dec
mov
push
inc
cmpsb
add
or
lcall
cmc
and
or
push
cmp
cmp
leave
insb
inc
sub
lret
jge
jno
jg
subb
xchg
or
rorl
dec
into
jle
das
xchg
jg
js
inc
inc
mov
mov
jg
repz
dec
into
das
lea
in
xchg
fldl
pop
int
sub
mov
je
adc
sbb
inc
mov
negl
push
jbe
hlt
pop
lcall
ds
pop
gs
not
push
and
pop
rcll
hlt
ss
in
and
xchg
rolb
fs
cmpsb
sbb
adc
xor
push
out
lock
xor
imul
jo,pt
push
es
pop
adc
adc
cmc
pusha
pop
mov
mov
loope
fwait
shrl
cwtl
jo
addl
std
int
loopne
adc
iret
insb
and
cmp
scas
mov
adc
mov
test
xor
cld
or
cwtl
loopne
add
loop
pop
ljmp
inc
cwtl
jbe
fisttpl
jl,pt
pusha
xor
xor
jp
stos
call
mov
iret
inc
sbb
rorb
jmp
loop
fnstcw
aaa
and
sub
mov
stc
push
jmp
ljmp
insb
adc
xchg
xchg
sub
xor
sbb
push
sub
bound
in
cmp
sbbb
stos
jecxz
outsl
sub
movsb
add
js
fsubrl
dec
adcb
out
xor
sahf
jae
fcmovu
lret
mov
and
or
fdivs
ss
rclb
jnp
lds
das
jo
loope
mov
ja
cwtl
pop
outsl
push
xchg
jo
inc
jl
rclb
mov
mov
xchg
push
mov
jb,pt
orl
jnp
popa
movsb
ret
scas
cmp
das
les
push
fsqrt
int
mov
pushf
mov
ret
or
sti
xchg
scas
jmp
xchg
call
dec
jmp
and
fstl
cmc
mov
adc
popa
mov
adc
je
adc
jmp
inc
movsl
cltd
cltd
jnp
sub
lea
mov
cwtl
xchg
mov
loopne
mov
hlt
mov
neg
sbb
dec
insl
adc
and
mov
mov
pop
cld
outsl
pusha
out
pop
or
icebp
in
dec
xchg
mov
loope
sub
pop
push
clc
xchg
or
push
insl
ret
pop
in
ficoms
mov
cltd
bound
mov
mov
xor
xchg
popl
jne
loop
sub
mov
iret
xchg
push
lods
mov
imul
jl
lods
lds
xchg
xchg
xchg
push
and
cli
sti
or
mov
shl
cltd
or
pop
fdivl
mov
inc
aad
adc
inc
aaa
xchg
or
icebp
lds
ds
test
adc
xor
mov
jg
xchg
push
data16
inc
inc
mov
sbb
dec
test
mov
jne
jge
pop
mov
aas
rcrb
dec
dec
mov
and
lds
outsl
imul
test
orl
repz
jae
xchg
xor
enter
pop
inc
icebp
dec
sub
mov
jecxz
int
xchg
jg
popf
dec
and
inc
gs
sub
hlt
jmp
inc
add
jecxz
mov
and
je
in
sub
or
adc
adc
movsb
or
and
mov
pop
mov
inc
or
lea
int3
out
adc
jb
daa
lret
icebp
fisttpl
bound
mov
mov
insl
in
xor
outsb
mov
mov
and
sbb
mov
pop
stos
test
lret
adc
stos
and
and
insl
xchg
ss
cli
add
mov
pop
push
cmp
mov
ss
and
dec
in
popa
ret
mov
and
sub
push
mov
out
test
dec
int
insl
jle
cli
rcrb
jbe
mov
call
mov
inc
cs
test
cmp
inc
fistpl
pop
mov
jg
in
faddl
inc
pop
sub
mov
cld
sub
aad
inc
loope
dec
movsl
adc
iret
cs
mov
cltd
hlt
mov
cwtl
mov
jp
fisubl
sub
and
jge
sub
negl
mov
push
insl
dec
in
inc
add
or
sti
mov
pop
fmull
dec
ret
push
and
add
jbe
cmp
mov
add
gs
dec
mov
cs
insl
rcll
mov
daa
mov
push
dec
shlb
cmp
je
lahf
insb
scas
xchg
negl
push
nop
and
mov
mov
and
xchg
mov
test
cmp
outsb
ret
mov
je
push
adc
test
negl
sbb
imul
inc
push
xchg
jmp
xor
scas
imul
fsubrl
jnp
outsl
mov
and
shrl
inc
push
sub
mov
pop
jmp
ret
push
mov
ja
pop
cmp
lods
cmp
icebp
push
inc
mov
leave
ficomps
scas
push
sbb
or
mov
lret
adc
fsub
test
jb
pop
cmc
xlat
int
push
ja
xchg
push
mov
cmpsl
fdivrl
icebp
sub
add
sub
in
pop
mov
sbb
fstpt
cmc
enter
mov
push
and
cwtl
jle
mov
sbb
inc
dec
in
dec
inc
mov
loopne
cmpb
add
rcll
mov
pop
jne
bound
xchg
out
mov
sub
sbb
fiadds
push
stc
pop
testl
jae
jb
sub
outsb
outsl
icebp
pop
insb
dec
stc
mov
das
push
shrb
shrb
inc
cmc
or
sbb
repz
fwait
xor
testl
js
add
ds
repnz
cmp
fisubrs
fistpll
fcoms
jno
sti
mov
int3
inc
or
movsl
add
add
mov
int
and
jo
xorl
mov
sbb
popa
shl
leave
cmp
mov
cs
mov
lds
sti
scas
pop
icebp
imul
call
xchg
out
xchg
std
mov
rorb
mov
or
xor
jbe
dec
idivb
jbe
push
icebp
negl
and
add
jmp
xchg
sti
popa
jp
pop
push
sbb
lcall
stos
scas
jle
lsl
cld
aas
imull
push
sub
stc
lea
rcr
test
lret
mov
xchg
sbbb
lahf
popa
mov
sbb
shlb
imul
push
into
nop
mov
jle
pop
dec
dec
jns
xchg
in
loopne
ja
addr16
inc
movsb
outsl
scas
add
inc
gs
dec
aaa
loope
daa
bound
mov
mov
les
mov
dec
adc
imul
shll
and
inc
or
mov
cmp
ret
mov
jo
out
mov
mov
adc
or
addr16
jbe
popa
pop
filds
mov
mov
repnz
cli
sub
dec
aas
xlat
fbstp
in
xchg
jae
add
adc
in
xchg
dec
jns
xor
arpl
xchg
pop
jns
out
js
div
jae
lahf
pop
or
mov
or
add
das
jns
xor
dec
enter
inc
stos
mov
rcrl
out
leave
cmp
adc
fnsave
les
sub
dec
scas
sub
fsubrl
test
xchg
pop
ljmp
and
cmp
js
fimuls
mov
push
fstps
and
rolb
mov
mov
add
dec
and
into
repnz
cmc
lahf
das
sub
gs
aaa
repz
dec
sub
testl
js
adc
lcall
sbb
mov
test
adcl
add
cmp
or
jo
push
repz
or
jb
push
inc
mov
jp
or
jnp
test
xor
jne
sbb
ss
xchg
push
push
push
jmp
aad
adc
cmpl
ljmp
push
mov
dec
jo
out
push
mov
dec
mov
or
sti
or
pop
mov
iret
rcrb
loopne
sbb
fstpt
daa
fxam
xor
decl
mov
stc
push
out
scas
pop
pop
es
mov
jns
push
and
push
lcall
out
pop
repnz
idivb
mov
xchg
sahf
or
and
fisubl
test
mov
inc
out
pop
enter
add
cmp
inc
in
out
xchg
jp
lcall
xor
mov
pop
inc
push
je
shrb
scas
jns
pop
jae
xor
cmpb
rcll
inc
mov
pop
aas
sub
or
pop
dec
sbb
mov
jns
lds
ret
scas
mov
inc
and
leave
xlat
int
stos
repnz
stos
inc
sbb
je
outsb
lock
dec
cmp
out
jne
and
fs
push
adc
jb
and
sub
inc
cmp
dec
jecxz
loope
xorl
push
add
cmp
ja
in
aad
add
std
inc
pop
push
mov
push
cld
in
add
cmpb
sub
or
sbb
dec
adc
rclb
or
mov
or
and
push
sbb
out
jg
mov
jecxz
mov
and
sub
rclb
imul
mov
int3
mov
and
sbbl
mov
mov
paddd
or
add
stos
std
inc
sub
add
xor
ja
sbb
sbb
xorb
push
or
in
roll
in
inc
call
imul
xchg
xchg
cwtl
sbb
into
push
lea
xchg
es
in
jns
xor
jmp
mov
das
bound
arpl
or
mov
mov
add
js
sbb
sub
push
mov
jbe
dec
je
cmp
or
sub
jne
pop
jno
mov
sub
xor
jg
pop
sub
nop
or
adc
dec
mov
pop
push
aam
data16
inc
scas
xorb
inc
pop
sub
sbb
jmp
lcall
push
addr16
lret
stos
fisubrs
outsl
int
pop
xor
mov
lea
inc
repnz
or
in
mov
aaa
popa
in
sub
stos
jb
cmpsl
inc
add
inc
push
addr16
sub
in
out
pop
sub
arpl
jle
add
shl
lods
pop
jne
test
mov
setno
rclb
inc
das
inc
mov
mov
push
ljmp
push
inc
jnp
cmpb
push
mov
bound
inc
jmp
sbb
and
repz
js
daa
insl
mov
jl
xchg
pop
jae
cmc
inc
gs
lahf
inc
mov
icebp
cmp
adc
movsb
sarl
movsb
outsl
fldenv
cmp
sarb
movsl
sbb
mov
cmc
or
add
dec
ret
movsb
xchg
cld
mov
push
dec
enter
add
or
mov
mov
stos
dec
sahf
mov
push
lahf
mov
xchg
pop
and
xchg
daa
out
inc
mov
popa
jge
ds
icebp
inc
add
pop
fcmovnb
cld
jnp
jno
hlt
push
cld
insb
psubusb
cltd
cmp
and
xlat
dec
aas
into
leave
inc
push
cmp
aam
add
or
and
js
outsb
aas
and
rorl
lods
shlb
adcl
xor
mov
and
push
lcall
je
test
sbb
stos
fimuls
nop
pop
adc
popf
mov
xor
repnz
mov
xchg
add
push
cltd
mov
mov
fcmovne
pusha
lahf
dec
idivl
adc
xlat
fildl
stc
cs
cli
repz
mov
sub
xor
lods
push
hlt
jmp
addr16
jo,pn
aas
stc
rcrl
aas
mov
aas
push
and
sub
or
mov
test
xchg
ss
cmc
cmc
cwtl
or
fwait
jns
pusha
mov
lea
cwtl
pop
fistpll
sub
out
ret
mov
hlt
ja
out
mov
lea
mov
or
push
das
pop
loopne
mov
sub
rorb
mov
out
negb
sub
push
test
jl
dec
inc
orl
inc
gs
addr16
out
in
mov
jmp
push
iret
test
and
mov
out
test
sbb
dec
fs
in
pop
std
aad
movsl
enter
and
fsubrp
add
sbb
gs
jne
xor
push
mov
cltd
js
xchg
add
inc
jmp
imul
xchg
pop
stos
push
mov
lock
into
add
xorb
dec
xlat
test
and
movsl
dec
loope
xor
pop
fcompl
mov
mov
leave
sti
mov
mov
stc
adc
inc
aaa
in
sub
leave
sub
sub
cmp
xor
sub
xchg
xchg
dec
dec
add
push
rcll
add
xorb
es
daa
test
bound
jmp
lret
mov
addr16
roll
movsb
mov
mov
jbe
mov
sub
cmp
pop
test
fldcw
stc
aas
xchg
mov
sbb
and
jmp
jne
add
pop
ficomps
add
std
cmp
mov
shll
je
mov
dec
pop
aaa
jecxz
mov
icebp
and
add
notb
cwtl
ret
daa
mov
jmp
mov
cs
idivl
dec
mov
adc
incb
xor
dec
or
add
jp
sub
mov
xchg
push
shlb
rorb
sub
rol
into
cmp
pop
mov
and
mov
jmp
xlat
das
lock
jne
sbbb
lock
inc
arpl
cmpsb
pop
repz
loope
push
fcmovbe
repz
cmpsl
mov
or
push
test
aad
lock
mov
rolb
ss
mov
push
mov
jecxz
cmpsb
and
ret
or
mov
and
cmovbe
pop
dec
leave
push
lods
test
scas
and
int3
dec
push
loope
add
outsl
daa
cli
and
mov
imul
xor
std
cmp
add
dec
mov
je
cmp
outsl
jecxz
stc
lcall
and
sbb
lret
dec
ljmp
and
daa
xor
lock
xchg
push
orl
xchg
inc
lret
inc
mov
inc
lods
pop
in
mov
mov
inc
roll
lahf
out
mov
bound
and
mov
in
loopne
sub
jne
ffree
mov
xor
pop
push
pop
adc
sahf
mov
xchg
xchg
subb
repnz
test
xor
fs
cmp
lcall
out
in
movsl
pusha
mov
rclb
cltd
shr
jns
in
push
inc
jle
fsts
repnz
pop
testl
neg
hlt
push
pop
inc
lcall
dec
les
dec
sahf
shll
cwtl
movsl
daa
shlb
imul
add
push
xchg
test
mov
movsb
js
jns
jbe
jne
push
sub
out
jno
negb
fadd
ret
inc
out
sub
and
int3
mov
iret
sbb
arpl
sub
ret
dec
xchg
pop
test
jbe
dec
test
inc
sbb
lods
enter
pop
pushf
insb
add
push
aam
imul
out
mov
xorb
int
icebp
lret
xchg
ret
jae
aaa
inc
mull
aaa
scas
int
addr16
aaa
cmpsl
je
fldl
dec
lock
lret
push
test
cli
out
mov
mov
jecxz
and
lods
xlat
je
mov
xchg
jle
pusha
mov
and
and
xchg
add
dec
and
notl
pop
outsb
xchg
fs
xor
dec
pop
lcall
add
mov
inc
je
test
jnp
cli
shll
test
insl
add
xor
add
rolb
fnstenv
insb
sub
sbb
adc
out
push
or
cmp
in
push
sub
fpatan
ds
enter
mov
add
cmp
xchg
daa
js
xchg
fisubrl
jbe
mov
mov
das
loop
cwtl
aam
sub
lods
mov
mov
sub
jmp
loop
sbb
mov
mov
inc
adc
xor
mov
mov
sbbb
or
sbb
mov
leave
mov
inc
pop
rcrl
mov
enter
aam
fsubrl
fwait
sub
vmfunc
or
lret
icebp
xchg
inc
in
mov
mov
sti
cmp
into
adc
scas
js
sbb
sub
adc
push
data16
and
fsubp
nop
add
stos
int3
dec
lret
jae
push
outsb
mov
fldt
bound
add
adc
in
adc
loope
xor
pop
mov
rolb
fucomip
lret
addl
add
push
sti
jbe
or
jg
xor
or
in
mov
jmp
sbb
mov
mov
call
push
fcom
cwtl
xlat
push
pop
mov
aas
lods
enter
enter
add
pusha
inc
dec
les
mov
test
out
loope
inc
shl
push
jl
mov
shl
jle
test
inc
dec
lahf
mov
pop
push
xor
cmp
dec
je
jo
mov
arpl
push
lock
jl
dec
adc
mov
andb
pop
cli
mov
xor
and
lahf
sahf
das
pop
movsb
repnz
movsl
and
inc
mov
push
lea
pop
pop
cltd
push
in
movsb
push
data16
outsl
int3
std
adcl
addr16
negl
xchg
xchg
pop
pop
lock
add
outsb
mov
lock
mov
mov
daa
jg
clc
inc
out
nop
hlt
xor
mov
popa
adc
mov
xor
loop
out
sarb
xchg
lods
adc
cmpsb
insl
cs
sub
jno
icebp
and
leave
ds
push
rcr
mov
cwtl
in
jmp
jbe
sbb
mov
lock
fimuls
xchg
sub
mov
cmp
jbe
in
test
pop
loope
mov
ljmp
mov
push
xchg
push
cld
repnz
dec
repz
push
int3
mov
int3
xchg
mov
loopne
mov
dec
jb
lret
popa
cwtl
add
and
mov
int3
fidivrl
sub
lahf
data16
adc
pop
xchg
icebp
xchg
scas
shl
cmp
cmc
push
xchg
pushf
in
adc
dec
lds
jnp
inc
xchg
dec
aam
rclb
shll
leave
repnz
lahf
aad
je
push
cmpsb
adcl
and
movsb
mov
mov
pop
sarl
in
cld
dec
in
mov
jl
aad
aaa
push
pushf
mov
or
outsb
mov
stc
stos
das
aam
cwtl
lods
repnz
call
in
ja
adc
stc
les
add
sub
sbb
xchg
add
filds
repz
xchg
cmp
fsubrp
jge
adc
ds
or
push
mov
ret
add
aam
add
sub
test
mov
loopne
add
es
fcompl
inc
in
or
pop
and
pusha
sbb
mov
push
addr16
test
sbb
cltd
xor
rcrl
movsb
std
pop
push
push
xchg
imul
inc
jp
cli
and
mov
add
push
and
mov
mov
std
adc
or
aad
cmp
sub
xlat
push
pushf
les
in
scas
mov
mov
add
lahf
or
test
pop
cmp
iret
ret
add
sahf
iret
pop
insl
mov
pop
adc
adcb
xor
or
push
fwait
cmp
pop
mov
push
mov
clc
push
subl
scas
pop
mov
or
cwtl
sbbl
add
ret
push
aaa
subl
cmp
imul
pop
cmp
inc
jns
fbstp
test
or
nop
sub
loop
adc
mov
cltd
inc
add
mov
popf
popf
mov
ret
or
fs
jecxz
bnd
or
sbb
push
pushf
mov
fs
mov
inc
jo
iret
hlt
jne
das
mov
das
stc
int3
xchg
imul
mov
aaa
ss
arpl
mov
inc
sub
mov
mov
mov
insl
or
or
mov
lods
and
xor
call
fstps
sti
pop
imull
imulb
push
fists
jg
nop
fistpll
add
in
xchg
roll
push
sti
inc
icebp
push
inc
fcoms
enter
sbb
mov
cmpsl
popa
cmp
pop
mov
adc
je
push
add
pop
scas
jne
push
adc
cmpsl
inc
or
cmp
std
jbe
repnz
imul
sub
xorl
in
out
in
pop
inc
mov
cld
pop
push
dec
divb
cmp
xor
pop
sbbb
and
int
int
out
loop
data16
xchg
call
push
push
xchg
mov
push
stos
mov
jp
xlat
cs
adc
test
test
aam
xor
mov
dec
cld
inc
rcr
mov
sub
jne
adc
mov
test
bound
xchg
in
jge
push
leave
faddp
leave
outsl
test
jne
mov
lret
repnz
in
shr
jnp
mov
mov
imul
add
mov
xor
sbb
or
jg
mov
sti
mov
test
mov
or
rolb
jmp
fcmovb
out
decl
pop
ja
loopne
mov
mov
popa
and
rolb
mov
mov
sbb
mov
ja
cli
cs
aas
or
arpl
jnp
jl
out
and
popa
mov
lret
shll
jmp
popa
jge
ja
push
mov
inc
movsb
sbb
mov
cmp
cmc
es
or
stc
add
sti
jmp
jae
xlat
pop
add
int3
insb
xchg
push
jecxz
pushf
pop
fldt
and
xor
pop
sub
or
shl
sbb
ret
dec
sub
stos
add
ret
lret
sbb
movsb
xchg
mov
dec
jp
xchg
repnz
dec
jecxz
sahf
rcrb
out
and
dec
les
cltd
and
inc
out
rclb
push
inc
mov
xchg
sub
push
movsb
jae
mov
push
roll
and
sar
xchg
ffree
jp
lret
sub
popf
xchg
cltd
inc
and
fs
movups
mov
push
insb
or
sarb
out
ja
lret
orb
adc
jp
jo
cmp
jns
out
dec
in
and
pop
xor
mov
arpl
xor
sti
push
fiaddl
std
push
stos
jmp
loop
or
mov
out
lock
sbb
xor
push
or
fldlg2
cmc
bound
xchg
pop
scas
lods
push
jecxz
mov
pop
xchg
mov
in
xlat
adc
movsl
jne
movaps
xlat
adc
xor
jo
jo
out
insb
jbe
push
out
push
aas
adc
stos
pop
popl
pop
add
outsl
imul
sub
loopne
incb
jle
adc
push
xchg
enter
push
es
dec
push
sbb
lret
adc
repnz
or
and
movsl
scas
mov
add
push
mov
xor
out
testb
jmp
repz
add
or
mov
iret
jge
jecxz
cmp
jne
inc
mov
leave
xchg
lea
aad
std
shrl
pop
ja
lods
cwtl
dec
xchg
mov
xchg
popa
inc
adc
cmp
orb
shl
dec
data16
jae
pushf
push
lds
inc
xor
pop
mov
leave
fistpll
sub
rcrl
aaa
ja
idiv
arpl
les
outsb
loope
push
cli
iret
idivb
push
mov
loop
movsb
mov
xor
jne
shrb
push
pop
fdivrl
pop
jge
and
push
mov
imul
movsb
imul
addr16
orb
xchg
cltd
aam
pusha
or
sub
sbb
dec
mov
cli
sub
or
out
insl
int3
pop
sub
into
add
inc
testl
test
jne
sub
xor
xlat
sub
fst
pop
jnp
lock
inc
cltd
xor
test
ja
inc
ss
insb
divl
popa
ret
mov
movsl
jg
sahf
sub
test
fcomi
loop
int3
pushf
inc
cvttps2pi
xchg
roll
mov
in
mov
pop
in
jmp
add
jae
adc
leave
cld
push
xor
jne
nop
pop
adc
and
mov
and
inc
in
je
cmpsb
cmc
jge
fcmovu
xchg
xor
out
sub
push
insb
clc
and
iret
hlt
mov
arpl
out
push
push
jno
add
jmp
out
iret
pusha
jno
sbb
stos
les
mov
ret
popa
jmp
pop
mov
cli
xchg
jg
and
rclb
inc
rolb
sbb
adc
xchg
xchg
sbb
add
xchg
mov
xor
push
mov
mov
jge
in
icebp
xlat
mov
mov
enter
push
sbb
adc
lock
lods
into
push
icebp
dec
lret
test
arpl
sub
fbstp
das
insl
pop
sar
aam
pop
dec
cmp
sub
jge
ds
inc
mov
and
sbb
scas
std
fldcw
push
dec
dec
dec
push
fldcw
xor
aam
push
sar
popa
pop
insl
pop
cmp
ror
jbe
dec
mov
pop
sbb
andl
pop
adc
and
mov
push
lcall
pusha
inc
push
mov
popf
xor
xor
xchg
hlt
dec
inc
out
in
fwait
test
lea
ficompl
leave
pop
mov
add
and
pop
or
push
je
popa
insl
adc
push
int3
ret
aam
nop
sub
nop
adc
xchg
arpl
push
pop
cmp
addb
sbbl
clc
mov
jge
mov
fld
mov
loope
sbb
insb
out
aas
cmpsl
daa
jecxz
and
mov
in
mov
cmp
das
jl
cli
sbb
mov
add
sbb
or
lods
daa
pop
pop
jno
adc
bound
xorb
fldenv
out
jl
in
pop
in
mov
lds
jnp
andl
mov
push
xchg
lret
fildl
adc
sbb
leave
fbld
into
inc
inc
jno
fcoms
scas
mov
jg
xlat
roll
fs
inc
sub
in
pop
in
dec
xor
push
loop
pop
cli
std
adc
loop
dec
sbb
movsb
daa
fbstp
or
mov
addr16
jp
mov
ds
cltd
mov
mov
push
push
out
mov
jb
push
xor
clc
push
imull
div
addr16
nop
call
into
cmc
jnp
jg
sarl
xchg
fs
sbb
std
and
sbb
fnsave
mov
pop
sub
mov
pop
dec
jae
inc
mov
sbb
sub
xchg
repz
xor
cmp
ss
daa
push
pop
sub
mov
xchg
mov
cmp
fnstcw
push
xchg
fidivrl
xorl
data16
imul
aam
mov
dec
dec
ljmp
xchg
mov
lretw
and
sub
and
aaa
pop
push
xchg
mov
mov
jmp
add
dec
test
and
sbb
mov
mov
clc
xchg
aaa
mov
lcall
fsts
inc
cwtl
fwait
push
ljmp
add
xchg
data16
mov
adc
add
and
cld
sbb
fstpt
push
ror
popf
jne
pop
xchg
push
xor
vaddsubpd
fidivrs
adc
pop
cmpsb
arpl
fildll
int
adcb
popf
dec
or
lods
add
gs
mov
pop
xchg
cltd
or
mov
add
mov
mov
nop
adc
xor
mov
adc
jnp
daa
push
jecxz
mov
dec
test
jbe
imulb
xchg
sbb
push
andb
dec
xor
inc
test
fwait
fs
fcoms
pop
jle
movsb
push
pop
fbld
clc
inc
cmp
jg
mov
imul
adc
sbb
push
movsb
pop
les
cld
ret
fidivs
shrb
mov
mov
insl
push
enter
adc
data16
dec
or
bound
leave
xchg
sbb
ds
fcoml
mov
cmp
jae
andb
call
clc
mov
mov
push
test
cmc
push
fnstsw
sbb
lds
icebp
scas
dec
jbe
fisubs
mov
jbe
addr16
inc
sbb
xor
aam
int
mov
dec
or
mov
dec
stc
scas
sub
orl
inc
xchg
imul
fstpt
lret
rclb
sahf
push
cli
sub
inc
in
sub
movsl
xchg
cmp
fsubs
dec
stos
cld
jge
int3
repnz
lcall
stos
pop
mov
insb
aaa
sub
sub
jbe
pop
jg
fidivrs
add
and
in
xchg
xorl
inc
mov
subl
lcall
ret
or
ret
mov
scas
fdivrl
loopne
sub
mov
pop
mov
icebp
jo
jp
sub
sub
dec
rcrb
orl
xchg
rcll
cmp
dec
in
sbb
push
insl
pop
sub
stos
stos
push
mov
sub
or
adc
out
push
pop
inc
out
fstl
cmp
add
lahf
pop
iret
cmp
add
push
inc
mov
push
push
pop
in
aam
cmp
lret
dec
pop
cmp
push
aam
jge
dec
pop
rcrl
popf
shr
popf
xor
cld
cmpsl
dec
rolb
pop
std
jge
mov
addl
dec
insb
test
aam
xor
sbb
sbb
icebp
hlt
loopne
icebp
mov
iret
xor
push
je
push
mov
aam
popa
orb
cmpl
mov
clc
xchg
xchg
shr
ret
in
fidivl
arpl
or
sub
xor
mov
cmpsb
sbb
mov
lret
addr16
movsl
in
loope
int
out
add
xchg
inc
enter
mov
dec
sub
xlat
ficomps
scas
mov
or
jne
popf
stos
adc
imul
cmpsl
pop
xchg
repz
mov
repz
inc
dec
jecxz
mov
dec
jmp
inc
cltd
mov
jmp
jnp
rolb
push
or
nop
mov
fidivrs
cmpsb
jmp
cmp
pushf
shlb
xchg
mov
add
rcrl
aam
stos
fucomip
push
sahf
gs
pop
jne
push
adc
icebp
leave
sbb
cmp
ss
push
pop
adc
jo
sti
enter
out
pop
mov
sub
mov
jg
jno
loopne
mov
and
je
cmc
popa
rcl
data16
and
pop
testb
mov
cltd
ffree
fbld
or
icebp
pop
sub
jg
in
mov
leave
add
in
xchg
mov
mov
xchg
cmpl
cmp
mov
in
sub
in
sti
je
arpl
xor
not
shlb
in
iret
xor
das
mov
push
movsl
xor
cwtl
mov
pusha
adc
xor
les
dec
lods
pop
test
lds
fnstenv
iret
inc
shr
inc
push
filds
popa
leave
ret
lock
fmuls
xchg
mov
dec
inc
sub
mov
es
lds
mov
lock
enter
sbb
leave
out
cmp
xchg
repz
mov
call
dec
sbb
or
outsb
icebp
out
or
clc
sbb
stos
sub
or
mov
xor
leave
shll
nop
mov
xor
sub
jo
test
filds
add
adc
cmp
pop
sbb
push
hlt
das
jnp
mov
ret
jmp
invlpg
xchg
jns
pop
movsl
jb
and
xorb
les
dec
mov
icebp
add
inc
add
cld
test
ljmp
xor
mov
ss
mov
outsb
outsb
jg
enter
call
iret
outsl
or
cli
mov
cltd
xor
pusha
mov
xor
cwtl
push
jmp
cwtl
aas
ljmp
mov
fucomi
icebp
stc
sarl
adc
adc
xchg
mov
push
int3
cld
rcrl
push
xchg
pop
sbb
mov
xor
rcr
call
push
and
sbb
jb
push
call
add
and
std
xchg
lds
push
push
daa
inc
fimull
mov
scas
popf
test
cmp
in
or
pop
dec
gs
fcoms
xorb
imul
out
inc
aad
xlat
pop
int3
sub
imul
imul
and
xchg
inc
push
bound
ret
cli
xor
outsl
and
out
ja
jge
scas
or
fs
scas
jl
cmp
ja
inc
add
fimull
scas
std
lea
je
movsb
inc
and
ja
mov
mov
vpaddusw
or
sub
sarl
push
sub
fs
orb
je
cwtl
xor
mov
pop
pop
push
jmp
add
movsl
xchg
int3
inc
and
and
fdivl
mov
in
fnsave
stc
xor
scas
into
inc
and
sbb
cmp
mov
mov
cmp
leave
inc
sbb
repz
cmp
mov
mov
xchg
hlt
and
cmp
pop
xor
cmpsl
adc
mov
or
xorb
mov
sbb
lods
lea
and
sub
sbb
push
aas
sahf
sub
mov
loopne
mov
add
inc
jp
shrl
dec
cmp
stos
sub
xor
cs
mov
push
jb
push
cmpsl
push
outsl
loop
pop
add
cmpsb
mov
pushf
scas
and
stos
icebp
jle
pop
and
xchg
rol
sbb
iret
leave
ljmp
pop
iret
scas
jne
mulb
xchg
mov
cmc
scas
cmp
aam
sub
lcall
cmp
movsl
ds
arpl
cs
iret
push
fwait
or
push
add
test
adc
lods
cs
xchg
aas
ljmp
repnz
cmp
jmp
mov
sbb
and
add
xchg
cmp
addr16
sti
sub
mov
inc
jno
filds
loop
mov
mov
aaa
push
dec
mov
sahf
pop
leave
call
mov
jbe
scas
flds
icebp
pop
adc
xchg
outsl
jae
cmp
inc
imul
xchg
jmp
orb
xor
pop
pop
test
cmp
adc
iret
aam
mov
xor
sbb
out
movzwl
out
push
xor
inc
push
mov
sbb
or
mov
mov
push
filds
pop
dec
adc
lods
dec
jl
pop
and
and
clc
stos
and
push
cmc
push
out
adc
out
or
jp
cmp
mov
int3
push
and
cmp
dec
mov
lock
rcrb
add
lret
pop
lods
daa
and
jns
xchg
mov
lods
push
dec
sti
xchg
sub
enter
cmpb
mov
sub
lcall
and
inc
dec
nop
jne
mov
gs
pushf
xchg
xor
jecxz
test
out
repz
push
adc
fidivs
and
test
or
adc
xchg
lods
jae
jnp
gs
lock
mov
add
scas
push
mov
adc
repz
popa
cmp
fs
pop
insb
pop
xor
arpl
out
mov
insb
fsubp
cmpsl
jmp
lds
dec
loope
fstl
jo
test
cmp
ljmp
cmp
cwtl
in
pusha
xchg
cmp
mov
push
and
sbb
jno
push
lahf
mov
pop
adc
scas
sbb
loopne
daa
or
xchg
aas
cmc
scas
push
or
pop
insb
xor
mov
mov
push
pop
and
adc
test
in
cmpsb
push
ret
sub
adc
pushf
jg
adc
mov
mov
popa
hlt
xor
mov
call
sub
lret
mov
xor
xchg
mov
push
je
dec
xchg
add
je
or
xchg
in
fistps
or
das
test
fisubl
sti
jns
mov
repz
mov
ljmp
mov
rcr
movsl
xchg
inc
xor
shll
or
pop
xchg
fldcw
addr16
jmp
mov
imul
cmp
jg
int3
rcrl
movsl
leave
xchg
je
xor
mov
add
test
pop
or
mov
sbb
hlt
inc
mov
test
xchg
jmp
lret
pusha
and
arpl
lods
out
fisttpll
inc
scas
fs
ds
and
fdiv
sub
imul
mov
jp
mov
imulb
rcll
adc
adc
sti
xor
xor
lret
xor
in
pop
jge
mov
xor
inc
jbe
mov
out
std
int
pop
mov
stos
jmp
std
xchg
mov
fs
xchg
outsb
dec
adc
movsb
mov
icebp
add
sub
xor
mov
adc
mov
rorl
jb
and
hlt
mov
mov
insb
push
mov
sub
or
push
add
ds
insb
mov
repz
fstpt
cmp
sub
dec
cmp
mov
xor
add
xchg
inc
push
mov
dec
xchg
or
jle
imul
sahf
sti
movsb
cld
or
pop
sub
aaa
fwait
pushf
dec
jb
xchg
or
in
dec
xchg
add
and
and
ja
pushf
data16
movsl
repz
es
adc
fldt
mov
and
mov
addl
mov
mov
jae
cs
aas
daa
leave
mov
leave
out
adc
jl
pushf
addr16
xchg
cmp
mov
movsl
xor
cmp
mov
xchg
cmp
jne
aad
pusha
adc
fwait
push
mov
xchg
ret
cmpsl
jmp
jle
inc
sti
push
fcomi
out
out
hlt
and
xchg
xor
xorl
or
stc
jne
into
loope
ret
lock
cld
loop
lret
iret
lahf
enter
rclb
mov
cwtl
jmp
je
ret
mov
dec
popa
cmp
jecxz
cmp
pop
daa
sbb
push
jno
push
mov
mov
movsl
xchg
daa
icebp
hlt
jge
xchg
sbb
xchg
dec
mov
outsl
rcrl
scas
jl
pop
xchg
out
orb
out
mov
in
pop
out
inc
jne
stc
xlat
mov
adc
enter
mov
adc
cmp
sbb
pop
loopne
or
stos
loop
add
jns
jae
xor
sahf
mov
incb
loope
jns
out
ficoms
push
jnp
or
test
data16
mov
mov
dec
and
or
cmp
sub
xchg
decl
dec
adc
out
sbb
subl
mov
std
or
mul
repz
repz
bound
cmp
iret
leave
add
shl
pop
sub
pop
gs
out
sbb
sub
test
mov
xor
mov
mov
stos
imul
xchg
jp
outsb
jmp
push
ficompl
in
adc
dec
xchg
into
and
ljmp
fsts
es
ljmp
fbstp
popf
data16
push
je
testl
std
test
xor
adc
lret
sbb
fnsave
adc
push
fst
js
das
or
add
test
leavew
in
xor
lock
mov
in
mov
scas
iret
nop
jb
out
dec
dec
push
push
rcr
mov
cmp
sti
xchg
adc
jmp
and
mov
lods
jne
std
cwtl
mov
xor
push
enter
jae
js
mov
mov
lahf
cmp
jmp
dec
stos
je
cmpsb
mov
movsb
jno
inc
bound
xchg
mov
movsb
lcall
es
adc
shll
or
into
hlt
sub
out
push
push
into
mov
fstpl
repz
out
xlat
xchg
andb
add
inc
lods
xlat
sub
cmp
pop
mov
add
mov
sub
dec
mov
orl
pop
loope
lea
lods
stc
xchg
pop
mov
jmp
in
cmp
clc
lods
pop
movsb
lcall
lea
mov
sub
mov
sub
insl
mov
out
inc
shrl
jns
cmpsl
xchg
pop
roll
addr16
cld
aam
adc
sahf
add
mov
push
or
clc
sbb
fcompl
adc
pop
call
inc
lret
addr16
mov
rcll
push
push
movb
imul
xlat
and
in
addb
fs
cmp
add
xor
xchg
xor
mov
push
mov
inc
ss
mov
jge
mov
sub
ja
ljmp
add
mov
gs
sbb
sarl
loope
bswap
mov
imulb
pop
mov
pop
push
cmp
xchg
xchg
aad
rorb
call
in
orb
into
hlt
or
cmp
push
fcomi
jecxz
add
xchg
push
pop
repz
ljmp
sti
sub
outsl
inc
gs
insl
push
xchg
jl
xor
rolb
lahf
pop
cmp
ret
fsubrs
pop
test
fisubl
lcall
push
cltd
pop
repz
jns
mov
adc
mov
sbb
lcall
rcll
sti
imul
aaa
inc
jg
add
jge
inc
fadds
xor
sarl
test
jno
xchg
or
push
rcrb
subb
jbe
xchg
and
push
bnd
leave
sar
jne
stos
insl
scas
ror
test
enter
cwtl
jae
mov
inc
lods
xchg
sarb
loope
enter
outsb
rcrl
mov
inc
lods
int
and
notl
mov
xchg
sub
pop
cld
xor
jnp
pusha
jbe
imul
sbb
std
dec
jle
push
lret
insl
out
pop
xor
pop
mov
mov
lods
xchg
lea
jnp
pop
push
ret
xchg
xchg
jmp
cmpsl
daa
cmc
xchg
and
and
jmp
movb
ljmp
out
cli
gs
mov
lret
lret
mov
lods
scas
mov
or
fstpt
cwtl
lods
rorb
sahf
add
movsb
lock
in
lret
lds
mov
jp
sub
push
cli
in
jmp
das
jmp
rcrb
sub
shlb
push
cmpb
mov
insl
sub
push
adcl
pop
sbb
cmp
mov
cli
or
shrb
jl
jae
or
adcb
push
rcrb
insb
mov
mov
stos
xlat
mov
shlb
lods
jle
dec
jmp
and
lds
ja
xchg
mov
xchg
adc
xchg
cmp
push
adc
fiaddl
inc
dec
push
mov
xchg
add
lods
xchg
dec
sbb
mov
xchg
fs
xor
std
movsb
arpl
lea
data16
push
xchg
enter
stc
dec
and
sub
mov
in
nop
xorb
imul
ljmp
mov
lahf
aas
add
repnz
aad
mov
cmp
xchg
sub
push
mov
out
fists
lea
jo,pt
xchg
insl
inc
repnz
cmpsb
cmpsb
repz
dec
icebp
sub
inc
lds
sub
lds
sub
leave
push
dec
bound
mov
and
pop
ljmp
pop
mov
or
int3
jo
mov
bswap
sbb
rcrl
lret
or
cmp
mov
dec
icebp
int3
out
inc
cmp
stos
test
mov
ds
and
add
sbb
out
inc
push
push
xorb
inc
ja
add
data16
insl
jg
xor
outsb
das
xor
or
into
sub
cmp
shl
pop
ds
lods
fidivrl
cmp
popa
pop
das
shll
dec
out
and
cmp
arpl
es
push
mov
sbb
jmp
test
sbb
and
ljmp
mov
mov
mov
mov
sub
leave
in
xor
mov
or
repz
cmp
mov
push
int
pop
jno
inc
test
clc
shll
xorl
out
leave
xor
fistps
adc
iret
xchg
push
fwait
lcall
or
xlat
mov
adc
xor
in
das
cmc
push
inc
push
shlb
or
inc
cli
int3
shl
mov
insb
and
jno
pop
and
xchg
daa
mov
inc
fs
xor
and
sti
insl
push
pop
dec
test
in
enter
imul
aas
push
mov
cmpsl
test
push
mov
imul
stc
push
dec
mov
movsl
xchg
inc
fldl
mov
ret
push
mov
pop
leave
aaa
mov
sub
adc
sub
int3
jo
dec
daa
aad
push
stos
push
xor
test
pusha
in
outsb
sti
fnstcw
aam
popf
dec
xchg
daa
pushf
cmpsl
call
repz
cmpsb
mov
xor
fucom
enter
inc
aam
arpl
jo
cwtl
jno
jle
push
jns
popa
shr
push
xchg
sti
xor
loopne
cmpsl
adc
insb
xor
xchg
test
xor
and
out
add
rolb
lahf
mov
in
ja
cmpsb
jnp
push
std
cmpsb
and
dec
sbbb
aaa
jecxz
sahf
je
dec
outsl
jmp
lea
jae
nop
fwait
imull
jns
int3
lret
cmpsb
aam
cli
sbb
repnz
or
hlt
push
iret
mov
dec
and
call
inc
mov
mov
xor
cli
add
lock
ljmp
mov
lahf
mov
mov
aaa
dec
mov
add
dec
ja
gs
and
jmp
jno
movsl
xchg
lahf
js
pop
mov
rcl
in
js
push
xchg
inc
arpl
divl
xchg
lea
mov
insl
or
adc
pop
dec
xchg
jmp
push
mov
cmp
test
jg
test
movsb
sub
mov
mov
add
push
lret
sahf
in
or
shrl
and
aad
pop
sbb
jns
aam
aad
insb
repnz
out
in
outsl
sub
hlt
loop
cmpsl
jno
mov
jb
mov
int
ds
jl
push
lods
jle
sbb
sbb
adc
or
sbb
hlt
jg
out
das
dec
push
hlt
mov
imul
imul
xor
jle
jge
xorl
in
sub
sbb
or
repnz
pushf
loope
cmpsb
add
pop
sbb
fimuls
arpl
int
cltd
xor
sahf
cmp
pop
ljmp
pop
pop
in
xor
ds
and
inc
lock
movsl
fmulp
ja
sbb
push
pop
jo
mov
mov
dec
xchg
pop
outsb
push
push
mov
cmp
push
scas
popa
ljmp
or
or
stos
test
push
dec
inc
pop
or
add
sub
fwait
xlat
repnz
and
mov
int3
cmp
inc
adc
xor
jmp
test
and
and
push
fdiv
aam
movsb
imul
dec
sahf
enter
aam
cmpl
mov
jmp
push
cmc
dec
jle
xor
sbb
jno
push
out
pop
sbbl
shll
pop
mov
in
rcr
pop
pop
arpl
xor
jp
mov
inc
movsb
sbb
xchg
addr16
xor
mov
icebp
les
adc
mov
dec
lahf
data16
cmpsb
out
adc
add
mov
out
aam
jb
jl
sti
stc
pop
rol
shlb
xchg
xor
add
cmp
aam
test
fsubrp
cmpsb
pop
in
push
in
fs
xor
out
aaa
dec
inc
cltd
out
jg
mov
ret
xor
or
test
mov
push
mov
inc
aas
pop
cmp
and
mov
sub
shrb
popa
mov
lea
lcall
cmp
or
aaa
jmp
cmp
rcll
rcrb
aam
lods
incl
cmpsb
cmpsl
mov
aas
sbb
sbb
mov
push
mov
mov
mov
and
push
fidivrs
jbe
adc
sbb
test
rsqrtps
adcb
push
mov
cli
insb
push
adc
lret
repnz
sub
aam
bound
lcall
mov
dec
push
and
and
push
or
lea
xor
push
jge
cli
mov
lahf
das
jno
mov
sub
mov
adc
test
inc
or
lods
push
sub
inc
push
inc
xor
jge
inc
add
mov
pop
js
sub
pop
add
cmp
or
push
sbb
movsb
icebp
cmp
cmp
outsb
aam
ljmp
mov
test
push
ss
insl
mov
or
mov
pop
jl
push
sub
es
adc
push
cmovo
jecxz
push
and
into
xchg
mov
rolb
cwtl
loop
daa
mov
mov
lea
iret
mov
mov
mov
mov
lret
out
jo
pop
mov
xor
imul
adc
scas
sbb
shrl
jo
movsl
xchg
fistps
inc
adc
inc
cltd
push
in
fidivl
adc
outsl
out
andb
mov
lods
mov
pop
outsl
mov
cmp
lahf
adc
shll
adc
cli
pop
rol
lds
jne
xlat
and
push
mov
jo
ja
or
jbe
inc
pop
and
insb
mov
lret
mov
shl
sbb
inc
add
iret
stos
jne
scas
mov
inc
out
inc
jnp
ja
xor
or
cltd
xchg
scas
and
jmp
mov
ja
shlb
adc
pop
je
cmp
and
imul
jecxz
xchg
adc
div
sahf
push
cmp
pop
mov
daa
jb
add
pop
mov
ret
pop
and
mov
push
jp
xchg
repz
in
mov
test
or
int
hlt
lret
or
mov
mov
mov
mov
stos
and
jl
sub
xor
pop
nop
push
seto
insb
push
jns
push
lcall
cltd
xchg
stc
call
push
xchg
mov
jmp
add
push
dec
mov
cmc
fwait
std
xor
mov
aas
pop
inc
cmp
dec
cmpl
mov
dec
xor
or
jno
xor
aas
dec
ja
sub
xchg
jnp
addl
and
shl
pop
inc
and
adc
int3
xchg
nop
fstpt
fists
lahf
adc
daa
xchg
test
lcall
mov
mov
xchg
pusha
cwtl
cld
pop
movsb
adc
ret
aaa
sbb
jns
pop
movsl
cmp
xchg
cmp
rcll
cmp
and
popa
in
or
xor
mov
push
pop
xchg
pop
dec
cli
insl
jle
adc
lock
outsb
repz
pop
pop
stc
movsb
test
push
pop
popa
adc
addr16
jbe
insb
xor
repz
inc
neg
inc
int3
and
mov
movsl
pop
ds
cli
in
push
adc
daa
xor
cmp
icebp
inc
hlt
jmp
add
enter
sbb
pop
call
frstor
cltd
cmp
mov
push
sub
clc
push
les
test
pop
mov
lods
enter
xchg
arpl
cmp
xchg
xor
fsubr
sub
cmpl
pusha
dec
and
test
test
or
push
sarb
or
xchg
xchg
or
ljmp
mov
xchg
cmp
mov
into
insl
jnp
movsb
popf
dec
jecxz
jne
iret
jmp
jmp
out
rorl
outsb
cmp
dec
mov
lock
ja
sub
addr16
jbe
loop
inc
push
icebp
pop
scas
pop
jb
pop
mov
xor
loope
fistl
sbb
iret
inc
sub
jbe
or
out
xchg
mov
fcomi
ret
sti
push
adcl
test
jmp
sbb
mov
shrb
mov
hlt
bound
jmp
mov
test
sahf
loopne
mov
and
test
mov
repnz
fnsave
push
fwait
xor
outsl
das
imul
movsb
jecxz
pop
out
shrl
popf
mov
outsl
sub
sub
stos
jbe
js
rcrl
icebp
pop
push
daa
cld
jmp
test
pop
ds
lret
das
fmuls
cwtl
rcrb
xor
cs
inc
aad
shl
inc
xor
js
test
je
movsb
mov
andb
pusha
pop
adc
fisubl
lods
popf
lret
pop
into
sbb
test
inc
xlat
jge
mov
in
fisubrl
mov
ret
cmc
xchg
xchg
inc
fcmove
mov
mov
mov
jnp
dec
inc
lea
xchg
fidivrl
xchg
sub
out
sub
gs
xchg
or
xchg
dec
fidivrs
rcl
mov
fs
jl
push
mov
sub
cmovne
inc
test
cmp
mov
outsl
mov
loop
xchg
add
pusha
sub
jnp,pt
dec
jle
add
in
push
mov
enter
icebp
fnstenv
xchg
lret
outsb
minps
inc
xlat
test
adc
and
lcall
mov
psubusw
dec
test
sbb
shr
xlat
idivb
out
pop
aaa
pushf
push
mov
loop
mov
jle
lds
roll
call
rcrl
in
mov
cwtl
addr16
or
jl
das
testl
or
jne
in
int
dec
rcrl
adc
or
je
mov
add
mov
sbb
jnp
fucomp
mov
insb
ds
cld
hlt
push
mov
pop
adc
imul
sbb
jae
sub
ret
cmc
scas
cvtps2pd
mov
xor
xchg
movsb
ljmp
bound
adc
loop
cmp
add
es
xor
fcoml
mov
movsb
test
xchg
and
push
shlb
insb
outsb
mov
or
pop
push
cld
shll
inc
lea
lods
ja
es
add
jo
and
xchg
clc
mov
xor
mov
fisubrs
out
add
add
jns
jl
fs
sub
es
jp
pop
ret
push
int3
inc
ffree
repnz
negb
ror
es
rolb
inc
popf
ljmp
push
lret
int
call
bound
and
movsb
in
decb
inc
cmc
dec
mov
pushf
xor
jne
popa
push
in
xchg
sbb
jle
jcxz
or
sti
pop
adc
xchg
subb
adc
dec
sub
roll
ficomps
or
adc
inc
stos
cmp
inc
mov
sub
jno
out
das
push
mov
fcompl
repz
fsubs
push
cli
mov
jecxz
stc
or
aaa
adc
or
xchg
aaa
cmp
push
into
testb
cs
jle
data16
mov
fs
fwait
andb
into
mov
mov
pop
push
pcmpgtd
inc
dec
adc
dec
test
lods
and
pop
shr
xchg
mov
or
fs
out
xchg
mov
popw
arpl
xchg
lock
enter
mov
repnz
repnz
shlb
fs
scas
out
call
sarb
popf
or
push
mov
lret
and
lods
pop
xor
dec
inc
pop
xchg
je
cmp
outsb
xor
loop
jl
lret
pop
lea
pop
sbb
pop
adc
aas
addb
not
add
sbb
add
sub
sub
lock
adc
jae
punpckldq
cmp
shll
pusha
cmp
call
jb
xchg
pop
imul
add
icebp
push
xchg
in
or
rol
js
sub
or
cmpb
pop
dec
stc
pusha
subb
outsl
xchg
push
lea
adc
lock
mov
push
mov
subb
das
mov
mov
push
in
ficomps
sub
stos
cmp
or
stos
add
sub
and
sub
in
fwait
adc
lret
aaa
imul
inc
adc
xor
les
clc
nop
sbb
and
rorl
dec
jmpw
jmp
les
ss
jns
cmp
mov
and
or
xlat
aad
ljmp
sbb
test
mov
jmp
cmpsl
mov
lcall
mov
sti
dec
into
mov
inc
push
mov
push
mov
mov
cli
xor
pop
js
inc
cld
cmp
pop
sbb
mov
loope
sub
dec
stos
aad
mov
jge
push
pop
push
jp
or
ljmp
adc
mov
cli
or
in
sti
lcall
dec
add
xchg
divl
mov
adc
xchg
mov
in
dec
je
inc
js
into
jno
mov
jnp
outsl
dec
int3
sbb
push
mov
inc
mov
call
and
pop
cmp
lock
mov
mov
lea
fisubs
mov
push
inc
ljmp
sbb
pop
outsb
das
push
xchg
pop
or
icebp
mov
push
push
pop
sahf
lret
pop
cld
add
mov
es
rcr
xor
jbe
jl
xchg
rorb
mov
mov
movsl
and
pop
mov
dec
insl
sbb
dec
xchg
test
sub
pshufw
outsl
sbb
bound
jbe
rcrl
pop
daa
mov
or
ret
jnp
arpl
add
mov
lods
sub
dec
sub
test
jns
xchg
mov
lods
push
mov
pushf
enter
cmp
mov
and
jp
pushf
iret
mov
roll
loopne
inc
and
shl
xor
pop
ds
js
into
pop
adc
stc
jecxz
fsubs
scas
notl
xor
mov
adc
dec
loopne
jo
add
mov
jnp
iret
add
push
jl
js
ret
mov
xor
dec
dec
pusha
cmp
jge
adc
push
roll
movsb
dec
adc
fisubs
dec
outsb
inc
ret
das
repnz
xor
jo
add
xchg
sbb
and
data16
mov
dec
xchg
insb
lds
data16
fwait
scas
orb
push
mov
pop
outsl
lret
push
std
ret
dec
and
sub
add
lret
test
lds
sbb
add
out
xor
aad
mov
out
out
inc
or
xchg
push
movsb
testb
ss
sbb
pop
xor
gs
call
sahf
movsb
sbb
pushf
and
dec
xchg
push
ljmp
mov
push
mov
or
mov
mov
int3
cmpl
and
repnz
push
adc
or
add
jg
je
not
es
mov
sbb
xchg
add
repnz
rorb
fcmovnb
sbb
popf
flds
xlat
into
xor
mov
mov
movsb
and
mov
sbb
mov
sbb
stos
aam
sahf
fwait
lock
and
mov
and
stos
pusha
sub
mov
ja
pop
fildll
or
imulb
shl
sbb
lock
sbb
xor
cmp
sub
push
xor
lret
mov
push
test
popa
cmc
sbb
sub
lahf
xor
sub
out
ret
rolb
sbb
nop
push
xlat
out
or
mov
add
xchg
inc
scas
add
mov
cmp
jo
jmp
mov
mov
dec
sbb
push
inc
xchg
pusha
and
add
inc
enter
cmc
outsl
push
aam
lret
push
jp
test
xchg
adc
aad
push
lahf
loop
addr16
inc
cld
lock
jge
pop
mov
jnp
xchg
lea
push
and
adc
adc
or
mov
jge
stos
stc
enter
out
push
hlt
sbb
xchg
xchg
cmp
xor
pop
std
sub
jmp
fsubr
xchg
into
sub
loop
mov
lret
push
clc
xlat
adc
cli
flds
in
daa
ficoml
mov
fcoms
sub
int
inc
cltd
pop
xchg
imul
lahf
rorl
outsl
aad
xchg
fldt
stc
pop
cmpsb
jns
sbb
fnstenv
loop
sti
push
shll
sbb
lods
mov
cwtl
adc
jmp
dec
push
mov
xor
pop
int
sbb
imul
nop
and
add
adc
stos
in
dec
ret
pop
add
add
mov
pop
data16
mov
stos
or
xchg
outsb
out
fs
aas
arpl
scas
imul
mov
and
adc
jbe
outsl
inc
or
cmp
lods
push
or
ret
mov
ss
jge
and
test
mov
adc
repnz
mov
sbb
jno
cmp
sbb
xor
js
jb
in
sarb
mov
cmp
xchg
icebp
lds
dec
cmp
push
movsl
cmpsl
sub
and
sub
rol
mov
out
je
cmp
jb
es
push
cmpsl
popa
jne
popf
pusha
and
sub
bound
lods
dec
je
mov
sbb
mov
leave
cmp
dec
fsub
repz
out
nop
nop
outsb
ret
xor
test
push
xchg
fwait
ret
mov
ds
iret
repz
clc
mov
roll
dec
test
lahf
sbb
fsubrs
jg
and
outsl
js
dec
notb
mul
cmpsb
pop
popa
popa
jbe
xchg
sbb
push
jge
jns
loop
xor
test
mov
mov
xchg
dec
jnp
sar
sbb
shlb
fcomps
or
stos
sbb
icebp
lods
xor
rcl
jo
mov
push
rorl
pop
lahf
or
jnp
push
lcall
mov
aas
mov
fidivrl
call
lahf
andl
push
cli
call
lcall
lea
xchg
jne
jl
sarb
mov
jns
xchg
pop
lock
fisubs
add
mov
es
call
sub
idiv
jo
clc
cld
inc
sub
ljmp
jne
addr16
out
aaa
mov
xor
ss
daa
xchg
insb
jno
and
cmpl
pop
testb
sar
je
test
mov
aam
or
mov
sub
decb
fs
xchg
das
sahf
or
inc
ljmp
mov
mov
hlt
scas
dec
mov
push
testb
jo
lcall
or
dec
pop
add
lods
rclb
fcoml
cmp
lds
jnp
sbb
mov
mov
lret
ljmp
lods
insb
and
sarb
mov
pop
test
mov
cmp
mov
xchg
sarb
arpl
adc
pop
push
in
pop
repz
std
pop
out
out
xor
adc
jns
and
das
popf
les
hlt
mov
hlt
lret
fdivrs
testl
fs
mov
flds
pop
mov
inc
or
add
pop
cmp
push
std
jnp
loopne
sub
loope
jbe
test
cmp
inc
loop
add
mov
jecxz
pop
jnp
and
cmpl
shrl
arpl
lret
outsb
in
inc
adc
push
fwait
mov
das
xor
insb
popf
rcll
inc
or
pop
sarl
sub
mov
pusha
pop
xchg
cmp
push
xchg
stos
iret
sbb
hlt
adc
lcall
and
jbe
or
movsb
test
pop
ljmp
fsubrp
fcompl
mov
sub
jle
pop
pop
stos
dec
hlt
popf
adc
in
insl
pushf
push
pop
pop
adc
mov
mov
xchg
xchg
loop
dec
mov
addb
int
inc
xorl
mov
insl
xlat
cmp
sbb
xchg
notb
in
dec
push
mov
stos
enter
lock
mov
aam
fadds
inc
xlat
xchg
inc
cmp
sti
xor
inc
stos
lcall
cwtl
rcl
and
out
repnz
nop
add
mov
jg
les
xchg
or
push
fcmove
cld
push
or
or
xlat
pop
inc
aas
inc
ljmp
sarl
loope
out
jecxz
cmp
neg
iret
and
ds
mov
lahf
fsts
jge
pop
xor
lock
pop
jg
pop
jp
inc
call
xor
or
cmp
sub
and
cli
jo
jb
dec
outsl
sub
mov
fwait
ja
push
or
xor
or
int3
imul
xor
jnp
jo
cmp
sarl
ds
iret
out
fdivrs
sbb
out
pop
loope
mov
sub
inc
call
dec
in
lcall
add
sbb
mov
pop
loop
xchg
int
loope
dec
xor
ror
movsl
dec
clc
xchg
lock
cmp
sub
dec
and
jge
jp
sbb
xor
adc
jp
mov
rcrl
push
and
int
jns
test
lret
push
aas
sbbb
push
add
mov
sub
xchg
pop
mov
iret
clc
xchg
push
lock
ds
xorw
pop
int3
jl
xor
push
gs
inc
lea
adc
mov
lret
push
cmpsl
mov
or
adc
dec
mov
test
push
in
or
cmp
clc
js
repnz
in
push
sub
pushf
ss
aaa
rcrl
lods
daa
xor
es
sub
push
sub
rcll
lahf
in
xchg
iret
xor
push
pusha
pop
push
xchg
or
xchg
mov
iret
pop
aas
bound
out
cld
push
fdiv
and
cwtl
jno
add
leave
ficoml
scas
dec
push
sbb
test
pop
sbb
adc
mov
sti
insb
dec
push
outsb
dec
ret
out
imul
orb
lcall
js
xor
xchg
ss
out
test
inc
out
rclb
cmp
push
in
scas
inc
orb
test
xor
sub
dec
pop
sbb
in
cmp
push
lods
jl
jne
xchg
cmp
jl
mov
ret
pop
insl
arpl
mov
pop
mov
xchg
sub
dec
cld
mov
shrl
stc
push
enter
and
jp
arpl
mov
mov
dec
dec
ret
xorb
fdivr
pop
cmp
xor
lret
xchg
rcrb
lcall
sbbl
insl
imul
mov
in
cmp
incb
sub
dec
jbe
xchg
idivl
add
add
outsb
sub
rcrb
enter
not
or
popa
arpl
dec
dec
jg
ss
add
push
je
xor
leave
jp
inc
shll
in
int
push
inc
inc
stos
mov
pop
ss
dec
pop
jns
mov
das
aaa
scas
sub
xchg
sub
sbb
or
ds
lods
jge
fnstsw
icebp
mov
out
xchg
cmc
cli
mov
xchg
outsl
sbb
cli
xchg
push
push
das
mov
jge
cmpsb
sub
mov
inc
add
jnp
rol
insb
cli
gs
jecxz
xor
xchg
ljmp
pop
jnp
xor
into
iret
pop
push
mov
dec
je
iret
jne
push
sbb
or
cmp
dec
pop
push
and
mov
cmp
adc
adc
mov
push
jl
jne
inc
xor
enter
sti
cmovno
hlt
dec
cmp
shlb
xchg
mov
int3
push
and
test
mov
mov
mov
mov
dec
fmulp
mov
jge
jmp
pop
mov
aas
cmp
jmp
movsb
mov
loopne
pop
inc
lahf
or
pop
dec
mov
out
jmp
add
decb
mov
mov
and
jge
mov
or
jno
lahf
sar
dec
fisubl
dec
xchg
mov
pop
jnp
inc
xchg
inc
jmp
push
inc
fcmovnbe
mov
hlt
pop
or
add
movsl
cmp
jo
ss
sub
ret
push
jmp
loop
lods
daa
mov
rcrl
or
outsb
or
and
sbb
push
mov
cmp
shll
pushf
stos
sarl
adc
cmpl
stos
push
add
push
jo
add
pop
pop
inc
aas
mov
jb
std
sahf
mull
out
in
xor
repz
xchg
movsl
mov
mov
out
into
rcll
xchg
fsubrl
ds
jp
and
jne
or
div
gs
push
popf
fwait
sub
insl
adc
mov
push
loopne
adc
ja
add
mov
out
in
jle
jo
fldcw
fstpl
ret
pop
movb
inc
mov
mov
lcall
sub
stos
adc
adc
push
sahf
test
cltd
stos
fcom
cs
jecxz
push
jl
insb
cmp
jns
les
dec
add
in
xchg
aaa
mov
and
movsl
and
push
jo
lods
mov
and
pop
repz
xor
pop
aam
lock
and
cld
or
adc
push
inc
mov
rorl
pop
cmp
jb
test
mov
cmp
add
lret
fdivrs
ret
clc
sbbl
cmc
cmc
and
insb
sub
fiadds
lret
cmc
leave
push
sbb
cmp
mov
test
xor
out
je
mov
xor
test
jnp
xchg
movzwl
inc
add
push
mov
out
mov
subl
popf
sub
push
dec
mov
mov
push
fs
flds
inc
scas
add
xchg
sbb
xchg
test
int
addb
lcall
daa
int3
mov
and
sub
std
and
pop
push
adc
sub
out
cwtl
jle
scas
aas
dec
cmp
je
inc
daa
sub
xor
gs
movsl
es
xchg
iret
inc
clc
and
pusha
cltd
xchg
out
in
lret
sub
inc
enter
stc
scas
inc
or
movsb
dec
into
cmpsb
xchg
out
je
daa
dec
aas
pop
pushf
mov
ss
xchg
cmp
popf
repnz
pushf
and
jb
mov
push
outsl
cltd
push
xchg
jp
mov
loop
cmpsl
xchg
lock
ja
andb
aaa
adc
fmull
inc
dec
outsb
lds
loope
inc
icebp
sub
push
daa
jo
cmp
dec
xor
add
bnd
lret
push
shrl
mov
and
mov
add
std
xchg
adc
lods
cmpsb
pusha
out
or
lods
sbb
pop
jp
out
ljmp
cwtl
rol
fldt
int3
test
dec
and
mov
loop
xchg
lret
add
loopne
mov
imul
cwtl
add
dec
push
mov
jge
inc
pop
aas
lock
mov
adc
out
pop
jnp
xor
mov
pushf
xor
insb
or
mov
xchg
pusha
and
daa
inc
mov
imul
pop
mov
or
popa
and
add
push
daa
pusha
out
imul
or
lock
mov
pop
out
pop
inc
mov
mov
popf
jmp
scas
ret
cmpsl
jle
xchg
test
dec
sub
dec
xor
jg
mov
lods
bound
popa
out
jg
cmpw
add
mov
jge
mov
lret
stos
lcall
cmp
int
sti
pop
and
stc
lock
mov
enter
in
pop
pop
vpshufd
loope
call
insl
out
test
xor
add
xor
xchg
nop
mov
hlt
push
jbe
shrb
daa
mov
imul
jp
and
xchg
das
leave
sahf
or
fdivr
mov
out
jae,pt
or
mov
mov
push
mov
in
mov
jmp
fsin
imul
push
cmpsb
inc
repnz
das
xor
push
out
jg
or
dec
push
ret
push
scas
mov
hlt
hlt
mov
lods
xor
ljmp
jae
add
stc
popa
add
lods
mov
icebp
jle
xchg
orl
arpl
xchg
xchg
jge
leave
out
add
push
mov
push
add
or
pop
push
jle
movsb
mov
movsl
into
pop
and
push
ja
imul
lock
cld
aam
aas
outsb
imul
jne
sub
ss
jle
and
mov
push
popf
fdivrp
xor
fstp
cmpsb
or
mov
mov
aas
mov
aas
int
inc
and
jle
push
jg
pop
insl
fiaddl
xor
mov
fbld
mov
xor
scas
stc
mov
and
scas
mov
jne
mov
mov
pop
mov
shlb
jb
pop
ret
jmp
inc
je
dec
push
in
pop
imul
and
mov
adc
dec
std
add
bound
pop
bound
aam
push
loop
xor
outsl
incl
loopne
pop
aaa
fidivs
rorb
scas
or
stc
sub
inc
pop
xor
cwtl
sub
hlt
mov
lret
mov
xor
mov
xchg
inc
xlat
popa
and
add
and
mov
dec
mov
mov
scas
sub
mov
nop
inc
mov
and
sbb
xor
mov
add
adc
dec
rorl
enter
repz
mov
das
dec
aam
and
xchg
test
vcomiss
lock
push
cmp
mov
pop
add
cltd
pushaw
aas
pop
aaa
outsl
mov
dec
pop
and
adc
push
sub
fisttps
aaa
addb
mov
repnz
rclb
movsb
inc
js
mov
adc
cli
xor
cwtl
lock
mov
mov
mov
imul
mov
add
jo
fwait
push
xor
lcall
push
shll
outsb
insb
dec
dec
xchg
xchg
test
mov
adc
cmp
and
popa
repnz
inc
insl
mov
mov
icebp
enter
mov
mov
mov
adc
xor
gs
dec
shl
lret
cmp
jp
push
mov
call
mov
lods
mov
push
jb
adc
jb
ja
inc
jmp
adc
outsl
cli
loop
pop
and
dec
js
ret
adc
cwtl
adc
imul
imul
push
and
dec
jns
mov
push
mov
sub
mov
outsl
outsl
inc
rorb
push
jnp
or
andb
scas
add
arpl
jecxz
iret
call
outsl
cmp
inc
out
add
jbe
iret
js
or
or
sub
les
sub
test
jg
shrl
js
mov
popf
inc
adc
mov
sti
daa
test
pop
insb
ds
aas
pop
test
in
stc
add
sbb
inc
mov
xor
sub
dec
inc
ficomps
lcall
movsb
addr16
mov
cmp
cs
sub
lds
adc
xchg
outsl
xchg
lcall
sbb
add
mov
in
jge
pop
jge
sub
pop
cmp
dec
movsb
insb
repnz
jp
jns
mov
out
mov
lret
ss
inc
test
mov
xor
sbbb
out
lret
pushf
popa
dec
movsl
pop
and
stos
xor
shr
insl
push
repz
lcall
in
imull
lods
test
imul
mov
push
mov
inc
fnstcw
dec
and
cmp
testl
lret
ficompl
out
push
popf
push
arpl
hlt
rorl
lods
jbe
lret
cs
or
push
push
std
xor
mov
pushl
sbb
inc
xchg
xlat
mov
inc
sti
adc
cli
addr16
push
add
xor
hlt
dec
inc
cmpsl
pop
outsb
lock
mov
aaa
out
or
or
aaa
in
shll
and
lahf
les
sbb
les
lods
xchg
stos
scas
push
jle
repz
in
call
jp
mov
popa
das
clc
mov
jmp
in
dec
sar
cmp
addr16
add
cmp
or
add
repz
xchg
loopne
fcompl
nop
mov
in
xchg
jecxz
mov
movsl
mov
pop
mov
icebp
pop
jo
cmp
mov
je
sti
and
lret
int3
xlat
inc
ss
fidivrs
lret
jne
and
inc
aas
sti
xchg
je
fstpt
cmp
and
mov
aad
sbb
cmp
mov
xorl
sbb
lret
inc
enter
mov
jmp
pop
insl
and
inc
mov
mov
pop
enter
mov
push
push
add
dec
testb
fstpl
js
push
bound
vprotd
push
fisttpll
fildl
jbe
mov
fadds
inc
pop
fbld
nop
add
adc
xchg
insb
aad
leave
jno
outsb
sub
in
pop
mov
jge
push
pop
mov
sbb
xchg
sub
mov
shll
clc
aas
sbb
sti
adc
data16
xchg
pop
xchg
or
or
mov
sub
pop
insl
sbb
scas
sahf
mul
dec
add
sub
pop
cmp
xchg
aaa
push
dec
in
repz
repz
or
add
inc
jno
je
in
loop
test
and
jl
mov
loope
insb
add
addr16
icebp
inc
nop
sbb
stos
push
add
mov
aas
lcall
jbe
roll
fcmovnbe
cmp
mov
loop
cltd
dec
inc
mov
cmpl
jecxz
add
push
jns
fsub
rcl
pop
mov
fs
ss
ja
pop
inc
mov
dec
mov
mov
dec
push
mov
add
adc
jbe
adc
add
out
push
push
aad
mov
inc
inc
mov
mov
inc
repnz
mov
stc
pop
xlat
loop
movsl
xor
inc
cmp
adc
in
icebp
addr16
repnz
mov
fnstcw
shlb
cmpsl
loop
fimull
and
xchg
mov
mov
push
out
aam
jno
mov
jg
mov
hlt
je
sar
and
push
mov
in
jae
testl
xchg
push
clc
in
insl
sub
fiaddl
test
pop
loope
fsub
ds
sub
xchg
sub
negb
pushf
std
orb
popa
shll
sbb
andl
incl
push
out
aam
fbstp
cmp
xchg
mov
mov
stos
call
adc
xor
jge
cmc
out
xchg
inc
mov
jae
fidivs
mov
or
xchg
mov
push
jbe
mov
push
out
cmp
mov
or
and
xorb
and
cmp
pop
dec
incb
jg
xchg
rcrb
and
call
push
xchg
xor
dec
cmpl
dec
cltd
dec
fs
mov
jg
pop
test
aad
or
jo
xor
mov
movb
fisubl
aas
pusha
dec
test
inc
cmpsl
sarl
add
lods
ret
test
jmp
mov
adc
jl
loope
cld
orl
xlat
cmp
push
jo
push
lahf
xor
sub
pop
mov
jno
xchg
and
xchg
out
adc
imull
repz
test
add
aam
test
aas
add
and
jno
in
jge
push
subl
js
mov
push
mov
pop
shrb
hlt
push
or
jbe
shl
clc
insl
adc
cli
mov
inc
ja
cmpsl
jbe
insb
gs
sub
imul
add
rorb
pop
rcrl
jg
xchg
sbb
lods
pop
mov
add
movsb
inc
ret
ud2
std
stos
frstor
mov
sub
sbb
and
inc
xchg
xor
fldt
loop
and
sar
push
es
cmp
mov
adc
dec
mov
fcmovbe
mov
in
inc
mov
sbb
cmpsl
inc
outsl
repz
lock
add
mov
insl
jmp
xchg
insb
cltd
cs
out
and
fwait
sub
push
cs
call
sbb
scas
popa
jns
lea
jbe
lods
and
jge
std
pop
pop
sub
fists
push
adc
in
aad
notl
je
push
dec
gs
aad
mov
enter
or
or
js
lcall
popa
jl
das
aad
sbb
inc
xor
sbb
idivb
shlb
xlat
and
sub
xor
lea
sub
and
es
daa
mov
xor
lea
mov
and
mov
mov
inc
inc
mulb
and
test
aam
loop
cltd
mov
add
sbbb
pop
jp
nop
shl
enter
sbb
adc
out
loopne
stos
cmp
jl
sub
jae
aam
test
or
mov
mov
jge
dec
cld
fld
adc
repz
in
inc
push
or
cmp
cltd
test
mov
cwtl
and
imul
cmp
jmp
jmp
xchg
mov
jne
jbe
or
aas
mov
in
cli
outsb
test
xchg
pushf
mov
jne
insb
stos
stos
mov
out
call
xlat
jo
or
mov
aaa
cmp
mov
mov
fs
jnp
jecxz
sub
and
xchg
adc
sub
iret
lret
or
xchg
jns
inc
cmp
inc
xchg
add
push
aad
in
rorl
loope
dec
jle
icebp
popa
or
push
lcall
pop
pop
mov
adc
mov
in
xor
call
push
test
outsb
xchg
outsl
push
test
sub
sub
inc
jg
jg,pn
jnp
pop
les
ret
fwait
xor
mov
dec
xor
ljmp
clc
xchg
test
sub
mov
xchg
cmp
sbb
adc
pop
push
xor
and
insl
mov
inc
adc
inc
hlt
add
mov
pop
jmp
xchg
jo
dec
jl
test
test
mov
xor
imul
sbb
push
popa
ds
push
mov
aad
jbe
or
mov
xor
sub
inc
pusha
movsb
sub
cld
fwait
mov
cmc
xor
daa
push
out
ds
mov
das
dec
adc
pusha
sub
mov
cmpsl
push
cmp
fmuls
ss
aaa
fwait
adc
imul
mov
int
fmull
inc
xor
cmp
add
es
push
inc
jns
mov
xchg
mov
cmp
sbb
jb
xchg
jg
js
into
leave
mov
sub
pop
push
ficompl
xor
fsubs
filds
mov
add
add
call
cmpsl
fdivl
inc
dec
dec
adc
inc
icebp
mov
pop
fcompl
test
aam
subb
jge
das
jae
fisubl
popf
mov
andb
jbe
pushl
enter
pop
enter
sti
aam
rclb
jmp
sub
inc
mov
sahf
jmp
jae
mov
sbb
rcrl
lret
dec
loop
sub
shl
push
push
hlt
icebp
ffree
in
sbbl
push
hlt
aad
adc
sbb
xor
sbb
lods
jg
test
test
outsb
push
and
and
ficoml
popf
mov
jb
fcoms
inc
out
iret
decl
loopne
mov
mov
push
cmp
mov
fbld
xchg
leave
outsb
cmpl
addr16
adc
mov
jmp
ret
pop
push
roll
sbb
adcb
test
frstor
jae
enter
shlb
xorl
lock
xor
int3
hlt
pop
std
cmp
sub
shl
adc
cmp
loopne
sub
lods
aaa
xor
outsl
insl
jo
sub
sbb
neg
cli
jne
or
es
and
push
test
cwtl
xor
xor
inc
sub
fdivrl
inc
imulb
movsl
das
mov
pop
jbe
popf
mov
jnp
mov
sar
mov
cli
push
jle
inc
loope
leave
cld
jmp
push
or
mov
sti
fs
or
sbb
aas
mov
movsl
ds
cli
int
repnz
pop
xchg
mov
mov
mov
mov
out
push
cld
mov
add
movsl
ret
push
nop
negb
mov
cmp
cmc
mov
pop
xor
gs
inc
cmp
das
gs
movsl
push
stc
bound
xchg
push
push
dec
sub
push
jb
repz
fwait
inc
ror
dec
jno
pop
rolb
insl
xorb
cld
nop
mov
mov
and
lcall
sahf
dec
je
cs
xchg
jle
jmp
adcl
mov
adc
ror
imul
jecxz
filds
pop
or
dec
sbb
xor
adc
add
negl
stos
sbb
lea
jno
js
sahf
outsl
xor
insb
and
inc
pop
adc
or
movb
mov
pusha
jecxz
mov
idivb
add
fiadds
mov
das
nop
cs
adc
adc
loope
sahf
dec
js
xchg
ds
jnp
push
sti
ret
incb
sti
stos
xchg
sahf
pop
dec
inc
aam
adc
cltd
mov
out
xchg
add
mov
mov
sbb
pop
push
or
in
shrb
test
xchg
xor
sbb
jp
je
mov
cmp
sbb
dec
rcrb
mov
cwtl
sahf
adc
lret
mov
dec
outsl
pop
xchg
popf
xrelease
jge
push
add
mov
push
pop
iret
dec
push
fidivrl
or
ljmp
jnp
xchg
pop
shll
daa
cld
cmp
inc
neg
ret
rclb
inc
mov
movsb
aas
add
out
xlat
dec
pop
lea
inc
mov
mov
in
xor
std
xor
mov
mov
xchg
jae
push
push
sub
xor
stc
mov
or
lret
nop
sub
lock
pmulhw
jne
add
mov
adc
sub
lea
hlt
rorl
imul
and
lods
sbb
int3
xor
lock
cmpl
sub
add
add
adc
int
adc
jl
ljmp
es
daa
push
jo
mov
lds
xchg
or
jbe
cmpsb
or
iret
push
pop
or
es
leave
fisubl
adc
cmp
sub
adc
xlat
jp
es
jmp
in
cmp
sub
ret
pop
mov
into
jle
jecxz
test
or
lcall
ljmp
adc
out
push
add
inc
pop
jg
and
push
aad
sti
dec
std
pop
jo
jp
sbb
push
push
sbb
rclb
mov
xor
shrl
cmpsb
jbe
add
inc
mov
sub
in
loope
fnstcw
sbb
subl
push
out
rclb
push
add
add
jl
ficomps
xchg
ret
shll
test
jl
jno
pop
push
add
fcmovnb
lret
int3
inc
fdivrs
lcall
adc
jbe
ja
in
idiv
mov
add
sub
inc
popa
mov
outsb
adcb
jb
or
pop
adc
dec
mov
or
jbe
xchg
sbb
sub
lods
pusha
in
cmp
xchg
xor
data16
mov
mov
push
xor
cltd
dec
xor
pop
add
add
mov
stos
adc
push
ss
movsb
or
add
sbb
sbb
mov
jns
imul
movsl
inc
mov
ljmp
mov
add
xchg
mov
pop
hlt
mov
mov
addb
test
xor
mov
stos
push
aaa
mov
sahf
test
and
adc
xchg
icebp
stos
cmp
outsb
push
testl
pop
jb
rclb
ja
and
cwtl
and
push
scas
cli
fwait
ja
push
js
jl
fimull
mov
mov
push
test
mov
jno
mov
adc
or
imul
push
sub
ret
cmp
jl
xchg
js
test
repnz
pop
jle
imul
testl
push
lretw
or
lock
jno
lcall
push
xchg
sbb
in
pop
xchg
pop
adc
push
adc
addl
stc
and
mov
je
adc
fs
xlat
nop
lods
xor
inc
push
aas
call
push
rorb
jno
pop
adc
jl
push
sub
jecxz
out
cli
push
sub
mov
mov
mov
mov
dec
lock
lret
xchg
pop
out
cmpl
mov
jno
fs
out
imulb
cmpsb
or
notb
fabs
add
lods
jne
test
mov
rol
cmp
pusha
inc
mov
mov
adc
out
inc
pop
loopne
push
add
sub
clc
pop
mov
adc
loope
repnz
push
cmp
int3
je
ret
shll
adc
inc
push
or
dec
xchg
pushf
lods
push
data16
inc
xorb
icebp
lods
pop
inc
andb
fnstsw
cli
lret
sti
push
xor
js
sbb
clc
adc
imul
call
and
dec
shll
lret
test
pop
push
pop
dec
mov
ja
in
pop
pusha
arpl
and
cmc
fcoml
shl
xchg
lea
inc
dec
mov
lahf
shrb
add
mov
bound
and
lds
or
inc
and
scas
scas
adc
out
mov
ja
incl
inc
mov
fiaddl
dec
subb
pxor
fcoms
insl
inc
mov
daa
xchg
pusha
aas
lock
lret
arpl
aad
mov
aad
sub
jp
push
vmovhps
jmp
sub
jecxz
mov
rcrl
inc
fcomps
pop
gs
sub
xor
push
clc
sub
push
loope
ljmp
ds
xchg
mov
cld
cltd
dec
mov
inc
push
jbe
mov
xchg
popa
mov
jnp
out
inc
aam
jp
mov
clc
add
lret
ss
adc
xor
inc
scas
scas
imul
or
cmp
pop
out
mov
stc
idivl
or
dec
xchg
jle
mov
stc
mov
sbb
xor
push
jl
jge
mov
popa
imul
shlb
into
cmp
mov
or
jmp
adc
imul
out
insl
fstps
dec
in
lock
call
daa
out
push
es
imul
cmovno
cmp
jns
fdivl
lahf
and
ljmp
sarl
rorb
mov
mov
mov
inc
pop
xchg
jmp
mov
mov
negl
pop
add
add
dec
sar
cmpsb
bnd
sahf
dec
cmpsl
cwtl
rcl
push
into
jb
inc
pop
orb
mov
mov
sub
sub
ficoml
push
sub
movsl
push
cmp
pop
jae
daa
fwait
mov
ds
lods
add
add
add
mov
cmp
xchg
mov
or
push
out
cmp
adc
punpckhdq
xor
loope
outsb
sub
push
push
sbb
pusha
push
lea
xchg
lahf
jg
or
sub
lret
pop
mov
jp
cmp
dec
push
mov
xorb
add
mov
std
clc
mov
mov
push
adc
js
scas
fcom
out
movsb
sti
mov
es
cld
repz
inc
inc
push
lock
daa
pop
in
pop
pop
cs
pop
sbb
fs
xchg
pop
ret
jnp
sub
aaa
mov
into
sub
push
out
sbb
dec
out
sbb
pop
stos
mov
mov
ljmp
out
in
xchg
sub
popf
or
jp
mov
ss
xor
addr16
mov
stos
stc
mov
and
xor
fldenv
mov
mov
bound
mov
mov
test
ss
cli
pop
mov
xor
pop
mov
rcr
adc
rep
jge
and
or
mov
pop
movsb
cmpb
fs
rorl
sub
push
sbb
sbb
js
mull
aas
inc
sbb
push
incl
mov
testb
pop
inc
mov
jl
cmp
pop
push
pusha
add
popf
je
xor
lea
mov
pop
and
mov
push
mov
arpl
add
cmpsb
mov
jno
lahf
aad
push
das
test
jge
cmp
adc
mov
scas
enter
push
mov
jl
pop
xchg
xor
dec
pop
and
add
scas
fcomps
sub
repnz
arpl
xor
out
push
ljmp
jb
scas
dec
mov
pop
cmp
cwtl
arpl
cmp
shr
shrb
xor
cli
cmp
clc
xor
or
lods
jno
lods
xchg
jno
adc
movsl
add
and
push
push
scas
mov
in
aam
or
and
scas
add
xchg
lods
insb
inc
cmpl
pop
out
dec
push
jbe
and
pop
pop
pop
jb
xor
shll
push
xchg
cs
mov
daa
mov
mov
mov
mov
xchg
sarb
lods
into
xor
aam
push
arpl
mov
outsl
aam
and
mov
sbbb
or
pop
lock
adc
test
pop
pop
stc
popa
inc
aam
xchg
aaa
xor
mov
ret
test
dec
sarl
jne
mov
xchg
push
pusha
ret
lock
dec
stos
sub
jge
in
sub
pop
iret
in
sarb
jnp
stos
imul
lcall
xor
sub
adc
imul
jle
stos
pop
dec
push
repnz
mov
rcrl
fidivl
repz
sub
cltd
shlb
lods
mov
fimull
xchg
jno
cmpsl
mov
sbb
cmp
ss
mov
sub
in
addb
in
sub
lcall
stos
das
push
in
cmc
mull
push
and
mov
xchg
jecxz
cwtl
es
arpl
jb
andb
xchg
mov
popa
fs
pusha
stos
js
rcr
dec
in
cmpsl
fwait
mov
pop
mov
idiv
fldl
in
aad
in
shrb
test
and
add
inc
and
aam
rorl
inc
sahf
push
cmpsb
fildll
popa
jmp
lret
xchg
adc
sarb
cmp
in
mov
jle
les
aaa
and
loopne
xchg
adc
and
js
add
iret
inc
jecxz
sbb
testb
jns
cwtl
cmp
bound
inc
les
jge
add
mov
sbbb
push
pop
mov
xor
shlb
sub
ret
jne
movsb
mov
addl
push
scas
mov
dec
mov
xor
mov
enter
mov
adc
jno
mov
movsb
out
sahf
jns
les
jmp
inc
std
repnz
pushf
inc
fcoml
in
xchg
cwtl
out
push
es
popa
pop
xchg
rclb
sbb
scas
sbb
test
adc
sarb
cwtl
push
mov
add
mov
dec
leave
js
test
or
jno
sub
sub
das
iret
inc
push
loopne
mov
xor
int
cmpsl
or
jns
notl
xlat
in
pushf
or
lds
scas
sti
adc
testb
fists
cld
pop
jp
add
xchg
shlb
mov
push
orb
pop
pop
sbb
dec
in
lea
repz
cli
lret
int
inc
add
adc
into
out
pop
mov
xor
inc
stc
xchg
cmp
cld
jl
call
xchg
push
loop
inc
push
sub
popf
out
push
in
mov
fsubl
push
fprem
fs
imul
xchg
jbe
push
out
insl
xchg
dec
sbb
stos
pop
fsubrs
xor
cmp
shl
test
mov
sub
int
dec
rorb
int
mov
push
data16
mov
imul
ja
leave
fs
test
les
std
dec
inc
mov
and
or
pop
out
ret
lods
cmp
xchg
mov
add
aaa
pop
ss
adc
int
mov
sub
push
pop
push
inc
mov
test
fstp
lahf
mov
lcall
mov
mov
out
and
xchg
ds
jne
ret
xorl
push
sub
push
pop
mov
or
and
mov
pop
pop
lock
pop
stos
dec
iret
cmp
loope
and
mov
pusha
scas
sbb
test
dec
mov
jmp
andb
cmpl
cmpsl
pop
fcomps
movsl
and
dec
cvtps2pd
or
and
cmc
sarl
ljmp
adcl
push
pop
push
push
ljmp
adc
xor
jmp
jae
test
in
pop
gs
push
popa
fisttpl
mov
inc
stos
sbb
mov
mov
cld
sub
data16
pop
push
push
inc
push
mov
xchg
mov
jno
cmpsl
pop
subb
adc
icebp
aas
push
push
mov
pop
imul
arpl
rorb
fbld
sbb
insb
pop
in
mov
mov
shlb
ds
or
bound
mov
jge
mov
scas
lea
ss
push
gs
jae
mov
faddl
cmp
sub
cwtl
and
pop
dec
pop
mov
push
in
ljmp
ror
xchg
lods
and
jno
adc
bound
xlat
jo
mov
xor
cltd
in
push
imul
inc
data16
adc
pop
and
jne
pop
mov
mov
jge
loope
lods
pop
jns
test
addr16
std
cli
out
outsb
lock
sar
aaa
xor
pop
mov
ljmp
pusha
leave
das
test
cmp
sbb
sub
mov
repz
ja
loope
mov
bound
aad
mov
push
in
pop
icebp
out
es
addr16
push
or
lahf
pusha
rol
push
popa
pop
cmp
je
fisubrs
fstps
sbbb
movsb
cwtl
jecxz
stc
sbb
or
dec
andl
pusha
jbe
or
mov
loope
cmpsl
inc
faddl
sbb
jne
mov
fwait
lret
pop
pop
in
push
hlt
mov
or
cmp
mov
mov
stos
roll
dec
cmp
fsubl
lret
rorb
fmull
adc
mov
or
dec
or
mov
rcrl
sti
movsb
popa
dec
das
xor
js
testb
add
cmpb
mov
fnstenv
or
inc
mov
sbb
push
dec
nop
addr16
insl
aaa
scas
mov
push
mov
stos
mov
sti
push
sub
imul
fs
ja
idivb
mov
pop
and
and
add
dec
inc
sbb
add
fistpl
bound
lahf
mov
mov
insb
inc
inc
fcmovb
lahf
out
add
ljmp
adc
cmp
iret
xchg
adc
xor
cmp
mov
outsl
jp
stos
mov
test
cmp
jo
sub
pop
fucompp
loope
pop
stos
lock
mov
pcmpeqw
push
cmp
loope
orb
popa
inc
repz
in
sti
dec
pause
xor
jno
aas
xchg
cmpsb
push
dec
mov
out
lock
push
setnp
adc
inc
imul
je
sbb
in
frstor
dec
sub
loop
sub
lcall
aam
mov
or
movsb
dec
inc
outsb
rol
pop
shlb
filds
sarl
movsb
loopne
cwtl
xchg
les
sbb
cmpsb
mov
mov
mov
jno
mov
ja
rolb
scas
mov
add
inc
mov
mov
sbb
and
rcrb
popa
icebp
nop
mov
or
inc
sbb
in
sbbl
mul
les
sahf
jge
push
adc
popa
inc
xchg
add
loope
gs
iret
int3
mov
push
int3
and
add
dec
adc
pop
loopne
push
cmp
fcos
and
stos
frstor
mov
test
mov
movsl
sub
cmp
in
dec
push
or
xchg
ret
repz
jmp
sbb
fnsave
cs
pushf
outsl
out
push
enter
xchg
push
andl
mov
add
mov
nop
insl
pop
call
insb
push
xlat
out
xlat
add
pop
lret
push
loopne
push
cwtl
mov
sub
cmp
mov
stc
pusha
out
aas
inc
stc
push
insb
push
mov
neg
push
fnsave
push
mov
clc
mov
outsl
pushf
xchg
pop
in
icebp
add
pushf
lahf
sbb
jp
fcmovnb
gs
sub
cmp
mov
jb
sti
mov
adcb
in
lret
cmp
sbb
insb
and
xchg
push
cmc
and
adc
and
jnp
add
ret
jns
sbb
and
jae
repz
movsb
push
and
mov
aas
outsl
mov
mov
cmp
mov
dec
scas
xchg
sbb
mov
push
inc
insb
mov
scas
roll
push
push
xlat
mov
insb
jbe
dec
sub
xchg
and
add
fsub
sub
push
dec
mov
jbe
jb
insb
insl
pop
mov
xchg
das
inc
mov
js
xchg
mov
inc
mov
test
xor
xchg
jg
out
mov
push
xchg
aam
lret
mov
aam
and
mov
aaa
inc
test
sbb
push
mov
ret
mov
cmp
mov
call
mov
int3
fwait
test
sbb
out
push
je
dec
sti
mov
leave
lea
in
rorb
pop
fs
loopne
out
jmp
mov
push
lods
mov
lret
stos
into
out
sub
icebp
adc
sbb
dec
jnp
stos
mov
push
jno
gs
mov
iret
cs
add
fmull
or
adc
test
loop
xor
push
adc
adc
cwtl
out
push
push
inc
fstpt
js
pop
aaa
dec
push
sub
ss
subb
stos
test
enter
cmp
jae
imulb
cmpsl
mov
movsl
lock
inc
pop
sahf
jae
repz
lcall
cli
jecxz
aad
mov
xor
mov
test
popf
mov
add
mov
clc
sub
aam
inc
fsubrl
fldt
repz
mov
mov
lahf
cmp
sbb
loop
mov
mov
imul
sub
sbb
scas
out
arpl
pop
call
mov
sbb
xchg
sub
pop
mov
push
push
inc
fistpll
js
cmp
dec
notl
jns
push
dec
popa
fstpt
movsb
xchg
fbld
jge
stos
je
and
xchg
inc
das
pop
rcll
icebp
mov
dec
shll
push
ret
stc
jecxz
or
fucompp
je
pop
xor
add
cmp
mov
ss
xchg
mov
fldt
or
inc
pusha
mov
cmpsl
cmp
sub
scas
add
adc
aaa
scas
pop
sbb
xchg
sbb
int3
int
pop
js
lret
dec
ds
and
xchg
mov
sub
insb
add
scas
pop
cld
adc
dec
std
insb
jno
inc
xchg
rcll
xchg
xchg
pop
outsl
ret
lcall
add
out
je
aam
and
cmp
nop
xchg
sbbl
xlat
push
js
add
js
xchg
adc
sti
cmpsb
ss
mov
insl
out
test
lret
cld
cmc
jbe
sti
mov
dec
cld
mov
dec
mov
mov
jnp
mov
hlt
ds
cld
sub
pop
jmp
fs
dec
mov
jae
sub
fst
imul
mov
xchg
jl,pt
popa
jl
add
leave
in
push
int3
lcall
adc
or
ret
nop
mov
arpl
pusha
jno
push
push
out
push
mov
push
xchg
ljmp
push
ret
xor
lcall
fidivrs
pop
fbld
push
sub
pop
lcall
mov
sub
pop
jl
mov
into
add
out
pop
lahf
inc
pop
cmp
rclb
mov
fdivrs
stc
aam
out
cmpsb
mov
cmc
jle
xchg
sub
pushf
sub
mov
fistpll
jae
insb
lret
imul
xor
pop
mov
and
or
pop
dec
repnz
mov
mov
loopne
ja
xor
pusha
fsubrs
mov
bound
sarb
pop
cmpsl
icebp
add
out
dec
jo
call
add
clc
or
outsl
or
or
mulb
out
mov
push
jb
lret
das
xchg
rorb
lock
sbb
je
cld
cli
jno
jne
enter
pop
and
add
add
lea
out
and
jns
das
xor
addb
xchg
fdivr
rorl
adc
cmp
push
cmpsb
cmp
dec
xor
inc
ret
dec
or
test
jae
pop
mov
test
fbstp
outsl
pusha
push
sahf
jmp
dec
lahf
add
mov
and
arpl
pop
xchg
inc
mov
dec
and
add
repnz
mov
lods
fs
jl
mov
cld
xchg
or
js
xchg
jp
std
cmpsb
lock
dec
aas
mov
add
jge
test
sti
imul
cmp
inc
sbb
mov
insl
sbb
xor
add
and
or
insb
scas
stos
mov
jp
pop
dec
jle
ret
es
cli
sbb
lds
jo
in
or
gs
ljmp
call
fnstenv
mov
pop
add
les
mov
lret
popf
and
ret
jnp
mov
idiv
jne
xchg
imul
xor
aam
push
addr16
in
xchg
mov
addl
loopne
movsb
sti
push
inc
xchg
outsb
mov
pop
repnz
into
pop
mov
ficompl
ret
test
jge
int3
int3
cmp
adc
sub
loopne
adc
cmp
int3
mov
sar
sub
fistl
dec
sub
jbe
xor
negl
push
mov
and
stc
mov
cwtl
ret
cmp
aam
add
jg
call
sub
ret
jge
mov
mov
shll
add
sub
out
stos
sub
dec
movsb
cmp
popf
rcll
xor
int
mov
mov
lds
mov
jo
sub
inc
cmp
add
jae
in
push
out
das
leave
dec
les
jle
stos
mov
sub
sub
cmp
loop
roll
out
xchg
or
out
pop
mov
enter
fmull
add
push
dec
scas
ljmp
sbbb
adcl
pop
decb
pop
cwtl
and
dec
enter
pop
jp
or
arpl
cmp
pop
mov
mov
push
push
out
lcall
repz
jmp
adc
or
out
push
mov
div
mov
cmc
enter
inc
xchg
push
sbb
movsb
cmp
js
push
jl
mov
xor
mov
fldl
cmc
je
mov
mov
xchg
roll
cmc
inc
fwait
pushf
outsl
mov
in
shrb
jg
incb
inc
popf
orl
push
or
push
test
inc
xor
xchg
mov
add
xor
cmpsb
pop
dec
scas
cmpsb
mov
mov
xchg
cmp
insb
cmp
or
sbb
mov
gs
xor
or
push
sub
xchg
mov
jl
and
aaa
cld
or
cvtps2pi
mov
je
push
hlt
push
push
lods
pop
pop
fisttps
andl
les
pop
lret
test
std
shl
push
dec
repz
mov
mov
je
daa
jl
outsl
leave
sub
mov
imul
push
mov
xchg
fwait
mov
sub
jae
xchg
fwait
cmp
adc
dec
adc
or
mov
idivb
push
and
adc
mov
sbb
insb
inc
loopne
mov
in
call
out
pop
adc
dec
dec
sub
sub
and
push
dec
ja
mov
xchg
mov
push
ljmp
sbb
ss
das
dec
rcrl
sbb
jge
sub
shll
inc
out
lahf
nop
cmp
add
mov
jmp
push
and
jne
jne
xchg
mov
cld
fdivr
adc
jmp
out
call
lahf
aas
sbb
mov
mov
faddl
std
cltd
jae
fucomip
das
mov
dec
xchg
leave
and
jne
das
loop
jbe
dec
subl
mov
ljmp
mov
daa
mov
mov
push
out
iret
sbbb
mov
mov
sbb
xchg
xchg
outsb
call
rcrb
sub
dec
xchg
rcl
les
mov
sub
cltd
lods
imul
nop
adc
sub
test
int3
rol
sub
aas
inc
jae,pn
mov
cli
cmp
mov
clc
sahf
xor
push
out
jge
test
mov
and
pusha
je
imulb
not
sbb
flds
jge
outsb
cmp
frstor
lock
out
lret
enter
add
daa
lock
pop
xchg
adcl
aad
xchg
inc
stc
dec
inc
imul
ret
mov
bound
mov
cld
mov
cmp
add
sbb
add
or
leave
push
and
popf
xchg
fdivs
aaa
jnp
dec
inc
leave
pop
pop
imul
fs
adc
rolb
adcl
sub
loop
xchg
lret
sub
cwtl
xor
push
jns
out
or
lcall
xchg
pop
mov
push
inc
je
mov
and
mov
enter
dec
cmp
test
jne
std
mov
or
ret
jae
fstpl
and
sbb
mov
adc
adc
and
push
movsb
jecxz
mov
xchg
add
cs
retw
sti
push
xor
stc
imulb
cwtl
out
loop
push
aad
es
dec
in
das
and
push
sbb
fbstp
dec
subl
xchg
jl,pt
jbe
popf
and
add
pop
push
sbb
push
inc
push
add
xchg
and
adc
pop
aam
xchg
or
outsb
call
sti
addr16
adc
std
cmp
mov
js
sub
stos
push
je
jne
repz
in
pop
mov
mov
jne
hlt
pop
data16
cmpsb
jle
int
dec
jle
jmp
add
lock
in
sbb
xchg
cmpsb
xorb
add
jno
add
shl
dec
test
cwtl
test
aad
daa
mov
fwait
push
ja
mov
push
dec
mov
push
sarb
in
push
rcl
call
and
sub
sub
mov
or
jo
and
aaa
jl
ja
pop
jnp
inc
lods
push
and
cli
adc
add
pop
pop
fwait
push
or
lret
fst
in
sbb
arpl
inc
and
inc
pop
inc
das
andb
dec
clc
test
push
js
adc
and
mov
mov
call
outsb
mov
push
into
jnp
xlat
mov
push
test
insb
jbe
mov
pusha
scas
shl
push
xchg
push
inc
pusha
jbe
lds
sti
adc
push
mov
inc
icebp
scas
mov
lcall
mov
cmp
inc
or
int
inc
leave
ja
push
addl
xchg
repnz
lcall
lret
jmp
fwait
mov
arpl
pop
adc
fwait
jp
xchg
jbe
dec
and
lock
or
shrb
sub
idivl
mov
lea
fadds
aaa
fdivp
add
nop
pop
or
push
fistl
add
mov
seta
mov
push
sub
not
ficoms
sub
push
pop
xchg
lahf
inc
icebp
out
je
mov
jle
ret
insl
or
xchg
inc
out
cmp
cmpsl
sub
imul
cmpsb
dec
fimuls
mov
push
xor
das
je
imul
add
jne
jnp
mov
inc
jno
inc
enter
nop
or
xchg
adc
mov
imul
cmpl
sahf
push
xchg
lret
scas
jmp
lods
xchg
out
dec
or
sbb
push
cmp
stos
es
sub
mov
es
mov
decb
fcmovnbe
mov
sub
or
movb
jbe
xor
enter
pusha
mov
inc
fcoms
push
scas
movsb
sar
cmpl
arpl
inc
and
scas
rcll
inc
mov
jb
outsb
adc
dec
mov
jl
add
pop
cmpl
pop
pop
xor
jmp
jns
in
std
inc
sub
jle
roll
xchg
sahf
je
mov
scas
pushf
xlat
fwait
jecxz
cmpb
or
int3
fstl
fwait
inc
add
push
push
mov
fsubl
cli
add
bound
hlt
fldcw
xor
xor
adc
xchg
test
cli
jp
ljmp
lods
aad
lods
insl
dec
fs
xchg
xchg
nop
add
xorl
push
jo
sahf
push
push
push
pop
iret
or
add
mov
test
test
adc
sub
idivb
mov
or
stos
iret
dec
add
add
inc
call
enter
jnp
leave
pop
lret
decl
cwtl
add
xor
mov
xor
ds
cmpl
add
jmp
inc
jae
adc
loop
in
inc
jbe
es
jns
push
mov
push
or
push
inc
jae
pop
cmpsl
mov
out
das
cmp
ret
inc
pop
cmp
mov
cli
cmp
shl
arpl
sub
sub
and
xor
xor
sub
or
rclb
out
repnz
jo
dec
iret
jge
push
mov
mov
pop
sub
xor
cmp
loope
pushf
cwtl
std
inc
sub
jecxz
inc
pop
imulb
dec
xchg
in
loope
xchg
cmp
inc
inc
sub
and
cld
shlb
loope
push
sbb
xor
jnp
sti
bound
xor
lds
stos
repz
dec
outsl
mov
ret
or
jg
call
push
in
stos
cmp
in
aaa
aas
insl
mov
pop
mov
fcmovbe
jbe
outsl
add
ds
outsb
imul
mov
push
adc
popa
xchg
adc
dec
std
mov
mov
add
pop
and
xchg
xor
dec
lea
jge
mov
enter
xchg
pop
call
mov
add
data16
jns
fdivrl
call
loopne
and
dec
dec
rcrl
pop
insl
push
push
dec
lods
sbb
xor
lock
es
fs
aam
pop
push
inc
mov
ljmp
scas
lret
push
lds
lock
add
cwtl
adc
mov
outsb
cmp
pop
cmp
push
sub
fbstp
arpl
dec
repnz
scas
xchg
mov
loope
mov
jbe
mov
jno
sarl
jp
xor
bound
stos
shlb
sbb
fcmovne
movsl
mov
jmp
cli
push
dec
imul
xor
out
and
daa
xchg
clc
dec
xchg
push
ja
into
xor
icebp
xchg
pop
jge
gs
scas
lret
jp
stos
sbb
push
xchg
std
aam
imul
mov
int3
mov
xor
aaa
and
pop
pop
pop
fdecstp
fwait
or
sub
imul
mov
test
sub
loopne
inc
fcoml
fs
mov
subl
cmp
mov
stos
cmp
fisttpll
jnp
int3
insb
imul
add
push
jge
push
cmp
mov
fs
loop
pop
push
pop
xlat
adc
das
pushf
xchg
jle
xchg
sub
lret
lahf
loopew
daa
ficompl
imul
sbb
and
movsb
and
mov
dec
mov
push
fildll
imul
dec
mov
pushf
fsubs
out
or
testb
inc
call
mov
dec
adc
adc
or
mov
pop
sahf
ss
lods
pop
xchg
pop
ficoml
in
jno
pushf
pusha
orl
push
jmp
cmp
mov
and
lret
loop
test
inc
add
mov
mov
pop
stc
push
mov
mov
pop
sbb
es
mov
sbb
cmp
lods
pop
das
xchg
loopne
dec
inc
and
inc
lret
cmp
std
add
lahf
push
jnp
add
lahf
mov
push
inc
push
adc
popa
cmp
movsl
cmp
push
xor
jo
sub
mov
addr16
add
in
or
imul
mov
sub
xchg
and
les
cmp
sbb
addr16
adc
aad
int3
adc
shll
mov
lea
jle
popl
xorb
mov
pop
shll
roll
or
out
and
or
push
inc
rorl
jo
xchg
daa
aam
push
cmp
ret
jbe
pop
sbbw
pop
ja
stc
sbb
adc
fimuls
push
xchg
mov
xor
push
or
out
dec
xchg
nop
inc
lods
fcmovnb
jge
cld
mov
fwait
js
sub
sbb
je
fs
cmp
fsubs
aam
and
pushf
test
xor
xchg
xor
icebp
movsl
pop
das
sub
push
imul
aad
sub
gs
xchg
inc
or
mov
adc
jo
mov
xor
mov
ret
cmp
ds
repnz
aaa
sbb
mov
mov
mov
push
mov
stos
or
cmp
imul
aaa
and
cmp
cmp
or
sub
xchg
add
sub
movsb
inc
fcompl
cmp
sahf
sbb
mov
pop
pop
lret
xchg
mov
push
add
inc
cmpl
inc
fistps
xor
iret
aad
test
inc
imul
cmp
sub
test
out
fcom
iret
data16
push
push
pop
mov
jo
fcoml
push
pusha
and
and
pop
adc
rcrl
cli
and
in
lcall
jno
push
mov
push
in
stos
mov
popa
inc
insl
aad
iret
jne
pushf
fldenv
iret
hlt
inc
lods
jecxz
insb
insl
sbbb
fwait
sbb
scas
icebp
mov
adc
adc
das
mov
lret
mov
adc
cmp
aas
cmpsb
xor
mov
lret
inc
jnp
adc
sbb
push
dec
add
mov
fisubl
cmp
cltd
jl
shll
jecxz
in
mov
stc
inc
push
xchg
inc
sbb
fwait
sub
sub
inc
sbb
iret
ljmp
cli
bound
insb
push
jb
lcall
adc
or
jecxz
mov
pop
jecxz
adc
mov
jmp
pop
mov
ret
jl
popa
iret
les
xor
je
jmp
pusha
inc
les
es
jae
jb
test
fstps
ret
push
sahf
mov
and
pop
fdivl
cltd
es
cmc
inc
mov
dec
movsl
mov
xchg
dec
js
test
pop
cwtl
inc
or
enter
xchg
xor
pop
out
push
lret
call
mov
insb
stos
lea
cmp
push
xchg
sub
fnstenv
das
sub
mov
outsb
push
aaa
xor
out
fnstcw
imul
cmp
cmpsl
mov
dec
add
inc
pop
mov
inc
or
inc
dec
nop
add
jmp
jo
fstl
xor
addr16
cmp
hlt
aaa
loop
outsl
movsl
inc
js
adc
in
cmp
pusha
mov
inc
mov
adc
pop
push
mov
repz
les
sub
outsl
clc
fs
in
cltd
cs
xor
adc
out
ljmp
test
mov
adc
gs
jmp
jmp
adc
outsl
xchg
pop
xor
mov
mov
lock
mov
mov
rcll
stos
add
pop
inc
enter
fwait
stos
inc
fsts
jnp
mov
cmpb
es
test
push
xor
in
cmpsb
rolb
xchg
cmp
pop
dec
cmp
add
xchg
ss
mov
mov
jecxz
insb
pop
loopne
stos
and
jo
sub
mov
leave
push
ss
push
inc
mov
cmpb
repnz
sub
cmpsb
in
fsubs
into
xlat
mov
andb
rorb
fildl
mov
test
or
out
fwait
jo
fistpl
fs
or
cmp
fists
cmc
popf
sbb
mov
mov
lahf
enter
add
dec
aad
int
inc
xor
cmp
pop
shl
sub
mov
shlb
pusha
lret
adc
or
sub
cmpsl
cmp
fisubs
push
cs
cmpsl
mov
rorb
fldt
adc
push
stos
scas
mov
sahf
mov
lods
es
loopnew
sbb
push
lcall
xor
test
ret
gs
dec
ficoms
movsl
mov
push
into
jb
mov
sub
insl
mov
adc
xor
enter
repz
fs
push
stc
cmpl
push
xchg
cltd
jno
stc
sub
mov
pop
mov
mov
sti
mov
fs
arpl
outsl
push
jge
jnp
clc
sbb
roll
jmp
loope
dec
roll
jmp
movsb
nop
cltd
inc
push
subb
adc
xchg
lret
pusha
xor
mov
push
xor
lcall
add
pop
push
push
es
mov
mov
push
mov
fmuls
lcall
pop
mov
xor
nopl
cmp
adc
ds
mov
stos
xchg
dec
mov
incw
aas
lea
fst
out
je
imul
push
insl
sub
inc
xor
fcomp
ret
movsl
cmp
in
divb
inc
sbbl
xor
daa
js
mov
mov
ljmp
loope
sar
test
shll
xchg
pop
test
sahf
xor
push
mov
inc
loop
pop
sub
inc
jp
mov
mov
mov
cmp
pop
ficoms
xchg
mov
in
mov
xchg
ret
mov
testl
inc
xor
push
dec
stos
fsubrs
xchg
pop
lods
xor
push
jne
push
out
in
addr16
loopne
adc
cmp
outsl
mov
mull
rolb
shr
stos
dec
dec
push
test
cltd
movsb
xchg
sub
push
cmp
aad
dec
pop
ds
rorl
add
in
cmp
jne
adc
jae
insl
lret
jb
int3
ret
je
sub
add
jecxz
sbb
jb
out
pop
repnz
insb
dec
xor
mov
sub
cli
test
cmp
xchg
and
stos
lret
push
dec
cmp
sub
push
jl
fldenv
push
in
loop
push
pushf
aaa
mov
push
push
test
dec
jmp
sti
add
xchg
movsb
aam
push
xor
inc
in
dec
cmpsb
jmp
shrl
add
mov
mov
jl
adc
sub
or
push
xchg
push
mov
and
adc
pushf
clc
pop
repz
or
outsb
inc
mov
adc
addb
sbb
xor
add
adc
in
xchg
and
and
push
jae
mov
push
dec
or
mov
adc
loope
dec
and
and
idivb
ret
cmp
ljmp
sbb
in
push
sub
mov
mov
sbb
xor
push
in
dec
pop
inc
jae
leave
cwtl
add
fmulp
and
add
pop
and
test
sub
and
push
and
mov
push
push
out
mov
dec
loop
and
dec
dec
mov
jmp
ret
push
stos
inc
pop
idivb
xorl
pusha
cli
cld
addr16
pushf
adc
lret
pop
enter
movsl
pop
fs
inc
dec
add
fldt
ret
xchg
and
push
xchg
sub
test
lret
aad
loope
push
adc
jmp
adc
or
arpl
sbb
jnp
cwtl
xchg
mov
stc
push
aas
cmp
sub
pop
jge
pop
cmpb
sbb
in
mov
out
iret
cwtl
repnz
pop
and
cmp
es
int3
pushl
pop
shr
adc
iret
xlat
mov
xor
cmp
adc
push
xor
rol
fcmovu
xor
cmc
sub
pop
and
mov
mov
bound
repnz
movsl
push
fwait
ret
ljmp
mov
in
cli
sub
and
shr
and
jb
inc
ficoml
es
iret
stc
ljmp
adc
pop
pop
inc
push
outsl
mov
pop
sub
mov
in
or
into
push
outsb
xchg
xor
cld
sub
or
sub
clc
lds
dec
pop
and
jae
lock
aas
bound
add
mov
cmp
neg
and
push
or
divl
test
lcall
cmp
and
ja
mov
mov
mov
cltd
ja
add
mov
filds
leave
arpl
test
jmp
jbe
jns
inc
lock
jnp
inc
daa
push
ficompl
jp
scas
into
xchg
test
scas
mov
jmp
mov
push
movsb
xchg
lods
xor
mov
or
nop
xor
fucomip
aas
dec
rcrb
outsb
lahf
dec
inc
ja
es
daa
mov
or
lret
fidivl
je
xchg
mov
data16
and
mov
test
icebp
push
mov
xor
push
xchg
sbb
jb
scas
inc
jns
push
sbb
and
stos
xor
das
add
sahf
xchg
pop
cmc
mov
xchg
inc
imul
addl
xchg
mov
ljmp
jecxz
xor
xchg
push
adc
stos
pushf
or
inc
and
ss
repz
nop
adc
jmp
fcoml
xchg
xor
rolb
repz
loop
jb
mov
sub
pop
rol
call
push
lcall
les
icebp
cmc
adc
addr16
cwtl
xlat
mov
and
lods
mov
aam
scas
sarl
js
gs
sbb
sub
das
sahf
sbb
enter
fcmovnbe
xchg
inc
popa
add
lret
push
lcall
mov
test
push
js
lods
insl
mov
mov
add
sahf
idivb
aaa
adc
adc
cmp
flds
insb
test
fisttpll
scas
inc
sbb
mov
cmp
aas
fsubl
movsb
add
mov
scas
jmp
pop
iret
sbbl
ja
cmpsl
std
test
lret
mov
sbb
repnz
movsb
repnz
pop
sti
imul
sahf
mov
sbb
fcomps
enter
lahf
push
jno
xor
mov
add
pop
imul
int3
push
jbe
mov
xchg
insl
scas
nop
xchg
call
pop
adc
movsb
fistps
or
adc
test
mov
push
nop
das
fwait
or
adc
jmp
insl
push
std
fimull
imul
outsl
push
sbb
lods
adc
pop
pop
adc
loopne
cmp
std
pop
push
popa
int
aas
addr16
inc
sub
bound
jne
mov
add
jl
enter
fcomp
aad
ss
dec
or
add
pop
inc
jb
adc
sbb
jb
and
and
test
test
mov
stc
imul
into
testl
push
mov
jbe
dec
or
mov
les
sub
loope
and
mov
cmp
iret
push
mov
lods
cmp
mov
out
mov
outsl
sbb
movsl
lea
pop
lods
and
leave
bound
pop
mov
lret
test
fisttpll
or
xchg
jl
mov
nop
arpl
nop
sbb
push
adc
dec
jge
fmul
inc
movsb
ret
mov
mov
test
ja
add
shl
sbb
mov
cmpsl
shrl
sub
push
lahf
adc
mov
stos
mov
mov
mov
cmp
or
add
and
xchg
faddl
jmp
cmpsb
movsl
xchg
sub
jp
inc
ljmp
hlt
or
popf
inc
test
fbld
loop
aam
lods
jg
jge
jg
pop
jle
cmp
out
stc
rorl
scas
push
insl
nop
mov
dec
jb
fnstsw
negb
xchg
stc
filds
cmp
in
mov
call
adc
int3
es
inc
sbb
dec
or
adc
pop
xchg
fcoml
fcmovb
shr
lods
mulb
sbb
cmp
jno
jmp
pop
stos
jb
pop
popa
xchg
jp
dec
xchg
aam
mov
loopne
stos
or
jb
fildl
xlat
cld
add
rcl
pop
and
iret
rcr
sbb
jnp
pop
shll
add
jbe
orl
xorb
stos
mov
mov
cld
orb
and
xchg
mov
daa
and
leave
scas
sub
jns
fwait
lock
dec
lea
mov
mov
push
inc
push
xor
push
inc
stos
loope
lahf
jbe
push
and
nop
fld
shll
lds
icebp
add
cmpsb
add
jo
in
fldcw
lcall
push
xlat
mov
adc
ds
fdivl
pop
dec
cmpsb
inc
fs
mov
nop
out
fs
test
adc
sbb
std
sbb
push
xor
aas
fs
lret
out
xor
rolb
pop
push
cmpsl
jl
jecxz
test
sbb
jb
pop
mov
bound
lret
cltd
pop
lcall
mov
imul
or
xor
stos
xchg
dec
cmp
sub
pop
out
fdivrs
add
insb
dec
inc
xor
xchg
pop
sub
insl
add
dec
mov
lcall
dec
cs
mov
dec
mov
sub
pop
mov
inc
scas
pop
or
lret
ljmp
jmp
mov
jno
xchg
insb
jg
xor
push
bound
lds
sub
call
out
scas
ljmp
push
lret
lds
sub
add
push
cmp
sahf
mov
movsl
mov
add
sahf
mov
xchg
int
sarb
pop
mov
lock
negb
dec
lret
mov
lods
inc
mov
sub
testl
or
sahf
mulb
stc
stos
popf
xchg
mov
enter
sub
repnz
in
lods
lock
push
jl
and
adc
test
pushf
sysexit
xchg
mov
loope
cltd
mov
aas
cmp
fsubrp
xor
push
jp
ja
dec
ret
out
repz
or
aad
gs
loop
je
add
jmp
addl
and
fldt
in
andb
ret
pop
cltd
jmp
mov
pop
aam
loop
mov
jle
in
adc
ds
push
repnz
dec
gs
add
out
push
je
in
ljmp
decb
dec
add
add
sub
repz
xor
or
push
scas
push
test
repz
pop
xlat
inc
jmp
dec
cld
push
lret
and
jle
out
inc
or
mov
cwtl
scas
or
shl
xchg
enter
mov
bound
addr16
inc
hlt
cmp
sbb
and
push
jae
push
jp
cmp
stos
add
inc
psrld
ret
loopne
std
inc
aam
arpl
testb
xchg
mov
test
mov
movsl
and
inc
push
adc
cmp
xchg
jl
xchg
fcoml
cmpsl
or
xor
mov
inc
pop
push
rol
xchg
dec
jb
push
push
sbb
mov
out
adc
sub
rcrb
data16
pop
enter
sub
push
mov
mov
ss
in
push
dec
and
pop
lds
mov
add
cmp
sbb
sub
rorb
xadd
sahf
fistpll
daa
mov
dec
cmpl
addb
or
xlat
push
add
xchg
jno
ds
movsl
add
or
sbb
in
scas
insb
push
inc
int3
dec
jo
lret
les
loope
cmpsb
dec
or
pop
mov
add
ljmp
aad
sub
les
sbb
cmp
mov
mov
cmc
ret
mov
imul
sahf
dec
xor
aas
push
cmp
ret
xchg
jb
xchg
cmp
jnp
cmp
push
and
push
jge
jae
ficoml
pusha
pop
push
into
cmp
arpl
sbb
mov
stos
xchg
pop
adc
dec
lea
std
outsb
mov
pusha
adc
mov
std
loope
inc
repz
jbe
insb
inc
js
outsb
mov
jmp
cwtl
test
cli
or
sbb
push
mov
or
js
jns
inc
popa
xchg
fiaddl
cmp
push
sub
push
pop
mov
lds
jecxz
data16
test
out
bound
inc
mov
push
mov
outsb
pop
shrl
inc
scas
pop
mov
shl
ss
and
add
adc
inc
adc
mov
mov
xchg
mov
dec
sub
lods
sub
cld
xchg
dec
push
sub
inc
rcr
in
sub
lods
imul
rorl
lret
pop
sbb
imull
jbe
mov
test
ret
int3
call
cmp
dec
mov
adc
and
sub
cwtl
sahf
ljmp
add
popa
dec
cmp
mov
pusha
daa
iret
or
xor
outsl
js
inc
inc
lahf
andl
xor
dec
divl
xlat
cld
popa
inc
mov
notb
movsl
jb
push
add
sub
mov
or
sub
cmp
test
daa
sahf
pop
cmpsl
nopl
leave
nop
es
pop
cmpsb
int3
inc
sbbb
ljmp
and
pop
stc
rorl
sbb
in
lret
pop
rorb
je
sbb
data16
movb
stos
push
adc
fdivs
faddp
and
inc
lods
mov
cwtl
and
cmp
xchg
mov
xor
dec
adc
aam
cld
std
test
loope
mov
inc
and
scas
xchg
insb
xor
jne
insl
xor
or
pop
pushf
mov
pushf
add
sub
and
sti
out
mov
jne
lret
jb
push
dec
or
cmp
sub
jno
mov
xor
bnd
es
mov
ja
and
sbb
mov
xor
or
jmp
cmp
scas
jnp
rorb
mov
les
cmp
leave
aaa
xchg
add
imul
pop
cmc
ja
jp
fldcw
or
xorb
cmp
and
movsb
mov
loop
inc
push
jns
dec
jbe
inc
movsl
inc
xor
pop
push
dec
lcall
daa
xor
xchg
xlat
cmp
or
into
sub
fsubrs
and
in
add
lock
cmp
in
les
xchg
lahf
xor
ss
adc
push
ret
loope
sbb
mov
or
pop
pop
fidivrl
stos
scas
out
shrb
sti
sbb
and
cmp
push
icebp
jb
and
jg
ficomps
or
xchg
jno
adc
or
fucomp
push
test
sub
sub
dec
dec
rcrl
fnstenv
sbb
xor
or
mulb
sbb
out
jp
jg
xor
mov
jae
stc
pop
in
sbb
loop
ret
jle
xor
push
jge
es
sbb
mov
push
stc
xor
mov
call
mov
mov
sbbb
mov
ret
cmpsl
jo
push
lret
mov
and
fdivrl
xchg
in
inc
loopne
push
into
jl
lea
sub
fcmove
fistl
icebp
xlat
adc
out
cmpsb
adc
divb
arpl
out
repz
dec
pop
push
mov
xlat
and
jg
dec
and
pop
and
out
pop
mov
inc
or
jecxz
mov
in
cld
les
or
sarl
dec
push
push
ficomps
sub
cmp
repz
xor
lea
xchg
movsb
shr
add
out
hlt
mov
js
xor
ljmp
sbb
xor
movl
inc
mov
ds
sbb
sbb
and
inc
scas
xor
or
add
xchg
add
mov
push
lret
aad
cmp
push
cli
xor
popf
and
repz
cwtl
push
movsl
lret
mov
pop
aas
sbb
in
in
xchg
rcrl
cmpsl
cmp
sub
negb
xchg
les
push
fbld
imulb
pop
dec
in
jmp
sbb
aas
xchg
sub
dec
cmp
add
cmpsb
xchg
inc
es
pop
inc
out
aam
hlt
pop
jle
add
ror
sub
repz
jmp
test
jns
fidivrs
clc
dec
or
outsb
inc
jl
dec
ret
or
enter
or
jae
pop
cmp
das
mov
jmp
popf
rcl
adcb
rcll
cs
andl
repz
fildl
icebp
repnz
pop
sbb
adc
push
or
dec
cmp
push
ret
sbb
out
dec
sub
pop
scas
addr16
sbb
sub
lock
ss
icebp
lahf
adc
push
jb
rolb
jge
xorl
lret
add
mov
mov
sarl
rolb
andl
in
jne
jnp
rcr
das
inc
mov
fsubr
icebp
div
out
out
mov
add
xor
pop
test
inc
repz
fcoml
jae
in
mov
jo
cmpsl
add
pop
movb
and
pop
mov
cmpsl
ljmp
ret
cmc
xchg
daa
sbb
iret
sbb
lds
popa
shlb
out
aaa
movb
incb
movsb
sbb
rorb
add
fistpll
aas
mov
pop
adc
popa
bound
imul
cli
add
fiaddl
sti
loop
pop
sub
lahf
xor
lcall
mov
mov
push
jg
dec
dec
xchg
lcall
clc
daa
mov
mov
sbb
rorb
cmp
xor
mov
push
or
dec
sub
and
dec
sub
push
mov
dec
arpl
dec
and
rcll
lret
pushf
push
adc
ret
pop
xchg
adc
int3
jge
or
cmpsb
jns
jmp
mov
adc
test
jl
inc
pushf
or
test
jle
out
mov
testb
scas
insl
and
rorb
adc
mov
adc
jno
insb
mov
hlt
pop
mov
inc
outsl
mov
fildll
arpl
xchg
imul
add
push
pop
in
orl
sub
sti
add
add
data16
cmp
sbb
pop
loope
inc
push
jno
loope
dec
std
sbb
aad
dec
adc
xor
pop
loop
scas
sbb
dec
dec
adc
gs
dec
cmpsb
andl
fsubl
insb
push
mov
or
imul
icebp
add
lret
cmc
cs
pop
je
inc
cli
mov
xbegin
cltd
cli
and
roll
ja
pop
aas
adc
pop
or
inc
mov
push
jnp
cmp
pop
orl
xor
lret
loopne
mov
mov
ss
pusha
cmpb
mov
xor
fdivr
sbbb
cli
inc
repz
or
lods
xchg
mov
ds
pop
std
and
sub
imul
mov
mov
aaa
lods
loope
pop
mov
xchg
mov
jmp
sbb
test
pop
aaa
fsubrl
sub
lahf
dec
pop
in
imul
jl
and
gs
or
jno
cmpsb
pop
movsl
xchg
ret
popa
sbb
cwtl
pop
push
adc
mov
adc
sbb
es
test
mulb
lods
inc
xchg
ds
inc
push
stos
add
sbb
scas
nop
dec
movsl
add
in
clc
push
dec
cli
push
mov
adc
xor
xor
or
loop
or
mov
cmp
push
loopne
mov
mov
xchg
pop
xchg
shlb
push
loope
xchg
xor
push
push
stos
mov
fisubrs
push
in
dec
add
inc
cltd
sbb
adc
into
jns
mov
mull
aaa
arpl
movsl
inc
sbb
pop
inc
addr16
mov
sarb
jns
jo
out
pop
fisubrl
call
test
jo
dec
gs
jg
jl
inc
inc
sbbl
dec
mov
jl
pop
xchg
shll
jmp
push
sahf
inc
fidivs
and
pusha
sub
int3
dec
cs
and
lods
adc
jge
cmp
or
cwtl
jae
lcall
movsl
decb
pop
imul
js
add
fwait
stos
push
adc
scas
cmpsb
dec
sub
sahf
push
mov
inc
stc
and
dec
test
cmp
cmp
inc
or
out
bound
sahf
movsl
popf
mov
leave
adc
in
loope
fnstsw
adc
mov
and
pop
cld
cli
insb
cmp
push
dec
push
mov
inc
test
cmovno
adc
cmp
mov
add
rorl
inc
fists
push
imul
xchg
bound
sub
rol
or
test
mov
pop
dec
push
inc
lahf
sahf
insb
push
mov
test
xchg
adc
dec
arpl
adc
or
or
or
xchg
inc
loopne
jno
rorl
inc
jno
mov
testl
sahf
xor
push
jb
scas
std
xchg
mov
aaa
insb
std
mov
es
xchg
je
pop
mov
cli
jp
aam
pop
aas
test
add
in
jle
movb
out
add
jl
ret
insl
fdivr
aad
cmpsw
xchg
lahf
adc
sti
mov
rclb
sahf
frstor
sbb
jnp
sti
sti
ljmp
test
in
push
rcr
pop
lock
inc
ret
and
push
adc
in
adc
sub
mul
addl
inc
jle
adc
ret
divl
xchg
adc
jno
pop
fbld
mov
pop
sbb
or
repz
sub
or
repz
cmpl
mov
xor
aas
jbe
xchg
aas
xchg
or
pop
push
jns
cmp
dec
dec
popf
mov
fsts
jecxz
jno
xchg
pop
jge
dec
ja
les
add
pop
dec
dec
mov
mov
ljmp
jl
lret
mov
es
and
inc
inc
movsl
sbb
jmp
dec
sbb
sahf
enter
fildll
dec
xchg
out
pop
sbb
dec
mov
scas
xchg
mov
jp
mov
dec
or
gs
loopne
movl
mov
cmpsl
xor
rcll
sbb
and
add
cmc
mov
xchg
adc
push
dec
nop
push
adc
xlat
data16
mov
loopne
jbe
cmp
push
call
mov
sbb
sub
push
sbb
sub
or
cmp
jecxz
cmp
mov
pushf
add
jp
faddl
jmp
lcall
add
jp
mov
lret
cld
lcall
dec
out
pop
cmp
push
sbb
cmp
lods
pop
mov
jge
xchg
sbb
popf
mov
xchg
pop
cmpsb
int
in
inc
shll
cmp
mov
inc
adc
fs
add
and
inc
jb
ja
pop
inc
push
scas
shlb
xchg
mov
into
lcall
test
mov
jb
mov
mov
jae
mov
ret
jge
jno
adc
ljmp
loope
mov
insl
inc
mov
sbb
fimull
jmp
inc
fnsave
cmc
xchg
mov
dec
mov
inc
mov
adc
dec
cli
adc
jmp
jmp
cs
sub
in
cmpsl
dec
loopne
pop
jge
cmp
inc
cld
gs
shl
lahf
cwtl
lds
mov
fucompp
aaa
fmull
pop
or
xchg
mov
or
cmp
mov
or
adc
inc
sbb
arpl
adc
xlat
ret
mov
test
out
cmp
sbb
adc
daa
and
and
sbb
cwtl
jg
add
fcomp
test
or
fidivrs
lret
cmpsb
out
test
shll
shll
fnstenv
lods
fdiv
nop
popa
hlt
inc
and
fwait
push
mov
iret
std
pop
sti
orb
bound
insb
mov
in
aaa
rcrb
call
es
lods
mov
sbb
sar
xchg
stc
insb
xorl
cs
mov
lahf
call
jb
cmp
mov
sbb
in
ss
flds
jno
jbe
mov
dec
aad
subb
jg
popf
adc
adc
mov
xchg
adcl
repnz
leave
lahf
orb
pop
popa
cli
mov
rorb
test
sbb
xor
adc
test
push
lods
pushf
aas
mov
jecxz
repz
stos
cltd
xchg
dec
push
aaa
xor
dec
pusha
mov
popa
jne
inc
jge
jp
in
sub
aam
outsb
xchg
jmp
pop
mov
shrd
inc
daa
out
mov
add
je
jg
dec
ljmp
ret
lea
inc
in
mov
inc
int3
lds
inc
rcrl
das
cs
push
popa
rcl
daa
sahf
test
scas
jmp
mov
pop
das
pop
pop
mov
nop
daa
pop
inc
push
fsubrp
adc
out
xchg
pop
cmpsb
xor
pop
movsb
les
popf
mulb
cmp
push
popf
icebp
xchg
push
pop
push
fcmove
cmp
jnp
push
push
testl
ljmp
push
aas
aas
dec
lret
les
iret
scas
pop
stc
lock
push
pop
or
enter
pop
adc
test
das
add
push
les
ret
nop
inc
cmpsb
xchg
mov
inc
loopne
shrl
adc
inc
cltd
fcmovne
push
jge
das
and
std
xor
cmc
sub
mov
xor
jo
push
cli
jbe
or
or
call
mov
inc
cltd
data16
stos
filds
das
adc
adc
in
xor
movsb
adc
mov
mov
add
cmp
daa
pop
push
in
clc
dec
loope
ja
push
inc
decl
sub
mov
pop
pusha
arpl
loop
or
jb
push
outsl
adc
xchg
sbb
clc
xchg
sbb
jecxz
out
inc
sbb
sbb
or
mov
cmp
mov
or
xor
push
jle
jl
adc
movsb
cwtl
repz
and
fldcw
or
cmc
xchg
lods
test
roll
or
xor
pusha
mov
loope
ret
into
mov
pop
and
push
out
mov
mov
sahf
pop
loop
jp
lods
xor
mov
cmp
rcl
push
fdiv
jg
pop
push
jbe
out
ss
cli
push
xor
lods
and
aaa
cmp
xorb
adc
test
pop
stc
nop
int
add
xorl
xor
into
pop
mov
and
mov
mov
movsl
cli
in
adc
jecxz,pt
sbbb
lds
cld
lock
cli
inc
shll
test
iret
dec
nop
xchg
subl
push
adc
out
xlat
rcll
cmc
cmp
and
pop
push
sub
enter
cmp
rolb
hlt
push
in
fidivs
scas
adc
sub
je
cltd
add
pop
dec
pop
mov
push
cli
in
in
rep
call
and
fidivrl
mov
inc
arpl
add
inc
stos
sub
aad
in
cmp
or
mov
jae
icebp
cmp
or
xchg
xor
cmpsb
push
imul
es
push
mov
mov
jge
xor
in
nop
into
imul
and
inc
sarl
mov
je
shlb
pop
adc
rcr
int
les
xlat
andl
xchg
shrb
jne
aaa
test
sbb
out
dec
mov
arpl
xchg
aam
lock
sbbl
and
jb
mov
pushfw
xchg
cmp
popa
mov
cmp
cmp
ds
decl
icebp
out
dec
xchg
les
mov
xchg
insb
sbb
inc
pop
ss
inc
cmp
or
mov
mov
pop
mov
add
cltd
bound
cmp
pop
aad
dec
daa
addr16
xchg
cmp
inc
loop
mov
mov
aam
mov
dec
pusha
imul
out
or
icebp
adc
lods
sbb
addr16
xchg
dec
sahf
jecxz
or
stos
push
adc
sub
jl
mov
mov
in
test
aaa
je
pop
and
test
adc
stos
pop
jle
call
sbb
icebp
jecxz
mov
push
sahf
jnp
dec
mov
pop
out
add
ss
fxch
repz
je
lock
xchg
fisubl
jmp
loop
push
adc
push
in
jp
roll
cltd
add
lock
loop
mulb
mov
sbb
enter
inc
pushf
jo
cltd
sar
add
mov
push
sub
jae
jb
sahf
nop
pop
addr16
int
inc
out
fcoms
xor
mov
int
inc
xor
dec
incl
shll
imul
cwtl
ret
xchg
sub
insb
lock
push
pop
movsl
loope
inc
popf
xchg
enter
in
mov
mov
sub
and
jns
aas
arpl
or
cmp
add
ret
mov
xchg
sahf
xchg
push
js
xorb
jns
push
leave
mov
mov
xor
add
sub
mov
int3
aaa
les
xor
push
jg
xchg
repz
or
ja
repnz
add
call
sub
xorl
mov
rcrl
xchg
in
add
addr16
push
ret
push
pop
cwtl
mov
dec
cmc
imul
or
or
and
int
gs
adc
cmp
mov
fiaddl
les
dec
xor
and
inc
sub
movsl
mov
lds
dec
jp
mov
fwait
addr16
sbb
cld
push
outsl
sub
sub
outsb
ret
lods
dec
push
scas
movsl
pop
sbb
xor
loopne
xchg
xor
lcall
adc
pop
add
aam
pop
or
push
ret
sbb
jns
dec
pop
lcall
loope
aaa
jbe
pop
add
pop
xor
xchg
sbb
dec
mov
out
in
flds
fdivrl
dec
add
insb
je
out
stc
mov
rcrb
leave
je
jecxz
clc
fisubs
in
jne
les
repnz
cmpsb
mov
pop
sarl
or
outsl
pop
movsl
into
fs
out
xchg
cmc
es
inc
int
mov
jge
and
add
andl
adc
rolb
int3
shrl
lods
rcrb
mov
hlt
test
iret
stos
popa
xchg
cmpsb
icebp
insl
in
insl
inc
xchg
push
xchg
adc
ss
call
cld
pop
and
mov
sbb
call
in
push
ss
faddl
outsl
xor
cmp
dec
push
mov
xchg
aaa
mov
insb
mov
rcl
xchg
sbb
sbb
jo
pusha
inc
jp
mov
stc
jns
inc
inc
imulb
mov
sbb
in
sbb
cmc
push
rclb
add
mov
into
inc
mov
inc
int
cmc
dec
stos
inc
xchg
incb
fildll
pop
pop
sbbb
mov
xchg
push
cmp
jnp
clc
out
ffreep
gs
push
test
ja
xchg
jmp
in
andb
mov
jmp
push
pop
movsb
arpl
mov
jae
mov
popa
cs
xchg
mov
orl
lret
sbb
stos
add
sarb
shrb
jno
lods
into
mov
fucomip
fimuls
add
into
add
in
jecxz
cmp
pushf
mov
stos
addb
xchg
xlat
xchg
lret
or
imul
mov
repnz
jno
mov
scas
and
xor
mov
fldl
outsl
xor
pop
push
out
je
das
ret
fbld
sbb
in
mov
int3
pushf
daa
jno
roll
and
mov
aam
jns
aam
cld
subb
adc
pop
outsl
or
or
push
xor
iret
xchg
sub
repnz
ficompl
inc
cmp
lods
cmpsb
es
sbb
in
in
push
or
into
cld
sub
xor
mov
cwtl
sarb
push
scas
add
mov
es
sahf
rolb
pop
addr16
xor
cmp
mov
cmpsb
icebp
xor
sarb
push
out
mov
je
cmpsb
cli
movsb
fwait
in
cmc
mov
rcll
subl
jae
sub
push
idivl
loop
inc
add
cmc
xchg
push
insb
mov
lahf
jo
lock
rcl
xlat
movsl
andb
cmpsl
jl
push
bound
aaa
mov
dec
sub
mov
and
push
dec
or
in
sbb
js
popf
add
xor
outsb
xchg
lahf
or
in
jecxz
dec
jae
je
mov
inc
decl
ljmp
cmp
imul
sub
mov
push
imul
lret
push
and
sbb
subb
add
adc
inc
and
incb
cmp
mov
mov
dec
adc
loope
xor
cwtl
or
sub
sbb
jle
jne
pop
jo
insb
mov
bound
xchg
adcl
ss
leave
or
ds
ret
push
daa
mov
ss
loopne
jne
adc
and
mov
push
jle
ljmp
sbb
jge
cld
cltd
pop
jmp
sub
rorl
mov
lock
out
stos
sbb
call
xchg
ljmp
inc
push
imul
xchg
repz
push
sbb
jl
cli
push
lods
xchg
dec
arpl
xchg
nop
cmp
sbb
popf
pop
ja
pushf
mov
mov
stos
ss
push
fdivrp
mov
jno
jbe
rclb
xchg
mov
cmp
push
fmul
mov
add
sahf
into
push
sbb
frstor
cld
test
int
aad
into
fwait
push
mov
sub
mov
jge
add
ss
dec
mov
cmpsl
fists
xchg
cmp
dec
jle
pop
xlat
cli
pop
fs
rorl
mov
push
into
jbe
stc
sub
aam
daa
xchg
xchg
xchg
mov
lods
pusha
xor
ss
xchg
movsb
lods
scas
sub
mov
cld
movsl
jae
push
push
and
aaa
aam
mov
cmp
in
pop
movsl
jb
mov
push
jp
test
leave
pop
or
mov
fs
and
adc
loope
push
std
sti
jb
sti
sub
mov
rcl
mov
movsb
jge
inc
fldenv
pusha
pop
inc
cld
pop
inc
test
int3
stos
clc
sub
leave
pop
mov
push
outsb
sbbl
js
test
andl
rcrl
push
dec
xor
push
xor
and
hlt
jecxz
jge
jg
jmp
adc
push
pop
pop
jl
mov
sbb
repz
call
fimuls
xlat
push
sub
mov
jae
scas
ficoml
cmpsb
cld
mov
repnz
adc
mov
mov
or
or
pushf
xor
mov
mov
sarl
mov
add
xchg
mov
jb
adc
or
xchg
cmp
nop
loope
and
fistpll
xor
jle
adc
mov
dec
in
sub
inc
pop
ljmp
test
aad
popf
or
aaa
xchg
outsb
iret
incb
jle
movsl
mov
loope
loope
test
mov
stc
rorl
idivb
mov
push
sub
mov
mov
mov
loope
xor
cld
jp
sub
push
mov
pop
movsl
les
mov
in
or
cltd
xchg
xchg
sub
test
add
repz
insb
xlat
xchg
mov
loope
sbb
popa
aad
shrl
push
adc
lock
nop
mov
lds
jb
repz
jno
lods
and
stc
jecxz
roll
mov
cmpsl
add
lea
push
test
data16
and
js
inc
out
fs
lds
cltd
fdivr
call
jns
lahf
mov
sti
or
cmp
sbb
popa
mov
icebp
xchg
cmp
adc
mov
cmc
lret
arpl
andb
stos
sbb
aam
cld
add
scas
inc
addb
xor
popa
or
sub
ljmp
mull
cltd
or
fildl
fsubrs
addr16
xor
xchg
inc
cmp
mov
fcompl
push
push
fldl2e
or
dec
jle
pop
push
fdivl
sub
dec
xor
sbb
mov
inc
imul
mul
xor
or
adc
push
jmp
mov
dec
dec
insb
out
push
push
mov
sbb
pop
sahf
in
add
dec
jns
cmp
in
push
jge
xchg
outsl
mov
or
insb
inc
jno
pushf
pop
and
clc
and
ds
push
lock
fdivrl
cmp
lahf
or
aam
xor
or
or
inc
into
mov
pop
incl
leave
mov
xor
pop
test
xor
ror
pop
add
lret
jnp
jbe,pt
xchg
dec
dec
stos
mov
ljmp
repz
and
sub
jmp
test
mov
mov
call
sbb
mov
imul
adc
js
clc
mov
mov
add
sar
lods
dec
aaa
repz
push
sub
sbb
ljmp
push
xlat
inc
loope
stos
adc
js
and
sbb
adc
sub
ret
pop
jl
and
cmpl
outsl
pop
jl
addl
inc
addr16
loope
add
stos
and
push
insl
mov
sahf
test
lods
mov
lea
xchg
imul
push
nop
mov
imul
in
add
jbe
fstps
rclb
push
xchg
hlt
push
mov
cmp
loope
mov
adc
sub
jge
xchg
dec
fcomip
adc
outsl
dec
lret
and
rorb
dec
pop
mov
jne
or
xor
jne
in
push
push
movsb
pop
jecxz
ljmp
popf
dec
sub
jecxz
adc
mov
jno
movsl
cmp
mov
out
dec
hlt
or
mov
mov
xor
adc
dec
add
out
xor
sub
fwait
jne
pop
jl
inc
lock
lret
mov
test
in
mov
fcoms
enter
loope
mov
dec
and
and
add
out
fstpt
pop
adc
jecxz
cmp
jbe
jns
jl
mov
arpl
mov
ficoml
mov
inc
imul
push
imul
into
mov
flds
and
lret
fildll
jb
or
subb
xchg
sbbb
mov
mov
add
push
or
stos
cmc
xlat
test
lds
decl
sub
xor
mov
faddl
mov
cmp
icebp
out
fs
jl
pop
roll
into
sarl
or
sti
dec
repnz
mov
mov
mov
clc
sahf
inc
push
jl
nop
mov
cmpl
data16
cmpl
ret
lahf
ror
sub
sub
xchg
xchg
xorl
insb
hlt
dec
int
fcmovnbe
and
ret
jp
inc
js
clc
loop
loope
cmpsl
push
cmp
ret
fstpt
jno
cmp
mov
movsb
jne
imulb
pop
jo
dec
fwait
jbe
xchg
loope
sub
pop
loope
aam
jl
or
orl
lds
fcomps
push
repz
ja
sbb
xchg
scas
ror
fidivs
setnp
mov
in
jle
test
in
push
lahf
pop
pop
add
push
ja
mov
daa
ja
mov
ret
mov
out
shlb
aad
xchg
jb
push
in
mov
xchg
repnz
sbb
sbb
xchg
clc
fst
sbb
leave
xor
xor
pop
and
add
cltd
pop
push
das
cmpsb
mov
inc
xchg
test
rolb
pushf
pop
scas
cmpsl
cld
iret
inc
loopne
inc
rorb
insb
mov
push
sti
aaa
pop
dec
sbb
cwtl
inc
mov
test
test
push
ds
jmp
add
add
cmpsb
insb
mov
stos
mov
pusha
leave
jge
gs
push
push
jg
lret
pop
stos
cmp
cli
mov
add
movsl
mov
inc
sbb
inc
or
cmp
adc
lcall
or
sub
xchg
adc
cmc
repnz
mov
out
out
and
aas
pop
movsl
mov
add
sarl
insb
fs
movsb
mov
sbb
insb
jl
cli
add
and
xorl
sub
pop
out
lahf
sti
sub
stos
fcoml
and
sub
mov
adc
cmp
inc
sahf
aam
sub
fldcw
cmpsb
imul
sub
or
test
push
mov
loopne
rclb
cmpsb
in
hlt
push
mov
adc
lods
xor
rorb
cld
ror
pop
ljmp
and
rcl
insl
cli
xor
fists
cld
test
mov
mov
pop
lds
cwtl
bound
pop
int
add
cltd
pushf
mov
aam
or
xchg
jecxz
jg
jle
push
jp
fs
sub
loope
sub
outsb
pshufw
outsb
test
jg
mov
pop
out
mov
nop
hlt
addb
mov
push
int
out
xchg
inc
adc
jge
push
mov
xchg
jp
daa
pushf
jge
sti
aas
mov
aam
sub
mov
cld
out
dec
dec
js
scas
mov
aam
dec
popf
mov
loopne
xor
divb
adc
inc
push
mov
and
jb
xor
sbb
pop
add
dec
fnsave
xlat
jl
mov
shll
mov
int
mov
addr16
pop
loopne
inc
push
sub
pusha
mov
lds
add
inc
cld
test
sbb
imul
xor
push
data16
add
insl
mov
adc
js
pushf
idivl
xchg
shl
testl
nop
or
adc
inc
xor
je
out
test
sub
sbb
mov
xlat
xcrypt-ctr
cmpsl
fidivrl
mov
fnstsw
mov
mov
js
pop
sub
xor
cltd
mov
testl
adc
fucomip
into
cmp
push
sbb
insl
int
add
hlt
iret
and
fisttpll
leave
movsb
sub
push
rcrl
cmp
and
shl
xchg
js
leave
pop
filds
mov
sub
push
lcall
arpl
jb
sub
or
add
out
xor
dec
mov
out
pop
repz
add
roll
and
je
lret
pusha
cwtl
sbb
js
sbb
mov
leave
lret
sarb
stc
mov
jbe
lret
mov
arpl
int
xor
bound
call
lret
adc
jge
mov
outsl
push
mov
cmp
aaa
pop
mov
imul
fimuls
fwait
je
push
mov
push
lods
inc
cmp
in
mov
lret
fisubl
dec
orb
lcall
push
not
ja
sbb
or
cmpsl
test
push
pop
fucomip
sti
cs
jns
add
icebp
xchg
add
ds
es
icebp
xchg
test
xor
clc
iret
out
xchg
cmp
cmp
xlat
push
push
or
lods
cld
aad
mov
ds
aas
iret
jne
lock
stos
jnp
rcl
cltd
jg
movsl
int
pop
clc
sbb
dec
iret
fiaddl
xor
iret
mov
xchg
jnp
jno
or
dec
adc
xor
push
or
popa
daa
inc
mov
inc
ss
or
movb
inc
and
js
cmc
xor
add
jns
cmp
cli
sarb
scas
shlb
mov
adc
cmp
inc
int3
lea
cs
imul
sub
arpl
mov
fsubrs
mov
subb
jbe
pop
addr16
repz
jge
cmp
mov
push
cli
inc
movsl
repz
jbe
in
push
bound
fcmovnb
mov
pop
icebp
cwtl
mov
test
adcb
push
dec
xchg
pop
lret
mov
pushf
or
cmp
push
pop
lret
or
push
mov
add
gs
mov
insl
sti
divl
cmp
stc
cwtl
clc
jb
out
popf
addl
inc
hlt
addr16
push
fmull
clc
sub
lret
in
jp
pop
pushf
mov
hlt
or
fstpl
inc
sbb
inc
daa
cmp
movsb
ds
sbb
inc
dec
push
xchg
lods
jge
jb
hlt
mov
lcall
insb
add
jb
jnp
arpl
addr16
jb
or
test
xchg
xor
sub
or
loopne
xor
loop
test
or
xchg
xor
jl
imul
out
pop
pop
gs
aam
lcall
into
fwait
cltd
mov
or
mov
ljmp
ss
xor
jbe
shrl
jae
fistpll
pop
add
pop
imul
dec
cli
lods
jo,pt
adc
into
out
rcrw
mov
loopne
in
or
dec
or
sub
out
mov
mov
lret
sbb
lds
clc
int3
dec
mov
xchg
arpl
divl
pop
stos
sub
mov
pusha
js
mov
push
jl
test
daa
insl
push
pop
scas
movsb
inc
jo
add
inc
add
sub
mov
aad
dec
dec
add
stos
mov
in
xor
and
rol
sbb
fmuls
repnz
dec
imul
lret
sahf
inc
push
cmp
stos
shll
push
sub
xor
fldenv
or
xor
ret
and
jo
aam
cli
lret
sbb
hlt
js
and
mov
inc
call
push
out
cs
cltd
mov
fldenv
popa
out
inc
lcall
jb
insb
mov
outsl
inc
stc
sbb
sub
mov
sub
movsb
scas
hlt
daa
ds
xor
repnz
inc
outsl
push
xchg
vprotq
xchg
stos
xor
int
push
adc
jg
mov
leave
or
das
xor
fisubs
bound
dec
xor
into
push
in
mov
push
shlb
loopne
cli
cmp
cmpsb
ret
fimuls
sti
pop
repz
rorl
jb
xchg
mov
fsubrl
outsl
stos
pop
push
inc
dec
xchg
or
leave
push
cld
sti
testb
mov
aas
outsb
xchg
sti
mov
leave
xchg
out
mov
les
dec
movsb
pusha
mov
jno
push
int3
pop
aas
pop
jae
fs
jl
icebp
jl
mov
lods
adc
mov
cmc
adc
and
and
fs
jnp
es
adc
data16
adc
addr16
idivl
xor
add
fdivl
sbb
mov
mov
jno
xor
dec
mov
add
sbb
push
test
roll
adc
jg
outsl
loop
add
jae
jg
adc
clc
adc
das
adc
jle
cmp
fmull
jge
jo
stos
rorl
jno
repnz
jo
pop
int3
add
cmp
test
or
mov
mov
je
mov
dec
mov
inc
dec
shlb
pop
push
fists
mov
inc
mov
je
mov
ret
std
divb
cmp
add
das
sub
mov
shll
mov
dec
push
jae
fists
jge
jge
inc
hlt
sub
cltd
in
clc
push
sbb
imul
push
jle
cmp
pusha
pop
sub
push
movsl
lds
pop
imul
aas
sahf
sti
adc
cmpxchg
dec
xchg
or
dec
nop
das
sbb
dec
xchg
jge
xor
push
mov
outsl
ss
cmp
mov
out
push
mov
jne
leave
sub
lock
mov
xor
mov
xchg
or
dec
mov
inc
stos
or
push
mov
push
ljmp
mov
xchg
jp
nop
add
pop
xchg
jns
psllq
lcall
repnz
pop
gs
es
mov
lahf
add
sbb
jns
shrb
mov
and
arpl
add
pop
pop
push
adc
dec
leave
in
pop
divb
mov
lock
sub
in
cwtl
or
fimull
mov
aad
iret
jmp
lods
int
cmc
loop
int
mov
mov
mov
jl
xlat
mov
ja
xor
jne
lret
mov
imul
jp
das
fisttps
rcr
jmp
mov
pop
ljmp
sbb
mov
aam
fucomip
and
pop
std
nop
int3
sbb
pusha
lcall
jb
sub
fcmovnb
xchg
sub
jae
push
sbb
xor
push
mov
dec
cwtl
push
push
nop
sarb
push
pop
sub
pusha
mov
imul
fcomp
cmc
cld
xchg
ret
imul
gs
gs
inc
testb
push
inc
mov
mov
lret
in
push
and
push
movsb
shr
inc
lcall
xchg
andb
movsl
pop
test
loop
fwait
push
clc
hlt
into
and
aaa
jmp
out
hlt
xchg
add
bound
call
push
movsb
inc
push
jl
outsl
and
hlt
test
and
cmc
rclb
pop
sahf
or
test
cmpsl
sub
stos
push
add
jae
loopne
repz
xlat
jb
add
dec
incb
xchg
ds
mov
sub
xorl
mov
aam
add
and
clc
lcall
bound
imul
sbb
xchg
movsb
lods
mov
push
push
jnp
pop
das
cwtd
movsl
push
ds
sbb
sti
xchg
jae
jb
lods
shll
sbb
mov
push
mov
or
in
jb
pop
stos
aas
inc
not
cwtl
pop
push
sub
int
fsubrl
push
mov
and
push
shrl
add
lcall
lds
mov
mov
cmp
mov
ret
dec
or
xchg
ret
idivl
loope
push
cmp
sub
push
sub
divb
loope
xchg
popf
jecxz
sub
adc
popa
push
popf
mov
jle
pushf
cmp
or
cld
ljmp
xchg
push
lock
mov
dec
ds
xor
gs
lock
adc
lahf
pop
in
in
cmp
dec
xchg
shll
faddp
test
pop
pop
imul
int
cli
and
or
sbb
jmp
mov
aas
and
inc
les
cs
or
lods
ljmp
mov
mov
cwtl
mov
sbb
mov
jle
je
xchg
jbe
sbb
pop
cmp
adc
es
mov
icebp
jbe
addb
pop
subb
leave
xchg
test
shrl
in
push
cltd
cltd
addb
pop
mov
jbe
jl
cmp
mov
cs
notb
int3
push
ljmp
stos
xchg
fstl
adc
jb
popf
jle
stos
js
sbb
fwait
sar
dec
jecxz
hlt
push
mov
or
cs
push
adc
out
and
lock
arpl
sarb
xor
pusha
and
dec
das
mov
mov
fs
movsl
fists
mov
xchg
popa
push
sub
out
out
idiv
xchg
dec
repnz
sub
popf
fsubrs
dec
jecxz
jp
or
inc
pop
nop
jge
mov
bound
pop
inc
add
xchg
or
mov
call
mov
in
roll
jns
inc
out
xchg
test
clc
cmp
jae
out
jbe
sub
div
divb
jb
mov
sti
jno
repnz
imul
inc
pop
in
dec
add
das
jle
popf
or
push
xchg
jae
pop
and
lcall
push
test
sbb
test
scas
imul
push
stos
testl
mov
leave
mov
loopne
add
ja
jo
in
jb
arpl
hlt
decl
movb
sbb
daa
sub
mov
dec
jbe
mov
pushf
jmp
and
pop
mov
data16
andb
in
mov
and
pop
imul
add
lahf
add
adc
cwtl
xchg
push
ficoms
dec
jae
add
fbld
inc
cs
xchg
in
out
pop
fdivl
xchg
addr16
add
rcl
rorb
aam
xchg
inc
mov
imul
fimull
out
insb
outsb
and
jmp
and
push
test
xchg
movsl
out
mov
xchg
push
mov
out
nop
cmc
xor
add
add
mov
jbe
jae
lods
out
outsl
jp
mov
js
sbb
cli
fistl
cwtl
fld
pushf
jge
lahf
dec
adc
add
xor
mov
inc
jle
cmp
pop
insb
int
test
jne
mov
mov
mov
xchg
out
addb
insl
dec
pop
xchg
sub
push
out
aam
add
push
sub
lret
loope
push
fwait
mov
insl
imul
adc
dec
jae
jl
fsubrs
aaa
lahf
mov
sbb
add
and
movsb
push
stc
xor
lods
sbb
movsb
mov
loop
cmp
push
imul
add
cmp
mov
shr
jmp
cmp
cmpsb
sub
mov
mov
pop
movl
loop
jne
rorb
or
stc
ljmp
loop
mov
test
scas
push
cltd
out
jbe
mov
xchg
or
das
pop
or
sahf
xchg
pop
mov
cld
das
mov
ret
divb
push
push
xchg
add
inc
pop
fidivs
xchg
push
sahf
cmpb
repz
adc
stos
push
mov
fwait
ss
repnz
jnp
in
stos
jg
lods
pop
mov
or
cmp
add
out
push
imul
add
lods
dec
fchs
jecxz
fstps
shrl
mov
inc
xor
xchg
ret
and
outsb
dec
loop
mov
push
fcmove
scas
aaa
insb
or
and
jg
rcl
push
ja
dec
xchg
cmc
clc
lcall
fsts
fsts
push
mov
jp
mov
sub
inc
popa
sbb
jl
std
jg
and
cmp
and
aam
jno
cltd
pop
sub
dec
aam
xchg
stos
cld
inc
or
es
orb
add
inc
fmulp
dec
mov
ficompl
jl
xchg
test
mov
xor
xchg
cld
cs
lods
rorl
mov
push
sub
ficoms
cwtl
insl
push
lcall
aam
jg
dec
dec
mov
imul
repz
nop
mov
leave
cmpsl
ret
cld
movsb
mov
pop
scas
mov
adc
or
mov
sti
mov
xchg
movsl
pop
cwtl
add
pop
fstpl
mov
shlb
cmpb
or
pop
sub
cmp
aaa
gs
je
mov
and
cwtl
fistpl
jno
jg
fistl
dec
imull
inc
xchg
inc
or
ljmp
dec
ljmp
jl
int
addb
mov
jo
loop
xlat
outsl
mov
out
jmp
loope
insb
xor
mov
jmp
jne
movsb
cmp
xchg
stos
cli
fmull
lods
sub
or
ljmp
enter
and
jae
shlb
out
mov
xor
dec
les
mov
daa
mov
test
mov
push
fiaddl
sbb
ja
xchg
orb
push
mov
std
mov
in
cmpsl
mov
jnp
sub
andnps
stos
nop
jne
insl
cmp
cld
ja
sahf
les
rorl
aad
mov
rcll
and
mov
sarl
sub
cltd
and
fdivl
mov
fstps
leave
sub
mov
push
sbb
or
sub
adc
inc
jne
arpl
ss
test
push
insl
adc
out
mov
fists
ss
dec
stc
insb
cwtl
enter
mov
mov
or
leave
in
repz
bound
or
mov
mov
xchg
jb
adc
add
add
inc
sub
adc
bound
add
lods
jmp
pop
roll
lods
shlb
jns
movsb
in
jns
push
xchg
xchg
bound
mov
lret
add
xor
fidivl
add
mov
cs
xlat
or
adc
mov
or
cmp
outsl
and
fsub
filds
and
clc
mov
push
add
xor
out
lds
and
dec
mov
lret
in
int
sub
inc
mov
nop
pop
clc
adc
clc
adc
xchg
fsubrp
test
inc
xor
out
xor
jb
push
test
push
lret
js
and
jecxz
in
lret
stc
and
aam
inc
cmpsl
ret
sub
mov
pushl
jle
add
insl
cmpsl
fld
inc
lcall
cmp
sub
inc
scas
push
cmp
mov
dec
aam
push
add
sbbb
sbb
rcrb
int
cmp
sbb
imul
shlb
loop
xchg
xor
mov
cmpsl
inc
adc
add
in
in
push
sahf
pop
aam
mov
stos
jle
sarb
rcr
fcoml
lret
out
int
das
inc
in
mov
jbe
inc
xor
loopne
xor
fiadds
insb
push
bound
sbb
stc
or
jp
jnp
rep
cld
pop
clc
in
pop
push
test
adc
jp
xor
subb
fsubrs
push
mov
inc
pop
jbe
js
mull
ljmp
inc
in
call
arpl
jecxz
rep
add
addr16
ret
les
sub
clc
imul
shll
call
sbb
or
repz
mov
js
fucom
and
gs
inc
imul
movsl
mov
mov
testb
xchg
adc
pop
sub
movsb
mov
inc
lds
mov
xor
arpl
pmaxsw
js
negl
sbb
pop
pop
sub
adc
jns
cwtl
mov
sbb
pop
dec
add
xchg
scas
mov
scas
xor
mov
mov
inc
xor
jae
push
xchg
mov
imul
fdivs
sbb
in
lcall
mov
xchg
das
dec
cmc
cmc
xor
inc
or
hlt
inc
inc
cmc
mov
add
test
in
outsb
inc
or
std
push
enter
jge
je
xchg
inc
add
xor
ja
clc
mov
cmpsb
push
lahf
scas
push
clc
dec
add
sarb
call
outsb
inc
pop
inc
xchg
xchg
subl
mov
sbb
adc
pop
xor
cmp
jns
test
lret
cmp
mov
cmc
jmp
xchg
push
dec
sti
ljmp
sbb
mov
sbb
jae
lods
mov
mov
xchg
mov
sbb
xor
mov
mov
leave
les
mov
push
movsb
ficoms
inc
add
xor
pop
xor
jb
sbb
ljmp
push
pop
ret
add
jp
pop
in
int3
mov
insb
stc
in
imul
lods
xor
flds
sbb
sub
outsl
add
or
data16
or
cmc
jbe
xor
push
pop
pop
mov
mov
pop
mov
sti
fnstenv
inc
xor
leave
xor
into
ja
push
js
or
dec
mov
mov
pop
fldenv
mov
ljmp
xor
loope
insb
mov
mov
fdivr
jp
cmp
rcrl
imulb
sar
push
dec
add
ljmp
xor
in
xchg
xor
cld
fistl
stos
mov
add
dec
pop
add
aad
ja
pop
inc
sub
lret
into
mov
add
cmp
inc
cwtl
test
hlt
clc
jmp
fidivrl
and
cmp
dec
push
imul
mov
xor
sub
add
sub
imul
sub
out
shufps
nop
nop
inc
imul
sti
jnp
das
nop
mov
dec
les
xor
xlat
in
outsb
cwtl
aam
inc
pop
jb
sbb
cmpsb
mov
rolb
ficoml
rorl
loopne
pop
lods
pusha
sbb
pop
ret
xor
stos
mov
xchg
and
popa
js
mov
in
cmp
aam
clc
outsl
add
in
inc
pop
adc
stos
rcll
mov
lahf
pop
sbb
pop
jge
cli
dec
std
leave
ds
adc
nop
stc
pop
mov
dec
ficomps
mov
dec
push
das
pop
ja
icebp
ficompl
movsl
add
push
sbb
or
push
stc
sub
negl
xchg
int3
fwait
push
push
fcompl
jge
jnp
ret
or
mov
push
hlt
sbb
mov
aas
dec
mov
pop
push
jb
mov
lods
push
mov
push
out
loop
imul
jl
mov
xchg
jge
in
sbb
mov
fsubs
mov
les
psubd
xor
aam
rolb
mov
sbb
int3
xor
add
das
inc
sub
sbb
push
jle,pt
mov
xchg
stc
xor
aas
aad
push
aad
imul
push
inc
test
mov
and
stos
enter
inc
xchg
movsl
dec
lret
mov
shlb
mov
sbb
repnz
das
testl
push
aad
mov
ljmp
and
pushf
outsl
sbb
inc
fwait
iret
rcr
and
imul
xchg
gs
cmpsl
xchg
les
in
mov
sub
jne
int3
ja
stc
or
int3
stos
add
sub
push
fdivrs
sbb
push
mov
insl
and
mov
bsf
out
mov
mov
clc
mov
pushf
scas
xor
js
mov
fwait
adc
jg
or
adc
idivl
push
lods
pop
imul
lret
fwait
test
in
pop
lea
jmp
add
inc
mov
or
mov
xor
pusha
sbb
in
fs
pop
push
test
push
je
movsb
sti
imul
xor
stos
or
or
add
sub
dec
cmp
lcall
sub
out
push
adc
inc
shrb
movl
mov
icebp
out
hlt
jmp
and
in
imull
mov
mov
test
les
out
enter
int
mov
cmp
mov
in
xchg
cmpsl
popa
pushf
pop
push
mov
add
sub
xor
pop
jecxz
std
mov
adc
das
dec
aaa
push
pop
mov
mov
cmp
mov
lods
add
out
dec
nop
mov
jbe
xchg
or
cmp
mov
rorl
mov
call
and
test
lret
lahf
je
in
mov
dec
dec
icebp
jp
dec
adc
popl
cmp
sub
jns
jp
imul
sub
mov
mov
dec
pop
sub
inc
mov
ffreep
push
jne
xchg
pop
pushf
outsb
mov
jecxz
pop
push
repnz
inc
sub
jnp
aas
fists
fldcw
out
fs
xor
hlt
mov
mov
scas
push
mov
fs
outsb
daa
xchg
mov
test
xchg
jg
mov
sub
inc
inc
fwait
negl
xor
mov
mov
mov
inc
add
arpl
mov
mov
out
push
xor
fbstp
mov
and
insl
in
pop
sub
xchg
sar
sub
aas
fcompl
dec
scas
dec
or
lods
and
or
lret
pop
or
test
sti
rolb
dec
fcmovbe
hlt
cmpsb
dec
fadds
mov
pop
push
xchg
or
dec
icebp
lahf
loop
sub
in
aad
aad
dec
jo
fidivrs
and
lea
dec
mov
xchg
fidivl
push
sbbb
mov
xor
add
dec
gs
lods
cmpsb
pushf
xchg
sbb
dec
out
icebp
adc
sti
es
dec
call
in
add
push
cmc
mov
mov
lahf
loope
jl
pop
outsl
enter
lret
pop
jl
inc
push
popf
sahf
and
or
out
pop
ret
and
cld
xchg
loope
cwtl
mov
dec
cmp
test
sbb
add
pushf
lea
cmp
and
mov
lret
lret
out
aas
adc
xor
bt
xor
adc
mov
sub
pop
int
das
and
ficoms
insb
ret
mov
aas
ret
test
cmp
or
inc
xchg
adc
nop
test
jg
cmp
jb
stos
aad
mov
sbb
inc
lea
test
icebp
ss
adc
jle
add
mov
adc
jne
je
into
or
lock
push
sahf
mov
hlt
shl
pop
and
ljmp
sub
add
and
mov
gs
push
jnp
mov
mov
mov
dec
dec
adc
aad
jl
lods
dec
cmpsb
lahf
xchg
es
aad
sbb
ljmp
int
cwtl
sbb
cmpsb
js
add
inc
fisttpll
jle,pn
out
sbb
les
shrb
mov
fdivrs
popf
xor
and
or
inc
jno
sbb
call
movsl
mov
imul
lcall
std
push
adc
addr16
adc
mov
jmp
xor
movsl
push
xchg
cltd
xchg
int
pop
sbb
and
lcall
addb
push
inc
gs
popa
lret
mov
fstl
popa
dec
adc
in
push
in
jmp
loope
iret
mov
scas
stc
loopne
xchg
pop
popf
arpl
push
cmp
dec
xchg
push
mov
test
pop
or
nop
mov
jl
sti
nop
dec
and
inc
insl
inc
scas
lea
jae
lds
xor
insb
sub
xchg
hlt
xor
push
enter
into
rcll
pop
push
xchg
mov
sub
mov
sbb
shlb
fcomp
leave
mov
lea
push
adc
cmp
and
or
ficoml
xor
sti
dec
or
cli
push
inc
lahf
iret
sub
loope
dec
jb
and
push
push
cmpsl
das
and
xchg
xchg
cmpsb
jns
sub
xchg
outsb
inc
and
jo
ss
sub
mov
dec
in
mov
mov
dec
pop
adc
les
mov
mov
sbb
in
in
cmp
or
inc
jnp
jecxz
pop
xchg
fs
fs
inc
test
js
lods
iret
xor
adc
and
fs
mov
aaa
add
fwait
cmc
notl
jmp
xchg
mov
int
sbb
mov
nop
es
inc
adc
les
ret
dec
pusha
add
push
roll
mov
roll
mov
xchg
jmp
scas
mov
bound
sahf
repz
or
xor
out
lret
lcall
xchg
in
push
inc
lret
insb
fwait
sub
loope
mov
mov
xor
in
addr16
adc
dec
jge
adc
xor
mov
fstps
jo
test
mov
in
stc
lods
fistpll
je
std
sbb
popa
mov
xchg
jl
sbb
fsubrl
mov
mov
dec
enter
mov
mov
xchg
jb
popa
ja
push
mov
xchg
inc
in
fbld
sub
pop
das
or
mov
cld
es
ret
inc
pop
ret
xchg
xchg
mov
orb
mov
mov
and
call
fildl
mov
subb
fidivrl
mov
and
push
sub
xor
push
adc
add
je
int
into
bound
cmp
pop
std
cld
cmp
ret
jae
jnp
iret
sarl
push
loope
aaa
pop
or
jecxz
loopne
pop
mov
nop
std
sub
jg
into
pop
data16
lods
jg
xchg
jb
movsb
sbb
inc
pop
fistl
subl
mov
repz
jmp
sahf
dec
or
push
or
movsb
jbe
imul
int
mov
test
push
pop
push
out
or
cmp
cmp
mov
les
std
sahf
jmp
xchg
gs
inc
xchg
negl
test
sbb
adc
lahf
ret
pop
mov
out
insl
jp
inc
ds
dec
add
cli
mov
fisubrs
mov
inc
xlat
mov
loop
add
dec
stos
jmp
cmpsb
xor
std
mov
leave
pop
hlt
dec
mov
ror
and
or
cmpsb
arpl
aaa
pusha
call
stos
iret
fistps
insl
in
xchg
xor
or
pop
div
add
repz
or
icebp
jae
movsb
inc
push
add
jle
leave
mov
xor
dec
xorb
adc
popf
outsl
mov
sub
mov
mov
inc
pop
flds
repnz
stos
push
cmp
mull
scas
cli
jne
dec
push
inc
or
xchg
or
xor
xchg
dec
dec
out
rcrb
push
jnp
push
pop
call
repz
push
or
pop
cltd
or
dec
push
pop
mov
test
mov
push
mov
adc
inc
or
mov
cmp
test
aam
stc
sahf
leave
addr16
jne
xor
ljmp
pushl
xchg
test
sub
leave
fsubs
clc
leave
pop
lods
dec
jecxz
test
outsb
xchg
sbb
aam
mov
out
imul
pushf
add
outsl
sahf
pop
icebp
stc
and
addr16
mov
loope
popa
push
iret
shll
js
aad
js
mull
mov
mov
out
jmp
inc
cmp
adc
cmp
sbb
lds
fistpl
gs
clc
shl
cmp
int
sub
fwait
arpl
loopne
imul
pop
dec
adc
fwait
stos
enter
xor
in
or
in
test
xor
insl
fnsave
subb
stc
hlt
hlt
icebp
push
insb
add
jge
bound
ss
cmp
pushf
mov
push
pop
adc
mov
pop
dec
bound
fildl
int3
es
adc
popf
push
bound
jmp
xchg
out
jge
xor
test
add
adc
jnp
out
iret
cmp
pop
cmc
and
xchg
pop
int3
lods
and
or
cmp
mov
add
jmp
loop
test
pop
push
adc
mov
mov
scas
mov
aam
cltd
pop
jae
xchg
popf
dec
adc
in
loopne
and
jb
jae
lods
or
popf
sub
subl
stc
imul
andb
aas
and
fistpl
roll
dec
sub
les
xchg
dec
lds
mov
lret
pop
cmovno
loopne
nop
std
add
push
jno
rcr
adc
xlat
or
adc
jmp
xchg
mov
iret
out
pop
movsb
inc
fiadds
xor
dec
mov
mov
fistl
out
mov
xchg
and
sbb
scas
xchg
xor
push
ja
pop
pop
cmp
cmpsb
push
mov
push
sub
movsl
int3
dec
leave
mov
sti
into
jl
dec
xchg
jge
dec
dec
fwait
mov
cmp
scas
rorb
movsl
inc
ret
push
movsb
push
fisttps
mov
cltd
lret
xchg
pop
xor
popl
and
inc
icebp
leave
mov
xchg
or
rcll
cltd
cmpsb
xor
repz
jne
add
ror
mov
jb
test
mov
inc
cwtl
js
sbb
incb
jne
sbbb
cmp
add
sarl
lea
push
dec
add
in
pop
xor
stos
mov
testb
in
lret
cmp
xchg
mov
hlt
adc
shll
push
aad
loope
jp
aad
mov
mov
popf
or
mov
dec
push
sbb
test
inc
in
jbe
mov
cmp
cli
aam
idivb
cmpsl
jnp
and
leave
fistl
test
mov
sti
or
ret
nop
mov
sbb
fisttpll
inc
adc
xchg
pusha
iret
das
ljmp
xor
mov
mov
cmc
mov
add
lret
sarb
jne
jp
test
dec
mov
mov
out
or
cmpsl
push
std
lret
jae
std
je
mov
and
push
jbe
mov
dec
fwait
inc
xchg
enter
fdivl
push
sbb
jecxz
sahf
sub
pop
sbb
hlt
push
adcl
into
movb
inc
insl
test
mov
mov
push
out
mov
fsts
sub
jge
mov
insb
push
std
icebp
mov
aas
daa
cs
mov
inc
mov
ds
xchg
or
pop
and
sub
mov
outsb
arpl
test
fbld
adc
mov
xchg
out
js
and
push
fimuls
scas
mov
jp
sbb
mov
pop
int3
jo
push
loope
and
inc
mov
pop
push
xor
inc
cltd
adc
int
lods
stc
loop
add
rcrl
in
mov
xor
push
stos
nop
into
xor
jnp
sbb
jmp
fisttpl
loopne
mov
mov
dec
out
andb
sbb
mov
lea
sub
cli
push
mov
jmp
scas
pop
push
jb
stc
imul
out
push
aam
jecxz
sub
mov
add
xor
push
sub
pusha
push
fcompl
or
push
mov
add
sub
push
add
mov
adc
mov
js
cmp
test
cs
loope
cmpsb
jg
bound
sbb
push
and
aam
pop
xchg
js
jo
lock
scas
cwtl
add
in
sub
test
sub
call
nop
idivb
or
adc
andl
mov
mov
push
and
sbb
and
mov
or
mov
int
pusha
leave
jno
xchg
mov
movsb
sarl
jge
frstor
cmp
mov
arpl
sub
xchg
dec
cs
leave
and
divl
lret
into
dec
inc
icebp
push
xchg
mov
insb
push
adc
out
adc
jnp
sahf
rcll
je
pop
insl
add
out
cltd
fldcw
sub
adc
add
jbe
jl
mov
insl
les
mov
cmp
popl
out
mov
lret
cmp
push
and
out
imul
sub
sbb
xchg
mov
arpl
ret
adc
xchg
sbbb
cmpsl
inc
cmpb
lods
mov
out
fmuls
push
sub
xchg
push
sarl
xchg
pushf
add
xor
xor
test
cmp
sub
mov
aad
shll
mov
and
scas
shrb
lcall
mov
mov
mov
ror
cmp
notl
xchg
xchg
cmp
aam
cld
repnz
xchg
filds
jp
mov
movl
scas
into
js
mov
pushf
jg
mov
mov
mov
lret
adc
add
cli
or
ljmp
jnp
adc
adc
hlt
and
mov
mov
out
cmp
mov
cmpsb
add
ljmp
lret
push
mov
in
pop
lods
inc
les
cltd
mov
sahf
mov
or
sub
jns
cld
sbb
ret
adc
push
das
jl
cwtl
lret
in
sbb
insl
xchg
sub
movzbl
cld
cmpsb
andl
insl
mov
cld
jno
stc
mov
cmp
adc
aas
out
pop
dec
jo
push
inc
leave
inc
jne
sbb
movsb
rclb
in
in
popf
pop
mov
sbbl
sub
sub
cmp
mov
sbb
cmp
mov
call
push
xchg
fwait
jp
xchg
in
and
add
jl
dec
movsl
aaa
sub
pop
std
inc
sub
xor
xor
popl
pop
data16
lods
push
outsb
mov
jecxz
jns
clc
aad
add
mov
dec
addr16
mov
sti
push
out
cmovb
pop
push
enter
mov
cmc
sbb
dec
push
or
jmp
outsl
rcll
int3
inc
roll
outsb
mov
stos
mov
adc
int
sbb
testb
dec
gs
or
cmp
aam
out
int3
inc
pop
mov
or
dec
inc
pop
enter
popa
push
add
stc
mov
fcmovu
cli
fwait
xchg
aad
je
pusha
out
xchg
inc
dec
dec
gs
cmp
movsb
test
sbb
loopne
and
push
lea
insl
iret
lods
fwait
or
adc
loop
push
adc
jmp
out
sbb
add
or
leave
xlat
sti
mov
es
pop
jmp
lret
test
pop
jecxz
pushf
gs
mov
addr16
outsb
shll
jmp
loop
push
add
push
scas
xchg
pusha
mov
out
stos
inc
mov
aas
mul
ror
fs
stos
test
rcll
lret
dec
popl
andl
xchg
fwait
dec
ja
clc
sub
mov
mov
adcb
or
xchg
dec
lods
pop
scas
movl
popa
inc
inc
testb
stc
jbe
scas
or
pushf
roll
push
mov
push
shlb
jne
cmp
mov
add
push
movsl
xor
data16
pop
fs
xchg
test
xor
push
imul
mov
rcrb
fwait
cmpl
inc
mov
fists
sbb
in
jns
rolb
push
sahf
outsl
gs
mov
in
repz
mov
xorb
add
shll
sub
fs
adc
stos
fnstsw
rorl
pop
pop
or
jmp
test
mov
mov
inc
sub
int3
pop
xor
imul
stos
outsb
out
stos
jae
sbb
mov
int3
and
cmp
jns
or
push
in
push
cmpsb
inc
xchg
push
or
or
mov
sbb
jns
scas
lahf
sahf
in
cmpsb
xor
in
fisubrs
xorl
inc
nop
stc
imul
repnz
bound
and
jl
sbb
lods
imul
lds
dec
and
add
fdiv
outsl
fmul
inc
sub
jb
jne
repz
sbb
stc
cmp
adc
dec
addr16
iret
add
xchg
andb
incb
call
mov
ja
adc
dec
loopne
or
dec
pusha
cmp
in
pop
mov
cs
lea
jecxz
push
inc
and
xchg
int3
in
inc
push
pop
cmp
inc
cmpsl
push
inc
lds
enter
pop
lock
push
push
mov
mov
fidivrl
push
jae
dec
or
cmpsb
cli
mov
out
ret
adc
mov
mov
in
pop
cmc
pop
iret
ret
icebp
lods
mov
test
mov
sbb
mov
and
dec
lock
fsubrs
and
test
add
xchg
pop
dec
mov
call
and
add
test
adc
jb
mov
xorl
pop
inc
push
sub
cs
shlb
jbe
jne
ds
outsb
push
jmp
lock
je
pop
sbb
out
jp
sbb
mov
aam
nopl
xchg
dec
movsl
cmp
hlt
scas
in
mov
mov
xchg
out
xchg
les
push
mov
dec
mov
mov
lret
jecxz
andb
mov
lea
rcrb
subb
lods
fcomps
push
add
xchg
dec
mov
aas
push
lods
sbb
shrb
repnz
mov
cli
nop
in
and
mov
mov
xor
jnp
xadd
mov
or
filds
outsl
cmp
add
outsb
imul
lahf
jmp
xor
or
sbb
pushf
pop
icebp
insl
ljmp
sub
cmp
ds
fisubl
lahf
sub
push
xchg
lcall
mov
ljmp
js
ds
clc
lock
out
fldenv
insb
or
data16
ficoml
icebp
mov
or
inc
out
insb
sbb
aad
ss
loop
mov
mov
sahf
pusha
and
cs
dec
and
pop
cld
jno
lret
push
stos
bound
adc
out
int3
fnstenv
ja
mov
inc
cmp
xor
fsubrs
ljmp
lods
xchg
dec
mov
mov
xor
mov
jns
insb
dec
rclb
mov
faddl
dec
test
fwait
mov
push
sti
dec
xchg
or
mov
ja
aad
and
ljmp
add
rcl
aam
mov
cmp
cli
sti
mov
test
cmp
xchg
out
loopne
pop
cs
insl
and
cmp
mov
dec
sbb
dec
mov
sub
xorl
or
cmp
jae
sbb
arpl
adc
push
push
add
mov
hlt
push
das
lods
out
xor
daa
std
in
sub
and
jnp
and
add
aas
pop
data16
jne
in
adc
dec
cmp
push
mov
bnd
xchg
out
push
add
out
adc
adc
jno
jecxz
fstpl
sub
iret
xor
push
cmc
jecxz
ss
lret
je
add
xchg
xchg
pop
cld
lods
inc
scas
ja
sbb
xchg
add
fiaddl
inc
mov
and
pusha
xchg
pop
jb
cmp
xor
inc
mov
movsb
pop
leave
cmp
cmp
and
jb
jb
das
adc
and
imul
cmp
out
jns
loope
jnp
jecxz,pn
pop
cmp
sbb
mov
xchg
ret
xchg
out
clc
bound
jno
jle
icebp
ja
inc
inc
roll
xchg
jmp
dec
test
cmpsb
dec
sbb
or
aad
mov
je
lcall
or
cli
aas
and
push
add
cmp
sub
mov
repz
sbb
enter
xchg
test
mov
ret
lods
adc
push
hlt
add
outsl
and
adc
inc
xor
loopne
cmpsb
pop
xor
shrl
and
jge
mov
lds
arpl
int3
or
int
das
xchg
mov
movsb
jmp
out
ja
stos
insl
inc
fstpl
stos
fdivrs
sub
jp
mov
ss
lds
jne
lds
cmp
mov
fcomp
dec
roll
mov
lock
icebp
sub
xchg
stc
std
jmp
lods
adc
cmp
mov
fnstenv
inc
jb
daa
call
push
repz
sub
fnstenv
jl
daa
cli
icebp
sub
repz
pop
or
mov
jmp
jl
icebp
andb
mov
dec
mov
lods
mov
stos
push
popa
jg
jbe
fwait
cmp
jle
xlat
xor
sbb
popf
repz
or
add
push
jno
mov
ficomps
fstpl
and
mov
inc
and
sub
and
xchg
push
jle
jns
push
pop
xor
jb
cli
std
cmpsb
jge
sbb
mov
jmp
mov
shr
add
bound
fsts
pop
adc
inc
cmp
popf
jae
std
jge
mov
add
dec
or
jbe
imul
mov
cld
cmpb
aam
fs
sbb
ss
sub
cmpsb
fstpt
mov
fisubrs
in
in
lods
sbb
adc
mov
iret
fadds
int
lds
inc
lret
sbb
pop
adc
adc
or
mov
dec
out
mov
lahf
cli
mov
sub
lds
insl
enter
or
sahf
xchg
jnp
xlat
cld
mov
ds
jae
test
jne
rclb
cmpl
stos
bound
or
sarb
sbb
cwtl
fsubrp
clc
sbb
call
mov
loopne
movsb
mov
aad
pop
gs
jnp
or
int3
scas
cmp
jbe
xor
cmp
icebp
xor
jne
bound
xor
cmp
cs
or
imul
dec
and
bound
sub
out
mov
in
cmp
push
cs
in
outsl
pop
test
pop
or
adc
mov
cmpsl
and
push
lret
int
pop
lret
mov
cmp
ret
pop
dec
in
out
sbb
jb
sub
jl
in
int
aam
stos
jle
popf
sbb
adc
nop
xchg
adc
aas
add
cmp
xchg
mov
add
sbb
orl
daa
loop
lea
insb
pop
hlt
cmp
xchg
test
add
dec
ret
std
jnp
movsb
sti
out
adc
xchg
xchg
and
sbb
or
in
scas
outsb
sub
fidivl
pop
movsl
fistps
cmpsb
add
cmpl
xor
xor
adc
popf
fidivl
jecxz
ds
imul
psubq
ljmp
inc
mov
clc
cwtl
xchg
mov
sub
in
pop
sub
dec
addr16
cmpsb
bound
cmp
adc
mov
loop
repz
push
jne
mov
mov
sub
cmp
push
stos
lret
xor
adc
push
leave
xor
in
mov
add
clc
shlb
mov
xor
push
jg
and
inc
ret
mov
stc
add
mov
rorl
xchg
jle
mov
rclb
divl
pop
movsl
pop
movl
shll
and
mov
push
lret
sti
rorb
jge
ss
mov
adc
loope
pop
aas
scas
inc
jo
pop
mov
pop
out
and
inc
lcall
push
in
and
pushf
dec
mov
jmp
push
xor
or
add
push
out
push
push
icebp
mov
cmpsb
movsl
xchg
inc
or
loope
data16
daa
or
jl
fnstsw
mov
dec
cmp
fs
fbld
sahf
cmc
inc
cmp
imul
dec
in
dec
movsl
scas
decl
js
test
mov
sti
jmp
loopne
aas
shlb
iret
push
mov
in
mov
pop
push
loope
and
inc
mov
push
repnz
lock
jne
sub
iret
shl
js
mov
inc
add
or
mov
sbb
xchg
xchg
mov
sub
mov
cltd
push
fsubrl
mov
mov
cwtl
dec
cmp
add
imul
push
sbb
dec
inc
mov
fsubs
ret
movsb
or
adc
std
js
adc
push
dec
stos
add
mov
inc
pusha
into
mov
push
mov
rclb
loopne
int3
push
jnp
lods
arpl
pop
in
test
jne
dec
cmp
int3
lcall
aad
outsl
mov
mov
jbe
lahf
pushf
jns
inc
into
dec
ljmp
and
and
mov
push
addr16
push
dec
nop
leave
push
test
mov
insl
fisttpl
aas
loop
mov
int
sbb
repnz
pop
or
mov
imul
aaa
aas
adc
out
jbe
mov
test
pushf
add
mov
xchg
je
push
xchg
js
push
mov
or
pop
xor
cltd
out
add
in
pop
jno
inc
push
sub
sub
shlb
jl
icebp
and
cmpsb
sub
shl
mov
loopne
lret
pop
push
xor
and
cli
cmp
fwait
jl
test
ffreep
inc
call
mov
in
dec
dec
adc
and
stos
cmp
pop
cmpsb
lods
sub
cmp
dec
mov
lcall
stos
ljmp
mov
ror
and
lods
dec
jae
mov
or
cmp
xchg
or
adc
mov
pop
hlt
call
sbb
ljmp
test
lret
mov
cltd
iret
aas
stc
sub
fsubl
push
out
cmp
loop
or
test
jbe
arpl
and
sub
add
pop
inc
jb
call
adc
jne
out
add
fildl
and
outsb
dec
out
push
push
or
ret
xchg
mov
or
adc
dec
repz
pop
jnp
fxch
ljmp
outsl
inc
sti
lods
idivl
test
loop
pop
and
jno
std
sbb
outsl
fbstp
sbb
roll
fisubrl
add
cmp
dec
es
adcb
jb
mov
xor
fwait
bound
aaa
cmp
stos
mov
or
lds
aaa
aaa
mov
push
xchg
push
lret
movl
xchg
in
inc
fbld
and
enter
push
push
cmpsb
stos
std
mov
aam
divb
cmpsl
shll
xor
int
jmp
inc
and
shlb
movzbl
test
shrb
ret
bound
jb
fs
imul
lock
out
push
jle
jge
mov
xor
loope
mov
jl
mov
das
lret
cmp
adc
test
inc
sbb
add
and
rcll
outsl
arpl
movsb
popa
or
movsl
out
and
aad
sbbb
movsl
add
fldcw
test
pop
call
movsl
testl
mov
lcall
in
sub
ja
nop
insl
adc
int
fstpt
mov
mov
addb
imul
mov
mov
xchg
mov
sub
cmp
xor
xchg
add
pop
pop
adc
cmp
cli
cmp
pop
fldl
inc
xchg
scas
jmp
sbb
push
pushf
mov
sahf
xor
popf
sub
xor
sbb
xor
fwait
sub
mov
lods
jmp
mov
outsl
fwait
or
mov
or
jne
mov
repz
decl
ficoms
dec
and
fdivr
outsl
and
inc
lcall
add
sub
jl
pop
jl
out
jbe
call
pop
fistps
dec
enter
and
inc
flds
jae
push
imul
fwait
push
xor
xlat
inc
add
xchg
push
pop
imul
adcl
xchg
clc
lret
mov
or
rcl
lahf
mov
adc
push
lret
lcall
out
rcl
vmread
cmpsl
or
test
xor
test
sbb
cli
adc
in
mov
nop
pop
add
fdivrs
int3
sub
fistpll
inc
push
inc
xor
sub
mov
push
test
test
dec
push
pop
fidivrs
mov
jmp
push
mov
pop
cmp
pop
scas
xchg
jbe
mov
push
and
push
add
push
xchg
fistl
cmp
adc
in
sub
sbb
inc
sub
mov
lea
push
pusha
push
cmp
lcall
imul
pop
xchg
movsl
mov
aam
movsl
js
push
lcall
or
xchg
scas
por
movsb
fwait
iret
sbb
jmp
xchg
adc
popf
pop
insl
fucomi
aad
adc
fiaddl
popf
xor
sub
or
and
repnz
test
in
sbb
mov
dec
lods
insb
push
enter
xor
out
in
enter
nop
and
stos
mov
push
cmc
imul
sbb
ljmp
xor
call
adc
and
rclb
xor
hlt
lea
loope
dec
je
imulb
leave
jp
push
cmpsl
push
call
in
inc
push
mov
popa
repz
xchg
xchg
nop
movsb
movsb
je
in
xor
push
xchg
jbe
aaa
inc
cld
in
push
aam
lock
cli
adc
xchg
or
sbb
sbb
data16
xchg
sahf
jmp
xor
mov
leave
push
sub
imul
scas
inc
xor
mov
in
add
daa
add
stos
push
and
imul
mov
fstpt
std
mov
xor
arpl
jmp
cmc
fmul
gs
xchg
mov
out
lret
out
mov
add
pop
test
repnz
push
stc
push
xchg
pop
out
popf
out
call
lea
out
stos
and
or
cld
lcall
cmpsb
lods
and
sbbl
xchg
sub
adc
push
add
push
lret
jl
sbb
int3
mov
icebp
lods
arpl
cmp
fs
das
cwtl
push
mov
scas
imul
popa
je
push
jge
fistpl
ret
outsl
jecxz
push
int
imul
sbb
in
rcrb
pop
and
mov
scas
mov
test
out
pop
stos
mov
lahf
call
xlat
jle
insb
adc
xor
mov
jge
mov
adc
jmp
inc
or
inc
sbb
scas
cmp
jge
push
lock
jbe
aad
shr
sbb
cmp
cmp
addb
pop
pop
ficompl
mov
dec
adc
push
shlb
xlat
loope
xor
xchg
sub
jae
pushf
push
mov
fcompl
orl
daa
subl
outsl
cwtl
push
movsb
inc
mov
in
sub
nop
mov
fldt
shr
andl
xor
pusha
xchg
inc
dec
jl
shrb
jnp
cld
stc
or
les
jo
cmp
inc
cmp
push
in
int3
ret
sbb
fcom
push
in
or
xchg
out
xor
pop
push
repz
xchg
cmc
push
cs
push
pop
mov
stos
fimuls
and
test
mov
data16
adc
out
sub
out
jno
shlb
sarl
gs
xchg
add
test
fldl
shrl
inc
aam
and
iret
add
or
sub
popf
shll
push
adc
mov
ljmp
xor
loope
gs
mov
or
jl
cli
adc
xor
outsl
mov
inc
push
xor
adc
into
xchg
out
jge
cmpsb
sub
mov
fmuls
rcll
std
jbe
loopne
adc
arpl
decl
mov
cmc
mov
sub
lods
push
jo
in
movsb
jp
std
cld
or
call
das
fucomi
and
pop
nop
cmpsl
movsl
sub
xor
stc
cmp
sbb
pop
inc
and
sub
mov
xchg
or
dec
lcall
in
inc
dec
int3
push
add
fwait
cmpl
fmull
sbb
popa
shlw
inc
mov
jge
shll
jl
push
ror
pop
sub
aam
xchg
add
mov
cmp
dec
and
stos
out
sbbw
loop
cmp
pop
add
pop
mov
test
pop
sub
mov
sub
and
push
imul
sbb
cmpsl
push
xchg
das
add
arpl
xchg
sbb
and
xchg
adc
repz
movsb
hlt
adc
fdivl
stos
inc
cmp
mov
xchg
push
ss
scas
xor
jns
cmp
xor
mov
pushf
das
inc
pop
loopne
mov
sub
lock
mov
jle
ss
add
add
jp
inc
mov
inc
mov
cmp
enter
push
out
push
mov
mov
jo
int3
cmp
sti
inc
gs
cld
loop
sbb
xorb
les
xchg
add
mov
xchg
pop
insl
xchg
icebp
es
pusha
int3
cltd
add
push
adc
sbb
xchg
into
jl
insb
xor
jl
xchg
mov
mov
pop
filds
pop
add
outsl
adc
cmpsl
mov
pushf
and
cmpb
dec
arpl
repnz
outsb
daa
cmpl
mov
push
or
ret
mov
pop
push
push
aaa
mov
rcrb
scas
pop
xor
xchg
sahf
xor
add
jns
mov
mov
fucomp
arpl
push
andl
jp
inc
push
lods
fmul
and
xlat
mov
pop
adc
sarb
cld
fildl
sbbl
sti
mov
jmp
dec
enter
mov
xchg
pop
sbb
insb
jno
imul
repz
dec
add
mov
int3
sbb
xchg
pop
xor
add
stos
push
repnz
and
or
or
paddq
jp
lds
out
pop
jbe
push
pop
int3
cmp
outsb
pop
and
adc
jecxz
mov
aam
xor
loopne
xchg
xor
movsl
adcb
stos
movsb
mov
int
pop
sub
stc
adc
in
mov
aam
mov
mov
sbb
shl
pop
xor
stc
divl
push
mov
sti
imul
shrl
cmc
mov
xchg
push
push
fidivrs
pop
mov
testb
imul
loop
andl
es
or
sar
ja
lods
jge
mov
sbb
push
sub
xchg
xchg
cli
cmp
std
and
lea
js
adc
sub
mov
pop
cmp
dec
xchg
jns
xchg
mov
int
push
call
dec
xor
sub
inc
cmpsb
dec
mov
xor
scas
jnp
xor
imul
sbb
movsl
lcall
mov
xchg
subl
pop
fdivrp
cmp
jle
cmp
leave
push
pop
jp
sub
dec
lahf
xchg
mov
or
mov
mov
mov
inc
cmpsb
in
nop
pop
mov
movb
xchg
hlt
add
nop
jo
jns
mov
xor
adc
sub
mov
jo
pop
leave
dec
mov
jge
xor
cmp
ss
push
inc
mov
arpl
xchg
jge
inc
and
pop
mov
push
jp
pushf
cmp
scas
paddsw
lahf
das
dec
or
pop
jo
push
dec
cmpsl
mov
ror
stc
mov
add
cwtl
test
ljmp
mov
or
xchg
push
imul
es
in
repnz
out
or
ret
xchg
mov
pusha
sub
call
mov
call
add
outsb
dec
or
xor
pop
rorb
or
roll
fidivrl
imul
daa
or
in
adc
insb
mov
hlt
mov
repnz
pop
mov
rcrb
mov
imul
int3
dec
inc
enter
cmp
inc
loop
adc
fdivs
fcomi
sub
in
fsts
test
loopne
int3
aam
in
scas
fcompl
clc
sbb
leave
sti
outsl
shrb
inc
sbb
jbe
dec
in
pop
sbb
pop
ljmp
sub
rcll
iret
ds
ror
push
lcall
push
insb
mov
cmc
dec
fistps
cltd
lods
or
pop
std
dec
imul
dec
fistpl
test
push
out
jecxz
mov
push
inc
jp
add
out
pop
les
jo
cmp
cmp
in
stos
orb
gs
int
mov
sbb
mov
pusha
mov
jmp
out
testl
mov
lods
ss
mov
sbbb
fisttpll
lods
mov
cmpsb
inc
sbbb
dec
clc
mov
es
sub
imul
leave
xchg
dec
xor
or
pop
pop
addr16
dec
jbe
enter
jl
xchg
rorl
arpl
mov
iret
int
dec
mov
cli
xchg
je
jb
cmp
ss
jge
push
insb
jl
xchg
sub
dec
mov
sahf
mov
jle
pushf
sub
jno
mov
mov
aaa
lods
addr16
mov
adc
in
sbb
mov
xchg
pushl
adc
pop
xchg
mov
lods
xor
push
mov
outsl
out
xchg
test
sub
push
cmp
add
xor
pop
mov
adc
cmpsl
arpl
add
iret
push
push
xchg
sub
sbb
mov
xchg
fldl
add
xor
fisubrs
cli
inc
xchg
or
nop
cli
cmp
push
sub
ds
outsb
ljmp
add
sti
dec
out
jmp
rclb
das
sbb
daa
dec
and
loopne
jns
outsb
loope
adc
loope
repnz
sbb
adc
icebp
decl
xchg
cmpsb
push
pop
adc
in
cs
jnp
mov
xchg
add
mov
in
mov
add
pop
mov
test
xchg
int3
cs
jbe
and
test
dec
fildl
cmp
jmp
lret
fdivrp
or
mov
adc
movsb
popa
adc
test
lret
lods
pop
addr16
ja
rcl
or
xchg
inc
push
adc
insl
in
mov
jge
xchg
jg
data16
mov
inc
jns
and
lock
mov
movsb
aaa
inc
repnz
mov
inc
not
sbb
and
cmpsb
jecxz
loopne
and
das
sahf
imul
mov
shrl
ds
adc
call
ret
das
andl
mov
icebp
mov
fld
add
in
sbb
ret
mov
sbb
or
push
fildl
xor
loop
int3
pusha
mov
push
andl
ret
xchg
ja
push
imul
out
andl
jmp
repz
stos
sbb
xor
flds
les
int
xchg
adc
out
in
addr16
jne
ljmp
setno
insb
popf
pop
shll
out
jbe
sarl
aad
outsb
arpl
stos
sub
ss
sub
jmp
cmp
fldpi
test
mov
aaa
stos
push
and
insl
addr16
jp
mov
inc
inc
xchg
cmpsb
xorb
xchg
push
and
mov
test
lahf
cmp
stos
jge
xchg
adc
cmp
dec
scas
xor
je
lea
mov
ljmp
jb
cmc
sahf
addl
mov
cltd
mov
adc
orb
out
dec
pop
js
jno
adc
or
cmpb
inc
ljmp
sahf
mov
mulb
xchg
inc
and
outsb
ficoml
xor
or
pushf
aam
cmpsb
dec
decb
inc
das
sarl
mov
cwtl
ret
sub
mov
xor
mov
in
lods
scas
fidivrs
bound
nop
and
mov
inc
enter
mov
lea
into
mov
jp
xchg
cmpsl
dec
out
sub
pop
popa
push
pop
mov
movsb
jecxz
test
out
dec
jecxz
int
hlt
mov
fldt
loope
dec
std
fmuls
stc
movsb
mov
sub
and
jp
xor
bnd
ds
lahf
jns
jg
cs
jne
push
pop
inc
xchg
pusha
add
fistps
push
push
cmp
and
cli
cs
aaa
aaa
xchg
jnp
test
mov
or
je
movsl
sbb
push
or
push
pop
push
push
mov
push
or
sub
icebp
sub
nop
test
or
add
fbld
mov
xchg
int3
push
push
inc
js
mov
push
add
jne
xor
lahf
in
jnp
ss
insb
addr16
add
push
adc
jg
cmp
fwait
add
stos
pushf
push
pop
pop
pop
add
pop
iret
jl
xchg
pop
inc
xchg
lds
dec
stos
mov
iret
nop
xchg
stos
jecxz
ficomps
add
mov
sbb
ret
lds
jp
jg
pop
dec
pusha
mov
sbb
aas
or
xor
xchg
cltd
es
popf
dec
inc
cmp
lds
mov
adc
rclb
fwait
incl
jnp
shll
hlt
xchg
icebp
fnstcw
mov
mov
rorb
outsl
mov
lods
sbb
shl
jecxz
dec
aam
mov
jnp
lock
out
xchg
fwait
mov
into
sbb
addr16
jbe
mov
in
push
int3
push
das
ret
subl
mov
fdivs
cmp
loope
push
out
push
outsb
add
fiaddl
shlb
mov
mov
push
fsubs
int
mov
mov
mov
mov
or
fwait
pop
jno
jae
imul
fsubs
mov
and
xor
push
pop
rclb
ret
loop
and
sub
and
int3
je
outsl
mov
adc
adc
cmp
inc
std
data16
and
sbbl
test
cmp
into
fucomp
pop
arpl
and
cmc
pop
ljmp
sbb
fsub
ret
jb
jmp
cmp
hlt
stos
add
jmp
mov
xlat
stc
in
dec
leave
addr16
fisttps
dec
push
lret
icebp
pushf
test
daa
data16
lahf
or
push
ret
int
sbb
imul
push
in
or
sbb
dec
xchg
xchg
arpl
pop
xor
jl
inc
push
jecxz
rol
pushf
and
cmp
sub
lods
je
cwtl
xor
xor
out
inc
scas
lds
mov
stos
insb
inc
in
sbb
adc
cmp
dec
lods
subb
or
bound
pusha
pushf
jge
jle
fsin
cmpsb
sub
sub
cmp
les
dec
movsl
jmp
sbb
test
push
fwait
addr16
xorb
fwait
shrb
dec
ficompl
mov
outsl
lds
mov
mov
jae
cmpsb
add
mov
imul
adc
iret
inc
cmpsb
dec
inc
push
lahf
xchg
mov
mov
cltd
sub
sub
mov
push
cltd
hlt
jg
loop
mov
mov
dec
je
repz
lea
pusha
lahf
dec
ss
sub
imul
rorl
push
or
xchg
inc
mov
aas
stc
dec
mov
in
and
lahf
mov
fidivrl
inc
cs
mov
mov
mov
or
lahf
cmp
jo
js
cmp
int
scas
mov
cmp
add
mov
pop
movsl
imul
jle
push
mov
dec
outsl
push
shrb
inc
mov
or
test
mov
jb
gs
mov
jmp
jbe
sbbb
pushf
cmp
lock
or
andl
push
stos
mov
iret
int
sub
push
mov
cmp
mov
imul
pop
mov
int
xchg
test
inc
and
sbb
imulb
gs
pop
sub
adc
xchg
mov
jae
in
xor
dec
dec
loope
inc
mov
or
push
addb
jns
push
mov
repnz
int
push
lds
pop
cmp
and
cli
das
adc
inc
arpl
pop
call
jg
jno
lcall
cmp
xchg
sub
stc
inc
and
xchg
enter
add
ss
inc
sahf
cmp
xchg
mov
cmpsb
or
adc
adc
and
int
and
push
mov
mov
mov
pop
addl
test
sahf
and
repz
jp
mov
mov
cld
sbb
pop
gs
adc
mov
push
shl
insb
cmp
jle
outsl
daa
push
lahf
pusha
inc
data16
jo
inc
xchg
out
inc
dec
pop
out
ja
push
out
in
das
cmp
mov
cmp
add
dec
push
inc
insl
ret
pop
pop
sbb
sub
lods
aam
stos
out
jbe
clc
dec
repz
push
or
inc
and
out
out
loope
xor
icebp
ficoml
out
pop
int
inc
jl
rcrl
mov
inc
xchg
arpl
cmp
ret
pop
aaa
cmpsb
or
push
add
shl
inc
test
test
jne
out
fistps
lea
inc
repz
pop
les
jg
mov
sub
cs
dec
aad
shlb
and
ljmp
stc
sbb
adc
inc
insb
cltd
push
adc
shlb
or
mov
push
cmp
shll
ljmp
sti
xchg
orb
stos
pop
imul
movsb
xchg
mov
addr16
fiadds
mov
clc
cmp
scas
xor
sub
popa
movsb
mov
pop
or
mov
mov
inc
fisubrs
pop
mov
cld
loope
adc
inc
mov
lcall
or
stos
jmp
cmpsl
aas
imul
es
mov
loop
int
std
lahf
add
in
cmp
scas
notb
ss
xchg
aam
mov
cmp
mov
shll
sbb
in
mov
movsb
aas
jge
xchg
mov
dec
sbb
jb
push
adc
xchg
cmpsl
add
push
dec
fwait
sti
push
icebp
mov
lret
sbb
add
dec
lcall
lret
test
out
das
dec
lret
arpl
iret
push
loop
clc
xor
xchg
jno
test
hlt
mov
dec
repz
mov
push
sahf
xchg
arpl
lds
orb
or
push
mov
sbb
mov
and
mov
in
xchg
call
shrb
in
jns
loopne
push
test
ds
aaa
aaa
shrb
in
inc
cmpsb
xchg
pop
inc
sub
push
jae
jnp
out
jno
cltd
std
sbb
and
push
cli
or
popf
shll
cmpb
lods
rorl
and
push
or
sbb
jno
cmp
lea
sub
stos
stc
push
div
sahf
in
add
insb
in
add
inc
ljmp
xor
mov
loope
cltd
dec
jle
xchg
arpl
decb
xchg
out
mov
sahf
jg
xor
std
pop
jno
imul
movsb
out
loop
sub
int
je
out
xchg
jmp
jge
cmc
insl
test
cmp
mov
xchg
mov
out
adc
push
pop
xor
mov
int
sbb
cmp
enter
dec
pushf
jge
call
in
jne
push
mov
add
dec
ret
push
lods
ret
movsl
mov
inc
out
std
sub
sub
mov
lcall
orl
xchg
mov
pop
pop
in
neg
loope
or
push
or
cltd
pushf
and
bound
xchg
jg
mov
inc
fisttps
lds
pop
push
xlat
notb
cmpsl
jge
inc
and
jno
jns
test
or
flds
es
pop
pushf
jmp
push
mov
dec
ret
and
in
mov
fistpll
mov
clc
mov
lods
mov
cmpsb
leave
notl
push
pop
push
mov
push
mov
inc
push
inc
add
mov
or
sbb
movsl
stc
ret
idivl
xlat
add
xor
fadd
cmp
sti
jb
lret
xchg
pop
xor
push
sbb
lcall
stos
jae
jns
pop
mov
lret
sbb
je
ja
mov
cmpb
mov
mov
sbb
xchg
pop
sbb
cs
xor
add
imul
push
inc
dec
aas
push
or
push
lea
fsubrl
es
add
cli
sbb
and
fnstsw
dec
out
mov
call
jle
sbb
sub
test
inc
jb
inc
dec
adc
xchg
ljmp
ljmp
mov
jg
fs
mov
test
adc
lods
pop
sti
xchg
sub
fs
xchg
cmpsb
or
cld
push
jecxz
jle
insl
mov
cmpsb
or
inc
inc
pop
popf
fwait
xchg
adc
xchg
jbe,pt
repz
xor
adc
xor
pushf
and
jb
lret
call
cli
mov
sub
cmp
popa
mov
aad
pop
fucomp
xchg
scas
push
cmp
xor
dec
bound
pmaddwd
ljmp
sbb
out
mov
jp
fldenv
popl
mov
sbb
sbb
dec
cmp
pop
inc
jno
mov
es
mov
mov
out
loop
mov
shlb
cmp
out
and
sub
loope
cmc
jbe
orb
mov
sub
add
int3
adc
mov
jb
ds
add
pop
icebp
lds
aaa
test
and
cmp
dec
inc
enter
loop
aad
mov
xor
pop
fnstsw
loope
sbb
jg
xor
arpl
daa
js
test
fldl
dec
add
mov
cmp
int
xlat
xor
int
add
xchg
cltd
inc
inc
mov
scas
add
ds
add
in
sub
ja
mov
mov
xor
dec
cmp
loope
jae
test
sub
outsl
sub
imul
scas
mov
inc
xor
push
mov
cmc
mov
dec
shll
fsubrl
dec
mov
jno
test
bound
cltd
mov
imul
ja
push
popf
dec
or
mov
push
mov
lret
shrb
inc
fs
push
lock
dec
sbb
int3
xor
xchg
aas
dec
popf
mov
ljmp
lds
mov
xchg
sti
loopne
stos
mov
sbb
clc
cwtl
push
in
xor
inc
sti
in
xlat
xor
adc
mov
adc
mov
xchg
dec
cltd
int
inc
sti
sub
and
enter
das
pop
aad
cwtl
xor
add
add
or
sub
test
fsts
jb
or
sti
fsts
negb
lods
sub
or
mov
addb
mov
adcb
pop
xchg
adc
inc
dec
out
mov
inc
adcl
mov
movsl
mov
jl
cmp
push
mov
pop
out
jecxz
into
lcall
jge
adc
fwait
or
sbb
mov
jp
push
mov
or
jmp
ror
jecxz
inc
and
popa
push
jne
sti
mov
mov
lock
dec
jge
xorb
fs
adc
mov
jb
jg
ret
adc
push
insb
les
add
mov
jns
jae
cmpl
outsb
outsb
int3
pop
js
stos
push
mov
int3
popa
sti
adc
pop
bound
xor
add
scas
test
jmp
int3
xchg
fidivrl
jnp
add
lcall
popf
dec
addr16
in
out
sub
lcall
dec
xchg
and
jp
arpl
andl
dec
pushf
mov
cli
xchg
fwait
inc
lods
repnz
stc
cmp
xchg
call
pop
lret
sub
mov
jae
xchg
sbb
popa
inc
sarl
xchg
sub
in
ss
insb
std
std
push
test
adc
adc
rclb
push
data16
ret
bnd
pop
aas
lock
jg
jmp
sahf
lahf
cmp
mov
jl
test
pushf
icebp
mov
sub
aam
xchg
jmp
jbe
pop
imul
adc
mov
aad
lcall
dec
inc
sahf
xchg
inc
jecxz
fs
sub
push
fsub
out
movsb
or
enter
inc
mov
jp
dec
jle
enter
xchg
sti
test
gs
jmp
sarl
xchg
rorb
mov
sbb
pop
lahf
imul
jl
sarb
aad
mov
sub
add
pop
push
gs
push
cmp
xor
sub
ljmp
orb
lret
inc
xor
shrb
es
pop
xor
fs
test
leave
lock
ret
in
in
lods
dec
push
ret
divb
and
test
outsl
pop
or
xor
or
mov
cmp
sub
int3
xchg
jmp
add
xchg
enter
ss
in
adc
pop
mov
out
cltd
sbb
xor
inc
jmp
out
mul
daa
push
cmc
ret
punpcklwd
dec
push
pop
cmp
dec
push
mov
lret
or
mov
roll
push
mov
fisubs
push
andb
lahf
js
pop
test
sub
sbbl
mov
xor
lods
or
in
adc
data16
sub
mov
dec
inc
addr16
out
adc
and
fcompl
mov
cmp
lea
cmp
mov
cmpsl
cmc
ja
and
sahf
adc
push
sbb
xacquire
pop
imul
jo
push
rclb
jmp
jle
xchg
int
dec
mov
mov
testl
push
inc
notb
cmp
das
push
xor
xor
lret
out
lcall
fidivl
cld
test
cld
subb
gs
sti
pusha
dec
mov
rcrb
xor
cltd
popf
bound
jmp
pop
xor
cmc
jl
in
shlb
add
mov
adc
jbe
cmp
xchg
dec
pop
stos
or
add
mov
add
mov
lods
popa
cvtps2pi
inc
adc
aaa
jle
flds
repz
sub
and
push
out
shlb
push
fs
pop
stos
mov
dec
xchg
pop
test
movsb
inc
dec
mov
push
fdiv
pop
adc
sub
divb
sbb
std
adc
jo
dec
imul
test
mov
mov
inc
ret
dec
mov
inc
jg
xor
push
xchg
ja
xchg
xchg
jbe
xchg
pop
add
shrl
fists
dec
shlb
pop
insb
cmp
or
mov
mov
insb
mov
or
stc
das
xchg
inc
rcr
mov
icebp
je
xchg
out
outsl
roll
inc
in
mov
jbe
mov
xor
mov
push
ja
pushl
or
std
sub
fwait
call
bnd
mov
mov
cltd
or
dec
push
sub
stc
lea
arpl
scas
lret
lahf
mov
inc
add
pop
mov
cmp
or
imul
and
dec
or
and
ja
imul
inc
mov
mov
outsb
or
mov
and
inc
sbb
mov
out
flds
dec
inc
mov
ret
cmp
int3
mov
mov
inc
push
rorl
repz
ret
in
or
icebp
and
fdivr
dec
fistpll
into
xchg
mov
jo
pop
mov
push
loopne
movsl
xchg
inc
lahf
in
int
movsb
mov
dec
mov
sub
cmp
shll
in
add
inc
sahf
mov
aas
in
aas
cmp
lret
in
in
jecxz
push
pop
mov
js
movsb
xchg
pushf
shll
int
xor
movsl
roll
pop
mov
xor
call
add
dec
aaa
push
xchg
sub
push
and
repnz
ljmp
xor
cmp
dec
sbb
sbb
in
jb
xlat
mov
jmp
xchg
pop
push
imul
inc
scas
inc
mov
push
rorb
gs
pmuludq
cmp
mov
loop
cwtl
shr
stos
mov
out
sahf
sti
ljmp
mov
sarl
ljmp
mov
shll
jle
jmp
lret
or
inc
cli
add
cmpsl
push
jbe
gs
pop
push
sbb
imulb
jb
xor
pop
movups
add
fmull
mov
push
adcl
je
pop
cmp
movsb
or
xchg
pushf
std
lock
call
cmp
je
inc
mov
cmp
js
repnz
pop
dec
mov
pop
aad
and
xchg
and
mov
and
stos
movsl
aad
mov
sbb
pop
or
inc
mov
and
je
inc
add
adc
popf
add
ret
adc
or
addb
out
sbb
cwtl
sbb
iret
xchg
imul
inc
je
lahf
mov
add
pop
insl
push
fsin
outsb
pop
dec
fwait
mov
lcall
mov
loop
clc
or
imul
sub
mov
jo
push
mov
rcll
xor
mov
push
adcl
insl
out
pop
add
daa
xchg
lahf
mov
shll
xchg
sbb
js
gs
mov
or
insb
push
int
fwait
mov
pop
mov
test
pop
push
gs
mov
push
push
cmp
sbb
fdivs
dec
sub
rcl
mov
jne
xchg
sbb
out
mov
push
mov
and
xor
sbb
das
shll
aas
pop
popf
push
fdivrs
lahf
arpl
xchg
scas
xor
cmp
mov
aad
xchg
mov
repz
jne
cmc
pop
psrld
cmpsb
adcb
or
jae
pop
mov
or
push
inc
jae
xorl
js
dec
in
adc
xlat
into
or
mov
sub
and
push
push
ret
adc
lea
scas
xchg
inc
jns
and
xchg
or
push
out
lock
mov
push
jb
cltd
mov
pop
push
scas
nop
pop
lret
sti
jmp
mov
push
repnz
enter
insb
xchg
lods
mov
mov
rcrb
pop
or
aaa
call
add
or
dec
cmp
xchg
xchg
inc
sahf
and
mov
out
pushf
mov
add
aaa
frstor
addr16
jb
and
mov
in
and
lods
mov
mov
inc
adc
mov
inc
dec
add
loopne
test
mov
fsubl
loope
jno
leave
aam
out
lcall
out
dec
cltd
or
fs
imul
xlat
cwtl
imul
outsb
scas
gs
movsl
adc
sub
jge
jbe
test
and
dec
jge
imul
pusha
enter
jmp
inc
jg
or
cmp
mov
add
into
scas
xchg
mov
daa
popf
repnz
ds
push
and
xor
inc
insl
cmp
dec
lock
xchg
push
inc
punpcklwd
test
addr16
bound
roll
jp
lret
cli
aad
mov
pop
mov
pop
cltd
mov
adc
jmp
mov
test
repz
jp
jae
dec
push
pop
sbb
fidivl
imul
std
mov
div
pop
push
scas
jecxz
mov
xor
aam
repz
daa
cmp
push
fbstp
pop
lea
sahf
adc
outsl
pop
js
loop
ret
in
sti
adcl
add
pop
cltd
loopne
in
xlat
insb
andl
cmp
sbb
rclb
int3
lea
dec
and
or
loopne
cmpsl
pop
or
sub
pop
das
push
loopne
data16
sahf
lods
jp
pop
dec
cli
pop
call
mov
push
lods
mov
test
sarl
dec
mov
xchg
insl
push
clc
enter
sbb
sbbb
loopne
push
das
mov
sub
xchg
cmp
pushf
repz
mov
cld
inc
addl
sbb
insb
aad
pushf
sbb
mov
rorl
rcrb
fcmovu
or
or
fstpl
cli
jb
xchg
subb
repnz
cmp
andb
test
mov
sub
mov
jno
cli
pop
out
into
and
pop
or
outsb
aas
inc
ss
mov
insl
jbe
out
xchg
inc
test
int3
pop
or
outsl
cltd
rorb
scas
mov
and
sbb
lret
call
xor
or
add
xchg
scas
sahf
cmp
cmp
cmpsl
gs
scas
les
jb
lods
movsb
pop
inc
jp
loope
and
out
mov
adc
inc
adc
xchg
jbe
sub
test
and
or
mov
shll
inc
imul
imul
shrb
mov
rorl
mov
adc
int3
mov
lret
cmp
sbb
xor
rcrl
iret
sti
sbb
pop
dec
jmp
or
push
xchg
out
cmp
push
test
jne
pop
cmp
fucom
into
scas
jle
pop
loope
lods
jmp
mov
shl
sbb
aad
pushf
or
ja
inc
out
xlat
xor
mov
sbb
movsl
ja
aaa
jl
addl
pop
jle
push
mov
cmc
pop
sbbl
push
test
mov
sub
test
bound
int
pusha
fwait
cltd
push
jnp
mov
aas
lds
pop
je
mov
mov
fucomip
sub
das
popl
icebp
xor
xchg
dec
cmp
jmp
imulb
call
incb
fcomip
and
cmpb
lret
ss
repz
pop
jbe
inc
jle
sarl
cmpb
enter
xchg
fucomip
insb
xchg
lcall
push
repz
jns
cmp
jg
inc
setne
outsl
inc
test
add
adc
mov
mov
dec
outsl
adc
shll
xchg
dec
and
enter
movsl
add
mov
sub
scas
xchg
mov
and
or
pusha
pop
pop
loope
icebp
mov
adc
out
scas
inc
xchg
sbb
out
xchg
cmp
out
ret
sub
add
and
push
hlt
jmp
sbb
bound
js
xchg
and
in
xor
mov
out
inc
xchg
cmpsl
push
adc
fildl
jae
jno
lret
and
lea
ds
dec
and
lea
xor
outsl
enter
and
mov
push
mov
std
xchg
pushf
mov
jp
adc
mov
ss
mov
lahf
push
xchg
movsl
call
pop
loopne
and
mov
out
xchg
mulb
out
shl
out
xor
lea
xchg
xchg
outsb
mov
jae
sbb
push
mov
mov
xor
sbb
sub
cltd
push
adc
xchg
fsubrs
or
adc
sbb
xchg
scas
jmp
lret
xor
loopne
pusha
or
clc
pusha
pop
scas
repnz
jne
imul
mov
into
adc
jl
lock
das
push
icebp
fs
sbbl
imul
sbb
aas
jp
pushl
inc
arpl
mov
cmp
sbb
xchg
nop
testl
mov
push
leave
mov
cmp
adc
popf
push
bnd
inc
aas
fildll
insl
xchg
ret
pop
test
lods
sbb
jecxz
mov
add
jge
sahf
mov
and
xor
lret
jl
out
aad
cmpsb
pop
enter
loope
inc
ds
imul
decb
push
jge
add
or
xorl
mov
idivl
loopne
inc
ss
push
cmp
inc
sahf
inc
and
cmp
inc
push
cmp
leave
nop
fistpll
and
jge
mov
cmc
fnstenv
test
lcall
sbb
in
inc
pop
mov
fst
inc
loopne
or
mov
ss
out
movsb
pushf
xchg
push
mov
jne
pop
mov
or
mov
jb
lahf
outsl
and
sub
sub
scas
dec
jno
arpl
into
xchg
mov
or
xchg
ja
and
dec
iret
push
xchg
lea
xchg
aad
jmp
in
fistpl
repz
mov
push
mov
xor
scas
pop
pusha
rorb
pop
mov
in
test
dec
xchg
bound
push
add
ljmp
mov
lea
call
adc
ja
jmp
cmpsb
pop
cmp
mov
sbb
jl
sub
xchg
mov
jl
pop
cmp
cmp
iret
jg
stc
cmp
jns
mov
bound
les
loopne
inc
loope
or
subb
shlb
popf
lods
dec
cmpsl
mov
ret
cld
mov
cwtl
int3
ret
and
iret
fstpt
cli
ret
mov
mov
repz
leave
adc
add
pop
fcomps
xor
hlt
fcmovne
jb
add
or
pusha
movsl
lock
fisttpl
enter
scas
mov
push
xchg
cmpsl
jle
aaa
rolb
insl
out
out
push
mov
xor
cmc
outsl
xchg
insl
and
jg
pop
xchg
push
cltd
and
repnz
mov
imul
sbb
js
loopne
push
repnz
mov
iret
add
dec
je
les
inc
push
stc
and
push
mov
jge
jmp
cmc
sub
sbb
roll
jne
or
lcall
int
xor
aas
jg
jae
adc
fsts
cmp
jmp
add
add
mov
loop
adc
fwait
dec
dec
mov
pop
jg
std
xorl
test
pop
idiv
movsl
cmp
pop
mov
cs
mov
inc
scas
test
xchg
xchg
or
mov
jmp
mov
js
xor
cmp
add
cmpb
dec
and
add
lods
sub
cmpsb
mov
sti
adc
push
sbb
sub
mov
icebp
inc
pop
jbe
push
mov
add
or
mov
pop
sahf
outsb
pusha
jo
xor
cmc
mov
lahf
xchg
cs
inc
sub
mov
push
out
movsb
dec
aas
mov
mov
call
arpl
add
shll
outsl
jl
push
aam
push
jo
add
mov
pop
adc
lods
outsb
xchg
imul
cmp
sahf
fs
sbb
clc
bnd
jb
push
decb
in
hlt
cwtl
xchg
out
stos
fcmovne
sti
sahf
jp
lods
lods
out
fnstsw
cltd
rcll
push
pop
sbb
xchg
push
push
inc
xchg
mov
out
popa
or
into
out
mov
sbb
sar
adc
aas
enter
lods
mov
testl
mov
movsl
filds
ds
mov
inc
pop
cmpsl
pop
fldcw
test
movswl
and
and
hlt
mov
pop
rcll
test
pop
cmpb
inc
jns
xchg
pop
sgdtl
and
add
mov
mov
mov
pop
fcomi
xor
loopne
lods
xor
popa
xchg
stc
add
or
out
mov
xor
mov
jmp
jge
stos
int3
sti
inc
cld
decl
sbb
mov
xlat
sub
sub
adc
mov
push
fisubl
cmc
ds
add
mov
testl
sub
sbbl
in
in
pop
gs
sbb
jl
das
cmpsb
popf
rcrb
cmp
enter
push
xchg
mov
and
xchg
inc
xorl
mov
dec
test
jbe
ljmp
pusha
negb
insl
inc
adcl
scas
sub
jb
mov
and
pop
pop
jae
pop
add
pop
add
rolb
xor
je
mov
mov
sbb
aas
jecxz
dec
pop
daa
jge
xchg
cmpsl
out
test
dec
mov
cmp
jmp
lret
aas
dec
sub
adc
xor
mov
mov
cwtl
push
sbb
xchg
mov
fdivrl
aas
ret
or
adc
fiadds
int3
inc
mov
mov
loopne
pop
rol
addr16
push
lock
adc
stos
xchg
sahf
dec
sub
or
sbb
xchg
add
clc
lods
mov
cmp
mov
fimuls
xor
dec
and
repnz
out
lods
push
ss
outsb
xor
mov
rorb
mov
xchg
mov
mov
sbb
dec
mov
cmc
xor
stos
push
gs
jns
sbb
nop
xchg
movsb
call
add
push
in
mov
cmpb
flds
rclb
adc
jbe
shll
pop
orb
xor
clc
jne
fs
push
push
jae
aad
jo
aas
add
lods
loopne
mov
mov
aam
xchg
jp
mov
add
negl
enter
ja
divl
flds
lret
inc
in
push
adcl
int3
sbb
inc
ljmp
mov
pop
cmp
repnz
jne
dec
sarb
mov
out
sti
adc
out
les
in
push
xor
xchg
jae
cmp
cmc
mov
rcrl
mov
add
in
lret
mov
rcrb
int
add
jb
aad
push
ret
mov
ljmp
imul
dec
xchg
jae
mov
inc
or
sbb
and
push
fwait
sub
iret
cltd
mov
in
push
aad
jne
roll
mov
mov
and
fistpll
lret
fisttpl
loope
jno
mov
insl
pop
in
shlb
cwtl
xor
popf
pop
dec
idivb
xchg
push
incl
pop
sub
sbb
rcl
in
push
in
fidivrl
dec
sub
adc
mov
jg
jns
mov
xchg
sti
push
sub
pop
je
jle
xchg
add
adc
icebp
leave
cmp
mov
jbe
into
or
out
icebp
cs
scas
cltd
sarb
sub
dec
add
fldl
adc
jbe
clc
push
mov
scas
pop
or
lods
outsb
out
xchg
sbb
dec
stos
mov
or
scas
into
shl
adc
lret
bound
add
shll
mov
ds
scas
and
sbb
js
xchg
mov
xor
loop
inc
cld
rcrb
clc
int
adc
shrl
jns
xchg
cmp
mov
push
push
outsl
adc
xor
ja
ss
jge
jae
inc
lods
dec
pop
out
mov
lret
or
push
pushf
sbb
xchg
out
adc
fucomi
or
ja
xor
test
pop
xorl
cld
sub
repnz
mov
scas
imulb
outsb
lds
cld
cmpl
fcomps
jns
dec
inc
mov
pop
lock
or
fimuls
cmpsl
add
push
jg
js
sub
sti
cwtl
mov
dec
push
dec
rclb
or
xchg
repnz
test
and
ja
inc
mov
sub
daa
xchg
stos
icebp
pop
in
andb
and
sbbb
mov
or
sahf
jl
mov
mov
pop
out
iret
ss
push
cltd
sbb
mov
js
jno
cmc
mov
stos
insl
fs
out
add
test
lret
jae
into
cmpsl
cmpsl
ja
mov
push
jp
nop
push
bnd
int3
in
aad
into
shr
sbbb
xor
xorl
and
cld
cmc
add
fdivs
out
scas
sub
xchg
inc
repnz
iret
int
mov
pop
push
sub
or
xchg
movsb
jne
bound
mov
mov
xchg
lds
dec
push
mov
neg
xor
xor
daa
fldenv
mov
stos
or
mov
inc
popf
jle
adc
xor
mov
xor
add
pusha
pop
mov
sub
xorl
pop
ret
cmp
sbb
loopne
push
dec
sub
fsubrs
hlt
cmpsb
push
or
adc
sbb
push
and
or
jno
pop
mov
mov
cmp
int
sub
xchg
adc
pop
mov
mov
xchg
rorb
jg
icebp
mov
cmpsb
and
loope
popa
cmp
inc
xchg
sti
xchg
mov
aam
or
adc
fsubr
jno
push
xor
es
and
and
jmp
jl
stos
sbb
jns
jecxz
mov
sahf
mov
inc
stc
add
jecxz
js
xorb
jecxz
mov
mov
mov
movsl
mov
jae
lds
into
scas
xchg
or
add
sbb
insl
in
xchg
rorl
add
mov
pop
cmp
into
outsl
xchg
lahf
scas
sar
mov
fisubrl
movsl
pop
sub
daa
push
stc
xor
call
stos
enter
adc
fidivs
pop
ljmp
mov
fwait
add
and
push
mov
stc
adc
lea
lcall
sub
add
mov
push
xor
mov
fidivrs
push
scas
mov
xchg
jnp
sti
sbb
mov
stc
jmp
xchg
shll
inc
das
sbb
push
sbbb
xchg
mov
jecxz
into
repnz
sahf
inc
push
inc
addr16
incl
mov
xchg
mov
clc
push
push
or
mov
jnp
ret
in
lret
mov
xchg
and
gs
daa
sub
cmp
mov
repz
jge
arpl
pop
sbb
mov
aaa
movsl
lret
push
push
fsubrs
add
ret
mov
cld
push
clc
mov
mov
ficoml
test
in
mov
int3
xor
adc
xor
pop
cli
cltd
mov
inc
sub
xchg
jle
outsl
ljmp
aam
dec
out
gs
sub
outsb
add
jge
push
xchg
loop
xchg
loopne
inc
xchg
xchg
jp
mov
ljmp
movsb
push
mov
jns
adc
in
sarl
pop
mov
cwtl
fwait
out
xor
rcrl
sbb
fisubl
push
pusha
call
mov
test
jb
lahf
loop
clc
imul
jge
les
or
xor
stos
push
mov
sub
out
inc
cmp
push
cwtl
fnstsw
xlat
scas
jno
fisttpl
push
push
loope
xor
scas
cwtl
xor
sbb
imul
cmpsb
push
aaa
lods
add
mov
xchg
mov
mov
pop
add
xchg
lods
jl
xchg
pop
xlat
push
push
sbb
push
andb
pop
push
and
call
subl
cld
scas
stc
mov
insl
push
mov
ficoms
push
pop
sub
lcall
flds
adc
shlb
pop
rorl
les
movsl
data16
movsb
in
movsl
mov
pop
movsl
pop
jge
or
insb
cmp
out
adc
jns
inc
cmc
fsubl
inc
sbb
mov
adc
adc
cmp
mov
clc
loop
jmp
dec
jb
jl
or
inc
out
sub
and
dec
dec
leave
mov
add
push
push
adcl
sbb
adc
mov
clc
std
cwtl
adc
or
lret
loopne
shl
dec
jae
cmp
fnsave
movsl
std
mov
mov
stos
mov
test
idivl
jns
lods
push
mov
pop
pop
ljmp
ljmp
xor
push
push
sub
xchg
clc
xor
sbb
cmp
leave
xor
gs
aam
adcl
stos
mov
pushf
icebp
sub
in
sti
jmp
lret
das
jp
cmc
jge
sub
stos
shll
loop
icebp
xor
pop
dec
xor
pop
jnp
jl
addl
jne
outsl
dec
mov
addr16
loopne
imul
mov
xor
xchg
aad
or
mov
neg
aas
lahf
stc
sbb
mov
popa
test
push
repz
xlat
sub
neg
addb
push
dec
pop
mov
xchg
jns
and
popa
mov
pop
add
sbb
mov
jne
sbb
xor
push
daa
pop
lahf
or
movsb
xor
cli
rorb
sbb
sahf
test
jne
loopne
cmp
ds
fcmovb
sub
xchg
dec
xchg
lcall
sarl
cmp
push
rorb
cmc
push
aad
stos
popa
mov
addr16
cmp
es
out
leave
fdivrs
daa
hlt
scas
adc
jl
dec
movsl
dec
leave
fnstenv
loop
or
std
jl
lock
loop
sub
push
aaa
sbb
scas
jg
lea
mov
ret
mov
imul
lock
pop
pop
loopne
jg
lret
fs
sbb
sarl
in
sbb
jb
jb
in
jg
xchg
xchg
add
js
test
ret
mov
incb
mov
adc
imul
pop
dec
dec
mov
call
inc
mov
mov
es
dec
mov
sub
mov
xchg
out
es
xor
fbld
mov
xor
xchg
shlb
or
arpl
push
mul
vpaddw
fsubl
mov
dec
mov
fxch
jg
adc
mov
or
xchg
xor
dec
jne
jo
pop
aas
pop
adc
xor
cmp
rolb
movsl
jp
mov
out
mov
dec
insb
pop
andb
mov
iret
push
xchg
pop
fisttpll
fucomi
jl
mov
dec
out
loope
out
arpl
scas
addr16
mov
scas
inc
xor
iret
into
movsb
call
push
pop
sbb
aad
scas
mov
lods
enter
push
ret
add
cwtl
outsb
lret
fstps
daa
mov
insb
test
cmc
daa
mov
lods
dec
rcl
sub
adc
je
jecxz
outsl
add
inc
sub
jae
pop
sbb
push
shll
pop
jecxz
mov
push
sahf
lahf
js
ret
es
out
cmp
jb
jmp
xchg
mov
pop
pushf
xchg
jl
cltd
dec
sti
out
mov
fcoms
js
pop
jbe
add
and
jae
push
sub
stos
popa
movsb
jmp
cmp
in
mov
xor
shlb
iret
push
int
push
fs
data16
or
inc
nop
push
mov
fdivrs
out
sarb
inc
and
or
jbe
jmp
xchg
jo
cmp
or
push
xchg
int
mov
popa
xlat
ror
mov
stos
fisubs
xchg
and
movsl
leave
mov
aad
dec
push
fwait
shrl
cmp
xor
bound
xorl
jne
jg
data16
loopne
or
in
addr16
or
dec
mov
push
and
out
ds
notrack
cmpsl
repnz
lahf
and
testb
inc
jge
cmpsl
mov
fsqrt
push
fbld
stos
add
les
sub
mov
push
cwtl
popa
mov
lea
shrl
not
icebp
cmp
out
mov
jmp
xchg
cld
jb
lret
cli
or
stos
jge
arpl
rolb
lods
dec
test
inc
cmp
jg
shr
adc
mov
or
insb
cmp
and
fldl
cli
add
adc
xchg
in
test
loope
test
leavew
jae
push
aam
loop
mov
inc
ror
jle
inc
js
mov
add
cmp
addb
xchg
ds
push
fcomip
or
cmp
xchg
mov
rorl
mov
jns
cld
dec
enterw
ja
cmp
jae
jns
mov
xchg
shl
pop
add
ja
cmpl
xchg
mov
dec
push
xor
xchg
inc
addr16
adc
iret
movsb
inc
mov
out
je
mov
sbb
or
and
loop
inc
clc
sbb
pop
testb
ret
jecxz
or
xchg
sub
mov
ret
sbb
lret
mov
aas
addr16
sub
or
sbb
mov
hlt
daa
stc
mov
push
jno
mov
cmpsb
ds
jg
pop
cmc
out
dec
faddl
inc
es
sub
aad
mov
mov
repz
inc
jbe
enter
aas
ret
insb
frstor
pop
insl
repnz
rcrb
mov
movsl
sbb
je
xorl
fwait
mov
aas
pop
sub
out
arpl
xor
adc
cwtl
xor
fsubs
popa
iret
rolb
or
or
jl
imull
xchg
xchg
subl
mov
pushl
stc
jae
lds
shlb
xchg
inc
pop
lahf
jg
aam
push
mov
repz
push
lret
sbb
movsb
and
push
add
or
xor
dec
xor
push
imul
or
arpl
shll
mov
ds
and
mov
and
out
xlat
inc
out
add
repnz
sbb
cmc
stc
je
adcb
sbb
jmp
cld
scas
lahf
pop
jmp
mov
mov
jae
cltd
das
insb
loopne
and
inc
loopne
movsl
test
dec
call
xchg
fcmovnbe
push
mov
pop
pop
or
xchg
pop
mov
sbb
ljmp
lods
adc
sbb
jbe
xchg
loope
rcrl
clc
hlt
ds
insl
shll
insb
cmp
idiv
addr16
jbe
xchg
jge
pop
mov
lcall
cmc
xor
cmc
movsl
aas
push
iret
push
mov
aaa
cmp
mov
xchg
fldt
and
sbb
sbb
fdivp
rcrb
fs
cmpxchg
je
faddl
in
or
fisttpl
push
xchg
pop
push
jecxz
test
sahf
call
test
inc
mov
pop
pop
stos
out
adc
inc
test
icebp
add
or
lret
fwait
outsl
jmp
test
jns
xor
xchg
xchg
sbb
rolb
jbe
mov
pop
ffree
adc
adc
mov
out
cs
out
cmpsl
xchg
jmp
adc
loop
push
xor
outsl
push
bound
dec
jmp
or
jbe
out
sbb
inc
fcmovnbe
aad
test
pop
ds
data16
les
into
pop
mov
aaa
fadds
mov
adc
fdiv
mov
idivb
fwait
pop
xor
mov
std
mov
movsl
cltd
add
fildl
lock
sbb
aas
jno
call
inc
in
in
xchg
adc
lcall
dec
lret
mov
lods
mov
cmp
cmp
mov
dec
lods
add
xor
sbb
or
push
adcl
icebp
sbb
mov
jle
cld
mov
insl
dec
push
call
cmpsb
add
aam
inc
pop
out
inc
dec
loopne
inc
aad
cltd
inc
enter
and
add
jbe
pop
mov
mov
jo
cmp
push
jne
dec
pop
int
sbb
push
sbb
push
pushf
mov
arpl
aas
ds
jb
in
loopne
and
inc
pop
shrb
lea
mov
popa
mov
das
sbb
mov
and
rcrl
popa
std
and
mov
decb
sahf
dec
push
mov
lret
cmp
add
pop
sbb
outsb
inc
int3
in
bts
cmp
sahf
movsl
inc
push
movsb
ret
das
data16
mov
bound
mov
inc
loope
xor
xchg
jnp
in
and
pop
test
inc
pop
jge
adc
jmp
loope
out
repz
jge
loope
pop
xchg
lea
shlb
xlat
or
dec
ljmp
popf
bound
push
bound
call
mov
rcr
fsubr
mov
mov
mov
mulb
mov
sub
fsubl
cli
cs
loope
xchg
sbb
inc
ljmp
lret
or
jnp
mov
dec
dec
fiaddl
xor
lods
lock
mov
movsb
call
or
fwait
enter
or
loopne
or
stos
mov
test
cs
xlat
ret
ljmp
fcomps
mov
vphsubbw
pop
pop
sbbl
add
cmc
pop
scas
xorl
mov
inc
ffreep
and
xor
jg
push
push
ret
sbb
scas
jno
pop
adcb
dec
notl
test
cltd
js
xchg
cmc
xchg
xchg
push
mulb
dec
adc
clc
dec
xor
sbb
popa
bound
test
rcr
push
cwtl
inc
mov
inc
jae
xor
push
push
jecxz
jno
loopne
inc
adc
sbb
mov
jno
push
push
mov
xchg
movsl
jmp
xor
movsl
int
pop
or
jecxz
aad
cmp
xor
and
in
sub
testb
jne
push
adc
sbb
cmp
sbb
push
inc
jl
and
fcmovu
insb
push
add
test
inc
dec
aaa
sub
fwait
ret
pop
outsl
loop,pt
or
movsb
loope
hlt
dec
mov
mov
imul
mov
dec
les
cmpsb
fdivr
adc
sub
daa
sbb
cmp
sbb
mov
outsb
xlat
cmp
pushl
fdivs
mov
stos
cmpsb
xchg
sbb
pop
stos
xor
test
test
rol
loop
sub
sub
cli
std
xlat
mov
xchg
dec
stos
call
and
cmpsl
call
test
nop
dec
dec
aaa
mov
push
inc
xor
aad
mov
mov
lahf
pop
stos
outsl
ds
enter
pop
aad
fptan
or
loop
pop
in
aam
jo
and
xor
imul
xchg
xchg
fistpl
and
mov
fadd
arpl
dec
pusha
testb
mov
sbb
push
push
mov
push
dec
jge
out
mov
lds
mov
jno
frstor
sti
xchg
out
cmp
icebp
movsb
jg
or
mov
out
pop
add
cmp
xor
outsl
das
popf
cmp
pop
lods
lret
orb
push
sbb
cwtl
inc
cwtl
push
bound
lcall
cmpb
js
mov
mov
add
jbe
outsb
mov
sarl
add
add
mov
arpl
push
push
dec
jg
fucomip
xlat
and
cmpl
cmp
aaa
or
ret
push
inc
scas
mov
popf
test
outsb
dec
scas
mov
jge
xorl
mov
loope
nop
mov
mov
cmpsl
inc
aaa
js
push
sti
push
lods
clc
lock
jp
pop
adc
mov
cmp
enter
jmp
mov
rol
xchg
in
enter
fnstsw
push
xorb
lea
out
and
xchg
or
sbb
cmp
sahf
sbb
push
insl
inc
pop
insb
ss
outsb
shlb
js
aas
scas
inc
mov
mov
push
cmp
aad
aam
jns
jecxz
jo
cmc
inc
jmp
int
and
rorl
data16
inc
jl
or
mov
pusha
mov
popf
xchg
out
movsb
xchg
enter
and
jl
fs
mov
push
ja
outsl
adc
sbb
lds
inc
mov
mov
mov
lods
mov
mov
repnz
sbb
and
pop
sub
cmpsl
sub
enter
jecxz
mov
in
pop
in
mov
mov
mov
cmp
mov
pusha
gs
in
mov
mov
mov
push
and
add
es
sbb
jbe
pushf
mov
pop
outsl
stos
lret
pop
into
mov
mov
cli
inc
shlb
dec
push
loope
xor
aad
xchg
add
js
xchg
out
leave
lret
rclb
das
sub
mov
xor
xchg
jp
xchg
insb
sti
in
adc
clc
sahf
loope
cmp
test
xchg
popa
gs
mov
and
repnz
xchg
daa
rorb
in
cmc
lods
xchg
cmc
bnd
dec
xchg
add
scas
aad
ljmp
push
jg
jne
xchg
xchg
ret
pop
notb
inc
rcrb
add
outsb
lds
mov
adc
cmp
and
or
rolb
xor
dec
or
xchg
add
popl
mov
test
aas
mov
lcall
cmp
in
ror
sub
push
sti
mov
dec
pop
ja
pop
pop
mov
xchg
push
push
add
js
mov
dec
jp
ja
in
cmp
nop
popa
js
dec
sbb
pop
pop
lds
jmp
inc
lds
std
ficompl
jl
fdivs
fwait
sti
loope
inc
and
rcll
arpl
test
push
rcrl
push
inc
dec
fnstenv
adc
adcl
xor
popa
int
pop
sbb
dec
and
inc
mov
mov
mov
test
clc
addr16
call
arpl
imul
arpl
pop
sbb
mov
int
adc
movsl
push
mov
inc
out
icebp
cmp
or
push
stc
mov
das
rcll
lea
into
movsb
das
iret
lock
mov
adc
jns
dec
dec
xchg
cmpsb
mov
mov
lahf
jne
out
or
je
jmp
into
mov
cmp
scas
imul
clc
cld
pop
lea
sub
scas
mov
test
add
jmp
xlat
pop
in
sub
fwait
lahf
mov
sub
orl
pop
lds
ficomps
adc
adc
pushf
inc
lods
xchg
int
or
xor
adc
xchg
or
jnp
orl
jnp
push
fs
adc
cmp
sub
cltd
pop
rcrb
fcomps
jl
sub
adc
pop
fs
pop
scas
cmp
xor
lcall
outsl
rclb
pop
xor
mov
std
fstpt
push
or
inc
imul
aaa
pop
lods
dec
arpl
xor
sbb
sti
lret
pop
sub
xor
shr
add
lea
mov
lret
and
and
pop
cltd
aaa
ss
lret
test
jg
mov
mov
aaa
lock
sub
movsl
push
mov
jb
aaa
inc
mov
add
add
dec
cld
popa
jnp
test
inc
stos
add
fucomip
pushf
scas
cli
jo
pop
add
pop
icebp
add
mov
scas
mov
xorb
int3
sbb
mov
adc
xchg
les
adc
cmpsb
insb
dec
jl
pop
imul
mov
sub
fiaddl
xor
pandn
inc
imull
pop
scas
lret
xlat
pushf
clc
mov
sti
sbbb
or
mov
jg
and
fst
jns
and
fsubrs
hlt
mov
mov
fisttpll
cs
dec
cmp
pop
inc
jmp
stos
loop
hlt
int
jae
and
iret
call
jecxz
adc
and
or
inc
adc
xor
fstpt
enter
mov
js
pop
sahf
xor
in
and
push
in
add
ret
mov
cld
jns
in
test
insb
cwtl
jo
jle
addr16
or
mov
jno
in
mov
gs
and
ror
lcall
into
hlt
pop
and
rolb
ret
das
xor
ror
nop
mov
pop
dec
pop
mov
dec
mov
scas
xchg
loopne,pt
xchg
inc
fistl
clc
inc
mov
fcom
movsb
xchg
push
mov
outsb
in
sbb
and
ret
lret
add
mov
int
xchg
loop
jnp
mov
fbstp
iret
sarl
dec
adc
pop
shll
ds
and
and
mov
adc
fdivrl
mov
xor
enter
ret
add
cwtl
lock
pop
xlat
pop
nop
mov
xchg
enter
sbb
or
cs
iret
cmc
inc
push
xchg
outsl
lret
and
insb
dec
sahf
sub
bound
sar
mov
sbb
mov
daa
jae
ret
popf
ja
sub
mov
lods
push
dec
xchg
js
mov
mov
sub
arpl
and
xlat
lods
shlb
in
ficompl
mov
xor
jecxz
lods
out
or
out
sahf
inc
push
jne
sub
add
xchg
mov
icebp
icebp
scas
xchg
dec
icebp
mov
xchg
lahf
or
ret
jae
pop
pop
cld
mov
div
xchg
aas
popa
fs
xor
add
dec
mov
js
jp
xchg
test
or
lock
cmpsb
and
shl
sub
mov
sub
mov
lea
arpl
add
mov
inc
and
cltd
jns
leave
out
incl
in
lds
lret
push
push
sti
pop
mov
adc
cmp
ljmp
div
add
pop
aam
pushf
xorb
dec
push
int
push
adc
shrl
sub
inc
nop
incb
jl
push
outsl
jg
inc
ljmp
xchg
push
lret
pop
lar
xchg
outsl
movsl
adc
xor
cltd
fimull
xor
mov
mov
imul
int
sbb
mov
test
push
jl
enter
dec
add
cmp
inc
adc
ss
lcall
lahf
fdivrp
ljmp
sub
push
add
sub
test
dec
jae
shlb
push
sub
insb
mov
push
pop
negb
mov
divb
imul
imull
sub
sbb
sbb
and
add
dec
int
cmp
out
mov
test
stos
cmp
lods
and
pop
arpl
adc
push
cmp
fnstsw
xchg
shll
xchg
test
movsb
sbb
add
fucomp
and
fdivrl
jl
shlw
xchg
icebp
ljmp
ds
xchg
gs
adc
sbb
mov
pop
inc
pop
sub
mov
and
inc
scas
mov
clc
jmp
in
push
data16
sbb
cmp
jl
push
adc
mov
and
add
dec
iret
sub
xrelease
decw
sbb
sub
sbb
imul
sbb
jo
cmpsl
xlat
push
stc
les
ret
out
sbb
sbb
ja
xor
icebp
ficompl
jns
mov
pop
jle
int
outsl
outsl
cmp
sub
dec
incb
jbe
xchg
out
pop
out
movsb
rorl
mov
lods
fdivrl
mov
push
dec
xchg
sbb
xchg
push
rolb
inc
sub
js
xchg
repz
nop
rcrl
inc
loopne
out
pop
dec
test
daa
xor
mov
add
mov
cmpsl
xlat
imul
xchg
fucomi
loopne
repnz
pop
cmp
pop
dec
cli
inc
test
inc
iret
int3
mov
pop
and
int3
aam
jecxz
fs
or
gs
mov
pop
sbb
inc
mov
adc
jns
push
push
jmp
xor
pop
sbb
out
scas
dec
loop
adc
outsb
xor
pop
add
idivl
leave
insb
sbb
aam
mov
sbb
mov
es
je
push
adcl
and
iret
ja
xchg
mov
outsl
aam
mov
faddp
sub
pop
sub
popa
mov
mov
add
lea
cmp
and
movsl
add
adc
xchg
ror
fidivs
jne
imul
adc
and
lea
leave
add
pop
sbbb
sub
pushf
into
lret
ljmp
cmpsb
add
dec
pop
repnz
pop
adc
call
mov
sub
int3
mov
xchg
cwtl
push
push
adc
inc
dec
mov
mov
inc
lods
into
lods
and
xor
cmpl
repnz
pop
imul
adc
mov
lods
fnstenv
fcoml
or
and
call
inc
test
push
push
daa
jns
mov
lret
in
lret
rcl
or
insb
test
mov
dec
mov
xor
or
xchg
fldenv
mov
jg
mov
ja
andl
mov
and
cmpsl
mov
pushf
pop
jae
xchg
inc
or
daa
cmp
mov
call
mov
jle
push
cmpl
and
mov
aad
cmpsb
mov
outsl
adc
push
call
mov
inc
bound
push
push
push
push
mov
or
push
push
sub
dec
in
jle
and
inc
mov
or
or
xorl
pop
xchg
cli
push
dec
xchg
push
leave
sbb
std
in
sbb
leave
or
iret
jbe
dec
leave
testb
adc
orb
dec
lods
nop
scas
nop
in
adcb
int
dec
insb
jne
fdivrl
sub
test
aam
xchg
gs
mov
inc
or
adc
lret
mov
and
bound
cmp
push
leave
add
test
dec
fsubrl
je
add
addr16
adc
nop
or
inc
in
imul
mov
inc
xchg
adc
gs
rcll
ret
xchg
pop
into
inc
dec
cmp
sub
aad
je
mov
jg
mov
sbb
ret
loopne
lcall
mov
test
push
or
inc
mov
mov
mov
ret
cwtl
out
inc
imul
mov
loope
xchg
cmp
insl
insb
addr16
sbb
push
mov
mov
mov
dec
dec
pop
sar
adc
push
sbb
or
in
loope
push
xchg
adc
sbbb
push
imul
sbb
leave
inc
dec
pop
or
mov
outsb
cltd
sub
sub
fiadds
loopne
push
push
sbb
xor
sbb
push
jbe
sahf
hlt
cmpsl
xor
aad
scas
inc
pushf
bound
sbb
repz
out
addb
push
xchg
push
or
das
loop
jb
mov
adc
dec
es
ds
scas
mov
add
lahf
mov
and
mov
sbb
pop
push
in
push
mov
mov
and
ret
mov
mov
push
inc
and
mov
cmpb
pop
mov
push
mov
jns
jg
mov
push
out
faddl
inc
mov
loop
inc
ficompl
scas
jnp
inc
mov
inc
cmp
and
add
inc
adc
mov
and
mov
loopne
inc
push
movsb
dec
je
out
call
add
xchg
stos
imul
inc
push
hlt
test
add
je
in
inc
imul
jmp
sarl
mov
inc
leave
add
stos
pop
callw
icebp
aad
mov
fsub
fsubl
adc
jmp
mov
ja
dec
fistl
push
xchg
je
test
jmp
pushf
daa
dec
inc
repnz
rolb
xor
xchg
sbb
inc
ret
imul
enter
jmp
int3
je
sti
stc
cmp
cmp
cwtl
push
ficoml
dec
and
fisubs
add
daa
int
mov
and
mov
dec
fdiv
jmp
sub
inc
in
adc
sbb
add
cmp
xchg
push
gs
fdivrl
repz
shlb
xor
cwtl
daa
fisubl
call
in
sbb
push
sbb
scas
inc
fs
xchg
fcom
mov
cmovno
gs
adc
fs
loop
xor
cmpsb
add
dec
xchg
dec
jne
test
sub
fcmovne
sarb
mov
mov
push
in
and
imul
mov
pop
shll
adc
cmp
repz
sub
lret
scas
out
pop
mov
jle
dec
test
jmp
inc
push
xchg
pop
aaa
loop
xchg
stos
cmp
xor
jle
sbb
push
notb
insb
jge
adc
mov
sbb
test
and
sti
add
add
movsb
es
outsl
pushf
sahf
or
stos
pop
dec
sbb
dec
sub
pop
push
imul
mov
fstpt
inc
mov
jmp
cltd
orl
movsl
push
popa
mov
mov
mov
cmpsl
lret
popf
sti
repz
pop
or
cmc
int3
test
leave
jecxz
es
ds
aaa
leave
lcall
movl
sub
sti
in
pushf
xchg
adc
cwtl
lahf
mov
leave
jmp
xlat
or
mov
pop
shrb
sti
xchg
xchg
in
mov
and
hlt
mov
std
sub
jno
out
cmp
dec
pop
mov
xchg
inc
js
mov
jmp
sub
mov
cmpl
insb
jno
sbb
mov
cmp
mov
call
inc
xchg
sub
adc
pop
subl
jne
daa
sarl
inc
les
dec
in
cmp
and
test
cmp
mov
popf
cmc
outsl
mov
and
in
je
jae
dec
jp
fisttpl
ds
in
aas
aad
push
fucom
bt
aas
push
dec
xor
pop
aaa
push
insl
push
fs
push
sub
adc
adc
xchg
sbb
mov
aam
jge
cmp
and
addr16
dec
add
fs
xchg
std
js
push
pop
stos
and
shr
ja
pop
pop
push
ljmp
add
sbb
or
movsl
fwait
loopne
call
aam
pop
dec
sbb
inc
sbb
movsb
mov
adc
sub
imul
mov
cmp
ret
xchg
fsubl
add
mov
ss
push
imul
fldenv
push
xchg
add
stos
sub
mov
inc
jnp
mov
cli
inc
jle
push
arpl
shrl
pushl
mov
add
xor
inc
gs
mov
jb
jae
je
stc
cmp
scas
test
test
es
cmp
mov
pusha
sbb
ja
sbb
sub
fildl
rorl
xor
ja
dec
sahf
lods
lock
daa
mov
and
mov
inc
pop
lret
lcall
sub
mov
rcr
outsb
movsl
enter
stc
arpl
jae
jecxz
xchg
dec
fucomi
cmp
cmp
pop
repz
out
xor
push
dec
xchg
mov
inc
push
orb
sbb
iret
cmp
cmovbe
stc
call
add
leave
ja
out
jp
rol
pop
xchg
loop
aaa
xchg
leave
dec
xchg
jo
push
push
jle
dec
mov
dec
mov
ret
dec
sti
cli
adc
push
imul
mov
stos
cmc
add
xchg
aas
fwait
shll
cmp
les
push
sub
movsb
add
push
mov
dec
jp
jne
jp
jge
movsl
xor
dec
jge
call
ret
sub
xchg
mov
lds
negb
jle
inc
mov
aad
flds
cmp
rolb
sbb
test
add
jecxz
aas
movsl
lret
pop
data16
inc
or
pop
jl
fisttps
fs
sub
aas
aas
pop
xchg
cmp
mov
mov
cmp
adc
rclb
mov
add
daa
notb
stc
outsb
cmc
popf
jo
push
adc
pop
push
xchg
pop
cli
jg
lea
dec
ret
xor
fldl
mov
push
cwtl
push
and
leave
cmp
out
push
mov
cld
cmp
outsb
xor
not
rcll
icebp
popa
sbb
dec
push
add
popa
fsubrl
or
scas
test
std
mov
idivb
push
pop
dec
stos
lahf
push
cmp
stos
push
inc
out
das
mov
jp
sbb
dec
or
imul
mov
je
inc
ret
dec
jmp
xchg
sbb
sbb
andb
sub
je
int3
call
outsl
scas
push
rclb
push
stos
test
xchg
notl
cmp
cmp
aaa
inc
int
inc
xor
daa
shll
fistpll
sbb
sti
push
push
cltd
cli
mov
mov
mov
mov
dec
jae
scas
mov
lret
xchg
mov
lock
ss
fwait
icebp
cmpsb
fadd
xchg
dec
and
je
lds
dec
sub
call
push
jae
mov
mov
ret
adc
mov
hlt
dec
inc
adc
movsb
xchg
jg
mov
bound
mov
ss
mov
push
cs
aad
scas
jl
adc
and
push
add
mov
ds
xor
sbb
or
stc
dec
js
jae
mov
ret
js
testl
xchg
mov
jmp
ss
add
fistpl
jne
add
mov
xor
mov
mov
lock
je
xor
sub
push
mov
fbstp
cmpsb
ds
jmp
pushf
fistl
popf
shlb
in
hlt
outsl
push
imul
mov
ss
enter
sarb
int3
xorb
and
and
dec
jae
outsb
ret
dec
leave
pop
push
adc
popf
jne
enter
mov
push
aad
je
insl
xchg
sbb
dec
pop
push
out
mov
add
inc
jb
jno
dec
sbb
cmpsl
add
sbb
aas
fisttpll
mov
es
jmp
sahf
pop
fildll
mov
pop
in
jecxz
adc
test
lahf
mov
in
add
in
push
orl
jae
add
jo
out
pop
adcl
xchg
rcr
jp
mov
mov
push
xchg
in
cmp
cld
ficoms
adc
ucomiss
mov
push
ljmp
sbb
mov
add
sub
cli
mov
cmc
inc
sbb
push
and
hlt
pop
add
das
jmp
mov
negl
sub
sbb
outsb
out
lcall
pushw
out
ret
mov
sti
mov
xor
leave
loopne
fbstp
adc
pushf
dec
jbe
push
mov
pop
jbe
push
mov
in
mov
fistpll
addl
lods
cs
int3
dec
xor
mov
movsl
call
xchg
jbe
push
dec
les
adc
data16
ss
inc
aad
dec
and
push
iret
jl
sub
add
add
repnz
xadd
mov
fcomps
test
jno
add
and
call
cld
fs
test
mov
cltd
test
popf
xchg
lret
push
rcll
orb
push
push
sti
pop
push
or
push
inc
push
jns
adc
xchg
jae
add
pop
in
fs
sub
mov
lock
adc
and
in
cli
pop
mov
je
push
es
mov
mov
xor
pop
sbb
inc
inc
jne
loopne
add
sub
mov
push
lret
mov
jecxz
loopne
sub
bound
outsl
mov
pop
and
aad
insl
in
push
aas
nop
cs
ficomps
fcoms
stos
jae
mov
jle
mov
mov
add
cmp
sub
jb
fbld
inc
add
shrl
cmp
xor
sbb
sbb
negl
mov
add
jecxz
jbe
mov
mov
inc
icebp
xor
loopne
mov
inc
push
fs
pusha
add
or
notb
adc
jb
add
push
push
cmp
jae
mov
movsl
pop
cwtl
aad
sub
shlb
fstps
orl
cmp
inc
into
mov
mov
aam
out
and
add
adc
xchg
or
cld
xchg
xor
adc
lret
pop
lcall
mov
pop
sahf
mov
mov
out
lret
push
out
int
psrad
shll
and
fsubs
cmp
add
into
icebp
mov
xchg
cld
mov
icebp
cld
fiadds
scas
aaa
mov
sbb
sbb
bound
fsub
out
jae
mov
cmpsb
push
push
in
sub
and
and
mov
mov
sbb
inc
dec
les
lahf
jnp
leave
add
fs
das
movsl
jae
popf
inc
push
dec
push
sti
roll
cmpsb
inc
push
cld
or
outsb
js
cmp
ja
inc
loope
jp,pt
mov
sub
xchg
test
push
mov
cwtl
repz
gs
push
xchg
xlat
jge
or
nop
test
jo
cs
push
dec
out
sbb
push
sbb
mov
out
movsl
popf
aaa
and
lds
mov
sbb
xchg
adc
xor
cmp
rcl
sub
or
in
icebp
movsl
test
xchg
adc
mov
pop
dec
popa
rorl
mull
lea
fimull
andb
hlt
mov
dec
xchg
push
leave
fsts
sti
shlb
fbstp
cmc
clc
enter
push
outsl
adc
int3
pop
lret
ret
add
mov
pop
shlb
adc
inc
movsb
sub
jo
ror
lea
mov
sahf
jbe
mov
xor
mov
mov
dec
ret
shlb
cmp
ss
dec
out
push
mov
imul
in
pop
cwtl
xor
andl
mov
subb
xor
pop
mov
lock
dec
addr16
je
out
ljmp
inc
add
into
push
mov
sarb
or
sub
iret
in
dec
inc
jg
data16
add
enter
fwait
mov
repnz
sub
xor
and
cld
ljmp
pushf
xchg
and
insl
out
mov
in
adc
adc
movsb
jnp
je
insb
pusha
fcoml
push
fists
or
xchg
test
mov
rorb
les
xabort
movsl
cmp
mov
inc
mov
pop
mov
lock
or
adc
sbb
pop
fsubrl
daa
insl
repz
push
mov
int
test
xchg
xlat
int
mov
es
and
orl
adc
scas
push
mov
add
mov
xlat
hlt
popa
jb
jmp
inc
jnp
into
jl
fcmovnu
adc
and
jl
ret
test
cmpb
sbb
addb
jge
aam
movsb
or
shl
cmpsl
push
mov
popf
xor
cmpsb
clc
adc
push
lcallw
in
dec
sbb
mov
xchg
pop
shrl
jecxz
xor
pop
xor
cmc
mov
add
mov
je
int3
out
push
xor
xlat
pop
ret
stc
push
and
das
ljmp
sub
pop
aaa
hlt
cmp
je
aaa
inc
mov
mov
inc
sub
movsl
push
loope
inc
push
push
rcll
imul
iret
adc
fdivr
stos
mov
arpl
sti
sbb
ja
ja
dec
ficomps
pop
ret
push
pop
testl
mov
lret
imul
insb
push
jg
rep
push
ljmp
sbb
push
adc
or
mov
fstl
xchg
mov
xchg
enter
pop
push
push
sbb
xor
mov
lea
adc
outsl
sub
and
daa
sub
sti
jmp
fidivs
icebp
aaa
dec
adc
mov
inc
cmp
sbb
dec
mov
or
out
push
add
sub
adc
cwtl
xchg
test
xor
xchg
xlat
push
call
negl
sub
jmp
adc
aaa
daa
jno
stos
lret
inc
jge
fisubrs
inc
lea
dec
test
xor
pop
xchg
xchg
add
fsubs
pop
stos
rcll
cli
mov
idivl
mov
and
repz
lods
cmp
inc
ljmp
dec
mov
bound
jbe
iret
cli
lcall
outsb
fbstp
mov
push
outsl
loopne
clc
mov
push
cmp
cmpsl
outsl
jae
imul
pop
mov
jl
call
mov
xorl
loopne
ret
pop
pop
inc
mov
cmp
cmp
lock
lret
xor
sbb
push
lds
arpl
add
leave
fisttpl
loop
pushf
fildl
lock
add
mov
sub
iret
shrb
aam
jmp
ds
sub
cmp
cmp
pop
adc
inc
int3
jg
mov
xor
enter
pop
pop
sbb
in
or
push
mov
iret
xchg
je
or
xor
in
int3
bswap
inc
insl
pushl
shll
push
clc
cmp
sbb
pfrsqrt
mov
leave
dec
pop
pop
xor
mov
mov
sub
pop
std
clc
mov
xor
xchg
push
adc
mov
mov
jae
push
fnsave
das
add
dec
sbb
cltd
es
nop
mov
lcall
dec
sub
push
fs
fidivrs
jb
int
outsb
cmp
sbb
or
xchg
pusha
xchg
add
push
icebp
lock
fs
shl
dec
stc
sub
ss
jecxz
xor
outsb
mov
icebp
jmp
and
out
push
popa
sub
sbb
push
fwait
adc
popf
lock
push
mov
sbb
adc
cmp
je,pt
xchg
fs
mov
xchg
inc
cmp
and
inc
sub
and
cmc
sti
cmpsb
xor
add
imul
jne
enter
in
int3
xchg
mov
sub
xchg
decb
pop
js
push
test
icebp
sub
andb
jbe
push
ja
sti
cmp
shlb
push
add
pop
cltd
or
scas
xor
shrb
out
sub
stc
cmp
jp
push
icebp
pusha
leave
xor
xor
cmp
lock
xchg
cld
jbe
mov
imul
push
add
das
or
ret
inc
test
add
lea
mov
mov
xchg
enter
out
cmpb
push
std
fcmovnb
fwait
addr16
lods
xchg
shlb
psadbw
jl
and
add
fwait
adc
lods
fidivl
mov
sbb
imul
push
pop
sahf
sti
insl
adc
cmp
jae
jne
jae
mov
fstpl
aam
cmpsb
and
out
andl
or
push
sbbl
std
sbb
cmp
cmp
addr16
xorl
loope
cmp
inc
push
lds
mov
pop
mov
cmp
aad
data16
jno
adc
ret
xor
xchg
add
sbb
aas
lods
and
sub
cmp
inc
push
push
jb
pop
cmp
mov
sbb
imul
mov
cmp
sbb
jge
icebp
repz
push
mov
gs
mov
jge
cwtl
mov
imul
in
test
jl
xchg
rorb
imul
sbb
mov
es
pop
mov
sbb
in
pop
xorb
xchg
push
and
movsb
mov
mov
mov
add
aad
ret
jb
and
out
sub
sub
mov
and
out
push
in
pop
dec
pop
in
pop
and
pop
pop
mov
mov
push
hlt
sbb
cmp
push
pop
push
xchg
pop
sarl
out
dec
mov
sub
insb
faddl
push
xchg
pop
mov
mov
jns
add
loope
xor
loopne
push
movsl
leave
add
cs
movsb
lcall
orl
dec
xor
or
xor
es
push
cmp
mov
clc
cltd
imul
mov
and
mov
cltd
fidivl
cmp
leave
xor
and
or
push
inc
call
test
jns
fisubl
add
scas
pop
or
sti
insb
aas
iret
stc
push
or
lods
and
adc
pusha
mov
mov
jb
or
jg
xchg
cwtl
push
pop
mov
push
push
push
jmp
inc
add
mov
push
mov
inc
leave
push
and
iret
or
mov
and
das
cmp
jmp
jb
mov
mov
das
lahf
shrl
push
out
in
unpcklps
jmp
dec
fistl
popf
sub
or
jbe
sub
add
stc
mov
icebp
cmp
xchg
jmp
inc
inc
mov
inc
and
fbld
stos
rorb
fstpl
jae
sbb
popf
pop
pop
lea
xorb
push
cmovbe
add
pop
ror
dec
imul
dec
insl
lods
ficoms
and
shlb
fwait
insl
push
scas
test
xor
or
lock
outsb
inc
int
mov
fwait
enter
jne
adcb
das
sub
mov
jns
loope
or
xor
out
xchg
andb
inc
jp
ss
test
nop
xchg
iret
shll
mov
inc
and
xor
int
mov
mov
xchg
xor
jp
inc
outsb
add
lods
adc
cmp
mov
and
or
insl
adc
popl
das
outsb
idivl
jbe
cmp
and
add
stos
push
lock
nop
xchg
test
ret
lds
daa
push
inc
jns
repz
mov
outsb
or
cmc
mov
lds
sub
pushw
pop
gs
mov
lret
push
inc
rcl
push
or
test
and
mov
push
lret
in
mov
lds
mulb
daa
mov
cwtl
inc
fistpll
call
hlt
or
inc
sub
and
addr16
clc
xor
imul
ja
movsb
mov
inc
sbb
mov
dec
sub
dec
xchg
lods
cmp
mov
inc
mull
dec
mov
in
test
pop
js
sub
xor
dec
lds
fcomi
insl
or
adc
mov
pusha
mov
inc
inc
add
jne
xor
pop
or
cmp
mov
inc
aam
ret
scas
add
in
or
push
cmpsl
adc
pop
adc
sbb
push
lods
xchg
inc
dec
xchg
cmp
dec
mov
or
inc
and
jp
aad
mulb
test
mov
mov
insb
fdivrl
ss
pop
scas
aad
addr16
mov
andb
test
pop
daa
xlat
out
lods
xchg
out
les
mov
shlb
sub
add
stos
add
pusha
addr16
dec
bound
xlat
movsl
repnz
inc
movsl
mov
mov
sbb
add
jne
jge
adc
ljmp
xor
arpl
xor
push
jbe
mov
cmp
fildll
or
sub
cltd
ja
sbb
imul
adc
dec
mov
arpl
mov
imul
push
cmc
and
stos
push
ret
xchg
movsl
lret
test
lret
rclb
push
imul
ja
test
jle
stos
pop
lret
jle
inc
jmp
fdivl
sub
and
nop
loope
adc
dec
and
jns
adc
popa
enter
inc
loop
add
push
aaa
sub
mov
sbb
mov
pop
sarl
mov
mov
inc
ret
ljmp
sub
insl
loop
mov
jbe
lret
mov
addl
mov
hlt
lock
adc
inc
add
gs
aas
jmp
fwait
pop
or
lods
mov
decl
inc
cwtl
rep
pusha
call
aam
or
jo
adc
add
sarl
pop
xchg
mov
mov
push
aam
pop
add
xchg
imul
leave
push
inc
js
push
or
sub
int3
sub
sbb
mov
lahf
push
test
or
fnstcw
lcall
mov
fs
ljmp
or
cwtl
and
loope
and
outsb
cltd
fldcw
fsubrl
adc
inc
dec
cli
jecxz
lds
push
hlt
aaa
fisubrl
inc
mov
hlt
cmp
ficoml
sub
leave
inc
stos
fmuls
aas
pop
cmpsl
jmp
cmpsl
mov
add
dec
mov
shlb
jge
sbb
subl
dec
mov
popf
std
fs
icebp
daa
leave
out
or
mov
xchg
ja
cld
mov
dec
test
or
or
iret
pusha
or
fdivl
adc
insl
mov
andl
add
jecxz
push
or
add
cltd
push
sub
testb
mov
adc
arpl
pop
and
xchg
push
jae
lret
lock
pop
add
xchg
mov
aaa
shll
subl
dec
cmc
inc
add
dec
out
aam
call
sbb
enter
add
je
int3
jbe
inc
mov
and
test
pop
jp
sub
cmp
int
xchg
adc
sahf
pusha
loope
das
pop
pop
push
dec
adc
sub
pop
cmp
push
enter
icebp
test
mov
jecxz
xor
loop
push
add
and
sbb
sbb
cli
cmp
cmp
loop
push
lcall
jp
ret
mov
add
push
mov
mov
inc
rcrl
dec
xor
xchg
and
data16
pop
test
fmull
mov
and
jnp
out
jg
cmp
cmp
pop
push
jae
mov
mov
jle
sbb
test
adc
mov
add
inc
cmpsb
test
dec
iret
or
xor
stos
jmp
jle
cmp
stos
pop
xchg
and
push
inc
int
leave
adc
jl
dec
inc
push
cld
cmp
insb
iret
leave
movb
clc
fbld
orl
test
ja
xlat
mov
mov
pop
and
iret
loope
je
stos
or
mov
lods
cmp
cmp
mov
push
mov
dec
int
cmp
sahf
jmp
hlt
mov
sbb
mov
adc
arpl
inc
mov
and
lock
mov
test
or
stc
mov
mov
popa
fcoml
xchg
xchg
test
popl
pusha
ss
andl
pop
or
adc
cmc
popa
jecxz
push
cmpb
inc
sahf
outsl
jo
pop
mov
mov
ret
mov
clc
xlat
xor
jge
test
pop
and
sbb
lods
int3
test
adc
or
mov
xchg
dec
dec
repz
rep
add
push
aas
inc
repnz
push
xchg
mov
jne
jb
loop
loop
push
xor
out
imul
stos
cmc
push
sbbb
stos
fidivs
mov
rcrl
jg
fldl
cmp
test
jle
loope
icebp
add
mov
mov
test
aaa
xchg
iret
mulb
cmpsl
pop
ljmp
sub
or
bndldx
sub
add
push
mov
cmc
pusha
mov
lcall
fs
add
add
pop
nop
add
stos
cmpsb
dec
es
mov
pop
cmp
inc
sbb
inc
mov
adc
or
xchg
imul
pop
and
dec
pop
ljmp
mov
xor
stos
pop
jnp
aam
ljmp
in
mov
bound
xor
pop
nop
add
in
ds
das
loop
and
or
mov
stos
add
dec
push
jnp
out
lock
lcall
xor
inc
enter
cli
xchg
sbb
insl
jmp
add
or
inc
divl
ret
inc
es
mov
mov
cld
pop
mov
xor
mov
sbb
mov
pop
in
pop
mov
cld
test
lahf
or
leave
or
scas
lods
ja
cmpsl
scas
pop
inc
dec
jecxz
jne
fdivr
jmp
out
fiadds
enter
mov
pop
mov
sub
dec
add
xor
movsb
xchg
push
mov
out
ret
sub
dec
or
inc
fnsetpm(287
pop
orb
in
and
push
or
push
xchg
xchg
mov
pushf
fcoms
mov
jnp
shlb
adc
pop
out
xor
sub
xchg
and
jge
mov
jo
sub
mov
pop
or
lcall
mov
dec
dec
jecxz
or
push
popf
gs
cmpsl
in
jecxz
add
lcall
scas
stos
jo
sbb
push
pop
in
or
stc
je
in
inc
push
add
inc
into
cltd
jl
arpl
into
cmp
sti
js
xchg
inc
adc
and
push
mov
dec
dec
mov
in
add
or
xchg
cli
cmpsl
pushf
push
repz
out
mov
lea
add
les
or
ds
je
movsl
rcll
adc
mov
sub
int
in
jne
setnp
jne
lods
jo
mov
cmp
lahf
xchg
push
arpl
ds
lea
mov
scas
daa
movsl
lea
or
je
mov
iret
xor
inc
pop
mov
ljmp
xchg
shlb
movsl
lods
adc
mov
jmp
gs
es
test
fisubs
outsl
testl
cwtl
dec
daa
repz
adc
stos
les
xor
push
loope
add
sarl
push
or
lods
aad
jg
push
insl
fildl
jle
sbb
movsb
sbb
mov
mov
dec
push
test
popf
or
xor
jg
mov
icebp
sti
adc
cmp
sbbb
aam
clc
xchg
xchg
dec
in
and
out
std
out
dec
dec
xchg
test
push
cli
adc
mov
fistps
inc
testl
mov
jbe
rol
push
ret
lcall
insl
loopne
cli
sbb
jae
adc
ret
pop
js
insb
xchg
and
jne
ja
mov
xchg
mov
test
loopne
mov
call
data16
clc
lock
xchg
mov
xchg
mov
push
aaa
and
repnz
je
sbb
mov
mov
sbb
loopne
loope
jns
nop
cmpsl
mov
dec
flds
psrlw
lods
cli
xor
ficomps
ret
and
mov
push
jb
or
dec
sti
push
push
into
xor
aas
jbe
sub
mov
data16
push
pop
ds
js
cld
add
mov
mov
mov
cwtl
lret
out
addr16
xor
stos
loope
jge
pop
mov
icebp
movsl
repnz
lds
repnz
gs
cmpsb
xchg
cltd
mov
sub
mov
add
mov
adc
mov
xor
shlb
repnz
add
jl
xor
andl
pushw
jnp
push
enter
rcr
cli
or
dec
and
pushf
clc
or
mov
mov
inc
sub
enter
rorl
movsb
mov
sub
sbb
aaa
movl
mov
aaa
outsl
scas
stos
loope
ja
outsl
push
out
push
sub
xchg
ud2
stc
and
fsubs
jle
or
popf
xchg
inc
push
out
icebp
and
add
push
mov
cltd
xor
iret
jmp
mov
ret
xchg
lret
iret
pop
test
lds
pushf
push
lret
jnp
dec
xchg
imulb
jl
outsl
loopne
sub
hlt
xchg
xchg
push
inc
xor
sub
dec
cli
pop
fwait
mov
cli
pop
repnz
or
mov
rorl
push
test
jmp
cmpsl
mov
insb
cmp
add
and
sbbb
out
adc
pop
incb
fistpll
add
jmp
dec
inc
test
or
pusha
sbb
cmp
decl
test
xor
add
dec
inc
cmp
jmp
sub
push
imul
lcall
push
jle
mov
pop
push
js
sub
stc
sbb
pop
jbe
sbbb
or
cli
lret
mov
add
push
ds
pop
xor
pop
sbb
fbstp
test
sub
sarl
icebp
lret
nop
enter
ljmp
mov
cs
icebp
cmpsb
sbb
lds
cmp
add
cmp
andl
div
pop
stos
mov
dec
and
inc
sti
jae
adc
inc
hlt
out
imul
stc
repz
adc
stos
dec
push
push
pop
jb
ror
cmp
dec
inc
out
sbb
mov
scas
jg
jmp
hlt
icebp
popa
push
cmp
popf
push
sbb
jbe
push
insl
mov
mov
or
call
adc
stos
jg
pop
cmp
xchg
mov
cld
out
mov
loop
jmp
dec
adc
repz
aam
bound
enter
in
out
jle
popf
imul
inc
push
out
das
roll
mov
xor
mov
sub
lahf
adc
mov
movsb
dec
and
xchg
out
sub
jl
or
lock
jl
sub
insl
mov
negl
in
outsb
stos
and
and
popf
dec
lods
jo
push
sbb
repz
pusha
test
stc
ja
mov
popl
mov
mov
or
push
fs
or
mov
push
xchg
aaa
pushw
shlb
nop
adc
push
jae
mov
cmpsb
shl
movsb
loop
shl
popa
push
xchg
xor
out
jo
mov
ds
test
mov
xchg
rcrb
add
mov
dec
mov
mov
push
pop
jle
inc
clc
out
pop
lcall
xchg
js
movsl
out
in
ja
or
aaa
enter
jmp
sbb
mov
push
xor
xchg
aam
je
dec
ss
xor
or
mov
dec
sbb
sbb
and
mov
mov
or
cmp
insl
cli
jo
jge
into
dec
sbb
jne
push
orl
jmp
inc
aas
pusha
adc
jns
or
gs
in
call
mov
sub
push
into
pop
push
jge
sahf
mov
ljmp
das
cwtl
mov
cmpsb
jne
jne
add
mov
mov
mov
stos
adcb
mov
pop
jge
push
mov
mov
rolb
ljmp
ror
inc
iret
aad
and
subl
sbb
fcomps
dec
mov
dec
jo
sbb
pop
cmc
sub
popa
dec
mov
mov
mov
repnz
inc
mov
lcall
loop
pop
mov
rcll
hlt
push
inc
inc
jnp
and
int
fidivrl
pop
inc
jne
dec
mov
sub
and
xchg
xchg
push
ds
mov
inc
sbb
sbb
popf
iret
loope
mov
popf
int3
pop
adc
push
pushf
cld
pushf
ja
hlt
cmp
test
jmp
mov
jbe
dec
mov
insl
repnz
ljmp
fcoms
inc
inc
das
cmp
xchg
insl
sbb
bound
or
shll
das
dec
sahf
adcb
pop
arpl
lds
cli
jecxz
clc
jp
adcb
mov
and
pop
neg
daa
push
mov
or
adc
xchg
mov
out
call
test
into
mov
pusha
cmp
outsl
xchg
subb
dec
push
push
inc
movsl
insl
fadd
xchg
sub
lock
jge
sahf
outsl
imul
jbe
aas
cmp
or
repz
mov
cli
mov
mov
jl
dec
test
cmc
loopne
orb
divb
or
enter
popf
adc
pop
adc
pop
xchg
pop
rcrl
clc
sub
xchg
add
mov
nop
xor
cmp
rcll
lret
fisubrs
jmp
ret
data16
shll
cmc
sub
mov
cld
orb
xlat
cmpsl
sbb
movsl
xor
in
push
pop
rorl
push
lahf
aaa
jbe
add
pop
inc
test
cmp
pop
les
mov
lahf
in
scas
add
imul
jge
loop
ret
xchg
or
arpl
pushf
or
ja
in
leave
sahf
cld
or
fsin
mov
arpl
arpl
rorb
or
pushf
push
jne
aaa
push
push
inc
scas
xchg
xlat
adc
pusha
push
add
ds
loopne
in
outsl
cmc
out
jb
aad
adc
xor
loopne
ljmp
dec
arpl
push
hlt
hlt
sub
mov
leave
jnp
mov
cmp
dec
mov
les
add
nop
push
sub
mov
pop
adc
and
dec
cmp
ret
push
aaa
iret
lret
daa
pop
sti
ret
mov
lahf
push
inc
xchg
fstpl
lods
sub
add
lahf
notb
jg
xor
pop
cmp
add
cmpsl
adcb
enter
loope
test
test
adc
jbe
or
mov
shrl
mov
or
mov
repz
push
pop
push
and
mov
ud1
lahf
rcrl
mov
js
out
fnstenv
dec
dec
dec
leave
loopne
jmp
adc
stos
aam
pop
push
pop
dec
and
mov
push
lret
sub
fwait
cmpsl
or
sti
outsb
jg
inc
shrb
out
cli
xchg
dec
jnp
xor
mov
mov
je
aaa
loope
add
dec
jmp
add
and
or
ja
pop
leavew
push
lds
test
xor
lock
adc
cld
gs
fsubrs
fmull
sarl
xor
xchg
lahf
cmovs
mov
divb
push
add
mov
test
lret
notl
pusha
sub
or
neg
push
add
pop
mov
push
push
pushf
push
sbb
sub
sbb
std
dec
cmp
dec
insb
neg
pop
push
daa
loopne
imul
pop
push
fsub
aaa
ja
mov
jl
icebp
mov
fwait
out
push
mov
sbb
popf
stc
insb
nop
cmp
xor
and
xor
pop
out
aam
into
jmp
fmuls
es
movsb
jg
aas
insl
fldcw
fucomip
pusha
in
out
and
adc
sub
sub
outsb
add
gs
jae
out
rcl
jmp
push
push
int
rcrl
mov
mov
mov
push
cmp
adc
mov
mov
fs
mov
jo
sub
jae
dec
testl
in
daa
pop
push
in
inc
js
out
insb
push
pop
sbb
shl
hlt
sub
sub
repz
pop
adc
cmpb
push
fcmovb
data16
out
dec
jecxz
int
push
rorb
mov
xor
inc
mov
bound
fisubs
inc
dec
xor
subl
rorb
jl
pop
and
pusha
inc
sbbb
jp
add
mov
cli
dec
dec
jbe
insb
or
nop
or
pop
jecxz
fdivrl
lret
out
jp
and
xchg
inc
sub
mov
cmp
in
mov
arpl
fmull
inc
lahf
lock
push
adc
test
popa
mov
outsl
dec
mov
cmp
dec
cmp
pushf
inc
pop
inc
faddl
scas
rolb
inc
je
xor
xor
mov
add
lock
cwtl
xchg
scas
popf
aaa
hlt
mov
mov
mov
jle
add
inc
arpl
pop
or
mov
jns
jmp
or
pop
adc
repz
enter
mov
jnp
push
inc
nop
subl
fsubr
out
inc
mov
rcrl
adc
gs
dec
mov
out
sbb
push
dec
mov
loopne
insb
pusha
adc
ret
cli
cwtl
inc
mov
or
mov
faddl
jecxz
mov
cmpsb
adc
inc
in
ret
gs
xchg
push
neg
inc
mov
jne
nop
call
test
add
mov
andb
add
xchg
mov
and
xor
or
jbe
inc
inc
jbe
sbb
push
mov
xor
sbb
or
fidivrs
dec
stos
pop
xlat
mov
lods
mov
lock
xchg
fwait
sbb
leave
fstpt
or
fmulp
dec
and
push
bound
pop
jbe
test
icebp
imul
cmpsl
inc
jmp
arpl
xchg
lcall
pop
in
sub
out
sbb
mov
clc
hlt
mulb
lea
mov
lret
pop
cmpsb
pop
shlb
iret
loop
xor
int3
mov
xchg
std
mov
in
mov
lods
push
jge
ljmp
imul
push
bound
outsl
jmp
sbb
sbb
push
lahf
jmp
add
pop
and
inc
and
sub
xchg
shl
jnp
sbb
mov
lcall
and
addr16
adc
test
mov
addb
aaa
inc
into
ror
mov
lcall
cmc
fisubrl
inc
xor
cmc
inc
cmpsl
mov
dec
cmp
fisubrs
push
jp
out
cltd
or
mov
popf
aas
jnp
push
out
imul
insb
or
push
mov
adc
and
or
inc
add
cmp
iret
fnstsw
mov
xchg
inc
fdivrl
outsb
aam
mov
dec
in
jo
int3
sub
and
pusha
push
fsubl
cmpsb
sbb
and
dec
shrl
dec
rcll
mov
fisubrs
lret
sti
stos
out
fisubl
xchg
sub
test
xchg
sahf
arpl
inc
xchg
mov
daa
stos
mov
sub
sbb
icebp
push
pop
mov
sub
pop
jmp
int3
mov
or
mov
xchg
xor
sbb
inc
pop
std
adc
idivl
pop
jns
in
das
popf
mov
in
je
pushl
dec
mov
cli
lret
xor
dec
loope
test
leave
popa
xor
loop
adc
mov
es
mov
mov
arpl
and
pop
out
jge
es
push
cmp
sbb
inc
or
adc
inc
out
loopne
mov
rcrb
pop
mov
mov
enter
fcmovbe
add
mov
lcall
pop
out
add
aad
or
js
xor
and
aad
rorb
out
add
ljmp
or
inc
sbb
mov
mov
sub
inc
fisubl
pop
cmp
test
mov
loope
fisttpl
and
loop
dec
mov
add
jns
ljmp
mov
or
push
mov
pop
les
divl
mov
ficomps
pop
sarb
inc
into
fucomi
inc
test
mov
mov
imul
inc
or
roll
jae
or
aam
mov
push
pop
add
xor
push
add
sbb
nop
hlt
adc
in
addr16
sbb
adc
das
dec
sti
jbe
cmp
fs
pop
push
mov
hlt
mov
push
jb
test
jne
pop
imul
dec
and
stos
jl
je
sti
pop
int3
minps
jo
and
pusha
fs
rolb
je
or
mov
repnz
scas
jmp
je
push
mov
inc
pop
push
dec
sub
out
cmpsl
push
xchg
mov
jmp
adc
icebp
lods
int3
jne
das
push
mov
insl
jno
inc
outsb
jo
fbstp
scas
pop
push
or
fistpll
jmp
ljmp
adc
leave
fwait
jne
xor
mov
adc
add
aam
mov
add
fwait
jns
ljmp
lods
add
outsl
arpl
xor
addr16
sub
outsb
fisubrl
dec
cs
inc
fnstcw
pop
mov
mov
mov
lock
pop
shl
call
ret
lret
je
ds
mov
out
mov
add
add
inc
and
test
ret
pop
mov
or
adcl
jecxz
xor
scas
fcoms
fsubr
rcrl
xor
test
out
push
sbb
mov
and
pop
jmp
adc
sbb
mov
int
jbe
mov
mov
or
fdivs
or
mov
adc
mov
inc
push
icebp
in
xchg
inc
aas
mov
aad
stos
enter
fadd
rol
repnz
aas
stos
or
inc
pop
adc
ret
lods
jg
aam
dec
xlat
push
je
call
jnp
jmp
xchg
mov
aam
pop
cmp
jbe
xlat
jo
rcl
dec
hlt
dec
aas
xchg
cmp
pop
out
in
mov
or
sbb
lds
mov
ljmp
repz
lcall
imul
lods
push
xor
xchg
mov
jp
fcmovnbe
jmp
cmc
jmp
mov
enter
insb
das
jo
das
dec
loope
xchg
mov
push
ror
les
out
inc
rcrl
movsl
movb
inc
adc
lahf
dec
mov
cmp
ds
xchg
push
adc
push
data16
xlat
add
adc
pop
clc
andl
arpl
adc
xchg
sarb
fwait
and
and
jo
sbb
inc
clc
fnstenv
mov
lret
sbb
mov
orl
ss
xchg
and
std
mov
mov
adc
add
gs
jmp
xor
cmp
enter
aam
out
push
insl
out
ror
fucom
cli
pop
fstp
inc
jbe
enter
adc
xor
inc
fidivl
fwait
push
jnp
and
test
sbb
jmp
sahf
lret
jnp
ja
sub
fimuls
lock
aaa
mov
jo
jmp
les
jne
in
dec
add
mov
int3
scas
push
cli
lds
mov
iret
ds
push
jb
je
in
mov
ljmp
jb
fists
dec
rcr
push
dec
rorb
mov
jo
lock
cmc
movsl
incb
cmpsl
aas
pop
int
sbb
scas
dec
sub
jns
jnp
add
sarl
insb
test
fcmovnu
enter
cmc
mov
sub
repnz
jns
mov
lret
fs
stc
ds
fwait
mov
pop
scas
sub
jge
and
jo
pop
lds
jnp
pop
mov
rol
ljmp
sbb
gs
loop
xchg
stos
mov
adc
ds
fistpl
fdivr
sub
loope
xchg
add
push
push
inc
ljmp
push
test
jp
mov
int3
arpl
movsb
lods
fimull
and
mov
sub
push
mov
jne
dec
stos
cmp
add
clc
jmp
xor
out
sbb
sbb
leave
add
dec
dec
pop
fwait
shll
dec
les
lds
add
in
fwait
xchg
test
clc
add
pop
imul
sti
or
shlb
mov
adc
into
rolb
or
xor
testl
mov
mov
push
cmpsl
scas
jnp
test
aaa
mov
sub
fucom
loope
repnz
mov
or
cmp
mov
sub
jb
orl
mov
push
mov
cwtl
add
out
out
sub
hlt
decb
pop
scas
cld
or
or
lret
lock
ljmpw
lods
test
sub
mov
push
jnp
mov
push
jno
xor
sub
mov
test
fs
cmp
sub
mov
fldcw
rol
push
mov
ret
loop
pop
test
adc
in
jmp
inc
sbb
daa
rcrl
mov
push
hlt
mov
into
jg
add
xor
push
pop
lret
or
push
or
or
inc
and
sbb
or
push
jp
pop
or
orb
mov
add
stos
lret
add
mov
push
in
into
and
fstpl
push
xor
mov
adc
int3
sbbl
pop
xor
add
testl
mov
pop
adc
sbb
cmp
hlt
popf
ljmp
cmp
jmp
fldcw
int3
xchg
cmp
jge
je
push
idiv
loop
loopne
outsb
test
lahf
bound
pop
xchg
cmp
mov
xor
test
bound
test
out
mov
data16
xorb
jmp
push
mov
cmp
testl
or
outsl
jae
ret
and
scas
or
out
rolb
lahf
sub
lds
add
divb
add
stos
and
jns
sub
test
icebp
xor
xchg
xor
cwtl
cmp
imul
loop
cmpsl
xor
mov
fldt
or
and
mov
mov
bound
outsb
les
sahf
sbb
add
scas
add
insl
imul
jp
jmp
insl
xchg
mov
mov
lret
cmp
cli
dec
xlat
decb
push
jmpw
je
inc
inc
pusha
pop
dec
nop
mov
cmpsb
mov
pop
aam
jle
dec
scas
in
xor
fmuls
sub
fiadds
mov
rcrl
adc
lahf
and
lods
inc
xchg
in
subl
fistpl
pop
xor
cmpsl
mov
sbb
inc
test
idivb
fstps
sar
ljmp
pop
jae
lods
data16
xor
lcall
in
repnz
sbb
adc
int
rcrl
inc
test
pop
jno
push
inc
sub
and
or
sti
clc
insb
incl
sub
inc
xchg
add
cmp
gs
lock
cli
clc
insl
inc
or
dec
sti
out
cmp
mov
sbb
ds
out
pop
add
mov
stos
jnp
hlt
daa
jne
xor
mov
out
stc
decb
adc
out
dec
mov
mov
jmp
sti
push
pop
fldt
inc
shll
pop
dec
mov
push
out
pop
test
movsb
sub
xorl
scas
loope
scas
dec
call
shlb
add
movsb
xchg
mov
push
push
and
std
mov
js
aaa
xchg
jmp
hlt
add
inc
or
cli
cwtl
pop
push
enter
dec
lret
cltd
and
loope
aam
inc
stc
cmpsl
call
sarl
cmpsl
mov
mov
pop
cmc
mov
lods
mov
cmp
sti
test
add
mov
lret
enter
mov
aam
sub
mov
into
mov
sbb
lret
sub
ret
xor
pop
inc
lods
jge
test
push
lods
adc
hlt
data16
sub
push
sub
popa
jae
lock
sbb
pop
jmp
mov
loop
or
and
dec
enter
mov
out
add
mov
xchg
and
push
and
sbb
mov
clc
xchg
pop
fs
dec
push
mov
mov
test
jg
mov
pop
add
into
in
rdmsr
add
sti
in
aam
dec
inc
mov
jl
out
cmp
and
sub
leave
cltd
push
nop
jp
stos
and
aad
ret
adc
and
mov
movb
subl
mov
xlat
imul
ds
out
movsl
in
shlb
ret
pop
jge
inc
hlt
lret
add
inc
insl
mov
sub
pop
sub
test
scas
mov
rcrb
iret
mov
add
push
inc
in
test
push
out
jo
sbb
inc
jmp
dec
push
out
fisttps
adc
adc
cmp
mov
adc
xchg
aaa
mov
push
inc
mov
das
fcomi
add
or
dec
xchg
rcrl
sub
push
mov
stos
or
lods
je
daa
cs
insl
pop
add
xor
push
xchg
outsl
sub
push
dec
and
pop
jge
loope
jne
jb
lds
mov
push
and
xchg
or
nop
lods
lret
and
add
dec
jbe
adc
mov
inc
outsb
add
lea
mov
loopne
push
cmc
imul
test
pop
sbb
jb
sahf
sub
inc
adc
pop
inc
mov
pop
push
push
push
bound
jl
mov
push
push
sbb
mov
push
insb
movsl
sub
jae
sub
cmp
test
adc
movsl
cltd
push
les
sahf
pusha
push
mov
std
jnp
mov
inc
push
cs
jnp
lds
mov
xor
out
jg
lock
and
cmc
mov
xor
sub
xor
int3
call
push
mov
and
ljmp
push
stos
xchg
outsb
xor
sub
ret
lahf
sub
rcll
push
sbb
int3
std
fnstenv
addl
xchg
jecxz
test
sarb
push
push
and
sub
ljmp
stos
and
lds
popa
in
ja
push
test
cs
leave
out
popf
pshufw
imul
lret
add
mov
and
out
xchg
cmpsb
je
aas
mov
inc
loopne
lods
xchg
ret
aam
add
push
rcrl
or
xor
add
push
push
xchg
dec
scas
loope
jbe
xor
mov
out
rcr
sub
adc
sbb
enter
inc
sub
mov
lea
xchg
icebp
mov
jg
test
sub
add
cmc
cmp
or
mov
mov
xor
jbe
stos
pop
jle
and
stc
leave
int
gs
dec
imul
int3
je
xchg
lcall
adc
mov
cmp
or
lret
in
xchg
xchg
add
or
stc
les
jmp
outsb
xchg
test
push
decl
lret
cmpb
pxor
jnp
in
fsubl
and
jno
mov
sahf
mov
dec
sbb
xchg
push
push
movsl
daa
xor
mov
mov
jne
cwtl
enter
sub
cmpsb
ror
ljmp
pop
xlat
mov
test
pop
ljmp
lods
dec
or
adc
or
pop
push
imul
lock
lahf
and
dec
add
add
fsts
xchg
ds
xlat
mov
cmpl
faddl
xchg
cld
ret
sbb
cli
insb
pop
repz
rolb
or
sub
cmp
sbb
dec
inc
std
push
jbe
cs
push
jo
inc
mov
push
sub
jnp
dec
and
xor
pusha
mov
sbb
push
cmc
pop
jmp
ret
xor
clc
repnz
aaa
xor
xorl
mov
aad
std
mov
rcrl
loopne
inc
dec
push
lret
int3
repz
insl
iret
aam
cmp
push
mov
mov
loop
push
lods
lods
dec
ja
testb
icebp
pop
push
jne
mov
cmp
or
mov
sti
jecxz
sarl
xchg
outsb
test
clc
xor
xor
in
jg
sub
into
xchg
xor
adc
xchg
popa
pop
leave
loopne
and
pop
clc
js
sbb
mov
cwtl
je
adc
jmp
adc
or
push
in
shrb
or
sub
aad
icebp
add
test
imulb
jae
enter
sub
push
and
sub
mov
push
popa
mov
loope
stos
sbb
lret
stc
lds
not
mov
ret
popa
mov
out
mull
fnstsw
cs
adc
out
shl
add
jecxz
cmp
repz
test
adc
pop
insl
add
sub
test
lret
les
add
dec
xchg
push
aaa
scas
inc
push
loopne
push
out
fiaddl
dec
add
js,pt
lods
add
inc
test
mov
lret
push
cwtl
cmp
ret
inc
and
dec
aam
out
jne
pop
xchg
shlb
xchg
add
leave
inc
lret
rorl
dec
or
sub
inc
jnp
ja
jo
dec
test
dec
push
rcr
xchg
cmp
xchg
cld
jle
inc
scas
int3
sbb
test
jge
rcll
jmp
cmc
inc
cmpl
mov
mov
xor
adc
test
adc
and
jecxz
xchg
daa
lret
xchg
mov
jp
mov
mov
push
mov
lcall
adc
gs
inc
decl
rolb
adc
xor
pop
les
lds
jno
mov
jbe
call
mov
jno
and
add
iret
fiadds
shll
test
inc
cltd
mov
stos
adc
int3
shrb
jnp
out
pop
adc
jp
stos
sti
pop
and
add
cmc
and
mov
out
inc
cs
dec
add
adcl
mov
bound
addb
mov
push
and
mov
iret
dec
loope
in
clc
push
cltd
cmpsb
mov
push
test
sbb
inc
mov
jb
xchg
mov
ficoms
or
add
and
mov
jge
push
push
lret
adc
mov
sbb
std
cmc
fucomip
sub
add
loop
add
jns
es
jo
popa
pop
jno
inc
and
shll
insb
xor
mov
fwait
sahf
out
cwtl
subl
iret
sub
fwait
ret
or
mov
xchg
ret
mov
inc
cs
andl
aas
xchg
pop
hlt
push
repnz
mov
or
mov
insl
fbld
ss
stos
das
shlb
cmpsb
adc
and
sahf
lcall
sahf
mov
mov
repz
std
shll
inc
jg
xchg
or
icebp
and
test
jg
cs
sub
icebp
jl
shl
hlt
pop
xchg
fstpt
in
stc
sub
scas
hlt
mov
inc
icebp
call
cmpsb
loop
fisttpl
pop
sarb
jne
and
pusha
hlt
cmp
and
mov
mov
stc
mov
mov
nop
inc
rcrb
mov
jb
adc
movsb
xchg
fsubp
sti
jecxz
aam
arpl
cmp
inc
sahf
dec
fisubs
fsubs
mov
outsl
test
cmp
les
cmp
or
adc
mov
mov
les
adcb
mov
lret
inc
adc
ret
xlat
into
xchg
int3
pop
mov
inc
scas
and
cmc
scas
sbb
in
in
mov
rcrb
lret
out
das
adc
arpl
insb
adc
in
or
stos
in
cmc
pop
pop
xchg
cmpsl
inc
test
push
cmp
cli
pushf
cmp
push
mov
push
cmp
sarb
sbb
in
mov
mov
dec
cs
sbb
jg
jbe
and
mov
mov
fldl
jmp
push
and
push
and
mov
push
stc
xchg
pop
in
scas
es
ds
xor
mov
icebp
lock
xlat
mov
in
sbb
xorl
mov
fucom
popf
push
in
clc
sub
call
into
cld
cld
into
sub
shr
or
ja
cmp
lods
sub
dec
loopne
fnsave
add
das
push
lock
bound
rcl
popf
dec
dec
push
add
xor
mov
push
int
xor
jb
dec
inc
mov
inc
imul
jne
loop
xchg
cmc
fisttps
mov
and
jl
filds
inc
int
dec
xchg
mov
xlat
ljmp
daa
lret
pushf
mov
pushf
dec
outsl
jno
mov
mov
loope
add
pop
test
pop
adcl
arpl
mov
and
cmp
nop
cmp
in
add
mov
sbb
cmp
inc
arpl
mov
imul
push
jmp
das
jbe
jo
sub
in
sarl
mov
rcll
inc
cmc
cltd
or
dec
out
jle
repnz
icebp
fstps
mov
add
cmpsb
stc
cwtl
and
test
add
xor
inc
repnz
adc
sbb
mulb
ret
cmp
loope
cmpsl
dec
loop
or
sub
and
xchg
mov
mov
mov
jnp
inc
mov
std
rcrl
movd
aas
insl
cltd
adc
mov
and
add
dec
dec
and
addb
mov
js
dec
or
push
push
or
jns
or
shl
and
xchg
jns
xchg
out
cmp
loopne
movsb
xor
inc
or
xchg
mov
shl
push
sub
pop
test
stc
pop
adc
mov
mov
push
inc
dec
icebp
cvtps2pd
std
and
sub
mov
out
adc
mov
imul
sbb
std
push
mov
loope
xlat
or
loopne
bound
and
xchg
inc
sbb
pop
insb
imul
cwtd
dec
push
daa
rcrl
jne
ja
les
lahf
pop
jnp
ret
test
xchg
xor
jmp
js
iret
hlt
stos
adc
sub
aas
decl
sahf
in
jns
neg
mov
int
lahf
cmp
arpl
shrl
adc
push
sub
inc
out
stos
bound
ret
lcall
pop
scas
rorb
lock
hlt
int
xchg
testb
push
xchg
mov
cmp
lret
sub
mov
std
sbb
aas
ss
cmc
sub
popf
adc
ss
add
hlt
fsubrs
mov
in
les
loope
sbb
dec
push
movsb
iret
fsub
adc
ljmp
push
es
fistpll
cs
lds
pop
push
and
rcr
mov
push
out
loope
fptan
push
and
ds
mov
outsl
aas
call
fadd
dec
fisubrs
jnp
inc
pop
roll
test
add
shll
xor
movsb
sbb
je
pop
cmpb
lods
mov
push
lds
add
sets
fcmovb
js
and
stos
mov
adc
mov
scas
dec
dec
jnp
jns
stc
push
mov
test
leave
pop
test
push
sbbb
fwait
in
movsb
repnz
nop
les
aaa
fdivrs
sub
and
push
inc
orb
ds
aad
xchg
cmp
insb
repz
stos
data16
pop
cmpsb
sub
int3
xchg
and
pushf
cmc
aam
jno
adc
sbb
or
fisttps
or
ds
lret
ja
jle
dec
and
lahf
lods
mov
pop
sbb
xchg
push
cli
rcrl
in
dec
stos
push
sbb
imul
out
mov
sbb
pop
and
adc
subb
fs
aaa
xchg
loopne
fcomip
cmp
cwtl
and
dec
sbb
fmuls
push
mov
ret
sahf
ja
gs
in
mov
push
push
and
in
fnsave
pop
xor
cmpsl
and
es
pop
jnp
call
mov
sbb
pushf
xor
pop
mov
cmc
leave
inc
leave
leave
push
pop
dec
jge
mov
push
sub
cmp
push
xchg
adc
xor
adc
inc
cmpb
ja
jb
jmp
rclb
jmp
xor
add
push
loop
fdivr
inc
mov
pop
movsb
pop
cmp
insb
sbb
addb
sub
mov
or
into
push
mov
inc
mov
aad
xor
int
testb
addr16
and
fdivr
cs
or
cmpsb
adc
push
inc
das
sahf
cmp
pop
mov
push
mov
inc
cli
mov
sarb
cld
mov
shrl
stos
aaa
vpaddd
rcr
divb
adc
repnz
ret
in
daa
jbe
and
pop
movsl
mov
fs
xor
ss
arpl
test
or
lret
dec
push
imul
fnstenv
xchg
mov
push
aaa
test
push
push
rorb
pop
pushf
jno
jle
test
out
testb
test
loopne
lret
in
sub
popf
pop
pop
out
mov
mov
stos
cli
loope
cld
mov
jns
push
test
jne
movsl
cli
adc
shl
lods
or
sub
out
int
and
jmp
cltd
push
ja
das
addr16
dec
bound
dec
rcll
stos
cs
sbb
fsubrl
into
arpl
mov
jp
and
mov
cmp
mov
xor
and
inc
stc
loope
jne
out
pop
scas
mov
push
push
pop
and
fsubs
jnp
pop
or
mov
loope
cwtl
xor
inc
imul
adc
repz
mov
mov
jp
jg
movsb
adc
mov
lret
xchg
int3
sbbl
mov
gs
sub
fs
mov
int
sbb
jo
dec
push
daa
adcl
popf
mov
xchg
sbb
ret
push
xchg
insl
xor
lret
mov
imul
pop
jcxz
push
mov
dec
pushf
jae
push
lds
adc
jne
lods
loop
push
dec
and
dec
outsb
shl
sub
xor
xchg
hlt
js
or
xor
lret
pop
mov
sub
mov
popf
jp
cmp
dec
push
in
pusha
sbb
insb
mov
out
mov
aaa
cwtl
mov
push
jb
push
push
sub
mov
dec
scas
mov
ja
lea
pop
lahf
mov
push
fsubrl
imul
xor
xchg
xor
cwtl
jnp
xchg
mov
mov
mov
fidivs
sbb
subb
orb
les
cmc
das
jnp
cmpsl
shlb
xchg
fists
imul
out
test
mov
adc
mov
fisttpll
jg
push
pop
adc
arpl
into
mov
add
fs
xchg
or
mov
pop
fs
jmp
jb
push
test
and
jg,pt
cld
cltd
cmpsl
xor
jo
cmc
fisubs
stos
jmp
pop
pusha
int
pushf
loopne
test
jne
push
inc
push
cmp
ja
push
sbb
test
xor
notl
aas
aad
xchg
scas
add
xor
mov
faddl
rcll
mov
or
cmp
loope
iret
or
nop
test
std
out
fisttps
jnp
idivl
outsl
outsl
in
repz
das
ljmp
and
in
insb
js
out
pop
and
jno
xor
or
cmc
repz
mov
arpl
and
stos
sbb
push
and
mov
adc
sub
aam
das
or
push
adcb
and
mov
sbb
mov
cwtl
adc
fbld
fnstenv
negl
xor
jno
rcl
xchg
insb
roll
jne
inc
jae
test
imul
js
sti
in
push
adc
xor
sbb
icebp
aaa
push
xchg
mov
ds
js
loop
outsb
lahf
add
adc
iret
je
jae
cld
xlat
mov
inc
sbb
lahf
xor
lds
mov
cmp
cld
inc
cli
mov
xor
adc
loope
adc
into
jns
push
leave
popa
dec
lcall
ljmp
out
je
adc
filds
pop
jae
inc
imul
test
je
sbb
cwtl
fiadds
xor
or
pushf
mov
push
cltd
sub
xor
add
pop
divb
pop
sti
mov
pop
jp
leave
fdivp
push
inc
cmp
mov
add
in
mov
xchg
lcall
movsb
mov
outsb
jecxz
add
bound
cmp
ja
insb
mov
mov
mulb
jnp
movsb
loope
test
mov
push
cmp
push
fisubrl
das
nop
adc
imul
cmc
hlt
push
and
push
ficoms
xchg
xor
es
ja
call
arpl
aad
mov
inc
andl
iret
cld
push
mov
push
pushf
mov
cwtl
push
lock
bound
insl
mov
mov
js
addr16
cld
lret
pop
push
and
cwtl
cmp
popf
add
jae
lods
and
adc
mov
mov
xor
mov
lods
fidivs
out
xchg
and
cmp
test
pop
repz
iret
cmc
jge
into
sbb
rclb
scas
jnp
test
rcr
mov
jmp
int3
fsts
cld
push
bound
std
dec
dec
pop
pop
arpl
lret
cld
or
mov
roll
stos
enter
cmc
notl
jg
std
pop
pop
mov
ds
push
jmp
inc
fdivrl
pop
fiadds
andb
and
fs
and
stos
nop
mov
xchg
push
push
pusha
cmpsb
mov
scas
push
adc
loope
bts
ljmp
push
jle
mov
rolb
test
pop
jecxz
xor
or
jo
repnz
sub
inc
jnp
push
push
pushf
mov
sub
push
sbb
sbb
jno
adc
and
adc
push
sti
push
jnp
push
jp
xchg
das
das
aas
sub
push
xor
es
add
shlb
jmp
push
sbb
mov
xchg
fs
dec
mov
rcl
pop
xor
rolb
lods
shll
stos
push
dec
jl
xchg
jge
ficoms
mov
add
xor
rcrl
pop
push
nop
adc
sub
insl
js
xchg
mov
mov
sbb
call
mov
mov
sarb
xlat
ss
pop
lret
xchg
pop
sbb
lcall
xor
ret
ss
cmp
fs
add
pop
or
dec
adc
mov
jle
dec
popf
mov
cmp
nop
pop
stos
mov
pop
adc
mov
cmpsl
xchg
mov
dec
adc
inc
add
fbld
cmp
push
xlat
or
cmp
addr16
mull
inc
test
test
fisttpl
sub
dec
cltd
ss
cwtl
jmp
xchg
call
movb
sbb
lock
iret
pop
mov
popf
ficompl
xlat
mov
movsb
int
das
pop
sbb
xor
jb
push
dec
jbe
xchg
inc
pop
pop
fdivl
repz
arpl
add
clc
inc
inc
repz
scas
mov
and
pop
imul
ja
cmpsl
aam
clc
mov
ss
lcall
xchg
fcoml
sti
lahf
outsb
subb
adc
and
and
jle
push
ror
cli
sbb
cli
lock
mov
repz
test
test
sbb
push
jmp
push
lock
js
js
xchg
pushf
ret
lods
cmc
push
xchg
loop
adc
lret
repnz
lods
pop
enter
adc
outsb
xor
add
mov
cld
icebp
fnsave
push
cmp
mov
dec
es
cmpsb
aam
add
push
dec
stos
pushf
xchg
jnp
and
adc
outsl
mov
jne
int3
test
pop
es
cli
inc
mov
add
mov
sbb
and
andb
movhps
mov
sbb
push
cmpsb
daa
mov
call
fsts
out
xor
mov
jmp
mov
and
movd
cmpsl
in
aas
jecxz
xor
in
dec
adc
out
or
jnp
aas
pop
enter
dec
leave
push
into
js
out
push
aam
movsb
pop
in
jno
mov
pop
insl
fadds
sub
shll
sub
bnd
adc
or
cwtl
mov
mov
in
cmpsl
push
das
scas
inc
jg
leave
xchg
adc
inc
roll
jp
inc
aas
outsb
ret
stc
subl
outsl
cmp
es
adc
clc
sbb
sbb
fnsave
xchg
mov
mov
es
psraw
sbb
jno
mov
je
lods
push
xor
mov
lahf
insb
mov
out
sahf
in
imul
into
andb
rorb
cmp
sbb
popa
cmp
mov
dec
lahf
xlat
scas
mov
push
aad
push
and
sub
adc
or
stos
popa
arpl
hlt
daa
rcrl
pushf
pushf
jbe
jnp
adc
popa
and
push
insb
ror
inc
outsb
cmp
mov
push
call
push
icebp
sbb
fimull
das
test
aad
shll
xlat
pop
inc
outsl
scas
pop
xor
or
sub
add
inc
mov
clc
out
or
out
pop
rcll
cmp
add
add
test
mov
ja
aaa
push
adc
outsl
aaa
mov
in
cmp
or
jle
mov
xchg
cmpsl
jmp
in
lea
jge
jl
dec
fdivrs
mov
xor
cmpl
lcall
fisubrs
jp
inc
and
jl
cmpsl
mov
cmp
mov
ss
outsl
sar
std
or
sbb
mov
dec
les
xchg
dec
lahf
pop
push
lahf
mov
sti
lret
sub
inc
sub
dec
movntps
jb
inc
pop
cld
dec
frstor
cmc
cli
je
jns
pop
outsb
jmp
loope
popf
mov
sub
xor
popf
int3
push
add
movsl
insb
popa
imull
push
rcrl
and
mov
cmp
jl
mov
jne
sbb
sarb
cmp
lds
inc
popf
out
stc
adc
sub
push
xlat
daa
pop
push
cmc
jae
dec
lcall
push
nop
and
dec
mov
enter
push
jbe
mov
or
mov
mov
and
xchg
or
jg
aas
push
je
cmp
push
jno
testl
push
push
mov
jb
xchg
mov
lds
xchg
cld
loope
dec
mov
add
mov
mov
pop
fsubrl
mov
ffreep
das
in
cwtl
sar
xor
mov
test
inc
cmp
mov
xchg
xchg
in
popf
scas
jle
fidivs
or
mov
shl
jb
js
xor
in
lret
ficoml
sbbl
push
test
xor
aam
imul
ret
xchg
rorb
xchg
pop
inc
test
xchg
lea
mov
inc
cli
hlt
loope
sbb
nop
aas
cwtl
outsb
cld
mov
sub
and
pop
inc
cs
ret
ja
in
das
in
clc
jge
std
outsb
repz
test
pop
in
insb
jp
mov
pop
push
scas
in
scas
inc
jmp
xchg
xchg
pop
lret
xchg
pop
outsb
adc
cmpsl
and
sti
lcall
loopne
addr16
sub
out
stos
imul
jecxz
lahf
push
dec
arpl
mov
insb
lea
inc
add
shl
inc
std
or
mov
int
ficoml
mov
mov
inc
adc
sub
dec
scas
cmpsl
sub
or
hlt
xchg
or
lds
int3
rcr
int3
sub
add
in
and
pop
rolb
sbb
scas
rcrb
leave
clc
xchg
mov
outsl
cld
sbb
adc
dec
nop
and
push
pusha
pop
mov
lret
xor
xchg
cmc
sar
movsl
add
call
enter
outsl
pusha
jp
imul
roll
scas
or
jns
xchg
popf
jecxz
movsb
mov
add
insl
cmpsl
loop
clc
mov
adc
jle
pop
mov
sbb
lret
inc
pop
dec
mov
mov
push
cmc
xchg
test
call
aad
cltd
xor
aad
insb
jl,pn
lahf
mov
lds
add
clc
loope
push
push
daa
js
dec
fldt
or
mov
in
push
cmpb
imul
in
pop
rorb
iret
xor
pop
jmp
sub
jnp
test
and
push
sti
cmp
adc
push
push
dec
popa
aad
jns
cmc
movsb
mov
mov
mov
fcoml
mov
mov
cmpsb
ss
cltd
lds
lahf
loop
es
out
or
pop
dec
jae
mov
xor
dec
dec
inc
and
jno
xchg
clc
cmp
add
outsl
xor
lea
lea
sub
mov
pop
dec
rorb
push
or
loop
and
xor
lods
or
fsubrs
fcmovne
pop
mov
pop
mov
rorb
and
adc
insl
pop
cltd
test
leave
ljmp
push
lret
fwait
mov
icebp
mov
xor
cmp
aaa
inc
enter
scas
gs
mov
sbb
jge
sub
arpl
leave
rcrl
dec
repnz
push
sbb
dec
push
pop
dec
sbb
add
mov
out
pop
rcrl
pop
stc
xchg
fsubs
mov
pop
push
xor
test
outsb
sbb
cmp
add
repnz
or
leave
jmp
bound
mov
pop
clc
add
inc
sahf
mov
addr16
xchg
adc
push
jno
cmc
or
push
mov
and
and
adc
push
push
testb
mov
mov
sarb
dec
mov
mov
ja
insl
hlt
add
in
mov
pop
imul
mov
ss
subb
sbb
xchg
leave
xlat
imul
sbb
adc
sbb
or
mov
lock
fcoml
nop
faddl
stos
mov
inc
stos
sub
cltd
push
addr16
pop
sbb
mov
dec
cmpsb
pop
push
shr
inc
xchg
jmp
enter
cld
hlt
sbb
test
dec
movsl
inc
sbb
mov
lods
sbb
gs
movsb
test
inc
fsubs
xchg
enter
data16
sub
jb
jmp
repnz
insb
lcall
in
dec
hlt
push
into
stc
pop
cltd
das
popa
gs
sub
xchg
xchg
bnd
sub
les
cld
push
cmp
imul
mov
cmp
xchg
push
imul
cmp
cwtl
stos
lahf
jns
or
lods
cs
sahf
mov
push
in
xchg
xchg
icebp
sahf
xchg
loop
sub
mov
ja
cmpsl
aas
push
xor
adc
cmpl
int
pop
into
push
pop
js
add
push
mov
inc
rcr
or
sub
cli
fadd
pop
nop
lcall
mov
fadd
dec
add
rolb
lods
cmp
xchg
dec
test
cmc
pop
jmp
add
sub
cs
add
sahf
mov
lods
nop
pop
dec
scas
mov
sti
mov
dec
les
movsb
cmpsb
push
push
bnd
and
push
sbb
int3
out
nop
outsl
scas
adc
stos
js
xlat
pop
cmp
adc
lret
repz
sbb
mov
push
into
mov
andl
ret
lods
adc
mov
rcrl
pop
fildll
sbb
fmuls
stos
jae
cmpsb
jns
sub
in
dec
xchg
pop
popf
out
mov
jle
out
fwait
insb
xor
push
sbb
push
sar
out
cmpsl
mov
lret
test
push
add
adc
mov
test
xor
fwait
aas
cmpb
or
inc
std
adc
jb
scas
je
gs
push
loopne
dec
aaa
pop
sbb
xchg
dec
push
adc
arpl
add
cs
outsb
push
arpl
jnp
test
cld
lds
cmc
lret
pop
in
cld
mov
cld
push
dec
and
popa
ret
leave
push
int3
inc
mov
pop
cmp
test
fsubl
inc
push
lea
jge
rorl
iret
xchg
jbe
adc
decl
ret
cwtl
pop
lret
pop
movsl
flds
add
xor
stos
ret
push
sub
insl
cmp
cmp
add
call
and
bnd
mov
imul
arpl
sub
ficoml
lock
xchg
test
xchg
orb
push
jne
int
mov
sbb
and
cmpsb
sub
jecxz
inc
scas
push
dec
int
andb
pop
add
aas
test
xchg
inc
ljmp
xor
sub
pusha
ffree
sbb
aad
imul
fldt
andl
lcall
in
adc
mov
in
xchg
aas
inc
sarb
test
sbb
pop
jmp
fidivrs
xor
inc
cmp
inc
jae
push
jmp
pop
push
andl
dec
fsts
cmpsl
xchg
in
pop
or
pop
mov
sbb
test
pop
inc
push
in
push
cmp
mov
mov
cld
test
mov
jge
rorb
inc
nop
shll
jo
add
iret
rcr
lock
testl
fbstp
mov
cmpsb
mov
inc
dec
fsubrs
pusha
sub
xor
in
sbb
xchg
push
inc
repnz
or
jb
lahf
pop
pop
mov
add
cmp
faddl
dec
fistps
outsb
sub
push
arpl
sbb
dec
and
repz
mov
inc
dec
sbb
mov
xchg
sbbl
andb
popa
dec
std
xor
fildll
sub
pop
clc
jo
sti
push
sub
adc
nop
ds
or
push
in
test
dec
jno
pushf
insb
ljmp
ret
loopne
cmp
icebp
or
add
sbb
pop
push
add
jae
movsb
pop
cld
push
push
pusha
into
cltd
add
cltd
out
rcrl
addb
xor
xchg
mov
stos
mov
stos
pop
mov
repnz
fsubrs
push
dec
lods
popf
sub
ss
das
or
cmp
in
iret
ds
jp
in
dec
imul
jle
loop
push
adc
repz
ret
cmp
sahf
pop
xor
or
inc
lods
mov
adc
ljmp
arpl
push
ret
jno
fidivrl
xchg
out
jb
sahf
jl
or
popa
jnp
xchg
and
movhlps
fcomi
pop
mov
and
int
pop
push
out
arpl
lea
mov
fcmovne
jg
mov
aam
jg
repz
lret
imul
xor
ret
fcomi
scas
call
mov
add
addr16
out
lods
xchg
mov
fsts
rcr
pop
add
test
js
mov
xchg
int
ret
addl
stos
mov
and
sub
loop
jp
jle
dec
icebp
cmp
dec
add
sbb
dec
sub
lock
push
imull
in
xor
push
lret
xchg
repnz
cmpsl
add
test
js
mov
mov
sahf
dec
cmpsl
test
testl
cld
pop
and
fists
sub
test
imul
jnp
and
mov
imul
inc
jmp
dec
add
mov
repnz
inc
mov
daa
mov
jle
jae
dec
dec
sub
mov
mov
or
ret
subb
std
in
fistpll
and
jp
mov
mov
clc
add
nop
in
nop
mov
jo
mov
xor
sbb
das
into
lods
push
mov
vmovaps
arpl
xor
fadd
ds
nop
push
jge
push
push
mull
bound
inc
js
imulb
lcall
xor
jb
or
push
push
mov
scas
mov
lds
jp
mov
mov
sahf
xor
lret
je
fwait
and
dec
sahf
mov
adc
stos
lea
xor
adc
sub
mov
aaa
jle
sbb
imul
icebp
aam
stc
add
pop
aas
loopne
insb
inc
adc
and
pop
push
dec
cltd
aas
sbb
jl
addl
xchg
xor
sbb
lods
jl
xchg
cwtl
daa
mov
mov
mov
fwait
pop
cld
rcll
adc
dec
fimuls
xchg
scas
incb
xor
mov
cmc
pop
adc
adc
outsb
push
insl
cs
sar
sbb
fisttpll
sbb
movsb
ss
mov
test
add
pusha
icebp
mov
inc
aas
pop
loopne
dec
xchg
pushf
sub
xchg
push
in
sti
sbb
loopne
mov
xor
mov
sub
sbb
mov
jp
pop
loope
fbld
mov
gs
xor
popa
fcom
dec
push
test
jo
mov
rolb
xor
or
lods
push
clc
mov
and
aas
dec
insb
int
rorb
pop
dec
jp
pop
movsl
cmp
es
js
inc
or
lahf
mov
int
pop
inc
sub
cltd
cmp
int
jno
in
lds
scas
imul
stos
jnp
push
lret
push
stos
pop
cmp
ret
xchg
outsb
sub
mov
and
mov
xor
in
dec
icebp
std
push
test
in
int
ret
sbb
in
or
aaa
fwait
movsb
ret
push
shrb
push
sbb
jl
inc
cmp
xor
xchg
ljmp
mov
or
insl
lds
pop
xlat
jp
frstor
fwait
pop
outsb
mov
xchg
jg
ss
mov
insb
push
xchg
jecxz
shr
xorb
ljmp
fsub
push
and
and
adc
or
les
mov
add
push
add
sbb
adc
dec
mov
jbe
iret
enter
xchg
fwait
jg
inc
out
adc
mov
mov
dec
mov
std
inc
movsl
not
int3
add
jp
sbb
fucom
push
rcll
movsb
iret
inc
mov
cwtl
mov
movsb
loop
fld
pop
cmc
fdivr
xchg
les
test
sbb
sub
jle
mov
dec
mov
or
or
mov
add
aaa
push
movsb
xor
iret
ret
pop
ror
stos
loope
insb
and
push
ja
pusha
hlt
fildll
cmp
push
cwtl
insl
add
notb
adc
jp
mov
mov
cmp
aad
push
mov
xor
jo
xchg
cmp
jns
lcall
popf
sti
dec
push
add
pop
fcoml
repz
lods
ja
mull
pop
or
mov
or
movsl
dec
addl
rcrb
pop
ret
mov
icebp
add
push
xchg
out
and
mov
push
cmc
scas
bound
bound
push
push
ret
add
jle
lock
ss
cmp
cltd
and
sbb
xor
push
dec
adc
sahf
inc
or
popa
into
negl
xor
pop
std
mov
jmp
aaa
cmpsl
or
fsubrs
and
rcr
repnz
mov
test
jne
bound
fucomp
xor
xlat
xchg
scas
add
repnz
cmp
lea
push
or
mov
out
jno
mov
push
aas
add
or
cmpsb
pop
mov
inc
sub
jae
iret
add
das
mov
pusha
mov
rcr
jb
enter
aam
shlb
sbb
push
aad
stos
adc
int3
ret
push
scas
loope
fs
rorl
stos
repnz
mov
mov
test
push
add
adc
es
jns
imul
pop
mov
imul
shrl
pop
int
mov
xlat
iret
pop
jmp
fsts
mov
sub
and
push
jmp
scas
xchg
pop
add
and
mov
pop
mov
sbb
xchg
and
push
mov
clc
mov
les
inc
pop
pop
mov
imul
pop
shl
pop
popa
iret
in
ficompl
stc
sahf
push
out
and
adc
xchg
xchg
popa
notl
inc
push
out
xor
or
push
nop
imul
cmp
cmp
xor
pop
mov
add
mov
mov
mov
je
adc
fs
xchg
dec
ficoms
pop
sbb
or
or
mov
fimull
fcomps
jl
sub
cmp
js
push
xchg
and
xor
mov
andl
out
mov
mov
push
sbb
add
cmp
pop
insl
or
jbe
cmp
push
xchg
adc
mov
cmp
pushf
pop
and
sti
pop
loopne
out
ret
sbb
int3
into
mov
xor
clc
mov
shl
mov
stc
pop
cmpsb
pop
dec
sarl
inc
adc
xchg
pop
lds
cmp
inc
ret
lea
mov
icebp
and
dec
cmp
push
dec
mov
sbb
fmull
out
pop
aas
ficomps
push
rorl
and
xchg
or
pop
and
mov
shrl
enter
cmp
xchg
mov
add
mov
adc
push
loop
sbb
js
add
popa
add
test
lds
cld
jbe
loopne
ficoml
dec
mov
rcr
clc
inc
cmpsl
repnz
andb
out
lahf
jp
pushf
pop
push
fmuls
insl
cmp
push
jbe
repnz
or
push
push
jb
pop
cli
popa
fst
inc
or
add
push
and
movsl
add
xchg
outsl
mov
ss
out
and
lahf
xchg
dec
or
and
and
mov
aad
inc
cltd
ss
jae
clc
push
lret
flds
clc
pop
ret
pop
movsl
aad
clc
mov
gs
inc
mov
hlt
leave
test
scas
xor
mov
xchg
in
pop
jle
inc
hlt
jg
mov
ret
inc
inc
dec
sub
mov
push
sahf
fucomp
ds
loopne
rcrb
repnz
add
xor
push
cmp
pop
push
add
gs
imul
out
shlb
inc
add
dec
sub
pop
jne
sar
cmp
lods
pop
ss
inc
data16
jnp
lcall
cmp
dec
in
xor
and
shrb
push
arpl
mov
push
fld
pop
outsl
sub
fsts
or
int3
adc
ds
mov
fwait
mov
mov
mov
movsl
into
cmp
add
insl
pop
jae
cmpsl
xchg
aad
out
mov
in
xchg
je
into
cmpl
sti
jg
scas
addl
xchg
xchg
fxch
mov
arpl
xor
and
popf
outsl
pop
sub
xlat
inc
sarl
cmp
lret
cs
pop
adc
andl
pusha
js
mov
cld
push
ds
call
mov
rcrb
sub
jmp
cmp
lods
notl
jb
sti
jg
sbb
mov
repz
inc
mov
xor
mov
into
mov
cmp
loope
adc
pusha
lret
andl
jmp
fldl
mov
dec
sbb
shll
sub
jecxz
gs
jg
inc
jl
pop
popf
std
jae
stos
icebp
int
pop
xchg
bound
jp
ja
mov
out
lcall
and
jno
cmc
fldl2t
adc
jle
in
int
cmpsb
xor
out
addr16
inc
xor
push
leave
mov
imul
pop
scas
jb
loopw
xor
xor
loop
mov
inc
jl
add
mov
les
fidivrs
hlt
scas
xchg
dec
jmp
enter
push
and
push
int3
adc
jmp
icebp
sub
test
and
cltd
daa
xchg
in
push
fwait
pop
cld
or
xchg
out
fdivp
adc
lds
lods
xor
leave
addr16
mov
xchg
popf
out
xchg
insl
dec
push
fdivs
xor
sub
inc
jl
popa
mov
sbb
mov
test
push
mov
test
inc
xor
or
test
stos
or
jmp
jno
sbb
xchg
lds
push
push
sub
sub
fcomp
int
in
fstps
pop
pop
jbe
shl
movsb
xchg
mov
cmp
ud1
repz
aaa
ds
clc
mov
or
dec
into
lret
push
xor
shr
cltd
es
sub
fcomps
mov
add
aaa
lea
mov
jns
xchg
insb
bound
dec
out
sahf
lret
xor
add
jp
mov
aaa
inc
mov
rcrb
dec
fnstcw
jge
add
ret
movl
sub
fidivs
enter
fwait
cmpb
cltd
mov
mov
mov
iret
int3
sar
ret
rcrb
adc
in
sbb
dec
arpl
enter
insl
popa
pop
out
shll
ja
out
push
inc
and
lahf
aad
cmc
cmpsl
dec
mov
mov
push
xchg
imul
data16
cmp
scas
nop
pushl
pop
jo
shl
cmpsb
mov
cmp
stos
in
fdivrl
clc
ljmp
push
lock
stos
mov
into
inc
aad
mov
or
shl
rcll
sahf
push
in
shrb
xor
jbe
ret
fisttps
mov
and
fld
sub
lahf
pop
fcmovb
mov
cmp
xchg
fldcw
inc
inc
test
or
xor
cmpb
in
mov
push
leave
fidivs
sbb
inc
popa
xchg
cwtl
inc
mov
inc
idivl
mov
inc
mov
addr16
adc
das
pusha
lods
sub
mov
lret
fucomp
mov
mov
push
lahf
roll
adc
bnd
add
es
mov
loop
insl
mov
inc
dec
popa
sbbl
popf
push
push
cli
nop
push
imull
pusha
inc
fucomip
fnstenv
xchg
mov
lods
jecxz
xor
jnp
mov
inc
push
pusha
push
xchg
push
repz
mov
movntps
sbb
int
test
fs
repnz
adc
testb
into
sub
jge
cmp
cmc
enter
scas
adc
aas
xchg
pushl
xchg
dec
mov
imul
ret
fdivrl
xchg
cmpsl
sarl
bound
shll
pop
mov
push
repz
adc
and
push
push
pop
push
xchg
aam
adc
jg
sbb
pop
mov
pop
in
xchg
subl
fsubrs
lahf
mov
das
not
or
mov
mov
xchg
psubsb
push
lret
lcall
popf
dec
sub
rcrb
dec
lock
xchg
lret
arpl
jmp
dec
pushf
xlat
mov
test
xor
and
sarl
xchg
pop
stos
lahf
add
mov
mov
sar
adc
ret
dec
movaps
arpl
jns
adc
fs
scas
jle
and
jmp
test
data16
adc
jmp
and
in
shrl
lcall
pop
fildl
sti
adc
and
mov
cmp
mov
dec
test
and
js
sti
cmp
mov
sub
lds
mov
in
sub
jecxz
dec
mov
xchg
std
xchg
add
stos
push
cmpl
mov
adc
or
pop
fiadds
ror
mov
mov
push
es
mov
stos
orl
mov
and
cmpsb
or
imul
cmp
pushf
stc
sbb
cwtl
mov
andb
and
fadd
out
outsl
loope
out
mov
dec
push
loop
xlat
loope
cs
dec
aaa
push
fidivrl
inc
lret
sti
inc
out
movsb
addr16
inc
mov
scas
pop
lds
xchg
mov
fs
pop
pop
push
in
add
sbb
xchg
negb
jns
adc
in
mov
repz
shr
out
xchg
sbb
sbb
sahf
push
cmpsl
push
sbb
stos
roll
xchg
ret
js
and
aaa
loop
mov
sbb
popa
sbb
jge
pop
mov
xchg
sbb
test
cmp
jns
cmp
or
cmpsl
pusha
adc
pop
lock
cmp
cmpsl
add
scas
sbb
mov
and
cmc
jne
cmpsl
or
mov
mov
pop
add
out
adc
or
jne
loope
push
mov
adc
jle
cmp
lock
inc
or
out
out
mov
or
data16
sub
lods
lret
rclb
cmp
mov
mov
adc
inc
jns
fadd
pushf
xchg
pushf
fcoms
out
dec
mov
mov
mov
addr16
data16
adc
push
loopne
loop
jle
pop
stos
cld
xchg
rorb
dec
mov
cmp
popf
fdivrp
cmp
incb
pop
push
cmp
test
and
mov
fmull
cli
cmp
imul
mov
scas
rclb
cld
frstor
cmp
mov
adc
add
adc
adc
and
sub
xor
mov
xor
jns
dec
mov
jae
pop
loop
adcl
xor
cmp
add
std
test
test
ret
inc
xchg
sahf
mov
or
pop
xchg
jno
cli
std
nop
pop
pop
adc
inc
sahf
imul
push
cmp
and
ror
jge
arpl
add
mov
push
scas
xchg
addr16
jle
xor
dec
xchg
push
lahf
jle
xor
inc
jge
lock
ljmp
cltd
jns
or
adcl
push
dec
shlb
push
mov
les
push
pop
dec
adc
dec
sbb
lock
push
sbb
outsb
jo
lcall
ds
das
sbb
and
outsl
or
xchg
hlt
xor
aaa
clc
lcall
dec
xchg
aam
xchg
lods
test
adc
imulb
movsl
cltd
cwtl
pop
stos
outsb
pop
inc
popa
sbb
xchg
ja
mov
add
inc
out
and
sbb
shlb
roll
stc
loopne
cmp
add
cmpb
jle
inc
lahf
xchg
outsb
shll
sub
push
sbb
lahf
add
dec
dec
xchg
repz
mov
push
jg
mov
xor
test
testl
pop
mov
pushf
push
mov
insl
fdivl
in
xchg
testl
xchg
in
inc
test
mov
mov
movsl
int3
cli
cli
mov
aam
push
in
arpl
daa
out
mov
ror
mov
dec
sbbl
jmp
xchg
arpl
push
clc
jbe
daa
cwtl
mov
fistl
ret
inc
jp
repz
pop
inc
or
xchg
sbb
or
inc
pop
insl
mov
add
ljmp
movsl
jp
mov
and
mov
loop
lods
jae
sub
pop
jnp
out
mov
jns
add
or
popa
xor
daa
adc
cmp
loop
push
adc
add
outsl
add
es
xor
imul
aad
sub
jne
adc
jb
add
and
mov
paddsw
ds
cmpl
pop
scas
mov
jbe
cmp
mov
or
lods
xor
sub
sub
dec
pop
pushf
loope
mov
lahf
pop
inc
jb
stos
push
and
xchg
mov
dec
pop
jmp
jecxz
and
addr16
lahf
aad
testl
add
push
or
or
imulb
xchg
mov
mov
je
sbb
rclb
dec
sahf
inc
adc
orb
mov
shrb
push
push
fidivs
lea
mov
gs
jo
mov
ja
mov
push
lret
test
aad
xlat
jp
jo
jnp
repnz
popa
jb
jl
xor
stos
sub
xchg
sub
dec
push
jne
and
xlat
xchg
jge
push
or
push
addr16
leave
lahf
iret
outsl
xor
cmp
popa
pop
xchg
mov
xchg
cmpsl
sbbl
pop
mov
jb
xchg
cmp
inc
repnz
test
push
imul
test
imul
and
jno
enter
xor
adcb
call
lcall
test
jae
lea
push
roll
adc
sti
in
pop
xchg
or
out
jo
bound
test
rorl
mov
mov
fucomp
and
insb
xlat
jns
sarl
mov
sbb
cld
fstpl
stc
pushf
int3
push
jne
test
popa
frstor
xchg
test
in
rcrb
inc
iret
pop
fninit
xchg
int3
xchg
stos
and
fdivrs
enter
dec
jns
mov
push
xor
bswap
jo
push
mov
xchg
int3
pop
sub
shl
arpl
sub
ret
pop
mov
jg
mov
pop
je
mov
jmp
dec
mov
mov
add
xor
outsl
int3
fst
dec
dec
sub
ret
fisubs
inc
adc
leave
cmc
or
or
gs
xor
pop
add
xchg
push
es
out
call
lahf
in
aas
cli
sub
xchg
jecxz
je
outsb
lret
jb,pn
jns
xor
adc
idivl
cmp
loope
je
out
lret
dec
shrb
scas
jmp
scas
push
jge
mov
inc
push
or
mov
sub
inc
and
lds
jge
dec
rcrl
mov
mov
jo
out
out
popf
sti
xchg
sub
test
stos
mov
push
dec
sub
cs
add
sub
sub
outsw
adc
mov
cmp
gs
mov
adc
jle
mov
in
dec
fsts
pop
popf
adc
pop
sbb
cmp
les
dec
popa
xchg
xorb
lea
mov
jno
cltd
dec
out
mov
or
cmpsb
in
iret
jecxz
dec
sub
fdivp
cmpsb
dec
push
outsb
idiv
jmp
fadd
and
jle
and
push
icebp
inc
iret
iret
jno
sub
lcall
xchg
mov
in
jne
popa
mov
push
outsb
fldl
mov
jo
or
stos
push
std
ret
mov
sbb
fstpl
jg
dec
dec
mov
pop
out
xchg
push
iret
jp
pusha
out
dec
fistl
shlb
sub
jge
repnz
fcmovnbe
jne
mov
sbb
fisttpll
pop
lods
cli
mov
pop
out
loop
mov
cmp
cs
pop
movsb
daa
cmp
rorb
pop
xchg
sub
jnp
imul
inc
scas
ficomps
fstpl
sbb
and
out
sbb
push
adc
adc
fdivrl
cmp
fwait
mov
test
jnp
out
dec
lods
insl
push
rolb
fldenv
cmp
lods
insl
pop
pop
dec
test
inc
lcall
push
pop
leave
hlt
mov
inc
fistpl
mov
add
push
mov
daa
pop
adc
ret
inc
cltd
outsb
pusha
arpl
mov
xor
in
imul
push
dec
ret
jne
nop
mov
xchg
cwtl
fisttps
subl
pushf
adc
add
jae
lret
xchg
test
outsb
outsb
out
sbb
out
enter
adc
vmovdqu
mov
jnp
lods
jne
pop
xchg
xor
pop
pushf
inc
test
add
sub
pop
ds
jnp
outsb
imul
cld
dec
cmp
aad
dec
sar
push
push
in
std
push
mov
xor
push
les
add
dec
mov
mov
xchg
cmp
popf
mov
aam
out
adc
fs
adc
dec
inc
or
xchg
push
jnp
fcoms
inc
dec
loop
and
fadd
push
and
adc
cmp
xlat
les
daa
repz
lss
out
out
xor
or
lret
lea
mov
cmp
imul
and
dec
jo
sub
inc
pop
inc
das
or
add
inc
cmc
loope
inc
or
push
das
aas
xor
push
lret
out
cld
or
icebp
out
inc
adc
xor
mov
mov
int
adc
and
ficoml
movsb
dec
std
add
jne
pusha
bound
push
sub
stc
cltd
lcall
mov
xchg
movsb
test
les
mov
cmpb
nop
xchg
in
ljmp
mov
xor
fs
in
mov
push
or
mov
lret
les
lock
mov
and
cld
xchg
sbb
push
enter
les
addr16
lods
repz
dec
cltd
sbb
lods
in
addr16
leave
ficomps
mov
pop
lcall
clc
jns
negb
pop
jg
dec
xor
idiv
and
shll
inc
cmp
test
cmp
dec
sub
mov
xor
cwtl
sbb
mov
insl
xor
sub
pushl
mov
lods
push
loope
jp
out
je
fnstenv
aam
dec
add
cmpsb
sub
mov
mov
sub
mov
repz
push
ret
xchg
into
sbb
mov
mov
out
scas
jmp
mov
ljmp
mov
mov
push
fadds
pop
mov
add
dec
sub
gs
lret
ds
push
movsb
sub
jne
lods
stos
out
mov
sbb
dec
dec
inc
in
scas
pushf
mov
rcrl
test
sbb
xchg
imul
subl
jl
pop
bound
and
add
insb
sub
jb
xor
cmp
stos
inc
inc
mov
adc
inc
jl
xor
dec
loope
mov
mov
mov
das
lds
jae
jle
fbstp
insb
adc
push
adc
insl
or
out
outsb
lret
dec
jnp
out
lret
ljmp
test
aad
mov
adc
stos
sbb
mov
xchg
inc
lret
cmpsl
das
xchg
sub
in
adc
jae
jae
xchg
ror
aas
pop
ja
ljmp
mov
repnz
pushl
add
add
icebp
insb
xchg
lahf
hlt
movsb
mov
pushf
loope
pop
push
decb
inc
fisubs
call
push
hlt
cmpsb
and
lds
cwtl
adc
sub
iret
pop
fdivrl
stos
or
mov
jnp
stos
sub
data16
inc
mov
dec
repz
popa
mov
mov
fsubl
mov
arpl
mov
stc
and
cs
xchg
dec
cmp
test
testl
sbb
sahf
adc
iret
push
cli
icebp
fnstenv
or
fsts
das
cmc
lcall
out
push
add
cmc
push
lods
out
jno
add
mov
push
mov
mov
dec
mov
mov
inc
or
jae
mov
jp
jecxz
dec
mov
mov
pop
cmpb
sbb
lds
sub
mov
or
in
in
in
out
testl
jo
dec
div
imul
popa
loope
std
cli
pop
sub
mov
cmp
cmp
aam
ja
lahf
xor
repnz
sbbl
jecxz
mov
xor
cmp
nop
jecxz
pop
inc
or
xorl
dec
das
sub
mov
push
jmp
movsb
loop
cmp
mov
aad
cwtl
or
data16
sub
xor
pop
or
adc
mov
adc
loop
jecxz
jb
stos
push
xchg
add
fadds
pop
bound
push
repz
mov
fdivl
add
mov
dec
shlb
jp
mulb
loop
adc
adc
daa
jnp
lahf
popa
iret
ret
mov
xor
push
push
add
in
popa
jecxz
leave
mov
icebp
mov
xchg
roll
mov
fidivrl
shl
lods
movzwl
or
jo
or
int3
out
icebp
adc
fisubrl
mull
mov
cmp
jo
push
push
push
pop
dec
cmc
or
add
in
cli
mov
subl
jle
pop
xchg
mov
mov
das
push
jns
add
rorb
fldenv
lods
lock
into
pushw
insb
mov
mov
out
xor
or
push
push
loopne
jg
sbb
pop
int3
cmp
jno
jl
mov
push
mov
jns
mov
xor
mov
xchg
fcompl
ret
mov
push
or
hlt
jae
add
or
popfw
loope
xchg
push
mov
dec
add
cmp
lret
jle
pop
and
mov
and
jo
dec
mov
adc
lds
int
fildl
nop
dec
daa
test
xchg
sub
or
cld
es
lcall
repz
mov
andl
dec
push
aaa
push
xlat
jl
xor
xchg
sbb
mov
mov
jo
and
flds
mov
enter
xchg
push
cld
xor
fidivrs
lret
scas
xor
xchg
add
xchg
call
lods
cmc
sarl
shlb
fcomip
int
xor
push
pop
cwtl
aam
lods
test
scas
ret
sub
xchg
cmp
lods
adc
lcall
jne
in
or
mov
in
mov
insl
xchg
leave
loop
cmpsb
not
jg
mov
xchg
xchg
mov
jg
or
mov
sub
dec
in
adc
test
aas
or
mov
arpl
jne
shll
add
insb
loopne
shll
dec
outsl
jb
or
gs
iret
pop
pop
push
xor
and
and
es
sub
call
and
dec
icebp
push
dec
aad
or
enter
nop
bound
inc
adc
not
scas
add
sbb
stos
jno
scas
and
xchg
xchg
js
mov
out
test
jge
aad
add
decl
mov
lds
xchg
jbe
repnz
push
cs
out
scas
shr
xor
bound
shl
jno
jecxz
push
scas
leave
xlat
mov
xchg
pop
jno
lods
adc
push
push
sbb
cmpsb
sbb
jo
sbb
fistl
push
sbb
lds
out
jbe
mov
imul
cmp
lock
in
cmp
adc
mov
push
cltd
xchg
sahf
rclb
ret
pop
movsl
xor
test
adc
das
decl
sub
loope
and
in
pop
movsl
in
hlt
adc
pop
jno
mov
lea
pop
sbb
mov
jb
mov
dec
fbstp
int3
cmpsb
imul
cmc
sub
imul
mov
std
lcall
fadd
adc
clc
outsl
adc
sbb
mov
push
mov
inc
mov
in
fildl
push
push
push
cld
rcll
test
in
and
xor
imul
shll
dec
aaa
push
fdivl
mov
sub
xchg
enter
and
xor
cmpl
lds
inc
mov
xlat
xchg
jo
daa
mov
add
mov
push
shlb
sub
popa
pop
cmp
sub
push
add
inc
push
inc
loopne
cmp
push
cltd
mov
jg
pop
stos
inc
shll
push
jnp
mov
imul
mov
sbb
leave
xchg
les
sbb
les
cmp
test
in
mov
pushf
mov
and
mov
fsubrl
std
popa
jnp
mov
mov
enter
inc
ds
push
pop
and
lea
mov
jbe
in
fsubrl
and
jns
pop
pop
repnz
push
inc
add
mov
addl
sub
or
jnp
push
xor
aas
lcall
sub
pushf
sub
mov
sbb
stos
ljmp
ljmp
rclb
fcom
enter
lret
imul
lock
adc
and
fwait
sbb
jle
clc
jb
sub
mov
loopnew
call
loope
cld
lcall
sub
cmp
nop
and
lods
outsl
sbb
scas
lods
mov
jb
cld
lcallw
or
or
mov
jg
icebp
jae
ret
mov
sbb
mov
sub
movsl
shl
adc
lret
ficoms
mov
repnz
test
loop
scas
fstpl
lret
into
sub
fs
adc
mov
sbb
push
jg
sbb
int
leave
adc
mov
ffreep
call
movsl
pop
inc
in
aas
sbb
imull
xor
mov
sub
and
fisttps
push
push
push
int3
jbe
sub
inc
fs
sbb
cmpsl
sub
adc
and
jbe
lret
add
xlat
jno
rolb
cmpsl
cmp
outsb
fdivrl
cmc
push
ret
out
mov
push
and
outsl
xor
mov
xchg
or
fadd
enter
pop
lea
inc
dec
mov
out
jae
jae
jge
lock
sub
cmp
das
jo
jle
test
adc
pop
xchg
fstpt
xchg
jns
xlat
mov
and
inc
ret
or
pminsw
cmp
aas
or
mov
dec
int3
or
cwtl
lret
add
fistpll
ds
xor
out
mov
pop
mov
repnz
sub
lret
xlat
mov
sbb
sbb
cld
mov
cmpsl
sbb
aad
dec
and
leave
loope
movsl
jmp
mov
repnz
adc
ss
or
mov
adc
sbb
fwait
or
out
rorb
push
mov
cmpsl
mov
push
push
add
cld
dec
mov
sbb
xor
cmp
dec
add
lea
gs
sbb
sbb
xchg
leave
xor
mov
imul
inc
in
sbb
pusha
pop
xchg
mov
fs
ficompl
inc
out
sbb
pusha
mov
pop
xor
nop
or
pushf
mov
lds
test
scas
aas
les
clc
lods
pop
xchg
lcall
cmpsl
repz
daa
push
mov
fs
ret
mov
lock
stos
imul
repz
aam
add
mov
fildll
sbb
inc
das
movsb
mov
mov
repnz
in
sub
insl
push
sbb
mov
push
cmc
popf
push
cmp
xchg
jo
or
cltd
imul
jb
aam
insl
cltd
out
inc
jecxz
sarb
ljmp
cmp
adc
mov
fistl
cltd
sub
nop
cltd
jne
rclb
inc
movsl
jmp
add
mov
cmp
test
push
cmc
in
pop
mov
mov
je
shrb
sti
loop
iret
popa
call
and
add
jnp
pusha
ss
arpl
push
push
fcmove
ljmp
stc
xorb
pop
outsl
fnstcw
jne
pop
jnp
push
jl
in
imul
jo
lcall
test
dec
jo
and
inc
pop
sbb
and
xchg
jmp
shlb
test
jns
mov
adc
das
adc
and
bound
dec
jb
sub
xchg
fists
andb
xchg
push
out
xor
sub
mov
sub
test
not
sbb
xchg
std
pop
cltd
mov
xchg
cmp
xor
out
dec
fdivrl
jbe
stos
push
mov
hlt
fcmovu
inc
outsb
inc
sub
mov
out
fcomip
cwtl
out
repnz
push
push
pop
mov
aas
push
xchg
pop
add
out
push
sbb
push
iret
test
push
dec
test
xchg
gs
stos
cmpsl
pop
test
jp
adc
insl
inc
mov
jns
pop
pop
in
lcall
dec
cmp
out
mov
sbb
mov
mov
stc
ror
movsb
filds
test
cmpsl
inc
fmull
sub
mov
or
shrl
or
xor
cmp
push
sbb
cmp
int
mov
sub
movsl
mov
pop
lds
xchg
in
push
in
sarb
push
push
stos
fisttps
outsl
inc
loopne
cmp
inc
sub
cmpl
test
add
out
vpsrlw
bound
pop
hlt
dec
xchg
das
dec
or
adc
mov
out
loope
roll
jl
xchg
mov
sbbb
imull
in
xchg
scas
mov
outsb
fsubrs
hlt
xchg
nop
imul
mov
out
cmpsl
and
add
push
pop
arpl
in
push
call
jl
push
js
jnp
fcomip
fistpl
loope
popl
pop
jp
hlt
adc
dec
stos
shrb
orb
lock
loope
or
movsb
inc
xchg
mov
pop
dec
or
push
cli
mov
mov
test
push
mov
mov
add
ljmp
adc
rorl
jns
mov
sub
lret
xchg
notb
pop
arpl
loopne
pop
adc
hlt
lds
popf
xlat
pop
inc
jns
imul
sbb
enter
out
dec
mov
pop
jle
shrb
les
loopne
aad
sub
imul
adc
in
cmp
jo
fwait
imul
mov
push
push
cs
pop
repz
sbb
shr
mov
jo
jp
jmp
jb
inc
rorl
je
dec
sub
and
mov
push
fld1
cmp
mov
mov
mov
jno
leave
in
xchg
subl
insb
mov
mov
push
ftst
push
daa
out
test
xor
and
fidivrs
jae
push
push
outsb
jnp
loopne
lock
inc
inc
mov
jp
pop
xchg
lret
or
daa
sub
add
sti
push
mov
mov
fsubrs
in
lods
adc
test
sahf
repz
out
call
jl
lods
adcl
add
dec
and
into
push
inc
sbb
adc
push
jnp
cli
dec
pusha
fs
mov
orb
cmp
cmp
jecxz
stos
subps
sahf
mov
add
mov
push
dec
adc
sbb
hlt
sbb
or
lods
movsb
lods
jne
icebp
or
and
mov
lret
xor
scas
fwait
mov
dec
xor
inc
mov
loop
les
xor
call
pop
cmp
in
or
dec
xchg
bound
mov
es
rcll
and
les
push
sub
inc
jge
int3
out
scas
les
out
js
mov
sbb
adc
mull
jecxz
sbb
inc
push
push
lods
push
mov
mov
lds
test
xor
fistpll
sbb
movsb
jge
or
loope
cmp
jnp
mov
insl
inc
outsb
adc
sahf
ret
and
es
ret
push
cmp
call
sti
push
push
mov
sub
pop
mov
pop
sbb
aad
mov
sarl
mov
mov
aad
mov
outsl
fstpt
cli
addr16
rcr
out
addr16
xor
jl
mov
jns
xchg
sahf
sub
test
repnz
ds
cmpsl
stc
es
into
xor
jne
cmp
cmpsl
negl
and
mov
inc
pop
xor
ret
ret
xchg
mov
xchg
fidivrl
add
dec
mov
fsubrl
push
jae
dec
xchg
adc
mov
mov
xchg
mov
andl
jns
xchg
pusha
lcall
add
jno
dec
pusha
addb
fmuls
sub
push
or
mov
leave
test
dec
aas
push
dec
movsl
xor
pusha
lret
pop
push
lret
inc
and
mov
das
ret
sbb
mov
stos
mov
xor
aas
cmp
mov
iret
bound
sub
outsb
cmp
xchg
fistpll
out
sbb
xchg
xchg
push
lods
lahf
mov
flds
cmp
pop
fisubrs
mov
mov
mov
pop
inc
aad
push
push
mov
mov
mov
call
movsl
pop
jl
jno
ja
pop
cmc
or
adc
popa
std
dec
gs
adc
cmpsl
call
cltd
movsb
adc
testb
dec
and
mov
lea
push
int
xchg
jle
mov
add
cmp
push
push
mov
roll
and
loopne
testb
push
xchg
push
mov
and
cmc
xlat
inc
loopne
rclb
xchg
pushf
sub
hlt
popa
jp
icebp
pop
push
dec
loope
bound
adc
imul
jno
cmpsl
cmp
jecxz
add
jecxz
sub
int3
mov
pop
sbb
lea
pop
jmp
mov
mov
fs
mov
mov
ss
cmc
lahf
shrb
sbb
push
aam
jo
mov
aas
xor
and
das
test
sub
xchg
dec
scas
bound
mov
mov
shr
sub
dec
stos
inc
lods
mov
pop
and
pop
sbb
add
fmull
test
mov
and
das
sbb
cmc
lea
or
sbb
hlt
push
movsl
mov
cmp
sub
xchg
fsubl
scas
ds
pshufw
mov
dec
push
pop
mov
int
adc
nop
dec
cmp
cmp
fimull
imul
or
dec
lret
dec
mov
jbe
push
jno
sbb
ss
mov
subl
test
pop
cmp
or
pop
fldenv
test
push
gs
std
ret
push
jb
sub
mov
sbb
mov
sub
pop
lods
pop
mov
dec
ficoms
xchg
arpl
lock
jb
jo
mov
push
les
lahf
fisttpl
hlt
shll
out
in
outsb
mov
cmp
mov
jle
test
loopne
add
outsl
mov
data16
js
icebp
aam
fninit
inc
lret
sub
pusha
jp
lods
sbb
scas
xlat
aad
and
shll
or
insb
das
mov
inc
adc
test
leave
and
dec
fyl2x
mov
rol
fsubl
xchg
shlb
push
in
notb
mov
cmp
fs
in
xor
pop
mov
dec
dec
or
movsb
pop
sbb
push
inc
dec
jp
mov
push
shrb
push
jno
jnp
xor
aad
push
ret
sti
inc
imul
aas
adc
jecxz
popf
mov
sar
inc
pop
mulb
adc
mov
aad
fisubrs
ljmp
int3
mov
movsb
sbb
cmc
popa
fcomip
cli
inc
mov
sub
cmpsb
inc
cmp
jne
sub
pop
imul
xor
push
out
mov
sbb
jle
push
pop
stc
loope
data16
ss
cmp
roll
push
loopne
xchg
std
and
jno
cmpsl
cmpsb
lods
inc
add
lods
push
lahf
lods
jge
bound
cmp
mov
inc
xor
or
test
mov
mov
lods
sbb
mov
in
shll
mov
add
push
jecxz
movsb
sub
cmpsl
add
cs
in
outsl
inc
cmc
and
mov
inc
fwait
bound
mov
enter
dec
mov
xorb
stos
sub
and
dec
les
sbb
push
pop
in
orb
ss
sbb
jns
ret
jge
xor
dec
or
jle
jno
sar
push
test
fimuls
ds
xchg
inc
int
mov
push
pusha
push
fisttpl
dec
sti
popa
xor
mov
bound
adc
lea
pushf
xor
dec
adc
mov
mov
jb
cwtl
add
imull
mov
pop
inc
mov
add
xor
dec
sbb
mov
movsl
movsb
scas
mov
repnz
leave
jo
jnp
fldt
adc
fs
jnp
pop
mov
lods
call
ret
in
cmc
inc
popa
xlat
sub
jnp
mov
add
and
sub
hlt
loop
jno
mov
mov
push
push
sub
dec
sbb
ret
arpl
and
jns
ret
jmp
lock
outsl
popa
sahf
test
mov
xor
aas
fbld
movsl
mov
lret
push
cmpsl
and
dec
mov
xchg
call
xchg
xchg
sbb
cld
inc
test
push
iret
add
neg
push
xlat
iret
addb
mov
sbbl
or
mov
outsb
cmp
jmp
lock
lret
jmp
sbb
in
jns
bound
stc
lock
jns
adc
std
xor
push
push
insl
push
sbb
or
lock
cmp
inc
dec
push
pop
stos
jmp
aas
mov
pushw
lea
or
pop
jmp
push
ret
push
mov
notl
lret
rorl
rcr
mov
repnz
sbb
add
cli
loope
adc
je
repnz
aad
jge
lock
in
cmp
add
add
mov
sub
int3
cli
push
dec
push
pop
repnz
sbb
sahf
sbb
sbb
js
xchg
mov
insb
lret
jmp
das
adc
cmp
aad
and
xor
outsb
and
push
add
mov
test
sti
dec
mov
mov
imul
gs
in
cmp
or
and
das
stc
cmc
arpl
cmp
in
stos
pop
hlt
cmp
ja
imul
and
sbbl
out
cld
int3
scas
xchg
push
int
push
mov
jl
jne
xchg
std
cmp
mov
push
mov
mov
movb
xchg
pop
rcrb
inc
test
cmpsl
push
adc
test
cmp
mov
out
add
ljmp
fwait
mov
gs
mov
mov
sub
lock
push
dec
and
mov
imul
xor
xor
push
rclb
lock
sbb
lea
jle
fists
ret
sbb
insl
and
mov
test
in
sub
lret
or
cmp
enter
or
sbb
jmp
out
insb
jp
lahf
mov
scas
cmp
and
add
lods
fstpl
ror
lahf
add
adc
into
je
in
pop
mov
jo
mov
out
adc
inc
mov
xchg
hlt
push
push
pop
in
push
hlt
out
mov
jp
outsl
lock
xchg
psubusw
iret
ret
iret
pusha
mov
cmc
mov
cmc
addr16
pop
dec
and
xchg
imul
xor
push
loopne
jle
dec
repnz
push
xchg
pop
ljmp
hlt
fdivr
aam
imul
mov
sbb
dec
push
xchg
shl
lret
sub
test
mov
pop
xor
xor
loopne
pop
jmp
xor
mov
inc
jo,pn
dec
push
in
imul
xchg
inc
lock
adc
push
add
shll
fisubs
lret
and
or
test
xchg
dec
add
mov
adc
push
xchg
mov
test
mov
cld
push
fcoml
fs
fldenv
lret
push
cmp
cmp
adc
int
sbb
popa
iret
pop
in
add
ds
sbb
movsl
clc
or
jle
jae
ficompl
mov
xchg
cli
pusha
in
add
mov
jo
jle
sbb
jnp
sar
fldenv
lock
fidivrs
xor
push
dec
ja
rol
bound
cmc
inc
mov
into
ret
mov
and
repnz
test
or
pushl
in
sub
xchg
xlat
test
mov
push
ret
lcall
psadbw
mov
mov
test
clc
repz
xor
sbb
sub
cmp
inc
fisttpll
mov
cmpsb
aas
repz
stos
idivl
and
pop
jmp
clc
or
loopne
fisubrl
cli
add
jle
adc
insb
mov
ffreep
cmp
pop
cltd
lea
dec
dec
inc
ds
imul
pushf
aad
inc
repnz
aam
mov
fsubrl
adc
adc
iret
sub
or
xor
ja
xor
out
lret
testb
test
insb
stc
loop
fwait
xchg
lcall
shrb
push
lcall
jle
dec
mov
sbb
aam
sbb
add
cmp
adc
or
push
mov
mov
iret
mov
rcl
int3
mov
and
xor
jne
int
push
pop
xor
fiadds
int3
ja
mov
jo
movsb
mov
jecxz
mov
aam
in
imul
cmp
and
dec
cld
shrb
jecxz
repz
pop
dec
inc
mov
rcl
push
int
add
out
mov
lcall
js
data16
mov
jae
and
push
andb
shlb
lret
sbb
js
or
pcmpgtd
bound
cmpsb
into
mov
pop
xor
inc
pusha
idivb
and
fldcw
sar
loope
pushf
xchg
ret
lock
fwait
cld
sbb
mov
ret
mov
test
lods
ljmp
push
xlat
mov
xor
jns
addr16
daa
in
data16
push
filds
sbbb
inc
mov
add
pop
inc
xchg
or
jmp
xchg
push
popa
inc
je
and
ja
stos
lcall
fstl
lcall
mov
dec
add
repz
adc
xchg
dec
sub
test
push
dec
dec
dec
mov
icebp
inc
ja
sbb
jns
add
repnz
insl
adc
mov
add
xchg
dec
cwtl
or
aas
adc
pop
mov
fdivp
loope
xor
xor
sub
xor
mov
xchg
fnstsw
sbb
jge
out
pop
lds
push
mov
add
lret
lock
dec
lret
xchg
loopne
es
fistpll
sub
add
adc
adc
xchg
and
dec
jno
int
stos
lret
inc
xor
icebp
loopne
adc
jbe
cltd
pushf
sub
orb
mov
addl
testb
push
jae
inc
ficompl
dec
cld
jb
mov
mov
xchg
stos
adc
sbb
divb
mov
and
repz
adc
insb
test
jb
dec
xchg
pop
test
roll
and
popa
ss
shrb
push
sub
adc
inc
or
iret
shrb
add
pushf
dec
lcall
xor
scas
xchg
imul
sahf
jecxz
leave
jp
int
les
rclb
out
adc
in
repnz
bound
sbb
sbb
mov
mov
pushl
cmpsb
xchg
jp
jae
pop
sub
sti
mov
xchg
jecxz
push
xchg
mov
and
pop
push
movsb
stc
daa
xchg
inc
cmp
jne
cmp
aaa
push
or
movsl
movsb
lret
mov
fcompl
arpl
cmc
fiadds
insl
ret
cmp
lea
sbb
xchg
out
popl
xchg
aas
mov
push
or
int
mov
mov
fdivs
xor
std
mov
out
out
loop
in
lods
and
push
arpl
dec
ret
cmpsl
stos
data16
or
popa
push
insl
mov
dec
into
and
xor
in
mov
mov
push
mov
cmp
add
imul
pop
aad
inc
stos
mov
loop
sub
jne
repnz
outsb
inc
sahf
fmuls
rcrb
sbb
mov
xchg
jle
pop
or
sbbb
cmp
mov
pop
push
push
mov
stc
mov
popf
sub
mov
inc
jmp
cmpsb
push
cmp
dec
into
jl
das
add
sbbl
mov
sbb
rcl
mov
xchg
pop
mov
arpl
dec
shl
insl
out
xchg
jnp
out
and
push
inc
push
scas
cmpsl
mov
mov
pop
jnp
in
sahf
and
adc
fsubr
imul
mov
or
cmp
imul
sub
xchg
test
fiadds
lods
out
je
or
inc
cmp
xor
cmp
lock
and
lea
test
mov
ljmp
out
push
pop
test
dec
aad
mov
fmull
loope
aaa
add
dec
out
jmp
vpsrlq
inc
mov
inc
jb
jae
mov
inc
popa
rcr
rorb
xchg
add
sti
mov
mov
adc
push
popf
xchg
add
adc
add
cltd
mov
mov
push
dec
ss
add
jle
sub
cmc
jae
pop
imul
repnz
leave
sub
jecxz
fcompl
add
ret
sub
addl
loop
pop
insb
int
lods
jns
mov
fisubrl
xchg
mov
inc
push
insl
pop
cwtl
les
popf
ss
rorl
or
xchg
and
cld
out
pop
pop
enter
ret
xchg
pop
cmpb
adc
sbb
push
leave
cmp
fiaddl
cmp
daa
push
push
inc
and
push
in
sub
xor
and
shr
roll
sub
cmovnp
jb
lock
fldenv
lret
adc
xchg
scas
mov
ja
mov
xchg
test
jmp
fsubrl
mov
popf
mov
adc
enter
lret
inc
es
roll
sbb
jmp
mov
mov
and
out
cmc
inc
cld
jl
out
xor
add
sbb
mov
xor
cmp
mov
repnz
cmp
push
fbstp
test
jnp
notb
cmp
rolb
jae
mov
es
pop
ss
sbb
es
js
in
data16
and
pop
std
lret
mov
rep
jns
int
xchg
test
push
mov
aaa
mov
push
sbb
jp
jmp
scas
sub
fwait
xor
dec
mov
scas
mov
lret
test
jnp
add
and
subb
xorl
jbe
adc
mov
in
mov
pop
jb
cmp
add
daa
pop
out
scas
sub
jae
xor
arpl
fwait
imul
shrl
into
cmp
adc
jmp
fs
int
icebp
repz
nop
xor
sbbb
lret
test
mov
pop
jmp
or
xchg
stos
mov
cmp
push
jl
fists
insb
sub
xor
cwtl
or
dec
lea
lea
jno
add
insb
lds
fbstp
out
or
adc
adc
sbb
gs
jge
es
sbb
jmp
or
shll
bound
std
or
lcall
mov
aam
mov
or
dec
mov
add
mov
aam
xchg
gs
pusha
daa
sbb
push
and
cmp
cmpsb
ret
addb
inc
mov
in
imul
fucom
or
cwtl
pop
pop
push
testb
rorb
jo
xor
xor
test
xor
lods
mov
outsb
test
data16
push
cmpsl
adc
mov
cmc
jae
add
fstsw
jmp
out
mov
dec
imul
test
and
mov
mov
into
push
dec
popa
pusha
ficomps
sahf
popa
push
pop
xor
orb
out
mov
aad
mov
sub
aaa
pop
mov
lret
movsb
out
pop
sbb
xchg
push
pop
mov
mov
sbb
inc
rolb
cmc
fdivs
shlb
mov
fiaddl
inc
push
cli
movsl
int
ja
js
adc
push
xchg
pop
popf
mov
mov
mov
xor
movsl
mov
insl
push
outsb
or
scas
xchg
imulb
jl
add
xchg
xchg
and
into
imul
jae
mov
dec
call
dec
and
mov
ljmp
sti
mov
or
sbb
dec
adc
and
xchg
je
repz
ss
ftst
loop
sarb
jl
inc
mov
pop
popa
popa
dec
pop
int3
sub
aas
cmpsb
lahf
leave
into
hlt
mov
sub
jmp
gs
cltd
jb
sbb
adc
sub
pop
add
cmp
fnstsw
mov
loop
pop
mov
imul
loope
imul
push
xor
inc
jo
jnp
ret
arpl
inc
or
out
xchg
cmc
push
enter
jle
outsl
xchg
add
test
add
fnsetpm(287
fdivs
rolb
jbe
push
out
add
xor
mov
pop
jle
adc
adc
imul
fiadds
leave
sbb
mov
fcomip
sub
sub
mov
gs
fistl
shll
mov
mov
pop
mov
cltd
es
jmp
cmp
out
and
adc
adc
or
mov
mov
mov
iret
xchg
sbbb
xorb
push
sbb
ret
push
icebp
xor
mov
stc
adc
ja
mov
and
popf
arpl
pop
addr16
test
jae
or
push
xchg
iret
and
fucomip
push
addr16
fwait
push
mov
mov
and
jle
adc
jbe
enter
dec
mov
ljmp
mov
dec
add
inc
mov
loope
pop
pop
aam
inc
mov
mov
jmp
cmpsl
data16
pusha
popa
cmp
inc
mov
cmpsb
mov
sub
mov
clc
int3
lret
sub
sub
cwtl
push
adc
adc
mov
call
jnp
jo
lds
lahf
lret
cld
mov
mov
and
clc
lods
pop
lods
and
dec
xchg
mov
hlt
das
pushf
clc
dec
dec
arpl
repnz
jno
icebp
insl
jp
out
jnp
lods
leave
fs
sub
testb
push
pop
add
mov
push
or
xchg
xchg
fdivl
sahf
aam
int
add
das
sub
clc
dec
ds
and
or
cltd
out
shrb
mov
mov
aaa
dec
leave
hlt
loope
std
notl
enter
xlat
sub
or
cli
pop
dec
xchg
mov
xlat
jge
addl
int3
and
repz
ret
out
jp
pop
js
mov
jb
mov
jle
jmp
mov
mov
mov
lds
das
mov
and
mov
in
pop
jge
pop
add
pop
shll
fnsave
xor
ljmp
mov
dec
mov
mov
mov
jg
cmpsb
push
mov
fwait
xorb
repz
jbe
lods
dec
mov
addb
icebp
ret
rorb
pop
insl
fsubrl
fsubs
add
sti
loop
fsubrs
push
cli
lahf
jae
mov
sahf
xlat
imul
jp
mov
mov
lahf
out
xor
das
mov
in
inc
cmp
jae
mov
sub
add
jp
nop
int
lods
lods
xor
xor
xor
mov
jmp
xchg
hlt
xchg
push
jb
xor
loopne
pop
mov
mov
mov
add
mov
add
inc
sub
xchg
or
or
js
arpl
mov
sub
into
cmp
rcl
mov
jle
dec
aaa
push
int
sbb
fmull
scas
and
sbb
dec
lcall
dec
xor
push
push
cmc
fwait
repz
or
and
aam
mov
hlt
push
loope
push
or
cmp
push
test
arpl
push
rcrl
call
pop
rorb
inc
insl
jo
sub
jmp
push
imul
sub
sub
pop
and
fdivs
push
jge
mov
jbe
sbb
dec
ds
push
or
push
add
xor
mov
fwait
vcvtps2dq
fmull
shrb
in
das
push
movl
arpl
xchg
xchg
xor
xor
xchg
jmp
mov
sahf
push
and
loopne
cmc
sbb
mul
jl
pusha
and
xchg
mov
rclb
mov
lea
fcomps
fisubs
loopne
jmp
out
mov
fiadds
and
dec
scas
pop
mov
sub
dec
cmp
jb
pop
jge
sbb
and
shr
insl
jmp
dec
pop
loopne
cmp
test
jnp
add
mov
je
into
mov
pop
rcrl
sbb
aad
jo
inc
mov
mov
test
insl
cld
or
pop
jg
dec
push
pop
cli
add
out
fnsave
fidivrs
cmp
adc
ljmp
shll
out
int
arpl
rorl
repnz
shr
xchg
xchg
mov
cwtl
mov
sub
mov
dec
fidivs
sub
inc
xor
pop
cld
clc
mov
cwtl
lret
movsl
bound
fstps
outsl
les
lock
push
sahf
sbb
cwtl
cmp
mov
lahf
jmp
aas
sbb
xchg
mov
cmp
clc
push
in
xor
icebp
sahf
jno
dec
out
cmp
outsl
pop
mov
lea
mov
xchg
pop
popa
jecxz
sub
int
cmc
jno
ja
mov
and
in
adc
push
mov
mul
smsw
hlt
repnz
inc
xor
dec
aaa
pop
add
adc
lods
and
outsb
sub
fs
cwtl
roll
sbb
lret
and
cmp
ficomps
cmpsb
fidivrs
pushf
mov
ret
stos
jne
pop
adc
ret
insb
and
mov
sub
sbbb
dec
jbe
inc
int3
jns
jbe
inc
or
pop
fnsave
lods
mov
idivb
lret
or
aam
stc
jmp
fstl
outsl
inc
sbb
xor
stos
sbb
mov
scas
mov
xchg
test
leave
mov
lret
ljmp
aad
insb
mov
jge
ret
xchg
jge
cmp
mov
xor
mov
jmp
add
lret
test
fadds
mov
pop
stc
xor
daa
pop
fs
icebp
sbb
sbb
sbb
in
adcl
or
je
push
repz
inc
out
fisttpl
stos
test
test
sub
sarb
add
out
repnz
stos
rcll
pop
scas
sbb
stc
xchg
test
fbstp
ret
mov
xchg
cltd
int
or
lods
dec
inc
xchg
jg
pop
adc
fwait
xchg
es
inc
inc
lret
sbb
and
icebp
cwtl
adc
push
into
push
jbe
popa
bound
jne
adc
sarb
xlat
mov
inc
cltd
loopne
mov
push
xchg
push
ds
jge
or
mov
xchg
dec
mov
lret
push
sbb
cli
shll
test
test
inc
inc
xchg
or
mov
loop,pn
or
mov
mov
pop
mov
in
je
jp
mov
lods
jne
out
add
cli
or
in
loope,pt
icebp
mov
movsb
sbb
xchg
jmp
sbb
pop
jg
lods
adc
or
and
dec
rcrb
popf
xchg
adc
push
sbb
orl
push
cmp
xchg
hlt
out
imul
inc
xlat
pop
pop
mov
into
shll
mov
rcrb
mov
out
mov
int3
testb
sub
push
ja
mov
in
popa
out
xor
les
dec
inc
sti
enter
loop
push
mov
mov
push
andl
cmp
cmp
ret
and
lods
adc
dec
cmp
ds
push
pop
xchg
jl
mov
ja
or
rorl
mov
fs
fnstenv
inc
je
sbb
inc
pop
jne
je
mov
daa
cmp
std
pushf
insb
out
jbe
push
cmc
fsubl
jecxz
cmp
fidivs
cmp
loopne
sbb
mov
out
fwait
iret
or
insl
movsl
push
adc
push
pop
andl
repz
mov
mov
mov
xor
xchg
push
loope
pop
divl
pushf
aad
pushf
xorl
cmp
in
sbb
sub
std
ret
pop
in
push
dec
jnp
dec
xorl
rorl
and
mov
and
mov
dec
pushf
shlb
data16
lods
jecxz
add
mov
pop
adc
mov
dec
adc
dec
outsl
das
loop
lcall
loopne
sbb
fwait
stc
ja
sub
dec
mov
sbb
jns
popf
ljmp
popa
pop
pop
inc
je
and
dec
shlb
xor
fcomps
inc
hlt
cmp
cmpsb
shr
mov
repz
cmp
stos
and
pop
sbb
pop
and
sti
sbb
clc
sahf
movsl
sbb
stos
mov
dec
sub
sub
push
inc
xchg
test
xor
xor
enter
sub
xchg
cmp
jns
testl
int3
call
adc
inc
mov
xor
enter
jb
xor
dec
lret
mov
lret
or
sub
push
sbb
leave
mov
daa
cmp
xchg
pop
jmp
sub
insl
push
cmp
nop
fwait
js
insl
add
negl
in
rorl
fsts
mov
shll
push
sub
and
mov
test
cmp
subb
add
jbe
inc
add
pop
adc
lahf
daa
pop
sbb
mov
or
or
mov
mov
xchg
lret
push
adc
cmp
lods
and
in
mov
jge
rclb
push
aam
fadds
mov
aaa
adc
jbe
in
cwtl
push
aam
jno
inc
popa
jmp
add
dec
adc
dec
jns
add
pop
pop
sbb
test
push
ja
loope
add
or
leave
scas
push
lcall
sbb
pop
call
push
pop
push
cmc
pop
pop
mov
cltd
mov
enter
push
lcall
adc
jb
mov
add
scas
jb
mov
add
mov
pushf
out
outsl
push
sbb
or
notb
mov
hlt
sti
xchg
push
jo,pn
xchg
pop
test
dec
scas
cmp
pop
pop
xchg
bound
mov
mov
adc
jne
ret
cmpsl
cmc
call
lret
mov
por
or
lahf
mov
jns
bound
jns
divl
push
frstor
ja
pop
push
jb
aaa
mov
cmp
mov
xchg
notb
adc
jg
shlb
mov
dec
scas
xchg
xchg
mov
mov
adc
inc
shrl
xchg
fisttpll
cli
pusha
clc
push
gs
stos
sub
daa
and
inc
jle
fucomi
fwait
shlb
insl
neg
les
inc
push
fistpll
sahf
test
sub
xchg
pop
mov
xchg
cmp
mov
movsb
sbb
inc
popf
xchg
mov
lods
push
sub
mov
pop
pop
inc
aaa
ja
inc
js
in
and
and
mov
scas
lock
lcall
lock
xlat
add
inc
push
outsl
mov
rorb
add
mov
popa
hlt
xor
xchg
sarb
inc
roll
data16
pop
outsb
sub
xor
aad
test
sahf
sub
lea
sbb
sub
js
lock
sub
sbb
pop
mov
lret
pop
jae
cmp
pop
push
repnz
lret
cs
in
fiadds
inc
popa
inc
fnstsw
or
push
icebp
ja
and
fildl
cmp
scas
and
jbe
leave
xor
loopne
push
push
dec
rorb
lods
in
xlat
or
fstpl
ljmp
cmp
jmp
mov
daa
or
sbb
in
cmp
rorb
mov
sub
xor
cli
test
xchg
lahf
shlb
cmpsl
mov
pop
xor
mov
pop
fdivs
out
pop
pop
mov
lcall
jge
xor
xlat
xchg
push
dec
repnz
add
or
cmc
adc
jecxz,pt
mov
sub
or
xor
cmp
xchg
cmp
cmp
adc
ret
fucomip
or
bndstx
push
adcl
jno
and
push
push
mov
leave
dec
mov
and
ss
fildll
scas
jae
nop
inc
dec
dec
es
lods
rcrb
ffree
rol
sbb
cltd
stc
roll
xor
lahf
cmp
sbb
push
and
sarl
sbb
sbb
fs
sub
dec
push
sbb
flds
cs
cmp
push
fs
sub
rorl
mov
das
es
add
xlat
mulb
mov
pop
inc
xchg
pop
inc
adc
jne
mov
lods
push
and
test
fimuls
add
js
and
in
shlb
pop
cmp
arpl
mov
negb
adcb
lcall
jnp
pop
lea
adc
call
je
mov
or
sti
mov
xor
jbe
pushf
out
sbb
cmpsb
add
or
push
xchg
inc
mov
cmpb
cmp
lahf
ljmp
or
sub
jg
jns
and
and
adc
stos
cmpsb
push
jbe
dec
cwtl
stos
insl
lea
pop
xor
in
sub
rolb
loope
jp
push
inc
repnz
out
subb
pop
push
sbb
lock
jecxz
imul
jae
pop
rorb
and
stos
iret
decl
add
cmp
jle
pop
sbb
mov
jns
in
xchg
pop
rorl
cmp
out
jno
push
shrb
push
push
fstpt
pusha
pop
filds
loope
mov
in
xor
adc
hlt
loopw
dec
scas
ljmp
xchg
push
mov
and
xchg
fdivrl
pop
sbb
lret
xor
and
pop
insl
cmp
xchg
jl
cmp
ret
push
adc
outsl
xchg
mov
out
xor
int3
inc
scas
xor
push
jne
hlt
mov
mov
smsw
mov
sub
lods
es
inc
jge
xlat
mov
repnz
test
enter
or
cltd
add
in
clc
repz
add
dec
inc
stc
aad
test
rcrl
out
cmp
outsb
mov
out
stos
orl
paddw
push
xchg
and
ret
mov
pop
or
bnd
jnp
nop
jg
mov
insl
push
dec
ret
sbb
add
ret
ja
add
leave
mov
jb
adc
int
inc
scas
inc
cmp
and
add
pushf
push
mov
pop
push
loop
sti
dec
xor
cmp
test
lods
cmpsb
push
movsb
push
loop,pn
add
xchg
aam
scas
cmpl
dec
xchg
cwtl
xchg
adc
js
lahf
popf
dec
pop
or
enter
faddl
or
or
ret
sbb
lods
xor
cs
jo
push
and
cltd
mov
cs
fs
dec
cmp
xchg
cmp
mov
push
cmp
jp
arpl
jg
in
ljmp
xchg
gs
xchg
ds
sbb
mov
and
mov
repz
push
add
arpl
adc
dec
or
lock
daa
ljmp
insb
xchg
sub
cmc
pop
lahf
xlat
pop
andb
loopne
dec
pop
push
mov
sub
jns
ret
sub
jns
nop
jle
and
jecxz
sub
and
jcxz
shlb
iret
xor
xor
xchg
movsl
jle
iret
mov
jp
outsl
or
popa
aaa
std
imul
inc
pop
sar
in
xor
popa
pop
cmp
sti
dec
mov
popa
cli
xchg
rcll
pop
sbb
cs
test
mov
lahf
and
call
pushf
inc
jne
and
mov
aad
imul
xor
aaa
test
cmp
addr16
dec
jae
out
dec
les
cs
cmp
xor
or
xor
inc
lods
fsubl
pop
outsl
jo
jb
jno
out
xchg
xchg
out
or
mov
dec
cmp
jb
scas
sub
adc
ror
sub
sbbl
push
cmp
mov
out
mov
repz
or
mov
sbb
jns
push
adc
sahf
pop
aaa
bswap
adcb
jne
lcall
daa
xchg
or
ja
not
adc
mov
aam
pop
jle
add
addr16
jae
xchg
in
push
xor
pop
cld
xchg
rolb
xchg
push
jmp
push
pop
in
xchg
and
leave
shl
loopne
sbb
and
bound
lods
inc
testb
push
mov
std
pop
adc
icebp
add
rcrl
sbb
sub
stos
cmp
push
sub
mov
xchg
adc
js
lahf
xor
roll
push
mov
xchg
xor
aad
int
jns
sbbb
das
cli
std
add
dec
dec
pop
repz
scas
outsl
adc
daa
xchg
pushf
dec
cmp
shlb
inc
and
fldenv
mov
dec
add
dec
sub
nop
mov
lcall
nop
cld
gs
and
and
xchg
ret
sbb
fisubrl
fdivrp
mov
mov
push
sahf
rcr
jg
test
mov
adc
lea
mov
loope
and
xor
xchg
mov
lea
adc
flds
adc
jnp
mov
adc
or
lret
jecxz
sbb
inc
das
repnz
jecxz
outsb
push
test
mov
shll
cmp
sbb
mov
push
jno
popa
and
int
hlt
and
fsubr
in
cmpsb
mov
inc
pop
loopne
test
ret
and
cwtl
fldcw
add
fimull
jg
xchg
mov
pop
aam
xchg
mov
inc
pop
test
orb
ljmp
sahf
pop
das
insl
hlt
xchg
hlt
add
pop
nop
jae
sub
jge
add
mov
mov
or
mov
fiadds
sbb
push
ja
sbb
enter
jno
xchg
outsb
fsubrl
jmp
pop
mov
and
fcoml
pop
add
and
hlt
xchg
pop
mov
xchg
addr16
unpcklps
dec
inc
roll
sbb
dec
cmpsb
mov
fistpll
loope
xchg
mov
jns
mov
xor
pop
add
outsb
add
jne
outsl
pop
xor
ja
or
lret
rorb
aad
icebp
add
dec
cmp
test
clc
pop
in
movsl
and
test
scas
sub
shrl
sbb
aad
push
push
xchg
push
lods
int
mov
and
dec
jl
sub
rcrl
ja
mov
push
mov
xchg
mov
jmp
das
fbld
jb
adc
push
xchg
lods
stos
lret
push
imul
stos
cwtl
lret
xor
pop
arpl
mov
xchg
add
xchg
add
mov
subl
jle
xchg
sub
outsb
xchg
push
push
mov
bound
lret
xor
sbb
xchg
repz
insb
jne
in
or
in
adc
fadds
je
pop
jg
dec
sbb
or
cwtl
inc
sub
mov
inc
neg
pop
lcall
outsl
sub
xor
xor
int3
cs
or
xorl
call
push
adc
call
cs
das
push
mov
ljmp
dec
inc
aas
dec
sub
icebp
cwtl
and
push
arpl
and
xor
add
or
dec
dec
pop
push
popa
jns
mov
mov
rcll
mov
sarb
cmp
cmp
sbb
lods
cmc
sbb
sub
js
add
inc
and
jl
insb
jmp
pop
and
inc
lock
push
das
sbb
add
outsl
mov
ljmp
mov
rol
or
jmp
mov
cld
add
sbb
inc
xchg
mov
fcomps
movsl
jb
cmp
sbb
add
xchg
fisttpll
cmp
sbb
iret
ficoml
inc
out
fisubrl
lds
push
adc
xor
loopne
in
xchg
lock
mov
xchg
pop
xchg
fldcw
inc
mov
js
adc
call
pop
dec
xchg
and
cld
jnp
inc
test
jbe
sub
add
mov
dec
mov
sub
push
jae
popf
jg
in
and
jmp
popa
rorl
stos
enter
out
in
lea
lods
or
pop
xchg
lods
pushf
rcrb
sbb
rclb
test
mov
adc
inc
sub
sub
lret
push
pushf
test
dec
je
lret
pop
jo
push
movsb
sub
mov
stos
add
insl
loop
nop
cltd
lods
and
ds
jno
add
js
cs
mov
pushf
fwait
ljmp
lods
push
popa
incb
jp
fidivs
pinsrw
mov
and
mov
sbb
xchg
push
push
jecxz
mov
adc
add
stos
test
lea
call
pop
lods
push
jmp
in
into
add
xchg
cmp
pop
sub
ret
into
roll
ficoml
sbbl
test
lods
in
push
jo
ficoms
and
gs
dec
cltd
sbb
in
pop
outsb
xorl
in
add
cmpsl
cld
push
sbb
or
and
enter
push
into
adc
pop
mov
adc
push
sbb
or
push
fsubrl
add
pop
mov
cmp
jl
cli
and
dec
enter
call
inc
repnz
andb
dec
push
jl
loopne
scas
xor
push
mov
xor
jno
and
mov
mov
cmc
push
in
xchg
pop
push
jle
mov
xchg
lret
mov
push
adc
fbstp
push
inc
cmpl
mov
mov
push
pop
gs
xchg
cmp
jmp
xchg
rol
fmull
js
lea
sbb
fsub
jecxz
xchg
add
jbe
repz
sub
test
cmp
imul
cli
adc
fnstsw
lret
jbe
add
push
sub
and
mov
mov
sub
push
xchg
jns
out
push
mov
into
test
mov
mov
movsb
lret
in
fsubrl
sub
cs
or
loopne
ror
mov
pop
mov
dec
cmc
gs
imul
inc
mov
push
subb
sub
dec
sbb
adc
add
inc
xor
or
mov
inc
cmovle
push
adc
cmp
dec
cmp
fs
ret
scas
ficoml
sbb
dec
add
mov
nop
dec
xchg
std
xchg
push
mov
inc
cmpsl
pop
call
cmc
pop
stos
xorb
xor
in
xchg
xor
adc
cmp
sub
cmp
mov
sub
test
xchg
movl
das
sbb
sub
jge
imul
insl
repz
aaa
mov
inc
cmovo
jl
test
pop
jle
xchg
mov
mov
stc
enter
pop
or
inc
outsl
les
pop
fmull
lea
inc
bound
mov
xchg
clc
aaa
lds
sysenter
mov
dec
jne
enter
fcomps
les
out
std
ja
pop
mov
cmpl
dec
xchg
sbbb
adc
cwtl
jo
adc
dec
test
or
inc
jo
jne
loopne
fwait
addl
repnz
jnp
andb
adc
lods
movsl
push
xlat
lcall
xor
repnz
popa
adc
pusha
mov
movsl
jmp
jle
adc
into
mov
jns
sbb
sub
inc
enter
dec
dec
mov
andb
adc
clc
sbb
cmp
sbb
mov
add
rcll
es
adc
inc
add
sub
jp
xor
push
jns
movb
cmpsl
test
mov
rorl
push
inc
pop
mov
sub
sbb
xor
test
and
pop
pop
pop
sub
rclb
pop
jae
fstps
jo
jecxz
push
mov
pop
aad
stos
inc
pop
ret
cli
je
iret
iret
push
sub
jle
mov
dec
adc
out
aad
mov
dec
scas
loope
test
jnp
enter
in
inc
aas
popa
fsubl
pushl
pop
push
insl
inc
push
mov
pushl
adc
sahf
pop
xchg
and
sub
mov
fistpl
int
cmp
mov
popa
imul
jne
popl
loop
lahf
inc
mov
mov
xor
fcoml
divl
lahf
ret
fwait
imul
or
jb
pop
fwait
pop
ds
fsubrp
pop
cltd
les
pop
pop
add
bound
or
jb
push
mov
imull
xchg
adc
insb
call
jmp
mov
xchg
xchg
pop
fadd
add
ljmp
jnp
sub
mov
jne
jge
fdivrp
ja
lods
adc
test
pop
mov
loope
mov
cmp
dec
popa
pop
mov
loop
outsb
out
in
scas
mov
mov
test
sbb
xchg
xchg
movsl
in
in
out
or
scas
xchg
mov
sti
push
movsl
orb
das
jo
cmpsb
lods
ret
mulb
mov
sbb
nop
lret
jnp
std
mov
xor
or
mov
rorl
push
fists
mull
stc
sarb
std
mov
ja
std
hlt
fcomip
mov
or
lret
mov
or
jg
lcall
push
mov
jle
int3
cltd
xor
stos
aas
sbb
xchg
int
bound
inc
divb
push
xor
pop
mov
adc
nop
nop
adc
rcl
inc
xlat
pop
fwait
pusha
subb
shrb
mov
in
xor
hlt
outsl
loope
mull
jle
daa
push
jl
mov
iret
xchg
bound
and
or
sarl
fldt
inc
add
mov
gs
ficompl
and
imul
or
pop
clc
cmp
sbb
daa
rolb
xor
ds
lahf
int3
add
cmp
cmp
imulb
or
adc
sbb
subb
sub
lods
nop
std
out
mov
adc
fcomip
cs
pop
mov
lods
arpl
push
ja
nop
add
mov
push
xor
push
outsl
dec
daa
scas
ds
lret
xor
shll
in
lahf
sbbb
jbe
cmp
pop
int3
stc
addr16
sub
pop
icebp
dec
xchg
mov
push
mov
out
or
mov
and
sbb
pop
xchg
test
xor
notb
mov
fdivr
cmp
jns
dec
or
adc
jb
mov
dec
pop
add
into
movsb
pop
loop
imul
mov
adc
push
sti
sub
push
pop
xchg
mov
mov
mulb
in
pop
mov
pop
cs
push
dec
sub
aad
cmpb
mov
lds
lret
pop
adc
outsl
mov
data16
inc
pushf
xchg
imul
pop
mov
shrl
out
xor
cs
leave
cmpb
subb
and
pushf
and
mov
sbb
mov
arpl
or
loope
and
inc
xchg
inc
lds
mov
pop
xor
jecxz
les
fld
adc
mov
lret
loopne
out
scas
pop
cmp
or
fldt
mov
outsb
shrb
adc
jno
je
cmp
mov
sbb
fs
add
inc
dec
mov
pop
xor
out
xchg
int
sub
aam
pushf
in
sti
pop
push
sbb
lahf
dec
mov
imull
out
fldcw
nop
xor
pop
cs
das
xchg
push
adcl
mov
xchg
adc
movl
xchg
dec
adc
xlat
cld
mov
add
sbb
movsb
xchg
cli
cmpsl
inc
adc
inc
lret
pop
xchg
dec
dec
sub
xchg
sub
xchg
xchg
sub
push
pop
jg
arpl
jno
sarb
mov
das
mov
sbb
imul
pop
movsb
std
leave
dec
dec
sti
subb
push
in
sub
inc
adc
ja
rcl
cmpsb
dec
ds
leave
in
mov
jl
sub
cltd
test
enter
aas
lret
push
and
out
js
shr
out
jl
xchg
sarl
push
cmpsb
xchg
add
dec
nop
or
call
dec
xor
jb
pop
jmp
fbstp
sbb
jns
loopne
sahf
ljmp
jbe
mov
int3
aaa
filds
mov
or
jl
rcrb
xorl
dec
mov
nop
jl
pop
or
pop
dec
add
xchg
not
inc
dec
mov
lahf
mov
leave
je
repz
xchg
cmp
pop
icebp
pop
int
je
xchg
pop
test
daa
adc
xor
loop
or
sbb
mov
mov
hlt
lea
jno
sarb
lcall
and
in
rol
in
enter
adc
push
lea
fidivrl
stos
jns
popf
ret
inc
mov
mov
addr16
pop
lea
addb
cmpsb
pusha
xchg
aad
daa
sub
push
sub
mov
jno
sub
jb
fisubrl
scas
inc
lret
ss
sti
inc
sahf
mov
jg
enter
out
sbb
xchg
or
mov
sbb
mov
add
test
xor
les
xor
pushf
sti
mov
mov
xchg
out
pusha
data16
gs
push
shl
sbb
fmuls
aam
daa
pop
inc
mov
sbb
insl
dec
shll
mov
jecxz
push
pop
mov
call
pop
sub
sahf
inc
imul
sarl
ljmp
loopne
adc
imul
loope
xchg
push
stc
jecxz
stos
aad
mov
xchg
std
into
in
mov
andb
push
lock
fidivl
inc
mov
bound
rcrl
stc
insb
outsl
pop
icebp
mov
ss
mov
out
call
leave
mov
movsl
fdivrl
dec
leave
xchg
ficoms
data16
cmp
sub
test
imul
mov
gs
mov
jg
jmp
bnd
sub
xchg
push
dec
and
cmp
pop
in
in
and
jne
addr16
fmull
inc
loop
jne
mov
jo
and
sbb
push
test
outsl
push
icebp
push
mov
mov
lahf
mov
add
mov
sar
sbb
and
pop
add
aam
push
int3
jne
mov
sbb
inc
imul
jmp
popa
pushf
dec
jae
outsl
lods
fistl
daa
aas
imul
jo
pushf
sarl
jmp
pop
ret
fwait
push
stos
mov
sbb
outsl
popf
inc
jne
int3
pop
mov
pop
lds
sub
jne
push
cmp
add
xchg
mov
popf
dec
adc
adc
jo
lock
push
iret
insl
add
popf
adc
popf
fnstsw
int3
xor
push
test
lea
daa
fwait
or
test
xchg
loop
lds
sub
insb
add
call
jo
push
scas
adc
clc
rcll
jmp
inc
add
dec
lcall
mov
push
jg
shlb
mov
or
test
bound
scas
xchg
mov
scas
inc
add
adc
mov
adc
adc
rorb
xchg
ret
addr16
test
push
push
into
or
sub
ret
mov
data16
out
pushf
xchg
ret
dec
pop
and
mov
insl
jbe
pop
das
repz
gs
jbe
gs
cmp
loopne
ret
addb
pop
cmp
or
inc
cmp
and
mov
xchg
cwtl
jge
and
add
test
jg
fs
outsl
pusha
inc
xchg
fs
mov
andl
push
int3
jo
pop
jbe
test
cwtl
in
pop
and
jo
je
js
jns
mov
and
cmp
push
push
mov
roll
sbb
inc
ja
out
sub
dec
pusha
into
ret
outsb
push
inc
or
xchg
loop
or
clc
sub
lcall
addb
inc
sahf
pushf
sbb
mov
inc
cwtl
sti
push
pop
je
jmp
xor
mov
fsubrp
xchg
rolb
or
adc
repz
shlb
cwtl
or
sbb
xchg
add
stos
movsl
lods
stos
push
adc
mov
jnp
dec
jo
insb
cld
lea
dec
push
into
cmp
mov
push
out
mov
orl
add
les
daa
fildl
add
pushf
dec
test
dec
sarb
cwtl
pushf
xchg
adc
mov
test
and
in
lods
addr16
mov
lds
push
clc
xchg
es
inc
inc
and
iret
gs
pop
push
dec
xor
mov
dec
test
xor
and
push
in
stc
shll
pop
mov
outsl
cltd
xchg
dec
push
out
lods
int3
out
dec
add
jo
addb
inc
dec
mov
cmp
cs
in
aaa
mov
out
mov
jl
aaa
xor
add
repz
adc
jnp
push
out
in
cwtd
in
ss
loop
faddl
mov
les
outsl
cmc
fistl
or
adc
jl
ret
lret
dec
dec
in
push
jl
rolb
xor
insb
inc
lret
cs
cli
cmp
xchg
inc
lret
or
fstpt
push
mov
xchg
les
cli
in
dec
stos
and
push
loope
add
sub
mov
jbe
jp
add
xchg
addb
cmp
repnz
push
pop
pop
insl
int
cld
movsl
mov
pop
popf
cld
mov
out
movsb
int3
mov
notb
inc
out
mov
lods
mov
movsl
popf
xchg
fidivrl
fdivrs
imul
enter
loop
mov
jo
add
jb
enter
inc
pop
ja
movsl
addl
mov
cwtl
stos
cmp
dec
sub
sbb
call
int3
push
mov
mov
fcoms
rcll
xchg
loope
and
cmpl
lcall
loop
xchg
out
inc
sub
ret
out
into
dec
daa
in
lret
mov
scas
adc
iret
xchg
sub
popa
mov
and
jb
xchg
xchg
adc
xchg
aad
icebp
fndisi(8087
outsl
subb
and
sahf
lret
dec
dec
ja
mov
cli
pushf
pop
push
shll
jbe
dec
add
mov
dec
aam
out
in
fistps
ss
sbb
pop
mov
sti
push
cmpb
jns
aam
add
push
lods
push
cmc
out
pop
pop
std
pusha
sti
lods
adcb
sbb
mov
test
ret
mov
push
imul
cld
dec
mov
loop
sbb
inc
xchg
or
stc
xchg
gs
inc
test
sahf
cmp
testl
icebp
aad
cmc
xor
push
mov
sbb
sbb
lds
scas
andl
addr16
xchg
or
ret
dec
mov
inc
mov
rcll
mov
out
add
mov
and
inc
shrb
mov
out
aaa
out
push
lret
add
push
loopne
jmp
dec
dec
xor
or
jno
mov
je
or
cmp
lock
and
xchg
enter
je
xor
push
jae
sub
dec
mov
xchg
out
mov
add
jle
mov
pop
lods
jae
xchg
ret
lods
ds
xchg
sub
sub
and
mov
add
and
scas
pop
mov
les
in
cmp
fucomip
jno
inc
xlat
shl
and
and
stc
adc
sub
xor
xlat
rcll
jecxz
pop
push
and
dec
arpl
jne
or
pop
push
jnp
aam
and
xchg
xchg
sbb
mov
add
in
jbe
int3
and
insb
ret
jno
cmp
ret
jp
test
push
xchg
sub
push
cmp
fsubs
out
movl
int
in
adc
lret
add
icebp
insl
adc
imul
mov
aam
jp
mov
rcrl
inc
ret
ja
dec
fisubrs
mov
testl
mov
mov
clc
push
es
movsl
pop
imul
dec
sbb
lretw
mov
inc
xor
sbb
add
aad
stos
push
nop
shrl
push
cs
cwtl
rcrb
jmp
add
sarb
pop
mov
or
and
cmp
aad
sub
cmp
cld
and
sbbb
mov
jne
cmc
push
cmpsl
and
mov
cmp
sub
pop
cmp
jae
fbld
lret
lock
or
test
xchg
aam
cmp
mov
insl
mov
adcb
out
xchg
addb
bound
mov
popa
xor
rorb
popa
cmp
scas
loope
sbb
pop
loopne
add
jmp
test
jb
into
pop
cmp
pop
pushf
out
xchg
cmc
movsl
orb
xor
popf
addr16
fwait
sbb
add
aas
movsb
mov
dec
sub
lds
mov
push
sbb
xchg
cmp
mov
inc
subl
push
mov
mov
push
rorb
mov
popa
push
push
cs
jecxz
fwait
test
stos
xor
sub
inc
scas
icebp
faddl
stc
or
jge
pop
adc
div
and
add
cmp
dec
repnz
imul
loope
push
out
fnstenv
in
dec
xchg
test
imul
sbb
shll
jp
jle
insl
inc
bnd
addr16
hlt
sub
out
cmc
daa
xor
sbb
mulb
lea
mov
xorl
push
pop
mov
lret
in
aas
leave
sar
stos
inc
stos
xchg
fiadds
ret
jno
sub
cmc
mov
dec
test
outsl
pop
std
popa
mov
out
xchg
push
sbb
insb
push
xor
mov
jb
push
cmp
gs
push
jno
fsubr
push
mov
pop
jns
mov
or
int
hlt
gs
fildl
mov
or
or
mov
sub
jno
sbb
pop
sub
or
addb
push
in
data16
rcr
mov
and
arpl
mov
cmp
mov
in
jns
adc
cmp
cmp
in
pop
iret
stos
adc
sub
enter
dec
popf
xchg
into
test
ljmp
cmpsl
or
mov
ss
mov
sub
dec
inc
jno
push
stc
mov
sbb
gs
adc
imul
jbe
out
and
ds
popf
ret
hlt
jle
push
dec
mov
shlb
mov
mov
out
int
cli
fcoml
push
pop
xor
mov
loop
mov
xor
scas
mov
repnz
sub
mov
in
outsl
fldenv
cmp
sub
jae
popa
addb
mov
mov
or
push
dec
push
daa
add
ds
xor
mov
mov
mov
out
clc
fsubrs
test
xchg
dec
hlt
sub
push
out
sbb
cltd
cli
jge
or
xchg
ret
int3
xor
jbe
mov
mov
add
rorb
loop
fs
lret
fadds
int
push
dec
fnstsw
xor
and
push
mov
lock
jae
or
aas
les
adc
stc
and
jbe
fidivl
divl
sub
pop
mov
fldenv
insb
sub
adc
stos
sbb
outsb
repnz
sbb
fsubs
ja
pushf
dec
jbe
push
leave
sbb
dec
add
pop
cld
and
outsl
bound
and
xchg
push
jecxz
shl
pop
xchg
dec
inc
add
mov
addr16
sub
test
inc
lds
imul
aad
lds
dec
dec
ffree
jne
fstpt
rorl
xchg
shll
sub
adc
test
lahf
test
das
cltd
notb
je
aas
cli
mov
bound
and
fsubs
js
shl
dec
in
mov
fists
fldt
sbb
aaa
cmpsb
ror
cmp
jae
jp
mov
stc
scas
mov
push
dec
sbb
sti
add
cli
ja
sbb
mov
mov
lahf
leave
xchg
ret
or
out
jne
jge
adc
dec
pop
iret
imulb
movsl
int
push
in
and
jecxz
mov
ret
push
xlat
in
mov
pop
xor
out
cmp
mov
sbb
movsb
loope
icebp
mov
aas
sarb
push
icebp
cmp
pushf
sub
cmp
cmp
lahf
adc
or
jle
sub
imul
cltd
adc
scas
dec
pop
inc
xor
jg
add
adc
movsb
mov
mov
sub
cmp
data16
out
xor
adc
loopne
sub
sub
cmpsb
adc
aas
or
dec
push
or
jnp
outsl
lcall
xchg
mov
inc
nop
cld
aam
lcall
lahf
jae
jb
mov
aas
in
adc
dec
jne
adc
mov
pop
add
test
push
test
in
jmp
addr16
xor
lods
jb
xchg
je
out
add
mov
mov
out
pop
je
movsb
xorb
into
sarb
orb
mov
bnd
mov
jge
mov
mov
mov
push
mov
aas
ret
push
dec
imul
xchg
into
jp
push
lret
push
cmc
adc
xorl
push
sub
enter
inc
mov
insb
out
mov
cwtl
or
push
movsl
sbb
xor
cmp
jae
jne
jecxz
xchg
push
dec
adc
dec
and
dec
and
pop
pop
pop
inc
scas
xchg
cmp
adc
xlat
out
in
loopne
push
adc
mov
add
pop
sub
dec
jl
push
or
sarb
xchg
xor
jl
add
mov
or
push
lock
out
sub
ret
xor
cli
pop
push
push
aad
mov
andl
or
jae
inc
push
xchg
inc
dec
dec
adc
aas
sub
call
shl
and
das
jp
add
shrb
jg
shlb
loope
enter
xlat
out
cld
rcl
inc
jl
sub
mov
cli
cmp
sbb
aaa
jne
adc
push
clc
sti
push
sar
adc
xor
jmp
js
les
add
xchg
sar
shll
pushf
jnp
in
out
rolb
sub
bound
movhlps
or
or
icebp
sub
inc
mov
pop
ds
or
clc
xor
sti
mov
and
insl
bound
mov
and
rcrb
testl
xor
int
pop
out
push
outsl
mov
jecxz
push
jmp
cmpsl
push
push
jmp
adcb
ds
lods
pop
cltd
adc
fisttps
cmpsl
add
add
cli
pop
cli
adc
and
lea
daa
scas
shl
arpl
or
dec
jno
jnp
dec
fists
ss
fidivrs
int3
fs
mov
push
sbb
adc
scas
cltd
cmc
adc
inc
sbb
scas
jecxz
mulb
out
jb
xchg
scas
testb
inc
push
int3
shll
or
in
adc
push
mull
into
mov
jno
sub
sbb
loop
faddp
scas
les
sar
inc
lea
cmovnp
scas
test
add
test
xor
fildl
push
mov
fcmovne
in
push
pop
pop
pop
fildll
lds
and
dec
and
jbe
jns
rolb
pushf
dec
pop
addr16
lock
lods
test
mov
sub
jp
xor
notl
pop
jb
push
push
les
xchg
cmp
inc
mov
stos
sub
sahf
insl
inc
mov
cmovl
in
ret
in
lods
add
push
notl
jns
das
adc
shrl
aam
mov
inc
sub
int3
mov
xor
clc
inc
cli
adc
dec
xor
push
mov
inc
xor
sub
inc
sbb
mov
addr16
pop
inc
or
int
push
lcall
test
fdivrs
inc
adc
xchg
xor
cwtl
sub
nop
repnz
mov
movsb
arpl
sbb
stc
sbb
outsb
cld
and
adc
arpl
call
imul
and
jg
sbb
pop
xor
mov
xor
pop
popa
add
inc
int3
sbb
add
bndldx
addr16
push
lods
mov
andb
jg
fcomps
fstps
jle
addb
mov
scas
rcl
in
popf
mov
pop
xor
in
and
aas
repnz
dec
stos
push
push
aaa
test
sbb
outsl
bnd
mov
jg
pop
sub
and
push
jno
mov
cmpl
call
xlat
popa
imul
out
leave
pusha
cmpsl
dec
call
inc
std
mov
mov
inc
jbe
in
xchg
or
shrl
push
iret
fidivl
fsin
cmp
arpl
je
inc
push
push
dec
sbb
fcom
xor
adc
inc
pusha
fsts
aad
sub
sbb
cmp
cltd
repnz
xor
dec
je
test
adc
mov
jae
imulb
icebp
cmp
mov
int3
test
sahf
push
mov
imul
pop
stos
xchg
pop
out
jl
dec
scas
xor
inc
pop
mov
jne
jg
pop
mov
test
xor
ret
push
ret
cmpsl
xor
fsubl
mov
mov
dec
insb
add
jb
pusha
or
cmpsl
pop
outsl
jo
or
cld
ud0
dec
scas
loopne
nop
pop
and
jp
and
inc
dec
xchg
add
dec
jmp
scas
inc
icebp
cmp
lods
imul
adc
dec
lcall
popa
jg
call
and
pusha
outsl
pop
push
mov
cmc
sbb
jmp
xchg
xor
shrb
cmp
out
pop
mov
pusha
jno
vandpd
jmp
shrl
and
lods
enter
inc
fiaddl
jno
inc
xor
movsb
push
mov
or
das
inc
mov
pop
fmuls
call
adc
in
fcomi
add
leave
mov
lods
or
dec
inc
aaa
popf
jb
fs
mov
push
dec
clc
and
stos
aaa
int
mov
ja
test
adc
fsubl
push
stos
adc
dec
out
and
dec
nop
iret
movsl
jecxz
or
adc
ffree
jo,pn
iret
jmp
fstl
loop
pop
ss
hlt
out
loop
arpl
xor
inc
pop
and
sub
ljmp
in
pop
std
push
out
test
int
popf
nop
mull
mov
or
arpl
pop
jo
sbb
xchg
cli
nop
shll
push
sub
ljmp
mov
mov
scas
andl
loopne
pop
mov
int
mov
cmc
add
movsl
xchg
add
cmp
push
inc
jmp
roll
ds
hlt
xchg
and
jo
and
mov
in
jae
xchg
pop
adc
inc
lds
jmp
popa
push
mov
jge
sub
mov
stos
int3
iret
or
fisttpl
pop
or
mov
rclb
cmpb
scas
and
adc
insb
add
aas
mov
xor
in
stos
xchg
mov
pop
out
out
pop
cmp
fwait
sbb
stos
outsl
adc
gs
or
ss
aam
inc
stos
xchg
jne
sbb
cmp
cmp
mov
xchg
sbb
dec
cmpsb
push
insb
lahf
aaa
add
xchg
cmpsl
adc
nop
adc
mov
test
sub
cs
xchg
jl
call
xor
mov
inc
ss
mov
loop
imul
fs
or
call
divl
mov
lock
mov
les
sub
lret
sub
mov
mov
in
cmp
xchg
fs
fistpl
rclb
mov
lds
call
dec
in
dec
sbb
loopne
pop
imul
cmp
cltd
or
pop
pop
sbb
mov
ljmp
ds
mov
sarl
ret
sbb
ja
xchg
push
mov
loopne
jmp
push
xlat
push
mov
cmpsl
das
and
cli
jl
lods
movsl
inc
push
clc
stos
cmp
xor
sbb
add
clc
cmp
pop
xchg
loopne
gs
les
or
or
xor
loope
xchg
divb
push
rclb
in
cmp
adc
xor
outsl
mov
lea
mov
jmp
mov
sbb
neg
push
test
mov
in
shrb
in
test
pop
dec
inc
popa
ss
sahf
inc
or
dec
cs
in
in
sbb
xor
sar
sub
aad
scas
iret
add
and
mov
or
sub
or
aad
shrl
adc
fsts
mov
iret
jbe
test
stos
nop
sahf
nop
pop
div
out
or
cmp
mov
movsb
push
xchg
arpl
and
cmp
int3
and
xchg
adc
jmp
sub
insl
or
mov
xor
out
int3
and
rorb
or
sub
ja,pt
imul
push
and
stc
clc
in
push
out
mov
popf
iret
sbb
cmpsb
mov
mov
test
ret
mov
sub
or
pop
push
mov
and
xor
test
sarl
into
pop
mov
incb
mov
push
scas
fstpl
fstps
mov
cmpsl
xchg
pop
outsl
in
stc
lods
push
mov
mov
push
add
sub
push
stc
in
xor
fnstenv
sbb
lahf
push
xchg
dec
sub
stos
out
popf
add
fs
call
xor
adc
fsubrs
add
push
mov
stos
xor
push
or
sbb
mov
adc
imul
shr
lcall
pop
pop
pop
mov
orb
lret
xor
mov
pushf
out
mov
rolb
pop
negb
mov
cli
jbe
movsl
inc
loop
cmpsb
insb
mov
fnstsw
pop
cs
push
mov
fsts
pop
mov
add
xchg
and
cmp
lods
add
cmp
jle
mov
popa
je
fdivrl
scas
jmp
inc
adc
mov
jnp
push
ss
cmp
sbb
push
dec
or
sub
fldt
mov
inc
sub
pop
push
fidivrs
sbb
fnstcw
mov
pusha
mov
lds
cli
lcall
xchg
xorl
jp
mov
push
inc
fistl
dec
push
bound
lods
push
push
sti
cmp
cltd
jb
or
or
clc
pop
mov
arpl
data16
adc
stos
push
pusha
push
xchg
pushf
xor
push
repz
jne
out
add
mov
xor
and
pop
xor
test
add
lret
sbb
jle
mov
addr16
mov
inc
mov
xchg
and
dec
sbb
push
cmp
mov
xchg
mull
xchg
icebp
adc
and
call
addb
test
xchg
mov
es
out
jae
cmpsb
shlb
xchg
mov
pop
or
ficoms
loopne
or
jl
mov
adc
out
repnz
xchg
mov
cmpsl
mov
mov
test
sbb
mov
hlt
inc
test
jmp
je
jg
xchg
ja
loop
cmp
repnz
mov
lret
cwtl
leave
lods
xchg
mul
test
callw
mov
loop
mov
sub
out
mov
mov
push
imul
imul
add
movsb
push
cld
cmp
and
xor
add
ja
movsb
cmp
pop
mov
or
out
mov
stos
mov
pop
lods
inc
jne
mov
in
iret
cmp
sahf
xchg
mov
popf
test
and
dec
lods
fsubr
int
cltd
int3
inc
bound
jmp
lret
jno
or
ja
xor
insb
or
sbb
xor
lea
int
aas
loopne
fwait
clc
ret
jl
outsl
xchg
icebp
and
into
pop
addb
mov
push
pushf
pop
cli
adc
pop
aas
lods
mov
bound
pop
jp
mov
ss
lds
cmp
fsubr
adc
inc
xchg
add
into
insl
sub
das
popa
mov
pop
mov
out
jae
scas
fsubs
pop
out
cmpl
dec
pop
test
push
cmpsl
outsl
jmp
dec
jecxz
push
xor
dec
push
in
movsl
cmp
mov
jb
outsb
push
jae
decl
stos
dec
xor
pop
jae
aad
xchg
aas
aas
aaa
popa
pop
or
sub
or
mov
inc
movsl
pop
xchg
or
and
popa
push
cmpsl
scas
push
jne
out
jge
dec
or
ret
inc
mov
jns
pop
xor
mov
fildll
enter
sub
adc
test
add
mov
lcall
loop
inc
pop
cmp
in
jle
fidivl
mov
cmpsb
scas
lods
cmp
test
mov
xor
inc
adc
cmpsb
cmpsl
lret
jl
mov
nop
and
rol
mov
jbe
gs
loop
dec
sbb
mov
nop
sbb
dec
and
nop
push
outsb
and
pop
xor
and
sub
test
mov
mov
sub
adc
test
push
lds
ja
dec
inc
jbe
or
lret
xchg
xor
dec
cwtl
sbb
ret
inc
es
icebp
sub
jno
xchg
int3
jbe
sub
cli
inc
push
cwtl
pop
jo
repz
fisttpll
div
mov
push
stos
pushf
or
pop
adc
push
mov
dec
xor
mov
jge
pop
lea
mov
add
inc
jp
mov
mov
xchg
not
push
jmp
sub
pop
or
xchg
pop
jmp
idiv
and
je
cltd
movsl
adc
sub
mov
xchg
into
testb
mov
pusha
mov
int3
cmp
jo
jns
sub
push
sub
fidivl
outsb
in
push
into
mov
in
inc
loopne
outsb
ds
cmc
jns
xchg
jne
mov
shlb
stos
sub
fbstp
and
dec
cmp
xchg
pop
mov
nop
or
flds
ds
sarl
mov
sbbb
sbb
fwait
inc
stos
popa
xor
sbb
js
pop
or
hlt
mov
aas
fs
xor
sub
xchg
shrl
cwtl
daa
and
pop
cli
or
cmpsw
test
jbe
cmp
call
lret
and
and
jp
mov
xchg
push
out
cmp
subl
in
xchg
enter
inc
test
std
sbb
stos
je
jl
dec
lods
mull
adc
xchg
nop
mov
adcb
in
arpl
movsl
and
jge
les
sahf
fcomps
call
and
mov
xchg
mov
sbb
jo
push
movsl
jge
push
xor
pushf
and
adc
xorb
add
insb
pop
shl
imul
add
nop
add
sbb
aaa
int3
outsl
insb
inc
xor
cmc
push
jmp
jecxz
out
jns
inc
xchg
addr16
and
inc
push
sbb
fadds
mov
xchg
xor
inc
or
sub
dec
push
mov
je
sti
xchg
addl
lret
xchg
test
cmpsb
dec
mull
push
jbe
scas
adc
out
int
inc
cli
insb
addb
and
ror
dec
dec
pop
mov
mov
push
loop
jl
push
test
outsl
adc
pushf
ret
lcall
outsl
push
es
sbb
fadds
inc
mov
aaa
dec
cmp
inc
sub
jbe
ljmp
adc
imul
inc
negl
scas
adc
push
sbb
cmp
add
cli
adc
cs
das
sbb
imul
lret
insb
and
mov
inc
mov
add
cmp
shll
shrl
insb
test
pop
and
aaa
or
test
insb
outsl
fwait
dec
or
and
decb
cmp
pop
fistpl
lret
dec
push
std
mov
sbb
mov
int3
dec
mov
and
js
cmp
cmp
cltd
pop
in
outsb
addb
jle
popf
imul
cmp
fimull
leave
mov
add
int
or
xor
adc
push
jno
imul
dec
mov
jl
ljmp
or
push
rcr
sub
sbb
cmp
nop
jbe
loop
pushf
cmpsl
push
xchg
loop
jo
xchg
sbb
fildl
xchg
cmpsb
xlat
lcall
daa
add
sbb
mov
adc
sbb
fiadds
rcl
das
mov
and
inc
add
or
mov
mov
scas
pop
into
sub
jae
fs
arpl
repnz
pop
mov
adcb
adc
icebp
cmpsl
pop
lock
fistps
mov
aam
addr16
imul
mov
mov
popl
into
mov
pop
pushf
dec
or
ret
add
or
xor
lods
fwait
lcall
lds
out
shl
mov
push
enter
lret
push
test
xor
ficoms
mov
mov
jmp
insl
movsb
cwtl
xchg
cmpsb
pop
shlb
out
fisttps
mov
mov
push
sub
dec
sub
jmp
sub
lods
push
imul
insl
loop
sub
scas
jae
hlt
nop
mov
xchg
adc
les
lea
setp
stc
inc
inc
ret
movsb
stos
and
add
jo
test
inc
ret
cmp
in
test
jmp
adc
jecxz
insb
or
mov
and
cmpsl
add
nop
ret
adc
setge
sub
cs
or
jmp
push
sub
and
add
and
fmuls
cld
pop
loop
jl
arpl
rcrb
stos
adc
sti
into
jge
jo
addl
sub
dec
push
jnp
ljmp
sub
mov
in
cmp
and
xchg
or
mov
adc
xor
aas
or
shll
fistps
mov
test
sub
fadd
mov
mov
lahf
xor
stc
lds
jnp
cld
or
lret
mov
jae
dec
mov
popf
xchg
jmp
jle
inc
jmp
addb
cmp
bound
icebp
sub
sti
fdivp
in
jmp
mov
mov
movsl
pop
jmp
cmp
cmpsb
mov
arpl
cmc
push
frstor
and
lret
and
mov
out
mov
mov
sub
cli
lret
cmp
add
adc
jl
push
shrl
jae
cmc
dec
push
or
insl
mov
cld
cmp
cmp
leave
ss
daa
cmp
push
mov
outsl
sbb
subb
out
or
jae
xor
scas
inc
jl
and
inc
call
sbb
dec
or
rclb
lds
xor
out
xchg
shll
test
add
add
xor
xchg
fidivrl
out
pop
out
aam
enter
fwait
inc
add
mov
gs
fsubl
loopne
and
adc
dec
xchg
loop
dec
cwtl
les
sbb
in
fiadds
in
shrb
mov
dec
les
inc
imul
pop
fimuls
mov
dec
dec
imul
mov
add
inc
mov
and
push
push
movsb
repnz
clc
aaa
or
jo
daa
dec
loope
in
and
jg
hlt
movsb
push
in
add
mov
shrl
out
and
or
pop
clc
adc
test
repnz
xor
outsl
sbb
fmull
enter
addb
hlt
add
mov
frstor
cmp
insl
cmpsb
xchg
in
insb
cli
and
mov
jns
sti
cmp
lea
jnp
adc
push
mov
nop
sbb
cmpb
movl
pop
jnp
adc
xchg
sub
inc
push
stos
aas
mov
or
mov
out
inc
add
xchg
imul
mov
mov
adc
dec
bound
in
pop
jne
into
pop
jmp
in
adc
scas
pushf
push
addb
mov
xchg
xchg
pop
xor
lret
cmc
adc
outsb
pop
lock
imul
lahf
mov
outsb
xorl
not
out
test
mov
gs
xchg
xor
daa
test
lret
movsl
orb
rol
imul
outsb
push
jo
xor
sbb
sub
dec
stos
mov
push
out
sbb
sbb
nop
dec
sub
movsb
inc
cmp
pusha
xchg
mov
imul
mov
push
dec
xchg
jno
xchg
and
xchg
inc
pushf
push
pop
xor
jae
leave
daa
cmpsb
push
fistpl
cmp
jo
xchg
push
add
fsubrs
xchg
lock
sarl
mov
add
insl
inc
jl
mov
jp
pop
xor
fs
fsubrl
sub
adc
sbb
hlt
insb
cmp
fstps
movsl
push
jnp
mov
insb
pushf
lea
lods
orb
jecxz
fdivrl
out
pop
in
cmp
out
add
sbb
or
imul
pop
or
lods
pop
pop
cmp
lods
mov
test
arpl
jmp
push
jbe
sbb
out
icebp
sub
jnp
xor
jecxz
andb
jno
ret
sub
lret
push
push
rclb
inc
stos
sahf
jo
in
sbb
cs
dec
cltd
and
out
mov
push
cmc
cwtl
xor
lea
in
in
mov
lea
sub
xchg
mov
cmpsl
add
inc
out
sbb
pop
aad
fsubrs
pop
inc
rorl
dec
aas
or
dec
lods
cmp
or
sqrtps
xchg
mov
push
mov
ret
xchg
outsb
insb
ljmp
xchg
imul
movsb
insl
loopne
xchg
mov
mov
pop
int
mov
push
cltd
push
pop
sbb
xlat
xor
jo
push
add
int3
pop
adc
xor
jno
fsubl
mov
in
inc
cmp
sbb
jns
idivl
decb
sub
jbe
mov
loop
mov
and
in
dec
repnz
pop
stc
or
sti
cs
jg
rclb
pushf
imul
or
inc
sub
shrb
ds
sub
addr16
mov
inc
addr16
cmp
pusha
jns
sub
jne
js
cld
pmulhuw
mov
std
add
std
jno
cld
adcl
mov
sbb
jne
inc
aam
cwtl
enter
pop
pop
jne
push
shrb
mov
fxch
fsts
and
lods
xor
out
les
xchg
jecxz
push
jno
inc
mov
sub
inc
mov
fadds
sub
stos
roll
leave
movsl
test
js
aas
sar
adc
mull
fwait
push
inc
out
out
mov
outsb
sbb
outsl
inc
lcall
and
or
mov
insl
js
aas
pinsrw
sub
js
push
inc
push
mov
xor
xor
fnstenv
rorl
cmp
in
cli
jae
pop
jecxz
jno
mov
or
arpl
aas
cmp
cmc
jno
jle
jmp
xor
test
jne
bound
push
and
in
mov
push
jge
andl
sbb
add
test
sbb
addr16
cmp
xchg
jge
adc
cmc
pusha
xor
sahf
mov
mov
sub
push
dec
sub
movsb
jecxz
cltd
imul
test
ss
test
cwtl
pop
xchg
and
pop
or
je
out
xor
xchg
fmull
adc
sbb
dec
clc
adc
pop
ret
popf
pop
and
sbbl
jo
sub
pop
push
sarl
xor
fst
xlat
cli
add
mov
mov
pop
inc
sub
and
sahf
or
or
adc
js
aaa
test
idivb
in
jmp
xor
lahf
jecxz
xor
repz
scas
xchg
loopne
mov
ja
fs
xor
mov
cmp
inc
or
push
push
fwait
mov
cmp
lret
out
lea
mov
jnp,pt
iret
lret
inc
dec
and
mov
js
addl
sub
mov
xchg
aas
mov
xor
pushf
stc
in
jne
lcall
sbb
aas
push
std
xchg
mov
movsb
xor
stos
sbb
rcrl
jne
push
es
lea
mov
pop
mov
xchg
pop
dec
pop
sbb
add
int3
popf
icebp
cmp
fstl
lods
xlat
test
ds
or
push
push
andb
xchg
or
roll
es
sub
push
loop
push
rclb
ffreep
sbb
cld
mov
or
repnz
icebp
popa
xor
in
repz
addr16
lds
rcrb
jp
pop
sub
xor
and
into
outsb
in
stos
lret
rorl
sahf
ljmp
pushf
push
lcall
rcrl
sbb
mov
and
push
gs
repz
cs
xor
and
or
jle
mov
pop
bound
mov
xor
stos
inc
mov
xchg
sbb
out
inc
jle
mov
mov
mov
popa
cltd
or
test
inc
jo
pop
lahf
aad
lds
pop
cmp
cmp
pop
inc
jle
pop
inc
dec
mov
leave
or
incl
add
pushf
loop
call
rcr
pop
push
and
dec
dec
fdivs
adc
dec
clc
stc
test
sbb
xchg
ficoml
ret
push
out
sbb
mov
and
inc
pop
cmp
rcl
jno
pop
mov
test
shl
mov
jg
xlat
icebp
mov
inc
ds
fld
pop
xchg
add
push
xor
xor
cmpsl
and
sub
faddl
out
rclb
lods
jmp
dec
mov
or
fldt
fcomps
lods
mov
mov
shrb
dec
adc
or
cmpb
mov
into
mov
mov
leave
test
sahf
fwait
call
cltd
mov
inc
push
outsl
xchg
or
or
pushf
outsb
sbb
cwtl
mov
ret
sub
or
test
xor
lds
fsubs
sbbl
cmpl
mov
and
pop
gs
pop
xor
jg
and
inc
mov
inc
stos
stos
bound
and
add
aas
decb
lock
dec
push
xor
pop
in
iret
movsl
movsb
hlt
add
fimull
loopne
xlat
push
inc
js
sbb
popa
xor
sbb
mov
xor
xchg
into
lahf
gs
mov
dec
dec
pop
lea
jnp
lcall
pop
mov
xlat
inc
jae
mov
cwtl
mov
ljmp
mov
testb
or
add
flds
ja
out
enter
insb
cwtl
adc
push
inc
cmp
js
cs
cs
stc
loopne
sub
test
push
mov
mov
fidivs
mov
pop
lret
or
loope
sub
or
mov
push
sti
in
popl
sub
out
cwtl
xchg
pop
xchg
or
jg
push
or
cwtl
cmpsb
dec
mov
push
in
fwait
lcall
test
inc
or
push
add
dec
shlb
and
scas
xor
or
lods
pop
js
call
push
jne
lds
ret
cmp
stos
jno
and
dec
adc
add
jne
into
pop
mov
pop
sub
in
xor
out
xor
cmp
mov
mov
add
scas
add
push
ret
cmp
cmc
cmp
ja
inc
mov
in
cmc
xlat
or
pusha
sbbl
and
xor
mov
or
push
dec
sbb
enter
mov
push
imul
shrb
and
sbb
pop
dec
pop
fwait
nop
jnp
outsb
mov
dec
sub
enter
fcoml
dec
dec
push
lret
sbb
cmp
loop
data16
rcll
mov
scas
lock
insl
adc
cmp
pop
fwait
add
sub
cmp
dec
push
or
adc
mov
push
mov
push
ficompl
shr
das
add
jno
aam
mov
and
rcrb
int
xchg
fidivl
xor
scas
fdivr
pop
xchg
xchg
pop
adc
test
push
popf
dec
pop
ja
scas
push
mov
pop
std
jl
mov
push
test
loop
sub
jne
mov
ret
pop
adc
adc
enter
icebp
xchg
out
dec
testb
adc
push
mov
xchg
mov
mov
push
sub
dec
mov
sahf
dec
js
mov
jne
mov
negb
pop
xor
xchg
or
pop
test
push
shll
sub
cs
in
shrb
loopne
out
sub
jno
push
jnp
dec
adc
and
push
gs
mov
sub
ja
jne
aam
insl
pop
neg
mov
arpl
or
loope
in
loopne
ja
lret
dec
cmp
mov
popf
inc
mov
dec
stos
sbb
dec
sti
mov
cld
sub
fdivp
push
jne
mov
daa
push
xorb
in
or
adc
add
sub
mov
mov
jle
adc
es
mov
jbe
jbe
lret
loop
scas
lock
stos
sub
mov
mov
stos
pop
ret
arpl
xor
ja
icebp
aam
lret
imul
cmp
pop
xor
jle
sbb
pop
ret
stc
cmp
mov
adc
or
dec
testb
jno
cmp
mov
bound
insb
fdivrs
cmpsl
jns
das
jnp
pop
push
insl
and
fisubl
add
and
jne
mov
pop
in
test
dec
xchg
and
and
xor
out
xchg
repz
inc
icebp
in
cltd
jp
dec
arpl
jg
mov
xor
mov
push
cs
repnz
es
les
xchg
fbstp
adc
pop
xor
push
adc
mov
xchg
add
incl
and
sub
fs
or
js
fldcw
pop
in
or
lcall
js
shr
cmp
pop
out
mov
int
int3
testb
jae
mov
push
lret
leave
push
in
outsl
cltd
in
mov
fwait
std
cli
sub
adc
jbe
out
subb
cld
add
shll
adc
fisttpl
outsb
insl
popf
adc
jge
fisubs
jle
dec
sbb
mov
pop
xchg
clc
cwtl
test
ja
push
mov
or
pop
scas
stos
jmp
lret
shlb
scas
xchg
xlat
mov
cmpsb
mov
shlb
shrb
pop
sbb
xchg
cmpsl
adc
lcall
adc
add
mov
mov
or
inc
push
and
insb
imul
bound
cltd
push
sbb
mov
ljmp
add
pushf
lods
rclb
jl
xor
jno
test
in
xchg
jae
xchg
jmp
call
scas
test
jecxz
adcl
insb
gs
stos
aas
pop
lret
xor
jae
arpl
mov
dec
xchg
cmpsl
sbb
sahf
cwtl
xlat
scas
add
and
xlat
negl
dec
pop
je
in
out
fnstcw
jb
fdivrs
or
imul
and
mov
adc
and
lcall
and
mov
aaa
sarb
ret
mov
cmp
dec
sub
jae
arpl
add
cmp
jl
lret
xchg
xor
mov
mov
xor
arpl
jnp
jno
test
repnz
loop
popf
xchg
cmp
jbe
inc
stc
ss
mov
ficoms
sub
sbb
mov
adcb
xchg
lcall
aad
stc
or
fdivrl
mov
sahf
mov
push
lret
inc
jb
mov
sbb
jo
dec
jmp
insl
cmpl
inc
in
inc
fsubrs
add
sbb
int3
js
lods
cmp
mov
sbb
cmp
out
xchg
arpl
pop
mov
pop
dec
leave
push
adc
icebp
test
loope
scas
pop
lret
inc
in
imul
lods
push
pop
inc
jbe
mov
add
std
jg
outsb
movsl
out
shll
vminps
test
add
mov
enter
in
xor
pop
negl
movaps
sbb
dec
popf
dec
add
insb
int3
sub
fistpl
addr16
hlt
xor
pop
or
stc
jge
push
popf
sub
cmpsb
cmp
push
repnz
adc
push
mov
mov
jb
aam
xor
fmul
rorl
inc
inc
dec
out
subb
inc
add
push
xchg
lcall
jo
push
adc
fdivr
jns
cld
movsb
movsb
hlt
loope
lods
test
lea
inc
sub
xchg
js
das
xor
orl
pop
push
inc
xlat
xor
xor
roll
pop
arpl
push
rcl
adc
ja
sub
xor
dec
stc
xor
cmp
xchg
mov
mov
push
mov
ds
and
adcl
adc
rcrb
mov
xor
mov
shlb
and
clc
mov
int
popf
dec
call
jmp
js
or
sar
aad
inc
jp
push
mov
add
sahf
mov
out
jb
push
fbstp
add
insl
mov
sbb
inc
cld
lcall
push
enter
mov
insl
fsincos
mov
xor
popa
icebp
insl
jle
xchg
jb
push
pop
repnz
repz
rcll
sbb
sbb
xchg
pop
pop
loope
mov
jne
ret
mov
xor
lods
sbb
call
pusha
sub
es
jno
in
dec
ljmp
cmp
push
in
sahf
ret
mov
repnz
jbe
test
and
inc
mov
cmp
rclb
add
push
xchg
adc
xor
mull
aas
add
adc
ds
fildl
insb
ret
loopne
addb
popf
cmc
test
push
cmpsl
icebp
sbb
adc
int
jo
xchg
dec
or
inc
insb
mov
jle
jmp
jp
cmc
sar
push
lret
xor
xlat
fnstenv
mov
add
frstor
into
aas
in
sbb
cmp
and
aas
mov
push
mov
sbb
mov
cmp
rcrb
xor
sbb
shr
aas
mov
repz
mov
xchg
mov
xchg
or
stos
mov
or
dec
cld
cmp
cmp
mov
gs
rcr
jp
fmuls
imul
aam
subb
stos
jge
sbb
add
fidivrl
jae
pop
add
lods
sti
cld
pop
cmp
adc
sbb
imul
sbb
mov
jno
push
and
sub
xor
jle
pop
add
sbb
out
ret
test
add
jb
xchg
xor
loopne
mov
jg
xor
cmovg
dec
mov
je
loopne
xchg
xor
mov
cmpsb
ljmp
mov
xor
mov
cmp
xor
aaa
sub
cmp
and
outsl
push
jo
rcrb
sarb
shll
jge
stc
pop
inc
sub
dec
jecxz
nop
popf
jae
hlt
adc
mov
stos
aad
and
sti
lea
adc
jecxz
outsb
das
xchg
sbb
adc
ja
imul
loop
lds
cmc
sarl
rolb
and
mov
lcall
pop
in
or
adc
lods
stos
adc
js
jne
popf
out
push
out
xchg
in
and
mov
je
add
lock
dec
out
push
jmp
push
daa
loopne
mov
xchg
das
pop
fwait
and
fsubr
pushl
roll
aas
les
mov
dec
inc
es
repnz
sbb
lds
and
loope
xchg
sbb
dec
mov
outsl
data16
insl
cmp
mov
or
dec
sbb
xchg
lahf
lds
repz
jmp
inc
cs
sub
jne
add
popa
ret
test
aad
xor
lea
mov
jg
orl
scas
adc
ds
lods
push
cmc
sbb
mov
sub
add
xor
add
out
and
jp
aam
cltd
icebp
int3
xlat
cmp
scas
cwtl
dec
clc
mov
lods
add
pop
sbb
enter
cmc
add
inc
fisubl
int3
pop
into
cwtl
clc
test
adc
je
mov
mov
repnz
inc
nopl
es
mov
xchg
add
into
xlat
test
jnp
lret
ljmp
cld
ja
adc
mov
popa
js
std
scas
adc
pop
or
inc
les
sub
xchg
stos
xor
xchg
insb
icebp
fucomi
jmp
scas
xor
inc
mov
xchg
sahf
inc
push
cltd
sub
in
dec
xchg
aad
add
ret
loopne
iret
int
insb
dec
push
sub
add
dec
adc
stos
test
dec
sub
mov
lds
scas
into
or
fstpl
cltd
push
pop
ja
mov
lahf
pop
fwait
pop
aaa
ret
mov
nop
insb
test
jno
dec
fistl
mov
xor
sub
push
enter
fisttps
movsb
gs
dec
inc
sbb
lods
dec
xchg
xor
push
mov
sbb
lret
inc
mov
leave
sub
xor
test
mov
fldt
dec
repz
dec
in
add
lock
loop
and
cmpsb
icebp
add
out
or
mov
cmp
mov
repz
mov
fildl
subl
mov
enter
xor
mov
sbb
js
adcb
mov
bound
xor
loopne
xchg
roll
add
int
mov
mov
mov
ljmp
and
pop
outsb
mov
jno
mov
sahf
cmpsb
dec
cld
lds
arpl
inc
sti
jmp
mov
fwait
sub
pop
cmpb
push
push
cmp
jmp
push
push
xchg
mov
fsts
adc
dec
or
adc
fisttpll
lods
push
test
icebp
pop
cs
sbbb
cmp
xor
pop
xor
jp
sbb
mov
mov
fmuls
adc
call
mov
into
ret
in
lods
rcll
dec
faddl
push
lea
xor
adc
ror
aaa
cltd
sbb
cwtl
out
pop
and
jno
dec
fiadds
andb
pop
push
imul
pop
mov
and
mov
mov
xor
adc
bound
xchg
or
outsl
fidivrs
and
inc
adc
sbb
sbb
enter
ljmp
mov
fs
adc
mov
dec
and
adcb
das
dec
into
or
fidivl
mov
adcb
jg
cmp
out
jo
xor
dec
dec
cmp
or
dec
es
or
stc
aam
xlat
sbb
pop
fsubrs
xor
ret
inc
icebp
push
js
cmp
hlt
dec
lea
inc
push
inc
aaa
loop
mov
mov
mov
insl
add
mov
arpl
movb
mov
repnz
ret
mov
out
mov
test
xor
jb
mov
inc
mov
pop
ret
sub
adc
in
xchg
xchg
mov
xchg
lds
fsubrl
mov
test
xor
add
test
lcall
es
sti
sbb
lock
test
push
mov
loopne
and
adc
mov
int3
lock
out
aaa
push
movsb
sarl
imul
leave
mov
add
adc
mov
test
push
jmp
sub
pop
mov
pop
lods
sti
xor
outsl
aas
pushf
fistpll
ret
xor
mov
jmp
outsb
pop
push
int
mov
push
add
xchg
push
or
pop
std
mov
xchg
call
jno
push
inc
mov
dec
add
enter
add
clc
loop
stos
aam
cwtl
loop
pusha
jns
lock
shrb
cltd
push
addr16
test
inc
mov
cmp
sub
jmp
dec
xor
jmp
inc
cmp
in
cs
hlt
iret
sbbb
iret
mov
insb
out
jecxz
fmull
rorb
push
inc
scas
pop
sbb
stc
sbb
bound
and
jb
jns
pop
outsb
outsl
adc
and
xlat
aam
mov
push
push
sbb
cmp
outsb
push
and
in
adc
sub
and
add
pushf
and
push
ja
andl
push
xrelease
mov
arpl
jmp
test
ret
jg
push
fsts
jnp
xor
scas
push
and
cmpsb
aad
gs
or
adc
ret
adc
xchg
js
mov
jp
rcrb
into
stos
lea
ja
jns
adc
scas
inc
and
or
pop
sbb
adc
mov
das
mov
jecxz
lahf
or
fmuls
mov
idivl
and
inc
jp
int3
and
cs
popf
stc
ret
ds
xor
fsubl
icebp
or
test
rorb
push
push
insl
push
daa
fildll
sahf
pop
or
iret
pop
push
cld
jp
cli
jmp
divl
stos
ds
dec
cmp
push
loopne
jb
add
add
rcll
ret
pop
aam
and
push
or
dec
lret
adc
cmpsl
scas
movsl
cmp
outsb
shlb
cli
jecxz
adc
roll
rorl
sub
or
xor
call
jle
call
dec
inc
xor
and
add
pop
data16
xchg
xorb
aam
add
pop
adc
mov
push
test
inc
adc
outsb
sbb
aam
cwtl
dec
imul
xchg
pusha
lods
ds
stc
into
test
add
or
mov
clc
arpl
and
insb
xchg
rcrb
int
call
outsb
dec
pop
and
hlt
jecxz
inc
sbbb
insb
outsb
push
inc
mov
mov
std
cmpsb
into
jns
or
push
adc
movsl
hlt
fimuls
rol
cmp
scas
sbb
lret
sbbb
scas
or
mov
rol
outsb
sbb
out
add
xchg
sbb
cmp
mov
mov
cmpsb
pop
scas
mov
cwtl
xor
fildll
or
shl
fucomip
push
jno
fdivrp
int3
and
fimuls
outsl
frstor
push
xor
push
sub
xlat
stos
into
xchg
and
inc
test
or
data16
xchg
fbstp
xor
pop
scas
daa
sub
divb
es
mov
dec
xchg
rolb
xchg
dec
ds
pop
pushf
xor
mov
rcr
mov
stos
adc
scas
xchg
or
stc
lcall
jp
mov
test
cmp
or
aaa
rcrl
jnp
movsb
adc
cmp
int3
mov
stos
and
ret
or
add
or
xchg
xor
cltd
rcr
mov
add
dec
cmc
mov
movsb
push
retw
push
stos
cmp
fwait
xchg
outsb
sub
inc
cmp
imul
andl
or
std
mov
stos
sub
sub
call
sub
mov
sub
inc
sub
and
rolb
xchg
pop
repz
cmc
push
push
imul
sbb
pop
pop
in
pop
sbb
jo
cwtl
mov
jl
mov
aas
shll
mov
dec
jb
adc
aad
call
push
sahf
cmp
add
dec
pop
pushf
scas
lahf
mov
push
add
call
sbb
gs
nop
pusha
addb
jecxz
mov
mov
mov
ss
test
jle
into
ds
call
mov
aaa
subb
push
outsl
push
loop
ficomps
cmp
add
loop
cmp
pop
dec
sub
and
mov
jbe
mov
call
fs
out
inc
sahf
pop
xchg
lods
jno
test
xorl
lock
mov
xor
aas
add
int3
sbb
adc
push
js
int
xor
outsb
xchg
xchg
xor
add
push
mov
cmp
dec
movsl
mov
sarb
dec
testl
pop
mov
lcall
sbb
add
push
xchg
push
aas
out
jb
stos
loop
xchg
enter
mov
add
inc
sbb
aaa
push
lea
mov
mov
jl
incl
into
das
rcrl
xchg
int
call
mov
inc
dec
lods
mov
and
sbb
popl
mov
push
xor
push
dec
sbb
sbb
aas
mov
enter
lods
push
das
cmc
dec
mov
mov
mov
clc
dec
push
int
popa
or
sub
out
mov
outsb
add
jmp
jmp
les
push
ja
cmc
sbbl
shr
pop
loope
int
pop
jl
fnsave
aas
adc
xchg
rcrb
mov
test
pop
enter
cmp
ljmp
cmp
jl
lea
or
cli
aad
outsl
push
stos
in
shrb
ja
subl
int
rolb
lods
or
mov
dec
rclb
mov
rcl
cmp
cld
or
and
movsb
adc
test
hlt
adc
sbb
das
stos
aas
jns
mov
add
imul
lea
outsl
icebp
pop
stos
sub
sbb
sbb
xor
xchg
out
loopne
loopne
adc
inc
mov
in
xor
iret
repnz
jl
mov
aad
ss
int
scas
sub
pop
jl
and
or
adc
cmc
or
into
xor
imul
xchg
ret
ljmp
pop
xchg
out
clc
popa
xchg
fs
mov
adc
inc
sub
imul
in
iret
adc
cld
out
pop
or
mov
xor
roll
sbb
mov
and
mov
in
aaa
cld
in
inc
test
mov
popf
and
pop
mov
xchg
mov
or
sbb
adc
je
hlt
sbb
mov
or
pop
or
nop
rcrl
test
shrl
adc
xor
adc
cmc
sbb
adc
mov
lods
mov
dec
fsubr
mov
xchg
add
xchg
xor
cmp
test
imull
movsl
inc
pushf
inc
push
jecxz
push
mov
mov
sub
xchg
faddl
push
mov
push
jge
aad
leave
test
xchg
fsubrl
dec
xchg
mov
jnp
mov
sub
mov
adc
or
cmc
jecxz
and
dec
xor
test
lahf
ret
ja
mov
lds
sub
lds
sbb
std
pop
xchg
pop
jecxz
arpl
fdivs
aaa
fidivs
lds
lods
mov
testb
imul
enter
idivl
pop
fucomip
mov
xor
arpl
add
sbb
insb
inc
rcrb
mov
es
outsl
ss
push
and
fwait
loope
add
stc
imul
cs
mov
ss
in
repz
cli
or
or
xlat
insl
or
xor
in
loope
or
xchg
sub
fst
dec
sub
insb
insb
push
cmp
sbb
sbb
shrb
and
rcll
cmp
mov
lds
mov
scas
int3
dec
add
dec
push
lret
push
jecxz
scas
loop
or
and
call
sbb
leave
adc
arpl
fisttpl
stos
aas
mov
adc
adc
addr16
data16
movsb
inc
out
fbld
es
ljmp
pop
dec
fisttps
f2xm1
icebp
adc
sahf
insb
imul
js
loop
jle
sbb
xor
or
push
sub
adc
xor
inc
test
ret
rolb
pop
jmp
ret
pop
gs
pop
xor
and
dec
sub
shll
ljmp
rolb
mov
and
cs
jmp
mov
notl
sub
insl
lds
icebp
enter
mov
xsha256
cmpsb
xchg
mov
inc
lcall
outsb
mov
test
mov
shll
nop
insl
adc
enter
lods
pop
gs
push
es
and
sub
cmp
shrl
cmp
popa
fldl
dec
mov
inc
out
int
call
stc
jp
inc
dec
push
lcall
push
leave
pusha
pop
dec
repnz
jbe
mov
ljmp
sarl
daa
cwtl
outsl
cmp
out
cmc
das
repz
add
jmp
push
pop
repz
push
jmp
fistpll
mov
lock
mov
dec
or
mov
and
pop
insl
mov
jo
xchg
testl
jo
sti
xlat
stos
in
or
pop
int
std
xor
xchg
inc
pop
add
fldl
ss
push
mov
je
lock
lahf
ss
das
dec
fcmovne
enter
mov
mov
xchg
sbb
or
call
insl
or
add
in
std
je
loope
add
push
push
loop
push
into
xor
push
ds
push
jecxz
jle
dec
cmp
ret
xor
mov
aaa
jge
bound
jo
roll
pop
add
xchg
call
mov
mov
add
subb
nop
dec
ffreep
mov
fisttpll
mov
mov
push
mov
cmpsb
lret
in
xor
pop
cmp
pop
pop
je
in
mov
out
jl
or
or
in
xor
dec
push
inc
add
ret
sbb
stc
fmull
or
ss
fs
pusha
sarb
bound
inc
scas
add
mov
xchg
push
jge
sub
call
popa
push
je
adc
push
xorb
jae
cmpsb
in
ret
imul
outsl
loopne
add
and
addr16
pop
dec
ret
loopne
fs
je
push
jecxz
push
int3
testl
xor
sub
fcoml
lods
mov
and
add
in
jp
push
add
scas
push
outsb
addr16
cmp
or
subl
jmp
hlt
dec
cmp
divl
mov
dec
sbb
outsl
outsl
cmpsl
lods
cwtl
sbb
mov
lea
inc
sub
cli
mov
shrb
inc
inc
test
fnstsw
stc
jnp
fists
sbb
or
aas
mov
js
mov
lock
dec
sub
das
pop
sbb
mov
out
mov
fwait
out
rclb
mov
xchg
negb
aam
mov
xor
sub
in
stc
loopne
lcall
add
push
nop
fsubr
fwait
xchg
push
int3
and
pop
push
xor
push
mov
scas
ljmp
xchg
stc
pop
mull
inc
leave
pop
or
xor
lods
enter
adcb
xor
pop
pop
xor
pusha
loop
je
aaa
loope
dec
mov
ficoms
or
pop
and
mov
in
and
test
sub
cli
aas
and
pop
mov
outsb
in
cmp
push
outsb
push
sub
xchg
out
leave
gs
xor
lahf
jno
mov
dec
pusha
sbb
sbb
ds
push
jne
xor
negl
inc
xor
nop
outsb
xchg
ja,pn
push
daa
xchg
lods
ficoms
mov
nop
xchg
push
jmp
mov
arpl
pop
mov
in
lahf
das
inc
sub
mov
cltd
or
popf
test
out
imul
adc
cmp
pop
sub
mov
or
cmp
xor
push
inc
int3
fcoml
movsl
mov
bound
adc
dec
out
cld
xor
xor
sub
outsl
dec
shlb
push
xchg
out
xor
or
das
mov
xorl
mov
xchg
loope
push
decl
inc
mov
loope
jle
mov
push
fldt
sarl
in
mov
fstl
and
pmuludq
sub
mov
or
cmp
jmp
adc
mov
jge
sub
dec
lcall
sahf
pusha
into
orb
xor
int3
mov
push
in
int
push
sbb
insb
scas
shrl
and
push
jecxz
xchg
xchg
inc
xor
sub
loop
scas
inc
fxch
cmp
inc
and
cli
stos
xchg
push
push
pusha
xchg
fisubl
mulb
sub
fadds
cmc
xchg
in
outsb
pop
pop
insb
enter
scas
rep
xchg
jmp
mov
mov
push
or
ret
cmpsb
clc
dec
repz
ljmp
mov
lods
test
add
and
pusha
add
cltd
mov
mov
jns
and
xchg
mov
jae
adc
in
scas
and
pusha
xchg
mov
insb
inc
lds
push
pop
or
movsl
int3
enter
push
out
sti
fstps
and
jo
or
cltd
hlt
and
aaa
insl
pop
std
cmpsl
sbb
out
xor
loop
movsl
je
xchg
pusha
cld
pop
out
rcll
xchg
inc
mul
ss
rclb
pop
or
sub
mov
push
in
clc
test
or
jge
and
xchg
shll
stos
inc
xor
sub
outsl
jmp
xlat
cmp
stc
fchs
int
cmpsb
pop
les
imul
test
cli
lahf
lahf
aad
movsl
cltd
jmp
mov
into
or
xchg
pop
les
jno
out
cltd
inc
scas
and
clc
inc
lea
lahf
ret
xor
xchg
iret
pop
stc
mov
mov
pusha
cli
ficompl
or
fldcw
push
jp
push
pop
inc
cmpsl
sub
sub
push
dec
cwtl
iret
mov
push
lahf
sbb
xchg
mov
dec
stc
js
sub
adc
imul
mov
and
mov
sub
or
xor
push
mov
test
cpuid
pop
or
cmpsb
call
sub
leave
cmc
aaa
insb
jae
xchg
push
push
sti
ret
inc
mov
popl
scas
mov
leave
mov
cmc
scas
mov
push
mov
in
ds
std
and
aas
scas
shlb
stos
lret
pushf
xchg
adc
pusha
xchg
or
lahf
mov
and
and
in
jo
pop
jno
mul
push
jg
dec
cmp
add
add
mov
gs
out
scas
data16
or
inc
adc
xchg
pop
outsl
fsubrl
das
mov
mov
mov
nop
xor
xchg
xchg
mov
mov
out
xchg
repz
pop
mov
push
aam
pop
in
inc
add
ss
enter
sub
aas
imul
ja
fnstenv
push
mov
sbb
mov
ret
scas
dec
and
jb
sub
out
sbb
clc
push
cld
int3
inc
nop
cmp
mov
and
repnz
push
push
dec
mov
ficoml
mov
push
loopw
jp
pop
xchg
pop
push
sbb
push
push
mov
inc
lcall
cs
outsb
movsl
push
loopne
std
jae
stos
js
outsb
push
xchg
jbe
mov
sub
inc
pop
push
dec
jae
lea
adc
loop
js
mov
jns
je
pop
adc
sub
lea
leave
ljmp
movsl
mov
or
fdivrl
pop
add
or
rcl
iret
xchg
loopne
mov
cmc
adc
xor
popa
je
test
sahf
pushf
sti
pop
pop
mov
adc
lret
notb
dec
xor
dec
dec
sarb
jns
or
inc
ss
popa
jge
adc
addr16
gs
xor
iret
xor
jl
mov
and
loope
les
lcall
es
sub
sub
arpl
dec
dec
mov
pop
ficomps
inc
movsl
jg
into
loop
push
add
xor
stos
mov
aam
push
leave
cltd
xor
scas
lret
cs
mov
mov
xchg
dec
inc
mov
loope
sti
xor
inc
getsec
sti
and
mov
ds
enter
in
jp
mov
inc
cwtl
add
push
push
push
push
fcomps
lahf
adc
in
cmp
mov
push
inc
lods
pop
je
dec
xchg
pushf
jae
jp
add
ret
insl
sti
or
mov
dec
ds
bound
lods
and
adc
mov
pop
iret
sbb
pop
scas
push
mov
ret
jecxz
lahf
out
xchg
pushf
into
pop
test
mov
inc
pop
and
jge
clc
cwtl
mov
xchg
mov
lea
adc
xchg
adc
mov
mov
cmp
dec
sub
out
inc
xchg
imul
push
call
jae
sbb
hlt
loope
outsl
fcmovbe
mov
mov
xchg
sahf
jle
push
sti
mov
stos
int3
jns
scas
jns
inc
jle
mov
hlt
xchg
jnp
decl
jae
hlt
jno
leave
mov
sti
stos
pop
push
jmp
pop
sbb
mov
aad
enter
loop
sub
in
lcall
cmp
dec
and
lods
push
xor
test
pop
xor
or
push
jno
xchg
and
daa
mov
and
xor
ret
lods
sbb
ss
sbb
movsl
jno
inc
movsl
ss
std
and
das
sbb
xor
jbe
mov
mov
mov
adcl
or
mov
aas
aam
subb
sub
test
cli
pop
cli
scas
mov
lcall
mov
adc
and
rorb
adc
mov
imul
enter
movb
pop
sahf
pop
jecxz
inc
ret
std
xchg
ret
push
loope
mov
sub
and
mov
int
leave
testb
pushl
sbb
mov
pusha
cmpsl
jnp
pop
mov
pop
mov
push
std
mov
clc
and
push
repnz
inc
pop
mov
fldt
and
push
sub
pop
or
clc
jnp
pop
push
ss
js
movsl
push
pusha
add
insl
mov
or
decl
insb
mov
xor
or
hlt
xor
add
jbe
mov
add
test
test
sarw
negl
pop
je
mov
pop
std
jg
mov
push
fldcw
push
pushf
jb
inc
or
fstps
jne
lahf
xchg
lock
mov
pusha
stos
out
sbb
push
and
mov
sbb
inc
cmc
mov
int3
inc
fdiv
dec
mov
or
hlt
pusha
push
insl
in
push
lret
lahf
cmpsb
lret
sub
shr
pop
int
lret
mov
sub
aas
fimuls
mov
adc
negl
xlat
push
outsl
and
mov
pushf
mov
enter
add
test
sbb
sbb
cmp
inc
mov
fwait
daa
lahf
adc
xor
push
lahf
cli
test
sub
sub
inc
loope
and
or
jge
repz
imul
xor
int3
add
int
push
pop
aad
idivb
xchg
sub
mov
test
sub
push
push
xor
pop
push
xchg
imulb
push
mov
xlat
and
mov
jg
movsl
test
xchg
dec
mov
jno
pop
pop
dec
icebp
xlat
enter
sbb
push
cmpsl
inc
push
stc
mov
outsl
nop
inc
and
cmp
cld
fistpl
aam
xchg
adc
in
sbb
jl
aam
jp
repz
xor
mov
cmp
pop
sahf
or
xchg
sub
popa
out
jne
or
xor
cmp
aas
repnz
xchg
subb
push
sub
insl
cmp
loope
inc
jae
lahf
pop
push
mov
cmp
mov
stos
xchg
mov
rcrl
pop
cmpsl
ss
lahf
pop
test
aaa
fdivrl
xor
cmpsb
imul
js
sahf
xchg
ret
push
data16
enter
popf
xchg
sahf
dec
bound
adc
out
test
mov
fisubrl
icebp
xchg
mov
dec
and
fxch
sbb
movsb
sbb
orl
imul
mov
xorl
repz
lods
inc
test
mov
inc
fmull
xor
adc
test
daa
mov
loopne
das
jns
pop
aam
mov
out
gs
nop
jne
and
dec
pop
sbb
jno
test
stos
or
mov
cmp
shll
push
dec
sahf
sbb
and
cmpl
loopne
rcrb
test
xchg
xchg
data16
xchg
inc
xorb
loopne
out
in
push
mov
lock
inc
pop
sbb
jae
sbb
popa
repnz
add
inc
or
or
jg
fisttps
or
dec
fsubrs
cmc
and
fbld
sbb
cwtl
iret
sub
sbb
inc
xor
pop
jnp
mov
mov
push
lods
gs
push
xchg
outsb
ja
xor
je
lret
pop
adc
fdivrs
adcb
pop
aaa
mov
out
rcrb
aaa
jge
adc
in
sbb
push
rorb
addb
lret
aam
mov
test
mov
push
pop
divb
sbb
mov
dec
fstps
mov
jb
jae
loopne
loop
xchg
imul
adcl
add
outsb
dec
fidivrl
mov
test
scas
cmp
mov
cmp
movsl
push
inc
test
aaa
pop
mov
add
jge
mov
ffreep
pop
adc
pop
loopne
inc
mov
frstor
es
ret
cmp
xchg
adc
out
adc
adc
inc
out
push
js
push
fldenv
pop
movsb
push
inc
mov
pushf
in
sbb
push
out
mov
or
fdivrl
push
xchg
iret
push
je
das
pop
xchg
add
cmpsl
jne
es
mov
mov
xchg
shll
or
dec
or
push
outsb
xchg
mov
sbb
sbb
in
dec
lock
fwait
jg
es
aad
add
dec
sti
xchg
add
cmp
leave
pop
test
lea
jbe
inc
xor
stc
les
mov
pop
jmp
pop
sub
iret
xchg
dec
mov
ret
lock
or
subb
imul
sub
rcr
cli
mov
int3
xchg
test
dec
sbb
dec
pusha
popa
cmp
cmpsb
xchg
cmp
sub
scas
iret
add
dec
mov
cmpl
ret
js
inc
cld
test
mov
test
rol
pop
loopne
aad
leave
mov
xor
sbb
adc
add
lret
or
cmpsb
inc
xor
cmp
adc
sbb
jl
jle
xchg
out
ss
sbbb
jl
push
mov
arpl
jmp
test
mov
pusha
shrb
mov
sahf
jae
xchg
jge
ljmp
dec
xchg
jge
push
je
and
jge
rcrb
inc
adc
push
adc
ret
lods
idiv
sub
mov
dec
in
sub
ficomps
xlat
icebp
psubq
xor
mov
xor
imul
cmp
sub
jg
add
mov
pop
sti
lahf
xor
xchg
jmp
imul
fnstenv
ja
inc
jecxz
ja
ljmp
cmpsl
fildll
jb
sbb
test
addr16
fisttpll
mov
inc
int
jno
xor
adc
dec
cltd
sbb
mulb
gs
jmp
cmc
aaa
out
inc
and
dec
and
sub
lret
xlat
cmpsl
lcall
in
sbb
mov
mov
jae
sbb
or
mov
add
jle
test
jmp
mov
loopne
call
in
shl
test
adc
mov
bound
cmpsl
insl
or
mov
mov
jbe
jno
shll
or
mov
mov
dec
pop
mov
mov
bound
rcll
fistpl
test
addl
lea
out
in
xor
add
out
dec
sar
mov
lods
movsb
in
pop
or
lcall
loop
add
xor
and
adc
xchg
shrb
pushf
xor
stos
popa
insb
lds
jno
flds
xchg
add
pop
xchg
popa
out
add
mov
adc
loope
mov
pop
mov
push
add
cmpsb
aam
inc
dec
dec
add
mov
inc
add
xchg
pop
xchg
repz
pushl
mov
sub
add
lods
xor
xlat
call
clc
inc
dec
lahf
inc
or
dec
or
push
inc
sahf
mov
in
cmp
push
inc
mov
dec
shll
mov
dec
push
mov
jb
popa
sbb
sub
das
push
pushf
jle
or
jnp
sub
dec
out
cmp
movl
addr16
jae
mov
mov
bound
movsl
adcl
ljmp
das
in
mov
pop
add
adc
stos
dec
or
or
jmp
push
jnp
testb
xchg
xchg
adc
dec
adc
mov
mov
xchg
addb
and
pusha
ja
lret
add
rclb
js
lret
loop
adc
mov
jne
pop
cmp
inc
pushf
dec
add
aas
into
roll
xchg
ret
cmc
hlt
mov
adc
inc
xor
rorb
rolb
dec
mov
mov
test
pusha
fimuls
das
sub
jg
pop
mov
push
loope
imul
cmp
push
xlat
mov
sub
pushl
or
or
inc
dec
sub
in
and
cli
xor
xlat
mov
jb
xchg
shll
lahf
movsl
pop
xchg
repnz
nopl
in
xorb
jb
cltd
dec
add
or
daa
je
mov
ret
leave
xchg
inc
sub
jbe
mulb
push
loop
in
jb
or
popa
lahf
data16
dec
xchg
imul
jns
push
in
xchg
fildll
ljmp
xchg
push
outsb
sbb
sti
or
or
int3
sti
hlt
sbb
pop
push
and
out
sarl
std
mov
or
xchg
sub
cmp
pop
test
popa
lcall
dec
adc
xchg
push
mov
in
outsb
loop
jmp
sbb
int
inc
mov
push
gs
int3
jae
sub
cmc
sti
adc
push
jnp
shll
cmpsb
ret
mov
jmp
int3
jnp
adc
insb
dec
push
fcmovnu
loopne
sbb
push
mov
jle
mov
or
pop
in
mov
lret
fcmovnbe
movsl
stos
clc
imul
mov
repnz
lods
push
out
inc
fdivrl
cmp
pop
pop
repz
js
les
inc
xchg
adc
jbe
hlt
in
jne
pop
push
jnp
jg
fldenv
mov
cmp
dec
pop
cwtl
dec
mulb
mov
mov
xchg
push
cmc
test
push
inc
imul
ficomps
jecxz
xchg
or
inc
jp
mov
add
in
bnd
sub
cmc
sub
divl
repnz
lods
cmp
xchg
pop
mov
lods
push
sbb
popf
sbb
jnp
stc
jo
and
pushf
repz
mov
add
cs
sub
mov
fbld
out
jmp
movsl
sbb
xchg
and
and
hlt
gs
dec
inc
add
hlt
pop
cmp
test
out
lret
popa
mov
pop
mov
jbe
lea
das
aad
fdivs
faddl
jb
sub
xor
cmp
lahf
icebp
std
stc
push
dec
insl
ds
fdivrs
fs
pop
jecxz
aam
out
js
sub
int3
dec
fadds
bnd
lods
test
push
dec
mov
push
sub
imul
sbb
inc
cwtl
ja
xor
iret
add
cltd
xor
mov
clc
stos
into
stos
lcall
push
xorl
sub
js
pushf
add
dec
adc
jne
or
daa
imulb
rcrb
or
insl
xchg
inc
xchg
andb
stc
adc
imull
out
and
mov
std
mov
ds
aaa
fs
mov
mov
movsb
xorb
outsl
or
pminsw
or
inc
gs
mov
loop
out
cmpsl
sbb
mov
stc
cmp
jbe
lods
mov
inc
sbb
jns
out
in
xor
test
scas
loop
mov
pop
int
adc
orl
fldenv
mov
out
or
dec
inc
sub
lcall
jbe
stc
pop
push
loope
daa
add
mov
push
xor
scas
mov
roll
cmp
xlat
test
lahf
std
mov
cmp
adc
or
daa
pop
sbb
daa
enter
or
sub
les
addr16
out
dec
aam
dec
pushf
outsb
aaa
loopne
add
dec
stos
iret
mov
or
or
lea
ljmp
cmpl
movb
fnstenv
cmp
ret
adc
or
mov
in
xchg
out
sub
mov
lds
jnp
push
fimull
and
adcb
repnz
cli
cltd
sbbb
sbb
ret
loope
jb
test
push
xchg
iret
pop
lret
aas
sbb
stos
dec
popf
lret
lret
mov
push
mov
repz
sbb
dec
cmp
jmp
xchg
inc
int
fisttpll
jl,pt
push
mov
adc
sub
jb
mov
or
push
pop
adc
lods
mov
xor
add
cmpsl
sub
sub
xchg
cs
sub
mov
dec
mov
sbb
ljmp
mov
push
and
aad
xchg
stc
xchg
stos
pop
pusha
stos
mov
cmp
add
mov
lcall
pusha
and
out
repz
jbe
sbb
cmpsb
insb
cmp
mov
testb
push
mov
push
pop
inc
xor
shrb
out
js
into
push
daa
imulb
sub
inc
add
sub
pop
test
dec
or
or
add
mov
jne
in
jb
add
sbb
stc
mov
leave
pop
dec
je
push
adc
jns
dec
push
out
fmull
into
sbb
notb
mov
jecxz
out
shll
aas
clc
enter
ret
pop
cmp
iret
popa
sub
xor
jo
or
xlat
and
ret
je
sub
hlt
fstpl
ja
movsb
pusha
cmp
add
lods
clc
call
dec
adc
ficoml
aas
sbb
mov
rcrl
ss
mov
xor
fucomi
and
push
mov
decl
mov
pop
movsl
pop
sbb
cmp
in
push
cmp
hlt
adc
ljmp
sub
add
dec
sbb
mov
adcl
mov
sbb
fs
add
and
mov
mov
inc
xchg
xchg
mov
test
cltd
xchg
call
dec
add
outsb
mov
sbb
cmp
hlt
aam
xchg
movsl
xlat
mov
fsubrs
and
dec
mov
popa
psubsb
imul
in
sbb
fcoms
sub
testb
es
lods
ret
sub
daa
scas
adc
outsl
cmpsb
mov
test
or
and
sbb
or
inc
dec
rcll
sub
cmp
and
dec
xor
or
lock
dec
xor
cmpsb
xor
mov
aad
mov
mov
mov
pop
pop
stc
jp
xor
lock
es
pop
jae
cmp
inc
jno
leave
cs
imul
dec
fistpl
dec
clc
inc
stos
mov
mov
loop
inc
lahf
popl
jp
sar
sti
test
bound
pop
jb
notb
iret
and
adc
cmpsb
pop
sbb
movsl
push
add
cmp
push
mov
rolb
jmp
cld
jp
pop
jb
fdivrl
push
ja
xchg
mov
jle
mov
xor
pop
add
ja
ficoms
cmp
addr16
push
mov
notl
cmp
cmpl
mov
mov
inc
sbb
mov
xchg
scas
imul
xor
out
imul
shlb
push
bound
cmc
sbb
out
push
clc
outsl
jecxz
data16
mov
ja
xchg
push
xchg
and
jae
out
mov
pushf
fidivrl
data16
cwtl
jo
mov
mov
out
jmp
loopne
loope
push
lock
leave
mov
subb
sbb
adc
inc
mov
int
inc
out
sbbb
loopne
xor
nop
inc
mov
and
mov
test
xchg
loopne
xor
dec
push
sub
loopne
jmp
and
ret
flds
int3
das
xor
aam
inc
push
fimuls
push
loopne
fdivrs
sub
push
cli
cmp
test
sub
or
stos
jnp
cmp
std
cli
test
mov
imul
push
loop,pt
ret
gs
imul
mov
pop
int
mov
jg
into
sbb
sbb
out
add
xor
repz
dec
outsl
pop
fbld
imul
lock
xor
enter
popa
push
xor
or
jae
pop
and
cmc
adc
inc
pop
mov
pushf
loop,pn
push
jmp
shrb
jg
mov
insb
loope
clc
in
adc
and
xor
adc
gs
stc
outsb
es
incb
pop
popa
xor
mov
push
xchg
mov
pop
mov
inc
fnstcw
pop
xor
negb
loope
pop
mov
inc
push
dec
push
mov
les
loopne
xor
in
pop
inc
rcll
decb
loopne
jb
in
mov
dec
pop
adc
in
jb
popf
mov
mov
daa
fcmovbe
std
xchg
push
pop
insl
sbbl
sub
jecxz
jg
sbb
sbb
dec
pop
xor
push
mov
lret
xor
xor
or
int
les
adc
xchg
hlt
sbb
adc
add
push
and
sub
push
mov
pop
cmp
aas
fdivr
mov
push
xchg
cld
aas
xchg
test
es
sub
adcb
mov
test
dec
jp
pop
lock
sub
and
jge
in
cmp
vpsrld
subl
fidivs
inc
stc
jp
fsubl
nop
mov
ss
or
popf
imul
adc
pop
jg
sbb
pop
sbb
mov
aas
loope
push
push
shll
in
xchg
sub
xor
insl
adc
in
fimuls
cmp
pop
cmp
cs
xchg
in
imul
or
adc
or
inc
jne
test
cltd
lcall
xorl
sbb
mov
inc
arpl
int3
imul
shr
int3
xchg
mov
cld
mov
cwtl
pop
pushf
mov
pop
std
push
loopne
dec
fldl
pop
cwtl
in
mov
aas
ljmp
or
jecxz
dec
aas
push
xor
mov
push
movsb
into
arpl
lods
jae
mov
pop
je
xchg
repz
inc
test
rcl
dec
xchg
into
add
pop
xchg
mov
xor
jecxz
cmp
nop
cmc
mov
hlt
push
fsubl
pop
or
and
sub
sub
gs
adc
push
int3
jbe
stc
imul
enter
fnstcw
inc
shr
jnp
pop
cmp
xchg
push
rol
add
inc
arpl
cmp
int3
test
mov
in
push
mov
test
mov
int3
mov
sbb
dec
push
pop
xlat
leave
out
and
and
pop
cmp
insl
in
mov
dec
pusha
mov
add
add
imul
pop
cmp
xchg
inc
outsb
push
jne
daa
ret
mov
adc
cli
daa
xchg
cmp
lahf
shrb
mov
fdivrl
fdivl
rolb
mov
aam
jmp
imul
adc
jo
inc
jl
push
shlb
jne
ret
mov
push
push
sub
pop
xchg
push
lods
ja
push
cltd
jle
push
lcall
or
push
or
lcall
push
js
out
dec
inc
test
out
adc
ret
cwtl
outsl
mov
xchg
aaa
movsb
fsubrl
out
mov
push
icebp
or
mov
jnp
mov
jg
lods
mov
push
jne
rol
lahf
sbb
icebp
cld
add
pop
ja
push
fmul
mov
push
mov
push
adc
and
inc
xorb
mov
xor
xor
push
or
sahf
out
dec
pop
lret
mov
jbe
stos
out
out
xor
push
outsl
fs
sub
punpckldq
sub
jno
bound
adc
lret
fcmove
mov
add
aam
xor
push
inc
cmp
xlat
cmpb
ficomps
mov
push
arpl
sti
in
lock
fwait
xor
sbb
data16
adc
sub
xor
icebp
stos
orb
push
cld
imul
mov
mov
push
lds
dec
and
add
inc
mov
out
fcomps
dec
in
jb
adc
loop
cmp
js
jmp
ja
loope
movsb
and
pop
mov
ds
into
ret
mov
xor
or
in
cmp
mov
cmp
sti
add
loop
fstpl
scas
mov
mov
pop
sti
test
stos
mov
rolb
cmc
imul
rol
test
add
dec
je,pt
pop
mov
lcall
jbe
xchg
lds
sbb
jp
lds
cmp
mulb
xchg
icebp
adc
iret
push
cld
ljmp
je
repz
and
mov
add
leave
mov
adc
jg
cld
repnz
ficomps
out
cmp
push
sbb
imul
ljmp
out
mov
pop
and
pushf
mov
sbb
xchg
orb
daa
mov
ja
dec
out
outsb
orl
sbb
fdiv
data16
adc
xor
in
inc
add
mov
iret
xor
pushf
sbb
test
outsl
rclb
add
adc
fndisi(8087
dec
mov
daa
in
cmc
ljmp
push
inc
imul
or
or
clc
and
and
fldl
add
mov
adc
sbb
out
dec
pushf
in
and
popa
int
jle
mov
push
and
jb
cmc
mov
fcompl
sub
xchg
adc
popf
enter
push
cltd
mov
cmp
mov
jmp
scas
xor
fistl
hlt
xor
ret
mov
mov
and
out
cmc
sbb
mov
inc
sbb
sub
leave
in
jecxz
push
push
leave
jmp
push
popa
jb
cmp
adcl
push
inc
sbb
inc
faddp
in
nop
mov
pop
rolb
and
pop
push
jb
test
jl
rcll
andl
cld
shl
ljmp
addb
dec
xlat
sub
push
jge
jge
push
fistps
cmc
cmp
sub
adc
xchg
fucom
lret
rol
cmp
cmc
sbb
outsl
jne
jmp
lods
xchg
out
jmp
pop
pop
rorl
add
loope
push
cltd
pusha
mov
adc
xchg
fildll
add
aaa
mov
test
gs
out
xor
mov
jnp
mov
fnstsw
dec
loopne
sahf
test
or
dec
cwtl
bound
push
fstl
ror
sub
test
ljmp
cmpsb
rcrl
in
out
add
aad
sub
mov
stc
add
push
push
xor
in
inc
movsl
stos
inc
cmpl
mov
call
pop
imul
int3
loope
xchg
adc
mov
sub
xor
add
dec
mov
mov
pop
cld
mov
sbb
cmp
push
mov
xor
sub
sbb
xor
inc
cmp
cmp
subl
mov
mov
inc
popf
cmp
sub
pop
push
testb
and
cmp
shlb
add
ss
nop
outsb
jnp
dec
sub
inc
mov
mov
sub
push
scas
pop
mul
iret
push
mov
popa
lea
sub
cmp
push
jo
push
cmpb
push
pop
push
sub
sbb
cmp
push
add
jo
les
loop
mov
push
adc
and
sbb
cmp
adc
sbb
sub
aaa
mov
insb
push
adc
inc
adc
adc
cmp
sbb
in
fists
mov
lret
cmc
sti
mov
cmpsb
fcompl
aam
fucomp
push
or
movb
cwtl
cmp
sti
lahf
xlat
mov
mul
in
inc
mov
and
cmpsl
xor
fmuls
add
push
in
mov
enter
inc
push
jbe
jb
in
xchg
movsb
test
add
xor
lods
mov
enter
loop
adc
xchg
mov
cmc
add
leave
cmp
loope
enter
ss
or
xor
or
mov
push
mov
mov
jge
mov
shll
loopne
inc
sub
xchg
xor
ja
or
jg
fisubrs
aad
lods
adc
adc
mov
lock
or
cmp
fs
add
imull
mov
aas
mov
pop
inc
mov
xor
fldl
jp
in
cwtl
in
sbb
sub
jge
pop
mov
xor
notl
mov
aad
push
sbb
or
in
and
stc
ror
xchg
push
std
insl
xlat
int3
and
jb
sbb
mov
jo
mov
aad
pusha
mov
inc
add
dec
lods
sarb
mov
mov
xchg
das
jno
inc
fsubrp
aam
out
sahf
cmp
in
fwait
cmp
cmp
sbb
pop
int3
pop
cmp
in
xchg
sbb
enter
aas
pushf
loopne
mov
jp
mov
movsb
push
mov
mov
fldt
shrl
sbb
inc
sub
lcall
add
cmp
dec
mov
cmp
jl
dec
sbb
inc
imul
clc
mov
stc
gs
mov
loop
lods
faddl
xchg
xchg
pop
lea
pop
mov
test
pop
jo
call
fmuls
or
rcll
and
popa
mov
xchg
jne
dec
fcmovnbe
and
pop
outsl
sbb
add
jp
and
pop
adc
int3
cltd
out
inc
xchg
pop
push
add
enter
and
xor
je
jne
or
add
imul
fwait
adc
xchg
pushf
sbb
xlat
outsl
cmp
cmp
test
sub
or
movb
mov
sub
jb
inc
daa
fldenv
cmp
inc
ja
jmp
and
mov
sub
mov
pushf
sub
push
vpackssdw
scas
xlat
mov
add
pop
or
sahf
adc
imul
in
fwait
clc
pop
push
imul
repnz
jmp
icebp
cmp
dec
push
daa
cmpsb
mov
mov
mov
xorl
test
sbb
add
ds
mov
popa
shll
cli
push
das
mov
sub
popa
cwtd
or
add
xor
insb
pop
das
bound
scas
ret
aam
pop
cmp
fadds
jb
jle
hlt
jo
clc
xor
call
lahf
jo
js
and
es
iret
dec
in
cmp
je
sbb
xor
sar
out
mov
or
cmp
xchg
push
cmp
inc
pusha
pop
mov
dec
addr16
jae
or
imul
insl
mov
add
sbb
mov
dec
xchg
jno
insb
js
test
mov
or
xchg
sub
insl
sbb
inc
xchg
sub
pop
ja
add
shlb
add
adc
out
sbb
or
popa
xor
mov
loopne
test
jne
fcompl
cmp
jo
jo
repz
sbb
test
mov
rcrb
jbe
rcrl
pop
pop
inc
pop
daa
addr16
cmc
jno
xor
cs
repz
cmp
add
cmc
in
mov
sbb
in
lcall
lahf
mov
dec
add
or
dec
pop
fstps
pop
cmp
mov
imul
dec
orl
sub
push
outsl
adc
shrl
gs
imul
inc
ret
cmp
fs
out
and
inc
jbe
mov
xor
jno
out
ja
sbbb
sbb
ss
jmp
jnp
outsb
mov
inc
inc
mov
out
movsl
inc
push
iret
sbb
cli
sti
inc
rcll
mov
and
push
out
movsl
and
loopne
push
aaa
das
mov
popf
mov
flds
add
fcoms
adc
adc
mov
loope
aas
fdivl
inc
clc
mov
xchg
lds
xor
inc
fwait
mov
pop
imul
mov
popl
mov
dec
loop
fs
xchg
pop
test
and
push
sbb
mov
add
test
adc
and
mov
fwait
lea
aad
and
lods
shll
mov
sbb
push
pop
adc
jecxz
push
lods
and
pop
and
lahf
cmp
xchg
dec
inc
bound
arpl
mov
imul
neg
fstl
cs
pop
mov
add
mov
jne
loopne
mov
lods
jl
aad
add
and
push
xor
ret
movsb
repnz
es
aas
rclb
fmuls
enter
inc
ss
xor
xchg
pop
xor
out
mov
outsb
lods
out
movsb
mov
sub
xlat
xor
cltd
rclb
je
add
in
and
inc
mov
pop
sub
ret
jg
jnp
lahf
xchg
js
aad
xor
push
es
or
mov
mov
or
insb
das
jno
clc
icebp
in
arpl
push
lods
push
scas
sti
mov
sub
clc
cmp
add
mov
test
rorl
mov
fst
mov
jns
test
ds
and
push
pushf
adc
mov
add
mov
pusha
pop
push
xchg
aaa
jae
repz
test
push
lods
lods
adc
and
das
and
dec
cli
push
in
fadd
adc
int
and
push
iret
jl
aaa
adc
push
fdivs
and
fisubl
insb
push
xchg
and
mov
cmpsl
repz
xchg
aas
pop
addl
ds
push
sub
lds
out
jge
mov
imul
and
addr16
jmp
cs
inc
shll
test
outsl
jmp
ljmp
and
insl
adc
jb
cmp
push
ja
ficoms
insl
test
jo
and
xchg
mov
insb
mov
jle
out
inc
inc
jno
idiv
xchg
dec
and
imul
jl
sbb
shll
stc
mov
sub
aad
repz
pusha
dec
sahf
test
cltd
mov
add
scas
pop
sti
or
dec
and
push
fldcw
ja
mov
hlt
fs
inc
ljmp
mov
fcomip
push
push
lahf
or
fcmovu
xchg
mov
sub
jmp
dec
push
das
leavew
subl
lcall
mov
mov
sbb
pusha
aaa
xchg
mov
mov
jg
inc
add
popl
aaa
popa
addr16
pusha
mov
jbe
cmp
or
popf
push
ss
mov
imul
test
inc
and
rorb
clc
pop
leave
js
or
std
mov
pop
mov
dec
addr16
or
dec
fldt
stos
xchg
jbe
xchg
dec
or
inc
cmpsb
rorl
test
xchg
shlb
test
jnp
hlt
pop
notb
out
fsubl
mov
pop
pop
xor
popa
jle
fildll
jecxz
and
sbb
mov
sahf
sub
idiv
dec
xchg
mov
mov
xor
movsl
and
andl
cmp
repz
stc
jle
or
dec
add
adc
push
sarl
jge
ja
and
xorb
out
sahf
rcl
inc
or
cwtl
loope
push
sbb
bound
pop
cmpsb
in
arpl
mov
dec
and
pop
push
aad
inc
pop
jmp
dec
xor
pop
or
fisubrl
lret
imul
mov
lret
cs
xor
and
shll
pop
sbb
popf
dec
push
leave
push
lret
cmpsb
int3
stos
ret
mov
fbld
test
mov
xor
test
sub
leave
adc
mov
ret
pop
faddp
sub
sub
mov
int3
sbb
lret
filds
fisttpll
xchg
enter
movsb
cmp
jns
imul
mov
sbb
pop
pop
aad
daa
outsl
in
mov
adc
mov
int
pusha
jge
fildll
lret
push
mov
mov
loope
call
frstor
dec
fwait
sti
imul
cld
into
repnz
pop
in
mov
scas
das
inc
shlb
pop
in
in
jo
pop
mov
arpl
jge
sub
inc
xlat
and
insb
xor
push
insl
mov
popf
in
jae
cmpb
pushf
adc
cmc
es
push
outsb
mov
fwait
or
mov
jno
sub
and
je
aad
xchg
repnz
cmp
push
repz
loop
ja
movsb
jmp
xchg
and
sub
out
loope
stos
mov
sti
xlat
jl
pop
je
fsubs
jbe
jecxz
aas
lret
jl
sbb
or
icebp
pop
mov
dec
shrb
push
or
sub
jo
jae
data16
mov
stc
movsl
cmp
add
cli
incl
xchg
push
stos
popa
add
dec
cltd
push
inc
cmp
movsl
clc
test
jge
dec
out
dec
mov
lcall
mov
inc
out
cmp
mov
mov
pusha
clc
fbld
and
xor
mov
fsubr
lret
or
xor
inc
lea
sub
mov
xor
int3
sub
stc
and
test
jmp
daa
pop
cwtl
outsb
or
stc
xchg
dec
mov
fiadds
adc
pop
fsubrp
fbstp
xor
xor
add
or
mov
mov
adc
inc
and
ss
adc
cs
ret
jo
push
in
xor
and
clc
test
cmpl
test
add
pop
add
jnp
mov
outsl
ret
mov
rcrb
nop
adc
js
cmp
jae
mov
xchg
mov
repnz
mov
in
gs
fdivrs
jg
je
pop
add
and
out
adc
sub
popf
sbb
arpl
rcrb
int3
cmp
mov
sbb
mov
in
push
daa
popf
pop
adc
out
mov
or
xchg
adc
pop
jb
dec
adc
testl
fisubs
sti
inc
and
movsl
or
inc
fdivrs
adc
sti
outsl
dec
mov
or
lgs
mov
testb
jle
ficomps
xor
mov
sub
mov
bound
aam
jmp
lret
int
in
mov
or
dec
int3
test
jns
mov
pop
sbb
inc
mulb
add
pusha
add
daa
mov
sub
fs
pop
dec
arpl
adc
pop
pop
int
jns
xchg
cmpl
nop
xchg
jle
xchg
and
mov
clc
cmp
flds
inc
fs
mov
aas
add
xorl
mov
js
pop
aam
mov
xor
out
es
sahf
movsl
cmp
shrl
cmc
xchg
out
rolb
lcall
test
subb
mov
add
pop
push
inc
fwait
push
and
arpl
daa
fstps
insl
imul
stos
aad
xor
dec
call
iret
aad
cli
rolb
subl
fiaddl
sub
and
fiaddl
rolb
xchg
sub
dec
adc
cmp
pop
mov
pop
xchg
adc
dec
inc
pop
and
inc
dec
xor
popf
gs
dec
jno
add
mov
xor
mov
adc
or
test
test
aad
mov
pop
jmp
fbstp
or
add
cwtl
cmp
mov
jmp
mov
out
std
pusha
cltd
imul
xchg
mov
je
mov
mov
mov
and
mov
idivl
aad
xchg
adc
out
shl
fsubl
sbb
add
ret
xor
pop
pop
rcrb
adc
and
stos
inc
inc
cwtl
mov
lods
popa
insl
test
outsb
push
fsubrl
adc
jae
test
sbb
sub
and
fcmovne
jnp
data16
daa
jae
enter
sub
aas
or
adc
jmp
dec
in
mov
mov
lret
mov
pushf
in
ds
cmc
lret
fsubs
fstpl
adc
adc
repz
or
popf
shll
dec
adc
fistps
ljmp
mov
inc
test
and
sub
jp
sti
push
mov
add
mov
adc
jg
mov
cmovge
incl
sti
f2xm1
push
scas
xchg
push
enter
je
adc
cmp
xor
arpl
jge
enter
pop
stc
pop
adc
lods
cli
adc
mov
das
in
jnp
lea
pop
mov
pop
mov
push
mov
fcom
and
fisttps
in
test
pop
insl
mov
xor
mov
pop
pop
pop
xor
jecxz
imul
insb
loope
scas
nop
sub
fnstsw
push
mov
xor
lahf
test
int
cld
ret
mov
outsl
sbb
stos
push
sub
cwtl
ja
fwait
or
daa
pop
dec
fisttpll
mov
xor
repnz
subl
sub
adc
mov
and
aad
es
ss
lcall
daa
in
fucomp
shl
repnz
out
cld
divl
lods
xlat
jae
cli
sbb
xchg
pop
mov
jae
cwtl
fists
jnp
mov
test
push
out
addr16
sub
push
stos
jl
dec
fs
mov
inc
rcrl
mov
out
push
repz
lea
inc
sbb
jae
movsl
push
cmp
jg
rcr
jno
sbb
adc
inc
in
roll
xor
pop
push
inc
dec
jl
cmp
repnz
inc
sbb
cmp
or
dec
sub
xor
sbbl
cmp
ret
movsb
add
popf
shlb
mov
ss
and
cmp
sbb
push
fstpl
mov
dec
jns
cmpsl
pop
test
cmp
xor
rclb
pop
test
jnp
js
mov
insb
sbb
and
inc
imul
repnz
daa
lods
pop
jns
pop
or
or
lahf
xchg
hlt
mov
aas
adc
pop
dec
mov
test
jle
cmp
aaa
adcb
xchg
inc
jmp
mov
cmpsb
repz
stc
fwait
das
or
in
jp
lahf
mov
or
xchg
push
in
dec
pop
pop
adc
pop
rcrb
pop
test
mov
mov
lds
add
or
sub
pushf
cmp
jnp
pop
cmp
and
xchg
and
imul
mov
jge
cmp
sbb
daa
inc
sub
loopne
push
hlt
mov
loope
or
iret
cwtl
mov
rolb
nop
inc
cmp
jmp
fsubrs
and
fcoms
mov
cmpsb
mov
jp
mov
sub
out
pushl
push
dec
jmp
out
adc
fsubrs
int3
mov
mov
lahf
mov
adc
inc
xor
sbb
xchg
int
mov
fildl
pop
pop
incl
insb
inc
lret
inc
push
popa
mov
rcrl
push
mov
push
outsl
test
insl
push
inc
lock
out
xchg
xchg
xor
ret
add
xor
pop
mov
lcall
pop
cs
push
daa
stos
addl
aaa
shll
mov
mov
idiv
cmp
xchg
push
imul
daa
mov
aad
sub
and
jp
out
mov
xchg
cmp
pop
or
stos
movsl
repnz
nop
mov
cmp
out
pop
mov
outsl
adc
aam
es
test
shl
push
aam
imul
leave
cmp
js
stos
jo
mov
imul
mov
xor
out
cld
cmp
mov
repz
lods
inc
sub
mov
inc
xchg
or
cli
inc
push
pop
aas
sub
push
daa
mov
xchg
cmp
insl
arpl
add
push
ja
xchg
sahf
int
mov
scas
jns
pusha
fisubrs
hlt
and
mov
push
ret
xor
mov
icebp
mov
sbb
push
mov
or
loopne
mov
lret
xor
push
icebp
mov
cs
out
sub
cmc
cmc
lea
insl
repnz
call
ret
mov
imul
repnz
adc
loope
or
and
mov
movsl
mov
testl
scas
jnp
dec
fimull
cwtl
shlb
fdivl
or
rol
mov
scas
add
pop
and
and
aad
adc
mov
das
xor
jmp
movsb
popf
dec
add
loope
inc
movsl
inc
shll
clc
mov
jmp
in
icebp
mov
test
insl
inc
add
or
std
lods
lock
imul
jo
add
out
push
lret
repz
fisttpl
aam
and
test
mov
dec
push
push
imul
push
or
push
cmp
pop
mov
test
negl
mov
rorl
cmpsl
mov
stos
cmp
cmpsb
daa
mov
into
addb
jmp
mov
inc
add
mov
add
xor
xchg
or
pop
pop
mov
mov
fcoms
pop
jl
sti
pop
jle
sbb
repnz
adc
push
jbe
pop
fsts
and
pop
pop
addl
push
jmp
inc
jno
lret
pop
mov
mov
and
dec
jge
xchg
pop
lods
stc
data16
negl
imul
adc
cmpsl
sub
adc
xchg
jg
mov
cmp
fsubl
and
mov
bound
stos
adc
dec
xchg
sub
inc
add
imul
pop
in
arpl
addr16
stos
lods
je
pop
push
xchg
mov
xchg
lcall
rolb
mov
lret
add
aaa
and
enter
and
mov
fwait
pop
xor
fists
lret
out
push
xchg
jns
int
dec
dec
fs
fisubl
std
pop
mov
mov
xor
xor
jno
push
dec
orl
push
jg
and
jge
vmovapd
push
popf
cltd
les
sbb
pop
pop
push
or
or
push
mov
lahf
loop
mov
dec
out
sbb
and
mov
clc
sub
test
add
push
and
stc
stos
jl
mov
jmp
mov
sub
push
cmpsl
orps
mov
loopne
cwtl
daa
sub
in
cmpb
xor
mov
es
xlat
add
insb
subb
mov
and
xchg
inc
leave
mov
ror
sbb
ss
or
popl
ret
xchg
or
xchg
fwait
jecxz
lds
inc
sbbb
pop
mov
in
mov
or
adc
mov
inc
sahf
jmp
cmc
push
jae
scas
sub
lret
xlat
daa
je
rcrl
push
dec
cmp
test
mov
xchg
mov
jb
mov
sub
xchg
or
pop
popa
or
cmc
xchg
pop
sti
push
cltd
mov
out
mull
iret
imull
mov
inc
xor
jns
shl
fmul
movsb
insl
cmp
inc
repnz
sub
add
xchg
ljmp
cmc
jae
arpl
outsb
adc
push
mov
xor
stos
adc
andl
jp
daa
adc
pop
xor
mov
pop
push
aam
mov
pop
stos
imul
idiv
lahf
adc
mov
or
loop
lret
or
add
das
xchg
jnp
push
mov
and
push
rcrb
bswap
pop
adc
pop
int
mov
xlat
xor
mov
add
les
sbb
jmp
imul
cmp
cli
hlt
inc
test
fs
push
cmpsb
sahf
mov
ja
sub
mov
pop
imul
sbb
inc
jno
icebp
dec
jle
stos
jl
aam
sahf
mov
movsl
or
sbb
xor
add
test
aaa
shll
clc
les
inc
jle
int
movsl
mov
or
dec
adc
jl
lahf
mov
inc
pop
sbb
and
pop
sbbb
add
sti
inc
dec
push
repnz
int
adc
pop
add
inc
fnstsw
pop
add
in
ror
test
cmp
xchg
mov
and
lahf
icebp
sub
arpl
inc
lcall
dec
jo
xchg
add
mov
arpl
jp
jb
or
js
into
negl
jae
aad
das
xchg
or
bnd
outsl
aad
mov
aaa
dec
xchg
mov
sub
adc
sub
xchg
fimull
mov
inc
xor
pop
aad
adc
loopne
push
outsb
sub
in
or
sub
repnz
cli
pusha
test
mov
popa
add
inc
je
push
cltd
dec
pop
xchg
push
out
mov
mov
stos
pop
xchg
add
mov
addr16
push
xor
mov
sbb
or
and
movsb
jl
dec
outsb
sahf
mov
add
pop
out
inc
fwait
outsb
jle
pop
add
jbe
dec
out
add
xchg
std
cmp
dec
iret
mov
sti
jmp
in
push
xchg
or
frstor
int
loopne
dec
popf
xor
xchg
push
sbb
pushf
gs
divb
int3
mov
outsb
lods
aas
xor
ds
hlt
lret
and
hlt
cmp
mov
sbb
fnstenv
mov
cmpsb
jl
call
incb
loop
and
popf
lret
cld
jge
subb
pop
pop
inc
in
mov
ret
and
std
pop
push
xchg
outsl
and
mov
sub
adc
out
std
out
fimuls
repz
lods
cmp
adc
jns
outsb
or
jne
int
xorb
push
jge
jne
loopne
rorl
ss
imul
jo
add
fs
cltd
cltd
jae
lea
pop
pop
rcrb
test
push
daa
mov
loope
inc
pop
mov
lahf
lea
gs
std
notb
xor
pop
sarb
aam
or
sti
incl
js
sbb
fnstenv
cmp
in
adc
mov
pop
repz
in
andl
and
inc
mov
nop
mov
out
into
out
fcomps
cmp
add
mov
gs
int3
out
pop
pop
mov
lock
or
jns
pop
push
ljmp
mov
xor
mov
adc
rcrb
arpl
mov
xchg
rclb
xchg
mov
scas
pop
loope
xor
inc
mov
movsb
popf
push
cli
cmp
nop
stos
imul
and
dec
punpckldq
loope
jle
sbb
mov
xor
scas
cli
insb
push
adc
dec
fcomps
outsb
or
fidivs
cmc
idivl
clc
or
mov
and
jbe
pop
fidivs
jmp
repnz
movsb
sub
movsb
xchg
mov
mov
xchg
xchg
fldt
les
repz
loopne
push
inc
sbb
inc
iret
or
xor
rcll
inc
cltd
and
repnz
push
fistl
or
ljmp
sub
push
mov
mov
rcr
xchg
sub
lods
cmpsb
in
mov
data16
push
orb
cmp
sub
cltd
scas
xor
mov
aam
xor
sbb
sarb
out
dec
xchg
loope
sbb
jo
rcrl
int3
cmp
mov
mov
xor
mov
cli
dec
xor
pop
int3
mov
mov
and
add
mov
and
pop
insb
xchg
shrb
push
mov
int3
clc
inc
pop
inc
inc
call
and
lcall
lods
daa
hlt
and
arpl
jns
std
sbb
insb
addl
dec
mov
scas
dec
mov
cmp
clc
sub
jns
dec
aaa
aad
adc
inc
and
mov
in
xchg
dec
mov
cmp
sbb
mov
test
test
jbe
pop
adc
jo
xchg
push
out
sub
or
pop
ljmp
xchg
ja
sti
jmp
divl
loop
xor
stos
cmp
sarb
and
test
enter
push
cmp
imul
filds
pop
mov
mov
loopne
add
jae,pn
stos
outsb
inc
jnp
and
xchg
orb
jns
xchg
jl
lods
stos
push
imul
cmpxchg
push
mov
std
jo
fnstcw
leave
dec
popa
cmp
sub
xchg
push
inc
xchg
xchg
mov
xor
xchg
test
adc
cmp
shll
or
xchg
ret
cmp
lret
icebp
aaa
jo
aam
inc
push
adc
push
push
mov
jl
stc
arpl
les
xchg
add
insl
cwtl
cli
pop
addr16
cmp
lods
jno
in
ss
cmp
sbb
hlt
cmp
mov
dec
sub
pusha
pop
aaa
enter
and
mov
mov
rorl
mov
cwtl
outsl
jmp
mov
leave
cmpsl
int3
cmp
int
and
xor
dec
mov
jle
in
fldl
call
in
sub
stos
pop
data16
imul
bound
xlat
setle
dec
ss
mov
sbbl
int3
xchg
daa
fdivrl
jns
push
xlat
pop
arpl
or
pop
lds
fs
push
mul
mov
cmp
lret
push
test
sbb
cmp
sub
push
cmp
mov
push
mov
leave
mov
push
test
xor
ljmp
pop
push
mov
push
stc
jne
sbb
jnp
pextrw
stos
nop
iret
xlat
xchg
mov
sbb
pop
inc
inc
and
ss
push
pusha
jnp
je
test
jae
cmp
data16
outsl
and
or
push
add
mov
push
add
aas
out
out
push
jbe
add
cltd
cmp
inc
pavgb
or
cmc
jae
call
or
outsl
push
into
data16
sub
xchg
and
movsl
imul
insb
inc
mov
xchg
bound
push
frstor
dec
and
in
push
dec
push
and
mov
mov
sub
sub
push
cmp
dec
imul
dec
in
rol
mov
idivb
inc
mov
out
xchg
out
jnp
outsb
loopne
in
aas
ljmp
inc
clc
jo
pushf
movsb
cmp
mov
in
adc
mov
insb
jo
add
push
mov
push
in
loopne
pop
adc
repnz
dec
out
ret
ror
jno
cld
push
dec
sbb
movhps
fcmovb
mov
or
in
in
fildl
ljmp
insb
fistl
mov
push
nop
jle
decl
shll
sbb
or
xor
roll
dec
in
les
sar
lahf
rclb
stos
jne
add
adc
mov
inc
sub
mov
inc
icebp
into
lock
test
adc
sub
push
stos
inc
pop
adc
cmp
mov
mov
xchg
push
pop
mov
cli
xchg
lds
xchg
xor
in
bnd
inc
sub
repnz
xchg
in
insb
nop
inc
push
pop
xor
mov
out
out
jl
or
enter
adc
dec
jge
loopne
ret
mov
lods
inc
shll
rolb
ljmp
jp
orl
mov
xchg
sbb
loop
xchg
out
aas
idivb
mov
mov
pop
popa
stc
fptan
addb
ret
mov
cli
jae
mov
outsb
mov
pop
or
in
jae
out
out
test
rcl
add
mov
jg
jbe
test
ds
mov
add
cli
jmp
adc
adc
mov
push
sub
mov
test
xchg
rorb
sbb
lahf
lcall
push
out
out
cmp
sub
inc
cltd
icebp
xchg
enter
aad
adc
sub
jp
inc
les
xor
cmp
fwait
clc
fcomi
scas
mov
push
cmp
sbb
sub
xor
ds
popf
loope
sub
rorl
jle
je
push
push
sbb
lds
sub
add
fidivl
xchg
push
and
arpl
jns,pn
mov
push
jbe
imul
iret
mov
aad
add
test
xor
mov
xor
push
ds
xchg
popf
push
js
lock
sub
ss
and
push
addl
les
pop
mov
ss
dec
enter
jae
mov
loopne
shr
sahf
ficoms
decb
dec
fistpl
sub
inc
and
leave
pop
xor
jno
mov
negb
adc
inc
testb
data16
inc
ljmp
imul
call
and
push
xor
mov
sub
inc
pop
out
dec
mov
nop
jmp
jnp
push
dec
sub
xchg
xchg
cld
jne
adcb
pop
cmc
sar
cmp
mov
inc
sbb
addr16
cmp
xor
hlt
pusha
mov
cs
pop
mov
adc
or
rorl
adc
fcmovnbe
mov
mov
aas
out
inc
mov
mov
and
rolb
repnz
movsb
sbb
add
dec
loope
jo
add
jbe
lods
cmp
pop
fmull
ret
push
jmp
stos
mov
or
je
cld
mov
imul
fcmovu
paddb
adc
push
cmp
scas
and
flds
rorb
add
fwait
cmc
faddp
mov
mov
xor
mov
cwtl
or
sti
sarb
sbb
mov
mov
clc
sbb
std
insb
xchg
mov
cmp
jmp
cmp
fadd
sub
fldl
or
call
pop
add
jl
aam
aaa
xorl
sub
or
mov
gs
and
xchg
lahf
push
push
sbb
lock
mov
push
in
mov
jnp
insl
lock
xor
mull
outsl
aad
inc
push
dec
nop
test
shlb
push
insb
test
fisubrl
dec
xor
push
out
adc
rcr
cmc
outsl
ret
mov
loop
inc
xor
sbb
shrl
loopne
sbb
mov
movsb
clc
inc
add
add
sarb
jb
cmp
subl
xchg
adc
rcl
sub
sbb
pop
ljmp
ret
pop
xor
pop
test
push
mov
or
mov
xchg
sub
inc
inc
negb
mov
scas
ja
test
fnstcw
cmp
push
mov
xchg
aaa
xchg
mov
sahf
pop
mov
sub
pop
je
mov
mov
mov
mov
js
roll
mov
fdivl
push
in
test
inc
stos
in
leave
mov
ret
push
mov
into
add
mov
jg
adc
jmp
loope
cmp
inc
cltd
push
sti
jmp
sbb
sbb
dec
xchg
jo
leave
loopne
jns
sarl
xchg
add
inc
aam
stc
push
xor
gs
dec
into
xchg
mulb
popa
cmp
test
adc
adc
xchg
dec
inc
lock
add
xchg
pop
mov
lcall
hlt
sbb
aas
pop
push
inc
jmp
xchg
push
aad
lock
iret
ljmp
mov
push
mov
rolb
adc
and
lcall
dec
js
xor
push
stc
fistps
push
mov
pop
fstpt
jg
dec
out
scas
add
int3
int3
repz
cmc
jb
push
jp
repz
ret
imul
add
inc
adc
jle
jb
mov
shr
push
ret
fcomip
lods
in
jge
jno
push
gs
arpl
push
test
cmp
xor
jl
mov
xchg
rorb
stos
pop
es
loop
ret
add
and
or
divb
out
mov
lds
and
in
cmp
jo
jbe
decl
ds
and
xlat
add
daa
lds
imull
sarb
nop
addr16
mov
ret
ja
push
or
jp
mov
mov
xor
test
fcomps
pop
out
loope
push
xlat
sbb
or
lcall
jne
lods
xlat
sbb
and
adc
fwait
dec
push
xor
sbb
and
dec
xchg
or
mov
push
push
cmp
mov
cmp
xchg
sar
repnz
xor
inc
aad
jl
fidivrl
dec
or
insl
iret
sub
lahf
outsb
pop
cmp
test
xor
loopne
mov
mov
dec
insl
inc
mov
xor
out
xor
pushf
jnp
sub
pop
mov
add
stos
ficompl
nop
jno
or
stos
dec
dec
xchg
inc
scas
sub
push
arpl
test
push
inc
int
loop
out
out
fwait
inc
jg
fsubrs
icebp
fimuls
dec
inc
xchg
outsb
shll
dec
sub
shlb
pushf
call
in
out
mov
sbb
loope
push
idivb
jae
cwtl
lea
in
mov
push
jecxz
into
sub
inc
xchg
insl
cltd
cli
jbe
clts
loope
add
ficoml
mov
sub
xor
inc
leave
pop
cmp
jp
mov
idiv
mov
cmp
popa
add
into
xchg
inc
popa
add
add
rclb
ret
imul
int3
repnz
arpl
push
and
push
cs
jae
adc
rcrb
push
std
cmp
add
inc
lea
pop
cmpb
and
daa
mov
pop
xor
or
and
push
and
bound
clc
pop
dec
jno
push
jns
mov
test
mov
in
mov
xchg
xor
repz
xchg
sub
jb
fucomp
adc
jge
push
in
les
insb
jl
push
enter
js
mov
out
ss
mov
push
jne
push
mov
jl
inc
std
ja
pop
rolb
leave
sub
mov
mov
flds
xor
fs
lods
repz
add
mov
pop
add
inc
or
mov
fwait
pop
insb
popf
xor
hlt
cmp
scas
stos
xchg
push
jmp
push
mov
cmp
iret
jmp
shll
xor
cli
int
es
arpl
imul
push
inc
jge
jge
xchg
mov
mov
sbb
xor
jo
ja
mov
mov
push
lahf
xor
sti
pushf
imul
cli
test
jns
scas
fs
sbb
dec
arpl
lret
lods
fisubrs
subl
test
push
inc
in
xchg
sub
push
pop
pop
mov
lret
cmp
test
mov
movsb
adc
xchg
jb
jns
jbe
dec
int
mov
nop
push
ja
add
xor
xor
es
cmp
lds
add
repz
outsb
repnz
or
mov
enter
jbe
daa
mov
mov
ficoms
pusha
inc
aaa
sub
adc
daa
sub
ljmp
xchg
into
das
dec
and
sbb
sti
test
hlt
dec
ds
pop
dec
dec
xchg
sbb
shrb
out
jmp
dec
xor
daa
les
jl
jbe
add
inc
fs
inc
add
push
push
loope
std
mov
xor
lcall
adc
and
shrb
cmpsb
enter
gs
imul
insb
repz
popa
mov
jne
or
pop
in
incb
inc
bound
inc
inc
and
bound
pop
outsl
outsb
pop
xor
sbb
xor
push
adc
loopne
ss
lcall
pop
adc
fists
rcrb
xchg
ret
mov
pop
repz
mov
xor
mov
adc
and
mov
test
mov
or
pop
mov
push
les
in
cld
sbb
daa
mov
inc
inc
pushf
dec
shll
pusha
popa
or
cmp
xchg
push
inc
ja
outsl
scas
dec
sbb
and
mov
jge
mov
dec
cld
fs
fdivl
sti
push
ds
push
arpl
ret
xchg
stos
ja
sarl
js
inc
rol
loop
pop
test
mov
xor
mov
outsl
push
loope
je
popa
add
xor
sbb
or
ret
hlt
loopw
xlat
aad
in
jl
push
xchg
sub
scas
fcomps
inc
lea
xchg
imul
rclb
mov
dec
movsl
arpl
ljmp
loope
sbb
cmpsl
popa
pop
cli
scas
mov
dec
cmc
and
stos
add
outsb
out
mov
and
movsw
sbb
cwtl
push
lcall
data16
dec
dec
sbb
push
add
outsb
or
aaa
jne
push
es
popf
cli
pushf
les
lret
inc
cmp
jno
imul
ret
insl
mov
jnp
out
bound
bound
cltd
jmp
mov
add
fmul
and
test
dec
or
inc
push
out
gs
loopne
cmpsl
add
in
data16
jnp
aaa
je
sarl
lahf
imul
mov
mov
insl
inc
inc
fisubl
mov
mov
mov
xor
pop
push
push
push
fdivr
out
stos
xor
inc
sahf
das
lods
adc
fisubs
pop
xor
lods
out
int3
ret
int
shl
mov
jbe
pop
and
mov
out
adc
push
jns
xchg
in
test
sbb
ds
cmp
xchg
cmp
popa
out
insl
inc
jl
test
push
xchg
lahf
int3
jl
mov
xor
cmp
in
notl
pop
push
ja
lods
sbb
mov
scas
call
xor
loop
or
xlat
cli
loopne
clc
pop
imul
subl
mov
ds
repnz
cmpsl
out
pop
icebp
mov
les
cmp
int
adc
cmpsl
cmp
inc
inc
cli
and
cmc
adc
mov
outsl
pusha
xorb
jb
xchg
mov
jo
add
stc
outsb
dec
test
xchg
mov
inc
das
ja
xchg
nop
pop
pop
mov
nop
mov
push
and
and
sbb
aam
mov
aam
loopne
mov
aad
fnstcw
stos
pushl
js
xlat
rclb
or
fidivl
cmpsl
dec
test
mov
arpl
pop
jecxz
test
pop
flds
das
mov
pop
call
lea
scas
mov
cmp
jp
lds
lret
mov
cmc
mov
movsl
fdivs
mov
icebp
lds
mov
lahf
pop
cmpsb
imul
mov
pop
mov
lods
and
dec
push
xor
je
loop
arpl
int3
in
jae
fldenv
sub
sahf
jl
pushf
inc
aad
jb
fsts
dec
sbb
insl
aas
pop
neg
mov
pop
jmp
mov
aas
daa
sarb
mov
in
jg
test
xor
jo
es
fldenv
cmc
popl
popf
cmp
or
clc
daa
dec
lock
sbb
repnz
test
push
jbe
je
pop
add
push
sbb
mov
cmpsb
mov
and
or
stos
js
mov
push
add
fwait
leave
cmpb
std
insb
adc
sti
mov
mov
scas
xchg
aas
or
das
das
test
pop
inc
adc
sub
into
pop
negb
xchg
push
ss
shll
out
cmp
insb
add
out
push
std
pusha
fnstsw
inc
push
dec
scas
mov
shlb
pop
and
xchg
icebp
push
xor
rorl
flds
pop
and
sbb
xor
xchg
scas
or
fcmovnbe
sbb
mov
fisubl
imul
pop
xor
outsb
dec
xlat
sbb
sbb
cmp
push
cmc
out
pop
or
push
xchg
stc
xchg
test
mov
leave
push
xchg
mov
sbb
neg
icebp
rclb
adc
leave
idivl
xchg
outsb
hlt
pop
fs
enter
jmp
test
test
scas
xchg
insb
ljmp
cmpsl
shll
xchg
shrb
test
and
push
mov
push
or
inc
xlat
sub
or
mov
stos
xchg
add
xor
fmul
sbbb
iret
mov
mov
mov
pop
movsb
jno
stos
loopne
jp
scas
xchg
cmp
repz
repnz
mov
dec
xor
faddl
and
loope
sbb
inc
out
fdivrs
mov
mov
adc
and
arpl
out
cld
imul
cld
adc
scas
in
xchg
pop
js
fwait
lods
pop
inc
lahf
inc
das
and
push
add
pusha
push
push
jne
push
dec
faddl
ud1
mov
pop
das
data16
popa
dec
rcrl
or
add
movl
and
mov
push
mov
push
sub
xchg
scas
inc
stc
push
test
xlat
cs
xorl
ja
mov
fs
cwtl
inc
sbb
mov
popa
rcll
add
aas
sbb
xor
movsb
cmc
addr16
inc
pop
scas
clc
jno
or
xor
cmpsl
jb
stos
jno
sahf
mov
shl
mov
mov
bswap
sbb
or
jnp
xlat
cmp
jg
ret
add
mov
mov
adc
mov
imul
jmp
lret
sbb
or
cli
clc
sarb
adc
cmp
jmp
js
scas
xor
rolb
ja
pop
daa
inc
std
dec
cmpsb
adc
test
pop
lcall
call
mov
mov
xchg
mov
test
scas
das
aas
mov
pop
jp
lahf
mov
cwtl
mov
add
jae
ljmp
insl
cmc
add
daa
push
xchg
sbb
cmp
jle
dec
jno
sbb
rorb
jbe
mov
mov
stc
jl
mov
xchg
jne
popf
push
mov
das
sbb
es
in
jns
or
int3
jae
push
inc
jp
xchg
outsb
data16
mov
repnz
imul
fsubrl
dec
adc
into
aad
cmp
lret
cwtl
xor
cmpsb
fldl
and
bound
jo
push
pop
jge
jbe
iret
pop
push
mov
int3
inc
xlat
in
int
mov
lahf
das
movsl
jo
and
outsb
xor
pop
inc
xor
lods
cli
mov
call
dec
popf
nop
cltd
lock
mov
call
ljmp
scas
insb
and
push
gs
xor
mov
jbe,pn
cli
jp
ljmp
les
pop
leave
es
lds
jge
adc
or
ja
pop
lds
cmp
std
sahf
mov
es
push
repnz
jle
or
icebp
dec
inc
sti
stos
ror
cmp
add
rcr
mov
jae
mov
push
out
dec
cmp
iret
call
lds
adcb
push
xchg
rcrl
xchg
ret
fwait
jg
mov
mov
ss
addb
fisubl
inc
mov
xchg
jecxz
pushf
xor
fs
fs
push
loopne
push
lcall
jmp
cmpsl
xlat
or
sbb
addr16
cmc
adc
xchg
cmp
push
fisttpl
jp
xchg
jecxz
push
dec
jp
mov
jae
mov
xchg
fdivr
in
xor
popa
fs
out
mov
sub
push
cmp
push
aas
flds
movsl
aam
orb
mov
cmp
pop
cld
leave
pushf
and
cmp
xor
nop
xor
dec
mov
pop
sub
rcrb
sub
out
lcall
fisubrs
dec
add
lods
adc
adc
loope
inc
add
cmp
xor
mov
test
or
icebp
lods
shl
pop
cmc
xchg
bound
sbb
mov
arpl
jl
cmp
dec
and
jp
popf
or
mov
jbe
and
nop
cmpsb
in
mov
imul
nop
hlt
or
pushf
add
jnp
mov
sub
inc
mov
sbb
outsb
xchg
or
add
jno
daa
enter
sbb
rcrb
sub
aaa
push
frstor
adc
push
mov
arpl
imul
repz
es
xchg
sub
mov
xchg
rcrl
popf
std
sbb
pop
push
xchg
cmp
xchg
inc
add
sub
in
adc
xlat
in
xor
cltd
jbe
in
xor
xchg
xchg
or
jp
test
xchg
fnstenv
repz
pop
sub
jl
xchg
dec
push
les
lods
cmp
mov
movsl
cmc
pusha
sub
pop
push
xchg
mov
mov
xor
gs
sbb
jnp
mov
movsb
mov
ss
cmp
push
jns
xchg
xchg
aas
cmp
clc
jne
inc
cmp
lods
cmpsb
pusha
and
jle
div
sub
out
push
mov
arpl
jmp
adc
jne
mov
fnstsw
shll
int3
jo
push
dec
jmp
movsl
add
xor
repz
mov
fwait
loope
cmp
neg
or
sbb
test
call
insl
out
loope
imul
xor
push
add
out
imul
mov
shlb
jbe
pop
shrb
insb
outsl
dec
dec
out
subl
push
fists
pop
mov
mov
sub
pop
popf
cmp
outsl
xchg
out
adc
inc
sbb
sub
cmp
aaa
inc
push
cltd
out
sbbl
push
sahf
jecxz
add
mov
or
push
xor
sub
dec
in
inc
mov
je
imul
icebp
mov
mov
leave
pop
inc
push
pushf
insb
inc
adc
sti
stc
sbb
lret
add
ljmp
or
testl
pop
lcall
out
int3
xchg
adc
cmp
xchg
adc
ja
mov
out
cli
cmp
rcll
fsubl
adc
push
inc
inc
xor
insl
pushf
mov
lock
enter
test
pop
mov
mov
imul
pop
into
out
sub
movups
xchg
push
je
dec
xchg
sbb
fxch
sahf
fnstenv
jmp
add
fs
adc
dec
sbb
mov
xlat
mov
jns
mov
cmp
push
call
por
pusha
stos
ss
dec
sub
xchg
es
jb
je
aaa
movsl
cmpsl
pop
fs
cld
push
fs
mov
mov
les
outsl
aas
test
push
lock
adc
pop
cmp
out
faddl
pushf
movsl
lret
inc
push
dec
popa
pop
inc
inc
dec
clc
inc
mov
or
jp
sbb
pop
sbbl
push
and
outsb
jbe
mov
adc
xor
xchg
dec
xor
cld
xchg
test
jg
xchg
mov
jb
mov
leave
jnp
movsb
cld
sarl
mov
sbbb
add
jg
pop
mulb
lcall
or
lahf
test
pushf
sbb
lcall
pop
insb
jp
dec
subb
sbbl
mov
daa
push
xchg
fs
ss
xchg
adc
add
popa
lds
mov
int3
cwtl
incb
add
cmp
inc
adc
mov
xlat
insb
dec
das
or
sub
int3
stos
scas
mov
jp
mov
dec
das
or
pop
jg
mov
insl
fstl
push
add
inc
and
inc
jnp
mov
mov
cmp
aam
je
ja
dec
mov
xor
sbb
jns
add
out
dec
sub
lds
or
add
sti
cmpsl
or
dec
ret
dec
push
test
cmp
loopne
inc
data16
pop
imul
jb
mov
mov
jo
pop
loop
xchg
gs
inc
adc
dec
inc
mov
mov
aaa
imul
dec
popf
lods
add
sub
mov
dec
sub
cmp
xchg
cmp
cld
outsl
bound
inc
sti
rcll
xor
mov
or
mov
aas
lods
add
adc
js
dec
pushf
push
lock
push
add
lahf
cmp
bndldx
adc
inc
pop
sub
cmp
add
scas
lea
sbb
pusha
ror
jl
sub
pop
jl
add
push
cmc
fwait
mov
xchg
and
mov
sbb
dec
je
adc
push
movd
stos
pop
jmp
pop
cmp
pusha
adc
cmpl
jae
push
inc
ficompl
aad
andb
shrb
cmpl
aad
xor
adc
jmp
jbe
xchg
xchg
movsb
xchg
push
scas
lods
mov
int
and
push
lahf
dec
in
pop
lds
xchg
and
call
xchg
clc
cmp
aaa
inc
lock
jmp
and
sbbl
shrl
gs
lods
add
and
fisttpl
inc
in
cli
dec
fistpll
or
mov
out
cmp
icebp
jo
xor
xor
and
fsubs
dec
stos
into
push
sti
sbb
cs
mov
mov
cs
aas
push
sahf
or
addl
sbb
jp
xor
mov
lea
mov
cmp
add
into
in
sarl
sub
scas
and
icebp
std
adc
cmp
scas
push
jmp
inc
sub
push
and
lods
inc
cld
mov
cmc
int3
jecxz
add
and
fcmovnb
cmp
jo
inc
dec
lcall
dec
cmpsb
jns
dec
sbb
jge
loopne
sub
mov
or
pop
in
push
xchg
out
mov
jge
les
lock
les
or
stos
int
adc
imul
xchg
je
imul
cmp
mov
bound
xchg
repz
pop
mov
and
jmp
pushf
ret
outsl
fstpl
loopne
jp
add
imul
add
mov
icebp
mov
jecxz
out
inc
jo
iret
push
xchg
lret
inc
pop
divps
rcrl
xor
push
out
loopne
insb
push
jns
popa
out
mov
push
out
cmp
lret
dec
inc
jne
je
out
pop
jne
pop
cld
push
es
iret
sti
fcoms
lods
mov
into
jp
movb
mov
out
sub
ja
sbb
bound
add
jbe
xchg
add
mov
mov
add
jmp
push
addl
or
pop
popl
adc
add
xor
mov
push
jne
rorl
mov
mov
lret
rol
out
out
hlt
int
jl
push
xchg
mov
aad
mov
dec
es
mov
cmpsl
ret
mov
aad
ds
cmp
sbb
je
int
and
shl
xchg
pushf
xchg
lds
arpl
xorl
mov
sbb
push
sbb
popa
push
call
jmp
adc
movsl
jnp
add
sarb
and
lea
xor
or
cmp
push
lcall
cmp
xchg
adc
jae
mov
pushf
subl
movsb
jge
mov
in
ss
lcall
push
lock
xchg
mov
xchg
cmp
jne
iret
xor
or
inc
pop
pop
pop
jge
cmp
pop
pusha
aas
cwtl
adcl
push
cmpsl
pop
xor
aam
dec
inc
inc
leave
sbb
ds
xlat
int
mov
pushf
or
pusha
lcall
fbstp
lea
push
out
push
and
lds
pop
mov
and
mov
dec
ja
xchg
das
subl
inc
inc
pop
mov
push
or
out
insb
pusha
andl
test
vhsubpd
jl
bound
xchg
lods
add
fidivl
lock
div
loope
dec
jo
pop
cmp
sub
aam
pop
xchg
mov
lods
mov
jp
and
xor
dec
cli
cmpsb
and
in
cld
outsl
sbb
cli
pop
pop
sub
and
test
icebp
inc
xor
mov
xlat
test
iret
rcll
adc
shlb
dec
xchg
jmp
into
and
add
dec
movsb
mov
pop
cmc
int3
faddl
int3
push
push
xor
fsts
enter
mov
xchg
cmp
mov
test
std
push
mov
inc
cmp
stc
gs
sub
mov
mov
out
mov
mov
in
push
cmp
push
and
popa
pop
sbb
into
sbb
cs
dec
out
not
mov
xchg
daa
xchg
neg
roll
dec
stos
std
dec
xlat
jne
xor
push
addr16
movsl
daa
add
or
in
stos
inc
imulb
adc
enter
and
fidivs
repz
scas
outsb
inc
hlt
xchg
xor
or
lret
mov
cmp
adc
into
pusha
outsl
sahf
in
mov
movsb
pop
fisubl
lret
and
dec
test
fldenv
shl
int
dec
xlat
les
dec
adc
rcl
sub
das
mov
cli
gs
stc
rorb
imul
pop
and
les
push
test
mov
jb
sbb
rclb
sbb
and
dec
xor
mov
mov
or
xorl
xchg
insl
sbb
stos
jne
and
adc
inc
leave
push
sbb
jno
cmp
int
push
test
into
movsl
mov
sbb
and
lahf
cs
imulb
notl
adc
mov
into
mov
push
mov
dec
push
lret
dec
or
mov
subb
les
jmp
sbb
or
mov
dec
mov
mov
loope
out
xchg
jp
call
outsb
lods
nop
cmp
ffree
mov
fidivrl
mov
inc
cmpsb
lret
add
pop
mov
sub
outsb
repnz
outsl
sub
icebp
sbb
mov
pop
mov
pop
pslld
pop
pop
jge
leave
pop
sbbl
xchg
lods
call
pop
mov
mov
jmp
je
push
xor
add
mov
fcoms
pop
subw
mov
ret
sub
insl
mov
out
jo
imul
push
sbb
fildl
pop
inc
xchg
cmp
pop
mov
aas
fwait
sub
pop
inc
nop
fmuls
sarl
dec
out
pop
mov
sub
test
incl
fnstcw
and
test
sbb
pop
enter
movsb
dec
pop
push
scas
shr
in
fstl
push
test
nop
jno
jge
mov
dec
out
jns
sub
xchg
sbb
ret
and
mov
sahf
loope
sti
or
jb
pop
pop
je
insb
pop
pop
jmp
fwait
decb
pop
rolb
ror
nop
movsl
test
imul
pop
jl
xor
cmp
or
lock
repnz
xchg
mov
enter
and
hlt
xchg
movsl
cli
mov
or
clc
push
nop
in
jno
ja
pop
mov
xchg
lods
sar
mov
fldl
dec
dec
mov
inc
dec
xchg
jp
lret
mov
or
jne
decl
and
fnstenv
cmp
jbe
mov
adcb
adcl
shll
or
leave
jmp
dec
xor
push
push
and
lods
shr
jno
dec
shll
les
outsb
sub
and
lahf
insl
pushf
fsubrs
mov
in
cmpsl
insb
sub
dec
add
imul
adc
mov
mov
jnp
xlat
lds
xchg
mov
loopne
inc
sub
dec
lds
call
andl
int
jl
or
mov
or
test
in
pusha
push
xor
mov
imulb
and
and
xchg
pop
or
cmp
test
mov
sub
ret
inc
insl
pop
pop
adc
ret
aas
imul
jno
daa
out
adc
inc
int
je
dec
and
jge
pop
int
and
ljmp
scas
sub
inc
or
pop
call
inc
cmc
sbb
out
fs
pop
cmp
xor
adc
cli
inc
scas
pop
out
adc
outsl
cltd
cmc
adc
ljmp
ljmp
sbb
xchg
lods
movsb
popf
mov
lret
insl
sbb
roll
orl
mov
xchg
push
or
cltd
test
adc
ds
jne
mov
sahf
jle
jmp
sbb
in
or
pop
ja
shll
movsb
dec
push
out
cmpsb
call
imul
cmp
lds
stos
add
lret
sti
sbb
xchg
insl
or
sbb
nop
scas
mov
insb
aad
mov
cmp
lcall
or
cmp
jecxz
test
dec
arpl
xor
adc
iret
idivb
mov
data16
cmpsb
test
pop
cltd
fstpl
in
push
rclb
aaa
mov
push
rcll
js
mov
xchg
lods
cmp
cwtl
out
out
jle
push
sbb
push
aad
cltd
push
inc
lods
sub
inc
sbb
mov
jle
sub
xchg
jae
mov
jne
out
xlat
stos
dec
sbbl
lcall
mov
std
aas
jbe
sbb
mov
nop
iret
push
mov
pop
test
or
movhps
mov
fisubrs
cmpsb
int3
popa
push
mov
push
xchg
shl
and
adc
jecxz
mov
sub
mov
sahf
adc
pop
jae
je
cmc
fldl
xor
addr16
repz
jae
repz
xor
xorb
adc
test
mov
xor
cmp
mov
scas
pop
rol
sbbl
pop
idivl
mov
jmp
fcomps
xchg
je
incl
xchg
mov
push
xchg
aam
scas
mov
mov
in
adc
mov
cwtl
sbb
dec
repz
jns
jne
inc
push
fiadds
xchg
subl
cmpsl
cmp
sub
xchg
jle
cmpb
jne
mov
in
fmuls
push
mov
adc
mov
pop
aas
pop
xor
in
mov
dec
mov
cmp
int
repz
repz
cli
sub
cmp
shll
and
jne
movsl
lea
and
into
xor
pop
enter
mov
fcompl
mov
outsl
cmc
out
inc
ljmp
dec
cltd
outsl
lea
ljmp
cmp
sbb
fwait
pop
jmp
adc
add
in
sub
inc
aaa
insl
sub
add
xchg
or
mov
pop
or
in
les
inc
aas
aad
in
loopne
add
outsb
testb
sbb
inc
gs
xchg
arpl
std
xor
ret
hlt
movsb
cmpsb
cmc
mov
mov
fsubs
loope
jne
gs
popa
mov
enter
mov
fcmovbe
outsb
test
sub
push
xchg
xchg
fcompl
add
inc
pop
cmp
lret
das
inc
rcr
cmp
ss
lret
mov
xor
notl
call
jo
out
mov
sbb
jo
sbbl
xor
dec
int3
push
mov
ljmp
loope
into
cld
ds
push
inc
cltd
push
jge
in
xchg
dec
nop
loopne
pusha
pop
sbb
incb
mov
pop
dec
pop
test
jnp
and
fadds
fwait
pop
or
pop
sub
js
pop
ret
sbb
hlt
mov
ds
and
pop
xor
sub
xor
xchg
add
imul
fnstsw
add
fnstenv
in
mov
ss
and
mov
pop
ret
push
inc
or
insl
test
sahf
mov
push
loope
xor
mov
stc
outsb
call
ret
and
dec
push
addr16
shll
sahf
inc
push
js
stos
test
mov
ss
lret
repnz
fadd
sub
jle
push
mov
xchg
cmpsl
stos
sub
push
pushl
mov
stc
mov
push
jnp
push
push
fildl
test
inc
and
scas
add
xchg
push
xor
cmp
inc
repz
jmp
push
ljmp
add
add
aas
insb
add
mov
cmp
inc
sub
mov
jno
sti
cmpsl
bound
lret
jmp
inc
jns
push
or
outsb
and
ja
jge
fs
pop
push
insw
rolb
std
adc
nop
jne
sbb
push
mov
test
cmp
rcrl
add
mov
shrl
stc
repz
fstpl
lea
ret
adc
jge
das
dec
dec
repz
dec
imul
xor
popa
and
add
sub
adc
ljmp
xor
imulb
mov
stos
xchg
ds
addr16
adc
pop
dec
insb
es
xor
sub
pop
cli
lret
ret
ret
movsb
int3
pop
xor
jg
loope
aaa
push
daa
fisubrs
outsb
sub
push
repz
dec
jmp
sub
cwtl
jecxz
jne
ja
sahf
clc
movsb
pop
push
push
adc
mov
lods
cmp
into
rorb
xchg
pop
inc
cs
cltd
es
sub
cmp
lock
repz
std
xor
push
int3
cs
xchg
dec
lock
loope
dec
inc
push
adc
xchg
or
leave
fwait
sbb
jns
andl
fdivs
insl
cld
fistl
aaa
xor
xor
sbb
sahf
sbb
enter
shll
push
adc
hlt
int3
jmp
jae
pop
or
outsl
nop
imul
jnp
sbb
mov
test
fiadds
jle
ljmp
insl
push
pop
into
scas
xchg
push
popf
das
sti
orb
stos
cltd
sbb
xchg
cmp
sarb
fnstsw
inc
mov
adc
cmpsl
outsl
jecxz
popf
jge
mov
popa
add
and
sbb
mov
popa
sbb
dec
push
movsl
pop
jl
lods
inc
mov
int3
xchg
jg
js
xor
sub
pushf
xchg
cmp
mov
pop
test
enter
loopne
xchg
xor
into
mov
repnz
int
rcll
xchg
inc
adc
push
mov
ffreep
mov
or
out
pop
fsubs
mov
add
loopne
jns
sbb
hlt
lods
mov
mov
cmp
dec
xor
movsb
xor
ds
mov
je
push
dec
insb
push
jecxz
mov
pop
int
mov
lods
add
stos
jo
pop
ss
fisttps
out
sub
lcall
insb
mov
cltd
lods
shrb
xor
jne
lret
into
and
mov
insb
les
aad
xor
push
jno
adc
mov
scas
fistps
faddl
pop
sub
inc
popl
push
mov
nop
cmp
mov
cmp
lods
xorb
pop
push
add
sub
cli
cmp
imull
addb
movsl
xchg
xor
popa
fldl
rcrl
xchg
and
inc
xchg
push
jbe
inc
xorl
in
jb
dec
testb
lods
or
mov
xchg
cmp
or
fs
mov
or
dec
cmp
mov
shlb
rcrb
and
mov
pop
loopne
jle
mov
push
dec
pushl
mov
sbb
outsb
sub
xchg
pop
fwait
pushf
lret
xchg
in
xor
sarb
jo
roll
je
sub
dec
nop
add
or
call
sub
xor
dec
and
inc
pop
sti
mov
cwtl
or
mov
repz
and
mov
out
sbb
mov
inc
stos
dec
cmp
xor
imul
dec
mov
xor
ror
sub
mov
cmp
ljmp
jg
cmpsl
inc
jp
aam
cmpsb
outsb
ja
or
inc
rorl
iret
filds
sbb
push
call
push
lea
adc
data16
aad
inc
mov
mov
mov
adc
add
cmp
adc
sahf
adc
lcall
pop
mov
adc
jecxz
pop
sub
out
adc
mov
cmp
sub
mov
inc
dec
cs
repz
dec
sub
testl
jl
fdivs
jecxz
mov
ffreep
aam
imul
inc
mov
dec
xor
lods
rcl
fs
inc
inc
sbb
in
and
jmp
cltd
sbbb
push
adc
fucom
clc
jae
push
aaa
les
scas
jmp
xor
hlt
jp
and
js
lods
dec
push
mov
xchg
fistpl
mov
or
lcall
jg
loopne
lods
insl
ljmp
rorl
mov
push
call
dec
sub
jmp
in
or
cld
orl
movsl
stc
xor
sub
cs
std
imul
stc
fldcw
jle
pushf
sti
xor
push
lock
call
mov
lret
clc
jecxz
popf
lret
sbb
insb
daa
push
in
fdivr
mov
cltd
les
jo
mov
push
pop
aad
pop
xor
outsl
popf
sub
fwait
push
icebp
inc
mov
and
into
stos
dec
enter
arpl
fmulp
add
mov
push
xor
mov
dec
pushf
xor
jbe
bound
mov
mov
or
cmp
jae
ljmp
cld
movsl
mov
outsl
pop
mov
jg
pop
and
int
imul
loope
pop
mov
fsincos
movsb
dec
xchg
sbb
pop
mov
cmp
push
ret
jmp
dec
push
push
sub
daa
stos
cld
ds
mov
push
mov
pushf
and
cmp
popa
mov
lahf
fsubl
sbb
orl
lds
ffreep
push
fcmove
ds
mov
stos
jo
mov
mov
int
icebp
andb
sbb
or
cmp
out
xchg
and
xchg
movsb
jns
cmp
add
xor
aad
lcall
mov
aas
adc
fsubl
push
dec
testb
call
mov
pop
ds
test
test
arpl
subb
xchg
ljmp
xchg
and
adc
dec
or
pop
sbb
mov
push
add
push
cltd
dec
jns
mov
mov
xor
es
add
gs
fisubrs
sarl
jmp
outsb
cltd
into
jmp
mov
sti
outsl
jl
fdivrs
andb
mov
jge
or
adc
push
cmp
roll
movsb
imul
popf
enter
mov
data16
int
jg
mov
jl
fildll
ss
mov
in
sbb
ja
mov
addr16
sbb
pop
rol
fsts
inc
mov
inc
sub
jge
sbb
scas
push
dec
xor
orb
mov
pop
scas
imul
or
add
inc
outsl
and
xlat
out
daa
adc
inc
mov
xor
inc
test
pop
mov
lea
ficoml
xor
jns
loop
mov
sbb
mov
fadds
and
push
mov
sbb
jb
sbb
cmove
cmpl
addl
xchg
lock
iret
fmuls
mov
inc
lret
fcoml
sub
lea
sti
mov
mov
mov
xchg
and
and
lods
ljmp
push
mov
pop
adc
cmpsl
push
call
leave
or
enter
dec
dec
cmpsb
aam
mov
xor
mov
cwtl
fdivl
jb
cmp
repnz
mov
es
sbb
xchg
mov
shll
pop
dec
call
mov
mov
jns
or
ja
jmp
sub
fcomps
xor
adc
into
xchg
dec
fadd
mov
ljmp
cmpsb
outsl
jnp
inc
jle
adc
aad
inc
loope
mov
push
pusha
imulb
stos
or
scas
push
movsl
jecxz
jp
cmp
dec
out
sub
cmpsb
ja
jnp
scas
jno
adc
fcomip
sub
inc
inc
in
sbb
test
pop
jle
mov
inc
inc
push
push
cli
adc
fidivrl
mov
cmp
cmp
loop
add
aas
test
or
shll
dec
mov
sbb
lods
mov
sbb
fnstenv
nop
push
nop
and
loop
or
icebp
push
call
xor
adc
out
outsl
mov
xor
and
push
sti
out
lret
cli
adc
je
pop
sub
xor
mov
inc
lds
out
jae
mov
or
int3
jne
jne
movsl
push
lcall
mov
cmp
push
in
aad
xor
push
mov
lahf
jecxz
or
jmp
mov
stos
js
fildl
movsb
mov
lret
dec
fcmovne
mov
inc
cmp
cmp
mov
es
jmp
imul
cmp
es
mov
inc
nop
adcl
dec
add
dec
or
repnz
push
pop
nop
into
popa
mov
xchg
xchg
push
xchg
jae
mov
mov
lock
jne
push
gs
mov
mov
jmp
ss
or
jl
mov
mov
std
sbb
fadds
mov
push
fimull
mov
lock
inc
add
rolb
sub
cmp
cmp
stc
shl
fldcw
or
in
in
jns
or
filds
andl
insl
stc
push
and
jp
sub
inc
int3
sti
pushf
rorl
ret
shlb
mov
into
in
dec
push
stos
and
stos
inc
loope
mov
sti
push
loope
push
mov
sbb
scas
fisttpl
in
xchg
fimull
ret
dec
movsl
nop
pop
sbb
mov
fcoms
mov
push
or
jl
ljmp
mov
lcall
lds
xor
sti
test
inc
cli
or
iret
cmp
fistpl
stos
outsl
in
fldcw
sbb
sub
dec
cmp
outsl
cmp
scas
jp
push
mov
lret
dec
fistl
movsb
ss
iret
sub
push
or
pop
add
and
lret
rcl
test
jl
loop
push
shl
aad
mov
xchg
aas
mov
xor
adc
test
dec
sbb
push
dec
mov
imul
xchg
or
popa
std
loop
cmp
pop
in
rorb
add
arpl
mov
pop
adc
cli
lods
sarb
arpl
stos
mov
sarb
dec
mov
mov
call
lods
cmp
fistl
and
dec
test
lods
sub
push
push
mov
aam
sub
push
loop
pop
push
adc
inc
and
insl
push
stos
pop
xlat
loope
out
dec
cwtl
popa
mov
adc
push
mov
rorb
out
add
aad
lcall
ljmp
stc
jg
and
lods
xchg
sarb
out
imul
scas
jp
popa
cs
xchg
dec
push
pop
daa
rcll
in
fst
add
sarb
cmp
popl
inc
sti
aas
push
into
cmpsl
fistpll
mov
mov
bswap
jae
rcrb
cmpsb
push
mov
mov
das
add
push
xorl
ret
inc
push
je
mov
hlt
pop
imul
dec
pop
test
mov
cwtl
jbe
sbb
sub
jno
mov
sub
stos
faddl
rorb
inc
test
ljmp
lcall
imul
dec
or
rcrl
sub
outsl
fidivrl
fisubrl
inc
xor
nop
loope
sarl
xor
add
jae
ja
out
cli
dec
pop
jae
dec
xor
arpl
xor
sti
xchg
rolb
arpl
cmpsb
lds
add
sbb
push
or
push
xor
mov
cs
sbb
js
int
xor
jno
sar
test
sub
push
nop
fs
testb
and
sub
cmpsb
jo
mov
sbb
inc
lds
sbb
hlt
cmp
inc
fs
sub
cmp
adc
xchg
pop
fiaddl
sbb
mov
ret
or
or
xlat
push
mov
fcompl
sbb
mov
sub
sub
arpl
inc
fs
mov
jmp
jmp
cmp
pop
icebp
mov
cld
test
inc
fsubrs
mov
and
sahf
scas
cld
jbe
lret
cld
jb
pop
cld
pop
ss
mov
jb
movsl
add
div
add
incb
pop
pop
fwait
test
in
and
sbb
sbb
fadds
push
mov
pop
fsubrp
repz
sub
ret
out
imul
jge
add
and
repnz
pusha
insl
int
inc
cmp
sbbb
rorb
out
jne
pop
test
gs
daa
mov
mov
xchg
xor
nop
scas
push
push
xor
fldenv
push
jno
inc
mov
test
add
dec
mov
push
xchg
popf
out
test
push
mov
xor
insl
cmp
mov
sub
cmp
mov
or
sbb
fwait
add
xor
and
bound
xor
test
push
jb
xor
jne
dec
imul
scas
pushf
and
aad
pop
inc
xchg
sub
and
dec
stos
shl
or
in
in
dec
mov
inc
popl
cmp
mov
add
xchg
add
cltd
xchg
fs
stc
mov
jge
cwtl
cld
out
jne
nop
add
cmp
pop
add
test
jno
imul
xorb
scas
mov
jnp
fistl
mov
loopne
das
jmp
fisubrs
fidivrl
push
xchg
dec
dec
rorb
mov
fildll
pop
push
in
mov
jbe
cli
pop
inc
lahf
negl
push
je
aam
test
gs
orb
ficoml
or
imul
imul
scas
mov
pusha
xor
mov
mul
sti
testb
loopne
addr16
sbb
lret
xchg
push
lcall
fs
sbb
sahf
push
jmp
push
loopne
lcall
mov
inc
sub
in
dec
mov
jl
cmc
icebp
mov
cmp
jg
out
push
and
xor
movsl
pop
lods
and
xor
cld
jle
movsl
mov
sti
fidivrl
mov
les
data16
adc
aad
clc
xchg
jl
mov
and
xchg
pushl
push
cmpsb
outsl
pop
add
stos
decb
jp
xor
ret
mov
push
gs
mov
push
das
cmpsl
xchg
xor
mov
bound
shrb
ljmp
sbb
movsl
nop
fmuls
xor
and
outsl
or
sub
adc
pop
mov
push
cltd
xchg
xor
add
or
cmp
stc
jge,pt
call
lahf
cmc
mov
push
fildl
rclb
xchg
js
outsb
ret
ret
jg
sbb
sti
sub
gs
imul
popa
cmpsl
dec
mov
daa
loop
dec
inc
jno
popl
das
int3
lods
dec
mov
mov
push
cmp
mov
dec
out
pop
mov
repz
sub
les
test
cmc
mov
xchg
push
insl
lods
stos
mov
lcall
sub
addr16
mov
outsb
push
mov
sub
stc
test
cwtl
dec
adc
pushf
pop
dec
mov
cmpsb
push
mov
jmp
stos
dec
cmp
mov
fs
push
sbb
popa
pushf
adc
mov
imul
loope
and
xor
cltd
or
xlat
sbb
notb
push
adc
mov
fistps
sbb
call
dec
add
or
in
icebp
sub
lcall
out
pushf
mov
jbe
shll
adc
mov
dec
cld
iret
test
inc
sub
sub
add
and
xor
xchg
nop
gs
jns
xchg
cs
push
inc
out
popa
pop
enter
push
es
or
pop
insl
pop
jae
push
lods
inc
scas
fdecstp
shrl
mov
jne
xor
xor
push
pop
push
idivb
adc
lods
push
dec
sbb
mov
les
lods
sub
cmp
sahf
sbb
aas
push
adc
adc
lret
fwait
imul
sar
repnz
jmp
dec
cmp
outsb
adc
pop
jmp
jae
xor
sbb
cmp
mov
jne
cmp
lods
mov
outsl
mov
imul
pop
iret
imul
rclb
jmp
sub
jbe
test
popa
push
lods
cmpsl
incb
je
std
aaa
mov
sub
sub
mov
shll
cmp
out
ficompl
cmp
cmc
cmpsb
lret
push
outsb
jnp
enter
push
lcall
and
dec
add
lret
inc
adc
fadds
rcll
std
loope
aam
shll
or
hlt
pop
mov
fmulp
dec
add
iret
inc
aas
jbe
in
stos
sub
bound
sub
pushf
fisttpl
jl
fwait
das
hlt
insb
es
cld
fucomip
xor
inc
mov
loope
lahf
add
dec
divl
popf
fldenv
int
scas
dec
gs
fdivp
pop
adc
daa
stc
popa
push
mov
test
jge
icebp
jecxz
std
adc
cmpsb
ds
mov
xchg
frstor
sub
imul
test
outsb
add
pushf
pop
or
repz
xchg
pop
imul
mov
insl
int3
sub
or
mov
add
push
mov
lods
scas
stos
adc
into
ds
cmpl
into
add
js
fnsave
not
jae
jbe
pop
aad
frstor
cmpsb
xor
pusha
jns
ja
pushf
int
add
mov
push
push
jns
mov
push
mov
push
lcall
mov
jl
mov
lods
jg
cmp
adc
sarb
sub
stos
mov
inc
or
cmpsl
dec
mov
ret
cmpb
sar
stos
scas
xchg
pop
push
push
xor
add
mov
sahf
lret
xor
and
call
ss
dec
in
dec
jle
lods
mov
xor
dec
xor
xchg
data16
jg
push
sub
mov
pop
sbb
movsb
iret
xor
mov
and
inc
cs
ret
push
xchg
adc
aaa
rorb
jns
sub
push
jp
js
stos
sub
popf
mov
shl
dec
cmc
jle
or
sbb
push
xor
inc
adc
add
and
fnstcw
jnp
lea
enter
nop
test
loopne
das
aaa
sahf
inc
pop
loop
outsb
adc
mov
sarl
sub
stc
ljmp
pushf
and
sbb
ljmp
sbb
mov
push
mov
lcall
inc
xchg
jmp
movsb
mov
push
mov
sbb
dec
lds
adc
mov
lods
mov
cld
sbb
unpckhps
mov
rorb
repz
lcallw
inc
cmp
dec
aaa
data16
icebp
or
in
jo
fstpl
adc
mov
mov
rcll
repz
inc
dec
in
pushf
push
daa
mov
addr16
leave
sarl
and
cmp
mov
mov
das
push
mov
fstl
dec
cmp
cmp
and
jbe
xor
mov
push
stos
adc
loope
xchg
sub
push
shll
aam
and
rcrb
test
cmp
sub
mov
test
aad
sbb
jns
ljmp
mov
xor
test
fcomps
add
jg
xor
loope
push
add
mov
or
stos
enter
mov
pop
mov
pop
push
mov
clc
sbb
in
adc
ja
jno
shl
push
sbb
std
filds
mov
mov
cmpb
jo
es
pushf
test
jne
jo
cmp
sub
push
dec
xchg
inc
xchg
rcrb
lods
das
icebp
iret
push
sub
popf
sbb
mov
stc
test
mov
cmpsb
addr16
mov
adc
mov
cld
xor
push
pop
sub
into
pop
xchg
in
ss
mov
ja
sarl
dec
mov
test
jbe
jae
movsl
clc
push
mov
not
jne
loop
and
pop
cmp
loope
ret
test
mov
iret
xchg
push
xchg
sbb
adc
pop
inc
les
lret
orb
popa
adc
push
adcb
fmull
pop
hlt
dec
add
adc
jns
adc
cmp
mov
bsf
inc
jmp
pop
cmpsl
shrl
and
mov
and
mov
add
lods
or
sbb
and
jp
stos
popf
adc
push
pushf
not
push
push
ss
xor
insl
stos
aam
sbb
bound
lret
in
pop
iret
xor
cmp
clc
rorb
jle
jae
cmp
aas
lods
push
sbb
mov
lret
xchg
call
repnz
push
fs
mov
sbb
inc
stos
jae
and
mov
cmp
sbb
loop
mov
add
test
out
push
lcall
cmp
add
push
mov
inc
pop
lret
cmp
pop
cwtl
add
jecxz
adc
mov
insb
sarl
lcall
xchg
xchg
lret
and
pop
lret
adcl
or
sti
out
aam
out
and
insb
jnp
insl
mov
and
daa
and
add
pop
add
mov
pop
insl
int
mov
insb
pushf
adc
pushf
bound
push
jmp
cmp
inc
hlt
out
int3
inc
data16
outsb
or
in
or
xchg
xchg
in
mov
xchg
push
push
test
xor
pop
bound
sbb
xchg
pop
icebp
adc
repz
mov
push
jmp
jp
in
lcall
lods
testb
sub
lods
xorb
mov
fimuls
mov
xchg
test
arpl
out
nop
movsb
aam
lcall
mov
pop
xor
or
ret
adc
cmc
cmp
dec
xor
push
imul
xor
aaa
xchg
jge
iret
and
pop
dec
inc
bound
cmp
lods
adc
jp
push
int
xchg
sahf
ljmp
fnstcw
repz
in
subl
mov
jl
enter
and
push
in
lods
hlt
jne
xlat
adc
ja
sub
jbe
ja
fcoms
add
inc
shll
xchg
stos
jge
lds
push
pop
movsb
adc
addb
insl
mov
jle
sub
cmp
aad
or
gs
adc
icebp
pop
inc
leave
xlat
xchg
lret
xlat
sub
dec
and
rorl
fcoml
cwtl
and
insl
je
loop
mov
nop
mov
fs
cmpsb
pusha
insl
loopne
shlb
jecxz
mov
fisttpl
add
push
cmp
movsb
lahf
mov
data16
lret
popa
xchg
enter
in
pop
push
push
inc
xor
cmp
jge
fimull
dec
dec
dec
cltd
daa
add
pop
mov
jo
sbb
sbb
scas
sbb
add
mov
jo
rcll
add
mov
in
ss
out
es
xchg
lret
aad
xchg
sub
loopne
les
lret
xor
mov
inc
xchg
je
or
jno
jle
rorl
jb
fldenv
sbb
pop
scas
sub
sub
ret
xor
rorb
ficoms
lods
mov
add
lods
push
pop
cltd
outsb
ss
jne
leave
test
popa
fst
xlat
adc
push
cmpsb
jae
sub
push
mov
stos
mov
mov
enter
dec
fstpt
das
xchg
sub
ficoml
fbstp
mov
lods
lods
add
mov
inc
xchg
or
pop
cmc
jae
cmp
rorl
lock
push
aas
sbb
lcall
xor
mov
pop
xor
lods
pop
inc
pop
inc
push
mov
popa
rcl
and
cli
loop
adc
fdivrs
xor
push
rcrb
es
mov
aaa
cli
ja
scas
push
adc
test
mov
or
jl
iret
jmp
pop
jne
adc
mov
pop
inc
push
scas
iret
lcall
jne
lahf
jo
cld
pop
xchg
ds
stos
pusha
mov
jmp
xor
cmp
fnstcw
les
adc
mov
popf
cwtl
dec
add
inc
mov
dec
push
jne
iret
xchg
jno
mov
inc
sbb
mov
cmc
addr16
fwait
popa
mov
pop
inc
cmp
filds
sbbb
sbb
mulb
mov
scas
mov
sub
pop
call
mov
dec
xchg
lea
out
addr16
cwtl
xchg
fisubs
or
int
push
mov
mov
flds
inc
leave
xchg
mov
dec
pop
scas
popf
xor
test
add
cmp
test
mov
adc
mov
mov
pop
mov
mov
adc
into
mov
push
jle
dec
shll
pop
pop
push
push
and
push
arpl
jp
jb
popf
inc
mov
call
mov
in
in
test
xchg
mov
andb
incl
sub
pop
mov
jge
ss
xchg
in
rcrb
popf
and
xchg
lods
dec
stos
in
pop
fdivr
subl
loope
pop
loope
mov
in
mov
addb
mov
scas
insb
cmp
stos
cmp
sbb
adcb
in
dec
mov
push
pop
inc
ret
push
pushl
xor
pop
lcall
dec
mov
pop
sar
push
imulb
daa
jl
push
loopne
xor
orb
inc
xor
insl
ds
sar
push
cmpsb
mov
fnstcw
inc
mov
add
or
xor
mov
popa
add
mov
lret
sub
testl
out
enter
jmp
sbb
xchg
repz
insb
aas
dec
jp
or
sbb
or
test
mov
stos
jno
jmp
clc
repnz
inc
ja
dec
jne
sbb
loopne
cmp
sbb
jl
testb
leave
addr16
mov
cmpb
hlt
jno
cld
js
add
add
fsubrl
jg
mov
cmc
testb
inc
sub
jmp
and
arpl
in
pusha
fsin
cwtl
out
mov
cmpsb
mov
nop
out
and
cmp
xchg
dec
into
jp
xor
out
mov
sbb
inc
popa
pop
cwtl
add
mov
aad
out
mov
pop
mov
fcmovu
mov
cwtl
mov
push
ljmp
xchg
adc
rorl
es
pusha
out
mov
movq
add
mov
dec
test
sub
aas
shlb
inc
add
lock
sub
or
cwtl
divl
mov
jle
mov
fs
test
scas
mov
in
out
mov
mov
loopne
ja
les
popa
sbb
inc
outsl
inc
ds
xchg
dec
pop
xorl
loopne
sbb
stos
loopne
mov
cmp
push
lahf
jno
adc
shrl
push
pop
iret
fdivl
fs
xor
fs
movsl
inc
inc
mov
lods
or
jno
xor
pusha
cld
jp
test
inc
stos
daa
jne
insl
push
les
adc
outsb
cmpsl
aas
mov
lahf
mov
das
sbb
mul
sbb
inc
imul
movsb
xchg
mov
fdivrp
shl
sub
aad
push
adc
icebp
xchg
mov
sbb
sbb
ja
push
jno
jg
ret
ficomps
push
push
xchg
mov
adc
inc
mov
xor
inc
imul
jmp
push
sub
xchg
lods
xor
dec
or
sbb
hlt
hlt
push
es
dec
cmp
cltd
mov
rcrl
mov
and
into
pop
or
lret
insl
xchg
xorl
mov
int
cmp
sub
add
jb
lods
int3
cs
xchg
enter
inc
les
fcoms
mov
dec
mov
iret
cwtl
xchg
rorb
movb
dec
pop
push
xor
mov
add
sbbb
xchg
adc
jmp
imul
push
push
adc
inc
jnp
push
xchg
out
aad
ds
mov
adc
pushf
enter
idivb
push
das
and
lods
cmp
fwait
jle
sub
cmp
xchg
insl
and
mov
push
jecxz
sbb
bound
loop
nop
cmpsb
xchg
push
or
cmpsl
and
add
es
int3
into
pop
in
mov
hlt
and
mov
out
jmp
add
jmp
and
dec
push
push
sub
mov
out
fnsave
imul
jp
sub
cld
and
jmp
les
shl
push
pop
xchg
push
sahf
iret
out
mov
jp
fwait
mov
lret
daa
scas
xor
xchg
jns
sub
jne
and
sub
mov
or
imul
dec
int3
shll
shrb
cmpsb
popf
push
mov
outsl
cmp
pop
mov
std
push
sqrtps
pop
hlt
mov
mov
lret
cli
or
mov
pop
fwait
std
pusha
gs
aaa
movsl
xchg
or
dec
add
ljmp
cld
xor
les
enter
cmp
pop
xor
dec
test
push
cwtl
jmp
sub
jno
adc
scas
xchg
cli
sub
cld
push
mov
leave
dec
jnp
mov
add
push
cmpsl
fists
popl
rorl
and
xchg
inc
fs
repnz
fstpt
sub
shr
sub
cld
in
sbb
xorb
hlt
aas
bnd
stos
div
cmp
fdivr
cmp
dec
nop
mov
xchg
and
add
outsl
adc
or
insb
mov
jge
rcll
mov
jecxz
or
sbb
movq
or
xchg
sbb
xchg
int3
push
mov
testb
jp
adc
nop
xchg
insl
and
clc
cmp
pusha
punpckhdq
jnp
out
iret
in
cltd
cwtl
movsl
sbb
adc
push
lahf
in
popf
sahf
repnz
aam
adc
or
inc
lds
bound
aaa
jg
mov
mov
sub
mov
outsl
xor
mov
pop
test
je
or
mov
test
pop
pop
sub
mov
pop
dec
sub
movsb
xchg
jbe
and
movsl
cmc
adc
adc
lret
pusha
xchg
xlat
in
mov
daa
or
sahf
in
in
mov
popl
ss
les
xor
aas
aam
rorl
xchg
cmp
les
mov
mov
mov
xor
bound
aaa
mov
or
addr16
dec
cli
es
pop
cld
dec
out
jge
in
outsl
push
xor
pop
sbb
pop
sahf
icebp
aaa
in
imul
sbb
pop
jl
push
push
out
icebp
jecxz
and
xor
inc
in
mov
jbe
inc
imulb
inc
mov
inc
dec
and
sub
inc
imul
test
jno
jmp
out
inc
dec
push
gs
in
adc
iret
cmp
scas
and
jle
out
movsbl
jbe
das
lock
jl
push
sub
and
je
inc
cs
jo
inc
notb
push
push
jl
test
gs
roll
imul
into
sbbl
cmp
fidivs
dec
adc
inc
mov
test
xor
cmp
xchg
mov
in
divl
aaa
mov
jo
pop
mov
jns
mov
push
out
ss
nop
xchg
adc
jno
add
sub
cmp
dec
vhsubps
loop
sarb
sub
pusha
xchg
cmpsl
mov
sahf
pop
adc
test
adc
push
inc
pop
mov
jecxz
sub
xor
sarl
mov
xor
xchg
jecxz
dec
mov
mov
out
mov
lock
std
neg
outsb
mov
call
sbb
sbb
sub
int3
test
lods
push
pop
icebp
rcrb
dec
fildl
and
hlt
dec
outsb
test
lea
es
faddp
or
xchg
popf
into
jno
sub
inc
mov
cwtl
sbb
stc
mov
cmp
ds
nop
xchg
in
push
mov
shl
mov
add
movsl
call
xchg
aaa
cmp
jo
lods
xchg
pushf
jle
ljmp
pop
loop
mov
ret
push
xor
dec
or
mov
sbb
lret
jle
icebp
fstps
out
cmpsl
push
sub
outsb
mov
jo
mov
dec
push
xchg
xchg
sub
lret
ret
push
subb
adc
insb
js
xor
mov
or
gs
insb
imul
pop
mov
pop
add
shl
popa
cwtl
cwtl
mov
pop
lret
call
jne
out
aaa
fsubs
ss
jns
pop
aam
loopne
push
inc
push
xor
into
sbb
pushf
std
iret
xorl
out
cmp
ds
mov
lds
test
fidivrs
ja
push
call
cmp
push
cltd
jns
push
imul
fsubrl
aad
aaa
je
push
adc
vmread
push
xor
fdiv
adc
pop
movsb
call
cmp
push
pushf
aad
test
cltd
std
stc
mov
mov
add
sbb
insl
dec
mov
pop
or
cmp
pop
jmp
cs
outsb
popf
or
or
push
in
mov
cmpsb
stos
or
lods
faddl
stos
in
sub
mov
mov
loopne
aaa
lea
lea
cmpsl
push
mov
cmp
clc
mov
pop
iret
ds
mov
mov
cmp
aas
cmp
imul
dec
cmp
scas
jne
cmp
jmp
and
mov
cs
mov
das
movsb
cs
pop
pop
xor
sub
pop
ja,pn
shl
js
rcrb
stos
repnz
outsl
push
in
jbe
bound
mov
xorb
dec
inc
add
rcrl
sbb
pop
out
out
add
mov
push
jmp
dec
jle
push
adc
pusha
cmp
or
pop
mov
xchg
cli
hlt
cmpsl
push
scas
add
in
aaa
iret
cmp
das
mov
cmp
sub
addr16
clc
jne
fchs
dec
jno
test
cs
push
ficoml
pop
pop
mov
sbb
pusha
xor
adc
xor
pop
popa
push
fldl
cld
ds
outsl
dec
fildll
sbb
pusha
lods
pop
pushf
jnp
or
dec
lods
sub
jecxz
pop
adcl
sahf
pop
mov
add
out
sbb
adc
bound
push
fcoms
addr16
pushf
pop
xorb
xchg
xor
mov
cld
subl
ss
lcall
icebp
cmp
jp
push
mov
push
jmp
pop
dec
and
pop
mov
add
jno
adc
mov
jp
scas
dec
mov
cs
adc
jge
sub
and
call
add
sub
addb
ficoml
mov
dec
push
jnp
inc
adc
and
add
aam
test
movd
add
in
lret
sub
sub
mov
jno
inc
push
out
fimuls
ret
jmp
add
cmc
xchg
dec
shl
fistl
pop
inc
shlb
jo
adc
inc
fcomp
mov
lcall
repz
mov
cmp
loop
xor
inc
fistps
repz
movsb
mov
aas
push
pop
lret
add
fldt
pop
cmp
lods
testb
jp
mov
das
pop
jmp
je
js
enter
inc
mov
pusha
add
or
mov
jge
out
inc
inc
data16
cltd
lret
and
outsl
jg
fstps
lea
mov
mov
pop
pop
xchg
aad
and
mov
add
je
ljmp
aad
loope
loope
mov
adc
fwait
cmp
sbb
sub
dec
testl
and
push
int
lret
push
clc
jb
or
mov
jno
pop
mov
test
mov
dec
adc
mov
dec
adc
shll
add
push
iret
out
push
jnp
clc
gs
xor
lock
pop
jae
push
lcall
in
cmp
clc
cmp
mov
xchg
shrb
test
cwtl
scas
inc
xor
in
cmp
adc
repnz
mov
jle
test
mov
cmp
xor
jge
jg
aas
insl
jno
icebp
stc
pop
mull
cmp
jge
faddp
jnp
mov
insl
pop
loop
mov
pop
pop
add
mov
cmp
std
sub
ljmp
loopne
push
pop
cli
adc
add
ljmp
pop
and
leave
in
daa
cmp
sub
fmuls
test
dec
jle
dec
enter
pop
jmp
fistl
cmp
lahf
jmp
push
data16
jecxz
add
out
mov
cmp
mov
aaa
fisttpl
in
repnz
popf
xor
jge
and
add
iret
mov
fs
inc
xchg
lods
fs
enter
pop
fstpl
xor
mov
mov
scas
dec
int3
push
and
add
shr
sbb
adc
out
std
pop
je
and
popa
ret
nop
sbb
cmpsb
aam
es
mov
adc
xchg
sub
pop
add
fcomi
jb
sti
jmp
xorb
adc
loopne
push
cmp
inc
jno
push
insl
mov
test
es
xchg
fwait
mov
pushf
xchg
jno
int
or
and
xor
cltd
testb
pop
loop
cmpsb
imul
inc
xor
mov
ss
pop
lods
or
mov
fisttps
out
adc
outsl
cmpsb
dec
sahf
fadd
inc
xchg
jmp
adc
mov
out
inc
int
and
mov
dec
dec
xchg
mov
test
pop
push
mov
ret
pop
or
je
lahf
leave
or
rolb
ret
pop
cwtl
jp,pn
jno
mov
mov
fwait
inc
sbb
in
push
jno
in
test
scas
jae
xor
pop
add
or
push
in
sbb
adc
pop
jmp
sub
call
pop
out
aaa
xchg
call
mov
stos
mov
and
dec
mov
je
or
jnp
cmp
push
dec
mov
iret
scas
rorb
xor
cmp
in
sub
imul
jle
fmull
mov
adc
dec
aaa
pop
andb
dec
decb
cmpsl
mov
aad
adc
dec
addr16
fucomp
or
sahf
or
or
mov
popa
mov
daa
fwait
insb
aam
xchg
sub
lds
das
mov
mov
call
insl
arpl
pop
mov
sbb
cli
out
fstpt
ljmp
cmp
xor
jmp
loop
lds
cmp
cli
fnstsw
add
cmp
daa
push
shrl
mov
push
and
les
arpl
jmp
adc
push
cmpb
xchg
mov
cmp
jb
fs
test
ljmp
ret
bound
pop
push
xor
xor
out
sbb
add
in
sarl
les
sbb
in
mov
popf
adc
and
mov
pop
enter
aad
repnz
shrb
lcall
lahf
mov
test
sub
shl
inc
mov
cmpsb
push
icebp
lret
lcall
lods
data16
ja
aad
sbb
or
push
pop
shl
roll
nop
cmp
adc
hlt
mov
mov
sub
addl
xor
lods
sbb
pop
mov
es
jle
and
xchg
repnz
sbb
bound
or
frstor
jbe
and
jle
cwtl
push
xchg
testl
in
pop
or
aaa
das
bound
push
adc
xor
dec
jg
std
sbb
xchg
sub
aas
sahf
je
xor
mov
jae
int
inc
xchg
dec
stos
std
and
xchg
jne
xchg
sbb
add
inc
mov
add
pop
xchg
and
inc
dec
xchg
sbb
xchg
arpl
mov
rclb
sub
ds
cmp
push
sub
sub
mov
jp
xor
mov
pop
test
std
in
inc
cmp
jne
or
xor
pop
cmp
int3
xchg
dec
mov
scas
mov
out
sbb
push
mov
xor
pop
cmpl
add
ffreep
cli
dec
pop
inc
out
mov
shrl
ret
ds
aad
subl
sbb
cmp
mov
push
xchg
subb
and
xor
repnz
push
data16
jb
test
sbb
mov
push
cmpsb
or
cltd
in
cmc
aad
pop
jbe
leave
inc
gs
mov
push
sub
sbb
lods
push
or
dec
mov
repnz
inc
mov
fcomp
movsl
push
iret
sub
outsl
shrl
mov
call
lock
sbb
jno
pusha
cmp
or
rdpmc
adc
mov
adc
or
ja
mov
xchg
dec
cmp
aaa
test
imul
leave
push
push
lea
pusha
lret
adc
dec
mov
mov
shlb
insb
sbb
cwtl
mov
dec
mov
mov
push
push
decb
sbb
mov
dec
divl
add
xor
cli
add
pop
adc
sbb
loope
hlt
ds
jb
push
add
rcrb
aaa
dec
loop
cmp
sub
pop
popf
in
cmpsl
dec
mov
iret
push
ja
rorb
jmp
fdivrs
jo,pt
std
sub
push
sti
xor
std
bound
push
push
cmp
mov
fidivl
icebp
pushf
and
in
popl
pop
xchg
stc
xchg
sub
jle
pop
push
loope
inc
inc
lcall
fbld
sub
dec
ja
xor
and
push
and
mov
rolb
add
and
xor
in
xchg
pop
push
push
lahf
in
or
xorl
call
bound
cmpsl
icebp
imul
subl
sbb
push
nop
cmpb
xchg
pop
scas
addr16
push
or
into
test
pop
xchg
and
xor
xchg
rol
lds
jno
cmp
push
xlat
scas
cmp
int3
dec
jae
mov
or
mov
xchg
mov
pop
popf
daa
testb
pop
in
shll
push
and
add
outsb
xchg
cmpsb
fs
xchg
inc
cmp
adc
test
jmp
push
out
nop
test
clc
dec
mov
icebp
movsb
dec
jne
mov
ror
ficompl
and
fisttpl
addr16
cld
rcrl
js
pushf
fsub
enter
fadds
jo
pop
jp
mov
adc
in
or
movsl
sub
pushf
xor
push
popl
pop
add
add
add
xor
xchg
mov
pop
cmp
jne
pop
push
push
sbb
subl
jmp
aas
push
jle
js
aaa
fcompl
sub
mov
or
push
dec
push
jae
ljmp
lcall
xor
or
adc
imul
xor
xor
mov
push
setae
ja
mov
iret
mov
in
push
js
mov
or
cmpsl
jle
mov
sub
fsubr
jns
data16
mov
outsb
mov
xlat
xor
int
mov
cwtl
jbe
jge
adc
imul
ret
sbb
adc
pusha
scas
movhlps
or
fdivs
push
or
add
xchg
or
ljmp
mov
cmpsl
adc
dec
popf
je
jno
cli
mov
ljmp
loop
negl
xlat
sbb
dec
or
mov
scas
int3
fstl
mov
dec
inc
inc
and
leave
cmp
shll
adc
mov
lea
daa
push
test
mov
and
sbb
gs
outsb
mov
pop
je
les
xchg
into
or
cmp
test
call
mov
push
lds
pop
mov
mov
ret
jae
mov
test
push
xor
flds
cwtl
pop
fistpl
cs
addr16
fcomip
in
jge
jg
popf
test
push
xchg
and
and
int
push
jne
inc
mov
mov
movsb
cmp
or
jge
mov
rcrb
insb
mov
data16
test
cmp
sarb
nop
sbb
filds
outsb
in
aam
ret
mov
mov
sbb
jne
jmp
or
leave
cmp
add
cmp
movsl
andl
dec
les
jns
add
adc
fcomip
nop
mov
ja
cltd
jg
inc
insl
adc
imul
fxch
std
pop
out
ss
cmp
xchg
lret
fs
mov
cmp
les
lods
cmc
scas
sub
mov
and
and
and
sub
sub
in
dec
mov
push
cmp
sarl
repnz
mov
cmp
mov
cld
pop
shlb
lock
lret
lock
dec
push
and
movsb
jne
sub
outsl
pop
adc
mov
xlat
sbb
or
ret
push
imul
test
inc
mov
pop
sub
add
aad
cs
daa
add
lock
sub
scas
popa
mov
mov
dec
adc
xchg
mov
push
xchg
xor
or
inc
and
mov
je
dec
adc
xchg
test
test
inc
loope
mov
insb
aam
or
xchg
or
adc
jbe
add
dec
push
mov
xchg
dec
pop
or
imul
mov
jns
imul
dec
addr16
add
jl
jge
xchg
rorl
lret
fnsave
pop
pushf
push
jns
outsl
sbb
mov
jp
xlat
pop
xor
jbe
pop
lea
xor
call
outsb
cmpsl
xor
sub
in
mov
pop
sbb
mov
idiv
jg
cmp
jne
inc
sbb
cmp
sbb
mov
imul
clc
pop
sahf
outsl
bound
xchg
pusha
sbb
stos
and
jp
mov
xchg
loop
addr16
inc
ror
adc
dec
adc
push
xchg
mov
jne
sbb
ss
sub
sbb
dec
out
add
pop
jne
cmpsb
insb
dec
push
jl
cmp
sbb
mov
into
sbb
pop
mov
scas
mov
cli
push
xchg
inc
arpl
in
sbb
dec
lret
dec
inc
in
test
cld
js
fs
jo
outsl
inc
sub
ret
jb
js
ret
test
ficomps
rorb
frstor
inc
enter
sub
scas
sbb
in
rcl
inc
push
jp
inc
test
pcmpeqb
cmp
and
stc
sub
rcll
shl
test
adc
inc
cmp
fcmovbe
mov
out
mov
jmp
out
es
pop
xor
jae
pop
std
les
or
cld
inc
xchg
lods
popa
push
xchg
clc
dec
nop
or
jl
insl
xor
loopne
lock
cmpb
push
sbb
mov
mov
stos
inc
rcll
sti
jns
pop
out
popa
push
jne
ljmp
mov
pop
bound
add
int
and
stos
push
xor
cmc
add
fistl
xor
adc
cmc
insl
lods
pop
mov
sbb
repnz
xor
mov
jne
cmp
sbb
icebp
insb
mov
fdivr
xor
mov
aaa
insb
cmp
cwtl
jne
jae
jns
inc
mov
add
xlat
les
repnz
mov
in
mov
int3
sbb
dec
push
scas
mov
sbb
in
push
mov
xlat
out
mov
andb
pop
arpl
jns
and
push
loopne
mov
aad
mov
scas
jp
cmp
fisttpl
aas
jp
outsl
ret
rep
lods
sub
movsl
call
jle
add
rcl
inc
fcoml
pop
pop
sub
add
pop
jp
mov
add
imul
push
pop
dec
arpl
add
xor
scas
stc
jmp
add
mov
cld
pop
rclb
adc
mov
sbb
dec
add
lock
fadds
pop
or
cmp
pop
xor
leave
xlat
pusha
test
jb
lock
ret
fmuls
pop
push
jbe
cli
aaa
mov
gs
mov
sbb
retw
mov
push
addr16
aas
pop
xchg
push
bound
mulb
xor
jmp
add
lcall
aaa
cmp
imul
cmc
jne
popa
shl
loop
cli
cmp
mov
or
int3
enter
push
sub
push
and
out
jecxz
icebp
cmp
std
dec
and
push
sub
dec
cmp
jl
jge
pop
xchg
or
pop
xor
mov
in
jl
or
xchg
int3
int
lods
or
xchg
cltd
mov
and
mov
test
out
outsb
cmpsl
adc
and
hlt
jb
and
insb
adc
rcrb
fildll
ja
or
ss
sub
pop
pop
cmp
shll
movsb
ret
ss
push
aam
jne
testl
bound
lahf
je
shlb
mov
or
mov
cmp
inc
sbb
lods
dec
aad
xchg
sbb
and
add
fcmove
dec
xlat
mov
fucomi
orl
sbb
cld
jecxz
out
push
mov
arpl
add
add
in
mov
push
test
aad
jmp
mov
inc
in
cmp
lock
adc
xor
pop
leave
int
add
mov
sub
pop
adc
je
gs
popf
ljmp
aas
testl
std
xor
clc
dec
arpl
and
divl
sub
cmp
rcrl
sub
cltd
adc
ja
mov
insb
jo
popf
pop
out
sbb
out
pop
sbb
add
test
stos
xchg
push
push
cltd
imulb
push
mov
xlat
mov
jg
xor
mov
mov
cmp
dec
ja
inc
mov
sahf
push
addr16
add
and
loopne
ja
xor
mov
mov
popa
ljmp
or
mov
arpl
dec
and
mov
inc
int
sbb
cmp
pop
shl
xchg
aad
ja
psrlw
adc
xor
rorb
or
lds
adc
ficompl
hlt
pop
ja
and
out
mov
mov
add
pushl
fsubrs
sbb
stc
mov
xchg
mov
dec
push
mov
pop
lret
jno
aaa
xor
mov
sub
dec
pop
pop
push
loop
daa
cmp
mov
cmp
insl
imul
adcb
push
and
scas
adc
insl
loope
mov
insb
test
test
dec
fnstcw
and
in
mov
mov
or
xchg
and
inc
jecxz
mov
scas
rcrb
sub
sub
into
ret
sub
fstps
dec
imul
inc
stos
stos
inc
push
scas
mov
cmpl
outsl
add
jbe
sub
mov
sub
jns
pop
sub
push
hlt
adc
jle
sub
push
shrb
sarb
int
inc
lock
lret
and
nop
jae
xchg
inc
dec
repz
jbe
aam
hlt
in
ret
xchg
rcll
add
popa
add
push
call
sahf
lret
iret
xor
enter
test
aas
ss
ljmp
dec
push
gs
xor
xor
lea
rorl
in
or
mov
ror
sbb
mov
cld
in
pop
xchg
adc
movsb
loop
pop
ss
aam
out
decl
sub
cmpsb
dec
orl
sbb
sub
rcrb
sub
cmp
insb
in
cmp
test
jmp
mov
xchg
add
dec
popa
out
pop
inc
dec
inc
pop
imul
sub
jge
dec
std
repz
push
or
add
pop
mov
inc
scas
pop
add
loopne
cltd
dec
insl
pop
lret
out
mov
mov
mov
icebp
lea
jns
mov
cmp
adc
jge
add
push
fisubs
sub
mov
dec
mov
es
dec
rorb
addr16
fimull
stos
loopne
pusha
pop
sub
xor
incl
adc
dec
inc
add
and
scas
and
ljmp
enter
dec
pushf
push
mov
and
or
pop
test
js
cmp
jecxz
mov
cltd
mov
mov
mov
fcoms
mov
or
jb
push
push
and
adcl
lret
insb
or
sub
jnp
aam
inc
push
fstpl
jns
daa
mov
xchg
and
dec
js
in
je
mov
xor
std
gs
ljmp
les
jb
mov
cmp
ja
sub
pop
imul
inc
test
push
cwtl
cmp
add
mov
sahf
sti
pop
repnz
in
xlat
sarl
stos
cld
inc
out
les
clc
mov
and
jecxz
sbb
xor
sub
mov
or
cmpsl
mov
aas
sub
repnz
pop
push
mov
jne
nop
popa
dec
mov
bound
mov
push
icebp
mov
xor
sub
dec
rol
iret
mov
adc
popa
pop
dec
push
jmp
lock
jmp
pop
in
shrb
out
movsl
in
mov
addr16
inc
popf
inc
push
fcmovnb
fbstp
jbe
pop
fnstsw
jns
stc
mov
jae
aam
lds
hlt
js
mov
xlat
cli
sub
cmpsl
pop
inc
cmp
sub
and
mov
clc
xor
dec
std
and
sub
insb
popa
cmc
std
inc
pop
cs
test
mov
xchg
ficoms
fiaddl
inc
jp
loop
xchg
loopne
inc
test
test
in
faddp
call
std
xchg
les
stc
xchg
data16
dec
xor
daa
xor
dec
int
mov
inc
or
rorl
pushf
int3
ret
cmc
adc
pop
jp
in
push
out
mov
jo
xchg
ret
sub
dec
dec
xor
adc
loopne
mov
out
in
mov
sbb
ss
dec
inc
jns
sub
push
mov
mov
cmp
mov
sub
rsm
dec
inc
dec
mov
pop
add
push
pop
and
jl
add
or
mov
xor
aad
xchg
sbb
popf
movsl
and
out
ret
stc
fprem
decb
cmp
lea
stc
daa
jecxz
cmp
mov
cmpsb
or
cmp
imul
inc
les
daa
jp
jp
dec
mov
or
out
movsl
cmp
pop
xor
sarb
ror
cs
mov
xor
test
mov
jp
xchg
test
mov
and
pop
xchg
cmp
lret
fwait
cmpsb
outsb
cwtl
pop
mov
pushf
push
das
jns
cmpsl
pusha
ljmp
sbb
aas
sti
test
out
mov
sub
pop
mov
movsb
mov
sbb
mov
xlat
ja
add
popf
pop
add
imul
xor
sbb
cs
jg
int3
test
push
fwait
insl
jp
inc
push
lret
gs
cvtpi2ps
leave
xchg
ljmp
xchg
js
into
loope
mull
add
xlat
pop
sbb
rcl
xorb
mov
rcll
fcmovnbe
out
repz
pop
jecxz
repnz
mov
jno
xchg
enter
ds
xor
movsb
add
adc
loope
jl
fadd
or
cmc
roll
dec
and
pusha
xor
or
idivl
or
inc
mov
flds
ss
cltd
push
and
adc
jl
jg
mov
mov
shl
sub
jp
mov
js
dec
mov
out
inc
insb
push
mov
test
add
or
and
or
xchg
test
mov
inc
mov
adc
out
mov
sub
pop
ja
cmp
sub
or
mov
sub
pop
cmp
pop
rorb
lahf
jnp
notb
out
bound
jl
xor
bound
clc
cmp
das
bound
adc
xor
addr16
pop
fsubrs
test
mov
inc
loope
scas
jb
jne
mov
xor
out
test
das
inc
lcall
mov
inc
mov
dec
daa
stc
pop
rcll
xor
and
in
dec
mov
or
mov
subb
pop
mov
lds
lret
pusha
mov
aad
test
cli
adc
aam
sbb
xor
nop
mulb
lods
aaa
testl
out
popa
fs
enter
aaa
mov
mov
arpl
popf
fistpl
adc
cmpsb
pop
mov
pop
mov
scas
or
aam
add
jo
cs
push
mov
adc
fdivr
inc
sbb
int3
movsl
dec
daa
ffreep
push
sbb
push
adc
nop
push
pop
push
movsw
insl
add
lret
fsubrl
and
jb
push
mov
incl
cmp
mov
pop
dec
outsb
dec
inc
push
adc
push
mov
xor
stos
fnop
or
or
das
repnz
and
dec
cmpsl
iret
ret
leave
lret
adc
fistps
push
gs
xor
mov
and
data16
aas
loop
mov
lcall
mov
mov
sha1msg1
iret
mov
adc
pop
or
lds
mov
sub
inc
mov
xor
fnstenv
test
cmp
inc
out
test
iret
aam
mov
les
repnz
enter
push
push
mov
aas
jl
lods
pushf
mov
test
jge
jno
cli
icebp
mov
mov
lods
scas
sbbb
jecxz
xchg
jo
xchg
out
idivl
adc
inc
cmovg
fdivl
cmp
aaa
imul
push
xchg
pop
les
and
in
lret
sbb
push
adc
inc
xchg
jecxz
push
scas
clc
int3
gs
movsb
fbstp
sarb
icebp
or
mov
hlt
sub
pushf
icebp
jne
push
testl
es
jle,pn
loope
xchg
imulb
ret
inc
sub
adc
sbb
push
ret
push
sbb
ljmp
ret
or
jecxz
jns
dec
rorl
call
inc
add
stos
sub
adc
iret
jecxz
adc
dec
inc
sti
dec
inc
push
jae
sub
jb
xor
test
cmpsb
mov
fdivs
jae
xor
popf
push
pop
hlt
cltd
lods
fisubrl
or
mov
ret
std
xchg
mov
pop
sti
or
cld
jns
jne
stos
pop
pop
xchg
sub
pop
nop
pop
sub
push
ss
les
rcrb
lcall
pop
jl
out
and
inc
icebp
sbb
vpaddw
mov
xchg
sbb
in
mov
mov
and
ljmp
add
mov
jge
sti
push
sub
jns
cmpsb
inc
fst
loop
lods
dec
mov
inc
ja
rep
and
cmpsb
fistl
and
loopne
mov
xchg
roll
mov
ja
jnp
sahf
dec
divl
cwtl
pop
fstl
rclb
or
adc
mov
outsl
mov
call
sbb
and
or
dec
mov
ret
sbb
popa
repnz
mov
lods
pusha
sub
nop
sbb
fmull
out
rcpps
ljmp
jbe
sbb
icebp
test
hlt
jl
xor
es
movsl
jne
cmpsb
rcr
fists
fldenv
popf
inc
clc
pushf
sub
dec
enter
addr16
pushw
in
sbb
add
jb
jae
fnsave
or
hlt
aaa
mov
xchg
jb
or
enter
pop
cmp
jnp
cs
mov
mov
cmp
inc
jmp
cld
test
pop
jnp
aad
dec
dec
pop
std
fimull
stc
adc
sbb
lret
movsl
cmp
out
cli
cmp
lock
imul
sbb
mov
cmpsb
xor
add
xchg
or
and
sahf
arpl
lret
mov
mov
xor
sbb
cmpsl
in
out
or
mov
jp
pop
xchg
add
inc
fmuls
inc
ret
inc
pop
andb
adc
xor
push
cmp
movsb
daa
mov
repz
in
frstor
mov
aad
pop
aad
jmp
cmp
add
mov
fnstcw
cld
fs
sub
xchg
mov
out
stos
add
inc
sbb
jbe
out
imul
aas
pop
inc
ret
clc
mov
jle
and
xor
mov
jmp
outsb
push
das
mov
cmpsb
push
mov
fsubrs
dec
xorb
mov
push
jno
mov
test
test
lret
shl
inc
xchg
jmp
jg
lcall
jl
cltd
and
sub
das
adc
jne
xor
stc
jns
pusha
or
or
popf
shl
mov
aaa
dec
sbb
sub
pop
dec
ret
lods
dec
pop
sub
ret
sub
mov
test
mov
xchg
ds
into
and
cmp
sub
add
push
aad
stc
mov
aad
imul
inc
mov
adc
ret
inc
jb
enter
lahf
push
scas
push
sub
imul
mov
test
gs
adc
push
dec
jge
add
ret
lea
stos
mov
pop
inc
cmp
stos
mov
push
movsb
push
daa
mov
fwait
xor
nop
test
push
or
outsb
cs
fnclex
mov
push
xchg
fs
dec
pop
mov
push
or
jnp
add
pop
push
lret
xor
stos
pop
stos
push
ja
cltd
std
fwait
pushf
push
mov
aad
sbb
sub
mulb
test
add
cwtl
aam
mov
in
cld
mov
cmp
sbb
loopne
inc
adc
repnz
push
ja
cmp
sbb
addl
push
xor
pusha
adc
call
push
pop
push
cmpsl
xchg
in
out
inc
fldl
push
stos
test
lcall
jnp
or
in
jbe
mov
or
sbb
imul
mov
pop
jne
and
scas
fwait
xor
add
jbe
jbe
cmp
lret
inc
leave
push
mov
and
ljmp
xor
jl
repz
imul
js
xchg
aad
es
ljmp
js
sbb
mov
test
js
ja
call
lcall
cmc
mov
adc
mov
les
in
sbb
out
push
loope
cmp
add
mov
ja
cwtl
icebp
mov
xlat
stos
mov
adc
dec
ss
and
addb
pusha
xor
arpl
loopne
out
mov
je
xor
xor
dec
adc
xchg
adc
add
lea
addr16
int3
scas
fistps
enter
lcall
cmp
add
lea
enter
les
ds
fiadds
repz
rclb
dec
or
enter
dec
call
test
repnz
sub
xchg
adc
movsb
cmpsb
adc
inc
js
data16
frstor
or
cmp
mov
loop
jge
int
in
rcl
pop
add
imul
out
fs
test
or
jbe
jmp
or
outsl
popf
movsb
xor
inc
dec
xchg
dec
orb
ljmp
jg
and
sub
fs
ds
add
test
movsb
out
stos
call
jmp
push
push
push
cmpsl
cltd
sbb
fstl
pop
fsubrs
loopne
push
je
popf
movsb
fidivrl
das
leave
mov
mov
mov
dec
mov
clc
popa
mov
inc
test
ss
mov
jb
pop
ffreep
aad
or
adc
or
sub
sbb
in
ljmp
mov
inc
dec
mov
in
inc
add
das
cs
cmp
fisubl
cmp
loopne
jg
call
adc
sbb
xor
push
rol
ja
mov
dec
adc
nop
fnstcw
scas
mov
push
pop
inc
sti
cmpsl
loopne
or
jns
or
xchg
xor
cmp
push
xchg
mov
int
xor
sub
mov
pushf
loope
jb
mov
mov
and
fs
and
les
ljmp
jg
out
outsl
vmread
out
pop
sub
cwtl
scas
out
movsb
sbb
aas
sbb
jecxz
pushf
inc
push
add
aad
pusha
sub
jmp
out
add
lods
push
in
arpl
test
insl
xchg
movsb
mov
or
cmpb
pop
test
push
leave
mov
mov
push
sbb
shr
gs
or
scas
movsb
adc
mov
dec
push
and
js
xor
mov
cmp
pop
inc
push
sbb
loop
mov
pop
xlat
es
or
and
loop
add
push
pop
jle
or
mov
mov
gs
scas
fwait
loope
std
repz
sub
cltd
in
jl
lds
mov
push
aam
inc
xchg
mov
xor
hlt
jbe
mov
xchg
insb
cli
repz
loope
popf
cmc
aaa
jne
or
inc
scas
adc
adc
sar
std
cmp
pop
mov
data16
add
mov
mov
and
xchg
loopne
adcl
leave
add
xchg
sbb
addr16
push
adc
imul
xor
inc
in
int3
jge
fwait
push
repz
into
rclb
imul
jge
daa
pop
insb
jp
cli
lcall
pop
clc
in
xor
xchg
push
adc
fisubrl
test
arpl
fld
sub
mov
push
dec
jno
testb
mov
stc
out
mov
pop
sbb
jecxz
mov
and
daa
adc
mov
push
xchg
lcall
cmpsl
mov
push
and
lods
jge
pop
push
and
push
ret
xor
das
imull
leave
jo
xlat
xlat
add
dec
ficomps
xchg
cmp
lds
adc
or
lahf
cmp
sub
lret
inc
cltd
call
fimuls
jg
pop
jne
cmc
push
pop
repnz
cli
cmpsl
sbb
lcall
das
leave
adc
mov
ret
prefetch
adc
xlat
rcrl
xorb
or
cltd
popf
push
frstor
lock
xchg
jmp
mov
mov
out
ds
mov
push
pop
dec
pop
xchg
in
jle
icebp
jecxz
aad
cmc
adc
dec
jns
pop
mov
mov
push
stc
mov
sbb
out
jbe,pn
js
xchg
push
mov
int
pop
pop
fstpl
cld
frstor
lock
ljmp
sub
inc
pop
imul
popa
mov
push
add
pop
aad
push
mov
cmp
and
xor
in
mov
push
xor
dec
xchg
pop
cmp
je
add
push
xchg
adc
icebp
ljmp
scas
seta
stos
sbb
push
int
adc
leave
testl
sbb
mov
or
stos
faddl
cmp
push
jne,pt
cmovbe
shrl
xor
xchg
sti
sbb
mov
repz
inc
mov
push
cmp
aam
cltd
mov
out
dec
arpl
outsl
loopne
std
xchg
pop
jbe
cmp
popf
aaa
or
xorl
pop
add
mov
sarb
fstpl
insb
mov
sahf
pop
sbb
jmp
fmull
repz
pop
mov
in
mov
push
arpl
sbb
push
scas
ret
dec
dec
xor
or
mov
dec
mov
fisttpl
test
mov
dec
sub
dec
jb
sub
jmp
test
adc
mov
dec
inc
shlb
pop
sbb
dec
and
cmp
pop
pop
loope
sbb
out
xchg
xor
or
cltd
movsl
fldcw
sahf
pop
lods
pop
insb
mov
adc
xlat
sub
jle
fsub
jo
xchg
xor
adc
loop
stc
push
mov
dec
insl
aam
jns
xor
fdivl
lret
xchg
loopne
das
fcomps
lods
lret
add
test
aad
jae
add
fistpl
ror
xchg
repz
enter
jp
dec
xlat
mov
ss
and
int
lret
push
addb
clc
fsubr
sbb
cli
jno
fmull
push
test
popa
loopne
or
daa
sti
daa
enter
out
dec
dec
add
mov
cmp
push
pop
ljmp
jge
cld
dec
pop
dec
cmp
and
test
mov
shl
pop
push
test
lods
addb
adc
fsts
imul
pop
les
dec
sbb
mov
xor
xchg
cmpsl
xor
in
scas
into
mov
pop
xchg
sbb
cmp
scas
sbb
and
les
es
fildl
lds
pop
push
repz
sub
jecxz
add
lcall
push
xchg
mov
loop
popa
push
jmp
push
sbb
out
cmp
fimuls
sub
add
in
add
stc
xlat
bt
js
dec
and
sbb
push
mov
outsb
push
filds
mov
pop
xor
mov
test
cmc
lods
cmp
fs
imul
sti
loope
mov
outsl
cmp
jns
adc
das
mov
mov
sti
cs
pop
je
jb
lret
shll
bts
out
add
daa
inc
push
mov
or
dec
jmp
stc
mov
insb
sub
push
inc
fadd
testl
sbb
adcl
fimuls
iret
popa
or
push
dec
cs
push
lret
das
je
inc
iret
or
addl
arpl
test
jns
jns
lret
fldl
ficoms
or
mov
loop
gs
jl
xchg
popf
dec
dec
ljmp
cmc
lahf
rcll
test
scas
into
icebp
imul
repz
sti
ljmp
sbb
ds
push
sub
fldl
jae
ljmp
lea
push
jns
or
aas
push
test
daa
fldenv
add
sbb
mov
ja
rolb
movsb
sbb
ret
aas
iret
jns
in
push
sub
stos
out
jg
jns
inc
dec
lea
push
dec
std
cmp
ds
fidivrl
xor
mov
or
dec
stc
and
test
insl
mov
mov
pushf
add
ret
fwait
push
xchg
jb
inc
lcall
scas
sahf
dec
cmp
ret
sbb
xchg
cmp
sub
repnz
sbb
add
clc
data16
xor
add
outsl
and
andb
add
or
fs
loop
push
sarl
xor
daa
imul
dec
orl
mov
sbb
dec
adc
test
sbb
mov
movsl
cmp
fwait
rcrl
xchg
cmp
pop
cmpsb
arpl
mov
aaa
push
inc
fistps
jmp
hlt
or
jg
xlat
lods
lea
jb
out
push
push
les
std
pop
push
ret
mov
sbb
inc
lret
lcall
mov
loope
inc
xor
cltd
loop
shll
fdivrs
jmp
movsl
test
mov
push
lock
mov
into
les
in
scas
sub
loop
push
mov
mov
in
push
add
pusha
jecxz
and
lcall
arpl
shlb
mov
jl
aad
in
push
pop
xorb
mov
xor
pop
gs
mov
ja
cmp
push
dec
mov
pop
sti
dec
lahf
and
aad
js
sbb
push
mov
inc
aaa
xchg
stos
pop
pop
cmc
fildll
jmp
xor
iret
cmp
push
arpl
and
jmp
mov
adc
xchg
ds
push
jp
add
dec
sub
cmp
inc
jp
lret
push
dec
sub
fwait
in
dec
mov
ljmp
stos
cmp
jnp
mov
shrb
cli
outsb
scas
mov
push
std
pop
mov
ss
imul
int3
jl
xchg
sti
pop
dec
pop
add
imul
or
hlt
xchg
mov
jo
inc
xor
cmpsl
outsb
cmp
outsl
xor
cmpsb
pop
sub
mov
in
cmp
sarb
pop
inc
fnsave
sub
aas
xchg
fsubs
push
pushf
xchg
push
not
iret
subl
movsl
mov
cli
mulb
into
push
fnstcw
pop
cwtl
xchg
dec
into
repnz
adc
clc
rcrb
dec
xor
inc
jmp
xor
jmp
xchg
and
sbb
push
imul
cmp
aad
lret
add
inc
or
mov
outsb
or
mov
sub
cltd
xchg
out
xchg
adc
mov
mov
jno
arpl
jo
aad
mov
inc
and
cmc
mov
imul
popa
rcll
int
ficomps
shlb
jno
jge
xchg
inc
pop
dec
ljmp
lret
xchg
and
aaa
shrb
sub
lods
ror
dec
mov
mov
adc
mov
and
fstl
test
dec
mov
xor
sbb
outsb
ret
ljmp
sbb
daa
clc
lea
loope
lcall
mov
call
xchg
lods
sbb
pop
mov
das
push
movsl
or
sbb
out
ret
pushf
push
push
cltd
stc
les
fsub
pushf
lret
or
leave
push
jmp
xor
jne
clc
xor
jecxz
sub
xchg
daa
sbb
pop
das
jmp
add
xor
fs
call
jb
or
int
leave
call
push
and
popa
fidivs
ljmp
xchg
dec
fcompl
mov
xchg
scas
xor
cmp
inc
or
jb
lock
hlt
popa
add
inc
mov
mov
xor
mov
sbb
adc
fs
rcrl
aas
jge
ja
jb
out
sub
fisttps
jecxz
test
add
jecxz
test
das
arpl
mov
sarl
lret
mov
sub
lds
and
add
or
outsl
in
fwait
mov
xchg
roll
fnstenv
sbb
rcrb
push
inc
sbb
lret
gs
mov
jnp
mov
pop
adc
call
jle
repz
loopne
sub
dec
mov
push
out
cs
sbb
fbstp
test
ret
add
lret
push
mov
or
je
mov
xchg
hlt
popf
pop
std
adcl
loope
and
jnp
push
or
adc
jnp
or
sbb
xorb
neg
cmp
scas
bound
lahf
fcmovne
mov
movl
pop
dec
addl
jge
jecxz
cli
lcall
loop
outsb
inc
loopne
sbb
jge
jle
test
mov
test
clc
outsb
xor
fiadds
arpl
xchg
fisttps
lret
jne
cmpsl
mov
insb
jns
movsb
lret
sub
rcll
jns
repz
repnz
and
or
scas
mov
in
or
pop
je
mov
scas
sub
std
pop
jb
dec
mov
push
pop
popf
sarb
adc
sbb
cmpsb
in
rorl
adc
pop
in
push
dec
sub
cmp
sbb
aas
int3
ficompl
push
loop
cmpsb
aas
int
inc
cmpsb
jns
xchg
test
add
rorb
xchg
sbb
adc
stos
cmpsb
mov
ficompl
inc
fwait
lods
ds
inc
std
mov
dec
mov
clc
push
adc
and
or
jb
into
sub
lods
test
push
pop
in
pop
test
xchg
jno
push
addr16
test
jae
inc
scas
lahf
rclb
cmp
lahf
arpl
add
in
and
lahf
ljmp
and
dec
pop
xchg
fldl
stos
popf
clc
mov
addr16
sti
outsl
ja
sti
inc
pop
and
fs
cmp
jnp
add
jl
test
loopne
or
fnsave
hlt
shll
stc
add
sub
jle
push
pop
mov
outsb
sub
cltd
shlb
iret
cmovg
add
add
lods
pop
sbb
cltd
pop
sub
rorb
pop
cmc
adc
inc
sbb
mov
sbb
mov
dec
add
repz
iret
ja
sub
mov
sarb
loope
imul
shl
out
stc
xor
movsl
into
jo
fwait
js
repnz
icebp
adc
pushf
adc
pop
out
or
stos
cmpsb
cmp
popf
pop
mov
xor
jo
sahf
jecxz
roll
jno
mov
xor
pusha
or
lahf
pop
xchg
inc
into
xor
add
int
scas
fsubl
xor
data16
cmp
int3
adc
push
addr16
jecxz
andb
cmp
inc
cli
cmp
add
inc
aad
shlb
ret
test
dec
imulb
repz
gs
icebp
pop
push
cmpsl
mov
push
pop
or
mov
or
std
pop
inc
lahf
test
lret
mov
xchg
and
lahf
cltd
ret
pop
sti
cmp
fidivl
inc
mov
fwait
mov
hlt
stos
fdivp
xchg
mov
or
mov
mov
pop
ljmp
in
idiv
stc
add
mov
aam
mov
scas
fildll
pop
sbb
rorl
ret
push
cmp
xor
iret
repz
mov
lcall
imul
out
xor
adc
stos
cmp
pop
fdivrl
fidivl
test
addl
xor
std
pop
leave
les
xlat
pop
enter
mov
lea
fstpl
icebp
jo
unpcklps
mov
fcom
pop
loop
arpl
fs
cmpsb
iret
mov
and
inc
jp
dec
sbb
sahf
mov
in
int3
xor
pop
jns
pop
xor
scas
jecxz
or
mov
xchg
fldenv
dec
sbb
lods
inc
add
cmpsl
lea
fildll
cmp
push
mov
movsb
mov
movsl
mov
inc
test
pop
xor
insl
icebp
sub
mov
push
ds
scas
aaa
adc
push
leave
jb
lea
xlat
pushf
fsubr
mov
icebp
or
movsb
mov
sub
sub
pop
int
adc
cmpxchg
adc
insb
insb
out
es
xchg
dec
mov
jo
push
cmp
add
and
lods
insl
or
sbb
sbb
adc
push
imul
mov
xchg
inc
sahf
cmp
mov
sub
push
daa
sbbl
jbe
push
push
cmc
stos
divb
les
movsb
ss
add
or
outsb
mov
ds
jp,pn
ja
clc
jg
inc
faddl
mov
hlt
ja
xchg
scas
cmp
sti
pop
enter
jns
and
mov
jmp
pop
push
jne
daa
xchg
inc
and
push
inc
cmp
scas
jbe
push
clc
loopne
notl
mov
fwait
sbb
rcrb
pop
push
pop
lds
or
repz
movsb
js
sti
push
or
out
nop
push
inc
ficoms
jg
rcl
inc
lcall
xchg
subb
out
jne
dec
mov
jno
jno
xchg
inc
ja
push
loopne
sbb
mov
mov
pushf
pop
lods
insl
push
stc
ret
lahf
lcall
sarl
jne
cwtl
out
mov
inc
mov
push
fldenv
leave
lock
xor
iret
sub
jno
shlb
test
stos
hlt
insl
ret
sbb
jae
mov
and
sbb
les
in
push
push
add
fmul
pop
movsb
mov
sub
jae
out
sub
out
or
adc
test
jg
fists
push
loopne
sahf
sbb
add
cmp
popa
and
aas
sahf
sbb
jns
sbb
dec
in
fwait
xchg
loop
jl
jo
rcll
mov
jne
xor
cmc
cli
movsb
popf
mov
mov
xor
xchg
repz
cltd
lock
mov
cltd
xchg
dec
jb
push
daa
cli
xchg
mov
pusha
je
ss
rcll
xchg
jp
push
inc
inc
and
shl
loop
inc
lods
sahf
mov
or
mov
push
lret
pusha
out
fcmovne
xlat
lods
and
dec
ja
cmp
hlt
inc
cmp
cmpb
push
cmp
mov
int3
mul
sub
ret
mov
adc
xor
mov
stos
pop
pop
add
pop
mov
mov
push
mov
iret
mov
mov
fwait
inc
test
add
xchg
dec
jmp
int
aaa
in
or
xor
mov
int
divl
xor
stos
mov
lret
mov
stc
xor
into
mov
lcall
nop
jno
pop
pop
mov
aam
gs
lret
imul
lods
push
adc
pop
mov
icebp
addr16
out
pop
insl
add
sbb
mov
push
lret
mov
adc
popf
pop
inc
stc
pop
in
push
cmp
test
ss
jns
cmp
dec
mov
dec
bound
mov
sub
mov
push
xlat
and
or
lods
xor
les
sub
out
jns
pushf
cmpsb
inc
inc
lock
ss
pop
and
jg
ja
daa
movsb
sub
and
jb
shrl
push
lock
aam
dec
xchg
shlb
repz
in
xor
flds
jnp
lcall
aam
testb
shll
jp
loopne
inc
or
test
mov
add
shlb
and
jmp
cwtl
rcl
fildl
and
repz
xchg
gs
incb
ja
pop
mulps
push
xchg
movsb
lea
add
aad
dec
testl
int
stc
out
pop
fsub
mov
dec
mov
scas
jnp
push
push
xor
fsubp
and
and
inc
mov
pop
and
stos
aam
inc
inc
daa
fdivl
adc
pop
push
inc
sbb
stos
adc
mov
xchg
lea
and
adc
out
popf
inc
adc
xor
push
jmp
cmpb
pop
and
pop
test
mov
xchg
dec
jne,pn
test
xor
push
sub
and
mov
adc
sbbl
push
pop
lods
xchg
dec
push
or
push
mov
rcll
data16
cli
mov
mov
push
mov
jae
test
mov
into
int
into
loopne
dec
mov
mov
mov
cmp
daa
iret
jno
inc
mov
xor
fisubl
loope
xchg
sub
mov
push
push
push
icebp
aam
lods
negl
mov
ss
lock
lcall
pop
in
xchg
ss
xor
pusha
cmp
lds
or
adc
jns
loope
loopne
lods
lea
int
xchg
sub
adc
pop
in
int3
int
ret
push
adc
shrl
push
insl
push
rolb
cmp
mov
orb
xor
repnz
jbe
pusha
test
mov
xchg
pop
mov
loopne
mov
push
jno
outsb
mov
adc
and
test
stos
or
scas
jle
scas
pusha
arpl
out
adc
add
push
notb
mov
or
xchg
xlat
das
mov
adc
push
js
jnp
aaa
loopne
mov
shlb
sbb
adc
pop
xchg
pop
jns
or
ficoms
in
mov
dec
test
jnp
mov
pop
pop
pop
stc
or
les
arpl
adc
in
push
pop
push
hlt
mov
sti
sbb
fidivs
je
js
push
and
sbb
in
inc
push
jp
rcrb
jg
daa
xchg
lret
mov
popa
in
pop
adc
pop
leave
loopne
in
cmp
add
push
jns
test
sbb
pop
loop
push
pop
movsb
jle
js
insb
adc
movsb
insb
jmp
push
and
pushf
sbb
pop
aas
jno
mul
jns
fisubl
push
mov
shlb
mov
test
std
out
xchg
dec
lods
pusha
push
mov
xlat
icebp
pop
jp
sub
cmp
lret
insl
sbb
mov
stos
push
js,pt
sbb
std
and
pop
fimull
ficomps
mov
sub
sbb
icebp
pop
mov
ficoml
sub
jne
pushf
mov
mov
cmp
test
loop
push
mov
icebp
fidivrs
ss
in
fcomp
adcl
push
add
lret
int3
test
xchg
aas
outsb
loop
dec
adc
add
ret
cmp
sub
mov
sti
jno
mov
aas
mov
mov
adc
lahf
jno
lods
xchg
xor
mov
xlat
and
push
sbb
or
adc
add
ret
call
ja
sbb
add
sbb
fsubl
ret
dec
dec
lods
mov
cmpsl
std
or
in
cmc
fsub
ret
or
and
jp
lret
jl
dec
or
ret
cmp
mov
sub
aaa
mov
jno
imul
push
pop
cmp
push
js
test
jge
rclb
sarl
fildll
pop
roll
cli
jbe
inc
filds
sub
ja
push
cmp
lret
out
loop
rcrb
aas
ret
and
cmpsl
and
shll
loop
loopne
xchg
sbb
out
repz
jg
xor
sbb
popa
popf
sbb
add
loop
insl
adc
fisubl
mov
lret
adc
ficoml
mov
fistl
loop
pop
add
outsl
repz
mov
cld
out
test
mov
jo
inc
sti
nop
xchg
mov
sub
jmp
inc
aam
subl
dec
or
sbbl
icebp
sub
and
inc
xor
mov
jmp
push
aaa
shl
lods
out
jge
jle
push
add
fdivl
dec
push
pop
dec
out
xchg
imul
sub
and
mov
or
xchg
push
mov
lock
mov
repz
icebp
jmp
inc
ds
rep
hlt
add
mov
lods
cltd
adc
cmove
jmp
cltd
and
bound
sub
int3
scas
es
or
dec
lret
es
pop
xchg
dec
dec
push
xor
mov
inc
popa
sbb
or
iret
nop
cmpsb
xchg
shll
push
inc
arpl
ljmp
test
cli
jmp
push
xchg
adc
stos
xchg
iret
and
repz
jecxz
ret
xor
lds
pop
jecxz
jae
lret
jmp
adc
sbb
fstl
mov
pop
xchg
sub
pop
lods
sti
pop
addr16
notl
lds
ret
mov
imul
mov
add
loope
pop
dec
push
andb
shr
mov
add
or
push
and
int3
push
mov
push
mov
lcall
out
push
cli
inc
lret
dec
push
sbb
shl
fistpl
lcall
out
cld
js
xchg
cmp
pop
pop
fnstcw
inc
mov
jnp
jg
jns
lock
mov
cmp
lret
lds
out
push
jae
orl
dec
xchg
jp
cs
fs
cmp
mov
mov
push
mov
pushf
sbb
mov
and
dec
xchg
cmp
or
ds
xchg
mov
cmp
sbb
mov
add
and
loop
adc
jl
add
xor
mov
shl
cmp
cltd
fidivrs
jge
pop
xor
lock
push
imul
test
xchg
lret
mov
dec
mov
outsb
dec
hlt
mov
xor
lahf
insl
push
or
jl
pop
xor
shlb
push
hlt
aam
add
push
add
dec
sub
iret
daa
mov
cs
dec
enter
mov
adcb
lock
jnp
mov
xchg
xchg
loopne
mov
jp
and
mov
sub
xchg
cmp
mov
popa
ret
xor
pop
ja
pusha
out
mov
sbbl
stos
iret
jl
int3
fdivs
scas
ret
cmp
or
inc
sahf
popa
or
stc
repz
sbb
adc
adc
and
push
cmp
push
add
cmc
les
lods
jge
dec
pop
cmp
pop
mov
fwait
nop
xor
negb
cmp
sahf
roll
clc
mov
ret
pop
push
jae
or
push
ljmp
dec
pusha
repnz
out
pop
push
jle
add
push
mov
fs
push
fildll
sahf
cmovae
push
xchg
repz
jmp
rcl
cwtl
sbb
pop
xlat
loopne
in
push
call
icebp
ror
pushf
imul
mov
mov
addb
pop
jb
loop
icebp
push
mov
ss
and
push
push
add
pop
sti
jp
shll
and
xchg
incb
sub
sub
adc
sub
popa
mov
mov
sbb
push
in
fistpl
fptan
popa
ljmp
or
ljmp
jl
addr16
stos
add
pop
shrb
mov
out
pop
mov
faddl
mov
jmp
sbb
outsl
inc
jle
mov
jo
in
sub
mov
scas
iret
dec
jl
das
adc
dec
jne
rclb
je
das
jecxz
jl
das
and
pop
cmp
add
jno
es
push
leave
cli
jo
xchg
xor
lret
loop
ja
out
test
lcall
in
inc
dec
pop
push
xchg
shlb
and
enter
and
xchg
sub
push
sub
mov
adc
sub
out
dec
pop
push
fstps
rorl
push
lahf
and
add
lcall
jecxz
push
fisubl
das
sub
lock
or
stos
and
xor
mov
mov
std
adc
xchg
jne
mov
inc
popf
xor
add
shlb
loopne
stos
ljmp
jns
jnp
iret
jg
test
add
inc
xor
pop
dec
cmp
push
gs
mov
push
ret
inc
inc
out
in
repz
pop
data16
mov
inc
ffreep
test
pop
loop
push
int
mov
addr16
inc
mov
xor
xor
mov
and
cmpsb
or
mov
cmp
sub
mov
insl
sbb
inc
mov
es
jge
mov
pop
addb
jbe
cmp
es
repnz
inc
shr
in
jmp
cmc
insb
mov
cwtl
cmp
pop
pop
push
das
or
mov
bound
out
mul
mov
pusha
cs
lahf
cmp
insl
push
data16
dec
andl
xorb
adc
ds
cs
sbbb
mov
ret
cmpsb
scas
fmull
dec
aaa
movsl
cmp
xchg
add
xchg
add
outsl
or
bound
jmp
fists
mov
mov
imul
decl
fcmovnu
dec
cmp
test
pop
cmpsb
out
repnz
jecxz
sub
cmp
xchg
ja
inc
sub
insl
mov
inc
sub
dec
ss
shll
mov
adc
rcr
pop
stos
mov
ret
rcl
mov
out
call
jle
jp
or
or
sub
movl
and
xchg
divl
sub
cmp
jge
lock
and
scas
rcrl
popa
jno
cli
mov
jp
mov
bound
sbb
js
dec
jg
lret
pusha
mov
mov
ljmp
arpl
shll
mov
or
out
cwtl
push
loop
cmp
and
movsl
ds
inc
or
bound
pop
sbb
call
outsb
icebp
pop
mov
enter
addr16
mov
pop
rclb
mov
cs
or
or
and
jge
dec
or
notb
ficompl
inc
lds
pop
jle
mov
stc
jg
roll
fwait
pop
inc
ja
and
dec
in
ljmp
pop
and
out
mov
push
xchg
retw
pop
cmc
jae
lcall
shrl
ljmp
in
lret
push
daa
mov
sbb
or
jb
add
hlt
xchg
test
or
daa
cltd
inc
jle
jmp
pushf
xchg
pop
cltd
inc
insl
mov
outsb
add
xlat
ja
hlt
cmp
data16
jp
aam
cmp
mov
stc
into
ds
xchg
mov
icebp
inc
lock
inc
xor
push
cmp
orb
mov
pop
imul
inc
sbb
add
xorl
lret
xchg
jbe
ret
pop
cwtl
pop
inc
jb
jo
inc
leave
leave
out
loope
sbb
cmpsl
add
cmp
cmp
xor
xchg
pop
sbb
mov
cs
jno
cltd
or
imull
xlat
pop
enter
sub
int
bound
call
inc
mov
inc
test
adc
cmp
cli
das
push
lods
mov
add
pusha
ret
std
sub
sbb
sbb
outsl
inc
adc
imul
inc
clc
xchg
iret
jecxz
inc
mov
push
jl
scas
sub
arpl
adc
pop
dec
divb
cs
mov
pop
pusha
dec
pop
lret
push
push
adc
fisttpll
adc
insb
test
cmpsl
mov
add
fists
outsl
dec
dec
lcall
xchg
jg
pop
dec
xor
fisubs
jle
xchg
jbe
daa
rclb
ret
stos
xor
movsl
xor
pop
enter
js
push
mov
xchg
incl
gs
pop
in
xchg
push
in
xchg
dec
les
es
pop
iret
mov
test
fiadds
cmp
mov
mov
cmp
adc
push
scas
ret
aaa
sub
sahf
ljmp
xchg
push
mov
int3
ret
subb
and
sub
scas
adc
xchg
xchg
insb
hlt
inc
xchg
mov
xlat
jno
mov
mov
inc
in
hlt
mov
lahf
aas
mov
movsl
dec
cwtl
inc
xlat
int
dec
pop
xchg
sbb
pop
outsl
mov
jnp
or
in
xor
cld
push
mov
fmul
mov
jb
stos
insb
pop
sbb
xor
sbbl
cli
stos
xchg
jne
nop
sbb
push
clc
fld1
pop
mov
shlb
in
push
in
xchg
xchg
push
dec
fdivrl
or
mov
add
in
in
jg
mov
mov
xorl
pop
push
mov
cmpsb
sbb
push
push
cmp
mov
inc
scas
rcrb
pusha
or
xor
outsb
test
nop
inc
mov
cmp
out
jae
or
dec
cli
pop
dec
dec
jne
xchg
and
mov
ja
mov
fs
pop
mov
jb
or
pop
pop
or
adc
mov
pop
inc
or
enter
push
sub
or
mov
ja
jnp
push
jno
sbb
xor
dec
stos
test
lret
pop
lret
loope
popa
pop
fldl2e
cwtl
jl
pushf
hlt
roll
aad
lcall
jecxz
fcmovb
mov
das
and
push
out
std
pop
push
cli
cmp
sub
shrb
xor
je
in
jge
cmp
dec
pop
push
inc
imul
sbb
in
in
lock
sub
addb
cmp
xor
xchg
add
cmp
rclb
pop
xchg
push
test
add
scas
push
test
or
outsl
or
aas
loope
scas
fstl
in
incl
jb
xchg
mov
xor
lods
add
xchg
push
push
popf
mov
push
incl
popa
xchg
dec
test
sarl
mov
pop
shrb
add
adc
jmp
or
push
sub
fisttpl
jns
icebp
movsl
sub
popf
cmpsl
push
mov
sub
adc
push
inc
rorl
clc
lahf
sahf
dec
jns
pop
push
ret
subl
pop
jle
popa
lret
data16
hlt
sbb
pop
xor
out
shl
dec
add
test
cmp
and
push
cld
mov
or
xor
int3
jg
test
ret
xchg
or
test
and
and
ja
xor
sbb
pop
inc
and
sbb
xor
mov
push
mov
iret
cltd
jmp
imul
bound
cld
ja
scas
add
shrb
adc
ja
shr
push
jno
inc
sahf
adc
nop
cs
sbb
lock
cmp
inc
cmpsb
inc
loopne
pop
js
cmp
pop
loopne
cmpsl
sbb
addb
cmp
pop
sub
loopne
jl
push
jge
ret
sub
adc
pop
fisubrl
aam
enter
scas
or
mov
inc
fdivrl
gs
xchg
hlt
maxpd
addl
stos
je
mov
std
ret
mov
sub
push
xlat
lock
sub
cmpsb
das
aas
add
mov
or
es
add
cmp
xchg
xchg
inc
pop
dec
or
out
xor
imul
jl
dec
xor
lods
test
mov
in
jb
or
dec
xchg
dec
addr16
shl
xchg
sub
jg
fsubrl
cmp
mov
imul
jae
adc
push
xchg
dec
mov
xchg
inc
xchg
jge
mov
and
xor
ret
xor
and
xorl
push
sub
xrelease
xchg
jns
js
les
fcomps
jmp
xchg
push
jno
loope
jne
push
mov
pop
and
or
fbstp
int3
arpl
orb
inc
sub
or
mov
lcall
addr16
inc
shll
mov
test
xor
mov
daa
enter
and
scas
imul
arpl
adc
cmp
das
sub
push
stos
mov
cmpsb
out
pop
lcall
mov
push
lods
xchg
pop
lods
sahf
push
push
inc
pop
sti
jmp
mov
sub
dec
adc
xlat
sub
das
pop
in
iret
mov
push
mov
xchg
test
add
push
and
push
mov
aaa
insb
or
sbb
ss
push
js
xchg
pop
sub
dec
rcrb
aam
lahf
cld
out
clc
test
or
push
pusha
mov
in
subl
sbb
nop
gs
out
xlat
sbb
xchg
mov
mov
test
mov
mov
ds
jo
scas
or
mov
add
xor
sbb
js
pop
adc
add
push
jp
pop
ret
inc
int3
adcb
ror
shlb
gs
loope
jbe
sahf
sub
sbb
mov
jmp
add
mov
lods
add
xchg
xchg
test
dec
cld
lods
rol
scas
stc
push
push
pop
gs
ljmp
jl
pop
scas
cmovae
scas
iret
inc
das
pop
mov
test
int3
push
pop
outsl
ds
xchg
shrb
daa
popf
mov
pusha
xchg
sub
bound
mulb
jno
imulb
int
pushf
lods
daa
movsb
pop
in
shlb
es
push
js
pop
add
xlat
fdivl
std
push
rcrb
ds
cmp
fwait
adc
stc
notb
outsb
std
or
adc
ss
arpl
out
movsb
imul
xchg
cmpl
inc
jnp
popa
fdivr
mov
imul
mov
scas
out
dec
mov
cmc
push
ljmp
aad
outsl
pop
or
lahf
jmp
mov
test
adc
fsts
jp
jecxz
pop
outsl
and
cmp
or
jbe
mov
mov
gs
pushaw
push
test
out
mov
imul
imul
out
pop
dec
pop
sub
out
incl
mov
outsb
xor
mov
scas
dec
mov
hlt
mov
ret
add
mov
inc
iret
je
repnz
sub
push
out
dec
out
insb
popa
xor
sub
pop
hlt
mov
into
aas
clc
pop
and
adc
push
daa
adc
inc
ret
aaa
pinsrw
shr
add
mov
xchg
push
add
push
inc
jae
xchg
jmp
mov
inc
or
andb
add
inc
sub
inc
ja
jb
test
je
incb
es
jecxz
aam
push
cmp
aaa
add
mov
push
inc
scas
test
jg
xor
cmp
negb
push
lahf
ljmp
or
jecxz
lods
mov
sbb
jb
shlb
jg
inc
jbe
popf
pop
daa
jecxz
shlb
jns
inc
ret
push
sti
fiadds
sti
or
jb
fldenv
jl
clc
cmp
jle
jmp
insl
jecxz
pop
inc
xorb
insl
mov
nop
and
shr
jb
fdivr
pop
ret
jbe
dec
sahf
mov
cltd
jno
scas
add
addr16
scas
pusha
out
push
lds
add
adcl
in
rcrl
insl
nop
ss
out
mov
add
jns
sahf
int3
pushf
in
or
adc
xor
ret
push
int
push
mov
inc
lds
pop
into
das
xor
aaa
jnp
mov
call
lret
cmp
mov
cwtl
rcl
push
ds
dec
sub
push
icebp
inc
add
push
subl
push
les
or
popa
loope
xchg
lods
aas
pop
jp
adc
add
popa
imul
fcomps
imul
out
movsb
ja
cmp
sbb
or
loopne
mov
cmp
mov
bound
push
roll
jg
in
and
daa
imul
and
je
cmp
aaa
lea
testb
cmp
lcall
dec
push
test
cmp
pop
jg
sbbb
ficoml
into
xlat
fwait
pop
out
pop
sbb
stos
stos
xor
mov
add
mov
daa
rcll
aam
imul
and
scas
xchg
pause
mov
or
sbb
out
sbb
and
mov
adc
push
mov
daa
mov
daa
scas
sbb
daa
mov
adc
pop
adc
cmc
jge
aaa
ret
out
das
dec
lcall
out
adc
inc
mov
fldt
call
lret
pop
cli
fstl
pop
push
hlt
add
push
mov
fimull
pusha
andl
cmc
and
fidivrs
sbb
push
adc
sbb
mov
sbb
insb
dec
pop
leave
popf
lods
mov
aas
lret
fistps
mov
add
adc
mov
mov
mov
dec
xchg
jno
popa
iret
push
shlb
push
fcmovnu
lods
sub
and
out
sub
ret
mov
jecxz
and
inc
xchg
cmpsb
jmp
repnz
lock
fidivs
gs
loope
rcr
add
jle
or
cmp
ss
push
outsb
orps
scas
sub
stos
or
scas
push
stos
pop
enter
insb
fadd
inc
cmpsb
test
cs
mov
push
sbb
cmp
xchg
scas
sub
mov
dec
call
sbbb
int
rcr
mov
ljmp
sub
out
test
sub
ja
and
movsb
mov
insl
or
imul
lea
add
sub
xor
mov
adc
fidivs
jl
push
cmp
adc
jo
mov
jnp
mov
cmp
out
lods
push
mov
mov
fstps
mov
jne
dec
push
mov
mov
scas
sbb
jne
add
adc
and
mov
cmpsb
repnz
stos
testl
ds
cwtl
leave
or
pop
test
shll
pop
mov
jae
in
and
lods
lods
adc
int
add
int
cmp
sarl
js
adc
sub
sub
xor
xor
add
addr16
and
inc
imul
pop
mov
and
into
rcrl
lret
mov
push
mov
jle,pn
xlat
jl
pop
push
sbb
ficoml
or
add
data16
into
push
adc
cmp
mov
inc
outsl
inc
mov
pop
in
out
sub
rcrb
mov
rorb
push
cmc
enter
es
xor
fnsave
inc
or
xchg
in
imul
inc
icebp
mov
lods
movsb
int3
in
scas
repnz
xchg
rol
fmull
inc
dec
sub
cltd
inc
aad
insb
dec
addr16
je
popa
scas
test
rcll
push
cld
ja
fwait
jecxz
pop
or
push
inc
int3
fs
std
mov
mov
rcrb
mov
test
popf
enter
inc
xor
imul
shlb
shll
out
in
inc
scas
and
mov
stos
jbe
imul
push
call
hlt
xchg
add
adc
push
bound
push
movsl
movsl
mov
test
sahf
lods
sub
loope
andl
loop
push
push
out
sbb
xchg
sti
xor
or
cmp
cmp
icebp
pop
movsl
pop
inc
sbb
sbb
add
dec
std
mov
mov
jb
add
push
or
sahf
popa
insl
push
faddp
fcomps
mov
mov
and
in
jp
jg
xchg
sub
push
mov
cmp
mov
jae
dec
subl
frstor
inc
xchg
sbb
jnp
xlat
push
mov
cmp
arpl
insl
out
cmp
stos
out
mov
push
sbbb
pushl
inc
aam
fildl
mov
mov
push
pop
enter
xor
adc
pop
or
sbb
xacquire
shrb
add
je
test
mov
popf
pop
xchg
pop
mov
mov
add
fcomi
ret
pop
in
rcl
ror
add
fidivrl
and
pop
and
push
jo
insl
rclb
xchg
ret
mov
dec
push
or
inc
cmc
gs
push
fistps
stc
std
fisttps
lods
add
testb
cmc
mov
imul
dec
mov
pop
add
cmp
sbb
mov
aas
enter
fidivl
push
jecxz
add
scas
in
pop
pop
jmp
add
mov
mov
loop
enter
adc
jl
insb
pusha
fadds
mov
mov
test
jle
xlat
int
into
cltd
sbb
aad
outsl
decl
mov
add
jne
jbe
jno
jnp
mov
mov
mov
cmp
xchg
cltd
mov
sub
iret
icebp
xchg
jecxz
and
mov
mov
sub
mulb
sub
std
sbb
cld
hlt
fistpll
ss
inc
inc
shrl
dec
ljmp
inc
sbb
lahf
das
xchg
lcall
mov
dec
fucomp
sub
movsl
inc
out
loop
inc
dec
mov
imulb
jmp
es
add
test
adc
pop
btr
pop
lcall
lret
fcomp
sub
sti
push
lret
rcrl
cmc
arpl
ret
fildll
cmp
mov
mov
sub
into
pop
sti
dec
xchg
push
cmp
and
and
repz
loop
push
and
add
mov
lcall
dec
mov
mov
aas
ljmp
sbb
push
xor
into
pop
sbb
test
sub
xchg
les
mov
mov
popl
or
lods
jg
scas
cli
and
repnz
and
or
outsl
shll
inc
mov
xor
cmp
mov
data16
pop
add
inc
sar
add
push
shlb
fwait
gs
cltd
int
or
roll
inc
insl
test
jb
fnstcw
mov
and
adc
push
stos
xlat
dec
jne
cmp
mov
pop
imul
pop
adc
jno
js
jle
negl
and
mov
mov
xor
ret
pop
mov
rcll
sbbb
maskmovq
divl
mov
xlat
cwtl
mov
xchg
inc
lock
out
sbb
inc
xchg
jg
or
pop
stos
ss
mov
idivb
push
xchg
out
sub
xor
inc
sub
dec
mov
daa
xor
popf
lahf
sbb
jo
add
insl
push
xor
pop
and
sub
lods
jae
jp
cmc
inc
sub
ret
aaa
ss
sbb
js
test
das
dec
popa
and
mov
sti
lret
sub
push
stos
aas
inc
dec
mov
mov
jle
lea
outsb
cmp
pop
mov
lds
ss
insb
or
je
pop
sub
adc
push
and
adc
mov
add
insb
mov
sbb
data16
mov
fidivrs
icebp
popa
cmpsl
lds
movsl
shr
inc
inc
test
cs
add
cwtl
in
sub
inc
mov
mov
push
cmp
inc
int
push
mov
lret
daa
push
dec
sbb
fwait
add
aaa
mov
fidivs
in
pop
xor
adc
fs
nop
push
jg
sbb
inc
add
clc
je
test
enter
sub
lods
jl
add
bound
pop
push
mov
test
les
jecxz
in
dec
icebp
pop
and
shlb
stos
repnz
in
in
push
cmpsb
cmp
push
leave
fmuls
clts
sbb
sarb
mov
and
and
sbb
daa
cmpsl
ficoms
jle
push
and
mov
mov
ret
lods
outsb
sub
movsb
addr16
lret
inc
aas
std
das
pop
pop
das
cld
int3
outsl
cmpsb
cld
sub
xchg
into
inc
lods
adc
scas
gs
push
loopne
lds
or
or
xor
inc
xor
xor
out
ret
jge
imul
cmc
daa
inc
jo
lods
notl
lods
and
pop
sbb
cld
andb
push
mov
insb
lods
xor
mov
popa
aad
sub
cmp
cmp
mov
xlat
push
xchg
inc
jmp
mov
jge
mov
fistpll
leave
clc
xchg
push
imul
fidivl
push
inc
js
sub
in
jp
stos
sub
cld
fimull
adc
push
mov
fisubrl
push
ljmp
nop
inc
test
int
mov
pushf
and
nop
lcall
xor
fists
mov
mov
test
unpckhps
sbb
mov
dec
inc
call
orl
push
sub
inc
add
pop
das
int
stos
loopne
inc
stos
cmc
out
pop
int3
mov
jo
aas
and
dec
ret
mov
fs
sub
xlat
aam
mov
loop
dec
das
lods
sbb
sbb
inc
jge
gs
dec
nop
mov
repz
insb
mov
push
je
pop
mov
test
sbb
lea
out
ss
stos
mov
push
fcomp
sbb
or
clc
imul
cltd
ret
cmpsb
popa
rcll
lcall
stos
in
add
adc
sarb
xchg
ljmp
js
jecxz
out
sub
sbb
sahf
add
mov
mov
in
stos
sahf
pop
dec
std
test
cltd
gs
inc
aam
test
js
cmp
dec
xor
push
jle
xor
and
imul
jbe
scas
stos
and
into
popa
adc
icebp
hlt
dec
movsb
loopne
cmp
cmp
mov
hlt
mov
dec
repnz
repnz
sbb
xor
push
mov
iret
mov
cmpsl
test
or
push
out
es
cli
ret
bound
ret
sbb
sti
rclb
cmpb
mov
xchg
mov
les
lahf
mov
jmp
push
sbb
sub
mov
push
icebp
lahf
sbb
push
dec
xchg
jmp
fs
mov
mov
aad
mov
sbb
push
pop
aaa
fdiv
push
add
sbb
inc
test
test
add
arpl
jp
lea
bound
cmpsl
mov
add
ret
outsl
add
cmp
cmc
push
push
stos
or
add
pushf
int
cmpsb
out
pminsw
sub
pop
push
push
jge
mov
mov
js
imul
sbb
sbb
add
sar
push
lock
pop
pop
push
sti
cld
mov
add
addr16
stos
cli
and
add
test
xchg
cmp
dec
adcl
out
cwtl
inc
xor
xchg
or
push
pop
popf
xchg
pop
int3
xor
jmp
push
lock
lds
xchg
in
mov
add
enter
inc
not
pop
hlt
jmp
dec
xchg
lret
das
pop
or
or
decb
fmuls
and
andl
loop
or
xor
mov
jne
adc
dec
pop
inc
jmp
std
leave
js
out
fisubs
push
jecxz
insl
sbb
aad
cmpl
cmpsb
xchg
aam
push
inc
and
xlat
jns
or
outsb
enter
pop
pop
cmpl
pop
ljmp
xor
aam
jnp
lahf
inc
jne
sbb
sub
adc
movsl
xor
ljmp
loop
mov
dec
je
and
push
fs
push
sub
xlat
or
ds
cwtl
sbbl
dec
xor
scas
movsl
xchg
aas
sbb
xchg
lret
in
push
fdivs
and
popa
pusha
jle
sbb
cs
inc
or
xor
or
pushf
xchg
lock
mov
mov
sbb
aad
adc
or
xlat
inc
ret
mov
enter
and
fnstsw
xor
and
out
out
aaa
or
pop
cltd
les
daa
sub
test
add
jp
loope
mov
xlat
sub
cltd
lods
arpl
push
dec
test
push
and
and
cs
sub
hlt
sbb
clc
sbb
fs
cmp
mov
insb
aas
jmp
insb
jne
mov
pop
rclb
sub
cmp
ffreep
xchg
incl
decl
push
mov
loopne
push
negl
jg
sbb
stc
cli
icebp
inc
pop
inc
mov
mov
pushf
cld
mov
repz
outsb
bound
sub
cwtl
mov
lret
mov
jmp
add
fadd
shl
xchg
push
ss
cltd
push
ficompl
cs
repnz
cmc
sbb
adc
mov
mov
sub
sub
mov
xchg
xchg
popa
das
addr16
sub
pop
loope
add
xor
mov
lods
sub
and
xor
orb
jnp
mov
ret
jbe
roll
cmp
stos
jns
int3
gs
push
test
stc
inc
or
mov
pop
push
cli
cld
add
pop
xchg
mov
sub
es
sub
fdivrs
rorl
addl
adc
add
orb
and
cltd
jge
hlt
les
pop
inc
leave
test
aad
insb
cmp
mov
insl
xchg
and
popa
lock
mov
cmp
ja
js
outsl
xchg
lock
lcall
mov
test
js
cmp
std
lret
or
ret
xor
jns
arpl
sti
mov
mov
lahf
mov
repnz
dec
cmp
std
test
mov
cmpsl
cld
and
jb
mov
in
cmp
dec
hlt
cmp
cmpsb
sbb
xchg
fnstenv
scas
popf
inc
test
mov
arpl
sub
lods
jg
popf
adc
cmc
xchg
pop
insl
testb
out
add
addr16
movsl
adc
lods
icebp
jmp
or
mov
jbe
cli
cmc
fxch
mov
ljmp
stc
repnz
outsb
sbb
in
repnz
aas
cmpsb
sbb
repz
and
mov
in
addr16
js
mov
dec
push
stc
xor
xchg
or
shr
int
mov
outsl
add
sub
pop
scas
adc
rcll
push
cmp
mov
inc
loope
inc
mov
enter
xchg
scas
cld
cmp
sub
ljmp
pushf
cli
fsub
pop
shr
iret
mov
add
arpl
xor
sub
add
lea
cmp
pushf
inc
adc
insl
add
stc
jo
push
inc
aas
imul
out
pop
jne
or
or
pop
mov
test
xchg
xor
sub
js
call
scas
loope
divl
cwtl
inc
mov
lods
ljmp
test
inc
cmp
ss
shll
push
imul
add
push
dec
jne
ljmp
push
mov
sahf
sti
loope
and
sub
cld
inc
into
fsubl
fwait
ljmp
jb
push
js
xchg
sub
cmp
rcr
pop
or
push
dec
scas
stos
xor
jl
push
arpl
inc
add
movsl
aaa
sbb
mov
push
mov
rcr
pop
mov
arpl
push
daa
mov
mov
jae
out
jo
inc
mov
inc
lahf
cmp
roll
loop
or
mov
push
std
mov
repnz
add
xor
mov
je
fildll
or
push
xor
jp
pop
push
jl
mov
shll
es
in
jo
pop
lret
test
cmpl
ljmp
lea
dec
jb
pop
fwait
sbb
fcomps
loop
fs
and
fstpt
das
jno
mov
mov
pop
jno
int3
or
and
test
and
popf
bnd
loopne
mov
int
mov
pusha
pop
arpl
test
add
aaa
stos
mov
rcrl
bound
dec
roll
es
cmpsb
add
pop
fisttpll
les
cs
dec
mov
frstor
jbe
jb
ficoms
cs
sbb
fisttpl
push
add
mov
adc
loopne
and
into
sbb
push
adc
nop
jl
adc
mov
cmpxchg
fsubr
jp
pop
in
xchg
or
inc
pop
repz
cwtl
cwtl
out
xor
lahf
cmp
sub
mov
loopne
pop
enter
arpl
data16
jmp
popf
jecxz
popf
xchg
jno
jle
push
cld
sbb
shll
je
or
in
push
cmpsb
sahf
and
out
std
cld
fstpt
addr16
lcall
inc
popa
fstpt
add
xchg
xchg
fwait
aam
jno
fiaddl
mov
mov
ja
add
sub
das
int3
cmpsb
jle
fnstenv
xchg
jmp
call
outsb
imulb
dec
mov
mov
dec
shll
mov
inc
mov
into
sahf
fistpl
sbb
sub
mov
fstpl
xlat
mov
and
lock
jne
jno
mov
push
add
fdivrl
ret
mov
loop
xchg
xlat
sub
inc
jg
jns
jg,pt
out
lds
add
adc
lock
push
mov
je
inc
and
sub
fldcw
jl
jbe
loope
mov
xchg
adc
or
jle
movsl
push
xor
push
jg
test
sbb
bound
push
aad
das
movsb
into
adc
adc
imul
fsts
jp
int3
xchg
stos
sbb
sub
insb
ja
mov
add
das
or
push
shl
sbb
mov
sahf
test
xor
inc
lea
xchg
mov
lock
mov
pop
or
xor
sub
outsb
jmp
push
add
pushf
outsb
icebp
mov
mov
lcall
shr
jge
loope
clc
mov
lods
sbb
adc
adc
scas
aas
jl
lcall
repnz
push
clc
enter
and
add
sbb
and
fdivrs
lds
sbb
sub
pop
mov
repnz
dec
or
stc
adc
dec
lcall
out
cltd
inc
mov
push
jmp
cld
aas
decb
divb
inc
in
repnz
mov
dec
and
and
lock
popa
sub
rcll
mov
out
lods
xor
out
addl
mov
push
add
xor
loopne
insl
pop
inc
stos
scas
sahf
dec
in
nop
mov
mulb
insb
ja
add
mov
insb
inc
xchg
rolb
orl
test
jno
push
data16
dec
ror
xchg
add
fs
sbb
andl
lea
sub
mov
aaa
shr
or
iret
jo
rorb
loop
leave
lods
fsubl
scas
shll
lds
jae
stc
push
jge
mov
scas
add
push
add
pop
adc
lds
decw
es
mov
mov
mov
mov
add
das
negl
leave
repnz
movsb
xor
idivb
cmp
add
xor
inc
ds
xchg
in
xchg
testl
sub
leave
mov
nop
cld
testb
lcall
or
add
inc
pop
xchg
push
in
push
js
adc
movsl
addr16
or
insl
jecxz
cs
mov
sub
in
popf
adc
aas
mov
out
mov
xor
and
and
xchg
inc
mov
and
addb
sbb
int
xor
jns
jb
addl
and
mov
lret
cs
jns
xchg
xchg
jbe
pop
sub
dec
or
push
data16
orb
ret
push
sub
or
pop
out
add
stos
push
movsb
cmp
insb
sub
mov
pop
mov
xor
add
push
push
mov
in
or
jl
pop
inc
xor
cwtl
mov
sahf
mov
mov
jg
repnz
push
sub
cmp
out
xor
loop
mov
ret
dec
fsub
aas
cmc
push
stos
or
sbbb
xor
ret
fstps
sub
test
and
in
shr
jns
stos
xchg
xchg
adc
mov
stos
ret
test
sarl
aaa
cmp
mov
sub
jb
addr16
lahf
aad
xor
lds
iret
add
adc
jae
pop
movsb
test
sub
out
test
sbb
into
cli
nop
add
sti
out
js
or
and
outsb
mov
into
pop
adc
push
cwtl
imul
movsl
and
sub
ds
cltd
jg
shrl
and
mov
mov
xchg
fsubr
dec
fisubrl
int3
lret
aad
inc
push
mov
cmp
mov
sbb
popf
ss
pop
call
aad
ror
es
mov
aaa
arpl
adc
sub
pusha
fs
adc
daa
cwtl
dec
incb
cmpb
mov
jo
mov
fxch
mov
mov
mov
loopne
mov
xchg
adcb
cmp
loopnew
mov
or
outsb
add
mov
jno
xorl
pop
adc
test
ds
dec
ret
ss
lret
sarb
push
int3
cmpsb
push
sub
dec
add
xor
scas
dec
mov
pusha
test
or
fbstp
cwtl
jo
cli
outsl
push
add
cmp
add
cmp
push
invd
ds
cli
hlt
inc
mov
mov
inc
and
fdivrp
mov
lcall
cmp
jp
xor
jmp
cld
sahf
leave
inc
xchg
insl
dec
push
in
xor
lods
jbe
mov
cmc
mov
ror
sti
jle
dec
gs
xchg
in
mov
mov
jge
adc
ljmp
cltd
in
push
jno
push
sbb
pop
rcr
lahf
mov
and
lock
sub
fistpll
sbb
popa
pushf
movsl
out
rcll
inc
xchg
push
cmp
rcrl
sbb
enter
mov
xor
andl
lahf
sbb
mov
out
push
lods
and
je
fldenv
cltd
lea
inc
je
pop
fnstcw
xchg
inc
and
fmull
rcl
sub
hlt
add
popf
xor
aad
push
inc
mov
and
mov
loop
and
fistps
sub
jge
ja
ret
rol
jmp
rorl
mov
or
inc
jno
incb
gs
xor
add
jne
fimuls
mov
push
pop
stc
pop
ret
push
xorb
jnp
inc
cmp
arpl
pop
xor
das
sbb
idivb
aam
pop
sub
fstpl
push
jbe
dec
sahf
fwait
adc
fsubrs
aas
movsl
inc
lret
loopne
lock
cld
in
mov
add
ss
push
out
sub
xor
xchg
pop
stos
adc
lret
sbb
insb
jge
fldt
lods
mov
clc
aas
pusha
arpl
lret
addr16
shr
xlat
in
mov
call
mov
stos
push
mov
inc
push
mov
mov
adc
dec
test
test
push
lea
pop
mov
loop
mov
add
dec
cmp
lcall
cmp
xchg
fdivl
xchg
imul
mov
cmp
les
ljmp
xchg
push
lock
and
rcrb
mov
loop
repz
aam
push
jmp
sarl
leave
xlat
add
sbb
pop
sbb
pushf
std
pushf
jl
sbb
mov
rol
xchg
and
outsb
xor
and
pop
xor
adc
movsb
mov
out
dec
mov
mov
mov
iret
and
sub
in
and
clc
icebp
in
xor
lret
fwait
xchg
pop
jbe
inc
rorb
cltd
sbbb
dec
dec
int
sub
cltd
jno
outsl
mov
push
test
rcll
std
daa
ljmp
adc
cmp
jo
pop
arpl
test
fmulp
enter
pop
out
add
lods
push
adc
hlt
push
mov
test
scas
lcall
or
push
je
pusha
pop
xchg
fnstcw
cwtl
das
pop
shll
adc
adc
jecxz
std
aam
repnz
mov
lea
rcrb
cmp
or
std
sub
mov
arpl
cmc
dec
dec
mov
or
lods
outsl
cli
in
andb
sahf
iret
ss
or
push
test
dec
fimuls
and
insl
mov
inc
xchg
or
jns
stos
lods
in
cwtl
fildll
mov
add
cmp
xchg
adc
sub
insl
push
mov
js
int
dec
gs
pop
pop
push
xchg
fists
das
push
mov
jne
dec
add
add
add
pop
mov
sub
bound
daa
cmpsl
fsts
dec
add
repz
dec
icebp
fsubs
scas
fcmove
es
jg
cli
aam
adc
sti
lcall
inc
jg
push
mov
rcll
sbb
sub
aam
test
jo
adc
dec
adc
das
sub
out
out
mov
xchg
daa
loope
cmpsl
repz
stos
inc
iret
fstps
xchg
shl
sub
pop
jl
mov
xchg
adc
dec
dec
cwtl
cmp
enter
addr16
add
or
mov
mov
test
mov
fcoml
jae
inc
push
imul
push
jo
add
mov
mov
lahf
shll
out
insl
xchg
cld
xor
mov
sub
loop
mov
sarb
sarl
adc
inc
nop
cmpb
jle
rolb
mov
adc
addr16
add
inc
lock
xor
jno
push
testb
shlb
jnp
loopne
pop
and
shll
rclb
frstpm(287
gs
stos
push
inc
push
inc
int3
iret
lea
ret
add
inc
out
inc
mov
mov
dec
jbe
aam
adc
sbb
imul
dec
sbb
adc
inc
inc
cmp
ficomps
das
add
clc
pop
push
scas
or
jl
inc
dec
or
idivb
rol
pop
pop
adc
icebp
sbb
fisttps
fdivs
xor
and
call
adc
mov
cmp
or
cmp
push
fdivrl
icebp
daa
sub
mov
mov
inc
popa
push
arpl
add
ds
jb
add
cmpl
cmc
add
into
shr
inc
dec
pop
sub
shll
and
jmp
mov
aam
cltd
sub
je
int3
mov
cmp
sub
xlat
imul
leave
pop
pop
loope
mov
flds
push
or
insb
mov
fisubrl
and
cmp
std
mov
inc
ds
sbb
dec
out
movsl
ss
or
aaa
mov
es
clc
and
outsl
rorb
mov
push
lock
or
and
inc
ja
jle
lret
mov
jbe
lcall
fs
int
scas
jae
rcl
lea
shll
xchg
es
jbe
outsl
sub
jne
jnp
cmc
push
push
jg,pn
add
cltd
dec
mov
adc
pop
sahf
adc
jbe
mov
daa
lcall
fldl
fs
mov
or
repz
push
xchg
nop
test
outsl
push
gs
mov
push
imul
xor
pop
fdivrs
hlt
lahf
add
mov
jbe
xchg
push
test
lret
pusha
sub
cmp
fwait
sbb
mov
and
inc
mov
sbb
dec
addr16
in
push
pop
iret
mov
mov
jb
out
push
lea
jae
sbbl
sbb
push
mov
jle
loopne
cmp
jno
cmp
lahf
mov
xor
fucomp
shl
jbe
mov
loopne
xchg
mov
push
ljmp
lahf
xchg
das
pop
call
daa
adc
pop
orl
dec
xchg
ficompl
cmpsb
dec
es
jge
push
sbb
and
jl
or
cld
insb
lret
mov
outsl
ror
xchg
push
into
test
call
dec
pop
mov
stc
int
ret
ds
xor
inc
add
sarl
enter
xchg
fsubr
lret
jle
nop
cli
out
andb
mov
int
popa
mov
mov
push
fsts
mov
and
dec
loopne
jo
rcrb
add
arpl
mov
jno
rcrb
dec
inc
dec
and
or
adc
cmp
or
add
mov
lock
mov
mov
cmpsb
enter
rcrl
movsl
loope
notb
push
add
mov
mov
pop
mov
sub
mov
inc
aad
repz
sbb
in
sahf
inc
daa
jns
lcall
inc
lds
andl
stos
xor
or
xchg
lcall
andb
and
mov
inc
idivb
mov
aam
xchg
inc
add
jne
mov
pushf
incl
sub
mov
jnp
icebp
repz
lods
aaa
jmp
ss
pusha
jmp
inc
in
fisttps
or
mov
cmp
clc
cltd
aam
mov
jbe
aad
cwtl
clc
sbb
ljmp
add
jg
lahf
repnz
dec
push
mov
jge
dec
lods
cmpsb
fcomi
ds
xor
adc
add
dec
pop
xor
add
fst
in
sub
mov
mov
aad
push
leave
fimuls
push
cmpsl
dec
adc
frstor
or
mov
imul
mov
ja
dec
lret
add
adc
cmpsb
and
mov
add
shlb
cmc
js
inc
sub
xchg
fisubrs
shrb
lods
sub
in
movsl
test
insl
xchg
je
jmp
mov
shl
pop
aas
add
in
mov
jecxz
mov
or
sub
imul
into
dec
sti
or
sbb
jmp
push
xchg
sub
das
fwait
add
outsl
mov
pop
pop
sbb
insb
rep
rcl
lea
sahf
push
xor
mov
pop
insb
sbb
bound
mov
fbstp
cld
adc
nop
jmp
sbb
adc
scas
xchg
loopne
sub
mov
mov
cwtl
test
out
xor
lods
jns
aaa
dec
add
jecxz
inc
mov
jne
jl
add
inc
out
cmp
dec
leave
xor
mov
cmpsl
negb
aam
loopne
mov
aaa
leave
mov
sbb
mov
adc
or
movsb
dec
jg
fbstp
arpl
rorl
cmp
xchg
cli
sar
fucom
adc
inc
push
lods
add
fadds
lds
stc
pop
icebp
rolb
aaa
jae
jb
inc
and
adc
inc
xor
push
out
push
aad
xor
pop
scas
divb
xorb
xchg
je
ret
out
icebp
xchg
xchg
les
mov
stc
cmp
out
cs
add
test
push
xchg
out
loop
pop
in
sub
cmpsb
dec
test
js
cmp
shrb
add
inc
sub
hlt
jge
cmpsb
and
pop
lods
pop
fidivrl
add
mov
sbb
pop
movsb
mov
rcpps
lds
lahf
nop
add
addr16
push
add
jle
popa
sbb
cli
adc
ljmp
lahf
fdivs
into
cmp
scas
repz
mov
addr16
ds
lods
sub
or
jo
pusha
sub
lahf
jnp
push
ljmp
cmp
mov
pop
dec
fisttpll
ret
add
jle
mov
cli
push
xchg
or
faddl
and
xchg
cmp
mov
int
push
pop
mov
nop
fidivl
mov
hlt
jo
ss
outsl
add
ljmp
inc
ret
scas
adc
icebp
ret
ret
clc
cli
mov
add
ret
xor
pusha
loop
ficoml
sahf
rol
pusha
aam
pcmpgtd
sub
add
mov
mov
or
sub
mov
cmp
int
mov
popa
lods
inc
loopne
sbb
mov
icebp
sar
int
sti
xor
lods
mov
push
sbb
sub
cmp
mov
pcmpeqb
mov
push
out
push
int
sti
mov
aas
xchg
or
pop
fyl2xp1
adc
mov
movsb
sub
loop
fsub
or
xchg
xlat
cmpsb
jmp
fstpl
mov
std
in
outsl
or
xor
pusha
call
lds
and
leave
push
cmp
xor
loopne
cmpsb
adc
test
sub
xorl
cmp
outsb
xchg
mov
dec
push
sub
rorb
pop
push
sub
sarb
mov
loop
rorl
and
mov
lock
std
mov
cmp
sbb
loope
mov
fisubl
adc
mov
bound
cmp
ljmp
bnd
pop
adcl
les
loopne
adc
adcb
add
cmpsb
xchg
pop
adc
push
cmc
sbb
ljmp
ret
test
mov
xor
sahf
jbe
sbb
mov
and
popf
cmp
cmp
cwtl
clc
jg
dec
dec
in
push
lahf
pop
dec
inc
mov
cmpsb
daa
cmp
inc
pop
xlat
jnp
mov
lds
mov
test
inc
cltd
inc
add
dec
loope
push
aas
cmp
push
jecxz
ja
dec
jbe
pop
sbb
push
das
je
mov
lea
lock
mov
loopne
xchg
xchg
dec
adc
lahf
inc
rol
test
sbbl
in
jge
rcrb
cltd
lods
sub
mov
fwait
daa
or
push
xor
insb
dec
cmp
xor
xor
mov
cmp
in
jg
outsl
lcall
add
dec
and
shl
unpcklps
add
rcl
add
pop
inc
out
jmp
aas
int3
das
lret
sbb
add
mov
scas
mov
push
aas
popa
or
pop
jns
and
dec
popa
lcall
test
sbb
enter
and
lock
dec
int3
outsl
out
or
push
jno
sarb
call
inc
jb
adc
je
ljmp
xchg
lea
sub
out
ret
mov
or
dec
sbb
sbbb
out
jo
clc
aam
mov
arpl
and
aad
or
jmp
sbb
sarb
lret
add
or
inc
loope
mov
jge
sbb
test
push
mov
pop
out
ljmp
inc
in
test
push
and
aam
jecxz
adc
sarb
std
or
push
fistps
push
lahf
dec
mov
dec
xchg
sarb
jo
in
mov
mov
leave
push
inc
jmp
push
es
outsl
mov
arpl
je
stc
lods
push
lret
fnstsw
js
nop
lahf
fcomps
mov
rorb
fmuls
xchg
and
scas
and
push
inc
sbb
sbb
cmpsb
mov
nop
stc
je
cmpsb
jge
nop
fiadds
xlat
jge
mov
mov
pop
lods
in
push
inc
adc
jg
mov
add
fidivl
xchg
and
mov
loope
stc
xchg
call
mov
mov
xor
inc
pop
les
roll
movsl
repz
cmpsl
ss
push
fwait
outsb
xchg
insl
adc
add
push
mov
push
lods
push
leave
loopne
cmpsl
fs
jecxz
in
daa
ja
les
sahf
stc
aad
mov
pop
add
ret
leave
add
aad
jge
inc
scas
stc
dec
dec
popf
inc
and
sub
into
jae
ss
cmc
gs
jno
das
fimull
repz
icebp
push
push
cs
push
xchg
xor
sbb
out
push
rol
mov
mov
jp
lret
mov
daa
jbe
xchg
in
xchg
js
fstps
jp
les
jbe
shll
fdivl
loope
sbb
sub
gs
gs
outsl
sub
sbb
aad
sub
push
push
push
or
stc
cmc
inc
sahf
enter
mull
loope
aaa
pop
and
sti
cmp
xor
ss
loop
and
sbb
ss
or
sub
mov
divl
in
sub
mov
rorl
xor
pop
pop
out
iret
test
in
add
pop
fisubl
or
add
jbe
mov
inc
out
mov
daa
jns
sbb
adc
pop
mov
adc
insl
lret
adc
jbe
pop
cmpsb
adc
mov
shl
mov
push
jecxz
cmp
lock
pop
push
jge
cs
push
fwait
adc
cmp
decb
or
insl
shlb
xor
mov
cmp
jecxz
rclb
rclb
mov
xor
lcall
scas
xor
pop
and
mov
push
xor
scas
sub
aaa
lret
rorl
pop
cmp
iret
hlt
ret
iret
out
outsl
inc
xor
xchg
cmp
jae
arpl
pminub
sbb
sbb
std
cmp
jp
fs
jno
pop
mov
adc
mov
fbstp
mov
xchg
dec
jno
loop
xchg
int3
ret
dec
push
and
pop
scas
mov
and
and
pop
xlat
mov
add
xchg
dec
ljmp
sbb
insl
mov
pusha
test
xchg
data16
enter
sub
and
xchg
sbb
push
adc
cmp
mov
lahf
or
xor
jg
and
sti
fadds
push
in
and
or
lret
pop
jg
lcall
jo
cld
cmp
js
cmp
xchg
add
adc
mov
sub
and
inc
leave
xchg
cmpb
mov
or
sbbb
ret
cld
and
mov
jmp
stos
xchg
jae
ljmp
cmpsl
imul
mov
pop
xchg
leave
lahf
add
leave
pop
cltd
sub
leave
sbb
cli
sub
adc
out
fdivrp
insb
mov
dec
and
push
js
sbb
clc
sub
jmp
addb
pop
push
ja
lcall
jae
iret
pop
sub
jmp
mov
mov
cs
cmp
xchg
pop
es
mov
test
lds
or
jecxz
sub
daa
cmpsl
mov
xchg
inc
mov
and
sbb
test
jle
movsl
adc
dec
pop
ja
stos
pop
les
add
xchg
add
jb
dec
xchg
cmpsl
pop
adc
daa
xchg
cld
pusha
add
lock
lahf
outsl
rclb
sub
mov
add
sbb
pop
aaa
repnz
jmp
call
cmpsb
jp
adc
outsb
and
je
jns
add
out
sbb
in
shlb
mov
push
enter
shrl
loop,pt
mov
leave
mov
and
hlt
ret
mov
out
mov
sub
int
test
push
dec
dec
sbb
pop
dec
and
es
or
jo
adc
inc
mov
ret
out
mov
push
or
and
out
jae
jns
shll
cmp
cmp
popf
fucomi
fstl
stc
and
fstpt
push
aaa
adc
fsubrp
addb
push
icebp
add
rcr
rep
sbb
iret
in
mov
into
push
cs
mov
test
mov
mov
aaa
cmc
fstps
jmp
sub
popa
jle
jo
sbb
fsubr
gs
adc
fwait
and
outsb
cli
inc
ud2
imul
mov
adc
rcll
mov
mov
out
outsb
ja
mov
lahf
lahf
adc
ds
inc
ret
repz
sti
sti
xchg
jno
jl
jl
sbb
lods
adc
xor
lret
push
pop
lods
or
out
jno
je
lods
cmp
sbb
shrl
out
pop
orl
ds
cwtl
xor
sub
outsl
or
icebp
pop
int
jl
in
lods
mov
js
pop
dec
imull
sbb
sub
andb
lods
inc
pusha
pop
cld
lret
lds
push
aam
push
jle
rcrb
lcall
movsb
jb
in
xor
and
xchg
loopne
sbb
xchg
aaa
adc
cld
jmp
icebp
mov
jg
sbb
sub
lock
mov
test
jbe
fstl
sub
xchg
jmp
mov
cld
adc
das
hlt
jb
movsl
cmp
or
cmpsb
cmp
xor
rcrl
mov
and
mov
xlat
pop
movsb
stos
xchg
lret
fstpt
sbb
popf
ds
push
and
cltd
and
pop
in
pushl
cli
mov
cmp
call
lea
mov
out
repz
mov
fcomps
and
inc
repz
cmpb
inc
push
push
mov
dec
pop
subl
lcall
dec
jns
push
daa
xchg
cmp
hlt
into
repz
int
fimuls
out
cmp
push
cld
mov
xor
shlb
cmpsl
and
in
mov
lahf
imull
enter
int3
call
jbe
cmp
add
ljmp
mov
int
cli
xchg
pop
xor
outsb
cltd
pushfw
ljmp
cmpb
pusha
and
sub
add
leave
sarb
sysret
loopnew
imul
out
jp
daa
mov
mov
push
sar
jg
imul
mov
lahf
mov
and
push
mov
dec
mov
jl
inc
ja
test
pop
shrl
cmp
cmp
jo
cmpsl
mov
addb
push
push
mov
dec
fdiv
or
add
jecxz,pt
mov
pop
fucomp
mov
mov
pop
mov
sbb
loop
lods
loope
xorl
mov
push
jl
adc
data16
xor
add
adc
pop
xchg
ljmp
cmp
lods
cmp
mov
jo
je
or
sub
bound
pop
lcall
into
icebp
stc
pop
stos
xchg
sub
testb
pop
lahf
out
aam
sub
jnp
jl
daa
jo
lret
jge
roll
xchg
and
hlt
and
scas
ret
js
mov
xchg
or
xchg
push
or
jb
not
in
pop
aad
mov
fwait
sbb
add
lcall
sub
sbb
mov
pop
jo
leave
je
and
jle
xor
sub
xchg
cmp
popf
sub
pop
xor
hlt
sbb
lea
mov
cmp
mov
outsl
bound
fwait
arpl
jmp
lea
xchg
pop
mov
and
dec
int3
rorl
sahf
data16
aas
and
push
lret
repz
cli
setb
pop
mov
sub
sub
hlt
popa
add
rol
adc
jbe
stc
sbb
roll
push
dec
stos
push
rolb
lock
sahf
pop
ds
addr16
jo
call
test
mov
sbb
in
and
jl
cltd
sbb
and
xor
xor
dec
call
scas
daa
cmpb
mov
cmp
outsl
mov
negl
jns
aad
ja
ss
lret
jle
xchg
inc
ds
add
sub
fsubrs
fwait
ds
pop
aam
outsl
outsb
sti
jnp
push
sbbl
add
adc
fsubs
adc
sti
popa
es
xlat
sbb
or
adc
fdivl
orl
push
mov
xlat
cmp
xchg
sarl
push
add
mov
push
enter
rclb
call
mov
daa
into
pop
adc
lret
sbb
cmpl
js
repz
cltd
jb
mov
jmp
push
dec
repnz
xchg
adc
cmc
std
mov
xchg
jnp
mov
mov
mov
mov
jg
cmp
enter
xor
test
and
pop
inc
rclb
mov
iret
mov
push
in
inc
or
jbe
or
mov
ljmp
xorl
mov
mov
clc
aas
sarb
ffree
xchg
pop
and
stc
adc
in
mov
test
mov
xchg
cmp
movsl
push
fcomps
orb
lret
aam
movsb
scas
jl
in
mov
loop
shrl
jns
and
popa
loop
xchg
sub
sbb
scas
or
stos
lock
cmpsl
gs
push
add
push
adc
inc
xchg
inc
ret
hlt
orl
ds
shlb
lret
jns
in
xchg
push
inc
aam
popa
jae
aaa
push
ss
fsubr
cmp
iret
lahf
imul
lock
adc
test
xchg
and
pusha
rol
xor
jp
jle
sub
xlat
ljmp
popf
in
inc
iret
jae
inc
mov
xchg
adc
sub
popf
nop
xchg
clc
stc
icebp
jne
cmp
call
lods
les
inc
rcrl
adc
lea
inc
cltd
jno
dec
push
test
adc
sbb
test
movsb
xor
mov
add
outsl
fxrstor
enter
sub
jg
cmp
bound
sbb
cltd
repnz
shlb
pop
addr16
in
in
push
xchg
inc
dec
fdiv
sbb
int
cmpsb
and
jg
pop
in
fstps
in
ja
lahf
je
repz
mov
xor
jecxz
push
xchg
xlat
push
fcoms
movsl
sbb
outsb
inc
sub
imul
push
dec
nop
pusha
push
lods
and
aad
mov
xchg
xlat
addl
int
mov
test
in
cmp
jmp
mov
cmp
mov
aam
pusha
call
pop
push
lcall
lods
sbb
ficomps
lahf
push
push
xor
mov
and
pop
push
loope
xor
iret
xor
cmpsb
jb
adc
xor
sub
xchg
mov
sbb
pause
out
orl
test
sub
inc
mov
lea
out
dec
mov
mov
outsl
jle
test
lret
and
mov
sbb
inc
sub
push
shlb
xor
mov
sub
lret
mov
jo
test
pushf
or
lock
xchg
cli
daa
lods
inc
sbb
ja
pop
popf
lock
pop
shrl
jno
out
fists
in
outsb
sarl
jmp
lahf
adc
sub
cmp
mov
loope
inc
jecxz
add
cld
js
lahf
mov
repnz
mov
push
into
mov
sbb
vpsraw
jecxz
std
enter
mov
dec
jnp
les
lock
movsl
sub
mov
ljmp
out
or
mov
mov
das
mov
inc
out
fistpl
jbe
mov
leave
imul
mov
adc
scas
lea
cli
daa
mov
fisubrl
push
cmp
je
divb
in
out
and
mov
scas
outsb
sbb
and
call
push
adc
ss
or
leave
mov
adc
pop
mov
pushf
adc
stos
outsb
outsl
loope
sbb
aad
cmc
jp
jno
stos
pop
mov
je
shll
insb
and
aam
addl
sub
dec
inc
jge
and
into
in
sub
dec
jg
inc
lret
insb
jbe
mov
pop
jnp
call
jbe
dec
pusha
aaa
sub
popf
ljmp
push
push
and
fmuls
movsb
roll
mov
xor
inc
icebp
std
mov
push
dec
xor
mov
mov
into
int3
mov
cmp
sbb
cmp
lods
or
sbb
push
jb
call
push
adc
xor
cmp
sbb
roll
jbe
in
out
sub
cmp
jmp
push
inc
stos
shrb
cmpsl
add
pop
sub
dec
fdivrl
inc
xchg
pop
mov
sbb
jmp
out
aas
call
push
jge
fimuls
lret
in
jp
xchg
sbb
loop
inc
lcall
les
mov
pop
rcrb
mov
xor
push
ficoms
test
cwtl
outsb
ds
dec
mov
or
fstps
lcall
daa
push
dec
out
sub
adc
cmp
rolb
std
les
xchg
jb
push
test
dec
push
scas
cmp
mov
mov
inc
jo
push
repnz
je
pop
sbbl
cli
sub
les
icebp
pop
add
adc
and
mov
add
xchg
mov
push
cmp
push
jns
jbe
xchg
enter
add
in
fistpl
mov
jb
adcb
dec
push
rolb
testb
enter
mov
nop
movsl
push
push
sub
inc
sbb
fxam
mov
xchg
nop
scas
shrb
xchg
push
sub
out
pop
js
push
inc
jb
inc
movsl
into
fldenv
out
sub
xor
fs
dec
adc
leave
dec
pop
rclb
xlat
sar
sub
fdivl
clts
inc
jge
insb
jmp
push
xor
jne
push
bound
mov
mov
push
ljmp
mov
xchg
pop
xchg
cli
in
push
mov
aas
and
mov
loopne
cli
lahf
cmpsb
test
scas
sub
movsb
inc
leave
in
mov
dec
and
cltd
insl
push
sahf
cmp
mov
lret
test
test
inc
mov
pop
adc
xor
sub
add
lcall
lcall
adc
cs
fldt
dec
lock
adc
xchg
int
fwait
jnp
sub
adc
ds
lret
adc
js
lcall
mov
aas
mov
sar
in
daa
adc
pop
in
mov
arpl
pop
int3
pop
dec
popa
jecxz
je
into
daa
lret
nop
add
repnz
dec
lods
cmc
xchg
outsb
hlt
pop
mov
pop
lret
cmp
int
es
push
clc
ja
mov
or
xchg
push
jb
shlb
push
imul
mov
or
stos
sti
xor
scas
jnp
pop
scas
sbb
mov
fisubl
mov
jo
mov
nop
loope
and
dec
jl
xchg
push
push
inc
push
push
jnp
adc
sbb
cmp
in
mov
imul
push
repnz
inc
ret
leave
jle
leave
test
lds
sbb
mov
adc
mov
dec
push
testb
and
scas
xchg
adc
mov
sti
mov
adc
addb
mov
aad
movsl
clc
lods
sub
je
mov
and
pop
sub
js
out
mov
add
popl
test
lret
mov
ss
sbb
and
iret
leave
inc
lods
hlt
inc
xlat
mov
int
xor
iret
fcmovb
pop
adc
jne,pt
mov
sbb
mov
jge
outsl
test
fwait
sbb
mov
dec
jl
outsl
sub
cmp
inc
push
jbe
add
xor
adc
jb
inc
mov
lods
cmp
adc
cmpsb
adc
stos
push
sti
loope
lahf
adcl
sti
nop
loope
pop
or
pop
imul
sbb
inc
cmp
ret
pop
adcl
clc
sub
insl
fdivr
add
add
mov
sub
push
ljmp
or
ret
sub
mov
adc
icebp
imul
mov
mov
sub
test
insb
sahf
inc
adc
inc
mov
and
mov
sub
xchg
mov
xchg
cmc
push
adc
dec
sbb
jmp
sbb
popa
xlat
sbb
cmp
pop
dec
cmp
loopne
sarl
push
mov
jno
dec
aaa
je
sbb
jg
jae
mul
pop
cld
out
adc
loope
lret
loopne
cmp
imul
and
nop
and
ss
imul
adc
mov
adc
jbe
aad
mov
cmp
ja
mov
adc
inc
add
mov
push
js
cmp
das
cmp
in
daa
pop
aad
push
loope
sbb
push
jg
jno
mov
mulb
inc
adc
mov
sbb
hlt
pop
mov
stmxcsr
stos
sub
mov
jns
fyl2xp1
mov
or
rclb
sub
xchg
mov
repz
push
xchg
mov
imul
cld
adc
fnstsw
jp
or
mov
lret
fadd
dec
popa
inc
xor
sbb
push
lds
or
jmp
jae
push
jmp
rolb
es
jne
aam
mov
shll
test
xor
call
cwtl
inc
insb
mov
mov
rorb
int3
or
cmp
pusha
lock
mov
enter
cmp
sub
fdivrs
and
mov
inc
add
cmpsl
dec
sbb
lcall
loop
out
push
jle
sbb
gs
ss
dec
nop
mov
repz
cmpsb
mov
xchg
test
fsubl
mov
sbb
test
mov
jl
rorb
es
dec
movl
fists
jb
aad
mov
mov
jo
scas
inc
add
push
xchg
add
jno
xlat
daa
adc
and
loopne
inc
and
push
mov
lock
mov
adc
jnp
or
addl
pop
push
fbstp
mov
pop
iret
negb
orb
adc
js
ja
inc
popf
adc
sub
pop
movsb
je
pusha
pop
ficomps
pop
dec
pop
js
xor
jecxz
mov
int
and
mov
sub
cwtl
sarb
cs
shlb
roll
loop
pop
pop
push
add
popf
sub
aas
dec
and
out
jle
add
std
cmpsl
mov
inc
xlat
mov
add
xor
and
sub
insb
mov
adc
dec
pop
leave
add
in
dec
divb
xor
shrl
jae
cmp
mov
or
jns
inc
add
or
sub
movl
out
inc
jnp
sbb
add
pop
adc
das
jecxz
sbb
and
push
lds
mov
inc
gs
lea
cmc
xor
pop
dec
and
adc
addb
iret
inc
das
xor
push
aas
mov
sub
jb
mov
rorl
lahf
mov
enter
xchg
xor
cmp
stc
inc
add
jb
in
fists
xchg
push
mov
shrl
ret
ds
xor
mov
jnp
mov
sub
fs
jg
cmp
pop
sub
pop
in
inc
lcall
int
dec
in
lea
adc
into
jne
jae
inc
push
lock
jl
outsb
dec
cmc
roll
inc
jmp
sbb
loopne
mov
pop
jns
sbb
mov
mov
ljmp
shlb
or
in
iret
jecxz
addr16
mov
scas
add
in
clc
mov
mov
push
lock
sti
pop
mov
imul
or
push
sbbb
shl
std
imul
fisubl
mov
movsb
mov
xchg
lahf
or
cmp
sub
rcrb
xchg
stos
jmp
lea
pop
cltd
push
jb
mov
xor
test
sub
jmp
cld
sbb
push
jno
lret
sbb
stos
cmp
clc
or
cmpsl
cmpb
fbstp
enter
jmp
es
jb
sub
cmp
mov
std
lods
stos
movsl
lds
and
and
repnz
insl
mov
call
repz
cmp
push
fdivl
jnp
sub
jns
aaa
mov
jnp
roll
shrl
pop
in
loopne
push
sub
ja
pop
adc
mov
int3
leave
jnp
pop
outsb
cld
xor
call
imul
inc
mov
insl
add
dec
stc
jnp
aas
sbb
cmp
jnp
cmc
and
adc
std
push
ret
push
mov
jle
xchg
inc
jl
xchg
iret
imul
cmp
icebp
jmp
aam
rcrl
rcrb
push
mov
pop
mov
cmp
mov
mov
lods
xchg
push
add
jb
sarl
cld
pusha
insb
ss
mov
test
das
stos
and
lock
jl
inc
add
cmp
cltd
dec
jbe
and
sub
inc
jp
in
xor
nop
test
jge
popa
fcmovbe
sbb
insl
jge
inc
pop
jge
je
jbe
pop
out
and
push
push
sbbl
daa
push
cmp
jbe
bound
pop
sahf
adc
neg
mov
mov
mov
sti
out
mov
or
ret
and
dec
mov
lcall
wbinvd
sbb
dec
mov
frstor
sub
lods
pop
lock
lea
mov
pop
inc
xchg
lods
ljmp
mov
adc
lcall
xchg
mov
or
mov
push
loopne
mov
andl
xor
into
bound
inc
xor
out
add
dec
lds
and
nop
inc
clc
scas
jg
mov
add
add
sbb
inc
dec
xor
jo
sbb
mov
das
dec
cmp
xchg
sub
push
mov
xor
jmp
rorl
outsl
fsubl
jns
rol
hlt
test
shl
add
dec
xchg
arpl
test
sub
add
pop
mov
ficompl
scas
sarl
pop
xor
dec
or
lods
sti
mov
inc
push
add
ss
fwait
movsl
mov
cmp
lods
dec
adc
jbe
cmp
cmp
arpl
push
incl
dec
mov
pop
int
mov
or
mov
ljmp
mov
xchg
and
outsb
fsub
in
lock
pop
adcb
cli
sub
and
in
cvtps2pi
leave
xor
mov
pop
mov
cmp
or
mov
ret
in
jg
cmp
sub
or
or
add
mov
mov
hlt
push
scas
and
fdivl
mov
inc
xor
mov
fwait
xchg
popl
adc
mov
and
int
mov
pop
or
mov
out
bound
popf
sbb
in
dec
inc
add
rcll
scas
xchg
aad
jge
xor
push
jge
pop
cmp
adc
lahf
or
pop
arpl
testl
aad
fnstenv
insl
or
adc
lock
out
cmp
ret
cmp
mov
pop
inc
test
lods
push
shll
es
aad
gs
push
and
fmuls
repz
mov
mov
call
pop
mov
push
jge
mov
es
mov
test
rolb
push
fidivl
in
sub
fstpt
cmp
sub
andl
pop
in
mov
mov
inc
out
mov
push
cld
ljmp
dec
idivb
movsb
sbb
add
test
hlt
movsb
sbb
lds
and
pop
stc
test
mov
pop
and
pop
negb
and
adcl
insb
xor
and
xchg
sbb
ds
fs
sub
mov
into
fwait
push
mov
cs
ljmp
das
push
nop
inc
aam
mov
cmp
push
call
push
pop
sub
jae
aam
cmp
stos
bound
iret
jns
cmp
shll
outsl
imul
lock
dec
mull
cmp
push
sub
xlat
out
adc
lcall
sti
testb
popf
mov
xor
fcmovnb
sub
cltd
pop
popa
js
mov
pusha
jmp
mov
int
cmp
jg
or
xchg
mov
ljmp
imul
sbb
dec
or
in
mov
adc
aam
inc
mov
test
mov
cmp
push
cld
lahf
js
test
pop
cmp
jne
mov
or
and
and
xchg
cmp
stos
push
push
hlt
loop
xor
call
ret
mov
pop
mov
push
xchg
mov
xor
adc
adc
iret
shlb
stos
dec
inc
push
push
or
jecxz
pop
push
add
push
mov
addr16
ljmp
out
call
or
sarb
and
and
cmp
jg
addr16
push
je
les
cmp
or
mov
sbb
int
xor
push
jno
outsl
inc
xor
mov
into
lahf
push
push
inc
or
loope
aaa
test
stos
xchg
js
in
ljmp
cmpsb
lahf
push
notl
push
aas
sub
lret
mov
loope
push
pop
mov
sub
xor
xor
pop
scas
lea
stos
add
dec
or
adc
pop
adc
rolb
or
lods
arpl
add
cmp
or
repnz
or
dec
ret
popa
adc
arpl
jno
jae
icebp
sub
mov
sti
jns
jp
pusha
mov
add
loope
push
popa
dec
cmpsl
test
movsl
mov
add
adc
mov
inc
into
sbb
mov
jg
bound
xchg
mov
lods
cld
add
fistpl
repnz
sti
push
mov
push
sbb
push
add
test
icebp
xor
sar
jne
xlat
mov
outsl
jmp
adc
es
sahf
lahf
ja
xor
adc
rorl
js
lret
insb
sbb
mov
pop
into
lcall
dec
nop
cmpsb
pop
or
add
xor
jmp
aad
inc
insl
jge
aam
fistps
and
sub
loop
icebp
rorb
in
mov
aaa
xchg
ror
in
mov
mov
xchg
imul
std
mov
add
ja
pop
int
sbb
imul
faddl
mov
sti
cmp
pop
push
shl
ds
fistl
sbb
ds
xor
mov
inc
sbb
out
test
scas
pop
mov
adc
mov
sub
add
mov
les
xor
and
mov
xlat
dec
jno
imul
jae
mov
int
arpl
lock
cmpsb
repz
inc
jb
mov
dec
enter
rorl
adc
adc
pop
mov
mov
jmp
fwait
cmc
and
es
faddp
sub
lock
bound
sub
jp
jno
flds
mov
push
pop
mov
mov
test
pop
andb
cmp
cmpsl
or
lahf
dec
mov
adc
js
lea
in
std
sub
mov
jns
sub
mov
inc
in
mov
and
ja
inc
pop
push
mov
shll
xor
pop
pmaxub
or
dec
insl
or
fucomp
jle
popf
sbb
sbb
mov
cmpsb
mov
lcall
lea
cmp
gs
fucomip
movsb
push
mov
push
mov
fcoml
mov
int3
jge
jns
or
sbb
shl
nop
push
jbe
jno
out
jnp
push
mov
out
imull
jle
call
dec
fisubrl
pop
ds
imul
adc
mov
outsl
jp
inc
mov
popf
cmp
idiv
xor
lret
push
movsl
dec
cli
in
mov
rol
add
pusha
and
lahf
mov
sbb
mov
adc
loope
fisttps
loope
xchg
std
sahf
xorl
push
jbe
out
lahf
mov
pusha
pop
dec
cwtl
insb
cmpb
lds
cmp
push
and
and
xchg
in
ret
filds
outsb
mov
test
hlt
adc
mov
xorl
xor
fcomps
aaa
push
xor
hlt
inc
push
sbb
sbb
je
mov
ret
mov
cs
je
ja
xor
sub
xlat
outsl
roll
cmp
push
rorl
push
fisubs
push
dec
es
enter
dec
cmp
sbb
aas
cmp
enter
icebp
jg
xchg
xchg
xchg
push
es
mov
daa
cmp
jmp
add
mov
adcb
popa
loop
mov
pop
int3
mov
mov
sub
add
les
dec
jae
std
into
jge
popf
pusha
mov
movsb
push
sahf
adc
xchg
sub
mov
mov
xor
mov
xor
pop
jno
outsl
pop
xchg
inc
cmpsb
pop
or
and
mov
mov
ja
in
movsb
jp
and
jecxz
cmpsb
mov
xlat
adc
cmpsl
mov
ficompl
lret
mov
add
or
js
sti
sarl
rolb
mov
mov
loope
xor
bnd
cmpsl
xchg
lods
xor
leave
push
dec
or
or
jno
push
mov
cmp
cmp
shrb
sahf
data16
leave
in
adc
xchg
and
or
call
jne
jmp
push
outsl
add
xchg
push
dec
das
jnp
jns
and
cmp
push
add
and
dec
test
fldl
aaa
in
mov
loopne
sub
sub
das
gs
add
lret
adc
faddp
popf
xor
cmp
cmp
pop
mov
dec
fiadds
push
pop
and
fists
stos
adc
stc
cmp
testl
jmp
lods
pop
push
mov
adc
add
jg
pop
push
sub
std
pop
inc
ret
mov
sub
xchg
ljmp
jg
jnp
jae
sahf
jl
cmc
dec
lcall
jmp
and
or
cltd
sahf
xchg
sahf
pop
and
jg
add
push
fnsave
xchg
xchg
jp,pt
fstpt
loope
int
rcrl
es
mov
fwait
push
pop
mov
mov
hlt
idivb
push
pushf
fdivrp
xchg
ds
add
lods
or
loope
shlb
mov
lret
push
mov
lcall
jmp
xor
push
cltd
dec
out
das
sub
loop
or
adc
ds
popf
xchg
jb
sub
ret
ds
cmp
and
nop
jp
cmp
jge
mov
sbb
pop
push
ret
mov
sbb
xor
leave
mov
lea
dec
push
push
popa
out
pop
push
scas
cwtl
out
outsb
dec
adc
sub
xor
mov
lret
jp
adc
xlat
and
mov
pop
adc
xchg
mov
es
movsl
adc
sub
sahf
ret
push
cld
push
mov
movsb
push
mov
sub
aad
or
sbb
push
mov
cli
inc
add
pop
in
fstpt
stc
push
pop
shrb
imul
jae
loope
sbb
cmovg
xchg
lahf
adc
pusha
mov
loope
mov
dec
mov
push
test
aam
add
repz
mov
ds
jmp
iret
mov
dec
xchg
lret
jge
in
jge
popf
mov
leave
add
push
pop
insl
les
mov
push
sbb
jmp
push
lock
or
aaa
iret
mov
int
clc
fisttps
cmp
fcom
sbb
mov
jge
jmp
mov
push
aas
sbb
outsl
into
daa
mov
jae
daa
andb
fstpt
cmp
or
popf
jmp
mov
dec
push
lahf
fnstenv
push
mov
cmp
adc
inc
jae
jnp
mov
mull
add
jno
xor
mov
sbb
loop
sbb
in
mov
xchg
mov
stos
mov
sub
pusha
push
or
repnz
sbb
add
in
add
addl
push
in
pop
ja
ljmp
cmpsl
mov
arpl
dec
outsb
push
lret
addl
jg
aad
lcall
pushf
es
and
repnz
arpl
mov
pop
stos
enter
out
arpl
leave
jmp
ret
xchg
lock
daa
mov
mov
dec
cld
jb
fdivrs
imul
sub
inc
pushf
insl
movsb
fmull
jmp
loopne
int3
pop
clc
addr16
sub
cld
testl
out
test
scas
aaa
out
sub
cli
sub
sar
jae
out
cltd
aam
and
fsubrl
pop
lock
das
stos
push
cld
mov
mov
pusha
rcrb
pop
in
xchg
inc
inc
test
mov
push
or
fs
adc
fbld
adcb
pop
push
es
leave
jmp
rol
xor
pop
cs
mov
aas
incl
enter
testl
cmp
fs
pop
js
lret
fwait
and
ret
mov
jbe
arpl
data16
lret
mov
out
loopne
pop
add
inc
cwtl
inc
jo
into
adc
lahf
mov
push
push
outsb
pop
sbb
mov
shrb
cmp
pop
pop
outsl
xchg
aaa
data16
les
jne
mov
fwait
gs
jb
dec
mov
mov
adc
dec
sbb
inc
sbb
test
mov
push
mov
stos
aas
pop
push
cmp
dec
mov
mov
cli
imul
push
inc
std
xor
xchg
test
mov
sbb
pop
pop
sbb
jecxz
mov
popa
aaa
test
jno
xchg
jl
jl
jae
in
sti
repz
lahf
mov
out
cmp
jb
sbb
jecxz
clc
lahf
ss
popf
and
mov
add
sub
imull
sub
push
xchg
stos
push
xlat
ds
mov
adc
push
sub
adc
cmp
mov
rcll
xchg
push
xchg
movsl
or
test
sti
in
data16
adc
aam
mov
std
out
lcall
push
jnp
jle
hlt
cmp
and
sbb
pusha
cmp
xchg
lahf
pushf
add
add
jae
aas
jae
cmp
idivl
jno
fldenv
rep
mov
push
stos
movsl
push
jo
jne
jo
or
and
jecxz
jle
fiadds
cmp
fwait
cmp
rorb
inc
cmp
jp
subb
test
imul
xor
cld
and
clc
sub
xchg
mov
adc
xchg
lds
stc
cmp
and
jae
out
xchg
or
cmp
fwait
mov
stc
pop
cltd
shrb
push
call
push
and
imul
lahf
addb
stos
pop
ret
jno
std
xchg
mov
arpl
add
aad
mov
cmp
sub
pop
cmp
xchg
add
std
mov
xchg
movsl
push
adc
cmc
add
jecxz
xor
add
repz
jmp
push
lahf
cwtl
mov
test
outsb
inc
and
clc
xor
adc
aam
push
add
push
sbb
lods
and
aas
daa
incb
outsl
filds
sbbl
subb
push
push
xor
daa
dec
daa
ret
sbb
or
ds
int
out
movsb
mov
fchs
push
bound
jo
adc
inc
bound
pop
js
xlat
in
sarb
movsl
iret
push
cmovno
push
fsubrl
lock
outsb
or
lock
or
ljmp
and
hlt
leave
cs
cwtl
adc
push
mov
adc
push
jg
pop
jno
lcall
bound
pop
mov
jp
inc
or
ja
fcmovnbe
addr16
aaa
xchg
negl
mov
stc
inc
scas
cmp
push
addb
in
adc
jg
xchg
mov
repz
fs
lcall
xchg
inc
stc
sub
push
addr16
fnstenv
adc
jae
popa
add
lahf
jle
pop
cmp
popa
ret
cwtl
sub
testl
rcrl
mov
cmp
cmpsb
and
sub
repz
sbb
mov
xchg
in
pop
lods
mov
popa
cmpsb
movsb
mov
rcl
cmp
sbb
or
test
mov
and
lods
ret
cmp
pop
jecxz
cs
cwtl
out
mov
sub
inc
pop
and
sub
sbbl
loop
ss
mov
inc
mov
testb
xchg
arpl
ss
push
cmp
mov
xlat
idivl
addr16
pop
aad
and
xchg
ret
sub
in
inc
loopne
iret
stos
jne
out
fwait
jmp
daa
pop
jo
aas
ficompl
aas
add
popa
xchg
or
pop
jl
mov
in
sbb
mov
sahf
add
xchg
lock
or
stos
push
mov
mov
mov
jl
arpl
lahf
jbe
in
pushf
add
sbb
aad
sub
lea
add
jecxz
jecxz
adc
mov
jl
jp
rorb
xchg
dec
repnz
cmp
movsb
adc
out
outsb
mov
push
in
mov
inc
nop
jb
insl
dec
pop
les
mov
sub
cmp
push
arpl
cltd
or
sar
daa
mov
fbstp
dec
mov
outsl
and
dec
mov
adc
or
xchg
dec
divl
inc
sbb
pop
push
and
std
dec
add
jno
sbb
arpl
dec
inc
cmp
ret
add
stc
jge
into
push
out
and
lret
xor
lahf
adc
fsubl
inc
out
mov
mov
sbb
ret
es
dec
jle
mov
lret
js
leave
or
cmp
sbb
dec
fisubrs
xor
stos
inc
movsl
and
jno
stc
push
fisubrl
nop
test
inc
add
stos
add
sbb
jge
jmp
test
cmp
cld
inc
push
jnp
arpl
mov
lcall
hlt
aas
adc
out
or
push
sub
mov
cmp
aaa
imul
push
shlb
nop
not
pushf
push
fucompp
fistl
popa
out
scas
insl
push
inc
xchg
xchg
xor
mov
fwait
das
push
aam
dec
add
push
ret
xchg
insl
adc
fcoms
movsl
enter
popa
cmp
fcmovb
lahf
enter
lcall
movsb
push
jg
sub
push
aam
lahf
ret
mov
movsb
dec
jle
pandn
or
sbb
sbb
je
lods
push
enter
and
and
bound
div
adc
push
cwtl
out
lea
in
cmc
mov
fimuls
push
mov
stos
cmpsl
xlat
sbb
sub
jmp
jno
das
adc
shlb
mov
lahf
rorl
das
add
inc
jl
addb
gs
inc
out
add
jg
inc
sahf
mov
adc
repnz
aad
data16
add
inc
jb
xor
sub
and
xchg
adc
and
pop
mov
push
scas
pop
and
xor
loop
sbb
rorl
movsb
cld
outsl
loop
subl
xorb
jb
and
adc
push
fidivrs
test
cmp
mov
push
push
mov
movsl
ret
jle
sub
rorl
or
inc
out
mov
mov
cld
loopnew
in
dec
cmp
push
xchg
xchg
popa
or
imul
sbb
sarb
hlt
push
loope
mov
test
jae
clc
xchg
sub
out
push
test
fists
or
out
inc
ljmp
ja
mov
repnz
xor
push
out
jae
jmp
lods
add
out
add
hlt
cmpsb
and
outsl
and
fwait
jae
jo
test
in
insl
lret
and
xor
stc
pop
push
mov
or
and
mov
inc
adc
mov
dec
sub
sub
or
mov
fldenv
and
mov
xor
jno
ljmp
or
or
insl
add
mov
in
shlb
inc
dec
mov
and
add
loopne
mov
shrl
dec
clc
arpl
ds
jg
lcall
push
loope
dec
aas
sahf
sbb
sbb
push
popa
mov
mov
sub
xlat
mov
and
daa
adc
mov
arpl
sbb
jnp
arpl
lea
out
jecxz
cmp
push
dec
jle
xlat
movsb
mov
pop
testb
sbb
cmp
int
jecxz
dec
and
mov
cli
push
mov
rcl
jne
lds
ret
repnz
mov
repz
ret
xchg
sti
adc
and
xchg
sti
out
les
xchg
das
and
adc
repnz
inc
std
xchg
or
rcll
jb
adc
pop
in
pop
insl
stc
stos
sbb
hlt
and
xor
or
popf
int3
mov
push
ret
out
push
xlat
add
aad
push
inc
rolb
cmc
inc
jl
cmc
jae
mov
jo
or
je
aaa
cli
repnz
mov
scas
inc
jne
xor
movsl
mov
mov
inc
xor
jmp
sti
sbb
inc
sbb
mov
jecxz
and
adc
mov
xor
lods
jle
sti
fisubl
test
sub
mov
add
cld
and
pop
mov
push
mov
add
enter
sbb
and
iret
jb
mov
ret
loope
test
cmp
cld
pop
ret
mov
subb
dec
dec
aas
cmpsl
mov
imul
push
rolb
push
loop
dec
into
add
xor
idivl
dec
jmp
mov
sbb
mov
ret
cmp
push
out
in
mov
cmp
jnp
dec
xchg
sbb
orb
dec
dec
repz
fwait
aaa
test
dec
movsb
pop
and
lret
stos
mov
cmpsb
and
shrb
mov
sbb
lds
mov
mov
fiaddl
sub
adc
pop
je
cmp
jno
int
jp
push
mov
add
push
push
mov
cmp
jnp
xor
fnsave
insl
mov
cmpb
xchg
sbb
jg
scas
repnz
sbb
mov
rcrb
or
add
mov
mov
inc
cmpsl
addr16
in
mov
lods
xchg
int3
xchg
cld
rol
ret
mov
xchg
jg
ja
lods
cmp
and
cmp
orl
push
cmp
pop
cmp
adc
sub
sbb
out
mov
int3
js
mov
fidivs
and
xorl
sbb
mov
loope
cmpsb
mov
cmp
aaa
mov
mov
je
arpl
in
or
in
push
stos
mov
repnz
adc
adc
mov
mov
push
adc
sbb
stos
rorb
repnz
aad
and
test
xchg
push
inc
lock
mov
cli
push
mov
pop
ljmp
push
sub
scas
pop
dec
jo
mov
cmovo
xchg
jb
sub
mov
mov
mov
pusha
scas
lods
fdivs
imul
dec
jne
sbb
bound
loope
sbb
xor
inc
into
rorl
fdiv
dec
dec
fnsave
adc
jg
rclb
xor
mov
movsl
std
inc
xchg
jbe
sahf
arpl
adc
adc
sti
mov
or
xor
mov
fcomps
pop
loop
fisubs
lods
repz
mov
lcall
or
sub
in
xchg
mov
adcl
out
loopne
jne
xchg
hlt
xor
pop
mov
cld
rolb
outsl
out
les
daa
aas
mov
dec
add
das
scas
sub
pop
out
dec
and
pop
push
inc
inc
sar
or
aaa
and
cmp
sbb
out
lret
mov
pop
cmpsb
dec
mov
mov
jge
fs
lods
push
add
icebp
arpl
rclb
fdivrp
sub
std
push
xchg
push
jae
xor
cmovg
push
ds
cmpsb
push
xor
mov
fs
xchg
xchg
mov
jno
in
xchg
mov
xor
jbe
lods
or
push
fistl
mov
mov
cmpsb
sahf
add
add
mov
inc
jmp
out
sub
in
imul
sub
popf
push
jno
dec
call
into
mov
inc
jo
xchg
pop
xor
sbb
xchg
scas
jno
das
gs
mov
jl,pn
mov
fstpl
adc
and
jmp
or
cmp
icebp
jbe
add
out
pop
cmp
mov
lds
xor
fistps
loope
adc
es
arpl
xchg
andb
pop
nop
es
sarl
or
shlb
add
pop
push
push
adc
or
in
fwait
cld
sbb
fnstsw
jbe
mov
xchg
ret
call
inc
lahf
shrl
sbb
popa
enter
inc
cmc
inc
cli
out
cwtl
cmp
jle
adc
scas
jecxz
outsb
lods
xor
jbe
out
jg
jne
into
jp
outsb
pop
push
into
xchg
mov
push
xchg
sub
clc
lea
imul
leave
xor
adc
or
jnp
mov
push
daa
and
push
js
stos
push
or
pop
inc
push
adc
xor
add
cwtl
loope
hlt
pushf
loopne
or
push
push
mov
inc
aad
sarl
add
push
mov
into
fnsave
mov
jb
movl
mov
mov
sbb
jmp
sarl
loope
aaa
sub
cld
pop
loopne
push
shl
pop
jg
hlt
push
push
and
mov
pop
test
lret
mov
xor
or
fdiv
fldl
jo
or
andl
addr16
adc
xchg
xchg
lods
xor
xchg
incl
mov
fwait
mov
jne
aas
je
xor
jne
mov
mov
inc
negb
dec
sub
sbb
mov
ret
out
repz
sub
imull
idivl
inc
pushf
and
lcall
cmp
loop
lds
cmpsb
ficoms
inc
pop
popa
push
and
jb
mov
push
leave
pusha
adcb
das
stos
and
insl
sarl
inc
fstpl
push
ss
push
ret
pushf
mov
insl
and
xorl
mov
inc
xchg
call
jae
test
jmp
xlat
push
push
push
pop
add
mov
or
cwtl
outsl
loope
test
or
repnz
daa
daa
and
push
xchg
adc
test
outsl
cli
test
xor
in
clc
cmp
mov
frstor
mov
lret
mov
orb
inc
push
pop
sub
addl
mov
sbb
fwait
imul
rdtsc
pop
pop
jmp
aam
cwtl
fidivrl
mov
adc
cmp
aam
cmpsl
push
dec
daa
sahf
cwtl
and
into
dec
shll
pushf
sub
jmp
push
jg
icebp
inc
sti
pop
mov
sets
xchg
jmp
or
stos
lret
imul
add
and
mov
push
xor
or
inc
movsl
jecxz
dec
inc
ljmp
fsubrl
cmp
jge
jnp
push
aad
mov
andl
int
xor
mov
jp
shll
test
add
pop
jae
xchg
and
sbb
push
sbb
dec
push
pop
andb
lahf
addr16
inc
enter
push
cmc
std
into
shrb
in
cmp
sub
mov
out
jnp
lock
jmp
ss
pop
sub
mov
adcl
enter
xchg
addr16
pop
ficomps
or
jns,pt
jbe
scas
pushf
orl
cwtl
and
push
mov
mov
cwtl
rcrb
sbb
cmp
hlt
mov
insb
out
push
gs
push
mov
mov
push
sub
xchg
mov
ja
push
add
dec
movsl
cli
pop
adc
add
scas
cltd
xor
cltd
jmp
shl
les
pop
leave
pop
ficoms
or
movsl
aas
push
loop
aam
mov
nop
jns
pop
bound
dec
jecxz
int3
jp
add
sub
out
roll
int
or
cmpsl
adc
add
aad
js
arpl
sbb
pop
bound
shl
or
mov
imul
rorl
xchg
loop
fdivrs
or
inc
scas
inc
pushf
es
xchg
fucom
and
inc
out
pop
adc
push
push
push
insl
je
and
and
sub
lcall
leave
stos
jl
std
mov
inc
call
cmpsl
aad
imul
mov
cmp
jmp
daa
cld
popf
and
push
adc
pop
cmc
inc
repz
and
push
pushf
loopne
push
lods
add
sub
testb
adc
bound
bound
adc
lds
xlat
pusha
mov
movsb
int3
insl
xchg
jns
cs
jl
call
xchg
xchg
jecxz
adc
int
push
inc
xchg
stos
cld
movsb
es
fs
inc
pop
mov
or
xor
sar
mov
outsw
ret
adc
and
xor
gs
insb
insl
pop
leave
imul
sbb
fsts
inc
lcall
inc
and
or
pop
pushf
lcall
mov
lods
mov
push
xchg
int
punpcklbw
mov
pop
js
cmp
sub
call
xor
cld
sbb
xor
pop
xchg
pop
mov
sub
add
lret
fsubr
mov
mov
scas
ja
push
mov
or
sbb
movsl
scas
sbb
addr16
les
fsubrs
xchg
or
inc
scas
adc
xor
into
ret
shrl
bound
jge
bound
xchg
ljmp
mov
inc
js
fstpt
test
rolb
andb
cmc
arpl
xchg
push
jbe
sbb
dec
outsb
mov
sar
xchg
bound
mov
push
adc
movsb
call
in
das
pop
add
pusha
or
popa
inc
pop
sahf
push
stc
xchg
jl
leave
push
add
jno
xor
jl
jns
test
lcall
push
repnz
arpl
rcl
je
icebp
lret
js
lcall
pop
mov
push
outsl
push
push
test
mov
xchg
lahf
sbb
arpl
call
xchg
cmpsl
inc
push
aaa
mov
je
xor
cmp
pop
sub
rol
jns
sbb
js
outsb
mov
lods
je
data16
outsb
das
and
sbb
jle
xchg
lods
jl
sbb
lret
xchg
daa
mov
sbb
mov
jae
or
ss
fldl
sub
xor
pop
out
filds
icebp
push
rcll
jns
push
push
dec
add
lret
shrl
dec
and
inc
das
xchg
xor
lock
pushf
call
jg
cmpsl
outsb
dec
sbb
sbb
and
sahf
pushl
addr16
imul
sbb
jns
movsb
and
mov
mov
movsb
and
cmpsl
add
stos
and
push
call
jg
dec
js
nop
sub
pop
stc
mov
je
mov
or
mov
scas
out
jne
fs
ficomps
jge
jg
ds
mov
xlat
stos
pop
sub
add
mov
dec
xor
pop
sub
cli
sti
loop
cmp
fwait
push
push
xor
adc
pop
into
lock
inc
or
add
adc
xchg
mov
daa
ret
dec
add
adcb
outsl
cmc
sbb
out
or
push
lcall
cmp
pusha
outsl
mov
lods
pop
push
out
sbb
adc
and
repz
cmp
inc
adc
xchg
aam
adc
xor
jo
daa
and
test
mov
scas
jns
adc
add
sbb
testl
fldl
into
repz
xchg
in
loopne
dec
out
es
movsl
inc
cmp
mov
cmp
stos
xor
mov
ja
add
scas
mov
mov
jo
jno
les
xchg
mov
je
iret
mov
popa
test
popf
mov
mov
negb
fistpll
fsubrs
inc
inc
orl
repnz
mov
mov
into
psubsb
push
mov
repnz
and
xor
ret
cmpsb
leave
sub
push
in
mul
mov
xor
inc
jne
add
sub
jbe
lds
push
mov
lods
loope
xchg
push
dec
leave
mov
out
adc
popf
xorps
mov
sub
jg
insb
lock
cmp
movsl
ds
xlat
sbb
mov
loope
jmp
ret
outsb
adc
push
inc
inc
add
ljmp
pop
push
mov
mov
outsb
cltd
jno
adc
mov
mov
orb
or
fnsave
dec
dec
jne
les
mov
or
psubq
or
testb
and
xchg
adc
ss
pop
insb
inc
push
js
sbbl
push
cmp
mov
mov
in
mov
out
cmp
aam
and
fs
rorl
outsb
sbb
pop
loop
xchg
mov
loopne
gs
out
xchg
xchg
inc
daa
div
shrb
test
addr16
dec
int3
mov
sbb
imul
in
push
push
mov
inc
pop
xorl
cmp
les
imul
xor
adc
xor
fwait
dec
or
sub
mov
leave
out
push
dec
mov
or
test
jmp
push
cmpsl
in
std
pop
pop
dec
jmp
icebp
je
pushf
add
ffreep
int
lret
ficoml
js
js
dec
aaa
scas
out
dec
aaa
pop
cli
and
movswl
arpl
lret
jle
adc
fdivs
das
insl
sub
jo
inc
dec
push
jmp
xor
mov
mov
gs
mov
fcompl
mov
cmpsb
lds
xor
outsb
xchg
push
loopne
or
mov
xchg
dec
jbe
push
bound
clc
iret
and
outsb
mov
adc
mov
pop
rclb
xlat
mov
add
mov
mov
es
lahf
std
cwtl
mov
pop
mov
lret
mov
imul
add
loopne
mov
inc
sbb
xchg
dec
test
xchg
push
or
sbb
ja
stc
cli
xor
mov
sub
jbe
mov
push
jbe
aam
xor
ret
add
mov
and
push
pop
dec
sbb
jo
or
xor
out
cli
sahf
xchg
repz
sub
loopne
jmp
or
mov
mov
lds
mov
adc
or
pop
sub
pop
push
lcall
push
sub
rcrl
push
aad
jns
and
push
or
fistpl
sbb
sbb
push
jmp
js
push
xchg
nop
push
into
mov
jmp
mov
jb
or
ret
insl
and
add
fistps
stos
push
mov
cmpsl
dec
xor
fldl
fmuls
lds
sbb
or
sbb
cmpl
aaa
std
movsl
in
push
les
test
xchg
mov
mov
out
movsb
xchg
rcll
mov
jns
pop
adc
lahf
rorl
lcall
inc
adcl
jmp
push
cmpsl
bound
lods
mov
jl
loopne
ret
ljmp
xorl
or
sbb
pop
orb
sub
dec
and
jge
lods
adc
je
iret
cs
stos
sbb
das
sarb
pusha
nop
fwait
je
lret
dec
xchg
dec
xchg
fisubs
adc
faddl
pop
int3
push
mov
pushf
hlt
sub
ss
xor
cltd
pop
shlb
mov
inc
lcall
mov
jnp
fimull
add
xchg
inc
loopne
push
lods
fmuls
inc
cmp
xchg
dec
ja
aas
push
js
mov
jnp
in
ds
xchg
mov
jmp
mov
mov
or
sbb
xor
cld
test
loopne
out
insl
loope
inc
sar
outsl
sbb
push
cs
jae
rolb
xchg
jg
subl
mov
imul
lods
lods
jae
into
or
mov
gs
das
aas
ds
cmp
jne
sub
push
out
lea
jbe
js
cmc
sbb
adc
lcall
and
fisubl
stos
sti
xor
jae
cmc
cmp
lahf
loop
jno
mov
cld
aad
rorl
inc
out
mov
fbstp
subb
out
mov
addr16
js
mov
pop
or
jb
stos
rcrb
mov
cmp
ret
mov
insl
cmp
mov
or
aas
xor
pop
pushf
loopne
clc
inc
ss
repnz
xchg
cld
dec
xor
pop
mov
mov
add
jne
jbe
pop
sbb
in
sarb
test
cmp
lret
jo
push
js
xchg
aaa
xchg
lret
gs
pop
fmuls
xor
scas
fsubr
pop
je
cmp
mov
negb
inc
jmp
inc
pop
nop
add
pop
ret
popf
jne
and
sbb
lds
jg
jae
pop
add
cmp
mov
cmp
call
test
dec
lea
adc
sbb
into
js
jns
adc
faddl
mov
in
mov
incl
add
ret
pop
jle
fstpt
adc
pop
inc
xchg
sub
inc
adc
cmc
push
pushf
in
pop
adc
push
movsb
call
or
xor
add
sub
test
push
push
pop
pop
outsl
aas
adc
push
test
pop
ja
lea
clc
cmpsl
pop
pop
mov
fcomip
vpmovsxbw
pop
mov
mov
push
xchg
stc
gs
mov
fsubrl
mov
out
lods
dec
mov
mov
jno
lcall
ds
mov
xchg
leave
sbb
dec
push
xlat
push
sbb
sbb
jmp
push
jp
mov
sub
inc
mov
gs
jg
sbbb
xor
add
fidivrs
xchg
subl
jno
scas
xor
arpl
mov
pusha
sti
mov
loope
lea
inc
pop
push
fidivrs
les
xor
faddp
or
add
incb
roll
or
pop
aam
fwait
push
mov
loopne
fs
andl
lods
mov
xchg
call
and
add
or
mov
push
test
mov
dec
out
insb
sub
repz
test
mov
jnp
aas
loop
ds
pop
test
aaa
jp
fcoml
lcall
push
mov
add
mov
roll
push
xchg
test
pop
ss
test
test
cmp
lock
adc
jb
pop
pop
inc
jne
adc
pop
dec
test
pop
hlt
adc
pop
sbb
or
mov
sbb
push
in
clc
push
cmp
sbb
mov
jns
dec
dec
xor
pushf
scas
adc
repz
xor
or
dec
and
mov
shrb
cs
ds
in
flds
mov
stos
scas
stos
shl
roll
out
and
add
ficoml
sub
mov
movsb
iret
and
sahf
std
jae
xor
cmpsb
lret
test
mov
hlt
adc
fstps
xor
addr16
pop
add
adc
and
mov
out
inc
push
jnp
pop
iret
dec
dec
jl
or
cmp
insb
mov
mov
push
push
lcall
sbb
push
mov
dec
sub
sbb
mov
in
cld
pushf
stos
mov
das
dec
in
inc
loop
mov
fwait
dec
sbb
mov
jae
add
push
cmp
sti
pop
add
or
into
sti
imul
out
loopne
xchg
inc
jne
popa
xchg
cwtl
xchg
add
sub
ss
ret
out
rcl
push
scas
dec
inc
lds
mov
xor
dec
mov
fiaddl
movsl
out
filds
lods
xor
mov
cmp
pushf
lret
out
xchg
ja
mov
lret
nop
xor
andl
xor
xor
mov
mov
adc
xchg
sub
cmpsb
fs
cwtl
mov
clc
cld
jle,pn
repnz
aam
scas
in
adc
mov
loopne
loop
xchg
pop
les
jns
jb
add
jb
cmpsl
data16
data16
movl
pusha
jo
pop
mov
pop
fdivl
imul
fistl
mul
xchg
in
push
xchg
or
insb
pop
dec
ja
inc
repz
add
dec
fwait
jo
dec
and
add
adc
negb
ficoml
add
xor
mov
mov
dec
cmp
into
sub
fstpl
or
prefetchnta
or
adc
iret
pop
nop
pushf
jecxz
xor
adc
scas
sbb
pop
pop
push
jmp
mov
jnp
push
mov
push
or
jl
inc
dec
rclb
insb
mov
push
cmc
je
add
jg
sbbb
rolb
movsb
xchg
imul
dec
add
push
stos
inc
push
xor
xor
fstps
call
xorl
xor
inc
push
or
push
cmp
rcr
jb
gs
xor
mov
cmp
mov
imul
or
sbb
not
push
daa
call
jl
cli
jge
dec
movsl
push
add
jne
lret
mov
data16
and
push
adc
fs
sbb
fistl
cmpsl
jecxz
xchg
in
jo
adc
pop
aam
jmp
pop
push
sahf
pop
call
xchg
aad
sbb
in
clc
fldt
ror
pop
push
dec
xor
fs
cmp
cli
inc
fstl
aam
sbb
enter
mov
push
inc
jae
push
sbb
mov
adc
in
xor
xor
movsb
jae
ret
out
xchg
mov
fwait
xchg
xchg
xchg
sub
or
out
jp
popa
mov
lds
add
aas
movsl
rcl
mov
cmc
or
lcall
push
es
std
pop
push
call
jg
sub
aas
cmc
mov
dec
jg
push
shll
stos
pop
shl
sbb
stc
or
xor
adc
dec
add
out
pop
mov
lret
data16
mov
cmp
inc
enter
mov
imul
sbbb
aas
jg
push
dec
push
and
mov
xchg
sub
dec
xchg
std
mov
fidivl
call
xchg
add
nop
fildll
jae
outsl
fistl
and
flds
inc
push
icebp
mov
addr16
sbb
push
stc
scas
mov
lahf
sub
outsl
or
xchg
or
cmp
jecxz
stc
movsb
cmp
mov
iret
dec
in
fstpt
or
sbb
cli
sahf
cmpsl
cmc
adcb
mov
pop
repnz
loope
sub
sbb
lret
popf
in
js
push
inc
jb
push
push
xor
push
pop
cmp
cmp
bound
mov
addb
rcrl
int3
int3
fldz
sub
fsubl
pop
mov
stos
testb
cmpsl
push
fsubs
fsubl
xor
xchg
pop
push
push
jno
test
std
xchg
in
mov
cmovns
aas
mov
push
pusha
jae
cmp
jge
dec
xchg
cmp
add
jmp
arpl
pop
xchg
jp
push
testl
xchg
imul
adc
mov
adc
ret
jg
push
or
out
add
div
inc
scas
or
popf
fwait
sub
int
pop
mov
stos
shlb
jg
das
mov
adc
xor
cmpsb
call
aad
movsl
push
hlt
pop
cli
xchg
pop
outsl
icebp
pop
in
iret
inc
enter
push
repnz
pop
cmp
pop
inc
scas
in
test
test
cmpsl
sti
pop
sbb
out
push
sub
out
and
daa
xchg
sbb
in
fadds
repnz
push
and
and
mov
imul
clc
cmp
or
loopne
inc
rol
lret
movsb
sub
enter
fsubrs
shl
leave
sbb
sti
lods
in
mov
jne
xchg
pop
xor
xor
cmp
popa
nop
adc
dec
dec
mov
and
and
shll
loopne
ficoms
aam
push
cmp
adc
sbb
lahf
xchg
insl
mov
adc
cmp
add
daa
out
movsb
lret
sub
popf
xor
cmp
adc
repnz
jno
inc
jmp
cmpsl
fcoml
lds
iret
fcomi
mov
lds
push
dec
sub
icebp
or
xorb
aad
cmovo
mov
lds
push
fisubrs
aas
adc
inc
cmp
aaa
mov
std
loope
dec
xchg
inc
or
repnz
xchg
ffreep
push
sbb
leave
mov
dec
lahf
popa
adc
xor
mov
test
mov
bound
xchg
sub
lcall
pop
ds
je
mov
es
pop
pop
jnp
fisttps
stos
adc
movsl
sub
testb
das
repz
and
jmp
sbb
or
mov
lock
fistpll
lcall
mov
sbb
inc
stos
cmp
fnstcw
sub
mov
sbb
std
in
adc
inc
sub
xor
dec
test
push
push
push
push
mov
test
or
shl
jle
rclb
popa
xlat
call
je
inc
or
orb
leave
sbb
inc
bound
adc
xchg
mov
xor
insb
popf
pop
xchg
sub
cmp
es
add
or
fisttpl
lret
xchg
mov
daa
shll
sbb
and
fildll
mov
mov
nop
gs
enter
or
daa
push
pop
cmpsl
and
mov
push
lret
jmp
aaa
mov
movsb
popf
xchg
cmp
inc
push
adc
bound
andb
and
add
and
inc
sub
adc
xlat
xor
pop
push
and
and
sbb
testl
sub
aaa
push
insb
roll
add
ja
mov
push
es
imul
xchg
jp
fisubrs
lods
add
jl
inc
add
cmpsb
mov
or
shlb
fwait
xchg
jl
mov
push
mul
cmp
sub
testl
lea
inc
out
insb
or
jg
xchg
inc
adc
xor
daa
xchg
or
xchg
repz
xor
sti
sbb
push
scas
sub
adc
inc
push
sbb
mov
gs
mov
loopne
inc
sub
leave
daa
clc
jbe
cmp
insb
mov
in
add
cmp
push
aam
gs
cld
mov
lea
mov
mov
cmp
cmp
and
popf
fistps
adc
adc
jbe
push
mov
ret
fdiv
in
sbb
mov
xor
ret
lods
cs
movsb
notl
sub
xor
jmp
jns
repnz
dec
fildl
pop
hlt
das
faddl
loopne
jmp
std
test
stc
jmp
mov
aas
mov
jle
js
stc
jecxz
imul
shr
mov
add
gs
push
sti
adc
rclb
cld
in
xchg
push
lcall
push
shrb
mov
push
cmpb
popw
dec
and
sub
add
xchg
inc
sub
pop
clc
testb
lea
mov
push
es
cmp
movsl
push
ja
sub
xlat
jne
or
fistpl
dec
jecxz
andl
push
lret
mov
and
pop
mov
push
in
xchg
bound
push
inc
fsubs
mov
hlt
add
push
jmp
outsl
movsl
jmp
test
test
mov
and
jnp
lds
ret
hlt
int3
sahf
ret
lea
cmp
xchg
sbb
mov
or
imul
cmc
mov
jb
cmp
or
fisubl
pop
cmp
mov
mov
fs
pop
subl
or
loope,pt
xchg
mov
add
fcmovb
push
adc
popf
rorb
push
lock
xchg
cltd
loopne
push
test
stos
sub
inc
rorl
je
lahf
xchg
les
xchg
iret
dec
dec
mov
int3
xchg
xlat
push
push
or
pusha
lods
outsb
push
mov
enter
xchg
inc
arpl
pop
mov
pop
jmp
xchg
mov
mov
inc
sub
lahf
fnstcw
in
psrlw
out
mov
insb
out
xor
mov
push
jge
inc
imul
out
lret
pop
iret
popf
test
mov
mov
in
inc
add
xchg
adc
jnp
iret
je
sbb
xor
arpl
rolb
mov
and
sbb
shr
xor
jmp
lea
xor
inc
rcrl
cmp
addb
and
jns
sbb
mov
or
jle
pop
fldt
scas
repnz
repz
pop
scas
pushl
dec
or
je
pop
fisttps
icebp
or
push
xor
movsl
lretw
inc
mov
sarl
lods
push
sbb
inc
sub
ja
es
xchg
out
inc
mov
jge
lods
jbe
lea
cmpl
loopne
ja
das
push
aas
jnp
scas
scas
popa
fwait
iret
iret
mov
gs
dec
mov
mov
mov
jb
xor
ret
lret
lcall
xchg
xor
or
ror
jo
dec
pcmpgtd
data16
out
jb
mov
lock
movsl
leave
ds
mov
and
or
adc
adc
in
movsl
cltd
mov
add
push
xchg
adc
cwtl
dec
mov
sti
jno
sbb
cmpsb
jmp
inc
mov
pop
mov
fs
repnz
ss
adc
int
in
adc
int3
movsl
mov
jecxz
xchg
xlat
cmp
mov
bound
cmp
sbb
jmp
jnp
push
sbb
loope
mov
repz
or
push
ret
gs
rcrb
cmc
jnp
jp
dec
mov
push
lods
and
lcall
je
call
test
sti
xor
into
adc
leave
cmp
outsl
adc
loopne
in
mov
sbb
aas
add
lahf
arpl
adc
inc
out
or
jg
ret
mov
cmp
sti
in
arpl
and
mov
mov
rolb
leave
sbb
jge
mov
xchg
adc
mov
push
pop
hlt
pushf
and
xor
and
or
add
lods
pusha
or
gs
and
pop
cmpsl
push
jnp
out
jmp
sbb
sub
add
cmpsb
fstpl
xor
push
lds
or
fiaddl
sub
jns
std
out
jo
jp
fistpll
out
iret
sbb
rol
jp
push
nop
pop
enter
fcmovb
jge
fisttps
lret
inc
fstpt
dec
jmp
inc
mov
enter
cwtl
or
jp
mov
fwait
call
add
inc
pop
aad
dec
pop
daa
orb
lds
cmp
arpl
pushf
pop
cmpsb
push
stos
iret
sarb
push
roll
jns
loop,pt
ret
clc
addl
test
adc
mov
das
repnz
fiadds
jge
mov
pop
mov
fmull
ljmp
in
or
sti
lods
repz
add
imul
pop
xchg
test
jno
loop
or
jle
add
dec
aaa
nop
lods
xor
push
insl
push
pop
mov
and
inc
std
fnsave
scas
sub
int3
push
push
cmp
jecxz
movsb
xchg
or
js
and
adc
push
dec
cmp
add
push
push
pop
aam
xchg
clc
inc
push
or
mov
sub
dec
fstpt
movsb
popa
sbb
pop
cmp
inc
adc
cmp
stc
xor
movsl
pop
sub
push
adc
aaa
loop
inc
and
sub
jbe
test
in
jb
push
push
popa
mov
inc
je
jl
mov
mov
cmp
xchg
push
lods
dec
add
lahf
xor
aas
cwtl
sbbl
sub
cmp
sarl
sub
adc
js
jmp
shlb
pop
mov
add
leave
xor
jp
test
fwait
sub
adc
xor
clc
pusha
and
loopne
lods
popa
jb
idivb
in
mov
aam
cwtl
fnsetpm(287
dec
push
add
mov
loopne
scas
mov
fs
daa
imul
sub
and
push
xor
sti
repnz
aam
movsl
cld
and
rol
nop
movsb
int
sub
es
outsb
movsl
pushf
jnp
ja
adc
mov
and
cmp
jae
sbb
cmc
add
es
lcall
gs
ret
insl
cmp
push
push
xchg
shrb
add
push
loopne
jnp
out
sub
mov
mov
mov
popf
les
jecxz
mov
lret
pusha
cmp
test
mov
cmp
dec
test
mov
mov
push
das
shrl
mov
test
adc
movsl
mov
mov
mov
pop
push
cmp
mull
lea
cltd
cmp
lds
ror
sub
jo
cwtl
out
scas
cmc
jno
mov
call
daa
pop
pushf
xchg
mov
std
add
das
push
jo
pop
adc
pop
mov
push
loopne
ror
pop
ret
and
jge,pt
add
jecxz
iret
adcl
push
out
out
pop
pop
pushf
stos
push
out
mov
cmp
loope
rcl
aam
out
cmc
xchg
xor
negl
mov
test
pop
cltd
xchg
xchg
cs
int
xchg
lret
mov
xchg
push
ja
dec
mov
and
add
cltd
outsl
ret
jnp
jnp
rclb
jge
in
mov
inc
dec
cmp
movsb
dec
xchg
push
or
sub
outsb
aad
jnp
popf
cs
xor
fldcw
lahf
mov
mov
xor
jmp
mov
pop
test
daa
out
lret
sub
and
jb
mov
leave
push
mov
into
sub
shl
dec
push
mov
mov
sub
sbb
inc
or
jns
pop
mov
and
xor
cwtl
adc
cld
add
enter
inc
sub
int3
xor
push
xor
and
ds
xchg
dec
aam
sahf
jo
adcb
out
les
inc
call
fcmovnbe
jl
and
mov
pop
push
lods
xlat
xor
ljmp
repz
test
repz
xor
push
mov
or
movsl
jecxz
inc
or
test
xchg
xchg
shlb
push
and
or
mov
sahf
mov
mov
or
lods
push
icebp
into
xor
xor
movsl
mov
dec
lea
leave
mov
in
shrb
jecxz
out
jbe
sbb
jle
lea
sub
and
cs
daa
jge
mov
adcl
mov
icebp
les
inc
jne
ds
add
pusha
add
xchg
sbb
add
std
inc
mov
jnp
cmc
adcb
mov
outsb
fdivl
add
adc
insb
iret
mov
cld
pop
mov
fadds
inc
pop
xchg
mov
lea
add
mov
adc
jg
jb
jl
imul
lea
and
imul
or
clc
jmp
dec
jo
xchg
add
cmp
fcomi
negl
fwait
pop
xchg
add
sub
add
sub
mov
xchg
mov
mull
xchg
add
push
pop
dec
fcompl
xchg
out
dec
xchg
mov
out
jns
imul
test
loopne
andl
adc
pop
mov
sbb
mov
fs
dec
sub
mov
dec
cmp
call
rorl
mov
xchg
gs
lcall
fsubrl
or
add
inc
lcall
add
mov
pop
stos
mov
enter
sarl
adc
lock
std
fstl
add
mov
mov
cmpsb
mov
and
push
mov
repz
mov
jo
mov
outsb
lea
mov
loop
jl
mov
jge
shrl
clc
and
outsb
or
xchg
out
iret
sbb
or
mov
add
outsb
adc
out
dec
inc
mov
addr16
cli
xor
sbb
push
test
repnz
int
mov
xor
jae
push
int3
loopne
scas
shlb
mov
scas
sarl
sub
js
xor
cmp
imul
aaa
sbb
xchg
das
aas
iret
out
shrl
pop
jbe
adc
test
outsb
test
mov
or
xchg
out
addr16
or
mov
adcl
lods
into
xor
xor
fs
popa
dec
lods
inc
imul
xchg
push
ljmp
incl
add
insb
dec
lcall
dec
jmp
inc
or
cmc
mov
mov
xchg
jmp
int
ja
loope
lahf
sub
loope
adc
popf
cld
pop
outsb
lea
jmp
xor
or
aaa
adc
imul
pop
ret
rorl
push
rol
jno
cmp
cs
sub
fcomp
pushf
sbb
sbb
dec
add
out
sbb
rcr
jmp
fists
mov
cmp
out
xchg
mov
scas
cmp
repz
imul
push
stos
shr
inc
mov
fadds
or
inc
sahf
lea
imul
stos
mov
ss
push
mov
sbb
add
pop
push
mov
cmc
out
test
je
clc
cli
add
loop
ljmp
dec
and
ja
pop
loop
subb
mov
mov
popf
fistpl
xchg
cltd
inc
fbld
mov
mov
or
jae
sahf
popf
pushf
loop
stc
stc
dec
dec
sub
sub
jle
jno
lods
jno
insb
jecxz
inc
into
imul
popa
xchg
inc
loop
sub
xchg
cmp
ljmp
stos
xor
adc
ja
test
repz
std
mov
mov
imul
inc
push
mov
mov
int3
xor
adc
push
sbb
sbb
or
mov
int
adc
add
fidivrs
push
imul
lds
iret
jge
int3
sbb
loope
push
sbb
mov
sbb
or
popa
aam
xor
dec
or
push
imul
fs
adc
mov
or
bswap
adc
shrb
pop
and
rdpmc
fdivl
pusha
push
mov
inc
lret
add
pop
ljmp
aaa
nop
lcall
icebp
or
dec
loope
fidivrs
push
leave
pop
or
jne
push
repz
jge
pop
inc
in
in
adc
mov
and
xlat
mov
mov
scas
movsb
push
les
call
xlat
xchg
push
mov
repnz
cmp
aas
add
call
int
repz
dec
pop
dec
adc
sbb
out
dec
in
arpl
shlb
ds
in
orl
add
xor
cmc
mov
mov
pushf
test
pop
or
int
cli
sub
cmpsl
add
inc
inc
repnz
adc
sbb
arpl
imul
bound
aaa
loop
cwtl
jle
and
cwtl
mov
repz
pop
movsb
jecxz
lea
xchg
lods
test
pop
push
lea
cmc
xchg
mov
inc
and
cmp
sbb
std
sbb
inc
call
adc
jge
pop
mov
mov
mov
clc
xor
int3
lds
arpl
or
or
test
inc
sub
sti
mov
mov
cld
imul
sbb
jae
or
sti
add
adc
in
pusha
push
add
mov
aam
lods
ljmp
mov
jb
mov
xor
pop
popa
fwait
or
jo
cmp
icebp
test
ja
jns
xlat
push
push
add
or
push
aam
cld
adc
cmp
jbe
dec
mov
mov
testl
orb
fidivrs
add
sub
pushf
sbbl
sarb
xchg
dec
mov
push
cs
in
js
fsubrs
push
movsl
cmp
or
mov
adc
pop
sub
lea
sub
fiaddl
lock
movsb
pop
and
mov
mov
outsb
xchg
jmp
leave
xchg
jno
lahf
cmpb
jb
push
fisubrs
cmp
xchg
cltd
ja
pop
int3
dec
xchg
jecxz
and
pop
test
outsb
adc
icebp
jge
sahf
xrelease
mov
dec
into
leave
adc
add
add
jecxz
pop
test
hlt
jge
inc
aam
ja
shlb
data16
sub
and
mov
xor
stc
dec
fbstp
mov
mov
dec
jmp
cmp
das
aaa
add
cmp
and
mov
and
lods
pop
ja
push
insl
in
aam
inc
data16
imul
push
lret
fcmovb
out
cvtpi2ps
pop
imul
out
xchg
mov
adc
dec
je
stos
jecxz
aad
sbb
adc
out
faddl
mov
cs
sbb
and
ss
data16
and
in
adc
dec
sti
and
cmp
or
push
and
js
pop
fists
sbb
inc
popf
push
fnstsw
popf
jmp
or
dec
ja
ds
out
mov
dec
addb
test
popa
jle
mov
mov
pushf
test
mov
push
push
inc
jnp
or
es
xlat
popa
mov
or
lock
dec
fnstsw
lret
negl
xchg
lods
test
sbb
lea
decl
add
push
mov
rcrb
cmp
xor
xchg
in
cmc
bound
repnz
xchg
and
cmc
in
dec
add
insb
test
jmp
es
xchg
ret
sbbl
adc
stc
xchg
push
pushf
repnz
sbb
mov
jne
es
sahf
mov
fadd
mov
clc
jp
mov
cmp
xchg
fsubrs
loop
xor
xchg
pop
xchg
jo
cmpsl
ss
sub
mov
xchg
pushf
jge
enter
shll
adc
inc
das
mov
xor
mov
fnstcw
incl
ljmp
mov
lock
popa
mov
pop
or
test
call
lds
jb
insb
jp
js
inc
incb
faddl
sub
test
movl
je
mov
jl
and
xor
les
cmp
lahf
cld
scas
in
repz
xchg
inc
mov
pushf
int3
testl
pop
cmp
xchg
jmp
jle
aaa
xchg
xor
lods
jge
adc
adc
loop
xor
stos
jge
ffreep
or
xor
pusha
or
pusha
push
cmp
mov
mov
mov
mov
mov
shrl
and
xor
jecxz
jg
jmp
xor
xchg
aad
enter
push
in
sahf
and
arpl
insb
test
outsb
arpl
aaa
xchg
mov
fidivl
les
mov
dec
sub
shrb
jge
push
lahf
jo
xor
ret
sar
inc
and
and
mov
movsl
mov
jge
dec
jp
sub
adc
clc
pop
int3
in
pop
pushf
jge
cmpl
mov
fistpll
pop
insl
popf
sub
in
xchg
pop
jge
inc
loopne
adc
mov
mov
xlat
cs
shl
clc
or
dec
loop
cltd
pusha
mov
cmc
call
inc
add
dec
dec
test
outsb
es
jle
int
mov
movsb
sbbl
inc
xlat
call
movsb
hlt
mov
jle
pop
flds
push
shrl
xor
xchg
sti
xchg
fisubl
sbbb
std
stos
inc
push
mov
cmpsl
test
int
out
xchg
and
add
lods
push
xchg
jge
mov
xchg
mov
sbb
dec
loope
aas
xchg
xchg
lods
mov
jbe
in
mov
jae
imul
mov
pushf
enter
jle
test
jb
mov
sub
pop
jae
mov
xchg
inc
inc
in
ror
lret
pop
inc
adc
insl
cmpsl
subl
insl
pusha
jns
dec
xor
dec
int
jno
sbb
outsb
cltd
add
dec
xchg
push
xchg
lods
sub
imul
dec
pop
sbb
je
test
sub
mov
xor
dec
outsb
sar
inc
cmp
inc
insb
fs
sti
sahf
cltd
mov
cmp
js
loopne
push
insb
mov
aaa
dec
dec
xchg
test
stos
fisubs
cmpsl
orb
ljmp
xchg
pop
push
pop
sahf
setp
cmp
xlat
inc
orb
xor
fwait
movsb
xchg
cltd
cli
aam
clc
shlb
sarb
jmp
bound
aas
mov
rolb
xor
imul
cli
mov
sti
mov
nop
loope
cld
in
xor
bound
cmp
popa
xchg
jno
pop
inc
cmp
cmp
fisubs
mov
and
mov
xchg
cltd
aam
fsubs
dec
xchg
cmp
inc
cmpsl
sbb
pop
mov
aaa
enter
and
stc
jle
rcrl
push
jnp
sbb
je
loopne
aam
cltd
adc
mov
andb
mov
out
fs
dec
xlat
jno
inc
test
clc
insb
daa
jns
push
add
in
addr16
lods
dec
scas
lret
cs
call
mov
das
add
or
xor
add
mov
xchg
mov
cmp
out
mov
cs
sub
pop
dec
adc
pop
pop
add
dec
fildl
jg
inc
cmp
scas
xchg
daa
xlat
js
lahf
in
jle
dec
test
hlt
icebp
data16
ljmp
jo
mov
add
test
in
test
jo
push
mov
sbb
out
adc
adc
xchg
bnd
ja
mov
lret
adc
xchg
adc
test
mov
mov
aas
sbb
sbb
jecxz
cmp
xchg
sub
out
ret
bnd
adc
sub
push
and
idivb
cmp
mov
jno
or
adc
inc
xchg
es
hlt
shl
mov
outsl
and
lds
cmc
add
xor
jbe
xchg
cmc
dec
pusha
jnp
jo
clc
mov
mov
mov
xorb
ds
sarl
lds
mov
loop
adc
mov
push
lea
mov
das
subb
popa
pop
loopne
jecxz
lcall
jo
pop
sbb
je
clc
iret
subl
imulb
mov
ljmp
sarb
mov
and
push
pop
lret
outsb
sub
cmp
lret
lret
pop
ljmp
sub
sti
pusha
push
ss
imul
jmp
aas
pop
stos
adc
push
mov
xchg
mov
std
scas
mov
mov
xchg
shrb
loope
inc
push
jns
inc
clc
loopne
faddl
cmp
xchg
pop
clc
leave
pop
das
fsub
jp
mov
mov
in
xchg
arpl
xor
stc
sub
jne
sub
jo
adc
sbb
mov
mov
inc
movsb
cs
adc
sbb
mov
lock
lds
or
lock
ljmp
add
xor
push
sbb
ficomps
mov
xor
divb
sub
mov
jnp
pop
lods
jae
ja
shll
push
adc
add
xor
and
sbb
xchg
enter
pop
negl
inc
jo
adc
mov
aaa
pop
out
sub
xchg
mov
fildl
add
sub
mov
ret
jbe
pusha
test
ret
cmp
and
fisttps
std
fsubrp
mov
cmp
xchg
loopne
mov
push
bound
and
push
pop
pop
in
sub
cld
fistl
rcl
mov
pop
sti
push
jo
lock
mov
and
loope
and
push
clc
idivl
or
dec
pop
mov
aam
add
mov
arpl
adc
xchg
add
repz
pop
repz
fisttpll
les
xchg
pop
and
mov
mov
jne
cli
adc
dec
rcrb
pop
jns
dec
xchg
and
in
mov
out
lods
and
sbb
cmp
xchg
gs
sub
push
mov
and
jns
lock
outsb
fcomi
popf
add
in
je
mov
adc
xor
scas
push
jb
pop
xor
fsubl
dec
mov
leave
push
adc
mov
and
shr
aam
xor
pop
push
dec
ja
sub
dec
into
mov
lea
xor
out
scas
jmp
sbb
daa
dec
cmp
add
add
and
loope
out
xor
out
ret
pushf
mov
jns
pop
fnsave
clc
cmp
mov
ja
stc
xchg
imul
cltd
pop
mov
xor
mov
push
cwtl
sbb
inc
aad
movsb
pop
push
leave
mov
mov
lahf
xchg
dec
mov
xor
test
divb
push
or
mov
ss
mov
pop
cli
push
dec
sub
out
xor
mov
cmpsb
jge
bound
jmp
pop
andl
add
mov
mov
push
xchg
mov
mov
cmp
mov
add
sub
sarl
in
add
mov
fcomp
jl,pt
push
fstp
loop
scas
jmp
ret
rclb
daa
xchg
xor
and
pop
testl
mov
push
arpl
ljmp
js
call
xorb
dec
push
xchg
mov
test
sahf
dec
xor
dec
xlat
xchg
scas
fsubs
in
cmp
sbb
mov
mov
inc
arpl
xor
push
mov
ret
jl
lds
jl
and
mov
sbb
incb
jmp
or
mov
lods
into
aaa
mov
inc
sub
stc
and
imul
aad
fildl
clc
pop
ret
mov
shrb
jne
and
rcrl
call
dec
and
cli
inc
xor
add
orl
cwtl
mov
pop
lods
call
stos
jns
lcall
mov
jecxz
ret
paddq
stos
inc
add
rcrb
push
and
inc
mov
shlb
rorl
stc
fldt
insb
jecxz
push
shl
movsl
pop
fldl
scas
xchg
dec
push
xor
xchg
sub
fnstcw
and
sti
scas
movsb
shrl
loopne
add
ret
adc
fbstp
cmp
ret
scas
mov
xor
in
cmp
imul
push
sbb
mov
pop
out
push
popf
and
mov
aam
push
cli
xchg
ret
xor
lea
lock
fs
adc
idivl
movsb
xchg
mov
pop
sbbb
data16
mov
es
ljmp
adc
popa
sbb
fstpl
push
mov
jnp
push
divl
xchg
or
incl
xor
push
dec
das
dec
data16
ss
cwtl
inc
int3
sahf
pop
mov
outsb
addb
and
fidivrl
dec
jecxz
and
fimull
cltd
mov
repnz
scas
pop
addr16
jns
jg
test
sub
test
push
aaa
mov
imul
push
sbb
fmuls
ja
subl
popa
repz
ret
vmulps
cltd
ret
jecxz
cmp
sub
push
or
ja
jle
inc
jns
mov
nop
push
rorb
mov
das
sbb
mov
and
pop
aam
sbb
bound
xchg
inc
clc
mov
push
in
loopne
mov
push
aam
fs
popf
or
mov
into
mov
ret
lret
aad
jns
xchg
xchg
pop
xor
shrb
lahf
push
pop
aas
out
push
inc
fmuls
out
add
sub
insl
aam
add
jmp
push
test
add
arpl
into
jno
enter
push
fadd
jo
loop
addr16
jo
dec
adc
subb
test
sub
pushf
adc
cltd
sub
int
cwtl
jecxz
inc
inc
push
sahf
dec
jg
mov
mov
sti
sub
testb
test
ret
nop
sbb
xchg
leave
sub
jne
sbb
sub
shrb
pop
fdivrs
pusha
adc
and
mov
xchg
or
out
add
cmp
inc
dec
add
cmc
and
mov
imul
sub
shlb
inc
cmpsl
mov
lds
aad
jnp
pop
xorb
mov
mov
push
cmpl
adc
pop
cmpsl
pop
call
cli
xor
lock
cmp
std
dec
mov
pshufw
fnstsw
lahf
mov
mov
movsl
inc
pop
gs
and
fs
aaa
out
jns
add
hlt
fwait
adc
fst
xchg
xchg
dec
sahf
mov
pcmpgtb
cld
jbe
xor
lahf
cmp
dec
into
cmpsl
fcmovu
inc
jle
inc
into
mov
push
insb
out
or
cmp
push
mov
loope
andb
mov
sar
jne
out
out
rcr
shll
push
and
leave
lock
and
push
inc
sub
push
sub
mov
jmp
push
repz
or
push
rcll
adc
mov
cmpb
inc
mov
addr16
sahf
mov
loopne
cli
pop
lea
dec
dec
xor
jns
in
inc
shlb
add
sahf
sub
std
mov
inc
aaa
and
push
mov
daa
lret
fwait
add
push
fidivrs
icebp
repz
push
mov
lock
xlat
push
addr16
mov
pop
shl
iret
test
mov
jp
xor
shll
and
leave
mov
cmp
mov
jle
pop
dec
jmp
jns
xchg
jl
ret
and
mov
adc
mov
in
inc
fcomip
test
pop
jbe
cmpsl
popf
cltd
js
add
cli
jnp
fs
leave
pop
xchg
in
pop
push
add
es
mov
adc
cmp
mov
into
pop
sub
xchg
andb
rolb
sub
pop
cmpsb
hlt
jp
ret
cmp
xchg
mov
adc
das
cmp
dec
dec
fidivrs
sbb
imull
or
jbe
sbb
mov
imul
test
leave
mov
clc
std
xor
pop
scas
mov
std
loope
loopne
and
stc
xor
loopne
jno
mov
pop
repnz
xchg
xchg
pop
dec
push
push
lahf
and
cmc
add
pop
sub
sahf
dec
mov
out
rcl
add
jne
cmp
mov
xchg
xchg
or
aad
dec
insb
mov
sbbl
movsb
out
inc
sbb
jmp
mov
cmp
imul
mov
sbb
movsl
jae
xchg
pop
shll
lret
dec
mov
mov
xor
out
mov
adc
ss
data16
shrl
iret
add
enter
sub
mov
clc
mov
in
ss
int3
and
out
adc
adc
std
loopne
insb
xchg
incb
sbb
out
bound
jne
mov
inc
or
addl
sbb
add
sbb
and
pop
insb
ss
loopne
sahf
xchg
jp
jnp
mov
xchg
divl
mov
inc
pop
pop
sub
fldenv
or
ja
cmc
test
into
cmp
dec
mov
cli
mov
mov
insb
dec
mov
fdivs
jb
jae
jne
nop
push
lcall
push
test
jecxz
repnz
ficoms
aad
js
sbb
std
or
cli
mov
mov
mov
add
cmpsl
sti
mov
and
mov
add
xor
jg
sub
dec
lock
pop
or
les
shl
ret
fisubl
push
mov
aas
pop
xor
or
jno
lea
insb
xlat
adc
ljmp
sbb
fdivl
or
cmp
pop
divb
test
push
test
mov
cmp
add
popf
jae
jns
or
sbb
xor
push
dec
push
jmp
insl
push
std
push
xchg
cmpsl
loopne
pushw
cmc
dec
stc
xchg
mov
xor
mov
cmc
arpl
stos
pop
scas
cmp
xchg
into
jns
cmpsb
dec
cmp
dec
xor
scas
add
iret
push
jle
pop
sbb
fwait
dec
stc
lods
clc
pop
jno
sti
fsubrs
test
jno
aad
stos
xor
out
cmp
cwtl
jge
fcomi
mov
and
dec
mov
mov
push
push
cmpsl
inc
out
pop
dec
cltd
mov
jg
shr
sub
cmp
sub
inc
out
aas
mov
pop
pop
dec
outsb
test
inc
mov
lods
or
or
pusha
in
jecxz
aad
xor
or
mov
cmp
jl
xchg
mov
pop
push
jae
fucomi
out
cmp
dec
and
adc
add
push
cmpsb
es
push
repnz
jo
dec
hlt
ret
cmpsl
cwtl
xchg
cmpsb
push
movsl
mov
mov
inc
stos
js
or
mov
ljmp
mov
pushf
push
inc
adc
jmp
xchg
xlat
or
ds
or
ror
lea
mov
mov
cmpsl
push
add
out
jae
push
inc
xor
cmp
push
rcr
je
cli
xchg
movsl
sub
sub
fimuls
xor
dec
jge
mov
jne,pn
add
dec
jb
xchg
lds
push
mov
out
dec
fs
lret
add
xchg
or
aas
jecxz
or
test
lods
mov
dec
iret
mov
inc
aam
inc
jnp
mov
mov
inc
cmc
test
int
or
dec
or
push
mov
cmp
xor
lcall
mov
mov
clc
outsb
sub
mov
clc
cmpl
test
movl
push
aaa
xchg
fldcw
js
push
xlat
adc
dec
add
mov
sbb
sub
repnz
mov
mov
mov
mov
imulb
fucomip
pop
sub
inc
std
add
stos
mov
scas
cltd
jae
sub
rclb
pop
xlat
sbb
sub
js
cld
add
or
adc
into
int
mov
mov
cmpsl
sbb
add
xchg
jo
loop
lods
sahf
out
data16
nop
dec
sbb
jns
les
cmp
jno
fwait
add
jl
mov
sbb
roll
xchg
shrl
and
mov
subl
mov
mov
insl
ret
int3
add
adcb
stos
and
je
mov
pop
into
push
sbb
jg
outsl
pop
mov
je
addr16
push
jno
inc
inc
dec
lods
jle
jne
sbb
mov
daa
dec
mov
cmc
test
mov
je
xchg
sbb
jge
fstpl
sub
pop
adc
pop
xchg
outsb
fs
std
fsubp
mov
mov
xchg
xor
cmp
and
xchg
add
and
push
lret
loopne
mov
mov
bound
mov
fsubs
mov
fsubs
push
mov
out
pop
leave
mov
jae
mov
fildll
jle
rolb
mov
mov
shrl
mov
test
mov
hlt
mov
popf
and
xor
sub
rcl
cltd
jno
sbb
xchg
call
cmp
adc
icebp
and
jp
or
jns
bound
cld
mov
jg
test
mov
stc
push
out
pop
push
sub
jno
lds
hlt
or
mov
fbstp
pusha
insl
jns
mov
shlb
test
out
fstps
adc
mov
xchg
mov
adc
cmp
pop
out
sbbb
dec
sarb
add
inc
in
add
test
adc
int3
pop
mov
inc
inc
and
mov
xchg
push
mov
in
xor
jecxz
jnp
mov
out
cmp
in
aaa
enter
mov
out
sbbl
and
jecxz
and
xor
sti
mov
add
adc
jae
xlat
fdiv
bound
cmpsb
xor
mov
xor
rcll
sub
push
inc
insb
mov
aam
cmp
cld
repnz
mov
notb
ret
jp
and
addb
in
add
cmpsb
js
cmp
out
mov
or
outsl
lods
mov
inc
pop
xor
testb
or
cmp
inc
in
adc
in
xor
xorb
fs
push
mov
std
pop
mov
sub
or
xchg
push
jnp
mov
cmpb
sub
stc
jne
jp
rcrl
idivb
mov
js
fcmovnbe
mov
pop
popa
mov
pop
test
push
aam
ja
inc
and
fisubrl
lock
dec
pop
ret
jae
push
jae
aad
xor
lock
jns
cmp
psllw
cmc
xor
lock
mov
stc
xchg
cmp
or
inc
addb
push
pop
jbe
out
jl
mov
mov
jb
mov
ret
sbb
xor
in
jge
enter
cmpb
push
hlt
popf
dec
adc
mov
repnz
loopne
push
sub
stos
push
adc
fimull
jp
and
xlat
mov
and
jg
dec
cmpsb
cmp
movsl
mov
jle
mov
addr16
mov
je
xchg
es
movsb
int3
popa
mov
cmp
mov
cmpsb
in
cmp
mov
bound
sbb
pop
jne
fldl
aad
or
fildl
or
dec
outsl
stos
inc
mov
pushf
movsb
aaa
imul
xchg
xor
in
jmp
test
jb
test
outsl
stos
cwtl
push
scas
inc
into
lret
adc
idiv
inc
int
out
data16
scas
and
mov
pushf
xor
outsb
in
data16
mov
enter
mov
mov
sbbl
cltd
mov
lods
enter
nop
mov
int
fisubrs
pop
cmp
jnp
jne
adc
lahf
gs
and
mov
and
jge
add
rcrb
push
xlat
arpl
mov
add
xlat
cmp
mov
push
inc
stos
shll
xor
aam
aam
dec
test
int3
repz
test
jb
mov
dec
insb
aad
out
outsb
sbb
addr16
out
add
jbe
xchg
adc
cmp
cmp
dec
out
lahf
pushf
jecxz
add
adc
adc
mov
adc
fdivs
imulb
push
sbb
jmp
push
mov
inc
incl
call
jne
pop
inc
inc
and
ss
jge
xchg
rcrl
in
rol
loopne
jo
add
rcr
add
dec
lahf
lock
mov
or
and
adc
fstpt
ss
bound
jg
sahf
and
sbb
fs
adc
aaa
insb
repz
pop
inc
and
gs
add
ret
mov
hlt
jae
seto
in
and
mov
rcl
adc
and
xchg
pop
in
push
ds
cld
push
ds
test
sub
sbb
push
aas
lcall
cmpsl
mov
out
fs
push
std
lret
push
xchg
pop
test
or
enter
mov
mov
mov
fcmovbe
enter
mov
mov
jns
mov
les
popf
mov
test
ret
neg
jecxz
loope
dec
hlt
sarl
cmc
cmp
inc
gs
cmp
scas
inc
icebp
pop
mov
mov
sbb
imulb
sbb
jo
pop
push
push
xor
ret
sbb
or
inc
dec
mov
dec
xchg
add
cld
mov
fisubs
fldcw
push
mov
out
mov
sbb
loopne
ss
aad
inc
jnp
lds
jmp
jne
push
pushf
sbb
sbb
jno
push
mov
loopne
decb
push
enter
hlt
clc
inc
or
pop
aas
mov
scas
ljmp
lret
ret
mov
cs
pushf
pop
shl
in
push
mov
scas
outsl
lock
fdivl
push
inc
outsb
add
test
add
inc
sub
pop
stos
arpl
pop
push
je
dec
mov
fcompl
pmulhuw
fs
xor
jge
or
lds
add
push
arpl
hlt
lret
or
fsub
sub
mov
sbb
mov
cmp
das
data16
test
adc
aas
sti
sub
xor
daa
adc
inc
pop
loop
movsl
jne
sub
pop
or
jb
pop
mov
jnp
je
xchg
xor
repz
out
testl
dec
mov
cmpsb
mov
mov
stos
jb
and
cmp
rorb
sub
fsts
stos
sub
out
jle
cmpsb
in
loope
jbe
scas
dec
pusha
aas
outsl
ret
insb
sbb
cwtl
mov
inc
inc
mov
ds
mov
imul
stos
sbb
cld
push
pop
xor
mov
inc
lea
cltd
jb
enter
pop
popf
int
mov
js
pop
sub
pop
jo
mov
and
lret
div
inc
pop
mov
popf
jg
sbb
and
sbb
push
push
add
push
loope
jp
mov
test
movsb
push
enter
movsb
movsb
pop
insb
dec
dec
je
fidivl
dec
xor
jae
and
ror
jle
fimull
aam
jno
popf
pushf
movsb
lods
iret
sub
adc
cmc
mov
ror
inc
addb
mov
fs
pop
loopne
daa
aaa
pushf
jne
aas
dec
cmp
popf
jg
pop
mov
imul
mov
stos
cmp
jne
jecxz
cld
inc
and
push
outsl
jmp
orl
adc
cmp
jecxz
sbb
fdivrp
sub
popf
cmp
cmc
aaa
icebp
aas
dec
scas
fwait
mov
inc
sti
sub
repz
sub
pushf
sahf
bound
adc
mov
cmp
das
fiaddl
aad
sub
mov
in
push
mov
push
faddp
ret
mov
sbb
cmp
in
add
xor
xorb
pop
mov
sub
push
push
cmpsb
inc
jecxz
mov
dec
jl
std
pop
sbb
aam
mov
push
pop
in
popa
iret
or
adc
pusha
cltd
sub
repnz
dec
pop
lret
lcall
jnp
mov
add
test
scas
sub
jns
imul
enter
mov
jge
adc
push
mov
stc
mov
add
clc
or
roll
xchg
sbb
sbb
nop
mov
pusha
cmp
inc
add
je
ljmp
enter
mov
in
add
mov
jne
icebp
and
lods
pop
mov
mov
jecxz
push
iret
dec
test
pop
fists
cli
mov
rclb
gs
inc
in
xchg
sub
in
js
mov
call
es
or
outsl
xlat
xlat
pop
xorb
shr
mov
mov
ja
dec
repnz
popa
dec
adc
test
pop
and
dec
std
xor
in
push
push
pop
mov
orb
mov
neg
dec
arpl
xchg
lret
aad
roll
pushf
movsb
pop
lcall
test
lret
adc
pop
mov
pop
in
out
aaa
sbb
mov
sbb
out
mov
cmp
lock
jge
jb
xor
mov
jle
movsl
mov
mov
je
ret
icebp
test
jle
call
push
push
sarb
lret
add
stos
fnstsw
negl
outsl
pop
jns
loop
popf
inc
xor
outsb
movsl
mov
test
cld
cmpsb
lods
sbb
sub
aam
out
cmp
sbb
lods
pop
loopne
movsl
sbbl
loop
mov
dec
bound
jb
aaa
mov
ficomps
mov
pop
sub
or
fwait
out
in
arpl
add
cltd
sub
pushf
fcmovne
mov
xchg
in
cmp
data16
jnp
repnz
push
hlt
out
mov
xchg
dec
mov
int
sbb
stc
cmpb
fmulp
cmp
lcall
shrb
sub
lahf
ss
pop
imul
mull
mov
mov
pop
mov
rol
arpl
inc
dec
cmp
mov
sarb
inc
mov
lahf
mov
push
sti
push
jae
pop
inc
popa
repz
mov
jl
xor
mov
in
mov
mov
int3
addr16
movsb
lds
lahf
dec
mov
adc
and
cmc
cli
mov
stos
fidivl
fdivs
lds
xor
xchg
inc
mov
add
and
daa
out
lods
movb
mov
call
cmpsl
mov
add
scas
cmp
test
add
insb
subb
cs
test
and
dec
fcmovnb
loop
lcall
mov
cmp
out
pop
pop
or
xchg
pop
fcmovnu
aam
fmuls
xor
push
xor
jmp
jmp
xor
enter
nop
loop
xor
mov
dec
dec
mov
aas
mov
jmp
cwtl
ret
movl
cld
mov
push
xor
jbe
mov
inc
adc
out
inc
fs
cmpsb
pop
arpl
cmp
inc
shr
mov
mov
xchg
stos
fwait
mov
pop
mov
enter
jnp
stc
dec
cli
stos
inc
pop
jge
int
std
cli
rcrl
das
pop
sbb
mov
xor
cltd
ljmp
out
cmpsl
out
mov
fadd
sub
or
mov
aas
xchg
ror
xchg
pop
cmp
push
xlat
lock
and
loope
loopne
outsb
xor
dec
pushf
cmp
fbld
call
mulb
pop
jnp
inc
add
push
mov
ds
pop
pop
mov
mov
cld
push
mov
xlat
mov
inc
ret
int3
shl
xor
inc
xchg
xchg
les
movsl
xor
bound
je
xor
lea
scas
insb
lods
push
clc
xchg
aad
xchg
repz
inc
sbb
cmp
cmp
call
or
fbld
mov
dec
lcall
push
cmpsb
sbb
in
sbb
and
insl
mov
mov
rcll
mov
mov
ficoml
jl
cmc
les
xor
lods
jns
out
xor
stos
pop
bound
or
add
sbb
mov
gs
or
sub
shlb
push
ret
pusha
ret
fwait
add
sub
popa
outsb
inc
lcall
rolb
mov
xchg
aad
mov
mov
lods
and
pop
jno
and
in
test
mov
inc
and
test
inc
mov
fstpl
dec
xlat
pop
lahf
pop
inc
decl
inc
xor
in
mov
fwait
push
lods
in
mov
daa
jmp
pushf
scas
fidivrl
sbb
mov
mov
je
xchg
aad
rolb
ss
adc
pop
ror
and
inc
std
adc
loope
xchg
cwtl
push
xor
dec
xor
notl
popf
sbb
daa
dec
jne
dec
into
pop
add
cmpl
jns
mov
jge
orl
push
mov
push
pop
mov
mov
push
jne
pop
jno
addb
fcoml
in
xor
ljmp
jae
mov
inc
jns
inc
in
insb
rcrl
movsl
test
cmp
add
xor
jmp
and
cmpsl
jp
push
pop
xchg
xor
cmp
pop
addb
pop
leave
jmp
addb
out
pop
mov
es
shl
outsl
dec
and
push
leave
xchg
xor
sbb
popa
lahf
pop
jmp
adc
jmp
pop
push
sub
test
addr16
cwtl
xchg
adc
fwait
inc
and
in
push
jns
daa
sbb
adc
or
test
sub
jno
xchg
pop
pop
dec
xchg
xor
fistl
push
lcall
mov
shl
clc
adc
imul
in
rorb
pcmpeqb
mov
out
fldenv
inc
sahf
and
aas
jmp
sub
fstpt
pop
aad
add
movsb
xchg
pop
pushf
push
repz
add
std
mov
test
gs
in
xchg
mov
rorb
xchg
int3
mov
andl
mov
push
push
xor
adc
mov
imul
scas
fildl
or
lds
out
iretw
movl
and
cmc
adc
call
push
stos
loope
adc
mov
dec
imul
jo
faddl
sbb
push
cwtl
add
jo
mov
mov
cltd
daa
mov
push
sbb
adc
jne
sbb
adc
mov
sbbb
lds
add
adc
mov
pop
mov
adc
in
adc
lret
lds
inc
cmp
dec
inc
xchg
fsubl
lea
jnp
fcomip
jno
jo
icebp
mov
sub
ljmp
int
push
adc
filds
or
aad
lcall
lock
cmp
imul
lods
mov
jge
int3
xor
test
push
bound
adc
sub
mov
jp
lret
loop
xor
out
icebp
inc
mov
lret
push
lock
dec
push
xchg
test
jg
repnz
push
mov
mov
sub
fistpl
and
sub
in
mov
insb
mov
arpl
push
test
insl
adc
aad
and
mov
xor
test
inc
xchg
mov
loopne
push
add
lcall
addr16
sbb
push
pop
dec
enter
push
cmp
adc
mov
push
xchg
sub
jne
lock
call
push
inc
stos
and
leave
ret
call
pop
lods
fistps
sbb
aad
dec
sahf
and
daa
mov
loop
sub
add
mov
in
inc
ds
mov
lods
lock
popf
cmp
inc
outsb
and
movsb
frstor
inc
cmpsb
push
lret
test
push
mov
int3
test
sbb
leave
addb
lcall
cmc
pop
out
repz
sahf
test
mov
xchg
lods
pop
insl
push
xor
xor
mov
loop
jnp
pop
in
jnp
inc
pop
push
pop
add
cmp
outsb
adc
pop
jp
pop
in
and
jns
adc
in
mov
push
loope
scas
lret
mov
lahf
inc
pop
outsb
out
dec
inc
add
pop
dec
ds
testw
pop
or
lods
add
movsb
xor
test
pop
adc
or
rcll
in
and
sub
inc
inc
dec
aaa
movsl
and
push
inc
ret
sub
jp
addr16
cs
in
add
jbe
add
inc
jne
adc
sarb
repz
call
mov
cs
jge
cmp
dec
pop
into
xchg
pop
inc
testl
fs
scas
cmp
push
movsl
sti
mov
push
lret
loop
ja
mov
pop
cmp
pushf
jle
inc
movsl
xor
das
xchg
push
je
xor
inc
les
outsb
out
and
xchg
mov
iret
cltd
mov
sub
cmpsl
adc
outsb
testb
sbb
xchg
imul
push
imulb
loopne
mov
lods
dec
fcoml
sbb
mov
xchg
sbb
xchg
cmp
movsl
in
sbb
stc
and
stos
repnz
test
inc
jbe
insb
cli
out
lret
int3
outsb
mov
insl
cld
mov
scas
mov
pop
push
sub
mov
mov
pop
fistpll
mov
pop
iret
mov
jle
xrelease
and
out
je
incb
lcall
push
in
mov
or
mov
xchg
outsb
or
lods
lahf
sbb
dec
adc
jne
jb
or
mov
es
xchg
lahf
ss
jbe
or
loope
push
mov
jecxz
pop
ljmp
fnstenv
push
sub
and
cli
mov
ret
scas
test
jne
lcallw
or
pop
or
clc
bnd
xchg
and
repz
jae
mov
mov
and
dec
sbbb
dec
addr16
and
push
and
subl
sahf
sbb
mov
mov
inc
in
pop
out
push
cmc
mov
ss
enter
js
cmc
xchg
mov
pusha
push
stos
sub
and
popa
xchg
fistpll
insl
ss
in
push
mov
cmp
and
sbb
adc
cmp
addr16
jp
push
sbb
mov
stc
repz
or
inc
popf
divl
rcl
push
jns
inc
adc
js
push
in
pop
test
push
hlt
add
mov
leave
mov
sbb
mov
into
xchg
enter
push
int3
dec
repnz
mov
test
scas
pushf
xor
fisubrl
pop
inc
push
adc
sbb
mov
ror
push
cmp
mov
jmp
push
mov
or
cmp
add
addr16
outsb
andl
adc
scas
shlb
xor
imulb
test
insb
cmp
jge
mov
enter
cmp
mulb
shlb
lahf
dec
adc
ja
mov
dec
hlt
pop
push
cmc
fwait
nop
mov
addl
mov
aas
mov
and
fisubs
and
push
lods
adc
mov
add
rcll
push
mov
sti
imul
inc
out
leave
mov
nop
sti
mov
ss
push
sbb
imul
pop
cmp
or
sub
lea
xor
imul
adc
pushf
in
imul
cli
icebp
sar
loop
jmp
or
jmp
inc
arpl
test
dec
cmpsb
push
cmpsl
fcompl
out
push
or
push
jno
cmp
stos
sub
xor
lock
push
sahf
not
sahf
mov
ret
xor
adc
ljmp
frstor
jmp
and
cmpsl
jl
or
or
mov
add
in
loopne
adc
pop
imul
adc
das
mov
shrl
jg
cmp
stos
inc
mov
imul
mov
sahf
es
mov
mov
rcll
ljmp
nop
frstor
ljmp
mov
test
scas
adc
jne
ret
add
mov
push
movl
xchg
and
pop
enterw
mov
pop
sbb
lcall
mov
insl
xor
add
cmp
jmp
push
mov
filds
mov
mov
rcrl
ss
or
sar
std
pusha
adc
bound
scas
popa
mov
sub
sbb
xchg
int3
stos
test
add
mov
dec
mov
sti
sbb
in
fs
lods
dec
xor
mov
or
xchg
iret
dec
cwtl
sti
insb
js
es
daa
cmp
popl
inc
hlt
sbb
fucom
lods
jmp
push
or
and
sub
pusha
ss
jnp
pop
lods
insb
fwait
iret
or
sahf
clc
jo
sub
out
mov
mov
ljmp
je
cmp
mov
cltd
pop
in
mov
mov
daa
push
jae
jns
fistps
lods
shlb
mov
sbb
out
xchg
xchg
pop
mov
push
stos
inc
mov
imull
fwait
xor
pop
sahf
xchg
jl
xchg
mov
pusha
and
in
ljmp
inc
mov
push
lcall
aam
or
out
mov
je
mov
cmpb
int3
push
sub
cmp
push
dec
out
cmp
adc
sbb
ret
fnstenvs
out
xor
cmpsl
xor
ret
sar
loopne
mov
lea
pop
ja
in
pop
mov
lods
insb
shll
cld
inc
jno
and
icebp
push
cli
cmpsb
push
jo
cmc
push
pop
sub
jp
push
popf
popf
nop
add
or
je
ja
pop
cmp
push
cmpb
in
jecxz
fmull
ljmp
pop
fwait
xchg
xor
pusha
sbb
out
dec
mov
out
into
add
mov
dec
in
xchg
jae
aaa
add
js
ljmp
jge
xchg
stc
loopne
sub
jp
inc
int
xor
sbb
dec
add
mov
subb
cmpsb
mov
les
xchg
xor
pop
mov
lea
mov
jne
fmull
push
add
jl
add
mov
adc
xchg
mov
mov
mov
dec
in
shll
pushf
inc
mov
lods
inc
ljmp
xor
into
mov
movsb
inc
arpl
in
or
leave
out
pop
into
xchg
hlt
mov
pop
pop
mov
pop
movsl
mov
fcmovnb
jecxz
fnsave
icebp
arpl
and
cmp
and
mov
push
out
xchg
pop
push
xchg
or
das
in
inc
pop
inc
xchg
jge
movsl
push
xchg
adc
mov
jo
insb
or
dec
cmpsl
adcb
adc
leave
dec
xchg
mov
insl
xor
out
adc
cmpsl
sbb
movsl
movsl
mov
into
pop
addr16
cmp
mov
mov
mov
repz
sbb
dec
in
mov
jns
clc
xchg
fsincos
mov
stos
fildl
das
jb
sbb
or
jl
xchg
push
daa
out
lods
or
jge
pusha
push
mov
xlat
testl
scas
mov
arpl
aam
imul
sbb
rol
push
sarl
fimuls
bound
enter
repnz
push
jne
mov
mov
inc
push
mov
mov
pop
sahf
loopne
pop
pop
and
push
lahf
lcall
mov
pop
xchg
fwait
lahf
fdivr
lock
loope
std
fisttps
dec
cmp
addb
cwtl
sub
hlt
pop
dec
xchg
fs
addr16
ljmp
cmp
ja
lds
cltd
in
fs
pushf
xor
cmc
push
jno
or
and
lea
sbb
cmp
add
xchg
adc
xchg
dec
iret
xchg
popa
jg
test
jl
mov
and
xchg
ret
and
dec
aam
out
or
sub
idiv
adc
add
clc
jb
imul
mov
sub
mov
jl
cltd
aaa
outsb
pop
ds
loope
fucomp
call
out
insb
aaa
xchg
adc
xorb
jns
cli
scas
ja
adc
pop
lock
movsl
jnp
inc
fisttps
into
cmpsl
pop
mov
into
into
and
jno
mov
out
enter
ss
vmwrite
sbb
js
or
dec
ja
scas
daa
dec
out
stc
test
xlat
scas
sub
loopne
dec
mov
lods
rorl
scas
add
xor
mull
ret
pop
movl
aas
popa
inc
lock
mov
dec
fwait
or
popf
in
mov
movsb
shl
inc
pop
xchg
cmpsl
mov
push
ja
fdivs
das
loope
lret
mov
cmp
adc
mov
cmp
xchg
aaa
xchg
cli
jp
dec
add
sbb
and
outsb
jo
add
push
ret
adc
lahf
xor
push
scas
dec
hlt
int
add
shlb
repz
dec
shrl
sar
decb
cld
call
mov
mov
je
push
lea
fwait
sti
fcomps
out
jae
or
loope
mov
fadds
lret
inc
jmp
jb
rclb
ss
inc
cmp
xor
mov
andb
inc
addr16
imul
ret
mov
jo
sbb
mov
push
mov
mul
push
or
sbb
sbb
mov
stos
addr16
jecxz
jmp
adc
leave
inc
or
dec
loopne
sub
add
cltd
xlat
or
js
mov
cmpsl
in
cwtl
add
cmpsb
xchg
sbbl
insl
call
or
inc
ss
mov
insl
push
or
sub
js
es
jmp
inc
mov
mov
push
push
cmp
mov
push
mov
sub
sti
pop
pop
push
inc
shll
ficomps
hlt
fdivl
adc
inc
ret
and
ret
mov
xchg
int
adcb
or
push
pusha
sbb
sbb
cmpsb
pop
xchg
movsb
mov
rclb
inc
dec
xor
fcomps
dec
push
cmp
cwtl
jg
adc
aam
jle
shrb
ficomps
pop
inc
or
mov
lcall
mov
iret
out
repnz
loope
int
repz
cmp
sbb
fisttpll
inc
adc
popl
mov
les
test
dec
lock
xor
fdivrs
xchg
insb
adc
push
mov
xor
mov
insb
sbb
nop
daa
sub
fimuls
jp
mov
inc
jne
mov
jno
notl
and
fwait
nop
xchg
outsl
dec
xor
lcall
movsl
fsubrp
sbb
out
push
cmovg
mov
addl
test
movsl
mov
hlt
jg
enter
enter
aam
xchg
data16
xchg
outsl
andb
fs
add
cmpsl
mov
jno
iret
stc
xchg
xor
sbb
jecxz
jmp
jmp
lcall
out
cmp
in
cmp
jmp
xchg
lds
stc
mov
test
inc
imul
lock
fdivp
loope
or
imul
push
cmc
sbb
sbb
dec
stos
or
aaa
sahf
int3
imul
sbb
inc
test
pop
dec
mov
and
in
rcll
leave
mov
xor
pusha
and
pop
pop
popa
mov
out
lea
in
sub
pop
jbe
jmp
pop
sbb
push
fldenv
push
sub
stos
aad
inc
je
xor
in
cltd
fbld
stos
mov
push
in
loopne
pop
repz
add
mov
popf
or
insb
add
xchg
xchg
cmp
cwtl
xor
xchg
pop
and
sbb
mov
mov
xlat
jo
mov
mov
jecxz
outsb
xor
fcmovnbe
add
fdivp
inc
jns
shrl
xchg
inc
lcall
js
jb
aaa
pop
cmp
xchg
test
imul
out
aam
mov
scas
loopne
out
jne
insb
inc
dec
mov
clc
test
popf
aam
mov
aas
add
fdivrl
jns
pop
xor
xchg
sahf
and
into
pop
rcl
movsb
subl
test
adc
test
out
iret
shll
pop
dec
xchg
dec
leave
jl
mov
scas
adc
add
nop
add
fiaddl
in
int
std
sbb
aaa
push
and
push
jg
movsl
popf
adc
loope
jecxz
jo
cwtl
sbb
or
jns
pop
push
push
sbbb
lods
sarl
sbb
lea
fs
nop
jb
push
mov
adc
out
jg
aad
ss
add
movsb
or
push
mov
insl
in
add
and
add
lcall
xchg
ficomps
inc
shrb
mov
xor
xor
fiaddl
imul
rorb
push
sbb
loope
aaa
adc
test
sub
cwtl
and
and
mov
push
in
inc
pushaw
ss
mov
push
stos
aad
xor
outsl
pop
mov
dec
sbb
jmp
popa
hlt
fadd
push
loopne
arpl
inc
and
mov
push
stc
andps
lods
int3
mov
fidivl
mov
push
inc
cmpsl
dec
adc
and
icebp
icebp
sub
xor
push
fadds
cmp
mov
lea
rclb
insl
mov
sub
clc
test
inc
stos
scas
in
mov
stos
mov
pop
rcll
sbb
repnz
jg
shrl
pushf
adc
loope
mov
outsb
stos
dec
cmpsb
mov
gs
sub
in
pop
out
leave
rcl
jp
daa
cmp
out
fnstenv
mov
sub
dec
rolb
pop
mov
leave
gs
out
pop
mov
mov
lea
movsb
les
test
fucomp
adc
mov
popa
imul
jo
int
mov
adc
cmc
xchg
pop
ret
or
rcl
addr16
bound
shlb
dec
das
cli
jmp
mov
mov
dec
sub
pop
sti
inc
popa
addr16
mov
xchg
mov
cs
sahf
movsl
cli
adc
inc
sbb
lock
hlt
cmp
inc
js
frstor
stc
sub
push
xor
fisubrl
jp
cs
popf
jl
lea
sbb
sbb
sub
in
addr16
and
je
pop
lret
sti
inc
push
mov
stos
lds
jp
cmp
out
jnp
arpl
outsl
mov
mov
xor
pop
mov
mov
loop
or
nop
dec
push
movsb
orb
lds
outsb
mov
mov
push
ret
lds
cmp
adc
dec
mov
push
or
pushf
aam
jecxz
jne
shrl
mov
push
movsb
add
int3
adc
xchg
pop
fistl
inc
scas
rcrl
movsb
fdivl
out
push
ljmp
inc
inc
or
jb
xor
insl
inc
out
test
jl
xor
push
inc
xor
jp
mov
and
mov
xchg
jnp
mov
sub
xchg
dec
push
sti
cmpsl
punpckldq
ds
mov
pop
mov
cmpsb
mov
test
xchg
stos
or
bound
scas
push
xchg
out
sbb
add
pop
add
dec
mov
push
push
or
hlt
inc
mov
nop
cmp
movsb
leave
jbe
xchg
and
add
cli
aam
jbe
pusha
shll
nop
cmc
cld
test
aad
out
jmp
mov
dec
imul
mov
es
cmpsl
stc
mov
stos
in
lods
in
dec
call
ret
loopne
pop
mov
inc
fadds
std
pop
clc
shll
dec
mov
adc
data16
xchg
sub
jno
add
ret
jg
dec
xor
insl
int
in
and
cmp
lea
lcall
push
imul
cmp
iret
leave
popf
nop
shrb
dec
add
inc
pop
sbb
adc
jns
icebp
sub
bound
sbb
daa
cs
jge
rcll
cwtl
and
mov
outsb
fdivrs
pop
repnz
pop
leave
xchg
lea
test
into
pop
nop
scas
cmp
lret
jmp
jbe
stc
ljmp
rorb
stos
and
ror
ja
jne
push
push
jg
mov
imul
mov
ljmp
pop
pushf
add
movsb
cltd
into
rorb
dec
subl
mov
int3
jle
test
lret
call
jae
leave
sti
cmp
inc
sbb
adc
popa
rcr
xchg
je
rcrb
addr16
jnp
push
cmp
mov
int3
mov
iret
xchg
push
jmp
jle
mov
lds
out
jmp
fcomp
mov
sub
inc
and
mov
loop
loopne
cmp
xor
jge
or
lea
and
out
cmp
stos
push
adc
dec
sahf
pop
jp
add
into
cwtl
insl
test
cmp
xor
jmp
or
mov
xchg
mov
xlat
outsl
popa
push
or
mov
inc
jmp
out
fcomi
outsl
or
mov
aas
cmpsl
mov
stos
push
mov
sbb
nop
mov
pop
xlat
jmp
mov
and
lahf
mov
mov
not
sub
imul
arpl
iret
cmp
jne
js
jle
jecxz
insl
nop
and
sub
xchg
loopne
sahf
out
andl
mov
dec
dec
pop
scas
scas
int
or
cmp
pop
pop
clc
pop
xor
cmp
pop
mov
cwtl
jge
inc
cs
outsl
fs
outsl
or
adc
inc
ret
sbb
fwait
pop
sbb
rclb
sbb
roll
test
dec
xor
out
inc
xchg
push
pop
scas
or
movsl
imul
mov
add
cmp
stos
inc
pop
loope
jae
pop
or
xor
ss
lret
cmp
scas
cld
imul
push
insb
test
es
sarl
mov
jmp
std
jbe
and
jecxz
mov
movsb
dec
mulb
push
push
mov
or
dec
cwtl
cmp
mov
mov
mov
cmp
fadds
movsl
mov
sbb
fcoms
pop
mov
fsubp
sub
clc
add
lds
jp
cli
sahf
std
in
out
or
mov
inc
add
ss
mov
loopne
push
xor
sub
pop
sbb
stc
lea
test
adc
adc
inc
pusha
cmp
push
pusha
sub
push
adc
sbb
adc
xchg
dec
das
fwait
push
imul
pop
out
cld
js
mov
adc
xor
cmc
bound
cmp
outsb
jbe
sbb
out
jno
inc
shl
sub
outsb
pop
sub
sub
pushf
in
repz
pushf
call
loope
sbb
cmp
add
ret
jle
popa
lods
iret
mov
stos
mov
int3
xor
xchg
jmp
ljmp
cmp
adc
push
cmp
ds
sbb
sbb
dec
imul
and
fs
lods
mov
lock
sub
mov
or
push
adc
mov
xchg
imul
das
mov
dec
frstor
cmp
jae
push
scas
jno
push
lods
out
or
jle
call
stos
adc
and
cltd
popa
and
mov
call
xchg
sbb
imul
jmp
xchg
xor
shll
ss
outsb
xchg
lret
cmp
movsl
mov
rorl
test
fiadds
push
lcall
xchg
mov
xor
sar
jge
add
flds
lds
xchg
adc
cmp
int3
les
pop
and
mov
jns
sbb
pop
popa
xchg
lock
xor
mov
jp
scas
push
fdivr
imul
rcl
int
and
scas
add
push
inc
dec
sbb
and
mov
and
and
push
fwait
pop
cmp
xchg
jns
sbb
call
gs
dec
popf
lcall
add
sbb
fsubrs
push
sbb
xchg
js
lock
mov
imul
add
fs
aas
and
movsb
mov
or
xchg
popf
jnp
fs
lret
jo
xchg
jle
jns
sbb
xor
pop
mov
int
ja
ja
add
dec
and
icebp
imul
insb
xchg
push
xlat
cmp
enter
cli
out
and
cmc
iret
sahf
jg
cmp
or
cmpsl
xlat
jmp
add
jle
inc
addr16
movsl
hlt
mov
outsb
xor
arpl
mov
ret
cwtl
or
adc
outsb
call
cmp
sbb
pop
icebp
and
idivl
imul
shll
add
pop
std
fadds
mov
lods
cmpsb
stos
js
adc
pop
cmpsb
xchg
xlat
rcrl
cmpsb
movsb
xchg
mov
data16
repnz
ret
scas
sbb
mov
cmpsl
adc
cmpsl
addr16
sub
int
std
leave
jmp
or
adc
scas
pusha
cmpsb
inc
sub
clc
loop
jno
xchg
mov
out
sbb
mov
sbb
xchg
ljmp
cmpsl
cld
dec
sbb
arpl
push
inc
mov
pushf
in
pop
or
js
jo
mov
mov
jno
or
cwtl
jmp
pushf
cmp
ret
and
out
out
rolb
pop
push
inc
hlt
push
xlat
mov
stc
pop
inc
push
and
sbb
mov
push
mov
cmp
data16
pop
and
jns
cmpsl
aad
cmpsb
add
and
or
jl
mov
rorl
dec
mov
shlb
jbe
and
int3
xor
mov
out
popa
jecxz
test
xchg
bound
adc
ljmp
std
insb
pop
inc
mov
mov
cmp
mov
xchg
imul
cmc
adc
cmc
aam
sar
cmp
fs
or
jns
xchg
push
add
in
xchg
pop
arpl
mov
add
loopne
lret
out
mov
push
or
aad
sbb
cltd
push
push
cmp
lea
jns
iret
rorl
in
jbe
mov
xchg
and
das
push
jne
or
add
jo
mov
dec
rcrl
adcl
mov
in
movsl
add
sub
pop
insl
int3
cmp
pop
mov
aam
pop
xlat
sti
push
movsb
loopne
clc
pusha
sub
cltd
pop
stos
pop
shrl
nop
inc
jbe
pop
jmp
fadd
enter
jecxz
into
std
arpl
push
mov
dec
jmp
scas
fwait
daa
ret
je
pop
fidivrl
enter
out
lds
and
loopne
xor
sub
push
shr
sbb
xor
jb
sbb
pushf
push
fldcw
out
insl
adc
dec
cmpsb
push
sub
dec
test
dec
leave
mul
pop
notb
ds
sbb
jne
sbbb
xor
sbb
add
pushf
shll
ret
ret
lret
mov
push
jge
inc
jl
pop
out
inc
or
shll
dec
sbb
and
orl
pop
push
or
pop
loop
mov
mov
pop
mov
mov
mov
pop
test
or
xchg
mov
sub
adc
xorb
xchg
jl
adc
in
inc
push
add
fmuls
sub
rolb
hlt
cld
pop
jmp
or
addr16
aas
xor
inc
mov
cmp
gs
adc
and
mov
xor
jo
outsl
mov
in
bound
call
clc
arpl
outsb
scas
je
call
pop
sahf
inc
daa
hlt
rcll
jae
aaa
jnp
insl
out
xor
jo
xor
cmc
sarb
insb
push
xor
js
fnstcw
jno
popa
sbb
adc
cs
cmp
nop
fimull
cmp
mov
ja
cmp
cmpsb
adc
mov
mov
push
mov
dec
adc
adc
fcompp
push
dec
push
jmp
dec
push
adc
cmpl
sub
fistl
ret
xchg
insb
push
psrld
in
sarl
mov
jbe,pt
test
and
pusha
test
jl
dec
and
femms
outsl
es
jns
std
inc
adc
xor
fcmove
dec
rcrb
adc
notl
pop
jge
pop
cmp
lods
ljmp
in
cmp
push
in
and
pop
mov
scas
gs
cmc
inc
mov
addr16
subb
dec
lahf
pusha
dec
dec
les
pop
inc
xor
jbe
scas
cld
aam
xor
jle
into
lahf
std
repnz
push
mov
imul
jno
lret
jg
and
push
pop
xchg
mov
cmp
pusha
out
outsl
pop
xchg
fcompl
dec
push
xchg
jns
xchg
imul
int
imul
sub
push
stc
jle
dec
ret
cmp
orl
sbbb
ret
inc
and
lahf
push
out
and
int3
cmp
inc
xor
jb
push
rcrl
popf
sbb
xor
adc
in
xor
lock
add
sub
xor
add
fnsave
mov
jl
inc
inc
cmpsl
scas
in
pop
ret
aam
cmc
test
cld
or
mov
mulb
mov
xor
icebp
adc
loope
sub
adcb
dec
insb
movsb
aaa
and
aaa
fidivs
dec
push
mov
jl
stc
adc
repz
xchg
pop
arpl
push
lret
std
pop
and
fldl
sbb
orb
pop
sahf
sbb
jl
cmp
dec
iret
dec
inc
and
sub
loope
jmp
pop
outsb
jl
lahf
int3
push
ret
xchg
ljmp
je
mov
je
cwtl
inc
pop
jns
pushf
jle,pn
or
into
test
js
ret
xor
scas
push
pushf
push
mov
or
test
movb
outsl
push
or
lods
loopne
negb
movsb
xchg
inc
push
mov
add
in
std
push
dec
adc
pop
fsubl
cmp
mov
and
hlt
ret
jne
fdivrs
lret
xor
out
daa
dec
nop
push
clc
and
xor
push
in
adcb
xor
pop
aas
xchg
mov
insl
insl
jnp
fimuls
fs
insl
test
test
push
sub
push
lcall
repnz
xor
test
test
dec
add
mov
cwtl
cmpsl
mov
or
dec
xchg
push
xchg
cmp
dec
iret
inc
outsb
addl
sbb
dec
sub
stos
sub
mov
sti
pop
sbb
dec
adc
daa
mov
jg
pop
push
lea
mov
lock
mov
mov
outsb
scas
mov
xchg
jno
or
mov
popa
jg
sbb
hlt
xchg
aad
adc
inc
lods
test
pushf
pushw
adc
and
sub
stc
or
jnp
mov
into
negl
lea
fildll
test
sub
ds
pushf
cmc
mov
imul
rcl
loopne
es
mov
orl
sbb
ss
mov
filds
cmp
add
mov
movsb
pushf
lds
sete
in
mov
js
xchg
push
das
xor
movsb
jnp
in
inc
lods
lock
fsubrs
xor
push
pop
bound
pop
shlb
bound
stc
cs
cmc
sbbb
add
adc
rorl
jmp
in
mov
add
sbb
in
adc
outsl
or
cmc
gs
lahf
mov
xlat
mov
push
push
push
sbb
shl
jmp
jmp
rclb
dec
fisttps
hlt
sti
divb
leave
mov
inc
ds
jmp
jg
rorl
jp
test
das
adcl
sbb
popf
jecxz
pop
adc
adc
mov
in
push
jmp
cmp
add
mov
mov
in
mov
lock
pop
int
adc
pop
sbb
cmp
fsubrp
lds
aas
mov
pop
icebp
dec
loopne
pop
add
mov
ret
push
mov
xor
dec
je
insl
jge
xor
sbb
or
test
mov
orl
xchg
sub
jae
lcall
jb
dec
add
mov
ss
inc
daa
jbe
dec
mov
lcall
add
jmp
push
push
enter
popa
out
cmpb
xchg
sbb
pop
inc
or
fcoml
fsub
aaa
jnp
xchg
sub
cmp
fwait
mov
ljmp
fucompp
sub
xchg
das
jmp
jae
sahf
xor
dec
mov
cmp
lds
repnz
test
das
lcall
std
jo
cltd
push
lret
movsl
dec
andl
add
mov
adc
orl
cmp
leave
sub
lahf
imul
push
mov
dec
pinsrw
adc
lods
sbb
or
nop
repz
inc
xchg
jae
jp
out
fprem
adc
adc
loope
test
xorb
cmp
daa
push
or
mov
nop
mov
jnp
into
adc
pop
cmp
cli
lea
inc
imul
inc
mov
adc
fstps
mov
imul
movsl
loop
sub
lret
int
cmp
mov
ds
push
fs
cli
dec
imul
cmc
jne
fsubs
sar
jmp
fucomp
xor
add
mov
pusha
adc
xor
in
pop
push
or
push
cmp
cwtl
iret
scas
mov
nop
sbb
xchg
sbb
and
fcompl
sbb
lods
jbe
into
ficompl
pop
add
push
lret
popl
jle
pusha
dec
cltd
mov
or
mov
sbb
cmp
xor
or
push
push
in
out
adc
and
or
lcall
stc
sub
insl
cmpsb
outsb
mov
adc
mov
sub
enter
js
pop
pop
loopne
out
scas
inc
ja
insb
pop
jns
js
push
sub
sbb
mov
xor
fstps
add
movsl
push
out
xchg
or
inc
ficoms
mov
add
or
push
mov
pushl
popl
xadd
rcl
int
pop
pushf
add
jle
or
stos
das
pop
pop
data16
sub
or
fcoms
jge
pop
jge
cmc
bound
mov
subb
cwtl
push
dec
mov
sbb
into
mov
mov
sub
lret
mov
cld
push
jmp
pop
call
in
decl
popa
dec
push
pop
adc
dec
fdivrl
xor
inc
inc
cs
jp
cltd
scas
jge
pop
imul
adc
aad
xor
jne
xor
inc
add
outsb
sub
or
mov
xchg
and
inc
arpl
cmp
inc
sbb
add
dec
mov
push
cmp
rclb
adc
scas
mov
js
loopne
xchg
jg
je
rcl
and
push
inc
sbb
adc
jne
sbb
insb
and
mov
mov
pop
adc
xchg
xchg
inc
roll
ds
cmp
pop
leave
pop
mov
adc
lock
adc
pop
mov
add
iret
fidivl
xor
pop
in
sub
inc
and
popf
leave
ret
pop
adcb
and
ja
pushf
add
dec
jge,pt
jmp
lret
movsb
cld
dec
or
mov
sub
inc
mov
push
xor
enter
push
or
rep
fwait
sti
xchg
mov
push
jb
lods
add
xchg
inc
mov
mov
xor
push
cld
pop
lret
jb
fstps
mov
lea
xchg
and
xor
mov
ja
loop
dec
pusha
lahf
int3
sti
add
int3
mov
leave
push
and
adc
add
push
add
xlat
push
jo
push
inc
ret
cmp
or
jl
lret
add
or
or
push
mov
mov
dec
mov
xor
gs
mov
movsl
adc
sub
inc
adc
jg
and
mov
add
mov
daa
das
and
into
stc
hlt
push
jp
rclb
shrb
push
xchg
mov
andb
fisttpl
int
ljmp
sub
cwtl
lock
icebp
imul
xchg
mov
adc
nop
adc
lahf
inc
push
mov
sub
pop
out
push
mov
pop
int3
test
xchg
shll
lcall
cld
and
mov
adc
sub
mov
lcall
aaa
es
call
push
xchg
test
cmp
in
xor
adc
test
add
xor
xchg
push
pop
mov
push
mov
loop
sbb
aam
addr16
or
clc
and
call
add
mov
nop
leave
leave
cs
lods
xor
push
out
mov
push
and
lret
insl
lods
test
inc
das
inc
add
dec
cwtl
mov
sub
pmaxsw
jno
les
cmp
mov
out
push
push
pop
inc
mov
cld
sbb
aaa
cmp
lret
inc
fistpl
lcall
pop
sarl
scas
loop
jbe
int
push
popa
and
jo
pop
repz
add
lret
lret
loopne
mov
pop
lcall
test
loopne
xor
ret
sti
xchg
cmp
pop
xor
js
push
mov
xchg
outsl
adc
shll
test
mov
push
imul
outsl
sbb
in
mov
xor
cld
cmp
icebp
popf
push
add
inc
subb
inc
jb
call
lcall
or
pushf
push
es
in
repnz
jae
push
fs
clc
mov
sub
outsb
int
repnz
sbb
mov
push
fwait
lock
pop
dec
jmp
movsl
jmp
mov
cmp
pop
mov
xchg
gs
cmpsb
aad
xor
mov
pop
mov
loop
add
mov
push
popa
fisubs
xchg
ret
add
dec
or
inc
cmp
roll
add
out
nop
cmpl
mov
push
lods
js
mov
add
dec
clc
push
jbe
cli
sub
add
sub
test
nop
bound
test
shrb
mov
ret
iret
sbb
inc
and
mov
or
lods
or
mov
int3
dec
add
orb
cmc
add
scas
lret
jmp
cld
cmp
das
xor
mov
mov
nop
sbbl
and
push
dec
adcl
imul
cmp
pop
push
shrl
fcoms
xlat
ss
pushf
daa
mov
xchg
xor
ret
mov
adc
xchg
sarl
or
in
mov
mov
fwait
inc
xor
sbbl
imul
addb
out
jle
or
jmp
loope
shrb
xorl
or
jg
sub
sbb
cmp
inc
dec
daa
cmp
lds
pop
outsl
int3
push
mov
fwait
enter
imul
mov
add
add
jns
stos
adc
xchg
fsub
ror
hlt
aam
mov
cmp
shr
mov
and
stos
sub
nop
xchg
add
jne
mov
push
sbb
ss
stos
push
mov
cli
pop
inc
push
flds
imul
clc
mov
or
lret
mov
jg
sub
pop
repnz
or
push
mov
cltd
ffreep
es
repnz
jg
jnp
ss
jb
pop
into
imul
hlt
and
inc
cld
ret
iretw
sub
bound
xchg
lods
pop
jg
xor
and
fsubp
dec
aas
pusha
dec
mov
lahf
cltd
mov
inc
and
lret
jge
sub
mov
cmp
jbe
jns
lcall
mov
jecxz
outsb
mov
and
cmp
cmp
inc
loope
or
sbb
mov
sbb
push
xchg
xor
mov
jns
hlt
ret
xchg
stos
fistps
loope
insb
ret
add
cmp
sub
jecxz
nop
sahf
imul
jge
popf
les
adc
fs
mov
fs
addr16
out
cmp
sub
daa
cli
fsubrl
insb
insl
add
enter
adc
movsl
test
adc
ficomps
jmp
nop
mov
adc
popa
push
test
sub
in
fcomp
xchg
scas
jmp
xchg
mov
inc
les
dec
adc
test
cwtl
jo
and
dec
xor
push
fdivl
nop
inc
dec
cmp
and
imul
loope
dec
sub
pop
mov
lret
test
xchg
cmp
adc
orl
aaa
cmp
in
dec
mov
sub
adc
xchg
imul
jecxz
std
jmp
addb
sbb
je
adc
subl
dec
arpl
inc
stos
sbb
jl
test
jecxz
add
into
sub
fidivs
xchg
sub
imul
and
inc
outsl
push
xchg
cmp
jge
push
xchg
mov
jl
andb
sub
arpl
cmc
push
popf
pop
leave
pop
mov
push
jmp
mov
mov
ds
nop
inc
inc
lcall
jmp
add
add
jecxz
sbb
or
xor
dec
movsb
add
pop
inc
fists
and
push
or
div
adc
test
popf
imulb
arpl
jo
jecxz
lret
fwait
icebp
mov
push
loop
dec
lods
out
stc
scas
jecxz
xor
xchg
pop
out
inc
and
sub
xchg
test
aaa
xchg
and
dec
add
iret
aam
mov
push
add
cmp
push
pop
in
stos
in
mov
icebp
add
fistpl
scas
xor
cmpsl
popa
mov
nop
mov
mov
ret
pop
insl
jl
out
imul
js
mov
loope
xor
mov
stos
in
arpl
lock
push
or
test
sub
or
out
and
sbb
nop
cmp
xchg
mov
aas
rcrb
into
adcb
aaa
xor
imul
pusha
or
fisubrs
mov
imul
clc
repz
out
loopne
mov
mov
test
cmpsl
aaa
dec
mov
push
jle
dec
int
cmpsb
mov
mov
sub
popf
jp
mov
mov
cmp
lret
daa
push
mov
cmc
jae
clc
sub
cmp
jmp
pop
cmp
mov
add
fst
and
shr
and
popf
rcrl
in
xor
pusha
jno
and
fsubrs
xchg
or
shll
clc
fidivl
ret
add
xor
jmp
pop
ljmp
dec
mov
mov
mov
or
sbb
lock
flds
jnp,pt
repnz
xor
or
push
repz
addr16
loop
sbb
inc
or
or
in
imull
jmp
sahf
inc
pop
mov
pop
cli
out
fiadds
fstps
pop
mov
faddl
jns
mov
scas
xchg
xor
jno
arpl
mov
cmpsb
test
add
cld
int3
fdivl
adc
dec
es
jl
lock
lock
xchg
inc
mov
insl
rolb
in
mov
mov
ljmp
cmpl
push
aaa
test
mov
pop
jnp
hlt
pop
jno
mov
popa
sub
aas
in
jo
or
cmc
xorb
fwait
mov
mov
adc
lret
push
sub
xor
jbe
xchg
in
mov
sub
lods
loop
or
push
xor
jb
push
dec
pushf
fistpll
or
dec
add
xchg
mov
cmp
imul
push
repnz
dec
inc
hlt
lahf
push
lods
mov
sub
mov
stos
popf
push
push
clc
imul
mov
push
cs
jb
test
leave
mov
mov
addr16
shrb
cmpsl
les
add
adc
movsl
gs
jp
add
inc
or
sub
rcrb
jmp
inc
pop
les
sbb
dec
jnp
push
xor
and
add
fstps
cmp
lods
mov
or
popf
int3
add
out
push
xchg
jb
mov
mov
std
cwtl
jecxz,pt
xchg
into
or
adc
addr16
mov
mov
lret
fsubs
jnp
add
cmp
sbb
sub
into
xlat
mov
push
jl
pushf
dec
aam
xor
ja
inc
push
and
flds
xchg
fisubl
mov
cmp
push
mov
xor
enter
or
sbb
and
je
inc
adc
out
push
scas
rorb
loope
xchg
or
inc
sbb
mov
and
push
sub
scas
adc
out
aaa
ret
jae
scas
dec
outsb
mov
mov
mov
mov
dec
jae
cmp
fidivl
sub
insl
pop
push
stos
int3
mov
mov
bound
test
dec
jne
in
mov
inc
mov
push
and
iret
push
shrb
cmc
mov
orb
or
mov
sbb
outsb
aad
je
cmpsb
xchg
lahf
iret
xchg
xchg
lea
dec
xchg
pop
xchg
xchg
push
lds
xchg
pop
push
repnz
inc
in
movb
jmp
pop
popl
movsl
push
lret
insb
aas
ret
mov
insb
int
sbb
lret
add
mov
mov
adc
or
rcr
outsl
mov
sti
and
and
xchg
outsl
and
outsl
add
dec
cmpsl
pop
pusha
jg
push
outsb
insb
fwait
cs
adc
out
imul
push
jge
and
or
cld
sub
xchg
mov
push
pop
or
push
mov
or
idivl
jne
dec
sarb
punpcklbw
sub
mov
shll
fwait
testb
sbb
pop
sbb
clc
push
test
test
mov
rol
int3
mov
pop
ljmp
xchg
or
xor
dec
je
cli
xlat
cs
pushf
cwtl
in
or
push
pop
scas
adc
xchg
call
sbb
mov
mov
call
xchg
fisubrs
iret
in
push
out
sub
and
adc
repnz
mov
push
pop
mulb
mov
cmp
inc
notb
xchg
pop
enter
mov
inc
rcrl
fidivrl
mov
xor
jne
insl
into
xchg
pop
jl
jns
mov
pop
jmp
rcrl
into
mov
ljmp
pop
xchg
inc
xor
pop
sbb
dec
cli
mov
testl
xchg
lock
mov
jge
sbb
sarb
sbb
data16
call
mov
leave
aas
jl
ret
std
int3
and
jl
fsubrp
add
lahf
aad
hlt
mov
fsts
dec
dec
mov
jle
pop
scas
gs
mov
jmp
dec
int
jp
xor
dec
jbe
movsl
xchg
sbb
pop
cwtl
or
pop
stos
jmp
into
es
add
mov
or
mov
xchg
dec
mov
aad
imul
add
jae
dec
sbb
dec
imul
and
sbb
mov
test
add
fldt
stos
sbb
mov
cs
sti
stc
mov
xor
das
in
pop
shl
cld
cli
ret
scas
mov
movb
push
dec
iret
pushf
les
test
movsl
jp
inc
and
or
insl
fsubrs
mov
jb
mov
out
sbb
mov
aaa
mov
cmp
mov
or
dec
jo
test
sub
xchg
mov
fs
loope
jns
push
jae
and
cld
xor
cmp
jo
lret
pop
idivb
stc
mov
inc
fs
push
mov
dec
adc
fstl
pop
inc
popf
hlt
das
cmc
insl
insb
in
daa
xchg
mov
inc
xchg
push
pop
out
pop
data16
mov
rol
sbb
fistpl
pop
nop
jnp
jecxz
inc
xchg
cmp
gs
pop
idivl
inc
cmp
lea
mov
xchg
add
stc
mov
xor
add
jg
mov
rol
sbb
clc
jno
pop
fwait
in
sarb
push
inc
jo
sti
inc
popf
mov
xchg
sbb
cmpsb
ja
and
loopne
es
cmpsb
add
insb
pop
xchg
in
out
fists
ret
add
sti
mov
or
mov
push
stc
xchg
cwtl
es
mov
testb
dec
cwtl
jecxz
mov
add
jp
fwait
aas
std
mov
insb
xchg
dec
int3
icebp
inc
sbb
ror
iret
xor
add
rorl
dec
jmp
sbbb
sbb
lahf
std
add
cmp
pop
and
pop
out
adc
mov
jge
in
out
dec
and
pop
xor
or
cmp
fadd
addl
mov
mov
rclb
xchg
loope
pop
and
mov
ja
daa
popa
fs
pop
or
enter
imul
outsb
fidivl
dec
int
std
movsb
popa
ficoms
cmpsb
outsb
orb
clc
xchg
movsl
out
lcall
xchg
je
mov
mov
pop
or
push
inc
push
dec
dec
ds
rcrb
and
stos
pop
sbb
cmp
cmpsb
jg
lcall
popa
fistl
dec
popl
xchg
xor
andb
pop
loopne
mov
divl
les
shrl
mov
xor
jae
sbb
mov
ficompl
ret
mov
repnz
aaa
and
sbb
xchg
movsl
lret
lret
mov
add
fs
pop
out
repz
enter
mov
or
je
test
mov
and
jne
sub
xchg
cmp
cmc
lds
sbb
jne
dec
fsubrs
std
lret
hlt
lret
mov
cmp
mov
sar
ja
lcall
dec
hlt
inc
adc
sti
repnz
and
pop
sub
adc
es
sbb
mov
loope
xchg
pop
rol
aaa
lds
daa
push
xchg
add
out
inc
ficomps
ljmp
mov
sbbl
imul
cmc
xchg
int3
call
add
out
xchg
ja
popa
shrl
pop
adc
in
jle
pop
mov
in
sub
mov
cwtl
adc
xlat
lock
test
xor
popa
push
mov
xchg
jns
cmp
out
repz
aam
cmp
stos
pushf
fwait
pop
xchg
inc
cmp
mov
adc
enter
xchg
test
xor
adc
mov
jbe
sub
repz
add
loope
stos
sti
in
daa
decl
imull
sbb
xchg
pop
and
inc
sub
lods
cli
in
int
pushf
pop
lock
cld
insb
push
rorb
jp
loopne
fldl
rcl
adcb
jne
dec
dec
mov
lods
inc
xorb
dec
adc
push
in
mov
add
rol
xlat
mov
fldl
adc
push
dec
mov
fdivrs
sbb
clc
adc
push
sbb
lock
data16
and
jge
mov
popa
sti
jne
sub
and
popf
arpl
aas
pop
inc
aad
sub
ja
dec
pop
add
inc
dec
add
xchg
and
dec
leave
or
fsubrl
push
pop
or
mov
sti
scas
xor
insb
jmp
pop
testl
rorb
push
xor
movsb
pause
fadds
scas
ret
inc
dec
inc
jmp
aas
adc
scas
add
mov
leave
imul
mov
sub
movsl
es
add
adc
pop
sarl
add
into
ret
push
mov
add
cmp
lcall
rorb
idivl
fcompp
es
mov
xor
sbb
aad
imul
cmp
mov
push
jne
enter
sbb
in
bound
mov
xchg
dec
add
arpl
std
add
in
mov
push
mov
imul
loopne
mov
in
int3
dec
stc
jmp
dec
xchg
cmpsl
lods
sbb
fdiv
dec
mov
dec
mov
rcrb
cmc
jle
jl
xorl
add
fisttps
inc
stos
pop
jle
sub
dec
mov
and
aas
das
je
xor
pop
shl
and
sarl
es
lea
jmp
pop
lock
gs
addl
lahf
ljmp
add
add
fsubl
xchg
or
inc
leave
jb
lret
sbb
push
mov
iret
inc
dec
sbb
fdivr
jnp
hlt
mov
ss
jns
stos
outsb
push
push
xor
into
xor
add
out
aas
fisubrl
aam
gs
cwtl
aad
loope
sub
lds
test
mov
in
lds
push
imul
or
mov
push
xchg
mov
and
and
sub
lds
cmp
xor
push
adc
pop
test
fiadds
jl
test
icebp
sbb
jp
sub
jnp
lret
pop
mov
push
xlat
xchg
clc
sub
call
in
dec
sti
lea
fnstcw
scas
test
push
mov
adc
pop
inc
lds
dec
ret
sub
dec
push
xchg
in
loope
les
scas
dec
push
sub
pop
test
inc
cmp
hlt
jl
enter
sbb
imul
cmpb
data16
shlb
push
pop
movsl
arpl
js
xchg
pop
push
dec
add
pusha
jno
addl
test
mov
jl
adc
lret
adc
lcall
ss
jns
xchg
inc
daa
lock
fwait
push
or
inc
push
pop
cs
jecxz
rcr
sub
xchg
sbb
mov
adcb
loope
je
push
dec
jecxz
inc
test
pop
arpl
lock
jmp
mov
dec
rcll
cmpsl
push
fadds
pop
aad
js
inc
push
push
lret
sbb
inc
jbe
mov
pop
push
jl
icebp
cmpsb
fldenv
cmc
inc
mov
aas
pusha
in
mov
lret
push
jo
shlb
and
add
lea
mov
dec
add
pop
jmp
cmp
or
push
mov
mov
js
mov
mov
lock
lock
mov
cwtl
jle
xor
addr16
stos
push
inc
push
xor
cmp
push
cld
lahf
int
sub
sarl
xchg
lret
lcall
pop
push
mov
jnp
out
dec
xchg
insl
cld
fbstp
shrl
sbbl
outsl
bswap
and
sbb
test
aaa
into
mov
jno
xlat
or
adc
sub
adc
pop
or
and
addr16
cmp
adc
push
std
inc
lcall
pop
lcall
rol
and
repnz
cli
add
mov
or
push
xor
and
scas
mov
lods
jo
cld
mov
stos
mov
lea
jbe
pop
mov
incl
mov
push
adc
std
addb
ret
sahf
push
push
and
dec
cmp
ret
test
fistps
movsb
xor
mov
pop
pop
sub
ss
loop
jnp
xor
ret
rclb
js
std
mov
cli
push
out
xchg
dec
shlb
or
inc
inc
mov
out
es
push
cmp
pop
sti
mov
push
push
xlat
pop
jno
inc
mov
adc
lods
loop
adc
test
sub
fldcw
lods
mov
inc
push
or
mov
dec
lods
or
adcl
outsl
or
stc
outsb
test
sbb
push
es
aaa
ljmp
xchg
and
lahf
shl
shll
cli
fisubl
sbb
stos
or
adc
shlb
dec
fcomp
data16
out
lods
fcom
push
cltd
call
stos
and
cmp
scas
push
das
sarl
lahf
pop
add
int3
cli
jbe
mov
cli
mov
jg
clc
sbbb
xchg
jmp
aas
mov
pop
xchg
lret
xor
mov
inc
stos
jnp
cltd
dec
pop
loopne
std
rcrl
sbb
popa
xchg
call
push
adc
add
lds
cmp
inc
insb
test
xchg
das
insb
cld
in
ja
sti
inc
jne
mov
dec
call
imul
xor
mov
mov
movsb
dec
mov
shrb
into
inc
jge
add
movsl
mov
js
ret
fdivrs
fisttpll
repz
pop
cmp
out
cmc
add
xchg
or
scas
mov
cmpsl
adc
dec
or
pusha
leave
into
mov
mov
nop
jl
nop
fstl
testb
xchg
jge
fwait
dec
imul
fbstp
out
pusha
mov
lret
mov
dec
sub
xchg
sahf
pop
mov
or
xor
push
mov
loope
mov
ret
dec
mulb
mov
imul
sub
ja
repz
or
mov
je
addr16
fwait
mov
gs
aaa
push
addb
ficomps
sub
test
cmp
daa
leave
jb
dec
das
mov
rcl
fs
out
ds
and
pusha
dec
pop
mov
addb
jecxz
mov
movb
scas
hlt
sahf
call
jle
dec
das
jmp
int
jp
push
push
addr16
xor
cltd
lock
xchg
dec
imul
and
sub
jnp
es
popa
pop
call
push
test
fisttps
mov
daa
push
mov
xchg
inc
nop
stos
ret
xchg
fsubrp
push
mov
lods
call
mov
and
jno
int
jg
inc
fisubrl
sub
sbb
pop
adcb
jnp
or
xor
pop
ud2
inc
decl
or
dec
call
scas
out
jo
push
sahf
stos
outsl
shl
fdivrs
jo
sbb
outsb
sub
int3
and
fisttpl
cmp
stc
iret
push
out
ret
xchg
dec
jl
push
adc
xor
adc
sti
je
cmp
inc
in
jl
mov
ja
xchg
and
sub
pop
scas
and
stos
sub
iret
scas
xor
dec
dec
mov
or
lock
mov
cmp
pusha
jne
xchg
popf
jns
int3
sbb
icebp
add
in
rorb
outsl
push
ret
lock
mov
xchg
inc
into
mov
xor
add
pop
dec
adc
mov
fnstsw
mov
iret
leave
xchg
negl
outsl
ret
and
mov
jb
cmp
dec
loop
dec
ljmp
xchg
mov
mov
jno
cwtl
popa
cmp
ret
adc
and
push
loopne
in
out
jmp
icebp
ds
les
push
fwait
call
or
je
mov
gs
fwait
test
fdivr
sbbl
jae
mov
fwait
inc
xor
cmp
ret
jo
scas
xchg
shlb
sub
out
mov
in
int
add
lret
or
or
jne
jnp
and
lods
insb
test
adc
psrlq
mov
iret
push
lahf
push
daa
stc
imul
in
dec
sbb
pop
dec
imull
in
sarb
andl
add
or
jb
icebp
push
lret
adcl
or
push
sbb
cmp
mov
or
jbe
int
cmpl
push
mov
in
stos
push
js
ret
lock
dec
das
and
sub
inc
pop
sub
mov
subl
je
pop
push
jg
out
ss
cmp
arpl
test
inc
andb
cmp
mov
or
and
mov
jl
fdiv
mov
sbb
xor
jne
sbb
fwait
mov
leave
xor
mov
adc
js
pop
and
rcll
cmpsb
pop
mov
fisubl
movsl
mov
pop
out
inc
lods
jne
or
push
fisttps
dec
call
icebp
adc
xchg
jge
dec
jmp
adc
das
jge
mov
and
cmp
mov
fnsave
jmp
sbb
mov
adcl
imul
std
inc
daa
add
or
sub
nop
jge
sarl
fidivl
mov
and
cli
scas
push
cmp
xor
bound
fidivrs
push
jno
and
leave
fwait
jg
push
or
dec
xchg
maxps
arpl
sub
out
sbb
sbb
idivb
lock
jnp
adc
jb
daa
pop
push
test
and
scas
out
test
adc
mov
lock
aas
ret
mov
ret
inc
test
sbb
add
pop
nop
and
in
mov
scas
das
or
xchg
loop
sbb
stos
inc
push
test
cmc
test
cltd
popa
xchg
pop
movsb
mov
push
dec
pop
insb
fldl
adc
mov
pop
jl
mov
push
mov
lods
cmpsb
jle
rcll
fcmove
xor
adc
pop
or
sub
add
addr16
inc
js
out
out
les
xchg
adc
mov
bound
push
pop
std
repnz
dec
cmp
cltd
add
and
or
adc
push
xor
mov
fstl
stos
inc
jns
push
jnp
sub
test
xor
leave
test
sub
xor
in
arpl
sbb
xchg
pop
icebp
popf
push
xchg
movl
sysexit
rclb
inc
outsl
sbb
rcrb
xchg
sub
subb
aad
or
les
pop
outsb
jecxz
fwait
jmp
mov
inc
es
add
cwtl
gs
adc
ds
adc
add
xor
lcall
xor
push
dec
push
pop
pop
jmp
shrl
das
adc
test
or
nopl
dec
pusha
dec
mov
xchg
dec
cli
inc
or
insb
fprem
test
mov
iret
or
jp
idiv
cs
and
movsl
test
xchg
arpl
add
and
xor
jnp
xchg
mov
fwait
cwtl
mov
mov
fldenv
aaa
mov
xchg
lods
mov
sarb
in
mov
mov
pusha
test
ret
pop
jne
outsb
mov
push
cld
or
jb
xchg
jle
mov
sahf
jmp
mov
ja
fs
push
ret
pushf
xlat
in
scas
mov
outsl
dec
call
lcall
inc
inc
push
jmp
imulb
xor
mov
sub
movb
movd
stos
mov
aaa
std
mov
mov
push
sub
loop
int3
mov
fsubl
inc
movsl
sbb
jae
outsb
mov
jae
xchg
fwait
das
xchg
lahf
rcr
xor
jo
sbb
push
fs
dec
push
test
in
push
pop
iret
and
xor
sub
push
mov
jecxz
dec
pop
rorb
pop
or
cmpl
cs
fdivrl
arpl
mov
mov
testb
or
mov
mov
mov
xchg
or
imul
xchg
subl
xor
push
loop
fwait
sbb
lea
push
jmp
and
mov
xor
add
movsl
sub
add
stos
mov
sti
loopne
scas
inc
lret
leave
enter
push
mov
or
mov
pop
outsl
insb
das
cmp
mov
mov
dec
jno
jmp
push
mov
pop
dec
mov
ljmp
leave
dec
xchg
pop
mov
and
negl
loop
mov
movsl
jl
out
mov
xor
outsb
push
ds
stos
adc
mov
gs
and
test
into
arpl
jae
nop
int3
fiaddl
mov
push
mov
aam
outsl
cmpb
sub
call
lret
les
imul
stos
cltd
imul
adcl
jno
mov
je
add
stos
fldenv
pop
mov
leave
ljmp
xor
cmp
jae
psadbw
push
xor
inc
push
mul
daa
in
outsb
mov
xchg
mov
daa
or
xor
mov
cmc
outsb
ret
sub
jns
xor
test
mov
aam
inc
cmp
inc
sbb
cmp
pop
cltd
ss
movsl
add
push
sub
xchg
inc
mov
pop
sti
adc
xorb
jl
add
out
xor
out
mov
std
adc
inc
lds
jno
test
cmp
in
neg
xchg
lds
int
jg
mov
or
push
xchg
ja
inc
fwait
setns
ret
in
jbe
subb
lret
lretw
mov
jmp
adc
mov
push
xchg
sbbl
mov
mov
xor
xchg
xchg
lahf
xor
sub
and
in
mov
in
push
frstor
es
jmp
xor
negl
or
fwait
bound
sti
mov
jmp
movsl
pop
pop
in
out
pop
inc
daa
cmp
mov
rcrl
pop
sti
sarl
dec
xchg
int
aam
xor
stc
mov
lods
ss
mov
mov
inc
cmp
jo
sub
xor
xchg
dec
out
mov
in
ljmp
xchg
repnz
gs
rcrl
mov
mov
in
add
mov
ds
sbb
imul
mov
mov
inc
pop
addr16
insb
mov
mov
pop
es
dec
mov
mov
mov
mov
outsb
outsl
int3
lods
pop
jmp
or
jno
icebp
nop
loope
mov
bound
loope
mov
add
push
enter
mov
cmp
mov
push
inc
cmp
loop
fdivrs
ret
js
xchg
jmp
pop
les
repz
cmp
loop
lock
es
mov
icebp
rcr
lds
fbld
push
xor
movb
add
ret
dec
xor
xchg
pop
jns
mov
mov
inc
mov
jmp
jmp
ja
pop
into
stos
repnz
mov
cwtl
das
popa
pop
push
imul
cltd
jmp
sub
cmp
adc
pop
mov
push
mov
cld
mov
repz
int
testl
mov
push
inc
iret
std
das
in
and
out
call
mov
dec
es
lret
das
jae
cmp
mov
push
xchg
mov
inc
mov
orl
sub
jge
mov
or
les
lahf
aaa
or
inc
gs
jle
or
inc
mov
xlat
inc
mov
in
mov
into
les
sarb
int
jl
loop
outsl
and
ljmp
adc
jl
test
insb
xor
sti
mov
inc
mov
out
mov
lds
ret
add
ja
cli
shl
sahf
stos
jecxz
pushf
push
mov
add
pop
adcb
or
popa
inc
out
push
insl
sti
mov
and
jo
inc
cmpsl
push
popf
popa
pushf
nop
pusha
xchg
shl
lods
testl
fdivrl
adc
push
adc
mov
pop
shll
cmp
mulb
in
push
jae
sbb
cmpsl
dec
dec
fs
jne
push
outsl
add
test
push
push
fsts
sub
idivl
aas
aas
mov
jecxz
mov
loop
add
push
rcrl
pushf
push
call
sbb
dec
stc
jo
cmp
push
lock
adc
xchg
sti
sbb
roll
outsl
jmp
xchg
mov
push
loopne
addr16
stos
xchg
xchg
sysenter
lahf
test
dec
lock
jb
mov
pop
stos
and
pop
jp
js
and
imul
aaa
in
sbb
cmpl
sub
pop
mov
sub
aam
iret
int
xchg
insb
xchg
inc
pusha
cmp
lahf
jg
mov
fistl
test
pop
mov
fildl
xchg
and
fsubs
mov
mov
jbe
xchg
sarb
arpl
push
int3
aaa
sbb
jae
pop
cmp
ss
add
cmpsl
out
xor
aas
addl
xchg
cmpsb
pop
repnz
pushf
in
dec
stos
inc
inc
pop
dec
jmp
aaa
cs
pop
frstor
sub
in
popf
iret
sub
cmp
dec
scas
jg
enter
lods
and
and
add
rorl
xchg
adc
daa
mov
dec
aas
push
jo
xchg
hlt
cmpsb
cwtl
push
inc
mov
lock
test
cmp
pop
mull
lret
ja
pop
gs
insb
cmp
loope
mov
dec
lea
push
and
adc
insb
xor
and
push
mov
inc
fsubr
and
sar
jns
ror
cld
mov
popf
fidivrl
push
je
or
iret
mov
dec
sti
cltd
cmp
pop
adc
in
in
bound
movsb
std
sbb
push
jne
xor
xchg
scas
jae
and
or
jecxz
sub
hlt
dec
push
sbb
push
mov
add
mov
push
fistpl
jp
hlt
shrl
push
jae
push
dec
xor
shl
lea
push
push
mov
daa
dec
sub
pop
sub
in
mov
loopne
cmp
scas
xor
fldt
fadd
push
pop
cld
in
xlat
stos
or
bound
sbb
clc
push
pop
lods
inc
das
cmp
pusha
scas
aad
xchg
push
push
jl
mov
dec
call
lcall
push
adc
pop
shr
sub
inc
or
gs
adc
jo
sub
decb
mov
adc
mov
or
in
lahf
sub
cmp
mov
test
fs
sbb
mov
push
mov
mov
mov
es
pop
int
cmp
sti
bound
mov
in
push
test
inc
loope
imul
call
lock
scas
dec
dec
shlb
gs
orb
dec
nop
and
repnz
sub
mov
icebp
lret
pop
pusha
mov
cwtl
pop
in
push
cmp
addl
jnp
mov
pop
sbb
mov
or
andl
fidivrs
outsl
repz
xchg
sub
fisubs
out
mov
jne
and
iret
icebp
sahf
lcall
lods
out
add
test
push
mov
out
push
xor
sbb
dec
adc
test
xchg
push
mov
popa
rcl
sahf
push
xorl
lods
mov
cmc
mov
mov
mov
jp
push
es
mov
in
fwait
and
sbb
add
and
mov
jb
cmp
cmc
pop
idivl
xor
pop
pop
std
loop
outsl
or
icebp
insb
jp
dec
cmpsb
rcr
lcall
pop
cmovle
mov
ljmp
mov
lcall
adcb
shrb
fst
in
pushf
add
cmp
cmp
sub
aas
fsubrl
or
xchg
push
loope
sti
into
xchg
push
mov
movsl
jbe
xchg
js
loope
fwait
sti
cmp
cmp
cmp
add
sub
mov
outsb
xor
or
push
add
jnp
jl
fstl
daa
xchg
xchg
or
xor
enter
out
insl
movsl
outsb
stc
test
mov
pop
and
js
into
into
out
add
jae
xlat
repnz
leave
lea
jnp
sub
xchg
shl
arpl
lods
inc
ret
es
jp
stc
insb
imulb
shll
loopne
xorl
in
jge
push
adcb
pop
mov
sbb
out
daa
fdivl
pop
addr16
lods
scas
sbb
cmp
lret
mov
loop
int3
xchg
pop
aaa
frstor
inc
pop
lods
and
cli
imul
mov
add
imull
test
and
lock
leave
or
cld
jge
aad
aam
jle
jnp
mov
cmp
loope
xor
in
arpl
stos
hlt
test
movsl
dec
xor
mov
fisubs
mov
jl
loopne
jg
clc
stos
out
sub
pop
in
in
mov
lret
cmpsb
adc
mov
mov
js
inc
mov
push
clc
add
pusha
ret
jp
xorb
fisubrs
jb
sbb
fdivrp
pop
mov
jbe
cmpsb
sbb
mov
lods
push
stc
dec
cmpsb
dec
or
das
movsb
xor
jecxz
sub
and
fsts
xchg
stos
sbb
mov
cmp
int
fiaddl
xchg
sub
aad
inc
into
outsb
fidivrl
xor
daa
sub
pop
pop
aaa
jno
pandn
mov
pushl
or
dec
add
push
or
out
pop
loopne
inc
jg
sahf
pop
rorb
psrad
sbb
push
mov
lahf
xorb
mov
cli
adc
and
aam
push
lcall
ss
dec
addr16
pop
js
cmp
int3
cld
movsl
arpl
xor
fdivr
test
lds
push
stos
adc
cwtl
push
test
dec
loop
mov
jmp
ficomps
pop
and
and
inc
push
jnp
pop
sar
pop
fwait
pop
pop
enter
push
xchg
std
roll
jl
sub
shrl
nop
mov
mov
pushf
pop
pop
mov
in
cs
xor
pop
enter
cltd
adc
push
lock
out
jecxz
ss
dec
push
or
dec
and
push
dec
xlat
shl
int3
imul
dec
pop
andb
lcall
pop
loopne
mov
lds
mov
jp
inc
sub
jmp
cmc
movsl
xor
fisubl
xorb
loope
fwait
mov
outsl
dec
inc
pop
push
sahf
pop
mov
lea
insb
mov
adc
int
xor
adc
pop
sbbl
pop
movsb
outsb
das
mov
mov
movsl
lock
icebp
mov
xor
push
popf
push
dec
mov
xor
test
mov
xorb
out
sbb
jl
ret
fs
rcll
scas
sbb
adc
aaa
nop
pushf
push
mov
or
mov
mov
adc
push
or
movb
mov
lods
in
fwait
pusha
mov
jmp
push
push
xchg
inc
popa
not
cmpsb
sbb
jp
dec
les
dec
gs
adc
stos
fcoml
adc
xor
mov
xor
cmc
xchg
pop
mov
inc
and
cmp
dec
ljmp
or
jns
ficoms
aam
ficompl
stos
jno
int3
int
sub
jbe
arpl
or
fidivl
fcmovnu
das
fwait
cltd
repz
mov
les
inc
insl
clc
enter
xchg
push
dec
dec
pushl
in
cmc
fcoml
lds
loop
pop
mov
gs
dec
adc
mov
or
ljmp
and
test
mov
movsl
pop
sbb
xor
imul
bound
mov
xor
in
inc
fcom
inc
call
cmpsb
aad
mov
jb
xor
xlat
mov
test
imul
insb
aas
outsb
out
int
mov
and
sbb
mov
ret
imul
pusha
inc
pop
lret
sahf
sbb
pop
fwait
mov
imul
daa
cmp
cmp
add
push
outsl
xor
push
scas
sub
mov
jb
cmpsb
xor
push
shlb
dec
test
aaa
out
jl
add
fisubs
clc
or
cwtl
jne
sbb
xor
push
pop
iret
test
or
mov
test
mov
xor
push
arpl
jns
sbb
pop
pusha
in
mov
inc
cwtl
fldt
jmp
mov
scas
and
jecxz
inc
jmp
add
cli
mov
add
pop
jmp
icebp
mov
xchg
or
xor
pop
pop
xlat
dec
lods
out
mull
push
or
addr16
sbb
xchg
ljmp
xchg
in
rep
xchg
imul
push
hlt
dec
push
lds
in
add
pusha
push
mov
xorb
dec
pop
xor
sbb
iret
fnstenv
cld
add
mull
jo
sub
scas
inc
dec
sub
sub
pop
adc
loope
lret
les
cmpsl
dec
rcll
pop
sahf
inc
rclb
push
inc
xor
in
add
movsl
or
int3
icebp
cmp
push
and
jle
push
mov
adc
test
iret
add
jg
icebp
sub
inc
in
out
mov
das
insl
stos
rorl
lods
addr16
sbb
rclb
push
dec
mov
cmc
lea
cmp
add
decb
insl
imul
scas
stos
adc
inc
cmp
pusha
iret
xchg
int3
jne
popf
cmp
jnp
fisttpl
pushf
sub
sub
sbb
jl
sar
xor
insl
sbbl
neg
jg
das
inc
shl
sbb
ja
ret
test
xor
pop
or
pop
add
ret
popf
mov
scas
fndisi(8087
dec
pop
pop
jp
dec
push
mov
xchg
jge
scas
adc
insb
inc
pop
mov
or
test
into
dec
cmp
lret
jl
fwait
pushf
popf
mov
jmp
int
mov
out
adc
nop
and
call
lods
pop
aaa
lcall
inc
insb
imul
xchg
movsb
imul
jmp
jne
jge
scas
mov
into
mov
cmp
push
adc
jne
pop
loope
dec
lret
aam
sub
cmp
addb
shl
sbb
out
mov
pop
js
adc
sbb
subl
nop
push
sbb
adcb
cwtl
leave
aaa
loopne
push
mov
mov
and
rcrb
shr
jbe
cmp
jp
test
dec
xchg
repz
ja
xor
call
pop
xlat
in
pop
xlat
pop
jns
pop
ret
testb
lcall
aaa
push
xor
or
push
mov
stos
cli
sbb
sti
in
stc
lcall
inc
push
repnz
pop
mov
or
push
jbe
lret
jns
dec
add
sbb
idivb
lahf
inc
inc
pop
mov
inc
mov
adc
mov
test
push
jmp
std
shlb
cwtl
lret
scas
sbb
cmp
insl
or
mov
xchg
clc
rorl
push
fs
pop
pop
sbb
sbb
mov
popa
jmp
sub
mov
popf
or
mov
or
jb
mov
sub
mov
fldenv
icebp
push
jbe
stos
mov
sbb
and
lret
test
loop
add
jle
or
test
mov
in
mov
push
mov
dec
adc
shll
mov
xchg
cltd
sbb
sub
dec
sbb
popf
jnp
dec
and
daa
adc
push
cmp
pop
lock
mov
cmpsl
mov
jmp
std
iret
adc
adc
mov
inc
adc
mov
or
add
sbb
and
insb
ja
aaa
add
leave
mov
out
xchg
out
sub
push
add
notb
or
call
negl
insl
jecxz
loope
pop
in
mov
cli
jl
push
loop
sbb
out
or
pop
dec
sub
ja
adcb
xor
cli
or
pop
ss
pushf
adc
pop
ror
inc
inc
push
fsts
mov
clc
cmp
orb
mov
add
jp
enter
and
int3
jge
mov
pushf
inc
repz
repz
pop
lods
shr
dec
mov
fldt
jmp
jae
adc
cmp
test
fs
inc
xchg
out
mov
imul
jns
xchg
xor
or
das
push
imul
and
test
or
imul
cmpb
bound
cwtl
and
cmc
fistpl
icebp
repnz
dec
arpl
adc
mov
jle
addb
xchg
lcall
hlt
das
rolb
cld
and
nop
iret
cmpsb
xchg
cmpb
xchg
dec
inc
insl
dec
sti
in
pop
cmpsb
js
ja
out
insl
gs
add
rorb
dec
cmpsb
adc
mov
fsubrp
jo
fnstenv
pop
cwtl
pop
mov
in
bound
cmp
inc
or
pusha
inc
and
pop
icebp
inc
call
sbb
jmp
dec
inc
andb
insl
lea
loop
inc
push
stos
clc
daa
mov
inc
sub
inc
cmpsb
adc
dec
and
ja
mov
sbb
and
adc
pusha
mov
xor
adc
lods
or
mov
loop
mov
in
cmp
mov
pop
shl
int
cwtl
fadds
and
gs
icebp
int3
leave
push
dec
sbb
xchg
addr16
rcrl
push
or
pop
pop
jnp
inc
mov
rorb
mov
inc
movsl
inc
fwait
and
cmc
fwait
push
mov
imul
inc
cmp
and
insl
cmp
push
sub
mov
pushf
push
ljmp
lret
mov
outsl
sti
or
adc
pop
repz
scas
push
pusha
fadd
jp
in
test
cmp
rcrb
sbb
sti
inc
jmp
test
jb
lret
mov
dec
pop
fucomi
xor
inc
test
dec
jno
jle
dec
push
xor
movsl
loop
sub
mov
jnp
add
mov
jb
loop
dec
movsl
clc
add
cmp
xor
shrl
pushf
lods
ss
std
xchg
xchg
mov
push
sbb
stos
inc
outsl
pop
sbb
add
ss
lock
sub
sbb
pop
or
pop
int3
daa
icebp
in
mov
push
pop
cmp
das
add
in
fadds
daa
xlat
mov
xchg
int3
push
or
and
cmp
fcomp
push
mov
sub
jle
mov
sub
jnp
adc
mov
pop
rep
xchg
neg
dec
mov
xor
push
cmpsb
jg
adc
add
sub
and
xor
and
je
testb
outsb
cwtl
stos
xchg
push
xchg
jp
mov
roll
sarb
dec
test
push
push
pop
pop
dec
jmp
add
xchg
mov
push
test
mov
fdivs
pop
negl
mov
mov
ss
mov
cmp
loope
fildl
sbb
addr16
loop
lret
and
data16
sarb
sbb
pusha
out
push
cmc
mov
cltd
mov
jle
mov
jecxz
dec
mov
sbb
aaa
inc
mov
jge
aad
push
push
inc
push
pop
shlb
mov
pop
int3
cld
push
in
xor
xor
xor
imul
and
pop
mov
jge
int
vpaddq
aas
stos
pop
mov
mov
aad
nop
jg
adc
test
iret
frstor
inc
cwtl
mov
dec
repz
inc
and
push
mov
jbe
xor
jb
pop
mov
push
mov
rcrl
or
adc
cmp
or
loope
fiadds
insb
add
rcrl
clc
xchg
loopne
mov
mov
push
cld
inc
dec
mov
in
sarb
add
pop
sahf
fldl
jne
mov
lret
xor
andb
xor
and
adcl
stos
xchg
js
mov
out
cmp
jp
movb
inc
or
xchg
cs
bound
sbb
jmp
stc
mov
imul
xchg
add
jbe
movsl
mov
sahf
cmp
ljmp
rolb
jp
dec
push
pop
jae
jae
pop
inc
negl
dec
or
dec
into
lret
dec
flds
mov
lods
icebp
pop
pushf
mov
das
sahf
rcrb
cmpsb
inc
test
scas
out
rcrl
out
add
stos
mov
mov
xor
jecxz
repz
arpl
jno
sarl
out
lcall
mov
stos
xor
fcoml
lea
into
addr16
jmp
mov
xchg
jp
subl
out
stos
outsl
mov
pop
lahf
lods
fdivrl
lret
sub
stc
popf
sarl
or
test
popf
outsb
dec
std
pop
popa
out
loopne
insb
push
ret
addr16
jg
cs
mov
in
sarb
sbb
mov
push
or
fstpt
adc
mov
adc
ljmp
dec
gs
push
jns
mov
nop
pop
notb
imulb
cwtl
xchg
je
push
mov
or
ret
xlat
cs
test
and
subl
es
frstor
test
scas
and
push
fwait
jge
lds
das
mov
jl
jbe
add
mov
in
testb
mov
pop
popa
rcll
xor
jge
jno
lcall
add
xchg
test
xor
and
jnp
xor
pop
pop
push
push
lock
cmp
add
and
lods
xor
test
clc
aad
out
xchg
mov
mov
incb
xor
and
mov
mov
ficompl
test
cmp
pop
cmp
adc
mov
mov
mov
xor
jg
xchg
shrb
or
ds
push
adc
popa
mov
or
das
in
pop
cmpsl
stos
jge
les
pop
add
mov
dec
sub
scas
jne
leave
add
pushf
lods
adc
jns
mov
sub
pop
lcall
mov
lock
fmul
add
fimuls
sbb
insb
pop
sahf
xchg
sbbb
popf
add
roll
rcr
adc
insb
jb
xchg
or
clc
lcall
add
ror
iret
xor
shrb
dec
iret
scas
pop
mov
jns
sbb
jns
sbbl
dec
adc
ja
stos
aas
push
sbbl
sub
mov
push
push
loopne
jns
push
bound
jne
frstor
enter
frstor
mov
imul
adc
jno
mov
loope
sbb
adcl
add
cmc
pop
cld
mov
rcll
int
in
frstor
mov
mov
imul
mov
sti
mov
push
jge
decl
push
push
popa
cmp
pop
popa
lea
sbb
mov
xor
jp
cmp
aam
pop
sets
mov
adc
movsb
out
and
add
negl
dec
and
xchg
lret
outsl
std
dec
adcl
mov
inc
ljmp
push
dec
lahf
out
xchg
test
mov
out
leave
sbb
and
das
fwait
jle
inc
movsl
mov
ret
fistps
xchg
push
in
hlt
test
addr16
dec
push
or
daa
mov
addl
je
nop
shll
xchg
lret
and
repnz
in
and
mov
inc
push
dec
cmpb
fwait
push
or
xor
cmp
outsl
ss
lods
repnz
imul
xchg
xor
leave
mov
inc
movsb
imul
in
hlt
xorb
jns
mov
mov
rorb
sbb
add
mov
pop
idivl
fisttps
jg
ss
mov
mov
jns
pop
sub
cld
dec
stos
jno
mov
out
inc
dec
jb
loope
dec
aaa
xchg
repz
jle
pop
push
rorl
adcb
sbb
mov
pop
sti
aam
scas
mov
mov
dec
insb
out
sbb
push
mov
sahf
dec
cld
xor
and
mov
dec
dec
arpl
lcall
mov
pop
adc
ds
inc
sub
pusha
leave
int
icebp
dec
xchg
mov
push
stos
in
push
mov
movb
sti
xchg
push
cmp
cmp
xchg
ljmp
mov
sub
scas
in
movd
pop
push
and
jecxz
cmp
dec
push
lock
in
push
loope
xchg
cmp
loop
int
jbe
iret
addl
mov
adc
fdivrs
je
adc
negb
jg
xchg
mov
mov
dec
jae
lret
sarb
ljmp
sub
mov
pushf
pop
mov
mov
repz
pop
mov
push
js
loop
loope
or
fldcw
sti
in
mov
jb
fistps
rorb
lret
push
jp
mov
out
add
gs
into
mov
inc
mov
test
ljmp
cmc
jmp
mov
jp
or
ret
mov
arpl
test
notb
in
push
jl
pop
jle
mov
pop
jo
mov
iret
sbb
out
pop
push
lcall
xchg
stc
add
add
outsb
loop
setg
push
push
pushf
jno
stc
mov
cld
lcall
push
std
adc
test
or
int
ret
lods
dec
and
push
add
pop
mov
test
lcall
les
popf
nop
pushf
int3
mov
loop
pop
push
cmp
int3
pop
dec
fwait
dec
jo
or
cmc
adc
lcall
aam
xchg
sbb
decb
int
out
scas
add
jl
les
cmp
inc
jb
andb
ljmp
push
mov
ds
jne
mov
sub
dec
push
out
cltd
movsl
arpl
lock
dec
insl
dec
je
test
sbb
leave
sbb
loope
jae
sub
in
mov
lds
xor
cmp
adc
mov
cwtl
inc
push
leave
sahf
popa
xor
pop
sbb
outsl
mov
xchg
push
xchg
push
jmp
stos
or
add
jge
pop
pop
rorl
pop
sub
in
push
mov
arpl
adcb
repnz
loope
sub
xchg
inc
into
movsl
inc
add
adc
aam
mov
push
xor
xor
mov
addr16
jnp
scas
sbb
inc
cwtl
dec
mov
push
clc
lods
pop
in
scas
mov
jecxz
and
ror
loopne
sbb
repnz
cmpsb
std
and
imull
scas
add
cmpsl
xchg
and
lds
dec
ja
addr16
jbe
or
fdiv
sbb
int
jb
sub
fdivrl
or
mov
cli
adc
fs
lock
jmp
mov
adc
dec
add
loope
xchg
into
mov
dec
pusha
sbb
mov
add
faddl
mov
stos
xchg
ds
adc
addl
call
sarb
fucomi
push
in
inc
xchg
xor
movsb
stos
shrb
mov
inc
and
cs
inc
imul
popa
xlat
sub
mov
or
das
in
mov
lods
add
sbb
push
or
scas
mov
cmp
out
popf
lods
cmp
and
shlb
xlat
test
mov
mov
xchg
xlat
ret
jge
and
popf
jg
ret
mov
in
xor
lcall
aam
push
out
inc
stos
rcrl
fsubl
mov
lahf
dec
arpl
lahf
or
mov
loope
aam
jne
sarl
out
sbb
sub
sbb
jmp
cld
loope
aam
dec
adc
mov
mov
mov
cmp
or
imul
and
pop
mov
fisttpll
sbbl
xchg
sub
icebp
insb
jnp
pop
jb
adc
dec
fildl
inc
mov
fadd
in
dec
push
sub
nop
and
out
xchg
lcall
pop
mov
into
sub
inc
dec
sbb
in
insb
and
mov
mov
movsb
icebp
add
sbb
cld
jmp
cli
pop
and
jl
repz
mov
sub
or
cmp
or
mov
fcoml
cmp
and
push
lods
dec
xchg
sbb
sbb
pop
jg
mov
rcll
xchg
test
in
pop
movsb
xchg
adc
pop
dec
xchg
jmp
mov
jecxz
or
in
cmp
sub
cmp
test
sbb
cli
mov
lret
mov
jno
mov
fisubrs
repz
stos
outsl
icebp
mov
int3
inc
loopne
outsb
xlat
int
inc
adc
out
sub
mov
xchg
dec
mov
inc
jnp
mov
xor
jp
notb
push
jl
inc
lock
add
dec
out
inc
test
iret
add
movsb
int
pop
rolb
ss
aam
fisttps
out
dec
enter
dec
lds
out
add
and
loopne
pop
mov
addr16
xorb
insl
pushf
imul
jne
daa
or
hlt
xor
pop
stos
js
jge
rcrb
lahf
mov
push
push
gs
push
push
xchg
in
cmp
je
test
fwait
cmp
in
dec
adc
rcrl
dec
xor
ljmp
mov
push
and
inc
cld
sub
push
sbb
testl
inc
js
popa
add
lret
dec
xor
bound
pop
loope
mov
push
mov
cmp
mov
movsl
and
iret
cli
decl
dec
adc
pop
sub
cmp
lds
addr16
dec
aam
ret
mov
inc
push
fadds
std
cli
mov
repnz
xchg
sbb
fidivl
mov
pop
adc
or
addl
rcrb
inc
xchg
jp
mov
sbb
cmp
or
mov
repnz
cmp
fsub
mov
nop
mov
inc
sbb
faddp
aaa
call
dec
jae
or
stc
addr16
out
mov
lods
movsl
outsl
xor
mov
aas
mov
aad
mov
pop
push
insb
movsb
and
push
xchg
lahf
xor
das
mov
stos
adc
nop
mov
add
movsl
lods
sti
mov
aam
and
adc
or
ja
cmp
xchg
adc
cmp
lods
mov
in
push
jbe
mov
js
popa
push
js
pop
das
notl
dec
out
add
jge
fstpl
inc
scas
divl
sub
inc
ss
xchg
push
jae
xchg
lock
adc
jmp
fmul
fwait
popf
pushf
ss
mov
and
andl
add
popa
cmp
jno
stc
adc
add
push
inc
xchg
lahf
xchg
test
cli
pop
int
inc
ret
and
movsl
jae
add
clc
jo
mov
fs
xor
dec
jmp
ret
mov
mov
jg
jns
mov
add
push
fdivs
sub
dec
cld
jecxz
sbb
mov
xchg
pop
push
or
mov
data16
add
sub
scas
loope
dec
sti
push
cs
sbb
cmp
push
fisubrl
cmp
arpl
cli
iret
out
clc
adc
mov
cmp
push
ja
mov
sub
lcall
inc
xchg
enter
fwait
sub
loop
hlt
adc
cwtl
and
sbb
scas
jnp
pop
inc
test
jno
imul
xorl
movsb
add
gs
out
cmpsl
lret
rol
and
mov
scas
pop
in
push
or
and
loope
or
mov
push
push
and
cmpsl
sbbl
mov
nop
call
sub
dec
cwtl
push
cwtl
lret
sub
or
lea
xorb
sub
sbb
lock
dec
cmp
cmp
push
dec
sahf
fadd
mov
daa
aam
addr16
inc
pop
xchg
add
or
sbb
nop
es
push
scas
divl
xchg
cmp
or
mov
ret
pop
aas
imull
push
or
lret
pop
inc
mov
and
clc
int3
test
daa
xorb
mov
sbb
flds
and
in
dec
mov
xlat
adc
scas
cmc
lret
addr16
and
aas
mov
jecxz
push
pop
rcrb
push
xor
into
test
jecxz
add
push
fdivrl
pop
cli
xchg
mov
or
jge
cmpsb
lods
ljmp
test
xchg
pop
hlt
loope
rclb
sbb
loope
popf
lock
data16
xor
cmpb
push
add
push
push
in
mov
in
sub
fstpt
jg
xor
xchg
lret
push
lods
cli
mov
pop
or
in
loop
cmp
fldl
jb
pop
adc
xor
inc
inc
jmp
pop
hlt
add
ret
lcall
cmpsb
mov
push
jecxz
or
sbb
push
in
sub
or
rorb
js
aas
enter
dec
insl
inc
mov
and
adcl
iret
cmpsl
fchs
aam
loope
adc
push
pop
cmp
cmpsl
sbb
popf
pop
sub
jl
mov
stos
mov
jns
add
sbb
jo
fiadds
adc
pop
nop
xchg
push
mov
mov
popf
sbb
inc
mov
pop
inc
xor
jo
lock
sbb
test
dec
jbe
fistpl
lea
adc
fstpl
cmc
mov
rcl
jge
int3
xor
lret
aad
add
xor
ret
cld
or
cltd
aam
cwtl
pop
aaa
lods
sbb
and
and
pop
pop
mov
mov
xor
subl
jb
jmp
lcall
and
mov
cld
inc
sub
fwait
xchg
rorb
pop
jae
pop
int
test
adc
scas
fiaddl
pop
or
dec
sbb
add
lds
out
repz
jmp
dec
cmpsl
ss
pushf
xor
jle
jno
insl
into
sub
lods
and
sub
xor
mov
sub
cltd
lahf
js
fmull
sub
jo
mov
mov
clc
insb
mov
cmpb
inc
pop
xor
jns
es
mov
clc
xchg
xor
xchg
mov
leave
push
push
ss
inc
and
and
cwtl
push
ss
call
out
xchg
lds
lret
fcomp
cwtl
lret
out
imul
mov
idivb
inc
cld
or
sub
push
fldenv
mov
into
xor
cmpsb
inc
mov
imul
xchg
push
dec
in
cmp
jno
icebp
popf
inc
arpl
arpl
out
jg
xor
rolb
push
dec
mov
sub
add
fs
js
jbe
mov
in
inc
mov
arpl
cli
addl
add
jns
movsl
out
repz
fcomip
xchg
dec
pusha
mov
or
jg
push
cmpsl
jl
or
xor
xchg
popa
or
mov
pop
and
sbb
jmp
sub
cmc
jno
repz
and
mov
sub
inc
dec
hlt
imul
int
mov
mov
lahf
arpl
add
fcmovb
jg
aas
das
jae
push
push
fdivrl
jb
stos
lret
mov
outsb
xor
xchg
sahf
insl
cmp
lock
out
jecxz
hlt
push
xlat
add
add
cmp
test
pop
jecxz
or
in
jnp
mov
outsl
sub
mov
nop
adc
stc
fstps
mov
xchg
bound
sbb
test
outsl
pop
xorl
add
fs
pop
dec
arpl
daa
fsubs
dec
or
mov
je
dec
push
neg
test
or
sbb
mov
cmp
in
lret
mov
lock
xor
pop
mov
sti
dec
imull
dec
lahf
andb
dec
jp
aad
ret
mov
and
cli
in
test
push
jle
xor
sbb
fmuls
lahf
std
inc
pop
stos
shrb
add
xor
dec
sbb
fisubs
mov
pop
call
push
sahf
pushl
xchg
cmpsl
gs
dec
repz
mov
pop
sbb
pusha
iret
das
shll
add
mov
mov
mov
dec
in
lahf
mov
ds
rorl
adc
pop
mov
out
adc
shrb
cs
call
enter
cld
sub
pop
cmp
stc
xor
jmp
push
add
pop
dec
shll
aas
mov
and
fsubrl
es
mov
cmpsb
outsb
push
add
lcall
mov
imul
shrl
fbstp
mov
mov
and
push
js
or
frstor
xor
test
jno
pop
push
or
fsub
daa
clc
test
add
popa
mov
cmp
jmp
icebp
xchg
sbb
test
out
enter
pop
aad
xchg
push
imul
stos
mov
pop
pop
mov
adc
jecxz
adc
and
fwait
jmp
mov
rcll
and
rcl
lods
mov
ret
scas
pop
dec
gs
lahf
mov
push
ja
push
jno
test
lds
lods
mov
rolb
push
fdivs
lcall
or
out
cmpb
stos
cltd
js
test
and
andb
sub
cli
mov
pop
mov
mov
adc
lds
inc
mov
popf
mov
xchg
mov
popa
cwtl
xlat
sub
lds
push
push
pop
inc
rorb
dec
pop
jno,pt
lods
mov
and
jge
jo
inc
dec
dec
pop
mov
sub
jl
aad
mov
jno
adcl
loopne
ds
cmp
addr16
test
push
jp
sbb
add
push
sbb
sbb
add
dec
inc
push
sub
pop
fcomps
push
popf
push
jns
jecxz
in
fadd
lods
push
xchg
outsb
push
xlat
push
dec
jne
push
mov
push
or
push
ja
adc
pop
sub
imul
dec
add
dec
jl
lret
hlt
shrb
mov
out
xor
xor
pop
pop
adc
cmpsb
and
cmp
mov
mov
mov
int3
insb
jno
nop
jle
mov
in
call
pop
inc
rorb
std
dec
movsb
gs
leave
pop
sbb
mov
jge
sahf
cmp
sub
xlat
add
lea
andl
aam
lods
shll
or
sarb
mov
xor
ss
inc
mov
fwait
das
insb
xchg
push
xor
divb
stos
sub
pusha
adc
push
mov
jle
jb
push
pop
or
stos
mov
mov
mov
mov
in
sti
je
adc
insl
mov
enter
push
leave
inc
mov
int3
dec
add
aad
add
rolb
mov
push
in
fimuls
sub
xor
jns
stos
or
adc
lods
fistl
divb
push
xchg
hlt
outsb
pusha
aam
xchg
subb
shlb
jae
sub
xchg
stos
mov
int3
imul
dec
scas
adc
stos
adc
int
pushf
loopne
sbb
pop
pop
jae
rcrb
mov
sub
lret
mov
gs
fcoml
inc
pop
push
aaa
out
fsin
jo
in
movsb
and
mov
push
in
mov
jns
add
push
and
iret
jo
jo
fsubrl
inc
arpl
jno
fwait
xchg
rol
lret
outsl
and
mov
lret
jg
cmp
mov
push
lds
das
dec
push
cmp
cmpl
adc
and
add
inc
and
stos
adc
das
inc
lds
aas
adc
loopne
inc
adc
loop
xchg
jns
add
pop
sahf
cmp
push
xchg
gs
cmpl
mov
mov
sti
pop
push
xor
je
out
iret
je
jb
daa
jbe
mov
ja
cmc
orb
loop
xor
add
mov
sbb
aam
pop
ja
mov
pop
sbb
pmuludq
xor
mov
rcrl
iret
cmc
roll
jae
push
add
outsl
sbb
jne
jnp
pop
inc
sub
cmp
lret
mov
and
stc
popa
mov
fcomi
or
pop
cmp
add
pop
bound
cmp
in
lods
mov
aas
mov
insl
push
cmp
xchg
shll
ds
xor
pop
mov
scas
cmp
lret
adc
mov
loope
push
pop
imul
cmpsb
sbb
shlb
arpl
pop
mov
jo
push
orb
ja
add
add
leave
gs
adc
pop
test
push
cmp
inc
lea
clc
cld
cmp
xchg
stc
in
and
and
lock
jl
dec
jae
nop
inc
iret
lds
movsl
jge
test
pop
in
or
lcall
cmp
mov
mov
or
xchg
jg
and
mov
inc
pop
clc
push
adc
cmp
imul
dec
arpl
jl
mov
lods
test
ja
jnp
dec
or
int3
cmp
dec
push
dec
mov
test
add
dec
dec
add
stos
test
adc
jl
and
cmp
das
jnp
push
stos
mov
or
mov
test
jno
popf
ret
daa
push
jb
insl
mov
lods
in
stos
lock
xchg
addr16
lea
jae
test
cmc
call
dec
mov
sbb
mov
mov
push
movsb
add
dec
shlb
xchg
roll
jle
xlat
mov
mov
adc
cmp
mov
cli
xlat
je
js
rol
mov
or
sbb
push
dec
mov
xchg
push
cmc
jmp
cmc
call
pop
xchg
pop
mov
dec
xor
add
xchg
xor
sbb
adcb
inc
mov
lahf
xchg
mov
adc
pop
popa
xchg
outsb
push
hlt
mov
insb
mov
shlb
out
and
movsl
and
push
pop
sub
test
push
insb
push
dec
push
adc
inc
jbe
mov
clc
cmp
adc
adc
jp
or
ljmp
mov
data16
movsb
cld
sbb
sub
xor
adc
dec
stos
push
daa
sub
or
andl
stos
aam
cli
or
addr16
nop
cmp
andl
lret
ds
and
loopne
mov
call
mov
mov
push
cmp
test
inc
xchg
jo
adc
sub
pop
push
sub
mov
lahf
push
lret
fcomi
popf
rcrb
test
in
adc
xchg
add
aaa
lds
adc
popf
sub
idiv
mov
cmp
xor
ds
ror
mov
ret
negb
sub
mov
pop
jo
aaa
mov
adc
pop
aad
cmpsb
out
mov
out
fdiv
inc
movsl
cmp
sub
cmp
jge
xor
jnp
mov
loope
pusha
push
ja
pop
jmp
pop
xchg
test
loope
scas
mov
call
in
push
imul
icebp
sbb
pop
mov
xor
adc
adc
and
xchg
adc
jle
and
stc
dec
inc
icebp
hlt
cmpb
lcall
aad
or
mov
test
cmp
int3
in
sub
leave
or
xchg
iret
sub
sub
lods
lods
mov
outsl
mov
bnd
adcb
pushf
jbe
pop
inc
pushf
popf
and
and
aam
cwtl
jnp
nop
push
inc
inc
call
sbb
push
jecxz
pop
insb
jmp
jmp
cli
push
mov
mov
insl
insl
mov
xchg
mov
inc
sub
int
mov
insb
jns
pop
int
dec
xlat
inc
lret
in
cmp
xor
xchg
enter
and
or
pop
and
lret
in
jmp
push
decl
idivb
dec
int3
xchg
mov
pop
mov
pop
add
lods
sbb
imul
mov
pop
stos
shr
sub
arpl
sub
mov
inc
dec
dec
sub
shll
mov
imul
cmp
push
mov
dec
add
popa
pop
punpckhwd
int3
ret
mov
mov
xchg
add
call
shrb
pop
push
jne
jns
add
adc
daa
pop
xor
aas
ret
push
add
pop
bound
xchg
adc
cld
sub
or
sti
jle
jno
mov
mov
data16
fisttps
cli
rcl
mov
mov
push
inc
pop
movsl
repnz
xor
test
mov
scas
mov
mov
mov
adc
mov
xor
mov
je
mov
push
jl
or
cmpsl
sub
loop
test
jne
jne
imul
clc
mov
in
cmpsb
or
inc
test
cwtl
pop
fisubs
pushf
push
mov
pushf
insl
push
pop
sub
add
xchg
ficompl
mov
push
mov
pop
jns
in
cmp
sbbb
dec
out
rcl
lock
sub
cld
mov
shlb
push
push
xchg
fucomip
cmp
or
or
push
cmp
popl
sbb
dec
jecxz
into
xlat
sub
mov
enter
adcl
pop
ror
shll
shlb
jo
mov
mov
out
lods
test
and
lock
sbb
sbb
arpl
and
push
loope
arpl
pop
lds
dec
mov
mov
mov
addb
mov
xchg
mov
loope
dec
adcl
add
jle
icebp
call
pop
cmc
roll
xor
push
sub
dec
out
ret
dec
aad
ljmp
out
cmc
cmp
lahf
les
and
imull
nop
sub
fbstp
loop
inc
pop
dec
add
pop
outsl
sub
jp
adc
and
cltd
or
stc
nop
cmp
popf
daa
push
xchg
in
ret
mov
mov
inc
cmp
imul
pop
push
jne
icebp
out
add
xchg
into
pop
inc
push
cmp
jno
imul
push
mov
idivb
mov
mov
mov
rorl
dec
stc
jle
push
dec
dec
imul
xor
out
leave
jecxz
out
add
push
and
and
cmp
mov
ficompl
rcr
pop
and
mov
or
rol
inc
inc
jb
dec
adc
or
jl
inc
cmp
scas
mov
jns
xchg
mov
xor
xchg
xor
jg
xor
mov
jge
mov
lea
mov
shll
les
push
pusha
xlat
inc
bound
mov
xor
add
jns
jne
jge
icebp
push
xor
cmp
fdivrl
fiadds
addl
aaa
ss
adc
inc
outsl
aad
cmp
loop
or
cwtl
xchg
adc
in
mov
pushf
mov
push
test
test
mov
xor
dec
imul
mov
loop
int
adc
xchg
or
shrl
and
mov
add
sbb
cmp
shll
sbb
outsl
imul
cmc
and
mov
jo
addr16
sbb
xor
insl
loop
clc
pop
cmpsb
sbb
in
sbb
and
outsl
mov
mov
and
xor
adc
lret
pop
shll
repnz
add
stc
outsl
dec
jl
push
and
fs
test
and
push
jns
dec
insl
sbb
rorl
pop
mov
rclb
and
stc
adc
cmp
mov
mov
cs
mov
ret
and
xchg
xchg
push
mov
mov
lret
lds
inc
xchg
inc
ret
sbb
or
or
mov
sub
stos
xlat
jmp
or
cmp
popf
sub
inc
lahf
pop
push
hlt
arpl
mov
movsb
xlat
cmp
push
jbe
subb
sub
adc
jg
lret
aaa
jl
and
jle
shlb
add
nop
outsb
cltd
xchg
sbb
sbb
pop
cvtpi2ps
push
xchg
cmp
test
daa
pop
mov
fs
jl
aad
test
mov
insb
push
or
adc
pop
mov
jno
sarl
sbb
inc
leave
ja
rorl
dec
lret
fcomps
rorl
clc
decl
mov
pop
or
sar
pop
addl
push
insb
addr16
fistl
push
sbb
xor
in
cmc
cmp
loopne
das
icebp
mov
int
xchg
mov
mov
in
dec
into
and
inc
insl
lods
sub
add
pusha
xchg
cmp
pop
aad
cmc
shr
and
sbb
push
mov
and
push
loop
repz
adc
push
pushf
pop
inc
subb
call
popa
shl
loopne
adc
out
inc
add
jmp
in
loopne
pop
add
sbb
push
cwtl
rcll
sbb
mov
shll
cmp
push
mov
fcompl
jb
in
and
dec
xchg
int
mov
clc
jp
out
push
xchg
in
loop
iret
ds
jg
mov
cmp
xchg
mov
xchg
xor
scas
or
shrd
jge
push
and
mov
pop
int
adc
imull
sub
lea
xchg
cli
mov
dec
dec
add
rorb
fildl
dec
jg
loop
lret
and
fcoml
inc
out
pop
cmc
mov
int
dec
mov
jmp
jge
ljmp
adc
lret
adc
or
cltd
rorl
sbb
pop
outsl
jae
jg
xchg
adc
jno
xor
test
xor
inc
cltd
fidivl
test
push
xor
cltd
leave
lahf
dec
andb
addr16
mov
mov
jno
add
xor
aaa
dec
pop
push
xchg
dec
mov
aad
scas
cli
loop
ror
data16
int
roll
pop
mov
push
sub
xchg
sub
xor
sub
adc
cld
mov
adc
xlat
aas
or
data16
shr
icebp
cmp
mov
mov
adc
mov
out
test
adc
lret
mov
pop
inc
add
jmp
frstor
popa
xchg
xchg
xor
ret
jge
lret
mov
je
mov
movsl
insl
into
xlat
test
and
hlt
inc
jecxz
and
ficomps
nop
xchg
sahf
outsl
mov
cs
pop
pop
jl
andnps
dec
rcr
imull
sti
push
mov
dec
jle
push
jo
lret
push
pop
pushf
movsb
mov
cwtl
test
shrb
inc
lret
shrb
sahf
pop
jbe
mov
cwtl
jl
inc
shlb
out
idivl
mov
xor
jmp
mov
ds
test
inc
and
add
mov
xchg
aaa
mov
popf
and
cmp
test
xor
xchg
das
imul
push
fcomi
aas
pop
mov
sub
cmp
ret
sbbl
stc
pop
dec
nop
cmp
mov
pop
imull
adc
or
scas
mov
adc
cmp
inc
out
xchg
cmpb
bound
push
lea
pop
pop
dec
imul
cmp
popf
ret
ret
mov
popf
mov
dec
pop
int
pop
dec
fildl
test
mov
dec
pop
fistps
inc
mov
inc
dec
pop
scas
outsl
mov
mov
xchg
shll
cmp
push
pop
repnz
inc
push
add
sti
pop
add
sti
cwtl
push
shll
sti
roll
test
mov
je
pop
jno
push
inc
pop
movsl
xchg
divl
ds
lods
mov
fwait
adc
adc
adc
into
sub
adc
cmc
and
movsl
imul
mov
xchg
ss
fisttps
stos
std
mov
mov
push
mov
push
xchg
mov
mov
test
push
loopne
cwtl
sbb
js
adc
aam
stc
sub
and
cmp
cmpsb
pop
mov
mov
sub
rcrb
and
and
xchg
jb
mov
sbb
mov
imul
mov
fiaddl
fs
inc
mov
shll
je
jae
inc
sub
les
sub
mov
fidivs
cmp
test
cmpsb
idiv
mov
add
mov
mov
xlat
out
add
jg
shrl
mov
repz
movsl
out
scas
push
adc
pop
push
jne
jge
inc
fldcw
add
or
mov
test
ds
sbb
xor
cmp
adc
notl
pop
lock
lcall
inc
notl
leave
test
inc
jns
clc
clc
fiaddl
cltd
jge
es
stc
stos
adc
test
mov
sub
cmp
int3
jnp
lods
jmp
sbb
arpl
inc
inc
scas
in
outsb
stc
je
sti
jbe
bound
aaa
add
pop
das
aad
adc
lahf
dec
add
jp
movsb
xchg
cmp
mov
cmc
or
sub
pop
add
out
into
int3
in
jl
inc
mov
mov
mov
test
xor
mov
inc
xor
adc
subl
fimuls
addl
sub
sti
mov
icebp
stc
xchg
cmp
mul
lds
das
xchg
cwtl
pushf
loope
std
adc
scas
cmpsl
lret
into
add
sbb
mov
scas
mov
xchg
pop
jae
jns
mov
jmp
sbb
cs
mov
enter
stos
pop
addr16
lds
dec
rcrb
cld
dec
mov
test
jecxz
inc
loope
lcall
sub
xchg
pop
pop
lahf
jno
gs
mov
sbb
sbb
and
inc
jmp
int
fildl
mov
das
ljmp
xchg
das
and
ss
popa
dec
fistpl
pop
add
cmp
add
loopne
xor
xor
or
jmp
xchg
inc
cmp
into
jmp
sbb
or
movsb
add
loope
mov
xor
jmp
push
cltd
and
mov
jecxz
hlt
imul
jae
popf
inc
push
sbb
lret
lods
add
dec
test
cld
jp
shll
pop
ret
add
or
xchg
cmpl
add
rclb
aam
loop,pn
or
mov
inc
xor
jmp
cli
andb
rcrb
out
loop
mov
cli
pop
mov
add
or
int
mov
lea
outsb
in
test
push
and
sti
fs
cmc
jg
and
repnz
push
das
scas
jne
jns
add
mov
clc
add
mov
decb
sub
inc
cltd
mov
test
xor
jb
jb
into
repz
pusha
fsubrs
and
test
inc
das
pop
sub
addr16
jmp
ja
pop
into
gs
cmp
mov
xchg
sub
ret
xor
ror
stos
nop
add
jecxz
mov
addr16
movsl
adc
repz
mov
test
push
rclb
push
lcall
mov
or
aad
loope
lods
cmp
clc
sub
push
rorl
push
insb
loope
outsl
adc
lock
es
in
dec
and
dec
cltd
jg
cmp
push
lret
ss
jns
inc
adc
fwait
or
cmpsl
int
or
and
cmp
lds
inc
mov
stos
xor
fistpll
dec
inc
mov
dec
xchg
aad
call
inc
xchg
mov
outsb
mov
loopne
imul
dec
cltd
mov
fs
ret
decb
movsb
mov
repnz
push
je
in
outsl
push
mov
cmc
lcall
iret
push
int3
rclb
and
jo
out
shl
fwait
add
aaa
ret
jge
jae
jmp
test
das
das
cli
test
cmpl
pop
add
dec
cmp
push
mov
in
xor
or
and
dec
movsb
sub
inc
aaa
push
in
out
out
mov
call
loope
cmpsb
aam
or
adc
jbe
notl
xor
xor
pop
xadd
cmpsl
pop
xchg
adc
test
out
stc
dec
inc
xchg
je
repz
dec
adc
xchg
int
cltd
cmp
push
sbb
jle
bound
or
lea
mov
push
or
pop
pop
sti
jne
icebp
push
insb
stos
mov
sbb
dec
cmp
dec
mov
sub
inc
js
sbb
es
lods
js
stos
and
sbb
pusha
and
arpl
jns
add
cmpsb
icebp
sbb
xchg
int
sahf
das
out
sub
xlat
fwait
pushf
dec
enter
lahf
in
dec
xchg
mull
fnsave
cli
adc
out
add
xchg
sarb
jae
cmc
mov
clc
xor
lret
adc
mov
mov
test
cmp
jbe
xchg
das
sub
leave
popf
cmp
inc
jmp
or
ss
xchg
cmpsb
or
mov
std
arpl
xchg
daa
dec
jecxz
xchg
in
loop
pop
das
or
ficomps
fimull
inc
and
pop
fsubrp
lcall
sbb
aaa
sahf
jecxz
call
out
bound
outsb
mov
sub
mov
inc
int3
dec
pop
sbb
nop
xor
xor
mov
cmpsb
in
test
dec
sub
xor
sub
divl
fwait
cmpb
in
lret
mov
cmp
jp
divb
xchg
mov
cmp
xchg
fdivs
mov
sub
pusha
sub
push
test
jns
insl
push
daa
ljmp
in
cmc
xor
rcrb
mov
mov
dec
cltd
adcb
xchg
cmp
repnz
inc
test
mov
daa
sahf
loop
repz
shlb
nop
and
xchg
cmp
jo
data16
subb
cltd
frstor
xor
aad
ret
adc
jne
cmp
pop
push
cmpsb
cs
pop
pop
cmp
cmp
outsb
rorb
insl
xchg
insb
jecxz
pop
xchg
cmpsl
scas
ret
ljmp
dec
loop
outsb
dec
and
xchg
sbb
mov
stos
in
sbb
mov
dec
sbb
mov
insl
mov
jnp
nop
test
das
mov
sub
inc
inc
mov
pop
fistpl
dec
lods
jge
das
in
jne
mov
lock
bound
xchg
movsl
cld
inc
out
rclb
add
and
mov
mov
mov
add
pop
inc
and
movsl
dec
imul
xlat
push
stos
loope
cmp
test
shrl
cmc
dec
shlb
adc
mov
mov
sahf
aas
sbb
pop
inc
xor
je
cwtl
and
fs
idivl
in
lds
cmp
add
fs
out
mov
push
pushf
jl
pop
inc
jo
mov
sub
cmpsb
cwtl
les
jo
lock
jns
popf
pop
jle
push
cmpsl
push
pop
popf
pop
push
orb
sbb
xchg
loopne
and
adc
sbb
xchg
mov
pop
shll
in
push
sbb
out
stc
mov
ror
mov
cmp
test
jge
leave
out
pop
jbe
pop
scas
jmp
jmp
jb
call
aaa
adc
mov
dec
adc
in
js
sub
loopne
xchg
adc
inc
pop
std
push
mov
cmpb
repz
lahf
mov
and
and
push
shl
aad
pop
data16
adc
mov
pop
inc
or
xchg
dec
test
xchg
jae
icebp
mov
in
add
flds
cmpsb
adc
or
rolb
dec
sbbl
cwtl
div
sub
out
cmpsl
fmuls
imul
aas
lock
cmp
xchg
mov
aad
leave
stc
in
cmp
or
test
xchg
push
les
and
and
push
push
ret
bound
popa
or
sti
lea
mov
jno
inc
inc
or
cmp
stos
jle
scas
lahf
ss
not
cmp
mov
ljmp
push
xchg
ret
jg
mov
sahf
cmp
cmpsl
or
ja
pop
adc
add
call
mov
mov
and
cld
icebp
jbe
loop
or
ret
cli
cmpb
in
push
add
cmc
ror
push
insl
icebp
jge
je
ret
scas
xor
test
and
mov
gs
or
mov
dec
fwait
xchg
scas
js
xor
mov
popf
push
or
jns
stos
lret
add
mov
outsl
inc
adc
pop
loop,pt
add
in
pop
jmp
cmp
add
mov
add
xor
test
pop
dec
mov
bound
sahf
loop
add
in
add
ffreep
outsl
repnz
fistpl
mov
loopne
ljmp
add
pop
clc
fistpll
insl
mov
sub
roll
push
sbb
mov
xor
aam
mov
out
aad
adc
pop
sub
xchg
cmp
insl
push
out
and
adc
dec
xchg
ror
or
add
lret
pushf
cmp
jmp
push
decl
mov
std
xor
mov
js
test
pop
in
mov
ret
cmp
mov
cwtl
imull
and
mov
adc
lea
stos
lds
cmp
dec
adc
test
cli
xchg
jno
sub
rcll
jecxz
sbb
iret
movsl
mov
ljmp
cmp
xorl
pop
dec
jl
push
cmp
stos
vmovlps
lods
mov
pop
jg
mov
scas
pop
hlt
imul
pop
ss
mov
test
shrb
adc
xchg
pusha
mov
pop
nop
and
aaa
mov
shlb
and
and
fldcw
shll
mov
in
jbe
stc
mov
mov
mov
jno
sbb
add
addl
lcall
aaa
push
push
fsubs
pop
hlt
jg
aas
adc
xchg
xor
pop
test
dec
inc
sbb
and
xchg
or
pop
call
push
outsb
xchg
mov
add
push
pusha
jg
push
cmovnp
jecxz
xor
xor
add
aad
push
adc
xlat
dec
ficoml
rcl
inc
out
xor
jg
addl
loop
test
in
and
nop
dec
adcl
pop
ljmp
mov
cmp
jle
xlat
fnstsw
je
in
pop
insl
mov
and
es
pop
js
cwtl
fadds
inc
cltd
jo
push
cmp
mov
cld
xlat
test
jge
sub
icebp
sti
iret
jnp
insb
test
repnz
jg
addb
pop
dec
jae
movsb
imul
ljmp
into
mov
out
mov
pop
stos
add
push
mov
jne
xlat
fsubl
in
pop
xchg
and
jle
pextrw
adc
cld
es
data16
push
pop
sbb
sub
inc
stos
or
push
cmpl
push
in
push
std
add
or
sub
dec
mov
cmc
mov
dec
mov
pop
cmc
mov
xor
jnp
fisttpl
rorb
push
sbb
mov
mov
mov
dec
jp
aam
xor
sti
cli
dec
fwait
sbb
mov
push
sbb
push
aad
inc
mov
jmp
shlb
inc
inc
cmc
cmp
xor
xchg
sub
cmc
cmpsl
pop
sbb
dec
fisubrs
lods
and
incb
pop
filds
or
xchg
mov
sbb
xchg
mov
push
ret
lahf
orl
sub
lea
mov
jbe
es
in
mov
orl
sahf
jo
xor
pop
into
out
and
mov
cltd
cmp
aad
push
sbb
mov
and
mov
pop
in
jnp
or
cld
daa
into
jns
mov
xchg
sbb
ret
xchg
cld
pop
insb
loop
int
mov
xor
mov
cmp
scas
in
xor
lds
jge
leave
stc
pusha
cmp
xchg
pop
repz
inc
and
aaa
test
fnstcw
mov
or
jno
je
push
dec
lahf
les
fcmovbe
sub
hlt
mov
push
cmp
cmp
xchg
fistps
push
inc
mov
xchg
add
aas
push
and
das
fisttps
aas
adc
bsf
jo
jns
daa
insb
push
pushf
sbb
mov
hlt
push
fiaddl
jle
cli
cmpsb
int3
dec
scas
in
fidivrs
leave
std
lcall
gs
or
repnz
in
push
data16
and
ds
js
test
nop
clc
mov
lret
ljmp
test
std
mov
xchg
into
pop
nop
mov
popf
sbb
mov
push
dec
loope
testl
fidivs
cwtl
cmp
and
in
push
out
stos
mov
aam
aaa
pop
add
sahf
sbb
gs
push
clc
gs
inc
insb
daa
add
xchg
test
lods
xor
cld
mov
js
lret
jp
lret
aam
or
xchg
xchg
mov
lods
sbb
sbb
lcall
xlat
jg
hlt
leave
xchg
dec
push
stos
ficomps
dec
or
jl
dec
sub
pop
cltd
pop
mov
rcrb
jg
outsb
adc
jg
jae
xor
xor
fidivs
jae
and
decl
and
addr16
mov
mov
sbb
insl
imull
pop
js
addr16
int3
or
ret
aam
mov
rcr
jne
das
jl
jp
lods
cmp
jecxz
pop
pop
pop
test
push
ret
jle
lret
dec
loope
push
xor
pusha
mov
push
cmpl
jae
out
xor
pop
jb
adc
sbbb
add
push
loope
jge
arpl
jns
stos
cmp
and
mov
adcl
sbb
sub
call
mov
gs
daa
cmpsb
or
aad
cmp
add
sbb
add
add
in
xor
ret
cld
test
fisttpll
fcom
mov
xchg
cwtl
jns
push
repnz
and
pop
mov
das
mov
jae
int
xor
aam
and
data16
mov
mov
push
lea
les
loopne
xchg
add
aaa
shlb
cmp
repnz
push
adc
jle
mov
inc
adc
sub
loopne
shr
dec
fmuls
push
ret
xor
pusha
push
pop
loope
cli
dec
xor
lds
mov
sub
pusha
aad
push
xor
sub
loopne
jbe
cltd
sbb
or
pop
adc
andl
cmp
push
mov
xor
cld
out
jno
xor
sbb
xchg
xor
dec
sub
inc
in
in
iret
add
loopne
jae
mov
sbb
adc
sbb
mov
mov
adc
and
andb
jle
mov
mov
jp
cmp
shll
js
dec
fucom
or
outsl
pop
jecxz
sbb
cmpsb
les
ljmp
lods
push
mov
rcrl
cmp
push
cmp
gs
repz
pop
pushf
lahf
int3
push
and
scas
stos
xor
iret
push
cmp
movb
cmovg
test
xor
leave
hlt
sub
cmp
push
sub
dec
mov
xchg
andl
int
pusha
hlt
test
ret
push
addb
rcl
push
iret
mov
or
shll
pusha
gs
jno
jo
sub
dec
push
cmp
inc
test
push
fstpl
sar
addr16
mov
ficompl
cli
imul
or
push
test
mov
mov
push
fwait
jle
xchg
faddl
cmp
xor
movsb
cmp
mov
dec
clc
cwtl
jns
cmp
iret
fnstsw
push
push
xor
jl
inc
sbb
pop
xor
lods
daa
add
pop
jge
cmp
inc
cmpsb
add
ljmp
lock
shll
pop
jg
popf
and
in
add
jge
pop
pop
out
das
scas
or
or
cwtl
jecxz
cmp
xchg
mov
lds
ds
sbb
into
lcall
pushl
pop
insb
loop
addb
dec
cmp
pop
mov
idiv
in
dec
cltd
xchg
pop
test
sbb
jnp
pusha
jmp
scas
pop
push
sbb
imul
lea
mov
scas
pusha
mov
movsb
inc
push
enter
mov
adc
les
xchg
les
popf
lds
mov
xchg
sub
shr
inc
shrl
jmp
loope
push
mov
aam
cmc
sbb
xlat
jle
rcrb
lahf
add
inc
out
mov
mov
in
sar
adc
sub
ja
lcall
mov
cld
loope
repz
pop
dec
mov
stos
cli
scas
mov
cmp
xor
inc
xchg
add
inc
imul
cld
add
jmp
in
cmpsb
scas
test
std
loop
out
sbb
push
xor
bound
push
fs
mov
xlat
cltd
lods
movsb
rcrl
pusha
cmp
dec
scas
push
test
aam
or
clc
int3
jno
cmp
bndldx
fwait
rclb
xchg
xchg
jecxz
mov
inc
dec
fldl
lret
pusha
mov
inc
sub
pop
in
mov
icebp
out
jg
test
leave
ficoms
fcoms
sti
jg
nop
add
dec
fcom
sbb
adcl
or
add
xchg
je
loopne
mov
dec
add
cmc
xchg
sbb
mov
jge
loopne
pop
js
cmp
fdivs
and
mov
inc
add
imul
pop
shrl
push
rcrb
cmpsb
pop
mov
paddb
add
insl
test
aad
cwtl
and
in
pop
mov
enter
test
lret
lods
outsb
xchg
jno
inc
aas
push
stc
leave
xor
xchg
adc
nop
loopne
dec
sbb
in
mov
or
rolb
aaa
fimuls
jmp
push
and
hlt
xchg
mov
pushf
hlt
push
sahf
jmp
push
mov
add
add
adc
gs
cmc
push
or
or
movsl
shrl
push
xor
adc
pushl
insb
shlb
ret
lods
shlb
cld
or
inc
stos
imul
jno
adc
rcr
nop
jb
xchg
aas
in
ret
into
mov
inc
ljmp
pop
or
xor
cltd
jg
xor
mov
xchg
test
jno
icebp
ret
rcrl
and
out
pop
xchg
into
pop
fnstenv
inc
aam
mov
in
mov
test
arpl
pop
push
je
mov
jo
addl
push
sub
gs
and
shlb
add
pop
scas
pop
jmp
jne
shlb
lds
cmp
jg
add
push
and
push
jns,pn
xchg
mov
in
movsb
fildl
fwait
mov
jecxz
mul
rcl
fidivl
adc
or
and
xchg
xchg
stos
les
ss
or
adc
leave
mov
lock
test
adc
mov
cmp
mov
out
or
adcl
adc
or
xchg
and
int
ret
ja
lret
cmp
xor
and
sub
adc
bound
ss
xchg
sbb
cmp
or
test
push
pop
loop
mov
fld1
pop
in
lahf
jno
lock
pop
mov
inc
insb
daa
dec
xchg
iret
and
add
xchg
mov
cmp
add
push
stc
mov
pop
into
adc
jge
mov
out
xchg
mov
out
repnz
lret
std
pop
mov
lcall
mov
xchg
lret
pop
cli
aaa
sub
push
movnti
aad
push
jmp
adcb
xor
xchg
aam
fnstsw
mov
sbb
mov
jns
adc
cld
cmp
pop
push
fwait
aam
mov
dec
cmp
jno
jecxz
push
js
shl
int
insb
push
in
in
sahf
mov
imul
js
fcmovu
mov
cmp
inc
nop
cwtl
cmp
mov
mov
and
xchg
jp
ret
imul
iret
mov
and
adc
sub
fucom
std
xlat
sahf
in
mov
or
jl
pop
scas
jmp
loope
fistps
pop
jl
xchg
cmp
ficoms
adc
sbbl
sahf
dec
ljmp
sbb
pop
lods
fnsave
push
aaa
pop
jo
sub
je
pop
cmc
sub
mov
fucomip
lret
ret
icebp
out
xchg
ja
int3
leave
inc
or
movsb
mov
adc
sbb
mov
mov
repnz
push
cmp
add
shll
adc
xor
and
sub
insb
pop
xchg
hlt
xlat
mov
es
add
mov
pop
out
dec
in
add
jl
scas
inc
test
adc
test
adc
cmc
pop
pop
mov
mov
lret
lret
andb
sub
ja
outsl
hlt
enter
sbb
fstpl
cld
cmp
sbb
in
cld
pop
sbbb
fisubs
dec
clc
push
sbb
add
xor
push
pop
pop
push
or
inc
jns
push
fnstenv
push
scas
aaa
mov
mov
iret
icebp
lret
lahf
jb
movsl
jecxz
push
xchg
pop
std
dec
lods
negb
loop
push
jle
mov
inc
adc
push
dec
xor
adc
mov
dec
mov
inc
and
pop
ficoml
sub
push
xchg
fiadds
sarl
out
sahf
outsb
mov
movsl
stos
std
mov
ss
lret
test
frstor
jp
mov
cmp
imul
mov
mov
out
ret
out
mov
shll
imul
imul
dec
and
sbbb
neg
mov
leave
and
ss
movsl
in
into
aaa
cld
dec
push
jp
cmp
cwtl
and
and
pushf
sbb
pushf
insb
in
xor
sbb
aad
daa
andb
jno
add
xor
fnstsw
pop
imul
adc
adc
dec
lock
lods
loopne
loopne
fildl
out
jge
mov
add
cld
cmp
lock
nop
test
lcall
pop
jmp
shll
lds
out
jae
jmp
jae
xor
and
test
mov
outsb
cmp
fnstenv
jecxz
cmp
movsl
xchg
cwtl
mov
push
xchg
insl
ficompl
cmp
aam
inc
fisubl
stc
sub
cmp
fists
fiaddl
mov
sbb
js
in
lcall
stos
fisubs
aaa
imul
cmpsl
fistpl
cmp
xchg
xchg
addr16
or
or
xor
push
xor
xor
movsl
popa
inc
pushf
sbbb
mov
aas
sub
iret
lock
loope
pusha
xor
pop
add
pop
js
test
movsb
xor
pop
cmpsb
les
pop
adc
add
icebp
into
push
popf
and
xchg
inc
cmp
jmp
fs
jmp
nop
incb
fidivrl
sti
mov
ficomps
nop
xorb
or
fildll
mov
adc
and
adc
loopne
push
divl
cmp
jne
call
ljmp
mov
dec
jno
and
pusha
in
ss
aas
mov
stos
das
jg
sbb
scas
out
test
dec
ret
shlb
outsl
pop
sub
movsb
jne
repz
dec
scas
jge
aaa
je
adc
xchg
xor
divl
ds
xchg
iret
rorl
inc
sahf
mov
scas
xor
inc
push
add
mov
mov
inc
int3
lret
add
push
sbb
int3
mov
test
mov
cmp
dec
jle
pop
clc
movsb
js
fistpll
popf
inc
mov
addb
lcall
ret
jp
cltd
sub
dec
or
shlb
icebp
push
mov
addr16
add
lds
iret
and
dec
aad
push
dec
push
ss
push
movsl
into
jmp
fisubl
out
in
add
push
mov
fadd
in
sub
mov
adc
push
fsubrl
in
pushf
dec
pop
mov
pop
mov
fstps
adc
test
dec
xor
mov
xor
adc
cs
add
pop
inc
pop
xchg
call
xchg
mov
jmp
push
mov
mov
dec
xorl
push
pop
incl
adc
inc
dec
daa
xchg
jnp
and
push
jno
icebp
sub
xchg
inc
xor
das
jne
fmul
cli
xor
adc
imul
jae
imul
lret
jmp
aam
fimull
cli
lock
movsb
inc
or
idiv
add
fcomp
in
push
pop
push
jbe
rorb
jne
iret
pop
pop
fsubl
pop
aas
stos
loop
add
or
push
add
icebp
jnp
call
xlat
dec
mov
mov
inc
cmpsb
or
dec
adc
enter
inc
daa
pop
into
aam
jo
rorb
push
xchg
sub
pop
cmpsl
std
lods
sbb
sti
jno
xor
mov
dec
and
pop
pop
sbb
fbld
add
xor
sub
mov
dec
xor
inc
push
and
cmp
mov
mov
jmp
call
pop
ss
rol
lods
cltd
rcrl
dec
xchg
xchg
adc
idivl
xchg
enter
fisubl
cmp
ss
fistpl
mov
inc
movsb
jno
iret
mov
test
jp
push
mov
std
mov
sbb
imul
sahf
jge
out
adc
shlb
and
jb
fldenv
adc
enter
jge
add
inc
mov
mov
or
xor
or
and
xchg
mov
pop
xor
cmp
cmp
pop
insb
sbb
jle
nop
fiaddl
insl
jbe
mov
incb
dec
and
mov
push
inc
fdivp
clc
int
scas
rep
sahf
cmp
jmp
addr16
adc
mov
dec
xorl
sub
in
lds
subl
dec
mov
testl
mov
inc
xor
test
jnp
imul
xor
inc
movsl
xchg
rcll
sub
mov
repz
fwait
movsb
mov
js
dec
ficoml
mov
lcall
aad
push
loope
adc
mov
mov
sub
push
xchg
sbb
xorb
xchg
jns
fdivrp
in
xchg
lock
cmp
sahf
and
js
fisttps
dec
fldl
pop
testb
sti
mov
rorb
push
pop
rclb
dec
adc
pop
or
jns
cmp
mov
rcl
notl
adc
ljmp
sub
cmc
movsb
cli
rorb
cmp
sbb
add
xchg
orb
cmp
aaa
mov
aas
out
pop
or
xlat
xchg
adc
in
fdivrl
cwtl
cli
cltd
or
push
arpl
mov
fsubrs
push
add
out
mov
test
xlat
stos
mov
push
xchg
add
adc
xchg
mov
mov
rcl
xchg
jmp
sub
mov
push
pop
lcall
iret
decb
mov
and
insl
dec
push
xchg
div
mov
cmp
cmp
cmp
aad
mov
jae
push
nop
cmp
or
cmp
inc
cmp
xchg
xchg
loop
push
aam
bound
inc
sub
mov
movsl
and
adc
mov
js
out
push
enter
mov
scas
je
pop
popa
aad
jae
mov
adc
or
adc
adcl
aas
out
jg
ret
shll
addb
fcompl
aad
cmp
movsb
popf
inc
rcrb
and
sub
scas
add
pushf
insb
pop
mov
push
pop
jbe
sti
ficoml
pop
or
xchg
pop
sub
mov
cmp
pop
mov
pop
loop
xchg
cld
push
das
xchg
sbb
movsl
fstl
sbb
mov
arpl
xor
lds
push
punpckhdq
and
cwtl
stc
dec
cld
mov
jg
fldt
push
or
jb
hlt
mov
nop
push
ljmp
loope
adcb
jno
cld
bound
or
inc
xor
bound
adc
xor
dec
mov
fs
ljmp
cli
mov
and
mov
and
out
jg
notb
push
push
sbb
xor
add
mov
jmp
lahf
pushf
pushf
fistps
mov
enter
cld
in
dec
ret
push
sbb
jecxz
adc
xchg
xor
rcr
test
jl
mov
insb
and
cmp
scas
sti
fstl
xor
int
or
repnz
push
xor
addr16
xchg
jmp
sub
movsl
sbb
jl
and
fldl
cmpsb
add
out
inc
incb
mov
xchg
add
mov
loopne
xchg
subps
and
push
jecxz
aaa
repnz
aam
pop
decb
dec
movsl
mov
or
sbbb
mov
aam
roll
pop
stos
in
add
sbb
js
push
and
ljmp
fsubrp
cmp
rcrl
mov
aad
push
adc
push
ss
fs
test
test
loope
insl
xchg
mov
outsb
sub
fdivrs
inc
add
inc
loope
mov
adc
mov
pop
pop
xchg
data16
sti
add
mov
ret
or
and
test
xchg
stc
outsb
lds
stos
pop
pop
ror
ret
jbe
sbb
add
dec
mov
aad
add
lret
add
mov
or
xchg
movsl
mov
int
jo
bound
in
sbb
ljmp
je
adc
sbb
adc
jno
loopne
out
in
xchg
daa
sub
fxtract
lods
xchg
aam
push
xor
mov
push
pop
les
jge
mov
aaa
xchg
sub
push
add
xchg
and
sub
xor
outsl
cmp
xor
hlt
mov
mov
popa
jg
lock
out
adc
std
push
js
pusha
cmp
arpl
mov
das
push
pop
xor
push
jae
and
jmp
addb
pusha
lock
xor
cs
aam
mov
jecxz
mov
sbb
loope
or
rclb
loop
mov
and
aad
cmp
mov
out
lea
js
pop
pop
add
mov
and
mov
jae
out
dec
add
popf
dec
pop
jecxz
adc
and
int
xor
xor
in
xchg
dec
inc
negb
mov
push
pop
jg
inc
out
dec
mov
ret
imul
out
dec
xlat
insl
shrl
lds
mov
cs
pop
add
jge
cmp
sub
jbe
xchg
int3
mov
xor
call
xchg
cli
mov
mov
popa
fisttps
addr16
test
cmpsb
mov
es
sub
outsl
adc
and
enter
mov
imul
add
sti
jno
iret
scas
mov
inc
adc
xchg
mov
outsl
xor
jb
and
dec
cmpb
or
inc
push
movsl
and
movsb
dec
cmp
pop
ljmp
pushf
mov
mov
fwait
push
fistps
lea
inc
call
pop
rcll
mov
xor
xchg
inc
xor
jae
mov
add
mov
add
jbe,pn
inc
ss
fdivl
scas
imul
mov
pop
jno
out
and
adc
aas
xor
mov
jp
cmp
sbb
gs
aad
fwait
mov
or
in
xor
push
les
outsl
adc
inc
pop
repz
and
mov
rolw
inc
das
xlat
jg
loopne
repz
clc
xlat
scas
mov
scas
push
push
ret
dec
subl
outsl
cmp
xchg
popa
jl
loop
push
into
cwtl
aad
jp
aad
pop
jg
fs
mov
pop
ljmp
sbb
mov
scas
jmp
mov
sahf
pop
jp
icebp
ds
mov
loopne
jae
inc
pop
add
jmp
lods
loopne
outsl
loop
cmp
push
sbb
and
mov
xchg
clc
sbb
ja
inc
cmp
jno
or
in
fcoms
inc
pushf
dec
leave
aad
pop
sar
mov
es
or
clc
inc
insl
imul
dec
mov
mov
add
mov
push
fs
stc
aad
push
icebp
xor
push
jbe
sbbl
add
je
dec
sbb
mov
jns
stc
adc
mov
cltd
movsl
dec
stos
divl
sbb
sub
xchg
filds
cmp
cli
and
cmp
sbb
sub
mov
lods
lea
jmp
mov
push
ret
sub
in
or
xchg
jp
pop
mov
jl
mov
xor
add
xchg
push
pop
adc
xor
mov
ljmp
movsl
ret
out
rcrb
xchg
push
stos
mov
adc
scas
adc
filds
sti
hlt
test
sub
inc
ss
lcall
mov
jae
aas
orl
stos
paddsw
movsb
call
inc
loopne
cltd
cmp
das
mull
lahf
push
fs
pop
xlat
xchg
mov
adc
and
insb
ror
sbb
int
es
mov
mov
and
mov
int3
push
mov
inc
add
popf
mov
fchs
xor
cmp
fsubrl
mov
xchg
adc
jns
sbb
xchg
rorb
sub
cs
add
out
mov
jb
sahf
push
lods
add
xchg
jno
sbb
add
and
sbb
jge
inc
dec
inc
xor
sub
push
mov
pop
ret
push
ss
jno
mov
pop
cwtl
insl
jne
pop
cmp
sub
int
push
pushf
xor
subl
xchg
js
loop
fwait
pop
mov
sub
and
addr16
divb
shrb
fwait
inc
lcall
xchg
out
mov
lods
sub
inc
scas
mov
xorl
ficoml
mov
dec
movsb
cwtl
mov
push
pop
cltd
lret
repz
cld
inc
xchg
addr16
out
outsb
mov
jnp
idivl
jp
pop
call
adc
push
insl
mov
xor
call
xor
fdiv
pop
shrb
mov
push
xchg
push
flds
xor
andl
or
fs
clc
test
clc
inc
ds
pop
out
sub
nop
add
dec
loopne
leave
sub
push
adc
jnp
cwtl
jne
sub
shrb
inc
pop
cmc
cmp
xor
test
mov
inc
jb
faddp
in
pop
dec
mov
ds
enter
xor
cmpsl
mov
or
push
and
lock
dec
mov
push
mov
shll
mov
mov
je
xchg
stos
adc
sbb
add
add
sub
test
clc
pop
lods
div
or
repnz
xchg
cmp
and
xchg
jns
pop
push
inc
push
push
add
outsb
or
push
xchg
cmpsl
jnp
and
pop
xlat
cltd
cmp
loop
stc
daa
xchg
mov
cmp
imul
or
pop
nop
popa
loope
pop
xchg
xor
in
std
dec
addb
rcr
pop
icebp
punpckhwd
lahf
js
or
mov
xchg
scas
popf
scas
scas
fldenv
es
int
into
rcrb
push
ljmp
mov
mov
mov
xchg
inc
mov
or
push
fstpl
xlat
repnz
cmpsb
std
iret
or
xlat
testl
lds
out
into
lods
pop
push
mov
dec
mov
mov
xchg
xlat
neg
mov
dec
pop
mov
insb
fldt
ficompl
lea
sub
fsubrs
or
add
xchg
push
inc
xorl
rolb
lock
aam
int3
rcl
xchg
ja
adc
jmp
sub
int
add
mov
mov
add
xchg
add
add
les
xor
push
repnz
xorl
addr16
out
cmp
inc
test
push
cs
add
dec
cmc
pop
push
shrb
js
jae
add
push
es
mov
pusha
adc
fisttpll
push
add
test
fwait
adc
fldcw
mov
xchg
add
jns
sbb
mov
les
and
iret
das
sub
inc
lods
jo
cmp
leave
addl
push
inc
call
dec
push
add
mov
and
cs
xchg
lods
fwait
pop
mov
cmc
loope
cmpl
jge
sbb
sahf
hlt
dec
into
inc
cmovae
fmull
jecxz
xorb
mov
dec
arpl
xor
lcall
dec
scas
shlb
or
xorl
int3
inc
inc
je
into
mov
subb
test
test
adc
jnp
pop
xchg
test
aam
xchg
sbb
mov
pop
std
xlat
pop
popf
xchg
lds
mov
mov
js
into
fisttpl
roll
int3
fisttpl
leave
xchg
push
loope
scas
cltd
mov
popa
int3
clc
stos
ja
add
and
push
pushf
out
nop
rolb
dec
mov
fdivrs
add
dec
lods
lods
andl
pop
sbb
and
scas
call
es
cltd
outsl
cmp
repnz
in
or
dec
fwait
sub
mov
fists
pop
pop
inc
xor
into
dec
xchg
or
call
cmp
jns
dec
jo
scas
mov
cmp
add
out
jge
adc
call
cli
movsl
mov
push
test
dec
xchg
lds
adc
jmp
xchg
fs
outsb
xchg
sahf
mov
sbb
lahf
fadds
outsb
mov
push
iret
mov
dec
sub
outsb
ja
jb
lret
adc
cmp
iret
lcall
dec
inc
lock
sub
jae
add
sahf
inc
jmp
dec
sarb
pop
jae
enter
les
adc
adc
hlt
sub
aaa
jle
pop
fsts
shrb
dec
fidivl
inc
push
pop
mov
xor
fiadds
mov
loope
int3
enter
mov
outsl
cmp
pop
pop
aad
add
out
mov
outsl
enter
fsubrl
loope
pop
scas
leave
loopne
xchg
xor
mov
leave
in
cs
fwait
inc
or
jg
push
jne
dec
sbb
js
loope
lcall
int
mov
xor
lock
sub
sarl
mov
clc
jl
inc
aas
flds
js
mov
movsl
push
or
mov
push
xor
push
test
xor
xchg
out
sub
inc
mov
push
sbbl
and
loopne
outsb
stos
outsl
xor
xchg
fnsave
scas
lods
in
sti
cmp
or
and
sub
cmpsl
sarl
inc
pusha
add
push
add
jp
or
jnp
pop
gs
ret
pop
xlat
adc
ja
cmpsb
xor
jge
dec
jns
mov
jl
gs
popf
inc
mov
repz
push
mov
inc
mov
mov
push
push
insl
adc
mov
or
imul
mov
cmp
aas
int3
mov
lahf
dec
int
mov
xor
out
sub
stos
mov
lds
cmp
xor
xchg
testb
shl
imul
mov
pop
repnz
scas
mov
cmp
cwtl
mov
and
dec
jg
dec
cli
pop
mov
mov
cli
rol
push
xchg
outsb
push
arpl
popf
xor
js
loope
lea
mov
iret
lock
add
or
mov
cmpsb
testb
andb
jge
pop
stc
inc
sbb
outsl
negb
gs
out
ljmp
add
sti
rcrb
arpl
mov
pop
lret
rcr
sub
dec
addb
sub
addr16
jae
mov
rcl
fistps
mov
mov
push
rorl
add
data16
clc
xchg
in
dec
xor
mov
ja
cmp
into
repnz
sub
fsubl
lahf
cltd
dec
add
int
lods
int3
inc
test
fisubrl
mov
mov
xor
dec
imul
add
dec
add
movsl
sbb
dec
mov
mov
andl
and
xorl
mov
jle
je
divl
movsl
xorl
shlb
stos
adc
push
sti
sub
dec
sub
or
lahf
lret
mov
sahf
std
jmp
xor
mov
jl
test
popf
mov
mov
iret
cmpsb
popf
in
shrb
adc
pop
mov
mov
mov
rorl
mov
test
mov
mov
adc
lret
mov
into
mov
pop
cmp
jle
pusha
decl
cmp
insb
cs
xchg
pop
in
ljmp
adc
in
pop
dec
rorl
cmpsb
cmpsl
and
mov
in
jmp
repnz
ret
dec
cmp
and
mov
jns
in
les
sub
mul
dec
movsb
cmc
repz
sub
test
inc
and
xchg
repnz
xchg
out
jo
orl
popf
repz
fsubrs
push
jl
dec
add
mov
mov
das
fistpll
mov
pop
addb
pop
push
pop
cmp
pop
mov
xchg
jns
inc
dec
add
inc
ficompl
jnp
shrl
xabort
in
fcomip
in
push
push
in
mov
lret
or
sbb
xchg
mov
push
cmp
add
push
cmp
cmpl
outsl
xor
cmp
adc
pusha
push
out
mov
adc
bound
xor
daa
mov
clc
dec
inc
mov
bound
loopne
cli
shlb
pop
movsl
jns
mov
sbb
nop
and
nop
mov
scas
jno
stc
pop
es
cmp
jno
sub
pop
push
mov
cmp
stos
mov
sar
and
mov
aad
inc
pop
or
loope
sub
and
out
jmp
pop
ret
dec
filds
dec
div
mov
shlb
jo
push
int3
repz
dec
ja
insl
jl
cmp
movsb
aad
out
and
xlat
mov
dec
rcrl
scas
clc
jae,pt
xor
stos
dec
popa
sbb
add
sub
lcall
and
cld
jecxz
dec
mov
inc
xor
inc
sub
or
fidivrl
pop
xor
imul
dec
jo
jbe
sbb
sub
in
cmp
or
sbb
jb
scas
stos
aad
xchg
jno
inc
ja
rorb
loope
bound
jge
popf
test
or
nop
adc
push
test
test
scas
mov
push
cmp
sub
sbb
fwait
jns
fwait
dec
iret
xor
adc
fistpl
xchg
inc
push
sbb
cmp
loope
mov
cld
inc
jno
pop
mov
aaa
jmp
xorb
mov
inc
add
jmp
and
mov
lods
cwtl
push
sbb
scas
int3
js
cmp
shll
pop
div
sub
popf
cmp
fildl
rcrb
dec
push
mov
inc
jo
into
es
push
dec
test
out
imul
repnz
loope
pop
fiadds
xchg
iret
test
sti
fcoml
inc
and
mov
ds
inc
lods
lods
inc
outsb
enter
insl
pop
mov
stos
pop
xchg
jo
pusha
in
mov
and
jle
aad
ds
jno
inc
ljmp
cmc
hlt
jbe
jo
cltd
xor
xchg
ret
out
call
xchg
pop
imul
in
imul
dec
push
xchg
ret
call
pop
adc
sub
pop
mov
push
repnz
mov
das
pop
xor
or
mov
mov
fnstsw
xchg
js
adc
push
xchg
outsl
fldl
push
dec
cmp
xchg
add
add
add
loop
sbb
mov
fldcw
xchg
xor
leave
cmp
dec
add
scas
jecxz
bound
pushf
sarl
sub
mov
inc
xchg
insb
in
std
push
dec
adcb
mov
push
pop
shl
mov
test
pop
aad
loopne
or
sarb
mov
loop
in
inc
addb
mov
shl
fucomp
mov
cmp
sbb
andb
jp
pop
ret
lock
decb
lcall
cmp
lahf
and
mov
dec
shl
inc
outsb
shrb
pop
loopne
stos
xor
sar
in
aam
xchg
fsubrs
sbb
test
xchg
inc
test
sbb
out
andl
loop
arpl
fdivr
popa
jns
scas
dec
aas
je
dec
add
adc
aaa
lret
pop
sub
gs
mov
dec
and
dec
pop
cltd
dec
xor
adc
push
stos
pop
or
mov
lods
pop
fisttpl
and
popf
jb
lods
mov
dec
mov
jns
dec
xor
rorl
mov
dec
insl
clc
clc
xchg
ljmp
sub
xchg
out
sarl
out
or
mov
fld
fcmovb
fcoml
shrl
pop
add
lret
xor
mov
loope
lods
jecxz
in
leave
add
jno
or
fiaddl
scas
std
rol
xorl
aas
test
pop
adc
mov
mov
jge
pusha
pop
and
aaa
mov
pop
into
movsb
inc
mov
outsl
clc
dec
cld
sbb
test
mov
ljmp
cmpb
pusha
xor
loope
adc
movsb
cmp
icebp
pop
shrl
les
int3
shl
std
mov
cmc
int3
or
ljmp
jmp
push
mov
ret
push
mov
push
subb
inc
xor
lock
lret
or
cmp
pop
int
mov
out
sar
sbb
sahf
cli
jnp
aaa
pop
sub
or
sbb
jns
dec
inc
jmp
out
push
lods
push
mov
mov
mov
js
dec
xchg
pop
test
lea
fisttpl
in
jns
ss
push
or
xchg
mov
addr16
dec
gs
inc
cmc
sub
push
jb
in
mov
clc
js
jno
data16
mov
xlat
subb
add
sti
xor
sub
outsb
push
insl
sub
lret
sbb
inc
ljmp
lds
loopne
lret
mov
inc
adc
popf
lret
jne
les
mov
rol
cmp
repnz
pop
lcall
ds
cld
daa
or
push
bound
mov
das
pushw
outsl
mov
mov
and
or
cmp
hlt
cmpsl
mov
xor
fnstsw
stc
mov
mov
adc
sbb
push
sub
xchg
jle
sub
iret
cmp
push
sub
or
sub
repnz
or
sub
mov
mov
push
in
or
mov
pop
xor
cmpsl
xchg
sarl
int3
or
std
sub
add
xor
cli
jmp
pop
pop
jecxz
out
mov
jae
cli
scas
jecxz
movsb
movsb
fcoml
and
and
inc
mov
jecxz
bound
xor
fcmovnbe
mov
cs
rolb
push
pop
ds
mov
mov
lcall
mov
shl
in
call
jecxz
andb
push
aad
jo
fnstcw
pop
xor
push
adc
lahf
inc
rcrl
fnstcw
lret
icebp
xor
es
add
pop
out
lock
mov
or
mov
xor
mov
and
call
test
mov
shl
leave
rolb
pop
int3
fs
mov
xchg
js
popf
aaa
lods
cmp
daa
jp
std
jbe
push
push
mov
cli
pop
pusha
lret
pushf
stos
scas
mov
cmp
xchg
and
push
divl
stc
jno
lahf
data16
lret
daa
lods
rcl
out
das
add
mov
jge
add
xorl
push
nop
movsb
xchg
mov
loopne
jne
aad
insb
push
imul
xchg
pop
faddl
ds
jb
sahf
js
pop
xor
xchg
pop
sub
fistl
daa
cmp
ds
add
pop
repz
test
sub
lock
mov
divl
sahf
mov
mov
js
fisttpll
or
mov
nop
jns
out
xchg
dec
jge
dec
daa
mov
divb
int3
sbb
out
xchg
push
out
dec
data16
pop
negl
pop
and
push
cmp
ds
cmp
pop
jp
sub
movsb
pop
xor
inc
jl
inc
mov
or
adc
push
xor
mov
cmp
push
ret
cwtl
or
sub
stos
push
push
out
dec
mov
jp
add
jb
cld
jo
cli
ret
in
out
test
fld
sbb
jns
push
mov
in
push
shll
fcomps
adc
out
mov
test
jbe
sub
pop
arpl
out
test
dec
fstpt
mov
xchg
pop
push
jg
js
add
pushf
cmp
push
test
adc
jnp
sub
shll
and
cs
fidivrs
sub
fnstcw
aam
std
fadds
sub
ret
sub
xchg
pop
push
ret
cld
ret
insb
sbb
clc
pop
mov
pushf
pop
mov
stos
and
test
jne
fwait
mov
jnp
sub
cmp
push
cmp
jecxz
loopne
jecxz
dec
filds
add
aam
inc
das
or
inc
mov
sub
pop
test
aam
popa
mov
pusha
aaa
insl
pop
popf
xchg
std
lds
mov
loope
mov
mov
sub
ss
cmp
add
les
sub
sbbl
stos
push
cmp
arpl
mov
fmull
aam
push
inc
pushf
aas
xchg
and
test
xchg
push
jbe
or
adc
ret
imul
aad
mov
mov
out
pop
add
sbb
push
sbb
fdivs
fwait
and
into
inc
push
cli
mov
imul
jl
mov
aaa
fbld
aas
xchg
dec
repnz
gs
push
shll
ss
ret
fisubl
in
leave
dec
cmp
call
pop
scas
dec
bound
or
icebp
and
sbb
enter
pop
int
mov
imul
sti
inc
imul
hlt
mov
xor
imul
nop
lcall
xor
cwtl
fs
ljmp
push
aas
pop
inc
movsb
mov
clc
xor
mov
adc
adc
or
xorl
rol
rorb
add
adc
mov
xor
jl
xor
mov
outsb
jo
jns
xor
ljmp
push
inc
or
clc
add
test
scas
lods
mov
sub
lcall
cwtl
aad
arpl
shll
inc
ja
lds
mov
popa
jb
sahf
adc
sahf
imul
shlb
mov
ss
hlt
push
mov
dec
mov
dec
push
sub
movsb
pop
cmpsb
outsl
cwtl
xchg
lahf
xchg
cmp
xchg
xor
cmc
stos
xchg
sub
push
popa
push
sahf
jno
push
jecxz
das
adc
lret
js
sub
xor
sbb
mov
mov
dec
xor
xchg
adcb
dec
xor
js
movl
jb
lret
dec
hlt
lcall
mov
insl
mov
ja
and
inc
dec
sbb
add
lret
mov
insb
pusha
xor
aas
and
gs
movsb
xor
adc
dec
popl
scas
je
popf
scas
jns
mulb
lahf
xchg
sahf
aas
out
pop
dec
push
mov
or
je
push
mov
mov
dec
add
mov
mov
mov
fwait
mov
stos
mov
fs
outsb
pop
iret
lcall
push
mov
or
scas
daa
sbb
out
popa
or
icebp
xor
sub
sti
and
inc
xchg
scas
push
jecxz
arpl
int
xchg
sbb
lret
push
mov
ja
rorl
and
inc
out
pop
popf
mov
ret
adc
loope
xchg
dec
jae
sub
pop
xchg
push
dec
mov
xor
movsl
or
mov
je
jl
sub
int3
push
cmp
lock
cmp
dec
insl
popa
push
jno,pn
imul
test
insl
stc
and
jns
mov
add
pushf
shll
add
mov
jle
daa
dec
out
orl
cltd
push
popf
jl
dec
aas
lock
cmp
add
pop
sub
push
outsb
and
mov
sbb
push
negl
pushf
sbb
lret
ret
cmp
push
iret
and
pop
mov
scas
pop
aaa
xlat
sbb
add
push
push
in
out
lahf
mov
popl
cmp
push
add
sub
lds
add
push
or
lds
sbb
outsb
jo
lods
mov
sbb
xor
loop
xor
mov
test
dec
and
add
repnz
sbb
in
gs
xor
and
cmpsl
or
adc
pop
ja
xor
je
mov
and
mov
shl
rclb
xor
pop
rorl
push
popa
cmc
cwtl
xor
mull
sub
ljmp
mov
int3
push
pop
lahf
xor
xor
fistpll
mov
or
mov
les
les
inc
cmp
xchg
enter
rol
adc
call
aad
idivb
lods
mov
test
inc
xchg
mov
cmp
js
or
stos
jo
and
fwait
iret
addb
aaa
xchg
jae
cmp
lahf
dec
icebp
push
mov
or
xchg
lret
cmp
in
leave
loopne
mov
mov
push
pop
sub
xor
xlat
pop
xchg
jnp
cwtl
test
push
mov
pop
pop
ja
lret
orl
sbb
notl
out
inc
sub
fwait
dec
cmc
adc
ror
push
jb
sbb
push
jmp
cmp
in
mov
and
mov
ds
jg
lods
sub
cwtl
icebp
cltd
mov
jge
inc
sbb
inc
in
das
cmp
dec
insb
ja
int3
mov
cmp
jle
push
rcr
xchg
mov
push
mov
sbb
call
push
lock
xor
dec
sub
fidivrs
mov
jae
push
mov
dec
sub
xchg
sub
pop
out
push
int3
mov
imul
mov
cltd
inc
dec
pop
out
ret
insl
stos
cmp
in
popa
pop
jmp
cmpsl
sti
inc
push
mov
adc
pop
ss
push
into
aad
adc
cmp
push
divl
stc
test
mov
or
ja
mov
addl
dec
pop
push
dec
jmp
cwtl
pop
aad
pop
pusha
jl
mov
inc
shrb
mov
int
lods
dec
push
pop
mov
movsb
adc
ret
mov
sub
dec
push
incl
adc
and
in
test
add
dec
add
mov
fsub
outsl
addr16
and
xchg
push
xor
ficoml
imul
pushf
mov
in
jae
push
cwtl
mov
stos
or
cwtl
mov
cli
das
and
pop
adc
cmc
stos
movsb
jbe
push
mov
outsb
imul
lcall
in
mov
xchg
mov
and
xchg
sti
cli
xchg
push
push
hlt
add
orl
testb
popl
sti
adc
add
mov
outsl
dec
xchg
pop
jmp
jmp
xchg
pop
and
ljmp
dec
xchg
imul
push
fstl
int
fsubrs
das
ret
push
mov
xchg
in
cmp
push
vmovsd
leave
insl
jg
test
xchg
lret
data16
xchg
iret
xor
daa
xchg
mov
fsts
xchg
icebp
shl
mov
lahf
xor
inc
adc
dec
repz
out
mov
shlb
fistl
mov
jb
roll
ja
lods
loop
fwait
pop
xchg
pusha
test
adc
cmpb
call
addb
push
popa
pop
pop
push
jae
lds
fcmove
popw
mov
add
js
lea
push
or
sbb
ret
je
fdivr
in
imul
inc
and
pusha
ds
lock
xor
push
jo
jl
ljmp
mov
push
xchg
jg
xor
lods
cmp
fisubrs
mov
fstl
fwait
out
aam
sub
push
out
mov
cmpsb
subl
sti
sub
outsb
daa
mov
cld
or
incb
stos
add
mov
pop
mov
push
enter
push
mov
out
aas
loope
outsb
incl
jbe
in
test
sbb
mov
xchg
mov
pop
xchg
lgs
mov
sbbb
or
aaa
jl
test
jb
dec
sbb
stos
dec
cmp
cmp
pop
pop
setge
inc
add
mov
lock
popa
movsb
in
and
pusha
adc
daa
jecxz
sub
sahf
icebp
mov
jp
xchg
sub
mov
xor
lds
loopne
xchg
pop
mov
sbb
adc
pop
adcb
imul
imull
cmp
mov
fnstenv
imul
jb
jge
lahf
fsubp
jns
in
fsubl
iret
jo
mov
mov
sub
in
aad
test
lea
pusha
dec
scas
jnp
jns
jmp
push
lahf
inc
pop
lds
adc
js
jecxz
sti
xor
std
js
in
jge
fwait
call
adc
xchg
mov
mov
cmp
imul
int3
xor
xchg
xchg
lock
outsl
xor
mov
jmp
aaa
xor
mov
dec
nop
pop
lret
outsl
mov
out
adc
in
fists
push
mov
std
sub
pop
or
das
ret
addr16
xchg
xchg
mov
shr
into
fs
xchg
cmp
mov
push
sub
add
mov
fwait
cmp
sub
lea
out
js
loopne
pop
fs
push
jo
mov
mov
jno
scas
fsubr
daa
popa
fidivrl
lcall
and
xchg
inc
or
fdivl
xchg
lret
cltd
and
aaa
in
add
out
and
fwait
xchg
insl
inc
add
adc
popf
adc
orb
mov
in
jmp
bound
mov
sub
shll
push
xchg
pusha
adc
into
jmp
push
xor
in
jmp
neg
fisubl
lahf
cmp
xchg
rcl
adc
fcompl
lds
test
ljmp
stos
mov
je
into
push
mov
pop
sub
pop
insb
sbb
mov
orl
cmp
loop
fwait
jmp
sbb
jg
gs
cmpsl
scas
ret
icebp
fucom
adc
mov
leave
cli
pop
jo
push
jmp
inc
xchg
frstor
xchg
fisttps
hlt
out
int
lea
jecxz
aaa
pop
popl
jbe
xchg
mov
enter
adcb
pop
jecxz
leave
out
cmp
test
xchg
rcl
xor
stos
xchg
icebp
xor
mul
jp
fs
inc
cmp
mov
fstpt
sub
pop
xchg
test
jg
pop
pop
je
jecxz
mov
repz
xor
push
xor
hlt
enter
xchg
jecxz
lock
and
jo
mov
outsb
jle
adc
je
aaa
movsl
adc
adc
aam
jge
lret
push
cmpsb
movsl
mov
push
shrl
push
aaa
insl
and
aad
jo
or
and
xchg
jbe
aad
cmp
adcl
and
fisttpl
leave
inc
mov
push
imul
jno
add
cld
in
arpl
jmp
sub
sbbl
mov
adc
ss
cmc
cmp
push
xchg
dec
cmpb
mov
adc
inc
cmpsb
stos
mov
push
jl
pop
adc
icebp
test
cmpsl
lret
jle
inc
js
in
pop
push
xor
and
pop
cld
jle
push
adc
rol
jmp
push
mov
scas
add
mov
cld
idivb
jae
dec
jnp
inc
fdivrl
xlat
xchg
adc
cs
cs
sbb
adc
jmp
test
and
lcall
mov
divb
mov
aad
mov
jecxz
sbb
push
mov
pusha
sbb
out
cltd
fidivrs
push
mov
sahf
adcl
icebp
xchg
mov
imul
dec
aas
sarb
pop
nop
and
fwait
add
arpl
cwtl
sbb
mov
fcmovnbe
sub
popf
jne
lds
push
roll
xchg
jno
sbb
sub
dec
mov
xor
xor
push
add
jmp
shlb
test
xchg
mov
orl
xor
cmp
xchg
and
add
call
div
shlb
mov
loopne
xor
out
and
pop
xchg
xchg
inc
xorl
data16
rorb
icebp
aad
jo
mov
xchg
sub
mov
mov
jp
add
mov
cltd
popa
mov
lret
sub
jb
mov
js
jo
lds
shrl
sub
add
pop
int3
popa
push
lods
cld
mov
pop
out
pop
loop
pop
ret
shll
aam
stc
imul
mov
jmp
mov
test
loop
jecxz
xchg
out
mov
ja
jmp
lods
xor
mov
push
out
push
bound
pop
loope
mov
xor
adc
cmp
mov
pop
cmp
or
adc
sbb
subl
mov
jnp
adc
sub
aas
lcall
add
pop
ret
dec
shrb
cmpsl
push
adc
stos
lcall
aad
mov
sub
dec
adc
dec
push
sub
fcmovnbe
cmp
mov
jmp
pop
mov
pop
sar
lret
loope
jae
add
int3
mov
aam
lahf
movsb
xor
pop
stos
xchg
in
mov
pop
mov
and
and
push
xor
push
add
mov
mov
movsl
imul
jnp
dec
cli
push
cmp
subl
pop
lock
jl
mov
sbb
ret
imul
add
cli
push
adc
scas
inc
js
minps
lret
shlb
sub
sarl
xchg
test
lcall
sub
in
mov
popa
fistl
pop
addr16
and
inc
subb
xor
push
inc
testl
jp
sub
and
inc
push
pop
push
jb
add
insl
sub
je
xorb
pop
sub
punpckhbw
push
mov
sahf
int3
cmpsb
in
push
int3
mov
or
pop
adcb
test
jbe
or
rorl
mov
nop
sub
fdivr
cmp
push
rcr
cld
xchg
push
push
arpl
cwtl
cmpsb
mov
adc
and
mov
mov
fldl
mov
arpl
cmp
loopne
int
add
pop
xchg
scas
sbb
out
sbb
push
add
add
push
and
cmp
addr16
xor
int3
leave
fs
popf
rcl
sub
dec
and
test
mov
sub
mov
ficoml
inc
std
js
add
jb
adc
jne
mov
mov
nop
jnp
out
int
mov
daa
out
aaa
push
push
xchg
dec
bound
fists
xlat
sub
scas
push
pop
sub
in
push
std
jo
lahf
push
jp
jb
out
stc
add
jno
aas
jecxz
pushf
out
jl
daa
imul
and
out
stos
or
rorb
and
dec
cmp
and
fildll
adc
shlb
int
lock
jo
int
sbb
xchg
addr16
xorb
insl
outsl
nop
mov
xchg
inc
mov
mov
mov
imul
out
xchg
popf
or
in
int
mov
pop
seta
sti
push
add
dec
out
sub
xor
ret
int3
into
aas
testb
xchg
xor
rcrl
sbb
dec
inc
ds
cmpsb
xchg
xchg
nop
enter
pop
sub
xlat
push
movsb
mov
mov
jnp
scas
sbb
pushf
or
loope
push
pop
ret
cmpsl
icebp
sbb
fs
in
push
cmpsb
scas
push
sub
pop
inc
insb
sbb
jo
sbbl
fidivs
lock
dec
push
add
pop
sbb
dec
sub
inc
pop
cmpsb
xorl
and
cmc
stos
test
sbb
mov
mov
aam
shll
sbb
pop
push
dec
fstl
push
clc
in
mov
pop
addr16
lea
lea
mov
dec
cmpsl
mov
pushf
scas
and
out
daa
mov
mov
fwait
notl
sbb
sysenter
dec
inc
mov
push
ffreep
pop
or
lcall
pushf
sub
clc
mov
decb
ret
popa
popf
bound
jmp
lcall
sub
jp
and
ret
inc
xchg
xlat
imul
inc
imulb
fs
jno
mov
mov
lahf
xchg
push
mov
shll
ljmp
xchg
loop
addl
xchg
idivl
mov
or
daa
int
inc
addr16
xchg
idivb
adc
jnp
mov
in
movsl
je
jae
mov
test
int
push
rcrl
cmp
mov
mov
push
mov
test
pop
fs
mov
int3
xor
jle
test
xor
ds
sub
sub
test
in
lods
mov
in
ror
mov
jl
mov
imul
mov
out
jns
sbb
push
mov
jns
lahf
add
sub
or
inc
dec
dec
dec
test
insb
inc
bound
outsb
jmp
mov
repz
data16
pop
sti
xchg
sub
insb
xchg
or
movsl
cld
loope
fcoml
lret
cmp
cmp
ja
lret
xchg
jp
and
pop
es
push
cltd
cmpsl
xor
rcrb
push
lret
int3
mov
jbe
adc
pop
pop
jo
sbb
jb
sub
pushf
mov
test
clc
insb
shr
mov
ret
aad
test
in
outsb
ss
cmp
and
aas
jno
fisttps
into
fucom
aad
mov
mov
push
mov
clc
test
popl
xchg
bound
pop
xor
sar
mov
mov
dec
sub
cmp
lahf
repz
push
lock
sbb
and
sbb
jp
into
ja
adc
andb
popl
hlt
push
mov
xchg
jecxz
fdivp
mov
push
or
pushf
sub
repz
dec
pop
fnstcw
jge
xchg
mov
mov
dec
aaa
in
cmp
lcall
ja
lds
cmp
sub
adc
push
cwtl
and
adc
mov
dec
addl
aam
mov
mov
pop
sub
adc
xchg
nop
cmpsl
jmp
sub
mov
lock
add
xchg
xor
and
lods
sub
push
inc
icebp
push
xchg
pop
add
mov
repnz
inc
sub
lcall
pop
data16
push
mov
jno
fwait
shll
or
rcll
cmc
pop
inc
xrelease
repz
push
dec
xchg
push
jmp
mov
sub
lret
pop
dec
sbbl
bound
pushf
xor
sbb
adcb
fisttpl
and
mov
inc
dec
std
jne
jbe
daa
pop
xchg
fldenv
clc
iret
cli
xor
std
repnz
fiadds
shll
inc
push
and
out
pop
cmp
roll
xchg
rcr
imul
jo
cmpsb
jbe
and
pop
enter
stos
fidivrs
inc
mov
es
popa
push
push
dec
xchg
loopne
mov
pop
adc
insl
mov
adc
push
arpl
sbbl
mov
sbb
mov
andl
movsl
rolb
sti
sbb
sahf
or
mov
sbb
lahf
scas
stos
daa
xor
sub
cmpsl
xor
dec
pop
xchg
insb
xchg
leave
cmp
cmp
add
xlat
or
dec
adc
lock
shrl
clc
arpl
arpl
fdivl
inc
xchg
xchg
mov
aad
cmp
cmpsl
mov
outsb
ret
std
inc
push
sahf
arpl
div
and
add
cltd
jmp
pop
insl
xchg
mov
sti
mov
test
in
xchg
push
out
jmp
ljmp
fldl
push
daa
or
dec
int3
in
popf
shl
mov
lret
repnz
aaa
jmp
push
loopne
ror
scas
and
hlt
mov
loop
mov
test
fnsave
dec
add
pop
mov
pop
enter
mov
sbb
mov
inc
lcall
movsl
mov
push
pop
xor
lock
test
das
xor
add
mov
repz
xor
mov
xchg
xor
sub
ror
push
xor
pop
stos
scas
shlb
pop
or
add
jne
fistl
movsl
sub
xor
sbb
jne
nop
das
pop
lahf
cmp
lret
outsb
add
adc
xchg
mov
lea
dec
mov
notb
or
aam
xchg
ret
leave
scas
insl
cmpsl
call
aas
pop
cmp
iret
into
add
decl
jne
push
enter
out
xchg
shld
pop
faddl
clc
out
fisttpl
int3
nop
aad
rcrb
stc
shlb
in
mov
pop
adc
cmc
mov
sahf
in
enter
hlt
lods
xchg
xor
xchg
cmp
and
lea
les
push
cmp
hlt
popa
mov
clc
mov
adc
xchg
cmpsl
or
hlt
sbb
cmpsl
fdivrp
es
rorl
in
insl
fisttpl
ret
and
fiadds
rcll
ja
sub
mov
sbb
popa
cmpsl
xor
roll
sub
inc
stos
jno
testl
or
aas
cs
inc
lods
ja
incl
xchg
les
lcall
ret
adc
popf
cmpl
out
jmp
lock
pop
jle
test
or
push
stos
jg
cmp
imulb
rcrb
add
push
int3
sbb
xor
inc
fcomps
mov
icebp
and
xchg
roll
shrb
mov
dec
iret
fcomip
fsubrs
hlt
mov
push
jne
ror
lahf
lods
into
test
jge
jo
inc
sbb
pop
cld
push
out
rolb
jno
fsub
or
cmp
xchg
and
mov
sbb
add
mov
xor
or
gs
aaa
out
sbb
test
push
loope
gs
arpl
cmp
fmull
add
pusha
pop
pop
sti
lea
dec
sarl
gs
xor
push
sub
adc
arpl
fistps
jg
out
stos
sbb
pusha
pop
cmp
fwait
mov
push
daa
stos
repnz
divb
xchg
jp
xchg
mov
rclb
cmpsl
push
fistps
pop
add
xor
dec
sarb
add
out
ret
jp
imul
loope
lods
lret
iret
mov
mov
sbb
or
mov
pop
cmp
xor
and
lcall
cmp
stos
mov
inc
inc
in
arpl
testl
pop
xor
enter
out
cmp
push
push
test
adc
pop
push
pop
pop
out
inc
jns
iret
aaa
jecxz
test
or
or
and
sub
pop
adc
adc
subl
jg
aad
sahf
jnp
js
fs
ds
inc
cmp
cmpsl
or
lods
lret
ss
inc
jg
imul
xchg
mov
je
inc
xchg
sbb
dec
test
insb
jmp
mov
lea
jne
das
out
jp
xor
nop
xor
jne
mov
icebp
adc
jbe
jl
pusha
fistl
movsb
xor
popf
push
out
sbb
jle
jl
dec
xchg
or
and
out
mov
or
aam
mov
daa
fbstp
mov
dec
cmpsl
inc
adc
lods
fidivrl
je
sbbl
add
pop
test
add
pop
jb
cwtl
shll
das
push
lcall
add
mov
or
push
sbb
fnstenv
xor
js
push
inc
imul
cmp
out
fdivs
jge
pusha
imul
xor
mov
fcmove
cld
jns
or
xlat
xor
daa
test
add
mov
inc
aad
adc
sub
xchg
aaa
fsubs
test
mov
ret
ljmp
loope
push
add
fucomi
xor
mov
sub
pop
xchg
sbb
push
xlat
rcrb
adcb
xor
orl
lcall
or
es
int3
cmpsl
xchg
fstl
and
lea
push
int
pop
mov
je
pusha
sbb
pop
in
or
pop
inc
std
sbb
mov
lea
in
mov
pop
mov
jp
fs
insl
sub
push
and
push
dec
sbb
sub
push
mov
in
cmp
in
push
pop
outsl
ret
jnp
push
sbb
push
pop
lcall
fistps
lock
es
xchg
int
jmp
mov
lods
inc
pop
adc
xor
scas
mov
or
popf
lods
xor
clc
cmp
jo
jmp
lock
xlat
xchg
fadds
fisttpll
or
iret
adc
dec
int3
inc
mov
inc
jp
mov
xor
aam
or
lods
mov
jb
imul
ds
cmc
js
int
inc
dec
cmp
cld
daa
push
push
jecxz
mov
jle
aaa
movsl
les
cltd
out
xchg
xlat
xor
aam
pop
mov
xor
leave
ret
pop
and
loopne
push
mov
xchg
cmp
cmc
xchg
jae
rcrl
scas
leave
push
outsl
mov
jno
add
inc
hlt
pop
adc
test
imul
or
bound
sarl
and
mov
cmp
dec
jne
jmp
cmp
sbb
cmp
in
cltd
ljmp
outsl
add
lahf
movsl
ss
int
dec
int3
jge
sub
test
sbb
outsb
mov
mov
fisttpl
pusha
loopne
sub
aas
mov
adc
cld
das
inc
adc
jnp
jbe,pn
out
fidivrl
sarb
jmp
add
scas
xchg
shlb
adc
xchg
sahf
test
fstpl
sbb
cli
sarl
cmc
in
in
cmp
shl
scas
call
xlat
subb
pop
repz
data16
dec
mov
xlat
jo
imul
push
cmp
xor
mov
jae
mov
lret
inc
inc
popa
int
mov
pop
cltd
mov
test
arpl
xlat
std
fildl
jnp
adc
arpl
sti
push
dec
push
sahf
int3
out
roll
aam
dec
ficoms
push
out
insl
nop
loopne
push
jle
stos
je
lret
xor
mov
incl
in
lahf
inc
xchg
je
repnz
push
sub
inc
or
je
xor
push
push
inc
pop
xor
imull
add
shrl
push
jo
xor
ret
mov
mov
adc
test
sbb
sub
movsb
iret
xchg
cmp
lea
mov
mov
ret
stc
cltd
mov
fbld
icebp
mov
cmp
mov
ja
cmp
out
clc
add
pop
add
cmp
add
lods
enter
push
xlat
bound
test
mov
jns
sub
mov
mov
and
inc
push
fwait
bound
mov
inc
icebp
mov
sti
aam
lds
jle
decl
lea
ret
mov
test
mov
sub
fidivs
dec
mov
or
loop
stos
xor
jae
std
call
sub
je
lcall
cmpsb
dec
mov
mov
sbb
xchg
jle
scas
sbb
inc
test
das
mov
jle
push
xor
aam
lods
sub
or
jns
inc
cli
cwtl
add
and
push
jb
ss
cmpb
push
sbb
jne
movsl
lahf
mov
lods
push
ljmp
ljmp
adc
mov
xor
or
cmpsb
mov
rorl
mov
je
jne
push
mov
mov
lret
xor
adc
push
aas
mov
addr16
sub
loope
ret
xchg
xchg
xchg
repz
xlat
mov
outsl
or
or
mov
xchg
fs
jnp
push
pop
je
call
je
into
jb
and
or
jle
xchg
cmc
pop
popa
int3
pop
out
loopne
shlb
pop
fisubl
fdivs
pusha
mov
or
cli
rorl
sub
xor
lret
xchg
add
pop
pop
mov
cmp
adc
pop
pop
mov
mov
test
push
cmp
nop
or
xchg
imulb
adcl
xlat
fildl
cmc
xor
call
popa
mov
mov
int
lret
mov
fwait
xchg
and
scas
jno
pusha
fwait
mov
stos
xor
jmp
pop
inc
ljmp
loopne
jb
push
nop
mov
in
add
pop
out
push
jmp
sahf
lcall
sub
cwtl
jg
xchg
mov
adcb
dec
xor
clc
fcompl
jle
dec
dec
push
sbb
jg
js
fs
ret
popf
in
enter
xchg
or
ret
push
lret
stos
jle
rcrb
adcb
mov
mov
in
pop
filds
push
loopne
mov
out
sub
push
and
and
push
test
fnsave
mov
or
mov
lahf
fistpl
sti
pop
loope
popf
and
xor
loopne
loope
aaa
dec
sti
jle
jl
out
sbb
test
outsb
icebp
pop
pop
xor
cs
inc
andb
mov
lods
sub
dec
xchg
pop
mov
hlt
dec
adc
dec
mov
stos
mov
dec
lods
test
push
test
or
inc
sbbb
or
ret
xchg
lret
stos
or
push
mov
adc
cmp
repz
mov
mov
cmc
imul
inc
fistpll
add
push
or
adc
mov
adc
mov
adc
mov
dec
mov
mov
divb
pop
xor
imul
ds
mov
xor
inc
lock
jno
mov
sbb
repnz
sti
loope
fldl
xchg
dec
pop
mov
int
xchg
bound
insl
cmc
dec
push
xchg
aad
push
mov
rolb
and
sub
inc
and
addr16
mov
lea
mov
lret
test
out
or
add
sub
xor
inc
pushf
mov
pop
mul
add
mov
mov
dec
andb
mov
popf
and
aaa
iret
daa
bound
ss
push
push
roll
dec
mov
sti
shrl
aad
rcrl
jae
cmp
xor
xor
mov
inc
or
or
xchg
inc
jg
mov
orl
call
mov
cmc
mov
ds
ja
xlat
jmp
xchg
repnz
jnp
repz
jns
mov
aam
or
dec
fs
gs
xor
out
xchg
dec
mov
adc
lret
push
push
jbe
xchg
mov
pop
sub
insb
add
movsb
mov
sbb
cmp
das
xchg
cmp
popf
cmp
mov
mov
push
or
xor
add
sub
jecxz
sub
mov
ja
movsb
mov
icebp
test
add
push
icebp
push
lcall
adc
outsl
add
add
fadd
gs
shrb
cmp
mov
outsl
push
push
leave
popf
ljmp
jno
pop
xchg
cmpsb
or
or
lods
mov
sub
adc
scas
call
mov
outsl
fdivs
in
xchg
out
test
ja
sbb
lea
insl
mov
popa
sbb
shll
adc
sub
push
fisttpll
in
shrl
adc
stos
inc
xchg
inc
nop
scas
sub
sub
xchg
sub
dec
mov
call
push
mov
xchg
jbe
fdivl
push
hlt
fistpl
outsb
pop
pop
in
dec
add
pop
mov
loope
jno
shl
sbb
sbbb
sub
xchg
mov
icebp
or
popa
ss
lock
stos
add
cltd
and
imul
jecxz
and
xor
out
jb
dec
stos
imul
and
jb
cmpl
mov
notb
xor
dec
mov
or
cltd
add
pop
cmp
hlt
inc
pusha
je
lret
outsb
xchg
push
fldl
sti
daa
adc
negl
cmpsb
ret
sarl
cli
ds
xchg
cmp
cmp
mov
jle
sbb
jnp
lods
xchg
shrl
pushl
add
popa
jp
iret
dec
inc
cwtl
cltd
int3
outsl
adc
pop
sti
push
xchg
or
enter
hlt
and
jmp
sbb
fcomip
mov
loopne
sub
pushf
jmp
add
mov
fs
sub
aad
and
mov
arpl
enter
inc
dec
mov
xchg
mov
addr16
xchg
addr16
enter
je
scas
movsb
das
mov
sub
xchg
insl
xor
mov
dec
mov
out
xor
inc
sbb
sti
test
addl
mov
out
pop
shll
or
lods
pusha
out
rcl
ds
mov
adc
pop
add
imul
add
int
jb
adc
mov
fistl
jae
clc
arpl
loope
cld
repz
jb
das
and
mov
jecxz
mov
cmp
insb
ficompl
mov
dec
lret
cmc
inc
pop
mov
imul
out
ljmp
pop
popf
ds
ds
addl
mov
pop
pop
mov
jmp
imul
xor
inc
inc
mov
pop
push
je
dec
fsubrl
out
out
xor
out
loop
add
xor
xor
adc
call
ss
jno
int3
in
push
or
pop
pop
mov
mov
stos
jl
outsb
imulb
test
rol
es
mov
int
pop
add
cmp
mov
es
mov
xchg
in
pop
xor
add
add
test
ret
jecxz
jbe
jae
int3
enter
lret
lret
test
lret
lock
leave
push
popf
xor
adc
xor
jo
call
iret
pop
addr16
or
div
lret
mov
aad
cmp
pop
cmp
lcall
rolb
js
xchg
mov
sti
hlt
or
repz
adc
sbb
or
push
pop
pop
and
icebp
xchg
shlb
ret
jecxz
sahf
inc
cli
in
sar
inc
int3
push
shrl
es
outsb
xchg
sub
cli
sti
pop
jmp
and
mov
les
mov
and
dec
imulb
movsb
xor
mov
jns
cld
or
dec
mov
xchg
xor
push
lock
adc
loop
call
fwait
rorb
or
mov
mov
dec
mov
jne
loope
mov
rcr
outsl
pop
mov
leave
das
call
shll
dec
jno
xor
iret
mov
std
cmc
insl
xor
adc
push
shrb
hlt
clc
mov
cmp
inc
orb
enter
in
mov
fbstp
adc
mov
in
pop
dec
adc
fs
ss
jns
int3
mov
lret
sbb
pop
cs
outsl
dec
jecxz
sarb
popa
xor
and
lds
repnz
shrb
pusha
shll
and
ficomps
xchg
mov
inc
data16
cwtl
sbb
lret
xchg
addb
orl
movsl
dec
sar
inc
scas
lret
mov
dec
popf
inc
fnstsw
stc
mov
leave
jl
xor
mov
xchg
andb
dec
push
cmp
xlat
rcrl
pop
and
out
in
fistpll
xchg
push
mov
jno
inc
and
xor
pop
sti
or
xchg
xor
xor
mov
dec
daa
stc
push
xlat
stos
mov
cltd
pop
daa
jp
pop
repnz
lret
jno
rcrl
imul
andl
jle
jl
xchg
xchg
mov
stos
dec
and
sbb
clc
ret
int
inc
or
gs
test
pop
hlt
cmp
mov
out
mov
mov
adc
or
mov
imul
xchg
sbb
add
enter
push
cltd
xor
lods
xchg
notb
mov
rol
cld
and
cmp
pop
and
push
pop
dec
das
incb
dec
mov
pop
xchg
cmpsl
dec
pop
andl
xchg
xchg
xor
or
insb
mov
xchg
sub
jbe
pushf
sub
push
gs
xor
es
xchg
fcmovb
pop
insb
scas
scas
frstor
addb
adc
or
cmpsb
xchg
xor
outsb
cmpsb
mov
push
xchg
dec
divb
dec
icebp
mov
ljmp
ds
ret
sbb
or
xchg
pop
adc
push
mov
std
cld
icebp
add
xchg
fdivs
xor
push
pop
nop
in
xchg
add
cmp
mov
lcall
jmp
roll
xchg
popa
les
shll
and
sbb
mov
sahf
mov
dec
jo
add
push
adc
push
lahf
lahf
cmp
stos
dec
pop
rorl
in
mov
cmp
adc
inc
daa
or
sub
add
lods
jmp
jno
dec
jbe
repnz
dec
inc
xchg
fcmovne
rcrb
lret
ficompl
jmp
mov
jg
jbe
xor
mov
in
out
adc
or
cmp
pop
xorl
js
pop
idivl
jno
push
xchg
das
xchg
or
lcall
stos
call
sbb
jp
pop
dec
cwtl
mov
cmc
lahf
inc
add
adc
jp
je
arpl
and
pop
popf
ret
sub
test
fwait
in
pop
xchg
inc
aas
xchg
mov
cwtl
or
cmc
fldenv
sti
mov
cmp
lds
out
sahf
xchg
loop
xor
mov
mov
testl
xchg
movsb
inc
icebp
ret
sahf
jns
pop
cmp
aam
fcoms
xor
outsl
cmp
movl
xor
dec
xchg
mov
add
rcrb
inc
sbb
jmp
inc
xor
inc
pop
fistpll
leave
sub
cmp
sbb
mov
cmpsl
mov
mov
push
adc
push
jno
jns
fbld
int
rorl
mov
mov
repnz
jo,pt
imul
adc
cmc
call
mov
les
push
fisttpll
insb
xchg
rcr
mov
adc
dec
pop
mov
or
sub
aaa
icebp
data16
clc
test
cltd
fs
mov
cwtl
testb
daa
adc
xchg
xor
sbb
rcrl
data16
pop
imul
xchg
fwait
add
popa
ds
icebp
sahf
adc
scas
rolb
fwait
jg
cwtl
lds
xchg
sub
add
and
jno
cmp
mov
lret
jns
fwait
sahf
mov
push
adc
nop
pop
lret
outsb
or
jae
sbb
stc
scas
loopew
mov
je
inc
and
mov
in
xor
daa
jbe
cltd
roll
push
jmp
add
cmpsb
mov
inc
dec
push
sti
lods
out
mov
adc
xchg
mov
jae
lods
mov
scas
push
cmp
int3
add
jp
stc
shrl
into
cmp
add
test
lods
fidivrl
cmpsb
aam
test
cs
cwtl
and
mov
mov
sbb
pusha
pop
ret
mov
mov
scas
repz
xchg
sarl
mov
stos
cmpsb
repz
repz
mov
in
jg
sbb
inc
lcall
sub
add
jg
pop
or
dec
sti
icebp
push
jecxz
data16
xor
fsts
push
setp
push
movsb
adc
daa
push
sub
mov
pop
xor
ds
inc
shll
adc
data16
lods
out
pop
rorl
lock
or
sbb
push
ds
cmpb
cmovg
es
or
jp
jmp
outsl
outsb
push
mov
xor
cmpb
mov
stos
xlat
test
ss
jno
push
mov
pop
cmp
xor
ds
and
ficompl
sub
jp
or
inc
and
mov
int
adc
cltd
gs
mov
jno
addr16
and
add
mov
or
and
xlat
mov
out
push
lahf
dec
jne
jl
mov
cmp
stos
inc
subb
mov
xchg
shl
push
sahf
and
mov
dec
push
fistpll
rorb
test
and
popf
push
cwtl
mov
xor
xor
mov
in
push
mov
iret
scas
push
xchg
xlat
movsb
jl
in
movsb
inc
outsl
xor
lret
mov
adc
jae
mov
dec
iret
adc
mov
pop
sub
sti
dec
push
xor
mov
cs
mov
repz
pop
jg
push
pop
test
test
test
sbb
mov
add
mov
adc
faddl
cltd
cs
mov
outsb
mov
push
fmull
cmpsb
push
fsubrp
test
popa
sbb
cmp
lods
xor
push
rcrb
add
jns
or
or
jb
lcall
out
xchg
bound
call
adcl
outsl
mov
and
ffree
loop
xchg
push
push
pop
pushf
loop
pusha
iret
cli
out
inc
sbb
adc
push
mov
inc
mov
js
xor
cmp
mov
aad
in
sarl
ficompl
push
cmp
inc
pop
add
jns
pop
push
imul
xchg
mov
inc
add
ds
addr16
push
call
int
add
mov
adc
inc
scas
into
jae
inc
pop
in
fwait
shll
out
aaa
lret
cmp
sbb
insb
rcr
aam
push
movsl
test
idivb
jl
push
sbb
or
ret
or
dec
or
rcrb
pushf
fwait
dec
movb
sahf
mov
out
int
in
pop
jge
outsb
sahf
xor
sahf
call
mov
adc
cli
fwait
insb
push
jge
test
mov
insb
enter
pop
add
int3
fmull
jge
cmpsl
lds
in
test
dec
xor
fsubr
xchg
dec
fisttps
xorb
enter
out
adc
cld
cld
aad
in
dec
push
mov
mov
cmpsl
sbb
nopl
gs
mov
mov
and
arpl
cs
pop
aad
das
or
loop
xchg
ljmp
adc
mov
lret
jns
inc
inc
scas
outsb
inc
fimull
cld
and
in
test
mov
iret
cmpsl
fstps
in
popf
sbb
pushf
inc
xor
and
push
cmc
inc
adc
xchg
arpl
sub
jnp
dec
add
cmpsl
ds
test
or
sub
dec
in
mov
int3
test
inc
in
adc
and
push
sub
push
xor
push
mov
push
rclb
fs
and
test
rolb
cltd
cli
in
mov
push
in
lret
mov
sub
ljmp
sarb
aas
dec
inc
inc
imul
xor
cs
cmp
rcll
push
xchg
xor
push
aaa
inc
cmp
loopne
fdivrl
movsl
sbbl
or
in
dec
sbb
iret
mov
ljmp
jmp
xor
cmpsl
sbb
adc
and
aaa
addr16
or
incl
mov
cltd
jne
and
mov
jno
in
mov
jne
bound
jb
xchg
dec
adc
cld
inc
dec
js
push
xchg
add
out
fsts
fdivrs
mov
jmp
cmp
mov
mov
js
lcall
rol
fwait
sbb
out
ja
inc
fdiv
add
mov
mov
dec
aas
daa
sub
mov
mov
scas
add
int3
in
das
xchg
inc
mov
mov
out
imul
fs
jns
adc
fiadds
loopne
push
jg
fstpl
pop
ljmp
sub
xchg
andb
and
push
outsb
or
frstor
cmp
xchg
sbb
mov
jle
icebp
add
sahf
ds
sbb
xor
jnp
sahf
push
cmp
test
inc
in
jecxz
dec
fstps
sub
inc
add
push
add
add
ffree
jle
pop
orb
sbb
es
push
lahf
mov
sub
je
sbb
dec
sahf
inc
in
ja
push
test
jbe
inc
cli
xor
imul
and
out
jnp
aam
mov
sbb
jmp
pop
cmp
call
jb
pop
xor
ficoms
mov
cs
push
mov
fistpll
sbb
rorl
loop
std
mov
movsl
xor
mov
gs
mov
adc
subl
ret
push
das
cli
and
sbb
pushf
stos
das
sub
movl
daa
mov
sub
lcall
add
lcall
xchg
je
in
mov
ffreep
out
mov
jo
jns
mov
pop
pop
and
mov
jbe
cmp
test
leave
sbb
fnstcw
mov
push
xor
sbb
mov
rorb
jo
loope
push
sub
mov
lods
fstpl
cmpb
xor
jo
out
adc
stos
out
dec
adc
xor
pop
out
mov
add
pop
loope
jb
mov
push
dec
mov
cmp
cwtl
fwait
lea
sbb
or
int
push
jge
push
xorb
xchg
in
dec
add
js
dec
jnp
cmp
lods
imul
scas
sbb
lret
pop
lds
mov
fwait
push
mov
mov
sti
scas
lods
stos
sbb
xlat
or
xor
loopne
out
int3
dec
mov
test
aaa
sub
cmp
add
mov
cmpsb
push
sbb
jmp
mov
stos
in
mov
push
inc
pusha
mov
pop
mov
mov
les
fwait
arpl
mov
adc
test
stos
pop
lahf
cmp
insl
call
mov
decl
push
xor
or
cmpsb
mov
or
stos
adc
dec
jmp
and
mov
shll
aam
xlat
or
push
ss
mov
inc
mov
sbbb
repnz
mov
sub
sbb
pop
push
mov
mov
dec
push
xor
test
xor
lock
leave
dec
sub
sub
mov
dec
pop
fdivrl
add
jb
mov
jecxz
inc
mov
push
jmp
or
ja
and
popf
js
aam
lods
mov
mov
xchg
cmp
mov
ljmp
xchg
pop
push
cmp
jl
cmp
lds
inc
add
jns
jne
cmp
and
out
xor
test
dec
mov
fs
sub
shrl
stos
jno
loopne
loope
xchg
lods
add
fcompl
pop
in
data16
mov
dec
cwtl
pushf
cmpsl
scas
out
mov
mov
repz
jnp
dec
daa
inc
push
or
faddl
mov
popa
sbb
mov
out
push
fsts
sub
in
ds
push
xchg
xchg
sbb
mov
loop
jmp
ljmp
xchg
mov
xchg
or
in
jmp
dec
hlt
insb
and
inc
cmpsb
cwtl
xor
push
inc
fiaddl
aad
and
mov
dec
int3
jge
inc
mov
mov
movsb
clc
xchg
in
shlb
ret
pop
hlt
std
cmp
mov
xor
dec
inc
repz
mov
pop
pop
xlat
outsb
push
jae
mov
cmp
cmpl
jle
sub
jle
xor
clc
hlt
pop
movsb
dec
adc
inc
notb
fisubl
imull
sbb
test
xor
adc
add
cmpsb
sub
outsb
pop
shl
push
adc
add
jp
adc
cmp
and
mov
jl
push
pop
rorb
ja
dec
xchg
sahf
setnp
subb
cld
jb
adc
sub
mulb
fnsave
stos
jb
sbb
and
imulb
jl
sbb
out
xchg
pop
push
leave
in
mov
cwtl
cmpsb
aad
push
in
push
jl
sbb
test
das
push
cmovnp
jne
fsubrp
lret
and
rorl
in
mov
mov
shll
adcb
mov
pop
xchg
popf
jno
movsb
mov
mov
xchg
push
sbb
into
dec
les
imul
push
popa
xor
fnstcw
adc
stos
lds
stos
outsl
jno
dec
lret
push
inc
data16
add
imul
dec
repz
and
ds
outsl
cmp
test
xor
sub
sub
ror
push
push
push
push
jg
dec
push
xchg
ret
mov
loopne
lods
repnz
xor
cmp
sahf
xor
aad
xchg
jle
hlt
rcrb
dec
xchg
add
sub
jg
add
sub
adc
adc
dec
add
mov
addl
lcall
xor
cli
xchg
xor
js
xchg
push
push
or
xchg
fistpll
push
add
mov
jg
xchg
imul
push
adc
dec
push
push
sbb
push
outsb
pop
xchg
jmp
adc
les
mov
pop
std
ret
sub
divl
jg
xchg
jnp
push
mov
jbe
shrb
aaa
cmpsb
push
enter
mov
mov
sahf
icebp
pop
adc
mov
jle
mov
dec
dec
enter
jae
fmul
insb
mov
into
icebp
sub
push
push
push
scas
imul
sarl
int3
jle
clc
sti
inc
ret
ret
daa
sbb
ja
fstpt
jl
jb
push
movsl
das
and
mov
popf
add
mov
ret
cmpsl
pminsw
in
jno
loope
repnz
xor
pop
insl
test
popf
mov
arpl
push
cmp
pop
repz
fwait
mov
push
fs
adc
mov
out
and
lea
cwtl
inc
push
add
jne
or
xchg
xchg
pop
xorl
inc
xchg
sbb
ret
push
std
mov
pop
xchg
cmp
jp
addr16
in
mov
cs
data16
aaa
std
inc
and
mov
dec
mov
sbb
popf
outsl
in
sub
jns
cmp
lahf
mov
sbb
int
fld
aaa
xor
imull
xchg
push
mov
test
out
or
jno
xchg
out
or
jle
ja
mov
fmull
mov
ljmp
loope
cs
inc
shll
pusha
andl
imul
aaa
cli
xor
xchg
negb
ljmp
addr16
das
mov
push
aaa
xchg
add
dec
icebp
mov
mov
addr16
hlt
js
dec
clc
enter
ja
mov
xchg
adc
leave
dec
push
jne
subl
add
out
dec
xor
adc
push
stos
repz
cmp
push
adc
add
mov
inc
loope
xchg
jb
mov
or
scas
xchg
adc
les
dec
pop
lret
dec
scas
xchg
cli
add
pop
mov
rorl
stos
jge
dec
jae
sub
insl
jno
outsb
push
js
or
stos
out
scas
cmpsb
xor
push
pop
or
xor
jg
lret
out
outsb
loop
fldcw
insb
mov
shl
in
repz
or
mov
rcr
shll
test
ret
les
out
xchg
pop
neg
push
mov
cmp
imul
add
imul
jle
dec
rcll
gs
pop
paddw
add
imul
adc
cmpl
fimull
rolb
into
rcl
lock
jo
ja
les
mov
ja
lods
sbb
xor
xchg
inc
jge
pop
push
inc
mov
outsl
mov
adc
call
mov
loopne
out
notl
or
push
fwait
and
mov
sahf
sbbb
rclb
lea
dec
fistps
adc
es
daa
push
or
jl
jp
xor
imul
test
lret
cwtl
mov
out
outsl
or
add
or
xchg
into
dec
and
fiadds
jns
jnp
dec
pusha
push
jle
std
sbb
add
cmp
adc
pusha
push
in
push
and
adc
push
repnz
or
cmp
xor
add
push
mov
push
mov
repz
xor
mov
and
repnz
mov
jo
shlb
imul
scas
pop
loopew
mov
sti
loopne
sbb
dec
jns
loop
daa
pop
js
loope
jmp
fildll
nop
pop
shlb
inc
mov
push
in
lock
adc
xor
jle
mov
or
std
pushf
inc
xchg
inc
dec
cld
sub
mov
xchg
adc
push
test
clc
sbb
sbb
cltd
adc
mov
xchg
sub
enter
pushl
rcrl
cs
jmp
jno
fwait
push
inc
fldenv
lcall
pop
xchg
imul
mov
rcrl
ficompl
mov
data16
mov
xor
outsb
cld
dec
xchg
pop
push
aaa
and
add
sub
test
inc
je
sbb
ds
and
inc
push
mov
stos
daa
mov
imul
cmpsb
and
or
mov
adc
fwait
ret
mul
test
andb
cmp
data16
insb
sbb
add
ror
scas
cmp
into
push
sbb
add
mov
xor
popl
or
cld
sbb
pop
cmp
xor
inc
lret
popf
lods
xor
mov
fcompl
mov
jnp
es
mov
cmp
scas
sbb
jbe
clc
pop
dec
lods
les
mov
jl
imul
add
add
arpl
push
fs
insb
adc
mov
pop
daa
dec
cwtl
lock
mov
aam
jge
ja
ljmp
lock
mov
sub
int
jmp
fdivl
sbbl
mov
ja
aas
aas
mov
dec
outsl
xor
loopne
or
dec
add
jg
pop
dec
cwtl
xchg
sbb
aas
lret
scas
add
hlt
xchg
je
inc
jne
push
clc
mov
arpl
xchg
mov
outsl
push
mov
movsb
pop
xlat
dec
shll
pop
adc
mov
inc
das
fcomps
jg
fstpl
jne
mov
jbe
sbb
or
outsb
inc
or
frndint
pop
out
cmp
add
sbb
mov
cmpsb
xlat
rcr
xchg
inc
xor
or
adc
repnz
jnp
sbb
xchg
cmp
xor
sti
mov
int3
data16
and
out
jle
lret
addr16
mov
push
aas
mov
push
xor
pusha
aaa
sub
mov
pushf
mov
pop
inc
xchg
sub
enter
stos
dec
push
xor
or
push
and
inc
bound
and
inc
jecxz
cmp
iret
adc
pop
push
pop
icebp
imulb
xlat
test
jecxz,pt
mov
dec
imulb
test
sbb
adc
les
ds
inc
jecxz
pop
add
fs
or
mov
mov
lcall
xchg
sub
push
xchg
hlt
xchg
lods
js
pop
pop
sbb
add
vmread
shl
daa
mov
insb
mov
xor
fwait
shlb
xor
fsts
or
jne
jo
imull
iret
mov
lret
sub
mov
and
dec
es
lock
xor
sbb
scas
jb
push
and
cmp
add
fstpl
cmc
cli
mov
push
fdivp
add
mov
outsb
fildl
sub
sbb
jb
inc
icebp
cmpb
push
lods
mov
cs
mov
sbb
mov
fdivl
clc
and
shrw
icebp
into
inc
ljmp
xchg
arpl
mov
mov
jae
imul
xchg
addr16
mov
push
or
mov
aas
dec
sub
jns
aas
divl
sub
pop
jp
addr16
int
sbb
mov
popa
jmp
scas
fwait
shl
mov
leave
out
iret
jmp
inc
fisttps
mov
push
bound
jge
testl
adcl
repz
push
jno
jbe
xor
fstpl
sub
push
ret
lahf
pop
loope
push
lcall
mov
jae
cmp
dec
or
cmp
mov
outsb
adc
pushf
mov
inc
js
fwait
sahf
fmull
mov
in
push
jp
movl
ret
out
gs
filds
and
arpl
push
lret
pop
mov
test
cmp
add
adcl
mov
es
filds
ja
xchg
lahf
in
mov
cmp
lret
ficomps
loope
adc
mov
cmp
ret
lock
push
cmp
sub
xchg
lahf
stos
jno
testb
adc
pusha
rcrl
test
aad
into
insl
sub
das
scas
push
test
lock
xchg
xchg
cwtl
jle
pop
imul
or
inc
loope
ds
cmp
dec
dec
mov
je
loopne
mov
mov
sub
arpl
xchg
cld
push
lods
test
sub
adc
pop
scas
fs
movaps
lds
les
mov
call
mov
and
jmp
and
test
fisttpll
inc
repz
cmpsb
sub
pusha
push
scas
stos
das
data16
data16
pushf
repnz
sub
jl
mov
xchg
stc
xchg
out
cmp
push
mov
and
cmp
clc
inc
jg
mov
add
push
mov
dec
shrl
ret
xor
sub
sub
mov
dec
in
ljmp
mov
adc
push
xlat
jbe
add
dec
jb
xor
bound
push
dec
sbb
movsl
adc
loope
jp
lcall
push
jno
jmp
or
dec
mov
xor
fisttpll
jmp
out
sahf
or
movaps
repz
inc
jecxz
out
mov
popf
and
stc
mov
jmp
jle
lock
and
mov
mov
ret
inc
adc
pop
pop
mov
add
mov
mov
lcall
imul
dec
ret
xchg
in
push
es
sub
adc
enter
int
out
js
sbb
jb
adcb
mov
mov
push
cmpl
and
push
scas
and
mov
inc
pop
adc
mov
in
nop
shlb
mov
mov
test
add
mov
xchg
leave
pushf
into
mov
push
insb
ljmp
fs
dec
lock
add
mov
sbb
call
push
push
xor
test
in
sti
mov
out
xchg
lods
xchg
ja
ds
push
das
lods
xor
sub
add
je
stos
lcall
push
push
xor
add
xor
cld
in
movsw
sub
cmp
fisttpl
clc
in
adc
push
out
test
inc
movhps
cmp
pop
jmp
dec
mov
pop
mov
loopne
cmp
je
xchg
add
cmp
mov
mov
add
es
das
jb
mov
pop
imul
jbe
and
hlt
inc
inc
and
popa
or
popf
xchg
ficoms
leave
ss
jge
jo
jmp
cwtl
fisttps
loop
daa
sub
fildl
pop
or
lds
fsubrs
enter
in
fstpt
xchg
mov
jnp
aad
mov
test
fnsave
inc
int
xor
jbe
out
in
stos
int
sbb
cltd
lock
lahf
pop
iret
lret
gs
xor
pushf
pop
adc
loope
xor
and
add
dec
lcall
out
pop
adc
cmp
lea
ds
xor
lea
test
add
cmp
pop
sbb
inc
pop
push
es
push
jb
loope
fisubl
cli
aam
pop
sub
inc
sub
lret
jecxz
mov
or
movl
imul
mov
sbb
mov
dec
ret
pop
ffree
push
pop
cmp
mov
dec
cmpb
scas
sub
sbb
mov
add
test
inc
xlat
scas
call
cmc
lahf
addr16
adc
and
jmp
xchg
out
pop
outsl
cmp
movsb
jmp
sub
pop
popf
jl
xlat
int3
add
aaa
cltd
mov
js
push
xorb
push
mull
dec
scas
insl
sarl
adc
and
scas
inc
jl
mov
out
xor
push
pop
lds
xlat
loope
add
fadds
mov
negl
xchg
inc
add
cmc
push
xor
mov
int3
outsl
adc
outsb
adc
sbb
fisttpl
jmp
adc
cs
add
jo
icebp
fwait
fwait
xchg
xlat
jle
dec
jnp
lahf
dec
sbb
scas
outsb
push
mov
mov
pop
or
loop
push
mov
jno
out
aaa
fsubl
mov
cmpsl
cmp
mov
enter
pop
leave
inc
cs
xchg
push
xor
cmpsb
in
dec
insl
in
cmp
sub
jne
std
es
dec
or
xchg
out
jmp
repz
int
or
in
pusha
push
mov
mov
outsb
ret
repz
out
jno
cmpsb
xchg
sbb
sbb
sbb
sbb
sub
ret
fcoms
dec
sahf
add
adc
leave
int3
sbb
mov
lods
test
xor
pushf
test
xor
push
int
xchg
xchg
mov
xchg
adc
mov
in
xchg
jbe
int
fildl
jae
in
mul
xchg
adc
jmp
xchg
das
test
adc
push
mov
rdmsr
inc
sub
cmp
enter
shlb
adc
mov
push
rol
pop
bound
cmp
pop
cltd
out
in
hlt
mov
outsl
stc
mov
nop
push
mov
xchg
xor
mov
push
movups
xor
xchg
leave
inc
xchg
sbb
repnz
loope
sub
nop
adc
stos
cmc
ret
scas
push
xchg
sahf
movsb
sub
test
mov
out
push
je
cli
jmp
sub
test
push
add
dec
inc
rorb
jle,pt
mov
mov
leave
daa
pop
dec
xchg
stc
mov
dec
sbb
and
pop
mull
sbb
les
out
leave
loopne
mov
push
dec
movsb
jnp
aaa
push
repz
sbb
mov
into
dec
mov
mov
sbbb
push
lcall
enter
and
xlat
xor
sbb
outsb
inc
out
pop
fnstcw
jge
call
mov
dec
pop
xor
cmp
imul
inc
gs
xchg
jns
pop
aad
and
stos
dec
dec
and
aaa
out
push
jg
and
inc
sbb
lods
cmc
movsl
jnp
popa
sbb
lea
mov
dec
jae
mov
sahf
mov
test
adc
mov
dec
repz
cmp
sub
cltd
lcall
mov
and
add
jl
nop
pop
xchg
mov
and
ja
cmp
lds
cltd
xchg
jae
sub
shll
insl
pop
jns
fists
insl
mov
or
xlat
xchg
cmp
sub
mov
addb
cltd
out
cmp
loope
pop
inc
insl
out
daa
mov
and
mov
push
imul
stc
inc
lock
loop
xchg
es
xchg
lds
in
push
fistl
sahf
push
ljmp
add
add
pop
push
movsb
ja
je
loope
mov
jecxz
repz
aas
subl
mov
mov
inc
mov
mov
push
cmp
outsb
out
add
ss
dec
lahf
stos
sti
and
jae
jecxz
mov
mov
dec
aas
push
or
push
inc
clc
outsl
mov
add
adc
pop
lahf
ss
dec
int3
nop
adc
mov
mov
call
mov
test
inc
movsl
xchg
xchg
dec
sarb
lds
nop
dec
dec
xlat
jg
push
inc
xchg
mov
clc
xchg
jle
cld
xchg
pop
fs
dec
mov
pushf
inc
outsl
push
mov
insb
push
enter
gs
mov
sti
pop
mov
imul
lea
jbe
cli
pop
and
imul
add
shll
sub
test
es
mov
jge
adc
xor
xchg
mov
lods
mov
xlat
in
aas
adc
push
js
pop
aam
fidivs
jl
sbb
mov
popa
pop
dec
sub
test
stos
jne
cs
ss
scas
cmp
mov
dec
insl
inc
jb
in
rcrl
outsb
rorb
lret
lret
data16
daa
and
sbb
jecxz
insl
cmp
cmp
cmp
xchg
mov
popf
notl
sub
lods
cmp
add
popf
fisubs
call
pop
clc
fildll
jl
mov
lods
mov
mov
cmp
fstl
shl
pop
cmp
les
pop
fcomi
rorb
mov
sahf
test
adc
dec
push
mov
add
mov
fidivrs
xlat
ss
clc
movsl
cmpsb
cs
and
dec
enter
jmp
xchg
cmp
lods
inc
xchg
add
mov
xchg
cltd
sub
mov
xchg
mov
push
xchg
iret
inc
dec
jecxz
cli
jno
push
jnp
xor
pop
scas
in
jecxz
xor
test
call
and
mov
dec
stos
in
sbb
push
xor
mov
xchg
shrb
pusha
and
inc
xchg
pop
ror
out
ficoml
xchg
mov
aam
mov
mov
jmp
shll
sbb
xor
xchg
jle
mov
cmp
pop
stos
leave
jmp
push
subl
data16
dec
or
and
orb
sbb
mov
xlat
je
popf
jecxz
add
jns
jno
jnp
mov
mov
add
push
ficompl
add
dec
shrb
xchg
scas
sbb
xorb
aam
out
dec
leave
inc
jle
leave
mov
icebp
jle
imul
ss
add
mov
stos
cmp
sti
pop
into
and
mov
shll
dec
ljmp
cltd
mov
das
and
pop
pop
jnp
divb
lds
cmp
out
ljmp
jbe
addr16
outsl
fldt
dec
movsl
lea
push
dec
test
pop
inc
test
into
pop
loope
mov
cmpsb
xor
imul
push
add
inc
mov
add
mov
fnsave
mov
mov
sbb
mov
mov
pop
test
push
cli
sbb
pop
add
sub
mov
jmp
rcr
push
mov
les
pushf
cmp
mov
mov
test
inc
aad
fbstp
shll
test
fwait
jg
in
lea
jno
lea
pop
xchg
xorb
pop
and
sbbb
arpl
movsb
repnz
adc
cmc
out
xchg
sub
pop
sbb
dec
and
rorl
push
xor
outsb
pop
aam
loopne
in
call
xchg
adc
dec
addr16
xchg
loope
push
inc
dec
pop
loop
subl
push
pop
mov
sub
lahf
fwait
stc
mov
popa
scas
cmpsb
test
jle
addr16
cld
aam
fdivp
lods
xor
push
xchg
jmp
cmp
scas
leave
cmp
lock
test
dec
mov
ret
jl
mov
jmp
or
jo
test
sahf
xlat
imul
enter
jae,pt
mov
imul
jge
add
stos
hlt
sub
fnsave
lea
mov
fbld
fisttpll
xor
or
popa
sahf
push
mov
test
mov
jbe
lret
jae
add
inc
repnz
jo
pop
bound
add
mov
mov
jbe
dec
inc
rcl
inc
cmp
aad
out
pop
test
adc
push
loop
int
cmp
mov
push
and
int3
inc
pop
cmp
adc
dec
neg
ljmp
out
mov
pusha
lock
adc
cs
scas
or
int3
cmpsb
push
jecxz
push
test
push
mov
into
jnp
add
ficoml
push
insb
xchg
xorb
xor
test
cli
call
jb
xor
cmp
inc
and
cli
lock
pop
jb
xor
jne
xchg
lcall
gs
dec
push
arpl
jae
xchg
gs
and
movsb
test
sti
jl
dec
adc
fcmovbe
mov
pop
icebp
hlt
lret
mov
fldcw
popf
cmp
xchg
mov
andb
sbb
cmp
or
pusha
and
aam
inc
dec
pop
jmp
ret
std
mov
push
adc
or
or
loop
jmp
lret
orb
aad
imul
gs
in
push
divl
push
int3
xor
xor
data16
les
mov
cli
add
xchg
daa
cli
lods
mov
add
cs
movsl
or
mov
jg
fisttpll
popa
cmp
mov
pop
jns
jecxz
loope
mov
in
pop
dec
ljmp
outsl
dec
mov
mov
movb
lret
stos
pop
cmc
mov
test
pop
mov
insl
sub
insb
daa
xor
pop
enter
mov
pop
xor
xor
inc
pop
imulb
int3
push
mov
xchg
fisubrs
and
sarl
rcrl
sub
test
stc
sub
je
ret
cld
jns
mov
add
std
mov
mov
popa
sbb
popf
and
inc
data16
scas
pop
sbb
pop
incl
jl
mov
rcll
pop
sbb
pop
je
lods
push
pop
and
mov
mov
mov
clc
int
dec
hlt
loope
push
cmp
cmp
movsl
mov
test
nop
inc
inc
in
pop
jae
outsb
out
sahf
lods
push
adc
adc
dec
cmp
xor
test
popf
mov
nop
test
sub
sub
jnp
imul
push
xchg
std
inc
push
sti
scas
fists
movsb
dec
les
lods
sbb
aam
mov
lods
loopne
jne
lret
into
rorl
ss
sbb
test
mov
stos
negl
lods
or
mov
pop
xchg
and
imul
leave
mov
int
xlat
fcmovu
mov
xor
pop
dec
mov
jecxz
jle
xor
cli
pushf
test
mov
sub
scas
test
lahf
fnstcw
inc
call
ja
xchg
insb
into
aaa
shrl
mov
push
xlat
movsl
mov
rcll
inc
imul
mov
bnd
andl
je
rcrl
lret
cli
imul
in
sbb
sub
orl
pop
pop
xor
dec
adc
rcrl
push
xchg
cli
movsl
pop
sub
and
inc
inc
xchg
inc
cmp
je
mov
and
dec
jns
aas
jge
dec
mov
fcmovbe
cmp
stc
idivl
lock
aas
inc
push
mov
orl
jo,pn
fisubrl
cmp
jae
cmp
dec
jo
outsb
cltd
jmp
push
cltd
or
cmpb
add
add
stc
or
pop
jnp
xor
pop
aam
adc
imul
xor
mov
sbb
add
div
scas
rcrl
mov
push
adc
arpl
fstl
mov
sbb
xchg
mov
pop
pop
pushw
sub
clc
lcall
xor
mov
jns
adc
sub
mov
pop
daa
mov
lcall
out
test
xchg
or
orb
xor
or
pop
inc
jl
or
cmp
adc
out
cmovae
in
std
iret
hlt
and
xor
fists
ss
mov
cmpl
pop
cmpsl
push
jle
xchg
rcrl
out
jo
arpl
repz
aas
pop
cmp
jno
in
xchg
add
pop
inc
mov
inc
lahf
inc
push
int3
pusha
xbegin
cli
jle
pop
pop
mov
jle
jo
dec
push
in
mov
add
adc
mov
push
out
mov
and
or
in
ja
mov
mov
inc
dec
push
roll
pop
sbbl
jne
clc
iret
js
fldenv
push
es
jbe
repnz
aaa
addr16
inc
mov
or
sub
cwtl
pop
popf
lret
popa
fildll
mov
dec
dec
cli
cmp
push
inc
les
xor
std
bnd
test
pop
fisttps
fcomi
jo
push
push
xchg
dec
mov
subb
push
movsb
int3
ds
pusha
sbb
fistps
pop
cld
in
mov
xchg
sarl
lahf
ljmp
sub
adc
lea
test
xchg
xor
es
out
and
jle
cmpsl
je
sahf
mov
stc
je
ficompl
loopne
pushw
sub
enter
adc
popl
shrb
mov
rclb
push
xor
mov
bound
xchg
jl
adc
xchg
inc
xchg
pop
lock
mov
xchg
sub
ret
xchg
push
or
mov
add
push
push
inc
loope
fxch
mov
dec
ja
dec
ds
xchg
idiv
or
mov
test
cmc
jne
out
pop
outsb
xchg
enter
sbb
faddl
sbbb
jle
and
mov
ja
sub
pop
shrb
icebp
lret
inc
sti
insl
cmp
pop
mov
jne
into
sub
adc
mov
shlb
xor
aad
pop
jg
mov
outsl
stc
insb
jmp
hlt
add
ss
xchg
mov
ja
pusha
leave
mov
xchg
dec
stc
lret
cmp
mov
dec
xchg
adc
adc
mov
sbb
test
sahf
js
sbb
mov
mov
shrl
or
shll
mov
fstl
push
bswap
push
sub
pop
loop
jp
xchg
mov
jg
es
push
test
cmpsb
or
xor
sub
repnz
push
je
mov
cmp
push
jae
or
mov
xor
lock
mov
push
scas
mov
xor
dec
adc
pop
ss
xchg
push
mov
shrb
mov
sub
rcrl
cltd
dec
sub
jecxz
pop
cmc
stos
fisubs
sbbl
sub
gs
insl
movsl
inc
jle,pt
daa
push
nop
jge,pt
mov
imul
bound
hlt
or
jae
sarb
or
sub
inc
shrb
mov
xor
pop
in
js
sbb
jge
adc
cmpsl
das
cmp
inc
test
insb
xor
mov
pusha
fmulp
stc
dec
shrl
jne
mov
test
outsb
and
adc
xlat
mov
dec
stos
test
mov
shl
xchg
sbbb
sbb
out
stc
ja
ljmp
jns
dec
stos
icebp
jge
pop
fdivs
adc
mov
mov
pop
hlt
inc
sub
dec
loop
xor
flds
add
xor
movsl
cmp
sbb
mov
inc
pop
cmp
loop
mov
lds
cld
sbb
jnp
idiv
xor
das
pop
dec
fstps
jno
sub
psubsw
xchg
loope
xchg
sbb
cmpsb
or
daa
or
xchg
push
mov
ficoml
mov
cmpsb
mov
cmpsl
pop
add
insl
cld
bound
push
inc
fistps
adc
in
sahf
add
pop
cwtl
shrl
or
dec
scas
or
add
shll
xlat
or
jl
jno
push
jbe
jb
add
sbb
add
or
inc
add
push
inc
mov
aad
bound
mov
icebp
pop
mov
pop
cltd
jo
xor
push
cmp
das
repz
dec
mov
or
fwait
push
lcall
fcmovbe
aad
jge
push
call
notb
adc
lods
movsl
xchg
les
push
push
lahf
outsl
jmp
xchg
jl
inc
in
subl
mov
mov
mov
addr16
jmp
adc
loope
cmpsl
outsb
out
cli
jae
punpckhbw
int
ss
test
cmp
test
fidivrs
outsb
sbb
sbb
loop
jmp
mov
xchg
repz
xor
dec
lret
imul
xchg
movsl
iret
ret
sub
inc
sub
cltd
lret
dec
xor
add
xchg
popf
sarl
and
sbb
jbe
bound
subb
std
sbb
scas
inc
pop
sub
iret
fistps
into
rcrl
gs
stos
jnp
or
popf
jle
mov
cmp
dec
dec
nop
sti
pop
pop
mov
out
cld
pusha
pop
leave
lea
lea
mov
or
sub
movsb
repnz
sar
or
out
inc
insb
and
jecxz
or
push
out
xor
mov
pop
mov
ja
mov
repz
or
sub
add
jns
mov
psrld
xchg
inc
dec
jmp
cwtl
push
mov
and
mov
out
scas
pop
pusha
cmp
or
jecxz
push
inc
mov
sub
aad
jo
loope
cmp
addr16
dec
stos
push
repnz
imull
pop
cmp
jg
or
pop
jle
ljmp
xor
ds
push
dec
aaa
push
inc
lcall
ja
dec
or
or
mov
pop
xchg
mov
imul
jne
cmpsb
mov
pop
mov
inc
sarb
pop
sub
cli
or
jecxz
dec
movsl
add
das
or
xchg
pushw
push
je
in
cmp
lret
fs
mov
sub
pop
fstpt
push
add
roll
mov
js,pt
fmul
cmp
xchg
pop
in
pop
je
inc
popf
dec
mulb
shrl
fnstenv
out
in
mov
retw
popa
xchg
jle
cli
and
fdivrl
xchg
lds
push
xchg
daa
xchg
mov
lea
bound
aaa
pop
cmc
filds
or
mov
add
cmp
sahf
into
stc
push
jecxz
arpl
int3
push
inc
jp
pop
enter
push
adc
inc
cmp
shlb
mov
mov
cmp
fimull
popf
int3
sbb
add
imul
or
lds
push
adc
jl
insb
movsl
mov
pusha
fmuls
paddb
out
push
jge
xor
popa
jge
or
test
stc
mov
add
mov
dec
inc
aad
and
jns
das
xchg
and
push
push
mov
cmp
jmp
enter
out
cmp
xchg
loopne
dec
sub
or
inc
arpl
sbb
roll
in
stos
mov
mov
imul
pop
jmp
or
mov
repnz
fdivr
pop
mov
enter
insl
adc
jmp
xor
push
pop
sub
push
lods
sub
jns
into
cwtl
pop
push
pop
sub
shll
iret
sub
mov
xchg
leave
or
mov
sbb
int3
xchg
dec
sbb
std
call
int3
pop
dec
push
pop
mov
es
add
add
adc
das
mov
jne
fucom
push
aaa
fstps
adc
fstcw
mov
shlb
popf
sub
scas
daa
mov
jp
bnd
adc
ret
mov
popa
sbb
push
cmp
fcoml
dec
mov
cmp
adc
jmp
rorb
mov
sahf
addl
dec
lods
fldl
mov
sbb
sub
sub
pushf
mov
int3
lods
add
mov
arpl
push
mov
mov
test
inc
xchg
loop
cmc
jg
fiadds
lds
mov
aam
mov
int3
out
daa
gs
push
cmp
mov
fucomi
mov
jne
sar
jecxz
sbb
mov
xlat
lock
sub
xchg
iret
push
adc
scas
dec
fdivp
or
mov
jb
nop
lds
xlat
jnp
or
jne
pop
call
bound
mov
sub
jo
sbb
mov
jl
shlb
mov
xchg
xchg
and
imul
jns
sub
mov
xchg
jbe
outsl
test
fsubl
leave
ret
test
push
stc
adc
mov
sub
mov
aam
outsb
inc
adc
lea
scas
add
ljmp
mov
out
ljmp
add
fstl
lsl
push
test
xchg
orb
mov
out
inc
sarb
push
mov
cmp
push
int3
and
cmp
daa
or
mov
jge
jns
dec
aad
mov
mov
cmp
inc
push
in
and
xchg
jns
mov
jne
and
add
test
stos
mov
add
push
xchg
cmpsb
clc
jae
leave
push
out
test
daa
mov
loopne
xchg
xacquire
cmp
pop
jecxz
push
movsl
dec
adc
hlt
add
jp
popa
dec
sbbl
fmuls
andl
scas
adc
mov
mov
cmp
pop
ret
addr16
cld
add
jo
inc
ret
int3
negl
mov
fadds
mov
cltd
cs
cwtl
pop
stos
fidivrs
ljmp
call
pop
mov
mov
iret
and
out
int3
push
dec
testb
push
or
shll
fnsave
add
sub
cmp
inc
inc
sbb
mov
mov
loop
mov
lds
ret
inc
xchg
insl
mov
fidivl
sub
add
aad
mov
sarb
add
dec
roll
jge
xchg
movl
pop
jge
mov
out
mov
jecxz
aad
outsl
cwtl
lcall
adc
add
fucomp
hlt
iret
mov
sub
shll
jb
sti
and
or
adc
psllq
hlt
mov
shll
daa
cs
daa
loop
sar
out
pushf
xchg
adc
cmp
cmp
pop
ljmp
jmp
sbb
xor
roll
inc
test
xchg
mov
icebp
out
sbb
inc
and
add
adc
ficoml
pop
pop
jns
jge
and
fwait
and
mov
mov
rolb
adc
js
subl
popf
xor
leave
mov
pop
test
imul
mov
repz
jae
mov
lea
fdiv
mov
pop
test
out
inc
or
out
popf
cmpsb
in
mov
repz
jge
outsl
xchg
sub
mov
xchg
push
addr16
jb
inc
outsl
stos
xor
stos
cmp
push
add
dec
cwtl
inc
loop
and
scas
loopne
imul
inc
mov
jge
leave
add
xlat
xor
inc
mov
fs
jae
std
popf
mov
push
ret
mov
insl
aad
out
insb
out
xor
cmpsl
mov
aam
xlat
cld
and
push
inc
stos
push
push
jg
cmp
lret
pusha
xchg
aas
outsl
cmp
jns
stos
hlt
popf
sub
cmp
aaa
test
xchg
adc
mov
adc
add
and
popa
pushf
sahf
in
xchg
or
out
das
shr
jbe
adc
push
jmp
insb
std
das
adc
push
rcrb
jmp
std
les
cli
inc
leave
cmp
mov
aas
mov
adc
lret
jo
adc
xor
mov
into
add
movsl
xor
add
inc
repz
mov
enter
daa
test
dec
faddl
nop
int
mov
jns
adc
leave
pop
insl
dec
scas
iret
dec
mov
stos
out
pop
push
je
push
sahf
push
cmp
jle
lea
aaa
or
repnz
ja
shlb
movsl
ret
movsb
das
in
cmpl
frstor
mov
sub
clc
mov
setno
orb
xchg
cmpb
sbb
in
mov
lahf
fcmovbe
fistps
cs
mov
enter
scas
push
loope
js
cwtl
mov
inc
xchg
out
shll
fwait
jnp
or
outsb
cmpsl
movsl
xchg
dec
mov
lcall
aaa
cmp
xchg
icebp
mov
orl
mov
and
addr16
stos
jb
pop
iret
xchg
aad
mov
xchg
inc
push
fsubrs
imul
mov
sub
pop
cli
xor
sub
repz
cmp
pop
data16
mov
test
mov
adc
icebp
mov
xchg
adc
fsubs
mov
pop
add
movd
cmpsl
mov
push
int3
punpcklbw
push
lcall
mov
mov
std
sub
pop
cmp
lods
inc
shlb
js
out
repnz
cmp
out
loope
insb
cltd
xchg
sub
enter
jnp
mov
loope
add
in
in
cmpsb
cli
lahf
dec
or
mov
and
lret
add
mul
pusha
pop
add
test
xchg
mov
lock
cmp
sbb
mov
cmpsl
leave
dec
push
lahf
shrl
sbb
or
mov
add
pop
and
cmp
lret
mov
mov
mov
jp
dec
jno
adc
movb
add
cmp
push
dec
popf
movsl
xchg
xchg
mov
mov
or
int
fdivs
shr
lret
lock
inc
mov
or
lock
fsubrl
jae
mov
and
ds
jmp
test
xor
mov
lret
sub
or
jge
inc
lea
mov
mov
pop
int
arpl
mov
mov
add
in
adc
xchg
out
jmp
and
adcl
inc
call
push
sbb
cli
popf
cwtl
mov
xor
ret
aam
idiv
rcrl
mov
leave
and
cmp
adc
subb
jle
adc
jne
addb
inc
inc
dec
mov
inc
cli
pop
and
adc
inc
test
mov
test
fld
pop
sbb
sbb
mov
add
int
js
shl
xor
jmp
mov
push
sub
loopne
pop
imulb
iret
std
cwtl
jbe,pt
xor
aad
jg
rcl
test
and
sti
outsl
rcr
jle
sbb
push
ds
add
testb
push
aas
xchg
cld
jge
pushl
mov
aaa
jo
xchg
loopne
sbb
inc
inc
fcmovu
dec
inc
cmpsb
dec
add
test
cwtl
jo
dec
cmp
fdivr
jae,pn
ds
mov
push
xlat
jns
adc
push
or
insb
sahf
xchg
in
cs
pop
and
repnz
or
fidivrl
mov
jae
rclb
out
aam
sbb
or
in
call
dec
popa
adc
dec
adc
fcmovnbe
ss
out
dec
daa
arpl
cmp
jmp
add
out
and
in
test
int3
mov
pop
les
outsb
ljmp
inc
mov
sbb
daa
fiadds
adc
enter
or
cmp
pop
or
add
lods
into
add
push
jne
js
lahf
pop
je
jge
rcpps
mov
fmul
cld
add
add
in
repz
sub
push
adc
gs
dec
pop
lds
mov
sbb
sbb
inc
sub
mov
nop
fcmovu
es
out
arpl
jle
mov
fnstsw
aaa
loope
leave
shll
lret
adc
mov
xchg
jbe
pop
xchg
lods
add
sbb
mov
inc
lahf
xchg
clc
jl
xor
mov
fdivr
fdiv
xchg
pusha
fbstp
push
addl
xchg
and
xor
jns
ret
or
or
inc
pop
loope
decl
sub
into
sbb
add
add
pop
push
mov
dec
sub
push
jle
out
or
dec
fidivrs
dec
je
push
pusha
inc
push
xorb
push
mov
jns
dec
push
je
push
jo
jno
loopne
sub
xchg
push
mov
sub
pushf
mov
push
inc
xchg
inc
adc
scas
bound
in
add
push
mov
mov
movsb
mov
or
icebp
pop
lcall
mov
pop
cld
adcb
adc
push
push
rcl
out
mov
fdivl
pop
pushf
xchg
inc
or
stos
pop
shll
leave
or
mov
idivl
mov
in
xor
sti
mov
stos
dec
jp
cmp
mov
push
push
jl
lods
pop
aaa
out
xor
xchg
add
push
mov
adc
cmp
jnp
sub
pusha
rol
jg
out
sub
push
aad
cwtl
imul
std
sti
xchg
mov
xor
test
mov
imul
test
mov
outsb
or
add
fsubrl
sub
iret
jle
mov
mov
xor
mov
out
inc
ss
cmp
dec
data16
lcall
mov
call
xchg
es
stc
inc
xor
aaa
push
pop
xchg
xor
cs
add
jae
inc
sbb
mov
into
xor
cwtl
mov
xor
inc
mov
out
movsl
fldl
sub
jno
cwtl
mov
push
cmp
and
mov
sub
sbbl
cmpb
jo
insb
sbb
or
mov
mov
mov
out
add
cmp
orl
and
movsb
arpl
dec
outsl
sub
js
iret
mov
out
xchg
mov
xor
fyl2xp1
scas
sub
push
jb
test
sbb
cltd
outsb
aad
lret
lock
xchg
xor
in
and
mov
ja
jae
push
xor
mov
lds
ret
enter
cmpsl
pushf
jnp
xchg
inc
clc
out
mov
out
push
gs
adc
out
sub
sub
sub
cmp
xor
cwtl
imul
cmpsl
xchg
mov
jl
in
ret
dec
sbb
cmp
std
mov
les
setns
xchg
arpl
popa
sqrtps
sarl
push
orl
jmp
loope
mov
mov
cltd
sbb
mov
or
cltd
add
sub
into
clc
pop
es
mov
pop
jmp
inc
ljmp
cmp
repz
push
lcall
mov
lds
sub
inc
sub
pop
sbb
adc
adc
mov
fcmovnu
xor
push
push
test
fimull
fistpl
hlt
add
or
jl
push
sbb
fcomps
outsb
movsl
xchg
cmpsl
popa
sarl
fldcw
or
es
loopne
in
lret
sub
bound
sar
dec
jbe
push
cmpsb
sarl
scas
mov
int3
in
dec
leave
lds
ret
stc
pushf
push
mov
aaa
inc
xchg
clc
ss
outsb
dec
les
dec
push
push
and
jnp
dec
xor
mov
lods
mov
jmp
dec
sub
or
pop
add
xchg
sub
dec
test
cs
push
movsbl
pop
xor
je
jnp
loope
pop
ss
arpl
jecxz
dec
or
cltd
in
repz
les
shrl
shlb
jp
js
inc
in
pop
push
outsb
xchg
sbb
cli
sub
push
inc
lods
cwtl
push
ss
mov
mov
out
mov
aam
sbb
jns
je
ret
sti
sub
mov
inc
xchg
stc
or
stc
maskmovq
testl
cltd
imul
insb
mov
in
hlt
mov
pop
sbb
in
insl
pop
jns
sbb
xchg
fneni(8087
cld
testb
cmp
popf
lea
shlb
mov
and
jmp
out
dec
int3
jb
fidivrl
mov
xchg
lahf
bound
mov
ja
cmc
repnz
cmp
lret
shll
inc
add
sub
or
daa
je
flds
pop
xor
fistpll
rcrb
lods
jle
inc
and
aaa
inc
pop
mov
lahf
std
pop
or
sub
loopne
sbb
ljmp
cltd
stos
xor
mov
sbb
mov
sti
inc
dec
out
dec
pop
push
scas
icebp
enter
test
sub
das
push
jae
lods
dec
insb
je
pop
push
xor
hlt
mov
fiaddl
adc
movsb
test
push
cmp
inc
dec
loop
cmp
sbb
mov
pop
add
dec
dec
loop
sbb
fdivrs
mov
push
outsl
pop
dec
lods
fisttpll
push
fiadds
mov
es
xor
and
push
xor
xchg
int3
and
push
loopne
xchg
xchg
mov
and
rcll
aam
mov
insl
out
fdivl
dec
jo
xor
push
imul
or
stc
lcall
test
or
out
lret
mov
das
push
mov
aam
push
int
lret
and
xchg
arpl
add
push
inc
les
fucomip
mov
shrb
mov
inc
cld
fldt
jno
jg
sub
push
dec
mov
scas
jns
mov
fwait
pop
and
insl
push
adc
inc
xor
sub
rcrb
cmp
mov
andl
movsb
loop
sti
adcb
pop
lds
scas
das
sbb
imul
inc
sub
mov
mov
std
es
push
mov
push
dec
xor
pop
pop
cwtl
shlb
sarb
push
and
jmp
aad
xchg
dec
test
call
rcr
leave
jge
imul
pop
sub
outsb
ffreep
je
out
loopne
das
jns
int
jp
mov
adc
cmpsl
adc
push
sahf
pop
adc
mov
cmc
pop
gs
sub
dec
daa
push
mov
out
aas
pop
icebp
ds
pop
mov
mov
sbb
fnstsw
stos
jo
pop
hlt
xor
stos
iret
jno,pn
out
mov
cwtl
rcrl
cmp
sub
ret
cmpsb
fmul
push
jb
lcall
cld
sub
mov
mov
lahf
sub
mov
movsb
sbbl
adc
push
ja
or
dec
and
loope
test
inc
mov
pusha
int3
sub
push
add
pop
imul
sbb
mov
inc
push
outsl
push
sub
inc
jb
ret
sub
mov
in
dec
repz
mov
ss
cmpsl
xchg
or
ror
imul
xchg
jbe
cltd
add
add
imul
jae
dec
roll
rorl
fnstenv
popa
ret
add
ss
outsb
test
orb
jo
rcrl
fwait
mov
and
fsubr
jo
orb
clc
push
and
or
aam
outsl
test
aaa
lock
jmp
xchg
outsb
test
insl
mov
shlb
subb
fst
sarb
lods
sub
sub
sbb
and
and
lret
in
stos
ds
aas
stos
inc
loop
inc
and
mov
push
not
mov
add
push
jno
xchg
imul
xchg
jno
loop
cli
pop
jmp
adc
push
sahf
ffreep
xchg
mov
push
or
or
decl
mov
jmp
into
lock
repz
xor
push
call
sbb
adc
push
std
jmp
sub
roll
or
dec
sarb
lahf
adc
dec
adc
inc
stos
xor
adc
pop
popa
aam
lret
mov
shr
lahf
adcb
call
addb
jo
in
push
stos
mov
and
jb
sub
mov
lea
lods
cmpsl
shll
push
test
shlb
adc
fsts
loop
push
popf
jbe
cmp
mov
dec
js
cld
es
pop
jp
ficompl
hlt
jbe
in
push
mov
dec
mov
outsl
mov
test
lret
ret
jmp
and
jg
and
sbb
or
push
cmp
push
push
xchg
ficompl
push
aas
dec
ja
mov
sarl
add
xchg
loope
cmp
scas
aaa
mov
mov
lahf
fmull
jo
jg
aaa
es
sbb
or
and
xchg
push
inc
xchg
mov
mov
add
mov
pop
cmp
pop
mov
mov
pop
imul
fisttpll
adc
or
jle
nop
sbb
enter
ja
gs
outsb
pop
cmp
push
xor
push
hlt
out
pop
xor
mov
push
repz
and
or
push
outsl
test
jmp
mov
int
cmpsb
daa
test
sub
jb
lcall
call
jno
ret
cmp
sub
out
mull
int
iret
mov
inc
repnz
mov
sub
test
cmp
mov
js
outsb
xor
call
and
add
mov
xor
dec
xchg
in
mov
enter
or
pop
dec
and
xor
addb
sahf
add
popf
insl
das
inc
jmp
out
or
rcrb
addr16
sti
add
xlat
imul
xchg
lock
pop
mov
scas
scas
or
sbb
mov
je
inc
or
fs
fwait
popf
ja
call
and
xchg
push
ret
pop
popa
jo
fnstenv
shl
adc
or
jge
cmpsb
popa
push
xor
and
in
pop
enter
sub
xor
jle
sub
jbe
insl
mov
pusha
lret
cmc
loope
mov
test
add
adc
jp
rcrb
pushf
lock
xchg
mov
or
imul
sbb
adc
pop
xchg
xchg
add
rcrl
test
cmpb
mov
jmp
jbe
dec
cmovo
sarb
mov
push
lea
adc
rolb
xchg
or
lret
and
pusha
mov
fsts
or
xchg
push
test
lret
test
idiv
mov
inc
call
dec
movsbl
ss
jae
cmp
push
fwait
inc
fmull
aad
adc
xor
jmp
sub
data16
movsl
dec
mov
push
popf
add
or
cs
pop
lds
cmp
and
popf
sbb
ljmp
sbb
xchg
cmc
movsl
leave
daa
xor
clc
pop
and
push
adc
push
dec
stc
scas
das
in
rcrb
out
sub
inc
cmc
ja
jae
xchg
jle
mov
enter
in
sub
js
in
add
cmp
inc
adc
and
pop
mov
push
mov
fisubs
in
jge
jge
lahf
push
mov
cmp
xchg
mov
mov
int
mov
pop
into
xchg
mov
xchg
mov
insb
cli
aam
xchg
inc
push
mov
pop
pop
arpl
clc
sub
cmp
es
mov
cmc
enter
call
inc
push
ja
cmpsb
fsubrp
pusha
ljmp
mov
subb
ja
sub
cmp
movsb
inc
xchg
mov
jge
and
sbb
insl
adc
in
rcr
sbb
fwait
inc
push
test
test
jmp
pop
adc
or
aam
push
iret
dec
xor
cltd
pop
sub
aas
stos
push
dec
push
sub
ljmp
stos
pop
dec
movsl
je,pn
xor
inc
fs
mov
mov
mov
push
lods
loope
ffreep
setno
in
lods
cmp
mov
lds
notl
popl
ds
shlb
mov
les
insb
cmp
and
dec
mov
mulw
subl
aad
sbb
jno
push
out
xor
pop
popf
mov
std
and
outsl
mov
or
clc
ljmp
fwait
repz
xchg
jge
jge
clc
adc
inc
xchg
pop
xchg
scas
test
mov
out
jecxz
mov
sahf
xchg
push
gs
add
adc
adcb
jl
cmp
mov
int3
inc
cwtl
pusha
pusha
loop
cmpsb
insb
dec
mov
fidivrl
xor
in
mov
fxtract
lock
in
cld
xchg
outsl
call
jp
add
xchg
jle
add
dec
je
shlb
loopne
ficoml
or
dec
xor
movsb
sahf
fdivrs
jmp
leave
mov
jp
or
jns
sub
std
dec
inc
adc
loopne
push
sahf
push
push
test
mov
mov
stc
enter
lea
adc
aam
fs
mov
lret
jno
jle
fnstcw
inc
out
pop
mov
pusha
frstor
sub
xlat
idivl
xadd
sbb
cli
push
inc
push
jb,pn
not
outsl
and
add
loop
sbb
jo
or
es
push
dec
mov
xchg
sahf
cmp
adcb
adc
int3
jl
mov
jbe
clc
cmp
ss
repnz
add
dec
clc
lods
lock
in
imulb
lods
xor
ja
cmp
fs
lods
inc
cmpsl
push
je
int3
pop
lods
xchg
dec
into
shll
aad
ficoms
pop
cld
fdivrl
test
pop
incl
lods
js
mov
mov
xchg
int
mov
pop
push
cmp
pop
and
movl
pop
inc
into
fsubl
addr16
adc
rolb
cltd
xchg
lock
pop
jp
jl
mov
adc
sti
loop
stos
sub
dec
mov
mov
mov
cmc
pop
and
inc
loope
scas
cwtl
or
xor
xlat
insl
xchg
mov
jp
adc
lret
rol
xor
das
fdiv
mov
mov
or
adc
daa
xor
or
jmp
fisubrl
jno
movsl
scas
icebp
mov
cmpsl
add
shrb
pop
ljmp
divl
or
add
clc
lcall
lock
cmp
popf
jnp
hlt
dec
pop
cltd
sub
sbb
mov
mov
adc
outsl
hlt
rcrl
mov
fistpl
das
das
aad
and
mov
popf
decb
cmp
leave
mov
mov
xchg
sbb
push
pop
xor
rorb
inc
dec
cmp
xchg
sbbb
add
sub
push
cmpsb
bnd
sbb
imul
mov
fcmovb
stos
lret
sbb
fidivrs
pop
inc
xchg
pop
enter
stos
stos
cmpsb
push
sbb
sbb
or
sbb
inc
pop
dec
sbb
dec
xor
push
inc
mov
fwait
int3
adc
mov
negb
in
fisttpll
add
inc
cmp
test
adc
stos
test
pop
jne
bound
out
jo
adc
daa
outsl
std
pop
rcll
pop
inc
call
mov
inc
add
stos
or
in
or
shll
xor
push
out
outsb
int3
jge
dec
scas
mov
cltd
sub
es
or
lret
add
add
mulps
aam
flds
adc
add
mov
inc
inc
movups
movl
lcall
das
leave
jle
in
ret
addr16
push
loopne
das
leave
pop
out
mov
jnp
pop
mov
clc
and
mov
cmp
adcl
push
aas
scas
xorb
mov
or
or
inc
lcall
xchg
mov
cmc
in
inc
mov
cmpsb
inc
sub
adc
inc
push
aam
les
inc
cmp
mov
jb
imul
aas
out
cmp
cmp
mov
mov
clc
cs
pop
insl
loope
sub
mov
and
mov
xor
xchg
outsl
cld
pusha
jb
aas
test
lods
xchg
lods
sbb
imul
aaa
test
sbb
pop
dec
mov
xchg
inc
adc
pop
pop
lret
lock
call
popf
js
pop
xchg
xlat
or
je
jmp
dec
decl
xor
add
lock
out
imul
test
mov
push
add
dec
push
aam
stos
icebp
subl
aaa
mov
popl
dec
pop
mov
lret
cmp
push
cli
stc
lahf
jnp
jg
pop
stos
aad
dec
xor
push
mov
outsl
push
lea
add
dec
lock
mov
hlt
fsubp
mov
or
nop
in
xchg
popf
mov
pop
pop
adc
cwtl
jnp
mov
outsl
xchg
insl
addl
dec
sub
fistps
iret
cmp
cmp
mov
out
arpl
cwtl
push
mov
imul
fcompl
fldt
fsubrs
adc
xlat
pop
outsb
ret
mov
mov
lods
push
call
mov
rcrb
push
mov
adc
ljmp
sub
push
pushf
sbb
fdiv
or
sbb
mov
cli
test
in
sbb
mov
das
test
fidivrl
test
adc
in
xor
fsubrl
int
mov
jo
into
inc
fistpll
cmp
sti
xor
sbb
add
and
rcll
cld
xchg
sbb
fldt
insl
push
icebp
inc
dec
jae
je
inc
jl
or
nop
sub
jmp
mov
push
xchg
mov
adc
es
into
mov
mov
das
cmpl
ret
lods
imul
xchg
add
mov
or
jl
cmp
rcl
mov
out
mov
mov
outsl
and
pusha
xlat
inc
ficompl
add
repz
adc
inc
jbe
pop
adc
je
cmp
stos
das
fisubrs
sub
aam
adc
or
jnp
jno
imul
inc
mov
insl
test
lods
mov
xchg
mov
dec
xchg
dec
testl
les
ljmp
xor
icebp
ljmp
ret
es
daa
lods
icebp
enter
push
fwait
div
popa
cmp
out
cld
out
sbb
fldt
jl
dec
sub
sub
iret
jno
push
mov
lea
jle
sti
or
jl
inc
out
push
pop
sub
popa
add
cmpsl
popf
ja
in
push
aad
pop
std
jmp
jge
shrl
cmp
dec
fwait
jle
jae
scas
dec
in
mov
mov
mov
cmp
and
mov
inc
movsl
add
push
ret
push
fstps
les
xchg
jmp
arpl
push
mov
sub
bound
add
or
sbb
inc
je
insl
loope
loope
je
add
jge
adc
sar
adc
ret
jns
sub
shl
daa
push
push
jns
push
sub
inc
jnp
popf
push
repz
sbb
push
cmp
test
mov
adcb
je
and
fsubp
fwait
jl
xchg
bound
bound
jno
jge
daa
in
mov
mov
repz
lods
xchg
aas
aaa
jae
mov
in
lret
mov
ja
or
jl
sahf
lahf
jecxz
ret
push
add
jae
cmp
inc
divl
and
cwtl
aas
enter
dec
jo
outsb
outsb
adc
push
out
and
mov
cmp
pop
cltd
push
imul
fstps
jecxz
pushf
mov
es
popa
pushf
ds
or
xor
cmpsb
pushf
pop
inc
mov
xchg
pop
out
test
out
je
or
inc
jle
sbb
inc
rorb
and
xchg
sti
cmp
mov
jo
lret
sarl
push
cmp
pop
mov
adc
lds
aaa
jno
data16
arpl
scas
mov
ljmp
in
push
inc
xchg
adc
jecxz
imul
mov
fstps
inc
pop
inc
hlt
or
bound
jns
xchg
fstl
push
popa
hlt
cmp
ret
push
repz
in
addb
test
push
popa
lahf
int3
mov
cwtl
pop
repz
xor
push
js
pop
mov
mov
cli
adc
lret
in
fs
imul
cmp
jbe
add
fwait
xor
gs
test
lahf
cwtl
loope
in
daa
fbstp
out
push
imul
dec
mov
call
fimull
in
insl
pop
pop
hlt
inc
lret
pop
xor
incb
in
jae
cwtl
adc
imulb
shlb
mov
fnstcw
stc
mov
cmp
pushf
ror
into
cmpsb
or
sar
stos
xchg
add
stos
pop
or
enter
es
jl
sti
leave
pop
pop
xchg
mov
mov
lcall
je
xor
xchg
and
testb
fsts
clc
fildll
scas
popf
jl
fldl
dec
cmpsl
insb
cmpsb
jl
xor
jge
pop
dec
mov
mov
in
loopne
lea
pop
mov
jbe
aam
inc
pop
das
das
insb
or
je
popf
into
xor
popf
sbb
je
addr16
pop
into
or
cli
int
enter
les
adc
scas
xchg
inc
mov
call
jecxz
and
jae
sub
mov
out
aas
sub
lods
in
mov
pushf
adc
add
xchg
icebp
cwtl
sbb
jg
mov
rol
push
or
js
cmp
add
addl
adcl
arpl
shrb
jp
cmpsl
or
test
push
pop
outsl
nop
jecxz
insb
inc
sahf
addr16
sub
ret
inc
push
push
push
std
lods
dec
leave
test
jae
inc
enter
cmp
lods
lods
fistpl
mov
mov
pop
into
mov
data16
stos
jns
mov
cmp
insb
mov
fs
lcall
icebp
pop
mov
hlt
dec
xchg
mov
aas
sbb
add
sub
fstpt
scas
insl
pop
xor
pop
jne
xor
cli
mov
call
aam
adc
push
push
movsl
jp
push
adc
pop
stos
nop
mov
add
popa
xchg
rcrb
push
push
call
arpl
mov
es
mov
push
adc
ljmp
aad
dec
and
in
loope
nop
cmp
mov
mov
test
adc
fwait
cwtl
dec
lock
mov
lahf
jns
add
push
subl
ja
dec
and
fldl
jmp
es
pop
xchg
xchg
sbb
dec
sbb
or
scas
xchg
xor
pop
rorl
add
sub
mov
lcall
jg
stos
adc
notb
or
xchg
rclb
push
mov
test
or
xchg
out
or
inc
movsl
loopne
mov
jne
xor
loop
or
mov
push
pop
pusha
xchg
mov
add
dec
push
and
lds
stos
mov
scas
fsubp
leave
je
sbb
xchg
int3
sbb
test
add
sahf
cs
mov
cs
mov
sbb
movsl
mov
dec
fdiv
shr
decl
lret
xchg
cmp
or
les
mov
mov
jnp
andl
je
push
inc
jo
andb
jl
adcl
sub
fdivrp
sbb
dec
clc
nop
mov
jae
ret
mov
subl
fs
rcl
lods
mov
or
pop
and
lret
xlat
stos
sbb
push
outsb
xchg
inc
test
lcall
imul
inc
xlat
mov
push
inc
push
cli
xchg
shll
xchg
mov
mov
sub
jmp
fnsave
adc
inc
inc
xor
fwait
fsts
jl
int3
rclb
push
cmp
adc
dec
test
xchg
imul
or
in
in
pop
iret
cmc
iret
hlt
aas
sbb
lret
js
push
pop
outsl
ret
cltd
pop
fdiv
insl
shll
inc
inc
test
sub
push
cs
sbb
jge
push
adc
add
mov
in
xor
xor
jnp
cmp
pop
push
cmp
jne
pop
adc
xor
scas
lods
cmp
push
jbe
mov
in
or
sub
add
sbb
cli
notb
loopne
cmp
pop
sub
fcmovu
das
in
insb
jge
dec
push
cli
sbb
icebp
mov
bound
pause
fwait
jns
movsb
imul
sbb
adc
loopne
and
jecxz
pop
mov
call
addb
jle
inc
lock
jmp
inc
enter
push
sbb
mov
in
push
or
inc
add
sub
add
ret
mov
mov
cmp
dec
das
pop
int
ds
jl
sub
jbe
sbb
pop
xchg
xor
pop
aaa
rclb
lock
inc
xor
int
mov
fsub
lock
jns
sbb
xlat
fstl
push
loop
cmpsb
call
in
in
jo
cmp
mov
pop
pop
pushf
movsl
sub
add
inc
rolb
add
jb
mov
jecxz
fs
mov
imul
cmp
iret
shl
int
push
adc
jmp
push
push
and
mov
pop
sti
jns
inc
mov
dec
jmp
dec
inc
push
shl
leave
adc
out
sbb
das
push
mov
pushf
enter
std
fstpt
pop
jb
fsubr
leave
addb
push
ds
nop
incb
inc
dec
lcall
add
lods
rclb
push
mov
xor
cmp
lds
mov
enter
or
mov
addr16
sub
adc
imul
mov
or
dec
adc
or
cmp
mov
out
std
je
out
mov
dec
add
cld
in
mov
mov
cmpl
add
out
jge
lcall
or
imul
jb
dec
out
dec
xchg
jne
repz
mov
sub
orb
repnz
pop
cltd
fwait
loop
xchg
xlat
aas
in
idivl
pusha
mov
jg
daa
stc
int3
xchg
ds
test
xchg
cltd
stos
sahf
subl
xlat
mov
lea
xchg
imul
and
push
arpl
dec
xor
adc
xchg
iret
clc
outsl
loop
mov
xchg
test
cmc
loopne
lods
adc
pusha
pop
fs
push
mov
lea
jp
dec
mov
mov
xor
cmpb
sarl
loopne
cmp
jb
lret
inc
movsb
enter
mov
test
xchg
stos
lock
ljmp
insl
mov
mov
mov
cmp
lahf
push
inc
jge
pop
inc
andl
ja
xchg
int3
jecxz
or
out
leave
sbb
dec
cld
loope
jbe
sbb
leave
pop
dec
mov
jmp
or
sbb
stos
cmovne
mov
sub
sub
cld
inc
sub
int3
clc
and
push
mov
mov
int
xor
or
inc
jne
pushf
js
imul
cmp
mov
out
xchg
jl
fyl2x
add
mov
mov
xchg
xor
jp
movsb
lock
fisttpll
lock
lods
jo
mov
mov
mov
sbb
push
push
mov
fisubrs
mov
push
cltd
push
vmaxsd
push
push
arpl
imul
outsl
int3
jb
hlt
mov
fstl
inc
sub
fiaddl
and
or
cmp
sub
xor
loope
jne
dec
movups
mov
push
imul
pop
outsb
pop
daa
sbb
fstp
loope
or
xor
cld
repnz
jno
pushf
testb
pop
scas
mov
or
ss
outsl
xor
mov
jo
mov
lock
xchg
mov
cmp
xor
subl
fbstp
bound
loopne
xchg
jg
xor
shl
ret
orb
dec
jns
xchg
imulb
jp
xor
pop
nop
ss
pop
fnstsw
fisubs
aad
sbb
call
adc
sbb
pop
es
enter
movsb
gs
cli
lea
lahf
dec
out
cmc
pushf
dec
and
sbb
jg
out
jl
lahf
jb
scas
mov
mov
enter
scas
imul
push
pusha
ss
bnd
imul
in
lret
and
push
and
push
push
imul
push
scas
mov
pop
push
push
sbb
adc
mov
aam
mov
out
aam
jl
jle
xchg
gs
xchg
mov
mov
sbb
stos
sti
sub
jnp
xor
jecxz
dec
sub
add
idivb
cltd
test
pop
fs
adc
add
xchg
and
lock
jne
push
ljmp
pop
pop
out
in
jb
movsb
cmp
sub
scas
hlt
cmp
jbe
roll
jle
je
mov
xlat
mov
gs
test
lods
lods
in
inc
xchg
mov
sub
clc
push
cmp
dec
stos
or
scas
dec
mov
mov
mov
mov
push
dec
inc
inc
pop
jg
xchg
sbb
lock
sbb
inc
out
sub
jge
pop
push
xlat
sbb
cs
push
mov
cld
lret
scas
pusha
es
mov
lods
sbb
js
fstps
shlb
push
pop
aas
rcrb
and
inc
cwtl
shlb
adc
adc
or
lock
in
push
cmp
dec
push
sub
mov
push
bound
cmp
jo
cmpsl
in
mov
mov
pop
mov
add
aaa
out
faddl
cmp
sub
pop
movsl
adc
lahf
scas
inc
and
pop
in
or
sahf
jno
xchg
pop
lds
cmpsb
aas
cmc
pmaxub
out
mov
add
stc
aad
out
jno
xchg
add
nop
pop
cmp
pop
shlb
xchg
mov
sub
cmp
ret
pop
xchg
lahf
xchg
pop
ficomps
jae
sbbl
lcall
in
sbb
imul
into
push
jle
aas
jb
imul
hlt
mov
cmp
sbb
pop
stos
jno
movsb
xorl
lahf
mov
sbb
xor
mov
mov
repz
popf
mov
fsubs
aad
outsl
into
popf
aas
dec
xor
mov
testl
cltd
std
and
fcomps
hlt
or
mov
mov
inc
stos
pop
push
stos
sbb
and
inc
int3
mov
mov
dec
sbb
test
cmc
mov
xor
sub
mov
insl
dec
dec
out
lahf
out
adc
adc
adc
sbb
inc
outsl
fcoml
add
bound
movsb
and
push
sub
es
int
dec
mov
mov
mov
lds
int
dec
rcr
popf
jp
or
jns
gs
aaa
mov
cwtl
add
fsubl
dec
int
in
mov
rorl
mov
xchg
or
jecxz
in
push
or
sahf
cmpsl
fwait
fs
cmp
xchg
sbb
jmp
adc
subb
sbb
mov
out
cwtl
std
loop
adc
fidivrl
test
dec
mov
jbe
cmc
ja
es
mov
ds
mov
jbe
mov
es
out
cmpl
xor
stos
mov
jge
scas
and
adc
push
andb
ja
roll
ret
inc
cmp
lock
xchg
sbb
mov
and
lds
and
sub
icebp
test
pop
mov
push
mov
pop
cwtl
std
andl
inc
xchg
mov
mov
out
aad
insl
pop
aas
popa
jbe
int3
mov
jnp
inc
xchg
dec
xchg
in
iret
rcll
dec
xlat
push
imul
sub
int3
add
sahf
in
inc
test
xor
sub
mov
clc
call
xor
sbb
pushf
add
inc
movsb
jns
inc
sti
nop
in
mov
inc
xor
mov
std
lret
mov
mov
dec
fbld
inc
lds
sub
mov
mov
in
push
xchg
or
jmp
adc
cmpsl
inc
fisubrs
cmpsb
into
xor
mov
mov
rclb
test
int
push
enter
xchg
call
out
sbb
xor
fidivrs
dec
into
adc
movl
pop
movsl
in
ljmp
fildll
aas
and
testb
ret
jno
sub
aas
dec
iret
cmp
aad
das
stc
mov
fcoml
addr16
inc
mov
rcrl
movsl
repz
cmc
lds
ljmpw
sub
popa
cmpsb
cli
cmp
dec
push
inc
es
pop
sub
inc
scas
movsl
pop
cmp
sbb
xorb
lods
ljmp
je
jne
in
mov
xlat
or
cltd
ret
idivl
jae
add
adc
call
mov
push
and
jbe
cmp
jecxz
mov
lods
and
cltd
adcb
sub
mov
add
mov
adc
movl
ja
iret
loopne
sbb
sub
mov
dec
loop
addb
jg
loopne
add
add
loopne,pt
rcl
xor
mov
or
rcll
pop
or
mov
inc
adcb
and
adc
adc
mov
out
dec
pop
pop
or
sub
stos
hlt
mov
insb
cmp
sub
std
cltd
stos
out
cwtl
mov
push
inc
fs
stos
rol
enter
jb
xor
pusha
mov
mov
sub
jns
and
jl
sbb
cmp
sbb
cmp
scas
and
sbb
rorb
les
add
in
xchg
jg
jns
pop
mov
pop
dec
outsb
sbb
jmp
sub
idivl
adc
movhps
nop
test
addr16
mov
in
mov
loopne
push
int
xchg
in
in
xchg
pop
sub
cmp
lods
ficomps
mov
sub
out
arpl
pop
stc
mov
ror
pop
cs
fisubrl
adc
test
orb
sub
or
in
or
add
add
push
je
nop
add
mov
shlb
sub
fisttpl
dec
sub
fwait
adc
pop
or
push
stc
cmpsl
lahf
cmpsb
and
daa
arpl
ja
mov
test
scas
push
xor
shl
pushf
enter
js
add
test
gs
jo
aaa
mov
aaa
ret
cmp
add
idiv
or
addr16
mov
lods
fnsave
cs
push
call
stc
cs
aas
xchg
movsl
xchg
test
arpl
int3
dec
loop
dec
cmpl
outsb
mov
or
es
gs
ffreep
roll
scas
pushw
mov
into
mov
daa
inc
in
cli
scas
hlt
xchg
dec
leave
mov
in
out
jb
jns
repnz
in
mov
out
cmp
aam
mov
mov
stc
push
out
pop
sbb
ss
add
jb
jb
xor
int
bsr
push
cmp
or
inc
sub
sub
xor
fsubl
insl
out
hlt
stc
mov
adc
cmp
in
jge
in
pop
clc
iret
popf
or
in
or
cli
jnp
pop
cmp
jo
cli
dec
scas
lret
xchg
icebp
xlat
jmp
lcall
imull
xor
or
mov
sub
adc
mov
cmpsl
pop
or
stc
divl
in
out
xchg
adcb
and
xchg
and
pop
out
dec
pop
or
or
dec
jo
sbb
or
adc
jbe
jnp
lods
ljmp
jle
cmp
bound
inc
jae
clc
mov
pushw
iret
sbb
inc
inc
ret
pop
mov
enter
mov
out
stos
fs
movb
cmp
xor
std
test
xchg
test
and
pusha
enter
pop
pop
mov
loope
and
icebp
into
pop
adc
lods
lahf
in
fildll
sub
or
add
push
imull
jmp
jb
not
mov
shrl
ss
dec
and
mov
cwtl
xchg
lret
inc
shrb
mov
push
inc
loopne
mov
scas
mov
jbe
addb
add
mov
popf
test
shlb
je
adc
xchg
sub
ss
loopne
add
test
pushf
push
adc
or
outsb
shlb
cmc
sbbb
ljmp
ja
mov
and
movsb
sbb
scas
or
es
enter
mov
cmp
std
shlb
shrb
cwtl
div
insb
fs
int
std
cmp
sbb
out
int3
jb
stos
mov
test
movsw
jle
sbb
and
adc
fdiv
add
cltd
pusha
add
cmp
adc
xchg
into
push
fiaddl
popa
movsl
jo
jg
pop
cmp
fstpl
pushf
lods
lcall
sub
ror
imul
xchg
inc
int
imul
jmp
push
or
lods
mov
push
rcrb
jmp
dec
arpl
cli
dec
outsl
cltd
inc
or
mov
rclb
xor
addl
fisttps
adc
leave
test
inc
in
dec
adc
inc
mov
lret
pop
enter
sub
and
daa
in
fsubl
mov
inc
jecxz
cld
imul
xor
arpl
lahf
mov
inc
not
fisttpll
mov
mov
sbb
mov
rorl
sahf
push
push
aam
mov
lahf
add
lahf
ljmp
movb
test
lea
fwait
xor
repz
dec
push
iret
orl
test
sahf
add
divb
mov
or
dec
icebp
mov
lcall
push
ja
pop
pushf
test
push
dec
mov
mov
cli
popa
aam
jb
sbb
cmp
in
xchg
add
fildl
ljmp
sahf
jno
sbb
jg
hlt
mov
incb
cwtl
in
loop
mov
jno
jl
lods
adc
imul
sbb
sbb
push
out
push
inc
faddl
fisubrl
fmull
xor
push
push
lahf
movb
ss
push
icebp
cmp
nop
movsb
push
sbb
in
mov
xchg
cmp
fmuls
iret
fmul
sti
popf
test
lret
push
iret
sub
pushf
out
cld
pop
lock
sbb
pop
shll
add
insl
mov
data16
cld
adc
aas
adc
fists
and
add
or
shll
js
lret
ljmp
jl
jp
mov
inc
call
xor
mov
or
incl
xchg
pop
jmp
add
ror
fistpll
cmc
cli
cmp
xchg
call
int3
or
mov
xor
cli
mov
push
repz
lea
jne
push
inc
mov
and
enter
aas
pop
mov
test
or
sub
outsl
aas
mov
lock
fsubrs
xor
popa
sub
xchg
pop
pop
and
shr
cmc
jb
adc
inc
xchg
inc
mov
gs
adcb
aad
xor
jge
pushf
and
mov
xor
dec
jnp
xchg
loope
mov
adc
icebp
dec
sub
fisttpl
scas
jmp
and
stos
xor
xorl
push
push
xlat
and
jg
cmp
rorl
adc
imul
push
mov
aaa
dec
cs
and
es
mov
adc
lahf
mov
and
sbb
adc
ret
xchg
scas
pop
or
out
or
mov
pushf
add
fwait
cmp
bound
cltd
jle
sub
cwtl
dec
inc
fwait
pop
int3
andb
movsb
and
fisubrl
dec
dec
lret
pop
mov
fsubs
data16
mov
mov
les
cmp
push
xchg
push
out
inc
leave
scas
adc
sbb
dec
movsb
pop
gs
xor
ret
jb
ret
popl
aad
or
mov
or
add
adc
lods
call
add
addr16
and
xchg
shl
mov
mov
mov
pusha
stos
les
loopnew
push
sarl
mov
js
mov
push
cltd
insb
xlat
adc
mov
inc
outsb
std
repz
sub
add
and
je
xor
push
and
call
es
repz
stos
jg
pop
push
inc
lock
mov
jp
add
jmp
inc
sbb
xchg
sub
aam
fs
adc
inc
in
add
sar
jnp
and
jo
andl
or
loope
out
add
jecxz
loopne
clc
inc
fbld
adc
popl
cwtl
add
out
stos
or
les
fidivs
add
dec
push
sarb
popa
js
fistps
sub
mov
jno
roll
add
popf
movsl
mov
out
in
or
mov
std
loope
or
subb
aaa
inc
jno
pop
pop
mull
inc
mov
mov
imul
and
mov
cmp
mov
fistl
iret
pop
mov
mov
notl
inc
fadd
jecxz
mov
sub
or
out
icebp
mov
in
fwait
negl
mov
aas
cli
and
cmp
xchg
iret
inc
pop
std
sbb
xor
repz
or
sub
sbb
mov
jg
int
les
sarb
and
ja
lret
or
daa
scas
jl
adc
mov
push
add
ret
in
jge
adc
dec
xchg
gs
adc
jp
mov
daa
push
xchg
subb
loope
sbb
sahf
jno
lds
inc
adc
enter
push
mov
xchg
sbb
xor
mov
imul
xchg
push
mov
jle
arpl
imul
inc
push
sbb
shl
mov
add
jmp
lcall
test
adc
jae
pushf
rolb
adc
add
jbe
adc
lcall
shr
in
lret
sarl
push
cmp
xchg
test
cmp
xchg
or
cmp
cmpsl
icebp
sbb
and
into
mov
pop
cltd
movsl
jge
in
sub
cli
shlb
ds
or
dec
mov
xchg
pextrw
mov
adc
loopne
sub
mov
jp
xor
cmc
insl
pushf
std
xchg
fsubrp
dec
push
cs
fistl
popa
fnsave
es
pop
insb
ds
test
sub
out
iret
out
jmp
lret
mov
daa
cs
stc
xor
inc
inc
jnp
pop
push
jecxz
sub
loopne
sub
ror
mov
insb
add
cmp
jge
sbb
gs
cmpsl
jne
mov
jl
mov
lock
xchg
pop
add
xlat
cltd
smsw
lods
push
shll
xlat
stc
sbbb
into
data16
cmp
push
push
out
pop
fwait
pop
mov
pop
lcall
or
dec
sahf
pop
sbb
out
std
repnz
xchg
in
shlb
insl
mov
leave
push
lea
xchg
adc
daa
and
cmp
scas
pop
mov
lods
mov
addb
inc
mov
loope
cmp
jbe
cmpsb
push
jne
sbb
adc
cmp
jge
lret
int
mov
test
ds
in
mov
fdivr
push
ffreep
arpl
xor
lcall
mov
or
sti
test
and
rcr
cwtl
sub
dec
mov
ljmp
or
jp
sub
xchg
sub
cmpsb
mov
pusha
mov
push
scas
mov
cmpsb
inc
std
push
outsb
cmpsl
shll
mov
stc
sub
cmpsb
ja
sbb
sbb
add
cs
imul
ja
stos
or
loop
add
pop
pop
insb
dec
sbb
stos
fsub
xchg
pop
mov
push
fdivrl
sbb
stc
mov
mov
push
mov
mov
jb
mov
jne
xor
call
int
xchg
or
xor
push
inc
lea
adc
sti
outsl
pop
xorb
pop
xchg
popa
pop
mov
imull
sbb
mov
or
inc
aad
or
cmp
lods
or
cmc
add
mov
repz
sbb
lret
int3
sbb
or
adc
sbb
addr16
rcrl
lahf
fbstp
out
push
bound
adc
or
stc
mov
jns
mov
dec
sub
inc
adc
scas
lock
dec
add
insl
mov
test
mov
sahf
pop
cmpsb
mov
mov
addr16
inc
cmp
push
adc
push
or
dec
pop
enter
adc
cmp
sbb
xor
sbb
sub
inc
jo
mov
sbb
cmpb
jecxz
add
aam
inc
mov
adc
loope
out
insl
and
add
fwait
mov
mov
arpl
sub
cltd
mov
dec
cmp
notl
les
in
push
adc
enter
fcomp
fidivrl
inc
xor
sbb
repz
in
sbb
std
mov
mov
outsl
lahf
push
lock
ret
les
call
insb
push
mov
mov
setno
push
ljmp
leave
rcrb
sti
dec
neg
push
pop
shlb
or
sub
ret
scas
lds
xor
dec
mov
pop
xchg
mov
addb
xchg
test
loope
sbb
jp
pop
or
mov
xlat
or
icebp
pop
movsl
cmp
pop
add
sbb
dec
sub
inc
jb
inc
test
pop
les
mov
test
jp
mov
fcomps
das
clc
scas
xor
pop
xor
push
js
arpl
out
lds
adc
addb
jne
stc
lods
jl
rorb
lret
add
inc
lds
sbb
jne
iret
enter
push
out
mov
lret
mov
mov
or
adc
sbb
fwait
jmp
push
inc
clc
dec
jne
xchg
scas
mov
je
mov
pop
mov
repnz
pop
lahf
sbb
push
lahf
hlt
pop
pushf
mov
popf
lock
xrelease
dec
push
cmp
mov
iret
xlat
mov
mov
cmp
xchg
push
in
lahf
jle
adc
push
dec
notb
mov
imul
sub
adc
push
test
push
mov
mov
hlt
scas
sub
negb
lods
mov
addr16
pop
rcrl
cmp
push
in
lds
cmp
test
inc
mov
mov
sbb
pop
xlat
sbb
aad
pop
mov
ds
ror
int3
mov
mov
add
or
xchg
mov
arpl
std
jecxz,pn
xor
jnp
aaa
cmp
sbb
inc
vmovapd
mov
mov
insl
fldt
aam
imul
xchg
int
scas
int3
pop
xchg
adc
int3
inc
loop
cwtl
push
inc
pop
cli
cmc
jg
in
add
dec
sbb
mov
inc
mov
push
shll
sbb
inc
jge
cld
out
adcb
adc
sbb
inc
xchg
dec
test
arpl
or
mov
push
aad
inc
scas
lods
mov
imul
imul
lds
repz
push
xchg
in
push
pop
jecxz
icebp
or
sub
add
jno
inc
js
jnp
ss
pop
stc
leave
popa
ficoml
das
xor
imull
and
popa
mov
bound
jp
and
xchg
and
lret
dec
stos
scas
gs
cli
test
das
jo
ss
jns
mov
aad
mov
clc
pop
mov
push
jge
imul
jnp
pop
inc
jp
mov
mov
mov
sbb
jmp
xor
jne
cmp
xor
jnp
dec
pop
pop
inc
jo
push
sub
xchg
push
insb
or
cltd
aam
test
je
jp
pop
test
and
push
fcmove
push
mov
test
push
cwtl
dec
inc
loopne
adc
xchg
stos
xchg
and
idiv
cmp
stos
sub
mov
or
xchg
xchg
insl
mov
sub
pop
ss
aad
cmc
push
ja
mov
imul
push
mov
clc
mov
ret
cmp
jbe
icebp
jbe
cltd
ja
add
xor
jl
cmpsb
inc
xchg
adc
or
imul
mov
add
mov
pop
xorb
into
aad
cmpsl
sub
jb
and
shrb
lds
mov
xchg
data16
xlat
mov
shrl
clc
sub
int
jg
mov
adc
push
mov
push
mov
mov
dec
rolb
jb
negl
ja
adc
rcll
push
loop
xor
xor
lds
push
loope
mov
mov
cmp
cmpsl
lcall
cmp
pop
sub
push
sbb
divb
shlb
shlb
sub
inc
dec
jmp
stos
jp
stos
adc
pusha
jns
ret
icebp
push
mov
loopne
push
inc
mov
xor
ds
push
cmpl
rcl
inc
push
dec
or
lcall
ret
fcompl
data16
cmc
jne
add
mov
ffreep
dec
dec
fdivs
int3
daa
jns
adc
sbb
xor
imul
mov
xchg
insb
mov
cmp
xchg
adcb
push
iret
in
addb
inc
jp
cmp
sbb
roll
flds
loope
adc
jmp
cmp
imul
mov
cltd
push
sub
push
or
fldenv
inc
lock
mov
ret
xchg
mov
add
mov
test
ret
cld
adc
jae
imulw
dec
jmp
das
rcrl
stos
test
stos
inc
cmc
stos
les
xchg
dec
jmp
pop
icebp
cltd
push
adc
aad
daa
sbb
ja
mov
ret
rclb
xchg
loopne
icebp
xchg
dec
push
pop
sbb
mov
sub
lea
sarb
in
mov
push
cmp
xchg
sub
test
int
or
scas
push
and
and
sbb
push
ja
push
sub
lcall
xchg
lcall
cwtl
in
sub
jbe
outsl
popa
or
push
push
popa
ss
xchg
popf
or
pop
push
xchg
fucomp
bound
mov
outsl
mov
sub
sbb
xchg
add
fiadds
lret
pop
dec
inc
ret
mov
mov
gs
negb
clc
sbbb
mov
insb
popa
aaa
cmc
stos
mov
add
std
mov
adc
add
ror
sbbl
jo
jge
fidivrs
sbb
push
sub
mov
mov
fs
pop
mov
fisubs
pop
mov
and
nop
sub
sub
fisubs
int3
push
movsb
mov
and
xchg
adc
into
cmc
bound
rol
aaa
pop
js
mov
xor
jmp
stc
scas
xchg
and
hlt
jo
dec
enter
js
fistpl
xor
xchg
sbb
imul
mov
call
in
test
mov
repnz
inc
testb
mov
jmp
mov
jl
sub
dec
pop
fcom
sbb
dec
leave
divb
push
xchg
pop
push
outsb
cmc
sbb
in
fadds
adc
loop
xchg
and
push
or
aad
mov
dec
leave
mov
adc
notl
lret
xchg
popf
outsb
and
adc
icebp
int
outsb
and
and
inc
inc
imul
inc
jmp
mov
fnstcw
test
inc
fs
sbb
xlat
fcoms
lret
ljmp
add
inc
daa
sahf
movsl
cld
cmp
lret
mov
mull
fadd
arpl
pop
cmp
nop
inc
nop
movsb
inc
es
fxch
mov
sbb
sar
cwtl
inc
shrb
pop
pop
sub
jl
sti
lods
push
jecxz
sub
dec
insl
push
das
addr16
pop
fiadds
fwait
dec
or
gs
sbb
ret
pop
mov
pushf
les
mov
insl
dec
scas
jne
outsl
cmp
loope
inc
jecxz
testb
sahf
cmp
cmpl
adc
jae
inc
stos
sub
sub
sarb
cmc
lret
jle
adc
jl
sbb
adc
and
sub
js
dec
or
add
in
outsb
xor
jge
inc
inc
push
mov
outsb
in
scas
jge
bound
and
xchg
loope
in
push
jbe
jb
dec
or
dec
sbb
or
rclb
loopne
mov
aam
lret
xor
pop
rcrl
add
jno
bound
hlt
lock
sub
sub
inc
cmp
mov
daa
xor
bound
cmpsl
jno
xlat
or
loope
out
fisubl
insb
fsubl
inc
pop
clc
rclb
hlt
faddp
add
inc
fdivrs
mov
cs
pusha
movsb
bound
ss
mov
aam
dec
sbb
push
stos
jle
xchg
mov
and
or
test
sbb
pop
jmp
inc
or
in
pop
mov
jbe
cmp
sub
in
inc
push
out
and
pop
stc
sub
add
cmp
lret
fists
test
insb
mov
push
cwtl
pop
fisubrs
xchg
push
jb
jno
inc
adc
pop
cmpsb
and
into
verr
hlt
adc
or
pushf
sub
in
lret
xchg
xchg
jle
or
mov
inc
lcall
xchg
add
lret
lcall
sub
arpl
sub
sbb
mov
dec
test
cmpsb
fcomip
cmpb
mov
xor
repz
repz
xchg
and
pusha
imul
add
fistps
notb
incb
mov
js
fistpl
in
pop
cs
jle
cmp
in
xchg
push
or
incl
lahf
xchg
adc
add
shrb
out
hlt
pop
dec
cmpsb
and
dec
dec
xchg
loop
mov
loopne
stos
imul
push
sbb
inc
scas
xor
jecxz
popf
mov
and
adc
push
add
aad
adc
stc
std
xchg
cmp
repnz
insb
add
fdivl
push
push
inc
mov
and
cmp
fsubrs
pop
or
xchg
xchg
cli
push
and
cmpsb
mov
cmp
inc
sbbb
je
out
fsubr
pop
cmc
ficoms
int3
xchg
sub
push
test
je
out
sub
add
jge
sub
and
adc
push
daa
in
negb
in
ret
xor
push
jne
daa
add
iret
daa
ds
ja
data16
jae
repz
mov
sbb
mov
cmp
ss
std
int3
xor
jp
daa
in
das
orl
mov
mov
sarl
outsl
inc
stc
jno
adc
ja
mov
sbb
in
loop
sub
outsb
cli
stos
scas
dec
mov
int
rcr
cmpsb
enter
jle
or
js
mov
shlb
out
sarl
call
and
sub
push
xor
push
xchg
mov
xchg
mov
aam
in
sbb
es
inc
and
ret
dec
movsb
push
jle
repz
mov
scas
xor
andl
shrl
into
jmp
and
gs
jl
and
xchg
pop
and
sbb
xchg
out
xor
dec
pop
xchg
cmp
mov
mov
out
or
in
jnp
test
cs
sti
adc
ret
in
xor
hlt
mov
cmp
add
add
sbb
test
add
out
aad
inc
or
cmp
les
cmp
mov
jnp
push
xchg
xchg
mov
lds
sbb
inc
jmp
add
aas
call
adc
inc
in
repnz
cmp
adc
in
mov
pop
mov
in
or
jge
stc
cmc
inc
leave
push
jae
lahf
xchg
hlt
aad
jb
xchg
andl
hlt
push
xlat
jne
in
adc
add
pop
pop
cmp
stos
mov
arpl
pop
sahf
jae
es
lret
lahf
in
sub
lahf
jmp
hlt
jp
pop
xor
adc
lcall
pushf
fwait
cmc
and
enter
jge
imul
fcoml
mov
jne
mov
dec
push
jmp
pop
add
sub
lods
cmp
xor
mov
or
outsl
fcomp
jp
stc
cwtl
cs
sahf
dec
insl
leave
mov
andl
popf
ja
insl
call
mov
stc
lahf
inc
xchg
mov
sbb
hlt
cmp
daa
fidivrl
fnsave
xor
in
call
aas
or
inc
push
in
cmp
xorb
mov
les
cmp
inc
or
mov
hlt
inc
sub
mov
loop
mov
scas
cmp
pop
loope
push
or
rcrl
xor
imul
loop
data16
roll
mov
lcall
outsb
out
aaa
into
mov
sub
test
cmpsl
sub
stc
loop
sbb
stc
fs
sbb
sub
and
pop
dec
mov
fdivrs
in
push
adc
cltd
call
and
mov
rcll
mov
fsubs
test
sbb
adcl
and
sub
push
inc
push
fcmovu
push
cmp
aaa
cld
sbb
stc
sbb
jbe
pop
ds
fmuls
or
add
cmpsl
jl
cmp
add
loop
lock
aaa
push
dec
rcrl
xlat
mov
mov
addr16
into
jnp
leave
test
ficompl
add
adc
xor
mov
sub
in
inc
sbb
fdiv
mov
addr16
ficomps
xor
hlt
nop
adc
nop
insb
and
loope
loop
lret
addr16
adc
mov
popf
jmp
sbb
push
and
lock
ret
fwait
jge
xchg
adc
and
xor
int
lcall
dec
mov
dec
inc
cmpb
addr16
test
or
stos
pop
cmp
adc
inc
std
stos
xchg
lea
mov
add
test
jmp
ds
inc
lea
mov
jmp
jo
dec
jno
fisubs
clc
imull
add
gs
lret
dec
xor
lea
or
sub
push
jb
out
ss
pop
test
push
pop
add
lahf
mov
and
push
int3
mov
cmp
adc
mov
lock
psraw
push
insl
movsb
push
dec
mov
xor
cmpsl
mov
push
jnp
pop
lds
mov
aaa
out
xchg
sahf
sarl
or
cmp
mov
cmp
sahf
jae
jle
in
push
stos
ds
std
inc
arpl
imul
test
out
out
sub
push
repnz
test
icebp
dec
dec
push
les
sub
imul
cwtl
ds
imul
sub
mov
ja
repnz
dec
push
mov
push
mov
xchg
adc
ss
sti
push
in
inc
lods
push
lahf
dec
test
repz
loope
clc
sub
mov
daa
and
je
jmp
push
aad
mov
adc
stos
mov
adc
fs
out
xchg
xor
das
bound
add
das
jns
cltd
lea
ficoml
ljmp
fwait
out
cmp
mov
inc
mov
xchg
pop
cmp
test
push
mov
out
jmp
test
push
test
imul
icebp
loopne
jg
nop
or
add
fidivl
call
std
and
sti
lods
and
scas
dec
mov
jae
pop
and
push
fs
inc
in
popf
adc
lcall
xchg
pop
ss
incl
je
mov
sbbl
mov
inc
mov
pop
and
push
fildll
or
push
xchg
out
clc
in
pop
out
fs
lods
xchg
sbb
pop
add
xchg
orb
test
lahf
pop
loope
dec
adc
xchg
pop
clc
push
aas
adc
mov
dec
jbe
mov
mov
mov
add
mov
mov
add
cltd
dec
das
cmp
jmp
jbe
or
movsl
scas
xchg
fst
add
stos
sti
int
jnp
imull
orb
pop
mov
jbe
mov
ljmp
and
in
pop
popf
push
fxch
movsl
mov
test
ss
lock
cmc
mov
test
test
out
test
jl
inc
stos
pop
data16
dec
jecxz
xchg
js
mov
lds
arpl
mov
jns
cmp
repnz
subl
cwtl
jge
imul
xor
fcmovne
lods
repnz
imul
jns
insb
test
sub
lods
in
into
mov
outsb
push
sbb
add
gs
dec
insl
addr16
sahf
mov
pusha
fistpll
pushf
jle
sti
add
inc
fwait
es
dec
sahf
mov
xlat
cs
bound
jno
jmp
fcomps
jbe
shrb
jae
aad
iret
push
aam
jecxz
pushl
cmpsb
into
mov
pop
cld
sub
mov
das
push
in
adc
add
inc
jge
outsl
js
push
xor
imul
aaa
subb
test
mov
sub
pop
dec
pusha
or
mov
or
jbe
jge
mov
sub
ljmp
pushf
mov
pop
dec
cmpl
adc
fldcw
mov
ds
push
int
arpl
cmp
ret
loop
stos
divb
or
mov
popf
sub
data16
push
popa
pop
cld
bnd
cld
mulb
or
imul
pop
lahf
push
call
in
lock
xchg
sti
cmc
mov
lret
push
sbbb
mov
fists
frstor
pop
in
add
js
sub
in
mov
lahf
ret
adcb
dec
loopne
pop
jne
xchg
push
ss
call
lds
inc
mov
xchg
jmp
jle
sahf
aaa
pop
jb
jno
adc
dec
rcll
fisubrl
test
cmp
push
sub
mov
add
cmp
mov
inc
sti
xor
pusha
mov
mov
popf
shrl
jno
outsb
bnd
jae
jb
pop
ss
aaa
dec
push
and
jno
repz
xchg
lods
outsl
add
sbbb
xchg
adc
or
test
test
push
ret
outsb
mov
dec
push
xor
xchg
jo
sbb
sub
pop
dec
cmpl
xchg
xor
inc
push
mov
push
pop
nop
cmp
in
imul
outsb
cmp
rorb
jp
out
xor
mov
sbb
xor
rcr
aad
jnp
mov
mov
inc
lds
jl
mov
sbb
icebp
push
push
and
sbb
push
mov
mov
and
cmpsb
rcll
push
jecxz
or
fmuls
hlt
imul
andl
lret
inc
and
fwait
test
fstpl
les
pop
dec
inc
test
mov
shll
jno
xor
and
in
lods
daa
jge
lret
push
jecxz
mov
dec
faddl
ljmp
xor
ds
jo
inc
xor
jae
sub
inc
orb
push
les
ja
sti
nop
push
inc
xchg
daa
sbb
mov
mov
and
mov
jecxz
pop
inc
pop
cmp
cmpsl
adc
jnp
dec
sub
lods
icebp
and
lds
mov
daa
scas
call
clc
ljmp
rolb
enter
sub
mov
mov
adc
sub
mov
jnp
and
loope
fnsave
int3
dec
fadds
pop
lret
repnz
in
outsb
dec
stos
push
or
xor
fdivl
xor
test
sbb
scas
sub
popf
cmp
add
xchg
pop
pop
sub
push
pop
orb
lods
jg
stos
pop
mov
ret
sub
pop
pushf
fiadds
cs
les
hlt
lret
mov
adc
sub
aad
lret
cli
dec
cbtw
fildll
jno
into
imul
inc
insl
in
pop
xchg
jne
inc
mov
push
xor
fadds
sbb
jge
test
cltd
sub
sub
inc
adc
rclb
sahf
jns
aad
repz
mov
dec
fidivrs
and
mov
test
icebp
test
sbbb
or
mov
scas
jmp
popl
ss
shl
aas
daa
test
imul
and
sbb
jns
sub
sbb
push
das
popa
xor
popf
mov
or
sbb
lock
icebp
imulb
testl
xchg
fldt
mov
pop
cmpsl
pop
scas
lea
lcall
out
jmp
mov
ds
cmp
stc
jo
sar
shrl
jmp
or
scas
daa
in
sub
push
inc
sub
gs
mov
xchg
add
outsb
popa
sbb
imul
cwtl
adc
int
out
pop
neg
into
mov
cmpsl
outsl
push
shr
adc
add
lea
mov
mov
js
pop
adc
xlat
mov
pop
jns
fwait
ret
sub
test
and
lcall
cmc
jle
test
inc
into
jnp
inc
aam
mov
out
or
mov
mov
jno
dec
enter
mov
in
cwtl
call
pop
js,pt
mov
enter
sahf
in
cmpsb
bound
inc
into
xchg
scas
jmp
adcl
adc
jecxz
jp
push
or
mov
in
fbstp
xor
push
inc
lret
mov
mov
lahf
mov
lcall
sub
insl
les
mov
adc
mov
lds
andb
stos
add
adc
movsl
ret
fwait
or
xchg
adc
and
mov
xchg
adcl
xchg
or
notl
enter
xchg
sbb
lret
pop
adc
pop
mov
in
xor
xlat
jne
jbe
and
dec
test
stos
cli
pop
int
roll
aad
imul
mov
and
xchg
xor
test
xchg
push
scas
mov
push
pop
or
lds
mov
push
and
pop
xchg
in
clc
adc
jp
shrl
mov
movsbl
push
popl
sarb
cmc
mov
push
or
jb
adc
sti
cmp
xchg
popa
xchg
pop
dec
mov
add
push
mov
mov
ret
pop
mov
ja
notb
sub
leave
jge
lds
aas
ja
lcall
or
or
or
add
pop
push
shlb
inc
pop
adc
aad
inc
aaa
pop
mov
xchg
stos
roll
cmp
push
insl
std
loop
arpl
cs
xchg
and
add
decb
stc
mov
aad
js
clc
lods
xor
mov
int3
into
xchg
mov
xchg
aas
mov
pop
jne
rep
sub
stos
mov
ljmp
adc
or
lret
add
outsl
adc
loop
dec
cli
push
sti
dec
test
icebp
clc
mov
xchg
xor
mov
or
test
ss
pushf
sub
test
shl
nop
or
pop
mov
scas
push
aas
push
in
icebp
jge
aas
jb
pop
pop
inc
pop
stc
mov
aam
mov
popf
into
cli
fstp
pop
adc
adc
cld
pop
fists
mov
sbb
aad
out
rolb
dec
inc
mov
dec
mov
xchg
jno
aad
ror
dec
movsl
push
mov
shl
xor
daa
fcomp
add
es
out
movsb
xchg
outsb
inc
cmp
dec
out
scas
adc
test
lds
gs
xchg
testb
mov
mov
and
movsb
or
or
cmp
stc
pop
inc
mov
pop
imul
ljmp
hlt
loop
dec
push
popa
decb
idivb
mov
inc
inc
lret
ljmp
popa
push
cmc
std
lret
aad
scas
cmpsb
pop
lds
outsl
addr16
popa
push
sub
ja
cmp
sbb
or
cmp
lret
lods
lahf
ret
addr16
adc
out
inc
and
cmp
and
cld
dec
dec
movsl
xor
das
lods
fisttpl
int3
sbb
insb
scas
jp
mov
or
push
leave
dec
insb
or
gs
mov
or
mov
pop
cs
gs
mov
push
cmp
adc
mov
outsb
mov
mov
repnz
sbb
xchg
daa
mov
jo
sbb
outsb
je
ljmp
push
or
cmpsl
shll
xchg
stos
add
cmp
dec
xchg
out
test
out
push
movsl
dec
inc
enter
xchg
fst
testl
cmpsl
fsubs
rcl
call
lods
jbe
adc
imul
dec
dec
add
push
ljmp
nop
push
pop
out
sub
insl
cmp
and
movnti
lods
test
or
shlb
dec
subb
jne
js
mov
dec
test
dec
pop
mov
and
mov
dec
ja
lds
std
inc
addr16
or
sbb
add
mov
mov
hlt
out
xlat
lahf
mov
xor
rclb
rolb
sub
jb
or
adc
jae,pt
shll
dec
popf
loope
test
aad
fimuls
hlt
and
mov
push
pop
adc
push
sbb
pop
mov
loopne
fldenv
sub
push
js
dec
fnsave
mov
int3
sbb
outsl
enter
mov
xchg
pop
xchg
sbb
cmpsl
mov
xor
push
or
mov
and
imul
inc
dec
movsl
dec
jo
mov
pop
mov
fs
jno
xchg
inc
adc
in
sti
mov
out
lea
gs
sub
and
outsl
xchg
lock
or
push
cld
int3
add
dec
xor
popf
outsb
or
aad
bound
cmpsl
test
pushf
xchg
hlt
push
outsl
mov
pop
cmc
movsb
repz
bound
xchg
xchg
rcll
jne
gs
push
push
mov
sub
push
mov
jmp
rcrl
adc
mov
and
sbb
jo
push
pushf
xchg
inc
mov
xchg
scas
es
fsubs
in
ja
mov
push
and
loop
cmp
shll
pop
fdivr
jmp
sti
mov
fidivl
pushf
es
into
js
roll
mov
fcomi
cli
fdivr
jmp
pop
xor
je
dec
sbbb
push
cmpsl
stos
xor
add
or
jae
js
mov
mov
shll
lods
loop
gs
out
xchg
enter
push
int
adc
in
ja
mov
and
hlt
movsl
dec
out
ret
mov
stc
movsb
jne
not
addr16
xchg
push
add
andb
mov
jecxz
lock
loopne
out
sbb
pop
dec
or
repnz
aad
mov
mov
xor
adc
adc
cmpsl
xor
or
out
or
sahf
mov
lret
cmpb
imul
inc
decl
push
inc
loopne
addr16
or
pop
push
loopne
outsl
roll
push
and
inc
aaa
orb
jg
sbb
lods
in
stos
movsb
aaa
popa
lods
cli
and
cmp
mov
mov
scas
xor
sub
fwait
xlat
mov
scas
negl
push
mov
loop
mov
cmp
repz
dec
cmp
inc
and
sbb
fidivl
dec
arpl
inc
enter
cmp
outsb
lds
pop
inc
mov
sub
xor
aad
or
lea
rcrl
ja
test
icebp
add
jl
sbb
clc
mov
stos
adcl
movsb
js
clc
and
shlb
aad
insb
xor
sub
pop
adc
out
lahf
rclb
scas
add
dec
fbstp
mov
jbe
add
and
rcll
cmp
lcall
jl
movsb
fmull
sbb
fcmovb
dec
xchg
icebp
cmp
movsb
xchg
jmp
scas
push
add
or
cli
mov
mov
xchg
cmp
pop
cmp
jns
mov
stos
fisttpl
arpl
jo
jg
mov
push
xchg
sbb
lret
and
inc
jne
cmp
inc
ja
test
call
and
test
or
shr
push
lock
sbb
lods
scas
add
not
jb
pop
hlt
insb
pop
insb
cmp
adc
add
add
xchg
and
cmc
dec
lds
cmp
std
lea
cmp
pop
sbb
push
ret
jmp
in
xchg
loope
push
pop
sar
mov
rcll
jne
shll
repz
push
andl
mov
loopne
mov
mov
int
mov
mov
mov
mov
dec
ret
nop
ret
dec
test
out
jmp
stc
fmul
and
cmp
mov
add
stos
xlat
jno
pop
pop
inc
sbb
pop
pop
cmp
push
aaa
loop
push
arpl
pushf
xor
add
sbb
or
sbb
xchg
scas
xor
enter
cmp
sub
ret
fcmovnbe
or
int3
pushl
dec
sbb
popf
mov
inc
jecxz
xor
lock
mov
jl
mov
xor
dec
xchg
dec
imul
addr16
mov
adc
enter
out
push
sar
push
pop
jmp
js
xor
in
sub
inc
sub
ret
dec
sub
push
hlt
dec
gs
dec
mov
pop
jnp
pop
push
add
stos
vmulss
jne
out
cmp
ja
sub
rcrl
push
fwait
mov
rorl
push
mov
sbb
xchg
adc
push
popl
icebp
jae
dec
jge
lods
aad
cmp
loope
inc
mov
inc
fsubrp
fs
xchg
clc
sti
inc
inc
xchg
and
jae
js
lret
pop
push
pushl
pop
cmp
sub
push
xchg
cmpb
pop
repz
adc
test
out
aas
add
dec
daa
flds
sbb
add
popa
imul
test
adc
inc
xchg
adc
inc
and
xor
nop
xor
mov
out
xchg
rclb
push
mov
add
jne
xor
lcall
and
cld
sbb
cld
cwtl
shrl
aad
dec
xor
stos
lods
pop
xchg
push
cmp
sqrtps
or
cmp
imul
adc
or
cs
cmp
loop
mov
mov
push
mov
add
cmp
pop
adc
pop
sub
pop
mov
mov
xchg
fdivrl
fmul
mov
mov
scas
add
leave
hlt
dec
in
in
faddl
sub
push
ret
push
mov
jb
xchg
jns
lcall
mov
pop
test
ljmp
add
in
cmpb
gs
pop
lds
inc
fdivp
cmp
int
lret
stos
cmp
push
xor
jge
test
stos
xchg
and
push
xchg
sahf
je
xchg
pop
pop
pop
jmp
out
icebp
fnstcw
inc
push
mov
mov
fs
iret
or
pop
push
mov
adc
add
arpl
push
lock
mov
xor
xchg
pop
and
pushf
loopne
sub
mov
test
add
in
cmp
mov
outsl
or
loop
push
xor
nop
pop
or
notb
push
idivb
adc
pop
xor
sub
inc
sbb
mov
jno
mov
repz
loope
jmp
jle
sub
jp
shl
jecxz
lods
out
icebp
cmc
push
or
in
xchg
in
aas
xor
xor
nop
mov
enter
lods
adc
in
dec
mov
out
sbb
pop
push
movsb
sbb
mov
sbbb
xchg
arpl
cmp
bound
out
mov
in
popf
jl
mov
xchg
xor
out
iret
pushf
and
cwtl
sub
inc
push
cs
xor
js
xor
aad
int3
rcl
data16
test
out
aas
push
or
std
cmp
lcall
pop
in
mov
cmpl
mov
das
and
jae
dec
lret
fdivl
xchg
aam
pop
pushl
mov
ljmp
push
js
je
inc
iret
add
idivl
push
mov
std
out
or
mov
aas
int3
jp
xchg
adc
sbb
jb
daa
sti
push
mov
xor
cmp
out
cmc
jno
mov
movsl
in
push
fcomi
mov
ds
lahf
xor
push
jno
push
sbb
lods
mov
stos
ljmp
pop
mov
setb
cwtl
dec
add
xor
push
lahf
decb
das
dec
or
pop
inc
or
mov
pop
xchg
sub
lea
stc
movsl
jae
test
sbb
sub
adc
cmp
imul
push
scas
push
cmp
cltd
push
sbb
and
sbb
pushl
insb
jge
adc
or
mov
mov
xchg
mov
push
in
xchg
adc
daa
fildl
fldz
mov
stc
pusha
and
mov
push
nop
add
stos
les
mov
push
filds
jmp
xchg
mov
mov
inc
lret
std
jmp
fisttps
add
push
xlat
sarl
aad
outsl
xor
outsl
std
mov
add
popa
pop
fwait
mov
add
scas
xor
mov
outsl
and
test
xor
js
push
cmp
add
or
es
jge
sbb
lods
and
cmp
aam
notl
push
dec
test
out
push
rcll
test
pop
out
lret
sti
imul
mov
arpl
cmp
dec
aas
jg
movb
sub
fwait
int3
and
sub
addr16
jp
xor
and
sbbb
fadd
bound
push
sbb
mov
iret
cmp
std
mov
cmp
fisubrs
adc
insb
scas
or
dec
xchg
mov
fdivrl
mov
xor
orl
into
sti
xor
push
test
fstpt
repz
sbb
cmp
dec
jmp
fdivrp
sbb
cmc
push
pop
test
ret
daa
inc
fldenv
jne
dec
adc
lahf
push
cmpsl
and
lods
gs
jae
sub
addr16
shll
mov
or
repnz
inc
adc
call
sbb
inc
xchg
xchg
mov
bound
addr16
jecxz
mov
iret
dec
lods
flds
push
das
iret
cmp
xlat
fidivl
in
add
cli
pop
inc
enter
mov
add
push
jge
or
jbe
dec
in
mov
push
add
rorb
in
lret
sub
dec
pop
les
pop
xor
or
hlt
ljmp
push
rclb
gs
test
mov
or
ror
dec
mov
call
sub
xor
pop
scas
test
fnsave
pop
or
xchg
jo
outsl
das
lahf
mov
xor
call
dec
imul
cmp
leave
aaa
out
push
scas
mov
and
jmp
out
stc
pop
cmp
dec
inc
ljmp
cmpl
bnd
jge
cmpsl
mov
mov
add
inc
push
in
dec
fiaddl
data16
jl
adc
mov
rcrb
movsb
jge
outsb
aad
push
and
pop
add
sahf
js
sbb
leave
lods
outsb
or
dec
mov
xchg
cmpb
and
xchg
fidivrs
stos
or
cmpsl
orb
inc
sub
mov
bnd
jge
cmpsl
jp
stos
cmp
popf
lods
push
mov
in
jns
out
dec
dec
xchg
sub
pop
mov
test
push
outsl
sub
icebp
mov
mov
xor
xor
jge
mov
scas
enter
adc
idivb
movsl
pushf
daa
sti
fs
mov
mov
popf
dec
dec
ror
lcall
xor
push
push
fldt
das
lods
inc
test
adc
adc
subl
push
nop
xor
pop
outsl
mov
lcall
std
aaa
icebp
sbbl
dec
scas
inc
mov
cmpsl
xor
pop
test
xor
popa
jl
int3
das
insl
sti
push
and
and
xchg
mov
push
adc
int
fnstsw
mov
std
mov
inc
pop
movsb
sbb
dec
add
repz
push
cwtl
in
mov
test
xchg
icebp
cmpb
cli
sbbb
popf
cmc
mov
sbb
xchg
add
jnp
xchg
dec
mov
xchg
fnsave
fistpll
inc
inc
daa
test
fiaddl
mov
push
shr
add
jmp
sbb
sub
and
mov
pop
divb
imul
sbb
inc
inc
pusha
out
pop
outsb
sti
mov
fucomip
dec
js
jp
push
lret
mov
dec
cmc
pop
jl
into
call
loope
jl
sahf
popaw
cmc
fistpl
inc
stos
int3
insl
test
fwait
cmp
repz
in
push
or
in
mov
xchg
xchg
pushf
dec
mov
lock
jbe
mov
adc
mov
arpl
sub
add
ret
mov
adc
push
sbb
xor
push
mov
push
ja
jl
mov
sub
jb
xlat
push
jg
cmc
cmp
adc
popa
xchg
popa
ja
add
iret
lahf
inc
cmp
xor
ret
xchg
aas
sti
setle
jge
cli
mov
mov
push
pop
or
push
sub
jb
daa
mov
and
jg
jae
sbb
xchg
push
pop
xor
and
mov
ja
cmp
push
lods
adc
jge
inc
lcall
insb
adc
insl
lret
mov
xor
inc
inc
shrl
push
in
je
add
data16
fmull
xor
shr
aas
dec
xchg
pusha
and
push
adcl
cmp
lea
mov
pop
jl
xchg
pop
dec
inc
int3
pop
mov
push
inc
cltd
or
xchg
subb
push
js
std
pop
scas
jl
daa
imul
sub
jl
sub
je
jne
shll
and
xor
ja
sbb
out
aas
pop
pop
leave
add
sbb
loop
cmpsl
inc
xor
add
jg
rolb
mov
sub
xor
sbb
and
jp
pop
inc
pop
dec
test
leave
xchg
xor
fwait
pop
add
pop
and
lret
cmpsb
lcall
stc
jg
clc
lret
inc
xor
xchg
xorb
pushf
or
sbb
sub
pop
hlt
xchg
mov
push
fstpl
outsb
dec
jg
push
je
and
sub
cmp
xor
cmp
outsl
adc
lods
and
xor
in
jnp
mov
shll
jnp
sbb
jl
das
scas
xorl
mov
inc
bound
xlat
scas
cmp
outsl
mov
mov
cmp
shll
out
jae
add
ja
scas
mov
arpl
mov
cmp
arpl
rol
mov
std
push
add
cmp
gs
fnstenv
cmc
lret
push
cmp
jb
imul
sbbl
sbb
push
out
jbe
xchg
xor
dec
insl
xchg
inc
add
pop
pushf
fsubrl
jnp
jecxz
popf
lods
nop
faddp
jl
lea
mov
mov
sbb
add
test
ret
inc
das
into
int
in
mov
rorb
mov
push
iret
jp
mov
push
xor
imul
pop
ja
jp
dec
sbbl
icebp
call
mov
out
or
les
xor
cmpsl
inc
xorb
mov
mov
sub
mov
mov
dec
mov
jo
and
mov
addr16
xor
and
jb
pop
cld
int
or
or
push
or
jbe
mov
cmp
es
cs
xchg
mov
lods
adc
cmp
rorl
repz
jb
loope
mov
push
in
movsb
dec
lcall
in
shll
mov
pushf
lods
and
mov
push
mov
cmp
gs
loopne
fwait
or
add
cmp
cmp
movsb
xchg
dec
push
das
xchg
add
dec
cmp
mov
push
dec
stc
adc
xchg
lock
push
jns
imul
lcall
mov
mov
jno
fcoml
xor
mov
push
test
dec
xchg
sahf
icebp
adc
aas
push
iret
xchg
fimuls
push
sbb
xor
or
call
cmp
loop
or
jno
sbb
ret
sahf
sbb
and
jge
and
lret
mov
xchg
div
and
sub
rcl
jae
sbb
insb
repnz
inc
xchg
xor
xchg
fildll
adc
push
pop
insl
adc
or
cmc
js
loopne
xor
jl
cs
dec
xor
push
cmp
add
icebp
xchg
adc
insl
insb
int3
push
jno
movsl
popf
push
fistl
movsl
ljmp
mov
loope
sub
cli
sbb
insl
add
orb
sub
shlb
gs
in
dec
jnp
imul
jle
pop
sbb
and
jno
push
in
mov
mov
add
pop
adc
or
dec
xlat
mov
cmp
jns
in
and
and
pop
xor
jae
rcrl
or
xchg
cmp
dec
push
fisubl
cmp
pop
ret
or
ss
jp
lds
sbb
shrl
into
std
es
mov
and
pusha
sub
inc
pop
dec
add
inc
pushf
bound
dec
sub
loopne
pusha
mov
outsb
fidivrl
xchg
sbb
vmread
test
test
cmp
clc
in
push
inc
out
mov
inc
lods
repz
jg
test
pop
mov
repz
repnz
je
sub
xchg
shrl
pusha
or
and
jmp
dec
mov
xor
dec
addl
int
mov
aam
mov
pop
imul
push
push
mov
out
push
pop
push
jmp
dec
fidivl
xchg
in
outsb
mov
or
loop
mov
pop
lods
mov
bound
in
lcall
sbb
mov
mov
fsubs
dec
push
jae
cmpl
jnp
cli
inc
insb
aad
xor
xchg
es
mov
adc
lea
subl
sbb
mov
scas
test
jl
xchg
lret
out
mov
gs
daa
sbbb
data16
add
imul
insb
lds
mov
push
add
xchg
or
push
xor
xchg
jmp
and
inc
push
daa
push
adc
mov
jno
in
dec
dec
jecxz
pop
imul
scas
insl
clc
lods
sti
xchg
pop
inc
jne
cmp
pop
or
jae
orl
jb
add
mov
adc
cld
shll
inc
and
mov
push
jno
popa
xchg
jmp
push
jo
andb
aam
push
adc
psllw
sub
pop
mov
mov
cli
fs
pusha
sbb
mov
lret
mov
fldt
ret
stc
push
sub
ret
in
fdivr
xchg
ss
int
mov
mov
test
dec
rorl
add
inc
cmpsb
pop
inc
repnz
mov
push
out
and
xchg
jns
xor
xchg
jmp
pop
andl
cmp
add
je
nop
xchg
adc
sub
lahf
loop
xor
xor
test
jg
sbb
push
xchg
push
and
sbb
aad
stc
aam
repz
cmp
xchg
dec
add
pop
cmp
setge
adc
sbb
sbb
sbb
cmp
insl
lcall
clc
arpl
pop
stc
add
cmp
add
in
sbb
lea
push
int
xor
fdivl
mov
sbb
clc
and
addr16
scas
pop
inc
push
mov
movsb
out
int
movl
sub
sarb
fstl
mov
je
jne
push
xchg
xor
insb
pop
push
inc
add
xlat
testb
test
and
ficomps
adc
inc
std
push
ret
jle
push
ret
repz
push
jns
das
dec
xor
leave
pop
mull
std
sbb
divps
je
xor
sbb
xchg
rolb
rol
call
lcall
int
daa
ret
mov
fsts
sub
fadds
inc
mov
lods
mov
jnp
clc
and
ret
jne
mov
add
mov
mov
and
inc
and
iret
jp
or
jns
mov
je
jns
in
inc
popa
bound
out
sub
cli
test
pop
out
inc
xchg
inc
lock
xchg
mulb
gs
jle
sbb
jmp
sub
outsb
fwait
leave
push
and
repz
mov
cwtl
shlb
push
sbb
add
stc
jmp
cmp
jns
mov
cwtl
call
push
mov
inc
or
movsl
dec
xchg
pop
addr16
popf
xor
cmpsl
pop
gs
mov
xchg
movsl
ficompl
int
mov
lds
or
and
mov
adc
ja
add
hlt
aas
mov
fs
test
fstl
cmpsl
lods
shr
cwtl
mov
insl
mov
insb
nop
xor
fsubl
hlt
fsincos
int
mov
push
sub
xlat
xchg
sub
shrl
sub
subl
test
inc
sub
hlt
or
mov
dec
shlb
fstps
ret
xor
je
test
sarl
icebp
sbb
xor
movsb
fs
aam
mul
and
xchg
pop
lahf
insb
in
repz
inc
ja
mov
push
inc
incb
jecxz
bound
lock
mov
add
pop
out
push
dec
and
mov
movsb
xor
push
lea
mov
daa
cmp
jnp
inc
or
xchg
add
sub
jbe
pop
fwait
es
bound
pushf
loop
add
dec
mov
cmp
pop
fsubrp
mov
sub
adcl
movsb
sbb
mov
mov
jg
sub
cmp
mov
pop
ja
imul
push
lahf
loope
lds
push
jg
add
adc
push
lods
inc
fwait
lret
adc
out
mov
test
mov
jg
hlt
fwait
in
cmp
push
xchg
movsl
arpl
in
or
pushf
in
test
icebp
or
pop
mov
shll
dec
jle
scas
lcall
out
xchg
out
xor
sub
andb
sub
pop
adc
push
xorl
mov
daa
adc
push
sub
adc
add
dec
adc
push
fadds
push
fxch
cli
push
or
mov
push
int3
idivl
adc
sbb
popf
aam
repnz
call
pop
dec
jns
es
fidivs
sub
arpl
push
dec
enter
cmp
lret
sbb
std
jbe
dec
sub
cmp
or
dec
shll
rcrl
mull
or
jne
outsl
jbe
mov
ds
aas
jle
test
fsubs
ja
pop
daa
stos
adc
or
sub
sub
cld
aaa
pop
mov
test
mov
leave
fdivrp
or
pop
jp
jmp
lahf
into
push
mov
fidivs
push
test
sub
add
popa
jne
cmp
push
stc
or
std
dec
popf
out
inc
cmp
push
ds
pop
pop
sbb
mov
or
jge
rcll
mov
jp
cmp
mov
cmc
movsl
xchg
js
jnp
mov
movsl
push
push
mov
mov
pop
pop
adc
push
insl
mov
repnz
xor
bound
or
push
and
fcmovbe
cs
jo
mov
enter
push
mov
cmpsb
add
mov
cmpsl
out
test
mov
arpl
inc
dec
ss
cwtl
in
insl
adc
adc
or
xchg
outsl
out
adc
mov
fmull
mov
iret
pushf
push
xchg
dec
aas
mov
movsl
inc
pop
stc
cmp
mov
pandn
inc
pushf
adcb
aad
aas
pop
jae
add
xchg
sub
test
or
stos
gs
jb
jnp
ret
xlat
and
fistps
push
mov
ret
xchg
js
les
xlat
aad
pusha
fs
sub
pop
mov
sbb
adc
icebp
push
pop
leave
shr
stos
enter
lcall
jae
cmp
out
subl
jne
in
dec
sub
sbb
jno
cmp
mov
imul
push
mov
icebp
dec
imul
mov
ret
adc
int3
imul
cmp
insb
lock
fidivl
inc
movsl
aas
dec
sbb
movsb
gs
mov
inc
or
mov
dec
fdivs
mov
fisttps
rolb
cli
sti
cmp
mov
sahf
icebp
mov
cltd
add
testl
fisttps
mov
adc
jno
stc
icebp
cmp
adc
mov
jb
adc
inc
jl
pop
xlat
cmpsb
mov
cli
push
jecxz
xchg
jno
lret
lods
and
scas
lret
sbb
insb
nop
fmull
fcoms
push
push
mov
int
mov
jle
cmpsl
dec
jb
mov
out
mov
add
mov
pusha
ja
repz
add
jne
hlt
cmpsl
add
stc
jl
lods
insb
mov
mov
in
pop
fbld
fsubs
push
in
test
or
test
outsl
push
adc
adc
cmpsb
cltd
pop
pusha
jmp
mov
call
sbb
mov
sbb
mov
les
jns
imul
push
sbb
sar
pop
mov
test
pop
imul
xchg
test
addr16
inc
jle
mov
cmpb
das
inc
jmp
pushf
negl
jb
rorl
call
mov
ja
mov
xchg
and
js
xor
sub
pop
in
mov
inc
xlat
sbb
test
sub
loop
ds
addb
xorb
xchg
je
jbe
add
repz
cmpsb
sub
out
stos
call
fldl
mov
pop
lret
jp
jl
adc
cmpsb
mov
js
clc
jecxz
fcoml
adc
jbe
mov
inc
in
push
insb
lcall
nop
in
adc
xor
scas
jp
test
push
lahf
outsb
aas
testl
incb
in
mov
rorb
aas
imul
add
rolb
fucomip
jle
adc
cwtl
lcall
imull
or
dec
subl
into
mov
popf
sbb
outsl
stos
jae
mov
pop
pop
int3
add
xchg
dec
out
jmp
fwait
in
das
inc
in
ja
hlt
loopne
xor
hlt
mov
out
clc
or
in
adc
lret
shlb
xor
mov
arpl
inc
scas
mov
movsl
ja
ret
mov
mov
xchg
cmp
jmp
bound
sbb
mov
call
sti
jo
bswap
test
mov
and
dec
xlat
or
icebp
xor
mov
mov
test
inc
insb
fwait
jecxz
in
pop
pop
mov
xor
gs
or
sbb
and
xor
pusha
cmp
repz
bound
mov
inc
dec
popf
lods
mov
dec
add
adc
sbb
out
mov
mov
and
mov
inc
mov
sbb
cmc
je
out
or
cmp
add
sub
mov
push
or
daa
stos
out
les
mov
cmpsb
dec
cmp
mov
filds
hlt
cmp
loop
fs
cmp
lret
jg
push
ret
mov
push
aaa
adc
or
data16
filds
pop
aaa
mov
mov
push
repnz
call
sub
je
xlat
dec
pop
in
dec
ret
inc
imull
sbb
jge
jb
cmp
loope
lock
pusha
cld
adc
jl
shrb
lcall
sbb
rcl
jne
movsl
cmp
lcall
sub
adc
insb
cmpsb
xchg
fmull
add
outsb
and
or
pushf
dec
cld
xchg
jecxz
in
dec
inc
xchg
ret
pop
inc
xor
sbb
jge
xchg
lea
xor
cmp
leave
fwait
cltd
xchg
mov
ljmp
fcompl
loop
mov
pop
into
aaa
rcll
push
cltd
repz
jge
push
mov
fildl
pop
inc
rcl
xchg
dec
repz
fsubr
sub
jle
fcompl
or
jo
idivb
shrl
loop
adc
in
sbb
clc
loop
out
inc
add
inc
xchg
enter
outsb
sbbb
or
cmpl
cmc
xorl
xchg
stc
sti
out
out
jg
cmp
mov
or
mov
imul
bound
or
inc
lret
dec
call
mov
mov
rol
mov
adc
lret
fs
ss
pop
sbb
mov
movsl
mov
aas
add
and
aas
cmp
stc
ja
aam
jb
test
out
jl
adc
adc
call
loope
pop
xor
add
xlat
cwtl
inc
sub
inc
icebp
mov
out
rcrb
pop
imul
inc
loop
dec
mov
dec
repnz
movb
test
rep
or
adc
sub
xchg
test
sbb
fsubrl
fnsave
add
aaa
jno
sbb
stos
in
mov
add
mov
scas
xchg
push
jecxz
addr16
lea
nop
wrmsr
ret
lret
hlt
in
and
movsb
sub
rcrb
out
xchg
test
push
pop
push
xor
jge
push
pop
xchg
jb
insb
movsl
cmp
lea
mov
or
add
add
or
stc
xor
lcall
lock
push
in
mov
mov
push
cmpsb
das
and
int
mov
pop
sbb
gs
lock
aas
or
loope
into
adc
addb
pop
jl
sbbb
xor
xor
cmp
subb
sbb
push
mov
shlb
sub
popa
stos
rcrb
jnp
mov
sbb
cmpsb
mov
pop
xlat
ret
fsubr
mov
dec
or
inc
fistpl
jp
cltd
inc
in
ljmp
push
add
fdivr
cwtl
push
or
xor
pop
jg
js
cmp
mov
cmc
pushf
mov
jo
out
inc
lock
lock
cli
mov
sub
fadd
je
repnz
rcrb
iret
dec
fdivl
in
fstpt
sub
scas
shlb
xor
mov
adc
sub
pop
pop
jle
fmul
xchg
mov
jmp
ss
xchg
pop
mov
sub
sub
ss
mov
xor
sbb
mov
sub
daa
mov
adc
dec
aad
orb
pop
ret
inc
lock
movsl
clc
dec
int3
mov
jl
lahf
inc
xor
testl
lock
or
addr16
push
add
jae
mov
movsl
pop
sbb
outsl
jmp
push
lods
cltd
gs
and
shlb
clc
adc
add
cmp
and
ds
ret
push
jno
dec
dec
cltd
lods
mov
xchg
jbe
mov
popa
into
fisubs
cmp
pop
and
fstpl
or
fbstp
push
pop
mov
mov
xchg
dec
lret
cmc
and
xor
inc
cmp
movb
fmull
mov
call
js
orb
pop
adc
out
jge
int3
dec
mov
shrl
inc
lcall
pop
xlat
das
cmc
cmp
add
dec
cmp
xor
imul
push
js
push
fldl
into
push
lods
outsl
push
into
xor
xor
call
mov
xchg
bound
sub
add
in
out
ret
sti
xor
scas
add
orb
mov
push
int3
xor
inc
cltd
imul
mov
push
xchg
mov
push
mov
mov
and
sub
icebp
aad
stos
aad
sbb
repnz
icebp
inc
push
rcrb
jbe,pt
mov
cmpsb
psrad
les
add
xor
loope
jg
insl
pop
sub
xor
sub
lret
add
dec
jmp
push
insb
fmull
mov
mov
cld
and
xor
jno
daa
pop
lret
outsb
jns
ror
cltd
or
mov
jns
inc
jge
inc
and
aas
lods
hlt
jb
pop
sbb
ret
xor
shlb
pop
sti
sbb
xchg
and
aaa
jns
data16
dec
mov
push
xchg
dec
mov
lods
mov
ret
add
push
fistpl
stc
pushf
rolb
dec
add
mov
dec
jge
fwait
push
jno
stos
pop
inc
cs
mov
mov
and
mov
xor
adc
sbb
outsb
pop
in
dec
inc
stos
bound
xchg
xchg
jge
cli
mov
rclb
pop
jne
cmpb
ja,pt
dec
iret
xor
cmp
pop
pusha
icebp
jecxz
cmp
jne
jge
out
insl
andb
loopne
xchg
in
inc
ret
sub
pop
push
lds
mov
fildl
adc
mov
push
repnz
xacquire
mov
pop
dec
shr
iret
and
add
repnz
pop
orl
mov
and
push
sub
cli
ret
imul
outsl
out
movsl
push
lret
outsb
out
xor
sub
sbb
mov
imul
rol
fsubrs
sbb
in
cmpsb
adcl
fdivl
xor
outsl
lods
inc
add
gs
dec
fs
mov
add
xchg
push
pop
pop
sub
test
test
xorl
lcall
pop
adc
dec
adc
adc
rorl
ja
out
mov
jle
movsb
mov
pop
enter
imul
push
je
mov
cmp
test
sub
dec
imul
fisubrs
addr16
clc
push
sahf
mov
inc
lea
pop
imul
add
dec
enter
inc
movb
xor
dec
adc
les
jl
jns
push
push
jmp
and
jbe
cmp
lock
push
shrl
call
bound
in
pop
int3
jns
ja
test
jno
add
mov
sbbl
adc
adc
fistpll
test
stos
jle
xchg
xchg
xchg
scas
into
jbe
subb
leave
jmp
jnp
fimuls
xchg
or
push
mov
dec
xchg
jl
test
leave
lods
adc
jge
mull
sub
jg
cmpsb
test
mov
xchg
pop
sub
jle
fisubl
addl
mov
cmpsl
mov
jno
loop
ljmp
sti
clc
test
pop
cwtl
decl
outsb
or
sub
aas
xchg
push
xchg
sub
popa
popf
sbb
mov
js
push
lcall
je
sbb
ljmp
push
add
pop
pop
lods
insl
out
jge
nop
inc
cmp
repnz
cld
mov
pop
repnz
jl
cs
shrb
dec
pop
outsl
jo
jmp
testl
in
push
mov
jmp
ret
imul
popa
jl
push
jg
stos
push
in
das
xchg
cmp
outsb
bound
leave
xor
scas
iret
fwait
jmp
lahf
es
add
jns
mull
mov
mov
xchg
mov
add
and
inc
sti
test
jae
cwtl
add
roll
pushf
pop
nop
in
lods
mov
stos
or
mov
push
cmp
add
int
mov
test
adc
adc
cltd
out
sbb
pop
cmc
mov
xlat
jmp
fisttps
lods
dec
pop
pusha
add
and
lea
not
pushf
inc
dec
imul
xor
inc
pop
inc
jle
and
or
in
scas
dec
push
push
jns
repz
loop
sub
jnp
sti
scas
dec
mov
loopne
sub
mov
cmpl
push
push
fldenv
mov
mov
cmp
jle
aaa
mov
cmp
jecxz
jns
mov
test
bound
ret
out
mov
pop
push
jbe
push
rorl
mov
pop
test
mov
outsl
add
aad
or
call
hlt
jb
inc
in
adc
mov
xchg
repnz
inc
push
aam
dec
mov
out
aam
mull
adcl
jb
mov
xchg
pop
dec
pop
jmp
mov
mov
dec
inc
mov
lods
pop
fimuls
out
jne
lcall
ds
adc
jo
jmp
sub
push
divl
mov
daa
ljmp
mov
jns
enter
into
data16
mov
lods
das
ds
aam
push
mov
jge
faddl
inc
cltd
cmpxchg
sbb
sub
xchg
scas
xor
mov
inc
mov
dec
push
xor
je
dec
rcr
sahf
and
in
outsb
jb
jne
data16
movsl
add
rcll
fwait
push
gs
in
loopne
mov
popa
lret
or
gs
push
pop
and
mov
jge
adc
les
xor
hlt
xor
dec
inc
rep
fistl
dec
dec
mov
and
mov
mov
stos
loopne
insl
or
ljmp
loop
data16
push
mov
fldt
jecxz
sub
sbb
add
ds
jecxz
int3
cld
test
out
sub
push
jae
jmp
mov
lock
push
insb
sahf
jae
xor
sbb
fs
mov
daa
mov
sbb
dec
cmc
and
inc
xchg
cwtl
jg
mov
lock
sbb
push
jl
pop
push
outsl
in
das
int3
out
lea
jmp
frstor
mov
sar
xor
inc
sbbl
movsb
rcrl
sub
push
fwait
or
incb
scas
push
and
lret
sbb
push
cmpsl
xchg
outsb
imull
popf
mov
call
jp
lcall
in
xchg
popf
mov
jge
fldenv
mov
add
xchg
pop
xor
mov
pop
and
xor
jl
or
cmp
ret
out
mov
test
pop
lcall
or
cmpsb
lods
xor
mov
jo
cmp
push
mov
add
fs
arpl
je
cli
xchg
out
hlt
cld
movsl
out
sbb
mov
cli
pushf
sub
sti
adc
sbb
push
imul
mov
mov
and
inc
push
inc
inc
scas
stc
stc
xchg
movsb
call
shr
test
int3
cli
mov
fucom
shrl
mov
popf
insb
dec
in
sub
jb
sub
and
jp
push
cli
movsl
jl,pt
bound
jg
fsubr
add
loopne
xchg
xchg
pop
arpl
mov
jbe
xchg
pop
lahf
push
outsb
insl
xchg
cmp
inc
loop
add
pop
adc
dec
add
xor
rorb
pop
movsb
or
xchg
cld
mov
negb
in
add
pop
cmpb
bound
sbb
int3
lods
stos
aaa
push
and
movsl
and
dec
mov
fcmovbe
std
push
sahf
lahf
dec
cmp
cmp
mov
decb
adc
inc
inc
jno
mov
mov
xchg
jmp
sbb
add
lock
fcom
je
jge
push
loope
fs
loope
test
lds
dec
cmpsl
jmp
jns
xchg
mov
dec
lods
dec
or
mov
pop
incb
cld
pop
pushl
int3
shll
jg
and
push
or
add
out
andl
add
or
mov
rcrl
cmp
push
sbb
push
aaa
add
xchg
mov
out
mov
adc
rcll
dec
jno
dec
jnp
out
jne
pop
jns
push
mov
clc
xchg
std
icebp
scas
xor
and
mov
stos
lds
jmp
dec
pop
cli
adc
push
pusha
adc
and
mov
xlat
or
notl
dec
iret
lods
mov
inc
sub
leave
out
sbbl
andb
pop
inc
pop
imulb
xchg
push
enter
cli
cmp
dec
sub
int3
in
dec
mov
and
jno
rol
sbb
pop
pop
ret
lret
sbb
gs
out
mov
js
pushf
aaa
mov
mov
jl
cmp
mov
fiaddl
adc
sub
pop
aam
daa
rcll
cmpsb
scas
pop
push
push
and
xchg
inc
or
repnz
jmp
pop
repz
xchg
fistps
shrb
xor
loope
push
dec
or
cmp
rolb
shlb
test
sbb
xor
pop
sti
mov
out
sub
xor
sbb
cmp
frstor
jbe
movsb
jnp
push
xchg
jl
push
jle
ds
fisubl
jne
mov
and
xor
mov
pop
or
xor
sahf
fists
imul
lret
pop
cmp
loopne
popf
pop
insl
cld
xchg
sbbl
or
ss
das
push
loope
and
stc
mov
fcoml
mov
cld
pop
xchg
sti
popa
pop
in
xor
adc
je
push
mov
stos
sub
lods
scas
pop
mov
gs
loopne
mov
jno
sbb
gs
ja
lock
fisubrl
jns
mov
mov
sbb
pop
xor
pop
or
jp
jmp
faddp
dec
or
loopne
push
les
adcl
mov
cmp
repnz
das
movsb
xchg
lods
rol
pop
pushf
add
push
sub
imul
sbb
out
bound
movsb
movsl
imul
daa
call
in
mov
xlat
scas
movsb
clc
daa
shlb
xor
subb
adc
xchg
pop
or
pop
mov
aam
fwait
xor
rolb
xchg
cmp
mov
imul
dec
dec
jge
xchg
jmp
pop
mov
push
mov
push
mov
cmp
nop
jno
dec
mov
das
idivb
subl
je
xchg
inc
mov
inc
cwtl
sahf
xchg
gs
push
fmul
push
fwait
cmc
jo
inc
cmpb
push
mov
test
lahf
test
add
addr16
cmp
add
jl
in
out
mov
aas
mov
in
xchg
lret
sti
fwait
mov
data16
mov
sub
mov
rolb
lret
inc
sbb
mov
adc
stc
push
jmp
adc
dec
and
out
insb
adc
add
in
adcb
adc
mov
cmp
and
xchg
xchg
xchg
pop
jl
mov
in
lret
push
lcall
dec
xlat
orb
dec
js
pop
push
sub
sbb
rorl
pop
fcom
mov
test
in
jb
aad
add
sbbl
and
pop
mov
adc
dec
cmp
in
sub
lea
in
xchg
mov
lcall
jnp
xchg
adc
cmpsl
mov
lods
in
or
pusha
cmp
das
cltd
jp
inc
xchg
dec
jp
push
mov
outsb
sbb
jg
or
loop
dec
pop
jns
xchg
mov
rcl
inc
nop
sbb
push
xor
mov
pop
aam
out
sbb
xchg
aaa
inc
xchg
mov
xchg
mov
into
pop
iret
xchg
jp
and
or
adc
add
lcall
and
or
lods
aas
lds
test
inc
in
out
or
mov
dec
js
push
sub
sub
xchg
repnz
mov
xor
stos
sub
jbe
lods
mov
and
mov
cmp
dec
mov
cmp
or
mov
push
wrmsr
jnp
gs
xor
mov
ja
jbe
data16
clc
adc
jp
ret
int
push
pop
xchg
add
xchg
mov
in
mov
mov
sbb
in
inc
and
and
pop
sbb
xchg
jb
int
loope
loopne
dec
into
pusha
movsb
ret
pop
or
dec
mov
sbb
inc
insl
xchg
adc
or
add
mov
es
sbb
sub
inc
cmpsl
inc
mulb
dec
inc
ret
rorl
jecxz
add
icebp
and
rcrl
sub
int3
dec
mov
in
aaa
inc
and
xchg
jo
out
jne
jno
aad
ss
es
dec
lret
aam
outsl
sbb
mov
divb
mov
mov
orb
dec
movl
inc
push
rsm
push
in
sbb
xchg
mov
std
fst
xchg
fisubl
gs
sub
aaa
icebp
out
imul
xchg
mov
push
orps
sub
daa
xchg
popw
sarl
leave
mov
dec
and
mov
push
xchg
xchg
pop
out
out
mov
outsb
lahf
dec
pusha
push
push
jno
cmp
mov
sarb
mov
aam
rcr
sub
cmp
dec
popa
and
jp
xchg
mov
nop
outsl
cmc
xchg
cmp
xor
push
xor
xchg
pusha
flds
xchg
push
push
cmp
jp
frstor
inc
notb
jo
xchg
movsb
mov
scas
js
dec
dec
loope
std
mov
stos
or
xlat
fildl
aaa
dec
jle
scas
fisubl
or
cli
add
cmp
push
imul
icebp
repnz
sub
mov
xor
pop
and
push
jnp
or
sbb
fs
loopne
int3
and
movsb
sahf
sub
sarl
jne
jbe
push
cmpsb
shlb
outsb
pop
in
cmp
xchg
sarb
jmp
sbb
xor
stos
dec
xchg
loope
adc
xor
sub
pop
int
rorb
mov
ficomps
ljmp
outsl
lds
inc
sub
sbb
or
les
insl
push
addr16
inc
cld
push
or
in
test
ja
jg
sub
mov
ror
pusha
sahf
cmp
je
and
pushf
inc
dec
outsl
inc
popa
dec
xchg
rcrl
jbe
push
pop
mov
ja
xchg
idiv
inc
aam
lock
dec
jmp
imul
and
mov
mov
adc
push
pop
dec
push
dec
mov
sbb
loopne
pop
push
jb
aam
push
mov
mov
out
mov
xchg
mov
inc
add
pop
repnz
or
mov
fcompl
mov
mov
lcall
pusha
lahf
popf
adc
xchg
mov
aam
lcall
fdivrp
andl
das
popf
or
push
dec
mov
aad
ja
sti
adcb
and
mov
icebp
mov
or
lret
roll
jl
adc
fsubr
jmp
cmp
daa
push
pushf
popa
iret
pop
iret
dec
push
out
das
fstl
mov
shl
in
and
sbb
imul
sub
addl
push
fbld
cmp
sbbl
movsb
xchg
push
jmp
mov
jmp
mov
int3
push
sti
insb
xor
xchg
xchg
sbb
and
or
test
mov
sub
add
das
xor
test
xorl
cmp
adc
jecxz
cs
adc
xchg
shrb
je
ret
dec
cmpsb
aas
push
bnd
xorb
inc
mov
or
repnz
xor
sbb
icebp
sbb
es
sti
add
dec
test
loopne
outsb
jmp
hlt
and
jnp
jl
fdivrl
adc
push
ret
fstpt
clc
mov
jle
lcall
xor
jmp
jne
and
jle
inc
cmp
jns
sbb
dec
push
lret
mov
aas
push
mull
push
mov
pop
je
mov
sub
inc
pushf
or
sarb
xchg
ljmp
jns
mov
mov
cld
pop
arpl
test
push
lret
or
hlt
gs
packssdw
cmp
mov
outsb
sbb
push
jmp
cld
inc
ss
jge
or
lock
insl
mov
int
adc
shrb
ror
mov
repnz
jl
sbb
dec
push
fmulp
jne
jg
decb
push
movsl
sbb
inc
sub
imul
jmp
xor
mov
xchg
push
hlt
repz
sub
pinsrw
sub
rcll
mov
fists
xor
dec
mov
xor
cmpsb
sub
data16
clc
in
sti
mov
xor
xchg
dec
pop
jb
cmp
sub
jbe
fnstsw
inc
sub
mov
ja
push
mov
pop
fimull
mov
rorb
fldcw
inc
push
xchg
sbb
and
stc
jle
sub
mov
pop
daa
xchg
fildll
and
pop
add
outsb
scas
xchg
lds
xchg
jno
popa
adc
mov
or
mov
jmp
lods
imul
ret
sub
gs
push
push
aaa
fs
mov
mov
jb
add
mov
sar
je
push
mov
ds
push
imul
xor
sbb
incl
mov
mov
push
adc
xchg
dec
repz
pop
loopne
push
push
mov
dec
dec
or
mov
jmp
pop
and
mov
and
jge
cmpsl
mov
pop
mov
mov
pop
pop
sub
movsl
jnp
frstor
or
into
pusha
mov
cmc
sahf
aas
dec
sahf
sbb
movsl
adc
sti
push
aaa
pop
pop
rclb
je
lods
xor
data16
mov
out
sbb
dec
cmpsb
sub
push
cmp
xchg
loopne
std
adc
cltd
shl
push
int
loopne
das
enter
shl
lods
int3
out
push
jmp
hlt
in
push
in
in
leave
and
ja
fwait
add
repz
gs
inc
mull
mov
xor
into
mov
xchg
sbb
and
stos
sub
jns
push
or
mov
or
push
adc
paddd
inc
xlat
repnz
hlt
jae
fstps
push
xchg
xchg
inc
call
add
shlb
inc
into
mov
daa
scas
in
push
xor
pusha
divl
xchg
sub
cmp
mov
xchg
int
push
and
mov
sub
icebp
rolb
jns
add
push
ljmp
sbb
js
les
sarb
aad
cld
xchg
popf
add
mov
data16
fbstp
cmp
xchg
jg
xchg
sarl
lea
ja
cmp
sbb
xor
fimuls
adc
push
pop
lods
dec
out
clc
nop
add
lods
fnstcw
fbld
adc
test
xor
in
repz
xor
xor
hlt
movsl
mov
sbb
xlat
call
sbb
or
icebp
out
pop
jb
push
inc
xlat
jg
sub
dec
out
sbb
insb
dec
xchg
lret
dec
mov
test
inc
pop
test
movsb
sahf
repnz
xor
add
pop
jge
and
cs
cmp
adc
add
xchg
ror
jb
enter
adc
sbb
dec
cmpsb
incb
iret
cltd
ljmp
arpl
or
enter
rcrb
xchg
jno
pusha
stc
jb
repnz
icebp
xorl
cld
add
aam
add
sbb
jge
scas
or
rclb
jne
fxch
cwtl
sbb
jp
or
inc
jle
out
cmp
lret
icebp
sub
ljmp
or
xor
jbe
sub
pop
lcall
dec
add
pop
loope
mov
mov
dec
ret
pusha
jecxz
std
sub
std
mov
cmp
mov
add
dec
fs
push
mov
cltd
stos
lret
dec
stc
push
xchg
sub
data16
dec
nop
vmwrite
xlat
cmp
es
push
adc
push
push
inc
testb
mov
lods
jmp
xchg
sbb
jmp
aam
pushf
inc
in
mov
mov
in
and
xor
mov
inc
mov
xlat
mov
xchg
test
and
dec
dec
cmp
mov
sarb
pop
out
or
add
insb
push
jns
sub
hlt
pop
inc
jns
call
scas
lods
mov
and
fnstenv
sbb
dec
stc
test
aad
int3
mov
pop
fidivs
ljmp
out
mov
rcrb
sti
and
inc
adc
adc
repnz
dec
jnp
outsb
fsubrl
cmp
and
sarb
and
das
lds
stos
xor
push
nop
cmp
jge
fs
loope
fsubrs
mov
addr16
ljmp
pop
push
adc
dec
jge
stc
xor
scas
xor
rorl
or
add
ja
inc
in
and
not
push
ret
fwait
sbb
repnz
xlat
lock
cs
jge
pop
dec
and
add
sbb
popf
sub
push
xor
mov
pop
std
outsl
xchg
jle
mov
push
out
adc
ds
mov
scas
inc
pop
jo
mov
cli
lret
gs
dec
cs
mov
or
ja
jo
gs
ficoml
stc
lahf
jg
add
enter
dec
fsts
inc
addl
add
lods
pop
lods
test
mov
bnd
cmp
mov
sahf
adc
push
mov
cwtl
sub
loope
xlat
dec
popf
pop
inc
push
fwait
arpl
mov
rorl
push
rclb
or
mov
fstpl
data16
xchg
cmp
dec
sub
and
pop
mov
cmpsl
or
repnz
call
je
fwait
cmp
mov
jo
mov
inc
aas
and
mov
aam
popf
dec
xlat
mov
cmp
packssdw
into
inc
out
xchg
out
leave
cmp
rcll
movsl
mov
insb
inc
mov
clc
pop
xor
dec
shr
push
sbb
imul
roll
sbb
push
sub
ficoml
outsl
pop
inc
xor
test
lahf
and
mov
shll
xor
sbb
jge
inc
stos
xor
in
mov
sahf
mov
aaa
sbb
sub
mov
leave
loop
or
ret
int3
mov
fnstcw
aas
fisttpl
fld
cmp
push
xor
jp
jb
mov
decl
mov
lds
hlt
lods
inc
sub
popa
repnz
sbb
pop
jae
jle
aam
loope
repnz
inc
in
cmpsl
nop
mov
lds
push
les
xor
cmp
lcall
ja
dec
and
nop
cwtl
sub
sbb
jne
pop
pop
add
aam
popa
andb
jns
mov
or
into
push
call
loope
or
mov
shlb
and
test
mov
cmpsl
int3
imul
les
outsb
pop
or
shl
sbb
push
movl
or
push
dec
mov
cmp
fildll
out
scas
xchg
mov
mov
xlat
out
fisubrs
push
inc
in
jecxz
jnp
into
pop
stos
jp
pop
cli
adc
imul
cmp
addb
repnz
cmc
jg
jo
push
mov
lods
mov
lahf
mov
push
daa
cltd
movsl
sarb
xchg
dec
shl
jmp
adc
cli
dec
lret
mov
xchg
push
adc
outsb
cwtl
add
adc
cmp
jne
ds
pop
neg
sub
lcall
idivl
and
push
pop
mov
pop
sub
push
mov
movsl
mov
sbb
loopne
lock
je
pop
movsb
leave
sti
pop
jp
or
icebp
out
loop
dec
and
lret
inc
lret
dec
add
mov
jbe
iret
pop
dec
dec
sbb
ss
in
adc
bound
mov
bound
mov
ffree
ss
std
jno
addr16
add
adc
xchg
jle
cli
mov
mov
jne
ret
jbe
push
sbb
pop
enter
hlt
lret
int
or
pop
fucomip
adc
arpl
movsb
or
out
xor
xchg
pop
push
scas
aam
sbbl
or
mov
pop
aas
and
and
sub
push
cmc
inc
dec
fadds
xor
lret
pushf
adc
lret
mov
testl
dec
mov
xor
lods
outsb
movsl
xchg
dec
or
mov
cmp
and
push
jge
sarl
lcall
pop
inc
clc
mov
xchg
popa
xchg
in
mov
repz
fnstsw
lahf
clc
pop
add
sub
add
push
ja
in
and
lret
mov
inc
push
xor
inc
and
jge
icebp
xor
or
adc
mov
jmp
jge
pop
lcall
sub
inc
lret
mov
lahf
xor
dec
mov
sub
mov
in
mov
pop
mov
fucomi
and
and
les
lcall
pushf
pop
movsb
adc
push
je
sbb
add
add
out
fbstp
and
fnsave
lret
or
cltd
mov
pop
test
mov
ret
mov
sbb
shlb
jl
dec
lds
in
inc
cltd
xchg
mov
mov
lea
dec
fsub
jmp
sub
ja
mov
xor
push
jp
int
add
sbb
subl
nop
pop
les
xchg
adc
int3
jns
mov
sbb
mov
push
cld
jno
aas
or
and
cltd
fcoml
mov
roll
js
rcl
call
ret
cmp
sbb
movsb
imul
cmp
pop
aam
sbb
pop
les
fwait
sbb
mov
lds
xor
out
sahf
test
fsubl
fdivrl
cs
out
or
rorb
xor
lahf
inc
xor
mov
push
incl
inc
lcall
popa
hlt
push
dec
rcrb
adc
dec
push
scas
inc
test
loopne
dec
les
push
mov
jno
inc
xor
push
lret
push
imul
push
gs
xchg
movsl
shll
inc
repnz
bound
xor
cmpsb
mov
div
aas
iret
pop
inc
mov
add
pushf
xor
imulb
dec
push
js
clc
push
ss
out
in
mov
fsubs
es
fcomps
lret
lret
sbb
lcall
ljmp
call
test
and
mov
mov
pop
xchg
out
or
fidivrl
leave
idiv
test
add
cmp
jp
imul
sub
cmp
jmp
into
push
dec
call
and
sahf
mov
int3
xchg
xor
arpl
xchg
adc
int
in
mov
or
rcrl
inc
das
jne
adc
or
mov
dec
mov
xchg
mov
or
fsubrp
mov
pusha
inc
mov
pusha
cmp
dec
xchg
jge
int
mov
mov
or
xor
ret
adc
push
push
xlat
mov
mov
jl
mov
mov
cmp
push
jae
dec
loop
adc
cld
popf
gs
stos
sbb
into
test
dec
sub
sub
jo
outsb
dec
sbb
and
aam
pushf
jbe
jb
cld
or
cli
push
xor
aad
mov
inc
push
and
add
inc
popf
or
jb
push
jmp
ret
or
scas
or
jl
jp
scas
aas
and
insl
add
add
and
jmp
mov
push
je
pop
mov
repnz
push
adc
jbe
pop
push
in
pop
xor
repnz
stos
fidivs
rorl
ds
inc
push
lds
push
popf
cwtl
aad
cmp
leave
rorb
out
bound
dec
out
push
jle
xor
daa
mov
cmp
dec
and
xchg
jmp
xor
xchg
adc
cld
push
inc
daa
adc
adc
les
fcoml
in
lods
dec
lods
jae
cld
cmp
inc
pop
stos
nop
loop
xchg
pop
mov
xchg
cmp
scas
push
cmpsb
js
inc
scas
jmp
xchg
dec
fistl
fsubrs
add
add
push
push
push
or
divl
pop
jg
jmp
js
jns
push
jmp
loopne
movsb
cmp
add
xlat
test
daa
jno
shll
clc
icebp
sbb
mov
stc
fsts
cmp
jnp
xchg
jle
leave
lea
cmp
xchg
push
sahf
jle
or
or
add
pop
sub
ficoms
pop
adc
stos
sbb
or
and
ficompl
sbb
lahf
outsl
mov
js
push
or
mov
xor
scas
scas
fs
jb
sahf
lods
inc
enter
scas
imulb
sub
adc
test
sub
das
mov
aaa
push
repz
cmp
leave
daa
inc
mov
lods
jns
mov
inc
mov
cmovb
cmp
int
push
pop
cwtl
out
cmc
xchg
imul
test
jmp
mov
mov
sbb
add
xor
movsl
jae
nop
mov
sub
fmull
mov
cld
in
or
cmpl
cmp
test
push
popf
out
outsb
clc
fwait
pop
mov
xlat
xor
add
stc
es
in
test
add
or
popf
pusha
loop
lahf
jnp
dec
movsb
inc
cmp
mov
pushf
negl
sbb
jmp
idivl
repnz
mov
pop
outsl
mov
fstl
ret
cltd
xorl
xor
or
sbb
fs
sarl
popa
outsl
popf
or
xor
out
scas
mov
arpl
test
xchg
jp
adc
repz
push
sub
sahf
dec
aam
mov
dec
xor
push
pop
js
sub
out
rcrb
lods
mov
andl
xchg
cld
push
into
insl
jle
pop
imul
test
mov
dec
lret
ds
push
test
mov
pop
popa
cmpsb
movsl
clc
sbb
arpl
mov
push
dec
or
mov
cmpsl
push
rolb
inc
sahf
mov
fsubrs
push
xor
mov
xchg
repnz
stos
and
int
add
jno
mov
xor
fisubs
xlat
cmc
iret
lret
bound
mov
xchg
out
cmp
xor
fidivs
daa
call
out
push
push
push
lods
std
sub
aam
ret
inc
arpl
sahf
iret
inc
jmp
mov
mov
out
adc
inc
dec
mov
adc
lods
xor
pop
pusha
xor
sbb
xor
out
mov
dec
arpl
rcl
lds
rclb
or
and
jmp
out
cli
inc
inc
xchg
sub
jp
andb
aaa
mov
add
and
bound
dec
push
imul
xchg
jecxz
mov
push
push
jne
dec
sub
xchg
daa
sti
stos
std
push
sub
cmp
pop
test
push
add
movsb
scas
into
xchg
sub
xchg
icebp
add
test
lret
mov
mov
or
into
mov
xchg
xor
pop
ja
and
sub
fdiv
xor
fdivrs
inc
das
and
out
lock
push
mov
mov
xchg
or
daa
inc
push
sbb
into
and
jns
sbb
lods
aas
cmpsb
movsl
fnstsw
ss
sbb
fwait
push
jo
mov
movsb
stc
popa
sub
pop
mov
cmpsl
int
pop
jns
mov
xchg
mov
add
add
pop
ja
out
xchg
mov
mov
addr16
jbe
xor
cmc
test
rcrl
sbb
rolb
or
adc
xchg
std
adc
mov
xor
mov
push
mov
sbb
adc
shll
or
dec
loop
sbb
mov
pop
stos
lcall
mov
aas
mov
xchg
cs
jb
and
push
jno
vmwrite
es
popf
push
shll
movsl
es
jp
pop
fidivrs
add
xor
sub
sbb
ret
cmp
jae
sbb
push
mov
sub
xor
jmp
lock
cmp
cmp
outsl
cmp
xchg
lds
push
movsl
test
outsl
add
fildll
push
xchg
repz
mov
xchg
in
push
push
outsb
pop
popf
lea
fs
and
popf
loope
lcall
daa
syscall
push
cmpsb
jno
and
xchg
lock
and
mov
cwtl
mov
sub
testl
aad
mov
pop
loop
lcall
jno
scas
and
test
mov
mov
movsl
in
repz
mov
aas
jle
add
pop
popaw
jbe
mov
or
clc
lods
hlt
lret
push
inc
repnz
stos
or
ret
mov
xor
mov
and
push
sub
out
das
sti
xor
sti
cltd
mov
movsl
aam
mov
shrb
cli
pop
xlat
test
xchg
adc
jae
cmc
in
fxch
test
dec
mov
push
cmc
js
cmp
imul
and
loopne
sahf
lods
mov
outsb
imul
and
inc
dec
idivb
adc
fists
sar
sub
loopne
mov
mov
xor
mov
ds
lret
out
mov
xor
test
or
mov
lods
and
addb
loop
mov
cmp
or
sub
jmp
icebp
inc
xor
scas
xchg
xor
cmp
into
sbb
outsb
int3
out
jnp
mov
cltd
push
sbb
xchg
jne
movsl
out
add
xchg
ret
or
sub
es
jnp
add
adc
repnz
pop
mov
mov
xor
inc
dec
sbb
test
xor
inc
sti
bound
inc
fucomp
jne
jo
lahf
add
sahf
sahf
jno
cwtl
jno
pop
xchg
push
andl
pop
aam
je
dec
icebp
mov
dec
jno
test
bound
cmp
out
icebp
test
pop
jno
cmpsl
pop
loope
inc
in
jb
cltd
shll
insb
imul
mov
scas
insl
pop
mov
lcall
imul
aaa
aam
jp
adc
cs
test
ret
adcl
and
lret
test
out
aaa
pop
xor
lahf
mov
jne
sub
inc
dec
cmp
mov
jge
mov
lds
or
mov
enter
cwtl
notb
cld
in
xchg
lock
xor
std
jge
mov
fcomi
in
adc
stc
dec
dec
jp
adc
aas
and
in
xchg
ljmp
frstor
std
cltd
std
sub
leave
push
mov
dec
aad
and
clc
mov
sbb
jmp
mov
neg
and
insb
cld
repnz
adcb
pop
dec
push
sti
sbb
pop
in
add
xchg
adcl
dec
sbb
xor
imulb
mov
push
mov
or
fiadds
call
scas
cmp
aam
adc
or
jge
xchg
mov
inc
pop
cmp
jns,pn
mov
cld
fwait
add
pop
icebp
cli
neg
mov
arpl
adc
cmp
out
loope
mov
into
sar
and
fxch
les
into
push
hlt
cmp
dec
sbb
push
out
outsl
mov
je
mov
inc
pop
fs
rcll
cld
dec
shlb
addr16
faddl
inc
mov
pop
xchg
sub
sbb
jp
imul
sti
repz
cs
inc
mov
test
cmp
pop
mov
loopew
and
mov
jo
icebp
mov
jecxz
mov
pusha
stos
pop
jp
out
sub
movsl
iret
imul
add
loope
inc
jae
call
shrb
jl
stc
jno
scas
jmp
adc
inc
movsl
fildl
cmp
or
pusha
mov
movsb
pop
pop
push
dec
sbb
mov
lods
cpuid
imul
pop
sub
repz
pushf
cmpl
lock
sbb
scas
sbb
fildll
aaa
fldenv
push
hlt
or
sti
dec
loopne
push
pop
es
int
sbb
push
out
loop
xchg
jge
jecxz
stc
lret
mov
je
mov
xchg
pop
scas
lds
iret
push
das
jecxz
pop
jnp
movsb
movl
mov
bound
shrb
cmc
movsl
je
cmp
sbb
arpl
je
mov
xlat
mov
jns
pop
loope
sub
stc
cltd
mov
rclb
out
xchg
int
subb
dec
das
dec
push
jb
fs
jno
push
lock
add
jle
outsl
test
je
xchg
xchg
sub
jnp
fcmovb
add
test
mov
negl
js
jae
insl
hlt
rorb
or
pop
add
jecxz
sahf
sbb
and
outsb
fdiv
adc
sbb
dec
filds
ljmp
fadd
adc
sti
sbb
mov
cmpsb
mov
xchg
lret
jbe
shll
dec
and
lock
mov
icebp
push
ja
fisubrs
or
dec
pop
imul
adc
ja
sbb
mov
jmp
outsb
or
sbb
add
std
jmp
popa
dec
out
push
movsl
jmp
xchg
lods
push
inc
pop
adc
sahf
pop
shrl
mov
rolb
insb
cmp
fidivrs
lds
mov
data16
mov
in
scas
pop
pushf
out
sbb
sub
shl
fs
daa
or
in
daa
mov
out
jno
lods
cmpsb
mov
fstpt
jne
mov
or
nop
inc
sahf
adc
cmpsb
xor
mov
and
add
es
add
enter
sbb
adc
mov
shrb
insb
bound
cltd
stos
out
fisttps
nop
inc
mov
adc
jae
stos
cmp
clc
push
push
nop
mov
cmc
mov
xlat
sbb
sub
push
push
push
mov
cmp
mov
int
aaa
adc
fstpl
in
test
test
sbb
cld
jmp
or
clc
pop
xchg
inc
inc
pop
sti
and
xorb
in
mov
rcr
sub
add
or
pop
inc
xchg
hlt
adc
fdivl
ljmp
xchg
jo
jl
imul
jb
into
rcl
xor
xor
ds
xor
ds
xchg
lock
or
enter
div
mov
xchg
xor
dec
enter
mov
jle
mov
push
cmp
mov
mov
add
push
repz
repz
or
enter
pop
fwait
sbb
stos
jle
push
nop
repz
mov
ret
mov
sarb
andb
int
mov
sbb
sbb
mov
cwtl
sub
or
adc
add
and
mov
dec
lods
aaa
mov
jnp
mull
dec
adc
push
mov
mov
stos
aas
mov
shlb
gs
insl
xor
ficompl
inc
sti
sub
or
jnp
push
jge
dec
insl
sbb
imul
aam
push
cmp
jne
dec
jmp
adc
xchg
mov
sbb
test
mov
dec
lret
dec
inc
dec
push
sysexit
cmp
cmpsl
jle
xchg
movsb
inc
into
sbb
lock
xor
iret
jl
inc
mov
dec
mov
add
cmpsl
or
sub
xchg
clc
dec
jbe
in
pop
xor
cltd
mov
test
inc
nop
outsb
idivl
cwtl
mov
fisttpll
fs
xchg
add
fcmovb
jp
pusha
cmp
sahf
cli
test
in
les
daa
add
in
jbe
mov
mov
or
stos
add
mov
pop
rcrb
mov
push
test
ds
leave
lcall
lea
cmp
fcmovnb
movsb
rcrl
jecxz
mov
shll
inc
mov
pop
gs
std
in
or
add
sti
clc
test
loope
dec
ret
sub
rorb
in
push
aas
pusha
mov
repz
and
lea
sbb
xchg
xor
inc
out
jb
outsb
lds
push
xor
push
inc
int3
outsb
sbb
xchg
xchg
jo
and
mov
mov
ss
call
xchg
popf
aaa
jne,pn
or
and
jo
jl
lret
or
sbb
ret
lret
pop
push
in
popf
mov
mov
dec
fs
jnp
cwtl
pop
nop
push
insb
pushf
xchg
fstps
mov
pusha
dec
ret
cmc
outsl
pusha
dec
or
sub
pop
jmp
push
pushf
jno
cmpsl
sub
mov
cmpsl
das
cmpb
mov
mov
jle
dec
sbb
gs
xchg
popf
cmp
sbbl
outsl
add
cwtl
fwait
adc
in
ss
pop
es
sub
inc
mull
mov
and
scas
cmp
sbb
loop
fisttpl
lods
mov
push
insl
ds
es
jp
push
cmp
in
mov
sbb
jmp
cs
mov
das
rcll
je
push
inc
aad
mov
es
push
rolb
shrb
xchg
test
cs
inc
xor
sbb
cmp
pop
pop
popf
adc
inc
xchg
leave
sub
hlt
test
mov
xchg
dec
dec
add
clc
sub
jmp
jmp
lcall
sub
jne
adc
sbb
mov
push
sub
mov
jecxz
popa
cwtl
rclb
mov
xchg
mov
subl
xor
add
and
std
xchg
cmp
xlat
leave
jecxz
xor
dec
add
test
sbb
fnstcw
lods
icebp
mov
inc
mov
arpl
jns
pop
or
push
dec
lods
pop
sti
pop
adc
cwtl
mov
mov
add
dec
adc
mov
cmp
mov
or
fs
popa
icebp
lods
push
stos
xchg
cmp
pop
insb
inc
out
movl
popf
dec
and
dec
mov
out
inc
jb
fidivs
outsb
mov
daa
jge
push
int3
dec
jae
or
pop
sbb
xor
sub
pop
sti
mov
shl
xchg
xor
or
adc
xchg
inc
pop
lret
xchg
and
aaa
sti
out
adc
and
test
sub
jp
std
rol
xlat
aaa
mov
gs
jne
adc
mov
mov
sub
lea
movsl
into
lcall
ffree
scas
or
mov
push
je
js
and
xchg
mov
ret
push
xchg
sub
gs
xchg
fistl
push
loopne
mov
mov
leave
out
lahf
shl
push
in
in
stos
add
or
iret
xchg
pop
xchg
cmp
loope
jno
mov
mov
push
dec
int
mov
dec
sbbl
stc
xor
or
cmpb
dec
fwait
iret
or
mov
mov
pop
cmp
jp
xor
ds
mov
into
outsb
sub
loop
dec
repz
je
sbb
push
xchg
jnp
aaa
clc
sub
mov
cli
pop
cmp
movb
mov
push
insl
cmpsb
add
jmp
cmp
sti
in
mov
pop
test
push
fwait
lods
add
lods
dec
and
cld
movd
xchg
jg
mov
pop
xor
mov
in
out
mov
cmc
xchg
stos
dec
int3
push
mov
mov
popf
testl
fistps
mov
push
inc
dec
push
xor
xchg
sbb
dec
push
aas
mov
icebp
test
pop
xorb
mov
mov
in
jecxz
scas
mov
neg
shlb
nop
mov
sahf
orb
js
xchg
pop
flds
in
sahf
shlb
mov
std
call
test
in
movsb
fidivrl
mov
mov
xchg
pop
outsl
mov
jo
sbb
push
cmpsb
popf
mov
inc
push
hlt
sbb
xor
aam
mov
cmp
push
int
bnd
fwait
jbe
and
jmp
lods
jno,pt
cltd
mov
cmp
cli
add
aaa
loopne
shl
inc
stc
sbb
leave
cwtl
push
or
dec
stos
int
scas
add
sub
mov
cmp
dec
cmp
jbe
sbb
cli
scas
mov
xchg
aam
sbb
outsl
jge
movl
fstps
ret
xor
imulb
add
jg
roll
mov
xchg
fadd
xor
scas
jnp
and
mov
push
xorb
jo
lea
and
push
push
lds
lds
inc
mov
movsl
mov
or
mov
xchg
ja
xor
xchg
or
xchg
cmp
mov
sub
mov
sub
getsec
divb
mov
mov
cmp
mov
pop
inc
int
cmpsl
mov
loope
cs
pusha
sti
push
mov
mov
enter
inc
or
vcvtsi2sdl
push
pop
lds
rol
test
fdivrl
mov
js
sub
inc
scas
mov
movsl
stc
push
in
lcall
or
dec
dec
inc
movsb
xor
push
push
dec
pop
es
mov
loop
jns
stos
ret
add
sbb
adc
aaa
test
addr16
je
jb
pop
insl
mull
mov
cmc
jl
mov
out
aas
stos
cmpsb
lods
movsb
push
pop
mov
jg
mov
int3
push
sub
sbb
and
sti
dec
jmp
cmp
js
jge
fldenv
or
enter
or
xor
mov
sbb
lods
jmp
pcmpeqd
in
fildl
aam
shrb
clc
pop
pop
in
jb
xchg
aad
daa
mov
mov
addr16
xchg
sub
mov
dec
mov
cmp
mov
sub
in
inc
gs
adc
jae
cli
fadds
fistl
and
stc
mov
out
mov
mov
xor
iret
sarb
cmpsl
or
les
out
pop
je
mov
push
addb
int3
sub
pop
add
jmp
xchg
out
cmp
aaa
dec
popa
std
mov
dec
imul
int
adc
ss
std
xchg
mov
inc
lret
outsb
and
shlb
inc
xchg
lcall
xchg
mov
scas
and
xchg
imull
nop
mov
push
jle
sbb
loope
out
subl
xor
out
push
addr16
push
lcall
insb
cmp
fdivrp
adc
test
enter
dec
incb
pop
jmp
push
add
fbstp
es
mov
fsubrs
sti
mov
pop
xor
in
lea
xchg
in
xchg
dec
inc
cmp
cwtl
inc
jno
test
jp
xor
mov
fwait
pop
sbbl
popa
sub
mov
jne
add
ds
mov
jecxz
jns
add
testb
daa
fwait
aas
push
int3
lock
stos
pushf
mov
push
ss
dec
sahf
stos
jle
mov
mov
pop
cwtl
hlt
inc
mov
decl
jecxz,pt
and
inc
cmpsb
xlat
sbb
push
mov
and
mov
jbe
mov
call
loope
fsubl
or
rorl
mov
xchg
mov
int3
adc
xlat
adc
mov
fs
orb
cmp
iret
sbb
xchg
sub
lret
pop
adc
xor
hlt
xor
add
ret
xchg
sbb
in
test
xlat
add
adc
add
es
xchg
loopne
inc
test
push
sbb
pusha
cmp
pushf
in
sbbb
push
and
cmp
cmp
hlt
mov
mov
mov
xchg
dec
or
mov
jmp
jge
mov
arpl
push
jnp
mov
hlt
pop
out
in
pusha
mov
bound
imul
cli
inc
dec
aad
or
pusha
push
inc
rclb
mov
cmc
aas
sbb
nop
pop
mov
insb
stos
push
cmpsb
jne
iret
fs
mov
leave
pop
out
jno
push
mov
add
and
sbb
daa
lret
xchg
cmp
clc
daa
or
fisttpl
out
push
bound
mov
fsubs
pop
aas
std
loope
cmp
scas
cld
mov
inc
sub
pop
fnstsw
mov
bound
outsb
sahf
and
mov
fcompl
repz
jge
xchg
stos
sbb
push
dec
stc
and
sbb
dec
jae
inc
fidivl
hlt
xchg
divl
mov
sub
test
add
hlt
jbe
pop
inc
cld
jo
push
in
xor
fdivrs
daa
pusha
pop
scas
pop
push
sub
mov
inc
imull
mov
cmp
mov
mov
scas
sub
mov
jmp
and
jmp
lret
cmp
es
sub
sub
inc
jmp
adc
lret
in
mov
adc
bound
lahf
test
jmp
fcmovnu
jb
sub
enter
xchg
jmp
xor
cmpsb
call
cmpsl
mov
mov
or
and
pop
cld
jne
xchg
sub
sbb
sub
das
mov
cmp
test
inc
dec
add
dec
ret
fcomip
jno
iret
jg
xchg
mov
xor
nop
add
dec
lahf
xor
or
push
sub
mov
jbe
mov
insb
mov
xor
sub
and
jecxz
lea
adc
arpl
xor
adc
fcmovu
sbb
loop
aam
aaa
jb
ret
pop
gs
enter
imul
fldcw
lods
cmpsb
mov
fwait
pop
pop
xchg
mov
lahf
int
and
cld
fimuls
dec
sub
out
call
mov
shl
ret
inc
cmp
hlt
mov
int
scas
pop
fidivl
sbb
xor
sub
out
adc
dec
mov
sbb
in
push
jecxz
lock
cmc
or
imul
jmp
fdivrs
dec
lds
inc
jg
movsb
mov
sbb
lret
fnstenv
inc
fwait
imul
cs
outsb
imul
andl
movsb
push
xor
sub
mov
insl
add
stos
push
sbb
movsb
cli
pop
stos
jo
sti
jg
and
cli
push
je
sbb
cli
mov
dec
insl
ret
push
xlat
lds
mov
lret
push
ret
roll
mov
mov
push
push
pop
cmp
repnz
jne
enter
adc
gs
inc
mov
enter
xchg
hlt
sbb
and
cwtl
or
xchg
sbb
lock
mov
imul
cwtl
push
push
aam
sub
leave
sub
aam
in
sub
lds
out
repz
ret
dec
test
lds
mov
fldenv
sub
mov
ficoms
pop
mov
mov
frstor
mov
adc
out
lods
pop
dec
and
inc
pop
sub
xor
jae
add
lret
adc
xor
ret
xchg
cmc
in
aad
push
dec
cmp
or
fsubl
cmp
dec
push
mov
movsb
dec
aaa
adc
lods
popf
loope
shl
fisttpl
cmp
xlat
push
in
idiv
or
dec
pop
mov
stos
clc
push
xchg
push
sbb
lock
scas
xchg
mov
dec
rcrb
movsb
loopne
inc
sub
ret
add
cli
push
pop
testb
jae
push
repnz
sbb
ficoml
xor
or
in
cwtl
and
insl
xor
shl
dec
fdivrl
mov
enter
aad
cmp
adc
mov
test
and
cmp
jbe
mov
mov
insl
mov
mov
xchg
cltd
pop
test
sahf
add
push
subb
ljmp
jnp
cmp
cltd
push
aam
movsb
sbb
repnz
stos
xor
xchg
add
sbbb
inc
fstp
push
pop
xchg
inc
icebp
and
cmc
xor
cwtl
popa
push
shlb
sbb
push
xchg
idivl
or
cmpsb
or
roll
mov
call
fcoml
decl
loope
aad
pop
mov
pop
fisttps
int3
les
popa
outsb
movsl
cmp
shrb
in
inc
scas
js,pt
mov
sub
pushaw
or
andl
cmc
es
xor
sub
xchg
jne
lea
jns
xor
lock
das
aaa
ret
outsb
mov
sub
mov
sbb
xchg
outsl
jae
inc
sbb
lock
sub
sub
push
lretw
in
fists
popa
sbb
das
pop
outsb
dec
jnp
movsb
stos
loopne
lret
gs
mov
rorl
mov
dec
aam
aaa
jl
popf
fwait
mov
test
sub
xchg
cltd
scas
std
lods
movsl
je
ret
push
push
dec
in
icebp
push
mov
xchg
xorl
notl
sahf
or
sbb
and
dec
divb
in
pop
roll
xchg
and
ja
sub
scas
cwtl
xchg
out
push
adc
inc
cmp
es
cmc
ss
push
daa
ret
xor
daa
adc
ficoml
outsb
scas
or
int3
ljmp
sti
push
cwtl
mov
mov
pop
icebp
pop
lds
pop
jmp
inc
insb
inc
imul
pop
sbb
pushf
adc
das
iret
fldt
jne
and
jnp
adc
cltd
dec
das
pushf
in
xchg
sub
xchg
xchg
ljmp
adc
gs
push
pop
xchg
dec
cmp
jne
or
fdivl
adc
mov
lret
push
add
mulb
mov
imul
push
pop
push
stos
pop
mov
or
stos
iret
rcr
lds
aaa
lret
mov
cli
adc
jne
fildll
icebp
inc
aam
clc
ja
pop
gs
lcall
je
xchg
and
dec
sbb
movsl
sub
inc
lret
pop
xchg
xchg
pop
xlat
push
inc
xchg
pop
sbb
adc
movl
mov
sbb
inc
xor
loopne
sahf
popf
inc
icebp
push
pop
sbb
aad
ljmp
push
popa
hlt
pop
aad
mov
aam
add
push
and
call
push
pop
mov
nop
into
mov
fstpt
mov
ret
mov
mov
jno
shrb
bound
mov
iret
ret
inc
movsb
out
dec
mov
push
popa
lods
adcl
and
push
cmp
and
filds
push
out
push
mov
mov
xor
and
mov
mov
ljmp
inc
mov
mov
pusha
js
jge
dec
mov
dec
incb
xchg
mov
je
inc
jae
sbb
popa
cltd
cwtl
adc
mov
push
jb
repnz
push
or
les
mov
push
xchg
mov
pop
xchg
sub
arpl
cmc
and
outsb
ret
mov
or
lock
insl
ficoms
adc
adc
andnps
scas
add
mov
fbstp
push
add
in
js
inc
pop
jl
into
xchg
into
xchg
cmpsb
dec
push
mov
cmp
xchg
cmp
lcall
xchg
mov
aas
xchg
jge
pop
aad
movb
push
rolb
jle
pop
pop
shll
cmp
addb
daa
sbb
jl
ja
pop
and
lret
shrl
push
ja
pop
js
mov
int3
sub
sbb
jb
out
adc
mov
pop
subl
jbe
movsb
repz
push
push
push
and
idivl
mov
rcll
int3
aad
aas
jge
lea
testb
les
sub
sbb
stc
enter
mov
lret
dec
push
sbb
cmc
jb
mulb
and
cmp
jp
repnz
rcll
jno
and
sub
push
mov
cmp
aaa
mov
sbb
push
in
adc
xlat
iret
out
sub
pusha
push
jl
adc
shlb
dec
fs
movsb
cmp
into
icebp
xchg
mov
iret
shrb
inc
loopne
dec
xchg
sbb
int
sub
jae
mov
jnp
mov
std
xor
cmp
insl
cs
lds
inc
inc
mov
xchg
into
stc
jp
dec
mov
mov
jbe
adc
pusha
int
idiv
mov
sbb
inc
xchg
ror
aad
aaa
std
add
mov
mov
and
push
aad
stc
lds
dec
imul
add
sub
int3
ja
mov
addl
mov
js
inc
or
xor
shr
jp
sti
inc
sahf
leave
ficoms
rclb
ret
mov
insb
jo
in
jae
sbb
mov
xor
cwtl
adc
nop
xchg
inc
and
mov
or
movsl
std
sub
inc
stos
lds
aad
out
xlat
dec
je
test
lcall
lcall
shll
pusha
mov
mov
and
leave
mov
shl
push
lea
lea
fdivl
cmp
xchg
scas
in
ficomps
jno
xlat
add
out
repz
mov
test
rorb
lahf
inc
imul
lea
loopne
mov
addl
or
and
mov
cli
xchg
aam
out
addr16
or
vphaddudq
and
jg
outsl
in
pop
xchg
out
out
cmp
mov
or
dec
pushf
mov
jne
cmp
cmp
sub
notl
outsl
sbb
sub
jge
into
ja
aas
push
add
fwait
iret
mov
fistl
or
jb
daa
mov
push
push
enter
aad
jbe
lret
mov
pmaxub
mov
mov
jmp
xor
xchg
and
lret
pop
sbb
call
stos
mov
loopne
inc
cmpb
or
enter
scas
jae
sahf
out
and
and
dec
jecxz
pop
mov
jnp
inc
fwait
sbb
mov
scas
adc
testl
loopne
pushf
adc
gs
add
add
push
push
popa
dec
lods
mov
lcall
dec
dec
mov
jo
mov
cmp
sbb
insb
adc
mov
mov
mov
js
and
xor
cs
cmp
inc
or
jg
dec
stos
mov
add
xlat
cwtl
lock
rclb
cmp
stos
out
xlat
xor
shlb
add
fidivl
adc
aaa
icebp
add
and
or
or
lea
insb
add
add
repnz
or
sbb
cltd
rolb
pusha
aas
leave
lds
rcrl
push
jle,pn
mov
fsubrl
test
cmp
pop
mov
sub
adc
lods
or
popa
loope
mov
loope
pop
sub
mov
mov
cmpl
bnd
xor
lret
mov
test
xor
and
or
lods
inc
cli
into
repnz
push
sbb
mov
mov
jnp
add
aaa
pop
enter
insb
insl
mov
out
je
dec
add
bound
dec
mov
xchg
int3
hlt
jmp
cmpsb
les
xchg
mov
jecxz
xchg
xor
mov
push
xchg
adc
cltd
or
insl
pusha
cli
loope
aas
fadds
or
les
mov
movl
cltd
fiaddl
xchg
pop
inc
push
in
and
push
mov
push
sub
ss
test
pop
scas
stos
imul
daa
int
sbb
rcrl
idivb
adc
ds
mov
push
aam
add
imul
cmpl
adcl
mov
mov
out
xchg
data16
or
push
fsubp
push
and
xchg
and
test
mov
je
addr16
cli
notl
rep
out
inc
add
test
insb
fadds
ret
jne
sbb
mov
fsubrs
jl
pop
fisubrl
jp
sahf
add
xchg
pop
xor
pusha
xor
clc
int3
lahf
jnp
xor
sahf
gs
loope
std
outsb
add
repz
in
test
adc
jbe
jb
sti
and
sbb
sti
sub
ljmp
mov
aaa
nop
stc
mov
sarb
test
in
xchg
xor
ja
int3
arpl
adc
add
gs
imul
and
or
mov
out
lods
pop
cld
imul
xor
push
mov
sti
insl
and
dec
mov
je
adc
xchg
in
dec
popa
ret
fiaddl
pop
aad
pop
ja
shl
jmp
jecxz
test
mov
cltd
lds
sub
push
iret
push
xor
jg
roll
scas
mov
call
hlt
in
jno
mov
xchg
and
jmp
push
shll
iret
into
dec
cmpsl
popa
mov
xor
mov
inc
cwtl
aas
fimuls
jp
cmp
inc
pop
xchg
add
jge
insl
cmpb
mov
int
out
insl
adc
mov
roll
add
mov
dec
xchg
mov
gs
or
stc
mov
jmp
mov
int3
xor
pop
sti
or
test
and
inc
inc
add
pop
popa
loope
lahf
mov
lods
push
xchg
or
fsubrl
inc
cmp
gs
in
test
call
cmpsl
dec
cmp
and
insb
sbb
jae
imul
fwait
jle
shll
inc
idivb
ljmp
and
add
loopne
push
sub
mov
fst
cli
and
aas
hlt
sarl
das
imul
mov
mov
loopne
fadds
pop
pop
push
mov
xor
dec
test
pop
jbe
jp
inc
push
pop
push
jns
mov
sarb
ret
xchg
popf
push
stos
mov
imul
test
sbb
lods
out
imul
mov
out
mov
inc
sub
mov
aas
dec
bound
loopne
fdivs
loop
xor
add
loopne
xor
mov
xlat
inc
aas
sub
mov
mov
outsl
sub
daa
repz
xchg
adc
jbe
mov
pop
and
add
xchg
xor
sbb
sub
gs
jne
xchg
pusha
inc
jmp
push
jb
cmp
pop
out
ret
lcall
in
ret
scas
pop
js
push
xor
cmp
ds
mov
sti
push
ja
pop
xor
ljmp
shr
xor
addl
sti
pop
popl
sti
insl
mov
push
push
mov
jmp
aas
jl
cmp
sub
sbb
jle
sub
bound
js
mov
pop
jmp
push
cmp
sbb
cmp
mov
notl
aaa
cmp
xchg
in
sbb
mov
sbb
dec
and
cmpsb
inc
mov
and
pop
aam
int
test
push
adc
sub
popa
jbe
out
addb
aaa
mov
jae
cmpsb
cli
mov
pop
xchg
fbstp
movl
xchg
mov
repz
dec
pop
call
mov
aas
xlat
or
mov
filds
ret
cmpsb
jecxz
stos
cmp
push
push
lret
repz
xchg
jg
leave
push
imul
xorb
lea
push
xchg
push
dec
add
leave
sbb
jl
add
subb
jl
inc
sbb
inc
fcompl
cmpsl
repz
and
mov
and
jns
shll
xor
push
add
int3
mov
pop
fcmovu
repz
scas
xor
sbb
loop
bound
push
mov
in
popl
or
test
dec
cmp
fsubl
push
es
int3
push
movsl
mov
pushf
xor
enter
mov
loopne
cmpsl
push
fdivr
sbb
inc
daa
outsl
pop
mov
cmp
fdivr
jge
pop
out
les
mov
test
lret
or
push
iret
jle
data16
cmpb
push
pop
cld
mov
xlat
push
arpl
clc
sbb
hlt
call
mov
jge
lods
xchg
jae
mov
and
sub
stos
les
js
call
insb
js
fnstsw
dec
mov
mov
aam
cltd
movsl
sti
mov
adc
lahf
mov
sub
flds
xchg
cltd
add
mov
cmp
sti
pop
xchg
jbe
jp
popl
xchg
lock
leave
and
mov
arpl
mov
cs
call
mov
mov
mov
imul
nop
std
xchg
imul
mov
movsl
gs
push
mov
divb
cmp
gs
cmpl
push
neg
push
xchg
sar
dec
enter
iret
push
dec
mov
sbb
jge
adc
jb
test
jo
lods
fdivrl
jle
cmc
cmp
ret
inc
test
icebp
movsl
data16
sub
mov
bound
pop
sahf
sub
inc
rcr
fsts
push
sub
dec
in
stos
sahf
sub
dec
jl
xchg
popa
inc
sbb
push
xchg
test
push
int3
dec
lahf
inc
shl
mov
dec
loope
xchg
add
scas
adc
inc
xchg
mov
addl
aas
aad
sbbb
pop
jbe
dec
clc
or
jo
popa
xchg
out
lret
sarl
fwait
outsl
push
cmp
jg
jne
sbb
inc
sbb
sub
nop
dec
sbb
xorb
lcall
orl
mov
mov
add
adc
insb
jmp
scas
rcr
mov
std
dec
movsl
imul
js
in
loopne
sub
mov
or
xor
pop
xchg
arpl
std
ret
jl
idivb
mov
rorl
sbb
popa
adc
shl
xor
fisubs
jb
mov
stos
pop
outsb
mov
sbb
in
pop
cmp
add
fstl
pop
sarl
pop
ret
faddl
push
push
pop
popf
rcll
cs
pop
stos
inc
or
imul
sub
dec
out
dec
cmp
jge
sub
repnz
rep
pop
xchg
adc
test
push
aas
mov
enter
or
mull
cmpsl
in
add
mov
lods
push
push
mov
xor
mov
inc
pop
in
mov
mov
and
pop
rorb
cmpsb
ficoml
pop
clc
popa
mov
pop
xor
inc
and
dec
sub
jle
jbe
xchg
xor
mov
xchg
gs
hlt
pop
lahf
lret
lea
imul
add
aaa
mov
sbb
int3
mov
sti
cmc
loop
bound
jns
jnp
pop
imul
out
xchg
lods
sbb
pop
popf
mov
rorl
int3
push
outsb
fnstcw
pcmpgtw
mov
xor
xor
xlat
mov
cmpsb
mov
fucomi
in
sbb
push
push
add
push
xchg
shr
xchg
stos
cmp
sub
cmpb
inc
sbb
adc
dec
sub
add
xchg
mov
imul
out
fyl2x
mov
out
sarl
test
xor
cmpsb
imul
lods
fildll
and
adc
adc
jbe
mov
sbbb
call
mov
xchg
in
jmp
inc
jbe
arpl
addr16
movsl
push
sub
dec
dec
stos
movsl
aaa
ficoml
dec
idiv
inc
hlt
bound
push
loope
xor
pop
mov
sub
mov
test
cmc
sbb
shrl
and
xchg
mov
sbb
inc
aad
lods
stos
and
add
lahf
gs
adc
mov
lahf
cwtl
mov
mov
pop
adc
int
mov
push
jno
fldenv
into
cmp
cmc
or
push
ja
inc
mov
push
mov
mov
cmp
into
mov
ret
mov
cmpsl
outsl
imul
jp
std
xlat
xor
stc
pop
sub
mov
les
test
mov
daa
inc
stos
movsl
icebp
and
push
cld
lcall
movsl
jmp
stc
rclb
lds
stos
js
pop
movsl
inc
je
and
shrl
dec
fmulp
rcrb
call
or
movsl
push
or
cmp
call
xor
test
pusha
pop
jno
cwtl
adc
aas
ja
xchg
mov
and
jle
andb
mov
loopne
pusha
add
out
add
xor
std
sub
into
inc
mov
gs
push
dec
push
cmp
es
fisubrl
loop
ljmp
test
mov
mov
call
outsl
or
jg
pop
fwait
jb
imull
sub
sbb
push
adc
add
loopne
movsl
cltd
dec
out
outsb
into
xchg
rcll
mov
cmpsb
rcr
fisttpl
lret
jno
jg
les
pushf
int3
push
xor
adc
adc
mov
ja
addl
bound
fcmovnbe
sbb
xor
cmpsl
sub
lcall
mov
inc
aad
dec
push
adc
lea
out
rolb
xorb
dec
cmp
mov
les
mov
or
inc
fwait
add
jo
loope
pop
pop
or
mov
and
xchg
cmp
fs
out
add
dec
aam
xorb
jg
daa
movsl
sub
mov
shll
sub
add
add
jecxz
xchg
pop
ds
lock
mov
icebp
ja
sahf
inc
sbb
jmp
or
nop
fxch
jae
inc
sbb
popa
repz
mov
cltd
lods
ja
sub
mov
pop
xor
inc
mov
mov
and
repnz
std
sub
jle
adc
jno
cwtl
orb
add
mov
bound
mov
shrb
mov
out
ja
lock
scas
sarl
pop
stos
mov
cli
mov
inc
pop
cmp
push
push
in
pusha
aaa
test
mov
xor
test
movsbl
mov
mov
mov
jle
dec
cmp
or
jg
jle
sarb
ficomps
mov
add
stos
cmp
out
out
jmp
mov
std
xor
ja
ss
add
jecxz
mov
fsubp
aam
pop
pop
fidivrs
les
cwtl
dec
fwait
jo
mov
pop
bound
pushf
adcb
mov
ficomps
scas
xchg
out
fwait
jmp
mov
aam
sbb
add
jo
sbb
ret
push
imul
gs
repnz
cmp
pop
push
fiaddl
or
cs
pop
and
sbb
repz
xchg
sbb
nop
cmpsb
pop
test
push
jo
sbb
xchg
xchg
mov
inc
mov
ja
fwait
sub
and
jns
enter
sbb
fs
and
inc
ficompl
jne
or
pop
push
xchg
mov
cmpsb
mov
cli
mov
add
jns
pop
js
or
cli
lea
bound
int3
neg
and
outsl
mov
mov
dec
push
add
movsl
adc
test
sub
lret
sbb
push
xor
cmpsb
ret
inc
pop
idivb
xchg
mov
push
xchg
cmp
pusha
cmp
dec
and
cmc
push
dec
sub
mov
lcall
dec
jmp
adc
add
xchg
lcall
sbb
mov
pop
jl
and
fsubs
push
negl
call
cmpsl
mov
subb
rorl
jo
and
or
dec
mov
xchg
xchg
insb
mov
pop
movsl
pushf
ret
outsb
test
mov
jnp
in
push
int
ret
lcall
mov
sbb
andl
mov
pop
and
jns
fists
xchg
jno
sbb
pop
sub
xor
cmp
scas
daa
pop
push
daa
aam
das
push
je
dec
decb
lock
lea
flds
lods
in
cmp
hlt
lahf
sub
in
xchg
jne
int3
imul
xor
adc
xor
sbb
inc
xor
fdivs
in
sub
push
pusha
cmc
insb
cmp
jmp
in
mov
add
jnp
aas
popf
pop
daa
push
mov
scas
add
fisubrl
lods
sarb
test
je
and
jnp
pop
das
fiadds
dec
ds
inc
mov
cmp
scas
imul
out
lcall
xchg
inc
xor
insb
mov
pop
pop
mov
cmp
aaa
outsl
cltd
lods
cmc
pusha
ljmp
pop
push
cmp
imul
test
mov
sbb
or
adc
popf
or
fs
mov
movsb
rclb
mov
xchg
sahf
mov
das
lret
mov
sarl
pop
lock
pop
je
fadd
and
ret
dec
dec
or
mov
out
das
cmp
clc
mov
dec
sbb
mov
pop
orb
call
sti
leave
stos
mov
inc
pushf
out
test
dec
pminsw
aam
out
movsl
iret
add
pop
popa
fnstcw
cmp
or
fisttpll
mov
pop
das
and
jbe
or
jge
shlb
daa
faddl
mov
dec
sub
in
xchg
fcmovnbe
orb
sub
movsb
xchg
andl
pushf
inc
and
or
in
adc
sbb
stos
rcr
imul
sub
add
mov
xor
add
jne
xor
out
rcl
js
jl
mov
adc
out
sahf
xchg
mov
rcrb
pop
addr16
repnz
jl
jbe
push
bound
mov
out
jmp
and
mov
fcompl
test
pushf
mov
test
stc
cmc
sahf
push
xchg
sub
ficomps
mov
loop
fisubs
scas
cmpsb
shll
dec
dec
or
jo
pop
push
sub
ja
rorb
mov
jp
or
in
loop
ds
xor
xchg
orl
cmp
dec
in
in
daa
pop
add
loopne
std
sub
out
stos
push
cli
dec
or
lods
fcoms
lock
adc
sbb
pop
int3
xlat
sbb
cmp
or
insl
data16
movsb
nop
lret
andl
test
jecxz
adc
jns
div
push
rolb
pusha
stos
jnp
pop
dec
outsl
mov
pop
mov
ret
cmpsl
negb
dec
xchg
scas
in
add
loope
jno
enter
mov
add
xor
out
lods
shrl
or
sbb
nop
mov
decb
loope
mov
mov
cmpsb
fsubrl
pop
sbb
iret
movntq
out
push
jno
push
test
pop
aad
xorb
rclb
xchg
aaa
or
repnz
jns
in
mov
and
mov
imulb
sbb
stc
xchg
test
popl
int
mov
inc
lahf
inc
and
hlt
leave
adc
enter
xchg
dec
mov
pop
stos
mov
mov
sbb
mov
adc
push
push
fstpt
setge
sbb
dec
adc
xchg
push
add
lea
popf
and
lret
cmp
rcrl
mov
sbb
and
push
add
daa
and
rorl
stos
aaa
sub
inc
cmpsl
das
push
jo
sub
fnstsw
push
add
dec
xchg
mov
xchg
and
xor
in
inc
cltd
mov
xor
dec
not
nop
xchg
mov
xor
mov
out
cmc
and
mov
rcrl
pushf
xchg
stos
bound
dec
sbb
mov
jle
movsl
mov
push
test
mov
mov
mov
jo
movzwl
inc
dec
inc
ss
sarl
js
subb
mov
xor
push
icebp
lret
int
jge
shlb
inc
or
je
pop
inc
pop
or
cmpsl
and
mov
xchg
pop
sub
test
int3
popf
sbb
adc
dec
std
and
inc
xchg
xchg
andb
subb
scas
lods
push
inc
pop
test
dec
mov
jmp
xchg
fwait
or
cmp
imul
jo
bound
mov
pushf
push
or
jmp
loop
adc
xchg
stos
or
add
xor
out
stc
xor
in
jbe
imul
stos
ja
shll
packssdw
enter
xlat
xchg
inc
outsb
in
pop
mov
adc
nop
push
sar
ljmp
seta
int3
es
cmp
mov
repnz
dec
repnz
sbb
cmp
and
xchg
push
les
outsl
mov
lret
repz
jae
xchg
inc
or
cltd
xlat
repnz
fsubs
xchg
inc
and
les
push
lret
das
rolb
jp
movsb
add
daa
pop
int3
icebp
in
int3
movsb
icebp
mov
cmp
out
push
leave
mov
and
movsb
sti
loope
ja
fimull
jae
dec
or
xor
popf
clc
mov
xchg
mov
jno
shl
and
sar
loopne
cmp
jbe
les
push
rcll
fbstp
fprem
xchg
ret
movsb
sub
mov
loope
aad
mov
or
inc
xor
lock
mov
int3
mov
push
push
mov
jp
out
xor
or
mov
ds
pop
inc
jbe
push
pop
mov
add
mov
fmuls
jne
cmp
loop
movsl
xor
cwtl
pushl
int3
shll
sbb
xor
adc
hlt
cli
fmull
out
dec
push
sbb
add
push
dec
subl
adc
xchg
xchg
sbb
or
add
adc
push
adc
xchg
in
es
push
sub
jo
nop
ficoms
fdivl
and
out
or
dec
mov
jecxz
jno
in
push
ret
sbb
addr16
cld
test
cmc
dec
dec
dec
ds
pop
pop
inc
mov
in
sbb
das
jecxz
fcoms
pushf
adc
sarl
sbb
int
fisubrl
pop
jbe
and
xchg
add
rclb
mov
pop
out
xchg
aas
lret
adc
dec
arpl
into
or
xor
cld
sub
mov
pop
push
cmp
inc
std
push
testb
dec
xchg
scas
or
movsl
clc
pop
out
bound
shll
dec
je
mov
push
rcll
inc
loop
rorl
jae
data16
repz
loope
stc
pop
out
rorl
aaa
shlb
add
loop
jo
pop
testb
jl
jl
add
test
stc
push
outsb
push
popf
scas
cmp
push
bound
test
inc
jge
mov
flds
dec
rolb
inc
jle
jns
jne
cmp
mov
fldcw
nop
nop
inc
test
js
jno
jge
push
divb
test
add
mov
call
outsl
sti
mov
xor
js
sub
or
mov
fldt
sbb
xlat
mov
lods
lahf
dec
xor
push
jp
aad
sbb
cli
bound
jge
fadd
mov
xor
xor
push
jmp
pop
sub
cltd
lods
call
out
ja
pushf
test
ret
ret
es
lahf
sti
loope
sahf
sub
inc
push
pop
aad
test
jns
inc
sub
cli
je
outsb
mov
mull
test
sbb
xchg
shl
out
xchg
xorl
or
sub
lea
cld
cmp
xor
mov
mov
fsubr
test
mov
sbb
loope
mov
cmp
sub
out
xchg
and
mov
js
dec
cli
inc
push
lods
dec
outsl
scas
inc
and
push
sub
mov
push
xorl
push
rcl
push
imul
scas
jg
aam
je
push
iret
je
das
sub
sbb
sti
xor
xchg
cltd
xor
movl
jno
cmpsl
jae
daa
xor
sub
cmp
push
add
adc
xchg
xor
orl
ret
leave
mov
cs
dec
xchg
push
cltd
mulb
add
jo
mov
sbb
loop
dec
sub
lcall
add
jg
push
cmpsl
or
icebp
xor
and
lahf
mov
lahf
mov
out
addr16
mov
xor
mov
iret
pop
iret
pop
std
cli
loopne
jns
fdivs
scas
icebp
fldl
cmp
dec
adcl
xor
jno
mov
or
pop
leave
push
pusha
loop
sub
sahf
cmp
inc
call
dec
stc
xchg
jbe
push
nop
lcall
pop
leave
insb
jge
mov
mov
sti
push
stc
divb
pop
out
shrl
mov
cs
iret
call
sub
fwait
mov
lds
add
mov
xchg
imul
in
fisubrl
mov
jno
push
adc
mov
hlt
lock
scas
mov
pop
repnz
out
sbb
adc
lret
out
aaa
inc
subb
movsl
adc
scas
int3
subb
adcb
cmp
xchg
pop
in
inc
fldl
mov
das
pop
xor
imul
sbb
ret
xchg
inc
adc
fldenv
mov
dec
sub
ret
out
jbe
rcll
inc
sub
mov
push
cmp
bound
insb
outsl
dec
inc
outsb
enter
adc
pop
shr
adc
sahf
pop
jnp
or
lods
negl
pop
out
mul
mov
mov
adc
lods
inc
sbb
push
cltd
xchg
sbb
rolb
mov
inc
cwtl
pop
leave
gs
dec
sub
test
cwtl
sbb
cs
jmp
loopne
cmpl
pop
leave
repz
movsb
xchg
fs
sti
popf
enter
lock
loope
push
andl
cmp
cli
loop
and
out
mov
int3
xor
lea
aad
push
out
sub
adc
ja
aaa
clc
scas
imul
mov
ja
add
sub
push
out
daa
pop
repz
repz
sub
sub
test
nop
mov
mov
lret
add
jbe
mov
incl
and
sarl
call
inc
sub
out
adc
push
dec
fwait
mov
mov
rorb
push
test
push
push
out
daa
test
push
in
pop
mov
or
ret
scas
add
sub
insb
scas
pop
mov
inc
and
push
push
rcll
pop
xchg
inc
pop
aam
xor
cmpsl
pop
jp
mov
lret
lods
mov
std
aaa
sarb
jecxz
lods
jno
jne
fsubp
fcoml
cmpl
mov
mov
mov
inc
inc
sub
pop
sbb
out
incb
cmp
mov
dec
cli
nop
fidivrs
mov
fcompl
jae
mov
shlb
pop
cltd
cmp
pop
dec
or
add
adc
in
mov
xchg
pop
frstor
ja
pop
sub
sub
popf
fiaddl
cmc
aas
stc
push
roll
adc
or
or
int
dec
jns
out
fists
neg
jo
jge
in
or
inc
xchg
push
gs
arpl
add
sub
jb
lods
mov
cmp
mov
ja
cmp
inc
jp
cwtl
loopne
xchg
lea
daa
ret
fwait
fs
mov
sarb
jl
cmp
call
mov
pop
mov
aaa
xchg
xchg
cmp
or
dec
jnp
fsubrp
mov
sbb
push
and
jbe
jmp
dec
mov
arpl
push
add
push
push
leave
popf
mov
sbb
or
cwtl
daa
or
stc
fnstsw
out
mov
sbb
mov
fnstcw
mov
fstl
es
les
push
pusha
movsl
clc
icebp
les
shr
roll
mov
ror
test
lcall
dec
sbb
ss
sub
adc
add
inc
xlat
cmp
popa
pop
or
jns
jecxz
mov
mov
jno
jno
out
icebp
outsl
dec
sub
loop
dec
sbb
les
mov
fdivl
out
add
movb
xor
repz
out
out
sub
adc
sub
fadds
xchg
mov
call
push
out
test
cld
loopne
popf
push
in
shl
mov
jo
sub
mov
cmp
xchg
daa
pop
dec
ja
adc
lods
fucom
idivl
imul
lods
movsb
ja
out
cmp
pop
mov
test
sbb
dec
xlat
jmp
mov
fwait
pop
ds
mov
aam
dec
cmc
pop
or
mov
sub
imul
cmp
xor
hlt
mov
aam
cli
xchg
push
inc
push
orl
dec
sti
in
cs
mov
leave
xchg
and
adcl
cmp
arpl
in
cmp
mov
sbb
aad
push
idivl
dec
push
ret
imul
xor
test
imul
xlat
dec
adc
jnp
add
sub
and
mov
pop
lret
les
dec
push
loop
dec
rcrl
outsb
push
jg
add
push
add
mov
cltd
or
sahf
cmpsb
pusha
faddl
jmp
ret
sbb
fs
fimuls
jle
dec
or
inc
xchg
jae
lcall
loope
jnp
cmp
dec
in
adc
test
sti
popf
shrl
jl
sahf
shll
cmc
iret
ljmp
and
inc
mov
mov
inc
nop
inc
lret
insl
mov
mov
out
leave
stc
sbb
or
lods
xor
icebp
nop
push
dec
ja
addl
mov
ds
loop
loope
push
into
dec
sbb
sub
sub
jb
jno
sarl
out
mov
adc
mov
insl
cli
sbb
repnz
xchg
sbb
mov
pop
sub
bound
mov
sbb
in
push
rcr
mov
in
pop
or
lds
ret
jns
add
add
or
mov
dec
rorl
icebp
cmc
sbb
daa
pushf
xchg
imull
das
aam
or
xchg
mov
lret
das
mov
insl
dec
xor
sbb
je
jmp
jp
out
push
pop
mov
pop
pop
ds
push
stos
testb
out
mov
cwtl
add
pop
xor
cwtl
add
ror
jae
mov
enter
jle
mov
push
scas
adc
push
jp
or
ret
clc
pusha
pop
dec
sar
xchg
nop
add
jmp
enter
push
inc
out
jmp
mov
fcmovu
jmp
es
rcrb
cmp
outsl
jno
ret
inc
xor
add
call
push
cmp
shlb
mov
cmc
repnz
add
popf
pop
ljmp
cwtl
cmpsb
mov
es
pop
adc
push
sbb
mov
jg
inc
stos
mov
cld
inc
inc
lret
cltd
dec
mov
mov
or
or
lcall
mov
cmp
fucom
adc
adc
inc
cmp
dec
jbe
pop
dec
cli
repnz
dec
inc
out
cwtl
and
xor
sub
out
mov
sahf
mov
stc
lea
adc
mov
jbe
outsl
sub
arpl
in
mov
cmp
es
sbb
push
mov
jne
mov
adc
dec
jp
add
in
adc
adcb
jl
push
sbb
mov
stc
addr16
jnp
in
push
jae
add
leave
cmpsb
jae
mov
sub
push
insl
out
xor
sbb
rdtsc
mov
push
lcall
push
repnz
add
push
scas
jg
int3
sbb
bound
add
dec
push
sub
sbb
js
push
jae
jl
sbb
icebp
push
lret
jno
and
cwtl
lret
out
jecxz
fbld
inc
cld
push
in
pop
imul
clc
adc
js
cwtl
aaa
testb
in
movsb
iret
daa
loope
sub
push
ljmp
cli
in
pusha
pop
movsl
dec
leave
cmp
jl
mov
fwait
mov
neg
aad
shlb
xor
fldenv
cmpsb
push
sbb
or
cli
sbb
xchg
or
sub
gs
lret
and
mov
sbb
cmc
loope
add
mov
sbb
or
icebp
and
scas
mov
fwait
dec
mov
pop
xor
dec
push
dec
push
popf
dec
call
imul
imul
adc
out
repnz
test
inc
push
xor
mov
mov
xchg
mov
loopne
addl
push
cwtl
in
mov
out
and
mov
xor
adc
fadds
inc
loopne
xchg
pop
jb
cmp
mov
in
mov
mov
insb
pusha
mov
mov
mov
mov
test
movsl
stos
popa
dec
jae
xchg
sub
jg
jne
leave
clc
mov
sub
adc
xchg
xchg
adc
mov
mov
and
pushf
outsl
sub
sub
sti
sahf
dec
push
popa
rclb
sub
mov
jl
cli
ret
cmp
cs
stc
pop
xor
pop
mov
sbb
sub
pop
cltd
or
push
enter
sub
inc
pop
sbb
outsl
add
call
shlb
dec
mov
push
loopne
dec
add
or
aam
push
xchg
xchg
stos
shll
ja
dec
incl
mov
movsl
fbld
pop
cltd
pop
mov
dec
fwait
cltd
adc
loope
cmp
nop
pop
sub
nop
int3
test
sub
ljmp
lahf
pop
and
int3
in
fildl
sub
pop
push
and
enter
sub
add
xor
mov
dec
add
in
jmp
push
pop
ret
dec
jmp
aaa
test
xchg
xor
pop
sub
dec
jb
xor
out
xor
or
cmp
xor
mov
cli
inc
cmp
xchg
mov
jno
cmp
test
das
outsl
sub
and
not
add
incl
pop
push
roll
push
adc
sahf
lds
shr
insb
jne
das
mov
sub
shrb
cmp
movsl
pop
jnp
mov
cmpsb
mov
stos
mov
pop
and
sbb
mov
mov
mov
cs
jae
adc
and
sbb
popa
mov
dec
loope
int3
cwtl
push
mov
mov
test
or
mov
xlat
or
mov
ret
or
xchg
xchg
cmp
stos
jl
cmp
adc
adc
mov
pop
je
cli
sub
ret
decb
arpl
in
hlt
test
dec
push
arpl
xchg
pusha
and
push
xchg
test
sbb
into
test
push
and
push
andb
push
ret
pop
xor
xchg
idiv
xor
dec
imul
frstor
xor
mov
or
mov
ja
push
rcrl
lahf
mov
xor
mov
fldenv
or
subl
cli
pushf
mov
mov
scas
cmc
push
andb
es
and
insb
mov
xchg
bound
push
dec
ss
int3
cmp
repnz
or
pop
jb
mov
in
fadds
dec
movsl
xchg
lea
mov
or
nop
test
aas
jae
call
cwtl
fstpt
mov
rcrb
add
test
cmpsb
jnp
sbb
mov
out
ds
test
lods
push
add
ret
mov
nop
or
stc
sub
pop
or
push
out
inc
shll
shrl
jne
push
icebp
cmp
mov
ret
adc
movsl
jb
imul
xchg
push
inc
dec
mov
pop
fiadds
mov
mov
rcll
int3
inc
xor
pushf
push
repnz
cmp
mov
pop
loop
fmull
jmp
dec
push
mov
inc
rcr
jae
adc
aas
and
out
push
mov
xchg
mov
xlat
jge
mov
das
or
add
std
outsl
out
lret
mov
push
mov
xor
mov
adcl
mov
imul
push
jmp
or
mov
test
cltd
sub
lahf
jle
mov
ss
loop
and
pop
lret
dec
bsf
mov
fucomip
mov
jae
in
sbb
fcmovnbe
fistps
je
xor
push
aaa
jecxz
xor
cmpsb
pop
mov
lahf
add
jnp
test
aad
inc
out
pushf
fcmovne
ds
movsb
frstor
sbb
cmpsb
add
cmp
jmp
in
pop
inc
xchg
inc
ljmp
pop
iret
stos
out
mov
adc
push
dec
ret
push
popa
andb
dec
push
sbb
or
leave
pushf
inc
shrl
cmp
mov
dec
mov
inc
aaa
movl
add
fstps
mov
or
vpacksswb
jns
fistpll
and
int
sbb
std
lds
scas
and
mov
and
xchg
leave
mov
lods
pop
inc
insl
icebp
pushf
mov
push
dec
xchg
pop
mov
push
mov
sbb
std
pop
fmulp
lods
pop
push
add
or
xchg
pop
pop
cmp
aas
xor
in
mov
std
movsl
add
pop
xor
mov
out
ret
jno
mov
adc
std
xchg
iret
mov
sbb
or
incb
dec
pop
jle
add
inc
push
es
push
mov
mov
mov
add
jp
cmp
addr16
incb
mov
dec
lds
stos
loop
inc
push
or
outsl
push
fdivrs
subb
sarb
push
or
or
and
pop
inc
cmc
cmpl
mov
mov
sbb
shrb
sarl
or
lahf
xchg
pushf
pop
lahf
pop
jno
fcmovnb
mov
push
mov
in
out
and
enter
inc
idiv
in
insl
dec
out
enter
clc
and
xchg
adc
dec
lahf
insb
jae
xor
inc
lcall
sub
test
ja
pop
shll
dec
shll
jecxz
fidivs
loop
ss
leave
cmpsb
sub
mov
sbb
cmp
mov
repz
mov
cltd
pop
out
add
in
data16
add
fnsave
pop
dec
lret
push
lods
mov
pop
push
jmp
das
pop
ret
inc
test
aad
repz
in
jno
mov
enter
outsb
add
push
sub
cld
aad
jmp
push
lock
fcmovnbe
shll
ret
sub
mov
and
lods
jg
pop
ret
mov
inc
data16
push
xor
daa
add
adc
call
xor
inc
push
cmpsl
scas
pop
shlb
dec
nop
sbb
cmpsl
mov
movsl
xchg
ret
sub
lods
mov
repnz
xchg
add
jle
push
nop
stos
outsb
mov
xor
nop
xor
scas
mov
negb
idivl
xlat
jb
ret
les
stos
and
hlt
les
push
add
bnd
jnp
sub
imul
movsl
in
pop
xchg
ljmp
subl
mov
mov
dec
js
pop
int
and
lea
sub
movsl
jo
mov
nop
xor
sbb
cltd
rcr
ror
rcrb
retw
addr16
sub
jg
sbb
mov
subl
lret
adc
mov
loopne
mov
fstps
stc
pop
push
sbb
cmpsb
jbe
ss
jne
test
mov
out
push
push
jnp
xor
and
push
mov
lds
add
dec
jge
jae
pop
out
insb
pop
fs
xor
jmp
jae
movsb
mov
jmp
sbb
push
in
mov
inc
xor
into
fscale
cmpb
rorl
push
pop
shlb
imul
int
lock
imul
xchg
push
mov
fistl
clc
aad
jl
hlt
or
clc
addr16
lock
sti
xchg
lea
std
sub
mov
cmpsb
stc
pusha
push
repz
dec
mov
and
clc
outsl
xor
pop
sub
mov
mov
jl
fwait
ret
mov
cld
in
inc
sbb
mov
dec
jecxz
lock
rcll
hlt
dec
inc
mov
outsb
fdivl
push
js
and
insb
iret
cwtl
pop
xor
lods
or
outsb
push
mov
mov
orl
jno
xchg
filds
mov
negl
jb
jnp
lock
repz
jmp
int3
in
ret
pop
add
and
sar
add
out
inc
add
jmp
xchg
in
lea
sbb
mov
xor
xchg
movsb
fistl
pop
xchg
mov
arpl
xchg
and
lods
mov
call
mov
sub
andl
mov
pop
mov
sbb
stos
ja
adc
cmp
not
dec
out
mov
pop
incb
push
in
pop
pop
pop
pop
movsb
mov
cli
stos
test
and
cwtl
data16
or
sbb
movsl
popa
cmp
mov
lcall
xchg
inc
xor
leave
xchg
and
outsl
aam
lahf
inc
cmpsl
push
push
xchg
out
cmpsb
fwait
jne
dec
mov
and
pop
add
int3
insl
xchg
cltd
push
mov
int3
cmp
sbb
test
loope
mov
inc
ja
test
ficoml
mov
cmp
jne
xchg
and
sbb
adc
repz
xchg
jae
jns
lock
out
mov
sbb
push
daa
aaa
push
pop
xchg
mov
mov
ja
and
jno
mov
cmp
add
or
cmpb
dec
aas
les
jbe
jmp
jl
xchg
testl
lds
not
addb
mov
shll
rclb
mov
push
bound
fsubrl
jg
fistps
and
mov
es
dec
icebp
adc
iret
sbb
xor
mov
push
in
sti
push
in
scas
dec
aam
adc
pop
mov
aam
sub
xchg
loope
xchg
data16
xor
mov
inc
pop
dec
xlat
outsb
sbb
jbe
fwait
mov
adc
fsubs
or
sbbl
mov
loope
and
incl
lock
mov
clc
ljmp
cli
ljmp
jbe
sbb
insb
and
stos
dec
push
mov
mov
jb
lods
xchg
jg
add
in
jbe
testb
and
push
je
popf
mov
cwtl
insl
jae
rcll
push
ds
in
scas
xor
lahf
jbe
rcll
pop
push
cmpsb
mov
in
mov
outsb
cmp
add
cmp
pop
movsl
gs
xor
add
push
in
add
inc
out
out
aaa
or
add
xor
ja
sub
and
mov
fwait
jns
das
in
lret
gs
xchg
xchg
jbe
rcrl
push
inc
adc
jne
push
lods
iret
je
lret
lods
jne
mov
inc
imul
sbb
pop
lods
sbbl
xor
ds
in
ret
xor
out
cli
inc
mov
mov
mov
xchg
out
sbb
and
repnz
test
add
jle
dec
push
out
sahf
lods
mov
test
add
jl
btcl
jge
cmp
or
ret
divb
movsl
pusha
cmp
fadd
loope
ja
xchg
movsl
lcall
icebp
in
js
and
cli
push
daa
xchg
sub
inc
sbb
jnp
lds
mov
pop
outsl
loopne
pop
scas
mov
lods
imul
jg
dec
or
adc
and
jmp
xchg
mov
inc
inc
xor
dec
xchg
scas
add
adc
xlat
and
lret
xchg
xor
inc
sub
aas
jb
cmc
scas
int3
mov
xchg
cmp
cmpsl
cmp
jb
outsb
aam
in
lahf
aaa
xor
fdivl
and
pmulhuw
fistpll
stc
das
nop
xchg
fidivrs
or
adc
inc
jle
daa
pop
xchg
push
outsl
pop
nop
mov
rcrl
adc
add
stos
mov
lods
jb
cmp
out
mov
stos
test
jne
rep
sbb
and
ljmp
mov
cld
xchg
dec
aas
cmp
or
push
sub
jg
jge
sbb
ret
js
jl
outsb
push
into
ret
mov
and
or
push
jl
jne
push
scas
andl
rorb
mov
stc
cli
xchg
leave
clc
insb
in
jbe
xor
out
push
int3
jns
daa
sahf
mov
popf
in
cwtl
ucomiss
loopne
and
mov
out
adc
sbb
insl
sti
xchg
std
xor
es
pushf
jg
mov
addb
push
push
adc
push
lret
ds
jecxz
jnp
mov
adc
fcmovnu
aad
sub
add
lods
or
add
xor
pop
arpl
lcall
stos
pusha
testl
or
mull
call
add
pop
dec
pop
dec
xor
jl
mov
out
jb
mov
mov
sbb
pop
inc
pusha
fistpll
pop
movsb
or
and
mov
push
mov
mov
je
xor
mov
int
jae
push
push
and
inc
iret
cld
fst
sbb
mov
andb
and
cli
addl
add
lock
mov
cs
add
mov
cli
xchg
daa
mov
xchg
push
call
dec
lcall
pop
add
int
nop
iret
rcl
mov
add
add
jno
cmp
pop
scas
sbb
fdivrs
push
inc
add
jecxz
pusha
neg
sub
mov
fldenv
xchg
push
jne
bound
cld
stos
in
imul
pop
adc
xchg
in
in
in
jns
arpl
mov
cwtl
and
dec
icebp
adc
push
xchg
pop
jle
mov
add
adc
jno
dec
in
dec
popa
jmp
cmc
adc
mov
xor
ficompl
add
push
or
mov
ret
xchg
pop
dec
inc
mov
mov
lcall
jp
outsb
jecxz
cmp
push
pop
sub
mov
push
das
xchg
dec
je
jp
jbe
lods
xor
xor
bnd
pushl
pushf
fiaddl
jecxz
xchg
xchg
dec
dec
jo
fnstsw
push
enter
gs
and
in
popa
xor
lret
nop
fisttps
movsl
cmp
or
pop
push
xchg
shlb
test
xor
sub
out
imul
push
or
lea
outsl
pop
jno
push
and
enter
ds
or
lahf
and
mov
push
and
dec
test
jle
lret
sarl
daa
add
adc
pop
mov
push
shll
push
sar
out
aad
adc
jae
push
sbb
mov
mov
mov
bound
data16
loope
daa
pop
int3
pop
mov
std
adc
sub
int
mov
std
nop
dec
es
frstor
adc
xor
into
jle
gs
hlt
les
loopne
ds
repnz
add
bnd
pop
lret
in
push
test
mov
or
or
push
cmpsb
lret
mov
cmp
jae
push
insl
cmpb
in
or
data16
or
mov
nop
loop
push
sub
jbe
into
xchg
test
popa
adc
repnz
test
fnstcw
adc
mov
or
insb
mov
ds
movsl
mov
push
ljmp
nop
es
lret
mov
stos
xchg
or
push
arpl
test
fisttpll
cmp
faddl
sbb
arpl
pushf
rolb
lds
or
loop
daa
push
lods
fidivs
add
mov
and
cmpsb
jb
in
push
adc
mov
ljmp
ret
popa
adc
push
mov
aaa
shl
clc
inc
and
push
out
adc
xor
fs
lret
or
je
adc
mov
cmpsl
mov
inc
dec
dec
in
mov
xlat
cmp
popf
adc
movsl
adc
cmp
cli
sub
daa
dec
or
pushf
inc
in
xor
aas
sbb
lcall
cwtl
inc
loopne
inc
xchg
inc
es
popa
btc
dec
cld
movb
in
jae
fcomip
rcrb
push
jge
pop
sti
aas
mov
loopne
fdivl
je
popf
ljmp
dec
repnz
frstor
or
adc
add
xorb
in
pop
rorl
pushl
shrb
adc
inc
popa
call
repnz
jno
push
ret
mov
mov
cmp
inc
testl
push
mov
or
adc
xchg
xchg
add
xchg
test
fs
adc
adc
lock
sbb
pusha
fiadds
adc
xor
lret
ret
icebp
mov
sub
push
adc
rcrb
mov
jg
cmp
xchg
adc
cmp
mov
adc
sbb
xchg
jne
stos
icebp
cmpsl
lea
adc
cmpsb
dec
cmp
loop
mov
sahf
iret
add
xchg
call
loop
adc
popa
adc
cs
inc
fistpl
dec
add
fwait
outsl
lock
dec
mov
adc
dec
sub
inc
cwtl
lcall
in
dec
std
ljmp
mov
xor
pop
xchg
fistps
push
sbb
dec
loopne
outsb
xchg
int
stos
pop
jno
sti
jecxz
inc
and
sahf
add
nop
push
sar
xor
sub
bound
scas
cmp
xor
data16
xorl
sub
ss
rcrl
sbb
ds
sbb
add
lret
cld
fiadds
jmp
pop
xchg
ja
adc
pusha
xchg
cmp
or
and
mov
cmc
push
shl
leave
add
or
fists
cmpsl
stos
jecxz
call
mov
loop
in
pop
jb
cmp
and
cld
dec
jge
lods
and
inc
pop
movsb
mov
aad
sbb
rorl
sub
pop
scas
cmp
mov
cmpsb
in
lock
mov
pop
sbb
adc
add
cmpsl
sub
dec
fldt
lods
lods
fistl
lahf
pop
mov
mov
test
cmpsl
mov
xchg
cli
sbb
xor
in
enter
sbb
xor
cmp
daa
cltd
test
pop
ret
cltd
rolb
adc
ja
outsb
hlt
mov
jne
inc
jbe
adc
xor
out
jge
addr16
mov
jg
push
dec
shrb
push
and
out
pop
lcall
popf
jnp
sbb
xchg
dec
pushf
lods
xchg
dec
jle
lock
push
sub
arpl
out
cmp
jne
dec
xor
lcall
xchg
or
push
mull
pushf
lock
push
dec
xor
fidivs
stos
cmpsl
sbb
inc
testl
mov
in
test
add
mov
adc
std
incl
mov
mov
arpl
xchg
pop
test
les
sub
inc
fisttpll
mov
adc
xchg
mov
lahf
dec
subb
sbb
inc
xchg
sbb
sub
mov
shll
inc
sub
imul
imul
xor
in
dec
scas
daa
es
ret
cli
sahf
or
mov
sbb
xor
loopne
mov
ficoms
int3
push
adc
push
sub
ret
xchg
xor
loope
mov
inc
out
xchg
jecxz
sub
xor
js
add
adc
and
mov
subb
mov
xchg
adc
push
popf
imul
pop
rclb
loope
xchg
clc
jp
bswap
out
mov
test
inc
pop
in
mov
mov
mov
mov
ds
rorb
push
xchg
mov
roll
jb
cltd
or
popf
dec
adc
mov
stos
rolb
rorb
push
mov
cmpb
mov
movsb
subb
lds
lea
xchg
cmpsl
rcrb
das
pop
dec
jge
push
popf
mov
insl
xchg
scas
imul
add
shrb
fmul
cld
xchg
adc
popa
loope
sbb
out
mov
mov
sarb
fdivrs
add
shll
jb
push
fcmovnb
pop
adc
jo
sbb
xor
jo
mov
addl
jo
cmpsl
jmp
in
cmp
mov
pop
bound
xor
outsb
sti
adc
addr16
outsl
inc
mov
aas
jl
sub
pop
gs
ljmp
push
cld
ss
mov
nop
lret
mov
bound
jmp
adc
neg
add
aaa
int
push
sub
jge
pop
data16
and
lods
scas
and
lods
fisubl
xor
push
cmpsb
mov
push
mov
sbb
sbb
loop
gs
fs
sarb
inc
xor
lcall
rcll
dec
inc
adc
insb
repz
jecxz
add
mov
rorl
lods
outsb
cmc
les
movsb
mov
imul
push
sub
into
jb
sub
mov
test
sub
outsb
push
aaa
sbb
gs
mov
sahf
int3
lea
mov
cltd
cmp
ret
fldl
in
push
and
or
jge
inc
adc
not
repnz
fistps
jno
stos
mov
movsl
imul
arpl
aas
push
jmp
push
or
adc
pop
jecxz
stos
pusha
movsb
repnz
aam
dec
xchg
sarb
add
idivb
adc
mov
push
xchg
jno
jecxz
mulb
cwtl
sbb
orl
or
adc
jge
mov
pop
jl
xchg
fimuls
out
or
cmpb
or
xor
xchg
pusha
jmp
lret
pop
xor
stos
out
jbe
push
mov
repnz
sbb
inc
stos
xchg
jg
popf
dec
dec
in
fwait
arpl
push
xlat
dec
test
pop
lea
cld
adc
into
adc
mov
stos
andl
pop
push
lret
lahf
out
bound
mov
xlat
mov
cltd
cwtl
inc
xlat
das
push
cmp
xchg
push
and
rorl
popa
js
cmp
imul
xchg
lea
jl
pop
dec
scas
cld
pop
shlb
mov
mov
mov
out
jns
js
jle
test
sub
iret
cltd
popf
fidivl
lea
ja
lahf
cmpsl
leave
shlb
in
push
jb
xchg
jp
cmp
or
lods
mov
push
sub
add
jp
xchg
filds
mov
cltd
jne
mov
dec
sahf
mov
cmpb
xchg
push
mov
add
neg
sbb
fs
or
lahf
loop
cmp
ss
jno
imul
dec
mov
aaa
cmp
xchg
dec
lds
sub
xchg
shlb
nop
adc
fwait
mov
imul
outsl
sbb
out
ljmp
mov
out
mov
incb
out
add
cmp
lock
and
arpl
insl
pop
subl
xchg
shrl
lods
jg
mov
xor
dec
xor
mov
rcr
and
cmc
lods
xor
and
jge
das
loope
mov
repz
cwtl
jno
in
int3
push
xor
sar
in
shr
sub
out
int3
inc
les
popf
sbb
ret
clc
inc
shlb
lods
repz
js
insb
popf
add
cmp
lcall
sti
movb
aas
into
fidivs
or
dec
std
call
push
frstor
adc
popf
sub
push
lcall
pop
test
jne
jmp
or
or
lock
jns
pop
idiv
push
mov
aad
mov
sbb
sti
and
jmp
in
jmp
cmp
outsl
scas
pop
pop
popa
in
xchg
push
iret
mov
mov
int
hlt
lock
shll
sub
jb
sbb
mov
das
and
aas
add
das
rcrl
dec
ret
sbb
pop
inc
stc
inc
inc
fildll
out
fwait
adc
pop
ljmp
pop
out
in
movsb
mov
pop
jle
ret
dec
jns
jg
cli
cmp
call
jge
mov
inc
push
xor
pop
ss
xchg
enter
imul
pop
cmc
pop
shrb
test
cwtl
nop
mov
mov
rcrl
ret
pop
xchg
or
into
mov
xchg
pop
inc
cmp
inc
cmovno
addr16
mov
ss
sub
mov
sbb
and
movsb
mov
jno
outsb
sbb
add
cmp
leave
lret
push
ds
lret
add
aas
fwait
jle
adc
repnz
out
mov
push
sbb
cmp
stos
dec
aaa
adc
popf
cltd
pop
sub
and
popf
push
int
ficompl
xchg
push
and
mov
mov
adc
ud1
dec
add
xchg
dec
outsl
outsb
push
sub
movsl
bound
pop
pop
orl
imul
sub
mov
outsl
adc
scas
movsb
adc
jb
cmc
or
xchg
mov
std
mov
icebp
sub
jb
dec
dec
call
inc
push
jbe
iret
cwtl
xchg
inc
movsb
cmp
and
jbe
int3
adc
ss
xchg
xchg
std
js
inc
mov
cmpsl
adc
mov
subl
or
das
insl
sub
jb
mov
lock
mov
mov
push
pop
insb
out
mov
add
repnz
cmp
testb
popa
and
addb
add
add
dec
pushw
adc
negl
in
testb
lds
loop
mov
xchg
xchg
mov
iret
aam
test
sub
aam
mov
and
fstl
inc
int3
and
pushf
inc
xchg
pop
pusha
fsubrl
popf
andl
push
nop
repz
lock
xchg
cmpsb
dec
lods
push
ja
mov
mov
or
test
adc
mov
sub
add
pop
orb
push
rcrb
notl
test
add
mov
dec
xor
add
addr16
mov
mov
mov
push
aad
xchg
jecxz
sub
fistl
xchg
jae
pop
jecxz
push
test
ud2
jo
ljmp
sbb
fwait
loopne
xchg
xchg
test
cld
sbb
mov
test
test
stos
push
add
icebp
clc
pop
and
arpl
pop
or
addb
cwtl
mov
push
jg
sbb
push
xor
pop
jo
fsub
jne
xchg
xor
add
subl
fildl
push
clc
sti
xlat
popa
es
bound
stos
fsubr
int3
dec
mov
jp
test
xchg
imul
jae
aam
imul
out
adc
scas
int3
cmp
xchg
dec
or
loop
mov
addr16
xor
pop
mov
ficompl
scas
jno
mov
adc
icebp
sbb
adc
mov
in
jno
cmp
lcall
fs
test
insb
xchg
or
mov
fistl
jno
rcrb
inc
pop
cmp
arpl
mov
xor
out
pop
repnz
divl
nop
sbb
and
xchg
jne
shlb
outsb
int3
dec
pop
lea
jo
cltd
jl
jnp
xchg
in
sbb
cmp
scas
jno
xchg
cmp
or
jae
sti
mov
and
and
mov
icebp
xor
pop
fcmovnu
adc
mov
pop
mov
out
push
push
mov
ss
push
inc
jle
adc
pop
cmc
mov
xor
push
sbbl
iret
cmp
jo
call
rcrl
cmpb
lods
scas
rcll
pop
sbb
test
dec
out
push
in
mov
sar
imul
repnz
and
cmp
jae
pop
es
stc
or
lret
stos
rorb
std
xor
mov
mov
mov
pop
push
sub
adc
mov
mov
and
sub
sub
jb
lret
repz
push
and
jbe
pop
popa
inc
ret
cmp
dec
mov
mov
fdivrl
or
mov
aam
mov
lds
jae
jb
mov
js
dec
mov
dec
mov
in
pop
aaa
mov
push
adc
adcl
dec
xor
dec
cmpsb
adc
les
mov
in
and
mov
leave
xchg
pushf
or
outsl
push
cmc
jo
sbb
out
mov
jecxz
add
mov
leave
clc
pop
push
xor
mov
add
int3
sbb
arpl
mov
movsl
mov
pop
or
cli
stos
inc
aam
push
jp
decb
hlt
ret
lret
add
dec
inc
pop
out
rcl
add
jge
divb
add
out
cmp
das
lret
fnsave
cltd
adc
push
sarl
inc
push
shll
mov
fldt
fldenv
repz
pop
sahf
add
insl
imul
pop
lods
loope
imul
or
xor
fiadds
or
les
dec
nop
or
dec
in
xor
push
jp
jo
adc
mov
push
pop
adc
adc
cltd
mov
fmuls
xor
cmp
enter
std
ds
push
cmpl
andb
and
and
and
push
stc
inc
js
xor
pop
shr
xchg
dec
sbbl
in
daa
fdivs
and
shr
ja
cwtl
and
adc
shlb
insl
cmp
mov
fnsave
lcall
imul
ja
cli
jnp
pusha
inc
insl
lret
sub
push
and
cmp
adc
div
icebp
sub
lods
ljmp
es
cltd
mov
xchg
cmpl
mov
jno
lock
outsl
sbb
cmpsl
mov
lock
lret
aas
sub
daa
mov
int3
mov
push
cwtl
subl
repz
mov
inc
xchg
je
dec
xchg
movsl
xor
daa
inc
mov
sub
and
int
and
mov
dec
mov
dec
outsb
or
pop
repnz
std
cmp
fdivl
lods
jp
mov
xchg
in
cmpsb
dec
aad
jne
xchg
jp
ret
xchg
inc
mov
xorb
xor
jecxz
popl
cmpsl
jb
cmp
push
shlb
int3
or
icebp
cmp
jb
scas
cmpsb
into
xchg
lods
cmp
imul
std
inc
dec
add
popf
jne
push
sahf
stos
and
jle
into
cli
bound
iret
sarb
cmp
mov
and
fwait
xor
xchg
sub
adc
pop
xchg
sbb
lret
enter
js
pop
aam
mov
pop
xchg
out
adc
out
aam
jno
repnz
test
push
jae
repz
or
xchg
es
jmp
pop
mov
dec
out
test
jmp
decl
xchg
imul
cmp
jle
inc
repnz
xchg
cmp
mov
mov
pop
daa
test
push
or
lods
inc
cltd
mov
jnp
xor
add
add
cmpsl
jb
test
les
in
lcall
jo
adc
cmc
or
out
fprem1
mov
ret
push
jl
add
loopne
pop
pop
hlt
fisttpl
sub
out
leave
xor
mov
xchg
shrb
mov
popf
scas
outsl
nop
frstor
addr16
mov
lods
pop
and
pop
stos
outsb
mov
sti
in
add
fwait
mov
ficompl
xchg
std
sub
fadds
incl
nop
xchg
movsb
mov
sbb
negl
mov
ret
sbb
mov
mov
cmc
mov
cmpsl
adc
dec
negb
enter
push
inc
sbbl
inc
cmp
in
iret
and
dec
ds
mov
fs
pop
sbb
daa
pop
lods
or
jle
mov
cmp
mov
frstor
xchg
pop
into
cmpsb
cmpsl
int
rol
jge
ss
daa
iret
stos
ret
mov
mov
mov
sub
ret
cmp
push
andl
sbb
push
ds
cmp
xor
or
mov
sbb
or
mov
and
lret
add
sub
and
jle
fwait
out
clc
sbb
test
data16
int
or
mov
in
les
mov
add
rolb
popa
inc
and
and
mov
mov
and
shll
test
push
pop
xor
popf
or
sub
cli
outsb
lock
in
mov
out
jbe
insl
int3
in
mov
lret
int
popf
mov
incb
pop
jns
ret
sub
add
cmp
jnp
adc
xchg
push
in
add
xchg
pop
ds
je
mov
shrb
int3
mov
lds
inc
cmp
xor
testl
das
loopne
insl
sbb
mov
jmp
jne
hlt
incl
repnz
inc
add
cmpsl
sub
pop
addr16
jle
xor
imul
xchg
ret
jo
in
pop
pop
inc
popa
mov
mov
xchg
and
pushl
mov
push
leave
sub
lahf
iret
fistps
jns
adc
imul
or
scas
add
mov
jg
pop
mov
push
cmc
sub
push
test
mov
fnsave
dec
inc
push
jo
stos
pop
adc
pop
xlat
pop
arpl
pop
jl
lds
lret
push
movsb
es
pop
fiaddl
and
lret
pop
repnz
int
and
mov
fs
lcall
sbb
lods
cmp
or
xor
shrb
shl
jne
cs
movsl
pop
mov
mov
fisubrs
lcall
not
sbb
ss
cwtl
mov
push
cli
sub
cld
pop
test
add
ret
inc
jno
xor
mov
pop
sub
out
sti
push
imul
mov
loop
aaa
dec
or
and
cmpsb
pop
clc
or
adc
stc
outsb
jae
stos
cmp
nop
sti
mov
cmc
icebp
jl
enter
xchg
sub
addb
dec
mov
mull
and
shlb
dec
pop
adc
dec
pushl
xchg
cwtl
lcall
cltd
ja
cld
add
mov
movsb
fwait
ja
push
js
push
push
jo
leave
jo
push
aas
jge
sub
daa
fmull
sub
stos
mov
std
add
pop
out
xor
push
int
or
inc
outsb
and
nop
dec
add
sub
add
fstpt
mov
test
adc
add
cmp
or
lods
outsl
cs
es
test
inc
fdivrl
xchg
xor
pop
ret
adc
popa
iret
lods
shrl
out
cmpsl
mov
into
pop
jae
and
imul
repnz
test
and
jae
adc
xchg
adc
popf
sub
call
adcb
push
lahf
mov
aam
xchg
lcall
mov
adc
push
jp
addb
int
test
xor
stos
or
cmpsl
aad
adc
fwait
and
les
subb
or
pop
int
je
fists
gs
adc
xor
or
and
cmpsl
xchg
in
push
popa
push
hlt
adc
mov
roll
or
insl
push
jl
inc
fwait
sub
jg
push
ss
adc
dec
mov
and
arpl
sbb
push
outsb
xlat
jo
mov
ret
in
mov
inc
push
pop
in
inc
cmpsw
aad
jle
cmp
inc
or
dec
sub
sub
jnp
xor
add
ljmp
cmp
xchg
inc
xor
jne
pop
cmp
sti
dec
add
sub
xorl
pop
in
push
arpl
and
push
pop
es
adc
das
lods
or
repnz
test
mov
sbb
mov
mov
and
jecxz
push
icebp
xchg
jp
inc
cli
loope
fstpt
lea
and
decl
cltd
cmpsb
sub
mov
es
mov
daa
cmpsb
or
insl
jnp
pop
cmp
sub
adc
pop
loope
sub
push
push
jo
xchg
xor
das
pop
xchg
dec
in
movsb
shlw
mov
bound
mov
push
sub
xor
rolb
pop
pop
or
lods
push
gs
add
sbb
pop
daa
pusha
xchg
pop
enter
clc
cmp
xor
mov
daa
cwtl
mov
and
mov
leave
fimuls
cmpsl
and
nop
inc
add
push
insl
imull
nop
lods
xchg
or
add
add
pop
pop
add
push
pop
push
ljmp
fsubrs
pop
inc
repnz
shll
sbb
imul
jo
int3
fs
nop
inc
and
rcl
test
mov
test
adc
rcr
mov
js
sub
std
inc
xchg
xor
punpcklbw
test
fisubrs
fucomip
fwait
cmpsw
hlt
sub
cwtl
mov
xor
fisttpll
jae
ds
sub
ja
insb
jne
lock
cltd
dec
xchg
or
mov
sub
bnd
cmp
scas
xor
ds
aam
ds
mov
jnp
adc
pop
mov
or
or
cli
sbb
jecxz
adc
push
roll
add
fsubl
jmp
bound
dec
or
cwtl
xchg
mov
dec
jmp
loop
rcll
push
out
xchg
jp
ds
daa
pop
outsb
in
jnp
lock
dec
in
jne
xlat
stos
shrb
stos
ret
aas
gs
dec
dec
xchg
cltd
stos
and
mov
jno
gs
push
pushf
ret
xchg
xlat
inc
fcomip
add
lret
cmp
outsb
aas
out
in
pop
jno
jge
and
push
xchg
shlb
mov
add
fbld
fsub
and
loope
test
xchg
cmp
out
or
cmp
call
push
mov
out
xor
sbb
and
pop
cmpb
add
push
dec
or
cmp
scas
lods
or
out
inc
icebp
dec
loop
mov
lahf
push
je
jae
clc
lret
jmp
push
ret
sbb
std
shll
in
adc
sbbb
push
xchg
mov
scas
dec
push
decl
mov
pop
xor
imull
add
dec
ret
lret
roll
std
lcall
inc
inc
std
loop
gs
xchg
aad
xchg
push
gs
repz
and
xchg
mov
lret
bnd
cmpsb
mov
mov
mov
and
sbb
push
lret
dec
jl
lret
cmp
testl
or
sbb
popa
mov
iret
adc
in
test
dec
cmp
inc
mov
test
int3
and
mov
in
out
loop
in
sahf
pop
inc
add
divl
in
pop
aam
inc
lods
stos
dec
aaa
inc
clc
das
adc
clc
mov
and
cmp
add
mov
mov
cmp
into
lcall
sbb
stos
lods
lahf
xor
lea
js
lcall
push
pop
push
imul
push
adc
sbb
movsb
outsb
push
pop
or
jb
dec
add
adc
mov
in
add
stc
cli
adc
inc
push
mov
dec
push
inc
in
lods
push
out
inc
icebp
mov
loopne
scas
nop
cld
sbb
into
mov
xchg
push
scas
outsl
add
les
lahf
xchg
jne
aam
fldt
sub
clc
fnstcw
push
jl
mov
mov
addr16
aaa
xor
xor
push
into
push
sti
lock
dec
aaa
sbb
fnclex
iret
sahf
add
xlat
sub
ljmp
ror
out
mov
rol
pop
lcall
cmp
push
push
mov
fwait
cld
lds
jo
adc
sti
sahf
daa
mov
cmp
ret
cld
ret
repz
fs
or
es
and
cmpb
pop
je
inc
xor
dec
shrl
call
or
push
divb
and
gs
lods
out
sbb
iret
sub
cltd
mov
imul
jae
mov
test
push
es
pop
push
and
inc
mov
xor
lods
lds
test
test
xchg
dec
mov
pusha
sbb
jo
sbb
cmpsl
in
ljmp
pop
out
into
ss
popfw
popf
cltd
imul
insb
xchg
lcall
mov
jne
sbb
jge
push
jge
or
pop
sub
mov
sub
and
loop
mov
push
xchg
pop
xor
xchg
pop
aam
and
push
push
mov
in
pop
cwtl
jmp
sbbb
inc
pop
xchg
out
rclb
hlt
in
loopne
xor
push
inc
outsl
bound
mov
popf
ja
mov
hlt
xchg
stos
daa
dec
js
mov
inc
cwtl
inc
and
enter
aaa
xchg
xchg
mov
sahf
mov
xchg
cmp
add
mov
imul
in
dec
or
jecxz
push
mov
sbb
push
xchg
jge
mov
lds
scas
mov
pushf
mov
nop
imul
xchg
ja
jb
sub
sub
lds
fcmovnu
pop
mov
test
mov
add
jns
out
adc
in
in
bound
jo
and
xor
or
mov
push
push
cld
xchg
push
push
sub
or
mov
jmp
mov
xor
jo
add
stc
pop
sbb
xor
xchg
mov
shll
outsl
outsl
mov
mov
loopne
aas
mov
jb,pn
add
test
insl
push
mov
dec
xchg
shlb
fstl
jmp
xchg
or
rcrb
push
and
push
adc
movsl
pushl
cli
push
add
out
in
mov
testl
fildl
ret
ret
mov
push
inc
and
sbb
ss
lcall
xchg
or
pop
push
dec
cmpps
ds
ds
addr16
outsb
pusha
loope
sar
cmp
cmp
jg
outsb
jp
jg
pop
sbb
adc
in
repz
adc
out
enter
lods
fs
jl
cs
into
loopne
insl
sub
adc
mov
push
frstor
std
pop
sub
inc
subl
nop
int3
sub
inc
imul
pop
xor
cli
push
fldcw
jp
insl
push
test
mov
inc
inc
push
insl
loope
int3
ret
shll
sub
add
xchg
popa
cmc
sbb
adc
mov
and
mov
insb
data16
and
sbb
xchg
pusha
add
or
jp
xchg
out
and
test
rolb
jae
pop
inc
insl
mov
ror
subps
xchg
xchg
je
adc
lods
cwtl
ret
xlat
lock
je
mov
push
push
mov
jb
jae
cmp
je
fdivrs
add
xchg
fistpll
test
sbb
add
js
jae
into
in
in
lock
divl
pop
cld
xor
dec
and
lods
fstpl
sub
sub
adc
cwtl
int
adc
inc
sub
inc
mov
xchg
xchg
cmpsl
jge
jmp
mov
sub
mov
repnz
ret
mov
xchg
push
fisttpll
bound
push
mov
sbb
mov
sub
pop
test
xchg
mov
push
adc
rcl
test
iret
dec
imulb
jnp
add
loope
and
leave
test
and
and
mov
and
or
mov
or
push
or
xcrypt-cfb
cmpsl
loop
mov
mov
sbb
or
lock
xchg
push
aam
in
and
pop
ss
ja
pop
or
int3
popf
add
aaa
or
inc
stos
outsl
shll
popl
fstl
in
jns
loop
into
adcb
scas
es
aad
movsl
or
lods
jbe
push
pusha
daa
fistpll
ret
ljmp
mov
xor
pop
imul
subl
repnz
add
or
add
fdivr
outsl
fadd
and
or
sbb
mov
scas
inc
scas
sub
out
loopne
jle
pop
loop
push
push
adc
jno
daa
mov
aas
iret
bswap
popf
mov
in
jmp
mov
cmp
data16
push
scas
sarl
outsl
pop
test
das
int3
outsl
loop
lods
jo
inc
cmpb
popf
push
lea
int
leave
lret
xchg
and
xchg
xchg
ret
push
adc
fwait
lds
xchg
les
js
push
je
pop
xchg
xlat
push
int3
cld
mov
sbb
shlb
cli
bound
fiadds
popl
dec
dec
sbb
xchg
cmpsb
fildl
mov
in
fcmove
cmp
mov
in
xchg
ret
rcl
sub
sub
int3
mov
aas
push
lods
shrl
test
stos
add
insb
mov
in
cmp
xor
fwait
ja
fstpt
pop
push
lahf
mov
add
or
cwtl
mov
scas
subb
sbb
dec
jne
test
int3
inc
jb
lds
ljmp
and
mov
pop
adc
dec
ljmp
dec
imul
and
sub
mov
add
mov
inc
fisttpll
jl
pop
sarb
fs
cmp
jns
push
xor
lret
push
jle
adc
cli
arpl
lods
jo
mov
aam
loope
jl
sub
fmul
sarb
sahf
movsl
pop
imul
std
mov
pop
pop
push
mov
dec
bound
ds
adc
lods
into
xchg
aas
push
mov
jp
idiv
rol
stos
test
pop
les
fs
mov
inc
adc
lds
mov
dec
mov
mov
xchg
jge
push
in
fldt
js
push
inc
mov
inc
xchg
dec
pusha
adc
scas
cli
adc
add
xchg
sahf
xor
rolb
add
fs
aaa
outsb
aam
cmp
test
lods
sub
mov
fistps
int
or
loop
jle
mov
sub
push
mov
adc
and
xor
jno
insb
xchg
imul
fs
fcmovnbe
xchg
outsl
dec
subl
or
lcall
sti
cwtl
jbe
call
mov
movsl
push
aam
dec
inc
mov
adc
cs
mov
add
push
jg
add
inc
shlb
les
dec
int
cmp
or
cld
outsb
push
test
push
cli
jno
into
mov
cmp
pop
std
aas
mov
lcall
and
int
mov
dec
aad
dec
mov
push
mov
mov
push
gs
movsl
push
mov
out
nop
popa
scas
fidivrs
sub
loop
cmp
stos
loope
cmp
pop
mov
mov
andl
pop
lret
mov
lret
lods
cwtl
fs
mov
shr
stos
cld
xorl
xchg
lret
ljmp
adc
pop
popf
add
lods
jns
mov
je
incl
mul
out
int
lods
xor
testb
or
loopnew
jae
sub
xor
xchg
fbstp
arpl
nop
cwtl
mov
pop
sbb
mull
aas
cmc
adc
and
rcrl
cmp
pop
pushf
cmp
add
jle
and
jnp
sbb
test
adc
dec
push
mov
imul
dec
xlat
or
fsubr
dec
mov
dec
fcoms
xor
sti
pop
xchg
dec
lret
int3
fldt
cmp
sbb
pusha
push
sub
lret
rcll
pusha
enter
in
xchg
cmp
mov
lret
or
mov
test
lods
in
or
jne
movsb
push
pop
xor
pop
xchg
sub
sahf
ja
mov
cs
dec
pop
xor
mov
jnp
repz
aaa
in
cmpsb
pop
sbb
sub
mov
test
shrl
shrb
icebp
int
push
xor
lea
int3
xchg
fists
xchg
adc
cmpsl
push
pusha
push
sub
pop
mov
add
out
loopne
lret
jg
mov
pusha
mov
aam
jecxz
int3
cmp
cmpsb
adc
sbb
repz
dec
out
ljmp
inc
push
mov
cwtl
imul
std
mov
mov
cltd
push
mov
fbld
mov
cs
orl
mov
mov
jo
inc
mov
out
add
fisubrl
pop
repz
call
mov
adc
out
scas
jo
and
and
push
mov
adc
push
push
mov
mov
sti
movsb
scas
lock
mov
push
dec
inc
adc
aaa
pop
xchg
xor
sub
std
imul
add
mov
insl
jp
aam
cmp
adc
add
inc
test
push
sbb
jmp
jge
sbb
and
xchg
sti
mov
pop
cltd
jns
popa
xor
in
cli
outsl
repnz
adc
and
test
or
sub
cmpl
sbb
cli
lods
rcr
or
jno
int
lcall
orl
xor
push
dec
jbe
push
pop
je
mov
or
mov
dec
addr16
dec
mov
sbb
cli
cld
dec
in
pusha
insl
add
xchg
es
adc
and
xchg
imul
out
jae
and
cmpsl
loopne
add
jle
pop
stc
and
or
aad
shll
push
stc
pop
es
shll
outsb
fdivrs
pushf
and
das
repnz
xchg
cmp
dec
pop
ror
jmp
sub
jmp
sbb
inc
or
mov
push
jne
and
sbb
lret
jge
jp
jmp
mov
out
out
repnz
mov
iret
push
icebp
outsb
test
cmpsl
fmul
repnz
mov
movsb
sbb
mov
cs
fldt
out
sub
incl
jne
pop
stos
addr16
xchg
lods
jg
and
fwait
push
lea
cmpsb
in
lahf
cli
orl
hlt
push
fisubs
fcmovb
xchg
fwait
xchg
aam
ljmp
push
mov
fs
shrb
sbb
or
and
mov
mov
mov
mov
pop
mov
rcl
adc
mov
mov
jmp
repz
sbb
pop
push
and
fmulp
sbb
into
xchg
push
adc
loopne
cli
jp
xor
jmp
cmp
ret
movl
fiaddl
sub
cmpsl
imul
pop
shll
out
sahf
sbb
scas
rol
repz
fcmove
inc
adc
push
sahf
xchg
jae
push
and
mov
rolb
jnp
jb
sub
stos
inc
pop
xor
ljmp
jp
rclb
mov
lods
je
jl
jb
stos
lods
jmp
push
xor
loop
inc
adc
inc
xor
xor
cmp
pop
and
cmp
jmp
mov
mov
mov
test
pushf
add
fidivs
adc
sahf
cmp
xorb
pop
mov
shl
inc
je
sahf
jb
out
addr16
dec
and
jo
mov
bound
sbb
js
sub
add
jb,pn
jmp
in
sbb
push
mov
inc
dec
dec
and
mov
xchg
sub
or
test
movsb
pop
jb
hlt
arpl
leave
in
mov
mov
dec
outsb
pop
mov
adc
pop
ljmp
ror
and
loop
add
iret
mov
mov
dec
mov
mov
lcall
jecxz
insl
dec
mov
hlt
lahf
frstor
fidivrl
and
pop
push
adc
mov
inc
xor
andb
inc
test
test
incl
jnp
xorl
popf
xchg
add
xlat
int
insl
jecxz
int3
or
adc
adc
mov
rcrl
xor
lods
lock
mov
sbb
inc
adc
int
test
jno
cmp
lods
and
xchg
mov
inc
loope
mov
out
sub
push
mov
or
test
jmp
jae
leave
mov
aam
in
inc
sub
aaa
arpl
mov
mov
add
out
jbe
negl
movsl
outsb
addl
inc
ficompl
in
cmp
jno
and
dec
aaa
mov
fimull
xchg
add
jmp
jbe
adc
add
add
push
ds
jecxz
jg
repnz
in
in
test
popl
push
xchg
dec
mov
cmp
push
mov
lea
dec
push
dec
das
cmp
and
sbb
sarb
push
cld
into
push
push
cltd
outsb
insl
aam
pop
mov
movsl
scas
andb
test
xor
jno
leave
jl
out
aad
mov
jg
sbb
add
push
pushf
lcall
add
cmpsl
test
int
mov
lcall
lcall
or
mov
jp
int
mov
jle
sbb
jp
push
xchg
mov
dec
or
jnp
adc
cmp
ja
fsub
mov
test
xchg
call
mov
outsb
push
insl
mov
jle
in
inc
adc
ffree
aam
loop
xor
xchg
xor
lea
dec
pop
or
outsl
stos
and
push
rcl
inc
je
sub
lea
in
icebp
das
lods
aad
addr16
arpl
iret
mov
shrb
ja
or
inc
mov
ds
mov
sub
jno
xchg
lret
inc
pop
hlt
addb
stos
cld
add
add
sbb
out
dec
mov
gs
loopne
mov
jle
cwtl
lret
push
lea
hlt
and
fs
mov
gs
insb
cmp
outsb
ds
je
test
dec
nop
sarl
sahf
cmc
mov
push
mov
das
fwait
outsb
insb
mov
fcoms
lcall
cmp
rol
lea
or
sub
pop
daa
mov
imul
adc
xchg
xchg
add
sarb
sub
std
mov
imul
xchg
loop
fdiv
pop
xor
mov
pop
js
ljmp
adc
icebp
push
iret
fisubrs
std
les
nop
gs
xor
jnp
in
mov
test
cwtl
js
xchg
mov
mov
mov
add
leave
adc
add
push
cmp
gs
add
lods
into
push
mov
not
mov
and
adc
aaa
out
daa
dec
jo
div
cmp
inc
sub
xchg
mov
mov
cmc
mov
cmp
or
stos
and
mov
int
cs
jge
jae
push
outsl
ss
int
jbe
inc
cmp
nop
xor
lret
mov
decb
in
or
lock
out
mov
aam
filds
cmp
sbb
cld
das
dec
jmp
inc
xchg
pop
in
add
sbb
push
mov
gs
and
in
jmp
mov
cltd
lods
loop
lea
push
addl
push
push
pop
xor
lods
dec
jecxz
jecxz
push
psubb
aad
js
xchg
mov
lahf
sahf
xchg
das
enter
cs
xor
push
push
sbb
cltd
adc
out
sub
ss
inc
jmp
dec
sbbl
or
hlt
rcrb
insl
fistpl
push
and
lret
inc
loope
les
and
adc
push
dec
dec
dec
add
xchg
pop
or
sub
cld
enter
jecxz
mov
or
jae
mov
ds
lcall
pop
inc
cwtl
dec
mov
and
cmp
adc
ret
mov
fdivrs
xchg
fdiv
ds
scas
push
iret
shlb
xchg
mov
sbb
fidivl
pusha
pop
orb
sbb
leave
fcompl
xchg
fs
in
or
fisubrl
icebp
and
addl
xor
test
icebp
pop
push
or
dec
and
add
out
add
inc
xlat
roll
and
int
lock
jne
out
incl
dec
add
adc
mov
jmp
sti
sub
mov
leave
in
enter
adc
cmp
cld
leave
rolb
dec
lcall
mov
pusha
out
ffreep
iret
xlat
xor
xchg
jo
fs
arpl
pop
dec
jbe
data16
mov
push
enter
cmp
and
fnstenv
add
jl
jbe
adc
mov
bound
mov
sub
jl
xchg
xor
ja
cmp
test
gs
and
mov
jecxz
outsl
sti
mov
mov
mov
xlat
test
mov
js
and
gs
xchg
xor
call
repz
adc
dec
pop
cld
or
xlat
cmp
cmc
fwait
adc
pop
sbb
daa
ds
cmp
jp
lea
mov
rol
add
xor
call
fnsave
fildl
pop
lret
rcll
mov
jp
mov
xor
cmp
mov
add
pop
push
jae
sahf
push
adc
out
shlb
scas
push
mov
pushf
cmp
push
cmp
adc
and
pusha
enter
cld
fistl
and
and
xchg
jae
xchg
inc
or
sbb
stos
ja
fcoml
test
orl
mov
fcmove
repz
xchg
rorl
test
and
mov
push
cwtl
orl
pop
lods
xor
out
add
outsl
stc
pop
mov
lods
faddl
push
fisubrs
dec
roll
hlt
mov
cmpsb
mov
cld
mov
jmp
inc
add
mov
cmpsl
and
lds
les
fdivr
fcompp
imul
roll
ljmp
mov
cmc
add
pusha
pop
dec
mov
dec
lock
inc
push
mov
pop
jge
repnz
rclb
cs
imul
imul
jnp
jg
addr16
lahf
jl
es
insb
and
call
stc
inc
ret
aad
jp
fwait
in
cli
add
or
or
xchg
outsb
je
fimuls
and
fnsave
sti
ds
push
sbb
adc
addr16
fs
mov
fcomps
jne
shrl
or
stc
loopne
bound
jl
inc
dec
mov
mov
xchg
outsb
mov
movups
sbb
imul
popf
out
fstpl
inc
pop
mov
lea
hlt
repnz
notb
jns
leave
fisubl
ds
jno
imull
jae
jo
push
popf
inc
jmp
mov
fsts
xchg
stc
scas
jbe
pusha
inc
inc
inc
int
push
mov
lock
sbbb
nop
mov
std
sbb
call
dec
jmp
je
insb
dec
stc
ljmp
setno
ret
jns
pop
call
insb
pop
xor
rcll
aad
outsb
and
adc
test
aam
sahf
pop
shrb
pop
sbb
xor
jl
inc
inc
inc
mov
ficompl
iret
inc
lret
xchg
cli
xchg
loop
add
mov
mov
add
fs
ja
in
or
out
stos
or
fcoms
aad
fsubrs
fcom
repz
in
xor
sbb
cmp
sub
inc
inc
inc
repz
xchg
gs
dec
cmp
out
inc
jge
fidivs
xchg
js
mov
lret
lahf
sbb
or
popa
sub
daa
push
aaa
pop
addr16
daa
adc
out
in
int3
inc
sub
iret
cmp
cltd
ret
dec
pop
adc
mov
popl
push
call
xor
outsb
divl
inc
or
mov
push
pop
lods
mov
cmp
lcall
mov
loop
pop
add
out
outsl
mov
sub
mov
mov
push
cs
imull
adc
ljmp
push
stos
jo
xor
in
outsb
mov
mov
mov
movsb
negb
or
lcall
add
fwait
shlb
repnz
mov
std
loop
jge
push
inc
xchg
push
jecxz
decb
mov
cwtl
push
inc
pop
lock
gs
enter
jns
cld
sub
push
cmpsl
fnstsw
xchg
add
pusha
sub
mov
sub
js
fldl
lret
push
jne
mov
sbb
sbb
arpl
enter
or
adc
dec
adc
frstor
push
mov
test
lahf
stc
and
faddl
and
pop
pop
xor
popf
push
sbb
add
jp
daa
sub
lds
dec
push
xchg
mov
sub
inc
jge
mov
pop
mov
mov
mov
adc
mov
outsl
loopne
add
pop
and
cli
shlw
aam
fwait
xorb
push
aam
cmc
test
mov
add
into
cld
dec
push
dec
push
loopne
bswap
jecxz
cmp
bound
iret
jecxz
add
cli
inc
addb
push
test
push
or
mov
ja
sbb
pushf
repnz
xlat
jnp
mov
jp
pop
mov
ret
outsl
sahf
in
rorb
dec
cmp
insb
loope
mov
pop
cwtl
ds
pop
push
sbb
icebp
push
out
mov
mov
loopne
lock
inc
mov
out
loop
imul
movsl
lcall
push
inc
int3
rorl
push
add
insb
mov
xor
xchg
stos
inc
mov
xor
jae
sub
and
cmp
negb
xchg
jmp
cs
nop
and
dec
fs
pop
pop
sub
xor
iret
jp
jge
mov
and
xchg
mov
cltd
mov
or
not
push
test
addl
outsb
push
adc
cmp
sahf
fidivrl
jecxz
je
mov
and
out
push
int3
loopne
sub
pop
fildll
or
or
out
jno
xchg
xchg
or
out
adc
hlt
cltd
inc
cmpsl
in
arpl
inc
loope
xchg
ret
jno
adc
or
jl
fs
scas
jle
jge
loope
sarb
into
mov
inc
lcall
arpl
sahf
sahf
das
cs
pushf
inc
cmp
lock
xchg
out
add
icebp
les
sbb
push
push
jl
lahf
jge
mov
xchg
and
xor
adc
dec
jo
faddl
testl
pushf
mov
push
jno
jnp
pop
inc
out
adc
orb
jo
aad
jl
in
inc
ss
xorb
adc
addr16
mov
fistps
xor
movsb
shlb
jecxz
les
rcrb
mov
loop
sbb
addr16
jns
scas
dec
pop
cmp
and
add
mov
mov
leave
inc
pop
daa
pop
push
push
mov
or
add
jmp
dec
jmp
sub
jns
pop
inc
cli
mov
bound
icebp
add
stc
repnz
jl
xchg
inc
insb
jne
ds
and
mov
aaa
mov
mov
repnz
adc
jecxz
icebp
sub
fst
jecxz
xor
adc
dec
sbb
jns
cli
je
xchg
jmp
sbb
lods
pop
pop
or
pop
add
outsl
cmc
xchg
cmp
call
or
test
imul
push
xchg
mov
xchg
cmp
sbb
sbb
push
dec
pop
clc
call
out
in
scas
lock
xor
push
sbb
push
mov
repnz
fwait
pop
or
cmc
loop
sub
inc
mov
scas
decb
adc
leave
ret
in
sbb
cmp
imul
inc
mov
fadds
push
mov
pop
and
mov
in
cmpsl
push
and
sbb
in
mov
push
lcall
test
sbb
fstps
pop
inc
fs
push
jae
push
out
ret
mov
popf
ret
rcll
inc
push
cmp
sahf
add
ss
js
leave
aas
pusha
out
stc
loop
pause
mov
dec
mov
and
jl
mov
sbb
inc
scas
dec
loopne
stos
testl
jae
sub
push
mov
stos
jl
daa
sbb
fsubrl
and
shr
out
sub
add
pushf
push
push
in
inc
adc
movsb
cli
ljmp
leave
push
jnp
dec
push
cld
pop
mov
cmc
loope
add
jle
push
push
lret
jns
push
pop
mov
mov
sbb
frstor
mov
push
enter
repnz
jo
rorl
clc
ret
mov
xor
popf
ret
add
push
ret
or
insb
or
or
gs
push
lods
lahf
in
aam
xchg
push
jno
cltd
xor
push
push
popa
and
mov
mov
sub
or
push
jl
ret
js
movsb
mov
pop
outsl
push
xchg
mov
sbb
xchg
jno
lret
notl
mulb
push
pop
aad
pop
subb
sbb
repnz
and
sbb
repz
sbb
stc
push
mov
dec
add
jb
jb
xchg
out
add
pop
out
cmpps
aad
adc
jecxz
xchg
jecxz
xorl
sub
fildll
push
push
es
dec
mov
xor
sarl
addr16
inc
gs
xchg
pushf
dec
sbb
jne
lret
lds
or
ret
sbb
fcompl
mov
cld
in
aaa
leave
test
inc
dec
push
movsb
jb
sub
test
testb
rorb
movl
xchg
gs
xchg
das
cmp
hlt
outsb
xchg
js
movsl
pop
pop
popf
jl
repnz
pop
lock
cmp
ror
mov
notb
nop
pusha
std
js
aad
call
repnz
arpl
stc
pop
and
lret
insb
clc
mov
dec
fnsave
push
enter
popa
mov
loopne
pop
mov
insb
xchg
jecxz
leave
jecxz
or
push
xor
mov
mov
adc
scas
lahf
mov
in
int3
or
add
iret
inc
fucomi
xor
lret
or
pop
imul
repz
add
mov
movsb
inc
push
sub
mov
push
cmp
pop
inc
add
sti
xlat
ret
or
out
subl
das
xchg
popf
test
xchg
gs
jbe
es
scas
mov
lcall
mov
mov
stos
imul
lea
push
and
inc
insb
xchg
xchg
mov
sbb
mov
movb
push
push
fs
xor
mov
xchg
and
mov
and
arpl
mov
sub
mov
fsubrs
scas
sub
mov
cmc
dec
xor
add
cld
mov
jl
sub
mov
imul
pop
mov
jp
cmc
jp
and
or
dec
icebp
test
sub
scas
ret
loope
and
mull
mov
out
mov
xor
adc
dec
xchg
lret
popf
mov
pop
jae
scas
int3
fsubrl
xlat
or
ss
pop
rclb
hlt
inc
and
lahf
or
push
cltd
stos
xor
mov
xor
test
pop
xlat
dec
mov
or
addr16
aam
xchg
mov
cwtl
or
push
and
sub
outsl
lret
mov
lret
mov
lea
sbb
lahf
filds
xor
repnz
movsb
lock
and
nop
repnz
outsl
pop
loopne
pushf
not
and
out
in
jb
fidivrl
stos
in
aad
sti
jne
cmp
orl
sub
pop
jnp
pop
insb
lret
pop
repz
ret
inc
sbb
scas
cmp
fdiv
jbe
inc
jb
test
inc
out
jp
push
std
sahf
sbb
loop
pop
mov
aas
push
jns
lods
mov
jge
mov
rolb
hlt
out
dec
das
out
shrb
in
test
xor
roll
incl
cmp
fstl
sub
loop
xor
sbb
sbb
jg
cltd
sbb
mov
push
iret
shrb
inc
mov
bound
sub
push
mov
orl
inc
add
cmp
add
jg
cmp
mov
dec
movsl
mov
cld
inc
loope
decb
je
out
sub
mov
icebp
xor
lock
popa
mov
xor
shlb
lock
in
jmp
xchg
pop
push
pop
pushf
pusha
xchg
pmaddwd
aam
xor
pop
scas
leave
aaa
mov
icebp
sub
push
adc
mov
xor
lea
sub
mul
icebp
xor
add
push
or
cmc
pop
push
or
das
jbe
cmc
aam
jl
cmp
mov
scas
and
enter
or
lods
shlb
dec
sub
mov
outsb
mov
leave
xlat
loopne
lret
in
stc
xorb
in
xor
jno
cmpsb
cmc
scas
add
cwtl
jmp
adc
push
jns
jge
cmp
daa
out
fidivrl
rolb
push
inc
pop
aaa
sub
dec
pop
push
pushl
xchg
in
aad
and
inc
sbb
xor
mov
cmpsb
int3
mov
aam
les
fidivl
inc
pop
jge
arpl
repnz
inc
aas
jecxz
idiv
adc
cmc
pop
lret
js
call
dec
inc
je
or
mov
stos
stc
add
pop
lods
rcll
ljmp
and
bnd
mov
aaa
gs
bswap
cwtl
cmp
mov
xor
lock
paddb
inc
mov
mov
ss
stc
test
lret
inc
inc
test
pop
mov
xchg
inc
popa
jo
jmp
outsb
mov
js
xchg
inc
add
and
lds
mov
scas
outsb
popa
lods
es
push
jmp
dec
out
rolb
xchg
adc
mov
xchg
add
mov
jp
arpl
add
mov
add
aam
sbb
pop
xchg
lret
lods
fldcw
cld
divl
sub
fildll
push
loop
imul
sub
jge
std
xchg
xchg
or
sbb
outsl
cltd
xor
fcomip
push
xor
xor
pop
rcr
xchg
les
and
aad
fsubp
add
mov
sarl
cmp
or
adc
fstpl
scas
mov
movsb
cmpsl
mov
push
fistl
loop
mov
cmp
mov
xchg
pop
or
jnp
mov
lods
dec
fdiv
mov
add
cmpsl
outsl
sub
fistpll
shrb
mov
xchg
lret
test
sti
pop
cmp
xor
cwtl
xchg
mov
pop
push
ss
add
mov
or
dec
addr16
xchg
xchg
xor
stc
xor
test
shrl
pop
xor
idiv
jno
sub
push
xchg
cmp
pop
dec
or
dec
xor
ror
lods
jl
push
and
icebp
or
sahf
lods
hlt
and
popl
je
jmp
push
add
push
and
jns
movsb
jne
out
xchg
jmp
sbb
hlt
jg
insb
pop
xor
sub
xor
iret
cwtl
xor
dec
or
mov
shl
idivl
icebp
loope
and
pop
clc
fistpl
jmp
shlb
push
rep
mov
cltd
fnsave
lahf
inc
sbb
testb
enter
pop
aad
adc
fucomip
fnstsw
icebp
sahf
dec
stos
add
fstl
cli
xchg
mov
xchg
mov
sbb
mov
cmp
xor
mov
xor
cmpsl
inc
and
xlat
add
out
mov
xor
leave
xorl
add
lea
in
xor
mov
mov
inc
les
jl
push
lock
xrstor
push
push
outsl
repnz
xor
push
stos
mov
outsl
leave
xor
int3
adc
push
or
add
lods
divb
mov
jno
push
filds
imul
mov
mov
fsubs
xor
mov
mov
fmul
popa
jp
stc
lret
push
push
nop
inc
jns
es
sbb
mov
divb
seto
scas
sbb
xchg
icebp
mov
loop
sbb
scas
daa
jmp
stos
add
fcmovb
arpl
sbb
aaa
inc
sbb
loopne
mov
lahf
inc
adc
mov
ljmp
out
faddl
daa
sub
push
rcrl
or
movsb
cli
sub
add
push
dec
aaa
xchg
pop
and
cmpsl
mov
shl
mov
rcrl
movsb
outsb
push
adc
pop
push
or
insl
aad
inc
inc
jp
lret
or
fcmovnbe
inc
or
and
mov
xchg
shrl
ja
mov
int
bound
adc
or
jne
jecxz
or
pop
sbb
in
sti
out
and
lahf
jmp
pusha
pop
cs
and
out
inc
scas
dec
adc
and
mov
pop
mov
es
xchg
xchg
or
in
or
and
mov
add
mov
test
stos
mov
and
jp
cmp
cwtl
add
daa
sub
lret
xor
inc
js
pop
inc
or
add
out
adc
in
in
dec
jo
dec
ljmp
pushl
mov
in
flds
lahf
mov
fdivr
or
push
inc
jb
shrl
inc
outsl
aad
mov
and
imul
pop
loop
addb
insb
mov
loopne
mov
stc
loope
lcall
mov
add
or
pop
pop
dec
cmp
mov
int3
cmpsb
into
mov
add
loop
rcr
push
dec
pminub
ljmp
enter
xor
adc
mov
pop
inc
xacquire
push
push
outsb
sahf
adcb
mov
xchg
icebp
pop
mov
mov
call
pop
imull
mov
and
mov
repz
pop
add
notl
fdivrs
or
adc
or
jne
sbb
jecxz
arpl
push
xor
divb
mov
pop
mov
lea
xchg
xchg
jbe
cmp
std
fildl
insb
cmp
pop
call
in
sub
scas
mov
jns
sarl
aas
in
jns
insb
sarb
jl
mov
adc
jle
test
in
mov
pop
outsl
jne
mov
mov
sub
sbb
xchg
mov
pop
inc
outsl
lock
sbb
loopne
repz
jo
dec
dec
sbb
hlt
dec
jno
mov
sbb
ss
enter
lret
lret
xchg
lea
add
ljmp
cld
fmuls
jno
aas
fnstenv
stos
inc
hlt
mov
mov
jno
cltd
jmp
sbb
in
inc
test
test
mov
xor
rcrl
sbb
imul
lcall
out
sbb
inc
or
aas
std
mov
adc
lahf
and
ja
mov
push
jnp
cmpsl
dec
loop
cli
jmp
xchg
xchg
xor
rol
inc
aas
mov
mov
in
popf
mov
xorb
std
adc
xlat
sub
js,pt
sarl
in
xchg
mov
movsl
adc
je
daa
sbb
mov
shrl
jg
dec
testl
adc
pop
insb
icebp
rolb
loop
adc
les
xchg
popa
xor
arpl
inc
add
xchg
out
mov
pop
inc
call
and
and
loop
icebp
xor
sub
inc
dec
stos
js
out
and
out
adc
sbb
jmp
fwait
or
cmp
mov
sbb
lret
rclb
imul
fnstsw
xor
je
mov
test
xor
pop
sbb
lods
xor
test
xchg
mov
and
lock
cmp
out
mov
xor
bound
jae
xor
pop
sbb
dec
jle
aaa
pushaw
xchg
sarl
arpl
jg
mov
ret
jnp
jmp
mov
cwtl
aaa
stos
pop
cmp
loopne
mov
shlb
dec
jbe
inc
stos
pop
movsl
xchg
add
and
out
ds
adc
xchg
sbb
aam
pop
sub
cmp
sub
scas
loope,pt
ja
aam
imul
loopne,pt
xchg
mov
cltd
call
ret
ret
pop
test
rolb
inc
daa
test
pop
sub
push
outsb
and
jecxz
inc
xchg
push
lds
jne
push
cmpsl
repnz
push
or
mov
jns
push
push
inc
xchg
test
out
or
imul
cmp
popf
cli
pop
lret
pop
aas
fwait
icebp
push
loope
xchg
inc
sti
mov
or
shlb
and
out
das
or
inc
xlat
dec
inc
add
sbb
mov
push
loope
sub
fsubrs
mov
sahf
cmp
ret
test
sahf
xchg
jns
cmp
dec
xchg
mov
in
loopne
mov
cli
aas
sbb
push
cmp
dec
ror
mov
mov
push
test
mov
xchg
jge
cmc
iret
xchg
cmp
xchg
or
add
hlt
imull
clc
out
add
adc
rclb
add
adc
popa
fldcw
ret
jne
sahf
sbb
sbb
or
movsb
in
test
mov
sarl
arpl
pop
mov
mov
in
icebp
sub
out
fnstcw
adc
rsm
int3
loop
jp
outsb
outsb
lea
outsl
fcmovnbe
roll
cmc
lods
fistpl
jb
mul
mov
mov
push
jnp
scas
insl
js
in
or
cmp
rolb
push
mov
add
and
jle
in
mov
scas
lret
ret
push
xlat
xchg
fsubs
add
movsb
ja
mov
fisttps
or
inc
push
out
subl
inc
dec
mov
pop
adc
jne
popa
sub
xchg
mov
xchg
add
jns
push
mov
sub
add
lock
sub
xor
inc
mov
addr16
icebp
jmp
lods
repz
lret
popa
in
mov
iret
lcall
xor
outsb
imul
xor
cmc
jne
and
jae
sahf
inc
mov
bound
dec
in
xchg
cwtl
in
out
js
ret
in
add
mov
and
bound
shld
test
cmp
push
repz
mov
push
out
jg
dec
mov
stc
lahf
xchg
es
roll
orl
jne
rclb
cs
jns
orl
enter
pop
sub
or
dec
xchg
mov
ds
dec
bound
fwait
aam
sarb
add
push
daa
imul
jb
inc
loope
mov
sub
dec
jecxz
fdivrl
out
pop
ret
adc
pop
clc
add
aas
aam
stos
in
pusha
dec
fnstenv
pop
xlat
add
cmp
sub
loop
xchg
in
xor
mov
cmp
mov
adc
push
mov
fmull
bound
hlt
push
lea
sahf
dec
out
and
out
adc
or
cli
sub
sbb
rcrl
int
test
add
pop
push
insl
pop
dec
push
in
arpl
jns
xchg
cmp
repz
mov
mov
fbld
pop
fdivl
push
add
mov
mov
mov
ja
jo
sub
or
add
stos
mov
lods
xchg
inc
lahf
and
inc
repz
xchg
sbb
pop
ret
jle
push
mov
adc
pop
pop
adc
mov
in
cmp
jle
mov
les
push
push
scas
mov
jnp
xorb
cmp
test
xchg
mov
jg
mov
mov
adc
scas
loopne
shll
test
mov
enter
ljmp
dec
jl
mov
sahf
divl
lea
lock
cmp
fidivrs
xor
iret
or
push
outsb
mov
push
jbe
insb
scas
dec
leave
lret
sbb
sub
test
out
fcom
out
jnp
pop
jns
cli
rcr
pop
pop
out
sub
sbb
insb
out
repnz
and
leave
inc
jl
sbb
lock
rcll
leave
dec
add
mov
mov
dec
out
leave
sbb
mov
into
mov
ja
pusha
popf
pop
test
das
adc
repz
push
pop
add
jo
xor
inc
push
cwtl
rolb
lahf
jae
imul
mov
negl
sbb
pusha
cmpsl
sti
xor
and
xor
rorl
mov
stos
mov
aad
sbb
clc
sbb
fld1
inc
jb
test
call
jl
es
xlat
mov
cmp
aad
test
cwtl
divl
sub
mov
testl
jo
mov
inc
jg
jmp
dec
loop
test
fwait
stos
adc
fcomps
dec
std
es
cltd
inc
mov
dec
iret
rcl
mov
cmp
movsl
aas
sahf
or
sub
xchg
repnz
jle
mull
in
dec
mov
sub
lea
rcr
or
mov
cmp
sbb
mov
jno
lea
sbb
in
out
and
icebp
fiaddl
repnz
call
push
sbb
inc
popf
bound
iret
movswl
xchg
cmp
outsl
dec
hlt
shll
push
enter
divb
aaa
add
insl
inc
lods
lcall
jo
clc
in
lds
popa
sbb
clc
fimull
pop
push
inc
testl
pusha
iret
les
push
cmpsb
mov
inc
mov
pop
xchg
mov
inc
cs
xchg
rcrl
add
or
iret
aam
cli
cmp
xor
jae
jmp
adc
movsl
jecxz
subb
xlat
test
mov
sbb
in
mov
mov
sahf
lcall
adc
mov
scas
lret
cltd
cltd
fstl
xor
je
fcmove
imul
dec
rclb
mov
daa
mov
jno
pop
mov
les
cs
push
fsubr
or
adc
cld
sub
dec
jnp
jae
push
sub
cmp
es
add
bswap
adc
stos
and
fdecstp
loopne
out
fidivrl
mov
popf
pop
fldt
pusha
lods
cmp
pop
jae
add
shll
or
fnstsw
jmp
mov
dec
push
push
and
int
mov
jae
ror
data16
cmp
dec
js
jno
stc
ss
sub
mov
fsubr
and
push
imul
mov
push
adc
cmp
adcl
enter
dec
shlb
sbb
dec
adcb
mov
mov
iret
fbstp
fsubs
popa
arpl
subl
jo
ljmp
loopne
les
jns
faddl
fcos
loopne
pop
aaa
lret
jmp
mov
or
adc
icebp
mov
xor
xorb
lea
cmp
cld
lahf
push
mov
lods
mov
jg
mov
add
lods
gs
and
push
fadd
aam
outsb
xchg
in
out
jp
mov
inc
subb
and
or
add
les
mov
add
es
negb
jle
je
mov
insl
hlt
aad
fistl
sub
std
xor
ret
in
sbb
mov
dec
not
sbb
test
mov
pop
jl
jns
xor
add
or
pop
cld
pop
mov
cmc
or
test
enter
mov
cmp
cli
divl
push
adc
das
aaa
mov
into
mov
cli
lret
xchg
fs
and
out
sub
dec
push
cmpb
inc
movsl
shll
into
inc
jb
push
mov
stc
out
data16
adc
mov
iret
movsl
aam
and
cmp
sarb
and
push
das
mov
ljmp
cltd
add
push
xor
das
sub
test
adc
scas
xor
fmuls
inc
jae
fnsave
cmp
and
fisubl
mov
or
movsl
fsubs
inc
int3
in
push
sti
xor
movd
dec
sarb
inc
mov
mov
jbe
insl
push
add
dec
push
sub
icebp
fldt
js
fwait
nop
sar
inc
jg
iret
lds
or
or
std
fsubr
jns
test
xlat
je
rcr
mov
xchg
data16
sbb
shlb
addr16
fs
cltd
mov
dec
push
jo
shlb
cmpsb
xchg
jecxz
cmp
sub
mov
xchg
stos
aad
mov
mov
sub
cwtl
pusha
shr
mov
in
inc
outsb
jno
mov
into
mov
add
or
ds
outsb
out
stos
popa
inc
js
aaa
nop
cmp
rcll
loop
mov
dec
add
out
xchg
ja
decl
push
jne
mov
rcrl
pusha
sbb
mov
fidivl
add
pop
mov
mov
dec
inc
aam
bound
sub
dec
je
fisttpl
mov
xor
adc
in
mov
outsb
jg
add
les
cmp
negl
or
fucom
scas
roll
add
adc
cmp
mov
scas
rcrl
jns
lahf
pop
rorl
jne
and
add
repz
pop
test
push
mov
dec
mov
and
dec
bswap
push
sub
sbb
adc
mov
mov
jbe
aas
imul
cmp
mov
and
sub
push
pop
stos
ficompl
lahf
mov
negb
jp
jecxz
sahf
test
loop
mov
bound
paddsb
dec
lea
cmp
add
scas
cltd
sub
in
imul
lcall
incl
adc
movsb
mov
or
ret
mov
insl
loopne
es
bound
mov
mov
repz
xchg
in
inc
cmp
push
xor
dec
shll
out
imul
lea
adc
iret
test
cmc
push
push
neg
sbb
aad
ds
xchg
or
xchg
mov
mov
pusha
mov
pop
add
sbb
scas
ret
das
dec
scas
xor
jns
xchg
pop
jo
mov
ds
dec
loopne
rcll
sbb
mov
dec
inc
cmp
sub
mov
test
jecxz,pn
push
lcall
sub
rcrl
sti
jp
into
int3
xchg
jmp
cltd
mov
xchg
dec
ret
cmp
xlat
mov
mov
sbb
jmp
ret
mov
push
jmp
ja
mov
jne
in
lea
sbb
scas
lods
imul
stc
iret
mov
sub
shl
movsb
cmp
popf
loop
add
add
xchg
les
test
fadds
jecxz
cwtl
sub
mov
mov
cmp
and
shrl
jb
xchg
movsl
and
jno
sti
inc
repz
cmp
push
push
sbb
mov
jae
dec
dec
in
call
dec
adc
adc
xor
iret
hlt
imul
dec
pop
mov
mov
mov
sbb
aas
lods
mov
in
lahf
icebp
xchg
test
mov
sahf
jae
testl
cmp
enter
sub
rcll
js
fdivp
sti
arpl
dec
in
mov
out
pop
ss
out
pop
sub
cmp
jo
loope
shl
loop
fs
xor
outsl
lods
pop
test
fs
xor
rcrl
dec
mov
push
cmpsl
xchg
call
xor
add
inc
movsb
or
daa
addr16
jp
aaa
dec
pop
lret
pop
sub
push
cs
mov
mov
lods
lods
jge
les
jae
ret
ret
dec
cmp
jo
frstor
cmpsb
jb
loop
xchg
xchg
adc
test
mov
dec
xchg
inc
lret
mov
lds
std
mov
outsb
arpl
and
jae
push
or
sbbl
sbb
mov
xor
loop
mov
dec
movsl
adc
jns
mov
fidivrs
outsb
aas
jne
faddl
test
fld1
fcoms
adcb
ret
cmpsb
fiadds
enter
and
ficompl
aas
jmp
mov
jp
add
mov
fld
mov
in
sbb
inc
sbb
lea
int
pushf
scas
out
jno
mov
push
sub
lcall
popa
fs
sbb
icebp
and
bound
xchg
int
aaa
rclb
imul
or
mov
unpcklps
popa
call
cmp
xor
loopne
xor
push
insb
jecxz
incb
in
iret
push
cmp
lret
call
xchg
pop
and
rorl
hlt
mov
mov
les
mov
adc
mov
ljmp
fisubl
mov
and
lock
ret
call
dec
inc
and
ljmp
outsb
mov
sbb
and
cs
imul
mov
mov
push
pusha
mov
mov
insl
jg
pop
es
xchg
sarb
lcall
jno
icebp
jo
clc
push
aam
add
adc
dec
or
fdivrl
fwait
xchg
fwait
imul
and
xor
jno
mov
sbb
fistps
sbb
outsb
sbb
inc
nop
inc
sti
xchg
pop
test
add
pushl
std
mov
popa
test
or
nop
jno
cmp
std
js
mov
mov
sbbl
lds
cwtl
clc
ret
mov
dec
pop
and
push
call
popa
out
pop
aaa
enter
pop
cltd
push
and
insl
mov
sarb
enter
fstpt
adc
jno
stos
mov
dec
incb
cs
xlat
jge
add
pop
push
adc
push
mov
adc
inc
stos
or
jle
add
divl
cmp
adc
xor
fsubrs
repnz
mov
jle
icebp
mov
in
add
int
xchg
mov
cmpsb
and
arpl
xor
cwtl
repz
loope
inc
loop
xor
ret
inc
mov
lds
fsubl
sub
mov
mov
inc
sbb
or
sbb
cli
lods
or
repnz
out
scas
test
test
out
push
and
test
mov
add
add
and
push
data16
mov
dec
xor
scas
es
push
jecxz
rcrb
repnz
jle
fs
adc
rorl
ds
push
and
test
xorl
sub
andb
xorl
neg
lret
call
push
out
sub
loope
or
xor
sahf
mov
xchg
lret
mov
and
push
and
mov
sub
mov
dec
dec
mov
ret
ja
lock
std
mov
or
pop
fwait
dec
pushf
repnz
pop
sahf
mov
add
mov
mov
loop
jno
int3
in
bnd
push
mov
lds
fs
inc
mov
mov
inc
jno
add
or
fistpl
cltd
mov
iret
sbb
push
loope
mov
cwtl
push
xchg
mov
aaa
into
sbb
roll
or
loopne
imul
xchg
jp
xor
ret
repz
iret
xchg
xor
lret
jns
popa
mov
push
or
adc
in
rclb
sbb
or
jne
push
cmp
arpl
fistps
cmp
sub
inc
push
or
sub
push
push
mov
add
push
xchg
imul
nop
xchg
scas
loope
sub
js
inc
mov
inc
rclb
orb
sub
mov
push
icebp
pop
test
test
mov
movsl
mov
jnp
fmuls
mov
cmpsl
cs
daa
or
test
imul
mov
and
ds
push
loope
lcall
sub
xor
sbb
add
data16
sub
xchg
mov
jp
or
outsb
leave
mov
mov
jl
rclb
pop
in
dec
pop
and
jno
aaa
sarb
movl
sbb
mov
out
mov
cmpsb
bound
lods
cld
arpl
stos
jae
adc
mov
mov
jns
sarl
nop
shrb
dec
mov
ficoms
out
and
xor
fisttpl
xchg
cmpsl
ret
push
repz
pop
adc
in
xor
lret
sbb
pop
or
arpl
pop
sbb
fs
std
mov
mov
push
fnstenv
movsb
jecxz
loope
jb
sub
jg
xchg
lds
fldt
pop
mov
out
fidivs
fidivl
xchg
cmp
push
fs
outsl
mov
add
insl
popf
jae
mov
xchg
je
push
sbb
adc
in
xchg
mov
jns
ss
mov
mov
stos
jnp
and
mov
mov
and
sahf
fidivl
shrl
push
or
das
jmp
shrl
mov
jge
sub
movsl
add
fstpt
xlat
cmp
push
xchg
rcrl
push
insl
sbb
add
push
notb
out
jne
xchg
cs
test
das
cmp
xchg
cmp
std
enter
ret
scas
sbb
out
jnp
cmpsb
pop
out
mov
jo
inc
mov
pop
and
mov
pop
sub
js
popa
jmp
aam
and
int3
xor
push
filds
mov
rcrb
xchg
lds
jp
scas
ret
popa
data16
xchg
int
popa
lods
mov
mov
cmp
mov
push
sub
mov
mov
fldt
repnz
dec
aaa
dec
neg
xchg
lret
or
pop
dec
xchg
sub
fmull
movsb
insl
dec
jo
jg
add
xor
mov
adc
add
pusha
test
sub
push
mov
mov
ss
ds
loopne
jno
cwtl
push
int3
cmp
into
inc
in
sti
nop
lcall
or
enter
adc
scas
movsl
sub
pop
inc
and
fldl
xchg
pop
pop
pop
push
sbb
shrb
imul
or
sub
add
rolb
adc
aas
cmp
mul
data16
gs
std
fsubr
jg
lahf
or
sti
add
out
jae
mov
aas
sbbl
outsl
lods
xor
xchg
and
and
xchg
int3
in
push
add
ja
ficomps
jecxz
xchg
popa
mov
add
inc
jnp
mov
adc
popf
or
je
lcall
imull
pop
mov
xor
or
pop
jne
fidivrs
adc
lret
arpl
cmp
fs
mov
dec
data16
mov
xchg
sbbl
pop
dec
mov
add
cmp
idivl
push
in
add
or
outsb
cmp
inc
push
ret
mov
xchg
outsl
add
mov
aaa
stos
push
bound
leave
add
xchg
roll
mov
push
test
decl
push
aas
repnz
pushf
in
daa
addr16
sub
insb
xchg
scas
xchg
mov
aas
test
cli
adc
in
push
inc
mov
xchg
pop
mov
andb
popf
lea
jl
mov
in
div
jmp
adc
cmpsl
push
cltd
cli
sbb
sbb
leave
push
sbb
adc
daa
lret
dec
pop
stc
xor
mov
xor
xor
insl
in
inc
dec
out
movsb
add
repz
outsb
je
icebp
mov
aas
cmc
ficompl
aas
aam
sbb
jno
pop
data16
lret
sub
mov
jge
outsb
nop
loopne
jns
push
clc
retw
jmp
stos
mov
push
fnstsw
in
shrb
mov
xor
dec
cwtl
push
and
div
jp
shl
dec
lahf
mov
outsb
ret
mov
cli
or
rclb
rclb
xor
and
sub
lret
repz
xchg
test
add
jnp
lret
data16
sub
fs
icebp
fwait
stos
test
mov
pop
or
cli
push
mov
xor
dec
rol
push
jmp
mov
aaa
jle
call
push
mov
test
sub
repnz
cltd
fcmove
push
test
les
add
mov
outsl
pop
jnp
jg
lcall
addr16
mov
clc
push
fs
sub
push
mov
cld
sub
jecxz
sub
bnd
inc
shll
dec
aam
sbb
mov
fsubr
and
lret
ficompl
cmc
idivb
test
and
out
xchg
addr16
sbb
sbb
xor
push
fs
sahf
push
lea
xchg
push
out
xor
insl
mov
cmp
aaa
ret
movsb
xchg
roll
leave
adc
sti
xlat
jb
test
mov
pop
mov
xorb
add
push
jmp
xor
pop
push
jae
and
dec
sub
jno
cs
repz
cmp
leave
pop
mov
mov
mov
lea
jno
add
xchg
inc
arpl
pushf
ret
imul
fwait
cmp
fwait
mov
xchg
clc
mov
ds
push
daa
fdivrs
testb
inc
mov
aaa
leave
adc
ljmp
sti
cmp
cmp
subl
xor
mov
cli
inc
lea
lds
add
fsts
inc
outsb
cld
dec
daa
popw
fcmovb
subl
mov
cmp
push
mov
out
add
inc
aam
mov
push
jae
cwtl
push
aas
sahf
push
pop
jo
mov
ret
sub
rcl
adc
mov
xor
rorb
int3
pop
dec
iret
insl
scas
mov
rclb
mov
daa
in
xchg
xchg
repnz
popf
sahf
nop
stos
xor
loope
cmp
or
jge
inc
pop
sbb
roll
pop
addb
mov
mov
sbb
rol
std
or
stc
push
shll
mov
cmp
cs
lea
scas
mov
and
mov
and
jge
data16
sbb
add
jb
push
mov
in
cli
mov
das
jmp
dec
test
adc
or
and
xchg
jmp
daa
push
jmp
inc
lcall
xchg
rcl
pop
test
cmp
les
sbb
inc
iret
xchg
lret
add
sub
push
inc
addr16
sbb
test
iret
xor
jns
xchg
ja
fnsave
xor
lock
sbb
orl
xor
dec
aad
into
adc
adc
xlat
sarl
push
push
aas
pop
in
mov
cmpsb
cmp
jge
repz
cli
scas
scas
movsb
push
sbb
sbb
das
push
sbb
sub
int3
push
sub
mov
mul
dec
push
xor
sub
xchg
cmp
inc
xchg
pop
ficomps
dec
shll
sbb
in
fldt
iret
add
xor
jnp
add
pop
jmp
lods
in
ljmp
gs
mov
add
call
rorb
fwait
cli
mov
cli
lahf
xchg
push
aas
mov
jae
lea
or
lahf
pop
or
fcmovbe
fidivrl
or
inc
cmp
adc
hlt
test
aam
pop
lods
sub
mov
push
out
mov
and
out
pushf
int3
push
or
cli
rolb
insl
iret
mov
or
pop
jo
lock
jg
jno
test
lcall
pop
push
das
and
adc
add
lods
bnd
pusha
in
ror
mov
popa
xchg
cmp
bnd
mov
dec
push
or
out
scas
add
xor
pop
ljmp
jae
and
push
lods
movsb
pop
xchg
add
jbe
stos
leave
adc
pop
dec
in
sbb
lret
in
xor
movsl
xor
out
mov
push
repnz
lods
cmc
rolb
pop
xchg
cmp
push
pop
xchg
mov
adc
and
popf
pushl
fsts
xchg
xchg
pop
imul
inc
outsb
aas
roll
cmp
lock
lock
lcall
test
repnz
push
lods
enter
into
sub
pop
inc
mov
jae
push
adc
add
mov
lcall
push
bound
je
and
jae
and
push
mov
call
cmp
sub
push
pop
sub
add
cli
cmpsl
popa
push
and
inc
jmp
jo
addb
mov
fwait
xlat
push
mov
adc
daa
int
adc
fimuls
pusha
jne
fidivs
out
int
adc
mov
mov
adc
loop
out
jne
xchg
rcrl
scas
cwtl
lret
lea
mov
xor
outsl
ret
mov
push
test
or
mov
loopne
mov
lds
pop
mov
mov
cmp
jl
or
add
xchg
fst
push
mov
pop
cmpsl
and
adc
add
push
imul
xor
ljmp
sub
cmc
movsb
push
dec
sub
inc
les
and
xor
mov
mov
mov
mov
push
lcall
or
nop
cli
or
jmp
mov
insl
in
mov
cs
test
es
ja
mov
ficoml
lret
fistl
mov
pop
mov
jge
adc
test
xchg
pop
in
mov
movsb
lods
and
jae
push
add
leave
or
inc
dec
add
push
movsl
das
bound
mov
sub
movsb
sbb
lret
icebp
repnz
pop
inc
inc
or
pop
test
ret
mov
mov
dec
and
fidivrs
xor
mov
into
sub
daa
sub
dec
dec
and
jnp
jl
mov
xchg
xchg
dec
mov
fidivrl
jno
xor
in
das
cmp
scas
add
push
xchg
push
push
jmp
jmp
sahf
dec
sub
std
dec
outsl
scas
and
enter
mov
mov
mov
scas
push
into
adc
subl
mov
out
les
xchg
push
mov
loop
sarl
jbe
jnp
push
stc
add
and
mov
jmp
sub
sti
jg
add
mov
in
jle
cmp
nop
test
inc
dec
fisttps
aam
lahf
jg
loope
arpl
pop
int
push
bound
jns
clc
cmpsl
stc
xchg
inc
mov
cmp
mov
and
xchg
pop
cmpsb
aaa
mov
mov
mov
push
aad
in
hlt
rclb
test
mov
popf
or
fisttpl
into
imul
mov
add
les
fdivrl
sbb
sbb
xor
cmp
pop
add
arpl
or
aam
es
jns
xchg
and
jo
cld
jl
shll
xor
shrb
xchg
cli
mov
push
loop
lret
add
sbb
lret
jmp
test
sub
loope
cmc
popa
fisubrl
sbb
or
movsl
mov
cmp
lods
js
pop
fxch
sbb
movsb
push
icebp
jl
inc
xchg
xchg
mov
in
jge
aaa
sbb
adc
out
gs
pop
push
sub
sbb
jge
out
and
sbb
inc
popf
stos
pop
jecxz
mov
cmp
pop
and
cmp
jmp
cmp
mov
cmc
int
ljmp
jg
mov
mov
incb
aam
adc
test
into
dec
mov
mov
adc
data16
enter
dec
jo
les
cltd
outsl
xchg
dec
stc
push
mov
push
insb
push
lret
inc
cmc
int
jp
adc
jle
cmp
hlt
mov
fnsave
lods
bnd
push
aaa
std
jae
lods
ljmp
xor
mov
lds
dec
mov
xchg
in
xor
xor
in
cltd
movsb
sbb
adc
jmp
cld
mov
add
incb
mov
push
xchg
jmp
fsub
mov
mov
xchg
out
scas
or
lds
or
pop
daa
push
pop
fldenv
xchg
pushw
push
sar
pop
pop
enter
shr
imul
fs
inc
sub
and
cmpsl
subl
push
les
dec
and
jecxz
push
inc
int
pop
in
xchg
pop
ja
mov
addr16
fildll
jmp
iret
repz
cmp
lahf
push
stc
dec
xor
push
mov
cltd
ja
fldenv
pop
aas
into
es
sub
push
stc
je
movsb
in
daa
stos
dec
fs
xorb
negb
cld
scas
js
push
sbb
test
fiadds
xchg
aas
push
in
jecxz
add
ljmp
push
push
adc
aaa
mov
mov
push
mov
inc
sbb
icebp
bound
push
shrl
in
pop
pop
dec
jno
je
ljmp
cmpb
pop
and
fildll
fs
sbb
inc
mov
mov
frndint
mov
popf
addr16
inc
insl
int
pop
sub
incl
popa
add
idivl
jmp
mov
jmp
loope
mov
call
sub
test
push
sbb
adc
out
fdivl
loope
jp
aas
out
dec
clc
jecxz
sub
jge
xchg
xchg
jbe
int
xor
lods
mov
loopne
cmp
xchg
mov
movsl
dec
dec
dec
loope
jmp
mov
leave
in
clc
or
dec
cwtl
pop
jno
adc
or
or
fs
clc
xor
jl
pushf
ljmp
xchg
push
pop
adc
rolb
sub
loope
das
cltd
pusha
or
mov
pushf
nop
ja
or
lcall
push
jp
fdivl
outsb
sub
inc
sahf
dec
jmp
cmpsb
out
cs
stos
je
push
out
stos
mov
fs
shlb
call
mov
sbb
or
and
sar
into
mov
cld
imul
enter
push
add
shrl
hlt
rcrl
incl
mov
add
jne
sub
fldl
pop
mov
mov
cmp
sbb
fsubrs
popf
xor
scas
cmp
mov
inc
cmpsl
adc
xor
xchg
jb
jae
sbb
aas
push
or
rcll
mov
mov
and
dec
mov
sbb
xor
xchg
jmp
pop
shll
call
mov
mov
idivb
dec
adc
mov
pop
enter
add
dec
adc
push
jl
lods
sbb
mov
addr16
inc
and
ds
xor
xor
in
pop
cmp
mov
dec
adc
jns
fnstenv
xchg
inc
lods
mov
cmpsb
xlat
bswap
repz
mov
fidivrs
mov
jmp
dec
mov
inc
stos
push
repnz
xchg
repz
stos
ds
jo
notb
xor
imul
inc
adc
lret
fildl
mov
dec
mov
out
cmpsb
adc
loope
or
ja
xchg
movl
or
jno
sub
sbb
push
fdivr
flds
push
dec
dec
imul
cmp
insl
test
pop
imul
cltd
cmpsl
xchg
int
into
mov
add
stos
loop
mov
jecxz
sbb
jmp
cmp
push
daa
leave
mov
and
repz
imul
jnp
push
aad
pop
imul
ret
jno
fisubrl
out
enter
ret
popa
cmpsl
mov
push
adc
add
pop
and
xchg
pop
mov
xor
arpl
push
jb
or
mov
mov
mov
in
movsl
inc
cli
sbbl
or
xor
xorb
test
imul
or
and
mov
dec
ja
jp
dec
inc
cmp
into
sbb
add
cmp
lock
cmp
xchg
xchg
pop
mov
mov
dec
push
push
sahf
aaa
movsl
scas
push
jnp
adc
jbe
mov
movsb
pop
adc
or
faddl
les
icebp
cli
sub
data16
daa
and
inc
imul
cmpsb
popa
fnstsw
int
sub
ss
mov
int
mov
imulb
insl
lret
into
insl
test
sti
frstor
xchg
rclb
imul
in
adc
add
jbe
lret
cltd
jnp
insl
int
push
sbb
jnp
adc
mov
inc
das
loopne
je
mov
mov
jp
shll
movsl
sub
xchg
imul
stos
lret
ret
inc
push
adc
mov
push
dec
push
js
test
bound
xchg
mov
jecxz
cli
fs
lret
xchg
pop
sbb
jp
in
mov
das
add
mov
cld
arpl
hlt
jge
inc
cld
aam
cltd
cld
push
mov
jmp
xchg
mov
test
mov
mov
pushf
out
fwait
imul
lahf
cmp
adc
test
pop
push
jp
inc
decl
loopne
and
push
add
add
insb
xchg
inc
add
xor
pop
mov
xchg
pop
mov
insb
enter
out
jmp
fadds
add
and
push
xor
pop
sub
push
out
mov
lock
std
gs
add
call
inc
pop
sti
pushf
add
mov
and
fildl
adc
cmp
popf
or
xor
divl
insb
cmp
lods
or
inc
fsubr
jmp
sbb
adc
ljmp
push
push
movsb
imul
sub
cmp
or
idivl
test
jbe
aaa
or
jge
cmp
and
ficoms
aad
push
mov
lods
mov
enter
add
gs
jb
rol
pop
and
cli
fisttpll
or
ss
ljmp
lock
cmpsb
mov
jns
adc
mov
jb
and
pop
jnp
jle
outsl
jmp
loope
mov
jae
std
mov
inc
pushf
or
stos
and
int3
in
divl
mov
pusha
push
lcall
and
push
jp
mov
int
cld
aas
ja
js
sbb
mov
push
mov
xlat
pop
leave
pop
pop
and
add
outsl
pop
bound
and
mov
packssdw
iret
aad
push
xor
inc
mov
jp
push
adc
xchg
xchg
stc
or
cs
inc
mov
xchg
xor
iret
nop
stc
mov
add
repz
shr
inc
test
add
jmp
jae
push
lret
mov
psrlq
dec
addl
mov
fwait
mov
inc
aad
jae
leave
mulb
adc
bound
xor
icebp
repnz
lds
lods
push
xchg
lock
scas
in
cmp
out
lret
xor
sbb
xchg
loopne
rcrb
push
sarb
cwtl
sbb
cwtl
daa
cwtl
jg
xor
mov
jo
push
js
sbb
pusha
std
sahf
test
jns
pop
push
mov
or
mov
aaa
xchg
and
mov
sti
icebp
adc
data16
incb
add
ja
mov
ret
pop
xchg
mov
sahf
xchg
shufps
stos
cmp
loopne
lods
pop
jbe
sbb
idiv
stos
repz
dec
repz
ss
inc
loope
enter
and
cmp
cmp
and
mov
xchg
fmul
xlat
xor
dec
or
push
xchg
lea
mov
xchg
mov
stos
movsb
adc
movl
pop
mov
stos
add
int
fnsave
cmp
inc
lock
out
insl
shll
xor
pop
jb
jg
mov
mov
push
sbb
je
stos
aam
lods
test
iret
ss
mov
mov
xchg
jmp
aaa
xchg
dec
lock
or
adc
dec
xchg
sbb
out
adc
adc
sti
sahf
or
and
push
aam
aaa
mov
aam
jo
xchg
push
sbb
push
outsl
inc
popfw
push
movsl
in
daa
pusha
mov
jmp
inc
addr16
fdivrs
add
scas
popa
outsb
inc
iret
jo
adc
mov
call
fcmovnu
idiv
xchg
push
movsb
icebp
pop
xor
ja
enter
or
std
inc
mov
sub
das
gs
negl
hlt
outsl
dec
mov
and
clc
orl
movsl
push
sbb
mov
sbb
popa
mov
pushw
test
xchg
pop
jmp
sub
mov
jl
dec
push
xorl
pop
jb
inc
push
jmp
xchg
dec
jns
shrl
sar
or
add
das
pop
ljmp
jb
aas
and
adc
mov
outsb
pop
sub
repnz
sahf
movsl
shrl
enter
adc
pushf
repz
pop
into
fucomi
std
and
jno
mov
cmc
sbb
cmp
les
mov
and
movsb
insl
jo
insl
pop
and
jle
add
mov
jp
call
jle
lods
mov
mov
adc
out
sub
pop
repz
xchg
stos
or
ljmp
out
mov
insb
xchg
xor
jp
cmp
xchg
scas
pop
lret
out
mov
push
mov
jno
dec
xchg
mov
js
push
sbb
out
jmp
mov
mov
and
insb
mov
pop
pop
nop
mov
into
mov
arpl
sti
cmp
pop
repz
dec
pop
clc
mov
testb
push
cmpsl
mov
pop
mov
push
rcr
aaa
pop
pop
lahf
push
adc
repz
mov
fwait
mulb
insb
iret
cli
xor
lods
loop
mov
or
mov
ljmp
dec
decb
mov
adcb
test
cmp
fimull
scas
cmpsb
sbb
neg
cmc
js
xor
adc
jle
xchg
xchg
clc
popa
test
leave
cmpsl
aad
adc
fsin
addl
pop
out
frstor
lahf
and
xchg
repz
test
pushf
pop
fwait
negb
sub
or
add
add
scas
fs
push
scas
sarl
insb
pop
or
xchg
movsl
adc
out
xchg
mov
in
lcall
xchg
fdivp
sbb
and
add
sub
jno
insl
jle
out
sarb
mul
xchg
pcmpgtb
jg
test
add
outsl
sbb
mov
xor
rolb
subb
sub
das
andl
xchg
jge
fbstp
mov
push
pop
ljmp
mov
adc
sub
sarb
mov
jae
repnz
lret
push
mov
adc
mov
or
mov
cmp
cmp
and
shl
jg
mov
in
sub
mov
xchg
fsubr
and
adc
arpl
pop
sbb
inc
add
push
shll
ficompl
xor
or
or
test
jge
or
loop
mov
jo
push
sub
pop
sarb
add
and
sbb
test
std
xor
push
xor
fcmovu
and
loope
push
xchg
and
push
mov
xor
inc
xchg
push
mov
sub
hlt
push
mov
jmp
cmp
imul
dec
loop
mov
adc
js
pop
xchg
dec
sbb
loope
dec
dec
lcall
mov
add
jg
gs
mov
in
jno
push
jns
js
pushf
jl
stos
ret
arpl
ret
push
daa
je
nop
jle
add
adc
jns
pop
jb
jl
xchg
jae
jb
sbb
dec
adc
push
sub
xor
lds
call
pusha
ss
into
rcll
pop
lret
sarb
and
mov
repz
mov
fsubr
jae
out
sub
or
test
stos
push
sti
pop
inc
mov
dec
je
mov
sub
fcmovnbe
jg
pop
popa
mov
cmp
mov
xor
jecxz
data16
dec
mov
pusha
popa
add
adc
cmp
add
or
fs
pop
cmp
dec
dec
ds
pop
cmp
cltd
inc
xor
mov
ret
sbb
hlt
push
add
cmp
es
push
mov
jmp
pusha
dec
xchg
ja
fnstenv
push
aad
sub
push
push
lcall
je
gs
adc
jl
popa
loop
pop
test
fiaddl
sub
sub
andl
pop
ret
pop
inc
imul
lods
lods
inc
pop
mov
xor
mov
pop
adc
mov
test
lock
int
cmpsb
mov
jne
test
push
mov
fneni(8087
push
cmp
dec
insl
push
das
jo
fmuls
push
sbb
mov
cs
sbb
es
dec
iret
pop
adc
stos
subb
icebp
lret
jne
out
gs
push
aad
dec
push
inc
lcall
mov
xor
loope
push
xchg
rolb
outsl
cltd
sbb
jp
addr16
insb
cmc
fmul
insl
or
fnsave
pop
dec
les
filds
lcall
mov
xor
dec
jns
adc
in
sbb
lods
pop
push
out
pop
aam
adc
mov
mov
pop
ss
mov
sbb
aaa
push
jmp
adc
ljmp
outsl
outsb
jmp
cmpsl
std
mov
daa
ret
xor
add
or
push
and
or
scas
insb
and
mov
stc
ret
leave
mov
in
cli
push
jns
mov
outsb
sub
dec
stos
mov
sti
sub
sub
inc
in
jnp
mov
xchg
inc
in
adc
inc
les
pop
push
xchg
pop
pop
and
lahf
mov
or
cli
jecxz
pop
insb
mov
jl
shll
push
push
or
cmpb
rolb
inc
pop
enter
clc
and
sub
mov
push
xor
add
out
test
aaa
xchg
test
and
aaa
mov
pop
or
xor
sbb
ret
xor
jb
stos
adc
and
rcl
popf
enter
ret
cmp
mov
push
lock
ljmp
pop
pushf
movsl
cmpsl
outsl
loope
pop
and
jbe
bound
or
add
ror
sbbl
inc
push
jbe
mov
sbb
and
out
or
add
adc
fstpl
jge
loope
add
mov
inc
lds
outsl
dec
stos
inc
stos
in
add
and
jmp
cld
inc
loope
inc
xor
add
mov
cmp
sbb
ret
test
cmp
push
lret
cmp
lea
fldenv
push
xchg
push
mov
pop
fdivs
push
push
jne
les
loop
jg
je
adc
mov
popa
aam
shlb
xchg
xchg
inc
jno
fldcw
mov
mov
lea
leave
push
fdivp
mov
xchg
adc
outsb
adc
pop
outsb
mov
mov
dec
lret
dec
data16
inc
pop
leave
scas
pop
xchg
dec
adc
mov
leave
jnp
ds
fwait
stc
jecxz
stc
cmp
xor
or
outsl
inc
ret
jbe
inc
jg
pusha
cltd
std
aad
mov
xor
and
pop
inc
scas
mov
fucom
test
imul
adc
out
sbb
add
mov
xchg
shrl
cmp
xor
sbb
das
mov
xchg
add
or
pop
mov
adc
mov
sahf
mov
ja
inc
fimuls
pusha
mov
adc
add
mov
fs
sti
mov
stos
ja
dec
push
daa
stos
jmp
xlat
loop
mov
jmp
sarb
out
mov
mov
aam
jg
aad
adc
xchg
incl
lret
iret
gs
xchg
push
cmc
loop
testl
in
ja
ret
movsb
rolb
ret
fistps
cltd
mov
call
sarl
jbe
negb
mov
insl
mov
ret
mov
lret
das
imul
loopne
cwtl
jmp
dec
fsubrp
add
xor
test
push
in
jp
clc
mov
push
mov
add
pop
adc
out
or
ds
cs
fiadds
popa
cmp
imulb
lods
sub
add
mov
sbb
test
iret
fdivrs
mov
cwtl
pop
jp
test
ret
pop
xor
push
xchg
xlat
xchg
iret
out
test
mov
add
scas
test
mov
sarl
jle
test
fnstcw
sbb
cmpsb
es
push
pop
jnp
inc
and
push
add
add
xor
in
sbb
outsl
add
ret
push
sub
jne
stos
mov
cld
and
cmp
mov
movsb
sti
xor
clc
dec
aad
mov
sub
sbbb
or
jmp
sub
xor
fimuls
lods
test
outsb
xchg
cmpb
and
cmc
adc
cmp
mov
mov
inc
inc
jbe
jp
sbbl
ja
scas
jecxz
jle
pushf
ljmp
pushf
dec
in
push
cwtl
mov
test
sbb
or
pop
decb
mov
idivb
rolb
cmp
or
sbb
das
cmp
and
lods
jb
push
mov
movsb
and
outsb
dec
icebp
fcmovb
mov
out
jmp
lcall
imul
frstor
mov
jge
shlb
push
and
incb
cmp
push
jbe
arpl
jmp
test
and
inc
in
pop
ficoml
aam
inc
jnp
cmp
xor
mov
sbb
std
mov
in
pop
inc
xchg
cmp
mov
push
sub
out
mov
cmp
cmp
mov
mov
adc
ret
mov
push
jmp
leave
mov
pop
mov
mov
push
incl
lock
and
iret
imul
sbb
nop
lods
in
in
andl
inc
xor
dec
pop
inc
out
push
inc
add
fcomps
and
mov
jo
rsm
test
cmp
andb
sub
xor
xchg
inc
aam
sbb
mov
divl
int3
cmpb
adc
and
mov
mov
push
mov
test
lock
movsl
mov
sbb
pop
or
xchg
aaa
pop
pop
ljmp
jnp
inc
daa
add
dec
adc
popf
xchg
mov
push
das
and
mov
dec
imul
ffreep
test
sbb
out
nop
push
adc
pop
pop
arpl
repz
fiaddl
jg
imul
stos
int
or
jo
mov
inc
int
mov
inc
push
dec
or
fdivs
std
cmpsl
cmpsl
les
movsb
mov
push
push
cmpl
jl
xor
out
pop
scas
add
and
jle
iret
jp
xchg
out
jno
push
xchg
mov
sub
stos
cmc
sbb
sub
sarl
outsl
or
shll
pcmpeqb
dec
jge
xor
jno
xchg
mov
mov
cmp
repnz
int3
push
ret
lods
xchg
repz
or
pop
push
and
rcll
bound
sahf
sbb
fcompl
popf
mov
mul
mov
outsb
jae
lret
pop
cmp
cltd
idiv
adcl
fcos
adc
imul
ds
mov
xchg
outsl
int3
lahf
imul
hlt
hlt
ret
ljmp
jg
add
int
or
lods
cwtl
stos
daa
cmp
and
push
dec
fstps
in
test
sbb
aas
mov
inc
mov
cmp
ret
scas
push
movsb
pop
adc
or
imul
lods
inc
stos
xor
and
outsl
inc
mov
bound
xchg
aam
pop
leave
dec
inc
out
cwtl
in
movsb
fst
ljmp
movsb
sub
adcb
mov
stos
pop
dec
jno
xchg
ljmp
xchg
fildl
outsl
sbb
mov
sub
inc
loope
js
cs
sub
mov
aam
insb
lret
ss
and
sub
js
daa
sbb
mov
jne
repnz
pop
lahf
mov
ja
pop
sahf
inc
push
aas
pop
xor
mov
inc
mov
inc
ret
jl
aas
icebp
pop
and
outsb
and
addb
loopne
push
lds
hlt
jmp
xor
mov
cmpl
into
xchg
nop
lret
xchg
and
les
fists
fxch
gs
pop
dec
or
cmp
imul
adc
mov
jae
psubw
push
push
cmp
std
and
push
mov
pop
ss
int3
or
adc
jmp
lret
js
dec
clc
cmp
mov
bound
in
mov
xchg
and
pop
ja
adc
cwtl
testb
pusha
imulb
sbb
add
inc
int
out
jle
mov
int
sub
pushf
xor
out
cltd
stos
mov
pop
mov
pop
jle
sub
jns
mov
pop
push
je
mov
js
dec
std
insb
mov
outsb
mov
or
and
cmp
dec
enter
outsl
mov
jp
sbbb
cmp
mov
and
lcall
pop
ja
ret
fdivs
xlat
add
mov
in
lea
out
dec
sbb
movsb
cmpsl
xchg
jbe
mov
mov
or
or
cmp
push
push
or
cmp
call
icebp
xor
xor
add
mov
cs
jnp
xor
push
aam
adcb
mov
jno
mov
sub
mov
jp
lods
in
mov
adc
and
or
shll
cli
out
fimull
bound
in
cld
xchg
jp
mov
sub
lahf
scas
insl
sti
in
pop
or
loop
or
lock
jmp
dec
push
adc
cli
das
arpl
mov
add
xchg
cltd
sub
push
lods
sub
fisttps
dec
push
sbb
fiadds
aaa
pop
repnz
ljmp
push
inc
addb
mov
jmp
out
cs
mov
add
out
cs
adc
repnz
aaa
pop
cmpsb
outsb
inc
adc
ja
int3
sbb
aam
aaa
mov
cmpsb
or
out
push
js
mov
call
shll
adc
push
jne
lea
ret
inc
mov
cmp
cmp
push
mov
aas
mov
or
xchg
sub
mov
or
or
mov
add
fs
sbb
cs
pop
int
aaa
pop
mov
jg
or
adc
pop
mov
shrl
mov
mov
in
mov
xchg
dec
mov
mov
cmp
sub
negl
int
dec
icebp
or
add
repz
fisubs
lods
jl
inc
push
mov
rcrl
dec
mov
cs
jns
call
jl
inc
int
repz
mov
stos
jb
push
insb
movsb
pop
out
mov
repnz
ss
nop
aam
fbstp
jg
js
push
loope
rcr
es
cmp
stos
cmp
dec
popf
adcl
mov
iret
call
push
arpl
push
and
leave
out
rcrl
and
enter
cmp
dec
insb
mov
mov
dec
outsb
xor
jb
sti
pop
add
shlb
jle
mov
sub
push
jmp
mov
test
sub
inc
xor
xor
push
lods
addb
inc
loope
cmp
adc
movsb
pop
cmpsl
iret
add
mov
sub
jne
pusha
fldl
in
popf
sub
cmp
cmpsl
je
xor
in
mov
jl
insb
jns
shlb
sahf
or
xchg
push
mov
dec
sahf
sarl
jb
ret
test
sahf
adc
imul
les
popa
int3
data16
bound
cmc
xchg
mov
lds
clc
femms
xchg
mov
cmpsl
dec
into
jle
jns
and
std
xchg
inc
sti
repnz
mov
xchg
mov
mov
mov
xor
inc
arpl
push
mov
movsb
push
mov
sbb
inc
pop
ja
push
cmp
push
cmpb
aas
add
or
cmpl
mov
xor
fidivs
xchg
popa
test
mov
jmp
repnz
add
rorb
jp
sahf
ja
and
sbb
fiadds
mov
mov
adc
rorb
pushf
or
pop
push
fsts
aam
out
inc
cmpl
push
in
in
push
jbe
in
aad
loop
jg
out
jne
jmp
push
sbbl
or
aam
adc
lret
xchg
sub
inc
sub
es
push
inc
xor
sbb
mov
into
dec
leave
push
push
addr16
mov
push
adcb
movsl
jmp
repz
sbb
mov
arpl
push
imul
sbb
fwait
out
arpl
dec
cwtl
xor
mov
mov
pop
ljmp
cmp
pop
iret
stos
pop
pop
sbb
push
sarl
fnstsw
pop
and
jnp
pop
idivl
sbb
pop
mov
mov
js
push
push
xchg
idivl
add
test
out
fs
inc
mov
and
mov
flds
std
je
or
roll
in
cs
jne
sub
jg
push
inc
sbb
jb
push
pop
jge
jecxz
out
pop
xchg
jg
rcrb
lea
popf
pop
and
idivl
sti
jl
enter
in
lods
aaa
push
adc
aaa
or
js
or
pop
fsubrl
mov
es
fs
push
popa
dec
or
jno
pushf
mov
popf
inc
sarl
push
push
lcall
icebp
and
lcall
daa
mov
iret
pushf
jp
jae
repnz
cmp
jl
in
mov
inc
adc
sub
jmp
incb
vfmadd231pd
sar
fidivs
sub
and
and
add
or
xchg
push
scas
jmp
or
add
add
scas
sahf
pop
jno
cs
std
pop
mov
cmpsb
fldt
jg
xchg
pop
mov
test
xlat
mov
jne
or
rcrb
sbb
ret
jle
mov
jo
out
dec
call
push
jle
xlat
pop
jns
repnz
add
push
arpl
inc
sub
test
pop
or
cwtl
mov
pusha
lret
daa
inc
cmc
jmp
pop
cmpl
lret
xlat
mov
xor
and
mov
fnstsw
sbb
stc
shrl
jp
nop
fcomps
pop
sub
mov
ror
imul
lret
push
adc
andb
imul
lods
add
xchg
in
fiaddl
mov
mov
mov
push
shrb
clc
push
into
adc
les
mov
mov
int
popf
enter
add
push
cmp
adc
lock
int3
dec
mov
mov
and
add
or
xchg
bound
and
jge
cmp
push
imul
jp
xchg
mov
stc
jb
enter
pop
xchg
push
push
mov
arpl
add
xchg
adc
add
adc
inc
jb
jno
bound
sbb
add
outsb
dec
fucomi
add
scas
test
dec
mov
dec
ljmp
mov
popl
jb
push
sahf
cltd
pop
imul
in
shrb
loopne
pop
outsl
inc
stc
pop
push
inc
jns
lds
mov
imul
lods
test
test
rol
push
cmpsl
fdivs
push
mov
lea
inc
cmpsb
fidivl
push
adc
pop
xchg
xchg
sti
test
mov
mov
ja
xor
jmp
xor
jp
out
fdivrl
sub
aaa
add
sbb
divb
cmp
gs
xor
jmp
dec
push
in
add
push
div
std
add
dec
aam
je
mov
aam
adc
jbe
std
addr16
aam
jb
pusha
mov
bound
popf
into
pop
mov
loope
inc
fildll
push
shrl
xlat
popl
xchg
sub
pop
jnp
push
lret
outsb
inc
add
movb
sahf
data16
rcr
and
mov
sbb
pop
mov
in
insl
mov
lods
imul
mov
sbb
stc
in
or
mov
dec
mov
xchg
xchg
cmpl
push
test
pop
fstl
pop
jmp
mov
sbb
jnp
pop
scas
mov
pop
push
pop
mov
hlt
adc
popa
mov
shll
rcrl
fnstenv
es
xor
pushf
aam
std
lods
xchg
rorl
sti
loope
xchg
adc
xor
loop
scas
cmp
fnstenv
push
insl
sbb
je
sbb
incb
cmc
sbb
push
mov
push
bnd
add
sub
js
or
addr16
negl
loopne
hlt
push
les
cmc
movsb
sbb
in
xchg
test
add
dec
push
push
jb
lea
sti
das
mov
lret
arpl
aad
out
pop
shlb
jb
inc
pop
inc
cltd
and
out
push
adc
adc
scas
imul
mov
call
fs
stos
xlat
fwait
adc
mulb
xor
int3
push
fidivs
add
out
test
xor
jno
mov
inc
or
enter
das
push
lahf
xchg
push
cmpl
jle
sub
out
inc
xor
adc
or
inc
dec
mov
pop
pop
push
mov
jge
leave
jno
int3
imul
into
clc
add
loopne
data16
inc
jmp
adc
or
cmp
inc
dec
insb
cmc
movsl
test
or
and
mov
mov
inc
adc
mov
lods
jbe
dec
inc
pop
adcb
ss
jo
dec
sub
jno
push
inc
scas
jbe
add
mov
xor
movsl
lret
pop
jno
mov
rorb
fcmovne
fucom
pop
hlt
mov
mov
adc
sub
inc
xchg
xlat
cltd
push
or
add
inc
pop
mov
mov
das
inc
sub
in
xchg
stc
mov
jp
xchg
mov
sub
dec
loope
sbb
push
loopne
xor
or
arpl
adc
pop
and
daa
je
sbb
repnz
ja
sbbb
enter
popa
mov
cmpsl
dec
call
cmp
lds
iret
push
xchg
mov
push
jge
in
dec
jmp
clc
mov
call
jp
lahf
mov
dec
sbb
rol
fcoms
xchg
push
xor
mov
fs
int
jnp
cli
popa
cmpsb
in
lret
sbb
pop
cmp
das
add
test
lahf
repnz
add
mov
pop
xlat
lds
fs
mov
aam
cmp
dec
dec
xlat
jnp
mov
add
and
mov
dec
xor
mov
jno
cs
ffreep
sti
rcl
xchg
cmpsl
add
adc
test
arpl
imul
cmpsb
push
and
push
loop
adc
insb
mov
adc
shlb
xor
jns
cld
in
lret
mov
push
push
lcall
mov
pushf
cmp
dec
es
mov
jmp
lock
inc
enter
out
shll
lahf
cmc
outsl
mov
xchg
push
arpl
add
inc
fst
dec
adc
and
sti
mov
test
or
insb
push
les
or
jecxz
fstpl
pop
xchg
sub
orb
mov
out
jle
mov
inc
ret
ret
sub
xor
or
mov
shll
xchg
les
lret
mov
imull
in
or
push
rcll
pop
xor
push
xchg
daa
jecxz
adc
pushf
fildl
popa
mov
xchg
ret
outsl
jno
sub
or
sub
test
rol
or
int
dec
in
cmp
fnsave
mov
jle
mov
sub
shll
pop
loope
sti
pop
in
mov
aam
jl
and
test
add
mov
enter
jg
cmp
aas
cwtl
arpl
stc
jecxz
std
cmc
outsb
dec
xlat
push
and
adc
mov
mov
add
das
imul
sbb
lods
movsl
mov
ret
stos
enter
pop
adc
cmpsb
jnp
test
pop
stos
adc
std
sti
sbb
inc
inc
imul
xchg
dec
insb
jp
inc
cld
sub
js
inc
sahf
pop
sub
mov
loopne
sbb
icebp
cmp
scas
outsb
push
icebp
cmp
insl
jno
jge
fsubl
and
lahf
lea
adc
paddq
sbb
arpl
xchg
sarb
or
stos
sbb
out
pop
movsb
dec
add
lea
fstps
lds
jbe
fstps
dec
xor
jnp
rclb
mov
sub
or
aam
adc
inc
pop
out
lcall
ljmp
cmp
push
jg
ja
cltd
sbb
mov
inc
pop
arpl
ljmp
je
mov
imul
cmp
mov
xchg
mov
test
sbb
adc
add
call
and
movsb
bound
sub
sbb
aam
ja
add
ja
fcmovb
xor
or
xlat
xchg
and
imul
pop
stos
sbbl
pop
or
insl
sub
shl
ret
in
and
inc
and
enter
adc
add
mov
in
dec
sub
mov
dec
sbb
push
aas
jg
xchg
subl
cli
adc
mov
add
mov
adc
cld
in
mov
push
mov
fnstsw
in
dec
adc
mov
sub
stos
and
xchg
jge
lock
bound
and
dec
sbb
pushf
dec
pop
scas
push
cli
int3
sbb
imul
movsl
mov
pop
push
int3
gs
or
sarb
or
sbb
out
stc
stos
outsb
push
outsb
into
ds
aas
int
mov
clc
call
dec
pop
imul
xor
sbb
arpl
jecxz
in
or
rclb
imul
sti
rolb
add
out
test
push
mov
sbb
in
and
and
loopne
push
sbb
inc
xchg
loope
jns
stos
out
or
add
xor
loopne
sub
mov
stos
jge
ja
pop
mov
mov
lods
pop
dec
pop
push
adc
and
and
aas
repnz
lock
loop
sbb
pop
call
ja
mov
sub
add
fwait
ret
btcl
push
push
mov
mov
dec
pop
pop
mov
cwtl
xchg
or
mov
lock
arpl
cmp
fisttpll
orl
xchg
in
notb
mov
sahf
push
cmpl
mov
add
into
xchg
nop
js
es
push
xor
inc
insb
das
inc
push
inc
mov
inc
mov
es
inc
xor
test
pop
lock
cmp
sub
stos
cltd
pusha
dec
jo
lock
inc
xchg
inc
icebp
mov
fadds
pop
stos
dec
xor
sbb
in
lret
bound
push
mov
inc
mov
cltd
gs
push
aad
out
inc
bound
jp
jle
push
nop
pushf
mov
and
inc
aas
ds
out
movsb
cli
pop
sti
mov
cmp
xchg
cmc
mov
mov
xchg
jbe
mov
sbb
pop
mov
xchg
enter
in
jg
cmp
cmpb
push
add
clc
aas
xor
sbb
outsb
mov
mov
fs
fmull
fwait
test
cmpsl
push
gs
scas
pop
daa
dec
mov
loope
lock
test
dec
fcomps
ljmp
fimuls
push
cmp
mov
cmp
in
daa
lret
outsl
fsts
dec
mov
xor
test
sbb
popa
push
mov
xchg
movsb
xchg
mov
call
test
int
out
mov
lods
add
cmpsl
inc
aas
inc
cmp
mov
xor
mov
je
inc
insb
ss
sub
inc
loopne
jp
fwait
movsb
xor
jecxz
fisttpll
cmp
lahf
lods
inc
pop
bound
popa
aad
jl
xor
subl
inc
mov
xor
scas
clc
fnsave
xchg
adc
ss
aaa
pause
leave
mov
cld
mov
fcmove
ljmp
sbb
or
xor
xchg
jne
std
add
and
aad
and
pop
adc
inc
fsubl
pop
mov
dec
inc
or
add
sbb
das
aad
lds
push
pop
loop
cmp
push
mov
pop
mov
in
ret
sti
out
leave
mov
xchg
jle
xlat
repnz
outsb
adc
outsb
push
mov
mov
mov
rcrb
xchg
hlt
rol
out
les
aad
rorb
rorl
cmp
clc
add
mov
aas
aad
cmp
insb
testl
in
fsubl
xchg
jae
mov
adc
stc
orb
test
scas
add
push
xor
mov
sbb
jge
mov
sub
insb
les
imul
push
inc
jmp
cld
cmpsb
iret
and
xchg
adc
sbb
loopne
ljmp
ret
fdivrs
fs
dec
lock
cmpsl
push
mov
ficomps
xchg
cmp
out
dec
insl
add
mov
sbb
test
std
sbb
cli
add
mov
xor
icebp
decb
add
je
pusha
scas
pop
jle
sub
push
adc
and
jne
daa
sub
add
gs
testl
xchg
fimuls
sbb
outsl
flds
imul
pop
add
bound
mov
psubusw
call
cld
std
dec
popa
push
outsb
push
data16
scas
cmpsb
pop
pop
movsb
add
push
clc
decb
jge
lcall
leave
mov
call
mov
rcrb
stos
lock
dec
sub
ret
xor
insl
mov
scas
fwait
mov
mov
or
cwtl
or
adc
rcl
and
push
ss
sbb
pop
jns
outsl
pop
dec
pop
cmp
cli
insl
fidivrl
xor
insl
lcall
out
inc
stos
stos
xchg
xor
js
sub
daa
lods
sub
mov
xor
pop
jnp
pusha
jbe
cmpsb
mov
sbb
sti
jp
aam
movsb
call
inc
lahf
jns
mov
mov
cwtl
jmp
and
test
xchg
dec
cwtl
add
out
inc
mov
lock
arpl
dec
dec
cltd
imul
mov
mov
and
das
push
cmp
lods
xlat
mov
out
mov
sbb
flds
sbb
adc
push
scas
fcmovnb
xchg
mov
cmpsb
pop
jl
push
movsl
jnp
or
add
testl
xchg
mov
inc
push
jno
jecxz
dec
dec
or
mov
push
xchg
popl
adc
jne
dec
imul
cmp
lret
cmp
xchg
std
inc
es
xor
enter
push
push
sbb
sub
pop
popa
outsl
mov
rol
in
jo
pop
stos
adc
dec
sbb
movsl
pop
inc
jbe
mov
jb
mov
mov
cli
inc
pop
cmc
data16
fadds
iret
sbb
mov
pop
xorl
idiv
push
push
stc
or
push
negb
enter
xor
lret
or
popa
mov
jbe
mov
aas
rcll
jo
jecxz
xor
dec
je
adc
xchg
push
add
jmp
outsl
mov
faddl
js
divb
push
into
adc
inc
notb
mov
aam
jle
call
sub
in
rol
mov
mov
mov
repz
mov
flds
pop
cwtl
xorl
idivl
xchg
jg
dec
xlat
dec
and
ret
mov
pushf
stc
inc
adc
mov
sbbb
loope
negb
push
ret
xchg
mov
push
xchg
dec
mov
mov
fisttpl
fucomi
xchg
fisubrl
shrl
mov
movsl
jp
sbb
sub
in
add
dec
push
test
or
js
push
sub
aas
xchg
xor
dec
out
ljmp
ss
iret
dec
stos
rcrb
or
lods
test
xor
mov
inc
movsl
outsl
and
bound
fdivrs
cmpb
push
idivb
stos
pop
sub
pop
mov
addl
xor
mov
cmpsl
test
divb
sbb
add
push
imul
adc
xchg
cmc
arpl
push
fstpl
test
adc
and
sub
mov
imull
and
sub
fidivs
sub
repz
xchg
xor
push
sub
fdiv
popa
stos
js
jg
mov
sub
addr16
push
mov
cmp
sub
test
icebp
flds
ljmp
in
xchg
lea
clc
clc
leave
pop
lods
stc
inc
adc
dec
inc
push
adc
aad
repz
push
mov
shll
imul
inc
pop
std
push
add
lcall
mov
repnz
in
leave
aad
out
mov
and
adc
je
mov
sbb
jmp
dec
hlt
xor
fistl
cwtl
aaa
inc
jl
aas
lahf
push
or
push
fisttps
push
cs
lahf
ja
dec
mov
repnz
sahf
scas
or
dec
movsl
test
pop
imul
into
sbb
add
mov
mov
lea
xor
mov
test
add
xchg
sarl
mov
and
icebp
nop
add
je
mov
jge
cmpsl
popa
sbb
icebp
sti
test
push
ret
aad
int
push
jae
test
add
push
adc
xor
sub
lods
or
push
test
cltd
inc
nop
and
push
stos
or
sub
xchg
pop
test
leave
hlt
cld
adc
jle
mov
or
jnp
lods
testb
push
sub
inc
js
int3
inc
lret
andps
add
inc
inc
ljmp
ja
jno
dec
mov
jbe
cmpsl
adcb
mov
mul
bound
sbb
cmp
dec
cmpsb
addb
inc
push
adc
ljmp
pop
out
inc
stc
fs
xlat
mov
aaa
xor
mov
jl
dec
push
mov
inc
in
inc
and
push
adc
mov
es
loopne
add
sahf
mov
imul
add
fdivp
pop
out
cmp
jmp
push
adcl
dec
data16
into
xchg
scas
add
sub
pushf
pop
sub
add
inc
adc
fwait
insb
cs
mov
cmpl
leave
leave
popf
or
lret
out
jae
sub
xchg
inc
addr16
pop
pop
dec
fstpl
mov
mulb
and
adc
jne
aas
inc
in
aam
sbb
orb
cld
dec
mov
sbb
dec
ljmp
lods
xor
sub
mov
mov
testl
pop
xchg
repz
dec
push
scas
and
xchg
cmc
inc
sbb
push
popf
dec
pop
pop
das
bound
sbb
mov
stos
in
iret
jle
stos
lds
pop
push
cwtl
mov
sbb
aas
xchg
jns
inc
mov
out
mov
test
pushf
mov
lahf
cli
int
mov
cmpsb
inc
arpl
cld
fstpt
bound
and
xor
mov
mov
rolb
adc
adc
int
jg
cmp
in
pop
mov
nop
loop
hlt
pop
push
fnstcw
movsb
aad
or
iret
push
or
mov
rcl
adc
mov
mov
ret
mov
bound
hlt
cmp
add
enter
repz
nop
test
leave
xor
mov
sub
xor
add
repnz
xor
out
neg
frstor
push
sbb
adc
jnp
jg
loop
cld
ja
or
es
or
pop
sahf
xchg
pushl
clc
lods
call
and
fldenv
inc
cmp
std
iret
out
jno
loop
mov
pop
faddl
jb
xchg
sbb
inc
and
xchg
dec
in
hlt
shll
cmp
or
in
cltd
mov
mov
cmp
xor
and
xchg
mov
movsl
pop
ret
shr
sbb
loopne
lods
repnz
scas
jb
stos
data16
sub
cs
push
scas
lcall
sti
jbe
or
push
sbb
das
cmpsb
inc
icebp
xor
cwtl
xor
xchg
call
sbb
cmp
pop
std
push
call
lret
popa
out
movsb
cli
orl
mov
arpl
mov
push
out
push
jge
fcoml
pop
xchg
xchg
call
lret
lret
adc
adc
rcrb
mov
cmpsb
aad
loope
and
jns
sbb
mov
mov
pop
sub
mov
pop
push
cmc
nop
orb
sbb
add
dec
inc
out
outsl
jp
daa
testb
cmp
jae
pop
sti
movsb
sahf
jb
mov
xchg
mov
jbe
dec
mov
jo
mov
jb
ret
adcl
outsl
shll
aam
inc
mov
xlat
pop
into
xchg
or
push
mov
push
arpl
js
pushf
ret
lods
jg
fcmovb
rol
push
jl
loope
incl
xor
cltd
and
daa
sub
push
push
bound
shr
je
jns
mov
push
mov
jnp
mov
and
inc
in
add
sbb
fcomps
push
cmp
add
call
cmp
push
and
dec
pop
adc
xor
clc
pop
mov
jo
out
mov
sbb
sbb
sbb
mov
ljmp
int3
cwtl
jne
addr16
sub
imul
xor
push
incb
fsts
in
mov
push
and
pop
aad
js
sub
roll
and
cmp
fsubr
adc
cld
cmc
sub
in
xchg
les
daa
mov
adcb
or
mov
jmp
cwtl
je
mov
jle
enter
or
and
fcoml
andl
mov
in
or
add
pop
scas
scas
popf
stc
enter
push
push
inc
pop
inc
stos
fcoml
inc
jne
push
insb
adc
ds
aas
sub
shrb
fwait
add
or
dec
jl
adc
jmp
xor
lock
dec
jp
mov
xchg
jns
mov
mov
mov
lcall
lret
mov
fistpll
sti
mov
jae
add
mov
stos
pop
jle
sbb
adc
cs
add
pop
aaa
popa
dec
jecxz
jns
xor
int3
ret
or
ljmp
andl
xor
xchg
mov
mov
xchg
in
fcoml
test
dec
push
lods
xchg
mov
aas
in
int
aam
hlt
pusha
in
push
int3
adc
in
lahf
or
push
aam
lock
movsb
mov
repz
or
fildll
daa
add
mov
inc
add
rclb
jp
sub
cmp
ds
adc
sbbl
mov
push
lea
mov
sbbb
cmp
mov
loopne
push
sub
imul
mov
push
pusha
mov
xchg
xor
rol
adcl
xchg
xor
das
mov
sbb
or
fcomp
ret
scas
fistpll
stc
loop
jge
mov
sbb
jb
cmp
and
inc
ret
ljmp
adc
and
adcl
test
jmp
jl
jmp
jb
enter
jecxz
pop
addr16
add
inc
push
push
popf
dec
xlat
push
sub
add
jae
mov
jbe
call
outsb
std
fcom
push
lds
mov
xor
repnz
fadds
out
into
lods
or
pop
pcmpeqb
add
outsb
stc
jp
mov
ficompl
mov
mov
pop
mov
scas
aad
lods
outsl
xchg
xchg
gs
jmp
test
pop
inc
aam
xor
out
rorb
push
inc
es
dec
xchg
cltd
andl
pushf
lcall
xchg
mov
push
loop
cs
sbb
les
sub
movsb
enter
jmp
loope
xchg
mov
sub
aaa
stos
rolb
insl
cmp
push
dec
mov
aad
out
dec
xor
cltd
add
ss
push
rclb
dec
dec
out
in
push
push
into
pop
popw
bound
jo
lahf
outsb
ret
out
mov
scas
mov
idivb
sbb
rclb
out
xor
dec
push
and
in
jae
or
outsb
stos
push
bound
sbb
insb
or
push
loope
lret
pop
xorl
add
adcb
mov
xor
outsb
mov
or
jp
inc
mov
lea
fs
and
insl
mov
idiv
cmp
xchg
pop
cltd
scas
outsb
fucomip
push
int
jmp
movsb
pop
inc
shl
mov
cmp
es
add
jle
pop
dec
aas
adc
fsubrl
lahf
and
mov
hlt
mov
int
push
mov
aam
sub
or
cmpsl
lock
jp
push
sahf
fs
xlat
push
lcall
mov
icebp
xchg
dec
lods
repnz
sub
sub
cmp
sub
ss
jge
ret
mov
and
jbe
mov
mov
push
sub
test
adc
mov
imulb
and
add
cmpb
test
xchg
jge
jb
ret
adc
shrb
inc
and
push
lods
ficoml
sbb
xchg
test
std
jo
lret
pop
inc
repnz
push
jmp
ja
mov
mov
scas
adc
ret
fimuls
fmuls
dec
xchg
mov
pop
orl
out
lret
in
popa
jl
mov
sub
cs
mov
mov
jl
in
clc
or
idivb
pop
out
pop
adc
xlat
jo
fldcw
pop
mov
leave
inc
or
aad
sahf
data16
fwait
das
or
cwtl
ja
sub
sti
iret
pop
int3
lret
cmpsl
xor
popf
movsl
int3
add
movsb
leave
jg
pop
imul
jne
add
shl
cmp
les
jbe
inc
mov
movsl
push
inc
ja
nop
negb
gs
add
mov
ljmp
mov
mov
push
pop
notb
mov
stc
das
mov
sub
jmp
test
xchg
xor
jle
cmc
jge
aas
in
insb
mov
mov
cwtl
ss
xchg
or
adc
out
stos
lahf
sbb
les
add
pusha
rclb
xchg
add
in
jo
adc
dec
or
insl
fidivs
mov
add
mov
sub
jae
das
xchg
addr16
xchg
mov
add
and
xchg
repz
outsl
and
push
adc
clc
adc
addb
mov
mov
jae
ds
cmp
inc
add
movsb
popf
mov
or
push
cmp
imul
dec
test
hlt
js
ret
jmp
int3
js
insl
jge
shll
cmpl
and
and
sub
lds
fwait
rcr
imul
std
dec
or
outsb
jle
es
hlt
out
add
mov
out
movsl
test
push
sbb
add
scas
lcall
das
popa
rcrb
xor
and
ja
xlat
sub
xchg
call
xlat
insl
mov
js
pop
clc
sbb
into
cltd
xchg
and
dec
cmp
movsb
and
aad
fdivrl
adc
xor
movsb
inc
and
es
jg
pop
sub
dec
dec
dec
lds
xchg
inc
dec
pop
add
cmc
xor
pop
popa
insl
add
daa
push
std
fwait
cmc
xor
call
mov
or
mov
or
popa
xor
jg
or
xor
xchg
int
push
mov
int
push
pop
aas
xor
pop
mov
popa
out
mov
sub
ja
repz
loopne
les
push
mov
out
cli
jge
in
inc
scas
scas
and
adc
into
sbb
jle
inc
or
fisttps
imul
sbb
mov
fnsave
add
add
mov
into
sub
or
and
jge
data16
pop
scas
sbb
lret
and
aad
add
outsb
pop
shrl
andl
xor
lahf
and
dec
cmp
mov
fldenv
neg
sbb
test
dec
cmp
add
imul
dec
fs
mov
sbb
push
fidivrl
fsubrs
xchg
popf
cltd
cltd
push
mov
add
push
nop
xchg
das
sbb
xchg
pusha
and
xor
out
add
sar
pushf
pop
cld
mov
mov
nop
pop
add
xchg
orb
pushl
mov
enter
mov
pop
add
into
das
or
into
sbb
dec
cmp
movsl
pcmpeqb
dec
out
and
xor
or
lock
pop
add
nop
mov
pop
mov
pop
rorl
sbb
inc
dec
xlat
push
nop
jae
jb
sub
add
imul
xchg
out
push
jns
dec
in
movsb
lcall
orl
and
cmc
addr16
dec
std
push
cmp
add
test
lcall
push
adc
mov
xchg
ss
pop
sub
in
pushf
ja
add
pop
mov
cmp
pusha
add
je
jmp
pop
je
cmp
popa
lods
mov
and
ds
out
cli
or
mov
mov
sbb
cmp
mov
mov
stos
stos
or
pop
add
mov
push
cmpsb
sbb
mov
cltd
mov
sbb
lds
mov
xchg
inc
cmpb
push
jge
pop
loopne
inc
jne
pop
popf
cmpsl
dec
jle
pop
test
outsb
sub
lcall
jmp
iret
inc
je
sbb
fsubrl
mov
sbb
sub
subb
mov
mov
movsb
cmc
mov
fidivs
push
push
fildl
push
lahf
gs
outsb
lods
adc
int3
mov
cmpsl
sub
mov
xchg
push
outsl
ss
popa
pop
jo
loope
dec
pop
push
arpl
pushf
fidivs
inc
mov
ret
push
push
jle
mov
jno
add
cltd
je
xor
stos
pop
sub
sub
outsb
sub
out
idivb
xchg
insb
int3
mov
adc
shll
out
fninit
pandn
lcall
stos
decb
or
movsl
mov
stc
push
and
add
in
sahf
mov
cmc
pop
js
inc
push
and
orb
jmp
push
cmp
cmp
cld
int
xor
ret
and
xchg
pop
js
rcrl
mov
cmp
in
cmpsl
in
jp
mov
push
mov
aaa
lret
mov
mov
daa
xor
mov
hlt
xlat
pop
adc
cld
scas
call
inc
sbb
pop
inc
dec
xchg
scas
mov
cmp
fs
lahf
xor
jae
ljmp
sbb
lds
pop
div
fadds
xchg
jecxz
aas
lock
cwtl
mov
dec
adc
rolb
inc
and
push
sbb
sub
cld
cli
jnp
arpl
out
mull
mov
pop
xlat
and
rorl
scas
testb
mov
inc
lret
inc
out
push
mov
lock
imul
pop
pop
and
pop
mov
xchg
add
cwtl
lods
clc
movsb
inc
cmc
aas
mov
jg
jno
daa
popf
ror
add
icebp
insl
pop
mov
lret
push
inc
push
test
xor
call
push
bnd
repz
mov
scas
mov
orb
fxam
pop
xchg
pop
aam
pop
push
xor
mov
mov
enter
dec
dec
roll
xchg
bound
and
inc
mov
test
dec
call
dec
xchg
in
pop
in
js
je
jecxz
jae
aas
fwait
push
pop
fnsave
arpl
gs
inc
pop
fidivl
aaa
pop
and
jl
mov
shrl
mov
jno
shll
xchg
cmp
cmp
pusha
loop
push
dec
ja
cmp
fwait
pop
jecxz
popf
ds
dec
decl
or
sbb
rclb
test
mov
mov
xor
xor
je
iret
sub
pop
add
cmp
pop
mov
imul
xchg
jp
xchg
in
xor
mov
call
xchg
lods
jne
xchg
fsubrs
cmpsb
sbb
jle,pn
inc
lcall
adc
push
sbb
popl
mov
adc
repnz
inc
mov
stos
jns
adc
outsb
fstpl
mov
loope
dec
les
aas
pop
xchg
mov
popf
push
mov
cmp
cltd
data16
out
pop
dec
orb
or
sbb
shrl
mov
fidivl
and
scas
inc
and
push
lret
out
jl
sbb
adc
dec
mov
pop
bound
dec
imul
adc
push
cmpsb
xchg
jmp
sbb
pop
push
xchg
mov
jns
idivb
mov
mov
sti
xlat
inc
cmp
rcll
fbld
lods
lock
cmp
mov
test
leave
lahf
adc
aaa
repz
jns
mov
std
jmp
clc
adc
jae
mov
dec
xchg
push
dec
loop
cmc
out
inc
sar
xchg
fisubl
mov
jmp
and
nop
daa
sti
pop
push
dec
xchg
das
xor
mov
push
loopne
push
negb
pushf
loope
inc
popf
jmp
fsubl
jnp
fwait
cld
inc
mov
aam
insb
subb
inc
push
jne
push
movsb
inc
data16
lahf
adc
les
xor
pop
cmc
mov
xor
add
icebp
sub
cmpsl
lahf
dec
mov
push
mov
push
pushf
fwait
movsl
dec
mov
test
andb
xchg
push
out
daa
lret
bnd
and
rorb
pop
aas
cmp
sub
sbb
and
sbb
push
fnstcw
mov
jo
ret
mov
or
mov
cmc
ret
xchg
xlat
lret
mov
sti
xor
ret
cs
movsb
inc
pop
sbb
sub
sub
outsl
cmp
jmp
add
lret
pop
gs
or
xor
xchg
jge
stc
clc
pop
cs
mov
dec
dec
bnd
xor
aad
mov
xchg
les
cmpsl
xor
cmpsl
pop
mov
jo
cmp
jp
popf
cld
xor
jae
xchg
push
mov
mov
adc
jbe
push
xchg
lahf
pcmpgtw
cmp
pop
or
or
jmp
dec
sbb
nop
int3
mov
push
lahf
push
in
sbb
sbb
or
imul
xchg
sbb
lgs
scas
arpl
shlb
xchg
sub
xlat
add
push
mov
mov
xor
es
ja
cmp
dec
dec
or
sbb
dec
mov
repnz
inc
add
cs
or
xchg
adc
and
jb
push
adc
or
cmp
sub
sbb
jo
pop
adc
movsb
dec
test
pop
popa
cltd
mov
test
cmpsb
ss
inc
push
loop
jge
inc
ljmp
movl
xchg
adc
fdiv
pop
dec
sub
and
cmp
jmp
popa
pusha
mov
gs
xchg
std
faddl
sbb
jle
incl
pop
lcall
push
mov
xchg
jmp
dec
mov
mov
dec
hlt
or
data16
xor
sarb
cmpsl
inc
xchg
jns
arpl
push
xchg
test
les
jae
iret
inc
push
loop
mov
loop
stos
mov
push
push
dec
and
imul
into
push
scas
or
insb
pusha
adc
inc
cmp
xchg
xlat
bound
lock
sub
mov
lods
and
jle
repz
call
int3
dec
xchg
movsb
cwtl
inc
and
pop
stos
ret
out
jbe
cmpsb
and
test
xchg
cmpb
cmp
sbb
clc
ljmp
fisubrs
pop
movsl
jae
scas
and
sub
test
jmp
or
or
popa
inc
fsubrp
push
and
mov
repz
xor
jns
cld
mov
mov
cs
mov
mov
mov
insl
dec
jle
pop
jno
xor
gs
inc
fstp
dec
in
sbb
xchg
bswap
jns
fistps
roll
pop
mov
adc
test
jno
pop
push
or
pusha
inc
mov
sub
iret
mov
adc
lret
xlat
bound
inc
xchg
jb
jg
push
nop
mov
es
das
mov
sub
sub
sbbb
nop
mov
dec
insl
test
xchg
hlt
sub
dec
push
dec
ja
rorl
jmp
mov
mov
mov
add
fnstcw
int3
mov
xchg
adc
push
mov
sarb
cli
inc
out
jae
sub
es
adc
inc
mov
jo
inc
push
xor
mov
jp
jnp
mov
loope
dec
mov
pop
jae
pusha
test
dec
xchg
xorl
or
or
bound
andb
imul
and
adc
cs
mov
mov
pushf
outsb
pop
pop
push
std
pop
lcall
rcr
pop
and
sbb
and
jge
adc
movsb
mov
andl
jle
dec
pop
push
push
and
ja
sti
push
call
or
lret
push
mov
jmp
rclb
mov
pop
outsb
push
mov
cwtl
cmpl
fwait
xlat
mov
fcomps
dec
fucomp
int3
mov
cli
push
xlat
test
scas
xchg
test
jge
inc
sbb
push
sub
push
sbb
sti
int
es
jge
bound
xchg
cwtl
popf
div
xchg
pop
sbb
stos
stos
in
loop
mov
out
mov
xchg
ret
insl
dec
mov
or
loope
pop
or
icebp
xor
inc
inc
bound
push
insb
dec
mov
cmp
mov
jno
xor
shll
mov
pop
fdivrs
add
dec
test
xchg
mov
loope
add
and
in
loopne
shrb
sub
popf
repz
cmp
div
movsl
inc
lahf
and
jl
sub
cmp
or
iret
push
mov
ja
jb
in
xchg
dec
mov
stos
jnp
sbb
jbe
test
shrl
pushf
cmpsl
inc
rdmsr
jg
xor
sbb
movsl
and
lret
mov
sbb
mov
and
test
or
sahf
pop
adc
cmc
fstpt
data16
loope
mov
imul
or
xor
adc
mov
jno
sbb
lret
push
outsl
jg
sti
mov
jns
jp
xchg
sbbl
fstpl
jb
es
dec
test
sub
mov
mov
lock
add
xor
dec
sbb
xor
js
das
push
adc
mov
lret
inc
das
mov
sub
call
mov
cmp
dec
cmpsb
stos
inc
fldenv
push
dec
addr16
fisubs
sub
stos
int
or
mov
rorb
push
xor
ja
popf
push
push
cmp
mov
cmp
xlat
aaa
jb
jge
rcrb
dec
pop
testl
sti
push
adc
push
cmp
pop
xor
push
pop
imul
mov
out
rcrl
mov
aam
push
xor
cmovno
fldcw
out
adc
mov
popa
out
jge
lea
les
outsl
aaa
add
insb
enter
cmp
adc
leave
lret
fstl
mov
in
inc
pop
and
jp
rcr
push
shr
dec
pop
xchg
loop
enter
and
add
ret
sbb
movsb
jnp
aad
in
rorb
xor
notl
fildl
push
repz
push
popa
pop
mov
popl
add
adc
mov
xchg
cmpsb
dec
xchg
adc
add
nop
mov
ficomps
add
lds
clc
fsubrs
pushl
mov
mov
mov
ret
jle
push
pop
test
sub
jle
fs
sub
dec
add
xorl
inc
jnp
lods
cltd
pop
push
jno
je
cvtdq2ps
xchg
std
clc
outsb
fistpll
add
mov
jno
in
packsswb
mov
popa
lahf
dec
jp
mov
cltd
movsb
shrl
shrb
daa
sub
or
shrl
jne
sarl
or
loope
fxch
xor
jnp
add
xchg
pop
pop
ljmp
ds
jmp
lret
push
les
jbe
cmpl
out
mov
and
push
cwtl
stos
les
and
or
or
dec
pushf
fiaddl
arpl
jb
imul
int
jb
jle
sub
sub
xor
mov
popl
push
shll
cwtl
sub
pop
push
add
push
test
adc
stos
es
je
inc
adc
div
xor
mov
jmp
push
shll
incb
lahf
push
or
jge
ret
pop
mov
or
in
mov
pmulhuw
adc
or
aam
xchg
push
adc
test
scas
jg
xchg
fcompl
sbb
shlb
mov
add
ret
sbb
cmpb
and
cmp
clc
pop
les
sub
cmp
out
shlb
xorl
orl
lods
sbb
roll
addr16
and
xlat
dec
push
pop
add
test
add
fsubrs
ljmp
sahf
pop
xchg
repz
loopne
js
cmp
popf
jne
pop
xor
xchg
lods
out
lret
notl
sbb
adc
and
dec
insl
pop
xchg
pop
adc
fs
push
pop
incl
inc
cld
xchg
fcoml
andl
push
pop
test
fisttpl
and
jg
std
popf
xor
adc
sarl
leave
lods
pusha
lds
jae
push
dec
sbb
push
lock
inc
scas
cmp
push
or
aas
int3
dec
notl
ds
add
add
inc
js
lcall
jnp
out
movsb
adc
or
ds
and
iret
dec
pushf
cmp
fs
fists
xor
outsb
sbb
std
outsl
adc
cmpsl
imul
push
mov
loop
out
aad
shll
mov
ret
lock
xor
sarb
pop
xor
adcl
int3
shll
in
pop
inc
sbb
push
lds
pop
ds
jb
cmp
les
ret
or
sti
push
in
inc
push
xor
push
inc
addl
cmc
push
pop
leave
sub
pop
in
and
popf
jno
popa
sbb
push
or
mov
push
data16
imul
sub
dec
aas
sti
cmp
es
cmp
call
mov
test
test
mov
pop
cmpsb
jge
sbb
mov
adc
stos
pusha
cmp
outsb
cmp
mov
nop
jbe
leave
add
test
movsl
mov
addr16
and
arpl
mov
or
pop
sbb
nop
out
lock
cli
and
rcrl
std
gs
stos
sbb
adc
cld
enter
daa
sub
cmp
push
xcrypt-ofb
cmpsl
imul
mov
lret
les
aam
rclb
test
pop
sbb
call
es
xchg
jo
mov
jnp
loopne
jb
push
aaa
std
les
aad
lcall
rclb
jo
lods
clc
pop
faddp
fs
xchg
shlb
cmp
xchg
ljmp
jmp
push
xor
test
cmp
enter
sar
call
lock
jne
xor
pushf
loope
add
or
add
xchg
or
cmpsl
testb
mov
mov
dec
and
shrl
xorl
imul
fbld
mov
shlb
sbb
mov
aaa
cmc
mov
mov
lcall
dec
scas
pop
jmp
shlb
clc
ljmp
jp
cmpsl
ljmp
sbb
mov
pop
arpl
push
shll
cs
outsb
inc
mov
stos
pushf
adc
insb
mov
adc
loope
dec
xor
pusha
aas
rcl
sbb
iret
mov
push
lods
mov
mov
je
mov
cmp
sbb
xchg
jae
lahf
aas
mov
mov
stos
and
add
out
sti
clc
jmp
iret
fisubrs
mov
lock
mov
mov
js
jmp
jnp
rclb
jbe
and
add
mov
sbb
pop
or
jle
mov
fisttps
adc
add
jl
loop
inc
imul
in
fmuls
mov
add
and
divb
xchg
jl
or
fidivrs
shlb
push
ljmp
in
lret
call
cmp
push
push
in
inc
sbb
lcall
test
iret
inc
ret
push
dec
aad
sub
pop
shrb
hlt
mov
jns
add
pop
xchg
mov
xchg
push
or
data16
push
and
idiv
xor
je
outsb
shl
inc
repnz
shrl
jo
mov
cmp
inc
adc
mov
push
or
divl
fwait
out
lcall
imul
mov
repnz
shr
inc
mov
in
iret
pop
add
lds
ds
popa
icebp
outsl
int3
adc
cmp
fcomps
jbe
imul
cs
push
xchg
mov
sub
jne
mov
out
or
mov
scas
xor
xchg
sahf
lock
leave
and
sahf
scas
inc
pop
xchg
push
es
outsb
push
mov
js
cmp
fsubrl
movsb
ret
inc
and
out
je
lret
dec
lds
insl
fistpl
sti
ficompl
pop
out
pop
sbb
cli
adc
arpl
mov
sbb
mov
and
aad
rcrb
movsl
jl
xor
scas
xor
in
stos
shlb
ss
add
adc
int
daa
mov
jbe
jmp
mov
and
fnstenv
cs
dec
ret
mov
mov
aas
adcb
or
call
inc
push
jbe
in
xchg
in
icebp
mov
mov
and
cmpsl
mov
mov
jmp
inc
cmc
test
jge
and
sahf
push
adc
cmpl
dec
inc
xchg
loopne
or
add
ja
repz
test
mov
les
into
pushf
push
mov
mov
xchg
jl
xor
xlat
sbb
mull
pop
int3
lret
pop
or
and
and
mov
jae
enter
rcll
push
in
mov
adc
dec
clc
lods
leave
in
or
fisttpll
and
mov
jne
pop
cmp
cmp
sub
insb
rcl
push
jge
in
push
sahf
push
sti
add
pop
ljmp
pop
push
cmpsb
popa
xor
fwait
mov
cmpsl
jne
pop
and
aad
adc
push
jl
add
adc
movsl
mov
fidivrs
jp
and
xor
inc
ret
test
mov
push
mov
inc
add
jp
insb
movntq
out
stos
movsb
lock
xchg
inc
jns
dec
fiaddl
jecxz
mov
hlt
orb
shrl
mov
or
aas
aad
jae
sbb
xorb
and
xchg
mov
pushf
addr16
add
popf
xchg
mov
pop
sub
cmp
jle
sarb
jo
lcall
cmp
test
fnstcw
arpl
inc
add
test
repnz
fisubrs
xor
test
xchg
inc
shl
cmpsb
lahf
jno
sub
jnp
inc
movsl
jae
testl
int
sbb
push
cmp
ret
loopne
push
cli
mov
imul
xchg
imul
xchg
leave
inc
jae
push
icebp
adc
xor
scas
sahf
stc
mov
xor
fwait
push
push
in
dec
cltd
xor
loopne
loop
fwait
mov
lret
insb
int
xchg
outsl
out
lcall
pop
cld
sahf
dec
andb
pop
jno
out
xor
loopne
cmpl
cmc
jmp
sbb
push
aad
test
and
out
xchg
mov
popf
ja
jnp
or
aad
filds
push
mov
mov
xlat
or
mov
arpl
stc
jle
mov
cltd
pop
sbb
leave
ret
in
mov
hlt
scas
es
pop
addr16
jns
inc
scas
mov
xchg
dec
aaa
sub
cmp
inc
inc
in
push
clc
mov
dec
lock
notl
stc
scas
adc
int
sub
ss
inc
int3
sub
dec
sub
fs
in
pop
lods
and
mov
fnstsw
int3
pusha
dec
ja
mov
lret
loop
addr16
jge
pop
adc
dec
sub
mov
fs
loop
mov
mov
pop
enter
xchg
incb
jbe
mov
adc
shl
xchg
adc
aas
inc
cmp
jns
bound
out
in
inc
cmp
cld
mov
push
lahf
pop
xlat
inc
mov
dec
and
xchg
jle
mov
lret
cs
enter
dec
add
jge
aas
sahf
xor
pop
mov
out
insl
and
push
jnp
es
loopne
jg
loop
cmp
nop
or
mov
punpckhbw
dec
adc
pop
scas
adc
mov
mov
cwtl
test
mov
xchg
mov
mov
clc
add
scas
in
and
mov
xor
cmp
xlat
mov
jl
inc
dec
pop
dec
leave
xchg
sets
popa
jo
cmp
jnp
or
loope
jge
inc
scas
cmp
jne
fwait
mov
push
mov
and
bound
add
ret
sbb
out
jo
add
leave
shll
jl
loope
xorb
lcall
mov
fistl
mov
and
scas
js
adc
xchg
repnz
aad
movsl
int
xchg
mov
in
fcoml
fistps
xor
push
movb
into
lds
cltd
push
dec
int3
inc
mov
mov
loopne
adc
jb
iret
dec
loop
jmp
push
test
sbb
push
pop
push
jmp
jl
mov
pop
sub
or
xor
jmp
dec
enter
pop
and
fs
jne
in
cmpsl
arpl
sub
imul
jl
aam
xlat
icebp
dec
stos
addb
jp
fsubrs
loop
sbb
cmp
mov
jge
pop
push
sarl
xor
das
cwtl
dec
sub
or
push
dec
jbe
sbb
push
daa
mov
jge
ficomps
mov
add
mov
pop
lret
add
sub
ror
adc
sti
mov
add
or
test
mov
inc
cmp
jge
adc
ret
in
sbb
hlt
push
loopne
xchg
pop
push
bound
out
push
mov
xlat
mov
mov
repz
pop
jb
inc
pop
sbb
mov
shrb
fsubp
mov
mov
rclb
sub
push
push
test
out
xchg
sub
jns
into
mov
push
mov
mov
ja
jp
jl
imul
gs
fbld
pop
aam
mov
xlat
cmp
popa
xchg
mov
das
sarb
dec
xchg
xchg
scas
xlat
jno
sub
pop
fildll
loopne
inc
call
out
dec
xor
lods
cmp
mov
sarl
xchg
aaa
enter
xchg
dec
pop
inc
cltd
pop
cld
loope
push
or
fcomps
and
sbb
es
xor
lods
or
in
cltd
adc
push
daa
xchg
ljmp
into
adc
push
into
das
outsl
mov
adc
push
adc
out
test
mov
test
movsb
mov
or
out
cmp
fisttpll
stos
mov
divl
mov
scas
sbb
xchg
inc
mov
ja
lcall
adc
jno
fadds
inc
lods
daa
mov
daa
cmp
jb
pop
stos
pop
aaa
fwait
cmp
adcl
sarb
lods
and
loop
mov
xchg
in
jle
arpl
inc
in
stos
in
mov
push
jecxz
shlb
cmp
jnp
notb
inc
mov
sti
js
popa
inc
inc
repnz
shrl
shrl
push
lock
mov
mov
mov
pusha
loope
mov
push
mov
cld
inc
ja
popa
adc
sub
xchg
out
mov
xchg
jb
push
in
xchg
xchg
pop
dec
xor
sbb
mov
cmpsl
xor
add
loope
into
cmp
pop
lret
inc
in
mov
fldt
loopne
xor
or
daa
push
fstpl
and
xchg
loope
leave
or
pop
dec
cmc
add
cmpsb
test
mov
test
pop
or
test
fs
push
push
and
outsb
in
das
scas
dec
and
jb
mov
pop
pop
xor
sub
out
inc
int3
aad
cli
ret
xchg
sbb
subl
lahf
mov
pop
out
pop
push
cmp
lcall
push
or
fisttpl
scas
xor
mov
pop
xchg
sub
ljmp
test
mov
test
outsl
fmull
fmull
pop
mov
cmp
inc
neg
xchg
cli
sahf
stos
lods
inc
leave
push
jae
or
out
lock
lcall
sub
les
nop
fsubrl
cltd
arpl
addr16
hlt
mov
test
jne
jle
pushf
outsl
repz
loope
xchg
stos
dec
jp
mov
pop
gs
sub
outsb
pop
cltd
ss
dec
pop
inc
push
add
jno
clc
jno
out
sub
push
out
inc
sub
fs
and
dec
into
fidivl
pop
xchg
repz
add
ret
jge
and
mov
mov
or
or
shlb
fsub
pusha
or
cmp
stc
xor
adc
rorl
gs
pop
push
lret
mov
shrl
daa
cli
stc
push
movsb
pop
xor
subb
aad
js
jae
adc
test
lods
mov
jnp
mov
daa
cmp
shrb
dec
xchg
xchg
cltd
ss
add
add
push
sub
mov
stos
or
ds
push
jne
push
xor
std
mov
pop
in
adc
sbb
and
xchg
data16
leave
pusha
or
push
or
or
sbb
jecxz
hlt
ds
repz
out
xchg
mov
dec
fmul
xchg
call
add
and
icebp
mov
test
iret
add
lret
aam
mov
hlt
ret
mov
sbb
xchg
fmull
mov
es
cld
or
adc
stc
loop
sbb
lret
leave
popf
push
shrb
roll
inc
cmp
sti
pop
xor
subb
in
push
daa
dec
dec
fs
in
sub
sbb
lahf
or
jno
sbb
in
inc
jb
adc
ret
pop
jne
iret
call
jnp
pop
test
push
mov
and
or
lea
sbb
xchg
jns
push
jecxz
ret
jo
loope
pop
push
sarb
loopne
or
adc
ret
rclb
xchg
sbb
mov
jbe
push
jecxz
push
mov
lods
aaa
leave
adc
orb
pop
lahf
push
addl
bound
or
out
jecxz
mov
cld
mov
addr16
adc
mov
push
xchg
mov
lea
inc
cmp
cli
fildl
jbe
jae
addr16
or
jl
adc
std
loop
mov
dec
cmp
jl
aam
inc
fwait
or
addr16
mov
out
mov
es
or
ret
imul
xor
mov
or
fcmovnu
leave
mov
sbb
imulb
adc
push
xlat
cmpsl
frstor
push
outsl
shll
jno
gs
ficomps
pop
clc
arpl
fcoms
fadds
loopne
aad
adc
mov
sub
sub
or
inc
and
shrl
stos
ljmp
or
outsb
loopne
js
lcall
sbb
es
divb
pusha
in
pop
call
or
xor
xlat
mov
inc
jbe
scas
xor
iret
int3
sbb
or
jo
test
outsl
push
cmp
push
pop
inc
jp
pop
xchg
bound
rorb
sbb
adc
nop
push
pop
add
dec
push
dec
in
jp
insb
sub
shlb
sbb
jg
sub
or
mov
ja
mov
loope
fildl
mov
daa
scas
out
rolb
in
orb
shll
xor
orb
sub
mov
pop
xchg
fwait
and
test
leave
cmpb
enter
int
pop
repnz
stc
sbb
jb
pop
inc
push
sub
rclb
shl
pop
add
sbbb
idivl
nop
ret
adc
pop
mov
mov
dec
xor
mov
sbb
test
int3
repnz
enter
je
mov
sbb
aad
popa
aaa
jp
ds
push
in
clc
leave
cmp
xor
sub
add
ljmp
xchg
inc
mov
sbbl
cltd
add
cmpsb
sbb
xorl
fnstenv
lret
loope
jl
in
insb
xchg
mov
mov
ds
xchg
mov
cmp
lods
popf
mov
testb
das
xlat
sub
jg
insb
nop
push
jge
push
add
fimull
add
jl
in
xor
add
out
fs
fsubrl
loopne
cmp
cmp
minps
mov
cli
lcall
pop
sbb
sbb
addr16
sahf
test
adc
dec
iret
cltd
sub
mov
adc
inc
jo
mov
mov
pop
arpl
fwait
mov
cmp
scas
jmp
adc
pushl
mov
jp
lahf
sbb
and
cmp
xor
xor
insb
test
pop
andb
mov
lahf
pop
mov
fsubrp
ret
xchg
testl
loop
adc
fiaddl
leave
negl
xor
gs
xor
and
jl
subb
cli
pop
pop
pop
ret
lods
sub
jmp
mov
jb
rcrb
jo
push
adc
and
repz
ffreep
mov
jp
jp
into
cmc
push
out
lock
lods
jae
lods
sub
shll
sub
movsb
mov
sub
jae
stos
add
pushf
ljmp
jmp
lahf
adc
mov
xchg
cld
sbb
mov
test
inc
pop
mov
mov
and
jae
pop
aam
cmpl
mov
aad
sbb
out
incb
jp
mov
pop
je
add
outsl
mov
adc
cmp
sbb
mov
or
xchg
lahf
xchg
pushf
sbb
mov
ss
sbb
pop
adc
cmp
or
sahf
ficompl
iret
mov
jo
addl
xor
xchg
dec
lods
mov
int
jmp
int
imul
xchg
fwait
ds
or
stos
insl
addr16
pop
hlt
sub
xchg
inc
daa
cmp
add
cmp
out
xchg
sub
loopne
jne
das
and
or
stos
pushf
stos
repz
test
push
insl
jmp
imul
test
sbbb
pop
popl
sbb
pop
scas
lock
pop
add
mov
shlb
xchg
mov
and
lock
in
sbb
mov
loop
call
daa
xor
sbb
mov
pop
sub
imul
out
mov
xor
mov
ds
leave
aas
cmp
add
xor
add
jmp
lea
sub
xchg
push
repnz
ret
pop
out
cli
xchg
pop
and
pop
jle
push
push
mov
jb
push
sahf
mov
xor
push
jecxz
sarb
cmpsl
push
push
or
mov
outsl
mov
mov
jp
loop
insb
mov
cmp
dec
mov
fs
or
xchg
pop
or
idiv
notl
fimull
addr16
sub
push
mov
fnstsw
pushf
pop
and
push
sbb
jnp
or
dec
scas
into
adc
out
outsb
or
cld
push
bound
pushf
lahf
xor
xchg
sub
adc
repnz
cmp
xor
push
mov
cmp
std
nop
mov
fs
dec
push
push
sub
push
in
cmp
ds
and
push
aam
clc
lahf
xchg
rclb
mov
out
mov
and
les
call
cltd
stc
out
pop
jle
xorb
lcall
ja
jno
ror
inc
out
pop
jns
jge
hlt
xor
mov
xor
cmp
adcb
pop
mov
mov
xchg
cmp
pop
or
subl
aaa
xlat
xchg
and
scas
xor
ret
jg
sbb
mov
and
mov
lods
out
cmpsb
sti
mov
jae
adc
dec
popa
add
jp
jmp
push
into
rclb
int
insl
mov
sub
bound
lods
shrb
aas
or
aam
scas
add
inc
in
mov
addr16
pushf
scas
mov
push
fidivrl
jecxz
rclb
dec
sbb
jnp
scas
jle
prefetch
enter
lahf
ljmp
mov
and
push
sti
mov
lcall
ret
icebp
sbb
or
sbb
pop
sbb
dec
in
xor
pop
negb
sub
std
cli
cmovno
push
gs
mov
pusha
adc
aaa
cld
in
call
out
sahf
cmpsb
pusha
and
inc
mov
in
icebp
repnz
in
jl
xchg
es
cmp
mov
mov
daa
add
cmc
cli
sub
adc
loopne
inc
mov
mov
cli
pop
adc
insl
jle
sbb
sbb
mov
inc
int3
fs
fwait
repnz
dec
mov
xchg
lahf
push
decb
in
push
push
xlat
imul
loop
xlat
sub
sbb
mov
jecxz
adc
icebp
js
push
js
movsb
repz
sub
les
pop
mov
adc
cmp
movl
andl
repz
or
insb
fimuls
xchg
add
in
fsubp
ja
and
dec
ret
dec
mov
and
aaa
adc
cmpb
lcall
push
mov
mov
adc
sub
mov
scas
sub
ret
test
jmp
in
xchg
inc
mov
bnd
in
fs
ja
xlat
mov
andl
pop
dec
add
ds
sub
push
push
dec
add
xchg
gs
sub
js
sub
scas
xchg
adc
xchg
dec
insl
test
fldt
inc
loope
push
lahf
in
mov
mov
adc
fimuls
cmp
xchg
jae
xchg
shlb
mov
fidivl
test
fcompl
inc
outsl
push
jno
pop
sbb
rclb
mov
xchg
mov
pusha
fwait
clc
mov
insl
les
cmpsl
adc
or
cmp
inc
cmp
lods
das
shrb
cmp
aaa
addr16
push
mov
clc
xchg
stos
mov
cli
repz
push
divb
mov
inc
bound
dec
xchg
aad
fistpl
fistpl
into
jecxz
mov
sub
inc
xchg
xchg
or
rorl
daa
inc
adc
add
inc
ds
add
jne
xchg
jg
add
leave
lods
add
xor
aam
insl
pushw
subl
inc
xor
inc
adc
mov
dec
xchg
add
jno
daa
sub
hlt
jecxz
mov
cmpsb
loopne,pt
sbb
xchg
ja
or
stc
mov
cltd
rcrl
push
xchg
push
in
outsb
push
xchg
repz
or
sub
adc
mov
mov
bound
lea
cmp
test
js
jecxz
aas
sub
or
pop
fistpll
rolb
repnz
pop
aad
push
or
lods
add
jbe
jns
dec
adc
dec
xor
aad
shr
cmp
into
xor
fmuls
push
mov
dec
lahf
xchg
dec
xorb
int
lcall
pop
repz
cmp
push
cltd
cld
adc
int3
mov
cmpsl
out
dec
pop
inc
inc
mov
push
pop
imul
dec
xchg
out
negl
mov
subl
jns
inc
jle
adc
dec
popf
pop
clc
sbb
cmovp
and
pop
aad
ds
shlb
orl
push
jmp
cs
fsubrl
or
pop
cmc
sub
jo
testb
fsubp
stos
lds
dec
jp
xorl
inc
mov
das
enter
ffreep
repnz
enter
mov
jge
shl
xchg
jg
fsubrl
aaa
test
mov
inc
mov
jae
iret
aad
dec
sbb
xor
add
xor
xchg
lahf
sub
cs
fucom
int
xor
inc
inc
pushf
push
lods
mov
or
pop
mov
dec
inc
cmp
mov
call
mov
lods
aam
rcll
insl
enter
push
fdiv
pop
fiadds
ret
inc
fisttpll
gs
in
aas
and
ret
push
insb
pop
dec
or
lcall
push
scas
mov
test
cli
push
sbb
sahf
in
mov
or
cmc
testb
scas
dec
pushf
xchg
subb
or
inc
lcall
outsl
les
and
dec
sbb
xlat
cmp
mov
arpl
inc
cli
shrb
popf
in
or
add
pop
pop
aad
dec
jg
inc
add
sub
stos
ret
addb
fistpll
cmp
mov
stos
and
mov
jge
or
prefetcht0
into
fwait
movsb
mov
aaa
in
xor
dec
test
xlat
js
adc
cwtl
addr16
es
add
xor
fimuls
lret
add
enter
enter
loopne
subl
xlat
xchg
cwtl
xor
jmp
ss
mov
lods
ret
int3
insl
add
out
xorl
fbstp
mov
dec
addr16
ret
fwait
add
sarl
std
or
enter
test
cs
inc
jl
daa
lahf
push
fimull
jmp
notl
pop
ja
or
scas
jns
js
mov
mov
jecxz
repz
push
jecxz
jg
popa
repz
gs
aad
inc
in
jmp
outsl
xchg
mov
cmp
pop
popf
mov
mulb
xchg
lock
ljmp
sbb
cmc
push
aad
mov
jmp
mov
push
out
fisttpll
stc
sub
repz
sub
jbe
adc
ret
mov
push
lret
popa
xchg
lret
in
mov
call
adc
cltd
mov
push
xchg
pop
call
push
sbb
mov
pusha
iret
cmp
pop
stos
mov
inc
mov
insb
xor
mov
iret
ja
mov
out
into
mov
insl
popa
inc
outsb
cmpsl
lret
pop
pop
call
dec
cmp
jb
insb
enter
jbe
jl
or
dec
sbb
scas
movsl
sub
out
xchg
adc
js
out
out
xchg
jnp
lods
dec
adc
jge
cmp
iret
mov
cmpsb
lods
mov
or
out
inc
sbb
add
movsb
sub
push
shrl
outsl
push
shr
mov
jp
ds
mov
arpl
mov
insw
sub
leave
in
jmp
dec
lods
jp
sbb
push
mov
jne
add
sbb
add
leave
popf
rol
in
orb
ja
jmp
mov
faddl
jg
imul
mov
mov
mulb
lret
cmp
jne
push
loopne
xor
iret
jo
cs
cmp
loop
mov
loop
fs
jno
test
or
mov
stos
jno
inc
lock
ja,pn
loop
fucomp
sbb
dec
cmp
lea
sti
or
std
cmc
enter
and
fs
xchg
jmp
shrl
or
sub
xor
shlb
jnp
std
jle
push
sbb
jo,pt
xlat
push
adc
push
das
mov
pop
cs
ljmp
mov
lahf
sbb
loop
adc
clc
mov
cmpsb
adcb
sbbl
xor
add
bound
xchg
jbe
loopne
push
lea
sbb
pop
imul
push
jmp
lods
pop
xchg
sub
push
mov
jae
jo
cmp
dec
xor
ljmp
mov
sbb
mov
xor
jmp
je
mov
insb
fucomp
sahf
ret
xor
pop
loopne
fisubrs
adcl
dec
xchg
into
std
or
jp
mov
incb
in
jp
aad
repnz
dec
mov
inc
dec
sbb
xor
jmp
aaa
and
xchg
pop
leave
nop
pop
dec
or
and
pop
cmp
in
dec
orl
pushf
repnz
cmp
jg
lds
shll
sub
in
neg
push
fs
das
test
loope
xlat
stos
push
stos
cmp
sub
xor
pusha
or
jns
pusha
out
adc
in
cmp
and
popf
enter
sbb
jmp
pop
mov
xor
insl
mov
lock
sub
cli
test
inc
pop
push
push
outsl
call
jbe
imul
pop
cmp
pop
mov
mov
cld
mov
jo
decb
mov
jmp
inc
dec
movl
icebp
jnp
insb
adc
in
testl
aas
cltd
mov
sub
push
mov
shll
fs
inc
int
mov
sub
mov
lret
push
pop
int3
mov
pop
pop
je
fwait
push
push
mov
test
cmp
dec
jecxz
cmp
fnstenv
hlt
mov
cwtl
mov
pop
xchg
and
push
mov
cmpsb
inc
loope
push
sub
add
cmpl
jne
push
lret
dec
push
jle
icebp
fidivrl
mov
sbbb
push
movsl
bound
int
mov
aam
in
movsl
lods
mov
lds
cmp
mov
mov
outsb
push
icebp
pusha
test
int
jns
enter
mov
xchg
push
push
xchg
cmp
jae
cmp
or
mov
jo
cld
adc
cmpsb
sub
adc
movsl
add
imul
or
jb
push
xor
jne
fcom
mov
imul
xchg
mov
insl
jge
lods
or
sbb
loope
cmp
iret
mov
in
pushf
cmpsb
notl
pusha
pop
xlat
jne
and
mov
mov
leave
imull
mov
stos
out
mov
pop
cmpsl
jnp
in
mov
sbb
mov
bswap
jle
push
adc
xchg
mov
adc
jnp
adc
jns
ss
and
sahf
mov
std
dec
test
cmc
imul
inc
in
push
jnp
jecxz
lret
push
dec
pop
push
sahf
jb
mov
rclb
in
ss
insl
push
in
movsb
jbe
adc
dec
adc
inc
popa
in
gs
inc
int
or
test
dec
or
pop
lods
lds
and
in
fnstcw
add
in
iret
push
hlt
cmc
xor
lock
adc
jl
leave
mov
ja
out
shll
sahf
cmpl
dec
mov
adc
inc
outsb
mov
enter
adc
lea
outsb
shl
push
inc
dec
dec
push
xor
inc
das
clc
mov
scas
push
shlb
pop
add
xchg
mov
pop
sub
cmp
sub
dec
arpl
cmc
daa
jg
xchg
dec
mov
int3
dec
dec
nop
mov
jecxz
push
lock
mov
pop
add
enter
imul
cmp
in
mov
or
out
dec
inc
aad
jecxz
push
mov
arpl
push
cmp
jnp
daa
jbe
or
jb
dec
dec
hlt
mov
mov
xor
add
push
jbe
mov
jne
je
aas
and
test
insl
int3
loope
sub
pop
jp
iret
lcall
dec
shl
and
pop
jmp
imul
dec
mov
adc
out
aaa
in
pop
dec
mov
dec
sub
jne
jbe
outsl
into
mov
and
shll
jmp
call
fstl
pop
cmpsl
add
aad
mov
scas
xchg
fstl
enter
mov
jmp
daa
data16
cld
sub
dec
cld
xchg
add
xchg
cmp
xchg
into
roll
ret
sub
leave
es
inc
push
pop
mov
pop
sbb
lret
push
pop
out
mov
out
xchg
add
or
fsts
adc
inc
aad
daa
cwtl
xor
jmp
pop
adc
push
call
ljmp
push
mov
lock
das
jae
inc
pop
jl
mov
pop
adc
fdivs
hlt
lahf
cmp
aas
decl
mov
rorb
push
pop
xor
push
and
stos
insb
aam
sarl
es
jmp
inc
add
push
adc
sbb
mov
inc
sub
filds
sarb
dec
dec
jbe
inc
jno
cmc
push
jo
jle
orps
push
sahf
cmc
cmpsl
xor
fldcw
lahf
scas
inc
nop
imul
hlt
mov
xchg
and
sub
test
aas
pop
jo
cmpsl
test
adc
cli
loope
fsubl
sbb
mov
ja
aad
es
test
inc
out
outsl
inc
jb
enter
mov
sahf
mov
idivl
gs
sub
mov
push
sbb
mov
sub
fnstenv
pop
call
imul
jno
negb
jb
out
or
add
fcomip
call
jae
add
incb
xchg
arpl
sub
push
dec
adc
pop
xchg
imull
xchg
iret
pop
pop
mov
je
push
push
cmp
xlat
out
xor
add
mov
push
cmc
lcall
aas
nop
adc
cltd
mov
or
stos
inc
mov
rorb
cltd
mov
push
loop
rcll
aad
and
lea
inc
imul
iret
daa
dec
sahf
push
pop
mov
mov
jbe
nop
fbld
sbb
pop
pop
popf
xlat
pop
inc
xor
mov
inc
std
or
int3
jp
mov
out
push
jne
daa
xchg
inc
sbb
sub
xchg
jl
loope
pop
mov
outsl
and
fwait
xor
mov
cmpsb
inc
cmp
out
ret
mov
mov
mov
cmp
mov
pop
ret
fs
icebp
sbb
and
mov
out
inc
dec
test
mov
iret
sbb
pop
inc
mov
lods
ss
rcr
scas
sbb
cwtl
mov
scas
int3
gs
jbe
scas
subb
mov
jbe
mov
lahf
jne
sbbl
test
les
scas
jp
imul
les
cs
mov
adc
cmp
cmp
hlt
mov
movsl
mov
movsl
nop
mov
xor
inc
lret
decl
mov
cmpsl
movsl
das
xchg
js
imul
mov
push
mov
push
pop
pop
cwtl
shll
outsb
pop
nop
imul
iret
jmp
jp
roll
pop
jns
sbb
mov
mov
jp
inc
and
dec
dec
jae
cmpsb
mov
xchg
mov
jg
pop
mov
push
aaa
fchs
push
add
sub
rcrb
or
jg
out
jne
sub
fwait
and
jb
idivl
ret
outsl
add
out
mov
mov
push
notl
outsb
adc
leave
fiaddl
pop
push
stos
popf
pushf
push
pusha
mov
dec
js
mov
sub
jne
adc
ja
pop
pop
push
jns
mov
xchg
movsb
and
hlt
pop
xor
outsb
xchg
pop
mov
cmp
pop
lods
push
popf
pop
mov
sub
sub
xor
faddl
lcall
cltd
rcrb
jb
out
test
mov
xor
cmp
mov
adc
iret
repz
cmpl
notl
testl
dec
test
xor
repz
dec
push
out
dec
jge
into
sub
jle
push
aaa
mov
sub
cmc
shll
lods
lea
in
sbb
mov
aas
fs
rorb
lcall
sub
addr16
dec
aam
in
fcomp
push
sbb
jns
or
std
in
pop
push
jle
outsb
add
das
xor
and
lret
xor
mov
ficompl
int3
into
push
xchg
mov
adc
mov
scas
test
xchg
icebp
sbb
adc
sti
mov
jae
pop
mull
jl
sbb
cmpl
out
dec
adc
in
cmp
jnp
pusha
iret
in
cld
adc
mov
lods
insb
rolb
loopne
cltd
jns
xchg
test
cltd
test
out
cmpsl
adc
cli
outsb
iret
es
je
imul
lock
lock
int
or
sbb
jns
sbb
cmpsl
jne
sbb
xor
fcmovbe
vpsubusb
sub
xchg
fs
int
std
mov
loop
push
dec
cltd
mov
fst
push
or
and
dec
jmp
add
push
cmp
stc
movl
pusha
ret
ljmp
sub
xor
insb
sub
movsl
mov
lret
test
push
cmp
push
iret
or
sti
mov
int3
js
dec
xor
push
or
imull
js
icebp
mov
in
dec
push
pop
jns
push
push
std
stos
add
cld
or
cmp
in
mov
lea
scas
sbb
mov
dec
imul
inc
stos
in
loope
adc
cltd
dec
jnp
mov
jns
push
adc
outsl
pop
xchg
sbb
add
imul
adc
jne
sub
test
mov
push
lea
out
add
lock
cmpsl
jge
ss
pusha
xchg
enter
push
fiadds
inc
fldt
pop
xor
idivb
je
jp
or
cmc
rcrb
clc
xchg
sub
fidivl
adc
loopne
and
js
push
xlat
push
dec
add
jno
xchg
rcrb
mov
mov
xor
out
mov
inc
ds
mov
inc
cwtl
push
mov
push
mov
pop
mov
mov
fistl
in
cwtl
mov
sub
ficoms
movsl
lret
mov
adcb
cmpsl
dec
into
sbbl
cmpsl
push
test
mov
push
add
inc
mov
push
mov
loope
lahf
in
cmp
pop
xor
cmc
sbb
gs
je
shl
inc
addr16
cmp
popf
inc
bound
push
std
mov
adc
subb
inc
mov
lea
sbb
mov
and
xchg
push
setne
inc
adc
adc
jg
push
test
inc
adc
pop
outsl
insl
fists
iret
lds
push
nop
sub
jmp
pushf
or
push
inc
ficoml
push
push
enter
push
xchg
sbb
push
add
mov
scas
sbb
fucomip
cmc
mov
dec
jbe
out
adc
push
adc
pop
out
mov
bound
leave
pop
repnz
sub
in
sbb
and
jns
xchg
sub
cmp
cmp
xorb
pop
lea
inc
cmp
out
mov
shll
stos
cwtl
push
sbb
xchg
xchg
dec
adc
mov
stc
loopne
cmp
mov
dec
mov
fiadds
cltd
jae
jl
push
outsb
adc
lcall
lahf
adc
adc
xchg
aas
mov
or
pop
out
adc
bound
or
or
lds
mov
mov
test
bound
cli
mov
xchg
lods
out
xchg
add
and
mov
xchg
adc
push
push
adcb
or
xchg
pusha
stos
gs
hlt
pop
push
mov
pop
gs
popf
mov
ret
sub
testb
sbb
mov
push
mov
mov
push
inc
das
mov
push
andb
test
std
mov
loope
and
push
adc
push
fiaddl
add
outsl
out
push
das
sub
mov
mov
fldenv
mov
jae
push
call
das
sbb
fnsave
outsb
xchg
adc
cmp
dec
cmpsl
sbb
lock
ljmp
push
ret
inc
cmpsl
cmp
xchg
movsb
pushf
aaa
test
cmp
clc
psubd
xor
out
add
sbbb
sub
test
addr16
adc
fstpl
data16
xchg
call
push
fisubrl
in
sub
xchg
sub
jo
mov
xor
ret
xor
lods
scas
xchg
xchg
das
pop
add
daa
ljmp
and
fcoml
pop
add
cwtl
stos
jmp
les
lods
mov
cmp
push
cmpsl
movsb
gs
out
mov
icebp
jg
mov
out
xchg
imul
mov
lock
lret
sub
push
add
ljmp
mov
xchg
inc
jne
outsb
sub
or
mov
ja
call
imul
repnz
add
adc
inc
or
dec
sbb
sbb
sbb
cmp
jl
push
inc
xor
sti
add
jns
sbb
jno
mov
cmp
mov
pop
int3
cli
scas
cld
shl
jp
and
dec
psubsw
mov
jae
lea
lods
mov
fwait
jle
jmp
push
les
add
sbb
mov
faddl
xor
ret
insl
mov
je
lahf
stc
xor
jle
cmpsb
xor
ret
rclb
scas
subb
or
mov
and
fdivr
test
adc
fs
cli
inc
mov
std
mov
out
mov
ja
loop
aaa
inc
xchg
xor
lock
fildl
dec
dec
or
jp
fcoms
arpl
ret
mov
stc
dec
mov
sub
push
pop
mov
inc
add
push
sbbl
adc
lahf
or
mov
cmp
inc
daa
xchg
pcmpeqw
add
shl
hlt
mov
popf
daa
stos
sahf
jno
or
or
hlt
icebp
pop
mov
or
xlat
mov
and
mov
dec
xchg
test
xchg
int3
sbb
nop
cltd
out
js
fistpl
ret
jne
fwait
pop
push
push
call
push
aas
xor
cmp
rorb
xchg
add
or
jmp
sti
cmpsb
cmp
std
outsb
aam
nop
aaa
aaa
mov
cmpsl
mov
cmp
jae
ljmp
test
ss
out
jp
pop
xor
enter
xchg
inc
jmp
mov
shlb
repz
lods
ret
popf
in
push
mov
jmp
daa
pushf
stc
divl
jg
adc
pop
xchg
mov
sub
xchg
or
jo
insl
sub
pop
mov
pushf
sbb
ret
or
pushf
xor
mov
mov
cmpb
movsl
cmp
mov
xchg
jne
xor
dec
and
cmc
pusha
sti
enter
or
sub
adc
std
cmp
fldl
xor
jb
push
loop
push
xor
bound
lret
mov
dec
ret
mov
and
sahf
les
mov
jg
add
push
ret
aam
ljmp
loopne
mov
cwtl
minps
lods
adc
test
in
cmp
pop
mov
pop
orb
mov
sbb
rcrl
xor
sbb
pop
or
leave
icebp
jle
scas
insl
adcl
subl
push
jns
dec
lds
mov
cmovo
aaa
cld
imul
sub
cli
es
repz
cmp
in
jmp
cmp
daa
push
jecxz
dec
hlt
jbe
push
mov
xlat
into
std
bound
mov
cmc
mov
or
rolb
push
pop
cs
push
jmp
lret
jno
loop
sahf
adc
cli
pop
outsb
mov
fwait
int3
mov
iret
fwait
sti
push
mov
mov
pop
bound
fadd
icebp
imul
test
in
test
loope
hlt
push
cmp
push
and
dec
xchg
mov
adc
repnz
and
leave
mov
into
test
inc
daa
xchg
addr16
test
daa
mov
add
imul
aam
sub
mov
and
repz
mov
mov
ret
dec
inc
or
fcompl
push
add
push
push
mov
gs
ljmp
test
mov
jg
and
mov
dec
es
xchg
cmp
notb
xchg
stos
jp
jne
cmp
mov
push
mov
pop
shll
push
and
aad
insb
int3
jo
mov
aas
mov
sbb
push
sbb
mov
push
int
addr16
cli
mov
pop
lds
fcmovu
cmp
fisubrs
rcrl
push
pop
adcb
lods
fdivl
sub
hlt
in
and
cmp
push
xor
insl
repz
imul
sub
mov
ds
jle
push
and
or
inc
sahf
inc
lods
jno
mov
popf
mov
xchg
shrl
cs
xor
mov
jne
pop
fdivrl
add
mov
sbb
xlat
push
push
ss
dec
fisttps
sbb
ficomps
imul
lods
jae
mov
mov
mov
repnz
pushf
sti
into
add
in
sahf
and
adc
sbb
or
mov
mov
jmp
mov
xlat
adc
mov
mov
test
in
mov
pop
int3
cwtl
ficomps
mov
push
cmpsl
dec
mov
jmp
xchg
outsl
jecxz
xchg
pusha
sti
movsl
ror
out
out
cmp
pop
mov
cld
aad
and
call
fldcw
xor
insb
leave
xchg
pop
repnz
mov
pushf
pop
dec
add
mov
test
add
fs
inc
pop
je
cwtl
mov
xchg
mov
cmpsl
loope
adc
call
mov
push
jne
arpl
cmp
push
les
sbb
pushf
loope
fs
xor
das
stos
jmp
aad
jge
test
addr16
dec
icebp
xchg
push
mov
iret
movsl
icebp
pop
pop
popf
addr16
in
in
ss
adc
xor
push
or
jae
push
sbbb
insb
add
ss
or
lret
es
ljmp
add
test
stos
dec
ret
enter
aaa
mov
or
xchg
orb
into
push
insb
dec
xchg
push
bound
sub
cli
lret
push
push
sbb
scas
mov
das
push
jae
push
xchg
out
dec
mov
fldl
imul
in
ljmp
jno
es
iret
popa
sub
and
and
scas
mov
lret
or
mov
icebp
lret
ds
pop
rorl
imul
push
in
out
pop
insb
sub
orl
jne
test
add
shll
mov
cmp
or
mov
and
mov
xor
stos
xchg
xor
xchg
add
mov
push
iret
mov
iret
inc
jne
fcoml
inc
dec
int3
mov
repnz
loopne
jecxz
loop
shlb
lods
pop
pop
dec
pop
inc
jecxz
xor
mov
movb
addr16
xchg
or
sub
shrl
adc
out
imul
nop
movb
mov
mov
adc
dec
push
scas
cmpsb
aaa
sub
jmp
xchg
test
out
xor
ret
pop
push
sub
fisubrs
add
dec
mov
sti
test
gs
loop
sbbl
lcall
dec
jns
movsb
repz
push
popa
fistpll
mov
push
das
mov
mov
outsl
dec
out
xchg
rorb
cmpsb
inc
int
or
sub
push
shr
dec
test
test
inc
xchg
pop
and
dec
jns
sub
jno
das
popa
add
jecxz
or
sahf
addr16
test
adc
mov
and
ds
or
cmp
xchg
lahf
jecxz
loope
add
mov
cmpsb
lret
stos
js
push
push
pop
add
xor
adc
xchg
dec
sub
jo
pop
fiadds
sahf
out
mov
ret
mov
or
out
xchg
mov
mov
or
rcrl
cmpl
ds
fsubs
mov
or
ja
lret
adc
and
pop
dec
sub
out
outsl
mov
ja
cld
add
jp
lret
rcll
xchg
pop
call
mov
jo
cmpsl
repnz
lret
add
movsb
imul
test
mov
xor
lds
jp
pop
outsb
pop
js
xor
pushf
pop
and
jp
mov
dec
cld
xchg
repz
lock
mov
test
jl
jmp
lcall
add
inc
repnz
test
inc
leave
mov
fstpl
lods
lahf
lea
leave
sub
pop
or
add
dec
pushf
mov
pop
ljmp
popa
xor
js
js
adc
movsb
lret
dec
sub
add
aam
push
test
into
fstpl
fwait
pop
xlat
out
loop
rcr
mov
les
int
xor
adcl
aas
push
lods
lods
rolb
in
push
outsb
fsubl
icebp
dec
into
jbe
test
scas
sub
popa
mov
dec
aaa
sbb
sahf
xor
jo
pop
jns
adc
cli
int
xor
xchg
xchg
xor
fmull
das
gs
ja
mov
adc
out
mov
fdivrs
fisttpll
fisttpll
je
cwtl
js
mov
inc
stc
push
enter
mov
xchg
mov
aam
nop
ja
xor
rcll
fpatan
fcomi
scas
inc
jge
sub
out
addr16
loope
pop
inc
scas
fs
mov
sub
insb
push
mov
push
out
mov
or
mov
sarl
push
mov
imulb
fwait
pop
jns
clc
push
xchg
repnz
dec
xlat
int
fisubrs
push
dec
jno
pop
fcoml
les
out
mov
or
push
mov
jp
leave
out
sbb
sbb
sub
push
daa
adcb
in
loop
lock
push
je
or
adc
jne
adc
mov
test
xchg
ss
sub
lret
das
mov
scas
adc
jg
hlt
push
aam
add
cmp
push
lcall
ret
inc
loop,pn
jns
test
push
ficoms
movsb
add
rclb
push
sbb
in
push
jno
mov
cli
mov
dec
pop
insb
pop
rolb
push
iret
sub
push
push
fs
gs
and
out
out
mov
mov
mov
and
call
loop
adc
lahf
push
sbb
jbe
lcall
mov
sbb
repz
inc
aam
dec
addr16
data16
dec
sub
shll
lock
imul
icebp
sbb
xor
imulb
sub
lahf
inc
xor
dec
pop
mov
shll
mov
jne
lahf
or
cmp
out
fs
out
stos
popa
mov
lods
cmpsl
nop
dec
stos
push
push
in
into
mov
dec
mov
arpl
jecxz
inc
mov
mov
sub
sbb
test
cltd
fwait
insl
pop
mov
push
mov
jbe
dec
add
ret
cwtl
rol
inc
or
adc
pop
cmp
data16
and
aas
shll
dec
pop
inc
imul
ficompl
shr
stc
cmc
out
or
int3
pop
or
mov
movb
pop
pop
cld
icebp
lcall
jl
xchg
ds
icebp
pop
shll
mov
fldt
or
cmpb
sub
rclb
cld
pop
xlat
or
mov
outsb
mulb
ret
in
jmp
fiaddl
inc
hlt
add
ficomps
fisubl
pusha
dec
inc
push
test
add
mov
idivb
cli
cmp
xchg
mov
ss
inc
pop
fstp
and
jge
push
pop
aam
or
emms
stos
pushf
dec
je
sbb
jge
and
lret
xchg
outsl
adc
mov
out
js
inc
sbb
or
ja
mov
pusha
xchg
subb
or
pop
mov
mov
jbe
cmp
lea
movsl
dec
inc
popa
outsl
mov
pop
bound
iret
stc
sahf
xlat
rorl
xchg
jae
or
clc
ret
mov
loopne
push
xchg
push
mov
int
adc
cmpsb
jnp
inc
fs
fwait
shll
add
jg
test
mov
push
add
push
jo
jmp
adc
push
push
int3
in
test
sti
dec
sub
dec
int
push
enter
adc
test
loopne
and
push
xor
cli
fsubr
or
pop
adc
sbb
push
in
push
cltd
mov
aam
pop
gs
sbb
sbb
sahf
jl
sbb
imul
push
rolb
addl
sub
push
fs
lret
push
ret
out
inc
daa
sub
aad
aam
mov
xchg
inc
lret
call
pop
pop
out
lods
xor
sub
or
pusha
aam
push
jns
dec
jmp
lret
pop
movsl
push
xchg
bnd
jb
mov
jne
cmp
stc
mov
fcom
scas
xchg
stos
or
mov
jp
sub
push
std
call
add
movsl
sbb
in
jg
dec
inc
fbstp
in
mov
lods
xlat
lret
mov
xchg
pop
and
mov
in
dec
lods
cmpl
cmp
mov
dec
enter
adc
cmp
incb
mov
sub
pop
xchg
sti
out
fcompl
ret
push
add
lahf
ficoms
lods
mov
sbb
fmull
repz
sbb
push
arpl
jno
hlt
xchg
cmc
or
lret
and
movsb
or
out
loopne
in
dec
and
or
jnp
xchg
mov
inc
in
xchg
sbb
inc
mov
inc
ret
aaa
or
out
aas
ret
shrl
ficompl
je
insl
insb
das
lods
and
sub
fs
movsl
repnz
iret
jae
sbb
or
sub
jge
jecxz
mov
les
mov
rorb
lods
insl
sub
jecxz
es
or
jns
jecxz
adc
popa
mov
cmp
dec
xchg
lcall
pop
mov
out
adc
mov
fwait
add
push
frstor
mov
jmp
movhps
cmp
gs
dec
mov
scas
cs
push
nop
push
dec
mov
std
mov
jo
cs
je
enter
push
xchg
popa
cmp
leave
repnz
jmp
outsl
lret
rorl
xchg
xchg
mov
stc
jg
loope
add
fs
test
jnp
mov
testb
lods
lret
cmp
mov
sub
movsb
xor
stc
or
mov
shrb
mov
pop
inc
xchg
aaa
sbb
dec
adc
jns
sub
bnd
sar
mov
dec
fnstenv
inc
sub
xor
insl
mov
ret
pop
jne
sub
jae
jns
cmpsl
fs
scas
incb
mov
adc
lods
jmp
push
popf
pop
call
dec
mov
cld
insb
fs
scas
cltd
in
sub
pusha
loopne
mov
sti
sbb
jmp
xchg
fsubrl
jo
pop
das
addr16
mov
or
push
cmpsb
insl
xchg
movsb
out
lret
outsl
cld
xor
cmp
sahf
push
inc
cli
rcrl
cs
sub
cli
add
jp
shlb
or
je
jnp
sti
popa
xor
adc
pop
dec
jp
add
pop
xchg
fs
lods
ret
mov
clc
lcall
fstps
or
je
shl
dec
out
ret
shl
mov
sub
xchg
repz
mov
dec
inc
mov
out
icebp
cmp
loop
xchg
mov
das
aaa
adc
pop
xor
dec
push
ss
sbb
int3
rcrb
cmc
xchg
jp
lods
mov
or
lods
or
xchg
cwtl
shrb
insl
dec
dec
out
xorl
mov
sar
jno
out
scas
push
cli
gs
cmp
xchg
adc
or
sbb
mov
adc
inc
cwtl
push
pop
sub
lock
pop
jbe
fistpll
add
mov
mov
rol
cmp
js
aaa
out
insl
push
orl
cmp
mov
iret
pop
das
repnz
enter
inc
pop
sub
imul
and
mov
in
pop
negl
inc
push
lods
sarb
adc
xchg
sub
cmp
inc
nop
xchg
push
loopne
jecxz
movsb
inc
lret
adc
push
and
and
dec
xor
in
ja
pop
jl
jns
gs
ret
lret
call
inc
dec
pop
adc
pop
pop
mov
jmp
push
lea
bound
pusha
jbe
cmp
push
fs
mov
cmp
test
in
fistpll
orl
sti
jae
mov
pop
stc
jb
repz
addr16
add
cmp
into
dec
jno
cli
add
ds
fcmovnb
jmp
cld
xchg
jp
popf
out
xor
push
imul
push
jle
cmp
aaa
fildl
jns
inc
call
call
or
das
hlt
lcall
mov
sub
fidivl
test
sahf
sbb
mov
scas
rclb
inc
ret
sar
pop
lret
pop
mov
inc
xor
data16
sub
and
lahf
jp
adc
test
mov
inc
xchg
pop
mov
or
mov
mov
sbb
push
loop
dec
icebp
xor
int3
cmp
cmc
jae
xchg
mov
ret
xor
into
cmp
iret
fdivrs
push
loopne
cli
fistpll
and
imul
ljmp
push
lea
and
cmp
aam
clc
adc
imul
rcl
pop
cld
jg
and
sbb
mov
and
in
out
addr16
test
cmp
pop
adc
cmpsl
sti
dec
cltd
cmp
jl
mov
aad
sub
in
js
cmp
insl
mov
fisubrl
lods
sbb
adc
adc
cmp
jbe
sbb
xchg
cmp
pop
push
cmp
loop
aad
push
subl
xchg
xchg
test
add
and
popa
mov
add
fcomp
pop
push
push
jmp
les
mov
cmp
xchg
cli
iret
dec
and
mov
popf
xchg
test
jle
push
popf
outsb
xor
xor
adc
stos
pop
shrb
adc
insl
stos
pop
jg
pop
mov
incl
mov
inc
pushf
mov
mov
stc
fbld
bound
cltd
imull
jns
sahf
mov
int
push
dec
into
loope
insw
cmpsl
or
dec
adc
mov
mov
iret
lock
and
xor
cwtl
test
fdivp
sub
pop
push
add
mov
arpl
in
jbe
int3
push
lcall
cmp
adc
sbb
enter
cld
cmp
jnp
test
xchg
scas
dec
ror
sbb
xor
rcrb
ja
jbe
xchg
or
in
push
dec
lods
pop
je
stc
das
add
add
xchg
mov
xor
xchg
aam
sarb
das
arpl
inc
int3
push
movl
add
pop
pop
and
jo
out
fcomip
sbb
and
popa
xchg
fsubrp
inc
pusha
addr16
dec
and
hlt
and
stos
adc
or
jbe
mov
lret
cmp
ss
add
out
jmp
negb
test
mov
addb
adc
fcmovnb
in
ret
enter
cs
iret
ret
cmp
push
loope
xchg
leave
imul
jbe
pushf
add
or
fmul
int3
loop
jbe
loopne
les
addr16
lea
inc
sub
outsb
push
xchg
jo
xchg
lock
inc
aas
sbb
push
test
outsl
mov
lret
bound
xlat
icebp
jne
enter
sub
call
xor
imul
and
popf
push
sbb
xor
xor
push
mov
movsl
mov
push
push
call
cmp
aas
push
dec
xor
movsl
push
outsl
add
aam
pop
xchg
inc
out
adc
pop
and
cmc
pop
hlt
je
sub
add
aas
pop
sub
adc
idivl
movsb
scas
mov
insl
test
pop
addr16
and
adc
pusha
and
imul
std
repz
cmc
test
addr16
pop
or
shlb
int3
sbbl
test
jb
pop
cmp
sbb
sub
sbb
inc
leave
dec
stos
cmp
xor
mov
add
push
imul
push
sbb
cwtl
mov
clc
or
pop
iret
lret
mov
jno
sub
or
fwait
mov
ss
mov
ja
cwtl
mov
jp
push
cmpsb
xchg
pop
arpl
inc
mov
fisubrs
mov
cli
rol
ljmp
mov
pop
in
xor
scas
mov
pop
mov
das
adc
test
push
aas
out
mov
mov
or
fadd
mov
sbb
jne
scas
iret
add
add
cmp
push
shrl
sbb
sub
push
int
into
addr16
or
mov
add
aas
jge
xchg
cmp
add
inc
cld
gs
pop
insl
inc
data16
and
lods
jl
jns
inc
cs
and
data16
pop
jmp
aaa
pop
jb
gs
cmc
xchg
lcall
imul
in
mov
dec
arpl
repnz
cmp
bound
mov
sbb
adc
sarb
and
inc
sub
or
mov
mov
pop
sbb
jg
lock
jge
inc
loop
xchg
mov
push
clc
dec
inc
icebp
out
not
jmp
int3
push
cmp
push
shl
push
inc
cli
lcall
scas
dec
dec
xor
mov
sub
push
pop
xchg
and
xlat
xchg
divl
out
inc
push
mov
mov
fstp
pop
inc
xor
dec
mov
mov
adc
sbb
popa
stc
mov
cs
std
mov
mov
or
push
sti
jp
sbb
or
les
ja
push
loope
mov
adc
inc
mov
mov
loope
cld
ljmp
jo
loop
jae
dec
add
mov
test
cmp
jno
inc
xor
rolb
xor
loopne
push
imul
mov
sbb
mov
jge
or
or
loopne
negb
int3
ret
add
pop
xchg
add
jl
and
and
adc
xchg
pop
jb
push
mov
pop
adc
dec
mov
mov
cmp
movsl
mov
mov
adc
das
scas
push
lods
or
scas
div
inc
mov
fnsave
jecxz
adc
std
sub
or
jns
adc
jmp
pop
int
mov
push
cmpl
decb
mov
js
jae
leave
movl
jg
repnz
fistpll
pushf
int
xchg
movsl
xchg
shrl
test
push
shlb
cmp
mov
jae
adcl
faddp
xor
in
adc
push
sbb
ds
aas
xchg
or
cmp
movsl
cmp
sti
jo
sub
int3
xor
out
push
push
into
xor
enter
adc
sub
sarb
push
hlt
loopne
repz
out
mov
push
cs
out
fsub
lret
mov
sahf
sarl
imul
ljmp
pop
jnp
loope
xor
pop
icebp
inc
pop
test
pop
in
outsb
sahf
js
gs
lret
repz
lret
jl
inc
add
test
int
jge
cld
mov
loopne
or
bound
aas
fisttps
push
out
dec
imul
xchg
jnp
shlb
push
or
adc
icebp
je
out
xlat
or
inc
dec
test
cld
roll
jmpw
sti
xchg
jnp
mov
pop
adc
inc
rorb
push
add
lock
data16
pop
jmp
mov
jecxz
inc
pop
xchg
lahf
fsts
xlat
add
sbb
loopne
mov
cmp
test
aaa
paddusw
outsb
and
out
mov
stos
jle
xorb
or
inc
inc
or
es
lret
hlt
popa
ja
out
in
clc
jge
sub
mov
aas
popl
mov
cwtl
pop
in
and
mov
or
sbb
mov
inc
bswap
in
jb
lcall
call
mov
cmp
inc
sti
pop
ret
cmpsb
push
sbb
fsts
popf
cmp
hlt
out
loopne
jg
mov
js
push
push
movsl
push
sbb
sub
adc
mov
inc
mov
adc
sub
scas
flds
stos
nop
movl
rcll
mov
popf
lock
mov
ror
test
aas
xchg
fsubr
ret
loopne
orb
mov
dec
shrb
adc
dec
xchg
idivb
stos
fnstsw
lret
scas
jnp
push
sbb
jecxz
sub
pop
ljmp
or
lds
fwait
outsl
daa
clc
jae
add
mov
scas
mov
sbb
loop
shll
lock
push
pop
lcall
mov
jnp
mov
dec
sbb
ficoms
xchg
lea
scas
cmpsb
ljmp
shll
push
iret
add
loope
mov
ja
lds
mov
mov
aam
cmpsb
jnp
aam
cmpsb
stos
or
fcmovb
nop
pop
mov
je
and
jo
into
and
adc
jecxz
jmp
test
aad
loope
cli
or
popf
mov
insb
xchg
inc
xor
dec
pop
sbb
dec
hlt
out
and
jae
inc
scas
xchg
mov
mov
mov
lock
jg
jnp
aaa
sbb
pusha
pop
sub
sub
mov
add
lcall
iret
jl
cli
ss
scas
sbb
mov
inc
mov
push
adc
aaa
iret
lret
je
jne
iret
aaa
add
dec
frstor
les
insl
and
sub
mov
int
adc
in
test
mov
mov
xchg
mov
mov
adc
out
mov
jbe
adc
out
push
cs
inc
and
mov
fisttpl
call
rcrb
jge
dec
test
jmp
aaa
lea
mov
lods
mov
dec
mov
ja
sbb
fwait
mov
jl
cs
sub
aaa
loope
movsl
xor
mov
in
paddusw
xorl
fucompp
mov
fldenv
dec
ljmp
jae
int
ret
push
add
imul
movl
leave
pop
push
dec
sbb
outsb
imul
and
push
nop
cmpsl
popa
xor
mov
fldln2
shl
icebp
xchg
repnz
mov
adc
push
xor
jno
ja
hlt
ljmp
jmp
js
adc
jo
pop
in
fisttpll
xchg
inc
std
sbb
add
lcall
out
xchg
xlat
fsub
hlt
xchg
lret
fistpll
stos
clc
jns
sub
popa
pop
xchg
inc
fidivrl
test
leave
cli
lret
outsl
xor
stos
data16
add
add
or
xor
pop
icebp
cmpsb
sub
imul
xchg
mov
mov
and
sbb
and
sub
negb
inc
inc
fisubrs
lea
lods
cs
mov
pusha
xchg
loope
fldcw
dec
sbb
and
fldt
cmp
pop
push
pop
das
jae
xchg
jb
inc
out
dec
xchg
jge
nop
and
xchg
test
ret
mov
xchg
imul
mov
push
es
cmp
ret
movsb
imul
jecxz
jo
shll
mov
aaa
or
inc
lods
lcall
lret
mov
mov
mov
inc
cmp
dec
mov
je
arpl
cwtl
ja
rol
jo
rcl
je
std
push
sbb
popf
test
push
js
stc
push
cmpsb
push
sarl
push
lcall
and
int
or
btc
jae
mov
cmp
leave
rorb
sub
popl
inc
add
cmpb
sub
mov
lods
out
test
call
dec
or
jl
shll
mov
lret
sbb
xor
mov
icebp
in
pop
mov
mov
and
or
sbb
clc
aas
pop
incl
xchg
imul
push
push
sbb
mov
and
jge
mov
scas
mov
add
lods
sub
or
cmp
in
xchg
pop
in
and
sahf
adc
mov
mov
lods
mov
jno
jl
shll
ja
fimuls
fisttpll
out
push
mov
mov
lret
fistpll
leave
testb
fldt
cmp
sub
pop
std
inc
xchg
sbb
mov
add
push
les
arpl
insl
mov
push
mov
add
push
mov
dec
lods
data16
in
inc
pop
je
pop
push
sbb
mov
sbb
mul
shll
bound
ret
clc
lea
sub
mov
fwait
or
andb
in
das
test
mov
scas
aam
adc
loopne
inc
pop
outsb
pop
in
jno
movsl
ljmp
das
adc
out
or
and
sub
mov
test
mov
das
lret
push
ss
push
push
shll
sti
push
fcmovbe
lret
and
aam
mov
xchg
pop
call
dec
fistpll
inc
int3
aaa
push
icebp
test
cs
dec
mov
rolb
out
in
push
or
cmp
xor
shl
lock
shl
ret
lock
xor
inc
enter
cmp
jbe
mov
inc
inc
sbbb
scas
fmull
or
aam
clc
inc
mov
cs
mov
jmp
cmc
xor
pop
adc
ret
cld
jmp
clc
cli
pop
adc
mov
vmwrite
jb
inc
repnz
inc
popf
mov
fwait
stos
aam
mov
sub
hlt
sbb
push
pop
scas
cli
sub
outsl
inc
movsl
jnp
adc
cmp
lahf
pop
adc
popa
stos
arpl
ret
and
into
ja
int
jnp
icebp
insl
fsubs
push
cmc
dec
and
cmp
sbb
cmpsl
pop
adc
pop
pop
mov
inc
xchg
or
adcb
mov
lods
mov
cs
loope
xchg
popf
inc
stos
stos
fidivl
repnz
sbb
mov
sti
or
sbb
jo
jns
scas
test
push
push
push
pop
test
rcrl
repz
push
mov
lock
xlat
pop
push
es
xlat
out
notb
call
xchg
pop
repnz
in
push
push
and
stos
xchg
shrl
mov
ror
jmp
pop
fwait
test
sub
insl
xchg
dec
sub
pop
nop
cmp
arpl
adc
mov
inc
ds
jae
mov
jle
insb
add
fwait
outsl
mov
inc
mov
cmp
adc
stos
lods
jnp
push
cld
fisubl
stc
scas
cmpsb
shlb
cmp
adc
or
mov
ja
jmp
popf
in
ret
lock
pop
cmpsb
insb
mov
push
pushf
test
out
fcompl
incb
cmp
cmp
jle
fimull
mov
enter
mov
lods
pop
into
adc
decl
sbb
insb
ficomps
and
jns
lea
push
sub
imul
mov
mov
cmpsl
mov
or
mov
sub
add
test
aaa
test
jge
sarl
dec
mov
mov
add
jmp
push
push
add
subl
stc
pop
arpl
mulb
scas
push
rol
in
mov
xchg
and
stc
fs
dec
fistps
inc
push
fwait
aaa
cmp
jl
mov
jbe
push
cs
inc
cltd
outsb
ss
pop
lods
mov
jl
pushf
iret
xchg
aas
call
mov
aas
idiv
fsubrl
add
std
inc
fs
dec
icebp
rol
or
repnz
out
pop
xor
inc
dec
dec
test
sub
fldenv
lret
jb
call
lds
pop
inc
xchg
add
cmp
sbb
in
sbb
xchg
cli
pop
jb
mov
xorb
stos
push
sbb
sub
ss
test
xor
mov
ret
sarb
movsl
negl
or
mov
pushf
fidivs
cmp
shll
lods
dec
jecxz
cmp
push
bound
notb
cmp
lds
ret
scas
and
cltd
adc
cmp
or
adc
xor
mov
mov
icebp
add
iret
push
push
push
pop
test
fldl
sub
arpl
jnp
xor
dec
pop
fidivs
dec
lret
mov
mov
flds
orb
fistps
repnz
and
mov
or
inc
sbb
cmpsl
pop
out
cmpsb
and
inc
mov
sub
mov
xor
or
ret
xor
adc
dec
je
ja
dec
xor
testb
xor
inc
clc
arpl
sbb
inc
cmp
div
in
rcrb
jge
push
pusha
or
fwait
imul
push
and
adc
pushf
mov
pop
scas
jle
mov
lods
push
mov
mov
arpl
test
add
dec
orb
mov
test
pop
dec
push
sub
adc
test
fbld
outsl
test
lods
rorb
or
movsb
pop
jae
lds
test
pop
fisubrl
lret
arpl
rolb
push
in
cs
in
and
scas
mov
jnp
xchg
stc
sbb
mov
sub
cmp
mov
push
pop
add
push
adc
xor
icebp
xor
movsb
std
or
int3
cmpsb
outsb
dec
sbb
push
push
pushf
fsubl
or
push
cmp
aam
jnp
orl
loop
inc
add
and
mov
mov
push
inc
push
out
pop
xor
sbb
sbb
aaa
mov
mov
pop
sbb
mov
jge
int
lcall
roll
lahf
jp
clc
data16
test
and
jbe
push
scas
xchg
cltd
jno
jo
dec
add
fists
dec
jp
xchg
rorb
or
inc
pop
scas
sub
push
mov
jae
dec
xchg
out
cmpsl
push
lahf
mov
xchg
out
ret
jo
inc
out
mulb
dec
cmpsl
daa
bound
iret
divl
fwait
ret
cltd
es
jle
dec
call
loope
ds
imul
dec
loope
mov
pushf
out
lods
imul
xor
test
sub
dec
jne
ret
and
xchg
insl
lods
mov
mov
int3
sbb
inc
hlt
je
stos
shll
or
adc
sub
fsubl
cmp
adc
xor
daa
rorl
test
mov
and
repz
mov
xor
mov
mov
xchg
mov
pop
cmp
lods
shl
jecxz
loop
and
push
cmpb
leave
insl
jmp
popf
push
arpl
cmpsb
pop
fwait
clc
popa
push
sub
std
add
mov
ljmp
popf
jle
inc
scas
inc
and
jbe
mov
cmpsb
stos
jbe
gs
pop
scas
adc
ret
inc
imul
dec
nop
pop
xchg
repnz
mov
sub
aad
pop
or
pusha
fiaddl
daa
lods
fildl
jne
cmpsl
xorl
or
push
cmp
fistps
pop
adc
fdivl
jb,pn
mov
cmp
call
xchg
hlt
loope
lock
push
and
adc
into
enter
mov
push
sub
add
mov
mov
out
adc
cmc
sbb
pop
js
in
lds
outsl
pop
ljmp
sbb
test
cmpsl
push
cmpsb
add
insb
jge
dec
adc
in
adc
pop
cmp
sub
cwtl
xchg
sarb
fsubrl
fstpt
shrb
xchg
popf
xor
push
xor
pop
lods
adc
mov
inc
mov
out
sub
pop
nop
push
pop
cmp
in
lods
ret
fbstp
xchg
clc
cli
jmp
mov
sbb
mov
shll
aam
jmp
test
adc
cmp
mov
dec
popf
jmp
mov
vhaddps
add
xor
and
movsb
and
jbe
mov
push
fdivrl
pop
movsb
mov
mov
out
pop
out
pusha
jne
clc
jecxz
shlb
out
dec
mov
jns
sub
sub
push
ret
mov
push
je
ret
and
xor
pusha
push
inc
inc
push
mov
and
popa
enter
add
cs
pop
lods
jns
mov
dec
repnz
and
pop
inc
or
xlat
mov
clc
mov
divb
cld
sbb
mov
loope
das
scas
imul
mov
rcrb
push
pop
cmp
imul
rol
mov
fmul
fs
mov
ficoms
mov
ja
xor
fcomip
and
daa
leave
inc
es
xchg
pushf
stc
add
mov
ljmp
push
fstl
and
jno
xchg
cmp
jb
sub
enter
popa
add
sub
aaa
xor
and
repnz
adc
dec
insl
mov
xor
mov
adc
out
pusha
and
xchg
out
clc
sub
mov
rclb
xchg
xchg
inc
scas
arpl
sub
subb
ja
repz
fs
jno
insb
jno
adc
mov
sub
lods
jo
outsl
lods
test
icebp
stos
add
dec
xor
add
pop
out
mov
mov
test
cmp
adc
sbb
filds
inc
add
dec
jbe
pop
gs
pusha
xor
push
mov
push
lds
sbb
jmp
das
or
cmpb
out
push
cmp
sub
popa
sbb
inc
nop
or
inc
xor
cmp
mov
cmc
xchg
scas
inc
pop
mov
pushf
jns
adc
inc
insl
adc
lahf
ss
add
lret
mov
insb
jnp
insl
pop
and
jecxz
mov
mov
loop
fdivrs
xor
outsb
cwtl
adcl
mov
sub
push
fidivl
insb
enter
enter
mov
jae
movsb
jo
inc
cmp
dec
in
test
rorl
leave
jmp
arpl
sub
sub
xor
lret
or
or
inc
sbb
xlat
stc
cmpsb
pop
mov
push
jmp
add
insb
push
out
jp
adc
es
leave
xchg
push
mull
fnstenv
jns
fcmovnu
mov
shrl
rcrl
imul
or
movsb
jg
or
adc
mov
mov
inc
rorl
stos
pop
stos
fninit
fcompl
sub
xchg
pusha
sbb
hlt
bound
call
xchg
xchg
inc
mov
push
dec
leave
xchg
jg
push
scas
xchg
add
mov
xor
pop
out
les
rcr
in
mov
imul
arpl
mov
push
test
arpl
movl
mov
addb
aad
in
sbb
clc
out
cli
push
jmp
or
hlt
xor
orb
rcrl
sbb
in
mov
outsl
lcall
sub
stos
insl
and
mov
aad
or
mov
outsb
out
mov
cmp
cwtl
dec
push
xor
cmpsl
sbb
pop
insb
xchg
or
mov
mov
fwait
lret
or
sbb
sbb
fwait
pop
or
scas
inc
repz
push
rcll
movsl
cs
lret
ja
jl
sbb
adc
mov
incl
mov
cs
adc
jno
in
mov
rolb
ds
lahf
imul
mov
jne
shrb
lcall
imul
fidivrl
ss
rclb
cmp
cwtl
pop
dec
call
mov
adcl
popf
or
sub
and
pop
int3
daa
jae
leave
cmp
iret
jne
adc
mov
and
jl
mov
pop
mov
insb
fldt
adc
xchg
sub
sahf
lahf
cmp
ds
xchg
mov
loopne
or
xor
pusha
or
mov
shl
jg
push
fs
mov
push
pop
mov
fs
jl
add
dec
xchg
inc
stos
add
in
xchg
push
inc
or
ret
cmp
orb
das
dec
cmpb
inc
or
and
repnz
inc
xor
std
test
jb
lock
sbb
push
sub
in
out
incl
ss
xchg
lds
cmp
ds
clc
jmp
jle
ret
rcll
adc
pop
or
ret
or
js
mov
xchg
outsl
xchg
popf
push
push
adc
es
add
dec
icebp
enter
and
adc
test
xor
add
adc
cmpsl
icebp
cltd
repz
int3
inc
test
out
mov
mov
test
xchg
xor
enter
dec
iret
out
pushf
in
pop
lret
stc
aam
shll
test
jbe
sbb
test
cld
mov
loop
adc
aaa
cld
inc
hlt
xlat
js
xchg
push
inc
mov
add
pop
mov
jb
jbe
sarl
mov
push
xchg
adc
add
jb
push
push
divl
jle
addr16
adc
lret
push
mov
push
mov
addl
add
jmp
lcall
pusha
inc
cmp
adc
add
ror
push
push
inc
sbb
mov
xchg
inc
xor
pushl
js
insb
jbe
push
adc
xor
outsb
jmp
sub
or
mov
push
mov
stc
scas
jmp
flds
mov
push
fucomip
dec
jge
jb
loope
sti
or
pop
inc
shrl
fldt
or
stc
push
rcrl
dec
out
mov
or
sbb
pushf
dec
jle
andl
lea
adc
rolb
add
push
mov
mov
imul
mov
pop
or
cltd
push
aaa
scas
imul
pop
adc
pop
mov
push
call
mov
push
imul
cmpsb
daa
inc
pop
call
push
jg
xchg
xlat
mov
sbb
ret
notl
cmp
adc
das
fistl
outsl
rcr
sbb
repz
in
mov
enter
leave
lret
cmp
stos
in
std
and
es
pushf
jbe
ret
jae
and
adc
das
mov
sbbb
ja
pop
pop
stos
jge,pn
sub
mov
pop
mov
in
repz
push
sub
lods
pop
xchg
lds
test
push
jecxz
cmpsb
xor
adc
mov
xchg
les
wbinvd
sti
popa
jno
cmc
mov
pop
mov
xchg
scas
push
out
mov
push
and
ret
das
rcl
mov
mov
int3
jle
xchg
icebp
push
or
mov
jmp
jns
mov
insl
jnp
cwtl
mov
pop
inc
notl
sbb
jecxz
in
pop
cwtl
sarb
pushf
dec
lods
leave
xchg
dec
dec
pop
pop
xchg
mov
in
xor
orl
mov
xlat
icebp
and
popaw
testl
or
call
aaa
cmp
mov
stos
and
test
or
hlt
ds
lahf
imul
test
std
jp
scas
xor
add
xchg
stc
jno
rclb
mov
sub
dec
movd
or
or
lcall
xlat
hlt
pop
jnp
lret
xor
enter
arpl
addr16
enter
fs
and
leave
hlt
cmp
in
sub
ds
call
mov
sarl
or
cmp
adc
dec
pop
data16
xchg
dec
sbb
xor
xor
movsb
lret
mov
inc
lds
sub
out
mov
cltd
out
jge
add
xor
shlb
cwtl
xchg
push
cs
push
inc
xchg
aam
dec
xchg
xor
popf
mov
xchg
out
mov
push
mov
mov
js
mov
or
aas
pop
sbb
ss
mulb
xchg
scas
outsl
xchg
test
dec
sti
addl
xchg
ret
gs
xchg
adc
jmp
into
movb
push
dec
push
sbb
stos
mov
xor
inc
dec
xchg
roll
dec
mov
negl
xor
pop
cmp
insl
jmp
xchg
add
cmp
or
or
xchg
sbb
mov
xchg
movsb
andb
test
xchg
cwtl
addb
scas
mov
ss
or
pop
roll
fdivr
cmp
mov
jmp
jp
in
loop
push
imul
inc
icebp
scas
lahf
inc
inc
divb
sarb
mov
test
lret
in
sub
fcoml
shrl
scas
fistl
cmpsl
stos
pop
call
stos
mov
adcb
das
mov
movsl
mov
mov
adc
test
push
adc
adc
inc
stos
add
or
lods
out
adc
outsb
push
and
test
lea
ss
push
and
out
popa
rcll
add
mov
mov
or
aam
data16
xchg
jg
xchg
leave
inc
dec
dec
cs
mov
imul
or
in
outsl
jo
pop
or
in
xchg
sti
add
sbb
xor
cmp
xor
pop
js
scas
cltd
lods
decb
add
sbb
out
adc
jle
xchg
push
jp
rcrl
jge
xchg
xor
jmp
test
lock
imul
pop
add
fs
or
ficoml
dec
ret
fmull
pop
rcrb
daa
lea
roll
dec
shrl
pop
stos
ja
cli
add
add
sbb
imul
dec
inc
add
jmp
or
mov
sbb
pop
xor
int3
cmpsl
push
cli
dec
outsl
jg
pushf
leave
into
jle
sub
push
mov
cmp
mov
clc
mov
push
leave
out
mov
out
push
mov
add
add
enter
dec
cld
mov
scas
subb
xchg
inc
push
leave
out
dec
cltd
mov
mov
fdecstp
ret
int3
sub
mov
int
ljmp
xchg
in
scas
ljmp
inc
xor
pop
std
jb
mov
stos
ja
push
pop
sbbb
cmp
scas
lds
mov
mov
jne
mov
imul
por
dec
es
test
call
in
pop
push
dec
jmp
sub
jne
inc
pop
pop
mov
pop
data16
pushf
fxam
mov
push
jb
xchg
stos
loope
push
test
iret
adc
fcomip
push
insl
ret
pop
lret
insb
adc
xchg
gs
ds
ss
inc
in
push
and
pop
orl
aaa
pop
xor
les
dec
jne
xchg
repz
add
xorb
repz
adc
insl
and
mov
sbb
enter
sti
jnp
push
inc
xchg
mov
scas
fidivrl
jg
in
out
lahf
addr16
dec
ss
cwtl
cmp
mov
pop
es
dec
pushf
imul
aaa
cmp
iret
arpl
lret
out
pop
ja
ficompl
cmpsb
lret
cmpsb
sub
mov
and
adc
aas
push
sbb
out
mov
decb
mov
loopne
cwtl
je
dec
mov
adc
pop
out
out
mov
pop
sti
insb
mov
les
cmp
inc
mov
cltd
jae
aaa
push
dec
jnp
push
mov
pop
pop
int
inc
push
fisttpl
enter
fcmovbe
and
mov
xchg
jne
leave
stos
ja
in
icebp
pushf
jae
sbb
mov
push
lods
int
cmp
mov
xor
mov
je
imul
mov
mulb
inc
daa
xor
pusha
push
sub
sbb
loop
sarl
pop
aam
add
inc
jns
mov
fs
fstps
xchg
sub
xchg
bound
addb
adc
jne
call
cli
mov
xchg
sub
or
insb
mov
jle
bound
scas
addl
mov
in
mov
cwtl
pop
or
repnz
and
in
call
or
pop
sub
in
pop
push
mov
dec
clc
fists
or
test
push
imul
pop
jp
shl
inc
ret
and
pop
jp
dec
cli
call
add
push
jmp
jae
test
pop
stos
cmp
movsb
add
loope
sub
xor
rorb
add
testb
xchg
mov
or
arpl
je
stc
cli
dec
xlat
sbb
mov
lods
test
push
xor
insb
aaa
test
xor
jmp
inc
jp
mov
frstor
mov
mov
pop
repz
test
mov
fwait
pop
jg
or
scas
pop
cmc
and
outsl
insb
add
mov
mov
jae
mov
ret
adc
enter
cpuid
movb
in
sbb
push
jle
or
mov
shrb
mov
fisubrs
test
loopne
or
mov
pop
mov
jae
popa
popf
cmpsb
std
aam
mov
cld
xchg
out
les
xchg
or
mov
aad
cmp
and
xchg
add
add
or
gs
jp
xchg
sub
pushf
mov
sub
sub
fsubp
push
lcall
scas
mov
mov
pop
or
or
cmovnp
or
movsl
fisttpl
lret
cltd
mov
fisttps
push
or
daa
and
xlat
add
jae
jbe
test
pop
mov
ss
inc
sahf
into
out
lret
call
dec
dec
fbld
mov
jle
lods
bound
push
sbb
xor
testl
in
int3
shrb
stos
xchg
stos
and
fldcw
std
enter
mov
imul
fwait
add
mov
or
xor
jg
jo
arpl
movsb
shrb
add
icebp
repz
mov
ds
mov
lods
adc
and
jae
pop
scas
pop
jecxz
inc
lcall
ss
mov
rcrl
jbe
cmp
add
inc
xchg
push
pop
push
in
subl
xor
out
lds
dec
jbe
or
shlb
xchg
outsl
or
jae
dec
and
clc
pop
enter
popf
sub
stos
add
cmp
mov
inc
pop
push
or
sbb
push
faddl
out
mov
dec
and
imul
push
dec
mov
and
insb
cmc
mov
jg
adc
bound
cmp
leave
es
and
adc
push
and
dec
loopne
int
iret
mov
xchg
cmc
push
mov
shl
insb
add
mov
pop
or
into
jo
xlat
xlat
daa
sub
jns
and
inc
stos
incb
mov
inc
stc
push
pop
test
imul
and
mov
lods
rcll
push
jg
lock
mov
lret
cmpl
cli
outsb
mov
lods
sti
dec
ljmp
outsb
jp
repnz
pop
jg
cmpsb
xchg
das
ljmp
ds
stc
jmp
push
mov
adc
and
sarb
jge
push
cltd
stos
call
push
out
aas
push
jns
jecxz
mov
addb
dec
inc
outsb
loop
xor
and
adc
das
fimull
jg
pop
xchg
adc
scas
inc
or
cmpsb
cmp
out
lcall
jg
jne
pop
push
popa
mov
testl
aam
jo
or
xchg
imul
repz
ret
cmpsb
lret
and
ja
fnstcw
cmp
jmp
pop
cld
rolb
xchg
or
mov
das
xor
mov
dec
add
cmp
fldln2
mov
sub
daa
pop
cli
push
lea
scas
xchg
and
xchg
fnstenv
mov
cmp
mov
xchg
push
clc
test
neg
and
sbb
fucom
lock
sbb
adc
sub
loope
out
andl
push
stos
in
ret
inc
cmp
mov
and
jmp
test
xchg
sbb
lods
add
mov
popl
jne
dec
fbstp
add
pop
sbb
inc
pop
rcl
cmp
out
or
jns
mov
mov
fcomi
lds
pusha
aas
cmc
lret
xlat
jno
inc
mov
sbb
mov
testb
sub
push
dec
adcl
lods
pushf
pop
repz
adc
dec
push
mov
or
push
cmp
icebp
and
mov
mov
mov
sub
xor
out
push
sub
mov
xchg
pop
rcll
stos
cmp
mov
push
lods
cmp
and
cli
aam
inc
pop
out
sbb
stos
insl
aas
sbb
xor
testl
mov
jle
call
mov
ss
xchg
jp
inc
fnstcw
pop
sbb
imul
lcall
mov
mov
ja
iret
fdivrs
test
sahf
push
dec
fld
cltd
dec
std
mov
xor
test
jp
push
jne
iret
cmp
faddl
sbb
mov
pop
xchg
into
ret
std
xor
jge
test
push
enter
popf
push
sbb
and
mov
and
rcr
dec
pop
xchg
bound
adc
mov
pop
inc
cmp
push
sub
push
pop
arpl
outsl
outsb
movsb
lcall
es
sbb
dec
scas
push
imul
mov
push
mov
add
daa
scas
dec
pop
movsl
and
jno
cmp
sbb
cmp
jnp
sub
jnp
inc
inc
gs
mov
xor
push
lret
shrb
mov
dec
mov
xor
mov
int
cmp
xchg
mov
cli
pushf
lcall
sub
aad
subl
inc
dec
call
push
inc
cmp
es
sbb
lea
or
movsb
xchg
nop
sub
fdiv
sbb
rorl
inc
cld
popf
xor
mov
ljmp
pushf
inc
push
cmpb
xchg
ret
cmp
pop
ljmp
leave
mov
push
scas
push
dec
test
or
fistl
shll
and
pop
subl
lret
jno
test
inc
imul
jnp,pn
orl
ljmp
add
into
cmpsb
repnz
mov
cli
jns
test
lds
pushf
in
jmp
jmp
rclb
sub
rcrb
jmp
cltd
in
ss
inc
shl
les
mov
testb
mov
aam
xor
fimuls
ja
iret
xchg
test
addr16
add
imul
mov
adc
cltd
pop
cmp
outsl
clc
test
leave
daa
or
or
mov
jg
xor
jecxz
pop
sbb
xchg
mov
aad
nop
rolb
sub
js
inc
adc
loop
fwait
adc
xchg
cmp
sarb
mov
sbb
movsl
add
js
rcr
rorl
insl
cmpb
push
add
adcl
cmpsl
xor
pop
xchg
shl
mov
pop
mov
xlat
into
xlat
xchg
es
and
pushf
mov
nop
dec
pop
iret
adc
nop
mov
cmp
jb
repnz
in
fildll
jb
cmpl
adc
outsl
mov
mov
mov
xor
fnstcw
push
les
jo
fstps
jmp
jb
loopne
jge
cmpsl
adc
movb
incl
stc
filds
mov
jno
test
pop
vhsubps
inc
sbb
sti
mov
or
jl
sbb
ret
pop
lret
lret
andl
dec
pop
adc
fisttpl
outsb
xchg
sub
xchg
jo
leave
pushf
insl
inc
mov
call
sub
stos
pushf
jge
mov
mov
mov
cmp
mov
icebp
outsb
push
xor
loop
aad
ret
fidivs
push
sbb
inc
scas
mov
shlb
arpl
cmp
or
jnp
adc
inc
push
adc
pop
cltd
mov
int
stos
push
add
fimuls
mov
add
inc
repnz
ja
insb
sbb
mov
and
pop
arpl
scas
mov
fsubr
shlb
cmp
bound
push
shlb
xor
out
outsb
pusha
into
or
dec
mov
outsl
and
push
sbb
add
imul
and
mov
fs
sti
sub
xchg
ja
xor
push
inc
out
xor
cmp
mov
push
mov
jmp
and
test
sbb
pop
ret
xchg
inc
inc
push
sbb
jnp
cmp
or
mov
lods
mov
xlat
pop
out
iret
jbe
loope
shr
popf
sar
nop
or
imul
mov
sti
addb
iret
xlat
mov
iret
and
sbb
cmp
cmp
cmp
push
insb
jne
mov
mov
mov
enter
lds
div
les
or
mov
jno
cmp
mov
sbb
in
sbb
inc
mov
jge
inc
stos
lcall
jmp
sbb
in
xchg
test
cmpsl
add
push
mov
mov
int3
push
push
cmpsb
loop
mov
repz
xor
idiv
int
pandn
std
ja
xlat
pop
bound
dec
ret
shrb
xchg
test
pop
imul
lret
dec
fwait
aad
or
sarl
sbbb
hlt
rolb
ficoml
inc
iret
inc
dec
sbb
pop
cmp
test
cmp
mov
mov
xchg
lret
push
in
jno
mov
ffreep
cmp
subl
mov
xchg
int3
mov
das
mov
and
pushw
adc
mov
adcl
mov
insl
leave
aaa
pop
push
pop
mul
shlb
loope
icebp
pop
fsubr
pop
mov
push
fadds
push
pop
sub
mov
movsb
jecxz
or
jg
clc
lock
sub
repnz
in
sub
roll
dec
mov
dec
xor
enter
pop
mov
mov
sub
test
fs
ret
inc
and
mov
push
mov
out
std
pop
add
stc
sbb
cltd
xchg
xchg
ret
sub
inc
mov
lea
add
jmp
leave
insl
insl
sti
adc
sahf
ja
cli
sbb
jl
rcrb
stos
push
aad
movsl
into
sbb
repz
adc
add
test
mov
sub
ror
jp
dec
sub
das
adc
add
fcoms
mov
iret
jmp
fistl
insb
cmp
popaw
fcoml
aaa
cmc
and
pop
xor
stos
insb
pop
scas
iret
jne
pop
mov
imul
shl
mov
jo
push
jmp
or
cmp
mov
icebp
jns
pop
popa
mov
ds
fdivr
xor
and
lds
hlt
out
out
xorb
sar
stos
mov
add
pushw
imul
fstl
loopne
adc
cwtl
data16
icebp
xchg
sub
mov
nop
in
push
push
jl
test
jmp
mov
sub
rorb
sbb
cmp
dec
std
and
pop
pop
sbb
lods
inc
xor
mov
ds
inc
sbb
sti
mov
roll
arpl
push
lahf
cmpsl
cmp
jge,pn
jns
out
loop
enter
cmpsb
cmpb
adc
jecxz
cmp
dec
fcomps
mov
loop
mov
shl
dec
mov
cmp
sub
lret
mov
pusha
cmc
mov
pop
mov
push
xchg
mov
lahf
push
xchg
push
lret
sbb
jb
xor
push
insl
add
out
push
dec
insb
imul
sub
mull
iret
pop
or
loop
push
lahf
push
jnp
je
adc
jle
sub
inc
pop
je
adc
sbb
add
je
leave
inc
add
lock
cmp
hlt
dec
cmc
pop
je
outsl
mov
sub
daa
dec
ffree
sub
mov
test
or
loop
dec
sti
ljmp
mov
call
outsl
dec
mov
or
adc
loopne
xchg
movl
dec
mov
enter
push
adc
adc
push
inc
lret
pusha
lahf
cltd
inc
jp
lcall
rcrl
je
sbb
cwtl
or
lds
xchg
xchg
fcomps
lods
leave
aas
cmp
mov
mov
das
fwait
scas
iret
dec
jl
clc
lret
shr
stc
inc
sbbl
jae
out
sarl
xchg
aas
adcl
mov
cmp
inc
add
fisubrs
ficompl
sbb
ljmp
pop
fnstsw
or
and
movsl
adc
fsubrl
fnstsw
pop
cmp
cs
test
push
sbb
gs
jno
inc
repnz
hlt
std
inc
pop
gs
pop
adc
iret
bound
jl
sti
sbb
scas
push
add
jmp
jb
sti
icebp
inc
lcall
test
inc
inc
xchg
mov
mov
inc
pop
mov
and
mov
in
insb
push
sbb
cs
xlat
and
xor
jl
mov
push
mov
xchg
imulb
mov
jecxz
shll
inc
ret
mov
adc
cmp
outsb
lret
bound
adc
cmp
mov
inc
dec
or
xchg
mov
test
mov
jno
sbb
xchg
test
push
mov
dec
fcmovne
and
jbe
ficomps
adc
xor
or
stc
cli
push
jbe
xor
test
inc
aaa
ret
dec
adc
fs
fists
cltd
mov
adc
repnz
or
jmp
mov
mov
lock
adc
out
or
adc
arpl
fs
ljmp
push
cmp
push
mul
jo
dec
or
insb
mov
out
es
std
sub
inc
icebp
mov
in
imul
outsl
jbe
mov
sbb
sarl
and
repz
mov
cwtl
insb
and
pushf
ds
add
push
sbb
sbb
sub
dec
mov
test
and
adc
data16
or
pop
lahf
rcrb
jg
pop
mov
mov
test
jg
jecxz
rcl
sub
sti
fdivrl
mov
in
xlat
iret
jb
cmp
sbb
mull
adc
insb
clc
mov
jp
incl
cmpsb
mov
push
loop
adc
xor
adc
test
add
inc
cltd
xor
mov
pop
or
icebp
jge
and
cs
lods
aas
mov
mov
dec
into
aad
and
xor
jne
push
push
sbb
jno
xchg
jno
or
das
outsb
fcom
stc
repnz
xor
jl
and
lret
jl
pop
imul
cmp
add
mov
cmp
jmp
adc
je
mov
in
adc
pushf
nop
or
xchg
mov
out
sbb
lret
lret
push
ds
inc
pop
mov
push
ds
repnz
ss
out
pusha
dec
or
outsl
mov
movsb
fcoms
sub
fs
js
dec
jecxz
aas
pop
mov
dec
hlt
mov
or
cld
je
xchg
test
das
xor
outsl
jmp
movsl
xchg
shrl
inc
loopne
sub
dec
in
lcall
call
fsubl
push
ja
rclb
daa
out
mov
push
dec
inc
push
ss
mov
xchg
dec
xor
mov
adc
xor
xor
neg
xchg
mov
jl
xchg
dec
sub
cmpsb
mov
or
mov
mov
stos
rcrb
mov
movups
lods
cmc
xor
stos
add
cmp
inc
rclb
das
push
xchg
sub
lcall
or
mov
loope
inc
bound
out
sahf
sbb
stos
aas
push
xchg
lea
add
bound
ss
fs
call
xor
xor
lock
pushf
xor
sti
mov
mov
xchg
mov
mov
mov
popa
and
mov
pop
fldl
pop
loopne
test
test
add
int
push
push
cmpsl
loopne
mov
dec
adc
in
das
xchg
push
push
or
lock
mov
or
lret
push
pop
ja
ljmp
insb
cmp
insl
lret
adc
out
lds
jecxz
lds
push
dec
data16
sar
test
jnp
or
adc
xchg
stos
and
ror
push
xchg
loope
push
push
jl
and
jmp
xchg
xor
movl
sbb
dec
cmp
icebp
push
pop
jno
xlat
hlt
mov
lds
mov
in
mov
adc
sub
inc
out
sbb
mov
jns
mov
mov
fs
jle
and
mov
xor
xchg
orl
std
gs
and
and
jae
sub
or
outsb
arpl
dec
out
sub
test
out
test
sbb
outsl
mov
icebp
xor
repz
pop
push
dec
ds
push
jae
jo
ret
xor
int3
push
in
and
ds
jnp
and
cld
pop
ret
faddl
lods
pop
push
call
jae
outsb
cmp
xchg
cmpsl
clc
mov
or
lcall
mov
inc
hlt
push
int3
inc
adcb
jmp
movsl
or
adc
insl
outsl
mov
mov
fucomp
cwtl
cmpsb
xor
mov
mov
mov
movsb
std
rcrb
rorl
outsb
add
and
push
cmp
call
mov
or
mov
inc
fistl
cli
lret
scas
sub
cmp
mov
xchg
xchg
mov
sbb
and
aas
jl
mov
loope
outsl
xchg
addb
lods
enter
addr16
xchg
xchg
add
adc
inc
cmp
xchg
mov
es
dec
cwtl
insl
push
mull
xor
push
mov
in
push
mov
xor
adc
push
sbb
clc
jp
sbbl
loopne
or
cmpsb
es
sub
push
add
sbbl
cmp
inc
cmpsl
ds
aaa
cmp
insl
lds
jl
addr16
movsb
aas
repz
jmp
add
jg
outsb
or
xchg
int3
dec
mov
mov
shlb
in
sub
sbb
fdivrp
or
dec
adc
and
cwtl
repnz
out
and
mov
xor
cltd
xchg
mov
rcrb
pop
mov
int
enter
xchg
dec
push
scas
push
movsl
test
data16
cmp
rcrb
pop
xor
xor
adc
inc
out
jno
mov
scas
jo
add
inc
test
mov
sbb
adc
and
stc
repnz
sub
ficoms
ds
sub
pop
inc
mov
cs
pop
jne
mov
imul
gs
sbb
lret
jno
mov
and
aam
loopne
dec
push
cmp
out
ret
xor
mov
push
xchg
sub
gs
push
mov
add
xchg
test
fcoms
add
fidivrs
out
cs
scas
xor
outsb
jecxz
xchg
push
loope
addl
adc
pop
bound
das
dec
nop
xchg
mov
and
xor
repnz
shll
xchg
icebp
inc
stos
inc
repz
pop
and
ret
shlb
lea
stos
and
mov
jp
cs
and
add
mov
loope
dec
and
sbb
ficomps
or
shrb
orl
loope
shll
stos
sbb
incl
fs
and
jns
push
and
mov
out
push
and
push
xchg
lea
push
repz
leave
pop
dec
sbb
push
inc
xorl
pop
push
cli
mov
out
stc
mov
jns
dec
dec
int3
shl
pop
outsl
sar
stos
out
movsl
jge
sub
jbe
mov
adc
shlb
sbb
sub
jmp
mov
out
or
mov
lcall
push
inc
pusha
int
jg
clc
xchg
xor
xchg
xchg
mov
test
jno
nop
subl
ror
mov
dec
lret
jp
mov
or
xchg
push
adc
mov
and
xchg
xchg
cmp
cltd
sub
je
ret
roll
lds
movnti
into
mov
insl
dec
icebp
jg
adc
jno
and
or
and
sbb
pop
or
sbb
mov
inc
pop
xorb
adc
and
test
cmp
jns
inc
bound
add
sbbl
add
in
pop
jecxz
sbb
mov
jge
aas
jmp
test
lcall
in
or
push
mov
movsl
jle
out
daa
jmp
int3
jns
test
sub
adc
std
dec
int
ret
popa
jge
out
sub
push
aam
sub
pop
insb
cmp
insl
std
xchg
pop
jecxz
pop
movsb
lret
pop
jns
fdivrs
jo
cmpsb
imul
flds
mov
jno
aad
fmuls
icebp
notl
or
adc
int3
push
jno
out
int3
cmpsb
mov
rcrb
sahf
cwtl
xchg
cmc
sub
xor
mov
adc
dec
lods
sti
popa
mov
enter
push
push
lahf
and
push
mov
pop
test
lcall
rclb
lahf
mov
xor
aad
xor
cmp
icebp
sub
lock
rcll
jle
shll
int
hlt
in
std
pop
rcrl
jmp
sti
ljmp
sbb
xchg
repnz
movsl
push
clc
fwait
les
fs
inc
fwait
push
jmp
jmp
xlat
icebp
xchg
les
daa
scas
es
sbb
ret
ss
lret
add
fiaddl
pop
mov
pop
loop
push
ffree
aaa
outsb
adc
dec
mov
fsts
jb
xor
sarl
inc
sbb
icebp
adc
fiaddl
shlb
dec
push
cli
jnp
insb
fsubrs
xorb
sbb
mov
stc
lods
std
or
stos
sbb
mov
scas
aad
xor
shrb
push
arpl
shl
add
outsb
lds
adc
shrb
and
jle
push
sarl
loope
jnp
xor
sub
push
push
jmp
lcall
and
ds
inc
mov
test
popa
inc
jle
insb
loopne
push
add
fcoms
xchg
mov
lods
cmpsb
js
lods
lahf
ds
loop
jne
mov
mov
jno
fs
mov
fs
xchg
cmp
ret
cmp
sub
cmp
movsl
imul
ret
add
sbb
in
and
outsl
lret
sub
inc
inc
rdtsc
jp
int
push
popf
rclb
sbb
jno
aas
out
daa
imul
add
or
dec
scas
into
or
imul
incb
push
xor
inc
inc
stos
or
ret
testl
je
aaa
out
sbb
sti
cmp
hlt
sub
sub
push
sbb
jmp
mov
dec
adc
jmp
mov
mov
mov
rcl
nop
idivl
test
mov
mov
mov
mov
mov
inc
fmull
fidivl
aaa
dec
push
adc
sahf
push
sub
lea
mov
mov
sbb
loopnew
orl
test
and
dec
sub
fwait
mov
cmp
fsubrp
mov
xlat
lods
fnstcw
mov
fisubl
sub
fisttpll
mov
fsubr
subb
push
mov
and
ljmp
mov
jb
or
ficompl
into
mov
icebp
loopne
les
pop
test
cmp
rol
lret
jno
aaa
pop
sbb
pop
mov
andb
mov
jmp
pop
sbb
adc
sub
jb
push
js
inc
stos
shl
lds
in
add
negb
mov
adc
jae
jno
add
mov
ljmp
arpl
popf
mov
adc
adcb
mov
mov
mov
jno
adc
sub
lret
mov
push
adc
mov
inc
push
ds
inc
and
int3
sub
nop
int3
lock
mov
lcall
sbb
cmpsb
icebp
and
clc
sbb
ljmp
mov
sub
fcmovne
out
mov
xor
das
shrd
testb
int
xor
xchg
stos
jmp
lret
imul
add
std
ja
jp
sbb
push
ds
cmpsl
je
jb
faddl
cltd
jb
data16
push
cwtl
mov
mov
sub
test
jecxz
and
or
in
sbb
sub
in
enter
or
push
lahf
pop
jns
cmc
ja
push
jnp
inc
or
push
test
xor
xchg
or
xchg
inc
inc
push
gs
stos
mov
push
jmp
xor
mov
daa
pushf
sub
cmp
add
shlb
aad
pop
es
popa
jl
pop
xor
pop
ds
icebp
xchg
mov
mov
loope
push
pusha
icebp
mov
rolb
jl,pt
sbb
loopne,pn
pop
cmpsl
jae
or
std
test
fmuls
jnp
shll
fnstsw
mov
lea
push
xchg
fdiv
mov
dec
add
adc
loopne
ss
jmp
push
std
mov
pop
inc
enter
jae
je
add
out
into
fbstp
mov
push
inc
xor
out
mov
push
out
test
mov
sbb
jae
mov
pop
call
insb
dec
fstl
mov
adcl
cli
lods
aaa
ss
leave
push
inc
add
xor
loope
sbb
push
cltd
popa
and
call
divl
fdivrl
xor
inc
adc
xor
ljmp
fildl
xchg
pop
push
dec
lds
movsl
pop
push
sahf
mov
add
sub
rorl
sub
sti
mov
in
cld
out
push
test
mov
jl
arpl
outsb
mov
push
push
jp
push
add
mov
aaa
xchg
sub
mov
mov
out
xchg
fidivs
jle
pop
ds
sbb
adc
xor
inc
dec
addr16
dec
clc
dec
push
call
xor
icebp
les
leave
repz
out
pop
xor
popa
bound
cs
lcall
xchg
sub
insl
jne
mov
mov
outsb
mov
sub
test
adc
sahf
mov
pop
lcall
cmp
mov
mov
pop
in
ret
addr16
or
jmp
mov
lret
mov
pop
pop
std
mov
add
jb
ss
dec
sbb
sarl
scas
push
dec
movsl
push
adc
bound
icebp
outsl
mov
lret
push
imul
and
repnz
sub
rclb
cmpsl
sbb
dec
mov
addl
out
in
xchg
cltd
pop
std
adcb
aad
std
repnz
push
sub
sbbl
mov
fiaddl
mov
sbb
aaa
lea
jo
lods
or
push
jnp
lea
shlb
xor
insl
push
sub
xor
add
pop
adc
imul
ljmp
xlat
aaa
push
jnp
jne
cmpsl
sbb
xorl
mov
cmpsb
sub
xor
in
add
or
mov
dec
js
jp
or
lahf
daa
aas
pusha
lcall
push
jno
adc
mov
sub
jge
adc
pop
push
cmp
cli
jge
ja
push
sbb
adc
fnstsw
adc
out
adc
xchg
jle
sub
call
out
mulps
dec
je
mov
popa
push
inc
lcall
mov
cmpsl
out
adc
mov
push
daa
out
fwait
shl
push
pop
dec
repz
pop
jecxz
cmp
adc
das
xchg
fdivrs
dec
sub
sub
fldenv
push
outsl
paddw
idivb
sbb
xlat
ret
rorb
mov
ja
loop
gs
movsb
add
sbb
add
push
lret
test
popf
pop
dec
es
mov
arpl
jmp
nop
xchg
cmp
push
or
jo
loop
in
scas
fs
sub
lahf
adc
pop
jb
jl
xor
rcll
ss
mov
adc
hlt
adc
out
outsl
sbb
imul
sbb
cwtl
ret
aam
out
xor
in
add
cmpsb
xchg
cltd
push
xorl
hlt
sbb
pop
lods
and
es
loopne
pusha
mov
fs
jns
jl
out
in
movsl
rol
orb
jg
jecxz
filds
inc
inc
in
inc
pop
orl
mov
movsb
fsubr
pushf
xor
and
mov
mov
add
outsl
lea
fsubr
and
dec
pop
mov
outsb
mov
not
movl
jge
mov
cmpsl
inc
ja
add
dec
inc
movsl
sahf
repz
mov
inc
mov
movups
ja
test
jno
jbe
sub
push
gs
sub
xor
or
dec
inc
push
test
mov
mov
movsb
fmulp
sub
jne
fldcw
or
pop
inc
fimuls
cmp
cmp
pop
jg
cmp
xchg
cmc
add
add
sbb
mov
push
adc
sub
or
aaa
and
fsts
enter
xchg
in
popa
xchg
adc
or
faddp
push
add
int3
push
sbb
inc
addr16
pop
fcmove
push
daa
or
xor
pop
mov
push
insb
xchg
dec
leave
xor
and
jecxz
mov
adc
or
pushf
adc
push
pusha
cltd
movsl
or
xchg
int
lahf
mov
push
dec
jg
or
cmp
sbb
adc
mov
sub
pop
add
xor
nop
jp
cs
pop
mov
dec
imul
in
in
mov
xor
push
pop
fnstenv
or
sahf
jp
lea
xchg
jge
addb
jne
mov
dec
test
pop
ficoml
xor
adc
adc
push
fisubl
or
inc
jno
or
and
or
inc
inc
push
loope
in
push
sbb
ja
and
scas
cmp
ds
shll
jo
es
out
lahf
inc
cli
sub
sub
mov
or
sbb
into
pop
outsb
int3
test
imul
inc
outsl
dec
jbe
jnp
int
data16
sbb
mov
int
std
jge
cmc
aas
outsl
pusha
jl
sub
loope
or
pop
jne
int
xor
inc
outsl
cmpsb
add
sub
add
push
lahf
adc
xchg
xchg
out
inc
scas
push
movsb
fsubrl
shll
pop
es
mov
mov
aas
jp
adc
scas
cmp
fstps
ss
pop
push
lret
jno
xor
popf
fnstenv
cmp
cmc
and
out
out
imul
mov
sub
pop
bound
sbb
into
test
inc
sub
inc
gs
js
fsubs
imulb
lahf
cs
cmc
push
or
add
mov
test
adc
jge
push
sbbb
test
je
mov
sbbb
fucom
push
std
inc
or
push
hlt
adc
push
jo
jg
pushf
mov
jnp
cmp
pop
orps
les
fidivrs
enter
jae
lahf
xchg
adc
leave
mov
sbb
adc
add
repnz
pushw
iret
aam
xor
adc
cwtl
lods
push
ficoml
aas
test
lock
xchg
sub
dec
xchg
scas
enter
push
push
jmp
cwtl
mov
fdivrl
clc
mov
and
fs
push
pop
jne
mov
scas
in
xor
jnp
mov
pop
mov
jge
mov
iret
aam
xchg
aaa
sub
lret
testl
loop
push
mov
xor
stc
pusha
ret
add
data16
mov
fmull
and
iret
movsl
es
sub
ret
mov
movsb
lret
xor
push
sub
pop
cmpsl
inc
inc
adc
xchg
inc
add
inc
dec
sbb
xchg
rorb
lods
adc
xor
lcall
repz
into
xor
sbb
push
mov
mov
jge
adc
push
rclb
int
xchg
jp
rcrl
mov
adc
cmp
xchg
sub
mov
stos
jae
imul
cmp
arpl
push
push
jns
pop
inc
pop
jecxz
xlat
xor
pop
sahf
mov
ret
push
cmc
pop
int3
xor
push
mov
ss
lods
popf
shrb
insl
je
int3
lea
dec
scas
inc
shrb
pop
pop
pop
mov
pop
repnz
arpl
pop
mov
push
lea
dec
adc
mov
pop
ret
sti
push
hlt
addr16
into
enter
inc
adc
cld
jmp
or
mov
insb
test
add
xchg
xor
inc
push
lret
cmovg
jbe
add
lock
push
mov
leave
sub
and
repz
imul
ret
push
push
or
mov
push
dec
stos
xlat
xor
jnp
mov
cltd
dec
out
pop
cld
push
nop
sub
hlt
xchg
fdivrs
jb
mov
add
jae
cmp
scas
pop
in
lods
mov
lcall
or
in
mov
push
mov
leave
and
iret
xchg
and
add
or
mov
stos
and
out
popa
xchg
pop
adc
scas
jge
jp
mov
je
inc
sub
inc
out
out
lcall
mov
and
xchg
ds
jmp
dec
jo
cmp
xlat
mov
cmp
add
xchg
sbb
and
pushf
insb
push
mov
mov
pusha
push
mov
jmp
outsl
divb
xor
testb
fidivs
push
or
aam
or
jl
sbb
fwait
out
rolb
nop
inc
faddp
push
cmpsb
outsl
xor
out
insl
dec
push
in
pop
xchg
cmc
movsl
jno
xor
sbb
xchg
roll
lahf
outsb
jnp
push
lods
loopne
ds
xchg
test
push
and
sbb
xchg
mov
mov
cltd
pushf
jnp
ja
cmp
xor
xchg
or
inc
daa
and
mov
pop
in
jge
adc
aam
sub
push
or
mov
adc
or
adc
push
cmp
scas
fwait
lcall
xor
push
lods
ret
pop
mov
nop
or
popa
pusha
gs
push
lcall
adc
lret
push
push
pop
in
dec
cld
sub
cmpb
movsb
int
cmp
js
popf
pop
jmp
nop
test
xor
call
cmp
and
dec
fldl
lret
mov
movsl
lahf
mov
icebp
xor
ret
jmp
orb
and
and
inc
mov
mov
push
cmp
mov
or
test
cwtl
push
mov
hlt
cmpsl
call
pop
ss
dec
std
int
push
sub
shrl
add
or
int3
pusha
ds
jle
fwait
and
sub
in
idivl
int
sahf
out
or
push
adc
jne
lcall
mov
or
jecxz
loopne
and
xor
fldcw
iret
push
mov
movsb
xchg
sub
jecxz
pop
clc
scas
mov
loopne
pop
iret
cld
mov
aad
mov
cmp
ss
adc
mov
dec
adc
in
pop
xchg
addr16
mov
sti
push
adc
jmp
clc
movsl
lcall
cmp
mov
pop
jl
repz
dec
xchg
sbb
lods
out
cli
addr16
sub
pop
repz
cwtl
xchg
dec
jp
rorl
add
rclb
fwait
movsb
movsl
out
mov
nop
in
fimull
cmpsb
dec
outsl
cwtl
and
popa
pushf
cmc
loopne
mov
jo
loopne
test
test
and
and
in
xchg
in
mov
and
aas
js
jmp
outsl
and
pop
leave
lock
push
test
out
dec
mov
mov
imul
ret
jle
push
push
sbb
cmp
adc
cmpsb
outsl
lea
addb
shrb
add
jns
adc
jnp
mov
jecxz
out
adc
lds
xor
roll
in
call
dec
push
mov
insb
aaa
sub
cmp
add
adc
push
inc
nop
xchg
fcoms
ljmp
xchg
push
cmpsb
mov
stc
xchg
mov
aas
mov
or
adc
jbe
hlt
das
insl
loop
pop
sarl
push
sub
pcmpgtd
or
movsl
mov
mov
cmpsb
icebp
adc
je
push
xchg
and
aas
mov
push
push
ret
cmp
mov
mov
andl
icebp
ljmp
mov
cmpsb
or
xor
rcrl
repnz
ja
imul
mov
and
dec
sti
test
out
sub
cli
ss
xor
sub
mov
push
sti
movsl
rcr
aaa
insb
loope
mov
cwtl
sbb
nop
out
stc
stos
mov
lcall
xlat
push
imul
std
divb
fstpt
pop
int
pushf
push
add
aam
insl
sbb
lock
sub
in
and
push
adc
mov
jp
bound
loope
mov
sti
mov
movsl
or
lods
mov
push
insl
pushf
cmp
js
test
mov
leave
xchg
bound
ljmp
sbb
add
les
mov
pop
ds
cmpl
ljmp
jne
sbbb
ret
es
pop
fdivrl
dec
adc
fisttpll
mov
mov
ffree
faddl
jae
mov
jo
cmp
adc
mov
xor
dec
jg
nop
add
cmc
mov
cltd
lcall
add
inc
inc
xchg
push
lods
fs
cltd
sbb
out
xchg
cmp
push
inc
js
jno
inc
jae
out
sub
addr16
mov
push
loop
dec
mov
push
adc
out
or
add
cmovnp
outsb
pusha
sub
imul
xchg
push
das
into
mov
js
cwtl
jp
push
dec
stc
mov
test
inc
pop
jnp
inc
lods
add
adc
xor
out
adc
nop
ret
mov
xchg
adc
les
dec
sbb
fisubrs
arpl
pop
bound
lret
inc
pop
and
and
cmpsb
lcall
cmp
push
dec
out
aam
test
xor
ja
pop
stos
stc
mov
das
ss
arpl
dec
add
or
setae
cmpb
fadds
out
hlt
mov
fwait
or
push
fsubrs
jg
ror
mov
xor
push
mov
cli
and
xor
in
subl
js
cmc
jns
aaa
call
inc
pop
jp
push
insb
jno
mov
js
out
push
repnz
mov
mov
mov
and
adc
add
int
jnp
add
sub
out
ficompl
mov
sbb
cmp
mov
sub
jae
sbb
push
movsb
rol
mov
push
xor
das
test
lods
int
sbb
xor
or
mov
jmp
dec
inc
in
fwait
notb
inc
sub
lea
outsl
mov
cmp
jns,pn
mov
dec
xchg
sbbl
mov
fdivl
outsl
ljmp
xor
out
cmp
xor
sub
and
les
xor
lret
ljmp
add
repnz
push
notb
inc
mov
loope
insb
inc
jg
test
cltd
push
bound
icebp
dec
arpl
push
ss
fdivrs
xchg
push
push
lock
lcall
les
and
test
ljmp
mov
inc
mov
call
out
mov
sbb
ljmp
ds
cmp
add
push
pop
mov
fldcw
es
push
sbb
aas
movl
cmpl
cwtl
push
mov
sbb
xchg
jle
dec
pop
mov
mov
mov
mov
add
jb
popl
jl
mov
sub
sub
mov
mov
push
mov
sti
cmpsl
in
rorb
inc
add
nop
push
out
adc
lcall
and
shll
xchg
push
ficoml
shrb
idivl
jmp
test
cmp
adc
invd
cmp
jo
push
mov
aaa
pop
xor
mov
push
lods
pop
mov
xchg
sbb
insb
sub
mov
cmc
mov
lock
sbb
pop
sbb
out
addr16
loopne
cmp
and
rolb
or
dec
fnstsw
mov
lret
fisubl
mov
dec
addb
imul
push
push
fisubs
insb
loope
mov
lret
inc
xchg
mov
cmpl
sahf
fs
mov
mov
popf
push
pop
std
mov
ljmp
dec
cmp
pop
inc
mov
sub
les
rorl
movsb
lock
pop
push
out
ja
and
or
pop
test
pushf
cmp
mov
mov
mov
sub
clc
shlb
inc
sar
shlb
imul
xchg
inc
in
sbb
rolb
mov
stos
sbb
roll
jne
cmpb
mov
dec
push
push
cmp
gs
xor
mov
adc
lret
or
push
jnp
insb
cmp
push
sti
mov
mov
inc
shlb
les
fldcw
out
lods
mov
xor
mov
adc
rol
clc
jno
scas
jb
add
mov
idivb
xchg
inc
scas
lock
rclb
sub
out
mov
sub
orb
bound
orl
mov
testl
movsb
es
js
out
push
dec
inc
or
push
lahf
test
idivl
push
cmc
pop
aam
divl
fnstenv
jp
cmp
dec
fs
xor
or
xchg
fdiv
arpl
jge
enter
mov
test
mov
cmp
mov
fdivrl
int
push
into
sti
cmp
xchg
cli
cmp
push
int
pop
xor
sub
out
and
jno
imul
loopne
insl
add
jne
punpckhdq
mov
pop
sub
popf
insl
sub
scas
push
arpl
dec
jp
ret
mov
aad
jg
pop
out
cmp
insb
inc
jno,pn
popa
push
aad
aas
fnsave
jg
aam
xchg
dec
loop
cld
pop
shl
sarb
sbb
mov
xor
mov
mov
dec
xor
pop
pop
pop
lock
and
lret
pop
push
stos
inc
push
add
pop
mov
ss
filds
mov
ss
adc
pop
or
nop
cmpsl
arpl
dec
lea
movaps
push
jbe
into
push
dec
pop
js
imul
add
push
xor
inc
dec
pop
daa
addr16
and
std
xchg
ror
pushf
pop
push
and
xor
mov
or
sbb
mov
dec
xor
mov
rcr
pop
add
inc
sbb
and
push
mov
imul
jae
sub
sub
and
mov
sbb
or
pop
sub
ljmp
cld
sub
stos
std
mov
test
xchg
push
pushf
aaa
fs
mov
bound
lahf
add
mov
mov
xchg
pop
mov
shlb
push
pop
inc
fldt
lret
push
nop
stos
mov
lods
imul
into
sbb
mov
sbb
fists
loop
xor
pushf
pop
sahf
and
ds
scas
in
ret
shld
cmp
inc
sub
mov
mov
dec
sbb
mov
mov
sbb
fdivl
dec
loop
xchg
ror
xor
les
sbb
pop
iret
adc
mov
cs
mov
arpl
xor
js
mov
mov
mov
sbbb
mov
cli
and
jmp
or
jg
adcl
hlt
dec
xor
imul
mov
dec
scas
push
jae
mov
movsl
pop
cmp
sub
mov
push
sub
jecxz
data16
adc
std
mov
mov
sbb
pushf
mov
dec
jo
test
clc
and
xchg
ss
add
mov
ss
or
roll
orl
sub
jmp
jbe
into
int3
mov
mov
cmpsb
rorl
rcll
pop
sub
sbb
mov
pop
into
fwait
xchg
mov
xchg
stos
imul
and
jmp
into
cli
les
cld
sub
pxor
mov
insb
inc
sub
aaa
and
test
not
mov
cmp
sub
xchg
jns
fadd
inc
inc
imul
ljmp
es
sti
xchg
mov
popa
cmp
cmpsb
sub
pop
int
jge
in
ret
xchg
mov
iret
sub
dec
sarl
mov
sbb
pushf
popl
push
mov
dec
lods
push
dec
addr16
mov
ret
cmp
ret
jae
cmp
dec
scas
jnp
cmpsl
mov
mov
adc
cmp
mov
dec
xchg
test
sbb
jecxz
outsb
push
xchg
cwtl
jg
push
adc
popf
scas
adc
and
jl
push
into
loope
sbb
ja
mov
adc
repz
dec
pop
inc
or
vandpd
push
xchg
cltd
repnz
sbb
stos
mov
imul
xchg
sahf
std
arpl
jns
jp
push
dec
add
sbb
jp
sbb
lcall
pop
int3
fidivrl
dec
xchg
sarl
cmp
clc
scas
dec
stos
aaa
outsl
jp
and
or
leave
arpl
or
js
insb
add
mov
jne
pushf
es
test
std
leave
adc
push
add
fistl
inc
jae
push
xchg
in
jo
cmp
aad
jg
ds
stos
stos
arpl
cmp
shl
inc
fs
mov
jecxz
cmp
movsb
out
mov
iret
push
hlt
fldt
and
fimuls
test
dec
push
lods
std
mov
pop
dec
lret
aaa
leave
lret
cmp
xchg
and
jmp
xchg
adc
sbb
sbb
add
jae
mov
push
jle
out
cmpsl
data16
push
pusha
xchg
dec
dec
mov
add
mov
hlt
aas
fstpt
adc
xchg
mov
xor
stos
repnz
in
insb
cli
lahf
mov
enter
xchg
and
sti
adc
mov
bound
jne
pop
xor
jo
ds
push
lods
rolb
jp
mov
jo
hlt
shlb
in
dec
mov
mov
xor
cs
rorl
fisttpl
jae
push
js
jg
out
out
std
stc
mov
out
iret
shrl
cmp
sub
icebp
jecxz
mov
sbb
cmpsb
add
add
or
repnz
mov
cmp
mov
rcll
rcl
inc
push
adc
sbb
push
and
fs
pop
cmpb
pop
adc
call
ljmp
adc
cltd
add
adc
out
and
into
or
xor
cmpsl
inc
push
out
pop
push
cmpsl
mov
jp
xor
cmp
push
sbb
aam
inc
sub
and
std
insb
movsl
jnp
pop
int
pop
nop
lcall
xor
pop
adc
and
icebp
mov
and
inc
int3
sbb
push
cmp
mov
mov
xor
loop
outsb
xchg
mov
movsb
or
lods
insl
out
imul
and
imul
rcll
sbb
add
adc
mov
hlt
out
inc
mov
and
lea
shrb
mov
add
mov
pusha
lea
dec
hlt
incl
jmp
stc
push
rcl
mov
notl
push
xchg
ret
pop
pop
in
lret
cmc
outsl
inc
ror
adc
xlat
dec
call
xor
and
std
gs
mov
fisubs
ljmp
cmpsl
mov
sahf
icebp
mov
fistl
cmp
mov
js
xchg
push
adc
mov
clc
adc
adc
adc
adc
mov
dec
push
and
ds
popa
xchg
aad
jecxz
ret
jb
xor
je
enter
mov
or
add
clc
inc
dec
xchg
dec
jecxz
incl
inc
pop
push
aam
xchg
pop
jle
fs
mov
movsb
mov
jnp
dec
push
or
scas
std
dec
je
pop
movl
xlat
lods
push
test
negl
mov
je
pop
imul
jge
pop
jl
and
mov
sbb
jne
lcall
push
fdivs
jp
mov
insb
jb
mov
insb
into
test
fnstcw
mov
ja
cld
rol
mov
popf
pop
cli
fcompl
imul
movsb
sub
dec
dec
add
out
rcr
insl
pushl
push
inc
aam
fdivr
in
sub
popa
and
xor
cmc
ss
xor
shl
imul
add
sub
shr
jp
fisttps
scas
push
jmp
xchg
mul
dec
into
pusha
and
iret
outsl
ss
mov
push
mov
push
add
cmp
loope,pn
add
movsl
lods
xchg
xchg
cmp
stos
pop
mov
movl
xor
jl
sub
pop
or
add
rcrb
xor
icebp
or
pushf
cltd
mov
rcl
xchg
outsb
out
pop
jecxz
lock
dec
and
arpl
inc
cli
rol
inc
adc
test
fcompl
in
arpl
push
mov
mov
inc
jne
push
jl
lcall
mov
inc
mov
cmp
rcl
es
test
cmpl
jne
cmp
out
push
lock
jns
add
sbb
pop
dec
xchg
cmpsb
mov
ljmp
shr
jne
pop
xor
imul
and
cltd
sti
bound
inc
int
jmp
popf
lods
add
icebp
jnp
inc
iret
aas
fisttps
dec
ds
fistps
jno
lcall
int3
mov
fwait
add
dec
inc
jns
xchg
jl
shrb
fcoml
pop
or
lahf
std
inc
rcrl
out
xchg
xor
cmovb
pop
lock
inc
and
aam
sbb
aad
mov
sbb
push
sbb
dec
in
push
add
add
stc
jno
inc
lea
sbb
sbb
test
cmp
scas
repz
cli
or
mov
imul
stos
mov
dec
xor
pop
pop
mov
leave
dec
call
aam
ja
mov
mov
push
mov
and
pop
les
aam
bound
and
and
ficoml
jb
mov
ss
or
in
push
dec
xor
lret
dec
jnp
dec
lcall
mov
loop
dec
lret
dec
sbb
mov
popf
and
cmp
fcompl
inc
fimuls
out
mov
pop
xor
popa
cmpsb
pop
mov
pop
stos
mov
out
and
cmpsb
inc
xchg
aad
mov
movsb
cmp
mov
or
popa
cmp
xchg
inc
mov
in
pop
pop
dec
inc
loope
cltd
sub
adc
jmp
add
adc
fildll
push
jne
sahf
sahf
push
pop
and
or
mov
lock
movl
filds
inc
and
xor
adc
clc
add
test
mov
xor
add
jle
or
out
jnp
jp
std
xchg
jp
xor
sbb
lods
inc
cltd
mov
cli
and
sahf
pushf
xchg
popa
das
in
add
insb
inc
mov
cmc
push
rol
cs
push
cmp
ds
or
dec
popf
inc
loop
cmpsb
shll
sbb
dec
cwtl
push
andl
roll
dec
inc
addr16
mov
loope
mov
mull
sub
testl
gs
adc
lods
hlt
imul
push
repz
xchg
enter
xlat
add
shrl
outsb
out
pop
push
ja
xchg
xchg
push
mov
jo
outsb
or
mov
scas
fldcw
pop
fimull
jne
cmpsb
push
cltd
xchg
stos
outsb
cld
leave
cmp
lods
vmread
xchg
cmp
outsb
sub
outsb
pop
enter
add
pop
jbe
mov
mov
mov
mov
pop
fsubr
jl
bound
pop
sbb
rcrb
int3
dec
xchg
call
nop
jmp
push
mov
inc
and
and
pop
rcrb
mov
or
mov
sbb
pop
sbb
or
call
cwtl
sarl
adc
mov
cmp
and
aam
jo
sub
out
mov
mov
bound
add
mov
push
inc
fistps
outsl
mov
mov
gs
cmp
out
aam
sbbl
adc
mov
sub
inc
mov
scas
cmp
pop
mov
inc
jae
decb
cmp
lcall
test
adc
sbb
subb
xor
pop
dec
dec
and
pop
jae
aaa
imul
mov
mov
aad
lret
add
stos
jecxz
into
fadds
inc
mov
lcall
push
jge
or
pop
popf
cmpsl
loop
enter
insl
sbb
outsl
int3
pop
adc
lea
cmpl
adc
cmpsb
into
xchg
xor
fcomps
sahf
gs
pusha
jb
jne
sbb
jge
push
mull
xchg
xchg
jne
sarb
inc
outsb
push
xchg
mov
jb
mov
mov
test
push
adc
sub
jnp
pusha
in
xor
sub
and
push
cmp
and
push
xlat
pop
sbb
xchg
sbb
adc
roll
sbb
mov
arpl
pop
repnz
stc
jecxz
mov
push
pop
xor
ror
sub
jge
add
outsb
mov
movsl
es
and
cmpsl
sbb
test
fisttpll
adc
xchg
ss
adc
cmpsb
sahf
mov
leave
add
cmp
pop
mov
pop
aad
cltd
fsubp
push
lock
or
mov
jp
sahf
scas
or
pop
mov
cmovle
lcall
fdivrs
mov
repnz
or
cltd
stos
movsb
lahf
loope
pop
pop
cld
or
adc
aad
jae
jns
mov
repnz
mov
sti
aas
mov
cmc
jns
lea
or
pop
xor
xchg
xchg
inc
push
in
test
or
mov
push
xchg
mov
mov
mov
aaa
sbb
repz
mov
inc
mov
pop
lret
jg
imul
dec
popa
fwait
cmc
lcall
inc
jge
dec
push
push
cld
mov
lods
inc
les
or
fcmovnu
scas
loop
mov
adc
xor
jb
fsubp
and
shlb
sbb
mov
sahf
xchg
data16
dec
sub
mov
incb
pushf
aad
gs
sahf
out
mov
xchg
add
sbb
dec
pop
jbe
imulb
cltd
xor
ss
out
std
imul
cmp
lea
fdivrs
dec
popa
cmpsl
or
loop
push
push
xor
push
or
mov
test
xchg
faddp
aad
push
outsb
pushf
pop
mov
pop
in
fiaddl
rcrl
lods
push
push
mov
and
enter
idivl
push
lock
pop
lock
push
insl
or
sub
fiadds
mov
das
aam
icebp
and
loopne
mov
jbe
mov
fldcw
div
in
sbb
sti
stos
sub
ds
push
std
cmp
and
xchg
add
ss
mov
insb
pop
inc
jmp
jecxz
mov
xorb
jae
sub
test
enter
aas
addr16
mov
pop
loop
loop
or
lods
sub
popa
cmp
dec
mov
test
adc
push
inc
mov
mov
push
inc
xor
faddl
ret
xor
jb
push
jnp
jecxz
dec
repnz
jno
cmp
xor
shrb
lods
sbb
fstp
push
in
pop
adc
lahf
outsl
cmpsl
mov
repz
sti
jno
and
or
clc
daa
sarb
mov
stc
mov
pop
mov
adc
cmp
adc
fistpll
jbe
mov
mov
push
in
movlps
sbb
push
cmpsl
lock
adc
jo
add
iret
pop
jecxz
pop
mov
inc
jne
mov
xor
sbb
sub
jg
adc
mov
and
mov
add
dec
inc
rol
in
aam
loopne
xchg
xchg
push
fsub
and
sti
xchg
jmp
push
adc
mov
nop
test
hlt
cld
mov
mov
test
sarb
pop
fdiv
inc
push
mov
pop
lds
mov
mov
push
fsubl
adc
arpl
sub
add
pmuludq
adc
ja
mov
mov
aad
mov
fsubs
ljmp
aas
adcl
and
das
xorb
mov
xchg
jecxz
imul
jb
xchg
test
dec
imul
sbb
xchg
rcr
pop
call
push
sub
lods
leave
loop
shll
jl
push
xor
scas
push
sar
push
out
mov
and
mov
sbb
test
out
mov
sub
std
and
cmpsb
iret
jnp
sbb
js
arpl
pusha
inc
sahf
push
xchg
mov
mov
imul
jbe
xor
pop
lcall
ficoml
imul
xchg
adc
out
add
dec
xor
bound
or
cltd
mov
lock
lods
xor
mov
jle
pop
clc
jo
pop
cmp
fincstp
outsl
push
es
and
into
jb
outsl
out
pop
mov
mov
cli
les
cmpsb
test
dec
in
cld
sub
inc
mov
and
jnp
mov
int3
cmpsb
rcl
loope
shrb
icebp
add
cltd
mov
xor
push
jge
mov
push
iret
mov
ds
xchg
dec
add
mov
sarb
xchg
sub
mov
sub
xor
pmulhuw
push
xchg
sbb
push
out
and
test
int
in
shll
out
movl
mov
fistl
cld
stc
daa
sbb
sahf
inc
lahf
xor
stos
scas
popa
jns
lret
pop
push
cmp
aam
daa
inc
mov
insb
stos
das
cmp
or
js
ljmp
fwait
out
push
nop
push
sub
lret
insb
xchg
sbb
aas
jno
push
ds
in
popf
mov
dec
or
sbb
icebp
mov
pop
clc
call
adc
sub
rcrb
mov
gs
jle
pusha
dec
fiaddl
push
ds
mov
rcrl
popa
or
inc
mov
adc
iret
in
scas
adc
xor
movsl
shrb
jmp
xor
mov
xchg
pop
sbb
aam
cltd
mov
test
hlt
rolb
inc
adc
jo
nop
xor
cmp
mov
jo
lret
leave
or
inc
push
sbb
xor
fcompl
dec
xlat
pusha
lds
mov
loope
mov
cld
pop
sub
sbb
andb
push
cltd
in
mov
add
leave
push
je
out
cwtl
movsb
cmp
inc
hlt
rcrl
dec
adc
or
in
sbb
or
push
inc
cmp
fcoml
adc
mov
inc
jmp
push
sbb
mov
cmc
mov
jns
ljmp
les
mov
aad
aaa
push
iret
mov
dec
fwait
add
mov
xlat
dec
add
rdmsr
mov
scas
dec
push
nop
pop
push
or
test
inc
das
sahf
popa
jnp
fcomip
lods
aam
mov
push
insl
cwtl
int
stos
das
or
dec
add
shll
push
std
xchg
rep
adc
mov
in
jl
lds
cli
pop
pop
mov
lods
pushf
lret
pop
enter
pop
xchg
adc
push
ljmp
dec
xorl
add
sbb
jae
pop
mov
mov
xchg
out
push
sahf
dec
insl
lret
mov
pop
xchg
inc
jnp
pop
push
xchg
mov
cld
mov
adc
clc
jecxz
call
dec
ficompl
mov
call
mov
jecxz
xchg
addr16
cs
shl
daa
enter
xor
shlb
xor
xchg
xchg
sbb
sbb
dec
add
push
mov
and
sbb
xor
adc
jge
imul
outsb
into
orb
adc
in
insl
add
xchg
pop
out
mov
inc
cli
xorl
sub
pop
cmpsl
xor
xchg
addr16
outsl
mov
dec
fiaddl
test
and
leave
xorl
iret
sarb
fldl
sarb
jns
loopne
les
inc
add
pop
aaa
fdivr
add
daa
es
popf
push
add
aaa
lds
roll
xchg
cld
sub
mov
add
adc
out
jne
jns
xchg
mov
fimuls
nop
aad
sbb
loope
cwtl
sahf
fsubrl
sahf
aad
jle
icebp
pop
nop
add
pop
iret
stc
xchg
aam
out
pop
js
movsb
sahf
scas
int
mov
stc
nop
cwtl
dec
mov
cmp
mov
movsb
sub
aad
push
mov
lock
dec
cmp
fcoms
add
rcrl
incl
jae
xor
mov
push
adc
pop
mov
jle
out
push
movl
xlat
sub
test
dec
pushf
adc
aad
jnp
pop
js
insl
test
out
ljmp
mov
mov
mov
pop
mov
addr16
stc
ss
mov
jns
fiaddl
test
repnz
jmp
ret
imul
sbb
xchg
iret
mov
popf
cltd
cmp
cmpsb
pusha
orb
and
adc
sub
push
stos
and
cs
push
lcall
lret
mov
cmc
inc
out
leave
pop
xchg
aad
popf
cmc
in
pop
mov
pop
test
xchg
out
test
push
repz
shll
insb
mov
sub
out
jmp
imul
mov
xchg
mov
jle
or
mov
adc
mov
std
aam
mov
cmpsl
mov
or
cmp
out
cmp
sub
scas
push
ret
jno
pop
inc
pop
xor
addl
clc
add
repnz
addr16
push
out
dec
inc
addr16
jno
adc
test
test
repnz
scas
mov
in
xor
daa
ljmp
mov
xchg
in
sbb
fwait
xchg
and
enter
jbe
ror
test
pop
inc
outsb
pop
dec
gs
xor
and
int3
push
sbb
dec
mov
xchg
int
dec
mov
inc
mov
cmpsl
adc
pop
mov
jecxz
add
pop
xor
js
cs
xchg
dec
xchg
sbb
xor
int3
bound
in
dec
movsl
mov
imul
pop
negl
sub
xor
movsb
es
dec
imul
jo
inc
es
mov
in
pushf
inc
adc
cmp
mov
test
or
sbb
aas
inc
nopl
jmp
test
pop
pop
and
clc
icebp
sbb
pop
jge
cmp
add
cmp
shr
adc
push
jo
xor
push
add
xchg
js
jno
lods
mov
add
and
add
insb
cwtl
mov
stc
jne
dec
mov
out
arpl
ljmp
into
xchg
inc
mov
mov
aas
movsb
es
das
icebp
pop
lahf
inc
mov
pop
mov
adcb
ret
xchg
pop
jecxz
sub
push
pop
jecxz
pop
jnp
sbbb
mov
std
daa
mov
mov
sbbl
mov
and
andl
mov
call
imul
pop
sub
jl
fwait
test
mov
insb
mov
mov
add
pusha
adcl
test
inc
cmp
into
scas
xchg
inc
adc
push
jbe
js
cmpsl
sbbb
mov
shlb
or
out
ret
rcrl
loope
dec
jecxz
sub
js
inc
notb
xchg
adc
mov
cli
dec
push
add
scas
push
push
sbb
out
pop
imul
mov
inc
movsl
sub
pop
jno
cli
jo
repnz
dec
aam
sbb
sub
mov
cmp
adc
fdivl
ljmp
mov
or
pop
jno
push
xor
lret
cli
push
cmp
mov
mov
dec
mov
adc
roll
sbb
in
sti
fwait
or
xchg
arpl
xchg
dec
int
out
std
adc
add
jp
or
movsb
cmp
daa
sub
fbstp
sub
aaa
xchg
in
pop
outsb
cmpsb
or
mov
pop
jno
or
and
nop
aad
data16
dec
pop
loope
add
mov
jns
nop
pushl
xchg
bound
xor
adc
sbb
push
jo
and
outsl
or
mov
leave
aad
loop
aam
ret
sahf
sbb
pushw
push
cli
adc
mov
sub
or
dec
inc
pop
shll
out
lcall
dec
and
or
test
shlb
mov
push
mov
out
aas
clc
roll
dec
mull
xchg
add
jo
or
dec
push
dec
adc
cs
xlat
or
int
or
je
cmpsl
les
cmp
mov
orps
or
mov
cs
mov
imul
jl
ret
add
jp
jo
and
jns
mov
adc
fcoms
stc
cld
sub
addr16
repz
sub
orb
jnp
int3
sbb
test
fwait
xor
xchg
shr
sti
imul
or
lret
fnstsw
dec
sbb
mov
mov
int
pop
push
pop
outsl
inc
ljmp
mov
pop
scas
adc
mov
cmp
ds
cwtl
mov
or
mov
mov
jmp
or
push
je
push
imul
adcl
jnp
out
jmp
add
push
cmp
pop
jb
stos
sarl
mov
mov
popf
ret
test
xchg
test
adc
ja
ds
jecxz
loopne
pusha
jge
test
fcoml
dec
pop
cmp
xor
xchg
std
aam
jo
dec
pop
xor
dec
push
pop
stc
xlat
add
movsl
sbb
lods
jg
rolb
out
and
and
les
fsubl
in
std
in
sub
add
jbe
test
iret
mov
popf
xchg
out
nop
sarb
mov
inc
cmp
clc
jg
xchg
rcr
sub
incb
add
out
aam
cmp
sub
fdivs
cmp
sub
mov
lret
out
sbb
adcb
push
pop
fdivrs
call
push
test
lcall
cld
fwait
test
rcrl
sub
jne
fnstcw
mov
sbb
cld
fwait
sbb
mov
xor
pop
sbb
in
cmp
in
mov
sub
or
or
lcall
aaa
lea
call
test
push
or
and
rcl
repnz
pop
cltd
push
outsl
aad
aas
popf
mov
sub
cld
add
scas
jl
xor
stos
adc
xchg
sbb
aam
cmp
xchg
int3
adc
lret
leave
inc
xchg
test
sbb
imul
push
mov
pop
ljmp
jnp
jnp
push
and
ret
push
lret
les
inc
inc
imul
int3
ret
lcall
dec
aas
ret
sbb
xor
outsl
or
cmp
out
cmp
adc
loope
pop
lahf
inc
pop
insb
jno
pop
xor
test
jbe
dec
das
lock
ficoms
inc
cwtl
mov
test
es
bound
cmp
mov
or
test
add
lods
in
repnz
push
icebp
add
lods
mov
fdivrl
xchg
fprem
rorl
rcll
sub
dec
pop
inc
sbb
push
mov
add
add
subb
jmp
lcall
jae
lret
push
cld
add
in
lahf
shlb
ds
sub
cld
in
jle
popf
cli
xchg
loope
sbb
scas
xor
fadds
out
jbe
xor
ficoml
int3
jo
mov
push
pop
mov
mov
cmp
jle
mov
clc
int3
cs
cmpsb
inc
lods
inc
aas
add
inc
dec
push
inc
dec
lods
mov
jmpw
dec
sbb
push
popf
inc
sbbb
sarl
nop
gs
in
sbb
in
loopne
test
sub
pop
rcrb
mull
adc
push
insl
jge
loopne
xchg
stc
lahf
mov
and
pop
and
imul
test
sub
popa
jg
popf
fwait
enter
jb
in
or
inc
fists
and
sti
repnz
xchg
push
mov
jmp
cmp
add
movsl
in
pop
jle
xchg
addr16
mov
andb
xor
sub
adc
add
ljmp
jnp
adcb
jle
jmp
sub
cmp
out
mov
scas
push
loop
and
and
test
stos
pop
push
sbb
pop
in
adc
cmp
adc
in
cmpsl
and
dec
xlat
into
loop
sbb
mov
xchg
mov
push
clc
sar
insl
negl
pop
push
jg
sub
in
repz
and
scas
pop
and
aam
pop
mov
stc
fsubrp
cmpl
xchg
inc
mov
out
inc
movsb
out
jo
icebp
sbb
movsb
loop
jecxz
xor
xchg
xchg
out
rolb
xor
scas
xorb
lcall
adc
mov
mov
je
push
sbb
pusha
add
pop
adc
sti
sbb
nop
fwait
cmpsb
cmp
sub
fstl
in
push
stc
mov
dec
in
dec
cmp
stos
ss
mov
mov
fnstenv
sub
and
rorl
mov
ljmp
repnz
push
push
add
xchg
jb
shll
fidivrs
jg
out
jb
aam
jno
mov
mov
sti
lret
repz
mov
push
les
out
out
pushf
cmp
test
ret
xlat
xchg
cld
mov
mov
cld
xor
aam
inc
xlat
push
mov
ret
negb
mov
outsl
dec
jae
hlt
insl
fnstsw
loope
push
mov
mov
sub
mov
popf
xor
ljmp
pop
mov
ja
fimull
stos
xchg
mov
mov
lcall
push
inc
ret
cmc
aad
shlb
dec
jg
aaa
call
push
jno
push
in
lret
mov
cmp
mov
test
sub
jnp
mov
jle
inc
and
je
mov
xchg
xchg
mov
jg
xchg
gs
fisttpl
movsb
mov
pop
and
jg,pn
jl
push
shlb
inc
in
pop
jmp
stc
and
fsubrl
pop
out
into
or
sbb
adc
mov
lea
sahf
and
gs
lock
sbb
xor
mov
mov
ret
push
pop
lds
sti
add
sbb
push
mov
sti
hlt
mov
pop
das
rcrl
mov
iret
pop
sti
std
adc
sub
cmp
dec
push
mov
push
cmpb
sahf
xchg
inc
movsl
sbb
fiadds
adcb
add
or
or
and
adc
xor
hlt
mov
into
cmp
sbb
movsl
lock
negl
jp
jge
aaa
dec
xor
or
flds
jno
xchg
jp
push
sub
and
movsl
pop
sbbl
jecxz
jle
cmp
inc
mov
add
push
cld
aam
push
xchg
lods
sbb
je
cmpsl
add
pushf
hlt
rol
nop
lahf
xchg
mov
inc
std
scas
push
aam
push
lret
lahf
push
out
mov
fldt
or
add
int
lahf
aaa
js
andb
jbe
ja
mov
iret
imul
cwtl
arpl
and
lock
out
notl
xor
pushf
mov
xchg
clc
dec
pop
jmp
dec
rorl
jae
fwait
test
mov
inc
ret
aas
es
sbb
jl
lock
adc
scas
adc
aad
mov
push
and
jle
popf
jno
mov
add
inc
cmpsl
test
xchg
fs
dec
nop
mov
dec
ret
xor
sub
adc
jbe
xchg
leave
dec
fstpl
mov
shlb
xorb
stos
lahf
mov
aaa
mov
add
in
enter
xchg
in
inc
into
cmp
sub
dec
xor
movsl
rcll
pop
mov
cmp
push
sub
sahf
cmp
jnp
pop
repnz
in
dec
inc
into
push
mov
nop
lahf
hlt
loop
mov
in
sbb
adc
lods
shrl
adc
lods
adc
enter
ds
mov
scas
stc
xchg
fbld
insl
dec
je
cs
ret
mov
jmp
stc
ret
icebp
xchg
nop
data16
xchg
rorb
sahf
or
lcall
push
lret
push
pop
push
stos
inc
mov
testl
cmp
outsb
fs
push
pop
sahf
and
fbstp
dec
nop
cld
pop
dec
push
into
ja
ud1
fsubs
push
xor
xchg
sbb
jmp
leave
mov
pop
or
test
cmp
or
jl
xor
cmp
or
sti
mov
mov
inc
inc
sbb
dec
ds
xchg
fstpl
pop
cmp
repnz
mov
add
ret
add
push
ret
arpl
push
nop
sub
fistps
sub
mov
push
fs
xchg
push
sbb
add
ja
in
xchg
test
adc
out
pop
mov
shlb
mov
mov
lcall
xor
int3
lods
xor
enter
xchg
push
or
push
sub
mov
push
sub
jmp
inc
aam
cld
mov
in
in
jbe
xor
enter
jno
adc
int
push
adc
js
mov
sub
xchg
jp
cmp
sub
or
jecxz
mov
stc
cmpsl
adc
fidivl
cmp
and
mov
xor
inc
mov
pop
out
xchg
cmpl
or
repz
mov
adc
jb,pt
faddl
out
scas
jno
and
in
in
jp
out
lea
mov
in
push
or
daa
das
clc
hlt
decl
out
out
hlt
cmpsb
mov
inc
fisubrl
orl
mov
and
adc
mov
mov
cld
dec
and
xor
cli
les
inc
inc
in
mov
test
lret
std
jecxz
test
inc
mov
aam
gs
xchg
pop
lods
test
xor
pop
rcll
js
cld
mov
xor
push
push
loope
pushf
or
or
movsb
insb
jmp
push
subb
test
cmp
xchg
and
mov
sbb
ljmp
sub
or
fwait
outsb
add
mov
and
fisubs
loopne
xchg
pop
pop
sub
aaa
xor
jecxz
pop
les
cs
or
aad
lcall
packsswb
and
in
seto
xchg
push
and
mov
inc
jge
mov
movsb
inc
or
popf
fildl
insl
lods
insl
jae
leave
outsb
dec
dec
test
mov
cltd
xlat
aam
dec
pop
or
insb
xchg
pop
lods
xchg
jg
shll
pop
push
or
mov
adc
adc
faddl
outsb
inc
outsl
sbb
gs
mov
ja
scas
lahf
fldt
sahf
ljmp
jge
scas
or
jb
mov
fdivrp
jbe
inc
inc
scas
lret
repnz
lods
jb
cli
xor
push
jge
icebp
rcr
ss
mov
adc
sub
bound
pusha
add
mov
popf
in
dec
jmp
lds
fisttpll
shrb
add
jae
mov
adc
pop
call
call
sbb
sub
icebp
and
push
jecxz,pt
out
xchg
dec
popa
inc
mov
daa
pop
ficoms
push
nop
push
pop
pop
or
sahf
mov
outsb
lock
jbe
lret
mov
xor
or
loop
test
sub
push
adc
ja
cs
jne
xchg
pop
xchg
add
mov
xlat
pop
or
xor
or
adc
xor
xchg
das
cmp
int
jl
pop
pop
fists
add
inc
int
or
lcall
and
in
mov
and
pushf
fdivrp
sbb
pop
ficoms
in
fidivrs
popa
push
ret
and
xchg
sbb
pop
jnp
into
xchg
pop
test
clc
sahf
xor
jbe
mov
in
fnsave
xor
push
std
adc
aam
mov
shl
addb
cli
adc
or
mov
dec
mov
xor
xor
push
sbb
cmp
mov
cmp
mov
lea
xchg
sbb
or
push
sub
pop
test
mov
inc
fildll
mov
adc
mov
xchg
cmp
cmc
loopne
es
imul
mov
jp
add
pop
mov
leave
pop
das
mov
pusha
js
clc
in
ja
push
xchg
aad
mov
push
repz
mov
pop
ret
lods
mov
jnp
daa
and
loop
stos
test
and
pushf
jmp
aas
loope
mov
std
ds
je
les
shrl
xor
popf
cltd
ljmp
inc
sub
add
scas
fstpl
push
scas
mov
jge
fdivs
lea
cmpsl
clc
inc
jge
dec
lahf
rorb
mov
shl
sbb
je
push
icebp
jp
and
sub
fildl
dec
je
das
in
out
jp
cmp
cmpsl
fidivrs
clc
fsubrl
icebp
int3
pop
mov
gs
dec
pop
fidivl
xchg
inc
mov
stc
stc
inc
mov
mov
mov
and
scas
sbb
loopne
mov
jmp
out
jp
or
xor
sti
dec
pop
add
inc
fiadds
fidivrl
test
jle
test
loop
xorb
or
lds
xlat
adc
add
push
jg
cmpsl
adc
aaa
hlt
cmp
rol
repz
jmp
push
lock
dec
mov
mov
icebp
rcll
mov
imul
gs
dec
adc
les
sbb
jo
lea
mov
lock
leave
mov
push
and
mov
pop
or
pop
dec
mov
mov
mov
lods
fwait
clc
cltd
xchg
fidivrs
test
or
mov
dec
cmp
ss
add
inc
aaa
push
loop
push
je
sahf
mov
frstor
jo
jns
imul
mov
add
or
jo
clc
xlat
adc
pop
cs
dec
mov
xchg
enter
into
pop
mov
minps
sbb
leave
mov
daa
inc
or
sub
enter
xor
sahf
punpckhbw
data16
inc
push
sbb
faddl
leave
arpl
xor
addr16
lods
nop
mov
pop
xchg
push
pop
mov
and
xchg
cwtl
rcll
out
jbe
xchg
push
dec
cltd
scas
shr
mov
push
pop
dec
pushf
and
out
pop
or
and
push
pop
push
mov
pop
out
add
insl
pop
or
in
push
cmp
adc
xchg
sub
cmp
hlt
push
push
fwait
les
call
les
dec
aad
mov
push
loope
bound
lret
cld
fldcw
fwait
movsb
xor
jmp
aad
mov
dec
xchg
push
jp
addl
add
cmp
xor
out
scas
mov
fcmovbe
mov
rcll
divl
sub
mov
push
negl
jno
dec
and
andl
in
sub
cli
js
mov
xor
or
lahf
mov
repnz
inc
add
fiaddl
jmp
or
dec
jae
xorl
lock
scas
test
add
pop
shl
icebp
mov
loop
mov
test
xchg
repz
std
xchg
mov
jmp
jecxz
and
dec
cmp
mov
jg
clc
inc
sub
hlt
enter
clc
dec
inc
sub
into
leave
cmp
mov
out
lods
push
insl
arpl
lods
lret
and
inc
push
in
nop
ss
out
ficompl
shr
dec
testb
xchg
rolb
aaa
pop
dec
sub
and
inc
and
push
pop
jmp
mov
ficoml
roll
popf
aas
lods
mov
imul
and
xor
and
test
mov
shl
mov
test
inc
rclb
sbb
xchg
cmp
test
pop
mov
and
mov
pop
mov
repz
popa
lock
xchg
cmp
ja
push
int3
push
addr16
outsb
jo
neg
popa
mov
movsl
hlt
fmull
sbb
stc
lds
cltd
outsl
pop
xor
mov
inc
xchg
orb
dec
cmp
ret
pop
mov
sub
and
not
sub
nop
sbb
aaa
xchg
and
sbb
cmpsl
and
sarb
repnz
cmpsl
cmpl
popf
push
leave
xchg
and
inc
testl
divl
loope
jnp
adc
push
xchg
jl
jp
fcomps
sub
jecxz
out
daa
ret
lret
cli
push
movsl
xor
dec
pop
call
add
iret
add
je
sbb
scas
add
pop
test
push
dec
sub
and
xchg
cld
daa
lods
mov
rcrl
push
mov
popf
movsl
mov
popa
lcall
inc
inc
cmp
and
mov
mov
dec
pusha
push
jo
or
mov
jmp
sbb
and
out
or
dec
jge
xorb
and
and
lea
mov
xchg
push
fidivrs
outsb
cwtl
repz
cmpsb
mov
mov
mull
push
or
push
sub
add
cmp
mov
push
popf
jnp
lds
mov
stos
push
mov
push
sbb
outsl
push
shll
mov
cmpb
enter
repnz
mov
adc
cmp
jae
lds
adc
adc
xor
in
js
mov
adc
push
mov
dec
in
push
lahf
imul
in
push
push
jp
push
ja
loop
mov
add
pusha
lds
in
inc
or
lods
lahf
pushf
xchg
pop
out
cmpsl
mov
mov
mov
and
sbb
test
test
mov
repnz
imul
push
xor
lods
sahf
data16
loop
mov
sbb
pop
adc
adc
stos
cmp
sub
xchg
and
addl
and
adc
xchg
or
pop
out
mov
jge
push
cmp
add
mov
push
or
push
mov
and
sbbb
mov
lods
mov
mov
push
dec
rorl
mov
in
insl
imul
xor
mov
and
cmpsl
call
int
lods
mov
fadd
xor
push
jo
mov
push
mov
fs
repnz
mov
cmp
ljmp
ficoms
cli
mov
mov
outsl
mov
mov
inc
adc
imul
sbb
lret
les
mov
mov
clc
push
icebp
daa
mov
push
jmp
lcall
pop
addr16
rorl
stos
xor
fcompl
inc
and
adc
push
dec
fisttpl
fiadds
push
and
pop
es
or
test
in
jmp
ret
ja
outsl
sub
fld
pop
ss
jno
mov
fs
add
dec
sbbl
vcmpsd
mov
ret
fildl
mov
add
dec
jecxz,pn
sbb
pop
pop
push
daa
mov
lahf
sub
stos
mov
mov
dec
jno
addb
stos
lock
in
ds
fdivs
rclb
sarl
push
cmc
popf
mov
jp
cld
lcall
ss
stc
inc
aad
incb
shl
sar
xor
aaa
je
mov
lcall
stc
ret
xchg
and
ret
jmp
adcb
sbb
repnz
rclb
inc
or
push
nop
fimuls
jle
cmp
add
shrl
pushf
ss
adc
xchg
push
inc
repnz
xor
xchg
inc
test
test
xor
imul
dec
out
sub
inc
orb
inc
inc
mov
orb
rclb
stos
add
push
or
popf
mov
xchg
iret
clc
mov
lock
lea
xor
push
shrl
pop
xchg
orb
aam
xchg
jg
shlb
mov
jnp
and
sub
mov
xchg
lcall
lea
cmp
insb
loop
dec
mov
in
push
push
sti
aaa
mov
sub
jl
jb
and
xchg
adc
je
cltd
stc
icebp
inc
push
enter
or
int
and
mov
fs
repnz
loope
dec
scas
mov
call
loope
insb
fs
repz
nop
xchg
out
adc
clc
push
or
cmc
js
loopne
fwait
dec
mov
hlt
and
test
mov
jnp
pop
cmp
pop
sarl
push
es
int3
and
scas
mov
dec
rorl
js
lret
xor
lds
cli
addr16
lods
das
fildl
or
xor
cmpsb
xchg
rclb
int
xor
mov
call
sbb
imul
mov
inc
adc
or
push
inc
lret
pop
jb
std
xor
inc
cmp
repnz
aam
popf
sub
fsubp
jo
or
ret
sub
jp
add
mov
jle
pop
sub
add
mov
orb
cmc
iret
push
pop
inc
insl
pusha
dec
mov
mov
inc
and
fbld
cmp
and
dec
mov
push
jecxz
adc
inc
mov
ljmp
into
loope
test
push
icebp
fldt
jne
jg
push
jae
pop
ja
sbb
cs
dec
lahf
push
out
jl
bound
fnop
jp
leave
and
jbe
popf
xor
add
es
pop
xchg
lcall
mov
rol
subl
std
sbb
jns
pushf
mov
adc
cmp
xlat
inc
fsts
add
xlat
mov
mov
jmp
cmp
mov
dec
inc
fldcw
lods
sti
dec
test
sbb
out
js
clc
lcall
in
repnz
fimuls
push
xchg
addb
repz
xchg
push
mov
push
inc
mov
in
mov
add
les
push
test
push
sub
cld
cmp
fwait
and
aad
mov
std
cmp
pop
cmp
int3
lahf
jne
js
push
jle
and
frstpm(287
outsl
sarl
jb
jg
or
xor
es
jecxz
add
iret
xchg
pop
insb
cmp
lods
cltd
lcall
outsb
mov
sub
lods
inc
dec
add
pop
popf
pop
rorb
pop
inc
mov
cwtl
adc
pop
push
mov
mov
sub
cmp
push
inc
scas
mov
mov
pop
hlt
or
xchg
sbb
adc
mov
lock
mov
fcoml
sub
ret
inc
inc
sbb
pop
lea
or
sub
cmp
ret
bound
push
rol
cmp
imul
mov
sbb
cmp
xchg
or
lret
jle
sub
outsl
mov
mov
dec
loop
out
or
push
in
adc
push
adc
xchg
lahf
sub
fldenv
pop
jp
mov
mov
inc
out
ja
test
jnp
cli
and
fistpl
fdivr
xor
mov
sub
inc
jmp
pop
repnz
xchg
std
add
stc
test
sahf
xchg
test
test
jl
xor
lea
xor
or
or
das
in
xor
mov
add
pop
inc
mov
movsl
mov
cli
rcr
push
and
sbb
dec
jbe
dec
icebp
jl
sbb
leave
fistl
test
adcb
outsl
pop
lods
sub
pop
movsl
adc
inc
xor
cwtl
cmpsb
cs
adc
sbb
dec
inc
test
loop
andb
pop
xchg
push
jne
mov
jno
jne
sbb
hlt
ds
ret
aad
enter
xchg
adc
repz
cltd
mov
call
mov
vcomisd
cmp
jb
jno
inc
cmp
dec
mov
cld
pusha
pop
dec
dec
ret
push
push
in
lret
loop
cmpb
mov
push
add
sahf
sbb
aas
in
dec
clc
lcall
fwait
jbe
stc
add
push
daa
xor
sub
or
and
movsb
pop
jbe
test
je
push
movsl
stos
fistpl
shl
in
aam
jae
les
mov
push
or
jns
idivl
popa
cwtl
jl
mov
dec
inc
addl
mov
xchg
pop
mov
mov
cmp
clc
test
push
lock
sbb
jle
or
lret
pop
push
pop
ds
and
or
xor
push
mov
push
sub
add
das
fwait
inc
sbb
and
xchg
mov
mov
test
lret
lcall
fisubrl
scas
jle
mov
sub
mov
adc
aaa
cmp
into
adc
sbb
jg
mov
in
xor
aad
push
rcll
stos
test
outsb
and
pop
and
gs
pusha
mov
fisttps
mov
sti
les
and
jecxz
dec
xchg
js
shlb
in
movsl
shll
imul
xor
dec
ret
sbb
aas
dec
xchg
push
gs
pop
mov
push
fnstsw
incb
mov
pop
loope
lret
dec
nop
addl
popf
push
das
push
cmp
xchg
icebp
sti
ss
mov
pushf
cltd
mov
xlat
jmp
dec
shlb
add
sbb
pusha
or
lea
iret
test
aaa
mov
ds
data16
incb
dec
loope
sbb
xchg
mov
push
mov
in
jno
sub
cs
pop
push
add
ljmp
xchg
incl
sbb
jb
hlt
imul
mov
jno
lods
test
and
lods
push
inc
cmp
scas
in
aam
lahf
cmp
mov
push
jb
xchg
pushf
push
jns
adc
add
mov
mov
pop
inc
add
xor
or
mov
test
dec
lods
orl
sbb
aaa
mov
stos
inc
les
adc
xor
fs
adcl
ficomps
and
pop
sti
push
rolb
mov
inc
and
lock
or
xchg
inc
inc
push
add
test
cs
cmp
rcll
test
push
mov
stos
dec
in
mov
inc
movsl
orb
shrl
pop
pop
and
fnstenv
cmp
neg
popf
cmp
sbb
cwtl
ficoml
leave
mov
fwait
cmp
push
mov
in
out
frstor
std
pushf
das
xlat
insb
loopne
xor
dec
out
jns
mov
push
sbb
xchg
jno
pop
push
pop
cmp
and
xchg
inc
addl
add
cmp
and
in
cltd
ss
subb
sbb
mov
xchg
inc
shrl
sub
shll
int3
cmp
xchg
jmp
mov
cld
adc
ja
sbbb
fisubl
scas
fisubrl
movsb
ror
outsl
xchg
mov
jnp
icebp
xchg
inc
lods
and
test
ds
adc
xlat
scas
movsl
gs
and
push
mov
shlb
xchg
xlat
push
xlat
pop
sub
inc
dec
mov
push
push
cmp
xor
rclb
sbb
outsl
dec
in
lahf
pop
push
jecxz
inc
sbb
jp
out
std
imul
mov
push
mov
push
mov
or
or
int
cmp
int
xlat
cmc
jp
cli
iret
and
addb
into
push
and
lods
dec
ljmp
mov
dec
cmpl
roll
aam
ljmp
fxch
xor
clc
ret
mov
lret
mov
test
pop
jbe
xchg
mov
xchg
push
sahf
xchg
loop
out
jecxz
repz
pop
and
cli
jo
jle
ss
add
jo
cmpsl
shlb
lods
mov
mov
xor
lock
mov
lds
fidivl
cmpsb
mov
dec
popf
xchg
xchg
inc
or
and
pop
daa
popl
adc
call
inc
or
cmpsl
push
rorb
jl
pop
int
mov
lock
push
mov
adc
push
lds
mov
js
sbb
sbb
and
sahf
ret
inc
lcall
fidivrs
add
xchg
sbb
into
lcall
xchg
pop
addb
sbb
cmp
or
mov
dec
mov
movsb
mov
cmp
pop
and
scas
lahf
ret
mov
hlt
sbb
add
aam
mov
sub
and
cli
insl
roll
push
pop
lret
xchg
jecxz
push
jo
cltd
adc
dec
pushf
inc
mov
scas
rcll
fisubs
mov
sub
test
mov
mov
outsl
sub
mov
dec
lret
test
or
int
dec
sbb
insb
out
hlt
pop
ret
call
test
hlt
mov
sbb
jne
pop
jae
inc
jbe
jo
dec
cmp
testl
addr16
jmp
mov
and
lods
int
insl
aaa
leave
addl
or
jae
cmpsl
pop
sahf
gs
mov
and
sbb
data16
mov
ret
pop
mov
cltd
mov
and
sbb
adc
ret
sub
push
xchg
imul
mov
jne
fstl
jg
leave
out
fld
filds
jo
mov
out
xor
mov
jnp
sbb
mov
in
or
leave
ret
inc
cltd
jle
notb
xor
aam
das
lds
pop
sar
push
sti
lea
test
xchg
fs
sbb
pop
lret
inc
ficoml
ds
xor
pop
mov
sbb
sub
daa
shlb
cld
hlt
mov
inc
stc
sub
fs
je
jp
test
add
dec
or
add
insl
jb
das
addr16
fmul
sbb
scas
ds
aam
inc
into
mov
in
dec
dec
add
das
jns
pop
dec
shll
mov
push
inc
movsb
push
jg
sbb
xlat
jge
daa
dec
mov
add
add
leave
stos
and
adc
cmpsb
jle
aaa
jg
ret
stos
fwait
sub
push
cmpsl
andl
push
pusha
fs
rcl
dec
or
xchg
insb
imul
lret
std
pop
fidivrl
dec
iret
sub
shrl
mov
icebp
mov
dec
leave
cmp
pop
sub
shrb
adc
mov
rcll
mov
fldenv
add
and
cs
out
cmp
sbb
fcmovnb
shl
pop
iret
stc
out
push
xor
mov
xchg
push
pop
adc
or
pop
dec
and
mov
cmp
lea
les
sub
jnp
sub
repnz
insb
xchg
sub
dec
ret
push
sbb
push
sub
mov
fistps
shlb
scas
daa
mov
adc
mov
cmp
jne
insl
ret
imul
call
xchg
dec
inc
fwait
mov
sti
inc
loop
mov
xor
or
popf
lret
orb
inc
stc
out
fsubr
lret
lea
daa
pop
inc
popa
andl
rolb
cmpsb
mov
ret
scas
and
shlb
push
sbbb
movhps
ja
shl
dec
and
daa
inc
ss
xor
sub
bound
push
hlt
sbbl
adc
mov
and
ret
divl
test
lret
fnstenv
lret
cmpsb
xchg
add
dec
rcll
mov
cmpsb
mov
bound
mov
mov
adc
fs
pop
xchg
faddp
xchg
jne
je
jmp
stc
pop
in
add
add
push
out
mov
outsl
mov
lret
add
xchg
cwtl
rclb
xchg
sub
test
int3
mov
xchg
push
mov
jo
mov
sbb
xor
mov
jmp
and
lods
mov
fimull
test
push
fsts
es
pop
push
xlat
inc
mov
enter
addl
iret
movsb
les
ja
add
mov
xchg
es
cs
pop
pushl
mov
dec
xor
xlat
dec
mov
cmp
jecxz
cld
push
sub
fwait
mov
push
ret
xchg
test
mov
push
dec
adc
jge
xchg
cmp
outsb
or
aas
mov
hlt
in
stos
xor
cltd
sub
sti
icebp
jl
jae
stc
repz
aaa
adc
sahf
add
pop
aad
jbe
fwait
push
iret
and
mov
int3
sbb
push
push
push
leave
push
sti
stos
jge
mov
lahf
stc
fimull
cmp
in
rcl
mov
mov
es
sbb
aad
or
mov
jnp
lods
mov
cmp
or
mov
cltd
mov
adc
push
je
icebp
xchg
xchg
enter
add
int
pop
idivl
mov
ss
outsb
daa
mov
xor
sub
out
mov
cmpb
loopne
in
dec
xlat
mov
orb
mov
and
call
insl
lods
lods
xor
xchg
nop
ret
mov
lods
mov
adc
clc
icebp
cmp
jp
imul
lcall
push
sub
les
cld
fwait
or
enter
inc
inc
xlat
jmp
push
inc
mov
enter
adc
pushf
hlt
shl
push
and
jne
cmpsl
ret
insb
sub
lock
lods
lea
pop
out
pop
scas
aas
aaa
ja
mov
xchg
and
lods
mov
jns
aam
popa
cmpb
repnz
or
push
cld
les
lret
xchg
cmpsl
or
dec
push
push
cmp
addb
inc
push
out
nop
inc
aad
sbb
loope
pop
ds
or
jle
push
xor
test
lods
leave
or
popf
add
pop
roll
push
jmp
imul
insb
jae
lret
aad
adc
mov
pop
scas
xchg
mov
adcl
dec
push
mov
lret
jne
sub
aad
mov
push
push
insl
leave
movsl
imul
lahf
jl
fldl
bound
add
adcb
xchg
push
or
ljmp
jl
mov
adc
jae
xlat
fdivl
dec
bound
rolb
mov
inc
ficompl
mov
js
xchg
lcall
sbb
cmpsb
cltd
jmp
cli
xchg
aam
jae
lods
ds
bound
mov
cmp
aaa
clc
push
imul
aaa
and
sbb
jbe
cs
cmc
mov
sahf
pop
and
imul
pop
sub
cmp
push
pop
in
loop
idivb
lds
je
dec
into
add
inc
data16
test
dec
xchg
mov
repz
popa
arpl
cmp
fcoml
or
jmp
xchg
fcoml
dec
xor
jo
cs
iret
sub
mov
fisttpl
gs
mov
rcrb
mov
xor
ret
mov
mov
out
jg
xor
insb
test
pop
jo
test
ja
mov
add
xor
pop
push
push
adc
cmp
sub
or
xchg
adc
pop
ret
out
or
clc
pushf
add
dec
cmpb
sbb
pop
loope
jae
data16
pusha
roll
jo
jl
mull
xlat
push
sbb
outsl
sahf
pop
fcomp
inc
push
lods
decb
cwtl
leave
out
mov
sbb
pop
add
sti
xlat
mov
out
or
ret
fimuls
cmc
mov
in
cmp
call
xchg
stos
sti
repz
test
cli
data16
lds
mov
addr16
add
sub
lods
jno
pop
stos
jmp
lret
das
bnd
rol
dec
leave
sbb
jb
sub
pop
movnti
cltd
aam
mov
mov
xchg
loope
out
pop
movb
hlt
or
push
mov
inc
in
or
and
sub
jne
or
sbb
fistpl
mov
les
mov
mov
clc
or
xchg
cmp
sbb
scas
outsl
daa
sub
inc
mov
leave
rcrl
inc
or
dec
sub
add
xor
xchg
mov
popa
dec
std
dec
mov
lods
lcall
inc
stos
sub
mov
in
push
xchg
and
add
testl
js
mov
or
xchg
mov
dec
jbe
pop
inc
mov
xchg
pop
push
fbld
sub
dec
xor
lds
push
subb
icebp
cwtl
mov
jge
hlt
stc
lahf
idiv
lock
sub
sub
mov
das
cld
or
orl
in
sub
jae
sbb
inc
dec
sbb
add
sub
and
imul
or
fisttps
test
mov
sub
pusha
xor
jp
scas
dec
repz
dec
xchg
mov
imul
andl
push
loop
inc
repnz
fistps
mov
imul
lds
or
mov
jge
or
pop
scas
xchg
push
out
push
or
data16
pop
push
popf
or
clc
adc
test
dec
mov
push
jge
iret
pop
je
or
in
sti
call
imul
stos
sub
xchg
lret
loopne
add
std
pop
mov
ljmp
lret
movhps
ds
test
loopne
call
add
sub
mov
cmpsl
xchg
dec
xor
inc
xchg
pop
pusha
push
dec
add
dec
mov
pop
int
sub
stos
sarl
inc
cmp
out
clc
lock
jns
shrb
inc
stos
sbb
hlt
scas
int3
jmp
lods
shll
inc
cmp
and
repnz
std
xchg
in
xchg
push
inc
mov
xchg
inc
les
call
mov
fidivrs
lods
adc
push
pushf
pushf
mov
loope
sahf
cmp
jb
lret
jb
or
xor
ja
jno
mov
adc
sbb
sub
add
inc
outsl
inc
rclb
mov
cmpsb
in
ss
add
or
push
lock
xor
in
sbb
je
add
jle
pop
in
mov
insb
movb
inc
call
inc
mov
jo
mov
cld
jae
and
lock
and
sub
lahf
sti
inc
clc
out
adc
scas
add
xor
fwait
aam
mov
sar
loopne
xor
icebp
je
sbb
sbb
inc
sub
or
orl
add
outsb
mov
cmpb
ja
fmuls
sahf
aam
ljmp
jl
test
push
fstpt
lods
cmc
jmp
out
pop
dec
mov
faddl
aas
je
sbb
in
lret
icebp
mov
xchg
fwait
xchg
nop
cmp
cmp
pusha
shll
adc
popf
lock
jge
mov
loop
rep
stc
push
lea
scas
jb
insb
jns
cmp
mov
clc
and
pop
sti
cli
out
mov
movsl
xchg
std
sti
ds
call
add
sub
mov
icebp
add
shrl
std
les
or
popa
cmpsb
inc
jl
repz
iret
pop
xor
jg
pop
loop
repnz
pushl
mov
roll
push
adc
rorl
adc
jnp
jo
adc
movsb
adc
mov
xor
xchg
imul
mov
sbb
and
mov
sub
popf
push
roll
arpl
pushf
inc
dec
aaa
icebp
addr16
iret
inc
mov
fs
jb
jb
dec
adc
fsubrs
xor
cltd
and
ftst
fcmovbe
xlat
testl
imul
data16
das
pop
ficompl
mov
add
jmp
loopne
mov
scas
mov
sarl
pop
imul
rolb
cmpsb
dec
mov
stos
loope
pop
fwait
mov
jg
xchg
cmp
fisttps
rcll
imul
fdivl
pop
sbb
sbb
scas
xchg
xor
inc
aad
jp
cmp
fsts
mov
mov
lea
out
ret
inc
xlat
xor
dec
adc
mov
imul
cmpsl
push
aad
and
pop
mov
jmp
pop
xchg
sub
imul
xor
out
mov
pop
or
shll
adc
cs
mov
nop
sbb
les
mov
js
daa
mov
mov
rcr
xchg
lea
jmp
or
sbb
leave
lahf
mov
mov
inc
and
or
andl
insb
out
push
nop
mov
dec
mov
clc
and
out
nop
arpl
pop
in
data16
cwtl
jle
mov
jno
pop
push
xchg
mov
add
mov
jne
test
xchg
aad
fcmovu
mov
add
inc
mov
sub
lods
jecxz
sbb
mov
mov
pop
mov
shrl
scas
sub
mov
loope
and
pop
xor
in
sbb
pop
adc
testl
stos
pop
mov
jo
ss
mov
pop
lods
dec
popf
lret
ljmp
adc
cmc
add
or
dec
add
cli
inc
cs
out
test
push
sbb
ret
sbb
mov
in
inc
mov
rcr
lock
jp
adcb
adcb
or
xor
test
sub
jno
nop
loope
fstps
push
inc
xchg
inc
shlb
es
or
dec
cwtl
mov
loopne,pn
bound
jnp
sahf
mov
ret
fcoml
rep
cmpsl
sbb
add
lea
inc
inc
lcall
jbe
test
or
xor
ds
adc
pop
test
dec
jmp
cmp
enter
cwtl
stc
mov
lret
pop
ds
or
jo
xor
mov
out
lahf
or
or
arpl
popa
loope
push
jo
testb
jp
and
les
xchg
movsl
rcr
ret
fstpl
inc
or
dec
pop
mov
mov
lret
insl
and
adc
scas
mov
imul
lds
insb
fldt
pop
imul
clc
push
aaa
mov
sub
xchg
cmp
mov
push
out
pop
mov
outsl
cmp
movsl
cli
cmp
ss
add
pop
aaa
cs
add
lds
sarl
mov
xor
mov
sbb
push
addr16
repnz
sub
mov
in
inc
and
sub
dec
add
shll
fsubl
mov
stos
mov
cmp
adc
in
js
inc
into
ret
xlat
xchg
adc
dec
filds
cmp
ja
sub
and
adc
xor
and
xchg
out
xchg
popf
jns
inc
mov
sahf
mov
mov
popa
in
insb
add
movsb
lods
in
test
pop
inc
mov
cmp
cwtl
aam
arpl
das
rol
inc
pop
jecxz
mov
sub
test
in
dec
sbb
pop
imul
stc
or
test
sbb
imul
pusha
jg
xchg
jecxz
mov
aas
sbb
fs
cwtl
repz
dec
push
push
mov
fistpl
dec
gs
sub
mov
push
mov
in
xchg
loopne
test
fdivl
addb
xor
push
xchg
cmp
fsub
out
inc
pop
rcll
fcompl
xchg
ret
inc
arpl
sbb
and
lcall
dec
adc
mov
dec
notl
in
cmp
popf
cmp
ror
mov
or
mov
test
and
shld
fldl
pop
jo
adc
cli
inc
aaa
pop
xchg
imul
jle
or
cld
cs
ror
and
xchg
out
push
loope
pop
jg
loopne
pop
add
daa
dec
xchg
dec
stc
movsl
jo
mov
and
mov
inc
lcall
orb
xor
fcoml
pop
lock
test
add
setnp
aas
mov
and
lea
stc
mov
ror
inc
cli
sahf
out
fcompl
jecxz
test
push
cld
scas
pop
insb
sbb
mov
mov
mov
mov
fucom
jbe
shl
andb
mov
test
int
push
lods
test
sub
ljmp
mov
or
loopne
lahf
xchg
inc
push
push
jecxz
inc
jg
xor
outsb
xor
and
jmp
and
cmp
pop
mov
mov
mov
sub
test
sahf
orl
and
and
or
sbb
add
dec
sti
sbb
xchg
pop
lds
outsb
dec
or
test
push
push
xchg
push
shll
pop
xchg
pop
cltd
dec
outsl
loopne
stos
fnstsw
add
roll
or
or
dec
ljmp
das
into
mov
nop
icebp
mov
pop
lret
jae
aas
adc
adc
push
inc
push
stos
test
jp
ljmp
ja
mov
sbb
cs
loopne
out
jnp
push
pop
das
mov
xchg
enter
xchg
push
icebp
arpl
pop
cmpsl
dec
push
fcmovbe
and
jne
adcb
push
mov
dec
add
in
shrb
mov
mov
mov
xchg
aaa
ret
aam
pushw
add
inc
lea
test
jle
mov
lods
jg
sbb
enter
imul
sbb
jmp
sbb
jo
cmp
push
inc
ficompl
adc
rolb
addb
sbb
lcall
in
pop
dec
push
and
fs
mov
lea
mov
cmp
mov
mov
lret
xorl
lret
push
test
fsubs
pop
ret
and
or
fistpll
cmpb
fstp
icebp
rol
sbb
daa
xchg
xchg
iret
push
sbb
insb
roll
adc
or
xor
push
fistl
jp
cs
mov
add
imul
out
mov
add
or
into
addr16
pop
lcall
andb
sarb
incl
mov
int
jl
repz
insb
mov
sahf
mov
shrb
inc
push
pop
jo
fwait
mov
mov
shll
jbe
sbb
subl
cmc
jno
pop
push
push
adc
mov
js
push
loopne
enter
xchg
pop
mov
jmp
loop
gs
lea
mov
in
cmp
sbb
pop
or
add
mov
mov
push
lods
pop
or
mov
seto
inc
dec
pop
filds
fsqrt
pop
dec
mov
jbe
mov
and
popa
jae
insl
pop
fsubl
cmpsb
push
ja
xor
pop
mov
add
pop
mov
mov
icebp
cmpsl
stos
mov
loop
or
aas
pop
dec
jmp
into
add
or
nop
sti
mov
cltd
mov
or
clc
out
mov
inc
xor
cmp
or
sti
cmpsl
or
jmp
dec
xor
dec
leave
fisubrs
xorb
dec
pop
enter
sub
imul
mov
jo
dec
cmp
imul
les
mov
or
addb
mov
int3
fisubrs
mov
cmp
movsb
cmpsb
mov
ret
mov
leave
shrl
in
xor
add
xchg
cli
jp
mov
sti
outsl
mov
rcr
fwait
or
xor
int
add
pop
cld
nop
sbb
or
sbb
pop
sub
cmpsl
xchg
iret
jmp
test
data16
aaa
cmp
mov
cld
pop
dec
push
mov
fsubs
push
and
ljmp
add
in
sub
sbbl
imul
jmp
insb
flds
sarb
gs
push
jnp
push
pop
inc
mov
popa
sbb
sbb
lret
addr16
xchg
decl
inc
xchg
pop
aaa
push
aas
mulb
pop
cli
fs
inc
mov
pop
test
inc
xor
or
push
std
into
fstl
inc
out
repnz
inc
or
daa
lods
int3
hlt
inc
fimuls
inc
pop
rorl
cmc
jecxz
shl
pop
jno
jle
pushf
push
push
rol
add
movsb
pop
jl
test
sub
rcr
ret
outsb
mov
cmp
scas
mov
call
movb
xlat
shll
enter
jo
cmp
add
push
out
xor
repnz
mov
aam
outsl
adc
ror
loop
hlt
cmp
pop
scas
mov
jge
out
xchg
aas
xchg
and
iret
pop
dec
pop
fs
subb
test
jmp
pop
xchg
ret
or
and
mov
sysret
cs
xlat
div
ret
inc
push
in
sarl
pop
sbb
lret
daa
lods
outsb
int
movsl
clc
mov
loop
ja
xor
push
icebp
jmp
notl
xor
ja
inc
ljmp
cmpb
sub
mov
xchg
adc
cmpsb
ret
subb
push
cli
in
call
inc
mov
sub
lea
pushf
test
icebp
adc
pop
nop
push
in
mov
pop
mov
enter
xor
sub
int
sub
jmp
adc
sub
int3
scas
scas
and
lret
cmp
cmp
fsubl
dec
cmpsb
test
icebp
movsl
pop
out
cmc
aaa
fsubrl
jge
cmp
adc
pcmpeqd
inc
cs
ret
inc
cmp
or
lock
insl
adc
ficompl
flds
les
or
push
jno
leave
addb
and
mov
movsl
mov
xor
xor
add
xchg
leave
pop
ret
pushf
cmpsb
or
dec
lock
leave
fsubs
adc
jns
addl
mov
or
loope
and
fcmovnu
dec
lret
int
sbb
pop
shll
add
xchg
lods
ret
sarb
inc
lret
add
xlat
adc
in
dec
push
and
imul
adc
fadds
cmp
or
movsl
push
sbb
xchg
nop
sub
lock
adc
mov
ss
in
filds
movsb
xchg
pop
jne
lods
ret
es
mov
pop
mov
repnz
push
aad
divl
out
in
movsl
icebp
mov
aam
int
imul
jne
dec
jb
gs
xlat
jecxz
sbb
sub
aaa
and
aaa
outsl
aam
add
mov
mov
jno
pusha
dec
in
gs
mov
xchg
sub
aaa
cmpsl
pop
pop
jo
jo
stos
fistpl
inc
cli
add
inc
sub
xorb
or
add
jne
add
clc
mov
xchg
je
xor
je
fisubrl
adc
inc
jbe
or
fcompl
rolb
out
jae
imul
sbb
mov
gs
lods
adc
mov
mov
xchg
in
movsb
leave
pop
jb
mov
clc
dec
push
mov
push
cmpsb
sbb
pop
ficompl
sbb
cmpsl
movsl
stos
faddl
les
xchg
mov
mov
push
mov
daa
mov
cli
nop
outsl
loope
adc
push
push
lcall
daa
push
xchg
ret
jo
stc
or
testb
cmpsb
fdivrs
mov
inc
add
pop
jns
or
cs
jns
push
cmp
push
xchg
bound
movb
jno
sub
push
nop
out
inc
addb
test
mov
xorl
pop
cli
ret
and
pop
ss
leave
push
mov
xchg
shl
inc
sbb
ja
sub
xchg
ds
lods
fimuls
outsl
xlat
or
in
hlt
lcall
cmp
imul
rcll
popa
push
dec
jns
cli
das
jl
mov
mov
dec
cwtl
shlb
scas
cmp
iret
push
push
pop
mov
movsl
test
sbb
insb
aad
aam
int3
or
scas
xchg
cs
std
dec
adc
mov
add
fsub
js
movsb
sbb
ss
adcl
rcll
xchg
dec
adc
xchg
push
or
inc
das
push
pop
add
mov
push
lret
pop
outsl
adc
mov
pop
imul
xchg
test
loope
mov
mov
sar
mov
out
test
sbb
lods
int
push
ret
hlt
ss
inc
push
jbe
and
xor
call
fimuls
inc
inc
sub
jmp
inc
jecxz
hlt
cli
jns
xchg
add
loope
pop
or
repz
pop
adc
mov
add
call
test
nop
push
dec
mov
or
pop
mov
or
outsb
pushf
xrelease
test
sbb
lahf
xchg
mov
nop
inc
inc
mov
and
test
or
mov
test
ret
lret
sarl
cmp
cmc
imul
xor
push
fdivl
pop
mov
in
cltd
add
ljmp
in
cli
push
repz
sub
pop
adc
push
lahf
ja
jge
jbe
repnz
dec
jl
cs
mov
aad
std
sub
rcll
push
lret
cmp
cwtl
mov
xchg
and
adc
sahf
cmp
jl
cld
mov
jg
test
xor
cmp
sbb
insb
xor
mov
data16
mov
xchg
push
mov
outsl
pushf
add
cmp
sbb
mul
rcrl
and
iret
pop
mov
imul
ja
cmc
addb
pop
jb
inc
xchg
cwtl
jl
rol
push
test
popa
xchg
sbb
pop
mov
adc
ljmp
in
outsl
mov
sarb
out
into
shlb
lret
cmp
pop
lret
xchg
pop
fcompl
lret
and
sub
add
adcw
push
outsb
call
mov
ds
andl
loop
mov
fwait
lret
das
push
cld
xor
jle
push
lods
sbb
into
inc
cli
add
mov
mov
movsl
test
fdivl
or
lret
mov
stos
push
cmc
mov
xchg
lock
inc
lods
addr16
jb
push
cs
repz
test
cs
mov
and
pop
scas
icebp
xchg
cmpsl
pusha
es
repnz
negl
ja
jnp
pop
cwtl
clc
inc
sub
adc
cmp
xor
lret
mov
fcoml
and
fiaddl
inc
mov
gs
mov
mov
xor
loop
sarl
mov
hlt
xor
arpl
loop
lods
mov
xor
and
imul
inc
insl
aas
xchg
jns
arpl
and
adc
call
lods
in
xchg
pop
xor
xor
or
and
call
xchg
lret
inc
mov
pop
call
pop
cmp
jne
ljmp
push
push
imul
cmp
mov
mov
inc
loop
xchg
mov
jbe
push
xchg
pop
sub
inc
adc
xor
push
filds
mov
xchg
sbb
js
out
stc
pushf
jg
in
adc
mov
jne
test
jne
jp
ret
cmpl
fdivs
jecxz
stos
shll
jno
incb
sahf
nop
push
sub
push
popa
ret
outsb
sbb
shll
ret
enter
sbb
mov
ja
adc
sub
fnsave
out
add
cwtl
push
sbb
test
jmp
lcall
mov
mov
cmpb
enter
sub
jno
push
aam
xchg
cmp
sub
inc
jae
dec
gs
xor
movsb
outsb
xor
call
add
dec
lock
jo
rcr
cld
mov
jmp
mov
and
pop
hlt
loope
test
clc
pop
dec
add
mov
andnps
inc
jmp
sarl
es
lds
inc
add
in
sub
inc
aas
sbb
dec
xchg
rcll
mov
decl
lds
or
dec
xlat
in
lret
out
xlat
lods
inc
pop
ret
stos
push
pop
jmp
jg
and
mov
mov
and
out
fucomi
sbb
jle
mov
mov
iret
pop
clc
test
bound
je
rorb
jmp
adcl
jne
xchg
xchg
add
inc
repz
mov
cltd
mov
js
fs
and
scas
push
dec
fs
out
xchg
adc
xlat
xchg
push
or
xchg
lcall
js
fbld
and
xor
adc
inc
sbb
and
test
fs
and
or
xchg
push
or
imul
inc
fadds
rcr
xorb
loop
or
clc
int3
loope
and
jecxz
add
test
ret
loope
pop
mulb
mov
test
add
std
mov
mov
mov
push
rcrl
and
rorb
jbe
cld
adc
dec
mov
daa
mov
lods
xor
mov
movsl
or
movl
cmpsl
into
stos
test
out
cld
pop
mov
xchg
rcrl
cmc
repnz
fbld
jecxz
mulb
cs
movsl
xchg
lret
dec
cmp
push
fnstenv
addr16
and
or
xchg
cmpsb
mov
add
xor
xchg
dec
movsb
mov
aas
cmp
mov
mov
and
push
pop
mov
jp
xor
in
or
insb
sbb
mov
pop
push
or
cmp
sbb
mov
stc
out
jmp
add
add
in
addl
outsl
pop
test
paddd
in
es
and
out
out
fisubs
xor
icebp
mov
aaa
xchg
pop
jb
pushf
jmp
cli
es
or
push
rcl
sbb
stos
push
push
fsubl
cmc
mov
mov
out
int3
rcl
ret
in
leave
add
add
repz
movsb
fcmovnb
sub
pop
aad
mov
push
lods
imul
jae
push
in
pushl
xor
test
loop
add
mov
int
jo
pop
jbe
xor
mov
subb
movsb
aad
sbb
mov
stc
repnz
fcmovnbe
movsb
daa
int3
inc
pop
lea
sub
lret
pop
adc
repz
mov
xor
push
mov
add
test
sub
dec
or
js
mov
dec
xchg
push
xor
dec
and
lods
xor
ds
jg
xchg
xchg
pop
test
dec
push
inc
add
xor
ja
mov
push
dec
or
sub
lret
push
jno
shlb
outsb
add
mov
scas
jle
stos
push
mov
pop
jp
fdivr
into
out
pop
in
es
js
pushf
mov
inc
cmpl
xchg
shrl
rorb
addr16
jecxz
jmp
lods
cmpsl
cwtl
out
das
add
cmc
inc
mov
xchg
xor
pushf
outsl
pop
addb
mov
adc
lcall
jns
movsb
push
and
xchg
repz
cmc
data16
shrl
movsb
hlt
sahf
xor
xor
aad
jmp
pop
sbb
shll
inc
push
shrl
add
out
scas
xor
inc
jg
mov
adc
les
add
in
and
cmp
cmovb
mov
int3
movsb
cmpb
xor
mov
jnp
jecxz
fnstsw
cli
loop
pop
mov
loop
out
mov
out
test
aas
lea
pop
add
pop
nop
fisttpll
das
xchg
push
repnz
pop
mov
add
aam
addb
addl
push
jne
jecxz
cmc
sub
adc
nop
add
lcall
jle
out
mov
lret
mov
sbb
add
inc
fprem1
movsb
mov
loope
pop
inc
sbb
testb
out
xor
inc
mov
inc
cmp
pusha
iret
dec
push
cmpsb
pop
rclb
ret
inc
xchg
sbb
jns
insl
fnsave
mov
or
mov
sub
jb
sbbl
test
dec
mov
fadd
mov
insb
fisubl
nop
pop
dec
or
stos
jo
dec
inc
test
mov
lea
mov
outsl
cld
repnz
mov
in
xchg
cmp
jnp
popa
imul
push
daa
sahf
inc
jmp
or
xor
ja,pt
daa
push
insl
xor
cli
fsts
aad
and
loope
mov
dec
les
nop
out
loopne
mov
and
push
adc
xchg
cmp
dec
push
mov
adcb
push
imul
inc
mov
in
pushf
and
xchg
cmp
fimull
andb
loop
mov
sarb
cld
add
stos
mov
pop
cs
std
call
dec
iret
adc
mov
xchg
jb
lret
cli
pop
cmpsl
or
pop
ret
pop
inc
xchg
inc
pop
aad
sub
jnp
and
mov
sub
sbb
icebp
push
inc
andl
mov
jb
dec
pop
push
mov
dec
aaa
fildl
mov
int
dec
cmp
sub
sbb
push
sbb
enter
lock
push
ret
aad
mov
movsb
or
sbb
in
sbb
jne
stc
adc
mov
mov
rcrl
adcl
adc
fcompl
pop
fidivs
call
xor
jmp
pop
mov
lcall
lcall
dec
out
inc
inc
enter
mov
iret
push
test
cmpsl
out
test
fs
daa
out
lret
cmp
mov
out
es
adc
sub
xchg
adc
xor
test
pop
hlt
add
fdivrs
push
push
sahf
xlat
push
mov
out
cwtl
imul
add
mov
cld
jae
lods
gs
or
pushl
pop
pop
and
outsl
jae
mov
subb
into
les
mov
adc
lock
cmpsl
repnz
ja
pusha
mov
fcmovnu
int3
iret
arpl
rclb
pusha
sbb
mov
jge
pushf
inc
cmp
inc
iret
mov
jecxz
out
dec
or
xor
clc
pop
mov
pop
repnz
xor
movsb
div
cli
dec
xchg
outsb
inc
out
stc
rol
or
mov
xchg
xchg
mov
stos
push
xchg
add
lds
pop
mov
aaa
push
scas
daa
or
pop
pop
dec
push
es
add
pop
cwtl
repz
inc
neg
jo
jecxz
addr16
loopne
test
inc
or
xchg
fmull
fwait
jmp
mov
push
std
cmp
mov
mov
fstl
cs
jle
stc
mov
jns
gs
cmp
adc
cmpsb
mov
imulb
out
gs
hlt
cmpsb
add
out
std
xor
imul
les
fstp
jmp
lahf
xor
movsb
pop
and
or
inc
insb
addl
fistps
fnsave
loope
into
mov
sbb
imul
das
aam
in
xadd
mov
daa
jne
fwait
xor
or
enter
aaa
push
stos
add
fmull
sbb
jne
mov
inc
push
jae
insl
in
jnp
inc
fwait
push
add
shrl
fcmovnb
testl
sub
add
aas
call
or
cmp
push
aas
adcb
rolb
push
mov
add
int
push
mov
ficompl
and
xor
inc
sub
sbb
mov
repz
sbb
or
popf
enter
and
arpl
in
test
pusha
jae
jge
xor
xorb
jge
push
and
add
mov
lret
add
inc
out
shlb
push
cmp
int3
lds
xor
or
sbbl
mov
cmp
mov
jp
popa
dec
bound
lods
mov
add
inc
cwtl
lcall
xchg
sbb
aad
sub
mov
out
aaa
jl
inc
rcll
mov
cmp
xor
sahf
repnz
lds
lcall
jp
scas
sti
jns
push
sub
je
call
xchg
dec
mov
mov
es
mov
mov
aad
and
cmp
mov
sar
sub
adc
out
sub
in
pop
push
xor
push
movsb
xor
push
scas
xchg
test
jo
jbe
lds
jl
adc
movsl
rcr
pop
and
nop
mov
rcl
mov
mov
cli
pusha
leave
push
aaa
sbb
cmc
shrl
stc
mov
lret
push
mov
std
filds
or
ds
dec
test
jae
jg
outsl
push
call
cwtl
loop
xchg
out
inc
repz
insb
jmp
push
out
mov
arpl
or
sbb
ss
repnz
adc
sbb
out
pop
adc
sbb
jle
pop
cltd
cmp
mov
sub
sub
sbb
or
pop
pop
lret
cld
sbb
shlb
inc
or
fstl
mov
add
or
mov
push
mov
out
sti
in
gs
sbb
out
or
sbb
nop
rcl
jmp
ja
mov
lock
int3
inc
addr16
dec
xor
fadds
fwait
pop
xor
or
push
shlb
ja
stc
addr16
push
mov
xor
sub
adc
shrl
pop
loop
std
xchg
test
fsubs
or
jns
mov
fsubrl
push
cld
push
insb
and
xlat
sbb
mov
mov
sbb
mov
out
inc
sti
jmp
icebp
mov
cld
stos
jmp
push
add
outsl
not
xorl
out
repz
push
pop
add
test
iret
fldt
in
std
inc
push
and
jno
xor
out
jge
jmp
scas
int
push
sub
sbb
bound
icebp
ds
jmp
sbb
dec
test
fadds
roll
das
outsl
lahf
xchg
out
or
sahf
mov
dec
divb
mov
stos
mov
fisubs
push
sahf
fs
jo
sbbl
cwtl
cmpsl
scas
aas
loopne
hlt
xchg
sbb
sbb
ja
lret
nop
xor
scas
fisttpl
int3
or
loopne
jae
sahf
nop
int
jnp
add
cmp
xlat
mov
mov
cmp
in
cmp
push
adcl
out
lods
jmp
add
popf
out
ficoms
pop
and
movsb
icebp
insl
xorb
mov
jbe
pop
not
or
xchg
push
adc
jecxz
push
sub
jecxz
add
cld
mov
xchg
mov
sub
stos
xlat
sub
sbb
sub
notl
push
sub
movsl
in
or
scas
std
lcall
adc
push
adcl
mov
add
pusha
dec
mov
xchg
pop
test
inc
into
decb
lock
or
cld
mov
mov
bound
mov
jecxz
xchg
imulb
fs
xchg
push
pop
lea
daa
mov
cmp
adc
aad
popa
je
and
adc
add
sub
mov
xor
sarb
rcr
lret
or
call
movsb
lcall
sbb
cmp
mov
mov
sbb
mov
xor
sub
arpl
push
mov
cltd
shll
add
add
xor
loopne
push
mov
cmp
jle
inc
out
mov
test
stos
inc
adc
sub
das
jle
iret
push
ret
push
adc
adc
adc
inc
xchg
add
out
popf
mov
lcall
sub
cltd
cmpsb
inc
cmp
in
mov
xor
imul
push
mov
and
pop
add
sub
ljmp
insl
jge
sbb
xchg
xchg
inc
rorl
jecxz
out
add
jge
aaa
clc
pop
sub
call
flds
out
rcrl
and
jno
sub
fildl
sbb
aam
xchg
jmp
sarl
lods
sub
mov
outsb
cs
out
fdivrl
call
lret
sarb
mov
fwait
test
sbb
cmpsb
leave
jbe
xor
push
rorl
pop
imul
pushf
wbinvd
mov
add
add
arpl
call
and
xchg
inc
movsb
xchg
lods
test
adc
xchg
movsl
mov
adc
jmp
push
lcall
imul
fcomp
mov
push
inc
adc
ss
and
cmpsb
loop
adc
xor
cmpsb
cmpsb
fidivs
pop
fisttpll
in
into
dec
repz
cmp
out
sahf
mov
cli
lods
sbb
nop
fidivs
mov
daa
add
out
xchg
inc
das
mov
xor
sbb
adc
addr16
and
int
popa
xor
xor
mov
and
aad
sar
into
fidivrl
adc
mov
sets
push
lds
movsb
push
fcomps
enterw
push
and
push
aam
insb
mov
sub
dec
mov
inc
sbb
push
aas
sahf
inc
sub
and
dec
aad
outsb
xchg
mov
mov
xchg
pop
sti
push
and
inc
xlat
mov
push
jae
mov
leave
mov
add
stos
add
mov
inc
es
testl
sub
jg
decl
test
sbb
mov
test
cmp
inc
cmpsl
sbb
insl
lods
mov
into
pop
inc
push
dec
xor
add
and
inc
sub
ret
mov
pop
in
int
sahf
lock
cs
dec
mov
cmp
sbb
inc
lcall
pop
mov
aam
adc
ss
pop
outsb
add
js
mov
ret
xchg
scas
cmc
sub
shrl
ss
xor
out
sbb
fstpt
adc
shlb
push
lcall
mov
push
fildll
jp
pusha
xchg
xchg
rcll
mull
add
repz
std
cmp
add
add
dec
loope
bound
daa
lods
push
cmp
movb
mov
xlat
xchg
bound
sub
call
jmp
out
addl
cmp
sub
fcompl
cmc
stos
sbb
out
push
enter
mov
shr
negb
pop
or
cmp
and
pop
shlb
dec
xor
add
xorl
mov
or
bound
ss
imul
bound
cmp
bound
lahf
pop
cmp
popl
mov
mov
test
rcl
push
mov
loop
leave
sub
pop
dec
cwtl
and
ret
test
mov
inc
popa
jle
fdivrl
push
cmovnp
push
sbb
jle
or
push
dec
xchg
xchg
imul
into
push
cmpsb
sbb
out
scas
cltd
and
lcall
movsb
std
xchg
fucomip
das
pushf
jecxz
mov
mov
icebp
fcoml
ja
push
mov
loop
add
std
js
stos
inc
sbb
pop
outsb
std
dec
mov
jl
jne
mov
fwait
inc
xchg
add
shlb
sbb
mov
les
sub
jp
and
cmp
xchg
les
sbb
push
pop
fistpll
loope
ret
jmp
scas
sbb
movsl
shl
icebp
ds
hlt
adc
mov
or
push
inc
cmp
jl
repz
data16
cmc
dec
fisubrs
repnz
mov
movsb
mov
in
xchg
pop
sbb
inc
push
frstor
repnz
push
cmpsl
int
xchg
dec
xchg
fst
js
inc
sti
xrelease
and
xchg
mov
adc
jle
add
stos
jne
push
mov
inc
push
and
add
call
mov
adc
sub
push
int3
nop
xchg
loope
insb
or
jb
xchg
mov
jb
outsl
add
daa
adc
and
jae
roll
xor
sbbb
sbb
movsl
imul
cwtl
in
cmpb
call
stos
push
jge
sub
stc
aam
jnp
aaa
inc
add
outsl
testb
movsl
aaa
popa
daa
push
mov
aas
loopne
notl
fistps
adc
push
xchg
loope
jbe
fstps
mov
sub
sbb
jno
lea
out
adcb
pop
sub
addr16
mov
rep
repz
jae
xlat
sub
push
xchg
mov
loope
add
sbb
mov
repnz
mov
pop
mov
or
xor
mov
movsl
shlb
pop
sarl
pusha
ds
test
jae
pop
repz
sti
dec
data16
push
pextrw
jg
pop
pop
sbb
insl
mov
mov
xor
cwtl
push
jo
stos
das
cli
pop
arpl
fisttpll
or
adcb
adc
icebp
push
jne
push
mov
pop
jns
or
addl
sbb
arpl
xchg
add
jnp
lret
adcl
dec
cmp
xchg
sub
popf
gs
nop
jg
jecxz
imul
dec
cmp
fucomi
pop
pop
xchg
push
xlat
cmp
ret
sbbl
pop
jl
cwtl
fisttpll
imul
push
in
fsts
xchg
lahf
mov
fiaddl
jnp
or
pop
xor
pop
jbe
pop
sbb
test
sub
test
inc
leave
mov
jge
in
jg
jge
lret
dec
repz
gs
dec
arpl
ret
mov
in
mov
popa
aas
lahf
push
rclb
cmpsb
push
addr16
dec
cmp
mov
xchg
mov
sti
sub
shrb
in
sbb
or
gs
aad
jle
jne
inc
mov
cmp
sub
dec
sub
xchg
jl
test
pop
sbb
add
mov
xchg
lock
in
lret
mov
sets
push
stos
jmp
mov
lds
idivb
xor
xchg
push
outsb
adc
jnp
mov
cmp
lock
adc
push
lds
daa
out
bnd
sbbl
mov
ds
mov
xchg
cs
sub
inc
xor
lea
xchg
sub
outsl
ss
arpl
in
pop
sbb
mov
sbb
jecxz
pusha
stos
leave
popf
sbb
push
es
mov
orb
lock
mov
fiadds
into
mov
xchg
xchg
and
paddq
sbb
scas
mov
xchg
add
fistl
push
jecxz
cli
xchg
or
rorl
gs
fs
dec
das
in
jge
push
sub
push
sbb
sbb
xchg
call
mov
lcall
ficoml
mov
lret
ret
in
lcall
ret
mov
push
lds
jp
cli
in
xlat
xor
sbb
in
mov
pop
sbb
out
ds
lret
out
push
mov
mov
xchg
push
mov
adc
fcompl
mov
mov
negl
or
scas
and
test
dec
or
lcall
ljmp
xor
jb
popa
outsl
mov
push
scas
sub
push
dec
orb
xchg
sub
sti
or
iret
in
in
add
adc
das
mov
sub
aas
fdivrs
pop
mov
push
pushf
dec
addr16
scas
jmp
cltd
int3
or
xor
lret
clc
aas
push
pop
xchg
lods
ret
mov
lods
mov
xor
push
test
xor
adc
cmp
mov
lock
xchg
push
adc
cltd
cld
mov
jbe
jmp
js
adc
lds
xor
xor
jae
icebp
push
adc
or
notl
jecxz
cmp
cmp
dec
inc
inc
movsb
cmp
or
fwait
xor
movsl
fldcw
jecxz
test
mov
fwait
nop
sahf
scas
jge
icebp
icebp
fildl
mov
sti
mov
lods
push
fsubrs
test
jle
jg
sbb
mov
mov
mov
sub
dec
jnp
dec
int3
pop
pop
movsl
xchg
dec
push
mov
subl
cmp
mov
sbb
repz
fcmovnb
loopne
pop
js
inc
mov
xchg
pop
outsl
js
roll
in
inc
mov
push
adc
jecxz
test
stos
adc
aam
cmc
popa
xchg
adc
lcall
loop
decb
xchg
push
in
sbb
push
mov
push
cld
test
sub
cltd
fdivs
cs
add
fdivrl
nop
je
lea
fisubrs
lea
sbb
inc
imul
xor
decb
enter
ficompl
inc
jle
iret
daa
loopne
out
fnstenv
cmc
pushf
hlt
push
lahf
cmp
xchg
imul
or
int
inc
jns
cmp
jae
je
gs
fbld
xchg
fwait
mov
inc
popa
xor
enter
sub
add
mov
jo
je
push
push
shlb
sub
inc
pop
fisttpll
addr16
stc
xor
icebp
addr16
add
mov
iret
fsubrs
shll
adc
shll
dec
jns
repz
lret
je
dec
icebp
scas
mov
fwait
loopne
dec
int3
stc
pop
mov
mov
mov
or
sbb
mov
imul
xchg
pop
mov
mov
ss
xchg
cmp
xchg
loop
mov
xor
xchg
push
jb
xchg
loop
loope
lea
int
movsl
out
insl
dec
ljmp
pop
add
subb
lods
lcall
mov
cmp
subl
cmp
cli
mov
push
xlat
xor
jl
outsb
cmc
scas
cmp
jns
mov
aas
int
mov
shlb
and
jg
inc
inc
je
fiaddl
dec
in
adcl
add
lds
xor
pop
xchg
fstpt
sub
push
jb
mov
xor
add
stc
iret
subb
jle
movsl
cmpsl
add
cli
mov
pop
in
pop
push
add
test
adc
nop
mov
bound
xchg
iret
jo
mov
mov
jno
inc
sub
sbb
in
push
je
push
add
out
test
push
jg
xchg
pop
or
inc
inc
cs
pop
dec
add
aas
ja
sti
push
pop
stc
repnz
leave
jnp
fnstsw
inc
lods
xlat
push
push
out
movsb
lcall
int3
addr16
pop
xchg
shlb
out
xor
ret
cmpsl
aaa
sbb
xor
dec
sahf
leave
pop
inc
and
inc
outsl
push
shrl
das
test
mov
std
jnp
dec
pop
roll
jle
pushf
mov
lods
enter
cmp
mov
enter
popf
push
pop
pop
or
push
lds
jae
les
fimuls
mov
lsl
xchg
imull
adc
stc
sbb
inc
jg
pop
mov
imul
leave
push
pop
repnz
dec
and
clc
out
call
push
mov
sbb
add
mov
mov
stc
jp,pt
outsb
stc
xchg
xchg
data16
jle
push
push
hlt
jnp
arpl
data16
xlat
jae
jae
mov
adc
xlat
out
in
pop
pop
and
xchg
dec
js
movl
and
pop
rorb
mov
jns
xorb
test
test
cld
cmp
hlt
mov
mull
popf
notl
repz
xchg
icebp
push
inc
dec
adcb
mov
inc
leave
fs
jo
aam
adc
mov
sbb
mov
test
aad
xor
push
sbb
push
notl
and
cmp
xor
stc
mov
loopne
push
adc
stc
scas
xor
push
aam
sub
add
shll
fcmovbe
clc
int3
xchg
sub
std
pop
add
mov
cmpsl
pop
insl
arpl
imul
mov
sbb
rcl
mov
sbb
mov
push
mov
dec
das
mov
xor
addb
lcall
pextrw
push
out
shll
mov
cmpsb
into
xchg
ficomps
mov
shll
test
cld
jmp
cs
add
push
fs
xor
jne
and
popf
jne
lods
push
jbe
push
inc
adc
mov
add
cmp
imul
std
push
lods
outsl
jmp
inc
aad
fisubl
sbb
les
hlt
fildll
mov
pop
sarb
test
add
xchg
add
xor
lret
pop
clc
ds
scas
pop
outsb
jge
outsb
mov
popa
xchg
or
mov
idivb
mov
imull
loopne
mov
test
shrl
mov
int
or
push
outsb
jle,pt
incb
testl
mov
xchg
sbb
xchg
out
jnp
jnp
loope
shr
subl
and
js
aaa
fwait
movsb
jl
mov
clc
outsl
cltd
jo
jns
push
lock
lret
fistpll
xchg
enter
rcrb
dec
lods
add
outsb
mov
psrlq
push
pop
ss
mov
ljmp
and
in
pusha
jmp
and
dec
jnp
lock
mov
cs
mov
cltd
imul
std
xlat
lret
in
dec
adc
push
xchg
lret
mov
hlt
loope
fcmovne
inc
out
mov
shl
add
cmp
mov
mov
jmp
or
sbb
idiv
cmp
xor
rorl
test
sahf
push
jae
pusha
roll
inc
adc
dec
ds
push
pop
insl
in
lods
loop
test
pop
cli
sub
hlt
popa
jecxz
mov
mov
lods
lcall
enter
jl
iret
arpl
jo
imul
push
mov
fwait
xchg
divl
sti
pusha
les
ret
push
idivl
fcmovbe
cmp
movsl
mov
mov
pushaw
fwait
out
dec
hlt
lcall
mov
andl
scas
dec
adc
push
in
mov
and
push
mov
stc
out
xchg
xor
idivb
or
and
sti
mov
movsb
out
jns
mov
xor
sub
jle
xchg
xchg
cmp
jecxz
lea
cltd
sub
arpl
cltd
xlat
call
gs
je
sub
fwait
ds
cltd
pop
inc
push
cmp
test
lret
or
sub
pop
sub
lods
mov
scas
loopne
lods
test
mov
addr16
test
add
jmp
mov
cmc
js
rorb
mov
mov
push
adc
sbb
inc
jge
incl
lahf
adc
jl
push
mov
or
lds
je
fdiv
xchg
jecxz
cltd
out
testb
shll
cmp
insb
dec
rcrb
fbstp
rcrb
lahf
jmp
cmp
cmp
xorl
xchg
and
or
mov
ja
into
xlat
ja
daa
cmpsl
sahf
jge
mov
fstps
rcll
dec
imul
repz
pop
jle
sbb
jno
sub
jge
pop
ds
adc
out
cmp
push
fdivs
cmpsl
ret
mov
dec
pop
sub
inc
add
sub
sub
stc
push
inc
ret
arpl
cmpsl
jbe
cmp
pop
push
pop
mov
fistl
pop
scas
and
sub
or
lock
mov
push
xchg
push
cli
rorb
mov
mov
pop
jne
jb
rcrb
subb
fdivs
out
or
aam
pusha
push
jo
push
xlat
shl
jle
pop
mov
mov
inc
or
sbb
jmp
mov
pop
xchg
mov
les
sbb
std
push
adc
pop
arpl
xchg
push
lret
ljmp
lock
push
int
mov
cltd
in
subl
ljmp
adc
test
mov
jecxz
inc
push
cltd
imulb
movsb
cmpb
insb
pop
jne
js
cmc
lods
add
xchg
mov
cmpsl
jnp
in
pop
jo
notb
and
or
js
dec
ficompl
scas
xchg
sti
and
inc
bound
imul
mov
iret
inc
lret
clc
loope
cli
repz
lahf
test
js,pn
out
mov
sub
mov
popa
xor
xor
mov
rcll
out
dec
lahf
or
hlt
test
xlat
or
xor
adc
pop
cmovle
fwait
gs
stc
pop
fcomps
xor
loopne
hlt
in
jmp
xor
mov
in
cmpsl
mov
pop
push
add
add
push
mov
push
lods
xchg
mov
xchg
xchg
cmp
pop
repnz
insl
gs
ret
or
popl
jmp
outsl
movsb
mov
cwtl
lods
insl
mov
adc
mov
cmp
js
push
repnz
adc
into
xor
sahf
and
dec
and
sbb
push
clc
mov
bound
test
mov
adc
repnz
out
loop
xrelease
add
je
jl
dec
jno
lock
scas
mov
adc
dec
faddl
pop
sbb
inc
jne
imul
mov
or
dec
rcrl
popf
sbbl
add
mov
pop
cmpb
sahf
cmpsl
push
mov
cmp
aaa
add
jg
mov
test
xor
jmp
jle
lret
mov
or
sti
aas
rorb
es
pop
push
stos
ret
inc
mov
and
pushf
mov
xor
jae
mov
loop
popa
cmp
nop
push
pop
ja
add
aam
repz
or
adc
push
pop
pusha
mov
dec
popf
loope
inc
add
or
lds
scas
sub
in
mov
cli
xchg
sub
aas
push
sub
rep
mov
cmc
cwtl
cmp
out
ret
sub
cmpsl
cmp
loope
out
xchg
push
jne
mov
lcall
and
das
push
test
decl
mov
sti
nop
stos
add
stc
or
sbb
sbb
and
inc
pop
sub
arpl
inc
jecxz
shlb
add
inc
inc
outsl
mov
xor
xchg
shll
add
mov
cmp
adc
fistpll
gs
push
std
mov
adc
jne
jmp
jnp
add
mov
sahf
push
in
pop
pop
push
iret
stos
aad
iret
ss
push
xor
dec
bound
cmp
inc
xchg
mov
xor
and
pop
add
adc
push
add
dec
sbb
sub
dec
cmpsb
xchg
outsl
adc
xchg
adc
imul
jno
scas
xor
cltd
sahf
lret
mov
jp
cmp
inc
lock
in
push
subb
in
sub
lds
sub
lds
jbe
xor
or
inc
fwait
xchg
dec
mov
dec
xor
rorb
push
xor
mov
ret
mov
xor
pop
fisubrs
inc
lret
dec
cmp
adc
icebp
jae
and
pop
aas
xorps
jb
inc
add
jl
mov
and
inc
es
in
mov
nop
dec
pop
mov
pop
push
sti
pushf
and
and
loope
push
loope
movsb
add
mov
out
inc
fwait
or
cmpsl
adc
lods
and
mov
adc
mov
outsl
lods
mov
mov
push
pop
and
add
fisubs
loop
hlt
insl
cs
fisttpl
sbb
ret
in
mov
pusha
adc
sahf
in
cmp
cs
notb
inc
rcl
jbe
fists
dec
xchg
sub
jbe
or
or
mov
mov
sbb
mov
stos
in
cli
es
push
jb
pop
clc
pop
andb
stos
repnz
rorb
mov
ja
popa
xchg
sub
mov
jp
es
ficoml
pop
xor
leave
sbb
icebp
fs
sub
test
xorl
sti
jns
mov
sbb
mov
ret
or
in
fnstenv
xlat
mov
adc
mov
pop
xchg
hlt
nop
push
adc
mov
sub
pop
ds
cmpsb
mov
addb
popf
subb
sti
xchg
rcl
mov
jbe
lea
dec
push
jae
mov
dec
pop
xchg
arpl
mov
dec
mull
fildl
mov
inc
stos
loope
sub
jecxz
add
fs
xchg
mov
test
cli
icebp
arpl
dec
jmp
lods
adc
in
mov
add
int3
xchg
imulb
leave
xor
pop
ljmp
inc
xchg
addr16
lods
popa
bswap
mov
dec
sbbl
add
cltd
mov
out
fwait
cld
aam
mov
loope
pop
nop
xchg
fnsave
inc
rcll
inc
xlat
out
cmp
add
ss
or
mov
int
pop
push
test
shll
loopne
faddl
sbb
push
xchg
mov
movsb
outsl
pop
mov
mov
cmp
stos
jg
add
mov
data16
addr16
and
insl
clc
mov
add
stc
dec
jo
cmp
outsl
pusha
and
mov
push
repz
leave
xchg
inc
xchg
push
mov
adc
call
in
xor
inc
dec
or
out
jae
and
and
das
cmp
pop
xchg
push
push
jne
jno
or
imul
sub
mov
je
std
or
test
push
dec
mov
jno
or
xor
mov
mov
inc
and
fiaddl
das
push
sbb
dec
mov
push
lahf
cs
jnp
mov
sub
pop
inc
testl
movsl
xchg
stos
aaa
out
mov
fisubrs
shlb
sahf
jns
out
jne
pop
ficompl
push
fucomip
jo
imul
in
xchg
dec
cli
pop
addb
ja
jns
fwait
jmp
ret
fistps
sti
stos
dec
pop
xchg
shll
pop
sub
mov
mov
push
jp
or
push
inc
fistps
inc
in
das
daa
and
ret
sahf
and
cmc
jg
iret
mov
cwtl
adc
or
addl
pop
out
mov
popf
adc
aam
adcb
jp
lret
pop
aas
ljmp
fcmovnb
cmpsb
mov
call
or
loop
sub
test
add
jno
scas
pop
sub
mov
rclb
daa
dec
mov
jle
movsb
pop
test
shll
push
lret
fmull
rorb
add
xor
pop
ror
dec
fsubr
mov
ffreep
nop
dec
ljmp
clc
xchg
fnstcw
shlb
push
mov
cmp
xchg
jmp
sub
or
dec
sbb
jecxz
xor
test
jb
inc
cmp
cs
jp
dec
scas
jo
jbe
cld
or
add
mov
jns
pop
sahf
mov
cli
int
movsb
ret
inc
testl
xor
pop
ds
shll
test
push
repz
mov
sub
sub
das
sahf
in
jae
sub
lods
stos
sbb
or
mov
mov
mov
adc
je
out
and
push
cmpsb
shr
in
call
pushf
and
aam
pushf
xor
xchg
loop
gs
dec
adc
popa
mov
in
add
cmp
in
js
sbb
mov
fucomp
sub
inc
pop
aas
add
add
lahf
pop
test
dec
inc
jecxz
rcr
ljmp
lret
or
and
mov
cmpsl
sbb
lcall
imul
push
adc
filds
call
mov
xchg
mov
fcmovnbe
pop
sub
adc
ret
inc
add
cmp
imul
sbb
bnd
outsl
movsl
xchg
mov
addl
aam
mulb
mov
cvttps2pi
aad
inc
aam
pop
rorl
adc
loopne
pop
xchg
sub
mov
loop
xor
lcall
push
mov
mov
aaa
pop
imul
and
jp
jmp
jmp
and
out
jns
stc
push
shll
jns
fwait
add
stc
lea
xor
push
je
insb
lret
sbb
jno
jns
xor
arpl
popf
lret
aaa
sbb
mov
pop
aam
jo
sbb
add
clc
fisubl
mov
inc
lahf
shll
and
fistl
push
testl
js
or
mov
dec
fs
jo
add
xchg
push
xor
jg
jmp
and
shlb
pusha
mov
cmc
add
shrb
fnstsw
in
jb
or
mov
xchg
mov
add
or
push
test
lret
jle
stos
sub
sti
dec
mov
movsb
pop
mov
inc
lds
inc
imul
popa
test
mov
or
imul
scas
sti
out
roll
test
popf
cmp
inc
xorl
push
and
movsl
cmp
stc
stos
cmp
sbb
jne
cmp
cmp
jnp
lcall
adcl
outsl
jbe
jnp
pushf
sti
jnp
hlt
and
mov
in
sbb
inc
or
push
xchg
and
and
lock
pop
scas
jae
lock
sub
pop
sti
mov
xchg
dec
push
les
hlt
jl
inc
adc
push
call
push
add
int
adc
mov
sub
cli
jp
jns
into
jnp
xchg
sub
mov
rorl
das
bound
xchg
push
pop
shrl
loop
pop
and
mov
out
sub
xor
xor
or
mov
js
nop
sbb
jbe
bound
dec
ret
or
inc
sub
pop
xchg
inc
sahf
mov
mov
loopne
ret
int
mov
pop
icebp
mov
sub
test
adc
int
cld
cmpsb
mov
xor
fcomps
loop
mov
xchg
add
cmp
fidivs
movsl
cmp
cmp
pop
jno
and
test
jne
cli
jmp
lahf
dec
xor
push
add
fcomps
lock
mov
mov
push
aas
stos
fsub
andl
pop
lds
imul
cmp
rorb
sarl
mov
dec
xor
inc
paddusb
fucomip
push
lds
lret
in
pop
adc
inc
cmp
pushf
imul
insb
push
xor
incl
fwait
test
mov
push
adc
pop
outsl
ret
lds
repz
mov
mov
aad
outsl
jo
fildl
repnz
lods
jns
lret
les
inc
xor
pop
add
add
push
lods
in
xlat
push
inc
xorl
arpl
sub
ret
fwait
outsb
sbb
ljmp
aas
lahf
push
and
outsb
mov
daa
divl
xchg
mov
xor
lret
xor
mov
repnz
sbb
mov
xchg
add
clc
inc
add
mov
xchg
mov
jns
xchg
out
adc
cmp
pop
jb
popf
cmp
cmp
pop
mov
out
rolb
xor
push
test
mov
jnp
sbb
aaa
fisubrs
repnz
imul
mov
mov
les
or
xor
sti
leave
pop
cmp
int
jno,pt
lods
subl
dec
push
mov
push
repz
add
mov
aas
shrb
dec
jno
inc
sub
dec
enter
add
movntq
jb
lods
idivl
arpl
jnp
cmp
jbe
pop
or
mov
cld
inc
mov
aam
inc
int3
je
cmp
test
sbbl
xor
adc
fdivl
dec
addb
stc
mov
popf
les
dec
mov
data16
xor
dec
jns
out
ds
adc
or
rclb
and
sbb
mov
dec
fcoml
out
inc
jmp
addr16
add
stos
jmp
cli
pop
xor
mov
xchg
xlat
cmpsb
or
mov
or
and
push
fmuls
push
movsl
lds
insl
xchg
sub
int
movsb
loope
and
cmp
popl
repz
jge
in
lods
stc
in
les
lock
mov
xor
sub
inc
inc
xor
jmp
popf
xchg
and
xchg
pop
movsb
jo
or
test
xchg
jae
loop
xor
loope
adc
dec
fcmove
das
push
lcall
out
cmp
jno
fprem
mov
jp
adc
inc
es
add
into
out
arpl
rorb
push
cmpsl
cmp
and
xor
mov
scas
test
sbb
xchg
shlb
popa
pushf
movsb
cmp
add
mov
inc
push
repz
sub
out
aam
outsl
sub
inc
xor
clc
shlb
xchg
cmp
subb
loopne
add
fs
les
inc
fucom
jp
pop
stos
and
dec
stos
push
rolb
lcall
stc
adc
inc
xor
shl
outsb
scas
xchg
inc
loope
sbb
dec
out
mov
pop
and
es
bound
mov
pop
jp
xchg
loop
je
mov
cmp
cld
frstor
popa
mov
sbb
adc
add
push
clc
stos
add
pop
sbb
inc
outsb
push
sub
stc
push
mov
cmc
inc
jno
fwait
pop
mov
xchg
cmp
pop
cmpsl
jbe
add
ljmp
pop
mov
lock
leave
jmp
ljmp
xchg
pop
not
rcr
dec
fwait
pop
ss
mov
pushf
outsb
pop
lahf
mov
mov
dec
and
push
pop
mov
int
mov
aam
xor
adc
insb
fstpt
out
or
jg
jecxz
jmp
cltd
mov
imul
or
arpl
es
scas
mov
je
jg
lods
ret
adc
dec
push
mov
pop
ja
mov
int3
std
ret
test
add
das
ja
sbb
jbe
mov
loopne
mov
xor
jo
and
mov
in
in
sbb
inc
daa
lret
mov
gs
aad
stos
sbb
arpl
lods
int
aam
push
daa
fwait
sbb
daa
popa
dec
mov
int3
mov
cmp
pop
add
ljmp
lods
cmp
lahf
test
ljmp
sub
sarl
xchg
loop
mov
xchg
cmp
lcall
xor
ret
jno
sub
push
sbb
lcall
mov
and
je
into
dec
mov
test
push
outsl
add
xchg
cmp
push
sub
rcrl
or
lret
mov
mov
stos
ret
inc
lret
mov
mov
cmp
arpl
pop
pmovmskb
sbb
fiaddl
mov
pop
cmp
test
jp
addr16
sub
je
sbb
cmc
in
pop
ret
rcrb
outsl
xlat
push
mov
fmull
pop
insl
div
mov
sub
fcompl
nop
fildll
aad
popf
pop
cs
loope
inc
mov
add
jecxz
cmpb
mov
add
xchg
dec
xchg
or
daa
icebp
push
inc
and
int3
in
push
divb
jmp
xor
and
ljmp
cmp
xchg
adcb
popa
in
xchg
ljmp
mull
call
loope
sub
dec
fwait
mov
xchg
mov
popf
lret
jo
iret
loope
xor
xchg
pop
xchg
fstpl
out
outsl
in
cmc
xor
push
popa
mov
push
adc
lret
add
and
outsb
pop
jmp
loope
inc
andl
shrl
mov
orl
pop
gs
loop
or
and
xchg
sbb
inc
std
lcall
js
dec
cld
push
cmp
mov
and
dec
int3
pop
mov
or
mov
idivb
push
push
mov
xor
or
lcall
inc
and
sar
ss
inc
lret
fdivp
shl
pop
fxch
lock
in
xchg
pop
aam
cmpsb
int
pop
mov
std
jge
xchg
cwtl
push
enter
outsl
addl
hlt
imul
faddl
test
rclb
imul
push
movsb
push
ss
out
dec
fidivrl
sbb
scas
jnp
push
cmpsl
les
mov
mov
fidivrl
data16
mov
int3
xor
or
xchg
leave
lahf
jae
dec
ficoml
lar
fwait
push
add
xor
lods
movsb
xor
xchg
or
add
jbe
cmp
jl
aas
fisubrl
pop
sti
pop
call
addb
popa
sub
mov
jo
hlt
inc
roll
dec
insb
cmp
sub
xorb
lret
sub
shl
push
pop
xlat
test
dec
lcall
fimuls
call
arpl
add
or
aam
lods
jle
xor
outsb
lods
daa
adc
mov
dec
aam
fstl
lods
xor
push
dec
fs
pushl
mov
fisubl
or
cltd
cli
push
xchg
add
xchg
push
out
sub
out
cmp
mov
ret
sbb
push
jne
xor
loopne
das
jl
adc
insb
faddl
jno
xchg
cwtl
push
cmp
push
scas
and
xor
cmpsl
shr
add
lret
jg
pop
jns
adc
std
out
cmp
xchg
jl
lret
cltd
dec
pop
je
negl
int
xor
dec
or
enter
or
add
nop
adc
aaa
jg
mov
cwtl
lock
jbe
and
nop
lret
sbb
ja
or
jg
sub
jo
xchg
adc
les
out
add
lock
outsl
loop
xchg
mov
adc
iret
in
cli
stc
dec
and
dec
psubb
iret
adc
mov
add
nop
jo
mov
mov
xor
cmp
out
pop
sub
xlat
xchg
fidivs
dec
in
add
sbb
stos
int3
lret
lds
fwait
xchg
fwait
push
cmp
leave
xor
loop
pop
cmpl
xchg
dec
sbb
ret
adc
ljmp
and
imul
push
inc
cmp
lcall
jnp
mov
add
mov
lds
dec
lea
add
fldl
mov
ret
lods
dec
cmp
jmp
fldcw
int3
and
mov
xlat
sti
popa
lock
or
pop
rcrl
sbb
push
dec
cli
push
cli
rcr
jne
idivb
xchg
adc
pop
outsb
cmp
arpl
data16
sahf
push
or
ljmp
mov
movsb
pop
subl
out
cmp
jg
mull
mov
sbb
jnp
inc
add
ljmp
mov
dec
sbb
sbb
loope
dec
ja
ss
es
pop
dec
insb
test
adc
addl
jecxz
mov
repnz
pop
in
and
repnz
mov
jle
cmp
mov
and
fstps
pop
jecxz
lcall
leave
loop
fwait
repnz
mov
dec
jo
sub
out
cltd
mov
inc
insl
call
in
or
and
cwtl
xchg
fidivrs
out
jns
xor
js
ret
fs
add
loopne
aaa
in
and
jge
neg
dec
or
clc
adc
cmc
sar
push
mov
hlt
push
mov
rcrb
pushf
and
shrb
in
push
xor
push
lcall
lods
push
fs
lods
mov
sub
sbb
popa
ss
jge
cmpsl
mov
repnz
pop
loop
jae
sahf
stos
add
inc
scas
lret
aad
int3
cmpsl
add
dec
inc
and
iret
mov
bound
add
test
cmc
movsl
outsl
push
data16
repz
inc
mov
xchg
cld
push
adc
lock
inc
loop
popf
mov
mov
cmp
stos
movsb
aaa
xchg
scas
aad
les
imul
jne
mov
pop
sti
cmpsb
sub
cmc
and
mov
clc
out
test
and
mov
lock
call
jo
sbb
dec
leave
push
jo
outsl
and
fstpl
pop
sub
cmp
aas
inc
mov
inc
push
mov
lods
hlt
push
iret
mov
aas
cwtl
mov
xchg
mov
fcmove
sub
xor
sti
fwait
popa
push
xor
aas
mov
fs
jo
lret
push
and
cmp
insb
sub
push
test
imul
mov
adc
stos
jnp
out
xchg
mov
mov
cmp
jle
lods
mov
imul
jno
cmc
or
mov
and
mov
mov
lret
jge
or
lock
movsl
sar
daa
ret
js
inc
cwtl
mov
jle
test
shrb
cmp
lahf
in
std
mov
daa
xor
mov
lock
jno
subl
cwtl
std
call
mov
lock
jb
xorb
aad
rcrl
mov
cmp
test
icebp
jp
sahf
adcb
std
mov
stc
or
les
lods
insb
stc
sbb
insl
nop
test
fldcw
and
ret
bswap
bound
push
das
mov
push
aaa
lret
or
cmp
psubsw
int3
xchg
addl
aam
enter
jl
fisttpl
mov
and
js
push
push
mov
iret
xor
in
mov
orb
adc
cmp
test
add
push
jae
fidivrl
outsl
outsb
add
test
adc
jb
sarl
fsubl
jae
mov
mov
xor
or
repnz
int
int
insb
jae
lods
icebp
mov
arpl
mov
jge
dec
scas
jne
xchg
ficoml
pop
mov
out
sbb
movsb
lock
mov
fcompl
cld
cltd
inc
pop
icebp
mov
ret
xor
aam
pusha
fwait
lds
jbe
mov
sub
and
js
arpl
int
inc
out
mov
scas
loope
loopne
push
addr16
add
mov
mov
and
xor
aaa
mov
into
jns
test
movsb
scas
out
jge
dec
std
inc
in
jmp
push
mov
pop
out
sub
inc
push
adc
ficomps
test
mov
insl
imul
test
sub
cmp
stc
jmp
or
adc
adc
sub
jmp
cmp
mov
cwtl
xor
leave
aad
lea
and
sub
in
mov
add
xchg
pop
inc
pop
outsb
xadd
xchg
lea
mov
pushf
flds
or
gs
dec
gs
jl
loope
popf
xor
addr16
rcrb
insb
loop
xchg
enter
hlt
jo
mov
insl
cmc
call
jno
fisttps
xor
or
sub
fs
fnsave
xor
loopne
movsb
add
repz
popf
nop
repz
outsl
adc
xchg
js
xchg
add
pushf
ss
mov
xchg
mov
dec
or
call
sub
sub
mov
lea
cwtl
pushf
rclb
xchg
je
dec
loope
out
shr
int
scas
xchg
xlat
mov
insl
sbb
data16
stos
repnz
dec
in
jbe
ja
aam
in
add
dec
or
stos
mov
dec
std
cmc
out
mov
add
es
in
mov
test
push
and
mov
mov
lds
enter
push
scas
movsb
icebp
lret
orl
jns
lock
xchg
imul
mov
pop
fsubrl
push
ret
lock
dec
mov
hlt
daa
jecxz
imul
and
mov
or
ret
cmp
mov
lahf
call
inc
dec
pusha
lods
dec
mov
cld
mov
sahf
and
mov
mov
pusha
xchg
aad
lcall
or
push
pushf
mov
inc
mov
je
jns
sahf
lret
mov
jns
into
imul
out
jecxz
xchg
jecxz
cmp
fptan
pop
stos
cwtl
data16
mov
movb
mov
xor
ret
scas
loop
sub
jae
ret
mov
push
in
dec
loopne
push
jle
sub
inc
fwait
mov
add
repz
jmp
fld1
das
mov
pushf
lret
inc
push
fldt
adc
pushl
mov
xchg
mov
push
mov
dec
push
xchg
mov
sub
scas
lds
dec
lock
jne
or
mov
movb
cmp
sub
repnz
mov
sahf
movsb
stc
or
mov
xchg
xchg
xor
repz
sarb
aaa
and
jmp
dec
cwtl
adc
cmpb
std
push
shrl
or
mov
in
xchg
rorb
add
inc
daa
and
mov
mov
pop
xor
jl
xchg
mov
cmp
or
ljmp
adc
rclb
sbb
dec
imul
mov
stos
es
xor
dec
aam
sbb
out
jbe
cmp
jbe
dec
lcall
insl
push
scas
push
bound
test
pop
sti
mov
xchg
lea
ficomps
enter
shlb
jbe
cmp
dec
pop
and
jne
xchg
shrl
shrl
mov
xchg
add
ret
movsl
cmc
xor
inc
in
pop
lret
mov
dec
cmp
adc
lret
pop
cmpsb
jmp
mov
leave
mov
or
pop
mov
mov
repz
xchg
aad
cmp
fsts
fimull
jno
mov
dec
rcrb
fxch
filds
and
out
mov
mov
loop
cmpsl
mov
lds
outsl
jne
imul
fisttps
jne
jle
dec
push
sbb
bound
imul
pop
jns
dec
outsb
xchg
add
shll
stos
sti
or
scas
repnz
movsl
repz
rol
inc
ds
insl
ds
add
pop
movsl
inc
call
mov
popa
inc
sbb
dec
cltd
push
cmp
xchg
test
int
cs
push
xor
cmp
pop
insl
inc
lods
fsubl
cmp
jmp
hlt
mov
sbb
pop
aam
clc
sbb
jns
sbb
stos
stc
cmc
lahf
adc
jg
jecxz
ljmp
mov
popa
and
cmp
jge
int3
xor
adcl
in
sbb
jp
fmulp
push
inc
shll
std
shrb
sti
call
inc
jl
pop
mov
les
push
jne
sub
pop
xchg
push
jns
mov
scas
jno
inc
sub
iret
dec
ljmp
pop
subl
andb
outsb
js
adc
movsb
mov
xchg
and
loop
or
mov
sarl
xchg
xchg
and
out
mov
cs
sahf
clc
mov
jbe
mov
mov
cmpsb
stc
loope
leave
sub
and
out
and
aas
xchg
fdivr
out
pop
or
insl
xchg
jno
pop
mov
in
orb
call
xchg
daa
inc
fisttpl
pop
lret
mov
imul
adc
jbe
adc
roll
sahf
mov
mul
mov
clc
pop
mov
outsl
hlt
mov
mov
loop
adc
and
sub
dec
out
sbb
pop
and
xchg
orb
inc
or
mov
cmp
sbb
sti
sub
addr16
scas
mov
cltd
outsb
xchg
inc
fsubr
sub
iret
fldl
lods
fwait
mov
aas
scas
xor
movsb
and
or
jno
out
mov
and
daa
pop
xor
add
aad
or
push
inc
sbb
enter
adc
aas
adc
sbbl
leave
jmp
pushf
int3
and
xchg
je
pop
xor
or
push
lods
inc
std
mov
sub
xchg
cmc
xchg
xchg
in
cwtl
data16
or
in
cmp
popf
add
sbb
mov
dec
cld
nop
and
pop
push
mov
jbe
adc
mov
ja
cmp
lsl
push
or
test
ror
stc
outsl
push
inc
jle
push
negb
mov
or
dec
iret
mov
or
mov
xor
js
out
cmpsb
andb
xchg
push
andl
imul
loope
mov
and
vpminuw
in
test
cld
sub
xchg
adc
or
jae
push
lret
inc
insl
nop
fimuls
loop
add
mov
sub
mov
mov
lret
jo
les
andl
in
stos
mov
or
fisubl
rorb
pusha
pop
aas
push
mov
xor
jp
lods
sub
ret
jl
xor
aas
fcoml
ljmp
mulb
mov
xor
jno
lret
sbb
pop
sub
cmpb
dec
and
aad
push
mov
mov
or
pop
adc
inc
loope
push
cmc
movsb
add
sbb
pop
xchg
std
pop
push
shll
shl
dec
pop
jnp
stos
enter
sub
fisttpl
and
lahf
mov
dec
inc
arpl
cli
add
dec
mov
fiadds
es
pop
inc
dec
and
inc
push
mov
jno
pop
ror
scas
fwait
ja
inc
and
pop
jl
roll
lds
out
xor
or
arpl
mov
jne
or
mov
cltd
shlb
loopne
inc
cmp
cli
out
jl
into
cmp
scas
and
test
jge
xchg
or
mov
mov
nop
xor
push
and
rcrb
stos
cmp
mov
push
gs
mov
mov
fcmovnbe
addl
in
cli
or
xchg
pushf
add
aam
fildl
pop
js
xchg
ss
push
add
data16
inc
jae
add
xor
out
cmp
cmp
in
or
mov
or
out
jb
daa
fs
outsl
loope
ds
sub
dec
add
aaa
xorb
popl
add
mov
jno
mov
icebp
aam
jbe
icebp
stos
cmp
movsb
push
stc
pop
neg
or
and
pop
fmull
lcall
pop
push
in
cmc
mov
jl
pushf
jecxz
sub
mov
xchg
loopne
ja
cmc
pop
push
clc
or
cmp
add
scas
mov
xchg
mov
sub
inc
cli
add
out
orl
rcr
pop
dec
sbb
test
dec
xchg
repnz
xlat
mov
push
dec
xor
outsb
pop
sbb
into
mov
sbb
stc
sub
jl
adc
int
int
jp
cwtl
lret
rcll
adc
cli
mov
jno
fiaddl
fimuls
jo
sub
mov
out
pop
jb
sub
clc
and
into
lret
popa
jle
fucomip
repnz
test
ret
push
scas
xor
out
and
jl
add
rol
popf
xor
sub
sbb
mov
dec
push
xor
mov
lods
dec
popa
sti
xchg
enter
push
flds
push
xchg
outsl
and
cwtl
and
sarb
lock
out
jmp
pop
mov
cmc
adc
jne
imul
push
ja
cmp
stos
fcompl
lahf
dec
loope
push
aam
sti
inc
pop
shlb
pushf
dec
cmpsb
jl
cmp
add
mov
adc
shl
insb
sbbl
cli
int3
pop
inc
lods
es
loope
sbb
or
jecxz
rolb
loope
push
jo
mov
and
mov
mov
add
lret
fcoms
test
pop
mov
push
add
dec
sub
fisttps
dec
xchg
adc
pop
xorb
push
shll
xchg
ljmp
xchg
cs
lret
mov
insb
push
lods
sub
adc
adc
cmp
and
mov
xor
dec
sahf
test
cmpsb
mov
loope
mull
repz
or
push
xor
lcall
fcoms
push
pusha
or
pusha
shl
fprem1
mov
push
test
lock
popa
andb
mov
pop
fmuls
outsl
xorl
jle
dec
pushf
repz
cmp
mov
mov
shll
loop
loopne
dec
xlat
testb
call
add
mov
sub
outsb
mov
push
lret
les
mov
nop
jns
push
incl
shrl
repz
fs
pop
in
mov
in
das
jnp
rorl
outsb
jne
test
jne
mov
mov
xchg
cmp
int
rcrb
mov
cwtl
xchg
xchg
cwtl
xchg
push
mov
lcall
push
fsubrl
inc
sub
push
dec
test
adc
leave
dec
shl
inc
or
cmp
add
cmpsl
xchg
mov
push
aam
stos
sbb
lret
pop
mov
lods
call
pop
out
insb
xlat
add
pop
mov
imul
sbb
es
fldt
daa
gs
sub
pop
test
push
cld
insb
loopne
testl
hlt
mov
add
dec
mov
lds
call
out
cmc
cld
idiv
pop
es
gs
adc
neg
xor
and
test
push
inc
movsl
pop
les
insb
in
sub
inc
ss
lea
imulb
jo
stos
lret
je
push
mov
and
add
lea
lods
cmpsb
mov
pop
cmp
andl
call
rcll
mov
ljmp
jb
push
div
jg
push
aam
js
inc
andb
outsb
testb
adc
aad
or
adc
sub
inc
sbbl
rolb
cmp
stos
lock
pop
pop
push
je
mov
iret
mov
mov
int3
jle
repz
adc
sbb
jno
mov
or
sbb
and
inc
mov
mov
pop
jmp
push
nop
push
ds
mov
mov
sbb
inc
enter
in
stc
stos
pop
cli
aas
pop
inc
fistl
testb
cmc
fdivp
mov
aad
mov
xlat
push
mov
cwtl
dec
in
sti
daa
jns
mov
push
jp
int
into
ja
hlt
repz
sub
xchg
repz
mov
shll
rcrb
sarb
out
pop
add
ds
and
pop
popf
ficomps
pop
mov
jmp
and
popa
dec
out
dec
inc
push
push
test
rorb
push
lods
pop
adcb
lcall
jge
and
xchg
xor
dec
andl
cmpsb
mov
and
push
push
sub
lcall
and
mov
movsb
push
push
or
or
and
jmp
outsl
iret
jmp
ja
int3
sahf
lcall
pop
pop
addl
aaa
addr16
jle
jb
and
add
movsb
mov
addr16
test
mov
mov
js
and
add
movsb
dec
call
sti
mov
mov
add
dec
mov
mov
xor
cltd
mov
mov
inc
ficoml
fwait
or
popa
ret
sub
les
loopne
lock
xchg
js
jo
dec
ret
test
mul
dec
fdivr
scas
push
aaa
shrb
xchg
stc
inc
xor
cltd
mov
or
jnp
cmpsl
fdivrl
dec
pop
jg
inc
cmp
dec
sub
aas
fmuls
mov
mov
mov
fists
xchg
push
xchg
iret
inc
add
add
hlt
stc
outsb
cld
idivl
adc
pop
dec
push
lock
inc
cli
ja
shl
add
nop
sub
std
jl
es
jp
out
and
jns
dec
sbb
pop
rcr
pop
cmpsl
xchg
add
add
fstp
mov
stos
sub
popa
sbb
nop
push
call
push
push
loopne
test
inc
mov
mov
mov
popa
jg
sbb
in
dec
sbb
movsl
scas
fldl
mov
pop
scas
jmp
sahf
mov
test
iret
leave
mov
aas
mov
jb
mov
lahf
cmp
jae
out
push
push
cmpsl
push
push
xor
sub
sbb
mov
sahf
xor
adc
in
sbb
aad
sub
sub
stos
sub
popf
clc
cld
mov
js
rol
aam
sub
or
adc
cmpsl
pop
cmpsl
mov
push
or
es
insb
mov
and
insl
out
jnp
cld
fcom
cmp
pop
xchg
fisttpl
cmp
mov
cmp
jo
js
sub
jbe
jno
mov
fildl
insb
adc
loop
das
rolb
and
repnz
jnp
insl
mov
sbb
cltd
dec
jb
scas
push
icebp
ret
sub
jmp
pop
or
rorb
dec
mov
pop
leave
btrl
sarb
lret
sbb
insl
pop
push
xor
stos
sbb
andl
out
movsl
insb
push
hlt
mov
in
test
out
lcall
cld
sahf
sbb
jecxz
xchg
test
push
sbb
mov
jne
into
lods
popa
push
mov
dec
aad
bound
into
mov
add
repz
sbb
xchg
xor
adc
or
pop
repz
xor
and
mov
mov
or
mov
and
sub
notl
xor
movsb
loopne
mov
in
mov
stos
rcr
pop
lods
scas
into
mov
add
jns,pt
pop
lcall
inc
mov
sbbb
int3
shl
adc
xchg
mov
xchg
hlt
or
ds
jmp
std
push
push
js
sub
repnz
arpl
cwtl
push
mov
bound
aaa
stos
inc
lea
sahf
mov
mov
cltd
aaa
jg
out
popa
sbb
xor
adc
cmp
jnp
movsb
frstor
cmp
repnz
ss
add
fs
and
cld
xlat
add
cmpsl
scas
mov
ljmp
adc
mov
clc
jne
incl
in
fadds
add
xchg
mov
js
inc
pop
test
sbb
dec
xchg
xchg
mov
arpl
xlat
mov
loop
out
add
mov
int3
cltd
mov
pop
popf
mov
xorl
xchg
call
es
pop
test
ss
and
xor
add
subl
and
cli
imul
and
bound
add
and
lods
lret
cli
ds
loope
ljmp
mov
int3
xlat
and
jnp
jmp
dec
jno
xor
and
xchg
dec
mov
fwait
jbe
mov
data16
mov
adc
lahf
jl
shrl
ds
idivl
bound
push
clc
sub
xor
aad
and
les
sub
aad
dec
mov
xorb
insb
mul
icebp
or
or
mov
addr16
out
stos
lahf
pop
mov
mov
test
movsl
mov
sbb
inc
loope
adc
mov
sub
or
addl
add
into
repz
mov
jns
int
je
insl
insl
xor
neg
jo
repz
loope
outsl
dec
enter
enter
cmp
in
cmp
sbb
daa
pop
mov
or
adc
je
push
push
and
cs
push
push
jnp
in
stos
push
cmp
xorb
inc
push
xor
mov
mov
jecxz
mov
imul
xchg
dec
lret
jne
xchg
dec
sti
push
fdivrl
aas
cmp
shrl
add
gs
mov
adc
icebp
mov
mov
pop
cmpsb
mov
pushf
lcall
sbb
sti
ja
imul
dec
and
shll
stos
rcr
jbe
inc
adc
mov
fmull
scas
mov
rcr
fistpl
sbb
cmpsl
fcmovnb
clc
xchg
ss
xor
into
cmc
xchg
mov
lret
mov
mov
and
add
repnz
push
fdiv
dec
dec
xchg
adc
aaa
loopne
lods
aas
pop
cmpsb
mov
clc
cmp
into
xchg
rorl
js
push
adc
into
fistl
inc
stos
and
sbb
add
xor
popa
out
outsb
adc
mov
sub
int
pop
xlat
out
xchg
mov
push
push
mov
lods
inc
push
mov
pop
faddl
jg
in
lea
inc
cmp
decl
mov
clc
pushf
pop
mov
sub
mov
cmc
icebp
cwtl
adc
fbstp
int3
cmp
mov
lcall
xlat
mov
mov
cmp
out
pusha
adc
jne
dec
pop
movsl
jnp
scas
pop
xchg
lret
push
dec
dec
mov
jns
mov
or
mov
pop
jecxz
dec
repnz
push
xor
add
xchg
aaa
mov
fxch
loop
jnp
cmp
xchg
cwtl
pushf
xchg
pop
loope
sbb
sub
push
cmp
test
js
mov
rcr
aaa
add
lods
out
mov
into
pop
mov
cmp
push
loope
cmp
cmpsl
jne
ds
sbb
add
cmpsl
and
lods
subl
cld
mov
rol
add
fisubrl
testb
mov
rclb
lock
and
sub
jo
test
inc
xchg
push
je
repz
fstps
dec
mov
pusha
jp
or
fimuls
sti
and
stos
cli
idiv
jb
fcmovnb
clc
ss
cmp
leave
and
das
in
cmpsl
std
out
inc
loop
lods
mov
mov
push
insl
fstpt
add
rcl
adc
jge
jnp
push
insb
jnp
outsl
aad
add
cmp
repnz
dec
insl
pop
pop
push
sub
shl
gs
inc
jo
outsb
fstp
jne
aas
pop
mov
xor
mov
mov
adc
xchg
test
or
aam
jmp
xor
push
lock
es
mov
outsl
sbb
ficoms
in
xchg
adc
inc
adc
stc
repz
add
jl
lcall
sbbb
dec
pop
cmp
std
mov
lods
je
xchg
or
cmpsl
jne
in
cmp
fists
push
cmp
imul
out
mov
rcrl
sbb
mov
data16
sub
push
out
out
dec
adc
shr
pop
dec
inc
int
add
into
and
or
push
inc
movsl
loopne
mov
jge
add
shr
pop
dec
scas
fiadds
rol
loop
int
shlb
dec
inc
lret
insb
outsb
mov
out
push
stc
popa
pop
xchg
xchg
adc
jns
pop
scas
lcall
aad
jmp
inc
and
add
xsaves
dec
jae
pop
push
in
dec
js
cmp
lahf
movsb
and
aad
mov
jno
push
inc
jle
adcl
stos
lock
mov
cmp
xchg
das
cmp
mov
rcrl
xchg
xor
xor
push
sbb
jae
les
adc
rorl
stc
aaa
les
or
adc
fcomip
jno
loop
cmpsl
jo
inc
popl
lds
adc
sbb
pop
xor
nop
sub
imul
stos
xchg
test
xchg
arpl
aas
mov
insl
sbb
addr16
dec
dec
sub
or
push
aad
lahf
push
inc
loopne
lret
data16
aad
ret
popa
mov
mov
icebp
sub
scas
xor
pop
inc
or
push
xchg
scas
xchg
and
xorb
cmpsb
popf
add
inc
frstor
fildl
pusha
and
add
jg
shlb
pop
daa
fidivl
mov
fmull
mov
filds
mov
pop
outsl
sti
das
sub
mov
mov
sahf
xchg
psubsw
cltd
and
jl
xor
adc
xchg
arpl
loopne
das
mov
push
add
cmc
lods
sti
and
data16
push
push
jmp
in
fdivs
xchg
std
stos
jl
sbb
cwtl
mov
enter
pop
push
fdivrl
pop
loope
addr16
add
repz
xchg
lret
push
icebp
cld
xlat
mov
xchg
in
push
ret
lret
jno
xchg
push
enter
rclb
mov
mov
cmc
iret
xor
or
jecxz
push
push
push
les
mov
cmp
add
jmp
test
add
sahf
inc
fistpll
or
enter
inc
rcrb
pop
sbb
pop
aaa
adc
loop
hlt
cmp
das
pop
pop
cmp
jne
cmp
xchg
mov
sahf
pop
into
xor
movsb
jno
adc
mov
popa
out
mov
rcl
scas
hlt
push
pop
scas
pushf
test
inc
insl
cli
adc
jb
xchg
pop
inc
jns
rcr
aas
jl
cmc
lea
mov
adc
inc
pop
cmp
or
hlt
adc
jp
testl
insl
in
jecxz
xchg
inc
lock
imul
icebp
int3
cwtl
and
ret
pop
pop
adc
shlb
inc
pop
cmp
jecxz
lret
call
int
pop
fwait
in
xchg
lods
sbb
xlat
mov
mov
mov
xchg
aaa
shlb
or
shrb
andb
mov
in
enter
mov
fs
and
adcl
inc
sbb
inc
ja
sub
mov
push
push
mov
pop
mov
ret
xchg
mov
aaa
add
mov
outsl
mov
repnz
add
je
adcl
repnz
jle
leave
mov
ret
jbe
or
sarb
mov
jno
mov
outsl
icebp
cmpsb
insl
js
fsubl
xchg
out
dec
ret
push
imul
sbb
xchg
iret
mov
scas
mov
and
cmpsb
movsl
sahf
inc
jae
or
and
mov
jle
xchg
ret
mov
scas
mov
add
push
test
orl
mov
lock
cli
jecxz
cwtl
es
aam
iret
xor
or
and
decl
jmp
sti
mov
ja
mov
sbb
adc
mov
inc
cmpsb
xor
sti
or
and
stc
data16
or
test
fimuls
mov
shlb
jle
rolb
scas
ds
push
std
les
pop
sub
mov
sub
pop
sub
ror
shrl
test
add
xchg
pop
inc
fs
pop
lods
add
jne
xlat
xor
push
mov
jg,pn
ret
and
and
push
lret
add
addb
add
adc
inc
jge
mov
pop
add
mov
dec
push
and
fistpll
jmp
std
pop
push
mov
sbb
push
xor
mov
jmp
in
jae
rolb
test
or
repz
mov
xchg
mov
or
or
push
push
enter
sbbb
aad
int
cmp
bnd
lock
mov
jae
jmp
push
dec
loop
sub
mov
push
pushf
add
pop
sbb
subl
xchg
adcl
stc
fmuls
push
dec
xor
jbe
pop
dec
sbb
imul
xor
shlb
cmc
lret
repnz
sahf
mov
pop
mov
or
fxch
dec
inc
in
and
jmp
sub
lret
inc
out
lds
jae,pn
imul
nop
movl
xlat
sbb
mov
xor
xor
push
jb
inc
mov
push
iret
xlat
xchg
mov
ljmp
ds
push
daa
mov
pop
adc
mov
iret
imul
sub
fstpl
stc
out
jg
movups
cmp
je
dec
daa
shl
fs
imul
cmp
push
insl
mov
pop
into
mov
pusha
add
cmp
push
push
dec
push
mov
mov
in
arpl
aas
shll
pop
add
jns
mov
std
jmp
subb
aas
cli
stos
rorb
in
test
cmp
push
mov
inc
or
in
gs
cwtl
lods
lock
add
imul
rcrb
xchg
mov
aaa
or
shl
dec
ja
sub
movsb
cmp
jns
add
adc
mov
cmp
gs
shrb
mov
or
sub
lcall
daa
stc
scas
daa
pusha
call
push
and
pop
repz
pop
addr16
mov
cmpsb
loope
cmp
jge
ffree
mov
mov
xchg
insl
or
adc
rclb
mov
outsl
push
mov
mov
cmp
or
add
movsb
mov
lret
fwait
mov
xor
cmp
adc
lahf
mov
ss
mov
jo
ss
repnz
xchg
and
addb
fwait
insb
movsb
scas
adc
xor
sub
cmp
test
arpl
push
adc
pop
or
aam
push
outsb
add
jb
inc
push
test
pop
nop
stc
jmp
loope
into
stc
fstp
cmp
shl
and
in
cmc
inc
inc
popa
sbbl
cli
imul
mov
pop
mov
pushf
push
jg
test
mov
ret
xchg
enter
cmp
ds
lahf
xchg
inc
dec
adc
daa
add
sub
and
notl
mov
or
mov
lods
dec
adc
cmpsl
or
in
orb
cmpsl
mov
sub
out
and
push
pop
rcll
nop
int
and
lea
pop
mov
enter
xchg
lea
cli
and
xchg
aas
adc
pop
jmp
stos
popa
fbld
and
repz
xor
xor
adc
int
dec
push
inc
cmpb
inc
stos
pop
xchg
sti
xchg
idiv
xchg
movsl
fdivl
pop
push
in
mov
xchg
int3
push
push
dec
mov
inc
sbb
cmp
rcrb
jo
popa
jns
dec
cmp
sub
jg
xchg
xchg
sub
notl
xlat
push
call
test
fildl
mov
rorb
fsts
dec
sbb
xchg
addr16
mov
ljmp
shrl
cmp
lahf
lret
roll
mov
dec
push
pop
popa
push
xchg
insl
rcrb
mov
sub
je
inc
mov
test
test
cmp
sub
push
pop
push
aas
scas
mov
jge
push
incb
mov
mov
add
dec
xchg
push
imul
ja
jnp
inc
inc
jl
mov
adc
pop
pop
adc
xor
cmpl
pop
inc
pop
sub
pop
push
xor
xchg
iret
xchg
pushf
rorl
pusha
popa
pop
sahf
popf
pop
dec
cmp
shll
adc
mov
mov
inc
mov
jnp
pop
les
lret
xchg
mov
or
push
sahf
sbb
addr16
jmp
dec
mov
xor
xchg
sub
cmp
test
push
mov
sbb
mov
rclb
aaa
push
loopne
std
jl
mov
insb
rorb
adc
add
push
push
adc
pmullw
mov
mov
cltd
ficompl
xor
imull
imul
dec
adc
lock
lods
cmp
das
rcrb
loop
add
add
add
xchg
mov
sti
fstp
ss
mov
mov
mov
push
xchg
inc
lds
push
addr16
or
sbb
or
dec
mov
mov
out
push
cmpb
andnps
pusha
sti
call
mov
or
jge
mov
in
and
push
xor
or
in
in
mov
mov
mov
loop
add
cmp
lods
mov
sub
cltd
and
push
inc
inc
cmp
rclb
in
mov
cmp
jb
mov
mov
loop
test
fcomps
mov
and
repz
push
add
jo
cmp
jo
inc
xchg
mov
call
cmp
cmp
xor
xor
mov
loope
pushf
mov
fstpl
enter
jmp
in
insl
icebp
sub
mov
out
sbb
cmpsl
xchg
inc
fcmovnu
pop
rcr
sub
or
inc
dec
adc
push
hlt
lret
pop
mulb
sbb
daa
cmp
sub
adc
inc
fadd
sub
test
mov
enter
inc
xlat
out
xchg
leave
xor
mov
xchg
inc
sarb
rclb
lods
popa
pop
movsl
loop
or
xchg
icebp
in
rclb
loop
push
adc
add
inc
mov
dec
outsl
adc
ret
mov
int
xchg
in
fs
decb
dec
mov
loopne
mov
aad
test
test
enter
inc
inc
gs
xchg
jnp
push
or
xchg
repz
mov
in
pop
int3
les
cli
leave
jmp
pop
call
fistl
imul
loope
into
call
dec
insl
inc
mov
inc
ret
cmc
lahf
pusha
fcom
jmp
cltd
pop
xor
mov
cltd
dec
push
jmp
jge
sub
addb
sbb
js
lods
push
jmp
xor
adc
add
pop
out
rolb
sub
stos
lds
cmpsl
or
aad
jo
iret
hlt
xor
jl
push
xchg
push
push
lret
in
insl
mov
imul
mov
adc
push
inc
test
mov
sub
jge
cmp
push
mov
in
pop
push
and
loope
sti
loope
and
into
cmpsb
add
mov
adc
cmp
or
bound
outsb
fnstcw
jge
push
jl
xchg
pop
sahf
pop
mov
mov
popa
imul
repz
sub
xor
adc
cmp
rcrb
xor
insl
xorl
in
jg
movsb
push
add
dec
and
sub
inc
lea
pusha
cmpsb
mov
scas
movsb
rcrb
pop
insl
sahf
insl
add
or
clc
sbb
outsb
nop
mov
inc
jae
sbb
hlt
and
aad
sub
in
movsb
add
pop
imul
push
mov
lods
std
pop
jl
push
mov
pushf
add
in
idivl
mov
or
and
mov
cmp
ret
inc
stc
lret
or
shr
jge
out
out
out
cmp
and
pop
and
shl
pop
adc
mov
lods
pop
sub
lahf
ja
xchg
sub
sbb
fcoms
out
cwtl
sbbb
rorl
and
daa
cmp
jecxz
outsb
mov
xchg
sti
rcll
adc
push
movsb
in
adc
inc
push
inc
ds
xor
fidivrs
mov
adc
popa
jp
loop
inc
jne
gs
jecxz
or
repz
aam
mov
xchg
test
xchg
mov
adcb
push
jbe
and
jb
mov
js
jl
or
sbb
js
cld
add
add
and
mov
aaa
iret
dec
xor
call
adc
pop
jno
je
mov
out
insb
jb
ss
xchg
pop
rcl
lock
add
xor
dec
mov
cmc
popf
fdivp
cwtl
ret
scas
and
scas
fidivrs
daa
jne
test
add
rol
push
sub
push
outsb
add
rcll
ds
mov
dec
mov
xchg
addr16
inc
jge
sarb
cmp
inc
mov
cmp
or
repz
aad
into
cmp
gs
mov
cwtl
jecxz
pop
insl
mov
gs
jle
push
lret
and
fildll
lods
lods
cs
push
sub
push
leave
repnz
xor
enter
scas
sub
pop
adc
nop
scas
shll
addr16
jge
cmp
neg
pop
xchg
ds
outsl
arpl
mov
dec
scas
jb
std
push
xchg
and
loope
faddl
sbb
pop
test
out
mov
jl
mov
sub
push
dec
mov
stos
xor
cwtl
sbb
xor
rorl
push
xchg
ss
push
psrlw
add
clc
and
adc
dec
fildl
shll
ljmp
add
lods
xor
and
clc
and
stc
repz
mov
stc
xchg
js
fdivr
arpl
mov
dec
arpl
aam
sub
cli
out
ljmp
xor
jmp
xchg
and
enter
dec
cmp
dec
pop
scas
movsl
lock
add
add
mov
icebp
jg
movsl
mov
add
cwtl
fistl
xchg
mov
cmp
mov
aaa
xchg
loope
jnp
mov
in
repz
gs
out
cmp
pop
pop
inc
psrld
cmpsb
or
dec
mov
or
arpl
test
add
adc
daa
dec
ret
or
rcll
cmp
icebp
cmp
aad
push
fldenv
rcr
mov
cmp
mov
repz
es
push
stos
and
sub
inc
repz
push
lea
iret
fisttps
and
inc
mov
or
dec
cmp
fisubrl
enter
int
ljmp
or
sarb
ds
pop
out
xchg
xor
adc
cmp
mov
je
cmpsl
push
sahf
incb
sub
mov
pushw
dec
scas
out
xchg
adc
dec
mov
dec
cli
maxps
aad
dec
mov
aas
int
mov
mov
pop
aas
xor
das
repnz
lahf
cli
aas
aam
or
dec
push
pop
fstps
pop
mov
js
jbe
pusha
ret
jg
pusha
divb
sub
cmp
lret
cmp
sahf
mov
jbe
push
rcl
inc
andb
movl
push
push
sub
jbe
push
or
mov
cmp
xchg
pop
xor
push
daa
jne
xchg
or
pop
inc
add
cmc
jle
sbb
mov
adc
cmpb
cmpsl
xchg
cli
pop
adc
bound
in
shr
loope
hlt
pop
adc
inc
pop
cmp
adc
inc
xlat
sbb
cmp
pop
test
call
adc
fwait
sbb
outsb
xchg
sbb
rol
mov
lock
jb
sub
loope
sub
xchg
xchg
dec
jg
mov
loopne
lock
jp
mov
mov
mov
mov
mov
sbb
push
arpl
fwait
test
pop
ds
or
adc
inc
mov
test
pop
les
fisttps
mov
cld
mov
mov
cli
outsl
or
jno
jbe
jge
daa
scas
icebp
outsl
or
xlat
mov
jg
cmpsb
mov
sbb
push
xchg
inc
pop
leave
pop
testl
leave
dec
mov
push
or
movsb
sub
and
jge
dec
push
jne
cmp
cmp
mov
das
mov
loopne
pushf
sub
js
cmp
sub
outsb
int
jnp
inc
pop
clc
mov
in
es
pop
lds
aas
push
xlat
push
lahf
mov
iret
das
or
pushf
stc
out
lcall
icebp
scas
enter
pop
xchg
dec
mov
lcall
add
movsb
mov
xor
lea
das
lds
nop
dec
imul
jge
mov
push
ficompl
mov
les
aaa
jb
out
fwait
adc
imul
repz
inc
sbb
dec
sbb
loope
jnp
or
repz
rol
adc
lret
push
fucomp
mov
ss
out
cmc
clc
xor
xor
mov
and
popa
push
mov
mov
inc
push
xor
mov
loope
ss
xchg
jo
arpl
pushf
in
sub
push
mov
out
ret
mov
pop
jmp
cmp
fldcw
cmp
insb
lock
in
pop
jae
add
lock
xor
popa
es
push
lods
and
add
sbb
sbb
cltd
sub
adc
xor
aam
cmp
mov
add
or
lret
mov
in
into
in
and
mov
jo
rcll
aad
pop
pop
sbb
inc
mov
shl
add
sahf
cmp
arpl
or
ljmp
shlb
test
jae
test
stos
mov
ljmp
jmp
into
or
xchg
cmp
pushl
or
jge
inc
int
lock
jno
and
aad
test
popa
mov
mov
scas
adc
ja
stos
xor
subb
lcall
xchg
shlb
push
lods
bound
in
les
push
adc
aas
daa
and
inc
cmc
lret
lahf
jge
ss
jl
push
aam
or
adc
pop
jl
push
je
inc
add
out
js
das
fcoms
lahf
mov
dec
test
sub
adc
adc
std
sub
insl
add
inc
into
sbb
gs
xor
les
mov
sti
sarb
mov
or
jno
pusha
and
add
jmp
mov
adc
cmp
push
sub
movsl
icebp
jne
sub
outsl
mov
aaa
cmp
mov
mov
sbb
xchg
out
ret
pushf
fwait
hlt
test
or
cs
and
or
cmp
cwtl
sti
jnp
mov
add
andb
add
and
popa
and
cmp
jae
mov
sbb
out
fidivl
xchg
cmpsl
mov
loope
daa
mov
push
mov
push
inc
cli
cmp
dec
pushf
dec
je
or
das
xor
insb
dec
adc
shlb
addl
leave
fidivrl
test
mov
mov
mov
mov
aam
pop
mov
add
xor
xor
lcall
xchg
mov
jl
and
insl
stos
mov
inc
push
add
push
or
and
stos
das
jo
cmpsb
dec
aad
lret
out
outsl
and
test
incl
push
inc
lock
inc
fcomi
insb
mov
jge
mov
adc
inc
cld
shlb
inc
adc
xor
andb
in
in
mov
popf
repnz
or
xor
jo
imul
or
cmpsl
pop
imul
rcr
jne
push
aaa
sti
out
push
xor
sbbl
push
aad
shl
cltd
xor
mov
sub
aad
sbb
mov
insl
fbstp
push
test
sub
imul
int3
cmp
mov
cmp
jecxz
daa
popa
jmp
int3
aaa
mov
lahf
mov
jb
push
mov
sub
jmp
mov
cmpsl
cmp
xchg
shrb
sbb
inc
je
fidivrl
cwtl
cmpsl
ja
fistpll
jge
mov
iret
ds
jo
gs
lods
or
mov
lcall
lahf
push
mov
pop
lock
shll
adcl
mov
dec
shl
lock
or
popf
adc
dec
aam
jb
fdiv
arpl
jno
lods
clc
cmp
xor
xor
lods
lret
add
sti
in
push
icebp
mov
sub
loopne
xchg
in
mov
dec
inc
lcall
mov
divl
inc
ss
je
movsb
lock
adc
sub
dec
push
icebp
pop
cmp
mov
and
mov
or
sti
dec
bswap
xorl
into
nop
inc
cmp
je
sti
shrl
outsl
jb
mov
mov
mov
idivb
dec
xchg
mov
xlat
mov
inc
inc
mov
mov
xchg
dec
outsb
and
sub
add
shlb
imull
fimuls
push
mov
leave
bound
pop
and
and
in
rcrl
out
xor
fldt
mov
lds
insl
mov
mov
mov
mov
xchg
pop
and
dec
pusha
and
lcall
mov
and
mov
loopne
in
jbe
fcmovnb
outsl
int
outsl
sbb
iret
rcl
mov
jl
xchg
rolb
jae
jg
jne
cmp
scas
mov
aad
cmp
xor
lods
fs
loopne
call
call
mov
pusha
shl
fstl
lret
mov
fisttpll
pop
xchg
push
test
cmc
gs
in
mov
push
xor
dec
pop
add
sub
cmc
imul
dec
js
mulb
xchg
sbb
lret
sub
mov
cld
fsubs
subb
xchg
lret
scas
cmpsb
push
jne
pop
shrl
jp
scas
lcall
pop
pop
mov
lods
pop
mov
push
stos
mov
push
adc
sarl
test
xchg
daa
stc
mov
dec
sub
adc
lock
aam
pop
xchg
cmp
sub
in
mov
inc
mov
adc
subl
xor
jb
arpl
push
mov
jnp
jo
dec
inc
cmpb
sbbl
and
xchg
dec
jbe
jle
or
repz
dec
fcomps
leave
adc
jb
leave
push
mov
cs
xlat
sub
adc
cmp
xor
sar
lret
lods
pop
xor
insl
daa
ljmp
pop
aaa
in
ds
icebp
orl
mov
shr
cmp
mov
mov
popa
add
sbb
dec
pop
push
lds
inc
ror
push
pop
test
mov
into
pushf
sti
and
add
test
arpl
shl
inc
mov
and
jp
dec
mov
arpl
roll
loopne
lahf
lock
rcrl
push
cmpsb
call
ss
mov
movb
adc
adc
add
rcl
test
mov
cld
outsb
mov
scas
dec
cmp
and
xor
xchg
push
shrl
bound
stos
xchg
mov
je
cmc
int3
push
mov
cmp
mov
adc
adc
xchg
mov
or
sti
push
push
mov
imul
daa
popf
fisubl
ret
sub
or
mov
inc
dec
in
push
xor
cmp
xor
dec
lret
push
dec
and
dec
xchg
iret
mov
jg
out
int
in
cmp
ds
mov
dec
clc
cmp
xchg
cmpsb
pop
repz
stos
repnz
or
ret
dec
dec
mov
out
popf
imul
loope
sarl
dec
insb
jecxz
inc
mov
dec
sti
mov
inc
inc
insl
je
dec
in
les
cs
xchg
movsl
xor
outsl
push
in
popa
aas
cwtl
iret
rolb
dec
add
or
sbb
lcall
sub
cmc
and
or
inc
fwait
jmp
sti
repz
fadds
sub
int3
dec
insl
or
add
nop
mov
loopne
xchg
mov
out
xchg
and
push
push
pop
daa
ss
scas
ja
movsl
das
xor
sub
mov
adc
mov
arpl
out
dec
jbe
movsl
jnp
xor
cmp
out
dec
jns
rorl
push
cmp
loop
xchg
andb
das
sub
jle
fistpll
pop
and
or
leave
cmc
and
in
int3
daa
jo
mov
ret
adc
adc
xchg
sbb
push
bound
mov
in
xor
xor
fcmovnbe
adc
push
pop
loope
scas
add
cli
sbb
push
push
mov
pop
fwait
mov
and
push
imul
mov
and
push
push
loop
mov
fisttps
dec
js
setle
dec
arpl
push
xorl
jecxz
lock
xchg
out
cmpsl
loope
xchg
frstor
jge
clc
lahf
lret
sbbb
rcll
xchg
lock
mov
push
mov
adc
or
lods
mov
or
sub
out
mov
imul
call
lods
pop
pop
outsl
mov
dec
sbb
or
sub
push
xchg
out
mov
test
popa
subb
push
fistpl
jo
push
xlat
sti
or
mov
adc
inc
insb
ljmp
pushf
addl
std
iret
sub
xchg
dec
mov
adc
pop
xlat
mov
cmp
out
sub
xchg
push
xchg
ret
subl
test
js
or
in
mov
testb
xchg
icebp
sub
xor
dec
icebp
add
dec
cmpsl
mov
mov
dec
or
js
jle
lcall
stc
icebp
outsl
dec
rolb
mov
or
stos
sub
jbe
xchg
aaa
xor
mov
jo
std
pop
push
iret
addr16
test
outsb
cmp
test
subps
jecxz
add
sub
test
pushf
mov
cmp
lds
adc
pop
loopne
inc
pop
adc
jno
and
aam
fsubp
jo
arpl
add
out
push
jnp
add
lret
in
scas
sub
adc
dec
lret
inc
rcll
push
cltd
loopne
pop
stc
sbb
pop
xor
lahf
push
jge
out
mov
int
imul
std
inc
cli
jne
and
call
or
icebp
dec
sub
out
adcb
pop
jne
add
dec
in
push
sub
inc
jns
fidivrl
mov
jmp
mov
mov
mov
flds
std
rcll
rolb
test
adc
mov
clc
xlat
dec
pop
push
and
sbbb
jo
mov
mov
paddusb
or
stos
les
xor
jae
mov
movsl
cmp
lods
push
push
add
cli
ret
inc
scas
lods
int
faddl
mov
sbb
sbb
mov
ret
aas
lods
cmovno
imul
in
in
mov
dec
push
mov
lods
es
test
jle
push
negl
dec
imul
mov
test
jl
and
out
mov
xchg
leave
add
outsb
xor
dec
cmp
xchg
cmp
mov
xor
arpl
inc
dec
movsb
in
stos
jle
or
xchg
pushf
aas
sub
pop
mov
mov
test
leave
add
jmp
inc
sbb
aas
out
xchg
sbb
lock
xchg
mov
repz
xchg
cmp
push
mov
mov
scas
cwtl
loop
arpl
aam
pop
xchg
out
cmpsb
dec
nop
add
jbe
adc
mov
subl
fdivp
cmp
inc
sbb
mov
test
mov
idivb
sub
cwtl
mov
adc
push
mov
cmp
imul
push
xchg
mov
sbb
mov
repnz
sub
push
and
pop
mov
je
addb
pop
add
jle
or
xor
push
sarb
xor
ds
sahf
jp
clc
fwait
sarb
pop
xchg
stos
arpl
fcmovne
push
lea
cltd
arpl
ja
and
pop
or
ret
cwtl
dec
and
mov
pop
jle
mov
lret
fistps
xor
adc
out
adc
xor
insb
pop
stos
sahf
add
fcmovb
test
mov
in
mov
adc
or
cmp
mov
push
popf
mov
cmpsl
data16
imul
std
or
jnp
clc
ret
scas
pop
xlat
adc
push
dec
mov
jne
add
fwait
fwait
inc
dec
push
outsl
xor
jno
push
gs
fsubrs
and
xchg
cli
add
adc
push
push
sub
sbbb
aam
les
mov
cmpsl
test
push
lods
mov
inc
lods
dec
dec
outsl
pusha
outsl
cwtl
mov
xchg
jmp
push
bound
push
pop
aam
bound
stc
jmp
daa
bnd
cmc
cwtl
or
jbe
cmp
or
sub
aas
sti
lahf
mov
out
and
lods
xor
dec
and
std
xchg
or
pushf
cmp
xchg
test
loope
mov
inc
and
imul
imul
cmp
stos
xchg
jnp
fildll
nop
ret
insl
sub
pop
fistpl
cld
lret
outsb
push
pop
jl
mov
das
mov
cmp
fsubl
mov
and
sub
jmp
mov
repnz
sub
fistpl
es
mov
sub
jl
jmp
pusha
mov
movsb
inc
int
in
pop
in
int
jg
cmc
or
stos
andb
adc
mov
dec
xor
pop
leave
lcall
sbb
jbe
mov
jmp
add
aam
or
dec
in
hlt
cmp
mov
push
data16
mov
stos
xchg
jb
lock
in
jb
dec
mov
cmpsb
cli
push
cwtl
icebp
div
aas
repz
cld
aam
mov
dec
mov
sahf
enter
sti
test
outsb
mov
mov
mov
in
cltd
mov
push
push
in
stc
jmp
push
jbe
out
jns
mov
mov
push
dec
sbb
xorl
jp
pushf
sbb
fs
andb
in
leave
adc
jge
mov
xor
repnz
sbb
insb
pop
pusha
insb
sbb
test
push
and
mov
into
pop
sbb
dec
cltd
out
mov
jno
mov
or
add
push
cmp
pop
js
mov
fbstp
push
fsubs
dec
call
jne
fdiv
push
fcoml
pushf
dec
sbb
and
out
adc
arpl
lods
push
jge
jae
in
xor
jno
repnz
cmp
imul
xchg
push
inc
lock
scas
inc
cmc
dec
test
dec
in
hlt
subps
shlb
mov
rolb
dec
mov
sahf
call
inc
loope
stos
movl
aad
push
dec
inc
ljmp
mov
subl
xlat
add
sub
les
or
mov
fisttps
pop
aad
sub
shll
pop
sbb
sbb
aam
fbld
test
or
sbb
cmpsl
std
out
adc
cmp
out
scas
mov
lcall
lea
xlat
aad
fimull
mov
popf
pop
jecxz
stos
xchg
pop
mov
ljmp
xor
loop
cli
xlat
xor
jl
aam
cli
int
mov
daa
ret
pop
push
inc
adc
shll
jg
mov
or
add
lahf
dec
call
or
jne
icebp
cmp
dec
sbb
sbb
idivl
add
and
repz
outsb
shll
jle
pop
and
fdivl
xlat
pushf
sti
xchg
cld
and
sub
push
jmp
in
mov
pop
pop
add
xor
sbb
loop
push
push
sbb
pop
subl
cwtl
lret
xlat
cmp
mov
gs
addl
dec
push
mov
mov
orl
mov
jb
or
mov
xor
dec
push
pop
xorb
or
das
hlt
mov
ss
popa
lds
insb
adc
mov
inc
jmp
or
sti
or
roll
sahf
push
stos
popf
sahf
test
jno
aad
sbb
add
sub
pop
popa
sub
fs
imul
cli
adc
repz
icebp
ss
sbb
push
out
jae
aam
rolb
stos
push
and
push
mov
pop
shlb
dec
inc
mov
sbb
icebp
add
push
sub
ja
cmp
add
or
pop
dec
mov
fisubl
sub
int3
int
and
lds
bound
inc
repz
mov
int
lds
jae
push
js
popa
lea
xchg
xor
sbb
push
sbb
cmp
sub
out
and
dec
lods
mov
push
inc
scas
dec
push
fiadds
movsb
xlat
incl
xchg
and
imul
insb
sbb
enter
or
jl
jnp
mov
xchg
push
cmc
mov
lods
lock
mov
int
mov
xor
inc
pop
cmp
pusha
inc
roll
dec
cmp
sub
pop
popf
je
icebp
sti
arpl
ss
xchg
jle
sbb
cmp
xor
push
xchg
cmp
pop
dec
sbb
push
fisubrs
out
out
in
insl
in
outsb
push
mov
xor
int
jnp
pop
bound
mov
adc
aaa
push
mov
icebp
push
inc
mov
fmul
aaa
xchg
push
repz
hlt
divl
les
add
xor
stc
and
jge
mov
jns
add
mov
dec
push
inc
push
sti
and
stos
xchg
push
test
jg
repnz
pop
sub
movsb
enter
fildl
or
gs
ss
push
mov
outsb
fcoms
fstps
fadds
shrb
loop
jl
stc
arpl
xlat
dec
jnp
loop
jbe
aam
aad
jbe
lret
cmc
and
pop
sbb
call
imul
mov
dec
or
or
mov
ret
push
add
inc
out
mov
outsl
cmp
leave
movsl
imul
lahf
pop
dec
mov
sbb
stos
js
shl
movb
cld
inc
push
fsubrl
icebp
mov
addr16
ss
fistpl
mov
fnstcw
xor
xchg
imul
sub
cmpsl
xlat
pop
stos
loop
mov
repz
push
ret
or
pop
pop
sub
mov
pop
out
xor
dec
ret
cmpsl
dec
or
inc
shlb
jmp
mov
daa
jnp
mov
mov
and
jae
mov
loope
xchg
xchg
and
mov
ds
inc
cwtl
lcall
out
cmp
mov
add
jl
shrb
inc
add
inc
es
stos
cs
inc
jne
fs
bound
sub
fmull
sub
dec
cmc
push
ljmp
mov
fimull
roll
xchg
push
sbb
xor
xchg
sbb
fsubrl
sbbl
jne
fs
imul
orb
ljmp
push
mov
sub
mov
sub
mov
lods
dec
and
jl
jnp
cmp
out
cs
scas
push
pop
and
loop
sbb
pop
add
pop
mov
rclb
sub
rcrl
lock
das
pop
mov
and
cmp
adc
jg
pop
pop
sub
test
shll
inc
cmpsl
mov
rol
jle
push
negl
fisubrs
loope
das
xlat
ror
sarb
adc
in
pop
scas
roll
es
ret
xorl
pop
inc
fs
test
hlt
into
sar
mov
clc
and
stc
xchg
aad
mov
sarb
and
xor
inc
subl
sarb
sub
dec
imul
shrb
push
ret
imul
push
pop
push
push
mov
and
and
clc
add
push
inc
cmp
int3
push
aaa
pop
push
ficoms
ss
xchg
fdivrs
arpl
dec
insb
aas
pop
mov
aas
lea
adc
scas
sub
movsl
imul
loopne
ja
add
bsf
jecxz
adc
xor
loop
jmp
insb
imul
gs
jno
aad
mov
es
stos
dec
pushf
adc
pop
ret
mov
jae
repz
mov
in
roll
adc
gs
in
clc
dec
in
or
xchg
movsb
lods
dec
sbb
sbb
xor
fwait
insb
adc
lods
rcll
rcl
js
xor
pop
insb
xchg
xchg
mov
mov
call
sub
loop
mov
push
mov
lret
outsl
call
pop
mov
loop
ljmp
pop
cmc
mov
mov
jae
sbb
test
sarb
inc
pop
cmp
repz
cmp
hlt
inc
sub
lds
mov
jns
pop
rcrb
mov
or
add
iret
xchg
pop
call
mov
sbb
loop
stos
leave
push
popa
mov
inc
or
int3
sub
stc
scas
mov
or
aas
test
push
jne
jbe
mov
fistpll
dec
push
stos
outsl
cli
sub
pop
in
pushf
xor
or
mov
in
mov
push
repz
sahf
xchg
rcrl
xchg
out
pop
sub
xchg
inc
cmc
or
lods
adcl
or
and
xchg
lods
fldl2t
sub
lahf
in
ffreep
lea
push
adcb
or
mov
mov
and
enter
sbb
xor
adc
dec
push
scas
or
mov
fs
outsl
sbb
adc
insl
pushl
pop
not
push
lcall
jbe
inc
movsb
mov
lods
lcall
inc
push
mov
gs
xchg
mov
jle
xlat
xchg
cmpsb
pop
dec
fwait
jbe
pop
push
divl
lds
movsl
lcall
cmpsl
push
lahf
add
in
dec
lret
mov
ja
sti
add
mov
lret
add
inc
das
dec
cltd
adc
and
dec
jns
es
pop
jns,pt
pusha
pop
fsubs
add
mov
xchg
das
cmpsl
rcrb
loopne
sub
xor
sub
and
jle
add
std
fidivs
out
mov
jno
loop
subl
pop
push
sarl
cmp
pop
and
sub
or
or
test
std
pop
enter
mov
add
fisubrl
jo
or
pop
sbbl
ja
mov
int3
outsb
sbb
inc
jne
nop
clc
jge
and
fstpl
or
push
in
test
jnp
mov
xor
inc
aam
adc
ss
in
dec
outsb
inc
mov
mov
mov
insl
add
sbb
pop
sbb
pusha
sub
and
mov
shll
test
scas
pop
in
scas
popf
xor
jg
pop
sub
inc
outsb
dec
dec
pop
dec
and
mov
cmp
out
call
daa
cli
inc
or
sub
and
lar
xchg
repz
adc
mov
stc
push
ret
addr16
mov
andl
mov
xchg
adc
mov
and
add
mov
jmp
mov
dec
mov
push
or
jnp
xchg
loopne
or
jle
dec
lea
bound
mov
xchg
das
call
mov
jb
adc
xor
lds
adc
dec
push
test
clc
xchg
out
adc
pop
add
pop
jmp
shrb
mov
mov
push
sarl
pop
mov
jbe
shr
jle
jmp
add
das
add
sub
lret
aaa
and
lahf
jns
jnp
inc
xlat
xlat
cmpsl
aam
fwait
and
mov
mov
mov
adc
pop
cld
in
enter
in
xor
and
lret
or
enter
push
pop
jno
lea
push
arpl
lock
jecxz
jns
pushf
test
lret
int
xor
leave
ds
sub
repnz
nop
and
mov
xchg
xchg
fwait
ljmp
imul
sbb
je
imul
shlb
rorb
scas
mov
mov
push
xchg
jecxz
mov
fdivrl
into
loopne
in
xor
pop
ret
imul
int3
sub
dec
movsl
inc
lret
or
dec
dec
add
and
push
xor
add
sahf
stos
jnp
and
jne
jns
hlt
fistpl
or
repnz
hlt
xchg
push
xchg
fnstcw
or
mov
xor
movsl
das
pop
repz
fistpl
pop
pop
ret
test
sbb
pop
sar
xor
shr
loop
jp
ficoml
jnp
out
test
sbb
jl
and
rcrb
adc
cmp
es
mov
cmp
mov
cld
sub
loop
jno
lods
xchg
into
movsl
stc
in
popa
cmp
pop
mov
dec
add
push
sti
xor
xchg
cld
inc
lahf
das
inc
fmuls
hlt
repz
ss
jae
mov
adc
mov
addl
sbb
add
aam
push
cmc
lods
xchg
dec
cmp
push
inc
mov
adc
rcrl
int3
stc
inc
mov
or
adc
adc
shlb
adc
cmpsl
dec
jle
lea
lods
jae
jge
inc
and
stc
jo,pt
jbe
fs
jno
or
out
mov
jb
rclb
les
fwait
pop
xchg
imul
test
cmp
in
dec
jecxz
and
xlat
lahf
xor
icebp
pop
dec
jbe
loop
outsl
repz
std
cmc
jecxz
cmp
cmpsl
jl
aad
jle
daa
test
pop
mov
insl
fs
sub
cld
lcall
or
add
scas
mov
jl
data16
sub
lcall
outsb
push
ret
addl
sbb
pop
retw
add
pop
mov
mov
cmp
stos
stos
test
into
mov
and
add
mov
mov
leave
imul
in
fmull
ds
adc
aas
push
mov
mov
adc
inc
adc
lea
add
or
xor
mov
pop
shll
das
mov
push
cmpsl
les
divl
popf
out
sbb
inc
mov
sbb
push
mov
jbe
sti
xchg
pop
test
lock
dec
pmuludq
inc
mov
inc
scas
int3
std
xchg
fcoms
cmp
repz
out
or
cli
shrb
adcb
push
scas
aad
mov
sub
outsl
sbb
pop
movsl
aas
imul
dec
out
mov
lret
adc
xchg
out
ss
shl
js
popf
sub
dec
push
popl
push
aam
xchg
push
ficomps
jnp
xchg
cmp
out
add
or
jle
or
cmp
lods
fwait
mov
imul
fistpll
push
xchg
cmp
inc
out
popf
cmpb
or
jmp
mov
sbb
sub
jge
stos
shrb
mov
sarl
push
arpl
inc
xchg
mov
subl
push
aaa
dec
in
scas
mov
loopne
pop
fs
mov
sub
lea
popa
sbb
jb
cs
fnsave
data16
das
outsl
inc
pop
add
daa
sbb
gs
sub
mov
push
xchg
push
mov
fcmovbe
xchg
adc
inc
xchg
jecxz
stc
mov
inc
sbb
mov
fwait
inc
sbb
xor
lea
out
aad
jne
outsb
gs
cmpl
sub
sbb
mov
dec
and
push
shlb
popa
fldt
popf
ss
xor
int
sub
les
aad
pop
loop
sub
mov
dec
aam
ljmp
pop
fstpl
mov
or
push
mov
and
cmpsl
loop
push
iret
popa
mov
mov
cmp
dec
aad
ja
iret
sbb
xchg
cld
jmp
push
inc
icebp
das
mulb
xor
jbe
iret
sub
add
lahf
mov
scas
ja
push
cmp
add
and
shll
pop
jle
icebp
sbb
fwait
xor
mov
xor
fistpl
lcall
int
sub
and
jmp
xchg
push
mov
test
cmp
adc
mov
test
fwait
jp
fs
mov
cltd
jnp
inc
dec
push
nop
sub
imul
and
mov
or
lods
push
inc
mov
out
jmp
push
outsb
pusha
loop
popf
popa
mov
cs
xor
imul
movsl
jne
xor
add
test
mov
add
cmp
lods
inc
push
shrl
mov
aaa
cli
mov
ret
dec
arpl
daa
clc
ljmp
and
mov
fndisi(8087
push
push
inc
in
fstl
insl
mov
es
sub
sahf
pop
ja
jno
push
in
add
enter
jae
mov
aas
sub
rep
xlat
sbb
or
js
es
sti
jnp
bound
xchg
iret
cs
stc
lret
dec
leave
ret
push
sbb
mov
or
cli
xchg
push
add
push
cmp
dec
iret
cmc
repz
andb
cmc
inc
mov
push
sbb
outsb
outsl
inc
clc
pop
repnz
sahf
popf
sbb
adc
pop
push
fs
fstl
int
jg
jb
push
pushf
test
sbb
jge
jae
je
push
aam
ss
add
add
cwtl
out
mov
jecxz
fwait
ds
xchg
jecxz
shl
push
add
test
mov
lcall
xor
jnp
enter
dec
xchg
dec
mov
and
push
pop
mov
loop
mov
jl
sbb
jg
xchg
out
and
xorb
outsl
mov
or
cld
dec
jle
xchg
add
push
imul
imul
sbb
jecxz
loopne
pop
outsl
out
fsubr
in
inc
outsl
lods
xor
call
and
push
pop
clc
xor
jb
and
lds
push
cmp
xor
and
sub
inc
notl
aaa
aaa
icebp
fstps
sub
aad
orl
dec
call
sub
push
mov
movsb
mov
and
popf
or
push
ljmp
dec
les
sub
xor
fisttpl
insl
insb
jne
jge
aas
arpl
pop
adc
imul
xor
mov
push
xor
jnp
cwtl
inc
mov
xorb
sub
imul
in
xchg
xor
cltd
pusha
popl
fidivs
push
mov
mov
scas
or
mov
icebp
jmp
cmpsl
movsl
mov
jle
jae
inc
push
fnstenv
divl
push
mov
mov
xchg
leave
aad
into
push
inc
sbb
outsb
mov
inc
fldenv
sbb
rcrb
cld
push
imul
sub
push
dec
push
outsl
mov
int3
gs
mov
cmpb
mov
push
sbb
fdivrs
cmpl
jl
adc
incb
pop
mov
push
xchg
sbb
cmp
cmp
xchg
cmp
jo
pop
mov
popa
cmpsl
test
push
jmp
insb
inc
push
xchg
dec
pop
addr16
mov
fwait
pop
jnp
aad
mov
push
push
pop
adc
sub
jae
or
fbld
stc
adc
pop
lods
loope
inc
mov
add
inc
sbb
pop
cmp
jecxz
outsl
aad
jae
jns
cmpsb
add
lods
lea
mov
not
enter
add
popf
into
xor
roll
pop
aaa
divl
pop
std
xchg
sahf
jp
or
pop
lcall
popa
rcl
cld
xchg
cmp
int3
out
add
aad
aam
inc
testb
fnstcw
pop
jae
std
inc
sbb
in
lds
pop
out
mov
sbb
sti
and
mov
imul
sub
ljmp
fadd
shlb
add
jmp
push
aam
jnp
xor
add
cs
aad
fdivrs
jnp
and
lea
fimuls
rcr
cmpsl
xor
adc
leave
jle
push
inc
lahf
popa
test
in
cmp
adc
fucomp
nop
out
outsl
xchg
in
mov
mov
pop
mov
leave
push
adc
push
mov
pop
mov
adc
mov
xchg
jne
push
inc
stos
xchg
xchg
xchg
jnp
out
or
arpl
pusha
push
repz
xchg
sub
jl
push
mov
sub
movsl
cmp
mov
loope
pop
rorb
mov
mov
imul
aaa
loop
cmp
mov
cmp
push
cltd
mov
or
dec
imul
or
icebp
or
icebp
sti
push
mov
nop
repnz
sbb
cmpsl
cwtl
xchg
or
sbb
jo
mov
xor
call
push
inc
xor
lahf
jecxz
rcrl
iret
add
repnz
insb
inc
std
and
out
addb
movsb
jno
adc
sahf
dec
mov
fwait
aad
rorb
sbb
dec
out
inc
inc
sahf
cwtl
xor
jnp
fldenv
mov
pop
fisttps
mov
fildl
dec
into
adc
sahf
cli
sub
sarb
and
shrb
mov
push
pop
test
ja
fldz
gs
pop
mov
fisttpll
jle
adc
lahf
mov
cmp
call
test
leave
add
sbb
es
jae
sub
scas
xor
adc
and
gs
cmpsb
imul
icebp
push
add
xlat
xchg
inc
fwait
mov
das
xchg
test
add
adc
and
mov
arpl
jns
into
icebp
js
aaa
das
dec
pop
mov
add
or
fwait
mov
push
mov
ror
cs
fidivrs
or
lret
sub
xchg
sbb
or
jmp
je
xor
and
ficomps
daa
add
stos
mulb
inc
sbb
inc
sbb
dec
int3
mov
push
shrl
xor
inc
sub
out
roll
push
jb
outsl
rcll
fadd
ficoml
dec
dec
jge
fadds
enter
fsin
mov
and
ljmp
imull
sub
es
xchg
insb
xchg
dec
cmp
push
mov
ret
push
mov
daa
pop
mov
push
dec
jg
xorl
scas
cmpsl
sbb
aam
adc
xchg
dec
lods
adc
push
pusha
enter
cmp
push
mov
sub
pop
dec
add
je
fdivrs
sbb
outsb
shll
mov
xchg
or
sub
dec
roll
push
imul
out
jmp
stos
push
cmp
in
scas
mov
and
inc
mov
sbb
push
and
cmp
jne
test
pusha
fldl
lock
xchg
push
mov
test
and
dec
inc
scas
cwtl
mov
add
test
add
push
js
jecxz
cmc
xchg
add
cli
lcall
aas
in
cwtl
sbb
subb
and
jecxz
mov
mov
sbb
rorb
pop
adc
cmpsl
pushf
xor
push
mov
jo
dec
test
xchg
add
mov
push
mov
dec
cld
and
in
scas
mov
enter
insl
mov
fisttps
adc
mov
das
mov
in
add
out
pop
mov
sub
dec
in
pop
cld
imul
subb
movsl
into
repz
std
mov
jp
leave
bound
push
jae
rclb
leave
push
dec
into
pop
add
faddl
inc
cmc
and
sub
sbb
pusha
aaa
xor
jl
push
mov
fwait
fs
mov
repz
pop
clc
mov
xor
sub
or
cmpsb
jne
sbb
imul
shrb
ret
sbb
int
clc
jno
jmp
and
ss
mov
loope
sarl
dec
push
sbb
inc
sbb
int3
push
and
push
pop
or
cmp
test
mov
std
sbb
xchg
jl
dec
pushf
fcmovnu
js
xor
mov
idivl
mov
loop
adcb
test
aaa
lret
or
and
repnz
push
testb
mulb
cmpsb
sub
mov
pop
movsl
sub
cmpsl
or
push
pop
add
inc
in
fs
clc
lods
push
pop
stc
jbe
push
sub
xor
jge
xchg
shrl
push
sbb
dec
and
pusha
mov
stos
frstor
lret
outsb
sarb
icebp
adc
repnz
xchg
into
xchg
jne
outsl
cmpsb
mov
nop
rolb
cltd
sbb
mov
pop
jge
das
es
sub
fstps
pop
sub
cmp
push
jg
or
outsl
in
gs
pop
mov
out
test
test
lds
mov
gs
mov
lea
jp
push
js
callw
scas
add
shll
push
xorb
cmp
hlt
sti
and
stc
xchg
hlt
mov
lock
and
mov
pop
popf
sbb
sub
roll
sub
push
lock
xchg
xor
rorl
test
addr16
jp
cli
mov
stos
arpl
inc
shlb
stos
jb
dec
add
lcall
push
pop
ror
mov
adc
add
pop
jbe
sbb
stos
sub
inc
js
pop
mov
dec
mov
cwtl
dec
andl
stos
lock
push
in
xchg
fcompl
mov
or
cmpl
cmpsb
cmpsb
jmp
push
in
push
mov
push
jl
idivl
rorb
fld
add
mov
sub
inc
pop
bound
xchg
repz
jns
popa
add
sub
daa
push
mov
es
bound
add
push
pop
jg
mov
adc
sub
or
inc
lahf
sub
iret
rcr
gs
fistpl
sub
mov
cmp
sti
inc
adc
jg
xor
push
push
ljmp
mov
rcr
push
mov
into
add
call
shrb
xor
cwtl
xchg
fcoms
dec
pop
pusha
lret
outsb
push
int3
push
push
out
das
cmpps
addb
add
or
std
push
pop
test
es
xorl
jge
xorb
pusha
cmp
cltd
dec
cli
xchg
push
ss
jg
mov
mov
clc
mov
testl
xchg
shlb
das
mov
mov
xchg
sarb
rcll
repz
subl
and
and
xchg
lds
push
jno
push
lock
pop
mov
xchg
mov
add
sbbb
mov
pop
jg
sub
pop
adcl
fcoml
add
lahf
adc
test
and
dec
jle
shlb
push
lds
loopne
stc
lret
mov
push
add
mov
dec
sbb
ss
das
js
pop
mov
pop
mov
ljmp
dec
inc
inc
cmpb
pop
decb
je
pop
lret
jl
sbb
mov
lds
les
ja
mov
mov
inc
popa
mov
cmp
scas
dec
push
jbe
push
or
inc
arpl
pop
sbb
sub
xchg
dec
xchg
push
sub
adc
or
sbb
mov
push
pusha
jmp
jl
or
push
xor
lods
ja
and
pop
loopne,pn
adc
mov
jbe
inc
jl
add
xor
insl
sub
popl
push
jmp
sub
pop
push
lods
imul
das
gs
jg
mov
mov
inc
xchg
int3
lock
in
mov
adc
cmp
adc
inc
lret
jno
adc
repz
decb
sbb
and
sarl
lcall
addr16
addr16
and
test
push
popa
lea
push
push
sti
pusha
jne
rcl
mov
jle
adc
push
daa
xor
inc
mov
fimull
sub
jmp
or
sub
outsl
mov
cli
mov
insl
loop
mov
outsl
inc
pop
dec
cmp
add
or
jb
and
inc
pop
jge
inc
into
jo
sub
pop
test
cmp
dec
inc
in
xchg
movsl
and
add
pop
xchg
pop
and
lock
pop
stos
mov
cmp
mov
mov
out
add
xor
cmpxchg
sub
adc
sbb
sub
cltd
or
imul
cltd
pop
push
stc
add
push
js
xchg
jns
adc
jge
insl
cmp
test
mov
cmp
inc
es
dec
inc
mov
pop
jmp
dec
add
mull
push
call
fisubrl
adc
push
aaa
ljmp
dec
push
jl
ljmp
mov
push
push
insl
jl
orb
mov
adc
jecxz
pop
or
adc
and
das
add
mov
pushf
xchg
mov
jae
outsb
popa
std
fldcw
xorl
or
pop
mov
or
mov
push
push
and
loop
add
stos
cmpsb
push
jmp
aaa
lock
inc
fldl
sbb
sahf
mov
sub
loopne
sub
xor
jb
inc
cs
cld
jo
lods
test
daa
cli
dec
inc
in
push
mov
lock
mov
cld
mov
addr16
mov
jge
jg
movsb
ja
fists
push
loopne
call
jl
jl
pop
dec
test
mov
scas
mov
push
mov
dec
pop
movsb
push
mov
aam
sub
or
sbb
xchg
push
mov
jge
mov
test
jmp
movsl
aad
sub
shll
sub
outsb
int3
jo
pusha
popa
xchg
loop
lods
xchg
jno
or
out
push
fdivr
mov
stc
addr16
je
aas
or
daa
aad
push
xchg
push
int3
mov
pop
sbb
adc
cmp
fnstenv
xchg
ds
pop
mov
jbe
cmc
jmp
jne
sub
mov
repz
dec
jecxz
out
inc
lret
sbb
adc
data16
dec
lods
dec
mov
lds
hlt
push
in
pop
pop
scas
enter
mov
pop
jmp
decl
push
das
int3
xchg
fidivs
clc
mov
dec
inc
xor
mov
sub
cmp
hlt
outsl
xchg
inc
fdivr
decl
test
lods
inc
pop
stos
aaa
jl
jp
pop
mov
mov
sub
cmp
mov
sub
out
hlt
push
in
push
jg
call
mov
jecxz
xchg
and
rorl
mov
popa
dec
fxch
shrb
in
popf
setg
sbb
cwtl
inc
jl
sahf
xor
mov
pop
xor
jmp
push
fnstsw
in
shld
test
insl
shlb
arpl
enter
loop
insb
cmp
sahf
out
cmp
fldcw
push
je
daa
and
sbb
xor
add
jg
and
mov
push
add
out
lds
add
mov
imulb
sub
jl
andb
or
xor
mov
scas
xor
int3
cli
and
fbstp
pop
pushf
bound
jno
in
jp
mov
xchg
sub
push
fidivrs
xchg
js
push
or
sbb
shrb
or
bound
sub
lret
sbb
xor
pop
add
cmp
lods
push
inc
clc
pop
std
sub
adc
xchg
cmp
xchg
push
and
mov
push
outsl
mov
cmp
sub
into
or
or
inc
jae
and
pusha
sub
cmp
xor
insl
mov
pop
mov
pop
in
insb
movsb
movsb
std
mov
push
push
cld
pop
scas
push
cmpsl
testl
pop
inc
mov
into
xor
mov
insl
popl
inc
xchg
jb
fisttpl
jge
cli
test
add
ret
push
and
xor
loope
in
imul
sti
xor
hlt
in
sub
and
das
movups
ja
fistl
inc
int
pop
nop
add
aaa
cmp
xchg
pop
mov
ljmp
xor
lods
subb
shl
imul
jecxz
cltd
jnp
xor
mov
jne
std
lahf
xor
mov
and
inc
ret
jmp
loope
mov
shlb
aas
arpl
out
xchg
pop
cwtl
inc
leave
push
movsb
xor
mov
test
mov
icebp
and
adc
test
and
jge
xchg
mov
push
mov
div
arpl
sbb
xor
sbb
xchg
add
into
inc
jne
cltd
xor
xchg
aad
adc
add
add
sbb
xor
xor
mov
xchg
iret
inc
lods
lret
sub
lods
fstpl
jne
or
jl
mov
cld
sub
fwait
or
xor
jne
enter
mov
mov
jg
jne
insb
xchg
insl
cmpsl
sbb
and
inc
dec
shrl
test
ljmp
fdivl
rcr
nop
pop
shr
dec
ficoml
sub
sub
push
enter
push
cmc
and
out
lret
insb
std
into
cmp
xorb
mov
jecxz
mulb
ret
pusha
fdivl
add
dec
cmp
sub
les
or
add
lret
mov
cmp
push
mov
es
je
jb
cmc
movsb
hlt
loop
mov
pop
ljmp
mov
sti
push
dec
icebp
loope
push
lods
insb
cmpsb
jle
sbb
push
jge
les
dec
jne
lock
dec
adc
icebp
les
mov
dec
ror
or
and
and
cmc
fcomps
adc
cld
das
mov
hlt
pop
lock
sbb
jbe
xlat
in
mov
into
aaa
adc
mov
cmp
cmp
sbb
test
pop
adc
lds
scas
sub
clc
xor
mov
nop
mov
mov
cmpsb
xor
pop
rorb
cmpsl
push
push
adc
or
xor
jge
adc
pop
mov
sbb
push
stos
in
adc
xor
jne
mov
int3
pop
cpuid
in
pop
cmp
das
lock
jl
push
pop
mov
jle
js
xchg
push
fstpt
dec
inc
pusha
outsb
xchg
pop
lds
data16
ss
push
leave
push
sub
sbb
arpl
jo
mov
pop
mov
lods
and
pop
popa
or
and
jle
xor
xchg
mov
push
icebp
lret
in
movsb
fwait
sahf
ljmp
push
orl
sub
add
inc
test
testb
aam
insl
or
aad
xchg
jo
add
repnz
add
ja
or
out
jae
add
xchg
shr
adc
pusha
jo
insl
xchg
jns
and
sbb
or
xchg
lret
mov
arpl
jo
xchg
push
or
ljmp
mov
xorl
sbb
add
inc
jp
int3
js
lock
shr
push
out
lods
and
lods
call
imul
call
dec
and
inc
je
adc
repnz
gs
jb
in
imull
xchg
sti
mov
rcr
push
nop
xor
sub
fiaddl
fisubl
mov
or
leave
push
pop
mov
arpl
inc
into
dec
repz
push
pop
and
sub
icebp
pop
xor
cmp
loop
rcl
xchg
add
xchg
addr16
je
stos
test
das
test
call
dec
insl
pop
or
out
push
mov
mov
outsb
cli
scas
cmc
xor
cmp
pop
mov
mov
mov
outsb
dec
repnz
fprem1
in
call
inc
loop,pn
cmp
jae
ss
rorb
popa
sti
pop
fsts
add
push
pop
mov
mov
inc
in
push
test
pushf
mov
pop
xor
into
dec
mov
sub
xchg
loope
data16
insl
sbb
or
push
stos
imul
leave
sub
xchg
mov
shlb
or
lahf
dec
and
sub
dec
cmp
aas
mov
push
test
lods
repnz
add
mov
pop
pop
mov
mov
jb
and
push
jle
ss
aad
add
stc
lds
cmp
mov
enter
or
xchg
lret
insl
icebp
ss
sbb
pop
pop
das
xchg
inc
push
pop
mov
mov
nop
and
les
sbb
shlb
outsl
into
mov
pop
addr16
andl
mov
pop
fs
loope
push
pop
mov
and
mov
shll
cmpsl
es
mov
mov
cmc
sbb
icebp
push
push
std
jge
call
je
stos
out
inc
sub
xchg
rcrb
lods
imul
leave
insl
mov
fwait
jnp
daa
loop
fldcw
xchg
pop
leave
fidivs
ljmp
xchg
aad
nop
lds
inc
scas
lock
or
stc
push
fbld
lods
mov
inc
cmp
xlat
sbb
das
dec
mov
xchg
lea
imul
repnz
or
stos
mov
rclb
jecxz
imul
mov
sub
or
add
outsb
adc
or
aaa
inc
sbb
mov
cmp
pop
clc
int
push
or
jge
in
mov
jne
sti
movl
or
xchg
or
inc
xlat
push
in
call
pop
sub
fdivl
inc
sti
cmp
repz
adc
movsl
push
mov
pop
ret
xchg
dec
cmp
dec
jecxz
cmp
mov
jmp
mov
mov
cmc
pusha
push
hlt
lret
xor
push
cmp
les
adc
test
test
inc
aad
rcrl
adc
fucomp
cli
hlt
test
mov
cmp
adc
push
jno
js
int
pushf
fists
sbb
pop
inc
push
dec
and
rclb
andl
fisubrs
loope
and
aas
leave
mov
mov
dec
cmp
xor
mov
adc
out
jge
xchg
sbb
inc
or
or
jp
iret
stos
loope
and
das
mov
sti
in
fucomp
mov
jns
lock
xchg
pop
and
inc
dec
outsb
sahf
leave
jmp
leave
imul
dec
mov
addr16
and
mov
jecxz
xorb
fisubrl
insl
in
pop
xchg
push
fstps
test
pop
lahf
loopne
jle
repz
in
pop
enter
pop
mov
add
add
imul
addr16
xchg
int
arpl
fmuls
loopne
decb
cmp
cmc
out
jg
enter
fs
dec
hlt
scas
mov
cltd
xlat
mov
jb
jg
adc
fisttpl
cli
xlat
pop
pop
test
jg
mov
sub
ljmp
and
sbb
and
das
push
jmp
insl
jle
adc
shlb
ret
mov
cmpsl
add
fldcw
mov
xchg
jb
std
jecxz
mov
jge
gs
cwtl
es
mov
scas
pushl
adc
addr16
filds
pop
sub
add
cmp
ss
pusha
sbb
sbb
clc
in
xchg
push
stc
out
mov
sarb
in
push
push
xchg
test
test
test
cmp
gs
aad
test
or
fisttpll
int3
jecxz
inc
dec
jle
jo
pop
les
jmp
jne
adc
int
iret
pop
pop
in
pop
pop
cli
jge
pop
adc
shll
push
cmpsl
xor
jecxz
scas
jb
sub
cmp
adc
daa
and
out
xchg
push
sbb
mov
mull
mov
inc
jl
xchg
mov
lock
and
push
lret
jne
sbb
jno
scas
cs
inc
adc
sub
inc
adcl
inc
cwtl
dec
int
cmpsb
mov
cmp
xor
pop
jecxz
not
pop
leave
popf
ss
and
fdiv
push
gs
notb
in
aam
mov
xchg
push
lret
pop
pushf
imul
iret
das
icebp
pop
ret
pop
cmp
dec
arpl
push
rorl
mov
mov
adc
jle
lret
int3
and
test
pop
shlb
bound
les
sub
notl
cmp
push
cmc
sub
out
and
aad
ss
cwtl
aaa
ret
cmc
pushf
shl
test
mov
in
das
int3
inc
jg
out
mov
bnd
sahf
js
gs
mov
clc
sbb
adc
out
fdivrs
data16
inc
pop
push
jo
and
xor
cmp
into
pop
mov
adc
sub
cmp
and
xorb
adc
pop
lret
repnz
pop
xchg
outsl
and
fadd
dec
loopne
pop
les
cmp
inc
pop
outsb
ja
sub
xchg
movsl
in
shrl
push
in
and
cmp
repnz
sbb
pop
loopne
inc
mov
jae
ret
push
cmp
sbb
out
dec
push
ds
sub
out
lods
ja,pt
add
lock
repnz
mov
movsl
pop
inc
out
sbb
xor
push
es
imul
push
cli
subl
sbb
into
add
inc
xlat
push
xchg
in
sahf
sbb
je
call
in
mov
sbb
mov
xor
dec
loopne
out
xchg
mov
mov
dec
iret
pop
cmp
int3
sti
rcr
push
xchg
xor
cld
je
in
and
addr16
ret
sbb
aas
fists
dec
rcrb
shr
out
hlt
mov
nop
clc
in
lcall
mov
mov
cld
xor
pop
and
and
orl
stc
or
cmp
mov
mov
outsb
sbb
pop
and
xchg
test
in
mov
xor
mov
xor
push
fs
dec
xchg
roll
aaa
push
pop
push
jnp
fwait
ret
jl
inc
js
xchg
dec
xor
inc
lahf
xchg
jnp
push
sub
shrl
adc
mov
sbbl
clc
sbb
pop
dec
aas
inc
aaa
js
popf
add
in
or
mov
movb
jmp
cmpsl
and
iret
xor
aam
cmp
jecxz
mov
sarb
inc
pop
lods
sbb
jnp
dec
mov
cs
jg
mov
addr16
gs
test
mov
icebp
xor
adc
cmp
mov
sbb
in
push
loope
rolb
mov
fldenv
scas
mov
jbe
stos
lock
xchg
pop
or
and
ljmp
or
mov
add
addl
jmp
ljmp
gs
movsb
mov
push
mov
roll
gs
lods
lret
imul
in
ja
pop
mov
sbb
jge
mov
fimuls
or
jns
pop
int
cmc
enter
dec
and
pop
mov
mov
adc
rcrb
imul
inc
test
bound
test
ficompl
stos
push
bound
and
or
inc
bound
out
jno
movsl
sbb
out
rclb
imul
or
pusha
add
xor
pusha
add
rorb
popf
enter
dec
cmpsl
in
aam
inc
add
test
loopne
lahf
jmp
pop
cld
xchg
pop
cli
gs
pop
fidivs
bound
sbbb
mov
push
mov
inc
stos
movb
inc
imul
insb
popf
xchg
xlat
push
cmpsb
push
push
aaa
inc
enter
xchg
mov
rolb
repz
outsl
mov
pop
add
dec
inc
sub
pop
and
enter
add
add
aas
das
jns
xorl
ljmp
ror
inc
das
push
adc
movsl
mov
std
mov
push
mov
or
or
jno
jb
pop
xor
ja
adc
sbb
cmp
rol
jl
mov
pinsrw
and
sub
mov
and
push
cmp
or
inc
enter
sarl
mov
add
sub
les
cltd
adc
cmpl
sbb
xchg
cmpsb
mov
shll
dec
jno
test
jge
dec
pop
sbb
cmpsl
cmpb
cmc
mov
arpl
data16
std
ds
in
xchg
in
mov
arpl
in
fimuls
fsts
aad
xlat
arpl
push
adc
jno
and
mov
jp
scas
cs
lods
sub
test
push
jne
sbb
hlt
mov
rolb
mov
pop
loope
lret
and
mov
es
popa
sbb
sbb
push
mov
je
jb
sub
mov
pop
scas
pop
or
out
mov
pusha
pop
mov
inc
frstor
xchg
xchg
push
aad
stc
xchg
int
mov
orb
lds
jns
xchg
std
dec
mov
out
jo
mov
hlt
cli
mov
repnz
xor
loop
aaa
sub
mov
sub
insb
jg
shrb
push
dec
cmpsb
fimull
out
mov
call
int
lret
sub
pop
hlt
stos
or
bswap
inc
ss
push
sub
iret
xchg
jno
xchg
xchg
inc
cmp
in
push
cs
nop
push
jl
dec
addr16
lahf
xchg
and
or
pop
imul
jl
addb
iret
popf
jge
sbb
int
pop
xchg
out
xor
aam
lods
push
jno
sub
pop
data16
inc
sub
push
push
bound
dec
ror
inc
push
xchg
je
pop
cmc
pop
mov
mov
dec
cmp
outsb
mov
xchg
enter
and
test
cmpsb
rcpps
sbb
push
adc
loop
int
pop
mov
pop
in
fimuls
mov
das
andb
and
je
push
mov
cs
adc
into
and
fsubr
mov
repnz
xchg
das
or
xchg
and
cmp
imulb
push
dec
push
mov
popa
cmp
or
or
in
jo
pop
jns
and
cmpsb
jmp
xchg
cmp
jge
jno
push
pop
pushf
add
outsl
rclb
mov
cmpb
jmp
sbb
sbb
mov
test
mov
ljmp
scas
xor
or
xchg
jp
aad
insb
sub
test
loopne
ss
adc
dec
dec
popa
cmp
in
mov
inc
cmp
cmpl
out
cmp
sub
mov
mov
movsl
mov
pop
rcl
lods
jno
pop
cli
push
adcl
nop
mov
xchg
cmpb
mov
test
push
jae
sub
flds
cmp
cmp
mul
xor
jl
cmp
call
popf
sbb
jbe
lcall
cwtl
mov
into
cmp
cmp
decl
imul
pop
pop
xor
lods
xchg
xorl
prefetchnta
loop
les
daa
or
or
adc
adc
mov
arpl
inc
mov
jmp
std
jle
pop
jge
push
sbb
jmp
lret
cmovl
sbb
dec
das
testl
jmp
int3
jg
jae
fldl
xchg
inc
pop
std
les
and
loop
mov
js
fisttpll
mov
adc
lods
aas
pop
mov
pop
loop
aam
lods
add
pop
mov
add
iret
inc
sub
jo
mov
clc
call
pop
xor
pop
adcb
loope
or
stc
or
cmp
mov
mov
mov
dec
push
das
dec
pop
loope
xchg
pop
adc
and
scas
mov
jge
ja
or
mov
sub
jbe
mov
shlb
rclb
ds
cmp
adc
cmc
mov
adc
scas
or
es
int
test
icebp
lods
push
cmp
pop
dec
iret
lods
or
loop
popf
or
popf
mov
addr16
lds
aam
mov
out
jns
lods
mov
xchg
clc
mov
and
enter
push
push
mov
cmp
shll
aaa
sub
data16
pop
jl
sbb
and
iret
cld
lods
arpl
std
dec
sbb
dec
adc
inc
cmp
and
rorb
and
scas
add
mov
ljmp
subl
fwait
lods
or
inc
sub
push
daa
xchg
sarb
mov
fadds
and
add
add
fadds
stos
dec
in
xlat
es
dec
push
inc
push
and
push
aad
roll
mov
mov
jno
negl
xchg
xor
lret
sub
add
push
das
push
adc
xorl
int
mov
adc
es
or
mov
aam
push
and
xor
adcb
jnp
xor
lahf
adc
mov
adc
dec
mov
pop
jbe
mov
or
mov
aam
jge
pop
jo
and
mov
add
xor
fsubrl
xor
and
and
repz
push
jecxz
xchg
out
jo
push
leave
add
adc
movsb
sub
mul
ret
xor
pop
shl
xchg
stos
dec
repnz
adc
aaa
add
test
cwtl
int
xor
adc
pop
cs
shll
stc
mov
cmp
jp
xor
jge
and
push
pop
mov
dec
or
or
sub
call
sbb
jno
les
jbe
or
or
stc
cs
xor
ljmp
mov
je
sub
mov
xor
aad
ficomps
and
dec
cmc
jnp
pop
pop
loop
pop
push
adc
sbbb
mov
mov
fs
mov
mov
test
lret
inc
inc
mov
loope
cmp
xor
rolb
adc
lahf
in
jns
mov
xchg
jne
and
insl
nop
addr16
lock
cmp
sti
in
ljmp
cmpsl
push
or
iret
std
test
rorl
pop
lds
jmp
andl
hlt
push
lahf
mov
or
add
cmp
pop
adc
xchg
stos
add
or
sbb
dec
pop
lret
adc
bound
jp
xor
mov
pop
mov
outsl
fdivr
sbb
jg
sahf
inc
inc
loopne
push
xor
mov
imul
mov
inc
insb
jle
jl
std
fistpl
data16
outsb
cmpsb
pop
scas
cmp
sub
xor
rorl
outsl
arpl
push
sub
test
movsl
add
jns
xorl
mov
inc
ds
pop
push
std
xor
push
jb
adc
jo
gs
sbb
jecxz
movsb
iret
mov
sarb
lds
jge
xacquire
pop
jmp
imull
fcomps
mov
ljmp
lahf
add
lret
xchg
inc
aas
pop
out
out
jno
xchg
mov
scas
adc
loopne
mov
or
or
cmp
repz
repnz
mov
lock
xchg
ja
adc
int
sbb
inc
jne
mov
lods
jne
frstor
push
mov
cmc
shll
and
test
pop
mov
xchg
das
cmp
stc
fidivl
mov
adc
sbb
sub
inc
and
or
cmp
sbb
jnp
add
add
ss
cmpsb
divl
out
aaa
lea
ljmp
mov
sbb
push
insb
lcall
test
jecxz
mov
ret
repnz
sbb
cmp
out
leave
push
sbb
icebp
pop
adc
mov
negb
jecxz
ds
out
jae
movsl
push
int3
jns
je
sbb
into
stos
imul
fidivl
imul
cmp
push
cmp
into
jnp
rorl
jmp
cmp
stos
mov
pop
js
in
mov
ss
loopne
pop
cmp
mov
lds
push
je
add
mov
cmp
clc
mov
add
push
popa
or
cwtl
fwait
mov
xchg
push
pusha
or
lea
mov
sub
loopne
and
out
mul
ss
les
sbb
sarl
cmp
mov
sbb
pusha
das
add
push
addl
testl
fcomps
lcall
shrb
push
and
or
cli
sbb
push
hlt
sbb
dec
pop
int3
xor
lea
cwtl
fisubrs
jecxz
sti
addr16
push
mov
mulb
in
jo
pop
call
xchg
fs
test
insb
aaa
out
mov
sbb
xor
jp
pushf
inc
pop
jg
js
lock
cmpsb
add
fstpl
cmpsl
movsb
mov
mov
lods
das
lds
andl
jb
add
or
jae
mov
pop
jp
lcall
out
daa
out
loope
enter
stos
pop
shll
cli
hlt
fwait
mov
adc
pop
xchg
xchg
mov
xchg
dec
mov
andb
in
xchg
lods
gs
xor
sbb
outsb
cmp
mov
mov
rcl
inc
ljmp
insb
and
inc
jp
gs
test
mov
dec
sarl
stos
dec
xor
out
insl
fistpl
mov
sbb
dec
test
pop
icebp
jp
fs
ljmp
movsb
jbe
repz
loope
cmp
push
aaa
push
test
pop
mov
and
add
idivb
pop
pop
int3
push
dec
add
imulb
icebp
mov
jl
sbb
ret
pop
lret
ja
lcall
jg
das
imul
arpl
shl
sub
xor
popf
xchg
daa
mov
loop
or
sbbb
push
push
insl
jle
and
dec
lahf
loop
pop
dec
push
mov
mov
add
fbld
adc
cmpsb
test
sarb
jmp
int3
fwait
push
xchg
test
jmp
push
sbb
sub
jl
insl
pusha
mov
mull
imul
cld
or
push
mov
pusha
loopne
clc
mov
add
push
ret
call
gs
cmpsb
repnz
xchg
movl
aam
xchg
jbe
xorb
xchg
jmp
ja
fsubp
lret
test
jbe
lret
pushf
push
outsl
push
js
mov
mov
mov
and
jnp
jg
add
mov
vmovapd
pop
pop
mov
add
push
movsb
inc
xlat
pushl
jo
cmp
movsl
push
enter
jecxz
jbe
es
or
inc
sbb
or
mov
jno
pop
pop
scas
cmc
sub
add
or
push
lods
jg
out
pop
fdivrp
add
dec
mov
out
mov
daa
mov
mov
mov
pop
cmp
pop
les
xchg
fstl
movaps
mov
data16
enter
xchg
jp
xchg
pop
or
cmpl
into
inc
jnp
jmp
xchg
aam
mov
into
or
mov
add
in
es
or
cli
adc
sbb
mov
mov
mov
fwait
sbb
leave
mov
movsl
imul
test
cwtl
push
imul
call
cmp
leave
loop
xor
xor
jp
shrb
popf
mov
mov
xchg
movsl
mov
repz
push
jne
daa
lds
lods
je
cmp
jp
pop
adc
dec
loopne
sub
shlb
xchg
insb
xchg
movsb
xor
push
mov
dec
mov
mov
xlat
fwait
sti
insl
fnclex
lds
into
dec
daa
push
inc
jne
or
lods
and
lock
inc
mov
pop
repnz
loop
sbb
push
je
mov
es
push
add
xor
shll
adc
loop
imull
aas
xor
fs
stc
or
lret
in
call
aaa
dec
adc
jge
sbb
out
mov
jne
fistl
mov
pushf
mulb
rorb
sbb
or
mov
das
xchg
add
gs
int3
mov
xor
mov
nop
xchg
pop
push
repnz
jl
mov
push
mov
loope
inc
and
hlt
jl
cmp
cltd
arpl
daa
mov
and
popf
fucomp
jmp
push
les
and
fsubrl
jmp
dec
push
xchg
cli
cmp
test
add
add
add
rcll
and
adc
sbb
dec
pop
fstpl
sub
outsb
in
cmp
aam
je
xlat
lcall
pop
push
mov
mov
stos
jne
fcompl
lods
std
mov
pop
xchg
pop
scas
push
popa
xor
stc
sbb
and
es
cmp
insl
cs
adc
lret
sub
jge
in
sbb
flds
sub
add
mov
mov
inc
cwtl
dec
out
dec
data16
lods
xchg
in
sub
sub
es
cmpsb
xchg
fcomps
pop
xchg
fcmovnu
scas
outsb
in
cltd
sar
jns
mov
sub
adc
xchg
cli
pushf
xor
adc
lahf
lea
mov
test
movsb
mov
mov
cmp
inc
cmp
pop
pop
push
cld
push
shr
push
stos
pushl
mov
insb
jo
push
add
mov
lods
das
test
adc
pop
xchg
cwtl
adc
dec
icebp
inc
cltd
out
xchg
jle
lret
sbb
or
xchg
mov
cmp
lea
sub
ret
rcl
cmp
in
push
pop
loopne
mov
inc
clc
sub
scas
dec
push
shr
cmp
pop
and
lcall
aaa
or
lahf
mov
sub
add
out
mov
sbb
jae
repnz
clc
cmovne
jbe
pop
adc
in
or
sbb
or
jg
xor
xor
cmp
mov
adc
out
inc
adc
js
ret
push
insb
nop
mov
in
test
movsl
sub
out
inc
mov
sbb
ret
and
fs
in
aaa
daa
sbb
loope
mov
or
mov
mov
movsl
jge
jmp
ret
adc
nop
aad
inc
mov
mov
push
scas
xchg
pop
loope
push
cmpsl
daa
sbb
adc
test
insl
sarl
add
or
cmc
sub
cmp
cmp
xchg
movb
push
push
lods
mov
inc
push
mov
push
push
cs
or
fcompl
pop
aaa
mov
inc
pop
cmp
scas
jp
inc
or
les
call
pusha
pop
mov
xor
lcall
xchg
jno
jp
lods
push
dec
leave
clc
scas
shlb
out
or
ss
jecxz
push
int3
jmp
adc
xchg
adc
mov
mov
xlat
sahf
lods
fidivl
pop
fs
loop
mov
and
xor
aaa
inc
out
fstl
inc
lock
in
push
inc
mov
mov
xchg
dec
lds
mov
stos
push
cmp
ret
xchg
xchg
pop
sub
jl
subl
mov
pusha
push
mov
push
jl
int
jns
or
fstl
mov
cmp
or
sub
jp
add
or
cmpsl
xor
fisttpl
pop
xchg
dec
ss
jae
cwtl
mov
push
sub
nop
sbb
push
xor
into
into
js
testb
sbb
xchg
repz
rol
idivl
xor
push
inc
lahf
mov
and
xor
insl
andb
inc
mov
popa
dec
cmp
stc
pop
std
jecxz
inc
out
sub
dec
out
xchg
push
mov
push
and
push
push
add
jo
xor
aas
into
cltd
pushf
pop
fldcw
loope
jnp
push
fcoms
mov
push
push
lea
test
arpl
fs
incb
out
test
jmp
mov
gs
xor
jmp
and
loope
or
push
mov
xchg
inc
dec
mov
xor
jp
xor
shll
testb
inc
push
ss
test
cli
push
imul
jae
jg
mov
sub
test
xchg
push
dec
sarl
int3
cli
xchg
mov
nop
cmp
sbb
insb
aas
mov
lret
jne
pusha
daa
push
jp
push
jge
mov
jne
inc
mov
xchg
dec
pop
pop
add
subb
inc
jmp
mov
fdiv
out
xor
push
fs
sahf
dec
sti
cmp
jnp
push
dec
pop
mov
sti
out
lahf
outsl
movsl
cmp
mov
mov
and
imul
push
cmp
jnp
rcrl
mov
lea
aas
vpaddusb
dec
rclb
pop
mov
loopne
jge
dec
xchg
sub
sbb
call
push
scas
test
aad
hlt
sbbb
movsb
mov
cmpsl
jle
pop
mov
jmp
fsub
cmp
enter
cs
mov
ss
in
dec
outsb
push
lret
stos
and
adc
sub
andl
sub
inc
je
stos
popa
mov
mov
pop
loop
out
xor
dec
fimull
sahf
push
mov
cltd
lock
sahf
push
xchg
jp
and
pop
inc
add
rorb
sti
mov
push
les
std
pop
jle
outsb
xor
or
pusha
jb
out
and
insl
test
sub
mov
loopne
mov
ja
pop
sbb
clc
mov
pop
dec
shrb
mov
cli
dec
mov
push
popf
stos
sub
inc
dec
stos
push
adc
mov
cmpsl
sub
ret
and
cmp
fs
sbb
mov
inc
jmp
cmp
push
xchg
loopne
fdivs
jp
in
mov
ret
jg
or
mov
imul
outsl
out
ds
mov
fwait
xchg
xchg
xchg
imul
jle
push
push
xsaves
push
imul
mov
lock
jecxz
ror
ljmp
dec
mov
in
mov
xor
xlat
pop
in
adc
mov
cltd
jge
cmc
cmp
push
mov
js
aaa
push
js
push
mov
popf
or
cmp
push
cmp
rcrb
mov
nop
es
leave
add
add
mov
sub
lcall
fidivs
fxch
sahf
outsb
push
movl
adc
inc
xchg
jle
ljmp
sub
lahf
push
out
int
push
scas
mov
and
enter
shlb
sub
adc
mov
mov
jecxz
adc
pop
pop
sti
pop
cmp
es
aas
cmpsb
inc
xchg
outsb
sub
push
loope
push
lods
stos
xchg
xchg
push
mov
mov
and
xchg
shll
sbb
sub
dec
cmp
jp
loop
mov
lahf
pop
das
sti
push
inc
repz
pop
pop
push
xchg
push
jbe
sub
sub
sbb
mov
imul
out
ljmp
pop
icebp
pop
lret
popf
jo
icebp
inc
sbb
push
jbe
out
or
xor
das
outsl
in
jb
sub
jle
push
lcall
int3
and
jmp
cmc
clc
faddl
cwtl
jmp
popf
rorb
and
xor
mov
fidivs
xor
cltd
lcall
jecxz
or
sti
movsb
push
cltd
es
or
adc
rol
je
sbb
xchg
jg
in
leave
stos
movzbl
loope
test
pop
lahf
ret
and
shlb
mov
xchg
cltd
cmp
xor
jno
lret
mov
dec
jb
xor
and
aam
mov
mov
jnp
sarl
pop
fists
mov
test
mov
or
push
leave
rolb
mov
aad
jl
lock
daa
pop
test
pushf
sbbb
mov
lods
mov
xchg
jo
addl
sbb
sub
mov
pushf
or
inc
mov
xor
test
jbe
test
mov
inc
and
jb
fsubr
out
push
pusha
push
hlt
add
test
pop
insb
cmpsb
adc
mov
sahf
testb
dec
xor
ja
mov
test
out
int
shll
lods
cltd
dec
pop
in
dec
dec
int3
push
sub
incl
dec
sub
jp
dec
popf
inc
adc
js
sub
pop
inc
cwtl
xchg
data16
xor
loop
mov
cld
stos
js
jmp
mov
mov
mov
leave
add
fs
sti
inc
rclb
lea
push
pop
mov
mov
fcom
call
icebp
push
add
pop
scas
mov
shl
pop
arpl
imul
mov
inc
test
lock
es
sbb
mov
cmc
sub
cwtl
les
jge
mov
push
jae
mov
xchg
hlt
sarb
enter
icebp
jmp
shlb
scas
cmp
pushf
ss
into
cmp
sbbl
push
mov
icebp
dec
repz
imul
mov
lods
mov
mov
imul
nop
cmpxchg
sar
pop
jle
outsw
loope
mov
jp
adc
xor
xchg
mov
mov
pop
fidivl
insb
idivb
fs
gs
int3
jbe
cmp
out
sub
hlt
call
clc
or
add
das
xchg
cmp
sub
stc
ret
sbb
adc
xor
rcrb
push
std
cwtl
je
cmp
xchg
mov
pop
repz
test
or
popa
push
data16
int
sarl
fdivs
test
mov
fwait
mov
mov
push
or
jle
cltd
lret
mov
cli
jmp
push
je
or
jmp
xchg
in
rcrb
fildll
rcrl
in
cmc
std
sbb
dec
push
pop
es
testl
mov
xchg
dec
ja
mov
xor
sbb
pushf
add
jmp
cmc
decb
pop
pop
xchg
lcall
rol
mov
and
mov
scas
les
pop
xchg
jo
cld
push
dec
sbb
push
notl
pmullw
das
sub
rcl
push
test
aam
sub
scas
lret
popa
adc
ja
subl
fidivrs
cmp
sbb
cmp
test
inc
lds
inc
add
adc
lret
xchg
cmp
mov
mov
lods
jg
insl
enter
movsl
enter
push
push
or
fdivrp
shrl
push
and
lods
addr16
mov
das
outsl
and
mov
test
inc
ljmp
aaa
dec
ret
xlat
sub
sbb
sbb
dec
dec
sub
push
out
hlt
or
pop
push
dec
loopne
sarb
add
mov
cli
pop
add
orl
jns
adc
dec
sub
imul
xchg
xchg
push
shrl
scas
mov
call
xchg
inc
stc
lret
xor
test
subl
into
sub
mov
push
cmp
divb
imul
addl
or
xchg
jnp
jb
out
push
push
repnz
xchg
ficoms
test
jo
lock
sbb
loopne
adc
out
dec
xchg
aas
iret
dec
insl
adc
outsl
das
xor
jecxz
ja
push
lret
hlt
xchg
xor
fwait
and
rcrl
out
in
out
aad
fiadds
icebp
adcl
dec
pushf
push
xchg
inc
stos
call
add
mov
and
repz
fisubrl
flds
xchg
movsb
jnp
adc
stos
aaa
push
icebp
inc
repnz
hlt
mov
pushfw
sub
push
std
xchg
xchg
cmp
lret
xor
into
imul
xchg
aas
mov
sub
into
or
xor
adc
and
push
addl
faddl
pop
test
mov
xchg
cli
loope
imul
call
pop
mov
mov
pusha
jecxz
in
jecxz
mov
xchg
dec
inc
stos
lcall
mov
cmc
mov
push
repz
jle
data16
xchg
push
xor
xor
imul
inc
xor
mull
push
push
push
test
cmp
adc
sbb
and
sbb
sbb
dec
ret
push
pop
sbb
rolb
dec
lods
push
pop
cmp
leave
jl
iret
repz
pop
mov
mov
push
xor
nop
xor
add
sub
ss
ds
mov
mov
inc
adc
nop
pop
xor
pop
mov
xchg
je
mov
fdivs
addb
lods
xor
in
cli
daa
and
mov
mov
mov
aaa
cmp
jns
adc
sub
data16
jl
mov
or
imul
jle
test
push
movsl
pop
pop
xchg
jae
xlat
clc
xchg
pop
xchg
pop
mov
inc
cmp
orl
dec
sub
inc
out
adc
xchg
push
sbb
arpl
cs
xlat
not
fcmove
mov
push
fcoms
aaa
inc
mov
fsubs
negb
and
push
xchg
aam
pop
enter
cmp
xchg
mov
iret
cmpsl
aam
fcoms
add
cmp
jle
xchg
pop
mov
nop
push
or
fs
lret
sbb
sbb
fidivrl
cmp
sub
int3
mov
dec
xlat
xchg
cmp
or
push
scas
add
enter
stos
hlt
paddb
add
in
xor
xchg
leave
cs
push
inc
insl
fcmovne
iret
sti
lret
add
aaa
mov
test
xchg
pop
test
cmp
daa
mov
inc
stos
xchg
js
idivb
cltd
ret
int3
adc
mov
shlb
xchg
subb
cmp
into
jo
loop
in
iret
sbb
pop
mov
pop
addl
dec
jbe
cmp
mov
test
xchg
jmp
hlt
xchg
cmp
inc
popa
mov
inc
xlat
push
stos
jle
dec
loope
mov
stos
sbb
jle
xor
enter
lods
mov
es
inc
mov
xchg
popf
pop
mov
push
adc
jne,pn
dec
lods
lret
xchg
pop
or
call
into
mov
and
les
dec
enter
rcll
or
stc
dec
outsl
data16
jnp
js
dec
and
subb
cmp
das
cltd
lahf
aad
pushf
xchg
fsubs
xor
sbb
sub
lahf
icebp
fstps
sbb
icebp
iret
test
dec
pop
push
sub
mov
jmp
pop
lcall
mov
xor
mov
imul
rcll
mov
fiadds
loope
in
mov
push
pop
pop
cmp
xchg
stos
cwtl
test
shlb
mov
imul
xchg
mov
xor
loope
cmp
adc
pop
aad
mov
enter
add
shll
pop
bound
stos
jb
push
inc
lods
jle
out
rcll
aad
push
jb
xor
pop
sub
test
xchg
es
inc
sbb
sub
rclb
data16
sub
stc
jecxz
cmpsb
sar
out
pop
clc
add
push
aad
mov
cwtl
lcall
mov
int
aam
fidivs
xor
sbb
leave
orb
inc
repz
sbb
jmp
push
jp
fcmovne
and
inc
push
sub
movsl
addb
addr16
lea
mov
sbb
cmp
inc
and
or
jle
incl
cltd
push
xchg
aaa
aad
or
push
add
imul
popa
push
imul
aam
mov
mov
into
mov
lock
adc
cmc
shl
xchg
sbb
mov
cmp
inc
mov
cmpsb
xchg
cmp
xor
rolb
add
dec
xor
hlt
lods
in
jg
ret
lret
mov
ret
push
xlat
mov
mov
out
mov
mov
mov
imul
aam
test
mov
in
lahf
inc
lret
cmp
mulb
aas
dec
xor
test
dec
popa
mov
xchg
out
loopne
scas
lea
mov
add
xor
ret
cwtl
data16
subb
sbb
push
adc
jl
push
cltd
xor
aas
andb
xchg
sub
jo
out
cltd
mov
jmp
jns
jb
jno
jp
fsub
les
lcall
ss
push
dec
loope
sub
jne
mov
lret
jae
pop
enter
jae
add
ja,pn
fs
in
push
cmp
out
test
popf
dec
loop
inc
dec
xor
int
dec
outsl
arpl
sub
js
orb
jl
fstpl
and
push
cmp
ss
and
mov
sub
sub
push
push
fwait
outsl
mov
push
ljmp
push
pop
xchg
mov
out
dec
sbb
pop
je
push
ljmp
jl
and
xlat
cli
inc
mov
fdivrs
mov
les
movq
mov
arpl
xorl
mov
loop
jg
jo
pushf
sbb
jo
inc
or
xlat
sbb
ret
nop
pop
add
jno
push
fisttpl
das
xor
dec
xor
xchg
fdivr
test
and
inc
inc
adc
push
and
and
std
jp
jnp
xorb
movsl
add
mov
js
mov
mov
inc
test
cmpsb
push
gs
in
addl
lea
cld
fsts
jg
jb
mov
aam
inc
cmp
fldenv
inc
jecxz
cmpsl
add
mov
lea
icebp
imul
push
int
mov
stos
xchg
notl
hlt
dec
outsl
jbe
add
dec
and
fstpt
push
jl
cmp
stos
sub
ror
data16
and
add
jge
xchg
and
mov
repnz
or
dec
mov
pushf
adcb
xlat
mov
jo
lahf
push
pop
out
push
dec
pushf
add
mov
inc
or
repnz
popa
sahf
dec
mov
loope
mov
ja
shll
cs
adc
pop
pop
mov
sub
cmp
fucomip
daa
xchg
hlt
lds
jmp
inc
push
adc
in
bound
adc
lea
mov
ss
cmpsl
jne
dec
xchg
js
and
adcb
sub
jle
dec
je
pushf
leave
mov
nop
add
shlb
cmpsb
incb
jnp
inc
out
push
xchg
xor
sarb
js
sub
loope
mov
pop
fsub
push
and
cli
xchg
xchg
inc
pop
dec
push
shr
jae
cmpsb
inc
loop
mov
xchg
dec
insb
les
sub
imul
or
sarl
jecxz
cmp
push
xchg
movsl
pop
shlb
inc
mov
jno
fstpl
add
mov
mov
cmp
xor
icebp
ret
hlt
bound
movl
mov
lods
movsl
stos
mov
xlat
pop
dec
xchg
xchg
push
pop
inc
pop
les
cli
add
inc
lret
jle
stc
mov
leave
fisubl
arpl
pop
fwait
ljmp
mov
push
mov
pop
daa
icebp
xchg
jbe
cltd
cmp
movsl
das
sub
cmp
and
lret
fildl
dec
inc
sbb
xor
in
add
push
shl
test
xchg
das
out
pop
cld
mov
lea
pop
or
repz
in
pop
lahf
dec
adc
ret
lea
stos
pop
stc
xor
jmp
icebp
pushf
inc
popf
lret
sbb
adc
enter
loop
dec
das
rorb
xorb
lret
rcll
adc
mov
pop
and
dec
pop
or
and
insb
sbb
mov
gs
repnz
ljmp
out
icebp
int3
or
sbb
jae
jo
in
jg
bound
cmp
xor
imul
nop
or
dec
notl
popf
rcll
mov
scas
out
xor
mov
outsl
add
and
adc
pop
test
movsl
and
loop
mov
pop
and
lods
aaa
in
insl
add
sub
jae
or
jl
jnp
ret
add
hlt
push
mov
test
subl
addb
pop
add
aad
dec
adc
xchg
xchg
leave
in
aaa
or
addr16
and
sub
cwtl
shl
mov
jb
inc
rcl
ret
clc
shr
loopne
lea
push
loop
dec
gs
ss
fildll
xchg
clc
je
add
popf
imul
arpl
jmp
pop
and
mov
xor
mov
daa
sbb
mov
and
sbb
loop
xlat
roll
aaa
outsb
aam
mov
mov
clc
adc
push
mov
and
jbe
ss
mov
into
sub
sbb
xchg
add
sub
aam
or
lods
jle
cmp
push
or
mov
call
inc
xor
out
das
sbb
mov
push
mov
dec
frstor
sbb
sbb
in
fbld
ret
push
fnsave
xor
pop
mov
inc
and
add
das
lahf
arpl
cmp
mov
dec
xchg
lds
fwait
sbb
xchg
adc
lcall
cmp
int3
xchg
mov
mov
sbb
outsb
pop
mov
or
inc
dec
inc
pop
lock
rcrb
push
mov
mov
push
bound
xor
out
aaa
sarb
out
jl
mov
add
cmpxchg
jmp
xor
insl
jp
pop
cld
sub
mov
and
insb
stos
push
cmpsl
std
leave
mov
pop
xor
call
mov
pop
inc
mov
mov
inc
lcall
mov
push
les
dec
add
call
mov
or
sub
and
sub
movsb
pop
push
sub
and
lock
int
add
mov
dec
sub
ret
adc
mov
ss
adc
xchg
pop
loope
ficompl
mov
inc
xchg
leave
pop
rorl
inc
js
jo
in
xchg
and
pop
xorl
mov
data16
imul
orl
cmp
cld
xor
cwtl
je
lds
push
inc
ljmp
and
call
aam
notb
xchg
icebp
mov
movsb
adc
jb
sub
inc
outsb
xchg
cmpsb
jno
sub
loop
fcmovb
test
adc
ljmp
lret
and
aam
mov
call
push
das
lods
pop
xor
out
out
fadds
and
inc
pop
cmp
lret
loope
add
mov
jecxz
pusha
fsub
or
lods
ss
addr16
test
in
lret
jp
push
daa
sub
popf
aam
daa
jmp
mov
repz
shrl
sbb
mov
xchg
hlt
xor
mov
jecxz
jne
fs
mov
push
xchg
int
mov
adc
jle
mov
adc
mov
aad
add
push
xor
or
loop
fs
loopne
imul
or
scas
test
lea
insl
popa
sti
jnp
jp
inc
int
pop
arpl
mov
jae
sbb
movzbl
dec
adc
dec
and
pop
popa
ljmp
jmp
jp
scas
test
xor
aaa
lock
cmp
out
pcmpeqw
aaa
repz
jge
loope
sbb
shlb
or
inc
sub
and
jge
add
push
add
dec
inc
mov
jb
leave
mov
pop
sub
and
fwait
and
or
dec
mov
sbb
outsb
push
or
lret
and
icebp
mov
pop
lahf
cld
push
int
shrl
loope
sub
jle
add
mov
xchg
mov
aam
push
adc
sbb
xor
mov
sbb
dec
mov
ljmp
xchg
nop
fldl
in
add
jp
scas
dec
es
xor
adc
dec
mov
adc
mov
fsqrt
cwtl
cltd
push
pushf
pusha
loope
dec
ds
inc
xor
xchg
jmp
mov
jecxz
lods
clc
inc
or
nop
cmpsl
mov
and
adc
xchg
lds
push
adc
push
sbb
sub
sbb
dec
lods
hlt
jno
pusha
jo
test
pop
add
rclb
inc
adc
cli
jae
add
mov
adcb
jecxz
mov
iret
std
inc
cli
pop
mov
test
sbb
pop
ljmp
push
adc
in
dec
movsb
inc
fldenv
dec
dec
pusha
repz
scas
cmpl
xor
lcall
sub
cmp
xor
outsl
dec
cmp
call
jle
inc
ljmp
inc
loope
cmp
aam
push
jnp
sarl
and
adc
xor
cmp
mov
or
and
pop
add
stc
push
and
xchg
xchg
dec
fimuls
out
mov
or
sub
xor
idiv
fidivrs
gs
sub
push
xchg
divl
sub
add
inc
mov
scas
mov
test
inc
pop
outsl
sub
aam
mov
adc
push
aam
repz
mov
cmpsl
jle,pt
mov
adc
out
inc
aas
sbb
insl
fnstsw
jp
mov
cmp
fwait
ja
xchg
jp
stos
outsb
fcmovu
or
test
push
cmpsl
push
fcoml
in
cwtl
iret
add
lods
rclb
daa
mov
jns
xorb
inc
pop
out
inc
neg
popa
mov
and
ret
rcrl
push
loopne
lods
test
fstl
xchg
adc
push
outsb
daa
test
add
lods
sub
sbb
cwtl
repz
and
mov
loop
push
cltd
cmpsl
loope
jae
sbb
xor
add
orb
push
icebp
iret
leave
or
xchg
shrb
inc
push
sbb
les
add
fisubrs
sbb
mov
pop
jno
adc
fstps
mov
add
test
stos
and
cmpsb
out
dec
addr16
out
dec
lcall
bound
inc
stos
pop
adc
sub
sbb
sarl
mov
pop
fsubp
push
lret
mov
rclb
push
mov
and
jbe
xor
pusha
and
mov
or
mov
or
cmp
dec
out
andl
cmp
mov
and
xor
imul
cltd
push
std
adc
iret
hlt
mov
out
pop
daa
add
mov
jmp
rcl
push
jnp
faddp
push
rolb
add
adc
pop
je
add
cld
adc
or
sbb
call
call
scas
xor
cmp
or
xchg
pop
idivb
xchg
push
in
or
jo
mov
xor
cs
fsubl
jno
fistpll
fsts
cmp
sub
test
jle
mov
or
jne
rolb
dec
in
outsl
mov
jbe
roll
mov
lds
jne
inc
inc
aaa
or
mov
or
icebp
leave
ss
adc
test
mov
add
aad
push
and
sarl
test
xchg
fcmovnb
popa
lods
fldcw
pop
lret
push
pop
dec
jo
pusha
jo
push
mulb
aaa
insl
faddl
inc
movsl
test
test
cwtl
push
leave
or
js
sbb
lahf
mov
lret
push
mov
inc
cmc
sub
sub
pop
fs
push
mov
pop
mov
gs
xchg
and
sub
dec
in
outsb
outsl
loop
gs
cli
push
dec
push
mov
add
xchg
push
adc
push
push
push
mov
dec
push
inc
adc
rorb
nop
sub
pusha
ljmp
sub
add
out
push
push
xor
movsl
repz
dec
mov
lret
mov
cmp
mov
lods
addr16
sub
adc
pop
xchg
popf
lods
mov
loopne
push
js
jg
lcall
inc
imul
mov
inc
pop
in
cmp
stc
js
sub
dec
xor
sub
jnp
in
loop
stos
push
int3
lcall
mov
ret
sbb
subl
outsl
jl
and
imul
mov
jb
adc
cmp
es
cmpsb
call
cmpsb
enter
insb
lcall
cmp
xchg
xor
mov
xchg
dec
pop
push
hlt
mov
pop
mov
sub
mov
rorl
aas
popf
lret
sbb
jns
pop
cltd
cmp
sub
mov
in
sub
sub
scas
push
lcall
pushf
jno
add
nop
in
ja
push
jno
movsb
sbb
pop
mov
inc
jno
add
data16
fcmovnb
push
add
and
push
ja
out
push
test
xlat
xor
cwtl
mov
mov
add
dec
sub
cmpsb
in
ds
mov
test
vcvtpd2psy
inc
or
ja
xchg
jb
sub
inc
jnp
test
lds
push
pop
data16
jle
and
and
das
shl
cld
out
jno
movsl
xor
xchg
sub
mov
push
push
mov
leave
push
xlat
xchg
jae
repnz
js
ja
stos
and
cmp
jge
fdivl
enter
dec
movsl
xorl
sti
or
pop
adcl
and
and
xor
aas
loope
cmp
sub
mov
xor
in
adc
mov
repz
outsl
sahf
xlat
fsubl
mov
popa
test
aad
push
adc
adc
jbe
add
dec
mov
lock
lods
popa
and
push
push
push
outsl
test
stos
or
js
in
jle
or
pop
in
repz
ret
xchg
add
ja
mov
imul
gs
jge
jge
or
jecxz
pop
test
mov
das
mov
iret
js
mov
loop
dec
jge
lcall
adcb
adc
mov
dec
hlt
adc
loope
push
fdivrs
jecxz
iret
adc
push
lds
int
aas
pop
lahf
gs
sar
push
ficoml
dec
and
and
repnz
stos
pop
aaa
push
mov
insb
mov
push
fs
out
mov
pop
addb
xor
push
cmp
rorb
out
xor
push
stos
fmul
mov
dec
adc
inc
sbb
out
aaa
add
mov
xchg
pop
xchg
cld
push
lret
mov
pop
fdiv
and
mov
jmp
in
pop
xor
jnp
mov
mov
mov
test
loopne
cltd
in
int
loop
stos
fcoml
add
ss
out
imul
int3
aam
aad
mov
loopne
inc
cmpsl
xlat
sbb
xrelease
add
mov
sub
bound
or
ret
sub
adc
xor
push
cmp
sbb
push
int3
xchg
cltd
sub
gs
mov
cmp
shl
cli
mov
mov
mov
push
iret
cmp
fs
out
dec
xchg
jle
mov
mov
int3
decb
ret
imul
fstps
pushf
xor
push
and
outsl
dec
mov
addr16
inc
adc
mov
movsl
pop
lock
and
push
testb
jo
shr
fwait
mul
cmp
mov
xor
xchg
dec
lahf
jne
pop
dec
dec
adc
dec
in
inc
movsb
push
push
mov
cmp
inc
test
int
lods
dec
lods
outsb
mov
aam
sbb
xchg
xchg
jl
add
gs
sub
or
std
out
xor
pusha
lahf
and
int3
adcb
int3
dec
mov
rorb
sbb
mov
imul
jbe
stc
subl
stos
imul
loop
mov
sbb
dec
test
pop
adc
lds
mov
pop
pop
ds
inc
sub
xchg
call
scas
xchg
cmc
or
dec
fnstcw
nop
lea
mov
mov
sbb
cmp
xchg
stos
aas
dec
jg
mov
int3
mov
sbb
jmp
sub
mov
sub
adc
insb
push
mov
js
jle
mov
inc
mov
ret
fsubl
sbb
fstpl
icebp
pop
iret
mov
in
push
push
mov
pop
aam
add
sbb
xchg
cld
repz
add
jmp
and
dec
pop
lds
inc
sub
fs
out
xor
js
adc
cli
inc
mov
or
cmpsb
imul
inc
mov
cmp
or
cltd
cmp
push
jo
jmp
add
stc
dec
lahf
push
pop
sub
cmc
xchg
jle
lock
mov
pop
mov
sarl
gs
cli
add
or
out
loop
pushf
pop
jg
into
into
cmpsl
fistpl
int3
dec
enter
imul
sub
sbb
cltd
mov
das
dec
mov
pusha
mov
add
es
or
push
lods
andb
imul
jnp
data16
cmp
jl,pn
sbb
addr16
mulps
es
fdivl
pop
ja
shl
pop
push
and
or
das
dec
mov
inc
inc
aam
push
shrb
pop
pop
sub
divb
xor
jo
xchg
fs
hlt
lea
mov
push
inc
out
push
cmp
jo
addr16
inc
mov
dec
mov
ret
or
cmp
rcl
mov
add
lods
into
das
pushf
out
std
pop
sbb
and
dec
mov
je
cmp
push
es
inc
aas
mov
dec
mov
int
lret
and
jl
hlt
dec
cmpsl
xlat
dec
mov
push
scas
std
sbb
data16
mov
lds
es
sti
push
ljmp
mov
adc
pop
cli
lods
and
outsl
lahf
dec
push
in
bound
xor
sahf
sti
ljmp
xor
lods
mov
mull
aad
inc
lret
out
lods
push
mov
sahf
movsb
call
lahf
dec
scas
outsb
push
aam
pop
ret
mov
je
stos
dec
clc
jbe
cmc
pop
out
lret
fisubrl
inc
out
jno
adc
fisubl
mov
push
mov
xchg
pop
pop
sarl
int
dec
mov
ljmp
stos
enter
mov
sub
fnstsw
and
stos
sbb
cmpsl
mov
testl
mov
pop
pop
in
shrl
mov
mov
scas
clc
adc
ja
fcmovb
sub
cmp
fiadds
jecxz
dec
push
out
cltd
ljmp
pop
mov
into
push
mov
stos
pop
push
lcall
outsb
imull
js
shlb
in
add
es
mov
and
mov
dec
xchg
jae
push
push
aam
int3
xlat
push
aad
fldl
cmp
cmp
mov
addl
inc
call
imul
out
rclb
xchg
xchg
in
repz
adc
jge
xchg
add
sbb
stos
iret
gs
cli
popf
mov
std
push
xor
out
dec
mov
add
das
test
shll
mov
shlb
mov
dec
mov
imul
sbb
outsl
pop
repnz
out
cli
xchg
addr16
in
cs
cltd
adc
sbb
ds
jno
pop
pop
loope
outsb
inc
pop
insb
cmpsl
mov
movsl
cwtl
pop
xor
data16
jg
push
mov
push
arpl
sub
sbb
loope
sub
pushf
mov
push
out
jns
xor
sahf
jnp
cmp
int
out
mov
jne
sub
sub
add
cmpsl
push
cmc
and
xchg
or
mov
les
push
lock
gs
dec
loop
pop
es
sub
imul
sbb
push
popf
xchg
fsub
scas
ret
loop
pushf
mov
pop
loope
lahf
push
sub
sahf
inc
cs
cmpsb
or
mov
cmp
mov
dec
ja
jle
sub
inc
sahf
push
xor
push
xchg
sub
xor
scas
divb
ret
adc
mov
push
lahf
dec
popa
adc
xchg
pop
pushf
daa
inc
popw
jbe
jl
and
jno
xchg
push
das
ret
jmp
mov
rcrb
ret
lea
cmp
push
dec
sub
lods
and
jl
pushf
xchg
and
and
jl
ja
cmp
inc
and
push
iret
leave
fstp
lds
jne
out
pop
sbb
xor
adc
in
into
cmc
daa
div
cmp
sahf
pop
mov
cld
add
push
sar
les
arpl
scas
sbb
mov
fists
adc
or
insb
adc
pusha
iret
ret
dec
xor
and
inc
dec
es
imul
mov
out
mov
imul
adc
out
enter
mov
sub
scas
inc
xchg
pop
movsl
fnsave
sbb
aad
mov
lret
mov
mov
mov
lahf
lods
insb
cltd
popf
cmp
sbb
movsl
jmp
jo
or
les
cltd
push
jno
push
mov
sbb
hlt
int
xor
sbb
push
and
fistps
lret
pop
pop
test
bound
pushf
jp
in
push
and
inc
popa
pop
nop
jle
mov
clc
arpl
push
push
sub
xor
pop
pushf
pop
mov
sti
fcmovbe
enter
or
clc
mov
test
mov
sbb
rcrl
add
push
and
test
and
cmc
inc
mov
and
mov
jae
idiv
push
repnz
shrl
lock
std
adc
loope
jb
std
xchg
dec
scas
js
xchg
cli
mov
movsb
pushf
sbb
call
inc
sbb
mov
adc
mov
push
lcall
pmaddwd
and
adc
xor
cmp
gs
mov
mov
push
pop
lods
or
in
nop
enter
push
rcll
and
mov
movsb
loop
pushaw
or
mov
xchg
sbbl
loopne
popa
inc
jecxz
xchg
mov
cmp
cltd
popa
xchg
test
push
js
inc
aam
inc
ret
mov
cmp
outsb
inc
push
and
and
pop
fsubs
fsubr
dec
scas
mov
inc
sarl
push
push
gs
jbe
stos
rcl
cmp
xor
popa
mov
negl
xchg
iret
mov
sub
insb
cmp
jo
inc
aas
dec
movsl
and
ja
andb
repnz
sbb
mov
test
xchg
sub
xorb
mov
loopne
dec
cltd
fprem1
nop
mov
scas
push
push
pop
or
mov
iret
in
test
insl
push
adc
sti
xchg
adc
push
mov
in
repnz
cmp
push
mov
mov
out
mov
jb
jmp
sbb
sahf
pop
divl
arpl
sub
lcall
xchg
les
or
fwait
xchg
cli
in
inc
push
ljmp
cmpsl
jecxz
in
or
lds
pop
movsl
mov
xchg
sub
adc
adc
sub
insl
addb
jmp
lods
popl
rcll
mov
popf
cmp
int3
push
jnp
stos
adc
lock
gs
aad
aaa
sbb
sbb
xchg
call
out
sbb
outsb
rcrb
sbb
mov
flds
out
fisttpl
lret
push
popf
gs
mov
mov
adc
pop
dec
mov
mov
xlat
lock
clc
shrb
push
insl
outsl
sbb
pop
bound
sti
lock
add
cmp
add
sbb
mov
mulb
and
and
test
pusha
pop
scas
jo
icebp
push
test
popf
adc
das
aam
mov
push
inc
dec
ret
sahf
and
scas
mov
jl
xchg
sarl
sti
scas
adc
xorl
jno
aad
or
xchg
imul
cltd
scas
adc
in
cmp
mov
iret
dec
jno
pop
stc
pop
popa
fldcw
push
ds
fwait
mov
dec
pop
push
xor
stc
sbb
test
pop
or
sub
push
mov
rorl
jle
mov
rcl
fistpll
jb
rorb
sub
mov
test
mov
add
xchg
pop
roll
mov
adc
dec
in
sbb
ds
pusha
out
pushf
add
cwtl
mov
bound
inc
repz
mov
xchg
pop
mov
or
xchg
push
xchg
imul
mov
inc
jp
aam
xor
mov
mov
mov
cmp
pop
push
adc
lret
repz
imul
mov
dec
rcrl
mov
add
rol
xor
inc
mov
adc
lret
add
das
cmp
mov
mov
mov
xlat
xorl
mov
cwtl
mov
int3
add
ja
iret
popf
add
xchg
jge
loopne
xor
inc
shl
ficompl
mov
sub
in
jne
loopne
mov
fnstsw
mov
or
jnp
cli
mov
pushf
mov
mov
pop
fs
and
dec
xchg
add
js
add
cwtl
dec
data16
mov
push
leave
inc
pop
sbb
jne
mov
fiadds
mov
mov
hlt
or
push
mov
jne
and
leave
xchg
jbe
int
pusha
xchg
sub
pop
mov
repz
jns
lods
xor
cs
lods
fidivrs
cmpsl
icebp
dec
xlat
fdivs
dec
inc
xor
and
or
mov
movsl
rcll
cmpsl
jns
aaa
in
add
xor
cmp
lahf
dec
mov
or
insl
loopne
enter
sti
inc
into
iret
add
push
iret
mov
lahf
sti
dec
xor
sub
pop
jmp
cmc
cmp
pop
das
jmp
or
aad
mov
ret
imul
outsl
icebp
and
adc
push
mov
and
mov
fidivrl
scas
jnp
test
sbb
daa
cmpb
add
jge
hlt
adcl
scas
xor
jnp
sub
mov
mov
adc
push
cli
xchg
adc
test
out
scas
aaa
push
pop
std
dec
sbb
lds
add
adc
fcoml
mov
cmp
popf
shrb
sub
int
mov
fisubl
clc
jle
mov
xchg
inc
and
and
das
dec
pop
push
xchg
xor
sub
pop
push
mov
lods
repnz
iret
es
jmp
mov
outsb
movsl
sub
add
inc
scas
mov
insb
mov
sbb
dec
int3
in
inc
ljmp
or
loope
jg
mov
push
ss
inc
mull
inc
xlat
jmp
rclb
bnd
xchg
dec
xchg
div
mov
sbbb
int3
jge
mov
jle
add
sub
dec
enter
test
fs
lcall
push
mov
enter
call
dec
sub
inc
push
push
in
sarb
sbb
and
dec
movsl
roll
dec
loopne
sbbb
aaa
pop
iret
push
xchg
mov
sbb
xor
std
int3
xchg
mov
lods
bnd
mov
or
mov
pusha
adc
popa
jmp
and
sbb
in
sub
scas
dec
sub
insl
mov
addr16
mov
lock
adc
sub
adc
pop
std
jmp
aas
adc
pushf
mov
rolb
add
imul
inc
adc
repz
cmp
push
xorb
cld
jno
outsb
scas
xor
sbb
inc
xchg
pop
cmp
mov
push
aad
xor
jle
push
lret
pop
cwtl
out
cmpsb
mov
popa
outsb
shr
xor
call
fwait
jns
iret
or
iret
and
push
clc
lahf
shll
stos
ljmp
xchg
jns
scas
stc
lcall
shl
and
out
push
cmp
scas
sbb
std
sub
repz
mov
sti
mov
inc
lret
mov
pop
nop
xchg
arpl
sub
push
add
xchg
jmp
aad
and
iret
lods
xchg
jnp
in
push
std
dec
jne
clc
lret
push
push
ljmp
ret
enter
cmpsb
sub
mov
pusha
mov
sub
pop
cmp
xchg
imul
cmp
add
mov
add
mov
fcomps
jns
or
bound
fistps
gs
add
movb
add
cmp
shlb
push
cmpsb
aad
daa
cmp
pushf
jmp
sahf
mov
insb
mov
jae
loope
ret
mov
xchg
inc
dec
insl
cmp
cmc
xchg
jnp
mov
orl
xchg
and
fs
shrl
stos
mov
outsl
mov
sub
xor
or
mov
and
mov
rorb
ja
aas
lcall
adcb
aad
or
sti
pushf
dec
std
inc
push
data16
outsl
pop
jbe
mov
lcall
stos
pop
repz
stos
sub
orb
sbb
jp
popa
cmp
jns
rorl
dec
dec
mov
push
mov
in
clc
rcrl
loop
faddl
adc
cmp
adc
cld
dec
scas
and
xorb
mov
xchg
xchg
mov
rcll
mov
jg
imul
sub
sti
push
mov
and
jns
dec
loop
inc
test
cmp
nop
mov
jg,pt
mov
push
in
xchg
mov
mov
lods
xor
jp
push
xchg
imul
mov
pop
mov
inc
aam
notl
cmpsb
mov
mov
xor
pop
sbb
inc
outsb
jnp
int3
cmc
inc
push
add
adc
jns
mov
mov
push
sub
cltd
push
xlat
dec
cmpsb
mov
pop
int
xchg
enter
nop
sub
repnz
out
inc
movsl
sbb
movsb
enter
insb
nop
sbb
mov
or
pop
test
cmp
movsl
sub
mov
out
or
push
xchg
dec
call
mov
lock
mov
pushl
mov
fs
pop
push
mov
adc
cmp
std
pop
adc
xorl
dec
jb
sbb
mov
loope
xchg
dec
push
cli
rolb
pop
sbb
subb
mov
pop
int
jo
scas
mov
lcall
sbb
inc
sub
sub
inc
test
mov
scas
lea
imul
xchg
pop
mov
mov
cmpsl
popa
dec
jae
leave
mov
jp
mov
sub
aas
cli
xchg
cmp
mov
lret
mov
mov
xchg
xorb
mov
mov
jl
push
xchg
je
aad
jle
aas
inc
lcall
imulb
scas
jns
dec
mull
mov
fs
sbb
xchg
mov
orb
ficoms
cmpl
inc
clc
lret
test
sub
fwait
stos
out
push
pop
mov
dec
sbb
mov
dec
cmpsl
dec
enter
cmp
cltd
inc
lock
xchg
sti
mov
popf
xchg
mov
pop
dec
nop
das
popf
pop
fwait
ja
lods
fsub
mov
fiadds
insl
mov
mov
movsb
pop
div
inc
lahf
sarb
ja
lret
add
in
lret
mov
sahf
or
or
pop
xor
pop
push
inc
inc
xor
mov
loopne
jmp
jecxz
xchg
fs
leave
pop
in
jge
aaa
xchg
std
mov
inc
push
gs
pop
mov
dec
mov
jl
sti
mov
imul
addr16
fs
sbb
push
testl
inc
push
movsl
jl
enter
sub
je
into
jle
jle
mov
add
test
fildll
inc
sbb
adc
push
fldt
or
lods
lods
jb
inc
add
outsl
lods
movsb
adcb
inc
insl
xor
inc
dec
mov
ljmp
lds
jl
in
repnz
and
repz
dec
dec
test
add
mov
inc
pop
je
xchg
ret
insl
aaa
ljmp
test
mov
mov
mov
cs
cmp
sbb
cmpsb
or
push
insb
pushf
ja
cli
scas
jmp
repnz
xchg
out
out
add
mov
xchg
fwait
xchg
jae
loope
and
sub
inc
push
bound
jns
cld
cld
push
roll
icebp
ret
repnz
data16
mov
mov
rolb
loopne
mov
add
cmp
jns
mov
sbb
add
pushf
insb
repz
and
jl
int
ret
cmp
inc
lock
or
sub
or
loopne
xor
dec
jmp
cli
mov
xor
mov
shlb
jne
rolb
in
iret
loop
stos
stc
cmp
sub
ss
add
lahf
jmp
fs
sub
mov
repz
ret
push
jge
mov
icebp
xchg
cmpb
sbbl
dec
testl
lea
orl
mov
scas
je
pop
push
lds
fdivrs
and
jne
addr16
icebp
jns
sub
add
fimull
push
mov
jb
push
xchg
pop
fsubl
adc
iret
xchg
push
les
or
lods
stc
int3
sahf
mov
cmpsb
outsb
mov
movsl
or
xchg
push
das
jnp
aaa
dec
sbb
jne
ljmp
pusha
pop
jecxz
mov
and
lds
mov
cmc
mov
mov
inc
xchg
enter
outsb
nop
ss
ss
dec
pop
xchg
data16
and
clc
xchg
push
adc
or
dec
bound
mov
test
es
scas
daa
std
inc
mov
aaa
ret
add
hlt
jle
pop
sahf
rcll
jb
mov
ds
sub
or
clc
icebp
mov
push
in
xchg
pop
lods
mov
pop
lret
dec
int
pop
popf
pop
mov
mov
dec
cmc
mov
mov
repnz
aas
out
push
mov
pusha
xchg
mov
mov
xchg
push
imul
pop
push
and
and
cmpsl
push
int3
dec
push
mov
call
cmpsb
dec
or
pop
xor
pusha
mov
push
aad
hlt
cmp
insl
loop
scas
pop
test
mov
test
add
jno
mov
bnd
mov
out
insb
je
xchg
xchg
push
xchg
adc
pop
arpl
cmpsl
sub
insl
and
push
cmpsb
mov
aam
sahf
or
les
cld
pop
stc
mov
dec
add
jp
xor
inc
xor
hlt
dec
add
fstl
push
cltd
sti
add
xchg
mov
adc
xlat
shl
xor
sbb
aas
jg
dec
jbe
push
lahf
xor
ror
pop
cmp
sub
dec
sub
or
enter
dec
rolb
subb
jl
lds
sbb
add
orl
scas
hlt
xlat
rcr
mov
mov
scas
sar
int3
outsl
push
cwtl
xor
xchg
xorb
ja
or
clc
mov
mov
mov
fnstcw
and
mov
lods
and
aad
ret
dec
sub
ret
lock
icebp
scas
loop
or
pop
stc
pop
xor
imul
adcb
inc
js
dec
and
jns
ret
imul
add
test
dec
leave
sub
or
jp
add
mov
push
pop
inc
fwait
cmp
add
or
mov
mov
and
cmp
arpl
mov
ret
or
cmpb
movsl
cmp
add
out
movsl
popa
imul
iret
stos
push
mov
imul
test
sbb
lock
dec
mov
cs
das
orb
mov
jge
adc
fisubs
rcll
jl
fisubs
push
ret
cmp
jmp
inc
xlat
les
lcall
test
mov
jae
jmp
mov
xchg
mov
sub
mov
cmpsl
push
aas
arpl
adc
xlat
frstor
div
jbe
mov
jo,pn
dec
mov
add
and
pop
cmc
jl
mov
jl
mov
xchg
jnp
loop
imul
or
inc
shl
jae
ror
jmp
lods
fcmovb
loop
lods
cmpsl
ret
dec
fwait
nop
cmp
sbb
insl
xchg
movsl
in
add
int3
mov
fistpl
test
mov
push
cmpsb
and
jecxz
push
jns
xchg
mov
sub
bound
sub
ret
adc
les
mov
mov
movsb
arpl
shrb
mov
and
pop
out
xchg
dec
xor
mov
add
leave
les
push
int
mov
adcb
aaa
mov
jae
cwtl
cmp
int
add
or
dec
push
jg
ss
mov
in
gs
daa
std
insl
aas
xchg
xchg
fcoml
jmp
hlt
adc
add
iret
leave
lret
inc
bound
dec
dec
outsb
xor
sbb
cmp
xchg
push
mov
in
xor
insl
test
sub
mov
pop
cmp
mov
and
in
mov
lret
or
jno
sarl
pop
daa
inc
mov
stc
hlt
adcl
or
cli
gs
mov
mov
inc
je
xchg
jecxz
pop
ffree
decb
adc
push
cmp
mov
add
outsl
data16
xchg
in
inc
stos
hlt
mov
add
push
jg
sub
add
cld
aam
mov
mov
mov
ljmp
rcll
jmp
sub
rolb
sbb
push
pop
es
lds
fwait
push
or
fldt
pusha
mov
xor
andb
xor
cmp
sbb
divl
outsl
pop
loop
in
dec
lods
pop
scas
xchg
cld
xchg
sbb
xor
xchg
dec
dec
arpl
and
sbb
xlat
int
roll
jmp
sbb
mov
xchg
push
or
jl
fidivrs
in
rcrb
xchg
repz
loopne
in
mov
push
cld
inc
sbb
push
sbb
lods
push
in
outsl
pop
jb
mov
mov
sub
and
popa
mov
lahf
fsts
stos
scas
xchg
pextrw
jl
push
fbstp
sbb
sbb
fldenv
sub
gs
adc
jno
inc
in
aaa
in
leave
cmp
pop
fidivrs
movsl
adc
mov
test
xchg
repnz
loop,pn
cmp
je
add
inc
int3
gs
dec
popa
pop
pushf
mov
movsb
pop
jb
mov
jg
dec
inc
in
cld
ljmp
repz
add
sbb
xlat
shrb
in
add
cmp
push
sub
mov
in
inc
jp
stc
test
dec
mov
mov
mov
mov
jp
aad
lea
inc
nop
pop
into
jp
dec
iret
loopne
out
sbb
dec
inc
jns
mov
jge
arpl
push
out
stos
je
xorl
cwtl
mov
xor
add
xor
lea
loop
imul
stos
xor
cmp
arpl
sbb
sub
push
mov
push
scas
pop
add
lcall
clc
rol
xchg
gs
push
fs
in
jmp
xor
sbb
lahf
out
lock
data16
mov
pop
test
movsb
xor
fnstsw
push
and
nop
fisubs
or
insl
lods
push
insb
pop
popf
mov
scas
lahf
or
scas
popf
pop
jbe
mov
jmp
push
cli
dec
push
int3
push
xchg
in
jmp
pop
inc
lods
loopne
dec
lods
inc
imul
outsb
xchg
and
sbb
mov
aas
loopne
gs
mov
xchg
or
dec
outsb
imul
int3
test
int3
and
inc
outsb
push
cmpsb
inc
push
sub
fcmovb
inc
and
inc
jne
loopne
sub
jge
ficoms
test
imulb
lret
in
popf
out
xchg
nop
cwtl
add
into
leave
jge
rolb
lcall
loopne
cmpsl
adc
int
fs
jns
sub
cmp
jno
adc
popf
fcmovbe
insb
clc
push
add
inc
inc
test
xor
fisubrs
repz
ret
es
std
push
mov
inc
or
or
mov
sbb
aam
sbb
movsb
and
dec
int3
push
add
js
out
ret
push
pop
adc
shrb
pop
push
mov
sub
stos
and
pop
insl
mov
sub
test
push
sub
or
cwtl
fldt
pushf
out
into
dec
dec
sub
mov
dec
push
mov
adc
mov
push
sbb
into
mov
fcmovnbe
lea
xor
roll
fisubl
nop
ret
lods
scas
inc
adc
and
cmp
mov
pop
dec
lea
cmp
xchg
lahf
jmp
fimuls
cmp
lock
cmpsl
fldt
subb
movsl
int3
lods
lods
test
sbb
ljmp
lods
dec
jge
fwait
and
les
pusha
jno
shrl
cmpsl
sbb
into
push
sub
xchg
dec
xchg
mov
sub
xchg
imul
add
jno
clc
sti
outsl
lcall
pop
in
pmaxub
lret
mov
inc
lock
enter
test
daa
mov
jmp
jmp
lods
into
sti
push
and
scas
jnp
stos
mov
ficoms
test
adc
adc
jbe
xchg
lahf
fs
cltd
adc
mov
icebp
mov
and
pop
jbe
push
cmpsb
ss
push
call
xchg
push
pop
lods
jne
pop
mov
mov
faddl
pop
cltd
pop
shl
mulb
sub
ja
or
sub
in
mov
inc
rorl
pop
mov
jg
imul
negb
ljmp
cmpsl
pop
inc
cli
jae
test
mov
cmc
in
adc
mov
call
and
sub
adc
stc
cwtl
aas
adc
inc
push
push
int
cmp
jb
aam
out
xchg
cli
fidivl
movsl
pusha
mov
int
mov
loopne
push
test
push
in
sbb
sub
fs
mov
jecxz
hlt
adc
or
xchg
imull
xor
out
test
xchg
xlat
sbb
add
daa
xchg
jae
jge
ds
mov
adc
movsl
mov
movb
dec
lods
shll
fwait
scas
dec
fcoms
leave
jmp
or
movsb
shlb
mov
jecxz
pop
mov
call
es
xchg
int3
ds
add
add
and
jmp
and
cmpb
push
daa
das
mov
mov
int3
mov
jmp
stc
push
sbb
jl
mov
jno
inc
sub
and
andl
sti
or
mov
cltd
xchg
sbb
xchg
push
jb
mov
jl
cmp
dec
xchg
call
mov
enter
mov
out
mov
out
neg
leave
movsb
cmp
dec
cmp
les
mov
loope
sub
outsb
jp
stc
jns
outsl
notl
ret
dec
int
sbb
dec
sbb
arpl
sbb
and
testb
push
mov
jecxz
ljmp
xor
scas
out
nop
adc
xchg
inc
push
setle
rep
pop
pop
enter
sbb
pop
jmpw
pusha
call
stos
out
adc
push
std
cmp
jge
sbb
adc
add
pop
dec
mov
ds
jns
pop
sti
jmp
orb
ret
dec
push
int
push
push
mov
ds
cmp
lods
test
and
stc
in
mov
out
and
add
dec
subl
insb
in
jp
test
test
add
adc
pusha
jo
movsb
dec
mov
ja
jbe
pop
xor
pop
add
in
js
out
lret
xor
pop
or
push
mov
mov
lahf
cmp
test
and
lods
insl
scas
pop
mov
adc
mov
loopne
loop
pop
sbb
addr16
das
mov
cmc
rcrb
stos
pop
scas
das
insl
mov
lods
ret
rep
les
jl
incl
add
in
mov
push
out
inc
pop
mov
ret
or
or
imul
mov
icebp
adc
dec
arpl
jb
in
xor
sbb
das
sub
popa
cli
ss
popa
inc
cs
cld
lock
push
push
loop
push
enter
xor
call
pop
mov
mov
mov
and
pop
test
or
cmc
xor
shll
lods
mov
add
scas
fnstsw
add
dec
push
cmp
testl
mov
dec
lret
loopne
xlat
mov
lret
xor
xor
mov
jne
daa
cmp
jle
ja
out
sbb
shlb
add
out
rcr
test
rcl
jbe
es
jp
aad
sub
lds
ja
mov
test
dec
into
mov
test
mov
aam
sbb
dec
ret
mov
jns
sbb
fbstp
shlb
jl
mov
in
sbb
cwtl
mov
addr16
xorb
gs
push
test
jg
loopne
shlb
push
pop
cmpl
adc
add
jl
aas
cmp
leave
add
movsb
pop
dec
and
jo
cmp
and
daa
jmp
lods
lret
lret
mov
sti
jbe
sbb
mov
cmpsl
lods
out
js
cltd
sbb
fstl
xor
or
push
pop
jne
xchg
insl
pop
aam
sub
mov
or
movsb
into
lahf
data16
inc
mov
clc
adc
jno
xor
ret
mov
dec
daa
cmpsl
dec
or
pop
leave
sbb
mov
ja
aaa
outsl
mov
popa
lret
and
mov
jg
pop
inc
add
push
cmc
fistl
lods
mov
pop
adc
cmc
sbb
loope
aaa
push
in
fiadds
mov
mov
push
lahf
mov
sbb
enter
out
sub
mov
inc
cmpsb
and
push
sbb
push
adc
jmp
gs
xor
pop
or
xor
push
popf
mov
ficomps
push
jo
adc
cld
adc
xor
scas
add
nop
push
pop
xchg
pop
bound
jno
sbb
cmp
pop
call
push
mov
pop
lea
mov
mov
das
jne
dec
insb
aam
push
jbe
imul
stc
es
test
int
out
ficomps
stc
push
mov
out
frstor
sbbl
push
mov
repnz
rcrl
daa
pushf
fcomip
movsl
mov
push
dec
sub
inc
fldt
and
dec
dec
addr16
inc
inc
pop
cmpsl
fcompl
adc
xchg
jmp
daa
adc
add
xchg
adc
xchg
and
mov
ss
into
pop
rolb
jl
jge
stos
xchg
sbb
lcall
mov
push
or
test
lea
and
or
mov
pop
adc
shl
lea
xor
sub
and
add
aas
pop
gs
mov
adc
cmp
das
sub
cmp
lret
pop
mov
mov
call
stc
scas
loopne
iret
sub
nop
mov
mov
jne
xor
push
jle
mov
pop
xchg
lods
nop
icebp
cmp
inc
mov
cwtl
mov
push
mov
adc
fsubp
inc
cli
mov
insl
enter
inc
scas
lods
jge
cli
sbb
scas
js
fwait
jno
or
aas
add
xchg
cmpsb
mov
xchg
and
inc
jo
popf
dec
mov
xchg
xor
nop
pop
add
inc
repnz
and
add
mov
lds
pop
icebp
mov
cmp
or
outsl
iret
lods
repnz
dec
popa
pushl
xor
xor
loop
dec
adc
cmp
or
cmp
pop
or
decl
dec
dec
cs
mov
xor
hlt
repnz
test
cmp
xchg
xchg
mov
gs
call
imul
xchg
pushf
cs
iret
inc
pop
fs
das
jg
or
mov
push
leave
shll
dec
push
ret
call
loopne
cmp
mov
scas
add
in
daa
pushf
filds
mov
fildll
inc
jl
xchg
outsl
sub
add
mov
out
jnp
pop
adc
xchg
prefetch
or
mov
cltd
aas
mov
mov
mov
mov
enter
inc
pop
xchg
test
daa
dec
sbb
lcall
outsl
jmp
dec
daa
pushf
dec
push
das
outsb
mov
cld
xor
mov
sub
outsl
out
cmp
fidivrs
sub
stc
popa
pop
xchg
sub
cmc
icebp
sbb
or
out
mov
imul
xor
idivb
xor
mov
jbe
push
sbbb
mov
into
scas
ljmp
xchg
loope
bound
cmp
fst
repnz
in
roll
stos
cwtl
xlat
pop
add
ljmp
arpl
std
mov
pop
stos
sub
out
adc
pusha
inc
xchg
add
stos
cmovle
mov
adc
dec
fstpl
repz
and
popf
clc
push
add
mov
xchg
and
cmp
das
repz
sbb
mov
xchg
arpl
dec
jnp
jbe
cmp
jmp
ret
mov
fmull
test
mov
mov
out
test
xor
push
mov
adc
aad
fisttpll
popa
lods
xchg
pop
test
out
xchg
stc
insl
outsb
sarl
xchg
cmp
lahf
fistps
sbb
add
lahf
sbb
jg
sbb
sub
cmp
pop
pop
pop
jmp
cmp
mov
xchg
callw
lock
mov
mov
mov
mov
pushf
cmp
jl
or
cmp
popa
jnp
ficoms
loop
js
andb
insl
push
loop
in
pop
add
mov
fmulp
rorl
loop
jno
lcall
jl
xchg
dec
and
rol
mov
inc
ficoml
push
or
cmp
jo
enter
ds
jle
cmp
je
and
cld
lcall
jns
adc
lret
jp,pt
push
fnstsw
or
aas
nop
stos
out
pop
adc
push
sahf
mov
pop
mov
dec
fs
std
out
repnz
jb
pop
mov
stc
lods
aaa
movsl
fnstsw
adc
shr
inc
inc
pusha
xor
dec
ja
ja
dec
outsb
outsb
inc
pushl
jmp
scas
out
jnp
into
mov
sub
and
mov
icebp
mov
jns
rcrb
mov
ja
inc
and
pop
mov
lods
push
mov
mov
test
adc
mov
adc
outsl
push
mov
cmp
int
pop
mov
pop
mov
popa
mov
fcomip
cmpsl
jns
jl
loope
popa
sub
movsl
push
clc
mulps
aas
in
inc
in
pop
repnz
fsubr
dec
sub
add
mov
pop
sub
imul
lcall
pop
stos
sub
iret
je
and
add
push
dec
setns
insb
fnstsw
mov
xor
sbb
into
push
lea
in
cmc
roll
xlat
dec
fisttps
lds
bound
sub
out
jbe
popa
cli
inc
test
adc
and
add
outsb
sahf
push
jle
bound
mov
imul
repz
out
ss
movsl
or
xor
inc
test
fs
loop
push
sub
sahf
je
das
jbe
je
imul
in
xor
xor
stos
push
repz
nop
out
ret
pop
js
mov
push
sub
sbb
cmc
js
lcall
add
cmp
mov
ficompl
cli
jbe
jne
cmc
cmp
imul
sbb
mov
push
pop
stos
mov
jmp
fisubl
or
fbstp
push
movsl
adc
pop
idivb
loope
inc
ds
mov
or
addr16
popa
aaa
xchg
add
dec
inc
pop
inc
xor
subl
dec
mov
adc
xor
sub
gs
out
fidivrl
loope
mov
repz
les
hlt
cltd
cli
mov
pop
sbb
sub
sar
icebp
push
jnp
push
mov
roll
enter
mov
push
mov
xlat
jb
xchg
test
sbb
ljmp
jl
xorb
inc
dec
mov
cli
std
cmp
daa
mov
cmp
adc
cmp
dec
add
jg
and
std
test
sahf
cmp
and
or
out
std
mov
and
icebp
loope
push
adc
adc
dec
jp
fdivrl
out
enter
lret
mov
lahf
out
pusha
jbe
sbb
cmpsl
filds
repnz
jmp
xlat
mov
movsb
cmp
testb
add
xchg
stos
add
mov
jp
jo
add
enter
bound
mov
sbb
xchg
xor
mov
ja
outsb
mov
in
xchg
int3
repnz
inc
inc
pop
stos
pop
movl
es
jbe
pop
lret
push
dec
mov
jae
xor
fsubl
fistl
and
xor
arpl
push
and
gs
rol
jb
jl
cltd
mov
cmp
adc
xor
push
push
ja
mov
mov
in
shll
push
pop
les
sbb
mov
shlb
les
sbb
popa
inc
int
and
lcall
add
loope
xchg
out
sub
jl
sahf
and
loop
jge
fsubrl
sbb
adc
cmp
mov
movsb
push
mov
pop
inc
aas
lcall
data16
int3
xor
fcmovne
sbb
push
addb
xchg
pop
jnp
pop
cmp
adc
les
lods
push
sbb
popa
scas
gs
into
out
cmpsl
popa
mov
inc
fisttpll
mov
hlt
jae
jno
cs
mov
mov
fldt
add
adc
cmpsb
fdivrl
ds
or
sub
jl
es
jae
xor
and
clc
addr16
dec
lods
std
mov
into
movsb
scas
pushl
mov
cwtl
jp
insl
or
and
js
shll
mov
fwait
into
mov
add
jl
popa
jb,pn
and
js
pop
in
pop
push
enter
dec
repz
leave
dec
in
loop
push
fcoml
inc
cmp
xlat
shll
sub
sbb
jle
clc
imul
mov
xor
jecxz
bound
subl
inc
jae
xchg
loope
leave
and
mov
sbb
jbe
xchg
xor
aas
mov
push
mov
push
insb
pop
inc
or
mov
xchg
xchg
les
xor
inc
arpl
rcrl
pop
mov
sbb
aam
rcl
xchg
movsb
pushf
xchg
push
xchg
sahf
and
test
pop
subl
aas
pop
stos
pop
cmp
and
repz
mov
popa
ret
jl
cmp
sub
sti
out
in
jmp
add
cltd
cmpsb
xor
aas
inc
dec
ds
movsb
iret
sti
inc
out
inc
sahf
and
sub
fnstenv
stos
je
push
insl
addb
jb
and
fwait
push
push
sahf
cmc
leave
movsb
or
shrl
sbb
add
dec
or
pop
pop
cmpsb
and
fstl
adc
sahf
aas
pusha
out
loopne
pop
or
cmpsb
cltd
jne
pop
sahf
mov
outsb
pop
and
pop
push
jmp
ficoms
jb
mov
sub
or
sub
sub
into
aas
js
nop
out
push
jecxz
into
cmp
out
add
clc
repz
pop
mov
mov
inc
sub
mov
out
sbb
movsb
adc
cltd
stos
hlt
inc
add
aad
pop
sub
xor
and
imul
add
adc
xor
outsl
and
push
push
jo
or
iret
insb
mov
inc
in
mov
push
fs
cmp
js
std
bound
cli
test
imul
fldenv
lds
bound
cwtl
aas
adc
dec
push
and
add
fadds
cmp
ljmp
in
cmp
add
xor
jg
fcompl
icebp
sbb
lahf
mov
dec
fbld
pusha
lahf
fwait
sbb
ud1
inc
dec
inc
mov
sub
sbb
sub
mov
int3
push
out
inc
scas
loop
inc
sub
popf
cltd
push
push
inc
mov
dec
pop
inc
cmp
and
fisubs
shlb
xchg
cltd
mov
repnz
jns
push
fidivrl
mov
mov
push
sub
dec
pop
or
push
rcr
pop
adc
lcall
pop
dec
mov
lahf
call
mov
mov
dec
loopne
mov
repz
dec
test
mov
mov
pop
loopne
lds
adc
mov
push
movsb
add
and
cmp
das
insl
push
fdiv
inc
jbe
aaa
outsb
push
arpl
sub
shlb
inc
int
jl
xchg
aam
test
or
mov
xchg
das
xchg
push
sub
pop
mov
mov
mov
hlt
push
xor
xor
jne
movsb
xor
mov
push
lret
ret
cmp
fadd
and
lea
shrl
lahf
cmp
cltd
jne
shrb
nop
jno
cld
and
cwtl
mov
dec
in
mov
jnp
loop
mov
jns
aad
push
jbe
shll
in
cmp
into
xlat
pop
pop
pop
cmpl
mov
mov
aas
mov
repz
lahf
imul
scas
mov
and
cld
cmc
add
mov
or
jecxz
jmp
outsb
int
out
sbb
test
push
notl
out
in
fcmovne
sahf
add
mov
cmc
add
xchg
and
fisubrs
add
or
push
xchg
repnz
mov
into
cmc
int
out
pop
in
insb
leave
arpl
jmp
cwtl
add
and
pop
push
xor
or
popf
inc
enter
add
jnp
inc
add
or
cmp
and
jge
inc
sti
shll
test
outsb
mov
cmp
fwait
pop
insb
jo
ficoml
mulb
and
pop
fldpi
mov
test
lcall
stc
adc
out
mov
pop
iret
cld
mov
push
add
test
pop
in
test
inc
push
pop
inc
lods
adc
rcll
mov
sub
out
inc
pushf
xchg
stc
outsb
mov
mov
dec
sub
pushf
aad
xchg
sbb
test
dec
xor
inc
push
pop
add
scas
ret
ss
mov
clc
push
xchg
arpl
insb
or
mov
add
mov
out
mov
mov
mov
leave
pop
sub
out
test
popa
imul
ss
sbb
negl
int3
cltd
fidivs
pop
pop
sbb
jmp
push
je
push
xchg
pop
adc
push
aam
lret
pop
fadd
xchg
sub
fimuls
mov
mov
je
movsb
int
fcomp
nop
adc
push
leave
mov
std
adc
mov
mov
or
filds
ljmp
pop
dec
and
adc
mov
sub
test
jo
mov
pop
pop
cld
aaa
test
inc
push
fldenv
cld
popf
sbb
sbb
or
jecxz
insb
mov
dec
push
pop
icebp
pop
jno
sbb
pop
or
mov
dec
cmpsb
dec
sahf
stc
repnz
or
dec
int
movsb
sub
mov
mov
add
js
push
daa
ficomps
popa
stos
jmp
cmp
cwtl
add
iret
dec
mov
sub
movsb
xchg
ds
popf
pop
ror
out
push
xchg
or
stos
leave
dec
xlat
inc
lds
mov
push
rcr
xchg
addr16
decb
adc
xor
scas
inc
jne
shlb
mov
mov
pop
rclb
pusha
pushf
movsb
mov
mov
rcrb
mov
fisttpl
dec
pop
scas
pop
lds
or
xchg
xchg
sti
nop
ds
or
fwait
jo
loope
mov
fwait
gs
fs
jmp
mov
out
sti
clc
ds
jecxz
ret
pop
mov
add
cld
mov
sti
push
dec
inc
repnz
lods
orl
adc
out
dec
xor
out
jae
imul
jbe
mov
add
xor
into
aas
loop
xchg
cli
or
sti
cld
dec
es
lods
arpl
test
pop
pop
lret
test
iret
mov
mov
lcall
outsl
dec
aas
std
mov
pop
sub
pop
ljmp
mov
fsubs
or
adc
in
dec
pusha
fistpl
add
fcoms
sbb
sbbl
mov
orl
inc
hlt
in
pop
inc
sbb
mov
push
icebp
rcl
ljmp
dec
sbb
jmp
add
outsl
ss
mov
fisubs
pop
pusha
cli
xor
mov
iret
and
xchg
frstor
es
movsl
sbb
aas
pop
sub
pop
adc
ljmp
mov
push
dec
pop
fpatan
cmpl
imul
dec
or
js
lds
scas
xchg
lods
jmp
adc
add
push
les
jne
ficoms
xor
aas
pushf
cld
dec
push
nop
pop
imulb
or
or
clc
movsb
adc
jbe
mov
xor
loop
aas
fisubrl
pop
scas
stc
idivb
flds
cmp
movsl
push
and
xor
andl
cmp
lret
fisttps
pop
or
loopne
mov
movsb
mov
lods
mov
je
out
int3
mov
rcll
vmovaps
testl
loope
adc
rol
pop
shl
faddl
stc
add
int3
xchg
jne
and
addr16
daa
push
inc
push
mov
in
in
pop
fdivs
popf
shr
xchg
push
xor
adc
jl
sbb
push
or
jl
test
mov
not
stos
or
mov
mov
dec
imul
mov
xor
call
cmpsl
cmp
in
mov
stc
outsl
fdivrp
fstpl
add
sbb
lock
dec
mov
ud1
rcrb
mov
xchg
xchg
in
sti
leave
stc
xchg
out
push
int3
shrl
adc
lret
rcl
outsl
insb
rclb
push
fs
mov
pop
cwtl
xchg
int3
and
test
sti
jne
dec
out
cmp
dec
daa
fiaddl
inc
push
int
xchg
add
xchg
gs
ss
push
xchg
add
loope
inc
xor
dec
dec
aad
sub
xchg
jle
adc
aaa
sub
pushf
cmp
loopne
adc
cmp
jg
xchg
cwtl
sub
inc
aas
push
pop
pop
add
fisubl
ficompl
rclb
sub
stos
int
dec
frstor
sub
jmp
das
loop
test
mov
aaa
testb
rcrl
push
sbb
aaa
push
imul
ret
jecxz
loop
dec
stos
pop
xor
aas
mov
mov
mov
mov
push
dec
inc
in
jo
adc
sub
fldl
mov
adc
and
test
fs
out
sbb
and
xchg
cmp
xor
jo
inc
pop
and
push
adc
call
shl
cs
mov
lods
and
int3
push
pushf
or
dec
xchg
lcall
sahf
call
loop
int
xor
or
mov
add
in
mov
enter
xchg
xor
push
jbe
mov
in
jle
mov
mov
in
leave
lret
xor
pop
jge
and
loopne
push
and
outsl
jecxz
rol
xor
push
cmp
xchg
jbe
sub
xchg
lock
xorb
icebp
jno
adc
jle
push
cwtl
frstor
fldt
dec
jnp
rclb
inc
add
pop
int
mov
aaa
pushl
scas
imul
adc
sub
lcall
shrb
cmp
cmc
pusha
inc
dec
cs
stos
not
add
aaa
xchg
mov
lret
sub
outsb
xchg
test
ret
sbb
repnz
xchg
xchg
mov
loop
inc
or
jno
mov
lods
cmc
mov
pop
rorb
ss
mov
jecxz
testl
jecxz
out
jg
jge
sbb
mov
mov
rcrl
arpl
popf
inc
gs
push
in
bound
shlb
xchg
dec
addr16
cmp
sub
push
cmc
sub
sub
rclb
outsl
loopne
int3
pop
cld
arpl
shl
and
test
add
mov
shrb
das
outsl
cmp
fisubl
rcll
in
dec
in
adc
fs
bnd
sti
xor
pop
ljmp
mov
pop
xchg
lods
sub
lret
xor
push
inc
jg
sti
pop
jnp
add
in
scas
es
cmp
stos
cli
js
mov
mov
lds
test
test
adc
out
push
add
jmp
ret
and
jne
pop
comiss
mov
call
add
shrb
dec
scas
scas
sub
xor
faddp
prefetch
or
add
in
pop
leave
jl
mov
pusha
lret
rep
mov
add
insl
in
adc
ret
push
push
daa
sbbb
cwtl
test
sahf
or
add
ss
adc
sbb
leave
faddl
gs
sub
dec
pop
push
jnp
stos
test
or
test
lcall
cmp
xor
rcr
sub
jb
push
push
jmp
jno
mov
icebp
pop
pop
shll
jbe
sbb
pop
repz
mov
ljmp
or
add
mov
adcl
mov
aaa
cli
sub
int3
push
shl
loope,pt
imul
xchg
or
sub
cmpsb
cmpsb
dec
xchg
push
xchg
inc
imul
popf
cmp
and
xlat
cmpsb
daa
add
lods
jne
jmp
mov
jb
fdivl
outsl
xor
adc
es
std
mov
jnp
test
addb
mov
cmp
cld
addr16
mov
push
clc
lahf
mov
imul
jl
subl
jo
sahf
jno
pop
bound
addb
jp
insb
inc
popa
testb
jmp
pop
loope
sub
xchg
sub
jge
lods
dec
leave
inc
enter
xlat
sbb
mov
dec
xchg
mov
prefetch
sub
addr16
cmpsl
xor
inc
mov
mov
jnp
pop
sub
jo
or
enter
fstl
jge
pop
scas
mov
insl
pop
es
jo
aad
xchg
insb
ret
imul
inc
stc
es
aad
mov
nop
mov
push
mov
rcrl
mov
leave
mov
sub
jmp
shlb
sub
xor
loope
nop
pop
pop
je
pushf
pop
pushw
adc
mov
nop
mov
xchg
cmp
sahf
jecxz
sar
mov
std
scas
jae
outsb
cmp
fnsave
mov
pop
push
sub
adc
inc
jo
test
cli
xor
sub
ja
push
xor
jno,pn
inc
lock
xor
outsb
lea
ficomps
bound
jno
jle
fisttps
xchg
jne
shll
jg
addr16
cvttps2pi
pop
pop
pop
mov
cmp
sbb
cmpb
jno
ljmp
repnz
and
insl
push
mov
jbe
in
fnsave
mov
mov
movsbl
jl
not
test
into
xchg
xchg
test
jge
mov
aam
inc
fldcw
fwait
testl
mov
cmp
mov
jge
xor
or
mov
xlat
or
mov
push
aas
loope
mov
jg
xor
in
xor
mov
sbbb
mov
and
xor
add
rcrl
push
ret
call
mov
in
dec
cmpsl
xchg
xchg
or
mov
cmp
ffree
hlt
pushf
test
and
sti
mov
pop
aas
mov
rol
daa
je
and
dec
sbb
ljmp
dec
mov
clc
dec
fstps
dec
mov
aad
sub
in
dec
mov
mov
into
pop
testb
cltd
inc
fcmovu
in
xor
je
mov
int
gs
xor
add
imul
xchg
xchg
lret
jbe
int3
jb
add
call
repnz
inc
xchg
jecxz
in
repz
push
popa
cltd
leave
orb
cld
sub
mov
cmp
adc
add
std
mov
mov
or
dec
pop
call
push
xor
shll
mov
inc
pop
inc
in
mov
outsb
aam
jp,pt
sbb
ficompl
mov
cmpsb
fs
and
cmp
aam
push
jg
add
xchg
jle
mov
notb
lods
scas
ret
adc
xchg
push
sar
sbb
xor
dec
loop
int
lods
roll
push
ljmp
or
and
sbb
add
mov
sbb
mov
jnp
inc
sti
xor
jnp
imul
nop
fbstp
push
lock
fildl
test
scas
in
inc
in
dec
dec
call
cmp
mov
adc
push
pushf
insl
inc
cmp
stos
loopne
sbb
data16
mov
into
pusha
outsb
cmc
cmp
jb
shr
pop
insl
and
stc
loopne
xor
and
mov
mov
or
pop
sti
cmp
or
pop
repnz
and
add
ret
add
xor
xlat
scas
ja
int
outsb
subb
jo
sbb
daa
jno
movsb
mov
clc
int3
cmp
adc
mov
push
jl
cmpsb
imulb
cmpsb
movsb
mov
mov
imul
or
and
cmp
add
fs
dec
inc
sbb
jnp
xlat
or
mov
out
inc
test
pop
cmp
or
stc
jg
cmp
mov
push
mov
pop
cmc
dec
cld
cmp
jg
adc
popf
cmp
ljmp
mov
pop
or
mov
repz
fcmovnb
gs
mov
sarl
pop
cmp
sar
das
rcrb
repnz
enter
orl
stos
pop
nop
out
adc
out
test
sub
in
inc
fiadds
ficoml
or
inc
jne
xchg
fwait
add
js
jg
add
mov
mov
jo
xchg
cmp
dec
lcall
test
add
stc
jmp
out
sar
jg
mov
and
fcomip
test
xchg
push
xor
dec
stos
mov
jae
and
mov
push
sbb
inc
div
mov
cld
inc
lock
xor
mov
sub
or
dec
add
lret
mov
leave
out
mov
aad
mov
stos
inc
mov
push
leave
popf
or
shll
daa
push
push
pushl
and
jmp
xchg
leave
shll
lret
inc
or
roll
inc
aaa
jge
test
pop
mov
xor
test
and
and
aas
mov
or
add
mov
mov
cltd
mov
cli
ja,pn
push
push
dec
mov
jo
das
roll
xlat
in
pop
test
mov
mov
pusha
ret
int3
andb
xlat
cli
pop
dec
shl
mov
cmp
out
sbb
dec
cwtl
inc
ljmp
mov
insb
push
mov
mov
add
js
cmp
adc
popaw
mov
jg
incl
jle
test
dec
mov
nop
lcall
adc
fsub
clc
paddq
cmc
ficoms
mov
cmp
aaa
aas
adcl
aad
sti
cmp
mov
into
lret
in
loop
pop
push
xor
or
ss
mov
jl
sbb
dec
sbb
and
add
jbe
mov
cwtl
push
jl
aaa
outsl
vmread
outsb
pop
sub
andl
jbe
sub
jmp
movsb
pop
ja
negb
sub
hlt
mov
jb
jge
mov
sbbb
mov
bound
mov
inc
add
loopne
dec
push
adcl
lea
loop
int
roll
mov
inc
hlt
loop
aam
xor
mov
lcall
orb
loopne
into
push
out
dec
jge
ficompl
adc
and
pop
rclb
and
sbb
in
add
test
inc
and
stos
iret
dec
push
loop
jle
mov
sahf
das
xchg
ss
adc
mov
in
fwait
push
mov
push
push
mov
mov
or
cmp
enter
xchg
sbb
push
lods
es
arpl
fcoms
and
in
mov
xor
adc
xchg
adc
or
adc
enter
pop
inc
jnp
int3
enter
and
push
test
loop
xor
call
adc
mov
sub
ja
push
jae
rcll
sbb
xor
sub
outsl
loope
mov
mov
aaa
push
sbb
js
or
mov
outsl
enter
leave
mov
and
dec
lock
leave
jecxz
out
pop
int3
xor
push
mov
ljmp
or
lret
mov
daa
adc
mov
xlat
push
lods
and
pop
lods
clc
xor
mov
cmp
mov
jnp
int3
sub
into
mov
aaa
and
inc
or
rcrl
jne
cs
leave
and
add
call
stc
add
mov
in
imul
and
add
pop
mov
mov
cmpsb
andl
cmpb
inc
int
pop
cltd
cli
xorl
loope
sbbl
pop
jp
xchg
sub
adc
pop
adc
push
add
es
in
in
insb
popf
lods
mov
pop
sbb
in
lcall
test
outsl
es
cwtl
sub
call
lods
mov
mov
aas
hlt
hlt
sti
cwtl
adc
mov
cli
mov
loope,pn
pop
lret
in
push
es
aaa
jmp
pop
dec
bound
and
ljmp
inc
ret
push
xor
dec
popa
and
outsb
jbe
and
movq
push
jae
dec
cmc
leave
pushf
fdiv
ficomps
scas
call
pop
in
add
ja
pusha
test
sbb
mov
test
sbb
cmp
insl
mov
ljmp
data16
aam
dec
jbe
xchg
bound
sub
pop
fisubrl
repnz
or
nop
push
push
in
insb
lods
loop
popl
push
jns
push
gs
je
and
xchg
das
loopne
push
gs
test
push
inc
and
shll
js
ficompl
inc
dec
sbbl
nop
dec
add
add
cmpsb
pop
mov
pop
call
and
repz
ljmp
lods
das
pop
mov
or
pop
cmc
mov
xchg
or
imul
adc
pop
xlat
add
scas
sub
lahf
repnz
ljmp
int3
shrb
mov
or
stc
jge
and
clc
push
arpl
xchg
sub
insl
jae
mov
arpl
and
pop
scas
and
repnz
mov
outsl
popa
and
sbb
push
lods
push
push
jo
cwtl
cld
mov
or
loop
xchg
mov
dec
in
int3
sbb
sub
jae
popa
out
movsb
push
adc
jmp
sbb
andb
cltd
outsl
imul
jmp
jns
mov
or
lock
in
fildl
testb
inc
xor
in
into
mov
xchg
aas
pop
btr
sbb
xchg
xchg
or
cwtl
test
mov
jno
sahf
jl
lods
test
test
loopne
lahf
in
or
cmp
mov
add
lahf
cmp
pop
push
loop
popa
popf
mov
arpl
ss
mov
mov
xchg
insb
inc
xchg
test
jg
sub
mov
sti
rol
lret
out
jbe
sub
adc
sti
lock
xchg
xor
insb
dec
nop
fmul
pop
out
sahf
fstpl
mov
ja
into
mov
mull
xor
jmp
xor
push
shlb
cmp
xor
or
sbb
lds
in
and
jae
or
cmp
sahf
popf
ss
mov
nop
sbb
push
and
inc
sbb
ficoms
outsb
call
inc
ret
xchg
and
cltd
adc
mov
lret
jo
push
stos
std
cmp
cmp
imul
push
pop
vmwrite
out
call
push
dec
jl
push
lret
sub
jmp
pop
stos
imul
iret
push
sub
pop
mov
push
arpl
stos
movsl
mov
loop
cwtl
add
add
icebp
cmpsb
imul
cmp
adc
xor
lea
push
fisttps
mov
gs
xor
jae
movsl
lods
add
inc
and
pushf
jle
cmp
mov
xor
pop
jbe
test
sub
mov
orl
push
mov
or
int3
scas
lret
sbb
push
jge
sbb
inc
dec
add
add
hlt
mov
inc
lock
xchg
and
fidivrl
xchg
xor
mov
jne
fsubrl
jnp
mov
test
stos
cmp
mov
cmpsb
sub
inc
xchg
enter
and
lods
sub
inc
xorl
jnp
test
sub
mov
adc
test
add
jb
jno
call
leave
stos
daa
pop
lea
movb
pop
mov
insl
std
xchg
bound
dec
adc
cmp
scas
sbb
mov
in
add
dec
push
iret
push
inc
and
adc
add
inc
lahf
jb
mov
xor
xchg
bnd
pop
push
or
int3
lock
aaa
dec
push
inc
into
inc
fs
lcall
pusha
sahf
jl
lret
adc
out
int3
cmp
fstpl
xor
mov
faddl
in
rcll
loopne
or
insl
push
mov
mov
and
fs
stos
push
xchg
leave
ljmp
xchg
out
stos
lods
and
or
sbb
rorb
adc
push
cmp
in
mov
enter
fstpl
dec
dec
ds
bound
add
cmp
xor
jno
inc
scas
clc
decl
sbb
pop
dec
and
outsb
outsb
cmp
xchg
stc
repz
inc
push
cmc
pusha
dec
pop
dec
jl
mov
data16
dec
sub
cmp
sti
jp
roll
cmpl
mov
das
ret
jp
out
or
scas
jae
jl
cmp
mov
cmpsb
dec
je
iret
or
in
cmpsl
xor
into
test
cwtl
push
ffreep
jge
jbe
aam
test
push
test
xchg
loope
jnp
and
cmp
push
push
push
pop
xor
xor
dec
jmp
adc
movsb
jnp
jg
and
fiaddl
popf
jecxz
cmpsb
daa
or
sbb
shrb
bswap
mov
imul
ds
and
lahf
mov
mov
aad
imul
jbe
pusha
aad
pop
orb
push
pop
push
hlt
mov
call
pop
mov
ja
stc
lock
pop
lahf
in
jp
ja
fdivs
ret
andl
add
repnz
mov
xor
mov
dec
xor
push
mov
dec
xchg
ror
cmp
mov
ss
pop
scas
shll
repnz
or
mov
pop
mov
or
lcall
out
jo
sbb
sub
mov
jne
xlat
jno
cmp
shl
repz
lods
rcl
sub
sub
mov
cmp
push
mov
dec
inc
das
lods
inc
leave
rcll
sbb
stos
insb
cmp
outsl
jg
push
push
push
push
mov
mull
lock
xchg
ljmp
andb
mov
jle
in
outsl
rcrb
ret
das
push
lret
dec
lret
mov
or
insb
add
pop
and
or
xchg
xor
sbb
cwtl
bound
push
xchg
fidivrs
push
call
mov
lret
int
rorl
jo
jo
sbb
pusha
nop
fists
lock
sub
cmp
test
inc
push
cmp
jle
xchg
xor
lahf
and
repnz
adc
popa
sti
push
push
cmp
sbb
mov
movsl
mov
xchg
mov
out
mov
dec
dec
adc
imul
adc
sub
sbb
inc
push
popf
cmp
js
add
jecxz
sub
iret
mov
jl
cmp
or
sbb
cli
mov
ds
lret
out
xchg
pop
and
push
mov
iret
das
push
and
aas
mov
mov
pop
lods
adc
cli
dec
loope
rorb
push
xchg
fld
jns
jae
sub
stos
stc
loopne
dec
in
ja
dec
nop
mov
xchg
push
push
imul
int3
and
xchg
jg
mov
mov
popf
fxch
cmp
out
mov
pop
mov
lea
mov
setg
stc
xor
cmpsl
mov
lahf
sti
mov
sahf
fidivrs
jae
cmp
mov
orl
stc
or
int3
xor
sbb
mov
pop
popf
shll
in
fidivrs
jnp
push
les
test
fwait
cmp
mov
outsl
push
fmull
les
mov
mov
lcall
xor
jp
cs
xor
mov
lret
je
divb
out
and
mov
jecxz
ss
cmp
mov
fcoml
aas
mov
sbb
or
mov
cmp
fists
and
pop
xchg
addl
scas
loopne
sub
fidivrs
stos
call
call
inc
mov
test
sub
pop
and
jne
push
arpl
sbb
cmp
data16
pop
add
cmpb
mov
fmull
fistps
inc
inc
test
inc
dec
push
lcall
loopne
sub
std
dec
call
inc
xor
dec
pop
lods
sub
cli
bound
in
push
adc
enter
mov
daa
movsl
loop
rclb
push
movsb
sbb
push
xor
cmp
test
mov
dec
and
mov
inc
dec
jbe
daa
arpl
iret
xchg
inc
adc
ss
pop
leave
and
mov
insl
in
and
add
loop
insb
lock
dec
fwait
sbb
adc
and
jle
dec
cltd
add
ja
aad
xor
adc
adcb
les
js
ret
scas
js
xor
ljmp
sbb
mov
aas
out
jecxz
cmp
inc
adc
mov
pop
xor
int3
imul
mov
scas
imul
push
inc
pop
dec
add
inc
mov
leave
and
test
pushf
fwait
and
dec
ret
leave
pusha
fsubp
in
xor
inc
xchg
mov
pop
xor
jmp
pop
jnp
xchg
push
pop
inc
fs
rclb
mov
pop
ja
pop
ds
inc
sbb
mov
inc
sti
push
cli
push
outsl
mov
cmc
shl
jmp
in
mov
sub
in
fadds
sbb
dec
and
and
aad
ss
jecxz
xchg
dec
mov
in
mov
lods
dec
dec
mov
mov
clc
incb
lods
aas
jecxz
sub
push
leave
mov
test
pop
test
push
sub
ss
lahf
aam
jge
adc
jbe
aaa
xor
pop
push
stc
jecxz
mov
lcallw
dec
clc
daa
sbb
cmp
fisubrl
mov
outsl
dec
pop
sub
and
fucomip
jo
xor
push
arpl
mov
sbb
stos
sub
aad
lret
mov
xchg
cmc
xor
sub
mov
ja
fildl
shrb
scas
in
fmull
cmpsl
xchg
pop
imul
jb
push
pusha
iret
pop
jne
inc
cld
mov
jge
xor
mov
fs
fsubrp
scas
ja
mov
rolb
aad
pop
negb
cmpsl
nop
xor
ret
inc
aad
lret
mov
or
sub
lcall
outsl
sahf
iret
cli
jmp
insl
stos
adc
loop
mov
call
mov
addr16
sbb
cmp
dec
std
mov
push
fsubl
into
inc
dec
and
lret
jne
jno
fwait
ss
ss
adc
or
stc
out
sub
and
push
cmp
push
cmc
jmp
fdecstp
add
into
sbb
xlat
xor
or
xchg
jo
push
test
pop
repz
ficompl
adcl
or
lods
pop
dec
out
mov
add
mov
test
pop
mov
iret
fnstcw
sbb
loope
pop
in
jo
mov
sbb
mov
sub
xchg
sub
mov
xchg
dec
cli
loopne
imul
cmpsl
adc
add
xchg
or
imul
test
xchg
sti
mov
sahf
jb
xchg
lods
insb
push
rcl
lret
icebp
or
xor
sub
jg
inc
push
lret
rorb
ret
testl
ret
dec
cmp
insl
add
into
mov
jns
push
out
lds
xchg
lret
das
inc
jecxz
dec
push
lret
push
out
mov
jle
jle
xor
enter
jp
pop
loope
xchg
ss
outsb
mov
or
js
icebp
popa
lock
push
cli
dec
mov
fs
fbstp
jb
push
fwait
outsb
cmp
outsb
inc
cmp
mov
push
and
cwtl
mov
sub
jne
push
lea
fwait
lret
orl
inc
push
shlb
cld
push
mov
mov
in
dec
and
cmpsb
stc
mov
icebp
and
out
out
inc
pop
das
out
and
lods
movsl
in
arpl
push
pop
pop
cli
push
lods
lcall
cmc
cmp
leave
in
mov
out
inc
push
sub
or
out
inc
inc
sbb
or
fwait
mov
xchg
out
loope
fisubs
ds
pop
test
cmpsl
insl
dec
fisttpl
mov
adc
fsub
mov
push
test
pop
cmp
addr16
jbe
dec
cmpsb
mov
jne
cmp
inc
xorb
subb
imul
mov
mov
lods
fisubs
jno
pop
push
stc
adc
pop
add
out
pop
jecxz
ficoms
and
xchg
shr
push
adc
out
mov
je
mov
push
jne
inc
mov
push
fiadds
in
pop
cmpb
mov
xor
add
inc
push
lret
mov
push
addr16
imul
push
imul
xchg
ret
out
out
iret
xor
adc
aam
cltd
mov
js
ds
xchg
cmpl
scas
mov
out
inc
test
hlt
loop
notb
addr16
push
clc
mov
pop
cltd
sahf
imul
sub
cltd
lcall
sbbb
jmp
pop
ja
gs
lds
mov
and
sub
cwtl
mov
int3
push
leave
inc
shrl
push
lock
imul
mov
popl
repnz
xchg
cmp
rcr
loope
mov
movsl
das
fcomp
testl
loope
push
and
fs
mov
ret
les
sub
adc
cmp
orl
cmp
cmp
mov
add
scas
sbbb
adc
shll
mov
cmp
rcl
xorb
iret
mov
mov
push
jae
lret
and
fdivrs
sub
or
outsb
adc
lret
mov
orl
filds
ja
jp
aaa
sub
nop
out
dec
cltd
jno
mov
pop
in
mov
dec
int
push
es
sub
insl
push
ja
ds
and
dec
out
mov
mov
out
stos
dec
stc
lods
bound
jbe
and
adc
fcomp
rorb
pop
dec
jle
int
in
mov
jo
outsl
mov
mov
call
sysexit
sbb
clc
ret
aad
enter
fmull
call
mov
cmc
test
imul
dec
insb
inc
mov
xor
adc
pop
jp
pop
jne
notl
or
repz
outsb
pop
insl
inc
das
ljmp
decb
mov
sbb
nop
faddl
inc
or
mov
mov
sub
pop
fdivrp
push
and
mov
dec
adc
ret
cld
push
mov
ja
or
daa
jbe
push
mov
aas
mov
lods
sub
bound
and
fstl
add
jne
push
cmp
int
icebp
dec
inc
pushf
shll
movsb
inc
imul
and
or
sarb
notrack
adcl
mov
decb
push
repnz
push
aad
push
sbb
xor
or
mov
addl
test
inc
pop
push
push
push
fwait
cld
ficomps
cmc
out
sub
ss
cld
fs
into
cli
and
cli
push
popa
adc
adc
mov
int3
sub
xchg
aas
jle
fwait
adc
jg
mov
mov
cwtl
xor
mov
mov
repnz
mov
dec
xchg
sbb
movsb
cmpsb
jo
jno
js
push
and
push
push
sub
int
fistpll
dec
lock
mov
xchg
mov
add
pop
mov
cmc
jl
stos
push
loopne
lret
pop
mov
push
clc
arpl
pop
push
addb
cmp
pop
stos
ret
subb
cmp
mov
fisubrl
js
ja
test
int
pop
gs
outsl
sub
lods
or
mov
mov
xchg
or
mov
ds
les
jo
int
leave
push
rorb
pop
mulb
fdivp
push
bound
dec
adc
jnp
fs
repnz
inc
faddl
push
lods
les
add
inc
stos
xchg
inc
mov
xchg
add
in
and
and
loop
mov
inc
cmpsl
sub
or
mov
inc
mov
cltd
shlb
lea
mov
mov
pop
sbbl
ds
fwait
mov
ret
dec
adc
cmc
ljmp
cwtl
stc
sti
sub
icebp
sti
repz
in
cli
push
and
pushf
lret
pop
mov
fstl
xor
dec
xchg
pop
xor
mov
mov
fldcw
cmp
sbb
pop
cmp
adcl
jle
orb
fdivs
pushf
fldl
and
icebp
jb
xchg
inc
pusha
into
fsub
sbb
jg
and
sbb
ja
push
outsb
lods
sbb
dec
jns
pusha
insl
and
dec
or
adc
mov
in
mov
lea
shlb
or
mov
lcall
ljmp
jae
daa
out
pop
sub
xchg
ss
xor
mov
setbe
stos
mov
adc
mov
ret
js
cmpsb
mov
jg
in
int
mov
fadd
cld
cmp
cltd
in
test
sbb
mov
lods
inc
das
dec
jno
push
and
sbbb
rol
roll
xchg
pusha
movsb
ficomps
add
call
lcall
add
or
dec
fdivs
or
adc
lahf
and
lret
or
pop
mov
and
cwtl
pop
sbb
mov
nop
push
test
cltd
mov
xchg
test
jge
cmp
inc
mov
pop
sti
push
xor
add
inc
fldenv
cld
gs
adc
outsb
and
cmp
mov
xor
sub
or
xchg
mov
insb
scas
jp
and
test
lret
out
sbb
scas
mov
cmc
std
sub
pop
fwait
xchg
cs
fucomp
pop
xor
sbb
mov
mov
movsl
test
and
pop
mov
xchg
ror
or
dec
ret
fnstsw
repnz
insl
xchg
icebp
mov
mov
stc
push
push
mov
ja
and
aad
add
lea
cmpsl
fisubrs
jmp
pop
add
cmp
adc
cmp
bnd
iret
bound
mov
inc
add
mov
fldenv
jg
cmp
dec
add
aas
cltd
daa
pop
jae
jmp
loopne
xor
adc
outsl
lret
stos
jmp
mov
sub
xor
popa
mov
aaa
dec
xchg
enter
pop
push
enter
mov
outsl
and
push
cmp
mov
inc
les
daa
cmpb
mov
hlt
in
dec
xchg
adc
insb
xor
lods
mul
leave
sub
nop
in
sbb
push
lea
push
dec
dec
adc
add
call
jp
shll
aad
cwtl
cli
pop
push
add
mov
mov
int
pop
cli
sti
or
mov
adc
notb
aaa
xor
call
call
cmovl
push
add
or
jmp
insb
and
call
iret
insl
icebp
jo
jae
cmp
stos
jne
in
addr16
mov
lods
loope
out
movsl
adc
inc
xchg
das
fwait
sbb
aas
inc
or
xchg
ret
fucomi
int3
ljmp
iret
jbe
cmpsb
bound
push
add
add
push
fs
fnsave
rorl
mov
and
sbb
xor
mov
dec
push
imul
sti
shll
jae
or
jb
mov
add
sbb
faddl
out
add
mov
bnd
jno
rol
push
mov
jbe
xchg
test
lea
cmp
ficoms
jne
scas
xchg
lods
aad
negb
cmp
mov
push
xorb
add
popa
xchg
mov
pop
icebp
mov
dec
cs
mov
mov
mov
loope
ret
cmp
repz
inc
xchg
mov
adc
sbbl
mov
mov
shll
cmpsl
aam
lock
aas
cli
xchg
pop
pop
arpl
lret
fs
shlb
arpl
addr16
adc
lea
fdivp
jne
inc
and
lock
loope
adc
stos
sub
mov
es
int
and
int
jb
jno
insb
data16
fldcw
and
mov
scas
pop
jecxz
nop
add
cmc
repnz
sbb
mov
in
stos
inc
jmp
xorb
and
jne
add
mov
cmpsb
sbb
pop
jg
mov
out
fcmovnbe
mov
movsl
sti
xchg
adc
cltd
xlat
fldt
popf
in
jo
push
mov
sbbl
add
sbb
dec
out
mov
cmc
aad
mov
ficoms
enter
jo
in
lret
mov
jle
cmp
xchg
shrb
pop
sbb
xor
cmp
adc
sar
and
je
mov
outsb
and
in
or
setae
push
imul
in
leave
movsl
pusha
xor
imul
mov
push
inc
fldt
movsl
lea
xchg
mov
lock
cwtl
push
and
mov
leave
adc
ret
mov
inc
mov
out
lds
clc
nop
stos
adc
fiadds
pushf
std
sbb
jl
aad
and
into
fnsave
fcompl
ljmp
xor
arpl
cmc
mov
sti
sarb
add
mov
outsb
pop
shld
mov
movl
pop
notl
jb
xor
mov
adc
sbb
jp,pn
cmp
jnp
call
jmp
in
je
sub
or
lahf
test
lods
add
xchg
jnp
xorb
inc
addr16
and
xchg
xlat
mov
pop
aam
je
outsb
insl
cmpl
out
xchg
xor
test
ja
lcall
cltd
and
cmp
in
add
pop
imul
mov
jg
or
add
mov
call
push
lret
dec
daa
iret
pop
mov
jns
jae
cmpsb
cli
psubd
in
lret
sbb
lahf
pop
ss
sbbb
mov
out
cld
popf
into
jge
cmp
xor
dec
lock
in
push
inc
and
fwait
dec
jnp
mov
fldenv
push
sbb
roll
lcall
mov
adc
out
mov
ret
add
xor
push
repz
sbb
js
fcmovnbe
movsb
cmp
popf
sbb
mov
stos
cltd
jae
xor
cmpsl
aam
call
test
mov
test
sbb
mov
mov
lcall
mov
pop
jns
mov
movsl
loope
iret
and
xor
mov
enter
pusha
mov
repnz
mov
xchg
fs
xchg
mov
hlt
jp
je
lret
out
cwtl
pop
movsb
push
leave
pop
add
aam
pop
enter
cmp
shl
sbb
push
inc
je
ja
xchg
out
and
cmp
dec
mov
movsb
scas
inc
ja
iret
stos
daa
sbb
leave
mov
mov
sti
mov
push
std
inc
mov
cmpsb
orl
cmpxchg
pop
sahf
or
sbb
rcl
lods
xchg
loope
mov
jp
xor
pop
rclb
mov
shrl
addr16
loop
dec
mov
cmc
dec
xchg
xchg
inc
or
sbb
das
enter
shll
or
in
add
jmp
sub
imul
ss
push
mov
ja
pop
jne
cmpl
mov
imul
lods
loope
out
mov
sbb
fcoml
push
add
and
pop
ljmp
push
mov
pusha
mov
ja
sbb
lds
outsl
pop
aam
cmp
inc
rclb
imulb
cs
es
fiaddl
out
ffreep
shrd
dec
jl
fdivl
inc
add
mov
std
sbb
push
cmp
jae
sub
clc
pop
je
jae
cmp
stc
outsb
xor
clc
jg
jmp
loopne
insb
pop
mov
sbb
mov
cld
dec
inc
jmp
lret
out
addr16
pop
mov
push
vpaddq
out
push
xchg
outsl
push
in
pop
dec
push
lahf
clc
xchg
enter
and
test
inc
pop
jl
jle
cmpsl
and
mov
movsb
or
pmulhuw
push
sbb
mov
mov
sbb
fisttpll
xchg
js
and
into
es
shlb
daa
mov
outsl
pop
inc
addr16
xor
cmp
inc
popf
cmp
cwtl
sub
mov
inc
sub
aam
lcall
pop
and
into
cli
or
mov
push
aaa
jl
cmp
dec
push
testl
xor
dec
nop
pop
arpl
test
into
cmp
cmc
mov
add
inc
jg
mov
jae
xlat
flds
sub
addr16
jne
mov
call
in
inc
mov
in
push
mov
adc
inc
ds
mov
lret
leave
sub
jmp
fmuls
out
popa
sbb
push
mov
adc
mov
mov
mov
out
xor
stos
add
repnz
lcall
xchg
xor
jge
jae
sub
std
xchg
jae
and
aaa
and
push
ljmp
push
mov
popl
push
and
push
ja
hlt
rorb
xchg
lea
fdivrl
cmp
test
dec
mov
insl
inc
push
push
outsb
je
adc
push
or
enter
mov
rolb
pop
jns
repz
sahf
aaa
stos
and
outsb
cwtl
jp
dec
ss
and
mov
sub
test
xor
mov
push
pop
test
dec
ljmp
cltd
out
pop
sub
dec
cltd
repz
out
or
fstpl
sti
sub
sbb
sbb
lcall
cmp
xor
lock
mov
sub
add
notb
dec
ret
clc
stos
mov
inc
pop
stc
adc
aad
dec
adc
pop
icebp
sahf
dec
mov
test
or
orl
ja
add
movsl
lods
cwtl
mov
add
lods
push
jno
inc
out
movsl
sti
dec
push
ljmp
xchg
mov
xor
jle
xchg
mov
pop
sub
pop
push
shl
std
loopne
sub
je
testl
push
mov
pusha
or
mov
sub
or
inc
xchg
inc
dec
idivb
inc
push
lret
dec
lods
mov
cmp
and
mov
and
imul
je
loope
inc
loopne
inc
das
push
pop
stos
xor
call
or
addl
dec
test
aad
jae
push
cwtl
mov
inc
or
mov
pop
add
mov
loop
push
push
insl
ja
in
xchg
pop
inc
sbb
bound
sahf
cmp
lahf
jmp
stos
mov
jmp
insb
sub
enter
xchg
sbb
mov
push
sbb
mov
xor
aad
mov
dec
mov
push
and
push
out
inc
out
add
pop
sbb
sbb
gs
adc
and
movsl
jbe
and
jns
rolb
shl
std
and
stos
cmp
sbb
pop
inc
ret
sti
mov
mov
xchg
loop
inc
imul
into
mov
push
jge
ret
sub
out
pop
inc
xor
or
aam
call
xchg
xor
lret
xor
inc
rolb
xchg
pop
pop
dec
cwtl
movsl
cmp
adc
adcb
pop
xor
daa
jae
sbb
jb
cs
sbbl
mov
push
call
out
movsl
insl
les
cmc
jp
test
sub
fdivrs
sti
out
pop
pusha
pop
adc
out
orb
xor
stc
and
xchg
fwait
mov
ss
and
cld
and
mov
pop
ficoml
inc
inc
push
stc
push
data16
push
xor
enter
lcall
lcall
arpl
mov
pop
push
sti
fwait
mov
sbb
xchg
cmp
jp
dec
mov
push
in
loop
sbb
int3
xor
xchg
inc
mov
dec
sub
fisubrs
inc
adc
inc
and
xchg
arpl
mov
dec
inc
mov
adc
ja
mov
lds
enter
mov
cmc
gs
dec
lea
scas
push
add
leave
or
add
push
test
out
or
jbe
popf
adcl
lock
leave
addr16
cwtl
repz
sub
aam
testb
repnz
xchg
or
ss
cltd
jnp
aaa
cmp
lds
dec
cmp
popf
adc
pop
jae
or
mov
jnp
mov
sbb
cmpsl
xchg
mov
in
std
xlat
pusha
es
jb
jmp
insl
pop
add
push
hlt
popf
and
popa
in
cmp
xor
sti
jno
cli
pop
shl
xor
and
lods
lods
dec
xchg
mov
ss
mov
dec
lcall
movsb
sub
and
inc
or
es
xchg
adc
sbb
adc
cwtl
test
enter
mov
popa
add
jns
mov
dec
mov
and
inc
inc
jne
mov
outsl
xchg
sbb
adc
mov
xchg
mov
loope
or
xchg
test
sub
xchg
push
push
mov
repz
enter
scas
xor
and
push
loopne
add
pushf
std
add
jae
push
mov
push
mov
std
xchg
xor
clc
ret
movsb
push
clc
adc
mov
insl
add
mov
sbb
mov
jae
rep
call
sbb
jp
jp
pop
pop
cvtps2pi
push
mov
mov
xchg
scas
sbb
mov
xor
lea
pop
fistl
leave
stos
mov
and
lock
or
insl
pop
lret
hlt
pop
loopne
loop
and
lock
ret
jl
jo
add
decb
dec
dec
xchg
push
into
push
movsl
xchg
or
lahf
xchg
shr
enter
inc
scas
jno
out
push
sahf
lahf
jns
cmpsl
or
inc
jp
mov
sub
js
dec
jp
ficomps
fisubrs
push
push
mov
inc
cltd
jno
mov
imul
mov
sar
jo
and
rclb
xchg
lret
sbb
jecxz
js
dec
daa
pop
fwait
arpl
out
jnp
xchg
xchg
push
aas
outsl
int
lea
adc
addr16
lods
push
and
push
popf
mov
fdiv
leave
enter
lock
sub
or
sub
cmp
push
sub
sbbl
xchg
add
aam
mov
xor
pop
jbe
adc
int3
adc
fldl
pmaxub
jae
cltd
or
or
addr16
out
lods
sbb
mov
jno
add
jp
jo
push
dec
dec
push
sahf
and
xchg
jmp
mov
jae
xor
hlt
dec
dec
call
aad
jne
inc
lcall
dec
or
jbe
lods
jp
imul
adc
adcb
xchg
pop
dec
jns
in
sub
lcall
loop
into
cmc
into
dec
cmp
xor
jmp
cmpsb
mov
cmp
sub
mov
out
sub
push
jle
mov
mov
movsl
bound
push
push
fs
add
popa
aad
cmp
sbb
jp
sub
mov
cmpsl
aad
stos
outsb
jge
std
div
jg
sub
jp
or
cmp
mov
mov
dec
shll
add
jle
mov
fildl
movsl
int3
mov
fisubrs
xchg
mov
imul
bound
dec
adc
stc
and
mov
pusha
mov
cmp
test
rclb
sbb
lcall
inc
pop
ja
in
cmpb
imul
rorl
jo
dec
jmp
mov
mov
rolb
fdivl
jnp
mov
enter
out
dec
call
or
sub
jo
jnp
leave
sub
mov
dec
pavgw
mov
mov
les
adc
inc
into
jg
pop
jo
add
insw
das
adc
mov
jmp
jmp
cwtl
out
or
push
push
pop
xor
inc
ljmp
out
inc
xchg
pop
add
hlt
add
pop
mov
int
sub
das
mov
jge
push
leave
pop
mov
push
outsl
clc
sahf
mov
test
mov
rclb
and
arpl
add
out
loope
add
jp
sahf
pop
cmp
iret
jns
outsb
ljmp
cli
add
sub
jmp
add
pop
test
inc
lahf
push
out
sbb
mov
mov
dec
shlb
push
jno
adc
jge
xchg
sub
sbb
or
mov
scas
cmpsl
xchg
ljmp
dec
leave
cld
pop
pop
insb
mov
mulb
je
jne
and
in
dec
mov
fmuls
add
imul
sub
inc
repnz
imul
jecxz
push
jp
lahf
jp
pop
mov
mov
pop
ret
decb
pop
mov
and
loope
pusha
mov
gs
repz
push
sbb
jmp
dec
pop
das
xchg
inc
push
add
lods
mov
jg
xor
movsl
sbb
dec
jg
or
sbb
mov
pop
push
iret
pop
roll
ret
push
dec
test
mov
pop
xor
popf
sbb
push
push
cmc
outsb
inc
daa
sub
std
push
cmp
xchg
cmpl
xchg
int
insb
pop
scas
int3
and
inc
pop
mov
pslld
mov
pop
lods
sahf
cmp
call
mov
mov
lock
das
int3
adc
mov
pushf
push
cmp
mov
xchg
mov
add
sbb
outsb
jns
dec
int3
mov
cmpsl
int
mov
pop
jecxz
adc
sti
mov
mov
mov
movsb
jmp
push
jnp
gs
fcompl
punpckldq
push
addr16
outsb
aam
xchg
push
pop
mov
pusha
int3
xchg
xor
aam
mov
xchg
jmp
std
insb
mov
stc
data16
mov
inc
mov
xor
loopne
pop
sbb
xchg
stc
ret
lcall
test
cld
ficoml
mov
js
in
lret
pop
cmp
jmp
out
enter
mov
ja
decl
mov
pop
dec
add
mov
add
loop
xchg
insb
dec
xor
sbb
inc
leave
pop
and
imul
std
push
stc
mov
int
jg
sub
pop
push
fwait
pop
aad
shrl
mov
int3
fdivl
sbb
adc
add
insl
inc
mov
mov
and
addb
negb
sbb
in
mov
jg
gs
mov
iret
mov
xchg
fsubr
dec
aaa
adc
lret
pop
push
arpl
out
or
push
rorl
jmp
dec
pop
bound
push
shrb
loopne
mov
nop
lret
xor
jg
mov
pop
leave
int
lods
insb
xchg
sub
arpl
cli
out
lock
daa
add
jno
test
fcmove
out
loopnew
inc
clc
sbb
xchg
jne
neg
stos
pop
sub
clc
shr
ss
test
mov
aam
ja
pop
test
jge
or
lret
rcrl
scas
add
pop
add
incb
imull
sub
mov
cltd
push
push
and
ljmp
lret
adc
cmpsb
adc
bound
cli
js
mov
mov
cwtl
adcb
shll
in
gs
sbb
movsb
movsb
mov
pcmpeqw
rorl
push
imul
jb
dec
repz
jge
shl
mov
scas
inc
call
out
add
cmp
sar
jnp
mov
dec
repz
mov
sbb
sbb
cmp
into
cmpsl
xchg
jbe
mov
nop
rolb
push
cmp
mov
xor
incb
sbb
mov
cmp
orb
inc
mov
sbb
jne
mov
mov
rol
mov
mov
xchg
leave
popa
mov
out
jae
enter
stos
ds
lods
mov
enter
dec
push
mov
sahf
mov
cmp
inc
mov
test
mov
jl
out
inc
cmp
xlat
push
in
ja
clc
add
sbb
rcll
mov
sub
rcrl
pop
sub
jecxz
lcall
shr
repnz
divb
adc
inc
and
ja
sub
dec
cmc
push
cwtl
pop
xchg
mov
push
lock
loope
in
in
insb
cli
adc
aaa
add
push
pop
push
in
lods
int
scas
loop
stc
pushf
xor
cmp
out
mov
cmp
leave
lret
bound
mov
lcall
call
jbe
aam
inc
in
insb
gs
xchg
mov
jns
add
insb
aam
xchg
leave
mov
ja
sbb
add
adc
push
and
mov
and
mov
fs
jae
jae,pn
mov
cld
jne
inc
push
xchg
jle
jbe
jge
sbb
jbe
jo
xchg
rcr
rorl
push
pop
addb
scas
xchg
pop
mov
mov
pop
pop
ss
dec
adc
jbe
sbb
fcoms
adc
mov
inc
push
aam
dec
xor
shlb
xchg
in
xchg
out
lret
mov
out
gs
repz
and
movsl
pop
pusha
push
xchg
cmp
push
ljmp
imul
lret
testb
test
and
nop
fwait
sbb
rclb
iret
dec
out
push
test
fwait
aad
mov
ret
bound
roll
xchg
adc
inc
ljmp
popa
or
mov
imul
mov
cltd
outsb
mov
cmc
xchg
mov
inc
repz
push
jp
jmp
js
mov
clc
adc
fs
pop
fwait
idivl
adc
cmpsl
mov
insl
sbb
mov
out
cltd
inc
js
stos
sub
imul
insb
add
pusha
sbb
jl
jne
push
aam
jb
stos
sbb
test
xchg
shlb
int
lcall
pop
cmp
not
arpl
adc
mov
fidivrl
nop
jno
mov
lds
xor
mov
imul
dec
jbe
insl
pop
cmp
icebp
dec
stos
arpl
lds
jecxz
push
ds
dec
fldl
lock
mov
fsubs
outsb
pusha
xchg
mov
insl
sahf
adc
lds
mov
mov
dec
shlb
scas
enter
pop
lock
cmp
dec
mov
mov
or
mov
outsl
ljmp
or
dec
hlt
sbb
and
fs
mov
pusha
sbb
cmp
inc
lcall
adc
fcoms
push
fmul
or
pop
push
es
mov
lcall
notl
lea
and
fst
lret
adc
test
add
fldt
ds
mov
gs
imul
movsl
fnsetpm(287
xchg
int3
jle
clc
sbb
psubq
std
lds
push
pop
icebp
xchg
adc
push
outsl
and
mov
jp
cmpsl
rcrb
add
adcb
push
or
je
aas
imul
sbb
mov
adc
push
dec
outsl
inc
popf
nop
xchg
pop
dec
sbb
push
jmp
push
dec
cwtl
or
int
int
add
fcomip
jbe
add
pop
imul
push
int3
sbb
cwtl
mov
cmp
fsubr
add
xor
add
andl
repnz
int
jmp
std
fldl
mov
in
jnp
outsb
leave
lret
xor
loopne
xor
dec
int3
xchg
outsb
pop
rolb
mov
dec
mov
in
cs
cmp
stc
lahf
inc
aad
cmp
mov
inc
imul
mov
les
sbb
mov
adc
jp
xchg
test
repz
scas
test
repz
push
pushf
push
or
sbb
and
push
pop
loopne
xorl
sbb
fisttpl
jns
cmp
xor
adc
sub
inc
cmp
in
scas
or
lock
sahf
pop
gs
mov
in
and
int
dec
mov
jns
xlat
mov
mov
inc
jns
xchg
test
fsubrl
sub
mov
loopne
push
mov
mov
mov
pop
fs
insb
cltd
or
ljmp
inc
and
jae
pop
or
xlat
mov
add
add
dec
jl
sbb
popa
jo
dec
and
icebp
mov
sub
cmpsb
cmpsl
pop
mov
pusha
and
mov
mov
xchg
int
lods
out
xor
adc
add
xchg
or
enter
cmp
jp
xchg
cmp
popa
xor
add
xor
or
faddl
sbb
and
and
and
or
pop
xor
jne
adc
mov
xchg
mov
sub
ret
daa
xchg
sbb
iret
fisttpl
adc
mov
mov
sahf
add
out
sbb
ljmp
bnd
pop
mov
push
push
cmp
xor
scas
add
or
adc
push
ja
jno
andb
pusha
movsb
pop
inc
push
clc
cmp
rorl
xor
pushf
xchg
xchg
stos
jb
mov
int
fsubrl
cli
shrb
mov
aas
push
cs
stc
lcall
xchg
sti
and
or
popf
pusha
pop
shrb
sub
dec
aad
icebp
leave
inc
adc
in
adc
mov
loopne
loop
pop
popf
loopne
pop
enter
lret
inc
mov
repz
xor
jo
push
outsl
lahf
push
xchg
test
aad
fldcw
pushw
sti
jle
imul
mov
sbbl
jl
into
mov
lret
adc
lods
xchg
sarl
sbb
in
xor
mov
and
stos
adc
add
mov
out
push
dec
fcompl
insb
jmp
mov
fsubr
mov
jb
or
mov
movsb
es
push
or
ret
movsb
clc
fsubs
mov
xchg
sub
jmp
int
mov
mov
fstl
inc
push
push
arpl
pop
push
mov
sub
fnsave
jmp
and
xor
xchg
jo
xor
mov
push
outsb
cmpsl
int
lcall
mov
pop
sti
pop
mov
ljmp
divb
mov
dec
jp
movsl
jno
test
pop
cmpsb
lret
inc
fsubrs
divl
mov
xor
lret
push
bound
xchg
aaa
js
notl
adc
cltd
lcall
dec
decl
adc
loop,pt
int
pop
push
loopne
mov
cmp
cmp
mov
push
jne
sbb
addr16
cmp
lahf
add
je
sbb
jne
les
clc
xchg
lods
hlt
rolb
aam
jns
fildll
jg
or
and
mov
ja
push
pop
mov
pop
sahf
nop
ja
fstl
jae
adcl
jle
xor
dec
outsl
adc
push
pop
mov
dec
rcrl
jp
ret
mov
and
mov
xor
int
sbb
rcrb
lds
mov
dec
dec
out
shr
jp
int3
mov
jecxz
into
and
stos
mov
cmp
xchg
sbb
aaa
into
movsb
aam
mov
mov
ss
mov
mov
adc
and
cmpsl
push
dec
jmp
pop
xchg
and
mov
xor
mov
add
mov
and
loop
push
jb
and
or
jno
mov
adc
xor
sub
cmp
jb
adc
hlt
stos
cs
xorl
or
or
sub
ljmp
sahf
mov
ret
ficomps
decb
in
sub
call
push
into
adc
mov
mov
sbb
jg
or
cmpsl
inc
cltd
in
enter
or
jle
out
stos
add
js
imulb
mov
insb
jge
adc
popa
pop
jmp
adc
sub
gs
add
test
rorl
sub
xchg
fbstp
dec
jl
mov
push
std
movsb
jmp
aaa
cmc
cmp
xchg
insl
stos
push
cli
jns
mov
push
inc
nop
aas
xor
mov
mov
shrl
stos
rorb
xchg
rcr
add
cltd
sahf
arpl
mov
pop
mov
aaa
mov
notl
mov
pop
xchg
mov
in
sub
xchg
insl
fsubl
xchg
loopne
jnp
int
pop
js
clc
repnz
xchg
cmc
or
add
sbb
sbb
sbb
jmp
movsb
and
sub
aaa
mov
adc
dec
mov
mull
loopne
pop
jnp
imul
imul
test
testb
dec
push
pop
xor
dec
fdivrl
xor
insb
jne
push
popa
inc
fstps
jbe
add
test
xor
push
std
mov
negb
aam
inc
fbstp
sub
scas
std
loope
imul
xor
loope
mov
jecxz
pusha
fwait
mov
aam
test
mov
lcall
cltd
jnp
xorl
mov
loope
adc
subb
xchg
adcl
cmp
push
xor
sbb
rolb
das
mov
cmp
fsubr
push
in
ds
or
fcmovu
lock
mov
inc
cltd
pop
shrl
adc
pop
fstpt
lret
inc
inc
cmp
cmp
sbb
xchg
int3
jmp
shll
and
aas
lret
mov
jecxz
pop
xor
bound
lea
dec
inc
ret
mov
pop
add
jle
adc
xchg
or
insb
mov
lods
push
adc
jg
cmpsb
scas
lahf
lods
lock
adc
cmp
pop
enter
outsb
mov
jne
scas
mov
lret
mov
fldl
push
jle
inc
out
push
call
add
iret
ds
xchg
pusha
or
jmp
push
loop
xchg
ja
jae
xor
je
xor
mov
xor
push
jl
data16
jno
dec
ja
inc
or
jmp
repnz
mov
sbb
loopne
mov
call
fwait
add
loope
divl
mov
in
cwtl
insl
and
fisubs
sub
sub
sarl
nop
lock
adc
out
addr16
lret
lahf
lds
dec
int
sbb
leave
fisubl
inc
lahf
call
je
xor
sbb
lds
cltd
push
inc
out
mov
mov
jle
inc
push
push
dec
ror
xor
data16
mov
add
sarl
in
jnp
dec
jo
or
xor
inc
pop
push
stos
adc
cmc
sahf
adc
or
das
xchg
test
mulb
push
or
popa
negl
push
cmpsl
sbb
sbb
fdivp
aaa
fcoml
sub
pop
lea
fcomi
mov
or
jne
aam
mov
lds
ds
into
cltd
inc
ja
scas
cmpb
push
outsb
jno
lea
push
test
int3
sub
rcrl
mov
ret
jp
mov
pop
call
lahf
sub
daa
ja
in
gs
popf
fadds
jne
fcmovu
fstpl
sbb
iret
sbb
int
stos
aaa
dec
jb
sbb
pop
clc
dec
dec
and
test
lea
testl
aam
je
and
add
push
outsb
stos
lahf
or
lods
push
mov
xor
aad
int
inc
pop
mov
push
cld
outsl
push
pop
das
fucomp
dec
lahf
push
lock
test
inc
jl
jne
dec
push
ja
mov
frstor
scas
cmp
imul
in
aad
popf
insb
jle
outsl
push
jp
cmp
mov
fmul
daa
ja
mov
popf
js
cltd
add
out
and
push
pop
xchg
pop
leave
stc
pop
xor
and
sbb
sbb
sbb
lcall
std
adc
adc
aas
popf
out
orl
and
inc
mov
sub
in
jg
push
shll
subb
stc
sbb
pop
in
inc
aam
dec
push
loopne
cmpsl
ds
stos
mov
sti
adc
scas
das
mov
loop
inc
std
pop
sbb
xor
fcmovnb
dec
inc
cmp
bswap
and
andb
pop
pop
xchg
pop
sbb
adc
add
sub
push
clc
ds
cmc
push
in
lahf
lock
call
and
sub
sbb
into
pop
outsb
push
out
pusha
call
out
insb
adc
push
pop
push
loopne
ret
flds
add
test
mov
filds
outsl
imul
sub
fldcw
repz
clc
imul
cli
xor
jb
inc
pushf
negl
jmp
insl
ficomps
cmpsl
std
xchg
sbb
shlb
daa
dec
sub
test
push
jp
jae
mov
dec
ljmp
xchg
inc
cwtl
stc
pop
ds
jge
scas
inc
cmp
repnz
cmp
mov
clc
clc
add
pop
orb
enter
cmp
ja
ret
mov
dec
jl
pop
shll
dec
fisubs
outsb
insb
pop
jne
xor
push
mov
pop
ja
insl
inc
xor
dec
and
jle
and
fisubs
add
dec
dec
jo
mov
scas
hlt
ret
shrl
add
daa
push
cmp
hlt
mov
lcall
xchg
and
add
add
mov
cs
add
jp
push
pop
in
int3
mov
cmpsl
and
loopne
mov
cmp
cld
cmp
or
mov
test
push
leave
addr16
pop
lahf
lods
pop
lret
imul
enter
xchg
jmp
test
adc
pop
mov
push
sbb
mov
jge
ja
das
xchg
popf
out
mov
adc
testb
xchg
adc
andb
leave
sbb
or
xor
or
push
and
das
pop
pop
lods
cmpsb
sbb
ja
sub
fstl
sbb
cmp
sbb
inc
dec
add
insl
and
pop
and
push
mov
fimuls
dec
nop
fwait
mov
inc
pop
inc
loop
in
int
mov
insb
xor
cld
sub
dec
mov
push
add
test
stc
sahf
popf
bound
adc
mov
fs
cmpsl
mov
into
pop
divb
mov
mov
jo
push
shrb
repnz
cmp
mov
fcoms
stos
jl
sbb
stos
movsl
mov
xor
imul
push
dec
ds
aam
call
and
mov
cmpl
push
lret
inc
xchg
xchg
mov
xor
cmp
xchg
aaa
in
push
and
xchg
test
or
dec
jnp
pop
and
jnp
xor
repnz
dec
xor
jb
mov
lea
pop
mov
jecxz
ret
addl
leave
mov
js
and
rolb
adc
lea
lea
inc
mov
dec
xchg
mov
or
push
scas
pop
sub
xchg
in
int3
cltd
sub
jae
fwait
out
dec
mov
and
rclb
sub
mov
dec
cli
std
mov
movsb
insl
aas
imul
movsl
aas
outsl
je
sub
je
call
dec
insb
adc
lods
in
xchg
xchg
xchg
inc
ja
mov
mov
or
lret
jbe
add
insl
gs
test
lods
fsub
int
cmpsl
stc
lea
ret
cmp
mov
push
lods
jp
lea
mov
mov
xchg
push
and
cld
cmovne
aas
dec
push
xchg
dec
repz
cwtl
xor
shr
push
sarl
pusha
repnz
lret
movsb
int
adc
sbb
sub
pmaxsw
outsb
pop
sub
sbb
pop
mov
xchg
sarl
sbb
out
cmpsb
mov
call
cmp
push
sub
cmp
inc
push
push
roll
outsb
sbb
push
xor
jmp
inc
cmp
mov
push
iret
ret
jnp
fdiv
jne
in
and
sub
or
pop
cmp
push
or
mov
sbb
cmp
int
sub
test
filds
cmp
pop
lock
pop
ftst
adc
add
cmp
fisttpl
shlb
aaa
outsl
jmp
sbb
test
mov
add
idiv
lds
addb
xorb
adc
aaa
jmp
cld
xchg
int3
daa
cmpl
mov
push
adc
movsl
xor
inc
insl
icebp
jb
dec
pusha
repz
inc
inc
shrl
sub
inc
loope
pop
aas
cmp
jmp
add
add
aas
cmpsl
mov
xchg
mov
hlt
sbb
inc
and
das
test
xchg
es
jae
mov
xchg
lods
aad
sbbb
pop
into
xlat
hlt
or
les
rolb
xchg
nop
jg
xor
andb
cmp
je
pop
icebp
xchg
add
sbb
push
shlb
stos
add
adc
imull
push
mov
mov
lret
sub
arpl
lcall
ljmp
lock
into
jp
insl
mov
pop
adc
fcompl
in
push
pusha
paddq
in
add
mov
fwait
mov
in
insb
inc
lahf
cmc
in
leave
int
ret
lret
in
jae
out
adc
or
push
and
ds
xchg
icebp
inc
popf
icebp
lds
pop
les
mov
inc
sbb
mov
ficoml
movsl
aad
lahf
int
sub
jo
jge
aam
dec
lret
push
push
out
adcb
popf
cmp
mov
push
outsb
dec
jnp
in
pop
or
cltd
jbe
pop
das
test
pushf
mov
jbe
cltd
stos
fprem1
les
fsubl
fcmovnbe
pop
movsb
sub
xor
out
mov
andb
cmp
mov
jo
arpl
test
ljmp
test
lods
loopne
rclb
jl
pop
nop
loop
in
and
xor
xchg
dec
repnz
jecxz
sbb
jnp
or
sub
jg
adc
mov
fisttpll
lret
dec
int3
jb
mov
xor
push
xor
cmp
and
idivb
mov
push
jle
jle
shrl
jl
add
imul
pop
mov
clc
sub
inc
pop
movsl
loope
add
fmuls
dec
push
and
cmc
ret
inc
sub
jbe
fs
or
add
and
insl
outsb
cmp
outsl
push
cmp
mov
xchg
inc
push
adc
xcrypt-ctr
cmpsl
sahf
jmp
xchg
hlt
xlat
cmp
jnp
dec
inc
in
and
xchg
sbb
stos
in
push
insl
jp
pop
lret
std
mov
cmp
idivb
and
mov
jmp
mov
xchg
sub
pop
cwtl
clc
es
cmpl
dec
aas
sbb
pushf
stc
mov
in
and
aaa
push
movsl
bound
mov
out
adc
adc
stc
aam
test
push
test
loope
pop
or
lret
inc
xchg
divl
sub
mov
js
jmp
nop
lods
gs
and
push
xlat
inc
sahf
ret
loop
xor
mov
sub
les
je
shll
jne
scas
sti
add
cmpsb
mov
mov
fdiv
fisubl
mov
jae
cmp
outsl
xchg
and
xor
xchg
or
push
lret
mov
fstp
mov
mov
mov
xchg
loop
into
sub
in
push
stc
pop
and
out
xchg
ds
shrl
xlat
inc
aad
les
mov
fs
push
push
mov
nop
cmpsl
cmpsb
ja
cltd
jbe
mov
shlb
or
lods
pop
aas
aaa
loope
gs
mov
xchg
sbb
mov
lock
xchg
mov
pop
cmp
rclb
mov
iret
scas
inc
sub
push
loop
or
mov
push
lret
ret
test
out
lahf
jbe
sub
xchg
push
addb
lcall
xor
dec
and
adc
orb
inc
scas
subl
arpl
cmpsb
fnstsw
int
or
outsb
adc
or
loopne
jns
sbb
dec
lcall
cmovle
pop
nop
iret
or
jle
sbb
cltd
daa
lea
mov
dec
inc
enter
jl
jl
mov
jae
sub
rclb
xchg
mov
iret
jnp
push
jecxz
xor
clc
movntq
xchg
inc
adc
test
ds
imul
ret
push
shlb
loope
adc
dec
xor
inc
mov
or
iret
ljmp
sub
iret
or
test
es
mov
in
dec
sbb
jne
mov
repnz
loope
adc
jecxz
and
frstor
iret
push
mov
mov
fisubrl
fstpl
push
sbb
jns
fistpl
int
sarb
mov
sub
sub
loopne
fildll
xchg
inc
call
imul
shlb
push
pop
shl
imull
enter
stos
sub
shrb
push
sub
mov
and
mov
and
fs
pop
sar
adc
mov
jg
sbb
cmpsb
in
rcrb
mov
lret
movsb
jg
mov
mov
xchg
lods
jne
out
xchg
mov
jmp
jne
fstl
sbb
das
das
xlat
jno
xchg
out
scas
dec
iret
movsb
fidivrl
in
jne
pop
ret
mov
xor
and
mov
pop
nop
loope
data16
cltd
mov
mov
andl
push
lahf
lods
sbb
fnstsw
fidivl
lcall
fbld
ss
gs
jae
stc
push
add
dec
pop
les
mov
dec
test
mov
mov
xor
loope
xor
dec
ljmp
ficompl
insl
mov
cwtl
arpl
pop
adc
adc
popa
mov
and
jae
xor
xchg
lods
fnstenv
data16
adc
lds
sub
mov
das
repnz
test
and
pusha
mov
jbe
fistps
and
in
iret
mov
mov
fidivrl
fstpt
cmc
mov
add
adc
les
mov
push
push
dec
ficompl
mov
sub
out
xchg
stos
sahf
pop
dec
es
ds
loopne
aaa
cld
cmpsl
xchg
xchg
push
dec
and
jl
xchg
cs
pop
or
arpl
sbb
jae
pop
mov
aas
ret
lret
scas
jb
sbb
shrb
dec
push
test
cmp
stc
addr16
pusha
mov
fwait
and
ficomps
xor
adc
push
jbe,pn
jmp
adc
aad
fwait
mov
or
movsl
inc
inc
rorl
gs
test
out
adc
les
andl
pop
mov
inc
mov
jmp
or
ficoml
pop
dec
mov
std
and
repnz
jg
fadds
int
rcl
push
insl
int3
cld
aaa
cmp
mov
fs
rcrl
lock
lods
xlat
loop
dec
or
jmp
adc
ret
out
test
and
jo
push
jne
aad
inc
add
rcll
ret
out
push
notl
or
jae
push
sub
or
dec
test
mov
divl
stc
data16
call
dec
pop
shlb
push
imul
and
jno
scas
xchg
lds
mov
sbb
into
fwait
cmp
mov
cmp
out
es
les
add
mov
adc
rolb
daa
fisubl
lds
sub
lret
popf
jnp
out
fwait
cmp
mov
rcr
cltd
decl
push
mov
or
call
in
xchg
aad
mov
lock
jp
leave
cmpsb
test
add
mov
or
push
mov
pop
out
cwtl
inc
or
fistpl
out
mov
daa
xorl
jb
lcall
sar
mov
adc
nop
adc
mov
in
pop
mov
orl
xor
jecxz
fnstsw
xchg
push
test
adc
cmp
dec
dec
jno
pop
iret
push
test
cmp
and
lret
jne
out
jo
orl
cmp
js
out
adc
jl
stos
mov
or
pop
in
jae
aas
data16
pop
test
mov
jb
or
int3
aad
sub
add
fs
fwait
pop
mov
pop
push
dec
jmp
addr16
dec
mov
clc
mov
jnp
pop
xor
dec
jns
jns
mov
push
out
lcall
sbb
rorl
jp
mov
push
leave
pop
jmp
std
mov
xchg
push
aad
xor
icebp
lcall
lret
pop
imul
fwait
out
inc
cwtl
push
lea
les
rclb
fnstcw
lock
and
xchg
repnz
stc
cmp
cmpsb
xchg
pop
pop
insb
cmp
sti
jo
xchg
imul
or
inc
mov
mov
xchg
out
or
out
xor
je
ret
or
gs
mov
mov
jbe
mov
xorl
lock
push
pop
stos
cmp
out
push
push
scas
mov
sbb
test
push
outsb
ds
icebp
das
sbb
sbb
divl
mov
push
sub
pop
outsb
sbb
dec
jb
adc
push
ja
xor
mov
push
push
mov
mov
insb
aad
xchg
xchg
jo
dec
jae
cmp
sbb
das
fldenv
out
insl
or
inc
shll
cmp
jmp
push
cmpsl
sub
xchg
into
cmp
mov
add
inc
mov
inc
repnz
jne
xor
mov
add
mov
jmp
jae
sbb
pmulhrsw
dec
lea
ret
js
pop
loopne
dec
popf
dec
js
lahf
xchg
inc
mov
add
push
lahf
mov
jg
stos
lods
and
aam
jg
sub
mov
ja
es
adc
add
dec
jg
dec
pop
sbb
imul
subl
testb
inc
imul
lods
fcmovb
call
or
jecxz
lock
xor
int3
add
lcall
aad
cmp
fcomip
iret
push
add
add
sbb
mov
fidivrl
fs
inc
arpl
xchg
loope
nop
xchg
fdivrp
cli
mov
clc
mov
imul
pop
mov
iret
outsb
jno
mov
adc
sub
or
jl
subb
hlt
shl
shlb
daa
push
addr16
das
aaa
inc
pop
int3
pop
mov
stos
xchg
aas
xor
dec
xchg
cmp
dec
pop
in
int3
clc
loopne
xor
mov
push
xchg
iret
stos
adc
mov
in
sub
insb
ret
cld
out
jns
arpl
pop
jnp
dec
mov
cs
cltd
inc
or
lds
add
add
mov
xor
sub
inc
iret
pop
stos
dec
and
notl
test
xchg
sub
add
ret
sbb
mov
lds
sub
inc
dec
leave
push
push
neg
psubd
popf
add
sub
movsb
push
fists
push
cmp
into
cmpsl
push
pusha
ljmp
cli
into
les
sub
jbe
ret
sbb
jmp
idivl
pop
pop
fildl
or
test
sbb
inc
adc
mov
imul
repnz
mov
daa
xor
int
sub
lea
inc
arpl
dec
adc
cwtl
mov
int
push
xchg
lcall
out
push
icebp
sub
adcl
loop
shll
inc
int3
lret
xchg
mov
test
lahf
fs
pop
icebp
out
dec
cs
push
and
out
cli
arpl
dec
sbb
movsb
lcall
mov
sbb
and
insb
rclb
loop
adc
jne
mov
add
mov
pushf
test
rdtsc
shll
test
dec
and
test
popa
cli
mov
pushf
inc
add
jnp
pop
jb
jl
mov
mov
mov
out
jge
dec
mov
push
xorl
int3
repnz
or
std
imul
mov
bound
les
mov
xor
mov
leave
sub
addr16
adc
into
out
in
imul
xor
gs
ljmp
add
inc
inc
push
mov
sub
lds
out
fldenv
ss
inc
cmp
idiv
imul
rcll
lret
mov
std
les
rcr
inc
mov
sub
call
insb
xorb
popf
mov
mov
fistps
mov
imul
bound
add
or
adc
jmp
push
testl
pop
inc
loope
mov
sub
xor
enter
ficompl
outsb
cmp
jne
shl
sbb
mov
mov
mov
push
sbb
shrl
outsl
mov
xor
leave
or
enter
sub
into
mov
aam
in
push
xchg
and
pop
lret
stc
ljmp
pushf
jnp
fidivl
jne
adc
mov
iret
lret
int
push
mov
loop
sbb
adc
in
xor
pop
pop
fst
dec
inc
dec
pop
stos
and
cmpsl
jmp
das
push
xchg
pop
stc
aam
fld
xor
push
pusha
popa
ds
push
add
imul
cmp
int3
rol
jno
ja
mov
push
and
jbe
cmp
sbb
xchg
sarl
movsb
pop
shll
cmpsb
or
fnstcw
jl
repz
imul
and
lock
iret
mov
push
in
jbe
leave
inc
jge
or
outsl
aaa
jbe
sbb
adc
cli
mov
jmp
mov
lret
xor
fidivrs
dec
cmp
pushf
jl
and
sbb
xchg
push
adc
ret
push
cmpsl
mov
mov
push
sub
lods
es
into
rclb
mov
outsl
cmpsb
xchg
stc
inc
data16
pop
dec
jno
rorl
xor
push
repz
es
orb
inc
imul
pop
and
lea
loop
pop
into
or
sub
sub
loope
or
pop
or
sbb
pop
int3
mov
mov
and
xchg
or
test
out
in
inc
cs
sbb
xchg
fcoml
addr16
pop
ret
dec
dec
add
andb
aaa
subl
mov
pop
dec
ja
cmc
cli
cwtl
hlt
xchg
sbb
add
xor
testb
bound
dec
test
pop
inc
ljmp
add
outsl
jg
mov
pop
lods
push
mov
dec
das
pop
adc
mov
out
push
out
push
push
pushf
leave
stos
lods
imulb
aas
sarl
roll
pop
roll
das
mov
and
iret
fisubs
mov
mov
adc
aad
rorl
iret
xchg
jecxz
popf
mov
jp
outsb
fsub
mov
sbb
adc
arpl
push
in
adc
mov
dec
add
xor
and
pop
fnstcw
and
push
dec
je
push
rolb
imul
iret
push
dec
push
add
or
push
inc
test
sbb
xor
fucomip
fcomip
adc
mov
repnz
rcrl
mov
loop
cwtl
aaa
xchg
xor
dec
xchg
scas
je
xor
addb
dec
jae
lahf
xor
lds
stc
mov
pop
sbbb
sbb
xchg
xchg
inc
ss
mov
jmp
jle
add
pop
inc
mov
sub
fiadds
jne
lret
jnp
fwait
orb
lock
adc
mov
lahf
inc
push
into
loop
fdivs
push
and
xchg
xor
adc
jo
sbb
jp
xchg
lds
inc
dec
shr
out
and
out
arpl
push
jb
cwtl
fisttpll
sbb
xchg
cmp
jecxz
and
inc
push
std
mov
repnz
mov
adc
xchg
pushf
adc
lcall
xchg
iret
fists
out
jmp
aad
imul
es
xchg
jns
jmp
lock
adc
aas
repz
fsubp
insb
clc
sub
jns
sbb
mov
lods
mov
jle
mov
cmp
adc
ljmp
lret
xchg
push
sub
cmovbe
mov
iret
xchg
aaa
or
pop
scas
jmp
lret
into
mov
sub
sbb
mov
push
xor
sti
cltd
addl
test
test
sarl
adc
mov
push
jmp
leave
shlb
roll
jl
stos
in
cmp
jne
push
mov
and
push
cmpsl
rol
pop
cltd
xchg
jbe
push
or
sbb
xor
lret
pop
stc
dec
out
das
es
movl
sbb
xchg
mov
mov
std
fwait
call
sarb
cmc
shr
in
mov
imul
push
mov
aad
nop
jl
mov
lods
scas
sbb
in
mov
aas
iret
pop
dec
in
push
test
shll
add
roll
push
mov
and
mov
lods
insb
push
xor
mov
or
aam
sub
sub
mov
gs
adc
add
aaa
sbb
sti
daa
jnp
fcoml
push
jl
xor
push
dec
sbb
fiaddl
les
jge
mov
fcmovnbe
mov
out
mov
dec
hlt
bound
push
push
fisubrl
xchg
add
inc
mov
push
outsl
sub
daa
pop
xchg
fdivl
loop
cmc
sti
and
stc
jmp
adc
dec
sub
jns
push
js
repz
idivb
cmp
mov
leave
mov
in
add
dec
xchg
xor
add
jmp
insb
jp
mov
das
jns
pop
add
bound
mov
pushl
cld
push
xor
jno
cmpl
cli
test
jbe
xchg
std
mov
cmp
xchg
cltd
clc
cmpsb
jg
addb
shl
pop
sbb
and
dec
mov
insb
xor
inc
lea
pop
sbb
pop
and
je
lret
sub
fs
dec
les
pushl
dec
jecxz
fisttpl
pop
mov
cli
cmp
scas
mov
jo
daa
shrl
inc
loope
test
dec
push
movsb
cmp
xchg
imul
in
sahf
adc
movsl
aaa
pusha
add
adc
int3
loope
push
or
sub
fwait
cwtl
push
jp
dec
push
stos
aaa
mov
adc
push
lock
pop
dec
add
shlb
xchg
pop
sub
pop
enter
fwait
pand
xchg
sbb
pop
or
mov
mov
push
in
mov
push
fidivrl
cltd
das
divb
dec
mov
add
jge
dec
daa
hlt
xor
insl
addl
or
pop
cli
bound
jmp
jns
xor
stc
lods
dec
sbb
or
int
aad
into
cwtl
sbb
imul
adc
mov
xchg
adc
lods
in
sbbl
mov
js
stos
in
das
xchg
ficompl
loope
fs
pop
pop
inc
divb
frstor
lods
or
cmp
pop
mov
xchg
push
lahf
cmp
sahf
insl
adc
dec
loope
cltd
sbb
ret
cmp
inc
movsl
and
add
dec
inc
insb
sti
pop
sbbl
add
push
stos
and
bswap
pop
loope
or
adc
pop
pusha
fbld
nop
int
les
adcb
jbe
push
xor
rorb
cmpsl
and
hlt
add
lods
addb
add
pop
insb
sbb
jmp
cmp
mov
imul
cmp
cmp
jb
sub
mov
or
or
push
xchg
repz
adc
push
call
add
and
dec
sbb
jl
imul
sbb
das
sub
add
push
mov
lahf
pop
add
inc
lea
fdivr
ljmp
aam
jge
cmpsb
push
fstpl
loopne
pop
mov
sahf
xlat
mov
data16
xor
scas
addr16
popf
gs
shr
mov
jp
xchg
jge
inc
xchg
test
jl
lods
xchg
mov
push
xchg
in
mov
sub
add
xor
mov
scas
testb
jb
push
sbb
and
mov
inc
fistpl
shrl
jo
test
ret
in
aad
sbbl
sub
aas
pop
inc
aas
jno
fisubl
pop
cmpsl
xchg
push
lea
imul
in
dec
dec
sbb
adc
mov
mov
push
xchg
dec
das
mov
xor
loop
cmp
push
inc
mov
call
iret
aad
pushl
fxam
inc
pop
pop
xchg
pop
test
test
out
iret
test
jbe
sahf
outsb
bound
or
xor
add
stc
nop
adc
repz
sahf
cmp
push
lds
test
notl
push
nop
inc
push
add
iret
out
sub
xchg
stc
add
fists
pop
das
and
inc
insb
je
icebp
sub
xchg
scas
xlat
inc
dec
pop
test
mov
fmulp
in
fwait
mov
pop
jb
stc
fdivs
cmpsb
dec
cmp
imul
lods
jg
sub
mov
lods
fbstp
push
andl
outsb
adc
jbe
imul
fisubrs
shll
out
and
jo
sbbb
mov
add
sqrtps
xor
add
fcmovne
push
lahf
dec
cmpsb
mov
ljmp
and
ja
ljmp
sub
mov
aaa
fbld
push
mov
xor
cld
mov
stos
jge
lods
xchg
cwtl
mov
mov
addr16
rolb
ret
or
cltd
cmp
stc
out
pop
and
data16
sbb
jecxz
sbb
cmp
xchg
jb
jns
or
adcl
scas
pop
and
dec
push
lcall
scas
mov
mov
cmp
or
inc
scas
shl
add
xlat
xor
ficoml
ds
out
mov
in
pop
cmp
loope
xor
ss
jns
mov
adc
mov
std
jb
dec
add
js
xchg
mov
mov
dec
sub
popl
sub
enter
dec
push
out
mov
cmp
and
push
ljmp
repz
pop
lods
cmp
int3
inc
mov
aam
test
dec
ljmp
inc
and
xchg
xchg
and
ljmp
xor
aaa
push
cmp
sub
loopne
jmp
sub
imul
mov
sub
add
sub
enter
fsubr
inc
enter
cltd
jno
jp
xchg
mov
fbld
jmp
cli
popa
ja
or
insl
shll
int3
rclb
or
aam
outsb
aam
jle
push
jno
loopne
jb
add
fsubrl
out
clc
ficoml
cwtl
cld
imul
cli
jmp
cs
xchg
jmp
rcr
rclb
addr16
sbb
inc
mov
pushf
sbbl
lock
idivl
fisubl
insb
and
cmpsb
stos
cmp
bound
test
cmp
jmp
jl
mov
lock
sbb
push
sahf
mov
ja
fdivrl
sub
iret
add
stos
push
push
push
cmpsl
sbb
imul
dec
xchg
jmp
addb
repnz
push
jge
scas
push
rorb
jl
sbb
je
push
mov
scas
sub
mov
inc
outsb
push
cmc
and
cmp
dec
jl
xchg
push
lret
add
jae
xor
mov
xchg
adc
cs
jo
dec
mov
sbb
xor
sub
mov
push
sbbl
push
int3
sbb
cs
mov
and
cmpsb
rcrb
push
shl
and
int
int3
mov
idiv
and
popa
loopne
mov
xchg
in
scas
jmp
js
push
cli
leave
xchg
inc
mov
push
les
xchg
je,pt
insl
push
addw
scas
cmpsl
lock
into
pop
push
push
scas
inc
pop
fwait
jmp
aad
sub
jg
mov
pop
loop
jg
mov
daa
adc
mov
sub
xor
adc
in
insl
mov
mov
mov
pop
push
inc
jbe
add
jp
xchg
push
and
orl
int3
jle
inc
in
stos
xor
jp
repz
fbld
jge
push
fdivrs
inc
cmp
scas
in
inc
adc
ljmp
or
ffreep
fcmovb
and
or
int
in
insb
mov
cmpsb
test
mov
test
or
sbb
push
adc
mov
pop
push
lea
dec
daa
mov
out
xor
xchg
pop
dec
rcll
pop
mov
add
mov
inc
sub
ljmp
sbb
stos
idiv
or
mov
pop
mov
push
orl
adc
adc
inc
das
in
xor
test
scas
repz
lcall
mov
push
pusha
sbb
sub
xchg
mov
and
cmpb
inc
shrl
add
jmp
sbb
aas
insb
popf
jae
fwait
mov
mov
lods
dec
movsl
decl
shl
jp
xor
sti
push
enter
mov
les
roll
mov
insl
rcl
mov
sub
jl
es
lock
lret
imulb
popa
jmp
adc
push
loop
int3
xor
or
aam
mov
push
lock
and
loopne
cmp
fstpl
jecxz
push
xchg
daa
or
xor
aam
lcall
sub
jne
sbb
jbe
fincstp
xor
or
mov
ror
int
lret
dec
outsb
push
cmpb
subb
push
mov
jmp
jge
cltd
sbb
push
push
inc
sub
rcl
ret
add
mov
mov
push
xchg
je
push
rcl
mov
cmp
jae
outsb
js
mov
mov
dec
xchg
add
pop
xchg
movsb
call
lods
out
int
pop
mov
xor
iret
lock
inc
fistps
ds
mov
out
je
adc
xor
gs
in
xchg
mov
rcrl
inc
insl
xor
rclb
push
xchg
xchg
push
xchg
push
sti
in
leave
xchg
loope
jo
shrl
test
pop
mov
add
and
rcrb
xchg
andb
mov
lock
push
aaa
cvtpi2ps
pop
loopne
mov
add
jo
sbb
dec
cmpsb
push
fistpl
jbe
push
mov
adc
dec
pusha
in
inc
sub
push
in
scas
icebp
pop
stc
dec
mov
in
jg
out
mov
addr16
sbbb
js
mov
jg
into
dec
push
pusha
sbb
cmc
es
hlt
stc
test
divl
jb
ds
push
mov
sub
cmp
shl
insl
xchg
es
in
sbb
jg
adc
adc
mov
pop
roll
cmp
test
daa
push
ret
in
pop
push
out
outsb
mov
int
insb
lret
pop
filds
dec
push
leave
mov
inc
cmpsl
push
sbb
push
mov
leave
repz
dec
jge
fs
icebp
iret
lea
push
sub
ljmp
mov
shlb
pushf
mov
outsl
in
xor
call
pop
pop
rcr
or
aad
pop
jbe
inc
jo
xor
xchg
icebp
pop
jg
mov
outsb
jns
xchg
and
movsl
cmp
xchg
cmp
and
mov
mov
loopne
into
xchg
push
and
sbb
mov
inc
or
bnd
inc
stos
inc
daa
aam
sti
mull
test
mov
push
cmc
pop
ds
lret
pusha
pop
fiaddl
jmp
or
shlb
sbb
das
and
jb
xor
cmpsb
in
inc
loopne
enter
gs
pop
push
imul
dec
jecxz
decb
cmpsb
mov
jge
add
scas
mov
xchg
xor
lret
inc
cld
sbb
cmp
xor
xchg
jne
pop
lods
imul
jbe
adc
xchg
lods
test
stos
scas
push
outsl
mov
mov
cmpsl
push
insb
rep
insb
repz
and
mov
inc
test
stc
xor
shl
leave
sarl
sbb
into
or
movsb
jecxz
xchg
addl
imul
fisubrl
fcoms
lods
pop
insl
in
scas
add
sahf
pop
pop
sub
xor
test
mov
into
jb
in
nop
push
sbb
jle
imul
mov
and
or
adc
arpl
daa
push
aam
mov
xor
sub
cmp
sbb
in
fxch
test
jmp
xor
fs
pop
and
xlat
sahf
jmp
cmp
cmpsl
test
or
arpl
popa
pop
push
sub
jmp
test
adc
or
inc
clc
fwait
pop
push
mov
pop
xlat
push
movsl
aam
mov
bound
xchg
cmovnp
xor
in
xorb
jo
sbb
pop
xchg
pop
dec
mov
push
adc
cmpsb
ss
loop
cmp
mov
shrb
add
mov
lods
int3
jmp
gs
push
mov
fmull
stc
sub
jae
enter
add
mov
jg
arpl
and
fwait
jno
pop
aaa
xor
sbb
dec
dec
push
inc
sbb
fistps
sarl
lds
push
scas
adc
cs
jle
loopne
fsub
fiaddl
jl
into
lock
sub
cmp
mov
icebp
inc
lea
or
daa
sub
push
jne
xorb
cmp
sbbl
mov
mov
aam
push
or
mov
mov
fstpl
or
mov
repz
decl
movsb
xor
inc
xchg
xor
js
dec
sahf
or
mov
fisubl
outsl
jmp
push
clc
pop
push
jp
or
pop
cld
jnp
mov
cmp
add
or
xchg
cmpb
in
push
lcall
or
push
setp
mov
movsb
mov
clc
sbb
mov
lret
push
or
pushf
mov
mov
jbe
jmp
loopne
mov
xchg
ret
insb
stos
adc
xchg
push
or
mov
jg
jg
cmc
mov
pop
push
mov
in
shl
dec
mov
outsb
xor
jae
sarb
pop
cmp
jo
out
cmp
inc
jb
rorb
aam
and
jp
dec
arpl
lods
js
sub
in
insb
aad
cmpsl
scas
vphaddubq
mov
loopne
push
push
mov
stc
nop
xchg
stos
push
fistl
pop
dec
mov
push
pusha
push
adc
or
cmpsb
inc
mov
sti
jnp
lahf
enter
mov
test
clc
push
cltd
aad
test
add
sub
out
push
scas
scas
jecxz
imul
mov
into
outsb
enter
jb
into
cmp
pushw
mov
lods
jnp
ljmp
push
aad
fcoml
int
push
fsubrs
sub
sub
scas
stc
sub
scas
mull
insb
lods
xchg
sar
call
fsubs
pop
lea
fdivp
inc
stos
adc
insb
or
jno
mov
inc
fidivrs
cmc
sbb
nop
dec
cs
push
insl
xchg
xor
push
sub
repz
ret
mov
pop
ret
mov
adc
jno
pop
push
cld
push
fsts
sub
xchg
adc
hlt
fwait
xchg
dec
mov
xchg
adc
pop
out
jb
cwtl
xchg
or
push
adc
pop
sub
je
jl
or
sub
popf
jp
sti
aad
add
sbb
in
push
aam
xchg
pop
and
gs
shr
sub
iret
mov
jmp
lret
loope
leave
scas
and
push
xchg
mov
loope
mov
aad
and
iret
or
ret
out
and
cmp
mov
popa
into
loope
cvtps2pi
shrl
out
roll
lret
sbb
inc
add
fdiv
adc
push
add
and
add
lock
mov
leave
add
aad
test
mov
in
dec
xchg
in
fldt
movsl
mov
dec
sbb
cs
xchg
jmp
popa
or
test
or
add
sub
xor
dec
scas
insl
adc
push
orb
jge
jns
cmp
mov
outsl
hlt
pop
inc
push
pushf
ret
lods
add
cmp
dec
and
lds
xor
or
ss
sub
mov
adc
and
leave
dec
call
adc
mov
gs
and
push
pushf
bound
cmc
and
jae,pt
ss
pop
dec
sbb
test
daa
push
and
andb
adcb
ds
push
jne
mov
xchg
mov
js
and
loopne
jmp
mov
test
push
cmp
mov
movsl
cld
jge
lret
jbe
or
and
pop
aaa
inc
ss
xchg
addb
loope
pop
mov
pop
inc
sarl
cmc
das
mov
ja
xchg
pop
xchg
xchg
mov
pop
xor
mov
add
hlt
inc
adc
mov
xor
repz
hlt
add
xlat
jnp
add
out
aaa
mov
push
rclb
sbb
scas
shl
push
out
subl
imul
push
or
dec
push
mov
push
push
je
sub
stc
sar
adc
push
icebp
push
sbb
mov
dec
das
aaa
test
lods
mov
movsb
scas
xchg
insl
add
xor
adc
mul
clc
int
pop
inc
mov
cltd
jmp
sahf
cld
xchg
fdivp
inc
popa
pop
xor
mov
in
mov
or
mov
sub
insb
or
push
cs
outsl
and
xchg
jne
sti
arpl
push
sbb
mov
aam
ds
out
cmp
push
mov
lods
inc
push
xlat
jo
test
cmp
into
aas
cmpsb
xor
imull
mov
clc
mov
adc
sub
jae
jne
xchg
sbb
test
cmpl
sti
mov
mov
data16
xor
pop
dec
or
mov
pop
push
jo
hlt
xor
jns
enter
mov
cmp
inc
popf
bound
fmul
call
mov
fimuls
push
jp
mov
repnz
pop
or
jbe
mov
cmp
pop
sahf
aad
xor
adc
inc
aad
fidivrl
xlat
pop
je
or
and
pusha
fisubrl
ret
push
add
lods
adc
jns
shl
xchg
add
mov
subl
push
inc
sub
lret
jge
mov
push
and
cmp
cmp
dec
in
mov
mov
into
repz
push
xchg
scas
and
xor
stos
les
mov
ss
xor
sbb
cld
adcl
dec
imul
aaa
ljmp
insb
add
adc
sahf
add
jmp
enter
push
inc
adc
cmpsb
bound
sbb
push
mul
int3
gs
out
mov
pushf
pop
add
cmpsb
lcall
daa
adc
loop
andl
xchg
shrl
bound
push
and
into
pop
aam
int3
rcrl
sbb
leave
push
mov
test
push
in
pop
dec
and
mov
clc
cmp
enter
fwait
add
call
cmpsb
jp
fcoms
push
push
in
fiadds
mov
cmpsb
xchg
adc
std
cmp
mov
rcr
push
xor
stc
jecxz
mov
xor
outsb
out
out
jle
popa
cmp
mov
movsb
and
xor
out
adc
pusha
insl
pusha
rcl
aaa
icebp
out
mov
add
cmp
je
mov
add
imul
cmpsb
pop
enter
and
add
cltd
mov
test
jae,pt
xchg
fisubrs
int3
xorl
test
sbb
sub
sub
push
aad
xchg
lret
lods
jnp
xor
pop
mov
push
out
test
mov
mov
sbb
fwait
imul
pop
add
sub
rolb
mov
cmpsl
out
add
rorb
shlb
pop
ljmp
mov
mov
push
xor
std
out
mov
adc
mov
pop
jp
data16
fstps
mov
inc
sbb
daa
cmp
xor
cmp
rcrb
sub
rclb
into
enter
pop
out
das
push
push
cmpsl
sub
jmp
mov
jbe
lret
jbe
jb
pushl
inc
test
or
adc
repz
cmp
xlat
stc
test
stos
cli
jmp
aaa
fwait
je
mov
jne
scas
push
and
out
ss
cmpl
ficoms
push
cmp
or
in
fistps
scas
in
test
fwait
jmp
xchg
pop
add
push
mov
sbb
lret
ljmp
adc
add
pop
rcrb
cwtl
add
push
in
mov
or
subb
jmp
fwait
out
mov
test
pop
test
mov
or
sbbl
fiadds
ret
mov
sub
inc
std
sbb
inc
jnp
outsl
pop
in
cmc
adc
pop
jae
jae
lret
mov
mov
sahf
cmp
fiadds
add
mov
stos
mov
push
std
bound
ds
outsl
mov
insl
dec
sahf
xor
add
std
xor
pop
add
sbb
xchg
add
mov
je
arpl
daa
das
xchg
or
cs
ja
ficoms
pusha
call
imul
mov
js
rclb
data16
loopne
jge
sbb
jns
aam
add
jne
call
rcll
lods
aaa
fwait
out
into
xor
fs
ficomps
push
xor
test
fsubl
inc
and
jbe
xchg
pop
aam
leave
push
sbb
push
push
test
dec
aad
cmp
mov
adc
cmpsb
gs
sbb
repz
lret
cmp
orl
fmull
enter
aad
stc
mov
cmc
fdiv
cmp
jb
aas
movaps
jecxz
xchg
jge
clc
loop
aad
and
ret
popf
jne
repnz
mov
fbld
cs
or
mov
xor
popa
cs
or
xor
xor
andb
sub
push
and
inc
ror
sbb
lock
jbe
push
sbb
add
test
mov
mov
ret
jge
xchg
in
fs
inc
test
lods
xor
mov
jb
xchg
pop
icebp
sbb
pop
dec
test
imul
adc
popa
stos
dec
adcb
dec
sahf
adc
mov
xchg
jmp
sub
push
xor
inc
inc
dec
xchg
rep
add
cmp
mov
aad
dec
inc
cli
fwait
in
sar
pop
or
xlat
rorb
lods
outsl
vxorps
dec
push
mov
test
idivl
mov
dec
add
dec
push
fsubrs
pop
es
mov
or
push
ljmp
jge
pop
frstor
pop
ja
jbe
sbb
outsb
add
sub
les
inc
push
sub
mov
add
test
fsub
mov
sbb
dec
sbb
sub
mov
loope
xchg
fwait
jle
mov
adc
stos
sub
pop
aad
sbb
dec
cmpsb
and
xchg
push
mov
jno
xor
ja
stos
ds
cs
cmc
jne
insb
push
stc
int
xchg
ret
cmpsb
aaa
iret
aaa
mov
out
xor
xorl
jbe
arpl
xor
mov
mov
mov
rclb
repnz
pop
push
xchg
push
jecxz
popf
cs
or
scas
xchg
mov
adc
mov
inc
inc
mov
add
add
dec
addb
mull
xchg
cltd
push
aad
pop
xchg
lret
cwtl
cmpsb
subl
sahf
mov
lret
es
jle
or
lahf
test
fcompl
sbb
scas
xor
cmp
scas
mov
into
add
jo
hlt
rcl
bound
test
cmpsl
aad
int3
sbb
mov
sbb
enter
daa
adc
xor
in
pop
cltd
and
stos
lods
out
push
outsl
test
push
fmuls
aaa
adc
ss
jmp
or
or
notb
sub
sarl
aaa
push
sbb
in
pop
jo
lods
rcr
mov
or
or
rcrl
jns
jae
dec
outsl
mov
lahf
cmp
sti
lahf
push
cmp
fs
add
xor
sbb
xorb
mov
mov
cld
jbe
push
hlt
adc
jno
shll
negb
sar
pop
out
or
out
mov
cmp
sub
stos
es
das
bound
int3
daa
mov
adc
mov
shl
je
or
aaa
popa
or
aaa
mov
shrl
dec
lds
outsl
xchg
in
inc
mov
aam
xor
imul
or
adc
sbb
pop
pop
cld
icebp
cmp
repz
xchg
mov
ss
imul
call
testb
mov
or
in
js
imulb
mov
mov
test
popf
mov
adc
inc
fcoml
push
adc
xor
dec
push
test
push
jg
movsl
cwtl
adc
push
mov
aad
jle
mov
fbld
cld
push
xlat
mov
mov
fwait
xor
push
loopne
loopne
movsb
sub
aas
outsl
xor
pop
and
sbb
pop
loope,pn
int3
scas
push
and
rcrl
push
xchg
pushl
xchg
shr
pusha
test
sbb
adc
subb
lcall
mov
sub
jg
mov
jg
add
pop
pop
jl
ja
mov
mov
iret
insb
pop
outsl
sbb
and
jne
int
and
lock
mov
mov
pop
out
xor
loop
sub
lcall
or
sub
mov
inc
sub
mov
pop
test
scas
jb
cvttps2pi
pop
dec
add
les
stc
or
fisubs
add
int3
adc
adc
mov
jne
xor
sub
fwait
incl
data16
dec
fidivrs
jp
out
arpl
add
sti
dec
fwait
xor
pop
mov
pop
inc
xor
pop
mov
ficoml
fmull
cmp
das
test
jns
lds
aaa
icebp
lea
sub
je
test
xchg
fwait
bound
or
mov
add
xchg
shr
add
and
dec
add
or
push
in
lahf
sub
xor
mov
scas
clc
pop
xchg
sbb
mov
pop
daa
jl
or
push
xchg
fnsave
push
cld
movsl
pop
pushf
and
movsb
les
clc
aas
in
xchg
inc
lret
sub
cmp
xchg
mov
js
das
pop
ret
out
pop
push
adc
or
lret
or
aaa
push
pop
gs
pop
mov
test
xchg
ja
fistpl
iret
mov
and
mov
enter
scas
in
adc
dec
test
dec
insl
ss
iret
stos
js
sub
sbb
movb
or
or
xchg
cmpsb
jnp
shl
js,pt
jge
rclb
sub
mov
fdivrp
xor
jmp
add
test
decb
clc
mov
dec
sub
or
push
adc
sarl
jbe
jl
jo
outsw
pop
adc
push
jmp
push
sbb
push
loope
jge
pop
sti
xchg
shll
in
xor
mov
dec
js
stc
pushf
inc
mov
pop
ret
push
xchg
jns
hlt
mov
add
mov
sub
mov
aad
cmc
dec
xchg
xor
sub
mov
adc
pshufw
out
data16
movsb
pop
add
push
stos
pop
adc
or
xor
add
test
std
xor
cwtl
xchg
cs
mov
pop
mov
leave
add
nop
push
sbb
mov
sub
nop
lods
mov
lock
rorb
lahf
lods
adcl
pop
add
add
enter
out
push
bound
shl
iret
cmp
ret
xor
rclb
ret
popf
jge
pop
sbb
xchg
popa
aaa
jp
or
test
scas
jno
cmp
sarl
dec
mov
sub
int
imul
pop
mov
cmp
inc
repz
ud1
movl
hlt
ss
lret
jmp
lret
stc
mov
xlat
pop
outsl
jg
xor
pop
push
lcall
je
and
imul
rclb
xor
push
dec
mov
rorl
mov
cmpsb
jae
mov
or
or
sbb
push
movsb
mov
mov
fnstcw
mov
insl
stos
gs
dec
dec
fcompl
adc
jg
je
mov
les
fstp
dec
mov
loop
imul
scas
inc
jbe
mov
push
xchg
add
xchg
sub
mov
and
test
pause
inc
or
xorb
rcr
clc
push
mov
add
inc
jne
data16
and
mov
imul
int
mov
and
out
xchg
jnp
sub
pushf
push
push
out
fsubs
jg
dec
or
enter
push
cwtl
test
imul
js
cmp
out
fisubs
repz
sbb
mov
cmp
out
add
mov
pop
bound
lds
mov
insb
xchg
mov
xchg
jmp
in
xchg
xlat
jns
xor
sbb
push
popl
xor
mov
call
push
je
das
cmp
sbbl
pop
jge
aas
jmp
rorb
fwait
push
or
mov
fnstsw
push
mulb
fldl
lea
idivl
sub
and
add
add
xor
ss
clc
sub
mov
imul
dec
mov
data16
mov
fcompl
out
cmp
xlat
inc
pop
stos
sub
jg
xchg
push
mov
std
add
push
lea
mov
push
pop
inc
dec
out
loope
arpl
or
out
je
cwtl
fiadds
cli
xchg
loop
loop
cld
or
add
nop
js
or
dec
push
fnsave
xlat
loopne
pop
xor
pop
repnz
add
sti
cmp
jecxz
shl
xchg
pop
hlt
sub
mov
test
sahf
adcb
xlat
push
mov
fdivs
sub
mov
in
mov
xor
jle
fucomi
mov
dec
add
adc
dec
jno
fwait
push
popa
ret
jp
insl
into
inc
jo
cli
mov
push
shll
into
dec
push
jle
and
adc
xor
or
scas
cmp
ss
jecxz
adc
adc
jbe
xchg
loop
aaa
jbe
cmp
dec
mov
push
ret
sbb
lcall
jo
fmuls
cmp
mov
imul
cmp
mov
popf
xor
test
loop
add
dec
loop
and
jae
notl
pushf
repz
sahf
or
dec
jae
scas
xor
mov
jno
movsl
add
mov
and
or
shr
ret
add
push
stos
lods
lret
cld
xor
insl
jge
pop
xchg
test
jnp
push
popa
imul
or
or
add
iret
jl
cmpsb
cmc
mov
outsl
mov
pop
fs
pop
xchg
mov
sbb
xlat
loopne
std
out
xor
push
xor
loopne
mov
mov
add
and
test
aaa
mov
fildl
fidivrl
arpl
jbe
xchg
mov
dec
idiv
imul
cli
adc
fldcw
lods
cmp
data16
inc
sarl
xor
imul
insl
mov
mov
pop
out
push
out
test
cli
mov
jle
adc
pushf
lods
xchg
mov
add
fmull
pusha
in
xor
or
xchg
movsl
ffreep
in
add
sub
mov
sbb
inc
pop
sahf
jmp
dec
fdiv
repz
jl
cmp
sub
mov
xor
jg
mov
adc
leave
push
invd
int3
xchg
loopne
in
lods
aad
adc
cmc
es
idivb
push
inc
dec
mov
inc
notl
gs
sbb
jle
sbb
add
in
jnp
xor
pop
jmp
cmp
adc
sbb
cld
push
jmp
fsubs
lcall
xor
push
push
pop
xchg
lods
pop
rorb
or
and
push
push
sbb
xchg
leave
mov
push
cld
arpl
mov
lret
add
sub
dec
dec
insb
xor
jp
jle
pop
scas
adc
dec
xchg
repnz
or
push
jle
push
sbb
inc
pop
dec
xchg
mov
je
push
and
sub
leave
in
roll
sbb
outsb
out
imul
stc
and
adc
ficompl
test
push
add
xor
cmp
pop
push
adc
cmpsl
clc
mov
jae
movl
daa
nop
jecxz
and
fnstsw
mov
aam
cwtl
push
movsb
lods
cli
xor
movsl
mov
xchg
sbb
pop
xchg
mov
or
mov
aad
push
stos
pushf
fisubs
addr16
xchg
sahf
add
cmp
and
sub
sbbb
fimuls
mov
popa
xor
mov
xchg
cmp
add
adc
adcb
fbld
ret
fnstcw
aas
movsb
das
test
add
push
fsubrl
cld
add
daa
mov
scas
pop
or
jp
mull
sbb
sti
daa
cmp
pop
or
jg
shrl
cltd
push
xor
dec
rorl
mov
cmc
lods
dec
int3
adc
adc
sbb
out
lahf
es
adc
popa
cwtl
push
pop
das
nop
add
lock
ljmp
adc
push
fwait
cltd
mov
test
stc
jge
test
push
jo
pop
sub
sbb
mov
cltd
xchg
cmp
fs
cmp
adcl
pop
cmpsl
pop
jmp
fmuls
lock
out
in
mov
push
inc
jmp
jnp
jno
fiaddl
push
daa
cs
iret
lds
inc
jle
fwait
aaa
dec
push
xor
mov
fnsave
inc
cld
jno
rcrl
ljmp
mov
sarl
push
pop
dec
test
fwait
mov
push
inc
lcall
jnp
sbb
les
std
xchg
xor
mov
mov
addr16
push
xlat
xchg
daa
pop
adc
fldt
ljmp
or
lods
sbb
jge
repz
scas
les
jle,pt
nop
xchg
inc
addr16
inc
sarb
mov
scas
lea
subl
lods
push
mov
bnd
lock
lcall
mov
push
xchg
icebp
sti
jno
aam
push
push
or
mov
dec
adc
adcl
inc
fcoml
dec
mov
fdecstp
divb
ret
rcll
iret
ljmp
jno
sbb
int3
cmp
adc
sbb
aas
psllw
mov
lahf
push
or
or
in
inc
fs
testb
divl
jge
mov
loope
mov
imul
push
cmpsb
jmp
dec
cmc
xchg
cmpsl
pop
cmp
xlat
push
mov
or
jecxz
push
fcomps
dec
ljmp
cmp
cld
es
jae
push
loop
cwtl
xchg
sbb
cmp
subb
lock
es
aam
fwait
xor
lock
popa
cmp
and
pop
pop
popf
pop
mov
in
inc
into
sbb
in
push
lret
in
clc
movsl
inc
addr16
imul
jmp
stos
sbb
push
imul
push
adc
inc
dec
pop
popf
and
es
xchg
loope
sti
out
cmp
xchg
es
pop
sbb
shll
add
sbb
mov
sub
cmp
movsl
xor
mov
fwait
sbb
push
mov
lret
adcb
scas
call
mov
arpl
icebp
dec
nop
adc
xchg
xor
dec
call
xlat
shll
xchg
fcompl
lea
add
lock
jnp
movsb
mov
sbb
popf
sub
hlt
dec
cmc
lcall
mov
popf
mov
orl
dec
and
sbb
pop
add
inc
ret
ja
cld
rcll
mov
jb
ja
add
or
mov
pushf
sahf
pop
mov
divb
jbe
scas
sub
call
xor
or
pusha
aad
mov
or
pause
and
loope
mov
adc
stos
xlat
adc
lods
in
mov
rol
out
lahf
dec
cmp
loopne
dec
push
and
pop
and
mov
movsl
sbb
sbb
ss
lods
gs
and
lods
jecxz
push
imul
insb
mov
shrb
into
lods
imul
scas
stos
outsl
aam
dec
js
xor
shll
push
lock
cmp
insb
dec
repnz
fnsave
and
cmpsl
jno
cmp
rol
lcall
xchg
inc
and
add
dec
lret
iret
inc
adc
push
pop
sbb
add
mov
pusha
ret
call
insb
mov
jnp
out
ljmp
mov
stc
test
inc
sahf
xor
iret
and
test
imul
cmp
or
jnp
inc
push
movsb
mov
dec
mov
gs
cmc
pushf
or
xchg
pop
or
adc
pushf
das
negb
and
sub
scas
mov
pop
bound
adc
mov
dec
push
leave
ja
bound
ds
add
jns
inc
and
or
sbb
jbe
xor
stos
enter
cmp
fbstp
stc
mov
sub
mov
cmp
icebp
sub
leave
mov
sbb
pop
jne
mov
inc
push
gs
dec
pop
and
jne
adc
dec
mov
stos
jne
mov
sub
lret
inc
jecxz
push
pop
mov
and
xchg
sbb
and
inc
cmp
or
fwait
rorl
jo
or
div
ret
stos
dec
int
ret
or
ret
jns
cmp
outsb
mov
or
xor
and
push
sub
or
pop
sub
inc
arpl
sbb
pop
pop
rol
das
pop
push
xorl
shll
jge
roll
xor
aad
addr16
dec
clc
lcall
xchg
inc
shll
dec
jmp
mov
jp
rcrb
in
lods
cwtl
jge
js
cli
push
sbb
andl
xor
jae
pop
movsl
pop
cmp
int3
sbb
sub
sbb
mov
pop
mov
movsb
add
nop
sbb
xor
stc
outsb
push
test
add
push
push
loopne
cs
hlt
push
cmp
mov
enter
cwtl
mov
shlb
push
xchg
mov
cs
xchg
ret
fs
sub
subl
inc
insl
lret
push
mov
cld
push
push
push
mov
in
test
lret
sbb
or
xlat
rorl
mov
add
cs
mov
inc
fmull
and
daa
je
mov
mov
sbb
xchg
cmp
pop
and
xchg
call
test
or
call
insb
and
push
scas
jae
mov
push
ljmp
lret
into
test
xlat
mulb
testl
xor
frstor
and
insl
xchg
sbb
inc
rorl
sub
dec
add
fwait
jl
outsl
imul
into
iret
jnp
lret
adc
test
xor
mov
or
shll
jg
sub
stos
pop
into
movsl
cmp
and
movsl
out
jno
lret
mov
inc
insl
enter
sub
inc
test
dec
data16
xor
int
cs
lds
mull
mov
fimull
adc
dec
fwait
push
inc
pushf
and
mov
cwtl
les
or
jnp
test
push
rclb
mov
rcrb
iret
sub
movsl
cmpsl
in
subl
cmpsl
push
dec
adc
pop
mov
jl
subl
mov
stc
roll
jmp
xchg
outsb
sbb
data16
scas
in
dec
jg
mov
jae
mov
ja
push
push
or
adc
fstpt
and
adc
inc
mov
sub
andb
std
xchg
jbe
cmpsb
or
sbb
adc
lds
cli
sbb
js
lods
repnz
lods
jno
xor
in
push
movsb
xchg
push
outsb
adc
lcall
adc
inc
loop
fxch
test
pop
push
xchg
inc
scas
add
inc
std
mov
leave
setne
pop
pusha
push
jae
and
aam
cmp
xor
lea
push
lahf
dec
fstp
imul
push
and
add
sub
clc
adc
cmp
data16
dec
push
or
or
imul
dec
es
outsb
cmpsb
sub
stc
adc
into
jp
xchg
fmull
arpl
inc
add
add
fldl
xor
shlb
enter
mov
push
push
sbb
dec
dec
mov
iret
fwait
stc
cmp
cmpsb
ret
jmp
cs
cld
dec
sub
xor
mov
jg
in
imull
imul
jmp
pop
lods
arpl
and
or
adc
or
inc
inc
pop
xchg
outsl
es
xor
fdivrl
daa
mov
sarb
push
loope
mov
inc
push
aas
pop
fs
inc
enter
and
pop
jmp
adc
push
lock
iret
or
mov
and
iret
orb
sub
or
sbb
adc
lret
test
push
ljmp
mov
and
sbb
dec
bound
jnp
pop
movsl
fidivl
jo
fnstenv
inc
sub
sub
imul
inc
stc
popf
mov
ljmp
pop
pop
cs
ret
pushf
inc
xchg
mov
lea
stos
sbb
push
and
sub
mov
sahf
sbb
lcall
int
scas
test
pop
stos
out
lods
xchg
aad
pop
xor
fsubl
lea
jl
cmpsl
bound
sbb
xchg
jo
pop
sarb
pop
inc
push
lock
and
push
dec
ret
clc
fiadds
ret
rorl
ror
loopne
sub
mov
loope
push
sbb
or
add
test
shl
leave
hlt
aad
cs
fcmovb
cmp
fistl
xchg
mov
fs
xchg
dec
cmc
addl
sarl
sbb
mov
daa
sahf
sub
mov
lcall
mov
aam
mov
push
pop
and
lcall
icebp
cltd
mov
stos
mov
mov
cmpsb
lret
lds
stc
sbb
in
mov
andb
rcll
xchg
lcall
inc
push
push
jbe
notl
jo
mov
xchg
cmp
jg
data16
jns
outsb
popa
inc
jecxz
ret
enter
fcmovbe
xchg
jns
aam
dec
pushf
push
in
shll
xor
mov
push
rclb
cmc
push
subl
test
cmp
mov
inc
arpl
or
outsl
mov
mov
sti
jnp
sti
lahf
mov
je
push
test
ss
leave
inc
adc
jge
adc
lcall
inc
imul
shrb
loope
out
mov
rorl
xchg
and
mov
lcall
mov
sahf
cmpsl
jecxz
adc
shll
push
imul
cmp
mov
jmp
mov
cld
mov
aad
ret
pop
jo
std
stc
outsb
mov
sbb
aam
lcall
mov
jl
daa
add
fucomp
in
mov
xchg
jecxz
dec
push
adc
sbb
insl
imul
lock
mov
iret
jne
imul
xor
xchg
out
dec
jne,pt
push
sti
push
lea
or
shrl
adc
repnz
inc
adc
mov
xchg
xchg
inc
mov
push
fcmovbe
jnp
pop
dec
mov
js
sub
jl
lret
sbb
imul
cmp
cmp
push
int3
pop
pop
pop
inc
dec
popa
mov
push
bnd
and
arpl
sbb
cmp
pusha
xor
jns
inc
push
sub
cmp
int
jns
or
mov
adc
movsb
mov
adc
add
out
cld
mov
and
xchg
mov
mov
jmp
cmp
mov
cmpsb
pop
cmpsl
mov
out
les
ds
sub
dec
int3
sbb
jnp
jae
xor
mov
mov
dec
jne
mov
insw
adc
add
pop
test
mov
mov
cmp
and
repnz
les
cld
pop
cmp
mov
adc
shrb
xlat
mov
adcb
dec
ret
notl
pop
fdivp
sub
fldt
scas
adc
call
add
sub
xlat
fucomp
int3
add
ret
mov
hlt
pop
cwtl
xchg
xor
ljmp
push
cmpsl
xor
mov
add
adc
cs
adc
icebp
in
mov
push
testb
movsb
mov
cmp
call
nop
vmovntps
aas
lret
jb
lock
je
xchg
adc
cmc
mov
xor
pop
cli
jecxz
daa
mov
adc
leave
rorl
hlt
sbb
xchg
sarb
clc
nop
fwait
stos
pop
sbb
aas
imul
lret
loope
dec
and
jmp
cmp
je
je
cld
adc
xchg
jge
int
or
sbb
int
mov
or
loope
jnp
dec
ljmp
xor
add
cmpl
pop
xchg
fidivrl
sbb
das
pop
add
pop
shr
dec
pop
push
call
xor
ss
add
outsb
shll
clc
pop
ds
xor
lds
jae
test
scas
ja
dec
lea
mov
or
testl
mov
cltd
js
push
js
fdivr
out
sub
xchg
pop
inc
movsl
aaa
cmp
jl
fsts
or
adc
test
cmp
into
xchg
pushf
adc
and
inc
pushf
or
call
insb
cltd
test
out
pop
in
push
insl
loopne
loop
js
adc
adcb
hlt
add
jle
cmpl
mov
dec
sbb
xchg
adc
jb
xor
sbb
dec
inc
fwait
repz
cmp
xchg
inc
test
jo
cmp
stos
test
sub
daa
push
mov
cmp
scas
add
out
inc
leave
in
jnp
jecxz
pushf
pop
lock
add
repz
adc
or
xchg
lcall
or
test
dec
insb
aam
int3
inc
mov
in
into
lahf
cs
je
xchg
lahf
dec
icebp
add
mov
fwait
push
insl
or
mov
sbb
adc
fistpl
paddusw
cmc
adc
loopne
into
gs
movsb
lods
insb
frstor
sbbb
and
sub
jmp
xor
push
popf
jl
outsb
xor
movsb
xor
add
dec
insb
repnz
sub
or
jmp
sbb
lods
scas
test
jmp
nop
iret
mov
sahf
sti
dec
imul
mov
iret
jle
and
pop
dec
pop
fwait
xor
inc
inc
adc
mov
mov
jecxz
pusha
xchg
in
out
cld
lret
nop
jno
stc
sbbl
add
xor
gs
sub
cs
dec
das
dec
xchg
pop
push
jecxz
and
mov
rorb
pop
das
jle
xchg
mov
sbb
xor
push
sub
jb
sub
adc
in
data16
out
cmp
ss
mov
hlt
adc
fisubs
rcr
jns
inc
xchg
gs
sub
inc
adc
xor
mov
dec
in
sahf
aaa
stc
sbb
mov
and
aam
push
dec
jmp
inc
cmc
xor
cmp
std
lods
leave
push
fcoms
cli
vmovaps
adc
arpl
xchg
mov
out
aad
scas
divb
mov
in
sub
mov
ret
mov
cld
movsl
cmc
jns
mov
outsl
pop
push
out
pop
push
popf
mov
add
aam
push
and
fiadds
mov
fdivr
loope
pop
fwait
jl
insl
das
jl
jmp
loope
out
lock
jl
push
outsl
out
xchg
fmulp
jle
mov
out
ss
jmp
nop
mov
sub
stos
movsl
pop
and
sub
xchg
and
clc
les
mov
jb
adc
lods
xor
scas
push
in
mov
xchg
add
test
lahf
jno
js
mov
sub
mov
jae
rorl
sahf
arpl
inc
cmp
mov
pop
pop
shll
repnz
ret
jb
push
jbe
idiv
and
mov
or
or
mov
and
jl
cmp
lcall
inc
les
outsb
fsub
add
push
imul
scas
add
loopne
mov
cmpsl
aad
vmovd
jecxz
iret
jne
adc
cmpsb
adc
and
stos
add
or
xlat
dec
jg
jo
add
jmp
push
pusha
push
sti
cmp
mov
pop
adc
mov
adc
jae
jb
and
sbb
mov
lock
jne
mov
loope
sbb
repnz
cmpsl
adc
fcmovu
cmp
movb
leave
push
jo
ret
and
stc
out
mov
mov
sub
scas
mov
fidivrs
mov
xchg
push
jmp
xor
mov
pop
lahf
jb
mov
mov
and
xchg
jle
neg
dec
ja
ret
pop
and
inc
cmp
add
movsb
mov
test
popf
and
jecxz
mov
cmp
jmp
outsl
adc
push
dec
incl
mov
push
popa
in
lods
cmp
xor
push
movsl
add
push
cmp
dec
mov
jge
inc
fdivs
mov
jo
pop
outsl
push
cmp
or
insl
xor
testl
cli
add
push
imul
cmp
jmp
dec
pop
movsb
mov
jle,pt
push
push
push
data16
push
clc
call
repz
and
jae
sbb
and
mov
insl
arpl
xchg
test
fsubl
cmp
inc
jb
and
push
xchg
pop
leave
mov
mov
enter
dec
add
lods
nop
addb
je
xchg
mov
pop
bound
jmp
ss
mov
xlat
cmpsb
pop
jno
js
gs
cmp
mov
test
lahf
cmpsl
push
scas
jnp
pop
out
xchg
sub
imul
enter
addr16
push
icebp
out
lods
pop
test
aaa
mov
fs
and
add
or
mov
jo
adc
nop
aad
outsb
popa
sti
loopne
push
and
andb
or
in
cmp
lods
add
mov
adc
mov
dec
and
push
shll
xor
js
cmp
cwtl
scas
out
mov
int3
xchg
dec
mov
mov
negb
jbe
mov
and
aad
repnz
add
in
push
mov
jnp
test
add
outsl
fcoml
and
ficompl
enter
jae
aaa
push
cmp
cmpsb
jo
xchg
pop
cmpsb
xor
mov
std
pop
add
sarl
in
call
clc
mov
outsl
sbb
mov
push
xchg
les
jnp
cmc
dec
sti
xchg
out
push
ljmp
addr16
in
mov
sarb
push
aam
into
fsubp
je
stc
add
cmp
repz
cli
rcrl
xor
xchg
jo
in
adc
aam
ja
insl
arpl
inc
stos
andl
or
push
jp
out
sbb
push
or
adc
incb
dec
out
sahf
and
mov
lcall
mov
cmpsl
notb
mov
mov
ret
je
and
mov
adc
xchg
stos
out
cmpsb
jne
mov
dec
push
xchg
sub
in
rcrb
add
push
fidivs
bound
int3
cmp
add
outsb
es
fwait
out
rcl
mov
int3
loope
mov
fsubrs
jnp
jno
mov
aam
and
imul
jae
rcr
jp
jae
xchg
testb
icebp
adc
or
push
dec
mov
nop
add
call
mov
pushw
cmp
ret
sbb
mov
xor
iret
xor
fisubl
mov
lock
arpl
push
stos
or
mov
adc
mov
cmc
mov
push
ds
push
push
pop
rol
int3
enter
xor
scas
or
cmp
stos
iret
loop
jp
mov
xchg
fmuls
mov
xchg
testl
sbb
or
pop
lock
xor
lds
fldl
das
aaa
test
fldz
push
cmp
jo
dec
icebp
lret
loope
or
insb
out
sahf
cld
mov
xchg
loopnew
scas
out
mov
bound
in
sub
pop
mov
sbb
xorb
sub
pop
rcrl
jge
adc
and
push
xchg
repnz
sbb
repnz
cmpsb
scas
cs
repnz
rolb
fs
pop
outsl
or
dec
sahf
xchg
popf
mov
sti
pop
adc
cmp
jne
sarb
push
jbe
xchg
push
push
andl
sbb
scas
aad
lcall
in
stos
outsb
xchg
mov
lods
xchg
mov
fsubr
mov
sahf
jg
lock
sti
test
pop
call
push
mov
test
sbb
fmuls
pusha
fs
aam
popf
pop
sub
lahf
mov
jb
stc
add
imul
test
sub
dec
jle
in
cmpb
iret
addr16
jns
mov
push
mov
xor
ds
mov
xchg
jge
add
cmp
jle
movsb
sbb
outsl
cmp
push
xchg
push
and
jge
and
xchg
arpl
jge
leave
mov
imul
xor
xchg
aad
mov
push
cwtl
and
test
mov
cmp
mov
adc
pushf
jp
lret
lock
outsl
and
clc
and
dec
in
movsl
sub
insl
mov
inc
hlt
mov
mov
xor
ja
mov
push
ja
lret
sub
push
fsubrs
push
rcr
inc
pop
mov
nop
aas
xlat
mov
pop
cmp
sbb
fcoms
call
inc
lds
sti
int3
in
xor
popa
negb
xchg
dec
or
rol
sarb
pushl
mov
jg
int
fisubrs
mov
ss
pop
test
pop
add
adc
add
rcll
or
in
cmc
divb
xorl
outsb
jg
push
adc
dec
add
loope
test
lods
mull
push
int
shl
mov
in
sub
out
dec
mov
test
push
push
imul
cmp
out
in
sti
cmp
in
mov
mov
mov
fs
imul
inc
mov
xchg
out
fstpt
loopne
loopne
push
test
inc
jo
js
stos
ja
pop
jmp
cmp
repz
ret
leave
mov
idivb
decl
test
push
push
scas
mov
ja
cmpsb
xchg
push
mov
pushf
jle
mov
mov
call
xlat
jne
ljmp
jmp
int
scas
or
fistl
add
add
iret
add
dec
insb
xchg
in
inc
adc
inc
data16
shll
or
fprem
pop
iret
mov
jae
ja
cli
xor
stc
mov
frstor
mov
out
adc
mov
ret
hlt
idivb
xchg
test
cmpsl
repnz
xchg
scas
loope
rol
pushf
xor
sti
xchg
adc
sbb
fsubrs
aaa
out
jl
popf
and
aas
push
jle
mov
mov
jp
and
inc
or
lds
dec
in
movsbl
and
call
ja
in
add
adc
or
das
xlat
inc
test
sbb
pshufw
fcoms
xchg
and
xor
pusha
add
inc
fisubrl
xchg
cltd
ds
pop
cmp
jne
subl
mov
xor
dec
sbb
pop
inc
jne
sahf
test
push
out
dec
dec
pusha
cli
xor
ljmp
jno
mov
dec
cmpb
roll
jmp
mov
dec
lock
je,pn
sbb
pop
ret
shll
pop
push
or
adc
in
das
jecxz
inc
inc
jno
movsl
mov
mov
outsb
and
sub
cmp
lods
out
imulb
mov
or
sbb
inc
sub
mov
adc
mov
jl
subb
dec
cmp
js
daa
enter
inc
mov
out
loopne
push
cmp
mov
sbb
push
sbb
cltd
cmp
aam
jl
xchg
mov
js
fs
push
pushf
ret
sbb
mov
sbb
das
xchg
loope
mov
add
arpl
leave
xor
ds
push
pop
xor
ljmp
jne
test
or
jle
sub
push
lock
cmc
add
mov
push
jge
dec
pop
jne
sbb
sub
mov
cmp
lahf
and
pop
pop
aas
lods
repnz
inc
std
cmp
call
add
xor
pop
and
dec
sahf
and
cld
jecxz
daa
das
mov
repz
cmp
cmpsb
out
jo
rcll
jb
fsubs
iret
stc
xchg
dec
mov
ljmp
sarl
stos
cmp
xchg
shrl
jmp
dec
push
movsl
xor
push
jnp
pop
adc
pushf
in
jecxz
sbb
jle
xor
push
or
pusha
cmpl
mov
fimuls
dec
xor
loope
mov
add
aas
xor
aam
jmp
dec
insl
movsb
gs
ret
mov
pcmpeqw
andl
inc
ret
hlt
orb
and
jo
in
push
and
sahf
cld
negb
push
adc
jmp
inc
pop
std
jg
mov
pusha
shlb
sub
mov
xor
ds
jp
mov
jl
jl
scas
movsl
pop
cmp
pusha
shlb
popa
insl
sbb
leave
shlb
adc
cwtl
inc
call
xlat
cmp
in
mov
push
sub
lods
push
imulb
cmpb
js
pop
std
push
lock
psllq
ljmp
ficomps
lods
push
mov
in
jecxz
aad
adc
pop
lock
ss
out
cmp
out
cmp
test
icebp
ds
aas
sub
push
sub
jl
fists
xchg
stos
jl
loope
fsubr
inc
sub
inc
push
incl
pop
jmp
jmp
imul
add
ret
mov
aam
pop
add
or
or
cli
mov
dec
xor
outsb
fadds
push
enter
stos
addr16
bound
rorl
loopne
and
xor
sub
xor
sbb
inc
xor
push
cwtl
dec
lea
outsb
mov
gs
and
and
outsl
dec
mov
stc
les
adc
rcrl
sbb
pushf
push
xchg
fildll
cmp
lea
dec
inc
repnz
pop
stos
jbe
push
cmp
shll
jo
mov
sub
out
inc
iret
lock
pop
shlb
cli
shl
cmpsl
or
sub
sub
loope
sbb
das
push
hlt
test
sbb
nop
mov
pextrw
pop
leave
mov
aaa
loopne
lods
add
push
adc
push
mov
push
mov
cld
and
sbb
pop
mov
sbb
inc
out
enter
jle
dec
adc
or
mov
sbb
cmpsb
test
and
outsb
int
adc
test
sub
push
faddl
fldcw
mov
stos
dec
mov
xor
mov
movsl
inc
jno
mov
or
pop
lods
inc
out
push
pop
fldt
xor
loopne
repnz
xor
dec
movsb
mov
and
ljmp
push
imul
xchg
insb
icebp
pusha
jae
push
mov
ret
mov
loop
sub
mov
xor
in
sub
or
adc
das
jns
cmp
in
fisubrs
push
mov
xor
inc
jp
aaa
push
push
call
cmpl
pop
or
jb
pushl
add
out
addl
notl
sub
fcmovb
add
nop
xor
jo
adc
mov
or
jge
sarb
std
js
dec
les
jmp
ja
les
dec
aam
and
cmp
loope
cmpsb
lcall
pop
ror
adc
cwtl
jnp
lahf
xorb
or
gs
or
cmp
das
insl
lods
movsb
pushf
mov
invd
rcr
pusha
mov
inc
loop
fiaddl
push
lds
mov
jb
push
pop
rorb
inc
and
je
nop
jno
pop
bnd
outsb
and
fwait
hlt
and
outsb
lcall
dec
mov
xor
enter
cmpsl
jg
lock
sbb
fnstcw
xor
xchg
inc
rdtsc
mov
dec
push
cmp
inc
imul
and
outsb
out
and
cld
add
std
fcmovb
test
fwait
dec
andl
mov
inc
xor
lea
pop
sbb
loopne
mov
mov
stc
or
cmp
mov
mov
lea
xor
push
popa
mov
test
pushf
pop
push
scas
mov
cmc
jg
movsb
xchg
ja
daa
inc
pushf
mov
mov
adc
cld
hlt
jns
sbb
mov
arpl
inc
jp
cmp
in
loope
or
enter
dec
ret
push
sub
aam
pop
sub
loop
jbe
jbe
mov
inc
outsl
aam
xchg
int
lds
insl
into
in
cld
dec
pop
shrb
stc
sub
mov
mov
lret
fdivs
divl
xchg
cmp
pop
test
popf
xchg
mov
dec
push
mov
mov
in
dec
sbb
ljmp
sub
addr16
dec
sbb
mov
cli
inc
test
mov
cmp
mov
loope
das
cmp
inc
jp
jb
and
pop
jp
add
inc
and
hlt
les
into
jo
mov
iret
mov
mov
out
push
pop
addr16
mov
pop
push
mov
lret
pop
dec
jl
push
push
mov
rsqrtps
pop
cltd
cmp
inc
pusha
dec
inc
mov
in
inc
test
bnd
push
push
mov
sub
push
out
dec
lahf
mov
stos
mov
aas
xor
mov
jno
xchg
xor
lds
stos
and
fdivrp
sub
stc
jne
mov
subb
sbb
lcall
adc
cwtl
and
data16
push
push
js
jecxz
mov
xor
ss
fsubrl
smsw
cltd
mov
push
fdiv
jbe
mov
in
push
fistl
repz
inc
inc
bound
mov
inc
hlt
je
jge
push
imul
repnz
ja
jmp
test
push
mov
adcb
fildl
hlt
inc
ja
sub
mov
jmp
mov
push
fimull
lea
into
jnp
aas
movsl
xchg
mov
cmpsb
sbb
adc
sub
mov
xor
aas
jle
cmp
jb
cli
mov
int
and
xlat
inc
add
insl
enter
insl
mov
xor
sbb
sub
stos
fsubrl
cmp
leave
lret
lock
cmp
xor
cld
xor
popf
test
inc
sbb
mov
cmpsl
add
adc
dec
insb
inc
call
insb
dec
stos
adc
or
andb
xlat
outsl
and
cmp
xchg
lods
pop
add
mov
and
xchg
sub
sub
push
rorl
xor
insb
mov
jp
imulb
and
dec
inc
xchg
adc
int
mov
shll
xchg
ret
gs
adc
outsb
fucomip
in
mov
movsb
repz
or
add
push
jp
fbld
inc
inc
mov
xchg
rolb
lods
push
jmp
xor
pop
jne
std
jmp
jecxz
lcall
cmp
cltd
cmp
lahf
aam
movsb
movsb
dec
lcall
add
es
or
dec
imul
clc
inc
or
cmpsb
sub
add
xchg
loope
shrb
loop
inc
sub
jo
pop
cmpb
inc
sub
rorb
jle
sbb
pusha
mov
xor
pushf
mov
fs
sub
mov
stos
mov
push
pop
xchg
scas
pop
mov
cs
jb
push
mov
inc
sub
je
and
ss
lods
gs
dec
rclb
lock
clc
adc
dec
outsl
mov
lods
add
ds
sbb
stos
das
push
rclb
loop
sub
add
jmp
pop
adc
add
mov
outsb
xor
or
icebp
sbb
movsl
sbb
test
mov
or
out
push
out
mov
test
jbe
xchg
fsubrl
mov
lahf
mov
lsl
mov
daa
pop
mov
clc
mov
aas
jnp
cli
insl
or
or
out
push
mov
clc
push
ja
arpl
jne
fnstenv
mov
cwtl
push
and
faddp
loopne
lods
cli
cmpsl
shll
push
ds
scas
mov
xchg
sti
mov
dec
inc
and
adc
out
dec
in
out
sbb
divl
push
adc
add
lods
insl
mov
adc
jmp
jp
fwait
dec
jmp
and
andb
movsb
jg
sub
nop
in
cmp
insb
dec
xor
mov
mov
push
mov
jle
outsl
leave
add
adc
in
and
and
pushw
and
cmp
aas
push
in
or
pop
scas
mov
push
jne
and
fiaddl
iret
test
shll
push
arpl
jnp
push
push
dec
or
mov
bound
cmpsl
fdivrs
insl
sbb
lahf
xchg
cmp
jns
arpl
mov
leave
ljmp
fdivl
hlt
ss
inc
lcallw
or
in
dec
lret
stos
cmp
subb
or
pop
cmp
push
sbb
and
ror
mov
cli
xchg
lret
mov
outsb
or
int
ds
sarl
push
fstps
es
xlat
push
stos
add
pusha
add
mov
clc
loope
leave
pop
or
fsts
aaa
mov
cmpsb
cmp
stos
outsl
fldenv
call
dec
movsb
pop
movsb
aad
fwait
imul
hlt
int3
lods
sbb
mov
icebp
pop
mov
ds
mov
adc
call
fadd
test
sub
sbb
sub
push
adc
cmp
xor
enter
imul
adc
jg
movsb
and
enter
push
repz
mov
sub
jl
ja
and
lds
push
out
cmpsb
aaa
pop
addr16
aam
push
lcall
cmp
adcb
mov
adc
fmul
mov
fadd
cld
xor
xchg
das
pusha
mov
js
shrb
pop
mov
cld
pop
test
out
dec
sub
xlat
insl
arpl
push
and
xor
mov
in
pop
xor
mov
fisttpll
rep
mov
arpl
or
outsb
test
jae
jmp
ja
push
cmp
mov
les
sbb
aaa
sti
dec
pop
ja
bound
mov
movsl
lret
gs
cmp
jno
cmpsl
xchg
test
pusha
dec
test
repz
movb
iret
jecxz
sahf
shll
cmp
in
hlt
ror
loopne
pop
dec
lods
call
push
pusha
dec
lahf
aam
add
out
hlt
mov
mov
cmp
das
mov
rolb
mov
loop
adc
test
push
cs
int3
mov
mov
ja
int3
lea
int3
lods
sub
push
dec
dec
insl
sub
fdiv
mov
sub
mov
lea
cmp
repz
xchg
xor
in
pop
cmpsb
push
sbb
hlt
pop
push
cmp
xor
mov
push
xor
cmp
pop
in
push
inc
sbb
out
mov
xchg
mov
call
std
push
mov
outsl
sahf
orb
mov
cwtl
jmp
jp
ss
iret
and
flds
push
in
xor
movsl
inc
popa
and
outsb
adc
sub
dec
inc
negl
popf
popa
mov
jae
or
inc
cli
enter
cmpsl
fisubrs
and
jne
vshufps
mov
push
pop
mov
addr16
ds
or
or
and
divl
dec
dec
mov
dec
out
or
dec
sar
data16
lret
loopne
mov
aaa
out
sub
lahf
bound
addr16
lcall
rcrl
popa
cmp
fnsave
adc
push
movsl
daa
fld
xor
fdivrl
adc
mov
cmp
xchg
pop
jae
pop
leave
mov
rclb
imul
xchg
cwtl
push
ret
call
mov
sub
sbb
cli
inc
jg
out
jmp
and
push
pop
int
dec
jg
pop
dec
movsb
aaa
fimull
cmp
mov
jecxz,pt
in
es
les
cmp
mov
fisubs
in
pop
ret
std
add
mov
jp
roll
popf
and
std
dec
bound
dec
push
ds
cwtl
cmpl
repnz
out
cmp
sub
push
sub
inc
in
cmp
std
lds
xchg
push
cmc
cs
xchg
jae
sub
and
inc
jge
ljmp
daa
inc
jbe
cmp
sub
mov
lcall
push
and
out
sbb
jne
cmp
push
js
xor
jle
push
mov
xor
ret
popf
ja
dec
sbb
xor
inc
gs
xor
adc
hlt
mov
sbb
loopne
sbb
sbb
add
out
aad
les
call
add
adc
lods
jae
push
mov
mov
js
ljmp
dec
push
out
sub
in
dec
jl
in
mov
cmpl
lea
cmp
nop
jg
insb
lea
cmc
shl
jne
out
adc
and
push
aam
mov
in
xor
mov
daa
push
mov
enter
test
call
shl
enter
loop
push
pop
and
xorb
insb
bound
lahf
fcompl
stos
daa
jae
jmp
movsl
scas
or
shll
addl
sub
scas
sub
mov
aas
sbbb
sbb
add
enter
inc
sub
and
sub
dec
bsf
pop
cmp
xlat
pop
out
pop
mov
orb
push
pop
push
mov
xor
cmp
test
lods
cmp
jecxz
cwtl
sbb
adc
pop
shll
aam
jmp
int
jns
sub
scas
xchg
enter
sahf
pop
mov
test
sbb
push
mov
cmpsl
inc
jbe
js
ret
aaa
fwait
pop
mov
pop
fwait
in
cli
aam
cmp
rorl
and
sub
and
dec
ret
jmp
dec
ljmp
repnz
fdivrs
mov
call
xor
mov
jmp
fs
loopne
pop
ret
sbb
ret
ds
negl
or
xor
mov
push
dec
jge
iret
add
fldl
inc
xchg
insb
dec
lds
or
out
pop
lcall
push
out
pop
loop
pop
ds
ffree
xchg
stos
lds
mov
arpl
xchg
xor
bndldx
add
and
insl
repz
push
xor
mov
cmp
and
pop
or
inc
repz
mov
fdivr
or
add
in
pop
popf
jmp
mov
enter
mov
pop
add
fsubp
and
pusha
scas
call
scas
lods
inc
in
into
movsl
jmp
pop
dec
mov
lret
or
jg
adc
aas
fidivrl
sahf
inc
insb
pop
xchg
shlb
flds
sub
icebp
fwait
jl
sbb
mov
fimuls
xbegin
clc
sub
stos
mov
mov
data16
out
or
inc
aam
idivb
leave
jle
jmp
rorb
imul
pop
data16
in
test
andb
cs
fs
push
stos
dec
push
dec
pop
sbb
js
imul
mov
mov
mov
push
dec
ret
xchg
fisubrl
stos
sub
jle
and
xor
mov
stos
fwait
cmpsb
cmp
mov
repnz
pop
pop
mov
aas
hlt
scas
xchg
sbb
xor
mov
push
push
shll
jne
mov
mov
push
lods
mov
mov
test
arpl
dec
js
mov
jno
popa
std
ljmp
aad
or
jae
push
mov
loope
adc
inc
pop
sahf
mov
int
mov
imul
jnp
mov
nop
xor
xor
xchg
mov
mulb
cmc
sbb
fiaddl
cmp
mull
or
jae
pushf
sbb
fwait
cli
xchg
sub
add
sub
jp
push
out
mov
and
inc
div
movsl
and
fcompl
dec
mov
mov
jecxz
mov
aas
push
ret
into
jno
add
adc
jns
addr16
jg
pop
sub
nop
mov
sahf
add
adc
mov
mov
ret
lock
mov
popa
addr16
mov
or
or
and
or
mov
test
jb
add
leave
insb
push
fnstcw
xlat
cmp
dec
xchg
mov
xlat
pop
sbb
mov
mov
sbbl
pop
sbb
sbb
inc
and
dec
outsb
int3
aas
add
xor
cmp
jg
fstpl
and
rorl
ljmp
in
push
andb
fs
mov
sti
mov
aaa
int
ss
xor
mov
fwait
ret
inc
xchg
mov
mov
xchg
mov
and
or
add
xchg
ret
roll
loop
bound
pop
dec
loopne
adc
addr16
pop
out
and
out
cltd
and
dec
add
jnp
xor
jae
cltd
call
dec
sub
inc
mov
fldt
xor
adc
jae
mov
pop
or
pop
mov
add
mov
ffreep
into
rol
mov
popa
in
lcall
insb
mov
xor
dec
cmp
std
nop
repz
cwtl
lods
sbb
push
jmp
repnz
data16
stos
jo
mov
fldt
dec
jbe
mov
jp
mov
test
jo
fwait
shl
rorb
mov
data16
inc
pop
cmp
mov
inc
push
aaa
fdivr
test
into
and
xchg
repnz
xor
scas
fstpt
insl
aaa
sbb
out
cmc
add
pop
sarl
jmp
stos
mov
cmc
or
movsl
cld
mov
mov
ror
or
aaa
adc
sbb
lods
push
xchg
sbbb
pop
push
ljmp
in
xor
sub
cmp
ret
adcb
cmc
stos
jne
popa
arpl
fbstp
arpl
mov
orl
adc
js
xchg
adc
das
movsl
test
mov
ljmp
test
push
push
dec
inc
jp
xor
cmp
push
rcll
push
and
sbb
jl
imull
imull
push
jb
mov
pop
mov
cmc
popa
mov
push
std
dec
in
out
ljmp
xlat
inc
mov
jge
or
xlat
lock
je
sahf
sbb
fcoml
or
pop
dec
mov
movsl
push
inc
xchg
pop
loop
popf
mov
dec
in
std
bnd
cmc
test
mov
scas
shr
xchg
cmp
adc
or
es
jecxz
popa
xchg
lret
sar
jbe
adc
pop
mov
or
int3
and
push
or
xchg
or
cmp
inc
add
sub
jbe
sub
push
cmc
inc
sahf
mov
cmp
fs
jnp
jl
push
lock
out
cmp
xchg
jnp
inc
jle
lods
pop
popa
addr16
movl
orl
scas
sbb
inc
cmp
loopne
push
sbbl
subl
jbe
out
pop
js
sub
test
in
rclb
add
je
mov
adc
ficoms
adc
xor
fiaddl
test
dec
das
popf
adc
js
fistps
scas
jmp
cltd
es
dec
xchg
sub
icebp
addr16
xchg
into
rolb
sahf
je
in
mov
jnp
test
repnz
xchg
mov
les
dec
and
inc
jecxz
cmp
adc
adc
fnstcw
imul
xor
hlt
in
pop
bound
xchg
test
mov
push
popf
pop
das
xchg
sahf
mov
mov
pop
sub
or
pop
adc
adc
dec
jge
icebp
popa
leave
test
or
shll
scas
stos
xor
pop
jge
xchg
inc
std
inc
jo
orb
jle
pop
imul
add
mov
cmp
jl
adc
xchg
jo
inc
push
cmp
pop
loope
jge
xor
scas
outsb
lods
sarl
add
inc
xor
lea
das
jecxz
xchg
iret
push
mov
icebp
xor
in
jl
rcl
lods
jl
out
sbb
mov
mov
adc
cmp
cmp
mov
sbb
imul
fisubl
adc
dec
add
sub
stc
or
pop
jmp
lock
fimull
sub
dec
popf
jo
sbb
add
or
xor
push
mov
mov
mov
bound
mov
test
jb
bound
lret
push
fstpl
push
jmp
mov
jecxz
dec
and
clc
ret
jg
cmpsb
hlt
push
xor
or
cltd
es
add
push
mov
mov
or
jl
cmc
ljmp
dec
lods
mov
mov
orb
and
inc
fwait
scas
cltd
push
jecxz
cmp
push
inc
sbb
idiv
test
cmp
jae
aaa
xchg
cmp
pop
aaa
aam
sbb
add
adc
mov
sti
ljmp
ds
sbb
pop
or
xor
fcompl
and
loop
and
aas
shlb
mov
mov
xchg
repz
push
test
sbb
mov
sbb
aas
movl
cli
lret
xchg
andnps
xor
fmuls
int3
pop
std
push
inc
leave
sti
mov
iret
fsubl
push
popf
shll
fdivr
mov
fdivrl
dec
xchg
inc
outsl
and
inc
dec
push
mov
repz
add
inc
stos
lret
sahf
cmp
cltd
hlt
dec
scas
pop
add
test
mov
in
stc
adc
sbb
mov
push
stos
push
sbb
sub
gs
sub
and
lods
sahf
jae
mov
lcall
adc
out
pusha
sub
int3
jp
loopne
xor
push
dec
cmp
push
shlb
pop
repnz
decl
jno
xor
imul
jmp
cmp
es
lret
mull
lret
cmpsl
imul
scas
orl
add
arpl
iret
xor
xor
xor
jecxz
xchg
data16
push
cli
popf
cld
jl
movsl
jno
sbbl
roll
xchg
dec
in
and
jns
cltd
outsl
mov
jmp
ret
or
lods
mov
arpl
or
jl
cmp
cmp
repnz
movsl
dec
rol
cmp
xchg
inc
dec
xchg
adc
or
orl
fsubrl
out
and
nop
and
sbb
xlat
and
das
aas
mov
mov
mov
fbstp
and
pop
add
cwtl
inc
mov
jbe
sar
xchg
mov
jmp
addr16
fmulp
rol
cmp
and
mov
das
dec
inc
dec
aaa
jg
and
cmp
cld
hlt
push
orl
cmp
int
add
call
enter
jmp
mov
popf
pusha
pusha
addr16
xchg
xor
rclb
ljmp
adc
cmp
cmp
stc
repz
pushf
cs
pop
add
xor
cld
out
xchg
or
lds
stc
push
push
pop
inc
xchg
das
scas
dec
pop
mov
pop
ss
lds
pop
call
adc
inc
sub
and
adc
jge
ds
aas
xor
arpl
rcr
into
pop
or
popa
push
mov
fidivrl
pop
ret
sub
xor
mov
aaa
lods
adc
dec
sub
cmpb
in
loope
fbld
mov
adc
mov
mov
aas
orb
scas
jp
push
mov
mov
mov
push
subb
pop
xor
outsl
fwait
push
xchg
dec
lods
jae
xchg
bound
into
mov
lds
sub
and
out
test
cmp
mov
jl
add
xor
cmc
mov
das
enter
jle
out
ret
cli
pop
or
xchg
pop
lahf
es
mov
lods
fistpll
dec
adcb
mov
adc
clc
lds
dec
shrl
mov
mov
push
mov
sahf
nop
pusha
inc
jmp
int3
lea
enter
sbb
xor
sarb
in
mov
push
movsb
into
push
xor
test
and
xchg
pop
stc
lods
xchg
push
or
xchg
sbb
incb
lret
adc
mov
push
jmp
stos
mov
dec
shrd
dec
out
mov
adc
dec
imul
push
outsb
clc
pop
add
jl
sahf
pop
out
cs
mov
test
cmp
mov
adc
lods
in
pop
data16
cmp
mov
movsl
cmp
jl
sub
je
ret
les
call
jbe
movsl
xchg
push
pop
mov
xor
dec
gs
mov
jns
xor
inc
stos
push
rcll
sahf
aad
dec
adc
cs
inc
jmp
hlt
add
ss
add
faddl
mov
loope
xor
dec
iret
popf
mov
mov
leave
mov
or
mov
push
rcrl
push
ds
test
cmp
jns
cs
xor
fwait
xchg
push
lret
adc
fcmovbe
dec
adc
popf
pop
mov
sub
orl
xlat
fst
fldenv
mov
lds
loopne
xchg
xchg
dec
add
mov
mov
test
jo
shrb
rcll
cli
xor
mov
cwtl
dec
inc
popf
mov
lahf
mov
fmuls
inc
and
stos
mov
std
mov
pop
fimull
insb
sbbl
sahf
push
lock
jle
testl
push
xor
jns
popa
dec
cmp
jg
inc
loope
mov
sbb
or
std
or
jae
sub
or
aas
lock
in
loope
push
fcom
mov
mov
mov
gs
adc
jo
jns
sarl
or
mov
in
pop
sar
mov
cmc
xchg
sbb
lods
test
adc
pop
arpl
adc
dec
sub
call
pop
shll
movsl
lods
mov
insb
and
dec
add
mov
loopne
cli
sar
popa
loopne
dec
ja
xor
popa
sbb
int
mov
mov
lock
lods
xchg
outsb
lods
pushf
add
add
fildll
fstpl
loopne
in
inc
loop
add
aam
iret
or
call
cmpsl
test
sti
jbe
dec
and
adc
imul
jne
lods
xchg
aas
sub
notb
lahf
das
dec
cltd
dec
orb
pop
insb
cld
icebp
add
or
cmp
icebp
or
xor
mov
enter
mov
stos
arpl
and
or
pop
dec
fisttpll
je
sbb
xor
pop
cld
inc
xchg
loopne
pop
inc
cmp
inc
jle
aam
pushf
mov
popa
fnstcw
mov
sti
mov
xchg
cli
sub
sub
inc
push
bound
adc
push
repnz
daa
scas
lcall
cmc
jns
test
lods
dec
ficoms
pushf
loope
jns
int
out
push
adc
xchg
icebp
movsl
in
sbb
std
jne
addr16
cld
insl
dec
xchg
add
idivl
sub
andb
in
sti
jns
sbb
mov
cmp
xchg
cmpsb
inc
pop
das
mov
and
dec
mov
test
loop
outsl
int
hlt
pop
pop
in
mov
scas
cmp
lret
dec
push
inc
cmp
inc
lods
shlb
subl
mov
fistpl
push
mov
inc
and
sub
call
pop
mov
jae
mov
in
mov
mov
enter
sub
sub
pop
mov
xchg
sbb
int3
push
es
imul
neg
pop
jp
sti
cmpsb
jne
or
pop
xor
push
mov
bound
push
arpl
shll
push
and
ret
cli
add
loop
fwait
in
movsb
add
mov
dec
aas
jno
fists
jp
sbb
lcall
daa
xlat
addr16
or
stc
jb
outsl
sar
mov
and
pop
aad
pop
ja
test
orb
mov
ljmp
dec
pop
mov
cli
pushf
lea
fcmovnu
xor
add
lea
xchg
out
dec
or
mov
ds
outsl
repz
inc
sub
cmc
inc
xchg
cld
pop
or
inc
leave
xchg
cmpsb
and
cmpsb
pop
pusha
test
leave
ror
push
xor
push
ja
sar
stos
outsb
fmul
loopne
dec
or
aas
ss
or
aam
adc
insl
ljmp
push
or
fldl
add
loope
and
cmc
xor
sti
adcl
jl
push
cmp
dec
add
sub
sub
inc
xor
and
inc
push
pop
cmp
fisttps
jp
fdivrs
test
mov
fsts
cmpsl
mov
loopne
pop
inc
jg
xchg
arpl
mov
adc
xor
inc
xchg
sbb
mov
mov
dec
sbb
xchg
call
pop
lret
xchg
inc
iret
popf
lcall
fcmove
push
sahf
lock
out
outsl
sub
pop
or
xor
mov
adc
incb
add
andl
rorb
je
jecxz
mov
test
mov
cmp
test
cmp
das
fwait
mov
popf
scas
es
clc
outsl
jb
sbb
mov
add
xchg
orb
push
xor
cld
or
jb
movsl
cmpsl
jecxz
cltd
xor
icebp
sub
jne
insb
sub
sbbl
fmuls
mov
daa
cmp
xor
lahf
jbe
or
adc
test
jno
call
enter
lahf
cltd
add
adc
mov
mov
cmp
insl
sbb
add
pop
push
sub
mov
and
mov
in
cmp
cmpsb
fldenv
xor
cmp
sub
mov
test
add
hlt
mov
lds
dec
sbb
jmp
lret
pushf
push
loop
push
sarl
cmpsl
push
add
pop
dec
and
pop
mov
data16
jge
dec
rol
les
addl
add
dec
dec
mov
sbb
mov
push
xor
mov
cmp
dec
xchg
andb
mov
inc
cmp
lret
cs
mov
mov
inc
adc
call
dec
dec
push
cli
mov
negb
push
ja
gs
icebp
mov
fcompl
fldt
lds
in
xchg
les
cwtl
jg
xor
test
out
imul
mov
jb
stc
mov
jmp
addb
stc
pop
xchg
jl
out
mov
sbb
mov
je
xchg
adc
jecxz
shl
and
xor
js
jp
pop
enter
stc
mov
cli
xchg
cs
imul
out
jmp
xor
adcb
call
into
mov
mov
or
fcmovnu
sub
xchg
mov
mov
dec
mov
inc
push
sub
jp
inc
pushf
inc
scas
lods
fstps
sub
pop
lea
aam
repnz
mov
rorl
loope
call
rolb
fldenv
lret
push
lahf
bound
ss
std
dec
into
add
push
andb
pop
imul
mov
fcmovnb
loope
jmp
dec
adcl
nop
fnstsw
test
loop
rcrb
ret
insl
rcll
cli
and
cli
scas
and
std
xchg
jns
sub
push
xchg
repnz
cwtl
aad
adcl
pop
lret
mov
dec
fsincos
in
fdivl
cmc
sub
pushf
in
cmp
jbe
dec
cmp
mov
push
push
mov
fcompl
sahf
or
popa
fs
loopew
pop
insb
mov
xor
fnstcw
in
in
sbb
out
add
gs
pop
das
pop
in
push
loopne
and
sub
in
shl
adc
roll
mov
mov
and
test
test
addr16
sbb
mov
xchg
inc
ffree
insb
cmc
xchg
add
jns
outsb
cmp
xchg
shlb
pop
fcompl
lods
inc
es
jne
std
and
js
pop
inc
outsl
xchg
adc
gs
pop
sub
push
ss
jmp
cmp
in
aaa
and
stc
dec
pop
mov
add
adc
in
outsb
mov
pop
jne
push
mov
adc
sub
push
fcmovu
pusha
test
repnz
das
jae
mov
fisubl
shrl
add
add
shr
mov
mov
pop
pop
in
nop
lahf
fiaddl
out
lods
addr16
in
mov
cs
adcl
inc
sbb
in
xchg
fldl
andb
into
push
aaa
push
lods
sahf
mov
out
cmpsb
sti
cmp
add
repz
shlb
push
push
adc
sbb
loop
mov
in
mulb
push
xchg
jge
sbb
aas
push
xchg
es
or
or
mov
fbld
fstl
push
fidivrs
pop
in
imul
inc
cmp
insb
and
adc
fdivl
in
xchg
and
ret
mov
pop
jg
cmp
dec
out
imul
xchg
cwtl
cmp
bound
pop
cmp
jge
movsl
inc
inc
pop
mov
std
push
jns
inc
fwait
push
ffree
arpl
hlt
push
dec
scas
inc
sti
bound
and
aad
pushf
dec
aam
adc
out
sbb
dec
xchg
jnp
sub
ficoml
das
and
cmpb
mov
cmc
rcrl
das
and
add
lods
subl
xchg
mov
fwait
mov
ret
push
pop
add
add
pop
filds
mov
imul
iret
fs
xchg
mov
ss
sub
mov
stc
daa
or
movsb
mov
es
imul
cmp
push
cmp
mov
or
push
data16
and
bnd
iret
jmp
imul
aaa
and
addr16
out
pop
push
mov
int3
xor
add
sub
mov
sahf
lcall
lea
mov
in
cmpsb
mov
rcl
faddl
mov
mov
mov
into
fwait
lock
mov
pop
jno
jmpw
inc
aam
jle
pop
inc
and
or
and
jno
jmp
mov
inc
push
ljmp
or
add
inc
pop
ljmp
cltd
popf
push
xchg
ret
or
sbb
jb
push
inc
imul
mov
shl
test
popf
or
fldenv
std
in
push
sub
mov
mov
push
lods
xchg
stos
or
sub
sub
or
icebp
lret
push
in
xor
mov
es
add
movsb
push
pusha
xor
and
testl
shl
daa
dec
pushf
cwtl
or
pusha
pop
push
stos
dec
repz
daa
arpl
out
mov
daa
dec
mov
out
and
push
data16
push
lret
mov
mov
mov
mov
xor
nop
insl
jecxz
test
fs
out
mov
je
fisttpl
rolb
mov
add
push
mov
out
cld
ljmp
jnp
enter
adc
add
das
push
dec
outsl
mov
cmpsb
mov
inc
pop
push
push
mov
movsl
mov
rclb
xchg
outsl
dec
or
or
push
int3
les
pushf
orl
pop
gs
dec
icebp
xchg
cld
into
out
int
sub
or
subb
xlat
jge
jmp
addr16
lock
div
sub
xchg
lret
xor
mov
mov
xchg
jns
or
aaa
popa
imul
jp
lock
insl
aaa
fsubrs
push
inc
cwtl
stc
adc
sarb
movsl
push
sub
xchg
add
ja
or
out
scas
shll
push
push
test
and
dec
or
rolb
popa
imul
jge
dec
lock
pop
sub
push
pop
mov
icebp
or
test
outsb
shrb
cmp
pushf
das
outsb
sub
mov
mov
rclb
cli
rorb
cli
sbb
aaa
das
sbb
loope
jmp
xchg
rcl
pop
jo
iret
cmp
cmp
push
imul
dec
ds
mov
and
scas
sahf
repz
loopne
sub
xchg
xor
test
lods
aad
in
rcrb
push
sbb
mov
ffree
daa
bound
frstor
mov
xor
aam
sbb
jge
add
inc
addl
sub
iret
mov
push
dec
sub
shrl
mov
ds
inc
jmp
pushf
xchg
pop
in
test
je
rolb
in
cmpb
fwait
inc
jns
mov
xchg
push
movsb
mov
pop
scas
sbb
xchg
inc
cld
rclb
add
jge
daa
addr16
adc
daa
xchg
lahf
jle
pop
mov
cwtl
dec
jmp
sahf
out
cltd
xchg
add
mov
inc
dec
mov
mov
mov
cmp
inc
push
in
mov
xchg
push
dec
cmp
out
xchg
push
movsb
daa
addb
mov
cmp
jns,pn
push
add
adc
pop
xor
add
cwtl
and
mov
vmread
lcall
mov
sbb
pop
test
push
arpl
lcall
and
push
dec
daa
jae
or
orb
sub
mov
pop
into
or
mov
xor
js
inc
pop
dec
mov
xor
cmp
inc
and
stos
enter
xor
sbb
or
movsb
mov
js,pn
jno
adc
push
in
test
push
movsb
mov
shll
ja
ret
fcom
mov
shll
imul
push
jo
je
mov
add
mov
in
mov
jno
push
mov
adc
pop
addl
icebp
push
lds
outsb
dec
push
cmp
out
int3
loopne
or
dec
pop
mov
cwtl
push
icebp
dec
xchg
xor
dec
sbb
ja
push
test
mov
cltd
loopne
out
in
enter
lods
js
mov
mov
fisttps
cltd
jne
cmp
mov
and
jb
mov
sub
push
pop
mov
rcrl
in
or
arpl
pop
stc
mov
je
iret
inc
pusha
insl
inc
loop
popa
xlat
or
mov
xchg
ljmp
sbb
pop
pop
sub
loop
rcrb
mov
pop
cmp
mov
mov
jb
push
adc
ljmp
sti
jg
xor
insl
jbe
inc
dec
mov
cmp
cwtl
jo
repnz
loope
fisubs
in
imul
lods
lahf
leave
xor
scas
sahf
inc
jl
sti
rdmsr
xor
icebp
push
in
pop
dec
frstpm(287
shl
mov
jae
mov
lcall
ds
cmc
test
rolb
pushf
lds
cs
pop
add
outsl
bound
sti
addl
loope
shrl
cmpsl
lahf
add
add
dec
lods
mov
mov
lret
seto
insb
cs
int3
sahf
in
dec
xchg
jbe
imul
shll
jecxz
imulb
or
mov
mov
dec
movsb
add
pop
shlb
cs
jnp
cmp
jo
xchg
adc
rclb
sub
mov
test
out
mov
mov
outsl
int
jmp
mov
fidivrl
faddl
enter
push
xchg
mov
pop
pop
lahf
xorl
add
sbb
ret
dec
inc
out
out
mov
fisubl
clc
dec
jecxz
rcrl
icebp
xor
mov
cwtl
test
mov
or
loope
jmp
sbb
rcr
out
adc
cmovno
push
inc
sub
sub
jl
xchg
outsb
and
jnp
xor
ret
jo
stc
pushf
xchg
jne
cltd
xchg
js
and
xor
push
daa
mov
popa
lock
ror
mov
stos
in
hlt
das
out
nop
stos
cmp
ss
out
imul
add
gs
lret
xchg
jo
sub
cmpsb
imul
push
mov
dec
and
mov
imul
outsl
and
jle
cmp
std
mov
dec
bound
cmpsb
movsl
or
loope
orb
jb
jo
sub
daa
imul
cmp
jo
stos
in
cltd
add
imul
fcmovnbe
and
iret
insl
dec
xlat
inc
fsubrl
popf
jp
push
xchg
cmp
add
dec
push
les
insl
stos
repz
fidivrs
xor
inc
in
cmp
dec
popl
insl
mov
cmpb
inc
cmc
aad
adc
pop
mov
ja
insb
jmp
scas
sbb
outsl
insb
push
cmp
orb
stos
dec
and
pop
notl
into
and
adc
adc
jo
dec
xchg
sub
stc
daa
push
jns
pop
in
jmp
adc
gs
ss
sahf
fwait
add
es
ljmp
jg
fwait
mov
test
mov
mov
sar
adc
gs
push
xchg
ds
fwait
push
cmp
bound
fnstcw
cld
or
aas
aad
lock
push
pop
insb
jae
jae
fistpll
stos
or
cmp
dec
mov
or
mov
sbb
mov
cmp
mov
ljmp
jp
mov
rcr
mov
xchg
jnp
ret
mov
aad
and
dec
mov
sahf
ljmp
lock
add
mov
push
hlt
pop
add
jp
int
xor
loopne
sub
cmp
bound
rol
mov
push
or
loopne
pop
pusha
sub
xchg
xchg
out
push
stc
stc
divb
jae
call
mov
pop
insl
jbe
cmp
mov
pop
or
ret
sbb
jp
movsl
and
mov
repnz
xor
sub
push
add
in
cs
xchg
cmp
and
imul
push
mov
clc
out
lds
andb
icebp
arpl
jns
dec
fisttpll
call
mov
or
add
sub
pushf
int3
nop
dec
in
pushf
andb
adc
dec
jmp
fdivrl
sarb
xor
imul
pop
pop
inc
imul
jno
movsb
push
and
jecxz
xchg
aaa
mov
fstl
icebp
inc
inc
pushf
sbb
popf
sar
push
fiadds
inc
push
sbb
sahf
add
push
pop
test
dec
jae
push
aas
sar
adc
xor
sub
pushf
sub
pop
or
jg
jns
lods
xor
inc
fcmovb
mov
lcall
cmp
dec
fdivl
xchg
or
dec
mov
mov
mov
cmpb
mov
cmp
add
or
shr
andb
bswap
jae
add
mov
int
out
pop
pop
nop
mov
fcmovbe
push
loopne
mov
sub
jb
push
sbb
cmpsb
clc
mov
mov
jmp
inc
outsl
mov
push
fisttps
push
ret
mov
cs
fsubl
ljmp
adc
cmpsl
jecxz
aam
out
outsb
mov
test
push
repz
xor
cmp
scas
xchg
adc
pop
int3
mov
sbb
and
movsl
push
dec
pop
rolb
mov
inc
and
sbb
aas
test
call
jecxz
mov
pop
inc
in
loopne
push
cmp
movsl
sbb
bound
fs
push
lea
add
movb
jbe
jbe
outsl
addb
xor
mov
mov
jle
shll
add
inc
cmc
dec
push
ss
add
jne
sti
js
xor
cltd
jnp
fisubs
stos
sbb
les
mov
loopne
fstpt
aas
jae
cmp
pop
adc
xor
mov
and
add
push
sbb
push
dec
push
pop
sahf
out
push
imul
idivl
or
push
add
and
test
iret
xor
mov
and
lods
jnp
xchg
or
and
cmp
dec
and
cltd
movsb
daa
adc
notl
push
mov
fwait
xchg
lahf
enter
dec
sub
and
sub
sarl
jns
push
flds
adc
ljmp
push
add
jmp
jle
cmp
stos
lret
sbb
loopne
mov
pop
cli
jno
xor
pop
shll
stos
jb
push
inc
lea
adc
lock
mov
dec
lds
push
jmp
in
jne
bound
rorb
int3
mov
jbe
jae
pop
mov
push
adc
cwtl
out
sub
sub
cltd
fldcw
popa
out
int3
mov
jbe
data16
out
roll
in
aas
ds
cwtl
mov
cli
and
fbld
mov
and
dec
leave
mov
hlt
sbb
mov
gs
hlt
push
das
xchg
adc
mov
xchg
sbb
outsb
fnstsw
adc
mov
je
fadds
fnstenv
push
pop
movl
mov
int
pop
push
into
sbb
jge
add
or
mov
lds
add
into
pop
pop
xor
into
or
rcll
cmpsb
add
fnstenv
and
icebp
inc
push
mov
fldt
int3
jmp
pop
in
cs
pop
call
inc
sbb
mov
add
out
mov
adc
nop
xor
cwtl
and
mov
sbb
cld
sub
pop
fldenv
inc
cmp
faddp
gs
pop
mov
xchg
mov
negl
outsb
or
rcr
xor
dec
jle
mov
daa
in
hlt
jns
mov
pushf
push
mov
mov
push
dec
push
fs
bound
mov
jl
imul
lcall
sti
aaa
cmp
test
jae
pop
inc
fwait
out
fidivrs
xchg
in
push
popa
ret
wbinvd
mov
cmp
data16
xchg
pop
push
sbb
repz
jg
cmpsl
test
mov
jb
into
add
mov
fidivl
lock
inc
dec
loope
and
jle
aas
adc
out
insl
sub
mov
xchg
in
mov
or
dec
adc
xor
out
mov
out
jb
mov
cmp
mov
or
scas
insl
int3
xchg
push
mov
adc
cmp
sbbl
ror
lea
mov
xor
push
sar
icebp
aas
dec
and
aas
sbb
push
outsl
je
es
mov
add
inc
dec
dec
jns
jbe
push
jg
adc
cmpsb
hlt
push
mov
sub
add
add
movsb
pop
call
sbbb
mov
or
jbe
hlt
sub
shlb
add
cs
pop
pop
mov
mov
out
push
sub
mov
jae
cltd
sti
lods
xor
fsubr
lret
xchg
dec
popf
jmp
sub
inc
cmpsl
dec
mov
lods
mov
inc
test
mov
mov
in
into
push
in
addr16
mov
mov
and
test
jecxz
repz
movsl
or
ret
imul
aas
testl
rclb
insb
scas
sbb
push
sub
lahf
or
mov
hlt
mov
lea
adc
push
clc
xor
ja
mov
loope
rcl
fmull
clc
jp
xchg
sbbl
pop
cmp
in
xchg
add
lea
or
add
and
jns
mov
mov
daa
test
sbb
scas
fnstsw
mov
std
movsb
xchg
and
jge
les
mov
add
mov
dec
inc
andb
ja
out
stc
jmp
jbe,pt
mov
jo
adc
sbb
adc
push
dec
lods
and
js
sub
adc
lea
xlat
inc
mov
mov
dec
hlt
sbb
inc
addr16
inc
dec
and
jmp
jbe
push
add
stos
add
and
enter
and
jno
mov
xchg
mov
bound
cmc
call
jl
pop
jnp
clc
fwait
mov
sti
mov
or
pop
dec
leave
loopne
cmc
icebp
iret
imul
std
mov
xchg
pusha
aam
les
inc
xor
adc
cmp
xchg
nop
outsl
out
pop
add
inc
pop
pop
ljmp
push
or
pinsrw
inc
out
mov
lock
clc
shrb
lret
rclb
incl
add
clc
sbb
inc
sbb
dec
cmp
mov
push
pop
out
fwait
xor
sbb
xor
addr16
mov
fdivs
cld
aaa
add
or
or
cmp
xor
lcall
scas
mov
call
test
pop
mov
fsubp
shll
jp
insl
dec
add
jns
in
cvtpi2ps
mov
push
divb
inc
test
sbb
loope
mov
inc
dec
pop
jnp
push
fwait
cmp
shrb
loop
ret
js
xchg
out
repnz
push
push
xor
pop
scas
inc
insl
into
mov
sub
lods
cmpl
loopne
loopne
movsb
addr16
loop
and
andl
mov
int3
sub
out
fildl
ds
push
mov
lock
int
std
adcl
jnp
and
pop
jnp
cmpsb
out
mov
fidivrl
sbb
out
cmc
mull
push
sbb
repnz
pop
xchg
in
icebp
cmp
filds
xor
cwtl
fwait
dec
dec
adc
and
out
cmp
push
arpl
sahf
insb
sbb
lcall
or
mov
add
out
insb
xchg
or
sbb
pop
mov
test
in
icebp
sub
mov
fidivl
cltd
xchg
cmpsb
lret
dec
inc
out
mov
jbe
mov
jne
xchg
dec
lcall
mov
scas
add
inc
and
lods
push
mov
xchg
pop
xor
xchg
fdivr
popa
inc
test
dec
cmp
mov
sub
imul
fistpll
ljmp
imul
or
push
repnz
aam
ret
cmc
movsl
bound
aad
jle
je
sbb
cmp
js
mov
or
or
out
in
mov
jbe
jo
scas
xchg
roll
rcll
test
ss
int3
mov
repz
mov
popf
push
mov
movsb
popa
outsl
jb
dec
xor
push
inc
mov
pop
jmp
notb
fs
mov
lods
int
or
mov
cmc
ret
pop
in
inc
jmp
pop
int
cmpsb
std
dec
sub
aad
jb
loopne
push
or
movsl
fldt
push
jb
scas
mov
iret
mov
push
and
xchg
xorl
std
add
in
loopne
mov
cmp
add
out
adc
mov
push
dec
adc
xor
ficoms
cmp
repnz
pop
push
pop
shll
adc
pmaxsw
xchg
loope
xor
aam
dec
dec
sub
ret
ret
ss
enter
or
mov
inc
aam
in
or
mov
push
mov
mov
lock
adc
je
jnp
lret
hlt
pop
push
test
cmp
cmp
repnz
pop
popf
inc
xchg
or
aam
cltd
jae
mov
xchg
sub
and
add
js
icebp
fcmovnb
lahf
lods
sub
nop
jl
cmp
cmp
test
scas
mov
adc
out
clc
jp
out
out
test
mov
xchg
push
test
pusha
mov
in
rolb
jge
call
cmpsl
inc
cmp
imulb
stos
mov
call
xchg
pop
pushf
push
cmp
jecxz
pusha
mov
push
in
loope
cmp
in
push
pop
mov
call
idivb
pop
mov
push
rcll
ret
mov
lret
mov
imul
push
xor
xlat
enter
out
dec
sub
or
mov
push
sub
mov
gs
je
jae
push
jp
dec
pop
stc
iret
inc
jle
call
jb
cmp
rol
mov
inc
aad
push
inc
cwtl
lds
int
and
adc
scas
sahf
xchg
fimuls
cmc
xor
lods
pop
mov
test
or
jae
lahf
rorl
out
lcall
inc
adc
jge
sbb
add
sti
insl
jl
loop
jns
cmp
stos
mov
ret
roll
cmpsl
mulb
adc
notl
inc
dec
xchg
fisttpll
pop
cmp
jno
mov
and
xchg
mov
xchg
xor
cmp
insb
ljmp
mov
mov
adcl
loopw
mov
cld
pushf
pop
push
and
jle
pop
mov
push
adc
xor
fisubs
gs
cwtl
push
scas
pop
xor
es
cld
mov
scas
mov
aaa
je
data16
mov
andb
or
mov
mov
in
test
mov
dec
xor
jns
popf
mov
adc
dec
sbb
pop
mov
movsb
negl
shrb
stos
insb
aad
dec
jo
pop
fistpl
call
add
sbb
int
and
and
sahf
xor
xchg
mov
xor
paddd
loope
cmpsl
cmovp
push
pop
mov
cs
daa
out
ds
mov
fwait
loopne
dec
in
std
test
mov
sbb
adc
insb
insl
pop
push
or
inc
imul
pop
pop
loop
cmp
add
push
int3
sarb
sbb
mov
jbe
bound
xorl
push
mov
fs
pop
sbb
push
push
mov
sbb
dec
sub
rep
outsb
loope
push
mov
lcall
pusha
adc
in
push
insb
mov
fbld
ja
mov
mov
cmp
shlb
lods
in
loope
pop
pop
test
cmp
xchg
les
lret
je
gs
xorl
mov
roll
sbb
inc
xchg
roll
mov
arpl
jp
test
mov
cld
dec
adc
mov
xor
out
jg
repz
inc
xor
popa
xor
jns
aad
xchg
fadds
lds
jo
mov
clc
xchg
and
lds
bnd
jns
pushf
push
mov
pop
test
jmp
lret
stc
mov
adc
ja
lods
les
jl
jmp
jbe
imul
loope
jmp
mov
fisubrl
icebp
pop
push
hlt
insb
xchg
cmp
add
es
out
mov
jmp
sub
sbb
cmpsb
ud2
iret
test
cmp
int
insb
test
pop
andl
das
int3
add
mov
and
dec
iret
xor
push
pushf
jno
and
fwait
sbb
js
or
mov
sbb
jno
inc
std
lret
pop
pop
push
add
pop
fdivrs
xor
mov
nop
in
cmp
pop
out
push
aam
sbb
mov
jb
and
pop
shlb
fst
mov
push
cmp
add
jb
cli
xchg
sbb
push
pop
mov
add
sets
mov
aam
cmp
shrb
dec
cmp
aad
data16
mov
xchg
sub
xchg
lret
mov
sub
jge
add
sti
out
fwait
movsb
orl
int3
cmp
add
inc
push
pop
and
mov
jmp
andb
je
ljmp
ja
imul
inc
jmp
mov
adc
pop
jne
fucomip
xor
adc
in
mov
sbb
add
or
push
add
and
mov
mov
inc
mov
push
fisubl
hlt
repz
nop
xorb
jae
enter
loope
and
push
cmovle
fdivl
pusha
sarl
int
ja
icebp
pop
icebp
cmp
xlat
jns
push
mov
sarb
icebp
xor
dec
xor
adc
stos
mov
jbe
aas
fs
inc
mov
aam
or
lock
dec
pusha
ret
shrl
flds
adc
cmc
test
xchg
dec
jb
int
lods
hlt
xlat
sub
mov
jb
mov
lea
cmp
adc
call
aas
rcl
cs
dec
add
add
je
or
les
sbb
add
mov
push
rcl
std
cmp
jns
inc
dec
adc
inc
mov
pop
mov
jmp
and
outsb
fstpl
dec
add
sub
clc
inc
mov
jl
jle
leave
adc
pop
into
out
leave
xchg
fistpl
or
ret
cmp
fs
outsl
push
es
outsl
aad
pushf
inc
lock
loop
pop
jle
adc
insl
jb
pop
pop
sub
xor
cltd
inc
lock
cld
fs
jne
daa
leave
aas
sbb
mov
xchg
inc
push
insl
lcall
data16
cmp
push
std
cmp
inc
ss
add
mov
mov
pop
das
sub
nop
into
sbb
pop
and
bound
pop
inc
or
roll
out
jb
push
dec
mov
push
cmp
xor
pop
imul
dec
fs
add
pop
xchg
andl
rcrb
lods
mov
cmp
shll
negb
mov
sbb
loope
cwtl
cmpsl
pop
and
orl
aad
dec
call
mov
inc
xchg
pop
in
xchg
push
insb
imul
cld
das
in
mov
insb
hlt
std
lret
add
push
xor
outsb
push
adc
xchg
ljmp
xchg
in
pop
cmp
sub
add
aad
cmpsl
jnp
lahf
out
lcall
cmp
pop
inc
dec
clc
sub
mov
inc
in
or
add
adc
mov
int
add
xor
xor
push
sub
fwait
popf
stos
icebp
xor
and
pusha
cmpsl
bound
sbb
jge
adc
mov
popl
mov
pop
xchg
nop
cltd
movsb
cs
mov
sub
or
push
push
mov
push
and
popa
xchg
xchg
fnstsw
xchg
arpl
sbb
add
fiaddl
dec
jne
cmc
mov
test
or
pop
aas
repz
xorb
js
dec
dec
rcrb
or
sbb
add
jno
dec
xor
lds
rclb
xchg
cmpsl
lock
push
int3
pop
dec
pcmpgtw
inc
dec
dec
in
sarl
psubsb
sbb
stc
push
mov
jecxz
jle
mov
ja
jo
lret
call
mov
les
jmp
bound
mov
fstp
adcb
in
gs
or
lret
jge
and
arpl
daa
mov
scas
cli
int3
mov
xor
icebp
popa
dec
scas
xor
fldt
push
sub
inc
fistps
cli
mov
fbld
es
fwait
stc
jge
test
sub
cmp
inc
bound
pusha
cmp
pushf
xorl
test
mov
outsl
mov
daa
cli
fiaddl
mov
sub
out
addl
cmpsb
and
and
and
cmpsl
push
loopne
in
push
aam
cmp
xchg
sbb
call
xor
xlat
stc
xchg
inc
addb
lret
lret
movsl
adc
ds
inc
scas
or
ss
cmp
ret
mov
inc
pop
xor
out
fwait
dec
mov
orb
add
dec
push
push
lret
mov
dec
inc
int3
cmpsl
vaddsubpd
cwtl
in
cld
movsb
ss
jno
push
int
or
hlt
call
mov
lea
in
out
lret
mov
repnz
xchg
mov
mov
add
cmp
inc
aam
dec
cmp
shll
push
sub
cmovs
shlb
adc
push
cli
sub
add
add
xor
movsb
lret
leave
lods
sti
xor
ljmp
es
popa
fisttpll
sub
jl
mov
pop
mov
dec
cmp
loope
inc
inc
rcrb
int3
test
dec
sub
mov
jmp
je
jo
in
mov
or
out
hlt
std
sahf
and
int
jg
aam
sar
nop
cmpsb
jno
sub
xor
mov
loopne
xchg
mov
fnsave
pop
icebp
test
xchg
dec
add
out
test
cltd
adc
mov
je
sbb
sub
jb
or
lcall
jae
idiv
xor
mov
pop
bound
lret
cmp
flds
lret
jmp
out
jmp
test
push
pop
jnp
cmp
fimull
int
stos
shrb
mov
shll
jg
mov
xchg
sti
test
xchg
inc
xor
leave
mov
in
pop
mov
and
lahf
mov
jecxz
psllq
lods
lock
sub
fisubl
or
mov
int
int
sbb
push
jecxz
ret
loop
lahf
call
mov
fwait
icebp
mov
std
pop
sbb
inc
push
jmp
cmp
cltd
rolb
pop
or
arpl
rcrb
mov
adc
in
jne
es
jae
push
icebp
int
lods
jne
xor
xlat
incb
jne
cmpsl
nop
dec
or
test
data16
out
stos
adc
xchg
mov
and
xchg
pushf
xchg
sub
xlat
dec
jnp
sbb
ss
push
add
ret
fidivrs
dec
push
mov
stc
cmp
adcb
push
push
aaa
mov
and
jg
or
and
jmp
in
pop
jl
int
pushf
int3
mov
xchg
dec
es
loope
mov
jecxz
push
inc
jns
lret
adc
leave
bound
stc
xor
arpl
sahf
pop
pop
push
pop
mov
dec
sub
dec
add
aam
popa
jge
mov
jp
adc
scas
add
and
in
je
decb
ret
jbe
stc
daa
push
aaa
repz
add
fnstsw
in
push
and
dec
test
insb
testb
adc
es
cmpb
jbe
fwait
dec
cmpsb
dec
or
mov
xlat
ret
pop
mov
add
mov
ficompl
inc
cmp
push
cmp
mov
ret
dec
xlat
lret
jo
cli
dec
jnp
mov
cmp
stos
push
push
xor
xor
and
sti
jns
or
subb
xchg
push
pop
and
das
mov
pusha
cmp
fwait
add
push
push
je
pop
inc
push
mov
inc
inc
out
xchg
cmp
jae
out
cmp
xor
js
imul
dec
add
inc
pop
xchg
push
std
inc
arpl
mov
icebp
adc
jecxz
jae
shr
jmp
dec
lcall
and
jmp
add
sti
sar
push
jp
icebp
sub
in
mov
cmp
icebp
fdivr
std
mov
lret
lret
mov
push
pop
test
sub
mov
pushf
iret
push
subb
adc
cmpsb
mov
or
add
add
repnz
pop
inc
loope
out
test
inc
out
in
mov
ljmp
adc
or
test
xchg
ss
faddl
or
jne
out
popf
inc
xchg
jle
mov
fldcw
pop
cmp
stos
mov
jge
sahf
jne
and
jge
add
inc
dec
push
push
xchg
push
mov
pushf
aaa
and
fstl
push
or
iret
cli
sbb
repnz
dec
jg
xor
adc
fs
xor
cmp
mov
mov
dec
lahf
icebp
or
sub
shl
inc
cmp
pop
fimull
xchg
add
ja
xchg
pop
adc
lahf
jl,pt
add
mov
ss
inc
in
xor
out
leave
stc
ret
imul
push
dec
lcallw
cli
jp
popf
sub
test
xchg
mov
adc
or
xor
loop
inc
loopne
test
cmp
imul
mov
xor
ljmp
ljmp
out
imul
call
inc
sbb
pop
jb
loope
iret
sbb
push
scas
pop
cli
pop
cmp
shrl
daa
mov
mov
clc
xchg
dec
xchg
mov
jno
push
cmp
pop
ret
xchg
add
mov
and
jl
pushf
mov
fsubrp
push
cmp
insl
lret
push
mov
into
jle
jo
cli
mov
addr16
into
xchg
lahf
std
add
and
xor
int3
ss
pop
dec
out
pop
cwtl
mov
popf
add
push
int3
dec
movsb
aaa
push
out
add
push
dec
outsb
roll
push
pop
dec
mov
cltd
lea
gs
xchg
inc
inc
shr
mull
leave
inc
pop
mov
sbb
xchg
test
jl
jg
scas
imul
xor
and
int
fidivrl
cmp
cmp
lea
js
or
or
inc
leave
call
cmp
daa
fidivrs
frstor
aam
es
ljmp
lds
cli
jne
cwtl
xchg
xchg
jne
pop
ljmp
mov
or
adcb
out
iret
shll
int3
es
pop
push
aas
lock
mov
cli
mov
shl
pusha
inc
dec
mov
inc
inc
xchg
xor
add
lock
pop
pop
sbb
cmpsb
jb
pop
pop
insl
mov
sub
mov
cmpsl
sub
pushf
fidivs
sub
pop
mov
ret
add
cwtl
sbb
cwtl
outsb
mov
stos
mov
and
fs
int
hlt
jmp
adc
cmp
lock
push
adc
addb
inc
mov
mov
out
cmp
ja
pop
add
movsb
daa
pushf
cld
fucom
push
dec
mov
sub
push
aaa
movsb
mov
cmc
sbb
xor
pop
mov
adc
push
push
mov
lds
call
cmp
mov
cltd
bnd
lret
cltd
leave
cmp
addl
rorl
sub
imul
dec
out
aas
repnz
aas
push
stos
in
movsb
sbb
mov
cmc
jne
test
mov
inc
xlat
hlt
lock
xchg
fcomps
push
or
pop
insb
imul
iret
hlt
or
or
or
xor
outsb
aam
push
pop
pop
add
xchg
dec
in
sbb
clc
and
addl
out
in
adc
xor
test
inc
dec
xchg
lea
and
rol
cmp
xor
movsl
hlt
lret
movsl
fs
fldl
cmp
scas
mov
adc
push
adc
mov
xchg
sub
cmc
test
sub
xchg
adc
mull
aaa
pop
loopne
push
mov
mov
or
outsb
cs
mov
adc
std
loope
fxtract
pop
dec
fsubs
ret
mov
dec
push
popa
add
mov
add
cli
xor
addr16
idiv
cmc
in
cld
fstl
fildll
xor
push
sti
jg
jo
mov
out
push
fwait
bound
leave
test
mov
sub
pop
int3
jecxz
sbb
arpl
push
pop
sub
dec
dec
xchg
jnp
add
add
out
jnp
mov
call
aam
shr
pop
jp
sbb
dec
shl
ficomps
push
loopne
xor
sti
adc
sbb
lods
inc
push
les
pop
mov
mov
ds
sub
ljmp
xchg
cmc
int
ret
add
mov
jp
lret
xchg
test
xchg
xor
sub
mov
or
ds
dec
ficomps
rcll
jns
fidivs
dec
imul
lret
pop
movsb
icebp
mov
pop
repz
xchg
sub
sbb
mov
inc
pushf
hlt
ds
sbbl
mov
adc
dec
lods
into
pop
xor
and
sbb
sub
or
lds
std
movsl
cld
rcr
adc
or
push
movsb
add
xchg
ret
aaa
loop
jecxz
stos
inc
out
sbbb
sbb
in
add
or
shl
loope
jecxz
mov
push
and
jb
dec
add
pop
cmpsl
pop
loopne
push
sub
out
ljmp
jae
jl
mov
mov
or
mov
inc
inc
xchg
jg
push
sub
add
loope
or
ss
add
xchg
orb
shlb
inc
int3
icebp
or
mov
divb
icebp
in
inc
xor
cmc
aam
movsb
or
sbb
cmp
mov
xchg
stc
adc
sub
pop
jge
fcmovbe
cmpsl
shll
push
xor
lahf
xlat
inc
lret
jle
clc
and
fistpll
shl
loop
sahf
push
inc
ljmp
test
cmpsl
and
dec
leave
pop
push
dec
adc
scas
cltd
push
mov
add
outsl
and
jmp
lods
inc
and
out
cmp
xor
add
push
mov
add
icebp
das
cmp
imul
outsb
adc
dec
and
pushf
pop
outsl
mov
pusha
mov
push
push
push
sbbb
mov
ds
and
dec
in
adc
or
jp
int
xchg
shll
mov
adc
bound
cs
adc
pop
add
and
pop
push
jnp
mov
pop
jecxz
sub
loop
or
jo
jg
ss
mov
mov
leave
and
xor
pop
pop
adc
and
sub
lods
outsb
sbb
stos
xchg
sti
jp
jmp
outsl
movsb
sbb
push
mov
cli
xorb
lcall
add
lret
mov
sub
js
leave
sub
ret
stc
jns
push
enter
push
mov
jmp
adc
xchg
leave
adc
dec
xor
vmread
cwtl
mov
push
or
cmp
roll
mov
mov
inc
inc
cmp
hlt
pop
add
add
in
push
mov
paddsb
dec
mov
add
cmc
cmp
jle
jmp
push
aas
pop
neg
loopne
adc
mov
sbb
out
pop
hlt
sub
arpl
fstps
fiaddl
add
add
push
bound
lock
andl
or
add
or
aam
rcrb
js
in
popa
add
nop
sbbl
or
pop
mov
adc
repz
loopne
std
adc
or
fs
addr16
pop
mov
sahf
adc
ss
fidivs
and
adc
nop
data16
xchg
in
aaa
jae
imul
sbb
or
cli
mov
jno
cmp
add
sub
mov
into
mov
out
test
mov
push
es
pop
add
and
stos
mov
push
push
mov
cmc
or
cmpsb
leave
ss
add
jo
sbb
out
pop
cmc
inc
clc
dec
dec
imul
dec
insl
jne
fadd
sbb
push
jb
mov
in
movsl
movsl
outsb
hlt
and
dec
testb
lods
lock
stos
jecxz
je
dec
in
ljmp
or
dec
insb
es
mov
push
arpl
cwtl
sbb
or
lock
repz
enter
or
repz
test
dec
popa
sub
pusha
pop
shl
jl
xor
loop
rolb
dec
aas
sarl
sbb
mov
fisttpl
mov
popa
mov
outsb
outsb
dec
sahf
inc
lea
lock
std
push
int3
mov
loop
dec
sbb
lds
dec
lret
mov
jg
shll
mov
fisubs
adc
rorl
mov
sbb
inc
cmp
iret
inc
push
xchg
cmp
xor
jo
inc
pushf
daa
mov
bound
pop
je
xlat
cmp
xchg
in
adc
loop
pusha
iret
ficomps
push
les
sbb
lcall
loope
data16
cmc
jo
inc
jge
daa
ljmp
neg
mov
int3
dec
movsl
push
mov
jp
push
faddl
pusha
faddl
xor
and
pop
add
loop
das
mov
and
jno
adc
mov
aaa
jg
fucomi
call
mov
iret
mov
cwtl
mov
imul
mov
or
lea
jl
fwait
mov
rcr
jmp
mov
es
jo
stos
adc
movsl
inc
mov
inc
sbb
xchg
inc
test
mov
pushf
mov
adc
inc
push
into
xchg
push
insl
jmp
aad
xor
call
mov
jecxz
cmpsl
pusha
ret
stos
mov
adc
add
loope
mov
cmp
push
fbstp
outsb
in
and
les
sbb
pop
or
jge
inc
jmp
push
rcrl
je
xlat
addl
lahf
mov
cmp
push
cmp
subb
roll
scas
test
sbb
pop
ja
aaa
mov
cmpsl
dec
mov
insl
popf
std
imul
xacquire
aaa
dec
insb
sbb
pop
and
push
mov
and
testb
add
outsb
call
icebp
cmp
jmp
scas
aad
mov
mov
lret
cmp
jl
dec
fstpl
pop
mov
ss
out
int
push
mov
inc
test
jbe
add
sbb
jle
mov
mov
inc
in
dec
icebp
dec
dec
std
lods
xor
les
mov
jle
push
insl
jp
mov
clc
in
push
jmp
dec
mov
shll
push
push
adc
dec
popf
mov
movb
flds
inc
sbb
cmc
out
inc
or
xchg
clc
add
cmp
mov
xchg
mov
cmpb
cmp
insb
orl
daa
clc
mov
arpl
mov
xchg
jge
outsb
xchg
push
cs
jnp
xchg
rol
repnz
fmuls
push
pop
out
fistps
and
idivb
jne
icebp
or
dec
mov
sub
in
sbb
add
mov
mov
xchg
cmp
out
and
leave
mov
bound
jp
push
push
pop
fimull
mov
imul
sbb
ja
and
shll
fcomps
out
pop
das
xlat
scas
push
ds
or
mov
and
and
sub
inc
lcall
icebp
inc
xor
imul
mov
inc
jmp
insb
lcall
loope
mov
and
xchg
sbb
fsubs
xor
add
outsb
adcl
xchg
adc
xchg
insl
imul
pop
icebp
adc
nop
les
mov
rclb
sub
and
sub
inc
xor
jg
ficompl
pop
aam
gs
pop
ficoml
xor
xchg
jb,pn
mov
js
cmp
mov
sub
inc
cmc
ret
pop
jp
sbb
stc
xchg
test
in
in
daa
lret
or
out
fisttpll
ret
fiaddl
lock
fs
addl
or
jle
mov
ret
js
xor
jmp
mov
or
and
adc
pop
cmc
xchg
stc
sarb
inc
nop
cs
jno
mov
ja
das
pop
loopne
jmp
cmp
ss
aad
sbb
loopne
push
push
pop
mov
mov
nop
lret
push
jns
mov
mov
xchg
popa
mov
aas
rol
push
xchg
addr16
fldl2e
and
fdivs
jge
mov
popf
push
dec
xchg
push
adc
jo
ja
dec
fwait
inc
sbb
mov
push
inc
pop
cmpb
loopne
sbb
into
jns
jl
inc
test
push
add
test
dec
adc
out
insl
outsb
mov
adcb
xor
aaa
and
mov
pushw
jge
imul
cmp
out
lahf
mov
nop
lock
rorl
or
jae
mov
fucom
ret
xchg
add
and
adc
mov
or
ja
pop
dec
dec
dec
jno
in
pop
stos
xchg
cmpsl
in
sbb
dec
cmp
ret
sti
stc
push
lock
jge
xchg
pop
mov
sub
rcrl
test
orb
repz
movsb
les
sbb
inc
push
add
fisubl
mov
pop
cmp
stc
lcall
clc
mov
and
adc
nop
sbb
hlt
loopne
pop
cli
sahf
mov
cs
in
and
pushf
dec
call
dec
aam
pop
in
stc
stos
push
movsl
std
dec
sbb
mov
cmp
or
int
les
push
out
leave
adc
push
xlat
push
leave
mov
mov
aad
push
add
rcll
xor
daa
call
out
push
cmpsl
jg
mov
mov
lock
sahf
adc
movsb
imulb
xor
aam
inc
lock
add
push
mov
icebp
leave
sbb
ret
add
loopne
sub
movsb
sub
pop
loope
cmc
mov
push
ljmp
sub
mov
in
aas
dec
aad
repnz
dec
lret
sub
mov
lds
iret
add
or
test
and
pusha
push
adc
mov
iret
adc
test
mov
add
jl
dec
xor
inc
cmp
jmp
lea
stc
sbb
or
xor
cmp
pushf
mov
sarb
xor
or
pop
jmp
popf
mov
push
push
sti
xchg
sarl
mov
sbb
rorl
xlat
cmp
movsl
cmp
nop
fucomip
test
fbstp
inc
cmp
ds
xchg
add
xor
sub
rcr
adc
and
sbb
xor
out
dec
jb
jne
dec
adc
andb
inc
pop
in
push
jle
xor
xor
xchg
jmp
mov
in
popf
xor
inc
movsl
imul
cmp
out
es
mov
cltd
mov
add
rorl
imull
and
xchg
xlat
addb
mov
inc
icebp
jl
add
out
test
lds
adc
mov
pop
inc
in
adcl
push
mov
add
adc
adc
add
mov
test
and
fstl
ret
cmp
lret
jle
fwait
lret
inc
out
xchg
mov
cltd
aad
and
inc
arpl
shlb
cli
or
or
adc
dec
sub
test
test
popf
adc
inc
cmp
inc
xorb
movsb
cwtl
and
mov
dec
fcoml
pop
mov
dec
cmpsl
xlat
ret
jl
xor
jae
inc
cmpsl
cmpsb
mov
shlb
sub
test
cmp
jo
fisubs
adc
add
in
mov
push
mov
out
mov
mov
mov
insl
mov
sti
xor
add
sub
push
aad
jg
rorb
shrb
sbb
cli
mov
hlt
or
or
movsl
repnz
lods
pop
cli
mov
pop
pop
dec
jge
and
lods
jmp
loope
mov
stos
mov
int
ficomps
mov
lahf
xor
aaa
lret
mov
jno
cltd
jecxz
xchg
dec
or
xchg
push
in
and
xchg
push
sti
push
sbb
sub
rorl
mov
push
pop
cli
cld
dec
mov
mov
mov
cmp
push
lods
test
mov
adc
pop
int
adc
jmp
movsl
roll
mov
test
add
leave
ja
insb
pushf
lret
adc
mov
out
rsqrtps
mov
xor
cmp
lcall
repz
popa
stos
push
push
jmp
inc
sbb
push
inc
enter
call
pop
and
xor
enter
lret
push
inc
ret
fs
adc
mov
jns
imul
mov
adc
fcoms
sbb
outsb
add
jg
dec
lahf
add
into
add
mov
imul
outsb
jno
pop
xor
lock
push
xor
jge
xor
mov
cmp
mov
das
add
rolb
or
in
adc
or
ljmp
pop
mov
mov
filds
in
xchg
xor
xchg
pushf
push
iret
lret
push
out
mov
xor
out
inc
xor
outsb
insl
mov
loopne
xor
stos
lods
daa
pop
movsl
sti
inc
mov
push
sbb
mov
jmp
pop
sbb
cmp
add
rcr
mov
mov
dec
push
scas
rclb
push
ret
mov
js
pop
dec
aad
pop
into
loope
mov
jecxz
jmp
xchg
fwait
jo
adc
cmp
mov
mov
inc
mov
inc
daa
inc
inc
mov
fiaddl
and
adc
mov
out
mov
xchg
fldl
iret
xor
inc
lcall
mov
rdtsc
dec
xchg
mov
push
shr
js
cltd
insb
inc
leave
dec
imul
fxch
cli
pop
shll
inc
lret
jno
hlt
mov
inc
mov
fmul
lahf
into
ret
xor
inc
subb
ret
outsb
sub
jae
jl
stc
neg
fiaddl
aam
mov
dec
inc
outsb
push
adc
push
mov
push
jecxz
out
dec
sub
imul
jbe
jnp
cmp
mov
movsb
and
pop
and
mov
mov
arpl
dec
add
pop
push
scas
popa
jmp
xchg
ljmp
cwtl
push
lcall
cmpb
je
cwtl
scas
mov
adc
push
mov
pop
adc
out
push
insb
mov
xchg
adc
mov
dec
das
push
mov
xor
test
les
mov
cmp
jne
je
push
cld
insl
jno
dec
unpcklps
stc
popf
test
mov
sub
test
inc
sub
icebp
jp
sbb
mov
mov
mov
call
insb
into
sub
cmp
push
idivb
lods
call
mov
lret
mov
mov
stc
pop
gs
leave
fsts
lods
dec
popa
pop
jl
sub
jle
inc
cmp
aas
aaa
addr16
movsb
cmp
ja
cmp
fnsave
xchg
js
call
fstps
mov
dec
out
or
adc
lahf
add
enter
inc
imul
sahf
xchg
decl
jle
lods
aas
xchg
cmpl
jmp
addr16
inc
cmc
xchg
inc
xchg
dec
or
push
xor
sub
addr16
mov
imulb
icebp
mov
test
pop
xchg
mov
pop
cmpsl
loopne
xorl
pop
fmull
xor
xchg
pop
mov
aad
hlt
dec
xor
jbe
sbb
xchg
scas
mov
lret
sub
insb
push
pop
pop
std
ret
jo
cli
out
mov
loope
cld
jo
jl
insl
jmp
xor
mov
bound
andl
scas
sbbb
in
std
jmp
cltd
inc
mov
leave
inc
inc
xor
arpl
fstpt
add
in
pop
mov
movsl
iret
shrl
mov
scas
jno
mov
jo
test
loope
inc
jmp
dec
pop
insb
call
dec
out
rol
ret
adc
cmp
movsb
add
fstl
mov
dec
sarl
cmp
push
mov
dec
stos
inc
jne
add
sbb
push
ljmp
popf
sub
movsl
nop
xor
arpl
repz
or
jo
push
lret
sub
inc
inc
xorb
pop
popa
in
or
fsubrs
in
mov
sub
loop
loope
jbe
inc
sbb
mov
inc
nop
mov
or
mov
sti
or
adc
cmpsl
jno
pushf
icebp
mov
inc
pop
test
push
pop
je
or
cli
adc
clc
nop
sub
mov
inc
push
sbb
sub
push
adc
hlt
into
push
add
gs
push
pop
test
mov
mov
sub
icebp
and
pusha
cmc
xlat
inc
loopne
pop
aad
or
loope
lahf
jno
cmp
pusha
add
add
jl
cld
aad
popa
shl
sub
movsl
mov
test
outsl
or
dec
addr16
ss
ljmp
push
lods
push
stc
popa
ret
mov
xchg
imul
or
mov
add
imull
iret
fdivs
mov
mov
inc
lea
jge
icebp
sub
pop
add
aad
inc
mov
add
mov
popf
sub
imul
stos
data16
inc
popf
or
dec
inc
dec
pusha
lcall
sbb
and
jno
pop
inc
mov
cmc
inc
sub
mov
sub
jg
imul
gs
das
lahf
stos
mov
mov
shl
into
rorb
out
sbb
cmc
dec
dec
ljmp
mov
add
add
push
pusha
fstps
inc
in
cmp
int3
add
enter
jl
movsl
dec
jp
pop
pop
pop
mov
insl
shrb
mov
stos
sbb
inc
mov
stos
pop
rcll
mov
push
jne
loop
pop
divl
push
andb
inc
cwtl
out
mov
rcr
lcall
in
rorb
and
pop
shlb
fmuls
mov
jno
xchg
jne
mov
push
std
inc
dec
daa
mov
xor
cli
xlat
adc
not
iret
mov
mov
pusha
flds
or
xlat
xchg
mov
outsb
xchg
movsb
sub
in
sub
loope
out
repnz
out
fwait
add
xchg
pop
int3
push
pop
addr16
bound
or
sbb
in
pop
jne
dec
push
fimull
xlat
jl
int
add
ljmp
mov
and
enter
sub
mov
movsl
loopne
je
stc
pop
dec
mov
shrb
ss
imul
pop
dec
push
test
hlt
sub
in
imul
push
roll
lods
mov
bound
lret
insb
sub
mov
or
sbb
fxch
test
ud0
mov
insl
mov
and
cmpl
insb
jp
sub
cmp
push
nop
and
sub
cld
xchg
pop
jbe
and
jl
dec
xor
dec
imul
andb
test
and
popf
xchg
in
jnp
sbb
daa
rorb
pop
out
mov
lsl
fbld
jmp
out
dec
std
xor
lea
cmpsb
adc
jecxz
imul
jecxz
pop
adc
mov
mov
push
test
adc
xlat
cwtl
or
dec
jno
out
into
mov
or
mov
or
cs
xor
loop
sub
pop
and
jge
scas
test
xor
xchg
xchg
pop
add
cli
popf
addps
xor
sbb
cli
je
adc
arpl
sub
jbe
hlt
jmp
jecxz
iret
lods
jecxz
repz
mov
stos
test
fldl
dec
lahf
lds
mov
and
shlb
cwtl
and
jb
push
scas
push
mov
sbb
nop
call
sub
jecxz
mov
jnp
stos
cwtl
dec
ljmp
jns
pop
xor
inc
lods
push
jmp
inc
in
pop
insb
dec
pop
repnz
mov
or
fnstsw
mov
arpl
mov
cmp
and
push
add
ja
sbb
jge
lcall
cmp
sbb
jle
sub
test
push
lds
clc
cmp
mov
push
mov
cmp
js
cmpb
movsl
sbb
xchg
test
mov
jle
xor
fstpt
aas
jp
repnz
jns
subb
imul
je
outsb
mov
and
ds
in
cmp
push
addb
js
outsb
enter
js
shlb
and
scas
aad
sub
stc
mov
cwtl
mov
call
loopnew
xchg
sub
add
push
add
xchg
mov
ret
outsl
daa
pop
xor
outsl
jecxz
adc
lods
iret
xchg
shll
cmc
outsb
or
mov
pop
loope
movb
sbb
shlb
sub
xchg
inc
fstpt
mov
cmp
andb
sbb
mov
outsb
iret
lock
iret
cmp
insl
out
and
mov
cmpsl
push
and
popa
push
mov
adc
push
aam
lds
ja
cltd
lret
xchg
mov
call
lods
dec
dec
push
pop
inc
pusha
adc
jbe
mov
add
mov
sbb
arpl
sbb
xor
mov
mov
jae
xchg
shll
mov
ret
sub
int3
mov
inc
sub
push
push
les
xchg
lret
xchg
push
cmc
adc
inc
cmpsl
in
mov
pop
add
sub
rclb
in
cmp
and
std
iret
xor
cmc
adc
les
int3
xchg
cli
jp
orl
or
fs
sbb
fldl
stos
adc
iret
shll
pop
inc
or
aas
fs
test
dec
push
jae
jp
rorl
and
add
popf
push
fdivp
xchg
scas
ret
mov
mov
or
mov
xchg
stos
or
inc
add
in
adc
add
fcomps
inc
cld
and
pop
mov
dec
rorl
inc
xchg
jbe
sbb
xchg
in
insb
dec
pop
push
lock
outsb
sbb
add
les
popa
lret
cmpsb
jo
pop
and
cmp
pop
pop
add
add
add
flds
rcrb
mov
fwait
or
pusha
sub
jecxz
fcompl
dec
inc
xchg
or
sahf
in
cmp
idivb
es
in
cmp
in
cmc
jle
push
in
jns
push
out
pop
out
fadds
pop
add
movsl
adc
and
loop
sub
push
xchg
pop
jns
fdivrl
lret
xchg
xchg
xchg
mov
dec
ja
ficoml
jns
sahf
fs
jne
push
adc
movsl
test
mov
xchg
inc
dec
mov
stc
shl
sub
cmp
outsl
jp
push
out
les
xchg
std
sbb
movsb
orb
test
arpl
xlat
ror
jne
or
mov
sub
inc
mov
sub
adc
mov
dec
mov
insb
fstps
cmpsb
ffreep
mov
inc
lcall
shl
rorl
sub
idivb
or
dec
xor
lahf
or
sub
pop
mov
push
sbb
push
and
push
lcall
ja
or
decl
mov
cmp
int3
cltd
dec
clc
mov
jo
out
sbb
xchg
js
ja
pop
fistpl
and
cmp
das
mov
lahf
cli
mov
int
xor
sbb
cmp
aam
mov
hlt
cmp
movsb
pop
mov
push
js
add
mov
aaa
mov
inc
daa
add
mov
pop
fnstsw
pusha
jge
in
mov
into
xlat
cs
btc
frstor
add
adc
and
icebp
pop
mov
punpckhwd
insb
cld
xor
xchg
lods
xchg
arpl
push
cmp
lods
loope
stc
imul
negb
aam
pushf
cmp
and
mov
and
dec
inc
add
into
ljmp
jge
cld
cmpsb
mov
push
cli
adc
xor
sti
lods
push
shll
mov
jl
lcall
pop
mov
aam
cmp
adc
imul
mov
mov
mov
arpl
dec
dec
add
add
mov
ss
aas
lods
fnsave
xchg
cli
cmpb
data16
icebp
aaa
repnz
add
pusha
popf
fcmovnbe
mov
dec
push
jmp
rclb
cli
xchg
loope
sbb
xchg
push
sbb
int3
mov
cltd
mov
roll
sbb
fsub
je
in
sbb
pop
sarl
push
out
mov
xchg
clc
sub
sub
push
jmp
cmp
int
loop
sti
addr16
pop
jg
and
fisubs
add
or
je
push
mov
push
adc
test
stos
loop
jb
sbb
fsubrp
fs
in
xor
xor
add
int
enter
pop
call
xchg
add
mov
js
push
mov
jg
lret
mov
into
jl
add
pop
sar
rcll
ja
add
adc
pop
clc
adc
int
add
mov
mov
dec
jbe
lahf
pop
and
fistl
mov
scas
or
mov
mov
and
mov
outsl
xchg
xchg
cmc
fucomi
inc
stc
cmpsl
xchg
pop
hlt
ds
cwtl
dec
cmpl
mov
jno
jae
add
idivl
outsl
and
push
pop
xchg
mov
adc
cli
jmp
lods
jecxz
arpl
out
adc
sahf
add
xor
xchg
inc
jg
js
orl
fsubrl
gs
cmp
mov
jl
lods
fcoms
pushf
popa
lcall
xchg
and
aas
outsb
mov
out
xchg
lods
sub
nop
adc
mov
jbe
mov
dec
inc
inc
insb
repnz
mov
add
in
std
dec
and
or
pop
sub
ja
xor
psrlq
add
imul
inc
lret
int3
and
leave
addr16
orl
jnp
or
pop
push
sub
or
dec
pop
jl
add
cmpb
lret
push
or
pop
insb
inc
sub
jge
cmp
outsb
cmp
or
add
repnz
out
jbe
xchg
jo
mov
call
cmpsl
and
pop
sub
ds
jb
lahf
pop
in
mov
popa
sahf
sbb
sub
mov
push
or
adc
dec
insl
orb
jl
rcl
mov
mov
sahf
xchg
add
frstor
stc
jmp
pop
and
fsubs
jg
adc
js
movsl
int
enter
jno
out
mov
popa
dec
call
les
ljmp
out
dec
loopne
xchg
mov
sahf
cwtl
insl
pop
hlt
pushf
mov
cmp
or
shl
ja
add
int3
fists
lcall
int3
mov
pop
push
shl
mov
add
xchg
sub
inc
xor
and
and
das
and
jl
into
ds
inc
outsb
fistpll
pop
clc
inc
or
or
cmpsb
enter
dec
sahf
mov
push
lahf
stos
lret
mov
or
push
jo
sti
xor
jae
sbb
jecxz
sbb
push
and
add
jae
inc
or
pop
sarb
mov
xchg
dec
lcall
xrstors
lret
adc
sbb
iret
mov
into
mov
adc
leave
mov
stos
sub
adcb
mov
sbb
push
call
sub
popa
fstps
cmp
mov
roll
pop
xor
inc
shl
js
fidivrs
push
mov
rclb
xor
mov
aad
add
or
mov
test
xchg
jmp
jae
cs
adc
clc
pusha
lret
adc
pop
push
add
lock
loop
pop
sahf
lods
cmpsl
mov
jl
xchg
aam
pop
fs
jle
jp
xchg
fdivs
out
and
outsl
ficoml
xor
repnz
out
sbb
pop
xor
and
push
js
js
push
repz
and
or
add
cmpl
adc
out
out
mov
push
xchg
pushf
test
push
pop
out
push
pop
or
xchg
test
xchg
mov
inc
push
mov
dec
shrl
dec
mov
jnp
fistpl
imul
adc
jecxz
xchg
stc
mov
lahf
popf
adc
pop
and
pop
mov
xor
mov
fildl
nop
loopne
cmpsb
popf
or
testl
stc
in
popa
sbb
xchg
clc
cmp
sub
int
dec
xor
pushl
mov
inc
pop
scas
ljmp
pop
popa
xor
test
adc
lds
pushf
fbld
clc
loopne
mov
es
test
xchg
mov
pop
push
sarb
fmull
fisttpl
loope
pop
xor
add
int
lock
pop
mov
mov
pop
jnp
xchg
push
fimull
int
xor
xchg
jecxz
jnp
imul
sti
ret
inc
je
or
adc
shlb
add
stos
push
out
stos
mov
mov
icebp
mov
push
ljmp
loope
lcall
test
sarb
or
je
inc
or
icebp
imul
mov
outsb
jp
pop
cmp
out
xchg
inc
aam
jmp
xchg
mov
jo
xor
jae
jb
and
rolb
popf
cld
fildll
mov
sbbb
cli
cmp
xchg
jno
das
cmp
or
xor
and
cld
xor
mov
jb
loop
imul
iret
shrb
shrl
test
test
add
xchg
out
sub
push
inc
rcl
jge
inc
fstpl
pop
cmp
int
push
cs
or
jg
adc
in
inc
mov
inc
ror
leave
das
pop
mov
cmp
je
pop
cmp
and
or
sub
aad
dec
sub
scas
fnstcw
aad
fimull
pop
daa
xor
hlt
movsb
pushf
popf
jo
mov
ret
lods
inc
repnz
mov
jne
xchg
gs
xchg
cld
sub
adc
int
add
aad
add
int3
sbb
inc
test
jnp
inc
andb
jnp
pusha
dec
bound
mov
mov
cld
cmp
data16
add
push
xchg
mov
or
aam
add
out
xor
fs
and
out
cmp
xor
aam
ret
in
mov
aas
add
xchg
faddl
mov
nop
xchg
pushl
lock
push
and
and
cs
mov
mov
xchg
xchg
rclb
jp
aam
repnz
add
test
hlt
lds
daa
negl
or
or
inc
bnd
lahf
sbbl
xchg
loop
mov
pop
xchg
in
int3
sub
cltd
mov
pusha
jl
lea
repz
jno
or
lret
imul
fcmovnbe
test
xor
inc
jg
inc
mov
insl
pop
ljmp
inc
inc
adcl
cltd
inc
flds
adc
sbb
inc
push
rcl
xchg
lcall
push
repnz
out
mov
or
sbb
pop
inc
daa
push
jns
rolb
jb
add
in
lcall
sbb
or
ret
cmp
add
adc
or
push
test
xchg
outsl
sbb
mov
xor
mov
jb
lret
cmp
int
fwait
sbbl
data16
bswap
popf
cmp
push
addl
push
rcr
fstps
cmp
inc
pop
test
inc
fnsave
imul
sbb
sub
ret
flds
xor
cmpsl
sub
fisttpl
cmp
xor
fst
nop
xor
mov
filds
jno
push
adc
lea
inc
ret
jl
inc
pop
inc
mov
pop
cmp
adc
mov
xlat
adc
lret
cmp
xor
dec
xchg
add
adc
dec
imul
cmpb
sbb
jl
in
pusha
out
mov
data16
lret
pop
lea
adc
shlb
stos
add
rcll
lock
loop
xchg
sub
or
das
and
push
fs
fstpl
mov
and
loopne
dec
fstpt
pushf
pop
sbb
mov
pop
inc
xor
lock
mov
add
xchg
jle
add
mov
sbb
push
es
xor
xchg
aad
decb
jne
aaa
lea
fbstp
jns
mov
inc
xor
cmp
cmp
jo
push
shll
movsb
test
notl
pop
dec
sub
push
cwtl
outsl
jl
psrld
push
push
ljmp
repz
push
cwtl
lret
movsb
adc
xchg
or
mov
mov
push
dec
sub
lret
pop
jle
lahf
xchg
daa
jl
lods
cmp
dec
repz
out
dec
out
loope
cmp
cmp
icebp
cmc
scas
cmpsl
lahf
pop
icebp
decb
cltd
movsl
es
xchg
jl
ss
fsubrl
pop
aaa
in
in
shlb
cmp
jmp
push
mov
and
outsl
lcall
movsb
fs
fwait
in
push
lahf
adc
cli
cmc
cs
ja
subb
into
popa
out
lret
or
into
jmp
xchg
sbb
push
xor
lahf
mov
loope
pusha
push
sbb
xchg
cmp
int
clc
nop
pop
aad
popf
fldl2t
aaa
inc
sub
out
cmp
mov
sti
jns
movnti
or
clc
fsubs
xchg
sbb
pop
cmp
jl
addr16
jle
jp
xor
or
mov
xchg
push
push
adc
insb
das
adc
cs
sbb
cltd
inc
popa
mov
popa
xchg
cld
cltd
push
cwtl
mov
xchg
loop
punpcklbw
mov
out
cmp
add
mov
pop
cmc
pusha
repz
popf
popa
cmp
std
mov
std
push
nop
sti
mov
clc
cs
jecxz
fisubrs
les
add
ja
and
ljmp
mov
insb
push
pop
test
orb
sub
sbb
in
jno
pop
or
test
pop
icebp
lock
jp
sbb
cmp
push
test
sbb
aad
es
dec
scas
sub
xchg
xchg
lods
andb
adc
xchg
rcr
pop
iret
xchg
movsb
adc
sahf
inc
sbb
repnz
movsb
mov
adc
inc
ret
scas
mov
rorb
push
fsub
pushl
out
sub
cld
imul
icebp
push
and
popa
sbb
inc
bnd
xchg
shlb
adc
add
mov
inc
adc
sbb
xchg
sbb
xchg
js
cmp
xchg
out
add
and
js
jle
dec
dec
sbbb
inc
pop
xchg
mov
loopne
sti
and
shl
or
or
pop
loope
sbb
push
jne
push
in
adc
in
sbb
lahf
xor
adc
gs
rolb
push
push
fldl
adc
mov
nop
add
sub
ficomps
out
mov
kmovd
rclb
cmpsb
sub
imul
mov
push
ds
sbb
sbb
add
pop
daa
orl
jnp
lret
lods
add
shr
outsl
or
mov
inc
popa
in
mov
loopne
fcomps
dec
ret
dec
in
orb
mov
loope
xchg
mov
inc
push
addr16
stos
dec
inc
adc
jg
mov
clc
pop
je
inc
fsubl
imul
pop
or
xchg
jle
stos
xchg
sarl
and
bound
cli
les
pop
mov
mov
aas
imul
ss
cmpsl
ret
aam
cmp
cmp
jp
jge
or
sbb
inc
mov
out
inc
pop
push
arpl
sub
lahf
loop
or
adc
addb
bswap
scas
push
mov
pop
mov
inc
dec
fdiv
test
mov
xchg
sub
jmp
fisubl
cwtl
mov
jg
mov
adc
ficompl
dec
pop
push
insb
aaa
aad
jne
mov
data16
push
jle
cwtl
xchg
push
add
stc
stc
inc
xchg
sbb
nop
adc
stos
repz
jno
rcrb
int3
lock
mov
sahf
loope
pushf
into
lods
fs
cmpsl
stos
sub
pop
call
ds
mov
push
subl
pop
sbb
cmpsl
pop
rclb
test
pushf
jno
aas
cmp
cs
mov
cmp
mov
xor
xchg
in
movsb
sarb
dec
sbb
push
cmc
xor
add
xor
adc
shl
push
jle
mov
jge
mov
xchg
cmp
add
fsubrl
push
nop
sahf
sub
jecxz
int
mov
xchg
jo
dec
push
inc
jge
mov
pusha
cmp
sub
cltd
add
jg
orb
fs
add
sub
in
add
rolb
test
into
ret
and
jns
bound
or
insb
or
dec
insb
out
add
push
and
sbb
imul
cwtl
rclb
sbb
fists
cld
lahf
or
add
adc
testb
adc
cwtl
dec
pop
ja
sbb
push
push
pop
les
adc
shrb
jb
out
lods
or
jo
jl
out
iret
mull
stc
in
dec
adc
test
sub
in
popf
push
mov
sbb
roll
add
cld
fwait
push
movsl
cmp
mov
mov
add
lock
and
ret
mov
inc
cmp
fs
add
pushf
adc
mov
xchg
pop
fistpll
lods
jns
lea
dec
xor
aaa
push
out
mov
mov
sbb
mov
dec
in
push
xor
aaa
ds
jg
sub
out
pop
inc
test
mov
inc
repz
repz
push
fdivr
inc
aad
pop
out
mov
push
sbbb
repz
mov
stos
adc
xlat
mov
test
or
mov
mov
daa
ss
addr16
push
pop
outsl
push
inc
pop
fisubrl
lret
lods
mov
xchg
jmp
pop
push
pop
cmpsl
popf
cld
jmp
dec
dec
and
xchg
js
push
mov
mov
aam
push
movsb
push
jecxz
dec
dec
jbe
mov
in
movsb
pop
push
and
hlt
addr16
rclb
ror
popf
les
jbe
push
pop
dec
mov
popf
in
pusha
jle
and
iret
rorb
xchg
imul
lods
pop
test
cmpsb
jge
subb
xchg
pop
sub
outsb
xor
test
dec
xchg
inc
or
mov
sub
jle
xchg
test
pop
mov
lock
jbe
mov
xchg
mov
js
lods
fsts
pop
aam
stc
fs
push
sbb
push
mov
adc
jne
pop
faddp
jecxz
mov
adc
jecxz
aaa
jge
mov
xchg
and
scas
adc
push
inc
insb
sahf
add
xor
jg
jmp
scas
or
cmp
pop
cmp
outsl
daa
or
pop
xchg
mov
mov
mov
pop
add
adc
int3
or
fiaddl
fcomps
inc
lret
sbb
mov
stos
add
push
bound
sub
test
insb
out
faddl
scas
stc
push
fisubs
sbb
rorl
sbb
sarb
dec
out
addl
add
and
and
cli
and
out
out
cmp
pop
cwtl
add
jnp
pop
scas
dec
lock
jns
repz
xchg
jne
roll
fidivrs
and
mov
push
lea
repnz
fwait
stos
push
out
jae
adc
add
jmp
in
xor
xor
movsb
fbstp
data16
sbb
or
lret
inc
or
inc
decl
xchg
mov
in
jnp
xor
jbe
inc
stos
push
orl
std
lods
in
jne
cmp
lock
into
dec
sbb
mov
mov
or
outsb
xor
lret
inc
xor
mov
ljmp
addr16
cmp
xchg
and
jmp
mov
fs
mov
and
std
insl
faddp
jecxz
aaa
sbb
add
or
rolb
testl
aam
xchg
sbb
flds
rclb
adc
pusha
popa
mov
and
imul
xor
and
mov
sbb
mov
jg
jl
divps
cmp
mov
and
std
mov
addr16
mov
dec
cs
shlb
ljmp
xchg
inc
jae
loope
rcrl
lds
mov
push
into
pusha
add
mov
mov
pop
aad
dec
nop
pop
aad
lock
mov
int3
mov
cmp
sbb
unpckhps
fwait
cwtl
andb
jp
rcll
test
je
decb
jmp
ffree
dec
inc
daa
pop
jb
push
loop
xlat
insb
sbb
sub
stc
aad
fwait
xchg
ficoms
and
cmp
push
imul
test
mov
gs
or
cmpxchg
insb
mov
insb
push
testl
pop
sub
mov
adc
pop
jnp
pushf
out
out
aas
add
int3
or
sub
lds
jp
ss
cs
mov
dec
outsl
loope
ss
scas
push
cld
pop
mov
imul
insb
push
popa
mov
outsb
cli
dec
loopne
adc
loope
jmp
ficompl
mov
xchg
xor
nop
je
movsl
mov
loopne
mov
xor
xchg
and
sub
sbb
shl
add
mov
imull
mov
out
and
jmp
shr
sbb
dec
mov
rcr
out
in
push
test
and
xchg
mulb
fsubs
test
inc
mov
jnp
adc
aam
into
xor
cld
mov
js
cmp
cltd
int3
mov
sub
addl
shlb
scas
int
mov
pop
cmp
ret
jns
cmp
fistps
jecxz
dec
add
in
popa
lods
test
rclb
fsubl
jge
mov
adc
push
ret
outsb
push
movsl
icebp
and
aam
xlat
inc
push
ds
xor
cwtl
test
xchg
rcrb
rorb
mov
je
or
stos
adc
lret
rolb
add
cmpsb
push
cld
sbb
fiadds
cltd
add
mov
aad
mov
mov
jo
addr16
das
movsl
repz
and
sbb
pop
mov
lcall
scas
mov
cmp
rcr
into
mov
adc
push
pop
popl
and
jmp
clc
ja
or
out
arpl
rorb
adc
cmpsb
cli
rcrb
lods
inc
adc
movsb
jns
xorl
iret
jns
aas
mov
inc
mov
cmc
jne
cmp
jno
and
movsl
cmp
ss
out
or
xor
dec
mov
aam
mov
xchg
sbb
mov
rorb
xchg
loop
xlat
fs
lret
mov
add
push
push
sbb
shlb
mov
scas
fisubs
jmp
mov
ss
fsubrs
push
dec
cwtl
les
in
cmp
inc
dec
lock
lret
jno
int
sti
dec
nop
add
mov
sarl
movsb
pop
ret
sti
inc
mov
insl
decl
scas
dec
sub
enter
test
add
or
daa
notb
lds
int3
or
ja
dec
push
movl
pop
mov
je
nop
mov
pusha
orb
jns
rol
in
and
popf
leave
std
xor
inc
imul
fcomi
inc
mov
push
cmpb
lea
xlat
mov
lret
test
add
xchg
or
push
inc
ss
adc
inc
jbe
sbb
sub
cwtl
push
lret
inc
pop
pop
mov
cmp
stc
dec
sbb
aad
inc
decb
fistl
mov
cmp
mov
sbb
add
popf
subb
add
cmp
pop
int
xchg
int3
test
into
or
idivl
and
xor
mov
roll
push
adc
and
loope
dec
or
xchg
lods
dec
daa
xchg
jecxz
inc
lcall
sub
inc
jb
jne
fiaddl
insl
mov
adc
bndldx
push
pop
fistpl
or
jmp
push
pop
icebp
xlat
push
ljmp
and
sub
xor
imul
ds
mov
jns
or
outsl
fistps
dec
lods
imul
int3
popf
pushf
xor
cmpsb
repnz
and
jno,pt
iret
in
ret
mov
sbb
scas
and
jno
movsl
call
adc
inc
hlt
test
ret
cmove
iret
js
loope
adc
xchg
xorl
cmc
sub
pop
addl
cmpsb
ficompl
daa
and
mov
out
addr16
cltd
pop
out
or
ret
call
mov
mov
jg
int
in
jo
rcl
pop
push
das
xor
inc
adc
sbb
dec
xchg
fs
fcomp
push
mov
mov
or
mov
leave
mov
ja
and
rclb
dec
xchg
xor
loope
mov
lea
ja
pop
ret
dec
lsl
outsb
mov
fs
push
dec
repz
test
enter
out
ret
dec
ja
lcall
dec
mov
popa
push
adcl
pop
fs
adc
incl
mov
xlat
les
push
xchg
cmp
cld
mov
dec
imul
lahf
aam
rclb
push
pop
enter
fs
rorb
jns
push
pusha
jno
fs
mov
adcb
ret
xchg
lcall
ret
adc
mov
cmovs
ret
fwait
lea
push
push
cmpsb
loop
jnp
out
cmp
mov
mov
push
inc
adc
test
jne
and
mov
orb
ja
nop
dec
adc
mov
xchg
sbb
sbb
int3
pop
cwtl
test
push
inc
imul
popa
mov
mov
xchg
inc
fidivl
cli
push
outsl
xchg
stos
mulb
or
xchg
fnstenv
cmp
lock
mov
or
xor
jg
pop
pop
bound
cltd
mov
repnz
test
fidivrs
dec
lea
aaa
mov
ljmp
dec
xor
or
lahf
xlat
sbb
in
pop
push
rcrl
aas
dec
daa
jp
in
in
cwtl
imul
mov
sub
pop
push
or
fwait
clc
or
mov
jecxz
mov
or
xchg
jnp
fisubrs
scas
in
sub
cmp
icebp
cmp
fistpll
sbb
cmp
push
push
push
mov
xor
adc
je
dec
inc
mov
mov
add
lret
in
mov
loop
cld
sar
testl
sub
js
out
mov
mov
arpl
jmp
pop
nop
arpl
sbb
pop
stc
mov
pop
mov
sbb
shl
pop
jae
mov
mov
sub
fisttpll
cli
pop
ror
aaa
mov
scas
xor
jmp
add
lock
imul
icebp
cmc
sbb
jo
pusha
inc
inc
rcll
lds
push
xorb
push
testl
sbb
dec
adc
mov
cmp
cwtl
and
mov
movl
movsl
sub
insl
sbbb
out
daa
push
fcmovnb
push
ss
dec
bound
test
stc
inc
lret
int
inc
jmp
lea
sbb
lds
inc
out
push
mov
cmpsl
sbb
xchg
ja
ret
inc
add
mov
decl
lahf
mov
notb
sahf
adc
movsl
ss
xchg
dec
xchg
test
in
xchg
push
pop
or
sub
mov
and
clc
sub
dec
push
lock
mov
movsl
mov
pop
sub
sbb
les
pop
lcall
fs
jecxz
cmpsb
add
mov
xchg
mov
jp
scas
lock
dec
and
adc
lods
cwtl
popa
imul
lcall
sub
cmpsb
adc
xchg
shrl
or
inc
jns
cwtl
scas
lret
inc
dec
xchg
cmp
inc
pop
lods
sub
and
enter
sbbl
int
push
enter
ds
mov
ror
aam
movsl
insb
sub
xchg
daa
lahf
sbb
inc
add
sub
int3
shlb
rclb
mov
jl
ljmp
cmc
fldl
sbb
push
negb
clc
xor
dec
les
outsb
pop
xchg
jmp
arpl
lahf
fldcw
fildll
push
js
jnp
jo
xor
mov
sbb
gs
in
shr
xchg
sbb
jmp
cmp
add
loopne
xor
and
jmp
pop
cmp
pushf
in
push
lret
or
fidivrs
insb
scas
pop
jecxz
xor
fdivrs
dec
cmpsl
pop
mov
pop
add
les
and
int3
imulb
add
jne
fsubrl
sahf
xor
adc
lods
or
out
lock
cmpsb
cld
jecxz
xor
xchg
das
mov
push
mov
cmp
in
mov
sub
sub
jae
lret
ret
xor
push
mov
out
fdivrl
out
add
and
rolb
xcrypt-ctr
cmpsl
pop
jne
pop
add
push
test
sbb
std
add
xchg
scas
sbbl
hlt
and
jp
aad
dec
add
into
jecxz
mov
popf
inc
inc
push
pusha
sbb
and
in
push
or
or
add
pop
add
iret
or
inc
popf
adcb
xlat
ss
mov
daa
mov
jnp
loope
sbb
frstor
inc
aas
scas
clc
loopne
inc
jns
loopne
das
lods
sbb
and
mov
mov
xor
mov
adc
pop
repz
negb
popf
push
mov
push
xor
dec
cmpsb
std
push
into
pop
repz
call
mov
incl
into
push
cmp
push
fildll
or
pop
pop
dec
movsl
js
sbb
pusha
clc
adc
mov
lea
fdivs
test
les
sub
mov
dec
cmpsb
es
pusha
bound
mov
in
xchg
jo
arpl
xchg
sub
mov
imul
out
outsb
jp
movsb
adc
or
inc
ss
xor
dec
imul
loopne
pop
fs
dec
xor
mov
inc
inc
aas
push
xor
inc
and
mov
lea
in
mov
adc
or
aam
into
inc
movsb
loop
icebp
out
loope
ja
sahf
rorb
sarl
hlt
sub
jmp
mov
mov
in
lret
push
imul
inc
orl
adcl
repz
pop
xor
stos
hlt
mov
xorl
and
arpl
xor
out
pop
bound
cmc
cmp
cmp
pusha
sub
sbb
dec
mov
xor
in
jl
mov
xor
cmp
lock
and
mov
insl
out
mov
sub
xchg
and
mov
push
pop
push
mov
dec
jb
int
out
inc
adc
jb
aas
cmp
pop
fwait
add
inc
push
lods
loope
mov
lods
popf
rcrl
adc
cmp
adc
je
shlb
stos
jo
fs
add
xchg
xchg
cli
into
and
imull
ret
or
adc
in
xchg
sub
js
xchg
pop
push
mov
mov
cmp
jns
lods
mov
lds
in
mov
and
ss
push
shl
mov
je
cs
popf
push
xchg
pop
aam
fwait
xchg
push
inc
or
inc
rcrb
xchg
sbb
sarb
pushf
jae
add
icebp
inc
lock
pop
adc
dec
nop
jno
pusha
adc
mov
jp
pushf
ja
cmp
imul
das
cmp
aaa
sbb
cmp
jo
dec
je
xchg
mov
out
es
pop
xchg
jae
push
push
fadds
pop
or
inc
leave
lods
sub
mov
jns
sbb
repz
fdivrl
mov
leave
icebp
in
adc
imul
stos
clc
ffreep
xor
daa
mov
test
lods
lea
push
loopne
dec
push
pop
or
push
or
adcb
pop
xorb
rcll
sub
scas
clc
fwait
jl
adc
or
arpl
add
xor
into
push
mov
repnz
repnz
outsl
pop
dec
fistpl
mov
or
lret
jmp
arpl
adc
fldt
cmp
mov
in
out
push
xchg
jno
iret
cs
push
push
xor
outsb
cli
sub
scas
xor
xor
test
pop
test
mull
pop
scas
xchg
arpl
ds
or
xor
fadds
mov
gs
jb
sub
push
mov
fcmovb
push
mov
mov
mov
mov
daa
cmpsb
cmp
pop
in
scas
mov
push
dec
mov
jmp
mov
mov
stos
clc
sti
gs
or
mov
xchg
push
test
test
mov
imul
leave
ss
es
fbld
imulb
stc
jge
dec
out
shll
xchg
mov
mov
push
inc
das
ja
lods
add
jmp
and
mov
out
or
cmp
lret
mov
lds
scas
xor
xchg
dec
jae
insl
mov
pushf
dec
xchg
fisubrs
cmp
popf
pop
outsb
shl
cmpb
push
xor
mov
stos
mov
sbb
sbb
and
out
sbb
sub
cwtl
sub
xor
inc
cmp
in
vminps
xchg
and
mov
lds
or
in
insl
mov
adc
pop
sbbl
ljmp
sbb
test
mov
inc
add
sub
scas
mov
or
stos
mov
imul
lods
and
out
pop
pushf
xchg
xor
push
lds
pop
loop
mov
or
mov
test
nop
jmp
mov
sti
insl
gs
lds
cld
mov
int
sub
pop
inc
push
xchg
and
lods
es
push
lds
cmp
test
add
mov
scas
sbb
dec
mov
daa
push
mov
pop
gs
inc
inc
and
cmp
adc
and
movsl
adc
jns
popa
rorb
test
add
pop
mov
and
adc
jg
push
mov
lret
fs
fs
test
adc
push
add
sbb
imul
repnz
push
push
and
push
je
adc
cmp
or
les
clc
adc
and
mov
mov
sahf
pop
dec
push
adc
push
xchg
lahf
push
pop
cmp
mov
and
shrl
daa
mov
jl
jp
in
mov
les
mov
loope
push
jp
pop
cmp
mov
cs
aad
jge
movsb
enter
cmc
adc
push
dec
xchg
pop
in
xor
and
loope
xor
jne
and
lret
lock
mov
adc
outsb
pop
pop
rcrb
push
add
cmp
cmc
das
fcoms
clc
push
imul
lcall
adc
cmp
cmp
and
jb
jge
fbld
lock
sub
push
pop
adc
push
aaa
mov
sub
jmp
mov
rcrb
jne
lsl
setg
or
call
mov
mov
iret
outsl
and
lahf
leave
shr
pop
adcl
push
push
sbb
sarl
or
fs
mov
int
jb
lret
fs
adc
repnz
fsubl
add
lods
adcb
pop
mov
cli
mov
rcr
cltd
ss
dec
fbstp
pop
call
and
out
into
inc
ja
sbb
movb
ja
push
mov
pop
repz
mov
mov
cmpb
pop
mov
cmc
out
mov
push
xor
mov
out
lcall
rcrl
dec
gs
loope
add
mov
xchg
xlat
mov
mov
cmp
addr16
or
cmp
les
inc
je
adcl
daa
push
ljmp
or
inc
sbb
xchg
xor
ja
pop
shlb
xor
aad
inc
pop
adc
cli
add
outsl
cltd
add
mov
cltd
cmc
fcoml
ss
cmp
loop
frstor
das
test
cmp
sti
mov
cltd
push
rolb
test
pop
xchg
stos
adc
sbb
imul
pop
and
sub
mov
mov
mov
adc
push
mov
mov
dec
cmp
aam
xchg
lahf
in
fdivs
mov
rcl
push
shll
jae
jae
fidivs
addr16
ror
sub
adc
mov
scas
aas
enter
arpl
push
clc
mov
shl
mov
mov
int
pop
pop
inc
call
outsl
and
enter
repnz
cmpsb
cmp
cmp
or
mov
mov
es
loopne
dec
mov
int3
lret
ret
jbe
sti
mov
mov
in
pop
mov
pushf
cltd
sarl
jge
fs
lret
mov
ljmp
sbb
cmp
mov
iret
pop
jbe
pop
test
push
ret
addr16
pop
add
stc
fwait
int
xchg
aam
call
in
and
testl
hlt
xchg
into
sbb
dec
cmp
adc
mov
fbld
jne
sub
adc
fwait
daa
dec
inc
inc
add
scas
push
stos
sbb
clc
aad
pop
or
ret
cmc
lret
jmp
push
pop
jecxz
xchg
arpl
cld
test
pop
mov
pop
ss
xchg
pop
loope
add
pop
sahf
jae
clc
mov
xlat
mov
xchg
or
xor
pop
inc
jno
jmp
addr16
lret
mov
ja
dec
jl
insb
add
lahf
sub
shrb
incb
xchg
iret
into
cmpsl
pop
or
push
std
cwtl
call
sbb
mov
pop
les
mov
mov
leave
rorl
sub
rcrb
out
inc
mov
jo
lcall
mov
aaa
push
stos
imul
lahf
test
ja
adcl
hlt
jl
pop
out
push
out
adcb
jns
mov
mov
dec
sub
dec
inc
cmp
sti
or
orb
and
lcall
cmpsb
sub
or
adc
sub
mov
in
fnstenv
mov
bound
inc
and
cld
js
dec
adc
inc
in
and
lret
aad
mov
inc
pop
mov
int3
pop
cmc
ss
arpl
lahf
mov
ror
lahf
js
arpl
pop
jg
ljmp
xchg
addr16
daa
push
jecxz
mov
stc
inc
or
cmp
lahf
sbb
push
adc
cmp
adcl
out
mov
sbb
mov
hlt
sub
sti
imull
fs
push
cmp
fisttpll
push
mov
lods
stc
jmp
je
mov
jmp
lock
iret
fnstsw
imul
xor
dec
ljmp
icebp
xchg
adc
dec
int
adc
out
sub
vpsubb
pop
dec
sahf
push
push
rclb
add
jecxz
xchg
pop
movsl
shll
jmp
jae
jae
sub
pop
xchg
test
jae
shll
movzbl
lret
pop
repz
sysenter
cltd
jge
fstpt
add
bound
cmp
pop
sub
cmpsl
orb
out
cmp
xor
into
aad
mov
enter
cmp
dec
out
pop
jp
arpl
jp
or
loopne
cltd
adcb
outsb
add
xor
sahf
rclb
out
insl
push
icebp
stos
gs
mov
lret
cld
mov
dec
jmp
xchg
out
out
adc
out
jne
adc
add
xchg
cld
push
adc
test
popa
add
xchg
js
xchg
fcomps
push
push
adcl
xor
out
jl
pop
sbb
sbb
mov
fsubrs
mov
pop
inc
xor
or
inc
cmp
jmp
je
sbb
jl
xchg
lret
xor
cmc
adcl
xor
fstl
fwait
inc
cmc
aam
adc
and
fimuls
cmp
xchg
jbe
add
icebp
pop
sub
add
xlat
adcb
mov
cmp
push
cmp
pop
pop
int3
pop
jp
xchg
testl
mov
push
adc
pushf
adc
sahf
pop
adc
mov
push
nop
in
stc
mov
call
add
fimull
mov
inc
insl
shrb
mov
pop
and
or
test
les
jae
sbb
xor
mov
gs
dec
sub
addr16
movsb
push
pop
fisttpl
jbe
xor
enter
fdivrs
roll
repz
mov
inc
or
es
aad
mov
sbb
jns
outsb
push
jle
and
mov
jmp
adc
aaa
scas
adc
mov
scas
addr16
in
aam
pop
gs
jecxz
clc
push
lret
push
test
adc
xchg
repz
stos
loopne
mov
pop
push
mov
ds
jno
into
out
std
clc
negl
or
icebp
inc
sbb
cs
dec
xchg
je
outsl
fwait
mov
xor
adc
xchg
outsb
and
or
scas
ss
cwtl
xlat
mov
lcall
into
jne
lret
imulb
or
mov
lea
dec
gs
aad
in
aam
jecxz
push
movsl
dec
in
int
out
loope
lahf
pop
adc
je
sub
jo
inc
aas
in
sub
pop
push
mov
and
push
in
mov
xlat
sti
xor
sbb
cmc
adc
add
xchg
ss
lcall
mov
jbe
sub
popa
mov
adc
sub
add
dec
or
sub
cmpl
pop
add
push
in
arpl
das
inc
pop
mov
dec
adcl
sbb
lock
out
push
mov
cmp
mov
fistl
out
test
movsl
sbb
jg
outsl
push
dec
and
imul
ss
fwait
inc
cwtl
das
xor
jo
rorb
mov
sbbb
fisubrl
repnz
xchg
jae
mov
cmpsb
xor
ja
cmp
je
sarl
pop
out
int
or
dec
adc
clc
dec
xchg
test
fidivs
int3
popf
jle
test
pop
mov
mov
xor
xchg
daa
lods
sub
popf
fldenv
je
and
out
loop
icebp
sbb
lret
push
jns
das
inc
sub
push
jbe
cs
subb
inc
es
inc
xchg
or
push
leave
pop
dec
test
gs
xchg
insl
jge
adc
outsl
push
js
mov
scas
ss
ret
ss
stc
call
insl
push
mov
popf
xchg
popf
push
cmp
or
dec
mov
pop
or
cmp
push
subw
es
das
dec
jno
jmp
jmp
mov
jl
pusha
imul
jmp
jg
stc
xor
inc
xor
mov
inc
push
and
fwait
mov
pop
xor
icebp
and
insb
bnd
popw
push
mov
pop
lea
add
jp
mov
clc
inc
xor
add
inc
add
xchg
jae
ret
sbb
out
cmpsb
into
ljmp
pop
cmpsl
sub
dec
inc
cmpsb
das
sahf
mov
mov
outsb
shrb
jo
jnp,pt
insl
loop
mov
clc
cs
jg
lods
add
movsb
add
pop
push
pop
jmp
push
inc
sub
jg
jmp
mov
mov
cwtl
jns
stos
inc
or
sbb
inc
popf
inc
or
loop
icebp
dec
in
das
push
inc
sub
fwait
pop
lock
sbb
and
xlat
and
jae
les
call
push
rcll
or
sarb
push
ss
sub
xchg
jp
xchg
jae
ss
mov
cmp
dec
repz
push
jp
rcll
jle
mov
es
insb
dec
fildll
clc
jbe
fcoms
sbb
xchg
or
push
aas
push
xchg
mov
das
inc
mov
das
roll
cltd
push
pop
and
pop
xchg
lods
dec
and
mov
rolb
dec
mov
xchg
nop
inc
ja
adc
jle
stos
incb
add
add
and
xchg
hlt
into
rcrb
into
jo
popf
ret
pop
pop
out
xchg
or
fdivl
mov
cltd
dec
test
mov
xchg
int3
pop
fwait
or
fistpll
jmp
pop
pop
stc
and
daa
scas
outsl
scas
adc
ret
cli
dec
push
xchg
mov
daa
mov
adc
mov
mov
xchg
mov
cmp
test
jno
les
aas
sahf
mov
scas
ja
xor
mov
mov
frstor
xchg
addr16
cmp
sub
jge
add
fwait
clc
pop
and
out
push
insb
mov
push
sub
and
lock
sbb
pop
out
sub
pop
call
xor
pop
js
cltd
push
lahf
cmpsl
test
ret
pop
push
mov
stos
jno
jbe
shll
sbb
aas
jl
lods
popf
lods
out
dec
add
mov
mov
mov
xchg
mov
insl
fwait
cmpl
out
fdivrs
insl
dec
or
int3
cwtl
test
sub
pop
std
jne
push
jl
or
ficomps
jns
cmc
jo
xor
addl
add
lods
xor
cmp
lock
mov
adc
mov
push
es
add
mov
xchg
jmp
adc
test
jle
mov
arpl
xorl
or
mov
imul
or
jnp
jbe
test
cmpsl
ds
jp
ret
adc
push
mov
mov
cwtl
divb
fdivrs
and
bound
fcmovbe
fidivl
inc
aas
add
xchg
lock
push
cmp
into
add
add
xorb
dec
and
arpl
popa
bound
bound
and
sub
int
repnz
and
lahf
insl
mov
add
hlt
ja
movsl
dec
mov
pop
fsubr
arpl
into
stc
lods
jmp
adc
xchg
dec
push
xchg
dec
repnz
stos
lock
ss
nop
int
fbld
dec
iret
adc
mov
iret
push
push
inc
mov
cli
pushf
imull
lahf
icebp
jbe
mov
sbb
sub
imulb
xchg
mov
test
adcl
cli
fdivrl
xchg
xor
scas
iret
or
pop
mov
loop
sub
lret
push
sbb
sub
leave
fwait
mov
data16
sub
pop
jae
jb
push
outsb
aaa
fstp
mov
dec
mov
movsb
aad
cmc
sbb
inc
sbb
mov
xlat
adc
arpl
dec
sbb
rcl
push
inc
pushf
jge
stos
or
in
mov
xchg
rcrl
add
stos
js
and
adc
divb
aam
out
xchg
add
cmp
inc
xchg
inc
pop
sti
inc
xchg
pop
cwtl
xchg
out
cmp
ljmp
add
out
push
dec
inc
adc
jb
xor
leave
enter
ret
in
andl
lds
mov
mov
push
sbb
or
rorb
jl
mov
or
pop
xchg
js
vmovaps
dec
ret
enter
push
inc
adc
lahf
push
mov
loop
jmp
pop
or
pushf
jo
pop
push
and
scas
loop
jl
cwtl
mov
mov
aaa
stos
fsts
jge
cmp
loope
loope
and
adc
pop
into
mov
xchg
popa
or
cmc
adc
int3
sbb
pop
mov
cwtl
adc
lahf
daa
xchg
enter
arpl
in
mov
pop
in
out
mov
sub
push
lretw
rolb
or
xchg
cli
lret
aaa
cmp
mov
sub
es
out
data16
add
jp
test
ljmp
xor
test
ds
pop
dec
leave
sub
cmpsl
shr
xchg
dec
cmpsl
jge
jno
std
ja
xor
pusha
jge
icebp
push
int3
inc
cmpsb
out
mov
sub
and
pop
lea
icebp
sub
sbb
daa
shrl
dec
pop
gs
pop
dec
das
aas
or
iret
xor
sbb
push
xor
repnz
lahf
xor
jge
sub
stos
mov
pusha
xchg
dec
mov
inc
sbb
popa
rorl
lock
arpl
jbe
daa
or
dec
cmp
and
clc
in
leave
mov
rolb
das
fsubl
mov
sti
cmp
pushf
dec
mov
push
shlb
xchg
or
push
ss
xchg
aam
ret
push
cmp
sbb
ror
scas
ror
jp
dec
pop
fisttpl
test
or
and
fnstsw
aam
push
imul
add
aaa
in
fbstp
cmpsb
iret
pop
das
jmp
addb
push
inc
jmp
dec
loope
lds
adc
es
jo
shll
inc
mov
popf
jb
push
stos
lods
les
sbb
aam
scas
or
mov
fisttpl
es
pop
int
lds
imul
cmp
test
dec
sbb
push
dec
cmp
movsl
cmpl
enter
sbb
and
sub
mov
xlat
adc
jns
fiadds
push
mov
mov
xor
outsb
fisubrs
sbb
out
mov
arpl
shlb
les
aam
mov
lcall
cld
lock
add
mov
int
jmp
jns
sub
mov
cmpsb
push
pmulhuw
sbbb
out
xchg
lcall
inc
imul
sbb
pop
inc
mov
mov
sahf
sub
scas
test
pop
insb
hlt
mov
icebp
or
add
add
push
inc
mov
bound
pop
xchg
jle
fmuls
mov
das
xchg
sub
lret
add
movsl
in
aas
insb
imull
das
jmp
lret
inc
jle
fcmovb
dec
cmp
mov
ja
cs
jl
and
pop
clc
stos
arpl
scas
adc
dec
rorl
clc
inc
xor
mov
js
adc
sahf
xor
mov
xchg
push
mov
aam
xchg
xchg
jnp
inc
cli
sub
lods
sub
dec
mov
stos
pop
xchg
xlat
sbb
aaa
inc
push
cmpsb
and
lds
jmp
enter
fdiv
mov
rcll
mov
imul
mov
inc
mov
cli
jbe
outsb
add
push
mov
sbb
fidivs
push
cmp
sub
mov
dec
test
aas
jecxz
lcall
iret
xchg
mov
and
mov
fs
push
data16
scas
mov
adc
loop
adc
das
or
ljmp
mov
gs
in
das
cwtl
sbb
inc
cmp
test
inc
jp
mov
mov
ds
je
outsl
jmp
subl
roll
mov
int
call
or
je
sub
test
sbb
mov
stos
in
add
lcall
pop
sub
cli
push
lods
movsl
sub
pop
add
in
mov
mov
mov
mov
mov
ret
lds
into
and
pop
inc
repz
data16
scas
and
xor
shr
leave
andb
cmp
pop
adcb
iret
out
repz
fdivl
movb
cld
das
and
sahf
mov
mov
sbb
jl
push
ja
xor
dec
cmc
mov
fucomip
inc
mov
fcoms
pop
jo
jmp
xor
testb
sarl
inc
jmp
and
sbb
sahf
repnz
mov
inc
popa
cwtl
xchg
push
jno
xchg
mov
outsl
cmp
xchg
incb
cmp
push
lcall
jmp
rcrl
pop
and
fdivrs
and
test
cmc
pop
dec
nop
jmp
lahf
sub
jge
xlat
mov
gs
sub
dec
mov
and
gs
stos
divl
loopne
mov
jp
pop
in
inc
mov
insl
pop
lods
xchg
shl
out
pop
mov
xchg
in
ret
je
jnp
rcrb
les
push
or
sub
nopl
loop
scas
in
ret
mov
movsl
jb
mov
pop
adc
iret
into
into
stos
mov
mov
mov
adc
dec
and
mov
jle
lods
pop
mov
mov
sub
mov
arpl
inc
sbb
loop,pt
cmp
adc
out
sbb
repnz
insb
popa
or
jecxz
xor
add
jne
ljmp
shl
ja
icebp
xchg
sbb
mov
mov
mov
roll
and
xor
ret
and
mov
adc
sub
shl
sub
lahf
pop
pop
hlt
pmuludq
xor
ss
jmp
xchg
add
xlat
dec
cmc
stos
pop
popf
pushf
mov
in
cs
mov
pop
xchg
sbbb
ds
mov
pop
add
sub
stc
cmp
nop
ja
xchg
cmp
pop
popf
and
inc
and
pop
lahf
insb
dec
out
int3
fidivrs
xor
sahf
mov
arpl
and
mov
ljmp
xchg
aaa
popa
rorl
insb
jns
cmp
flds
loop
pop
movb
xor
incb
jo
fs
aas
cltd
sub
iret
arpl
fdivrs
movsb
adc
scas
test
je
aaa
dec
loope
add
push
xchg
pop
pop
fbstp
cmpl
pop
das
stc
inc
repnz
test
mov
fnstcw
lock
ret
addr16
push
popa
pusha
xor
cmpsb
push
fcmovne
push
aas
clc
xchg
ss
xchg
mov
pushf
push
cmpsl
ljmp
mov
shrl
xchg
repnz
jg
jno
mov
mov
cmpsb
js
xchg
mov
adc
xchg
xchg
stos
jb
or
xchg
xor
inc
fcomp
pop
inc
pop
je
and
add
xchg
dec
ficompl
adc
insl
sub
adc
inc
mov
adc
sbb
popf
push
leave
pop
jg
sub
aas
lret
pop
and
fnsave
ret
sahf
subl
mov
jecxz
pop
push
jl
cmpsl
incb
mov
or
stos
jp
lds
push
inc
hlt
pushf
xor
movntps
push
sti
rorb
loopne
enter
jae
xor
lret
shrb
xor
mov
and
or
stos
sarb
test
insl
push
inc
mov
jnp
mov
adc
pop
pop
inc
rcll
roll
add
ficomps
cmpsl
pop
iret
add
push
inc
sbbb
mov
or
adc
mov
rorl
cltd
push
in
jge
add
scas
jg
adc
inc
lods
pop
ja
adc
push
inc
xor
adc
or
test
inc
inc
sti
adc
rcrl
leave
dec
clc
int
inc
or
pop
pop
stos
pop
sub
idivl
lret
jmp
in
rcr
jns
arpl
add
jl
xlat
fcomps
imul
sti
xor
neg
into
mov
addb
imul
dec
push
mov
testb
jns
inc
mov
or
push
jecxz
xchg
inc
push
fisttpll
repnz
add
jp
xchg
mov
ljmp
mov
dec
outsl
testl
mov
pop
js
inc
xchg
cltd
cmpsb
mov
les
sub
adc
shl
or
loopne
rcll
inc
shr
sarl
inc
in
repnz
loop
lock
out
jg
dec
jecxz
push
or
xchg
cld
test
roll
inc
pushf
push
push
fsubs
xor
shl
sub
inc
push
mov
dec
inc
dec
negl
sahf
or
std
xor
xchg
ret
mov
or
cmpsb
push
xchg
mov
dec
fwait
rcr
sub
jecxz
scas
out
xchg
cmp
inc
lret
mov
mov
out
dec
es
test
fildll
adc
rcrb
lret
xor
iret
je
or
mov
in
push
cmp
iret
mov
lds
in
mov
loop
lret
movsl
jb
arpl
cld
cmpsl
push
or
cmp
sbb
in
push
filds
mov
push
imul
fs
ret
jo
sbb
mov
loopne
ret
mov
lret
sahf
push
mov
lahf
jmp
dec
sbbb
and
mov
les
sti
pop
repnz
mov
or
stos
mov
into
je
pusha
rolb
ds
adc
pop
adc
in
repnz
clc
arpl
negb
icebp
int
lcall
mov
lock
sbb
arpl
cmp
push
xchg
ficoml
inc
mov
xchg
cmc
or
int3
mov
roll
shr
inc
sbb
js
enter
pop
push
clc
push
add
loope
sbb
andb
shll
lods
jno
movsb
xor
outsb
push
pop
movsb
rclb
out
or
mov
mov
cmp
push
sti
add
arpl
add
sbb
test
xchg
or
cmp
loop
int
je
adcl
pop
sub
cmp
loope
mov
popf
fldl
add
mov
imull
lods
das
mov
inc
or
push
and
cs
xor
jo
call
push
mov
popa
lcall
loope
ret
cmp
push
adc
push
rolb
enter
cmc
xchg
sub
into
and
roll
lcall
fwait
insb
es
xchg
iret
dec
pop
fcmovnbe
xchg
insl
mull
enter
xchg
enter
mov
sbb
incb
or
mov
dec
lcall
adc
out
scas
pushf
cmp
add
and
adc
nop
data16
call
orl
lahf
mov
mov
fldl
into
call
sub
loop
dec
rolb
mov
stc
bnd
fiaddl
loope
mov
out
out
movsb
pop
or
dec
sbb
sub
sub
ljmp
inc
bound
les
mov
inc
dec
mov
cmp
mov
pop
xchg
sub
cltd
xchg
lock
fistps
scas
mov
aaa
mov
adc
jbe
test
into
or
jns
dec
sub
aam
xchg
daa
imul
das
mov
mull
les
lods
dec
data16
or
jmp
xlat
add
mov
into
mov
data16
les
push
out
arpl
dec
rol
push
or
jmp
or
mov
das
lret
rcrb
es
ljmp
adc
xorl
mov
sbb
pushf
fbstp
insb
fdivrs
gs
icebp
ss
mov
add
int
test
jecxz
mov
aad
outsb
std
sub
popa
pop
mov
push
enter
add
fs
ret
pop
or
sub
mov
in
lret
sbb
mov
xchg
jno
inc
jle
jecxz
mov
sub
mov
orb
mov
out
ret
pop
or
adc
ret
imul
cltd
pusha
mov
pop
in
inc
mov
sbb
xchg
mov
jmp
mov
sbb
idivl
out
int3
xchg
test
add
jmp
xchg
mov
cld
sahf
lret
jle
mov
jle
jae
adc
push
jp
in
sbb
lcall
lret
out
fists
std
or
mov
sub
sub
mov
xor
outsb
jne
fisubrs
push
in
loope
dec
mov
cli
inc
jbe
xor
cmpsb
ds
test
cld
cmp
pop
and
aam
sbb
or
fimuls
add
add
xor
mov
ret
lret
cld
mov
in
aad
fwait
loopne
pop
push
jae
dec
sub
lods
adc
xchg
mov
xchg
add
mov
push
ss
daa
repnz
jl
or
mov
cs
or
ljmp
jg
inc
aas
jecxz
xor
mov
iret
insb
sbb
mov
sbbl
mov
imul
pop
add
mov
inc
xchg
push
jns
mov
inc
mov
dec
lea
adc
pop
das
jnp
cmc
lret
ffreep
or
jnp
popa
push
adc
xchg
push
mov
and
pop
sbb
jmp
subb
aad
test
sbb
test
jno
sbb
mov
in
test
xor
xor
fdiv
xor
mov
mov
mov
xor
mov
and
pusha
mov
push
jns,pt
scas
outsb
lods
out
add
xor
mov
fsubl
mov
ja
fidivrl
lock
lods
mov
sti
push
cmpsb
sub
sbb
sbb
xlat
repz
xor
loopne
pop
fnstenv
xor
inc
mov
dec
ja
dec
das
mov
mov
cmc
adc
mov
xchg
lock
arpl
xchg
and
fimull
outsb
jmp
mov
sub
pop
push
jns
int3
xchg
mov
shlb
and
mov
xchg
jne
les
ret
mov
jbe
sub
lds
in
aas
dec
add
hlt
shlb
lock
enter
bndldx
xchg
orl
push
push
fdivl
jl
sbb
xchg
inc
pop
cmp
sbb
inc
shll
into
push
hlt
push
xchg
inc
repnz
pop
test
push
pop
inc
rcll
dec
dec
cmpsb
filds
add
push
add
push
nop
test
jmp
dec
cs
xchg
sti
xor
cmpsb
pop
xchg
add
pop
pop
call
jp
lret
aas
sbb
aas
pop
repnz
sbb
cmp
cmpsb
pushf
mov
xchg
or
xchg
mov
pop
sbb
xor
jno
sbb
ret
data16
mov
pop
sub
xor
inc
in
xorb
lock
push
pop
inc
cmp
cmpl
mov
popa
jmp
push
push
popa
sbb
aaa
cmp
jbe
stc
push
pop
ss
fmull
jb
and
sub
lds
mov
jle
dec
adcb
repnz
test
jmp
mov
mov
in
jmp
xchg
call
xor
ljmp
ds
jnp
fidivl
lret
push
dec
repz
cwtl
inc
push
stos
pop
jb
add
jnp
bound
pop
mov
dec
inc
or
movsl
shlb
hlt
pop
lcall
mov
out
in
mov
mov
mov
dec
mov
cld
add
adc
pop
aam
lea
add
je
orb
test
xor
add
push
shlb
push
jno
insl
cmp
dec
into
dec
and
in
add
mov
imul
add
in
jnp
jbe
mov
in
aad
clc
dec
addr16
test
loopne
fldl
aaa
pop
and
pop
sub
in
sbb
popf
push
cmp
in
push
dec
in
clc
loope
loopne
xor
lods
cmp
ss
sub
or
test
sub
movsb
in
fdivs
subl
or
fisttpl
call
or
push
sub
jp
cmp
xchg
dec
cld
lret
pop
and
pop
pop
js
outsb
pop
push
sbb
xor
push
mov
xchg
push
push
insb
sub
das
or
ret
sti
push
dec
ds
sub
mov
xchg
jecxz
mov
orl
imul
pop
jmp
sub
jo
fwait
outsb
dec
mov
mov
mov
jnp
arpl
fsubs
and
mov
add
mov
sub
aam
movsl
jecxz
outsl
fildl
inc
xchg
cmp
pop
rclb
dec
and
xor
scas
cmpsb
push
popf
repz
mov
xor
mov
rcpps
btc
pushf
imul
jnp
adc
dec
loope
pop
mov
cmc
jnp
xor
mov
das
or
inc
aam
pop
loope
jmp
sbbl
push
lds
shr
in
hlt
es
addr16
stos
in
gs
sub
notl
or
icebp
fsub
cwtl
gs
repnz
pop
or
insb
pop
xor
movq
nop
imul
or
mov
sbb
mov
push
testb
adc
push
adc
xchg
shlb
and
mov
adc
jne
or
outsb
imul
dec
jo
sbbb
or
or
leave
sbb
scas
movsl
scas
xlat
aad
bound
repnz
lds
loop
addb
push
ds
adc
pop
cmp
scas
xchg
dec
mov
mov
sbb
xor
jns
bound
inc
mov
shll
inc
pushf
aad
mov
ss
inc
insb
shll
or
add
sub
mov
loop
and
loope
xor
xchg
mov
dec
je
lret
dec
lret
pop
jecxz
out
sbb
or
repz
loopne
cli
nop
sub
push
xorb
or
mov
xchg
adc
inc
std
mov
mov
xchg
xchg
or
fists
add
or
mov
fdivr
jmp
cmp
fbld
add
jge
adc
dec
mov
addr16
jg
data16
mov
outsb
aas
cmp
shl
aaa
jp
sub
jmp
push
add
cmp
scas
aaa
sbb
xor
lods
sub
std
ss
jmp
enter
movsb
cmpsl
push
push
mov
mov
daa
mov
aam
jae
popf
xchg
in
mov
inc
jne
and
dec
nop
das
sub
aaa
xor
insb
ret
cmp
jg
cmc
dec
pop
iret
push
in
jg
aaa
popf
jnp
leave
dec
pop
mov
dec
repz
mov
popa
inc
cmp
into
mov
int3
mov
sub
jle
push
out
mov
loope
sub
ja
dec
or
arpl
andl
cmp
jne
int3
nop
add
je
inc
pop
out
and
xchg
enter
mov
mov
cs
iret
mov
push
out
mov
mov
xchg
repz
xchg
jle
fcmovnb
les
or
imul
xor
sbb
int3
stos
mov
mov
lods
mov
pop
daa
sbb
ljmp
mov
ficompl
test
dec
cmp
or
lcall
sbbw
jl
jnp
xchg
out
push
rcll
repnz
mov
addr16
test
mov
rolb
sub
mov
and
call
out
cwtl
leave
or
cld
lock
repz
mov
pushw
ret
addb
jge
inc
lcall
pop
adc
mov
and
inc
pop
sbb
ja
popa
pop
movhps
lret
mov
fistpll
ja
or
cs
cmp
jle
in
sbb
jne
dec
rcrb
aad
int
dec
lods
ret
fsubr
sahf
jge
movsl
xlat
popa
cmpsl
fisttpll
js
mov
pop
pop
pop
jp
mov
push
jmp
mov
fdivs
int
add
rorl
or
pop
enter
aad
push
push
pop
das
shll
mov
out
jge
pop
pop
add
test
push
pop
add
mov
mov
mov
adc
inc
mov
jg
hlt
arpl
push
clc
push
adc
jl
test
iret
in
jmp
cs
mov
enter
jmp
xchg
adc
sub
rcr
addr16
mov
cmp
cmp
cmc
xchg
xchg
push
shlb
cwtl
daa
or
insb
adcb
ljmp
movsl
mov
pop
mov
arpl
dec
scas
pop
dec
dec
add
jmp
cmp
or
popa
test
enter
adc
mov
rcll
mov
dec
ljmp
jge
rorl
pop
xchg
sbb
pushf
cmp
in
jo
adc
sahf
sbb
std
fs
int
test
mov
outsl
jne
push
stc
cmpl
stos
jb
sub
pop
and
rolb
push
andl
push
js
xor
inc
jo
mov
repz
pop
push
cld
inc
repz
andl
sub
xor
push
jg
idivl
daa
fstps
xchg
cmpsb
insb
mov
xchg
dec
cmpl
cmpsl
jae
movsb
jb
and
jno
call
lea
jmp
rorl
lea
es
shrl
pop
xchg
add
jae
fucomp
inc
ret
sub
xor
pinsrw
cmpl
stos
movsl
pop
mov
flds
enter
sub
das
push
int3
stos
pop
hlt
test
iret
add
cltd
jge
mov
movsb
nop
hlt
out
scas
inc
and
roll
sub
cmp
sbb
inc
pop
mov
movsl
sbb
or
imul
jns
xlat
and
popa
mov
lahf
push
mov
mov
xor
add
xchg
imul
xchg
sub
data16
test
xchg
inc
xor
loope
call
call
aaa
mov
pop
jl
out
mov
out
adc
cld
aam
jns
push
gs
ljmp
out
nop
xor
and
add
sbb
xor
fs
dec
or
mov
adc
data16
in
mov
pusha
pop
flds
ljmp
mov
inc
dec
jo
sti
rolb
adc
inc
jmp
sbb
mov
mov
or
in
adc
lret
mov
mov
sbb
push
out
jo
into
cld
push
jnp
negb
fimull
and
mov
clc
jne
adc
fbstp
es
push
mov
mov
xchg
xor
andb
cmpsb
and
push
cli
daa
pop
fiadds
mov
pop
mov
push
or
loope
xor
sbbl
lahf
std
pop
daa
sahf
ljmp
in
jo
dec
sarb
cli
rorl
imul
mov
jmp
call
xchg
xor
int3
cs
aam
enter
push
fidivl
in
fidivl
clc
test
adc
fcoms
inc
call
fwait
xchg
add
and
adc
jae
xchg
sbb
xchg
insl
mov
js
testb
mov
jecxz
cmp
cmp
daa
popf
sbb
inc
mov
xchg
aaa
lods
les
scas
add
lret
jl
push
imul
addr16
fiaddl
insb
movb
notb
pop
add
test
lret
adc
ss
fpatan
int
ja
mov
add
push
fisubrs
mov
iret
dec
inc
arpl
jle
pushf
sbb
ret
dec
fildl
fstpl
js
jae
movsb
add
les
mov
or
adc
and
jb
cmp
aas
decl
mov
xlat
mov
push
cmp
pop
out
adc
lret
repz
andb
xchg
leave
ljmp
out
jne
test
test
je
repnz
xchg
stos
xchg
xchg
fwait
ret
cmpsb
jl
cmp
xchg
xor
jg
mov
lret
or
pop
jp
adc
lea
lret
je
push
and
mov
scas
sbb
dec
int
jbe
sar
out
jg
rorb
pop
xor
push
iret
je
push
xchg
mov
inc
hlt
dec
test
or
lret
push
popf
adc
scas
dec
fnstsw
cmp
lcall
in
pusha
iret
jmp
icebp
adc
bound
add
outsl
call
outsl
mov
push
jbe
lret
cmp
es
outsb
fidivrs
and
jo
push
sbb
jg
adc
cmp
pop
dec
data16
into
mov
shrl
jmp
mov
jb
ret
pop
dec
mov
jno
xchg
cld
add
ja
inc
arpl
leave
dec
jl
movsb
dec
cmp
aas
leave
pop
ficoms
repnz
fcoml
jo
add
sub
sub
cmp
mov
push
ljmp
insb
adc
jb
mov
imul
ret
cld
int
aad
cltd
pop
aaa
xchg
lret
leave
xchg
loope
mov
pop
sbb
mov
mov
add
rol
jbe
mov
leave
repnz
cld
addr16
pop
jmp
faddl
cmp
pop
iret
adc
pop
out
loop
add
mov
jae
jb
xchg
cmpsl
dec
pushf
add
inc
lock
ret
and
mov
sbb
xor
daa
aaa
pop
cmpsl
jmp
dec
xchg
sub
inc
sub
mov
cmc
inc
daa
jnp
data16
pop
lret
pop
arpl
adc
insl
pop
xchg
sub
mov
sbb
bound
inc
pop
test
shrb
dec
mov
outsl
xor
ja
leave
je
jg
into
mov
mov
xor
icebp
push
mov
aaa
iret
sarl
mov
cmpsb
movsl
jecxz
int3
test
movsl
cmp
mov
push
xor
test
cmc
into
pop
xor
adc
out
jmp
in
jmp
dec
xlat
sub
xorb
sub
mov
and
and
popa
fstpt
dec
lods
fnsave
int3
pop
in
pop
aam
dec
shl
or
mov
xor
mov
jle
cmp
xor
movsl
jecxz
sbb
pop
test
cmpsb
sbb
xor
push
in
jg
das
or
out
popa
fildl
stos
inc
adc
pop
jle
cmp
xor
in
outsb
cmp
mov
pop
out
inc
out
jl
mov
and
cltd
inc
flds
test
pop
pop
ret
std
test
adc
xlat
jecxz
icebp
cmpb
aas
or
and
jp
test
enter
sbb
repnz
cmp
hlt
or
roll
push
mov
cmp
lret
pop
cmp
mov
imul
inc
xchg
out
mov
outsl
lods
cmp
fucomp
fidivrs
add
mov
lods
jecxz
and
pop
inc
pop
pop
xchg
mov
loopne
and
xchg
xor
xlat
or
lea
in
mov
iret
mov
fucomi
movsb
enter
scas
mov
mov
ja
jmp
lret
ficoms
pushf
nopl
push
insb
aas
lret
cmpsb
rcll
sbb
and
mov
jbe
lret
add
pushf
fsts
mov
adc
jmp
add
adc
popa
aam
xchg
and
scas
enter
lcall
sahf
jb
repz
adc
aaa
dec
push
push
xchg
xchg
push
push
pushf
add
mov
scas
sahf
cli
je
push
das
test
push
inc
ds
add
loope
mov
mov
jmp
push
pop
pop
adc
jl
mov
push
xchg
jnp
imul
test
loopne
inc
mov
adc
mov
push
jo
pop
sti
aas
daa
mov
fsubr
cmp
sbb
movsb
xchg
lcall
inc
adc
jg
js
mov
ljmp
sti
mov
daa
aaa
or
cmp
push
adc
int
xchg
adc
leave
sbb
and
mov
jae
mov
iret
in
outsb
push
add
mov
lods
movsl
lods
mov
dec
push
mov
push
fsubs
test
insb
sarb
adc
xchg
and
adc
adc
add
pop
and
sti
popf
mov
repnz
jle
mov
test
cld
cmpl
shlb
pop
mov
test
push
sbb
filds
cmp
mov
subb
xor
loope
inc
pop
inc
or
adc
ljmp
mov
scas
jbe
bound
fs
mov
shrb
insb
pop
sub
and
dec
insl
cltd
mov
add
dec
stos
cmc
ja
rcrb
push
xchg
out
push
mov
pop
cmp
test
xlat
scas
or
cmc
xor
pop
mov
mov
or
inc
rorl
add
out
movsb
push
jno
push
or
icebp
arpl
in
add
lods
mov
ljmp
cs
repz
roll
mov
xor
rcll
into
dec
subb
sub
sub
jbe
jmp
mov
adc
bound
pop
mov
out
mov
push
sub
jecxz
setne
inc
sub
mov
push
loop
inc
fcomps
sar
shlb
into
insl
add
or
out
shll
xor
jb
leave
cmp
repnz
fildll
xchg
out
lea
call
into
mov
adc
mov
mov
push
fildll
jno
pop
lret
inc
xchg
cltd
sarl
je
adc
js
cmpsb
pop
cmp
cmp
or
push
data16
push
push
mov
add
cmp
or
mov
xor
repz
inc
scas
pop
inc
test
adc
push
insl
test
ljmp
sub
pusha
pop
mov
mov
insb
pop
and
test
add
push
scas
jnp
mov
scas
sub
imul
cmp
xchg
jo
add
xchg
insl
adc
push
jl
inc
ret
rorl
fsts
outsb
idivb
sbb
add
ss
sbb
fsubrl
mov
jns
rolb
mov
add
and
sub
inc
leave
or
push
movsb
sbb
pop
mov
add
inc
movsl
stos
push
lock
lods
fcmovb
jg
fcmovu
andb
test
xor
leave
into
fidivrl
mov
sub
loope
inc
sbb
jb
push
cmp
jbe
mov
jp
je
xchg
movsl
pop
adc
sbb
loopne
sbb
fwait
sub
nop
xor
std
stos
jmp
dec
js
in
repz
sub
push
cltd
pop
adc
test
xorl
add
pop
xor
adc
test
mov
or
mov
out
push
imul
push
push
cmpsl
xor
cmpsb
ret
dec
push
hlt
push
push
imul
insb
mov
mov
movsl
jl
mov
dec
jb
inc
icebp
or
sbb
jecxz
dec
in
or
push
xchg
push
mov
int3
jle
lods
inc
mov
fsubrl
loop
out
aam
pop
jae
mov
lea
jmp
cs
ljmp
cwtl
test
fchs
or
mov
es
mov
imul
dec
int3
stc
and
xor
xchg
test
sbb
mov
in
shl
pop
test
outsb
push
adc
in
mov
cmpsl
out
test
sub
mov
mov
push
mov
jmp
scas
sub
in
mov
push
adc
dec
add
adc
fisttps
mov
test
pop
lret
mov
imul
adc
testb
xorb
imul
push
push
add
xchg
mov
adc
xchg
or
sbb
inc
insb
addr16
mov
clc
push
rcrb
test
or
jmp
or
out
repnz
pop
cmp
fidivrl
xchg
dec
int
lcall
mov
xor
out
ret
push
mov
data16
inc
inc
mov
mov
stc
inc
dec
out
jle
sbb
and
jno
mov
push
xchg
daa
mov
push
xor
push
pushf
mov
fsubs
mov
xchg
shl
loop
push
ss
movsl
push
pushf
adc
jmp
inc
jbe
mov
mov
xor
inc
mov
mov
xor
repnz
inc
jle
jle
out
in
sub
pop
xchg
push
roll
mov
sbb
xchg
mov
mov
loop
into
cli
mov
bound
shrl
add
push
xchg
and
adc
pushf
pop
das
hlt
aas
add
js
sar
lea
lahf
fistpll
jo
sti
cltd
lret
test
sub
or
out
loop
js
test
and
or
xchg
in
fs
mov
sub
sub
and
fs
xchg
inc
fsubr
cmp
inc
xchg
jbe
push
pop
loop
movsl
push
xchg
test
mov
add
push
and
dec
jle
cs
in
push
dec
sahf
and
dec
jp
fisubrs
inc
push
push
xchg
popa
lahf
imul
pop
idivl
cmp
and
dec
pop
cwtl
dec
push
mov
loopne
and
aad
cmp
push
ja
movsb
sub
loopne
lock
xor
and
pop
mov
dec
push
add
shld
fisubl
in
sbb
pop
movsb
notb
pusha
xor
and
je
insb
ds
ja
inc
sbb
js
pop
xchg
adc
xor
cmp
loopne
mov
in
data16
dec
adc
pop
cmpsl
lret
call
ljmp
push
xor
imul
ret
and
lock
xor
in
pop
xchg
repz
pop
xchg
xlat
add
add
mov
xchg
leave
es
mov
int3
sbb
push
push
js
insl
popf
xchg
in
test
dec
imul
or
mov
adc
aaa
popa
shrb
jae
pop
mov
pop
push
xor
sbb
add
icebp
ret
cmpsl
or
mov
or
push
out
sbb
aas
sahf
fs
stos
lahf
outsb
mov
jecxz
pop
cltd
mov
xor
push
or
add
repz
push
jge
fimull
rclb
test
jecxz
clc
shll
leave
cld
inc
jo
fisubs
js
pop
out
pop
pop
cltd
adc
adc
xchg
sub
mov
push
mov
nop
stc
xchg
pop
mov
lret
nop
pop
jg
push
mov
and
sub
out
fs
xchg
or
push
mov
scas
xor
jnp
lret
jge
insb
inc
mov
lea
pop
xor
push
repnz
nop
mov
out
jle
adc
dec
sahf
cmp
in
testl
adc
and
test
mov
mov
mov
sbb
leave
ret
std
sub
mov
xchg
fsubl
cld
ror
popa
test
in
and
jb
or
loope
nop
fdivrp
jecxz
inc
jle
pop
test
cmp
mov
testl
xor
xor
or
test
sub
lock
pop
movsl
xchg
es
scas
aam
lods
aaa
jnp
mov
pushf
inc
test
push
fsts
push
jne
mov
rcll
test
jp
xchg
xchg
es
xlat
ret
lds
push
adc
rcl
into
out
lods
mov
jmp
jnp
pop
cwtl
and
dec
jg
lock
xchg
incb
gs
idivb
nop
mov
test
fmuls
idivl
jp
fidivl
pop
and
mov
cmp
enter
mov
out
sbb
in
or
ljmp
xor
aad
dec
adc
push
mov
int
and
repnz
mov
popa
cltd
outsb
in
xchg
add
inc
jmp
mov
push
mov
cmp
fcompl
cmp
ds
pop
xor
leave
mov
cmp
test
shll
jnp
movsb
lahf
repz
pusha
pop
dec
adc
insb
es
mov
or
test
push
aaa
inc
movsl
adc
xor
mov
sbb
mov
jbe,pn
pop
into
jp
xor
lcall
mov
mov
into
and
or
mov
jecxz
and
stc
mov
xchg
popl
xor
mov
lods
ret
push
addr16
scas
outsb
xchg
cwtl
ja
xchg
or
mov
clc
addl
xor
iret
mov
push
mov
imul
lret
outsl
xchg
xlat
or
pop
cltd
and
pop
pop
out
xor
push
movsb
test
out
jb
inc
lods
xchg
in
xchg
int
sub
mov
rol
in
pop
pop
in
pop
scas
xchg
adc
lcall
out
insb
stos
jae
pop
inc
or
ficomps
inc
pop
pushf
sub
pop
sub
ds
add
adcl
xchg
lds
pushf
dec
dec
xchg
jns
mov
lods
cmp
das
mov
inc
ficoml
enter
jb
js
pop
mov
cmp
or
push
cmc
test
loopne
xor
cltd
mov
lahf
dec
push
in
sub
xchg
mov
popf
test
andb
addb
sahf
ljmp
addr16
call
gs
cmp
pop
fcoml
mov
sahf
fmull
rol
loop
rorl
mov
xchg
inc
dec
mov
outsb
scas
test
mov
dec
xor
sbb
mov
jno
and
stos
sbbl
fbld
aad
sarb
mov
pop
jge
inc
and
add
push
imul
popa
push
push
xlat
cmc
sub
pop
pusha
aas
xchg
mov
jmp
jo
in
arpl
inc
mov
gs
cli
jnp
jb
add
roll
mov
lods
add
aad
outsb
insb
je
jge
rol
inc
loope
sub
mov
mov
mov
cld
jo
cmp
jecxz
pcmpeqd
sbb
mov
cltd
fs
scas
push
adc
push
mov
xchg
in
stos
movsl
dec
pop
xor
lcall
popa
inc
js
ja
movsb
push
popa
push
into
and
arpl
test
xor
add
addr16
out
jns
lcall
incl
scas
jno
pop
and
in
mov
lea
sub
clc
testl
xor
adc
inc
cmp
fnstcw
stc
fdivrs
sbb
xor
mov
daa
ret
xchg
push
jno
sbbl
js
nop
cmp
hlt
mov
movsl
ret
pusha
sbb
lea
or
add
pop
sysenter
adcl
insl
aam
dec
aaa
and
pop
es
cmp
movsl
cmp
les
vmread
je
cmc
daa
cwtl
push
cmc
adc
inc
push
das
mov
pop
xchg
cmp
add
outsb
xlat
cmp
xchg
inc
cltd
cmp
in
jae
loop
orb
jo
stc
outsl
stos
mov
fisubs
push
sub
arpl
imul
sub
pop
lea
xchg
lahf
sti
aam
stos
push
mov
ja
leave
sbb
push
ja
mov
and
adcl
push
mov
sbb
jp
lods
mov
jne
mov
or
js
repz
inc
lea
fs
mov
xchg
xor
sub
add
loopne
jnp
out
fildll
outsl
mov
lds
scas
aam
pop
cmp
hlt
out
mov
inc
mov
fadds
add
movnti
cmp
xor
fldl
and
lret
mov
int
sub
dec
pusha
xchg
inc
out
sbb
sub
hlt
xor
xchg
popf
fs
jnp
push
lea
fcomps
test
inc
shrl
daa
inc
sub
mov
sbb
into
dec
and
iret
outsb
mov
mov
divb
mov
jp
pop
out
add
push
inc
sahf
imul
leave
mov
cmp
enter
into
mov
cmovo
sbb
jle
push
push
in
fldt
imul
add
adc
adc
cmc
addr16
pop
dec
mov
cs
leave
sbb
push
aam
push
and
push
jmp
scas
adc
jb
lret
popf
push
sbb
xor
ljmp
mov
jb
xor
mov
lock
shlb
in
mov
mov
loop
add
cmp
leave
mov
sbb
fwait
or
out
lock
pop
loope
dec
aad
rorb
js
add
mov
push
mov
inc
ret
adc
pop
clc
cmpsl
pop
jnp
fstpl
mov
movups
inc
sti
mov
pop
sbb
rolb
cltd
pusha
sbb
mov
inc
leave
or
out
outsl
xor
test
das
mov
mov
icebp
push
inc
xchg
mov
cmp
push
rdpmc
mov
mov
mov
push
or
sub
pop
sub
sahf
int3
sahf
pop
jle
inc
cmp
shll
mov
sub
filds
push
movsl
aam
and
gs
outsb
push
mov
mov
xor
jne
jle
pop
cmp
call
insl
mov
add
loope
or
and
cmp
cmc
jae
xchg
call
loop
inc
inc
inc
push
dec
lret
mov
add
stos
sbb
loope
inc
mov
dec
outsl
mov
fs
mov
adc
std
jecxz
sub
jo
daa
or
push
shrb
out
daa
enter
mov
jmp
lods
cmpsb
gs
andl
mov
xchg
adc
sbb
loopne
dec
pop
outsl
xchg
inc
pushf
xor
lret
push
repz
xchg
cmpsb
and
movsb
adc
push
xor
pop
sub
or
jns
fwait
cmc
adc
mov
jmp
in
dec
inc
rol
inc
push
add
xchg
xor
insl
jecxz
ret
xchg
or
cmp
bound
lods
loope
fxch
and
in
jle
sub
pop
dec
or
aad
movsb
xchg
push
dec
or
ret
clc
dec
cmp
and
mov
sub
lcall
pop
xchg
int3
mov
jl
das
xor
mov
clc
jmp
push
adcl
lea
add
adc
into
xchg
arpl
xchg
aam
jne
fwait
insl
pushf
adc
cmp
mov
sub
xor
add
cld
mov
addr16
jnp
jge
jmp
jns
cwtl
movsb
and
stos
andb
jae
xor
inc
dec
mov
push
ficoms
hlt
test
clc
mov
cs
and
jp
xor
push
repz
xor
mov
add
push
daa
or
xor
insl
imul
in
pop
mov
dec
paddusb
bound
popf
test
mov
outsb
mov
xchg
adc
cltd
daa
and
hlt
mov
shlb
pop
test
inc
test
mov
leave
or
xchg
sbb
cmp
pop
mov
scas
cltd
leave
xchg
daa
pushf
adc
mov
sub
pop
jge
mov
lock
into
jl
push
scas
mov
das
pushl
pop
jp
cli
xchg
movsb
cltd
mov
scas
jo
popf
lahf
mov
into
mov
int3
test
or
fistl
arpl
add
or
dec
vmulsd
lahf
test
mov
sbb
ja
mov
sbb
mov
enter
mov
dec
lcall
std
push
jmp
pop
mov
lcall
popf
je
addr16
es
mov
jns
ficomps
and
pop
push
add
ja
mov
sbb
test
xchg
push
sub
js
or
rorl
and
dec
push
lea
cmp
cld
leave
jns
add
aas
xor
dec
inc
idivl
lret
inc
sub
or
pusha
lods
xchg
jno
xor
fcoml
sub
js
out
clc
std
test
sbb
sarl
pop
xchg
or
mov
dec
mov
jg
mov
out
aaa
popf
add
add
cmova
pop
push
outsb
inc
addr16
cmp
test
and
into
pop
imul
push
ficoml
sbb
int3
cmp
mov
in
leave
xchg
pop
lds
sbb
xchg
scas
cwtl
add
inc
add
fmulp
imul
icebp
in
cmpsw
notb
insb
push
adc
rorb
rorl
jne
ss
cli
jae
scas
out
test
mov
gs
jno
lret
adc
dec
rdtsc
and
scas
adc
repnz
mov
pop
jo
sub
dec
mov
lds
mov
xor
push
fs
sbb
sarb
push
fisttpll
mov
push
mov
and
xchg
inc
cmc
inc
loope
imul
inc
cmp
pushf
xchg
faddl
mov
lcall
repz
cmp
cmp
xchg
mov
jbe
out
lahf
inc
mov
jle
arpl
sahf
and
out
sahf
mov
stc
mov
hlt
adc
jmp
mov
inc
lock
addb
jmp
cmp
popa
xor
in
jg
mov
sub
jne
addr16
aaa
and
mov
les
ret
sahf
je
aas
cmc
lds
jns
mov
jne
cmc
mov
sbbb
ret
pop
jae
push
dec
mov
mov
dec
push
leave
sbb
aaa
repnz
mov
aad
mov
gs
popa
sti
pop
stos
fdivr
dec
dec
sbb
dec
sahf
out
adc
mov
inc
xor
imul
daa
stos
jne
dec
or
mov
pushf
and
push
das
mov
push
shrb
cmpb
aad
lahf
sub
loop
sub
fs
mov
mov
insl
mov
mov
dec
adc
packssdw
mov
into
lock
aam
test
dec
and
or
stos
mov
mov
add
dec
mov
roll
shlb
decl
ret
rorb
mov
pushf
lock
mov
adcb
pushf
mov
and
push
test
mov
stos
mov
mov
out
mov
xchg
inc
rolb
inc
out
push
ja
mov
dec
popf
pop
push
sbb
push
psubw
xchg
rclb
test
and
xor
xor
push
mov
jno
ds
nop
add
cmpl
sub
insl
je
jb
rolb
mov
cmp
sub
sub
cwtl
inc
inc
sbb
rcrl
push
rcl
cmp
mov
add
push
mov
in
dec
xor
mov
pusha
les
sarb
sub
lock
jns
fmulp
dec
cmpsl
or
mov
ret
cmpl
xor
xchg
cltd
movl
xchg
outsb
lahf
mov
sub
sahf
xlat
ljmp
leave
int
or
cmp
jno
ds
mov
jg
insb
mov
call
test
push
xchg
add
dec
lret
dec
into
or
mov
push
adc
enter
or
mov
fnsave
lods
out
mov
mov
dec
dec
xchg
adc
ja
xchg
stos
mov
push
popa
jo,pn
sub
aam
fdecstp
iret
aam
dec
ret
repz
loop
stos
cmp
xchg
subb
popa
xchg
mov
mov
mov
ljmp
test
dec
push
cmp
mov
repz
ret
and
and
clc
pop
push
das
push
cmovns
sbb
jne
test
jae
aas
jnp
loopne
sub
dec
loope
in
cld
rcrl
in
and
sub
mov
shr
pop
xor
adc
loop
inc
setnp
and
andb
sbb
add
imul
sub
lcall
xchg
bound
fsubl
mov
into
sub
aas
lret
hlt
scas
adc
mov
out
sarl
pop
insl
or
inc
mov
outsb
sub
cltd
ficoms
hlt
jns
aam
scas
lahf
bnd
cmpsb
xchg
je
out
mov
mov
ljmp
sbb
mov
cmp
mov
pusha
movsl
and
imul
inc
les
push
dec
test
cmp
add
cmp
insb
dec
sbb
out
xor
pop
or
hlt
lret
addr16
daa
inc
cmp
fsts
je
and
adc
xchg
decb
ljmp
jae
orl
jecxz
scas
cmp
jge
jne
or
xor
insl
jle
sub
stos
out
repnz
dec
fdivs
outsl
add
pop
in
outsl
pop
push
scas
mov
ja
and
daa
leave
ljmp
int
push
mov
shll
sti
lahf
xor
or
mov
fists
mov
sbb
fdivr
mov
pop
fcmove
pop
shlb
xor
dec
pop
inc
dec
fidivrs
bound
aaa
adc
xchg
xchg
in
mov
mov
mov
frndint
into
std
adc
int
or
add
inc
fsubrl
jb
imul
inc
add
pusha
lahf
ds
dec
push
mov
pop
loopne
sbb
movsb
pop
mov
shrl
jae
xchg
loopne
push
outsl
push
icebp
in
push
rcll
scas
out
dec
mull
out
jno
add
dec
push
add
sti
pop
jp
sahf
jg
outsb
call
add
push
enter
sbb
xlat
and
mov
out
int
mov
orl
pop
scas
in
push
or
icebp
pop
mov
and
lea
pop
jnp
outsl
inc
outsl
lahf
pop
aam
fldt
rcrl
ret
mov
sbb
mov
and
jno
mov
adc
repnz
stc
jle
inc
jg
pop
sub
mov
mov
outsl
jge
sub
mov
or
test
sarl
and
mov
fdivrp
xchg
lds
int3
mov
inc
pop
rcll
adc
scas
dec
mov
mov
lods
in
lea
sti
cmp
out
idivl
inc
jne
cwtl
outsb
jo
cli
lret
outsl
in
aas
xchg
mov
inc
jmp
dec
fnstcw
xchg
push
fldenv
lea
outsb
fiaddl
loop
inc
or
push
mov
adc
pop
sbb
pop
rcr
clc
enter
lret
sarb
jbe
mov
push
packsswb
addr16
scas
and
jecxz
sub
xor
daa
mov
aas
jno
daa
test
lahf
rcrl
sub
test
addr16
fistpl
dec
jbe
fs
dec
push
fwait
add
and
popl
add
ret
pusha
lea
lock
ss
adcb
cld
inc
dec
addl
loopne
push
mov
fidivl
pushl
push
cmp
pop
add
xchg
sub
incl
nop
dec
lcall
xor
popf
pop
and
arpl
jecxz
out
mov
pop
insb
dec
mov
adc
add
xchg
int
pop
jge
xchg
pop
rcrl
lock
cmc
xorb
cmc
push
loopne
lds
lcall
loop
ret
xchg
push
jns
mov
andl
xor
mov
rep
sub
stos
call
cmpsl
loop
call
sub
mov
sub
sbb
addr16
cwtl
dec
cmp
pusha
int3
xlat
and
push
dec
mov
push
int
add
jne
addr16
add
inc
xchg
addr16
loop
mov
daa
ret
mov
ds
jne
jge
jno
addb
pop
and
jbe
pop
loop
fsubrl
clc
xorb
test
mov
lahf
jmp
inc
sbb
mov
das
xchg
sub
fisttps
jne
mov
inc
jnp
push
push
fimull
mov
aaa
bound
pop
sbb
mov
sub
cmp
dec
ficoml
mov
pop
mulb
dec
sbb
movl
ds
pop
dec
mov
loopne
aas
mov
jbe
lock
mov
sahf
sub
fidivs
cmp
xor
loopne
inc
rcr
push
cmp
jl
cmpsb
ds
stos
fildll
jo
push
mov
pop
push
xchg
jl
test
cmp
ret
push
dec
pop
cmp
repnz
pushf
pop
push
fsubs
es
out
adc
shlb
pop
sub
inc
adc
lret
leave
loope
or
jo
arpl
mov
pop
cmpsl
mov
jmp
xor
push
sub
sub
mov
sbb
mov
cmpsl
xchg
std
dec
inc
rol
mov
movsl
push
pop
cmp
add
mov
call
ret
pop
ffree
aas
and
push
xchg
push
push
mov
mov
sar
adc
and
push
cmpl
cmc
fwait
add
stc
sub
lahf
mov
inc
sbb
mov
lahf
sbb
or
push
pop
or
stos
ds
lods
push
cmp
sbb
xchg
add
andb
repz
mov
cli
js
pusha
dec
inc
lea
sahf
push
das
addl
lock
adc
and
mov
pop
cmc
icebp
shl
repz
jno
xchg
mov
adc
jmp
push
dec
pop
mov
hlt
push
adc
frstor
cmpsl
xchg
push
adc
insl
jl
cmp
inc
subl
outsl
mov
push
push
cs
sbb
mov
ja
mov
subl
rcll
mov
push
je
mov
mov
inc
sarl
iret
dec
cmp
pop
inc
jnp
cmp
xor
lcall
xor
bnd
cmp
pop
sub
jne
or
pop
outsb
or
lods
mov
push
mov
dec
cmp
sbb
int3
loope
inc
pop
inc
fidivrs
mov
mov
pop
cmpsb
jge
inc
outsl
xor
frstor
stos
xchg
rclb
cli
aaa
cmp
mov
ss
je
mov
pop
dec
xchg
inc
lods
outsb
mov
cmp
mov
cmp
repnz
sub
jge
mov
and
push
add
xor
daa
les
pop
push
hlt
adc
clc
enter
out
test
call
mov
aaa
and
lcall
mov
fldt
lods
cli
loop
scas
pop
imul
test
call
cwtl
sub
test
push
pushf
mov
icebp
sub
popf
pushf
and
or
adc
sbb
imulb
mov
pop
sub
leave
mov
jp
or
inc
test
push
in
movsb
pushl
fwait
or
hlt
adc
scas
sti
mov
and
jns
cli
shlb
aas
and
fwait
stc
ss
je
sbb
sbb
pop
addl
sub
dec
int3
sub
push
nop
inc
xchg
add
dec
aaa
out
test
clc
popa
mov
inc
inc
in
dec
inc
roll
pop
rcr
ret
ss
push
imulb
mov
pop
inc
push
aad
sbb
insl
and
fidivrs
sti
shl
test
in
ror
clc
xchg
cltd
mov
sub
ror
iret
lds
cmp
sbb
outsb
test
aaa
leave
movsl
dec
push
icebp
das
xchg
or
mov
pop
push
pushf
xlat
js
sbb
adc
scas
mov
cmp
lcall
gs
stos
add
ret
mov
xor
mov
mov
sti
sbb
cmp
cmpsb
xorb
scas
inc
test
sbb
inc
and
sahf
mov
movsb
and
and
xor
jle
pop
adc
push
pop
rclb
fisttps
mov
cmp
mov
push
push
in
mov
xchg
mov
and
outsl
or
jae
mov
mov
or
adc
imul
fldcw
movsl
mov
jle
jb
out
dec
push
adc
mov
lds
cltd
adc
popf
fbstp
cld
popf
inc
inc
imul
sbb
mov
cli
cmpsl
and
push
xchg
fdivrs
fistpll
out
inc
imul
inc
iret
add
mov
icebp
mov
enter
or
inc
dec
and
jle
xchg
sub
fsubrs
mov
mov
jg
jno
lds
popa
mov
out
jns
sahf
das
dec
push
cmp
pop
test
ret
mov
jnp
or
fidivrs
add
add
adc
adc
dec
popf
popa
add
dec
inc
sbb
lock
jno
pop
or
ficomps
subb
cmpsb
mov
lods
inc
adc
sarl
lods
into
dec
sub
push
xchg
scas
dec
mov
into
or
int3
jle
xchg
pop
pop
fimuls
outsb
jns
leave
push
xchg
cltd
ljmp
stos
int
sbb
or
popf
data16
xor
jnp
xor
and
and
lret
dec
cli
or
outsb
cmp
pushf
mov
sbb
inc
mov
inc
in
lret
sub
pop
cmp
jp
jbe
loopne
and
sub
test
lds
mov
fwait
or
dec
add
popa
in
hlt
iret
fisubs
mov
mov
lods
movsb
lock
push
add
pop
mov
inc
xchg
lahf
mov
movsb
adc
cmp
or
cwtl
add
mov
lods
bsr
cmp
inc
push
mov
aad
xor
movsb
adc
add
inc
rorl
xchg
or
add
push
mov
imul
cmpl
lret
sbb
sub
cmp
dec
jecxz
sub
arpl
sub
inc
mov
js
mov
rclb
jle
test
cli
push
loopne
rcll
jns
push
fsubrp
idivl
int3
in
pusha
mov
lcall
push
xchg
mov
jbe
enter
and
pop
pop
std
cmp
jge
int
les
movsl
clc
test
nop
or
jno
inc
orl
jecxz
pop
int3
pushf
push
popf
xchg
cmp
pusha
push
push
lret
add
leave
jle
mov
in
lret
hlt
jb
jge
ret
in
ret
ds
fstl
out
icebp
or
mov
and
fcmovne
lcall
movl
jb
popf
hlt
dec
ss
dec
flds
cmp
jns
mov
jb
dec
cltd
inc
imul
clc
jle
imul
xchg
jno
bound
movsl
addr16
mov
mov
fmul
rcr
push
sub
es
rcll
fisubl
sbb
jae
push
addl
lea
cmp
inc
pop
xor
mov
dec
nop
cld
js
xor
bnd
enter
fs
mov
cmp
pop
ret
dec
nop
fs
mov
imul
push
stos
rclb
xor
jge
test
daa
mov
add
xchg
lahf
scas
pop
or
mov
mov
ret
push
loop
loop,pn
add
fwait
leave
mov
xor
in
lds
fstpl
pushf
mov
ret
sub
cmpsb
push
or
lea
sar
repnz
sbb
out
cltd
fidivrl
dec
dec
pop
or
pop
les
and
sbb
mov
jp
pop
sub
ljmp
rcr
fidivrl
enter
push
xchg
xlat
ret
jne
mov
leave
fisubs
jb
imul
xchg
sbb
or
push
andl
ret
xchg
arpl
fwait
pop
push
stos
or
xor
idiv
stc
or
push
shll
sahf
lcall
xchg
mov
lock
pop
pop
stos
into
jecxz
rcrb
enter
stc
mov
jmp
orl
xchg
js
xchg
je
cld
ret
mov
lods
lcall
sbb
and
push
test
push
add
out
pop
jb
fstpt
xchg
jecxz
lahf
or
cwtl
aam
dec
sarb
sub
in
int
inc
jp
rorb
les
add
ret
repnz
gs
jg
movsb
xchg
add
data16
je
shl
dec
pop
add
in
std
xor
mov
add
and
lods
scas
lods
mov
dec
sbb
fisubrl
mov
insl
pop
jge
test
testl
mov
jae
dec
sub
inc
cmp
sub
test
xor
nop
jbe
or
cmp
jbe
dec
test
add
cmp
movsl
dec
push
jge
sbb
icebp
inc
add
and
ss
lcall
inc
mov
dec
xlat
bound
fisttpl
enter
dec
notrack
fadds
jns
lret
mov
and
arpl
push
push
mov
pusha
bound
cwtl
out
adc
pop
pop
pop
mov
pop
sbb
cs
leave
add
lds
lds
push
or
cmp
sha1rnds4
aas
imul
sub
rcrl
imul
int3
xchg
xchg
icebp
jb
std
push
jge
mov
fs
pop
mov
jmp
sub
fldl
xchg
jne
xchg
pop
xchg
jb
xchg
js
cltd
jns
cltd
pop
ss
icebp
jle
lret
popa
push
aas
fsubp
out
mov
inc
or
cmpsb
add
fucomip
iret
movsb
scas
sub
push
sysret
xlat
push
daa
or
testb
shll
pop
inc
repz
or
xchg
jle
movlps
adc
jp
loop
xchg
loopne
push
fwait
lcall
push
int3
xchg
es
mov
fs
cmpsl
pop
mov
lret
jno
dec
sub
ss
adc
and
lods
into
adc
or
leave
mov
icebp
in
hlt
adc
and
shl
inc
bound
leave
mov
repnz
xchg
xchg
mov
and
cmp
inc
clc
pop
push
outsb
mov
fs
jmp
mov
fdecstp
xchg
test
les
mov
loop
pop
add
add
es
adc
mov
mov
in
push
lds
adc
sbb
sbb
inc
aas
loope
inc
mov
mov
pop
je
xor
jbe
xorb
dec
pop
out
fbld
add
sub
into
jg
and
movzbl
xlat
loope
aaa
xlat
mov
sbb
sub
shr
mov
xor
jmp
push
cs
xor
sub
mul
pusha
xor
loope
jb
mov
lds
aad
push
stos
sbb
add
add
cwtl
pop
and
and
std
adc
rclb
int
mov
push
popa
imul
sub
push
dec
stc
or
fsubr
adc
aad
ja
sub
and
loopne
pop
jae
daa
out
sub
cli
pop
outsl
fs
or
out
cltd
aas
add
mov
xor
xchg
in
and
popf
jmp
dec
push
and
xor
cs
xor
mov
jmp
js
fcmovu
and
inc
in
push
in
sbb
adc
cmp
push
mov
pop
jp
pusha
lea
outsb
enter
mov
aad
movsb
dec
cld
ss
inc
lret
mov
icebp
in
dec
clc
jns
call
mov
test
cli
jnp
dec
lock
mov
cs
and
adc
cmp
mov
dec
aas
xchg
mov
xlat
mov
xchg
mov
push
jne
adc
inc
jecxz
mov
mov
shr
aad
lods
into
push
in
cltd
sbb
mov
outsl
popa
mov
mov
jb
push
sbb
dec
fsubrs
push
jne
xchg
ret
xor
data16
and
jle
dec
or
ret
lods
inc
in
in
dec
in
xchg
mov
pop
and
or
pop
pop
and
aas
stos
adc
aas
cmp
sbb
and
pop
pop
ret
call
out
pop
int
adc
add
pop
push
xchg
jae
std
rorb
sbb
or
cwtl
cltd
add
mov
or
mov
cmp
mov
add
aaa
movsl
add
push
shll
iret
jne
aam
inc
in
or
sbb
int
addb
cltd
mov
je
cmp
xchg
mulb
hlt
add
addr16
mov
ss
mov
sub
xor
dec
lods
xchg
nop
mov
xor
inc
jnp
leave
sbb
adc
lock
sbb
fbstp
cli
push
ds
pslld
insl
sub
and
dec
pop
xchg
aas
shrl
jne
repz
hlt
lods
out
arpl
mov
nop
pop
jb
out
cli
rcll
int3
push
pop
mov
xchg
push
int
xchg
add
std
iret
sbb
lods
cmp
xlat
rcrb
sbb
bound
xor
inc
or
or
mov
sbb
push
xor
pop
lret
sbb
rcll
rcrb
pop
mov
push
sbb
out
jnp
fstpl
and
icebp
cwtl
testl
adc
xor
aam
or
xor
out
mov
sub
cli
daa
ret
insb
shll
cld
lret
push
xchg
outsl
stos
movsl
psadbw
fidivl
pop
pop
rcrb
daa
xor
popa
mov
loope
sub
stc
add
jge
mov
pop
test
and
xor
sub
pop
push
and
pop
lock
cmp
jecxz
data16
dec
sbb
cld
lret
sbb
movsl
sbb
and
aam
pop
adc
pop
je
mov
adc
fwait
aas
xbegin
sarl
sbb
pop
push
js
andl
xchg
sub
les
andb
out
scas
scas
and
mov
into
sar
sub
cmp
or
xchg
cwtl
inc
gs
push
stos
and
int
popf
mov
outsb
push
push
inc
ss
popa
sbb
jae
aaa
xor
sbb
xchg
gs
mov
mov
mov
pop
jns
rol
inc
xchg
loope
dec
jg
push
fs
push
inc
aaa
cmp
push
gs
ror
mov
pop
xchg
mov
sbb
in
cmc
imul
push
jl
xchg
inc
aas
fs
and
aam
fisubs
pusha
into
addr16
dec
jmp
test
pop
lds
pop
pop
lahf
outsb
mov
sub
jno
ret
iret
mov
cmpsl
push
xor
popa
mov
nop
jl
pop
xchg
push
jge
sub
inc
cmp
push
jmp
xchg
aad
cmp
adc
mov
add
dec
jge
xchg
and
aas
addl
push
push
scas
js
lods
sbb
mov
adc
and
mov
push
sahf
in
sub
cmpsb
aam
repz
pop
pop
push
adc
adc
add
fistl
fidivrs
int
or
push
pop
sbb
lds
push
aam
enter
sbb
push
imul
jnp
test
out
adc
or
clc
popa
mov
cmp
cmp
dec
push
ret
push
cmp
push
mov
pop
pop
jle
jle
jl
gs
push
pop
ret
cld
inc
xor
cmp
sbb
cmp
clc
pop
into
dec
sub
xchg
xor
sub
jecxz
out
pop
push
sbbb
inc
lea
cmp
push
into
test
mov
mov
orl
daa
mov
bound
and
cmp
sub
or
clc
rcr
fimull
and
aaa
xor
lock
cmpl
ljmp
or
in
pusha
hlt
insl
enter
leave
insl
je
xor
mov
push
sub
mov
inc
faddl
and
jp
push
movsl
int
mov
add
leave
dec
negl
jecxz
cmp
shrd
mov
xor
jg
dec
nop
xor
std
pop
stc
or
dec
stos
xor
push
in
pop
outsl
lds
jle
cmp
dec
cmpsb
mov
push
subl
pushf
mov
push
test
fs
sbb
loopne
or
lret
lds
movl
movsb
in
fnstcw
and
fdivs
mov
xor
sarl
enter
adc
out
and
mov
cltd
and
adc
dec
test
cmpsb
mov
push
and
int
stos
xchg
out
push
movsb
inc
mov
andb
sub
movsl
mov
inc
fimull
popf
stos
out
ficoml
stos
mov
pop
jae,pt
jle
mov
repz
pop
ljmp
fcomi
sarl
push
into
jnp
icebp
push
pushf
mov
dec
es
imul
push
jns
inc
cmp
and
xorb
xchg
orl
jl
or
lcall
pop
jo
jnp
lods
add
jbe
inc
sarl
dec
ljmp
inc
inc
xor
rcrb
popa
andl
gs
lret
leave
cmp
add
lahf
and
and
loope
les
rorl
divb
jae
lods
iret
mov
popf
sahf
shl
js
add
imul
repz
push
mov
push
push
dec
scas
fdivl
jl
cmp
out
in
jecxz
pop
movsb
add
daa
movsl
andl
inc
jp
inc
outsl
mov
inc
lcall
lods
add
outsl
loop
pop
add
imul
sub
outsl
lret
pop
movsb
nop
inc
negl
xor
dec
push
inc
lds
pop
icebp
or
out
xor
bound
sub
movsb
or
sbb
pusha
into
push
push
pop
xchg
mov
repnz
aaa
and
xor
rcll
fdivrs
pop
jp
shl
cmp
push
outsl
push
out
aam
mov
in
xchg
mov
mov
mov
or
or
sahf
daa
stos
ss
lcall
stc
jecxz
add
mov
mov
mulb
add
adc
mull
fstpt
dec
or
pop
fs
jg
pusha
dec
imul
jo
or
insl
insb
pop
sub
movsb
out
mov
lcall
push
cld
int
add
xor
or
mov
xchg
arpl
dec
sbb
ljmp
pusha
cli
fimull
xchg
push
push
dec
decb
repnz
in
lods
inc
push
adc
mov
dec
sbbl
mov
sub
xchg
dec
dec
loop
sub
mov
pusha
push
das
loopne
mov
popl
imul
lods
decl
stc
sahf
lds
inc
pop
movsl
mov
or
mov
lds
mov
add
scas
pop
stc
jl
jg
loopne
subb
jno
fstpl
in
lock
xchg
das
stos
gs
dec
adc
adcb
push
xchg
inc
push
icebp
xchg
repnz
or
pop
or
icebp
ja
bound
xor
movsl
fcmovnu
push
xchg
jmp
sbb
mov
lret
xchg
jmp
mov
pop
aam
lods
insl
cmp
cmpsb
addr16
mov
popf
inc
cmp
aam
mov
jg
in
inc
adc
lret
fnstenv
push
in
into
inc
jb
test
mov
test
hlt
pusha
js
das
lods
outsl
out
cmp
mov
int
lahf
js
movsl
jg
js
fstl
mov
xchg
jbe
cli
mov
dec
mov
xor
incb
addr16
mov
stc
cmpsb
lds
loop
mov
jbe
ret
mov
or
popa
mov
popa
test
movsl
stos
sbb
stos
cmp
and
and
lret
cmp
lahf
jle
fwait
sbb
out
andnps
aas
or
inc
push
sbb
fbstp
js
mov
xor
dec
add
xlat
or
icebp
jg
ret
test
xorb
mov
jmp
adc
imul
shll
push
dec
xor
sub
or
jbe
fdivp
pop
pop
mov
mov
outsl
ret
jbe
adc
pushf
insb
pop
and
or
sbb
push
dec
add
repz
out
out
jmp
jnp
imul
inc
vcvttpd2dqx
or
in
test
faddl
mov
fstpl
jge
push
or
sbb
pop
jae
fcoml
jne
dec
sub
stos
jge
shlb
cmp
gs
int3
enter
dec
ds
loope
fistl
test
mov
sbb
or
and
sub
lret
lods
xchg
leave
xchg
sub
pop
sub
mov
notl
jnp
test
rolb
data16
sbb
mov
lret
cltd
dec
push
mov
jbe
cwtl
xor
frstor
roll
nop
jae
cmp
jg
jb
aaa
arpl
dec
sbb
dec
or
fdivl
cmp
les
sbb
push
repnz
adc
pop
in
dec
sub
cltd
ficompl
sbb
pop
xlat
pop
lcall
push
or
leave
addl
push
mov
out
cwtl
pop
iret
xchg
jo
lcall
insb
subl
cmp
les
push
repz
lds
mov
push
mov
mov
jl
fwait
add
idivl
fcmovbe
and
leave
mov
dec
int
mov
test
ja
rcl
test
movsl
das
add
iret
jns
loopne
mov
cmpsl
adc
adc
mov
inc
out
rcrl
and
push
testb
inc
cld
inc
imul
ret
in
adc
push
cmp
hlt
std
imul
and
cs
enter
pop
and
mov
sub
cwtl
lcall
arpl
mov
adc
mov
subb
lods
add
mov
fldcw
ds
dec
pop
pop
inc
inc
or
sub
aaa
neg
push
mov
enter
imul
cmpl
mov
addb
jns
das
fistpl
cmc
je
test
and
cwtl
frstor
mov
in
mov
jp
mov
das
or
xchg
fwait
lock
xor
rorb
and
cwtl
fnstcw
or
mov
fadds
add
cmp
iret
adc
cmpsl
jp
cs
addl
loop
jo
and
push
inc
shll
xchg
lahf
dec
mov
mov
test
imul
cwtl
push
push
push
repnz
ljmp
sbb
scas
fsubrl
and
daa
ret
aam
jae
sbb
nop
fisubrs
lcall
mov
jl
movsb
pop
lahf
mov
xchg
sbb
cmp
inc
shlb
cmp
pop
pop
pop
bound
add
push
outsl
pop
clc
shll
jmp
adc
lods
mov
sahf
in
sub
cmpsb
popa
mov
test
movsb
mov
inc
test
pusha
cmp
add
mov
lock
std
mov
mov
dec
sahf
pop
inc
arpl
cs
pusha
xchg
mov
nop
aam
repnz
test
cmp
subl
mov
cwtl
xor
add
push
insl
cwtl
push
inc
in
lahf
loopne
xchg
in
push
loope,pt
scas
jae
mov
loopne
mov
es
les
mov
dec
imul
scas
arpl
sub
cmp
arpl
loopne
scas
shll
nop
dec
mov
popf
xchg
sbb
test
dec
pop
and
pop
inc
pop
sub
test
stos
mov
ret
call
sub
rcll
movsb
push
es
mov
jge
xchg
mov
mov
js
mov
push
test
notb
ds
into
loop
mov
xchg
and
repz
or
adc
mov
xchg
cmp
mov
cltd
sub
push
mov
sti
inc
das
int3
mov
call
fwait
out
loopne
push
sub
inc
ficoms
lret
jno
push
mov
or
mov
out
paddsw
sbb
dec
push
push
mov
mov
test
pop
push
in
sbb
inc
lods
fsubp
shll
mov
ljmp
jnp
jmp
sbb
mov
lret
pop
out
or
xchg
insb
mov
jecxz
rorl
cmpsb
mov
fisttps
and
daa
mov
mov
icebp
sbb
jle
pop
jmp
daa
add
hlt
adc
imul
les
mov
mov
lcall
test
and
popa
xor
fbld
push
xchg
mov
psubb
inc
loop
fwait
pop
pop
inc
int
or
jmp
jl
inc
mov
push
sar
sbb
loope
sub
sbb
sbb
xor
in
xchg
repz
mov
jg
sbb
dec
addb
push
test
stos
push
push
pop
lods
loope
les
inc
sbb
or
jl
xor
push
shl
es
out
pusha
jle
jne
add
ljmp
fxch
sar
xor
mov
jmp
xchg
icebp
inc
dec
inc
std
pop
dec
mov
stos
xor
xorl
push
jno
cltd
add
leave
orl
fisttpll
push
push
in
ss
loope
adc
out
loope
nop
pop
sbb
or
in
cmpsb
push
push
sbb
fidivs
mov
adc
jns
jg
and
push
jg
inc
mov
xor
aad
fwait
xchg
fadd
je
clc
xchg
cmp
aaa
pop
fistpl
sbb
mov
in
test
adc
es
sbb
lret
jg
in
sbb
pop
iret
inc
add
jle
mov
clc
std
sub
imul
mov
popf
ljmp
sbb
stos
stos
sbb
hlt
add
xchg
insl
ljmp
adc
les
sarb
repz
fstps
fs
mov
mov
into
push
xor
loop
inc
xchg
cli
loope
lock
or
mov
jg
mov
cmp
or
sub
cmc
push
push
ljmp
mov
loopne
dec
push
pop
repz
andl
jp
push
or
push
inc
and
cld
cld
movsl
loope
jne
add
pusha
cmp
outsl
and
pushf
pop
cmp
pushl
pushl
enter
andl
adc
sbb
sub
mov
push
push
in
sbb
xchg
mov
cltd
sbb
mov
testb
test
sub
push
loope
sub
pop
test
divl
push
hlt
mov
shrb
or
out
fs
cltd
xor
outsb
sub
test
jecxz,pn
fmull
fs
add
addb
subl
cmp
cmpsl
cmc
sub
cmp
push
inc
orl
mov
mov
adc
or
add
mov
lods
fidivrs
insb
inc
outsl
outsl
and
jmp
and
mov
cmp
cmp
loop
js
outsb
cmp
sub
out
add
mov
in
dec
loopne
scas
lcall
inc
push
test
and
shll
adc
pop
inc
ds
inc
add
or
push
dec
sub
clc
sbb
movsl
jnp
das
in
add
or
inc
cmp
xor
push
jecxz
mov
mov
push
jp
pushf
test
xchg
test
pusha
js
arpl
leave
das
dec
push
int
xchg
xchg
stos
jnp
in
mov
and
cmp
loopne
out
mov
jle
sbb
repnz
subl
or
pop
subb
sub
sub
sbb
or
sbb
test
xlat
cmp
daa
add
rcl
je
iret
add
mov
ret
pop
call
repnz
jns
scas
cltd
leave
pop
fcoms
aas
popf
add
cli
data16
cld
mov
pop
mov
adc
insl
cmpsb
call
push
ficomps
pop
popa
push
add
add
test
mov
lret
scas
jg
sbb
adcb
pop
jp
or
lds
out
xchg
pop
xor
movsb
pop
push
inc
fwait
add
lea
inc
repz
popf
lds
stc
and
stos
mov
sbb
pop
mov
inc
adc
cmp
cld
xlat
pop
sar
lcall
je
in
aas
inc
sbb
push
notl
mov
popf
scas
jmp
cld
xchg
inc
cmp
inc
ds
mov
cmp
test
inc
xor
js
jle
push
and
mov
push
pop
dec
push
adc
xchg
in
fnsave
lret
jge
fsts
sbb
ljmp
cmp
jo
or
add
pusha
adc
inc
pop
cwtl
inc
adc
pop
loope
push
pop
cmc
mulb
adc
cmp
aaa
mov
cmp
xor
lods
xchg
imul
sub
add
mov
sbb
loope
jns
lock
xor
mov
nop
shrb
jl
stc
andl
inc
movsl
mov
pop
inc
pop
fdivs
js
adc
dec
mov
mov
fcomp
outsl
cmpsl
sbbl
loop
jnp
dec
and
cmpsl
mov
repz
inc
sub
jo
bound
dec
scas
gs
loope
jg
sub
jne
mov
mov
cmp
xor
lock
sub
pop
xor
adc
stos
test
cld
adc
pop
cwtl
in
mov
sub
fwait
aad
jp
and
negb
data16
cmp
jle
xchg
fcoms
dec
mov
scas
in
push
and
mov
adcb
jnp
jmp
adc
jbe
addr16
xchg
xor
mov
xchg
mov
mov
add
add
mov
cld
nop
push
ds
cmpsl
xor
outsb
cmp
xchg
out
pop
into
adc
jg
add
mov
jae
mov
repnz
push
add
pop
pop
pusha
xor
xchg
cwtl
push
shrl
push
aas
popf
lret
aad
scas
fnstenv
mov
jae
jl
int
js
mov
sub
pop
movsb
xor
aam
sti
es
jbe
shlb
xlat
repz
outsb
and
fildl
dec
dec
testb
cli
xor
iret
lods
popa
insb
cwtl
pcmpeqd
xchg
arpl
jl
cmpb
sub
cmpsb
pushf
sub
add
push
mov
fldcw
jnp
mov
xorl
es
sarb
mov
xor
jae
ljmp
sub
stos
pop
fs
sbb
stos
mov
or
hlt
aam
jle
movsl
lods
xor
int3
pushl
mov
jnp
int3
ljmp
cmpsl
mov
xlat
cmp
push
mov
insb
sub
rcl
sarl
xchg
je
fst
mov
lods
cld
ljmp
mov
cmp
movb
add
pop
adc
sbb
repnz
sub
xchg
insl
pop
lahf
cmp
out
adc
scas
enter
lock
je
repnz
or
push
mov
pop
dec
out
movb
xchg
inc
test
or
and
loope
arpl
push
insl
lahf
dec
sbb
push
pop
xor
icebp
lods
inc
mov
lock
adc
xchg
movsl
xchg
and
outsl
xor
lret
scas
or
lods
cmp
and
rorl
push
mov
shr
or
pop
sbb
pushf
imul
arpl
out
jae
enter
adc
jmp
imul
jge
mov
mov
jl
xchg
and
loop
pop
imul
inc
and
out
out
cwtl
stos
mov
dec
test
mov
xor
pop
sub
xor
scas
les
and
movsb
xchg
shr
es
ds
int3
mov
call
int
das
or
cltd
mov
mov
inc
pop
dec
pop
test
bnd
inc
lahf
xor
cmc
jge
in
push
xchg
dec
push
dec
addb
std
mov
or
sbb
cmp
ja
push
mov
icebp
lds
iret
add
gs
addr16
or
mov
push
cli
mov
mov
mov
xor
adc
mov
cltd
cmp
lods
sbb
mov
push
mov
nop
addr16
xor
mov
repz
mov
mov
or
mov
and
mov
loope
and
into
loopne
out
loope
xor
test
mov
roll
mov
cmc
dec
push
jo
popa
stos
pop
orb
cli
mov
inc
jge
pop
dec
js
inc
in
arpl
push
jge
push
push
sti
inc
das
addr16
imul
lds
or
repnz
popa
mov
stc
jns
imul
lock
mov
cmp
jne
das
sub
pop
xchg
sarb
flds
sub
notl
or
xor
fs
scas
xchg
push
mov
sbb
int
dec
mov
jb
push
rcll
dec
jb
leave
outsl
mov
or
xchg
fbstp
push
js
in
sbb
fstps
mov
cmp
cmp
sub
xchg
jl
xor
outsl
adc
mov
cmp
loope
call
in
ret
scas
int
cld
shlb
outsl
ucomiss
mov
mull
dec
jp
sbb
xchg
ret
mov
cmpsb
ss
fs
jnp,pn
adcb
jb
pop
dec
xor
jbe
scas
xor
pushf
pop
enter
int3
cs
shlb
xchg
jl
xchg
test
popf
mov
xchg
cmp
lret
lret
ljmp
cmp
dec
and
ret
sahf
push
push
les
leave
pop
stos
pop
pop
push
repz
adc
imul
pop
sahf
sub
xchg
xchg
shrb
lret
in
call
cli
dec
jmp
push
cmp
stos
mov
cmp
ror
lods
sub
nop
enter
jno
xchg
std
push
mov
fsubp
lods
movsb
popa
jp
clc
jecxz
idivl
cltd
inc
ror
push
in
stos
lods
inc
pop
popf
mov
stc
jecxz
mov
fcmovu
fstpt
cmpsl
ror
sub
adc
add
xor
jnp
rcrb
add
push
or
imul
cmp
inc
sub
pop
push
cmp
les
ret
pushf
sub
pop
es
data16
loop
inc
sub
xchg
fdiv
mov
sti
and
dec
dec
aad
mov
mov
mov
push
clc
aam
out
jno
or
popa
outsb
jg
and
adc
jae
sbb
fsubrp
xor
or
test
jnp
or
sbb
xor
in
enter
scas
int
jno
jne
cmpsl
add
icebp
cmpsl
mov
xrelease
stos
mov
data16
jg
pop
and
mov
sub
and
xor
cmp
enter
dec
jbe
fldz
nop
mov
in
les
xor
loope
dec
add
and
fmulp
jl
shl
add
dec
and
push
insb
ds
movsb
div
shl
push
sub
sub
push
int
dec
mov
xor
shl
imul
out
xchg
sub
outsl
cmp
movsb
loope
mov
cld
lahf
lea
and
test
mov
shlb
cltd
push
pop
or
or
sbb
mov
stos
sub
outsb
jge
repz
shrl
jge
jo
test
inc
jo
or
jmp
dec
cmp
xchg
out
fnstcw
dec
lods
pop
inc
jb
sti
cs
lods
push
dec
sbb
inc
mov
ljmp
dec
je
sub
ficompl
out
ljmp
insl
inc
pop
lods
int3
rolb
mov
cltd
fstps
dec
sbb
rol
pop
add
dec
cmp
addb
sbb
adcb
sub
adc
cmpsl
sub
inc
or
ret
jge
adc
test
xchg
in
or
mov
testb
cmp
xor
lock
mov
movsl
ljmp
adc
sbb
sub
sarb
outsb
subb
cs
lock
xor
popf
add
mov
imul
mov
stos
dec
mov
aas
cmp
mov
add
adc
loop
outsl
mov
clc
adc
xchg
pusha
movsb
nop
lods
lcall
rcr
bnd
enter
inc
dec
gs
rcrl
loopne
push
clc
jg
xchg
xor
cmp
outsb
popa
cli
jbe
jo
sub
xchg
out
pop
jnp
push
cmpsb
xor
insb
xchg
ja
std
or
pop
push
xlat
and
pop
imul
push
es
inc
sub
jne
push
adc
jns
jbe
pop
in
xor
sbb
out
loope
std
scas
repz
xor
push
pop
mov
mov
enter
test
outsb
iret
push
int
std
enter
xchg
jle
mov
sub
cmpsb
stos
inc
xchg
adc
cwtl
pusha
flds
jg
pop
mov
mov
cmpsl
div
icebp
out
cmp
call
sub
mov
sub
cltd
sbb
je
dec
ss
data16
inc
mov
mov
cmpsb
mov
ds
push
push
js
push
push
pop
push
adc
shlb
shl
iret
jp
jmp
cwtl
add
pop
mov
pop
testb
pusha
mov
and
pop
adc
adc
inc
inc
dec
xor
andl
stos
xor
dec
cmc
fwait
loope
cltd
adc
adc
and
adc
sahf
jno
ret
cmc
sub
aad
mov
cmpsb
imul
pop
lret
lret
sub
imul
out
std
fs
rcl
push
ds
repz
push
filds
out
mov
add
xor
arpl
lret
xchg
jle
lret
xor
push
movsb
mov
xchg
pushf
out
cli
add
sub
add
mov
pop
dec
dec
dec
out
xchg
mov
xchg
int
dec
pop
push
ja
clc
adc
cmpsl
push
or
inc
lcall
dec
jl
into
cmc
outsb
je
jns
and
push
fists
retw
sbb
scas
fsubp
call
jmp
nop
mov
pop
xor
lret
dec
bound
xchg
out
mov
xor
xor
daa
lods
sbb
stc
mov
lea
mov
clc
dec
add
js
ja
in
arpl
pop
or
inc
xor
jb
mov
cld
xchg
adc
mov
mov
dec
pushl
mov
mov
push
lret
mov
pop
mov
cmc
adc
push
sbb
ret
inc
add
jle
fwait
mov
mov
mov
aaa
fwait
jmp
int3
ja
xchg
pusha
dec
sub
lods
or
jo
and
scas
xor
in
and
leave
inc
or
fs
in
cmpsl
outsl
push
jb
int3
les
inc
dec
ja
cmp
lods
mov
ljmp
cmp
adcb
lods
xor
or
lea
inc
movsw
dec
inc
popf
sbb
dec
scas
test
movsb
rcr
push
mov
push
bound
out
sub
rorl
mulb
mov
mov
sbb
in
xor
adc
into
pop
pop
cmpsb
pop
adc
lahf
int3
inc
adc
cmpl
jnp
sbb
cli
mov
sub
sbbl
fidivrs
push
adc
xchg
imul
dec
xchg
xor
add
fisttpll
mov
jns
mov
sbb
jle
jmp
sahf
cld
aam
int
mov
jo
mov
adc
addr16
add
and
sbb
arpl
pop
js
in
xchg
inc
mov
test
or
sbb
cmp
and
aad
lds
imul
cmp
jge
sbb
js
xchg
sub
hlt
push
shlb
add
or
cli
cmpsb
daa
or
loop
add
inc
lock
dec
fcmovb
mov
fnsave
lea
enter
loop
lods
jo
imul
iret
dec
jg
int
rclb
xlat
popf
outsl
mov
push
sub
push
xor
mov
or
lock
test
in
inc
cmovno
adc
and
push
in
add
dec
out
sub
into
xchg
cltd
mov
mov
xor
pop
dec
sbb
pop
push
jo
push
mov
mov
std
sarl
add
mov
dec
xor
pop
sub
inc
mov
sbb
data16
sub
xchg
mov
xchg
lds
mov
jg
xchg
aaa
push
insl
data16
cs
mov
push
aas
test
imul
xor
add
ret
pop
sub
out
fldl
fisubrl
lods
stos
jp
inc
mulb
sti
loope
ja
repz
jp
pop
mov
sti
stc
mov
sti
sahf
lret
push
imul
mov
cmp
add
or
rcrb
imul
and
xchg
jmp
mov
insb
enter
loope
sub
hlt
imull
mov
cmpsl
pop
scas
inc
lods
test
push
insb
mov
mov
lret
push
int3
notb
or
fmuls
addr16
sbb
pop
jb
push
scas
stc
mov
sub
jecxz
dec
pop
cmp
mov
outsl
pop
inc
sub
dec
sbb
cltd
fidivl
stos
test
mov
imul
subl
mov
add
cli
pop
aas
repnz
mov
fnstsw
loopne
in
mov
dec
repnz
adc
cld
mov
jnp
pop
cltd
add
xchg
push
ljmp
push
and
into
lcall
inc
leave
jge
jns
cmp
dec
or
cmp
insb
decl
iret
xor
push
dec
fcompl
pop
std
aaa
fwait
xor
add
test
xor
adc
popa
xor
test
cmp
sbb
and
sub
pop
cli
jle
lcall
or
mov
es
xchg
sub
mov
push
push
jmp
cmp
mov
out
js
out
inc
fs
popf
mov
pop
inc
cmp
or
daa
adc
push
pop
and
mov
pop
mov
pop
adc
cli
push
fiadds
add
insb
xor
clc
cltd
repnz
sub
imul
cwtl
push
hlt
and
adc
sbb
std
jecxz
adc
xlat
ds
test
mov
mov
dec
out
xorl
rorb
cmpsb
mov
pop
mov
mov
inc
xchg
lock
dec
mov
imull
xchg
and
adc
int
cs
lock
cmpl
sub
int
js
add
movsb
les
push
std
ss
popl
ffreep
mov
inc
jg
mov
cmp
push
adc
pop
fcmovne
int
nop
in
lods
sub
add
cmp
add
enter
cld
dec
mov
adc
xchg
sub
fistps
out
xchg
sbb
arpl
jmp
push
adcb
pop
nop
jae
int
int
daa
fs
pop
aam
pop
pop
pop
stos
dec
aad
test
subl
cmpsb
hlt
aas
xchg
and
notl
nop
dec
jl
pop
jns
insb
scas
repz
shlb
push
adc
outsl
mov
jg
inc
pop
or
fidivs
mov
dec
xor
mov
add
xchg
fdivs
xor
in
pushf
repnz
sub
popa
add
push
mov
cmp
out
popf
mov
xor
fdivrs
mov
add
fisubrs
xchg
mov
data16
lret
add
imul
pop
mov
push
cmp
gs
push
mov
mov
pop
repnz
add
sbb
inc
les
adc
movsl
cmpsl
cmp
inc
int3
jae
pusha
dec
inc
imulb
popa
jb
jle
xor
testl
cli
cmp
in
fldcw
mov
cmc
inc
jb
push
mov
add
dec
insl
push
cmc
dec
push
cld
mov
push
jnp
leave
test
not
dec
mov
mov
int
mov
adc
sahf
or
dec
daa
lods
fwait
sbb
je
adc
ret
lods
lea
call
xor
mov
sarb
pop
fst
div
ret
shl
xchg
popa
lahf
arpl
in
cmc
lea
shll
ret
lcallw
lods
daa
xor
or
xchg
lods
or
nop
jbe
ss
lock
mov
xor
pop
notl
cld
decb
xchg
xchg
sbb
xchg
pusha
mov
xlat
aam
cld
and
test
loop
iret
addr16
andl
aaa
adc
push
lds
inc
imul
in
cwtl
test
jg
call
or
fnsave
mov
push
mov
mov
mov
add
sub
in
adc
out
aaa
mov
sbb
push
adc
mov
cmp
les
inc
xor
or
or
and
or
sbb
fdivrs
jbe
ja
push
test
iret
mov
inc
dec
or
add
mov
xlat
jae
push
insb
loop
cwtl
sbb
shrl
mov
sbb
fists
add
mov
imulb
xchg
sahf
arpl
in
dec
xor
inc
out
mov
arpl
xor
pushf
inc
sub
fisttps
sbb
pop
jae
adc
mov
mov
xchg
push
or
nop
fidivrl
mov
stc
jbe
into
aam
jg
inc
sbb
ja
ja
pop
sbb
into
mov
mov
mov
or
jl
int
arpl
xor
lods
jl
and
gs
icebp
sub
in
xor
fdivl
pop
sub
xchg
adc
shll
enter
sub
mov
dec
out
clc
dec
fisubrl
shl
or
add
scas
pop
push
or
jp
aad
out
loop
fs
adc
insl
xchg
pop
leave
jnp
lcall
xorl
aad
testl
sbb
pop
inc
mov
add
icebp
push
or
cmpb
mov
jmp
mov
dec
in
mov
sub
pop
loopne
adc
das
mov
ret
pop
lcall
cmp
stos
sbb
ret
push
and
fdivr
pop
loop
jnp
push
pushf
cli
inc
leave
mov
out
fcompl
cs
sbbb
push
add
xchg
mov
int
mov
dec
shll
arpl
jae
cmp
mov
xchg
xorb
imul
and
jg,pn
xchg
mov
jl
sbb
aad
pmuludq
stc
and
out
clc
les
push
mov
int
xchg
es
loope
sbb
dec
xor
lret
push
pop
shrl
mov
ss
push
and
xchg
mov
xchg
shll
or
lods
xchg
test
jmp
xchg
ja
shlb
stc
mov
xchg
lods
pmuludq
pop
aaa
neg
and
rcll
inc
insb
mov
popf
movl
and
push
xchg
inc
sbb
scas
dec
cmpsb
sti
data16
inc
les
mov
out
int
rol
insl
fwait
sbb
hlt
lahf
imul
stos
repnz
test
jnp
gs
cmp
adc
xchg
mov
xor
lods
jae
stos
std
xchg
lret
subl
out
cmpl
push
sub
cmp
fistl
jns
xlat
mov
cmp
mov
fs
inc
push
mov
pop
xchg
ret
mov
xor
out
push
je
fiadds
jp
insb
pop
xor
push
movsl
mov
inc
je
lods
xchg
push
enter
mov
out
xchg
push
jge
test
xor
je
shll
sbb
aaa
lret
cmp
inc
test
cmpsl
cmpl
andb
in
sub
sbb
clc
ficompl
inc
mov
jp
inc
ret
movl
pop
pushl
add
int
xchg
xchg
out
testb
stos
int3
dec
push
push
push
dec
mov
sbb
pop
lds
cld
imul
aad
pop
call
aas
jne
inc
lock
fists
orb
clc
fwait
movsl
push
imul
jns
inc
decb
mov
push
adc
xchg
mov
sbb
or
in
sbb
xor
scas
retw
arpl
addl
out
mov
fldenv
sub
fiadds
movsb
cmp
fcomps
ret
jae
repz
sub
rolb
xchg
sub
sub
std
mov
sti
push
or
ficomps
cmp
fisubrs
ret
sub
das
or
or
lock
jb
outsl
and
dec
lods
mov
jg
or
call
adc
dec
xchg
sbb
jmp
orb
out
xchg
out
cmc
sub
add
mov
sbb
aam
fnsave
xchg
xchg
xchg
pop
jae
dec
jecxz
pop
dec
xchg
mov
mov
cmp
inc
and
fldenv
pop
adc
outsb
shr
das
stos
sub
shr
pop
gs
pop
mov
mov
out
and
push
lods
ror
mov
aaa
repz
jmp
add
fildl
sbb
or
cld
push
leave
dec
fs
mov
bound
cmpb
shlb
pop
loope
mov
and
insb
inc
jne
mov
scas
shll
test
rcrl
movsb
leave
sub
push
stc
jge
out
mov
cmpl
addr16
xor
fs
inc
leave
mov
xchg
or
mov
inc
movsb
mov
fldt
sub
movsb
dec
cmpsb
mov
scas
xor
es
xchg
push
fisubl
sbb
xchg
push
inc
mov
push
inc
pop
adc
into
shr
ss
lock
dec
pushf
adc
push
mov
dec
pop
ret
push
in
in
dec
sub
sub
gs
enter
lcall
mov
shrb
sbb
cmc
mov
stos
xor
test
insb
cmp
and
mov
add
daa
fiadds
in
mov
push
fisttpll
mov
add
pushl
int
inc
push
pop
fsubrs
aas
sbb
imull
bnd
pushf
jl
adc
divb
mov
sub
adc
mov
test
lods
sbb
enter
icebp
js
sbb
int3
mov
hlt
loop
add
scas
pop
imul
jmp
repz
xlat
push
aam
into
and
cmp
aam
mov
jnp
lds
repz
fcompl
imul
sub
mov
jnp
filds
std
stos
fcmovu
sbb
mov
ud2
xchg
jb
push
shl
imul
rorb
inc
mov
js
popa
jno
add
out
inc
jo
cld
inc
mov
pop
ds
adc
mov
shll
push
jae
adc
test
lds
or
dec
jp
ljmp
push
ficoms
cwtl
shll
mov
mov
add
mov
mov
push
enter
cmp
iret
cld
push
jo
xor
daa
repz
rcll
call
adc
ret
cmp
ror
lcall
imul
lret
or
aam
inc
enter
lock
jge
push
test
test
call
mov
iret
js
xor
sub
stos
mov
and
je
or
pop
mov
shll
xor
test
push
lock
loope
sbb
pop
int3
std
mov
pop
push
sbb
js
sub
jnp,pt
dec
incb
out
out
push
mov
dec
mov
mov
pop
imul
inc
mov
fstps
dec
push
fs
iret
test
out
sub
movsb
mov
sub
cli
mov
jno
pop
sbb
shr
imul
add
add
xchg
repnz
cltd
negl
push
ret
test
push
shrb
aad
jbe
ljmp
mov
sbb
scas
mov
and
add
test
mov
scas
imul
mov
jge
mov
cmp
pop
push
fnstcw
and
or
push
dec
dec
shlb
shr
add
xchg
mov
mov
cmpsb
or
cmp
dec
sub
inc
dec
int
aaa
fwait
and
out
inc
sub
or
mov
xchg
notl
xor
int
pop
fimuls
xchg
mov
in
push
jp
jb
pop
mov
daa
es
insb
xchg
xor
int3
sub
call
dec
lahf
shrb
mov
sbb
inc
stos
adc
nop
mov
ss
and
dec
add
out
xlat
sbb
fdiv
inc
cmp
inc
xor
xchg
in
push
sbb
cmp
xchg
test
leave
xchg
shlb
push
js
jecxz
cmpsl
loop
imul
xchg
ret
mov
lods
daa
mov
mov
cld
icebp
hlt
cmpl
pcmpeqd
repz
mov
notb
jae
add
sahf
inc
mov
enter
out
mov
mov
lret
movsl
push
or
in
jge
push
adc
popa
fistpl
dec
cld
icebp
sbb
push
lret
std
jmp
stos
add
adc
out
cmpsl
into
loope
and
xor
mov
int3
xchg
insl
or
xchg
ret
fucom
imul
scas
add
xor
inc
call
mov
mov
jle
cld
mov
movsb
or
fidivrs
mov
adc
cmp
pop
shl
pop
enter
jnp
push
cmpsl
movb
pop
test
fcmovbe
mov
mov
loop
out
loope
and
loopne
pop
sub
cmp
mov
push
and
mov
mov
int
xchg
adc
or
jbe
lret
mulb
movsb
push
dec
and
xchg
sbb
je
addr16
sub
out
repz
loopne
iret
movsl
sahf
sub
aam
ret
jmp
movsl
cmp
inc
push
aas
in
xor
and
add
sub
ret
xchg
out
stc
mov
push
psubsb
hlt
adc
push
ja
mov
mov
mov
in
stc
fucom
je
insb
inc
cs
iret
sarb
test
pop
xchg
jne
aad
xor
repz
jnp
popa
divl
lods
mov
enter
cmp
cmp
push
es
xor
imul
stc
mov
add
arpl
mov
jmp
dec
and
pop
repnz
pop
xor
push
std
call
arpl
mov
fmul
insb
mov
bound
sbb
std
mov
sbb
dec
fs
inc
mov
jmp
inc
xchg
sub
in
in
cmp
inc
fmuls
nop
and
mov
mov
or
jns
hlt
add
lret
lcall
jb
std
ja
jge
pop
mov
arpl
ss
mov
cltd
das
stos
stos
cwtl
cmc
lds
xchg
inc
pop
add
cltd
cwtl
fistl
adc
outsl
movsl
sub
xor
mov
push
pop
inc
lods
popf
cmp
popa
jo
shrl
dec
sti
in
in
in
fwait
lods
add
test
movsl
loop
ljmp
adc
inc
cmp
mov
or
loope
inc
push
mov
push
push
cmc
mov
sbbl
or
arpl
sbb
jnp
shlb
cmpb
loopne
cwtl
in
inc
fs
pop
ret
ljmp
cld
cs
mov
jmp
outsb
mov
xchg
std
lods
xchg
xchg
xchg
bound
popf
call
jnp
and
lret
or
add
mov
lea
push
push
or
cmc
addr16
inc
lods
insb
loop
xchg
cld
aam
repnz
push
ljmp
sub
xchg
sub
rol
fcoml
xor
sub
mov
mov
sub
and
push
adc
and
popa
pop
add
xchg
loopne
out
lods
pop
out
insl
jmp
int3
mov
mov
jl
adc
rcrl
loop,pt
stc
in
mov
inc
popa
cmp
lcall
mov
and
and
push
xchg
jno
cmp
ljmp
test
into
loop
pop
mov
orb
add
incb
jae
in
or
add
mov
aad
push
movsb
fildll
mov
arpl
xor
shrb
in
push
loopne
mov
out
pop
fsub
cwtl
inc
mov
mov
xor
pop
in
jmp
mov
loop
stos
scas
inc
sbb
push
in
cltd
imul
cmp
sbb
xor
sbb
ficoms
push
mov
popf
out
adcb
sub
bts
int
repnz
movsl
sahf
sbb
int3
cltd
out
and
pop
fndisi(8087
hlt
sub
repnz
ret
loop
inc
ja
fldt
jp
icebp
enter
scas
add
push
mov
inc
sbb
sbb
push
mov
dec
adc
out
inc
mov
xor
out
addr16
popa
imul
dec
mov
xchg
adc
outsb
xlat
cmp
stos
jb
pop
ret
dec
cmp
into
jbe
push
xor
cmp
adc
mov
imul
mov
movb
mov
or
jecxz
repz
iret
dec
pop
mov
mov
inc
add
jle
dec
adc
mov
cmpsl
mov
aas
sub
ret
aas
fs
mull
push
mov
outsl
xchg
out
cmc
ds
dec
cmpsb
das
mov
cmc
fdivr
push
or
sub
xor
sub
mov
mov
rcrb
pop
loopne
imul
in
mov
cs
sbb
sahf
lahf
mov
xchg
mov
xchg
add
pop
add
push
les
jg
dec
cli
push
aad
imull
mov
rcll
adc
xor
or
stos
test
xchg
push
lods
push
mov
dec
xor
ret
adc
jl
and
js
cmp
sbb
jp
aas
jge
adc
push
xchg
mov
inc
and
or
out
push
mov
adc
das
jb
icebp
scas
aad
xchg
mov
pop
cmp
imull
jno
mov
mov
ret
imul
cld
pushl
lods
ljmp
push
cmp
iret
sahf
jne
test
mov
cmpl
jecxz
add
jb
adc
push
xchg
and
push
mov
cli
ljmp
inc
clc
push
arpl
popa
or
add
mov
orb
int3
xor
xchg
imul
popa
add
ret
rsm
fsubrl
popa
jge
sbb
cmpb
push
jo
mov
out
sub
cld
xor
loop
aas
gs
in
jecxz
pop
pop
inc
sbb
dec
outsl
into
sub
cmpsb
mov
add
mov
mov
mov
mov
mov
stc
out
int3
cli
pop
das
push
daa
ret
test
cmp
jmp
adc
xor
add
push
das
fdivs
iret
add
sub
imul
shll
dec
push
jbe
and
mov
pop
out
fsubr
loope
arpl
fildll
pop
cmp
imul
frstor
call
mov
loop
xor
jecxz
xor
ret
lret
aas
jns
aas
mov
or
seto
lea
cld
ja
rol
loope
pop
pop
or
ljmp
lods
xor
pushf
and
mov
imul
ja
xorb
ds
cwtl
cld
out
leave
push
aaa
test
lds
dec
sub
lret
jno
in
mov
xchg
mov
xchg
fsubl
ficomps
or
push
repz
outsb
popa
jnp
cld
xchg
mov
dec
push
push
mov
lods
jnp
push
ss
lock
lcall
pusha
mov
iret
lahf
scas
inc
mov
imul
adc
fcmovb
and
aas
dec
aas
sahf
js
cli
or
lds
xchg
xor
xchg
mov
xchg
sub
std
inc
add
das
sti
aam
aas
mov
mov
dec
int3
push
addr16
xor
push
ljmp
lret
outsb
shll
mov
mov
inc
cmp
sub
mov
and
pop
xchg
stc
pushf
bound
shrl
xor
jb
lahf
lret
sub
rep
imul
push
xchg
lcall
test
outsl
dec
cmp
xlat
adc
gs
arpl
int3
insb
imul
add
mov
jnp
aam
int
and
xchg
sbb
cmp
xor
sub
jg
xor
sub
pop
dec
mov
lea
loop
adc
or
sbb
pop
mov
popf
lret
scas
loope
dec
mov
dec
insl
sbb
xchg
xchg
pushf
push
pop
mov
pop
adc
dec
iret
mov
and
inc
pusha
jnp
mov
in
insl
shrb
sub
lcall
jl
push
jge
add
mov
stos
cs
dec
and
sub
negl
popa
icebp
dec
inc
xor
and
jg
fnstenv
xchg
pop
cs
mov
insl
jbe
cmpsl
jo
push
aad
or
sbb
lods
push
test
mov
xchg
xor
ljmp
iret
xor
mov
addr16
js
mov
push
mov
fisubrs
dec
or
inc
hlt
clc
adc
int
out
je
stos
xchg
leave
push
xchg
fisubl
xor
pop
pop
jne
mov
sbb
shl
mov
mov
add
lods
cmp
pushf
lcall
aam
inc
rcrl
dec
sbb
cs
mov
aaa
cli
sub
push
popf
icebp
or
dec
add
xor
xor
dec
xor
mov
jns
adc
jmp
roll
mov
leave
clc
adc
sbb
mov
mov
inc
leave
dec
ja
pop
sub
sub
sub
mov
popa
mov
rcrl
outsb
dec
add
adc
out
mov
jne
push
popf
pop
mov
ficoms
in
data16
js
cmp
popf
mov
adc
lock
cmp
xorb
add
ds
cld
cmpsb
mov
sbb
mov
mov
nop
ljmp
pop
pop
sub
pop
inc
jmp
xor
cmp
ret
cmc
mov
push
out
pushaw
popl
movsl
outsl
inc
jb
out
outsb
adc
iret
out
outsl
sub
and
clc
loopne
mov
je
notl
inc
add
add
xchg
or
and
sbb
outsl
and
icebp
mov
inc
add
cltd
xchg
pusha
es
popf
test
mov
outsb
cmp
mov
addr16
adcb
bound
insl
movsb
xor
arpl
push
sub
jg
movsl
inc
dec
xlat
and
and
push
add
xlat
imull
hlt
loope
jl
mov
testb
ror
xor
jo
add
and
pop
pop
mov
push
cld
adc
xchg
lock
shlb
loop
loope
jnp
insl
xlat
mov
movsb
sub
mov
cs
sbb
xchg
pop
fnstsw
lds
push
and
test
mov
fmull
sub
or
inc
popf
pop
inc
sbb
in
fistpll
jns
or
push
xchg
loop
inc
mov
dec
ds
call
inc
test
fsubs
pop
stos
int
pop
hlt
cwtl
jnp
mov
std
das
or
cltd
les
nop
imul
sub
in
jae
out
js
movsb
adc
in
arpl
scas
rcr
xor
sbb
aaa
pop
pop
pop
ds
stc
mov
mov
stos
inc
xor
call
cmpsb
or
xor
mov
cli
ljmp
nop
imull
cwtl
jl
dec
testl
imul
cmc
mov
test
pusha
ret
call
sub
in
lahf
dec
fildl
mov
and
adc
or
xchg
das
std
sbb
jp
and
gs
sub
addr16
icebp
or
jg
sbb
jmp
imul
mov
gs
jmp
addr16
add
xor
sub
das
mov
or
xchg
xchg
inc
inc
jb
cwtl
pusha
xor
add
sub
dec
sub
cld
mov
sti
pop
fs
jle
mov
hlt
mov
in
adc
sbb
xchg
insb
lods
add
push
das
mov
lods
subb
bound
dec
test
pop
hlt
push
xlat
leave
loopne
pop
cmpsl
xchg
cmpsl
push
lret
les
mov
les
add
stc
lret
mov
sti
lcall
mov
lock
push
cmp
into
xchg
pop
add
arpl
fs
mov
mov
pop
inc
into
outsb
out
cmp
andl
loope
or
call
xorl
jae
pop
cmp
lret
es
or
pushf
pop
add
jno
sub
add
lahf
cs
push
out
es
ret
pop
loopne
xchg
call
xchg
sti
das
add
cmpsl
sti
lds
xchg
ficomps
add
or
les
xor
or
jae
xor
and
add
pop
aad
cli
int
sub
jno
cmp
fs
bound
clc
rclb
adc
insb
movsl
inc
outsb
negl
dec
push
rorl
aad
fsubr
ss
fisubrl
test
fcoml
daa
push
mov
mov
dec
mov
int3
aad
mov
adc
jmp
mov
xor
dec
adc
cmp
cli
fwait
outsb
cld
push
repnz
mov
ds
lcall
pop
ret
icebp
jle
push
xor
loope
sbb
popa
loop
jne
sub
popf
mov
clc
pop
mov
mov
cltd
and
jb
dec
cmp
and
xor
jl
lahf
push
mov
js
popa
out
dec
mov
insb
and
xor
sub
pop
fcomp
aam
jnp
sub
or
xchg
jecxz
pop
frstor
pop
sbb
jg
mov
pop
xchg
iret
cmp
mov
inc
xor
divl
adc
int3
jmp
pusha
data16
decl
fisttps
dec
clc
bnd
rcl
hlt
or
and
test
jbe
and
push
jns
xchg
mov
movsb
clc
lahf
movsb
adc
pop
push
dec
leave
loop
outsl
stos
fmul
scas
popa
das
rolb
das
xor
mov
xchg
and
jnp
lods
fnstsw
sbb
ret
lods
add
mov
cwtl
mov
push
xor
popf
jb
dec
stos
sbb
addr16
out
cwtl
and
fistps
mov
idivb
add
pop
cmc
pop
ds
repnz
push
dec
hlt
add
pop
ret
jnp
rcrb
nop
push
fidivs
pop
test
jg
inc
aad
push
imul
push
js
push
je
push
testb
inc
xor
sbb
push
lea
push
fldl
sti
mov
sbb
jecxz,pt
xchg
pop
mov
je
mov
jns
push
and
andl
scas
or
xchg
pop
push
ret
bound
lret
mov
sub
jae
aaa
stc
mov
inc
loopne
jmp
stc
leave
mov
pop
cmp
mov
jg
or
adc
push
je
xor
jge
lods
popf
stos
pop
xchg
bound
fdivs
mov
faddl
cmp
out
xchg
sahf
pop
lods
in
popa
sbb
in
loop
mov
idivl
ret
add
inc
orl
shr
mov
mov
cld
cmc
or
dec
jnp
dec
or
and
pop
dec
jl
and
gs
cmp
ja
cmp
mov
mov
insb
xchg
in
inc
insb
fists
in
out
push
flds
mov
jle
inc
ret
sub
ds
enter
pop
sub
sbb
push
dec
test
test
lcall
stos
daa
and
xchg
mov
pop
out
dec
and
sbb
inc
loop
mov
dec
cmpsb
lds
mov
std
inc
repz
jae
lret
push
mov
aaa
daa
fisubrl
in
aas
into
test
nop
xor
mov
or
stos
xor
jnp
fmuls
jecxz
ss
cmc
leave
ss
loopne
repz
or
xchg
leave
pop
pop
in
add
inc
mov
adc
mov
scas
dec
jns
mov
mov
mov
and
lret
mov
xor
ljmp
mov
or
jle
mov
dec
and
aam
mov
xchg
adc
fists
scas
lea
jns
adc
fs
out
mov
push
sbb
lock
or
out
cmp
dec
aaa
sbb
imul
inc
mov
lcall
add
adc
subl
int3
fwait
mov
incb
cmp
scas
add
mov
push
adc
sti
orl
lcall
push
push
in
mov
out
mov
mov
jg
sbb
push
dec
adc
mov
arpl
dec
leave
jp
shll
subb
lds
in
call
mov
mov
dec
or
xlat
pop
xor
jmp
imul
inc
stos
and
dec
loope
push
stos
cmpsb
cld
jne
mov
cmp
adc
inc
fs
jg
vpmacssdql
das
test
ror
mov
ret
push
mov
pop
daa
mov
or
mov
fwait
sub
loop
push
aam
lret
fwait
xlat
mov
daa
jo
inc
xchg
shrl
mulb
xor
dec
pop
sub
dec
or
inc
jb
push
pop
push
iretw
add
and
adc
lret
pop
popf
mov
mov
cld
rcrl
mov
mov
pop
dec
fsubrs
repz
into
cs
xor
pop
hlt
mov
inc
xor
or
pushf
mov
sub
sub
loop
jmp
push
mov
xchg
repnz
inc
stc
jmp
push
dec
aam
jbe
clc
orl
repz
push
fstps
adc
add
push
sbb
sub
inc
xchg
sbb
insl
or
mov
pop
cmp
imul
inc
mov
sbb
inc
daa
xchg
xor
pushf
adc
std
xlat
cmp
cs
dec
push
and
or
lcall
sub
jae
mov
fadd
cmpsb
jnp
repz
mov
adc
in
enter
imul
jo
mulb
lock
in
lret
xor
push
sbb
in
sbb
lea
adc
xchg
je
in
and
sti
popa
ss
add
cltd
mov
hlt
lea
stos
fnstcw
xchg
mov
lds
fdivl
xlat
dec
dec
lds
and
addr16
pop
lods
sbb
adc
cs
mov
cld
dec
cmc
fbld
and
jg
dec
inc
xchg
insb
cltd
mov
pop
sahf
es
cmp
fwait
jge
xor
mov
int3
push
mov
dec
icebp
xchg
mov
adc
cs
hlt
andb
adc
lock
mov
fisubrl
xorb
lret
adc
xor
push
test
enter
gs
cwtl
scas
repnz
mov
adc
mov
pop
mov
test
add
jnp
add
movsb
add
nop
mov
xchg
pop
stos
or
test
and
divl
out
dec
insl
repz
je
or
pop
xchg
loope
cmp
mov
mov
pop
mov
psadbw
int
sbb
mov
sbb
arpl
push
icebp
jl
mov
ljmp
push
das
or
flds
cmpsb
fldcw
or
add
and
pop
fists
xor
lret
lods
shll
xchg
adcb
scas
jae
or
cli
leave
push
les
movsl
add
add
mov
sub
std
lret
lret
lods
mov
fistl
cmpsl
lret
subl
lcall
push
cwtl
f2xm1
mov
loope
int
je
lock
ja
or
dec
mov
xlat
or
adc
xlat
cmp
dec
aam
or
and
ja
inc
js
pop
int3
cmp
add
rorl
sbb
jnp
rorb
xchg
aas
je
nop
sub
lds
bound
xchg
jecxz
gs
jg
xor
inc
aam
mov
mov
loop
add
pop
jno
scas
cltd
cmc
mov
mov
test
in
movsb
lea
stc
pop
out
xor
test
lret
adc
nop
sub
jns
mov
rcll
xor
js
push
nop
add
sbb
push
popa
lods
mov
call
mov
aas
mov
adc
in
sub
insl
or
fidivrl
xor
jl
bswap
pop
outsb
lret
mov
jge
dec
jge
jle
add
int
inc
cmp
ss
fists
loop
inc
adc
leave
stc
dec
insb
mov
cltd
adc
mov
xor
clc
mov
cli
push
adc
fprem1
push
ljmp
pop
test
faddl
jg
jge
fisubrs
notl
mov
fmuls
loope
cmp
in
int3
sti
mov
xchg
xor
mov
push
dec
mov
lods
adc
data16
roll
xchg
es
rcll
sarl
inc
jo
dec
std
cld
fcompp
xor
adc
sub
cmpsb
mov
jnp
test
dec
push
push
mov
fdivrl
jae
mov
popa
jmp
dec
add
outsl
jmp
and
jne
call
out
sub
cmpsl
rcr
or
insb
mov
test
adc
jge
testl
lock
sub
out
or
loop
pop
pop
mov
pop
test
test
or
xchg
orb
xor
cld
push
mov
sbb
mov
dec
popf
orb
adc
jnp
mov
sti
sarl
push
sbb
repz
rorl
add
pop
repnz
jle
pop
push
xchg
les
mov
push
je
shll
cmp
xchg
cltd
leave
dec
subb
fistps
jno
sub
movsb
daa
pop
mov
subb
pop
dec
fnsave
dec
cmovnp
sub
popf
xchg
dec
dec
sub
ljmp
jg
jne
loope
xchg
es
lret
xor
sarl
in
aad
inc
jns
push
imul
cld
jb
mov
jp
mov
push
add
ret
dec
cs
sub
xchg
mov
xlat
pushf
pop
jnp
lods
nop
fucomp
test
dec
push
push
sti
lea
or
repnz
pop
lcall
outsl
mov
sbb
push
and
sub
push
popf
loopne
das
ret
aam
add
add
mov
pop
inc
insb
iret
stos
mov
shl
sub
push
jne
outsl
xchg
in
adc
repz
add
push
cmc
insb
pushf
jo
pop
push
sbb
sbb
cltd
leave
test
add
add
pop
lock
jecxz
stos
jg
in
mov
out
insb
stos
xchg
ficoml
insl
add
cltd
pop
repnz
bound
mov
xchg
dec
rcr
xchg
cwtl
outsb
lret
mov
xorl
inc
lods
es
stos
mov
jne
orl
push
mov
ljmp
leave
fstpl
adc
sub
jmp
test
or
mov
lods
mov
mov
stc
stos
or
jp
dec
fistpll
enter
sbb
add
or
xchg
pop
imul
stc
mov
inc
mov
and
popf
adc
es
pop
sti
adc
ljmp
scas
imul
cwtl
mov
adc
mov
out
xchg
outsl
aas
addb
sbb
pop
lret
pop
xchg
testl
int3
roll
xor
xchg
inc
shrl
rorl
jp
pop
mov
jns
dec
jnp
imul
sarb
je
add
aam
or
mov
cmp
sarb
inc
mov
mov
int
inc
arpl
pop
jmp
std
insl
rcrb
stos
call
imul
rcll
jo
pop
adc
mov
jmp
sub
insb
jo
mov
inc
fdivl
daa
adc
imul
verw
insl
in
push
fstpt
ret
lds
lret
pop
inc
subl
cmp
mov
loope
js
push
les
ficoms
sub
in
dec
xchg
adc
sub
pushf
inc
lods
into
dec
or
aad
adc
in
fwait
mov
fmull
add
pop
lahf
xor
sar
xor
imul
data16
adc
lret
ret
pop
cltd
pop
mov
ds
outsl
or
test
call
js
std
inc
dec
or
sbb
add
mov
and
data16
pop
neg
adc
shll
push
add
and
std
xchg
xor
cmp
xchg
xorl
icebp
int
jb
mov
jl
mov
mov
call
add
push
test
xchg
xchg
push
pop
mov
call
cmp
and
sub
xchg
sbbb
ficoml
mov
repz
fildl
mov
add
scas
mov
push
sbb
fisttpl
sub
add
cmp
mov
push
movsb
push
jne
sub
cmp
pop
data16
add
xor
mov
xor
and
dec
push
adc
and
push
js
and
test
ds
cmc
xchg
mov
ljmp
sub
sbb
insb
add
dec
or
sbb
jae
aad
js
mov
movsl
inc
inc
xor
mov
mov
call
push
cmpsb
cltd
or
stos
push
mov
mov
pop
cmc
popa
pop
push
jmp
movsl
mov
sti
shrl
xchg
dec
mov
xchg
jnp
sub
lret
into
dec
ljmp
xchg
out
jae
rcl
add
push
ljmp
aam
fidivl
je
dec
fldenv
dec
sub
in
sbb
inc
test
loope
insb
scas
xlat
mov
outsl
hlt
sub
lea
jno
add
mov
adc
sub
aaa
js
dec
mov
pop
lret
add
mov
adc
mov
lret
and
jecxz
ret
insl
adc
lea
jl
sbb
or
stos
and
enter
cmpsl
sbb
in
lds
pop
mov
test
mov
xchg
add
dec
push
jl
or
adc
add
push
jp
in
push
jo
fimuls
popa
mov
fbstp
in
lret
je
bound
cmp
mov
fwait
inc
adc
jnp
enter
jb
xor
jno
pop
ret
ficoms
cs
push
sbb
cmpsb
arpl
aaa
xchg
aad
shlb
lret
lret
push
testb
push
in
js
mov
arpl
pusha
adc
pusha
xlat
xchg
stos
cmp
je
ja
cld
inc
cmpsl
cmpsl
pop
add
mov
scas
xchg
ffree
loopne
push
cmp
outsb
punpckhbw
jno,pn
aam
scas
ror
mov
cmp
xor
pushw
aas
insb
cmp
fdiv
or
inc
jne
adc
dec
push
popa
pop
push
pop
xchg
ret
fucomip
push
repnz
xchg
lcall
fld
add
cmp
cmp
pop
push
push
sahf
xlat
nop
xchg
mov
clc
cwtl
testb
and
stc
shll
test
jg
arpl
add
clc
and
fsubrp
aad
mov
mov
ret
push
test
arpl
inc
into
xor
dec
or
test
adc
jae
sub
sub
fs
or
jp
push
loop
jae
lret
fisubrl
lahf
rcrl
jmp
jo
inc
ficomps
stos
aaa
sub
cwtl
je
inc
mov
jb
inc
aad
js
clc
cmpsb
inc
femms
lea
push
std
aas
out
xchg
inc
cli
xorl
call
sahf
mov
je
or
pop
leave
xor
loope
lods
sub
add
jge
insl
or
or
push
lds
mov
push
pop
ficompl
scas
hlt
jl
push
mov
or
inc
sbb
adc
enter
sub
add
lds
icebp
and
add
ret
inc
aas
mov
cs
cmp
gs
adc
dec
imull
aaa
xor
xor
shlb
insl
sarb
fwait
xor
adc
stc
jmp
xlat
push
aaa
inc
lret
fcomp
movsl
mov
nop
gs
cmc
cwtl
mov
mov
jno
mov
jecxz
adc
imul
add
and
jb
lds
js
mov
loope
daa
inc
dec
outsb
frstor
adc
shll
call
cmc
inc
mov
pop
repnz
inc
shl
mov
dec
cmpsl
push
add
dec
pop
andb
out
push
cmp
jno
stos
mov
and
pop
cwtl
or
mov
daa
add
iret
add
xchg
mov
dec
pop
jg
sbb
cmp
sub
pop
imul
xor
mov
popa
pop
stc
xchg
pop
loope
add
or
mov
in
xchg
movsb
or
cmp
dec
jne
jmp
push
int3
push
mov
and
mov
adc
fstpt
into
bound
push
fdivs
mov
call
scas
sbb
jbe
ss
pop
clc
xor
xlat
call
test
rorl
mov
sbb
sub
nop
mov
sbb
out
mov
arpl
xor
mov
fsubp
shlb
mov
roll
xchg
jbe
push
dec
cmp
rcrb
imul
pop
ja
fists
lods
andl
imul
mov
popf
aaa
pop
cmp
adc
push
inc
sbb
inc
mov
jp
icebp
loopw
push
sbb
orl
addr16
lods
test
lds
fnstenv
xor
mov
popa
dec
fwait
lock
xchg
jne
cmp
call
pop
and
fimull
fdivrs
add
cwtl
adc
movsb
adc
sub
les
sub
mov
dec
scas
adc
jle
and
mov
push
repnz
or
push
fwait
dec
lods
mov
lret
jmp
scas
cli
sti
jno
xchg
pushf
roll
incl
in
out
shll
addr16
sbb
and
test
mov
pop
pop
out
sub
jno
jl
pop
popa
fnclex
data16
push
push
xor
imul
adc
ss
sub
cwtl
sahf
call
lret
loopne
pop
fstpl
in
push
lock
pop
mov
mov
jne
add
push
lret
cmp
mov
cmp
ss
mov
lahf
xchg
mov
ljmp
lds
roll
out
xchg
sarb
leave
ret
sub
mov
or
loop
xchg
loop
imul
out
stc
mov
bound
add
mov
xchg
mov
gs
sub
and
cltd
fucomi
mov
fnstcw
push
fisubrs
gs
loopne
cmpsb
push
test
in
push
sbb
jae
test
mov
sub
testl
loope
xor
mov
gs
lret
into
sub
pop
mov
stos
test
notb
sub
fsub
mov
lcall
std
and
inc
pop
sub
adc
push
pusha
lods
cs
mov
data16
lret
pop
ss
mov
aad
shll
sub
jo
rorb
insb
push
gs
cmp
jnp
insl
movsl
jbe
sarl
sbb
fucomp
fsubrl
std
pop
arpl
add
adc
lret
test
and
mov
inc
sbb
inc
scas
pop
aam
push
add
cli
int3
mov
outsl
mov
xor
push
push
mov
xchg
adc
in
and
nop
mov
adc
mov
hlt
daa
jg
push
inc
push
das
pop
jl
jmp
dec
pushf
iret
inc
mov
addr16
jb
shll
dec
push
testl
mov
jnp
mov
adc
xchg
ds
mov
xchg
jb
mov
adc
es
cld
cli
adc
xchg
jle
lahf
daa
shll
jno
jno
lahf
cmp
jnp
lds
cmc
sti
sbb
sbb
orb
push
clc
push
xchg
xor
adc
stos
and
leave
sahf
mov
cltd
inc
inc
in
cmp
mov
pop
cwtl
jmp
es
sub
jno
jge
jns,pn
dec
std
bnd
repnz
fisubrl
cmp
in
ljmp
in
adc
mov
jg
sbb
cmp
jae
dec
xchg
ss
dec
fadd
in
pop
jo
and
mov
dec
dec
sti
sahf
xchg
call
nop
push
sub
int
test
xchg
mov
lahf
or
sahf
or
or
and
mov
shl
call
pop
mov
call
xor
loope
lds
insb
jae
push
ret
scas
sub
or
ja
in
pop
push
sbb
xor
dec
icebp
or
cld
dec
ljmp
dec
adc
int
adc
mov
scas
ljmp
adc
and
jne
cmp
pop
xchg
dec
push
cmp
rcrl
and
lods
mov
sbb
add
mov
js
dec
in
pop
gs
insl
mov
inc
add
mov
mov
xchg
pop
outsb
jns
and
adcb
jle
and
das
dec
or
pop
push
push
lock
cmp
adc
mov
jecxz
push
jb
push
and
xor
insb
add
sub
das
lock
std
or
out
dec
notl
adcb
jb
xor
mov
ljmp
hlt
mov
rcll
pushf
xchg
sti
sbb
fcom
aam
fs
lahf
mov
rcll
cmc
adc
aad
ret
repnz
in
int
mov
mov
imul
cmpsl
sahf
cmp
inc
shl
test
inc
jmp
jmp
loop
cmpsb
jle
gs
lcall
movsb
push
repnz
jnp
fcomp
jg
idivl
test
int3
xor
imul
and
stc
inc
cmp
xor
sbb
cmp
jo
dec
mov
xor
mov
loope
mov
inc
jmp
lods
adc
push
pop
in
add
adc
push
push
sbb
mov
dec
test
test
in
ljmp
dec
roll
mov
icebp
xlat
sbb
ds
mov
jns
lcall
mov
js
sbb
test
lret
add
inc
push
and
mov
gs
ljmp
jmp
repnz
in
push
gs
pop
out
pop
faddl
inc
mov
pusha
clc
or
repz
jle
mov
outsl
int3
lea
xor
dec
sub
loop
mov
jle
enter
adcl
cwtl
cmp
call
repz
xchg
pop
add
jne
mov
jns
xchg
push
jne
in
pushf
mov
dec
adc
shll
inc
clc
sub
inc
jne
repz
mov
add
outsl
dec
icebp
xchg
aaa
ja
ljmp
add
add
fiaddl
jecxz
outsl
mov
xchg
ja
dec
scas
cmp
aas
les
test
jb
xor
push
and
dec
xchg
aas
test
xchg
push
mov
inc
sbb
icebp
pushf
adc
ficompl
sahf
adc
in
xchg
push
adc
xchg
and
mov
fdivrs
enter
pop
shr
jmp
gs
pusha
sub
inc
push
loopne
dec
repz
insl
push
loop
mov
mov
mov
stos
jl
adc
push
jge
loop
lret
mov
xchg
push
inc
jle
cmp
pop
xor
add
inc
movsl
lock
adc
dec
loop
daa
nop
sbb
aaa
and
mov
cs
pop
mov
cltd
mov
lcall
jmp
xchg
out
cs
hlt
lea
adc
mov
dec
pop
in
mov
mov
dec
pop
leave
mov
lret
in
in
iret
loopne
lahf
xor
addb
jae
dec
stos
xchg
rcll
jmp
pop
push
test
pop
sbb
xor
adc
push
xor
je
in
push
shlb
fdivrl
sti
hlt
dec
adc
outsl
xchg
aad
add
arpl
xlat
out
and
mov
lret
cmpsl
xchg
out
jae
sbb
sub
aas
sub
mov
movsl
and
mov
push
loopne
js
inc
mov
pop
sbb
cmp
jnp
lcall
mov
cmpsl
pushf
push
aaa
inc
and
and
clc
gs
jl
mov
cmp
xchg
mov
pop
push
or
aaa
outsb
push
push
ds
mov
cld
int
inc
jbe
cmp
mov
jmp
sarl
mov
repnz
cmpsb
aaa
and
push
mov
int
mov
pop
imul
jbe
cmc
mov
push
jecxz
insb
dec
orb
adcl
adc
ds
or
add
icebp
clc
cli
loop
fucom
testb
les
lahf
scas
rcrl
fidivl
fsub
iret
leave
stc
xor
fnstcw
mov
jecxz
out
xor
sahf
iret
xor
test
mov
or
sbb
out
iret
push
in
out
mov
fisubl
pop
scas
leave
addr16
scas
pop
and
dec
add
adc
divl
xlat
lahf
sbb
xchg
repnz
pop
cwtl
mov
xor
xchg
insl
cmp
mov
repz
jno
aas
int3
es
jge
xchg
xor
mov
leave
and
ljmp
out
shl
ds
push
cmp
pop
pop
push
or
xor
inc
mov
cmp
ds
inc
mov
sahf
cmp
and
lcall
pop
adc
test
loop
cmp
ds
frstor
popa
popa
fisubrs
dec
out
inc
bsr
jno
pop
pop
push
repz
mov
cmp
outsl
xchg
jl
sti
sub
jg
cli
mov
sbb
stc
pushf
inc
shr
insl
lret
mov
lea
ret
into
dec
adc
sti
push
lret
lret
addr16
lcall
dec
lods
repz
cmpl
fcomps
pop
cltd
leave
cmp
adc
gs
push
sbb
push
add
sbb
xchg
sbb
jecxz
jo
mov
and
add
push
pop
and
outsl
ds
sbb
cmp
push
pop
call
or
add
add
sub
call
rorl
cwtl
xor
popf
gs
dec
aas
inc
mov
dec
clc
cmp
hlt
lods
sbb
inc
mov
mov
push
cmp
mov
scas
insl
push
lea
mov
inc
pop
mov
xor
stc
xchg
add
jl
imulb
sub
push
lds
dec
dec
dec
sahf
cmpsb
cmpsl
pop
dec
pop
adc
scas
sarb
in
ljmp
adc
int3
cmp
mov
nop
push
and
mov
jo
je
xor
adc
mov
hlt
test
sub
jl
mov
xor
sahf
orl
xchg
in
mov
and
inc
rorl
das
lea
jae
rorb
andb
clc
int3
xor
push
and
xchg
and
aam
loop
out
jge
pop
pop
inc
inc
out
sbb
lcall
inc
loopne
mov
sub
xchg
fmuls
sbb
jns
test
out
addb
xchg
test
sbb
mov
jmp
pop
and
pop
pop
mov
push
out
and
jnp
push
sbb
ret
test
arpl
sahf
jno
push
mov
xor
js
and
or
sbbb
xchg
daa
xchg
or
sbb
push
or
dec
jp
sub
scas
xchg
adc
mov
ja
push
mov
adc
js
leave
and
mov
mov
sub
sarl
in
out
jo
dec
jg
in
add
jmp
dec
xlat
and
cwtl
iret
mov
xchg
imul
scas
fsts
lret
add
lods
mov
ror
test
inc
jp
dec
enter
ja
aaa
jno
inc
fdivp
jns
adc
pop
fimuls
or
lods
cmpsb
pop
call
repz
or
mov
js
addr16
stc
or
je
and
es
and
mov
mov
cli
loop
clc
mov
bnd
aam
in
mov
pop
push
into
inc
dec
adcl
scas
fildll
mov
call
and
mov
jl
icebp
pop
pusha
testl
pop
adc
push
pop
add
and
repnz
ljmp
test
hlt
jl
movsb
fadds
mov
movb
in
sbb
or
and
int3
icebp
je
xchg
cmp
in
cmpsl
sahf
xchg
jbe
fimull
lret
enter
test
rorl
outsl
push
add
jns
jmp
in
mov
rolb
jg
xor
push
leave
inc
xlat
das
aad
cwtl
sbb
push
jo
popa
hlt
pop
mov
ror
sti
add
sbb
aas
dec
jnp
test
jne
inc
xor
jo
mov
dec
dec
pop
stc
mov
inc
les
mov
les
xchg
popf
xor
lcall
mov
xchg
add
mov
xor
or
sub
jmp
push
mov
repnz
sbb
push
sbb
jo
add
cwtl
xor
out
lock
add
push
rolb
jbe
cmc
jb
int
cmc
gs
negl
push
sub
inc
mov
jge
scas
adc
push
xchg
push
pop
add
clc
into
sub
pusha
cmp
cvtdq2ps
xor
je
sti
xor
cmpsl
sbb
jl
sarl
mov
stos
lods
inc
adcl
push
add
psraw
cmp
adc
push
jmp
lea
stos
push
outsl
lock
xchg
ss
xor
cmp
xlat
jg
pop
outsb
cmp
pop
and
mov
mov
mov
sbb
cmpsb
je
and
rclb
or
xchg
adc
fmull
rorb
lds
cmc
icebp
daa
xchg
dec
outsb
out
mov
sbb
fs
mov
jno
and
enter
xchg
fs
sbb
repnz
jo
cmp
and
int3
mov
sarb
fnstenv
je
shr
lcall
jge
in
mov
cs
insl
cmp
std
jae
cld
add
cmp
add
mov
cmc
mov
dec
push
xchg
test
or
fs
mov
ds
cmp
jle
sub
loope
mov
les
push
jp
out
mov
movsb
mov
les
xchg
insl
fld
xor
cmpb
lahf
cmp
cmp
and
jno
stos
hlt
icebp
ja
idivl
out
aam
xorb
pop
dec
pop
icebp
das
push
add
xor
pop
pop
xchg
dec
sub
sbb
mov
out
jns
pop
sbb
pop
test
push
inc
cmp
lahf
push
push
popa
lds
fwait
nop
in
xchg
mov
jo
lock
shll
sbb
xorb
rcr
mull
jo
cmp
pop
repz
cmp
lahf
ss
dec
sub
mov
rclb
cmp
ds
pop
jg
pop
push
dec
ja
cli
or
test
outsl
int
push
xchg
imul
fstps
xchg
gs
jmp
push
cmpsb
cltd
out
je
xchg
ficomps
jno
cmp
mov
sub
es
lods
outsb
jae
imul
sbb
shr
popa
xlat
inc
mov
and
sbb
std
repz
aaa
out
aaa
lods
idivl
add
aas
xchg
xchg
sbb
jle
arpl
mov
jbe
imul
out
aam
rcl
out
div
sarb
je
fsts
dec
xchg
cwtl
dec
cmpl
and
push
fisubl
fisttpll
out
int3
and
and
test
pop
adc
mov
in
jmp
sbb
lock
jns
aas
popf
cmp
cmpsl
mov
jl
dec
pop
push
fnstcw
jns
fsubrp
sub
jmp
ss
push
test
mov
js
sbb
xchg
mov
inc
cwtl
cmp
dec
mov
inc
push
popl
loop
and
rcrl
lret
jo
jl
ljmp
outsl
es
aas
lods
dec
repz
and
xchg
and
das
aad
pop
dec
adc
jno
inc
add
cmp
adc
add
in
dec
ss
ja
mov
arpl
push
xor
xlat
test
stc
test
mov
rcrl
outsb
in
popa
std
adc
mov
les
xchg
dec
add
aad
or
jge
push
pop
jnp
call
inc
adc
push
cmp
ljmp
cs
divl
popf
shrl
pop
inc
mull
sub
xor
dec
jmp
sbb
imul
dec
mov
ljmp
jne
and
mov
inc
and
dec
pop
sub
add
inc
aam
lock
sub
lock
mov
pop
mov
fwait
xor
jae
into
push
jge
xchg
jle
inc
adc
rcrb
pop
scas
adc
or
arpl
sub
rol
inc
pop
out
xor
mov
xor
negb
dec
and
jle
add
mov
lahf
mov
cmp
and
idivl
mov
sbb
sbb
inc
mov
add
dec
cli
addr16
call
xor
mov
mov
inc
inc
inc
fildl
and
jbe
stos
mov
test
adc
movsl
and
inc
xor
sbb
inc
xor
inc
jne
sub
lea
or
mov
jne
ja
shll
sub
inc
sub
sbb
shrl
stos
mov
jbe
xor
inc
in
sbb
dec
pcmpgtb
bound
jo
mov
loope
xor
sahf
mov
push
fs
sub
sub
lods
insb
inc
popf
out
sub
mov
dec
stc
arpl
sti
pop
xorb
iret
push
mov
fsubr
call
sbb
jl
in
aaa
mov
repnz
sub
out
xchg
sbb
dec
xchg
or
dec
pop
ljmp
mov
sahf
push
and
mov
sarb
clc
negb
dec
testb
sub
sub
jo
lret
mov
insl
enter
fnstsw
jae
imul
pop
fiadds
xchg
hlt
mov
push
xor
dec
push
paddd
sub
cmp
sbb
mov
imul
push
dec
mov
cli
xor
mov
pop
adc
xor
sbb
sub
adc
inc
inc
mov
aas
dec
sub
mov
push
add
xchg
xchg
lcall
out
imul
jo
or
pop
xchg
ret
mov
loop
movsb
mov
sahf
dec
or
not
jp
cmp
add
mov
and
dec
pushf
mov
pop
push
push
add
outsl
call
cmp
js
test
ds
xor
mov
ljmp
mov
xor
xor
adc
hlt
or
ds
pop
out
jg
icebp
pop
mov
test
out
test
outsb
dec
mov
gs
cltd
lods
inc
icebp
mov
mov
and
pusha
or
stos
sub
fidivrs
jle
and
lret
je
rcr
jno
jns
popa
out
aad
ret
pop
mov
jnp
leave
lds
push
lea
fsts
or
cmp
es
mov
cmp
mov
cld
mov
pop
inc
fisubl
mov
dec
rcrb
out
mov
or
inc
add
lret
sub
pop
popa
inc
jno
push
add
dec
ja
lds
test
es
xchg
xor
loope
test
mov
sbb
arpl
jns,pt
orl
fisubrl
xchg
lcall
fisubs
and
test
mov
ljmp
inc
stos
cmpsb
adc
xchg
jmp
jle
dec
lret
fwait
fwait
and
les
insl
jmp
sbb
outsb
cmp
fsubrl
mov
jmp
loop
cwtl
loop
icebp
cmp
fcmovnbe
rcl
xor
xchg
shlb
arpl
jns
xchg
push
aad
arpl
mov
fcom
jmp
xor
pop
xchg
cmp
aas
push
add
push
dec
sbb
xchg
mov
and
fcomps
jp
add
xchg
jns
ret
outsl
xchg
and
adc
sub
fdivp
mov
jne
add
jecxz
test
push
stos
fs
sbb
fldl
inc
jno
jb
xchg
xor
sahf
aam
ds
xchg
xorl
sbb
es
outsb
pop
jecxz
pop
xchg
mov
call
push
out
pop
dec
push
insb
mov
mov
adc
jge
adc
bound
pop
hlt
aas
iret
dec
xchg
or
movsl
mov
pop
cs
lods
movsb
cld
xchg
jno
movsb
test
clc
test
jmp
sbb
pusha
adc
int3
push
aad
dec
adc
in
loope
pop
sub
call
mov
pop
test
popa
cli
icebp
push
push
cmp
xchg
pop
enter
insl
fisubs
add
xor
pop
jae
mov
iret
pop
xchg
fdivl
and
xor
mov
dec
testb
daa
pop
lods
aas
mov
add
mov
pop
lahf
outsl
and
xchg
or
xor
fwait
test
sti
shlb
scas
push
jo
jo
jmp
adc
scas
mov
shl
dec
into
rol
movsl
mov
dec
outsb
addr16
loopne
fcoms
dec
xor
lret
jg
mov
xchg
mov
cmpb
je
andb
sbb
add
lea
popf
movsb
test
dec
enter
stc
testb
pushf
shrd
ss
push
inc
fnsave
mov
adc
mov
adc
test
push
cs
jmp
pusha
or
jge
ss
adc
mov
lock
jno
jg
mov
filds
push
pushl
lods
outsl
inc
adc
jo
xchg
clc
jmp
in
sub
and
inc
and
cmp
mov
xchg
dec
ss
pop
nop
xchg
xlat
into
orb
mov
or
pop
mov
gs
mov
pop
dec
jle
mov
mov
jae
cltd
jo
mov
jmp
aas
pop
inc
dec
lret
nop
mov
fcmovne
imull
push
stos
push
ret
add
dec
xchg
adc
xchg
repnz
xchg
inc
push
testb
lret
js
mov
xchg
popa
xchg
addr16
outsl
insl
aas
and
fstpl
mov
stos
ret
in
test
inc
fwait
cmp
and
mul
and
scas
inc
icebp
and
jb
in
loope
push
cmc
loope
mov
adc
out
test
adc
call
and
cmp
or
jbe
pop
or
push
xlat
mov
sahf
lods
push
xchg
dec
adc
stos
push
daa
or
aad
ds
pop
aad
nop
xchg
inc
mov
push
clc
mov
and
movsb
lahf
pop
mov
pop
lods
ret
cwtl
in
push
test
jge
lcall
sbb
fstps
in
das
sub
aas
decb
mov
dec
sbb
mov
xchg
mov
fmulp
in
shl
sbb
andb
mov
popf
jg
inc
mov
inc
push
adc
mov
icebp
std
into
pop
ficoml
loope
aad
sbb
jge
aaa
divb
pop
daa
mov
or
xchg
sbb
pop
lret
xchg
sbbb
pop
clc
dec
or
cmp
icebp
lret
scas
int3
dec
sarb
arpl
add
cmc
inc
cmpsl
add
sbbb
pop
push
fldl
out
mov
in
shll
das
xchg
mov
lret
inc
movsb
push
push
dec
pop
aas
sub
cmp
xchg
stc
adcl
ret
or
dec
jp
pop
inc
sub
stos
cmpsl
mov
or
movsl
arpl
mov
das
ret
sbb
psubq
pop
add
rolb
mov
pop
mov
xchg
add
fdivrl
mov
clc
jmp
aaa
in
test
sub
out
cmpsl
mov
cmp
movsb
rorl
int
push
insl
out
inc
cwtl
adc
bound
adc
out
mov
stos
decb
jge
mov
pushf
xchg
in
sahf
cmp
clc
mov
pushf
mov
xor
dec
mov
cmp
push
mov
xor
inc
pop
xchg
mov
scas
in
adc
inc
sub
pop
or
sub
loopne
stos
inc
pop
mov
orb
push
mov
sub
adc
test
adc
and
insl
inc
push
sarb
js
jo
pop
inc
dec
ret
sub
int3
mov
pop
mov
arpl
or
nop
ret
sbb
pushf
pop
ss
je
shrl
jo
xchg
popa
enter
xchg
mov
jne
pop
orl
or
dec
pop
mov
addr16
daa
in
add
mov
and
cwtl
xchg
or
push
ds
mov
add
mov
jl
rolb
imul
movsb
and
insl
sbb
and
movl
in
mov
popa
orl
mov
mov
xchg
mov
mov
lods
mov
filds
jo
stc
jle
xor
push
movsb
ds
fcomps
mov
xlat
lods
jns
fcompl
sub
repz
jne
stc
adc
lahf
lret
push
scas
pop
sbbl
and
cmp
les
ds
scas
fimull
shl
in
adcb
loope
outsl
cmc
dec
icebp
mov
cli
pop
or
and
lods
mov
and
imul
sub
fidivrl
pop
cs
inc
pslld
or
mov
mov
jae
rcrb
cmp
or
inc
loop
adc
jmp
mov
ror
insl
adc
add
mov
jp
iret
mov
fnsave
cltd
jecxz
das
mov
mov
sub
neg
xor
ss
pop
mov
mov
push
popf
in
xor
movsb
adc
dec
inc
mov
pop
test
scas
inc
sarl
xlat
ror
int
pop
nop
int3
dec
enter
jge
dec
das
out
sbb
and
inc
stos
push
mov
nop
push
sbb
cmp
in
bound
mov
pop
cmpsb
and
mov
push
mov
xchg
and
or
jecxz
push
call
push
add
or
push
outsl
cltd
movsb
gs
jmp
and
sub
cmpsl
xor
xchg
fwait
push
push
lret
in
bound
es
jge
sti
inc
xchg
sub
rorb
push
mov
push
adc
sbb
scas
mov
cltd
cmpsl
push
seta
fistps
jmp
js
mov
adc
and
cmp
in
add
mov
out
inc
movsb
rorl
out
repz
outsb
into
cmpl
sub
mov
pop
adc
push
leave
mov
cmp
fyl2xp1
daa
inc
mov
fidivrs
fwait
push
and
pop
mov
xor
adc
enter
xchg
xchg
addr16
cmp
lock
outsb
shll
add
imul
leave
add
mov
push
xlat
mov
inc
movsl
addps
popf
rcl
xchg
rolb
add
pop
inc
cmp
dec
cmp
sub
mov
pop
sub
dec
arpl
repz
add
daa
es
pop
jmp
cwtl
xchg
jo
cs
in
cwtl
xchg
aad
shll
popa
mov
arpl
nop
xlat
sbb
leave
adc
in
adc
mov
adc
mov
sub
push
cmp
cmp
std
test
pop
xor
cmpb
insl
test
fdivrs
es
mov
rcll
mov
mov
lahf
xlat
xchg
sbb
dec
in
in
mov
inc
outsb
sbb
int3
inc
cmp
je
push
loope
mov
push
cmp
movsb
das
loopne
push
scas
xor
es
cmpsb
and
sub
push
dec
mov
test
cmpsl
lods
sbb
jnp
ds
pop
iret
dec
sub
push
mov
push
ss
jp
push
dec
mov
jle
insb
add
in
ds
stc
cmp
lock
jne
rcll
je
inc
pusha
sti
fldcw
enter
lahf
cld
mov
fisubrs
push
inc
dec
scas
dec
push
nop
cli
pop
mov
ret
int
push
clc
jge
loopne
popa
jge
in
insb
aaa
inc
aad
xor
cmp
mov
mov
push
movsl
push
mov
test
mov
adc
mov
xchg
lock
jnp
movsb
mov
mov
mov
test
jbe
adc
xor
inc
and
pop
inc
lods
add
xor
sbb
push
jae
cmpsb
loope
jns
mov
xor
push
bound
insl
mov
out
enter
out
lahf
fisubs
pop
add
sub
loope
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
lods
fildll
inc
notl
cld
dec
xor
xor
mov
aam
std
notl
jge
gs
adc
sub
pop
ret
cmpsb
pop
cmpsb
xchg
or
and
in
mov
xchg
out
xchg
loop
sbb
adc
jo
mov
pop
add
out
fisttpll
std
jle
inc
js
adc
jnp
les
mov
shll
insl
mov
jns
enter
jmp
shrd
mov
mulps
mov
add
test
and
data16
dec
gs
inc
jne
loop
mov
cwtl
xchg
pop
inc
fdivs
std
subb
loopne
jmp
xchg
xor
xchg
or
call
cmc
out
shr
inc
jnp
movsb
mov
cld
call
je
xlat
inc
fstl
xor
aaa
jmp
sub
nop
push
xor
cmp
popa
das
xchg
call
xchg
xlat
pop
call
xor
and
fldcw
dec
int3
repz
aas
divl
addb
cmp
mov
fiadds
repz
pop
in
dec
jb
sub
js
dec
jne
mov
test
push
or
cmc
test
insb
or
sbb
outsl
mov
xor
sbb
enter
sarl
jo
dec
lds
sti
sbb
lds
js
push
stos
dec
ret
mov
push
inc
fsubl
lds
xor
into
arpl
dec
loopne
push
out
gs
adc
es
mov
jecxz
jecxz
nop
iret
jns
daa
stc
insl
std
cmp
dec
fwait
xor
pop
mov
xchg
mov
jle
push
mov
cmpsl
fisttpl
out
cmp
fmulp
hlt
mov
sahf
mov
sahf
jmp
shl
call
jo
cs
mov
enter
push
mov
jnp
mov
sbb
cmp
sar
xorl
push
xor
clc
dec
mov
js
xor
xchg
aas
test
daa
movsl
mov
out
xchg
dec
in
stc
cmpsb
xlat
in
cli
and
jp
inc
scas
pop
sub
xor
or
jns
mov
lret
jne
pusha
or
lret
icebp
dec
push
jno
pop
mul
hlt
sbb
xchg
sub
aaa
int3
test
fidivrl
out
mov
testb
mov
mov
jne
insb
sarl
sub
jge
loope
adc
ss
dec
int
push
fwait
pop
das
push
mov
fidivs
mov
cltd
sbb
pushf
lods
lret
aas
mov
and
mov
fwait
mov
adc
xchg
xchg
lea
push
lock
aaa
mov
jg
mov
pop
jge
cmp
add
rcrb
dec
mov
in
bound
outsb
rorb
xchg
cmp
adc
jno
nop
sub
sahf
xor
sti
aad
or
leave
sbb
aaa
pop
dec
idivl
nop
out
lock
pop
xor
pusha
push
test
mov
mov
dec
les
xchg
in
jg
dec
dec
mov
push
push
data16
les
cmp
inc
mov
imul
cltd
lcall
fbld
pop
xlat
push
xchg
sbb
lcall
sub
xchg
ficoms
pop
mov
mov
lock
cld
cltd
xchg
inc
jns
and
pop
cmp
outsl
mov
mov
adc
mov
call
mov
hlt
sti
scas
add
mov
sub
cmp
xchg
enter
movb
icebp
xchg
imul
addl
sub
cltd
test
xchg
icebp
mov
pop
in
dec
stos
pop
xor
out
push
cwtl
xchg
inc
pop
jbe
cmp
or
jl
cltd
ror
xor
mov
sbb
cmpsb
loope
jo
sbb
out
hlt
pop
mov
sbbb
fucomi
inc
les
ret
inc
add
adc
cmp
and
mov
mov
cmp
imul
mov
jns
dec
pop
and
scas
rorb
inc
mov
sbb
mov
xor
test
and
push
cmp
into
cltd
fsubrs
lcall
ss
cmp
mov
out
popa
adc
inc
pop
push
mov
lgs
aas
mov
in
je
sbb
insb
call
cmp
cltd
ret
lds
out
jns
int3
adc
and
ror
jbe
out
or
fcoml
in
xor
movsl
in
fst
sahf
pop
out
test
cmpsb
pop
jecxz
inc
fstpt
or
xchg
and
dec
fsubr
cmpsb
scas
inc
pop
gs
mov
rolb
imul
pop
into
mov
mov
sbb
push
jge
cmc
sbb
es
add
inc
pushl
push
xor
in
xchg
fucomp
pusha
cli
clc
xchg
add
clc
dec
xchg
adc
in
add
sub
call
push
mov
in
cld
inc
clc
mov
lods
rolb
xchg
xor
in
lods
xor
std
or
das
xchg
out
daa
add
inc
int
xlat
les
jl
sub
out
mov
jecxz
lock
cld
jl
sub
sub
add
ffreep
sarl
mov
pop
cs
loop
lcall
jg
lods
push
cltd
xor
int3
outsb
jle
or
xor
testl
lcall
pushf
jno
mov
mov
jns
enter
aas
icebp
jnp
gs
stc
hlt
shlb
aam
adc
ffreep
jnp
addr16
sub
xchg
stos
ja
and
clc
out
adc
jae
push
in
shrl
or
or
scas
outsb
mov
mov
mov
cmpsl
push
push
sub
rolb
sbb
rcl
jno
pop
mov
ss
cmp
dec
enter
leave
add
call
xchg
cmp
sub
dec
in
mov
push
ret
adcb
xor
and
lret
dec
je
add
cmovae
subl
int3
xlat
test
pop
jno
jmp
hlt
test
xorb
lret
xchg
data16
pop
lret
lods
outsb
cltd
daa
jle
shl
dec
or
repz
out
push
pushl
xchg
cmp
stos
ror
nop
cwtl
xorl
mov
sahf
sbb
xlat
adcl
out
ret
mov
or
cli
mov
sbb
testl
push
mov
ljmp
js
jbe
add
mov
cmp
sarl
in
xor
inc
mov
add
pushf
push
clc
sbb
jnp
in
das
lea
cmp
nop
pop
inc
sbb
mov
sub
or
xchg
mov
mov
adc
cmpsl
fldenv
xchg
mov
pop
shll
lock
push
push
ja
and
fidivrl
repz
scas
movsl
adc
inc
je
xor
or
shl
cld
mov
jae
cmp
jl
fmul
jno
add
shll
mov
shrb
cmp
mov
add
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
