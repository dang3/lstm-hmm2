dec
cmp
push
inc
mov
mov
mov
jmp
arpl
cmp
xchg
cmp
shll
adc
and
mov
cmp
and
imul
cmp
cmpsb
daa
or
mov
cmp
push
cmp
popf
and
adc
and
adc
and
adc
daa
or
pop
and
cmp
enter
call
es
dec
es
sbb
or
test
cmp
mov
cmp
mov
cmp
lods
es
fldenv
cmp
or
cmp
mov
cmp
mov
cmp
out
and
mov
cmp
cmp
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
jge
cmp
int3
int3
int3
int3
int3
int3
int3
int3
movzbl
and
cmp
je
cmp
je
mov
movzwl
test
push
je
mov
lea
call
test
je
mov
mov
call
test
je
mov
mov
mov
add
mov
mov
mov
add
mov
mov
and
or
mov
pop
mov
ret
xor
ret
orb
xor
pop
ret
mov
and
cmp
jne
xor
inc
ret
push
mov
call
pop
ret
push
mov
sub
mov
push
push
push
mov
pushl
xor
mov
lea
mov
mov
call
mov
cmp
je
mov
push
lea
lea
movl
mov
mov
mov
call
mov
lea
call
cmp
je
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
call
lea
mov
call
lea
call
pop
pop
mov
pop
leave
ret
push
mov
push
push
mov
mov
test
mov
je
mov
push
call
mov
test
je
mov
push
call
lea
call
mov
mov
mov
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
mov
mov
push
push
mov
mov
mov
xor
push
mov
lea
mov
call
mov
mov
call
cmp
mov
mov
ja
lea
call
mov
pop
pop
xor
xor
pop
call
leave
ret
mov
pushl
mov
call
mov
mov
mov
cmp
jne
cmpl
jne
lea
push
pushl
lea
mov
mov
mov
mov
movl
mov
mov
mov
push
mov
call
mov
lea
push
pushl
lea
mov
mov
mov
push
mov
mov
movl
mov
call
lea
lea
call
test
je
lea
push
pushl
lea
mov
mov
mov
movl
mov
mov
mov
push
mov
call
lea
push
mov
call
test
je
push
mov
lea
call
mov
call
lea
call
mov
cmp
je
mov
cmp
mov
je
mov
push
call
mov
push
push
lea
push
push
lea
push
push
push
mov
call
add
lea
call
lea
call
lea
call
pushl
pushl
call
pushl
pushl
call
pushl
pushl
call
add
incl
mov
cmp
jae
jmp
push
mov
sub
push
push
mov
push
lea
xor
cmp
je
cmp
jne
mov
lea
push
mov
call
pushl
lea
call
cmp
je
mov
xor
cmp
je
lea
push
push
mov
mov
push
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
lea
call
mov
mov
call
cmp
je
lea
xor
call
lea
xor
movb
call
mov
xor
call
push
lea
call
cmpb
je
mov
and
and
push
lea
lea
movl
mov
call
mov
test
je
mov
lea
push
push
call
mov
mov
lea
call
xor
mov
push
mov
lea
mov
call
mov
lea
mov
call
pop
pop
pop
leave
ret
mov
push
mov
call
test
jne
push
xor
cmp
jne
push
mov
push
mov
call
test
jne
pop
pop
ret
mov
mov
push
mov
call
test
je
pushl
mov
mov
call
inc
jmp
pushl
push
call
pop
pop
pop
ret
sub
mov
xor
mov
mov
test
je
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
pop
mov
xor
call
add
ret
lea
mov
mov
lea
push
mov
mov
mov
movl
movl
movl
movw
mov
mov
push
push
call
cmpl
jne
mov
test
jne
test
je
jmp
mov
mov
add
call
xor
ret
push
push
mov
call
mov
push
push
call
pushl
mov
call
pop
ret
mov
call
cmp
jne
mov
call
test
jne
xor
inc
ret
mov
call
cmp
je
mov
call
test
jne
xor
ret
int3
int3
push
mov
and
sub
push
push
push
push
mov
mov
mov
test
jne
mov
push
push
call
mov
mov
call
mov
mov
mov
test
jne
mov
push
push
call
mov
mov
mov
call
test
jne
lea
cmpl
jne
movzbl
add
push
lea
call
call
test
je
movzbl
lea
push
lea
call
mov
call
cmp
je
call
test
je
mov
movl
mov
call
test
jne
add
cmpl
jne
movzbl
add
push
lea
call
call
test
je
movzbl
add
push
lea
call
mov
call
cmp
je
call
test
je
cmpl
jne
mov
pop
pop
pop
pop
mov
pop
ret
mov
test
je
mov
jmp
mov
test
je
jmp
mov
movl
jmp
mov
mov
and
xor
or
jne
pop
xor
pop
pop
pop
mov
pop
ret
xor
jmp
mov
add
call
ret
push
mov
sub
mov
push
lea
push
push
xor
push
mov
call
mov
cmp
je
add
lea
push
mov
mov
push
call
test
js
mov
push
mov
mov
call
mov
mov
and
mov
mov
call
mov
lea
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
push
push
mov
push
mov
xor
mov
mov
movl
mov
call
push
push
push
push
push
push
push
push
lea
push
mov
mov
mov
mov
mov
mov
movl
call
cmp
je
lea
call
mov
push
push
lea
call
test
je
mov
mov
mov
push
mov
push
call
add
cmp
je
lea
mov
mov
mov
mov
call
mov
cmp
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
push
push
push
lea
push
push
lea
push
movl
mov
call
add
cmp
mov
je
mov
cmp
je
push
call
add
cmp
je
mov
movl
mov
mov
mov
mov
lea
mov
cmp
lea
je
push
mov
mov
call
mov
mov
add
mov
mov
cmp
mov
je
mov
cmp
mov
je
push
call
add
mov
mov
cmp
mov
mov
je
mov
push
mov
call
mov
cmp
mov
je
add
lea
cmp
jne
mov
mov
mov
lea
call
lea
call
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
lea
movl
movl
call
lea
call
lea
call
lea
call
lea
call
lea
jmp
mov
mov
movzbl
mov
and
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
test
je
push
push
xor
call
add
cmp
je
push
mov
movl
movl
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
cmpb
je
push
push
lea
lea
mov
call
mov
cmp
je
add
mov
mov
push
mov
call
mov
cmp
je
mov
lea
push
push
push
mov
call
test
js
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
lea
push
call
mov
add
test
je
mov
push
push
push
call
add
movb
test
mov
je
mov
mov
push
call
add
xor
lea
call
cmp
pop
je
pop
mov
pop
pop
add
ret
pushl
mov
mov
pushl
mov
push
call
ret
mov
mov
push
mov
add
push
call
pop
ret
int3
int3
test
je
mov
test
push
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
xor
pop
ret
cmp
je
cmp
je
cmp
je
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmpl
je
mov
add
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmpl
je
mov
add
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
movl
call
mov
add
test
mov
je
push
push
push
push
mov
call
add
test
je
push
mov
push
push
call
push
mov
call
add
test
je
push
mov
push
push
call
push
mov
call
add
test
je
push
mov
push
push
call
add
mov
xor
pop
pop
pop
pop
ret
mov
sub
cmp
ja
push
call
add
test
je
add
ret
mov
mov
push
call
ret
pushl
call
mov
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
movzwl
cmp
jle
lea
mov
mov
lea
push
movl
mov
push
push
mov
call
cmpl
jne
sub
add
cmp
jg
cmp
je
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
push
mov
push
cmpl
push
pop
lea
je
push
mov
cmp
je
push
pop
mov
push
push
push
pushl
lea
push
xor
call
mov
mov
mov
add
xor
push
inc
call
test
pop
je
mov
push
call
pop
leave
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
lea
jmp
int3
mov
cmpl
push
mov
push
jge
mov
push
mov
push
call
mov
add
test
je
mov
mov
push
call
push
call
add
test
mov
pop
je
mov
mov
mov
push
push
push
call
cmp
je
mov
lea
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
cmp
mov
jne
mov
cmp
jne
mov
mov
cmp
jne
mov
pop
pop
ret
cmp
jne
mov
pop
pop
ret
cmp
je
push
lea
call
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
push
mov
mov
xor
mov
mov
mov
cmp
je
push
movl
mov
mov
push
push
call
mov
movl
mov
mov
push
mov
call
test
je
push
mov
call
mov
test
je
xor
mov
cmp
mov
jne
call
mov
test
je
mov
mov
push
call
test
je
mov
test
jne
mov
mov
pop
pop
mov
pop
pop
pop
ret
lea
addl
mov
jmp
call
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
je
push
push
mov
mov
mov
lea
push
add
push
push
call
test
je
mov
mov
lea
add
lea
cmp
push
je
push
lea
test
je
mov
test
mov
je
addl
add
add
cmp
jne
pop
mov
addl
mov
add
je
mov
test
mov
mov
je
mov
push
push
call
test
je
test
je
mov
mov
push
call
pop
pop
pop
xor
ret
xor
jmp
int3
int3
push
push
push
mov
mov
mov
test
lea
push
push
jbe
lea
xor
mov
lea
mov
mov
cmp
jne
mov
pop
pop
pop
pop
pop
ret
push
call
xor
add
cmp
je
mov
mov
movl
mov
lea
mov
call
lea
mov
push
mov
mov
call
mov
mov
mov
call
mov
push
push
call
pop
mov
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
xor
test
je
lea
movsbl
rol
add
xor
mov
test
jne
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
mov
mov
mov
mov
jmp
push
mov
push
pushl
mov
pushl
pushl
push
call
test
js
test
je
mov
test
je
test
jne
xor
pop
pop
ret
mov
jmp
int3
sub
push
push
mov
xor
push
mov
push
mov
cmp
mov
mov
mov
mov
mov
mov
je
push
call
add
movl
mov
add
cmp
jne
mov
cmp
jne
mov
cmp
mov
je
add
add
mov
test
lea
jne
cmpb
jne
test
je
cmpl
je
push
call
add
lea
call
pop
pop
pop
pop
add
ret
testb
jne
mov
lea
call
mov
lea
call
xor
mov
call
movl
jmp
mov
mov
cmp
jg
sub
mov
mov
imul
cmp
jb
jmp
push
mov
push
push
push
xor
cmp
je
push
mov
movw
cmp
je
pushl
mov
lea
mov
call
mov
cmp
mov
mov
je
mov
mov
mov
push
lea
call
mov
push
lea
call
mov
lea
push
push
call
mov
cmp
pop
jne
lea
call
lea
call
lea
call
xor
pop
pop
leave
ret
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
push
mov
test
je
test
movl
je
push
push
lea
mov
movl
call
mov
lea
lea
push
push
mov
call
test
js
mov
test
je
add
lea
cmp
jne
lea
mov
mov
lea
mov
movl
movl
movl
movb
call
test
js
cmpl
je
lea
push
lea
mov
call
cmpl
jne
cmpl
movl
jne
mov
test
jne
test
jne
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
lea
call
jmp
push
mov
sub
push
push
push
mov
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
cmp
je
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
mov
and
mov
jne
cmp
jne
pushl
lea
call
cmp
jne
lea
push
pushl
call
test
pop
pop
jne
cmp
mov
mov
je
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
and
jne
cmp
jne
pushl
lea
call
cmp
jne
pushl
mov
pushl
mov
push
call
test
jne
mov
lea
push
pushl
push
call
cmp
je
push
lea
mov
mov
call
mov
lea
push
push
call
pushl
lea
pushl
call
mov
cmp
pop
pop
mov
mov
mov
je
mov
lea
call
mov
lea
call
cmp
mov
je
cmp
je
mov
cmp
je
mov
lea
push
pushl
push
call
cmp
mov
je
lea
call
push
mov
lea
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
lea
call
mov
cmp
je
mov
push
call
lea
call
mov
mov
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
pushl
mov
push
call
mov
cmp
je
mov
mov
push
push
call
mov
mov
mov
lea
mov
call
cmp
je
mov
push
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
cmpl
je
decl
jne
add
mov
call
ret
mov
test
jg
cmpl
je
test
lea
mov
jne
add
mov
call
ret
mov
cmp
jae
inc
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
lea
cmp
push
jne
mov
test
jne
xor
pop
pop
pop
ret
push
push
push
lea
call
push
push
push
call
pop
pop
pop
ret
push
mov
push
mov
push
push
pushl
call
cmp
je
mov
call
test
jne
pushl
mov
push
call
lea
mov
push
call
test
je
mov
call
test
jne
mov
push
pushl
push
call
xor
pop
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
mov
mov
cmpl
jge
push
mov
xor
push
mov
call
mov
add
lea
call
cmp
jne
mov
mov
mov
push
call
mov
add
test
pop
je
mov
mov
push
push
push
push
push
add
push
push
mov
call
lea
call
pop
pop
pop
add
ret
cmp
je
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
push
xor
mov
push
lea
lea
mov
movl
movl
mov
mov
mov
call
cmp
je
mov
push
mov
lea
lea
mov
lea
push
lea
push
movl
movl
movl
mov
mov
mov
movl
movl
mov
mov
call
mov
test
jne
test
jne
mov
mov
push
push
lea
push
push
push
push
mov
call
test
js
mov
mov
mov
push
push
push
call
mov
mov
test
jne
test
jne
lea
call
mov
pop
mov
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
mov
cmpb
jne
cmpl
mov
jne
cmpb
je
cmpl
jne
mov
cmp
jne
mov
cmpl
mov
movl
jne
mov
call
test
jne
test
jne
mov
cmp
je
cmp
je
cmp
je
cmpb
je
mov
mov
mov
call
test
je
test
je
test
je
mov
mov
mov
mov
lea
mov
test
je
mov
test
je
push
call
add
test
jne
mov
mov
mov
call
test
je
cmp
jne
mov
cmp
jne
push
push
call
add
test
jne
cmpl
jne
push
lea
push
push
call
add
cmpb
jne
movzbl
mov
sub
mov
mov
mov
push
push
mov
call
add
test
je
mov
mov
test
jne
cmpb
jne
mov
mov
mov
mov
cmpl
jne
mov
mov
mov
test
mov
mov
jne
mov
add
cmp
je
mov
lea
call
mov
mov
lea
push
push
mov
call
mov
mov
mov
push
push
push
mov
call
lea
mov
call
lea
call
mov
pop
pop
pop
mov
pop
ret
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
jmp
mov
mov
mov
mov
push
push
push
add
call
lea
mov
call
mov
pop
pop
pop
mov
pop
ret
test
movl
je
mov
push
add
push
mov
call
mov
call
test
jne
mov
mov
call
test
je
mov
mov
push
push
push
push
call
mov
mov
call
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
cmpl
je
pushl
call
pop
ret
mov
test
je
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
test
je
mov
push
xor
push
mov
mov
push
mov
xor
push
lea
lea
mov
movl
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
call
mov
test
js
mov
cmp
je
mov
lea
push
push
mov
call
test
js
cmp
jne
push
call
add
cmp
je
movl
movl
movl
movl
mov
mov
mov
push
mov
mov
call
mov
push
mov
lea
mov
call
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
test
js
mov
cmp
je
mov
push
mov
call
mov
mov
mov
push
call
test
je
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
test
js
mov
cmp
je
push
mov
lea
mov
call
mov
mov
lea
push
push
mov
call
cmp
jne
push
call
add
cmp
je
call
cmp
je
mov
mov
mov
push
call
mov
mov
lea
push
mov
push
push
mov
push
call
mov
mov
mov
push
push
call
mov
mov
push
call
mov
lea
call
lea
call
mov
mov
mov
push
call
jmp
lea
call
lea
call
test
js
mov
xor
lea
call
lea
call
cmp
jne
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
push
push
call
xor
add
cmp
je
push
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
xor
pop
ret
push
mov
and
mov
sub
cmp
push
push
push
jne
pop
pop
pop
mov
pop
ret
lea
call
mov
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
movl
push
xor
mov
mov
push
lea
add
movl
mov
mov
movl
mov
mov
mov
cmp
jbe
mov
push
push
push
call
add
cmp
je
sub
mov
mov
cmp
jae
cmp
mov
mov
mov
mov
jb
lea
mov
mov
mov
lea
push
call
mov
mov
mov
sub
sub
add
je
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
movl
lea
push
call
mov
or
call
test
je
mov
add
cmp
je
mov
mov
sub
cmp
jbe
add
cmp
jne
mov
pop
pop
pop
pop
add
ret
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
push
push
call
movl
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
lea
call
cmpl
lea
je
push
call
add
lea
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
mov
test
je
mov
call
test
je
push
call
add
mov
mov
lea
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
push
push
lea
push
push
call
mov
cmp
jne
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
call
mov
pop
pop
pop
pop
xor
call
add
ret
mov
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
push
lea
movl
movl
movl
movl
movl
je
mov
lea
push
mov
call
mov
test
push
lea
push
jne
lea
call
lea
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
test
jne
mov
test
pop
pop
je
mov
push
mov
call
mov
test
je
addl
je
lea
call
lea
call
lea
call
lea
call
mov
call
mov
xor
cmp
movl
je
mov
mov
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
push
push
mov
push
mov
call
add
test
je
mov
mov
call
test
je
add
test
mov
je
mov
mov
push
call
cmpl
je
lea
lea
push
mov
mov
movl
movl
movl
mov
movb
call
add
test
jne
mov
mov
mov
push
push
push
push
push
push
call
test
js
mov
mov
mov
push
push
push
mov
call
mov
mov
test
jne
test
jne
lea
call
mov
mov
pop
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
mov
mov
mov
push
xor
push
mov
mov
mov
call
push
lea
mov
mov
call
mov
mov
lea
lea
push
push
call
testl
jne
cmp
jne
push
lea
lea
movl
movl
mov
mov
call
cmp
je
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
mov
mov
je
push
mov
lea
call
mov
cmp
je
push
lea
call
mov
mov
lea
push
push
call
push
mov
lea
mov
call
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
push
lea
call
mov
mov
lea
push
push
call
mov
push
lea
call
mov
mov
lea
push
push
call
mov
call
lea
mov
call
push
lea
call
mov
mov
lea
push
push
call
lea
call
testb
mov
mov
mov
mov
je
movzbl
mov
push
mov
mov
push
mov
push
push
lea
push
push
mov
xor
push
push
push
push
push
call
mov
mov
mov
mov
push
push
call
cmp
jne
mov
cmp
je
lea
mov
mov
push
push
mov
call
call
push
push
push
push
call
cmp
jbe
lea
cmp
jne
cmp
je
cmpl
je
testl
mov
mov
lea
jne
push
mov
call
cmp
je
mov
mov
lea
push
push
mov
call
mov
mov
mov
push
mov
push
push
mov
call
mov
mov
mov
mov
add
push
push
call
lea
call
mov
cmp
mov
je
test
mov
js
mov
mov
mov
mov
push
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
pop
add
ret
push
lea
call
push
lea
call
mov
xor
test
je
jmp
push
mov
push
mov
test
je
mov
mov
andl
push
mov
lea
call
mov
mov
mov
lea
mov
call
xor
pop
pop
ret
cmpl
mov
mov
je
orl
xor
ret
push
mov
sub
push
xor
cmp
je
push
push
lea
mov
mov
call
lea
push
lea
lea
mov
push
push
movl
movl
movl
call
testb
jne
testb
jne
pushl
mov
lea
mov
call
pushl
mov
lea
mov
call
cmp
je
pushl
mov
mov
push
push
pushl
push
call
test
js
mov
mov
push
push
call
mov
mov
add
push
push
call
push
push
pushl
push
pushl
call
add
lea
call
lea
call
lea
call
pop
pop
leave
ret
int3
int3
sub
mov
xor
mov
push
mov
push
mov
push
mov
movl
mov
test
push
mov
mov
jbe
mov
mov
mov
mov
lea
cmpw
je
sub
add
test
jne
mov
cmpl
movl
je
mov
mov
call
test
je
mov
mov
lea
lea
sub
mov
xor
sar
cmp
lea
mov
movl
movl
mov
mov
je
push
lea
call
test
je
mov
or
lea
call
test
je
mov
test
jbe
mov
mov
sub
movzwl
cmp
jae
movzwl
movzbw
movzwl
mov
add
sub
jne
mov
lea
push
call
mov
mov
add
test
jne
test
jne
cmpl
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
push
call
mov
add
jmp
sub
sar
test
jle
mov
push
push
push
lea
movl
movl
movl
call
push
call
mov
mov
mov
add
test
jne
test
jne
cmpl
je
mov
sub
sub
push
add
push
push
lea
movl
movl
movl
call
push
call
mov
mov
mov
add
test
jne
test
jne
cmpl
je
mov
mov
mov
mov
mov
push
push
call
jmp
push
mov
lea
call
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
mov
sub
push
mov
test
je
testw
jne
pop
leave
ret
cmpl
je
cmpl
je
mov
mov
mov
orl
orl
push
push
mov
mov
mov
mov
call
test
mov
ja
mov
mov
lea
push
call
mov
test
mov
je
andl
push
mov
lea
call
mov
test
je
lea
or
push
mov
mov
mov
push
call
mov
mov
lea
push
push
call
xor
cmp
jge
cmp
jge
cmp
jge
cmpl
jne
cmp
jge
lea
call
lea
call
pop
pop
jmp
pushl
mov
call
test
jne
pushl
mov
call
test
jne
cmpl
je
cmpl
je
jmp
push
mov
sub
push
mov
test
je
andl
push
mov
lea
call
mov
test
jne
and
push
mov
lea
call
mov
test
jne
and
push
mov
lea
call
mov
test
je
mov
mov
mov
lea
call
lea
call
mov
test
je
mov
test
jne
mov
test
je
cmpb
je
mov
mov
lea
call
lea
call
mov
test
je
mov
test
jne
mov
mov
lea
call
mov
pop
leave
ret
xor
jmp
xor
jmp
int3
int3
int3
int3
int3
sub
push
mov
mov
mov
push
mov
call
test
je
push
push
push
xor
push
lea
mov
mov
mov
mov
mov
call
push
lea
call
push
lea
call
mov
mov
lea
push
lea
push
lea
push
lea
push
mov
call
test
js
mov
mov
mov
call
cmp
mov
je
mov
mov
mov
push
call
mov
mov
push
mov
call
mov
call
mov
mov
push
push
lea
push
call
mov
mov
mov
push
mov
lea
push
mov
push
push
mov
push
mov
push
push
call
test
mov
js
cmpl
jne
cmp
je
test
je
mov
call
push
call
mov
mov
andb
test
movb
movl
mov
mov
je
mov
mov
push
call
lea
call
lea
call
mov
test
je
mov
mov
push
call
mov
test
je
mov
mov
push
call
lea
call
mov
pop
pop
pop
pop
add
ret
mov
mov
push
mov
call
push
mov
call
mov
andb
mov
mov
test
movb
movl
mov
je
mov
mov
push
call
lea
call
lea
call
mov
test
je
mov
mov
push
call
mov
test
je
mov
mov
push
call
lea
call
pop
mov
pop
pop
pop
add
ret
int3
int3
push
mov
push
mov
call
test
jne
mov
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
je
mov
cmp
je
call
mov
test
mov
mov
jne
and
testb
je
mov
cmp
je
test
mov
je
mov
test
je
mov
test
je
mov
mov
lea
cmp
je
mov
add
test
jne
mov
mov
mov
mov
push
push
push
call
test
mov
mov
mov
js
test
je
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
sub
mov
add
mov
mov
test
je
mov
mov
mov
mov
mov
movl
xor
mov
test
jne
cmp
je
mov
pop
pop
pop
pop
add
ret
mov
test
je
mov
mov
test
mov
mov
je
mov
cmp
je
test
mov
je
mov
mov
test
je
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
sub
mov
add
mov
mov
mov
mov
mov
mov
movl
xor
test
js
mov
test
jne
pop
pop
pop
pop
add
ret
mov
mov
lea
push
push
push
mov
call
mov
jmp
test
js
mov
mov
call
jmp
mov
call
pop
pop
pop
xor
pop
add
ret
int3
sub
push
push
push
mov
xor
push
mov
xor
mov
mov
call
test
mov
jne
lea
push
lea
push
push
push
push
mov
mov
call
add
xor
test
mov
js
push
push
lea
push
mov
lea
push
mov
push
push
push
call
mov
mov
add
test
js
mov
lea
movl
mov
movl
mov
mov
push
push
call
test
js
mov
test
jne
lea
push
lea
push
push
call
add
cmp
je
cmp
mov
mov
mov
je
test
je
mov
movl
mov
mov
mov
test
jne
test
jne
cmp
jne
mov
pop
pop
pop
pop
add
ret
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
push
push
mov
call
mov
mov
lea
lea
push
rep
call
mov
add
push
call
mov
add
cmp
jne
cmpb
je
mov
test
jne
mov
push
call
add
mov
push
call
add
mov
lea
push
lea
push
mov
lea
push
lea
push
push
call
fldl
fstl
add
fldl
lea
fstl
fldl
fsubp
fxch
fstpl
fsubrl
fstpl
call
fldl
call
fldl
mov
call
mov
push
mov
lea
push
push
mov
lea
push
add
call
fldl
mov
fchs
fldl
mov
sub
fchs
fstpl
fstpl
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
lea
push
push
call
mov
add
test
mov
je
mov
call
mov
mov
lea
push
push
call
add
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpb
je
mov
push
push
call
mov
push
mov
call
add
lea
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
and
push
push
push
mov
push
lea
push
lea
mov
call
cmpl
je
flds
flds
flds
flds
mov
fxch
fstpl
fxch
fstpl
fstpl
fstpl
mov
pop
pop
pop
mov
pop
ret
sub
push
mov
cmp
push
push
push
je
mov
mov
mov
push
mov
call
test
jne
mov
test
jne
push
mov
call
mov
mov
mov
mov
call
cmp
je
cmp
je
cmp
je
cmp
je
movl
mov
mov
cmp
jne
mov
mov
push
mov
call
test
jne
mov
and
or
jne
xor
pop
pop
pop
pop
add
ret
mov
and
or
jne
cmp
je
jmp
mov
mov
jmp
mov
call
test
jne
jmp
int3
int3
int3
mov
mov
mov
mov
mov
mov
mov
mov
sub
lea
movl
movl
mov
push
push
mov
call
mov
mov
mov
add
add
sub
sub
js
mov
sub
mov
sub
js
test
mov
jl
xor
test
jl
add
ret
xor
jmp
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
mov
movl
call
push
call
pop
xor
jmp
push
mov
push
push
push
mov
push
xor
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
pushl
mov
lea
mov
call
mov
mov
push
call
lea
call
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
push
mov
cmp
mov
je
mov
push
call
mov
mov
call
lea
mov
call
lea
call
pop
lea
call
lea
call
incl
pop
xor
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
add
mov
xor
call
test
je
mov
mov
mov
push
push
lea
push
mov
call
mov
mov
test
mov
mov
je
and
mov
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
test
je
lea
cmp
jne
add
test
je
mov
cmp
je
add
mov
mov
call
mov
call
cmpb
jne
mov
lea
call
mov
pop
pop
pop
add
ret
mov
test
jne
jmp
push
push
mov
call
lea
mov
call
mov
pop
pop
pop
add
ret
pop
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
push
xor
lea
mov
push
push
mov
call
mov
mov
add
cmp
je
cmp
mov
jne
cmp
je
cmp
jne
cmp
jne
mov
mov
cmp
je
mov
cmp
je
mov
mov
and
xor
or
jne
mov
and
xor
or
jne
mov
and
xor
or
mov
mov
mov
jne
mov
xor
and
or
mov
mov
mov
mov
je
mov
cmp
je
lea
call
mov
mov
cmp
je
mov
cmp
jne
mov
lea
call
mov
add
mov
push
call
add
mov
lea
call
mov
mov
add
call
mov
mov
and
or
mov
jne
mov
and
cmp
mov
mov
je
or
jne
mov
mov
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
xor
nop
mov
cmp
jne
add
cmp
jl
lea
mov
lea
mov
cmp
jne
add
lea
cmp
jae
cmp
jne
add
lea
cmp
jb
cmp
mov
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
mov
pop
ret
cmp
mov
mov
jne
cmp
je
mov
mov
lea
call
mov
cmp
je
mov
mov
push
call
sub
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
cmp
jne
mov
mov
mov
push
call
mov
cmp
jne
lea
cmp
jb
lea
call
lea
call
jmp
or
cmp
mov
mov
je
jmp
mov
mov
add
call
jmp
int3
int3
int3
sub
mov
xor
mov
mov
mov
push
xor
cmp
push
push
je
mov
cmp
mov
je
mov
mov
push
call
mov
lea
mov
mov
lea
push
mov
mov
movl
mov
mov
mov
mov
push
push
mov
call
lea
lea
push
lea
push
mov
mov
movl
mov
mov
mov
call
add
cmp
je
push
call
add
cmp
je
mov
call
xor
cmp
mov
je
xor
cmp
lea
sete
mov
push
mov
push
push
push
call
mov
test
js
mov
mov
push
push
lea
call
test
js
cmpb
je
mov
mov
mov
push
push
push
mov
call
mov
test
jne
test
jne
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
lea
call
mov
mov
pop
pop
pop
xor
call
add
ret
mov
mov
movb
mov
jmp
push
mov
push
push
xor
cmp
push
je
cmp
je
mov
mov
mov
push
mov
call
mov
push
push
call
test
js
mov
push
mov
lea
mov
call
cmp
je
cmp
jne
mov
pushl
mov
push
call
mov
mov
lea
mov
mov
call
mov
mov
push
pushl
pushl
push
call
test
jne
lea
call
xor
pop
pop
leave
ret
mov
lea
push
call
mov
lea
push
push
call
test
js
xor
jmp
push
mov
push
mov
cmpb
push
jbe
mov
mov
mov
mov
xor
inc
call
test
je
mov
mov
pop
pop
pop
ret
push
mov
push
mov
test
je
lea
push
pushl
add
pushl
push
call
and
jne
test
jne
pushl
mov
call
pop
pop
ret
andl
jmp
andl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
test
je
mov
and
cmp
jne
mov
mov
add
mov
mov
xor
pop
ret
mov
test
push
push
je
mov
push
call
add
mov
call
push
mov
call
add
test
pop
pop
jne
jmp
int3
int3
int3
sub
mov
mov
push
push
mov
push
push
mov
mov
test
mov
jne
mov
mov
lea
push
push
push
push
push
mov
mov
call
xor
mov
mov
mov
mov
mov
mov
lea
push
lea
push
call
add
lea
lea
lea
call
test
je
mov
mov
mov
push
push
push
push
push
call
mov
cmp
jne
mov
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
mov
test
jne
mov
mov
test
lea
je
andl
mov
mov
push
mov
call
test
jne
mov
mov
push
mov
call
test
jne
mov
lea
mov
and
mov
je
mov
test
jne
mov
test
mov
mov
je
test
jne
mov
mov
push
push
mov
push
push
push
push
push
lea
push
push
call
cmpl
mov
mov
jne
xor
mov
push
push
push
mov
push
mov
mov
push
push
push
push
push
mov
call
lea
call
cmpl
jne
mov
mov
mov
jmp
cmpl
je
andl
jmp
mov
push
push
lea
push
call
add
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
lea
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
mov
mov
lea
mov
call
lea
call
mov
pop
pop
pop
ret
mov
mov
push
pushl
push
call
ret
int3
int3
sub
push
mov
mov
mov
mov
mov
push
mov
push
push
push
mov
call
test
jne
and
call
mov
add
fiadds
pop
gs
popa
mov
out
push
les
insb
add
add
add
add
stos
xchg
add
movsb
jae
add
pop
add
add
pushf
push
mov
add
add
jmp
call
in
add
push
push
push
push
push
lea
push
lea
push
call
add
xchg
xlat
test
add
add
add
add
add
add
jb
out
shl
add
xchg
mov
add
rcll
add
add
add
add
mov
add
out
ret
in
call
popl
push
push
push
push
lea
push
push
push
push
push
call
add
xchg
mov
fwait
add
add
push
xchg
add
add
add
add
add
xchg
mov
push
add
add
arpl
add
fists
add
add
les
add
dec
xchg
clc
add
pushf
add
jb
lds
fsubrs
sub
pop
push
push
push
push
push
push
push
call
add
movsb
add
mov
add
add
jge
ljmp
xchg
in
jmp
xchg
add
xchg
pusha
insb
mov
add
add
add
mov
popf
add
mov
xchg
ja
add
add
push
add
int
in
call
cmp
mov
add
add
add
add
mov
enter
add
add
add
add
addl
add
jae
aad
out
mov
mov
faddl
lret
add
lea
add
mov
jmp
xchg
xchg
sub
pop
push
call
push
lea
push
push
push
lea
push
push
push
push
call
stc
insb
add
add
push
fs
add
stc
je
add
add
add
repnz
aam
imul
add
add
lret
jae
mov
sbbb
fsubrl
add
jbe
add
add
les
add
add
dec
scas
cmc
inc
push
push
call
add
lds
add
add
add
test
testb
testl
add
jnp
nop
mov
add
ljmp
pop
call
jmp
push
lea
push
push
lea
push
lea
push
push
lea
push
lea
push
push
call
shl
mov
add
mov
add
mov
js
lods
push
add
cld
lret
cld
adc
add
mov
imul
lcall
mov
push
lea
push
push
lea
push
call
push
add
out
add
call
lret
iret
xchg
shrl
mov
add
mov
clc
add
pop
add
je
add
jns
in
lock
lcall
pop
hlt
push
push
push
push
push
push
call
add
cmc
add
add
push
negb
jmp
add
xchg
cwtl
repnz
orb
jb
add
test
sub
pop
add
push
push
call
ljmp
sti
fwait
add
mov
xlat
mov
pop
add
add
add
push
add
fcoml
fistl
mov
jle
sbb
jnp
add
add
mov
xchg
add
je
outsl
push
push
add
add
clc
pop
add
add
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
test
add
fidivrl
add
popl
je
add
add
push
add
test
stos
ficoms
add
add
xchg
leave
pop
add
add
sub
pop
mov
push
push
push
lea
push
push
push
lea
push
push
call
ja
jne
add
mov
loope
filds
fadds
add
jge
into
mov
add
pusha
int3
xchg
test
add
add
loop
jns
push
mov
test
imul
add
add
mov
pop
xor
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
xchg
add
repnz
pop
add
mov
jb
sti
push
add
pop
add
pop
sar
pop
push
add
jp
mov
cmc
add
test
add
jne
lcall
mov
scas
lock
in
in
lcall
les
add
push
push
lea
add
push
xor
add
dec
shl
dec
sub
shr
sub
inc
sub
pop
pop
push
push
push
lea
push
push
lea
push
call
shrl
add
hlt
push
fldenv
add
popa
mov
shrb
fldl
add
imul
xchg
add
jno
je
add
add
jmp
sub
pop
pushl
push
push
call
add
jbe
jle
add
add
roll
lret
out
aad
add
mov
add
pop
pop
add
bound
std
ret
add
push
test
add
stos
mov
add
add
clc
lcall
std
push
add
push
lea
push
push
lea
push
call
sahf
pop
lcall
nop
add
test
mov
add
push
add
add
addb
add
in
test
std
arpl
call
add
lcall
inc
lock
lea
push
call
out
ja
add
add
lea
ret
popa
mov
add
add
hlt
push
add
add
push
add
out
add
leave
loop
pop
popf
pop
add
fldl
testb
mov
pushf
sub
pop
movl
lea
push
lea
push
push
push
lea
push
lea
push
push
push
push
call
fwait
shll
testb
fildl
lock
fadd
mov
pop
icebp
add
cmpsb
mov
add
roll
add
xchg
add
jb
mov
pop
lret
pop
lcall
nop
add
ja
add
push
pop
mov
in
fdivr
lcall
pushl
push
push
call
add
add
add
add
add
add
out
pop
push
jo
mov
add
js
jns
add
rolb
add
scas
add
addl
add
add
jne
push
push
push
push
push
push
push
push
call
add
movsl
jl
add
add
mov
add
jnp
add
add
out
mov
add
add
add
add
xchg
push
add
add
ret
lods
cwtl
nop
xchg
add
add
add
add
add
testb
add
push
lea
push
push
push
push
push
push
push
push
lea
push
call
add
add
add
add
jnp
mov
mov
xchg
in
test
movl
xchg
add
add
pop
add
lods
mov
add
add
add
into
fs
add
fdivr
lcall
jne
push
push
push
lea
push
push
push
push
lea
push
call
add
add
mov
test
push
jmp
les
add
add
add
in
loopne
pushl
call
push
push
rol
lea
push
or
not
add
sub
sub
xor
pop
shl
pop
push
push
lea
push
call
add
fstps
pop
add
lods
scas
mov
add
lret
add
cld
testb
add
mov
rcr
mov
leave
mov
mov
add
add
add
add
in
hlt
pop
pushl
push
push
push
call
push
add
pop
out
add
fcom
xchg
add
add
in
xchg
cmc
roll
add
push
mov
ja
sbbl
data16
add
arpl
roll
sub
pop
call
push
push
push
shr
push
push
pop
add
inc
sub
add
dec
rol
inc
pop
not
dec
pop
push
lea
push
call
ja
test
add
out
add
add
add
add
stos
lret
jbe
pop
nop
add
xchg
add
add
mov
out
mov
mov
add
add
add
sub
pop
push
push
push
push
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
call
add
mov
add
scas
mov
rol
jecxz
add
addl
fildll
int
push
jnp
mov
add
in
fdivr
lcall
rclb
adc
jbe
lea
push
push
lea
push
push
push
push
call
roll
test
add
cmpsl
clc
test
add
in
lahf
outsl
adcb
add
stos
pop
add
pop
add
add
rolb
fadd
fldl
xchg
in
mov
pop
pop
add
xchg
add
pop
add
push
gs
add
lcall
clc
push
push
lea
push
push
call
add
mov
add
cmc
add
mov
add
stos
les
in
add
add
lods
out
scas
fiaddl
xchg
xlat
stos
xchg
add
add
mov
add
les
add
fcmovnu
jne
out
add
mov
add
sub
pop
push
push
push
push
push
push
lea
push
push
lea
push
call
add
add
cmpsl
jge
jae
mov
repnz
add
mov
add
add
in
add
lcall
push
lea
push
lea
push
push
call
add
mov
fdiv
add
add
addb
movsb
addl
mov
xchg
push
mov
sub
pop
mov
push
push
call
movsl
add
call
jmp
ljmp
add
popf
lahf
mov
in
movsb
add
push
add
arpl
stos
mov
rolb
add
lds
add
repnz
jle
test
gs
fwait
jo
lds
pop
movsl
add
test
sub
pop
add
push
push
push
lea
push
push
push
call
icebp
into
add
in
out
add
pop
add
pop
test
add
cld
ja
add
add
les
gs
out
add
add
add
jne
std
pushf
sahf
push
fbld
lock
xchg
add
mov
in
call
add
push
push
push
lea
push
push
call
add
call
lret
jno
in
mov
fs
add
mov
add
popf
mov
fadds
icebp
data16
add
add
add
sarl
pushf
rcr
pop
stos
add
in
pop
add
mov
xor
push
lea
push
push
push
call
mov
roll
xchg
add
add
aam
add
data16
pusha
fsubl
push
fildl
lock
lds
add
add
mov
add
add
add
add
pop
sti
add
je
cwtl
cltd
add
add
add
fidivrs
lcall
jne
push
push
lea
push
push
push
push
call
add
cwtl
addb
xchg
lret
test
add
pop
enter
add
shlb
movsl
roll
push
push
cmpsl
add
sub
pop
push
push
push
push
push
push
lea
push
call
cwtl
add
add
add
xchg
cltd
add
pop
ret
add
loopne
add
out
testl
outsl
lcall
rolw
int3
add
pop
mov
xor
push
push
call
add
add
testb
jo
add
add
xchg
popl
add
add
add
add
mov
xchg
xchg
jns
xchg
scas
enter
movsb
add
push
push
std
add
lcall
lock
push
push
lea
push
push
push
push
call
add
mov
xchg
stos
cmc
pop
rol
clc
add
pop
ja
fadd
add
int
hlt
add
add
imul
add
pop
add
jae
pop
add
add
add
fsubrl
mov
jae
add
xchg
rolb
scas
lahf
push
add
xlat
fwait
popf
mov
add
dec
add
xor
adc
pop
xor
lea
push
call
mov
mov
jle
test
aam
add
pop
arpl
xchg
aad
push
add
aad
add
aad
nop
loope
push
aam
add
or
push
push
push
lea
push
push
push
push
push
push
push
call
add
mov
mov
add
pushf
mov
add
mov
add
mov
int3
add
in
add
rolb
fildl
repnz
fiaddl
imul
add
add
mov
mov
add
add
push
push
lea
push
push
push
push
push
push
push
lea
push
call
data16
add
add
add
xchg
add
add
push
scas
push
add
add
add
roll
add
add
add
mov
movsb
add
sub
pop
push
mov
xor
push
lea
push
push
push
lea
push
push
push
push
lea
push
push
call
popa
out
add
enter
xchg
add
add
add
add
mov
jp
mov
jecxz
add
stc
fstpt
subl
sub
pop
sub
push
lea
push
push
push
push
push
push
lea
push
push
push
call
add
lea
scas
add
test
add
xchg
stc
js
add
cmp
incb
flds
xchg
add
add
mov
jns
lods
addb
mov
mov
pop
pop
push
push
push
lea
push
push
lea
push
call
add
shrl
fiadds
je
jo
call
mov
add
add
shrb
add
mov
rcr
push
add
add
add
add
add
add
call
rep
push
push
lea
push
push
call
add
loop
add
mov
lods
imul
add
addr16
aad
hlt
jl
divl
pop
add
shl
js
in
add
pop
push
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
add
pop
lods
add
add
pop
jns
add
add
stos
outsl
mov
push
add
add
jle
test
mov
scas
add
push
lcall
add
add
add
hlt
fs
pop
mov
add
push
push
push
push
call
add
add
xchg
add
add
add
ljmp
popf
push
add
arpl
subb
cmpsb
fcmovnu
lds
aad
push
push
cmpsl
rcr
sub
pop
add
add
push
push
push
push
lea
push
push
push
call
test
lahf
mov
scas
test
add
rcll
mov
leave
add
mov
shlb
push
xchg
sub
pop
mov
push
push
push
push
push
push
push
call
pop
sahf
lds
in
loopne
pushf
add
mov
movsb
test
jl
jo
lds
add
data16
fs
scas
push
sub
pop
xor
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
jnp
stc
lret
cwtl
push
add
add
mov
into
push
xchg
mov
add
scas
push
add
add
add
fimull
xchg
add
ljmp
outsl
mov
fs
push
add
out
push
test
flds
cmc
add
xchg
jecxz
add
add
add
xchg
hlt
add
test
scas
add
lcall
les
push
push
push
lea
push
call
movsl
add
add
add
add
insb
add
add
add
add
je
pop
add
xlat
add
jb
add
pusha
add
call
xchg
nop
lock
add
mov
imul
jb
sub
pop
mov
push
push
push
lea
push
lea
push
push
push
push
push
push
push
call
add
add
sahf
int3
jmp
add
mov
lods
add
testb
add
add
add
scas
add
add
shll
add
insb
in
add
std
leave
push
sub
pop
xor
push
push
push
push
push
lea
push
call
add
push
add
add
add
jecxz
xchg
mov
jne
nop
add
add
andl
jmp
in
add
cli
aam
jl
xorl
push
loopne
add
mov
add
push
push
lea
push
lea
push
push
push
push
push
call
cld
je
mov
push
mov
mov
mov
rolb
js
mov
xchg
mov
mov
out
jl
push
shll
add
fsub
add
bound
add
add
gs
push
in
mov
mov
loopne
lcall
dec
sub
adc
push
call
add
icebp
mov
add
add
ja
shlb
fst
fldl
xchg
loope
test
add
hlt
lcall
ret
push
lea
push
push
lea
push
lea
push
call
pop
cli
add
push
lcall
add
lods
add
jnp
sti
imul
jbe
loop
add
xchg
mov
push
add
jne
add
mulb
add
pop
mov
push
push
shl
shr
push
push
pop
add
sub
not
lea
sub
pop
not
not
pop
push
push
push
push
push
lea
push
lea
push
push
push
push
call
fdivs
add
push
out
out
fldl
in
pop
add
pusha
fldl
add
add
fs
addb
pushf
outsl
leave
sahf
iret
into
aad
out
movsb
add
mov
mov
add
add
imul
lods
lea
gs
sahf
jnp
sti
int3
mov
sub
pop
pushl
call
push
push
call
mov
add
out
cld
mov
icebp
push
add
xlat
scas
add
mov
cmpsb
add
add
cmc
enter
pop
lock
mov
arpl
mov
int
int3
mov
mov
roll
mov
mov
stc
add
jo
pushf
sub
pop
push
push
push
push
sub
add
lea
shl
add
sub
ror
pop
add
not
pop
push
push
push
lea
push
call
push
insb
stc
loope
add
notl
push
add
int3
jmp
add
add
add
add
imul
movsl
pusha
out
loop
ljmp
in
lock
push
push
push
sub
inc
pop
call
push
push
push
push
push
call
mov
mov
loope
ficompl
mov
test
xlat
add
xchg
fsubrl
add
add
pop
add
push
jle
aad
add
add
add
mov
mov
add
jb
arpl
int3
xchg
add
test
add
in
in
pop
mov
push
push
lea
push
lea
push
push
push
call
lahf
shll
add
fucomip
add
mov
fwait
pop
push
jmp
cmpsl
add
fs
add
clc
loopne
add
push
mov
add
lods
add
shl
add
xchg
add
add
add
mov
cmpsb
repnz
sub
pop
push
push
not
pop
mov
push
push
push
push
push
call
test
mov
lods
cwtl
loopne
xchg
sarl
add
int
xchg
sti
out
cwtl
add
mov
addb
add
add
fwait
add
pop
add
icebp
push
add
in
in
lcall
pop
in
add
push
add
pop
add
push
lea
add
pop
mov
push
push
push
push
push
lea
push
lea
push
push
call
jo
jecxz
jne
add
add
add
mov
push
sahf
add
int3
push
cli
add
subl
push
add
enter
add
scas
nop
add
mov
mov
mov
mov
add
add
add
add
add
sub
pop
xor
push
push
lea
push
call
stos
add
add
add
outsl
scas
loop
jo
add
mov
add
push
xchg
icebp
cmpsb
add
jmp
loopne
mov
rorb
add
add
sti
mov
in
hlt
pop
add
push
push
push
push
call
test
jge
xchg
add
pop
test
mov
push
jb
aad
add
add
je
add
loop
push
lock
mov
add
add
jns
add
add
pop
lods
add
add
lds
mov
clc
jnp
aad
add
mov
add
fwait
or
jno
push
sub
pop
add
push
push
push
call
mov
hlt
fadds
mov
pop
add
sahf
sbbl
pop
add
add
mov
add
lret
pop
add
xchg
ja
mov
aad
add
mov
lahf
add
jnp
ret
jl
sub
pop
push
push
not
pop
mov
push
push
push
push
push
push
lea
push
push
push
push
push
call
add
add
cli
fwait
add
aad
add
add
add
mov
add
imul
add
pop
xor
push
push
push
push
push
push
call
lods
add
add
add
ja
add
call
add
jne
call
add
cmpsl
aam
jmp
add
rcll
mov
cmpsl
lea
fwait
cltd
sar
jle
jnp
add
ja
movsl
popa
sti
pop
add
add
les
shl
shl
pop
add
pop
push
sub
lea
pop
mov
push
push
push
push
push
push
push
push
call
mov
arpl
lahf
aad
add
rcrb
mov
in
nop
add
add
roll
push
fildl
sahf
push
cld
add
ljmp
mov
andl
add
std
add
add
movb
cmc
test
mov
sub
pop
xor
push
push
push
push
lea
push
call
add
push
add
scas
add
lods
mov
mov
pop
insb
or
pop
pop
xchg
mov
cld
roll
jecxz
jge
in
sub
pop
add
push
push
lea
push
lea
push
push
push
call
jae
jecxz
lret
add
add
add
enter
add
mov
xchg
add
int3
in
add
add
add
jno
add
jecxz
addl
push
fs
mov
jns
call
out
clc
jmp
sub
lcall
movsb
push
lea
push
push
lea
push
push
call
add
out
add
addr16
testl
jno
scas
mov
xchg
lock
nop
iret
fidivs
add
sub
pop
mov
push
push
lea
push
lea
push
lea
push
push
push
lea
push
push
call
add
test
cmc
mov
add
add
add
add
movl
shlb
test
add
call
xchg
add
pop
add
add
rol
std
add
xor
push
push
push
push
push
push
push
call
mov
mov
jecxz
mov
add
rcrl
add
ret
add
cld
add
add
jge
push
add
enter
fisubrl
add
les
lea
push
lea
push
push
lea
push
call
add
add
add
push
add
lcall
insb
rolb
mov
mov
add
add
cmc
add
jne
jno
jo
pushf
add
add
mov
ljmp
add
mov
in
loope
xlat
add
icebp
add
push
out
mov
enter
in
pop
or
je
push
push
push
push
lea
push
push
push
push
lea
push
call
pop
data16
add
aam
cmpsl
add
iret
add
add
add
stos
add
mov
out
jle
pop
icebp
jp
fs
stos
out
ror
add
add
add
cli
incb
lcall
xor
jno
adc
adc
pusha
add
add
incb
lods
add
arpl
push
mov
add
add
lock
mov
mov
into
add
pop
scas
in
in
int
pop
jl
add
push
push
add
add
aad
add
fwait
add
pop
add
mov
pop
pop
add
add
jns
aad
addr16
add
sub
pop
xor
push
lea
push
push
push
lea
push
call
fs
cmpsb
fildl
pop
cli
data16
roll
cltd
add
add
enter
out
push
shll
pusha
add
shr
mov
test
mov
push
add
add
xchg
mov
lea
add
add
aam
in
add
stos
mov
ja
arpl
mov
loop
lea
xchg
add
lcall
les
push
lea
push
push
lea
push
call
jle
jno
shlb
loope
cmpsb
nop
fwait
cld
add
lods
jecxz
roll
fs
jmp
fldl
leave
fiadds
mov
mov
movsl
les
mov
movsl
add
call
popa
pusha
add
add
adc
out
cwtl
out
sub
pop
mov
xor
push
push
push
push
lea
push
lea
push
call
test
mov
add
xchg
push
scas
mov
roll
add
push
mov
add
mov
add
jns
mov
add
add
add
push
sub
pop
add
push
rol
rol
not
pop
add
push
sub
pop
push
push
dec
pop
mov
push
push
push
push
push
push
lea
push
push
call
out
xchg
aam
notb
insb
add
add
add
xorl
add
add
int
mov
test
add
add
add
xorb
aad
in
in
lcall
add
push
push
push
push
lea
push
push
call
add
push
cli
jno
fs
icebp
lea
add
add
mov
stos
add
add
scas
les
fst
insb
push
mov
mov
popf
xchg
pop
add
js
add
mov
add
add
scas
mov
pop
add
add
xchg
add
add
pop
popa
pop
add
pop
add
lcall
les
add
push
push
lea
push
lea
push
push
push
lea
push
call
mov
int3
arpl
out
add
add
pop
mov
xchg
pop
jmp
add
push
add
mov
xchg
sub
pop
add
push
sub
lea
ror
pop
pop
push
not
pop
rep
push
lea
push
push
push
push
push
push
push
push
call
data16
add
mov
roll
pop
lock
add
arpl
add
out
add
pop
jmp
pop
in
mov
test
mov
in
add
add
add
add
add
xchg
add
add
push
std
jge
jne
add
adc
add
sub
pop
mov
xor
push
dec
shl
rol
pop
or
je
push
sub
sub
pop
mov
add
push
shl
pop
add
push
push
push
call
addb
mov
jae
fadds
jns
add
add
pop
mov
jo
jp
mov
add
add
pusha
add
add
lahf
mov
leave
popaw
rorb
rolb
lcall
movsb
push
ror
pop
pop
push
push
add
add
push
or
inc
add
dec
sub
sub
pop
sub
pop
push
lea
push
push
lea
push
push
lea
push
call
jno
fldl
add
cmpsl
insb
add
mov
add
add
sarl
add
test
cwtl
push
mov
add
push
test
pop
push
jge
in
add
test
sub
pop
pop
push
push
push
lea
push
push
push
push
lea
push
call
add
add
lods
ror
arpl
pop
popl
pusha
jecxz
push
out
jl
out
pop
add
add
cltd
mov
cmp
add
movsb
add
movsl
je
pop
ja
js
pusha
jbe
add
add
lock
push
add
jle
mov
mov
movsb
add
divb
xchg
scas
int
sub
pop
mov
push
add
rol
pop
mov
push
pop
mov
push
lea
push
push
push
push
push
push
call
add
add
fwait
mov
add
bound
leave
add
jge
flds
push
lock
pop
jmp
push
push
push
push
push
push
lea
push
push
call
add
lds
add
lds
std
cmpsb
xchg
clc
jo
add
aad
add
add
add
ret
pop
push
popl
into
pop
push
leave
pop
xchg
lods
xchg
int3
ficomps
add
add
leave
testb
sub
pop
push
push
dec
shl
pop
mov
push
sub
shr
lea
xor
pop
add
push
push
lea
push
lea
push
push
call
add
pop
add
add
sub
fnstsw
add
add
pop
in
mov
jmp
stos
mov
push
adc
jecxz
xchg
push
mov
add
add
add
leave
add
add
pusha
add
add
lcall
in
lock
push
push
pop
push
push
dec
sub
dec
ror
pop
push
push
xor
shr
rol
xor
pop
mov
push
shl
pop
pop
push
dec
add
sub
not
pop
pop
pop
push
rol
shl
ror
sub
pop
pop
leave
push
push
push
lea
push
push
push
push
push
call
add
cmpsb
cmpsb
mov
scas
lods
add
xchg
add
nop
xchg
call
imul
mov
fiadds
xchg
stc
xchg
add
addr16
add
add
add
addr16
add
in
add
xchg
add
rcrb
test
add
test
int
mov
add
loopne
add
repnz
jb
push
sub
pop
ret
push
push
push
lea
push
push
push
push
push
push
call
add
rolb
add
xlat
jbe
add
add
cmpsw
add
rolb
sti
addb
in
add
testl
imul
jmp
mov
add
push
je
add
fadds
add
in
add
push
push
lea
push
push
push
push
push
call
add
add
pop
add
cmc
add
xchg
add
add
movb
gs
fsts
icebp
mov
ret
testl
jmp
add
add
leave
push
add
lcall
push
push
lea
push
push
push
push
push
push
push
call
add
add
mov
lock
mov
add
add
mov
sti
add
stc
aam
push
add
push
xchg
arpl
add
add
add
add
add
jecxz
shr
cltd
addl
test
loop
incb
jmp
add
cli
mov
in
fdivr
lcall
push
dec
dec
sub
dec
pop
push
push
shr
pop
push
push
push
push
lea
push
push
push
call
iret
addl
popf
add
stc
xchg
add
add
mov
fiadds
add
test
nop
addr16
int3
mov
lock
pop
test
in
call
movl
push
sub
shr
pop
addl
push
sub
dec
ror
pop
test
je
mov
push
shr
pop
pop
pop
push
push
push
push
push
push
push
lea
push
push
lea
push
call
shl
lret
xchg
mov
imul
mov
call
mov
add
in
add
jnp
movsl
add
sti
sahf
out
test
mov
in
fdivr
lcall
pop
push
pop
leave
ret
push
sub
ror
lea
pop
push
push
shr
rol
pop
mov
push
lea
push
push
push
push
call
mov
pop
test
enter
pop
push
rcll
xchg
mov
movsb
clc
frstor
data16
into
add
cld
aam
popf
movsb
add
add
ja
in
in
lcall
cld
push
xor
inc
lea
not
pop
push
push
push
push
call
fucomi
add
jo
mov
hlt
jge
je
add
add
lcall
mov
cmpsl
into
add
add
icebp
add
fninit
ja
mov
pop
push
push
push
push
push
push
push
call
addr16
add
push
jo
clc
add
out
sbbl
add
jmp
xchg
cltd
test
add
sub
pop
push
push
push
push
lea
push
push
push
push
call
add
mov
addb
cli
xchg
add
je
add
add
add
add
std
pushf
add
inc
cld
add
add
push
shl
add
inc
add
pop
addl
push
lea
sub
pop
push
push
lea
ror
shl
ror
pop
call
push
ror
shr
dec
pop
mov
pushl
push
push
push
push
push
push
push
lea
push
push
push
call
jmp
add
std
mov
add
scas
add
push
aam
fwait
mov
mov
xchg
cmpsl
lds
add
in
movsl
hlt
negl
sub
pop
push
push
push
lea
push
lea
push
lea
push
push
push
lea
push
call
add
push
mov
push
imul
sarb
add
xchg
test
add
jl
ja
pusha
add
bnd
into
cld
int3
pop
negb
add
mov
cmpsl
add
add
fs
mov
add
faddl
rcll
jl
jmp
push
push
shr
pop
call
push
push
call
add
add
add
fucom
lea
outsl
add
add
add
arpl
jp
imul
add
mov
mov
lcall
jge
add
test
lea
push
lea
push
push
push
call
idivl
add
add
add
add
xchg
sti
add
add
add
add
add
hlt
add
mov
add
mov
push
add
js
mov
into
push
imul
mov
in
lcall
push
not
xor
pop
pop
pop
push
add
xor
pop
pop
push
sub
ror
pop
leave
ret
push
push
lea
push
lea
push
push
lea
push
lea
push
call
add
add
add
pop
add
shl
in
test
add
aam
add
add
bnd
mov
int
add
addl
cld
jne
add
sub
pop
push
mov
push
pop
add
push
push
push
call
mov
add
cwtl
fisubrl
add
mov
add
add
pop
call
and
add
add
mov
hlt
lcall
push
push
push
push
push
push
push
lea
push
push
call
out
call
xchg
aam
add
cltd
sahf
xchg
test
flds
adcl
jmp
add
add
add
mov
cmpsl
imul
mov
loop
insb
shll
mov
lods
jns
add
mov
add
add
test
add
sub
pop
push
push
rol
pop
push
push
push
lea
push
push
push
call
ja
add
mov
mov
add
lds
sub
push
xchg
add
test
add
pop
movl
push
push
push
push
call
movsl
pusha
jge
pop
add
scas
pop
add
fwait
nop
pop
add
add
push
add
pop
mov
mov
lcall
add
add
add
mov
add
addl
mov
jmp
movsb
jecxz
add
sarl
add
popf
sub
pop
push
push
shr
ror
sub
pop
call
push
push
push
call
pusha
mov
imul
add
add
sarl
cmpsl
push
imul
add
mov
add
stc
lret
add
sti
jbe
shl
js
add
xchg
iret
xchg
add
sub
pop
call
push
dec
lea
add
pop
subl
push
push
call
iret
insb
add
add
cmpsb
rolb
mov
arpl
push
popa
idiv
rorb
addb
xchg
lret
pop
add
jnp
mov
mov
ficoml
add
push
add
add
sub
pop
cmpl
jne
push
lea
xor
pop
pop
push
push
push
push
call
jno
pop
add
call
add
jp
imul
fcomps
add
push
add
mov
add
rcr
test
out
pusha
out
loop
insb
mov
pop
pop
push
push
push
push
push
push
push
push
call
les
sahf
testl
add
out
add
js
pop
data16
enter
add
mov
add
pop
push
dec
sub
sub
pop
pop
leave
push
lea
push
push
lea
push
lea
push
push
lea
push
lea
push
call
cmpsl
in
add
add
mov
add
mov
jns
ljmp
add
add
xchg
ret
lahf
incb
add
add
mov
fsubr
jp
add
test
add
int3
add
push
add
addr16
in
loopne
lcall
push
ror
pop
push
mov
push
rol
lea
lea
pop
add
push
sub
ror
sub
pop
push
push
pop
push
push
push
push
push
push
push
push
lea
push
push
lea
push
push
call
add
jnp
cli
push
jmp
sti
cltd
push
fiadds
mov
mov
popf
fldl
pop
xchg
addr16
gs
shrb
jmp
fwait
cwtl
pop
add
pop
xchg
push
sub
pop
push
push
push
push
push
push
push
lea
push
push
call
jge
aad
add
roll
mov
xorb
out
les
mov
mov
add
stos
mov
out
sub
pop
mov
push
rol
pop
lea
push
push
push
lea
push
push
push
push
push
push
call
add
add
add
into
lock
add
add
ja
mov
scas
xchg
jae
xchg
add
sti
loop
push
add
mov
add
mov
pop
sub
pop
sub
push
lea
push
call
add
xchg
add
leave
jo
popa
pop
scas
addl
mov
mov
add
test
add
add
into
mov
clc
add
cld
push
add
ja
in
movl
jge
movl
xchg
sub
pop
mov
push
inc
sub
pop
shr
add
push
not
shr
add
pop
mov
push
xor
pop
mov
add
push
ror
add
not
pop
add
push
sub
sub
pop
mov
push
lea
push
push
push
push
push
push
push
push
call
pop
aad
mov
add
mov
lods
add
add
add
mov
add
movsb
add
stos
rolb
and
mov
add
data16
add
pushf
icebp
push
sub
pop
mov
cmp
jne
push
sub
not
pop
cmp
jne
mov
push
sub
pop
movl
jmp
push
push
push
push
push
call
add
js
add
loopne
in
int3
add
add
add
push
add
add
cmc
add
lret
jbe
jge
push
pop
les
add
push
add
testb
in
pop
mov
push
push
lea
push
lea
push
push
push
push
push
call
xchg
xchg
mov
rcll
add
add
push
lods
add
jae
hlt
rcll
add
insb
pop
roll
jb
add
movsb
add
mov
ficoml
rol
in
loopne
lcall
push
or
adc
test
pop
mov
push
shr
shl
pop
movl
push
ror
sub
rol
pop
jmp
push
push
lea
push
push
push
lea
push
push
push
call
jnp
pop
add
add
add
mov
pop
mov
jmp
xchg
mov
add
mov
arpl
mov
mov
add
add
sti
add
add
add
lcall
inc
cld
mov
push
inc
pop
cmp
jne
push
ror
pop
mov
push
push
lea
push
lea
push
call
jnp
add
add
jmp
add
out
scas
int3
add
add
add
add
rolb
add
add
and
add
mov
add
add
pop
add
in
add
add
mov
sub
pop
movl
jmp
push
shr
rol
ror
not
pop
mov
push
shl
pop
cmpw
jne
push
add
pop
mov
push
shr
pop
movl
jmp
push
push
push
push
push
call
add
mov
add
add
add
arpl
mov
add
add
in
int3
xchg
mov
bnd
add
add
mov
jae
add
add
cmc
fwait
mov
lahf
add
xorb
add
jno
xchg
stc
add
pop
pushl
push
push
push
push
lea
push
call
out
add
mov
fiadds
add
add
add
add
out
add
test
addl
lods
je
roll
stc
add
cmpsl
add
in
in
lcall
push
push
call
xchg
add
mov
add
call
out
enter
add
mov
push
add
jge
add
add
push
iret
add
out
int3
jmp
lret
add
ret
cmpsl
pop
mov
roll
inc
or
push
push
lea
push
call
out
mov
int
mov
mul
xchg
rcll
add
scas
loopne
push
sti
push
add
movsl
in
cli
lahf
fisubl
jle
add
add
xchg
loopne
add
inc
sbb
push
push
push
lea
push
push
lea
push
push
push
call
out
mov
cltd
add
cld
mov
push
in
incb
call
cmc
cwtl
push
xchg
mov
add
add
leave
add
fmuls
in
fcompl
push
or
fsts
push
dec
push
and
add
sub
add
sub
sub
lea
pop
xor
not
pop
push
push
push
push
lea
push
push
push
call
gs
scas
cmpsl
add
pop
sahf
lret
push
pop
add
out
mov
add
add
enter
ret
add
mov
out
mov
xchg
add
add
lcall
call
push
dec
add
sub
pop
cmpl
je
push
push
xor
lea
sub
inc
push
or
inc
add
sub
sub
dec
sub
pop
add
lea
inc
pop
push
push
call
cltd
mov
divb
jl
add
outsl
int3
out
xor
iret
mov
pop
mov
fstp
mov
add
add
jo
loop
add
mov
sub
pop
push
call
push
push
push
push
lea
push
push
push
push
push
call
loope
mov
movl
add
mov
loopne
add
add
add
mov
stc
mov
xchg
scas
mov
add
popa
add
xchg
add
add
insb
out
add
add
stos
add
mov
add
mov
lret
in
fdivr
lcall
js
int3
fldz
ret
fwait
or
add
cmp
pop
push
shr
sub
ror
push
push
pop
add
shl
sub
dec
shl
sub
pop
dec
pop
push
push
push
push
push
push
push
push
lea
push
call
xchg
movsb
add
add
in
pop
enter
cmpsl
fiadds
add
add
cmc
movl
add
in
pop
add
add
sarb
fcompl
push
lea
push
push
push
push
call
add
mov
movsl
add
in
jb
mov
add
mov
add
test
add
cmpsb
pop
add
filds
loopne
stos
add
cmc
pop
mov
add
xchg
iret
jecxz
test
test
pop
call
push
lea
pop
cmpl
je
push
push
add
ror
push
sub
add
xor
sub
add
not
not
ror
pop
xor
sub
pop
push
shl
pop
push
push
push
push
push
call
lret
andb
insb
add
call
add
add
xchg
ja
fwait
ret
add
add
add
mov
js
cli
movsl
add
scas
fidivl
jle
clc
addb
test
hlt
add
mov
pop
out
pop
add
add
popa
addb
add
bound
add
lcall
ret
sub
int3
shl
pop
cmpl
je
push
push
rol
push
push
pop
add
not
lea
xor
shl
sub
add
sub
shr
sub
pop
shl
add
shr
shl
pop
push
sub
add
add
pop
push
push
sub
inc
lea
pop
call
push
lea
xor
sub
shl
pop
cmpl
je
push
push
not
shr
push
and
add
ror
xor
rol
sub
xor
xor
dec
ror
pop
lea
pop
push
push
push
push
push
push
push
lea
push
push
push
call
js
popa
cwtl
add
xlat
mov
push
sar
add
mov
addl
xlat
arpl
add
mov
fldl
mov
jnp
std
mov
push
ljmp
lret
mov
fsubl
add
push
push
lret
push
add
add
jne
in
pusha
add
add
sahf
loopne
jns
add
in
fcomps
push
push
push
push
push
lea
push
lea
push
push
call
jo
lds
add
mov
cmpsl
xchg
sahf
push
out
add
test
cmc
jle
add
add
xchg
imul
add
ljmp
imull
mov
push
call
sub
pop
call
push
lea
push
lea
push
push
lea
push
lea
push
call
jl
aam
add
arpl
pop
jnp
add
pushf
testb
cmpsl
aam
add
add
push
add
std
clc
stos
enter
loopne
xchg
lods
add
js
push
add
ficompl
stc
add
add
add
mov
xchg
sub
pop
cmpl
je
push
push
shl
shr
push
sub
add
shl
sub
inc
pop
pop
push
not
dec
add
shr
pop
push
call
push
shl
xor
pop
cmpl
je
push
push
not
shr
rol
push
sub
add
lea
sub
not
add
inc
pop
not
add
dec
pop
push
rol
not
pop
push
push
push
push
push
push
push
call
std
test
add
fldt
outsl
lea
ja
loopne
leave
ljmp
push
add
jmp
mov
jnp
add
push
add
jl
movsb
jno
shlb
shlb
add
mov
out
add
jno
add
add
add
add
rolb
mov
shr
sub
pop
call
cmpl
je
push
push
shl
shr
push
sub
add
rol
add
sub
sub
add
not
pop
sub
shl
ror
pop
push
lea
push
push
push
push
push
push
push
lea
push
push
call
aad
add
fidivrs
imul
stc
mov
jp
pop
add
xchg
add
testb
test
out
aam
add
add
ja
jb
out
add
outsl
pusha
add
cmpsl
sub
pop
push
call
push
not
pop
cmpl
je
push
push
add
dec
push
sub
add
ror
sub
not
xor
pop
not
pop
push
shr
xor
pop
push
push
dec
pop
call
push
sub
add
dec
shr
pop
cmpl
je
push
push
ror
ror
sub
push
xor
add
add
xor
sub
ror
add
pop
not
shr
pop
push
push
push
lea
push
call
test
add
add
add
mov
add
xchg
push
add
ja
xchg
lea
mov
mov
stos
xchg
add
add
add
add
fwait
xchg
in
call
mov
push
add
sti
add
gs
add
call
push
lea
not
sub
pop
cmpl
je
push
push
shl
add
push
or
inc
add
shl
add
sub
sub
add
lea
inc
not
pop
add
dec
dec
pop
push
shl
pop
push
push
push
push
push
push
push
call
loope
bound
test
add
je
add
xchg
jl
cld
add
add
mov
add
xchg
je
jecxz
add
loopne
mov
mov
jne
ljmp
pop
call
push
push
push
push
push
push
lea
push
lea
push
call
add
add
xlat
divb
add
add
add
stc
add
mov
test
mov
add
add
xchg
add
sub
pop
cmpl
je
push
push
xor
sub
push
and
add
shr
rol
sub
not
pop
add
pop
push
shl
pop
push
push
lea
push
lea
push
push
push
push
call
subl
push
flds
xchg
add
stos
add
add
std
je
mov
loopne
test
mov
pop
jno
movb
stc
xchg
add
xlat
test
mov
call
pop
jno
int
xchg
mov
add
jo
add
cltd
sub
pop
call
cmpl
jne
push
push
push
call
add
add
add
add
add
push
add
aam
popf
lahf
xlat
cmc
loopne
rol
js
add
cmpsl
mov
jecxz
add
enter
pusha
fisubrs
add
ja
incb
add
add
fldl
std
test
pop
mov
push
pop
xchg
cwtl
mov
testb
push
arpl
add
int3
lods
imull
lcall
inc
adc
inc
pop
movl
push
shl
add
pop
jmp
xor
push
lea
push
push
push
lea
push
call
pop
cli
fwait
add
hlt
jno
addb
pop
add
iret
add
mov
loop
shr
jne
insb
add
movl
cwtl
int3
push
xchg
in
add
jle
add
xchg
add
lcall
push
push
push
lea
push
call
call
add
jp
in
add
add
imul
add
add
lahf
mov
add
add
mov
add
push
pusha
nop
add
cld
add
int3
add
mov
add
in
mov
push
fildl
add
jmp
jo
add
add
sub
pop
pop
push
lea
push
push
push
push
push
push
push
call
loope
add
add
add
mov
add
push
mov
call
add
add
in
add
lahf
fucom
testb
push
add
jmp
lret
add
xchg
sahf
imul
in
loopne
lcall
push
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
pusha
add
lret
imul
add
xchg
mov
add
jae
pusha
outsl
test
add
add
add
add
push
hlt
idivl
add
jp
add
add
jno
in
fdivr
lcall
leave
push
push
push
push
push
push
push
push
lea
push
push
call
xlat
add
jne
add
imul
out
lds
shll
push
add
push
gs
cwtl
add
pop
outsl
add
lea
stc
icebp
lret
mov
add
lcall
or
push
sub
sub
pop
push
push
sub
pop
mov
push
add
shl
pop
add
push
add
shr
inc
ror
pop
cmpl
jne
push
push
sub
push
push
pop
add
lea
shr
add
xor
sub
xor
pop
ror
pop
push
push
push
push
push
push
push
push
push
call
enter
add
add
leave
xchg
leave
xchg
fldl
pop
imul
jmp
mov
mov
int
add
test
addr16
add
fiaddl
stos
add
add
repnz
pop
pushl
call
push
lea
inc
lea
ror
pop
push
push
lea
push
push
call
jecxz
fs
add
push
out
xchg
push
add
mov
ja
add
lahf
add
add
mov
scas
add
jns
add
add
insb
jne
in
hlt
lcall
shr
mov
push
call
add
andl
add
add
lods
jae
add
in
add
data16
sarb
add
pushf
xchg
add
push
add
mov
add
hlt
xchg
add
sub
pop
cmpl
je
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
jbe
add
add
add
cltd
jae
add
jnp
push
add
add
fwait
jnp
add
imul
iret
fiadds
jge
add
add
mov
push
add
pop
call
ret
push
push
push
push
call
add
pop
jecxz
in
xchg
lods
clc
jae
mov
out
add
add
mov
add
mov
fiadds
sahf
in
addr16
add
xchg
cmpsl
outsl
add
popa
add
add
add
data16
add
lcall
jge
add
cmpl
jne
push
push
shr
ror
push
or
inc
add
lea
sub
lea
pop
shr
pop
push
push
push
lea
push
call
add
or
mov
add
testb
imul
in
cld
add
in
lock
pushl
push
push
push
push
push
lea
push
push
call
test
fildl
mov
pushf
jae
add
int3
add
pop
aad
add
xchg
mov
mov
aam
cmpb
rcl
leave
add
pusha
mov
lcall
outsl
and
add
lret
rol
ljmp
enter
pop
call
jmp
push
add
add
shl
pop
cmpl
jne
mov
push
push
push
call
add
pop
jb
stc
add
mov
cwtl
loopne
mov
add
scas
xchg
push
add
mov
pop
movb
add
shrb
fiadds
add
add
addr16
push
sti
pop
jns
add
mov
insb
arpl
sbbb
shrl
in
in
add
lcall
add
add
push
push
push
sub
shr
push
sub
add
add
sub
shr
add
sub
pop
ror
pop
push
push
push
call
mov
cli
jecxz
cmpl
stos
xchg
lock
gs
add
loope
add
js
add
add
xchg
rcl
ljmp
fwait
arpl
push
iret
pop
xchg
add
push
addb
or
push
push
call
add
mov
xchg
fsave
outsl
add
push
add
lds
lea
enter
cwtl
xlat
push
add
add
add
in
sub
pop
call
push
push
push
push
lea
push
push
push
push
push
call
mov
add
out
add
lds
jp
add
add
add
sar
add
add
loope
add
add
data16
add
rolb
clc
roll
pop
call
push
push
dec
push
xor
add
sub
dec
shr
pop
not
rol
pop
push
push
lea
push
call
add
jp
jne
push
lods
add
ret
data16
lea
xchg
add
outsl
sahf
add
andb
sub
pop
pushl
call
push
push
lea
push
push
push
push
call
add
add
jns
xchg
add
add
call
add
add
lock
fdiv
enter
add
leave
movsb
push
add
fidivs
add
add
push
add
sar
add
sti
fwait
add
add
shrb
ret
push
not
push
push
pop
add
rol
add
shl
inc
sub
rol
pop
ror
pop
push
sub
dec
pop
pushl
push
sub
pop
call
call
push
push
dec
add
ror
not
push
push
pop
add
xor
shr
sub
dec
pop
sub
pop
push
rol
pop
pushl
call
push
lea
push
lea
push
push
lea
push
lea
push
push
push
call
add
outsl
add
les
cld
add
add
add
imul
jecxz
test
test
mov
in
loopne
call
push
push
add
add
rol
push
sub
add
not
add
sub
shr
sub
pop
xor
not
pop
push
pop
pushl
push
sub
not
pop
call
push
push
lea
push
push
lea
push
call
ljmp
mov
arpl
add
out
add
shll
add
add
mov
add
fcoms
add
sub
pop
call
push
push
push
xor
add
dec
sub
ror
pop
add
rol
pop
push
lea
push
lea
push
push
push
call
mov
add
pushf
xorl
lock
out
stc
cli
add
divb
int3
jo
cmpsl
xchg
add
mov
add
test
roll
jl
push
mov
lcall
enter
add
add
rcrl
add
stc
add
lcall
loop
hlt
mov
in
in
lcall
jne
call
push
push
lea
push
push
push
push
push
call
add
mov
in
add
add
mov
add
add
addb
add
mov
push
int3
icebp
add
addl
xchg
add
pop
add
add
iret
ja
out
add
mov
add
add
sub
pop
call
push
push
lea
inc
shl
add
push
push
pop
add
add
sub
dec
shr
ror
pop
ror
ror
pop
push
lea
pop
pushl
call
push
lea
shl
inc
pop
call
push
push
ror
not
push
and
add
rol
add
sub
sub
lea
lea
pop
not
dec
lea
pop
push
dec
sub
lea
shl
pop
pushl
push
not
shl
pop
call
call
push
push
shl
ror
dec
push
xor
add
xor
dec
sub
rol
pop
not
pop
push
sub
pop
pushl
call
push
push
push
lea
push
push
push
call
add
addr16
add
add
icebp
mov
data16
add
out
fistps
add
fisubs
mov
stc
add
add
aad
mov
jno
ficomps
add
loop
add
add
call
push
push
sub
sub
inc
lea
push
or
not
add
not
sub
add
ror
pop
dec
pop
push
push
push
lea
push
call
add
fimuls
loope
gs
je
mov
push
push
add
out
add
mov
enter
lahf
leave
add
jne
push
lea
push
push
push
lea
push
call
add
add
add
lea
movsb
mov
jb
add
jbe
xchg
add
add
mov
leave
imul
faddl
jmp
hlt
stos
jmp
mov
jl
jno
add
push
xlat
mov
rcll
aad
add
lcall
aam
hlt
pop
icebp
imul
lcall
and
add
push
push
call
mov
mov
pushf
add
sahf
mov
add
cmpsb
enter
leave
jle
jge
add
add
add
jge
sub
pop
lea
push
push
push
push
push
lea
push
push
lea
push
call
add
add
add
add
mov
add
loope
out
jns
add
add
sahf
add
lcall
push
lea
push
push
push
push
push
call
in
sarl
add
hlt
pop
cmpsl
add
add
mov
add
cmpb
in
push
add
add
iret
add
mov
jb
cwtl
push
jp
sahf
test
test
call
push
push
sub
add
sub
push
or
not
add
not
sub
not
pop
add
pop
push
lea
push
push
lea
push
call
add
fs
jnp
call
pushf
add
add
test
push
int3
in
icebp
test
clc
mov
fiadds
bound
mov
add
jae
push
mov
sub
pop
pushl
call
push
rol
add
not
pop
call
push
push
add
push
or
inc
add
shr
sub
ror
pop
lea
lea
add
dec
pop
push
rol
pop
pushl
push
lea
push
call
add
add
addb
add
jnp
add
push
pop
repnz
int3
cld
add
add
xorb
addb
add
addb
fildl
iret
mov
movl
sbb
add
shrb
mov
ror
push
and
add
sub
add
add
not
pop
xor
not
dec
pop
push
push
push
push
lea
push
push
push
push
push
push
call
scas
test
mov
add
js
fildl
mov
add
xchg
add
mov
popa
add
add
sti
lods
add
roll
mov
add
add
jnp
add
add
jne
push
not
rol
xor
pop
call
push
push
push
push
push
push
push
lea
push
push
call
add
ret
mov
xlat
mov
add
fwait
jnp
push
add
mov
add
add
imul
add
pushf
add
add
imul
into
std
hlt
add
add
add
add
push
sub
pop
call
push
push
rol
push
push
pop
add
sub
add
xor
sub
add
sub
pop
dec
pop
push
rol
pop
pushl
call
push
push
sub
rol
push
push
pop
add
sub
dec
pop
shl
ror
sub
ror
pop
push
push
sub
sub
push
push
pop
add
add
rol
dec
lea
sub
inc
sub
not
dec
pop
xor
shl
pop
push
shr
shl
pop
call
push
pop
pop
push
shr
pop
dec
jne
push
rol
shl
pop
call
push
push
shr
push
or
inc
add
lea
rol
add
not
sub
ror
pop
shr
xor
sub
pop
push
dec
dec
add
pop
pushl
push
shr
dec
shl
pop
call
push
push
sub
pop
call
push
pop
mov
push
push
dec
shl
add
push
sub
add
ror
shr
lea
inc
sub
add
pop
ror
pop
push
add
pop
pushl
push
push
push
push
push
push
push
call
cmpsb
add
filds
outsl
add
cmpsb
pop
scas
je
jno
add
push
mov
jno
add
mov
negl
jl
add
out
mov
fmul
out
add
push
push
add
ljmp
cmpsl
push
add
in
lcall
aas
adc
test
push
add
jge
cmp
add
add
xchg
push
outsl
imul
orl
add
lret
lods
test
add
leave
sub
pop
push
push
add
dec
sub
dec
pop
push
push
push
push
push
lea
push
push
push
push
call
mov
add
add
add
add
fucomp
add
int3
loop
call
test
mov
loop
add
add
in
jecxz
jge
pusha
mov
jb
sti
jae
add
mov
loopne
push
push
dec
pop
push
call
push
dec
xor
shl
pop
lea
push
push
rol
not
push
and
add
xor
sub
shr
inc
sub
shl
lea
not
shr
pop
shr
add
sub
shr
pop
push
lea
rol
pop
pushl
push
push
push
push
push
lea
push
call
out
add
add
movsl
call
roll
out
add
add
rolb
add
ljmp
mov
jbe
gs
test
in
add
push
push
add
ror
pop
call
push
push
dec
inc
sub
push
or
inc
add
add
sub
sub
shr
add
pop
dec
not
add
pop
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
lret
mov
jo
add
imul
out
add
mov
add
fidivrs
jmp
add
add
mov
add
mov
add
loop
into
mov
addr16
mov
add
jae
sti
add
pop
add
add
test
add
mov
add
stos
sub
pop
pushl
push
not
shr
pop
call
push
push
push
lea
push
lea
push
push
call
add
cli
add
shlb
mov
add
xchg
cmpsb
call
scas
jecxz
add
jl
mov
sub
pop
call
push
rol
shl
add
pop
mov
push
shr
lea
pop
lea
push
push
sub
push
or
inc
add
add
sub
sub
not
pop
dec
pop
push
lea
push
push
push
push
lea
push
push
push
push
push
call
add
add
lods
clc
mov
lret
add
sahf
out
clc
pop
mov
les
pop
mov
mov
add
int3
sub
pop
pushl
push
xor
pop
call
lea
push
push
push
push
push
push
push
push
push
call
xchg
lods
filds
stos
add
add
add
stos
add
fs
cld
mov
popl
mov
push
push
movsl
add
add
jecxz
add
stos
jnp
mov
add
shrb
faddl
xchg
out
add
xchg
nop
add
add
sub
pop
push
push
add
sub
shr
pop
push
push
lea
push
push
push
push
push
push
lea
push
push
push
call
add
mov
arpl
add
xlat
add
add
add
xchg
enter
push
scas
push
mov
frstpm(287
xchg
jle
xchg
loop
add
add
jmp
add
popl
aam
add
std
add
xchg
jecxz
sub
pop
push
push
lea
shr
pop
pushl
push
push
add
add
push
xor
add
shr
shl
sub
sub
dec
dec
pop
pop
push
not
pop
push
push
rol
sub
pop
call
push
push
lea
xor
dec
push
or
not
add
sub
sub
lea
add
pop
sub
pop
push
add
dec
sub
pop
pushl
push
shl
pop
call
push
lea
push
push
push
lea
push
call
push
add
nop
testl
add
add
pop
add
push
sti
add
lcall
add
add
push
jp
les
loop
aam
xchg
les
scas
add
call
or
test
ds
push
push
call
xchg
adc
add
xlat
xlat
add
jb
mov
mov
loopne
cmpsb
mov
faddl
gs
add
jmp
sub
pop
call
push
push
shr
shr
push
sub
add
sub
inc
pop
add
inc
pop
push
lea
pop
pushl
push
ror
sub
inc
sub
pop
call
push
push
push
push
push
lea
push
push
push
call
add
add
hlt
add
fcompl
mov
xchg
jb
add
scas
push
add
pushf
mov
add
add
movb
arpl
jne
fistpll
out
lods
push
mov
fiadds
add
add
fwait
add
add
pop
addl
jmp
test
xlat
sub
pop
call
push
push
lea
push
push
push
push
push
call
mov
add
add
insb
add
rolb
add
idivb
add
in
xlat
add
fsubp
add
add
push
sub
pop
jmp
push
push
lea
push
lea
push
push
lea
push
push
call
mov
arpl
jns
add
jmp
jnp
jne
pusha
movsl
add
mov
add
add
lea
add
mov
add
push
sub
pop
pushl
push
rol
rol
pop
mov
push
lea
rol
pop
jmp
push
push
dec
push
or
inc
add
not
add
sub
dec
not
pop
add
pop
push
xor
sub
ror
inc
pop
pushl
push
add
add
shr
pop
call
push
xor
not
pop
push
call
push
push
inc
dec
push
sub
add
ror
xor
sub
sub
pop
xor
add
rol
pop
push
lea
push
push
push
lea
push
push
push
call
add
pop
cmpsb
add
movsb
pop
mov
mov
add
rolb
mov
mov
scas
jns
jne
add
cltd
sub
pop
pushl
call
push
lea
push
push
call
scas
stc
add
jns
into
sahf
int3
jne
movsb
add
fisttpll
sti
pop
cmpsl
lcall
mov
add
outsl
lods
out
roll
mov
mov
sub
pop
push
push
push
push
push
call
nop
add
add
je
hlt
loop
add
leave
test
int3
icebp
add
jns
aam
fadds
push
add
push
sti
mov
add
jns
mov
gs
mov
lock
call
push
lea
push
push
push
lea
push
call
bound
jb
mov
pop
add
add
out
nop
add
cmc
add
test
add
loope
mov
add
add
mov
lea
movsb
jno
lock
pushf
ret
add
add
scas
xchg
add
add
lcall
push
add
shr
add
sub
pop
add
pop
push
add
not
pop
pop
push
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
lcall
xchg
sti
sar
lds
add
add
add
add
jle
add
movsl
stc
mov
scas
add
add
into
add
fistl
in
mov
sub
pop
pop
push
xor
pop
xor
inc
push
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
add
add
add
loop
loop
add
int3
ja
fists
add
aad
jmp
add
lcall
or
push
rol
pop
leave
ret
push
add
pop
push
push
xor
inc
add
pop
mov
cmpl
jne
push
push
call
add
mov
les
neg
add
movsl
add
popf
add
icebp
fldl
lods
add
add
add
mov
add
outsl
push
movsb
std
in
add
cmpsb
ret
outsl
add
jbe
in
fldl
scas
add
mov
addb
lcall
inc
and
push
sub
sub
sub
pop
jmp
push
dec
lea
pop
mov
and
push
push
push
lea
push
push
push
push
push
call
mov
add
mov
xchg
add
add
shr
movsb
call
pop
mov
add
mov
outsl
fldcw
pop
leave
add
int3
sub
pop
xor
push
rol
pop
xor
add
push
lea
push
push
lea
push
push
push
call
add
mov
add
add
add
pop
add
test
add
add
add
mov
add
add
add
mov
addb
add
cmc
flds
bound
test
add
add
lcall
dec
decl
push
push
push
push
call
add
jl
add
mov
test
add
lods
addl
stos
mov
jp
add
push
add
sub
pop
sub
jmp
push
sub
inc
add
pop
sub
pushl
push
push
lea
push
push
push
call
ljmp
imul
mov
stos
movsb
fmull
sar
add
add
add
add
mov
sub
pop
pop
push
sub
shl
lea
pop
sub
cmp
jne
push
xor
ror
pop
mov
push
shr
rol
pop
lea
push
lea
push
lea
push
call
mov
add
cmpsl
mov
push
rolb
filds
add
mov
pop
leave
fldl
jle
add
mov
test
add
in
hlt
lcall
jmp
jmp
push
add
add
pop
shr
add
push
add
pop
sub
pushl
push
push
lea
push
push
push
push
push
call
jp
cmpsl
loopne
jecxz
add
ror
add
add
xchg
mov
jle
jo
mov
mov
mov
lret
lock
lret
add
gs
add
add
add
fcmovnu
stos
pop
enter
insb
add
add
mov
add
pop
std
cltd
bound
add
xchg
pop
rolb
mov
popl
add
in
in
pop
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
add
lcall
shll
mov
pop
add
icebp
push
fs
rcrl
fnsave
sub
pop
shr
push
inc
rol
sub
add
pop
and
push
lea
sub
pop
sub
cmp
jne
push
rol
pop
leave
push
ror
inc
pop
ret
push
push
add
pop
mov
push
push
push
lea
push
lea
push
push
push
push
call
filds
out
movsb
add
push
add
addb
add
in
mov
add
cmc
in
add
loop
addl
leave
lock
add
frstor
add
mov
add
add
mov
xlat
test
add
lret
lods
add
fcomi
add
add
push
add
push
add
push
loopne
lcall
cld
push
push
push
call
add
sar
addb
add
add
add
push
cld
imul
add
out
lret
add
clc
pop
push
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
cwtl
ljmp
add
jl
add
jnp
insb
fwait
add
jno
push
out
flds
add
add
fstpt
mov
in
mov
push
sub
pop
push
push
push
lea
push
push
push
call
add
aad
xchg
add
out
add
mov
jl
lods
pusha
call
hlt
les
jno
pusha
add
add
lods
fprem1
pushf
lds
lret
add
jns
add
add
add
sti
add
push
lea
push
push
push
push
push
push
push
call
rcr
xchg
add
add
repnz
add
add
in
mov
add
pushf
movl
movsb
cmc
test
lret
div
fiaddl
add
shrl
roll
add
add
push
push
push
push
push
lea
push
push
push
call
add
data16
add
mov
add
add
out
fs
cld
mov
add
imul
jl
add
add
add
leave
out
movb
fwait
sub
pop
mov
push
shr
xor
ror
pop
lea
sub
push
push
push
push
push
push
push
push
push
call
add
push
push
cmpsl
add
add
test
loope
mov
jo
add
add
mov
lret
mov
fadd
add
add
add
lret
mov
ror
mov
cmpsb
popa
add
add
ja
into
mov
add
jecxz
xchg
pop
cli
ja
movsb
jb
sub
pop
mov
shr
push
push
lea
push
push
push
push
push
push
call
add
iret
add
add
test
add
add
jp
mov
xchg
scas
mov
add
out
add
add
add
mov
xchg
mov
add
add
std
pop
jge
jo
cltd
movsb
add
jecxz
fcomps
in
loopne
add
mov
push
add
shr
ror
ror
pop
add
mov
push
not
lea
pop
add
xor
push
lea
push
push
call
fildl
iret
add
sub
ljmp
fprem1
add
mov
add
insb
add
add
imul
add
add
add
out
xchg
add
mov
lcall
xlat
push
push
lea
push
call
cmpsl
add
je
pop
icebp
add
mov
mov
xchg
add
mov
stos
add
mov
add
add
repnz
add
sub
pop
and
push
lea
push
push
push
push
push
push
call
lahf
add
jno
add
add
add
pop
add
add
sahf
rol
pop
out
add
add
int
add
mov
add
imul
lcall
rolb
loop
add
not
pop
xor
inc
push
shr
add
pop
cmpb
jne
push
lea
push
push
push
lea
push
lea
push
push
call
mov
stos
mov
fisubs
add
xlat
add
mov
add
add
icebp
jecxz
add
fwait
pop
add
add
mov
addb
rolb
add
add
out
mov
sub
pop
add
push
add
sub
shl
sub
pop
cmp
je
push
xor
shl
pop
add
cmpl
jne
push
not
ror
sub
add
pop
xor
push
lea
push
lea
push
push
lea
push
push
push
lea
push
call
out
roll
xchg
add
ljmp
leave
out
lret
mov
push
mov
push
add
scas
add
mov
scas
mov
rolb
add
test
mov
lcall
push
shl
sub
inc
lea
pop
pop
pop
push
sub
pop
pop
push
push
lea
push
call
bound
je
push
add
add
jo
add
ljmp
outsl
hlt
mov
clc
rol
rcrl
imul
in
hlt
lcall
push
dec
ror
sub
pop
leave
push
add
sub
pop
ret
mov
push
shl
pop
add
mov
push
dec
add
inc
pop
push
push
pop
mulb
push
push
push
call
push
addr16
pop
jl
add
mov
add
push
mov
shl
add
xlat
add
icebp
sti
pop
add
mov
mul
jbe
call
add
pop
add
xchg
mov
loopne
mov
add
push
in
push
hlt
pop
pop
call
push
inc
pop
push
push
lea
push
push
lea
push
call
add
andb
add
int3
add
add
add
test
add
add
push
test
out
addl
jne
ljmp
fs
pop
add
repnz
fucomi
cmc
out
add
add
fisubrl
pop
cmc
cmpsb
pop
ja
jo
sub
pop
call
push
not
shr
pop
xor
pop
push
push
push
lea
push
push
push
push
push
push
call
popa
add
movsl
mov
add
add
mov
add
add
push
add
add
in
negb
add
add
add
nop
push
shll
loope
fcomps
sub
pop
pop
push
not
dec
sub
pop
pop
pop
push
push
push
push
push
call
push
mov
mov
mov
jno
add
add
enter
add
out
add
push
push
popl
mov
add
jns
addb
mov
add
add
lock
mov
add
movsl
add
add
in
in
lcall
push
push
push
push
push
push
push
call
add
fnstsw
add
filds
pop
add
fimuls
cmpsl
jmp
add
jle
jb
movsl
pop
sahf
add
test
mov
fiadds
hlt
mov
stc
xchg
add
in
in
lcall
push
ror
dec
ror
pop
ret
push
push
sub
dec
xor
pop
mov
push
push
call
xchg
add
add
add
xchg
mov
add
pop
add
rcl
jp
jecxz
cli
testb
add
mov
cwtl
in
int3
mov
mov
sti
xchg
add
add
outsl
xchg
add
stos
jno
add
xchg
rcrb
add
ret
into
mov
mov
sub
pop
add
push
push
push
call
roll
cwtl
mov
add
mov
add
push
jne
in
add
std
addl
add
rolb
add
nop
add
add
add
add
stos
jns
insb
push
add
ja
jns
add
jno
addr16
add
jne
add
push
push
add
pop
push
push
sub
pop
push
push
push
push
push
push
push
push
push
call
add
xchg
jecxz
jns
test
mov
jno
mov
add
sahf
sahf
add
pusha
add
add
add
popf
add
pop
jbe
add
add
loopne
lcall
pop
or
ror
pop
pop
push
push
push
lea
push
push
lea
push
call
test
add
lea
test
fs
add
add
mov
push
add
add
cld
rclb
enter
sub
pop
lea
sub
push
xor
sub
pop
mov
shr
push
push
push
call
add
je
mov
loope
add
aam
push
int3
add
add
add
rol
add
adcb
gs
push
fldl2e
add
movsb
add
stos
add
sub
pop
add
mov
push
sub
xor
sub
dec
pop
add
pushl
push
ror
rol
pop
popl
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
push
lea
push
call
in
add
lcall
imul
mov
pop
stc
xchg
addl
add
add
scas
add
enter
add
outsl
push
add
jns
add
add
in
mov
jmp
add
mov
add
add
xchg
push
addb
add
out
sub
pop
mov
add
push
lea
pop
xor
push
rol
pop
lea
push
lea
push
call
mov
sahf
add
add
add
fwait
fwait
push
lcall
add
sti
js
push
add
add
fucomp
add
adc
rcll
or
push
push
push
push
lea
push
push
lea
push
lea
push
call
mov
jge
xlat
add
call
xchg
adcl
add
add
rcrl
add
add
xchg
lods
lcall
add
add
sub
pop
xor
push
pop
rol
nop
push
push
push
push
push
push
lea
push
push
call
iret
add
add
int
xchg
pop
add
add
jns
add
add
in
add
test
add
pushfw
add
cmpsl
pop
add
pop
add
mov
add
xchg
xchg
add
iret
lcall
add
icebp
pop
xchg
add
ficomps
add
imul
add
add
movb
hlt
popa
add
pushf
jl
rolb
lcall
xor
push
push
push
push
push
push
push
lea
push
push
lea
push
call
add
jnp
add
pop
cwtl
add
add
add
add
add
lods
add
mov
add
les
mov
ljmp
roll
add
lcall
nop
push
inc
sub
pop
inc
nop
push
ror
not
add
dec
pop
nop
push
sub
add
sub
shl
pop
cmpb
jne
push
lea
sub
add
pop
add
nop
push
pop
nop
cmp
je
push
dec
add
dec
pop
nop
push
xor
add
xor
pop
nop
inc
push
rol
pop
nop
push
rol
lea
pop
nop
cmp
jb
push
sub
ror
sub
pop
xor
jmp
push
lea
push
push
lea
push
push
call
fbld
lcall
push
add
mov
mov
add
add
jnp
lds
fs
add
divb
xlat
mov
in
in
pop
mov
push
rol
ror
pop
add
push
lea
push
push
call
pop
add
imul
pop
int
add
test
add
add
int
add
sub
pop
movzwl
mov
push
rol
pop
add
push
inc
dec
pop
mov
xor
push
not
add
ror
ror
pop
xor
push
push
push
push
push
call
push
aam
loop
fidivrl
popf
rcll
add
jnp
scas
aad
push
mov
mov
add
add
in
pop
fiaddl
shl
add
iret
add
mov
in
in
pop
shl
push
push
call
movsb
mov
add
jmp
mov
add
int3
add
mov
imul
add
lea
add
enter
add
add
cld
add
sub
pop
xor
shl
push
push
push
push
push
push
push
call
mov
pop
add
add
add
add
fcoml
addl
mov
add
jb
fidivrs
add
pusha
pusha
dec
mov
ror
sub
pop
xor
shl
push
push
lea
push
push
push
push
call
sahf
push
mov
mov
filds
add
stos
lcall
sahf
jns
mov
jo
enter
xchg
jnp
push
xchg
test
scas
add
add
pop
test
cltd
xchg
jae
stc
lahf
mov
in
call
push
push
push
push
push
lea
push
lea
push
push
push
push
call
lea
add
fsin
add
add
add
scas
pushf
test
xchg
fsubp
roll
add
xchg
add
stos
jmp
add
add
add
mov
add
mov
out
mov
lds
sti
lods
add
mov
in
fcomps
rcll
lods
add
pop
push
push
push
push
push
push
push
call
call
add
add
pop
je
call
fs
lea
jbe
fdivp
stos
add
add
shrb
add
test
out
mov
in
into
std
add
add
in
fdivr
lcall
inc
hlt
pop
push
push
push
push
lea
push
lea
push
push
lea
push
call
mov
fiadds
add
lea
jae
add
loope
pop
scas
push
add
call
out
ret
pushf
pop
add
div
arpl
filds
add
add
fadds
lcall
pop
push
pop
pop
push
add
pop
leave
push
pop
ret
push
push
push
push
push
push
lea
push
push
call
add
add
in
add
push
mov
mov
xchg
add
popf
test
mov
xchg
add
lret
addl
loope
mov
add
ja
loope
jmp
les
add
icebp
add
add
add
lcall
push
shr
sub
dec
pop
mov
push
shr
xor
sub
pop
push
push
lea
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
mov
je
add
rcrl
sti
jb
repnz
popf
jge
pop
jb
add
lcall
xchg
jne
add
out
add
add
add
leave
out
cld
lods
sarb
add
lret
add
mov
pusha
add
add
clc
mov
add
lcall
push
xor
sub
pop
push
push
dec
pop
push
mov
push
xor
pop
mov
push
dec
not
shl
pop
mov
push
sub
shl
pop
test
je
push
shl
not
add
add
pop
mov
test
je
push
not
xor
shl
shr
pop
mov
mov
push
add
rol
rol
pop
mov
inc
push
push
push
lea
push
push
lea
push
lea
push
push
push
lea
push
call
add
add
add
negl
pop
add
fldcw
add
add
loope
scas
nop
movsl
add
pop
lret
loop
add
lods
gs
aam
add
lds
add
mov
xchg
add
mov
leave
add
ret
hlt
out
test
stos
data16
sub
pop
cmp
je
test
je
push
pop
mov
push
sub
pop
inc
push
push
call
add
push
add
rolb
xchg
pop
movb
add
xchg
popl
fiadds
jno
mov
pop
movsl
movsl
add
add
mov
sub
pop
cmp
je
push
lea
push
lea
push
push
call
testb
add
call
js
add
add
js
add
add
loop
movsb
add
test
lds
adcl
push
add
add
add
add
rcl
imull
xchg
cmpsl
mov
push
in
scas
push
push
add
int
loope
sub
pop
test
jne
push
add
xor
pop
xor
pop
push
dec
add
sub
pop
pop
push
dec
xor
pop
pop
pop
push
push
call
lods
push
cltd
add
pushf
lods
movsl
lret
fldcw
add
lods
add
add
lock
jl
add
stos
jge
test
jae
stc
lret
add
enter
cmc
popa
pop
pop
add
pop
add
imul
add
sub
pop
leave
ret
push
inc
add
pop
mov
push
dec
pop
inc
push
lea
push
lea
push
push
push
push
push
lea
push
lea
push
lea
push
call
pop
add
pop
lods
xchg
fwait
test
mov
add
arpl
add
mov
data16
add
in
add
int
scas
lahf
add
pop
icebp
cmpsb
jle
out
add
add
loope
lods
add
rolb
sub
add
roll
lock
push
addb
add
mov
mov
add
lcall
lock
lea
push
push
push
lea
push
lea
push
push
push
push
call
add
nop
dec
ret
add
lds
add
push
mov
add
jo
add
add
add
data16
fildl
pusha
xchg
jp
clc
add
jge
stos
stc
push
mov
insb
jns
fwait
icebp
in
movl
push
sub
pop
mov
push
push
lea
push
push
push
lea
push
push
push
push
push
call
add
add
cwtl
xchg
add
add
cwtl
mov
xchg
data16
mov
std
add
xchg
add
int
sub
pop
test
je
mov
push
push
push
call
arpl
push
cmpsl
out
add
add
jl
add
add
add
ffreep
add
sti
pop
stos
add
shrl
mov
jo
iret
into
mov
add
mov
xchg
add
lahf
sub
pop
add
push
dec
shr
add
pop
cmp
jne
mov
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
cld
iret
jne
icebp
add
mov
add
lods
mov
add
pop
int
add
xlat
shrb
loopne
imul
jl
mov
add
pop
add
xchg
movsl
add
xchg
lcall
hlt
cmpsb
lahf
in
fcompl
rorb
mov
add
push
push
lea
push
lea
push
lea
push
push
push
push
call
add
add
add
pop
add
push
add
add
iret
lods
mov
jne
add
jnp
add
lods
movsl
scas
add
mov
testl
push
add
add
add
subb
add
add
mov
add
add
add
add
popf
add
lcall
callw
stc
push
lea
push
lea
push
push
push
push
call
add
add
mov
outsl
fbld
call
add
ficompl
ljmp
js
add
sbb
in
add
pop
add
lock
push
add
jecxz
mov
add
int3
fsubrs
add
add
xchg
mov
mov
mov
add
add
lret
push
rcll
lcall
roll
not
rol
xor
not
pop
cmp
je
jmp
push
not
pop
xor
push
sub
ror
shr
pop
pop
pop
push
inc
add
ror
pop
pop
pop
push
ror
pop
leave
ret
push
push
push
lea
push
push
call
mov
add
mov
testb
add
ret
push
jp
mov
jo
mov
add
add
mov
add
add
mov
fldpi
add
sub
lcall
inc
call
push
push
push
push
lea
push
push
push
call
gs
add
stos
fiadds
add
add
add
cmpsb
add
mov
sub
add
add
imul
add
cmc
lock
mov
mov
icebp
sub
pop
pop
pop
push
lea
push
push
push
lea
push
lea
push
lea
push
call
movb
add
rolb
ror
add
mov
lods
iret
add
add
test
roll
jno
add
pop
fadds
add
call
aam
lret
add
stc
add
pop
push
lea
push
call
fidivl
add
test
add
xchg
popa
test
fnsave
xchg
add
jnp
data16
add
rolb
add
clc
repnz
ret
add
add
add
fiaddl
fdiv
add
add
mov
lock
add
add
loop
add
add
mov
sub
pop
leave
push
push
push
push
push
lea
push
call
add
add
in
jo
add
add
add
add
add
add
aad
std
add
call
ret
push
push
push
lea
push
push
push
lea
push
push
call
add
cld
stc
add
push
add
pop
add
pop
scas
push
cld
add
lods
mov
out
add
push
in
loopne
mov
pop
push
shr
pop
pop
push
shl
shr
pop
pop
pop
push
sub
pop
leave
push
lea
push
call
xchg
add
arpl
shll
add
ret
mov
push
add
add
jnp
rolb
icebp
mov
add
jae
pushf
mov
movsb
add
push
scas
cld
sub
pop
ret
xor
cmp
loopne
cmp
xor
adc
adc
adc
add
adc
push
cmp
xor
adc
jb
adc
mov
add
mov
pop
lock
xor
insb
or
xor
mov
mov
cltd
or
push
jbe
mov
xchg
imul
mov
cmc
cmp
popf
imull
or
or
sbb
imul
xchg
xchg
pop
rorl
inc
push
adc
mov
mov
mov
sub
lret
mov
cmpsl
pop
stos
sbb
fneni(8087
push
adc
imul
cs
xorb
fdivrs
aam
leave
add
inc
lahf
scas
les
mov
push
sub
mov
dec
jp
mov
gs
pop
cmp
imull
mov
and
das
imul
subb
icebp
data16
mov
int
sbb
xor
push
mov
enter
cwtl
adc
and
sbb
push
imul
dec
ljmp
cmp
jo
mov
jl
lahf
arpl
addr16
das
fcoms
mov
mov
int3
stc
ss
test
js
sub
add
fimuls
mov
inc
pusha
mov
adcl
lret
insl
fadds
and
pop
and
aaa
lahf
cmp
xchg
push
dec
hlt
mov
aam
pop
lds
inc
mov
mov
pop
jns
or
or
lcall
daa
mov
jnp
pop
xchg
fcomip
add
daa
movsb
sub
sti
push
imul
dec
inc
into
jbe
push
push
mov
loopne
jns
imul
adc
jp
jmp
leave
inc
xchg
jb
les
es
xchg
dec
xchg
lea
push
push
or
mov
mov
sbb
cmp
mov
push
dec
mov
inc
enter
mov
decb
mov
xchg
lds
xchg
addb
jle
sub
cltd
mov
jbe
sti
xor
mov
lahf
sub
negb
mov
mov
pushf
mov
dec
and
lds
cmp
and
fistpll
pop
inc
arpl
inc
mov
add
jns
push
cmp
test
xor
push
int
adc
mov
mov
fsubp
jbe
dec
iret
stos
iret
add
cmp
mov
cmpl
and
push
dec
cltd
leave
out
enter
push
jae
mov
or
jae,pn
ret
cmp
inc
out
sub
bound
pop
out
js
sahf
mov
cmp
loope
adc
pop
mov
xchg
repz
pushf
jnp
jnp
cmp
cwtl
daa
insb
add
test
sahf
sarl
mov
adcb
adc
add
mov
fistps
cmp
and
enter
mov
and
inc
xchg
sarl
xchg
incl
pop
fucomip
jge
push
push
inc
mov
int
mov
notl
scas
adc
dec
xor
jl
dec
mov
out
sub
in
pop
popf
movsb
sbb
std
xchg
hlt
xor
icebp
jae
mov
in
fistpl
cmp
push
lret
shll
stc
stos
adc
push
dec
pop
push
mov
sbb
sbb
fisttpll
ret
pop
loopne
dec
repz
push
mov
push
test
cmp
stos
dec
adc
inc
test
stos
sbbl
sbb
xor
mov
jmp
jns
cld
andl
xchg
rcrb
dec
test
xchg
mov
cwtl
add
jle
dec
mov
sbb
sub
imul
adc
ljmp
divb
add
jmp
sub
jl
gs
mov
dec
rclb
jecxz
in
cld
or
imul
add
scas
loop
sub
cmp
fisttps
adc
ss
mov
and
cmp
push
fistpl
arpl
sub
xor
mov
sarb
ss
mov
lret
cmp
in
add
in
sahf
in
adc
mov
popa
add
push
or
adc
filds
or
in
jae
aas
or
or
dec
leave
xlat
in
inc
fisubs
sbb
dec
test
pop
out
jo
orb
rol
arpl
cmp
sbbl
pop
xchg
andb
mov
loop
inc
xchg
repnz
jbe
jmp
adcl
cs
mov
kmovw
push
mov
pop
mov
lds
push
cli
and
js
iret
aam
mov
xchg
pop
adc
int
jns
pop
lcall
iret
scas
sub
jl
gs
mov
popf
lahf
pop
adc
push
push
pop
mov
int3
fisubs
fistpl
pop
daa
stc
sub
mov
add
repz
push
cmp
loopne
push
popf
cli
insb
movsl
daa
lock
pop
mov
out
scas
and
dec
das
mov
and
test
xor
inc
cmp
dec
adc
out
loop
aad
lcall
icebp
jl
sub
jl
inc
inc
ds
pop
clc
pop
adc
inc
inc
lds
xchg
xchg
ja
mov
sbb
pop
xchg
xchg
test
xchg
popf
dec
mov
shrl
xchg
jmp
jl
sub
inc
cmovnp
mov
add
or
cmp
fdivl
sub
and
sub
fldenv
push
mov
adc
repnz
sbb
mov
adc
subl
loope
call
pusha
mov
sbb
or
bound
movsl
std
xlat
ja
cmc
jle
data16
xchg
fs
stc
rclb
repnz
in
push
aad
adc
outsb
aas
push
inc
push
sarl
sbb
mov
xchg
and
push
add
push
mov
dec
scas
mov
aam
int3
sub
mov
mov
pop
pop
repnz
icebp
fimuls
jo
cmp
push
out
pop
or
cmp
inc
lock
mov
subb
jns
clc
xchg
rcll
or
sbb
popa
arpl
lahf
call
cmc
or
repnz
fldcw
push
sbb
pop
imul
push
mov
ffreep
push
sub
mov
push
pop
xlat
cld
mov
outsl
jg
aaa
jmp
xchg
fbld
out
mulb
xchg
data16
mov
mov
dec
rorl
in
loope
fidivs
test
cmc
loope
add
pop
test
inc
int
lds
mov
xor
test
adc
dec
fstl
lret
int
xor
cmc
insl
cmpsb
mov
inc
fwait
push
cmp
or
inc
je
enter
sbb
lret
mov
push
and
mov
add
or
aam
cmp
in
sub
or
mov
lret
or
movsl
nop
cmp
cs
inc
cmpsl
and
push
dec
daa
xor
es
mov
stos
pop
ret
or
lret
inc
cmp
mov
std
push
cli
xor
shll
imul
or
sub
ds
mov
movl
orb
insb
jge
dec
mov
fbld
mov
in
movsb
adc
or
and
pop
repz
push
pop
cmc
jae
mov
mov
rorb
and
push
clc
insb
out
daa
or
xchg
push
pop
nop
dec
add
iret
sbb
xor
fmull
icebp
sti
and
sbb
inc
mov
cwtl
add
stc
push
push
push
mov
call
jecxz
dec
sub
out
insb
repz
sar
sarl
push
leave
and
push
mov
fidivrl
mov
sbb
movsl
clc
lock
test
imul
mov
jb
call
dec
jg
pop
insb
xchg
outsl
lret
out
fsubrp
ss
outsl
jae
push
rcrl
sub
pop
jge
xchg
lcall
nop
std
xlat
sub
inc
test
stos
xor
sbb
test
jg
mov
and
cmp
stos
lret
push
xor
sti
pop
enter
or
loope
adc
arpl
adc
or
mov
outsb
xchg
mov
lahf
or
mov
cmc
lock
jb
popa
xor
mov
inc
and
in
cmp
lahf
int3
icebp
jo
or
out
add
int
push
lahf
pop
jae
pushf
sarl
adc
sbb
mov
jbe
push
or
pop
add
aad
xchg
jb
add
mov
out
jecxz
in
and
sub
lds
out
subl
popa
mov
pop
add
fs
and
loopne
fsubrs
mov
sahf
pop
push
test
fisubrl
jnp
repz
aas
xchg
pop
push
mov
inc
mov
movsb
das
shll
out
pop
mov
mov
cwtl
les
mov
leave
inc
dec
addr16
jg
mov
stos
out
into
pushf
jp
lcall
push
cltd
js
int3
jp
ss
int3
lret
xchg
test
hlt
mov
decl
xor
ret
pop
inc
push
rorl
lods
aas
mov
mov
adc
jbe
add
pop
enter
mov
icebp
lods
imul
push
das
push
cmpsl
clc
mov
test
stos
ficompl
jno
cmpsl
rcrb
mov
adc
scas
jne
inc
fwait
std
dec
int
or
lahf
adc
cld
lea
mov
test
inc
popa
xchg
pop
lock
mov
xor
inc
mov
jp
mov
daa
out
bound
hlt
mov
sbb
pop
mov
das
js
and
xchg
pop
mov
pop
and
xor
sub
push
pusha
out
fnsave
test
imul
loopnew
sbbb
pop
and
mov
jle
fistpll
xor
adc
int
mov
imul
adc
pop
std
outsl
sbb
fcompl
push
xor
fcoml
inc
es
xchg
pushf
push
bnd
sbb
into
adc
testl
sub
adc
fucompp
incl
fs
movsl
sarb
pushf
psubq
icebp
loop
and
cmp
add
xor
lock
push
dec
cmpsb
cmc
add
fstpl
arpl
es
fidivs
or
out
fcoml
sbb
jns
jg
into
movsb
adc
hlt
jno
and
push
mov
stos
bound
hlt
subl
sahf
ret
cli
rcl
lock
int3
jmp
fwait
add
ret
sbb
inc
sbb
sbb
ljmp
lds
repz
addr16
mov
lods
jl
sbb
sbb
in
push
inc
std
shrl
sbb
push
cmp
sbb
mov
sbb
fildl
xchg
arpl
push
and
mov
xlat
push
out
xor
cld
ljmp
leave
and
test
aas
lahf
fistl
mov
dec
notl
imul
call
xchg
divb
mov
and
int3
and
and
adc
or
aad
adc
dec
jecxz
js
inc
aam
cmpsl
sub
inc
loope
ret
scas
mov
das
mov
loop
cmp
je
or
sbb
pushf
inc
dec
aad
lret
add
pop
bound
in
insb
sbb
sub
test
out
aaa
xchg
push
shlb
cmpsl
movsl
leave
jno
inc
mov
frstor
mov
xor
sbb
jl
mov
sbb
pop
imul
mov
ret
icebp
aam
add
xchg
ja
pop
testb
xchg
ret
gs
push
pop
push
in
xchg
fstps
out
rclb
mov
outsb
data16
dec
fildl
pop
daa
lret
cwtl
xchg
sbb
hlt
pop
hlt
xor
cmp
mov
sub
aas
movq
flds
pop
pop
ljmp
mov
or
push
add
mov
adc
dec
mov
out
jno
cmp
xchg
pop
movsl
jp
test
xchg
out
shlb
ret
ljmp
dec
cmp
jmp
lods
mov
mov
cld
hlt
sbbb
imulb
jmp
sbb
mov
or
mov
push
dec
cmc
push
xchg
out
mov
aas
aaa
push
and
arpl
rorl
pusha
sub
sbb
dec
or
ret
sbb
pop
icebp
xchg
dec
adc
mov
popa
adc
sub
ja
aaa
mov
insl
out
pop
push
frstor
inc
dec
inc
loopne
hlt
xchg
dec
data16
cmpsb
jge
lods
mov
mov
cmp
inc
xlat
scas
fisubs
imul
leave
sahf
cmp
mov
push
adc
fnsetpm(287
sub
clc
inc
dec
popa
into
outsl
nop
int
adc
inc
xor
mov
aaa
or
cmpsb
adc
pop
xchg
xchg
or
outsl
sbb
mov
cmp
test
aas
and
into
and
push
xor
ds
cmp
es
bound
or
hlt
stos
cmpsl
loopne
mov
sub
ret
push
sub
mov
jno
popf
and
add
mov
jg
in
out
clc
out
push
jge
mov
xchg
cwtl
stos
iret
sahf
inc
and
mov
xchg
loope
arpl
imul
scas
fiadds
jo
test
mov
xchg
aam
cli
mov
aas
mov
stos
mov
popf
dec
repz
pop
add
or
das
mov
test
and
pusha
lret
iret
mov
stos
xchg
xor
fisubs
xchg
cmp
adc
ss
and
out
and
loopne
enter
push
jp
jg
pusha
dec
jl
mov
rcrb
xchg
cs
push
dec
mov
je
jo
ret
fwait
out
dec
dec
imul
mov
pop
or
mov
xchg
int3
ret
jne
dec
fimull
in
jo
mov
xor
jo
and
inc
js
xor
popa
sub
fmuls
sub
ret
sub
shrb
shl
xchg
imulb
mov
sbbl
jns
adc
scas
lret
je
cmpsl
jge
rcll
dec
xchg
enter
incb
and
or
adc
or
shlb
mov
pop
cmc
int
mov
jl
xorl
or
bnd
jg
divb
dec
in
xchg
movsl
jns
jne
pop
dec
pop
sub
out
bound
pop
repnz
xchg
cwtl
sbb
ds
pop
insb
inc
add
cmp
push
push
pusha
push
cmpl
push
fmull
int
adc
insl
pop
push
mov
adc
mov
loopne
cmpsb
inc
xor
push
sbb
sub
pop
mov
call
push
cmp
pop
push
xchg
inc
pop
adc
in
sbb
cmpsb
mov
and
out
or
hlt
in
mov
pushf
cmp
add
fisubl
addl
lahf
adc
xchg
cmp
lock
mov
push
int
fs
test
jle
pushf
mov
insb
repnz
lret
mov
pop
dec
dec
sub
mov
les
mov
xchg
sbb
bound
lods
cmp
xchg
iret
xchg
loop
int3
jae
stc
test
mov
repz
jne
inc
arpl
mov
jo
cmp
xor
pop
jle
imul
sti
xchg
rcll
lret
aas
mov
inc
pop
mov
pop
loope
adc
movsl
movsb
cmp
orb
jp
jo
stc
sbb
scas
dec
jl
lahf
cmp
test
cmc
lret
jecxz
pop
xor
xchg
xchg
pop
mov
into
jle
or
dec
cmp
out
add
mov
jge
dec
mov
ret
jge
and
inc
cmp
xor
xchg
jo
pop
mov
mov
lods
inc
in
fsubs
and
lods
mov
lock
mov
sub
push
inc
pop
repnz
ss
int
mov
loopne
iret
lret
out
push
sbb
ja
sbb
insl
fcmovb
popa
jno
call
std
arpl
sub
or
int
mov
rcr
mov
in
dec
mov
xchg
lods
das
mov
cmpsl
xor
xchg
xlat
enter
cmc
mov
pop
shrb
filds
push
pop
sbb
btr
sar
adc
push
jge
out
cmpsl
fld
mov
aad
inc
adc
jmp
in
enter
push
test
daa
jg
jmp
cmpsb
insb
nop
sub
jl
ret
shrb
fwait
loope
adc
push
decb
sahf
movsb
fucomp
sbb
popa
mov
fnstcw
fisttpl
cmp
and
xor
push
xchg
ja
stos
pmaxsw
out
add
pusha
lret
ret
cmc
xor
ss
xor
sbb
cmp
rcll
pop
mov
cld
jecxz
xchg
dec
push
and
es
mov
outsl
cmp
jecxz
or
ud0
out
in
loope
dec
shll
pop
jp
sti
or
lock
xchg
inc
cmp
in
popf
inc
mov
inc
xchg
fistl
xor
mov
mov
xor
data16
lret
mov
add
mov
cs
ret
add
mov
xchg
pop
inc
popa
imul
sbb
je
out
dec
in
push
sbb
std
pop
insb
inc
sub
stos
mov
mov
in
mov
inc
gs
jo
lock
je
push
test
nop
push
jae
sbb
gs
shr
cmp
out
aad
fldl2t
cmpsb
aad
jmp
mov
dec
push
add
sbb
xchg
mov
add
out
fwait
adc
jae
mov
ds
dec
data16
or
hlt
sbb
sbb
xor
mov
lds
movsl
push
pop
cmc
dec
test
js
in
xor
sbb
jmp
cli
in
rcll
inc
sub
xchg
das
sub
lret
xchg
sti
lock
test
mov
mov
xchg
sbb
adc
lea
jmp
push
pop
fdivr
inc
lds
xlat
lcall
enter
mov
outsl
mov
add
cmpsb
sti
push
gs
dec
or
test
xchg
ljmp
stc
into
mov
aam
inc
lret
cmpsl
shr
ret
mov
push
fnstsw
pop
in
jmp
jnp
adc
repz
xlat
add
mov
inc
adc
notl
lods
pop
ret
sbb
inc
into
pop
pusha
sahf
pop
mov
fnstcw
cmpsb
jl
ja
cmc
cld
jae
or
cmpl
and
rcr
pop
flds
mov
or
aam
fistps
pop
rcrb
lret
xchg
add
jbe
cwtl
and
mov
mov
mov
ret
in
arpl
repz
outsl
rep
push
sub
in
lahf
imul
mov
mov
test
cmp
dec
adc
leave
jl
icebp
ret
inc
cmp
repnz
lcall
adc
pop
jbe
inc
mov
popf
movsl
dec
jns
jo
lods
ret
xor
fcoms
push
push
mov
fwait
ja
cmpsb
into
das
shl
out
sti
mov
mov
push
jo
xchg
outsl
add
mov
pusha
pop
jle
clc
mov
jns
int
sub
or
push
je
arpl
xor
nop
daa
and
pop
cmpsl
clc
orb
mov
xor
or
push
pushf
adc
ret
mov
lds
aam
popf
pop
mov
pop
lcall
xor
xchg
scas
mov
fisttpl
movsb
mov
pop
cld
xor
inc
iret
add
movaps
outsb
pop
fsub
das
fs
js
pop
sbb
xor
pop
loope
pop
sbb
lods
shl
pushw
cld
pop
or
pushf
inc
push
sbb
pop
stc
je
insb
shr
cwtl
mov
lahf
dec
mov
inc
dec
cwtl
pop
stos
xor
inc
test
xor
jbe
dec
inc
mov
inc
in
or
add
cli
and
mov
xor
mov
mov
pop
lcall
xchg
shlb
negl
into
in
fcoml
xchg
xor
ja
scas
pop
mov
adc
inc
sub
loop
mov
je
jl
fsubrl
daa
mov
test
jle
mov
add
push
mov
cmp
or
cli
fwait
mov
mov
pushf
inc
movsb
test
xor
shll
mov
lods
dec
test
cmp
adc
inc
subb
pop
ficoms
in
dec
cmpsl
lock
pop
stc
jle
clc
xor
push
xor
les
ret
in
xor
sbb
add
adc
std
das
les
mov
scas
mov
xchg
call
shl
or
loop
pop
mov
movsl
pop
pop
xchg
cli
mov
cmp
sbb
or
ja
imul
popa
loope
lea
xlat
xchg
std
shrb
dec
push
inc
stos
xchg
js
inc
pop
test
subl
fcompl
push
test
push
out
pop
push
xor
jmp
addr16
scas
es
pop
test
mov
sub
popf
shl
push
mov
cltd
imull
inc
test
addr16
mov
pop
mov
in
fisttps
pop
std
mov
loope
jg
imul
xchg
arpl
inc
sbb
sbbl
sbb
je
fcmovnb
lods
fiaddl
dec
pop
pop
popa
aaa
mov
mov
aas
lods
gs
mov
cltd
scas
ret
nop
adc
data16
cmpsl
mov
mov
pop
xchg
pop
xchg
jge
test
mov
aas
cltd
mov
ljmp
out
inc
and
cli
inc
adc
inc
mov
das
aam
filds
and
repnz
xchg
mov
or
pop
and
in
jnp
enter
arpl
js
dec
or
cmpl
stos
icebp
int3
jg
adc
cmp
xchg
popf
cmc
cwtl
adc
out
jbe
xchg
cs
aas
aaa
cmp
loope
pusha
and
fwait
cmp
dec
add
out
xor
mov
mov
fdivr
cmp
es
mov
sbb
in
imul
test
inc
imul
jecxz
out
xor
ret
push
inc
cmp
inc
pop
xlat
sub
mov
sub
xchg
lea
and
pop
lods
fnstenv
sbb
push
or
out
call
subb
push
sub
scas
sti
inc
ret
int
fstps
repz
jg
mov
popl
sbb
mov
fidivrs
mov
fcom
xor
in
push
xchg
and
shlb
push
scas
jle
xchg
inc
ficomps
mov
xchg
lods
jp
js
ja
push
repnz
adc
repnz
xor
aad
add
sarl
adc
shrb
cmp
and
jmp
adc
jp
in
shrb
mov
wbinvd
addr16
hlt
das
hlt
pop
shr
inc
aam
rorl
dec
or
and
int3
mov
lods
pop
push
movsb
mov
pop
or
dec
leave
adc
push
mov
loopne
in
push
imul
xchg
int
inc
filds
mov
xor
adc
dec
inc
leave
test
jl
pop
push
pop
xchg
int
shl
cmp
dec
xor
fcmove
dec
add
adc
cmc
ds
imul
add
jecxz
xor
divb
lahf
out
nop
add
subb
test
iret
leave
push
loopne
in
xchg
lock
jns
mov
or
sbb
arpl
adc
lret
icebp
pop
mov
xor
inc
add
push
inc
dec
call
mov
js
popa
jns
pop
jle
adc
lods
and
xchg
lds
lahf
add
inc
outsl
push
mov
jbe
jbe
sub
pop
adc
push
xlat
subl
fwait
out
mov
cld
pop
or
and
adc
dec
cmp
sub
or
arpl
cltd
pop
out
cmc
fucomp
ljmp
xor
add
cmp
shll
push
out
cmp
or
movsb
data16
mov
sbb
push
sbb
cld
mov
push
fmull
or
dec
cmp
xor
push
mov
negb
scas
push
sbb
inc
cmp
stos
cs
in
mov
xchg
imul
inc
sbb
in
ja
jo
jl
int3
pop
sti
jge
scas
dec
mov
or
dec
and
add
cmp
mov
add
cmpsb
dec
into
sbb
and
xchg
add
jbe
inc
fcmovnb
lds
and
js
lds
mov
sbb
loopne
jnp
sub
pop
fisttps
jecxz
mov
xchg
lds
inc
or
imul
lret
mov
cld
lods
lret
cmp
sbb
bound
cld
fiadds
sbb
mov
fldenv
add
repnz
out
sbb
es
scas
sub
das
mov
dec
xchg
dec
push
xor
out
out
adcl
loope
pop
outsb
test
mov
sub
xor
dec
data16
add
lds
orb
mov
and
repz
push
mov
mov
loope
mov
call
mov
push
sbb
pop
xchg
cld
fwait
outsb
add
stos
inc
xchg
bound
cmp
out
data16
stos
inc
push
out
cli
pushf
lock
pushf
cmp
adc
cmp
pop
push
xchg
or
sbb
sbb
fcoml
cmp
nop
sub
xchg
xor
pop
in
jae
movsl
xor
mov
push
shlb
bound
iret
repnz
jne
cmp
loop
adc
add
sbb
lret
dec
and
xor
ds
push
xchg
cmpsl
shr
dec
cs
and
xorl
pop
mov
mov
or
push
repnz
insl
lods
push
jg
aam
mov
enter
jbe
lcall
jb
hlt
mov
pop
xchg
xor
fistps
mov
xor
enter
inc
test
pop
xor
pop
mov
frstor
xchg
dec
mov
out
push
es
shll
repnz
push
push
aas
adc
sub
inc
sbb
data16
ret
out
pop
int3
lods
rorl
pushf
loopne
shl
lea
jbe
incb
add
or
mov
inc
push
stos
adc
xchg
fwait
sbb
call
push
cmp
lea
add
repnz
sub
shrl
int3
and
xchg
jne
and
jmp
mov
sbb
jg
dec
xchg
inc
mov
test
xor
inc
mov
orb
or
imulb
test
shll
ja
adc
pop
cvtps2pi
xor
inc
or
pop
call
rorl
inc
in
add
sub
add
adc
xchg
add
roll
ja
sub
lods
add
mov
jecxz
dec
jno
gs
popa
loope
popa
xchg
fs
mov
jle
push
push
jge
xchg
lret
lods
xor
adc
sbb
divl
int3
les
jns
fldlg2
lahf
mov
jmp
mov
sub
adc
jno
sbb
and
jbe
xor
clc
lock
sti
ja
adc
fwait
dec
mov
jno
mulb
fcmovnbe
into
daa
mov
dec
jmp
mov
dec
push
popf
lods
shrb
or
ficoml
or
lds
inc
mov
inc
mov
mov
mov
inc
pop
sub
xchg
cltd
ret
cmpsl
aaa
aas
mov
mov
cmp
es
cmp
cmp
xchg
andl
aam
adc
mov
push
scas
lret
popa
push
or
prefetchw
int
jp
sub
push
dec
aam
inc
sub
xchg
gs
int
in
or
xor
nop
dec
inc
ret
mov
rolb
mov
or
mov
popf
mov
jecxz
pop
aam
inc
or
pop
clc
addb
roll
push
bound
xor
add
rcll
pusha
stos
icebp
pop
jnp
pop
aas
jbe
mov
push
sub
sub
or
or
mov
scas
ret
hlt
sub
cs
xlat
loop
mov
std
xchg
lret
add
sarb
sti
xor
mov
xchg
scas
lods
fidivl
xor
xchg
psubusw
bound
imul
mov
jl
mov
sub
rcrl
ja
lods
ss
cmp
adc
fsubs
ljmp
addl
push
in
dec
adc
push
ficoml
in
push
xor
xor
cmpsl
cmpsl
jb
push
mov
jecxz
or
pop
popf
adc
and
scas
inc
jo
or
iret
inc
aas
call
dec
out
fimull
push
movsb
jecxz
adc
cmpsl
xchg
dec
dec
inc
jbe
daa
mov
sbb
rcrb
fwait
inc
jbe
mov
dec
es
lock
mov
dec
lods
inc
fisttpl
fsubs
fs
ja
mov
pop
sub
pop
sub
xchg
in
inc
sti
ds
fdivrl
jmp
push
jnp
push
repz
xchg
rcr
jp
call
or
cltd
sti
in
ds
or
sahf
ds
dec
sbb
cmp
jno
incb
jns
dec
leave
sub
pop
sub
mov
rcr
sub
xor
sbb
mov
lods
mov
loopne
push
js
dec
sub
mov
jno
je
sub
or
lcall
fdiv
cmp
add
adc
dec
cmc
dec
sub
inc
xor
dec
xchg
mov
mov
icebp
ja
dec
dec
sbb
lret
scas
and
pop
leave
fistl
and
std
inc
jmp
pusha
rcrb
in
outsb
fcomi
xchg
mov
dec
xlat
fucomp
sub
inc
call
mov
sub
outsb
push
jno
aaa
mov
clc
subl
push
jno
cmpsb
addb
in
mov
arpl
adcb
sub
sub
jge
js
lods
sub
aas
icebp
adc
es
aad
sbb
or
mov
es
lods
mov
sub
add
ss
and
test
hlt
jge
aad
xor
inc
test
sub
xor
sahf
sar
add
push
fs
cmp
jo
arpl
jg
cmpsl
out
xchg
jae
cmp
rorb
add
jne
or
xor
sbb
lret
js
fildl
add
pusha
or
pand
push
jae
lret
sarl
faddl
mov
xchg
rolb
pop
lret
push
inc
push
inc
and
mov
or
shl
aad
push
scas
stos
in
xchg
and
lret
cmp
mov
out
mov
dec
jecxz
lods
std
push
insl
pop
cmc
pop
and
and
and
mov
mov
pop
fsub
mov
lret
push
in
pusha
outsb
nop
lods
dec
pusha
stc
jp
push
lret
lahf
cmp
jbe
int
push
test
xor
mov
mov
ss
shr
jmp
je
dec
mov
jbe
push
xor
sub
fcmove
xor
inc
fs
push
fistpl
add
add
sbb
aad
sbb
popa
add
sahf
in
inc
push
jo
into
in
addb
dec
xchg
sbbl
test
sub
push
mov
mov
mov
cmp
fsubs
stos
loop
cmp
cwtl
jns
je
roll
sbb
jae
pop
popa
pop
xchg
cmpsl
mov
push
mov
push
cmp
ret
loopne
push
mov
push
cmp
loop
outsb
into
fs
mov
scas
mov
cmc
cmp
push
xchg
pop
or
sub
das
mov
pop
inc
int
pop
cld
pop
and
mov
xchg
pop
sbb
inc
mov
xchg
sbb
push
cs
cmp
mov
adcl
sub
cmpsl
jne
aas
inc
dec
es
or
mov
fsubs
mov
pop
rcr
into
mov
movsb
dec
mov
data16
mov
mov
decl
lcall
cmp
popf
scas
stc
std
sbb
mov
lods
in
scas
enter
fsubp
test
cmpsb
lahf
fs
bound
test
push
popa
lcall
xorb
enter
mov
or
add
pop
aad
jns
pop
out
fwait
jo
xchg
cli
inc
insl
add
ret
repnz
stos
and
movsb
je
sub
mov
mov
xor
jl
int
sbb
push
daa
sbb
inc
mov
stos
lahf
dec
aaa
jo
addr16
lods
jo
cli
and
cli
cs
and
data16
pop
xchg
mov
jl
fstpt
pusha
dec
ret
push
loopne
mov
cmpb
jle
pop
ficomps
insl
aad
cmpsl
cmpsb
mov
sub
jge
push
cmpsl
xchg
cmp
cmp
mov
pop
lods
push
popa
xor
cmpsl
jp,pn
jp
test
fildll
je
test
inc
outsb
iret
shll
dec
mov
icebp
dec
pop
js
ror
rcll
fadd
adc
hlt
lret
mov
inc
xchg
adc
mov
leave
jecxz
sbb
hlt
push
iret
cmpsl
cmc
mov
imul
push
test
cmc
inc
imul
adc
rcll
lods
push
fiadds
insb
mov
insb
mov
lahf
addl
js
cli
ja
divb
jmp
pop
lock
and
mov
sbb
std
jne
mov
xorb
lret
dec
mov
pop
xlat
push
js
shl
lea
cwtl
sub
and
xchg
jg
gs
in
xchg
cmp
jnp
gs
test
int3
mov
lcall
stos
mov
sub
rcll
xchg
int
scas
aad
gs
cld
mov
lea
fimull
mov
and
mov
jmp
enter
jnp
ja
dec
stos
imul
popf
xchg
cmp
lds
sub
adc
std
jecxz
lock
sub
add
mov
inc
or
loop
js
mov
jg
add
arpl
pushf
push
pop
and
push
nop
dec
daa
and
mov
dec
mov
repnz
and
loop
aad
dec
add
out
repz
lret
dec
shr
sti
int
insb
faddp
pop
mov
adc
int3
js
fs
test
fisttpll
jno
pop
loope
enter
cmp
mov
xchg
and
mov
xor
addr16
setp
push
les
lret
fisubrl
imul
leave
bound
mov
in
fs
sbb
xor
mov
std
jge
cli
loope
mov
ljmp
fstpl
adc
popf
filds
addr16
xlat
outsb
aas
lret
es
inc
idiv
cmp
sahf
jne
movsb
lea
mov
jg
pop
or
iret
cmp
mov
lea
xor
insl
dec
mov
and
mov
inc
mov
inc
enter
pop
adc
pop
xorl
mov
mov
add
cltd
imulb
jp
test
jecxz
push
sarb
add
jnp
or
jge
lods
stc
xchg
pop
ret
sbb
scas
imul
roll
jecxz
mov
je
cli
pop
cmp
mull
out
jmp
cmp
dec
ja
loopne
and
dec
mov
push
jnp
xchg
or
stos
pop
mov
int
adc
push
test
pop
stc
mov
repnz
mov
mov
xchg
xchg
stos
mov
clc
inc
stos
jp
inc
mov
test
out
lds
sbb
enter
aad
xor
xchg
pop
lahf
pop
push
push
and
mov
pop
inc
adc
cmp
scas
lods
or
sub
mov
lahf
out
sbb
aaa
adc
pop
daa
xchg
cmpsl
test
add
or
pop
cmp
cltd
mov
icebp
movsb
push
popa
jge
push
hlt
imull
stc
add
filds
in
cmpb
push
gs
mov
into
add
in
ljmp
pop
inc
neg
scas
jp
imul
fstps
jecxz
mov
shll
out
clc
test
sbb
jmp
and
loope
and
pop
shll
xchg
sti
ret
xchg
sub
inc
xchg
gs
loopne
fsub
jmp
ret
mov
pop
or
jo
ds
sbb
or
shl
or
mov
call
adc
orl
push
and
add
bnd
int
mov
imul
pop
aam
flds
jo
sub
out
gs
dec
inc
stos
cmp
lret
cmp
mov
dec
xor
lods
fs
or
mov
xor
xor
jge
mov
mov
ret
mov
mov
inc
stos
pop
js
fs
mov
inc
lahf
inc
in
pop
ret
negb
pop
inc
insb
mov
dec
dec
clc
out
push
cltd
sbb
addl
mov
insb
rcrl
mov
and
pop
cmp
rcl
movsl
gs
test
add
pop
inc
push
ret
in
std
sbb
lds
insb
stc
xchg
inc
lret
jo
mov
enter
andl
xor
jno
mov
inc
movsl
shrl
or
adc
pop
jmp
je
add
lock
aaa
jge
push
add
outsb
in
outsl
jns
adc
or
in
push
not
cld
mov
jp
orb
das
or
fwait
bound
arpl
cmp
dec
inc
leave
aas
pop
mov
pop
and
lods
and
pop
or
sbb
push
xchg
mov
mov
fbstp
mov
lret
frstpm(287
jg
jns
pop
mov
shll
dec
xchg
add
scas
lahf
sbb
jns
push
mov
xor
jns
bound
in
lock
outsb
insl
rorl
jg
data16
cmp
mov
adcl
lret
xchg
mov
push
pop
xchg
push
xor
push
fsubl
or
jp
test
sbb
mov
aaa
cwtl
dec
andl
leave
es
mov
cmp
xchg
xchg
xor
sub
int3
sub
dec
pushf
sti
testb
and
pop
sub
test
xor
repz
push
xor
jne
test
retw
popa
inc
mov
lods
mov
fstpl
xchg
push
popf
aam
push
jne
sbb
lods
js
rolb
inc
stos
mov
jg
rorb
hlt
push
std
imul
test
xchg
out
lods
popa
mov
xchg
pop
iret
int
sub
mov
inc
sahf
call
fstpt
sub
sbb
fstpt
mov
xchg
mov
fs
inc
pop
hlt
gs
lret
xor
xor
cmp
lods
ds
mov
stc
pop
fsubrl
mov
lock
fnsave
insl
insl
les
xchg
jg
xlat
xchg
dec
arpl
xchg
push
fwait
push
rorb
mul
mov
cmp
repnz
cli
in
sbb
ss
push
xor
xchg
cmpsl
jno
xchg
int3
pusha
dec
jge
cmp
lahf
std
mulb
int3
fstl
mov
jo
roll
cmc
sbb
xchg
xor
lea
adc
mov
mov
in
fcmove
push
and
inc
xchg
fs
pusha
test
in
incl
pop
test
lcall
mov
adc
adc
inc
test
adc
hlt
mov
inc
adc
push
or
sub
insl
mov
pop
repnz
fnsave
std
mov
je
xor
xor
fcomp
ret
nop
push
addr16
add
push
shr
loope
sub
jae
shl
loop
movsl
mov
mov
lock
jmp
aad
push
arpl
sub
cld
fdivr
jmp
rclb
pop
lea
xchg
stc
cwtl
sahf
xchg
jne
cmp
lock
test
test
mov
xor
cld
lret
add
ljmp
ljmp
jg
insb
lret
inc
inc
inc
xor
aad
inc
out
push
adc
xor
ja
or
and
gs
imul
cmpsb
adc
das
ja
mov
test
sbb
fidivrl
testb
dec
xor
jne
mov
nop
pushf
sarb
jp
test
call
es
mov
xchg
out
or
mov
into
in
xor
or
jge
out
and
ret
xor
dec
ja
mov
pop
pop
imul
adc
or
mov
jb
or
scas
sub
test
mov
fsubrs
or
test
cmp
mov
xchg
in
dec
sbb
mov
mov
jle
test
mov
ljmp
jge
mov
sbb
sbb
hlt
push
lea
or
pushf
in
test
sub
and
in
pop
in
inc
call
std
or
jb
mov
push
ljmp
fstpl
cmpsl
add
ja
push
fsubp
jb
xchg
adc
inc
push
ret
mov
mov
sar
dec
cmp
add
mov
pop
jecxz
push
inc
daa
test
or
aaa
add
sub
inc
pop
call
jge
and
lods
sarl
loop
mov
mov
out
das
pushl
sub
mov
add
cmc
movl
clc
lea
cmp
dec
cmp
lret
movsb
jbe
or
movsl
incb
test
out
aas
call
lds
gs
adc
push
mov
xchg
sbb
iret
addb
or
out
push
push
xchg
xor
pop
pop
das
inc
cwtl
testb
bound
movsb
mov
in
push
stos
fidivrl
add
es
push
je
add
cmp
push
add
adc
popf
int
test
fcom
xchg
lods
jle
data16
mov
mov
shrl
jge
ret
sbb
out
nop
out
ret
mov
dec
sbb
mov
in
std
inc
shr
jne
xchg
aas
fstps
bnd
dec
fucom
popf
loope
pushf
pop
shll
mov
lock
jmp
inc
test
lods
mov
jp
jne
stos
or
xchg
ret
sbb
shll
add
jg
ja
pop
mov
lret
xor
fstpt
roll
testl
pushf
pop
clc
andl
sbbl
cmp
adc
pop
jmp
shrl
movsb
pop
ja
dec
cs
and
sbb
aam
push
xor
into
cmpsb
in
push
push
inc
cli
mov
push
adc
dec
jg
fstps
ja
je
fwait
ljmp
leave
pushf
sub
xor
hlt
sbb
inc
jnp
scas
int
frstor
push
fists
xchg
mov
scas
sbb
cmp
jl
add
test
sub
push
jecxz
das
into
lock
lret
js
lret
jge
mov
ss
cmp
loopne
cld
imul
cs
pop
je
cmp
or
cmpsl
je
lods
jb
scas
jb
or
mov
outsb
and
dec
mov
mov
xor
pop
dec
sbb
push
cmp
xlat
add
sub
fidivl
pop
cmp
add
xor
rcr
mov
das
inc
in
mov
fs
mov
aas
jne
adc
divl
cmp
jl
fsts
pushf
xor
orl
sahf
ljmp
dec
xchg
xor
xor
and
les
imul
adc
hlt
push
rcll
imul
enter
icebp
shrl
scas
pop
xchg
clc
outsl
movsl
inc
mov
xchg
aaa
adc
dec
add
pop
cld
pop
lahf
xchg
lahf
fstl
lods
std
fstpl
or
jg
adc
adc
jp
insl
pop
test
xor
pusha
mov
push
mov
jg
push
sub
sub
xchg
cmp
pop
aaa
mov
xchg
pop
jmp
mov
xchg
rcrl
push
sbb
jmp
xchg
and
xlat
sub
and
shlb
insb
jnp
dec
add
das
sahf
and
jbe
imul
dec
enter
cs
sub
movsl
iret
cmc
adc
add
add
cmp
je
cwtl
jmp
mov
shll
ja
pop
lahf
xor
shl
test
shrb
idivl
mov
fbld
jbe
out
xchg
add
push
adc
jo
and
addl
in
jno
mov
shl
mov
or
push
dec
mov
jmp
jle
push
jg
adc
sbb
cld
pusha
shrl
out
push
dec
orl
push
or
fidivrs
outsb
notb
sbb
ret
jmp
popf
xchg
sbb
xor
cmp
xor
cmp
shrd
sbb
and
push
ret
mov
pop
lods
cmpb
aam
add
std
jg
int3
mov
outsl
pop
mov
push
popf
lock
popa
leave
cwtl
push
jp
lret
xchg
stos
loop
push
shrl
scas
push
das
jl
fldcw
pop
push
inc
inc
call
jne
dec
inc
ja
or
int
aad
loope
push
adc
in
xchg
push
jns
inc
mov
xor
push
enter
mov
int
sbb
in
mov
aam
lret
test
push
lods
sub
mov
sarl
jb
sbb
dec
dec
stos
mov
or
aas
cwtl
add
mov
jnp
jno
cmpsb
or
mov
dec
hlt
push
sti
xchg
xor
pop
xchg
je
test
movsb
repz
lret
lea
lret
mov
push
movsb
fiadds
pop
sub
cmp
ja
sub
xchg
jp
push
or
shlb
sbb
cwtl
pop
fisubs
dec
sbb
jp
xorl
jne
add
add
insl
adc
inc
divb
mov
xchg
repnz
sub
ficompl
cmp
xchg
mov
les
mov
lcall
cmpl
in
enter
mov
xlat
lahf
xchg
sar
cmp
enter
mov
mov
inc
js
add
pop
fwait
mov
fdivl
xor
sahf
mov
scas
jnp
jae
jmp
sahf
movsb
adc
movsb
cli
das
push
cmpsl
mov
lds
fstl
mov
xorl
add
cmpsb
ds
aas
mov
xchg
nop
les
adc
ret
shl
stos
fisttpl
in
ss
fisttpl
lcall
insb
add
mov
cltd
sub
jno
sti
and
inc
clc
mov
test
int3
into
mov
pop
sub
mov
stc
sub
imul
dec
or
fimull
iret
and
pop
cmp
xor
cmp
lea
mov
dec
jns
lds
mov
sbb
pushl
pop
outsb
and
mov
push
icebp
into
pop
call
aam
cmpsb
or
cmp
cmpsl
dec
stos
icebp
add
and
mov
cmpl
ds
xchg
dec
lea
xchg
mov
ficoms
sub
mov
mov
ss
sbb
aas
jp
sbb
popa
add
cmp
rcl
adc
push
pop
cltd
cmp
sub
and
pop
adc
sub
sbb
fsubl
sbb
lret
and
icebp
pusha
sub
jl
mov
call
notb
push
push
std
inc
lods
xlat
add
nop
lock
out
mov
fnstsw
out
sbb
mov
loope
inc
insb
roll
orb
push
fdivs
jle
jbe
inc
push
xor
mov
jl
shll
sbb
imul
ret
xlat
out
repz
jl
out
in
cmp
adc
aad
sbbl
std
out
xchg
subl
iret
sti
mov
imul
mov
mov
dec
mov
xchg
pop
inc
dec
jb
pop
cld
fwait
mov
xlat
dec
jmp
mov
xor
and
jae
out
push
xchg
pop
or
dec
es
out
and
fldz
in
out
xchg
xchg
sar
fstpl
lods
inc
jae
mov
test
and
dec
jecxz
pop
out
fldl
in
mov
dec
sub
mov
out
cmc
mov
ret
flds
xchg
imul
mov
clc
insb
mov
cltd
mov
sbb
cmp
xor
rorb
pop
out
pop
imul
push
cwtl
insb
outsl
repnz
xchg
mov
and
rcrl
out
xchg
lcall
xlat
sbb
aam
in
sbb
imul
iret
test
mov
popf
pop
aam
mov
lcall
pop
ja
fcmovnb
sahf
jge
jnp
insb
add
sarb
sbb
and
sbb
mov
enter
cmpsb
ss
leave
xchg
cmpsb
mov
outsb
and
and
xor
sub
loopne
pop
das
pop
fwait
pop
cmpsl
aad
cmpsl
xor
iret
or
imul
pop
imul
push
jle
dec
mov
adc
insl
loopne
and
js
sbb
repz
aad
mov
negb
adc
xchg
sbb
lret
ret
in
sbb
daa
or
hlt
ret
xor
lcall
adc
data16
xor
or
fistl
orb
mov
ljmp
loope
cltd
jmp
fs
mov
iret
jle
mov
cmp
jecxz
cmc
in
mov
out
popa
jae
dec
xor
lsl
mov
xlat
fbld
xchg
and
pusha
imul
push
data16
rcll
outsb
cmpb
lcall
jg
int
movsl
mov
or
or
jns
test
xchg
ds
test
mov
mov
lea
mov
pop
xorb
sbb
clc
lds
enter
imul
mov
iret
mov
xor
adcl
jle
push
cmp
cmova
rol
mov
mulb
xchg
pop
and
mov
adc
fiaddl
imulb
aam
pop
cmp
vmaxss
or
pop
in
cmpsl
mov
sub
xchg
test
cs
out
xchg
mov
jmp
pop
std
cltd
test
mov
icebp
push
or
or
inc
dec
add
mov
int3
pop
mov
je
inc
cmp
jns
int3
cmp
xorl
cmp
push
movsl
jp
loopne
cmp
jae
dec
or
inc
outsb
stos
je
xchg
jl
xchg
sti
add
cs
pushf
jb
dec
cltd
xlat
pop
pop
mov
ret
loop
sbb
test
insb
push
bound
rcrb
mov
fwait
mov
lock
loopne
xor
insb
popa
inc
adc
iret
pop
mov
loope
test
sahf
pop
js
gs
stos
xchg
mov
sub
add
or
xor
cmp
outsb
push
push
push
lret
imul
xor
lods
cmp
lcall
sbb
mov
or
xchg
jg
into
push
dec
mov
bound
std
xor
jno
push
ret
sbb
xor
popf
or
insb
push
push
mov
inc
stos
aaa
fucomi
cmp
adc
push
je
mov
inc
or
xchg
jno
data16
sarb
rcll
mov
loopne
push
rolb
das
mov
bound
stos
jae
dec
xchg
lods
es
and
sti
inc
movsl
and
sahf
jno
pop
mov
sbbb
and
inc
test
fwait
aad
inc
sbb
stc
pop
shlb
sbb
cltd
addr16
add
bound
repz
jbe
dec
ja
jl
lcall
insl
xor
flds
cmp
pop
push
add
dec
xor
xchg
int3
mov
inc
add
jae
cmpb
fisttpll
jmp
and
es
negl
outsl
in
ja
loop
lcall
xchg
nop
cmp
jmp
adc
lods
js
push
enter
mov
jne
js
int
pop
xchg
dec
or
stc
xor
jle
xorb
data16
adc
and
inc
sbb
mov
ficoml
pop
jno
je
lods
mov
sti
xor
or
add
rep
mov
xchg
mov
in
shl
add
push
dec
sti
dec
test
jbe
cmp
outsb
sbb
adc
inc
js
orl
sub
xchg
cwtl
cmp
xchg
add
xor
inc
fwait
mov
dec
sub
adc
scas
movsl
nop
fst
lods
push
xacquire
mov
mov
pop
pop
push
mov
sbb
mov
xchg
jge
mov
into
push
fldenv
scas
fsts
or
aas
fnstsw
lock
and
sahf
push
xchg
jmp
sbb
shr
sub
std
leave
mov
aad
push
mov
adc
lcall
xabort
mov
mov
mov
call
dec
pop
or
cmp
repnz
shll
icebp
pop
jae
jl
test
pusha
icebp
inc
test
jo
xor
xor
add
out
cmp
xchg
lods
les
mov
ret
jbe
add
xchg
mov
shl
scas
fistl
lods
jne
add
add
scas
mov
sbb
jmp
mov
sahf
jno
cmp
mov
push
push
push
add
idivb
in
dec
mov
es
jg
push
iret
sbb
xor
cmp
adc
xchg
icebp
mov
sub
push
xlat
mov
jns
rorl
pushf
mov
stos
or
scas
int3
fstl
repnz
cmpsl
int3
mov
xor
or
mov
mov
repnz
sbb
mov
pusha
imul
pusha
or
inc
sbb
or
push
or
xor
test
pop
add
mov
cmc
das
mov
or
out
lds
sti
dec
jo
scas
cmpsb
pop
sbb
repz
gs
in
nop
js
lret
aam
movsl
stos
stos
mov
xor
xchg
push
sub
popa
lret
sub
in
jo
push
or
add
dec
ret
mov
notl
cmpsl
mov
xor
and
mov
add
pushf
dec
test
pop
push
jo
cltd
xchg
push
pop
addl
sbb
jecxz
imul
mov
leave
stos
or
insb
jo
popa
les
sbb
inc
dec
dec
mov
aam
pop
scas
mov
push
insb
cs
fwait
inc
sti
jnp
ficoml
mov
add
sbb
iret
push
shlb
ljmp
cmpsl
ds
rclb
cmp
xchg
and
mov
stos
xor
inc
icebp
xchg
imul
adc
or
sbb
xchg
lahf
movl
and
icebp
mov
es
cmpsb
fsubrl
pop
js
pop
xchg
and
cli
jl
dec
jmp
movsl
int3
add
mov
stos
in
xchg
test
mov
aas
pusha
pop
bound
adc
or
xor
mov
mov
stos
xchg
in
aad
xchg
pop
pop
push
mov
cmp
sbb
pusha
push
mov
push
data16
mov
mov
stos
bound
push
xchg
adc
cltd
test
popa
jmp
or
int3
fdivs
lock
mov
jl
repnz
test
and
cmp
ret
dec
cmp
mov
outsb
sub
jl
add
enter
adc
sub
dec
ret
sbb
inc
xor
add
lcall
xlat
lahf
aaa
xor
outsb
push
out
inc
inc
or
into
js
pop
test
pop
sbb
sub
xchg
pushf
sub
sub
dec
dec
in
repz
cmp
adc
cmp
ret
adcl
sub
cmc
stos
mov
and
xchg
push
pop
xor
inc
sub
js
cmp
dec
orl
push
mov
out
jb
mov
mov
in
push
das
icebp
sbb
scas
inc
cmp
sahf
loope
dec
mov
mov
add
add
in
daa
xor
or
cmc
add
imul
daa
xchg
sbb
lret
push
jb
mov
inc
lea
push
push
lds
int
and
in
cmp
pop
aad
in
les
dec
arpl
enter
xlat
orl
pop
shrl
sub
int
xorb
test
stc
mov
out
cld
jb
outsl
push
jg
test
mov
out
fldpi
xor
test
icebp
std
lahf
stc
imul
pop
cmc
adc
and
mov
icebp
mov
jb
sarb
sbb
fisubs
shlb
in
add
imul
scas
inc
lret
jno
jge
ja
mov
shll
in
mov
das
xor
mov
sbb
xchg
fsubp
addr16
bound
xchg
out
pop
mov
jbe
inc
push
lret
test
sti
orl
dec
adc
leave
pop
nop
fdivp
sbb
sbb
xor
push
sahf
jae
fsubl
popa
dec
sahf
or
stos
and
addr16
cld
push
mov
fidivl
cmp
mov
outsl
inc
or
int
bound
or
xor
sbb
bound
cmpb
das
inc
lods
mov
push
cmp
jg
xorb
inc
or
fistpll
rcl
pop
dec
cmp
sbb
in
mov
decb
scas
mov
or
cmpsb
add
jl
ja
lahf
and
sub
inc
and
stos
fldenv
adc
cmpsb
flds
pop
test
cld
mov
adc
jns
pop
lahf
in
lcall
pop
mov
cmp
and
call
cmpsb
ret
jecxz
es
sahf
mov
rcrl
mov
clc
add
iret
bnd
daa
pop
jno
push
jns
lahf
cmc
jo
test
cmc
mov
adcb
sub
cmpsl
jns
out
cmp
lret
xlat
sub
jb
and
stos
aaa
or
pushf
out
mov
js
in
inc
push
mov
adc
jle
push
mov
stc
sub
daa
dec
jecxz
lahf
mov
dec
lret
lock
fcomi
fsubl
cs
xor
jp
sbb
dec
leave
add
add
or
lret
xor
ds
aam
mov
dec
adc
or
push
xlat
rcrb
sbb
shrb
hlt
mov
lfs
addr16
jmp
es
inc
mov
push
or
mov
lock
sar
int
xor
and
push
push
adc
and
jmp
mov
sbb
adc
push
lahf
dec
mov
jle
mov
addb
icebp
arpl
imul
or
sahf
cli
stos
iret
out
mov
outsl
shll
repnz
lret
adc
pop
xor
mov
sub
ret
cmpsl
inc
aam
mov
mov
aam
and
mov
clc
dec
inc
pop
out
loop
das
xchg
mov
sbb
test
mov
jl
pop
dec
movsb
out
das
xor
jbe
mov
es
int3
cmp
jbe
add
out
pop
negb
call
sbb
mov
lcall
jl
shl
lods
jl
stos
out
iret
lret
imul
mov
add
pop
xlat
push
jge
shll
adc
xor
inc
rcr
lcall
mov
rcl
pop
inc
push
stc
pop
cld
jb
daa
das
mov
daa
sahf
cs
pop
add
out
mov
dec
cmpsb
test
or
push
cmp
jbe
imul
mov
stos
mov
popa
xchg
push
fnstenv
or
sub
push
es
add
pushl
inc
dec
fldcw
add
das
adc
outsb
mov
test
cmp
pop
xlat
outsl
ja
subl
lret
add
xchg
inc
stc
push
mov
mov
cli
pop
inc
mov
add
movsb
sbb
jns
xor
inc
jge
mov
inc
cmovno
push
xorb
pop
stos
stc
je
shrb
mov
out
cmpsl
jmp
xor
add
inc
sub
aam
shl
lods
out
sbb
xchg
pop
push
fucomip
adc
xchg
inc
xchg
adcl
fsub
enter
movsb
pushf
xchg
xor
mov
sub
jg
loop
aas
adc
jo
jecxz
lret
and
sahf
js
or
cs
repnz
out
cmp
jle
xor
adc
xor
int3
in
mov
xor
rcll
popf
xor
inc
xor
mov
sub
les
cwtl
aam
cld
lret
mov
inc
js
sbb
pushf
jnp
pusha
or
jns
push
jle
cwtl
mov
xchg
cmc
sbb
sub
mov
lret
aad
aad
adc
xchg
out
addr16
mov
bnd
push
push
mov
cmp
jmp
rolb
and
dec
in
jmp
xchg
daa
fwait
icebp
popa
add
fistpl
aaa
xlat
lret
push
fcompl
or
xor
std
and
xchg
mov
xchg
jns
dec
xchg
shl
lahf
pop
cmp
xor
adc
ja
pusha
cwtl
cs
dec
out
ss
cmp
sub
mov
dec
mov
dec
out
enter
jp
dec
and
stos
xchg
sbb
push
aas
cmp
imull
inc
add
inc
cmp
sbb
sbb
mov
push
stos
mov
ret
pop
repz
dec
and
pushf
cmpsb
test
pop
sub
daa
cmpsb
push
pop
jl
pushf
mov
jmp
cmc
ret
pop
cld
lds
jecxz
leave
jmp
push
call
or
mov
add
jo
cltd
xchg
push
js
pop
pop
mov
insl
fs
xor
mov
popa
adc
loope
lock
test
jb
fwait
cmp
cmp
aas
and
sbb
std
xchg
inc
inc
sti
jae
jp
mov
imul
ja
test
mov
cli
or
cli
inc
mov
mov
ficompl
insl
fstpt
sub
dec
push
out
cmp
push
pushf
repz
adc
lock
rcrb
pop
xchg
sub
push
movb
loope
xchg
sbb
fcmovbe
lret
pop
in
fstps
lcall
cmpsb
adc
pop
ret
jg
std
nop
add
imulb
aaa
subb
xor
push
cmp
sbb
push
pushf
push
dec
mov
mov
mov
add
or
dec
test
mov
jne
scas
pop
pop
mov
stos
loop
dec
or
push
xchg
cmpsl
mov
cltd
mov
dec
xor
xchg
ljmp
or
loopne
jo
js
icebp
dec
fwait
push
add
push
ja
cmp
mov
pandn
jns
stos
lods
and
mov
mov
sub
mov
push
loopne
mov
add
xor
sub
xchg
test
adc
adc
mov
fadd
ds
jp
pusha
sbb
xchg
into
jge
test
stos
sbb
dec
mov
inc
daa
add
in
push
push
and
fucomi
out
out
call
add
push
jb
xchg
add
sub
cmp
sub
les
lcall
mov
popf
lret
lods
mov
mov
mov
test
or
sub
xor
in
lcall
loopne
int
daa
popl
xchg
push
dec
jg
test
lock
aam
test
and
and
jp
mov
sarl
lret
push
mov
mov
xor
adc
loope
push
cmp
enter
sbb
cltd
inc
fistps
jmp
adc
cmpsl
adc
or
dec
inc
lods
push
dec
stos
test
loope
sub
jbe
sbb
xor
push
jns
pop
les
div
xchg
sub
outsl
adc
mov
or
incl
cld
mov
imul
pop
mov
and
adc
mov
adc
xchg
js
repnz
outsb
mov
filds
and
push
mov
aam
test
insl
cmp
enter
xorl
pop
int
mov
popf
jl
mov
mov
data16
add
jae
cwtl
add
aaa
mov
push
mov
push
jb
negl
xchg
pop
jae
xlat
mov
jne
lret
mov
ret
push
push
and
xchg
mov
mov
je
push
cmp
outsb
push
mov
push
loopne
mov
clc
fisubl
fdivr
inc
fs
add
loope
loope
sbb
call
lds
mov
inc
test
jne
shrb
pop
clc
nop
pop
mov
cmp
leave
in
lods
repz
imul
into
cmp
fcoms
pop
out
pop
enter
xor
push
ret
push
xor
pop
int3
int3
dec
mov
test
xchg
and
cmpb
fmuls
lret
xor
daa
xchg
or
test
daa
inc
data16
pop
mov
inc
cmpb
sub
xchg
xchg
call
push
dec
aad
sub
jp
mov
sbb
jnp
out
arpl
mov
xchg
mov
inc
and
add
or
sub
movsl
fldl
jmp
inc
adc
push
add
cwtl
sbb
lods
mov
jg
cs
mov
or
push
int
aad
divb
mov
pop
xor
dec
xchg
xchg
pop
dec
rol
pop
jle
xchg
dec
inc
mov
cs
jge
call
movsb
xchg
push
sti
sub
xor
lock
push
sub
cmpsb
jno
mov
mov
test
xchg
int
data16
add
adc
fs
pop
scas
adc
fcmovnu
pop
sbb
push
pop
data16
mov
mov
insb
ss
imul
mov
sub
xor
xor
cmp
add
jl
call
xor
imul
int3
leave
mov
loopne
imul
lods
push
mov
nopl
and
flds
pop
arpl
sbb
jns
or
rcr
sbb
mov
dec
ret
cmp
mov
or
iret
cmp
mov
cmpsb
mulb
rclb
test
adc
sbb
neg
cmp
in
push
jge
inc
ljmp
xor
ret
xchg
mov
mov
stc
ret
fsts
in
mov
jbe
inc
popf
and
mov
adc
pop
rclb
cltd
test
repz
iret
fstps
mov
iret
cltd
mov
mov
test
stos
int
jecxz
push
hlt
fdiv
sti
sbb
jge
pop
in
scas
ja,pn
aad
shl
xor
stc
les
testl
outsl
loop
mov
inc
imul
sbb
cmovl
inc
imul
add
fsubr
int3
std
insl
or
out
mov
jg
sbb
inc
fs
mov
sub
js
add
cs
js
jb
xor
push
push
add
cmp
dec
das
cmp
mov
mov
negl
or
rorb
xor
ja
push
cwtl
fdivs
shl
xlat
cmc
sti
or
push
pop
pop
push
mov
xchg
push
pop
pop
in
andl
cmp
mov
push
lock
mov
jo
shrl
dec
rcll
pop
adc
pop
mov
inc
jnp
fdivr
dec
fwait
psubq
xchg
xchg
push
jge
cmp
jle
push
jb
hlt
jbe
repz
pop
mov
mov
and
mov
mov
adc
je
pop
jbe
lock
testb
sbb
jp
divl
call
ss
cld
das
cli
scas
lea
pop
jnp
gs
test
xchg
xorb
inc
push
popa
inc
adc
hlt
cmp
pop
adc
cs
fidivs
sub
int
adcb
dec
mov
push
imul
jns
or
inc
jb
lock
cmp
push
add
sbb
outsb
jns
add
push
mov
sbb
aaa
pop
ljmp
xor
jge
in
jl
and
sbb
das
test
lods
test
adc
out
loopne
rcrl
xchg
cmp
out
push
out
mov
shrl
inc
push
fimuls
out
iret
cwtl
les
jp
mov
pop
aas
mov
lock
ret
and
xchg
out
imul
daa
xchg
repz
shrb
mov
fcmovbe
pop
xor
pop
fsubr
mov
and
cmp
sbb
adc
mov
push
imul
jge
xchg
repnz
pop
cltd
repnz
xor
jle
mov
push
push
inc
mov
xor
pop
mov
xor
add
int3
clc
fnstenv
out
jne
in
lahf
pop
or
mov
lea
pop
shll
or
cmpsb
inc
xorl
jb
test
fcomps
sti
jbe
ljmp
xchg
mov
mov
push
into
mov
movb
nop
mov
dec
mov
cmpsl
pop
arpl
jl
fstps
inc
data16
add
mov
or
ficoml
inc
aam
mov
cmp
fucomi
repz
pop
stos
cmp
mov
sbb
rcll
jnp
pop
sahf
in
lods
out
rcrb
fprem
das
out
movsb
push
jge
int
mov
sub
pop
dec
lock
dec
lahf
mov
dec
out
fsubr
or
push
xchg
out
scas
dec
iret
sbbb
stos
pop
ret
jb
mov
mov
mov
adc
fldcw
mov
sti
outsl
ret
ljmp
fsubs
inc
in
aam
stos
cli
aaa
adc
push
mull
jp
xor
dec
stos
and
push
sbb
lret
xchg
cmp
insb
push
push
lock
fs
shrb
mov
shl
cwtl
out
pop
repz
nop
xor
dec
cmp
xor
or
push
adc
je
xor
push
sbb
lahf
lret
stos
or
or
mov
loop
mov
out
test
mov
movsl
inc
hlt
and
idiv
mov
mov
cmp
cmp
jp
mov
xchg
or
mov
jle
mov
sahf
nop
fisubrl
jge
icebp
push
xchg
jo
jns
push
fstl
addr16
je
push
xor
mov
xor
cmp
fmull
andl
bound
or
lret
jbe
push
add
outsb
inc
scas
test
xchg
and
mov
stc
add
pusha
push
das
and
add
jnp
push
push
xchg
pop
sbbl
ja
nop
fldenv
scas
sub
inc
stos
jle
fsubs
and
or
gs
int
push
cmp
mov
adc
in
lea
sahf
hlt
insl
lods
mov
pop
cltd
sub
sti
call
xchg
sti
stos
loopne
repz
pop
data16
loope
cmp
rcll
rclb
js
push
fnsave
out
leave
stos
mov
adc
ret
bound
pop
add
mov
cmp
and
push
lds
adc
push
push
inc
dec
inc
push
mov
xor
push
push
add
mov
fnsave
mov
jne
test
sbbb
movsl
sbb
xor
mov
outsb
mov
mov
inc
stos
adc
cwtl
adc
push
test
sub
or
inc
lret
clc
mov
pop
cmpl
jnp
stc
lret
inc
inc
adc
std
sbb
popf
or
cmpsl
aam
jp
inc
lret
mov
aas
or
daa
data16
loopne
mov
sahf
int
fsub
pop
mov
jb
mov
jecxz
filds
rcrl
jnp
push
shrl
mov
test
arpl
push
dec
add
adc
cmp
rcll
pop
push
test
xlat
sbb
xor
fstps
fiadds
cwtl
ret
pop
dec
les
lds
push
dec
fsubl
lock
inc
pop
add
mov
mov
aaa
xchg
cmp
mov
sar
imul
out
int
sub
cmp
out
repnz
aaa
inc
pop
pop
test
je
mov
aas
xchg
push
cli
cmp
int3
ja
imul
or
cmp
aad
lods
sbb
mov
jle
sbb
push
pop
add
mov
loopne
or
mov
push
and
clc
rcrb
xchg
pop
shlb
movsb
pop
xchg
xchg
cmpsb
sbb
or
mov
xchg
arpl
xor
sbb
inc
loop
cmpsl
xlat
xchg
pusha
stos
sub
jmp
lcall
jbe
fldenv
rcrl
insl
sbb
lea
push
mov
xor
push
pushf
aaa
pop
test
in
cmp
push
movsb
fdivrl
cmpsl
shrl
push
sbb
in
mov
push
xchg
repz
std
cmp
outsl
stos
or
insl
mov
lahf
mov
or
lahf
mov
dec
repz
stc
aam
cmp
pop
push
push
faddl
xchg
xorl
iret
pop
xchg
shll
mov
shrb
cmp
pusha
adc
movsb
jb
sbb
repz
scas
fsubrs
in
rcll
jns
out
dec
adc
insl
movsl
cmp
aam
fildll
lock
decl
outsb
ds
in
jge
sbbb
in
pop
add
cwtl
arpl
mov
stos
ja
add
ja
jp
sub
idivb
and
cmc
mov
sub
pop
jge
lds
jae
or
cs
leave
inc
xor
push
mov
testb
mov
insb
mov
mov
xchg
out
jbe
mov
test
jecxz
scas
shlb
mov
xor
sarl
cmc
adc
or
xchg
int3
out
ljmp
xchg
jmp
imul
adc
cmp
push
insl
jp
jecxz
in
jns
loope
jo
pop
xor
inc
shrb
push
shlb
roll
adc
pop
adc
sbb
and
test
cld
int
sub
pop
cmp
arpl
and
push
sbb
adc
sub
xorl
mov
sub
out
lcall
dec
mov
jmp
cmp
jmp
dec
mov
je
xor
mov
sub
push
imul
jo
in
sti
push
les
xor
jp
fisttps
xor
loopne
mov
out
icebp
adc
cmc
dec
mov
mov
popa
adc
aaa
jmp
dec
pop
aad
jle
dec
testl
mov
xlat
jnp
ja
addb
dec
pop
cmc
cli
iret
das
popf
adc
jg
mov
inc
pop
ret
jo
or
lods
stos
xchg
mov
cmpsl
push
ljmp
aam
mov
loop
dec
cmp
lret
xchg
stc
shrl
mov
adc
out
jb
std
cmpsl
xchg
push
pop
adc
pop
js
and
jge
sti
rorl
es
loope
mov
fwait
rep
enter
or
fcom
and
mov
xor
dec
fcmovb
fs
xor
aas
fstps
in
gs
imul
jl
dec
fwait
sbb
add
xchg
popa
mov
xlat
and
xchg
dec
fidivrs
repnz
scas
or
inc
and
negb
mov
mov
cwtl
pop
fcmovne
xchg
int
cli
inc
mov
arpl
lock
dec
decl
test
test
lret
push
shrl
test
loopne
sub
add
inc
mov
loope
je
and
push
mov
or
mov
setp
call
out
cmpsl
das
aaa
in
add
movsl
inc
out
cltd
push
cld
pop
shll
clc
psllw
mov
aas
xchg
cmp
and
mov
push
or
fdivl
shl
push
dec
icebp
addr16
add
dec
mov
int3
ds
sub
dec
repnz
in
mov
leave
shlb
fdivp
push
adc
pop
fwait
dec
push
cmp
in
es
push
movsl
jbe
sub
mov
lock
sti
cltd
adc
push
mov
pop
mov
and
fists
aaa
xchg
xchg
push
cld
mov
aam
notb
jmp
sbb
xor
pop
mov
ror
in
xor
out
enter
dec
push
fs
lahf
sub
pop
ds
repz
adc
and
pop
inc
and
mov
mov
aam
xchg
inc
fwait
jo
and
sbbb
insl
mov
hlt
ds
sti
fmuls
inc
ficoml
mov
pop
lock
push
sbb
mov
fadd
es
and
mov
int3
test
xchg
or
xor
jl
cmp
push
push
popf
jg
jmp
sub
cltd
loopne
xchg
push
stc
pop
push
insl
mov
pop
pop
inc
xor
cwtl
sbb
popf
xchg
test
into
push
jbe
mov
mov
aas
subl
push
jne
inc
fs
mov
jle
inc
push
loop
pop
pop
add
shrb
loop
dec
fldl
int3
std
jle
mov
add
ds
mov
in
inc
add
sub
std
mov
add
stos
mov
test
push
sbb
fucom
lahf
cmpsl
or
sub
pop
icebp
adc
ficoml
fcoml
push
cmc
andb
sbb
xor
jmp
jne
jno
ljmp
cmp
ret
adc
jge
dec
insl
push
sub
jge
shlb
arpl
jbe
dec
pusha
loop
mov
hlt
and
in
sbb
and
adc
mov
arpl
inc
cltd
ret
fnstenv
jne
add
ret
xchg
roll
mov
jecxz
add
add
test
and
adc
mov
adc
inc
add
idivl
push
push
dec
iret
or
test
and
lds
push
aad
add
jle
popa
js
mov
enter
popa
testl
call
ljmp
or
mov
sbb
mov
push
imul
jne
adc
stos
xchg
inc
out
xlat
int
sub
out
jne
jae
in
syscall
mov
add
push
mov
push
push
arpl
sti
stc
add
outsl
or
popl
adc
sub
mov
in
aaa
xor
sub
dec
mov
shll
cltd
or
aad
clc
inc
aaa
push
stc
push
and
xor
sub
xor
xlat
push
pop
sub
sub
push
pop
xor
ds
arpl
adc
push
aad
xor
inc
jg
cli
adc
mov
mov
jge
rorb
sahf
addr16
xchg
test
mov
in
mov
jecxz
rcll
scas
xchg
movb
cmp
jmp
jle
jle
xchg
lock
pushf
shll
xchg
and
lods
clc
mov
mov
lock
jae
xchg
or
push
xor
pop
and
push
in
ss
jo
clc
push
lcall
pop
push
cmp
jle
xchg
mov
and
push
hlt
je
stos
adc
lds
dec
adc
out
jg
sbb
stos
testb
jbe
mov
xchg
cmpsl
mov
orl
imul
add
push
jbe
pop
cmp
inc
mul
adc
and
cmp
and
pop
outsl
pop
or
cli
int
cmp
ljmp
aad
jl
xchg
mov
outsb
dec
mov
mov
fs
lea
and
xlat
scas
push
sbb
dec
gs
mov
sbb
push
mov
push
inc
jae
dec
test
add
outsb
cwtl
hlt
mulb
jns
or
fimull
jnp
fs
pop
mov
pop
fistpl
or
add
adc
cmp
sub
les
fwait
push
loope
jl
popa
test
jo
xor
ret
dec
lret
stos
inc
ljmp
push
add
xchg
popa
push
mov
roll
sub
jnp
insb
jmp
sbb
mov
jmp
pop
dec
ja
inc
imul
es
jmp
sub
and
mov
jmp
adc
cs
rol
add
jae
imul
lods
lea
push
aam
adc
test
fcomip
mov
pop
sbb
stos
orl
add
xchg
add
inc
rorb
jbe
push
inc
pop
and
dec
jp
inc
jne
mov
test
lods
mov
pop
in
shrb
pop
mov
mov
dec
movsl
les
out
pop
movsb
iret
aam
ret
pop
adcl
pop
scas
clc
lret
pop
pop
cmpsl
or
call
dec
jle
pop
cs
cmp
sbb
test
outsl
push
outsl
es
in
sub
push
push
or
cmp
rcrl
pop
cwtl
pushf
iret
mov
jns
dec
xchg
jmp
push
and
and
inc
push
test
arpl
leave
push
pop
push
pop
mov
repnz
jns
dec
add
insb
mov
repnz
xchg
int3
fdivl
js
into
clc
sub
stos
aam
adc
fcmovu
inc
mov
add
insl
mov
fs
sahf
mov
mov
inc
jo
imul
outsb
lret
sub
xor
xor
addr16
xor
sbb
aaa
ficoml
fs
int
iret
call
call
lret
and
dec
mov
mov
or
jbe
test
adc
push
cmp
adc
or
mov
fidivl
std
or
lahf
jle
push
mov
adc
arpl
adcb
sbb
ret
enter
sub
cmp
jbe,pt
popa
xchg
xlat
bound
and
add
mov
test
pop
rol
clc
pop
sub
hlt
pop
cwtl
adc
or
push
add
les
sbb
loope
or
jmp
test
jnp
loopne
inc
lock
fucomp
mov
jl
jbe
adc
sub
fstpt
data16
cmp
mov
imul
js
cli
in
fxch
sub
inc
or
out
cwtl
notb
popa
fstpt
test
ret
sbbb
lahf
mov
out
imul
adc
ficoms
mov
aaa
lahf
jns
cmp
sarl
dec
fcoml
adc
call
cmpsl
lods
pop
dec
into
adc
jno
jge
adc
call
ret
push
rcl
ds
jbe
cld
out
insb
or
xor
ss
xor
scas
mov
add
mov
adc
out
int3
sti
add
lock
in
adc
lahf
sub
arpl
sti
mov
jno
push
mov
sbb
ss
sbb
push
mov
fsubrs
sbb
arpl
or
push
mov
nop
pop
and
ds
sub
inc
dec
dec
adc
mov
sub
and
mov
lods
mov
or
push
or
xchg
aaa
dec
or
out
mov
cmp
ret
cmp
mov
loopne
pushf
add
mov
imul
insl
adc
movsl
jbe
fwait
push
push
mov
sbb
bound
mov
stos
ret
pop
sub
jp
mov
hlt
xchg
vpunpckhdq
ret
mov
sub
mov
add
loopne
ret
jge
xchg
adc
xor
sub
and
insl
add
adc
orl
mov
mov
push
inc
adc
test
repz
fldcw
mov
mov
addr16
jge
push
jb
jne
sub
xchg
push
jge
dec
mov
movsb
mov
dec
or
call
add
inc
pop
roll
pop
push
jge
sbb
arpl
mov
ror
mov
paddb
hlt
rcrb
cld
or
mov
push
enter
movsb
ljmp
jo
fbld
ds
ljmp
clc
jmp
adc
mov
scas
push
fs
mov
arpl
cmc
fistl
dec
sti
push
xor
adc
int
pop
out
xor
push
cmpl
pop
mov
sbb
jne
pop
cmp
arpl
stc
hlt
mov
test
mov
cmpl
or
pop
push
mul
sbb
push
xchg
mov
out
jp
add
mov
into
dec
cmp
mov
push
scas
outsl
sub
mov
push
rolb
data16
movsb
jge
mov
mov
mov
cmp
push
test
mull
test
adc
pop
lret
jb
mov
push
sahf
out
push
int
pop
inc
add
mov
dec
fs
fcompl
data16
mov
fnstcw
mov
gs
shrl
dec
push
lds
sbb
lods
test
sub
outsb
ret
mov
out
cmc
fsubrs
scas
xor
in
cmp
shlb
xchg
mov
jg
inc
add
in
int
sub
or
das
push
dec
mov
sbb
dec
and
aam
mov
emms
adc
cmpsl
gs
outsb
lock
test
mov
inc
push
jae
lods
mov
bound
dec
roll
into
mov
lods
push
jmp
adc
insb
daa
inc
inc
test
jecxz
incb
iret
push
fwait
push
inc
fscale
and
mov
jbe
inc
push
pop
inc
xchg
inc
sub
sub
xchg
push
jmp
xchg
mov
int3
jecxz
js
clc
stos
cmpsb
lret
add
adcb
movsb
mov
mov
jae
inc
out
in
mov
ds
add
aad
mov
sbb
nop
sbb
and
lds
inc
adc
push
das
pop
outsb
divl
cmp
push
xchg
repnz
mov
loope
xchg
stos
mov
fucom
je
insb
insb
div
stos
sbb
lret
xor
adc
cmp
and
imull
xlat
adcl
imul
mov
jnp
bound
adc
inc
int3
and
sbb
das
into
fdivs
sub
pop
aam
pop
inc
rcrl
jno
dec
in
mov
leave
push
xchg
push
stos
out
cmp
out
pop
mov
sbb
or
sbb
dec
jle
and
cmpb
and
js
pcmpgtd
jne
mov
mov
fdivrp
mov
lcall
jne
xchg
test
dec
hlt
push
pop
stos
add
nop
xor
fisubl
lret
je
add
ss
int3
in
pop
imul
cmp
pop
pop
mov
cmpsb
shll
sbb
jno
add
out
sbb
scas
out
cwtl
fldl
loop
jmp
jge
add
push
jne
xchg
fcoms
cmp
insl
ljmp
insl
jno
dec
in
stos
push
in
jl
call
cmp
icebp
jnp
xchg
ret
sub
repz
sti
aaa
sbb
xor
adc
inc
mov
push
scas
mov
pop
adcb
je
pusha
cltd
ljmp
add
jne
imul
mov
cmp
sub
lret
out
cmp
fldcw
or
mov
xorb
and
jg
dec
fisttpll
adc
dec
mov
push
loop
in
push
adc
cltd
fwait
inc
add
dec
push
in
inc
test
mov
movsb
pop
shll
test
in
in
pop
and
or
jge
movsb
cli
or
fsubrl
shlb
cld
outsl
and
jecxz
mov
sub
xor
push
push
mov
or
xchg
aaa
sbb
inc
mov
mov
inc
fimull
dec
jp
iret
xor
data16
daa
loope
out
test
jl
ss
imul
repz
cmp
jne
fildll
lods
repz
cmp
pushf
sbb
pop
sbb
mov
iret
inc
sbbl
out
outsb
pop
sbb
rcrb
sbb
sub
push
repz
cs
adc
push
mov
frstor
out
mov
jnp,pn
fldcw
mov
mull
xchg
dec
dec
push
popf
sbb
test
and
dec
add
sub
ljmp
pop
movsb
js
pop
imul
xchg
jns
lahf
inc
mov
xor
jp
push
adc
in
and
sub
in
sub
pop
xchg
add
mov
mov
sub
cld
cmc
sub
push
and
xor
dec
stc
stos
fcompl
icebp
dec
leave
inc
out
sbb
fiadds
shrb
out
jne
addr16
sbb
adc
xchg
sub
inc
je
movsb
in
or
repz
gs
jp
das
fsubl
imul
jnp
outsl
xor
dec
jg
addr16
mov
daa
mov
data16
cmpsl
cmp
les
mov
mov
and
flds
pop
pop
adc
ds
cs
test
push
nop
jns
scas
and
jo
or
mov
lock
sbb
cmc
mov
xor
mov
jbe
adc
add
mov
cmpsb
push
and
mov
pop
pop
call
lods
sub
in
and
inc
xchg
xchg
testl
dec
test
dec
popa
test
pusha
dec
add
test
leave
shll
inc
stc
or
cmpsl
or
sbb
cmp
movsl
pandn
out
movsl
test
push
sub
fs
stos
add
or
jg
jne
test
or
add
push
sbb
addb
dec
setns
stos
sbb
mov
lods
adc
test
stc
cmp
test
dec
or
mov
sbb
push
and
or
stos
lret
jo
popa
addl
pop
adc
lret
pop
push
xchg
pop
or
fwait
loop
mov
icebp
sub
mov
stos
loop
movsb
push
adc
imul
cli
ret
mov
aam
push
push
es
jp
pop
jl
xchg
cmp
repz
mov
cmp
int3
jmp
movsb
mov
or
dec
push
jae
repnz
scas
push
das
mov
adc
out
ret
xchg
pop
mov
sub
out
add
inc
mov
jmp
cmp
mov
mov
adc
pop
aas
jge
int3
lock
shl
xchg
lahf
lret
inc
in
cmpl
xor
cld
push
pop
aas
scas
xchg
jge
aas
adc
out
scas
xchg
or
and
scas
insl
icebp
out
nop
sub
in
pop
mov
or
push
pushf
js
adc
popf
lods
push
xor
or
lods
daa
mov
js
popa
add
sub
leave
add
jno
hlt
fs
mov
jg
aas
add
push
ljmp
in
sub
mov
add
xchg
mov
xchg
mov
pushf
push
int3
or
in
scas
or
pushl
push
xchg
test
cwtl
jo
ljmp
mov
mov
dec
xchg
adc
std
sub
pop
inc
pop
int3
mov
inc
cwtl
jbe
sbb
in
mov
dec
cld
xlat
cltd
sub
loope
jns
adc
mov
xchg
sbb
pop
dec
push
lods
stc
popa
pop
incl
xchg
and
frstor
mov
ret
or
mov
sbbb
mov
fcomps
pop
pop
add
mov
inc
lods
sbb
inc
jle
mov
scas
test
cli
test
gs
ret
adc
sub
lds
and
adc
repnz
cmp
testl
pop
sub
subl
pop
inc
or
mov
jg
xlat
xchg
or
mov
lods
arpl
sub
sub
pushf
xchg
es
xor
pop
jnp
and
mov
sbb
and
adc
sbb
fdivrs
push
xchg
cmpsl
xor
js
sbbl
cmp
xchg
push
adc
inc
push
xchg
sbbb
sbb
int
fcompl
sub
outsb
dec
enter
cwtl
cltd
jb
pop
scas
ror
inc
push
enterw
add
xchg
pop
dec
mov
repnz
cmp
push
adc
mov
dec
mov
pop
jae
fisttpll
xchg
mov
inc
pop
mov
pop
xor
mov
ds
lds
out
aad
mov
jmp
mov
fisttps
test
pop
jp
adc
cmp
and
mov
adc
inc
adc
xchg
idivb
lcall
jbe
nop
imul
xorb
lea
pop
lods
lcall
test
js
add
mov
jno
and
mov
adc
lods
push
fisttps
dec
xchg
shll
stos
fistps
ret
in
pop
xchg
dec
jp
in
ss
int3
fidivs
mov
in
out
bts
push
or
addl
loopne
test
cmp
mov
push
xchg
lret
mov
xchg
mov
fistpl
push
sbb
jge
jns
aam
push
in
adc
lret
dec
sbb
leave
cltd
mov
dec
fisttpll
cwtl
dec
bound
jl
mov
adc
popf
cmp
stos
loop
or
cmc
mov
inc
ret
push
jns
jl
es
dec
aas
mov
xorl
sbb
imul
rcrl
sub
or
insb
mov
bound
inc
sti
in
mov
test
les
mul
outsl
fnsave
lret
jno
pop
sub
and
jne
jb
lcall
or
mov
mov
ficompl
pop
negw
mov
shlb
dec
add
sub
loope
or
mov
jb
and
das
dec
aaa
stos
push
jl
frstor
adc
mov
push
nop
sub
push
pop
push
shll
mov
or
movsl
xor
popa
shll
mov
lods
movsb
push
in
sar
sti
and
int
or
mov
insl
ss
dec
notb
push
dec
cs
push
mov
or
add
inc
outsl
in
cmpsl
and
ljmp
cmc
mov
outsb
mov
mov
jb
pop
sub
jl
push
outsb
js
sbb
imul
int
sbb
jle
adc
xchg
push
pop
in
stos
rcrb
mov
pop
adc
ds
cmp
jle
mov
add
sub
cmpb
cmp
xor
sub
sbb
cmp
and
xchg
lods
pop
adc
jae
rclb
jns
pop
mov
mov
sti
mov
rolb
sahf
std
dec
pop
pop
xchg
xchg
int
mov
sbb
or
cli
sub
test
idivb
stc
arpl
sbb
mov
sahf
bound
sub
xchg
push
dec
fcmovnbe
xlat
pop
repnz
dec
mov
sti
fidivs
cli
outsl
scas
lods
fisubl
cmp
cmpsb
stc
adc
faddl
or
sub
lods
mov
ficoml
xor
pop
xchg
jbe
or
imull
cmp
sbb
shlb
imul
xchg
lahf
pop
or
jns
shlb
out
ret
fwait
xchg
rcr
jge
pop
mov
push
or
mov
popf
outsb
jns
xchg
and
loope
fmull
dec
arpl
aaa
jp
dec
sbb
cmp
inc
jae
stc
xor
into
mov
xor
mov
iret
cmp
xlat
loopne
insb
xchg
jecxz
pop
adc
fdiv
je
cmp
mov
pop
push
lcall
rcrb
scas
sub
fwait
sti
mov
or
jbe
test
imul
cli
sbb
mov
jns
dec
dec
push
test
cmpsb
jle
scas
mov
sub
in
xchg
shlb
aas
jp
or
pop
test
cmp
mov
sub
lret
jg
pop
pop
outsb
pop
in
xchg
popa
daa
clc
enter
jne
lods
xchg
mov
push
or
jg
adcl
das
lea
out
cs
ja
pop
rcrl
call
xchg
adc
incl
je
enter
aad
popf
orb
shrb
cmp
mov
mov
add
mov
or
xadd
jae
jge
out
ficoml
mov
test
cs
ret
mov
jge
jmp
mov
fwait
xor
sub
push
fidivrl
inc
pop
add
mov
test
data16
scas
sub
leave
dec
sub
xchg
pop
inc
push
xchg
xchg
mov
jmp
in
adcb
dec
jno
js
imul
enter
sub
sbb
nop
fistpl
adc
in
lods
hlt
scas
das
int
test
inc
xlat
push
jle
or
test
xchg
push
in
mov
xor
inc
mov
jbe
mov
clc
movsl
jge
jae
jg
and
rcrl
cmpsl
rcl
or
dec
aam
xchg
loopne
mov
in
cli
push
ret
pop
pop
das
inc
sub
cs
lock
jp
int
cmp
dec
in
int
mov
cltd
xchg
sbb
shrl
mov
inc
mov
fwait
xlat
cmp
inc
stc
sti
cmp
out
jge
and
sub
pop
in
xchg
add
xor
in
push
push
pop
notl
neg
mov
test
scas
xchg
in
std
pop
inc
repz
xlat
nop
or
cmp
lret
jno,pt
ss
inc
mov
arpl
movsb
and
pop
lds
dec
rorb
cmpl
or
jbe
or
nop
shlb
aas
mov
xchg
jno
lahf
outsb
xor
add
sub
out
shrb
aaa
sbb
dec
jl
add
push
jecxz
cmp
push
mov
or
and
aaa
outsb
or
imul
mov
push
out
mov
mov
clc
cld
sbb
enter
aam
into
nop
cld
and
sbb
out
addb
xchg
lea
mov
xor
or
push
cli
loope
incl
les
jae
testl
sbb
mov
xchg
repnz
negb
mov
stos
cmpsl
test
xor
addr16
test
xor
xchg
jp
fdivrl
push
add
in
xchg
xor
add
jne
add
cmp
lahf
dec
push
sbb
dec
aad
pushf
pop
dec
sarb
inc
jno
hlt
mov
dec
jnp
add
stc
push
fcoms
inc
xor
fiadds
xor
pop
test
push
dec
sub
aas
out
pop
popf
sti
mov
xchg
xor
fs
stc
scas
frstor
test
shl
into
ljmp
mov
xor
shl
into
jb
or
into
pop
les
movb
insl
adc
call
xor
aam
push
std
dec
test
push
inc
int3
sbb
jge
mov
mov
aaa
jo
mov
add
jo,pn
ljmp
or
or
xor
xor
mov
mov
ret
push
lret
push
ljmp
sahf
or
xchg
aaa
in
and
dec
push
test
pop
stos
pop
xchg
in
scas
repz
mov
push
or
aas
aas
test
lret
pop
or
xlat
lahf
push
xor
sub
aad
add
scas
outsb
add
pop
loopne
jecxz
push
cmp
sahf
movsb
mov
mov
mov
jmp
stc
add
sub
es
in
sub
fstpt
inc
xchg
xor
roll
add
jg
ds
mov
add
outsb
xor
fstl
sbb
cli
cmp
test
pop
mul
in
cmpsl
push
divb
stos
xchg
pcmpeqw
adc
outsb
loop
push
sbb
dec
adc
ret
cmp
jb
xor
das
cmp
sbb
clc
xchg
sbb
test
mov
imul
xchg
mov
adc
scas
cmp
imul
movsb
adcl
iret
lock
adc
movsl
pop
sahf
jmp
ret
mov
mov
inc
fisubs
shlb
adc
cmp
ds
cli
fwait
or
sbb
or
jb
addr16
pop
cmc
mov
dec
ret
lret
addr16
mov
not
sbb
xchg
mov
cmp
notl
into
jecxz
adc
inc
inc
mov
cmp
xor
or
or
add
sbb
push
adc
pop
stos
lock
adc
jbe
jecxz
hlt
jnp
aam
xchg
outsl
test
mov
mov
push
shlb
neg
pop
pop
push
cmp
jns
add
in
decb
ss
adc
xor
loopne
xor
mov
pusha
cwtl
dec
vxorps
fnsave
pop
enter
xor
stos
imul
mov
jbe
je
aam
int
mov
movsb
inc
jg
lahf
adc
sbb
je
ficompl
mov
test
jae
lods
mov
enter
lds
lret
pop
mov
sub
test
into
dec
insb
bound
in
fsts
cltd
jae
xchg
movsl
xor
lahf
stos
gs
jnp
adc
jb
ds
push
push
add
cmpsb
sbb
add
ss
lock
pop
les
or
xchg
xor
daa
or
push
movsb
cmpsl
inc
or
aam
mov
out
jle
jo
dec
pop
xchg
jno
lret
lods
lret
fiadds
rep
ficoms
sbb
data16
jmp
rcll
push
sub
loopne
adc
loope
clc
jbe
fsubrp
loope
sub
xor
mov
inc
das
sti
mov
cmc
mov
mov
call
ret
pop
aam
xchg
sbb
arpl
in
pop
xor
test
sbb
cmp
dec
sbb
std
inc
into
shll
xchg
imul
fwait
mov
sbb
and
shlb
cmp
push
mov
ficompl
push
xor
test
or
pop
psubsb
and
outsl
or
ljmp
out
sarb
inc
sub
adc
jle
xor
or
js
lret
int
cmpsl
fwait
cmpb
jmp
xor
out
mov
lea
lret
cmc
add
cmp
jecxz
sub
mov
mov
mov
pop
out
push
jl
mov
mov
cmp
pop
inc
jp
sub
loopne
add
scas
xchg
or
bound
sbb
fs
loope
push
out
xchg
into
aam
or
and
sub
sub
jnp
jp
lds
and
inc
jbe
sub
ret
dec
xchg
aaa
pop
push
jbe
jmp
les
xchg
jae
jle
add
or
pop
mov
jecxz
mov
scas
jg
adc
nop
divb
push
jae
jb
das
das
les
repz
outsl
pushf
mov
sub
cmp
pop
adc
mov
mulb
cld
and
add
mov
sub
and
dec
mov
add
dec
sbb
fisubrl
fcoml
subl
ds
pop
out
dec
hlt
repz
popf
dec
or
jecxz
mov
aaa
mov
outsb
into
cmp
fcomps
fisubs
mov
adc
jle
loope
xor
popf
mov
pop
jnp
jmp
pop
fwait
sub
stc
sub
jmp
movsb
or
icebp
out
fisttpll
pop
mov
push
sub
iret
push
fwait
adc
push
aas
ficompl
jne
les
xlat
fcompl
xchg
push
adc
and
cli
out
jp
adc
and
mov
adc
sbb
sbb
mov
jo
rcll
mov
insb
mov
pop
cltd
xlat
adc
sub
repnz
xlat
lret
or
stos
inc
ss
in
in
rcrl
and
arpl
inc
nop
jp
dec
frstor
push
push
test
jno
cli
pop
dec
ljmp
cmp
aaa
dec
inc
imul
push
dec
into
add
mov
sub
repz
pop
xor
pop
fcomip
out
pop
dec
xchg
xor
or
add
dec
movsb
pop
out
sbb
pusha
mov
sub
sbb
enter
jle
mov
add
out
mov
mov
mov
fsubrl
lock
pushf
pop
mov
daa
stos
std
pop
mov
scas
rcl
mov
inc
pop
loopne
push
jnp
adc
loop
jae
loope
dec
scas
daa
hlt
sub
scas
leave
inc
sbb
lret
and
dec
dec
xchg
cmpsl
mov
xor
outsb
or
fistpll
stos
jo
or
mov
imul
imul
lcall
adc
int
aam
xchg
mov
or
sbb
mov
pop
js
sub
sub
jno
hlt
xchg
mov
push
xchg
xchg
and
and
mov
push
lods
jle
inc
int3
push
aad
pop
cs
fmuls
dec
xchg
xchg
xchg
xchg
lret
mov
cmpsl
xchg
and
push
cld
stos
leave
cs
inc
push
add
fwait
pop
je
push
loope
xchg
mov
push
pop
lods
in
loop
hlt
out
inc
addb
sub
repz
adc
dec
out
fmuls
sbbl
jns
xor
push
inc
nop
pop
lock
loop
mov
inc
andl
test
jno
dec
out
or
cmpsl
out
inc
xor
dec
cmp
addr16
dec
in
mov
mov
jl
roll
xchg
mov
add
call
arpl
insb
inc
jne
jno
mov
popl
xlat
adc
mov
jecxz
pop
ss
sti
int
mov
mov
mov
xor
xchg
add
dec
cmp
fstpt
je
mov
out
hlt
push
jne
ret
or
call
repnz
loop
ret
push
sti
sbb
push
pop
les
je
sub
test
mov
mulb
int
mov
jns
iret
gs
sub
sub
adc
inc
fbld
push
jmp
sub
add
mov
shl
mov
lods
cmp
mov
scas
xor
or
je
flds
aam
ret
adc
pop
movsl
nop
jp
jns
das
lea
inc
adc
das
xchg
int3
xchg
ror
hlt
orl
xchg
xchg
inc
jp
nop
lcall
jmp
and
xor
js
leave
mov
dec
adc
lds
es
js
pop
lock
mov
cmp
outsl
ret
pusha
mov
hlt
roll
mov
pop
in
mov
jge
lds
mov
mov
arpl
rolb
jp
movsb
insl
stc
jae
mov
mov
stc
mov
mov
jae
lret
pusha
mov
ja
popl
mov
addw
pop
in
cli
and
inc
jb
js
outsl
inc
dec
dec
mov
in
and
pop
ret
inc
lahf
or
in
inc
mov
mov
scas
add
scas
outsl
dec
fdiv
lods
jae
out
xor
lds
leave
mov
clc
pop
fs
adc
test
frstor
cwtl
gs
fsubrs
out
data16
inc
adc
mov
push
loop
push
stos
out
or
mov
shlb
mov
in
jmp
jle
mov
leave
fstpl
add
jmp
or
mov
ss
and
jg
rorl
stc
xor
je
push
push
loopne
pop
in
inc
jl
pop
scas
sbb
add
cmc
jg
push
lcall
lea
adc
pop
setno
pop
out
les
xor
sti
fstpl
shrb
lds
idivb
sbb
push
pop
ljmp
xchg
arpl
and
loop
loopne
pop
xor
lahf
lea
dec
imul
sub
ret
mov
out
jg
adc
insb
dec
add
lods
divl
scas
or
push
add
clc
inc
ljmp
rcrb
jne
sbb
jge
or
cmpsl
pop
jae
lret
call
and
or
xor
lea
adc
addr16
movsl
or
inc
rolb
pop
mov
iret
or
dec
xor
cs
adc
into
sbb
lea
mov
mov
arpl
fwait
push
sbb
std
sbb
aas
inc
mov
sub
lret
stos
push
inc
aaa
adcl
or
push
pop
sub
inc
fstpl
sub
loopne
loop
out
sbb
xchg
jbe
push
mov
xchg
pop
enter
shl
push
lcall
lods
mov
push
in
loopne
adc
test
add
fistpll
pop
cmp
cli
cs
repnz
das
js
mov
fxtract
fcoml
inc
out
xchg
jbe
std
repnz
aas
jae
and
lret
loopne
test
sub
stc
pusha
mov
inc
adc
sbbl
ss
stos
lds
mov
mov
sbb
or
rcr
out
mov
loopne
sub
push
xchg
mov
and
scas
repnz
sbb
xor
cli
push
cmp
mov
repz
push
faddp
inc
outsl
dec
jle
movsb
fiaddl
stc
sbb
sub
dec
sub
out
sub
push
outsl
mov
lret
mov
add
xchg
loopne
jb
fcmovnb
imul
or
fdivp
loope
idivl
sub
stc
sbb
out
sub
sub
xor
scas
jae
and
outsb
mov
cltd
movsb
xchg
test
push
and
andl
pop
paddsb
sahf
sub
xor
popa
mov
cmp
call
inc
je
in
and
out
mov
insl
push
ficoms
jle
mov
cli
sbb
test
daa
xchg
jb
stos
push
out
or
outsb
loop
repnz
cs
xor
test
add
icebp
movsb
mov
xor
repnz
dec
pop
mov
scas
fsub
lahf
aaa
movsb
mov
cmp
mov
popf
pop
hlt
std
and
lds
mov
divb
out
fsubs
jl
fisubrl
xchg
push
inc
std
scas
popf
lahf
std
int
hlt
jle
mov
pusha
dec
mov
xor
add
sbb
mov
mov
xor
nop
jne
ljmp
in
ja
pop
fwait
mull
inc
xlat
push
push
push
mov
dec
or
dec
pop
xor
fistps
mov
call
int
paddq
loopne
xchg
and
stc
aad
and
add
inc
int
iret
add
test
adc
ret
test
pusha
or
nop
jnp
xor
movsl
int3
lcall
jl
rclb
loope
xchg
dec
dec
mov
inc
test
mov
jns
in
mov
sub
cmp
das
or
lock
pop
cwtl
aas
inc
xor
test
subl
sbb
push
sub
adc
and
xchg
mov
test
lahf
cld
push
lcall
sub
out
mov
cmp
fbstp
xchg
cwtl
pushl
xor
ds
adc
aas
into
jge,pn
sub
repnz
js
jns
scas
pop
jb
xchg
mov
out
insb
pop
insl
daa
jge
je
pop
fimull
subb
mov
inc
inc
gs
rcr
ret
fldt
je
jecxz
sub
lock
stc
inc
out
xchg
mov
xchg
mov
lds
lock
int3
adc
adc
fildl
movl
mov
pop
sbb
cmp
stos
mov
pop
aaa
or
mov
or
mov
ret
xchg
in
push
push
mov
inc
and
sub
sar
stc
jno
jbe
mov
mov
sub
fdiv
ds
xor
lds
rorb
out
mov
push
mov
push
jge
movsb
inc
and
rorl
popa
push
xor
mov
bound
add
adc
mov
fistpl
dec
leave
push
inc
lods
xor
jg
pushf
repnz
mov
add
adc
push
and
xchg
int3
push
jmp
testb
popf
mov
int
scas
jle
cmp
mov
mov
adc
xchg
pop
sub
lret
test
js
jne
jmp
cmpb
insl
pop
rcl
cmpsb
mov
cltd
mov
rcr
sahf
mov
js
stos
cmp
xor
xchg
scas
fimull
pusha
push
aas
inc
in
in
jge
pop
ja
mov
je
xor
scas
cmpsb
lods
inc
inc
push
fwait
mov
mov
mov
fiadds
out
mov
pop
cmp
push
cmp
movb
ret
jnp
jbe
and
or
addr16
aaa
pop
mov
mov
jp
clc
add
jecxz
loop
loop
adc
out
lcall
cmp
rcll
cld
dec
inc
loop
jnp
sbb
pop
pop
sbb
inc
js
dec
subl
loopne
mov
pop
xchg
ljmp
nop
or
push
mov
cmpsb
sub
repnz
xor
insb
leave
push
out
subb
ds
fidivrl
mov
xchg
icebp
cltd
fidivs
je
mov
push
sub
or
jl
mov
movsl
iret
jb
xchg
ss
add
inc
outsl
rcrl
outsl
repnz
ja
xor
fidivrl
and
pop
jo
sbb
clc
test
xchg
cmp
xchg
int
mov
mov
push
notl
outsl
mov
mov
test
mov
jb
movsb
or
flds
mov
lret
inc
mov
idivl
leave
jbe
adc
cmp
outsb
or
jbe
je
add
pop
inc
fs
mov
xor
and
pushf
idivl
adc
dec
jmp
outsb
mov
xor
jno
imull
xchg
mul
mov
push
pop
push
and
xchg
loop
jl
xor
add
mov
add
pop
xchg
mov
pusha
xchg
clc
inc
xlat
mov
arpl
xchg
jbe
push
repnz
mov
adc
or
inc
add
test
or
andl
ret
pop
pusha
insb
jecxz
inc
mov
pop
sbb
or
mov
mov
jmp
jo
call
aaa
ds
or
daa
test
mov
int3
test
cmp
jmp
fcmovu
dec
adc
pop
imul
enter
clc
push
cmc
jmp
dec
aas
mov
add
rorl
sbbb
lcall
jns
and
mul
sbb
sub
mov
mov
mov
cmpsb
and
cmp
pop
mov
or
mov
and
imull
popf
movsl
fs
jge
lcall
xor
jmp
popf
add
push
imull
add
mov
add
sbb
leave
inc
and
pmovmskb
cltd
inc
cmp
mov
or
inc
test
fstpt
push
aam
int
cmp
inc
and
adc
fbstp
xor
lods
mov
pop
mov
inc
in
sub
stos
imul
or
das
mov
xor
push
out
adc
xchg
lahf
mov
nop
pusha
mov
ds
int3
daa
push
pop
sarl
mov
mov
sbb
pop
dec
je
loop
rcrb
enter
mov
mov
and
insl
clc
cmp
add
or
mov
push
adc
fisubl
xchg
sbbb
jecxz
mov
ficomps
leave
sbbb
imul
sbbb
xor
cmpsb
pop
out
mov
ret
and
or
mov
or
outsl
sub
xorl
lret
add
fsubrs
push
jne
pusha
cmp
mov
scas
cs
lods
rcrb
jo
xlat
xorl
dec
imul
inc
xchg
hlt
xor
jb
xor
inc
nop
push
test
push
cmp
push
imull
aas
daa
pop
adc
and
add
push
in
and
jmp
mov
mov
add
outsb
das
adcl
adc
shrb
mov
lds
sar
shl
dec
movhps
jmp
data16
pop
mov
or
sysexit
dec
lret
fbld
sarl
test
dec
aam
sbb
lea
aas
cmc
repz
jbe
shll
jno
xchg
loope
xlat
adc
dec
ljmp
ljmp
xorl
ds
lret
push
cld
jg
mov
xor
jmp
clc
jmp
lds
jo
fwait
cmpsb
scas
mov
adc
mov
std
lahf
test
jae
bound
dec
leave
es
cmp
jno
cwtl
add
mov
xor
xchg
popf
stos
push
cmp
push
push
fwait
out
ljmp
bound
mov
cs
adc
outsb
xor
mov
inc
xchg
mov
fldcw
mov
lds
fisttpll
aam
or
mov
mov
lahf
arpl
cli
in
cltd
adc
idiv
jmp
lcall
sbb
pop
mov
fdivrl
ss
jbe
xor
pop
mov
xor
dec
ret
fistpl
mov
loopne
gs
xchg
mov
daa
jmp
std
xor
jg
sub
pushf
add
lret
ret
rcll
stos
pop
int3
bound
lock
in
fwait
adc
jl
out
daa
pop
xchg
jl
repnz
push
jnp
arpl
push
xchg
stos
jle
js
adc
shrl
fldl
adc
push
sub
xchg
insb
outsb
mov
cwtl
mov
int
shrb
push
sti
add
mov
scas
xor
jae
into
xchg
mov
mov
shr
shll
adcb
sbb
ljmp
xor
testl
adc
repz
js
mov
pop
out
push
mov
lds
js
dec
pushf
out
lahf
cmc
xchg
jmp
les
add
dec
push
rorl
cmpsb
or
test
pushf
dec
mov
aas
in
jns
and
addr16
jns
jnp
push
cli
mov
sbb
pushf
subl
add
dec
addl
test
xor
shrl
cmp
fldl
rep
shrb
inc
adc
lods
stos
cld
and
lret
lcall
pushf
outsl
in
jno
aaa
mov
mov
lods
lods
sbb
sub
xor
pop
js
mov
shrb
sub
mov
pop
je
ljmp
stos
mov
mov
or
iret
testb
jno
aas
sub
or
xor
dec
pop
test
scas
pop
dec
add
aaa
push
xchg
mov
dec
inc
fistpl
imul
dec
sbb
inc
dec
out
clc
in
pop
or
sti
std
xchg
jecxz
sbb
mov
je
xchg
jo
sar
das
mov
lcall
stos
enter
lcall
std
pushf
popa
jb
push
out
aas
push
fcomip
popf
dec
aas
fmull
test
fidivl
aad
push
out
mov
or
lret
push
fistpll
addl
and
dec
cmpsb
mov
adc
dec
out
and
add
sbb
lds
adc
mov
out
mov
ret
lret
in
add
cmp
xchg
loop
std
imul
push
add
dec
ljmp
mov
or
mov
xchg
insl
loope
ljmp
xor
addr16
and
or
sub
das
xchg
rorb
pop
dec
xchg
sub
arpl
push
and
nop
cs
jg
lods
mov
dec
xor
mov
in
inc
stc
jge
ja
sub
pusha
sbb
dec
and
bound
enter
in
mov
out
stos
repnz
sbb
add
pop
shll
push
xchg
lea
insb
mov
cmc
mov
in
outsl
sub
ret
pop
scas
sbbb
mov
out
sbb
pop
fdivrs
mov
ljmp
mov
out
pushl
sbb
mov
js
cmpsl
arpl
or
dec
push
lea
mov
lea
cmp
lret
sbb
push
stos
cmp
lods
gs
jl
out
cmpsl
mov
ror
sbb
fldt
lea
sti
pusha
inc
cmp
push
paddusw
pop
cmp
cwtl
xor
outsl
cmc
std
push
sarl
sbb
or
sbb
in
mov
mov
jg
jl
stos
pop
sub
and
jmp
cmp
jge
and
push
add
loopne
out
jb
adc
inc
jg
dec
leave
repz
test
sbb
mov
dec
imul
sub
inc
jmp
inc
outsb
das
shll
adc
jne
xchg
imul
into
nop
mov
push
pop
or
sarl
adc
push
add
lcall
addr16
push
cli
shrl
ja
or
jge
fistpl
not
xchg
lods
or
je
push
or
fimull
out
mov
imul
imul
pusha
rclb
pop
sub
sbb
aaa
dec
test
mov
xor
enter
sub
shr
fdivrs
ficoml
mov
or
popa
into
cmp
jle
xchg
pop
ja
jecxz
xor
adc
ja
das
aaa
leave
fisttpl
push
inc
mov
imul
int
adcl
xor
push
lret
lret
push
cmp
ljmp
dec
ss
das
mov
call
add
jo
out
mov
popa
inc
ja
cmp
lds
mov
and
add
cmp
je
sti
ret
pop
rclb
loop
pop
push
inc
sub
or
sti
popa
scas
lcall
pusha
mov
aad
mov
in
mov
in
mov
inc
mov
movsb
xor
and
fisubrl
mov
mov
jne
ss
test
or
out
enter
inc
xor
test
mov
jne
adc
shlb
test
stc
jae
fnstenv
inc
in
test
or
ret
loope
ja
shll
popl
mov
shlb
stc
dec
ss
mov
loop
pop
shlb
push
cmp
out
das
es
in
ja
mov
mov
repz
imul
shlb
hlt
mov
mov
loopne
cmpsl
push
pop
jge
fs
cltd
xor
fnstenv
jbe
pop
push
dec
or
lds
loop
int3
push
mov
sbb
inc
lcall
mov
xor
insl
xor
sbb
pusha
rolb
sub
push
out
xor
inc
adc
loopne
in
and
cmp
mov
pop
cmpl
jo
push
fistpll
shlb
or
cli
lock
mov
call
stos
lods
pop
bound
push
dec
dec
out
mov
push
cwtl
inc
bound
sti
adc
arpl
lods
pop
sub
pop
inc
or
jbe
gs
cmpsl
mov
jno
aam
mov
lds
out
repnz
popf
jl
aad
sub
outsl
cmp
stos
and
dec
scas
sub
call
das
xor
sub
les
jl
pop
lea
shll
jb
std
sub
fdivrs
xor
mov
add
ljmp
sbb
iret
repnz
add
bound
xor
dec
pop
iret
pop
pop
mov
outsl
sub
jmp
jg
pop
xchg
dec
movsl
mov
xchg
in
sbb
lea
inc
push
dec
push
jl
jg
sub
loope
sbb
adc
jo
ss
btc
inc
xchg
cmpsl
dec
sbbl
in
xor
repnz
into
add
inc
mov
sti
cmpb
mov
xchg
mov
xor
and
lret
or
idivl
mov
orl
shlb
jl
mov
cmpsl
dec
mov
enter
cmpsb
sbb
hlt
insl
adc
xor
mov
or
mov
pop
mov
jae
pusha
jp
xchg
mov
jge
ret
xlat
cli
sub
loopne
pushf
add
dec
imul
dec
xor
add
and
add
pop
dec
orl
out
push
mov
daa
inc
cltd
sub
push
xchg
lahf
xorb
mov
sub
jecxz
in
sti
sbb
ret
cmc
and
push
arpl
test
mov
rorl
in
xchg
lods
inc
and
cmc
sbb
ret
adc
aam
xchg
mov
es
xchg
inc
mov
push
sub
cwtl
jmp
sahf
aad
je
int3
and
cmp
push
add
hlt
or
sbb
lret
je
test
dec
mov
aas
pop
movsb
push
cli
pop
or
clc
popa
popf
or
mov
xorb
add
xor
ret
shlb
lcall
test
rcll
roll
dec
std
js
cmp
xor
sbb
mov
add
sbb
cmpsl
mov
das
xor
add
jge
xor
and
xchg
or
decl
inc
cli
sbb
data16
adc
jae
imul
mov
and
inc
add
dec
mov
jp
into
inc
out
outsb
test
jb
je
outsb
xor
mov
mov
push
dec
mov
mov
mov
jg
mov
mov
sbb
into
hlt
pop
or
mov
push
pushf
and
mov
jb
inc
hlt
nop
add
pushl
ljmp
add
or
mov
push
popa
mov
or
fwait
out
dec
insl
mov
push
push
jmp
fwait
and
outsb
dec
jmp
cli
in
adc
xor
insl
ss
ja
scas
xchg
xchg
in
jbe
aaa
adc
push
sbb
jl
stos
mov
or
loop
cmp
je
sbb
imul
int3
leave
xor
adc
mov
xchg
jp
jns
inc
test
xchg
je
sbb
popa
scas
test
jecxz
adc
cmp
push
xchg
enter
rclb
call
pop
xchg
pop
push
aam
bound
cmc
push
lods
das
ret
sbb
repnz
cltd
or
test
push
add
outsl
jle
pop
ds
sub
lret
lea
cmp
out
mov
mov
xor
mov
sub
cltd
mov
xchg
cli
sbb
push
and
clc
adc
imul
xor
or
mov
js
lahf
mov
adc
mov
and
mov
dec
mov
je
lea
in
inc
sub
test
bound
or
cwtl
fisubl
or
cltd
scas
in
das
int
repnz
inc
mov
jb
sbb
lock
inc
scas
push
jp
ljmpw
xchg
adc
jb
ret
insl
mov
and
mov
lods
bound
imul
and
inc
stos
xor
inc
aas
mov
lcall
stos
dec
sbb
mov
out
div
rolb
push
inc
mov
mov
fldenv
inc
cmpsb
push
test
test
popa
out
lahf
mov
out
outsl
lods
mov
add
scas
jns
xchg
xchg
ja
mov
movsb
xchg
sub
mov
pop
mov
movnti
cmp
sub
pop
xorl
sbb
add
mov
lds
push
les
jmp
push
jb
inc
pop
mov
xor
dec
movsb
adc
das
push
lods
pop
js
mov
loopne
mov
imul
enter
neg
mov
jae
gs
aam
adc
decb
sti
je
pushf
in
mov
jnp
adc
out
movsb
cmp
movsl
inc
push
pop
insl
jmp
imul
out
pop
push
pusha
test
test
js
adc
fwait
popa
push
fcmovbe
xor
lret
leave
lret
addr16
add
add
int3
loopne
push
jge
jne
ficoml
mov
adcb
jmp
sbb
lds
or
stos
or
scas
repz
push
inc
loopne
jecxz
sbb
std
xchg
ds
and
xchg
pusha
push
enter
inc
leave
fdivrs
out
fildl
inc
imul
adc
and
out
push
pop
push
inc
add
mov
mov
inc
sub
scas
insl
xchg
cmp
sub
adc
jo
sbb
jl
cmp
aaa
pop
filds
cmpsl
addr16
pop
cmp
pop
in
test
test
je
out
aam
int3
test
ljmp
fmuls
sbb
mov
sbb
flds
pop
push
jecxz
pusha
push
lcall
in
xchg
ljmp
sbb
enter
ja
push
imul
cmp
and
cmp
pop
mov
ljmp
mov
jne
cmc
popf
stos
mov
ficoms
pop
push
insb
adc
inc
lahf
sub
mov
inc
sbb
xor
pop
lret
mov
push
pop
push
pop
cmp
fwait
sub
andl
dec
jnp
lods
inc
jns
mov
mov
and
sbbb
les
mov
sbb
xor
ror
xchg
push
dec
and
std
dec
or
push
or
mov
add
cli
mov
inc
lods
cmp
sub
lret
test
ficoml
bound
lods
inc
pop
xor
add
cmpb
popf
xorl
pop
add
decl
fmull
jbe
sbb
insb
push
lret
sub
and
lds
push
test
cld
fidivrl
ljmp
mov
pop
and
xor
nop
cmp
fisubs
xor
lret
inc
sbb
mov
imul
xchg
hlt
push
and
mov
sti
push
nop
jno
fdivl
scas
pop
into
cwtl
std
inc
rcrl
loope
pusha
jbe
ret
shlb
mov
push
test
sbb
jmp
or
hlt
sbb
inc
ret
jnp
xor
aas
pusha
pop
div
inc
pop
xor
lahf
lahf
add
ljmp
jge
xor
leave
aaa
bound
xchg
or
pop
adc
rol
sub
xchg
movsl
aam
sbb
mov
inc
jbe
pop
sbb
in
popl
inc
and
xchg
dec
mov
mov
in
in
mov
fprem1
sti
aaa
imul
inc
jmp
dec
hlt
stc
jb
pusha
fbld
push
scas
fisubrl
push
ficompl
rcrb
xchg
pop
repz
push
out
repnz
pop
jns
imul
fs
jg
pushf
xor
rclb
cmp
leave
xor
sbb
sub
test
ret
jecxz
sub
out
popf
notb
imul
test
or
rcr
push
jl
flds
lahf
out
sub
cli
inc
dec
test
lds
mov
inc
dec
jecxz
mov
and
ffreep
sbb
cmp
mov
mull
cmp
test
mov
ljmp
dec
dec
int
hlt
add
push
push
fcoml
or
ret
popa
sbb
pop
popa
aas
cmp
push
sbb
stc
insl
pop
mov
jp
push
cmpsl
movsb
jnp
fbld
add
insb
pop
cmc
inc
dec
cmpsb
push
insl
push
inc
cld
sahf
imul
and
inc
or
sarl
incl
mov
pushf
mov
lahf
fadds
add
xor
dec
sbb
orb
in
mov
insb
lods
mov
insl
push
push
lods
loop
xchg
xor
xchg
fldl2t
add
cwtl
shl
jmp
fsubrs
das
inc
pusha
hlt
test
push
ret
pop
arpl
insl
shll
jno
nop
xor
mov
mov
xchg
in
rorl
push
daa
mov
xor
mov
cmpsl
add
out
out
pop
sub
inc
inc
pop
sub
cmpsl
cmp
iret
shll
jg
xchg
xchg
lret
pop
sbb
movsb
inc
mov
sub
jne
mov
mov
and
add
inc
jmp
pusha
mov
sub
testb
pop
inc
adc
sbb
or
loopne
xchg
sbb
or
jbe
jno
mov
push
cmp
int
pop
xor
push
js
mov
cmp
adc
mov
dec
dec
outsl
outsb
xchg
jbe
and
inc
lahf
dec
xor
xchg
dec
add
cmpsl
add
jecxz
cmpsb
fs
test
lcall
and
mov
jmp
xchg
in
jbe
gs
in
divb
xchg
xchg
xor
inc
cli
mov
dec
ret
mov
out
in
dec
mov
inc
imul
or
sti
jb
neg
rorl
mov
pop
adc
repz
xlat
incl
mov
jb
add
sub
mov
int
xor
xlat
mov
cld
mov
loop
cmpl
lea
jl
adc
dec
jb
jae
orl
jge
xchg
mov
or
mov
int
mov
call
adc
jb
or
out
pop
out
int
sub
inc
jecxz
loope
jns
lock
and
out
mov
ficoml
mov
adc
aad
and
mov
out
sti
ret
xor
int3
mov
pop
cltd
rorl
add
mov
lcall
mov
inc
sti
call
ja
lret
sub
daa
daa
pushf
jmp
sbb
fldl
and
out
sub
add
data16
xlat
pop
sub
add
and
pop
ret
mov
mov
inc
fadd
in
lods
push
cwtl
mov
inc
and
push
or
mov
into
mov
sub
cwtl
test
mov
xchg
xor
int3
out
pop
test
lds
jnp
sti
mov
sahf
nop
gs
sub
adc
rorl
jae
stos
loopne
in
in
aam
out
mov
xor
sub
jg
jp
leave
sub
test
add
pop
dec
test
sub
std
ja
fyl2x
jno
mov
or
push
pop
cmc
add
mov
jnp,pt
jl
sbb
and
sub
lds
mov
loopne
cmp
test
inc
stc
dec
or
xchg
and
pop
popa
stc
push
push
in
sub
xor
and
fdivrl
pop
ljmp
mov
icebp
inc
dec
je
sbb
or
hlt
addb
xor
xchg
mov
addr16
std
pop
gs
dec
test
out
lret
call
lds
cli
xchg
pop
hlt
mov
int
test
inc
inc
dec
and
sarl
inc
mov
push
das
repz
test
pop
stos
xor
dec
push
out
shll
fcoml
mov
outsl
inc
sub
notb
jnp
pusha
ss
sbb
out
inc
nop
das
enter
mov
cs
pop
push
out
push
daa
push
adc
outsl
xchg
je
xchg
mov
mov
push
xchg
cltd
sbb
rcr
mov
cli
loop
jp
cmp
pop
or
lods
add
imul
imul
inc
std
fwait
cmp
lret
pop
fisttpl
jmp
scas
xor
mov
jns
sti
arpl
fs
imul
push
push
xchg
lods
scas
mov
sub
jo
pop
jle
pop
mov
jmp
outsb
sbb
jbe
pop
fcoml
dec
jp
std
gs
jg
xchg
int3
sbb
ljmp
stos
arpl
push
mov
aas
loope
sub
jge
inc
bound
mov
pop
ror
decb
or
mov
xchg
inc
add
enter
outsl
xor
cmp
sub
mov
outsl
xor
scas
js
rolb
bound
xorb
or
dec
jmp
pop
xor
jno
xor
out
xchg
or
lcall
adc
xlat
insb
dec
mov
movsb
call
ret
xchg
and
addr16
popa
sahf
sti
aaa
imul
insl
fnstsw
mov
js
mov
jo
test
int
or
aad
mov
xchg
das
push
fwait
dec
daa
pop
jecxz
jl
popa
or
daa
movsl
mov
and
or
sub
adc
mov
xchg
cwtl
out
sbb
jecxz
mov
mov
cmp
loopne
hlt
lcall
mov
jo
adcl
xor
popa
sahf
jmp
jb
inc
ja
xchg
adc
or
push
fisubs
mov
sbb
pop
in
mov
shll
jae
cmc
imul
ja
add
pushf
aam
inc
fld
mov
aad
sub
int3
inc
aad
cwtl
jecxz
dec
std
xchg
ds
dec
stc
popf
jl
stc
add
call
or
dec
loopne
es
push
pushf
push
fldenv
adc
fmul
mov
js
fidivrl
nop
mov
cmpsb
mov
fisubrl
movsb
pop
jl
stc
add
sbb
movsl
add
push
push
test
mov
sbb
lods
dec
daa
rolb
mov
imul
inc
fbstp
call
pminsw
sbb
pop
daa
aad
mov
popf
test
add
ret
fcmovne
mov
push
sbb
push
lret
xor
test
mov
test
repz
mov
xchg
mov
stc
outsl
xor
jge
fidivl
pop
lods
xchg
test
std
add
js
sbb
jecxz
sub
pop
int3
insl
cmp
cmp
jno
dec
sahf
popa
mov
xchg
je
cmpsb
imul
fdivrl
call
push
push
cmp
mov
add
das
or
fsubs
jmp
dec
xor
cs
push
jp
cmc
dec
xchg
bnd
pop
cmc
jnp
cwtl
pop
icebp
xchg
jnp
sub
insl
les
mov
lcall
jecxz
dec
inc
fs
dec
lods
and
pop
into
mov
push
cmp
aad
lds
push
pop
lahf
movsb
js
out
outsl
lahf
stc
pop
loope
rorl
call
xor
fs
xor
fwait
pop
sub
bound
loop
cwtl
xchg
push
sub
push
inc
pop
inc
xorb
xlat
rcll
inc
test
or
cmp
nop
push
xchg
ds
mov
push
pop
in
aas
pop
dec
jb
or
pop
mov
aaa
mov
outsl
dec
add
dec
jp
out
and
imul
int
fsubrl
or
inc
mov
pop
das
xor
or
push
pop
sbb
addr16
mov
pop
push
jg
xor
pop
mov
sarl
repnz
jmp
push
adc
or
jne
pop
cli
sub
sbb
adcb
imul
and
add
ret
lret
mov
pop
dec
fldt
jae
xchg
pushf
aaa
adc
lret
je
mov
pop
imul
fs
shlb
sub
sub
sub
xor
fsubrs
leave
in
xor
add
iret
lea
xchg
xlat
mov
mov
lods
in
sti
aad
inc
jb
sub
xchg
sub
in
sahf
mov
enter
add
mov
mov
sbb
enter
cld
jb
jle
lret
jne
repz
ret
shl
rorb
adc
adc
xor
jo
ljmp
and
xlat
loop
and
jmp
aaa
lcall
cs
mov
sub
xor
sarb
push
xor
stos
sbb
rcrl
popf
jl
sbb
lret
lods
aad
fadds
mov
add
lret
fadds
fwait
cmp
clc
add
adc
scas
es
les
sbb
push
test
fdivs
ret
or
in
mov
daa
outsb
roll
popf
rcrl
int3
fdivrl
sahf
xchg
inc
insl
aad
xchg
cs
in
and
and
dec
jle
pop
nop
mov
sahf
rorb
cltd
jae
stos
fldln2
cmp
mov
scas
or
xchg
jns
je
adc
icebp
push
movsb
aam
jecxz
xor
or
outsl
cmp
mov
cmp
push
mov
lret
dec
xchg
or
fildll
mov
ret
jb
push
push
jb
aaa
inc
mov
int3
sub
mov
cmpsl
cmp
test
cmp
pop
imul
lcall
loope
es
ljmp
adcb
std
aad
push
into
push
pcmpeqd
and
cld
inc
and
cmp
cmp
push
hlt
jle
inc
repz
jle,pn
cmp
jecxz
adc
xor
stos
mov
or
mov
jp
mov
cltd
ret
mov
aas
pusha
notl
fmul
lods
std
and
push
xor
add
in
cmp
and
out
inc
xor
mov
lcall
xchg
sbb
inc
xor
add
ror
jp
in
jno
push
jp
shrl
fsub
cmpsb
lret
in
dec
stos
pop
es
pop
outsl
xchg
adc
mov
nop
rol
cmpsl
int
jns
int
fld
mov
sub
orb
mov
push
pop
rclb
fs
push
out
sbb
movsb
mov
cmpsl
fwait
movsl
aad
sbb
jns
mov
outsb
mov
add
or
xchg
jbe
loop
aad
out
lods
pop
adc
or
loope
jmp
xchg
lock
loope
and
popf
mov
int
add
pop
out
mov
jb
test
movsb
lret
mov
mov
sbb
fcompl
fs
nop
mov
push
rorl
mov
and
cs
sbb
ljmp
mov
fwait
push
jl
push
pop
adc
bound
jb
stos
cs
sbb
or
push
and
sub
mov
or
adc
mov
sbb
aad
aas
sub
mulb
stos
test
out
add
out
sub
lock
jo
xor
jge
mov
jp
push
cli
test
std
popa
adc
sub
xchg
xchg
cmp
imul
and
int
mov
sub
mov
inc
add
pop
in
std
sbb
leave
aam
add
prefetcht0
dec
in
inc
jg
push
xchg
nop
mov
adc
dec
cmpsb
aad
pop
movsl
test
xchg
enter
pop
adc
shr
pop
jne
cs
jnp
mov
sbb
fdivrs
int3
push
hlt
clc
mov
jnp
fldenv
xchg
push
cltd
or
lcall
mov
cmp
or
jmp
or
dec
mov
int
pop
push
mov
pop
inc
mov
xchg
jp
inc
and
inc
push
push
lea
sub
jg
cmp
movsl
pop
std
pop
push
push
inc
jle
push
outsl
repz
push
dec
fs
pop
mov
push
addr16
out
xor
cwtl
ret
ljmp
loope
fwait
adc
arpl
sbb
jo
mov
fldenv
int3
cmpsl
add
push
std
sbb
outsl
nop
mov
mov
fs
add
add
mov
out
lds
jmp
in
adc
fmul
leave
lock
insl
jb
mov
in
adcl
jle
lock
adc
sbb
push
incl
test
icebp
and
inc
je
lahf
test
nop
sub
jae
in
out
push
adc
xchg
pop
mov
mov
jge
inc
out
std
mov
les
or
sub
stos
cmp
in
add
movsb
and
mov
xlat
mov
cmp
shll
xor
xchg
mov
lahf
jns
sub
and
jp
inc
push
dec
xor
xor
dec
lcall
mov
xchg
enter
sub
xor
scas
xchg
jns
leave
ja
xchg
mov
xor
pop
dec
mov
shrb
dec
sahf
xor
mov
jae
lret
sahf
loopne
dec
in
stos
in
mov
jnp
inc
push
sahf
repz
xchg
mov
mov
pop
xor
jnp
js
dec
xchg
outsl
int
push
hlt
test
and
test
adc
cmp
add
jp
pop
push
push
popf
pop
fdivs
lods
and
jg
add
or
scas
xchg
jbe
adc
inc
inc
fidivrs
inc
sub
jp
loop
sub
mov
jge
loopne
andb
jns
adc
fs
out
cltd
enter
mov
cmp
add
sub
adc
xchg
inc
ja
xchg
ror
sub
clc
and
sbb
cmp
lret
int3
jns
cmpsb
movsl
std
cmp
movsb
into
das
in
cmpsb
shll
in
inc
sbbl
and
sub
sub
push
mov
mov
lds
lods
mov
or
pop
jno
sub
lcall
out
add
pop
add
ret
je
les
mov
ljmp
mov
inc
jno
cmp
in
imul
xchg
mov
dec
inc
xchg
lods
out
lods
pop
lret
shlb
adc
adc
jne
xchg
xchg
cmp
lahf
aam
dec
jecxz
mov
ret
out
push
std
jno
in
test
aad
and
mov
stc
sbb
imul
std
dec
mov
test
in
scas
fstpl
lea
pop
iret
test
aam
imul
xchg
mov
daa
icebp
push
xchg
mov
push
cmpsb
gs
mov
gs
test
cmp
lcall
cmc
jb
pop
cmpsb
jo
lods
lea
ljmp
lods
in
and
dec
xor
mov
inc
fbld
xor
cmp
inc
pop
inc
xor
and
inc
inc
jo
dec
test
sub
test
pop
and
repnz
fwait
sub
mov
jp
jnp
into
cmp
add
xchg
push
data16
gs
imul
fcmovbe
out
or
pop
into
jns
gs
xchg
ja
sbb
pushf
add
mov
jne
push
jnp
loop
inc
mov
cmp
js
push
icebp
add
outsb
gs
inc
outsb
test
inc
xchg
xchg
cmp
pop
pop
in
dec
jle
mov
out
dec
loopne
xchg
or
xchg
or
fdiv
dec
aam
inc
shll
lahf
stc
sbb
loop
xor
addr16
adc
popf
cltd
jp,pt
push
mov
mov
xchg
mov
and
test
xor
dec
lods
mov
mov
and
popf
mov
dec
mov
mov
and
insb
loopne
ret
add
out
call
mov
push
movsb
shl
shlb
fnsave
orb
sub
jle
xor
cli
xchg
repz
cld
in
arpl
cmpl
js
dec
add
sbb
cmp
lock
inc
icebp
ret
inc
or
mov
enter
in
cmp
cld
ljmp
test
or
sub
test
mov
dec
lods
out
jae
lods
insl
test
sub
push
mov
cltd
inc
test
sub
fcmovnbe
and
ss
and
cs
out
lea
xor
sub
lcall
fistl
int
xchg
out
push
out
je
mov
cltd
nop
adc
vmwrite
int
jg
popf
mov
xchg
pop
add
cld
negl
xor
inc
adc
dec
in
push
adc
adc
mov
outsb
and
or
lods
mov
out
rcl
fdivr
jo
subl
sahf
jle
ret
mov
sub
pop
dec
std
fs
sub
int
xchg
adc
or
add
ljmp
test
fcompl
cmc
sbb
call
out
add
mov
push
xlat
inc
xchg
jmp
cmp
adc
enter
sub
cmp
shl
mov
xchg
fisubrl
mov
out
fisubl
jo
stos
addr16
repz
movsb
hlt
cli
pop
ss
sub
fldt
adcb
icebp
push
daa
fidivs
ljmp
sub
test
fstpt
mov
test
pushf
adc
aad
rclb
mov
std
addr16
pop
aas
jb
cmp
call
push
mov
mov
addb
data16
push
int
pop
mov
mov
rcll
iret
and
dec
or
addr16
stc
mov
push
cltd
dec
mov
test
loopne
out
cmc
cmpsb
adc
mov
loop
sub
adc
sbb
insl
scas
xchg
inc
push
push
add
and
es
popa
bound
jno
movsb
insb
sbb
sahf
sbb
and
add
cmp
dec
mov
dec
cmpb
filds
outsl
dec
xlat
movsl
movsb
out
test
ljmp
cld
nop
inc
inc
das
clc
ficompl
cmp
in
int3
hlt
xor
or
ja
movsl
jle
sub
adcb
xor
mov
rcrl
clc
or
sub
scas
push
mov
mov
add
mov
ret
imul
or
mov
out
mov
pop
addb
das
pop
adc
rcr
sub
cmp
cmp
lret
aam
xchg
jno
imul
lock
stc
adc
push
hlt
push
jae
lock
add
pop
mov
lret
cmp
pop
fwait
mov
fwait
test
dec
insl
les
mov
dec
shrb
or
pop
subb
aaa
aaa
test
inc
mov
jmp
push
loop
xor
mov
dec
repnz
fwait
xlat
shll
sub
xlat
fiadds
in
enter
hlt
push
testl
jno
fmuls
lds
pop
cmp
adc
ret
mov
aad
enter
int
jl
ret
inc
adc
stc
fwait
mov
mov
jmp
push
scas
rclb
sbb
inc
lods
cmpsl
lods
jmp
and
test
cwtl
xor
dec
cmc
call
js
fwait
ss
adcl
xor
dec
sbb
jmp
aas
lea
lea
scas
lods
test
push
out
cmp
es
pusha
xor
pop
push
int
int3
outsb
ret
dec
les
idiv
mov
ds
dec
xchg
jl
and
cmc
jmp
mov
movsl
lahf
mov
leave
jne
and
mov
loop
fcmovnu
shll
adc
xchg
jle
jmp
sub
cli
cmp
add
inc
bound
add
xchg
dec
inc
fwait
mov
stos
aam
and
add
mov
ds
scas
lcall
into
sbb
or
cmp
jmp
js
dec
mov
aam
cmp
lret
out
mov
mov
stos
loop
adc
loop
icebp
int3
dec
push
loop
imul
pusha
and
push
into
push
fnsave
fists
add
pop
stos
cld
loope
push
data16
push
jg
mov
fnstenv
cmp
imul
mov
add
stc
sahf
mov
push
inc
mov
outsl
std
es
cmp
pushf
jo
aaa
icebp
rorl
bound
sub
xchg
mov
in
jmp
jb
and
bnd
notl
pushf
jae
sar
xor
in
enter
or
lds
and
mov
dec
jnp
pop
daa
xchg
jbe
add
movsb
inc
and
xchg
popa
pusha
in
cli
cmp
sbb
mov
enter
jbe
mov
xchg
mov
cmpsl
jnp
xor
shrb
stos
inc
roll
pop
sti
jo
fucomip
xlat
clc
mov
mov
sub
stos
adc
jl
dec
xlat
sbb
les
lahf
jnp
stos
sbb
adc
jp
sub
cmpsl
mov
divps
push
pop
jl
ss
cwtl
gs
into
jnp
bound
mov
or
inc
push
jae
mov
ret
cld
negb
jb
frstor
pop
inc
and
in
notl
aad
xchg
mov
xchg
data16
or
in
shrl
inc
xchg
incb
shll
in
mov
in
pop
sbb
icebp
pop
loop
sbb
cmp
sub
sbb
sub
lods
cld
mov
cmp
ljmp
mov
lods
dec
fstpt
mov
pop
rclb
loope
mulb
lods
ja
dec
mov
inc
mov
insb
xor
jl
aad
adc
loope
test
bnd
cmp
push
aad
nop
enter
rorb
push
mov
adc
insb
rcll
cli
pushf
lret
adc
insl
push
rcll
inc
testl
cmpb
or
insl
insl
mov
ja
pop
sbb
xchg
leave
push
xor
in
cmpsl
push
scas
pop
xlat
orl
rolb
cmp
or
aad
lock
mov
add
and
sbb
mov
mov
je
fdivr
bound
fdivrs
or
lea
cs
stc
add
pop
cmp
ficompl
mov
push
cli
out
and
sub
into
subl
jecxz
mov
shl
sub
pop
test
cmp
mov
xor
xor
cwtl
xchg
inc
lods
add
pop
add
push
or
out
cwtl
jo
fs
or
stos
push
leave
inc
sub
jle
mov
push
aas
sub
cltd
mov
ret
out
test
repnz
stc
xor
push
xor
test
sub
xchg
test
int3
xchg
push
std
ss
or
or
mov
lea
hlt
sub
or
adc
mov
lcall
idivb
jmp
lock
adc
push
repz
dec
gs
sbb
nop
sub
pop
push
and
add
inc
sub
push
inc
es
push
out
cli
push
adc
dec
mov
fcomps
adcb
sub
xchg
aad
mov
aas
into
pop
loopne
dec
jo
out
mov
push
jns
jmp
sub
les
imul
adc
lret
mov
out
xchg
jnp
dec
stos
pop
into
ljmp
sub
lock
or
adc
jne
cmpsl
or
popf
inc
hlt
dec
xchg
add
lea
xor
cld
sbb
lods
pop
pop
stc
ret
push
shll
mov
jns
sbb
jg
or
mov
popa
bound
dec
cwtl
sub
lods
mulb
push
std
mov
pop
ss
out
adc
clc
out
and
lret
lahf
lea
xor
mov
ljmp
pop
pop
add
pop
inc
sbb
cmp
mov
iret
lock
push
test
insb
inc
jg
pop
jne
and
sbb
aad
nop
fincstp
cwtl
test
pusha
lods
inc
adc
cs
mov
sti
into
aam
lret
test
dec
in
cmp
jp
mov
push
aam
jae
pop
cli
fwait
outsb
cld
jle
cwtl
cmp
cmp
loopne
xchg
rorl
mov
pop
jb
hlt
push
repnz
outsb
add
xlat
adc
aam
dec
mov
js
push
jmp
adc
sub
stos
cmp
dec
loop
popf
notl
in
popf
sbb
stos
stc
pop
out
dec
scas
sar
ss
aam
mov
enter
in
jge
mov
lea
xchg
enter
daa
cmpsl
mov
mov
test
add
or
daa
mov
push
push
dec
mov
das
inc
jo
or
xchg
scas
outsl
or
lds
xor
xchg
pop
leave
mov
mov
repnz
ds
mov
das
add
test
xor
lahf
shll
subb
clc
lahf
icebp
adc
mov
lock
loope
adc
adc
pop
xchg
movsb
repz
dec
aam
pop
test
movsb
cmpb
mov
jo
cmpl
in
push
lret
jp
pop
test
jb
js
faddl
das
jb
lret
pop
and
dec
mov
fnstsw
leave
test
loop
int
cmp
shrb
sub
xor
push
and
sub
testb
xchg
sbb
push
add
lock
jmp
arpl
imul
pop
add
xchg
fldl
mov
inc
pop
pop
jmp
aad
and
mov
scas
aas
in
insb
enter
cmpsb
xlat
imul
xchg
fidivl
xchg
clc
inc
cmp
pop
xor
xchg
xlat
and
jle
nop
hlt
aaa
or
arpl
xchg
jl
dec
inc
aas
xchg
scas
bound
mov
daa
dec
pop
add
das
push
and
cs
jg
pop
loop
cs
les
les
dec
mov
mov
dec
dec
mov
into
adc
or
jg
lods
dec
hlt
ljmp
and
aaa
add
arpl
das
and
adc
icebp
fsubrl
jnp
pop
jmp
lods
adc
cmp
and
xchg
jnp
int
jp
mov
pop
mov
cmp
cwtl
ss
adc
sub
jnp
or
dec
cld
in
std
sbb
xchg
push
sbbb
pop
jecxz
cmpsb
rorl
xchg
sub
cwtl
push
cmp
xchg
inc
mov
shrl
mov
das
jo
icebp
stos
or
or
stos
pop
leave
lds
test
cmpsl
aad
adc
iret
inc
adc
lcall
imul
cltd
push
fwait
fs
mov
inc
outsb
imul
xlat
rcrl
int3
aam
scas
dec
xor
sbb
jne
add
stc
ds
mov
push
jne
sub
push
mov
or
repnz
ljmp
popa
pop
pop
adc
cmp
out
and
sbb
xchg
adc
cs
cmp
pop
xchg
in
cltd
out
or
hlt
inc
test
add
mov
lock
dec
aaa
pop
aad
stos
sbb
push
rclb
stos
jns
sub
test
jp
pop
or
push
sub
daa
mov
xchg
sbb
int3
sbb
and
call
push
push
cld
ds
inc
pop
insb
mov
sub
push
flds
mov
mov
cmp
es
mov
mov
jle
and
lods
mov
mov
push
sbb
lds
mov
push
dec
cmp
mov
pop
cs
ret
sbb
cmp
mov
mov
test
cli
lea
or
shll
stos
mov
pop
cmc
or
aam
loop
pop
or
sub
push
push
loope
sbb
mov
dec
outsl
or
adc
out
sbb
mov
pop
xchg
pop
mov
pushf
pushf
add
jo
jne
mov
loop
sbb
ret
out
dec
add
cmc
rorb
jne
push
push
fwait
ds
mov
or
lods
testl
dec
shll
lahf
icebp
enter
daa
fsub
mov
jnp
mov
push
aaa
call
mov
stc
repnz
fwait
sbb
xchg
pop
inc
ja
jge
ret
ror
xchg
or
push
adc
mov
inc
mov
loopne
cmp
cmp
popa
dec
or
add
xor
daa
push
or
add
cmpsl
rcl
push
stc
inc
xchg
sbb
or
jnp
mov
rol
mov
popf
aam
fidivrl
add
aas
inc
mov
in
xlat
pop
adc
ds
and
rolb
pop
sahf
add
sub
sbb
sbb
mov
es
mov
aad
sub
lods
push
mov
jb
xchg
dec
xor
sub
repnz
gs
fisttpl
mov
jae
popa
xor
xor
lret
pop
cmp
adc
mov
out
xlat
xchg
movsb
push
mov
lds
in
mov
add
push
int
inc
sub
jg
pop
xor
pop
push
or
sbb
mov
in
rolb
nop
add
cmp
insl
std
imul
mov
cli
push
mov
sbb
adcb
rolb
push
mov
push
mov
cmp
add
popa
lock
dec
ds
js
xchg
cmp
test
sbb
sbb
std
or
fcoml
dec
xor
subl
sbb
loop
mov
add
dec
xchg
es
jl
jle
dec
adc
and
pop
xor
sbb
aad
jl
cmp
cmp
scas
dec
aas
mov
leave
negb
movsl
insl
dec
xchg
adc
push
sub
lret
nop
inc
jbe
dec
mov
popf
cmp
mov
inc
subb
ret
outsb
cmpsb
test
div
xor
xchg
push
and
push
or
roll
fisubrl
mov
cmpsl
ss
mov
lahf
out
mov
repz
scas
push
jb
mov
xor
das
xchg
pop
and
push
jmp
dec
stc
divb
hlt
adc
push
cmpsl
jmp
es
push
loopne
cmc
xlat
jmp
and
lods
mov
es
mov
movsl
pusha
test
pop
push
mov
mov
jmp
or
ret
andb
pop
jle
cmp
inc
out
pop
add
mov
pushf
in
push
pop
popa
xchg
out
jbe
pop
push
push
into
sbb
bound
mov
xchg
and
push
ljmp
test
iret
into
inc
repnz
mov
cmpsb
lret
fistpll
cmp
cld
xchg
pushf
pop
xchg
mov
mov
push
dec
mov
mov
mov
sbb
jne
mov
jmp
or
pop
ljmp
aas
xor
cmpsl
dec
sbb
addl
sbb
inc
stc
or
outsl
pop
aas
cmp
adc
pop
testb
rol
fstps
inc
in
cmp
roll
dec
mov
cmp
add
sub
push
xor
xchg
dec
xchg
inc
cmpsb
ss
jo
lods
cmp
outsb
or
addr16
inc
aam
addr16
in
and
test
xchg
or
push
lock
jns
orl
fdivrl
dec
mov
fistl
sub
fsubr
lret
jb
mov
movsb
mov
add
fstps
push
dec
fidivrs
outsb
jae
icebp
cmp
sbb
loope
sbb
filds
push
sbb
lcall
pop
push
push
pop
fwait
dec
push
pop
fstl
jae
in
inc
ror
adc
xor
call
sarl
scas
add
push
mov
jge
dec
xchg
pop
and
movsb
push
jbe
cli
fwait
ret
in
and
dec
push
movsl
dec
imul
sarb
cmp
mov
test
cmp
movsb
int3
and
jl
lods
add
inc
push
lea
ja
add
jmp
or
in
or
jmp
adc
fadds
pop
imul
adc
jecxz
lods
sub
and
clc
rol
lret
sub
movsl
sub
pop
push
cli
lock
mov
mov
jmp
int3
orl
cmp
test
sbbl
push
imul
ljmp
push
shll
mov
shl
cmp
jecxz
je
lret
adc
mov
gs
loopne
push
and
dec
movlps
nop
enter
jmp
mov
insl
out
dec
add
sbb
out
mov
push
jbe
mov
and
push
in
mov
lea
push
jmp
pop
push
push
testl
adc
testl
dec
cs
push
cmp
jo
add
cmp
shlb
and
adc
pop
mov
mov
ljmp
shrl
sub
xor
rcrb
pop
xchg
pop
cwtl
rclb
mov
sbb
cltd
inc
and
pop
scas
cltd
cmpsb
or
nop
fdivrl
out
dec
aaa
fildll
into
inc
jb
inc
cmp
in
xchg
xchg
fcom
adc
loope
jl
cwtl
data16
pop
lahf
and
roll
shl
outsb
mov
adc
daa
scas
fstpl
pop
push
jns
sbb
scas
test
pop
sahf
jg
cli
fcomps
call
xchg
jmp
mov
push
hlt
push
jns
sub
in
insl
out
push
in
sbb
out
fwait
aam
inc
cs
pop
xchg
cwtl
add
pop
xor
pop
mov
lcall
xchg
adc
fmuls
addb
mov
push
je
fwait
movsb
xchg
mov
xor
out
leave
inc
lods
mov
jnp
and
or
ljmp
add
dec
inc
aad
mov
lds
movsb
daa
hlt
push
jns
dec
inc
mov
mov
flds
pushf
jb
insl
pop
testb
ljmp
adc
lods
lahf
in
adc
mov
cmovge
aad
inc
pop
aam
push
ret
sti
lods
cmpsl
adc
jecxz
pop
inc
shrl
pop
out
clc
lods
xor
sbb
movb
mov
aad
aad
xchg
adc
sbb
mov
fbstp
mov
pop
sub
outsb
movsl
push
mov
xor
pop
je
ljmp
xchg
sub
jp
cmp
scas
mov
push
push
jne
popa
push
add
int3
sysexit
int
fldt
cmpsb
je
adc
pop
arpl
dec
xchg
out
mov
jo
out
dec
fists
jb
xchg
cld
pop
ret
fsubl
or
sub
fldl
push
mov
jns
gs
andl
mov
shll
cltd
mov
mov
std
mov
out
or
inc
mov
stos
js
scas
xchg
mov
push
sub
shrl
mov
adc
loop
clc
cmp
pop
adc
pop
cmp
fnstcw
leave
push
sbb
push
jg
add
cmp
enter
sub
inc
jl
sub
sahf
ds
in
arpl
aad
mov
sti
xlat
icebp
fwait
shlb
adc
pop
push
lahf
outsb
jl
jecxz
pop
dec
jne
pop
add
lods
jno
or
inc
cmpsb
dec
jns
jno
dec
adc
roll
ljmp
and
pop
icebp
cmpsb
xchg
ret
mov
loop
and
xor
xchg
xchg
jecxz
xchg
sbb
push
sub
mov
mov
cmp
shr
ret
pop
cmp
mov
imul
jns
pushf
in
dec
mov
mov
rcll
js
stc
je
xor
xchg
cld
add
sbb
sbb
ja
sub
cmpl
xchg
dec
int3
mov
xor
pushf
mov
mov
mov
fnsave
mov
pop
mov
imul
push
ret
mov
inc
sub
stos
test
es
xor
push
mov
outsl
mov
push
cmp
lods
or
lea
add
dec
popf
pushf
xor
push
sbb
cmp
inc
arpl
cmc
loopne
mov
xchg
xlat
adc
sbb
ds
aas
adc
je
clc
repz
iret
cmp
or
mov
xchg
sahf
rcrl
fisttpl
add
mov
xchg
add
mov
sarb
lds
cs
ret
es
popa
xchg
mov
inc
lea
xchg
lcall
pop
jp
push
inc
rcl
out
mov
xor
or
test
and
sub
test
repnz
into
mov
imul
inc
mov
or
icebp
add
repz
jmp
cmp
test
aam
mov
push
scas
mov
aam
sub
mov
inc
cwtl
inc
pop
movsl
pop
xchg
out
mov
cmp
aas
xchg
test
xchg
fwait
and
jo
sbb
lret
cmpl
jl
inc
mov
in
insb
xor
into
sbb
inc
scas
lock
cmp
rcll
sbb
xor
pop
and
lock
mov
sbb
lods
xchg
add
nop
jmp
cmp
jle
icebp
lret
dec
jnp
jg
add
ret
pop
imul
ret
rolb
xchg
jg
std
mov
mov
jb
shlb
jle
push
stos
add
popa
rcll
dec
insb
fwait
xchg
xchg
pop
dec
cmp
inc
mov
add
jp
je
sarb
test
mov
xchg
sbb
pop
sub
mov
fwait
mov
pop
xor
jb
xchg
fisubs
cmp
lea
pop
jg
fidivrs
dec
jo
idiv
lret
testl
ret
jmp
clc
pop
fmuls
cltd
dec
jmp
xor
shlb
or
xchg
in
fsubl
and
push
roll
mov
leave
mov
jns
xchg
dec
dec
adc
sbb
xchg
mov
push
mov
ficompl
cmp
push
aaa
lods
mov
fldl
ret
and
adc
arpl
pop
fs
mov
repnz
xchg
es
cwtl
scas
test
cmp
out
adc
pop
sbb
push
fs
cwtl
xor
mov
int3
jmp
fwait
iret
in
fnstcw
xchg
shll
les
add
inc
mov
jb
mov
fdivs
and
xchg
shll
sub
int
mov
mov
pusha
add
mov
dec
fldt
iret
ss
fnstsw
addr16
or
cld
scas
cld
or
scas
mov
nop
jge
out
insl
mov
leave
mov
push
lds
adc
aad
pop
lret
jnp
lods
inc
lea
sub
rcrl
lcall
cmp
xchg
mov
push
push
arpl
ss
push
sbb
and
test
arpl
das
nop
cmpsl
dec
dec
aaa
push
cmp
xchg
imul
lods
mov
out
pusha
or
jae
xchg
rcl
icebp
push
sti
xor
or
pop
push
xor
imul
mov
ret
lods
adc
loope
in
sbb
dec
mov
bound
cltd
jge
mov
shrb
inc
scas
lock
dec
cmpsb
xchg
nop
repz
stc
mov
mov
pop
mov
xor
sbb
sti
call
lcall
jmp
cltd
insb
inc
ss
in
outsl
aad
movsl
dec
push
add
stos
ret
xorb
or
pop
mov
and
aas
xchg
pop
xchg
xor
mov
test
fstpt
pop
adc
sub
in
jge
test
mov
jne
jle
sbb
hlt
bnd
lret
scas
inc
jl
and
inc
xchg
sbb
push
dec
call
out
jle
in
sub
shrl
pushf
testb
mov
xchg
fisubrs
jno
jp
stc
sub
adc
test
sub
pop
xor
insb
test
sbb
pop
repz
jbe
divl
mov
shrl
or
jno
aas
xor
adc
inc
xor
inc
adc
cmp
or
mov
jmp
sbb
cld
mov
mov
push
jns
gs
fnsave
dec
mov
xor
cmp
or
jbe
aas
inc
jbe
repnz
push
test
pop
sub
add
popf
mov
jne
out
pop
loopne
in
js
sbb
xorb
lods
shrl
dec
pop
into
test
js
cmp
in
push
and
xchg
add
push
div
rol
shll
sub
out
loope
add
enter
mov
jb
insb
sti
stc
sbb
dec
sbb
xchg
cmpsl
mov
mov
cmp
test
scas
popf
mov
out
jp
in
shlb
mov
out
add
cmp
adc
sbb
sbb
fs
sbb
dec
push
add
xchg
pop
sahf
dec
mov
insb
sbb
sarb
and
sub
pop
stos
cs
mov
jo
xchg
mov
testl
nop
xchg
mov
lock
sbb
mov
xchg
jl
adc
ja
push
dec
addr16
les
jecxz
adc
mov
and
aaa
or
ja
jp
das
push
dec
sub
rcrl
push
lcall
fxch
cmp
nop
cmp
or
negb
rcrl
loope
sub
jle
popa
mov
dec
xchg
or
mov
ljmp
adcl
das
aam
push
xchg
in
xchg
testl
js
into
push
push
add
enter
inc
pop
stos
mov
lcall
popf
call
test
jne
inc
out
inc
inc
lock
pop
xchg
sbb
enter
add
lcall
sbb
jle
mov
hlt
movsb
mov
ret
ret
mov
repnz
pop
shrb
xor
inc
scas
test
mov
arpl
jl
cmp
pop
xlat
pusha
outsb
subl
mov
lods
test
shrb
xor
cmp
add
adc
xorl
je
fcomi
shlb
push
cmp
lea
jecxz
lret
pusha
pop
add
mov
push
iret
and
mov
cltd
cmp
jp
dec
shlb
cmp
movsl
lahf
add
xor
inc
js
fldenv
push
xlat
and
mov
iret
fdivrl
push
adc
dec
adc
and
jmp
cmpsb
push
or
xchg
les
xchg
aaa
das
sbb
scas
adc
xlat
mov
push
gs
pop
leave
pop
mov
adc
jae
negl
add
sub
sbb
in
insl
mov
cmpsb
lahf
mov
jno
cmp
or
int
test
inc
popf
sub
test
push
push
and
int3
test
js
iret
fwait
shl
and
sbb
push
sub
and
mov
fs
imul
pop
mov
ficomps
add
xchg
pop
xchg
and
pop
sbb
pop
insl
ror
mov
mov
pop
inc
push
outsl
xor
aaa
add
out
iret
xlat
adc
jg
fucomip
dec
dec
push
leave
ljmp
cmpsb
fimuls
jnp
data16
jecxz
cmp
mov
xor
sar
lods
dec
test
xchg
mov
and
dec
mov
jns
ret
popf
movsb
mov
push
mov
sbb
xchg
bound
xor
test
pop
push
insb
mov
cmp
sbb
cmp
cmp
repz
fucomip
inc
arpl
jle
mov
fisubs
cmpsl
divb
pop
lds
data16
push
mov
repz
xor
cli
mov
add
arpl
or
jl
imul
into
rcr
inc
in
sbb
enter
les
insb
sahf
movsl
ja
mov
popa
popa
clc
aad
dec
mov
sti
insl
push
fsts
cmp
scas
push
jb
sub
jae
cmp
sbb
leave
or
ja
inc
mov
adcl
test
loopne
mov
xchg
mov
cmp
xor
cmp
outsl
jbe
mov
jno
sbb
pop
and
sub
jge
data16
std
jmp
je
push
repnz
fstl
in
scas
xchg
mov
test
jnp
push
mov
in
arpl
testb
in
sub
cld
push
ds
add
or
adc
adc
push
push
movsb
mov
loop
add
pop
push
xlat
xchg
mov
mov
and
out
nop
sub
push
lods
inc
bound
push
inc
ficoml
lahf
mov
lds
pop
out
mov
pop
add
sub
pop
ficoml
mov
or
cs
adc
push
lds
adc
pop
frstor
inc
sahf
adc
insl
jp
jbe
mov
pop
cmp
lds
jl
mov
inc
ret
fisubrl
punpcklwd
das
nop
in
std
fbld
cmp
and
loopne
loope
inc
repnz
mov
mov
testl
popf
or
adcl
mov
add
fisttps
repz
inc
and
jo
xor
test
aad
ja
pop
xor
dec
scas
or
in
jo
cld
gs
inc
scas
pop
mov
movsl
fbld
loop
mov
inc
je
inc
rorb
and
or
sub
sbb
and
sub
sub
ja
hlt
cmp
into
scas
xorb
dec
inc
sahf
push
test
testb
push
fcoms
jmp
js
xor
shr
xchg
js
iret
sbb
mov
and
aaa
dec
add
int
push
fsubrs
adcl
inc
inc
pop
jecxz
fstpl
mull
hlt
movsb
xchg
pop
js
rorb
pop
das
jb
sbb
lea
fwait
lods
pop
jecxz
arpl
push
mov
xchg
fwait
mov
mov
leave
and
jp
and
xchg
mov
fstps
add
sbb
cmpsl
pop
pop
push
orb
adc
das
data16
mov
inc
mov
xlat
add
cwtl
mov
mov
ds
testb
xchg
cmovb
mov
test
stc
mov
imul
adc
lret
pushf
or
mov
je
xchg
out
in
jecxz
xchg
inc
inc
sbbl
out
movsb
and
notl
jge
push
sbb
xchg
cmp
stc
sbb
popa
jle
pop
fnsave
hlt
push
stc
mov
cltd
push
outsb
shl
frstor
add
int
aam
and
and
mov
push
jl
jle
movl
jp
pop
inc
imul
into
mov
sbbl
xchg
ja
inc
out
lods
shrb
aas
test
mov
jb
stos
popa
pop
adc
dec
jnp
lret
lret
push
ret
add
push
lret
ret
sub
add
loop
lods
in
nop
push
pusha
cs
xchg
mov
mov
and
dec
dec
mov
jae
insl
cltd
mov
xchg
push
jge
sarl
lret
jge
push
mov
leave
imul
mov
dec
je
std
lock
dec
std
inc
mov
sub
fisubs
repnz
repz
cs
inc
or
addr16
inc
ss
and
jp
call
fstps
mov
sbb
push
stos
je
inc
xor
loope
xor
pop
or
dec
or
push
mov
fidivrs
movsl
in
mov
xchg
mov
adc
and
scas
negb
out
mov
fnstsw
lods
sub
pushf
ljmp
sti
cmpsb
or
popf
filds
pushf
push
push
fwait
push
jle
sbb
fcompl
jg
pop
sub
xchg
mov
xor
inc
sarb
aad
sbb
xchg
mov
fs
adc
loope
jno
ret
pop
repz
test
inc
cltd
jg
test
pop
insl
icebp
out
pop
mov
add
jb
movsb
cmp
lea
mov
popf
pusha
sbbb
cmc
mov
aas
nop
clc
hlt
bound
shl
jge
mov
scas
into
jmp
out
jle
pop
loope
dec
outsl
add
push
pop
leave
mov
movsl
dec
adc
jl
cmp
cli
ljmp
dec
xor
aam
sbb
test
add
mov
movsb
and
out
mov
in
fsubr
push
neg
jne
jmp
mov
add
jns
mov
pop
push
adc
mov
jbe
aaa
inc
in
fcomps
out
push
dec
leave
scas
inc
lods
addl
popa
add
add
jmp
xor
out
pop
jae
mov
jle
push
xchg
fmuls
call
push
mov
inc
push
insl
pop
xchg
pusha
jo
and
or
inc
orl
jmp
add
sub
mov
xlat
jb
es
jg
xchg
sub
cld
or
std
stos
fdivrs
pop
xchg
aam
add
hlt
adc
xchg
inc
adc
cmpsb
inc
xor
js
nop
fnstcw
mov
jno
test
lock
mov
ret
cmc
or
outsl
push
mov
je
jbe
outsb
add
dec
addl
iret
add
lret
lods
rol
mov
cmpsb
jb
divb
mov
jecxz
pushf
movsb
push
cltd
repz
add
adc
fildl
xor
lea
aam
mov
fstpl
xchg
adcb
cmpsb
in
mov
sub
std
mov
sbb
inc
jmp
ret
cld
mov
arpl
push
outsb
lods
dec
mov
sbb
cs
inc
jge
sbb
ret
sub
pop
sub
mov
and
inc
push
lds
dec
js
das
ja
mov
mov
sub
or
repz
arpl
outsb
cmp
jae
lea
xchg
jns
and
add
shrl
bound
or
pop
mov
cmp
std
ljmp
push
sbbl
and
jne
xlat
pusha
push
or
pop
sbb
push
cmp
stc
pushf
dec
dec
adc
leave
and
mull
imul
xor
icebp
jb
mov
sbb
or
pop
popf
mov
sub
adc
mov
jl
cltd
nop
movsb
pop
mov
rcrl
push
jb
pandn
xchg
test
inc
into
add
push
loope
outsl
cmpsb
arpl
dec
loope
jno
xor
xlat
stos
enter
cld
or
sarb
pop
mov
mov
sbb
arpl
jnp
sbb
mov
pop
rolb
or
subb
popf
pop
pop
repz
fistpll
sbb
xchg
stc
cmp
lret
sub
push
sbb
insl
movsb
cmpsl
fwait
sub
iret
mov
ja
mov
rcll
hlt
mov
aad
adc
mov
aam
jne
js
cmp
addr16
push
cld
aam
shrb
mov
inc
icebp
fnstsw
mov
dec
mov
push
xchg
in
jae
adc
scas
ds
cmp
sub
sub
jge
out
xlat
xchg
lods
jp
jne
adc
rcl
cmp
mov
fdivr
cmc
add
inc
sbb
push
rorb
rcl
push
xchg
imul
int
adc
jno
popf
fdivl
push
push
inc
lods
fldcw
sbb
clc
add
repz
sbb
dec
push
out
xor
cmc
popa
jns
aam
push
mov
inc
jge
xchg
add
aam
andl
mov
sarb
adc
adc
mov
lods
adcl
add
js
xor
shrb
imul
cmp
decb
mov
push
das
add
loop
test
sarl
out
and
push
xchg
push
mov
cld
into
lcall
out
xor
insb
sar
jl
fidivl
ret
dec
dec
call
gs
xchg
pusha
arpl
or
hlt
daa
fnstenv
fldcw
sub
in
cwtl
lock
mov
lret
mov
mov
pop
in
mov
ljmp
rol
test
movl
mov
or
pop
call
mov
adc
mov
cwtl
xchg
insb
jle
stos
addl
andb
fwait
cmp
stos
divl
sbb
pop
pop
ret
cmpsl
pusha
dec
cld
mov
insl
sbb
mov
fnstenv
xchg
addb
sbb
dec
mov
insl
test
push
pusha
xchg
aad
cwtl
call
or
and
mov
fists
movsb
pusha
cld
les
xor
dec
mov
addr16
jle
cmp
out
cltd
dec
dec
or
repnz
push
xor
jmp
inc
test
std
stc
inc
push
jns
push
lret
lret
out
ljmp
mov
push
shrb
pop
shrl
scas
in
or
data16
xor
add
pop
ret
xchg
xor
adc
adc
mov
enter
jecxz
add
cs
xchg
pop
jecxz
call
push
popa
mov
sub
add
inc
inc
xchg
cmpsl
in
add
int3
xor
fs
jns
movsb
jle
push
pop
imul
fnsave
cwtl
ret
insl
jae
mov
loopne
sahf
inc
mov
push
xlat
fwait
std
out
or
dec
or
ljmp
pushf
add
add
mov
xchg
int3
xchg
pop
subb
pop
sarl
cmpsb
cmovbe
dec
je
in
int3
push
sti
pop
and
xor
popf
pushf
push
dec
iret
stc
jns
aas
cmc
das
les
out
js
int
in
cs
xchg
lods
pop
ss
inc
fwait
mov
push
pop
imul
rcl
icebp
push
mov
mov
les
repz
pop
out
mov
lds
cs
clc
sti
mov
fistps
mov
movsb
test
ss
adc
sarl
pop
add
adc
or
push
fsubs
imul
jae
scas
ja
jle
xor
std
push
dec
inc
popa
and
jge
loop
and
repnz
aaa
stos
clc
mov
jns
loopne
and
pop
mov
add
sbb
ret
push
mov
mov
cwtl
jmp
push
pop
cwtl
cmc
repnz
insl
inc
fmull
ss
aad
and
xor
lea
sbb
out
adc
mov
xchg
xchg
push
mov
jp
int
xorl
xor
or
dec
sub
and
jl
arpl
pop
fisubrs
inc
jnp
push
sbb
inc
shll
fldenv
cmp
popl
push
test
pop
adc
xchg
pop
jge
sbb
das
shlb
les
xor
dec
or
adc
add
insb
adc
stc
inc
and
jg
pop
mov
add
push
fiaddl
and
xchg
incb
pop
mov
dec
inc
inc
sub
outsb
leave
xor
aaa
mov
pushf
sbb
xchg
fmuls
shlb
out
out
pop
pop
cmp
into
add
xchg
mov
mov
mov
jmp
sbb
jbe
fldcw
adc
xchg
pop
ret
xor
pop
insb
dec
out
sub
xor
cmpsb
xchg
add
fidivrs
jge
imul
ficomps
push
add
aad
jo
loopne
pop
sar
bound
scas
daa
fidivrl
movsl
push
addr16
pop
lock
mov
lock
mov
mov
inc
leave
lods
xchg
jno
cs
pop
imul
imul
in
push
mov
and
inc
inc
xor
sub
and
and
xchg
outsl
jg
cltd
pusha
sbb
scas
add
sub
ja
sub
cs
mov
imull
test
repnz
hlt
jbe
push
xlat
push
jge
or
and
shlb
mov
cmp
push
popf
dec
lahf
pop
rcrl
stos
js
aam
dec
pop
sub
sbbb
push
push
mov
dec
mov
mov
scas
test
mov
pop
iret
js
adc
orl
mov
frstpm(287
jg
cwtl
fisubs
and
cmc
mov
or
lea
cmpsb
das
rorb
dec
jecxz
xchg
xchg
lret
out
fstpl
loopne
xor
sbb
mov
xor
mov
push
pop
fnsave
popf
pop
daa
inc
xchg
jle
test
xor
repz
dec
mov
jne
inc
sub
adc
jle
sub
sahf
loop
adc
xchg
aad
xchg
mov
outsl
pop
mov
aas
mov
adc
push
enter
div
neg
inc
xor
lea
lods
and
push
dec
xchg
add
jge
cmp
pop
xor
jae
push
bound
out
enter
or
nop
mov
or
add
jmp
in
mov
jg
clc
hlt
ret
push
mov
xor
fxch
add
ss
ret
pop
xchg
adc
xchg
lds
dec
shrb
adc
shrb
sub
daa
in
push
xchg
shlb
fsts
inc
mov
xchg
xor
jle
hlt
cmpsl
and
fucomi
xchg
lea
fadd
shlb
mov
inc
pop
xlat
xor
inc
mov
xor
int
stc
mov
mov
fimull
loope
sbb
xor
add
je
jmp
or
xor
cmp
ss
xchg
jl
fwait
push
daa
or
leave
push
and
call
mov
in
movsl
mov
push
jl
js
fists
jnp
push
push
push
hlt
loope
cmp
adc
loop
sbb
inc
scas
and
sarl
subb
pop
mov
daa
dec
jo
jg
pop
push
in
push
push
sbb
das
loop
sbb
push
lods
int
out
mov
jbe
lds
movsb
mov
jg
js
or
mov
fcmove
outsl
add
test
dec
jl
sbb
in
das
insl
and
jne
xchg
and
adc
xorl
push
arpl
dec
pextrw
xchg
test
iret
sti
pop
jnp
movsl
adc
ret
adc
pop
inc
and
jmp
arpl
daa
sub
xor
neg
jnp
inc
aad
jnp
push
data16
enter
xchg
mov
out
into
pop
pop
mov
dec
insb
or
sub
adc
jmp
sub
xor
add
xchg
or
pop
out
jnp
aad
test
fldcw
inc
scas
rolb
movsb
adc
dec
outsl
insb
test
sbb
decb
inc
inc
inc
outsb
fadds
mov
and
mov
jmp
xchg
inc
in
add
sub
jbe
adc
jae
fisttps
pop
mov
mov
sbb
cmp
test
xchg
push
sbb
xorl
xchg
insb
xchg
sub
jns
jmp
mov
enter
mov
filds
xor
xchg
sub
dec
mov
mov
xchg
data16
nop
fcoml
stc
insl
jo
jg
les
popl
inc
and
int3
fsubs
in
dec
inc
fbstp
fsts
and
sar
jge
xchg
lods
jmp
cmc
out
xor
add
icebp
inc
or
inc
and
push
adc
dec
mov
lods
shll
aad
add
iret
fidivs
setns
pop
adcl
gs
stc
mov
jg
pushf
leave
outsb
cmpsb
movsl
pop
adc
roll
sar
mov
mov
test
mov
sti
mov
call
in
cmpb
mov
cmpl
xor
jecxz
xor
test
sti
cwtl
out
data16
mov
cmp
add
xor
push
cltd
pop
insl
xor
push
add
pop
mov
add
xchg
mov
sbb
cmp
mov
rcl
popa
out
call
daa
out
inc
adc
xchg
and
xchg
pop
lods
dec
stos
nop
mov
mov
mov
sub
outsb
cmp
xor
push
mov
or
xor
push
cmc
inc
shrb
lods
ja
push
inc
mov
add
xor
xlat
cmc
enter
dec
mov
mov
insb
mov
inc
ret
push
add
lock
aaa
test
repnz
adc
jb
cld
jnp
aad
cmp
aad
inc
fwait
cmp
push
push
test
pop
arpl
jle
push
lea
pop
jne
cmp
push
dec
pop
mov
push
vcmpeq_osss
shlb
test
ret
adc
in
ss
dec
pusha
iret
loop
jne
push
xor
addr16
lea
adc
scas
jmp
push
xchg
inc
std
sti
cmp
outsl
das
stos
shll
incl
adc
lods
cmovp
loope
int
xor
xor
movntq
insb
pusha
jno
rclb
aas
mov
imul
and
mov
jmp
jo
in
inc
rolb
lods
or
xchg
dec
pop
inc
cwtl
sbb
mov
pushf
xchg
dec
add
or
push
push
cmp
adc
out
inc
sub
lret
lahf
js
push
iret
es
jns
xchg
ret
jle
inc
mov
jle
movsl
pusha
mov
and
or
out
insb
add
inc
bound
adc
push
jp
mov
cmc
and
mov
dec
aas
lods
leave
sahf
add
mov
jmp
or
cwtl
push
das
repz
adc
andl
cmp
or
insb
out
aam
paddb
fwait
stos
lea
inc
add
and
ror
je
das
xchg
in
lods
test
xchg
mov
sti
scas
jge
std
dec
and
cli
fidivrs
mov
pop
sbb
xchg
inc
push
sahf
fimuls
pop
lret
aas
je
dec
mov
push
push
adc
mov
push
das
cmpb
scas
xor
xchg
adc
fcomps
or
gs
jo
and
jae
aam
andl
in
push
push
rolb
sub
int
cli
gs
xor
xor
mov
lahf
pop
test
sub
and
jae
dec
pop
shlb
loope
adc
xlat
data16
dec
ljmp
cltd
das
repz
cmp
addr16
bound
sbb
stc
idivb
out
push
mov
fs
imul
stos
xor
pop
push
test
cmp
mov
in
dec
out
sbb
inc
lret
dec
cs
jp
int3
dec
movsl
push
mov
adc
cmpsb
scas
jp
je
adc
push
or
jns
ds
arpl
mov
fwait
sub
cld
pop
pop
in
dec
pop
add
fwait
cmp
leave
stc
push
mov
mov
aad
fidivrl
mov
loop
jle
leave
icebp
jnp
or
test
mov
mov
movsl
adc
mov
jo
add
hlt
push
push
pop
clc
out
jmp
jp
outsb
bswap
int3
ds
lahf
mov
mov
cmc
push
sti
add
out
daa
lret
sub
arpl
mov
or
and
push
push
popf
push
stc
add
lret
int
insb
fwait
sbb
cmp
outsl
outsb
test
daa
std
pop
scas
or
xchg
mov
or
sbb
dec
push
dec
mov
xchg
out
fsubl
sub
shrl
or
mov
mov
xchg
rcll
xchg
imul
jge
sbb
mov
int
push
sahf
lds
clc
adc
es
mov
xlat
je
xchg
mov
pop
aaa
ret
dec
mov
jge
test
mov
lea
sarl
shll
pop
jb
add
push
sub
bnd
jl
mov
push
xorl
adc
das
dec
cld
mov
push
aaa
jns
mov
xchg
mov
insl
out
icebp
mov
cmpsb
std
pop
fwait
cli
sub
pop
sub
out
mov
push
add
add
dec
cmp
int3
sbb
push
adc
inc
aam
fadds
cli
ficomps
movsb
ds
inc
mov
or
inc
push
mov
mov
xchg
mov
incl
pop
mov
push
mov
cld
dec
mov
sub
fiadds
je
adc
arpl
xchg
enter
aas
cmpsl
jb
and
or
stc
and
add
push
fldt
lret
fisubs
cwtl
mov
push
jg
aad
sbb
xor
pop
jne
adcl
lahf
pop
fwait
cmp
dec
mov
cli
mov
mov
fildll
or
add
pop
shll
in
ja
lcall
xchg
fwait
mov
dec
mov
pop
sti
insb
daa
cmp
mov
ret
jo
aad
dec
add
sti
adc
cmp
xchg
inc
js
jecxz
jecxz
or
adc
pushf
shrb
std
jmp
ja
lahf
mov
or
mov
xchg
xor
add
dec
mov
fdivrs
push
lds
pop
mov
mov
push
mov
cmp
jecxz
pop
sub
cmp
add
mov
outsl
mov
hlt
jbe
or
cld
or
gs
inc
lahf
inc
popa
dec
push
lods
int3
imul
out
add
or
cmp
enter
mov
pusha
mov
in
repz
lds
pop
mov
adc
and
add
pop
inc
mov
jo
test
pop
inc
xor
inc
mov
jns
xor
mov
mov
fistps
xor
inc
into
mov
adc
nop
dec
outsb
std
jns
outsl
addr16
test
jmp
aas
xchg
fisttpll
jb,pn
jge
imul
push
rorb
popa
popa
mov
inc
ret
sub
cmp
divl
movsb
mov
insl
cmpl
into
sbb
xchg
mov
jp
or
scas
mov
jge
hlt
es
pop
fsub
dec
pop
aad
mov
jbe
adc
jecxz
pop
cltd
les
clc
cld
push
lahf
pop
outsl
mov
dec
jns
adcb
or
lds
arpl
mov
sbb
ljmp
dec
data16
sbb
push
loopne
scas
movsl
pushf
add
repnz
movsb
xchg
lods
cltd
dec
lret
movsb
mov
popa
inc
push
push
mov
insb
sar
test
insl
leave
mov
sahf
and
lret
dec
test
scas
mov
imul
xlat
ds
negb
mov
cmpsl
xchg
test
rolb
in
lock
inc
sbb
sbb
and
lods
dec
insl
inc
add
adc
adc
mov
stos
mov
add
pop
aas
mov
psubw
gs
mov
xor
int3
arpl
lret
cs
cmp
dec
not
xchg
sub
insl
jne
decl
push
xlat
scas
pop
movsb
faddl
mov
scas
mov
pop
cmp
xchg
mov
push
ja
xchg
es
adc
lcall
aaa
sub
xlat
fists
divl
mov
mov
inc
popa
sti
push
push
sbb
add
cmp
pop
iret
push
gs
cltd
adc
imul
lods
in
pop
xchg
add
inc
dec
cs
hlt
out
cmp
pop
xchg
shr
stos
pop
insb
and
je
cmp
out
adc
jecxz
call
call
adc
xchg
push
sbb
scas
pop
pop
pop
stos
fnsetpm(287
clc
jp
movsl
fwait
cmpsl
dec
xchg
cli
rcrl
jae
pusha
shl
mov
shr
jns
aaa
dec
cmpb
mov
out
push
jmp
lahf
cmp
push
test
adcl
inc
mov
ds
ret
mov
mov
leave
or
addr16
in
or
das
inc
fiaddl
lock
ffree
sub
dec
or
dec
mov
popa
and
mov
in
dec
or
mov
addr16
mov
arpl
fwait
and
pop
cmp
sbb
cmp
fmuls
aam
mov
and
lds
add
scas
in
stos
push
dec
jns
fidivrs
scas
add
push
sbb
int
in
sbb
pusha
add
or
or
dec
adc
insl
sub
or
loop
add
aad
daa
jle
loopne
sub
test
adc
or
stc
fistps
dec
or
adc
fld
fsts
dec
imul
fcmovnu
scas
or
dec
loop
ds
lea
stos
inc
popf
sarb
loope
jbe
mov
jg
mov
adc
shll
aam
xor
push
std
lods
rorl
icebp
mov
jbe
jae
lahf
es
mov
ja
mov
sub
mov
push
ja
mov
rorl
shrb
loopne
mov
push
mov
jo
xlat
out
test
mov
imul
push
adc
testl
outsb
call
xchg
xor
outsl
add
cltd
or
add
xchg
inc
push
pop
test
cld
pop
lds
cli
fcmovnb
stos
inc
fstpl
test
mov
ja
push
and
push
mov
inc
loopne
pop
xor
outsb
add
sbb
lret
pop
aas
int
sbb
imul
pop
hlt
out
lcall
cmp
mov
jbe
sub
in
lcall
fs
outsb
loopne
in
push
inc
mov
mov
roll
je
dec
inc
push
mov
xchg
inc
stos
cmpsb
mov
inc
pusha
push
out
es
push
fwait
pop
add
in
inc
xchg
cwtl
mov
gs
dec
pop
jl
insl
and
sub
lahf
repnz
jnp
adc
jne
sahf
loopne
cmp
arpl
xor
mov
into
shll
sbb
cmp
pushf
xchg
bound
scas
jns
rorb
pop
pop
add
pop
iret
cmc
push
cmp
sbbb
add
cs
std
sub
movsb
jle
repnz
je
addr16
jecxz
mov
mov
daa
popf
lea
xor
sub
dec
shlb
jnp
pop
mov
daa
pop
ficoml
repz
pop
stc
pop
pop
dec
inc
add
jecxz
cmp
lcall
adc
push
sbb
cli
out
xor
leave
and
jmp
mov
and
mov
pop
andl
adc
xchg
adc
in
ficompl
fimull
mov
mov
enter
and
imul
out
or
pop
push
lcall
les
shl
imul
repz
or
add
int3
xchg
jg
imul
std
ds
inc
sarl
mov
lret
jge
mov
test
test
mov
frstor
adc
test
lret
adc
add
roll
dec
inc
fisubrs
dec
mov
jmp
push
xchg
add
aad
mov
fcoml
jb
push
mov
dec
clc
jbe
and
shr
mov
decw
sub
or
push
das
lahf
ljmp
sbb
jle
jl
pop
lret
adc
stos
sahf
mov
xchg
sub
mov
lds
xchg
scas
xchg
xchg
add
mov
mov
push
push
ror
repz
sahf
cmp
pop
les
ljmp
pusha
inc
sarb
mov
out
or
xchg
frstor
xor
cld
rcrb
pop
test
lods
insl
ljmp
cmc
push
or
mov
hlt
ss
pop
push
aam
jmp
lods
inc
lods
inc
inc
adcb
xchg
gs
lahf
data16
test
adc
xlat
cmp
movsl
scas
add
fmul
mov
faddl
popa
jb
stos
test
rcr
pop
ss
enter
enter
in
orb
fiaddl
fsubl
or
cmp
cmp
hlt
and
push
les
lret
pop
adc
aam
daa
add
stc
inc
pop
loopne
sbb
lods
sub
scas
mov
xchg
frstor
and
insl
cmp
inc
cmp
pop
fisttpl
and
adc
mov
sub
je
push
ret
mov
cmp
das
mov
xor
in
mov
mov
and
jecxz
dec
into
add
and
mov
icebp
cs
adc
out
rol
out
sub
mov
test
ja
js
aas
sub
add
lock
and
push
repnz
in
stos
mov
popa
repz
or
jb
sbb
stos
inc
arpl
fdivrl
sub
or
clc
mov
std
sarl
sub
fbstp
adc
pusha
pop
push
repnz
insb
lcall
dec
addr16
lods
fsubl
sbb
inc
mov
add
cmp
lahf
daa
xchg
ljmp
shl
pop
xor
jne
push
mov
push
mov
jae
mov
sub
scas
jge
cld
pop
movsb
adc
sub
gs
fs
int
nop
xchg
adc
fwait
int
pop
into
lock
mov
sub
inc
ja
adc
adc
outsb
push
add
push
xchg
test
jne
test
scas
and
rcrl
xor
leave
xor
adc
adc
lock
stos
aad
sti
push
and
repnz
sub
je
addr16
hlt
lds
pop
dec
js
xchg
cmp
cmp
dec
xchg
xchg
mov
mov
dec
fidivs
or
inc
loope
push
push
jne
push
add
loope
aas
dec
scas
cmc
mov
fcmovu
cmp
jecxz
pop
adc
xchg
sti
lret
fsubrl
jno
xchg
or
sub
push
xchg
cmc
jno
xor
xchg
shll
insl
shlb
lock
jbe
jmp
lock
repz
jno
sub
mov
xor
les
dec
addr16
test
mov
std
xor
xchg
push
or
push
loopne
mov
lret
les
sahf
fstpl
push
popf
scas
cltd
pop
aad
loop
mov
rcrb
ja
out
fistl
add
cmpsl
popf
and
outsl
mov
test
in
enter
lods
xchg
mov
cmp
jecxz
pop
mov
and
ss
mov
or
adc
bound
push
mov
mov
push
xor
xor
jge
inc
xchg
nop
out
push
add
sub
mov
pop
mov
jl
repnz
pop
popa
xchg
jae
or
les
mov
enter
sbb
xchg
add
inc
nop
mov
aas
les
push
adc
push
mov
mov
jno
rcrb
popa
dec
dec
mov
inc
lcall
ficoml
push
adc
pop
pop
aad
fs
dec
mov
sbb
sahf
out
pusha
lcall
test
cwtl
add
dec
gs
movsb
jmp
outsb
pop
mov
sbbb
out
xchg
dec
test
jmp
cmpsl
aad
lret
push
and
pushw
push
fiaddl
scas
inc
mov
cmp
xchg
push
add
pop
aaa
mov
inc
adc
xchg
or
aam
sbb
pop
test
movsl
repz
and
cmp
enter
int3
xchg
xlat
out
jle
sbb
and
mov
xchg
sbb
adc
jno
sub
test
jmp
xor
pop
dec
cld
adc
ss
adc
adcl
xlat
adc
gs
mov
inc
add
pop
xor
lods
mov
inc
adc
out
in
jne
repnz
in
mov
les
outsb
out
jp
mov
push
cld
iret
roll
lock
sbb
outsl
jle
or
jg
leave
sti
jo
test
jb
sbb
sti
sub
inc
das
sbb
pop
int
mov
push
ja
cltd
lret
fcomps
mov
jle
mov
aam
xor
adc
push
mov
sub
xor
je
inc
add
aad
movsb
mov
mov
sbb
and
call
shll
xchg
add
pop
aad
adc
mov
and
jge
adc
or
xor
sbb
imul
aaa
leave
sbb
loopne
inc
push
inc
mov
cs
mov
test
test
aad
mov
cmp
jb
push
inc
jbe
jmp
lea
dec
xor
sbb
xchg
mov
lds
jb
xor
inc
mov
xchg
paddsw
or
fisubl
popf
ficomps
inc
push
inc
inc
xor
add
pop
sbb
iret
stc
es
mov
cmpsl
sub
pop
imul
fistpll
cmp
movsb
push
inc
shrl
mull
jp
push
sub
movsb
and
or
pop
or
push
push
inc
out
pop
mov
mov
push
subb
sahf
std
sbb
jg
sub
adc
xchg
xor
lcall
add
ljmp
mov
mov
mov
cwtl
outsb
fcmovnb
test
enter
aas
stos
out
or
or
fwait
or
test
cmp
loope
sbb
ljmp
out
dec
imul
test
mov
shl
leave
mov
adc
jecxz
inc
add
push
lcall
push
leave
sbb
push
insb
shr
mov
decl
adc
aad
dec
xor
test
lods
and
int3
test
clc
pop
pop
faddl
dec
add
sub
std
jbe
xor
push
pop
aaa
add
adc
cmp
lods
jmp
dec
loop
mov
jns
pop
mov
jmp
mov
ret
mov
sbb
sbb
test
sub
mov
shll
ss
push
inc
add
mul
mov
stos
pop
pop
push
push
sub
add
adc
mov
or
xor
ret
cmp
rorb
jl
pushf
mov
mov
das
or
addr16
ds
jle
adc
mov
jo
nop
ljmp
xchg
int
rcll
push
arpl
push
sbb
ljmp
cli
jne
push
stos
fsts
divb
sbb
jo
out
xchg
mulb
jmp
or
xor
les
adc
bound
or
jmp
testl
ljmp
fs
stos
out
sbb
jno
cmc
imul
xchg
sub
rclb
inc
or
xchg
push
mov
jmp
and
xor
test
adc
adc
rcl
pop
loopne
pop
mov
adc
cmp
cmp
xchg
pop
adc
jl
adc
sub
shl
add
mov
xchg
cmp
push
inc
and
lret
mov
and
dec
push
es
rclb
push
hlt
xchg
xor
into
or
daa
shrl
sub
in
push
cs
insb
out
aam
mov
sbb
sbb
std
xor
adc
pop
adc
shl
fcmovne
xchg
xlat
push
inc
pop
mov
rorb
xor
jl
rolb
ret
mov
pop
in
sub
cmp
icebp
lock
mov
mov
inc
cmpsl
inc
lret
xchg
add
cli
dec
les
add
lret
fs
pop
pop
xchg
std
fsubl
dec
mov
fdivl
pop
out
call
cmp
push
and
jb
or
test
cmp
jbe
cmp
adc
cmovge
out
fucomp
push
sub
pop
ja
push
sub
pop
add
mov
push
push
insl
xor
xchg
fidivl
or
fsubrl
push
mov
inc
dec
cmpsl
xchg
movsl
or
arpl
in
repz
int
xchg
les
dec
add
lea
mov
mov
pushf
fldl
lds
push
cld
and
sbb
enter
aaa
ds
or
cmpsb
xchg
test
ds
in
rolb
sub
loop
xor
pop
xor
aaa
adc
push
mov
aam
xchg
push
push
inc
dec
imul
nop
popa
outsb
push
pop
shr
xlat
pop
jge
adc
pop
in
std
and
push
fldt
jne
or
pop
mov
push
rcl
stos
call
rolb
push
dec
mov
cli
dec
lods
ret
push
out
mov
test
insb
mov
add
fdivrs
cmp
cmp
pop
jge
lret
addr16
sarl
pop
lret
dec
jle
adc
out
dec
scas
sub
mov
repz
ss
mov
push
insb
add
xchg
mov
cmpsb
das
or
push
pop
adc
sbb
inc
inc
sti
imul
mov
xchg
out
jecxz
mov
aam
xchg
lret
lds
add
adc
gs
fs
add
pusha
loope
in
mov
insl
fsubr
int3
sbb
test
push
dec
and
test
and
leave
and
mov
add
pop
xor
insb
cs
push
sub
mov
jo
cs
dec
cli
cmp
ds
xchg
sub
cmc
and
mov
dec
push
aam
icebp
xchg
push
adc
or
inc
lea
sbb
filds
adc
leave
sub
push
sbb
push
dec
pop
ds
int
push
inc
pop
sub
aaa
mov
push
movsl
testb
sarl
pop
lods
and
push
jge
dec
ja
xchg
mov
pushf
sub
rcrl
cmp
into
inc
clc
cmp
popa
push
and
sub
xor
out
push
in
xor
insb
rcr
jno
int3
jno
xlat
movsl
rcrb
loope
mov
inc
inc
adc
movsb
scas
adc
xchg
cs
xchg
stc
jae
lock
push
mov
sti
sub
aad
mov
mov
sahf
jno
mov
idivl
sbb
notb
or
sub
cmp
mov
lret
mov
dec
mov
push
add
iret
fdivrl
pop
loop
loope
jae
cmp
imul
out
adc
mov
xlat
xor
inc
sti
mov
jmp
mov
mov
in
fisubs
add
insl
aas
jecxz
cmp
out
dec
lds
or
cmc
cli
add
push
sub
sub
cmp
pop
fiaddl
pop
andl
inc
test
out
mov
stos
divl
hlt
jo
xchg
inc
out
in
loop
leave
mov
pop
loop
ret
adc
mov
sarb
popa
push
add
inc
sub
mov
pop
xor
mov
popa
adc
popl
pop
adc
jne
test
push
int
dec
movsl
imul
stos
mov
das
adc
or
je
push
cmc
push
inc
cmp
ret
fwait
cmpsl
ret
jb
out
stc
mov
xlat
sarb
in
inc
mov
adc
clc
mov
lods
add
mov
mov
dec
stos
stc
push
nop
cmpb
inc
pushf
imul
js
std
lret
popf
mov
orl
fs
in
pop
aaa
xchg
push
xchg
paddsb
jne
bound
adc
sub
xlat
cmp
mov
jp
test
je
sub
xchg
inc
mov
repz
sbb
add
test
ficoms
and
xchg
xchg
loopne
cmpsl
cli
jge
inc
jmp
out
sbb
fcmovne
xlat
adc
mov
jecxz
adc
push
inc
mov
jg
fs
nop
sbb
lea
push
sub
adc
dec
xor
lcall
les
pop
xchg
mov
call
nop
mov
shrb
or
clc
fcompl
daa
scas
xor
push
cs
loopne
xchg
inc
loop
paddb
ss
or
movsl
adc
inc
xlat
xchg
jbe
aas
or
call
sahf
xchg
ds
mov
mov
cmpb
inc
cmp
test
adc
mov
scas
inc
xchg
ret
loop
pop
mov
dec
mov
or
cmpsb
pop
mov
mov
out
inc
ret
pop
mov
dec
adc
xchg
mov
push
pop
out
pop
adc
mov
mov
xchg
xor
fwait
or
imul
xchg
lods
xchg
xchg
mov
jb
inc
stos
pop
insb
dec
data16
dec
mov
bound
or
cmp
ficomps
hlt
fnstcw
cli
repnz
or
loope
imul
dec
push
fstl
cmc
sub
add
movb
ds
enter
pop
adc
popf
jecxz
jmp
pop
xchg
lods
or
mov
push
dec
xchg
cltd
pop
sbb
scas
ljmp
cltd
test
mov
inc
cmp
xor
dec
popf
fcmovb
inc
mov
mov
jne
ret
mov
xchg
and
inc
out
paddq
xor
sub
sbb
test
mov
dec
inc
jnp
xor
ficompl
in
in
loope
lahf
scas
jmp
sub
add
and
or
push
cld
jg
fcoml
js
out
push
movsl
loope
inc
and
mov
arpl
movsb
rcl
mov
push
push
inc
scas
pop
lret
inc
push
inc
loopne
mov
jns
xchg
fiadds
and
mov
clc
mov
adc
pop
movsb
mov
icebp
fwait
scas
mov
ret
jbe
jmp
lret
pusha
push
mov
adc
sub
roll
pop
push
mov
and
xor
in
pop
cltd
outsb
out
and
jmp
pop
push
xor
sub
scas
xor
cli
lcall
andb
pop
pusha
outsb
repnz
cmc
sbb
adc
loop
out
popa
cld
je
push
adc
cmpsb
pop
iret
jb
iret
lret
jne
leave
dec
ret
jae
or
bound
sub
ret
adc
adc
sbb
pop
fst
mov
bt
or
fidivl
cltd
mov
cwtl
insb
and
test
push
shl
push
mov
mov
rcrb
sbb
adc
push
cwtl
movsb
dec
push
jae
jmp
cmp
lods
clc
mov
lods
push
pop
jmp
or
sbb
sbb
cli
fstpl
xlat
ljmp
xor
xchg
push
pop
xor
adc
stos
jnp
mov
push
push
mov
pop
jmp
cltd
popf
fdiv
pushf
ret
imul
push
pop
loope
mov
je
cli
xchg
jb
mov
inc
xor
std
fnstcw
repz
repz
add
enter
std
insl
or
in
rcr
mov
popa
shrl
or
les
clc
lock
cmpsb
mov
clc
rcrb
push
add
xchg
adc
xchg
mov
aam
jmp
mov
leave
sbb
jl
xchg
hlt
mov
xchg
in
hlt
and
sbb
cmc
lods
mov
dec
adc
pop
sub
fstl
pushf
xlat
enter
jle
xchg
add
and
fwait
sarl
inc
cmp
pop
xor
xor
pop
sbb
mov
in
fmull
fstpt
jne
push
mov
sbb
dec
and
add
jns
psrld
mov
cmp
xor
jne
add
mov
push
dec
pop
enter
pop
cmp
addr16
inc
icebp
sub
shlb
je
stos
aaa
pop
jle
ss
rclb
imul
xchg
fidivs
movsb
inc
hlt
movsb
and
xchg
sbb
mov
out
xor
inc
mov
ljmp
dec
jle
add
and
cmc
sub
add
insb
mov
lret
jmp
lcall
cmp
sub
pop
into
mov
rcrl
xchg
loopne
xor
jb
test
aam
push
inc
pop
sub
cmpsb
xor
sub
lock
mov
cltd
clc
lea
sti
repz
or
mov
mov
decb
outsl
sub
aas
mov
cmp
jb
and
push
stos
sub
dec
and
dec
scas
dec
dec
push
jnp
dec
dec
sub
inc
push
push
mov
push
sti
inc
and
inc
ret
andl
xor
cltd
pop
lret
mov
aas
scas
jns
pushf
mov
dec
lea
mov
nop
std
fistps
jo
negl
push
mov
cmp
popa
repnz
jl
repnz
out
jo
xor
mov
xlat
push
outsl
adc
inc
pop
jns
sub
dec
cmp
lods
mov
add
inc
jne
cltd
mov
out
push
clc
push
push
xor
add
fst
adcb
mov
fistl
dec
ret
popa
test
and
adc
popf
cmp
iret
lcall
pop
aas
adc
xlat
push
mov
pusha
sbb
loop
adc
adc
outsl
in
shll
adc
jp
lahf
std
icebp
in
inc
sub
lahf
sbb
xchg
xlat
lea
and
pop
xor
dec
sub
aad
repz
push
sub
loope
xor
cmp
jle
outsl
fnsave
xchg
mov
push
lods
jnp
div
or
mov
sub
mov
add
dec
sbb
pop
popf
cld
scas
dec
add
adc
cmp
nop
mul
fidivl
add
or
jb
mov
inc
test
push
addr16
loope
neg
popa
lds
aas
push
xor
inc
push
sub
sub
inc
popf
aam
xchg
test
fldenv
pop
inc
int
mov
mov
dec
andl
cmp
mov
into
mov
sub
cmp
rclb
out
mov
and
adc
cmp
mov
lock
movsl
dec
fcomps
jmp
data16
mov
sbb
ficompl
and
ljmp
add
shll
fldt
xchg
lea
fwait
adc
ret
or
das
test
sub
arpl
cmp
push
mov
inc
jp
dec
imul
imul
xchg
mov
jnp
iret
or
sbb
xchg
push
cmp
inc
xor
insl
mov
pop
es
push
outsl
cmp
mov
xor
mov
ljmp
sbb
out
ret
addr16
cli
ds
loope
mov
rclb
fidivl
sahf
inc
mov
mov
push
movsl
loopne
clc
je
cmpsb
xor
and
mov
mov
fs
fcmove
pop
inc
dec
repz
jl
cmp
shll
inc
jp
push
fstp
lret
jnp
test
pop
pop
das
add
xchg
mov
loope
cltd
push
jl
idivb
fs
dec
test
lods
std
jnp
movsb
ret
imul
push
jecxz
pop
mov
les
insb
or
jl
and
xor
mov
das
push
add
jnp
cmp
addr16
inc
loop
test
add
sarl
std
push
sbb
xchg
push
movsb
popa
pop
hlt
pop
arpl
push
mov
pop
int
dec
mov
fdivr
add
adc
push
movsl
fisttpll
test
cmp
shll
insl
mov
add
std
push
mov
arpl
aam
jle
sti
mov
fidivrs
sahf
aam
popf
adcl
lods
or
mull
mov
cmpsb
rcll
mov
add
dec
pop
inc
xchg
out
stos
jge
cli
test
or
mov
push
int3
lea
sub
jle
mov
adc
outsl
mov
add
and
adc
dec
pop
mov
aaa
popl
xor
sbb
arpl
lret
stos
popf
xchg
scas
ja
dec
ds
sbb
xor
in
movsb
mov
pop
insl
add
inc
add
sahf
fisttpll
cmp
xchg
xor
inc
push
mov
lock
or
cltd
stc
jo
arpl
xchg
pop
repnz
mov
adc
stos
add
cmp
xlat
in
outsl
jns
mov
mov
dec
mov
adc
sahf
shr
inc
cmc
mov
pop
or
sbb
jae
add
pop
imul
mov
lret
stos
lods
sbb
xchg
mov
mov
in
xor
inc
fstpt
shlb
std
xor
popf
outsb
aas
push
repnz
push
pop
in
and
inc
rcll
test
icebp
imul
sbb
or
cli
add
mov
das
iret
int
das
mov
js,pt
test
clc
movsb
mov
rcl
pop
jg
incb
pop
rorb
dec
jl
cs
cli
xchg
cs
adc
in
adc
bound
dec
mov
pop
dec
sub
sti
scas
sub
inc
pop
or
rol
inc
cmp
or
outsl
dec
in
movsl
inc
jbe
stos
data16
imul
xlat
cmc
ret
in
jecxz
mov
orb
pop
dec
add
test
shl
inc
mov
xlat
sbb
jmp
mov
movsl
gs
sarb
pop
or
leave
pop
push
or
aas
imull
jnp
call
push
xchg
int3
cmp
rorl
push
jnp
fsubrp
mov
lds
dec
jp
pop
call
push
leave
js
sub
fnstcw
sbb
fnsave
or
xor
mov
and
les
idivl
xor
stc
lods
add
icebp
out
lea
imul
fs
and
test
sbbl
imul
jmp
push
lret
dec
js
push
jp
aas
mov
and
mov
inc
mov
pop
sbb
ja
push
cs
ret
out
mov
adc
jno
dec
jp
roll
imul
mov
cmpsl
movb
mov
mov
in
clc
adc
insl
outsl
adc
in
sub
ret
xchg
lods
inc
dec
nop
sbb
mov
adc
sahf
xor
out
inc
rcl
outsl
adc
in
in
add
dec
insb
cmp
clc
xlat
inc
jne
jne
enter
sub
xor
cmpsl
sub
sub
mov
sub
out
sahf
mov
push
pop
jg
dec
test
push
xchg
xchg
mov
add
cmp
or
and
outsl
inc
jle
rorb
jns
pop
lret
and
dec
scas
rorl
mov
popa
in
jno
nop
clc
jmpw
xchg
fs
fldt
cli
js
loop
lcall
test
icebp
in
arpl
sub
adc
add
aaa
sub
jg
and
scas
movsl
or
outsl
aam
sub
mov
inc
das
shll
lcall
leave
mov
jne
mov
dec
mov
fisubrl
cli
dec
push
and
mov
push
push
nop
sbb
mov
in
sti
jbe
repz
mov
push
sub
dec
sti
je
std
push
and
mov
loope
rcll
arpl
bound
clc
jnp
jne
mov
loopne
push
fs
add
jno
repz
cmpsl
dec
movsb
loope
pop
mov
mov
mov
sbb
imul
aaa
divb
lahf
das
dec
mov
add
jle
xchg
scas
push
push
insl
dec
shlb
dec
pusha
xor
pusha
jno
movsb
shrb
mov
push
push
jb
shrl
fsubp
testb
add
cmp
sbb
lds
and
es
sub
cmpl
fldl
add
cmp
jns
xchg
fnstenv
mov
out
lret
push
js
or
adc
push
rcrb
cs
test
pop
fs
and
adc
daa
leave
push
jbe
jno
pop
sbb
sbb
xchg
xorl
mov
pop
ss
loop
jmp
add
pop
in
popa
or
icebp
insl
xlat
add
jg
fiaddl
icebp
and
push
cmp
and
sub
loopne
inc
xchg
xchg
inc
mov
dec
jg
cltd
popa
pop
mov
dec
sub
loopne
js
push
lods
lock
inc
or
hlt
ffree
imul
lock
xchg
daa
in
jl
rorl
xchg
jb
movsl
je
adc
icebp
xchg
sub
test
insl
sahf
lea
mov
rcr
ljmp
clc
cmp
movsb
xchg
cmp
mov
out
pop
aad
add
add
cltd
stos
outsb
pop
cli
into
shlb
jnp
cmp
pop
sbb
pop
mov
pop
jo
aad
stos
loop
sbb
cmp
push
mov
push
or
js
xchg
int
jl
mov
lods
sbb
xor
push
repnz
cmpsb
inc
int3
in
add
movsl
repz
mov
ret
fldenv
divb
mov
xor
bound
inc
jo
adc
dec
add
rol
fucomip
sbbl
push
and
jg
lea
nop
test
dec
xchg
inc
shrl
push
andb
rcll
and
adc
mov
shr
mov
scas
pop
mov
les
sbb
xchg
push
or
xlat
xchg
xchg
sub
lea
mov
push
orb
lret
jne
sub
lahf
push
scas
or
mov
sbbb
sub
sub
pop
aam
sub
and
es
sbb
xchg
mov
mov
pop
iret
fsubr
shrl
out
lahf
xchg
lret
mov
movb
xchg
pop
popa
push
jae
push
sbb
xchg
mov
cmp
xchg
pop
lahf
sbb
mov
push
mov
inc
inc
enter
or
push
inc
pop
je
add
stos
enter
imul
mov
ljmp
test
rcl
in
das
push
cltd
cmp
lds
cmp
cmpsb
dec
adc
sub
sub
xchg
xchg
cmp
roll
xor
pop
stos
popa
mov
pop
ret
and
inc
push
into
outsl
inc
mov
ja
cld
loopne
sub
cmpl
int
shlb
repnz
pop
mov
out
aad
lds
sub
scas
mov
mov
mov
pop
ret
add
adc
es
inc
fisttpll
lods
out
mov
insb
andl
mov
mov
inc
adc
stc
or
pop
or
push
hlt
push
or
pop
push
lret
mov
inc
mov
xchg
mov
mov
ss
pop
cli
xchg
jae
mov
lcall
movsl
mov
adcl
dec
rorb
imul
and
mov
repnz
rcr
fnstenv
xlat
cmpsb
je
mov
pop
push
cwtl
pushf
lock
mov
lahf
fistps
cmp
ret
sbb
call
std
cmp
cmp
mov
mov
mov
adc
js
mov
rcll
notb
scas
mull
fcmovnu
in
scas
xchg
flds
call
clc
sbb
fsts
movsb
sti
dec
in
xor
cmp
aad
inc
lret
dec
jb
mov
or
inc
js
and
cmp
jbe
pop
and
cld
push
push
jle
xor
ja
je
inc
les
sbb
sarb
mov
dec
jnp
mov
fwait
shrl
in
or
inc
cmp
shrb
repnz
mov
xor
fcomps
jo
cmp
mov
mov
nop
pop
out
mov
pop
xor
ljmp
fdiv
or
adc
ss
scas
out
ljmp
push
leave
sti
cmp
or
push
lret
mov
push
xlat
std
pop
shlb
test
fstpl
xchg
fists
ror
pop
inc
adc
ja
sub
pushf
clc
push
mov
mov
mov
je
fimuls
dec
mov
in
test
mov
sbb
xor
push
iret
insl
pop
in
jg
mov
add
sub
cmc
mov
ljmp
cwtl
xor
push
cwtl
imul
mov
adc
data16
movsl
arpl
inc
pushf
xorb
mov
sar
sbb
push
xchg
loop
movsl
add
insl
repz
rol
cs
fsubrl
xchg
outsb
cmp
jecxz
sub
ret
shl
pop
cmp
xor
pop
xlat
inc
mov
jb
jb
insl
adc
sbb
pop
pop
dec
outsl
out
pop
idiv
jb
imul
pop
test
jb
push
and
lds
test
mov
lea
push
js
add
out
subl
lock
cltd
lds
xchg
arpl
pop
ret
shll
pop
xchg
jge
fsts
lods
addl
xlat
test
inc
inc
scas
push
or
cmp
pop
faddl
sarb
mov
pop
mov
andl
add
mov
inc
or
xchg
xor
shl
enterw
fildl
jmp
ret
xchg
mov
push
add
scas
jl
cld
jg
xor
xchg
inc
and
fdivr
cmpsb
sbb
dec
scas
cmpsl
mov
jmp
jecxz
jns
jae
push
pop
mov
test
call
sbb
rorb
jmp
out
sub
mov
scas
out
mov
dec
dec
mull
push
or
jbe
dec
test
into
arpl
clc
dec
push
aam
sub
and
ret
sub
jecxz
sub
stos
loopne
sbb
or
fs
xchg
sbb
loop
push
jle
addb
and
push
outsb
adc
pop
xor
xchg
ss
aas
outsl
push
lock
jnp
int3
xchg
lret
dec
mov
leave
imul
jno
dec
outsb
fnstcw
sbb
jne
mov
adc
pop
push
xchg
mov
out
loop
cmpsb
imul
lahf
xchg
push
sbb
popl
push
mov
popf
mov
sbb
repz
shrb
inc
in
inc
cmc
push
push
idiv
sub
movsb
testb
sbb
xchg
test
into
xor
xor
rcll
or
dec
call
sub
push
xor
cmp
push
or
insb
mov
add
cmp
mov
ljmp
out
or
adc
pop
stos
es
cmp
shll
pop
mov
push
inc
loop
cmp
lods
push
pop
push
lock
mov
adcb
cmpsl
xchg
or
in
test
and
andl
pop
jecxz
pop
push
scas
xchg
mov
pop
and
push
xchg
mov
scas
and
inc
inc
cmc
add
inc
ret
cltd
cmpsl
sahf
pop
fmuls
pushf
mov
mov
fwait
testl
or
cmp
jns
push
mov
xchg
jge
icebp
push
jnp
div
out
sarl
call
and
call
push
pop
stos
popa
movsl
sbb
in
sbb
data16
push
fwait
dec
sbbl
mov
iret
or
xchg
repnz
xor
imul
repnz
and
sub
mov
pop
add
xor
xchg
or
mov
push
ds
cmp
lret
cld
pop
fistl
dec
lds
fistpl
xor
cmp
xor
adcl
test
jo
push
pop
push
ret
push
icebp
push
xor
rolb
imul
xor
pmaddwd
jne
mov
xorb
or
lods
adc
shl
iret
shlb
fldenv
add
imul
popf
cmpl
or
sarb
std
mov
push
aad
mov
pop
jnp
cmp
test
inc
rcrl
pop
dec
loope
inc
xchg
push
dec
mov
stos
iret
mov
aam
push
xchg
and
and
jmp
add
dec
xchg
cmpsb
loop
mov
cli
cmpsb
add
shrb
in
mov
cmp
pop
inc
sahf
fnsave
adc
jns
bound
xchg
sub
je
stc
pusha
fwait
out
push
sbb
test
scas
outsb
repz
and
aad
sub
jmp
fwait
cld
mov
lods
inc
pop
divps
ficoms
movsb
mov
push
push
stc
inc
sub
adc
aas
inc
fsubl
sbb
lods
jecxz
aam
dec
lcall
dec
mov
sub
xchg
xor
adc
js
sub
and
icebp
pop
in
into
arpl
dec
jnp
adc
negb
and
mov
mov
dec
sti
pop
in
add
sub
pop
cmp
dec
mov
shlb
stos
fnstsw
lahf
pop
push
fsubrs
and
outsl
aam
inc
test
outsb
mov
mov
movsb
stos
call
mov
aam
data16
mov
ret
fisubrs
sub
jl
sbb
and
adc
jo
push
sub
out
ret
mov
ljmp
into
cmp
scas
pop
out
scas
out
add
out
sub
xor
cmp
mov
sub
shll
repz
mov
or
pop
pop
nop
and
xchg
lretw
jb
and
lods
icebp
or
mov
sbb
push
xchg
cmp
cmpsb
fcompl
or
pushf
cmp
xchg
imul
pop
cmc
movsl
popf
sahf
jle
cmp
push
xchg
sbb
jbe
pop
clc
aas
mov
dec
sarb
icebp
mov
jp
dec
adc
push
fldt
test
cmpb
adc
cmp
push
es
lods
in
outsb
mov
fdiv
movsl
jo
jp
out
cli
sahf
add
mov
dec
std
int
divb
push
scas
insl
push
addr16
lret
scas
les
mov
add
push
repz
cmp
cmp
aad
push
fildll
sahf
movl
test
mov
es
cmp
jl
xchg
movsl
push
fwait
je
push
mov
dec
lcall
lcall
push
mov
sbb
data16
stos
jp
clc
mov
mov
push
mov
xchg
jle
addr16
xor
xor
jmp
loope
xor
arpl
stc
add
xorl
sbb
add
ffree
inc
clc
sbb
test
ret
jle
icebp
or
stos
or
xchg
sub
sbb
in
xor
repnz
movsl
or
push
push
test
aam
fmull
pushf
inc
insb
insb
popf
into
sub
out
cmp
dec
inc
dec
mov
or
outsl
mov
mov
imul
fistpll
mov
out
test
lods
in
xchg
inc
mov
inc
cmp
in
mov
push
inc
sbb
xchg
insb
loopne
jo
out
fidivrs
fdivl
pop
jb
dec
enter
fiaddl
adc
sbb
cmpsb
xor
xor
cmpsl
mov
inc
fimuls
insb
mov
add
adc
out
push
mov
jle
test
loope
lds
jmp
cmp
or
add
sbb
hlt
mov
mov
sbb
in
pusha
insl
and
push
fcom
sbb
popa
lcall
jg
test
cmpsl
sub
stos
cmc
xor
jo
enter
lcall
sub
sub
gs
test
mov
mov
or
hlt
inc
mov
push
adc
jnp
xchg
cmp
cmpl
mov
mov
push
out
ficoml
dec
or
movsb
inc
cmp
mov
mov
enter
shr
lock
int3
shl
ret
xor
mov
push
xchg
mov
sub
push
pop
sbb
cmp
imul
mov
notl
mov
in
or
test
sahf
xchg
faddl
out
pop
nop
das
dec
pop
rcrb
xchg
lahf
movsl
mov
jno
xchg
gs
inc
std
and
test
arpl
xchg
push
sbb
mov
jb
and
aas
adc
pop
fsubrs
iret
pusha
mov
and
and
outsb
dec
addr16
mov
xchg
xlat
dec
iret
push
shrb
pop
adc
dec
sub
mov
push
popf
icebp
test
iret
repz
inc
test
pop
orl
jne
int
ja
outsb
pushf
mov
sub
pop
ss
adc
mov
fs
xchg
loop
mov
jge
fiadds
in
ret
shrl
addr16
shrb
adcb
sbb
xchg
cmp
mov
and
jno
sbb
and
xlat
push
dec
mov
xchg
mov
pop
enter
xchg
mov
or
xor
or
in
add
shr
mov
sti
jecxz
or
or
sbb
es
jge
mov
leave
scas
les
mov
inc
sub
dec
pop
call
leave
jo
jbe
sub
add
std
jb
push
and
dec
jnp
jecxz
xorb
adc
inc
jno
lods
and
jns
mov
imul
push
repz
sub
adc
dec
push
fsubrp
cwtl
sub
shll
jle
clc
cmp
or
scas
gs
and
mov
iret
sub
ja
pusha
mov
shlb
mov
inc
mov
jg
enter
adc
mov
fisubl
icebp
pop
sbb
push
lods
movsb
push
out
repnz
cltd
fcoml
adc
jmp
faddl
dec
loop
xor
mul
popf
outsl
xchg
jecxz
mov
and
mov
mov
in
xor
adc
and
inc
jb
ljmp
add
cld
push
out
scas
int
adc
pop
dec
xchg
fdivrl
enter
push
and
flds
addl
jno
cmp
fsubs
popa
pop
push
adcb
cmc
sub
pop
outsb
adc
rcrb
jne
shlb
xchg
push
pop
jbe
insl
push
mov
pop
add
insl
jg
in
test
lods
or
arpl
mov
dec
adc
loopne
imul
adc
data16
loop
and
dec
clc
dec
fstpt
leave
or
enter
inc
sub
roll
fcmovnb
push
insl
push
cmp
mov
push
xor
ficoms
add
adc
push
pop
cltd
loopne
xor
in
icebp
sub
icebp
mov
or
or
test
sub
fdivl
ss
jae
adc
sbb
xchg
jo
cmp
mov
sub
pop
stos
dec
les
add
fsubs
pop
mov
sub
mov
pusha
cmp
rorb
rol
nop
mov
cmp
aam
pop
inc
adc
sbb
xlat
nop
shll
add
jae
xchg
sbb
repz
xlat
mov
nop
data16
inc
dec
ds
sub
xlat
sub
pop
movsb
dec
das
mov
pop
scas
sub
pop
and
adc
out
fnsave
mov
insb
hlt
xchg
push
add
fdivrl
or
jp
insb
dec
iret
sub
dec
jle
push
xor
push
das
call
xor
or
sbbl
push
cwtl
jne
cs
jp
jmp
cmp
dec
out
cmp
pusha
aad
mov
cmp
xchg
adc
outsl
mov
fmull
dec
xor
jne
push
fwait
mov
cmp
ret
pop
add
jmp
aaa
in
jl
aad
push
cmp
call
push
pop
sub
outsb
fsub
and
ja
idivb
pop
in
aam
push
loope
xchg
mov
stos
mov
push
sbbb
xor
mov
nop
mov
lds
dec
mov
cwtl
data16
pop
and
xor
push
adc
xor
ret
loop
hlt
les
inc
jae
into
testl
les
mov
stc
push
fstpt
dec
mov
jge
jp
std
mov
lret
inc
inc
imul
in
out
lret
push
test
js
test
out
push
jecxz
or
jo
sarb
stos
xchg
pusha
and
ror
cmp
mov
loope
movsb
shr
inc
int3
or
mov
lret
out
and
and
lods
loopne
push
fildll
adc
das
sbb
push
outsl
js
push
sbb
clc
mov
test
push
outsl
push
xor
cld
cmp
cwtl
and
pop
jns
xor
loop
out
push
mov
adc
es
jnp
movsl
xor
xor
adc
jmp
add
ds
in
dec
loope
xor
adc
mov
stos
jp
int3
lahf
call
psubd
add
xchg
sbbb
lret
and
hlt
xchg
cmp
cmc
les
test
jg
aad
test
daa
push
decl
scas
xchg
dec
push
mov
jne
cmp
xchg
jle
stos
add
imul
jecxz
xchg
jns
push
sbb
bound
das
sub
aad
jb
pop
ja
xor
inc
xchg
jbe
loopne
jbe
lods
loopne
xchg
push
jle
inc
adc
popa
jb
jns
dec
aas
aas
imul
ret
cmp
sbb
insb
push
mov
xchg
jge
fidivl
mov
and
mov
push
out
cwtl
cmc
fildll
pushf
pop
push
icebp
add
aam
pusha
gs
dec
cld
lock
sub
adc
outsl
leave
mov
mov
cmp
jge
xchg
pop
lock
repnz
lahf
popa
mov
dec
jns
je
cltd
clc
jmp
add
pop
jne
nop
mov
mov
xor
jnp
sub
lret
jne
mov
xor
movsb
jle
cwtl
ja
fwait
test
test
mov
loop
push
aam
xchg
push
push
int3
enter
push
pop
fwait
pop
neg
rcl
aad
pop
lock
std
adc
insb
cwtl
ret
jg
cld
fs
sahf
pop
imul
mov
mov
cmpsb
sub
cmp
jbe
arpl
jne
fcoml
adc
cmc
jl
lea
pusha
mov
xchg
sbb
test
cmpl
sahf
popa
pop
test
xchg
das
sahf
sub
add
cltd
fildll
sub
xor
imull
inc
or
xchg
stos
cld
sub
jp
out
xchg
cmp
hlt
xor
inc
icebp
push
pushf
adc
add
xchg
pop
mov
aas
lds
mov
jp
insb
or
inc
insb
mov
mov
pop
lods
std
lea
pusha
fwait
jns
jnp
mov
cld
fxch
xchg
push
imul
cmp
and
jp
sbb
iret
in
jp
mov
neg
fldenv
fnstcw
inc
fidivrs
pop
mov
adc
je
jnp
sub
lcall
movsl
data16
pop
jle
sub
iret
adc
sub
inc
fcoml
subb
push
adc
xor
dec
pushf
push
inc
adc
sbb
push
push
pop
xchg
mov
add
mov
mov
fidivrs
jp,pn
xchg
xchg
jns
lock
xchg
mov
leave
aas
add
sbb
addr16
scas
mov
sbb
push
or
jno
xchg
xor
fdivr
pop
fadds
scas
fisubrs
mov
cmpsb
inc
repnz
cli
out
mov
pop
fbstp
fists
jnp
push
sub
or
inc
add
je
lea
hlt
inc
mov
fcomps
pop
pop
gs
icebp
add
out
test
bound
push
lcall
mov
clc
mov
adc
adc
jecxz
insb
lock
fs
push
adc
gs
daa
jg
jmp
xchg
mov
cmc
in
mov
aad
pop
jo
dec
cwtl
pushf
in
push
xor
inc
sub
add
dec
mov
test
leave
sub
xlat
ds
dec
mov
and
jmp
xchg
cmp
sbb
out
lea
xchg
xchg
jae
mov
pop
insl
add
std
pushf
pop
mov
sub
adc
in
and
push
cmp
call
test
test
and
add
pushl
and
lret
fs
or
xchg
pop
push
or
fimuls
or
add
addr16
push
push
shlb
iret
sbb
inc
clc
sahf
je
push
popf
arpl
pop
daa
or
in
insb
add
addr16
push
cmp
jg
jne
into
ja
pop
outsb
clc
sbb
rcrb
cmpsl
xor
addb
scas
hlt
ljmp
jl
xchg
jg
popa
repz
sarl
sbb
cmp
add
xchg
insb
stc
mov
or
xchg
test
test
les
fcmovnb
sbb
jge
sub
imull
in
jge
in
insl
push
test
cmp
rol
shlb
fnstcw
mov
xchg
fdivrs
into
xchg
daa
mov
movsl
cli
cmp
or
stc
fs
int
aam
arpl
and
aam
fldenv
inc
or
fcomip
sarb
inc
test
lahf
pop
sbb
dec
mov
pop
pop
loopne
ss
mov
es
adc
dec
stos
jns
xor
popa
lret
xor
mov
mov
mov
addb
outsl
xchg
ds
mov
lock
test
lock
push
adc
mov
loop
and
xchg
dec
or
lret
mov
fdivl
cmp
inc
stc
dec
shl
cmp
ret
into
ljmp
inc
pushf
ret
mov
or
daa
or
sbb
ds
dec
out
fwait
adc
jmp
std
cvtpi2ps
mov
out
test
ret
into
subl
xlat
jns
dec
test
imul
jae
fistpll
lea
push
lahf
pop
inc
jecxz
sbb
cmp
inc
and
push
push
leave
inc
repnz
int3
xchg
mov
dec
stos
jae
rcrb
push
inc
lods
xchg
cmp
pop
movsl
repz
out
sbb
jnp
popa
jecxz
sub
adc
test
pop
shr
fidivrs
or
call
mov
jp
inc
imul
jp
notl
xor
sub
pop
rcr
movsb
and
std
stc
movsb
cltd
and
push
fwait
push
dec
jb
subb
jge
cwtl
pop
pop
inc
pop
loopne
js
mov
pusha
or
sbb
gs
jl
jnp
sub
dec
out
xor
inc
push
subl
xor
dec
ret
and
xchg
jmp
repz
jno
adc
sbbb
mov
push
hlt
mov
sahf
iret
mov
out
in
sahf
jg
and
xor
sti
testb
in
pop
push
jb
cmp
push
fstpl
adc
out
dec
jbe
cli
jmp
or
imul
frstor
loop
andl
movsl
pop
push
sub
xchg
gs
mov
movsl
and
adc
insl
incl
xor
jg
ret
adc
push
xchg
mov
sbb
pop
fisubrs
pop
mov
sahf
call
arpl
mov
fstpt
pushf
lods
push
cmp
scas
jnp
das
dec
outsl
push
out
js
push
or
imul
ret
fistpll
pushf
and
testl
cmpsb
xor
sbb
ja
fwait
xchg
test
sub
into
cld
dec
cltd
mov
xchg
jnp
sub
mov
sbb
push
inc
cmpb
mov
loope
fidivl
or
mov
repz
out
addl
jae
xor
fdivs
fistl
dec
inc
outsb
mov
xchg
pop
add
stos
sbb
cld
clc
fstl
cltd
sub
in
xchg
mov
inc
fisubs
cltd
push
inc
dec
or
adc
aad
ja
and
jle
sbb
jmp
jb
ljmp
add
sub
xor
adc
sub
or
icebp
or
sbb
ret
xchg
fs
jbe
pop
jns
shrl
lret
mov
mov
lds
adc
and
xor
mov
or
mov
stos
sub
ror
or
jnp
scas
into
cmc
lret
stc
cmp
cmovg
push
jle
insb
mov
fstpt
repz
pushf
les
out
mov
mov
jmp
mov
movsl
dec
cmp
push
fsts
sub
insb
pop
mov
inc
jae
inc
loop
adc
sub
xchg
sub
or
cli
dec
ss
scas
aad
jmp
cwtl
cltd
inc
aam
sbb
mov
enter
fiadds
ds
xor
mov
popl
dec
js
js
xchg
xchg
outsb
hlt
js
sarl
add
std
insl
mov
call
div
out
repnz
sub
jge
xchg
and
test
loope
out
sub
mov
xlat
mov
aaa
mov
sub
aaa
ljmp
mov
push
pop
ja
lods
cmpsb
es
rcll
jb
mov
inc
cli
xor
scas
xchg
dec
pop
shlb
pop
xor
cld
inc
out
push
lock
dec
push
add
mov
push
xchg
jp
inc
out
das
sbb
cmc
dec
jns
cmp
loopne
mov
fdivl
jge
pop
jno
stos
jne
mov
sub
ltr
mov
mov
xchg
sub
faddp
add
and
les
or
ror
popf
jae
nop
mov
adc
xchg
xor
test
js
cwtl
scas
test
repz
cwtl
in
arpl
in
xor
imul
clts
popa
pusha
mov
and
and
xor
xchg
mov
dec
jae
lret
sub
repz
bound
xchg
or
sbb
pop
xchg
outsl
lds
in
ds
cld
fnstcw
mov
push
cmp
xchg
push
rcl
xlat
inc
ja
sub
sbb
add
flds
dec
testl
imul
fnclex
shrl
jl
andl
addr16
pop
loope
jmp
bnd
popa
movb
mov
xor
ss
cwtl
xchg
imul
push
testb
and
test
pop
loope
jle
push
and
fs
stos
sti
je
movsb
mov
loopne
orb
push
int
test
mov
xor
inc
dec
fistl
aas
mov
or
xor
adc
mov
sub
adc
xchg
pop
fiaddl
fists
cmp
mov
push
out
rorl
idiv
sar
fistpll
pop
pop
in
dec
mov
adc
mov
ss
dec
into
call
push
stos
jnp
movsb
jl
pop
shll
mov
aad
out
fcoms
jp
xor
sahf
cmpl
push
xor
jb
jb
cmc
movsb
jnp
aas
sub
out
mov
cmp
dec
pusha
aaa
cmp
faddl
mov
jmp
iret
push
add
sbb
lahf
movsl
jbe
cmp
mov
mov
mov
pop
xchg
out
xor
xchg
mov
lret
sti
push
lcall
nop
test
xor
jl
ud0
mov
vmread
push
pusha
jae
xor
fwait
gs
ds
mov
xchg
leave
and
inc
stos
pop
dec
js
ret
fdivrl
mov
out
cltd
mov
pushf
jb
xchg
dec
fwait
aas
xchg
mov
cs
and
movsl
sbb
movsb
or
aas
test
movsb
lock
iret
shlb
sub
ror
xchg
pop
xor
cmp
push
mov
and
or
or
orb
mov
out
je
lock
xor
pop
out
repnz
cmp
jp
sub
xchg
cmp
push
push
daa
cltd
dec
cltd
in
pop
sti
xlat
xchg
mov
gs
insb
in
jp
add
xorb
insb
ljmp
push
inc
in
mulb
out
push
leave
popa
adc
lds
sbb
inc
lret
push
inc
pop
lcall
sahf
pop
pusha
mov
push
dec
lock
sahf
mull
and
add
jnp
and
test
xchg
fstps
cwtl
loopne
xchg
das
dec
shl
and
push
ficoms
clc
inc
add
cmpsb
mov
xchg
add
bound
loop
mov
cmpsl
mov
fcomps
cmp
pop
xchg
subb
push
adc
sbb
pop
mov
aam
pop
imul
dec
cmp
in
pusha
lahf
mov
pop
lahf
adc
ficompl
dec
enter
hlt
dec
pop
gs
insb
lea
dec
loop
cmc
test
scas
sub
pop
xchg
adc
push
xor
outsl
push
inc
jns
test
sahf
sbb
inc
adc
arpl
sbb
mov
lahf
outsb
jge
ljmp
push
aaa
inc
lret
mov
or
aas
xchg
cltd
and
push
jmp
fdivrl
jge
cmpsl
call
in
lret
fwait
inc
xor
inc
mov
icebp
daa
movsb
cmpsl
dec
mov
mov
lea
xor
and
mov
inc
xchg
mov
pop
mov
cmpsb
add
lcall
je
lret
daa
xor
or
into
inc
lahf
cmc
icebp
mov
add
test
sub
ss
aad
in
add
test
push
scas
mov
outsb
lock
js
cs
add
sti
pop
mov
mov
xlat
ljmp
fstps
mov
inc
add
push
icebp
mov
fs
mov
sub
mov
enter
jo
inc
daa
push
jmp
jbe
out
sahf
sub
push
pop
sahf
cmpsb
cmp
cmc
xor
mov
sti
mov
add
scas
stc
inc
ret
repnz
or
iret
repnz
push
popf
in
adc
lock
sarl
xor
je
inc
add
push
sbb
out
into
lret
fwait
lea
push
loopne
cmc
in
aaa
clc
pop
sbb
add
rorb
mov
mov
add
cmp
cmpsb
jae
xorl
das
mov
cmp
mov
push
mov
aam
sub
add
push
add
setno
pop
iret
bound
repz
aad
xorl
push
inc
ss
mov
add
adc
cmp
orl
sbb
or
je
lea
daa
sti
pop
sarl
std
inc
or
push
scas
ja
test
insb
mov
sbb
test
push
iret
mov
xchg
lds
mov
shr
out
and
test
or
dec
jae
stos
loope
mov
sbb
xchg
mov
jmp
or
mov
stc
pop
cwtl
dec
out
adc
popa
and
add
jmp
popa
movsb
push
out
pop
mov
ret
dec
js
push
or
das
clc
jmp
aas
inc
mov
movsb
add
inc
das
mov
mov
sbbb
pop
pushf
sub
faddl
fs
mov
jmp
mov
sbb
add
sbb
test
or
mov
or
bnd
shrl
js
lock
cmc
cmp
or
inc
movsb
rorb
xchg
sub
std
jno
inc
xchg
jns
fs
test
imul
imul
sub
hlt
das
xchg
mov
dec
out
movsl
fwait
leave
add
jl
ret
xchg
fstl
xchg
wbinvd
pop
mov
sub
inc
cmp
stos
add
test
sub
jae
test
faddl
inc
insb
cs
sbb
xor
insb
daa
repnz
ret
or
mov
jmp
adcb
xchg
in
dec
sub
sti
xor
add
or
js
adc
leave
cmp
jns
mov
inc
inc
push
and
int3
aam
sbb
inc
imul
push
sub
pop
inc
cmp
lea
add
jne
mov
sub
pop
cmp
inc
cmp
cmpsb
push
add
pop
ds
pop
pop
dec
cs
sahf
jg
or
cltd
and
xor
push
adc
xchg
mov
jmp
cmp
inc
and
outsl
xchg
and
clc
cltd
dec
push
scas
in
loope
jne
dec
mov
jae
xchg
aam
js
call
outsb
push
mov
in
popf
xchg
mov
xor
sub
mov
fmull
jns
lds
fcoms
lods
push
and
and
shl
push
cld
jnp
mov
xor
dec
xor
rcl
call
mov
cmp
int3
lret
xchg
xor
xchg
lea
in
mov
inc
jmp
xor
lret
sbb
cmpsl
xchg
mov
inc
sbb
cwtl
mov
fidivrl
out
push
mov
insb
or
jns
imul
xchg
sub
rolb
fnstenv
int
push
pushf
into
mov
xchg
sub
push
mov
mov
lea
inc
std
imul
outsb
popa
imul
negl
pop
sub
xchg
xor
out
dec
lcall
jnp
je
hlt
out
pushf
aam
stos
mov
mov
mov
pushf
mov
mov
mov
xchg
xlat
pop
push
pusha
mov
jno
jp
imul
and
es
cltd
popf
mov
aas
in
testb
xchg
mov
cs
ret
in
mov
lods
xor
ja
xlat
xor
pop
sub
jg
cmpsb
stos
add
add
in
adc
xlat
scas
fs
inc
adc
adc
loopne
movsb
lods
inc
xchg
repnz
mov
adc
add
cltd
xchg
mov
sub
test
ret
xor
js
out
push
pop
dec
xchg
inc
xor
xor
aas
inc
int3
data16
test
lea
cld
shl
jmp
in
dec
jns
mov
repnz
iret
cwtl
scas
xchg
pop
iret
jne
addr16
imul
pop
jp
and
rclb
ret
push
pop
mov
loope
out
push
inc
xchg
and
pop
mov
mov
push
aam
lret
mov
enter
aas
imul
mov
add
pop
out
aad
test
imul
fisubrs
rorl
rcl
stos
in
push
and
and
leave
adc
out
jge
xlat
mov
call
mov
lock
sahf
outsl
jae
pop
mov
out
adc
lret
sub
add
repz
add
xchg
cmpl
insl
sbb
lahf
pop
iret
cmp
pushf
push
sub
xor
xchg
ret
imul
cmp
adc
lahf
add
fisttpll
sub
xor
js
pop
or
push
insl
outsb
cmp
mov
jmp
xor
push
cld
lea
pop
fidivl
pop
jl
xchg
jp
mov
mov
cwtl
dec
add
scas
pop
mov
and
lcall
cmp
push
rorl
andb
imul
add
cld
aas
loopne
adc
int3
shll
icebp
imul
push
mov
inc
test
push
sbb
push
add
ljmp
ss
xchg
int
push
sti
and
shll
push
adc
sub
push
std
daa
shrb
shrb
pop
dec
mov
add
cld
sbb
cmp
into
scas
push
mov
loope
pusha
in
jmp
jle
cmp
movsl
js
pushf
testl
mov
aam
lcall
and
pop
mov
sbb
popa
push
add
lea
rcrl
lods
xchg
jne
loope
daa
cs
mov
insl
popf
outsl
leave
dec
loopne
mov
das
xchg
ret
lcall
and
and
jge
jl
sub
stos
fmul
imul
outsb
xchg
repz
lahf
cmp
into
and
sbb
jb
ljmp
out
pop
sbb
rcrb
fcmovbe
cmp
pop
hlt
mov
test
sub
cmc
scas
ja
ljmp
scas
inc
outsl
xor
pusha
out
nop
test
sbb
xchg
lods
mov
lods
dec
add
scas
pusha
sub
imul
xor
jg
push
nop
rclb
pusha
call
cmp
fs
mov
clc
shll
cmp
dec
testb
jecxz
sub
into
pop
es
inc
inc
dec
bound
sti
and
cmp
add
push
aad
cld
cmp
adc
ja
and
hlt
inc
outsl
xlat
push
jl
cmovbe
or
xchg
adc
inc
popf
xchg
out
xor
or
jp
jle
fstl
mov
arpl
mov
ret
aam
sbb
mov
loop
cmpl
lea
popf
jmp
stos
mov
or
arpl
lea
bndstx
das
xchg
imul
rcrb
xor
dec
add
pushf
orl
sbb
popf
dec
fists
push
lds
enter
dec
pop
cli
pushf
inc
ds
in
in
inc
clc
pusha
cld
jl
lds
aad
or
aas
mov
fstpl
loop
lcall
adc
ja
mov
xor
fs
mov
jne
pop
mov
stos
dec
test
sbb
or
ror
mov
sub
ror
mov
cmp
in
ret
std
xchg
movzbl
aam
sbb
out
jle
test
mov
mov
or
adc
jg
popa
push
or
add
fcom
adc
cmp
adc
adc
mov
jb
mov
aam
rcrb
adc
fcomi
addr16
nop
pop
cmp
int3
hlt
push
or
push
notb
sub
mov
rcrb
pop
cwtl
ljmp
aad
mov
add
add
icebp
xchg
mov
sub
rclb
add
mov
xor
adc
stc
mov
inc
arpl
cld
xchg
scas
addb
xchg
dec
movsl
outsb
aaa
mov
dec
inc
pop
in
test
jne
xor
out
fs
pop
jbe
xchg
pop
lods
fldcw
out
icebp
jno
push
mov
mov
xor
lods
cmp
pop
sub
ficoms
push
push
js
aad
gs
add
xchg
adc
inc
addl
jp
std
jns
pop
aas
icebp
jbe
sar
and
jg
cwtl
xor
dec
lds
cltd
movsl
repnz
xchg
adc
push
adc
je
sbb
fidivs
stos
mov
sub
xor
inc
sti
repnz
test
lcall
aam
inc
mov
adc
in
or
mov
lret
les
cs
in
mov
sbb
or
addr16
or
mov
jo
aad
jecxz
pushf
dec
ret
icebp
jbe
xchg
push
mov
add
or
rcrb
sahf
into
mov
push
jo
imul
andb
popf
mov
sbb
mov
adc
fmull
jno
test
mov
push
std
sbb
nop
filds
aad
mov
scas
sub
inc
mov
out
push
xor
jp
mov
xor
stos
mov
cmc
outsl
jmp
stos
xor
pop
ss
adc
ja
js
scas
xor
clc
mov
icebp
and
cmp
popf
mov
repnz
sub
inc
sbb
cltd
mov
xlat
or
sbb
test
xchg
or
sub
xchg
inc
inc
pushf
dec
stc
mov
add
dec
cld
xorl
push
or
ja
out
outsl
stos
pop
js
pop
jae
pushf
mov
xchg
jecxz
cmp
sbb
stc
add
arpl
iret
icebp
jg
bound
jb
or
popf
xorb
ret
sbb
out
call
or
sahf
mov
es
sub
push
les
and
pop
mov
xor
aad
mov
sahf
mov
sbb
xchg
jge
xor
xchg
and
mov
je
aam
call
stos
mov
imul
add
xchg
and
test
aas
fwait
jecxz
sbb
sbb
xchg
decb
mov
sar
ret
lods
test
xchg
fldl
dec
add
cltd
push
scas
insl
dec
repnz
mov
push
imul
jmp
test
cmp
scas
add
cmpsb
and
mov
inc
call
mov
or
popa
dec
ss
loopne
popf
cmp
dec
fs
and
repz
sub
pusha
js
dec
inc
outsl
mov
push
fdivp
es
or
mov
popa
movsb
lock
mov
in
movl
mov
out
rclb
cs
xchg
or
and
or
pop
out
sub
icebp
ss
fadds
sub
filds
movsl
or
jmp
stos
or
xor
sub
sbb
sbb
sti
dec
add
mov
cld
aad
lods
mov
or
idivb
orb
sbb
adcl
cli
add
push
inc
int3
pop
jno
mov
pop
dec
or
out
in
je
mov
mov
and
fucomip
jge
out
ljmp
sub
loope
xchg
aam
sub
imul
lcall
aaa
push
xchg
push
insl
xchg
jmp
sub
mov
testl
add
pop
xor
mov
mov
inc
sbb
test
cmp
fwait
loop
pop
cld
mov
in
pop
mov
ret
mov
inc
test
pop
cmpsl
push
push
mov
repnz
sub
ret
jmp
sahf
sub
xchg
lock
insb
sub
lea
aas
sub
outsb
gs
jmp
push
sub
hlt
pop
iret
pop
dec
pop
jo
mov
mov
lods
inc
rcll
addb
jl
shl
inc
lea
ljmp
pop
sub
dec
idivl
mov
test
orb
cmc
imul
test
pop
sub
lock
or
fcompl
nop
clc
mov
test
inc
sbb
dec
shlb
fcmovu
lret
lret
vpaddq
jbe
and
pop
xchg
and
out
sbb
cld
mov
sbb
fsubrl
mov
lods
or
repz
jecxz
stos
test
jmp
or
dec
push
dec
mulb
jge
mov
adc
test
sbb
je
popf
and
jb
pop
sti
aad
aaa
jl
xchg
sbb
cmp
stos
xchg
mov
dec
xchg
mov
pushf
ret
jp
xchg
mov
daa
mov
imul
nop
mov
pop
push
and
insb
bswap
mov
icebp
test
int
ds
adc
mov
test
pop
or
imul
xor
pop
push
sub
int3
pusha
popl
rclw
leave
mov
inc
cmp
dec
add
nop
std
pushf
mov
cmp
scas
pop
out
std
test
jle
and
mov
xor
adc
cmc
push
xchg
jae
out
ret
xchg
out
cld
lods
xor
jo
fcoml
sub
movl
pushf
jp
mov
push
aas
and
repnz
jo
pop
lock
popf
push
pop
sub
ret
adc
lods
fbld
stos
lret
aas
inc
adc
mov
ljmp
add
outsl
sub
sub
mov
dec
dec
jno
or
into
jecxz
fadd
daa
lcall
inc
cmpsb
mov
stos
pop
cmp
das
pop
pop
loop
sub
shl
mov
mov
adc
sbb
dec
xor
mov
inc
jns
cmp
or
out
ds
in
jl
ret
shlb
or
stos
and
aas
xchg
lods
pop
adc
or
ljmp
outsl
pop
enter
fbld
cmp
aas
popf
or
add
mov
xor
imulb
dec
bound
popa
orb
or
fisubrl
pop
lret
push
movsl
sbb
int
insl
mov
add
cmp
jo
cltd
sub
movsb
stc
dec
mov
cmp
xor
pop
xor
fisubs
out
jns
xor
fisttps
loope
das
sub
repz
push
enter
push
sahf
add
scas
jge
jnp
pop
sbb
int
jns
fdivs
dec
pushf
mov
dec
mov
dec
or
mov
cmpb
in
xor
xchg
add
addr16
dec
movsb
lcall
jmp
rcr
xor
or
loop
cmp
sbb
shlb
jb
sbb
repz
sahf
pop
xchg
mov
test
xchg
add
push
or
jecxz
fnsave
xchg
paddusw
xchg
push
flds
dec
jmp
sub
mov
ret
xchg
cwtl
aaa
lock
inc
or
scas
mov
pop
mov
pop
xchg
push
and
in
xchg
and
xchg
inc
sub
pushf
or
xchg
fists
push
xchg
in
lods
cmp
adcl
and
std
jae
pop
inc
movsb
jl
cmp
and
iret
jnp
repz
xchg
loop
push
xor
xchg
pop
stc
icebp
cld
adc
nop
sub
add
fistl
mov
outsl
adc
in
adc
sbb
xchg
mov
sub
pusha
repz
inc
jle
dec
jns
emms
aas
notl
stos
pop
dec
jb
incl
mov
or
cs
mov
int3
sbb
adc
adc
mov
sbb
shll
push
repnz
mov
icebp
cmp
xchg
bnd
pushf
scas
in
insb
in
cli
dec
in
xchg
outsb
mov
mov
cmpsb
filds
mov
xlat
mov
dec
sbb
es
xor
pop
ror
pop
stos
and
lock
mov
jmp
imul
push
loopne
dec
cmp
sti
andb
inc
rcr
push
xchg
fildll
adc
jmp
cmp
and
xchg
mov
sbb
es
mov
sbb
push
or
stos
aaa
add
pop
shrl
icebp
sub
mov
shll
mov
fmuls
xchg
aas
scas
gs
sbb
and
cmpsb
ret
loop
mov
xor
sbb
aam
iret
cmpsb
mov
imul
xchg
xchg
call
sbb
fstpl
sub
and
inc
leave
xorl
adc
mov
andl
cmp
jecxz,pt
imul
pusha
mov
mov
icebp
sbb
lods
adc
jne
vxorps
pop
aam
xchg
xchg
mov
xor
sbb
push
push
add
ja
dec
stos
push
and
ficompl
push
repnz
ja
and
gs
popa
sbb
icebp
inc
cmp
outsl
push
jle
out
pusha
ss
enter
loope
push
lock
sbb
or
push
lahf
rcrb
add
xchg
and
xor
mov
add
and
push
cmpl
and
addr16
lret
loop
aad
xchg
movsl
adc
pop
sub
stos
jne
dec
sahf
subb
add
cli
cli
xchg
fldt
loop
mov
dec
outsl
sub
jecxz
nop
mov
pop
jle
neg
sub
insb
mov
mov
bound
mov
push
cmpsl
push
sub
int3
clc
jbe
cmc
xor
dec
mov
aam
cmp
roll
xchg
and
inc
ja
icebp
imul
and
test
mov
sbb
ja
addr16
xchg
push
movsb
and
out
subb
cmc
data16
mov
cwtl
cmpsb
push
xchg
lock
mov
ds
xlat
mov
in
movsb
xchg
sbb
clc
popf
mov
loopne
xor
jns
je
rorb
mov
xchg
movsb
filds
lock
mov
sahf
jae
aad
lods
lods
fwait
sbb
add
jo
lret
repz
mov
out
cmc
std
movsl
mov
movsl
push
add
imul
sbb
data16
xor
cmp
push
loop
mov
pop
loope
fiadds
adcl
addr16
mov
js
jmp
dec
cmpsl
mov
idivb
jnp
lea
into
and
adc
xlat
sbb
cld
dec
mov
dec
cmp
sub
popa
adc
aam
mov
jecxz
fadd
daa
push
lods
cmpsb
jo
jae
scas
gs
pop
push
sbb
xchg
mov
mov
add
bound
insl
cmp
sub
dec
push
dec
jnp
xchg
push
add
jp
jp
sbb
xchg
mov
lret
movsl
xorl
dec
js
sub
imul
gs
mov
sbb
sub
lock
test
in
outsb
outsb
or
testb
xor
cmp
cmp
cmp
popa
xchg
popf
mov
fildl
ds
cmp
negb
cltd
mov
inc
enter
cwtl
out
dec
xor
into
dec
lea
sbb
and
test
sbb
cmpsl
pop
pop
fisttpl
mov
movntq
out
xchg
outsl
xchg
xchg
sub
pop
cmp
jg
push
dec
test
dec
mov
sbb
inc
shr
add
insb
sub
mov
addr16
mov
xchg
aas
jmp
xor
sbb
mov
int
hlt
xchg
sub
sbb
js
ss
push
lds
sub
jno
in
andl
cli
int3
sub
inc
lret
push
xchg
rolb
lock
push
xchg
pushf
pop
cmpsb
xor
jge
pop
mov
mov
daa
dec
rol
sub
mov
mov
cwtl
rcll
int3
mov
lcall
cld
je
jmp
icebp
dec
sub
cmp
sahf
mov
sub
insl
insb
inc
jno
out
mov
into
mov
xor
movsb
push
ret
mov
xor
test
or
jp
adc
test
div
fisubrl
xor
aaa
xorl
movsb
jns
adc
inc
inc
and
sbb
jge
repnz
pop
hlt
inc
scas
sbb
dec
fabs
fsubl
push
xor
cmp
pop
xchg
adc
in
jmp
or
dec
imul
mov
stos
bound
push
jno
ret
xor
pop
repnz
shrl
insb
inc
push
or
outsl
xchg
mov
sub
fsubrs
push
in
pop
and
pop
repz
ret
stos
lret
fstpt
push
sub
sub
test
and
clc
aad
xchg
jle
mov
mov
roll
int
in
mov
mov
fs
fwait
imul
lods
out
cmc
jnp
cld
sub
mulb
jle
sub
js
add
outsb
inc
add
lock
sub
xchg
lea
in
in
sub
mov
pop
cltd
inc
dec
xor
dec
add
shrl
xchg
pushl
mov
loope
pop
fistpll
add
das
imul
inc
cmp
outsb
xchg
inc
pop
stos
pushf
dec
leave
sbb
int3
mov
mov
les
cmp
add
mov
jge
mov
leave
pop
enter
sbb
jge
js
jb
loopne
xor
test
sub
and
adc
lds
jno
xchg
pop
shr
gs
add
dec
ja
int3
add
mov
adc
adc
mov
and
sbb
add
pop
sbb
jle
mov
fsubrs
push
and
aad
mov
and
imul
daa
mov
pop
les
inc
test
mov
jbe
mov
rorb
jmp
sub
mov
scas
movsb
mov
scas
out
lahf
xor
add
iret
and
inc
fwait
in
mov
punpcklwd
push
mov
iret
adcl
pop
add
daa
push
adc
push
js
sarb
movsb
incb
bound
flds
cmpsb
jnp
imul
call
adcb
sub
and
stos
loopne
adc
rorl
dec
jl
out
flds
cli
xchg
ja
add
lret
aam
decl
mov
add
dec
xchg
outsl
inc
sub
lds
je
pusha
popf
xchg
lahf
push
adc
sub
into
adc
stos
add
jns
and
add
ret
xor
jae
xor
rorb
mov
sahf
ror
fsubrp
xchg
fidivl
mov
push
xchg
push
sub
and
divb
ret
call
ss
jne
dec
enter
cmpsb
push
sbb
mov
or
dec
fnop
fs
ret
add
jae
sub
pushf
inc
sarl
sti
pushf
cmp
dec
xchg
daa
jae
pop
cmpsl
stos
fiaddl
pop
or
movsl
xor
and
adc
stos
or
movsl
add
fsubs
add
or
xchg
ficompl
aaa
xchg
loop
popa
push
or
inc
sbb
pop
repnz
inc
xchg
push
ljmp
jp
std
push
cmp
test
and
sahf
leave
push
nop
xor
cmpl
loope
leave
adc
push
lahf
jecxz
and
cmp
ds
outsl
xchg
sbb
incl
mov
inc
or
or
mov
xchg
bound
arpl
mov
mov
or
gs
pushf
jae
adc
icebp
imul
test
dec
cmc
leave
push
repnz
mov
addr16
insb
jb
mov
cmc
mov
movsb
sub
fistpl
pop
int
sub
add
out
jle
lods
pop
aas
jg
push
add
or
fsubrs
adcl
push
pop
mull
lods
mov
mov
jp
out
jno
xchg
or
pop
push
jp
test
mov
addr16
and
clc
push
mov
mov
jg
sbb
adc
add
xchg
pop
shll
je
jge
and
inc
mul
inc
int3
loope
aam
adc
mov
ljmp
test
std
jmp
out
iret
and
into
pop
cli
xchg
dec
sbb
nop
pop
mov
adc
out
stos
add
test
cmp
xchg
rcl
into
andb
push
jl
test
inc
aam
sub
or
sbb
sbb
aaa
jmp
dec
push
pop
xor
pop
pop
popl
mov
sub
lock
or
popaw
out
cmp
pop
repz
cltd
mov
sub
mov
hlt
insl
push
imulb
xor
bound
hlt
sub
and
popf
mov
mov
mov
sbb
aad
push
fs
stc
unpckhps
push
jecxz
out
xlat
repz
push
clc
loopne
pop
mov
adc
cmp
rclb
hlt
dec
shlb
int3
fsub
fistl
imul
dec
mov
or
pop
notl
add
cmp
push
into
pop
shl
mov
sub
mul
pop
inc
lds
lcall
test
enter
push
mov
mov
leave
aas
pop
mov
inc
jg
or
inc
push
repz
ret
cli
rcrb
in
push
mov
adc
jns
add
mov
adc
inc
jb
fsubrs
or
xor
bound
loope
lcall
sar
popf
sub
pop
stos
flds
ret
lea
adc
inc
fidivl
test
jmp
push
imul
pop
mov
or
sub
sbb
pop
imul
cld
xor
fldenv
cmp
cmc
bound
and
sub
test
loop
fwait
adc
push
fs
aam
lcall
in
pushf
cmp
fcomps
or
cs
mov
lret
leave
push
jns
jo
incl
sbb
dec
mov
xor
pop
jno
pop
cwtl
or
std
icebp
jmp
pop
adc
sub
aaa
pop
mov
jae
and
mov
rorb
ss
and
xor
sbb
andl
pushf
dec
jns
dec
xchg
jecxz
cmpsb
push
js
jmp
inc
rol
inc
push
push
leave
xchg
cmp
cmp
mov
add
cmpsl
jo
pop
sub
jl
mov
push
bound
inc
rorl
sbb
ds
mov
imul
push
es
mov
pop
rcrl
push
int3
mov
lods
add
pop
dec
mov
jp
mov
repnz
mov
js
mov
jmp
or
lcall
pop
cmp
add
out
adc
add
loop
mov
dec
or
adc
inc
cli
fidivrl
shll
fistpl
pop
jmp
stos
das
adc
mov
addr16
cltd
adc
daa
pop
mov
mov
frstpm(287
pop
mov
inc
pop
std
adc
dec
rcl
xchg
gs
insl
add
daa
rol
push
xchg
idivb
jne
sub
lea
adc
add
xor
filds
loop
clc
dec
mov
ds
push
xor
nop
cwtl
sar
fsubs
shl
sub
xor
xchg
push
sahf
xor
dec
or
mov
popa
jbe
cmp
jbe
dec
cmp
adc
in
cmc
adc
mov
mov
scas
or
cmp
ret
fisttps
jb
cltd
mov
cmp
clc
xchg
outsl
adc
shlb
fidivrs
push
add
popf
dec
lods
mov
sub
push
cld
inc
mov
fwait
jecxz
mov
lahf
scas
mov
jo
xchg
mov
jo
outsb
hlt
jle
addl
mov
shl
pop
sarb
fbstp
test
lock
testb
mov
push
mov
xor
lahf
mov
nop
sbb
jns
mov
mov
scas
dec
imul
push
fsubl
push
popw
mov
xchg
add
movsl
adc
mov
dec
sbb
mov
bound
aas
call
imul
mov
sbb
outsl
pop
test
mov
movsb
enter
mov
gs
cvtps2pi
jecxz
add
mov
mov
pop
cwtl
xor
dec
test
jbe
insl
jg
pop
dec
cmp
mov
aaa
test
pusha
mov
lock
shlb
mov
cmp
cli
and
and
ficompl
mov
xor
sbb
jb
push
enter
loop
orb
mov
movsl
pop
xchg
push
adc
dec
push
xchg
ljmp
mov
mov
mov
sbbb
mov
ret
jne
adc
cmc
push
or
pop
pop
call
push
xchg
stc
imul
into
fs
dec
mov
aam
mov
pop
nop
or
testb
pop
cmp
push
nop
cmpsl
pop
mov
repz
mov
stc
and
out
jae
add
xchg
mov
and
mov
sbb
sar
icebp
xchg
das
cmpsl
pop
loope
push
jg
mov
ficomps
push
aam
xor
xchg
xlat
aaa
add
adc
xchg
sbb
lea
std
add
stos
lds
cmpb
pop
sub
adc
adc
mov
cmp
mov
pop
scas
das
imul
mov
movsl
mov
xchg
jne
push
movzbl
clc
dec
or
dec
xor
and
rcl
movsl
cmp
lahf
lea
pop
mov
out
loop
mov
sahf
icebp
gs
mov
sub
push
cmp
dec
xor
out
fwait
push
xchg
in
mov
es
dec
or
je
notrack
push
push
nop
jae
test
subl
mov
loop
jl
je
int
inc
adc
push
mov
and
sub
je
or
push
popf
mov
jb
pop
std
sbb
dec
dec
ss
scas
sti
fbstp
xchg
ficoms
inc
pusha
imul
cmpsl
in
lock
xchg
push
mov
insb
fsubs
in
stos
xchg
loop
fcoms
inc
sbb
cmpsb
mov
sub
nop
mov
addr16
aas
mov
lds
xor
inc
mov
sub
cmp
inc
mov
orl
ds
movsl
les
inc
xchg
or
xchg
jl
cltd
repz
mov
stos
xor
sbb
rcll
xor
in
cltd
xchg
ret
or
mov
mov
std
subb
loope
scas
push
in
inc
andl
xchg
pop
xor
sub
xchg
or
test
or
mov
mov
nop
int3
xor
jmp
cld
divl
pop
les
into
enter
xor
inc
xchg
iret
jecxz
inc
in
out
les
mov
mov
cmc
push
rclb
into
cmp
mov
cmpsl
pop
mov
call
cmp
mov
mov
mov
mov
arpl
xor
sbb
mov
inc
arpl
pop
xorl
push
pop
lea
lahf
or
dec
sbb
out
push
cmp
mov
fstl
xor
adc
lret
sbb
push
cmc
mov
cltd
jge
and
pop
or
xchg
roll
xchg
out
cmp
cmp
push
xchg
sub
dec
sarl
or
lock
push
call
mov
mov
ret
sbb
mov
lahf
cmpsb
sub
xchg
rcrl
cs
add
cmc
dec
es
add
pop
pop
gs
leave
outsb
fs
mov
and
lods
mov
je
outsl
dec
mov
xchg
mov
insb
ljmp
sbb
dec
fdivrs
adc
cld
add
fs
pop
pop
nop
fdivl
loope
xor
sti
fildl
ficoml
mov
and
hlt
push
lods
xorb
test
int3
add
add
sbb
data16
outsb
sbb
cmp
inc
and
pop
pushf
mov
add
loop
mov
mov
sbb
sahf
test
insb
dec
stos
push
aaa
add
jg
or
lea
jb
sub
test
rorb
inc
icebp
jg
fwait
insl
or
cli
or
mov
jb
mov
cld
mov
enter
je
das
fisttpl
lods
jp
pusha
enter
fwait
imul
leave
movlps
push
push
aad
xor
or
jae
sahf
clc
mov
mov
ja
and
cmp
push
inc
sbbl
icebp
fcomps
push
ficompl
rol
push
pop
xlat
cmp
fmulp
movsb
add
int
aam
and
cmp
and
jnp
in
into
inc
mov
jae
add
clc
sbb
je
pop
xchg
mov
jge
inc
inc
pop
es
jns
cmpl
repz
push
mov
cmp
pop
add
mov
add
adc
insl
cld
xor
inc
dec
ljmp
cmp
xchg
andl
push
popa
ret
ljmp
rcr
push
lret
call
pop
popf
adc
fs
pop
lcall
imulb
xchg
dec
mov
scas
add
rcrb
rcrb
inc
test
sbb
mov
jmp
xchg
add
mov
jp
jae
lcall
xor
mov
xchg
and
lds
adc
dec
mov
adc
test
adc
pop
lock
xor
mull
pushf
add
test
test
inc
stos
mov
dec
push
aaa
xchg
fadd
pop
icebp
and
push
and
loopne
pushf
xlat
jno
icebp
sbb
inc
fistpl
mov
mov
xchg
add
xorb
sub
ss
fwait
and
push
sbb
daa
lock
clc
jae
in
adc
adc
pop
daa
test
mov
or
enter
lret
outsb
or
fldcw
xor
jl
and
add
bound
mov
lret
jb
sub
cmp
stos
jns
cld
int
add
dec
cmp
pop
and
stos
or
mov
sbbl
mov
movsl
addr16
jnp
jg
sub
aaa
push
xchg
xor
stos
outsb
push
mov
mov
fcompl
pop
loopne
std
addr16
pop
fimull
dec
jno
subl
cmp
push
jp
jg
negl
aaa
test
data16
hlt
cmp
xor
xchg
stos
sahf
js
and
pop
and
fldz
mov
adcb
adc
out
movsb
cmpsb
cltd
mov
fcomps
sub
and
cmp
xchg
jbe
mov
sbb
sti
dec
and
xlat
pop
xchg
cmp
mov
jnp
aam
aaa
add
jge
sbb
jo
add
inc
jns
sbb
popf
pusha
or
and
mov
shlb
call
mov
cmp
scas
dec
ljmp
push
sbb
shrb
call
imul
shlb
daa
rorl
push
dec
outsb
mov
shrl
data16
ret
push
pop
in
mov
out
xchg
mov
inc
jb
jnp
xlat
aam
sub
loop
int3
jecxz
fdivs
and
into
pushf
iret
fildl
jmp
clc
adc
sub
stos
in
pop
addr16
jns
lods
sub
cld
imul
ja
mov
fwait
sbb
mov
das
fs
lods
nop
adc
mov
into
lahf
mov
shrl
mov
xorb
xchg
mov
xor
inc
xchg
nop
or
pop
sbb
add
xor
ja
cmp
loope
icebp
ss
sbb
out
testb
jbe
ja
inc
dec
sbb
out
mov
adc
shll
xchg
jp
cwtl
lahf
or
pop
push
jg
inc
imul
xchg
rcll
arpl
test
jg
push
rcrl
les
mov
cld
stc
xchg
dec
fsubrl
fildl
dec
repnz
mov
aaa
fisttpll
or
pushf
add
andb
xchg
xor
push
add
push
push
inc
adc
hlt
sbb
fdivrl
lahf
leave
insl
aad
xchg
pop
sub
leave
push
cwtl
rcrl
andl
mov
nop
rep
cld
mov
test
in
iret
xchg
jno
cld
popa
nop
in
jl
or
xlat
hlt
fcmovne
mov
lret
push
addl
mov
adc
sub
jle
imul
cmp
dec
add
lret
mov
lret
mov
cmc
out
pusha
les
inc
shll
push
xchg
cmpsb
aam
add
inc
cmpsb
inc
test
int
sbb
adc
test
les
mov
cltd
repnz
xor
clc
movsl
ja
add
lds
fisttpll
pop
ja
jmp
gs
fnsave
addr16
jb
or
mov
leave
test
pop
ficompl
inc
dec
push
xor
push
fcompl
cld
cli
mov
or
out
add
push
fbstp
xorl
push
sbb
mov
andb
ljmp
pop
inc
and
and
and
push
pop
pushf
push
iret
xor
mov
stos
enter
negl
negl
fsubrl
scas
and
imul
push
cmpxchg
sti
sbb
add
mov
cmp
je
mov
arpl
cmp
inc
jecxz,pn
shrb
nop
jle
scas
out
testb
fdivp
pop
sahf
lds
adc
arpl
push
repnz
ret
dec
inc
into
jns
lds
daa
adc
lcall
mov
dec
stc
sbb
in
push
into
mov
outsl
imul
sub
arpl
test
fwait
nop
cmp
cs
outsl
pop
stos
mov
sbb
sbb
mov
sbb
push
jo
cmpl
push
rcll
ds
mov
test
arpl
bound
jge
sbb
bound
and
xchg
lods
rcll
loop
or
fisubrs
push
xor
sti
cmp
jbe
pop
xor
das
inc
pop
mov
adc
push
pop
pushf
adc
or
out
adc
or
cwtl
sub
dec
les
jnp
cmpsb
loopne
enter
cmpsb
add
lods
mov
add
add
mov
dec
pop
pop
xchg
and
test
out
and
addr16
jle
inc
sbb
or
or
cmp
and
pusha
mov
rcrl
mov
inc
fldenv
fsubrs
bound
jb
adc
pop
iret
xchg
jb
int3
les
ljmp
adc
js
cmp
mov
in
jecxz
lret
sub
dec
notb
and
adc
test
mov
xor
push
pop
sbb
shll
orb
pop
mov
sti
fidivs
cwtl
jbe
mov
loop
add
enter
dec
sahf
bound
outsl
and
add
and
xchg
mov
popa
adc
out
mov
xor
mov
scas
mov
mov
loop
imul
popf
fmul
lds
subb
lds
sti
mov
lods
dec
mov
cmp
nop
push
mov
rcr
out
ficoml
jmp
ja
jae
sbb
cmp
jge
mov
aam
clc
or
jp
jecxz
xlat
sbb
scas
mov
mov
fidivrs
or
cmp
push
pop
sbb
pop
jo
push
or
push
into
shlb
repz
mov
sbb
lsl
lcall
negl
dec
or
mov
int3
dec
and
in
clc
inc
jae
andb
jae
mov
xor
dec
fidivl
test
jb
pop
jp
cmp
hlt
outsl
jno
mov
cld
lock
outsb
in
and
sbbl
movsl
insl
dec
mov
mov
into
sub
push
cli
cmpxchg
mov
inc
add
xor
inc
adc
xor
aam
out
push
adc
aad
cld
movsb
popa
aaa
add
mov
mov
in
out
bound
or
inc
test
lea
cld
repz
mov
imul
ror
add
jmp
pop
loop
lock
addr16
push
imul
es
and
and
push
js
push
mov
movsb
aas
mov
adc
repz
pop
pslld
jbe
iret
movsb
pushf
inc
jg
mov
dec
and
rolb
inc
adc
sub
pop
test
push
pop
pop
arpl
mov
repnz
or
and
xchg
add
xor
scas
sarl
pop
cld
imul
mov
pop
stos
pop
push
int3
push
fcomp
dec
sub
push
repz
or
xor
orb
cmp
pop
mov
add
jle
and
lock
stos
push
cltd
pop
fcoms
in
inc
rorb
insb
mov
movsl
cs
fsubs
push
mov
cmp
daa
jmp
lret
cwtl
scas
mov
in
add
outsb
fcmovu
adcl
imul
test
dec
pop
hlt
outsb
xchg
cmpsl
mov
clc
inc
or
dec
inc
xchg
clc
nop
fldt
cmp
mov
nop
cltd
ds
shll
mov
inc
add
mov
fidivs
cld
insl
js
pusha
and
lock
push
aas
mov
xor
jg
into
or
rep
xchg
push
sbb
ss
fildll
jl
and
jnp
andl
cmovno
cmp
add
gs
lcall
bound
rclb
scas
mov
pop
dec
push
add
add
ja
mov
and
inc
sbb
sbbb
adc
sbb
sbb
and
arpl
in
xchg
dec
out
loope
in
lea
push
lret
dec
pop
lea
rol
ror
jae
ror
push
or
popl
lds
mov
hlt
pusha
test
cmp
lds
xor
enter
popf
xorb
insl
xchg
xchg
pop
mov
sbb
push
xchg
fcoml
mov
jmp
xlat
xchg
addr16
mov
addb
mov
sub
xchg
dec
or
pop
rolb
pop
xchg
adc
enter
insl
lods
xor
imull
cld
sub
scas
ret
stc
daa
out
cmc
fcompl
xchg
nop
rcl
push
dec
jmp
gs
xchg
cmp
std
mov
jns
lahf
mov
xor
jnp
sbb
lods
es
ds
pop
pop
int3
mov
inc
xor
push
pop
inc
repnz
mov
cs
dec
add
or
test
fwait
orl
lock
mov
mov
fdivrl
sbb
aam
and
int
cli
hlt
bswap
cmp
mov
call
mov
insl
call
inc
pop
call
xchg
and
fsubl
inc
cwtl
popf
xlat
fistps
dec
adc
jg
inc
in
dec
and
cmp
aam
int3
cltd
adc
push
add
jb
cmp
sbb
cmpsl
movsl
mov
xchg
inc
xor
inc
popf
out
pop
lahf
xchg
fwait
inc
sarb
das
rorl
cmp
ja
fisttps
push
mov
ja
or
or
imulb
lock
aas
sbb
push
cmpsl
mov
cmp
mov
hlt
fcomps
mov
inc
stos
outsl
bound
and
cmp
jno
outsb
fwait
in
mov
rol
ror
mov
mov
loope
and
rclb
adc
sbb
sbb
push
xor
rcll
gs
push
into
jbe
xchg
fiadds
outsb
push
or
pop
jae
int3
cld
inc
push
cmp
mov
mov
nop
inc
push
cmp
bound
mov
mov
mov
cmp
in
and
movsw
pop
jle
mov
int
mov
test
and
out
mov
inc
mov
pop
rclb
jno
dec
mov
xchg
scas
fwait
and
cmp
dec
mov
and
iret
xchg
insb
addr16
mov
jb
imul
sbb
jmp
dec
mov
insl
neg
dec
lret
lret
push
add
sub
jae
lcall
ficompl
and
mov
scas
fdivs
or
jecxz
or
push
inc
mov
test
aaa
pop
xor
lcall
out
cwtl
cmp
das
push
inc
cld
dec
push
stc
scas
sbb
dec
int
out
adc
xchg
push
jbe
xchg
aad
aas
sbb
mov
fwait
mov
xchg
sti
lods
data16
pop
inc
das
sub
sahf
dec
ret
mov
addr16
arpl
popf
clc
inc
sar
push
sub
out
mov
sub
push
std
out
popa
into
roll
cwtl
add
in
and
jno
mov
and
bound
lcall
push
dec
loop
enter
cwtl
adc
add
lods
push
lods
mov
and
in
gs
push
movsb
js
push
push
xchg
das
pop
imul
ret
ret
cwtl
xchg
nop
xor
lcall
mov
jns
xlat
cmpsb
jmp
repnz
sbb
push
insl
mov
and
ss
push
jbe
xor
jo
lret
stos
adc
popa
gs
cmp
rclb
mov
and
cmp
add
faddl
cmp
push
sti
jle
adc
or
loope
mov
test
lcall
jge
mov
lock
adcb
mov
pop
jno
scas
add
repz
cmp
cmpsb
and
dec
idiv
sbb
rcrl
dec
sti
int3
push
add
dec
and
or
pop
sub
fimull
mov
mov
jb
call
or
or
mov
add
cltd
loop
ret
sub
test
jb
or
test
pop
in
cmp
push
shrb
cwtl
cmp
or
cli
xor
inc
arpl
pop
jno
sbb
insl
xor
inc
mov
jb
ja
or
out
loope
or
or
add
fsub
mov
jne
imul
fs
pop
in
mov
fildl
lea
sbb
mov
sub
push
jbe
jne
aam
cmc
mov
mulb
cmp
xchg
les
fdivl
insl
das
std
lahf
outsl
or
std
and
insb
ja
loopne
jp
xchg
fadd
in
test
repz
dec
ffreep
sti
adc
xchg
mov
insl
jecxz
sub
mov
sbb
shl
pop
xchg
mov
cmp
mov
push
push
dec
out
les
insl
push
mov
or
sbb
inc
adc
arpl
jnp
lret
sub
mov
add
jne
sub
test
pusha
mov
inc
cmc
loopne
movsb
dec
add
pop
ret
inc
ret
fsubrl
adc
mov
test
add
loopne
bound
mov
mov
pop
or
scas
jecxz
push
jg
scas
adc
fdivl
mov
sub
sbb
in
add
mov
enter
jp
pop
mov
mov
dec
mov
or
xor
dec
sub
daa
mov
push
jbe
push
mov
arpl
pop
repz
add
aam
jno
repnz
rcrl
cltd
or
sbb
test
xchg
dec
mov
and
sahf
popf
mov
ret
mov
fbld
test
fwait
mov
xor
adc
aad
scas
or
jle
mov
pop
ljmp
les
xchg
push
das
in
add
cs
divl
je
lahf
divb
sub
xchg
mov
test
dec
fidivs
jge
mov
shrb
or
mov
je
pop
ss
push
jbe
jno
leave
pop
jecxz
and
out
pop
jg
or
jge
xor
inc
fmul
jp
sti
ja
adc
mov
sahf
outsb
ja
push
add
and
sbb
or
inc
adc
int
dec
mov
out
mov
cmp
pop
or
sbb
xchg
imull
shll
adc
test
clc
cmp
add
jo
xor
sub
jp
xor
dec
adc
cmc
pop
sarb
sub
sbb
mov
push
js
clc
push
mov
push
mov
test
jle
testl
sub
push
lahf
stc
or
sahf
cmc
lods
pop
dec
and
enter
mov
cmp
enter
std
mov
fiadds
outsl
push
mov
dec
ss
mov
sub
pop
xchg
call
jns
outsl
mov
push
nop
insl
arpl
divl
xchg
test
out
mov
das
adc
aam
mov
sbb
push
jne
cmpb
mov
cli
inc
and
jl
fcmovnb
jae
sub
ds
lods
mov
jae
scas
xor
ljmp
xchg
inc
adcb
jecxz
outsb
and
mov
icebp
and
sbb
das
popf
test
mov
dec
sbbl
pop
xor
jg
mov
adc
xor
push
fmull
repz
in
enter
mov
adc
ja
mov
stc
hlt
je
mov
mov
push
shll
js
lods
xchg
in
insb
dec
pop
ret
imul
push
push
inc
outsl
inc
pop
je
pop
sti
ficoml
pop
and
clc
ret
loop
cmpsl
or
aas
lea
mov
sahf
cmpxchg
or
cmp
sub
cmp
pop
jnp
in
push
jb
pop
sbb
mov
or
add
loopne
sbb
or
outsb
cli
loope
mov
in
mov
sbb
rol
outsl
inc
jnp
jge
inc
xchg
xchg
mov
mov
fbld
sarl
dec
cmpsl
fidivl
stc
mov
or
dec
push
pusha
dec
xor
or
cwtl
jbe
pop
rep
dec
inc
movb
outsb
sbb
lods
push
add
push
dec
sbb
or
sahf
loop
pushf
or
cli
cmpb
lds
test
cmc
adc
adc
sahf
push
iret
jbe
aad
sub
push
in
cmpsl
push
stos
into
mov
fisubs
or
je
sti
fs
add
jb
jnp
addr16
or
int
adc
mov
sbb
adc
xchg
mov
scas
push
stos
arpl
test
lret
jge
nop
sbb
test
loope
loope
inc
and
hlt
mov
sbb
xchg
leave
sub
int3
cmp
negb
adc
das
or
inc
adc
imul
sahf
adc
mov
add
add
sahf
jecxz
or
fldl
dec
cmpb
clc
aas
ret
adc
aaa
cmp
mov
sbb
push
mov
cmp
mov
cmc
push
cmpsl
ja
jo
xchg
push
sar
cmp
push
lret
mov
xor
fmull
sarb
pop
iret
scas
in
sub
xchg
sbb
lds
xor
cmp
dec
mov
jns
std
jle
mov
scas
fistpll
jmp
mov
mov
dec
nop
or
int
adc
rclb
scas
nop
add
cwtl
bound
outsl
jmp
push
std
jo
in
fwait
xorb
pop
bound
loopne
popa
ret
sti
clc
sbbb
xor
push
mov
dec
mov
jle
imulb
cmp
xchg
int3
push
lods
sub
jmp
out
pop
push
ljmp
lods
call
pop
jns
dec
enter
div
pop
jnp
push
aaa
xlat
lret
push
dec
aam
lods
mov
enter
push
push
jecxz
mov
in
cmp
int
mov
lret
mov
dec
test
push
jle
mov
xchg
cwtl
fdivrs
inc
xlat
pop
or
inc
cmp
stos
push
inc
test
insl
stos
jae
cmp
push
inc
sub
sarl
and
pop
pop
out
jg
in
add
aam
loopne
cmp
add
das
xor
pop
aaa
dec
sbb
mov
cltd
pop
push
inc
int3
jp
mov
test
mov
pop
dec
pop
sbb
pop
push
test
add
mov
jae
loop
dec
ds
sti
std
faddl
push
rorl
cld
mov
andl
fchs
test
inc
sarl
in
pop
loope
ret
and
adc
and
push
mov
push
xorb
cmp
mov
insb
jb
xorl
in
inc
inc
jbe
push
xchg
mov
inc
adcl
add
ss
dec
or
movl
ljmp
fcmovnbe
lahf
mov
and
mov
cmpb
enter
pop
icebp
jg
lds
stos
data16
rcrl
bound
mov
jo
sbb
xchg
pop
sub
push
pop
movsb
pop
jae
sub
stc
fprem
jbe
cmpsl
orl
dec
ror
xchg
cmp
mov
mov
scas
cmpsl
test
adc
jecxz
in
pop
fimuls
mov
hlt
scas
in
xchg
or
mov
test
test
orb
or
les
mov
divb
mov
mov
arpl
repnz
stos
mov
stos
into
ret
sub
xor
ret
ret
roll
fsubrs
or
cld
add
adcl
jnp
pop
ljmp
inc
mov
pop
shrl
in
pushf
jb
pop
mov
add
push
jbe
mov
mov
ja
jne
pop
test
or
fcomps
mov
jl
je
inc
lret
popf
ficomps
adc
mov
rcl
mov
aam
movsl
pop
stos
bound
dec
incb
sti
xor
jae
xchg
mov
push
jecxz
and
fimuls
jmp
dec
insb
and
fcomps
pop
sbb
imul
jecxz
mov
fsts
sub
jns
aam
sti
sub
push
fsin
scas
jnp
shlb
jl
rolb
mov
in
je
push
and
lret
cmp
fscale
pop
pop
mov
movsb
mov
mov
push
jmp
cmc
std
inc
inc
sub
cmpsl
xchg
cmc
mov
sahf
movsb
jle
sbb
sub
cltd
loop
jo
loop
sub
jae
mov
xlat
add
inc
xor
push
sti
sbb
sub
mov
cmovae
push
movsl
int
repz
cmp
cmc
loopne
add
lods
leave
hlt
xchg
das
or
adc
sub
cmp
scas
or
cmp
pop
push
pop
push
aaa
cli
inc
mov
out
sub
and
jno
pop
mov
cmp
movsl
jo
inc
push
pushf
jecxz
das
movsb
mov
mov
jb,pn
fwait
lret
hlt
mov
clc
mov
push
enter
test
jo
out
ds
popf
pop
scas
cmp
pop
ret
push
jmp
jg
or
cld
mov
inc
mov
jns
loopne
dec
enter
mov
cmp
fsub
mov
jle
or
and
inc
repnz
xor
fiaddl
push
cltd
rolb
xchg
cmp
sub
into
nop
mov
pop
jae
fucomi
cmp
roll
add
or
xchg
int3
fsubl
mov
mov
mov
or
adc
jbe
sbb
mov
lods
cwtl
xor
sahf
lods
fst
inc
jle
iret
mov
das
mov
decl
jp
in
xor
mov
rcrl
loopne
lods
inc
or
push
outsb
popa
in
repnz
adc
dec
lds
icebp
out
mov
clc
in
and
and
stc
xchg
fcoms
in
js
mov
addb
enter
add
xchg
rcl
int3
push
xor
in
cmpsb
cltd
fisubs
pop
loopne
mov
lds
xchg
mov
push
sbb
inc
jns
inc
inc
push
loop
mov
sbb
xchg
cmpb
aam
call
aaa
sbb
mov
inc
dec
in
cmp
and
jbe
mov
loopne
pop
push
sbb
addl
xor
xor
add
fdivrs
test
notrack
sbb
sbb
popa
or
xchg
aam
mov
movsl
xchg
cmpl
mov
xchg
out
mov
push
addl
hlt
jnp
or
push
scas
fnstsw
mov
inc
divb
ljmp
xor
shlb
out
shl
loop
cmp
jmp
jmp
push
cmp
cmp
in
jae
jl
push
fidivs
ffreep
lods
jle
sti
or
mov
loope
incb
push
addb
jge
mov
or
dec
push
inc
and
ss
mov
dec
cmpxchg
and
stos
outsb
aas
cmp
adc
and
xor
pop
lods
insb
mov
mov
fs
bound
lret
jg
sbb
in
ds
xchg
lea
push
test
imul
pop
cmc
mov
inc
call
dec
cmp
iret
shll
nop
imull
xchg
inc
stc
hlt
jbe
popa
jp
ja
mov
add
outsl
and
sbb
shlb
pop
call
loop
adc
sub
add
sti
out
jle
data16
mov
dec
dec
cltd
imul
push
jecxz
or
outsl
ja
lods
xor
int
mov
push
pop
or
adc
clc
pop
xchg
iret
jo
xor
ja
mov
loope
push
mov
jae
jg
inc
pop
cmc
mov
jmp
dec
fildl
add
jne
push
cwtl
das
mov
push
dec
dec
push
movsl
inc
sub
arpl
mov
fnstcw
repz
and
jns
jl
bnd
mov
stos
dec
jns
mov
ljmp
icebp
aaa
dec
in
lds
daa
sub
cwtl
dec
sub
lea
dec
cmp
jne
leave
push
push
mov
adc
mov
jl
xchg
pop
cmp
push
out
jle
mov
stos
add
add
ret
or
adc
icebp
jle
aas
pop
mov
fildl
test
push
pusha
fwait
jnp
scas
popf
sub
in
or
ret
push
xorb
add
in
lods
cmpsb
es
scas
fs
mov
inc
jbe
inc
notl
les
fnstenv
cli
jb
sahf
in
inc
arpl
mov
loope
or
xchg
es
nop
lahf
or
out
fistps
and
rorb
test
dec
or
loope
adcb
leave
xor
xor
not
das
lret
in
popf
jno
push
and
pop
add
inc
inc
das
stos
les
js
leave
aaa
loope
adc
mov
lcall
and
sub
mov
mov
push
dec
sti
sbb
jl
and
adc
ss
mov
out
jg
add
ss
ja
add
inc
jo
cwtl
stc
cwtl
imul
mov
mov
jmp
xchg
and
bound
and
into
or
pop
mov
or
scas
cmp
sbb
sub
lods
popa
mov
shr
jp
outsl
pop
push
xchg
ja
add
cs
out
dec
and
std
leave
adc
addr16
pop
push
insb
mov
lahf
incb
mov
jnp
or
pop
sub
sub
divb
ds
jo
shr
cmp
out
ret
jmp
pop
cmp
add
test
inc
mov
and
inc
subl
push
pop
int
in
xor
out
xchg
jecxz
xchg
ljmp
gs
xlat
pop
jmp
dec
add
jo
imul
pop
fildl
pop
lcall
xlat
cwtl
insb
leave
loop
add
cld
andl
xor
mov
imul
push
and
or
sarb
and
rcll
fildll
add
into
add
mov
inc
shrl
mov
leave
push
notb
dec
push
jmp
push
inc
loop
scas
repnz
lea
and
and
cmpsl
pop
jg
mov
mov
pop
fdivrl
cmc
test
sbb
pop
sub
adc
jge
push
test
mov
xlat
xor
jae
pop
cmp
imul
icebp
sbb
jae
xor
pop
mov
hlt
mov
aad
jmp
add
adc
jge
aas
and
test
add
mov
daa
pop
pop
mov
sbb
sbb
out
jbe
je
mov
aam
loop
jl
dec
cli
and
dec
inc
add
in
shrb
inc
aaa
fldl2e
outsl
or
cmp
xchg
sub
ljmp
andb
mov
push
lods
clc
out
push
push
mov
js
loopne
inc
in
cwtl
insb
aad
mov
sahf
in
inc
mov
or
xchg
xor
xor
dec
popa
fwait
popl
lret
xchg
aas
jnp
xor
sti
pop
pop
or
shll
dec
jno
iret
push
sahf
clc
mov
cmp
stos
mov
or
jnp
mov
enter
push
rclb
adc
out
xchg
mov
mov
mov
dec
and
into
mov
mov
adc
enter
push
lret
addr16
add
xor
jmp
dec
pop
test
sub
cltd
dec
fstl
adc
pop
or
xchg
fwait
mov
xchg
ficoms
mov
ds
ret
mov
push
lea
mov
hlt
dec
pop
pop
sti
daa
sahf
nop
ss
hlt
out
jnp
rclb
dec
jp
or
and
jno
sub
inc
imul
add
inc
push
jns
mov
add
cmp
out
lea
into
js
test
fsts
sub
lock
out
add
je
inc
push
pop
xchg
jbe
mov
and
movsl
scas
push
mov
fbstp
xchg
push
test
mov
subb
and
fptan
ret
mov
divb
jge
fwait
clc
cmpsl
aam
lret
adc
push
cld
scas
stos
cli
xchg
enter
mov
sub
dec
aam
std
fiadds
dec
popa
xchg
cmpsl
ret
out
cmp
push
push
push
mov
or
out
xor
fcoml
and
jno
popf
push
jne
mov
in
das
fmulp
aaa
cwtl
pop
sub
mov
or
inc
orl
adc
or
cmp
sbb
pop
cmp
repnz
sub
cmp
jae
ficomps
cwtl
jl
xchg
lea
dec
dec
jl
scas
add
cmpsb
adc
das
das
jno
xor
arpl
xor
mov
fwait
add
pushf
cmc
dec
sub
outsb
pushf
mov
mov
adc
xchg
cmc
sbb
cltd
in
testl
js
subl
stc
dec
xlat
popf
rorb
out
cmpsl
push
pushf
cmp
imul
inc
mov
ret
mov
lods
shlb
jns
adc
pushf
cs
lea
ret
rcrb
inc
arpl
ljmp
pop
lods
mov
lret
xor
xchg
fsubs
and
cld
and
adc
inc
dec
or
aaa
xor
pushf
sub
in
lods
fdivs
pop
jmp
imul
pop
xchg
loopne
mulb
push
lea
pop
into
mov
loopne
popf
dec
bts
mov
loop
aam
out
and
xchg
sbb
xchg
xchg
lcall
repnz
outsb
ja
dec
add
dec
es
nop
dec
jne
and
lds
mov
wrmsr
push
aad
in
push
mov
jg
xchg
insl
into
pop
arpl
lea
dec
and
in
mov
movswl
jg
pop
mov
cmp
pushf
jne
idivl
xchg
mov
es
mov
enter
push
jae
pop
push
xchg
pop
shrl
jno
aad
inc
int
out
mov
outsb
sbb
aam
imul
mov
push
add
or
lahf
shll
xchg
insb
mov
lock
fidivs
or
sub
sahf
jnp
or
lcall
push
insl
stc
sub
add
idiv
mov
push
sahf
xor
lret
mov
jb
mov
fisubs
jns
dec
ja
cmp
in
test
ret
mov
or
movsl
test
sbb
mov
outsb
icebp
decl
ljmp
and
adc
pop
sub
popf
and
rolb
pop
mov
jmp
std
stc
es
mov
or
enter
dec
repnz
cmp
sub
xchg
push
mov
or
push
ja
insl
mov
dec
loope
or
rorl
loope
out
pop
adc
sub
in
inc
call
pop
loope
inc
adc
lods
or
push
bound
lcall
nop
lds
leave
lret
xchg
repz
mov
push
push
push
inc
out
nop
pop
jb
or
cmp
hlt
mov
in
andl
mov
loop
stos
out
test
push
notl
testb
mov
lahf
pop
push
push
mov
lcall
std
sahf
out
mov
push
xchg
lea
sbb
mov
dec
repz
adc
icebp
jmp
mov
mov
insb
jno
es
js
sahf
sub
das
insb
testl
inc
mov
sub
dec
je
pushf
dec
push
test
popa
fwait
jp
mov
jmp
lods
inc
lds
inc
jns
fldenv
or
test
sbb
mov
cmpsb
lds
jae
jns
lcall
fcmovbe
fidivrs
mov
fmull
fidivl
cmp
push
adc
adc
ret
xchg
jns
sbbb
lock
imul
dec
dec
nop
ficoml
scas
pop
push
andb
decl
lds
dec
addb
idivl
xchg
cld
sub
lcall
jmp
inc
jge
mov
cs
dec
cmp
psraw
lahf
cmpsb
mov
adc
in
or
es
dec
cmp
adc
xchg
jae
pop
test
scas
or
idivl
push
inc
fcom
cs
dec
cli
shr
add
pop
xor
mov
sub
sbb
sub
bound
inc
xor
addb
das
inc
decb
call
pop
mov
repz
inc
into
cmp
subb
cmp
lret
loopne
xchg
daa
sbb
adc
js
int3
ret
and
popf
push
cmp
mov
sub
test
pop
aam
ret
cmpb
xor
mov
cmp
fmull
stos
aas
sub
push
cmp
lods
fsubs
pop
xlat
outsb
mov
pop
scas
jmp
lahf
fidivs
jo
jbe
std
cs
cwtl
popa
fdivrp
pusha
rcrb
adc
sahf
push
insl
ljmp
and
mov
enter
popf
cwtl
xlat
scas
test
js
xchg
dec
jp
fnstsw
lea
mov
inc
imul
sbb
jno
pushf
inc
sbb
in
ret
out
cmp
sub
movsb
and
fdivrl
out
out
inc
mov
lahf
adc
sahf
lea
cltd
ljmp
mov
push
movsl
jbe
insl
test
insb
hlt
inc
dec
jbe
ljmp
lret
mov
or
pop
pop
or
dec
sub
ja
sbb
xor
sub
shll
push
mov
imul
lods
or
out
movsl
lahf
xor
push
cmp
add
divl
jmp
addr16
and
cs
mov
lds
fidivrl
push
sub
xlat
push
cwtl
in
cltd
xor
inc
mov
or
test
pop
ret
xchg
call
mov
lea
cmpsb
cwtl
pusha
lret
inc
xchg
mov
out
dec
cmp
cmp
xchg
ds
test
aaa
mov
scas
pop
lods
jne
push
lcall
cmp
popa
addl
pop
rolb
test
outsl
pop
lods
rorl
fbld
in
adc
mov
cmp
fsubs
pop
jge
pop
ror
call
inc
loope
popa
jg
or
mov
sub
xchg
xchg
dec
daa
pop
call
pop
push
mov
pushf
push
jne
out
xor
cli
jge
pop
jg
shrb
sbb
xor
arpl
push
addr16
mov
and
test
movsl
cld
mov
mov
or
xchg
imulb
and
cli
stc
sub
stos
xchg
icebp
mov
adcl
je
jl
add
outsl
push
push
mov
and
les
outsb
fwait
or
pop
cmpsl
aaa
scas
orb
fdivrl
lods
dec
lods
xor
stos
repz
nop
cmp
inc
outsl
loop
xchg
pop
mov
movsl
adc
add
add
rcll
mov
scas
jae
cmpsl
lods
sub
in
cmp
ljmpw
sbb
pop
inc
mov
sub
stos
fisubrs
sub
gs
sbb
pop
aaa
jg
mov
cmp
js
pop
xor
mov
sub
cmc
popa
mov
sarl
mov
adc
loope
mov
mov
dec
sub
aas
inc
mov
in
loop
xchg
push
cmpsl
test
movsl
push
push
pushf
push
pop
rorl
add
lret
cmpsl
cmp
dec
or
popa
push
pop
mov
out
xchg
mov
cld
imul
push
add
out
jge
jbe
dec
add
in
std
sbb
stos
sbb
dec
push
sbbl
cmp
adc
repz
out
lahf
das
popf
movsl
lods
lret
in
insl
fildl
fisttpll
xor
ljmp
cmpsl
add
cmp
loopne
loop
inc
jl
sbb
lea
jne
imul
xor
adc
or
mov
jge
pop
leave
je
hlt
pop
fisubrs
mov
out
mov
sahf
mov
jae
popf
mov
and
les
push
xchg
cmp
test
arpl
sub
push
push
lds
call
inc
aam
or
or
pusha
push
imul
jl
cwtl
and
jmp
rorb
pop
dec
or
pop
shlb
inc
adc
mov
inc
mov
ficoml
jbe
fdivrl
aam
push
cmc
test
mov
inc
aaa
mov
push
or
xor
cmp
pop
sbb
rcrb
mov
jl
addr16
shll
xorb
push
test
icebp
mov
sbb
inc
mov
jmp
es
mov
pop
push
adc
test
sub
jns
push
sahf
std
data16
pop
fiaddl
out
gs
in
lods
sbb
adc
in
and
xchg
sahf
cltd
popa
vpinsrb
cli
and
add
cmpsb
fsubrs
rcl
mov
adc
mov
mov
pop
push
lahf
repz
pushl
mov
int
sahf
sbb
pop
jmp
mov
int3
sbb
sub
jo
sahf
outsb
cltd
push
dec
pop
jle
stc
jnp
mov
inc
pop
roll
in
jmp
lret
or
in
stos
mov
mov
add
scas
mov
lds
ss
orl
adc
or
cmp
mov
sub
jb
add
stc
inc
push
cltd
mov
and
ljmp
xchg
pop
dec
mov
fiaddl
sub
or
push
mov
adc
mov
dec
ret
mov
adc
cmp
jne
sub
out
inc
mov
sub
int3
mov
movsl
add
inc
jnp
fcomp
mov
pop
out
mov
pop
out
inc
fildll
add
jmp
jo
mov
lahf
cmp
or
cwtl
jno
xchg
lods
pop
or
mov
or
mov
ds
or
call
ja
push
out
jns
orl
xor
dec
cmp
stos
xchg
outsl
les
or
adc
pop
dec
nop
pop
jg
ret
fimull
xlat
loop
int
mov
xlat
xor
pop
jmp
dec
ret
shr
dec
mov
add
shll
push
jg
ss
mov
or
leave
jge
movsb
scas
sbb
jo
lea
pusha
in
jge
xchg
movsl
mov
sahf
mov
lret
sub
lock
shll
cmp
mov
jno
int
fistpll
inc
test
mov
sub
pop
pop
xor
enter
push
sbb
add
fsub
loopne
lcall
adc
xor
movsb
xchg
aam
fadd
aaa
mov
popf
or
xchg
jecxz
pop
add
or
or
test
data16
les
adc
or
mov
push
leave
mov
pop
mov
insl
add
test
insb
popf
daa
bound
arpl
outsb
xchg
pop
jno
in
lret
js
decl
mov
mov
or
mov
xchg
mov
dec
movsl
test
sub
pop
push
lcall
pop
and
out
hlt
cmp
add
daa
push
aam
rcrl
adc
push
xchg
sbb
mov
imul
and
outsb
add
pop
sub
jmp
out
fsubrp
mov
mov
jne
add
loope
xchg
sbb
loop
test
fsubl
push
push
pushf
repnz
in
jecxz
sarb
jbe
cmp
mov
in
jo
adc
lock
pop
mov
cld
testb
gs
in
ss
les
pop
loop
inc
adc
jo
aas
scas
fldl
mov
inc
pop
mov
jecxz
xor
mov
pop
lods
lods
jmp
je
mov
out
outsl
push
sarl
lahf
cs
jge
lds
pop
xor
outsb
mov
or
adc
shll
jge
repnz
mov
loop
fstl
cmc
add
loope
cltd
bndldx
sbb
imul
inc
mov
xlat
pusha
bound
xor
aas
sub
pop
mov
sbb
mov
sbb
out
pop
in
pushf
adc
sub
pop
push
xchg
jne
cmp
and
cmp
imul
and
sbbb
sarl
data16
pop
push
sahf
lahf
lods
aam
jns
faddp
push
xlat
scas
jp
xchg
dec
mov
stc
inc
pop
sbb
mov
into
out
shlb
sub
mov
sti
cmpsl
jb
push
pop
adc
fdivs
and
push
fmull
jle
ljmp
rep
mov
popf
push
adc
mov
pop
cs
sbb
aaa
adc
inc
mov
test
xor
pop
sbb
es
sbb
and
lret
in
dec
xor
mov
xchg
add
jecxz
andl
mov
clc
cmp
sbb
sbb
and
xchg
cwtl
sbb
sti
loope
fwait
push
jge
jno
jae
dec
lods
das
das
jg
lret
xchg
or
jne
and
movsb
into
jg
aam
xchg
pop
push
mov
and
loopne
pop
aam
out
movsb
jo
lcall
xor
ficomps
test
scas
adcb
push
sahf
jns
sahf
push
mov
xchg
mov
outsb
pop
je
mov
sub
out
xor
rcrl
lret
es
ret
cmp
bound
rolb
cmpsb
popa
jae
lcall
push
das
inc
ret
stos
inc
imull
js
js
pop
push
mov
pop
gs
outsl
scas
icebp
adc
inc
scas
jno
or
popa
pop
call
stos
or
jbe
cmp
and
addr16
pop
stc
fs
and
mov
fsts
dec
stos
sarl
fdivs
mov
fucomi
fnstenv
cmp
rorb
jnp
imull
aad
push
movsl
in
add
loope
dec
mov
pop
cmp
sbb
pop
incl
in
inc
test
push
adc
sub
dec
lods
imul
pop
jno
add
in
mov
cmp
fildl
mov
dec
popf
fistpl
cmp
call
push
fwait
pop
std
sbb
out
cltd
hlt
fwait
cld
movzwl
mov
shll
jb
repnz
aam
orps
add
xchg
sbb
push
jb
sub
push
incb
mov
daa
jns
testb
popf
xor
cmpsb
xchg
xor
fwait
mov
aaa
imul
push
gs
push
lods
sub
repz
arpl
repz
lock
add
push
popf
int
xor
mov
fsts
out
test
faddl
pop
scas
dec
std
jns
in
push
xlat
sbb
dec
mov
mov
add
sbb
cmpsl
fs
movsb
rolb
xor
inc
mov
ret
mov
mov
icebp
cmp
cltd
mov
scas
dec
sbb
jb
inc
pop
mov
or
add
rcl
into
add
add
pop
aam
sbb
rorb
xlat
in
cltd
pop
arpl
mov
fstpl
cld
ljmp
xor
or
xor
mov
mov
sbb
repnz
push
mov
leave
lea
jl
pusha
lret
sti
push
xchg
or
cltd
scas
jg
sub
cmp
add
inc
push
adc
push
push
or
and
insb
pop
mov
xchg
mov
inc
lods
cld
jle
test
mov
cwtl
aad
jno
scas
jno
mov
dec
fwait
push
insb
pop
dec
mov
dec
clc
mov
fmull
call
cmp
in
insb
jo
stos
jnp
fdivs
jbe
push
pop
mov
addb
pop
cmovg
sub
sbb
std
push
fbld
inc
clc
xchg
data16
lods
push
add
insl
lds
push
jge
iret
adc
test
mov
mov
add
add
dec
push
dec
mov
test
inc
pushf
shlb
mov
mov
jb
adc
out
arpl
xor
or
dec
lods
sbb
rorb
xlat
insb
jno
cmc
push
sti
lods
mov
stc
pop
and
fimuls
mov
push
xor
roll
jle
jp
out
pop
out
fstpl
leave
mov
xor
xchg
shll
push
cwtl
xchg
xchg
or
or
pusha
jge
sbb
xor
stos
mov
mov
jmp
call
in
popa
cmpsb
mov
pop
pop
jg
xor
shrb
es
dec
movsl
in
je
es
lods
sbb
sub
out
les
mov
out
push
stos
lods
dec
inc
mov
or
xchg
faddl
sub
std
je
jae
rorl
pop
xchg
scas
or
push
shr
xchg
dec
lcall
sub
push
rolb
int3
repz
dec
and
cli
push
adc
cmp
or
shlb
psrlw
jecxz
popa
data16
lcall
or
mov
imul
inc
mov
loopne
cmpb
jp
or
sysret
xchg
loope
mov
or
mov
lds
imul
in
add
mov
jnp
enter
xchg
inc
leave
int3
ja
lret
es
mov
repz
cmp
mov
rorb
mov
sbb
sub
leave
pusha
fsubs
roll
inc
fisubrl
xor
mov
ret
cs
push
jno
ficompl
sti
push
pop
lcall
mov
jae
xchg
mov
movsl
and
imul
jp
fidivrl
adc
pushl
xchg
adc
and
mov
stos
xlat
add
mov
pop
cmp
mov
popa
sub
rcrl
or
dec
mov
outsb
test
mov
lcall
fdiv
in
ret
dec
cmpb
mov
push
insl
push
mov
inc
fldl
fmul
fwait
mov
dec
loop
ljmp
insb
inc
mov
fidivl
mov
jbe
mov
sbb
je
xchg
push
jb,pt
mov
jl
mov
cli
cmpsb
xchg
sar
inc
push
ljmp
clc
mov
es
pushf
xchg
ret
pop
lahf
ds
rcll
xchg
mov
gs
repnz
push
out
cmpsl
mov
jle
mov
ror
add
dec
mov
inc
movsl
mov
mov
lds
inc
lret
fwait
sub
movl
icebp
cmp
jge,pn
or
sub
mov
aad
jge
sarb
lret
aad
pop
sbb
mov
jne
pop
adc
push
fcoms
and
xchg
pop
mov
les
loop
xor
cmc
add
icebp
and
fwait
xor
add
jns
insb
mov
add
ret
pop
test
mov
pop
ret
shr
xchg
sub
arpl
mov
jns
cltd
out
push
push
sub
dec
fsubs
loop
test
sub
sub
jg
aas
mov
cld
imul
mov
cltd
inc
loopne
add
jl
dec
mov
mov
sbb
jnp
sti
icebp
jne
fnstcw
adc
pusha
jne
sbbb
icebp
ss
mov
xor
fadds
rolb
and
adc
insl
fs
fidivl
cli
adc
scas
dec
insb
js
pushf
xchg
adc
in
aam
into
dec
outsb
aam
arpl
pusha
scas
dec
repnz
push
xchg
aaa
mov
inc
aas
fwait
fwait
int3
outsb
cli
mov
xor
gs
cmp
cltd
out
lret
jo,pn
loope
cmpl
xchg
stos
enter
je
ret
pop
dec
dec
sbb
inc
testl
mov
jg
std
leave
mov
jg
xchg
lods
fcoms
push
adc
mov
clc
jmp
cli
test
jg
adc
loop
icebp
pushf
adc
mov
ffreep
xor
xorb
mov
loopne
stc
mov
sbb
int3
mov
and
mov
mov
fistl
imul
dec
ret
sarb
lcall
in
outsl
dec
cmpsb
cmp
pusha
sti
loopne
adc
popf
push
pop
push
mov
int
std
jl
mov
js
stos
inc
sub
lods
je
pop
scas
insl
inc
or
mov
and
push
pop
out
lea
add
inc
mov
sub
in
imul
lcall
popf
out
inc
cmc
xor
jbe
push
mov
les
pushf
xlat
sahf
add
lahf
and
icebp
inc
mov
mov
xlat
fsubr
mov
jmp
popa
lds
cmp
out
lea
stos
es
imul
adc
scas
dec
mov
mul
push
push
mov
push
rclb
repz
mov
mov
and
jg
mov
pop
xlat
into
inc
mov
imull
aaa
mov
mov
shl
xchg
sub
mov
push
sub
test
sbb
scas
mulb
xor
add
cltd
inc
test
mov
lds
push
and
adc
mov
lods
addr16
push
in
insb
push
jnp
rolb
jno
mov
aaa
xor
cmpsl
push
fbstp
push
stos
jl
popl
ret
loop
cltd
movsl
sbb
adcl
fdivl
mov
add
test
add
xorb
dec
or
sbb
xchg
adc
inc
cmpsb
mov
pop
or
xchg
gs
mov
fsubl
bound
xchg
call
mov
adc
negl
sti
fisubs
xor
icebp
mov
outsb
ja
cmp
cmp
push
mov
xchg
pop
sbb
les
and
push
or
iret
dec
or
mov
lea
adc
sbb
mov
cmc
test
dec
add
mov
add
insb
push
add
sbb
push
mov
into
pop
aas
insb
aas
clc
adc
xor
inc
repnz
cli
test
out
xchg
push
lret
ss
clc
aam
cmpsl
fdiv
jl
out
cmp
std
fnstenv
xor
in
fwait
jl
lods
mov
mov
jle
xor
xor
mov
adc
adc
mov
fdivl
pushf
adcb
dec
xor
movsl
shrb
mov
lock
es
aaa
xchg
or
mov
push
sub
test
dec
movsb
inc
ja
xchg
out
jae
or
xchg
sbb
pop
mov
lcall
fstps
cmp
pusha
mov
or
xchg
jno
dec
add
and
and
push
sbb
xchg
xchg
and
jb
and
and
dec
jnp
jmp
pop
or
enter
loope
jmp
mov
pop
inc
sub
leave
je
mov
xor
outsl
ret
pop
lahf
or
repz
or
or
insb
out
cmp
xor
je
jmp
push
lock
mov
in
sbb
out
rcrb
pusha
loop
test
xor
mov
fisttps
jb
xchg
addr16
mov
sbb
dec
mov
fsubs
ret
in
push
les
movsb
jne
aam
lahf
xlat
lcall
addr16
or
mov
mov
pushf
mov
sub
jp
outsl
aam
fwait
and
dec
or
add
dec
mov
cld
mov
or
xlat
arpl
lcall
xchg
sub
jmp
and
mov
shrl
lds
adc
push
lods
jl
je
cmpsl
in
mov
jne
pop
jmp
xchg
adc
rcll
loop
test
jae
in
insb
or
pushf
adc
dec
lock
or
mov
mov
fwait
outsb
xor
gs
sbb
pop
mov
jmp
mov
lahf
stos
and
incb
dec
sbb
fadd
dec
dec
push
rolb
cmpsb
push
adc
lahf
and
mov
or
mov
cltd
test
push
mov
sub
add
into
xchg
cmp
mov
xor
aad
cli
adc
fisubrs
loop
cmp
dec
mov
sbb
jmp
xor
add
jge
leave
sahf
insl
mov
xor
hlt
test
stos
pop
xchg
pushf
inc
out
cmp
fcmovnu
lods
inc
call
lahf
popa
lret
mov
sti
rcrb
push
movsl
sbb
out
jg
in
scas
or
mov
mov
aam
stos
jae
shll
xchg
xchg
pop
and
stc
out
fstpl
sbb
outsl
inc
lret
jmp
fs
sub
or
ret
in
lods
stos
lods
stc
cmpsb
shrl
sub
mov
mov
dec
jp
shlb
inc
push
mov
ss
jo
fldl
xchg
pop
fcomps
or
mov
inc
adc
mov
outsb
arpl
xor
sub
rolb
and
adc
imul
in
push
call
pop
adc
mov
fstsw
adc
je
mov
in
sahf
gs
xchg
mov
test
sub
adc
rclb
lahf
or
xchg
inc
mov
and
cltd
je
xchg
jno
mov
mov
pop
dec
popf
and
cld
hlt
orb
xor
cmp
pushw
cmp
add
and
insl
lods
scas
xchg
cmp
int
adc
shll
dec
pop
adc
fsubp
pop
movsl
jno
and
cmp
mov
pop
call
scas
dec
xchg
push
mov
pop
aas
cli
pusha
ja
pop
cmc
lahf
jb
xchg
insl
sbb
paddw
inc
cmp
inc
jl
out
cmpsb
pop
jmp
movsl
rclb
roll
dec
insb
ret
cmpsb
mov
jecxz
testb
inc
dec
xchg
jb
mov
icebp
xchg
xchg
push
pop
insl
icebp
push
jmp
jmp
push
popf
scas
xchg
outsb
pop
insl
add
loop
adc
imull
inc
push
mov
sbb
aaa
popf
sbb
int3
sbb
pop
adc
in
insb
cs
jmp
add
or
or
and
enter
iret
fs
push
lret
jg
push
add
loopne
test
pop
lahf
adcl
cmpsb
daa
pop
jmp
mov
push
push
fs
xor
xchg
in
cwtl
daa
int
dec
inc
in
xor
jmp
adc
mov
push
mov
clc
test
test
jns
loope
mov
call
add
in
and
xor
xchg
lea
xor
insl
ret
jecxz
sbb
dec
imul
shl
dec
loopne
out
int3
xor
jge
sub
inc
hlt
pop
add
xor
inc
pop
and
mov
out
pop
mov
int3
dec
insl
jo
add
dec
pop
sbb
pop
repnz
loope
mov
adc
mov
pop
sbb
rep
daa
fisubl
jns
inc
add
test
pusha
popf
or
and
dec
dec
stos
xchg
loopne
or
pushf
shl
outsl
lret
xor
and
cli
test
xor
into
lea
xor
call
fsubs
xchg
cwtl
or
std
xchg
insb
pop
cltd
icebp
cmp
cmpsl
inc
add
jb
das
aad
xor
jns
lcall
push
sti
mov
and
cmpb
push
xchg
mov
mov
loope
push
xor
sbb
cmp
adc
and
jae
cmp
fs
jl
and
repnz
pop
sbb
push
imul
jle
dec
ds
cld
pop
and
icebp
ret
in
sub
sbb
call
pushl
divb
stos
daa
aas
adc
jae
push
stos
pop
lds
jge
lcall
push
mov
push
inc
bound
and
fisttpll
xchg
test
dec
int3
in
icebp
cmp
jb
cmpsl
push
push
sbb
rorb
ret
push
into
lret
cmp
dec
dec
test
jmp
push
jne
inc
fistps
mov
add
xor
inc
mov
inc
test
test
and
int
xchg
aam
aam
jmp
sahf
sbb
cmp
adc
dec
xor
loop
cmp
les
ja
push
repz
push
mov
pop
aas
mov
out
mov
sti
xor
data16
mov
add
sub
jmp
lahf
jns
dec
insb
dec
pop
sbb
dec
add
scas
mov
lock
fdivrs
mov
adc
or
pop
fs
adc
out
icebp
clc
aaa
xchg
and
add
inc
scas
in
decl
push
mov
or
jo
sahf
icebp
out
xor
call
jno
cmp
enter
ret
in
cmpsl
mov
pushf
shlb
fucom
lret
insb
mov
cmpsb
adc
xchg
scas
loopne
xchg
dec
stc
jl
andl
pusha
sbb
xor
inc
fwait
iret
jne
xchg
int
fs
fwait
mov
mov
fucomip
aad
shll
je
mov
in
je
mov
rolb
movsb
sbb
cmp
ljmp
mov
xchg
and
shrb
fmul
or
arpl
in
dec
push
popl
adc
lods
lret
xor
cmc
push
mov
dec
repnz
jns
call
ret
mov
xchg
mov
adc
sahf
repz
into
add
bound
movsl
cli
sbb
push
addb
lret
loopne
stos
jp
xor
pop
xor
mov
sub
mov
std
hlt
mov
mov
mov
insl
bound
xchg
mov
push
imul
rolb
cld
mov
and
in
inc
repnz
aam
add
push
jle
fcmovu
and
or
inc
rcll
jnp
mov
push
xchg
mov
lods
jge
cmpsb
xchg
dec
jl
das
pop
pop
jno
sub
jae
mov
call
cmpl
push
cmp
es
mov
ret
lods
dec
xor
psubsb
sbb
dec
fsub
test
jmp
mov
dec
jo
andl
mov
inc
xlat
sub
out
orb
rolb
inc
xor
notl
gs
mov
call
cmp
lahf
xchg
mov
push
sub
shl
jb
adc
stos
push
lea
pop
lods
aam
shrb
cmc
cltd
fnstenv
hlt
cmp
dec
and
adc
aas
sbb
sub
sbb
xchg
imul
push
aad
test
test
pop
clc
xor
mulb
or
dec
pop
adc
das
mov
dec
dec
cld
xor
mov
mov
popa
dec
xor
pop
push
dec
lcall
cmp
leave
adc
inc
loopne
or
mov
sbb
xchg
aam
aaa
test
enter
les
cmpl
test
int
jae
inc
mov
fistpll
jecxz
jmp
adc
push
sbb
std
rorb
ds
push
cmp
cmp
adc
movsb
add
mov
popl
out
jno
jne
mov
jp
pop
data16
xchg
fs
scas
cmp
jne
sub
adc
in
jmp
rcrl
lret
out
ja
xor
mov
test
xlat
sbb
adc
xor
and
xor
sbbl
mov
scas
gs
xchg
jne
pop
testl
inc
int
mov
xor
fisttps
push
or
jle
and
dec
sub
cmpsl
or
icebp
in
push
xchg
push
cmp
rcrb
cmp
fisttpl
sbb
or
fdivrl
or
jae
pop
bound
xor
jg
cmpsb
insl
jns
call
dec
push
pop
push
jg
inc
out
insl
data16
cmp
das
mov
outsb
sar
xchg
mov
ds
daa
lock
imul
mov
out
out
fdiv
mov
inc
cmc
bnd
pop
mov
inc
mov
push
mov
or
std
mov
dec
fiadds
xlat
lcall
das
cmpsl
rcrb
add
add
lea
xorl
mov
je
mov
or
mov
cmp
pop
and
cwtl
int
add
mov
mov
in
dec
mov
jg
sub
data16
push
lea
push
outsb
add
pop
push
outsl
rolb
test
push
sbb
xchg
push
xchg
mov
in
and
ja
lret
adc
cmp
out
add
xor
xchg
roll
xchg
ret
movsl
insl
pop
shrl
popf
into
sbb
mov
pushf
sub
test
inc
jb
lds
xchg
xchg
ljmp
push
adc
xchg
push
pop
insl
fdivr
cmp
rorb
or
push
add
hlt
ss
add
xchg
nop
mov
imul
cmp
cmp
call
pop
rorb
pop
push
and
push
lea
lods
lcall
xor
mov
cmp
in
jbe
jmp
leave
ljmp
lret
add
inc
lret
pop
sti
jno
out
or
inc
call
adc
aam
pusha
leave
sub
movsb
lods
cmp
rolb
inc
jle
or
dec
iret
cmp
shlb
mov
sbb
jns
add
pop
xchg
idivb
setne
jnp
sub
dec
ret
inc
test
sarb
imul
subl
mov
push
inc
imul
mov
adc
and
push
push
push
clc
loope
push
stc
sub
inc
mov
cmp
and
fbstp
stc
daa
popa
jno
gs
jns
fwait
mov
iret
xchg
repnz
enter
outsl
cwtl
pushf
xorb
mov
lahf
xor
shrb
mov
mov
mov
and
std
and
pushf
pop
mov
movsl
outsb
mov
mov
sbb
and
cld
mov
jnp
lahf
mov
add
inc
andl
inc
push
fbstp
pusha
inc
mov
lods
test
or
dec
fisubl
imul
adc
ds
outsb
iret
lret
mov
pushf
fsubrs
pop
sub
pushf
push
bnd
movsb
add
xchg
imul
sbb
je
mov
push
shrb
sub
fs
mov
int
push
push
mov
sbb
mov
mov
mov
mov
dec
loopne
jp
imul
push
in
jno
adc
icebp
add
stc
mov
repz
data16
push
jge
in
xchg
push
lock
dec
loope
test
mov
enter
call
gs
push
xchg
inc
push
fsubrp
pop
cmc
inc
test
jge
xchg
adc
gs
int3
inc
sbb
mov
sub
dec
mov
mov
inc
pushf
mov
add
stc
aad
jnp
insb
mov
subl
ljmp
repz
notl
test
ljmp
mov
scas
xorb
hlt
loope
or
outsb
adc
mov
push
add
in
xorb
jp
inc
pop
scas
out
cld
ficomps
inc
xchg
mov
ja
lahf
aad
push
sub
repz
sub
mov
add
ds
add
add
mov
and
push
in
add
fistps
rcrb
mov
jmp
lret
pop
pop
dec
shrl
les
add
comiss
mov
or
xchg
shll
push
push
mov
adc
nop
jl
dec
insb
and
in
xor
hlt
jo
jmp
mov
in
cmovo
cmpsl
shl
add
std
mov
jge
inc
cmp
fldenv
xor
xor
or
fsubl
or
jnp
call
mov
lret
in
jge
add
inc
and
push
mov
jge
and
jno
add
and
xor
repnz
sbb
mov
sbb
shll
lcall
pusha
loope
bound
fisubrs
out
or
push
or
xchg
jecxz
cmp
mov
adc
or
fildl
ret
jmp
arpl
ds
imul
test
scas
push
adc
jae
add
or
inc
mov
out
rcll
aas
mov
clc
sti
jbe
popf
lcall
or
jne
ljmp
push
pop
cmpsl
sub
add
add
add
jae
push
jmp
repz
jg
cli
enter
or
dec
mov
rcll
add
dec
ss
xchg
pop
hlt
lret
arpl
push
mov
lock
inc
push
xchg
mov
mov
stos
fisttps
jle
inc
lret
in
xchg
fildl
inc
cmp
xchg
jp
shr
xlat
sub
inc
sub
in
mov
mov
xor
sub
add
xor
adc
fwait
add
sub
in
mov
push
testb
lcall
and
sbb
fnstsw
out
leave
gs
cmpsb
add
push
sub
sbb
push
loop
mov
inc
or
call
xor
imul
call
addr16
dec
insb
pop
mov
push
popf
addr16
mov
mov
jo
mov
add
jl
ret
in
fwait
test
cmp
loopne
xor
lds
mov
pop
mov
xchg
push
add
xchg
or
out
cmp
adc
inc
dec
mov
dec
std
sub
push
mov
dec
xlat
or
mov
cli
imul
ficompl
mov
mov
out
pop
fcomip
and
popf
cs
addl
es
dec
cmp
loop
iret
out
and
mov
sahf
push
fstpl
mov
mov
scas
mov
pop
mov
push
sub
add
cwtl
add
or
pop
xchg
insl
sub
cmp
mov
cmp
testl
and
xor
xor
out
out
xchg
aaa
jp
lret
rcrl
es
ljmp
dec
orb
mov
rcrl
pop
xchg
xlat
mov
push
adc
and
popa
mov
cmc
ficompl
or
pop
scas
enter
dec
addr16
fcom
xchg
mov
push
sbb
sbb
mov
stos
pop
dec
enter
scas
test
sub
or
pop
mov
mov
adc
out
mov
mov
dec
movsb
pop
loop
enter
sbb
fcoms
push
fwait
es
or
lret
movsb
pushf
negb
dec
mov
xor
xchg
or
push
fisttpl
cld
fisubs
pop
ss
aas
in
adc
mov
xchg
ljmp
popa
fcom
gs
cmp
push
fmull
dec
mov
xor
repnz
cmpsl
push
lret
push
fs
jo
dec
jns
mov
and
test
mov
in
push
push
sbbb
in
mov
dec
loop
jmp
inc
add
dec
and
inc
sti
lods
test
cmp
jns
adc
or
jae
dec
test
push
xchg
xchg
cmpsl
sarl
pop
shl
add
mov
or
fadd
out
inc
push
push
mov
addr16
dec
loopne
xchg
pusha
lahf
inc
push
fnstenv
lret
sbb
in
and
nop
mov
and
ret
outsl
mov
jb
mov
or
mov
jp
cmp
clc
fucomip
add
andl
add
mov
shll
add
cwtl
inc
fscale
repz
pop
mov
xchg
cltd
cltd
adc
iret
adc
and
addr16
jne
imul
ljmp
mov
movsl
or
nop
cmp
or
lock
repz
and
push
cld
adc
test
inc
push
imul
negl
ror
mov
sbb
fisttpll
test
js
movsb
rclb
cs
cmp
jmp
outsb
cmp
sbb
test
inc
add
push
int
ljmp
cli
out
cmp
shrl
out
arpl
xchg
inc
or
je
loop
pop
call
jle
inc
xchg
dec
and
pusha
subb
add
push
mov
jnp
xchg
pop
arpl
out
cld
jecxz
leave
test
out
inc
aas
test
xchg
les
xor
aad
popf
jbe
mov
cwtl
xchg
test
xchg
inc
icebp
sbb
add
movsl
cwtl
fistpll
dec
lcall
pop
mov
je
and
push
xor
sbb
xchg
adc
int3
pop
std
cs
jle
and
inc
jle
cli
fcompl
mov
push
into
enter
je
cmp
ret
loopne
mov
cmpsb
in
mov
inc
dec
or
mov
jmp
pusha
int3
popf
filds
xchg
mov
imul
cmp
jmp
insl
and
sbb
push
je
in
lret
addl
cmp
les
push
cmp
xchg
pop
jns
inc
push
mov
xchg
inc
push
rcll
sub
adc
and
pop
jg
dec
push
testl
mov
mov
or
mov
pop
and
cli
sbb
stos
inc
lret
pop
test
adc
jae
xlat
xchg
add
std
mov
and
fiadds
inc
mov
jl
or
enter
mov
jl
inc
clc
inc
adc
loop
movsb
loopne
mov
aam
pusha
push
std
pop
icebp
mov
dec
sbb
push
aaa
sub
aaa
mov
inc
mov
cmp
sbb
les
out
xor
mov
jg
stos
aas
mov
aad
push
sub
insb
dec
xchg
jmp
adc
loopne
scas
repnz
inc
fnsave
adc
in
mov
mov
out
add
adc
jmp
aaa
xor
sub
daa
or
jo
nop
xchg
fxch
push
movsl
iret
adc
add
cmp
loope
sbbb
xchg
inc
daa
add
dec
or
decl
ja
adc
adc
addl
fidivrs
cmc
add
gs
into
cwtl
xor
out
xchg
sahf
dec
sbb
cmpsb
movsl
sub
test
into
cld
sahf
inc
mov
pop
mov
daa
test
cmp
movsl
mov
mov
inc
sbb
sub
notl
cli
adc
jns
dec
leave
ja
lcall
xchg
stos
cli
jle
dec
and
lea
push
mov
outsb
pop
and
lods
js
jo
xor
movsb
inc
mov
sbb
dec
sti
push
repz
sbbb
test
sbb
js
sub
adc
shrb
ss
aam
push
nop
das
lock
sti
mov
fs
stos
inc
push
dec
clc
push
fadds
mov
mov
push
sbb
sbb
mov
mov
repz
int
pushf
jns
inc
jne
fistps
sbb
repz
mov
into
notb
and
negl
add
inc
adc
fwait
push
rorl
mov
inc
out
nop
in
lret
jae
jbe
cmp
lods
mov
mov
xchg
fdivr
xor
adc
mov
inc
add
insl
jl
pop
jo
rolb
jl
stos
test
in
mov
xchg
pop
mov
inc
subb
inc
das
mov
popa
test
shrl
dec
out
mov
repz
push
inc
jbe
push
daa
in
int3
ja
sahf
jo
sarl
jecxz
inc
jne
jle
mov
jb
mov
or
mov
push
xchg
pop
jle
mov
xchg
or
add
inc
fimull
push
sbb
call
jbe
inc
daa
adc
lock
and
cmpsb
in
and
mov
xchg
lock
rcr
iret
shll
xchg
cmp
adc
js
jle
nop
mov
arpl
rolb
jne
mov
push
mov
mov
add
sbb
idivb
sti
into
dec
dec
sbbb
fnsave
xor
jno
pusha
dec
outsl
adc
push
push
xor
pop
dec
inc
sub
mov
call
addl
out
mov
repz
clc
ljmp
pop
xor
iret
add
dec
add
cmovnp
xor
push
sbb
int3
movsb
fs
shl
insb
in
pop
mov
pusha
mov
pushf
test
repnz
push
jno
and
mov
xor
inc
push
daa
and
and
stc
dec
in
rcrb
mov
xlat
xorl
cmpsl
hlt
mov
dec
test
adc
xchg
outsb
std
inc
add
shll
add
pop
sub
mov
mov
sub
cmp
outsb
adc
mov
in
push
jge
add
aam
jno
out
mov
loopne
loop
lret
inc
out
and
xchg
jne
mov
push
sbb
adc
lods
mov
rorb
pop
outsb
push
lds
sub
sar
popf
in
fsubrl
push
inc
pushf
and
jns
push
lods
lret
jp
push
or
sbb
das
nop
jae
jb
jmp
mov
cwtl
sbbl
push
push
int
insl
aaa
scas
jns
sub
in
ror
fcomi
push
stc
dec
in
xchg
ljmp
xchg
out
push
out
roll
pop
psrlw
mov
sahf
int
pop
sub
insb
lods
mov
adc
inc
test
pop
add
dec
inc
in
scas
add
inc
in
add
mov
adc
cs
jle
in
xchg
lret
mov
sbb
enter
push
mov
adc
and
aas
fidivrl
lret
dec
adc
mov
xchg
pop
adc
repz
push
movsb
aam
pop
loop
pusha
push
jg
sbb
sub
ss
and
jg
or
in
mov
mov
test
scas
push
insb
ljmp
shll
adc
xchg
sub
cmpsb
insb
aaa
cmpb
rorl
dec
pop
pop
fcompl
push
shr
out
xchg
pushf
negl
sub
ss
mov
cmc
mov
ljmp
popf
loopne
add
push
arpl
fwait
jno
inc
pop
inc
inc
fs
fs
mov
push
xor
es
js
fimull
pop
shll
jb
lret
jp
cmp
jo
sub
mov
fcomp
and
lods
insb
ljmp
sahf
nop
icebp
lock
jo
xchg
out
mov
movsl
lahf
sahf
xchg
and
and
push
push
insl
pop
or
inc
ret
sub
movsb
pop
xchg
inc
scas
pop
mov
nop
mov
lret
xchg
aas
lods
sbbb
pop
addr16
pop
cmp
xchg
lock
pop
orb
idivl
ret
js
fcomip
adc
lret
aad
or
or
pop
mov
shrb
enter
adc
jne
sbb
xor
cmp
xor
cmp
pop
es
ljmp
retw
or
sarb
mov
xchg
cmc
dec
jmp
sti
stos
push
js
and
xor
repz
jle
imul
jns
jo
addl
mov
das
adc
add
in
subb
popa
cltd
movsl
loopne
inc
sub
jbe
in
nop
xchg
push
xor
mov
mov
fstps
add
arpl
xor
dec
pushl
nop
xor
scas
push
lods
sub
fucomp
divl
mov
fldl
cmp
xchg
push
xchg
cmp
data16
fnstcw
xor
inc
in
iret
inc
mov
or
or
jns
aam
xchg
aam
jge
std
dec
arpl
add
xor
mov
inc
sub
cwtl
ret
and
sbb
popa
popf
adc
jmp
pop
inc
ret
adc
out
rorb
sub
add
xchg
lods
icebp
pop
sub
cmpsl
sbb
push
ja
jle
cmp
clc
dec
subl
insb
cli
aas
shlb
pop
bound
leave
stc
dec
leave
cmpsl
jno
push
sub
jns
sbb
xor
mov
ds
lret
outsl
and
pop
sub
sbb
xchg
mov
or
adc
jae
cmpsb
mov
xchg
xchg
shrl
mov
cs
mov
or
sbb
mov
rorl
mov
inc
inc
cwtl
lds
inc
sbb
aas
insb
xor
lret
scas
lods
inc
lock
mov
rcrb
mov
sbb
and
xchg
test
sub
push
addr16
icebp
imul
lds
int
insb
mov
push
xchg
aad
cmp
lret
out
inc
ror
sbb
ret
enter
outsb
jg
sub
mov
bound
loopne
jb
divb
outsb
xor
push
in
mov
cmpsb
xor
adc
sbb
in
inc
mov
les
add
lahf
cltd
adc
lods
mov
inc
cmp
push
dec
in
mov
data16
cltd
xlat
scas
in
mov
fnstenv
aam
pop
mov
push
xchg
jmp
in
js
xchg
jo
push
sub
lods
dec
aaa
sbb
fcomip
add
xor
adc
test
mov
in
rclb
pop
sub
fcomip
je
jbe
lds
lahf
cld
inc
mov
jmp
sub
fdivs
pop
jp
das
sti
xchg
in
jge
enter
mov
mov
add
jb
sub
pushf
pop
sub
cld
movsb
inc
jle
pop
xorl
pop
push
and
and
outsb
fstl
sbb
stc
dec
cmp
mov
lods
pop
jmp
enter
adc
pop
push
cmp
fstpt
jne
cmp
mov
sub
mov
paddb
jmp
scas
popf
adc
xchg
jl
lea
adc
add
pop
dec
pushf
mov
xor
dec
call
icebp
lcall
xor
fildl
mov
fcomps
bound
dec
cld
mov
test
cmp
mov
cmpsl
out
jl
jmp
faddl
cmp
les
aaa
push
push
xchg
lods
imul
xchg
sbb
dec
popa
xor
cltd
push
xlat
ficompl
shl
adc
or
lahf
popf
mov
dec
mov
xor
mov
pop
mov
sub
outsb
push
sbb
dec
mov
xor
stos
pushf
inc
int
stc
xlat
push
outsl
or
xchg
mov
in
sbb
pop
in
pop
cmp
xchg
loope
push
mov
hlt
adc
mov
cmp
jo
xor
mov
push
js
cmp
leave
movsb
incb
std
ret
and
xor
xchg
cmp
pop
xor
inc
aaa
lods
add
and
call
mov
int3
push
sbb
sub
jo
cmp
xchg
inc
fwait
xchg
or
cmp
mov
movsb
scas
push
xchg
dec
cmp
cs
mov
xor
adc
pop
or
cmp
fwait
js
and
push
mov
jle
adc
mov
mov
cmp
sarl
cmp
pop
mov
out
jns
sbb
outsb
jb
push
stos
shll
xchg
mov
jo
in
mov
and
sub
shrb
lds
insb
cwtl
out
and
sub
call
mov
pop
mov
pop
ljmp
lods
xchg
jle
inc
dec
enter
cmp
aaa
pusha
sbb
add
rclb
testb
jo
mov
gs
into
aas
outsb
sub
insl
mov
push
pop
inc
aas
push
ja
repnz
inc
sub
jo
pop
mov
and
pop
cmp
mov
or
je
jmp
or
imul
push
test
and
inc
jecxz
out
jne
or
rorl
int
leave
fildl
js
dec
pop
repz
sbb
jno
jns
push
mov
mov
or
ss
mov
popf
into
adc
push
push
insl
stc
loope
daa
int3
xchg
sbbl
jecxz
pushw
mov
mov
sub
test
mov
xchg
sub
sahf
test
add
les
enter
test
pop
push
rcrl
lea
int3
xchg
movsb
or
scas
clc
ficompl
imul
rol
scas
xchg
adc
pop
mov
hlt
shl
popa
imul
pusha
jp
pop
fisttpll
add
xchg
mov
frstor
insb
iret
jg
dec
push
out
add
cmp
push
xchg
add
outsb
fcoms
pop
xor
adcl
add
nop
ljmp
jg
cmp
sub
fninit
clc
jae
mov
jge
stc
in
xorl
fwait
xor
in
sbb
out
ja
gs
sbb
loopne
into
cwtl
hlt
clc
movsb
push
into
hlt
add
roll
and
sbb
aad
cmp
dec
or
pop
cwtl
test
or
jle
cltd
mov
lods
mov
pop
push
and
or
adc
cmpsl
in
sub
popa
xchg
xlat
lods
lea
pop
adc
add
ret
ficoms
pop
jns
fisubl
es
mov
outsb
pop
sbb
pusha
int
and
popa
rol
xchg
jecxz
xchg
mov
jg
mov
shlb
cmpsl
bnd
mov
outsb
scas
out
leave
data16
push
or
test
add
xchg
or
push
mov
fisubrl
xor
mov
dec
sub
push
mov
fdivrs
pop
scas
cli
and
lods
lret
mov
push
lds
or
lea
cs
orl
lock
sub
inc
sub
leave
and
push
sbb
pop
in
pop
jae
mov
inc
and
stos
xor
gs
and
cmpsb
xchg
push
leave
mov
dec
lret
stc
jne
or
pop
fmuls
loop
adc
pop
inc
ds
outsl
jecxz
popa
add
nop
add
mov
mov
movsl
and
mov
push
xor
fistpll
adc
jl
add
xbegin
nop
rcr
push
dec
shr
cli
cmp
xchg
inc
pop
gs
xchg
clc
movsl
push
jmp
mov
outsl
mov
add
cmp
jne
adc
rolb
add
xchg
in
enter
push
sbb
sahf
push
test
sbb
ret
sbb
fs
cmp
push
test
adc
lock
stos
dec
fwait
dec
rcrb
es
mov
mov
mov
jbe
aam
sbb
sub
cld
sbb
les
adc
mov
insb
cld
xor
lahf
jecxz
pop
mov
dec
lock
aad
aas
xor
fwait
xchg
insb
xor
popa
loope
jge
daa
ds
cmp
in
cltd
push
mov
call
sub
mov
jnp
and
out
lret
cmp
rol
int3
adc
mov
mov
mov
pusha
test
lods
fildll
movsbl
and
cmp
jae
addr16
js
fwait
adc
fwait
adcb
and
shll
setg
pop
call
int3
dec
movsb
stos
jno
lods
push
or
pushf
lcall
loop
lock
mov
test
xchg
das
mov
shll
pop
mov
pushf
fcoml
push
dec
jne
or
lock
jns
lods
pop
push
pop
imul
int
lret
cwtl
fwait
mov
fbstp
fisubl
mov
je
add
or
flds
and
xchg
jno
test
ret
sub
mov
cmpsl
ret
inc
ror
sub
insl
jle
push
test
mov
fisubs
pop
scas
sbb
mov
or
aad
mov
mov
dec
sbb
cltd
cmp
lret
les
arpl
xchg
push
add
pop
jecxz
pop
dec
mov
xchg
imul
mov
subb
inc
fs
jge
call
call
inc
dec
mov
movsl
inc
pop
sub
or
out
sbb
add
lods
insb
data16
push
shll
push
in
fs
and
cmpb
imul
pop
leave
in
scas
push
sub
cmpsl
adc
hlt
call
dec
je
loopne
lods
dec
iret
stos
mov
addr16
jb
test
dec
jge
adc
push
or
pusha
loop
ds
jl
jmp
into
mov
inc
mov
aaa
in
fmull
xchg
mov
ljmp
arpl
ret
mov
push
and
push
fsubr
shlb
movsb
xchg
scas
jle
cmp
xchg
int3
push
dec
mov
jge
jle
or
stc
data16
mov
and
cmc
dec
jb
push
mov
xchg
lods
sub
fidivrs
mov
push
pusha
cmpsl
xor
scas
test
in
push
push
imul
movsb
dec
cmpl
adc
movsl
test
insl
jmp
mov
and
popa
mov
testl
mov
pmuludq
jo
int3
or
dec
dec
data16
shlb
push
pop
jnp
xchg
sbb
in
lret
dec
xlat
outsb
clc
mov
loopne
dec
pop
outsl
dec
insb
fstpt
not
mov
mov
pop
mov
gs
push
loope
sbb
pop
movl
xlat
ss
roll
jae
js
ja
fucom
push
fxch
jge
xchg
js
and
push
inc
sub
xchg
cmp
cmpsb
xchg
jecxz
push
pop
mov
test
push
scas
xor
mov
int3
jecxz
je
pop
clc
mov
pop
les
pop
hlt
sbb
in
leave
nop
and
mov
jnp
int
cltd
push
xor
push
sbb
in
jmp
outsb
jle
ret
pop
push
addr16
inc
nop
test
sahf
dec
mov
fsts
sar
call
pop
dec
or
je
insl
mov
push
push
mov
sub
popa
scas
rcr
ds
andb
adc
sbb
lret
dec
lods
cli
xchg
or
es
xchg
or
movsb
shl
push
mov
iret
and
jae
cmpsl
int
jg
add
pop
loop
dec
mov
xor
adc
fiaddl
xor
jge
push
mov
inc
enter
and
fildll
cltd
movsl
fwait
jno
inc
bound
push
xor
push
mov
test
mov
hlt
sahf
inc
xor
fistl
xor
test
pop
lea
sbb
mov
push
sub
cmpsl
mov
sub
rcll
push
xchg
mov
push
pop
cmpsb
cmpsb
cmp
xchg
dec
push
mov
loopne
cmp
add
xchg
pop
sbb
dec
loopne
fbld
mov
mov
xor
mov
int3
sbb
jns
pop
call
mov
push
adc
aaa
lret
cmp
popf
addr16
das
mov
mov
jp
insl
hlt
loope
jo
sahf
adc
scas
push
sti
stc
fmulp
lds
call
xchg
mov
rol
jbe
mov
sbbb
push
xchg
decl
andb
inc
and
xor
pop
sbb
loop
repnz
mov
repz
enter
lea
cmp
xchg
or
dec
pop
mov
lods
stos
and
add
and
or
jl
sub
insb
mov
nop
cmp
ss
cmp
xchg
sbb
stos
or
push
add
push
dec
outsl
test
shll
adcb
xchg
mov
push
jcxz
xor
repnz
mov
jecxz
sbb
or
mov
shll
or
leave
push
lods
xor
mov
cmpsb
out
cmp
mov
nop
sbb
jp
andl
shl
call
psubusb
mov
rcrl
adc
cwtl
arpl
pop
cmp
mov
adc
sahf
cmp
sub
mov
add
lds
jp
adc
ss
aas
or
decl
cld
mov
mov
mov
sub
push
pop
add
pusha
pop
mov
sub
sub
shl
push
nop
or
sub
inc
lret
xchg
adc
enter
rorb
iret
push
xchg
imul
or
or
movsb
not
jle
lret
gs
xchg
mov
or
cmp
jbe
and
mov
cwtl
push
ret
xlat
mov
enter
adc
sub
sbb
addl
call
in
in
loopne
div
lcall
and
sbb
add
mov
movsb
aad
ljmp
and
push
mov
pop
mov
popa
inc
loope
add
sbb
inc
sbb
hlt
shlb
or
jbe
fimull
mov
cmp
not
cmp
imull
stos
scas
jb
rcll
mov
std
rolb
lret
jne
jg
add
pop
data16
xor
xchg
mov
enter
cmp
mov
pop
lret
xchg
pop
je
arpl
mov
ds
cli
in
lods
mov
xor
pop
jns
dec
cmpsl
in
in
aam
push
xorb
jns
adc
int
pop
jle
pop
jns
jmp
inc
lods
lods
lret
xchg
xchg
out
loope
sbb
lods
inc
gs
push
imul
mov
dec
adc
mov
xor
ja
or
addl
das
xor
xor
scas
fidivs
pop
push
mov
cltd
xor
mov
push
push
push
test
xchg
inc
loop
inc
ds
pop
or
pop
mov
cld
jge
cld
xor
dec
sbb
sbb
xchg
inc
insl
add
in
xor
fsubrs
push
enter
insb
ret
jne
outsb
dec
fsubrp
cmp
cs
outsb
push
pop
mov
mov
je
addr16
jnp
mov
aam
pop
or
std
out
ficoms
pushl
pop
sub
sub
or
sub
xchg
push
mov
pop
sbb
aas
das
cmc
inc
fildll
adc
popf
call
sub
or
and
dec
arpl
int3
pushf
addr16
aas
inc
sti
add
stos
aam
add
sarl
in
cld
call
push
mov
out
in
lods
mov
xor
mov
out
xchg
imul
jle
scas
fldt
aad
push
and
or
add
shlb
xlat
rcrb
cmpsl
inc
dec
les
adc
data16
ret
pop
jns
jno
ljmp
or
out
hlt
rorb
aam
call
cmovnp
jbe
mov
dec
or
sbb
and
xchg
in
ret
xchg
pop
cmpsb
cmp
add
sti
add
xor
call
nop
dec
mov
inc
sub
pop
add
ret
or
imul
xor
jae
and
dec
xor
sub
inc
icebp
sti
fwait
add
mov
inc
lret
and
inc
sbb
mov
and
imul
or
xchg
popl
mov
fistpl
mov
push
xchg
insl
push
lea
imull
outsl
stc
mov
shr
rolb
xor
push
xor
scas
mov
push
xchg
pop
int
xlat
or
ret
xor
cwtl
lcallw
mov
add
xchg
rcrb
mov
lret
mov
lock
push
rcrl
adc
add
mov
pop
xor
sbb
jmp
fistps
jp
pop
ja
nop
lret
ret
in
jmp
cmc
sarl
add
data16
mov
enter
popf
cmp
lods
mov
jne
push
mov
arpl
or
jg
pop
push
mov
das
mov
add
ficompl
imul
sbb
outsl
test
adc
dec
xchg
pop
lcall
cmpsb
rolb
shrb
cmp
and
add
sub
mov
jnp
out
rcl
jp
mov
test
call
mov
xchg
jb
sub
adc
push
xlat
int
ds
std
pop
movsl
mov
sbb
cmpsl
bound
add
xor
mov
inc
lahf
sbb
stos
cmp
and
adc
cmp
andl
fsubl
xor
dec
leave
mov
jg
andb
rclb
inc
imull
int3
nop
xchg
xor
fisubl
push
xor
xorb
sahf
push
or
gs
vmovdqa
cli
andl
xchg
jnp
inc
sbb
jne
lods
clc
sub
js
ljmp
push
dec
mov
rcrb
pop
mov
or
xor
cmc
sar
mov
xor
and
mov
imul
xchg
or
sub
sbb
lock
dec
cltd
andb
lcall
in
mov
adc
cld
sahf
ds
sub
popf
dec
pop
jnp
pop
and
pop
clc
mov
mov
insl
cmpsl
prefetchw
push
mov
jns
mov
sarl
lods
call
lea
addr16
jl
xchg
imul
adc
pop
jnp
jmp
add
pop
xlat
inc
push
lods
mov
subb
mov
clc
fucom
outsl
andb
push
sbb
add
out
adc
mov
add
mov
adc
jns
ja
les
push
stc
inc
mov
icebp
pushf
push
dec
xchg
and
adc
popa
mov
negb
mov
jg
mov
mov
enter
add
ja
xchg
lret
mov
and
ljmp
stos
daa
addb
fnstenv
imul
xchg
hlt
test
inc
push
sub
loop
xchg
cmp
int
add
lcall
mov
cld
mov
lss
or
jo
or
add
fldt
imul
and
jle
sahf
jb
fisubrs
add
hlt
pop
aam
inc
inc
cltd
aad
dec
jae
test
clc
leave
stos
xor
mov
lret
ret
cmpb
mov
enter
sbb
lahf
test
sbb
xor
push
mov
dec
push
orl
jb
pop
jo
mov
nop
mov
les
and
adc
lods
push
xor
jg
cmp
sbb
test
aas
movsb
cmp
ret
lret
cmpsl
sbb
lock
int3
in
mov
dec
sbb
or
call
and
mov
cs
cli
dec
in
push
dec
mov
jno
lea
das
loope
gs
adc
pusha
pop
jp
stos
pop
mov
je
jns
inc
fwait
mov
adc
xor
jecxz
jnp
dec
in
sbb
popf
test
pop
sub
insl
add
xchg
addr16
sub
test
imul
dec
mov
inc
loop
lods
lods
hlt
aas
jb
in
cmp
push
iret
mov
lcall
in
jl
test
xchg
imul
jo
bnd
ret
pop
outsb
ret
in
push
aam
mov
push
xchg
add
mov
and
lea
frstpm(287
adc
sub
call
and
fwait
sbb
cmc
fwait
jb
add
jge
pop
mov
shrb
jp
xor
xchg
mov
push
in
xchg
adc
mov
aaa
in
je
xor
shlb
push
adc
add
inc
or
ret
push
lret
sbb
dec
in
out
lret
push
xor
pop
stc
xlat
call
jmp
or
pop
mulb
mov
mov
aaa
imul
push
mov
jb
cmc
out
xlat
enter
pop
je
gs
and
jmp
and
pop
dec
test
test
scas
into
addr16
arpl
mov
loope
in
pop
cmp
pop
sbb
or
pop
or
or
pop
cmp
jno
cmp
jl
fsubrs
inc
mov
push
mov
and
sub
sub
fnstcw
pop
daa
addl
cmpsl
pop
cwtl
or
fistpll
jns
es
decl
push
push
push
inc
adc
mov
and
sbb
mov
negb
fwait
scas
mov
jle
pop
jecxz
imul
scas
nop
fsubrl
out
cmp
movsb
test
daa
adc
push
push
imul
dec
xchg
ret
xchg
lret
hlt
ret
rcrl
hlt
pop
cmp
mov
inc
fnsave
addr16
out
rorb
fwait
xchg
into
jmp
js
daa
cwtl
addr16
push
cltd
push
cmpsl
jle
pop
cmp
push
loope
jno
add
lahf
cld
mov
adc
xchg
fs
mov
xchg
sub
loope
cli
pusha
lret
movsl
mov
pop
or
cwtl
and
push
out
loop
cwtl
cmp
jno
sbb
pop
dec
imulb
aam
out
or
jecxz
pop
ror
or
inc
lock
xlat
sahf
sbb
pop
push
lahf
mov
fidivs
les
jnp
adc
cwtl
cmp
lret
inc
loopne
dec
jno
add
andl
in
lret
loope
movsb
sarb
sbb
addr16
aaa
in
nop
nop
stc
mov
stos
sbb
push
repnz
push
sub
adc
xchg
insl
sbb
xchg
mov
mov
sbb
aaa
add
das
adc
dec
inc
mov
jb
push
or
loopne
adc
jle
dec
adc
push
cmp
cmp
dec
push
mov
shrb
test
sub
scas
in
insl
int3
fsub
lret
mov
sti
ffree
orl
sbb
jmp
jno
in
jbe
rcl
xlat
add
mov
nop
push
mov
inc
pop
ds
mov
dec
lret
cmpsl
lret
jnp
sahf
adc
popa
adc
sti
cmp
lods
cmovb
jbe
mov
test
out
divb
nop
sbbl
shll
push
mov
dec
insb
jp
movsl
cmp
mov
mov
into
daa
fidivrl
mov
cs
ficompl
dec
imul
mov
nop
lods
outsb
sbb
add
xchg
sub
lods
aam
push
xor
stc
popa
add
stos
adc
enter
jno
jmp
adc
dec
pop
mov
repnz
lock
clc
out
push
sub
dec
in
cltd
mov
and
add
xor
mov
xchg
dec
push
shll
sbb
adc
pop
loop
out
stos
ret
xor
and
ss
sbb
daa
shll
imul
loope
push
dec
pop
enter
inc
push
popa
rcll
test
jmp
leave
imulb
stc
push
outsl
mov
sub
inc
dec
xchg
dec
je
or
lods
outsl
xchg
add
ss
in
cmp
jo
cmp
std
xchg
sti
ficoms
push
shlb
insl
sbb
fistpll
dec
stos
adc
mov
test
push
mov
in
sub
fildl
stos
mov
inc
jl
aad
arpl
lahf
or
jg
jge
and
arpl
adc
sbb
adc
cmp
pop
in
call
dec
test
fnstsw
mov
in
shrb
fbld
mov
or
int
push
cmp
outsl
sbb
int3
sbb
adc
imul
loopne
mov
xor
iret
xor
push
adc
inc
mov
push
imul
mov
mov
xchg
lods
fadds
lock
push
dec
int
popf
xchg
leave
ficoml
pop
lret
hlt
addr16
xchg
and
xchg
gs
adc
jne
mov
shrl
inc
adc
repnz
mov
loop
mov
jge
adc
jnp
xchg
or
ljmp
lcall
idivb
out
test
dec
or
push
sbb
add
hlt
icebp
aam
lock
clc
sbb
in
mov
jne
fmuls
into
sbb
lock
push
shr
insb
xor
xlat
mov
loopne
std
inc
cs
sbb
and
fcomps
add
cmp
fildll
xchg
xchg
mov
push
pop
mov
sbb
sbb
push
dec
mov
imul
call
lods
ljmp
xchg
jecxz
rcll
fists
testb
sbb
popf
and
push
sbb
cmp
mov
or
cmp
shrl
mov
ss
lods
rcrb
loopne
in
es
inc
call
add
cmpsb
shlb
addr16
aam
in
mov
sub
sarl
xchg
sbb
daa
adc
mov
fdivrs
or
mov
test
subl
dec
nop
and
aas
mov
out
mov
test
je
xor
vpsllq
loope
xor
pop
jge
loop
pop
jp
mov
mov
and
mov
push
les
xlat
xchg
jl
mov
sbb
and
js
sbb
aas
xor
mov
or
cmpsb
jecxz
jae
arpl
call
add
jnp
jb
lods
push
cmovl
clc
ja
movsl
outsb
sub
pop
arpl
inc
or
pop
push
mov
adc
fistpll
mov
nop
icebp
pop
sub
or
inc
imul
jbe
lret
loopne
push
mul
add
movsb
push
ljmp
inc
loopne
inc
test
inc
jns
xchg
adc
lea
xor
push
iret
jl
in
cli
ret
pushf
mov
pop
lock
rcr
sbb
adc
xor
push
loopne
cwtl
pop
stos
and
fnstcw
cli
add
cmp
mov
repnz
cwtl
or
stos
xor
sub
or
mov
add
inc
and
outsl
jmp
xlat
cmpsb
xchg
addr16
sub
mov
mov
jl
or
sbbl
movsb
xlat
rcr
xchg
lret
call
cmp
js
inc
inc
mov
stos
jo
pop
cli
pop
jecxz
mov
nop
in
aaa
mov
sbb
mov
in
jg
aad
loopne
xchg
mov
xor
cmpsl
aaa
decl
test
xchg
mov
stc
mov
mov
adc
pop
in
xchg
scas
fldcw
sbbl
jl
mov
jg
cltd
cmc
dec
sbb
js
push
cltd
pop
xchg
jl
jae
mov
cmc
cmp
out
test
subb
enter
cs
test
cmpsb
popa
ja
inc
mov
mov
rolb
jp
mov
leave
push
call
mov
cld
or
dec
sbb
mov
jbe
push
dec
jae
dec
sbb
fisttps
cli
add
enter
aam
scas
mov
xor
gs
repz
and
inc
sub
pop
addr16
push
scas
mov
push
mov
shlb
xchg
cmp
jl
jb
or
mov
rcrl
nop
shr
push
inc
or
push
push
cltd
or
cs
leave
jle
gs
adc
push
bnd
pushf
sbb
lods
jp
movsb
push
and
imulb
cmpsl
xchg
sub
add
jno
pop
rorl
xlat
ss
sti
mov
xchg
xchg
inc
jmp
loope
dec
cmpsl
imul
je
push
popf
mov
inc
repz
out
xor
dec
sbb
xor
jecxz
and
add
adc
divb
mov
daa
jge
mov
fbstp
mov
insb
pushl
sub
pushf
add
cmp
pop
imul
mov
inc
lret
loop
adc
jl
pop
pop
lret
pop
popa
clc
and
aas
or
lds
jp
pop
inc
leave
popa
and
subb
enter
dec
mov
mov
mov
pop
mov
fidivs
jo
daa
ret
lret
xlat
jmp
or
test
or
add
ss
jge
nop
js
ds
mov
repnz
jne
xlat
push
lds
lahf
sbbl
cmp
bnd
enter
inc
sbb
push
adc
pop
test
or
mov
cmp
cltd
inc
scas
add
sti
pusha
repz
adc
mov
and
push
in
and
dec
fldl
inc
sub
inc
aad
or
sti
rcrl
sub
push
cld
cmpsb
int
inc
jns
xorl
cld
jne
add
out
stc
fidivrl
lret
cwtl
pop
mov
cmp
mov
int3
out
and
fnstsw
into
jle
mov
xchg
aam
hlt
fcomps
popl
lahf
fs
add
cmp
loopne
ljmp
movsl
dec
jp
das
and
dec
inc
cmpsl
cmp
inc
imul
xchg
in
fwait
out
arpl
push
dec
cltd
add
add
ror
add
sub
push
dec
and
fdivs
cmp
daa
aaa
mov
adc
dec
jbe
add
ja
stc
icebp
into
mov
fists
inc
push
push
push
cmp
mov
sarl
ret
adc
xor
cmp
push
push
rcl
les
jmp
inc
movsb
cmc
scas
ljmp
lods
push
outsl
arpl
fbld
mull
outsb
adc
repnz
push
loopne
lahf
enter
xlat
push
popf
xor
enter
fs
in
fcomp
xlat
fcoms
leave
add
jb
mov
xchg
mov
lock
mov
and
and
add
movsl
xchg
test
xor
inc
inc
mov
jmp
call
into
outsl
and
cmp
popf
hlt
inc
cs
adc
mov
rorl
xchg
and
cmp
pop
sbb
sahf
gs
hlt
jl
xchg
mov
cmpsb
push
inc
pusha
imul
aas
cmp
or
jae
cmp
lds
add
imul
xchg
sub
or
jo
shl
test
pusha
fdivrl
pop
and
lret
lret
or
mov
push
arpl
lds
imul
dec
shlb
mov
inc
call
adc
jnp
call
ficomps
xchg
cmp
repnz
inc
nop
jb
mov
xor
fists
or
nop
test
les
jns
movsb
mov
stos
repnz
gs
pop
and
mov
push
sub
and
push
movsb
sbb
ss
mov
cmp
cmp
cmp
and
push
insb
repnz
stc
hlt
out
pusha
mov
popa
or
imul
and
mov
stos
pop
pop
add
xchg
cli
imul
pop
cmovb
xor
push
xchg
pushf
mov
in
in
sub
movsb
cmpsl
xchg
jl
sbb
popa
loope
push
popf
icebp
lcall
mov
out
scas
fidivrs
inc
fildl
js
jmp
dec
push
xchg
add
adcl
loopne
lcall
mov
push
cmc
sarb
popf
mov
mov
jne
push
lds
pushf
aad
dec
fwait
aaa
adc
mov
cmp
aad
js
mov
dec
cld
rcl
push
add
loop
mov
gs
xor
push
adcl
push
sub
sub
mov
mov
push
repz
hlt
test
imul
out
int3
pop
sahf
and
insb
pop
or
sub
push
sti
std
or
adc
pop
ret
test
jg
inc
negb
movsl
jecxz
cmpsb
mov
pop
loopne
leave
jmp
dec
int3
mov
inc
cs
cs
mov
add
or
and
adc
jge
fidivs
xchg
pop
nop
push
sbb
pop
test
addb
movsl
jno
xor
mov
mov
addr16
mov
push
sbb
xchg
sbb
dec
es
movsb
bound
or
inc
out
sbb
dec
jbe
fwait
xchg
ret
jnp
sub
xchg
fidivl
jae
mov
out
fnstenv
jns
cmp
ficompl
lock
or
mov
cmp
aaa
cmp
into
mov
mov
or
sbb
pop
popf
js
mov
dec
mov
enter
stos
inc
in
dec
push
es
and
xchg
rolb
fwait
pop
je
xor
cltd
mov
out
fisttps
out
popf
jnp
sub
or
or
push
cmp
jecxz
and
and
add
add
jge
mov
push
int3
jecxz
dec
pop
rcr
or
ret
stos
push
dec
push
aas
sbb
sahf
cltd
out
xor
sbb
outsl
mov
leave
sbb
dec
call
testl
jge
xchg
and
inc
sbb
scas
shr
lds
dec
push
repnz
les
push
stc
jp
jnp
cmp
jb
add
push
sub
sub
xor
add
adc
adc
lcall
cmpsb
mov
mov
lahf
push
xchg
into
in
daa
xchg
mov
mov
ret
aad
leave
or
jno
dec
cmpsb
repz
fildl
lret
scas
pop
out
fadds
aad
imul
imul
pop
mov
addb
ret
or
jnp
xchg
jmp
idiv
inc
popa
or
add
mov
cmp
int3
int
fwait
pop
into
sti
pop
lods
sub
and
push
adc
fucomip
cwtl
imul
adc
mov
ljmp
pop
jge
pop
mov
daa
mov
mov
cltd
add
gs
fistl
mov
dec
or
add
xchg
pop
cwtl
inc
stos
cmp
fwait
xchg
pop
int3
imul
or
lret
add
imul
shufps
in
fimull
push
repz
imul
add
sbb
cld
ss
js
cmp
imul
jle
lret
sub
mov
pop
movsl
sub
andb
in
fwait
sbb
lods
jl
xor
aam
inc
call
test
sbb
xchg
inc
sub
inc
in
shr
sub
ror
fwait
mov
xchg
test
mov
jmp
jp
xchg
inc
push
in
out
rol
xor
sbb
dec
cmp
push
insb
and
test
add
hlt
shl
mov
mov
pop
inc
push
lods
roll
dec
ret
mov
in
mov
sar
rorb
pushf
mov
in
lock
xor
pop
jecxz
arpl
in
jae
imul
jae
sub
loop
arpl
push
add
scas
push
sbb
and
enter
xor
jbe
insl
sbb
cmp
arpl
es
repnz
sbb
push
int
shlb
xchg
add
jp
push
add
repnz
jns
mov
int3
xor
xor
cmp
inc
pop
out
aaa
ss
subb
ss
xor
mov
dec
cmpsl
jno
push
stos
out
imul
cltd
mov
movsl
or
xorb
push
sub
dec
stos
fistps
fstl
jmp
std
xchg
cmpsl
loope
or
es
mov
add
jb
cli
popf
shlb
gs
cmp
dec
aaa
jmp
out
jmp
js
int
repnz
jg
and
dec
ficomps
enter
sahf
and
fwait
in
push
sbb
cmpsb
or
jmp
add
jae
push
mov
sbb
insl
and
rclb
hlt
mov
inc
pop
adc
jno
pop
jne
iret
ret
jno
insl
clc
cmp
xorb
out
fdivs
pop
pop
sbb
mov
dec
mov
xchg
jne
dec
sub
dec
add
mov
or
jb
loop
fcoml
test
mov
dec
xor
test
sub
push
mulb
fwait
pop
inc
or
dec
pop
mov
add
sbb
jne
cld
inc
movsb
vpsubw
lret
in
insl
es
mov
clc
icebp
imul
ret
jecxz
fbstp
cmp
mov
jb
xor
and
mov
out
lret
cmpsl
call
imul
stos
push
cmp
or
pop
sar
imul
aas
mov
jmp
arpl
xchg
loopne
inc
mov
das
or
jecxz
cmp
jnp
repz
fcoms
cli
and
aaa
nop
adc
add
insb
sbb
pop
call
dec
pop
scas
or
mov
repnz
dec
pop
mov
xchg
mov
sub
hlt
inc
jae
cli
lods
je
mov
dec
and
pop
push
int3
xchg
jecxz
lret
out
push
inc
orl
aas
in
add
loopne
mov
mov
rdtsc
pop
ret
jmp
sti
movsb
cltd
loop
cld
xchg
mov
pop
jne
xchg
or
popa
fiadds
jb
xchg
test
sbb
jmp
xorl
das
pop
movsb
and
push
shl
pop
inc
out
adc
pushf
lds
test
rol
xchg
loope
push
and
gs
clc
pop
cs
std
push
call
ljmp
mov
jmp
rep
pop
mov
inc
sub
jns
les
cmc
push
cmp
repnz
popa
pop
jl
xchg
cli
les
pop
fisttpl
test
and
pop
cs
sub
mov
dec
cmpl
lods
xor
in
std
xor
jae
movsb
sbb
pusha
fs
popf
repz
movb
out
push
sub
mov
clc
arpl
ljmp
popa
daa
add
sbb
ret
mov
or
mov
cmc
xor
sub
inc
dec
xchg
sti
cmp
fstpt
cld
mov
sub
repz
cmp
or
jecxz
fistpl
ja
xchg
imul
jge
dec
ljmp
cmpsl
add
cs
imul
lret
lahf
mov
sub
mov
rcl
jge
rcr
cs
gs
push
or
and
lock
sbb
add
je
insl
stos
inc
mov
out
jnp
adc
and
popa
xor
fstl
push
push
xor
cmp
or
out
lahf
dec
mov
sti
imul
inc
cmp
pop
pushf
lea
dec
subl
sbb
lods
sub
inc
push
cld
aam
subb
jns
or
dec
add
jae
dec
dec
and
sub
and
adc
aas
dec
iret
cmpl
jno
out
sbbl
fnstcw
push
lret
call
sbb
and
xchg
xchg
add
into
sbbb
xchg
add
lahf
fmul
push
lods
inc
xor
call
mov
push
out
sbb
or
ret
fstps
jmp
in
mov
outsb
int3
xor
sbb
mov
mov
jg
fldl
rorl
mov
xor
pop
aad
mov
push
xor
xchg
inc
stc
icebp
dec
jecxz
inc
out
mov
mov
mov
pop
leave
mov
popf
inc
rcrl
imul
sahf
popf
mull
pop
sahf
scas
inc
idiv
push
and
test
out
shr
repz
pop
sub
subb
iret
xchg
xchg
loop
push
dec
ds
pop
fisubrs
and
or
add
inc
movsl
jle
in
push
cmc
pop
push
xchg
sub
push
fucom
popf
aad
xchg
movsb
mov
dec
add
pop
fcmovnb
lods
jo
rcrl
mov
js
dec
jno
sub
aam
cwtl
adc
push
mov
ret
pop
hlt
fdivr
movb
addr16
in
mov
scas
push
mov
pop
test
test
lea
push
lock
sahf
xor
stos
or
sbb
sbb
je
stc
and
jbe
or
scas
std
les
or
jb
dec
inc
sti
aad
ret
sub
sub
or
push
dec
mov
mov
add
mov
dec
adc
mov
xor
cli
rcrb
inc
xlat
push
daa
mov
cmp
bnd
dec
daa
push
push
ss
mov
sahf
jp
out
fdivrl
js
jne
rclb
sahf
repnz
inc
jmp
adc
mov
cmp
dec
xchg
out
rorb
test
jle
dec
mov
setbe
dec
into
jp
or
xchg
or
xchg
adc
in
addr16
es
shr
adc
rcrb
lods
inc
mov
outsb
lods
dec
mov
mov
lret
out
mov
ss
scas
push
iret
sub
mov
push
jno
in
ret
dec
test
inc
sub
or
fbstp
out
int
inc
mov
lret
int
sbb
or
mov
pop
sbb
dec
popf
imul
lret
xchg
aam
pop
cli
add
call
mov
out
and
sahf
data16
movsb
clc
cmovl
xchg
sbb
aad
loopne
fstl
in
and
pop
jno
ret
ja
mov
inc
das
ja
ret
into
jmp
push
pop
and
mov
push
inc
sahf
clc
dec
fwait
mov
pop
xor
lock
ret
pop
and
pop
icebp
pushf
xchg
adc
mov
add
sbb
aaa
push
pushf
xlat
in
mov
into
xlat
jae
jp
lods
rorl
mov
out
mov
fsubl
add
lahf
mov
mov
cmp
cmp
jns
leave
dec
data16
bound
stos
mov
repnz
cmp
repz
xchg
add
sbb
add
aaa
cmp
cmp
pop
outsb
mov
in
stc
hlt
sub
call
repz
mov
daa
sub
push
out
das
lret
pop
lock
sti
lret
icebp
mov
inc
cmpsb
inc
dec
test
xor
mov
test
cmp
fiaddl
xor
sbb
das
xor
jbe
aaa
inc
jnp
movsb
push
dec
sbb
scas
add
jmp
int3
js
mov
loopne
sbb
and
adc
pop
mov
xchg
mov
stos
int
mov
sub
sbb
xchg
bound
lea
dec
inc
xchg
jl
mov
jl
hlt
mov
or
sbb
push
push
pop
mov
fistpll
push
add
push
push
pop
in
mov
jl
xchg
mov
outsb
or
pop
sub
repz
xchg
sahf
jnp
pop
mov
scas
call
xor
popf
push
inc
and
mov
dec
inc
jl
pusha
cmp
rorl
push
mov
aad
cltd
int3
ljmp
enter
jne
ret
popf
fcompl
pop
aas
pushf
sub
fcmovne
mov
fisubl
cld
aad
pop
pop
dec
adc
jne
pop
aad
dec
push
mov
mov
add
div
sbb
iret
push
dec
push
outsl
movsb
stc
cld
pop
int
and
out
sti
jg
pop
lahf
negl
out
adc
lret
jb
pushf
out
cmc
pushf
mov
loop
mov
nop
int3
push
cld
add
imul
lcall
lret
pop
nop
jne
xchg
push
in
sub
pop
ljmp
frstor
out
sar
lods
or
cwtl
add
mov
imul
pushf
xchg
lcall
daa
jno
sub
lret
pusha
loope
jge
jg
loop
sbb
inc
lret
cmc
jmp
mov
imul
push
jb
adc
lea
cmpsb
cmpsl
mull
xor
dec
mov
xchg
xor
or
cmp
aas
pushf
jo
jo
sub
int
xchg
xor
cmpsl
mov
mov
cmpsb
icebp
ljmp
cmpsl
test
cmp
add
push
mov
inc
xchg
mov
pop
pop
fstpl
pop
sub
subb
mov
mov
aad
std
adcl
outsl
movsb
mov
in
sub
inc
or
vprotb
sarb
push
sti
sbb
testb
cmpsb
mov
sbbb
mov
cltd
jg
sbb
js
add
jnp
and
and
loope
mov
int
sbb
imul
sub
ret
mov
mov
nop
push
adc
and
jp
pushf
pop
inc
ja
sub
dec
in
or
inc
aaa
mov
sarb
leave
loope
leave
xchg
jge
pop
dec
je
jbe
xor
outsl
stos
movsl
lock
push
mov
lds
nop
dec
loopne
mov
cmc
sub
mov
mov
rcrl
shrl
adcb
gs
mov
add
fdiv
sub
es
mov
lods
sub
mov
pop
add
push
jg
mov
aaa
push
pop
aas
and
mov
xchg
mov
jp
lods
xor
nop
lcall
push
or
ja
fwait
lret
in
and
pop
pop
pop
in
ljmp
jne
mov
fidivrs
dec
scas
popf
and
jne
popa
or
cmp
loope
cmpb
lret
fistpl
idivl
mov
in
mov
cli
push
sub
sbb
sbb
dec
xor
daa
out
xchg
sti
js
fnstenv
pop
or
sbb
mov
xchg
mov
push
add
ss
inc
mov
shrl
jns
push
arpl
sbb
sub
push
ljmp
test
inc
jae
lahf
or
push
enter
rcl
or
add
mov
jnp
into
add
push
int
jns
inc
mov
lock
es
xchg
adc
xchg
cli
addr16
stos
int
pop
out
jg
jae
dec
mov
mov
lods
xchg
jne
and
sbb
sbb
adc
aam
stos
sbb
vpunpcklwd
fmul
addr16
sbb
testl
mov
push
mov
addb
cmp
xor
sbb
ret
xor
dec
ja
cmpsl
mov
pop
xor
in
add
dec
inc
arpl
xchg
ficompl
dec
lahf
inc
jnp
dec
inc
mov
icebp
cs
aad
xchg
jns
push
jmp
sbb
mov
rolb
and
dec
mov
sbb
inc
test
fs
mov
dec
cmc
mov
dec
push
pusha
ljmp
dec
scas
shlb
push
and
into
xchg
scas
dec
xor
pusha
popl
inc
push
rcl
xchg
or
into
insl
stc
xchg
imul
dec
scas
js
add
cld
test
add
imul
fcoml
scas
pop
jns
cmpsl
or
push
or
je
cmp
pop
mov
scas
xchg
xor
add
fistpll
adc
mov
pop
sbb
in
or
sahf
cs
jae
inc
xor
ja
lret
pop
sahf
mov
ret
push
and
aas
es
int
mov
fsubrl
lds
test
inc
inc
rorb
jmp
add
inc
cmp
js
sar
std
inc
data16
pop
sub
ja
cmp
sub
fcmovne
sbb
int
shl
aad
test
repz
jl
dec
lods
push
je
push
cwtl
xchg
xor
ja
sbb
popl
hlt
push
dec
or
sub
xlat
pop
cmp
adc
push
cmp
aam
clc
push
inc
fucom
push
push
adc
pushf
jge
cld
ficompl
ss
adc
sub
cwtl
test
pusha
cmp
rcl
aad
adc
inc
arpl
pop
mov
xchg
lcall
daa
mov
fsubrp
iret
js
rolb
jae
xor
shlb
sar
jl
sahf
movsl
popf
dec
pop
movsb
push
push
and
cmp
movsb
int
popf
or
inc
mov
jle
sbb
mov
mov
inc
pop
push
adc
in
dec
dec
int
loop
adc
add
cmp
dec
ret
ljmp
pop
push
aas
push
shl
mov
mov
push
mov
mulb
adc
push
or
mov
mov
in
fbstp
sub
push
insb
mov
push
adc
out
mov
rol
mov
cmp
fiaddl
mov
pop
adc
std
or
aad
data16
enter
sub
out
fsubr
mov
push
jbe
into
pusha
push
pop
clc
push
fucomi
xor
andb
and
inc
fildl
test
inc
mov
fdivs
cmp
mov
pushf
pop
and
sub
flds
into
sub
mov
out
leave
pop
test
hlt
jle
cld
pop
ds
inc
jp
test
jge
xor
push
out
fldl
mov
jns
cmp
sub
in
in
jmp
and
add
inc
cmp
inc
jle
push
and
cmc
cmp
adc
movsb
out
jg
adc
inc
inc
mov
imul
sahf
xchg
lret
inc
les
shlb
mov
in
ret
mov
sbb
sbb
out
fnstenv
js
push
aas
pop
inc
mov
push
xchg
cmp
aas
sbb
pop
aaa
add
cld
in
mov
inc
push
addr16
dec
jno
fcoml
dec
stc
jne
out
cwtl
loope
repnz
aad
jns
nop
jecxz
frstor
cld
xchg
idivl
in
mov
xchg
ret
pop
les
push
push
mov
pop
popf
shll
xor
in
aam
ja
fisubrl
xor
mov
or
insl
int3
mov
sbbb
adc
mov
mov
mov
mov
iret
repz
sbb
nop
and
stc
pop
and
out
pop
xchg
daa
dec
sarb
lret
sarl
pop
push
mov
push
test
xor
mov
ja
notb
lret
add
das
push
push
push
jbe
pop
aas
pop
sbb
or
aam
in
adc
xchg
test
hlt
dec
adc
mov
loop
outsl
add
pop
push
pop
test
aad
lods
jne
ror
mov
mov
push
fldcw
jg
test
add
aam
mov
stos
sub
dec
sbb
mov
adc
out
or
inc
cwtl
pop
jl
lock
es
xchg
rolb
inc
jo
mov
push
push
ss
lds
icebp
enter
mov
andb
dec
xor
push
mov
jo
xor
adcb
popf
loopne
es
or
cmp
push
mov
jae
cltd
mov
adc
push
jecxz
out
nop
and
xlat
or
call
ja
cs
and
vmovupd
dec
mov
xchg
xor
nop
dec
gs
cmc
or
shrb
dec
icebp
adc
jp
ljmp
mov
xor
sbb
xor
in
mov
xor
xor
pop
inc
mov
aad
loop
or
negb
rorb
pop
or
pop
jbe
sbb
test
adc
mov
jno
outsb
mov
sbbb
sub
test
push
loope
jnp
mov
push
flds
imull
in
int3
nop
pop
dec
adc
ljmp
jb
push
jecxz
and
xchg
ficoms
inc
sub
mov
mov
arpl
gs
dec
and
fs
out
or
mov
or
aas
jno
pusha
mov
ss
push
into
js
stos
adc
jl
cmp
xchg
int
jno
inc
push
xchg
sbb
pop
into
fildll
in
sub
ljmp
sbb
pop
repnz
lcall
pop
cltd
adc
dec
push
ret
outsl
testb
test
js
pop
gs
sub
orl
xchg
mov
lods
rolb
and
pop
decb
sub
dec
cltd
push
pop
mov
jbe
sbb
push
or
arpl
push
outsl
test
mov
push
push
out
and
mov
std
xor
lock
fsubrl
xchg
in
add
pop
add
insl
or
or
push
icebp
out
outsl
je
or
inc
push
outsb
ljmp
xor
pop
jbe
push
and
dec
cli
pop
mov
out
jecxz
mov
xor
or
mov
test
lahf
or
sbb
xchg
mov
lret
incl
adc
aam
mov
testb
ret
sub
pusha
push
ret
xchg
gs
rorb
repnz
lahf
sbb
cs
dec
mov
pop
inc
pop
ret
inc
mov
push
fwait
pop
adc
push
lods
mov
ljmp
sbb
push
xor
mov
mulb
sarb
insl
pusha
xchg
push
jg
cmp
fldcw
gs
rcr
cmc
leave
cmp
push
add
mov
add
setb
sub
lds
xchg
stc
nop
mov
xor
test
xchg
inc
mov
push
cmp
push
setl
cmpsl
mov
adc
push
or
repnz
loope
push
mov
xor
ss
lcall
movsl
jns
sub
aad
insb
push
jbe
out
xlat
gs
sub
push
mov
jge
std
xchg
adc
push
pop
in
inc
mov
incl
inc
into
sbb
repz
cmpsb
sahf
ret
inc
loope
hlt
xchg
push
sbb
sub
mov
cld
sbb
movsb
out
fwait
out
push
push
jge
insb
and
jo
jnp
fidivs
and
fmull
ds
jmp
std
cmp
pushf
div
inc
cld
sub
mov
in
sub
nop
mov
push
xor
dec
push
mov
mov
mov
movsl
dec
hlt
sbb
lahf
scas
in
mov
pusha
lahf
push
outsb
jle
jnp
pop
mov
mov
fnstcw
jecxz
addr16
jnp
ficoms
icebp
push
and
add
data16
jp
and
pop
xlat
or
rolb
sbb
adc
vandnps
or
xor
je
cmp
mov
repnz
add
je
jo
ja
xchg
clc
sub
bound
xchg
in
sub
fisubrl
test
cmp
mov
and
dec
sub
imul
and
xchg
and
cld
les
and
push
xchg
adc
and
cmp
push
jne
fdivs
dec
cmp
pop
adc
xorb
repz
loope
scas
mov
xor
push
insl
mov
cltd
aad
xor
mov
rclb
or
fildll
in
add
hlt
cmp
or
pop
dec
outsl
mov
hlt
test
adc
ret
pop
cmpsb
pop
orb
in
testl
repnz
ret
idiv
cmp
cmp
and
lock
xchg
fiaddl
jp
sbb
lods
xchg
shll
lret
ds
fsubl
add
out
or
cmpsl
adc
dec
xor
cmp
out
insb
mov
fistpl
ljmp
subb
and
xchg
or
stos
push
inc
std
idivl
xchg
lret
mov
outsl
cmpsl
movsl
xor
mov
pop
outsb
lods
inc
sub
popf
sahf
xor
call
sbb
jb
sub
xlat
xchg
inc
and
in
cmc
test
mov
or
and
mov
lret
dec
aas
adc
or
cmpl
leave
sub
mov
inc
cmc
pop
xchg
lds
dec
pushf
cli
dec
iret
adc
clc
or
inc
and
mov
out
arpl
je
xchg
std
in
mov
cwtl
sbb
sbb
and
adc
jbe
js
pop
out
jmp
push
pop
mov
xchg
sbb
clc
cld
insl
xor
mov
mov
inc
enter
push
mov
xlat
and
ja
loope
imul
lahf
fs
mov
ds
adc
test
mov
jne
scas
ret
inc
int3
or
lea
jmp
push
shl
jns
push
lea
xchg
pop
sti
sbb
sbb
push
popf
inc
arpl
aam
fdiv
pop
aam
into
int
aas
es
rcrb
sbb
add
push
pop
xchg
cltd
call
sarl
and
ret
sub
jo
cmpsl
sub
pop
inc
xchg
lds
xlat
pop
lods
adc
jl
imul
dec
ret
out
xchg
xchg
cli
std
and
mov
rcr
jno
mov
outsb
bound
dec
aaa
aad
into
stos
mov
mov
dec
xchg
sbbb
lahf
push
jmp
pusha
push
and
mov
mov
mov
mov
mov
jae
push
sub
xchg
lock
xor
stos
ja
xchg
mov
test
xor
push
jmp
stos
outsb
sub
jb
lods
mov
fdivl
push
mov
fisubrl
iret
fsub
fs
nop
adc
out
mov
test
and
or
test
inc
shr
nop
pop
mov
data16
sub
outsl
stos
pushf
sub
sbb
mov
xor
pop
clc
lahf
sbb
dec
xor
or
mov
push
fsubr
imull
js
lock
into
mov
jmp
mov
pop
mov
cld
mov
shl
popf
lea
pushf
inc
xor
or
frstor
imul
push
outsb
jle
ljmp
gs
jns
inc
push
cmpsb
xor
shl
push
mov
mov
mov
lret
add
in
je
jns
mov
scas
outsb
testl
jae
hlt
clc
bound
test
and
sbb
sbb
shrb
insb
dec
push
fwait
pop
push
mov
cmp
enter
jns
shlb
mov
pop
push
mov
shl
push
das
gs
mov
dec
mov
xor
fidivrs
dec
das
xor
and
sahf
inc
mov
mov
cld
xor
pop
dec
pop
pop
fs
adc
int3
xor
or
push
mov
pop
and
and
xlat
dec
out
aaa
jge
add
sbb
fwait
push
loop
dec
and
jmp
xor
les
in
in
ss
popf
add
popf
mov
or
jmp
or
mov
rcll
stos
cmp
inc
test
jo
stc
rcr
lock
cmpsb
xchg
cmpsl
xor
rorb
jns
sbb
sub
in
add
mov
filds
jge
sub
fsubrl
aas
cwtl
clc
in
adc
in
and
mov
inc
jecxz
stos
dec
call
clc
leave
jno
in
rorb
mov
dec
and
or
lock
iret
ja
and
ret
xor
icebp
push
mov
out
call
int
test
sub
inc
mov
cwtl
movsl
cmp
fistps
xlat
imul
sub
aas
jmp
lods
adc
fisttpl
and
insb
cltd
cmp
stc
insb
mov
leave
mov
pushf
aaa
cmp
adc
and
add
xor
stc
xchg
int3
jecxz
pop
test
addr16
ja
mov
fs
jp
mov
or
jbe
add
xorb
dec
add
push
jecxz
jae
mov
adc
inc
add
jae
sbb
es
push
add
push
or
aaa
adc
xchg
clc
xchg
jo
mov
xor
push
stos
xor
nop
ror
or
sub
push
push
push
sub
inc
in
add
xor
out
mov
mov
addr16
xchg
out
repnz
and
mov
jecxz
pop
enter
jp
cmc
outsl
loope
mov
cwtl
aam
repz
xor
lret
lret
xor
dec
daa
test
out
cld
or
mov
sub
out
sahf
mov
mov
and
cmp
aam
jl
int3
cld
dec
cmc
add
mov
insb
pop
shll
pusha
fmull
mov
shlb
rol
sbb
and
mov
add
jne
xor
fisubs
cmc
scas
xchg
xorl
inc
push
scas
stos
adc
repnz
movsb
push
jle
sbb
aas
adc
jp
ss
sub
pop
sub
in
inc
mov
mov
clc
lahf
fwait
xor
ret
xchg
or
mov
lods
aad
aam
into
loope
sbb
pop
pop
lahf
cwtl
repnz
mov
outsl
sbb
add
push
scas
pop
loopne
sub
push
in
sbbl
pop
fwait
sub
dec
repz
loope
in
xchg
test
inc
xor
fmuls
out
jle
das
cmp
and
jp
mov
xor
mov
pop
popa
cmpsl
push
mov
push
repz
scas
pop
and
imulb
push
loopne
iret
adc
insl
jle
mov
gs
cmc
dec
pop
fs
cmp
xor
mov
in
cmp
out
cmp
xor
cmpsl
nop
ljmp
mov
ljmp
loopne
int3
sub
fimuls
scas
lods
mov
mov
push
sub
pop
xchg
mov
inc
test
push
and
or
addr16
and
in
in
popa
jns
sarl
test
dec
jb
rcll
sti
mov
xor
out
adc
cwtl
int3
sub
fldl
inc
fucomp
add
push
lock
push
sub
mov
xchg
mov
or
cmp
dec
loopne
push
enter
int3
pop
das
fildll
aas
cld
inc
cmpsl
iret
lods
push
mov
fisubrl
out
sbb
cld
pusha
into
out
out
lds
or
jg
in
out
addr16
mov
test
cld
mov
std
sarb
outsl
pop
and
das
push
cmpsb
push
loope
pop
test
test
inc
xchg
sub
std
push
lods
add
xchg
or
std
and
in
fistpl
mul
dec
cli
dec
push
and
push
inc
jnp
or
adc
inc
mov
dec
jo
push
in
adc
or
sub
adc
xchg
fsubrp
jmp
mov
xlat
fnstcw
pop
js
mov
cmpsl
ret
and
xor
cli
mov
xchg
cmp
mov
in
imul
jbe
sarb
ftst
movsl
mulb
or
pop
or
push
mov
int
sub
dec
bound
fs
repnz
outsl
cmp
pop
push
lahf
xor
outsl
ds
bound
sbbl
inc
loopne
jmp
iret
sbb
push
into
dec
cld
aaa
andb
rcll
aad
fmulp
ljmp
int3
in
mov
fsts
xor
in
and
pop
stos
aad
mov
adc
popf
mov
loope
ret
mov
dec
test
mov
cltd
cmp
sub
popa
add
test
cli
adc
ss
xor
repnz
movsl
cmpsb
cmp
sti
lret
mov
imul
cli
mov
imul
arpl
and
cmp
ret
je
pop
nop
xchg
ds
aas
xlat
cmp
scas
outsl
cmp
loope
adc
mov
dec
fdivl
repz
jbe,pt
and
push
push
xchg
mov
in
xchg
or
or
mov
jmp
cmp
fdivrs
in
sub
leave
gs
mov
in
push
lods
jg
ja
or
negl
clc
repz
or
cmp
sub
pusha
sub
inc
add
testl
outsl
div
inc
fdivrs
out
push
xor
cmp
sbb
dec
sub
xlat
cmp
pop
inc
loope
sbb
dec
sbb
lret
ror
push
out
pop
outsb
cmp
mov
clc
insb
cmpsb
mov
movd
xor
inc
mov
pop
mov
and
lods
mov
add
add
cmpsb
lock
or
decb
dec
pushf
push
repnz
cltd
jo
ret
adc
inc
xor
mov
les
in
notl
dec
arpl
pop
mov
push
test
jg
jne
xor
xchg
shlb
fwait
inc
xchg
insl
cmpsb
cmpsl
fnstsw
or
lock
stos
dec
loopne
sarl
je
ret
pushf
push
fwait
sbb
dec
cs
xchg
pop
mov
jg
jmp
mov
daa
cwtl
pop
adc
loopne
out
pop
shlb
mov
mov
stc
xor
or
pop
jl
mov
and
scas
add
pushf
rcl
popl
leave
mov
mov
cwtl
add
or
cmp
cmp
push
inc
pop
jecxz
out
shlb
mov
push
push
push
mov
jae
jp
and
mov
add
xchg
push
adc
nop
rclb
clc
dec
and
andl
cwtl
or
push
sbb
ss
in
aas
hlt
faddl
lods
notl
or
cmp
xchg
and
xor
popa
cli
mov
xchg
mov
shlb
dec
dec
cmp
lods
xor
repz
jle
roll
add
mov
arpl
ror
rcll
ret
mov
imul
jl
cmp
xor
mov
lret
dec
insl
test
xchg
pop
or
xor
stos
xor
ror
push
pop
xor
push
push
inc
mov
loop
and
movsl
sub
mov
mov
sbb
cmp
add
sbb
xchg
lahf
dec
sub
jp
adc
ss
mov
cli
pop
sti
shlb
ret
ljmp
or
pushf
scas
jns
jle
ds
int
ja
xchg
adc
pop
push
imul
mov
mov
fs
lods
mov
sbb
imul
stos
scas
mull
pop
sti
pusha
out
lea
lahf
ss
hlt
scas
push
sarl
js
pop
insb
mov
out
sbb
jmp
xchg
test
mov
adc
jp
inc
das
ljmp
cs
add
push
push
mov
mov
out
into
add
jbe
aas
loopne
xor
or
js
dec
push
ret
pop
ss
cltd
adc
or
icebp
mov
cmc
movsl
cmp
mov
sar
and
cmpsl
sarb
cmp
or
mov
iret
call
pop
insb
jnp
dec
fldlg2
adc
mov
push
repnz
mov
out
sbb
cmp
stos
lods
xchg
loopne
pop
imul
inc
mov
mov
rorl
aam
test
inc
ja
or
outsb
cwtl
jnp
push
pop
sbb
cmp
scas
addr16
das
scas
dec
rcl
cmp
pusha
mov
or
outsl
sub
mov
pop
mov
das
inc
fdivrl
pop
xor
subb
nop
jne
clc
clc
sar
aam
adc
fcmovu
aad
xor
adcb
dec
repz
jecxz
mov
cmc
pusha
cmp
ljmp
negb
adc
outsb
filds
push
jne
ja
test
push
adcl
adc
out
je
xchg
push
gs
pop
push
cmpsb
push
xchg
push
sub
loop
fwait
into
sti
or
cmpsb
mov
xor
pop
sahf
add
nop
aam
push
mov
pop
cmp
dec
pop
sbb
adc
push
inc
test
jbe
sbb
sbb
lret
ds
mov
popf
ret
mov
dec
push
inc
rcll
inc
and
lds
out
xor
fs
loope
push
xchg
scas
shll
sbb
movsl
repz
out
push
addr16
lcall
lods
cmp
aas
inc
fistpll
jmp
sbb
xchg
mov
xor
fcompl
les
or
pop
lcall
mov
adc
push
sbb
jmp
xor
sbb
add
lcall
dec
shrl
hlt
xchg
xchg
fnstsw
repz
push
fsubrl
ret
mov
mov
push
xlat
movsb
mov
mov
arpl
aaa
push
nop
pop
enter
and
xor
dec
in
dec
clc
add
test
ja
mov
imul
rcrb
outsb
inc
rcrb
outsb
dec
inc
movsb
push
sti
add
xor
in
loope
shl
mov
mov
adc
mul
outsb
mov
adc
mov
mov
arpl
popf
mov
jnp
and
or
jecxz
mov
pop
fincstp
nop
mov
mov
cmp
ds
insb
jp
loopne
lods
movsb
xor
mov
pop
ja
notl
sub
rcll
jno
cld
es
addr16
test
lods
aaa
outsb
fildll
pop
cmpsb
mov
xchg
jmp
pop
push
stos
inc
mov
pop
sub
xchg
inc
pop
popf
stos
jmp
xchg
push
add
test
out
gs
sub
mov
lret
in
lea
add
in
jge
pop
sbb
mov
cmp
push
enter
jmp
mov
iret
test
sahf
shr
pop
jmp
pop
jb
addr16
adc
repz
dec
xchg
fs
and
cmpsb
or
in
lret
add
jno
ret
test
mov
sbb
sbb
xlat
mov
xlat
adc
das
jo
repnz
cltd
es
mov
lea
rclb
mov
hlt
mov
cmc
adc
push
dec
adc
jb
and
mov
pop
popf
fdivs
adc
leave
out
ss
les
sub
xchg
shrl
add
filds
test
lods
cmpsl
outsl
sub
enter
fnsave
lret
push
sbb
mov
popa
push
sarb
lock
sahf
xchg
xchg
imul
movsb
gs
stos
imul
sbb
inc
outsl
sbb
cmc
dec
push
sub
sub
icebp
cwtl
testl
jle
xchg
add
je
xor
pop
xchg
and
sbb
sti
adc
jae
leave
jno
mov
aam
or
and
xchg
daa
sahf
es
das
jns
mov
or
cmc
in
lret
or
inc
push
mov
mul
in
dec
cmp
cmp
push
dec
mov
sub
popf
or
hlt
push
std
jbe
mov
subb
out
outsl
cmp
cmp
jae
popa
push
pop
lret
cltd
sub
or
hlt
dec
shlb
outsl
sub
adc
bnd
jb
jle
test
xchg
mov
adc
or
pop
das
sarl
and
jle
sub
ficompl
xor
mov
mov
sbb
pop
test
aad
sub
xor
inc
jg
push
inc
push
adc
imul
dec
or
sbb
insl
jl
sub
pop
jmp
lock
xchg
ss
fmuls
sub
inc
in
scas
and
adc
pop
or
sti
sbb
out
xor
inc
mov
add
sbb
xor
aaa
mov
fsts
mov
xor
mov
orl
and
adc
mov
mov
std
adc
mov
push
data16
and
js
jae
add
shl
adc
xor
adc
push
push
lret
hlt
xor
xchg
shll
repnz
xor
bnd
push
movsb
xchg
arpl
fcmovb
mov
in
sbb
lds
cs
outsl
pusha
lret
adc
into
imul
std
lret
sbb
ret
test
jp
inc
xor
dec
rorl
add
out
inc
jp
push
ret
and
sarb
out
push
sbb
stos
lock
movsl
in
pop
data16
xchg
loop
test
mov
cmp
push
dec
sbbl
imul
pop
xor
imul
out
jp
mov
sbb
cs
xchg
push
imul
fists
iret
push
shlb
inc
ds
addr16
push
sub
aad
fidivs
aam
xor
negl
fsubrs
xor
js
sbb
hlt
sbb
sub
cmc
sub
adc
adc
inc
aaa
movsl
je
inc
and
mov
and
movsb
cs
stos
call
loopne
mov
or
sub
xlat
pop
movsl
data16
jae
inc
add
imul
sbb
fnstenv
sti
jmp
jmp
nop
ja
stos
lcall
add
fiadds
dec
call
sub
sbb
jbe
mov
xlat
iret
pop
cmp
popa
sbb
sub
dec
mov
int
sarl
cmc
pcmpgtd
sub
add
dec
push
lods
and
add
sub
sub
add
xor
sbb
test
mov
add
or
mov
push
rorb
xchg
jle
pushf
adc
ss
lret
mov
pop
orl
mov
sub
push
add
pop
xchg
xor
fistpll
stos
in
cli
jnp
out
xor
cmp
sub
in
jp
cltd
fldl
sub
out
mov
fldcw
jns
mov
arpl
call
push
push
int3
mov
cld
imul
sub
lcall
mov
xor
sbbb
xchg
je
mov
jae
aaa
lahf
mov
jbe
pop
sub
inc
adc
inc
nop
jne
xor
inc
ljmp
clc
dec
mov
xchg
lds
mov
cwtl
in
xchg
imul
inc
cltd
in
xchg
jmp
aam
push
xor
push
stos
gs
mov
lods
ret
fwait
dec
cmp
xchg
sub
or
mov
repz
cmp
mov
xlat
mov
add
mov
adc
je
mov
and
mov
out
iret
into
mov
pushf
pushf
inc
inc
lcall
push
cli
xchg
mov
pop
out
ficoms
and
or
mov
and
cwtl
dec
inc
insb
das
xor
ficoml
lahf
ja
adc
xchg
fdivl
orb
sub
ror
int
or
mov
jno
sbbl
cmp
fiaddl
ret
lds
sub
and
jae
xor
outsb
jle
mov
orb
filds
mov
loopne
loop
pop
je
xchg
leave
sub
incb
dec
pusha
movsb
or
push
sti
or
clc
cmc
jecxz
das
mov
fdivrs
and
sub
jecxz
pop
xor
and
negb
call
jle
ret
xchg
dec
mov
xchg
test
stos
xor
lcall
pop
lds
xchg
pop
push
inc
push
pop
adc
mov
pop
dec
xor
jge
sbb
and
lcall
inc
sub
jmp
ss
es
pop
out
sub
popf
adc
push
xor
pop
xchg
push
aad
int3
idivb
cld
mov
sbb
cmp
xor
out
mov
sub
push
fwait
jno
xorb
push
xlat
inc
pushf
aad
mov
rorl
jb
jl
add
or
cmp
into
sub
adc
daa
sub
mov
pop
adc
mov
loopne
rcll
repnz
add
xor
sub
loope
jmp
jmp
sub
sub
test
cmp
inc
scas
shlb
mov
push
outsb
sahf
mov
fldt
inc
xadd
sbb
pop
out
xchg
out
push
mov
in
xor
xor
mov
xchg
cltd
in
imull
scas
push
cmp
in
mov
or
jge
and
push
out
cwtl
insl
mov
aaa
call
mov
sbb
repz
ljmp
cltd
aaa
mov
in
fyl2xp1
hlt
rol
or
imul
adc
das
adcb
aaa
cmpsb
xchg
mov
or
pop
cmpsl
jmp
xor
outsl
mov
sbb
nop
popf
pop
xor
push
icebp
jne
decl
xchg
ret
stos
ret
cld
insb
and
and
add
ljmp
cmp
add
aad
push
jae
or
and
and
mov
xchg
jns
adc
mov
push
mov
dec
lods
jg
dec
xchg
lea
jno
ret
sub
jae
nop
pop
mov
fimuls
subl
xor
or
push
imul
out
mov
sub
in
fisttpll
push
outsb
mov
inc
sub
add
mov
xor
jg
fcomip
std
push
fistpll
shr
dec
push
in
pop
movsb
pop
xchg
mov
xchg
into
mov
loop
loopne
sub
inc
xchg
xchg
test
pop
insl
enter
mov
fisttps
fidivrl
mov
mov
dec
fwait
jae
mov
fdivrl
adc
add
repnz
pop
int3
bound
inc
xor
or
shl
test
or
add
mov
andl
add
in
mov
add
mov
mov
test
in
sar
cmp
jb
mov
aaa
outsl
call
movsb
stos
je
fbld
int
in
sbb
mov
outsl
or
sti
mov
mov
dec
fs
adc
fcompl
xchg
ret
scas
mov
cmp
outsb
inc
lock
pop
repz
cs
ret
add
dec
fsubrp
inc
push
insb
sar
icebp
loop
ds
cmpsb
enter
scas
imul
fnstcw
sub
inc
arpl
mov
fwait
cmp
lock
imulb
mov
adc
arpl
inc
pop
xchg
hlt
pop
push
pop
jecxz
sub
inc
rcll
fisubrl
jnp
fsub
movsl
mov
or
lods
pop
push
cmp
add
insl
imul
ret
mov
dec
xchg
mov
lods
arpl
inc
je
dec
mov
push
idiv
loopne
adc
cwtl
sub
push
imul
jo
lds
test
outsb
cli
mov
inc
mov
cwtl
lods
sbb
push
testb
sub
rcrl
icebp
mov
jne
loope
inc
xor
inc
cltd
or
scas
leave
pop
or
aad
push
leave
jge
mov
popa
psubsb
sbbb
pop
sbb
or
pop
mov
add
pop
jmp
and
jae
adc
push
or
cmp
fisttpl
int3
into
add
dec
mov
dec
lea
add
jmp
mov
mov
pop
popa
clc
xchg
test
inc
pop
ret
jno
lret
andl
add
mov
mov
les
cmp
jns
xor
pop
add
dec
sbb
leave
cli
jbe
out
fisttps
cmp
jbe
mov
pop
imul
cmc
mov
adcl
aam
movsb
test
repz
add
testb
mov
xchg
dec
adc
ljmp
jle
cmpsb
sub
sub
jns
push
mov
cmpsb
addr16
adc
sbb
shll
jno
cltd
or
inc
pop
sbb
imull
andb
and
test
sbb
dec
pusha
pop
push
ljmp
push
pop
push
test
sub
aaa
repz
out
lods
mov
movsb
sub
pop
jge
loopne
loope
cmp
scas
lea
and
fildl
push
xchg
jnp
sub
pop
mov
xchg
pop
in
xlat
scas
push
es
lods
movsb
stos
pop
pushf
jge
jl
mov
loopne
bound
mov
dec
loope
les
out
push
popf
dec
sbb
das
jno
movsb
pop
rcr
push
and
jnp
add
mov
hlt
pop
fwait
dec
jecxz
or
adc
mov
es
sbb
push
pushf
or
cmp
out
pop
setl
xlat
dec
pop
fldenv
lret
cwtl
cmpsl
leave
xchg
clc
cld
or
iret
sbb
and
imul
or
pop
push
fwait
cmp
dec
cmpsb
sub
pop
stc
test
mov
mov
mov
or
ret
in
sbb
mov
jb
xchg
data16
dec
jl
adc
cmp
roll
hlt
push
push
or
negl
testl
jno
roll
ret
aad
xchg
and
les
cmp
pop
push
jae
pop
insl
iret
dec
jbe,pt
arpl
mov
sub
inc
pop
imul
negb
push
stos
mov
leave
mov
hlt
not
add
idivl
mov
es
sbbl
stos
adcl
fiaddl
outsl
outsl
sbb
hlt
or
aaa
dec
adc
sti
pop
or
rcrl
jae
xchg
push
mov
testl
mov
test
and
cmc
push
rcrl
out
popf
cmpsb
stos
ljmp
movsl
ljmp
ret
imul
add
mov
push
rcrb
jno
push
cld
jne
daa
sbb
loopne
cmpsl
test
sub
add
xchg
dec
and
jne
cs
popf
pop
jnp
lds
cmpsl
push
data16
mov
aas
cmc
pushf
jb
movsl
adc
mov
inc
sub
sbbb
add
fucomp
jbe
fisttpl
roll
sub
sahf
jmp
arpl
je
pushf
scas
insb
aam
bound
shlb
lcall
add
adc
push
pop
sbb
js
push
enter
pushf
add
fsubrl
adc
push
out
ficoms
add
jb
or
cmc
ljmp
jb
jmp
push
push
inc
mov
cli
cld
xor
inc
popf
add
cs
mov
pop
icebp
jecxz
cwtl
cmp
pop
pop
je
setg
stc
xor
stc
mull
adc
inc
dec
orb
leave
aam
sbbl
xchg
jbe
clc
jno
mov
mov
cmpsb
sarb
push
push
push
sub
sbb
pop
sarb
ret
pop
adc
jnp
push
jne
mov
loopne
filds
into
outsl
nop
xchg
jge
lods
mov
cs
sub
jp
xchg
adc
inc
nop
dec
popf
sub
add
push
mov
xchg
popf
clc
jge
mull
pop
cmp
lcall
jne
cmpsb
dec
xor
lock
and
ret
sub
pop
lods
out
xor
cwtl
test
hlt
or
std
fisttpll
repz
dec
pop
mov
imul
inc
sub
in
lret
sbb
loopw
push
or
add
dec
fwait
scas
mov
cmc
pop
iret
stos
test
pop
aam
mov
enter
icebp
push
adc
fisubrl
adc
and
loope
in
jne
mov
jp
cmpsl
mov
xchg
jns
pop
adc
dec
adc
or
jb
shlb
xchg
cmp
stos
cltd
adc
iret
mov
call
push
push
and
adc
add
clc
lods
aad
jl
lock
test
and
jecxz
inc
shl
push
imul
fidivrl
addr16
xor
lea
ja
jp
outsl
ss
dec
fdivs
push
adc
xor
mov
insl
jg
xor
je
sub
mov
loopne
arpl
or
mov
jne
pop
in
mov
addr16
jmp
sbb
jo
or
lock
sahf
mov
shl
dec
sbb
jecxz
pop
sub
or
and
add
imul
mov
fcomp
cmc
xchg
inc
bound
jp
inc
mov
or
add
xchg
push
dec
xchg
dec
in
and
inc
lret
push
mov
loop
mov
outsl
xchg
es
sbb
dec
pop
iret
xchg
sbb
cmpsl
sar
cmpsb
push
cmp
fwait
subl
xchg
mov
cltd
add
mov
mov
aam
repnz
fadds
scas
dec
sbb
outsl
xchg
mov
or
adc
sub
aaa
stc
in
adc
ds
pusha
scas
pop
dec
push
xchg
std
aaa
lea
daa
mul
inc
pop
lea
aad
and
push
mov
aad
or
inc
or
sub
inc
pusha
mov
fstpl
ret
popf
xchg
mov
leave
stos
cmp
dec
sbb
mov
mov
sub
jbe
xorb
cli
inc
ret
out
mov
inc
mov
sbb
fadds
pop
sub
sbbb
or
popa
daa
jl
inc
cmp
lret
fmull
mov
jecxz
xchg
shl
dec
int
cmpsb
sti
icebp
cs
cmp
aad
xor
loope
sbb
aam
or
test
mov
lahf
adc
push
movsb
sbb
lret
mov
cmp
pop
arpl
push
or
mov
or
loopne
cs
push
js
mov
or
sub
loope
subb
cmpsl
int3
pop
dec
cwtl
pop
sub
mov
and
hlt
stos
mov
push
xchg
movsb
xchg
jno
sbb
fwait
iret
popa
add
xor
mov
int3
bound
mov
std
mov
stos
and
lret
xor
fwait
xor
in
inc
push
repnz
mov
jp
xchg
jb
in
cmp
pop
push
jbe
and
xchg
out
or
je
addb
inc
stc
nop
mov
jno
fwait
adc
jb
cmc
popa
dec
pushf
jge
sub
shll
mov
idiv
lret
and
repnz
xchg
test
and
inc
insl
fcompl
sub
mov
inc
and
stos
scas
repz
lds
dec
fisubs
sbb
addr16
cwtl
lods
push
lret
outsb
leave
mov
imul
cs
cwtl
sbb
shll
pusha
sub
dec
cltd
das
xchg
bound
movsb
mov
test
push
jae
imul
mov
jecxz
xchg
sub
xchg
and
inc
jae
mov
jb
popa
sbb
out
out
mov
scas
out
xchg
ret
mov
paddd
sbb
daa
imul
sbb
cwtl
mov
pop
and
ret
loop
sbb
xor
loopne
insl
push
add
sub
jno
mov
fidivrl
rcll
lods
mov
xor
cmp
outsl
sbb
pop
shlb
jg
push
incl
pop
inc
mov
stc
sti
jo
jg
mov
adc
int
mov
shrl
mov
outsb
jecxz
xor
filds
dec
inc
and
cmp
lcall
add
cmpb
aaa
adc
or
xchg
iret
jae
mov
cmp
jbe
jl
push
nop
popa
cli
test
js
add
sti
inc
lret
mov
push
add
repz
rcll
pcmpgtw
lea
xor
jns
mov
and
sub
pushf
scas
shlb
daa
pop
lds
iret
jmp
sbb
cmc
adc
stos
aad
addb
loope
jo
pop
loop
dec
sub
and
loope
outsl
clc
push
cmc
mov
lea
jae
adc
dec
mov
cmc
xor
out
jb
dec
pop
rcll
in
add
xor
shll
mov
jns
lock
dec
faddl
sub
cmp
xchg
adc
pop
mov
rorb
out
rorl
push
int3
jmp
mov
lcall
loop
es
pop
pop
sub
or
adc
out
jmp
loope
sub
xor
into
movsl
push
sbb
repnz
mov
fmull
jae
sbb
lods
or
dec
dec
call
fs
mov
dec
repnz
sbb
or
shl
lahf
cld
cmpsl
into
hlt
not
sbb
sarl
mov
dec
push
push
jno
jge
dec
xlat
sub
or
cmp
and
mov
jnp
mov
cmp
cmp
pop
insb
xor
and
ror
aaa
adc
push
add
sub
test
push
pushf
ja
out
xchg
mov
scas
out
and
shrb
lea
xor
repz
sar
popf
inc
inc
jae
or
hlt
test
push
daa
dec
dec
cwtl
lods
adc
mov
into
int
cltd
inc
imull
imul
divl
dec
pop
and
inc
cmpsb
popa
shrl
sub
shl
pop
add
cmpsl
xchg
cmpsl
scas
in
mov
add
gs
stc
lds
and
int3
lcall
jne
push
popf
fbld
imul
inc
cltd
call
add
push
stc
cwtl
ss
scas
inc
jnp,pn
fldcw
and
imul
mov
mov
fs
jmp
or
decl
sahf
ret
adc
mov
add
mov
jae
cmc
in
cltd
push
loop
or
pop
inc
insb
testb
ljmp
jbe
inc
fistps
pop
subb
cmp
xor
jo
clc
sub
mov
mov
lods
xchg
mov
leave
dec
movsb
aas
inc
jnp
lock
leave
push
add
mov
stos
dec
les
test
mov
fdivrl
push
mov
add
adc
scas
mov
imul
in
cwtl
xchg
pop
or
clc
pop
cwtl
rolb
dec
adc
sar
icebp
inc
sub
and
outsl
pop
in
daa
movsl
xor
xchg
jmp
mov
sbb
push
xchg
sub
or
inc
std
mov
push
mov
mov
lods
lahf
das
cmp
in
lods
xchg
pop
mov
ret
xor
fildll
sbb
rolb
scas
ret
sbb
mov
cltd
cmpsb
dec
and
inc
sbb
add
testl
pop
sbb
mov
mov
add
xchg
cmpsl
movsl
push
ds
xchg
mov
push
mov
add
iret
add
cmpsb
outsl
fucomi
aad
inc
clc
cmp
mov
add
xlat
popa
into
add
movsl
pop
ljmp
adc
sbb
scas
jl
cmpsl
shll
push
fcmovnb
movsl
push
sbb
mov
xchg
scas
icebp
xor
sbbb
jbe
call
push
sub
ja
cmp
jbe
add
or
lds
or
test
jbe
insl
or
or
jmp
jnp
popa
loopne
cmpsl
sbb
and
pop
sti
inc
sbbl
lea
add
sbb
and
rorl
cmc
out
push
jge
insl
push
andl
jmp
mov
mov
pxor
std
push
pop
shl
adc
push
sub
adc
add
js
fxch
mov
and
mov
add
lea
adc
and
fisubl
testb
mov
rclb
push
lea
jmp
rcl
xchg
loope
rcr
xchg
pop
cltd
clc
and
and
sarl
test
xorps
push
cltd
in
sbb
addb
mov
lahf
lods
pop
ficoml
mov
or
mov
popf
lock
in
lods
fsubl
xchg
jbe
adc
adc
sub
xchg
mov
ss
fistps
sub
lea
int3
ret
mov
lds
and
fwait
scas
jne
sbb
cmpsb
adc
and
testb
sub
xchg
mov
mov
dec
jl
or
fldl
xlat
dec
jne
jge
fcomip
push
xchg
addl
sub
xor
and
and
movsb
ret
sar
fldt
shrb
ret
lcall
pop
sarl
jl
dec
or
gs
pop
mov
jecxz
out
dec
inc
pop
xor
in
decb
xchg
ret
jae
lret
pop
idiv
cld
xor
ljmp
sub
rcrl
cmp
loope
dec
subl
push
inc
loope
fdivs
ja
shll
pop
out
jp
lock
std
pusha
bound
add
mov
cmp
sbb
adc
sbb
pop
ss
add
cli
or
popa
inc
mov
sbb
aad
pop
aas
mov
sub
dec
cmc
or
out
dec
jl
dec
inc
jmp
divb
jle
fwait
ja
cli
scas
mov
push
mov
stos
insl
jmp
aad
inc
cwtl
insl
inc
cmp
sub
pop
cwtl
cmp
xchg
cld
mov
jnp
cwtl
lret
jle
push
jae
sbb
ljmp
xchg
mov
lcall
jg
sbb
mov
jbe
pop
mov
dec
jl
xchg
fucom
shll
daa
pusha
jbe
fdivl
and
add
push
dec
adc
jnp
jmp
xor
add
fcomip
or
fldenv
xor
push
ds
idivl
icebp
xchg
push
in
mov
adc
leave
or
mov
imul
icebp
sub
mov
sbb
lahf
xchg
int
push
sti
add
loope
lds
or
mov
fstps
jno
out
pop
adc
add
jb
lret
add
push
pop
out
movb
out
js
jns
jle
xchg
lds
fwait
or
pop
lock
aam
jl
ss
aam
mov
push
pandn
dec
popa
aam
pop
test
out
pop
dec
aas
sub
imul
jnp
iret
das
into
and
popa
faddp
lcall
in
and
in
stos
pushf
push
pop
xchg
je
scas
jbe
add
dec
cmp
mov
pop
jno
push
loopne
jmp
aad
call
mov
push
test
cmp
dec
and
mov
repnz
dec
sbbl
sti
xor
sub
je
aam
and
xchg
addr16
outsl
push
les
ljmp
icebp
and
and
fiadds
aam
aad
mov
adc
jle
cmp
cs
dec
xor
or
data16
cmp
stos
jmp
iret
cmpsb
out
adc
out
bound
bound
ljmp
in
popf
test
sbb
fnstenv
movsb
dec
stos
mov
lods
xchg
int
aas
jo
xor
test
xor
cli
cld
push
rcrl
icebp
xchg
inc
sub
add
or
sbb
lcall
cwtl
lea
in
jl
sbb
dec
jbe
and
xchg
pusha
cmp
pop
and
add
jge
outsl
jle
cmp
mov
mov
inc
cwtl
lret
lcall
out
jb
jne
dec
pop
xchg
je
rol
mov
enter
jle
lret
push
mov
xchg
in
in
or
or
dec
sbb
xor
add
mov
loop
xchg
cmpsb
xchg
orl
or
jmp
mov
mov
or
sti
test
lret
imul
ds
xor
pop
adc
mov
lret
cld
icebp
mov
cld
mov
pop
fisubs
sub
idiv
ficoms
out
into
pop
call
cmpb
adc
xor
je
xor
push
jo
mov
push
je
pop
push
cwtl
jge
push
stc
popf
std
in
push
inc
adc
lods
mov
dec
push
xlat
imul
ret
mov
idiv
push
push
loopne
cmpsb
or
adc
aad
adc
and
and
xlat
cltd
adc
mov
mov
imul
inc
sbb
mov
mov
push
cmp
adc
cmp
js
out
inc
pop
push
jns
cmc
iret
mov
jbe
subb
cltd
es
jno
lods
xchg
lcall
add
hlt
inc
cmc
pop
adc
int
jo
aam
lods
out
std
mov
push
popf
xchg
pop
push
xrelease
mov
and
push
in
push
das
imul
subb
roll
js
in
push
mov
fadds
cmp
xor
subb
clc
pop
ljmp
out
in
fnstsw
push
pop
sahf
ss
outsb
or
sahf
adcl
in
add
push
jmp
lret
pop
cmpsl
movb
xchg
inc
cld
test
out
cmp
dec
das
rol
cmp
adc
and
hlt
add
sub
rcll
mov
imul
push
pop
test
addb
loop
popa
pop
repz
data16
mov
std
cmp
enter
enter
repnz
mov
sbb
cwtl
int
std
sub
subl
ret
inc
fsubrl
fimuls
gs
xor
pop
out
insl
fidivl
xlat
pop
dec
pop
xchg
add
cmp
mov
ret
jl
cmp
cwtl
out
fwait
shlb
xchg
cltd
call
insl
sbb
push
xchg
and
sbb
cltd
arpl
and
dec
adc
insb
push
adc
push
jp
fcmovnb
push
aaa
rcr
nop
inc
push
xchg
aam
into
and
pop
fs
imul
daa
lds
std
xchg
test
mov
repz
sahf
repnz
sbb
cmp
bound
xor
sub
fmull
lea
pop
jecxz
pop
ds
xor
in
cmpsb
mov
bound
data16
sbb
lcall
mov
daa
push
fistpl
cltd
sub
gs
and
xchg
mov
in
or
in
lret
add
or
xor
and
lods
mov
lods
pop
cmpsb
mov
cmp
pop
sub
aad
ficomps
jns
dec
std
mov
das
and
ret
loop
and
popf
pop
adc
pop
cmpsl
shrb
mov
shlb
inc
mov
dec
lods
sbb
cmp
stos
lods
in
loop
fnsave
imul
mov
xchg
loope
dec
xlat
js
incl
pop
mov
bnd
pop
leave
cli
stos
arpl
sbb
push
sbb
push
jle
xchg
scas
adc
inc
push
pop
mov
js
sub
pop
fmuls
orb
nop
loopne
movsb
pop
jns
ret
or
repnz
adc
jmp
arpl
sub
mov
cltd
sbb
xchg
jmp
sbb
loop
pop
lcall
push
sub
pop
jb
push
outsl
adc
adc
push
in
push
hlt
sub
les
and
inc
mov
push
mov
call
fst
loopne
aaa
push
bound
std
loop
add
into
pop
jg
enter
add
cmpsb
jb
jne
push
rclb
push
cmp
xchg
in
test
xor
push
mov
cmp
xchg
push
mov
cmpsb
dec
fldcw
adcl
test
mov
cmp
push
pop
cmp
adc
push
movb
cmc
jo
lret
fwait
cmpsb
rcll
adc
xor
mov
xchg
insl
pop
in
in
sbb
sbb
mov
pop
dec
mov
hlt
movsl
fimull
aas
dec
gs
and
arpl
jno
push
sub
mov
sbb
xchg
sbb
in
out
mov
fistps
fwait
dec
sbb
push
je
mov
lods
push
pop
pop
xor
mov
in
jno
daa
clc
pop
dec
or
xlat
adc
and
test
mov
xchg
mov
sub
jns
push
add
out
sahf
push
int
pop
adc
fldenv
pop
ja
test
push
repz
or
stos
cmp
fst
sahf
mov
sbb
cmp
xchg
cmpsl
mov
mov
out
xchg
mov
out
in
and
mov
or
inc
das
push
in
mov
add
xor
fnstsw
push
mov
in
gs
sub
mov
lods
add
push
mov
outsb
clc
xchg
pop
scas
and
outsb
lret
aam
adc
cs
jle
pushf
ljmp
shr
inc
stos
cltd
push
xchg
sbb
pop
js
or
andb
or
cmpsl
mov
push
addr16
sti
movsl
insb
in
out
sub
or
aaa
repnz
jmp
jns
push
icebp
out
jns
lret
mov
xor
adc
push
out
outsl
xlat
pop
xor
loope
mov
pop
sbb
push
fs
jge
pop
rolb
in
clc
and
icebp
sub
cmp
arpl
add
sub
dec
sub
pop
add
and
test
mov
lahf
sub
lahf
jae
shll
pop
xchg
mov
mov
dec
dec
not
stc
into
daa
push
inc
mov
dec
and
push
aaa
mov
ja
inc
pop
push
adc
decb
pop
push
mov
adc
jno
push
stos
insb
adc
repz
rorb
rcrb
sub
mov
ja
mov
mov
adc
sbb
push
out
ret
cmc
and
jnp
not
ret
pop
lds
faddp
scas
fcmovne
xchg
cmp
fs
and
or
dec
jb
and
movsl
and
bound
sbb
shl
aaa
adc
fidivrs
inc
pushf
cmpsb
cmp
in
aam
in
and
mov
pop
adc
add
lods
rol
cmp
sbb
sahf
cmpsl
in
fisubs
cs
fnstsw
lea
and
mov
pop
fisttpl
sub
push
shrl
cwtl
jecxz
fnstcw
cmp
pop
push
fcmovu
out
enter
jg
sahf
dec
cmpsl
imulb
call
add
lret
rcrb
mov
add
or
lahf
push
and
int3
insl
pop
mov
mov
add
test
mov
popa
test
lahf
dec
mov
sbb
mov
xor
stc
jmp
call
adc
pop
jns
cmpl
leave
sub
mov
add
dec
xchg
jecxz
jmp
shrl
aam
lds
and
insl
and
fcom
sbb
outsb
mov
fmulp
sbb
mov
outsl
jmp
sub
popa
out
js
outsb
mov
inc
aam
mov
les
dec
jns
dec
pop
sub
xchg
fistpl
adc
adc
mov
into
icebp
xor
or
imul
jb
lds
lret
lcall
push
sub
pop
mov
and
mov
sar
and
jae
xchg
rcrb
flds
jne
comiss
scas
cld
psllq
inc
jbe
into
cmc
jne
js
incb
inc
insl
sub
cli
incl
mov
adc
inc
jo
mov
and
jecxz
sbb
or
push
xchg
mov
divb
or
stos
out
xor
adc
aaa
rclb
push
xor
sub
or
jl
jle
jge
or
lock
jg
pop
aas
lret
add
pop
mov
cmpsl
xor
add
std
push
jl
lods
mov
aam
sbb
dec
fidivl
xchg
mov
pop
xor
pop
push
xchg
cmp
push
rorl
pop
repnz
cld
cld
sbb
mov
loopne
sub
sti
arpl
adc
pop
ret
dec
les
ja
dec
xchg
pop
in
mov
mov
pop
dec
pop
gs
stos
cwtl
aas
stc
dec
push
test
mov
mov
push
fldl
lock
push
sbbl
push
pop
je
ja
and
aaa
jns
xor
aaa
sub
mov
adc
fadds
rcrb
push
arpl
dec
je
stc
cmc
inc
and
fdivrs
dec
lods
jmp
sub
cld
adc
iret
push
in
jmp
mov
sbb
mov
cmpsb
aas
jg
adc
inc
pop
ljmp
dec
sarl
int3
pop
xchg
xor
test
ja
push
xor
xor
sbbl
inc
out
lret
stc
cs
sbb
addr16
dec
push
mov
xchg
cmp
and
fimuls
imul
inc
inc
push
inc
sti
mov
jno
fimuls
sarl
xchg
test
adc
ret
stos
push
jbe
xchg
mov
cmc
add
in
int
cmpsl
scas
lock
loop
push
testb
mov
xlat
in
or
dec
std
leave
movsb
inc
push
add
loopne
or
fcomps
lcall
js
xchg
dec
clc
outsl
push
movsl
sbb
add
int3
shlb
in
add
or
push
sub
or
aas
add
fistpl
mov
mov
jle
rol
mov
int3
sub
push
arpl
dec
pushf
xchg
cmpsb
icebp
subl
push
push
loope
pop
ja
roll
jbe
xchg
ds
jne
fadds
outsl
adc
push
or
hlt
addl
popa
xchg
das
or
aaa
js
ficoms
test
fwait
pushf
jne
xchg
jl
sti
pusha
pop
mov
mov
pushf
gs
aad
mov
xchg
adc
lret
xor
imul
mov
arpl
push
sti
stc
out
sti
sti
adc
or
and
inc
mov
mov
shlb
mov
add
lods
ja
pop
inc
enterw
push
pop
sub
mov
fidivs
mov
es
fcoms
cmp
roll
jnp
add
sub
sti
jb
inc
leave
adc
jge
repz
fs
and
cmpsb
cmpsb
xor
addl
loope
stos
aad
mov
or
cs
pusha
mov
and
movsl
xor
insb
pop
aaa
int3
icebp
sub
or
inc
pop
das
in
mov
jae
js
lret
sbb
leave
testb
cmp
and
repz
xchg
popf
ljmp
push
nop
stos
jecxz
out
sbb
insl
stc
mov
shll
cmc
adc
push
mov
push
addr16
into
jl
inc
and
ljmp
inc
int
out
sbb
mov
add
popf
mov
mov
movsl
das
imul
add
push
aad
xchg
aas
ss
aaa
in
lds
rorl
jno
nop
fsubrp
inc
adc
inc
xchg
stos
cmpsl
xchg
mov
fisubrl
aaa
fs
push
mov
fs
mov
inc
xchg
ret
pop
aad
stos
test
xchg
or
jecxz
sub
ret
or
xor
sbb
and
lods
imul
test
popf
dec
aas
in
cld
dec
pop
and
adc
shr
lcall
add
aad
sbb
sub
pop
jle
and
fcoms
int
cli
loop
xor
xchg
ret
jnp
pop
mov
sub
nop
insb
and
aaa
jl
out
xor
pushaw
test
or
jns
mov
xchg
or
movsl
movsb
mov
sub
lock
jno
iret
sbb
arpl
adc
xor
pop
adc
fwait
lahf
mov
adc
mov
loopne
inc
sub
jne
inc
push
ss
iret
sub
fcmovb
cltd
cmp
stos
imul
addb
test
jl
pop
xor
outsb
jg
mov
lcall
push
call
inc
ss
cmp
sahf
jo
push
int3
push
bound
scas
movl
and
addr16
push
lock
mov
popa
adc
push
faddl
and
sub
mov
xor
dec
or
ret
fisubrl
mov
mov
jle
ret
movl
add
push
mov
jmp
sub
sbb
jmp
cmc
mov
jnp
cmpb
or
xor
cld
cs
fiadds
hlt
mov
cli
jg
leave
in
out
mov
mov
cmc
xlat
jbe
sub
or
pop
aaa
mov
aas
inc
inc
fsubrp
leave
outsl
mov
inc
std
rclb
pop
loope
popa
data16
out
hlt
or
xor
cmc
add
call
cs
pop
fisubs
mov
insl
test
and
lock
pop
cmpsl
lods
aas
in
mov
ds
inc
pop
popf
test
test
add
imul
or
out
in
loopne
mov
in
shl
xorb
and
sbbb
push
mov
push
mov
cmp
xor
into
pop
jl
jne
pop
cmc
sbb
add
inc
sahf
push
ret
mov
jbe
daa
test
jp
std
idiv
int
test
mov
mov
cmp
mov
lds
push
test
push
lods
fwait
data16
dec
das
sarb
adc
and
jno
and
inc
pop
fwait
sub
cmpl
pop
jmp
xchg
lret
cwtl
cli
aaa
imul
xor
rolw
pop
in
mov
sub
dec
testl
mov
jecxz
jp
add
mov
rcrb
movsl
lods
jb
imul
aas
or
outsl
inc
imul
imul
mov
je
inc
xor
out
data16
mov
fwait
repnz
in
adc
dec
loopne
jbe
adc
pop
outsb
inc
in
xorl
ret
mov
xor
pop
int3
data16
sbb
insl
sub
xchg
dec
cmc
pop
inc
or
mov
mov
ja
sti
mov
test
xor
loop
inc
jmp
xor
in
lock
cmp
xor
mov
xchg
pop
test
mov
dec
mov
sbb
out
rcr
nop
repz
xchg
mov
cmc
xor
in
xor
or
mov
cs
sbb
xchg
fcompl
sbb
cli
fisubrl
mov
and
dec
jle
enter
insl
pop
sbb
fisubl
imul
jae
filds
cmpl
test
mov
call
mov
fs
fs
dec
inc
push
mov
je
fmulp
mov
mov
fbstp
lods
sbb
xchg
sbb
jle
adc
xchg
xchg
popa
das
cmp
mov
adc
inc
inc
mov
sahf
in
loope
sbb
out
jb
adc
push
mov
gs
adc
push
ret
add
clc
pop
push
adc
sarb
xchg
inc
adc
cmp
aam
push
pop
lret
pop
xor
popf
cli
nop
in
cld
inc
adc
mov
rcrl
mov
test
inc
add
lcall
outsl
out
mov
iret
movsb
mov
pop
out
lret
inc
lret
jecxz
pop
popf
pusha
or
movsl
or
inc
mov
mov
dec
js
adc
lods
dec
aad
mov
rorb
adc
xchg
int3
dec
xchg
es
add
lods
jae
pop
xchg
mov
sbb
xlat
inc
push
cltd
into
repz
pop
mov
jns
in
mov
jp
repz
sbb
lahf
addr16
mov
popa
or
or
ret
add
cmp
lcall
sub
mov
xchg
stos
mov
sahf
inc
les
push
pop
fmuls
and
pop
fimuls
sarl
and
decl
mov
sub
sarl
pop
int3
mov
in
pop
daa
mov
sti
adc
or
lret
pushf
cmpsl
rcrl
lcall
addr16
inc
push
adc
frstor
adc
idivb
inc
in
lods
jb
sbb
xchg
jbe
jg
out
sti
in
lods
sbb
xchg
bound
sub
push
mov
cltd
dec
ffreep
gs
insb
jl
lea
test
sbb
lcall
pop
mov
cmp
mov
xor
mov
aas
bound
mov
aas
mov
ja
fcmovbe
cmp
xchg
adc
push
or
inc
mov
xchg
xor
test
icebp
outsb
test
test
dec
int
daa
lods
mov
sub
pop
in
call
or
mov
pushf
je
xchg
mov
pop
pop
push
rolb
imul
insb
mov
mov
and
push
or
mov
push
sbb
xor
sahf
lds
sub
bound
lahf
or
lock
in
pushf
push
cmp
lods
mov
rcll
pop
ret
out
or
outsl
xchg
or
cmp
jecxz
mov
pop
shrb
cmp
stc
ja
mov
push
int3
mov
push
xchg
aam
repz
jae
scas
ja
mov
jmp
mov
divl
cmpl
push
or
adc
push
jno
dec
test
in
loop
sbb
jbe
mov
cwtl
imul
fldl
sbb
data16
mov
fldt
out
jne
les
jae
ss
mov
xchg
xor
mov
pushf
lock
imul
out
xchg
dec
les
jmp
repz
icebp
cltd
inc
mov
adc
add
cmp
sub
incl
filds
daa
add
xorl
mov
outsl
add
add
push
mov
push
loope
enter
movsl
aad
iret
mov
mov
and
fs
cmpl
push
pushl
stos
movsb
and
adc
std
add
adc
icebp
xor
jbe
lret
mov
stos
cmp
sbbl
jmp
fsubrs
push
sbb
push
cmpsl
and
inc
or
mov
cmpsl
hlt
cmp
mov
adc
adc
cmp
aad
pusha
or
pushf
leave
push
pushl
push
mov
out
loop
cli
shrb
mov
ja
push
mov
pop
imul
ja
push
lods
cltd
sti
shl
mov
mov
pusha
decb
xchg
clc
xchg
pop
int3
daa
sbb
jle
xchg
pop
dec
cld
pop
sbb
and
cli
jnp
mov
or
pop
add
mov
or
outsl
movsb
iret
mov
inc
jl
dec
cmp
xchg
icebp
sahf
push
decl
out
stos
fistl
mov
push
aaa
loope
mov
jg
addl
xchg
adc
shrl
cmp
and
jne
pop
jnp
pusha
mov
xchg
negl
jecxz
sub
and
dec
iret
mov
inc
cmc
mov
fisubrs
popf
fcoml
adc
jg
shrl
sti
iret
jns
mov
test
inc
sbb
iret
shlb
push
pop
cs
adc
loope
ret
xchg
pop
push
test
arpl
nop
shll
daa
pop
dec
jl
jg
or
fadds
xchg
or
imul
or
insl
aaa
mov
insl
or
mov
and
subl
loopne
dec
lock
mov
ss
xchg
jnp
xchg
cmpsl
pop
jmp
out
stos
scas
loop
cmp
xchg
decb
adc
test
fstpt
andb
inc
outsb
addl
rcrb
lds
jg
rcrb
daa
and
cmp
cmpsb
inc
mov
lods
or
outsl
xchg
aaa
nop
sub
push
imul
aaa
cs
mov
ljmp
mov
cmpb
das
inc
cmp
call
jo
out
mov
test
push
mov
iret
push
in
mov
jle
lret
mov
call
je
shl
lods
xchg
inc
lea
test
add
xchg
mov
mov
jmp
stc
dec
adc
inc
insb
dec
and
xor
jo
cmp
jecxz
test
xchg
js
add
repnz
pop
daa
loope
or
movsb
xor
push
mov
test
movsb
scas
or
jo
insl
and
push
xor
sub
xchg
and
xlat
inc
xchg
lret
les
inc
mov
out
dec
xchg
je
xor
mov
ficoml
je
jne
fldcw
cwtl
mov
inc
add
xchg
cmp
or
sbb
imul
repz
xchg
xchg
divb
shlb
lcall
cmp
pop
lahf
loope
and
inc
ficoms
sbb
mov
imul
mov
pop
pop
and
push
daa
xchg
idivl
lahf
pop
pop
xor
into
in
and
cli
daa
clc
pop
ljmp
add
cli
or
sbb
xchg
xchg
aad
inc
or
and
dec
leave
scas
sbb
loop
movsl
cmp
bound
push
sbb
out
xchg
add
call
rcll
scas
cmpsl
arpl
test
cld
aaa
xchg
imul
fsubrp
or
sarl
test
add
pop
pop
pop
ljmp
leave
push
xchg
add
lea
push
sbb
jne
out
ljmp
xchg
inc
xchg
leave
lock
xor
mov
dec
pop
dec
movsl
hlt
push
add
popa
scas
xchg
dec
aad
pop
rol
mov
ds
or
jb
pusha
mov
in
or
ds
stc
clc
sbb
sbb
loop
popa
daa
jg
and
xchg
loop
inc
pushf
sub
sbb
stos
sub
xor
jg
and
in
shll
loope
out
sub
xchg
fwait
hlt
mov
dec
sahf
mov
jne
or
data16
inc
cwtl
xchg
jno
ja
lahf
sahf
sub
stos
cli
pop
sub
pop
inc
ja
fadds
adc
jg
pop
lret
adc
jae
push
pop
dec
dec
imul
mov
idivl
sbb
fimuls
xchg
jecxz
lea
mov
add
icebp
xor
mov
mov
mov
xor
mov
cmpsl
pop
push
popf
outsb
add
hlt
mov
mov
icebp
push
cmpsl
nop
or
aas
inc
fsubrl
js
sub
push
add
lds
int3
jge
dec
add
fwait
pop
mov
push
movsb
pop
popa
inc
and
fnstcw
testb
ss
cmpl
inc
stos
mov
inc
push
and
aad
in
pop
sub
push
test
add
inc
test
pop
mov
and
add
jb
xchg
xor
jbe
gs
push
mov
pop
out
sub
lea
out
ja
aas
gs
mov
ljmp
push
mov
dec
aam
arpl
out
cmpsl
sahf
fisttps
mov
mov
les
push
jg
xchg
xchg
out
cmpsl
data16
pop
ds
popa
add
idivl
xor
cwtl
sbb
stos
push
xchg
jle
pop
push
and
pop
popf
xor
xor
out
popf
outsb
cld
sbb
pop
mov
sub
mov
or
aaa
and
xor
adc
push
das
cmpsl
mov
in
sbb
and
or
mov
push
fcompl
inc
jl
fists
std
jb
cmp
cld
ljmp
fcomp
sarb
repz
ss
push
xor
out
mov
mov
out
sub
jns
mov
xchg
adcl
pop
push
inc
pusha
int
xchg
lahf
or
loopne
imul
data16
pusha
mov
and
enter
mov
mov
or
fsubrs
mov
dec
mov
clc
sub
push
jmp
adc
int
add
mov
aam
mov
and
insl
mov
inc
inc
notl
lea
inc
mov
and
sbb
mov
jns
mov
ds
cmpsb
mull
add
popa
mov
pop
inc
adc
inc
loope
mov
and
loop
repnz
jp,pn
sub
sub
loopne
dec
push
push
clc
mov
pop
cmpsb
outsb
pop
cmp
push
cltd
jbe
sub
in
stc
adc
shll
in
aaa
mov
inc
fnsave
ljmp
and
xchg
dec
in
mov
aaa
test
jg
lea
cmp
test
dec
xlat
aaa
push
mov
jne
in
jbe
hlt
inc
push
pushf
icebp
mov
cltd
mov
aas
mov
sarb
stos
xchg
rorb
cmova
mov
mov
cmpsl
add
add
ret
and
mov
pop
mov
in
fcmovnbe
fwait
cs
pushf
out
jge
icebp
jb
das
lahf
push
or
iret
out
in
mov
or
jo
pop
fst
or
mov
inc
and
cs
in
push
add
push
xchg
jecxz
in
push
test
arpl
ficoml
stc
dec
lds
outsb
push
sbb
sub
adc
dec
ss
cmp
lahf
lods
movsb
add
lret
push
aas
jecxz
arpl
int3
jno
fsub
or
push
add
jb
pop
jae
movsb
inc
fldcw
mov
push
pop
lcall
add
jne
mov
and
inc
jle
pop
xor
push
out
jp
mov
sahf
pop
push
movsb
mov
test
sbb
jmp
inc
roll
les
inc
sub
and
add
scas
add
mov
sbb
in
xor
inc
sub
jae
inc
xor
gs
lods
les
mov
push
clc
aaa
js
int
inc
repnz
aaa
and
pop
mov
inc
lods
sbb
lret
mov
mov
mov
sub
jle
adc
xorl
out
or
push
jg
xchg
das
cli
mov
daa
pop
add
mov
sub
outsb
cmpsb
cmpsb
mov
add
or
mov
lcall
outsl
push
push
xor
pop
repz
sbb
shrb
mov
repnz
push
dec
inc
repz
mov
idivb
mov
cmp
rorb
or
testl
sbb
push
in
and
mov
push
or
or
xchg
mov
push
or
int3
xorb
cmp
lock
xchg
out
lock
xlat
aam
js
jp
sub
fsubrl
fstps
ljmp
xchg
mov
or
sub
movsl
pcmpgtb
ds
pop
fldt
nop
sbb
mov
out
jge
jp
and
lods
pop
pusha
push
sub
mov
aam
sub
push
gs
sbb
enter
dec
test
and
mov
mov
lahf
or
and
cmp
mov
add
push
adc
pop
ds
pop
call
pop
cwtl
gs
int3
dec
jns
ljmp
jp
nop
sbb
sbb
das
pop
inc
or
enter
add
loop
push
pop
stos
aaa
lods
jle
sub
inc
sub
lcall
adc
push
adc
mov
lret
ret
dec
sbb
fs
and
push
lret
loope
out
lods
movsb
inc
aad
mov
repz
mov
lahf
loop
xchg
add
lods
pop
jae
add
push
or
inc
rorb
aas
sub
xor
or
pop
push
mov
repz
pop
pop
pop
inc
mov
clc
pop
cmpsb
pop
xor
loopne
dec
jge
inc
inc
adc
mov
test
test
xlat
adc
pop
imul
sub
adc
sti
xchg
cmp
cltd
pop
lea
mov
jmp
rclb
pushf
and
inc
sub
push
push
fcoml
pushf
cmpsl
out
push
jae
mov
movsl
mov
enter
pusha
enter
mov
pusha
addb
test
orl
jg
mov
mov
shrb
in
setp
jbe
stos
and
bound
and
jbe
cmpsl
outsl
in
mov
fs
xchg
scas
cmp
adc
clc
popa
shlb
add
inc
ljmp
in
lret
jle
shll
cmpsb
xor
data16
dec
mov
mov
jns
rcl
sbb
push
sub
rclb
mov
ret
xchg
enter
outsb
pushf
mov
or
data16
loopne
inc
fs
push
scas
jo
adc
ret
mov
mov
popf
push
lret
shll
test
je
push
jle
mov
rcrl
or
cltd
mov
sbb
mov
in
test
test
dec
cmp
insb
das
mov
sbb
out
mov
inc
xor
dec
sub
mov
movb
xor
out
sub
outsl
and
into
lock
mov
cwtl
sbb
add
xlat
es
push
mov
and
pop
stc
jecxz
retw
jl
add
xchg
lcall
fucom
xor
fiaddl
in
push
or
mov
xor
adc
add
rcl
or
jge
xchg
push
sbb
adc
leave
in
push
call
enter
pop
sub
notb
ret
jmp
in
pop
and
jne
push
add
lock
jb
sbb
inc
sub
stos
or
pop
movsb
pushf
loop
mov
inc
jmp
jle
jmp
lods
movsl
mov
xor
pop
lret
sbb
es
and
cmp
test
xlat
pop
pushf
test
clc
xchg
sbb
bound
cmp
and
cmp
insl
adc
jno
arpl
mov
test
ficompl
dec
push
pop
mov
pushf
xchg
push
dec
cs
adc
and
bound
pop
inc
sbb
mov
cld
and
stos
fadds
mov
add
lods
std
adc
mov
and
mov
imul
scas
cmc
push
in
push
ss
cmpsb
xchg
bnd
add
mov
aas
sbb
jnp
outsl
dec
mov
xor
daa
aaa
push
insb
rclb
fisttpl
fsubl
cld
inc
mov
xor
cmp
leave
rolb
mov
adc
add
scas
testb
cmp
out
sbb
sti
adc
mov
inc
adc
jl
out
add
or
or
jnp
jl
cld
ret
negb
mov
out
int3
aas
imul
pushf
pop
cli
xchg
loopne
orb
jge
ja
add
push
mov
fisttpll
out
adc
repnz
insb
repz
sub
push
pop
dec
insb
mov
fwait
dec
stc
les
movsb
pop
movsb
xchg
mov
xchg
bound
jb
enter
dec
mov
loope
lahf
ret
pop
push
and
sbb
or
add
cmpsl
out
jecxz
movsl
adc
or
sub
cmp
cltd
test
pop
pop
or
ss
xlat
xchg
imul
fwait
add
add
xor
jmp
cmp
mov
push
hlt
addr16
jne
adc
inc
xchg
xor
xchg
lods
cmp
mov
mov
lds
sbb
ljmp
lea
loopne
notl
and
aaa
mov
aas
xor
movsb
or
sbb
push
and
data16
pushl
xchg
xor
mov
mov
jl
inc
fisttpl
adc
shll
mov
fadds
das
push
xor
fildl
xchg
leave
sub
or
jg
int
fnstenv
inc
xchg
lds
into
movsl
bound
popl
sti
ret
movsl
mov
sub
ja
push
repz
negl
jbe
jle
xchg
jo
pushf
push
jns
push
pop
mov
mov
push
xchg
inc
setns
and
aas
jge
pop
xchg
fwait
cmp
mov
test
insl
push
ret
mov
sub
leave
mov
lahf
pop
pop
imul
and
sub
adc
add
or
jo
scas
lret
repz
cli
es
int3
es
push
nop
sarl
add
lods
mov
lock
inc
mov
mov
pop
int
pop
push
mov
stos
jae
imul
lea
call
out
lds
fldenv
mov
test
xchg
add
add
mov
cs
stc
cmp
repnz
pop
enter
lods
sarl
mov
sahf
add
js
inc
push
in
das
sti
cs
jp
push
je
mov
rcl
fisttpll
test
jmp
cmp
clc
push
aam
idivb
ds
imul
rorl
out
push
jp
xchg
dec
js
pop
in
pushf
sub
dec
movsl
cvtps2pi
scas
ja
pop
lahf
adc
xor
es
and
les
stos
cmpsl
call
divl
sub
sbbl
jo
dec
pop
jle
seto
dec
add
jmp
js
xor
sbb
push
negb
xchg
fnstenv
das
sbb
pop
mov
xchg
int3
fildl
ds
or
jne
and
sbbl
push
das
dec
rcrb
push
movsl
pop
les
cmpsb
or
ja
sbb
movsb
loopne
and
cli
loop
sub
and
bound
push
pop
ja
cmpsl
sub
push
cmp
jo
sbb
out
jge
dec
mov
xor
push
push
sub
push
xor
outsl
push
movsb
mov
jmp
int3
xchg
dec
xlat
fwait
lods
and
ds
mov
pop
mov
iret
orb
mov
addr16
push
ss
ret
adc
mov
jmp
fists
dec
popa
enter
ret
mov
xchg
ret
mov
or
sbb
mov
xchg
sti
scas
xchg
ljmp
sbb
lret
add
hlt
dec
das
notl
fs
push
push
pop
inc
mov
shll
xor
pusha
xchg
pop
enter
in
pop
and
xor
xor
jns
int
fs
mov
jge
or
or
bound
inc
sub
adc
cmp
push
shl
insb
add
jbe
je
int
aam
ret
cmpsl
fsubrp
cmp
shlb
lret
andb
adc
insl
adc
add
into
aas
sub
and
sub
xchg
adc
mov
rcrl
out
adc
ljmp
adc
fldt
jmp
ss
xor
mov
cmp
test
fwait
inc
xorb
repnz
pop
into
subl
lcall
sub
testb
outsl
enter
or
arpl
pop
dec
loope
sbb
int
jmp
pop
cmp
int3
or
jp
and
stos
scas
push
xchg
js
shlb
dec
mov
xchg
fsubl
out
idivb
dec
test
insb
les
hlt
pop
and
lods
testb
xor
stos
mov
mov
cmp
push
pop
or
popf
push
cmp
sti
sub
push
lret
loope
mov
aas
pushf
mov
lock
fildl
mov
les
jge
fsubs
push
cmp
jb
add
loop
scas
sbb
sub
pop
push
in
mov
mov
add
cs
movsl
rclb
pop
sub
sti
xor
inc
jmp
sbb
adc
daa
xor
xor
sahf
sahf
fadds
inc
inc
shr
imul
out
loopne
ret
lret
movl
mov
sub
sub
xchg
mov
or
xor
cmpsb
mov
pop
mov
inc
loope
mov
std
sub
jne
or
in
js
stc
cmp
and
out
cmpsb
cmp
or
dec
pop
add
mov
les
mov
rorb
push
loop
mov
mov
mull
loop
add
inc
xor
loopne
sub
or
push
lret
lahf
mov
out
or
push
ucomiss
add
movsl
popf
pop
fisubl
enter
repz
in
xor
and
pop
fcoml
outsl
cmp
cmpsb
pushf
inc
push
jle
nop
inc
sbb
mov
adc
mov
pop
inc
pusha
sub
cli
js
outsb
dec
mov
fs
dec
outsl
ss
js
xor
rol
dec
sub
outsl
movsl
mov
in
jnp
movsl
or
loop
sbb
cmp
inc
mov
fcmovnbe
or
and
aas
icebp
notb
jp
cmpsb
ds
and
outsb
in
jle
sahf
mov
and
add
pusha
jne
cltd
imul
pop
cmp
jmp
or
jmp
int
mov
lods
adc
xor
lds
fiaddl
sbb
lcall
dec
dec
out
sahf
fwait
stos
dec
add
mov
sub
arpl
mov
inc
pop
adc
inc
push
xchg
mov
jns
push
inc
dec
insb
sub
in
call
xchg
das
not
jecxz
push
shr
lahf
pop
imul
addb
test
jns
cmp
sarl
mov
aas
in
cmp
or
or
lcall
cmp
push
pop
adc
test
call
inc
sbb
or
shlb
outsb
adcl
adc
push
pop
jmp
mov
lcall
cmc
out
icebp
test
ja
test
fdivl
es
ds
jge,pt
fistps
es
add
xchg
xor
int
call
fwait
add
scas
ret
fisubs
add
decl
fistps
imul
sub
and
xor
popf
scas
add
std
or
mov
movsb
out
je
clc
xor
out
sub
nop
mov
dec
or
addr16
in
int
mov
dec
mov
int
jno
jle
add
popa
push
je
xchg
and
mov
fs
pop
shll
xor
dec
addr16
mov
addr16
cmp
xor
out
or
insb
adc
lret
ljmp
xchg
fcompl
xor
lock
mov
push
dec
and
data16
dec
cmpsb
lods
into
dec
dec
cli
out
int
xor
mov
fnstcw
hlt
fcomps
pop
cmpsl
cmpsb
in
pop
adc
nopl
lea
dec
out
lret
movsb
into
mov
xorl
jl
sbb
rcrb
shl
sbb
pop
aam
in
cmp
and
enter
mov
das
mov
int3
fstpt
test
loope
dec
inc
test
or
lahf
mov
outsl
roll
es
leave
add
cmp
push
mov
pop
loop
xchg
inc
aas
movl
xor
sbb
add
arpl
jmp
nop
fisttps
out
mov
es
rorl
or
dec
flds
sarl
push
leave
sysenter
jmp
out
inc
lret
cltd
and
js
xchg
cmp
mov
mov
cmpsb
pop
add
and
outsb
xor
mov
add
rcrb
xchg
aaa
mov
cwtl
int
div
aad
dec
pop
out
nop
pop
jbe
bnd
test
aam
jg
nop
in
repnz
adc
pop
or
int
divb
jecxz
dec
cmp
pop
sbb
adc
dec
insl
enter
mov
jo
pop
int3
fdivs
jp
int
sti
mov
sahf
xchg
cmp
or
out
out
jp
sarl
int
jge
xchg
and
mov
stos
mov
or
inc
js
repz
popa
jae
stos
mov
xchg
and
xchg
and
jp
and
dec
jmp
push
jbe
inc
test
test
xchg
hlt
xlat
ret
add
mov
and
mov
pop
mov
rorl
mov
lods
fabs
mov
lods
and
es
adc
sbb
jp
lods
repz
scas
aam
popl
das
push
fnstenv
or
xchg
xchg
add
mov
fs
lcall
mov
dec
push
adc
jecxz
sarl
jp
add
lahf
add
dec
push
sti
jbe
mov
dec
movsb
stc
jmp
mov
sets
mov
sbb
push
loope
dec
shll
push
lock
and
adc
insb
add
test
push
daa
or
jbe
cmp
cld
mov
mov
movsl
xlat
flds
mov
insl
loopne
xchg
lcall
xchg
lods
push
push
fmulp
mov
dec
dec
ret
lods
push
rcl
dec
lds
std
cmp
jecxz
jecxz
pop
xor
pop
xchg
inc
lfs
inc
daa
in
cli
aas
lods
scas
and
adc
sub
outsb
push
pop
dec
mov
sbb
popl
mov
jo
outsb
or
mov
cmp
pusha
and
jecxz
pop
cld
cmp
adc
mov
stos
xor
xchg
push
out
pop
movsl
rcll
jle
in
pop
cli
and
jno
sub
cs
imul
mov
push
mov
fdivrl
call
dec
mov
retw
dec
mov
cmp
push
filds
add
lds
scas
out
inc
and
lcall
xor
sub
loop
jae
jecxz
enter
or
scas
fmull
dec
ds
push
repz
into
add
shrl
fs
xchg
pop
adc
inc
jle
fstl
pop
mov
out
scas
cmp
xchg
test
inc
and
xchg
jns
push
jg
push
js
mov
sbb
lods
lods
adc
lock
repnz
mov
orb
mov
aad
mov
pop
out
cltd
adc
jae
add
aas
xor
stc
stos
cmp
jge
std
out
mov
mov
fimuls
xchg
fsubs
ja
jp
cltd
lods
fs
or
jg
mov
or
cwtl
jecxz
pop
in
shlb
xchg
push
aam
jb
mov
popa
push
push
ja
sub
pop
movsl
inc
shrb
iret
or
sub
jmp
push
adc
add
cmp
mov
imul
jecxz
xorl
ret
icebp
mov
rclb
push
addr16
xchg
mov
or
fdivrs
pushf
loopne
lods
loop
jge
loopne
iret
mov
mov
cmp
out
push
cld
jo
dec
andb
xorl
pop
test
outsb
js
insl
sbb
jp
jecxz
cltd
cmp
ror
aaa
fnsave
ljmp
out
pop
ss
xor
fadds
xor
js
mov
fnstsw
in
and
and
stos
lock
not
add
adc
hlt
imul
gs
jg
inc
xchg
repz
dec
push
push
mov
lahf
adc
adc
call
iret
jecxz
outsl
mov
pushf
aaa
mov
mov
fwait
inc
std
fnstenv
pop
ljmp
hlt
lret
push
pop
pop
sarb
lock
lods
insb
es
cwtl
insb
adc
cltd
lock
xchg
sub
clc
add
push
loop
int
xor
inc
mov
add
xor
and
push
sub
jo
xor
movsl
jecxz
add
enter
push
pop
iret
in
adc
jg
adc
jns
rorb
sarb
cmc
jne
popa
mov
in
add
aaa
insb
js
ret
stos
sbb
ret
xor
dec
mov
ja
daa
push
inc
dec
sar
cmpl
dec
loopne
push
adc
mov
jae
xchg
adc
lcall
or
mov
pop
jae
push
int
jle
leave
cmp
dec
out
sub
xor
lods
jmp
push
loope
jne
sbb
jp
bsr
out
pop
cmpsb
pushf
ja
mov
std
jae
or
aas
cld
ret
jnp
inc
mov
pop
mov
lds
daa
jbe
and
mov
paddsb
out
pop
xchg
jb
fwait
enter
scas
mov
xchg
popa
pop
movsl
call
cs
sub
js
jnp
mov
dec
cli
imul
mov
dec
pop
push
mov
cmpsb
frstor
mov
pop
and
stos
cmp
nop
xchg
dec
jmp
jecxz
xchg
mov
movsl
push
aas
ret
subl
push
jl
xchg
mov
icebp
mov
js
xchg
lahf
push
repz
cltd
pop
and
sbb
xor
cmp
and
test
ds
jae
je
and
test
sbb
aaa
adcb
scas
cmp
mov
int
sub
sbb
cltd
pop
xchg
insb
sub
mov
fwait
adc
test
filds
call
in
jno
nop
and
rcr
sbb
push
xchg
mov
movsb
inc
out
xor
js
cli
xchg
mov
dec
adc
mov
pushl
clc
cmp
pop
push
jno
lods
cmc
add
sarl
and
push
xchg
js
movsl
jb
xor
std
or
ret
inc
add
hlt
xorl
scas
and
pop
add
fidivrs
loopne
int3
jbe
inc
nop
adc
rorl
popa
cli
xor
pop
addr16
sub
fistpll
outsb
xor
mov
dec
in
mov
aaa
sub
ret
or
mov
jb
shr
cmp
mov
inc
mov
into
adc
pushaw
inc
mov
jo
pop
es
push
punpckhbw
jl
push
enter
mov
pop
enter
sbb
mov
sbb
mov
mov
jo
mov
add
xchg
std
dec
imull
fildl
jo
lret
dec
les
nop
mov
or
int
es
jl
test
xchg
addr16
sub
movsb
outsb
call
jge,pt
arpl
push
mov
test
das
push
dec
inc
xchg
and
stos
fists
xchg
mov
aam
sbb
sub
nop
ljmp
jno
mov
js
mov
in
popf
pop
xor
jnp
jecxz
pop
insb
std
xor
ds
jne
jbe
push
mov
subb
cli
pop
adc
pop
jae
jcxz
fimuls
dec
jge
jnp
or
int
add
push
push
das
xlat
xlat
or
outsl
sbb
dec
repnz
imul
xchg
cmp
je
jae
popf
insb
jl
sbb
lods
arpl
lret
out
xor
out
lock
xor
dec
push
pop
rolb
pop
bound
sar
sbb
xor
jb
cli
aam
or
jne
fstps
jmp
cmc
xor
push
dec
test
mov
jne
jmp
fwait
ja
and
push
lds
push
test
retw
cmp
inc
cs
rcrb
mov
mov
fnstcw
ss
insb
adc
add
cmc
push
sub
mov
lods
jne
lds
testb
not
jns
inc
xor
push
xchg
inc
xor
pop
ss
shll
sbb
fisttps
jne
stc
mov
and
rcl
sub
mov
aam
sti
inc
or
dec
inc
popf
jae
ret
insl
xchg
dec
adc
cmp
call
out
ficoml
pop
pop
cmp
test
mov
mov
push
loope
jecxz
outsb
aad
incl
inc
in
pusha
mov
outsb
cmp
aam
int
sarb
pop
or
stc
into
dec
cmpsb
inc
xor
jp
ret
cwtl
fwait
or
into
nop
imul
mov
stos
pop
mov
out
inc
mov
enterw
push
imul
xor
pop
jne
sbb
xchg
cmp
aas
push
mov
aas
jae
xor
xor
adc
jmp
fdivl
jmp
mov
test
add
sub
in
push
xchg
hlt
add
idivl
hlt
bound
ja
repz
mov
data16
daa
ljmp
xchg
inc
add
push
and
xchg
shlb
insb
loop
inc
es
inc
xchg
mov
xlat
dec
clc
xchg
dec
sti
mov
cmpsl
push
pop
inc
loopne
arpl
mov
inc
push
and
add
pop
sub
mov
fs
cmp
dec
inc
adc
mov
pop
xor
js
adc
cmp
jbe
jne
stos
and
bound
mov
imul
jnp
pop
fwait
mov
sub
mov
push
out
bound
ljmp
mov
xchg
sbb
cwtl
shr
mov
dec
adc
orb
icebp
clc
jo
jnp
addr16
jo
ds
loopne
sbb
data16
jae
cmp
cmp
clc
push
loope
pusha
ret
lahf
add
jns
arpl
inc
stc
or
jmp
aam
xchg
lret
inc
fstpt
lahf
cmpsl
and
xchg
mov
popa
cli
jge
mov
pop
xchg
shrl
inc
cli
cmp
jge
jo
mov
dec
pop
xor
sub
jno
cmp
arpl
mov
pop
mov
mov
sub
stc
out
sti
sub
push
sahf
and
out
xchg
popf
fs
adc
outsl
fdivl
sbb
mov
cmp
add
sahf
int3
or
pop
pop
in
adc
xchg
cmp
sbb
push
adc
cmp
jl
je
sahf
and
xchg
push
and
dec
adc
sub
ss
mov
rolb
dec
inc
adc
cmp
mov
mov
xor
stos
sbb
fcom
cltd
mov
lret
dec
sub
pop
addl
sahf
insb
cmp
dec
je
push
mov
or
cmp
mov
lcall
sahf
xchg
or
push
sbb
inc
in
adc
inc
cmpsb
add
jle
clc
andnps
sub
cmpxchg
imul
insl
dec
cwtl
stos
testl
cmp
cmp
hlt
or
shr
ret
sahf
or
adc
cmpl
std
leave
in
pop
xchg
xlat
pop
test
push
sub
popf
push
adc
mov
mov
push
mov
cmpsb
sub
inc
incl
mov
jmp
jecxz
mov
pop
sahf
pop
rcrl
xchg
mov
pop
or
into
stos
stos
stos
add
xorl
push
dec
mov
mov
popa
sbbb
ljmp
std
jg
dec
aaa
mov
gs
or
xor
xor
fnstsw
sub
ss
sbb
pop
or
ljmp
cmp
cmpsl
data16
inc
outsb
push
cmp
imul
inc
std
sub
iret
addr16
iret
push
jae
sbb
mov
jb
pop
scas
dec
push
sub
cmp
sahf
imul
push
push
leave
fsubl
dec
lods
push
cmpsl
ss
mov
les
jmp
loopne
jbe
lods
pop
cmp
and
jp
pop
mov
lds
sbb
adc
push
mov
pop
pop
jb
stc
into
in
and
pop
push
gs
pop
inc
imul
and
addr16
push
push
test
int
insb
ror
out
bound
pop
dec
adcl
fidivrl
xchg
adc
mov
mov
movsl
cmc
add
es
mov
pop
mov
push
inc
lret
out
mov
rcll
jno
scas
cmp
mov
fcoms
mov
and
jecxz
add
xchg
mov
out
shrb
or
xlat
sbb
inc
sahf
inc
dec
adc
cmc
sbb
popf
adc
jp
dec
pop
cmp
or
ret
cmp
jnp
popa
adc
xchg
je
or
hlt
push
into
aas
sbb
mov
jecxz
fnstenv
fdivrs
sub
mov
xchg
dec
out
scas
js
fwait
dec
jge
cmp
and
jo
fs
jns
and
mov
jle
xchg
out
dec
in
xchg
out
loop
or
sub
dec
outsl
mov
daa
or
shll
int3
stc
add
js
cmp
mov
pop
outsl
mov
fcoms
adc
rolb
fsubrs
push
repnz
pop
inc
andl
into
mov
in
add
mov
daa
mov
mov
mov
xor
cmp
fisttpll
push
stc
or
stos
fnstcw
aam
jp
push
shll
jo
jb
test
hlt
testb
ljmp
inc
jb
jbe
cld
or
jb
ljmp
lret
ljmp
test
adc
ret
sbb
js
daa
rcll
mov
gs
mov
movsl
loope
mov
sub
into
inc
and
push
lods
xor
movsb
jp
and
add
into
and
add
repz
xchg
jle
enter
cmp
xchg
in
sub
cltd
loopne
xor
mov
daa
mov
fstl
out
inc
andb
and
jne
sbb
mov
cltd
mov
cmpsb
mov
fcoml
ja
dec
std
mov
jae
add
push
jge
push
bswap
or
pop
aam
pop
mov
mov
pop
mov
mov
popf
mov
mov
pop
add
call
loopne
aam
call
lcall
fnstenv
mov
jno
sbb
mov
and
or
xor
int
out
int
inc
and
test
push
xor
and
xor
icebp
inc
jo
jmp
mov
daa
shlb
data16
cltd
cmpsl
and
jl
push
into
add
fdivp
out
inc
mov
sti
pop
inc
loop
out
int3
out
adc
enter
mov
push
cmc
dec
add
mov
test
lds
jg
mov
das
gs
scas
lret
aam
push
out
stc
lcall
pop
push
stc
pop
scas
add
popa
aad
jle
rcrb
push
test
dec
push
fsts
mov
in
loope
cli
addr16
popf
adc
fmull
test
pop
scas
add
jmp
enter
sbb
pop
popf
rcll
jae
fucomi
ja
xor
add
xor
xchg
or
or
adc
sahf
and
js
fbstp
xchg
ja
das
jb
enter
stc
aas
scas
mov
pop
jnp
test
iret
cmc
adc
jle
sub
jne
xchg
mov
mov
dec
in
or
fistps
pop
insb
stos
shl
sbb
repnz
in
popf
cmp
and
mov
mov
int3
mov
xchg
sbb
inc
ljmp
jp
out
enter
cli
loopne
jb
sbb
xor
xor
jnp
insb
bound
mov
adc
jmp
inc
ret
mov
mov
mov
jns
sub
and
leave
dec
mov
outsb
out
lods
mov
add
adc
daa
and
imul
lret
cli
adcb
dec
inc
aad
pop
fwait
push
test
sbb
add
loopne
adc
dec
sbb
dec
sbb
ja
ljmp
pusha
mov
or
cltd
stc
int
push
lea
int3
lods
cmpsl
xchg
jbe
imul
jmp
lods
scas
and
outsb
std
gs
fwait
pop
cmpb
xlat
inc
mulw
in
and
loope
cmp
stc
push
fwait
lcall
out
imul
mov
push
cmp
dec
xchg
cmp
es
mov
xchg
fst
add
inc
and
push
and
pop
sbb
int
cmc
or
xchg
lcall
push
cltd
ss
jmp
inc
and
mov
sbb
fwait
sub
xor
nop
push
loopne
jecxz
pop
pop
ja
cltd
arpl
adc
mov
pushf
sub
sbb
lret
fbstp
xchg
lcall
add
sub
in
sti
inc
loopne
inc
fdivs
mov
xlat
push
add
xor
sbb
fs
or
mov
mov
add
xor
and
or
stc
out
and
pop
sahf
hlt
outsl
shll
mov
push
mov
and
sbb
sub
or
cmpl
mov
pop
xorl
push
jo
in
push
mov
outsb
shll
ss
jo
cld
and
inc
les
ss
scas
jg
xchg
ret
push
sbb
push
testl
mov
dec
mov
jle
mov
stos
push
mov
cwtl
iret
or
and
mov
jne
popa
inc
sub
pop
lcall
xor
idiv
adc
xchg
add
adc
sub
enter
fidivrs
dec
ret
mov
in
pop
pop
pop
call
ds
mov
gs
dec
scas
inc
insb
pop
cli
pop
sub
popa
arpl
fstl
adc
daa
mov
or
leave
leave
pop
insb
insb
xchg
repnz
mov
cmpsl
and
imul
sbb
hlt
inc
lea
popa
add
pushf
ljmp
repnz
iret
imul
dec
daa
mov
add
cmp
cwtl
mov
iret
lods
fs
push
iret
adc
mov
dec
adc
push
mov
push
cmp
fdivrl
push
sbb
es
or
mov
aad
icebp
stc
ret
mov
sub
add
sub
enter
icebp
cmp
cmp
fs
ja
pop
push
mov
mov
leave
mov
push
nop
test
or
test
or
xor
cmpsl
pop
xchg
rorl
je
imul
dec
mov
jecxz
mov
loop
inc
mov
xchg
loopne
lds
jge
cwtl
sbb
push
repnz
pop
dec
or
xor
cmp
inc
mov
adc
nop
mov
repnz
xor
and
out
insb
pop
mov
fdivs
fisubrl
jae
sub
lea
cmpsb
nop
scas
sbb
insb
jge
stos
sbb
inc
mov
mov
mov
dec
cld
insb
data16
int3
test
inc
pop
daa
jo
dec
xor
ja
xchg
sub
gs
dec
addb
push
lock
dec
fsubs
push
push
dec
inc
add
cs
and
ret
sarb
retw
xchg
nop
cmp
mov
or
or
std
xor
and
inc
jo
sbb
pop
lock
std
adc
jl
les
jl
lret
jae
movsb
add
xchg
ja
jmp
pop
cmpsl
and
or
cmp
pop
lahf
mov
call
dec
add
mov
mov
inc
pop
arpl
mov
fld
and
jg
test
test
lea
adc
mov
pushf
lret
xor
inc
jne
xchg
inc
pop
int3
call
xchg
xchg
pop
and
divb
sahf
jnp
inc
mov
not
add
xor
cmp
add
jecxz
cmpsb
cli
into
mov
shl
push
popf
or
jge
ljmp
fisubs
pusha
lcall
fisttpll
or
aas
push
rcrl
or
push
and
hlt
ljmp
mov
mov
xlat
subb
test
aad
mov
pop
out
cltd
mulps
lret
popf
xchg
in
ret
xor
sub
loope
cltd
fs
test
cmpsl
jo
in
nop
test
and
sub
stos
xor
decl
xor
pop
push
fidivs
inc
pop
sti
cmp
dec
shr
adc
mov
mov
or
adc
xchg
pop
sbb
jns
push
sbb
stos
repnz
sbb
cmp
test
movsl
xor
push
icebp
jns
xor
scas
pop
test
pop
rclb
outsb
jge
push
sbb
and
mov
test
sub
jmp
xchg
inc
adc
paddq
dec
rcrl
xor
push
pop
mov
pushf
push
pop
in
rcrb
call
jp
cmp
jnp
cmp
ds
sub
sbbb
mov
adc
inc
cmp
and
jle
movsb
or
xor
adc
leave
addb
mov
and
xor
rorb
xor
push
int3
pushf
out
gs
and
out
rcll
jno
pop
mov
pop
add
ja
jle
test
outsl
xchg
xchg
or
scas
rcr
popa
aad
lret
lods
mov
sbb
jmp
xchg
in
jb
pushf
xchg
xchg
cmp
add
addb
outsl
sarl
lods
cmpsl
jo
push
or
mov
loop
jns
adc
mov
movsb
pop
das
pushf
movsl
ds
out
mov
adc
outsl
fists
fstpl
mov
adc
ss
xchg
mov
insl
pop
popa
add
test
xchg
ds
xchg
fcmovb
inc
mov
jnp
add
push
sbb
jge
and
pop
fsubr
lods
outsl
imul
add
aad
je
je
xchg
daa
ret
dec
xbegin
mov
popa
or
fbstp
mov
xchg
pop
movb
sbb
imul
xor
and
dec
das
stc
cmpsl
push
int3
push
inc
adc
sbb
xchg
dec
and
idivb
jne
mov
clc
js
mov
xor
sub
jp
mov
and
dec
stos
cmp
adcb
xor
dec
and
aam
imull
sahf
and
push
lret
pop
push
inc
je
mov
repnz
sahf
sub
std
xor
and
iret
push
inc
xor
pop
fwait
imul
jg
push
int
test
xchg
inc
xchg
push
xor
or
mov
hlt
pop
insl
int
sbb
lock
pop
fiadds
dec
or
jae
mov
pop
rorl
sbb
xchg
dec
bound
std
stos
repnz
in
and
xor
mov
add
cmc
dec
xchg
bound
adc
sbb
movsl
inc
push
into
callw
dec
xchg
xor
das
scas
or
adc
and
or
jmp
pop
jo
mov
ja
jg
and
in
movsb
mov
pop
sbb
and
es
bound
inc
sbb
cs
jae
mov
mov
pop
scas
fistpll
imul
out
push
xor
shlb
sub
pusha
push
subb
pop
pop
daa
and
sub
aam
stc
stos
rclb
out
cmp
loop
push
mov
in
sbb
jae
fldt
xchg
pop
pop
ja
push
push
call
repnz
shl
mov
cltd
and
mov
arpl
sti
mov
mov
cmp
stos
call
dec
pop
adc
xchg
test
dec
mov
inc
pop
add
jecxz
adc
nop
mov
mov
pop
shlb
mov
inc
lret
shr
mov
and
mov
js
pop
add
sbb
mov
mov
insl
fistpll
mov
add
stos
mov
mov
add
mov
add
xchg
jbe
pop
cmp
pushf
jmp
jecxz
push
cmpsb
out
icebp
and
pop
dec
xor
movsl
mov
dec
mov
stc
adcl
or
pop
sbb
test
cmp
ret
test
jno
jge
mov
cmpl
push
cmp
out
frndint
out
adc
repz
jne
mov
ret
push
les
loopne
mov
loope
pop
loop
sbb
ret
inc
mov
ret
nop
shl
cld
sahf
cltd
add
in
seto
pop
add
loope
shll
addb
aaa
cmp
jae
mov
or
clc
mov
out
sbb
inc
repz
xor
adc
adc
mov
cld
cmp
cmp
int
arpl
lods
or
dec
cwtl
icebp
mov
ret
ss
jmp
mov
test
xchg
popf
out
fsts
mov
subb
mov
bound
out
imul
xchg
fimull
xchg
popf
xchg
dec
popa
cmpsb
pop
add
sbb
jbe
stos
sub
mov
add
arpl
or
pop
stc
scas
jg
sub
sbbl
cmp
jle
imul
sbb
xchg
popf
and
test
adc
mov
fsubp
fcomps
out
and
jae
fildl
jnp
push
xor
lahf
xor
sbb
ret
pop
pop
push
jno
imul
sub
cmp
out
mov
loop,pt
bound
pop
cwtl
fdiv
mov
int
push
add
pushf
je
dec
in
jno
lahf
push
sbb
pusha
and
fs
mov
sbb
mov
adc
sbb
lods
fcom
push
jg
je
adc
mov
xlat
pusha
sbb
inc
addl
sbb
push
inc
pop
jbe
dec
std
repnz
out
into
stos
mov
xchg
call
data16
mov
xlat
fbstp
mov
mov
mov
adc
in
and
xorl
jmp
insl
sub
jo
fisttpll
pop
jmp
push
mov
xchg
pop
sbb
mov
sarl
stos
jne
mov
or
inc
cmpsb
xchg
jl
fldenv
cld
fildll
cmp
ss
out
das
into
movsl
leave
cmp
sbb
lea
scas
ror
pop
aaa
ds
imul
xor
test
notl
int
sahf
into
shrb
xchg
pop
cwtl
outsl
inc
shll
pop
jb
fldl
addr16
xor
and
sbb
and
insb
les
popl
lock
imul
inc
aam
hlt
add
cmpsl
in
stos
xlat
sbb
jge
add
push
notb
xor
cli
or
jmp
out
mov
sub
aam
fistpll
imul
and
push
xchg
cmp
mov
inc
push
xchg
pop
out
leave
xchg
push
push
call
imull
add
nop
inc
addr16
push
jno
insb
outsb
hlt
les
add
fldcw
dec
mov
mov
mov
jmp
call
mov
pop
xchg
or
addr16
mov
aam
push
lods
fcmovnb
add
dec
xlat
add
mov
loop
mov
push
loopne
cltd
rorb
xorb
test
fbstp
ljmp
testl
xchg
int
jge
out
pop
cli
movsl
movsb
or
xor
sub
int3
pusha
ljmp
or
cld
mov
cmpsl
add
insb
hlt
dec
test
lret
adc
int
int
xlat
pop
add
push
xchg
dec
insb
iret
mov
xchg
mov
mov
es
sub
or
pop
and
sub
sbb
sbb
add
inc
cmp
call
and
outsl
andb
popf
pop
pusha
pop
loope
jecxz
lods
mov
adc
hlt
mov
push
adc
mov
fstps
icebp
cmc
cmp
jl
sbb
sbb
mov
mov
xorl
or
loope
fwait
negl
clc
insb
faddl
outsb
sbb
cld
sub
push
jmp
sarb
push
sbb
and
sbbl
jbe
mov
ret
or
ret
xchg
cli
into
pop
sub
pop
pusha
adc
icebp
push
in
mov
sub
sub
cli
fwait
lret
mov
jne
push
leave
and
mov
lea
mov
xchg
arpl
cmp
or
mov
push
sbb
loope
repz
int
je
loop
ds
lret
inc
pop
or
inc
mov
rcl
into
cwtl
out
inc
lret
inc
inc
hlt
imul
push
xor
add
mov
dec
inc
cmp
mov
sbb
mov
nop
arpl
rcl
out
sahf
movb
sti
mov
orl
stc
adc
test
rcrl
fsubl
pop
hlt
daa
sub
jp
andl
and
lret
add
sarb
cmpsb
cmpsl
out
lret
cmp
mov
sub
push
loop
fbld
shr
in
push
fcom
adc
test
mov
cli
enter
out
pop
movsl
and
test
iret
roll
pop
push
xchg
insb
push
xchg
jb
cmp
sahf
in
add
add
int3
out
inc
push
es
sbb
mov
ret
call
js
mov
inc
mov
sbb
shlb
pop
out
daa
es
push
cmp
and
dec
mov
mov
jg
sub
data16
and
out
and
xchg
adc
pop
aad
mov
push
lock
call
ljmp
xchg
std
lret
fstl
adc
aam
xorl
jecxz
push
jmp
loope
or
mov
sbb
push
xchg
imul
loop
ret
dec
in
add
push
mov
fisttpll
adc
mov
or
into
shr
js
fldt
sbb
or
push
outsb
pop
push
push
fwait
pop
mov
sbbl
sub
or
inc
sub
cmp
mov
test
jecxz
clc
das
ja
jle
add
xchg
dec
cmp
mov
sbb
subb
leave
xor
leave
sti
jo
je
movsl
add
bound
bound
inc
mov
loopne
jmp
xchg
in
add
nop
cs
sahf
push
dec
sbb
mov
mov
movsl
adc
repnz
fidivs
in
xchg
pop
loop
or
sarl
xchg
cmpsl
aaa
repnz
sti
mov
cmp
dec
lret
leave
fistps
inc
xchg
cs
sub
flds
mov
iret
pop
mov
test
mov
imul
xchg
xor
sbb
cmp
les
add
dec
inc
repnz
add
mov
fwait
gs
pop
add
scas
enter
mov
mov
sbb
or
addr16
push
push
push
sub
test
mov
data16
imul
mov
add
ret
xchg
bound
cltd
and
fisttpll
in
dec
adc
jl
mov
mov
mov
adc
lods
pop
addb
fwait
mov
dec
pop
and
hlt
test
leave
jecxz
mov
ja
pop
repnz
mov
pop
lods
add
add
ret
pop
repz
orl
add
add
push
ljmp
push
inc
nop
lods
pop
xchg
cld
clc
nop
std
mov
icebp
mov
es
jb
repnz
shlb
mov
aam
in
push
movsb
cmp
jnp
mov
mov
mov
dec
or
out
and
dec
mov
pop
cmpb
mov
pop
cmpsl
push
cmp
outsl
jae
in
scas
sahf
ja
addl
insl
mov
cmp
dec
xchg
or
inc
jns
mov
scas
push
imul
add
lock
sbb
mov
aam
adc
xchg
jmp
movsl
mov
lret
test
mov
mov
outsb
stos
xlat
in
setg
movb
stos
adc
inc
test
test
das
iret
jo
arpl
ja
fildll
arpl
ds
add
xchg
clc
scas
sbb
fists
mov
arpl
scas
scas
in
mov
movsb
test
xor
in
incl
and
xchg
mov
aam
adc
xchg
xchg
mov
adc
sbb
pop
enter
xchg
mov
adc
xchg
push
xor
xor
arpl
fnstcw
lret
aaa
jmp
and
lea
push
test
dec
pop
mov
inc
lcall
push
mov
sbbb
loope
mov
nop
test
adc
push
and
stos
pop
int
adc
lret
cmp
ret
dec
cmp
andl
add
push
enter
or
lcall
and
lods
mov
lret
rcr
inc
push
cwtl
jo
dec
mov
jl
pop
sbb
andl
dec
mov
jg
push
pushf
mov
jne
xor
iret
inc
or
mov
and
mov
mov
sbb
enter
pop
inc
in
mov
jbe
bswap
add
mov
or
icebp
mov
push
imul
mov
push
hlt
jo
popf
mov
sbb
adc
sbb
dec
fldenv
add
dec
push
mov
sarb
cld
and
jmp
mov
cmpsb
xchg
fadd
or
pop
adc
cmp
std
data16
jae
add
sub
jmp
repnz
int
inc
insl
out
fwait
add
test
push
lahf
pop
push
adc
mov
fisubs
push
xchg
pop
cltd
mov
subl
loop
imul
jg
insl
call
or
mov
jbe
pusha
movsl
into
push
or
xchg
enter
andb
cmp
ficompl
dec
mov
cmp
cltd
lds
movsb
add
stos
out
xchg
lret
jp
xor
mov
sbb
push
push
bound
inc
sub
mov
loope
test
push
ror
xor
jp
dec
scas
adc
in
push
lods
mov
sbb
pop
push
mov
ret
loop
jb
daa
xchg
test
or
mov
into
inc
mov
pop
push
insb
pop
into
popf
dec
cli
jmp
push
push
sbb
ret
int3
rolb
ret
aad
and
xlat
js
fcomp
mov
and
dec
xchg
outsb
or
filds
or
sub
popa
add
jge
popa
mov
xor
mov
cs
lret
movsb
cltd
in
cs
out
or
mov
xor
js
addl
xor
insb
push
mov
push
jno
fiaddl
inc
jo
mov
outsb
mov
push
xchg
cld
jo
adc
cmp
and
popa
mov
inc
sub
mov
jge
dec
aad
and
iret
pop
add
lods
pop
pop
xchg
insb
push
lret
or
enter
scas
xor
enter
xchg
das
rcll
pop
les
fucomp
and
add
scas
mov
ss
sub
test
fdivrl
sbb
test
jge
fldl
insb
fists
shll
xchg
pop
sub
lods
or
dec
fs
push
js
gs
add
push
imul
push
ret
xor
pop
icebp
dec
inc
aam
ret
js
mov
loope
mov
jbe
push
movsb
mov
loopne
mov
cli
jne
loope
cmpsl
jnp
mov
gs
cli
mov
dec
push
lods
sbb
les
cmpsl
dec
and
pop
loopne
adc
mov
xorb
bound
cwtl
rcll
pop
sub
mov
mov
pop
and
mov
lock
jmp
inc
mov
out
pop
fisttpll
repnz
mov
test
icebp
test
sti
cs
push
sub
and
xchg
xor
inc
and
jp
mov
popa
pusha
fwait
rorl
push
leave
rclb
dec
enter
fiadds
aam
mov
mov
pop
add
lods
mov
adc
fmuls
jle
adc
sti
mov
mov
divb
stos
mov
cld
mov
jl
cmc
xor
dec
ja
jns
push
sbb
or
scas
mov
jg
cmp
or
xchg
out
pop
mov
mov
jae
inc
inc
mov
inc
mov
sbb
xor
or
fsubr
dec
mov
jnp
fistpl
jmp
mov
sub
sbb
and
cs
imul
xor
stos
push
jmp
mov
cmp
xor
test
aad
adc
in
int3
test
mov
clc
out
xchg
out
mov
aam
xchg
adc
scas
aaa
cltd
dec
cmp
jg
dec
fucom
sub
and
rcr
mov
fiaddl
aas
sbb
int
cmc
xor
stos
call
addb
inc
inc
scas
lods
aad
xchg
mov
mov
cltd
cmp
je
push
mov
test
insl
scas
pop
out
les
mov
fidivrl
mov
rcr
pop
push
mov
inc
loope
shrb
call
adc
xor
js
mov
pop
nop
ret
mov
xchg
jo
test
inc
rcll
repnz
pop
shld
out
divl
xor
jno
pop
fisubl
test
mov
fisttpll
dec
out
test
sbb
mov
addl
dec
enter
jecxz
adc
and
push
ret
ja
fcoml
dec
xlat
mov
add
pop
daa
add
aas
push
sub
adc
jmp
ljmp
pushf
xchg
test
mov
punpckhbw
add
inc
add
jnp
inc
imul
sbb
xor
lahf
jnp
mov
scas
and
xor
movsb
inc
cmpsl
jmp
mov
test
out
cli
or
dec
mov
sbb
dec
cmp
insb
push
fs
cmpsl
out
loop
scas
mov
loopne
aas
ret
mov
xlat
ljmp
or
or
push
pop
pop
aam
xor
cmp
addb
fiaddl
in
or
and
test
or
adc
xor
xchg
lret
movsl
shrb
inc
scas
outsl
mov
stc
and
clc
mov
lret
sbb
ficoms
sarl
or
mov
in
daa
inc
enter
bnd
stc
ret
loop
aas
aaa
leave
push
sbb
das
inc
push
dec
inc
xor
das
xor
pushf
mov
in
jmp
imul
or
cmpsb
adc
sbb
mov
stc
stos
notl
mov
in
dec
lahf
repz
test
jb
loope
cmp
adc
mov
and
les
xor
adc
pop
jge
sbb
mov
pop
inc
cmpsl
leave
stos
out
test
inc
lods
cmp
imul
fwait
pusha
icebp
lcall
cmp
popf
mov
fistpl
push
cmpsl
push
push
lods
and
or
sahf
jle
push
xor
xchg
add
xchg
jbe
push
into
mov
sub
mov
mov
sub
add
push
es
dec
sbb
adc
pop
mov
push
pop
pop
sbb
insl
test
ret
mov
inc
jl
xor
jle
inc
std
sti
pop
ret
fwait
push
lea
test
pop
test
call
mov
popa
fs
mov
mov
jp
aam
lods
xor
mov
jg
mov
and
test
cli
cmp
sahf
loop
fwait
jo
mov
push
repz
mov
pushf
imul
jg
scas
popa
fisttpl
test
mov
orb
call
lret
movsl
jbe
aas
fdivrs
dec
stc
outsb
dec
cmp
jecxz
int3
pushf
jo
test
enter
je
call
addr16
mov
std
imulb
lods
xchg
cmp
out
cmpsl
sub
cmp
xor
xchg
add
fstpt
loop
cmp
out
ja
lahf
xchg
fadds
pusha
shlb
mov
int3
call
scas
sbb
movsb
js
lret
push
mov
or
jnp
dec
pop
imull
clc
mulb
jle
mov
push
test
mov
repz
mov
test
adc
xor
xchg
sbb
test
add
testb
shl
loop
inc
out
int
mov
movsl
lock
sar
xchg
mov
sbb
data16
leave
mov
ja
cmpsb
mov
jbe
and
pop
jae
aas
stos
lahf
mov
mov
scas
movsl
mov
push
cli
ds
xchg
inc
push
lods
cwtl
cwtl
imul
push
inc
dec
adc
pop
push
fldl
cmp
rcll
iret
arpl
adc
dec
shrl
mov
xor
sti
lret
mov
or
and
jns
data16
cld
or
cmpsl
cs
lcall
aas
subb
leave
cmc
test
lods
loopne
xchg
cltd
jno
mov
orl
cmp
dec
push
sahf
nop
mov
push
cmc
pop
jae
sbb
clc
inc
stos
xorb
repz
stos
test
xor
in
loop
fsubs
sbb
xchg
and
xor
dec
jg
or
inc
sub
movsl
mov
add
jbe
adc
cld
mov
jnp
pop
and
cmp
decb
out
mov
and
xor
pop
mov
sbb
push
fidivrl
cld
fdivs
cmpsl
in
repnz
add
xchg
inc
inc
into
mov
jp
je
out
mov
mov
mov
imul
jmp
cmp
scas
cmpsb
lds
scas
cmp
mov
jo
and
jmp
mov
pusha
stc
pop
sub
xlat
in
push
push
xor
or
sahf
and
insb
out
negl
xor
push
sub
inc
jo
xor
cltd
outsl
fwait
cmp
shll
inc
hlt
or
push
out
shl
outsb
sub
loope
or
jb
cmp
jo
jl
mov
jbe
gs
shl
test
aam
shrb
ljmp
mov
lahf
adc
push
outsb
bound
cltd
repnz
in
cmp
push
inc
shlb
xor
loop
push
add
out
dec
mov
xchg
popa
mov
xchg
xchg
lcall
xor
adc
add
dec
dec
push
jne
adcb
push
das
or
out
sbb
adc
cmp
jns
jmp
nop
and
jg
xchg
push
xchg
loopne
lret
aas
neg
add
cmpsl
or
testl
push
aam
pop
or
push
mov
jcxz
lods
mov
or
or
adc
test
pop
inc
xor
pushf
cli
leave
test
jmp
push
mov
cmp
sbb
pop
cwtl
nop
loop
push
jp
push
scas
xabort
data16
push
and
loopne
push
inc
scas
pop
mov
push
icebp
imul
incl
fwait
into
and
cli
dec
fs
mov
xchg
rcl
sarb
push
imul
jb
ret
bound
push
pop
ret
jp
in
shll
sub
push
std
in
mov
dec
rolb
out
pop
testl
es
data16
ret
dec
mov
or
push
sbb
pop
jge
test
push
test
in
test
icebp
cmpsb
bound
cmp
imul
stos
rcl
cs
shl
rcr
hlt
hlt
or
insl
fst
cltd
ljmp
jmp
outsb
cmpsb
in
ret
icebp
outsl
dec
push
jmp
cmp
jbe
add
pop
cmp
push
hlt
fidivrl
jmp
pop
ret
add
jecxz
cld
repnz
or
ficomps
push
or
repz
orl
cmp
dec
mov
scas
jnp
dec
mov
mov
insb
sbb
cmc
insl
in
adcb
dec
xchg
lcall
sbb
popa
daa
mov
fcompl
cmp
mov
addr16
aas
xor
adc
and
adc
xchg
loop
push
icebp
ds
dec
cmpl
xchg
sub
addr16
pop
jnp
push
in
faddl
fucomip
lahf
adcb
and
test
lea
pop
pop
and
mov
add
andb
mov
inc
push
clc
js
push
and
jae
addr16
adc
pop
mov
insl
jl
leave
sahf
sahf
xlat
incb
movsb
sti
xchg
pop
mov
sub
mov
jnp
mov
fistl
movsl
sub
frstor
sub
imul
in
rcr
jne
pop
imul
in
mov
push
mov
jg
imul
jmp
test
stos
rcll
mov
repnz
out
in
mov
and
fst
cltd
test
pop
push
mov
fldl
cli
xor
add
mov
cmpsl
test
add
mov
adc
add
add
push
pop
add
shrl
lret
add
dec
push
out
daa
push
sbb
pop
insl
sub
mov
jne
mov
xchg
cmp
mov
loope
sub
repnz
inc
inc
cmpsb
test
jns
push
fstpl
into
pop
fmull
fbld
faddl
sbb
ret
insb
jp
cli
imul
pop
cltd
xor
ljmp
rcl
cmp
in
and
aaa
dec
add
fs
jbe
xor
add
push
mov
fisubs
lret
enter
clc
daa
and
outsb
pop
push
pop
rcrb
jle
push
loopne
xchg
sbb
sub
aam
jmp
test
out
stc
int
push
outsl
sub
fwait
adcb
test
in
push
pop
rorl
ds
lret
out
mov
mull
andl
pop
pushl
pushf
and
xchg
arpl
fcoml
negl
inc
icebp
leave
adc
das
fsubl
mov
lods
and
add
hlt
cmp
popf
fisttps
pushf
popa
inc
out
inc
aas
jo
jecxz
push
cwtl
fs
push
sbb
scas
sbb
repz
push
xchg
jbe
xlat
pusha
cmp
xchg
iret
and
jo
jns
cmpsb
sbb
nop
sti
lret
mov
cmp
fs
jae
bound
enter
adc
sahf
mov
cmp
lahf
xor
cmp
jecxz
scas
es
out
addr16
cmp
dec
xchg
cld
imull
add
mov
ficoml
pop
mov
out
lock
enter
mov
mov
mov
cmp
fidivrs
and
lahf
xchg
mov
dec
jle
addr16
xchg
lret
lret
dec
ror
test
cmp
adc
aam
push
mov
cmp
jecxz
mull
jne
or
test
int3
fisubrs
pusha
out
popa
or
sub
cld
adc
mov
mov
fcompl
push
jns
inc
popa
mov
and
jecxz
in
cmp
pop
bound
inc
xchg
std
pop
frstor
sahf
or
xchg
adc
enter
push
lock
jae
movsb
ss
adc
inc
jbe
filds
iret
cmp
imulb
fsubl
pushf
mov
loopne
fstpl
addr16
rcrb
data16
cs
rcrb
xor
gs
push
in
fucomp
inc
arpl
cmp
sub
in
cmpsl
cli
movsl
xchg
mull
repz
mov
iret
or
dec
cmp
enter
push
pushf
pushf
sub
sub
in
icebp
push
xor
xchg
ss
push
xchg
jne
sbb
cwtl
mov
iret
mov
jmp
outsb
nop
imul
in
sti
pusha
xor
and
outsl
dec
push
push
add
push
jb
jmp
adc
jmp
test
mov
or
fcmovne
aam
sbb
push
adc
movsl
jbe
daa
rcrb
js
int3
ljmp
rcll
add
or
cs
vfrczsd
inc
sti
and
or
add
enter
aaa
xchg
cli
adc
xor
lcall
jnp
jle
rorl
inc
inc
cli
in
push
lret
int3
leave
mov
outsl
mov
add
and
outsb
sbb
aad
cli
xchg
sti
mov
insl
xor
and
jmp
xor
or
mul
xchg
xor
xchg
push
das
ret
mov
fnstcw
out
sbb
push
and
lods
mov
mov
cmp
cmp
popf
leave
rcll
sub
jle
sub
jge
ljmp
clc
sbb
sar
pop
sti
add
stos
adc
mov
inc
clc
and
out
and
je
dec
movsb
xor
mov
dec
adc
movsb
mov
mov
shll
cmp
repz
push
xor
and
sub
xor
cmpsl
dec
jp
es
xor
push
sahf
push
aad
daa
addr16
xchg
xor
cmp
jae
mov
ret
dec
cmc
scas
jns
cmp
and
add
and
push
jl
outsb
and
gs
xchg
jne
inc
popf
in
push
fmuls
jl
aad
lcall
fwait
les
mov
dec
xchg
rcll
or
adc
popf
cmpb
mov
repz
clc
fistpl
repz
cmpsb
aaa
imul
sbb
js
xchg
mov
xchg
pop
pop
add
out
and
push
or
mov
sti
lods
mov
jnp
adc
lock
fstps
inc
xor
fsubs
call
xchg
cmp
scas
fcmovu
mov
jb
xor
cmc
call
jnp
or
push
std
or
out
pusha
dec
xlat
xchg
enter
jne
in
int
lret
xchg
mov
jg
fsubrp
cmp
dec
int
gs
jp
xchg
sbb
lcall
pop
out
leave
and
shr
add
stos
cmpsl
or
ror
fwait
bound
push
add
loop
add
movsl
xchg
scas
stos
ficoml
cmp
vpunpcklbw
pop
loope
pusha
dec
shlb
mov
mov
mov
shlb
or
sarl
sub
and
enter
negl
or
add
inc
leave
cmp
mov
aas
mov
bound
mov
inc
outsl
inc
popf
stc
mov
ret
dec
imul
sbb
jbe
pop
leave
negl
mov
pusha
aam
add
sub
adc
cmp
push
xchg
loope
pushf
inc
cs
and
lods
mov
cmp
jb
fsubl
insl
add
dec
rorl
sbb
repnz
adc
stc
mov
lds
cld
dec
sub
jnp
pop
add
or
test
jo
arpl
cmc
gs
insl
inc
in
in
xor
mov
incb
add
cld
xor
push
scas
pop
jb
jb
add
adc
outsl
dec
hlt
mov
dec
adc
stc
sub
sbb
and
stc
loopne
das
das
push
xor
mov
inc
push
push
add
in
push
fnsave
pop
movsb
adc
pop
xchg
ret
pop
xchg
loop
stos
cmp
adc
fwait
xchg
idiv
xchg
inc
push
dec
pop
push
mov
pop
inc
aam
push
cmp
mov
pop
fwait
mov
cmp
push
cmpl
and
lds
inc
repnz
arpl
jo
jnp
fcmovb
push
loopne
pop
gs
jmp
imul
adc
mov
inc
call
sub
aam
sub
das
push
in
out
mov
ja
rcrb
jmp
xchg
pop
mov
mov
rcrl
push
out
push
adc
cmp
mov
xorl
push
xchg
xor
inc
mov
rclb
popf
out
mov
cmpsl
shlb
push
adc
jbe,pn
and
fbstp
add
bound
flds
inc
decl
loope
loop
inc
test
pop
imul
lds
mov
mov
arpl
jmp
pop
sbb
outsl
mov
push
pop
ret
daa
mov
mov
ffreep
push
fs
in
out
out
div
push
insb
mov
and
out
leave
mov
xor
push
pusha
xor
test
sub
in
ds
push
push
mov
and
pop
cmc
dec
xor
cwtl
pop
mov
xor
lods
ror
repnz
xor
mov
loope
cmpsl
lahf
mov
lods
sub
add
imul
jbe
or
add
jmp
mov
div
test
dec
loopne
cmpl
dec
xchg
adc
and
sub
adc
and
jnp
sbb
xchg
sbb
lahf
mov
lret
filds
lock
mov
pushf
mov
mov
mov
or
scas
imulb
cld
push
mov
mov
adc
out
lret
aaa
mov
pop
enter
in
test
push
push
insl
fs
pop
and
pop
mov
in
sbb
aad
scas
xor
pop
ja
mov
mov
aad
jae
fwait
xchg
inc
repnz
push
sti
data16
jle
cld
cld
clc
mov
divl
lods
std
sbb
data16
loope
iret
in
or
daa
mov
push
dec
add
popl
call
pop
dec
scas
imul
push
loop
aaa
adc
pop
lock
inc
jnp
cmp
testb
pushf
mov
inc
cmp
roll
loopne
jl
and
pop
cld
ror
add
adc
or
push
sbb
or
xor
xchg
sbb
jmp
out
daa
lret
outsb
dec
adc
and
and
dec
jnp
test
jb
jne
out
arpl
sarl
int3
mov
push
hlt
in
mov
sbb
out
jmp
sti
ja
push
divl
out
and
test
mov
and
mov
fldl
punpckhbw
add
xchg
arpl
sub
cmpsl
push
sbb
sub
xor
inc
adc
loop
push
xor
dec
jns
xchg
and
imull
push
scas
mov
push
push
jp
push
cli
pop
xchg
stos
add
inc
adc
push
ja
cli
push
jnp
jns
push
sub
xor
mov
mov
ja
sub
fisubs
movntq
std
mov
mov
les
cmp
sahf
iret
inc
testl
outsl
int3
push
flds
sub
mov
sbb
pop
xchg
jae
sub
icebp
sti
inc
nop
xor
mov
jecxz
push
aam
mov
fdivr
and
push
pushf
add
or
adc
push
fs
je
sub
psubb
fwait
sbb
jmp
dec
hlt
jnp
adc
jge
js
loope
push
cmp
fadds
xor
mov
cltd
call
sarl
ret
dec
jnp
insb
in
push
scas
dec
pop
lahf
xchg
ret
ret
daa
push
fdivl
sub
mov
inc
pop
sub
out
hlt
push
xor
push
das
addl
in
push
sbb
add
rcrl
dec
lret
mov
mov
ret
jmp
arpl
sahf
lock
jae
orb
test
sahf
mov
cmpsb
mov
scas
jbe
xor
std
les
cmp
divl
outsl
lock
add
mov
mov
pop
aaa
sub
cld
ret
movb
inc
mov
lret
xor
jle
ljmp
iret
aam
push
stos
jl
mov
push
andb
test
inc
cwtl
aad
push
mov
push
gs
jns
ja
xchg
je
data16
shrl
popa
jno
cmp
imul
or
lret
push
shll
mov
pusha
insb
adc
pop
insl
ret
pushf
cld
mulb
mov
loop
push
jb
ficoml
add
mov
sbb
mov
sahf
jne
cmpsb
lret
cmp
clc
imul
cmp
mov
lock
and
inc
mov
cmp
out
jle
pop
mov
jne
cmpsb
movsb
dec
es
shl
cmp
add
add
pop
push
out
sbbl
stos
sub
cmp
jle
inc
cmp
fchs
in
mov
inc
mov
and
or
jecxz
mov
pop
adc
push
fcmove
js
mov
dec
mov
xchg
or
outsl
jae
lret
lret
pop
cmp
outsl
sbb
mov
pop
aad
adc
sbb
outsb
dec
ja
ds
xchg
aam
movsl
cmpsb
lret
cld
int3
add
pop
stos
fidivrs
add
mov
mov
push
sbbb
push
add
into
ja
aas
std
add
or
imull
inc
inc
push
cmpb
jge
sarl
inc
out
mov
test
mov
dec
push
push
pushl
mov
aaa
nop
frstor
dec
and
cltd
xchg
mov
mov
push
inc
and
push
out
aas
iret
sub
jle
mov
out
stc
pushf
pop
aaa
jb
stos
jg
js
outsb
pop
movsl
mov
xchg
lret
mov
push
mov
inc
mov
cmp
pop
mov
out
lcall
mov
cwtl
adcb
lret
and
js
mov
loop
sub
mov
inc
or
fs
jmp
loopne
std
in
outsb
rolb
out
ret
cltd
cmp
jmp
ds
dec
jp
push
js
push
dec
pop
push
data16
outsl
xchg
loop
fcompp
out
jg
mov
fsub
adcb
xchg
adc
push
mov
mov
fisttpl
lea
push
int3
add
je
push
and
cmp
pop
ljmp
jge
pop
cld
pop
fldcw
push
sbb
sahf
sbb
adc
mov
or
lds
xchg
je
and
aam
adc
inc
insb
cmp
push
or
int
scas
inc
stc
cli
cli
jl
jo
fisubs
push
dec
fbstp
rolb
push
je
popa
mov
sbb
ss
dec
aaa
dec
loope
mov
ret
mov
pop
mov
inc
pop
sbb
xor
cmpsb
ret
mov
fiaddl
fisubrs
mov
jns
adc
adc
int3
mov
pop
mov
pop
je
fwait
jne
iret
cmp
mov
cmp
sub
adc
decb
or
lds
jl
xor
jp
cmp
sarb
mov
push
mov
fwait
push
dec
out
rcll
mov
and
aas
mov
or
inc
fcoms
sbb
cmp
mov
cmp
jbe
nop
test
push
mov
es
xchg
inc
lods
push
lahf
ss
add
data16
pop
inc
pop
jbe
rcl
push
add
ljmp
outsb
bound
mov
call
shr
sub
sahf
hlt
dec
pop
push
popa
mov
adc
sbb
xor
jl
and
rorb
inc
or
pop
jb
adc
sub
insb
scas
mov
leave
sbb
cmpb
xor
jb
test
xchg
lahf
test
xchg
cmp
in
mov
mov
pushf
pop
popa
add
adc
lahf
jnp
dec
in
inc
jbe
les
movsb
xchg
jg
jae
jp
jmp
loope
lea
xchg
es
xor
mov
clc
fisubrs
test
lahf
lea
dec
sahf
xor
fsubp
or
push
repnz
sti
cmp
fs
and
add
mov
ss
mov
mov
xor
xor
mov
outsb
pop
out
aaa
lahf
cltd
in
mov
fbld
push
xor
xchg
push
daa
pop
jl
xchg
cmp
ss
inc
jb
add
imul
pop
clc
icebp
lea
xchg
mov
fstpl
dec
push
jg
repnz
cmpsb
and
dec
sub
cmp
cwtl
mov
jmp
add
push
cmpsl
std
fs
cmc
outsb
lret
jns
cmp
cmpsb
add
aam
jge
popa
dec
fidivrs
push
sub
mov
sub
in
outsl
cmp
je
and
outsl
ds
pop
arpl
sbb
fldcw
scas
sub
jbe
push
popf
cld
fnstcw
cmp
ret
lret
sbb
cmp
xor
fidivs
sub
push
pop
enter
pop
ds
push
pop
lret
mov
dec
cld
in
fsubs
xor
push
cwtl
and
hlt
mov
outsl
push
cltd
jb
push
cmp
and
xchg
loopne
inc
mov
cltd
in
mov
repnz
ss
dec
out
sbb
or
push
in
or
insl
dec
loope
cmpsb
iret
int3
lock
and
pop
cli
vpminsw
in
adc
movsb
pop
inc
pop
repnz
lahf
lods
jae
push
sub
cmp
xadd
testb
aad
jno
iret
cmp
xlat
ds
pop
sti
arpl
arpl
out
lret
sahf
lcall
xor
dec
dec
push
inc
pusha
jge
sub
dec
inc
pop
push
call
push
xlat
push
pop
xor
xor
fsubrp
scas
adc
inc
xor
adc
jecxz
pop
jne
out
cmp
jne
and
call
push
jecxz
dec
pop
add
and
mov
mov
cltd
cmpsb
or
dec
push
fldcw
enter
clc
mov
jo
mov
sub
add
xchg
rorl
ljmp
and
mov
xor
decl
inc
ja
cmpsl
cld
jb
repnz
jle
mov
push
fdivr
bound
out
add
loope
notb
loopne
jg
and
push
test
imul
lea
mov
push
lds
mov
out
movsb
mov
mov
loope
xchg
ds
cmp
addr16
data16
bound
hlt
mov
scas
xchg
add
mov
jle
in
lock
sub
in
push
push
sub
stos
or
or
dec
insb
adc
sbb
push
shl
cwtl
inc
mov
and
or
aaa
cmp
and
jbe
dec
pop
push
pop
int3
dec
stc
mov
js
repnz
mov
shll
rorb
and
push
aas
cwtl
fadds
dec
call
cmc
inc
jbe
mov
jo
cwtl
cli
fisttpl
and
lcall
lahf
cmp
xor
shlb
or
leave
sbb
jg
or
scas
scas
ja
push
lods
add
mov
or
jne
add
sub
js
lret
xor
movsl
xchg
mov
adc
xchg
pusha
dec
daa
inc
test
je,pt
insl
into
lods
xor
xor
xor
jge
cmpsb
mov
push
mov
lea
cmp
mov
adc
mov
aas
test
inc
int
arpl
sub
xchg
les
iret
dec
sub
addr16
mov
fwait
adc
movsb
mov
roll
push
sbb
insl
jnp
mov
push
in
sbb
xchg
sub
mov
pop
xchg
js
stc
sub
ja
test
ja
add
pop
rcll
mov
sbb
in
push
in
add
outsb
cwtl
std
dec
and
add
lea
push
fcmovu
xor
andl
xchg
pop
push
fwait
ds
cmp
jb
fidivrl
loopne
popa
add
popf
mov
rolb
cmp
sub
mov
push
testl
cld
int3
je
jno
mov
fdivs
mov
aad
lret
fstl
fisttpll
loopne
sub
test
push
lods
push
or
out
push
iret
mov
insl
data16
or
pop
dec
xlat
dec
lods
lahf
int3
jo
and
add
inc
ja
inc
mov
lds
mov
outsl
es
dec
test
stc
scas
incl
imul
mov
mov
enter
sub
lods
or
inc
adc
xor
out
fnstsw
xchg
dec
add
xchg
add
cmp
lods
or
adc
jbe
pop
ret
add
out
adc
ja
outsl
out
bound
ficoms
pop
push
ret
mov
aam
mov
aad
xchg
xor
adc
mov
cmp
pop
pop
or
daa
cmp
orl
mov
cmp
add
cs
or
mov
mov
inc
data16
cmp
sub
sti
pusha
inc
mov
sbb
xchg
xor
xlat
push
popa
pusha
sbb
xchg
cltd
andb
stc
ljmp
addl
fs
addr16
lret
es
dec
cld
pop
jmp
data16
and
add
mov
leave
xorb
and
mov
fstl
in
or
cmp
in
sbb
dec
lock
cli
xor
pop
inc
xchg
inc
popa
clc
daa
pop
dec
pusha
push
sub
loope
adc
push
pushf
mov
int3
pop
mov
ss
fsubl
stc
fistpl
jle
xchg
aas
xorl
cli
ja
pop
data16
sbb
push
push
xorl
lret
cmp
data16
push
mov
jne
cmp
cmp
mov
push
inc
adc
pop
or
xchg
adcb
loop
cld
je
repnz
mov
push
andb
mov
jo
movsb
andb
sti
rol
ljmp
lret
pop
movsl
aas
pop
test
stc
imul
out
dec
mov
ljmp
xchg
rolb
adc
xor
test
xor
xorb
xchg
mov
lcall
in
jne
mov
call
loope
cmp
rcrl
stc
shlb
or
out
sbb
test
sbb
cmp
fisubrs
movl
push
lods
dec
movsb
and
mov
xor
jl
scas
push
pushf
into
pop
repnz
fistpl
imul
bound
loope
adc
add
jle
mov
lods
into
outsl
aaa
mov
iret
lahf
pop
les
mov
icebp
mov
xor
or
jl
cmc
cmpsb
xchg
ret
mov
xor
aad
xchg
push
sbbb
in
shrl
hlt
ljmp
in
adc
mov
xorb
fisttps
jmp
fisttpll
pop
in
aaa
push
adc
popa
mov
mov
pop
iret
and
icebp
cmc
cmp
xor
cmpsb
cli
mov
test
loopne
or
lock
sub
inc
xor
dec
stos
and
enter
xor
repz
out
pop
jge
insb
dec
pop
xor
movsb
add
and
addr16
xchg
rcll
mov
in
and
xlat
xchg
pop
mov
dec
aam
xor
jb
out
mov
sub
xchg
pop
mov
jno
cli
inc
es
pop
in
mov
mov
adc
out
aad
clc
loop
movsl
cmp
repnz
js
icebp
mov
mov
adc
mov
aas
scas
ret
out
inc
sbb
insb
fsubrs
inc
mov
iret
jmp
cmp
sti
lsl
ret
xchg
or
xor
add
scas
pop
shrl
adc
add
jo
and
std
add
call
test
inc
sbb
movsb
cmp
sahf
sub
add
pop
out
loope
je
inc
movsb
stc
fstpl
and
out
insb
mov
imul
nop
adc
subb
movsb
rcr
scas
jg
push
fmull
and
sub
mov
push
xchg
das
cmp
adc
xchg
daa
imul
jmp
dec
fildll
cmpsb
orb
aad
sbb
cmp
push
ret
inc
or
jl
in
cmp
push
fsubp
mov
xchg
add
call
pop
mov
hlt
cmp
lods
and
xor
xchg
xor
hlt
je
fwait
or
sub
mov
mov
sub
mov
int
sub
cld
test
cmp
sarl
pop
call
xchg
clc
lcall
inc
and
push
test
pop
push
cmp
xchg
cld
add
iret
call
loopne
ret
jns
jnp
mov
ljmp
sbb
imul
sar
jg
stos
pop
add
push
mov
push
loope
xchg
or
and
xchg
dec
mov
sub
or
fists
sbb
xor
mov
mov
pop
xchg
cwtl
test
fiadds
out
into
xor
fnstenv
loop
push
mov
pop
and
sbb
xchg
add
jae
nop
sbb
lcall
pop
push
je
scas
or
dec
inc
cmp
jp
jno
jne
fimull
mov
mov
in
mov
push
lock
adc
jmp
push
mov
and
cpuid
and
jp
mov
and
sub
addr16
hlt
lds
xor
ljmp
jo
sub
aas
mov
repz
adc
and
popf
into
test
sub
sbb
and
dec
push
cmp
add
rcl
or
sbb
jmp
iret
pushl
gs
ret
adc
jmp
cwtl
inc
jne
pop
xchg
addr16
roll
into
cmpsl
mov
rolb
jb
hlt
and
icebp
mov
sub
out
inc
or
mov
cmp
push
jp
cli
sbb
stc
cmpsl
out
adc
std
nop
add
ja
and
mov
dec
push
mov
push
xor
test
mov
push
jnp
lcall
cmp
mov
xchg
lret
jecxz
add
xchg
sub
cmp
pop
dec
loopne
in
push
shlb
idivl
fcmovnb
popa
data16
and
mov
pop
adc
int
cmp
aad
lods
lea
lds
daa
push
lahf
ljmp
setbe
mov
into
mov
dec
adc
stc
xor
xchg
sahf
sbb
add
roll
or
in
mov
popa
shll
pop
mov
imul
bound
enter
sti
mov
add
imul
test
pusha
rcrl
sub
add
and
mov
lods
pop
enter
sti
das
sbb
cmpsb
inc
stc
dec
and
sbb
aas
enter
maskmovq
mull
aas
std
pop
fs
mov
inc
sbb
xchg
das
loop
jne
loop
out
aas
xchg
shl
data16
jne
lock
xlat
cmc
and
xorl
inc
pop
sub
pop
ret
movsl
adc
mov
data16
mov
mov
ficoml
cmp
lds
js
test
call
push
lods
imul
mov
and
push
call
faddl
push
notb
pop
ss
int
into
popf
adc
js
loopne
jae
and
icebp
rol
dec
dec
sti
xchg
movl
inc
push
stos
jnp
pusha
dec
push
mov
push
cmp
push
cmc
lds
shlb
test
mov
fcmove
sbb
dec
int3
jae,pn
push
sbb
sub
cs
sub
inc
jl
mov
jge
add
jbe
adc
ficoms
and
out
int
int3
pusha
setp
arpl
mov
test
wrmsr
verr
or
mov
nop
and
in
pusha
sbb
icebp
imul
mov
aas
lcall
mov
jae
lods
mov
xchg
mov
pusha
out
adc
push
daa
inc
jmp
push
jae
aam
add
pop
aam
repz
and
pop
inc
rcl
push
mov
jo
fiaddl
orl
mov
out
sti
loop
xor
int3
dec
ret
adc
outsb
mov
or
out
pop
and
mov
pop
popf
push
xchg
je
popf
inc
inc
and
movsl
shll
insl
jb
lods
dec
add
cwtl
jge
xchg
adc
stos
ljmp
mov
mov
add
mov
sbb
popl
rcrb
xor
outsl
jns
stos
lcall
mov
in
enter
in
std
mov
popa
sbb
mov
inc
clc
xor
pop
pop
cmp
mov
into
push
lret
lcall
das
repz
call
add
ds
scas
cs
call
andb
or
xor
xor
sbb
inc
outsb
dec
pop
in
pusha
sub
xchg
and
lcall
leave
pop
fcmovu
mov
stos
jbe
or
loopne
pcmpgtb
jle
hlt
lret
arpl
xchg
adcl
and
fdiv
xor
xchg
cmc
popf
loopne
incl
mov
push
jnp
mov
jl
ja
jno
mov
cmp
leave
push
mov
mov
adc
pop
adc
daa
aas
sub
and
mov
mov
std
adc
add
outsb
add
pop
mov
or
sbb
mov
add
sbb
sar
mov
mov
dec
mov
pop
jg
mov
jge
popa
ljmp
int
cmp
enter
sub
mov
adc
cld
xor
and
loopne
int
fsubr
mov
mov
jg
add
cltd
xchg
subl
cmpsl
or
dec
cmc
and
hlt
lahf
add
out
pop
adc
cmp
in
jbe
jmp
es
testb
mov
fists
cmpb
dec
loope
mov
das
and
notl
sbb
outsl
mov
or
je
in
mov
or
jmp
mov
scas
repnz
add
out
cld
decl
or
ss
lret
cmpsb
and
adc
sub
inc
cmp
sbb
push
push
rcrb
mov
addb
arpl
popf
int3
insl
or
rep
sub
lcall
int3
inc
pop
cmpsb
daa
pop
pop
ss
xchg
xchg
sarl
in
xchg
stos
stos
mov
push
mov
rorl
push
pop
decb
mov
add
in
jno
les
stos
movsb
insb
mov
push
mov
or
dec
inc
xor
xor
ficoml
sub
jl
mov
pop
fcmovbe
test
xchg
pop
or
adc
lcall
or
leave
aad
adc
cmp
cmpsb
popa
xchg
mov
bound
inc
std
sub
les
dec
sbb
test
scas
leave
movsl
repnz
repnz
roll
xor
imul
lods
sbb
lret
pusha
xor
lock
add
dec
xchg
dec
ljmp
int3
pop
jge
and
dec
in
lcall
fldt
push
popa
jbe
jge
mov
pop
lock
add
sbb
mov
jne
pushf
inc
fs
mov
dec
push
or
pop
xorb
inc
mov
test
adc
cmpsl
rcll
mov
int
inc
or
push
scas
mov
cmp
sub
sub
push
sbb
cmpsb
jmp
lock
pop
fdiv
fcomp
bnd
dec
mov
pop
mov
pushf
lds
outsb
shll
repz
cli
cmp
addl
pushf
shlb
outsl
shll
inc
pop
mov
sbb
je
lret
aam
arpl
xchg
nop
cmp
mov
cld
es
jnp
in
xor
rcpps
push
shlb
pop
ficompl
sbb
jb
leave
daa
and
inc
repz
ret
ja
scas
ljmp
mov
shlb
adc
stc
xchg
testb
cmp
add
mov
jbe
lock
aas
movsl
int3
jmp
ljmp
cs
int3
pop
cmp
pop
fldcw
das
outsb
inc
clc
jmp
test
mov
popa
dec
and
jle
in
or
xor
and
lods
pushf
xchg
mov
jmp
push
inc
fisttpl
or
sub
dec
fmul
les
movsl
mov
and
shrb
mov
setae
std
dec
mov
in
pop
rcll
sahf
mov
jle
mov
shr
enter
mov
add
insl
ja
pop
and
and
outsb
add
jecxz
in
mov
je
pop
icebp
jnp
jl
sub
adcb
inc
push
lret
or
cltd
int3
pop
test
pop
outsl
in
xor
mov
fidivrs
stc
mov
push
call
in
jo
sbbb
stos
addr16
aad
fisubrs
cmp
xchg
and
dec
jmp
loope
mov
jg
dec
leave
push
clc
icebp
push
into
pop
inc
sbb
mov
ljmp
js
dec
xor
inc
shll
push
push
and
add
ret
pop
movsb
push
jbe
int3
add
pop
xchg
cmp
cmp
daa
sub
repz
add
or
inc
je
outsb
xchg
mov
xor
add
lods
xor
aad
repz
pop
sub
xlat
push
adc
lcall
sbbl
xor
fwait
repnz
sarb
push
rcll
popf
addb
push
and
ret
pop
sbb
pop
xor
sbb
xorl
dec
cltd
imul
ljmp
sbb
mov
push
add
nop
xor
push
popf
xor
loopne
ret
std
jecxz
and
lahf
sbb
out
and
sti
lods
in
add
scas
xchg
pusha
pop
stos
mov
test
pop
xchg
jbe
mov
mov
shlb
inc
mov
mov
ds
dec
push
repz
cmp
jnp
xor
je,pn
cwtl
fs
lret
sub
mov
in
je
cmp
stos
adc
add
das
pusha
adc
test
test
pop
test
fiadds
int
push
pop
icebp
push
cli
inc
in
cmp
ret
nop
ret
pop
popa
mov
out
mov
lds
popa
mov
and
gs
mov
cltd
xchg
mov
xchg
jno
push
orb
mov
mov
xchg
hlt
shll
pop
mov
adc
cltd
mov
jbe
xchg
and
dec
mov
jnp
xchg
adc
jno
and
aam
mov
xchg
add
inc
lret
in
dec
mov
imul
fcoms
sub
xchg
shl
cmp
jp
jle
inc
sbb
jge
inc
aaa
mov
daa
es
mov
rolb
jg
mov
mov
jns
push
push
imul
sub
add
and
dec
mov
int3
dec
adcl
popf
ret
mov
add
popa
leave
pop
mov
or
out
push
loope
jbe
mov
in
push
mov
je
aas
ljmp
pop
ror
and
add
nop
loopne
imul
out
cmp
dec
es
mov
cmp
pop
aas
repnz
jb
xor
sub
xchg
into
xchg
test
imul
xor
xorb
cli
inc
xchg
int
push
mov
pop
test
pop
movsb
sbb
inc
push
adc
push
fisubrs
and
stos
adc
bound
ljmp
popa
add
mov
mov
or
jge
push
pusha
lods
popa
rclb
xchg
push
adc
jmp
nop
and
pop
jge
adcl
aam
aaa
mov
mov
adc
sarl
or
xchg
cmp
lds
or
jo
mov
loopne
inc
hlt
ljmp
cmp
cmc
or
notb
shlb
mov
pop
fstps
jmp
scas
sbb
pop
push
mov
aad
out
rcll
xor
rorl
clc
push
aam
clc
pop
outsl
inc
test
fwait
daa
and
sub
xor
xor
gs
push
mov
lcall
jno
or
adc
dec
divb
enter
dec
push
xchg
sub
scas
push
add
imul
mov
sub
adc
adc
xchg
mov
inc
clc
fnstcw
or
hlt
in
in
sbb
les
jle
or
adc
push
clc
hlt
loope
aas
cmp
lahf
lods
aam
bound
add
xchg
xor
or
adc
aas
push
jmp
push
ds
fs
and
mov
inc
adc
adc
in
aam
mov
or
into
pop
dec
jge
out
loope
push
or
sarl
into
sub
cmp
mov
sbb
jns
and
push
dec
enter
jae
rclb
pop
and
pusha
jp
in
jp
mov
jb
icebp
mov
pushf
jo
rorl
out
test
enter
aad
cwtl
iret
iret
xor
push
push
ficomps
add
push
push
mov
xchg
cld
mov
or
stos
xchg
xchg
movsb
sarl
stos
pop
sbb
push
or
aad
jbe
pop
in
lods
xlat
xor
jno
xor
movsb
add
xor
pop
add
adc
jnp
mov
pop
adc
into
js
or
scas
call
add
add
dec
pop
fucomi
jmp
lods
push
lock
mov
cmp
mov
add
push
enter
cmpsb
inc
cli
hlt
or
pop
addr16
xchg
mov
push
and
nop
and
mov
subb
cmp
sti
jo
push
lahf
xchg
enter
imul
mov
fisttpl
jl
xor
xchg
pusha
loop
popa
push
hlt
lcall
push
mov
jne
dec
hlt
fildll
xchg
xchg
jmp
pop
jmp
popl
push
pop
vpaddsw
lcall
clc
mov
jecxz
mov
rcrb
jne
popa
movl
sub
insl
pop
dec
testb
pop
loop
push
push
insb
push
and
push
psllw
cltd
std
out
cmpl
jecxz
jecxz
mov
aam
cmp
and
call
dec
jecxz
xchg
xchg
in
stos
lods
lea
push
mov
stc
pushf
xor
push
jb
outsb
test
out
jmp
fldl
sbb
sub
adc
adc
or
lock
mov
int
sbb
and
jo
mov
shl
xlat
mov
mov
divl
into
jnp
movsl
sti
jp
xchg
or
xchg
lds
cmc
inc
in
sahf
jp
push
dec
xchg
les
push
or
xchg
sub
cli
clc
pop
mov
cld
mov
std
pushf
bound
imul
ds
mov
or
add
pminub
dec
adc
outsb
jge
jo
xchg
ret
sbb
and
push
data16
or
out
add
lock
pop
adc
dec
push
lahf
inc
cli
mov
std
test
imul
adc
addr16
loopne
xchg
xchg
fldt
and
aaa
and
enter
ret
sub
dec
mov
mov
mov
and
push
cmpb
std
dec
dec
outsb
sahf
inc
inc
fdivl
je
xchg
int3
divb
push
and
ficoms
ds
test
leave
jns
bound
rcll
push
popa
out
sub
push
cltd
enter
scas
faddp
push
cmpsb
xor
shr
add
int3
push
mov
dec
mov
scas
pop
xor
pop
arpl
mov
nop
jnp
pop
add
push
icebp
inc
push
les
xchg
insl
lcall
loopne
sbb
pop
xchg
shlb
xor
into
ja
call
adc
fbstp
aas
mov
stc
jnp
clc
or
scas
outsb
pusha
mov
pop
popf
or
inc
pop
loope
push
ljmp
nop
test
sti
in
lea
sbb
sbb
imul
repnz
sub
mov
stc
mov
clc
and
hlt
cltd
shll
bswap
mov
sti
test
add
and
xor
add
insb
dec
or
pushf
xchg
inc
or
rcrb
pop
shl
das
loope
dec
imul
jno
cmp
fwait
inc
push
iret
ljmp
call
pop
inc
movsl
adcb
pop
and
fwait
jns
out
add
roll
dec
int
inc
push
push
cmp
dec
dec
mov
into
xor
xchg
popf
push
push
gs
lret
pop
inc
cwtl
pop
cmp
xor
cltd
cmp
lock
mov
sub
stc
lea
push
incl
arpl
push
sbbl
dec
mov
hlt
sub
mov
inc
lods
lret
mov
call
mov
loop
enter
mov
jb
lret
fistl
mov
stc
xchg
js
imul
iret
aaa
mov
push
mov
aam
jg
push
scas
imul
hlt
cmpsb
xor
mov
mov
or
out
popf
mov
mov
fisubrs
lods
pop
call
ret
out
push
adc
scas
testb
cmp
nop
les
pop
in
int3
stos
out
fsubrs
mov
sbb
scas
imul
jb
out
fbld
imul
mov
and
mov
bound
lock
cmp
pop
xor
insl
xchg
lods
xor
test
push
inc
outsb
cmp
dec
stos
pop
xor
mov
movsb
dec
fstl
xlat
subb
pushf
sahf
ljmp
push
test
lea
lcall
push
aaa
cmp
test
and
push
pop
pop
data16
and
aas
ljmp
sbb
into
ds
pop
andb
imul
enter
testl
ficomps
jp
fdiv
xorl
lods
fldt
add
sub
xor
push
mov
jge
mov
test
mov
movsl
js
pop
pushf
jmp
add
sub
cmp
xlat
sbb
xchg
sarb
cmc
mov
rcrl
dec
addr16
mov
aas
loope
xor
leave
in
scas
aas
add
push
jle
mov
pop
ficoms
faddl
cs
inc
mov
jnp
sub
iret
mov
sti
rorl
enter
add
aad
popf
loope
add
mov
and
ja
jmp
xor
sub
fldt
jg
sub
call
test
or
adc
mov
dec
out
mov
inc
jne
sub
cmp
mov
leave
adc
lcall
push
popa
sbb
and
mov
sub
dec
outsb
mov
ja
and
negl
xor
sub
mov
cmp
xlat
aaa
movsl
cmp
aas
push
cmp
cltd
mov
sbb
lods
mov
mov
and
into
sbb
pusha
cltd
or
mov
push
stos
in
push
cmp
mulb
aam
mov
call
popl
mov
jbe
int
mov
ja
push
xor
sti
mov
test
mov
xchg
xchg
and
fcoms
rcll
shl
loopne
ret
fsubr
inc
pop
pop
mov
cmp
cmpsl
gs
sub
and
and
rorb
in
xor
nop
arpl
jno
pop
sbb
jmp
dec
mov
movsl
jb
hlt
pop
mov
sbb
mov
sarl
inc
jnp
js
std
add
add
add
sbb
push
or
mov
cmp
mov
or
xchg
dec
or
adc
xchg
mov
lahf
movsl
aam
cmpsl
mov
mov
sbb
std
neg
out
das
outsl
lods
jp
mov
push
lds
xchg
dec
das
and
cmp
imul
mov
mov
push
jne
mov
out
push
lods
lret
sub
xchg
jne
pop
aas
fwait
jge
pop
int3
sti
add
repz
cmp
in
andl
imul
mov
xor
scas
jmpw
scas
cmp
test
mov
xor
sub
push
mov
cmc
or
mov
cmp
fdivr
and
call
dec
sbb
mov
mov
inc
jbe
jne
test
adc
mov
in
cli
push
sub
sarl
sbb
int
aas
jecxz
dec
insb
cmp
outsb
fnclex
mov
jae
ss
repz
ret
int
or
cld
pop
lds
mov
mov
jnp
xchg
pop
dec
xor
lret
in
jbe
jg
pop
bound
ret
fadds
jne
clc
mov
mov
leave
push
mov
cwtl
xor
loope
bound
jno
cmpsl
lret
fcomip
pop
les
push
test
scas
add
dec
cmp
mov
mov
movl
daa
sub
inc
test
sub
or
sbb
ret
cmp
repnz
mov
rcrb
cs
lea
push
add
mov
mov
pop
loope
mov
in
and
push
fstps
xchg
mov
stc
loopne
mov
inc
push
dec
dec
out
mov
jnp
ss
xor
lods
push
rol
addr16
or
repz
dec
cmp
adc
mov
mov
aad
xchg
sub
loopne
pop
pop
idivb
je
xchg
jmp
add
sub
lds
out
push
xor
pop
mov
dec
sub
ret
test
and
pop
dec
je
mov
scas
and
add
testl
xor
inc
dec
xchg
in
rcl
aad
xor
ja
jno
or
cmp
xchg
adc
add
xchg
push
jnp
movsw
js
dec
ret
call
add
cmp
gs
pushf
mov
lret
outsl
mov
xchg
xchg
mov
std
dec
pop
out
pop
mov
sbb
or
es
in
nop
hlt
push
out
cwtl
es
mov
or
adc
push
xor
ret
icebp
pop
notl
mov
dec
clc
pop
mov
ret
enter
mov
or
andb
or
sti
call
and
inc
cmp
xchg
in
and
in
mov
push
jg
pop
in
add
aad
repnz
xlat
nop
nop
mov
sub
into
lds
in
xchg
test
shrb
aad
addr16
jns
jecxz
add
pop
sbb
je
dec
aad
fcmovnu
mov
lret
repz
popa
jns
hlt
inc
push
and
ss
shll
xchg
sbb
xchg
call
inc
addr16
adc
sub
jge
ret
les
in
jns
push
loop
cmpsl
push
repnz
shll
call
pusha
cmp
cmp
sbb
adc
push
dec
ret
movsb
push
stos
sahf
push
push
orb
insl
fbld
adc
hlt
mov
cwtl
inc
sub
mov
cmp
adc
pop
xor
jnp
cmp
scas
es
ja
movsl
push
cmpsb
xchg
cmc
xchg
dec
filds
out
in
and
repnz
dec
iret
lods
iret
out
mov
mov
mov
adc
push
popa
sub
das
filds
adc
push
mov
or
in
enter
mov
pop
push
jbe
or
aaa
inc
or
mov
clc
fwait
sbb
mov
fldlg2
inc
leave
jae
outsl
mov
xor
xchg
or
add
stos
sub
shlb
sahf
enter
pushf
imul
mov
fsubrl
adc
jno
gs
push
mov
jb
push
mov
adc
jmp
xchg
repnz
in
jmp
adc
in
stc
sub
cmp
sbb
add
aaa
sbb
inc
mov
test
bound
adc
and
shrb
inc
push
cmp
and
incl
mov
movsl
xor
movsb
push
outsl
pop
adc
loopne
sub
loop
rorb
xchg
cmp
mov
pop
cld
hlt
sbb
clc
jae
dec
dec
jnp
or
insl
fmull
pop
arpl
pop
divl
loopne
mov
popa
xor
or
cmp
loope
rol
pop
xor
out
and
xor
or
mov
shr
mov
xchg
and
push
cli
repz
xchg
cmp
cmp
cmp
cmp
xchg
sub
add
mov
cld
insb
xor
pop
inc
add
adc
pop
and
in
xlat
sub
sub
mov
aad
inc
fisttps
cmpsl
cmpsb
adc
mov
vshufps
dec
dec
inc
insl
mov
aas
xchg
mov
cltd
lret
cmp
popfw
jle
mov
arpl
jecxz
sub
cmp
clc
mov
jbe
shll
fwait
push
xchg
cmp
insl
insb
dec
pop
iret
add
enter
cld
and
or
push
xor
mov
int3
in
cmc
mov
xchg
aas
daa
push
xor
scas
lret
leave
mov
jl
sub
test
mov
fistl
lcall
or
dec
fcom
sbb
push
pop
aas
inc
mov
shrl
aas
cmc
xor
inc
xchg
fwait
lahf
jb
lcall
daa
dec
cmp
mov
mov
incl
or
decb
inc
pop
push
imul
test
and
iret
int
mov
mov
data16
mov
pop
sahf
scas
xor
xchg
insl
out
out
inc
mov
icebp
loop
adc
lcall
lock
lock
es
lea
inc
mov
cmpsb
fs
mov
xor
sti
cmp
in
inc
lods
add
sbb
xor
aad
sbb
inc
pop
jno
jle
and
ds
in
mov
mov
or
xchg
aaa
pop
fwait
stos
jns
out
sub
inc
or
pop
pop
daa
cmp
push
inc
fwait
shl
cmpsl
add
repz
ljmp
add
mov
roll
stos
jl
cmp
andl
push
rcrl
push
testl
jmp
jge
pop
jbe
test
sbb
jno
push
and
pop
push
pop
nopl
rclb
or
pop
ja
push
int
mov
dec
idivb
stc
add
lret
in
cmp
mov
lods
mov
mov
mov
dec
loop
mov
dec
lret
subl
and
cld
loop
mov
ljmp
xchg
dec
sub
inc
jo,pn
or
clc
iret
xchg
std
xchg
or
mov
pop
jb
push
adc
jmp
fwait
mov
mov
out
sbb
adc
test
xchg
inc
xor
jo
pop
fs
cs
enter
rcrl
xor
aad
sub
aaa
das
addr16
out
xor
pop
mov
lcall
shrl
xor
mov
lods
stos
sbb
push
push
cmpsb
jne
sbb
mov
fs
in
shl
iret
std
sbb
pop
sbb
xchg
icebp
int
cmp
and
mov
mov
test
ficoml
repz
jge
rorb
cmc
adc
outsb
mov
gs
arpl
loop
imul
aam
sbb
adc
insl
imul
aas
mov
jns
scas
ret
cmc
xorl
sarl
cmpsb
enter
ror
push
xchg
xor
pop
mov
adc
mov
nop
roll
notb
mov
enter
sbb
test
push
mov
pop
jecxz
lret
jle
std
push
cmp
hlt
fcompl
inc
sub
out
pop
sub
repnz
dec
cmp
ljmp
int
pop
rclb
ljmp
sti
inc
or
and
adc
add
dec
lods
mov
jae
in
jecxz
add
inc
ljmp
or
lret
cmpl
movsl
sbb
cmc
jl
out
adc
push
adc
testb
pushf
out
inc
pop
push
mov
fsubr
out
mov
push
xor
mov
push
sbb
out
cs
and
movsl
jmp
sub
mov
adc
xchg
add
sbb
xchg
cmp
dec
in
xchg
mov
or
in
dec
mov
test
pop
sub
or
inc
sahf
inc
shrb
mov
mov
mov
push
pop
sbb
in
test
test
or
mov
cmpsl
inc
stc
mov
add
mov
lods
sub
ljmp
rolb
fwait
adc
and
iret
out
sbb
in
repz
std
ss
pop
aaa
imul
pop
mov
push
push
roll
cmp
add
rcrl
ret
aad
rorb
sub
insl
sbb
test
pushf
lods
inc
subl
out
pop
mov
add
xchg
xchg
outsl
sub
movsb
int3
cmp
xlat
sub
pop
cmp
xchg
xor
fs
insb
add
std
fsts
lret
in
data16
fdivrl
cli
dec
sub
js
add
and
stc
pusha
imull
flds
movsb
addr16
jp
stos
xchg
jmp
and
gs
loop
cmpsb
gs
mov
adcl
xor
into
xchg
rclb
lret
mov
icebp
scas
clc
cs
pop
pop
jl
pushf
sahf
call
daa
les
mov
mov
add
adc
ret
xlat
push
gs
ljmp
enter
mov
aad
fs
es
and
dec
ficoml
in
lret
xorb
xor
jmp
daa
xchg
es
and
and
fstpt
test
xlat
arpl
dec
adc
sbb
popa
stos
sub
cmp
sbb
aas
je
cmp
sbb
xchg
push
in
mov
adc
mov
ljmp
mov
pop
rcl
jno
es
mov
dec
push
arpl
mov
addl
ret
fcom
mov
sbb
aas
fcomps
stc
push
js
int
sbb
lods
cmpsb
call
sub
into
inc
cmp
pop
cli
adc
lcall
and
push
sbb
xor
cltd
xor
in
js
push
orb
or
mov
push
xchg
gs
xchg
in
mov
xor
frstor
jo
sub
mov
push
mov
cwtl
and
sbb
cmovl
scas
jno
dec
mov
sbb
pushf
cmp
gs
cmp
jo
in
jmp
adc
adc
mov
push
fwait
dec
mov
or
fucomp
cmpsl
mov
leave
jl
push
adc
mulb
push
and
fidivl
out
adc
repnz
in
push
cmpb
jno
cmp
lahf
or
ds
roll
movsl
inc
sbb
jae
js
mov
decl
cmc
xor
repz
cld
mov
and
insb
out
lods
fcomi
fisttpl
scas
movb
rorb
jge
gs
dec
loopne
mov
lret
jl
insl
aam
je
and
sub
jne
mov
pop
stc
rclb
push
add
push
loope
mov
cmpb
adc
or
xchg
rep
pop
out
mov
fwait
inc
insl
stos
sarl
sub
out
data16
mov
leave
mov
xor
add
stos
xor
lcall
xchg
stc
push
adc
cmpsb
push
into
cmp
pop
push
sub
stos
mov
addr16
mov
ret
dec
mov
push
cmp
pushf
imul
pop
mov
dec
push
movsb
jo
imul
push
add
xor
push
xchg
push
jl
cmp
loop
incb
adc
mov
gs
pop
or
push
cmp
lds
cld
and
ret
jo
xchg
into
xchg
xor
dec
rcr
jl
cmp
ror
mov
jle
cwtl
xor
lds
add
pop
in
aas
out
dec
out
mov
sbb
cmp
jbe
fdiv
pop
xchg
in
stos
sti
in
test
cltd
mov
das
iret
jnp
mov
jmp
inc
out
mov
orb
rcrb
sbb
adc
sub
lcall
mov
mov
cmovg
int3
clc
lea
leave
mov
test
inc
add
or
jl
dec
mov
jl
test
push
pop
jae
inc
inc
js
ja
or
sbb
popa
arpl
lret
add
aam
mov
stc
xchg
inc
push
or
insb
je
cld
dec
stos
out
push
jp
loope
insb
popl
hlt
aam
pop
cmp
xchg
je
rcr
scas
pushf
pop
xchg
jmp
inc
shll
lea
xchg
push
xchg
jns
nop
pop
dec
inc
lock
outsb
jecxz
int
scas
les
add
aam
movsl
movsb
xor
into
pop
xchg
push
dec
inc
stc
movsl
cmp
ljmp
mov
inc
gs
dec
insl
repz
scas
and
popf
push
mov
loop
mov
scas
push
cltd
sbb
cmp
mov
mov
test
or
add
adcb
adc
dec
and
cmp
in
cmp
shrd
push
lahf
or
mov
mov
lods
sub
mov
xchg
lret
lret
stos
mov
dec
sbb
add
cmp
push
fists
adc
adcb
mov
inc
inc
sbb
adc
enter
inc
je
and
cmpsb
push
mov
lret
push
xchg
cmp
into
aam
and
dec
jbe
xchg
or
or
test
test
xchg
pop
rcl
out
push
or
jg
jns
add
test
jb
sbb
pop
into
pop
dec
and
mov
pop
insb
pop
test
mov
fmull
movsb
rcrl
clc
and
test
dec
sbbl
add
andb
push
out
or
dec
xor
sahf
jno
sti
stos
int
fs
mov
je
xchg
sahf
and
xchg
inc
adc
adc
jg
scas
mov
das
adc
push
lds
or
aas
push
jp
xor
add
mov
push
mov
lds
mov
nop
add
addr16
repnz
and
stos
int3
dec
aad
push
cmc
fidivrl
or
ret
mov
sbb
sub
in
jae
fsubrp
fcomp
push
fimull
rcrl
mov
mov
and
mov
scas
gs
loopne
lock
lds
fcompl
xchg
enter
ja
jecxz
jle
xchg
push
sub
mov
pop
sbb
jmp
loopne
and
inc
movsl
mov
and
mov
sbb
add
adc
or
ja
dec
rclb
imul
clc
inc
out
sbb
scas
mov
js
stc
dec
stos
dec
std
inc
add
pop
ret
subb
movb
jl
out
int3
xor
out
push
xor
add
stos
push
mov
cmp
sub
test
inc
mov
adc
rcrb
push
daa
cmp
bound
cmp
xor
rolb
jle
test
inc
mov
jnp
imul
mov
loope
mov
push
and
out
loope
leave
pusha
stos
js
mov
mov
push
call
ja
shll
stos
push
shl
subb
push
popa
imul
push
aaa
dec
cmp
xchg
mov
add
ds
push
enter
cli
dec
xor
xchg
inc
test
int
shrb
arpl
mov
stos
bound
in
cmp
pusha
dec
fmulp
data16
dec
sbb
mov
or
test
and
fiadds
and
nop
jge
stos
jge
push
xor
pop
jmp
std
into
js
xchg
mov
jne
sub
icebp
lcall
xchg
aas
pop
mov
cmpsl
mov
jecxz
xor
mov
dec
fucomip
sbb
mov
jne
and
mov
or
cwtl
sbb
enter
xor
sub
mul
data16
pop
dec
adc
push
ja
cmp
ja
lods
aaa
mov
mov
push
push
cld
ja
push
ret
or
in
xchg
gs
sub
movsl
sti
and
push
inc
gs
es
jp
hlt
sahf
xor
jb
js
int3
loop
in
addr16
or
lock
pop
adc
mov
arpl
mov
out
pop
sub
mov
mov
scas
mov
sub
fwait
cmp
jp
inc
add
pop
add
es
jp
pop
data16
mov
xor
lods
not
mov
es
rcr
cmp
xor
test
fld
enter
lret
jge
dec
push
mov
mov
dec
fwait
cmpsb
xchg
push
jle
jnp
sbb
aam
fidivl
adc
pushf
lret
loopne
mov
pop
sarb
mov
xlat
mov
pop
cmp
pop
imul
xchg
pop
in
inc
cwtl
mov
push
lods
xchg
insb
loope
xchg
pop
jl
lret
add
sub
adc
pop
or
jge
negl
xchg
adc
xchg
xchg
fidivs
sahf
pushf
test
sub
fs
mov
jne
hlt
cmp
xor
adc
mov
fisttps
add
xchg
shrl
sub
das
idiv
aaa
rcll
jo
daa
pop
dec
xchg
mov
add
add
pushf
test
pushf
jge
fisttps
pop
or
enter
movsl
inc
mov
adcb
cltd
pusha
lock
repnz
lock
fwait
mov
xlat
aas
fimull
pop
xor
xor
dec
xor
fsubrs
fbstp
adcl
stos
imul
negb
inc
push
and
fbstp
pop
stc
les
mov
les
push
ds
mov
fsubrl
add
jo
fsubl
pop
xorl
xor
sbb
cltd
sub
dec
ret
adc
repz
popa
add
test
leave
test
push
xchg
mov
negb
mov
cmp
out
lret
pop
xchg
adc
push
inc
and
test
mov
dec
es
xchg
sub
hlt
fld
mov
insl
std
or
mov
lret
sahf
xor
xor
insb
push
xchg
inc
jg
jmp
mov
in
xchg
and
in
fimuls
repz
mov
ja
cmp
fimuls
and
jp
lea
fisttps
pop
mov
cmp
das
mov
data16
sar
xchg
jo
movsl
cmc
cmp
xor
int
xchg
pop
rcr
out
lcall
cmp
push
add
add
xor
jbe
push
adc
xchg
jo
pop
mov
dec
les
mov
imul
push
nop
cmp
aas
lcall
arpl
xor
cmp
sub
imul
jle
lods
jns
fiaddl
orb
and
and
add
cmp
xlat
xchg
dec
je
cld
jns
aad
iret
push
adc
dec
decb
ficomps
jb
and
icebp
lea
inc
and
gs
pop
and
add
jecxz
sub
mov
int
adc
into
adc
cltd
pop
push
jmp
mov
cmp
lret
push
dec
out
aad
lahf
addr16
aaa
out
out
jnp
dec
and
rorb
and
test
std
data16
in
in
inc
sub
incl
test
outsl
aad
out
sbb
test
push
dec
push
cmpsb
cmpsb
sub
test
iret
movsl
dec
push
mov
aas
cmp
loopne
ret
mov
insl
insl
arpl
xchg
push
out
add
push
imul
fwait
push
sti
pop
xor
andl
add
cmp
inc
outsb
popf
dec
mov
popf
mov
adc
push
xor
fcmovne
cmp
xor
pop
xlat
mov
adc
xor
inc
jbe
mov
inc
filds
rclb
push
sub
out
sbb
adc
out
cs
shlb
sbb
pop
cmpb
les
or
mov
ds
mov
adc
jle
cltd
lret
cli
mov
adc
cmpsb
mov
ja
xor
push
testl
imul
push
and
cmpsb
and
aaa
dec
stos
loopne
xchg
mov
pop
dec
outsl
inc
mov
sahf
aam
pushl
scas
xchg
xchg
mov
repz
scas
mov
out
ss
sub
mov
sbb
notb
jae
test
icebp
mov
adcl
sarb
push
stc
mov
sbb
fcmovb
andb
pop
cmp
push
ljmp
imul
jmp
int
fimuls
pushf
in
negl
add
bound
push
and
or
in
outsl
cli
out
xchg
cltd
adc
cltd
add
fistpll
adc
enter
scas
in
or
popf
mov
or
lods
xlat
mov
sbb
cmpsl
push
lret
inc
hlt
js
scas
and
push
cmp
jmp
push
or
cmp
bound
data16
adc
mov
lret
test
pusha
add
cmpl
test
in
test
xchg
repnz
cmc
cmp
xor
and
imul
loopne
xchg
cmp
ja
sti
mov
add
adc
xchg
or
add
dec
jp
and
lahf
dec
das
push
add
paddq
imull
lods
ret
jb
fcom
seto
lock
adc
int3
mov
ret
add
stos
nop
imul
cmpsb
pop
in
add
inc
stos
ds
insl
or
arpl
arpl
movsb
mov
mov
scas
fdivrl
insb
lock
lret
data16
pop
lret
xchg
daa
movsb
xlat
inc
xchg
int
inc
inc
inc
and
mov
pop
stos
icebp
push
mov
jbe
icebp
andb
ljmp
aas
repnz
ljmp
testb
in
sub
sub
loope
stc
xchg
sub
ficompl
ds
add
addr16
jbe
adc
mov
add
addr16
fsubrs
mov
mov
inc
andb
xchg
sti
scas
mov
sub
adc
scas
cld
and
inc
add
mov
inc
in
jns
push
xchg
mov
int
push
test
dec
push
push
xlat
mov
dec
sub
pop
sbb
jo
nop
cmp
add
or
sub
test
gs
jmp
pop
xchg
dec
fcmovu
pushf
ljmp
sbb
cmpsl
icebp
mov
pop
xor
cmp
cmp
mov
les
adc
lock
jp
fwait
je
cmp
cltd
xchg
fisubl
arpl
sub
fcmovu
xchg
xchg
iret
fisubl
lods
fsts
adc
out
int3
mov
repnz
sbb
mov
pop
adc
xchg
loope
cmp
repnz
repz
in
pop
dec
inc
pop
mov
pop
in
fst
stos
inc
je
and
pusha
hlt
and
add
negl
mov
aam
fucomi
ret
cmpb
repz
nop
adc
std
addr16
pop
cmp
mov
in
dec
aaa
push
mov
and
loope
dec
gs
fs
xchg
cmp
pop
jp
lret
loopne
dec
mov
outsl
lods
loop
std
dec
into
andl
push
dec
sbb
sbb
sarl
scas
or
adc
int
flds
loope
mov
mov
pop
mov
loopne
lret
outsl
push
xor
push
lods
cmp
dec
xor
adc
std
pop
cli
daa
fdivp
iret
push
lods
mov
lret
jnp
pop
repnz
out
test
int3
mov
outsl
scas
xor
xchg
push
mov
mov
mov
xorl
mov
outsb
gs
mov
dec
cmpsl
sub
mov
out
fwait
and
cmp
jge
loopne
shrl
popf
jl,pn
lret
or
ss
hlt
add
idivl
jmp
in
sub
and
daa
cmp
fwait
enter
hlt
and
js
std
loop
movsb
jae
inc
push
mov
scas
sahf
cltd
aam
ljmp
icebp
xor
adc
mov
lds
pop
hlt
ja
mov
test
pop
sti
stos
imul
mov
and
pushf
das
sbb
adc
adc
out
sbb
popf
sub
adc
mov
lahf
sahf
cmc
xchg
mov
adc
mov
mov
push
jns
xor
icebp
dec
sti
aaa
fisubs
pop
lods
rcr
repnz
push
les
lahf
cwtl
icebp
or
pop
mov
ret
in
sbb
dec
test
filds
add
enter
or
insb
hlt
lret
gs
cmp
aaa
jns
and
pop
or
decb
cmpsb
outsb
or
mov
cmp
fdivs
in
fistps
loop
pushf
add
mov
push
mov
mov
mov
loop
jp
lods
adc
lock
jmp
orb
leave
sub
xchg
test
mov
jns
mov
sahf
push
out
mov
fcmovbe
add
xchg
je
add
icebp
sbb
repz
xchg
cmpsb
loop
cli
pusha
test
xlat
stos
cmp
popa
fnstsw
pop
sarb
inc
das
jp
or
cmc
scas
and
push
cmpsb
mov
pushf
add
jbe
outsl
addr16
fstps
xlat
nopl
adc
adc
aam
scas
xchg
mov
inc
inc
mov
sti
xchg
sub
mov
shrl
je
lcall
mov
xchg
adc
mov
inc
mov
jg
mov
or
mov
add
mov
das
cmc
hlt
sbb
jge
cwtl
sbb
mov
push
or
ss
ljmp
in
push
shlb
jae
int3
ret
scas
fldl
add
fsts
lds
cs
adc
test
mov
pop
xor
xor
rcr
pushf
dec
sahf
xchg
shll
out
stos
dec
push
in
cs
cli
cs
fwait
add
jmp
sahf
subb
scas
xor
int
test
sbb
add
ds
data16
jns
js
cltd
andb
jnp
les
nop
bound
jle
xor
gs
leave
movmskps
and
xor
mov
outsl
js
rcrb
and
mov
dec
jmp
and
adc
daa
or
jne
pop
data16
jg
pop
in
hlt
add
add
movsl
xchg
or
mov
hlt
call
fcoms
pop
movsl
xor
stc
xor
inc
jbe
inc
xchg
cmp
pushf
or
insb
stos
mov
and
movsb
jb
xchg
aas
mov
ret
repz
jp
loop
inc
stc
inc
jo
mov
jae
push
xchg
mov
in
cmp
ds
les
in
rcrb
and
fnstcw
mov
pop
xorb
jp
cmp
xor
imul
add
iret
mov
push
mov
leave
mov
dec
dec
cmp
cmp
ficoms
pop
sub
push
pop
ss
jae
test
fistpl
sbb
cwtl
jmp
out
repnz
jo
int
push
cwtl
dec
popa
fldt
lds
loopne
in
pop
ds
dec
push
int
cmp
mov
les
aam
mov
repnz
dec
xlat
clc
loope
push
imul
psllq
movsl
hlt
lret
dec
cmpsb
sub
inc
in
cltd
push
sahf
cmp
dec
xor
mov
popl
call
stos
jb
jns
mov
mov
sbb
add
fnstsw
ud1
push
jle
movsl
subl
push
in
fs
fstps
or
inc
push
in
mov
sub
movsl
or
mov
fisttps
shll
dec
out
test
shl
lret
mov
mov
loop
add
push
std
fisubl
mov
lret
iret
cmp
add
dec
es
shl
icebp
repnz
jl
js
sbb
int
aas
aad
sbb
sbb
outsl
sbb
fistpl
mov
icebp
and
jne
sub
pop
das
popfw
ss
inc
mov
sbbb
jnp
cmp
scas
xor
out
lds
js
inc
imul
fmul
mov
lret
es
enter
add
cltd
stos
rorl
xorl
notl
inc
pop
not
xor
outsb
cmp
cmp
insl
dec
out
mull
mov
jl
xor
sub
inc
aas
les
dec
mov
repnz
mov
mov
inc
dec
fidivrs
mov
outsl
and
and
jb
sarb
push
pushf
rcll
xchg
mov
push
mov
cmp
rcrb
rorl
fldt
negb
cltd
call
sub
fidivs
lret
xor
int3
sub
bnd
clc
xchg
lcall
push
cs
jge
int
movsb
fisttps
std
jmp
bound
mov
xor
xor
mov
sub
insb
sub
repz
mov
rolb
dec
jnp
mov
mov
outsl
ss
xchg
lods
xchg
jge
xor
inc
jecxz
rol
push
cs
jae
mov
call
cmc
mov
ficompl
clc
outsb
add
inc
or
aam
sub
mov
add
lret
jae
mov
scas
popa
cmp
pop
js
dec
loopne
outsl
jne
mov
inc
or
fucomip
addr16
es
je
add
pop
xchg
sarb
xchg
mov
pop
mov
xchg
arpl
lods
dec
in
out
mov
adc
lods
daa
cmp
mov
lock
mov
mov
mov
loopne
push
xsaves
shlb
inc
mov
ds
mov
faddl
push
cltd
xchg
or
dec
cs
imul
in
loopne
outsl
pop
pop
or
dec
fs
jne
fcoml
xchg
rorb
cmp
lods
clc
add
ffree
add
aad
jb
cmp
inc
mov
gs
jecxz
mov
sbb
pop
push
mov
ret
and
sahf
and
push
rcrl
xor
sbb
mov
cmpl
imul
out
mov
mov
add
mov
dec
call
popl
movsb
fdivrs
insb
aaa
aam
repnz
lret
jns
push
mov
lods
sub
outsb
lret
popa
xchg
shlb
jp
mov
loopne
xorb
in
aad
mov
lcall
mov
bound
xor
jb
mov
xchg
loopne
xor
dec
call
pop
sub
std
pop
or
in
aad
lock
or
and
sbb
sbb
sbb
push
cmp
orl
add
add
mov
in
mov
xchg
mov
cmp
pop
frstor
adcl
dec
sbb
lea
rcl
shlb
lods
int
mov
outsl
scas
in
mov
test
mov
cmpsb
fmulp
xchg
mov
pop
movsl
mov
xchg
mov
fistpll
insb
push
test
cmpb
sbb
jl
lahf
push
loop
pop
jae
mov
xor
iret
cmpl
subb
inc
push
and
shll
ret
pop
fstpt
cmp
loope
imul
pop
jmp
adc
icebp
in
add
addr16
mov
lods
fs
sub
adc
fisttpll
jecxz
cmp
fmull
mov
stc
stc
ds
fstpt
movsb
sub
mov
pusha
std
xchg
inc
add
incl
ljmp
mov
or
stc
dec
sbb
dec
jae
inc
jecxz
test
inc
ja
fdivl
mov
enter
mov
stc
jg
dec
mov
xchg
orb
cwtl
fcom
lahf
aam
cld
aad
dec
mov
push
jb
jno
testl
lods
dec
fldl
aad
js
ljmp
gs
xlat
shll
xor
mov
xchg
xchg
aaa
fimuls
mov
out
out
jne
jb
lea
inc
sahf
adc
inc
enter
mov
xor
xchg
sbb
push
dec
mov
mov
int
push
es
inc
sbb
test
pop
fists
xlat
push
mov
dec
xor
sub
into
sbb
es
sub
lods
adc
push
in
pop
lock
call
loopne
rorl
test
fmuls
dec
or
out
jno
mov
cs
sbb
mov
cltd
xor
xchg
push
jne
xchg
sbb
or
jo
decb
ljmp
sbb
stos
jle
dec
cmp
cli
and
bound
jae
add
sub
inc
lcall
jbe
xchg
fcompp
imul
je
sbb
ljmp
mov
daa
and
xor
or
fadds
sbb
and
cld
leave
xchg
pop
xlat
fs
loopne
popa
hlt
mov
insb
repnz
cmc
into
leave
xor
mov
imul
bound
repz
dec
xchg
push
gs
shl
jno
stc
fcomps
imul
jae
cmp
and
push
movsb
int
jns
pusha
test
jmp
mov
push
mov
cmc
and
mov
int3
and
or
aaa
cmp
out
ret
xor
insb
jns
int3
sub
xchg
bound
or
and
xchg
addr16
insl
in
sub
mov
mov
mov
jp
insb
jge
add
mov
dec
call
jb
mov
sbb
clc
out
xchg
jl
push
sbb
sbb
nop
xor
inc
inc
jecxz
fstl
push
into
xor
stos
push
addr16
mov
jae
nop
jb
icebp
or
or
adc
nop
adc
sbb
dec
inc
int
test
je
pop
pop
pushf
push
sbb
insb
add
cmc
bsr
fsubr
outsl
cmpsl
jg
int
sub
push
pusha
pushf
pop
mov
rorb
jb
jg
cs
inc
mov
test
fcomp
mov
aaa
push
or
xchg
sub
cmpsb
add
xchg
shll
cltd
arpl
mov
xchg
ss
jns
dec
push
cmp
imul
and
les
jecxz
jle
aad
or
leave
jmp
inc
push
scas
je
add
mov
fstps
sbb
add
adc
das
sub
inc
and
arpl
adc
xor
movb
lods
jl
add
xchg
popf
pusha
push
pop
jno
into
lods
hlt
mulb
push
jl
sbb
inc
jp
mov
pop
fcomps
adc
sbb
in
jp
adc
mov
mov
mov
fldcw
cmpsl
sbb
jb
mov
fsts
dec
pop
in
dec
push
push
ret
mov
scas
insb
push
dec
cmp
cld
lds
or
inc
xchg
mov
cmp
dec
fs
iret
stos
mov
fstpt
jp
es
sti
jge
test
adc
stos
adc
mov
pop
sbb
pushf
push
jge
movsb
jb
rclb
cs
out
and
mov
sbb
out
std
xchg
aad
lods
and
or
jmp
insb
hlt
jecxz
jne
xor
