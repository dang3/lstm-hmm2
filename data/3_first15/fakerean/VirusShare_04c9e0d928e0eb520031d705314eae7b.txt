mov
push
push
mov
push
mov
mov
shl
mov
and
cmp
jne
add
sub
jmp
mov
sub
xor
mov
inc
rol
add
cmp
jl
xor
pop
xor
pop
inc
pop
ret
push
mov
push
call
mov
or
pop
ret
push
mov
push
push
xor
push
push
push
push
call
cmp
je
xor
pop
leave
ret
mov
push
push
call
cmp
je
push
push
call
cmp
jne
mov
lea
push
mov
and
push
mov
sub
push
push
call
call
mov
call
push
call
int3
int3
int3
jns
sub
int3
int3
int3
int3
int3
int3
int3
int3
mov
decl
add
add
mov
mov
incl
add
add
addl
add
mov
jmp
add
add
andl
call
add
add
lea
mov
addl
add
mov
mov
test
mov
and
pop
mov
dec
bound
and
dec
add
add
adc
dec
test
add
test
add
addb
and
sbb
add
adc
test
aad
add
mov
lea
pop
mov
add
add
add
shlb
inc
sub
or
add
je
dec
inc
inc
mov
and
dec
mov
adcb
add
mov
shlb
dec
adc
test
enter
mov
add
cmpl
mov
mov
pop
dec
int3
les
xor
mov
push
and
mov
dec
dec
dec
add
and
int3
add
inc
mov
push
mov
int3
or
inc
dec
and
dec
dec
mov
int3
int3
add
sub
add
add
int3
int3
int3
mov
in
int3
dec
int3
ret
mov
int3
int3
and
les
or
dec
add
xor
dec
mov
orl
add
int3
dec
or
and
int3
in
mov
dec
cmp
orl
cmp
sbb
int3
dec
mov
add
and
sbb
pop
and
call
cs
ret
int3
dec
int3
inc
inc
inc
and
call
push
int3
dec
dec
push
int3
and
add
int3
dec
mov
sub
xchg
int3
int3
int3
int3
add
mov
dec
dec
int3
int3
int3
sbb
in
add
testb
dec
int3
int3
int3
int3
int3
mov
ljmp
pop
int3
int3
int3
call
in
int3
pop
int3
decb
dec
int3
int3
call
cli
call
adc
add
int3
int3
movsl
int3
decl
int3
inc
test
and
int3
mov
push
int3
addl
and
mov
push
test
inc
inc
and
and
jl
incl
pusha
inc
add
mov
add
nop
enter
andb
adc
mov
dec
mov
add
add
mov
dec
orl
dec
inc
push
add
add
mov
call
add
and
add
rorl
dec
int3
add
and
mov
dec
and
inc
and
dec
dec
mov
js
add
dec
movl
mov
mov
push
dec
and
dec
test
dec
mov
add
and
dec
dec
dec
add
add
add
roll
inc
jb
incl
cmp
and
mov
dec
jo
add
test
add
call
in
mov
dec
sbb
dec
mov
add
dec
dec
js
add
and
mov
je
movl
dec
or
add
and
dec
sbb
inc
inc
add
and
int3
dec
and
dec
inc
cmp
pop
je
rorb
mov
enter
dec
mov
loopne
int3
lea
sbb
add
mov
push
and
call
xor
and
dec
cmp
and
test
adc
dec
mov
add
dec
dec
inc
add
and
clc
dec
and
mov
add
repz
lfs
inc
dec
add
mov
add
adc
and
dec
lea
add
dec
add
mov
add
and
dec
add
stc
and
and
movsb
and
cmc
add
mov
arpl
cwtl
std
and
xchg
roll
decl
and
dec
mov
fadds
mov
ss
ret
xor
dec
pop
dec
fwait
push
ljmp
lods
insl
lret
xchg
sti
dec
call
scas
dec
outsb
dec
dec
mov
imull
ja
inc
xor
sbb
xchg
jg
mov
jg
dec
pop
out
cmp
pop
jp
mov
cmpsb
and
add
xor
push
leave
push
lods
fdivs
mov
dec
int
jl
pop
cmp
stos
add
push
xchg
inc
lcall
arpl
push
mov
and
mov
insb
fwait
mov
int3
es
push
gs
sbb
push
outsb
dec
push
jo
and
add
inc
jp
inc
test
in
cmp
stos
test
mov
dec
mov
cmpsl
fs
sbb
add
ss
js
xor
clc
xor
decb
xor
and
test
sarl
iret
lods
lahf
and
pop
inc
jne
mov
fisubl
stos
gs
je
ret
inc
and
push
jno
xchg
and
call
pusha
inc
dec
mov
push
in
stos
inc
or
fsts
sti
jae
in
or
push
add
scas
sbb
push
jecxz
push
adc
mov
cmp
out
fnstcw
cmp
adc
mov
fidivrl
mov
add
rcrl
and
out
dec
lods
mov
pusha
out
sarb
add
and
jp
out
call
cmp
push
jns
shlb
xlat
jno
xor
pop
test
cmp
pusha
ja
icebp
xchg
adc
mov
add
loope
subl
inc
outsl
stc
mov
xor
jmp
ljmp
popf
lahf
lahf
cwtl
add
pop
and
dec
dec
jp
and
enter
ss
rclb
adc
jge
dec
and
sbb
inc
cmp
testb
dec
int3
or
adc
aam
ds
lcall
mov
pop
stos
jbe
push
jae
jp
int
int3
mov
mov
mov
fdivrp
movsb
xchg
in
sbb
mov
jecxz
ret
push
mov
and
xchg
call
outsb
adc
or
push
add
int3
ja
xchg
xor
or
push
inc
rolb
xor
cmpsl
pop
mov
mov
xchg
push
xor
jle
sbb
in
in
aas
mov
push
fucomp
mov
pop
inc
adc
mov
loop
enter
jo
pop
jle
btl
addr16
xorl
jns
dec
testb
inc
test
adc
push
fistl
cmp
add
outsb
mov
test
mov
pop
imul
test
mov
sbb
sahf
mov
push
mov
in
ficoms
repnz
gs
test
mov
cs
ds
mov
mov
insl
mov
sub
mull
aad
mov
mov
and
or
add
daa
mov
icebp
cmp
je
mov
into
inc
test
mov
push
mov
fdivl
push
push
dec
fs
cmp
sbb
jg
jo
sub
std
les
push
fadds
aam
jecxz
ds
in
rcll
and
xor
in
xlat
and
xor
mov
negb
cmc
xorb
push
leave
push
sbb
aaa
lret
xor
sub
jns
ss
sub
js
rcll
mov
lock
and
or
int
hlt
aad
das
notl
and
ja
mov
fwait
pop
inc
xor
xor
sub
fbstp
push
int3
xchg
out
or
cmpsl
add
jns
mov
js
js
lods
sbb
hlt
mov
push
cmpsb
out
cld
sub
and
xor
cmpb
jne
imul
out
nop
mov
xchg
rorb
mov
or
int
push
xchg
scas
and
pushf
aaa
cmp
mov
push
es
dec
repnz
sahf
les
test
adc
daa
pop
add
scas
xor
stc
addr16
add
xchg
test
in
dec
or
out
inc
add
and
mov
xlat
xchg
jl
sti
xchg
call
cmc
leave
add
lret
or
aas
je
out
sub
inc
mov
js
std
orb
adc
pop
fucomp
mov
add
adc
pop
cwtl
mov
jecxz
sbb
std
jge
ss
ret
movsb
push
jmp
push
pop
ret
adc
test
push
outsl
sbb
gs
lods
fnstenv
xor
popf
in
ret
push
xor
aas
add
xchg
call
icebp
sbb
adc
cmpsl
icebp
mov
xchg
jb
aad
xchg
dec
lret
cs
jmp
inc
leave
inc
sarb
cmp
or
movsb
test
dec
into
mov
cmp
mov
jnp
pop
stc
popf
filds
add
add
mov
jae
jmp
icebp
add
sub
mov
or
pop
jbe
shr
jp
mov
cmpb
mov
lock
test
inc
cs
jnp
test
clc
repz
int3
add
add
pop
ret
mov
in
sub
inc
dec
clc
imul
into
cs
neg
rolb
leave
jne
push
and
mov
clc
repnz
ds
ficoms
fistpll
into
or
testl
mov
fs
xchg
gs
pop
jnp
mov
loopne
ret
mov
push
sub
and
das
insb
pop
jne
cmp
cltd
xor
jb
push
xor
jno
dec
or
mov
shlb
sub
cmp
push
inc
jno
jge
mov
test
push
jmp
cmp
rcr
pop
mov
adc
cmp
dec
hlt
cmp
jne
int
mov
imul
aad
lret
fs
test
cmp
inc
bound
jmp
fisubs
mull
cmp
gs
mov
pop
imul
scas
xor
mov
mov
cld
cmp
push
cltd
pushf
lcall
dec
xchg
in
mov
mov
int3
insl
stos
add
or
inc
loopne
repz
enter
fmull
and
jo
jno
adc
or
outsb
push
jle
lcall
xchg
les
lahf
andb
movsl
push
insb
inc
dec
ret
xor
mov
pushf
xchg
out
insb
push
bound
cli
xlat
aad
adc
ror
js
jmp
loopne
lret
popa
pop
inc
mov
push
ficompl
xor
aas
mov
in
lea
add
in
mov
test
testl
cli
shl
out
jle
ljmp
lea
jns
adc
out
inc
pop
popf
pop
or
arpl
xchg
xor
test
mov
sbb
pusha
inc
dec
fwait
or
mov
incb
dec
push
leave
mov
cmp
cmp
and
jnp
sbb
lds
in
or
push
xchg
jp
mov
imulb
jecxz
pop
mov
and
enter
mov
pop
stos
inc
aaa
and
cmc
xchg
in
movsl
lcall
test
divl
push
cld
mov
mov
incb
in
or
or
push
int
ljmp
test
xor
popa
cs
jnp
scas
out
ret
dec
sarb
mov
cmc
imul
aam
bound
scas
popa
add
movsl
daa
pop
xor
test
push
mov
jl
pushaw
bound
fmulp
and
test
jle
sarl
inc
dec
loope
test
jno
cli
test
idivl
sub
sbb
enter
fyl2xp1
or
rcrb
push
push
mov
int3
jge
cmp
push
std
push
orl
enter
pop
jmp
rorb
sub
lods
out
pop
dec
mov
add
out
push
mov
xchg
inc
loopne
adc
or
les
or
rcr
inc
jae
push
mov
les
std
rcrl
and
mov
pop
pop
push
test
jle
lret
daa
mov
jb
scas
aad
int3
adcl
cld
xchg
test
repnz
and
stos
fs
cwtl
dec
gs
jns
daa
lahf
push
add
scas
pop
js
pushf
leave
dec
shrl
ret
mov
xchg
or
xlat
adc
sub
repz
adc
jae
js
aaa
ffree
mov
iret
jl
ja
fldenv
jle
add
push
mov
es
mov
pusha
lret
jb
aaa
hlt
add
sbb
sbbb
lcall
mov
shl
cmp
inc
jo
add
pop
or
sub
ret
cs
loope
imul
add
fsts
hlt
test
decl
or
jmp
push
and
cmpsl
inc
jg
nop
popa
add
gs
daa
fldl
inc
hlt
gs
inc
jbe
jl
jecxz
sbb
int
mov
adc
pop
out
mov
add
aaa
xchg
xor
mov
cs
repz
jp
repz
dec
push
mov
cmp
push
repnz
adc
lea
jno
mov
xchg
repz
pop
or
inc
cmp
mov
and
stos
aam
insb
divps
xor
push
or
icebp
adc
push
fdivrs
and
xor
mov
movsb
loop
mov
and
sahf
cmp
cmp
adc
xorb
xchg
shr
je
popf
movsl
in
sub
flds
shl
outsb
pop
push
inc
shrl
data16
mov
sbb
jbe
and
or
clc
dec
rcll
jmp
xchg
mov
push
mov
sub
test
daa
orb
cmc
int3
jns
or
aad
adcl
movb
push
mov
jge
stos
out
outsl
cld
xor
cltd
sahf
bound
in
std
lods
call
or
pop
lahf
sub
cmp
xlat
xchg
mov
pop
mov
adc
shl
add
sbb
mov
push
aaa
add
jp
xchg
out
xchg
in
movsl
sub
push
push
inc
sbb
mov
arpl
cld
mov
push
in
lahf
sub
jge
repnz
and
aad
add
inc
adc
xchg
mov
jg
push
loope
repz
scas
outsl
inc
mov
jo
inc
ljmp
aad
mov
ja
enter
and
inc
insl
add
ljmp
js
inc
data16
in
mov
imul
and
addb
bound
adc
adc
stos
mov
sbb
js
sbb
aas
rolb
push
mov
dec
inc
pop
dec
test
rclb
mov
andl
int
cmp
imul
xchg
lea
jo
dec
mov
xor
cmp
call
dec
lea
lret
mov
jecxz
sub
int3
dec
inc
test
js
add
sub
faddl
arpl
daa
pop
pop
rolb
in
sub
xchg
stos
iret
inc
call
mov
fildll
fmulp
mov
scas
inc
sub
leave
lock
mov
clc
sub
jne
mov
fbstp
pop
xchg
test
test
xor
mov
hlt
stos
push
sbb
push
gs
ja
or
xchg
es
push
sbb
adc
gs
pop
dec
popf
cmp
decl
int
sbb
cmpsb
test
xlat
imulw
push
and
sub
sbb
lret
xlat
int
mov
jb
std
flds
pop
inc
dec
inc
xchg
jmp
je
mov
push
pop
sbb
lea
add
jecxz
popf
sbbb
sbbl
xlat
in
negl
gs
js
inc
les
roll
jns
pop
add
outsl
mov
outsl
clc
xor
xor
subb
adc
sub
addr16
aad
addl
pop
cmp
and
imul
fidivrs
iret
fdivr
fdivs
arpl
mov
pop
ror
clc
sbb
call
pop
sub
out
jmp
or
push
xchg
arpl
ljmp
imul
cmp
lock
fsubp
or
push
push
xchg
stos
mov
adc
sbb
fwait
add
sbb
movsl
push
cld
pop
pop
mov
cmpb
push
xor
iret
lods
rclb
jo
or
dec
inc
mov
cli
adc
movsb
add
jno
bound
cmc
imulb
inc
insl
inc
cmc
sbb
mov
pop
inc
repnz
testb
movsl
mov
jo
movsb
mov
ja
repz
sub
mov
cld
nop
pop
rcrb
jmp
ret
mov
lock
cld
fsts
fsubp
xor
cmpsl
jbe
mov
fwait
bound
mov
mov
inc
outsb
idivl
inc
lods
sub
or
fsts
scas
mov
das
int
cmp
mov
aas
jp
in
shll
daa
sub
add
enter
push
bnd
jl
inc
xchg
je
xchg
xchg
mov
enter
in
lahf
in
adcl
sti
das
mov
pop
push
jb
cs
int3
xchg
addr16
lret
jbe
in
repz
fcomi
imul
hlt
hlt
inc
in
stc
lods
repz
cmp
inc
aas
jae
cmp
test
mov
xor
test
jmp
fimull
mov
jae
les
cltd
ja
pop
add
jne
jmp
frstor
and
and
xor
repnz
xorl
sbb
leave
cmp
xor
insl
adc
jns
nop
nop
mov
xchg
sbb
pop
lahf
pop
dec
sti
test
in
repz
sti
test
xor
fistl
add
mov
imul
lea
ret
push
std
arpl
mov
mov
dec
sub
and
dec
fldenv
sub
xchg
cs
jne
add
sub
popa
push
and
rcl
in
and
mov
or
dec
imul
mov
test
and
xlat
inc
push
in
jo
pop
add
add
push
loope
inc
std
push
cmp
sub
fcomi
leave
or
push
pop
sub
jbe
inc
and
rol
rorb
mov
xchg
jp
xor
or
fsubs
loop
pushf
sbb
inc
out
sub
js
jl
ret
notb
xor
sub
adc
lcall
stc
xchg
scas
mov
fdivr
aaa
pop
cwtl
inc
enter
dec
and
mov
mov
out
jmp
leave
xor
pushf
cmpsb
and
orb
stos
pop
mov
xchg
adc
push
sub
in
push
out
fs
jmp
lock
xlat
xchg
repz
adc
insl
adc
push
mov
xchg
dec
or
loope
imul
pusha
sub
xchg
xchg
mov
les
data16
sbb
push
repz
push
pop
dec
mov
divb
inc
scas
aaa
or
jo
add
ret
aaa
sbb
dec
icebp
adc
jno
sub
fxch
jg
inc
mov
addb
into
test
fildll
cmp
imul
fld
fwait
xor
inc
arpl
insl
jecxz
push
or
jbe
mov
fsubl
add
mov
push
out
int
and
dec
popf
fstps
test
popf
cmpsl
and
jmp
mov
or
jg
xor
fisttpl
sarl
or
cmpb
xchg
mov
repnz
pop
inc
call
es
sub
repnz
out
repz
dec
int
ljmp
loopne
add
pop
and
push
pop
into
dec
inc
outsb
add
in
stos
enter
ds
popf
jno
lret
jmp
sbb
jge
fsubrp
popf
mov
jo
xor
mov
inc
pop
out
mov
mov
es
adc
cmpl
pop
mov
jg
mov
xchg
inc
stos
aad
and
call
lcall
subb
cmp
mov
gs
out
ss
stos
or
jno
lret
dec
push
lods
imul
mov
add
inc
aam
aaa
jp
jno
lock
lea
cmpsl
lock
xchg
nop
ja
cmp
pop
mov
or
enter
xchg
stos
and
jb
xor
jae
test
dec
push
inc
lea
testb
jecxz
cmp
mov
xor
arpl
cltd
mov
pop
dec
sbb
xchg
loope
sbb
aam
push
in
adc
fmull
cmp
push
xor
inc
cli
in
dec
gs
in
mov
stos
loop
inc
loopew
mov
hlt
in
out
bound
lea
xor
or
xor
js
notl
lea
shlb
jne
pop
sub
lock
enter
jbe
aas
xlat
scas
jg
shrb
push
orps
mov
mov
scas
rdpmc
xor
addl
push
andb
outsl
mov
cld
adc
jbe
pinsrw
xor
mov
pop
pusha
xlat
jecxz
cmp
jbe
or
sub
push
add
std
stc
ror
jns
jl
aam
pusha
mov
cmc
xor
fidivrl
movsl
pop
inc
xor
add
add
add
data16
adc
mov
addb
in
cmp
xchg
out
sbb
sub
fwait
push
inc
mov
dec
comiss
xchg
cmpsb
ret
faddp
and
jl
fwait
adc
int
push
xchg
xchg
xchg
js
and
scas
mov
jno
imul
pop
inc
xchg
iret
dec
rcrl
xor
mov
inc
jmp
mov
push
imul
ret
xchg
sub
pop
in
cwtl
iret
cmpsl
jns
imul
or
xchg
pushf
lcall
pop
adc
mov
in
or
mov
data16
arpl
notl
fadds
jno
fprem
fdivrl
loope
add
jb
sti
cmp
mov
daa
cmpb
adc
imul
in
js
sub
sbb
and
repz
sar
lret
push
mov
aas
add
sbb
in
mov
fwait
xor
lcall
sbb
jle
popa
dec
mov
adc
add
sbbb
xchg
jb
add
popa
pop
mov
add
std
jmp
xchg
mov
shl
test
outsb
sbb
jp
push
sbbb
and
mov
icebp
mov
pop
push
mov
dec
jo
jge
cmp
sti
and
outsl
stc
int3
sub
sbb
xor
and
pop
lret
out
scas
add
jne
rclb
and
movzbl
push
push
xchg
imul
pop
xchg
sbb
push
jle
pop
gs
fisubl
mov
sub
mov
out
std
adc
mov
sub
jbe
mov
inc
xchg
call
dec
out
shlb
sbb
hlt
stc
mov
sahf
stos
ror
cld
lods
les
pop
jo
dec
outsl
pop
call
jmp
lcall
aad
add
sub
cmp
dec
addb
push
xor
int
push
loop
filds
fs
jmp
dec
icebp
pop
mov
ret
test
dec
adc
cmp
inc
inc
loope
loop
leave
lock
cs
mov
divb
mov
daa
shrl
lea
cmpsl
iret
stos
mov
jl
insl
cli
jmp
hlt
mov
push
pushf
push
ja
dec
pop
nop
in
lahf
dec
repz
out
xorb
popf
enter
mov
xchg
inc
xchg
cmp
mov
or
movb
dec
xchg
in
cli
sub
bound
inc
sbb
out
imul
inc
lea
cmp
orl
or
sbb
ret
ja
inc
or
fbstp
jno
and
mov
in
mov
in
in
xchg
lcall
out
xchg
pusha
ds
shll
incl
push
jle
mov
mov
ljmp
mov
mov
sbb
sti
aas
push
xor
jb
fisubl
ret
imul
fidivs
and
repz
mov
mov
sub
aad
jecxz
movsb
pop
push
sbb
ljmp
ss
sarl
cmp
mov
lcall
pop
dec
jae
std
sub
or
sub
xor
aas
xchg
ficomps
fstl
jns
bnd
xchg
dec
xor
movsb
and
mov
sbb
ljmp
sbb
rolb
inc
jb
outsb
inc
mov
dec
sbb
data16
add
fsubrp
insl
cmpsl
iret
arpl
pop
cmp
inc
and
lcall
loope
dec
addr16
cmp
or
stos
leave
shlb
or
stos
cmpsb
sar
cs
dec
push
pusha
dec
mov
jg
loop
mov
add
testb
sbb
pop
xor
sbb
enter
and
xor
xor
cmp
inc
fcoml
cltd
cmp
and
clc
arpl
sahf
scas
fdivs
and
and
mov
mov
sbb
jae
test
mov
mov
xchg
jne
sbb
jne
mov
out
cmp
divl
lahf
scas
jecxz
enter
mov
mov
cmp
add
inc
xor
mov
add
and
or
jge
popa
xor
sbb
in
stos
jnp
push
or
dec
add
push
fcmovne
dec
lcall
pop
push
mov
cmove
rclb
adc
xchg
in
pushf
in
aam
insb
sbb
xor
repz
inc
ds
clc
adc
pop
testl
cmpb
mov
pop
dec
shlb
jb
ja
pop
add
xchg
push
cs
and
dec
outsb
xor
inc
xlat
mov
test
dec
inc
andl
stc
lock
and
test
bound
hlt
pop
daa
lea
sbb
xor
mov
mov
jb
in
sbb
sbb
aam
adc
jnp
mov
pop
fwait
popa
cwtl
xor
fs
inc
je
mov
ja
jne
mov
fiaddl
rcrb
je
push
loop
adcb
dec
fsubp
xchg
xchg
jno
fisttps
jb
adc
sub
loopne
mov
in
inc
jl
dec
mul
sbb
adc
mov
push
aas
mov
jp
cmp
cmpsb
pop
aas
mov
lret
mov
jp
and
mov
pop
cmc
sbb
dec
sub
dec
outsb
mov
inc
insb
or
jle
add
dec
and
xor
and
inc
inc
pop
or
jne
and
cmp
adc
clc
xor
mov
push
repnz
shlb
jo
lret
jge
imul
sub
jmp
push
or
fisttpl
faddp
dec
fdivrl
in
mov
mov
mov
pusha
mov
mov
pop
push
add
loopne
movsl
mull
scas
adc
ljmp
cmp
fiaddl
xor
xor
or
mov
in
outsl
imul
gs
push
mov
adcl
lret
mov
lea
pop
mov
ret
insb
std
xorl
mov
sbb
or
loop
gs
lret
adc
or
scas
mov
shlb
stos
push
mov
in
jno
mov
jo
movsl
pushf
xchg
sub
pop
lahf
sub
clc
dec
lcall
mov
lods
mov
lods
ficoms
pop
sub
popa
ret
cmp
cmp
inc
stos
mov
rorb
add
xchg
dec
cmp
xor
mov
or
xlat
add
sub
ljmp
xchg
iret
addl
lret
in
push
ret
xor
sbb
pop
in
inc
jl
sbb
add
fildll
fdivrl
imul
xchg
push
imul
cmpsl
pop
add
push
std
or
fidivrl
bound
adc
or
or
call
cmc
lea
mov
and
insb
sub
fisubrl
dec
into
gs
dec
popa
insb
inc
loopne
adc
hlt
and
lret
inc
cmpsb
fwait
xchg
mov
mov
repz
mov
pop
xor
ljmp
add
pop
aas
gs
aas
push
cmpsb
int3
and
push
sbb
and
mov
loopne
rcll
add
pop
mov
mov
push
popf
andb
bound
call
rcll
es
inc
dec
xchg
and
push
inc
xor
outsl
mov
or
fistpll
shlb
sub
cmpsb
sahf
sub
cwtl
push
outsb
add
cmp
pop
loop
sbb
shl
or
cmpsl
jg
loop
cmc
pop
int3
loope
loop
enter
xlat
aad
lret
lods
in
rorl
push
loopne
adc
adc
lcallw
xor
and
les
js
jne
lds
mov
pop
xchg
loopne
jmp
sub
jne
dec
push
or
dec
push
clc
sub
std
add
popl
xor
xchg
sub
jno
cmp
int3
in
ror
sbb
or
ds
rcrl
sarl
decl
push
mov
mov
push
inc
fildl
pop
popa
hlt
loope
in
aam
add
mov
push
xchg
adc
adc
bound
mov
jge
push
lock
das
repnz
mov
xchg
insl
sbb
ret
pop
stc
add
idiv
fcomps
xor
fnsave
imul
xor
mov
iret
shll
clc
pop
fs
xchg
pop
pop
push
adc
loopne
mov
call
inc
cmp
dec
mov
fldt
or
or
aam
mov
mov
aam
repz
mov
cwtl
bound
pop
push
iret
mov
addr16
dec
punpckhbw
xchg
jns
mov
pusha
push
sub
mov
xlat
jb
or
repnz
int
or
xor
xchg
lods
push
popf
les
push
mov
outsb
clc
dec
and
xchg
mov
in
jp
fistps
sub
dec
in
lock
and
pop
xchg
pop
cli
push
inc
push
fwait
lea
mov
ret
lds
xchg
fsubs
iret
jle
push
pop
and
mov
inc
push
test
les
ja
cli
or
jnp
std
loop
mov
sub
lahf
mov
jne
into
mov
ds
imul
jp
js
pop
add
dec
mov
and
cltd
dec
jb
xor
mov
push
lcall
ret
jbe
xchg
pop
aaa
pop
insb
mov
subl
stos
popf
push
clc
cli
imul
add
pop
add
sahf
loop
arpl
ja
push
test
mov
mov
in
xchg
and
dec
fimull
aad
and
in
jb
cs
jmp
pusha
lret
sub
aad
fbstp
dec
sub
mov
ljmp
repz
cmp
loop
xchg
fs
negb
in
sbb
pop
insb
test
shlb
lcall
pop
es
jle
xchg
jmp
cmp
mov
in
pop
jmp
and
or
xchg
jne
jmp
xor
mov
orl
xchg
jb
sbb
test
std
fdivrl
lods
call
lods
out
and
loopne
mov
lret
xchg
add
ss
mov
add
daa
fstps
sbb
fwait
xchg
jle
inc
dec
push
mov
bound
and
mov
xchg
add
cld
shll
sub
stos
and
xor
aad
push
sub
fnstsw
and
jle
xchg
out
mov
add
pop
adc
jmp
pusha
aaa
xlat
daa
leave
cmp
lret
arpl
mov
and
into
fldcw
inc
test
push
mov
fs
jmp
pop
mov
stos
jmp
in
mov
lock
gs
cmpsl
and
pop
icebp
fmuls
leave
in
outsl
inc
mov
inc
pop
outsl
and
jno
cmp
into
cmpsb
divb
fisubrs
ljmp
mov
gs
data16
jge
xchg
sarl
nop
cld
fidivs
push
cmp
mov
mov
imul
cmp
sti
sbb
jb,pn
loop
cmp
call
and
je
pop
jl
fs
std
xchg
fwait
shll
test
fwait
cmp
pop
shrb
mov
mov
test
add
in
in
sarl
jmp
adcl
fsubl
fldl
pusha
dec
xor
and
jo
std
aaa
repnz
std
into
mov
sbb
jno
pushf
inc
push
cmp
sub
cli
push
stos
adc
mov
cmc
xchg
push
daa
cmp
test
or
pop
xlat
addr16
rcr
xlat
cli
mov
dec
lods
lret
call
cld
movl
shrl
enter
pop
ret
ret
inc
and
stos
inc
not
outsl
incb
icebp
dec
cmp
imul
adc
or
hlt
lcall
jb
rclb
in
clc
or
jmp
dec
pop
cwtl
les
jae
xor
orb
jns
pop
ret
out
or
adc
xor
scas
adc
jns
cmp
scas
scas
fldt
mov
mov
mov
xchg
dec
cmpsb
aam
lret
mov
ret
sbb
xlat
adc
adc
sub
or
andb
outsb
xor
adc
aad
xchg
jne
sub
and
mov
xchg
bound
sub
inc
mov
adc
lahf
in
rolb
push
in
jne
sub
pop
cmp
xchg
add
out
xlat
divl
test
std
jne
rol
mov
cmp
in
nop
sub
pop
rclb
hlt
in
push
or
ds
jnp
fildl
pop
push
fwait
xchg
and
mov
scas
test
out
inc
ret
inc
xor
jle
call
sub
mov
inc
int
pop
popf
jb
int
jb
mov
jge
xor
sahf
mov
in
hlt
pop
jnp
outsl
movsb
mov
cld
into
push
out
mov
sub
insl
out
pop
mov
test
inc
adc
orl
icebp
je
pusha
fldcw
jmp
xchg
xchg
lcall
jg
fisubrl
jo
scas
fcoms
xchg
push
je
push
scas
jo
repz
mov
sbbl
push
dec
out
mov
cmp
roll
stc
xor
cld
add
cltd
xchg
f2xm1
and
and
cltd
scas
dec
out
daa
stos
cli
xchg
out
cmp
lock
push
daa
insl
jo
cmpsl
shr
pop
adc
mov
mov
push
sub
sbb
cmpsl
ret
add
mov
jbe
std
mov
movsl
aas
push
inc
in
ljmp
lea
cs
stos
dec
mov
iret
ds
xchg
add
mov
jno
add
aad
xor
pop
cli
addr16
scas
or
fs
pop
xlat
mov
inc
sub
or
cmpsl
sbb
addr16
shlb
ret
out
hlt
movsl
lea
push
lods
jnp
push
sub
sbb
push
lahf
ret
andl
cmc
pop
int3
out
sahf
int3
lcall
imulb
jo
dec
pop
inc
and
jo
mov
pop
mov
les
sbb
mov
fldl
icebp
cmpsl
dec
sub
add
fwait
dec
add
mov
xchg
xor
movl
cmp
ret
inc
pop
cmp
jno
and
iret
inc
cmp
adc
arpl
pop
test
and
jns
pop
mov
hlt
orl
adc
out
addr16
push
es
nop
jo
pop
sti
push
js
push
push
repz
lret
and
and
inc
or
cmp
lods
cmp
shll
mov
sub
or
lcall
std
sub
aaa
mov
add
lds
lds
mov
add
loope
sbb
sub
inc
enter
jmp
or
test
cltd
add
fidivrs
roll
push
leave
push
movsb
in
push
dec
or
jo
mov
loopne
cmp
aaa
cmp
movsb
sahf
mov
cmpsl
fisttpll
iret
inc
jns
pop
cmp
mov
test
enter
push
jnp
jg
es
ljmp
in
dec
mov
addl
shll
pop
ja
xlat
rolb
enter
imul
imul
bound
ja
xor
ret
mov
out
les
mov
xor
sub
in
inc
cmp
xlat
int3
jo
xchg
sbb
in
mov
inc
jae
scas
call
jo
shlb
je
push
scas
mov
nop
mov
fistl
out
add
sbb
xor
pop
add
js
push
mov
xor
sub
pop
inc
pop
int
jmp
andl
pop
gs
stc
ds
cmpsb
sub
sbb
xchg
mov
aam
adc
pop
ja
cmpsb
aad
ds
pusha
jmp
jbe
sub
xor
aas
lret
jp
push
ljmp
imul
outsb
data16
mov
sahf
dec
inc
push
lods
neg
cwtl
sub
or
sbb
fwait
push
mov
in
ds
mov
sub
iret
jno
xchg
dec
cmp
aam
in
pop
dec
out
jmp
fidivrl
dec
xlat
lds
mov
data16
add
adc
cmp
mov
dec
and
lods
jnp
jno
clc
jb
push
adc
ds
jp
gs
or
xchg
jmp
jl
call
cwtl
cmp
out
inc
fwait
jg
push
mov
jne
mov
notl
cmp
out
cwtl
ja
jo
fisubrs
dec
popa
sbb
jle
lret
xor
xchg
mov
sub
mov
out
push
adc
loopne
mov
jle
testl
insw
repnz
cld
xchg
lds
inc
adc
out
mov
pop
push
jmp
push
nop
rolb
loope
and
or
mov
pop
push
inc
pushl
imul
mov
ds
movsl
mov
arpl
lock
sarl
sub
xor
mov
out
jecxz
xchg
mov
dec
and
aas
and
push
stc
xor
je
mov
push
iret
repnz
dec
add
aam
cmp
jnp
cli
or
gs
arpl
addr16
aad
int3
dec
cmpsb
sahf
and
jns
xor
xor
sbb
test
or
bound
je
test
clc
orl
push
dec
je
dec
outsl
mov
adc
lods
cmpsl
mov
mov
inc
int3
fisubs
inc
cmp
aaa
push
inc
pop
xor
mov
xor
mov
sub
push
or
pop
mov
lock
outsb
xor
fistpl
jge
ret
int3
jno
movsb
in
ret
xchg
js
arpl
std
mov
in
in
pushf
test
cmp
aaa
sbb
das
and
sbb
outsl
adc
mov
sub
inc
fdivrl
out
ljmp
out
sub
aas
sbb
adcb
sahf
fwait
stos
dec
int
fldt
int
je
loop
push
adc
dec
inc
test
lahf
fs
sbb
sbb
repnz
gs
cmp
add
add
fcomps
cmp
fs
and
into
cmp
push
inc
sti
adc
jnp
mov
mov
cltd
ja
arpl
push
shll
mov
jg
cs
push
aad
and
add
mov
cmp
gs
mov
out
pop
xchg
jb
test
test
xor
xchg
and
add
movsl
leave
in
es
lcall
pop
push
cli
stc
cltd
lahf
pop
xor
movsb
jp
sbb
jg
xorl
or
fsubl
add
out
orl
mov
or
mov
aas
or
or
shl
jns
xor
pop
sbb
adc
fwait
lock
add
sub
and
push
inc
lahf
mov
ds
jmp
dec
xchg
dec
push
mov
adcl
jo
inc
rorl
ljmp
lahf
lahf
xchg
sub
jg
lcall
push
adc
lfs
test
arpl
test
int3
nop
and
push
packsswb
jnp
adc
imul
inc
push
pop
dec
add
xchg
dec
inc
lea
sbb
shl
jbe,pt
pop
cmpsl
mov
lret
mov
ret
xor
cmp
hlt
loope
fidivrl
jmp
adc
aas
jns
xor
into
repnz
fwait
movsl
jmp
fadds
loop
call
jmp
jmp
push
dec
out
insb
loop
xor
movsb
mov
push
arpl
iret
add
lret
jae
pop
jl
dec
mulb
xlat
xchg
aam
fiadds
push
imul
je
insb
outsl
pop
xchg
clc
push
fiaddl
mov
xor
fmuls
kmovb
loope
jmp
jmp
pop
lock
test
pop
push
and
ss
lods
lods
mov
add
scas
stos
adc
pop
mov
push
inc
or
dec
pushf
sub
xchg
cs
mov
adc
std
mov
loop
push
pop
jecxz
shrb
lods
dec
cmovne
movsl
push
add
or
aas
xchg
mov
ljmp
mov
push
pop
jmp
adc
push
pop
cmp
je
pop
xchg
addb
out
mov
mov
inc
call
pop
or
dec
das
rclb
shrb
xlat
int
in
repz
push
mov
insl
cmp
jecxz
lds
scas
sub
jno
xor
loopne
inc
ss
sti
fsubl
push
in
lods
mov
jp
popa
test
ficoms
popf
stos
jne
mov
jecxz
addr16
jl
mov
push
pop
jns
iret
mov
cld
scas
pop
loope
push
and
stc
inc
mov
js
cmp
mov
rcll
and
inc
xor
in
daa
movzbl
jmp
mov
std
dec
pushf
ret
dec
or
xchg
ret
mov
pop
adc
push
xchg
push
ss
and
ljmp
adc
pop
push
nop
hlt
or
push
sbb
addr16
fildl
fucomip
mov
dec
inc
das
aam
push
cmpsl
test
sarl
mov
mov
inc
jg
cli
out
out
jno
dec
fs
test
inc
jp
mov
pop
ret
setns
xchg
js
mov
mov
mov
aas
mov
sbb
push
sbb
jmp
sub
and
dec
cmc
je
pop
scas
and
scas
xchg
insb
iret
repnz
xor
mov
lahf
shrl
dec
add
mov
mov
je
push
enter
loop
pop
inc
dec
or
and
sbb
stc
mov
and
pushf
fiaddl
push
xchg
xor
jmp
outsl
mov
jno
push
bound
sbb
in
jne
push
xchg
inc
mov
xor
stos
stos
ljmp
adc
cwtl
and
jl
adc
je
cmc
push
shlb
ss
adc
ljmp
outsb
fbld
popf
sub
lea
cmp
sbb
fwait
xor
mov
jmp
dec
clc
repz
mov
insb
pop
popa
push
negl
loope
mov
shll
out
out
cmp
das
mov
mov
push
addr16
push
push
xchg
push
das
test
mov
xchg
inc
mov
pop
lods
sbb
mov
pop
movsb
pop
sti
repnz
jmp
insl
int
lods
pushf
jne
mov
adcl
xchg
out
inc
outsb
cmp
je
lret
mov
xchg
stos
lea
xchg
flds
shlb
xchg
push
or
jl
fdivrl
mov
scas
mov
sahf
lods
cmp
repnz
test
cmp
ljmp
xor
pop
mov
dec
cmp
jae
lods
ret
ja
cli
pop
aaa
in
inc
out
sahf
jl
mov
pop
jl
mov
imul
int
jmp
xlat
repz
lock
cmp
or
dec
add
cmpsb
sbb
xor
test
in
fiadds
inc
xor
pop
push
mov
addb
clc
jle
cmp
sbb
or
pop
or
pop
les
cli
jecxz
out
pop
sbb
sti
fcomip
mov
sarl
fsubrl
in
scas
ficoms
mov
fwait
push
jne
cmp
mov
sbb
inc
and
lea
jnp
pop
data16
push
xchg
or
test
sub
dec
cmpb
mov
orl
mov
cmp
xor
loopne
sbb
loopne
mov
aas
push
sbb
mov
movsb
popa
adc
sbb
sub
mov
mov
adc
and
add
inc
cmp
mov
icebp
xchg
add
pop
inc
sbb
adc
jnp
cmp
cmp
cld
cmc
pop
xchg
pop
ljmp
jb
ja
mov
xchg
loop
clc
js
push
lret
jg
mov
mov
pop
stc
xor
adc
leave
cltd
push
inc
sbb
ret
dec
rol
cmp
pop
rcll
xor
out
mov
jg
jb
add
scas
jno
push
cmp
mov
pusha
add
mov
add
push
call
sub
insb
sbb
aaa
std
jmp
dec
dec
pop
cmp
jecxz
sbb
ss
cs
enter
shrb
testb
stos
push
pushf
popa
or
and
fs
jle
addr16
mov
test
push
stos
sub
mov
mov
pop
in
test
sbb
cli
fwait
out
rolb
int3
mov
cltd
xlat
movsb
call
sbb
sub
sub
pusha
sub
ja
int3
fdivs
jle
mov
and
cmp
inc
sub
jmp
dec
das
jae
call
aad
jb
into
test
mov
mov
mov
pushf
push
jae
addb
movsl
jo
cltd
test
add
mov
mov
leave
rcll
xchg
jp
nop
push
mov
xchg
jbe
mov
jg
jmp
mov
sbb
jno
outsl
popf
inc
andb
xchg
inc
cmpsl
aad
gs
jnp
or
stos
test
adcl
insb
dec
cmp
or
pop
jne
mov
pop
sub
or
lea
sbb
cmp
shrb
xchg
dec
cmp
or
sahf
jecxz
pushf
inc
js,pn
pop
xor
mov
pop
mov
sbb
mov
add
jle
cmp
aad
addr16
int
add
mov
xchg
xor
fisttpl
inc
cmp
sbb
jg
or
pop
bts
add
mov
or
sub
push
mov
ja
shl
imul
cltd
xor
dec
push
jb
ret
sti
fistpl
inc
jle
adc
cmp
mull
sub
enter
pop
pop
sub
sub
dec
sbb
push
pop
pop
mov
dec
jb
pop
je
xor
movsl
jae
in
mov
and
dec
std
pop
add
xchg
inc
test
dec
mov
and
loopne
rcr
jae
adc
cld
sub
mov
mov
add
mov
out
call
sub
les
loop
fwait
sarl
stos
hlt
inc
rclb
jmp
sbb
add
cmpsb
in
iret
fstl
ficompl
cli
xor
push
inc
xchg
ljmp
lret
pop
cs
or
jecxz
xchg
imull
into
mov
mov
xchg
addr16
test
addr16
scas
mov
xchg
andb
in
xchg
xor
and
cltd
faddp
lods
and
jmp
dec
xchg
mov
mov
loope
cmpl
add
or
inc
icebp
push
sub
mov
cli
int
sahf
jg
or
push
iret
enter
sbb
mov
pop
test
dec
int3
push
fstl
popa
fildl
sbb
orl
add
sub
xlat
adc
and
dec
mov
movsb
add
push
cmp
repz
jmp
cwtl
aad
add
pop
jmp
sbb
mov
sbb
test
dec
inc
cmp
xchg
pop
xchg
aaa
push
in
icebp
pop
fsubrl
fs
dec
sbb
scas
xor
pop
movsb
aaa
out
stos
test
dec
xor
enter
dec
xor
pop
gs
lret
ja
loope
out
cli
cld
pop
xchg
push
aad
xor
loop
adc
stos
inc
je
pop
test
lahf
in
negl
add
add
decl
push
into
push
inc
pop
fbld
and
ret
cmpsl
insw
adc
add
cs
fisubrl
and
les
negl
es
mov
cmp
pusha
mov
sti
adc
rcrb
loope
inc
and
xlat
clc
outsl
pop
mov
xchg
inc
jmp
xchg
sar
xchg
aam
or
popf
xchg
add
pop
js
pushf
cmpsb
jo
fadd
xchg
mov
xor
add
sbbl
pusha
out
leave
out
dec
inc
pop
mov
cmp
cli
xchg
inc
sti
mov
testl
pop
js
jns
sub
inc
ficoml
test
add
push
xchg
repz
ret
xor
int
mov
cmp
lret
cmp
cmpsb
push
pop
stos
aam
lods
into
aas
jl
movsb
cmp
jbe
cmpb
add
jno
cmpb
in
jae
mov
add
mov
mov
aaa
cld
test
mov
mov
mov
sub
pxor
cld
mov
mov
dec
adc
loopne
xchg
lret
push
xchg
rorb
or
mov
into
addr16
jo
fildl
mov
push
xchg
movsb
ss
mov
imul
cmp
dec
pop
out
jb
sti
add
cli
mov
frstor
test
orb
dec
scas
xor
lds
jmp
mov
mov
xchg
jp
data16
jo
or
mov
pop
call
out
adc
in
add
cli
lock
xlat
test
pop
lea
xor
dec
in
das
dec
jo
add
roll
adc
mov
ret
jbe
inc
add
push
and
lea
dec
xchg
jno
xor
jns
sbbb
mov
into
push
xchg
push
lods
repz
push
inc
xor
jecxz
jp
adc
sbb
paddsw
or
imull
std
add
dec
das
popa
and
int3
adc
cmp
pop
and
shll
cmp
pop
cmp
loopne
pop
xor
or
call
repnz
adc
mov
stc
jae
push
cmp
fidivl
aas
jb
rorl
mov
fstpt
out
cmp
stc
popf
cld
adc
aam
hlt
cmpsl
jecxz
pop
stos
sahf
ds
add
jl
scas
dec
jae
fimull
outsl
sbb
icebp
add
clc
adc
jbe
cmp
mov
lea
ficompl
ljmp
push
cmp
inc
jb
pop
pusha
mov
or
leave
and
mov
std
enter
sub
dec
jmp
insl
lea
jno
xchg
pop
andl
mov
repz
inc
addr16
jg
jno
fcoml
int
add
jno
mov
dec
or
fisubl
mov
dec
fwait
push
xor
xor
lret
out
mov
or
mov
fs
xchg
push
incl
jb
sbb
insb
push
ret
cmp
cmc
test
lods
pop
sub
xchg
mov
mov
cmpsb
fcmovu
cmc
xor
jl
sbb
pop
js
fmuls
xor
bnd
pop
add
les
in
or
push
iret
sbb
xchg
mov
rcll
adc
cmp
lock
pop
pop
fadds
mov
std
or
sub
cmp
in
pop
rclb
scas
inc
xchg
outsb
popf
fidivrl
mov
flds
and
mov
aaa
js
int
or
push
mov
sbb
mov
sbb
or
cmp
pop
xor
icebp
aas
loopne
or
adc
mov
cmp
cmc
stos
insl
cmp
sub
and
push
jle
test
mov
fld
xchg
jmp
icebp
mov
inc
mov
scas
xrstor
mov
cmp
pop
rcrb
fnstsw
jl
sub
jmp
negb
pushf
loop
orl
xorb
pop
xor
daa
xchg
pop
cs
cmp
imul
jg
scas
in
dec
je
mov
push
repnz
xchg
push
jns
jl
sbb
xlat
and
pop
out
jnp
inc
jb
andb
cmp
sub
xor
sub
test
pop
mov
push
std
movl
and
inc
daa
das
cmp
in
mov
nop
push
xchg
pusha
jecxz
ja
or
fs
mov
jno
mov
fnstcw
lret
in
out
push
sbb
insl
pusha
loopne
int
jbe
push
or
mov
cmpb
mov
cmp
or
mov
or
clc
movsb
adc
icebp
cltd
pop
lahf
sahf
mov
push
into
add
adc
repnz
adc
add
or
mov
push
mov
dec
inc
bound
add
data16
rcr
xchg
adc
fistpl
stos
xor
fidivrs
in
pop
and
mov
loopne
ret
jmp
dec
inc
adc
fcmovb
sub
lret
push
fldl
outsb
jmp
push
lret
jle
scas
sub
dec
sbb
shrb
inc
fdivr
push
push
jb
mov
insb
xchg
loop
inc
adc
cmc
or
lret
cmpb
add
out
mov
iret
lret
das
pusha
jmp
iret
mov
fnstenv
jmp
bound
jp
jns
sti
jb
or
in
mov
out
push
std
arpl
dec
stos
sbb
out
lcall
testl
xor
push
sbb
adc
fs
jae
fistps
repz
dec
imul
pop
sub
ret
add
movsb
mov
cmp
mov
xlat
cmp
push
and
shr
cmpl
loopne
enter
pop
pop
sub
inc
mov
iret
xor
lods
fistl
jecxz
sbb
pop
in
fcomps
add
pop
arpl
decb
repz
call
scas
fcomps
sub
in
leave
or
insb
dec
xchg
popa
call
dec
add
dec
or
leave
ffree
inc
aam
dec
in
push
test
push
inc
lcall
push
sarb
xor
sub
test
and
cmp
mov
mov
cmc
movsb
mov
fisubl
and
pop
dec
lcall
jmp
nop
jnp
mov
adc
std
push
dec
mov
push
xor
test
lret
pop
bound
scas
lds
dec
insl
iret
xor
dec
dec
push
pop
jp
fxch
dec
clc
add
dec
icebp
ja
fs
push
aas
xchg
xchg
stos
pop
and
push
sbb
pop
ficoms
ss
cld
ja
mov
jp
or
pop
mov
bound
leave
testl
sub
xchg
and
stc
mov
incl
js
sbb
sbb
push
pop
clc
fwait
imul
xchg
jno
dec
bound
xor
into
scas
push
es
sbb
enter
push
fildl
jl
in
mov
in
rorb
dec
bound
cmc
roll
mov
je
popa
mov
test
mov
fisubrl
push
mov
into
and
clc
mov
push
push
int3
je
lret
repz
inc
adc
movsb
pop
adc
jp
mov
adc
add
push
sbb
xor
orb
pop
sbb
aad
or
cmp
loope
cltd
fidivrl
mov
icebp
dec
and
dec
fistpl
outsb
and
insb
or
aad
dec
arpl
fdivrs
lods
jge
aas
jmp
sub
jb
inc
jbe
push
fiadds
out
in
int
adc
movsl
fwait
sbbb
loopne
lret
iret
fcoms
pop
jecxz
aam
inc
lea
dec
inc
loope
add
jno
ret
mov
push
js
and
xchg
aam
mov
popa
inc
or
or
imul
mov
ljmp
jmp
and
pop
push
pop
rcll
xor
test
hlt
shlb
mov
cmpsb
mov
sbb
push
div
and
nop
sub
and
and
arpl
jo
xchg
adc
jns
mov
mov
push
adc
notb
out
add
inc
fwait
popa
orl
add
incl
xor
andl
dec
adc
addr16
sbb
push
xor
and
loopne
xor
call
push
push
gs
push
or
jmp
andb
jmp
enter
xchg
pusha
int
call
fbld
pop
fstpl
idivb
jmp
test
mov
push
lret
out
xor
dec
aam
and
mov
fdivs
movsb
inc
test
inc
xor
pop
test
into
dec
mov
sti
in
mov
and
jg
lock
xor
push
add
daa
mov
sub
or
fwait
mov
add
fsub
sbb
sti
mov
outsl
daa
sub
fs
sbb
sbb
pushl
inc
stc
xor
xorl
sbb
pop
jbe
jne
add
and
cmp
xchg
pop
mov
bound
cmc
pop
je
push
repnz
mov
inc
lods
mov
mov
pop
cmp
xchg
inc
adc
sbb
xchg
les
loop
inc
add
loop
std
sbb
shll
pop
pop
jle
fdivs
mov
aaa
adc
out
shl
nop
mov
out
xor
xor
mov
out
int
mov
nop
aaa
cmp
insl
ret
mov
and
pop
outsl
in
adc
pop
out
cmc
cmp
test
push
adc
lcall
ljmp
rcll
es
clc
and
int3
xchg
xchg
lret
cmpl
cld
popa
xchg
xlat
xor
repnz
shll
pop
aas
aaa
pop
ret
leave
les
push
sbb
cmp
loop
jecxz
andb
aas
aas
in
add
jno
pusha
cs
lret
jb
push
lret
xchg
jno
add
xor
push
call
mov
sbb
aas
jo
add
push
mov
cmp
stos
sub
test
jb
or
inc
andl
mov
push
push
cltd
dec
lahf
imul
sbb
inc
and
repz
ljmp
into
dec
jne
rolb
mov
out
sahf
pop
sbb
add
outsl
imul
mov
pop
inc
pop
cmc
sbb
imul
mov
call
gs
xchg
xor
imul
xor
sbb
push
les
sbb
add
lahf
jle
sbb
dec
scas
add
insb
les
xlat
in
clc
or
cmc
sbb
iret
outsl
scas
push
inc
rclb
popa
out
int
pop
in
adc
add
push
insl
in
call
sti
mov
in
in
push
dec
xchg
cli
inc
inc
sarb
jle
outsb
loopne
inc
dec
cmp
mov
push
dec
ficoms
inc
testl
pop
push
lods
lcall
mov
rolb
mov
ret
scas
pop
add
cmp
xchg
out
shr
lcall
add
test
sbb
aad
incb
add
sbb
into
movsl
sub
xor
add
and
out
andl
sbb
xchg
incl
out
icebp
mov
in
add
into
dec
xor
sub
jge
jb
out
xchg
sbb
xor
stc
mov
and
or
push
out
xchg
fcoml
mov
loop
mov
stos
mov
call
aas
scas
xor
or
insl
out
rclb
adcl
sbb
ret
lds
and
arpl
mov
mov
aaa
and
cmp
leave
push
jecxz
dec
scas
add
dec
orb
push
xor
test
shrl
or
es
imul
mov
cmc
test
xlat
out
or
hlt
inc
pop
xchg
cmp
cmp
xchg
lods
cmp
insb
popf
loop
add
imul
add
or
ret
adc
xchg
inc
lock
jae
into
add
ror
jbe
pop
stos
adc
nop
fldcw
pop
sub
fadd
adc
and
std
add
pop
push
mov
in
shll
cli
mov
mov
inc
jno
sbb
test
pop
out
jnp
imul
adc
push
fadds
movsl
mov
insl
shr
imul
dec
adc
rorb
in
or
movsl
jge
mov
xchg
jne
and
icebp
int
ja
and
gs
cmpsb
loop
add
repz
adc
sub
xchg
pop
xlat
jae
jmp
insb
adc
jb
push
dec
mov
imul
in
sbb
mov
mov
imul
negl
stos
fidivs
jno
in
pop
push
ret
xor
loope
add
cmp
rorb
dec
jnp
cwtl
cmp
add
sahf
popa
cmp
adc
xchg
mov
add
pop
and
repnz
push
rcr
loop
ljmp
popf
inc
fistpll
shll
je
in
in
shr
std
lods
push
orb
sbb
jae
push
das
lock
in
ret
sub
scas
test
jae
xchg
movsb
cmp
scas
leave
mov
push
das
dec
xchg
cvtps2pd
mov
mov
enter
nop
lea
shrl
xor
leave
ja
outsl
notb
or
aad
aam
push
adc
xor
sub
pop
xor
leave
insb
dec
cmpsb
add
adc
decl
cmp
cmc
or
mov
mov
pop
ret
adc
mov
addr16
vmread
mov
pop
jecxz
imul
or
xor
xor
popa
jge
out
in
orb
lods
mov
mov
mull
xor
aaa
pop
cmp
inc
add
xor
push
and
mov
loopne
das
ror
add
push
xchg
ss
add
mov
aam
mov
test
outsl
lret
leave
push
shll
pop
fidivs
pop
cld
hlt
in
call
mov
xor
xor
mov
push
mov
jno
inc
xlat
das
cmp
lret
jbe
enter
jbe
daa
sbb
adc
sub
pop
hlt
test
pusha
data16
jb
adc
insl
add
in
cmp
cwtl
add
jne
jbe
fnstenv
sti
in
xchg
xchg
aad
mov
ds
jp
arpl
cmp
pop
insl
push
sub
pop
adc
and
jnp
sbb
jl
lahf
loope
add
out
cltd
pop
test
popl
cli
orl
inc
mov
fisubrl
rclb
lret
das
mov
jp
icebp
add
sub
push
push
and
subl
adc
lds
pop
dec
dec
icebp
ret
popf
cltd
enter
mov
out
xor
in
sbb
addr16
fcmovnb
les
psrld
add
decl
jl
jo
es
imul
inc
mov
mov
sub
inc
sbb
ret
xchg
into
pop
inc
fstps
cmp
adc
ja
ret
addr16
add
aaa
ja
icebp
ja
out
popa
scas
call
mov
mov
xchg
in
bswap
mov
adcb
lods
and
in
cltd
mov
mov
fcomp
cmp
imul
jo
and
jne
jb
sbb
dec
adc
jnp
xchg
pushf
test
fdivrs
js
lds
pop
push
mov
aas
jo
cs
mov
pop
fs
cld
sub
aas
xchg
dec
push
cwtl
fsubs
jbe
add
jnp
mov
adc
ret
scas
jnp
les
jmp
or
sbb
fwait
xchg
jo
daa
cmc
sbb
test
clc
pop
jno
call
cmp
add
mov
and
lock
adc
mov
jo
ret
cmpsl
mov
push
mov
dec
xchg
cmp
cmp
arpl
xor
xor
xlat
add
pop
sub
xor
cltd
iret
dec
push
jmp
popf
adc
dec
enter
cmpsl
cmp
cld
call
adc
xchg
sub
cli
inc
cld
or
gs
mov
adc
xchg
xchg
in
leave
mov
mov
inc
xchg
scas
mov
ja
call
sub
push
adc
xchg
add
inc
fcmovbe
mov
or
pusha
sub
mov
push
push
mov
movsb
pop
shll
jne
inc
push
push
daa
imul
adc
mov
pop
out
xchg
pop
xor
outsb
outsb
mov
jo
nop
sti
add
daa
pop
push
push
pop
and
mov
inc
cltd
imul
sar
in
das
loopne
out
lahf
pop
cmp
cpuid
dec
jmp
xchg
addb
sub
cmp
add
pop
imul
mov
ret
or
push
call
int3
push
add
movsb
sub
jg
pop
mov
mov
sbbl
stc
stc
mov
pop
and
sti
xchg
adc
cltd
or
repz
cmp
dec
addb
dec
repz
jne
je
cmp
push
ret
mov
rdmsr
int
jb
fists
push
jo
out
push
xchg
mov
or
jne
into
mov
pop
mov
cltd
pop
push
and
pop
inc
enter
andb
sarb
pop
xchg
or
mov
xchg
outsl
int3
outsl
pop
cmp
jecxz
fstl
cmp
int
sub
and
lock
pushf
aad
sti
jbe
xchg
mov
in
lret
pop
hlt
stos
mov
imul
mov
sbb
aas
adc
push
sbb
push
jnp
pop
test
lods
lret
test
and
mov
and
aas
xchg
inc
or
and
loope
sub
or
or
pop
push
push
mov
lahf
mov
mov
jmp
and
xor
insl
lds
or
lock
pop
loopne
ljmp
leave
or
xchg
jbe
cmp
sbb
push
addr16
sbb
mov
push
and
sbb
adcb
xchg
sahf
or
loope
test
aas
jnp
leave
dec
repz
rolb
xor
scas
dec
mov
gs
test
mov
inc
in
or
lea
cld
inc
loopne
xchg
jns
loop
int
xchg
xchg
sbb
mov
or
pop
mov
ja
mov
div
rorl
xchg
out
and
in
sahf
xchg
cmc
ds
rcrb
popa
sbb
sub
lcall
jg
pop
sbb
push
call
lods
cmpsb
call
fstl
pop
add
pop
adc
xor
pusha
sub
movsb
dec
jmp
lcall
xchg
arpl
or
cmp
cmpsb
stos
scas
xchg
loopne
mov
xchg
fwait
out
sbb
test
cltd
cmpsb
imul
outsl
popf
es
push
and
jbe
outsb
stc
and
mov
add
push
mov
mov
jg
cwtl
cmp
gs
ror
repz
jle,pt
adc
and
pop
and
lods
xchg
push
test
rcrb
mov
dec
jmp
xor
popf
mov
sbb
and
stc
cltd
movsb
add
mov
mov
inc
aaa
mov
sub
or
pop
push
adc
pop
add
mov
leave
ret
inc
repz
lods
sbb
pop
es
mov
sbb
xor
frstor
in
test
stc
inc
dec
andb
xor
pop
outsl
mov
fs
div
xor
sub
pop
xor
fildl
adc
daa
fadds
mov
sub
cmp
ficoml
pushf
xor
in
or
mov
sahf
clc
dec
dec
cmp
arpl
dec
popf
sbb
out
mov
out
add
jne
imul
popa
idiv
sbb
and
inc
repz
jmp
daa
movsl
imull
mov
out
and
xchg
pop
hlt
notl
dec
pop
sub
push
mov
push
sbb
fs
pop
sbb
cmpsb
push
dec
pop
test
and
gs
adc
cmp
xchg
arpl
aaa
imul
pop
or
in
pop
jbe
fwait
push
inc
lret
add
scas
xchg
inc
mov
push
and
mov
in
dec
sbb
test
movsl
lods
scas
pop
sti
pushf
or
arpl
xorl
dec
dec
iret
jmp
movl
popf
inc
xorb
inc
mov
sbb
dec
mov
adc
arpl
ss
in
test
enter
pop
add
mov
jg
cmp
aam
push
lret
lea
cmp
les
insb
fmuls
rcrl
cmp
jo
mov
adc
movsb
xor
fildl
iret
pop
movsb
mov
dec
fistpl
inc
int3
cltd
inc
mov
lcall
lret
mov
aad
cltd
pop
mov
nop
call
mov
cmp
xor
lret
sbb
stos
sbb
adc
pop
add
xor
inc
and
jae
rolb
mov
sbb
sub
push
adc
cmpsl
cmp
xchg
idiv
fldl
cmp
push
push
cmpl
adc
clc
imul
das
push
enter
mov
xchg
pop
stos
dec
insl
or
mov
popa
popf
xchg
jo
add
push
test
add
mov
popa
inc
and
sti
jecxz
mov
dec
hlt
out
notb
ljmpw
jae
test
ret
dec
les
pop
and
std
mov
lds
pop
aad
or
mov
aam
jl
mov
push
pop
pushf
dec
fldcw
push
add
cmp
mov
data16
sahf
pop
scas
addl
mov
lock
in
fs
jb
push
inc
and
cmp
xor
shlb
inc
inc
mov
jp
cmp
cld
inc
or
loop
out
test
sbb
jp
in
lret
aas
popf
dec
mov
test
jne
push
insb
inc
mov
sub
out
repz
cmp
mov
lret
xchg
xchg
xchg
call
in
iret
xchg
add
mov
mov
inc
cmp
mov
push
jecxz
shrl
jno
js
stos
xchg
sbb
push
sub
xchg
sar
fcomps
cmp
mov
popa
imul
xchg
int
or
sbb
inc
pop
mov
lret
movsb
push
push
fcoml
fdiv
stos
mov
ss
aas
test
mov
outsl
push
pmaxub
cli
jmp
pop
das
push
cmp
sbb
jno
stos
jbe
out
les
mov
adcb
fistpl
scas
call
push
push
test
lahf
imul
int3
lret
loope
inc
and
lcall
adc
cli
scas
xchg
pop
xchg
fsubrl
and
in
rcr
int
cmp
xor
xchg
into
or
fwait
scas
inc
sbb
dec
and
ds
leave
jg
and
adc
cld
stos
and
out
jb
shl
das
cmp
les
jo
mov
sbb
jl
mov
aaa
enter
sbb
scas
arpl
aaa
pushf
add
mov
cmp
xorb
ljmp
jae
mov
sarb
dec
dec
fistl
adc
addr16
popf
bound
gs
sub
jle
jmp
sti
xor
mov
lret
pusha
pop
inc
adc
jecxz
mov
mov
aaa
fldl
aam
mov
jns
je
cwtl
lret
sub
mov
jns
mov
cmp
leave
insb
or
mov
pop
mov
ljmp
cmp
aam
push
ljmp
xor
in
rorb
sub
shll
or
ret
das
mov
and
dec
jp
es
pop
into
int3
nop
cli
daa
arpl
fsub
add
loop
jb
adc
add
lods
into
sahf
mulb
lahf
in
testl
push
inc
pop
loope
jle
and
jb
scas
xor
pop
addl
insl
roll
and
pushf
add
cmpsb
mov
adc
pop
gs
pop
clc
or
pop
mov
rcll
mov
push
icebp
add
int3
insb
cmp
inc
fs
addr16
and
addr16
fs
push
add
and
repnz
mov
pop
cmp
scas
outsl
lahf
push
nop
pop
xor
imul
aad
dec
xchg
xchg
in
aas
scas
xchg
pop
cmpsl
in
fwait
mov
pop
sbb
aas
fsubr
cltd
in
jae
mov
int3
dec
mov
push
jg
rcrb
and
daa
jae
mov
sub
jne
or
in
pop
aam
dec
jle
out
imul
dec
shl
push
or
push
lods
xchg
hlt
in
and
xchg
int
pop
int
int3
out
loopne
rorb
inc
jbe
pop
dec
mov
jbe
mov
sbb
jp
pop
mov
lock
dec
movsb
or
ret
and
cmp
pop
pop
ret
insb
orb
cmpsb
mov
dec
pop
jmp
popf
clc
das
dec
icebp
insl
mov
sub
rorb
imul
xchg
sbb
in
std
std
xchg
cmp
push
and
and
jecxz
jne
mov
mov
ds
jnp
xchg
gs
or
sahf
rcll
aaa
rolb
ss
mov
mov
mov
in
clc
mov
adc
add
shlb
xor
adc
pop
cmpsb
dec
dec
bnd
dec
fisubl
pop
cmpsl
sbb
cmp
or
xor
adc
jp
les
inc
add
pop
fwait
ret
enter
in
mov
mov
push
sahf
shl
sbb
mov
jmp
inc
sbb
xchg
adc
cmpsl
cmp
pop
pop
push
xor
push
jbe
jb
out
pop
fbstp
in
mov
push
lds
pop
scas
mov
mov
movsl
push
inc
cmp
in
add
out
jns
scas
cld
rclb
pop
and
fisttps
inc
pop
scas
aad
ret
cli
icebp
adc
pop
in
popf
cs
fmull
push
lods
mov
adc
adc
cmpsl
and
mov
dec
push
cmp
in
xorl
nop
inc
addr16
dec
pop
cmp
test
cmpsl
stc
out
or
pop
jle
pop
lret
movsl
dec
enter
add
mov
fldl
hlt
xor
sbb
adc
mov
jno
out
jmp
or
shlb
clc
out
adc
sbb
mov
std
jp
dec
fldenv
aam
lock
repz
insb
test
lret
adc
clc
or
mov
movntps
enter
scas
inc
js
dec
push
xor
fwait
jp
fiaddl
add
je
sti
inc
fs
addr16
cmp
rcll
out
imul
je
popa
les
imul
loop
xor
sti
mov
push
pop
fsubs
and
loopne
imul
out
and
daa
scas
pusha
xor
xchg
add
mov
or
call
add
push
out
add
jbe
dec
ret
jle
push
xchg
jbe
test
movd
mov
fs
mov
mov
mov
sbb
js
das
loop
mov
inc
push
loop
or
and
pop
inc
imull
out
sub
cmpl
mov
cli
fdivp
and
push
adcb
inc
add
sub
nop
sbb
mov
add
mov
stc
lods
jb
cmp
sti
movb
mov
cmp
mov
inc
hlt
rcrl
pushf
outsb
idivb
pop
xor
je
and
cmp
add
mov
push
push
xchg
lods
mov
xor
dec
mov
repnz
jb
jno
jge
loop
sarl
cmpsb
call
clc
and
jmp
imul
movsl
leave
imul
je
ljmp
cli
dec
push
daa
repnz
test
pusha
dec
dec
cmpsl
jmp
mov
cmpsb
mov
jo
xchg
dec
jne
ficomps
mov
mov
iret
push
push
ljmp
jnp
jmp
imul
lds
stos
fwait
jp
test
mov
test
push
mov
xchg
xor
pop
scas
or
addr16
adc
push
imul
jne
cmp
jb
jge
lahf
push
into
jne
pop
jbe
pusha
pusha
nop
sbb
fsubrl
outsb
mov
lea
or
into
cli
pop
sub
jl
jp
cmp
cmpl
in
inc
cmp
nop
nop
cmc
sbb
mov
dec
fildll
sbb
imul
inc
add
adc
fwait
jo
movsb
cmp
pop
insl
adc
mov
adc
adc
push
nop
push
push
lods
push
fdivl
add
imul
mov
ucomiss
pop
jp
loope
fcomps
push
stos
xor
push
and
ret
sbb
pop
cmp
push
inc
out
cs
cmp
mov
push
xchg
push
ss
cmpsb
out
shr
lcall
xor
mov
mov
fimuls
imul
jo
scas
push
hlt
pop
std
sbb
cs
jmp
inc
outsl
aam
push
out
xor
mov
xchg
adc
mov
es
cltd
xchg
loope
stos
subl
mov
lret
imul
push
dec
ret
add
mov
push
data16
jne
jg
sub
mov
jecxz
xchg
jno
jo
jnp
fcompl
lds
cmpsb
or
xchg
arpl
mov
inc
cmp
jmp
and
lcall
mov
cmp
jl
fs
aas
dec
cmpsb
ljmp
fistpll
mov
or
inc
cs
sub
fwait
das
imul
jg
cwtl
jne
loopne
cmpb
pop
insb
mov
aaa
adc
pop
xor
sub
add
shll
lcall
fdivs
mov
add
fisttps
fldcw
ficoml
cmp
pop
notl
movsl
ror
stos
hlt
mov
adc
lcall
xorl
pushf
xor
lods
jb
cmp
push
push
int
int
movsb
addr16
out
xor
int
scas
stc
cmpb
setl
adc
xchg
inc
mov
mov
pop
and
mov
rcrl
dec
in
cmpl
subl
clc
cs
pushf
or
xor
jb
stos
jmp
mov
movsb
fsubrs
iret
cld
jle
sub
add
cmp
ss
aad
xchg
insl
test
loopne
lods
add
xor
dec
sti
push
sub
ljmp
leave
adc
inc
sbb
or
jb
ret
movsl
lods
push
xor
lods
pop
and
mov
js
sbb
mov
add
popf
adcl
sub
jo
jmp
sti
push
ret
rcrl
rcl
dec
repz
iret
rcll
jne
pop
aad
enter
fsub
gs
in
sbb
call
and
dec
movsl
shrb
nop
push
add
test
fstpt
cmpsb
sbb
loop
enter
xor
movsl
and
push
roll
jbe
icebp
cmp
sbb
sarb
outsb
decb
fcmovnbe
jns
add
adc
xchg
fldcw
insb
cmc
lods
mov
outsl
mov
sti
sahf
adc
loop
mov
or
aad
dec
push
mov
cmp
aad
mov
cwtl
sbb
cmpsb
and
fcoml
aaa
into
bound
adc
jmp
shrl
jo
adc
jle
aam
xor
inc
jp
stos
push
add
fdivrs
stos
jg
pop
std
pop
out
ss
test
stos
mov
push
pusha
mov
in
xchg
jne
arpl
cmp
nop
adc
pop
push
rolb
test
pop
fwait
pushf
lds
add
mov
popa
add
stc
add
subl
and
imul
clc
test
cld
daa
mov
mov
pop
rcrb
or
mov
dec
inc
inc
mov
cmp
and
fmuls
es
cmp
cmp
ljmp
xor
adc
or
insb
cmp
xchg
sub
scas
gs
mov
les
popf
bound
push
dec
mov
adc
inc
clc
xor
mov
aad
pop
adc
or
add
out
inc
in
mov
push
in
sub
aas
repnz
lret
pop
pop
sar
loopne
std
out
stc
stos
adc
mov
xchg
inc
lods
and
adc
inc
daa
mov
shr
dec
mov
cmp
in
sahf
data16
je
mov
mov
xor
je
inc
jl
daa
dec
cmp
sbb
mov
insb
mov
xor
lret
data16
pop
jo
nop
aad
je,pn
divb
add
popa
repnz
fildl
pop
inc
enter
dec
pop
bound
jp
jmp
cmp
rorl
gs
mov
dec
lret
xlat
or
mov
mov
int
ror
mov
fnstcw
frstor
iret
jne
mov
xor
push
repnz
dec
cmpsb
add
movsl
pop
addr16
fisubl
cli
xor
fbstp
adc
mov
and
lcall
dec
mov
cld
daa
mov
out
incl
jnp
test
scas
orl
push
jb
pop
push
push
sub
cmp
aaa
lahf
push
jnp
cmp
sbb
dec
arpl
outsb
cmp
jg
xor
xchg
mov
leave
jbe
paddsb
cmpsl
repnz
lcall
scas
inc
mov
mov
inc
cmp
inc
pop
imul
cmp
push
and
fsubrl
std
jns
sub
mov
jp
call
xor
sbb
sbb
jl
arpl
faddl
loope
stos
mov
xchg
adc
inc
js
aad
aas
adc
daa
xor
aad
and
fwait
cmp
mov
shlb
and
aam
out
lcall
xor
add
orb
fsubs
test
hlt
sahf
call
mov
movsl
inc
bound
mov
dec
mov
jg
test
cld
call
push
or
add
mov
pop
shl
xchg
cmp
repz
jl
lret
lcall
mov
and
add
cmp
push
mov
fadd
stc
and
or
inc
add
and
or
adc
xchg
add
push
out
pop
in
push
cmp
jne
fisubrl
dec
pop
inc
loop
dec
xor
or
popa
push
pop
add
int3
ret
push
sbb
fimull
jl
in
mov
sub
sub
repnz
sub
adc
imul
lds
out
xchg
repz
or
into
lcall
fs
mov
insb
out
dec
sub
mov
add
dec
clc
or
rcr
mov
sbb
pop
push
dec
mov
push
push
and
pop
cmp
add
stc
icebp
sub
mov
rclb
sahf
insl
sarl
shlb
xlat
mov
fwait
inc
or
mov
insb
or
fadd
sbb
add
scas
mov
mov
push
pop
jl
aad
sti
movntq
push
push
jl
testl
push
mov
mov
mov
sbb
repz
in
add
mov
jnp
inc
popa
loop
mov
subps
fdivs
inc
jbe
mov
lock
repz
arpl
dec
fdivl
std
incb
sarl
or
add
inc
adc
sub
jb
adc
xchg
sub
loope
sbb
sub
sti
push
add
push
dec
rcl
mov
inc
stos
xchg
xor
shr
les
jecxz
ret
jmp
lret
push
sbb
dec
mov
popa
adc
ret
push
xor
lea
rcll
mov
sbb
and
jo
lcall
dec
xor
loope
popf
aad
mov
sbb
mov
add
lcall
push
dec
xchg
aad
dec
or
test
adc
pop
sti
and
push
iret
popa
sub
mov
cltd
rcrb
fs
fistpl
mov
popf
pop
pushf
xlat
inc
cmpl
jo
dec
pop
icebp
lcall
enter
cltd
pushf
inc
icebp
popf
or
daa
and
mov
jb
jmp
orb
mov
add
addl
add
xchg
jb
mov
aas
dec
cltd
pop
sbb
or
repnz
loop
lea
and
stos
test
ss
push
dec
daa
icebp
mov
les
mov
out
orb
cld
ljmp
lahf
push
lret
cmp
adc
inc
mov
and
fsubrl
sub
roll
adc
scas
fstl
sbb
sub
mov
shll
cmp
inc
mov
shll
push
cmp
cmp
add
scas
add
or
cmp
add
cmpsb
or
mov
aas
cld
aam
fisttpl
push
enter
jg
int
ljmp
insl
adc
jecxz
xchg
cltd
sub
mov
je
dec
mull
negl
xchg
mov
push
add
mov
xor
stos
mov
scas
dec
es
or
data16
fmuls
clc
inc
aas
jg
and
lea
mov
icebp
out
push
nop
adc
cmc
daa
inc
inc
cmc
mov
sub
in
adc
xchg
popf
push
ja
jecxz
and
lds
aas
sbb
pop
mov
ljmp
mov
sbb
fstpt
sub
cltd
andl
mov
ret
cmp
addb
xor
mov
jmp
mov
cmp
lea
mov
pushf
lahf
sahf
dec
aam
daa
cwtl
in
pop
out
push
adc
out
inc
js
into
adc
decb
outsl
mov
iret
dec
sti
shlb
out
cli
adc
jae
sbb
and
inc
stos
dec
int3
es
das
std
inc
daa
push
jecxz
xor
jecxz
into
adc
rcrl
xchg
popa
inc
jb
lea
mov
test
les
out
sbb
inc
js
sub
ret
inc
pop
testb
lret
popa
in
sub
jo
sbb
mov
adc
aaa
loopne
addb
sub
inc
sarb
repz
mov
fistps
daa
and
pop
les
loopne
shlb
mov
cmp
mov
sahf
sub
scas
fwait
add
call
cwtl
daa
cltd
fwait
push
imul
ja
mov
addr16
sub
iret
mov
lret
arpl
daa
orb
stc
cmc
jno
fdivrl
std
shrl
cmpsl
popa
or
jmp
outsb
lret
inc
push
xchg
dec
push
add
adc
into
push
fidivs
xchg
fcompl
jo
out
pop
push
xchg
fcmovbe
xchg
jo
jl
mov
outsb
shll
lods
out
xor
xor
insl
xor
add
sub
enter
xchg
test
js
mov
stos
jno
inc
mov
daa
fsubs
sbb
dec
add
daa
and
les
push
popa
xchg
mov
movsb
jno
lock
push
sub
jns
ss
lock
test
and
repz
adc
xchg
mov
aam
cld
push
inc
jno
cmp
in
cmp
xchg
in
out
mov
xchg
test
fs
lcall
or
push
pop
mov
push
jecxz
daa
xchg
or
in
add
test
loope
sarl
mov
lods
lret
cmpsb
fimuls
mov
aaa
adc
xor
jo
xor
hlt
or
sbb
pop
mov
popf
mov
sbb
mov
pop
add
idivb
pushf
xchg
mov
xchg
push
sub
sbb
insb
jge
test
xchg
insl
fisttpl
scas
dec
xlat
push
in
mov
pusha
clc
sub
repnz
popa
sbbb
jae
dec
inc
mov
imull
lea
cmpsb
push
roll
adcl
addr16
xchg
mov
pop
xor
mov
dec
adc
and
adcb
movsb
loopne
jns
test
and
sub
std
movsb
jnp
lahf
xlat
insl
call
push
scas
push
test
cmp
dec
rclb
mov
pop
cmpsb
mov
arpl
jno
test
lret
movsb
push
fidivrs
jle
or
aaa
dec
cmp
inc
test
cltd
ror
or
test
cmp
push
mov
cmp
push
sbb
popa
push
mov
add
and
jns
je
call
push
jae
dec
insb
add
bound
mov
lock
rcll
fwait
fwait
repz
add
push
push
pop
mov
dec
aam
ficomps
cltd
in
repnz
push
inc
loope
je
inc
mov
dec
dec
nop
xchg
cmc
cwtl
add
mov
inc
imul
push
push
pop
push
pop
pushf
pop
pop
and
pop
sub
mov
cli
add
test
xchg
add
jp
mov
stc
mov
inc
mov
ljmp
xor
scas
pop
dec
jg
dec
xor
mov
out
jnp
jmp
xor
jg
lock
mov
xchg
inc
cmp
xchg
filds
and
insl
sbb
cmp
bound
and
add
daa
rcl
out
inc
daa
fs
cli
adc
pop
jbe
xor
or
xor
int3
shlb
cs
divb
push
sti
pop
adc
sti
sbb
ds
cmp
les
addr16
mov
mov
lods
inc
xchg
fs
push
mov
in
jae
pop
ja
loop
cmc
dec
insb
xchg
fadds
out
aad
xor
iret
loopne
js
enter
mov
xor
jne
mov
adc
cmp
jle
les
fs
dec
mov
push
jno
cltd
xor
cmpsb
cmp
jae
hlt
aaa
lds
lret
testl
push
test
mov
js
jecxz
aad
adc
or
mov
cld
call
ljmp
inc
movsl
mov
scas
sar
mov
icebp
scas
push
inc
jecxz
fwait
test
sub
repz
adc
mov
jae
daa
jno
fs
mov
adc
popf
fcoml
cmpsl
fcompp
scas
xchg
pop
inc
cmp
adcl
mov
movsl
sbbb
add
les
sbb
push
iret
nop
cmp
loop
add
mov
xchg
sbb
mov
push
jo
js
divb
xchg
and
fmuls
in
mov
sahf
decl
dec
stos
fdivrl
inc
sahf
mov
inc
dec
or
mull
sbb
sahf
rolb
xchg
stc
and
pop
stos
mov
push
mov
add
cmpsl
jo
xchg
inc
and
mov
sub
adc
int3
in
or
xchg
fwait
mov
jmp
int
jno
lahf
stos
imul
rclb
roll
sbb
aam
cs
sub
mov
pop
shr
orl
fcomip
jb
ffree
lods
sub
cltd
scas
adcl
add
ficompl
dec
inc
out
push
cwtl
outsl
mov
inc
outsb
es
sub
adc
mov
or
push
mov
aam
gs
into
imulb
push
pop
das
sbb
mov
and
mov
mov
cmpsb
cmp
dec
cld
lcall
stos
dec
stos
cltd
jbe
push
push
ljmp
xchg
out
ljmp
cmp
stos
lds
mov
jno
mov
mov
ret
aad
cmp
enter
dec
jae
pop
adc
ds
mov
xor
xor
imul
dec
cmc
decl
lods
mov
xchg
hlt
pop
adc
rorb
dec
out
cmp
aaa
pop
cltd
or
jb
inc
outsb
push
arpl
std
aad
adc
loop
nop
xchg
rcrl
stos
inc
dec
mov
icebp
dec
jg
popf
xor
bound
or
push
jbe
or
pop
aad
xor
or
push
arpl
int3
pusha
pop
scas
sub
mov
inc
jl
or
or
jno
inc
je
ljmp
dec
outsb
push
sbb
loopne
adc
aas
push
and
loopne
jbe
or
rcrb
movsb
mov
leave
add
cmp
adc
inc
arpl
es
or
add
repz
mov
dec
pop
rep
call
mov
ret
mov
mov
int3
sbb
mov
icebp
inc
addr16
pop
stc
popa
mov
adc
mov
xchg
or
sbb
out
aad
and
push
stc
push
add
pop
js
int
addr16
ljmp
inc
jbe
xor
mov
icebp
arpl
mov
pop
andl
test
xchg
aaa
push
imul
pop
sub
mov
mov
int
inc
dec
mov
jbe
andb
pop
push
scas
loopne
shrl
sbb
ja
mov
rcrb
cmp
cs
scas
push
or
stos
pop
ror
sbb
decb
mov
sub
pop
push
movzbl
enter
mov
addl
loopne
iret
aad
fcoms
rorb
mov
rcl
into
mov
cmp
mov
enter
rcl
jmp
jp
popf
call
add
test
dec
and
enter
or
jg
mov
pop
and
std
add
int
mov
sub
arpl
and
data16
or
adc
das
stc
aad
ja
movsl
call
dec
out
mov
std
in
roll
imul
push
leave
fnstsw
es
mov
mov
adc
dec
dec
pcmpgtw
jecxz
xlat
outsl
mov
inc
jbe
jp
mov
lea
adc
mov
push
or
shlb
mov
mov
stos
push
sbb
cld
je
mov
xor
enter
daa
jo
dec
or
out
mov
fisubl
clc
mov
adc
pop
repz
inc
pop
sub
cmp
xchg
sahf
fcmovnbe
mov
ja
and
outsb
les
cmp
enter
shr
dec
inc
mov
mov
stos
mov
inc
jp
and
bound
ror
lds
into
pop
add
stc
ss
out
cmp
mov
add
xchg
mov
out
insb
cmc
and
mov
movsl
pop
fcom
jl
pop
inc
cmp
mov
dec
and
mov
repz
data16
repnz
jns
push
mov
dec
sahf
in
fidivrs
mov
rcrb
mov
jnp
xchg
sbb
mov
cmp
loop
mov
jg
incl
sahf
outsl
sbb
mov
inc
jnp
push
pop
repz
sbb
sbb
sahf
or
in
jl
icebp
pop
flds
js
cltd
pop
pusha
scas
push
int
mov
lahf
xchg
cld
aaa
push
pop
sbb
sub
push
xchg
icebp
aas
pop
mov
hlt
std
aas
repz
ret
xchg
or
jno
pop
in
push
pop
out
rep
and
lds
cmc
sarb
mov
ret
mov
rcrl
ret
mov
mov
dec
cmc
pop
xor
nop
xchg
or
cmp
pusha
rcl
ljmp
cmp
mov
mov
push
jp
add
hlt
movsl
or
cmp
mov
sub
andl
dec
inc
fildll
cmp
lea
lret
shlb
fxch
stos
bound
push
pop
fsts
xor
stos
cmp
inc
dec
imul
aas
ja
push
lea
push
jns
pop
or
add
dec
jno
jbe
fstps
xchg
inc
aam
jecxz
out
fistps
fld
aaa
xchg
insb
cmp
movsl
ds
dec
or
nop
stos
cmp
or
add
out
pop
inc
mov
out
inc
sub
pop
adc
repz
mov
push
jo
imul
sbb
adc
daa
fisttpl
ljmp
sub
jns
jle
mov
xor
int
cs
dec
punpckldq
xchg
rclb
inc
add
inc
cmp
xchg
jmp
jbe
mov
sub
out
xchg
sub
addb
out
lds
ds
subb
fnstsw
dec
push
mov
fdivrl
add
xchg
clc
cmp
xor
dec
pop
push
sub
mov
xchg
jmp
loop
xchg
mov
les
cmpsl
out
popf
orb
cld
notb
iret
lock
adc
popa
cmp
sbb
arpl
test
cltd
adc
into
pushf
mov
das
repnz
push
outsl
adc
dec
cmpsb
dec
sbb
scas
mov
pop
xor
mov
push
repnz
mov
iret
ja
cli
addb
add
out
incl
movsl
adc
les
rorb
push
mov
icebp
inc
mov
mov
outsb
mov
add
mov
pop
dec
or
mov
and
roll
lods
jbe
lea
fstpl
hlt
pop
int
sbb
sub
enter
hlt
xor
jge
movsl
and
xchg
add
sub
add
jne
insl
loope
stos
ret
xor
mov
push
popf
xor
hlt
pop
sarb
sub
adc
sub
push
dec
fisttpl
jb
leave
or
adc
pushf
add
scas
adc
imul
outsl
andl
and
jae
or
aaa
int
mov
jb
push
imul
xchg
mov
mov
inc
mov
shll
mov
xchg
rorb
in
jnp
nop
add
xchg
data16
jecxz
cs
loopne
pop
popf
fcmovu
shl
cmp
xchg
jb
xchg
xor
mov
xchg
inc
lahf
mov
push
mov
cmpb
dec
lea
xchg
fs
xor
cmp
lods
adc
jmp
push
jmp
pop
xchg
xchg
fstps
sub
jge
movsb
fldcw
mov
out
pop
cmpsl
fsubr
jge
lods
xchg
dec
push
scas
std
inc
adc
adc
sub
lahf
pop
movsb
aam
lds
leave
idiv
pop
add
ja
jecxz
outsb
mov
out
add
shll
in
lea
dec
and
mov
mov
dec
mov
dec
in
push
push
lea
jg
adc
mov
cmp
mov
adc
adc
mov
push
jnp
ret
and
inc
lods
movsb
pop
cmp
mov
loope
in
push
ret
inc
add
int3
aas
cltd
cmp
dec
mov
bound
mov
xlat
pop
sbb
subb
push
adc
insl
lret
or
jl
or
xchg
xchg
mov
cmp
or
xchg
lret
movsb
push
jae
jp
push
adc
push
and
xchg
xor
jb
mov
ficomps
xlat
fs
cmp
ja
loop
mov
shl
adc
aas
test
ljmp
or
popl
and
incb
jae
cmp
shl
add
adc
fsubrs
add
lret
mov
mov
call
mov
inc
xchg
data16
lea
pop
das
ds
imul
sti
mov
imul
xor
dec
mov
hlt
ja
add
mov
neg
add
add
aas
and
jb
adc
push
in
pusha
fsts
dec
push
jae
mov
adc
xor
xchg
nop
in
inc
outsb
imul
xchg
pop
push
jns
inc
or
lret
mov
push
inc
inc
sbb
aas
push
cld
fcmovnb
mov
sub
dec
scas
out
mov
or
mov
cmc
in
je
test
mov
test
arpl
mov
insl
int3
dec
sbb
pop
adc
std
cmp
inc
and
adc
mov
mov
test
xor
jl
fldl
leave
cmp
sbb
push
mov
and
mov
xchg
or
jl
adc
cmp
sub
ljmp
out
lods
mov
mov
pop
push
mov
pop
xchg
sub
mov
push
mov
fisttps
int3
lock
call
fimull
inc
adc
lret
in
push
dec
loope
and
hlt
sbb
movsl
mov
stos
push
inc
nop
imul
mov
mov
pushf
std
ret
es
push
mov
test
xorb
sbb
lahf
sub
cmpsl
mov
and
sahf
fidivs
loopne
push
push
mov
into
cltd
adc
fidivl
fdiv
and
xor
or
sub
dec
outsl
stc
in
imul
mov
push
pop
loope
xchg
arpl
sahf
and
roll
testb
fildll
pop
lea
mov
mov
test
inc
pop
mov
gs
fmul
sbb
sbb
int
cmp
mov
iret
dec
repz
cmp
xor
dec
insb
mov
int
mov
aad
inc
push
sahf
and
adc
rcrl
fdivl
push
outsb
push
mov
ret
jns
in
hlt
dec
gs
roll
push
xchg
push
repz
pusha
xchg
mov
add
and
call
ds
dec
sub
fs
jl
or
add
fnstenv
jmp
ss
movsl
scas
xlat
jae
mov
jle
cli
out
dec
push
aas
add
xor
iret
or
and
cmp
pop
pop
in
pop
or
dec
sbb
add
pop
cmpsl
or
xchg
addr16
xor
test
fisttps
xor
fs
scas
xchg
int3
adc
popl
pop
imul
es
xchg
out
sbb
jae
add
aaa
pop
xor
or
out
ficomps
inc
outsl
sbb
aaa
xchg
mov
or
add
roll
mov
or
mov
push
mov
in
pop
add
fmuls
and
stos
insb
bound
pop
dec
popf
shll
xchg
mov
mov
or
lret
test
lods
xor
xchg
subb
nop
sub
aas
mov
cmpb
outsb
insl
fwait
mov
fadd
pop
pop
sub
cmc
xor
mov
outsb
lret
mov
stc
stos
call
test
sub
add
xchg
xchg
cli
sub
pop
jmp
rcll
js
cmp
lcall
xchg
hlt
cmp
incb
adc
push
pop
lret
xchg
test
daa
int
ds
into
punpcklbw
adc
mov
dec
divb
mov
test
loope
cmp
enter
insb
pop
imul
cld
aaa
lret
inc
jne
pusha
push
push
inc
mov
push
mov
dec
pushf
scas
call
mov
jmp
mov
push
inc
jecxz
xor
inc
outsb
addr16
sti
cs
aaa
mov
xchg
dec
sbb
mov
jb
mov
cltd
cmpsb
sub
pop
xchg
insl
fists
xor
jg
stos
mov
jle
mov
mov
push
mov
dec
leave
enter
mov
xabort
pop
xlat
icebp
push
cmp
insb
sub
lds
lcall
xchg
jns
pop
and
pop
xlat
and
sbb
push
and
mov
iret
push
sub
loope
out
and
repz
mov
jl
int3
xlat
in
lret
add
mov
sub
xchg
mov
add
dec
call
add
or
or
mov
cmpsb
add
js
loope
cli
or
or
lods
sbb
xchg
ds
fs
add
repnz
mov
pop
mov
mov
shl
cmp
mov
hlt
loop
adc
inc
jo
or
push
mov
ret
mov
xlat
xchg
shrl
inc
add
fstp
frstor
jo
rorb
mov
lock
fs
je
ret
adc
mov
rcrb
into
lock
push
sub
xor
and
dec
push
jns
mov
adc
or
inc
sub
rcrb
mov
push
push
and
test
je
sub
pusha
push
enter
xchg
pusha
std
bound
inc
fs
std
sbb
pushf
dec
sub
cmp
daa
mov
push
xchg
outsl
testb
jmp
jnp
inc
mov
push
test
mov
movsl
sub
adc
pop
movb
jae
rcrl
mov
iret
in
pushl
sahf
xor
pop
out
out
mov
enter
adc
lcall
jae
cmpsl
out
ja
mov
push
out
dec
loope
and
sbb
pop
push
mov
jp
es
ret
js
lret
mov
mov
in
jl
pop
iret
jne
fidivrl
sbb
sub
aaa
push
popa
jp
cmp
js
add
sub
cmp
mov
insl
aaa
sub
and
jne
mov
jno
cmp
popa
sbb
or
fcmove
jbe
fs
lock
adc
rcl
push
popf
mov
pop
mov
dec
call
push
mov
add
sbb
jne
jg
xchg
xchg
mov
in
jg
add
out
cmp
ss
out
dec
mov
jmp
pop
dec
sub
mov
ret
clc
enter
fimull
shr
jle
ret
and
pop
adc
xlat
sbb
ret
loope
in
jecxz
pop
int3
mov
xchg
orl
cmpsb
sbb
inc
sbbb
mov
aad
mov
or
addr16
sub
push
enter
notl
jae
xchg
clc
xchg
or
movsb
scas
cmp
jp
fnsetpm(287
mov
aas
pop
stos
aam
mov
decl
sbb
movsb
xchg
clc
xor
cli
icebp
xchg
addb
or
pushf
sti
and
mov
mov
mov
mov
imul
push
sbb
movsb
cltd
and
lahf
loop
adc
sbb
pop
xor
sub
ud1
jmp
insb
out
divl
push
mov
dec
and
push
jne
rcrl
lock
pop
imul
dec
xchg
dec
xchg
js
mov
ja
out
popf
loope
adc
push
mov
lcall
outsb
or
loopne
jne
test
and
loopne
lret
rol
add
xchg
pop
arpl
mov
xchg
ja
lret
jo
cmc
push
cs
outsb
inc
push
cmp
fwait
pushw
inc
or
jmp
mov
in
cld
test
dec
jb
mov
addr16
scas
push
movb
dec
xor
insl
adc
push
sub
leave
mov
pop
sarb
cld
sub
test
fnsave
inc
daa
inc
inc
xchg
xchg
lahf
mov
mov
and
ss
outsl
inc
push
in
test
scas
and
or
rclb
pop
xlat
daa
sub
xchg
and
adc
jno
mov
and
lods
xchg
push
imul
jb
pop
loop
loope
in
lret
and
je
stos
mov
xchg
fbld
inc
mov
push
mov
add
jne
stc
pop
or
divb
loop
dec
addr16
inc
lods
movsb
imull
xlat
in
sub
outsl
int
adc
scas
negb
pop
mov
and
pop
sbb
frstor
mov
xor
xchg
xchg
mov
dec
inc
out
jmp
pop
cmp
and
dec
hlt
mov
daa
xchg
pop
nop
lds
xchg
shll
push
mov
push
cwtl
testl
jmp
popa
sbb
fsubrs
std
movsb
scas
dec
mov
das
mov
call
push
sbb
cmp
and
mov
clc
loop
dec
or
dec
int
cltd
lods
iret
out
aam
push
add
mov
push
and
mov
aam
add
adc
jmp
je
push
pushl
insb
mov
mov
bnd
fucomi
mov
dec
push
push
js
arpl
pushf
cli
pop
add
aas
mov
nop
mov
xor
sub
popf
xor
sub
imul
xchg
mov
sbb
inc
mov
scas
fdivr
cltd
fs
stos
ljmp
push
xchg
adc
data16
test
jns
push
jnp
mov
clc
xchg
jbe
movsb
filds
mov
loopne
outsb
sbb
mov
jl
push
xor
mov
cltd
jecxz
sbb
cmc
imul
lds
adc
pop
lret
push
or
leave
add
pop
jbe
mov
pop
dec
inc
and
mov
cld
add
pop
jo
xorl
or
daa
fs
sub
test
mov
dec
cwtl
incl
das
lds
enter
lcall
shlb
ret
push
push
lret
cmp
popf
imul
lcall
pop
das
mov
xchg
cmpsl
adc
add
cs
inc
enter
nop
sti
pop
cmp
push
add
pop
or
in
test
lcall
adc
mov
mov
stos
repz
cmc
loop
adc
out
pop
ret
push
pop
or
bnd
dec
and
sbb
pop
jmp
call
pop
aaa
pop
ficompl
lcall
lods
jg
imul
jmp
arpl
sub
pop
cmp
into
xorb
cmp
xchg
and
repz
mov
pop
movsl
cwtl
dec
mov
mov
cs
subps
sbb
lds
movsb
call
fdivrl
push
ret
xor
data16
mov
repnz
push
cmp
je
movsl
shrl
pusha
jo
xlat
jo
mov
sbb
loop
jmp
ss
mov
cmp
xchg
sahf
jbe
arpl
sub
aaa
pop
lret
hlt
int3
loopne
int
adc
clc
lea
jp
fidivl
maskmovq
testl
mov
ljmp
cs
adc
mov
push
pusha
inc
fidivs
cmp
mov
push
cld
jecxz
in
incl
mov
loop
sub
adc
xchg
jge
sbb
pushl
push
in
mov
and
jae
push
mov
std
movsb
cmpsb
add
adc
shr
xchg
mov
add
mov
subl
gs
cmpl
inc
jae
scas
orb
sbb
xchg
xchg
lock
pusha
mov
subb
adc
mov
les
mov
in
adc
divl
mov
int3
loop
test
seta
xchg
sub
mov
loop
cmc
and
cmp
jne
inc
jo
es
in
xchg
rorl
nop
adc
test
fstp
lds
std
cli
or
rcrl
nop
addr16
xchg
jecxz
push
jg
aam
mov
sbb
xor
sub
test
sahf
jmp
stc
fs
push
rcr
dec
cmpsb
pop
outsl
xor
mov
and
imul
dec
nop
rorb
mov
outsb
inc
imul
mov
pop
mov
add
cmpsb
jg
sbb
mov
mov
repnz
jmp
cmp
xor
sub
fsts
push
xchg
shr
es
push
stos
mov
mov
cmc
rcrb
sbb
insb
xadd
adc
popf
mov
cmp
movsb
fdivr
jns
in
inc
test
iret
lock
aas
mov
cmp
xchg
inc
adc
lcall
aaa
xchg
pop
jl
push
repnz
mov
ja
mov
mov
mov
and
movsb
sbb
fisttps
jmp
mov
fnstsw
add
out
inc
dec
mov
cmp
mov
stos
xchg
pop
outsb
xchg
mov
test
rol
mov
mov
mov
fwait
cmp
jne
mov
lret
pusha
and
faddl
pop
adc
scas
jp
stos
test
push
pop
loope
and
shll
xchg
mov
cmpsl
mov
sbb
repnz
or
inc
rcrl
pop
mov
cmp
push
loope
add
push
jp
fisttpl
shl
movsb
stos
and
jnp
xor
mov
mov
loope
bound
out
mov
pusha
adc
adc
adc
jmp
jo
stos
inc
dec
popf
or
and
jbe
idiv
aad
xchg
movsb
mov
dec
xor
out
je
aas
xchg
jle
or
pop
rcrl
out
adc
cmpsl
fcompl
frstor
addr16
dec
out
dec
dec
xlat
dec
mov
cs
ret
ljmp
fcmovbe
dec
pop
dec
lods
fldt
adc
xlat
scas
pop
out
pop
test
add
and
das
ljmp
int3
aad
xchg
movsl
or
aas
jno
xor
fmulp
lret
adc
scas
and
arpl
loopne
stc
xchg
sbb
clc
mov
jmp
fldl
adc
scas
pop
fistl
lcall
ficompl
sbb
cltd
cmpsl
inc
in
in
mov
add
repnz
adcb
jo
cli
or
pop
sti
in
es
imul
cmp
dec
in
lret
icebp
scas
mov
xchg
push
dec
lahf
cld
adc
sti
ret
jg
gs
test
inc
imul
jno
insl
or
in
jg
xchg
mov
dec
push
in
es
xor
daa
add
sahf
cmc
dec
pusha
and
jb
sahf
jns
jnp
in
aad
roll
pop
adc
jle
sahf
popa
btc
mov
fsubrs
test
sbb
adc
pop
adc
outsl
adc
dec
scas
ret
lea
sub
pop
cmp
stos
dec
sbbl
sbb
shl
mov
inc
jp
iret
jl
movsb
pop
push
xchg
das
test
and
jl
mov
sub
mov
pop
pop
aad
sbbl
push
add
cmp
movsb
lods
add
mov
stc
fcoms
mov
or
aad
adc
dec
and
test
jbe
call
int
enter
test
push
in
jmp
xor
pusha
or
pop
and
hlt
std
dec
js
lcall
mov
faddp
loope
insl
inc
gs
out
les
lahf
fimuls
outsl
out
mov
inc
int
mov
fdivrs
push
clc
fs
xor
add
cmp
jp
pop
push
fldt
dec
inc
pop
cmpsl
cmpsl
and
imul
jb
packsswb
jnp
jb
imul
loope
and
xchg
jb
roll
adc
cli
movsb
xor
mov
sti
adc
mov
push
in
cld
cmp
or
lods
mov
lods
int3
jae
sbb
dec
jp
xchg
xchg
sub
ds
or
das
adc
dec
aas
push
filds
add
push
push
xor
es
push
stos
xor
pop
scas
into
mov
sbb
addr16
pusha
gs
je
pop
int
and
das
push
call
mov
inc
xor
out
cltd
repz
arpl
iret
and
or
fistps
push
mov
jp
enter
lds
xchg
js
dec
push
js
and
aad
repz
gs
lret
xchg
jbe
movsl
out
pop
dec
hlt
dec
pusha
xchg
xchg
dec
fs
je
outsl
sub
das
lods
mov
popa
sbb
push
adc
les
push
lahf
xchg
les
mov
lods
fldt
mov
lods
aam
aas
xchg
mov
add
int
cli
out
fwait
mov
push
or
cmpsl
inc
mov
add
lods
fsubrs
and
inc
mov
xchg
xchg
jmp
pop
pop
scas
test
and
or
mov
xchg
push
pop
mov
pushf
fdivr
jle
notb
cmp
test
outsb
dec
mov
cmp
xor
and
jne
inc
sbb
sahf
out
mov
xchg
inc
fwait
sub
loop
rcll
and
lods
lret
sarb
push
imul
shrl
xor
jo
sbb
sbb
outsb
in
js
mov
adc
jne
sbb
and
aaa
jp
mov
or
loope
lret
js
push
aas
cmc
out
add
mov
pop
mov
gs
mov
lret
int
jl
pusha
lods
std
pop
and
mov
loopne
lahf
pusha
ret
sub
fnstsw
jae
mov
pop
or
lahf
sub
add
loopne
jmp
fidivs
lock
loop
cmovg
add
cs
mov
sub
add
jmp
xor
fmul
leave
je
push
and
jecxz
popa
push
test
mov
mov
adc
daa
loop
or
ret
loope
cmpsl
add
xchg
arpl
inc
in
roll
xor
out
loop
cmp
push
test
sbb
test
cmp
push
mov
loopne,pt
sub
or
xor
aas
mov
and
cli
lods
pop
lea
loopne
aad
sbb
lret
popf
test
lods
insb
repnz
and
xchg
and
jmp
mov
test
mov
or
sbb
imul
rolb
cmp
add
sbb
push
out
scas
icebp
jbe
dec
int3
push
pop
ss
sbb
ljmp
mull
adcl
add
jae
ror
pop
nop
fisubrs
sub
jae
mov
outsl
rorb
add
sahf
out
bnd
scas
or
jae
jg
jmp
ja
shll
xor
mov
xchg
imul
xchg
pop
xor
mov
xor
adc
xchg
xor
sub
xor
int
mov
nop
scas
pop
movsb
push
dec
adc
les
aaa
fimuls
push
imul
cmpb
push
pop
sbbl
mov
mov
fnstenv
xlat
xor
jmp
in
adc
mov
sarb
add
outsl
and
push
sarb
cmp
mov
jecxz
popf
pop
adc
shr
sahf
and
and
xchg
push
mov
xchg
popf
adc
mov
pusha
xor
pop
sub
jle
push
inc
dec
xor
cs
and
cmpps
mov
add
and
pop
loop
mov
mov
cwtl
jae
cli
push
in
cmp
pusha
loopne
leave
push
test
add
push
adc
and
fldenv
or
dec
out
mov
mov
pop
btc
lret
mov
xchg
xor
ficoms
pop
sbb
inc
dec
outsb
cwtl
shrl
or
inc
pop
sub
stc
fldcw
punpckhbw
test
add
imul
add
jne
xor
mov
cmp
mov
mov
es
dec
dec
fadds
inc
daa
cmp
lret
sbb
movb
push
jl
nop
xchg
adc
popf
sarl
or
jnp
ret
pop
xor
xor
xor
push
jbe
scas
scas
jmp
arpl
repnz
inc
or
sbb
iret
mov
inc
pop
sarb
repnz
cmpsb
fcoms
int
std
imul
daa
imul
and
notb
xchg
mov
lea
insb
pop
push
or
movsl
mov
fstpl
addl
add
jecxz
sub
xchg
aas
pop
mov
sub
loop
xor
mov
call
stc
jecxz
push
popa
sbbb
imul
mov
pop
ja
add
push
outsl
jg
ret
lock
jecxz
fldcw
gs
xchg
cmpsl
test
lods
mov
mov
dec
mov
daa
fwait
in
push
arpl
pop
ja
jl
xor
sbb
cmp
ficoms
push
jb
sbb
cmpsb
dec
pop
push
and
bnd
das
rol
xchg
repz
mov
push
in
movsl
shlb
out
subb
adc
sbb
arpl
sub
and
add
pushf
sbb
mov
lea
mov
lea
adc
pop
jb
dec
les
out
inc
jns
test
lahf
and
hlt
aaa
mov
inc
or
add
dec
aas
int
sti
in
leave
and
cmp
movsb
jno
mov
orps
sbbl
les
iret
xchg
ret
sbb
insl
cmp
sbb
out
push
fs
xchg
mov
cmpsb
flds
pop
push
lea
lret
imul
pop
jae
adc
and
jge
inc
pushf
inc
dec
jnp
es
xor
cmp
pop
addr16
add
pop
adc
mov
stos
sub
cmp
ss
inc
in
dec
jl
xchg
jne
dec
fmul
jns
pop
daa
xchg
xchg
test
or
into
movsl
dec
notb
sub
stc
or
mov
rorl
xchg
or
jo
jp
dec
sub
int
ret
sub
or
mov
dec
jmp
jecxz
insb
popf
cld
mov
insl
mov
insl
in
push
push
dec
jne
js,pt
fmul
mov
dec
fisubrs
sahf
xchg
push
mov
out
push
insl
in
sbb
xchg
int3
push
out
xor
dec
mov
pop
daa
fmuls
cwtl
xchg
shrl
lcall
movsl
mov
outsb
in
xchg
sub
push
inc
dec
push
pop
lcall
pop
icebp
pop
adc
repnz
push
adc
sbb
out
mov
or
xor
push
jo
lret
mov
inc
adc
loop
lahf
popa
gs
dec
loopne
popa
int3
shld
pop
ljmp
mov
stc
lcall
cmp
push
dec
adc
arpl
jmp
or
scas
cmpsl
mov
pop
push
push
xor
jp
sbb
sti
mov
pusha
push
imul
fdivs
push
mov
fdivrp
out
or
testb
pop
mov
daa
movsb
mov
lods
nop
sbb
xorl
xor
xchg
lea
test
jae
cmp
cmp
enter
clc
negb
mov
out
out
xchg
and
ficompl
sbb
jne
pop
adc
cmpsb
test
xchg
cmp
std
adc
adc
mov
les
ror
jle
movsb
push
xchg
push
adc
mov
pushf
out
mov
std
movsl
and
imul
test
add
or
mov
mov
ljmp
repnz
mov
in
jl
test
enter
add
cmp
lods
imul
stc
jno
inc
je
pop
lcall
pop
lods
cld
test
cwtl
outsb
mov
mov
mov
sbb
push
out
jnp
mov
cmc
ret
adc
lock
xlat
das
aas
and
add
fstl
and
inc
dec
xor
aam
loop
pop
fsub
cmp
cli
jns
or
fisubrs
jmp
repnz
je
scas
jae
pop
cwtl
rcr
into
or
jecxz
and
jns
mov
jmp
add
inc
inc
and
movsl
stc
sbb
out
xor
inc
jo
adc
incl
iret
js
loopne
xchg
cld
iret
out
push
pusha
pop
sti
jmp
add
test
nop
or
jle
add
imul
mov
es
subl
rol
mov
xchg
adc
aas
lahf
inc
mov
mov
mov
push
pushl
scas
mov
pop
or
jae
out
stos
sub
dec
or
or
loopne
notl
lahf
mov
pop
ret
and
ss
ficoml
xor
outsl
test
js
xchg
mov
sub
mov
icebp
mov
mov
cld
xor
out
xlat
mov
push
xchg
dec
sbb
in
loop
jmp
jno
xor
mov
push
xor
and
add
adc
jl,pt
or
dec
rcll
movsb
aaa
repz
jo
hlt
adc
mov
and
push
fldcw
rorl
push
loope
mov
sbb
mov
scas
arpl
cli
out
cmpl
lea
loop
fcom
add
xor
jge
push
push
xchg
stc
out
loop
inc
or
or
enter
fwait
inc
jp
mov
xchg
pop
add
sbb
enter
mov
in
pop
and
push
push
jg
leave
add
lock
rorb
adc
inc
jmp
out
dec
or
sbb
in
xchg
push
outsb
enter
xchg
xor
in
ja
fidivs
mov
div
dec
xor
mov
pusha
mov
or
xchg
test
enter
inc
and
sahf
movsl
neg
xor
addr16
xor
test
mov
mov
xchg
pop
aam
inc
loop
pop
pusha
shlb
fsubs
xlat
adc
lds
cmp
jns
sahf
std
gs
xor
mov
into
out
or
fcoms
ja
sub
jle
and
push
xchg
ret
imul
push
sbb
test
cld
mov
mov
mov
jae
lret
fnsave
dec
jg
cmp
dec
sbb
pop
movsb
push
jnp
in
cmpl
xchg
arpl
jmp
jmp
in
imul
movl
sbb
cld
dec
push
ja
push
out
aad
popa
repnz
mov
mov
lods
pop
adc
pop
fistps
push
mov
pushf
mov
test
mov
push
mov
adc
mov
std
mov
pop
add
mov
bound
in
inc
sbb
sahf
push
mov
aas
int3
outsl
daa
jno
nop
lea
xlat
pop
pop
adc
repnz
sub
dec
inc
adc
inc
aaa
fistpl
push
push
rol
inc
push
ja
sbb
mov
outsl
dec
or
mov
mov
movsb
mov
xchg
outsb
loope
push
cmp
hlt
dec
inc
dec
sti
pusha
sub
loop
inc
add
add
jmp
xchg
jle
in
adc
inc
mov
test
jge
mov
sub
pushf
dec
xchg
add
xchg
xchg
pushl
in
filds
xor
mov
outsl
mov
mov
mov
negl
mov
inc
lret
push
or
mov
aaa
cmp
inc
or
push
out
xchg
add
mov
dec
inc
je,pt
rcrb
mov
call
in
pop
nop
mov
and
fistl
insb
arpl
repz
mov
lods
fadds
lret
or
mov
and
add
sbb
add
jge
pop
mov
rorl
cmc
popf
sahf
icebp
dec
cmp
rorl
push
sbb
lea
fwait
sub
cmp
std
in
add
cmp
stos
push
pop
jbe
pop
dec
aam
push
ljmp
cmp
aaa
ret
mov
das
jmp
pop
jnp
mov
cmovne
pop
scas
mov
add
xchg
clc
ficoms
mov
inc
cld
cmpsb
inc
xor
test
mulb
aaa
dec
mov
add
stc
fprem1
testb
adc
test
mov
xchg
xchg
xchg
test
and
dec
jno
xor
add
or
xor
cmp
mov
aam
or
inc
daa
enter
mov
xchg
or
cmpsl
sbb
cmp
test
pop
sahf
adc
add
mov
push
cltd
bound
cmpsb
or
xchg
fistpll
sbb
push
daa
cmpsb
lret
cmc
mov
pusha
in
rorb
idivl
adc
push
lcall
push
leave
stos
jl
dec
mov
adc
fldcw
or
ds
lret
jbe
add
dec
out
test
cmp
loope
in
stos
insl
jae
sbb
pop
cmpsl
add
add
xor
jae
dec
pop
fcoms
inc
into
les
mov
insl
mov
idiv
sub
mov
pop
pusha
test
addl
pop
xlat
mov
xchg
nop
xchg
lret
sub
sarb
stc
mov
inc
jns
push
scas
sub
gs
lds
sub
mov
adc
lret
divb
adc
push
gs
adc
icebp
mov
xchg
xchg
inc
push
mov
fldt
icebp
enter
pop
xor
aam
or
js
sbb
cltd
insl
loope
pushf
dec
inc
mov
lods
adc
xchg
mov
xor
cli
or
stos
stc
fdivrs
bound
mov
xorb
pushl
outsl
adc
aas
xchg
mov
xlat
inc
xor
lcall
mov
jae
cmp
pop
lods
xorl
lods
sti
mov
popa
loop
call
jp
add
sbb
popf
xchg
daa
pop
xor
lret
lahf
jne
std
dec
enter
add
add
mov
shl
sub
lds
es
push
pop
daa
xchg
xchg
cwtl
outsl
insb
shrb
negb
mov
lock
ljmp
es
mov
lcall
or
pop
pop
ss
xchg
fldt
aad
or
xor
cwtl
mov
mov
push
les
sub
mov
fwait
out
jno
adc
and
into
push
pop
aaa
mov
push
and
or
ds
call
sub
lods
xchg
lods
push
sub
clc
pushf
push
loopne
sub
and
lahf
stos
or
in
std
and
cmp
jle
xor
inc
sbb
mov
push
mov
aad
cmp
mov
bnd
sub
pushf
ds
inc
and
add
out
cmpsb
loopne
cmp
sahf
clc
mov
pop
push
push
sub
adc
xor
cmpsl
repnz
jmp
or
cli
imul
es
jmp
xor
test
mov
inc
imulb
mov
jnp
push
arpl
int3
arpl
xchg
out
push
jne
scas
jle
pop
imul
scas
call
xchg
and
insl
pusha
fsubl
jnp
pusha
stc
jp
icebp
lret
cmp
fisubs
push
pop
cmp
dec
push
xchg
mov
dec
inc
addr16
and
mov
push
cltd
es
into
lcall
daa
mov
push
lods
push
add
jge
or
out
mov
ss
jb
inc
loop
cmpsb
int3
test
loopne
add
mov
cltd
in
add
sub
scas
push
pop
jmp
ret
sarb
and
divl
inc
js
dec
mov
lds
cmpsb
sbb
push
jbe
inc
fucomi
cmp
jg
sbb
cmp
sub
mov
adc
xchg
ret
mov
das
js
insb
sub
mov
and
sub
jb
movsl
shll
repnz
xor
addl
shlb
test
adc
aad
sbb
sub
pop
or
jp
sbb
lret
jae
jbe
into
divb
inc
cltd
bound
gs
mov
add
push
pop
adc
or
mov
loop
shlb
push
negb
cmp
xchg
add
outsb
in
add
fiadds
call
or
test
cmp
gs
mov
stc
dec
aas
es
and
bound
xchg
cmp
jae
push
sub
push
imul
in
outsl
aaa
mov
or
dec
jp
test
add
shlb
lcall
jmp
push
ds
scas
or
sahf
jnp
imull
dec
lods
mov
data16
popf
and
sbb
repz
int3
fs
arpl
ljmp
dec
jbe
xchg
cli
push
adc
xor
scas
mov
mov
sbb
inc
loopne
sbb
xor
mov
add
adc
push
add
adc
jp
icebp
jg
add
dec
ja
and
push
cli
test
cmp
and
jg
orb
mov
mov
or
outsb
inc
cmp
lret
dec
in
mov
sub
push
mov
xor
jns
adc
xor
ljmp
and
adc
adc
and
notl
push
loopne
lods
mov
xorl
fwait
dec
jne
cwtl
cmp
jns
aas
movsl
aas
push
add
push
mov
lds
ret
adc
pop
addb
fst
mov
rolb
and
xchg
mov
mov
adc
out
cltd
dec
jnp
inc
movsb
and
adc
cmp
lds
dec
and
pop
ljmp
push
push
stos
mov
into
lcall
ss
mov
jnp
or
push
inc
pop
testl
rolb
cli
cmp
or
test
je
pop
xchg
mov
pop
pop
pop
inc
pop
xchg
scas
pusha
mov
cmpsb
call
imulb
repnz
sub
mov
mov
aad
and
jmp
adc
dec
and
xor
cmp
adc
cmp
add
lret
int3
movsb
xlat
scas
ret
adcl
xchg
pop
iret
mov
xor
inc
dec
sbb
push
mov
ror
adc
cmp
loopne
push
xchg
push
xor
icebp
fistps
or
pop
cmp
cmpsl
add
mov
adc
mov
mov
ret
push
dec
mov
adc
or
dec
test
mov
bound
cltd
fistpl
mov
mov
jecxz
push
shrb
xchg
in
xchg
lods
out
cmp
shrb
jp
adc
sub
sub
inc
mov
cmc
enter
push
stc
xchg
cwtl
flds
pop
jno
test
and
mov
sub
gs
mov
int
std
mov
or
fldl
mov
mov
push
stos
rorl
cltd
movsb
pop
leave
inc
pop
out
loop
out
add
aas
xor
mov
and
mov
out
fnsave
dec
stos
cli
push
loope
xchg
push
ret
ja
jecxz
cmc
jbe
mov
int3
pushf
imul
push
mov
push
test
mov
sbb
imul
push
mov
lret
adcb
das
push
push
lea
ss
xchg
mov
xor
lret
insb
dec
scas
and
jae
adc
shufps
add
or
iret
imul
dec
ds
push
dec
jmp
std
cmp
xlat
lahf
fisttpll
jmp
push
pop
inc
dec
ljmp
adcl
arpl
xor
sahf
subl
xor
test
popa
sbb
ret
adc
dec
cltd
in
or
cmc
add
int
in
jge
xorl
add
pop
pop
addr16
xchg
push
int3
mov
lcall
or
sbb
in
into
hlt
movsb
and
nop
push
cltd
insb
scas
add
jecxz
dec
push
int3
inc
icebp
cmpsb
push
xchg
ret
lcall
insb
sbb
imul
mov
and
cli
test
dec
in
fsubr
test
mov
sub
aas
xor
push
inc
pop
insb
xor
test
pushf
mov
jae
nop
in
movsl
aad
orb
xchg
es
imul
pushf
outsl
sbb
lods
mov
sbb
loope
add
xchg
sbb
mov
and
sbb
xchg
push
dec
adc
pop
idivl
mov
and
mov
adc
std
lcall
fsubp
push
pop
cmp
mov
pop
les
in
jmp
pop
stos
sti
mov
add
or
and
jb
mov
mov
mov
pop
pop
test
testb
sub
push
push
mov
es
xor
sub
adc
and
cmp
pushf
adc
bound
in
adc
jbe
xchg
outsl
and
or
fisubl
insb
dec
enter
push
inc
mov
aam
mov
psllq
out
mov
pushf
xchg
mov
add
dec
mov
in
push
pop
fcomp
movsl
pop
leave
pop
jmp
mov
mov
push
mov
jge
orl
out
mov
int
mov
add
pop
sub
lret
fidivrl
shlb
scas
mov
cmp
mov
adc
lea
dec
mov
pushf
dec
pop
ret
jbe
lcall
sbb
pop
loopne
addb
add
inc
inc
cmp
and
out
mov
shr
inc
mov
mov
xor
and
clc
mov
mov
cmp
sbb
dec
jb
push
shrb
sbb
aaa
lcall
cmp
or
nop
sub
pushf
insl
xor
sub
cmp
pushf
sub
fwait
insl
mov
pop
mov
call
jnp
and
dec
movsb
sbb
arpl
dec
lds
iret
ffreep
jecxz
jp
push
jbe
xchg
sub
add
lret
add
pop
xchg
pusha
or
fstpt
sarb
adc
icebp
mov
loopne
mov
pushf
call
pop
mov
and
jae
stc
pop
or
ss
jns
test
cld
int
add
inc
in
push
xor
xchg
inc
gs
movsl
scas
popf
stos
sub
mov
cmc
sbb
mov
aaa
insb
inc
outsb
cwtl
and
or
mov
outsb
mov
jge
jns
dec
xor
out
orb
and
mov
mov
mov
jb
adc
gs
nop
cmpsl
xchg
jbe
mov
fisttpl
imul
dec
div
mov
and
mov
sarl
movsl
dec
and
push
xchg
sbb
pop
aaa
or
push
sub
adc
cld
fxch
cmp
xchg
xor
fdivrs
mov
scas
ret
pop
cwtl
inc
adc
stos
mov
sub
xchg
xchg
cmc
dec
mov
lcall
fwait
mov
outsb
push
push
cmp
or
dec
ss
cs
cmp
lret
popf
jmp
std
push
orl
jle
add
xchg
and
jecxz
push
pop
xchg
in
daa
and
rorb
out
mov
sbb
or
or
aad
aam
and
hlt
jbe
lods
adc
push
push
jecxz
mov
xchg
and
outsl
ret
push
insl
out
sbb
cmp
pushf
dec
mov
sbb
daa
xchg
lds
lcall
jne
fsts
jg
mov
xchg
jl
js
repz
sub
inc
fnsave
out
fcoml
lods
adc
sbb
ja
movsb
rclb
mov
sub
mov
adc
outsl
sbb
in
jns
sbb
stc
stos
leave
push
cli
pop
and
xchg
adc
imul
adc
addr16
mov
inc
lods
subl
lret
pop
push
mov
ss
or
ret
jo
dec
pop
fists
shl
mov
push
movsl
frstor
xor
cmpsb
in
ret
xchg
xchg
cltd
pmuludq
sbb
es
pop
data16
pushf
int
movsl
inc
mov
inc
in
cltd
fnstenv
in
and
sbb
cmpl
cltd
icebp
mov
hlt
incb
lret
fidivl
out
inc
icebp
jo
jl
jge
cmp
push
loop
out
repnz
xchg
cmp
movsl
pop
pusha
pop
and
and
ss
lock
pop
sub
push
in
jae
pusha
clc
lea
or
test
pop
mov
jg
and
mov
in
loop
les
sbbl
xor
ljmp
xchg
dec
and
sbbb
arpl
imul
pop
int
add
cmc
and
xchg
ja
push
xor
pushf
in
cmp
xchg
or
and
lods
scas
dec
sub
dec
fwait
shl
repnz
cmp
je
lds
imul
fstps
inc
adc
movsbl
pop
pop
lods
cwtl
bound
sub
cmp
push
xchg
push
aaa
inc
int3
out
cmp
clc
xor
fwait
and
mov
stos
cmc
and
dec
or
subb
stc
mov
out
aad
rcrb
and
repnz
or
push
lret
xor
xchg
int
pop
mov
sbb
inc
ret
js
ds
test
cmp
xchg
fisubs
mov
call
add
cli
xlat
and
outsl
jns
sub
push
test
cmp
cmp
lret
cwtl
inc
fisubrl
imul
inc
inc
inc
add
sub
and
and
popf
shrl
mov
cmp
nop
subl
pop
punpckhwd
jmp
shl
sahf
ficoml
pop
or
pusha
sbbl
test
jg
mov
int3
cmp
adc
sbb
adc
insl
xchg
lods
add
sbb
sub
mov
cmp
inc
frstor
pushf
cmp
mov
xbegin
les
mov
sbb
xchg
xchg
mov
pop
mov
adc
cmp
cmp
lea
fsubrl
sbb
hlt
xor
rep
loop
or
pop
or
push
test
sub
aam
add
pop
add
or
scas
scas
lcall
mov
xchg
notl
mov
nop
lods
inc
dec
xor
mov
sub
jle
jecxz
mov
xor
cwtl
ljmp
popf
lea
pop
cmp
scas
movsl
std
add
xor
xlat
dec
lret
sbb
add
push
out
sbbb
cli
dec
out
cltd
aad
je
lock
scas
pop
sti
mov
dec
add
outsl
jecxz
push
pop
fcoms
pop
dec
addb
out
xor
mov
test
mov
mov
mov
scas
je
in
out
outsl
idivl
cmp
loop
or
aaa
ret
inc
sbb
lret
jb
mov
sub
cld
and
loop
sbb
leave
jecxz
mov
pop
jmp
jne
xor
test
xor
clc
inc
and
fcomp
push
or
push
inc
fisubrs
int
mov
sbb
dec
adc
sub
adc
xchg
cmp
test
cmp
push
ljmp
cmp
aad
xchg
inc
arpl
inc
adc
pop
adc
and
push
sub
fmull
les
mov
sbb
xchg
in
jmp
adc
popl
push
jb
add
jae
ret
in
out
add
loopne
sub
sarl
call
imul
lret
les
dec
cld
add
mov
in
clc
push
mov
add
mov
lea
pop
xchg
nop
add
push
rcrb
test
pminsw
push
pushf
xorl
add
pop
movsb
push
sbb
sub
add
jp
xchg
cmp
mov
and
ss
leave
jmp
xor
xchg
mov
loope
pushf
lods
mov
cwtl
push
jg
inc
xchg
jno
ja
xlat
mov
mov
je
or
add
dec
es
cld
pop
addr16
aad
push
ljmp
imul
mov
repnz
jae
jb
insl
jno
push
sbb
mov
jo
int
leave
shrb
cmp
lret
lock
nop
lea
cmpsb
jecxz
or
mov
imul
sbb
mov
mov
les
addl
dec
shlb
push
dec
sub
push
mov
push
test
sub
sti
sub
pop
xchg
mov
repnz
lds
int3
mov
jae
cmp
test
inc
je
xor
pop
xor
insb
gs
inc
xchg
cld
ss
scas
rcr
xchg
xchg
ss
sbb
xor
inc
rcrl
loopne
and
loope
lods
xchg
mov
ficoml
or
ja
loope
cli
repz
jg
dec
imul
push
inc
int3
imul
test
jmp
mov
push
out
arpl
push
std
imul
and
movd
sub
cmp
ficompl
shr
ficomps
aad
decl
push
cld
ficompl
cmpsb
and
xchg
fcmovnbe
push
jmp
jb
mov
int
and
fisttpl
stc
roll
dec
sbbl
add
mov
popa
or
sbb
jg
inc
lret
stos
leave
popa
jbe
push
push
add
test
out
or
or
in
cmpsl
inc
sub
jne
push
fs
sahf
push
sub
jno
mov
in
dec
sbb
push
bound
xor
push
jge
xor
pop
lds
mov
lahf
xor
imul
scas
lret
dec
sbb
lret
pop
pushl
lock
xchg
jp
cmp
inc
arpl
fucomp
mov
push
cmpsl
xchg
bound
sbb
and
das
sbb
jmp
in
xchg
xchg
add
out
dec
adc
xor
push
js
dec
adc
jecxz
jmp
add
stos
mov
hlt
pop
cmp
dec
movsb
cmpsb
incl
xchg
cmpl
addr16
adc
sbb
rcrl
add
mov
inc
pop
test
push
rolb
imul
les
sahf
xchg
pop
in
movsl
inc
or
lock
jno
fs
pusha
cltd
mov
hlt
jle
add
jo
mov
into
sbb
add
mul
and
in
sti
push
add
xchg
repz
add
cli
out
aas
mov
sub
data16
sbb
add
mov
cld
mov
cmpsl
movsb
xorl
or
pop
cmp
xor
pop
imul
je
pop
stos
loop
pushf
mov
lds
es
shrl
test
adc
cli
add
and
cmp
mov
add
out
and
inc
and
xchg
inc
pusha
add
jle
inc
sbb
sub
add
add
or
cmp
adc
scas
inc
fdivl
mov
mov
pop
loope
ljmp
pop
daa
dec
jl
aaa
popa
and
imul
outsb
ret
int3
jg
xorb
in
std
fsub
add
mov
xor
cli
or
fwait
in
xchg
xor
dec
dec
loop
rcll
pop
or
sub
leave
push
adc
sbb
cmpsb
imul
js
aaa
idivb
lretw
loop
mov
xor
xchg
cmp
les
fimuls
and
roll
mov
lahf
fiaddl
enter
sti
fbld
or
xchg
mov
stc
jbe
sub
mov
scas
mov
cmp
jns
sbb
fs
mov
fwait
pop
mov
mov
adc
insl
inc
pop
mov
idivb
das
inc
out
mov
js
mov
xorl
mov
out
or
sub
jns
jle
sbb
ss
adc
in
sub
fcoml
jbe
inc
jp
sarb
or
nop
popf
inc
sbb
add
jbe
out
cmc
cmp
and
outsb
sti
adc
ret
sub
jmp
das
dec
jno
iret
xchg
jnp
lahf
inc
push
les
popa
dec
jae
test
lret
nop
mov
mov
adc
add
insl
iret
jge
add
testl
xlat
out
sbb
mov
repnz
adc
push
mov
dec
mov
and
call
mov
in
in
pop
adc
lret
data16
mov
movsb
cmp
mov
in
adc
mov
pop
pop
xchg
and
jns
add
mov
lods
jnp
repz
push
js
testb
mov
fs
xor
jbe
push
movsl
add
addr16
push
and
or
xor
sti
sbb
pop
xchg
jg
mov
cmp
adc
inc
mov
mov
fs
cld
insb
jl
cmp
pop
pop
mov
pop
cmp
call
cmpsb
addl
inc
shl
push
add
push
call
js
push
stos
dec
mov
jp
mov
call
popf
push
pop
pop
cmpsb
jne
mov
or
outsl
rorl
jnp,pt
dec
adc
stos
pushf
push
shlb
into
cmpsb
and
or
mov
lods
gs
mov
push
adc
call
addr16
add
cmpsl
jb
pop
daa
mov
xchg
stos
pop
aas
mov
jmp
pop
mov
pop
or
aaa
out
addr16
mov
mov
adc
mov
mov
shlb
aad
jle
xchg
add
sahf
sti
ljmp
add
les
mov
aam
testb
dec
push
xchg
bound
clc
add
dec
push
pop
jle
cmp
xor
pop
inc
jmp
inc
xor
dec
add
mov
add
dec
push
pusha
mov
dec
cmp
adc
imul
nop
addr16
and
adc
pop
xchg
xchg
sbb
repz
xlat
int3
mov
mov
clc
pop
fcmovnb
aas
lcall
cmp
movsl
push
pop
inc
mov
pop
and
sbb
or
add
dec
and
mov
in
mov
mov
loope
scas
ds
mov
pushf
popf
jae
aam
into
aam
push
bound
push
mov
std
movsl
or
fst
in
lock
stos
xor
jmp
imul
ss
lds
inc
outsb
hlt
jae
mov
ljmp
test
fstl
in
xor
andl
pushf
pop
mov
push
add
add
insl
inc
lret
and
fisttpll
ds
inc
psubw
inc
lods
bound
jge
mov
mov
sub
dec
rcll
dec
jae
outsl
jecxz
inc
inc
push
mov
mov
push
out
mov
sub
xchg
imul
cmpsl
fwait
sub
and
ljmp
jecxz
inc
cmp
mov
dec
xor
cs
and
cmpsb
xchg
sub
or
pop
out
sahf
push
pop
add
push
push
jae
mov
push
and
das
mov
xor
imulb
dec
mov
inc
daa
xlat
or
fmull
roll
fwait
stc
mov
mov
aas
mov
pop
shlb
popa
mov
sbb
mov
push
out
cltd
lock
lret
pop
pop
mov
sub
xor
out
js
movsb
dec
mov
movsb
push
leave
push
imul
add
add
andb
mov
icebp
fwait
inc
cltd
rcrb
lea
imul
into
or
ret
stos
xor
fiadds
sub
cmp
add
lahf
clc
fwait
sbb
or
js
push
popa
and
or
inc
adc
adc
or
dec
inc
sub
add
fisttpl
mov
cmp
lcall
inc
call
sbb
mov
inc
pop
push
or
scas
xor
rcrl
fnstcw
dec
mov
scas
push
aaa
mov
cmp
movsl
and
adc
jbe
out
and
cmp
decl
adc
in
out
lock
mov
dec
pop
repz
cmpsb
aad
imul
dec
cmp
add
push
fidivl
mov
mov
aam
mov
push
pop
rolb
sbb
xchg
mov
scas
jg
ljmp
icebp
lahf
jle
or
lahf
imul
sti
sbb
hlt
int
mov
add
cwtl
cmpsl
or
lods
adc
aam
daa
cmp
mov
adc
dec
hlt
shl
xchg
cmp
mov
sbb
cmp
int3
les
call
sbb
lds
das
and
pop
ss
jmp
enter
cmc
or
arpl
pop
xchg
jge
rorl
push
stos
mov
ds
pop
mov
aam
divl
leave
shr
mov
sub
xor
movsb
jge
cmp
fwait
xchg
inc
mov
mov
push
sub
mov
mov
imul
sub
push
sete
and
jo
fsubl
int3
mov
and
ret
scas
movsb
imul
clc
sub
xchg
into
push
enter
adc
fisubrl
sarl
add
decb
in
dec
sbb
add
ret
xlat
mov
inc
cmpsl
jns
and
sbb
and
scas
cmp
addl
pop
pusha
cmp
jmp
mov
xor
mov
movsb
stos
in
cs
lods
mov
sti
mov
cmp
add
lods
je
mov
and
push
xchg
cld
push
jp
push
int3
out
hlt
repnz
in
xor
adc
add
pop
jne
push
sarb
lret
pop
pmaxsw
and
dec
mov
mov
insl
test
jnp
sbb
cmp
repnz
add
test
outsb
lods
out
fcoml
inc
mov
adc
lods
arpl
jne
xchg
ret
test
mov
ds
cli
add
jge
insb
das
cmpl
push
rcrl
adc
mov
std
in
ret
into
ljmp
movsb
movsb
nop
inc
xor
or
enter
inc
es
mov
aas
mov
cmp
insl
in
popa
repnz
in
xchg
cmpsb
dec
mov
shrl
out
xchg
xor
cmp
xor
iret
lahf
outsl
ds
lahf
pop
cmp
movsb
inc
mov
pop
xor
pop
mov
in
or
sub
enter
xlat
scas
pop
enter
loop
mull
nop
aaa
stos
addb
mov
stos
fdivrl
cs
inc
push
and
mov
mov
push
loopne
fs
pushf
mov
mov
sbbb
test
mov
stos
cmpsb
mov
and
sbb
jmp
cmp
xchg
aaa
insb
pusha
jl
xor
xchg
mov
or
ljmp
cli
mov
fimull
nop
jno
mov
mov
loope
lods
xchg
cmp
das
cmp
mov
js
pop
jnp
push
adc
inc
adc
fisttps
push
loop
sarb
vmread
jns
popw
xor
pop
daa
daa
int
je
mov
cltd
cmp
sbb
dec
lods
lods
adcl
int
mov
aad
inc
cmp
add
and
loop
push
imul
add
and
rol
xchg
test
arpl
fwait
fwait
lret
call
das
roll
push
lock
loopne
leave
jp
aaa
adc
mov
jb
imul
pop
push
jle
ja
mov
jmp
push
sub
aam
aaa
mov
sub
fists
scas
mov
out
add
mov
repnz
mov
enter
cmpsb
scas
or
iret
xor
shr
cmpsl
inc
jle
fcom
jl
xor
jae
add
cmp
lock
cmc
push
and
out
sub
ds
pop
es
sbb
cmp
inc
sub
jge
and
leave
pop
push
lods
jns
or
orl
gs
xchg
push
lock
das
out
ljmp
mov
enter
mov
fisubrl
pop
cmp
xor
jecxz
jae
pop
push
xchg
pop
dec
and
pop
gs
nop
cmpsl
cmp
mov
iret
ret
mov
pavgb
lods
push
shld
mov
cmp
int3
cmp
arpl
cmp
mov
cli
out
dec
popf
or
mov
mov
nop
inc
jl
loope
inc
mov
pusha
xchg
stos
sbb
and
and
int
adc
mov
inc
cmpsb
mov
repz
addr16
out
punpckhbw
add
stc
or
pushf
out
push
loope
lods
push
xchg
inc
or
sbb
dec
jbe
pushf
and
rorl
rclb
jp
or
sub
cmc
jle
pop
loop
mov
inc
adc
push
shl
cmpsb
decb
xor
mov
cmc
jns
stos
ja
arpl
out
test
bound
dec
mov
adc
xchg
pop
add
pop
dec
inc
lret
mov
shr
xchg
ss
sub
enter
sub
jecxz
jne
jle
mov
mov
test
cli
aad
mov
loope
mov
mov
xchg
mov
sbb
out
out
in
xchg
mov
pop
aaa
ret
fdivrl
sbbl
jg
js
mov
xchg
andb
aaa
jbe
push
out
xchg
js
pop
pop
je
lcall
stos
vdivps
mov
sbb
jle
lcall
repz
mov
xor
xchg
cmc
xchg
std
jg
insb
xor
add
ja,pn
pop
subl
in
enter
into
mov
loopne
xor
push
mov
xchg
mov
popa
in
fisubs
cld
xor
stc
dec
xchg
adc
movsl
scas
adc
xchg
movsb
jne
xchg
push
cmc
jne
add
jae
loope
out
std
mov
and
xor
mov
out
xor
xchg
or
iret
mov
mov
push
pop
scas
lret
sti
and
push
or
cmpl
shlb
addr16
pop
jl
mov
push
push
out
fldenv
cld
add
testb
pop
push
inc
addr16
ret
test
jg
pop
or
rcrb
and
xchg
insl
repz
adc
sbb
push
in
jbe
xor
adc
cmpsb
mov
jl
daa
mov
adc
mov
pushf
movsl
pop
push
ljmp
cmp
add
lds
dec
cmpsb
add
xchg
xor
cmc
out
xor
ret
lahf
pop
hlt
aas
xchg
lcall
out
jge
int3
mov
loop
fisubrs
pop
inc
leave
call
and
imul
in
jl
xorl
in
or
pushf
pop
rorl
mov
les
jp
add
enter
mov
fstps
push
push
mov
push
mov
jne
imul
in
pushl
sub
das
xor
std
push
jl
cmc
pop
popf
cmp
aas
push
out
cmp
mov
and
adc
cmp
inc
sbb
jo
icebp
pop
sub
push
pop
mov
pop
ljmp
pop
ja
xlat
lods
lea
pushf
push
lods
mov
mov
cltd
pop
add
inc
insb
mov
scas
mov
adc
pop
into
or
int
ja
add
arpl
test
pop
inc
inc
or
repz
or
test
scas
jno
dec
push
aad
or
stos
shll
xchg
xchg
fnstsw
notb
dec
popa
push
push
rol
mov
addl
xlat
adc
push
mov
scas
jns
les
jle
cmp
js
fidivrl
mov
jmp
mov
pop
cmp
or
mov
call
loop
sbb
or
fcomip
lea
push
add
enter
mov
dec
and
xor
xor
in
shrb
dec
out
mov
fldt
push
mov
adc
iret
call
aas
inc
jne
mov
ret
mov
popa
fisubl
cmpsl
mov
cmp
ja
mov
xor
jg
mov
cwtl
xor
mov
or
lahf
popa
push
or
jmp
and
adc
in
scas
and
das
mov
sbb
ja
dec
adc
pop
popa
add
dec
lea
mov
jns
ja
jg
inc
dec
mov
push
loope
cld
lgs
ss
lds
jbe
rol
loop
adc
call
xor
xlat
test
pop
ret
cmp
loopne
push
shrl
adc
test
data16
jne
inc
jnp
jns
xchg
pusha
aas
pop
shll
mov
and
mov
mov
xchg
inc
dec
lds
dec
add
mov
insl
lock
call
rol
repnz
dec
push
push
frstor
pop
mov
cs
je
ret
fimuls
test
xor
xor
js
push
inc
cmp
into
addr16
imul
pushf
ljmp
in
dec
pop
mov
mov
mov
mov
enter
das
cmpsb
imull
mov
inc
les
cs
add
mov
in
inc
dec
push
pop
in
les
sbb
or
mov
test
sub
jmp
dec
jb
push
out
pop
inc
push
sbb
shrl
inc
mov
sbb
pop
mov
mov
inc
cltd
add
daa
pop
mov
jecxz
gs
push
fdivrl
pop
cmc
pop
and
scas
cmp
jb
scas
sub
sbb
lahf
ljmp
pop
adc
dec
push
xor
insb
pop
test
std
mov
scas
pop
and
mov
push
and
out
or
push
xor
orb
adc
mov
and
lcall
sti
fs
pop
aam
adc
divl
sub
xlat
pop
popf
or
daa
or
mov
fistps
test
add
es
dec
push
out
mov
inc
das
loopne
adc
or
and
adc
mov
cwtl
imul
aad
dec
mov
test
cmpsb
pop
imul
rclb
gs
into
jnp
in
xchg
or
or
lea
xchg
fidivs
add
add
cmp
outsb
bound
cli
ss
faddl
jns
sbb
xor
lods
xchg
cmp
data16
stc
fnstsw
xchg
mov
lods
or
in
int3
or
test
pop
and
sub
and
daa
sbb
xchg
lds
push
imul
cmp
insb
ret
mov
inc
jno
mov
sub
or
cmp
jge
xchg
out
jne
lahf
and
mov
movsl
sbb
std
enter
dec
sbb
cltd
and
pop
stc
popf
sub
pop
mov
or
push
test
pop
xorb
lahf
jp
sbb
fistl
lds
pop
push
sub
fucom
pop
and
aad
or
out
cltd
clc
mov
mov
in
xor
and
loop
pop
fyl2x
sti
dec
inc
and
mov
jae
std
cltd
or
es
add
jp
push
xchg
push
aas
pop
int3
mov
addr16
fdivr
ljmp
int
movsb
sub
sub
roll
movsb
xor
xor
dec
imul
or
mov
insb
insl
scas
cld
fldl
push
inc
dec
ret
mov
das
aas
mov
aam
push
jo
pop
test
push
nop
clc
xchg
stos
movsl
push
xlat
sbb
test
inc
push
addr16
pop
cmp
mov
rorb
loopne
mov
mov
xchg
jae
mov
add
into
pop
pop
stos
and
mov
ret
shrl
xchg
sub
lea
jns
mov
xor
xlat
lcall
push
mov
inc
xchg
out
xchg
lods
enter
das
dec
arpl
adc
jae
lds
pushl
js
addr16
and
dec
test
sub
mov
ret
lea
fwait
and
push
jl
out
bnd
ja
ljmp
outsb
jb
jne
jnp
out
lret
or
push
popa
call
dec
pop
rclb
out
pusha
dec
dec
inc
cld
enter
arpl
xchg
cmpsl
leave
mov
mov
sbb
ficompl
loop
push
lcall
rolb
arpl
xorb
jno
fstp
mov
mov
je
lret
fiadds
push
mov
mov
pop
cmpsl
dec
subl
add
fmuls
sub
or
fcompl
jge
test
dec
add
mov
lds
int3
jae
push
fistpl
xchg
movsl
in
jno
pop
fldcw
outsb
push
dec
mov
jne
xchg
rcrb
and
pop
idiv
adcl
mov
adc
insl
clc
scas
add
aad
jg
pusha
push
pop
push
outsb
push
xchg
aas
xor
lods
mov
cld
test
sub
notb
pop
shrb
xchg
xchg
or
lahf
out
mov
adc
xchg
xchg
pop
imul
data16
push
test
mov
hlt
dec
mov
mov
test
popf
cltd
pop
add
bswap
sub
movsb
or
movsbl
mov
pop
inc
mov
mov
popf
cmp
in
dec
mov
addl
inc
icebp
add
sti
mov
mov
xorb
xchg
jbe
jecxz
mov
pop
mov
xchg
push
jle
mov
xchg
sbb
mov
sbb
nop
sub
jg
scas
push
outsl
or
pop
pop
xchg
loop
sub
loop
inc
or
sub
sbb
jns
pop
sti
dec
jns
jbe
lret
push
mov
sbb
not
add
in
ret
rcrl
repnz
lea
pop
xor
jne
push
mov
jmp
notl
xchg
mov
or
jle
mov
in
dec
lcall
add
mov
cli
cmp
dec
in
imul
xchg
xor
mov
or
aad
ficomps
mov
cmp
das
aam
stc
pop
jg
lods
aad
out
pop
call
and
push
movsl
xlat
sbb
and
mov
mov
push
jo
test
adc
aaa
pop
adc
cmp
dec
cmp
and
mov
add
sbb
mov
sub
fsubr
stos
movsl
mov
cmp
repz
movsl
sti
cli
inc
loope
push
cmp
dec
xchg
mov
xchg
mov
push
jmp
leave
das
jne
std
out
mov
test
repz
adc
repnz
repz
pop
stc
xchg
aam
leave
ret
rolb
nop
mov
das
sub
xor
loop
jae
jecxz
sub
lods
jecxz
mov
clc
mov
inc
push
cmc
cld
loopne
dec
arpl
shl
or
mov
xor
arpl
into
pop
push
push
mov
insb
inc
jp
jg
test
ds
xor
out
or
pop
cmpsb
loop
and
pop
cwtl
out
push
loope
inc
mov
mov
mov
adc
add
lea
jle
dec
imul
sahf
mov
test
pop
push
jmp
aaa
and
scas
loopne
or
and
mov
scas
add
jns
mov
mov
loopne
jbe
xchg
jecxz
pop
mov
mov
mov
out
xchg
push
fstpl
dec
je
mov
popf
dec
int3
aas
jmp
or
or
adc
adcl
roll
imul
insl
inc
cli
mov
in
imul
lcall
icebp
ja
mov
and
jo
orl
push
repnz
ljmp
mov
or
stos
shll
dec
daa
mov
mov
sbb
push
adc
xchg
xchg
push
and
daa
ljmp
xor
ret
aaa
sub
cmp
mov
aam
push
or
jae
cmp
fadd
enter
inc
pop
icebp
add
and
addr16
sbb
nop
xor
dec
cmp
out
mov
jmp
push
mov
aaa
sbb
adc
or
push
into
adc
pop
sbb
cmpsb
jns
sub
imul
icebp
mov
and
movsb
sbb
out
inc
fwait
pushf
sbb
jmp
in
inc
shll
shll
gs
mov
sub
jb
dec
jo
and
int3
aad
inc
xchg
pop
or
and
adc
rol
dec
jle
out
jae
scas
inc
cli
push
mov
sbb
sahf
in
sarb
call
out
imulb
sub
jl
cmp
xchg
cld
sti
jge
jl
pop
aaa
or
test
pop
nop
cmpsl
rcl
mov
add
xchg
aaa
ljmp
mov
nop
or
push
add
scas
cmpsl
daa
and
scas
mov
test
stc
jae
test
xor
or
inc
loope
xchg
mov
dec
add
test
inc
adc
ljmp
lods
arpl
insl
push
orb
clc
inc
das
es
out
jno
or
pop
jecxz
scas
cmc
cltd
xchg
sbb
psrad
cmp
sahf
push
lock
scas
sbb
cmc
jae
adc
fs
push
int3
inc
int
out
test
sbb
or
lret
sbb
test
push
adc
mov
and
push
test
mov
cmp
push
xchg
push
out
and
pushf
leave
dec
jo
out
ret
inc
stos
cmc
sbb
sbb
push
dec
leave
mov
jns
stos
and
rorl
sub
enter
outsl
push
pop
jo
test
lea
or
mov
pop
aad
cwtl
cmp
mov
inc
rorb
ret
addr16
sub
rclb
sub
pushf
int3
push
loope
aas
pop
add
rcr
push
sub
xlat
adc
pop
test
and
pop
mov
xor
jmp
lret
push
sbb
sahf
mov
rorl
sub
dec
notb
sbbb
call
or
notb
xchg
cmp
lcall
test
pusha
cltd
pop
fstpl
insb
loope
call
jmp
mov
add
pop
jl
rcrl
in
clc
sbb
lea
popf
add
popa
jg
mov
icebp
out
sub
in
dec
lds
daa
sbb
mov
outsl
push
adc
jbe
sbb
jg
mov
mov
push
xor
xchg
adc
add
or
inc
pop
ss
js
repnz
or
rcrl
inc
lahf
std
mov
xor
imul
push
and
add
ret
lret
adc
or
pop
dec
inc
pop
loopne
add
insb
mov
sub
out
and
pop
sub
sub
pop
and
rorl
push
jl
and
jg
adc
lea
adc
xchg
cmp
arpl
enter
pusha
lahf
addb
push
out
daa
mov
cmp
mov
push
push
aad
ret
mov
aad
jle
push
push
add
ss
add
cwtl
and
push
pop
jg
sbb
sbb
jne
pop
stc
outsb
and
mov
mov
inc
cmp
jg
jb
inc
int
adc
repnz
pop
imul
arpl
aaa
mov
adc
in
mov
arpl
sbb
mov
push
pop
mov
xlat
lret
filds
rcrl
inc
dec
out
or
rcll
cs
aaa
pop
aas
inc
sbb
cmpsb
ror
aam
cli
and
sub
jmp
testl
int
mov
jmp
repnz
dec
ret
xchg
fstp
push
cld
test
dec
sbb
out
mov
lods
decb
subb
dec
repz
les
sahf
mov
je
cmp
jmp
out
inc
clc
mov
push
mov
inc
ja
aaa
cld
ja
dec
int
and
fcomps
or
addr16
pop
aaa
test
notl
mov
jbe
sti
push
jle
repnz
adc
mov
movsb
test
sub
push
push
repz
js
sarb
das
std
mov
jmp
mov
sub
divb
hlt
sbb
mov
fnsave
and
out
jo
mov
shr
push
add
or
fwait
pop
pop
push
push
jo
stos
loopne
dec
std
call
insl
jp
sub
div
in
jno
or
xor
je
out
sbb
xor
loope
and
lret
mov
lret
push
mov
sub
xchg
stc
aaa
push
leave
xor
stos
xchg
pop
lods
and
inc
test
xor
mov
xchg
insb
lcall
jo
dec
loop
call
int
icebp
lods
mov
mov
test
lahf
add
adc
imul
jg
cmovge
xlat
sti
gs
adc
xor
addr16
cmp
xchg
dec
stos
cmp
lret
dec
push
fcoml
cmp
fisubs
in
jmp
xchg
sub
pop
adc
mov
xlat
mov
imull
lods
inc
addb
mov
jmp
lods
pop
jp
cmovo
ljmp
iret
xor
int
rcrl
pop
out
test
loope
call
push
adc
je
pop
ss
jae
aas
cli
fildll
ja
mov
mov
or
enter
pushf
lcall
out
inc
test
xchg
js
and
lcall
cmpb
add
add
push
lock
lock
cmp
adc
es
cmpsl
shll
cmp
adc
dec
out
jl
daa
aam
ret
imul
sbb
xor
ljmp
jbe
jmp
jl
jns
adc
cs
adc
aaa
nop
push
jge
or
dec
stc
stos
aam
or
int3
mov
not
push
fidivrl
fldenv
sbb
das
test
fdivs
imull
mov
or
outsb
pop
shlb
add
pop
in
rcl
add
aad
fsubs
jns
xchg
mov
pop
sbb
je
lock
movsb
inc
rcll
xor
jmp
lds
mov
push
jl
arpl
cmc
rorb
adc
pop
das
iret
dec
jg
adc
adc
rorl
enter
icebp
and
push
hlt
inc
adc
mov
jl
mov
dec
aaa
mov
dec
sbbb
pusha
xchg
adc
movsb
add
int3
call
or
xorl
jp
repz
test
jp
sub
rcrb
in
loopne
push
adc
std
cli
adc
lcall
push
mov
call
adc
in
sub
test
and
push
shrl
inc
inc
cmp
adc
mov
or
out
in
cli
sbb
mov
rclb
das
push
aaa
lea
jecxz
movsl
aam
test
sbb
jp
jb
mov
int
subl
cltd
pop
fcompl
pusha
int
add
push
jg
adc
hlt
push
inc
ss
xchg
xor
int3
sarb
mov
sti
test
push
push
icebp
das
into
stos
mov
xor
mov
sub
pop
pop
sub
push
xor
lret
dec
xor
mov
and
push
lock
inc
xor
and
lahf
xchg
lods
jns
mov
xchg
cmpl
imul
mov
jp
ret
loopne
lea
inc
xor
cltd
scas
je
jne
mov
pop
and
out
pop
mov
stc
imul
loopne
jns
adc
aam
lcall
push
or
jl
mov
xor
mov
sahf
xchg
mov
std
fimull
mov
and
adc
cld
dec
shrb
ret
xchg
mov
inc
push
lea
push
pop
inc
inc
or
sbb
fisttpll
sbb
or
shrb
insb
insl
sti
mov
loop
adc
inc
stos
mov
lret
movl
popf
mov
in
ret
shll
test
stc
mov
push
aas
mov
mov
ja
jns
push
mov
jne
out
jp
int3
je
js
pop
shll
pop
lock
into
and
cmp
stos
call
jle
add
jl
cltd
or
cli
enter
mov
addr16
ljmp
xchg
addr16
sub
in
fs
cmc
xor
inc
mov
negb
lret
stos
ds
negl
cmp
inc
jge
add
pop
lcall
outsb
mov
in
out
mov
xlat
aad
pop
insl
add
push
aaa
cmc
int
sub
cmp
push
jl
sbb
fcmovne
cltd
jnp
enter
xchg
sbb
mov
incb
mov
sti
sarl
sahf
push
call
pusha
mov
mov
add
cmp
cs
movsl
xor
stos
add
jmp
rorb
push
mov
or
xor
sub
inc
adc
or
into
mov
aaa
push
mov
test
cmpsb
ljmp
jne
cmp
jmp
push
mov
sbb
push
jae
negl
ja
dec
lahf
cmp
in
inc
repz
aam
cmpsb
sub
or
xchg
shlb
outsb
add
inc
jp
imul
lds
je
xchg
push
leave
movsb
add
pop
fisubl
out
xor
and
sub
mov
addl
adc
sarl
push
ret
and
push
adc
mov
ljmp
bound
sub
or
mov
add
mov
scas
sub
add
sub
sbb
add
int3
xchg
repnz
cli
int3
in
jge
test
shlb
aad
add
pop
inc
pusha
popf
add
mov
pop
lahf
pop
xor
leave
pop
push
inc
pop
inc
test
je
inc
test
push
jg
mov
push
sub
jo
divl
mov
jle
or
daa
inc
dec
add
push
lea
jmp
iret
mov
inc
jecxz
aas
push
rorl
pop
inc
aam
fiaddl
loopne
push
lods
dec
mul
lea
push
pushf
fidivrs
adc
int
jne
push
sahf
pop
stos
cmp
sbb
push
jns
leave
cmp
adc
ret
push
ljmp
push
bndldx
pop
pop
lcall
inc
sub
negb
daa
shlb
jmp
sbb
loope
std
fcompl
cmp
cmp
loope
dec
or
pop
iret
cmpl
fdivr
in
inc
xchg
int
enter
mov
lret
mov
fimull
aaa
pop
ss
in
jp
clc
clc
pop
push
or
lea
lahf
inc
add
sarl
or
cmp
ret
adc
pop
mov
aad
fdecstp
xchg
add
fsubr
repz
mov
add
pop
dec
ret
test
das
sbb
adc
aam
call
adc
aam
cmp
pop
lret
daa
ljmp
das
adc
xor
jmp
dec
ja
lret
loop
push
gs
in
lahf
stc
dec
int3
mov
pushf
xchg
shlb
les
int3
mov
mov
mov
push
sti
push
cmpsl
int3
mov
adc
sub
cmp
or
rcll
pop
mov
xor
dec
pop
sarl
xchg
and
mov
mov
js
test
rol
sub
jb
shlb
mov
mov
mov
dec
lock
out
and
jo
or
push
mov
adc
shlb
mov
stos
mov
sbb
mov
and
sub
xor
rolb
mov
jno
cmp
xor
xlat
shll
mov
push
and
xchg
loop
jno
pop
test
push
mov
fiadds
push
fprem
addb
sub
fstps
dec
jb
cld
push
rolb
jg
add
dec
xlat
ficompl
pop
xlat
sbb
icebp
adc
test
enter
rcl
repz
leave
call
inc
adc
insl
or
inc
mov
push
add
xorl
fiaddl
adc
and
sti
imulb
mov
outsl
popa
mov
mov
sub
in
fcoml
insb
rolb
sub
jb
scas
mov
push
out
cmp
lds
jb
fisubl
jb
push
inc
and
ficoml
aam
aam
jbe
cltd
imul
mov
mov
sub
adcl
jae
pop
gs
and
ss
data16
ja
addr16
push
mov
mov
pop
cmp
add
dec
into
push
push
outsb
mov
xor
add
mov
out
je
clc
mov
mov
push
push
xchg
mov
loope
clc
test
icebp
dec
jns
xor
int3
add
cmc
es
mov
mov
insb
in
sbb
outsb
lret
aaa
mov
or
add
out
stos
mov
xor
nop
sbb
sti
fnstsw
subb
cmp
push
lea
cmc
or
dec
push
mov
cmpsl
scas
jne
inc
shll
mov
aad
lcall
jo
jne
jmp
pop
ret
jns
cmp
mov
outsb
stos
push
ret
movd
push
adc
inc
mov
jns
lds
jle
js
popa
mov
popa
sub
xchg
ret
pop
mov
shr
inc
inc
aam
ljmp
adc
mov
xor
push
mov
and
lds
roll
inc
mov
mov
lahf
cmp
push
jmp
roll
stos
jge
inc
in
lahf
imul
adc
add
xchg
fs
test
enter
js
cmp
sub
sbb
test
out
xchg
je
imul
fidivrl
sub
inc
andb
cmp
lods
inc
sbb
pop
cmp
lock
out
xlat
jecxz
test
loope
fisubrl
jno
mov
cs
fmuls
je
out
pop
sarl
push
sbb
insb
aas
repz
fstpt
push
imul
icebp
lock
jo
mov
movsb
sbb
lods
ljmp
xlat
or
leave
push
cmpl
addr16
dec
jp
jnp
lock
push
pop
and
insb
outsb
mov
movl
xchg
add
sarl
mov
cli
xor
nop
loope
dec
xor
xchg
adc
lret
xchg
mov
test
push
fdivl
jl
sbb
xorb
repnz
mov
mov
sbb
add
jecxz
mov
adc
test
push
stc
inc
inc
mov
icebp
rcl
xor
jbe
adc
push
ret
cmp
gs
sti
pop
fisubrl
lret
stos
ds
sub
orb
and
dec
push
pop
mov
mov
in
and
call
sub
mov
sub
push
pusha
ret
lods
in
dec
jmp
shl
pop
je
inc
test
mov
and
jno
ja
cmp
mov
xchg
testb
in
movlps
and
sub
insb
es
dec
orl
shr
movsl
mov
cmpsb
mov
push
ret
scas
sub
pusha
daa
int
scas
sbb
leave
mov
xorl
jo
xchg
enter
rolb
push
ljmp
out
je
jne
jae
call
push
pushf
out
push
dec
cli
sbb
add
mov
into
lods
ss
cli
inc
inc
jbe
mov
out
pop
and
das
jge
insb
cmpsl
iret
adc
inc
adc
scas
jmp
rclb
pushl
xchg
mov
push
mov
pop
xor
out
data16
mov
into
mov
lods
sub
pop
sub
pusha
cmp
jbe
cmpsl
push
pop
xchg
add
stos
loope
xor
mov
clc
in
lcall
inc
leave
je
xchg
scas
jp
test
orb
dec
in
test
das
xor
stos
clc
repnz
pop
pop
aam
pop
xchg
ret
leave
js
sbb
mov
mov
mov
push
xchg
leave
icebp
sbb
cmp
je
es
xchg
or
cmp
push
push
jl
push
cli
add
testb
xor
inc
aad
cmp
jge
es
mov
inc
mov
sbb
imul
jge
sub
test
nop
add
pop
in
jbe
and
cmpsb
rorl
leave
cmc
daa
mov
add
jl
jnp
mov
movl
call
push
in
lea
pop
add
fnstenv
xor
in
sbb
es
add
push
inc
jecxz
mov
push
jb
pop
cmpsb
cmp
ret
inc
sub
xchg
or
sbb
out
movb
add
lods
dec
fisttpll
fcmovbe
ljmp
test
pop
xor
xchg
jge
hlt
cmp
insl
scas
sub
jg
repz
jno
mov
insb
out
je
lea
scas
push
jecxz
or
add
jno
sub
mov
loope
xchg
dec
push
and
adc
orb
add
movsb
test
int
xor
cmp
pop
mov
push
pop
jl
pop
movsl
jns
movsb
and
leave
stos
jo
sarb
fildll
out
xchg
mov
inc
sbb
ror
pop
xlat
fsubrl
jns
mov
push
adc
or
inc
orl
and
pusha
mov
sub
or
sahf
ret
and
push
les
sub
iret
cmp
dec
mov
gs
daa
mov
aad
mov
ss
popa
inc
push
loop
pop
out
movsb
fldt
dec
mov
cmp
cli
nop
add
lods
mov
jp
cmc
xchg
sub
add
in
mov
pushf
xchg
and
pop
or
cmp
add
pusha
lcall
add
aam
insl
mov
pop
scas
xchg
xor
xchg
ljmp
outsl
cmp
mov
mov
sbb
in
sub
push
hlt
lahf
cmp
jbe
dec
inc
and
fists
add
test
cmpsb
jno
lcall
fs
mov
cmpsb
fisubrl
stos
addr16
aad
scas
sub
jne
enter
sub
es
cltd
mov
aaa
push
sbb
lock
lock
xchg
std
mov
ss
or
mov
shrl
addr16
js
xchg
out
out
rcrl
pop
fcmovnu
mov
mov
mov
adc
jecxz
xchg
and
sbb
pop
aaa
mov
testl
xchg
and
es
or
xchg
movsb
push
inc
mov
jle
stc
divl
leave
inc
jle
dec
push
lahf
movsb
add
xchg
add
fs
iret
xor
push
add
in
and
test
jecxz
push
imul
sub
lcall
xchg
push
popf
xlat
mov
inc
scas
fisttpll
iret
mov
mov
mov
jg
testl
les
jge
cmp
pop
fsubrs
call
push
pop
xor
repz
jns
fsub
les
sbb
lret
push
lock
mov
out
loop
xchg
pop
bound
mov
dec
push
decl
pop
xchg
aas
mov
cmp
jmp
insl
pushf
rclb
iret
fnstcw
daa
cmpsl
mov
movsb
adc
jle
in
lds
inc
lds
sub
cmp
adc
push
dec
mov
sbb
in
cmpsl
aaa
mov
pop
cmp
lcall
test
pop
sbb
daa
xor
pop
mov
or
mov
repnz
mov
mov
dec
add
jg
testb
ss
shlb
pop
inc
push
shrl
inc
add
adc
push
mov
aas
mov
mov
pop
ficompl
sbb
jge
xchg
rolb
xor
inc
sub
xchg
mov
mov
out
xchg
mov
jae
mov
dec
sbb
test
push
pop
mov
movsb
insb
lock
decl
push
cmp
and
dec
dec
cmp
inc
adc
jecxz
imul
cmp
mov
inc
add
inc
mov
add
test
ret
cmp
adc
add
pop
test
in
dec
addr16
fstps
mov
stos
adc
dec
jge
repnz
jae
in
lods
fs
xchg
pop
push
add
cmp
mov
inc
fsubr
cltd
das
adc
dec
pop
jle
loopne
test
lret
fdiv
leave
push
xchg
mov
mov
xchg
dec
add
sub
xchg
lods
in
sbbb
stos
jp
sbb
lcall
fldcw
cmp
add
pop
int3
imul
shll
push
push
pop
call
aam
repz
sub
mov
imul
test
pop
test
mov
aam
bound
clc
add
mov
aad
push
daa
fidivrs
cmp
mov
in
ss
sbb
or
jo
sahf
lds
dec
dec
insl
sub
adc
dec
and
loope
cld
add
mov
or
xlat
cmp
mov
jns
lret
add
push
jb
mov
jmp
popf
or
clc
or
js
scas
mov
and
aad
or
jno
mov
repz
lods
scas
and
xchg
sub
pop
sbb
addb
addb
daa
scas
pop
add
sbb
dec
lret
jecxz
bound
loope
xor
adc
cmp
xchg
and
add
lock
and
shrl
in
out
cmp
jmp
cmp
push
loop
pop
or
mov
inc
out
inc
ficoms
sbb
popa
add
inc
cmp
pop
cli
aas
stos
jns
cmp
adc
xchg
jecxz
ja
push
adc
xor
inc
push
stos
clc
jb
popf
cmp
push
and
test
sub
hlt
sbb
out
xchg
push
and
xchg
mov
and
lret
jmp
int
imul
out
into
loope
lea
xchg
movsl
aad
pop
lret
insb
das
jle
dec
ror
out
testb
pusha
mov
rcrb
fwait
ret
repnz
out
jmp
jmp
ret
adc
mov
xchg
jmp
arpl
in
sbb
push
fbstp
cld
imul
mov
xlat
cmp
push
mov
nop
push
loopne
rol
add
sbb
cmp
enter
pop
repz
xchg
fadd
fmuls
mov
pop
adc
lock
cmp
in
imul
shr
icebp
lods
into
sbbb
loope
mov
mov
push
xor
ffreep
xor
sub
mov
jo
xchg
sbb
push
add
sbb
jg
cmp
into
div
pop
dec
mov
and
mov
icebp
test
or
pop
xor
fs
ds
lods
add
mov
adc
cmp
jno
je
pop
adc
test
in
call
enter
and
idivb
mov
loopne
inc
daa
stc
cld
inc
mov
push
or
jbe
int
push
pushf
xchg
leave
sbb
mov
dec
push
push
or
mov
sbb
shlb
or
orb
sub
jbe
mov
adc
add
fcomip
cwtl
xchg
dec
enter
pop
pop
xor
repz
sub
lcall
mov
dec
inc
int
inc
mov
jnp
mov
repz
mov
xor
test
xor
jnp
xchg
aam
inc
call
divb
aam
mov
lods
das
add
stos
ret
and
dec
and
jl
int
jne
inc
in
cmp
aas
in
adc
mov
push
xor
mov
cmp
in
add
sti
ja
mov
enter
test
lds
mov
add
push
call
xchg
in
cmp
push
repz
inc
or
sahf
in
mov
ds
xchg
clc
jecxz
or
or
push
xchg
sub
jno
scas
xor
aam
add
inc
out
inc
cmc
cli
xor
sub
xor
mov
push
addb
fwait
sbb
daa
xchg
ret
adc
paddsw
jp
pop
xchg
imul
inc
xchg
iret
pop
and
jne
add
popf
pop
rcrl
inc
cmp
lods
in
inc
repnz
sbb
popf
ja
std
fcom
jmp
test
mov
in
cli
imul
adc
xor
xor
and
xchg
fwait
leave
ret
int3
mov
dec
cmp
push
cli
inc
mov
or
push
mov
sub
xchg
enter
iret
repnz
adc
xor
iret
inc
xchg
test
bound
out
loop
bound
jecxz
add
dec
push
adc
mov
cmp
frstpm(287
push
push
fs
sbb
inc
inc
dec
or
into
ss
rcrb
mov
sbb
negb
sbb
jnp
pop
lahf
ret
sahf
push
cmp
lret
dec
mov
imulb
push
test
adc
and
sub
cmp
mov
xlat
mov
lods
outsw
xor
imul
fdivs
fistps
aam
daa
pop
iret
pop
iret
cmp
jl
cld
or
push
adc
lea
jbe
andb
into
pushf
mov
mov
ja
dec
lret
fisubl
add
and
push
ss
loopne
jecxz
loopne
hlt
push
out
daa
ret
lret
or
inc
es
add
jmp
xchg
loope
mov
es
hlt
imul
cmpb
xchg
add
and
inc
mov
push
xor
jge
fildll
add
test
jp
pop
cmpsb
imul
loopne
lock
pop
xlat
ret
add
jb
leave
popf
ss
stos
les
and
mov
jno
shr
pop
or
jb
shll
cltd
pusha
cs
push
int
xchg
dec
test
dec
inc
add
inc
inc
add
adc
adc
add
adc
leave
ret
daa
sbb
pop
jle
insb
fsubrl
jb
shl
push
rolb
and
sbb
jl
sub
lahf
mov
je
cmp
push
jnp
pop
shll
enter
rcl
pop
push
mov
shlb
out
adc
nop
sbb
push
sbb
stc
xor
inc
push
adc
pop
daa
clc
pop
lock
fisttpll
and
in
addr16
leave
mov
enter
test
jecxz
pop
push
xchg
cmc
push
xchg
mov
add
mov
push
movswl
push
push
in
gs
mov
in
aaa
or
aaa
test
test
add
sub
popf
pusha
sbb
pop
mov
jl
in
pop
cmp
pop
mov
popa
push
int3
fildll
jg
and
lea
sar
bnd
or
push
cli
or
adc
dec
sub
lea
mov
jmp
mov
mov
hlt
mov
dec
mov
mov
xchg
push
mov
adc
sub
ret
mov
jg
mov
add
xchg
in
pop
add
fiadds
cmpsb
es
lods
aad
in
and
lds
pop
jecxz
xchg
jno
pop
ljmp
cmpsb
cwtl
inc
outsb
xchg
inc
add
adc
jmp
lock
test
mov
pushf
movsb
mov
jecxz
pop
xor
stos
sbb
rcr
aaa
jne
mov
inc
and
jbe
inc
rcrb
mov
inc
mov
cmp
imul
push
fidivrs
push
inc
mov
mov
mov
test
and
push
js
rcll
pop
ja
js
add
lahf
cmpsb
or
in
sahf
dec
shlb
nop
je
sbb
dec
movb
pop
sbb
lret
xor
lds
sbb
fsubl
or
mov
ret
into
call
pop
mov
imul
shll
sbb
inc
push
fcmovnb
xor
fwait
mov
dec
add
sub
call
bts
jb
push
ss
sti
push
mov
movsl
addr16
or
sbb
das
push
mov
push
inc
out
mov
xchg
stos
mov
rorb
dec
ss
inc
fs
dec
loopne
lcall
les
sub
insl
mov
add
sub
call
push
ds
cmp
fdivrl
dec
shlb
dec
mov
add
je
mov
xchg
ja
rep
xchg
push
mov
push
jae
je
fldl
sbb
mov
dec
pop
gs
loope
pop
jno
sub
rcrl
stos
inc
mov
clc
xchg
dec
aaa
and
adc
out
lahf
shl
inc
pop
js
xchg
fs
inc
arpl
pop
push
mov
mov
pop
push
mov
dec
push
adc
jb
fistpl
pop
xor
mov
mov
push
dec
cmp
repnz
test
jl
xor
cmpsb
and
or
xchg
jecxz
push
or
aaa
in
add
int3
mov
cmp
mov
out
in
jg
aad
loopne
outsl
xor
pop
clc
xchg
adc
pop
add
push
jge
add
mov
gs
pop
shrb
cmp
inc
cmp
jo
movsl
test
aas
mov
cli
pop
pop
lods
repz
adc
cmp
sub
arpl
cli
jb
xchg
adc
adc
add
mov
xchg
in
xchg
dec
or
sbb
adc
sbbl
aas
cltd
fnstsw
test
cmpsl
push
scas
in
mov
out
sub
push
dec
test
popf
and
jb
je
jecxz
mov
add
sbb
stos
lret
and
rclb
leave
mull
dec
mov
rolb
lods
pusha
test
xor
repz
lock
stos
cmp
repnz
out
xor
call
outsb
or
roll
cmp
imul
sbb
jp
sbb
cli
sbb
add
imul
and
mov
xor
inc
aas
cs
lds
stc
cli
mov
push
movsl
add
mov
int
pop
mov
add
push
stc
leave
sub
sahf
stc
push
js
cmp
cwtl
jge
shr
ss
mov
jle
pop
mov
leave
sbb
mov
push
lock
jecxz
pop
fwait
xor
int3
jmp
ret
push
mov
stos
mov
mov
dec
pop
in
add
inc
lcall
std
mov
out
fadds
or
jp
out
jp
push
data16
xchg
sbb
in
and
movsl
popf
and
and
aam
jnp
mov
jg
sahf
and
fsub
jl
into
jo
insl
mov
inc
scas
xor
cmp
mov
test
or
hlt
jp
lods
mov
fldcw
fidivrs
sbb
subl
mov
add
into
loop
dec
fimuls
leave
popa
repz
cs
js
movb
dec
mov
jecxz
xchg
sub
aaa
jg
xor
sbb
mov
scas
xor
jge
das
adc
or
sub
ds
mov
lcall
pop
fildll
test
mov
out
in
push
cmp
xchg
lea
outsl
or
add
dec
and
lret
lds
idivb
pop
jbe
out
sub
mov
ret
cltd
cmpsb
dec
lods
lahf
psubq
mov
mov
mov
pushf
add
sbb
pop
and
in
jle
ret
add
add
dec
cmp
mov
roll
mov
sbb
add
fistpl
lcall
dec
jg
aam
sub
das
aaa
rcl
int3
jo
dec
sti
fimuls
mov
adc
jle
icebp
imul
push
dec
pushf
aad
iret
jecxz
fists
inc
aaa
cld
cmc
out
int
sti
iret
push
mov
xchg
dec
stos
jae
leave
scas
shlb
xor
rcr
mov
ja
sti
mov
adc
outsb
and
jecxz
lret
pop
fs
imulb
sti
mov
bound
les
sub
mov
or
lea
xor
cwtl
mov
sahf
cmpsb
shrb
addb
dec
mov
les
icebp
adc
lcall
pop
addr16
rcl
add
fldt
imul
sub
call
inc
stos
sub
cmpsb
pop
jp
andl
lods
movsl
addr16
out
je
jnp
out
ds
inc
ficoms
lods
inc
fiaddl
and
dec
icebp
fdivr
repnz
out
clc
or
pop
xchg
mov
xorl
push
mov
hlt
inc
mov
adc
int
and
cld
in
jb
scas
adc
push
pop
sub
int
mov
repnz
mov
xchg
push
cmp
or
pushf
cmp
sbb
adc
jo
std
sti
dec
mov
cmp
aaa
sti
sbbl
mov
insl
fwait
xchg
xor
adc
push
xchg
icebp
cmp
shlb
mov
rclb
std
xchg
xor
sub
addr16
xorl
dec
cmp
out
test
or
jnp
test
testl
inc
aas
sub
repz
fmuls
jne
aaa
mov
jl
pop
lods
loope
add
pop
mov
jmp
lcall
jno
je
lods
int
pop
cmp
nop
and
icebp
sbb
cmp
pop
push
jmp
insl
mov
out
jge
dec
mov
mov
mov
push
cld
cmp
test
aas
sbb
xchg
por
pushf
mov
lea
sub
add
adc
xor
into
stos
pusha
add
popa
das
inc
addr16
jecxz
dec
or
bound
das
push
push
push
sbb
push
pushf
dec
mov
pushf
xor
sar
add
aad
and
cmpsb
stos
cmp
inc
and
rolb
mov
inc
lds
aas
enter
mov
mov
int
insb
mov
mov
or
xor
dec
mov
mov
cmpsl
fs
rclb
pop
or
arpl
lret
pop
mov
cmc
pop
iret
cmovno
or
dec
dec
or
dec
pmaddwd
adc
lea
mov
push
repz
fisttpll
push
sub
data16
pusha
setge
inc
in
int3
enter
adc
mov
and
jle
cld
push
stos
ja
sbb
push
mov
lea
sbb
sti
cmp
jge
shll
mov
dec
movsl
add
and
inc
jmp
adc
jo
sahf
sahf
outsl
ljmp
divb
mov
mov
stos
fs
sar
or
mov
xorl
test
mov
xchg
pop
or
sbb
nop
les
xor
fwait
ss
aaa
fiaddl
mov
fmull
jle
repnz
std
or
pop
mov
sub
mov
push
push
mov
xor
pop
inc
cmp
je
es
jge
xchg
mov
mov
sbb
mov
shll
pop
xor
jge
pop
fwait
lods
or
cmp
adc
outsl
arpl
or
movsb
pushf
cs
cmpsl
sbb
nop
dec
push
xor
or
cmpsb
sub
xor
mov
adc
shl
mov
sub
adc
pop
push
scas
jo
test
jmp
pop
dec
or
gs
mov
mov
negl
sarl
xlat
adc
adc
push
fcompl
mov
fstpl
aam
pop
adc
loope
sub
inc
pop
sbbb
scas
loope
mov
adc
out
lret
movsl
pop
push
roll
mov
pop
and
fsubl
aaa
sbb
pop
jge
pop
cmp
mov
nop
ret
es
ss
jle
mov
sub
dec
pop
pop
inc
std
sbb
stc
jo
inc
fcomi
and
or
inc
rorb
sbb
test
call
fmuls
lahf
iret
imul
add
popf
mov
pusha
out
sbb
pop
jl
or
sub
push
xchg
push
fcompl
push
push
pop
push
cmpsl
outsl
add
das
jnp
mov
mov
fistl
fdivrl
scas
pop
pusha
hlt
js
jnp
fstl
out
add
mov
popa
and
mov
jbe
sbb
divb
or
hlt
or
sbb
mov
cmc
and
sub
scas
xlat
push
shlb
and
mov
cwtl
xchg
cwtl
inc
adc
hlt
adc
test
inc
subb
ss
fcmovnbe
xor
je
lret
push
out
lahf
mov
loope
imul
cmp
inc
fdivs
cmp
push
cmp
lods
sti
sbbl
sub
out
les
or
push
js
or
daa
shlb
dec
mov
shrb
sarl
sbb
xchg
xor
sub
pop
fs
or
les
repnz
subl
pop
arpl
in
jmp
arpl
pop
jmp
out
xchg
push
mov
or
jo
adc
pop
pop
xor
push
cmp
les
rol
fs
mov
in
xor
leave
jp
rorb
add
popf
aam
cmp
xchg
les
out
repnz
out
aad
out
jp
jnp
iret
dec
mov
fcmovnb
adc
push
dec
jp
into
cmp
aaa
xchg
cmp
stos
mov
fidivrs
jle
inc
jnp
inc
fnsave
test
jnp
sbb
shll
xor
ss
andb
in
arpl
sub
sub
dec
std
jecxz
lahf
cs
ds
adc
mov
scas
mov
jno
loopne
jecxz
icebp
xchg
mov
push
out
ss
stos
pop
in
jge
or
mov
cmp
push
fs
sub
lock
dec
mov
ss
mov
aas
mov
daa
or
add
fiadds
add
xor
or
fcoml
xlat
xchg
add
or
or
lock
pop
sub
movsb
sbb
sbb
ss
fldcw
mov
lret
jge
mov
mov
sub
jl
push
jbe
stos
push
dec
inc
hlt
call
clc
mov
xor
push
mov
push
mov
outsl
jg
ja
cmpb
bound
lcall
add
add
jp
test
je
js
mov
ljmp
call
fwait
add
jp
scas
jae
repnz
movsl
push
outsb
xchg
aas
test
fcoml
cmp
lea
loopne
mov
sbb
sub
outsl
xchg
and
adc
mov
jns
push
int3
xor
jno
xchg
sbb
mov
and
push
mov
push
filds
fcoml
xchg
jecxz
outsb
sahf
pop
aas
loop
add
int
pusha
push
das
leave
push
push
fiaddl
push
push
aas
push
into
inc
mov
mov
pop
mov
jbe
andl
mov
mov
xor
xchg
mov
fiaddl
cld
cmpsl
push
jmp
leave
stc
and
inc
mov
or
xchg
inc
sahf
loopne
mov
sbb
cmc
mov
mov
dec
incl
jo
push
loop
xchg
mov
ret
xor
jne
mov
mov
dec
sti
scas
cmp
pop
int
cmpsb
cli
popf
push
push
gs
ficoms
cwtl
std
int
cltd
outsl
fsubs
fmul
movsb
mov
sub
shrl
out
inc
add
xor
syscall
adc
or
into
mov
sub
sbb
sbb
pop
jg
push
sub
push
not
sbbl
pop
and
cld
lahf
int
push
iret
cmpsb
jge
iret
loop
cs
dec
in
cmp
jg
add
mov
push
dec
mov
std
sub
adc
fildll
sbbb
jbe
add
insb
leave
sbb
jmp
insb
inc
adc
aaa
mov
or
sbb
mov
adc
push
mov
ret
mov
cli
mov
and
xchg
mov
int3
cmp
data16
jae
pop
xchg
inc
pop
push
xchg
mov
pop
mov
scas
clc
add
push
iret
cmpl
mov
loop
pushf
add
arpl
out
leave
sub
inc
test
inc
std
inc
sub
pcmpeqb
test
push
movsl
sbb
push
shl
push
sbb
inc
in
stos
jns
jo
icebp
inc
imul
aas
andl
dec
popa
ja
je
adc
fdivrl
into
ret
lods
test
inc
loop
jecxz
push
sti
outsb
xorl
stc
push
ds
and
sahf
das
push
aas
hlt
jns
pop
ret
aas
pop
sarb
hlt
sti
das
arpl
movsb
bound
stos
ret
xor
push
pop
adc
aad
lahf
cli
inc
or
shrl
pusha
pop
aam
or
lea
fidivrs
add
insl
pusha
adc
addl
push
xchg
data16
pusha
jmp
stc
mov
xlat
and
cmp
mov
pop
push
add
add
inc
in
add
in
nop
andb
inc
inc
mov
push
jge
adc
movsb
jb
adc
jbe
out
push
cmpsl
pop
sbb
in
fists
fs
sbb
cmpsb
loop
sub
ja
mov
push
jbe
push
pusha
fstpt
add
scas
out
sub
xchg
xor
out
pop
loop
mov
adc
test
imul
ret
in
mov
sti
arpl
sbb
in
insb
jmp
jo
lcall
imul
mov
mov
push
jb
jl
ror
and
daa
negl
pop
cmp
cmp
mov
jo
loop
icebp
add
clc
mov
ret
inc
int3
mov
call
aas
adc
addl
andb
stc
lcall
push
xor
repnz
dec
gs
in
stos
add
ss
cs
pop
xchg
xlat
dec
sub
sbb
icebp
pop
sarl
cmp
or
cmp
sub
xchg
lahf
int
aas
or
mov
ffree
outsl
or
inc
inc
push
filds
in
rcrl
push
pusha
pop
insl
and
out
outsb
cli
das
rcll
out
inc
xchg
pop
ret
es
in
dec
mov
sbb
cmp
inc
pop
rorb
call
daa
pop
int
sub
mov
loop
inc
add
or
sub
cltd
mov
pop
insl
sbb
jmp
fiadds
and
pop
stc
addb
inc
adc
xchg
and
mov
lock
outsl
ret
gs
sbb
add
test
ja
mov
sbb
pop
sub
sub
stc
test
and
fiadds
lock
add
add
xor
xchg
add
stos
gs
in
xor
dec
dec
cld
bound
lret
bound
xchg
test
inc
pop
xor
icebp
fldcw
fldcw
lods
rep
xchg
sbb
sbb
add
lock
into
mov
inc
out
sub
adc
jo
pop
jns
push
lods
test
loopne
pop
imul
inc
out
adc
ds
popa
xor
mov
and
adc
pop
fldl
mov
xchg
inc
nop
scas
lock
or
sub
jbe
das
sbb
hlt
adc
jns
add
add
inc
cmp
int
call
mov
enter
mov
repnz
inc
mov
dec
xchg
mov
sub
cmp
loop
sti
sahf
mov
or
push
push
dec
daa
mov
movsl
jb
arpl
mov
dec
and
stc
out
out
out
lods
inc
jmp
or
pop
fistl
inc
nop
mov
mov
xchg
pop
cmc
pop
sub
fistl
inc
std
addr16
lds
mov
or
and
scas
dec
pop
xchg
repz
jne
roll
outsb
sbb
rorl
shr
xor
int
mov
lret
fmull
lcall
lock
xor
mov
lds
loopne
pop
lcall
inc
xchg
xchg
testl
mov
pusha
nop
rcll
pop
gs
push
mov
push
jl
dec
pop
mov
add
adc
xchg
stos
loop
in
xchg
and
mov
fidivrl
ljmp
popa
loopne
cmp
stos
sbb
jns
lret
aas
mov
mov
negl
jge
fildl
aad
mov
jne
mov
roll
in
cmp
mov
add
int
xchg
pop
mov
or
not
jp
imul
insb
and
mov
pop
cmp
and
add
cmpsb
jle
mov
xchg
xchg
gs
xchg
mov
pop
aad
jmp
mov
add
clc
xor
pop
lock
es
adc
outsl
ret
sub
shlb
add
and
inc
loopne
stc
test
insl
in
mov
adc
lcall
scas
mov
or
sub
pop
js
pop
dec
repz
sub
cmpsl
jp
dec
xor
sbb
leave
je
lods
jae
daa
cmp
push
mov
bound
stos
ret
jns
sbb
or
and
mov
inc
shl
loopne
pop
test
dec
sbb
mov
fimull
sbb
cli
lahf
inc
rcrl
lds
inc
dec
mov
or
xchg
pop
lahf
mov
popa
xchg
mov
test
aam
cmp
xor
adcl
adc
mov
pop
dec
push
xor
push
loop
imul
inc
add
cmpsb
push
pop
iret
lcall
decl
xchg
and
mov
bnd
mov
jp
out
loop
xchg
fmull
dec
out
mov
xchg
int
test
jae
add
rorl
out
mov
inc
sbb
push
lcall
push
push
fistps
add
xor
cwtl
ficompl
adc
sbb
jns
pop
xchg
mov
pop
xlat
mov
adc
sbb
xor
adc
or
shlb
and
mov
fwait
cmpl
inc
cld
in
sahf
fwait
test
jns
lea
pop
push
cmc
mov
loopne
and
sbb
pop
pop
cmp
fcoms
lods
or
inc
iret
push
addr16
or
mov
mov
cmc
pop
enter
dec
mov
inc
aam
lock
mov
fimuls
imul
dec
mov
in
insl
add
icebp
aas
je
dec
imul
cltd
jg
imul
ljmp
xchg
cmovp
sbb
mov
xchg
inc
iret
int3
hlt
mov
mov
test
int3
shll
in
aas
cmp
cmpsb
insb
dec
sub
insb
shrb
mov
das
out
xchg
sbb
xor
cltd
cmp
mov
cld
ss
aas
shlb
inc
movsl
mov
scas
repnz
hlt
xor
lods
out
jp
sub
mov
cwtl
fildl
dec
mov
nop
cmc
mov
add
mov
pop
inc
cmp
and
xor
lock
or
xor
sti
icebp
xchg
mov
aam
mov
arpl
les
scas
pop
mov
orb
add
jge
or
cltd
adc
lahf
pop
push
cwtl
jnp
or
pop
add
pop
arpl
xchg
loop
xor
pop
xchg
fisubrs
mov
jle
xchg
arpl
inc
ret
mov
repz
xor
lahf
out
push
mov
push
fbstp
pop
insb
and
push
inc
and
cmp
sub
push
stos
xlat
lea
sbb
push
inc
ret
mov
push
pushf
test
sbb
hlt
hlt
aaa
std
jp
in
fcoml
mov
mov
inc
cmp
pop
repnz
andl
jno
scas
orb
lahf
pop
adc
mov
xchg
cmp
push
daa
jle
mov
jg
imul
std
test
sub
rcrl
sub
add
repnz
pop
adc
sbb
stos
push
inc
dec
pop
insb
rcrl
and
mov
cwtl
icebp
stos
lock
inc
add
add
pop
lret
fs
lfs
out
pop
call
and
jl
cmp
inc
xchg
and
loopne
ret
cs
lahf
fs
pop
inc
in
roll
ret
or
out
pop
and
ja
es
inc
or
es
imul
push
mov
aas
and
mov
jnp
jmp
lods
mov
mov
or
sub
sbb
jecxz
sub
es
rcll
and
add
dec
inc
mov
int3
mov
cli
cwtl
push
movsl
xchg
mov
inc
fidivrl
out
cld
dec
add
out
pop
inc
or
dec
jo
sbb
xchg
js
push
xchg
or
sbb
jne
inc
data16
fcmovnbe
sahf
ljmp
xchg
mov
inc
cmp
adc
dec
or
fdivp
test
aas
add
enter
call
sbb
icebp
mov
sbb
mov
sbb
ljmp
out
lret
push
jnp
mov
push
mov
xor
mov
lret
push
ror
inc
push
pusha
push
sbb
lods
pop
push
cli
mov
sbb
out
sbb
xchg
cmp
pop
and
clc
mov
cmc
outsl
sti
les
mov
lock
mov
lock
inc
rcrb
fistl
out
mov
add
jo
movsb
adc
cwtl
dec
arpl
jo
imul
in
jo
addr16
test
sub
in
shrb
inc
loope
shll
push
jle
xchg
out
dec
pop
xor
lahf
daa
fldt
ljmp
popf
out
xor
fwait
jle
push
mov
rorl
outsb
mov
fsubrl
in
adc
jo
sub
mov
pop
mov
jge
pushf
js
and
stos
in
gs
movsl
dec
pop
stos
add
sbb
add
dec
in
adc
dec
lods
lret
aas
or
sbb
leave
dec
adc
into
adc
and
xor
xlat
add
aam
xchg
lcall
daa
cs
mov
jecxz
pop
int
add
mov
add
lds
push
dec
push
dec
jbe
xor
xchg
pushf
cltd
push
inc
les
inc
ret
add
mov
fldl
jge
push
xchg
xor
pop
repz
pop
icebp
push
daa
loop
jnp
mov
loope
jle
mov
xchg
fisttpll
pusha
sbb
pop
cmpsb
cmp
ljmp
shll
inc
lret
cltd
mov
inc
mov
popf
gs
popf
pop
aad
dec
sbb
fs
cmpsl
xor
xchg
test
and
mov
xchg
sahf
loop
je
fistl
insb
push
in
in
movzbl
or
nop
push
cld
imul
push
stos
inc
stos
insl
cmp
ds
fldenv
jg
xchg
insl
adc
mov
aas
dec
and
ss
cltd
cmp
jmp
push
in
je
icebp
fwait
xchg
mov
andb
in
fwait
out
push
mov
sbb
out
je
sbb
jo
scas
aas
xchg
bound
shll
xchg
insb
pop
inc
or
mov
in
add
jmp
mov
lahf
in
dec
xchg
iret
repnz
gs
shlb
test
xchg
test
repnz
inc
jle
dec
fwait
xor
or
mov
pop
lods
jg
call
dec
mov
stos
cmp
sti
mov
bnd
frstor
fnstcw
jecxz
out
mov
and
scas
aas
into
repnz
daa
add
mov
nop
notb
int3
jae
imul
adc
loope
movsl
in
sub
pop
or
int3
cmp
repz
dec
jecxz
cli
push
addr16
push
dec
push
and
mov
pop
scas
and
out
scas
lahf
aad
int3
hlt
adc
add
aad
mov
call
pop
and
aas
sbb
or
and
ljmp
mov
pop
nop
imulb
xor
adc
fmuls
mov
bound
cmp
loop
xchg
shll
dec
pop
pop
pop
movsb
push
or
mov
imul
imul
mov
sub
int
cmp
leave
cmp
scas
fcoml
jmp
scas
mov
sub
mov
out
pop
das
or
enter
add
scas
mov
cld
xchg
pop
jb
pop
insl
adc
jae
es
ds
push
sbb
mov
adc
outsb
mov
icebp
cmp
cld
test
out
jbe
jle
scas
andl
xchg
mov
pmuludq
and
fstl
sbb
sub
or
add
fdivrp
inc
test
add
les
mov
loope
pushf
push
push
in
push
and
and
lret
push
aad
icebp
push
adc
cli
mov
xor
out
add
mov
addr16
jle
clc
into
push
stos
inc
push
ret
dec
mov
adc
je
mov
xor
enter
push
xchg
xor
or
test
cmp
pop
mov
and
sub
push
xchg
and
add
lods
mov
aas
or
mov
mov
adc
leave
lcall
out
pop
jno
xor
xor
add
inc
scas
scas
pop
inc
xchg
or
ds
sub
push
rolb
sahf
lcall
icebp
push
xchg
add
sbb
pusha
or
pop
in
scas
push
fcoml
mov
push
cmpsb
cwtl
sub
jmp
push
jns
pop
cwtl
jl
cs
cmpb
imulb
enter
loope
pop
aas
xchg
mov
mov
inc
nop
or
sbb
repnz
pop
push
in
int
in
pushf
mov
xchg
repnz
push
lea
add
xchg
in
inc
jl
jl
xchg
pop
cwtl
push
pop
lahf
sub
sbb
das
xor
dec
outsb
jle
cmc
sbb
outsb
movsl
jp
jns
cmp
fldln2
and
adc
int
sbb
add
jo
in
inc
xor
and
cmp
ss
push
lret
cmpsb
jns
mov
mov
adc
clc
mov
int3
jmp
jg
orl
loopne
stc
sbb
repz
decl
xchg
outsl
xor
repz
xlat
mov
push
mov
xchg
push
xor
mov
mov
in
xor
sub
jnp
loope
push
test
cli
hlt
divl
outsb
jne
adc
add
cli
xor
loope
movsb
mov
inc
popf
xchg
and
mov
insl
pop
pop
add
rclb
ret
and
addr16
xor
fimull
test
ret
fsubl
push
call
in
ljmp
adc
adc
mov
fwait
adc
mull
cmpsl
push
test
ret
mov
and
sbb
and
push
mov
xchg
rcr
xchg
lds
mov
lods
outsb
outsl
cmp
jnp
cmp
les
xchg
fistpll
add
lret
pop
mov
popa
sbb
mull
xor
or
sub
sub
cwtl
mov
inc
pop
cmp
xor
aad
mov
pushf
fwait
scas
mov
inc
ds
repnz
mov
mov
test
test
int
ljmp
xchg
xor
mov
scas
dec
cmc
sar
inc
sub
fisubs
or
or
in
push
inc
out
iret
sub
iret
sbb
fdivs
scas
lds
lret
frstor
roll
mov
lock
or
lock
testl
repz
or
int
stc
rclb
jp
shrb
and
lret
sub
mov
test
jmp
es
jge
mov
mov
dec
dec
push
in
mov
push
dec
push
ja
loop
outsl
dec
mov
andl
cmpsl
add
dec
bound
mov
jmp
lea
or
adc
in
push
and
addr16
insb
js
push
sbb
adc
sbb
and
std
in
hlt
push
mov
in
mov
inc
ret
sbb
lahf
pop
mov
xchg
mov
cli
inc
and
sbb
mov
push
xchg
mov
pop
clc
sti
dec
aad
adc
adc
or
mov
orl
mov
popa
jns
or
pop
call
sbb
loopne
ret
adc
add
cli
int3
bndstx
sbb
xor
jno
shll
insl
push
jge
insb
lret
push
repz
push
sub
scas
mov
movsb
mov
mov
js
jns
push
divl
add
je
insl
xor
pop
mov
outsl
icebp
sti
ret
sarl
xlat
and
ror
in
hlt
mov
test
pop
arpl
mov
jmp
scas
cmp
outsl
cmpl
aam
adc
fdivs
sub
loop
pop
inc
ss
push
xor
xchg
pushf
lahf
xchg
sub
in
das
mov
or
jae
cs
dec
push
push
adc
cmp
xchg
add
fidivrl
roll
add
ja
inc
div
addr16
xchg
adc
sti
lea
pop
inc
cwtl
mov
or
sahf
adc
cmp
pushf
or
fisubl
icebp
inc
rcrl
lret
fmul
pop
fistl
mov
jne
shll
inc
rcll
call
pop
pop
jle
xchg
add
int3
js,pt
dec
cli
xor
xchg
rolb
and
imul
std
push
or
das
cmc
jae
outsb
xchg
dec
aaa
adc
or
cmpsb
imulb
add
lea
js
jmp
jnp
lods
jp
inc
pop
push
hlt
sub
int3
out
pop
jno
or
inc
jge
rorl
sub
cmp
pop
mov
cmp
out
cmp
idivl
xchg
xor
adc
in
mov
xor
mov
mov
or
bound
mov
iret
ja
cmp
int
inc
xor
ret
outsb
push
aam
fcomps
iret
and
fs
movsl
dec
inc
movsb
test
aad
test
add
or
add
mov
cmc
jno
leave
xor
mov
and
jmp
xchg
adc
add
addr16
aaa
bound
add
test
cld
sbbb
xchg
je
hlt
dec
xor
ret
or
cmp
mov
daa
cmp
sbb
jno
add
iret
mov
cmp
fstpl
aaa
dec
sbb
addr16
mov
and
shrb
testb
lods
ret
push
arpl
sbb
stos
iret
add
xchg
adcl
aam
leave
les
dec
cmpsl
lock
addr16
shlb
ss
adc
xchg
dec
lods
cltd
cmp
shll
popa
test
pop
aas
fistps
add
repnz
push
jge
sbbb
mov
pop
scas
icebp
push
jne
push
cmp
popf
xchg
dec
xchg
jo
push
xchg
lods
cmovae
ss
mov
lahf
stos
sub
js
les
fnstenv
gs
das
rclb
cld
adc
imul
pop
loop
adc
sbb
dec
cs
and
out
test
cmp
jmp
das
stos
mov
inc
mov
push
xchg
add
fistpl
shrb
mov
repnz
adc
ja
leave
or
push
frstor
loopne
fcomps
jb
and
and
add
push
push
not
sarl
lahf
les
push
fs
out
sti
push
push
js
sbb
adc
inc
jb
ljmp
pop
jbe
in
mov
cmp
int3
je
inc
out
xor
push
dec
sub
lar
push
scas
sbb
xchg
ljmp
jno
mov
mov
xchg
push
mov
dec
cmc
push
mov
adc
inc
push
ficompl
jecxz
pushfw
jno
fabs
in
or
or
mov
dec
outsb
ss
add
cmp
fldt
cmp
add
adc
out
add
fcmovbe
xor
pop
adc
cmp
fistpl
adc
fists
push
ss
jb
pop
xor
jp
add
cmp
fs
lahf
in
ret
lahf
ret
xor
jae
lret
pop
lea
rcl
clc
or
mov
aam
adc
pop
cmp
adc
jg
repz
pushf
xor
lods
sbb
cli
sub
repnz
mov
mov
adc
sbb
pop
mov
jge
dec
pushf
fs
inc
js
scas
add
cmp
cs
xchg
lea
bndstx
arpl
sub
jge
mov
repz
in
push
sbb
test
gs
jg
dec
jp
push
cmpsl
mov
nop
pushf
mov
cli
and
cld
loop
es
jge
jns
shl
mov
pop
std
inc
push
test
mov
mov
mov
pop
pushf
add
xchg
sbb
insb
mov
cmpsb
mov
mov
ljmp
xor
or
in
ss
js
psubusw
or
outsl
mov
loope
push
fs
clc
mov
add
sahf
mov
pop
lret
andb
mov
loopne
loope
push
sbb
pop
cmp
push
xchg
add
mov
imul
clc
loope
stc
stc
clc
cltd
jecxz
fwait
add
push
and
in
popa
aaa
and
or
push
call
cmp
leave
add
out
clc
push
aad
lods
stos
jo
std
adc
dec
addr16
sti
mov
pop
push
call
mov
aaa
xor
sub
add
addl
movsl
or
cmpsl
inc
and
lds
addr16
imul
push
and
icebp
jne
mov
jne
mov
cmc
mov
lcall
faddl
lds
mov
fcompl
dec
mov
fsubs
es
and
pop
mov
shrb
test
ds
xchg
loop
into
fistl
or
cld
int3
adc
dec
inc
jmp
jmp
or
test
sti
inc
cmc
mov
pop
and
pop
scas
push
mov
add
inc
in
stos
jno
repnz
imul
aaa
mov
hlt
cmp
jbe
daa
mov
mov
jb
das
lret
sbb
lret
and
rolb
sbb
imul
out
cmpsb
adc
lret
daa
add
ss
and
out
mov
frstor
aas
xchg
mov
fcmovnbe
dec
or
ljmp
js
test
outsl
pop
jb
adc
lods
xchg
mov
xchg
cli
out
push
pop
mov
mov
imul
dec
loope
in
or
cmp
pop
in
cmp
and
jnp,pn
dec
dec
mov
jnp
jae
jg
cmp
sbb
sbb
xchg
mov
je
dec
aaa
loopne
std
int3
iret
sub
outsl
push
dec
arpl
and
mov
push
xchg
add
notb
and
push
stos
or
inc
imull
xchg
cmp
jmp
sub
pop
xchg
mov
jl
cmpsb
das
lcall
xor
sub
or
cmpsb
pushf
inc
in
push
xor
push
sub
hlt
jmp
scas
outsb
test
xchg
dec
nop
mov
xchg
xchg
mov
mov
cs
repnz
and
pop
sbb
mov
push
andb
je
mov
sbb
imul
test
test
jo
cmp
fwait
pop
and
insb
mov
cwtl
sub
cmp
or
mov
int3
xchg
aas
sbb
sub
rol
pop
arpl
add
in
sbb
movsb
sub
stc
fidivrl
sahf
cwtl
imul
and
jp
les
pushf
orb
mov
cmp
pop
idivb
cli
pushf
inc
pop
mov
sbb
dec
enter
dec
xchg
or
xchg
cmpsl
mov
aaa
pop
mov
stos
pop
jb
mov
add
jge
xchg
pop
dec
fistpl
into
xchg
push
sub
push
sub
bnd
ss
icebp
ret
mov
popa
loopne
add
dec
incl
popa
xchg
mov
aas
sbb
repz
jb
out
aam
aad
jns
mov
fcomip
stos
rolb
jg
jg
ljmp
ss
cwtl
xor
sub
adc
mov
outsb
xor
mov
movsb
jmp
insl
nop
jecxz
push
mov
int
sbb
out
pop
scas
add
add
rclb
sub
stc
push
or
cmp
es
mov
jno
mov
xor
push
lret
mov
dec
add
adc
pushf
jnp
push
aaa
cmp
dec
pop
je
push
adc
sahf
add
hlt
dec
fsubr
out
in
cli
enter
inc
outsb
dec
aad
sbb
xchg
into
setb
cli
mov
adcb
jne
and
jg
sbb
inc
aad
aas
loopne
xchg
je
loope
cmc
pop
xchg
push
addr16
movsl
sti
mov
inc
and
push
mov
mov
jb
out
scas
jne
sbbl
enter
pusha
dec
jbe
pop
icebp
dec
pop
jle
inc
cs
xchg
and
lahf
inc
sbb
sarb
into
int
mov
lods
mov
mov
enter
test
sbb
and
leave
mov
and
cmp
xchg
sbbb
cmpsl
or
dec
pop
fnstcw
int3
and
add
fdivrp
aas
jbe
push
pop
xchg
inc
inc
adc
orl
loopne
in
hlt
add
outsl
fnstsw
mov
push
dec
insl
xchg
sti
cmp
bound
dec
push
repnz
out
out
clc
repz
sbb
insb
movsb
jo
gs
mov
push
cmp
dec
cmc
daa
fiaddl
mov
testb
out
push
xor
mov
aas
add
cmp
mov
xor
cmpsb
jl
sub
mov
sbb
jecxz
lea
movsb
inc
mov
cli
call
pop
pop
mov
ret
xchg
push
int3
lahf
test
ljmp
lea
gs
inc
add
xor
test
pusha
add
lock
dec
inc
pop
push
addsd
xorb
cli
pop
sbb
jns
andl
imul
inc
cmp
mov
dec
xor
addr16
test
arpl
cmp
mov
out
dec
les
fildl
daa
shll
insb
mov
es
xchg
push
lods
add
repz
mov
sbb
mov
mov
es
stos
daa
fisttpl
pop
fisubl
add
pop
jl
lods
or
mov
sbb
mov
popa
sub
fadd
push
cmp
xor
ljmp
xchg
jmp
jmp
sti
dec
ss
dec
sbb
and
lret
into
loope
adc
test
jbe
and
fwait
pop
add
dec
and
data16
cmp
add
ljmp
sbbl
cmp
xor
insb
pop
sub
sub
fstl
flds
gs
dec
xchg
in
jle
lea
and
lahf
mov
sub
mov
shll
adc
ficompl
lods
mov
ja
sub
add
scas
fsts
xchg
xor
mov
shlb
fisttps
in
lret
add
pop
push
inc
int
rcr
or
icebp
adc
sti
mov
int3
loopne
adcb
add
ret
test
clc
insb
fisubrs
fmull
lcall
mov
out
pop
mov
scas
push
add
mov
test
cmp
mov
sub
and
imull
dec
add
insb
shl
cs
in
jb
imul
jb
rorb
xchg
stos
cli
and
mov
xchg
mov
mov
mov
mov
pcmpeqw
stc
mov
ds
scas
xchg
xor
cmp
pop
outsb
rcrb
lret
orb
and
pop
fwait
dec
xchg
aad
aad
sbb
popa
sbb
add
imul
and
sbb
mov
add
jecxz
roll
lret
cwtl
mov
and
pop
jmp
mov
arpl
test
push
lods
test
xchg
add
cwtl
insb
insl
rcll
mov
lods
lods
loop
mov
fs
jmp
inc
and
xor
mov
jl
dec
inc
add
shlb
inc
mov
add
xchg
sub
mov
mov
jbe
inc
pop
icebp
hlt
xor
js
ret
in
jnp
or
xchg
xor
mov
lds
stos
das
hlt
jg
sbb
add
add
lock
cli
mov
mov
clc
push
pop
cmp
dec
push
addb
aam
sahf
xor
pop
xor
mov
in
je
popf
movsb
dec
add
int3
mov
loop
cld
pop
fldcw
js
xchg
mov
in
cld
and
fmuls
inc
fdivr
in
fisubrl
outsb
aaa
xor
mov
clc
shrl
outsl
loope
fs
mov
or
shld
inc
add
in
ds
std
cwtl
subb
fstpt
clc
lret
test
mov
dec
pop
mov
flds
jb
push
xchg
pop
jp
dec
xchg
jnp
mov
xor
aas
out
cmp
js
movsl
fisttps
xlat
lods
stos
push
xor
xchg
iret
ror
jno
sub
in
notl
aad
mov
lret
dec
dec
dec
mov
loope
cmp
test
adc
sbb
add
or
mov
xchg
mov
pop
sbb
sub
sbb
les
xor
out
and
xchg
pop
jno
pop
jmp
cmp
hlt
jne
jbe
add
ror
ds
ljmp
mov
nop
cmp
sahf
push
push
je
push
pop
cwtl
fnstenv
nop
shr
jo
aas
sti
sbbl
xor
lahf
shlb
xchg
sahf
sti
adc
sbb
inc
xor
sbb
test
jns
or
xor
lea
sahf
iret
fcomip
js
jmp
cld
sub
movsb
jecxz
xor
subb
push
pop
push
sbb
jb
jo
popa
aam
push
shrb
mov
jae
add
nop
dec
addr16
sbb
sbb
adc
inc
jne
pushf
inc
pop
icebp
xchg
sub
rcl
addb
mov
pop
leave
shrl
lea
lahf
inc
rcrb
push
adc
cld
pop
lods
dec
push
cmpsb
sub
pop
pop
dec
or
int
and
out
jno
out
into
mov
sub
and
push
movb
jecxz
imul
pop
lcall
inc
add
movsl
rcll
add
or
mov
ss
adc
imul
push
mov
lock
movb
cmp
cmp
jb
lret
fcmovu
in
mov
sbb
xor
inc
std
xor
icebp
jmp
jle
cmp
movsb
outsb
sub
test
mov
int
aas
jbe
xor
sbb
js
cld
adc
pop
add
sub
cmpb
sbb
shll
std
int
movsb
aas
stc
ljmp
and
lcall
lods
rcl
insl
fstps
lcall
xlat
xchg
aaa
test
cwtl
mov
in
pop
pop
xchg
push
adc
inc
lods
mov
movsl
push
shrb
pop
mov
sbb
mov
and
push
pop
inc
mov
out
xlat
add
mov
xor
xor
pop
cmc
inc
mov
js
repnz
sub
in
and
das
shll
dec
dec
xlat
jb
sub
xor
lds
pop
lahf
mov
test
cmp
jg
mov
call
mov
dec
xchg
dec
sarb
les
mov
repz
aaa
jb
dec
cmp
out
mov
popa
es
adc
int
ljmp
lahf
int
mov
or
and
jnp
jne
cli
adc
repnz
and
add
movsl
fldenv
out
fcompl
es
pop
xor
test
int
pop
inc
adc
movsb
xor
std
xchg
pop
fwait
cmp
push
int3
cmp
push
enter
dec
movsl
popa
xor
jle
adc
sub
or
lret
imul
xchg
xlat
or
roll
jae
jbe
cmp
xchg
sub
inc
popf
clc
dec
das
xor
sub
xor
xor
sub
mov
sbb
test
adc
insb
xchg
jl
mov
mov
movsb
or
cltd
mov
je
or
dec
cmp
lret
xor
and
pop
xor
outsb
dec
add
mov
je
mov
and
jae
pop
adc
stc
and
adc
mov
ret
push
push
xchg
aad
stc
insl
roll
push
loop
xor
pushf
sub
xor
jle
repnz
xor
fistpll
lret
sbb
push
movsl
cmpsb
sbb
mov
repz
xchg
push
sub
jns
adc
es
jecxz
aaa
imul
xor
dec
lds
imul
push
and
cld
mov
orb
sbb
sbb
sahf
sub
dec
sbb
push
inc
fidivl
dec
mov
shl
rorl
and
lock
sbb
ds
rclb
cmp
pop
clc
arpl
in
adc
xor
dec
rcl
or
adc
ret
call
jg
push
mov
adc
imul
ret
cld
insb
cs
jbe
sub
fs
cmp
je
xchg
cmp
lds
ret
xor
cmp
out
std
mov
in
add
fisttpl
or
sub
push
push
jmp
das
mov
jecxz
push
aaa
push
jp
adc
mov
pop
mov
pop
add
scas
call
je
mov
call
ds
lds
dec
sbb
nopl
cltd
icebp
sub
add
adc
out
negb
cs
dec
test
sbb
xchg
or
sarl
mov
out
jl
loope
mov
jl
bound
or
rclb
pop
mov
dec
cmp
cmp
loop
lahf
inc
movsb
les
pop
mov
sbb
arpl
mov
mov
mov
cmp
stos
inc
out
pop
std
outsb
or
popf
bound
ja
xchg
mov
xchg
pop
int
push
out
aad
mov
mov
add
xchg
repnz
test
add
pop
xchg
bound
jl
dec
lock
cmc
xor
inc
insl
push
jo
cmp
adc
mov
fs
lret
or
daa
adc
sub
mov
and
jg
xorl
mov
stc
pushf
adc
cmp
inc
jno
mov
xor
leave
and
pop
aaa
xor
fwait
sti
jno,pn
jo
js
xchg
int3
xchg
cmp
jne
xlat
add
inc
fsubrs
lcall
mov
or
pop
js
xchg
out
lcall
mov
ret
dec
pusha
loope
xor
xchg
mov
fadds
lahf
popa
pushf
rorl
lahf
pop
scas
int3
ret
popf
dec
inc
enter
mov
add
mov
adcl
xor
shll
mov
call
aaa
ficoms
data16
push
pop
repnz
pop
loop
xor
pushf
add
lods
shll
lcall
insb
mov
push
std
add
addl
mov
mov
xchg
out
leave
adc
push
outsl
shrb
push
out
or
and
cmc
leave
pushf
add
fidivrs
mov
leave
xchg
ss
sub
mov
adc
jo
movl
dec
call
unpckhps
push
mull
xor
cs
ljmp
clc
push
add
sbb
dec
sbb
lea
adc
popl
mov
inc
inc
cmp
mov
sub
nop
into
adc
jp
or
rcl
jno
or
test
stos
fimuls
inc
movsl
xor
sbbl
xor
and
cld
cmpsb
popf
fwait
pop
mov
add
sbb
sub
fdivl
jg
fs
add
cli
sbb
jne
xchg
push
ljmp
jg
and
inc
fildll
lock
test
xchg
mov
xchg
mov
push
jae
es
and
movsl
negl
ficomps
pop
in
ss
sbb
jo
lock
cmp
add
and
add
dec
loopne
or
sub
es
add
inc
cld
imul
lahf
cmc
mov
sbb
mov
xchg
lods
das
in
jg
xchg
sub
fisttps
dec
inc
inc
icebp
cmpsl
mov
fadds
lds
repz
mov
ficompl
xor
xchg
push
and
pop
iret
out
adc
push
aad
lret
sub
fstpl
in
sbb
fs
vpmacsww
jne
pop
pop
test
int3
mov
pop
lahf
leave
jg
cmp
mov
nop
mov
aad
sub
sti
aad
testl
mov
push
fbstp
shrl
mov
fstpl
lcall
adc
cld
mov
inc
mov
cmpsb
incl
call
hlt
dec
cmp
test
cltd
dec
lock
pop
in
std
int
jb
mov
negb
lret
int
dec
xlat
or
iret
loop
pushf
aad
mov
adc
or
mov
or
mov
inc
push
jle
sub
mov
mov
and
and
cltd
aaa
int3
out
sub
in
pop
out
dec
jbe,pn
adc
and
shlb
xchg
aad
call
hlt
fiaddl
xchg
mov
int3
add
mov
ret
test
test
mov
and
add
addr16
loope
popa
lods
clc
push
jg
cltd
popa
dec
adc
rcl
loope
mov
aad
push
jle
mov
pop
pusha
xchg
int3
loopne
int
mull
call
into
fnstcw
stc
xchg
ljmp
cmp
cld
pop
movsl
push
testb
dec
sbb
lahf
nop
mov
sbb
pop
jmp
jmp
inc
adcl
rorl
mov
insb
add
lret
scas
lret
cltd
fadds
push
addr16
xchg
cmpsl
ja
sbb
or
roll
jo
xchg
iret
adc
push
sbb
pusha
inc
in
push
pop
mov
mov
xchg
push
mov
add
push
lods
push
inc
addr16
add
je
pop
test
xor
dec
stos
sub
and
xchg
push
imul
loope
xchg
push
imul
adc
in
mov
push
xor
push
sbb
aas
inc
mov
xchg
or
lret
fldcw
daa
repnz
aas
adc
out
mov
sub
adc
ret
pop
sbb
repnz
push
pusha
gs
icebp
in
cmp
lahf
loope
dec
cmp
jno
mov
add
sbb
sub
loope
inc
cli
psubusb
fisttps
in
fnstcw
pop
dec
mov
stc
shl
lret
xchg
lea
mov
std
bound
jg
std
push
sbb
addr16
push
and
pop
sub
pop
lds
pop
sbbb
jl
cmp
movl
push
dec
mov
sub
test
stc
test
mov
inc
adc
xchg
push
mov
sbb
or
dec
sub
mov
mov
dec
push
andb
sti
add
fcmovnbe
sbb
addb
and
push
pop
push
jb
xchg
jmp
push
push
cmpsl
fcoms
xor
cwtl
inc
sub
test
test
mov
movsb
sub
jbe
arpl
in
jg
ret
jae
outsl
xor
aaa
xchg
popa
enter
aam
test
xor
inc
or
sahf
sub
mov
int3
add
jnp
insl
push
sarl
hlt
adc
add
or
cmp
js
and
pop
rcrl
xchg
xchg
lds
int3
pop
inc
loop
xor
idivl
nop
pop
cmp
mov
shl
insb
cmp
fwait
lret
pop
xlat
jle
stos
xchg
es
pop
jl
adc
xchg
daa
and
clc
iret
adc
loop
cmp
cmc
out
and
fsubrl
sarl
mov
test
fistl
loope
push
xchg
push
and
mov
je
mov
xor
testb
daa
dec
jl
iret
aad
and
mov
dec
inc
mov
popa
inc
xchg
lahf
and
sbb
pop
test
sub
and
leave
cmpsl
xchg
sbb
mov
js
xlat
and
add
or
xorb
fisttps
pusha
iret
mov
shlb
cmc
xchg
aam
cmp
sub
mov
adc
mov
enter
mov
jae
push
and
test
into
out
pop
shlb
pop
xchg
jle
lds
lods
xchg
pop
daa
adc
sbbl
nop
test
push
adc
jle
pushf
lods
or
ja
push
add
jb
dec
xchg
outsl
cmpsl
jne
aaa
dec
adc
push
jle
pop
xor
sbb
adc
lcall
sbb
dec
mov
in
or
mov
cmc
mov
bound
imul
mov
jb
hlt
je
sti
inc
jbe
inc
xchg
stc
pop
push
jno
jno
mov
sti
mov
pop
sbbl
and
inc
testb
cwtl
xlat
pop
fs
pushf
rclb
jl
popf
iret
ss
lock
fiaddl
xor
loope
add
gs
shrl
adc
xor
daa
cmp
mov
push
cmp
mov
jns
push
decb
inc
lcall
addl
inc
push
push
sbb
jg
cld
cmp
cmpsl
push
loope
imul
filds
scas
repz
test
add
push
cmpsb
lret
popa
mov
ret
sti
dec
jbe
adc
or
ret
add
mov
push
mov
gs
sarb
jo
es
jl
jecxz
and
hlt
scas
add
subb
hlt
nop
jae
scas
or
dec
xor
sub
mov
arpl
subb
inc
shlb
jp
jns
cld
mov
or
jge
sbb
nop
mov
xor
ret
testb
popf
cmp
xchg
mov
add
mov
jle
dec
and
mov
cmp
pop
repnz
mov
mov
data16
mov
pop
imul
pop
lcall
pop
cmp
cmpsl
mov
push
and
mov
arpl
mov
or
mov
jecxz
stos
scas
add
iret
inc
xchg
mov
xor
adc
or
sbb
iret
cltd
sbb
cmpl
mov
decb
insl
mov
mov
fnsave
mov
clc
inc
fsubs
push
jae
mov
scas
sahf
sbb
call
and
push
pop
pop
mov
into
mov
cmp
je
sbb
insb
jle
push
cmp
cmp
fs
mov
stc
jp
in
add
insl
nop
add
dec
aas
je
and
clc
mov
icebp
test
xchg
mov
fcoms
rcrl
loop
mov
push
mov
jno
jb
loopne
add
ljmp
sbb
loopne
cmc
lds
insb
insb
ret
out
mov
push
fists
mov
shll
leave
aam
outsl
stos
or
sub
dec
sub
add
dec
xlat
lods
in
and
xor
jb
out
xor
outsb
cmp
adc
add
inc
and
sbb
cmp
mov
rcll
xchg
cli
shlb
mov
jnp
xchg
pop
cmp
movsl
dec
cli
and
mov
dec
movsb
mov
cmp
xchg
insb
dec
mov
push
dec
pusha
cmpsb
xor
call
lock
lods
pop
adc
sub
popf
or
pusha
lret
movsb
xlat
pop
xchg
nop
shrl
sbb
jmp
mov
xchg
hlt
jp
fidivrl
xchg
inc
xchg
mov
addr16
pusha
loop
popa
enter
push
add
adc
lods
lods
push
dec
shlb
and
addl
addl
sar
test
pop
test
xorl
enter
popf
push
and
ficompl
mov
es
mov
inc
fwait
aaa
pop
ds
cs
add
stos
les
cmp
add
jne
fstl
insl
insb
fcoms
sbb
cmp
jmp
add
inc
loop
sub
imul
sahf
dec
jne
movsb
iret
repz
pop
ljmp
jnp
add
mov
das
stos
shrl
andb
fsubl
and
daa
lea
in
repnz
cmp
mov
das
push
sbb
repz
iret
jl
or
add
dec
inc
outsl
loop
xchg
mov
bound
inc
ss
outsl
sub
mov
push
adc
pop
jge
cmpsb
xor
jno
pop
in
and
pop
xor
popa
xor
pop
mov
dec
fimull
in
in
aad
nop
sub
out
jnp
nop
xchg
scas
xor
pushf
out
data16
aaa
lock
mov
cmp
jp
leave
mov
pop
add
dec
movsl
push
push
adc
mov
shlb
push
testb
jge
jbe
push
and
mov
lret
out
jg
and
lods
add
lea
pop
inc
or
mov
rcl
cwtl
sub
enter
aaa
ror
dec
les
xchg
insl
jg
mov
xchg
add
out
ja
add
mov
out
inc
adcl
shlb
jle
and
cs
lahf
hlt
jp
repz
outsl
xor
fcomps
adc
pop
add
stc
jp
adc
jae
jmp
das
xor
or
push
xchg
xor
mov
mov
loopne
push
mov
dec
in
fsts
jns
sub
clc
mov
xchg
cmpsl
sub
insl
xchg
shrb
loop
sbb
in
cmpsb
insb
adc
pop
adcl
push
mov
es
dec
xlat
xchg
stos
jge
daa
sub
rolb
add
in
into
xor
or
loop
mov
std
dec
fcoms
lods
adc
sub
xchg
insl
xchg
fdivs
xor
enter
cwtl
sub
les
ja
call
dec
or
sub
int
push
pop
jg
test
negb
mov
jge
inc
mov
push
mov
add
mov
sti
orb
aad
adc
lahf
mov
pop
xlat
gs
cwtl
jp
inc
lods
sub
rep
mov
sbb
add
pop
mov
aaa
cmp
es
dec
std
mov
inc
popa
or
jge
rorb
clc
xchg
xlat
push
popa
inc
in
lret
mov
lods
mov
sub
and
push
rcr
jno
inc
lods
pop
xor
pop
shlb
push
inc
jnp
jae
xor
inc
xor
push
aam
mov
cmp
rorl
cwtl
mov
jb
cli
xchg
mov
mov
mov
push
sbb
aam
xor
jb
cld
nop
lds
out
cwtl
push
loopne
ss
pop
fwait
pop
xor
mov
repz
add
in
sbb
out
and
xor
into
pop
mov
shlb
adc
xchg
or
lods
xor
cld
jo
enter
pop
adc
dec
jnp
shll
lahf
cmp
or
jmp
shlb
push
rorb
push
leave
inc
sub
fimuls
scas
sbb
mov
daa
loope
jns
pop
les
mov
mov
mov
ja
pop
je
pop
cmpsb
stos
jns
xchg
inc
inc
cmp
stos
add
imul
popf
mov
cmp
lea
ljmp
jmp
mov
loopne
out
mov
cld
or
push
addr16
aas
nop
and
call
outsb
rcrl
out
push
or
sbb
cmpsl
test
add
in
inc
and
jns
pop
jl
dec
mov
outsb
ja
add
lods
test
jnp
xor
in
jg
fsubs
gs
stos
mov
imul
mov
or
aad
outsl
mov
add
mov
popf
int
repnz
or
cmp
xor
outsb
and
xchg
in
lret
ret
sbb
fildll
mov
add
inc
pop
sub
jge
addr16
adc
xor
into
cmp
lods
fucomi
jns
mov
cwtl
testl
mov
mov
fnsave
push
and
jle
rol
out
adc
dec
insl
add
rorb
enter
xor
loop
jno
insb
popf
jle
fucom
imul
ljmp
ss
sub
push
and
in
test
pop
mov
push
jge
mov
dec
mov
sti
aaa
out
cwtl
dec
bound
subl
push
add
in
sub
sbb
push
jb
scas
adc
add
sbb
mov
andb
push
or
mov
je
pop
or
lret
jne
mov
adc
mov
push
js
adc
cwtl
jmp
fs
mov
scas
jecxz
push
push
fs
insl
push
sbb
sahf
jns
cmp
gs
adc
repnz
clc
mov
repnz
mov
push
pop
pop
cli
mov
lahf
adc
fcomi
popa
out
pop
push
in
mov
test
pop
xor
push
clc
cwtl
pop
mov
and
push
jns
mov
cwtl
arpl
stos
push
lcall
jmp
xor
inc
int
sahf
fcompl
xor
or
add
out
cltd
gs
outsb
fdivrl
out
or
in
cli
jp
insl
stc
popa
insl
int
lahf
dec
or
xchg
jne
cmpsl
daa
xchg
mov
insl
inc
xor
inc
fdivl
jp
push
stos
fildl
cmp
xchg
mov
pop
fnstenv
jnp
mov
or
pop
adc
fsubl
jo
mov
cmp
fcmove
popa
xchg
das
shll
scas
in
jnp
in
enter
mov
outsl
push
ret
xchg
push
dec
adc
shr
shlb
sbb
sub
cmp
ret
xchg
fbstp
shrb
lds
ljmp
addr16
xor
xor
mov
cmp
jo
shrl
gs
dec
mov
repz
pushf
inc
mov
imul
outsb
sbb
in
test
cmpl
cmp
cltd
mov
push
sub
inc
or
push
sub
mov
pop
imul
jl
jecxz
mov
cmp
pop
sub
imul
insl
or
inc
mov
or
nop
inc
sub
lahf
addr16
xchg
mov
mov
adc
out
lret
push
pop
dec
xor
outsb
stc
and
lahf
xchg
jecxz
and
jns
fldl
jnp
cs
sub
movsl
ss
lahf
flds
mov
sub
xchg
mov
shrl
or
mov
inc
shrb
mov
push
ficomps
movsl
inc
leave
fwait
and
je
iret
loopne
or
int3
pusha
push
cmp
push
xor
jmp
pushl
jae
int3
pushf
aas
xchg
push
je
loope
popf
pushf
mov
sub
push
jp
and
in
add
mov
or
test
mov
std
out
scas
sbb
mov
movsl
xorl
fs
pop
jmp
jg
add
push
xor
add
mov
jl
inc
mov
pop
jb
iret
insb
mov
call
push
insl
jle
insb
and
mov
pop
mov
xor
andb
push
leave
push
jo
xor
sbb
mov
into
roll
pop
jmp
movhps
loopne
scas
sub
scas
inc
pushf
cs
insb
call
cmpl
xchg
mov
stos
and
cmpsl
xchg
roll
das
xchg
femms
lock
mov
adcb
add
subb
or
lcall
or
mov
sub
xchg
jo
jge
loope
in
lods
pop
jl
or
or
bound
xchg
sbb
aaa
push
pusha
cmc
mov
clc
adc
dec
xchg
inc
mov
stc
cmp
jnp
sub
in
mov
testb
xor
inc
push
or
mov
mov
inc
pop
das
cmpsl
lea
cmp
ss
inc
push
dec
out
out
jle
cmp
bound
gs
movsl
mov
jae
mov
popa
roll
loop
lods
in
jg
jecxz
pop
add
or
outsb
in
repz
outsb
arpl
scas
mov
sbb
sub
jnp
mov
mov
cmpl
mov
jne
loop,pn
sarl
stc
pushf
inc
xchg
shrb
pusha
and
lcall
dec
xor
inc
cmp
ror
add
pop
lea
add
fs
and
jbe
xor
push
mov
jns
mov
push
jb
mov
sub
in
push
mov
lret
pop
cmc
lret
mov
push
sub
divl
stos
push
adcb
lock
xchg
loope
push
and
repz
or
cmp
mov
add
hlt
ror
mov
inc
pop
or
fldt
mov
out
push
pop
sub
fists
inc
add
js
sbb
push
push
movsb
ret
leave
sbb
lock
cwtl
out
pushf
out
in
aas
mov
int3
mov
pop
mov
insb
add
push
idiv
cld
addr16
outsb
movsl
cmp
push
cli
adc
je
or
mov
rorb
inc
jle
cltd
lret
iret
inc
aad
push
jge
out
jno
ljmp
jb
dec
call
inc
ds
in
jno
loop
xchg
cli
stc
mov
push
cmc
lret
sahf
push
test
out
mov
pop
je
jle
or
dec
jle
rol
scas
cli
mov
and
jo,pt
sub
and
mov
mov
pop
idivl
pop
into
rcrl
icebp
dec
dec
push
fstpl
cmp
jmp
loopne
sub
dec
ret
adc
cmc
adc
adc
dec
xor
test
pusha
fstpl
loope
lret
inc
out
sub
pop
cs
pushf
aam
add
bnd
roll
mov
push
mov
mov
cmp
popa
int
jns
loopne
add
pop
push
andl
sub
pop
cmpsb
cli
pop
mov
xor
int3
aad
dec
aad
aas
inc
xchg
pop
outsl
ja
dec
dec
xchg
inc
push
mov
fcoml
mov
loopne
add
cmp
or
fs
push
jg
stos
call
sahf
inc
jo
loop
xchg
adc
fdiv
lret
pusha
cs
clc
push
cltd
pop
mov
mov
out
ds
inc
xchg
ficompl
jge
add
mov
push
pop
popa
arpl
sbb
jae
cmc
out
inc
xor
jno
xchg
cld
in
pushf
push
or
xor
sbb
sub
push
dec
data16
jns
add
inc
adc
imul
mov
push
jmp
adc
xchg
movsb
rorl
int3
fwait
jae
sbb
incl
sahf
xchg
add
xor
mov
hlt
das
mov
mov
data16
cmp
stos
cwtl
push
in
inc
rcrl
pop
popf
ret
mov
inc
jp
pop
test
mov
dec
xlat
sahf
cltd
inc
dec
arpl
pop
sbb
aam
imull
cmpsb
movsl
adc
lds
pushf
cmp
lock
sub
jmp
mov
xchg
inc
test
inc
push
cmp
ficoml
shr
add
mov
in
adc
mov
mov
movsl
es
vunpcklpd
das
jns
mov
mov
shr
scas
lcall
pop
xor
mov
mov
inc
add
mov
std
pop
xor
adc
or
pop
adc
sbb
push
ds
and
dec
cli
call
lret
and
ljmp
jb
sbb
add
xchg
pop
mov
or
ret
push
insl
fsubl
xchg
pop
sub
aad
ret
add
cmp
lods
xor
mov
mov
sbb
int
dec
adc
cld
inc
fists
mov
pop
sub
xchg
std
cmp
add
push
and
or
loope
mov
iret
iret
cmp
mov
cmp
mov
loope
cmpsb
jl
adcb
addr16
cmp
adc
push
leave
imul
sbb
mov
in
sub
cld
testl
repnz
loopne
fwait
sub
xor
sbb
pop
jnp
sbb
cmp
xor
xchg
shl
pop
and
mov
xchg
pop
jne
and
add
mov
clc
jg
lea
mov
mov
xor
adc
leave
xchg
jnp
ret
dec
pop
push
mov
lea
cmp
inc
fcoms
lods
mov
dec
dec
or
repnz
leave
adc
gs
pop
adc
sub
pop
sub
xchg
push
cmp
pop
out
aas
jl
push
xor
insb
and
outsl
xor
js
jmp
fstps
out
nop
cmp
xchg
bound
ds
sub
sbb
fsub
add
or
fs
inc
push
xor
or
cmp
mov
jecxz
insl
fdivrl
sbb
xchg
insl
and
insl
xor
popa
and
rclb
sub
sub
sbb
dec
and
mov
push
sbb
les
dec
rol
cmp
or
sbb
mov
lret
mov
cmp
mov
mov
outsl
add
sub
push
xorb
and
fistps
mov
out
hlt
and
inc
lock
jmp
gs
xorps
mov
sub
and
pop
xchg
push
hlt
pop
jecxz
enter
cmp
jae
cmp
int
insb
cmp
mov
or
outsl
bound
js
cmpsb
inc
and
add
xor
mov
std
dec
insl
shr
sahf
test
stos
clc
shrl
push
pop
push
fistpll
jmp
test
ss
mov
add
cmp
xor
pushf
xchg
push
add
lret
inc
arpl
adc
pushf
les
cmpsl
test
call
xchg
dec
mov
mov
lds
jl
addr16
mov
jmp
xor
test
push
jecxz
ret
stos
test
adc
int3
hlt
inc
inc
out
jb
sbb
mov
mov
mov
lahf
jmp
mov
lea
call
inc
sbb
push
es
movsb
jg
cmp
out
jno
pop
icebp
in
mov
call
fisttps
jp
rcr
mov
leave
sbb
aaa
jge
sbb
das
movsb
mov
mov
sbb
adc
out
sar
jae
fucomip
imul
and
pop
lret
jg
sbb
mov
cmc
lock
test
and
xchg
adc
cmp
insl
lret
call
int3
fnstenv
jbe
mov
fiaddl
cmpsb
lret
mov
mull
pop
test
xchg
inc
mov
sub
call
sub
push
jge
insb
push
in
sbb
xchg
mov
inc
lods
jns
bound
std
mov
cmp
in
data16
aam
and
nop
add
dec
pop
shll
or
adc
mulb
popf
inc
jl
xchg
lea
mov
add
movsb
cmp
fildll
add
es
mov
hlt
or
loopne
test
cmc
jbe
mov
jns
dec
pop
imul
std
dec
pop
inc
mov
push
or
iret
popl
int
and
sarl
cmp
mov
xchg
stos
addr16
test
mov
jmp
push
and
xchg
pop
repz
enter
push
inc
push
stc
and
daa
and
scas
enter
lret
fsubrp
mov
in
icebp
outsl
das
lods
push
out
or
in
cltd
push
cli
inc
sub
clc
and
pop
add
cmp
mov
jns
mov
and
ljmp
xchg
xor
mov
pop
aas
pop
daa
mov
inc
scas
ret
adc
je
jae
les
aam
sub
fisttpl
xchg
in
testl
pop
in
push
jne
jno
add
push
arpl
jmp
sub
jp
adc
jno
xchg
shll
sub
mov
push
cmpsl
dec
pop
push
add
dec
xor
aam
cmp
xor
pop
call
nop
xchg
out
adc
and
push
adc
inc
xlat
mov
pop
les
push
pop
insl
data16
or
adc
inc
out
stos
adc
dec
sbb
or
mov
dec
lock
jg
mov
cltd
cmpsb
push
mov
icebp
ljmp
adc
cmp
aam
subps
inc
sub
sbb
push
sarl
or
xor
adc
add
out
mov
incl
mov
shr
inc
xchg
jne
mov
test
inc
mov
mov
divb
push
fstps
sbb
aam
in
popf
sub
sub
dec
out
fiaddl
mov
cmpsl
cmp
test
popf
xchg
rorl
adc
mov
or
adc
xor
cs
loope
in
mov
out
frstor
mov
js
das
cmc
pop
aaa
ret
lahf
je
mov
and
cmp
nop
pop
pop
rorl
push
push
mov
cmpsb
and
stos
or
enter
dec
into
sub
cs
leave
pop
xorb
or
pop
iret
and
outsl
push
mov
sti
cmc
mov
mov
js
adc
cmp
xor
into
in
pop
inc
sahf
lock
arpl
add
flds
and
outsl
pop
out
xor
sbb
lret
jmp
fldcw
into
scas
add
incb
mov
call
cmp
sbb
mov
popa
jg
call
js
cltd
insl
out
and
arpl
and
lea
cmp
and
inc
push
and
pusha
mov
mov
xor
pop
lret
cmp
pop
cmp
testb
pop
mov
pop
jo
out
insb
xor
mov
and
jns
cli
xorb
scas
and
leave
pop
pop
fstpt
pop
bound
mov
das
in
adcb
lods
cmpsb
aad
ret
pushf
xchg
push
in
mov
mov
sub
test
lret
daa
mov
lea
or
cmp
imul
in
clc
outsl
sahf
lds
fidivl
ds
jno
imul
js
push
jnp
testb
aam
jge
mov
cld
cmpsb
mov
nop
and
dec
mov
popa
jecxz
or
or
jmp
mov
or
addr16
or
js
mov
mov
xchg
test
pop
and
fnstenv
inc
inc
ret
adc
sub
sub
out
xor
sub
cmpsl
sbb
mov
xor
stos
imul
dec
daa
push
lods
mov
pop
push
and
lock
sbb
adc
ss
addr16
int
movsl
and
sub
dec
int3
rolb
movsb
mov
fisubs
push
xchg
mov
repz
setb
sbb
and
add
cli
mov
jp
pop
jp
lcall
sub
jmp
out
aam
sub
movl
pushf
loopne
jne
aaa
imul
and
rorl
pop
push
lret
mov
mov
and
pop
aad
stos
imul
xchg
fsubl
pop
mov
adc
mov
test
lahf
fnstcw
sbbl
push
push
jno
push
test
sbb
leave
aam
dec
popf
inc
stos
lods
or
bound
mov
add
andl
jns
or
cmp
imulb
icebp
xor
fnstsw
or
jl
sahf
xor
inc
sub
clc
cs
pusha
push
insl
pusha
push
jb
shlb
in
mov
pop
sbb
jnp
addr16
sarb
mov
imul
jmp
hlt
xchg
aas
inc
in
jl
cs
adc
out
sbb
lods
lret
fidivl
data16
jae
nop
mov
add
mov
sbb
sbb
xor
stos
popf
lahf
loope
inc
lock
shlb
adc
jne
int
rclb
mov
dec
test
xor
xchg
inc
jne
jno
jbe
arpl
int
cmp
inc
repz
dec
rolb
jle
push
in
lock
or
mov
cltd
cltd
cmp
rcrl
test
xchg
sti
jnp
inc
sbb
sub
stc
jmp
push
push
cli
cli
enter
add
dec
xchg
cmp
imul
cmpsl
pop
push
jae
pop
and
xchg
mov
push
xchg
push
imul
arpl
addr16
dec
dec
push
std
clc
jb
mov
cmp
push
mov
mov
pop
fwait
shll
mov
sub
aaa
mov
xchg
call
mov
dec
ljmp
cli
xchg
imul
and
in
mov
cmp
shl
sub
lahf
pushf
push
adc
test
rcll
add
push
cmp
pop
xor
jl
mov
xor
lock
lcall
xor
insb
xlat
out
xchg
inc
shlb
dec
sbb
cwtl
hlt
mov
xchg
or
dec
pop
xor
sar
add
push
scas
xor
jge
in
dec
inc
decb
fs
jl
add
sbb
shrl
or
out
lods
repz
rol
inc
pop
jno
xchg
mov
sub
sbbl
adcb
or
aas
jne
icebp
dec
pop
cmp
jb
loope
or
dec
adc
ss
mov
and
sub
insl
and
loop
sarb
push
rcll
xor
rorl
add
dec
mov
fdivl
sarl
repz
pop
ss
movsb
adc
mov
jno
stos
sub
mov
adc
imul
sbb
mov
mov
mov
decl
lcall
dec
lret
xlat
cli
pop
ss
addr16
cmp
mov
add
pusha
jnp
mov
decl
inc
sbbb
dec
movsl
ss
je
jle
mov
mov
insl
push
insl
mov
cmpl
enter
mov
lods
stc
mov
add
jp
clc
das
cmp
jae
xchg
hlt
pusha
je
std
insl
pop
movsb
hlt
clc
decb
mov
mov
fdivrs
lods
inc
sti
adc
jp
cltd
jae
notb
push
inc
aaa
pop
add
mov
test
arpl
sub
xchg
cltd
cmp
mov
aas
fisubs
push
sbb
pop
pusha
xor
lods
lahf
mov
pop
repz
paddw
ss
cmpsl
rclb
xorb
add
int3
mov
dec
cli
cmpsl
lahf
les
movsl
sahf
inc
test
das
fidivrl
test
inc
sbb
sub
and
nop
pop
aaa
test
inc
cmp
push
insb
icebp
lret
mov
cmp
mov
clc
sub
sub
mov
lret
adc
call
lds
xlat
xchg
je
add
repnz
ja
xor
push
lods
lods
sbbl
sbb
aas
lds
jbe
jb
adc
xchg
ss
shrb
mov
aas
jbe
cmpsl
dec
loop
jl
and
testl
std
pop
jbe
lods
jle
icebp
xchg
push
pop
inc
ficoms
xchg
test
jg
xchg
sbb
pop
mov
pop
je
xchg
out
xor
outsb
cld
or
imul
fidivrs
jno
jp
push
lods
loope
sbb
cld
pusha
cmp
je
push
add
adc
xor
cmp
or
enter
leave
mov
outsb
jp
aam
and
lcall
scas
rolb
mov
and
add
icebp
decb
scas
imul
sbb
mov
push
push
push
shl
and
dec
sub
lret
mov
rorb
dec
lods
repnz
stos
and
fadd
movsb
push
add
daa
sbbb
dec
mov
mov
loop
ret
cltd
push
mov
ds
mov
loope
lds
ret
jge
cmpsb
dec
es
jle
xchg
adc
in
enter
mov
mov
ret
mov
mov
inc
jnp
mov
pop
outsb
std
pop
jl
and
or
push
insb
mov
fbstp
test
add
sub
jbe
mov
mov
sub
push
scas
mov
aaa
ret
add
scas
lahf
dec
cmp
roll
sar
cltd
cmp
rcr
loopne
ret
jbe
sbb
or
aaa
aad
loop
or
dec
je
nop
test
ja
nop/reserved
mov
mov
clc
aad
dec
jbe
mov
sti
into
mov
and
aam
dec
rclb
jmp
adc
xchg
jg
out
mov
add
lods
cwtl
xchg
jle
fmull
mov
dec
pop
adc
jo
sub
dec
movsl
mov
lcall
mov
je
fucomi
pushf
cmp
movsl
addb
push
adc
sbb
mov
pop
mov
mov
mov
fs
inc
push
stos
fiaddl
push
iret
push
fsubrs
hlt
add
cld
lds
adc
sti
pop
leave
mov
insb
adc
insb
and
mov
mov
orl
aad
int3
mov
mov
jns
mov
scas
loopne
loope
mov
pop
add
outsl
jbe
sbb
sti
rcr
push
cmp
and
jbe
xor
push
xchg
mov
mov
xor
jb
mov
in
add
lret
shlb
add
jmp
add
icebp
push
sbb
mov
imul
pusha
add
test
lret
popa
xchg
cltd
push
push
xor
mov
popa
int
js
hlt
mov
repnz
push
push
push
add
and
mov
call
add
and
cwtl
sub
xadd
enter
mov
in
adc
pop
add
mov
pop
xchg
mov
jge
inc
into
mov
mov
fs
xchg
stos
mov
imul
cltd
add
add
stos
iret
outsb
pop
insl
fucomi
push
int
adc
das
aaa
add
jo
mov
inc
and
fs
add
in
enter
xor
xchg
add
mulb
testb
sbb
fwait
gs
or
ret
cs
mov
ds
std
in
jne
fs
sti
push
adc
fxch
out
adc
rolb
add
jecxz
gs
xor
enter
jno
pop
adc
ja
push
stc
es
xchg
shll
in
ss
xor
repnz
push
and
sub
ljmp
hlt
pop
fistpl
mov
jo
fbstp
int3
xchg
mov
sub
cli
fwait
add
cmpsb
call
test
mov
dec
andnps
cmp
xchg
inc
sbbb
mov
inc
push
adc
arpl
movsl
mov
movsl
pop
loopne
cmp
mov
or
cmp
jnp
sub
mov
xor
adc
cmp
push
das
add
jns
push
xchg
insb
adc
cmp
pop
jne
jl
bound
out
stos
sbb
sbb
pop
pop
add
sbb
les
inc
jp
inc
fiaddl
sub
out
shr
ret
jns
jnp
ja
sahf
enter
leave
data16
pop
pusha
scas
mov
aad
jae
popl
jcxz
push
flds
or
je
jae
jb
dec
dec
call
xor
pushf
jmp
pusha
cmp
xchg
shlb
cli
lea
and
push
into
mov
into
clc
mov
or
mov
sbb
bound
pushf
shlb
fdivr
cld
pop
movl
decl
imul
insl
test
test
out
lcall
inc
cmp
aam
imul
cmp
aas
mov
pop
push
das
sub
cmp
fsubrs
xchg
sub
pop
mov
pop
pop
fwait
sub
inc
xchg
fwait
push
mov
nop
arpl
les
add
lods
repnz
in
or
ds
idivb
dec
push
in
add
loop
inc
fisubl
das
sub
cli
inc
jnp
or
mov
nop
sbb
jae
cwtl
pusha
insl
and
call
mov
or
cli
aaa
fs
inc
pop
inc
push
jns
lods
out
ss
movsb
aam
inc
pop
lock
or
iret
xor
hlt
cli
cltd
ret
ljmp
push
xchg
outsb
push
ljmp
ret
mov
jle
test
mov
call
pop
push
lret
and
fldt
pop
dec
aaa
test
sti
movsb
xor
pop
cmp
mov
out
mov
jbe
test
cmp
cmp
mov
pop
addl
loope
jne
push
rclb
jne
aad
sbb
mov
inc
cmpsl
out
imul
stos
cmp
shl
dec
xor
jp
lods
jmp
fwait
push
aam
pop
js
jl
jmp
ds
add
xor
dec
sti
loopne
or
ja
scas
jmp
nop
scas
adc
test
dec
mov
mov
stc
pop
mov
mov
dec
pop
fsubp
int3
dec
mov
outsb
mov
cmp
jle
fs
pop
cmp
pusha
insb
sbb
mov
xchg
fmuls
dec
and
lds
nop
inc
repnz
and
test
mov
in
push
int3
fimull
cmpsl
lret
sub
jl
shr
push
pop
testb
mov
jmp
out
fcoms
in
lahf
icebp
or
pop
adc
pop
fists
stos
es
adc
xor
xchg
std
or
movsb
push
mov
mov
lock
imul
inc
sbb
push
les
sbb
adc
in
push
and
and
mov
jns
movsb
out
mov
les
sbb
sub
test
jmp
cmp
jno
add
add
fildl
cltd
mov
cmp
pop
aaa
fildl
mov
out
mov
inc
movsl
cmpb
cs
outsb
fidivrl
pop
orl
jmp
out
pop
mov
lcall
inc
mov
lods
pushf
pop
fiaddl
add
popf
sti
sub
add
mov
cld
aas
jne
sbb
mov
cld
sbb
in
les
inc
js
add
pop
mov
dec
data16
test
int3
mov
and
call
rcll
ss
outsl
push
dec
jge
adc
aas
stc
inc
and
jle
or
iret
mov
mov
sub
loopne
clc
adc
fisubrl
arpl
ljmp
iret
roll
fisubrs
cmc
inc
sarb
clc
es
xchg
lahf
xor
in
xchg
stc
les
pop
or
xchg
push
outsl
mov
cmpsl
push
sub
xchg
jnp
fs
out
sbb
sbb
js
mov
in
dec
cmp
add
xchg
dec
loope
xchg
push
enter
jns
pop
pop
mov
mov
pop
adc
shll
insb
push
mov
and
fdivrl
xchg
mov
mov
mov
stos
lcall
sub
popf
ret
adc
pushf
int
icebp
dec
push
adc
xchg
jno
imul
ret
and
pop
imul
in
pop
or
aam
xchg
inc
sub
out
addr16
pop
js
jecxz
mov
lea
fstps
fisubl
mov
std
aaa
rcr
dec
test
inc
out
mov
mov
dec
inc
add
enter
sti
inc
mov
add
stos
imul
mov
cmpsl
andb
stc
mov
imul
pushl
dec
or
dec
sub
in
faddl
fnsave
sbb
in
push
sbb
mov
pop
aaa
inc
pop
cmc
cltd
xor
add
shlb
sub
test
outsb
pop
aad
lret
adc
int
outsb
jns
fsubs
adc
and
dec
rclb
flds
jp
and
mov
add
add
cmpl
lds
cmpsl
push
pop
scas
xchg
pop
sahf
iret
cmpl
mov
out
adc
and
adc
xchg
sub
pop
stc
nop
mov
inc
movsl
mov
or
inc
in
cmp
adc
das
push
in
jle
jae
push
and
or
fs
and
int3
jg
dec
cmpsl
pop
mov
push
mov
pop
and
notb
aad
xchg
inc
lret
aad
mov
loopw
test
mov
push
and
cmpsl
sub
push
inc
adc
xchg
jl
push
xchg
or
fdivl
pop
mov
insb
sub
lret
mov
test
pop
mov
and
jl
xchg
push
movb
push
pop
repnz
lock
pop
sub
cmp
cmp
enter
jl
addl
mov
popa
pop
adc
pop
lock
add
jns
dec
jno
and
and
xor
pop
jg
cmp
mov
push
div
push
fistpl
les
in
jb
cltd
fdiv
enter
loop
outsl
jo
inc
nop
inc
mov
call
ja
movsl
or
clc
mov
nop
leave
push
add
sbb
mov
adcb
insb
adc
dec
fistl
mov
xor
ret
insb
dec
jmp
int3
fisubs
cmp
insb
xchg
mov
ja
roll
sbb
flds
scas
test
imul
jl
out
inc
push
mov
jg
add
mov
in
mov
xor
fistpl
stos
adc
mov
adc
mov
mov
push
movsl
dec
loope
dec
cwtl
inc
cmp
adc
push
int3
push
mov
adcl
imul
mov
push
xor
clc
fisttpl
jnp
clc
sbb
push
aad
push
and
dec
xor
cmp
nop
jns
sub
inc
in
push
pop
es
arpl
mov
or
das
imul
out
hlt
imul
nop
cmp
hlt
push
cmp
dec
loope
jbe
int
add
xchg
in
bound
hlt
cmp
jg
inc
and
xchg
mov
lds
lret
sub
mov
cmc
push
mov
or
mov
cltd
leave
cmpsl
jns
or
cmp
pop
bound
add
xchg
js
jno
mov
movsb
mov
mov
shlb
mov
dec
inc
push
mov
es
sbb
imul
inc
negl
ret
shr
push
inc
movsl
loopne
mov
xor
xchg
rep
into
jmp
mov
xor
sbb
push
mov
jae
mov
call
ret
mulb
test
mov
xor
insb
mul
lds
add
addb
aaa
push
mov
add
jecxz
lds
sbb
jmp
rclb
sarb
cmovae
lcall
rcll
or
add
push
xchg
or
pop
sub
mov
push
add
enter
ficomps
mov
es
jne
xchg
mov
outsb
sub
stos
out
movsl
cltd
xchg
cmpb
aas
lahf
leave
or
dec
jp
push
mov
dec
aas
mov
add
mov
rorb
and
int3
cmpsb
pop
mov
xchg
pushf
pop
sub
mov
mov
fisttps
cwtl
outsb
aam
imul
xchg
pop
mov
push
xor
add
aaa
out
push
sub
addr16
xchg
into
inc
dec
shlb
and
les
sahf
into
mov
xor
inc
adc
imul
xchg
xchg
mov
cld
int
bound
nop
cmp
jo
aas
clc
cwtl
jmp
mov
imul
push
loopne
xor
sbb
jl
hlt
adcl
add
repz
inc
lcall
dec
cmpl
lret
push
and
xlat
lret
add
push
stc
pop
aas
mov
or
pop
cs
lcall
imul
and
int3
push
mov
xchg
push
mul
cwtl
dec
push
and
jo
lret
inc
push
aas
adc
mov
jle
out
fists
in
jnp
es
shl
mov
sub
cltd
pop
mov
add
dec
leave
insl
jbe
mov
jb
jbe
or
xchg
adc
das
stc
adc
sbb
xchg
pop
mov
daa
mov
jnp
pop
add
mov
arpl
cmp
xchg
pop
mulb
dec
imul
rclb
stos
shlb
movsb
jo
jb
adc
push
pop
dec
ja
mov
cmp
push
lret
add
ret
xchg
nop
mov
push
arpl
pushf
and
jo
or
in
push
jns
out
jae
sbb
lahf
push
sub
cmc
push
dec
jns
scas
mov
push
test
and
xchg
push
sbb
mov
mov
scas
xchg
outsb
mov
imul
add
arpl
imul
or
aad
fisttpll
insl
pop
repnz
repz
pop
subb
int3
add
iret
sahf
jo
fcmove
add
fdivs
mov
mov
scas
push
push
mov
fwait
or
and
inc
scas
mov
rclb
fimuls
adc
stos
pop
fs
pop
cltd
and
xor
iret
or
insl
cwtl
mov
aas
adc
popa
enter
dec
xchg
stc
pop
hlt
addr16
lcall
out
jo
data16
iret
mov
push
mov
inc
dec
inc
cmp
sbb
mov
cmp
stos
sarl
hlt
sbb
in
fwait
or
pop
fisubl
cmc
push
xor
inc
cmp
shrl
pop
lahf
push
push
shlb
mov
in
movb
adc
adc
repnz
xchg
push
lods
adc
mov
gs
out
sarb
dec
mov
pop
mov
loopne
xchg
pop
and
inc
sbb
hlt
xor
or
mov
jge
or
cmp
ja
jo
and
rcll
outsb
loop
xchg
sub
mul
fcmovb
ja
mov
es
xor
jns
test
fsts
jle
out
in
or
and
clc
movsl
cmc
add
ret
fdivs
jnp
mov
pop
imulb
bound
xchg
dec
ror
and
and
insb
leave
call
add
dec
das
movsl
mov
mov
pop
pusha
or
mov
push
jb
mov
mov
out
lock
or
ja
loopne
icebp
sub
jp
stc
das
repnz
loopne
ss
jns
mov
sbb
lds
mov
pop
adc
mov
insl
ret
and
xor
loop
dec
rcrb
and
jne
dec
addr16
or
adc
cmp
daa
inc
push
lret
leave
pop
loopne
ja
sbb
push
test
sbb
sbb
shrb
lods
sub
xor
mov
iret
dec
sub
sbb
or
call
or
sub
addr16
sbb
mov
stos
nop
adc
ds
mov
ss
mov
xor
int3
push
hlt
fstpt
movsb
in
and
jmp
mov
or
pop
sahf
test
pop
lret
rorl
jmp
insb
mov
lcall
push
pusha
adcl
jns
outsl
test
fldl2e
cmp
icebp
loop
in
and
faddl
inc
sbb
das
cltd
insb
call
inc
jecxz
lret
fwait
clc
xor
or
cmp
rcpps
sbb
mov
pinsrw
push
sub
sbb
mov
movsb
push
xchg
fsubp
mov
cmc
adc
stos
jl
scas
pop
sub
test
push
pop
sbb
pop
ja
push
pop
ficoms
pushf
mov
or
leave
add
jecxz
mov
push
in
or
mov
mov
nop
nop
jbe,pn
pop
icebp
xchg
mov
pop
sarb
adc
addr16
gs
sti
lcall
xchg
push
xchg
xchg
xor
lea
orb
aad
cmc
pop
les
movsb
sbb
jecxz
je
shll
push
add
dec
dec
sbb
push
sbb
lock
dec
add
cld
and
cmpsl
mov
outsl
jno
out
mov
shlb
sbb
jmp
xchg
or
ljmp
cs
in
cmp
stos
sub
loop
in
add
test
popa
aam
mov
pop
cmpsb
jae
push
and
and
les
in
xor
cli
and
js
jl
in
jg
cmp
loop
adc
inc
cld
int3
sahf
ret
ja
insl
repnz
mov
sub
mov
pop
sbb
cmp
enter
sbb
push
sub
pop
dec
js
outsl
out
loop
xchg
sbbl
jge
push
lock
pop
cmp
mov
dec
lods
inc
mov
pop
xor
cmp
js
mov
xorl
gs
js
cmc
mov
ret
lret
xchg
iret
ret
arpl
jo
loopne
int3
out
je
aas
mov
inc
loop
xor
std
jmp
inc
movsb
push
pop
gs
das
mov
pop
arpl
dec
cmp
and
les
fdecstp
inc
in
cltd
sbb
cmc
adcb
inc
add
mov
stos
inc
outsb
pusha
enter
aam
pop
sub
xchg
pop
mov
imul
cwtl
es
or
xchg
push
inc
jbe
xlat
lock
sbb
lret
cmp
push
sbb
jnp
icebp
and
or
pusha
push
adc
fiaddl
stos
and
mov
ret
sub
rol
into
hlt
movsb
push
arpl
lds
stos
inc
and
mov
mov
rol
mov
adc
inc
sub
test
std
aad
test
mov
arpl
aaa
xor
cld
aad
xor
sub
pop
fcoms
cwtl
aad
mov
lock
fwait
sbb
mov
cmpsb
xchg
push
jle
dec
out
cmp
out
mov
lods
movb
dec
jmp
rcrl
data16
jo
arpl
pop
pop
test
lock
mov
scas
cmpsl
sahf
mov
jp
sbb
mov
xchg
jl
aam
mov
ror
lock
insb
aas
rcrl
psrlq
or
pop
repnz
mov
icebp
aad
or
shll
movsb
mov
cmpsb
loop
into
mov
in
lret
mov
jge
mov
sbb
dec
push
dec
adc
in
inc
adc
fndisi(8087
push
insl
mov
push
dec
iret
pop
aas
xor
lock
xchg
sbb
push
push
mov
or
mov
test
dec
mov
cld
out
ljmp
cmc
adc
nop
cs
push
int
dec
push
xchg
addb
mov
sbb
jnp
outsb
xor
push
sub
sahf
jnp
push
hlt
sub
push
sub
push
out
arpl
cmp
daa
push
mov
scas
mov
repnz
movsb
or
or
or
push
les
mov
fstpl
jecxz
aaa
add
mov
fisttpl
jg
stc
xor
lds
daa
jns
and
outsl
push
dec
decb
shlb
push
leave
hlt
popf
mov
push
push
out
jle
pop
repz
and
add
test
cmp
jb
add
popf
add
insl
mov
icebp
fbstp
nop
mov
and
dec
fbstp
insb
jge
in
pop
mov
stos
ljmp
cs
and
stos
inc
pop
dec
lahf
push
aaa
or
ret
xor
pop
adc
inc
dec
mov
add
cld
sbb
leave
pop
daa
mov
dec
mov
out
je
pop
ret
sbb
test
and
pusha
lret
add
xchg
pop
hlt
and
mov
dec
jge
dec
xchg
pushl
js
jns
aad
mov
add
dec
sub
lods
and
pusha
stos
ret
sub
ds
jb
sub
push
insl
push
ljmp
xchg
pop
pop
push
push
jae
call
mov
xchg
inc
dec
loope
mov
dec
mov
mov
scas
mov
add
push
push
mov
and
in
insb
test
pop
in
mov
insl
psubd
xor
jmp
ret
cmp
xor
mov
negl
pop
cs
cmp
inc
fldcw
lret
imul
cmpsl
inc
add
insl
mov
ss
adc
ss
inc
sub
push
sbb
rep
andl
rcrl
sahf
mov
add
repz
inc
sub
jmp
cmp
push
pop
shlb
lret
xchg
add
xor
adc
ss
mov
test
pop
and
roll
push
sbb
mov
test
adc
cwtl
fninit
push
mov
xchg
and
mov
and
rclb
inc
popa
lahf
jp,pt
js
into
inc
fbld
inc
jb
jne
cmp
pusha
aaa
in
xor
mov
xchg
mov
mov
sbb
out
mov
mov
push
xor
sub
inc
xor
test
stos
xchg
fdivr
xor
sub
mov
adc
inc
mov
lahf
xchg
sbb
mov
add
inc
mov
xor
jg
cmp
call
dec
shrl
lods
cld
lcall
adc
and
sub
aam
icebp
inc
push
add
orb
dec
cmc
mov
arpl
popf
sbb
jg
iret
cltd
fsubs
fstl
xchg
add
lds
mov
enter
inc
in
mov
mov
clc
fiaddl
lea
lret
rcrl
into
les
mov
testl
adc
lahf
addr16
lock
xchg
jmp
inc
out
xchg
mov
cmp
mov
not
stos
inc
dec
leave
add
das
adc
es
es
ja
shr
popa
mov
adc
sbb
icebp
fwait
iret
or
xchg
xor
cmpsb
push
dec
pop
push
cmpsl
call
mov
jp
sahf
push
cmp
xor
mov
xchg
mov
mov
xchg
pop
push
loope
jb
pop
pop
jmp
xchg
lcall
push
jbe
out
xchg
mov
das
repz
lods
mov
add
push
inc
sub
and
scas
push
jae
or
jge
inc
fcompl
stos
jae
in
ret
repz
cmp
pushw
scas
lods
out
adc
imul
sarb
lds
inc
dec
sarb
sub
cmpsb
aam
add
repz
test
leave
add
jae
fs
daa
or
xchg
mov
cwtl
mov
pxor
mov
mov
out
dec
and
mov
mov
dec
cld
sbb
imul
lea
test
ror
sbb
inc
cli
out
jp
xor
mov
xchg
fmul
inc
cld
xchg
scas
mov
ljmp
xchg
mov
mov
sbb
mov
mov
dec
js
mov
jmp
mov
popf
enter
pop
out
rcl
sti
addr16
sub
cmp
push
mov
outsb
rorl
pop
ret
or
fldt
movsl
out
cmp
inc
and
jae
sahf
out
int
lcall
orl
sbb
neg
jb
enter
fdivrs
decl
adc
test
mov
ja
xor
xlat
mov
or
repz
jl
jmp
add
call
mov
arpl
cmp
mov
dec
incl
mov
mov
fs
es
adc
cmpsl
dec
mov
pop
int
sub
fsubl
fsub
clc
aas
sbb
daa
aam
int3
pop
test
lods
pop
xorb
repz
jmp
cli
pop
pop
lea
hlt
mov
push
cmp
xlat
dec
popf
lret
push
mov
sbb
xor
add
jmp
test
insl
cmp
sub
enter
sti
push
cmpsl
cmp
adc
cmc
and
mov
add
pop
lret
cltd
or
mov
dec
vpminsw
fwait
rorl
rcrl
movsl
insb
add
lds
or
dec
mov
dec
sub
rorb
call
and
hlt
test
jne
lock
xor
sub
pop
mov
push
fstl
cltd
sbb
mov
out
movsl
fsubl
mov
adc
mov
sti
notb
sbb
sub
xchg
test
push
add
add
inc
jb
cmp
cmc
mov
pop
push
ljmp
cld
lahf
mov
test
jnp
jmp
lcall
mov
jb
insb
jbe
cmpsb
movsb
add
popl
shrl
mov
pop
into
inc
and
mov
and
fmuls
sarb
rorb
cld
sbb
and
jl
jp
movsb
outsl
push
jo
jae
add
adc
daa
adc
add
inc
jne
popa
xchg
sub
sti
or
push
bswap
out
mov
mov
rorl
jp
sti
inc
repnz
popa
xor
adc
pop
icebp
clc
fs
cltd
rorl
fsubrs
add
jae
decl
cmpsl
and
cmp
jns
sub
jecxz
clc
jae
sahf
ret
push
repnz
mov
add
inc
mov
inc
call
jmp
cmc
jl
xor
sahf
loopne
repz
mov
stos
aaa
lret
jae
inc
out
nop
imul
in
outsb
fidivl
loop
or
sahf
dec
in
inc
nop
inc
mov
and
jecxz
xchg
sub
push
or
gs
mov
pop
sub
jo
repnz
cld
mov
or
sbb
cld
stos
jecxz
mov
scas
jnp
lcall
mov
hlt
mov
aam
mov
cmp
ret
into
jmp
sti
pop
xchg
push
fbld
cwtl
fnstsw
dec
push
xor
pop
adc
mov
ror
iret
test
dec
ja
sub
add
in
mov
in
push
pop
repz
movsb
out
popa
cwtl
insl
lods
jo
pop
push
sbb
int
or
or
mov
mov
insl
jns
push
int3
and
pop
mov
lahf
sub
inc
popa
mov
test
in
movsl
repz
mov
out
xor
pop
jp
gs
sub
add
push
pop
sub
clc
in
mov
xor
das
and
mov
or
add
aam
test
testl
xchg
jmp
add
jg
subl
jecxz
aam
jge
adc
mov
fistpl
lea
push
jno
mov
mov
lods
pop
outsl
dec
inc
les
xor
iret
lock
dec
dec
pop
mov
andl
roll
lock
lcall
frstor
cmpsl
and
test
mov
inc
inc
inc
dec
and
ja
push
cltd
jmp
mov
dec
add
push
imul
shlb
cmp
vmptrld
js
jae
mov
out
movsb
inc
cmp
push
xchg
add
pop
in
mulb
mov
mov
das
test
sub
add
add
aad
ljmp
loopne
or
sysenter
jg
popa
mov
push
cmpsb
push
lea
sbb
jp
jne
add
lods
jno
fmul
xchg
adc
xor
ss
jl
sbb
push
pop
mov
dec
jne
push
cmp
sbb
loopne
xchg
jp
subl
out
adc
push
sbb
in
imul
push
jno
adc
dec
cmpsb
mov
sub
add
lcall
push
fdivrl
fsts
fcompl
pop
push
sub
mov
push
sbbl
inc
bound
dec
mov
push
add
pushf
push
mov
lea
jbe
arpl
sbb
xor
loope
pop
fildl
std
lea
cs
shlb
int3
push
rcr
into
shl
inc
pop
lahf
mov
int3
stos
push
mov
pop
arpl
push
mov
push
jne
stos
sbb
adc
imul
push
fadds
nop
jl
daa
shrb
xor
nop
in
daa
inc
sub
out
push
pop
out
sbb
js
loopne
out
mov
movsl
pop
std
int3
js
mov
fucom
mov
popl
sbb
xchg
pop
orb
lret
pop
aaa
jne
jns
lds
dec
test
add
jb
or
sahf
xchg
cmovae
leave
push
dec
sub
loope
dec
mov
cli
cmp
or
pop
add
jge
out
ret
fstpl
cmp
cmp
and
xchg
push
mov
jbe
or
mov
mov
xchg
jae
fwait
ja
xor
arpl
leave
pop
fnsave
jmp
push
ret
decl
cmp
and
cmpsl
in
mov
fcmovb
dec
iret
lods
fs
sbb
dec
sbb
into
pop
fs
or
iret
mov
adc
rcrb
push
xchg
fmuls
loop
gs
hlt
subl
enter
push
sti
jns
sub
negl
mov
add
fcmovb
jmp
insb
xor
adc
dec
sbb
mov
adc
cs
dec
arpl
test
scas
sub
inc
xor
add
and
mov
push
loop
sbb
es
nop
and
push
repz
fcoml
mov
movsl
mov
test
mov
nop
dec
add
lret
add
mov
scas
pop
into
testl
cmp
out
pop
fldenv
movb
push
fidivl
xor
xchg
lret
mov
mov
roll
cmp
push
test
cmp
fcoml
insl
jle
sub
cmc
cmpsl
dec
sti
dec
xchg
pop
mov
pop
inc
dec
fistpl
inc
scas
jns
popa
cmp
dec
mov
adc
iret
ret
test
add
adc
add
xchg
or
lahf
mov
pushf
pusha
xchg
stc
insl
inc
notb
jns
sub
bnd
daa
xor
aaa
and
shll
xor
lret
cld
mov
repz
popa
outsl
dec
outsb
int
push
inc
or
subl
mov
xchg
mov
push
jmp
loopne
xchg
dec
in
in
int
sbb
xchg
sbb
add
repz
stos
imul
and
lods
mov
fxch
inc
aas
sub
mov
pop
sbb
inc
std
adc
test
test
into
ficompl
std
cmp
lods
fcomi
lahf
in
xchg
xchg
mov
and
mov
jne
stos
out
push
mov
mov
mov
into
xchg
sub
pandn
pop
imul
adc
jl
pop
frstor
aam
xor
ljmp
stos
scas
jnp
xchg
xorl
dec
loopne
lcall
xchg
jns
pop
lods
or
cmpsl
ficompl
popa
adc
inc
pusha
pop
in
xchg
cld
arpl
add
sub
pop
loope
in
xor
pop
mov
cltd
cmpsl
in
divb
cmp
hlt
dec
test
lock
cmpl
adc
out
dec
sbb
cmp
mov
dec
imul
dec
jp
add
insb
xlat
mulb
mov
or
jge
inc
xchg
mov
dec
dec
test
stos
mov
add
hlt
loop
push
pop
ljmp
fs
adc
addr16
or
aaa
mov
sahf
cmc
outsl
fimuls
into
cmc
int3
mov
jge
mov
xchg
inc
and
rcrb
sub
dec
xchg
cld
fs
pop
inc
clc
mov
mov
pop
mov
pusha
fwait
sbb
gs
jp
lcall
je
and
sub
sbb
arpl
imul
fs
xchg
fistpll
sti
les
in
mov
ss
rorl
mov
push
xchg
cmp
cmp
xor
lret
dec
lcall
ret
dec
mov
and
mov
fs
xor
mov
scas
iret
repnz
and
scas
vandnps
fmull
lock
clc
cld
dec
lret
dec
aad
in
loopne
sarl
adc
pop
lods
and
imul
fs
add
popf
add
cli
and
push
mov
jns
ret
das
xchg
fsts
divl
push
out
cmp
add
pop
mov
mov
add
subb
pop
push
stc
sbb
mov
xchg
pop
cmp
xor
loop
iret
ret
decl
cld
rol
cs
fmull
adcb
push
sub
pop
jbe
bound
cmp
not
je
lcall
leave
jo
mov
movsb
push
or
pop
inc
loope
ficomps
inc
bound
mov
pop
add
and
jae
adc
flds
pop
jmp
test
sbb
insb
inc
xchg
and
imul
subb
xor
or
inc
dec
mov
scas
out
mov
nop
mov
xchg
fdivrp
rol
jbe
fs
int
daa
push
mov
fsubr
xlat
fimuls
jb
jg
pop
js
fbld
in
adc
xor
xchg
sbb
in
mov
movsl
js
es
or
xchg
dec
or
cli
pop
test
push
xchg
rcll
nopl
mov
gs
addr16
sub
push
scas
pop
rcl
orb
lock
movl
movsl
movsl
xor
aam
lret
dec
ljmp
ja
mov
add
scas
mov
add
mov
std
cltd
and
xchg
mov
inc
sbb
add
mov
inc
cli
dec
pushf
rorb
aaa
lea
ret
push
repnz
dec
or
dec
std
inc
test
ljmp
mov
or
jne
xor
frstor
out
iret
dec
mov
repz
movsl
ljmp
xor
push
fcom
cmpsb
inc
roll
or
jne
push
mov
aas
outsl
mov
out
lea
xorl
push
aad
mov
dec
call
dec
push
enter
daa
fdiv
out
mov
loop
mov
lahf
cmpsl
jb
mov
mov
insb
mov
in
mov
jge
es
push
daa
ljmp
add
jb
loope
js
imul
lret
popf
xor
and
hlt
dec
loope
pop
cmp
pop
lods
jp
adc
test
in
cli
mov
int3
fidivrl
movsl
movsb
imul
cmp
adc
fsubrs
loope
out
pop
daa
mov
loope
fbstp
popa
sbb
sbbb
into
mov
ja
jno
in
lods
pop
jno
push
sub
and
scas
mov
jmp
sbb
xchg
mov
bound
sbb
ds
jno
sar
ja
loopne
insb
or
mov
dec
clc
mov
test
pop
scas
pop
adc
js
stc
sarl
out
outsl
into
loope
push
rcr
fs
pop
jecxz
pop
fs
mov
into
stos
jno
pop
and
ljmp
push
mov
mov
jmp
inc
inc
movsb
lcall
push
movsl
push
sahf
repz
jnp
add
and
add
lock
out
mov
dec
mov
inc
push
xorl
cmp
stos
mov
mov
out
cmp
sahf
add
repnz
or
in
dec
mov
lock
enter
jno
cmp
lcall
mov
xchg
mov
pop
add
int
pusha
out
or
mov
mov
mov
int3
push
jo
mov
dec
stos
insb
fwait
shr
nop
jmp
mov
xchg
xlat
sahf
mov
test
jae
ret
cmc
fstps
pop
stc
hlt
push
leave
in
sti
insb
pop
mov
outsl
jbe
mov
insl
sub
or
inc
pop
mov
lea
xor
loopne
les
add
orb
dec
pop
test
ret
stos
int
or
ficoml
sub
int
repnz
cs
push
jbe
lods
sbb
mov
inc
cmpsb
outsl
push
or
xorb
jle
sti
push
inc
jns
cmpl
mov
fs
jge
outsb
por
mov
add
push
inc
out
aad
call
and
pop
cmpsl
stos
pop
pop
fsubp
pop
and
or
add
dec
dec
and
mov
xor
jae
add
add
cli
aam
dec
nop
out
imul
cld
mov
loope
roll
mov
sti
xchg
mov
cmp
xor
inc
cmp
lods
ja
fwait
stos
push
cld
sbb
pop
cmp
fcomip
mov
pop
jbe
xchg
inc
add
repnz
push
loop
stos
dec
pusha
stos
or
ljmp
outsl
jno
push
mov
dec
mov
xor
ja
sti
jno
decl
adc
sub
or
pop
sub
in
fmul
rorb
add
mov
xor
iret
arpl
xchg
mov
jmp
jl
jno
lods
and
sub
stc
out
push
popf
loopne
jle
test
and
sub
addr16
sub
mov
sub
xor
dec
lret
or
repnz
stc
jns
hlt
movsb
aas
ss
adc
inc
gs
pop
push
mov
and
mov
dec
lods
mov
inc
cld
push
sub
div
and
out
and
aad
mov
jle
or
sub
aas
push
push
ljmp
insb
push
pushf
int
jle
pop
gs
decl
icebp
pop
repnz
or
outsb
inc
dec
add
scas
popf
pop
call
xchg
add
add
gs
mov
jae
outsl
sbb
test
fistl
mov
and
xor
or
dec
je
stos
popl
fwait
lods
push
fadds
sbb
dec
sub
mov
adc
adc
pop
stos
push
sbb
dec
sub
andl
sar
xchg
movsb
push
mov
adc
or
out
xchg
inc
xor
jp
stc
lcall
xchg
addl
xor
insb
mov
mov
in
pop
mov
insl
ds
cs
pop
jnp
call
loopne
mov
pop
ret
jge
sbb
adc
pop
test
xor
loop
je
push
mov
pop
pop
mov
sub
and
push
inc
and
insl
das
sbb
jns
and
sbb
cmp
cs
mov
jl
xor
adc
out
addr16
mov
cld
aad
imul
test
xor
adc
fwait
sbb
sub
mov
pop
test
aaa
negb
and
or
cmp
lds
or
out
lock
dec
stc
mov
lret
xchg
mov
dec
mov
jecxz
xor
int
push
mov
mov
sbb
jne
inc
jbe
adc
xor
jnp
es
mov
fistpl
icebp
mov
es
cltd
dec
jg
sub
pop
mov
cmp
add
jge
stos
sbb
es
data16
inc
cmp
push
sbb
adc
and
loopne
int3
pop
lds
repz
adc
pop
pop
cli
int3
jl
push
cld
dec
mov
nop
xor
push
out
mov
jae
in
sbb
push
cmp
ljmp
test
repnz
mov
outsb
and
loop
mov
mov
sarb
js
dec
cmpsb
and
int3
popa
hlt
ret
dec
call
imul
js
jnp
loope
pusha
pmulhw
push
push
pusha
js
jg
mov
mov
cmp
pusha
and
out
repz
or
inc
fsub
or
xor
sbb
pop
or
lock
arpl
test
cli
fnclex
push
std
sbb
out
out
jo
pop
into
pushf
stc
es
inc
int3
sbb
sahf
inc
mov
int
lret
das
bound
mov
xchg
add
sti
ds
add
stos
cltd
mov
into
movsb
and
xor
mov
mov
jg
stos
stos
jl
push
aam
out
push
xchg
enter
xor
not
add
in
iret
mov
xchg
insb
mov
inc
outsl
mov
sbb
push
xor
call
cmp
adc
mov
xor
xlat
sub
lcall
call
mov
mov
loopne
jp
movsb
scas
pop
cmpsb
faddl
lods
hlt
xor
outsb
pushf
pop
pop
mov
aas
jp
stos
shll
fiaddl
nop
pop
jbe
in
and
push
out
fldcw
imul
sbb
cld
dec
xor
movsl
out
add
addr16
xchg
lock
dec
jg
adc
mov
sbb
daa
sub
pop
and
mov
cs
cltd
negb
int3
shll
xchg
sub
dec
dec
ds
aad
jb
psubq
dec
movsb
mov
push
push
push
pop
add
jo
out
fst
ffree
popf
pop
pop
xor
loop
loope
or
aaa
adc
popf
inc
adcl
test
cmpsl
lock
jne
dec
and
xchg
pushf
inc
test
pop
icebp
aam
outsb
sub
js
dec
flds
test
dec
sub
cs
add
mov
jns
or
outsl
xchg
out
or
and
das
rorb
repz
mov
pop
cmp
cltd
dec
lds
xchg
aaa
ret
push
lret
jecxz
aam
mov
push
lods
lahf
jl
adc
bound
push
inc
or
lods
sbb
inc
sbbl
mov
shrb
mov
push
mov
out
xor
in
pop
mov
mov
hlt
xchg
xor
xchg
mov
adc
pop
sbb
insl
cmp
jns
rorb
or
mov
jecxz
mov
fbld
pushf
roll
xor
fs
jno
test
push
mov
fidivrl
out
repz
movl
jl
inc
jg
xchg
sub
push
enter
lret
jge
inc
insb
jg
pop
cmpsb
mov
popa
dec
jecxz
dec
xlat
mov
sbb
jmp
inc
mov
js
jb
adc
ds
pushf
pop
loop
adc
add
cmc
imul
mov
pop
gs
addb
sub
add
int3
int3
xor
pop
imul
pushf
out
call
mov
scas
and
add
add
xchg
out
mov
mov
push
shlb
inc
pusha
add
testb
pop
cli
xchg
enter
push
inc
xor
cld
mov
inc
dec
in
test
or
sub
inc
sbb
pushf
mov
jnp
mov
pop
fldenv
add
loop
jmp
mov
jb
mov
inc
daa
je
mov
pusha
mov
mov
inc
push
lds
scas
pop
lock
sbb
jmp
and
mov
add
mov
loop
mov
jge
jl
add
add
and
pop
iret
pushf
adc
cmovnp
pop
and
or
ficomps
cltd
imul
xor
mov
das
fwait
bound
push
arpl
sti
ja
movsl
movsl
pusha
jle
mov
dec
mov
pop
lods
in
es
fdivl
push
pop
mov
and
loop
and
or
jge
cmpsb
inc
adc
add
in
shl
cmpsb
mov
enter
daa
lgs
mov
inc
ret
push
add
out
arpl
adc
pop
lahf
pop
ss
nop
inc
pop
adc
push
push
jp
test
iret
cmpb
popl
shlb
rcrb
cmp
mov
and
and
test
jmp
les
je
jno
in
jne
pop
imul
push
mov
sti
enter
xchg
adc
mov
pop
repnz
sub
lock
faddl
andl
sub
xor
push
outsb
stc
jo
add
fiaddl
lds
dec
out
pop
adc
and
fisubs
scas
inc
js
dec
mov
insl
dec
and
inc
loope
push
or
mov
leave
pop
jg
sub
jmp
loopne
dec
add
and
or
cmp
inc
cmpsl
out
add
fdiv
mov
adc
mov
shll
adc
jg
push
loope
jecxz
xchg
test
mov
out
add
enter
sahf
fcoml
adcb
jo
xor
jp
lret
inc
mov
mov
xor
adc
gs
incl
xchg
xchg
push
mov
or
sahf
mov
or
repz
sbbb
sbb
jp
loop
jp
mov
inc
shl
xchg
pop
test
push
incl
sbb
test
aas
adc
stos
mov
sbb
mov
sub
adc
mov
nop
roll
sub
test
loopw
add
and
ret
dec
ljmp
hlt
sbb
mov
cmpsl
pushf
or
cmp
cwtl
adc
iret
or
jnp
fs
adc
movsl
lahf
jge
je
cmc
push
pushl
xlat
fwait
cmovnp
je
rolb
jno
sbbl
xchg
pop
inc
pop
loopne
add
mov
dec
adcb
lahf
or
pop
xchg
gs
rclb
and
rolb
and
push
adc
fistpll
sahf
iret
sahf
leave
push
push
jp
xor
push
int3
loop
cmpsl
mov
xor
mov
test
mov
aas
lds
movsb
je
push
adc
ret
lds
ret
xchg
subl
pop
push
mov
mov
loop
mov
scas
das
adc
push
sbb
int3
daa
dec
bound
dec
xor
mov
mov
push
mov
dec
repnz
xchg
jecxz
cmp
fldcw
ss
mov
cld
pop
dec
iret
fsub
in
mov
pushf
rorl
std
xor
push
ret
sbb
add
lods
js
rcrb
pop
test
adc
push
cmpl
push
cli
inc
xchg
jno
pop
in
jmp
lock
in
and
loopne
scas
mov
fldt
lret
jno
mov
aad
jmp
xchg
sub
andl
mov
xchg
lods
pusha
ds
dec
inc
out
jns
mov
pop
adcl
cld
xchg
inc
dec
shll
adc
mov
dec
es
into
sbb
cmpsl
cmp
movb
mov
dec
inc
test
addb
sbb
mov
adc
inc
or
push
mov
cs
or
xor
xchg
add
mov
iret
rcl
popf
cmp
xchg
imul
inc
add
jb
scas
mov
repnz
sbb
xor
icebp
xor
and
xchg
aaa
push
mov
xchg
push
lret
push
cmp
stos
xor
push
xor
mov
lret
or
inc
mov
or
xor
into
shll
dec
addr16
aam
aas
pop
aas
test
hlt
in
ds
inc
js
faddl
add
mov
jecxz
jle
test
jge
xor
pusha
dec
pop
jp
cmp
subb
decl
bound
fisubrs
outsl
ja
lret
fdivs
mov
sbb
enter
xor
sub
jne
xchg
lods
xchg
and
outsb
cmp
jb
sub
lds
rolb
sbb
mov
cmp
add
inc
jg
pop
xor
std
jg
sub
mov
push
adc
xor
lret
jl
mov
test
divb
xchg
enter
imul
cmp
call
adc
les
inc
sub
rorl
dec
std
cwtl
lret
pop
xlat
xor
xor
cli
sti
icebp
iret
or
ret
mov
lea
sbb
filds
add
mov
xor
cmp
leave
mov
ficoml
call
inc
adc
pop
xchg
pop
dec
xchg
inc
inc
stc
add
popf
lcall
rcrb
sub
pop
add
xor
sub
push
or
loope
push
push
std
adc
dec
scas
jge
cmp
repnz
jns
cmpsl
insl
shl
in
xor
out
sti
loopne
lods
or
jb
xor
nop
xchg
cmp
decl
in
imull
dec
mov
sub
aad
je
mov
mov
in
jb
jle
loopne
stos
aaa
mov
in
shlb
push
push
sbb
scas
mov
ss
ret
es
pop
sub
mov
or
add
sub
pop
aas
sbbl
aaa
sarb
mov
mov
ja
dec
inc
mov
sub
mov
sahf
out
pop
or
cmp
dec
mov
jmp
add
imul
sbb
outsl
cs
shll
cmpsl
stos
jbe
les
int
mov
pusha
rcr
in
test
push
mov
daa
jecxz
repnz
orb
push
fs
in
jae
xchg
in
push
pop
shrl
sub
insb
sbb
and
xor
icebp
sahf
ja
loop
jb
stc
lahf
mov
mov
fcoms
xchg
fimull
cmpl
sbb
xchg
and
out
cmp
add
push
inc
and
or
stc
bound
sub
pop
and
pop
jmp
fdivl
or
aas
jmp
mov
xchg
ja
orb
xchg
xchg
popa
insl
jno
out
inc
or
add
loopne
push
inc
inc
cmp
push
andl
add
mov
pop
loop
mov
outsb
cmp
sbb
sbb
inc
imul
das
cmp
xchg
out
and
out
or
hlt
fisttps
adc
in
dec
fwait
cmp
std
sub
rorb
int
xlat
push
fxch
sbbl
cs
repz
fcom
in
cmpb
incl
daa
cmp
jae
mov
movsl
inc
mov
out
bound
adc
cmp
dec
mov
insb
adc
jle
add
mov
mov
pop
and
add
push
and
loop
arpl
xlat
jbe,pt
pop
add
add
clc
outsl
icebp
pop
dec
aaa
add
or
cmp
out
sbb
sub
fbstp
push
jno
add
pop
pop
movsl
in
inc
push
into
ret
popa
push
icebp
jns
adc
inc
jo
inc
push
sbb
jne
data16
adc
mov
sub
lods
inc
xchg
xorl
aaa
or
shll
pushf
jbe
xchg
mov
xor
rorl
mov
daa
fmulp
clc
add
rclb
insl
js
xorb
imul
jb
push
xchg
and
sbb
sbb
mov
call
sub
repnz
loopne
push
and
jbe
push
add
addr16
dec
fdivrs
stos
test
pusha
xchg
and
jns
adc
inc
push
or
inc
mov
pop
testl
ret
mov
movl
mov
dec
mov
dec
pop
push
pop
add
inc
inc
jnp
repnz
cld
adc
int
pusha
cmp
in
lret
repz
sub
aas
mov
mov
adc
std
hlt
lret
add
jmp
leave
pop
int3
je
mov
out
stos
dec
or
in
jnp
inc
fimull
cmpsl
xchg
repz
aas
dec
push
jns
push
fcmovbe
div
mov
orb
icebp
ret
outsb
cli
rorb
fs
ror
push
jo
cmp
gs
push
inc
dec
adc
sbb
sbb
add
xor
pop
push
dec
push
xor
sti
scas
and
jmp
pop
sub
mov
loope
adc
cmp
and
outsb
jmp
sbbb
jo
pop
loope
sbb
sub
inc
pop
cmp
sub
push
jnp
notb
xchg
sub
fucom
shlb
adc
xchg
cld
or
ja
dec
jnp
xor
inc
sub
rcl
inc
out
add
sbb
sbb
sub
pmuludq
outsb
out
stos
aaa
xor
mov
xchg
xchg
add
clc
out
ret
jno
lahf
xor
mov
sbb
aad
adc
cmp
cmp
lods
push
dec
iret
mov
int
rcrl
leave
dec
xor
sbb
sbb
roll
mov
insb
ret
addr16
cltd
les
out
cwtl
push
lahf
xor
bsr
jne
insb
and
add
icebp
ret
stos
adc
scas
mov
xchg
xchg
push
mov
mov
int3
dec
xor
xchg
mov
or
outsl
gs
jle
jne
and
bound
int3
movsb
dec
nop
fistl
add
dec
sbb
adc
xchg
and
lea
inc
daa
iret
mov
in
or
addr16
mov
sti
sub
fdivr
cmp
adc
out
outsb
adc
add
fs
xor
sbb
and
adc
mov
ja
xor
negl
sbb
cmp
sub
mov
xchg
sub
mov
loopne
push
inc
push
push
test
jl
dec
insb
sbb
xchg
cmp
ds
cmp
xchg
and
pop
xchg
dec
pop
out
lods
lcall
dec
jno
pop
fmuls
pcmpeqw
loope
cs
push
push
es
cwtl
aad
sbb
rorl
stos
push
insl
js
ret
mov
mov
es
pusha
in
dec
cmp
xor
std
mov
mov
sbb
jne
in
sub
in
and
jo
adc
sbb
in
mov
dec
or
xor
in
js
movsl
sub
aaa
mov
sub
and
pushl
add
fistps
cmpsb
pop
pusha
out
mov
and
sbb
push
pusha
mov
lds
mov
mov
add
ds
mov
add
mov
jle,pn
cmp
out
mov
test
cld
lcall
mov
cmovp
addr16
mov
xchg
add
adc
in
insb
mov
inc
xchg
fwait
popa
lahf
xlat
xchg
enter
mov
mov
push
mov
shll
fistps
aad
adc
dec
sbb
or
popa
subb
outsl
daa
mov
mov
scas
mov
push
jbe
ret
pop
and
into
bound
sub
dec
sub
jg
or
sub
xor
fidivrl
xor
fs
and
cmp
divl
orb
push
push
cld
or
mov
jns
test
sub
mov
adc
inc
xchg
aaa
xor
add
inc
cmc
int3
js
pop
sbb
mov
std
into
les
xchg
loopne
lods
jg
dec
mov
pop
sub
out
jb
movsl
loop
ds
nop
cmp
repz
mov
repz
testb
xor
xchg
out
mov
mov
shll
xor
idiv
fiaddl
into
xchg
cmpsl
mov
out
and
cmp
fsubs
call
in
pop
repz
addl
add
cmp
leave
ss
test
inc
push
popl
jne
xlat
jne
mov
push
lds
push
insb
fstps
push
insl
rcrl
mov
dec
or
add
test
adcl
ds
mov
and
adc
cmpsl
add
jne
add
add
pop
sbb
rclb
test
mov
or
push
add
push
jp
hlt
movw
mov
leave
lds
sbb
in
inc
fdivl
push
add
dec
andl
sub
adc
inc
xlat
pop
fwait
pop
out
nop
xor
popa
fcmovu
pop
cwtl
std
push
test
push
pushf
jmp
lcall
mov
xchg
mov
shll
jo
pop
xor
jl
sbb
pop
int3
mov
mov
or
jle
ficompl
mov
lret
mull
inc
fstpl
sbb
lahf
rcll
jp
dec
sbb
call
push
xor
pop
insl
xor
cmp
jb
pop
cmpsb
inc
stc
mov
cmp
push
insb
push
test
mov
mov
mov
jge
xchg
outsb
push
fnstsw
aad
pop
fildl
cwtl
sub
push
sbb
daa
mov
fidivrs
add
test
clc
jo
adc
inc
or
loop
cli
in
ds
xchg
xlat
shrl
in
xchg
sbb
mov
sbb
or
pop
mov
repz
cmc
rcll
lock
and
jb
clc
js
in
ljmp
inc
dec
add
xchg
add
sub
ja
jb
xor
or
movsb
nop
ret
jge
clc
jmp
aas
and
push
in
lods
xor
cmp
pushf
lret
xor
mov
jno
aaa
mov
add
jge
push
mov
push
inc
add
and
shl
idiv
add
and
and
lds
push
jg
mov
dec
aaa
cmpsb
xor
repz
loopne
test
sbbb
or
pushl
xchg
or
push
xchg
and
enter
loop
mov
scas
inc
imul
pop
fdivs
aad
cli
jno
pop
push
sbb
int
push
in
jle
shl
push
lret
out
and
sti
fdivrs
jmp
test
jb
ret
out
dec
pusha
xchg
jno
add
mov
xor
cld
mov
arpl
and
ds
popa
and
mov
adc
and
and
jae
pusha
xlat
inc
cmpsl
in
shl
test
rcll
push
andb
add
arpl
fstpt
dec
pop
pop
push
cld
repnz
popf
sub
lcall
cs
push
xchg
in
shrl
xor
stos
inc
test
les
fldenv
cmp
push
add
dec
stc
rol
shrl
call
cmp
jg
mov
call
adc
mov
loopne
sbb
cmp
sub
jle
pop
mov
xchg
cwtl
js
add
jp
enter
mov
cmp
shrl
xor
push
xlat
in
pop
mov
movsb
xor
sub
repz
std
cmpsl
addb
aad
adc
pop
inc
inc
adc
mov
test
mov
popa
testl
push
push
mov
mov
inc
fidivl
stos
xchg
bnd
loop
dec
xor
ds
mov
stos
ljmp
lret
andb
fwait
inc
repnz
pusha
jbe
int
out
mov
aaa
call
dec
xor
stc
add
sub
xlat
int3
daa
push
lods
rcrl
pop
sbb
es
jo
xor
fdivs
popa
mov
into
mov
gs
xor
adc
xchg
jl
iret
add
mov
mov
in
fcomps
gs
or
push
popa
fisttpl
mov
mov
mov
int
mov
mov
enter
xor
repz
lods
push
pop
repnz
outsb
cmp
cmc
sahf
mov
sahf
or
jb
jl
mov
imulb
call
pop
fsts
arpl
lret
test
jnp
sbb
stos
testb
sub
out
mov
xor
int3
mov
xchg
dec
iret
insb
lcall
mov
cli
or
es
or
add
movsb
jle
jb
lret
shrb
aaa
mov
and
pop
das
cwtl
pop
mov
jmp
jge
lea
addl
imul
adc
popl
jle
fisubrl
mov
mov
push
test
xor
push
icebp
subl
jbe
clc
cs
popa
xor
test
push
fisubrs
sbb
call
pop
jb
popf
cmp
or
xchg
cltd
dec
mov
xorl
jle
lods
push
dec
int
adc
adcl
lods
or
push
or
jnp
loope
rolb
sbb
dec
shlb
ljmp
fdivrs
mov
sub
jnp
ljmp
mov
data16
mov
imul
insb
inc
js
push
mov
aad
cmp
and
or
sahf
cmp
leave
ljmp
cmp
pushl
leave
jle
call
sub
dec
ljmp
leave
iret
push
popl
add
ss
int
rcrl
push
inc
and
lods
popa
mov
and
xchg
mov
in
lret
jmp
stos
xor
bound
lret
or
arpl
dec
inc
jle
pop
pop
cld
stos
pop
popa
les
adc
push
bound
rcrb
xchg
insl
jecxz
add
push
pusha
aaa
les
and
into
or
sti
pop
push
jecxz
pop
xchg
lret
into
jno
insl
inc
sub
in
mov
and
mov
sbb
test
and
add
mov
adc
ljmp
xor
rorl
and
cmp
fmull
or
mov
bound
inc
mov
outsb
pop
sbbl
fdiv
bound
jmp
call
mov
imul
push
jmp
or
pushf
and
pushf
or
xor
pusha
jl
adcl
lea
arpl
xchg
pop
pushfw
add
jle
sub
loope
mov
sub
push
ss
push
pusha
jmp
pop
jl
add
addr16
loop
sbb
or
clc
sub
pop
flds
imul
pop
icebp
push
inc
fisubrs
fildl
jbe
leave
xor
ljmp
push
call
dec
pop
cs
cmp
cli
add
test
int3
sbbl
dec
popa
inc
test
sahf
xchg
imul
stc
sub
cltd
mov
testl
mov
mov
jns
mov
pop
movsl
movsb
sbb
xchg
daa
sbb
in
std
shlb
insb
hlt
add
test
xor
mov
iret
aad
or
jl
adc
cmc
dec
insl
jnp
addr16
add
cltd
adc
rorl
dec
stos
xor
jp
js
mov
fbstp
sub
cmpsl
aas
inc
sub
imul
push
jne
mov
mov
call
pop
pop
pop
dec
fldl
add
or
aas
push
xchg
jns
test
ret
xor
lock
sub
fadds
stos
mov
jb
aas
cmp
sar
fcomp
push
fsubrs
fcom
sub
dec
push
std
call
inc
pop
xor
jge
in
std
sub
orb
and
repz
repnz
cli
push
je
lahf
ss
iret
mov
push
mov
notl
scas
inc
inc
stos
mov
dec
cwtl
dec
push
cli
dec
or
or
dec
test
mov
shll
sarl
sub
jmp
adc
or
add
and
xchg
mov
adc
movsb
clc
shr
push
and
mov
jo
loop
mov
jp
lret
lods
adc
ret
fnstcw
add
pop
outsl
enter
ja
loope
mov
std
xor
sub
out
push
in
pop
pop
add
out
ss
fcmove
jle
fdivrs
xchg
push
or
shrb
cld
mov
dec
cwtl
push
cli
lret
add
jl
xor
jecxz
jbe
scas
or
push
cmc
ret
faddl
test
and
repnz
jge
sub
adc
movsb
cli
rorb
stos
decb
jne
hlt
gs
inc
imul
mov
pop
out
jns
enter
and
dec
cli
je
ja
hlt
das
jns
inc
jle
pop
push
push
in
cs
pop
andl
jne
pop
dec
dec
aas
push
std
push
mov
mov
add
mov
mov
mov
mov
cld
mov
mov
out
xor
mov
or
pop
adc
movhps
fbstp
jmp
jae
test
cwtl
push
das
in
xchg
into
stc
lahf
jnp
xchg
adc
and
in
xor
int
or
sbb
jo
sub
dec
daa
pop
add
cmpl
push
adcb
aam
stos
xchg
pop
adc
mov
pop
sub
daa
or
cwtl
mov
dec
pop
addr16
push
cmpsl
pusha
loopne
in
stos
aam
sbb
cmp
mov
sbb
sarb
or
xlat
mov
mov
fcmovb
sub
pop
xchg
or
xor
sbb
dec
aas
leave
mov
lret
repz
loope
lret
dec
xor
inc
pop
mov
les
mov
xor
jp
or
adc
push
cld
aas
or
xor
push
jno
dec
sub
jb
xor
dec
addl
lock
pop
inc
and
shll
cld
pop
scas
push
imul
xchg
add
inc
mov
jge
call
daa
loopne
stos
shll
push
add
jns
xor
jae
xchg
sbb
push
mov
add
cmpsb
xor
or
mov
xchg
push
xchg
dec
adc
out
out
movsb
std
or
mov
add
mov
add
jl
sub
stc
and
cvtps2pi
lahf
add
push
push
mov
sub
nop
aad
mov
dec
pop
pushf
adc
lret
movsb
loop
test
dec
xchg
mov
dec
pop
cmp
and
std
out
flds
add
cmpsb
aad
dec
jae
mov
push
push
cmp
outsl
or
inc
and
pop
or
cmc
jno
subl
mov
pop
sub
jnp
fsubrs
sub
jecxz
fdivrl
xlat
mov
jbe
and
aad
pop
pop
imul
clc
add
jb
mov
xor
push
shll
xchg
je
sub
lcall
pop
bound
push
cmp
xchg
inc
daa
xor
pop
dec
lods
shl
jge
out
inc
mov
fs
out
inc
fs
pop
jo
cmp
cmp
jnp
stos
mov
pop
adcl
add
inc
mov
xchg
aam
fwait
jno
cmp
filds
cmpsb
add
jae
les
jmp
addr16
ljmp
add
cmp
dec
fsts
lahf
pop
movl
pusha
in
pop
ja
mov
lret
bound
sub
sbb
mov
mov
cmp
test
stc
jg
mov
outsl
lock
xchg
push
xchg
mov
mov
or
cmp
or
xchg
shl
lds
add
jl
push
outsb
adc
fadds
lcall
fsubs
cmp
adc
sub
pusha
daa
rcpps
pushl
in
cmp
pop
fldl2t
xchg
mov
fists
or
push
or
cltd
mov
and
out
jge
jae
sbb
imul
sbb
fs
xor
cs
push
fdivr
push
push
sbb
dec
lds
fwait
pop
inc
or
mov
fadd
jecxz
test
lods
push
icebp
pop
out
sbb
jae
scas
sub
add
mov
stos
jns
push
cmp
std
loop
cs
mov
xor
data16
xor
test
in
dec
add
ljmp
lahf
fwait
into
mov
and
add
lret
mov
dec
cmp
adc
test
das
mov
push
mov
mov
rclb
sbb
add
sti
pop
repnz
and
adc
jbe
push
add
add
sbb
xor
xor
iret
loopne
xchg
cli
cmp
inc
rclb
or
add
out
lret
out
jo
adc
stos
adc
pop
and
jmp
dec
sbb
inc
jg
push
mov
pop
cwtl
lret
or
cld
rclb
push
into
or
jmp
in
push
xchg
int
fcomip
in
dec
or
jl
ja
filds
rorb
adc
pusha
add
add
or
mov
adc
mov
roll
push
or
stc
sub
testb
pusha
jo
sbb
and
and
test
sub
fstps
push
add
xchg
sbb
call
mov
and
pop
shrl
cmpb
sahf
sub
and
fstps
mov
stc
sub
shll
jle
pusha
les
push
ror
into
xor
push
cs
dec
ret
in
adc
push
popa
cmp
mov
and
add
jns
sahf
sarl
adc
mov
int
rclb
mov
inc
out
ljmp
pushf
arpl
in
out
out
dec
push
jp
xlat
shl
insl
push
ljmp
pop
addr16
aam
insb
mov
lods
mov
shll
jno
mov
scas
xor
dec
add
mov
jno
push
xchg
shlb
cmp
push
xor
inc
mov
adc
movsb
lods
fcoms
arpl
ja
jbe
rorb
lahf
inc
rcl
ret
inc
xor
dec
adc
adcl
lods
mov
mov
mov
push
movsb
shl
nop
or
cmp
xor
int3
push
fistpll
clc
repnz
out
sub
jbe
pop
mov
dec
cld
mov
imul
cs
mov
ss
pop
sti
mov
mov
aas
mov
imulb
in
in
mov
aaa
push
jge
fwait
lods
into
sbb
dec
and
mov
scas
leave
into
mov
test
xchg
clc
sbb
dec
popf
bound
jl
mov
xor
mov
dec
jb
cmp
scas
sub
rclb
ja
cmp
xor
in
mov
in
pop
push
hlt
mov
pop
iret
imul
aas
push
lock
jno
cmp
mov
mov
cmp
add
adc
xchg
inc
lret
add
dec
pop
hlt
inc
mov
or
xchg
movsl
ror
mov
and
rorb
cs
jns
mov
inc
xor
or
scas
imul
js
dec
call
and
sub
sar
pop
fsubp
pop
sub
insb
lods
jnp
xor
popa
repz
lods
xor
jecxz
lahf
push
lea
mov
and
jno
dec
fdivl
fstps
out
rolb
mov
dec
push
or
jns
inc
das
shlb
dec
sub
adc
inc
rcll
out
or
mov
add
jnp
test
jl
add
mov
imul
repz
sahf
xor
xlat
add
lds
outsl
cmp
and
fildl
stos
out
lcall
sti
xchg
mov
popf
mov
mov
sbb
rcl
ds
mov
sub
ret
movsb
stos
push
subb
mov
jns
mov
jne
mov
inc
push
mov
icebp
notb
mov
dec
in
inc
shl
pop
ret
fs
dec
in
mov
mov
int
push
movsb
pop
je
mov
aas
xchg
xchg
cmc
bound
imull
jbe
sub
cltd
push
push
test
loop
insl
gs
lcall
cltd
adc
mov
mov
pop
dec
and
stc
mov
scas
adc
in
ret
insl
add
cs
cs
imul
nop
pop
nop
or
pop
push
jbe
popa
dec
addr16
lods
aaa
xor
xchg
inc
repz
xchg
jmp
or
mov
fsubl
and
push
pop
aas
xchg
cli
and
mov
cmpb
xor
and
inc
cmp
pop
xchg
aaa
inc
dec
hlt
xchg
repnz
mov
iret
jb
cmc
xor
mov
sub
idiv
dec
mov
outsb
jge
test
xchg
sub
mov
xor
enter
push
mov
inc
leave
in
das
imul
mov
pop
add
bnd
xchg
adc
ds
ljmp
data16
test
aam
xchg
xor
hlt
lahf
lahf
adc
xchg
ja
dec
aam
or
jecxz
push
aas
lcall
cmp
sbb
scas
mov
cmp
push
ds
jnp
aaa
stc
push
xor
mov
dec
mov
xor
movq2dq
dec
iret
cmpsb
jbe
mov
add
in
xchg
ret
xchg
int
lahf
xchg
rcll
pop
xchg
pop
inc
and
out
les
sub
mov
outsb
adc
nop
xchg
mov
scas
sbb
loopne
cmpsl
rorb
notl
jle
xor
pop
sbb
lahf
aaa
mov
mov
daa
jb
jmp
loope
and
aas
mov
mov
aam
mov
iret
pop
fcoml
pop
inc
repz
mov
out
dec
adc
daa
mov
ret
scas
fnstsw
jae
lret
jl
frstor
jle
mov
orb
incb
out
xchg
jge
int3
mov
jbe
insl
mov
pushl
jge
jg
inc
into
inc
mov
jecxz
es
jp
push
jo
lock
and
push
push
imul
pop
je
adc
add
fcomps
cmp
xchg
cmp
es
sbb
pushf
push
repnz
mov
push
mov
push
xchg
mov
ds
sub
andl
push
cmp
xchg
or
pusha
fimuls
sbb
mov
shl
repnz
xchg
gs
imul
das
mov
cmp
adc
dec
popa
mov
ljmp
hlt
icebp
push
test
xchg
aam
xchg
pop
xlat
mov
sbbl
add
arpl
mov
and
mov
jge
dec
push
rcl
and
push
or
arpl
pop
mov
and
shlb
sbb
jo
out
xchg
ljmp
cltd
fcomps
imul
cmp
mov
xor
inc
addr16
in
xchg
in
lock
call
rol
stos
loope
repz
sbbl
outsl
popf
roll
cwtl
mov
addb
in
mov
imul
sbb
sbb
arpl
fnsave
mov
fwait
sbb
jne
jl
jb
lret
push
xchg
xchg
push
sbb
lea
adc
movsb
dec
pop
out
mov
mov
sub
mov
cli
mov
out
movsb
rcl
in
add
push
sub
push
inc
xchg
and
sbb
xor
jb
lock
fistpll
adc
stos
cli
add
inc
jne
lods
je
ds
pop
movsb
xor
fsubp
mov
cwtl
jo
jno
sahf
push
or
daa
pop
ss
lock
inc
outsb
jmp
adc
push
mov
cs
push
jbe
mov
fdivrl
loope
push
clc
lods
pop
or
adc
push
dec
ljmp
arpl
scas
pop
sbb
xor
shll
adc
scas
les
scas
insl
push
push
push
xchg
mov
ss
dec
out
jmp
test
enter
xor
aas
lcall
sub
cmpsb
sub
dec
cld
inc
dec
in
sbb
xor
sbb
mov
adc
test
mov
jnp
faddl
jmp
pop
xchg
sbb
fdivrs
cmp
jnp
mov
sbb
push
push
sub
inc
mov
cltd
repz
mov
mulb
xchg
xor
xchg
xchg
sbb
sub
lahf
sub
scas
shrb
loope
out
mov
xor
shrl
and
cmp
mov
test
xchg
mov
jns
mov
out
arpl
nop
xchg
push
out
jae
mov
and
or
push
dec
call
movsb
adc
fisttpl
inc
dec
adc
inc
xchg
add
mov
mov
les
xchg
aas
ds
push
dec
stc
loope
xlat
push
jae
icebp
mov
push
enter
gs
cld
sbb
push
daa
inc
push
xor
pushf
push
out
enter
adc
sahf
inc
jo
sub
pop
fnstcw
cmp
pushf
mov
jne
push
sbbl
xor
and
dec
stos
test
in
xacquire
xchg
sbb
filds
call
pop
sub
jnp
add
mov
stos
stos
out
mov
je
inc
xchg
lcall
mov
stos
loope
cmp
add
pop
and
ja
fmulp
enter
push
mov
mov
xchg
daa
or
dec
add
test
out
movsl
in
pop
je
cmp
shll
dec
insb
sub
mov
insl
in
ret
mov
pop
xor
pop
fdivrs
movsb
adc
xor
fnstcw
jo
xchg
jnp
leave
scas
adc
mov
inc
and
ret
sub
popa
mov
hlt
dec
xor
ss
stos
jae
jno
jno
sbb
cmp
xor
jl
inc
hlt
lret
jl
jle
cs
in
lea
mov
in
icebp
add
lahf
popl
loop
mov
jb
cmp
pop
repz
shlb
adc
mov
inc
or
jle
gs
dec
push
push
xchg
dec
push
loope
mul
in
pop
cmpl
jg
and
pop
adc
mov
or
enter
shl
sub
sahf
cmp
push
cld
dec
fnsave
scas
in
pop
out
fcomip
adc
xchg
inc
inc
xchg
loop
pushf
push
jmp
jae
dec
data16
mov
arpl
aam
aaa
inc
mov
inc
lret
dec
cmp
mov
jnp
xchg
xorb
incl
and
pop
adc
roll
or
inc
lea
mov
mov
pop
push
popf
arpl
mov
mov
pop
pop
sbbb
sub
add
test
add
pop
sub
in
mov
icebp
movsl
test
cld
out
les
lret
xchg
and
push
aas
sbb
push
push
add
and
fcmove
pop
popf
pop
adc
out
rolb
lret
sub
mov
das
dec
adc
icebp
push
testl
out
cs
sbb
inc
in
dec
push
pusha
xor
jge
icebp
inc
or
jbe
adc
cltd
out
add
test
xchg
lret
sarb
call
add
dec
push
mov
notl
push
adc
adc
test
sti
fldt
add
movl
sbb
dec
push
jne
xor
sarl
cmpsl
sbb
dec
lcall
jmp
and
jo
daa
sbb
js
xchg
pop
push
popf
xchg
sub
push
fucomip
les
fdivrl
lds
inc
aaa
jg
add
dec
pop
cmpsb
xor
shrb
push
jbe
dec
int
stos
ror
insb
ljmp
arpl
lcall
ljmp
subl
mov
fidivrs
add
or
stos
push
rcrl
enter
add
iret
int
scas
test
push
inc
xorb
int3
jle
out
call
mov
mov
movsb
mov
aaa
jmp
movsl
jae
sub
pusha
adc
jns
sub
js
ds
lahf
sub
and
pop
pop
enter
repnz
ret
push
sbb
or
or
arpl
inc
cwtl
adc
mov
add
icebp
dec
cli
xchg
jl
insb
push
or
sub
inc
ja
mov
int3
lret
fcomps
xor
cli
loop
sub
pop
icebp
xor
test
mov
cmp
jbe
movsb
stos
mov
mov
or
std
out
testl
sahf
scas
jnp
loope
add
mov
xchg
cmp
cmp
ret
mov
stc
sub
mov
pop
mov
mov
lcall
add
xor
xlat
push
add
mov
push
shr
ret
lret
xchg
hlt
int3
nop
add
push
xchg
call
pop
push
jp
jle
out
dec
out
cltd
mov
je
insb
hlt
xchg
loopne
mov
mov
sub
pop
jae
push
or
or
xchg
mov
rolb
cmp
insb
mov
cmp
mov
stos
xor
and
fcomps
mov
pushf
jp
dec
scas
fmuls
jbe
ret
dec
mov
test
aad
mov
les
insb
cmpsb
addr16
mov
cmp
data16
movsl
movsl
cli
mov
push
iret
aaa
sbbb
rolb
out
out
xor
fldcw
or
add
sti
aad
clc
add
aas
fildll
xchg
popf
cmp
inc
xor
fwait
xchg
into
pop
cld
ret
out
add
xor
mov
cli
idivb
rol
in
into
hlt
mov
dec
pop
jno
inc
ds
xchg
movsl
xor
and
lock
sbb
stos
pop
pop
inc
out
mov
scas
insl
mov
mov
mov
push
push
jp
arpl
loope
popf
pushf
popf
and
loope
add
pop
pop
dec
sbb
xor
adc
or
into
dec
scas
mov
inc
xchg
sub
lea
mov
push
jne
jle
jbe
add
mov
and
je
jg
scas
xchg
shlb
push
gs
dec
in
rol
adc
xor
mov
or
dec
xor
adc
das
inc
xor
arpl
and
sub
test
ror
loopne
push
mov
fcmovnu
out
shrl
jae
dec
fs
jae
aam
pop
popa
mov
std
mov
andb
jb
popf
out
roll
dec
push
sbb
negb
sarb
jp
scas
lahf
test
adc
jb
sahf
sub
xor
mov
mov
mov
in
daa
xchg
outsl
mov
in
enter
push
xchg
xor
mov
cmp
mov
scas
sti
jne
jno
mov
movsl
mov
test
lock
js
xchg
xchg
ret
xchg
adc
add
pop
aas
stc
mov
jns
out
push
ror
leave
pop
das
mov
push
jno
loope
dec
lret
lret
das
movsb
mov
jl
insb
cmpb
test
mov
aaa
xor
push
mov
dec
iret
mov
les
lds
mov
jle
sbbl
push
outsl
jo
jge
push
jns
popl
les
or
sbb
addr16
rolb
inc
decb
outsl
jnp
dec
jle
sti
jbe
test
cmp
stos
aam
xor
clc
mov
in
sbb
loope
pop
mov
cmpsl
imul
sti
add
dec
add
iret
je
jg
das
sbbl
scas
popf
dec
jno
subb
lods
mov
in
add
inc
jmp
cli
sbb
and
adc
cmp
xor
test
popf
or
imul
pop
sub
adc
cmp
mov
mov
rolb
jmp
jae
stos
push
mov
rcl
and
push
push
add
and
rcrl
es
mov
popf
dec
sbb
in
add
cmp
lret
mov
xchg
stc
sub
aas
dec
stos
lret
dec
lret
mov
lret
and
dec
xchg
or
shlb
pop
push
cmp
mov
das
sarb
das
mov
inc
lahf
loop
sbb
out
and
xchg
jg
sub
mov
lea
adc
pop
push
push
and
inc
mov
fsubrs
fidivs
dec
fimull
in
insl
sub
cld
fcoml
stc
hlt
dec
adcb
loopne
xor
sti
leave
cmpl
test
pop
push
mov
out
popa
cmp
xor
loope
mov
cmp
fsubrp
xor
push
inc
inc
cmp
or
out
adc
into
pushf
and
stos
lods
inc
adc
cmp
cs
fwait
js
and
enter
push
fwait
ret
mov
int
sbb
inc
scas
sahf
push
pop
filds
inc
pusha
push
xchg
adc
lock
adc
in
cmpsl
jnp
dec
push
fldt
mov
lcall
negl
mov
mov
cmpsl
lcall
pop
and
add
sub
test
pushf
add
sbb
insl
stc
lods
bound
xchg
movsl
ljmp
adc
insb
fs
call
push
test
xor
sbb
fstl
pop
outsb
or
arpl
jo
cmpsb
cmp
call
shl
xlat
jl
repz
out
mov
mov
ss
mov
add
lock
push
xchg
mov
sub
in
mov
or
fiadds
lds
mov
test
fdiv
fcos
push
stos
pop
cmp
add
movsb
daa
nop
call
inc
or
pop
push
sub
bound
lds
addb
nop
push
add
movsb
xlat
push
jl
lahf
lcall
mov
call
popf
int
vaddss
mov
in
xlat
cmp
and
insl
xor
inc
mov
stos
or
push
xchg
cmpsb
mov
test
push
fstps
pop
or
or
mov
and
popa
shl
pusha
loopew
mov
inc
loopne
sbb
popa
push
ss
loop
mov
pop
ret
aam
mov
jne
pop
imul
cmp
cli
cli
xor
fistl
out
mov
sbb
or
inc
mov
dec
and
jp
or
lock
test
sbb
cmpsb
xchg
adc
and
mov
dec
gs
loopne
std
jno
insl
daa
and
fldt
xchg
adc
fwait
xlat
dec
xor
cmp
leave
pop
mov
mov
cmpl
mov
xchg
push
xchg
adc
sti
dec
jno
inc
cmp
jl
int
jae
push
mov
mov
loopne
fisttps
mov
inc
cmp
ficoms
push
mov
jge
xchg
stos
loop
push
inc
int3
or
pop
subl
mov
enter
pop
inc
orl
sbb
int3
fmuls
jmp
sub
call
xlat
cltd
test
push
dec
jge
addl
clc
push
addr16
bound
adc
xchg
into
pop
into
sub
add
xchg
divb
mov
jae
daa
sub
les
xchg
jmp
add
stos
sub
inc
jl
mov
push
dec
sbb
cmc
xchg
fidivl
out
jno
test
out
sbbb
adc
daa
scas
shlb
imul
enter
mov
cltd
ja
lret
jmp
aam
mov
inc
xchg
hlt
mov
push
adc
mov
movsb
in
xor
or
sub
fmuls
shrl
pop
fs
ror
les
pop
add
and
or
shll
or
push
pop
xchg
and
mov
rcll
inc
out
cmp
call
nop
pop
fdivs
das
stos
cwtl
mov
insb
sub
jno
lcall
bnd
push
lret
push
dec
bound
add
cwtl
sbbb
fists
outsb
pusha
inc
and
iret
xchg
jbe
out
scas
lahf
out
jecxz
xchg
pop
inc
mov
mov
ja
mov
rorb
mov
test
arpl
xlat
adc
mov
mov
xor
bnd
jnp
insb
jmp
xor
in
xor
int
jno
imul
cmpb
pop
sub
mov
test
cmp
jnp
sbb
in
fisttps
inc
push
out
add
aad
jmp
shll
into
popf
or
jo
das
mov
mov
lds
or
std
lsl
xchg
bswap
mov
aaa
xor
mov
add
xor
push
mov
std
sub
rcr
push
cltd
lcallw
rcrb
out
add
sti
pop
and
negl
pushf
cmp
lock
pop
testb
and
imul
inc
jg
mov
addb
add
push
sbb
lock
cld
dec
jns
decb
pop
xor
jo
xchg
aad
xor
push
repnz
jb
lcall
add
jle
xlat
mov
fsub
xchg
ss
pop
ljmp
dec
pop
fsubrs
adc
dec
inc
jb
dec
pop
sub
sub
out
enter
add
sub
add
pop
or
notl
icebp
movsb
xchg
dec
pop
jne
arpl
fdivs
push
jo
imul
fstp
mov
pop
push
cmp
fiadds
xchg
adc
xchg
imul
xor
bound
mov
jb
mov
jno
xlat
push
lods
test
std
jns
dec
jns
add
adc
test
adc
inc
add
clc
cltd
pop
es
js
pop
loopne
dec
mov
lret
pop
push
add
add
loop
xor
add
mov
cmp
or
cmp
and
adc
test
inc
sub
decl
dec
jl
dec
lea
and
je
dec
setnp
daa
shll
mov
and
lock
pusha
mov
data16
inc
mov
scas
dec
aad
and
xchg
popa
xlat
add
jg,pn
and
mov
mov
out
or
xchg
pop
dec
adc
pop
fmul
dec
dec
mov
insl
test
shl
call
nop
addb
leave
sbb
mov
and
add
test
jo
rolb
test
mov
jecxz
aad
or
sub
out
ds
jns
pop
addr16
push
and
sub
adc
pop
shrb
mov
stos
jbe
outsl
scas
addr16
dec
mov
mov
push
scas
dec
repnz
lret
sub
jbe
fs
cwtl
adc
cmpsb
into
xorl
jge
or
jb
mov
hlt
dec
xor
cmpsb
arpl
sbbb
imul
aam
pop
arpl
cmc
adc
cmp
jbe
add
lods
call
xlat
pop
pop
xor
filds
adc
insb
loope
jne
jl
xchg
enter
push
daa
jp
scas
insb
or
fs
and
or
or
and
cmc
imul
fwait
ret
xchg
xchg
decl
test
push
cvtps2pi
sarl
ret
mov
sub
sbb
fwait
push
dec
sarb
jl
inc
push
pop
hlt
add
xor
dec
aaa
inc
jmp
stc
jne
cmp
call
or
xor
push
cld
fcoml
xor
cmp
adc
gs
out
xor
mov
out
pop
mov
sbb
lock
dec
mov
cmp
popa
or
ljmp
jge
fimuls
jle
add
or
add
or
sti
and
cld
push
dec
jb
inc
mov
inc
jge
inc
jg
leave
xlat
gs
in
mov
push
mov
lods
movsl
inc
xchg
pushf
je
fadds
insb
test
add
sbb
and
aaa
pop
mov
int3
flds
inc
int3
jl
ja
divl
scas
test
lock
je,pt
inc
mov
xchg
sub
dec
pushl
out
jo
jae
cmp
int3
aaa
mov
and
add
in
lahf
rorl
ljmp
xor
push
sub
and
adc
lods
sub
mov
jae
pop
lods
shll
mov
xor
dec
ljmp
mov
jg
fisttpll
xor
xor
loope
pusha
pop
aam
enter
jne
daa
xchg
inc
lret
cmpsl
pop
outsl
loop
fbld
push
lahf
mov
ja
mov
cli
mov
sbb
add
ds
push
dec
pushf
pushl
xor
mov
mov
lock
xchg
mov
and
ja
adc
jp
call
pop
aas
mov
jbe
sbb
jle
xchg
sbb
iret
sub
or
std
call
decb
cmp
pop
xor
push
adc
mov
dec
jo
mov
mov
jmp
mov
daa
or
data16
add
test
or
or
lods
stos
push
push
cmp
sub
mov
inc
push
stc
push
cmp
dec
mov
mov
test
mov
sub
cs
adc
in
mov
call
dec
jo
xchg
outsl
jecxz
fwait
jge
addr16
lea
imul
sti
add
roll
xchg
sbb
push
xchg
ljmp
add
ffree
adc
cmp
push
aaa
imul
and
xchg
int
loopne
dec
jmp
cli
stos
mov
test
jp
fnstsw
mov
pop
xchg
lds
lret
insl
sub
ja
pop
mov
xchg
push
sbb
mov
ret
cmp
inc
mov
je
or
pop
inc
sbb
or
xor
sub
fwait
lds
push
mov
xor
inc
les
jnp
ljmp
and
stc
outsb
bound
sub
and
or
xchg
stos
push
rclb
imul
jne
lods
pop
and
add
adc
scas
enter
imul
sbb
xchg
mov
in
add
pop
dec
pop
gs
sbb
adc
and
les
sbb
xor
pcmpgtw
inc
push
push
lock
ljmp
xor
fildl
mov
imul
push
dec
add
in
cmc
ss
js
stc
push
pop
pusha
xchg
sbb
dec
xchg
sahf
push
dec
ljmp
or
xor
add
adc
es
xor
cmp
ret
inc
lret
xchg
in
pop
cltd
mov
inc
dec
jecxz
outsl
pop
hlt
xchg
fwait
dec
gs
dec
sti
adc
fldl
xchg
daa
or
repnz
inc
or
jle
cmc
lods
nop
je
dec
outsl
pusha
in
jnp
test
mov
xor
in
mov
fsubr
imul
sarl
adc
mov
leave
cmc
out
cmp
mov
sbb
ret
mov
shlb
out
xor
out
adc
arpl
add
divb
rcrl
mov
shr
loope
cmp
fdiv
mov
and
fcmovnbe
outsl
mov
iret
lock
mov
leave
fwait
je
mov
jmp
push
ja
mov
ret
xchg
add
mov
test
push
cli
sub
cld
push
clc
mov
aaa
aad
sbb
jg
mov
push
nop
ljmp
roll
cmp
imulb
xor
jge
cmp
push
repz
or
into
ss
jecxz
or
xchg
jo
xor
mov
mov
out
in
and
mov
and
pop
ror
cmpsl
cmp
sub
pop
cltd
ffree
push
stos
mov
and
repnz
notb
push
push
dec
pop
sub
stc
nop
fisubrs
rolb
xchg
xchg
sub
or
dec
outsb
dec
sub
add
fbld
push
sub
shll
dec
sti
cmp
call
ja
pusha
push
jo
loop
mov
cmp
or
or
andl
popf
pop
push
dec
push
cmp
lea
mov
pop
in
sub
scas
or
jne
test
mov
add
push
xor
lahf
sahf
cmp
and
cmp
stc
sti
xchg
jb
jge
xchg
mov
mov
add
adcl
mov
xor
iret
jl
mov
movsb
mov
jns
es
cmpsb
icebp
mov
sbb
cltd
jb
jmp
aaa
vmread
xor
sub
sbb
lods
mov
pop
fiaddl
push
mov
push
ret
cmpsb
imul
pop
cmp
inc
xlat
ljmp
jno
add
xchg
fistps
and
cli
mov
sbb
dec
sbb
je
xchg
cs
icebp
lahf
movsb
push
repz
pop
faddp
jl
call
pop
loop
icebp
or
inc
and
test
pop
lcall
andb
test
sarb
in
or
dec
test
jne
sahf
dec
jecxz
iret
js
stos
jb
add
daa
stos
lcall
cld
bound
outsb
outsb
pusha
inc
movsl
xchg
sbb
mov
mov
insl
xchg
or
fnstcw
lret
rcll
jb
fidivl
lea
test
mov
int
sub
xchg
sti
xchg
xlat
clc
mov
or
inc
mov
leave
lods
inc
out
lods
loop
inc
inc
dec
repz
pushl
rcl
cmpsb
cmpsb
lods
int3
push
icebp
test
rclb
negb
aad
gs
mov
sbb
leave
sbb
xchg
and
aam
add
mov
orb
shrl
fwait
add
je
cwtl
sti
cmp
lcall
mov
stc
cltd
imul
aas
outsb
add
shrb
inc
int3
add
decb
loopne
out
push
ljmp
int
inc
fidivrs
test
fsubs
orb
inc
ss
shlb
sbb
pop
mov
fisubs
jmp
jo
lods
clc
add
jo
out
jne
lock
push
into
shll
test
aas
lret
ret
out
insl
scas
pop
and
push
fsubl
adc
shrl
imull
insl
adc
scas
ss
inc
mov
mov
pop
dec
push
jb
call
push
outsl
test
push
rcrl
adc
add
cmp
lods
movsl
mov
test
cltd
aas
adc
nop
add
fimuls
push
sbb
add
jns
arpl
pop
xchg
add
sub
movl
add
shl
cld
mov
out
ljmp
cmp
cmp
andb
cmp
mov
les
add
test
dec
mov
push
xor
cmp
fdiv
and
sub
dec
sbb
sbb
sub
mov
mov
scas
xor
in
inc
mov
fcomi
xchg
jp
dec
pop
add
sbb
sbb
xor
outsl
mov
xchg
sbb
push
pop
movsl
mov
ret
rorl
sbb
xlat
out
mov
mov
fstl
repz
ds
cs
sbb
loopne
inc
insl
inc
aaa
or
adcb
lea
pop
int3
jmp
mov
js
movsb
sbb
sbb
pop
call
jb
mov
mov
int
pop
sbb
or
outsl
mov
lea
and
cli
sub
test
pop
mov
stos
shrl
sti
dec
pop
dec
shrl
addl
lret
xchg
xlat
mul
imul
mov
jl
arpl
inc
mov
jge
and
sbb
ret
popa
daa
aas
lods
xor
movsb
int
shlb
outsb
out
xchg
xor
ds
scas
jge
enter
mov
pop
adc
aam
je
add
add
aam
xor
adc
into
xchg
xchg
bound
cld
adc
outsl
mov
jl
adc
fcmovb
pushf
pop
mov
inc
xor
imul
fstl
outsl
fwait
lcall
fdivl
fsubl
cli
sub
sub
sub
xor
cltd
pop
and
and
lret
xor
je
ss
incl
sti
add
cmp
add
xchg
push
data16
adc
push
xchg
shrl
add
inc
jbe
js
inc
or
adc
lods
hlt
adc
popf
xlat
cmp
pop
xor
dec
fs
dec
mov
imul
xor
jp
arpl
pop
loope
aaa
ja
add
pop
cmc
xor
stc
cli
mov
or
mov
inc
mov
push
movsb
xchg
push
out
mov
mov
in
cmp
outsb
outsb
cmp
dec
xchg
mov
or
adc
arpl
insb
inc
inc
arpl
popf
jge
repnz
mov
sub
sahf
jbe
pop
pusha
mov
or
stos
pop
push
idiv
pop
or
xor
stc
sarb
xchg
lcall
ss
ficoms
push
jecxz
jb
sahf
push
out
or
inc
push
mov
sub
mov
adc
dec
das
fcmovb
inc
not
subl
sbb
test
enter
in
push
rcr
jns
xlat
dec
sub
out
add
popa
sti
aaa
stc
or
cmp
and
stos
lods
push
add
fwait
jl
stos
lret
sub
aad
ror
test
das
insl
cmp
cmp
pop
xchg
push
jno
iret
inc
fbld
jae
sbbb
or
subb
popf
or
mov
das
cmp
in
ljmp
lcall
insb
dec
test
sti
mov
dec
push
add
stos
or
jl
jns
std
dec
add
mov
stos
int3
adc
xchg
or
insb
add
add
insl
test
out
scas
aam
mov
mov
int3
aaa
data16
mov
xlat
xor
mov
or
xchg
jmp
push
xor
mov
fsub
scas
mov
jb
or
sbb
add
sahf
out
mov
test
loop
mov
mov
fwait
pop
fsubl
push
ret
jmp
push
jae
aad
mov
jns
fs
inc
or
inc
inc
leave
sahf
lret
adc
lds
pop
xor
pushf
outsl
xor
addl
fmul
adc
out
incb
push
inc
sbb
mov
lahf
lock
fcompl
test
dec
pop
adcl
pop
sti
lcall
hlt
pushf
inc
in
mov
lods
adc
pop
mov
int
sahf
fs
addb
push
sahf
jl
int
test
loopw
or
xor
mov
imul
clc
add
movl
sub
int
add
push
das
and
mov
push
and
mov
dec
jle
mov
cmp
test
fcoml
or
pop
outsl
mov
dec
xchg
inc
mov
mov
sbbb
sbb
mov
jl
jle
push
mov
add
xchg
cmp
pop
add
shll
jo
data16
mov
dec
int3
cmp
jb
xchg
jno
repnz
shr
outsl
push
jns
xorb
js
and
popa
insb
dec
xchg
in
cmpsb
jb
loope
mov
mov
fistps
lods
icebp
add
add
jmp
push
mov
jge
shll
cmp
fdivs
or
sbbb
push
mov
sbb
cmp
push
xlat
inc
mov
pusha
sub
cmc
subb
mov
pop
aas
popf
inc
pop
cmp
stos
xchg
jns
sub
mov
divb
fsubp
je
daa
cmpsl
xor
xchg
adcl
mov
enterw
inc
lsl
out
dec
cmp
sbb
or
add
xor
addr16
push
mov
jns
adc
mov
iret
dec
aas
xchg
into
mov
xchg
cmp
cwtl
insl
loope
test
mov
push
xor
push
aas
jo
add
jecxz
jns
jp
push
inc
lds
and
xchg
ss
jle
xlat
add
pop
jnp
jno
sub
sti
adc
fprem1
in
fidivs
test
enter
xor
jecxz
push
sub
test
sbb
jecxz
gs
mov
aaa
mov
sub
les
es
xlat
fcoml
mov
movsb
push
imul
lret
push
pop
jns
sti
inc
jnp
addr16
add
pop
popa
inc
push
jmp
mov
push
mov
adc
in
sbb
sbb
mov
adc
push
fsubl
adc
pusha
dec
xor
add
mov
imul
pop
push
inc
xor
lahf
or
jbe
lods
fwait
movsl
inc
push
xor
in
mov
mov
sbb
scas
mov
dec
movsl
call
push
bound
adc
aas
pop
in
xor
mov
test
fdivrp
ja
xchg
mov
loop
push
cmp
inc
ds
leave
outsl
test
cmp
pop
push
fsubp
xlat
adc
lods
jg
popf
jge
mov
popf
sarl
cmp
loopne
aad
pop
neg
cmp
inc
test
mov
jae
xchg
out
rorl
sub
popf
dec
les
testl
push
icebp
or
fxch
mov
push
fwait
xor
cmp
mov
adc
arpl
int
leave
fisttpll
add
in
pop
lea
xor
xchg
jle
ja
icebp
rcrb
jnp
ljmp
mov
sarb
insb
xor
jle
movsl
pop
xchg
dec
ret
enter
std
leave
xor
rcrb
stc
scas
mov
lret
adc
loop
rcrl
push
pop
fldcw
mov
pop
daa
out
dec
popf
or
push
mov
je
push
push
loop
ficoml
ret
movsb
xor
movsl
cmc
push
dec
and
jmp
xor
push
add
pop
sahf
out
rorl
push
enter
cwtl
mov
pop
jmp
rorb
cmp
cli
in
push
in
pop
shld
call
lahf
cltd
or
ja
push
xchg
inc
pop
sbb
push
je
cmpl
push
scas
add
out
push
jle
sbb
imulb
pushf
pop
ret
mov
lods
sahf
adc
mov
rorl
mov
nop
loope
test
bound
xchg
sti
push
mov
in
insb
push
inc
js
inc
mov
push
cmc
cli
sbb
jle
mov
adc
andl
cmp
xlat
lods
mov
xchg
les
shrb
aas
jnp
jae
aaa
xor
mov
roll
clc
xchg
in
movsb
test
lock
push
fsubrl
aaa
pushf
repnz
ret
pop
test
mov
inc
and
xchg
filds
aad
std
mov
jo
movsl
cmp
mov
xchg
lret
lahf
popf
dec
jmp
inc
aas
adc
xlat
sbb
pushf
out
mov
in
mov
jno
pop
adc
fmull
or
fcmovne
or
sarl
dec
dec
pop
jg
cmpb
jmp
mov
mov
sbb
subb
pop
mov
jg
test
push
testl
add
cmc
repz
mov
outsb
int3
js
outsb
call
mov
push
movsl
mov
pop
jge
sub
leave
inc
xchg
mov
push
or
aas
pop
mov
stc
aam
dec
jae
inc
mov
fsubrl
inc
jg
mov
fstl
movsb
push
arpl
jns
push
pop
addr16
and
inc
sbb
jp
popf
cmp
sbbb
mov
or
push
mov
mov
xor
push
std
xorb
lret
adc
add
and
loop
jo
aas
xchg
pusha
ficoms
push
enter
arpl
or
jnp
xorl
testl
inc
and
clc
add
xchg
pushl
rcrl
xchg
mov
xlat
test
jns
push
jo
lds
inc
add
loope
jae
mov
sahf
or
push
add
movsb
mov
addr16
ret
jne
push
mov
pop
in
jb
in
out
aad
sub
shll
push
js
pusha
jbe
pusha
vxorps
or
cmp
imul
test
fcomip
xlat
xchg
shrl
jecxz
sub
adcl
test
pusha
fdivs
xchg
and
pusha
addr16
add
cmc
pop
repnz
sbb
mov
pop
jle
and
adc
jg
ret
lods
int
enter
dec
fucomi
int3
push
push
movl
adc
push
data16
xor
orb
adc
sub
cmpsl
adc
sub
xchg
test
leave
aas
aam
lcall
mov
sub
xchg
jb
jmp
daa
pop
push
push
mov
fisubrl
or
movsl
mov
jmp
out
sarb
push
cs
in
xor
jbe
push
inc
pop
les
or
mov
movsb
mov
dec
aad
xchg
jl
cmpsl
xchg
fadds
cmp
inc
ds
test
repz
lods
sbb
inc
mov
sub
shrb
xor
imul
aas
mov
inc
in
cmp
push
lock
fisubs
xchg
xor
test
push
inc
notl
scas
jne
adc
mov
in
push
inc
jno
sbb
sbb
sti
xor
and
sub
or
mov
cmp
hlt
adc
or
push
leave
cmp
add
fstl
inc
dec
xor
push
into
fbstp
out
loope
push
stos
pop
lret
mov
add
lods
leave
inc
jno
sbb
lods
xchg
call
adc
loop
mov
mov
push
adc
xchg
stos
das
out
push
cmp
repz
imul
jecxz
insb
cmp
push
cltd
hlt
mov
cmp
loopne
lret
and
sbb
sub
cmc
push
inc
test
movsl
les
mov
cmp
sbb
js
gs
sbb
push
aad
fnsave
cli
fildll
sarl
xor
mov
fisubs
xor
mov
mov
pop
sbb
repz
jge
xchg
or
lods
movsb
test
and
xor
adc
and
dec
sbb
aad
in
jmp
mov
out
iret
sbb
xchg
inc
iret
ds
cs
sub
insl
add
in
int3
mov
sahf
stos
fadds
and
iret
lods
push
das
test
aas
loope
inc
lret
roll
inc
popf
mov
pop
fisttpl
mov
cmp
inc
inc
push
cld
mov
das
inc
jge
cmp
dec
xchg
jg,pn
inc
jge
mull
mov
out
jge
and
cmp
call
adc
or
mov
subl
icebp
jo
pop
xchg
popf
lret
sti
fstpt
sti
pop
nop
nop
cmp
jne
add
xchg
aas
mov
icebp
sub
hlt
add
cli
cmpsl
in
mov
xchg
insb
enter
loope
add
mov
xchg
mov
inc
pusha
imul
fidivrs
mov
jnp
and
aam
pop
ret
or
sbb
lahf
sub
pop
das
push
test
dec
mov
dec
testl
xor
sbb
inc
sub
xor
rorl
fbstp
inc
je
xorl
mov
dec
pop
inc
and
mov
inc
sub
push
jmp
or
pop
dec
arpl
jl
jge
out
fsub
jg
dec
mov
andb
jbe
pop
negb
popf
rclb
add
mov
pop
fadd
arpl
imul
cmp
test
push
push
inc
popa
or
add
hlt
loopne
fcompl
add
jbe
jnp
sub
push
fwait
mov
cmp
cmp
aad
add
in
insb
adc
fdiv
push
jno
in
xchg
push
inc
and
test
push
jb
cmpsb
push
mov
sbb
dec
sbb
and
dec
jl
or
or
xchg
cmpsb
iret
mov
les
into
mov
call
ljmp
cmp
cmp
or
push
repnz
out
std
pop
mov
mov
sbb
mov
or
push
stc
ret
inc
test
push
sti
pushf
adc
dec
pop
jmp
lds
dec
cmp
jmp
sub
rcr
and
push
jle
mov
dec
add
rclb
daa
inc
jp
dec
xchg
mov
adc
stc
xchg
jle
aas
add
mov
jae,pn
jns
out
cld
sbb
inc
or
pop
std
inc
jnp
jle
scas
icebp
xor
push
test
jmp
das
es
call
ja
push
mov
jge
aam
push
subl
pusha
iret
test
ljmp
fsts
aam
mov
sbb
cmp
les
shl
ror
sbb
sub
shlb
mov
stos
movsl
xlat
mov
lret
xchg
sahf
fwait
sub
mov
in
movsl
clc
mov
add
or
dec
mov
int
jge
pop
stc
push
lea
ret
mov
xor
pop
sub
mov
insl
incb
mov
and
pop
push
mov
jo
stc
sbb
loope
or
and
test
push
inc
in
xchg
xor
pop
lcall
dec
popa
nop
popa
inc
fdiv
arpl
in
mov
fsubrl
in
xchg
ss
and
in
push
sarb
sti
cmp
inc
inc
xchg
xchg
inc
sbb
mov
inc
push
ss
outsl
add
lcall
out
in
jns
cmp
mov
scas
stos
test
aas
in
out
sar
xor
imul
fstps
mov
out
dec
jbe
jl
sub
fsubrl
cmp
int3
jmp
push
jne
jno
mov
in
mov
test
jns
sub
and
cmp
int3
or
cmp
add
stos
bound
dec
mov
jbe
push
scas
push
mov
shlb
mov
mov
dec
sahf
cmp
push
fs
lods
ds
mov
insl
sbb
cld
pop
pop
loop
fs
arpl
cmp
xor
dec
jns
movsl
mov
xchg
inc
cmp
add
mov
push
bsr
and
pop
loop
adc
mov
test
cwtl
popf
jno
fwait
in
iret
pushf
out
ja
xor
fldcw
aas
insb
aam
mov
fcmovne
ljmp
xchg
stc
dec
ds
call
sbb
xchg
movsb
insl
inc
cmc
roll
mov
push
lods
pop
pushf
push
push
sti
dec
ljmp
cmp
fisttpl
and
or
xchg
push
push
mov
ret
ss
bound
xchg
jge
ss
push
add
outsb
insl
adc
jle
push
cmp
test
shlb
mov
fs
xchg
jle
jge
sti
int3
nop
add
in
shlb
aas
xchg
test
xlat
cmp
ljmp
fistps
mov
cmc
xchg
cmp
inc
loop
cmpsb
roll
imul
adc
lods
call
jge
cltd
fcoml
jns
jmp
insb
xor
popa
movsl
jle
stos
push
and
sbbl
sbb
jo
mov
repnz
sub
push
iret
aam
imul
fimuls
inc
and
mov
into
shl
pusha
imul
inc
lcall
pop
jno
incb
adc
dec
adc
dec
add
push
cmp
dec
mull
mov
repnz
lea
into
or
sub
insl
ffreep
lods
pop
fcoms
xchg
inc
pop
movsl
std
insb
inc
out
push
cs
testb
cwtl
ret
cmp
jl
jmp
outsl
push
out
subl
add
mov
push
test
aad
cmp
add
and
rcrb
and
cs
rcrl
and
add
push
mov
ficompl
mov
mov
mov
cwtl
adc
sub
das
xor
push
lods
and
lcall
cmc
popl
dec
ret
pop
sub
sub
cmp
ja
das
add
cmp
mov
ds
dec
jg
pop
out
add
add
mov
test
xchg
inc
and
push
cld
out
inc
lahf
inc
jecxz
sub
mov
push
inc
fwait
sbb
cmp
pusha
sbb
into
inc
jno
or
or
mov
int3
mov
xlat
addr16
push
mov
leave
pop
fldln2
cmpsl
je
dec
fimuls
arpl
in
je
pop
xchg
adc
pop
adc
arpl
push
ljmp
loop
adc
sti
outsw
or
lret
jae
xor
sub
pop
and
cmp
pop
and
cwtl
bswap
repnz
xchg
or
push
dec
sbb
xchg
dec
shrl
mov
shr
test
sbb
adc
aad
mov
mov
jbe
adc
std
scas
mov
ret
movsb
ret
sub
mov
ror
loope
xchg
fwait
imul
addr16
jnp
inc
sahf
mov
lcall
lret
ljmp
and
in
jmp
int
movb
bound
ja
ret
adc
movsb
lods
aad
cmpl
inc
dec
fidivs
testb
repz
mov
adc
jbe
icebp
imul
das
jge
cmp
xor
loopne
mov
xchg
stc
mov
cld
mov
dec
shld
dec
pop
jbe
and
ret
ret
xchg
lret
test
add
stc
mov
jne
xlat
and
inc
push
jno
push
ss
adc
idiv
xor
push
hlt
mov
inc
aam
testb
push
cltd
cmpsl
call
adc
add
cmp
or
xor
or
out
lret
add
mov
test
lds
adc
add
mov
or
fistl
in
mov
adc
add
es
in
into
or
daa
mov
sbb
inc
pushl
jecxz
adc
mov
lea
call
ret
sbb
inc
iret
jg
rorl
pop
ljmp
mov
jae
or
mov
pop
fisubs
es
mov
popf
bound
aad
dec
mov
arpl
pop
scas
mov
push
xor
xor
addr16
pop
lods
inc
stc
popf
xor
sbb
and
popf
out
and
gs
push
sbbl
rolb
add
push
pop
jecxz
adc
test
or
in
lock
cltd
leave
sbb
jg
nop
or
cld
js
ljmp
cmpsl
push
pop
rorl
aas
jge
xor
push
test
int3
add
aad
mov
rclb
enter
iret
ret
mov
jge
or
xchg
dec
decl
and
pop
pop
xchg
jnp
fildll
sbb
mov
outsb
dec
fstpl
fsubrl
outsl
out
push
mov
jb
cmc
cltd
push
pop
mov
insl
cmp
sahf
pusha
pop
add
inc
in
rcll
inc
insb
lods
lret
addl
adc
icebp
iret
and
test
jae
cltd
aad
sti
dec
orb
enter
cli
cmp
das
pusha
insb
inc
adc
and
xor
and
dec
insb
mov
or
push
ja
in
push
test
mov
mov
push
gs
fcomps
jecxz
fistl
lods
fstps
or
pop
outsl
shll
push
jl
jge
jno
dec
leave
mov
pop
pop
inc
pop
in
in
stos
stos
xor
cld
jl
sub
sbb
hlt
repz
jns
fstl
lds
pop
xchg
mov
js
roll
pop
jno
cli
jle
popf
mov
fwait
xchg
adc
test
cmpsb
jmp
lret
outsl
mov
xlat
jge
insl
nop
mov
fsubrs
mov
xor
std
into
cmpsb
jo
in
test
jge
aam
sub
jbe
and
dec
mov
jmp
xor
mov
test
incl
pop
or
std
out
insl
push
inc
inc
scas
mov
gs
sahf
lret
mov
lret
inc
pop
inc
andb
mov
and
and
subb
xchg
jp
adc
mov
jno
jmp
mov
mov
rcll
leave
xor
cmp
mov
fnstsw
es
jle
and
adc
aas
xor
jb
sahf
aas
cld
dec
xor
mov
xor
jl
jne
rcll
test
enter
fisubrl
dec
mov
and
pop
ja
jmp
imul
or
sub
inc
ljmp
or
loopne
mov
movsb
mov
mov
bswap
adc
andb
xchg
lds
add
das
add
dec
test
pop
adc
jp
movsl
inc
or
lcall
fsubl
addr16
and
cmpsl
mov
mov
inc
jnp
or
stos
or
inc
push
dec
pop
mov
jmp
cmp
ret
cld
mov
in
dec
data16
loopne
pop
subl
fidivs
push
inc
sbb
cmc
pushf
popf
sub
out
outsl
jmp
cld
sub
cli
jle
sbb
pop
sbb
xor
adc
stos
shl
sub
out
or
or
jecxz
fsubl
shll
testb
sarl
fiadds
fimuls
cmp
jns
lds
movl
aas
lahf
icebp
sbb
loopnew
sarl
push
jmp
pop
sub
push
dec
cltd
and
jns
lea
mov
sar
sti
sti
xchg
mov
ljmp
xor
int3
and
mov
int
in
sbb
or
xor
sub
pop
nop
sbb
bswap
aam
repz
ret
cmpsl
lock
shlb
dec
bound
and
pop
adc
cmp
in
pop
adc
push
outsb
mov
pop
push
aam
and
and
and
in
popa
ficoms
je
ds
mov
gs
fwait
mov
je
shrl
ja
dec
xchg
mov
push
ja
jp
stos
mov
xchg
cmp
push
sbb
add
andl
inc
add
repz
adc
mov
push
and
mov
xchg
jo
mov
jno
enter
fsubrl
test
mov
xchg
ret
xchg
loope
jns
add
pop
in
icebp
xchg
sbb
jno
cmp
fmulp
fucom
push
pop
addr16
in
xchg
js
test
mov
notl
pop
scas
sbb
jns
icebp
cmp
mov
test
outsl
jmp
loop
inc
mov
ret
fstl
and
iret
enter
lcall
rolb
test
dec
pusha
lret
adc
mov
bound
out
adc
nop
cwtl
ret
scas
mov
mov
das
pop
xchg
testb
sahf
mov
out
lahf
pslld
loopne
mov
add
adc
or
iret
fisttpl
xchg
jecxz
rcl
outsl
into
test
push
rcrb
jae
insl
enter
pminsw
pusha
adc
shll
stc
xchg
stc
ret
dec
push
aas
rcrb
mov
push
stc
pop
repnz
mov
cmp
int
xchg
rcr
shlb
xchg
inc
fstl
cli
and
add
dec
adc
fsubrp
sbb
push
mov
insb
add
bound
add
sarl
out
repz
loope
mov
cmpsl
dec
xchg
loope,pn
test
mov
mov
in
jge
cld
into
out
jp
inc
sahf
xor
jg
mov
pop
mov
push
fstpl
cmp
push
ss
fiaddl
fs
xchg
mov
cmp
loopne
cmpsl
mov
mov
aas
xchg
push
inc
ds
sbb
jmp
cwtl
sub
gs
pusha
and
hlt
mov
incl
jmp
lods
lret
xor
sbb
dec
std
pop
xchg
mov
jo
sarb
in
xchg
cld
cwtl
enter
sarb
insl
cmc
push
adc
push
or
jge
call
loope
femms
shrb
sbb
push
dec
sbb
insb
daa
push
mov
pop
xchg
ja
pop
loop
frstor
adc
stos
inc
js
sbb
cs
out
mov
mov
imul
lcall
pop
lea
push
jae
sbb
int3
push
popl
mov
add
loop
sbb
jecxz
pop
dec
and
dec
stos
lret
js
xor
add
inc
cltd
jmp
sbbl
sbb
test
xchg
or
xchg
sbb
push
adc
xchg
dec
fsubl
movsb
cmpsb
pop
in
mov
xor
cmp
pop
mov
test
stos
xor
jl
mov
push
ror
jbe
jo
adc
or
mov
or
push
and
cmp
das
jg
add
xchg
out
aad
mov
xchg
cwtl
je
aam
jg
pusha
cmp
inc
ret
divb
loop
push
xchg
cmp
xor
fs
aam
cmp
divl
push
popa
aaa
cltd
add
ret
jbe
jnp
mov
ffree
adcl
push
mov
xchg
mov
pop
in
adc
imul
xor
pop
or
lret
add
jp
push
out
dec
cld
adc
ret
stos
xchg
cmp
mov
lcall
cmp
leave
mov
inc
in
xor
sub
gs
mov
lahf
fistl
inc
add
orl
add
push
sbb
mov
mov
sbb
mov
dec
sub
fimuls
or
push
loopne
lock
and
mov
aam
loope
ficoml
xchg
addl
add
xchg
fistpll
lock
ss
test
push
ret
push
ss
fldl
rcll
jbe
mov
mov
les
popa
lds
push
xchg
jecxz
mov
mov
in
pop
out
adc
cmp
xlat
aad
orb
xchg
addl
loopne
push
arpl
cmp
dec
daa
xor
arpl
into
push
dec
pop
loopne
out
jae
pusha
jae
adc
and
jno
fwait
negb
or
or
xchg
push
and
push
xchg
call
adc
cmp
adc
insl
cli
lock
in
jg
ss
or
arpl
in
mov
xchg
dec
dec
cmp
stc
push
pop
repnz
pop
mov
into
pop
add
fs
mov
out
mov
clc
sub
out
sub
xor
or
mov
jl
jb
call
pop
xor
dec
jno
xchg
inc
pop
shlb
sbb
pusha
xor
in
push
xor
inc
mov
adc
jp
dec
mov
in
jle
cmp
adc
mov
into
cmp
pop
mov
mov
push
int3
sbb
jne
test
mov
daa
sbb
pusha
in
cmp
adc
lcall
jb
mov
and
mov
call
pop
mov
pop
leave
inc
jnp
std
inc
cltd
stos
les
cmpsb
insl
lock
mov
jb
xor
sub
call
lods
inc
xchg
call
jmp
mov
mov
push
in
mov
adcb
aaa
inc
and
fldpi
push
xchg
lock
or
es
notl
inc
loopne
pushf
int3
jnp
inc
or
or
fs
stos
les
pop
pop
pop
jb
add
or
loop
mov
jno
in
out
cmp
das
dec
lds
xchg
xchg
pop
xchg
dec
add
jp
adc
mov
ljmp
cwtl
icebp
and
add
cld
rclb
pmaxsw
mov
or
imul
jae
imul
sbb
and
and
pop
fldcw
std
add
bound
mov
push
or
into
addb
pop
push
cmpsb
and
testb
les
mov
xor
dec
scas
adc
jge
mov
sbb
mov
inc
loop
pop
push
sbb
leave
rcll
lock
adc
add
adc
ret
aam
in
pop
dec
xchg
dec
mov
ja
pop
iret
xor
imulb
inc
enter
pop
inc
nop
loop
cwtl
stc
arpl
dec
in
add
pop
dec
mov
push
push
push
fs
iret
jo
mov
and
sarb
rcll
into
fs
cmp
lret
jb
mov
pop
mov
pop
xor
stc
mov
in
xchg
push
popa
cmp
dec
add
pop
dec
ds
and
popf
loopne
push
dec
addb
cmp
pop
negl
and
flds
pop
int3
fucomip
dec
mov
dec
xchg
mov
fsubrl
into
stc
cmp
add
and
ljmp
ja
sarb
das
sub
xchg
and
ss
cwtl
bound
cld
xor
pushf
ret
mov
or
cmp
das
lcall
cmc
ret
std
sti
pop
sub
inc
mov
mov
enter
aam
dec
xchg
pop
push
pushl
roll
push
shlb
xchg
fwait
lods
popa
out
push
cmp
jmp
or
jae
sub
inc
aas
push
loop
mov
and
dec
sahf
sbb
movsb
cli
lock
sti
lret
add
jle
jbe
cmp
adc
jno
shl
popf
loop
and
fadd
cmc
jp
cmp
dec
add
fmuls
pop
or
outsl
rol
xchg
and
adc
fistpll
cmp
jo
xor
mov
in
add
adc
lock
push
fdivrl
es
xchg
movsb
adcb
testb
nop
or
mov
adc
stc
and
mov
outsl
jle
adc
cmc
imul
out
fs
out
jae
adc
pop
das
jecxz
inc
add
push
mov
push
insb
add
cltd
mov
push
leave
notl
imul
daa
scas
shlb
out
add
jl
out
xchg
pop
out
pop
in
push
sahf
icebp
je
xor
pop
cwtl
jae
repnz
mov
into
test
testl
sbb
int3
mov
jns
repz
aaa
popf
sub
mov
ret
cs
and
lods
xor
in
dec
fisubs
lahf
xor
rolb
hlt
in
decb
push
and
rcl
bound
stos
pop
sbb
frstor
je
sahf
loop
es
hlt
nop
cmpsb
adc
pop
inc
js
inc
int
arpl
add
je
fsub
adc
ljmp
and
vmovaps
sbb
dec
and
xor
add
sub
adc
jbe
xor
dec
jnp
mov
add
add
add
stos
test
test
call
fwait
xchg
sub
pop
push
gs
loopw
dec
or
pop
mov
add
jns
pushf
outsb
loope
rcrl
sub
lcall
test
xor
add
movsl
daa
add
sub
das
pop
int
jle
xor
or
idivl
jnp
xor
xor
pop
xchg
fsubrl
icebp
push
xchg
insl
sbb
in
sub
popf
jbe
xchg
xor
cmp
sbb
pop
inc
fisttps
icebp
sbb
or
mov
js
inc
pop
out
out
add
push
push
stos
jmp
jmp
scas
stos
cmp
push
pusha
out
mov
adc
or
pop
nop
pop
pop
pop
pop
sub
cmc
clc
jecxz
push
xchg
mov
mov
mov
xor
enter
pop
int3
xor
or
sbb
mov
xlat
test
fistpll
mov
jo
mov
mov
or
xor
xchg
xchg
lea
cli
leave
popf
sbb
and
stc
add
loopne
stos
test
mov
mov
mov
xlat
cld
mov
cmc
mov
repnz
push
inc
outsl
or
mov
imul
leave
cli
ret
xchg
sbb
cmpsl
mov
jle
mov
imull
dec
push
push
jecxz
repz
mov
mov
mov
lods
out
dec
xchg
mov
shrb
mov
out
xor
mov
xchg
xchg
mov
or
in
test
andb
pop
mov
mov
arpl
or
mov
mov
mov
jb
cltd
jl
roll
cmp
sbb
mov
fistps
lock
mov
in
pusha
push
movsl
cmc
push
inc
gs
pop
jo
cmp
adc
or
test
ret
mov
dec
dec
stos
stc
or
or
adc
fstpt
mov
sbb
inc
into
mov
pop
add
aaa
loopne
incl
jne
insb
loopne
xor
test
imul
cmpb
nop
add
lds
out
mov
into
stos
stc
sub
mov
sub
jle
adc
mov
in
out
shll
dec
cld
xlat
cmpl
ret
scas
in
stos
ss
and
out
loop
out
loope
xor
cltd
add
lahf
fadd
lret
divb
cmc
in
add
or
pop
mov
loop
jmp
sub
movsb
cmp
shll
or
into
ss
dec
adc
outsb
fidivrs
xchg
sti
mov
test
out
out
pop
dec
test
in
mov
jl
or
roll
push
imul
dec
data16
xor
in
mov
jl
int3
ret
rclb
mov
jae
sub
mov
out
pusha
cmp
cltd
leave
and
push
or
fs
out
rolb
cmp
mov
xor
inc
mov
out
ds
xor
shll
leave
in
xlat
sbb
cmp
insl
pop
in
sub
inc
xchg
and
je
push
jb
movb
mov
pop
shlb
dec
js
in
call
xchg
push
cmp
pop
mov
icebp
lret
loopne
inc
shll
fnstcw
ds
aad
nop
add
scas
adc
sbb
lcall
xor
push
gs
mov
inc
jae
push
imull
inc
shl
andl
insb
mov
mov
ja
outsl
xor
mov
cmc
ljmp
dec
test
sbb
negb
mov
lds
out
scas
fimuls
adc
cmp
test
xor
push
or
movsb
and
xchg
pop
aaa
ss
sti
sbbl
xor
mov
mov
xlat
adc
in
jge
cmp
mov
shrb
jb
jge
pop
sub
or
pop
xchg
cmp
sarb
outsb
lret
jns
inc
loop
jbe
imulb
cmc
xchg
mov
popa
xlat
push
test
push
into
jmp
jmp
and
sub
jp
adc
lret
lods
jmp
sub
jns
sbb
cmp
movsb
sub
test
pop
cmc
jmp
mov
xchg
hlt
sarl
adc
test
lods
fnstsw
mul
cmc
arpl
repz
inc
enter
mov
in
sbb
aas
lea
out
pop
orl
les
pop
stos
movsl
lds
cli
scas
scas
xor
imul
push
sahf
cmp
lds
test
insb
mov
cmp
sahf
lock
psubd
dec
jae
xor
dec
adc
mov
das
add
out
ds
xchg
shrl
push
in
repz
pop
add
adc
aad
or
popa
outsb
mov
mov
add
call
dec
addb
and
push
add
adc
xchg
or
dec
inc
inc
mov
pop
mov
pop
rcl
pop
test
movsl
cmp
xor
jnp
sbb
adc
xchg
or
push
sahf
xchg
and
pushf
test
inc
jmp
outsl
xchg
push
or
sahf
push
out
mov
ret
and
adc
and
cmc
into
xor
and
pop
xchg
fs
mov
hlt
les
ret
inc
xchg
fmull
mov
mov
pushf
int3
mov
dec
test
cmpsl
add
or
mov
sar
in
xor
adc
xor
mov
dec
shr
pop
push
pop
or
aaa
xchg
jae
leave
xor
adc
cmc
xor
add
aam
dec
xchg
xlat
int
addr16
jbe
inc
jnp
xchg
jb
fiaddl
cmpsl
out
lds
inc
int3
sbb
subl
out
add
daa
arpl
or
mov
and
push
add
xchg
and
icebp
pop
push
and
adc
dec
xchg
push
mov
adc
das
push
mov
scas
repnz
inc
stos
inc
hlt
xchg
in
or
xchg
jne
and
cmp
mov
cli
pushf
pusha
addr16
mov
mov
and
xlat
adc
divl
xchg
aaa
inc
jle
sbb
pop
jle
jge
in
lahf
mov
and
out
or
pop
mov
dec
adc
aaa
cli
adcb
xor
sarb
push
pop
pop
jns
sub
aad
cmc
inc
push
ss
cltd
shll
sti
cmc
sub
insb
pop
inc
stos
mov
dec
mov
gs
fcoml
adc
or
mov
in
clc
cmpsl
add
clc
xor
sbb
mov
xchg
shll
je
sarb
add
push
dec
or
add
mov
jmp
dec
pop
mov
pop
fisubl
cltd
adc
push
mov
inc
faddp
into
xor
nop
mov
inc
add
sub
fidivrl
add
inc
dec
jbe
mov
test
jecxz
jb
or
mov
xchg
cmpsl
imul
mov
jne
scas
aam
jo
fwait
sub
push
jb
outsb
and
stos
cmp
int
outsl
in
dec
repz
jl
jecxz
jno
jge
notb
aaa
test
or
adc
ret
and
loopne
dec
imul
cltd
in
xchg
and
test
inc
lahf
in
push
pop
mov
xor
stos
stos
cmpsl
inc
or
lds
subl
bound
popf
dec
outsb
sub
xor
jmp
movsb
mov
xor
notl
in
imul
in
xor
jae
aas
pop
ljmp
cltd
imul
jmp
aam
shll
loopne
mov
lds
fsubl
mov
xor
xchg
mov
into
inc
xchg
cltd
mov
decb
pop
mov
mov
clc
push
push
dec
cmp
adc
or
mov
mov
xchg
inc
xlat
dec
mov
jmp
call
fdiv
mov
mov
cmp
in
and
or
mov
movsb
aam
fidivs
jmp
sub
lea
es
sub
push
add
lds
lret
pop
dec
cwtl
dec
cmp
pop
js
mov
mov
std
push
dec
add
jmp
dec
out
sahf
xchg
cmpb
out
int
jg
or
scas
clc
pop
stos
jmp
xchg
movsb
mov
div
dec
rorl
popa
jmp
sub
mov
scas
mov
mov
pop
mov
cmpsl
nop
testl
mov
xchg
int3
xor
adc
cld
je
jbe
rcr
adc
int3
mov
jae
sub
jle
pop
mov
mov
insl
pop
orb
dec
es
mov
cmp
mov
mov
orb
or
or
add
jb
push
mov
test
pushf
and
mov
leave
in
jecxz
add
push
in
add
fsubp
and
adc
dec
dec
dec
or
pop
push
cld
jle
mov
shrl
je
popa
arpl
cmp
pushf
jmp
pusha
lret
outsl
repz
jne
pushf
adc
lock
push
cmp
sub
in
sti
mov
aam
or
icebp
mov
xchg
shrb
test
push
aas
adc
enter
adc
and
loopne
lcall
int
push
and
loopne
mov
ss
push
mov
aaa
pop
pop
lcall
repnz
jb
fidivrl
rclb
sub
xchg
cmp
adc
mov
es
mov
pop
repnz
or
jge
push
insb
sub
sbb
pop
cld
xor
loopne
mov
jae
dec
cmp
add
lods
and
sbb
inc
pushf
pop
push
sbb
fdivrs
out
in
daa
sbb
push
push
push
adc
je
and
pop
call
leave
dec
pop
push
push
in
ds
out
outsl
push
cwtl
xlat
movsb
movsb
mov
jle
pop
rcl
xor
movsl
fdivrl
dec
gs
and
sub
pop
ljmp
push
cmc
sub
add
fwait
sti
aas
push
and
shrb
insl
and
test
or
inc
fiadds
pop
fstpt
or
clc
idivl
mov
bound
sub
jle
in
lods
scas
jmp
lods
movsl
sti
fdivs
pushl
dec
fdivr
cmp
xor
loop
pop
pop
push
lock
xchg
xchg
insl
dec
mov
movl
int
mov
adc
repz
pop
xchg
xor
push
mov
lock
pusha
ds
imul
sub
mov
shrl
and
loopne
pop
mov
cmpsl
pop
es
into
or
sti
int
pop
ret
aas
pop
pop
and
pop
imul
test
xor
out
int
push
cs
pop
outsb
mov
jmp
xchg
pop
jge
add
mov
cltd
ds
aas
inc
mov
push
jnp
push
add
enter
lcall
inc
dec
fsubr
mov
es
sub
jns
xor
lea
add
push
and
out
sub
or
popf
fwait
aaa
mov
xor
jmp
push
xlat
mov
pusha
sbb
leave
or
lods
cmp
out
hlt
rolb
cmp
mov
xor
daa
jo
cld
int3
push
xchg
out
pusha
dec
ret
push
xchg
jbe
aam
inc
and
lea
add
mov
mov
cmp
ds
add
sbb
aaa
fcompl
mov
and
xor
jb
pop
int
sub
dec
ficompl
add
adc
js
test
insl
out
pop
xorl
jo
jg
out
loopne
rcrl
les
dec
mov
outsl
jmp
addr16
cltd
mov
jnp
xor
pop
mov
into
jno
jecxz
lods
cmp
nop
fsts
negl
das
decl
pop
push
leave
stos
std
jg
orb
add
pop
stc
imulb
ror
and
jg
ss
adc
enter
outsl
or
mov
ret
cmp
sub
dec
outsl
and
cmp
incb
icebp
jns
pop
ja
pop
les
mov
inc
daa
inc
idivl
cmp
sub
js
xor
das
adc
int
inc
jge
fcoms
jmp
icebp
clc
cltd
cltd
jp
cmc
out
lret
jmp
pusha
mov
roll
sub
xor
cmp
ljmp
or
sbbb
pop
mull
add
cmp
push
hlt
insb
jp
inc
imul
dec
stos
xor
or
bound
std
jno
cltd
inc
pop
ds
movsl
testb
ds
push
sub
repz
movsb
cmp
clc
mov
sarl
mov
pop
sarb
data16
push
aam
aam
push
dec
dec
lea
icebp
sub
fdivl
test
adc
es
dec
lret
adc
aad
pop
mov
mov
movsl
jle
push
leave
pop
sub
sbb
loopne
imul
fcoms
cltd
ret
mov
mov
insb
cmp
adc
and
push
mov
inc
in
nop
pop
adc
cmpsl
rolb
xor
inc
lcall
cs
push
decl
jle
jle
and
in
mov
cmpsl
jl
fbld
sub
addr16
mov
stos
fs
mov
mov
mov
or
jns
fcomip
push
jle
out
push
mov
jg
push
push
or
mov
cmp
cld
nop
pushf
jnp
out
loopne
xlat
dec
xor
jnp
clc
repz
xchg
inc
mov
mov
nop
sar
std
daa
xchg
push
and
je
push
or
or
and
lock
pop
pushf
aas
pop
pusha
out
push
out
mov
jp
call
loop
int
pop
and
daa
jge
add
and
cltd
cltd
movsl
mov
sti
imul
popf
sbb
inc
inc
jnp
mov
push
daa
das
stos
test
pop
popf
dec
les
nop
pop
pop
mov
add
jne
es
mov
adc
mov
or
js
clc
xchg
fs
push
mov
jp
jo
jbe
jg
lds
mov
fcoml
inc
sub
sbb
data16
rol
nop
xor
bound
mov
js
adc
xchg
dec
sub
repnz
sbb
mov
sub
adcb
movsb
jg
mov
jbe
in
into
movsb
andl
dec
out
repnz
movsb
fstps
ljmp
add
mov
nop
fstpt
inc
in
inc
jle
cmp
dec
dec
test
adc
sub
aad
jbe
inc
pop
pusha
rcr
and
cmpb
cmp
cmp
dec
cmp
leave
jnp
pmaxub
xchg
lret
cld
aad
call
push
sbb
dec
int3
xchg
add
scas
call
pop
mov
sub
arpl
mov
sbb
popf
test
jno
mov
dec
ret
test
scas
push
repz
lret
push
sahf
orb
mov
add
ret
or
pop
add
pop
pop
rcrb
lods
push
imul
les
cmp
imul
mov
shl
les
scas
cmp
shlb
push
sub
outsl
jno
jb
popa
jl
cmpsl
mov
in
sub
aas
inc
mov
xor
ss
pusha
jmp
sbb
sbb
cmp
mov
dec
dec
xchg
sub
pop
ret
imul
push
mov
xchg
ucomiss
repz
push
ja
xchg
cmp
push
addr16
mov
push
stos
sub
cmp
movl
les
pop
aad
lods
push
adc
cmp
add
in
dec
sbbl
jbe
clc
test
stc
les
adc
repnz
pop
push
lods
add
xor
mov
xor
int3
cld
aaa
mov
pop
jp
and
xchg
cmp
popf
aad
push
mov
in
jb
les
jb
lds
iret
out
and
jo
in
jne
sub
cli
cmpb
iret
aaa
es
cmp
and
mov
jle
sbb
les
int
inc
icebp
mov
cmc
pop
mov
adcl
push
mov
lock
push
mov
subb
stos
sbb
add
xchg
test
mov
pop
int3
ret
popa
sbb
out
lds
jns
jbe
xor
or
imul
inc
pop
outsl
in
outsb
faddl
pop
icebp
sbb
add
mov
cmp
std
cli
das
scas
mov
scas
and
aam
es
bts
push
inc
and
or
into
les
lcall
sub
mul
jmp
push
fdivl
inc
sub
dec
pop
cwtl
fcmovbe
and
jno
in
jmp
mov
add
daa
or
cmpsb
ja
call
jg
jle
adc
pop
insb
pop
xchg
loop
adc
test
push
mov
jle
sub
test
out
cltd
mov
fcomps
sbb
xchg
add
xor
pop
shrl
adcb
shll
jnp
inc
mov
pop
clc
cmp
out
push
push
scas
sbb
sbb
stos
inc
or
dec
mov
int3
pop
inc
mov
out
mov
mov
je
stos
aaa
add
stos
pop
out
mov
jb
dec
pop
xor
xor
rcrb
mov
test
add
sbb
lods
cmpsb
adc
mov
sbb
in
mov
xchg
loop
mov
repz
xchg
xchg
scas
mov
lret
sahf
sub
lret
int
lahf
cld
addr16
cmp
mov
mov
incb
push
jecxz
sbb
mov
dec
in
out
scas
push
testb
push
outsb
inc
shll
jecxz
fdivl
cmp
js
pop
adc
or
call
xor
or
adc
daa
call
jle
xchg
sub
mov
push
out
add
or
sbb
and
jb
mov
xlat
scas
pop
or
cmp
testl
leave
dec
repz
movsl
aas
pop
jbe
pusha
mov
mov
adc
pop
dec
ja
cmp
into
repnz
jle
aas
inc
inc
xor
ucomiss
mov
and
outsb
jge
dec
sub
or
dec
xchg
cmpsb
xlat
mov
roll
mov
push
xor
fadds
xorl
out
inc
aas
movsb
and
in
data16
adc
mov
insl
or
int
fisubl
push
dec
xchg
sti
dec
rcl
adc
imul
rcrl
mov
ljmp
rolb
adc
pop
xchg
mov
jecxz
std
lahf
mov
pop
pop
aam
jge
rorl
inc
jmp
mov
stos
add
ret
push
js
mov
push
xchg
lret
mov
cwtl
arpl
dec
inc
pop
sti
arpl
jmp
inc
mov
es
or
push
cli
cmc
cltd
stc
ret
mov
pusha
iret
cmpsb
add
adc
clc
lahf
addl
std
add
mov
inc
iret
mov
sub
in
inc
lock
ficomps
sbb
push
icebp
sbb
push
imul
inc
jl
jge
mov
push
ja
lcall
or
dec
xchg
push
cmp
add
repnz
ljmp
add
fdivrl
outsl
ret
push
mov
aas
cmp
divb
sti
mov
cwtl
int3
in
push
aaa
mov
add
fwait
dec
jae
divl
shll
outsl
xchg
dec
scas
xor
fwait
xor
repnz
out
icebp
rclb
or
and
outsl
xchg
sub
mov
or
mov
sub
std
enter
rolb
pop
pop
test
fnsave
lds
mov
lcall
add
push
aad
jl
dec
nop
dec
loopne
mov
in
and
sbb
adcb
sbb
pop
cmovno
xchg
and
jbe
sarb
push
outsl
mov
push
sbb
cmpsb
dec
pop
sub
loop
xor
fsubs
sbb
mov
adc
add
jg
dec
push
xlat
pop
mov
pop
pop
mov
jb
mov
ret
mov
adc
mov
out
jae
add
push
mov
jae
or
cmc
aad
ret
mov
roll
add
push
add
pop
jnp
sub
xchg
inc
fsub
les
adc
jp
mov
cmc
jmp
sbb
aas
in
mov
dec
pop
insl
xchg
inc
pop
imul
fsubrp
pop
dec
scas
nop
xchg
bnd
aad
in
sahf
sub
adc
cwtl
mov
mov
push
mov
cmp
pusha
mov
addb
test
cmp
jg
pop
iret
inc
js
popa
push
mov
pop
push
jbe
rcl
cli
ja
int
push
adc
adc
inc
and
lds
jg
and
mov
jae
mov
jbe
push
aam
inc
or
cmp
outsl
mov
das
dec
sarb
dec
shl
xchg
xor
dec
adcl
ret
ljmp
xor
sbb
and
and
push
jl
add
xchg
pop
mov
lahf
pop
enter
fs
dec
lret
xchg
mov
mov
xchg
xchg
loop
jl
adc
jg
movsb
adc
jb
lods
int
mov
insb
out
pop
dec
or
push
es
icebp
ror
inc
xchg
pushf
mov
adcb
fwait
xchg
pop
movsl
jl
mov
in
ljmp
or
ljmp
scas
adc
test
mov
clc
jno
out
test
mov
lcall
push
lahf
andl
jge
repnz
mov
mov
jl
mov
mov
xor
stc
not
lret
pusha
push
ss
dec
aad
jl
and
xchg
popf
mov
xchg
jno
mov
and
mov
repz
fwait
pop
and
int3
imul
mov
xchg
mov
cwtl
sahf
jb,pt
inc
cld
cmp
cltd
test
add
jo
push
cld
sbb
xchg
lods
xlat
filds
fnstcw
stos
push
fstpl
lods
les
je
stos
ss
stos
push
pop
in
aas
inc
or
pop
dec
mov
mov
mov
daa
insl
aaa
cmpsl
sbb
jge
int
leave
std
call
icebp
int3
jg
scas
sbb
movsb
mov
jecxz
stc
pusha
mov
push
fstps
xor
mov
movsb
or
inc
sbb
push
mov
push
xchg
add
jp
jbe
sarl
jg
insb
cwtl
jg
cmp
cmpsb
shll
ret
lea
push
popa
aad
into
es
sub
pop
push
or
pop
in
mov
xchg
call
jp
mov
and
jbe
mov
adc
xchg
add
mov
pop
mov
out
sti
negb
adc
mov
cmp
sub
int
cmp
pusha
fidivrl
inc
in
or
out
mov
in
mov
aam
or
xor
stos
inc
in
pop
push
inc
aaa
inc
xchg
cmp
push
sbb
dec
jno,pt
mov
sub
out
push
and
push
fcoml
lods
pop
rol
or
pop
xchg
push
mov
mov
cmpsb
or
pushf
pop
test
mov
rol
scas
popf
sbb
loop
add
inc
nop
and
and
shlb
xor
lcall
addr16
lock
hlt
and
outsl
ja
clc
pop
pop
inc
sbb
sub
jle
ja
cmp
leave
movsb
test
push
mov
jmp
pushf
jno
sti
dec
jl
fwait
sahf
popf
in
push
int3
inc
xchg
sub
add
pop
mov
stos
push
movsb
add
ret
fsubr
dec
mov
mov
push
loope
divl
mov
cs
pmaxub
sbb
inc
pop
in
or
sub
or
pop
jae
gs
int
pusha
adc
inc
or
xchg
cmp
cltd
leave
jle
inc
int3
jae
push
mov
repz
push
cmp
cmp
sbb
sub
inc
imul
mov
loopne
push
mov
mov
lods
mov
les
adc
mov
adc
dec
sbb
lods
mov
adc
jns
fwait
je
jae
mov
iret
nop
aam
adc
rep
icebp
jns
xchg
icebp
popl
addr16
sub
ljmp
xchg
push
sahf
push
imul
cli
push
in
ljmp
pop
jl
adc
jg
imul
cli
rclb
test
ds
testb
push
cmp
cs
fsubrl
push
dec
jbe
push
pop
or
mov
fistpl
cmp
push
in
adc
dec
hlt
mov
rcrb
pop
jnp
scas
push
push
mov
jo
fidivl
xor
les
jecxz
and
xor
sbb
adc
js
sbbl
adc
sub
clc
mov
jno
xchg
incb
movsb
inc
fwait
jg
sbb
push
dec
cli
jecxz
rcl
imul
cwtl
pushf
cmp
insl
fdivs
fdivp
add
jmp
sub
sar
pop
inc
push
sbb
je
cmp
sub
mov
sub
push
sbb
xchg
dec
mov
mov
repnz
sub
and
jp
push
jle,pn
cmc
sbb
cmpsl
mov
push
stos
mov
int3
notl
xor
mov
mov
inc
addr16
jg
push
out
mov
jb
cld
out
pop
cmc
mov
or
sarl
aad
sbb
add
cmp
jge
pop
ret
addr16
imulb
test
cmc
mov
lds
cmpl
cli
test
cli
mov
mov
into
fildl
cmp
call
push
mov
push
cwtl
sbbl
jg
dec
lret
pusha
jle
push
xor
jmp
sub
dec
xchg
add
fwait
loope
fmuls
mov
scas
xchg
out
xchg
mov
popf
xchg
out
mov
inc
xchg
jmp
add
xchg
xchg
out
enter
adc
mov
gs
mulb
mov
lahf
fiadds
jg
or
xor
and
fsubl
jmp
pop
inc
ljmp
jg
ljmp
imul
repnz
mov
lret
inc
aas
repnz
mov
insl
leave
mov
loop
xchg
inc
mov
sub
out
push
movsl
push
ret
lock
add
das
mov
shlb
xor
mov
mov
pop
adc
mov
repz
cs
out
arpl
movl
out
pop
adc
clc
icebp
es
inc
add
xchg
xor
mov
add
out
push
sbb
sub
push
aas
out
jno
push
push
or
std
ret
ficompl
gs
mov
cld
sti
test
and
jns
lret
gs
in
pop
ficoml
je
mov
push
mov
sbb
lret
ds
sbb
dec
outsb
jp
mov
add
and
pop
sub
mov
inc
push
inc
sbb
in
nop
movsl
inc
add
es
bsr
dec
mov
xchg
sub
inc
test
jecxz
out
pop
sbb
rclb
mov
lret
add
sti
cmpsl
jg
dec
mov
xchg
aas
xor
enter
push
idivl
dec
scas
addr16
stos
clc
repz
push
xor
inc
xor
lcall
dec
pop
add
test
or
adc
add
subb
dec
and
push
pop
fsubrs
pusha
push
push
push
rcl
mov
xchg
sar
dec
inc
add
cmp
hlt
dec
mov
mov
movsl
inc
mov
inc
call
push
js
mov
out
stc
ficompl
xor
adc
inc
or
xor
addb
push
into
aas
dec
fsubrp
push
and
fwait
push
mov
jo
cs
mov
scas
sbb
or
lock
inc
mov
mov
mov
movsl
lret
lret
jae
sub
mov
inc
lret
push
xchg
pop
insb
rorw
cli
loopne
inc
test
cli
shrl
add
movsb
scas
dec
sbb
dec
sbb
sarb
bound
decb
mov
fistpll
mov
arpl
popa
stos
cmpsb
inc
push
aas
idivb
outsb
mov
mov
pop
jge
pop
addb
and
xor
daa
xchg
jno
dec
mov
adc
sub
adc
dec
inc
cmpsb
xchg
test
pushf
sbb
adc
out
push
aaa
sbb
xor
popf
sub
sbb
xlat
push
mov
pop
sbb
insl
pop
add
dec
mov
lock
xchg
xchg
cmpl
sbb
mov
inc
loope
inc
sbb
daa
repz
pop
add
xchg
or
insb
jl
ja
push
inc
lret
outsb
aas
int3
jae
fcmovb
les
ficoml
cmp
ljmp
push
movsl
sti
nop
jmp
add
orl
shl
add
inc
xor
repz
push
mov
lret
cmp
pop
push
test
xchg
or
neg
loope
enter
sub
adc
cmc
add
sti
pop
cmp
ljmp
ljmp
pusha
mov
push
test
lea
inc
mov
push
jb
das
popa
lock
shll
insl
pop
pop
arpl
push
pusha
fcmovb
inc
lods
in
sub
push
std
nop
push
and
loopne
dec
icebp
xchg
pop
scas
std
addr16
add
hlt
rolb
rcrb
out
push
adc
dec
push
mov
pop
insb
cmpsl
ja
movsb
inc
xchg
push
jmp
popf
ficompl
xor
das
lods
inc
sub
mov
push
xchg
shl
inc
imul
and
gs
insb
dec
pop
ss
sbb
mov
incl
push
ret
shl
test
aam
add
pop
hlt
mov
add
gs
jl
mov
add
loopne
jmp
add
cmpsl
xchg
out
sbb
outsl
rcr
xchg
pop
xchg
xchg
mov
ljmp
sbb
sbb
and
ret
les
fdivrl
jns
fnsave
mov
lock
movsl
inc
lret
jmp
dec
push
lods
test
aam
dec
xchg
mov
addl
dec
int3
test
int
test
push
mov
int
adc
loope
xor
cmp
jl
fdivp
mov
aad
sbb
das
cwtl
and
cmp
movl
fmuls
adc
aam
mov
sbb
fildll
lea
xchg
fs
adc
inc
mov
dec
leave
lea
cli
and
test
and
testl
hlt
xchg
xchg
out
ret
cltd
cwtl
and
popa
inc
ljmp
fnstcw
mov
add
int
add
ds
pop
frstor
cmp
loopne
inc
sbb
push
mov
mov
loope
outsb
fdivr
mov
hlt
pop
sahf
inc
sbb
fsubr
sub
xorb
add
orb
mov
sbb
insb
cwtl
ret
dec
insb
es
push
jecxz
mov
push
pop
stos
pop
std
inc
xchg
lcall
pop
negl
pushf
mov
mov
mov
aad
cmp
dec
enter
cwtl
imulb
push
add
dec
ds
pop
sbb
popa
fiaddl
ret
or
leave
pop
in
push
xchg
mov
mov
xor
jnp
aas
enter
cltd
out
cmp
mov
cmp
shr
mov
cli
pop
cmp
outsb
fs
jge
loop
sub
jns
jne
lret
pavgb
push
int3
dec
pop
test
insl
sub
fsubp
shlb
into
jnp
mov
add
repz
cwtl
scas
daa
js
push
mov
mov
ret
inc
mov
hlt
push
pushf
ss
fnstcw
loopne
fldt
inc
dec
loope
sar
in
imul
mov
xor
test
ljmp
clc
into
xor
mov
out
xor
inc
cmpsb
leave
out
add
lods
xor
pop
outsl
mov
repz
adc
pop
inc
punpckhbw
push
mov
jb
sbb
add
test
insb
in
inc
pushf
dec
cmp
mov
mov
lret
in
nop
neg
push
jmp
nop
call
fbstp
jle
lret
ret
dec
lods
sbb
mov
mov
shl
inc
push
and
enter
xor
popa
jnp
or
mov
addr16
sti
loope
mov
les
xor
nop
sub
add
push
pop
mov
xchg
int3
mov
mov
sbb
js
push
inc
push
jnp
rcll
movsb
loopne
xor
add
arpl
cmp
cmc
mov
sti
sbb
xor
aad
cmp
enter
add
adc
push
and
rcr
rclb
xor
ret
sub
inc
test
loop
adc
sbbb
fsubr
push
icebp
pop
lock
leave
stos
mov
call
mov
shll
push
outsb
adc
adc
nop
push
mov
mov
stos
mov
dec
scas
int
add
lock
mov
cmc
inc
jge
je
mov
icebp
or
stos
cmp
lods
leave
push
add
pop
push
stos
js
sbb
sub
pop
pop
pop
push
inc
aas
xor
negb
std
mov
and
cld
addr16
test
cltd
cli
daa
imul
mov
pop
aam
shrb
push
add
push
add
out
bound
cli
or
fnsave
inc
loop
hlt
sahf
xlat
incb
push
icebp
mov
or
pop
cs
or
pop
insb
int3
adc
cmpsl
psllw
or
xor
movsb
mov
scas
mov
dec
in
outsb
sbb
dec
xchg
and
add
mov
outsb
cmp
pop
jecxz
in
in
dec
pop
and
iret
or
push
push
mov
sbb
mov
push
ljmp
push
cli
mov
shlb
mov
sarb
dec
rcl
pop
push
sub
push
push
ret
scas
mov
stos
test
es
and
mov
push
sbb
gs
repnz
faddl
stc
pop
in
jbe
cltd
stos
mov
xchg
mov
arpl
mov
sub
jmp
stos
xor
mov
in
pop
sub
leave
xchg
mov
add
pop
mov
inc
out
adc
fucom
pop
and
cli
xor
roll
pushf
test
movsb
ret
out
out
and
fcomip
fxch
add
cmpsl
sub
mov
lret
int
enter
ss
rorb
mov
dec
inc
mov
mov
fnstenv
ja
ret
lods
cmp
aas
push
ret
outsb
pop
jle
jg
sub
pusha
mov
push
xlat
fprem
pop
adc
mov
in
andb
push
xchg
into
xor
sbb
jp
jp
test
insb
and
and
loope
les
loopne
mov
call
add
setle
cltd
jnp
sti
mov
mov
shll
add
orb
xchg
pusha
call
pop
arpl
jp
adc
jecxz
inc
pop
mov
aaa
sub
inc
out
mov
xor
or
rdtsc
fldl
cwtl
pop
ret
push
orb
in
cmp
add
fbstp
inc
ffree
rcrb
cltd
pop
or
int
stc
fs
jne
fisubrl
jbe
pop
cmp
adc
sbbb
stc
pop
xor
scas
mov
adc
mov
add
adc
fiaddl
fists
mov
jmp
test
into
mov
cwtl
xchg
adc
xor
movsl
pop
int3
jns
mulb
ffreep
sbb
mov
mov
push
sbb
sub
jp
lahf
movsl
test
pusha
hlt
xorl
pop
cltd
ljmp
test
repnz
negl
xlat
mov
cs
pushf
jne
xchg
pop
mov
sub
jge
ret
loop
leave
int3
mov
ljmp
push
aam
imul
dec
and
add
into
dec
scas
ja
lods
xchg
and
add
sub
nop
lods
adc
inc
dec
outsb
push
cmpsl
jecxz
add
mov
jl
jnp
xorl
fwait
movsl
hlt
sub
stc
iret
insb
jb
ret
or
sbb
mov
scas
dec
leave
inc
mov
push
mov
xor
lea
xchg
in
add
lds
jo
stos
lods
rcr
adc
in
lcall
and
push
repz
popf
mov
push
adc
je
push
lea
mov
fwait
push
inc
and
scas
ja
shll
mov
cli
push
push
test
imul
mov
sbb
cmpsb
xchg
adc
mov
repz
icebp
mov
cli
in
push
loope
pop
sbb
adc
sbb
es
dec
jecxz
pop
cmp
insl
mov
lock
mov
hlt
mov
aam
clc
mov
insl
mov
pop
rcr
pop
scas
iret
outsb
and
push
mov
adcb
lods
inc
movsb
lock
jb
addl
mov
fisttpll
push
push
lret
iret
popf
jp
sti
fistps
pop
mov
test
pop
and
fbld
lret
nop
enter
xor
xor
dec
pop
dec
xlat
xor
xchg
shlb
xchg
cmp
andl
sbbl
ja
xchg
out
adc
outsl
dec
ud1
or
inc
sbb
into
aas
dec
xor
fsin
aad
sub
add
scas
fs
icebp
je
xorl
nop
add
xor
addl
push
mov
mov
jnp
mov
or
pop
incb
jbe
xor
cmpsl
and
in
std
mov
xchg
mov
sbb
xor
xchg
mov
jb
adcl
jle
lcall
nop
shrl
outsb
scas
addb
dec
mov
mov
pop
dec
sbb
cmpsb
jecxz
in
cmc
sbb
movsl
icebp
pop
or
out
outsb
cmpsl
mov
mov
outsb
add
push
pop
push
pushf
aad
mov
jg
push
in
nop
cwtl
pop
jmp
lock
mov
push
shl
incb
and
sub
sbb
and
daa
into
loope
pop
dec
add
imul
ss
push
fsubrl
mov
push
add
cld
sbb
inc
jecxz
outsl
cmpsl
sub
add
sub
lds
cmpsl
mov
push
cltd
xchg
outsl
pop
fldenv
and
mov
add
sub
sub
xchg
push
sub
and
sub
ffree
pusha
dec
out
xchg
jne
xor
in
dec
leave
pusha
pusha
xchg
dec
shll
repz
std
lds
pop
xchg
aam
cmp
mov
jb
insl
jae
jg
sub
stc
enter
cmp
cmp
pusha
ja
add
imul
or
insl
sti
sub
vmwrite
push
and
stos
outsl
repnz
xchg
jno
shrl
add
call
mov
lcall
jge
mov
add
lea
xor
xchg
and
push
pusha
test
cltd
add
adc
clc
push
mov
aaa
dec
out
into
add
std
sti
loope
mov
addl
mov
cld
mov
and
out
test
in
add
jle
fdivp
repnz
xchg
pop
aaa
out
or
mov
mov
data16
sub
and
mov
pop
int3
cmp
shlb
hlt
sbb
stos
push
inc
cld
mov
jno
cmp
aas
jmp
push
jb
mov
jne
jg
push
dec
pop
mov
nop
jo
or
mov
push
cmpsb
push
idiv
adcl
mov
loop
and
subl
xchg
sub
jae
popa
mov
xchg
push
in
call
mov
fsubrl
ljmp
insb
and
adc
mov
lods
pop
in
add
cmp
mov
aas
inc
dec
imul
out
mov
dec
xor
ret
xor
push
ret
jbe
loopne
imul
loopne
adc
pop
mov
cmp
lea
js
pop
fdivs
mov
jmp
push
mov
inc
xlat
or
jp
jmp
mov
call
pop
mov
fwait
outsb
shlb
inc
xchg
bound
mov
xchg
repz
sbb
outsb
daa
xchg
testb
mov
arpl
sub
xchg
movsl
fstpl
cmp
xor
pop
lds
addb
xchg
inc
cmp
lahf
cmovns
xchg
dec
ljmp
popf
jno
popf
faddl
mov
adc
jbe
push
je
daa
lods
sbb
repz
dec
add
sub
push
mov
outsb
adc
and
mov
push
bound
xchg
xchg
or
xchg
fsubp
mov
pushf
lcall
pop
inc
iret
pop
int
push
pop
adc
pop
mov
adc
adc
mov
shrl
sbb
int
loopne
mov
mov
cmp
stc
pop
insb
clc
mov
sub
imul
mov
dec
call
sbb
jl
and
ret
push
shrl
repz
and
test
inc
add
inc
aaa
in
dec
mov
or
add
jne
dec
dec
mov
loop
jle
pop
fidivrs
push
xlat
call
decb
test
mov
insb
xor
xor
push
cmp
stos
mov
push
pop
jo
pop
mov
lret
mov
lret
dec
cmp
nop
iret
adc
cmp
xlat
and
sahf
sahf
sub
xor
jb
test
xchg
and
sbbb
push
fldcw
mov
sbb
int3
jno
xchg
data16
and
mov
xor
mov
xchg
sbb
and
push
popf
cli
mov
xchg
iret
sarl
rorl
add
repz
cmpsb
scas
sub
decb
sbb
stc
pop
sbb
pop
pop
aam
mov
push
jmp
sub
adc
xchg
imul
pop
pop
sbb
mov
test
lcall
xchg
mov
or
dec
xchg
add
ljmp
test
add
les
test
push
pusha
push
into
lret
sarb
or
sbb
in
les
insb
daa
sar
sarb
out
cmpsl
sbb
outsl
and
adc
mov
pop
shlb
movsl
jmp
les
mov
push
push
test
xchg
ja
xchg
dec
pop
in
in
push
sub
insb
jb
inc
jle
push
or
jg
cli
shrb
pop
jl
jmp
jle
mov
push
out
scas
in
and
daa
adc
push
xor
lds
mov
xchg
aad
mov
or
pop
or
out
loop
jge
imul
daa
mov
inc
jge
and
int3
xor
in
add
fs
mov
fldcw
mov
jg
popa
xchg
cmp
clc
int3
fwait
mov
notb
cltd
dec
lds
mov
enter
aaa
aad
popa
xchg
pop
rorl
mov
icebp
loope
lcall
aam
movsl
push
rcrl
xchg
loope
in
pop
xchg
gs
nop
push
in
out
sub
or
test
cltd
and
dec
js
ss
xchg
cltd
filds
sbb
popa
pop
jg
mov
mov
adc
and
push
mov
call
add
sub
int
push
mov
push
inc
inc
push
adc
int
std
movsl
testl
nop
push
sbb
adc
lods
sbbb
ficoml
xchg
xorl
outsb
jno
mov
dec
call
mov
xor
mov
aas
or
xor
int
jge
fdivs
add
or
jl
aas
addr16
sbb
addr16
in
out
or
push
xchg
sub
aam
jo
dec
call
in
mov
fdivr
pop
orl
xor
add
adc
adc
cmp
bound
int
add
adc
cmpsl
sbb
sti
fstps
aaa
xor
sub
ficoml
mov
mov
ret
push
fisubs
xor
push
jle
pop
cmp
cli
fimuls
pop
mov
rclb
jge
dec
fisubrs
lea
mov
test
dec
jp
xchg
dec
or
xor
pop
fs
jbe
scas
pop
push
shll
enter
lds
add
movsb
or
push
push
aaa
dec
imul
xchg
out
add
dec
jb
mov
in
sub
inc
push
jge
adcb
fs
pop
xchg
mov
jmp
mov
push
add
sahf
pop
mov
pop
pop
dec
test
mov
inc
cs
sbb
out
mov
push
mulb
dec
aas
je
cld
dec
cli
jne
repz
leave
test
sarb
inc
push
iret
cmc
pop
ret
mov
add
sbb
push
out
shrb
and
pusha
xor
dec
rcrl
cli
repz
shll
cmpsl
js
lods
ljmp
dec
mul
push
sub
cmp
test
push
adc
loope
jo
popa
jmp
cli
and
jnp
int
mov
popa
frstor
cmc
push
shrl
xchg
in
xor
add
js
sbb
mov
enter
addr16
rorb
push
xor
cmp
mov
pop
rcll
insl
xor
andb
test
add
aam
pop
fs
and
and
mov
nop
xchg
push
cmp
mov
or
xchg
xchg
push
mov
sahf
stos
movsl
push
pop
jo
mov
jnp
pop
mov
lods
sub
je
dec
xchg
push
dec
sub
addr16
aas
push
jo
or
or
incb
and
sarl
or
mov
pop
cmp
push
test
pop
call
cs
repnz
and
pop
jbe
scas
fbstp
mov
jecxz
and
inc
mov
in
ja
dec
pop
lock
mov
mov
add
leave
sbb
push
adc
das
enter
popf
mov
inc
int3
pop
pop
dec
jecxz
dec
push
adc
imul
xchg
push
jb
movsl
xor
and
mov
out
mov
iret
xchg
sbb
inc
mov
aad
inc
push
stos
cwtl
jnp
pop
ret
outsl
or
lds
xchg
rolb
adc
cltd
clc
mov
das
cs
pusha
inc
aam
lea
dec
stc
dec
sbb
mov
dec
and
ja
jle
jg
xchg
in
aaa
movsl
sbb
daa
cwtl
ss
push
mov
iret
aad
adc
shrb
jns
outsl
shlb
into
inc
sbb
lret
int
pop
mov
jb
subl
int
push
xchg
shl
push
push
daa
mov
mov
cmp
and
mov
pop
xchg
mov
hlt
add
call
rdrand
ss
enter
push
test
inc
dec
push
sbbl
pop
jns
lret
or
in
ljmp
in
cmc
pop
ret
aam
push
out
push
imul
sbb
ja
in
xchg
sub
shrb
and
out
mov
and
sbb
mov
aaa
mov
cmc
cltd
mov
mov
sar
xchg
and
cli
sbb
mov
movsb
test
pop
jae
cmp
mov
in
sbb
stos
aad
fadd
xchg
insb
aaa
add
xlat
addr16
inc
insb
mov
pop
in
jge
stos
inc
es
test
sub
cmp
mov
cwtl
arpl
push
push
mov
into
jp
dec
jecxz
mov
jp
aas
stc
loopne
fldenv
lcall
ror
adc
mov
aaa
xchg
repz
sbb
adc
ficoml
leave
cmp
or
das
enter
es
cs
lcall
pop
das
jl
xor
lahf
and
call
ss
addl
mov
enter
int3
mov
xchg
pop
les
sti
lods
add
mov
dec
and
ds
stc
daa
fimuls
push
xchg
add
lret
cmpsb
jne
mov
mov
cwtl
or
adc
sbb
out
dec
ss
push
nop
jp
imulb
fistpl
and
movsl
add
lcall
sbb
enter
lret
arpl
ss
dec
movsl
subb
inc
mov
loopne
cmpsb
lock
sbb
lahf
lods
divb
into
xchg
aad
popa
cltd
rol
movsb
leave
iret
stos
fisubrs
cmp
movsl
in
mov
jecxz
lahf
sbb
sbb
push
fisttpl
out
mov
popf
push
mov
cwtl
sarl
dec
test
sbb
xor
cvtpi2ps
les
xchg
add
inc
cmp
sar
arpl
lods
ds
lcall
cs
sub
push
adc
cmp
pop
jnp
scas
sub
xor
jecxz
or
adc
push
es
in
test
stos
inc
xchg
cwtl
jo
pop
clc
xchg
test
shlb
jnp
call
xor
or
push
js
enter
je
mov
int
inc
das
push
mov
push
push
ja
jno
cmp
push
sub
xorb
int
cmp
sub
js
pop
call
or
sti
ja
dec
jne
push
cmp
xchg
push
push
mov
ljmp
pop
xor
movaps
divl
adc
push
jno
fs
push
sub
imul
lods
cmp
inc
mov
inc
pop
lock
inc
cmp
jl
es
popa
imul
and
xchg
shll
mov
mov
je
jbe
scas
push
jns
pop
negl
ret
lods
xor
add
daa
sub
mov
pop
test
sub
ss
je
cwtl
pushf
fs
mov
or
inc
inc
inc
push
aas
pop
mov
sbb
scas
pusha
pusha
popf
jecxz
sbb
mov
aad
bswap
int
push
popa
inc
xor
sub
push
lahf
sbb
out
imul
sarl
mov
stc
inc
inc
jne
push
out
add
inc
sbb
pop
rorb
jmp
or
push
mov
or
jle
mov
std
xlat
jle
subb
testl
outsl
jge
cmp
and
test
fs
add
inc
mov
and
hlt
jge
rolb
pop
rclb
sarb
test
or
mov
cmp
repnz
mov
xchg
das
cmpsl
add
cltd
arpl
cs
xchg
push
mov
pop
inc
lods
arpl
in
dec
mov
insl
pop
push
cli
xlat
inc
push
fcoms
in
orl
dec
outsl
imul
arpl
mov
test
jl
inc
mov
inc
jecxz
jg
mov
test
pop
fstpl
lahf
in
push
xchg
mov
mov
rcrb
push
fsub
push
cmpsb
xchg
push
or
and
loopne
js
ret
ja
mov
gs
mov
sub
shll
fsts
pop
iret
pop
jp
sub
adc
clc
mov
adc
dec
or
sti
aas
pop
pushl
adc
into
push
insb
shrl
fsubrl
out
push
push
stos
into
cwtl
and
or
stos
inc
test
push
add
test
xor
mov
and
scas
or
outsl
adc
inc
mov
popa
into
mov
pop
das
aam
repz
movsb
dec
imul
xchg
add
mov
xor
dec
jns
adc
nop
adc
jge
jo
mov
adc
call
loopne
loop
push
stc
cs
pop
jecxz
sti
out
ljmp
add
cli
add
xor
cltd
xor
pop
lret
mov
inc
jo
stc
add
out
bound
jecxz
leave
rorb
ds
sub
shl
pop
xchg
push
out
loop
cmpsb
out
into
shr
loopne
jle
dec
jb
xor
cmp
pop
pop
add
push
jne
lock
or
add
xchg
shlb
fdivl
scas
xlat
daa
addb
xor
jae
aad
mov
jns
fildl
mov
xlat
rcrl
shlb
jg
aam
sub
scas
adc
into
mov
out
inc
mov
lock
outsb
add
jmp
cltd
sarb
out
xlat
adc
imul
ss
jp
or
adc
pop
mov
add
adc
jo
xchg
test
in
outsb
aad
xor
shlb
test
xchg
or
sbb
cmp
mov
cmp
les
test
mov
mov
loop
jnp
orl
negl
and
ret
in
in
cwtl
sub
pop
jns
dec
push
mov
and
push
imul
test
or
test
pop
sbb
push
cltd
mov
pop
pop
les
and
dec
pop
and
hlt
lods
push
test
call
sbb
mov
lret
out
cmp
push
aas
int3
jg
pop
mov
mov
and
xor
out
das
push
sbb
mov
pop
int
pop
sahf
stos
pop
jbe
out
inc
mov
popf
insl
sbb
or
mov
ret
lock
ret
pop
int
lret
inc
cmp
dec
cmp
and
sarl
lea
cmpl
cmc
stos
inc
cmpsb
xchg
sub
pop
xor
sbb
jne
add
fs
sarl
mov
daa
jne
jle
ljmp
rolb
pop
negb
stc
and
jnp
inc
xor
in
jp
fdivrl
adc
rol
add
jne
push
aad
pop
jb
jg
lods
arpl
push
xchg
pop
ja
ret
sti
stos
fisubl
pop
hlt
lods
cmc
aam
mov
push
subb
dec
or
outsb
inc
es
roll
mov
je
cmp
ss
das
adc
fsts
push
or
rcll
in
jb
not
pop
cmp
aaa
jns
das
jge
ret
outsl
out
mov
pop
and
lds
push
test
popf
xchg
les
cmpsl
fcmovnbe
pop
xchg
dec
xor
in
jno
xor
sbb
lds
sub
xor
scas
divb
in
sbb
lods
mov
jns
decl
push
insl
decb
sub
cmc
test
in
jp
out
cmp
fnsetpm(287
pusha
into
cmp
push
mov
test
inc
cld
test
or
je
movsb
shlb
push
mov
sub
gs
stos
int
jecxz
stos
jbe
jmp
rolb
repz
mov
cmpsl
inc
xchg
add
aam
les
arpl
push
dec
and
stos
rcrl
aad
sub
sbbb
xor
negb
pop
repnz
les
sub
arpl
idiv
xor
ror
sbb
rcl
decb
and
and
mov
je
push
call
rorb
push
stos
push
push
sahf
mov
mov
jne
cmpsb
addr16
or
add
add
ret
sbb
ror
int3
aas
dec
jmp
jb
ja
call
pusha
push
mov
jp
xchg
push
xchg
dec
std
or
jge
iret
add
add
pop
sbb
movsl
pusha
je
sub
stos
aaa
gs
adc
push
xor
mov
dec
dec
push
or
cs
dec
adc
roll
rcll
sub
inc
arpl
mov
sahf
inc
add
je
lahf
iret
jp
ds
mov
push
outsl
ljmp
popf
insb
add
xchg
xchg
mov
outsl
mov
pushw
and
popa
mov
mov
jp
push
mov
mov
hlt
hlt
addb
mov
pop
gs
notb
negb
fwait
rcl
rorl
pushf
daa
sti
push
rorb
repz
and
push
fimull
call
and
jno
sbb
sahf
pop
ret
cmp
call
xchg
mov
test
ds
adc
enter
pushf
bound
and
fistps
xor
enter
jge
addb
xlat
daa
testb
and
xchg
in
rorb
mov
or
in
fs
bound
fcomps
adc
jo
inc
mov
xchg
test
sbb
mov
dec
das
adc
lock
mov
or
cld
test
fadd
pop
lcall
push
inc
xchg
push
dec
adc
mov
addr16
or
fxtract
stc
mov
xor
aam
negl
outsb
les
cld
cmp
dec
dec
sbb
or
fwait
sbb
popf
mov
pop
or
mov
or
jo
fwait
or
xor
xchg
aad
outsl
call
push
mov
jne
xchg
imul
pop
leave
je
add
pop
test
je
or
xchg
jnp
addl
adc
rorb
out
or
xchg
and
insl
sbb
add
std
scas
in
push
mov
leave
movsb
add
or
jle
int3
xchg
pop
xor
and
mov
fiaddl
push
xor
push
push
cmp
movsl
dec
or
icebp
roll
mov
add
adc
push
cmp
pop
push
dec
cmp
in
ret
int3
sbb
inc
mov
mov
sub
mov
shrl
std
fucomi
adc
imull
mov
mov
or
mov
cmpsl
and
xchg
xor
and
movsb
and
sbb
xor
add
mov
push
enter
pop
mov
aas
ret
gs
adc
push
daa
call
subl
icebp
inc
jae
call
inc
push
jmp
jp
movsl
out
mov
jle
sub
lret
cs
les
mov
or
mov
mov
call
ficomps
out
xchg
xlat
dec
dec
mov
gs
add
pushf
inc
xchg
pop
dec
popa
push
inc
inc
adc
loopne
and
sbb
or
pop
int3
xor
xchg
or
xorb
lods
lds
adc
shrb
fdiv
repz
ret
addr16
add
stos
inc
cmp
gs
dec
lods
fsubl
and
mov
aad
add
xor
insb
test
loopne
pushf
push
dec
pop
stos
add
mov
mov
mov
sbb
stos
mov
push
mov
sahf
and
pop
idivb
jns
sub
mov
xchg
cmp
hlt
jmp
jg,pn
dec
mov
out
cwtl
fs
jbe
rorb
lcall
aaa
inc
xor
outsb
cmp
sub
es
cld
das
test
or
pop
test
inc
push
push
add
adc
popf
negl
repz
mov
adc
jns
imul
or
add
cmpsb
xchg
hlt
fsubrs
out
dec
mov
test
push
pop
inc
push
bound
sbb
jno
lretw
mov
in
dec
jb
stos
xlat
fdivl
nop
jae
outsb
stos
mov
dec
sbb
lret
inc
repnz
mov
fdivs
cmpsl
mov
retw
das
pop
lods
insb
cmp
push
cmp
fsub
loopne
jnp
mov
es
push
lock
sbb
jmp
dec
cld
daa
or
sbb
sbbb
call
xchg
jecxz
aam
sarl
push
and
data16
xchg
pop
test
lcall
enter
pop
clc
aas
enter
jmp
cmp
push
jecxz
popa
int3
idivb
dec
xor
mov
mov
mov
push
or
hlt
cmc
aad
mov
mov
rol
cmp
xor
pop
lahf
mov
stc
sbb
mov
pop
popa
xchg
fimull
movsb
je
inc
and
inc
cmp
xchg
shlb
cmp
sti
jmp
jb
jno
dec
mov
cmpsb
add
sahf
pop
sti
lds
outsl
test
iret
sbb
je
xchg
call
jae
sbb
dec
jle
lock
inc
mov
mov
in
out
add
adc
int3
adc
sub
adc
xor
and
fwait
pop
loopne
add
pop
rclb
dec
pop
add
mov
mov
adc
out
xchg
int3
es
fsubs
daa
enter
lcall
mov
es
rclb
fdivl
mov
add
shlb
inc
jo
xor
pop
and
popf
lods
mov
mov
jne
and
xchg
sub
xor
ss
daa
inc
ret
cmp
fisttps
add
mov
sbb
fwait
pop
sbb
mull
xchg
push
sbb
push
cmp
movsl
xor
jecxz
xor
js
in
cmp
fcompl
mov
das
dec
add
addr16
stos
xchg
push
dec
lods
jo
cmp
gs
test
jo
rcr
fs
sbb
int3
movsl
std
dec
adc
mov
hlt
push
dec
insb
add
jb
xor
mov
cmp
out
pop
movsb
mov
pop
xchg
mov
sbb
mov
adc
push
mov
in
sti
sbb
jae
sti
fidivl
lcall
leave
cmp
sub
and
in
dec
in
mov
or
out
add
sub
dec
movsl
cmp
and
add
pop
push
inc
or
popf
stos
cmpsb
pop
lret
jnp
pushf
test
std
inc
cmp
fxch
enter
in
mov
icebp
xchg
sbb
mov
xchg
and
repz
daa
fnstenv
xor
subl
xor
mov
inc
or
pop
mov
dec
fnsave
sub
xor
adc
add
xor
daa
inc
in
ds
fsts
and
rolb
inc
xor
pop
dec
and
lods
sub
jne
imul
mov
test
outsb
fidivl
loope
out
shll
test
imul
mov
dec
xchg
or
xchg
xlat
jbe
jb
hlt
add
mov
mov
js
lret
pop
sbb
dec
bound
js
push
mov
and
repnz
xchg
fldt
popw
aad
push
test
fsub
dec
jne
jp
loopne
push
mov
add
sti
adc
mov
push
push
jmp
rcrb
mov
cmpsb
imul
push
rorb
jae
sbb
jno
cmp
out
loope
sti
lcall
xchg
jnp
andl
in
or
stc
arpl
aas
imul
das
cmp
shl
mov
pop
stos
scas
bound
inc
adc
iret
fs
fldcw
sub
pushf
sub
imulb
mov
xlat
cld
xchg
push
lock
scas
gs
jecxz
sub
xor
xchg
cmpsl
lcall
mov
aas
add
dec
dec
inc
xchg
repnz
rcl
arpl
push
roll
push
aad
stos
sbb
or
inc
sub
sub
mov
push
push
popa
mov
test
jmp
mov
xor
ficoml
cmp
mov
mov
je
movsl
inc
hlt
movl
sbb
push
pop
int
rorl
ss
movsl
popf
mov
sub
sub
fld1
aas
inc
hlt
js
out
mov
ret
rolb
jmp
inc
and
pusha
pop
dec
add
popa
cmp
scas
imul
movsb
cmp
sbb
push
add
dec
iret
mov
daa
pop
in
mov
xchg
ja
arpl
vmovapd
divb
inc
shrb
cs
jge
dec
mov
jmp
dec
movsl
add
sub
mov
lock
and
dec
pushl
ret
movaps
out
xchg
add
in
cmpsl
xchg
sbbl
in
mov
and
and
insb
repnz
das
movsb
inc
out
lcall
loop
sub
mov
adc
rclb
out
and
imul
insl
push
mov
inc
jp
cmpsb
lds
lods
pop
add
xor
es
out
addr16
loope
lret
insb
cmpsb
loop
stos
xor
sahf
push
or
arpl
aad
inc
xor
addr16
cmp
dec
cli
jb
jmp
inc
aad
and
ficompl
adc
filds
add
or
loop
lods
push
xchg
movlhps
loop
fdivrp
je
cwtl
mov
out
or
pushf
add
cli
pop
ja
cmp
xchg
mov
jl
inc
inc
add
or
or
jbe
movaps
into
jl
inc
or
jae
movsl
test
scas
pop
test
sbbb
jb
roll
and
fnstenv
outsl
bound
inc
xor
sbb
dec
shlb
or
pop
mov
add
leave
jge
cmp
scas
cld
ret
and
movsl
adc
and
cltd
call
stc
clc
or
sarb
xchg
cltd
popa
popf
push
dec
pop
das
push
into
xrstors
movsb
adc
out
push
xchg
loopne
xchg
fsubr
int
mov
notb
stos
stc
ret
xor
or
fwait
imulb
aas
js
cmpsb
aam
into
or
jmp
mov
lahf
sub
jo
test
das
hlt
mov
or
pop
xor
pop
rorl
dec
mov
dec
push
test
cmpsb
stos
jno
cmp
xchg
test
stc
inc
mov
jp
inc
shrl
jg
jb
cli
or
ss
test
push
adc
push
mov
subb
into
and
aam
stos
cmp
notb
mov
int3
pop
dec
ss
jg
xchg
pop
into
pop
push
xchg
jae
cmp
mov
adc
lock
xor
add
xchg
xchg
adc
repz
add
sbb
stos
loopne
movsl
test
inc
mov
and
jno
pop
or
inc
dec
mov
pop
in
shrb
jne
push
or
xchg
out
movsl
xchg
push
loope
imul
cmp
sbb
pushl
stos
std
jge
or
or
jno
lds
lock
rcrl
aaa
into
sbb
lods
call
out
push
std
mov
sbb
mov
imull
pop
and
push
jmp
jae
sbb
mov
aas
pop
cmp
std
sub
shlb
std
cmp
xchg
lds
jle
sbb
add
stos
nop
out
aaa
mov
add
shrb
clc
imul
jle
push
mov
sub
shlb
loopne
movb
push
or
mov
mov
dec
jb
xor
insb
notl
dec
iret
es
dec
ret
or
mov
scas
pop
pop
loope
dec
rcrl
cwtl
sbb
mov
and
int
test
push
push
dec
xor
sbb
pop
jbe
add
cmc
daa
cs
inc
or
inc
inc
clc
inc
cmpsb
repnz
ret
xchg
jb
hlt
sub
mov
and
roll
es
dec
push
cmpsl
dec
xor
mov
pop
in
dec
out
sub
push
popa
pop
je
daa
sbb
dec
movsl
adc
dec
jnp
leave
fdivrl
leave
inc
data16
cld
iret
cmp
cmp
add
sbb
into
stos
std
test
sbb
aaa
scas
mov
or
cmpsb
dec
add
xor
xor
les
push
ret
cmp
fisubl
jge
mov
mov
inc
xor
js
shrb
and
fsubrs
xor
inc
dec
fnsave
aad
xor
push
dec
push
dec
andb
dec
je
test
cmp
jl
loopne
aam
jb
int3
enter
xor
cld
sbb
xor
push
jb
fcmove
and
jle
mov
xor
ds
inc
ss
mov
pop
pop
dec
out
clc
mov
addr16
adc
lret
mov
mov
fwait
xlat
nop
hlt
loop
pop
or
push
sbb
xchg
inc
aas
lds
mov
lret
pop
inc
push
ja
adc
pop
xor
cmp
lods
push
mov
mov
push
jb
and
sub
adc
push
pop
pop
fcomip
xor
sarl
insl
ffree
dec
aas
lods
cmp
mov
adc
testl
mov
lret
dec
mov
sbb
fmuls
fiadds
jecxz
cmc
pop
xchg
int3
rcrb
sbb
repnz
adc
fiadds
iret
inc
mov
hlt
notb
fidivrl
into
mov
mov
loope
repnz
clc
xchg
xor
sub
std
adc
dec
aad
fsts
shlb
into
add
pop
xchg
mov
ret
or
xlat
mov
xchg
sbb
mov
ljmp
jae
cmp
push
jae
jb
push
cli
leave
aam
bnd
or
jmp
mov
xchg
push
bound
sti
mov
and
mov
inc
pop
jp
test
push
pushf
ret
fidivl
outsl
lods
popa
fisubs
or
lock
sti
daa
mov
inc
rcll
and
xchg
mov
dec
rcl
cmp
jg
out
mov
jo
mov
rep
pusha
pop
test
fistl
ljmp
std
mov
shl
mov
outsb
sub
nop
xor
jmp
stos
shll
dec
inc
jmp
push
sub
sarl
inc
jne
mull
dec
lret
mov
lock
in
js
mov
or
mov
idivl
scas
or
sub
mov
cmp
shll
pop
jno
push
insl
fiaddl
scas
out
cmp
out
push
push
dec
lock
push
loop
add
push
pusha
push
aaa
mov
cmpsb
or
sub
icebp
mov
xor
xchg
loopne
dec
fsubrl
adc
ss
mov
test
movsb
pop
test
push
cmpsl
cmovbe
dec
pop
mov
stos
dec
xor
js
gs
pop
insb
divl
jae
lods
popf
jl
push
fstl
adc
insl
jbe
fmull
inc
and
in
cli
stos
xchg
xor
fildl
lahf
mov
scas
sub
fs
in
jl
and
fisubrs
in
pushf
shrb
in
inc
jp
sbb
xor
adc
sub
sbb
stc
or
jne
hlt
dec
leave
aam
dec
sub
clc
stc
out
push
pushf
notl
xor
pop
mov
mov
sahf
sbb
lret
aas
test
xor
sbb
inc
sub
sub
xchg
mov
xor
lea
fidivl
cs
or
ss
mov
hlt
scas
pusha
das
iret
test
ret
cmp
insb
add
pop
bnd
add
sti
mov
out
jmp
xlat
popa
aam
aam
dec
sbb
dec
mov
mov
imul
movsl
add
cli
out
mov
insb
fwait
adcb
lods
mov
enter
leave
je
adcb
jnp
pop
xchg
mov
or
add
inc
adc
das
adc
mov
hlt
mov
int3
insl
add
leave
loope
cmp
sbb
add
cmovge
cwtl
mov
rclb
fmuls
mov
sub
iret
mov
sarl
ss
jg
jmp
mov
mov
fnsave
jp
inc
lret
jns
pop
ja
mov
cli
stos
mov
gs
and
mov
cmp
ret
repnz
imul
call
jbe
or
into
imul
lret
xor
loopne
add
pop
or
std
fisubs
ficomps
test
inc
or
imulb
pop
lods
mov
add
mov
adcb
dec
daa
mov
dec
cmpsb
enter
pop
adc
pop
cmpsl
mov
xchg
aas
aad
add
mov
loopne
sbb
jecxz
stos
cmp
fnsave
aad
jno
cmp
gs
dec
fcoml
mov
mov
das
fwait
cmp
or
fwait
insb
imul
repz
cmp
movsl
sbb
mov
imul
and
aam
shrl
xchg
mov
jae
cli
push
jge
std
adc
add
add
shlb
stc
cmp
mov
in
repnz
rcrb
push
je
pop
cmc
jbe
fadd
out
stc
push
int3
cld
xor
cmc
pop
push
stc
jp
xor
addr16
sbb
cwtl
xchg
push
mov
ds
pop
add
xchg
out
cmp
mov
xchg
jne
in
es
pop
imul
rcrb
push
or
rcll
or
les
insl
lods
mov
iret
xor
dec
mov
mov
mov
adc
add
mov
flds
hlt
push
xchg
cmpsb
lcall
loope
mov
js
mov
lock
scas
mov
in
sub
loop
lcall
adc
fwait
mov
add
jno
sub
cmp
pusha
fisubs
cmp
fmuls
mov
xchg
ljmp
into
ret
mov
xor
pop
xchg
loopne
mov
push
sub
mov
testb
push
dec
or
test
lret
mov
push
jo
dec
add
mov
and
int
notl
sbb
dec
ja
or
xchg
daa
mov
mov
loopne
in
sub
add
pop
fstpl
cwtl
jno
test
mov
and
push
outsb
jne
jae
ret
clc
jecxz
jb
subl
sbb
in
cmp
sbb
pop
xchg
sbb
loope
out
das
popa
pushf
imul
andb
and
pusha
clc
std
adc
dec
out
dec
and
into
xchg
test
push
push
rorl
xchg
xchg
xchg
cmc
das
mov
clc
lods
or
dec
and
or
movsb
test
out
mov
stc
and
out
sbb
jo
mov
in
dec
jno
or
loopne
mov
shll
stos
xchg
add
sbb
mov
in
in
and
mov
cmc
sbb
push
andl
rorl
mov
and
push
push
call
xchg
adc
sub
nop
dec
fdivrp
lds
jno
or
dec
cmp
push
iret
push
mov
or
and
adc
jecxz
push
jl
aas
popf
cmp
lods
imul
into
xchg
fisttpl
in
test
adc
cmpsb
iret
cmp
add
sub
cwtl
popa
mov
js
or
push
jae
mov
cs
or
sbb
fldl
cwtl
dec
inc
adc
mov
push
add
adc
add
stc
shrl
add
lods
add
idiv
mov
insl
push
ret
mov
cmp
test
or
ret
in
pop
movsl
push
mov
xchg
hlt
add
pop
cmpsl
cli
mov
and
aas
scas
jno
add
scas
dec
aam
inc
fcmovu
int3
loop
ljmp
push
adc
jb
xlat
insl
and
stos
aas
popf
call
fadds
inc
inc
sbb
pop
or
jg
aam
jbe
push
shll
add
dec
mov
popa
test
push
sub
mov
sub
sti
sub
inc
xchg
xchg
lcall
xor
fisubs
jne
adc
movsl
xchg
jp
or
push
jmp
aas
outsb
mov
xchg
sbb
bound
sub
in
push
and
fcomps
loop
pop
add
mov
fmulp
mov
stos
add
jmp
sbb
or
cmp
or
hlt
fidivrs
and
and
fmulp
shrb
xchg
sbb
loopne
adc
mov
jnp
loop
xorl
gs
mov
pop
in
fldenv
and
mov
push
xchg
mov
jle
sbb
or
iret
mov
pop
sbb
jne
mov
mov
orb
pop
xor
inc
int3
lcall
push
mov
push
xchg
das
pop
jge
jecxz
pop
pop
popf
push
mov
or
call
pusha
aam
loop
add
mov
push
sti
out
hlt
inc
sti
enter
mov
fisttps
iret
popl
push
xchg
inc
dec
add
aad
enter
mov
mov
mov
imul
gs
in
ljmp
push
push
movl
shrb
call
mov
and
cmp
and
dec
popl
std
add
adc
in
jmp
hlt
add
xchg
mov
ds
lea
xor
adc
sbb
rcrb
jecxz
addb
xor
sbb
push
xorb
rcll
and
insl
jp
rcl
in
xlat
lret
mov
and
mov
xor
movsb
dec
mov
pop
ret
sub
jle
scas
xchg
daa
adc
outsl
movsl
fs
fstps
int3
inc
mov
ror
adc
sbb
pop
mov
xor
leave
or
lds
lods
sub
cmpsl
mov
jno
fistps
cmp
scas
jl
lret
out
test
sbb
pop
mov
std
and
adc
es
mov
jae
fwait
and
repnz
rcll
bound
sub
lods
mov
fcomp
test
and
jp
mov
movsb
push
fwait
mov
js
mov
aam
stos
test
mov
test
icebp
repnz
dec
test
or
xor
cmp
jmp
add
push
out
movsb
jp
outsl
push
jne
call
in
testb
add
lds
jne
call
scas
inc
mov
andl
mov
or
or
mov
push
shr
push
js
outsb
jno
cli
pop
aad
add
push
mov
cmp
repz
add
out
sbb
je
pop
ljmp
std
lea
inc
mov
loope
mov
mov
ja
bound
and
mov
pop
jb
cld
push
xchg
sub
fdivrs
repz
aam
mov
fsub
inc
pop
and
lock
xor
test
add
sub
xor
sbb
sub
push
lahf
mov
jne
in
jnp
mov
test
enter
ret
mov
sbb
jmp
mov
fucom
fdivrs
call
mov
add
inc
gs
lahf
cld
sbb
subb
and
mov
xor
add
inc
mov
stos
dec
insb
or
xor
arpl
fucom
jg
and
in
mov
iret
ja
jae
add
xchg
out
cmp
std
sub
mov
rorb
outsl
pop
adcl
jge
movsl
xlat
mov
es
pop
xor
wrmsr
call
fwait
stos
xlat
gs
xchg
sbb
mov
sbb
sbb
scas
cmp
mov
lock
adc
adc
sub
in
dec
lahf
js
cmp
jl
rclb
xchg
out
and
pop
pop
je
cmpsl
adc
gs
xchg
mov
orb
cmp
mov
imul
add
fbld
nop
cmp
dec
cmp
into
popa
mov
aad
jo
subb
dec
sub
pop
fistpll
rolb
mov
adc
lods
dec
xchg
cmc
outsl
xchg
lock
aam
movsb
mov
lret
lahf
in
pop
add
fst
inc
mov
and
mov
lcall
pop
in
dec
outsl
lret
adc
jecxz
mov
xlat
test
in
pop
stos
xor
or
imul
pop
inc
ss
mov
jno
sbb
sub
jmp
push
xor
cmp
mov
enter
adc
cmp
push
xchg
jge
clc
stos
subb
pop
rcr
adc
or
stc
ror
push
fcomip
subl
sbb
paddusb
jno
dec
xor
pop
push
mov
in
xor
shrb
jg
icebp
cltd
push
stos
adc
loope
shlb
out
insl
sbb
incb
imul
pop
push
inc
int
lret
adc
loope
sti
or
subl
and
and
jnp
ja
mov
xchg
sbb
add
adc
outsb
xchg
pop
in
push
or
insb
test
scas
addb
add
sbb
mov
enter
dec
aad
jmp
aad
leave
ret
cmp
and
jbe
je
cld
fadds
pop
inc
adc
pop
loopne
mov
dec
jns
jg
xor
stos
xor
ljmp
adc
ficomps
fdivrs
xor
shll
push
negb
outsb
lds
lods
and
dec
pop
jge
cmc
lret
mov
mov
mov
rolb
and
mov
mov
push
cmp
ret
mov
loope
adc
sub
or
and
or
mov
and
add
sti
lret
fcom
jge
aas
or
mov
sbb
mov
push
mov
mov
dec
pop
aas
and
xor
jl
jb
andl
push
daa
jmp
in
xor
cmp
mov
pop
xor
dec
xchg
mov
movb
or
popa
aam
mov
dec
sub
jno
daa
lret
add
jmp
je
data16
arpl
xlat
movsl
repz
dec
and
jo
jge
mov
jae
mov
jle
xor
nop
ficompl
cmpsl
mov
sbb
jp
popa
add
test
jmp
pop
xchg
out
pop
pop
inc
xchg
add
push
insl
xchg
shll
inc
cld
jne
or
aam
dec
int
ret
push
mov
jmp
test
lock
pop
test
aam
ret
xchg
xor
gs
outsl
inc
int3
mov
nop
inc
xchg
mov
enter
shrl
sub
mov
imul
lock
popf
and
sbb
add
das
sarb
xchg
jnp
mov
pop
sbb
mov
mov
sub
jo
test
movsl
mov
jmp
add
xchg
push
daa
lea
jecxz
add
sbb
jo
mov
jmp
or
int3
jl
adc
xchg
inc
pop
cmp
in
fists
out
xor
lahf
jb
adc
jbe
out
call
dec
mov
pop
aad
hlt
data16
out
loop
pop
cli
jmp
scas
mov
int
sub
xor
je
mov
jae
movsb
mov
cmp
push
or
add
push
push
in
dec
or
jle
aaa
inc
xchg
xlat
fnstenv
in
dec
decl
in
cs
dec
shl
outsb
data16
aam
pop
cld
mov
sub
outsb
out
jge
sbb
pop
adc
add
or
sbb
gs
rorb
xlat
in
in
adc
xchg
sbb
mov
js
xchg
je
insb
mov
cmp
movsl
sub
stc
add
pop
aaa
xchg
cmc
fsubl
testl
pop
and
push
lahf
dec
sub
pushf
lea
push
pop
mov
xchg
mov
imul
adc
jbe
lock
mov
pushf
cmc
icebp
jae
jnp
xlat
push
jecxz
mov
leave
xor
cmpsb
adc
mov
mov
sbb
in
hlt
and
bound
jne
es
pop
cmp
bound
rcll
test
insb
jne
sbb
xchg
outsb
adc
arpl
fnstenv
jmp
cli
imul
sbb
repz
xor
xor
dec
repz
dec
push
stos
mov
push
mov
add
orb
sarb
imul
xchg
mov
lea
cmpb
mov
mov
mov
imul
out
mov
jne
rolb
sub
or
test
adc
inc
xchg
gs
mov
pop
or
mov
and
sti
mov
out
mov
aam
shll
std
lret
and
lret
add
xorl
mov
sub
sarl
jp
outsb
loopne
incb
mov
fisttpl
xchg
pop
push
insb
cld
jo
dec
jo
sub
aaa
add
ret
mov
cwtl
dec
and
jl
call
lahf
cwtl
notl
movsb
xor
clc
adc
sub
push
jno
fldl
rolb
ds
out
movsb
xlat
sub
cs
imul
lock
mov
mov
mov
jbe
xor
jae
inc
push
push
add
mov
mov
jb
pop
lret
and
xor
dec
shr
rcll
sbb
mov
cs
xor
icebp
in
in
int3
cmp
cwtl
push
inc
shrl
mov
inc
sub
ja
dec
sbb
pop
push
loope
pop
ss
scas
bound
mov
fcmovnbe
inc
and
fwait
cs
sub
dec
add
fcmove
add
icebp
mov
insb
in
enter
sub
fildll
push
movsb
jne
add
and
movsl
aam
in
push
lds
stos
lcall
push
ds
cmpsb
cmp
repz
call
cmc
fmull
mov
fbstp
push
dec
pop
dec
adc
sbb
data16
lret
loope
or
cmp
pusha
fsts
mov
jp
jmp
js
xchg
cli
fisubl
clc
fsts
insb
add
mov
leave
mov
push
enter
cmp
test
mov
jae
cmp
mov
ja
lret
and
in
mov
jae
pop
outsl
mov
cltd
add
faddl
cmp
out
imul
loop
mov
movsl
fwait
jo
int
in
fistpll
pop
jns
and
mov
cmc
add
pop
push
fst
fidivrs
pusha
mov
shlb
xchg
sub
dec
jno
pop
leave
insl
ret
mov
mov
dec
nop
xchg
or
or
jg
jmp
out
add
iret
cmp
es
sub
xchg
nop
push
mov
popa
lret
jl
cmp
xchg
mov
lea
sbb
sarl
lods
stc
push
pop
pop
or
insl
jno
mov
jne
xchg
adc
mov
test
stc
les
push
inc
push
sbb
in
adc
sbb
lret
inc
scas
xchg
or
out
addr16
in
les
cli
sbb
mov
cld
testl
negb
pop
sbb
dec
sbbb
sbb
mov
int
push
mov
pop
mov
push
jl
inc
ds
add
add
mov
cmp
jne
repnz
sahf
cmp
in
push
push
lfs
ret
mov
decl
xchg
std
stos
or
mov
loopne
or
xor
imul
add
test
rclb
icebp
mulps
lcall
adc
ret
and
imul
loopne
mov
xor
jmp
jo
dec
es
fwait
fwait
cmpl
arpl
mov
adc
pop
add
push
hlt
fsubr
xor
push
les
xor
lcall
andl
int
pop
andb
movsb
dec
enter
test
or
sub
cmpsl
repz
mov
mov
test
or
adc
ljmp
cmc
loopne
xor
movsb
add
dec
ss
fwait
iret
pop
shl
mul
cmp
pushf
clc
insb
dec
mov
mov
int3
stc
sub
rcr
add
mov
xchg
outsl
dec
push
pop
ret
jb
xor
jecxz
and
mov
and
xchg
pop
loope
idivb
je
fisubrs
xchg
fsubrl
inc
xchg
and
mov
sbb
test
sbb
shrb
sbb
loope
int
popl
fcmovbe
adc
into
adc
xor
test
sbb
bound
aad
fcomps
loope
pop
mov
cmp
js
lcall
jg
pusha
sub
adc
es
cwtl
fcoml
or
adcl
les
dec
jnp
push
stc
add
lea
call
mov
std
inc
lret
xchg
aaa
xchg
mov
mov
icebp
xchg
dec
sub
push
cmp
cli
mov
loope
adcl
add
fcmove
xchg
mov
push
mov
push
inc
stos
sbb
jge
cmc
mov
mov
adc
or
popf
push
xchg
xlat
imul
mov
sti
and
mov
lock
loop
mov
mov
ret
xchg
in
stc
iret
inc
and
or
loop
int3
push
lret
rcrb
pop
mov
insb
mov
lcall
push
notb
xor
sbb
jg
les
push
jb
lods
sahf
add
and
and
insb
pop
inc
pop
bound
popa
sub
or
loopne
int3
stos
push
repnz
sti
js
inc
and
int3
jl
fnstcw
adcb
mov
dec
cmc
pop
sbb
xor
out
fisubrs
and
sahf
mov
ret
sbb
xchg
dec
aam
push
frstor
xor
mov
or
stos
mov
mov
mov
repnz
cmp
rorl
test
mov
gs
dec
mov
out
sub
jmp
test
push
add
pop
and
mov
imul
cmp
and
mov
mov
adc
dec
jge
sbb
pushf
cmpsb
adc
js
hlt
fsts
add
mov
add
mov
xor
addr16
cli
dec
in
sbb
sarl
mov
jns
push
xchg
cmp
sub
add
les
fbld
inc
outsl
xlat
add
jo
and
xor
xor
mov
or
loope
cmp
cmp
jno
push
jo
mov
ds
scas
dec
adc
notl
mov
and
lea
mov
xchg
push
inc
inc
cmp
mov
add
pop
mov
aam
dec
sub
push
xchg
and
sarl
jmp
ja
xlat
adc
jb
adc
dec
fucomp
jmp
pop
mov
ret
xchg
repnz
mov
xor
adc
mov
sbb
mov
sub
orl
es
fildll
fisubrs
incl
stos
jb
test
lea
and
lods
stc
push
dec
xchg
add
mov
lods
add
je
inc
rorb
in
xor
fnstenv
in
adc
sti
test
push
out
mov
lds
add
lds
std
sbb
mov
mov
insb
or
mov
inc
ss
out
ja
scas
dec
sbb
out
xor
or
pusha
xor
xor
into
outsb
test
jnp
xchg
bndstx
and
repnz
pop
xor
divl
loopne
lret
out
xorb
out
mov
hlt
mov
mov
mov
lret
mov
mov
rcrl
imul
stos
lea
daa
cwtl
jne
fstpl
js
cmc
or
ret
in
cmp
mov
mov
arpl
xchg
adc
pop
rcr
jo
imul
xor
or
sbb
repz
bound
mov
xchg
test
adc
gs
fdivl
mov
sub
inc
pushf
pop
adc
daa
cmp
inc
imul
push
sub
lock
andb
pop
and
enter
xchg
es
mov
sti
js
pop
lcall
shrl
sbb
daa
cltd
fwait
cmp
mov
push
test
mov
mov
lcall
xchg
sub
decb
loopne
rorl
lods
out
fistps
lods
vfrczps
dec
outsb
jl
outsb
ds
xlat
add
ja
stos
lret
arpl
mov
mov
add
js
dec
jecxz
scas
aaa
inc
outsl
in
cmp
xorl
push
sbb
popa
inc
pop
or
not
pop
pop
jle
loop
cwtl
sbb
add
mov
test
xor
pop
sub
out
stc
popa
push
add
std
mov
jnp
pop
lret
mov
pop
mov
and
and
fnstenv
aaa
into
add
aaa
sub
ja
dec
call
lods
dec
inc
lods
imul
mov
lea
insl
mov
add
subl
clc
dec
push
outsl
enter
xchg
div
aaa
into
enter
call
jbe
xchg
pop
aaa
cmc
dec
push
std
stos
add
jbe
ret
xor
pop
aaa
es
sub
fwait
pop
xchg
jno
das
mov
or
aas
jno
mov
xor
xchg
jo
jle
jbe
cltd
push
data16
out
jnp
in
xchg
mov
hlt
inc
les
inc
sub
popf
mov
mov
lea
jl
or
dec
xor
push
sub
icebp
push
arpl
test
imul
fwait
lea
xchg
outsl
xchg
inc
dec
sub
or
or
add
sahf
aas
cld
ja
push
scas
arpl
repz
jp
add
dec
fwait
sti
jg
mov
add
js
inc
ss
cmp
pop
cmp
sub
lcall
adc
mov
pop
pop
in
push
clc
into
push
xchg
aam
inc
or
mov
mov
js
adc
mov
mov
pop
pop
dec
push
fisttpl
in
sub
bound
nop
mov
add
or
ret
adc
js
mull
lods
scas
lahf
enter
jae
inc
sarl
sti
adc
sbb
mov
repnz
add
jbe
mov
jne
sbb
mov
ss
xchg
cmp
gs
dec
scas
loopew
adc
enter
sbbb
movsb
mov
fstl
mov
clc
in
or
push
fldcw
ret
pushf
insb
push
orb
call
sub
shlb
inc
cs
xchg
sub
lea
pop
jnp
pop
jle
mov
jns
sbb
out
je
xchg
test
imul
pushf
lahf
cmp
xor
jecxz
aad
std
xor
leave
cmp
adc
push
mov
into
in
mov
es
pop
sub
out
push
xor
fs
cmpsl
je
mov
int3
in
mov
jb
decb
add
jno
hlt
xlat
mov
fcompl
mov
stc
pop
xor
popa
ja
add
int3
add
pop
sbb
scas
push
pop
jbe
aad
add
fidivl
movsb
lret
pop
push
cmp
loop
enter
loop
mov
xor
not
mov
dec
lock
cmpsb
pop
pusha
notb
fcmovnbe
sarb
imul
enter
leave
sahf
adc
add
ljmp
sub
call
add
test
sub
mov
sahf
adc
lock
fs
insl
add
push
mov
cwtl
dec
jmp
imul
iret
sub
push
int
dec
popf
sbb
faddp
and
dec
sbb
mov
dec
outsb
daa
mov
jle
fisttpl
xor
lret
push
jge
jne
sub
jge
mov
mov
mov
fwait
fs
dec
hlt
mov
mov
mov
shrl
or
movsb
jno
push
lods
loop
dec
jle
les
pushf
sbbb
mov
xor
cmp
in
and
pop
adc
ja
inc
pop
or
scas
cwtl
movsl
mov
mov
push
fwait
data16
fs
inc
insl
scas
inc
loop
iret
jnp
scas
in
mov
jne
nop
pushf
cmpsb
repnz
mov
je
lahf
push
icebp
cmp
es
scas
pop
dec
push
fadds
movsb
pop
mov
xchg
ret
sub
jp
stc
int3
dec
xchg
pop
aam
sub
repz
cs
fsubl
fidivrl
jge
inc
xchg
arpl
int
inc
iret
sub
and
xlat
mov
stos
dec
jge
inc
lret
sbb
add
jle
jmp
xor
mulb
adc
jl
xchg
ret
or
stc
and
pop
dec
mov
cmp
addl
mov
sub
push
xor
pop
repnz
ret
out
xlat
mov
mov
xchg
dec
popf
add
xchg
dec
test
xor
jnp
mov
insl
aas
push
sbb
mov
lods
mov
dec
sbb
jmp
in
pop
jns
or
aaa
js,pn
int3
in
cmc
ja
js
bound
inc
inc
or
and
cs
pop
pop
adc
jmp
shlb
mov
aaa
sub
xor
mov
xor
out
out
pop
mov
decl
cmpsb
mov
dec
dec
fmul
fsubl
je
lock
push
test
fistpl
mov
adcl
gs
adc
mov
xchg
dec
movsb
cmpsb
sbb
adc
int3
mov
insl
cmp
std
stos
jae
lods
and
outsl
add
imul
mov
dec
mov
or
xchg
dec
adc
add
mov
and
cmp
int
addr16
jbe
xlat
inc
mov
cmpsl
popf
pop
rcrb
cmp
loopne
push
outsb
roll
mov
jle
cmp
push
sbb
push
push
out
rolb
rorl
xchg
inc
in
mov
and
sahf
xor
or
cltd
mov
xchg
rcll
mov
pop
jl
je
mov
leave
jne
xchg
push
pop
cwtl
lret
push
sbb
mov
jmp
fs
das
loop
divl
pop
xor
icebp
xchg
in
or
orb
sub
push
push
and
popf
test
cs
js
into
mov
pop
fsts
inc
out
cwtl
lea
sub
imul
in
pusha
movsb
call
pop
cltd
sti
into
inc
pop
push
jns
jl
mov
fbld
jnp
mov
cmpsl
jg
int3
outsl
pop
mov
push
stos
inc
inc
push
cwtl
cs
mov
add
fdivs
rolb
mov
fcoml
std
cmp
mov
sbb
fsubrl
mov
mov
loopne
loopne
and
or
add
cwtl
dec
add
lret
lds
jg
lods
xor
cmp
not
inc
pop
sbb
in
shrl
push
imul
cmc
mov
daa
push
sbb
mov
sub
cmp
call
mov
lea
sbb
aam
mov
out
loopne
mov
sbb
mov
inc
push
push
fcomps
cmc
shll
scas
loop
dec
pop
fistpl
loop
call
add
cld
pop
iret
mov
cmp
add
test
lea
push
or
in
adc
sahf
and
inc
mov
pop
mov
dec
cmp
enter
adc
movsl
and
add
ficoml
scas
inc
cltd
push
mov
loop
mov
test
xchg
lods
push
dec
push
xor
rorl
cmp
popa
subl
and
inc
fsubrl
lods
xchg
daa
jge
loope
pop
fadds
dec
mov
mov
loop
ror
test
xchg
stc
movsb
outsb
push
sub
ds
xor
dec
mov
push
jmp
data16
xchg
jno
dec
scas
push
imul
and
xchg
rorl
outsl
xlat
adc
mov
orb
or
push
mov
movsl
or
xor
mov
sarb
out
jl
mov
or
std
in
push
cmc
cmp
repz
fdivs
xchg
bswap
mov
leave
dec
mov
es
in
rclb
sbb
cltd
fmuls
and
sub
mov
cmpsb
jge
aas
lcall
sub
mov
xchg
mov
das
xor
dec
cmp
into
ds
out
ret
fiaddl
stos
sub
add
shll
incb
jne
repnz
fsubrp
fildll
push
jcxz
xchg
xchg
and
pop
loopne
cli
mov
adc
cld
or
and
adc
sarl
jns
loopne
outsl
bound
lcall
arpl
flds
adc
fcmovne
loopne
lcall
ror
imul
or
sbb
aam
scas
pop
sbb
inc
jns
nop
sub
hlt
popa
loop
inc
cmpsl
mov
pop
ret
dec
test
js
mov
dec
mov
jecxz
cwtl
add
add
push
mov
cwtl
xor
and
daa
and
jns
cmp
jae
out
mov
push
xor
rorl
rclb
repz
pop
divb
sub
push
mov
repnz
sbb
xchg
fmul
and
add
mov
hlt
mov
xchg
or
mov
aam
cmp
xor
leave
mov
xchg
push
es
inc
cmpsb
adc
lea
negl
push
out
bound
dec
adc
rcrl
mov
xor
push
cmpl
sbb
mov
mov
add
jne
and
xchg
dec
mulb
mov
sub
arpl
sub
dec
dec
inc
inc
or
mov
pop
adc
addl
arpl
mov
stos
mov
scas
mov
mov
lret
subl
in
insl
subb
push
pop
mov
int
loop
popa
add
push
mov
bound
inc
test
cmp
cs
mov
xlat
fisubl
arpl
aad
adcl
loop,pn
test
or
aas
int3
mulb
in
mov
jmp
add
jge
ret
scas
data16
and
cmc
cltd
imul
in
ficoml
or
xor
out
pop
cmp
not
jae
decl
stos
jo
rcrl
cmpsl
pop
lahf
jmp
test
cmp
sub
loop
mov
xor
test
and
popf
mov
jmp
xor
mov
sbb
btr
in
jle
hlt
cmp
imulb
sti
rcrb
mov
inc
das
lods
sbb
lock
mov
test
push
cmc
xchg
jl
inc
cld
fs
shll
ficompl
pushf
lret
fwait
mov
mov
notl
mov
cmc
shlb
or
loope
andl
bound
out
sub
call
xchg
pop
jl
or
fcmovu
mov
or
xor
into
int
cmp
insl
fwait
popa
push
sbb
std
popf
movsl
inc
and
pop
jmp
loope
mov
push
pop
not
scas
sti
divl
leave
xor
inc
mov
lea
and
jg
fstps
hlt
fisubs
lods
xor
les
pop
aas
jne
jmp
roll
ljmp
dec
mov
cmp
iret
mov
dec
aam
test
out
shlb
cs
jno
mov
sub
cmc
test
sub
sti
repz
ljmp
adcb
shl
or
xchg
pop
mov
leave
orb
mov
outsb
xor
out
dec
push
sahf
lret
sub
xchg
dec
mov
call
mov
test
ljmp
inc
or
xchg
sbb
xchg
fwait
or
xchg
sbb
lods
sbb
inc
xchg
mov
or
fs
and
outsl
call
mov
jno
or
testl
shll
lods
lea
push
adc
push
xchg
mov
cmp
or
cmpsb
leave
icebp
loop
pop
mov
arpl
push
ljmp
jno
xor
icebp
mov
inc
mov
outsl
test
add
push
int3
sti
push
fwait
mov
and
sbb
out
mov
add
and
inc
cmc
sahf
add
sar
cli
aam
xor
mov
popf
pop
loope
inc
mov
rorb
insl
mov
mov
add
lret
mov
clc
mov
jo
pop
mov
jns
xchg
dec
and
mov
ja
xchg
dec
mov
jo
fstp
dec
out
mov
sbb
adc
add
xor
loope
push
xchg
in
pop
fs
xchg
jo
data16
fs
jmp
std
pusha
cmpl
addr16
cwtl
iret
xrelease
cmp
icebp
jae
frstpm(287
push
jnp
jecxz
and
js
adc
jbe
xlat
push
push
js
inc
jb
mov
mov
mov
mov
push
pushf
pop
and
pop
sub
jmp
lcall
fwait
shll
fiaddl
pop
outsb
push
jmp
xor
into
push
aas
and
jle
addr16
xor
sbb
push
int3
push
mov
adc
outsl
xchg
mov
xchg
mov
pop
add
add
test
push
movsl
pop
push
jb
loop
push
mov
aam
inc
pop
cltd
lret
std
shr
jnp
leave
and
adc
stos
jge
cltd
dec
add
nop
mov
sub
jns
jno
pop
inc
add
out
push
mov
mov
lcall
sub
sub
mov
in
mov
inc
dec
pop
dec
aaa
into
adc
lret
adc
cmp
mov
cmp
leave
dec
out
sub
and
mov
mov
fbstp
scas
xchg
in
cs
pop
ss
xor
push
movsl
jb
insb
inc
ret
add
js
imul
es
jl
push
cld
aas
sahf
cwtl
into
jge
push
aas
pop
mov
inc
jmp
cmp
mov
in
mov
fmull
cmpsb
inc
pop
xor
lds
mov
idiv
bound
and
or
add
rcll
mov
mov
mov
stc
jne
adc
stc
int
bnd
rorl
mov
cmp
mov
or
sarb
and
test
mov
mov
fstpt
cs
cmp
in
insl
fldt
leave
ljmp
test
int3
add
push
mov
push
fdiv
sti
leave
mov
push
sbb
dec
loopne
les
cmp
call
mov
dec
pop
add
out
mov
int3
movsl
loope
test
scas
mov
push
outsb
pop
orb
lahf
int
out
movsl
add
cld
sbb
outsl
hlt
in
lods
adc
add
call
or
adc
loopne
xchg
add
mov
scas
lods
adc
stc
push
mov
xor
mov
mov
in
imul
sub
lock
or
out
idiv
stos
inc
and
mov
xor
add
push
mov
enter
add
mov
mov
push
mov
fwait
xor
sub
mov
mov
mov
pop
adc
or
fsub
push
jbe
nop
rorb
pop
mov
push
push
inc
xchg
xor
xor
aas
xchg
sarl
es
lret
mov
divl
sbb
cmpsl
mov
cs
iret
pop
mov
and
aam
jae
sub
test
xor
movsl
adc
xchg
jbe
js
sub
ret
ss
sti
bound
je
cli
pop
mov
mov
push
xchg
adc
bound
jno
test
xor
shlb
sbb
cmp
dec
mov
icebp
jnp
jmp
repnz
int3
out
jg
out
in
rolb
inc
mov
sahf
mov
cmpsl
sub
mov
mov
mov
test
and
and
jmp
jl
je
pop
mov
add
stos
mov
inc
popa
shll
lcall
pushf
addr16
adc
jne
cmp
scas
pop
fldcw
stos
adc
loop
pop
in
pop
jo
out
fstl
cli
ja
cmp
loopne
icebp
sub
ret
outsb
imul
mov
iret
push
inc
outsb
or
stc
pop
and
arpl
out
push
jp
push
pop
dec
add
pop
sbb
and
cmpsl
in
mov
das
xlat
mov
fsubp
loopne
pop
push
mov
xor
rorb
jecxz
jae
lods
pop
popf
nop
popf
rclb
mov
sti
jle
out
aaa
sbb
hlt
pop
sub
mov
jns
ror
test
push
fldt
sub
aam
adc
pop
pushf
adc
pop
pop
mov
inc
outsl
fidivs
imul
dec
roll
pop
dec
in
test
mov
xchg
or
ds
ss
sub
shlb
out
pusha
mov
test
out
jecxz
rcrb
sbb
fucomi
pop
mov
stos
arpl
push
jo
inc
cmp
sahf
jbe
xchg
mov
or
data16
pop
aas
fldcw
daa
aam
scas
dec
mov
incl
addl
sbb
jmp
cmp
adc
lods
sub
mov
mov
ret
dec
jg
shlb
in
popa
xchg
mov
inc
mov
lcall
fwait
sub
fbld
push
lea
jp
mov
jg
cli
pop
mov
xlat
xor
aaa
or
pop
into
lods
pop
btrl
and
xor
stos
push
xchg
jb
fmul
mov
lods
sbb
cltd
cwtl
sbb
mov
popl
inc
test
jl
push
mov
into
orb
inc
fdivs
lret
test
shll
adc
pop
push
clc
repz
jmp
test
scas
mov
pop
jns
jnp
lret
xchg
jno
jae
sahf
adc
mov
mov
add
out
sub
xor
je
adc
jecxz
gs
orl
imul
cmp
lcall
and
jbe
mov
aaa
xor
ret
dec
cmp
gs
seto
jge
sub
cmp
sti
push
adc
push
test
jle
fcompl
sub
mov
pop
push
mov
shlb
mov
xchg
xor
loope
or
xor
lock
add
cmp
lret
out
add
cmp
jg
scas
sub
adc
add
cmp
inc
xchg
mov
repz
xorb
rcr
jbe
jne
in
adcb
scas
add
jb
fcmovnu
arpl
jmp
ds
and
stos
add
xchg
cltd
mov
inc
lret
mov
pop
mov
inc
sbb
dec
sti
in
cltd
sbbl
mov
sti
rolb
popa
mov
or
adc
mov
movsb
or
push
xor
push
xor
addb
popa
mov
in
xchg
xor
mov
add
mov
jecxz
xorb
mov
jg
mov
inc
cmp
stos
push
jae
js
mov
sbb
aad
out
or
addr16
sbb
mov
jns
andl
mov
sbb
mov
xchg
divb
mov
pop
shll
aam
mov
or
fisubrl
cs
push
fldenv
es
and
jl
les
pop
sahf
mov
sbb
cmpsl
shlb
inc
cmp
pop
or
push
push
lret
popf
jo
jmp
and
lock
cli
sbb
dec
sub
popf
xchg
xchg
int
rolb
and
das
sbb
rol
sbb
mov
in
cmp
stos
xchg
lret
shld
out
mov
fwait
xor
or
xor
jg
shll
lods
std
mov
outsb
cmp
jle
test
in
rcll
test
sbb
lock
and
and
inc
mov
pop
and
xor
sub
cmp
dec
xor
mov
mull
jp
xor
jge
insl
adc
icebp
adc
pop
mov
xchg
and
pop
aam
mov
jle
iret
sub
jge
xor
mov
in
jno
and
imul
add
stos
inc
lret
and
mov
cmpsl
inc
mov
popa
sbb
enter
xchg
jp
mov
je
call
add
jg
js
cmp
psubsb
shlb
xlat
mov
inc
shl
icebp
test
inc
mov
jbe
stc
mov
dec
mov
pop
mov
xor
leave
and
push
sbb
lret
cmp
push
sbb
push
and
lds
adc
ja
push
jle
in
ljmp
fsubs
and
xor
xchg
jp
inc
test
sub
sbb
out
dec
lret
cmp
add
or
inc
cmp
enter
dec
imulb
repnz
cld
inc
fldl
fldenv
cmp
lret
cmp
aaa
mov
mov
pop
pop
inc
sbb
scas
stc
sbb
test
xchg
dec
jnp
mov
dec
adc
cmpsb
das
fsubrs
ljmp
and
xor
ret
cmp
push
loopne,pt
jmp
pop
mov
push
mov
movl
sub
sbb
loopne
out
cmp
jmp
mov
incb
ss
dec
outsb
sbb
arpl
lds
daa
cmc
adc
dec
sbb
adc
dec
std
push
lock
push
and
push
sub
imul
jecxz
notl
in
std
mov
dec
adc
mov
aas
notb
dec
lods
mov
addr16
pushf
xor
xchg
mov
lock
xchg
pop
or
call
sub
cmp
repz
jp
xor
fldt
int
cmp
mov
jno
pop
mov
add
lock
fstl
pop
jge
ret
outsb
sahf
jp
inc
add
xchg
in
adc
mov
add
dec
popa
adc
mov
inc
stc
mov
in
enter
inc
mov
sub
push
test
pop
and
cmovo
iret
into
test
jae
lds
aaa
into
fldenv
fildl
add
dec
mov
shrb
cld
lods
add
cli
fnstcw
adcb
enter
ss
mov
sub
je
cli
sbb
cli
or
mov
out
and
addr16
sbb
in
ret
cmpsb
or
rorb
test
lods
inc
sbb
dec
pop
in
xor
lock
push
addr16
jne
in
in
xor
jae
xor
pushf
jno
mov
cmp
popa
or
add
mov
dec
or
inc
rcrl
cltd
stc
ljmp
push
jno
pop
jp
stc
loop
mov
jp
push
sbb
pop
mov
popf
pop
fdivr
data16
lock
imulb
xchg
and
leave
cmpsl
push
cs
xchg
jno
gs
sub
into
jae
and
mov
es
hlt
scas
pop
and
insb
push
adc
cmp
lock
push
inc
jb
mov
mull
icebp
xor
orl
hlt
int
or
sub
and
pop
aaa
jbe
mov
mov
jg
bnd
inc
mov
xor
jne
inc
hlt
pop
mov
fucomip
mov
incb
loope
loopne
and
jae
or
sub
push
call
ret
jmp
sub
push
hlt
and
outsb
pop
pusha
jnp
sub
cmp
pop
lods
fnsave
push
inc
aas
pushf
xchg
jl
pushf
xlat
mov
popa
and
lock
and
repz
outsb
mov
les
push
sbb
xchg
inc
sbb
fcomp
pop
loop
and
xor
movsb
mov
jmp
xchg
popa
or
orl
faddl
notb
out
leave
call
movsb
jne
faddl
scas
inc
fiadds
xchg
jmp
ja
arpl
mov
sub
sub
push
sbb
js
cmp
repnz
cltd
jp
mov
push
iret
dec
out
vmovsd
pusha
mov
push
mov
cmp
repz
pop
sbb
xchg
mov
xchg
std
dec
repnz
ja
xchg
cmpsb
sbb
dec
cwtl
int3
xor
mov
lcall
mov
push
divl
lds
add
and
ljmp
loop
std
subl
xchg
fsubrl
add
mov
lahf
fcmovu
fxch
jae
das
lods
jp
aaa
and
ficoml
xchg
and
mov
stc
loope
daa
clc
addl
jbe
flds
in
xchg
push
das
inc
xchg
sar
xchg
es
ja
xchg
fcmovnbe
push
stc
adc
cmp
movsl
sti
xchg
les
xchg
mov
jno
xor
push
jnp
mov
lock
xor
aaa
imul
lds
cmp
jg
popa
pusha
jge
and
out
sahf
cmp
lret
bound
fldl
push
mov
pop
rorl
das
test
shr
sbb
ja
mov
dec
jg
inc
movsl
add
dec
aad
xchg
push
or
dec
push
add
xor
cmpsl
or
imul
adc
aam
lods
dec
or
push
cmp
mov
cld
pop
sbb
inc
shlb
scas
fimuls
pop
cmp
fcoms
scas
call
inc
mov
loop
cmp
sahf
mov
mov
dec
repnz
les
push
adc
outsb
dec
mov
cmp
xor
mov
sub
lret
lahf
and
pminub
push
ljmp
jae
and
xor
mov
addl
loopne
sbb
sub
in
dec
push
sbb
jne
mov
out
imul
jg
or
pop
sub
sub
cmc
mov
stc
inc
fs
cld
adc
out
adc
addb
inc
sbb
jmp
push
and
fmull
mov
ja
lea
or
sub
or
int
leave
nop
mov
test
cmp
daa
pushw
ficompl
or
inc
push
mov
stc
inc
dec
jecxz
mov
test
xchg
je
stos
adc
mov
fnstsw
pop
adc
test
scas
sub
data16
mov
int3
cmc
mov
icebp
cwtl
jecxz
sahf
mov
jne
lahf
lret
ljmp
mov
add
xchg
insb
lret
cmp
loop
cmpsb
sbb
das
mov
inc
dec
daa
mov
pop
pop
in
filds
lods
jo
icebp
dec
xchg
mov
shlb
lock
insb
pop
cli
cmp
inc
or
xchg
lahf
ds
rclb
jns
push
jmp
mov
insb
fisubs
add
stc
stos
mov
adc
mov
push
aam
cmp
cmp
ficoml
jp
mov
int3
outsb
and
jne
push
jp
ror
sarl
flds
test
cli
dec
mov
icebp
sub
xchg
dec
dec
or
mov
pusha
push
add
xchg
push
in
mov
add
mov
movsl
imul
fs
imul
cltd
pop
pop
out
mov
add
mov
js
xchg
or
stos
das
fldenv
stos
dec
cmove
push
cld
icebp
push
mov
mov
cmc
mov
push
push
negb
jl
nop
es
inc
in
sarb
add
and
fistpl
pop
addl
sbb
push
and
out
adc
pop
cld
xlat
or
mov
xor
and
inc
mov
xor
push
and
sbb
std
xchg
dec
mov
adc
jnp
loope
pop
mov
sub
out
imul
cmp
dec
xor
repnz
ss
pop
jnp
mov
mov
adc
inc
mov
push
insb
and
xor
mov
call
adc
pop
mov
or
pop
push
pop
movsb
adc
sub
push
loopne
xorl
adc
inc
lds
and
xchg
jbe
xchg
push
mov
mov
test
cld
add
insb
mov
push
popa
stos
shrb
adc
sub
pop
sbb
adc
dec
xchg
mov
sbb
add
insl
rcl
popf
jno
fimull
cmp
adc
sub
mov
lret
test
xchg
ret
cli
in
mov
maxps
roll
xor
in
mov
jns
test
add
das
sbb
call
add
mov
or
out
xchg
sbb
es
insl
mov
sti
popa
push
pop
xchg
lock
leave
orl
push
lock
and
pop
mov
mov
cmp
popa
jge
mov
std
icebp
jmp
adc
loope
aam
dec
cwtl
insl
dec
fidivrl
xor
mov
insl
or
pop
stc
lahf
insb
mov
xor
fwait
roll
add
xor
sub
lods
or
shlb
fimull
lods
addr16
clc
enter
cmp
addl
mov
jl
pop
sbb
dec
mov
sbb
or
mov
pop
icebp
sbb
testl
jo
ljmp
out
insl
xchg
mov
loope
and
xchg
out
mov
js
icebp
insb
xchg
add
dec
cld
cmp
or
aaa
lock
iret
inc
xorb
sub
add
movsb
jb
xchg
shrb
add
imul
bound
push
push
jno
push
sub
xor
clc
adc
xchg
ret
sbb
in
ror
jp
mov
cmp
dec
cltd
int3
js
lahf
aad
cltd
rolb
cmp
and
es
int
cmp
repz
push
pop
xor
xchg
xchg
push
cmp
lahf
decl
scas
mov
adc
pop
imul
aam
push
mov
fwait
xchg
and
inc
add
insl
aad
push
nop
mov
pop
push
and
xor
adc
sub
pop
clc
out
add
pop
lods
cs
pushf
dec
push
fldl
cs
lahf
icebp
mov
std
pop
mov
movsb
jnp
fisttpll
ret
decl
adc
sbb
loopne
test
test
pushf
sqrtps
mov
pop
and
std
jle
das
jg
inc
arpl
lock
cli
mov
subb
jnp
push
jl
in
pop
or
dec
fwait
dec
rcl
aaa
or
cmp
jp
in
lds
mov
in
cmp
jmp
pusha
mov
sub
push
adc
sub
pusha
jp
jecxz
rcl
sbb
cltd
out
mov
add
clc
mov
dec
nop
or
inc
cltd
leave
xchg
mov
cltd
jo
call
or
dec
mov
push
xchg
mov
popf
nop
call
cmc
xor
pusha
sub
sahf
incb
ficomps
aas
inc
mov
mov
mov
hlt
icebp
cmp
inc
js
lcall
push
and
xchg
add
adcl
into
lahf
inc
pop
sub
mov
aad
sub
xchg
movsb
sahf
aam
mov
insl
sub
push
add
aad
sub
sbb
xor
jle
ds
insl
sbb
or
jnp
test
fisttpll
fwait
push
add
in
not
xor
and
pop
jmp
and
adc
fnsave
or
lcall
leave
or
mov
loop
pusha
jnp
movsb
and
or
mov
popa
cmp
outsl
xchg
leave
test
mov
adc
ja
or
sbb
and
pusha
push
xchg
add
shl
mov
outsb
push
mov
sbb
mov
test
jl
pusha
mov
push
sti
jbe
bswap
adc
add
or
mov
jb
adc
mov
sti
shlb
mov
jnp
orl
call
xor
push
add
lea
fcomip
and
adc
mov
mov
addl
mov
jmp
mov
rorb
adc
dec
outsb
add
adc
out
sbb
mov
sbb
push
cld
push
xor
pop
push
mov
daa
xchg
sbb
int3
or
mov
xor
add
sub
aad
push
adc
loope
xor
gs
cld
push
fiadds
aam
iret
push
icebp
cmp
push
ss
jp
or
in
jnp
les
xchg
test
mov
fstpl
cmp
xchg
xlat
pusha
mov
cmp
pusha
ficompl
xchg
and
mov
sti
mulb
and
and
pop
sub
loope
testl
frstor
or
mov
jl
jg
sub
push
and
inc
push
mov
push
rcl
lds
enter
leave
pop
cmp
inc
icebp
mov
ds
xchg
or
mov
sub
cmp
mov
xchg
imul
pushf
ljmp
and
call
lret
das
and
in
and
out
cs
into
rclb
pop
xor
pop
call
ds
outsb
repnz
lret
popf
pcmpeqw
mov
mov
sahf
mov
mov
xor
mov
adc
mov
inc
adc
pusha
test
fldl
test
sbb
add
jo
sbb
lea
rolb
sbb
mov
and
mov
lea
xor
clc
push
ljmp
add
pop
inc
and
popf
mov
lcall
sub
out
fldt
mov
hlt
or
stos
jmp
mov
addr16
or
or
push
lret
inc
ljmp
add
dec
les
lahf
push
inc
pop
pop
in
xorb
adc
cmp
xchg
pop
inc
int
or
jmp
call
test
mov
mov
push
popa
ret
push
ds
cmpsb
shrb
adc
cmp
adc
out
add
lahf
sbb
lds
xchg
test
or
incb
mov
or
and
mov
xor
cmp
divl
push
or
add
enter
dec
push
in
call
mov
jg
std
push
lret
push
scas
cmp
inc
sbb
sub
into
adc
cmp
dec
push
dec
inc
daa
stc
test
jno
inc
imul
lret
aas
into
aam
sbb
sahf
rcrl
dec
insb
leave
jne
out
out
pop
vmovntdq
stc
jb
clc
jp
mov
mov
stos
push
stos
xorl
xchg
or
mov
xchg
cmpsl
xchg
movsb
cli
cld
adc
sbb
xchg
out
xor
adc
xchg
add
jne
clc
mov
dec
inc
xchg
mov
push
leave
xchg
imul
loop
in
sbb
subb
sbb
adc
pop
scas
and
into
adcb
push
andl
les
or
fistpl
outsb
push
inc
insl
in
imul
jp
inc
call
call
inc
fcomps
mov
leave
mov
scas
das
add
mov
sub
daa
inc
push
ret
out
aad
sahf
mov
adc
dec
pop
stc
into
sub
sbb
and
jbe
mov
xor
inc
orl
fwait
or
test
jge
out
out
rclb
xchg
scas
dec
fwait
xchg
xchg
mov
and
xchg
jecxz
push
xor
xor
jnp
xchg
hlt
sarl
imul
cmp
ljmp
push
fs
cli
into
jae
in
pop
repz
or
jnp
mov
fadd
fisubrl
adc
lret
mov
mov
inc
fstl
push
pop
lods
adc
mov
lods
out
or
or
xor
sbb
mov
sub
xorb
out
inc
mov
push
mov
and
mov
push
mov
pop
iret
mov
movsl
mov
xorl
mov
jge
test
enter
shrb
cmp
std
mov
inc
jp
lds
stc
movsb
dec
aam
pop
mov
fwait
std
and
push
or
xor
xlat
int
push
notl
xchg
cmpsl
xchg
sbb
in
sbb
cmpsb
rclb
icebp
outsb
negl
and
mov
mov
mov
jge
mov
imul
push
leave
mov
aaa
push
mov
sarb
imul
mov
inc
push
stc
inc
and
push
jge
sbb
std
pushf
movsb
call
lock
idiv
add
and
sbb
in
sbb
push
adc
sub
dec
lcall
daa
add
addb
mov
rcr
pop
push
xchg
mov
xor
xchg
jnp
add
jb
insb
or
mov
scas
mov
loopne
addr16
pop
insb
push
mov
dec
fwait
lahf
or
subl
add
add
lds
xchg
nop
jne
cld
cli
mov
mov
nop
dec
mov
adc
inc
rcl
mov
xor
sbb
adc
stos
bound
insb
adc
or
inc
sbb
xlat
adc
cwtl
jmp
out
clc
push
cmp
into
mov
push
cltd
shrl
xchg
mov
lret
fisubl
jb
dec
sahf
dec
xor
pop
lret
mov
cltd
ss
inc
roll
aam
jns
inc
stc
add
in
mov
push
aas
xchg
adc
lret
ss
cwtl
loop
mov
shrl
mov
add
mov
lock
pop
pop
mov
mov
jnp
fimull
jge
cmpsl
adc
dec
cmpb
pop
jp
cmpsl
es
shrb
pop
pop
dec
xlat
inc
test
pop
xor
std
and
sti
out
andl
and
add
dec
ret
jmp
dec
push
daa
gs
mov
sub
xor
mov
fisubrl
data16
lods
shlb
xchg
push
mov
and
addl
push
dec
fcomi
test
imul
xchg
push
into
jge
data16
or
orb
xchg
sbb
leave
ficomps
adc
or
mov
mov
cmp
leave
test
cmp
pop
lret
xor
ss
fwait
cmp
cs
pushl
and
icebp
mov
pop
or
push
mov
movsb
test
dec
jge
mov
and
xor
lea
ret
fsubl
cmc
in
dec
push
xchg
fstp
xlat
int
cli
dec
fisubs
icebp
lock
xchg
xor
cmp
test
rorb
mov
jl
mov
mov
arpl
jb
popf
addr16
lods
fwait
jecxz
fs
push
jnp
add
cmpb
pop
rcrb
outsb
cmpsb
and
xor
adc
clc
and
idivb
aam
and
lods
and
sub
movsl
leave
and
push
fdivr
lret
sub
xlat
push
mov
push
and
adc
loop
push
loop
idivl
lcall
xor
icebp
fdivl
mov
adc
pusha
xchg
sbb
cs
jle
aad
in
push
int
pop
dec
mov
test
lods
mov
inc
cmp
ja
or
enter
fdivs
adc
xchg
xor
pop
aam
mov
xchg
test
out
popf
xchg
outsl
les
mov
sub
cmp
pop
lods
enter
test
aad
icebp
sbb
call
xlat
jbe
inc
cmp
clc
test
in
pop
pop
pop
inc
jbe
sti
mov
fadds
mov
stos
dec
sbb
jl
jns
jl
push
pop
adc
int
mov
push
jns
jae
jp
add
and
sbbl
push
jns
subl
push
out
dec
sub
das
push
sub
mov
and
roll
xor
test
inc
pop
mov
orb
jb
sub
fisttps
int3
and
subl
fdivrs
imul
cmc
in
pop
pusha
fadd
sbb
cltd
jl
dec
pop
sub
jbe
push
xchg
pminub
fdivrl
cmp
lcall
inc
in
repnz
lods
adc
testb
sub
push
xor
hlt
and
shlb
lret
sub
das
lds
jbe
lcall
and
mov
ficoms
hlt
mulb
jo
fsubrs
and
clc
stc
sub
in
into
inc
mov
mov
pop
lds
fstpt
cwtl
and
and
ficomps
aad
outsb
sbb
mov
and
jb
sub
jg
push
mov
sub
insl
cmp
lods
scas
inc
insb
xchg
push
jne
push
dec
xor
mov
shll
enter
jmp
int
and
sbb
in
lcall
dec
arpl
sub
out
out
mov
add
lret
add
dec
jg
mov
lods
lods
in
jmp
in
cmp
or
push
xorl
int3
test
shrb
push
sbb
shl
and
fwait
mov
or
xchg
std
sub
insb
hlt
pop
or
call
push
lods
jb
inc
loop
rolb
push
add
aas
adc
and
mov
xchg
add
into
lret
mov
stos
sub
scas
xor
stc
jns
test
sbb
jnp
shlb
pop
adc
fistpl
lcall
je
add
pop
les
xchg
in
adc
frstor
loop
jg
lea
or
mov
mov
jge
cld
in
push
push
pop
out
add
fldcw
test
daa
addl
lret
fsubl
imul
fildl
push
loopne
sub
xchg
mov
cmpb
shll
out
sub
jbe
lods
pop
xchg
sub
ror
or
aaa
pop
insb
cli
cmpsb
pop
je
jo
out
loop
aad
in
or
cmp
push
pop
gs
cmp
inc
pushf
mov
or
outsb
add
je
xchg
daa
mov
sub
xchg
xor
mov
or
or
jg
ljmp
xchg
add
shr
dec
sbb
adc
dec
gs
pop
sub
dec
fcmovnu
push
mov
ds
aad
loopne
sub
add
ss
adc
roll
pop
data16
repz
sbb
pop
pushf
mov
les
inc
or
jge
call
int3
sub
sti
push
mov
in
icebp
lock
lret
inc
stos
push
xchg
cmpsl
hlt
sub
sbb
jge
rcll
pop
inc
dec
pop
add
cmp
cmp
outsl
push
stos
stc
mov
shlb
sbb
pusha
jp
jg
dec
dec
std
popf
xor
push
int
lret
xchg
mov
pop
mov
pop
mov
inc
int3
and
ret
or
in
out
dec
xchg
fsts
push
cmp
add
mov
loopne
inc
insl
std
and
cwtl
push
gs
aas
loop
lret
mov
cmp
test
dec
lea
fs
sub
push
test
xor
xor
mov
aam
icebp
jmp
add
movl
inc
mov
adc
aam
adc
mov
sbb
scas
push
mov
cmc
lods
xchg
jbe
in
fists
repz
sbbl
sar
stc
stc
repnz
add
fisubl
push
inc
push
adc
jne
xchg
push
or
nop
fsub
hlt
popf
sar
daa
inc
push
inc
mov
pop
dec
call
into
repz
mov
loope
cmc
dec
pop
pop
clc
aad
push
sti
js
enter
rolb
xchg
fstpl
insb
add
call
pop
add
and
mov
fsubs
dec
pop
and
push
mov
ret
in
mov
test
loope
stc
adc
mov
and
inc
and
xchg
lods
push
mov
mov
out
cmc
lds
pop
xor
and
imul
pop
sub
mov
inc
dec
fs
push
push
inc
sbb
pop
adcb
jp
push
movlps
mov
pop
pop
ss
loopne
cmp
jl
xchg
pop
idivb
cmp
xchg
test
xchg
fbld
cli
add
mov
jecxz
xchg
test
mov
jg
in
test
add
jecxz
adc
push
nop
push
jecxz
dec
xlat
push
inc
or
or
xor
adc
leave
in
push
and
inc
ja
fwait
aad
xchg
sti
lcall
ret
push
jbe
ja
in
clc
out
mov
jns
insl
xchg
dec
pop
mov
lea
aad
shl
test
jno
in
imulb
popa
testl
stos
or
les
outsb
or
outsl
jmp
pop
or
nop
mov
call
xchg
iret
pop
jns
add
loope
cld
mov
adc
adc
inc
test
icebp
mov
cmp
leave
xor
cmp
roll
stc
mov
mov
pop
or
lret
sbb
adc
inc
out
lret
xor
loop
or
sbbl
mov
bound
pop
repnz
mov
pop
adc
add
sub
push
lret
sub
fmul
dec
in
xchg
sub
inc
imulb
and
daa
rcll
adc
inc
jne
xchg
pop
mov
clc
xchg
test
pop
dec
push
inc
push
adc
jmp
mov
pop
mov
pop
or
adc
cmp
dec
outsb
xchg
aaa
cmp
pop
and
test
out
sbb
cmp
xchg
push
adc
add
repnz
mov
out
sub
mov
or
idivl
ja
adc
fcomps
mov
mov
mov
lea
negl
mov
cmp
and
aas
add
xor
or
lds
jno
lret
push
shll
les
add
ret
jb
mov
aam
outsl
pop
rcrb
xchg
dec
mov
jge
pop
pop
pop
stos
lahf
mov
jne
mov
cmp
imul
lret
pusha
out
pop
lock
mov
pushf
and
sub
rolb
ficomps
aas
inc
jo
cli
imul
pop
aad
mov
pop
and
cmp
nop
jnp
test
mov
push
cld
je
or
in
xor
movl
jmp
insl
cli
adc
out
mov
rol
mov
inc
aaa
mov
add
add
jmp
mov
hlt
add
cmpsl
out
pop
lea
inc
movsb
sbb
outsl
imul
pop
xchg
dec
imul
fimull
cpuid
rorb
dec
sub
xlat
scas
mov
push
mov
mov
mov
loopne
and
jnp
sbb
lcall
cmp
cwtl
mov
jb
xchg
gs
inc
icebp
inc
or
jl
les
dec
sbb
push
jbe
inc
mov
push
jg
push
mov
sbb
xchg
aam
mov
push
mov
mov
add
mov
jb
sub
push
sub
mov
cld
pop
xor
int
cli
push
loope
fstpl
jnp
mov
orl
mov
mov
fldt
xor
jecxz
cltd
jl
sbb
pop
mov
mov
nop
xchg
arpl
lahf
int3
or
inc
fcomps
cld
das
insl
and
cmp
repz
adc
rclb
pop
shll
cmp
dec
add
xor
in
sub
xlat
cmp
aam
dec
xchg
loope
cltd
in
test
xabort
bswap
jmp
mov
mov
scas
add
fldl
inc
in
out
lea
mov
popf
push
jge
rolb
pushf
lea
das
or
loop
mov
fwait
sbb
loope
aam
adc
cmc
adcb
aaa
inc
hlt
push
sub
push
lods
adc
inc
jge
mov
clc
inc
cmc
test
aam
idivl
pop
jg
mov
mov
js
cli
cltd
lock
mov
das
ficoms
mov
and
xchg
dec
dec
mov
cmp
roll
aas
inc
lock
mov
clc
jo
and
xor
mov
mov
mov
in
xchg
pop
je
xchg
fisttpll
push
mov
xchg
pop
push
sahf
mov
mov
insb
push
dec
out
adc
xor
subb
jmp
xchg
leave
and
jno
ret
lcall
fsubrl
mov
xor
popa
cmpsl
mov
aas
sub
mov
les
out
testl
cmp
jnp
clc
pop
cli
subl
fwait
aas
mov
movaps
sbb
fsubrl
jmp
xchg
xor
mov
scas
cwtl
test
test
aam
insb
out
loope
shl
mov
mov
dec
fimull
pop
sub
ret
rclb
mov
inc
fisubl
inc
hlt
aaa
mov
leave
lods
push
jmp
lcall
aam
dec
loop
shll
xor
inc
imul
dec
cltd
shlb
fwait
push
sbb
push
ror
pop
cmp
out
popa
scas
nop
fldcw
jmp
mov
push
loop
nop
push
adc
xchg
jecxz
out
hlt
lods
imul
scas
cmpsl
mov
adc
mov
mov
lods
les
daa
xor
insb
lock
adc
mov
push
hlt
mov
repnz
popf
in
and
xchg
pop
mov
stc
fcmovb
testb
arpl
das
jnp
push
scas
cmpsb
lds
xor
cmc
shll
je
daa
jle
add
pop
pop
or
cmp
popl
pop
das
sub
jmp
cld
nop
aaa
lcall
sahf
mov
pop
imul
inc
arpl
insb
ljmp
hlt
adc
sti
and
xor
out
stc
mov
xor
mov
mov
les
clc
push
ds
mov
mov
repz
cmp
sbb
fadds
push
mov
pop
jnp
and
inc
pop
push
daa
dec
add
sub
out
jp
xorb
jnp
mov
jmp
push
fnstcw
mov
sub
out
dec
add
lods
jbe
inc
mov
pop
and
jg
mov
cmp
adc
js
sbb
push
divb
aaa
inc
sub
stos
movsb
adc
scas
pusha
scas
pop
sti
scas
int
jp
xchg
test
scas
mov
in
testl
add
lcall
stos
aad
sbb
mov
shlb
jno
shlb
cmc
adc
dec
xchg
ds
daa
loope
stos
faddp
sbb
mov
mov
jnp
out
test
and
xor
adc
repz
xchg
lcall
fdivs
sub
add
and
pop
icebp
lock
lds
pop
mov
je
int3
lods
popf
movsl
test
and
test
je
lock
outsl
inc
cmp
jns
rolb
aaa
xor
mov
in
scas
adc
aam
scas
mov
mov
mov
adc
ret
push
faddp
mov
repz
xchg
lcall
test
cld
sub
inc
mov
push
mov
cli
adc
outsb
mov
or
push
xor
push
pop
or
fbstp
nop
xor
push
cwtl
sbb
xchg
push
inc
xchg
stos
pop
int3
rcrl
mov
ret
in
pop
out
repnz
adc
pop
or
aaa
stos
pop
cmp
sub
mov
aam
push
repz
inc
rolb
xchg
inc
mov
mov
pop
xchg
xorl
mov
repnz
ficoms
xchg
insb
adc
mov
lock
jno
push
paddusb
and
imul
leave
add
dec
jb
aad
mov
lea
cltd
stos
and
mov
out
sbb
int3
sbb
popa
fwait
je
sub
outsb
xchg
sbb
inc
sub
shrl
dec
push
pusha
out
xchg
sub
xchg
das
ljmp
lahf
je
pop
and
jno
lds
push
icebp
ds
push
or
push
repnz
cmpsb
insl
push
xchg
cwtl
and
imul
aas
cmpsb
pop
add
lcall
loope
cmp
bound
arpl
add
jnp
addr16
and
sbb
push
xor
int
cwtl
loope
pop
or
xor
bound
mov
xchg
ss
test
lods
nop
ret
cli
xlat
dec
aam
inc
mov
mov
inc
pop
data16
dec
jecxz
mov
iret
pop
out
add
pop
mov
dec
fdivs
mov
inc
xorl
js
mov
dec
stos
test
and
push
popa
outsl
shr
push
loopne
and
xchg
adc
add
or
mov
sahf
inc
add
add
fistpl
add
xor
jb
test
and
repnz
mov
push
mov
shlb
iret
cmp
es
in
push
dec
lahf
mov
cli
inc
cmp
mov
xchg
mov
jg
cmp
cmpsl
mov
repz
pop
and
test
test
cli
dec
jge
insb
movsl
rcrb
xor
js
add
dec
mov
xchg
sub
push
xchg
rorl
shlb
xor
test
cli
inc
stc
fcoms
mov
cmp
cmpsl
mov
adc
arpl
pusha
jmp
add
jns
fisubs
out
add
jl
sti
loop
mov
aas
jne
add
push
or
or
pushf
aas
ss
daa
xor
sahf
push
mov
aaa
pop
iret
xchg
popf
jns
inc
les
outsl
inc
xor
out
mov
mov
insb
mov
insb
aad
xor
add
rcl
inc
push
add
mov
add
loope
pop
jecxz
or
jp
xor
jo
aam
insb
cmp
mov
outsb
or
inc
jmp
and
jno
mov
fisubl
mov
cmp
cmp
ljmp
gs
orb
popa
and
sub
shlb
popa
test
call
repnz
push
out
clc
sub
xchg
mov
lds
hlt
daa
xor
out
shl
dec
cmpsb
mov
lcall
mov
aam
or
pop
in
test
inc
in
or
mov
mov
xor
cs
dec
jle
xor
lods
mov
ror
add
nop
mov
dec
shl
jno
les
bound
xor
jle
cld
jl
pop
cmc
mov
in
fstpl
rcll
rcll
and
xchg
orl
shrb
xor
lcall
cli
lods
adc
mov
arpl
jle
mov
pop
pop
daa
js
les
mov
xchg
mov
mov
mov
or
cmp
in
inc
das
jne
xor
fwait
inc
mov
mov
mov
out
adc
sub
fucomip
inc
inc
push
popa
or
movl
or
rcrl
or
cwtl
adc
aas
leave
inc
pop
mov
pop
and
or
ja
ljmp
adc
movsb
inc
mov
mov
out
push
scas
xchg
push
and
andb
and
mov
dec
mov
inc
aad
inc
inc
push
xchg
fs
mov
aam
dec
add
and
stos
dec
mov
jae
push
pop
call
jge
pop
push
xchg
sbb
popl
cwtl
cmp
lcall
loope
add
addl
jbe
jno
xchg
add
mov
add
aad
push
arpl
test
jmp
add
clc
push
jno
sahf
cmpsb
ret
lea
xor
pop
inc
mov
mov
cmpsl
push
sub
lea
movsb
cli
bound
add
mov
lahf
pop
adc
stos
fs
xor
rep
xchg
pop
xor
sbb
call
mov
fs
pop
leave
dec
test
or
pushf
shll
inc
xchg
add
or
jnp
mov
sbb
mov
pop
test
ret
lret
adc
xor
pop
dec
mov
clc
daa
inc
lret
add
movsb
pop
sub
loope
inc
fs
push
out
add
mov
ds
jno
and
lcall
push
addl
adc
fnstcw
sar
shrb
and
ja
lret
ds
or
jns
or
daa
cmp
lret
sbb
sbb
add
outsl
mov
push
int
xchg
imul
mov
xchg
lcall
fcoml
sbb
cmp
mov
scas
or
inc
push
cmp
and
enter
data16
mov
out
adc
test
or
jns
cli
xchg
dec
cmc
pushf
and
inc
or
mov
jae
mov
jle
pop
cmp
sub
cmp
xchg
lods
fistl
mov
gs
xlat
cs
adc
imull
or
pop
mov
cmpsb
loopne
xor
fldl
mov
sub
inc
pop
sahf
mov
jmp
pop
mov
lahf
mov
shrl
dec
and
pusha
test
into
addr16
lods
mov
out
pop
pushf
inc
xchg
dec
cs
mov
xor
sbb
sub
and
popf
out
xlat
cmp
lret
mov
out
xlat
cmp
lcall
fistpl
insl
lock
into
xor
adc
add
out
call
jle
cmc
cwtl
sarl
std
mov
mov
inc
in
cmp
add
ficompl
dec
nop
into
mov
push
sbbb
jmp
push
movsl
int3
and
lods
add
out
xchg
mov
gs
out
sti
xchg
mov
orl
scas
xchg
xor
push
ss
jp
into
fisttpl
add
movsb
lret
shrb
inc
pop
loop
xchg
fistpl
ljmp
rcl
test
add
roll
xchg
and
pop
ja
cli
add
nop
subl
fs
dec
xor
repnz
subb
loopne
adc
push
subl
test
mov
sub
lret
dec
or
stc
cmp
sub
mov
mov
inc
xor
adc
jb
test
and
cli
or
adc
dec
and
add
jmp
or
xor
cmp
test
imul
pop
and
adc
adc
loopne
sub
inc
rcrb
jl
jb
mov
push
ljmp
mov
inc
cli
and
jae
mov
insl
dec
sub
push
sub
mov
xor
repnz
jb
popa
fildl
out
mov
dec
or
mov
dec
and
movsl
rcr
test
xchg
aam
sbb
int
test
std
cmp
outsb
scas
call
inc
mov
push
sbb
rorb
push
js
mov
xchg
ret
pop
ret
bound
mov
ret
movsb
test
xor
add
fmull
inc
mov
or
or
or
jnp
xchg
dec
in
fdivrs
mov
arpl
std
iret
and
pop
mov
scas
divl
xor
sub
xor
repz
mov
clc
push
lds
pop
mov
ss
xchg
addr16
add
xchg
push
push
in
mov
lret
inc
leave
jmp
std
adc
pusha
repnz
in
shl
popa
inc
or
mov
dec
shlb
pusha
dec
bound
fidivrl
mov
add
sub
xchg
cmp
loop
cmp
jne
sahf
cmp
adc
les
push
fcoml
sahf
out
sub
jp
push
aaa
mov
jg
data16
hlt
inc
sbb
mov
outsl
shrl
test
add
push
pop
js
push
jae
bswap
int3
inc
mov
mov
add
lock
int
loope
sbb
lock
call
pop
cmp
mov
xchg
dec
decl
fwait
lock
out
jb
mov
in
jns
popa
insb
fs
loope
fisttpll
cmp
pop
pop
ljmp
cs
adc
sub
int3
adc
aad
mov
cmp
shrb
popa
xchg
cmc
mov
sub
xchg
daa
push
push
push
rcrb
and
push
repnz
mov
mov
jp
sbb
mov
push
aam
and
stos
inc
adc
dec
pop
arpl
mov
push
dec
pop
sub
fmulp
iret
ljmp
cmp
and
mov
adc
or
pop
sbb
cmpsl
js
and
aad
aad
int3
fcomp
pop
xor
jbe
out
frstor
jb
lea
idivb
add
pusha
add
inc
mov
xor
dec
push
pusha
add
aad
jb
sub
clc
mov
sahf
inc
out
dec
fcompl
sbb
addl
sbb
adc
loopne
cmpb
xchg
adc
popl
jno
sbb
call
mov
ljmp
js
lds
cmp
bound
xor
jg
adc
fiaddl
out
lods
xorl
and
dec
push
nop
pop
imul
adc
test
f2xm1
mov
jnp
loope
sti
lahf
test
repz
fwait
out
sub
loope
add
mov
pop
dec
lret
scas
aam
in
add
add
pusha
les
daa
rcrl
or
add
fwait
and
sarb
adc
stc
inc
int3
jecxz
add
xor
fyl2xp1
ficomps
sbb
clc
sub
mov
popa
mov
jns
lea
movsb
sti
lock
fnstsw
cmp
je
test
mov
jl
cmp
dec
scas
gs
imul
sbb
icebp
sub
out
inc
mov
or
jno
lock
ljmp
scas
insb
rcl
int3
push
and
cmp
pop
sbb
dec
mov
pusha
repnz
add
repz
jmp
gs
std
insb
out
add
in
negl
sub
cwtl
mov
pop
leave
push
mov
stos
xor
inc
xor
pop
cwtl
lods
mov
mov
add
lock
xor
pop
cmp
mov
rolb
push
pop
stc
xchg
fmull
jmp
jle
hlt
loop
jno
mov
mov
mov
stos
adc
int3
fs
mov
addr16
out
cmpb
mov
or
jne
pop
dec
aad
jne
push
mov
pop
mov
in
xor
sbb
das
mov
inc
sub
push
jbe
in
in
and
incb
xchg
test
sbb
cmp
jo
testl
stos
inc
push
adc
mov
in
sbb
insb
cmp
lcall
orl
xor
test
dec
and
adc
mov
or
imul
stos
test
out
cmpsl
add
test
dec
aam
lret
js
aas
out
subl
push
cwtl
dec
gs
cmp
ret
cs
fstps
cmp
int3
lods
dec
sub
inc
push
cmc
iret
push
sub
sbb
shll
adc
cmp
movsb
or
push
pop
bnd
outsb
inc
mov
push
fldl
into
xchg
mull
push
sbb
adc
adc
movsl
push
mov
push
dec
test
mov
push
adc
gs
cmp
push
scas
mov
rcrl
test
pop
or
out
movsb
in
lret
mov
mov
arpl
movsl
mov
lret
aam
mov
and
xor
sub
push
xor
int3
fnstsw
cli
je
push
sbb
jle
xor
movsl
dec
cmp
repnz
in
sub
xchg
notb
mov
sub
pop
lods
push
pop
out
arpl
xor
xchg
jp
jae
aad
fiaddl
pusha
sahf
sub
into
xchg
cmp
or
aaa
mov
inc
ja
pop
mov
adc
adc
ss
sub
add
imul
pop
fdivl
jae
pop
ror
cld
sbb
ret
dec
sub
jns
adc
and
jne
mov
add
jbe
sbb
sbb
adc
out
ja
and
shr
xchg
push
jnp
jmp
cmp
cmp
cmp
pop
xor
adc
outsb
mov
lahf
sub
cmp
mov
push
dec
nop
mov
rolb
inc
dec
pop
add
popa
mov
nop
repnz
push
lock
bound
loope
inc
xchg
das
mov
dec
repnz
sub
cld
std
or
nop
sbb
mov
jg
stc
stc
xor
movsl
arpl
inc
mov
cmp
mov
in
imul
jnp
mov
mov
adc
iret
or
lret
pop
jno
test
es
or
fwait
in
leave
sub
or
push
mov
push
shr
pop
and
shlb
pop
mov
xor
lods
into
pop
add
popa
pop
mov
loopne
add
out
sbb
mulps
pop
push
mov
mov
popa
push
mov
adc
mov
dec
mov
mov
sbb
xor
into
mov
filds
mov
in
test
jo
xlat
clc
shl
mov
aad
mov
pop
popf
push
xor
pop
jne
xlat
loope
push
movb
add
sbb
pop
push
push
dec
or
mov
fisubs
rcr
xor
icebp
mulb
cmc
lcall
dec
inc
fidivs
lcall
add
dec
loope
enter
or
andl
inc
test
fisubl
hlt
jmp
notb
subl
ret
mov
jge
ljmp
out
mov
add
add
gs
fabs
cmpsb
jae
ret
pop
pop
fdivl
mov
ss
mov
dec
jnp
mov
lock
xchg
hlt
mov
imul
popf
pop
das
push
push
cwtl
jo
add
cmpsb
pop
add
mov
mov
daa
xor
pop
repnz
and
sbb
insl
test
mov
sbbl
mov
scas
inc
insl
cmpb
out
popf
and
cmp
dec
fwait
mov
out
push
mov
pop
adc
add
mov
jb
xor
push
add
sbb
sbb
xchg
loope
rsm
dec
sub
shr
test
mov
pop
and
pusha
xlat
lret
data16
and
rorb
fdiv
insb
int3
or
mov
test
dec
cmpsb
dec
fsubrl
jo
xchg
orb
testl
aaa
lahf
addr16
sbb
ret
or
jmp
push
pop
mov
cmp
sbb
jp
iret
dec
pop
ficomps
aam
mov
data16
mov
cmp
push
pop
xorl
pusha
mov
cmp
xchg
jo
dec
int
into
mov
call
mov
out
in
cli
shlb
push
xor
xchg
in
call
sbb
outsl
xchg
loope
or
mov
rorb
cwtl
clc
add
mov
push
pop
lret
aas
sub
fisttps
adc
ret
fisubs
mulb
stc
adc
fstpl
cmc
fsubrs
dec
std
xor
mov
scas
jmp
add
sub
cmp
add
or
adc
es
mov
movsb
inc
lods
dec
or
aas
mov
jb
je
lds
add
sahf
mov
and
ja
in
psubsw
adc
lahf
mov
mov
mov
stos
add
cmc
dec
cmc
sbb
shll
push
andb
xchg
popa
xchg
mov
sbb
js
jmp
inc
pop
imul
xor
cmp
lcall
add
mov
push
xor
push
inc
push
andb
cmp
cmp
sti
xlat
cmpsl
inc
mov
lret
ss
test
cmp
fidivrs
pop
rolb
test
in
and
mov
jle
mov
sbb
pop
stos
add
and
mov
ja
insl
mov
xor
leave
jg
add
into
je
push
cmp
jg
mov
fmuls
mov
sbb
idivl
pop
pop
sub
mov
jmp
jnp
cltd
ror
xchg
pop
cmpsl
arpl
pop
imul
mov
lock
jno
sbb
ss
out
mov
out
sub
add
adc
jl
testb
fisttpll
popf
mov
jno
inc
leave
mov
mov
pop
mov
jbe
popa
dec
lods
pop
jnp
in
add
das
sub
cwtl
pop
cmp
aam
hlt
adc
bound
and
xor
fwait
lods
std
and
cmp
cmp
fldenv
mov
testb
mov
aas
into
lods
sbb
jo
ja
lea
pop
leave
dec
in
loopne
xchg
imul
or
ds
pop
and
daa
add
je
sbb
mov
cmp
inc
ret
adc
test
sbb
add
add
lret
jne
es
mov
jg
leave
jg
aad
inc
cld
sub
mov
cmpsb
push
xchg
sbb
mov
inc
xor
ja
fwait
lcall
cmp
out
fstpt
and
ficoms
push
into
test
dec
imul
inc
sbb
das
pop
mov
inc
sbb
xor
dec
bsr
ret
test
sub
jbe
xor
add
clc
xchg
add
call
mov
int
mov
rolb
xchg
xchg
insl
xchg
or
mov
ror
in
adc
pop
dec
pop
test
jnp
and
out
add
into
int3
out
push
fildll
movsb
or
sbb
xchg
gs
sub
lret
in
or
data16
adc
mov
fistl
nop
push
out
push
das
mov
add
mov
push
sbb
int3
jmp
dec
or
pop
jle
dec
add
mov
shl
sub
stos
mov
cmp
adc
popf
sbb
test
pop
cld
pop
xchg
mov
fsubl
mov
iret
add
jnp
add
hlt
jns
sub
jle
jnp
icebp
sub
cld
jo
push
or
sarb
lods
sahf
cmc
xor
sub
cld
out
inc
push
ret
fcoms
or
pop
xor
pop
or
xchg
cmp
and
fldenv
inc
pop
or
test
lods
pop
lcall
push
ss
loope
push
xchg
pop
and
push
pop
out
or
shrb
clc
movsb
arpl
ss
mov
in
jle
pop
std
mov
mov
fcmovnbe
loope
popf
dec
jne
lods
shll
mov
pop
ja
repz
jge
out
int
daa
sahf
shl
mov
xor
mov
gs
add
adc
clc
xchg
ficoms
shll
btr
add
pop
dec
add
inc
clc
xor
xor
adc
dec
in
mov
add
cs
jge
push
jmp
lret
mov
out
lret
je
flds
repnz
xor
inc
leave
mov
into
mov
adc
int3
loope
sub
push
xor
xchg
cmp
push
fbstp
pushl
fs
scas
jg
mov
inc
jbe
icebp
sbb
push
and
aam
xchg
sub
fisttps
in
cli
dec
inc
aam
add
js
mov
or
cld
ret
mov
outsb
sarl
inc
jno
xchg
xchg
shrl
dec
mov
jno
mov
ljmp
mov
jmp
cmpsl
and
cld
int3
cmp
outsb
lret
add
mov
and
test
stos
mov
push
shlb
sub
imul
sbb
ret
and
push
loopne
cwtl
leave
out
andb
call
call
push
fstpl
imul
or
pop
test
std
lcall
xor
in
mov
dec
iret
repnz
jg
adc
inc
divl
ds
shl
xchg
xor
sahf
scas
arpl
repz
pusha
enter
test
daa
mov
rclb
aas
cs
add
adc
stos
aad
or
inc
mov
cld
lret
sbb
sarl
adc
push
lods
xor
aas
mov
repz
xchg
div
cmp
sub
xchg
add
pop
or
mov
lods
jp
adc
shll
clc
xor
jp
out
mov
and
mov
or
lods
adc
aam
lcall
nop
jae
adc
out
xor
adc
mov
xchg
fstl
inc
es
daa
mov
add
int
mov
movsb
test
xor
leave
xor
inc
xor
mov
xchg
jo
adc
mov
insl
mov
sbb
inc
rclb
iret
mov
pop
jae
or
scas
imul
rolb
push
adc
mov
stc
adc
sahf
add
daa
loope
gs
xor
pusha
cli
mov
mov
jmp
fsubrl
xor
stc
push
add
xchg
je
sub
imul
push
clc
fisubrl
inc
xor
mov
lods
jo
pop
andl
sub
lahf
mov
and
out
sti
sbb
insb
sbb
mov
in
rol
clc
fs
outsb
jp
cld
and
mov
mov
add
mov
pop
mov
and
repnz
xchg
push
fildll
xchg
adc
bound
mov
sbb
jecxz
lahf
sub
add
ja
int
mov
mov
cmp
in
mov
sbb
fcoml
mov
jb
add
pop
adc
ret
pop
jne
and
or
sub
jecxz
mov
xchg
mov
js
jmp
jo
mov
xchg
push
loop
cwtl
lods
out
pop
ja
mov
popf
push
push
mov
mov
dec
xor
cs
outsl
es
test
add
cld
xchg
rcl
ss
fmuls
sti
shlb
adc
sti
dec
clc
stos
in
mul
jge
sub
cmp
mov
fstp
sbb
sub
sbb
mov
enter
or
ss
lret
jns
mov
inc
rorl
xor
sbb
push
pop
scas
mov
and
rcll
mov
lahf
sub
pop
iret
jb
mov
xor
pop
mov
popf
adc
pop
in
push
aam
xchg
jo
jo
jno
cmp
adc
ficompl
mov
dec
lcall
test
add
mov
push
pop
inc
ja
call
shll
jl
and
jns
sub
adcb
loopne
shl
sahf
dec
aaa
push
cmpsb
sub
add
dec
and
lock
and
mov
aam
fcomip
pusha
mov
pop
lds
sbb
mov
hlt
cmp
in
je
and
pop
xor
inc
xor
xor
or
inc
inc
out
mov
sbbl
fstps
xchg
mov
add
xchg
and
test
pop
sahf
push
call
xchg
jnp
lcall
mov
int
cmp
outsl
push
test
pop
add
sub
push
mov
mov
mov
in
fsubrl
mov
aas
stos
sbb
cwtl
repnz
out
mov
cmpl
lea
gs
pop
mov
mov
cmp
sub
imul
xor
pusha
mov
shlb
dec
xor
rol
sbb
int3
or
mov
and
orl
jb
pop
daa
sbb
and
xor
jge
sahf
int
mov
stos
cli
push
pop
mov
loope
inc
cmp
mov
jne
add
xchg
mov
dec
add
push
mov
push
push
scas
popf
xchg
sbb
mov
push
dec
mov
ds
xchg
mov
add
andl
lods
rclb
mov
mov
pop
gs
scas
popa
push
add
test
inc
xchg
jbe
cmc
out
mov
div
rcll
cld
push
scas
sti
and
daa
movsl
outsl
jbe
mov
adc
loop
xchg
out
lea
push
dec
fsubl
in
sub
mov
push
cmp
mov
add
ss
xor
adc
jecxz
mov
lods
and
repz
jge
pusha
pusha
dec
add
and
xor
mov
call
adc
call
sarw
and
inc
xor
mov
aas
sar
pop
mov
outsl
enter
ret
lcall
test
out
mov
subb
push
mov
mov
dec
sbb
outsb
fldenv
jno
sbb
jp
xchg
stc
orb
icebp
aam
ss
fcoms
in
mov
shlb
mov
cmp
push
dec
dec
mov
stc
es
lods
pop
mov
dec
pop
mov
xchg
scas
and
sub
pusha
xchg
imul
cmpsl
jmp
stc
push
loop
movsb
ret
lahf
subl
adc
add
or
fistps
stos
loopne
sub
stos
push
fmull
daa
pop
lea
mov
mov
mov
test
add
out
aam
sbb
mov
xchg
les
push
jg
movsb
push
aaa
xlat
out
sbb
push
pmuludq
or
dec
popa
das
popf
mov
pop
xchg
cmp
push
mov
clc
add
pop
inc
sbb
pop
mov
or
addr16
inc
sub
dec
pop
pop
cmp
aad
pop
sub
xor
adc
scas
inc
enter
sbb
fcos
into
jno
mov
out
jle
out
xchg
adcb
movb
cli
leave
xor
add
pop
loopne
inc
scas
fildl
jno
js
pop
sub
xor
scas
and
hlt
or
imul
push
mov
jb
test
sbb
rclb
mov
fidivrs
lds
fists
cli
mov
repnz
into
subb
in
mov
cmp
and
std
fistps
sub
pop
lods
mov
outsl
xor
dec
xchg
xchg
mov
cmp
loop
push
test
pop
push
push
ja
bound
std
mov
icebp
out
sbb
popf
and
cs
cmpb
imul
mov
pop
out
aaa
test
std
push
insl
or
data16
pop
cmpsl
add
mov
sbb
fdivrs
mov
lret
movsl
push
or
cmp
mov
bound
push
pop
dec
mov
jo
sti
shlb
dec
mov
clc
repz
in
push
cmc
das
cmpsb
insl
mov
jecxz
adc
out
dec
jns
test
sub
into
inc
test
dec
mov
jns
adc
in
inc
ljmp
rolb
cmpb
aas
iret
or
jl
sbb
jno
orl
xchg
ljmp
scas
adc
ss
mov
loope
pop
sub
jmp
and
mov
and
ret
add
push
out
fistpll
adc
leave
mov
push
dec
cmp
adcl
cmpsl
out
repz
adcl
lcall
push
shrb
subl
or
fisubs
sahf
jp
movsb
daa
adc
sbb
out
push
test
xor
out
aaa
das
sbb
mov
cmpsb
mov
cld
xchg
scas
cmpsl
pop
and
or
dec
popf
mov
mov
jmp
stc
stc
pop
pop
std
lods
inc
lret
jbe
or
pop
mov
outsl
ds
mov
cltd
cld
adc
pop
stos
xchg
sub
movsb
mov
cmpsl
sbb
and
push
or
mov
pop
dec
xchg
mov
jl
ja
jbe
pop
cmc
rclb
rcll
loopne
xchg
mov
out
pop
xor
jle
jo
or
addr16
leave
lea
mov
test
jae
arpl
or
xchg
daa
push
inc
sub
pop
push
mov
out
not
pop
jns
iret
out
lea
jge
and
jmp
pop
dec
outsb
notb
ja
nop
stos
sar
lods
lock
sub
push
movsl
jl
fbld
out
sbb
jecxz
nop
es
popa
enter
dec
hlt
sbb
std
ret
xchg
xchg
jo
xchg
ret
jmp
mov
in
mov
sbb
movsl
pop
add
or
jne
test
mov
jo
adc
ror
loopne
mov
imul
rorl
icebp
aam
push
jmp
cmp
es
repz
scas
adcb
or
mov
inc
mov
shr
mov
sti
insl
adc
js
mov
or
jecxz
out
gs
out
mov
or
testl
shrb
cmp
cmp
mov
or
push
push
mov
and
int
pop
cs
jmp
sbb
fldenv
inc
les
dec
mov
xlat
xor
ljmp
jne
inc
push
jno
test
sbb
aad
std
lock
add
sub
mov
sub
repz
cld
xor
cmp
cmovb
in
pop
mov
push
cmp
pop
jge
mov
xchg
and
ja
or
dec
cmpsl
jne
cwtl
push
push
xchg
das
dec
fwait
pop
rcll
and
inc
push
in
push
das
insl
and
ljmp
jae
push
repnz
mov
outsl
mov
loopne
sub
xor
nop
das
adc
cmp
mov
sti
inc
cmp
mov
sub
or
and
or
sbb
sub
push
mov
xlat
adc
cmc
jle
xchg
pusha
sbb
inc
jae
mov
jns
bound
lock
sub
movsl
fcomps
mov
rcll
or
mov
ja
adc
sbb
push
loop
cmp
loope
jne
sahf
push
sbb
xor
push
cmp
cmpl
pop
jne
mov
mov
fidivrl
bound
push
jl
stc
clc
mov
push
test
mov
mov
aad
or
push
int3
mov
int3
add
repnz
es
cmp
clc
std
pop
jmp
mov
sbb
xlat
add
mov
ds
in
out
enter
or
mov
pop
jae
pop
mov
mov
add
pushf
push
int3
inc
add
sti
aam
mov
ljmp
out
repnz
in
cmc
pop
test
dec
pop
adc
test
mov
cld
into
lret
mov
mov
adc
cmp
mov
lock
adc
repz
cmc
test
shlb
push
movsl
add
fimuls
das
notb
imul
or
sti
pushf
mov
movsb
sbbl
lret
and
cwtl
repnz
adcl
or
adc
pop
and
clc
add
enter
cmp
xlat
aaa
in
jbe
and
push
je
inc
jno
adc
or
fwait
jno
jnp
adc
call
cmp
int
jae
ljmp
les
mov
push
lret
jne
push
add
mov
xchg
test
push
xchg
adc
adc
lret
sub
aas
push
jb
or
pop
or
cmpsb
mov
add
imul
or
dec
push
sbb
aam
adc
sub
cmp
xchg
sahf
push
push
add
leave
add
dec
adc
jbe
sbb
gs
sbb
fsts
lock
jg
or
cli
cmp
inc
ss
pop
push
and
push
pop
imul
pop
cwtl
mov
and
mov
mov
rcll
sbb
arpl
fdivs
and
adc
and
in
push
loopne
pop
jne
pop
lcall
jecxz
mov
and
xlat
scas
mov
jp
sub
jb
sub
rcl
inc
aam
out
add
cwtl
inc
rorb
xchg
and
add
scas
mul
cmp
pop
fisttps
pushf
int
mov
addb
inc
cmp
xchg
inc
cmc
cs
cmp
jp
mov
jmp
call
cld
xchg
das
mov
jbe
mov
jnp
mov
lock
add
xor
jnp
add
adc
mov
jle
jmp
add
lretw
pop
adc
xchg
into
cs
jge
es
mov
dec
or
mov
push
gs
aaa
enter
int3
dec
pop
xchg
sbb
mov
mov
xchg
xchg
enter
push
movsl
pusha
pop
mov
pushf
rcrb
dec
xchg
cmpsb
fstps
mov
lods
andb
lret
push
rcr
aad
aas
popa
ficoms
incb
clc
jae
push
add
and
fildll
xlat
add
lret
jno
fwait
jle
sbb
jp
int3
or
mov
addr16
decb
fisubs
in
mov
std
xlat
sub
enter
dec
insb
mov
jno
pop
cmp
sti
mov
cwtl
jae
jge
adc
jb
adc
sahf
ffreep
sub
cmc
cmc
mov
push
add
pop
mov
jbe
cmp
test
mov
cmpsb
mov
or
or
loop
mov
xchg
xlat
jnp
repnz
xor
out
cmp
xchg
jnp
int3
sbb
cmpsb
add
add
pop
and
mov
push
push
in
xchg
cs
daa
push
popa
cmp
mov
sbb
rep
nop
shrl
call
xchg
or
lahf
xchg
add
jo
jbe
or
stos
loopne
adc
jb
lret
test
add
enter
cmp
loop
xchg
test
into
sub
in
sub
jbe
push
roll
xor
push
xchg
push
sub
push
jbe
push
pop
mov
sub
stos
hlt
mov
ret
inc
add
sub
lret
mov
add
push
popa
mov
jecxz
dec
sbbl
xchg
sbb
les
clc
nop
loopne
call
add
jge
std
inc
jg
cs
xchg
loope
jne
push
dec
cmp
sbb
andb
mov
sbb
in
sahf
aaa
mov
push
mov
and
enter
jmp
add
and
lret
pop
loope
xchg
or
into
inc
jle
fs
bound
inc
fistl
ret
jl
and
push
add
dec
ret
adcl
dec
aam
ficompl
push
jns
inc
sbb
fs
ds
scas
shlb
outsl
cmp
popa
pop
shrb
mov
sbb
mov
push
std
mov
adc
lock
sub
popa
mov
pop
and
in
testb
jne
lods
fcoml
inc
shrb
jno
xchg
addl
xor
mov
and
or
outsl
mov
aaa
es
jmp
dec
xchg
inc
push
in
push
in
icebp
dec
xchg
repnz
mov
lds
fildl
aad
or
jnp
add
push
sahf
fsts
xor
cmp
add
mov
lock
sbb
outsb
mov
andb
xchg
scas
sub
mov
test
sti
push
aas
loopne
xchg
or
cmpsb
pop
mov
and
inc
mov
aas
mov
jmp
xchg
xor
arpl
add
pop
sub
iret
clc
lods
push
xlat
enter
fbld
mov
decl
xor
sbb
inc
lock
lret
ds
ljmp
adcb
inc
frstor
mov
dec
loopne
mov
cmpsl
pop
shlb
aad
mov
sub
fldl
add
hlt
inc
sti
jl
imul
cmp
mov
out
jmp
fwait
adc
or
xchg
sbb
arpl
and
fcoml
mov
lods
jle
data16
cs
pusha
sbb
or
cltd
lds
push
xchg
xchg
rep
incl
outsb
inc
adc
subl
lcall
mov
push
jne
out
cmpsl
cmp
pop
sub
mov
aad
adc
cltd
sarb
je
out
jno
xchg
addb
mov
and
test
shrb
xchg
dec
push
repz
shr
lods
pop
test
xor
pop
xor
aam
pop
xor
lret
das
cli
movsl
or
sub
lahf
pop
mov
int
in
je
jecxz
scas
lods
mov
pop
hlt
mov
add
mov
movsb
aaa
dec
pop
fisttps
jno
cmpsl
int
leave
cmp
dec
lods
pop
xchg
cs
cmp
rcl
dec
outsb
out
sbb
sbb
mov
or
into
gs
pop
inc
in
push
push
loop
iret
mov
dec
pop
dec
bsr
iret
int3
imul
leave
lds
inc
cmp
dec
dec
repz
xor
xor
cltd
push
scas
insb
gs
adc
adc
xchg
sbb
cmc
mov
cld
mov
idivb
out
mov
std
int
pop
or
push
xchg
scas
and
daa
inc
push
cwtl
aad
js
in
mov
mov
andb
pusha
lods
push
or
jnp
rol
cmc
fadds
xchg
lea
jno
ja
mov
xchg
pop
or
inc
jle
ret
mov
cmc
rolb
jb
mov
cld
outsl
xor
push
cmc
mov
fsts
xchg
negb
xchg
cs
jno
aas
cld
jno
mov
jno
pop
add
xchg
mov
mov
xchg
add
cwtl
into
or
out
out
fistps
xchg
repz
mov
sub
outsl
sub
cmp
add
xor
sbb
mov
xor
sti
sub
loope
sbb
sub
mov
leave
stc
psubq
xlat
ja
lods
out
aaa
push
adc
jnp
mov
xchg
aad
xchg
mov
test
dec
std
int3
mov
pop
xchg
mov
dec
ret
dec
xchg
add
stc
mov
ss
lahf
lods
xchg
mov
jno
mov
pusha
pop
int3
movsl
push
stos
lea
into
cmp
adc
and
add
xor
jp
out
mov
pushf
dec
fs
mov
and
lea
pop
push
jne
mov
mov
test
out
mov
lds
sbb
cltd
imul
jmp
push
into
inc
inc
clc
pop
cmp
test
push
dec
mov
or
aas
dec
mov
aas
xchg
aaa
ds
jae
scas
adc
or
mov
inc
out
lea
add
pop
and
lods
dec
sub
push
in
fadds
inc
inc
xor
sbb
int3
mov
fs
cmc
add
test
sub
mov
lret
or
aad
inc
push
dec
and
dec
xchg
cmp
daa
mov
roll
dec
mov
inc
xor
cld
add
adc
imul
lahf
pop
sub
fistps
adc
sbb
cmp
adc
ljmp
mov
or
dec
in
xor
mov
rcrl
pop
fsubr
sbb
pop
out
insl
push
mov
mov
rcr
xchg
aaa
cs
gs
mov
cmp
sbb
movsl
jecxz
jne
out
sbb
push
pop
popf
icebp
outsb
pop
pop
dec
mov
push
mov
loope
bound
stc
xor
daa
lret
adc
cwtl
shlb
data16
nop
push
jmp
pmaxub
and
js
imul
xor
mov
out
jb
popa
shl
icebp
movsb
sub
ljmp
inc
mov
jge
lcall
mov
mov
ds
xor
push
inc
jno
lods
mov
and
repz
lods
mov
mov
sbb
iret
sbbl
sub
mov
repz
pop
mull
fs
and
and
push
dec
or
mov
add
lods
ret
or
enter
pop
mov
and
dec
sbb
mov
adc
out
cmp
pushl
xlat
mov
shl
pop
paddq
adc
cmp
xor
outsb
pop
call
scas
ja
inc
xchg
mov
pusha
leave
fldt
mov
movsl
pop
shlb
fldcw
xor
xchg
mov
popf
push
xor
dec
das
push
jb
or
std
mov
dec
xchg
pop
mov
stos
add
subl
inc
js
sti
mov
iret
inc
pop
fiadds
fidivl
mov
fst
cmp
lods
mov
and
sub
shll
and
add
dec
cmp
dec
lods
xor
sahf
std
add
jp
jns
adc
orb
out
in
es
negb
in
out
adc
and
ja
test
movsl
mov
lcall
es
inc
cmpb
dec
insl
jno
cmc
loope
cltd
adc
sbb
push
mov
push
subb
push
push
inc
lret
out
jge
mov
int
lods
mov
gs
aas
pop
test
or
addr16
sbb
je
and
lgs
cmp
mov
pop
in
jnp
lret
fwait
insb
nop
pop
or
stos
add
cmp
cmp
cld
xchg
push
call
cli
push
mov
insb
jno
push
js
fistps
or
cltd
loope
outsb
mov
mov
mov
cld
sti
jbe
push
ret
or
js
mov
loop
pusha
xlat
hlt
dec
lea
cmp
ss
cmp
imul
imul
lock
aam
bound
das
fs
in
loope
faddl
outsb
xor
call
lahf
mov
outsb
cmp
xor
icebp
inc
xchg
mov
lret
mov
repz
std
xor
je
push
aas
pop
gs
lea
icebp
adc
scas
xchg
enter
lcall
sbb
pusha
stos
inc
xchg
fldenv
mov
out
dec
pop
xor
das
sub
adc
arpl
cmp
adc
sub
loop
cwtl
add
and
into
add
insl
jb
rcll
jb
aaa
jp
lret
test
mov
jbe
iret
cmp
jne
lret
cmp
jmp
push
jno
int3
stos
fst
mov
adcl
in
mov
lret
jne
roll
and
sahf
lea
inc
fdivrl
mov
push
or
cmpsb
xlat
fimuls
je
adc
push
loope
imul
mov
pop
loopne
mov
imul
dec
cli
mov
or
clc
cld
rclb
sub
jp
jmp
aas
xor
lea
sbb
outsb
mov
xchg
xchg
cmpsb
sub
add
xor
stos
push
and
sub
pop
mov
jno
dec
push
out
std
clc
int
xor
stos
pop
sbb
jle
jl
cli
and
mov
adc
and
daa
xlat
adc
push
jp
sbb
pusha
lcall
add
sahf
out
and
subl
push
insb
int
test
filds
add
inc
loope
mov
jb
mov
xor
jg
pop
cmp
push
aas
mov
into
add
andl
xchg
cmp
fwait
lret
mov
xor
cmp
mov
xchg
movsl
jnp
inc
sub
arpl
sarl
pop
insb
addl
test
and
sub
cmp
sub
xchg
out
mov
mov
int
insl
add
gs
fcoml
push
and
dec
cmc
decl
xor
mov
fists
cmp
in
pop
pop
rclb
fst
add
mov
pop
repnz
movsb
xchg
inc
leave
mov
or
mov
adc
pop
cmp
add
pop
jmp
xor
cmpl
push
dec
xchg
cmp
pop
sbb
xchg
mov
push
repz
push
mov
mov
sbb
fidivrs
shlb
mov
mov
or
jo
xchg
je
sub
aas
fistpll
and
ret
arpl
lret
mov
push
adc
subb
xchg
add
std
adc
movsl
lods
daa
or
fiaddl
xor
ret
push
adc
add
pop
fxch
dec
lret
jmp
imul
xchg
fidivrl
lret
jbe
push
xchg
or
push
aad
in
enter
shl
xchg
aam
mov
push
or
dec
mov
dec
icebp
mov
or
jmp
in
adc
dec
lahf
outsl
mov
cmp
sbb
mov
aas
ja
and
lock
or
or
inc
inc
fsubl
inc
cwtl
mov
dec
xlat
stos
inc
mov
xchg
dec
xchg
scas
or
sbb
nop
add
mov
into
push
imul
sti
jbe
addr16
ret
or
sbb
jl
std
out
push
repz
pop
xchg
or
int
jg
out
aaa
lcall
js
cmp
push
push
xor
mov
aas
pop
cli
add
and
pop
cli
fisttps
outsl
add
dec
fnstenv
add
ror
lcall
add
mov
dec
push
push
lock
dec
push
inc
out
in
adc
sub
push
mov
inc
and
popf
fmul
into
testb
xor
xchg
pop
outsl
dec
setp
nop
xchg
aaa
stos
cmp
insl
roll
je
jno
je
imul
dec
add
inc
pop
sbb
mov
sub
sbb
cs
and
pusha
aas
leave
or
sbb
xchg
pcmpeqw
ret
cmp
repz
mov
aam
xlat
mov
push
lret
shll
push
test
repz
cmc
lods
incb
lock
cmp
mov
jb
fimuls
cltd
push
jae
dec
fdivl
push
pop
hlt
not
sub
dec
icebp
push
and
repnz
ljmp
pop
decb
pop
fs
lahf
jnp
int3
fwait
pop
inc
inc
mov
sbb
call
sub
test
imulb
ja
cmpsl
push
cld
bound
jns
jo
enter
shll
fnstsw
data16
sub
notl
mov
mov
lahf
bound
mov
or
jecxz
mov
mov
cltd
mov
mov
mov
dec
adc
pop
adc
subl
cltd
push
scas
incb
sub
pop
mov
ds
mov
jbe
jg
or
pusha
ja
xor
mov
xchg
dec
and
add
jmp
mov
arpl
mov
push
mov
push
xlat
imul
loopne
inc
fbstp
xchg
dec
ds
dec
out
push
dec
push
imul
mov
inc
decb
pop
iret
subl
mov
popf
popa
jne
hlt
lret
xor
adc
rcll
jne
dec
aam
dec
xchg
jnp
iret
inc
inc
add
jbe
test
cmp
sub
pop
in
hlt
repz
nop
icebp
push
jno
jecxz
jae
bound
in
into
test
mov
jae
jp
jle
mov
nop
add
dec
enter
into
call
sar
subl
stos
or
mov
dec
cld
ds
lds
and
aas
inc
and
pop
test
inc
sbb
mov
lret
jb
dec
xchg
ficomps
movsb
pusha
cs
pop
mov
jmp
shrb
xchg
xchg
cld
fsubrs
mov
jmp
test
leave
adc
xchg
sbb
or
scas
sub
test
lods
shrl
inc
xchg
fwait
push
adc
aad
popf
xor
pop
roll
nop
arpl
dec
test
push
fsubrl
cld
mov
icebp
dec
jmp
jl
mov
mov
in
movsb
jmp
cmc
aas
out
popf
fdivp
cli
xchg
int
sbb
shlb
and
movb
fwait
and
seto
cmp
stos
and
add
lods
test
mov
jnp
sub
std
gs
dec
insb
insb
mov
aam
test
sarl
mov
mov
add
adc
or
fstps
dec
and
lods
pop
shll
push
es
push
in
cmp
jp
xchg
nop
dec
out
repz
ret
aad
fxch
jnp
into
sub
push
ljmp
call
mov
in
iret
inc
jmp
sub
sahf
fsubl
cwtl
or
rol
push
sub
nop
in
add
js,pn
sbb
fisubrl
push
nop
test
xorl
mov
shl
cmp
or
cmpsl
adcl
mov
push
decl
adc
test
inc
outsl
and
inc
sbb
sub
pop
shll
dec
into
sbb
xchg
adcl
mov
call
in
cmc
mov
mov
xor
pop
sbbb
bnd
cmpsl
jae
push
jge
addr16
jno
mov
sbbl
pop
inc
icebp
jae
add
insb
or
dec
inc
jmp
mov
fisubl
stos
out
mov
sub
cmovp
xchg
and
pop
xchg
cld
jmp
cwtl
inc
icebp
cltd
push
or
roll
sbb
mov
and
int3
mov
push
loopne
jle
stc
fldenv
pop
fsubs
ds
lret
pop
inc
sub
loope
mov
xchg
ret
jmp
xor
lods
fwait
inc
dec
dec
aas
add
dec
xlat
mov
loope
mov
out
shll
mov
dec
fsts
test
int
cs
dec
mov
fwait
out
add
aaa
test
call
jbe
loopne
sbbl
add
jg
daa
sbb
rcr
sub
mov
sbb
jge
or
movaps
cs
pop
fiaddl
rolb
pop
mov
push
xor
fninit
push
imul
xor
js
clc
loopne
addr16
adc
mov
xor
mov
out
arpl
lods
imul
clc
jnp
ror
xor
mov
mov
clc
xchg
pop
subl
xchg
mov
push
pop
mov
adc
dec
inc
scas
push
subb
pop
mov
adc
out
add
mov
inc
mov
pop
xchg
push
xchg
lods
scas
jge
inc
xor
sbb
lcall
adc
lahf
pop
lods
mov
xchg
cltd
xor
mov
pop
fwait
jb
push
jg
ss
mov
mov
push
orb
test
into
mov
das
push
mov
and
inc
scas
mov
imul
pop
xor
cld
mov
pop
in
pop
stos
xchg
push
sub
ds
adc
loope
out
and
xor
std
cltd
test
mov
mov
into
fldenv
ret
xchg
ja
pop
mov
mov
andb
xchg
jmp
stc
sub
pop
fimuls
daa
ret
push
push
ret
ror
ljmp
pop
out
call
dec
imul
sbb
ret
mov
enter
jmp
lret
call
in
into
adc
xor
sub
imul
or
jl
test
cmp
mov
cltd
add
xchg
push
leave
pop
cmp
mov
add
jae
mov
incb
cs
xlat
ret
sbb
dec
push
pop
es
ds
les
xchg
dec
jo
mov
insl
test
scas
test
mov
dec
adc
jo
es
insl
call
mov
sub
cmp
pop
stos
mov
test
cmpb
in
or
lret
je
push
cmpsb
lock
xchg
sbb
pop
mov
xor
xchg
mov
add
push
andb
lds
push
push
mov
in
push
pop
decl
jecxz
add
sub
mov
pop
or
adc
xor
fdivs
pop
daa
bound
int
out
lock
mov
mov
sbb
lret
outsb
loope
dec
mov
cwtl
in
sub
ds
daa
sbb
idivl
or
cld
sub
jle
mov
and
inc
sbb
mov
andb
mov
dec
push
cmpsl
mov
ljmp
movsl
push
or
jg
sub
or
sub
in
jg
mov
mov
aam
loope
lock
mov
mov
push
enter
jle
filds
xchg
add
sarb
xchg
xor
cmp
rcl
testl
mov
push
mov
inc
sahf
std
jge
mov
mov
fs
add
into
or
sub
shlb
adc
lcall
fdivrs
ljmp
and
mov
jp
and
aad
cli
insb
ljmp
cli
mov
cltd
loopne
xchg
cli
add
and
repz
rorl
stos
or
cmc
loope
jns
or
rcr
cmp
jge
stos
les
das
mov
faddl
imul
scas
push
shll
aad
inc
das
ja
and
or
in
sti
pop
jecxz
leave
loopne
jge
in
aas
dec
push
jno
jne
push
daa
cmc
xchg
mov
ret
or
pop
mov
rolb
loopne
lock
adc
fpatan
inc
das
adc
inc
mov
jp
popf
mov
mov
test
adc
push
adc
fmul
adc
inc
in
dec
cmp
inc
dec
xchg
sbb
jl
mov
pop
mov
imul
pop
lret
xchg
or
sbb
sub
cmp
adc
sub
jbe
inc
out
in
xchg
xchg
ds
inc
adc
in
jge
push
pusha
mov
push
addr16
stos
loope
inc
cmc
jg
xchg
cld
je
fimull
jg
addr16
mov
test
jp
adc
jns
sbb
cmpl
stos
ret
push
sub
popf
cmp
icebp
push
aam
jle
out
ljmp
mov
mov
arpl
paddw
add
rcr
cmp
mov
xor
mov
adc
in
and
mov
fisttpll
mov
and
fisubrs
sbb
dec
adc
out
inc
fistps
xor
mov
lahf
filds
out
pop
mov
xchg
stos
scas
lret
aas
aaa
das
movsb
jno
jmp
icebp
in
cmpsb
mov
mov
cltd
dec
or
mov
mov
stos
sub
adc
mov
xchg
sub
enter
jo
out
ret
pop
push
jle
ret
adc
pushf
daa
xchg
pop
mov
addr16
push
sub
icebp
data16
es
leave
rorb
test
adc
test
fidivrs
mov
pop
mov
repz
and
enter
mov
mov
xchg
push
insl
std
sbb
mov
xchg
or
out
mov
sbb
push
dec
pop
arpl
hlt
add
enter
cmpsl
mov
dec
lods
enter
in
lret
cmp
mov
push
xchg
jo
jle
pushf
testb
dec
jb
xlat
cmp
push
adc
add
xor
ss
mov
jge
jnp
testl
add
popa
lretw
inc
test
jl
loopne
pop
leave
cmp
or
outsl
xchg
nop
dec
xchg
jae
add
add
fstps
test
nop
pop
negb
and
ficoml
dec
ret
dec
sbb
insl
dec
call
cmp
pop
mov
js
xchg
bound
push
mov
xchg
add
push
hlt
test
pushf
sbb
popf
sbb
lods
mov
jne
pop
xor
or
sbb
nop
in
add
std
test
lods
gs
push
inc
adc
mov
stos
xchg
test
bound
mov
out
or
adc
in
xor
cmpsb
or
adc
cmp
aaa
mov
out
inc
cmpsb
ja
insb
daa
inc
addr16
xor
pop
jnp
pop
push
insl
js
sti
mov
push
cmp
pushf
loopne
mov
aam
lcall
flds
jne
hlt
popa
cmp
jg
fwait
dec
push
adc
push
fldl
call
ficoml
pop
nop
adcb
bound
cmp
leave
sub
adc
jns
xor
pop
push
jnp
pop
and
pushl
xchg
pop
addr16
push
lds
out
test
inc
jecxz
and
mov
ret
cltd
inc
je
popf
fstl
loopne
movsb
mov
mov
cli
aam
adc
cmc
sub
xchg
clc
daa
cmp
fldl
cmp
fs
fcomps
push
push
sub
dec
enter
stos
mov
push
xor
mov
xchg
andl
mov
test
fdivs
add
xchg
bound
sbb
decb
rcl
sti
push
jg
adc
stos
scas
cmp
xchg
sub
xlat
fisttpl
dec
dec
insl
outsb
in
push
pop
inc
in
add
inc
jnp
push
mov
out
popa
divb
inc
scas
scas
xchg
sub
xor
xchg
jl
push
add
pop
mov
stc
dec
and
push
mov
scas
and
popa
leave
inc
mov
add
adc
out
shrb
cmpsb
cli
mov
stos
push
incl
pop
jno
or
imul
subb
mov
lcall
stos
popf
cs
cmp
mov
clc
jo
loop
fdivrs
shl
push
jle
cmpsb
in
mov
adc
and
test
dec
jmp
pop
movsb
pushf
mov
pushf
dec
push
pop
xor
xor
jnp
sub
call
add
or
cmp
adc
sub
pop
xor
pop
outsl
jne
pushf
add
xchg
add
iret
mov
int3
js
sbb
mov
jns
daa
push
mov
inc
fimull
nop
mov
adc
dec
xchg
cmp
xchg
dec
data16
data16
dec
sbb
cmp
rol
push
and
adc
nop
movsb
out
fsubs
arpl
jno
mov
test
pop
nop
shrl
lds
ds
mov
test
insb
insl
in
out
div
xchg
mov
add
mov
xchg
dec
xchg
push
push
lock
iret
leave
stos
ljmp
mov
xchg
inc
push
push
outsb
xchg
sub
pop
pop
pop
adc
push
lock
repz
ja
inc
xchg
int3
cli
jnp
inc
aaa
jmp
repz
shl
sub
aas
push
test
fldenv
jne
inc
sahf
lds
jl
sti
popf
std
imul
inc
out
out
loopne
fs
lret
mov
imul
fisttpl
mov
out
incl
pop
dec
inc
imul
pop
inc
push
clc
push
mov
shl
mov
out
ds
sub
add
mov
lods
jb
popa
sti
lds
and
push
stos
idivb
jl
cli
pop
in
stos
mov
pop
arpl
add
pop
in
mov
out
popa
clc
sbb
push
xchg
add
dec
aas
push
or
ss
sub
add
and
jno
out
cmp
jb
sub
cmc
sti
sub
xor
dec
dec
pop
incl
jle
adcb
out
cmc
mov
popa
mul
xchg
mov
jb
pop
sbb
in
repz
sahf
enter
sti
ds
aas
or
testl
or
divl
inc
movsl
and
mov
into
push
gs
fcmovnu
insl
negb
sbb
mov
sbb
adcl
cmp
xchg
inc
lods
push
mov
pop
mov
bound
adc
pusha
pop
jge
mov
cmp
push
xchg
jp
cmp
fidivl
les
fidivrl
cmpl
xchg
mov
repz
jne
add
push
fcoms
or
adc
sbb
add
push
icebp
lods
test
pushf
or
arpl
mov
mov
adc
jle
xchg
incl
bound
jbe
or
shll
ficoml
adc
mov
jns
adc
xorl
aas
jnp
mov
push
orl
xorl
sub
jb
lods
or
push
dec
add
loopne
xchg
rcrb
fcoml
jg
or
mov
xor
jnp
mov
mov
lret
adc
xchg
scas
iret
xchg
in
pop
pop
in
adc
das
fwait
daa
ret
lock
xor
std
ret
inc
lret
in
jne
in
push
xchg
push
aas
xor
or
pop
mov
cltd
add
xchg
ret
pop
leave
lods
out
push
cltd
pop
pop
clc
pop
fists
ret
lcall
in
mov
xor
adc
fistps
or
dec
cmp
fisubs
stos
xchg
mov
push
scas
adc
shll
imul
dec
push
fnsave
cmp
fsubp
push
je
inc
sbb
rolb
andb
test
out
sbb
rorl
outsb
cs
pusha
inc
ret
out
push
rcll
mov
jo
xor
les
fisubs
ss
inc
push
mov
les
jo
call
push
scas
imul
out
sbb
bound
xor
out
sub
call
and
das
sbb
sarl
pop
jb
adc
test
sbb
leave
add
or
jmp
sbb
pop
mov
lea
xor
pop
pushf
sbb
push
fsts
fwait
mov
mov
ljmp
sub
lods
sub
mov
fcomps
aad
cld
jle
push
mov
cs
dec
pop
loope
int3
and
cmc
addr16
cli
aaa
sub
mov
rcrl
inc
push
lock
test
jnp
les
pusha
inc
mov
push
icebp
scas
gs
sub
lahf
mov
inc
sub
cltd
cmp
inc
scas
sti
out
and
ror
add
fsubrs
aam
dec
xor
shrl
ja
pusha
sbb
add
sub
cmp
push
mov
mov
mov
addr16
in
leave
pop
mov
cmp
test
inc
je
xchg
jp
cltd
jmp
imul
push
xchg
pop
cmp
or
xor
dec
enter
or
stos
aad
repnz
inc
pop
inc
dec
push
aad
ret
shlb
je
and
daa
lods
arpl
fwait
xchg
mov
adc
pop
sub
mov
negb
jl
lods
icebp
inc
jae
cmp
cmp
sub
adc
ja
ret
jo
mov
loope
inc
in
std
idivl
std
and
mov
jge
push
jno
cmp
je
jl
jg
jae
das
data16
jo
iret
cwtl
in
das
mov
repnz
mov
push
jns
das
jp
mov
add
loop
jle
cmp
into
fnstcw
jo
xchg
fstl
incl
jb
mov
sarb
and
lds
iret
enter
mov
inc
inc
cmp
pop
sarb
mov
sbb
push
sub
xchg
pop
sub
loop
cmp
xlat
inc
xchg
sub
xor
adc
pop
push
jecxz
aad
pop
nop
and
nop
jnp
mov
xor
cltd
fmuls
in
mov
cmp
jecxz
hlt
push
cmp
push
ret
sti
dec
push
push
adc
mov
mov
pushf
rclb
jge
lcall
or
mov
lock
cld
shlb
adc
daa
jle
fsubr
lods
sbb
adc
out
sub
mov
orb
add
inc
sub
test
int3
xor
insl
les
and
cltd
or
ja
popa
popf
outsb
pop
ficoml
out
jne
or
test
inc
and
jno
add
nop
or
xchg
pop
decb
data16
dec
adc
lock
push
movsl
fmuls
data16
inc
and
std
dec
sar
mov
xchg
push
mov
add
mov
mov
push
mov
das
inc
xchg
add
mov
push
jecxz
mov
push
add
data16
ret
and
add
and
jge
aaa
out
inc
mov
dec
outsl
je
jp
push
dec
push
xor
fmuls
cwtl
inc
sti
xor
pop
out
adc
jno
popf
fwait
scas
cltd
ja
out
popf
pmuludq
mov
dec
clc
test
pop
das
int3
test
repnz
xchg
jne
pop
and
insb
adc
adc
ds
das
imul
loope
dec
inc
adc
int
hlt
or
jne
xchg
out
in
mov
int3
lds
push
lock
mov
scas
push
mov
movsb
je
shlb
jmp
out
pcmpeqb
nop
xchg
jnp
dec
push
mov
mov
mov
or
imul
mov
xchg
mov
out
not
bound
popw
in
lahf
ss
ret
push
syscall
pop
xor
cmp
or
mov
adc
gs
out
out
or
adc
mov
sbb
mov
jb
add
mov
sub
addr16
shlb
les
int
cmpl
mov
push
clc
je
aam
js
push
mov
mov
add
es
sbb
into
adc
fcoml
mov
incl
lcall
pop
mov
clc
popf
imul
cli
dec
xor
pop
leave
test
jle
imul
cmp
movsb
insb
mov
mov
mov
sbb
rol
add
arpl
sub
push
mov
mov
xor
push
imul
andb
cmp
ds
add
js
push
jno
push
jl
stos
psubb
add
mov
pop
jp
mov
or
loope
inc
xchg
cli
mov
sub
jg
fldl
push
das
mov
xor
xchg
lock
out
bound
int3
test
jne
popa
and
cli
std
cmc
fisttpl
fdivl
repnz
lods
dec
lcall
xchg
int
stos
cli
rorl
int
aaa
or
and
push
dec
movsl
xchg
fucomi
adc
mov
fwait
mov
lret
scas
sahf
dec
repz
and
mov
arpl
xor
das
push
fsubs
xorb
das
pushf
imul
mov
sbb
xlat
in
adc
mov
in
sbb
jo
out
sub
jle
or
add
shll
inc
dec
sbb
mov
lret
pop
mov
insb
dec
dec
xchg
sti
xor
lods
mov
lods
out
xor
mov
mov
jb
mov
push
fnstsw
daa
xor
stos
or
and
popf
rolb
std
sbb
inc
jecxz
jae
das
out
inc
shll
cmc
jno
insb
in
lcall
pop
dec
test
divl
rolb
test
add
xchg
es
lahf
sti
jmp
push
cmc
pushf
cs
insb
mov
out
fiadds
outsl
jb
daa
and
pop
xchg
add
in
mov
add
inc
push
icebp
ret
idiv
inc
jno
jl
jl
sbb
and
mov
es
nop
mov
or
fnsave
rdmsr
xor
sti
and
xchg
mov
mov
insl
lret
add
inc
pop
jecxz
fcmove
push
adc
inc
xor
inc
imul
das
mov
cld
and
shl
push
clc
sub
mov
movsb
add
addl
xchg
ret
xchg
xor
jl
ret
add
out
cmpsb
das
xor
push
cmpsl
cmp
test
push
mov
mov
adc
loop
mov
mov
sbb
or
fidivrl
or
std
loope
pop
inc
xchg
stos
lcall
inc
pop
in
icebp
xchg
aas
jae
xlat
jecxz
pop
iret
ja
addr16
dec
orl
jmp
fadds
bswap
aam
lock
sarb
rcll
addb
lock
idivb
addr16
jno
mov
aaa
inc
bound
js
in
xor
arpl
sbb
mov
cmpsl
int3
out
or
mov
bound
inc
call
and
cmc
test
push
dec
scas
rdmsr
fsub
mov
dec
inc
cli
test
xor
daa
push
xchg
in
and
cli
fnsave
dec
lahf
imul
and
and
ljmp
sbb
test
xchg
push
xor
sub
lret
shlb
inc
es
sub
pop
cmpsl
aad
mov
sbb
mov
gs
std
mov
and
xlat
jns
test
sahf
jmp
fwait
inc
outsb
ret
jle
std
inc
mov
xor
adc
cmpsl
jl
push
aad
movsl
lret
push
inc
pop
lea
insb
lcall
or
pop
add
xchg
lcall
jns
pop
jo
or
or
push
gs
xchg
push
jle
rcll
test
mov
pop
jno
movsb
xchg
push
cmp
in
lcall
stos
fxch
mov
mov
sub
xchg
and
adc
adc
fsubr
fisubs
into
out
cmp
inc
mov
xor
add
dec
mov
or
jmp
sub
pop
xchg
add
popa
scas
or
push
repnz
js
jnp
sbb
ljmp
xchg
pop
pop
jae
cmp
std
mov
or
mov
movsb
scas
mov
stos
jbe
rorb
int
dec
mov
mov
or
in
jge
loopne
pop
push
or
lock
adc
addb
subl
stc
andl
bound
stos
fucomi
test
imul
gs
lods
cmc
sub
repnz
sbb
lock
subl
shlb
and
cwtl
mov
int
sarb
icebp
js
nop
rcrl
jo
iret
mov
xor
shrl
mov
ja
sbb
jl
mov
in
jbe
inc
xchg
push
shll
iret
pop
xchg
mov
jns
addl
dec
mov
adc
push
vsubss
pop
or
sbb
je
adc
je
and
mov
out
arpl
les
add
imul
mov
fiaddl
enter
push
jmp
cmp
and
sub
mov
js,pt
dec
daa
pushf
dec
xchg
xchg
in
push
jge
dec
stos
cmpsl
xchg
adc
add
sbb
ret
pop
lods
hlt
push
out
mov
ret
call
pop
daa
sbb
xor
in
mov
test
xchg
in
imul
add
mov
test
ret
and
rorb
inc
mov
jg
push
mov
stos
out
add
dec
loop
les
jg
lea
xor
movsb
push
and
add
add
ljmp
cmp
mov
ficoms
xlat
lods
shrl
add
jb
sub
jmp
add
adc
dec
push
popa
clc
fistps
jecxz
leave
adc
mov
sarb
repz
lods
clc
call
inc
sub
lock
xor
fstl
xor
sbb
js
in
aaa
sbb
dec
lds
mov
add
fcmovnb
xchg
push
in
mov
repnz
mov
xchg
adc
adcl
pop
xor
pop
lcall
inc
popl
inc
dec
inc
scas
jb
and
fbld
js
mov
ret
xchg
mov
mov
xchg
mov
mov
xlat
jns
push
mov
push
mov
pop
add
add
shrl
or
sub
and
add
jb
stc
jp
mov
nop
xchg
adcb
jns
pop
std
inc
jno
mov
sub
fcmovnb
mov
push
xchg
mov
adc
pop
jo
mov
jecxz
into
test
imul
push
scas
out
push
jg
testb
fcompl
test
sahf
data16
lcall
cmp
ss
and
dec
inc
rcl
jmp
mov
or
popa
jns
sbb
jg
in
clc
cmpsl
movsl
and
ds
mov
pop
dec
testl
pop
mov
pusha
push
cmp
aam
xchg
lock
pop
cs
mov
mov
fldl
inc
shlb
add
data16
dec
jae
imul
je
xor
into
xchg
icebp
mov
push
mov
cltd
cmp
and
popa
inc
jge
stc
mov
mov
sub
daa
pushl
sarl
cmp
lock
xor
enter
xchg
clc
and
pop
test
cmp
xor
pushf
add
dec
mov
and
adc
roll
mov
pop
sti
mov
inc
sub
ds
inc
ret
mov
mov
pop
pop
out
jns
mov
xchg
pop
jge
mov
xchg
mov
aaa
shrl
ljmp
fwait
stos
fisubrl
push
loope
loop
shll
push
ret
inc
cmp
adc
in
or
test
inc
xchg
mov
push
sahf
jae
jg
dec
cmp
adc
lds
cmp
cmpsb
add
in
icebp
out
mov
shrl
pusha
push
sahf
sbb
xchg
sub
mov
fsubr
mov
fidivrl
loop
arpl
mov
std
xchg
push
in
jg
pop
test
out
push
or
pop
jle
sbb
aas
mov
sub
cmp
inc
outsl
sbb
dec
xor
jnp
cli
out
and
ds
leave
loop
pop
fiadds
out
ret
in
push
inc
sub
fidivs
and
and
pop
lea
out
dec
sbb
mov
scas
xchg
sub
imul
cmp
lods
insl
xor
lret
push
not
jmp
push
inc
call
clc
pushf
cwtl
or
cmpsl
in
std
dec
stc
ljmp
cli
fs
cmp
cwtl
cmp
mov
cmp
into
adc
dec
fnstsw
push
out
mov
cmp
adc
ljmp
lea
aas
xorb
inc
inc
add
dec
loope
addr16
lock
test
mov
inc
sbb
cli
jle
sub
adc
cltd
js
adc
mulb
std
sbb
clc
lahf
push
jno
lcall
aaa
int3
mov
mov
loope
push
inc
loope
jbe
bound
xchg
xchg
sub
lea
fistl
mov
dec
out
push
in
adc
adc
cld
dec
addr16
stos
adc
data16
add
jle
in
xor
loope
popa
sbb
popa
stc
scas
out
push
lret
hlt
fbld
add
cld
fdivs
ss
fmul
sbb
push
xchg
repz
mov
pop
xor
setns
ljmp
sbb
sahf
out
or
mov
insl
dec
cmp
adc
add
xchg
leave
push
leave
loope
ret
push
mov
lret
xchg
jno
xor
jae
push
jle
scas
xchg
mov
das
sahf
loop,pn
jno
sbb
or
cmp
pop
dec
ss
loope
sbbb
popf
sub
lahf
hlt
pop
cli
push
in
jno
pop
push
add
mov
mov
lds
pop
pop
sbb
dec
fwait
inc
arpl
out
dec
lahf
cmpsl
sub
aad
loopne
inc
xchg
je
call
jmp
ss
fcmovnbe
lret
mov
add
mov
mov
xlat
enter
xchg
out
lock
xchg
fwait
push
xor
int3
xchg
lods
sub
stos
fimull
cmp
in
pop
and
sub
jb
aas
xlat
cld
jge
popa
cmp
rolb
cltd
psubw
and
add
and
fidivs
mov
pop
jns
or
aad
sub
ret
jmp
std
or
sub
lcall
mov
imul
es
mov
pop
or
xor
fdiv
pop
cwtl
aas
add
mov
cmpsb
or
inc
mov
adc
mov
push
xchg
push
xchg
cmp
icebp
sbb
xchg
push
inc
sbb
pop
lock
mov
sti
sarb
aas
int
mov
jns
sub
fistpll
dec
out
sbb
rcr
test
shll
inc
cmp
push
xor
sub
or
fs
jg
sbb
cli
ret
out
mov
jp
cmpsb
scas
mov
sub
insl
push
out
cmp
leave
xor
add
popf
push
inc
pop
stos
paddq
jbe
ror
push
sub
sbb
mov
rolb
mov
mov
sub
mov
sahf
mov
inc
xchg
add
testb
repz
adc
cltd
shrl
or
cs
add
aam
xor
push
cmp
push
cwtl
sub
add
add
mov
dec
push
into
loop
jns
rcl
cs
cltd
lret
adc
or
cmc
daa
xchg
jne
pop
into
repnz
jb
cmp
dec
stos
jb
pop
mov
hlt
imull
fcomps
or
sbb
lret
cmovne
test
xlat
clc
pop
jp
pop
lret
push
leave
adc
and
sahf
push
pop
xor
mov
cmp
test
inc
or
add
jmp
jne
mov
push
js
jns
insl
loope
mov
je
arpl
inc
lock
mov
cltd
pop
fwait
add
aam
ss
jne
in
mov
inc
push
add
loope
pop
xor
sbb
repz
dec
push
mov
hlt
je
mov
jg
das
push
inc
insb
jb
add
dec
pusha
fcomps
adc
dec
push
jae
imul
ret
nop
je
loop
jp
mov
sbb
mov
loopne
push
decl
ljmp
js
xchg
mov
js
xchg
or
and
inc
fists
dec
ret
in
int3
arpl
cmpb
je
mov
jbe
and
push
sbb
gs
aaa
popf
mov
push
pop
dec
insb
cmp
mov
je
jae
js
adc
and
je
stos
jo
xchg
out
lcall
loope
pop
fwait
pop
mov
fwait
insl
push
inc
aam
mov
push
pop
jle
lret
add
sar
lcall
or
xchg
sbb
mov
mov
imul
sbb
pcmpeqw
outsb
testl
pop
cmp
xor
mov
in
adc
or
movsb
sub
lahf
leave
rcl
aas
adc
popa
add
xchg
call
sahf
mov
outsb
loope
data16
sbb
cmc
test
arpl
or
jae
inc
repz
ret
arpl
popf
mov
mov
jnp
push
fidivrs
in
cmp
mov
cmp
pop
inc
stc
push
inc
cmp
rclb
sbb
rcl
dec
iret
push
dec
mov
outsl
xchg
fdivrs
ret
mov
nop
or
adc
push
cmpsb
push
into
mov
outsb
jle
mov
jle
loopne
into
dec
out
cmp
jns
pop
fbstp
mov
adc
cmovno
shl
iret
xchg
xchg
or
add
je
fisttps
frstor
fdivrl
pop
mov
and
jp
mov
add
js
icebp
fsubs
push
outsb
or
imul
out
or
lods
pop
pop
ljmp
addl
fdivl
cltd
pusha
mov
push
mov
mull
loop
sbbb
add
scas
mov
and
pop
xchg
aad
into
or
inc
lret
jl
xchg
add
shlb
movsl
lods
les
daa
loopne
add
fmulp
xchg
fs
jb
inc
mov
mov
jge
loopne
push
pushf
mov
or
popa
std
shll
jmp
movsl
sahf
sbb
ja
test
and
pop
add
ret
clc
pop
or
iret
cmpsl
jnp
mov
jmp
sbb
in
test
jns
adcl
sub
orb
sti
push
aam
push
pusha
andb
inc
in
shll
fcmovb
ret
sbb
sbb
jp
add
mov
mov
dec
and
scas
dec
scas
mov
and
movsl
pusha
cmpsl
insl
push
sbb
pop
mov
rcr
cli
std
sub
stc
pushf
jecxz
stos
dec
in
or
mov
adc
inc
andb
out
sti
andb
insb
test
imul
sub
in
pop
addb
inc
div
push
push
fxch
mov
test
icebp
mov
and
sub
fs
add
ret
push
push
inc
shlb
xchg
pop
mov
adc
addr16
repz
inc
mov
cmp
jg
jne
xchg
lcall
sbb
mov
mov
jae
cli
out
shl
cmp
xor
dec
arpl
rcrb
notb
outsb
lahf
push
inc
pushl
fsubs
fimull
inc
and
outsb
pop
mov
xchg
rolb
sub
aaa
or
cmp
arpl
push
imul
sub
sbb
bound
push
pop
mov
mov
cmp
push
push
in
outsl
mov
int3
adc
inc
push
fstl
dec
outsb
mov
fwait
xor
fistpll
imul
test
xlat
pop
pushf
dec
stc
lods
xor
xor
sbb
push
enter
out
testl
in
out
dec
les
ds
pop
shll
pop
dec
mov
add
mov
cmp
xchg
xchg
mov
push
inc
mov
pop
xchg
mov
fnstsw
loop
sahf
jno
cmp
xor
push
and
add
mov
cmc
dec
mov
iret
pop
out
rolb
rorl
xor
daa
nop
push
jns
push
mov
pop
push
xchg
mov
or
fidivrs
xchg
push
testl
popa
mov
cli
mov
leave
sbb
mov
dec
jne
cli
out
cli
iret
sub
mov
cmp
inc
rcr
sub
repz
adc
leave
loop
jecxz
add
adc
addr16
lods
push
cld
pop
and
rcll
sub
je
sbb
mov
adc
pop
popa
pop
or
pop
adc
push
inc
push
shlb
push
rolb
sub
mov
ljmp
movsb
sbbl
js,pt
xor
arpl
sti
lcall
push
mov
stos
inc
or
or
psubusw
call
sarl
pop
sti
or
jno
in
jo
pop
sbb
push
inc
ret
pop
push
push
and
adc
push
pop
pushf
loopne
cmp
ret
lret
and
enter
or
jl
stos
or
dec
fcoml
fbstp
pop
outsl
push
incl
jl
aas
faddl
sub
dec
mov
and
inc
jno
movzwl
dec
mov
xchg
xor
rorl
addr16
sahf
adc
sbb
dec
popf
dec
jle
ja
xor
mov
push
lds
add
mov
inc
push
rolb
into
mov
and
mov
xor
push
cmovb
out
push
push
mov
dec
jb
enter
mov
lods
sub
jp
cmp
cmp
mov
fildl
sti
add
mov
inc
xlat
aas
shl
or
subb
sbb
mov
push
addr16
mov
lods
jne
mov
addr16
jno
movsb
mov
and
add
jae
out
clc
clc
fs
cmp
sub
les
mov
aam
jmp
mov
add
sti
in
scas
push
mov
mov
fstps
inc
mov
insl
lds
and
jge
mov
xlat
pop
lret
xor
xchg
scas
mov
xchg
adc
test
mov
std
jno
ja
dec
push
repnz
mov
dec
sbb
clc
dec
xor
das
das
aam
xchg
aam
mov
mov
movsb
cmp
adc
out
jmp
sbb
mov
sub
xchg
mov
push
dec
mov
sbb
jnp
cmp
imul
mov
xchg
fistpll
fimuls
xorl
push
cmpsl
push
pop
aad
xorb
or
and
js
mov
lret
ds
std
addr16
xchg
sub
adc
lods
cmp
jbe
mov
dec
or
into
fnstenv
add
ficoms
add
imul
jno
hlt
xchg
aam
test
cld
mov
lcall
mov
dec
ret
pusha
mov
popa
adc
popf
nop
ret
rcl
xor
je
xchg
dec
outsl
dec
push
sub
pop
ja
cmp
dec
ret
jne
imul
jle
loop
pusha
daa
int3
sbb
rcrb
dec
fs
jecxz
xor
sbb
getsec
scas
mov
sub
out
mov
mov
mov
mov
mov
aad
push
std
or
test
int
testl
aam
sbb
pop
pop
xchg
pushf
sub
and
pop
into
or
cmp
movsl
inc
add
adc
sti
faddl
jnp
lahf
push
je
je
mov
lds
popf
enter
sub
mov
dec
andb
decl
in
xor
fwait
stos
add
pop
mov
dec
les
adc
into
lcall
jns
adc
fs
out
pushf
fs
aaa
pusha
mov
or
push
xchg
movsl
jb
bound
daa
sbb
pop
jno
arpl
mov
nop
sti
add
jne
sub
xor
sarb
addl
pop
lods
aaa
addl
scas
jg
mov
ss
xchg
lods
or
out
cmpb
iret
ss
stos
ficoml
sub
icebp
adc
jmp
add
sti
and
jae
sub
jnp
jns
add
into
push
in
cld
fldl
es
or
mov
cmp
shll
rclb
pop
dec
lods
sub
pop
and
imul
mov
hlt
out
stc
pop
repz
add
jb
cmpsl
dec
inc
add
stc
push
pop
into
xchg
mov
pop
cmp
xchg
pop
call
or
sti
pop
mov
push
add
mov
popf
xchg
pop
leave
dec
dec
dec
push
cmp
mov
outsl
push
cmpsl
and
mov
pop
jecxz
mov
outsb
xchg
add
mov
int3
cwtl
adc
jle
dec
stc
mov
adc
mov
jb
dec
cmp
jecxz
and
clc
loope
orl
mov
xor
lds
cltd
stc
loopne
xchg
xor
scas
or
mov
fs
mov
sub
dec
xchg
std
adc
push
js
arpl
ss
out
jg
loope
cwtl
outsb
sbb
dec
push
dec
ja
mov
in
dec
mov
and
jns
lods
xor
rorl
fisttpl
mov
jo
mov
jl
icebp
sub
dec
jno
sti
xor
and
jmp
xor
test
inc
les
mov
fld
repnz
stos
addl
lret
add
inc
je
xor
push
push
int
xorl
insb
out
xlat
sbb
fmull
pop
cmp
clc
pushf
push
mov
cmp
push
xor
mov
lcall
icebp
and
jno
pop
mov
gs
scas
fwait
pop
jae
int
mov
mov
insl
lcall
int
and
adc
scas
aad
fildll
jae
and
mov
add
inc
sbb
inc
sbb
jge
cltd
cwtl
lds
ss
fcom
dec
les
mov
fmul
mov
mov
pop
jl
and
add
test
aam
popa
push
pop
mov
mov
mov
push
mov
mov
fwait
mov
out
loopne
jg,pn
add
dec
subb
fstpt
daa
push
lcall
adc
jge
insl
aad
xor
das
jmp
or
dec
dec
xlat
pushf
jns
jne
jae
lock
bound
popa
out
dec
dec
xchg
sub
lcall
testl
add
in
mov
rolb
push
mov
mov
sbb
jbe
sub
push
cmpsb
mov
das
pop
fstpt
daa
ljmp
xor
jle
mov
scas
fwait
dec
xor
mov
push
arpl
pop
mov
lret
insl
cmp
dec
aad
and
push
adcl
popa
test
ds
adc
nop
cltd
out
shrl
cwtl
loope
insb
jae
mov
mov
mov
or
jecxz
andb
dec
and
mov
int
sbb
in
dec
pop
and
dec
fiadds
dec
mov
pop
dec
test
test
out
xchg
into
mov
push
loope
or
xchg
mov
in
int3
ret
jg
pop
pop
mov
addb
test
mov
pop
add
ret
int
stos
mov
adc
test
fistpl
nop
inc
lock
loopne
xorl
into
dec
xor
pusha
dec
call
je
cmp
mov
mov
adc
and
jg
mov
mov
cli
pop
cmc
rclb
xchg
addl
inc
fsub
add
pop
cmp
adc
inc
inc
out
pop
or
movsl
mov
and
inc
jnp
cmp
add
ss
inc
icebp
fwait
xchg
out
push
into
testl
dec
mov
roll
jns
inc
jmp
mov
sbb
xchg
dec
pop
push
enter
xor
adcl
hlt
data16
push
sub
xor
or
mov
jle
mov
fldenv
sahf
sbb
std
adc
push
sahf
jne
fmul
stos
hlt
ds
data16
ljmp
adc
cmp
mov
xchg
pop
shlw
sbb
adc
inc
ffreep
push
fs
or
sti
or
add
frstpm(287
scas
dec
out
lds
inc
lods
xchg
push
pop
and
enter
dec
xor
rol
add
push
push
daa
or
in
lock
push
les
shrl
mov
stos
dec
in
ds
jbe
add
or
scas
xor
sbbb
nop
mov
gs
shr
adc
mov
mov
dec
inc
and
lcall
sar
sbb
jbe
loope
push
fidivrl
or
inc
dec
jg
stos
in
push
adc
insb
shll
mov
xchg
testb
sub
mov
adc
rorl
or
fdivr
mov
mov
push
mov
or
mov
add
outsl
cmp
xor
cmp
pop
jb
std
jbe
push
in
iret
clc
pop
ffreep
rcrl
in
cwtl
fwait
add
xor
mov
ret
imulb
push
cmp
mov
add
inc
leave
push
cmp
rorl
mov
outsl
pop
loop
sahf
adc
out
enter
jne
addb
inc
call
aas
test
mov
mov
ret
fdivr
jnp
ja
xchg
aaa
xchg
loopne
push
outsb
ret
pop
add
call
push
jae
sahf
cltd
sub
outsb
xchg
in
ret
cmpsb
xor
sub
mov
mov
ret
lods
or
dec
sub
push
nopl
ret
popa
das
stos
test
mov
pusha
push
dec
cmp
dec
xchg
mov
inc
cmp
jl
test
icebp
mov
mov
test
inc
dec
aas
xor
and
aaa
divb
mov
or
xchg
popf
dec
xor
cmc
adc
mov
jp
jnp
push
mov
popl
js
mov
jne
jo
mov
lods
sbb
mov
push
cmpsl
push
cmp
fdivs
js
dec
daa
push
cld
dec
loopne
cli
mov
daa
jecxz
xchg
cli
or
dec
cmp
xchg
sub
aad
adcb
jae
cmp
xchg
cltd
sub
test
mov
lahf
or
clc
push
jne
test
xor
push
test
xchg
orl
xchg
pop
push
xchg
out
jge
dec
xchg
and
jne
shll
sub
ret
sub
jae
pushf
fwait
loope
add
es
inc
xor
fistl
lea
sbb
bound
dec
test
pop
jne
fwait
cmpsb
and
es
cld
mov
jecxz
jle
fsubrl
enter
aam
call
or
stos
fnstsw
add
rcr
or
adc
adc
fwait
aas
add
jnp
pop
push
pop
test
lods
in
mov
mov
xor
in
and
rol
ficoml
dec
sarl
daa
bound
pop
mov
mov
mov
pop
fidivl
and
sub
popf
enter
roll
or
xlat
loopne
adc
mov
xchg
out
dec
clc
or
cmp
int3
pop
repnz
push
enter
out
cmp
xchg
add
xor
push
and
mov
dec
cltd
int
sbb
push
std
mov
jae
mulb
inc
ficoms
out
jo
fbld
out
unpcklps
add
mov
shll
sahf
test
mov
mov
jb
push
and
pop
cmpsb
xchg
fidivl
aad
popa
es
xor
nop
xor
xor
xchg
lea
lea
es
ret
std
push
hlt
push
sti
jg
jl
test
aam
xor
popa
sbb
lcall
clc
inc
mov
imul
xor
insb
jnp
and
je
std
or
adc
xchg
adc
push
lock
fnstenv
adc
stos
mov
or
add
cmp
jne
mov
xlat
push
lret
or
popa
pop
je
dec
jns
test
dec
sbb
fildl
repnz
pop
mov
jae
fsincos
in
or
repnz
mov
mov
in
addr16
and
call
cmp
outsb
ja
popf
xchg
ja
sbb
push
inc
push
sbbb
mov
mov
mov
add
fsubs
mov
jl
xchg
pop
andl
adc
adc
and
pop
mov
stc
mov
lret
xor
lret
out
scas
push
fdivr
inc
mov
iret
mov
es
jmp
pushf
xchg
adcb
sbb
scas
cmpsb
pop
xor
mov
add
pop
mov
leave
sbb
mov
mov
fsubs
cmp
aad
fisttpl
lods
scas
sub
fucomi
lret
pop
dec
add
leave
ror
je
push
leave
mov
dec
rcrl
fs
daa
mov
fmuls
fisttpll
cmp
push
call
jg
test
scas
sahf
arpl
movsl
dec
mov
fs
dec
mov
stc
or
pop
cmp
xor
ljmp
imul
das
xchg
les
add
enter
mov
fistpl
cmp
call
or
push
sub
js
lock
push
inc
push
xor
jnp
movsb
mov
cmp
sub
int3
mov
and
adcl
enter
xor
ljmp
shll
and
add
cld
xchg
hlt
or
mov
pushf
out
rcl
cmp
in
or
adc
fisttpl
cmpl
fs
lock
fisttps
iret
cmc
push
mov
jne
pop
imul
mov
xor
aas
js
adc
aad
push
test
jecxz
aam
sbb
lret
push
fcmovne
adc
and
stos
mov
fnstsw
adc
mov
lret
flds
and
aas
sbb
into
xor
popf
divb
mov
jle
and
repz
cmpl
aam
mov
dec
outsb
aad
lods
fistpl
imul
sar
shrl
adc
fcmovnu
out
and
ret
push
push
cmc
or
push
cmp
xor
jp
pop
fisubs
pop
insb
je
repz
pop
data16
and
push
jne
dec
imul
mov
aam
data16
inc
jne
push
pop
shlw
sahf
movsb
xchg
rsm
jb
sbb
sti
pop
push
jg
jnp
add
dec
and
inc
sbb
and
addr16
mov
sub
int
sub
nop
dec
mov
jl
rclb
and
xor
cmpsl
jbe
insb
adc
jns
adc
scas
dec
fwait
addr16
test
mov
movsl
in
mov
lds
ret
and
test
mov
pop
mov
mov
lea
test
in
sbb
dec
pop
mov
add
push
push
inc
add
rclb
dec
mov
shll
mov
add
outsb
stos
mov
sub
bound
pushf
xchg
fsubp
cmp
out
cmpsl
or
and
lods
dec
mov
push
pop
cmp
sbb
in
inc
xlat
mov
mov
cli
inc
popa
mov
fdivr
add
push
xlat
push
imul
arpl
ss
jge
mov
test
int
sub
add
pop
inc
cld
inc
or
mov
test
das
dec
sub
in
mov
icebp
out
dec
sbb
scas
jg
in
lds
xor
in
in
pop
xchg
xor
int3
pushf
adc
popa
sbb
jp
xchg
mov
mov
dec
out
cli
in
push
mov
sub
cltd
fcomp
sbb
xchg
jmp
push
mov
cmp
inc
add
and
pushf
mov
mov
mov
xor
roll
inc
inc
cmp
shll
xchg
jecxz
loope
aam
dec
adc
cld
mov
or
mov
fdivl
push
call
ds
lret
mov
or
cmp
pop
cmp
pop
aam
shlb
jno
mov
lahf
xor
jg
arpl
sbb
arpl
cmpsl
test
movsb
cmpsb
cmp
mov
mov
pop
mov
cmp
sbb
mov
gs
imull
pop
out
incl
aaa
out
movb
rol
jno
mov
fisttpl
sbb
arpl
daa
mov
cmc
loope
in
clc
adcb
cmpsb
rolb
add
cltd
push
add
mov
fs
inc
mov
adc
dec
cmpl
call
out
popa
dec
addb
sbb
jns
adc
inc
mov
pop
jo
loope
je
iret
aas
inc
sub
sbb
outsb
pop
movb
jb
adc
imul
cld
sbb
inc
xchg
mov
push
mov
rcr
pusha
lods
push
f2xm1
jns
test
xchg
orb
imull
es
aaa
stc
mov
test
mov
push
test
jbe
scas
int
leave
mov
push
pop
mov
ror
test
lret
adc
xchg
add
movsb
sbb
dec
inc
adc
daa
sarb
inc
cmc
repnz
insl
mov
or
add
addr16
push
mov
loopne
inc
sbbl
out
dec
nop
andb
aas
mov
fsubl
jns
lret
add
fidivs
clc
pop
out
hlt
cmpsb
adc
fdivs
in
shrb
dec
xchg
and
adc
mov
xchg
jmp
add
push
sub
fwait
push
cmp
frstor
lahf
iret
insl
jmp
push
mov
cmpsb
or
sbb
mov
icebp
mov
jp
in
xchg
mov
adc
adc
dec
mov
pop
push
stos
daa
aas
push
sub
adc
cmpsb
jnp
fmull
sbb
or
cli
adc
jecxz
inc
nop
xor
xchg
xchg
addl
sub
pushf
push
inc
out
add
insb
push
dec
push
lret
cs
filds
and
cwtl
lahf
sbb
push
cmpsl
xor
mov
inc
movsb
pop
stos
cmp
sahf
sub
dec
or
mov
mov
mov
out
bound
lock
xchg
adc
sub
mov
jae
out
js
xchg
inc
aas
add
or
sub
test
rcrb
inc
add
inc
pop
jns
adc
add
into
xor
imul
movsb
std
je
jns
arpl
adc
and
sbb
add
adc
sub
or
lods
notb
inc
adc
fadds
push
pop
lods
pop
xlat
dec
jg
das
jno
mov
jmp
xlat
addr16
out
add
ss
imul
sub
insl
mov
cmp
lea
add
push
mov
or
xchg
sub
mov
fmull
leave
rclb
xor
pop
les
imul
mov
fdiv
leave
lds
xchg
cltd
in
dec
and
push
sbb
pop
mov
sub
pop
and
inc
into
dec
shl
fs
loop
cmp
cmc
push
inc
iret
pushf
jns
and
sbb
sbb
inc
push
popa
or
in
add
mov
pop
xchg
pusha
orb
cmpsb
add
ret
mov
cmp
cmp
out
sub
add
adc
mov
and
dec
enter
loop
cmp
clc
push
and
xchg
pop
cli
push
jae
xor
outsl
scas
xor
fs
cmpsb
out
ret
xchg
xchg
xor
psubd
jnp
test
mov
ljmp
addr16
nop
sbb
push
mov
addr16
pop
push
pop
mov
ss
pop
jno
sbb
pushf
adc
iret
cmp
sub
inc
xor
pop
cli
call
mov
repnz
outsb
jo
mov
sbb
or
hlt
push
gs
mov
insl
push
pusha
jo
cs
dec
pop
push
mov
lret
sarl
mov
mov
adc
pop
cli
aad
push
dec
loop
xchg
test
inc
push
adc
jns
mov
rcrl
movsb
repz
inc
int
and
xchg
mov
cmp
xor
jb
mov
pop
jo
ljmp
xchg
clc
dec
repnz
push
dec
xchg
aad
sbb
push
xor
pushf
xlat
nop
cmc
jl
adc
imul
test
dec
sti
imull
std
add
es
adc
fists
mov
stos
inc
or
mov
leave
mov
subl
push
ret
jnp
aam
sbb
inc
dec
fimull
sub
mov
push
ja
xor
aad
xlat
test
insb
mov
enter
sbbl
cmc
fs
add
lahf
cmpsb
loopne
gs
mov
cmpsb
aam
arpl
shll
lret
out
negb
jo
sbb
adc
lret
mov
dec
sub
fdivr
push
data16
sbb
js
pop
xor
cmp
ret
pop
ja
push
jbe
dec
or
das
mov
mov
gs
inc
pop
mov
pop
fcompl
mov
cmp
jns
xchg
rcl
sub
jmp
cli
pop
enter
cmpsb
jno
in
dec
cmp
faddl
mov
out
nop
xor
repnz
in
adc
xchg
cmp
push
mov
push
jg
shll
pop
imul
addr16
pop
icebp
aad
repz
cltd
mov
push
sub
adc
mov
loope
lret
lcall
in
jge
mov
dec
stos
mov
fs
xchg
jns
sub
cmp
stc
cmp
clc
mov
inc
mov
subl
jae
or
mov
movsl
aas
jne
and
test
in
and
mov
clc
test
mov
das
jp
sub
incl
jbe
ljmp
jno
popf
and
outsl
mov
je
xor
mov
mov
stos
push
push
sub
lea
test
lods
shll
cmp
push
cmp
imul
scas
pop
push
lock
push
adc
sub
sti
fwait
pop
push
mov
lea
cmp
jmp
pushf
sbb
push
push
test
iret
in
ds
mov
mov
or
arpl
in
jmp
rorl
xchg
xlat
rorb
mov
push
aad
ja
inc
out
bound
mov
push
imulb
comiss
ja
jge
rorl
jnp
pushf
fidivrl
cs
mov
cmpsl
aam
mov
sub
xchg
pop
cmp
dec
ret
cmpb
rcll
lea
or
pop
push
sub
and
jo
inc
push
iret
cmpsl
rol
outsb
dec
div
sub
std
inc
iret
in
repnz
push
ret
dec
mov
dec
and
and
cmp
les
mov
jmp
lahf
ja
data16
inc
jo
enter
pop
sarb
cmpsl
sbb
ret
dec
mov
mov
lret
and
add
jb
or
jg
test
ja
adc
fmul
int
add
insl
xor
dec
popf
jae
loope
sub
jmp
pop
fs
cwtl
jg
jmp
lret
pop
je
out
xor
mov
dec
loope
sbb
mov
jb
scas
in
ret
outsl
sbb
in
cmp
cmc
sub
mov
lcall
popa
ret
push
or
adc
xor
jns
jge
or
add
push
into
jg
mov
push
xor
push
test
shr
mov
jp
sbb
xchg
sub
jne
lock
arpl
jne
icebp
fcomi
xchg
out
ret
push
push
cs
mov
out
lcall
push
add
popf
pop
cmpsl
scas
jbe
adc
inc
push
jo
and
pop
rcrb
add
ljmp
shl
mov
mov
in
jno
int
rcrb
stos
inc
lret
in
dec
out
hlt
imul
popf
mov
jg
mov
dec
sti
cmp
xchg
shll
mov
in
cwtl
mov
mov
adc
jo
mov
rolb
int3
in
push
mov
rol
shrb
addr16
sub
cmp
sahf
stos
int3
mov
test
cmp
jbe
stos
shll
xor
rcrb
adc
out
fdivrp
les
pop
rcr
add
imul
mov
adc
data16
and
xor
movsb
iret
mov
lret
dec
sub
cs
jg
add
shrb
lods
push
pop
adc
fmul
sub
sub
jge
add
dec
fisubl
xchg
addr16
xchg
out
inc
jae
cmp
icebp
mov
incb
cwtl
mov
xchg
call
pop
iret
add
mov
cmp
imul
or
dec
popf
fcomps
inc
imul
push
dec
jae
iret
push
or
pop
inc
inc
repz
mov
sti
addl
cld
mov
insl
xchg
sbb
push
push
add
sbb
sbb
fidivl
jns
cmc
shlb
int
ds
add
push
test
jmp
cmp
sarl
sahf
outsb
sbb
je
sbb
adc
pop
dec
adc
cmp
inc
lock
or
adc
rol
mov
jge
stc
adc
fwait
mov
jb
lea
add
xchg
jns
push
xor
cmp
dec
mov
pusha
std
jge
test
out
imul
clc
out
std
fsubrs
jne
out
into
sub
jae
and
jecxz
jmp
inc
nop
int3
fld
jp
pusha
mov
push
lock
fisttps
fs
jmp
push
mov
imul
add
sub
icebp
aad
in
push
outsb
fistpll
sbb
gs
punpckldq
into
adc
mov
xchg
push
mov
mov
xchg
mov
adc
inc
jbe
and
dec
xchg
cmp
mov
cmc
fstpt
xor
cwtl
inc
lret
mov
popa
pop
stc
cmpxchg
aas
je
adc
adc
jle
mov
mov
xor
jno,pn
iret
xchg
or
fs
insb
sbb
push
test
icebp
iret
ret
pop
fdivrp
cli
push
leave
pop
fsubl
shl
or
orl
cmpsb
lahf
push
dec
mov
xor
lods
pop
adc
cwtl
aam
in
or
mov
jno
sbb
dec
xor
popa
ret
lock
jmp
pop
push
cld
cmp
sub
mov
imul
mov
icebp
inc
orl
clc
or
jne
xor
das
and
mov
dec
bound
daa
repz
cmpsl
mov
xor
dec
and
inc
jg
addr16
ret
add
mov
scas
movsl
std
popa
add
sub
xorb
cmp
enter
mov
out
out
sub
mov
push
mov
test
fcomp
roll
or
std
jmp
inc
xor
les
dec
ss
repz
adc
ja
push
cmp
movsl
xor
push
pop
lcall
jae
sub
cli
iret
or
push
push
sbb
shll
push
movsb
int3
int
sbb
push
loopne
adc
jg
pop
rclb
mov
mov
aaa
ljmp
sti
pop
mov
sbb
adc
aam
mov
pop
pop
out
aas
enter
adc
or
mov
jge
lahf
and
push
clc
xchg
in
aam
test
testb
subb
push
and
mov
cmp
pop
gs
sub
adc
xchg
xchg
pop
scas
subb
mov
icebp
imul
mov
les
test
xchg
stos
fisubrl
dec
mov
and
stc
jnp
shr
fistpl
push
hlt
shl
stc
mov
popa
bound
ret
lds
push
or
and
lcall
pushf
notl
popa
ss
lea
scas
ds
popa
push
jl
lret
add
les
icebp
mov
add
ljmp
sub
xor
push
cs
push
and
sub
mov
lods
iret
sbb
adc
or
scas
pop
inc
dec
sub
daa
dec
push
imul
fdivs
out
mov
adc
xchg
outsl
sub
push
pop
jge
cmp
adcb
test
and
pop
stc
push
dec
jnp
mov
and
loopne
and
pop
jge
lcall
das
rcll
mov
lret
insb
adc
divb
jno
dec
cmp
or
or
imulb
mov
into
cmpsb
add
mov
mov
fmul
push
xchg
xchg
mov
jb
or
push
push
loope
out
inc
out
jbe
aad
idivb
add
lret
sbb
clc
xchg
insl
cmp
call
jbe
mov
into
mov
pop
xchg
mov
pop
les
and
jle
mov
popa
stos
or
adc
push
out
add
lcall
sbb
mov
flds
cli
stos
sbbb
rcrl
lods
add
adc
cmp
inc
pop
add
inc
xor
jg
seto
inc
incl
push
sarb
or
mov
pop
mov
loop
and
inc
jmp
pop
ljmp
jnp
ja
in
insb
ret
push
shll
int3
dec
jmp
call
xor
ret
inc
in
lcall
icebp
dec
outsb
push
adc
sub
inc
lds
in
out
cld
adc
or
scas
sbb
sub
pop
sbb
loopne
in
pop
sbb
or
mov
cli
fisubs
das
xchg
mov
jp
inc
push
sahf
pop
dec
popa
fldenv
scas
jbe
push
ss
dec
xchg
in
gs
mov
cmp
cmp
jecxz
push
ror
xor
stos
adc
cmp
xchg
or
fildll
rcll
fnclex
cmp
jne
popf
sbb
push
popf
jnp
das
lret
cmpsl
sbb
outsb
lods
jl
aad
mov
or
sbb
ljmp
lock
sbb
mov
cmp
cmp
adc
out
jb
cmpsb
lea
inc
jae
inc
cmp
insl
shrb
fwait
push
lods
sarb
out
frstors
int3
jo
inc
inc
fcom
xor
pop
xchg
pop
test
add
lea
or
popl
hlt
mov
sub
fildl
pop
stos
add
mov
and
addb
sbb
mov
cmp
jle
ss
pop
data16
imulb
sub
mov
pop
hlt
test
lea
out
xor
and
jmp
jo
call
push
inc
ret
pop
dec
mov
lret
out
jnp
xor
xchg
cli
push
adc
popa
mov
ffreep
fsubs
fs
pop
pop
pushf
adc
push
mov
ljmp
in
or
sbb
ret
lret
loopne
roll
sbb
lret
popa
xlat
inc
mov
push
cltd
jl
call
dec
arpl
enter
loope
adc
popf
dec
mov
cmc
inc
imul
sahf
sbb
imul
jmp
cmp
addr16
xchg
add
je
push
test
scas
test
mov
mov
repz
fistl
addr16
addr16
sbb
test
lds
or
in
pop
popa
xchg
call
mov
loopne
mov
mov
sub
les
out
mov
xchg
adc
sbb
idivb
push
adc
push
mov
add
push
lret
fmul
loopne
xor
or
pop
sbb
hlt
xor
and
and
cmp
roll
jbe
mov
push
sub
rclb
cmp
cmpsl
out
hlt
repnz
es
adc
inc
pop
mov
lock
lds
mov
cmp
add
mov
call
test
vandnpd
sahf
jp
lcall
call
fldenv
in
cmc
aad
fistl
mov
or
mov
rol
or
lods
cs
jbe
cmpsl
pushf
mov
lcall
stc
adc
and
loope
sub
pop
push
pusha
jbe
lock
and
add
hlt
sahf
les
cs
cmpsb
mov
push
adcb
pop
roll
jns
cmpsb
ljmp
and
mov
push
stos
roll
pop
pop
jg
ljmp
mov
insl
mov
fwait
sbb
lods
movsl
xor
jmp
int3
mov
pop
pushw
pop
xor
pop
pop
inc
rclb
jbe
adcl
scas
mov
inc
out
pop
xlat
mov
jne
jb
ret
jbe
mov
aad
pushf
mov
repnz
shrb
loopne
cltd
mov
adc
add
insl
sub
dec
adc
mov
xor
dec
fistpl
pop
xchg
jmp
push
push
lcall
mov
sub
outsl
pushf
ja
shll
mov
movsl
cmp
cli
mov
sub
lret
popf
push
daa
nop
ret
fsubrs
sbb
fnstsw
loope
loopne
pop
ret
cmp
fisubrl
stc
jecxz
push
add
mov
jae
cmp
lcall
cld
push
sub
in
clc
push
push
or
mov
scas
mov
and
pop
mov
cwtl
arpl
sti
outsl
fsubr
stc
mov
pushf
jb
ljmp
cs
sbb
pop
mov
jbe
push
shrl
insb
aaa
mov
mov
or
jp
push
or
push
or
and
repnz
std
call
aam
jmp
xorl
es
icebp
daa
out
sbb
mov
call
rcl
loopne
stos
lds
add
pop
fsubr
add
pop
xchg
pop
pop
sbb
imul
push
addr16
add
fisttpl
inc
dec
loop
in
and
pop
jecxz
add
jge
add
movsl
mov
push
jns
in
sti
mov
scas
push
xor
cmp
adc
icebp
xchg
adc
icebp
lea
inc
test
int3
repz
out
cs
mov
mov
sub
fadds
xchg
ffree
imul
add
cwtl
in
sub
xchg
andb
call
stc
outsb
imul
in
sti
xorb
cli
decb
outsb
dec
xor
jg
aad
jb
mov
fiadds
pop
adc
inc
test
jns
jmp
xlat
stos
ljmp
iret
mov
test
push
mov
loope
sbb
popf
lods
insl
xor
mov
mov
aad
inc
cmc
mov
and
lds
inc
ja
ja
pop
inc
inc
adc
mov
cmp
sbb
shlb
add
lods
adc
sahf
mov
sbb
repnz
dec
mov
inc
mov
and
jg
jmp
pusha
jl
sub
pop
mov
or
push
jnp
aas
aad
dec
cmc
negb
aas
or
aad
xor
add
loop
ja
fildll
cs
xchg
cmp
xor
jns
icebp
lret
dec
or
jno
outsb
pusha
sub
and
mov
xchg
mov
incb
out
repz
inc
xor
sahf
or
out
clc
mov
sti
dec
sub
mov
imul
cs
loopne
cltd
cmp
mov
xor
or
push
sbb
push
sbbl
mov
adc
insb
out
mov
pop
in
insb
push
rolb
jge
xchg
jl
lods
fs
lea
xchg
fsubrl
adcl
jmp
jb
xchg
aaa
xor
repz
push
cmp
add
pop
pop
popf
sti
frstor
stc
adc
pop
mov
dec
loop
stc
psubsw
mov
sbbb
dec
dec
mov
leave
imul
leave
mov
jp
roll
pop
mov
rorb
inc
shlb
jg
lea
mov
insb
push
jne
loopne
jecxz
loope
cmpsl
std
sti
xchg
mov
test
loop
fistps
jmp
inc
out
mov
jle
pop
push
pop
pushl
xchg
bound
sbb
movb
pusha
inc
push
mov
fucomip
rcrb
shll
ljmp
aad
test
pop
scas
jmp
mov
and
js
cmp
or
lret
cmp
fiadds
mov
mov
das
xchg
mov
fsubl
addr16
scas
es
or
inc
hlt
adc
adc
cltd
movb
into
das
ja
cmp
or
out
repz
jp
and
mov
mov
inc
add
mov
cmpsl
shll
ret
or
subl
ss
push
faddp
push
aad
fnsave
stos
cmp
xchg
in
add
jb
sub
jnp
outsl
inc
pushf
dec
sbb
mov
loopne
ret
dec
outsl
push
jmp
and
mov
add
fldenv
movsb
cmp
pop
xchg
or
jmp
jge
dec
and
mov
mov
mov
lret
or
sbb
add
xor
dec
cmp
lock
mov
and
xor
std
xor
mov
jne
lcall
cmp
sarb
test
cmc
movsl
adc
xlat
push
xchg
dec
cli
sbb
xor
imul
pop
xchg
push
pop
mov
test
inc
decb
outsl
xor
pop
push
and
dec
pop
pop
es
lahf
jae
sub
cltd
test
imul
inc
mov
jbe
fwait
lahf
jle
mov
dec
dec
mov
leave
mov
cmpsb
inc
loope
adc
add
push
inc
add
les
inc
sarb
clc
cmp
mov
andb
push
mov
fnstsw
push
pop
pop
inc
xchg
repz
xchg
dec
in
or
mov
push
clc
xchg
scas
mov
add
sub
jmp
lret
push
cli
pop
sahf
dec
imul
sub
lret
lahf
je
dec
mov
pop
rcl
lret
pop
inc
movsb
jp
nop
sbb
mov
lret
addl
xchg
stos
xchg
jo
clc
jle
ucomiss
cmp
fs
pop
mov
adc
jne
nop
xlat
shll
das
gs
mov
push
or
cld
in
jbe
push
insl
push
pshufw
dec
rdpmc
enter
inc
cmp
xchg
leave
mov
ret
mov
inc
repz
or
xchg
in
sbbb
sub
push
xchg
je
or
xchg
jp
lret
loopne
mov
enter
or
inc
repnz
inc
bt
xor
dec
sub
push
mov
xchg
sbb
lcall
fisubrl
negl
cmpsb
lret
lea
push
lahf
js
jp
lock
push
popf
addr16
xchg
cmc
call
es
cmp
push
push
in
cmpsl
sbb
add
jmp
dec
gs
jno
dec
add
arpl
add
andb
push
mov
call
inc
cmp
or
cmp
call
js
movsl
bound
je
dec
cmp
popa
sbb
mov
scas
movsl
popf
sbb
cmp
fbstp
pusha
mov
fidivl
add
dec
push
pushf
push
fldenv
inc
or
add
rorb
fidivs
xchg
push
pop
rcr
push
negl
cmp
push
insl
fs
int
nop
mov
sbb
repnz
in
push
add
push
movsb
dec
out
imul
pusha
jmp
push
mov
cmc
pop
mov
mov
xchg
or
clc
push
mov
lahf
mov
imul
enter
lock
inc
mov
push
inc
ljmp
and
call
rcr
dec
push
sahf
pusha
jae
jbe
dec
cltd
pop
mov
cltd
pop
sub
jle
sbb
adc
aaa
xlat
pop
sbb
aas
xchg
repnz
inc
xor
repnz
mov
and
insl
pusha
push
fsubr
iret
jo
inc
pop
push
mov
sbb
stos
fmul
and
xchg
mov
sbb
dec
dec
cld
push
pop
dec
xchg
aas
ss
mov
lahf
je
add
lock
push
dec
push
mov
jmp
aam
pop
das
push
jmp
adc
mov
cmp
dec
out
popf
adc
lret
dec
xchg
inc
mov
jge
imul
jbe
test
and
xor
add
in
out
cmp
xchg
inc
xchg
int3
test
jecxz
add
scas
and
adc
inc
pop
mov
sbb
adc
cmp
lods
icebp
stc
out
data16
incl
push
or
xchg
mov
jge
add
inc
push
xor
xchg
repz
mov
pop
and
repz
dec
stos
inc
and
push
scas
xor
jo
jne
xchg
orl
jp
push
push
sub
test
aaa
xchg
cmp
stos
mov
roll
lcall
jecxz
fildl
pop
mov
cmp
movsb
fidivl
cmp
add
shrb
mov
lods
xor
or
mov
cld
mov
mov
add
dec
lret
jmp
cmp
mov
mov
or
sahf
lods
pop
cld
outsl
iret
sub
xchg
dec
push
dec
scas
mov
push
cmp
in
clc
popa
fdivs
or
push
adc
cmp
jb
jle
fistl
push
test
push
jle
add
into
cmpsb
dec
in
jb
clc
inc
fs
lcall
inc
cwtl
or
enter
scas
pop
ret
pop
cwtl
sub
add
xchg
fisttpl
push
stc
push
cmp
add
pushf
push
gs
ss
lahf
arpl
ds
out
cmpsb
popw
cltd
xchg
cmp
inc
call
out
lock
test
and
hlt
sbb
or
std
mov
push
push
or
pop
icebp
lods
add
cli
dec
movsb
insl
cmp
dec
insb
pusha
subl
test
imul
xor
pop
cmc
and
ja
mov
cmpsb
mov
push
pop
mov
push
adc
mov
push
push
dec
in
add
lea
lea
sbb
add
dec
xor
pop
mov
imul
cmp
mov
sbb
aas
in
lcall
or
dec
call
rorl
dec
push
lods
outsl
adc
imul
jp
imul
push
jnp
and
cmpsb
icebp
std
mul
push
pop
xor
sub
inc
sbb
sbb
rcll
in
xchg
fdiv
fmuls
adc
rcll
mov
fists
loopne
subb
pop
iret
dec
and
std
adc
sbb
push
sbb
sub
stc
lods
xchg
jg
or
je
pop
mov
xor
fs
test
clc
mov
loop
pushf
loop
scas
sti
mov
je
shlb
push
push
addr16
and
push
pushl
fiadds
int
xchg
mov
imul
mov
dec
cld
add
inc
or
fsubr
out
rcrb
gs
sub
aaa
hlt
aam
sarl
cmp
imul
inc
push
pop
cmpl
insl
jns
jo
es
lods
dec
pop
addr16
cltd
dec
jl
sbb
jo
mov
sbb
sub
cmp
sahf
and
push
pusha
and
push
cmp
std
sbb
and
out
sbb
mov
inc
dec
movsl
adc
stos
insb
cmp
xor
push
scas
add
inc
or
cmp
add
aad
gs
arpl
sub
pop
out
mov
xchg
cltd
add
outsb
movl
jb
test
push
push
cmpsb
dec
lcall
shrl
add
icebp
mov
shlb
xor
mov
inc
decl
out
mov
mov
cltd
fidivrl
xor
lahf
xchg
imul
xor
cwtl
and
das
mov
mov
icebp
and
cmpsl
mov
lcall
pop
imull
cli
push
das
and
outsb
data16
lret
xchg
pop
loope
jl
dec
repnz
enter
push
rcrl
cli
sbb
or
packssdw
fbld
les
ds
xorl
jl
pop
push
in
jmp
fiadds
in
add
pop
mov
pop
push
movsl
int
fstps
pushf
pop
or
sub
aaa
xor
ja
ds
adc
push
mov
iret
pop
add
in
sarl
mov
dec
cwtl
and
ret
pop
repz
imul
sarb
rorl
add
fcos
nop
fisttps
sbb
popa
stos
push
push
mov
into
push
sbb
cmpsb
lcall
xor
inc
movsl
mov
repz
mov
sub
std
push
dec
dec
in
add
xor
push
pusha
push
lods
sub
iret
inc
sti
or
push
cmp
gs
stc
mov
shl
repnz
push
mov
sub
xlat
or
and
popf
movsl
insb
cmp
sub
imul
daa
mov
mov
mov
mov
cmc
cmp
push
hlt
jge
fucomip
subb
xchg
lret
std
mov
loopne
and
or
andb
xor
mov
cmp
lahf
dec
out
mov
lcall
andl
or
jmp
rcll
sbb
testb
pop
leave
lea
test
inc
negb
xchg
mov
mov
gs
insl
and
out
sarb
cs
push
outsl
adc
or
lds
jno
out
fcom
test
adc
pop
xor
jmp
fldt
mov
or
das
cmp
cmpsl
adcb
cmp
mov
sahf
dec
adc
call
pop
imulb
pop
jne
sbb
aaa
inc
dec
and
test
jae
cwtl
loope
incb
jp
fistps
cmpsl
aas
sub
cld
mov
mov
mov
cwtl
idivl
jb
rcll
enter
fdivs
sbb
or
xor
xchg
sub
adc
sbb
push
movsb
test
addr16
xor
shll
mov
cwtl
gs
mov
mov
enter
imul
iret
pop
out
mov
mov
and
adc
sub
sub
xor
jb
xor
or
lds
and
lods
or
into
mov
subl
pop
or
fs
sub
sbb
mov
xlat
jne
movsb
adc
pop
les
inc
sbb
pop
mov
out
push
arpl
gs
xchg
dec
adc
leave
push
pop
push
add
adc
mov
lock
adc
fs
dec
dec
mov
pop
dec
adcl
and
sarl
std
jge
adc
mov
mov
sbb
jge
test
aaa
mov
adc
out
mov
je
test
shrl
push
std
fsubrl
dec
test
or
cmpsl
xor
add
ds
mov
outsl
dec
sub
pop
test
les
test
push
decl
pop
xor
pop
popf
out
sarl
cmpsb
popa
push
xor
mov
add
xchg
insl
rcll
push
test
pop
nop
cmp
ret
inc
mov
xor
jne
lret
mov
mov
adc
mov
dec
push
aaa
rorb
cmc
push
fwait
mov
dec
add
push
xor
outsl
movsl
call
lds
stc
fscale
div
xchg
pop
sbb
dec
ds
dec
lahf
push
and
and
sub
cmp
pop
shlb
or
clc
xchg
mov
movsb
xlat
jp
sarb
loope
cmp
xchg
adc
ficompl
aam
sub
lret
aad
mov
push
and
pop
sbb
jmp
dec
xchg
jno
pop
cwtl
es
sarb
or
mulps
mov
cmp
mov
mov
stos
xchg
shll
inc
int3
sub
cmpsb
xor
push
xor
pop
inc
cmp
sub
in
idiv
arpl
mov
xor
sbb
outsb
or
and
pop
test
aas
sbb
xchg
push
mov
loopne
cmp
int3
or
rcrb
lock
mov
cmp
iret
popa
movsl
data16
sub
mov
arpl
cmp
fwait
shl
and
xchg
inc
push
mov
xchg
cwtl
pop
mov
sub
shrb
std
xchg
aad
push
mov
jb
fs
stos
test
sar
daa
mov
or
mov
in
xor
pop
xchg
repnz
lods
adc
dec
fucomi
cmc
fwait
push
mov
pop
inc
cmp
das
cwtl
or
cmpsl
iret
pop
add
pop
adcl
add
lret
sub
call
or
jns
mov
lock
lret
and
outsl
fcmovnb
mov
mov
loopne
ljmp
or
add
in
jp
imul
or
xor
aad
or
jbe
inc
popa
sbb
aad
mov
idiv
dec
dec
mov
inc
mov
test
or
icebp
add
arpl
jns
xchg
jp
lret
les
sahf
jmp
aas
into
sub
add
mov
xchg
sbb
xchg
sub
stc
jmp
aaa
jbe
imul
mov
pop
fisttpll
sbb
imul
insl
in
addr16
jbe
rorl
loopne
mov
loopne
hlt
mov
cmp
mov
call
push
lahf
cli
mov
addr16
xor
ljmp
sbb
stos
jp
hlt
mov
pop
fcmovne
imul
jne
aaa
sub
mov
imul
je
push
pop
mov
stos
lret
iret
jno
pop
test
into
imul
sub
mov
cmp
int
in
shlb
js
cmpsl
mov
or
subb
and
xchg
stos
xor
ds
dec
call
notb
dec
neg
jne
mulb
and
hlt
push
and
inc
jne
cmp
pop
aas
cli
pop
insb
inc
mov
sbb
mov
addr16
or
cmpsl
jo
mov
mov
add
jp
xchg
mov
dec
insb
sbb
cld
fimuls
inc
and
push
sbb
in
pop
cmp
lret
xchg
mov
jbe
mov
std
add
les
shr
popa
mov
sbb
ss
lret
jae
in
or
mov
cwtl
ds
imul
jae
lods
scas
pop
mov
mov
rdmsr
popf
bound
ds
mov
fistpll
js
imul
cwtl
mov
mov
rorb
mov
sbb
dec
mov
or
sti
test
jecxz
xchg
scas
imul
movsb
pusha
xchg
push
or
or
in
pop
jb
mov
repz
sti
test
scas
cmp
add
xchg
sbb
icebp
adc
and
dec
add
fwait
lcall
loop
mov
fsubl
mov
test
cltd
xor
das
out
xchg
out
arpl
lods
add
stos
je
cmpsb
sub
adc
in
iret
in
out
fbld
inc
xchg
pop
pop
sbb
out
or
lock
mov
cmpsb
push
in
iret
xor
or
push
adc
iret
and
inc
mov
push
jp
add
orb
out
out
pop
xor
pop
xchg
add
xor
std
out
mov
aad
cmpsl
or
jno
or
push
mov
sub
out
cltd
mov
sbb
sub
xor
imul
insl
cwtl
and
mov
int3
inc
dec
jl
mov
aam
js
mov
mov
or
mov
adc
xor
push
clc
clc
dec
pop
shl
inc
jmp
insl
imul
loopne
call
int
cs
mov
xchg
xchg
xor
jbe
sarl
dec
mov
push
cmp
leave
mov
jno
push
fisttps
outsl
out
xor
sbb
int
mov
push
or
cli
sti
jl
pop
bound
dec
jne
cld
insl
ds
adc
lods
clc
fistpll
neg
stos
repz
rclb
pop
scas
lods
mov
jo
pop
es
scas
mov
dec
xor
fcoml
dec
es
out
mov
std
xorb
mov
in
test
pusha
xor
stc
xchg
loopne,pt
int
cmp
mov
arpl
push
fstl
ret
add
inc
fmul
pop
xchg
popa
outsb
jmp
mov
scas
cmp
mov
out
adc
pusha
inc
lds
pop
rep
mov
xchg
pop
and
inc
cmpsb
int
test
mov
inc
int3
hlt
imul
mov
jmp
clc
leave
mov
dec
fucomip
pop
lock
ds
pop
aaa
xlat
repz
xor
adc
cli
mov
xlat
cld
inc
in
push
or
push
push
stc
aam
aaa
daa
mov
je
pop
mov
fstl
rcrb
aaa
pusha
lea
jg
add
pop
pop
clc
mov
icebp
push
shlb
out
mov
cmp
and
dec
pusha
out
xor
jp
cli
fadd
xchg
add
shr
pusha
cmpsl
dec
dec
push
xor
scas
cmc
push
fcoms
insb
add
repz
bound
sub
push
mov
insb
roll
imul
clc
jno
adc
push
nop
pop
mov
xchg
cmp
push
gs
mov
pop
into
xchg
mov
mov
cmp
aam
sbb
mov
adc
mov
ss
loopne
adcb
aam
jnp
jl
rolb
in
loop
pop
add
add
test
insl
enter
mov
ljmp
shll
cli
call
mov
inc
and
ss
negl
notb
cwtl
fldl
sub
fsubr
adc
repnz
jg
xor
pop
scas
add
inc
dec
pop
sub
das
sbb
pop
sbb
jbe
stos
xor
push
lret
in
stos
cmp
cmp
push
adc
stc
sbb
push
aam
cltd
mov
sbb
cmpsl
or
mov
mov
mov
pop
test
test
leave
mov
push
iret
xchg
pop
cmp
mov
stos
sahf
sub
jae
jno
sti
push
inc
ret
mov
cmpsb
pmaddwd
and
imul
fldenv
xchg
sbb
lea
xchg
cwtl
jmp
add
test
pop
push
inc
in
lcall
ja
cmp
jb
dec
jo
rcll
pop
stos
lods
cltd
dec
xor
push
les
cmp
stc
daa
je
inc
cmp
fucomi
pop
and
push
hlt
ror
into
adc
mov
add
push
loop
aam
call
xchg
pop
arpl
and
jge
scas
or
dec
hlt
cmpsw
ss
xchg
pop
cmp
and
lods
mov
cld
inc
jmp
xor
mov
dec
imul
push
jne
cmp
xchg
and
in
pop
es
mov
cmp
xor
dec
hlt
and
out
adc
aaa
int3
flds
gs
addr16
xor
inc
out
adc
es
mov
rolb
stc
push
gs
int
or
adc
enter
loopne
neg
ss
sbb
dec
hlt
fildll
dec
jecxz
mov
mov
pop
mov
fdivrs
mov
ds
int
inc
pop
outsl
test
pop
mov
mov
pop
call
popa
xor
mov
cmp
bound
add
mov
mov
mov
pop
js
push
jle
scas
and
out
icebp
lea
mov
cmpsb
cmp
std
rorb
pop
rolb
fs
fs
cmpsl
and
sub
test
lods
adc
xchg
scas
mov
mov
or
mov
pop
test
mov
pop
sbb
int
xchg
insl
push
sbb
jae
lds
mov
dec
push
jmp
fs
loope
or
int3
movsl
dec
mov
mov
jp
lahf
lahf
xchg
jecxz
push
adc
mov
xchg
lcall
std
cmp
sub
inc
in
mov
push
mov
addr16
inc
lods
es
jno
and
hlt
in
fistps
insb
mov
jp
rcrb
sub
dec
sub
push
cwtl
into
mov
jo
add
rcr
jecxz
icebp
mov
mov
mov
pop
mov
cmc
sbb
adc
inc
push
adc
and
dec
imul
popl
lock
push
mov
fwait
icebp
cmpsb
daa
fwait
ret
ja
mov
or
sarl
or
rcr
mov
clc
mov
lret
jg
or
lar
and
and
adc
sbbl
fucomip
lods
xchg
jae
das
xchg
xchg
mov
add
mov
lret
imul
jbe
adc
pop
test
mov
jbe
loope
daa
xorl
loope
lods
leave
mov
cmp
adc
pushf
aam
jo
xor
cli
lret
cmpsb
jg
mov
cmpsl
lret
lcall
mov
test
ds
pop
xor
push
add
je
inc
sahf
addr16
push
leave
pop
adc
aad
cmpsl
stc
inc
mov
xor
out
jge
mov
push
fadds
fsubrp
testb
fisubs
xchg
fwait
add
mov
arpl
dec
jne
faddl
inc
sbb
cmp
or
in
mov
fs
dec
xor
cmc
xchg
in
pop
xor
icebp
sbb
mov
movsl
rolb
push
stos
dec
pushf
aad
sbb
xor
add
and
pop
rol
jne
movsb
out
ret
jne
les
cld
mov
dec
inc
mov
out
movsb
aad
fsubrp
test
scas
pop
arpl
cmp
loope
jns
xchg
and
push
add
add
lret
mov
stos
mov
rclb
mov
or
sar
jmp
call
pop
ds
mov
call
mov
stos
sub
adc
mov
xchg
jae
inc
shll
sub
shll
rclb
xor
xchg
cli
insb
push
mov
or
sbb
out
push
orl
jge
in
jge
adc
fs
xor
mov
nop
je
adc
xor
xor
or
or
push
dec
sub
xchg
jae
add
ret
mov
aad
xor
jg
repz
shl
dec
push
sub
inc
and
inc
mov
fnstenv
rorb
call
lea
insl
dec
imul
jbe
xor
jbe
inc
push
cld
adc
mov
insb
mov
popa
push
int3
pop
mov
mov
out
xor
xor
ret
into
loope
and
test
mov
subb
jecxz
inc
lahf
or
dec
push
jno
push
cmpsl
leave
xchg
arpl
nop
xor
or
adc
pop
inc
xchg
fidivrl
jp
jae
jb
pop
xor
mov
jg
xchg
dec
add
jmp
jmp
add
adc
movsb
inc
xor
push
dec
dec
xchg
and
push
xlat
ret
xchg
and
mov
pop
sbb
je
mov
xor
jb
repz
lcall
arpl
inc
sbb
add
xchg
jmp
dec
cmpsb
aaa
test
cmc
inc
cld
xlat
add
cmp
sub
je
je
popa
mov
rcrb
out
sti
sub
dec
sbb
jae
or
aad
or
add
inc
lods
adc
pushl
sub
sbb
sbb
popf
adc
into
inc
push
jnp
int
mov
and
sub
add
push
jbe
mov
mov
cli
mov
push
js
dec
push
or
or
test
xchg
rcl
mov
daa
call
mov
jle
outsb
jb
mov
stos
push
inc
add
add
ret
push
pop
add
cmp
adc
popa
xchg
fistpll
scas
xor
scas
outsb
adc
mov
inc
ss
pop
popf
lret
or
xchg
mov
mov
pop
addr16
or
xchg
mov
fs
dec
and
iret
mov
cmp
lods
ficompl
rorb
lcall
xchg
shlb
stc
push
cmp
fisttpll
out
xor
stos
aaa
pop
scas
aad
rcrl
rclb
jle
push
jae
lock
loope
mov
lret
fs
hlt
mov
arpl
cmp
xor
xor
arpl
pushf
xchg
push
and
cmpsb
test
adc
add
sbb
inc
test
insl
shrl
js
and
mov
jno
sub
inc
push
adc
and
mov
hlt
imul
mov
mov
les
add
inc
lret
jp
mov
stos
xor
aas
shll
xchg
push
pushf
mov
cmp
testl
sub
cld
sbb
ret
jb
lcall
scas
dec
cmp
push
cmp
add
lods
mov
inc
mov
and
js
insl
movsb
add
int
adc
or
xchg
cmpsb
jno
idivb
ficoms
push
and
cwtl
push
fmull
daa
into
es
sbb
in
mov
add
pusha
sub
cmpsb
loope
rorb
ljmp
test
cmp
pop
in
push
in
sub
in
loop
jmp
inc
jmp
jecxz
sub
cwtl
xchg
icebp
mov
in
ljmp
cmp
sub
rcrl
test
adc
dec
mov
mov
pop
mov
and
lea
cld
adc
xchg
mov
add
call
xchg
and
daa
pop
lahf
imul
arpl
or
push
repnz
neg
ss
mov
cmpsl
arpl
popf
pop
shll
stc
jg
or
lods
xor
jb
xor
rol
xchg
mov
lods
mov
sbb
mov
pusha
jle
lea
push
xchg
push
orb
lahf
sub
inc
rcrl
movsb
test
push
inc
mov
in
icebp
add
cmc
push
test
pop
mov
mov
xchg
xchg
pusha
xlat
ror
jecxz
rorl
int
mov
pop
syscall
xor
ret
aam
cmp
cmp
mov
xchg
pop
jns
pop
xlat
hlt
adc
cmc
in
mov
cmp
sahf
add
call
mov
jb
pop
repnz
movsb
loope
inc
loop
pop
stc
xchg
mov
cmp
jb
aas
and
add
and
rcr
dec
daa
insl
in
pusha
push
rol
sub
pop
nop
shl
loope
shrb
and
ret
add
nop
xchg
sbb
mov
aam
test
jb
dec
arpl
cmp
mov
cld
sbb
iret
push
sbb
sbb
mov
or
mov
mov
shll
pop
dec
les
jo
data16
dec
fildl
stc
xadd
push
or
test
iret
dec
add
mov
inc
dec
shll
lds
cmp
xchg
jle
sbb
rcr
jmp
xchg
jb
cmc
stc
sub
pop
cmp
rcrb
cmp
xor
ret
loope
adc
mov
insb
pop
add
mov
xor
add
push
dec
movsb
aam
adc
jp
add
adc
addb
cmp
mov
sub
inc
mov
pop
fcmove
pop
std
mov
lcall
push
filds
xchg
std
repnz
mov
sub
and
push
jl
movsb
fdivl
adc
out
imul
cmpsl
fsubl
pop
sbb
xor
cld
int3
insl
xlat
stc
inc
and
ret
xchg
imul
add
sub
push
mov
ret
or
xor
daa
outsb
sbb
mov
rcrl
rclb
in
adc
int
cltd
sbb
adc
call
xlat
hlt
and
data16
subl
jecxz
out
sbb
mov
dec
mov
leave
and
jmp
std
std
popa
jbe
xchg
jns
pusha
dec
dec
ret
push
dec
jne
fstl
repz
xchg
orl
ret
xor
jae
mov
and
das
jmp
xchg
dec
stos
out
mov
mov
mov
xchg
cmp
pop
mov
and
cs
mov
jecxz
dec
add
imul
dec
cmp
pop
icebp
cmp
mov
dec
cmpl
or
imul
in
test
stc
dec
sub
push
mov
add
mov
stos
jge
fldl2t
sbb
sub
dec
pop
add
cmp
pop
cmp
shll
push
xor
add
mov
and
adc
imulb
mov
cld
aas
jl
add
loop
fimull
out
sbb
mov
movsl
imul
xchg
inc
cmp
daa
icebp
int
sbb
jo
aas
popa
cmp
out
xchg
add
out
test
sub
inc
adc
cmp
mov
mov
fnstsw
or
push
sti
lds
and
xor
inc
ret
push
scas
jnp
cmpsb
or
mov
adc
xchg
insb
gs
fistpll
inc
mov
bound
mov
mov
mov
mov
cmp
push
inc
dec
and
jno
xchg
sub
and
ret
mov
mov
or
out
xabort
jge
push
ret
fwait
add
sbb
mov
inc
jno
jmp
and
mov
fistps
or
add
scas
jg
jns
aam
mov
nop
mov
mov
add
jg
lcall
lcall
jb
fadds
xchg
cmp
stos
mov
loopne
out
popa
xchg
test
mov
fisttpll
scas
xor
clc
sbb
adc
in
adc
ret
and
mov
stos
sbbb
inc
iret
loopne
push
outsl
cs
ja
mov
in
xor
sub
jno
call
push
out
enter
push
xor
sub
std
lcall
das
push
sub
xor
decw
inc
sub
adc
scas
dec
xor
or
mov
je
xorl
cmp
scas
lds
pop
jmp
mov
sbb
mov
or
mov
mov
push
cli
cmpb
inc
das
jge
lods
dec
inc
imul
ja
jl
je
shl
push
pop
inc
lock
mov
adc
rcrl
cmp
ret
test
fldcw
inc
out
lds
leave
push
lret
mov
add
push
jecxz
or
out
jle
pop
test
fcmovnbe
pop
jge
rcrl
pop
jg
es
sti
hlt
inc
sbb
call
fcomps
pop
fwait
loop
es
xbegin
dec
pushf
test
rclb
push
out
xchg
rol
xor
jns
pop
nop
mov
pop
push
ja
mov
mov
dec
cmp
pop
ret
in
jno
mov
cli
das
sub
mov
xor
pop
add
decl
push
sub
in
fldenv
jbe
xchg
jne
sbb
mov
in
dec
add
push
sbb
push
les
repnz
and
gs
in
js
and
aas
jmp
pusha
xchg
sbb
enter
add
bound
sub
add
jl
dec
hlt
xchg
movsl
push
movsb
bound
cmc
xchg
andb
clc
add
mov
nop
in
cmpsb
sahf
dec
aaa
mov
lret
jp
pop
mov
jmp
xchg
call
cmpsl
jns
cltd
fdivs
dec
push
fsubp
fcoml
xchg
lock
adc
jmp
sbb
xchg
test
adc
pop
xorps
mov
mov
or
clc
call
inc
pushf
mov
pushl
fsubl
cmp
hlt
out
cmp
push
mov
repnz
sub
cli
jne
inc
je
jne
and
movsl
aam
vmovsd
scas
adc
mov
clc
sub
cs
insl
ljmp
mov
fmuls
mov
notl
mov
cs
mov
jle
shll
or
adc
push
movsl
int
rcll
popf
push
dec
mov
mov
lods
in
cs
xor
insl
mov
or
mov
in
mov
and
mov
adc
loopne
in
aas
pop
and
out
sbb
inc
popa
imul
hlt
ret
sarl
clc
add
cmp
cwtl
sbb
pop
std
inc
and
rorl
lods
push
lods
cld
cmp
add
jge
andl
call
inc
mov
sub
inc
ret
inc
jae
mov
cmp
xor
insb
mov
dec
in
repz
cld
fistl
pusha
or
or
nop
into
mov
cmp
dec
push
cltd
xchg
adc
das
mov
xor
pop
inc
inc
std
mov
ror
fdivrs
std
insb
jle
push
dec
outsb
push
lret
fidivrl
push
cmpsl
xchg
push
insb
xchg
insb
sbb
ss
popf
sbbl
push
loop
cmp
loope
pop
mov
adcb
dec
dec
mov
inc
out
mov
aad
cmp
fistps
nop
aas
addr16
pop
add
ret
sahf
xchg
into
out
jle
pop
or
inc
dec
push
dec
insb
incb
out
sahf
inc
outsl
sbb
xlat
and
lea
aad
in
pop
mov
loopne
mov
cmc
in
das
inc
pop
es
int
sbbb
sti
lret
push
aad
add
ror
mov
ret
mov
dec
in
inc
rorl
push
mov
and
sbb
and
dec
dec
outsl
movsl
cmpl
mov
stc
inc
or
lods
dec
movsb
test
rorb
loopne
sub
lds
cmp
out
jecxz
js
mov
cwtl
fcomps
jecxz
inc
lock
cmp
pop
jle
dec
les
or
add
das
out
ss
mov
cmp
cmp
into
pop
dec
mov
xchg
mov
nop
adc
hlt
call
mov
jmp
or
call
addr16
loop
mov
aad
mov
shl
ja
clts
cmp
pop
pop
rcll
sub
jp
aad
mov
out
ss
add
and
and
and
daa
sti
cmp
sub
cmc
and
jp
arpl
and
gs
xorl
test
jle
fbld
dec
push
addr16
addr16
aad
mov
cmp
pop
je
xchg
rcrl
xchg
mov
xor
adc
mov
out
gs
cli
cmp
sub
call
jno
push
jo
push
jbe
jecxz
xchg
sahf
pop
in
rcll
cltd
jnp
mov
dec
inc
jl
pop
aad
xor
icebp
pop
cmpsl
roll
push
jg
aad
scas
or
faddl
aad
push
push
hlt
es
int
inc
cmp
jns
aad
cmc
add
or
shl
pusha
dec
das
pop
pusha
sub
mov
add
roll
dec
sahf
add
cmpl
push
xor
pop
adc
dec
pop
stc
mov
enter
cli
push
xchg
stc
mov
add
adc
mov
add
mov
shlb
mov
add
mov
and
cmc
inc
sbb
call
add
jmp
dec
nop
inc
inc
jbe
sub
in
imul
sarl
inc
push
test
inc
call
scas
add
jnp
inc
add
sub
sub
cmp
test
shr
sub
jmp
or
in
mov
mov
test
faddl
cmp
sub
jb
int3
frstor
aam
loope
ljmp
adc
lret
aas
inc
mov
jo
adc
adc
adc
push
mov
shr
mov
xchg
sbb
sub
mov
dec
mov
imul
outsb
fistl
mov
pop
push
xor
mov
js
push
lcall
lgs
outsb
popa
aad
jmp
xchg
out
mov
inc
adc
addr16
cmpsb
pop
or
adc
in
shrl
cltd
push
aad
xor
icebp
sbb
repz
adc
bnd
rorl
jbe
into
pop
push
decb
inc
loopne
pop
push
movsl
lds
jae
repz
jae
stos
inc
movsl
sarl
cmp
sbb
je
mov
dec
fistps
pop
mov
test
ret
shrb
and
mov
lods
mov
add
mov
fmuls
ss
cmp
dec
mull
pop
mov
mov
mov
cmc
in
les
dec
pop
stc
mov
shl
test
jns
cmp
rorb
pushf
sbb
sbb
rcr
and
rclb
shr
and
lods
ja
mov
inc
sbb
inc
in
shrb
pop
or
repnz
jo
push
pavgb
repnz
fidivrs
test
mov
cltd
loopne
sbb
outsl
jb
xchg
xchg
push
dec
out
fadd
and
cmc
ds
fcompl
and
enter
dec
clc
mov
cmpsl
fmulp
stc
dec
push
push
pop
insl
inc
out
shll
and
sbb
fisubrl
fistl
popf
call
inc
cltd
cmp
pop
xor
movsl
pop
cmp
in
jp
jmp
adc
mov
sub
leave
scas
ret
sub
gs
mov
xchg
popa
mov
jnp
inc
ja
pushf
ret
sbb
dec
in
imul
adc
aad
sbb
in
outsl
or
jg
and
mov
mov
cmp
sub
into
fucomp
pop
jl
aam
aas
jecxz
enter
push
mov
jae
and
xchg
cmovge
test
aad
pop
mov
test
push
adc
fcmovb
pop
and
add
sub
push
sub
icebp
cltd
call
out
outsb
xchg
xchg
push
test
out
es
pop
scas
cmpsb
std
jb
xor
arpl
pop
movsb
bound
or
xchg
add
inc
xor
lea
lret
insl
sub
mov
shlb
mov
or
ret
outsl
andb
fwait
aas
pop
and
mov
cs
xor
imul
push
xor
inc
jae
repnz
divb
rol
jecxz
sub
orb
push
in
inc
fldcw
incb
jns
ja
ret
push
mov
imul
fadds
xchg
mov
jmp
sbb
arpl
mov
add
adcl
in
imul
mov
stos
rcll
aaa
fs
shrl
out
cmc
ljmp
aas
out
push
adc
addl
inc
pop
jmp
mov
sahf
adc
add
dec
pop
mov
push
push
add
testl
fimull
dec
clc
pushf
mov
inc
test
jnp
or
xlat
mov
and
data16
mov
sti
int
mov
sbb
aam
pslld
lods
add
ficomps
sub
or
movsb
jo
loope
clc
mov
mov
sub
andl
xor
add
rol
jp
push
outsb
aam
jne
in
mov
pop
sbb
xchg
aaa
and
add
adc
stos
pop
js
fnstcw
push
mov
lret
push
and
jg
jns
pop
lods
shll
iret
stos
add
mov
adc
push
pop
roll
cmc
sub
mov
dec
jb
outsb
mov
and
cwtl
nop
in
pop
jle
xlat
pop
mov
jmp
sub
test
xchg
jno
adc
popf
cmp
mov
adc
lods
movsb
xchg
repnz
leave
popf
adc
add
lcall
jl
adc
lret
mov
mov
adc
sar
add
and
call
inc
or
mov
clc
add
in
pop
push
negb
jne
aad
inc
adc
xchg
rclb
xchg
and
mov
fucomip
adc
cltd
clc
push
dec
int
out
aaa
addb
jmp
clc
std
lods
sbb
ds
mov
xchg
popl
cli
cmp
ret
shlb
out
movsl
jecxz
mov
xor
pop
push
incb
adc
mov
lahf
mov
push
inc
ret
hlt
data16
mov
mov
inc
test
push
call
dec
mov
pushf
ret
pop
inc
add
mov
aad
and
in
pop
mov
adcb
into
fcomps
push
or
ljmp
sahf
stc
xchg
jno
or
mov
jae
cld
daa
movups
repz
jnp
mov
mov
adcb
es
imul
adc
daa
lahf
fldt
mov
inc
test
cmp
adc
sub
lret
jg
mov
sub
xor
cmpsb
xor
sbb
sub
fsubp
xchg
mov
mov
add
mov
stos
add
sbb
mov
stc
pop
mov
ja
into
or
rcl
push
mov
ret
xor
in
pop
loopne
fisttpll
dec
scas
icebp
stc
out
jns
pop
xchg
or
xchg
pop
fcoml
or
mov
xchg
sahf
xor
pop
xor
movsb
popa
mov
pop
loop
pop
movsb
fisubl
divb
gs
or
arpl
inc
and
pop
fcoms
in
lods
lret
cmp
mov
or
pop
cwtl
xchg
dec
adc
adc
xor
lcall
and
aaa
ret
xchg
cmp
data16
pop
lods
jle
mov
dec
pusha
call
push
push
sub
xor
mov
cld
add
or
add
push
imulb
out
add
pusha
leave
or
cmc
add
inc
adc
lods
loop
push
popf
xor
aad
push
push
adc
insl
in
push
outsb
pop
adc
dec
mov
jmp
push
and
dec
lcall
ja
mov
pop
mov
mov
fcoml
ss
mov
or
and
out
cmp
in
dec
sbb
mov
fistpl
add
cltd
and
sbb
sarl
divb
adc
cmpl
push
mov
adc
pop
into
leave
stos
popa
adc
or
loopne
int
add
add
xchg
dec
imul
jmp
mov
inc
leave
push
imul
hlt
cmc
jecxz
pop
mov
roll
push
mov
xor
xchg
cmp
push
adc
sti
adc
and
lahf
or
sbb
int
repz
divl
stos
cmp
adcl
imul
mov
clc
sahf
scas
sbb
inc
pop
int
not
sbb
shll
int
loope
mov
pop
push
lods
pop
mov
or
xor
xorl
pop
sub
inc
inc
and
add
cwtl
stos
push
cmp
and
cmovg
in
mov
push
and
adc
pop
outsl
repz
mov
push
aas
jnp
cmpsb
mov
sub
cmp
cmp
jbe
adc
or
xlat
xor
xchg
setno
or
pop
fimuls
xchg
sbb
jbe
ss
cwtl
cmpsb
adc
std
out
xchg
mov
push
and
ds
mov
sbb
lea
mov
cmpsl
sub
jg
ja
dec
aaa
fsts
in
mov
pop
ljmp
sarl
inc
jnp
pop
or
insl
dec
add
xor
pusha
xor
je
jbe
mov
or
test
movsb
add
mov
dec
and
daa
scas
sub
test
int3
mov
cli
enter
push
sbb
add
push
dec
inc
fldt
xchg
cwtl
je
mov
lds
mov
pop
xchg
dec
adc
add
je
test
fwait
lods
das
sub
and
ja
mov
adc
mov
xor
inc
inc
inc
movsb
adc
adc
mov
push
add
es
insb
mov
outsl
shll
les
sti
xchg
mov
pop
mov
dec
jecxz
mov
xor
push
cmp
sub
ja
and
std
enter
in
popa
mov
jl
mov
adc
xorb
inc
imul
fld
xor
mov
pop
and
shl
sub
sahf
adc
sbb
mov
mov
xchg
mov
fsubr
xchg
iret
roll
adc
mov
push
push
inc
push
sahf
pop
shll
pop
push
stos
mov
or
jnp
popf
cwtl
mov
popa
test
rcrl
loop
pop
jo
fcomps
jmp
add
xor
mov
pop
stos
sbb
loope
scas
addr16
mov
push
sub
dec
pop
movsl
aam
repz
cmpsb
xlat
lods
into
sbb
or
into
or
out
imul
inc
rcl
sub
in
out
outsl
ret
and
imul
cmpsb
dec
and
out
add
jno
mov
mov
mov
or
das
leave
aam
push
clc
into
jmp
repnz
sbb
mov
int3
sbb
into
and
dec
std
into
hlt
movsb
xchg
add
xchg
pop
and
dec
jge
jns
or
lret
dec
or
add
add
sbb
psubw
ds
jmp
fisttpll
push
gs
sbb
pop
test
jb
dec
aad
js
outsl
xchg
std
fisubs
pop
sub
inc
add
rorl
mov
mov
clc
mov
out
mov
test
push
test
add
mov
mov
fsts
iret
adc
aam
out
push
rcl
insl
lock
loopne
add
rorb
repz
mov
or
out
aaa
mov
dec
sub
inc
inc
ret
adc
adc
pop
inc
push
mov
xchg
or
jp
aam
jnp
popa
jne
imul
jle
subb
mov
sar
cmpsl
mov
jb
or
push
test
call
push
pop
inc
mov
sbb
and
fwait
lcall
dec
dec
sub
cmp
into
addr16
fildll
cli
orl
pcmpeqw
insb
shll
loope
movsb
xchg
mov
mov
adc
sahf
shlb
mov
divb
enter
call
ret
lcall
outsb
xor
sbb
mov
cwtl
popa
je
inc
mov
mov
mov
fnstsw
cmp
aas
loop
fwait
add
lahf
fidivrl
mov
aaa
jl
mov
xchg
sub
xchg
jns
data16
aad
mov
jb
shlb
cmp
inc
mov
sbb
mov
fcmove
mov
sti
pop
subl
stc
imul
push
std
cli
xchg
inc
xchg
xorb
sbb
mov
push
pop
pop
mov
mov
dec
shl
in
ds
int
lods
and
lods
sub
adc
cmc
mov
testl
mov
and
movsl
mov
push
xlat
filds
cmp
push
gs
or
sbb
test
mov
mov
int
hlt
pop
outsl
arpl
cmc
and
mov
mov
std
xor
popf
lds
mov
fcoms
fucomi
addb
int3
mov
xorl
pop
rcrb
rcll
pop
fwait
push
fwait
jp
lods
mov
sbb
and
mov
out
subb
div
lret
dec
cmp
sar
in
cmc
leave
cmp
sbb
and
incl
sbb
fistl
xchg
mov
out
and
add
scas
scas
adc
popa
cs
int
stc
and
adc
mov
pushf
mov
mov
mov
roll
xchg
lret
or
sarb
cltd
int3
mov
jecxz
jp
jp
insl
xor
cmc
sub
pop
and
mov
hlt
imul
stos
sti
lds
jns
mov
jmp
jmp
mov
mov
mov
add
adcl
scas
jp
icebp
loope
fldenv
lock
jge
fcomps
test
fwait
je
pop
xlat
shr
mov
push
cmp
dec
pop
cltd
adc
push
push
in
push
push
aad
out
dec
mov
movsl
cmc
dec
inc
test
pop
out
aas
fcmove
cmp
inc
call
ret
ss
dec
cmp
imull
loopne
rol
pop
mov
jle
xor
and
mov
pusha
inc
in
lahf
sti
jg
adc
adc
addb
lret
mulb
pop
xchg
popw
xor
outsl
or
in
or
scas
inc
jo
gs
std
add
inc
and
bnd
cwtl
negb
outsl
and
ret
stos
and
out
fsub
mov
aam
inc
mov
mov
clc
pushf
imul
lcall
insl
out
and
ds
push
test
mov
pushf
and
daa
push
pop
dec
mov
ljmp
mov
inc
sbb
shl
cli
pop
lcall
and
pop
fcoms
sub
in
leave
jnp
mov
nop
inc
jmp
stos
pop
frndint
daa
jl
insl
sub
adc
mov
add
pop
ret
pop
in
or
push
mov
xchg
test
cwtl
push
pop
adc
aas
in
ret
in
mov
leave
cld
pusha
mov
mov
nop
fwait
push
push
repz
mov
cmp
cld
push
lods
pop
lds
out
jno
mov
in
cmp
lea
xor
mov
mov
divb
dec
mov
js
in
sbb
pop
stos
push
inc
mov
jmp
mov
jp
scas
xor
push
or
inc
jne
pop
mov
jecxz
pusha
push
test
ds
mov
sbb
lods
pop
push
push
and
pop
fcoms
addr16
test
mov
loop
das
shrb
aam
cmc
xchg
push
lret
ss
enter
mov
pop
aad
jb
and
ret
lea
xor
adc
push
addr16
in
mov
out
adc
popf
shr
add
add
popf
push
mov
jno
and
fs
pop
xchg
mov
xchg
repnz
mov
cmp
jmp
ss
loop
and
inc
movhps
loopne
inc
outsl
addr16
pop
mov
xor
ficomps
push
mov
ljmp
out
dec
push
in
sbb
dec
pushl
aaa
cmpsl
leave
pop
pop
sbb
pop
mov
dec
fcompl
mov
mov
mov
bound
jne,pn
ret
stos
pop
popf
pop
scas
adcb
mov
jnp
and
out
outsb
lcall
jg
mov
pushf
cmp
xor
aaa
sub
cmpsl
pop
sbb
or
jg
xchg
shlb
data16
iret
sub
adc
ret
sub
push
movl
mov
ljmp
iret
pop
pop
les
pop
lahf
add
push
adc
nop
fmuls
sub
cmp
clc
cltd
pop
push
shr
stos
jnp
aas
aad
adc
stos
out
cmc
rcrb
mov
dec
mov
aad
sub
sub
mov
jo
daa
test
ficompl
insb
pop
lahf
ja
repnz
push
pop
add
shll
scas
jmp
push
imul
inc
decb
ja
xlat
hlt
xor
ficompl
jnp
dec
clc
les
jp
add
icebp
mov
ss
sbb
xor
sti
jmp
jmp
or
shrl
ds
cmp
out
in
int3
cmp
push
call
inc
scas
decl
jae
popa
pusha
xor
inc
cmpl
and
pop
jbe
mov
jb
clc
jp
in
out
dec
movsl
pop
mov
push
lds
mov
testb
loope
rorb
xchg
dec
hlt
mov
stc
jb
mov
int3
mov
mov
sub
sub
jno
inc
pop
lret
and
lcall
insl
out
decl
pusha
repz
xor
rcrl
call
push
pushf
pop
sbb
lahf
jmp
movsb
jno
push
dec
cmp
repnz
rorb
xchg
dec
mov
pusha
add
or
mov
or
or
push
test
rcrl
lods
shr
ljmp
add
jg
pop
insl
out
imul
sub
add
jbe
hlt
sub
sbb
mov
pusha
sbb
jp
jb
or
test
in
jp
data16
or
lods
aaa
or
push
add
popa
aas
or
scas
pushf
fisttps
dec
adc
pop
mov
cmp
jne
clc
xchg
mull
push
mov
push
jb
aam
scas
add
sti
repnz
aad
out
sbb
cltd
push
enter
add
fucomip
xchg
add
sbb
lcall
aaa
mov
adc
addr16
xchg
loopne
xchg
xor
sbb
lcall
and
jae
cmp
or
mov
lret
cld
xchg
inc
bnd
test
aad
dec
out
or
mov
ret
jecxz
fdivl
mov
int3
out
fidivs
dec
adc
lahf
xor
xchg
ret
ret
nop
sub
loopne
bound
pop
push
andl
out
pushf
fidivl
push
inc
pop
fadds
fmuls
mov
jmp
mov
in
adc
add
outsb
stos
xchg
push
int
pop
stos
lcall
sbb
mov
int
stos
sub
xchg
push
push
inc
out
adc
fwait
hlt
les
mov
pop
push
outsb
shlb
mov
and
xor
xchg
jl
rorl
lret
push
lock
lcall
mov
cmpsl
outsb
inc
scas
xor
enter
lret
mov
xchg
sub
cmpxchg8b
xchg
inc
insl
inc
jle
inc
loope
mov
into
gs
movhps
mov
mov
idivb
arpl
push
adc
fs
jb
mov
mov
rcll
mov
loop
loopne
into
sbb
cld
and
push
mov
addr16
xor
out
inc
clc
call
push
mov
clc
mov
int
add
sub
je
xchg
in
or
sub
fs
pop
lea
add
pop
xchg
cmp
jl
rcrl
in
shrb
jge
or
jecxz
sbb
imul
push
adc
fwait
mov
aaa
add
outsl
mov
xchg
add
add
or
mov
insl
or
shlb
cltd
mov
jns
xchg
aad
arpl
in
ss
cmp
xchg
add
icebp
jl
stc
cwtl
fisttpll
pop
push
pop
sti
cli
or
int
xor
push
or
arpl
addr16
lods
add
repz
movsb
pop
add
add
sarl
push
addr16
and
add
inc
fcoms
and
inc
rorl
iret
add
loopne
out
andb
mov
sbb
roll
adc
sbb
sarl
loop
push
dec
out
push
lods
insl
pop
add
mov
sbbb
insb
shr
repz
cmp
push
mov
add
lcall
push
mov
in
lods
mov
xor
mov
scas
mov
and
out
js
jmp
data16
out
xor
std
orl
les
lahf
xrelease
stos
lcall
cmpsb
int3
out
test
ret
mov
jnp
xchg
mov
stos
jg
pop
out
out
pop
dec
repnz
jne
das
test
insb
into
cld
dec
das
xchg
fldenv
inc
sti
gs
sahf
sbb
mov
std
mov
xor
pop
or
movsl
pop
inc
mov
cmp
mov
push
call
adc
out
inc
lahf
cld
cmpsb
xorb
add
push
lods
pop
xor
mull
xchg
mov
ss
add
shl
les
mov
mov
mov
push
sub
adc
daa
loopne
sbb
lock
in
sbb
sub
shll
sub
cmpsb
cltd
clc
pop
ss
push
jbe
je
adc
movb
push
or
push
push
out
mov
lret
in
cwtl
imul
inc
push
outsb
fdivp
clc
cmp
pop
rcr
lds
enter
jecxz
push
leave
pop
mov
mov
mov
mov
repz
xor
jae
jp
pop
jge
stos
jb
sub
pop
jb
loop
dec
shl
imul
loopne
movsb
push
lds
repz
movsb
repz
js
ss
push
mov
add
lcall
mov
sub
out
push
incl
jecxz
cmp
pop
fcomp
jbe
iret
mov
fs
and
test
loopne
out
out
add
sub
decb
roll
scas
pop
xchg
xchg
ljmp
aad
xchg
add
jne
add
and
repz
push
xor
insl
into
jp
adc
mov
jne
inc
test
cs
shlb
push
ret
scas
shrb
add
mov
xchg
int
lods
add
aaa
mov
jb
mov
push
cmp
ret
pop
lods
jno
add
aad
mov
xor
cmpsl
mov
cmp
les
or
leave
call
out
xchg
icebp
adc
inc
pop
sbb
jl
fidivrs
push
lahf
lea
sbb
in
leave
push
mov
ret
bswap
jb
jmp
addb
dec
jecxz
in
sbb
lds
in
push
movb
in
cltd
in
stos
cmpsl
lahf
fisubrs
test
scas
sub
hlt
mov
pop
outsb
push
pop
cli
mov
ret
mov
mov
jno
shr
fstl
jbe
dec
cmp
les
and
mov
fsubl
lods
xor
cs
and
aaa
dec
mov
inc
sahf
int3
loopne
add
test
pop
sub
dec
bound
lea
push
sbb
mov
xor
sub
mov
push
add
adc
jns
xor
sbb
call
shrl
addr16
jbe
call
push
add
fldcw
frstor
pop
jge
iret
into
out
adc
ljmp
enter
adc
jnp
cmp
jbe
mov
inc
mov
sub
loop
xchg
xbegin
pop
add
shl
movl
xchg
imul
xlat
fdivr
or
std
add
pop
cwtl
popf
xchg
loope
fnstcw
rcll
dec
pop
push
loop
es
pop
ud2
testl
xchg
mov
push
daa
mov
pusha
xchg
orb
push
call
xor
sbb
out
test
js
and
clc
shlb
mov
ljmp
xor
push
js
repnz
shlb
negl
jo
xor
mov
dec
out
push
mov
scas
mov
sbb
pop
ficoml
push
jno
fistl
push
cld
cmc
push
out
mov
push
inc
or
push
or
mov
add
add
jae
pop
mov
jle
cmc
roll
pop
addr16
pushf
xchg
lea
hlt
mov
inc
dec
or
pop
sbb
call
xchg
js
pop
push
inc
and
jle
arpl
in
out
cs
dec
outsb
inc
mov
cmpl
fsubs
push
outsb
out
fstp
push
cmp
or
xlat
xor
push
cmc
inc
pop
mov
sbb
das
pushf
jge
mov
bound
inc
stc
mov
mov
jne
fisubrl
fstpt
shrb
cmp
jb
cld
pop
loopne
push
addr16
shlb
movsl
loopne
pop
dec
dec
lret
jg
push
sbb
rcr
lds
das
rorb
or
popf
inc
dec
insb
cwtl
call
dec
testb
jne
cmp
gs
pop
mov
xchg
push
aam
dec
inc
arpl
fsubp
dec
dec
pop
in
push
add
cltd
lds
lock
daa
cltd
out
dec
push
and
sub
xchg
add
xchg
icebp
rcl
call
cs
loope
mov
icebp
sub
xchg
xchg
mov
out
das
lcall
out
shl
lock
inc
scas
mov
orb
pop
addr16
dec
push
mov
xchg
ds
jle
xlat
xor
and
mov
insb
jmp
sub
sbb
into
popa
outsb
adc
add
mov
dec
or
rcrl
mov
mov
sbb
fcomp
adc
mov
std
inc
ret
add
add
subl
add
inc
ret
push
sub
jae
ja
adc
out
daa
arpl
add
push
cmp
push
jno
test
scas
in
jecxz
cmpl
add
popl
es
pop
mov
insb
daa
mov
sub
mov
icebp
push
lods
shrl
mov
jnp
adc
stos
cmp
push
ja
cltd
and
das
imul
lret
stc
rcr
jg
scas
xchg
test
pop
sub
sar
shl
ss
in
shll
xor
lods
subb
jecxz
fdivs
in
inc
add
fwait
jno
add
inc
mov
or
mov
aas
cmp
mov
and
inc
out
adc
dec
mov
mov
mov
cmp
aam
xlat
pushf
mov
push
addr16
repz
popa
push
and
inc
shl
dec
jo
jmp
push
out
push
imul
ljmp
xlat
in
cld
sub
adc
test
cmpsl
dec
or
loopne
or
dec
mov
inc
aas
int
mov
pop
dec
inc
jg
enter
mov
jle
stos
cmp
jg
lods
in
jg
jge
iret
repz
or
mov
outsl
mov
pop
fwait
inc
ds
jbe
scas
push
lret
lds
sahf
jg
push
push
push
jne
sarl
insl
add
cmp
xchg
mov
add
inc
in
dec
leave
lret
mov
xchg
je
cmp
fbstp
lods
cs
mov
mov
jno
or
int3
icebp
shlb
pop
sti
sti
sbb
dec
std
in
mov
or
jmp
lcall
shl
xor
shll
stc
xor
mov
xor
dec
popa
int
mov
cltd
push
movsl
sub
mov
adc
cmp
movsb
mov
leave
xchg
mov
jmp
fmull
inc
xchg
sar
cmp
fisubrl
add
sbb
ljmp
sbb
sahf
gs
sbb
cli
adc
clc
add
xchg
pop
dec
jae
dec
and
mov
lock
jecxz
xor
and
sbb
inc
push
add
ret
insb
aam
sub
push
inc
insb
inc
fcomps
adc
xor
pop
xchg
sbb
mov
ffreep
ss
cli
test
cmp
inc
jne
add
xchg
xlat
mov
lea
pop
pusha
and
and
out
scas
es
pop
cwtl
jmp
enter
inc
pop
bound
dec
xchg
jl
outsb
adc
xorb
push
lcall
lock
rclb
mov
push
and
and
mov
outsl
je
popf
inc
xchg
jge
push
inc
in
cli
mov
sub
pop
es
cltd
stc
jnp
inc
inc
mov
mov
testb
add
push
mov
movsb
data16
dec
inc
inc
popf
push
adc
adc
push
jg
mov
jbe
pusha
pop
mov
bswap
cltd
scas
jbe
fiadds
mov
push
inc
in
inc
je
pushf
add
mov
mov
mov
push
in
pop
add
jnp
nop
and
pop
xchg
mov
sbb
movsb
out
jae
dec
cltd
mov
std
sbb
pushf
test
and
loop
add
fdivrp
mov
dec
icebp
mov
add
mov
inc
adc
mov
cmc
rcl
fsubrp
leave
adc
iret
xchg
imul
fs
daa
imul
das
inc
stos
vpsubsw
inc
imul
not
adc
xchg
xor
cld
addr16
pop
das
out
jnp
inc
cmpsb
lahf
and
dec
jg
and
cmpsb
xchg
adcl
es
cld
aas
xchg
and
subl
ja
cmpsb
cltd
cmpsl
addb
popf
mov
into
and
inc
lcall
adc
pop
shll
movsl
mov
xor
shl
adc
pop
repz
mov
xchg
sub
pop
and
cmc
movsl
lock
xchg
mov
cltd
inc
ds
jns
inc
ljmp
pushf
mov
imul
sub
sarb
ja
mov
je
fists
arpl
ror
cmp
mov
je
xchg
fisttpl
test
jns
sub
mov
les
sbb
xchg
je
lods
jle
hlt
inc
mov
loope
xor
add
xor
daa
mov
adc
in
ss
mov
imul
jno
xlat
add
sti
outsb
call
mov
jle
xchg
inc
xchg
shll
add
and
outsl
pusha
adc
aam
inc
repnz
into
dec
xchg
sub
and
mov
mov
mov
pop
jmp
sub
stos
mov
xor
repnz
inc
push
cmp
xor
ljmp
arpl
xchg
cli
inc
jmp
jge
inc
pushf
sub
fistpll
lret
mov
sub
popf
test
adc
mov
fdivl
add
inc
pop
and
lret
mov
out
jecxz
add
mov
lahf
push
es
orl
data16
into
xor
jb
sub
sarl
cmp
xor
into
mov
push
cmp
mov
bound
adc
mov
gs
stos
inc
sub
inc
cmp
xlat
add
inc
jb
pop
arpl
jecxz
rcr
icebp
pusha
idivl
dec
xchg
std
mov
cmpsl
or
push
xor
adc
jo
pop
pop
je
cmpsb
mov
stos
add
jmp
mov
shll
xchg
dec
lods
pop
aaa
insb
mov
inc
pop
aam
pusha
negb
aas
imul
aaa
shlb
sub
jno
sub
fcmovnb
imul
add
xor
xchg
vcvttps2dq
pop
prefetch
mov
mov
lods
lahf
sub
push
push
fbstp
lods
cmpsl
inc
mov
adc
mov
jle
outsb
enter
inc
pop
mov
dec
int3
cld
pop
add
ja
das
sub
pop
mov
push
je
push
xchg
fucomi
das
or
and
push
sub
cmp
sub
adc
jnp
cs
outsl
mov
xchg
or
lahf
adc
loopne
int3
mov
lds
sbb
out
lret
sahf
sub
inc
fs
rclb
fstps
jns
out
mov
xchg
push
pop
xchg
lahf
fnstcw
xchg
push
push
jmp
mov
mov
jle
insl
or
jbe
test
outsb
fnstenv
idiv
mov
jl
popf
dec
jae
packsswb
lret
jb
or
nop
imul
stc
or
push
dec
mov
shll
pop
pop
xor
adc
xor
xchg
outsl
mov
addb
jae
pop
sub
je
push
out
xchg
popf
add
adc
out
dec
hlt
pop
inc
mov
sbb
sbb
mov
add
ja
or
xchg
sbb
jge
sbb
jg
mov
std
mov
mov
push
mov
roll
add
js
cmp
cmp
dec
out
out
sbb
fldl
jns
test
stos
in
and
imul
adc
jmp
sbb
ret
insb
and
lock
xchg
les
inc
rcrl
sahf
mov
int3
jle
push
xchg
mov
mov
rcrl
not
sub
mov
jle
sub
pop
add
rolb
fs
add
xchg
mov
jge
scas
sub
sbb
cli
insb
xchg
and
repz
in
sahf
fs
mov
jmp
cmp
xor
pop
mov
pop
jbe
xchg
cmp
fisubrs
mov
xchg
ljmp
pop
sbb
lcall
mov
inc
sbb
fwait
imul
ffree
test
mov
xor
outsl
or
cmp
enter
scas
push
lret
out
mov
rcl
sbb
xchg
mov
and
mov
adc
sbb
push
mov
adc
jmp
stc
paddusb
push
mov
out
mov
sbb
daa
cmp
adc
lahf
iret
sbb
cmp
addb
xor
and
and
push
shrb
rcll
and
ret
in
add
cmpsl
mov
mov
les
xchg
cmp
pop
cmpsl
loopne
lock
imul
lods
inc
sbb
aas
test
push
adc
lock
test
dec
fdivs
scas
mov
dec
orps
and
pushl
jo
fmul
scas
lret
insb
mov
dec
cltd
and
xchg
sub
jmp
mov
shrb
cld
pop
fnstenv
mov
mov
test
cld
pop
jae
mov
fsubrl
cmc
imul
mov
icebp
inc
mov
dec
lret
mov
call
xchg
push
mov
xor
sbb
std
and
add
and
mov
push
fwait
aad
repz
adc
call
mov
pop
addl
pop
xchg
or
sub
mov
push
pop
sahf
dec
mov
pushf
or
lods
cmp
or
add
sub
out
mov
in
pop
cmp
sub
add
mov
lahf
nop
mov
ss
xchg
pop
movsb
in
pop
xor
fdivrs
xor
ds
movsl
add
inc
and
aad
iret
int3
xchg
loope
add
repz
adc
add
xchg
and
cmpsl
daa
fdivl
sub
daa
xchg
cltd
out
cmp
pop
mov
inc
dec
das
pop
fsts
jae
mov
mov
stos
unpckhps
sub
outsl
pop
add
js
ss
cld
and
pop
in
inc
adc
aam
sahf
adc
inc
jmp
lock
pop
into
aaa
push
popa
xor
enter
push
mov
inc
mov
mov
mov
inc
sub
imull
xor
push
pop
arpl
sarb
fabs
fstl
mov
aad
pop
dec
and
sub
fsubrs
pusha
sub
stos
mov
in
jbe
pusha
xchg
push
fwait
addr16
pop
jge
push
cmovle
mov
sbb
into
xor
push
outsl
lds
enter
jo
jge
jb
rorb
mov
adc
sbb
adc
add
and
lds
in
or
and
fdivl
pop
dec
insb
fcmovne
jne
cmp
cmp
aad
jl
pop
adc
mov
rorl
pop
pushf
sti
push
xchg
jno
clc
xor
or
and
mov
in
push
jno
int
jp
pshufw
into
xchg
xor
pop
sub
int3
mov
pushf
mov
jmp
pop
xor
sub
sbb
into
clc
inc
test
rcll
add
inc
push
icebp
sub
mov
clc
xchg
das
xchg
outsl
cli
sar
cltd
pop
jle
cmp
dec
cmp
stos
pop
in
fbstp
and
or
out
cmp
test
mov
arpl
jno
jmp
jo
les
add
inc
push
and
les
cld
lret
in
test
je
out
lret
push
ret
icebp
orl
jbe
cs
xor
roll
cmc
shlb
fstps
sbb
add
outsl
in
push
or
imul
popf
decb
xchg
sub
sub
cmp
xor
xor
or
ja
mov
dec
and
stc
ss
loope
push
dec
rorl
jle
stos
leave
xor
jno
pop
or
popf
andl
push
adc
mov
das
aad
into
jl
mov
sub
and
and
xchg
or
jmp
scas
outsb
les
or
repz
dec
sub
adc
and
push
fwait
push
mov
and
jo
mov
mov
cmp
xor
add
pop
ret
xchg
add
stc
aas
inc
ljmp
dec
lods
mov
inc
adc
ss
jg
cwtl
jo
in
mov
dec
aam
popa
in
pop
sbb
ret
push
cli
vmptrst
push
das
adc
icebp
and
sbb
push
add
mov
mov
jle
nop
test
jo
aam
lcall
jmp
add
mov
out
je
mov
adc
aas
add
push
subl
push
xchg
adc
dec
into
gs
aam
repnz
insl
lods
pop
jmp
dec
nop
int
or
imul
jp
pushf
filds
sbb
push
fildll
sub
stc
add
aad
pop
jmp
jns
loope
and
xorb
jl
xchg
push
add
shl
mov
test
xchg
inc
pop
andl
pushf
mov
push
dec
arpl
xchg
add
mov
das
sbb
pop
inc
movsl
insl
and
ljmp
lcall
pop
add
test
push
or
jl
mov
add
mov
cmpsl
xor
lods
fidivl
notl
cld
and
mov
inc
test
aam
stos
sbb
inc
lcall
cmp
jge
and
dec
sbb
das
pop
loop
push
notl
xchg
xchg
jl
sbb
inc
cmp
cmc
fldz
pushl
mov
xchg
push
data16
icebp
cmp
xchg
iret
sbbl
pop
jmp
es
mov
fst
jle
dec
pop
mov
test
xorl
call
jo
stos
jl
or
adcb
and
pop
mov
aas
stos
push
pop
popa
mov
cmp
popf
pop
mov
pushl
xor
aas
js
les
mov
adc
ret
dec
pushf
loopne
daa
scas
jmp
faddl
dec
ds
ja
stos
sub
pop
cli
repnz
mov
lahf
arpl
jne
xorb
cmc
test
out
lock
js
dec
imul
repz
insb
ss
xor
lahf
push
push
cmp
rolb
add
shrb
repz
fmull
sub
lcall
adc
stos
pop
int
jne
push
in
add
jo
xchg
or
loope
stos
shrl
iret
push
dec
pop
into
jmp
data16
pop
in
insl
mov
into
mov
xor
out
add
ljmp
in
je
clc
add
sub
mov
sti
sbb
jne
lods
pop
inc
pop
cmp
mov
sub
rorl
xchg
fsts
mov
push
adc
cs
sub
pop
jl
sti
pop
adcb
xchg
shlb
pop
rclb
push
andb
push
js
push
movsb
dec
cwtl
mulps
icebp
push
adc
rorb
clc
jbe
push
in
sbb
dec
jle
aaa
cmp
xor
xchg
inc
sbb
fisttpll
xlat
and
lret
push
jno
mov
mov
push
insb
or
add
dec
dec
sub
mov
inc
pushf
xor
popa
jnp
pop
lds
js
loopne
mulb
insl
xor
in
or
mov
in
pusha
pop
pop
jb
cmc
test
popl
fwait
cmp
mov
pop
loope
pop
andl
mov
in
ds
jnp
rcr
push
loopne
lock
mov
mov
sub
sar
xor
or
dec
xchg
and
cld
cmp
mov
andl
lcall
imul
repnz
sbb
movsb
push
push
jl
cmpl
adcb
adcl
mov
mov
and
test
jo
dec
aam
jl
subl
les
jle
inc
jnp
push
idivl
and
xlat
enter
mov
mov
jp
push
inc
pop
xchg
xchg
test
ja
adc
decl
mov
ficompl
sub
pop
add
add
fnstcw
jmp
xchg
clc
xor
pop
cmp
mov
jp
movsl
dec
sbb
aaa
neg
and
lret
js
push
xor
mov
loop
pusha
loope
mov
jo
dec
jle
int
enter
or
and
pop
outsl
jmp
adc
add
ljmp
pop
mov
fld
push
xchg
mov
dec
daa
sbb
mov
out
insb
ret
pop
int3
cltd
cmp
jno
rcll
leave
push
ja
popa
mov
jg
lret
fs
imul
andb
aas
pop
test
adc
lret
leave
add
stc
pop
jl
or
call
adc
mov
lock
inc
aam
mov
mov
out
lods
pusha
jno
mov
loop
std
stc
mov
pop
stos
xchg
in
lret
fnstcw
jbe
cltd
and
cmc
aas
mov
mov
mov
or
mov
xor
aaa
xor
xchg
cwtl
or
cmp
enter
shl
test
test
dec
insb
mov
dec
dec
sbb
inc
inc
push
scas
pop
dec
add
daa
sub
adc
clc
das
fcomi
div
inc
lods
pop
or
push
cmp
test
ret
in
shrb
lock
pusha
mov
mov
mov
xor
leave
data16
jae
push
xchg
jo
xchg
cltd
mov
dec
dec
xor
fsubrs
jae
adc
mov
into
iret
out
xchg
sbb
push
rorb
mov
popa
jns
test
dec
adc
add
push
fadds
inc
sti
xor
fimull
stos
outsl
xchg
loopne
iret
dec
sub
adc
sub
cs
xchg
pop
adc
fs
je
inc
lods
ds
in
mov
stos
adc
pop
bswap
sbb
ljmp
imul
mov
jns
jns
in
mov
jno
push
js
roll
stos
jl
repz
mov
mov
sub
loopne
dec
std
sbb
popf
or
dec
loope
mov
xor
cmp
jge
inc
les
sti
add
inc
scas
mov
rclb
xor
push
jbe
xchg
aam
sbb
and
inc
faddl
sub
arpl
and
dec
push
sub
iret
mov
xor
jbe
in
repz
aam
pop
imul
rol
je
bound
lods
mov
loop
gs
xchg
and
push
jmp
mov
test
test
push
hlt
push
mov
jb
mov
ret
call
imull
negl
sbb
es
mov
xor
cwtl
fwait
adc
mov
mov
lods
mov
xor
inc
lret
mov
pop
sbb
push
cltd
and
jp
push
outsb
sti
mov
lret
ds
xchg
je
insl
jne
imul
mov
rcrl
stc
dec
cmp
sub
jbe
push
mov
loop
push
sbbb
xor
loop
add
movsl
sub
les
sarb
ss
cmp
pop
xchg
fs
repz
add
pusha
shll
and
xchg
fldl
shrb
out
cmp
jnp
mov
les
lods
fimuls
and
cwtl
mov
mov
popf
sub
push
lahf
outsb
xchg
push
movsb
incl
data16
sti
adc
pop
lds
lret
leave
test
fwait
push
mov
imul
jecxz
mov
mov
pop
or
dec
pushf
test
add
shll
dec
or
mov
loop
adc
xchg
adc
pop
xchg
jle
lahf
pop
xor
inc
xchg
mov
mov
lock
sbb
les
cmp
mov
fdivs
sbb
mov
and
divb
xchg
xrelease
push
mov
inc
inc
xor
pop
push
jo
cmc
pusha
push
cmp
ret
scas
pop
add
jl
cmpsl
and
inc
movsl
add
inc
jl
sti
adc
in
sarb
mov
sbb
outsb
pop
push
sahf
les
adc
inc
pop
cmp
adc
push
test
adc
idivl
and
fidivrs
retw
mov
dec
add
mov
les
cmp
inc
cmp
pop
fsubl
jmp
or
les
and
add
movsb
add
add
loope
mov
lret
rorl
outsl
arpl
mov
jle
repnz
mov
call
imul
addr16
movsb
or
into
int3
loope
jae
push
add
xchg
gs
icebp
push
pop
mov
in
jl
test
pushf
cwtl
sbb
pop
int
or
mov
mov
jmp
fistps
aaa
dec
repnz
inc
ja
jae
cmp
leave
sbb
add
in
ds
outsb
aad
leave
adc
fimull
xchg
das
ss
inc
or
lock
mov
mov
imul
fists
pop
sbb
dec
sub
inc
loopne
jno
mov
fsubl
mov
sbb
enter
inc
or
adc
rcrl
jle
lds
fistps
cmpsb
ror
icebp
mov
lcall
arpl
cmpsb
pop
xor
cltd
jb
xchg
lock
push
mov
das
popf
adc
sub
sarl
mov
cmp
mov
imul
push
test
mov
pop
sbb
add
push
mov
push
inc
not
fcos
lock
dec
insl
xchg
pop
movsb
out
sahf
inc
push
mov
and
aaa
and
adc
mov
sbb
or
shll
or
push
cmp
cld
cmp
cmp
sub
fs
dec
pop
shll
pop
pop
cmp
or
insl
pop
repz
fucomi
mov
divb
xchg
xchg
mov
out
es
xchg
aam
push
add
sbb
int
mov
out
clc
mov
aam
sub
sahf
xchg
adc
or
jmp
mov
jmp
clc
in
es
repnz
push
sub
mov
pop
lea
push
ficompl
lea
stos
mov
fs
push
push
aam
pop
xchg
jne
js
push
sub
notl
xor
xor
pop
mov
stos
pop
and
sbb
popa
mov
rol
jns
ret
jmp
cmc
lds
add
stos
add
pop
mov
mov
lret
es
jno
in
stc
sbb
cmc
and
dec
push
xchg
sub
je
adc
lods
sub
in
imul
push
loop
cmp
js
xchg
mov
ja
fiadds
ds
out
out
iret
inc
movsl
cmc
push
cmp
das
or
xor
jecxz
adc
xor
cmpsl
pop
cli
xchg
jne
xlat
push
addr16
dec
cld
mov
sbb
and
sbb
shlb
xchg
add
adc
mov
cmpsl
mov
out
movswl
jno
cs
sbb
out
adc
mov
cmp
mov
xlat
pop
xchg
or
add
outsb
int3
lea
jecxz
sub
in
push
mov
lret
negl
cmp
lcall
add
add
or
shrb
mov
mov
jno
lahf
das
scas
ss
lret
lea
mov
std
shlb
adcb
dec
xchg
sub
pop
flds
addr16
jle
repnz
icebp
cs
pop
cwtl
xlat
call
cmp
std
jg
xor
jo
ss
push
and
sbb
imulb
jae
lret
sub
jnp
sub
mov
js
fisttpll
mov
push
out
cmp
jno
pushf
pop
mov
je
xor
mov
add
adc
and
sub
rcll
mov
aam
out
lret
ds
jecxz
es
push
dec
pop
aam
daa
stos
jno
mov
sbb
shl
pop
fsubr
fdivr
fcmovnb
scas
cmp
nop
ret
movl
rcrb
in
mov
clc
scas
lret
or
pusha
push
push
and
jo
adc
cmp
or
lds
iret
fimull
add
xor
lock
mov
adc
enter
push
jne
add
and
push
mov
mov
dec
clc
mov
push
mov
mov
jnp
mov
ds
mov
adc
nop
insb
cmp
jns
xchg
mov
xchg
jnp
xchg
mov
pop
les
adc
cmp
xorb
or
test
xchg
adc
sub
pop
in
das
test
mov
jae
inc
or
in
mov
mov
call
repz
faddl
and
ljmp
sub
int
mov
mov
lret
les
push
lock
inc
aas
xlat
jl
pop
stc
fisubl
jbe
inc
push
ficoms
sub
cli
nop
loope
pop
push
int
add
sti
push
in
jo
sahf
mov
jle
in
clc
mov
dec
mov
cmpsl
fs
cmp
lahf
cmpl
cmpsb
cmp
adc
add
cltd
cmp
int3
or
xchg
jns
int3
mov
adc
fisttpl
mul
out
hlt
enter
sub
add
jno
jb
js
adc
xor
sbb
leave
shll
popf
mov
rorl
fmuls
push
push
and
mov
fbstp
jle
or
xor
mov
cmp
dec
test
add
pop
push
xchg
lods
pop
xor
or
dec
int3
lds
test
pusha
mov
dec
push
test
aad
dec
add
pop
and
and
sbb
mov
mov
add
sub
test
out
push
test
ret
sbb
in
ljmp
pop
push
and
icebp
and
in
movsl
rol
lea
mov
adc
into
int3
jo
add
out
loop
es
lret
test
add
xor
sti
xor
push
fcom
push
fsubp
sahf
push
das
push
mov
rorl
adc
inc
mov
out
pop
sub
test
clc
mov
mov
sbb
test
lahf
es
and
adc
imul
lret
cmpsb
mov
adc
insl
hlt
jbe
call
insb
jbe
insb
sub
mov
mov
inc
popa
jg
or
push
ret
xor
push
pop
outsb
pop
in
lea
mov
add
aad
cmp
jno
loope,pt
shl
and
inc
jbe
pop
gs
add
fdivrs
mov
out
or
imul
push
pop
int
jge
mov
nop
push
and
inc
pop
addl
pusha
dec
mov
lea
adc
mov
lret
out
aam
iret
in
push
mov
cld
insl
das
xor
pop
cmp
movsb
mov
out
ret
mov
insb
adc
enter
jmp
push
jnp
mov
and
jno
jg
cmc
inc
cmovs
in
test
push
insb
ret
dec
enter
jno
insb
arpl
sub
sbb
mov
iret
rorl
leave
in
mov
and
in
xchg
loope
daa
in
dec
loop
ret
out
fsts
adc
cs
decl
jmp
out
mov
push
rcr
clc
dec
mov
loopne
dec
sub
ja
mov
or
lock
pop
pop
mov
adc
cmp
pop
test
lods
sub
es
movsb
enter
jnp
cld
outsb
push
repz
pop
dec
sti
mov
int
lcall
or
mov
mov
test
dec
fcomip
aad
scas
sub
in
jae
rorb
xor
xor
aas
mov
mov
icebp
int
cmpsb
cmpsb
loop
les
jmp
out
clc
lahf
cld
push
jge
mov
adc
mov
cmp
pusha
xchg
inc
mov
sbb
and
sarb
mov
dec
dec
mov
jp
dec
loope
xchg
mov
fstps
adc
fisttpll
sbb
mov
sub
pop
xchg
mov
push
jg
mov
or
sub
add
push
jne
or
jo
in
call
loop
jle
mov
int
sbb
cld
mov
lods
movsl
cmp
cmpsl
rcrl
mov
mov
mov
imul
mov
xchg
mov
push
dec
popa
popa
out
adc
dec
and
cmp
inc
mov
push
and
pushf
jg
inc
psubb
mov
cs
mov
and
call
sub
push
jmp
out
add
imul
sahf
pop
add
or
jmp
std
call
arpl
jmp
shll
movsl
ds
test
xor
mov
neg
push
cmc
pusha
out
sbb
repz
nop
cmpsl
mov
mov
lret
mov
arpl
mov
fwait
sub
mov
xchg
push
inc
mov
sbb
dec
inc
mov
add
fbld
mov
mov
sbb
sahf
test
xchg
orb
rcl
aam
js
ret
out
cmp
outsl
inc
jnp
mov
popf
cmp
aas
popa
loopne
mov
popf
adc
addr16
add
fs
push
mov
sar
dec
mov
hlt
dec
mov
sub
nop
push
mov
rcll
xor
rolb
int
or
test
xchg
jno
mov
pop
jne
out
xlat
push
scas
mov
cli
pop
lcall
sub
pusha
out
je
js
fmulp
mov
push
jns
sbb
xchg
sbb
stc
repz
ficoms
cld
or
mov
xor
mov
inc
jle
xor
inc
loope
imul
sub
cmp
and
xchg
push
mov
insl
adc
shrb
out
push
xor
pop
mov
mov
call
adc
push
pop
rolb
dec
and
ja
imul
sub
jb
inc
mov
inc
xchg
add
fwait
popf
xchg
and
aas
ljmp
xchg
add
loopne
fucomp
mov
xchg
fiadds
in
data16
fiadds
mov
into
sub
aam
call
adc
pop
stos
xor
or
shlb
add
ja
shlb
adc
mov
xchg
scas
dec
push
xor
mov
rclb
pusha
xchg
lcall
adcl
mov
test
and
cmp
cmp
repz
inc
sbb
xlat
pop
in
mov
sbb
mov
sub
gs
test
and
xor
sbb
cmpsl
cmp
cmp
mov
fs
cmp
icebp
cli
sbb
adc
xlat
adcb
push
scas
jbe
mov
inc
mov
cmpsb
test
orb
adc
test
sahf
pop
xchg
insl
mov
xchg
xor
paddq
xchg
cmp
mov
pop
adc
xor
add
and
orl
cltd
loopne
punpckldq
call
xchg
testb
imul
mov
lea
mov
dec
xor
jmp
scas
pop
lds
addl
pop
mov
adc
jg
imulb
loopne
insb
xor
outsl
push
sbb
in
in
ficompl
std
and
cmp
adc
add
and
xor
push
push
in
xor
rorb
pop
inc
lret
leave
pop
rcrb
mov
jmp
jmp
sti
push
lock
repz
aam
test
lock
mov
jmp
test
mov
test
ss
sbb
jge
lea
lea
ljmp
fsubl
arpl
or
inc
lcall
lock
adc
mov
dec
mov
inc
mov
xchg
popa
cmp
das
or
pop
jne
pop
cmp
js
popa
les
xlat
or
or
cmp
lods
xchg
rolb
mov
mov
cmpsb
pushw
aam
adc
pop
xor
aam
mov
cmp
insl
mov
leave
addr16
rcrl
les
movsl
out
sub
cmp
sti
push
sbb
sbb
je
pop
xchg
pop
sub
cld
and
sub
mov
mov
mov
daa
and
cltd
pushf
mov
mov
movsb
mov
mov
in
aad
mov
add
cmpb
inc
cli
add
jbe
jno
scas
clc
sbb
mov
xchg
or
jmp
js
mov
add
pushf
xor
or
das
adc
das
push
add
fbld
mov
fbstp
test
stos
icebp
xchg
das
lods
xor
sbb
rcll
push
mov
mov
pop
xchg
ret
lock
gs
sub
or
or
cmp
sub
sbb
add
inc
nop
out
mov
rorl
scas
inc
fdivrl
pop
or
cmpsb
mov
test
sub
cmp
mov
in
add
xor
sbb
push
lock
shll
push
test
mov
pushf
cmp
subb
dec
push
bound
mov
aad
adc
ffree
ss
cmovno
ds
mov
test
xchg
out
ret
xlat
mov
scas
das
push
roll
lock
mov
sbb
js
lcall
mov
jp
jg
movsb
dec
and
popa
jb
add
loopne
movsl
cmp
mov
movsl
test
std
lea
addl
sub
gs
mov
rorb
adc
jbe
pop
xor
add
lret
push
or
lahf
xchg
fdivrs
pop
loop
addl
cmp
add
stos
cli
sbb
dec
pop
sub
mov
pusha
scas
mov
movsl
sub
es
xor
mov
fiaddl
arpl
add
dec
mov
xchg
jns
xchg
lahf
pop
lea
iret
pop
dec
pop
pop
cmp
lea
shl
jle
cmpsb
add
dec
cmp
loopne
adc
repnz
add
mov
call
jb
mov
loope
push
sub
add
pop
cmp
sub
pop
cmpb
cmpsl
outsb
jmp
xchg
add
cltd
hlt
xchg
jae
add
sbb
cmp
out
je
dec
inc
dec
cmp
sbb
xor
jno
xchg
popl
mov
add
dec
nop
in
jb
aam
sub
scas
insl
lcall
test
add
push
jb
xchg
push
jae
mov
jl
gs
cmp
fs
cwtl
jecxz
out
popf
leave
in
outsb
jecxz
inc
jge
add
xchg
scas
mov
jg
add
enter
add
lods
lahf
std
jno
inc
dec
scas
iret
lods
push
jnp
outsl
int
adc
in
outsl
mov
sbb
sti
push
ret
dec
in
add
push
cmc
movsb
jo
and
xor
lds
mov
mov
addl
imul
loop
dec
mov
test
xchg
call
xor
imul
imul
mov
das
insb
jne
push
sbb
dec
and
or
jmp
mov
add
push
call
jge
repz
or
outsl
mov
push
data16
cmp
pop
popa
gs
ss
or
push
push
fucomip
mov
adcl
ds
mov
fisubs
bound
shrl
jae
aas
fimull
jno
or
je
push
mov
mov
jmp
cld
dec
stos
mov
xchg
imul
dec
movsb
divl
mov
mov
pop
pop
pushf
cmp
xlat
loopne
xchg
rcrl
mov
in
stos
into
dec
add
sbb
lods
enter
lcall
cld
addr16
mov
add
or
or
test
ljmp
divl
insb
mov
mov
dec
mov
test
leave
cmp
mov
add
outsl
xor
or
mov
iret
cs
pop
pop
jmp
mov
sub
cmc
adc
ja
sbb
in
scas
push
pushl
out
in
lret
sbb
int
in
jnp
or
mov
out
insl
xor
dec
gs
sub
jecxz
fwait
pop
inc
xor
mov
stos
pand
repnz
and
mov
push
jp
jle
adc
pushl
sbb
dec
bound
fisubs
gs
loop
mov
shll
call
inc
aas
xor
fisubl
mov
dec
rol
ret
push
in
jl
daa
add
sub
popf
cmp
into
bound
sub
popf
xor
in
push
and
xchg
xchg
adc
dec
les
mov
or
imul
rcr
daa
and
int
test
nop
in
notb
dec
jecxz
cmp
mov
pop
push
aaa
pusha
mov
and
xchg
cmp
mov
sub
cmpsl
imul
ss
sbbb
xchg
das
sub
add
push
mov
inc
fsubl
lods
jmp
push
test
adc
mov
jmp
pop
add
jb
dec
mov
xchg
cwtl
dec
cmp
dec
push
jg
push
fisubs
push
rcll
adc
dec
daa
icebp
jbe
cmp
xorl
push
fildl
inc
insl
jo
mov
mov
jno
cmpsb
pop
mov
mov
jg
movsl
jmp
js
lock
sub
shll
ds
cmc
int
sub
mov
test
fnstenv
or
gs
psrlq
push
outsb
aaa
inc
lcall
fldl
arpl
aas
mov
sbb
and
pop
dec
xchg
inc
test
aam
test
andb
jno
jge
lds
into
imull
in
xor
mov
mov
mov
sbb
test
add
fildll
out
arpl
popa
adcb
outsl
mov
mov
push
rolb
subl
andb
xchg
adc
add
mov
cli
and
pop
or
xchg
out
outsb
in
push
and
mov
jae
int
pop
sub
imul
cmpsb
outsl
fdivl
xor
sbb
inc
jb
xchg
xchg
les
pop
and
ds
xor
ret
int3
in
in
pop
adc
mov
movsl
xor
add
inc
ror
das
shll
xor
sub
std
arpl
inc
pop
in
leave
fmul
inc
rorl
or
mov
mov
sbb
xchg
jecxz
inc
outsb
xchg
in
outsl
aam
mov
and
ljmp
pop
mov
in
jmp
xchg
push
or
lea
push
fs
sbb
dec
push
nop
add
cld
movsl
push
repnz
imul
repz
push
jo
adc
nop
sbb
jno
popf
and
dec
imul
pop
test
aaa
call
scas
push
cli
xchg
mov
test
xchg
pop
enter
and
lahf
mov
lret
scas
mov
push
mov
xor
pop
push
pusha
in
sbb
dec
mov
xor
mov
sub
js
xchg
xor
mov
in
bound
ljmp
mov
scas
sbb
xchg
scas
jmp
lahf
lods
mov
movsb
sub
jp
inc
cmp
enter
frstor
jg
mov
xor
add
push
or
nop
in
jno
inc
adc
das
inc
sbb
es
test
pop
or
xor
aam
add
xor
or
shrl
push
mov
es
push
jg
cmpsl
rcrl
push
and
nop
xor
iret
xchg
lea
xor
and
add
and
fldl
pop
jnp
sub
mov
jb
xor
jecxz
jl
cs
ljmp
ds
outsb
add
inc
fisttpll
mov
rclb
das
pop
fwait
push
xchg
lahf
imul
mov
mov
mov
xor
pushf
dec
cmp
push
arpl
adc
jecxz
sti
push
ds
mov
iret
pop
into
insb
cld
ds
rolb
clc
aaa
lret
fildl
call
mov
or
pop
loopne
scas
xchg
adc
pop
inc
nop
dec
and
int
mov
xlat
fidivl
sub
pop
xchg
push
aaa
ja
scas
stos
pop
div
int3
mov
and
loopne
jb
push
add
fidivl
mov
xchg
mov
nop
cmpsb
fst
icebp
add
lret
in
int
add
iret
das
loopne
inc
out
lods
mov
adcb
arpl
inc
mov
loop
fnstsw
inc
lods
sahf
fwait
ret
adc
dec
aas
ror
repnz
mov
sub
imul
push
das
or
adc
jb
cmp
rcll
push
push
testl
movl
mov
xchg
pop
insl
inc
fisubrs
sarl
push
pop
test
es
incb
and
pusha
ret
movsb
or
inc
aaa
insl
cmp
push
mov
in
movsl
or
sar
sbbl
scas
mov
lret
push
adc
cs
pop
inc
xchg
cmp
shrb
mov
mov
adc
sub
into
sub
movsl
lret
sub
test
ljmp
mov
cmp
xchg
pop
repnz
mov
xor
mov
jne
iret
frstor
icebp
sbb
aad
xlat
mov
sub
add
mov
dec
sbb
stos
cs
xor
scas
shlb
outsb
mov
pop
loop
mov
inc
sahf
pop
fisubl
and
push
lahf
cwtl
aas
out
int
cltd
xor
icebp
sub
jb
je
cmpl
push
fxch
in
aas
fmull
mov
lds
cmp
sbb
mov
ja
in
inc
xchg
negl
scas
test
cmpsl
cmp
or
jmp
test
xlat
popa
cmpsb
mov
cmp
push
add
call
mov
cmp
sbb
ret
in
dec
lea
jmp
loopne
mov
loop
inc
clc
and
pop
ja
hlt
outsb
cmp
inc
mov
sub
and
sub
mov
jge
xchg
jge
daa
daa
ljmp
sub
and
add
sarl
cmp
ret
int
enter
and
xchg
mov
mov
fiaddl
insb
mov
popa
push
mov
add
fcoms
imul
mov
jmp
xor
mov
jnp
dec
fs
xchg
mov
cmp
mov
sub
mov
daa
loope
mov
mov
ljmp
adc
lea
jmp
jp
add
fimull
loope
test
in
mov
inc
jle
and
xor
and
add
test
push
push
jecxz
xorb
jne
lret
fadd
inc
adc
leave
fildll
adc
inc
or
lods
add
dec
xchg
js
std
jmp
sub
mov
xchg
adc
push
ficoml
xchg
incb
daa
or
into
js
xor
dec
jb
mov
adc
lds
or
stos
mov
cmp
lods
jns
xchg
cmp
sub
xor
out
data16
sbb
dec
sub
mov
test
xchg
jo
scas
dec
mov
lret
or
in
jmp
dec
pop
xchg
adc
cwtl
lods
test
clc
fadd
in
in
sbb
sti
dec
clc
dec
or
and
jg
push
pop
lods
adc
loope
mov
sbb
adc
inc
cmc
pop
fsub
and
repnz
push
push
mov
sbb
dec
aam
test
fcomi
add
mov
jge
movsb
xchg
cmp
js
cmpsl
fists
clc
dec
xchg
out
mov
and
dec
sub
mov
and
lock
push
jo
das
sub
imul
fs
scas
xor
or
xor
mov
pop
mov
loop
incl
lcall
jle
pop
loop
movsb
clc
inc
dec
scas
xchg
xor
mov
pop
jg
lds
sbb
or
mov
cmp
mov
jmp
pop
or
pop
xor
push
pop
mov
lcall
iret
xor
test
cmp
inc
imul
sbb
push
sbb
dec
gs
imul
xor
pop
pop
dec
sti
sub
es
aas
push
jae
mov
adc
insb
aam
push
pop
and
fs
lcall
and
jge
and
cmp
xor
sbb
add
pushf
and
ret
dec
pop
loope
stos
fisubrs
decb
in
or
mov
pusha
xchg
sbb
jg
push
das
xchg
dec
xchg
mov
mov
sarl
jnp
jnp
sub
repnz
sbb
pushf
movsl
sbb
jnp
sbb
jle
push
out
popl
xchg
lcall
pop
xchg
stos
jge
jg
stos
ffree
fld
push
decl
clc
jg
sub
mov
das
jns
mov
in
push
test
fwait
sahf
jmp
add
jle
and
push
push
mov
ret
xlat
xor
mov
jg
iret
stos
adc
sub
imul
xlat
pop
add
ljmp
mov
cmp
cld
mov
stos
aad
xor
fisttps
inc
insb
vcvtpd2dqy
out
into
or
mov
xor
lcall
mov
ds
dec
cli
loopne
and
or
testb
sub
or
outsl
xlat
shl
adcb
mov
jno
call
inc
cld
leave
jno
pmullw
out
or
lret
xchg
inc
scas
scas
add
sahf
jp
out
or
push
in
mov
clc
aas
loope
stos
neg
jae
jne
pop
cltd
stos
aaa
push
jno
in
sahf
and
xorl
cmc
and
jmp
bnd
jecxz
mov
push
loop
sbb
repnz
pop
sahf
pop
imul
fcomi
repz
shlb
add
sahf
pop
jns
fwait
mov
ret
lcall
test
mov
mov
add
ficompl
xor
negl
test
push
pop
sbb
loope
jl
xchg
and
inc
cwtl
or
mov
enter
or
sbb
lea
push
rcr
sub
push
andl
ss
gs
scas
pop
inc
gs
cmc
inc
sbb
pusha
dec
pusha
outsl
in
add
mov
das
setne
sbbb
mov
fwait
mov
mov
sahf
mov
andl
mov
cmp
mov
stos
lods
ficoms
fcmovnu
xor
and
mov
les
mov
xlat
mov
push
push
mov
dec
pop
sti
lea
push
pop
fwait
inc
insl
dec
mov
add
xlat
les
cltd
push
into
push
push
lods
fldl
pop
stos
add
xchg
das
int3
xchg
fwait
lret
mov
inc
outsb
cmpsb
daa
mov
pusha
dec
popf
mov
test
lret
inc
outsw
mov
lods
adc
test
jno
add
mov
out
inc
lock
xchg
jl
xchg
ja
out
fsub
xchg
sbb
cwtl
call
cmp
xor
popa
inc
in
pop
or
xchg
popa
jp
aad
pop
jns
lea
jecxz
lcall
mov
cmpsb
mov
out
aas
jle
fsubr
pop
shr
aam
movsl
test
jecxz
aam
dec
lret
pop
and
popl
xor
repz
scas
xchg
xchg
pusha
push
adc
pushf
or
es
jmp
popa
push
ret
mov
cmp
ret
sti
fdivr
ror
sahf
dec
dec
shl
mov
adc
or
adc
mov
es
scas
imul
in
lock
repz
rcrb
jle
arpl
sbb
popa
xchg
scas
imul
xor
cmp
cmp
and
xchg
popf
je
scas
push
lods
sbb
in
out
push
push
rep
lods
and
xchg
and
adc
leave
mov
adc
sbb
mov
shll
mov
sub
and
pop
cmpsb
xchg
ret
loop
or
test
stos
mov
and
pop
fs
mov
shrb
pop
mov
idiv
mov
ss
rcrl
sub
dec
pop
xor
cmpsb
rcrb
into
loope
mov
lcall
aad
int3
es
jns
sti
call
int3
sbb
jno
lret
push
lea
xchg
or
inc
mov
mov
mov
xor
jl
pop
xor
mov
xor
sub
lcall
and
push
std
negb
lret
daa
outsl
xchg
push
pop
in
sub
aad
loope
mov
or
dec
push
inc
lods
add
orb
mov
jno
in
outsl
enter
add
out
jmp
movsb
loop
cwtl
test
push
leave
shrl
ljmp
fadd
sub
or
push
in
push
lods
imul
std
pop
ds
inc
add
pop
sub
push
lods
gs
shr
popa
out
push
sbbb
fldl
aad
inc
sbb
in
push
push
jmp
hlt
mov
sahf
push
stc
adc
xchg
ja
fldl
inc
and
xor
aam
add
inc
mov
push
hlt
pop
shlb
mov
test
push
and
cld
cmp
fadd
insb
xlat
mov
xor
lock
sub
jno
clc
iret
push
mov
sbb
jns
ja
cmpsl
sub
scas
test
sbb
mov
pop
roll
xchg
push
repz
push
xor
fisttpl
arpl
clc
lret
fwait
mov
js
out
clc
jo
popl
repz
or
jge
add
add
pop
push
xor
insl
cs
popa
stos
cmp
add
sub
adc
jnp
and
shl
push
clc
push
pop
add
push
cmp
jo
repz
push
loope
fildll
stc
scas
or
jne
cmpsb
fadds
jp
popa
cmp
xor
das
int
jmp
sub
pop
adc
div
scas
fildll
add
cmp
les
cmpsl
pop
into
into
in
addr16
mov
xchg
push
sub
add
push
sti
addr16
push
mov
xor
ljmp
mov
mov
ljmp
loop
push
nop
sbb
and
sbb
mov
fistpll
jne
cmp
add
cmp
push
adc
fcomp
pop
mov
sahf
in
mov
into
add
ds
or
daa
inc
jb
sbbb
outsl
xor
inc
and
mov
fwait
sarl
lds
cs
ret
ds
lahf
pop
push
dec
sub
in
shlb
mov
out
fwait
addr16
jmp
push
mov
adc
fistpl
push
lcall
test
shlb
inc
push
push
test
andl
das
mov
aad
cmpsl
cmpsb
push
dec
out
jnp
into
sub
xchg
pop
mov
xchg
leave
add
xchg
out
and
sbb
jecxz
or
ja
adcl
mov
sbb
inc
jnp
repnz
adc
mov
std
xchg
jge,pn
pop
sbb
in
sar
std
lret
aam
insb
dec
mov
dec
in
push
test
and
jnp
hlt
es
leave
mov
hlt
cli
cmp
mov
dec
mov
xchg
sub
pop
stc
test
negb
leave
mov
aam
scas
and
sub
into
divl
mov
mov
pop
ret
or
fadd
or
mov
pop
idivl
out
pop
push
lahf
int3
mov
dec
imul
xor
mov
xchg
add
mov
pushw
test
addr16
fucom
int
insb
in
push
pop
mov
mov
pusha
cmp
cmpsb
mov
pop
daa
sub
int
jne
push
loope
scas
jbe
xor
jp
sbb
scas
sti
add
inc
mov
ljmp
mov
lahf
or
jae
out
or
dec
movsl
movsl
mov
insl
or
push
mov
and
jle
aaa
adc
add
add
and
jle
fstpt
pop
imul
mov
add
inc
xchg
jle
loop
jbe
gs
adcl
test
pop
shl
insb
clc
lock
mov
sbb
push
mov
push
push
test
test
xchg
add
test
scas
divl
adc
mov
inc
out
repz
add
inc
mov
outsb
jns
sbb
hlt
sub
dec
jb
rcll
jge
pop
sbb
es
xchg
fs
pop
xchg
xchg
scas
das
mov
out
push
popa
cmpsl
adc
repnz
aas
mov
rorl
mov
lcall
scas
arpl
mov
fldenv
inc
inc
xchg
or
cmpsl
testl
adc
pop
jne
mov
clc
lret
cmp
mov
stos
je
xor
xlat
fcompl
add
adc
imul
mov
push
cmp
sbb
enter
push
stos
push
jecxz
add
jb
inc
fs
sbb
aas
pop
pop
clc
movsb
jmp
adc
jle
bound
pop
add
cmp
xor
cs
ds
cmp
pop
jo
and
hlt
sbb
jp
popf
movl
addl
in
pop
sub
sahf
or
pop
loope
sti
loope
inc
into
shll
add
xchg
push
pop
ficoms
or
mov
sub
jp
repz
xor
lcall
jne
iret
lret
xchg
enter
jmp
mov
mov
rcr
cs
inc
fs
popa
fsubl
or
in
out
cmp
out
cmp
clc
mov
xor
call
std
sarb
faddl
test
test
or
xor
add
push
dec
dec
pop
mov
popa
xchg
jae
int3
push
fistpl
mov
and
in
pop
lret
mov
popa
ret
shlb
xchg
dec
lahf
sbb
xchg
ljmp
xchg
and
add
mov
sub
add
mov
fstpt
xor
sub
sarl
stos
movsl
push
rcl
inc
inc
ja
das
shrb
push
out
addr16
sub
icebp
out
fdivr
inc
cmpsb
sub
mov
inc
insb
out
test
imul
test
mov
jecxz
push
pop
push
in
adc
mov
mov
ret
fimull
popa
ror
or
cmpl
mov
add
cs
mov
movsl
sbb
dec
movsl
inc
jne
mov
mov
lcall
fcmovnu
adc
fwait
stos
ret
int3
fcmovne
lock
cmpnltps
addl
mov
mov
xchg
aaa
xchg
int3
cmpsl
jne
lahf
sub
outsb
lret
adc
cmp
scas
pop
pushf
gs
lret
cli
xchg
pop
push
push
or
call
mov
icebp
pop
sahf
subb
data16
mov
inc
inc
add
int
sbb
es
sbbb
inc
inc
loopne
jb
aad
andl
inc
loope
ss
fwait
and
mov
push
jl
cmp
cmp
sub
xchg
in
stos
fsts
dec
ds
fcmovu
fcmovnbe
iret
mov
or
add
cmp
int
mov
mov
push
inc
push
ficoms
xchg
in
xchg
loope
add
sbbl
mov
mov
push
mov
ljmp
pop
mov
dec
fildll
and
das
sbb
out
out
mov
xor
and
dec
mov
int3
lcall
xchg
nop
sbb
repnz
dec
add
dec
push
push
jno
mov
xchg
stc
xchg
notl
sahf
outsb
or
pop
inc
push
xor
sbb
jl
ljmp
gs
cmp
push
dec
lods
push
into
dec
ds
cmc
mov
mov
test
inc
push
in
add
aad
xor
stc
scas
loopne
sbb
add
aas
pusha
mov
and
testl
push
sub
sbb
push
icebp
aas
push
sbb
sub
mov
xlat
and
loop
mov
ss
fistpll
ret
in
jnp
fmul
jno
push
lods
stos
cmp
xchg
outsl
sub
ret
mov
nop
jecxz
xchg
cmpb
inc
jne
add
jns
xchg
dec
jno
sub
lcall
movsl
xor
inc
mov
or
or
add
push
mov
xchg
repz
pop
andl
or
add
negb
sbb
stc
adc
jo
in
mov
les
push
pop
movsb
dec
jl
add
cld
in
outsl
sbbb
xchg
xchg
cmp
sbb
adc
inc
push
lock
insb
int3
call
js
mov
enter
or
insl
cmp
cmpsb
mov
xorb
or
jl
push
cli
mov
pop
mov
push
dec
jne
pusha
outsl
cmp
jnp
out
aaa
dec
dec
pushw
add
jno
insb
dec
cmp
mov
nop
int3
or
sbb
fs
xchg
imul
mov
movsl
aam
jle
cltd
pushl
xchg
inc
addr16
in
std
add
jbe
pushf
ja
in
sbb
loope
fs
push
or
aaa
cmp
add
loop
and
sti
cmp
js
xor
add
or
nop
pop
push
xor
lret
dec
shrb
loopne
subb
xor
repz
icebp
adc
cmp
mov
rcrb
mov
or
sub
clc
test
jno
cmp
adc
fldenv
test
lock
pop
fldenv
clc
cltd
lret
je
data16
packssdw
stos
test
mov
scas
ficoml
mov
xchg
push
jmp
adc
push
push
pop
shlb
xchg
pushf
andl
mov
aas
and
xor
jne
testl
sti
xchg
ja
cmp
aad
or
push
jns,pn
ja
or
add
nop
ds
cwtl
add
ret
lds
mov
lret
inc
jnp
cmp
je
jmp
xchg
jge
lods
lea
fadds
add
mov
sahf
outsl
popf
lahf
shrl
fs
and
cmpsb
shll
jb
xchg
xrelease
jbe
cmp
add
sahf
or
stc
pusha
mov
xchg
mov
push
push
or
sarl
sub
lock
jae
mov
jne
push
pop
stos
jb
and
aas
fistps
mov
xor
jl
or
enter
call
pop
pop
imul
call
scas
sub
inc
scas
jle
mov
out
fcomps
mov
test
scas
out
in
pop
out
sbb
mull
pop
dec
ljmp
paddb
jl
and
test
mov
int
test
pop
or
jbe
subb
divb
push
push
mov
dec
mov
in
cmp
jns
mov
es
test
clc
aas
stos
sarl
addr16
adc
daa
orl
std
cwtl
mov
push
in
dec
sarl
das
std
and
loope
testb
repz
lods
cmp
dec
dec
add
and
stc
sbb
mov
xlat
jnp
jns
test
lds
adc
mov
jns
js
out
std
adc
push
cmp
jl
scas
repnz
lret
popf
mov
stos
in
sub
inc
jns
sbb
and
mov
mov
xor
ds
add
dec
pop
pusha
in
aas
leave
ficomps
ret
adc
sti
movsb
inc
ret
dec
push
jl
adc
add
dec
adc
mov
add
xor
rcrb
pusha
and
fidivrs
call
adc
lahf
je
insb
mov
mov
push
push
cmp
mov
jle
xchg
iret
iret
mov
xchg
sbb
test
sub
push
xlat
sub
xchg
iret
aas
push
inc
stos
cmpsb
in
jno
and
div
cmp
inc
push
add
lahf
and
es
adc
push
pushw
inc
ds
cwtl
in
out
xor
call
scas
shl
ds
loopne
pop
jl
sbb
jle
std
jno
cwtl
lret
sub
les
call
or
sti
in
add
inc
dec
icebp
pop
dec
push
lock
testl
xchg
je
mov
lret
movsl
fidivrs
or
mull
mov
jb
std
push
movsb
adc
xor
push
jmp
dec
in
adc
insl
mov
xchg
and
cmp
jle
dec
int
and
jl
nop
adc
jns
mov
in
and
and
jb
mov
mov
inc
mov
std
fistpl
pop
pop
ljmp
repnz
add
loop
bound
adc
nop
js
sbb
xchg
cli
in
push
lea
or
popf
mov
cmp
inc
ljmp
loopne
cmp
inc
cwtl
mov
faddl
add
sbbb
xchg
ret
icebp
pushf
add
lret
fistpll
pop
jg
xor
jmp
popf
popa
jmp
enter
push
sbb
shl
pop
mov
mov
adc
pop
inc
out
inc
and
addr16
push
inc
jmp
push
cld
dec
ja
or
int
pop
lock
mov
repz
inc
outsl
xor
add
sub
push
jb
dec
sub
and
xchg
add
or
push
sahf
or
pop
insl
adc
add
jb
loop
call
aaa
jnp
pop
dec
ffreep
das
mov
xor
scas
into
pop
inc
cmpsb
sub
dec
data16
rcrb
call
jne
fcmovnu
int3
lock
lods
dec
daa
fistpl
insb
test
ss
mov
popf
in
push
testb
sub
lods
jb
jge
out
lret
arpl
sbbb
mul
lahf
arpl
xchg
cmpsl
cmp
mov
les
push
test
push
inc
dec
xchg
repnz
sub
loope
jmp
sub
or
in
push
jge
aad
shlb
add
pop
dec
sahf
mov
cmp
stos
mov
push
in
cmpsl
ret
popf
fwait
scas
fldl
ud2
dec
or
add
jecxz
fcoms
jno
jns
movsl
mov
test
xchg
cmpsb
mov
xorl
inc
pop
lea
and
xchg
pop
jns
inc
and
inc
mov
sbb
push
daa
dec
pop
shlb
aam
out
pop
jge
fdivl
push
lret
enter
test
jl
out
data16
ds
lods
mov
push
mov
xlat
and
xor
push
mov
mov
mov
sub
shrb
ljmp
mov
and
mov
clc
outsl
shll
xchg
jo
repnz
xor
and
jge
insb
xchg
dec
sbb
cwtl
data16
xor
mov
ja
clc
mov
jns
ds
inc
cmp
outsl
xchg
ficoms
pop
cmp
jno
jg
in
jmp
sbb
mov
inc
and
outsl
xchg
repz
pushf
cmp
mov
fld
enter
clc
in
cmp
push
dec
xchg
stos
add
lahf
add
push
lods
mov
mov
add
add
ret
xor
fnstsw
pop
leave
and
addr16
mov
xchg
aad
xchg
inc
les
call
mov
scas
mov
mov
sti
add
addr16
inc
mov
mov
push
xchg
inc
push
push
sub
or
nop
push
stos
adc
movl
mov
pop
xchg
cli
xchg
xchg
mov
stos
add
jne
jnp
ret
iret
push
jmp
pop
or
push
xchg
xchg
lret
movsb
adc
inc
cmp
sarl
jb
push
leave
sub
push
ret
aam
sub
repz
pusha
push
sbb
add
sub
dec
xchg
pop
pop
repnz
movsl
pop
cmp
inc
ja
lods
jmp
xchg
dec
lret
daa
pushf
cmova
push
mov
out
xchg
fadd
xchg
sub
in
loop
xor
fnstcw
xchg
mov
jbe
xchg
jne
movsl
repz
jns
icebp
lods
repz
lahf
mov
dec
mov
aam
enter
int
push
dec
dec
jnp
cmp
out
push
jle
inc
sub
int3
xchg
jo
or
add
aas
mov
pop
mov
mov
sub
fadds
xchg
lock
mov
sub
jnp
and
dec
and
cwtl
lret
popa
fstpt
or
lock
jo
jg
insb
mov
scas
fcomp
cltd
inc
dec
jo
and
cld
push
add
pushf
push
dec
sbb
pop
mov
and
sbb
out
popf
lret
in
fildl
mov
sbb
test
xchg
jmp
addb
mov
stos
mov
aad
icebp
hlt
leave
jo
enter
jle
inc
int
jb
mov
add
cli
mov
aaa
mov
lds
flds
jg
leave
mov
pop
loopne
leave
lret
ja
ret
fiadds
std
int
test
xor
pop
iret
and
enter
ljmp
dec
add
fsubl
mov
pop
cmpb
push
ljmp
or
std
inc
inc
lock
ret
sub
push
mov
fisubrs
sub
arpl
and
adc
jp
xchg
and
add
je
addr16
dec
jae
loopne
mov
data16
mov
mov
lds
dec
arpl
out
cwtl
jbe
sbb
xor
mov
sti
lods
fsubrl
inc
adc
cmp
sub
inc
hlt
adc
sahf
imulb
or
cld
jnp
sub
ds
daa
adc
inc
rorl
mov
pop
mov
mov
std
cmc
mov
leave
mov
inc
lahf
js
push
sti
lahf
addr16
aam
test
adc
shll
pop
xor
test
ljmp
push
jns
jb
scas
pushf
cmp
ret
mov
es
pusha
push
sti
pusha
dec
push
pop
mov
fmuls
add
and
stos
aad
movsl
jle
xchg
movsl
mov
jmp
or
inc
jg
lahf
mov
jnp
cmp
add
shll
xchg
inc
jns
stos
fisttpll
fisubrl
fmulp
jns
jecxz
test
test
jl
or
xlat
mov
push
loope
dec
test
lahf
fnstsw
dec
sbb
mov
pop
jae
inc
mov
and
xlat
or
xchg
jbe
add
inc
xchg
mov
aaa
into
push
es
mov
jmp
and
xor
adc
mov
ret
iret
xchg
fdivl
and
cmp
mov
pop
popa
push
mov
stos
dec
sarb
jecxz
mov
inc
mov
fiadds
and
mov
cmp
aaa
and
cmp
shrb
sbb
jecxz
add
cmp
lock
mov
and
push
sub
adc
dec
cld
xchg
adc
pop
lods
jnp
in
and
pop
lahf
out
or
mov
gs
int3
dec
fidivs
cmpsl
into
xor
push
jmp
push
add
loop
lds
inc
or
xlat
mov
and
jno
lret
lock
pop
int3
xchg
pop
jb
repz
into
pop
add
cmp
inc
and
xchg
shlb
cwtl
daa
push
rolb
iret
xchg
jg
xchg
imul
mov
scas
stos
lret
movsl
mov
lods
jge
movsl
xchg
mov
xchg
adc
lahf
inc
or
roll
dec
xor
int
xchg
or
add
mov
enter
nop
xchg
in
adc
fcompl
out
enter
insl
and
adc
dec
lcall
fstl
icebp
adc
mov
adcb
mov
fwait
pusha
stc
fwait
pop
pop
test
xchg
sub
inc
fstpl
cmp
jecxz
pop
sbb
push
lcall
popf
lret
add
sbb
outsl
xor
mov
cmpsb
fldl
mov
mov
dec
and
out
aaa
int3
mov
les
loopne
clc
jp
xchg
ljmp
lock
stos
and
ja
mov
mov
pop
gs
mov
in
cs
pop
movl
icebp
push
push
insl
add
cmpsb
ret
fiadds
lret
lock
ret
repz
push
stos
mov
repz
lret
pop
xchg
call
xor
lock
inc
inc
jbe
into
cmp
movsb
pop
int
test
jle
push
test
in
shll
fdivrp
sahf
mov
daa
cmp
pop
push
mov
test
mov
mov
mov
mov
pop
mov
and
mov
inc
adc
adc
sub
lods
push
push
int3
sbb
pop
js
stos
clc
lods
adc
out
sbb
cmpsb
or
dec
add
mov
int
adc
sbb
xchg
pop
xchg
and
push
out
sub
mov
loopne
and
lret
cld
ds
push
fsts
iret
bound
scas
enter
xchg
in
insb
pop
call
test
cmp
dec
popf
test
cmp
lcall
ss
fs
jne
sbbb
loopne
xor
push
mov
mov
jnp
jne
dec
lcall
incb
jne
std
scas
cmpsl
xchg
pop
mov
es
cmp
aam
into
pop
xor
add
call
aad
pop
gs
js
xor
pop
stos
movl
mov
xor
pop
pop
lea
fsubrs
fsubs
mov
loopne
icebp
mov
test
cmp
xor
outsl
addb
mov
add
sbb
push
and
add
add
dec
ja
dec
push
clc
xor
fstpl
jl
jl
jmp
shlb
outsl
call
pop
xor
jbe
xor
or
sub
lret
add
dec
aaa
test
pop
sbb
jnp
daa
mov
lret
inc
pop
add
mov
jg
stos
in
xor
xchg
xchg
mov
in
jl
jg
jbe
push
pop
lret
movsl
inc
inc
xchg
add
and
inc
lods
bound
push
inc
inc
mov
cld
jbe
cmp
add
push
inc
fcmove
cmpsl
or
jbe
std
cmp
ja
bound
cltd
adc
dec
fidivrs
aaa
pop
xchg
and
mov
jno
and
in
das
or
xchg
add
outsb
dec
cmp
mov
push
push
add
nop
ljmp
leave
inc
or
enter
fcompl
push
pop
pop
jae
mov
jecxz
mov
xor
int3
add
mov
loopne
push
mov
cs
pop
pop
mov
mov
pop
sub
jecxz
xchg
push
adc
fcoms
out
and
insb
and
jge
cld
lret
imul
push
outsb
sbb
fldl
pushf
mov
icebp
mov
popa
mov
mov
dec
repz
pop
push
xchg
or
xchg
lods
and
jg
mov
jbe
sub
stos
es
xor
dec
sub
inc
adc
mov
xchg
pushf
cld
ds
push
int
dec
das
sahf
js
push
loopne
sarb
icebp
xchg
lret
jmp
xchg
add
dec
sbb
dec
lods
xor
sub
mov
pop
xor
sbb
xchg
inc
mov
add
sub
jne
push
shrl
data16
pop
cwtl
ret
ficoms
rorb
push
adc
add
pop
adc
imul
daa
or
push
scas
stos
mov
test
xchg
pop
pusha
jns
addr16
popa
mov
icebp
insb
in
mov
cld
jge
in
pop
push
out
pop
push
dec
push
mov
mov
outsb
mul
scas
pusha
nop
jb
pop
shlb
add
addr16
adcl
mov
mov
mov
outsl
daa
fnstcw
rorl
divb
mov
xchg
icebp
pop
mov
mov
cld
push
insl
push
xchg
mull
pop
js
add
test
mov
jle,pn
and
call
add
xor
mov
jae
and
push
ret
xor
ret
and
mov
fwait
mov
movsb
fisubrs
ror
mov
sbb
iret
rorb
testl
mov
add
pop
lods
xor
xor
sbbl
ljmp
pop
pop
add
jbe
mov
or
out
mov
cld
mov
cltd
mov
jbe
std
int
fistps
pop
cmpsl
mov
mov
nop
into
rcl
cli
mov
cmpsl
xchg
mov
daa
cmp
add
rolb
ficompl
pop
xchg
subb
jle
arpl
fwait
push
dec
xor
jecxz
cld
push
dec
call
scas
push
push
xchg
in
in
xor
mov
les
test
insb
pop
jl
pop
leave
aas
repz
lea
sub
js
mov
add
xor
jmp
pushf
or
rol
push
data16
mov
rclb
xor
pop
movsl
addb
loop
add
mov
xlat
jno
mov
das
inc
repnz
xchg
stos
adc
add
mov
sbb
lods
call
xchg
mov
cmp
mov
push
mov
clc
fstl
bnd
sbb
pop
imul
clc
les
gs
cmpsl
out
icebp
mov
icebp
mov
lcall
add
popa
push
cwtl
mov
adc
adc
or
out
popf
pop
aas
xchg
testl
outsl
pop
xchg
mov
stos
xchg
gs
fidivs
in
lods
pop
pop
jbe
xchg
jnp
mov
fldcw
push
jne
pushf
mov
loope
jecxz
call
mov
ja
mov
dec
sahf
xor
dec
lret
imul
cmp
ret
repz
mov
movsl
outsb
imul
mov
into
mov
ret
incl
sbb
lcall
stos
push
bswap
jne
out
enter
imull
clc
dec
fstp
mov
add
lret
mov
into
adc
adc
inc
cmp
stos
out
adc
jmp
xor
ror
xchg
sbb
sub
test
and
add
pusha
lods
and
rolb
sbb
call
mov
cs
shrl
aam
pop
mov
xor
xchg
imul
pop
shl
in
inc
aas
jno
iret
xchg
mov
fwait
inc
cwtl
test
shlb
mov
jecxz
aaa
aad
fisubs
dec
pop
call
movsb
je
add
loope
daa
xchg
or
clc
add
lds
jb
lret
mov
in
ret
lcall
jnp
jp
int3
mov
aaa
mov
jae
ficoml
sub
jae
push
pop
and
push
xchg
in
addr16
loopne
test
mov
cmpsb
or
dec
jns
scas
inc
shrl
mov
push
inc
out
inc
sahf
and
gs
mov
scas
add
movsl
loopne
scas
dec
iret
pop
mov
mov
inc
cmpsl
test
jecxz
and
adc
or
cli
inc
push
bswap
lret
test
cmp
lock
bound
ret
iret
mov
adc
ljmp
jle
inc
in
jb
hlt
sbb
pusha
mov
push
nop
out
adc
ljmp
aaa
sub
jl
mov
rcll
pushf
push
push
ljmp
jp
pushl
push
adc
mov
fcmove
mov
shll
lea
lret
mov
jns
pop
sbb
lret
fwait
mov
mov
xchg
push
ja
and
xchg
push
ret
mov
push
mov
loop
dec
loop
popf
inc
push
negb
ss
push
pop
and
jl
das
xchg
scas
and
push
fidivs
jl
and
inc
or
mov
mov
mov
shl
or
xor
xchg
xchg
lods
cmp
inc
or
xchg
sub
and
jge
pop
xchg
jp
xor
das
and
pop
aaa
cmc
leave
fs
pop
and
and
adc
xorl
xchg
int
push
insb
jmp
lret
roll
repz
popf
cli
leave
ret
in
cmp
sub
jp
jl
outsl
jo
inc
movl
shlb
daa
clc
hlt
jo
pop
sbb
and
push
ds
push
cli
sub
mov
mov
mull
stc
add
cmp
rcrl
push
imul
xchg
and
xor
inc
mov
jo
inc
xchg
fs
clc
pop
push
and
jecxz
jae
jns
sahf
enter
js
outsb
push
pop
xor
and
or
mov
ds
mov
sub
in
jle
hlt
jo
ret
add
adc
pop
outsb
inc
hlt
xchg
test
icebp
xchg
push
pmulhuw
in
inc
cmp
or
mov
inc
pushf
or
in
and
mov
repz
inc
pop
pop
leave
call
push
and
mov
leave
dec
outsb
mov
xor
ss
mov
incl
or
xchg
dec
jns
fidivs
leave
and
dec
push
andl
shlb
bound
imul
mov
out
jg
cmp
push
sub
push
popf
std
loopne
outsb
push
lret
movsb
shll
jg
mov
cltd
int
jns
fcoml
loopne
jp
aas
in
lods
repnz
xchg
dec
push
stos
mov
movb
or
or
add
sbb
sbb
mov
push
rolb
add
lret
xor
jae
push
mov
fnstsw
jl
arpl
call
push
mov
dec
repz
dec
jne
xchg
loopne
xchg
xor
sub
mov
stos
add
xchg
xchg
jnp
mov
xchg
iret
push
rcrl
or
shr
rcl
push
and
mov
sti
out
cmp
sub
or
mov
adc
sub
sub
jae
clc
ja
roll
xchg
ds
dec
and
fwait
xchg
inc
adc
cmp
loop
movsb
inc
sti
sub
sarb
daa
jno
mov
lods
aas
inc
xchg
lret
xchg
int3
leave
aas
int
pop
movsl
scas
mov
inc
add
xor
lds
mov
pop
or
push
push
and
sahf
int3
int3
int
push
sarl
stos
inc
sbb
aas
mov
jno
jo
jecxz
insb
out
loope
pop
hlt
xchg
popf
int3
push
pop
mov
pop
mov
repz
push
negb
dec
sub
ds
sub
xchg
pop
fmull
dec
loop
sbbb
or
add
mov
sub
mov
mov
int3
xor
add
in
mov
cs
and
lds
lods
xchg
mov
cltd
and
jp
xchg
jmp
pop
cmp
dec
add
jp
sbb
sub
push
inc
scas
mov
mov
mov
sub
mov
dec
fcoms
icebp
jns
fbld
jecxz
lods
divl
repz
das
aad
sub
mov
les
fmul
hlt
out
inc
push
or
ss
sbb
jmp
mov
movb
xor
mov
mov
pop
fistl
mov
mov
inc
dec
or
pusha
aad
repnz
loope
push
or
add
sbb
loopne
mov
mov
out
mov
imul
mov
and
fisttpl
dec
jae
xlat
int
sti
jns
sub
cmpsb
mov
sbb
jno
mov
adc
push
xchg
movsl
ja
add
cs
push
xor
jne
cwtl
icebp
xor
mov
andb
iret
mov
stos
loop
cmpsl
cld
mov
mov
mov
adc
fwait
or
repz
out
sub
mov
inc
gs
ljmp
dec
in
movsb
cmp
inc
repz
imul
int3
adc
lock
inc
pop
rcr
jbe
dec
mov
jl
xchg
inc
ficoml
outsb
cmp
cli
call
ljmp
sbbl
movsl
repnz
lds
pop
and
push
mov
mov
popf
push
xchg
mov
adc
call
mov
scas
sbb
nop
jo
sbb
icebp
or
jbe
nop
imul
adc
sbb
jno
sub
mov
xor
aaa
cwtl
xor
lret
push
scas
mov
jmp
leave
std
sti
test
mov
inc
mov
lods
enter
mov
pop
push
mov
push
add
xor
xor
inc
outsl
pop
clc
adc
adc
stc
not
dec
ret
lods
idivl
lock
and
test
push
mov
out
call
aaa
adc
jns
outsl
mov
pop
xchg
cmp
push
dec
xchg
fisubrs
xchg
jmp
cmp
pop
adc
js
shll
pop
pop
mov
cmp
loop
push
dec
dec
adc
es
jne
and
dec
adc
push
jl
lret
pop
xchg
bnd
xchg
xchg
inc
mov
jbe
outsl
arpl
xchg
nop
arpl
pushf
add
mov
in
and
mov
inc
push
ja
push
bound
inc
subb
bound
mov
push
push
push
mov
out
cmp
lcall
mov
add
loopne
test
je
scas
dec
adc
hlt
inc
add
mov
imul
xchg
mov
xchg
adc
push
mov
addr16
repnz
pushf
mov
mov
hlt
lahf
dec
push
push
subb
xchg
fcompl
inc
mov
add
adc
idivl
imul
mov
inc
enter
fwait
cmp
push
out
sub
jbe
popf
or
mov
mov
fcomip
test
scas
add
fld
daa
push
xchg
dec
add
push
add
dec
dec
movsb
std
adc
cld
xlat
in
outsb
aam
add
sbb
imul
int3
clc
add
fcom
pusha
add
xchg
xchg
out
lret
xchg
adc
push
inc
loope
fidivl
mov
nop
inc
xorl
int
ss
sbb
flds
mov
call
mov
cmpsl
pop
pop
sbb
inc
adc
lcall
jg
mov
mov
sbb
pop
or
stos
cld
fnstcw
aas
or
pop
shrb
test
sub
jne
clc
sub
cli
sub
int3
scas
xor
jnp
add
stos
dec
orl
addl
adc
in
jl
es
test
jno
fldl
stc
notl
in
cmpsb
xor
mov
or
loop
jnp
mov
cs
cmpsb
cwtl
scas
out
add
test
mov
and
pop
std
jmp
mov
inc
stos
xchg
addb
xchg
std
push
push
sbb
jp
sub
xchg
and
mov
inc
mov
mov
xor
jb,pt
scas
push
adc
inc
cs
or
xor
dec
mov
ds
jg
je
das
xorl
jge
dec
adc
xchg
aad
fs
out
mov
jp
iret
icebp
inc
jmp
test
inc
dec
jae
pop
xor
lcall
leave
mov
jl
setb
in
ja,pt
test
insb
inc
popa
mov
xchg
repz
pop
out
out
insb
cmc
sub
add
jne
faddl
mov
testl
adc
addr16
in
loop
aas
aad
outsb
mov
orb
adc
shlb
dec
sub
cwtl
cmp
cmpl
add
into
lea
pusha
push
mov
fimull
movsl
mov
push
or
dec
mov
popa
pop
insl
ficomps
movsb
adc
insb
inc
adc
movl
push
push
cmp
mov
movsl
sbbb
dec
repnz
std
sbb
ror
inc
into
dec
loope
aaa
and
xlat
pop
mov
jno
movsb
push
aad
roll
or
pop
scas
je
mov
push
dec
mov
and
sub
mov
xchg
in
add
jno
les
add
jmp
int3
insl
subb
outsb
and
enter
lret
ret
or
ljmp
enter
test
pop
dec
inc
popa
test
inc
loop
lcall
push
jg
push
jecxz
adc
xchg
adc
pop
jge
add
dec
add
shll
cmpsl
adc
imulb
cmpsl
lret
sahf
jl
std
xlat
xchg
cmp
cld
inc
lods
lcall
adc
in
js
pop
les
enter
sahf
in
sub
sbb
push
gs
mov
stos
cwtl
std
mov
add
add
test
movsl
cmp
sub
push
lea
loope
xchg
sahf
dec
js
mov
lods
fwait
cwtl
imul
or
fldcw
dec
adc
sbb
xchg
movsl
sbbb
in
lret
push
ljmp
and
mov
inc
dec
and
ret
sub
pop
jle
mov
pop
insb
add
cmp
icebp
mov
push
dec
bound
sbb
push
sbb
xor
jmp
mov
sub
cltd
add
push
and
aaa
arpl
and
sarl
inc
dec
cmp
push
jmp
push
loopne
inc
xor
or
jns
add
sub
xchg
add
sbbl
sub
mov
aaa
or
icebp
adc
add
jmp
push
xor
mov
dec
ss
and
filds
jle
fwait
mov
pop
mov
cmpsl
sub
jg
stos
cmp
lods
pop
add
int3
clc
fadds
xorb
arpl
dec
mov
dec
mov
stos
mov
shll
out
xchg
add
out
or
inc
bnd
rep
subb
iret
loop
cmp
xor
and
mov
fwait
aaa
sahf
push
int3
mov
dec
outsl
inc
aas
dec
and
fnstcw
lcall
aas
sahf
mov
add
loop
xchg
out
or
clc
xchg
add
call
stos
and
sub
lea
cmp
jg
mov
lods
in
outsb
dec
icebp
pmulhuw
f2xm1
pop
inc
sub
jl
inc
cmp
fidivrl
cld
pop
out
push
fnstsw
ret
add
xchg
enter
mov
xchg
pop
leave
xor
lret
cwtl
sbb
mov
lahf
insb
sbb
fcomp
ja
aas
cmpl
or
mov
adc
sub
xor
jns
loopne
push
jg
jmp
es
jnp
data16
mov
dec
fcoms
xchg
dec
adc
iret
aam
pusha
out
pop
pop
lcall
jbe
push
movzbl
fistpll
adc
mov
inc
insb
mov
jp
outsb
and
sbb
data16
push
xchg
fbld
lock
sbb
jo
pop
loopne
sbb
out
push
stos
int
jl
ss
adc
fsubs
xchg
push
orl
pop
in
daa
lahf
insb
mov
xchg
mov
xchg
xchg
mov
es
mov
dec
enter
adc
cld
and
in
scas
loopne
or
outsl
sub
ret
pop
dec
sub
sar
es
shll
popf
insl
xor
push
adc
add
into
pop
divl
lods
xchg
mov
subl
ret
pop
sbb
xchg
xlat
cli
xor
xor
adc
aad
jnp
sbb
daa
jb
xchg
out
push
dec
ror
mov
mov
cmp
sub
fistps
sub
scas
out
lds
pushf
cmc
into
pop
fdivrl
insl
xchg
fldlg2
lcall
pop
cltd
lods
jns
inc
mov
mov
out
out
cmp
jl
jmp
mov
icebp
icebp
in
xor
push
leave
dec
xchg
into
mov
fistpl
dec
inc
or
sbb
mov
sub
in
sti
inc
push
xor
mov
mov
inc
adc
loopne
js
inc
shl
ja
mov
lods
and
sbb
sub
mov
pusha
repnz
data16
loope
mov
es
mov
movsb
xor
or
dec
fsts
ret
in
stos
sub
std
out
mov
add
jb
test
cmp
inc
test
clc
pusha
idiv
pushf
dec
and
pop
aam
clc
or
loopne
jo
shlb
rcrl
imul
push
jo
ret
cs
stos
stc
stos
iret
jp
insl
jne
arpl
push
xchg
sti
sbb
ret
add
mov
cmp
cmp
mov
fdivs
rolb
add
add
dec
dec
adc
pop
stos
inc
mov
popf
sbb
mov
sub
jecxz
push
sbb
iret
cmp
mov
popa
daa
dec
adc
mov
jne
push
xor
mov
enter
aam
cmpsb
mov
imul
cmp
insl
out
sub
pop
lds
lea
test
jp
imul
mov
pop
dec
push
in
notb
sub
xchg
xor
mov
push
test
cmp
add
jbe
or
add
bound
or
aaa
neg
xchg
cld
outsb
test
fisubs
loop
add
outsb
add
mov
dec
filds
cltd
movsl
ja
clc
and
enter
pop
jnp
fcomps
int3
xlat
das
mov
rcll
push
push
ljmp
xchg
int3
rcr
push
add
cmc
mov
insl
test
cmpsl
test
xchg
push
adc
or
adc
ret
fisttps
push
ficomps
xchg
in
xchg
out
cmc
push
jns
js
fs
inc
push
dec
mov
add
loop
jmp
dec
cmp
push
inc
repnz
lret
enter
push
pop
adc
roll
jl
test
ret
cmp
fdivr
or
dec
clc
in
test
fs
jl
stc
fnsave
clc
adc
frstor
in
sub
mov
mov
mov
scas
aaa
lods
lock
mov
movsb
sub
cmp
sub
cmpsb
add
adc
jmp
les
and
sub
mov
in
sbb
ss
inc
cltd
jno
shll
pop
movsl
push
fwait
aad
addb
loop
adc
mov
push
and
out
sbbl
pop
ss
fdivr
jne
add
sbb
rorl
loop
add
and
sub
sbb
ja
data16
mov
or
and
gs
mov
iret
xchg
sub
adc
jle
pop
je
mov
push
jnp
push
add
mov
rclb
sub
fwait
add
dec
pop
cmp
jb
test
lea
mov
adc
pop
xchg
ss
pop
cmp
or
cld
dec
xor
ss
mov
adc
scas
pop
leave
dec
test
xor
sahf
scas
push
imul
push
cmp
insl
lcall
push
sbb
ss
adc
sub
xchg
in
fcmovne
test
mov
cmpb
test
inc
and
test
in
aad
push
lsl
aas
scas
enter
or
sbb
and
push
in
sub
scas
mov
sub
jne
fadds
pop
ret
aaa
stos
in
jg
inc
cmp
in
aad
out
lea
or
mov
xor
mov
sti
loopne
jae
pop
fsub
aad
xor
icebp
into
dec
lcall
aam
rcll
dec
push
fldt
sub
fcmovne
dec
and
xchg
mov
lods
push
sub
shl
nop
xor
out
out
call
mov
or
popa
lahf
xor
mov
test
dec
xchg
mov
dec
jmp
push
pop
inc
sub
pushf
cmpsb
lods
pop
pop
jle
outsb
std
adc
lods
mov
lahf
lahf
push
mov
add
ret
adc
jl
mov
push
and
push
fldl
aam
lret
mov
dec
pop
outsb
test
aam
lahf
lods
mov
pop
push
mov
cmp
or
push
rol
pop
mov
js
pop
cwtl
xchg
andb
pop
fistps
pushf
nop
cmp
test
adc
push
lret
jmp
repz
int
pop
jno
or
adc
jno
sahf
sub
dec
xchg
cltd
repnz
mov
mov
mov
mov
je
aam
rorl
jbe
adc
icebp
jo
fs
aad
dec
mov
scas
mov
sbb
or
cmp
cltd
out
push
stos
pop
xlat
and
xchg
je
cmp
rcrl
stc
mov
incl
mov
adc
or
int3
adc
push
sbb
lret
popa
dec
ljmp
repnz
cwtl
cs
push
test
repz
popa
in
std
popf
out
hlt
insb
mov
jbe
repz
pop
flds
mov
adc
in
mov
or
sbb
shlb
xchg
adc
sub
in
dec
mov
lret
mov
fidivs
adc
adc
mov
ret
rcrb
in
pushf
in
fimull
sbb
test
bnd
loop
add
dec
mov
mov
cmp
xchg
or
stos
inc
movsb
xchg
pshufw
das
inc
xor
test
jmp
push
xchg
jl
inc
rclb
out
popf
aaa
lock
cli
pop
and
add
sahf
inc
ss
leave
pop
mov
push
sbb
lret
fwait
pop
lock
scas
pusha
xor
je
stos
push
pop
dec
or
mov
test
cmp
push
jl
lds
sbb
add
or
fdivs
cwtl
dec
fcom
arpl
mov
fsubp
mov
xor
das
in
push
pop
jae
hlt
xor
adc
in
and
test
lret
dec
adc
test
loop
jno
rcrb
add
adc
jp
cmpsl
push
clc
sub
shrl
aas
or
push
or
push
cld
cmp
mov
imul
addr16
dec
loopne
xlat
add
lods
xor
rolb
popf
inc
pop
rolb
testb
fldl
mov
xchg
jns
xchg
adc
mov
je
mov
mov
or
cmc
inc
data16
mov
stos
rcl
and
sub
xchg
dec
push
push
pop
jnp
fwait
in
fiaddl
xor
int3
inc
stos
inc
adc
pop
inc
scas
dec
xlat
cmp
and
and
loop
movl
and
and
dec
xor
jmp
adc
mov
movsb
or
fisubrl
pop
dec
test
scas
inc
mov
sbb
dec
je
mov
out
sbb
int
shl
jo
xor
sbb
mov
fs
push
adc
rorl
fcompl
imul
aas
mov
loopne
cli
imul
imull
sub
ret
xchg
out
insl
adc
stc
out
hlt
and
or
or
out
enter
lock
ret
xor
les
lcall
mov
int
xchg
add
jo
std
xor
call
and
mov
in
sbbb
pop
mov
stc
sbb
cmp
push
call
cmpsb
fwait
lea
or
int
sbb
mov
jl
sti
adc
and
dec
cld
rcll
jl
lds
jno
mov
mov
sub
pop
imul
out
out
jecxz
cmc
jb
jns
repz
and
xchg
dec
cs
shrb
push
lret
mov
test
adc
cmpxchg
lea
popa
fidivrs
and
leave
int3
sahf
or
inc
jp
push
jns
pop
cwtl
out
sbb
stos
lret
lret
cld
push
scas
or
pop
cmpsl
or
cwtl
stos
xorb
mov
push
in
pop
cmp
addr16
loope
call
shlb
orb
pop
scas
aad
and
movsl
mov
cltd
inc
inc
push
rol
sbb
add
lret
dec
addr16
stos
jmp
push
lock
push
sbb
push
imul
fmul
xor
adc
adc
jg
aaa
movsl
mov
lods
rcll
xchg
dec
test
pop
mov
push
inc
data16
xchg
pop
mov
bound
aas
cmpsb
imull
sbb
aas
out
mov
cs
daa
shll
add
out
pop
inc
ret
xor
sbb
mov
adc
movsl
insl
cld
lods
dec
adc
leave
fs
sub
pushf
and
int
cmp
pop
loop
cmpsb
dec
jmp
leave
cmp
or
aaa
mov
out
jno
jp
jp
je
inc
cli
jno
sarb
jl
jl
xor
add
dec
aas
xchg
push
pop
fs
mov
push
addps
xorb
icebp
add
xchg
and
loop
fmulp
lods
mov
iret
xchg
cmpw
xchg
subb
fbld
loop
ficompl
or
mov
adc
pop
addl
arpl
fcmovu
add
adc
mov
ljmp
add
sbbl
bound
and
ret
leave
mov
enter
add
outsb
testb
push
loop
cmp
add
sbb
pop
call
mov
mov
mov
divb
or
adc
dec
inc
jmp
sbb
and
das
mov
fstl
push
lret
movsb
jp
loope
jbe
je
cmp
mov
stos
fcmovne
xchg
dec
jecxz
xchg
lock
push
jne
dec
and
cmpsl
fwait
lret
or
cmp
out
loop
adc
and
cmpsb
push
add
push
stos
rclb
push
dec
xor
add
cltd
sub
and
mov
into
scas
test
cltd
or
xor
insl
loope
movsl
negb
jecxz
stc
enter
push
push
sti
inc
mov
call
cmp
mov
push
insb
mov
out
pop
lock
int
jmp
test
sub
mov
pop
jb
ja
add
movsb
mov
sbbl
arpl
mov
in
movsl
xlat
fwait
inc
mov
aas
and
dec
fwait
adc
cmp
xchg
aad
flds
ficomps
adc
in
and
imul
inc
outsl
leave
popf
hlt
adc
xor
enter
fmull
sbb
loopne
std
mov
inc
pop
in
insl
je
inc
in
xor
or
sub
mov
jbe
pop
into
adcb
and
mov
dec
jnp
jae
pop
addr16
fcoml
jg
add
arpl
lret
mov
pop
fs
dec
and
in
sbb
aaa
adc
loop
das
jg
out
les
mov
repz
mov
xor
cmp
dec
jo
out
mov
and
icebp
mov
loop
or
cli
aam
enter
inc
add
or
or
adc
loope
pop
dec
cli
jecxz
ja
insb
testb
mov
ja
pop
xor
adc
aaa
dec
xchg
or
push
inc
dec
rolb
and
xchg
inc
xchg
aaa
cmp
pop
xchg
push
jg
and
pop
sti
scas
sbb
add
or
lahf
sbb
rcl
jle
lods
mov
sub
adc
push
flds
jo
into
xor
cmp
and
jbe
cld
cmp
cld
das
xchg
push
repz
mulb
push
std
push
jecxz
cmp
sbb
mov
pop
mov
popa
ds
iret
push
test
mov
push
pusha
add
shl
inc
lcall
xor
jbe
add
sub
dec
jl
popf
sbb
imull
xlat
add
int
push
sahf
in
in
xchg
push
pop
fcomps
xor
pop
movsl
ss
data16
inc
inc
adc
sbb
mov
repnz
or
xlat
out
jne
aam
mov
es
add
ljmp
nop
sub
xchg
std
dec
ljmp
dec
enter
sbb
fsubrs
xor
mov
inc
popa
and
xchg
mov
stos
inc
adcb
test
push
inc
lds
lret
ret
mov
dec
mov
xor
fdiv
insb
cli
or
sti
jecxz
jge
mov
and
loop
cwtl
inc
push
and
sub
addr16
out
mov
jbe
push
out
jge
adc
imul
pusha
movsb
ja
adc
call
popf
scas
inc
mov
cmpsl
adc
push
shl
loop
iret
push
popf
aam
mov
in
xor
mov
cmpsb
sub
les
or
mov
jle
adc
dec
stos
add
add
sbb
inc
rcr
mov
sbb
sbb
or
sub
pop
inc
popf
and
jno
imul
inc
dec
mov
cmp
lods
mov
push
cld
jno
sub
mov
mov
clc
cmp
xor
minps
sub
push
sarl
push
notb
inc
lahf
call
dec
loopne
mov
xor
adc
or
test
inc
jl
cmp
pop
jl
push
jns
mov
adc
mov
fsubrs
dec
adc
jecxz
lock
in
stc
inc
jmp
or
bound
cmp
xor
or
inc
mov
fcmovnbe
add
ret
mov
push
repnz
jnp
ret
adc
mov
mov
fs
ds
xchg
xor
lods
add
call
int
jl
roll
lahf
and
int
inc
add
inc
add
clc
jns
outsb
lods
pop
cwtl
ficoml
mov
xchg
inc
jecxz
es
cmp
mov
mov
mov
stos
mov
and
cmc
xchg
jp
xor
fnsave
add
jae
loopne
xor
mov
adc
rcrb
std
lret
cli
adc
lock
xchg
insl
data16
sub
jge
inc
mov
movsb
push
jb
cmp
xchg
xchg
test
jb
inc
out
and
pop
insl
cmpsl
testb
mov
ja
xor
mov
mov
cli
adc
popa
pushf
jns
je
push
inc
jge
mov
dec
push
leave
or
push
inc
addl
mov
jae
xlat
xchg
jmp
stc
dec
rclb
jne
out
inc
dec
or
mov
jl
inc
xchg
xlat
jle
inc
jns
mov
adc
out
dec
mov
push
ja
bound
mov
ss
pop
sarb
and
rolb
adc
sahf
pop
enter
sub
dec
adc
mov
add
rcl
pusha
push
iret
pop
dec
and
jp
std
cld
out
testb
test
push
inc
into
push
idivl
jp
lea
jg
inc
xchg
xchg
cmp
inc
call
mov
lods
sbbl
aad
jb
mov
cli
push
adc
xlat
sbb
xchg
mov
rclb
mov
xor
cmp
fwait
sbb
aas
cmp
and
push
in
adc
out
xlat
push
or
loop
jo
incl
push
fsubl
adc
pop
mov
imul
pop
notl
jmp
loop
ja
leave
dec
mov
jne
loop
mov
addb
cmovge
stc
jl
mov
mov
mov
sub
adc
mov
lock
ja
cmp
icebp
fmul
cmp
push
pop
aad
fmul
fwait
out
mov
mov
mov
jne
sarl
stos
and
xor
insl
in
sub
in
mov
fcoml
cmp
lcall
xor
mov
ret
mov
rolb
aam
sub
push
inc
out
push
cmp
pop
rclb
in
jo
dec
push
and
adc
fmul
mov
es
push
sub
adc
or
popa
mov
testl
inc
jecxz
cld
lods
push
or
fisubs
or
push
aam
push
popa
cmpsb
xchg
jns
mov
fstpl
inc
xchg
mov
xlat
dec
nop
push
mov
push
fildll
cli
xor
lock
sub
in
mov
cmp
sti
mov
jle
addr16
cld
push
xor
sahf
sbb
iret
call
mov
pop
xor
je
in
fxch
jle
fldcw
jg
mov
cmp
add
pop
shr
sub
inc
es
test
into
adc
dec
jle
push
cmp
sti
popf
sbbb
cmpsl
sub
std
shlb
clc
inc
movsl
pop
fldcw
imul
lret
or
jg
sahf
or
es
ficomps
pop
add
popf
xor
mov
cmpsb
dec
xchg
les
jle
xor
sub
aad
stos
lds
fwait
or
xchg
pop
cmp
inc
cmpsl
mov
add
ljmp
movsl
pop
jmp
cltd
dec
push
jb
sub
xchg
add
fwait
mov
fnsave
out
ss
xor
jns
cld
mov
jmp
cmp
mov
mov
inc
xchg
sbb
push
fcmovu
enter
inc
es
mov
ret
cwtl
fistpl
add
mov
pop
std
adc
mov
lcall
ret
jmp
ss
jne
xchg
or
jbe
xor
jl
cmpsb
or
pop
fistps
sti
xor
test
pop
js
jno
stos
dec
loope
int
cmpsl
add
mov
lods
sub
out
cmp
pop
inc
testl
cmp
mov
int
mov
clc
add
push
inc
sbb
cli
ss
lcall
pop
jge
jae
cltd
cs
or
in
adc
shll
lahf
testl
xchg
icebp
push
popa
pop
xchg
ja
jge
inc
jns
lret
and
cmpl
je
jl
in
cmp
dec
popf
dec
dec
imul
call
movsb
insb
mov
pop
ss
dec
fildl
and
sub
inc
in
xchg
jns
xor
sub
enter
mov
push
test
test
arpl
das
push
sub
and
lahf
into
push
mov
scas
movsl
aam
stos
scas
adc
inc
mov
fisttpl
fists
inc
and
scas
sbb
fnsave
divb
rol
bound
popa
jecxz
jb
mov
and
dec
sub
jo
mov
inc
pop
les
stos
lds
xchg
rcrb
dec
mov
mov
out
cmp
pop
addr16
push
pop
xor
pusha
orb
hlt
scas
add
push
orb
cwtl
xchg
mov
add
pusha
push
sti
in
nop
aam
cmp
shl
icebp
lret
jns
push
xchg
dec
aam
xchg
jbe
jl
adc
jp
ss
test
pop
mov
popf
cmpsl
lock
jno
push
test
loopne
stos
mov
pop
shlb
mov
push
sub
mov
std
or
lods
loopne
test
sahf
or
add
sub
xlat
cs
cltd
inc
test
aas
jecxz
ret
or
addl
jb
dec
and
es
xchg
cli
xchg
clc
sbb
or
adc
pop
sbb
add
inc
jecxz
and
pop
rcrb
jge
mov
leave
mov
aad
sub
mov
cmp
data16
pop
adc
shrb
mov
pop
xchg
arpl
cmp
fwait
push
xchg
stc
int3
mov
cmp
mov
je
aam
lahf
jmp
and
int
fcmovb
loop
mov
sbb
push
icebp
jg
adc
pop
xchg
sbb
cmp
shrb
adc
jl
or
sub
aam
push
mov
dec
sbb
sub
or
or
lock
jmp
pop
push
icebp
scas
jb
mov
ljmp
jae
push
lret
adcl
daa
push
enter
or
dec
cwtl
aaa
inc
in
mov
fimuls
adc
popaw
aaa
fnstenv
sub
addr16
pop
inc
and
push
jg
dec
and
and
movhps
cmpsl
inc
push
dec
xchg
cmpsl
shll
xchg
mov
rorl
push
sbbb
fcom
f2xm1
ret
adc
and
mov
jge
lods
jnp
aaa
and
jb
xlat
loopne
sbb
pop
dec
ret
sub
xchg
inc
push
jnp
aaa
push
jo
mov
inc
inc
mov
push
sbb
dec
fdivp
sub
push
lea
roll
dec
mov
cli
jl
mov
outsl
int
add
inc
jne
insl
dec
jecxz
mov
cwtl
leave
mov
sub
cmp
in
pop
bnd
xor
dec
cmpb
xchg
pop
add
dec
and
fildl
or
add
inc
rorb
data16
sarb
sub
jb
lcall
test
imul
dec
out
mulb
adcl
lds
jae
xchg
js
neg
cmp
jmp
add
or
add
mov
int
cwtl
popa
fcomp
mov
push
pop
jg
test
ds
dec
jno
and
cmpsb
mov
loop
mov
lret
repz
fisubs
int3
add
gs
pop
pop
xor
fildll
or
dec
xor
mov
xor
add
mov
sub
sub
mov
or
idiv
movsl
adc
test
les
adc
adc
ret
test
mov
outsl
add
rolb
mov
add
mov
inc
cmp
aas
leave
or
inc
jae
xor
inc
push
dec
movsb
sbb
repnz
loopne
xor
push
dec
push
mov
adc
mov
test
push
out
pop
add
sti
sbb
xor
add
inc
pop
mov
add
add
pop
xor
jb
outsl
cltd
and
shll
jp
sti
movsl
imul
movl
jae
push
and
xor
adc
cmp
in
mov
jb
xor
adc
pushf
or
mov
push
rorb
cmp
adc
mov
inc
mov
pop
rcr
jp
or
scas
cmc
cmp
pop
mov
pop
push
sti
clc
push
fcomps
out
and
jns
add
ja
popf
insl
adc
push
jbe
mov
fcmovb
inc
popf
sahf
xchg
ret
es
ret
aad
mov
xor
cmp
scas
jo
pop
mov
aas
sbb
sub
adc
std
add
cmp
lcall
add
inc
jns
mov
insb
dec
ret
stos
out
push
mov
sub
and
fucomi
mov
dec
dec
lea
out
addr16
addb
mov
les
sbb
xor
add
jg
pop
jnp
xor
in
jo
shlb
pop
loope
jge
add
add
mov
movsb
popf
movsl
hlt
fwait
sbb
or
inc
mov
sahf
add
xchg
cs
filds
cmpsl
dec
xchg
lea
sbb
dec
jecxz
enter
popa
je
or
mov
loopne
adc
xchg
cwtl
jnp
push
ss
cmpsl
jmp
sub
sub
sahf
scas
sub
push
ficompl
xchg
stos
adc
in
out
xor
test
testl
std
mov
mov
pop
jnp
xchg
ljmp
aaa
mov
int3
xor
jne
push
pop
xlat
and
mov
js
cmp
bound
ret
mov
cmp
iret
pop
xchg
imul
xor
or
call
cmp
stos
jnp
sarb
xchg
mov
or
push
jmp
xchg
push
jno
enter
lcall
jl
mov
inc
jge
jecxz
loop
in
dec
shlb
popf
arpl
xchg
andl
inc
dec
mov
stc
jp
dec
lahf
xchg
aad
xchg
out
xchg
loopne
sbb
add
push
int
popa
dec
xchg
xor
dec
stc
test
jo
mov
clc
in
popf
cmpsl
in
adc
cs
cmp
insl
das
mov
mov
sub
lea
jne
jbe
ljmp
outsl
bound
lea
ds
mov
xor
pop
sbb
or
stos
push
dec
out
into
insl
repz
sti
stos
add
rorl
je
icebp
add
pop
lods
sti
repz
inc
lods
test
movsl
inc
data16
push
les
dec
pusha
lock
sarb
fs
rcr
pusha
mov
adc
add
jle
cmp
sbb
test
pushf
jp
adc
push
stos
enter
cmc
cli
mov
out
sub
aas
cli
in
iret
sbb
test
jge
popa
add
jmp
adc
xorb
imul
les
ror
jl
add
incb
mov
outsb
add
pop
push
mov
mov
cs
push
push
dec
es
fldl
sti
aas
or
fisubl
and
add
cmp
cmpsb
mov
xlat
icebp
pop
lock
sbb
test
lret
jae
lds
sti
popa
mov
push
mov
sub
pop
imul
push
fwait
out
dec
enter
enter
jnp
icebp
mov
test
mov
out
adc
scas
xchg
sarb
stos
xchg
add
pop
clc
fldl
lcall
imul
jle
outsl
loopne
fildl
cmpsb
ja
inc
push
enter
sub
sbb
jns
outsb
push
stos
imul
ljmp
cmpsb
and
mov
mov
test
jns
push
cmp
inc
xchg
cmp
pop
mov
lock
lret
jle
lcall
addr16
stos
loopne
add
lods
les
or
sbb
divl
add
add
dec
inc
or
sub
and
jmp
push
pop
xchg
mov
mov
lea
test
xor
and
lods
orl
insb
ds
push
push
ret
xor
arpl
adc
js
aaa
scas
sbb
mov
cmp
adc
cltd
repz
fstl
jo
std
sub
imul
mov
jo
bound
adc
lcall
push
outsb
pop
xor
add
push
int
rorl
push
push
clc
sbb
jge
arpl
popa
jle
jecxz
cld
push
mov
jbe
aas
sub
sub
ss
fisubrs
mov
fwait
jno
pop
sub
pop
dec
inc
in
mov
pop
clc
and
ja
in
xlat
xchg
push
add
jle
dec
andb
data16
insb
mov
cwtl
fld
shlb
adc
pusha
sbb
stos
xchg
dec
aam
add
cmp
push
negl
pop
movsb
pop
hlt
insl
nop
mov
dec
popa
inc
aaa
inc
nop
in
jb
pop
stos
sbb
jecxz
scas
cltd
subb
fs
jne
inc
mov
inc
sahf
mov
cs
das
xchg
or
sbb
or
cmp
pop
mov
adc
inc
mov
or
add
lret
inc
cmp
lret
jb
add
add
xor
pop
jle
xchg
sti
sbb
dec
cmpb
push
jbe
mov
adc
add
jmp
das
adc
push
xor
push
xchg
mov
out
fildll
dec
jne
lret
hlt
mov
mov
sub
std
lock
lods
dec
mov
ja
outsb
add
test
adc
in
repnz
repnz
pushf
mov
insb
dec
cmc
int
sti
add
mov
pop
ljmp
sbb
sti
push
adc
xor
lds
xchg
jecxz
mov
adc
js
inc
push
xchg
cmc
arpl
xchg
and
push
push
lods
xchg
and
je
add
cmp
inc
fstp
pop
pop
mov
inc
push
ror
sub
fimuls
frstor
xor
push
inc
xchg
jge
scas
flds
jl
adc
loope
mov
std
cli
mov
push
fmuls
fiadds
and
aas
ret
aam
arpl
sub
call
jp
push
test
mov
mov
outsl
sub
or
fcmovne
or
jbe
sbb
int3
mov
cli
jle
xor
outsb
mov
scas
push
fistl
mov
pop
jno
sub
jl
cmp
movsl
ret
js
xor
cmp
stc
inc
int
imulb
loopne
ja
in
hlt
pushf
leave
sub
mov
jmp
adc
flds
rorb
mov
or
dec
out
lods
sbbb
push
inc
icebp
push
dec
sar
mov
decb
leave
mov
push
push
test
push
in
lahf
mov
dec
xchg
movsl
shl
scas
cmp
std
sub
adc
call
dec
loopne
out
xchg
mov
add
stos
imul
add
and
jo
xor
cwtl
imul
stos
or
adc
lea
rclb
mov
test
mov
leave
lock
inc
xor
dec
int
add
repnz
jg
hlt
movsb
jl
jae
push
mov
cmp
lahf
js
lea
test
xchg
dec
hlt
mov
cwtl
shrl
push
push
mov
out
shl
out
fcmovnu
pop
daa
sub
lea
adc
into
push
pusha
pop
jno
sbbl
dec
push
lahf
add
sub
dec
shlb
andl
push
sti
leave
int
in
je
dec
test
pop
inc
out
movsl
inc
adc
push
inc
aas
cmp
inc
test
lcall
stos
nop
data16
int3
push
jnp
cmpb
mull
xchg
fbld
inc
xlat
imul
lret
add
mov
into
data16
int
ret
add
push
faddl
jae
inc
adc
call
addr16
xchg
into
mov
js
or
mov
cmpsl
outsl
mov
and
mov
lahf
loop
xrelease
cltd
lcall
scas
fstpl
jl
pop
xor
push
mov
pop
imul
aam
std
je
or
inc
aas
sbb
arpl
pop
push
or
orl
dec
xor
icebp
lret
cmp
add
cmp
call
mov
dec
xchg
dec
imul
cmp
pop
jae
dec
xor
sbb
mov
in
mov
test
xor
arpl
sbb
rcll
mov
aas
xchg
ficomps
add
lret
push
imul
or
fstl
lret
in
push
ja
inc
and
mov
or
call
pop
adc
ja
cld
subl
sub
jbe
into
stos
ror
xchg
mov
mov
dec
cmp
mov
in
adc
fucom
fsts
aam
dec
and
inc
imul
andl
pusha
pop
adc
loopne
mov
inc
and
fwait
dec
inc
push
jb
and
cwtl
sbb
orb
add
arpl
push
or
add
adcb
fsubr
inc
loopne
xor
inc
insb
jne
and
sub
ret
sub
push
mov
shll
pop
pop
cmc
and
mov
test
popf
out
movsl
or
sbbb
scas
mov
roll
aas
aam
sub
popf
sub
into
decl
pop
jle
jae
inc
jle
int
test
xchg
jmp
xor
mov
dec
call
mov
rol
dec
sub
ficoms
xchg
mov
lods
ljmp
pop
mov
pop
jle
repnz
xchg
fmul
or
fbld
les
aaa
push
into
std
push
lds
aam
xor
out
push
das
lret
xchg
repz
xchg
lea
mov
outsl
xlat
bound
push
leave
mov
xor
jb
lea
xor
repnz
cld
mov
xchg
cwtl
rolb
dec
gs
sbb
andl
pop
inc
adc
fmull
xchg
cmp
adc
jle
sarb
ror
mov
imul
test
adc
outsb
es
cmp
mov
inc
gs
sbb
fcmovbe
mov
nop
adc
and
dec
test
test
xor
out
fnstcw
test
out
enter
and
sar
dec
cmc
add
xor
adc
shl
leave
push
out
jmp
pop
fwait
xchg
sbb
leave
outsl
and
fdivr
dec
and
or
mov
stos
je
jg
ljmp
out
iret
lods
dec
test
mov
daa
and
ja
pop
popf
insb
jl
in
cmp
push
arpl
and
gs
or
cmp
int
push
push
fldt
in
mov
aam
loopne
or
add
xchg
sub
cmc
xlat
pop
aas
ret
mov
in
mov
add
test
push
lds
mov
mov
shr
adc
repz
ja
mov
fidivrl
push
divb
fs
dec
lods
mov
cli
push
incl
addr16
mov
xchg
stos
aaa
addb
pop
and
sbb
xchg
xorb
addr16
aaa
push
inc
cmp
in
fistpll
rorl
push
hlt
adc
pusha
jnp
mov
lods
dec
ret
int3
jmp
mov
fwait
scas
or
mul
mov
push
repnz
movsb
pop
and
fmuls
adc
or
icebp
and
push
pushf
dec
xor
sbb
inc
xor
fld
dec
jl
sbb
pop
xchg
aam
leave
loope
or
mov
popa
push
and
mov
push
in
shlb
xchg
lods
popf
in
mov
imul
divl
mov
aas
clc
pop
loopne
insb
cmp
lea
mov
mov
dec
jae
dec
fistpl
icebp
arpl
add
dec
xchg
push
dec
dec
lret
pushf
gs
mov
xor
push
mov
cmp
jb,pn
pop
cmpsb
xchg
pop
mov
dec
stos
insl
lret
shl
mov
xor
daa
and
and
cli
adc
pop
inc
faddp
clc
push
out
mov
rcrb
stos
push
aaa
or
sbb
push
and
out
jle
addb
jl
inc
pushf
xorb
and
lock
add
out
enter
mov
lahf
and
int
test
lcall
lock
jae
dec
mov
repz
add
jmp
dec
and
out
or
aam
xchg
loope
push
xor
enter
cli
mov
icebp
xchg
and
pop
mov
jae
rclb
push
xor
test
jl
in
sub
popf
dec
mov
jnp
xchg
jge
aaa
jnp
lcall
sbb
out
enter
lcall
iret
incl
hlt
int3
aas
je
pop
or
mov
sbb
or
mov
mov
fwait
mulb
mov
add
push
xor
inc
stc
inc
jge
mov
mov
fisubl
jnp
add
sub
add
mov
mov
call
xchg
es
jp
call
add
mov
add
sbb
push
jbe
sbb
push
add
mov
xchg
data16
scas
mov
xor
cmpsb
jno
xchg
sub
mov
cmc
cmc
fldcw
movsl
scas
lock
mov
incl
pop
add
sbb
xchg
mov
dec
lea
lods
push
or
pop
fistpl
add
in
xchg
fst
nop
fsubr
adc
ja
jnp
test
push
mov
inc
push
push
lcall
negb
in
mov
out
dec
sub
aam
addl
cmpsl
test
aam
adc
inc
outsb
nop
andb
mov
adc
pop
xor
pop
or
push
lret
add
popf
sub
bnd
scas
cmpsl
xchg
in
div
clc
mov
jg
int3
enter
and
xchg
jns
cmp
cwtl
fwait
inc
sti
adc
mov
pop
and
int
lds
inc
jmp
movsb
das
push
addr16
mov
repz
outsl
fstpl
shlb
hlt
sbb
dec
movsb
lahf
out
pop
adc
aad
add
mov
cmp
in
and
jns
cs
loope
and
mov
sub
pushl
and
add
push
and
pusha
sub
orl
mov
pop
movb
push
and
jmp
xchg
enter
adc
jmp
dec
jecxz
mov
insb
xchg
inc
into
push
jmp
cmovns
cmpsb
mov
fildll
or
sub
fadd
mov
imul
lods
xchg
jle,pt
lea
lods
or
sbb
mov
add
inc
and
mov
xchg
sub
sub
pop
and
jmp
lahf
push
xchg
clc
pusha
les
es
xor
adc
dec
in
dec
mov
idivl
out
aam
mov
mov
xchg
jmp
pop
sub
cmp
lret
call
ja
pop
daa
imul
jb
or
inc
pop
fldenv
dec
adc
xchg
sbb
pop
loopne,pn
xor
jg
pop
fwait
ret
cmp
jl
xchg
jmp
ret
mov
xchg
mov
jmp
daa
ret
add
mov
inc
imul
jmp
stos
jle
mov
mov
pop
adc
std
out
mov
lea
sub
xchg
or
jmp
or
sbb
rcrb
sbb
aad
mov
test
cmpsl
mov
std
addb
add
cwtl
add
rcrb
mov
sbb
jmp
jge
pop
insl
pop
ss
call
inc
gs
mov
mov
cmc
out
push
add
inc
inc
pop
cwtl
xchg
decl
or
dec
xchg
jno
bound
sbb
gs
mov
sub
jnp
add
mov
in
fnstsw
das
loop
mov
push
push
test
ljmp
shlb
push
xor
dec
cmp
mov
pushf
insl
sbb
fsubp
lods
or
xchg
jl
or
cmp
jno
jbe
xchg
adc
call
jecxz
cmp
repz
add
outsl
adc
jno
xchg
in
mov
setp
mov
xor
test
xchg
xchg
add
fucomp
ja
cmp
mov
xor
adc
das
jno
push
lds
in
fistps
cmp
in
xchg
lock
push
out
negb
sub
int
inc
dec
idivl
cmp
push
xchg
sub
mull
imul
pop
rorl
xor
aam
push
mov
sti
mov
ret
mov
ljmp
push
data16
lea
adc
mov
push
xor
push
mov
out
pop
es
cmp
hlt
sub
scas
orl
push
in
jb
jl
test
cltd
fiadds
fwait
cmpl
sbb
int3
mov
pop
cmp
les
sbb
xchg
sar
aas
xchg
pop
fwait
das
cmp
sahf
iret
mov
dec
ja
mov
test
mov
lret
adc
mov
aas
jns
outsl
inc
inc
leave
cli
cmp
mov
jl
movsl
ficoms
pinsrw
dec
jecxz
test
xor
js
cmp
jle
popa
stos
out
pop
lds
cwtl
pop
jecxz
add
push
imul
inc
int3
lret
jns
daa
in
bound
mov
ds
sub
jb
movsl
jno
ud0
push
mov
add
ja
jmp
mov
mov
add
cmp
sbb
ss
sub
cmpsl
gs
fwait
cwtl
or
fdivrp
cld
test
out
ljmp
pop
std
gs
pop
cmp
xchg
lods
lahf
pop
aad
lds
jmp
hlt
xchg
push
xchg
cmpsl
cli
in
mov
ds
inc
xchg
and
insb
xor
pop
xchg
xor
mov
cmpsl
imul
shrb
push
fucomip
sub
xor
inc
sub
lea
add
lea
subb
rcrb
add
jg
fs
lods
xor
loope
insl
enter
aaa
pop
movsb
xchg
int
pop
jp
icebp
roll
loop
mov
pushf
add
sbb
cmpsl
rcll
sub
std
leave
and
arpl
inc
or
adcb
call
fildl
xor
repz
test
aaa
mov
mov
mov
je
test
mov
mov
sub
out
adc
add
push
and
pop
addb
jns
mov
push
add
dec
dec
hlt
jge
fldcw
mov
insl
fs
out
cmp
push
sbb
les
sub
xor
jmp
icebp
shrl
push
aaa
das
fwait
in
cmp
in
mov
add
mov
dec
mov
bound
jl
dec
add
add
add
xor
jge
push
sbb
lds
mov
iret
push
mov
adc
cwtl
cmpsb
mov
dec
rcr
daa
push
xchg
cmpsb
cs
js
mov
mov
xlat
push
cmpb
xchg
jmp
filds
dec
mov
in
ja
insl
insl
xchg
lods
jecxz
and
xchg
sub
lcall
mov
je
mov
push
xchg
inc
jl
in
jle
hlt
and
xchg
loopne
ror
cmpsb
push
jbe
push
xchg
mov
add
outsl
jecxz
or
push
out
cld
lods
and
add
subl
mov
fcoms
and
stos
sbb
cmc
mov
jmp
lods
cld
push
fisttps
sbb
xlat
jno
mov
jle
push
pop
fisubl
sbb
leave
int
mov
xchg
jne
je
inc
es
dec
loopne
sub
repz
mov
cltd
stos
out
movsl
jbe
cmpsb
mov
mov
cmp
or
not
aad
outsl
lods
cmpsl
punpckhbw
mov
std
mov
xor
mov
add
stc
or
xlat
cwtl
in
mov
fisubl
pop
push
inc
test
push
ss
push
mov
xorb
daa
pop
cld
or
iret
pop
cmp
fcmovne
xchg
jno
jg
insl
and
or
call
orb
iret
insl
fiadds
fidivrs
lds
mov
inc
rol
or
ret
stc
arpl
jno
addb
mov
inc
add
pop
movsb
fs
ret
xor
mov
out
ret
pop
dec
push
arpl
pop
fists
push
xchg
pop
jb
sub
pop
xchg
mov
icebp
adc
movsl
mov
cmc
mov
jmp
jge
addr16
mov
subl
sbb
or
inc
mov
add
xchg
push
in
std
sbb
sbb
dec
or
loop
xchg
sahf
mov
aas
adc
mov
es
mov
fwait
inc
int3
inc
xchg
fisubs
stos
pop
cmp
dec
cltd
or
push
inc
out
jns
lock
dec
shlb
je
das
mov
sarl
xchg
pop
pop
mov
sbb
push
test
data16
das
pop
pop
pusha
mov
data16
push
xor
int
cmc
mov
jns
and
mov
push
das
stos
adc
dec
dec
movb
pop
push
jmp
dec
push
stos
fcomps
int3
pop
push
pop
xchg
cmc
jno
rol
jg
adc
sbb
loopne
push
jle
jbe
mov
dec
inc
xchg
data16
out
iret
mov
fnsave
pop
cmp
or
int3
mov
frstor
add
cmp
mov
popa
mov
out
aam
jo
cmc
xchg
and
inc
or
aas
shl
ret
mov
fidivrs
jmp
sub
fadds
cmpl
or
pop
jne
pushf
js
or
lds
xchg
adc
fbstp
jmp
lds
dec
xchg
cmp
mov
aam
mov
lret
or
fdivrs
sbb
mov
imul
test
fisttps
inc
inc
cli
jbe
pop
and
ljmp
pop
cltd
mov
cmp
mov
mov
and
sub
addl
jns
bound
int
mov
adc
stos
repz
add
xchg
cli
int3
adc
repnz
cwtl
in
cli
add
ljmp
daa
or
add
test
push
aaa
sub
cmc
insl
and
cltd
jp
mull
or
jno
cmp
addr16
xlat
sub
mov
ljmp
and
fs
mov
aad
in
xchg
add
push
sbb
inc
add
pop
inc
jp
sub
cmp
mov
sbb
lods
xchg
fstpl
ret
std
les
leave
pusha
push
outsl
jns
aas
mov
aas
mov
into
cmp
mov
sub
inc
rolb
jmp
fldt
les
test
add
xchg
aaa
ss
pop
aad
dec
sub
pop
cmp
mov
xchg
push
mov
jg
xchg
int
adc
stc
dec
mov
test
dec
pop
ja
jle
test
ret
pushf
shl
add
add
out
out
testl
mov
lea
jne
popf
les
and
sub
fmulp
and
jo
adc
adc
stos
sahf
shr
aas
mov
add
pop
lret
inc
into
stos
das
ljmp
sbb
and
mov
xchg
adc
lea
pop
sbb
lret
lret
jecxz
mov
inc
ss
and
out
mov
mov
jecxz
nop
mov
or
movsb
jp
popa
ds
sub
cmp
pop
cmp
mov
insb
add
mov
adc
ret
call
push
adc
aam
int
pop
jbe
imul
enter
call
in
shlb
mov
stos
js
inc
sub
push
sbb
push
mov
outsl
push
add
jmp
pop
scas
cmpsl
pop
insb
sub
mov
cld
repz
sub
clc
repz
mov
and
cmp
popa
sub
lods
mov
add
je
mov
test
mov
ja
mov
add
xor
stos
xchg
fwait
inc
push
sbb
or
std
lret
loopne
imul
ss
outsb
pop
and
leave
jae
lret
adc
sahf
fistps
and
sub
loopne
rorb
mov
push
push
dec
inc
xchg
in
sahf
je
fadds
push
cmc
dec
dec
sbb
pusha
cmpb
fmull
dec
pop
fdivrp
dec
notb
and
add
xor
dec
inc
pop
and
sbb
xchg
cmp
imull
out
and
or
jmp
xor
jbe
mov
adc
addr16
dec
cmp
popf
mov
xchg
inc
inc
movhps
inc
and
in
js
jmp
or
sbb
cmp
adc
xchg
arpl
mov
inc
push
push
movsl
inc
sub
jecxz
push
push
cmpsl
cmp
out
jne
ljmp
cs
push
pop
xor
stos
ds
adc
pop
icebp
dec
cmpsl
inc
push
cld
mov
jg
mov
xchg
jae
xor
imul
jl
fistl
push
xchg
mov
jmp
cld
imul
sahf
add
add
divb
hlt
cmpsl
dec
mov
inc
scas
cld
test
ret
sbb
xor
adc
jp
stc
ret
sub
inc
cmpsb
data16
rcll
sub
inc
mov
enter
sahf
add
mov
push
incl
insb
daa
enter
imul
mov
iret
push
lcall
popa
out
mov
inc
push
mov
dec
mov
mov
lea
jmp
ds
ficoml
stos
test
es
push
xchg
xchg
xor
cmp
xchg
xchg
or
inc
or
adc
shlb
in
cli
xchg
out
cmp
jle
jns
mov
push
cmp
cwtl
pop
ret
les
test
sub
js
push
loope
test
push
stos
mov
dec
jb
lret
shlb
jge
dec
aad
jge
cmp
loopne
dec
lcall
outsl
push
retw
sarl
xchg
jle
and
or
adc
dec
popl
adc
cmp
leave
clc
xor
fldenv
cmp
sahf
pop
in
adc
fisubl
add
cmpl
pop
or
dec
push
andl
xlat
js
jg
jle
addr16
je
arpl
xchg
pop
lods
sarb
out
push
mov
movsb
fdivr
cmp
es
ficoms
popa
xchg
xlat
mov
ljmp
out
lock
out
push
cmp
cmpsb
inc
mov
adc
scas
sbb
pushf
inc
mov
mov
sbb
rorl
loope
sbb
lea
pop
shl
in
in
shrb
jl
push
outsl
sbb
dec
mov
mov
xor
pop
ja
xchg
popf
movswl
push
bound
filds
xchg
xor
pushf
or
xchg
dec
dec
dec
lcall
sub
iret
js
and
jecxz
scas
cmp
push
push
mov
cmpsl
add
mov
jle
inc
or
xor
jg
gs
fnstsw
xchg
sub
repz
mov
je
jo
insl
ficompl
xor
rcrl
movsb
je
test
imul
xor
clc
test
push
movsb
testb
out
insb
movb
xlat
cwtl
lcall
jg
notb
int3
or
out
hlt
cmp
imul
in
add
sub
sbb
inc
popa
xor
add
data16
outsl
sub
test
dec
xor
push
mov
mov
out
int
cmc
inc
mov
test
cmp
shll
pop
cs
inc
inc
pop
xorb
mov
das
inc
pop
sti
pop
pop
sbb
adc
inc
or
leave
mov
and
inc
fwait
es
es
xchg
dec
xor
nop
mov
and
mov
movsl
lret
das
mov
push
push
scas
and
je
xor
or
xchg
pop
lea
rol
int
xchg
xchg
movsl
cld
mov
je
scas
add
mov
daa
and
int
popa
jmp
sbb
jns
fbld
clc
or
push
push
scas
ja
rcl
in
adc
jecxz
test
test
add
rcll
out
mov
inc
lock
pop
sbb
sbb
insb
push
popf
test
jecxz
aad
push
mov
mov
push
shll
clc
outsl
add
stos
fldl
mov
mov
or
hlt
mov
jp
xchg
pop
cltd
push
cmpsl
shrb
sbb
inc
lret
fisubrs
leave
rcrl
outsb
out
mov
mov
mov
jmp
sub
add
enter
hlt
popf
pop
add
test
pop
inc
sarb
pop
mov
inc
lea
lret
mov
lock
push
les
scas
or
sarb
fsts
enter
sbb
clc
imul
and
inc
and
jns
push
loopne
loopne
dec
ljmp
mov
inc
mov
fwait
stos
or
mov
mov
lret
xor
xchg
nop
outsl
pop
rorb
adc
sub
test
sahf
pop
add
shrl
mov
mov
inc
movsb
ds
cld
aaa
adc
insl
mov
or
add
test
jbe
pop
stos
adc
mov
lsl
cwtl
mov
aaa
sbb
cmpsl
jge
mov
outsl
pop
insb
nop
xchg
aas
ja
pop
addr16
fidivs
gs
sbb
into
loope
cmpsl
ror
cmc
aad
loop
mov
jno
iret
inc
shr
bound
dec
rcrb
int
push
or
jnp
cmp
cmp
lcall
repnz
bndldx
iret
pop
cmp
jne
cmp
jno
aad
out
sbb
dec
addl
xor
cs
repnz
push
pusha
std
xchg
clc
jl
jg
add
scas
in
jmp
dec
or
outsl
imul
test
pop
sahf
lcall
push
add
xlat
aaa
add
test
int3
xchg
push
inc
das
loop
aas
add
out
sub
jne
mov
jae
cmp
cmp
and
pushf
mov
jne
push
cmp
push
cmpsb
std
int3
in
daa
sbb
insl
aad
sbb
lret
xchg
repnz
dec
lock
cmpsb
dec
test
jmp
and
movsb
pop
lret
push
fnstsw
push
jl
pushf
in
rcrl
add
dec
xchg
ljmp
sbb
inc
pop
cmp
lods
inc
daa
sahf
pop
test
leave
sub
xchg
or
mov
adc
pop
addr16
push
mov
jmp
push
inc
insb
out
sbb
sbb
fisttpl
jne
mov
adc
jne
xchg
push
cmp
pop
les
clc
pop
ja
xlat
mov
imul
inc
in
out
mov
mov
add
ljmp
mov
dec
cmp
and
dec
dec
dec
fcoml
jle
jle
pop
cmpsl
add
sahf
stos
sub
scas
cli
or
ret
xchg
mov
lret
aad
or
inc
xchg
sbb
shlb
cli
enter
adcl
push
jp
fcom
ret
cltd
sub
out
mov
std
lcall
xor
out
sub
xor
insb
out
mov
cmpsb
clc
cltd
pop
cld
data16
mov
mov
sub
icebp
bound
js
cmp
push
orl
in
jne
mov
xchg
pop
jno
popa
dec
xlat
xor
test
jmp
stos
in
loopne
jle
aas
popf
bnd
jle
xlat
dec
andl
sahf
inc
clc
movsl
add
cli
pop
pop
imul
cmpsl
lods
nop
mov
and
punpcklwd
stos
ja
fidivl
inc
and
les
ljmp
outsb
sub
ret
pop
add
mov
push
sbb
cs
cmpl
xor
jnp
mov
fwait
popf
aaa
leave
test
mov
aam
call
cmp
mov
push
sti
pusha
mov
pusha
iret
pop
imul
fcmovnb
scas
mov
inc
add
into
mov
add
or
pop
fmuls
xor
mov
repz
popf
sbb
push
sub
inc
out
mov
inc
add
jle
and
cmpsl
or
push
mov
rclb
scas
sbb
cmp
jmp
or
xor
call
xchg
inc
call
pop
cmpsl
pop
bound
cmp
mov
pop
pop
mov
cmpsl
ficompl
lods
imul
mov
sbb
repz
int
repnz
inc
mov
sub
and
xchg
push
add
lods
bound
push
jp
jb
scas
out
xchg
lods
xor
cli
mov
sub
adc
mov
mov
jle
repnz
inc
dec
pop
stos
call
rol
cld
ss
push
les
jnp
mov
addr16
add
scas
scas
incl
jl
addr16
cmpsl
sbb
test
in
xchg
rolb
sub
jne
jno
mov
push
jae
push
bound
cmpsb
fidivs
ret
enter
fstpt
and
or
push
clc
adc
arpl
sbb
pusha
mov
push
inc
das
jmp
push
inc
scas
pop
int3
inc
pop
cwtl
mov
sub
mov
out
in
cmp
out
cmc
xor
xchg
fsts
loope
aam
jae
repz
negl
or
arpl
sbb
nop
cmp
sar
xlat
cwtl
je
or
pop
int3
mov
test
cli
mov
add
mov
inc
iret
data16
arpl
aad
ret
xor
adc
lret
jo
push
fildll
mov
fs
popa
xchg
rcll
fldenv
outsl
jp
xor
fidivrl
cmp
hlt
mov
or
jg
mov
stc
add
jl
add
out
jae
test
push
dec
imul
xchg
pop
mov
or
cmp
inc
dec
sti
subb
movsl
icebp
lock
repnz
pop
pop
push
pop
sub
fdiv
push
ljmp
dec
pop
pop
cmpsb
aad
mov
lret
stc
xchg
cmp
arpl
cs
mov
cltd
rclb
mov
sbb
pop
frstor
stos
sbb
cs
daa
and
pushf
out
adc
ds
push
loope
inc
mov
xchg
clc
dec
pop
aad
adcb
ja
xor
add
adc
int3
incl
and
daa
cmpl
xor
int
inc
cmp
divb
sub
shlb
and
add
jl
mov
add
imul
sub
les
dec
int3
lcall
sub
std
mov
sub
pop
bound
ljmp
mov
mov
cmp
xor
int3
push
out
cmpsb
xchg
out
cmc
ja
cmp
mov
fisttpl
mov
lea
daa
std
xor
jb
jne
dec
mov
pop
fcomip
shl
pop
shrb
and
push
pop
xor
cmp
in
or
cmp
sbb
fcomi
sub
lahf
imul
xor
or
inc
add
and
faddl
xlat
mov
ljmp
cltd
dec
das
or
pushf
inc
mov
xor
cli
jnp
loope
xchg
sbb
and
sbb
mov
jg
mov
cs
xor
mov
scas
call
dec
pusha
aad
mov
jmp
rcrl
rolb
loope
fbstp
dec
push
mov
inc
jnp
mov
cmpsb
in
or
pushf
sub
dec
push
int
test
jg
cwtl
cmpsb
inc
or
jg
mov
push
jl
cmp
loopne
test
in
in
ret
arpl
pop
xor
cwtl
in
inc
xor
inc
sub
stos
pop
arpl
and
push
cmp
dec
or
jo
in
mov
mov
pop
and
mov
bound
rolb
jg
dec
js
lods
push
cmp
xor
daa
icebp
nop
xchg
push
ret
add
xor
push
popf
xlat
jne
push
sbb
or
pop
lds
addb
sbb
pop
jp
movsl
and
jmp
bndldx
jmp
jge
shll
xor
dec
cli
call
jae
je
dec
stos
and
call
popa
jb
js
ret
in
jp
sarb
test
xor
mov
clc
pop
nop
cmpsl
jne
addb
sbb
cmp
and
lcall
sahf
dec
loopne
in
or
push
fimull
jns
ljmp
cmp
cmp
sub
clc
pop
iret
into
cs
inc
loope
mov
iret
lock
dec
add
lahf
fs
nop
loop,pt
and
xor
mov
lds
test
outsb
insl
push
sub
out
movsl
ljmp
ja
iret
sbb
sbb
lahf
loopne
push
pop
cmp
fistpll
rcll
call
mov
gs
aas
sub
xor
cld
mov
dec
or
mov
pusha
push
in
pushf
mov
ss
mov
pop
jg
or
addr16
push
clc
lahf
sbb
aad
push
fbstp
jns
mov
addr16
xchg
cmc
in
dec
jl
jae
or
ds
cmpsl
mov
mov
xor
iret
mov
dec
mov
daa
mov
push
inc
jno
jmp
adc
test
mov
jno
sti
sbb
mov
mov
stos
mov
mov
add
leave
fstl
sbb
rolb
loop
mov
movsl
imul
in
jbe
ja
xchg
xor
sbbb
daa
ljmp
push
int3
push
jmp
xchg
fs
lock
idivb
jecxz
rcll
push
jg
sbb
push
adc
fsubrs
push
cmp
pop
xchg
test
cmp
repnz
push
ja
push
mov
aas
dec
mov
nop
imul
jnp
inc
imul
and
pop
push
and
mov
dec
push
xor
pop
sbb
cmp
cltd
adc
mov
in
mov
pop
pop
aaa
add
sbb
push
and
pop
inc
mov
lahf
xchg
dec
pop
adc
lock
dec
jnp
push
adc
pop
div
fisubl
std
xchg
sbb
pop
push
clc
lret
xor
jnp
or
cmp
inc
cmpsl
or
shrl
call
or
jg
js
test
test
lods
shll
sbb
das
mov
daa
mov
adc
mov
or
nop/reserved
jo
add
in
sqrtps
push
mov
loope
stos
nop
mov
out
adc
les
ss
adc
adc
mov
stos
into
int
or
sti
stc
mov
mov
cmpsl
fdivs
mov
dec
out
push
jbe
es
insw
adc
repnz
ds
lret
add
leave
push
movsb
aaa
cmp
mov
dec
add
pop
outsl
fisttpll
push
inc
idivb
sub
mov
cld
mov
aas
sub
pop
adc
inc
inc
ret
mov
xchg
aad
xor
cmp
incl
mov
inc
pop
popf
sub
stos
lret
cwtl
aas
cwtl
add
pop
push
int3
pop
xor
inc
xchg
hlt
or
pop
repz
cltd
or
test
inc
sbb
pop
adc
jle
jge
je
mov
rcrl
movsb
jns
and
stos
fs
push
mov
nop
roll
in
pop
or
mov
sbb
xchg
pop
mov
mov
cltd
dec
iret
or
or
sti
in
loope
mov
das
inc
sub
cmp
je
or
stos
cmpsl
fiaddl
int
push
test
push
xchg
xchg
cmp
mov
jno
fs
mov
out
lods
rcrl
cltd
dec
cmpsb
mov
push
test
mov
adc
out
jnp
fistl
and
sub
mov
inc
push
testl
or
jae
sub
jbe
out
jne
outsb
mov
jge
mov
sub
test
cmpsl
inc
leave
cmp
into
fildl
jno
pusha
or
dec
loop
scas
scas
lcall
push
jnp
dec
inc
add
in
shll
sub
int3
loope
and
iret
add
sub
mov
cli
inc
pushf
mov
push
sbb
cmp
stc
pushf
xchg
data16
leave
repz
mov
js
jb
add
xchg
jo
mov
pusha
push
int
push
or
xchg
push
mov
imul
dec
xchg
xchg
sbb
sbb
stos
std
jae
test
sbb
in
ret
jmp
pop
push
xor
ret
xor
lahf
das
dec
sbb
jl
fdivs
leave
int3
aas
not
mov
imul
jmp
popf
pusha
js
mov
pop
je
rcr
xor
in
xchg
repnz
xlat
lret
rep
insb
xor
mov
jmp
bound
ficomps
enter
movsb
jge
mov
repz
stos
bound
sub
imul
lcall
rcll
push
arpl
lock
inc
cmp
clc
popa
les
sbb
mov
lds
inc
xchg
insb
arpl
popf
sbb
sub
mov
shl
out
dec
lds
ss
out
xchg
cmp
roll
mov
insl
lret
bound
mov
add
mov
pop
je
sbb
add
mov
faddl
push
adc
xor
mov
in
iret
leave
jecxz
dec
arpl
sbb
cmpb
test
ret
mov
sub
bound
and
lods
cltd
inc
stos
cmp
push
cmp
jecxz
addb
mov
out
shld
push
movsb
ja
cmp
push
loopne
insl
push
roll
push
push
cmp
push
cmp
loop
fs
pop
imul
ret
inc
mov
stos
adc
dec
out
fdivl
add
test
call
cmp
aas
fwait
and
push
xchg
mov
daa
pop
inc
lods
dec
mov
movsb
icebp
call
inc
adc
aaa
lods
cmp
adc
mov
mov
enter
adc
hlt
xor
icebp
mov
jno
repnz
push
aaa
dec
push
das
adcb
int
push
out
cmp
mov
das
aaa
adc
sbb
mov
add
add
pop
dec
mov
or
int3
and
cwtl
test
pop
mov
test
andl
scas
fdivrs
adc
push
cmp
pop
je
jne
fnsave
into
xchg
pop
mov
pop
pop
mov
pop
je
bound
dec
call
fwait
sbb
pop
jae
repnz
mov
jns
lahf
and
ret
pop
sbb
mov
addr16
fdivl
dec
rcll
lods
mov
mov
repz
int
mov
xchg
pop
in
negl
push
leave
sub
mov
push
int3
sub
sub
dec
repz
jge
cmc
or
adc
xchg
inc
jno
jmp
mov
push
xchg
pop
call
push
out
inc
lret
pop
xchg
mov
je
int3
pop
or
push
cld
dec
call
insl
xchg
xor
cmp
or
jg
adc
mov
stos
adcl
mov
stos
mov
popf
cmp
gs
xchg
dec
jmp
lods
jp
or
jge
pop
mov
jg
cmp
lret
je
fisubrl
mov
sbb
dec
pusha
arpl
call
inc
movsb
or
sub
push
sbb
push
xchg
push
dec
add
and
jge
movsb
dec
ja
sbb
div
fimuls
dec
fwait
jnp
push
aad
inc
cli
cmp
or
repz
xlat
shr
add
cwtl
fbld
sti
xor
lret
jg
add
xor
jne
cmp
mov
inc
pop
in
push
xchg
or
push
shll
addb
dec
or
cmp
lock
lock
or
nop
adc
int3
jg
mov
mov
mov
fldt
in
jnp
sub
xchg
rcrl
xor
aad
cmp
mov
imul
pop
cmp
sub
mov
xor
dec
aam
test
or
jmp
fldenv
icebp
insb
rcr
and
jo
dec
sbb
imul
sbb
or
aaa
xor
mov
out
mov
adc
fdivs
cmp
cld
in
sti
iret
mov
xchg
and
fildl
cmovbe
adc
add
jnp
testb
imul
arpl
aad
mov
dec
aaa
dec
lock
push
or
jl
arpl
add
push
mov
clc
jle
imul
sub
mov
mov
out
or
cmp
mov
cli
xchg
jecxz
adc
sbbb
lret
jmp
mov
ss
jne
insb
sbb
hlt
cmpb
xchg
cltd
repnz
and
dec
jns
cmp
and
sbb
out
pop
mov
fmul
insb
jo
dec
ret
mov
cli
adc
mov
mov
lcall
je
ja
jb
out
in
jns
add
loope
ret
repnz
mov
in
cmp
inc
mov
sahf
fidivl
sbb
int3
out
aaa
add
jbe
test
jo
or
das
xchg
dec
xchg
mov
mov
jo
add
out
and
mov
lret
or
lret
add
mov
aas
sbb
clc
pop
cmp
mov
pop
clc
inc
dec
insl
mov
int3
jnp
mov
test
sbb
xchg
aad
dec
decb
roll
and
imul
xor
clc
loopne
cld
adc
fldl
xchg
sbb
movsb
dec
adc
dec
and
leave
shll
mov
or
jns
sbb
sub
aad
addb
lea
mov
and
cmp
push
dec
dec
mov
adc
inc
mov
leave
stos
mov
enter
daa
dec
mov
jbe
fildll
rcrb
test
out
lcall
add
add
xor
inc
outsb
test
and
adc
mov
sbbb
addr16
sbb
stos
sub
outsb
sbb
fnsave
fcmove
ds
in
xchg
cli
and
xor
leave
in
sub
adc
jmp
mov
push
hlt
add
fs
lahf
clc
lea
xchg
dec
gs
add
pop
xchg
jnp
cs
push
sub
stos
nop
scas
add
insl
pop
xchg
pop
or
xor
push
sti
jae
pop
test
insl
sbb
or
xchg
push
pop
or
mov
scas
sbb
or
adc
xchg
mov
lahf
jge
dec
push
in
imul
sbb
insl
push
or
sbbb
idivl
imul
add
sti
repnz
sub
add
pop
xchg
jmp
or
cmp
jb
pop
cmpsl
fdivrs
hlt
ds
or
cmc
dec
cmpb
mov
sbb
cld
aaa
clc
sti
or
popf
xchg
leave
dec
std
pop
iret
push
sub
adc
icebp
and
pop
test
add
rorb
and
mull
and
cwtl
insl
test
cltd
add
loope
adc
mov
pop
ja
xchg
push
sbb
ja
outsb
sub
jne
mov
pop
dec
enter
inc
jnp,pt
cmp
sbbb
fisttps
sub
jo
xchg
daa
jmp
push
in
xor
push
lret
les
xor
int3
or
int3
xchg
mov
sbb
fdivrs
add
frstor
dec
decl
sbb
lcall
addr16
cmpsb
test
outsl
fsts
ret
xchg
mov
xchg
fcompl
out
inc
push
movsl
enter
dec
loopne
sub
roll
cmp
cmp
jno
arpl
or
jmp
shll
xchg
pop
and
sub
mov
mov
test
sub
je
jmp
xor
mov
insl
sti
lds
insb
stc
out
scas
test
xchg
loop
lahf
sbb
mov
push
in
xor
leave
scas
loopne
and
movlps
lahf
sub
jmp
cltd
imul
daa
enter
in
in
cld
or
sahf
mov
cli
mov
cld
dec
sbb
aad
mov
loope
and
repz
mov
in
pusha
sarb
sub
push
jb
pop
fldcw
mov
jmp
sub
loope
add
mov
lahf
inc
xchg
inc
fsubrs
test
and
mov
xor
xchg
pop
mov
mov
addl
jb
add
scas
in
jp
pop
cmp
jns
pop
je
or
xchg
push
mov
mov
xor
xchg
push
jbe
popa
imul
loope
push
sub
pop
or
and
popf
mov
dec
shlb
inc
cmp
shll
repz
or
push
jno
call
cmp
xchg
cltd
scas
adc
decl
jle
and
xor
in
sub
mov
xchg
adc
cld
insb
in
dec
shrb
mov
mov
xor
add
imul
lret
xor
xchg
lea
dec
sub
or
mov
fisttpl
jne
inc
xor
mov
inc
or
pushf
dec
aad
std
mov
mov
sub
jnp
dec
mov
dec
cmp
xchg
sbb
fidivl
call
addr16
add
sub
fsub
lods
aas
js
stos
mov
repz
std
mov
lret
sub
rcr
mov
test
loop
push
pop
cmp
sarl
pop
adc
icebp
pop
xlat
jo
ret
ds
popf
push
push
mov
pop
cmc
not
inc
mov
push
popf
pop
jge
mov
or
outsb
mov
mov
sar
enter
lcall
lds
mov
nop
push
adc
int3
subb
fnstenv
sar
lret
push
out
xor
imull
sti
test
icebp
sub
dec
pop
pop
sub
rcl
fists
loopne
notb
arpl
xor
adc
pop
loop
iret
mov
stos
int3
ret
stos
dec
push
cmp
es
mov
mov
sub
sub
leave
mov
popw
aaa
push
outsb
mov
and
int
mov
enter
lods
add
rorl
sbb
mov
add
cmp
mov
dec
aas
cmc
ffree
mov
add
cmp
add
andnps
addr16
clc
add
mul
loop
negb
push
cld
pop
or
outsb
cli
sub
insl
int
sar
mov
cmp
cld
test
pop
and
nop
adc
inc
push
out
jge
jnp
lret
mov
add
push
sbb
insb
sbb
inc
xchg
ljmp
push
repz
jno
cmpsl
aad
loop
jns
enter
mov
fsubrp
stos
fisubs
outsb
add
addl
int3
pop
cmp
inc
inc
subl
cmp
push
mov
mov
shrl
sbb
xlat
pop
shr
incl
scas
in
mov
cmc
pop
imul
lea
lds
into
dec
xchg
jns
xchg
push
stc
jb
pusha
pop
or
push
mov
jp
push
push
out
lahf
lods
lret
xor
lahf
shll
fcmovnu
cmp
je
pop
sub
sbb
cmc
mov
xchg
xchg
lock
bound
cmpsl
sub
ja
out
ss
xchg
int3
sbb
mov
pop
push
jle
mov
adc
adc
inc
and
aam
rorb
jno
lahf
lods
sub
or
ret
fidivrl
in
fdivr
adc
push
insb
sbb
adc
js
mov
cmp
mov
pop
cmp
mov
mov
or
add
enter
rolb
pop
lahf
push
repnz
mov
push
fdivrp
or
stc
mov
jne
jns
or
fcomps
xchg
cltd
aad
mov
adc
push
jle
fnsetpm(287
cmp
movsb
jne
jmp
shrb
cli
stos
mov
rcrb
xor
cmc
pop
mov
pop
xor
and
cwtl
mov
jne
jno
leave
push
pop
sbb
xchg
pop
rolb
ret
dec
sub
int
rcl
inc
lods
inc
pusha
fs
adc
pop
push
cmp
mov
or
test
call
neg
repz
roll
push
ret
lret
sar
jg
out
sub
inc
or
jns
outsb
pop
inc
ret
pop
pop
cmc
mov
sub
fs
ret
lcall
ljmp
and
mov
xchg
jecxz
adc
mov
sbb
mov
jge
imulb
push
icebp
ljmp
cmp
and
test
pop
fnstenv
and
enter
pop
iret
xchg
sbb
scas
adc
rcll
and
pop
and
jne
mov
mov
push
dec
pop
sbb
xchg
cmp
mov
mov
adc
mov
dec
mov
in
mov
out
clc
sbb
icebp
into
rorl
rol
xor
stos
mov
pop
push
mov
xor
dec
imul
xlat
aaa
xor
xchg
or
or
imul
sbb
pop
lcall
hlt
movsb
gs
insb
lods
shl
sub
dec
cli
mov
mov
cmc
sarb
inc
xchg
mov
sub
sbb
and
push
call
aaa
pusha
sbb
jns
out
in
xchg
inc
and
cmp
jge
pusha
addr16
mov
gs
fldl
cld
aad
dec
pop
out
cmpsl
or
jecxz
jo
and
xchg
loop
lahf
mov
leave
add
xchg
test
mov
push
out
int
jbe
pop
rolb
fistpll
mov
push
xor
add
sub
imul
push
ret
mov
paddusb
jp
dec
popa
loop
and
pop
inc
decl
call
sti
mov
add
lea
dec
hlt
aas
mov
outsb
bound
xchg
stos
xchg
aad
ret
addl
hlt
jge
add
out
pop
aaa
daa
cs
movsb
pop
sahf
cmc
mov
jmp
enter
push
xor
adc
mov
cmp
loope
cli
movsb
outsb
inc
pop
push
pop
jnp
push
movsb
bound
adc
adcb
cmp
test
iret
lods
xchg
dec
xor
and
add
test
cmp
int3
xchg
sub
mov
out
lea
test
cmpsb
es
sub
arpl
test
sbb
inc
fdivrl
add
pop
mov
push
hlt
xchg
add
mov
cs
hlt
into
incb
pop
fwait
outsb
daa
mov
popl
inc
jbe
push
in
cmp
mov
fwait
cs
mov
pop
or
icebp
mov
xor
repz
or
orb
popa
das
xor
rorl
inc
xor
sub
sub
cltd
mov
and
cmpsb
pop
cwtl
xor
mov
loopne
hlt
cmpsl
stos
cltd
fidivl
in
bound
lods
pop
fdivs
xchg
adc
imul
test
in
sbb
add
xchg
dec
loop
xor
and
orb
out
sub
dec
gs
jbe
in
and
ret
push
lea
xchg
jns
dec
shlb
push
out
sbb
cli
dec
mov
sub
cmp
jecxz
push
push
push
fldcw
cmp
fsubr
dec
mov
test
cmp
arpl
je
repz
mov
jo
pop
dec
es
sub
jne
mov
lock
jb
cltd
sbb
cld
test
add
movsl
add
jp
jbe
rcr
cmp
clc
aam
add
xor
sbb
pop
inc
lret
fcmovnu
inc
pop
dec
fisttpll
mov
enter
mov
cli
xor
fucomi
pop
nop
es
in
setb
popf
jg
mov
mov
cld
and
sbbl
pop
mov
stc
sti
popa
cmp
fwait
inc
xchg
cmpsb
push
gs
cmp
sti
movsl
jns
push
out
adc
mov
arpl
xor
add
mov
dec
movsl
cli
cmp
xchg
cmp
and
mov
out
add
sti
in
arpl
pop
dec
jae
movsl
xchg
rcrb
and
xor
mov
sub
jp
pop
mov
sbb
jmp
cmpsl
cmp
pop
bound
or
int3
data16
lret
push
jb
push
mov
movsb
fwait
subl
mov
lods
aas
xchg
mov
push
add
shrb
call
sbb
inc
test
jb
xchg
inc
sub
inc
mov
out
xchg
jns
dec
jge
sbb
sahf
and
pop
inc
dec
inc
inc
aad
xor
sbb
jg
popf
xchg
jle
or
rorl
mov
ss
out
cmp
sbb
dec
sahf
mov
push
sbb
dec
rcr
incb
jo
and
lret
sbb
es
sbb
fwait
out
sar
mov
mov
push
ss
sahf
mov
jns
fisubl
shlb
movsb
mov
pop
jmp
stos
pop
daa
push
dec
and
loope
sub
or
xor
cld
adc
int3
mov
push
xorb
sub
out
lea
fidivl
sahf
dec
xchg
or
pop
out
aaa
movsl
repnz
mov
es
pop
sbb
stos
lock
insb
repz
mov
fiaddl
push
leave
push
scas
inc
mov
in
jp
xor
xor
lret
iret
data16
and
aad
cltd
mov
fdivl
cmpsl
mov
mov
stos
jecxz
daa
inc
mov
and
xchg
sub
and
popf
out
xorl
dec
mov
xchg
sub
and
stos
fstpt
ficoml
or
jbe
sub
addr16
shlb
dec
sbb
fidivl
sahf
add
loopne
mov
dec
imul
jae
jnp
je
and
or
scas
mov
xchg
imul
jp
in
mov
and
je
jnp
fcomip
lcall
lret
loope
fs
sti
mov
loopne
ss
scas
lahf
jne
or
aas
fistps
ret
ror
fldl
push
jecxz
adc
dec
mov
cmpsb
cmp
push
pop
loope
ljmp
xor
adc
lods
and
popa
cvtps2pd
mov
mov
pop
xor
jmp
sahf
mov
adc
jb
cmp
outsb
push
bnd
daa
adc
jns
sub
decb
add
mov
sbb
enter
std
aas
pop
sar
loopne
add
pop
dec
mov
lds
fcomps
xor
inc
arpl
stos
repnz
or
loop
ret
xchg
push
daa
sub
popa
sti
pop
aad
cmp
pusha
enter
addr16
aad
sbb
jp
jle
add
out
jbe
mov
xchg
insb
loop
jp
cs
jge
mov
mov
push
mov
scas
xorl
xor
shl
sahf
push
pop
jge
mov
lret
cmp
inc
insl
or
mov
adc
test
cmp
push
inc
divl
or
stos
test
sub
aaa
lret
mov
mov
mov
movsl
dec
in
add
push
xlat
cld
js
enter
lea
ficoml
adc
pop
xchg
add
insl
lcall
push
or
test
adc
enter
pusha
jbe
cmp
in
movsb
xorb
lods
sbb
xchg
or
add
dec
loope
and
sub
mov
mov
scas
stc
andl
jns
lods
or
in
gs
push
aaa
fisttpl
xchg
dec
in
cli
aaa
ffree
adc
sub
xchg
sub
mov
dec
mov
les
or
subb
stos
movb
sub
pop
jae
sub
loope,pn
add
mov
test
gs
outsl
sub
jmp
pop
mov
jae
sub
add
loopne
jnp
ss
mov
gs
xor
jecxz
insl
fwait
or
fcompl
fs
dec
fimull
inc
add
sub
sbb
xchg
fcoml
jne
mov
repnz
nop
push
sub
pop
add
inc
aam
pop
ffreep
dec
pop
gs
int
sub
inc
lea
push
pop
adc
and
push
les
or
loope
rclb
dec
mov
pop
sub
out
dec
fsts
adc
xchg
sub
sahf
or
daa
lcall
aam
fldt
xor
hlt
outsl
jle
add
xchg
push
jle
sub
cmp
cmp
repz
sti
cmpl
fbstp
adc
mov
dec
roll
lcall
pushf
lods
mov
cmp
inc
dec
xchg
dec
out
rcrb
sub
xchg
loop
rol
test
sar
rorb
jno
les
sub
popa
sbb
xor
xor
aad
iret
pop
addl
jns
lret
or
xchg
mov
ret
aad
outsb
popa
inc
cmpsl
cld
into
decl
push
and
mov
shrb
add
mov
clc
push
popf
jecxz
sbb
outsb
pusha
jl
std
shrb
or
es
popa
enter
data16
stos
dec
call
or
pusha
repz
hlt
xor
dec
inc
pavgw
in
addr16
add
mov
popf
add
add
out
mov
stos
jle
inc
add
cmp
nop
gs
out
xor
call
mov
pop
test
notb
jno
and
inc
pusha
inc
sahf
adc
add
xchg
push
in
mov
imul
xchg
mov
xor
sbb
mov
xchg
xchg
xchg
ret
in
mull
fs
pop
int
add
fcomps
inc
lods
push
outsb
imul
adc
jl
xor
or
sbb
into
or
jp
add
xor
jmp
adc
mov
jno
adc
mov
into
xchg
pop
sbbl
movb
cmp
test
pop
test
or
adc
pop
loop
cmc
mov
cwtl
jo
dec
adc
adc
mov
nop
jb
sbb
ss
jne
mov
jmp
jne
mov
sub
ret
lock
call
jmp
inc
imul
push
icebp
dec
aaa
add
mov
clc
mov
xchg
xchg
test
mov
add
in
mov
pop
pop
dec
mov
out
ljmp
xor
and
loope
inc
cli
imul
push
leave
pop
mov
sbb
xor
push
mov
ds
rclb
in
shlb
std
push
add
xorb
test
sbb
push
add
push
jae
aas
inc
lods
xor
sub
scas
test
in
pop
roll
xor
aam
mov
shl
push
iret
pop
jl
or
and
leave
or
fs
loope
pushf
inc
je
inc
push
jecxz
repz
and
inc
mov
sarl
cmp
clc
leave
jno
loop
mov
mov
call
out
clc
mov
in
jle
ja
cmp
nop
xchg
cmp
jns
mov
fildl
stc
sbb
scas
or
jg
inc
sbb
loope
iret
mov
subb
test
push
add
push
lds
xchg
lock
xchg
push
sar
xor
mov
jb
sub
aas
enter
mov
out
jp
sahf
dec
push
mov
ret
sbb
inc
in
and
mov
loop
sbb
adc
sbb
loope
mov
insb
loopne
ja
jl
inc
jmp
ss
clc
int
loop
and
lahf
inc
push
out
sbb
call
add
out
mov
and
adc
jecxz
push
jmp
mov
call
insb
inc
int3
xor
stc
hlt
lock
sti
loopne
ds
rorl
or
inc
js
mov
fnstcw
loope
hlt
cmovns
mov
xchg
pop
pop
fldcw
push
scas
mov
sbbb
subl
iret
fs
stc
scas
mov
sbb
scas
mov
movsb
mov
sti
fucom
shll
pop
loopne
ljmp
pop
pop
fmull
fcom
loope
sarb
repz
movsb
inc
inc
dec
xor
lret
jno
fisubs
dec
or
in
push
out
add
in
orl
shll
les
jne
cmp
fcmovnbe
xchg
fbld
in
or
jbe
scas
imul
outsl
fstpt
jo
push
push
pop
fisttpll
cld
lret
mov
stos
mov
mov
xchg
bound
add
dec
jl
and
dec
and
aas
clc
incb
add
mov
adc
mov
fwait
addb
jbe
adcl
loop
sbb
xchg
loope
pop
adc
repnz
outsb
xor
ror
push
ret
or
xor
jb
out
cli
stc
or
loopnew
push
sbb
xchg
sarl
repnz
scas
push
sub
into
jecxz
cld
sub
jmp
push
rcrb
mov
cmp
or
aaa
popf
xchg
mov
xchg
out
repz
xor
and
lret
js
in
fsub
test
popa
adc
fsubrl
adc
cwtl
push
inc
in
xchg
ret
aas
cmp
lcall
cmp
iret
inc
cmc
and
repz
rorl
cmp
sub
mov
mov
inc
sub
mov
mov
gs
dec
imul
testl
std
dec
in
data16
xchg
adcl
pop
jno
cs
sbb
dec
xchg
iret
mov
shrb
mov
movsl
lcall
lret
mov
push
mov
es
je
aas
das
xlat
and
ficoml
mov
inc
dec
pop
aas
packsswb
clc
cmpsb
push
mov
cltd
adc
and
lea
jo
xor
into
pop
xor
out
leave
push
rclb
dec
lock
les
and
stc
shrb
jmp
or
in
out
jle
mov
mov
fdivrp
pop
push
subl
sub
js
lahf
mov
popa
push
out
ljmp
push
aas
out
in
pop
jns
out
fwait
movsl
dec
fldenv
sbb
pop
cmp
test
test
push
int
sarl
pop
mov
std
xor
xchg
jmp
fucomip
shlb
sub
sub
and
xor
stos
les
cld
repnz
push
or
sbb
cwtl
pusha
push
cli
jl
shrl
mov
lods
dec
lahf
pop
in
in
std
push
xor
pop
in
repz
enter
add
neg
cli
cmpsb
inc
mov
pop
mov
outsl
sti
syscall
mov
dec
inc
fnstsw
fs
out
fiaddl
mov
rorl
pop
xorb
out
ret
sub
inc
jge
jbe
mov
mov
popf
adc
lods
mov
and
add
cmpsl
mov
mov
dec
sbb
fwait
cltd
jecxz
ljmp
hlt
pop
xchg
add
and
pop
out
cltd
push
mov
inc
test
ss
loope
stc
cmpsb
out
fbstp
iret
add
les
cmpsl
sbb
pusha
in
les
loope
loope
cli
addr16
add
mov
mov
enter
xchg
and
sub
mov
add
fcmovne
lcall
sbbb
lahf
outsb
lock
jno
mov
fmul
sbb
cmp
push
aas
push
inc
jle
inc
mov
dec
imul
dec
leave
jne
xor
xor
sbb
xor
jg,pn
inc
jo
rolb
ficoms
imul
popf
push
pop
xchg
movl
pop
add
pop
lret
ret
jecxz
outsl
stos
pop
lahf
sub
ljmp
mov
comiss
dec
testb
xchg
cmp
jecxz
sbb
mov
sbb
lret
inc
dec
mov
ljmp
outsb
dec
es
xlat
or
xlat
inc
fidivrs
dec
icebp
jle
pop
cmp
out
and
sub
fidivrl
adc
mov
clc
gs
shrb
ss
mov
add
dec
hlt
sub
stc
cmc
adc
xor
jno
cmp
sub
addr16
cmp
adc
xbegin
test
pop
mov
jle
sbb
mov
dec
cwtl
lods
cli
fcomp
mov
fidivrl
inc
push
aas
xchg
jl
into
jae
ja
adc
loop
jb
add
fadds
jp
lods
popl
call
push
test
icebp
dec
daa
jg
mov
lods
rorb
sysenter
mov
adcb
push
pop
adc
cld
out
jae
pop
mov
mov
pushf
fstps
pop
xchg
mov
fistl
push
or
add
mov
pop
pop
inc
mov
cmp
cmpsb
mov
aaa
scas
mov
xor
icebp
pop
sbb
pop
aad
mov
cmp
fisttpll
mov
in
push
outsb
push
aas
sti
jmp
mov
movsb
cmp
outsl
mov
pop
leave
sub
movsl
mov
mov
inc
int
bound
xchg
xor
sbb
sbb
movsb
push
sub
inc
xchg
jb
stos
adc
into
cld
mov
hlt
outsl
or
mov
sti
cwtl
lahf
push
hlt
repz
jo
lret
mov
push
lds
mov
and
out
insl
rolb
daa
mov
sbb
pop
and
lds
or
roll
xor
ljmp
pop
add
push
hlt
adc
mov
cmp
inc
cmpsl
popf
aaa
add
aaa
into
mov
jns
jae
aad
popa
lods
lods
mov
decl
pop
inc
xchg
push
les
ljmp
ret
sub
lock
gs
into
xchg
mov
es
add
cli
push
out
fsubrs
call
jns
lahf
jne
add
stos
xorb
sti
pop
and
pop
dec
jecxz
inc
cmp
js
xor
inc
lea
fs
loope
adc
xchg
lcall
and
ljmp
lret
sbb
stos
inc
adc
int3
test
mov
fs
test
xchg
jne
ret
mov
dec
push
stc
mov
lret
lahf
inc
in
into
xor
push
int3
adcl
mov
adc
mov
push
dec
xor
adc
add
add
out
sbb
int
cltd
mov
push
inc
test
xor
ljmp
mov
push
mov
repz
xchg
pop
fldl
leave
test
das
inc
iret
aas
cmp
out
dec
lret
xchg
mov
das
fmul
push
imul
loop
gs
dec
call
xor
dec
out
mov
fnstsw
xor
fstp
enter
and
push
pop
xor
insl
mov
ret
lcall
jg
sub
jmp
pop
movl
jge
fcmovnu
inc
jo
fwait
out
cs
stc
mov
xor
pusha
addr16
enter
aad
addr16
sbb
test
jl
or
es
jle
push
out
int3
incl
pop
cmp
in
or
stos
xlat
repnz
inc
sbb
les
cld
fldenv
pop
pusha
xchg
jle
repnz
test
leave
loopne
repz
adc
incb
xor
xchg
pop
repz
adc
inc
and
in
jae
sub
pop
sub
cld
jo
mov
fs
data16
hlt
rclb
das
push
shll
insb
enter
jns
sarb
xchg
jecxz
mov
sbb
mov
add
xchg
xchg
and
pcmpeqb
test
cmp
or
mov
cs
xchg
sbb
negl
fstl
out
mov
sub
fldl
test
cs
adc
jbe
leave
ljmp
xchg
dec
test
movsb
push
pop
repz
dec
pop
fldcw
dec
jmp
adc
adc
fs
mov
pop
ror
mov
in
xchg
cmp
pop
push
pop
data16
sbb
fwait
mov
push
or
add
and
sub
ret
gs
xor
add
movsl
fcmove
inc
ffreep
sbb
int
add
mov
jb
lods
or
mov
lods
sub
repnz
inc
mov
lcall
add
jne
mov
mov
or
xchg
fstps
pop
adc
lret
pop
xchg
mov
inc
xor
or
mov
sbb
adc
fisubrl
mov
flds
inc
shll
mov
dec
out
adcb
or
push
shll
xchg
xchg
mov
jbe
aad
or
jge
fs
xchg
call
addl
mov
pop
mov
mov
mov
mov
hlt
xor
dec
lock
in
mov
arpl
call
shrl
rcrb
cld
sti
dec
cli
or
fs
xor
loop
adcl
scas
mov
in
cmp
xchg
sbb
dec
pop
in
inc
mov
mov
jle
mov
add
out
push
filds
adc
enter
lods
mov
loope
mov
lds
pusha
jl
push
loope
int3
pop
imul
in
sub
fsubp
pop
andl
sbb
pop
jp
fwait
fwait
pop
and
mov
push
push
push
cmpsb
scas
xchg
shrl
mov
pop
les
xor
or
jno
inc
sbb
push
into
jmp
imul
inc
imull
or
mov
adc
pop
jmp
xchg
pop
mov
xchg
jecxz
repz
push
jb
cld
pop
pop
lahf
dec
mov
inc
in
out
mov
pop
fcomps
mov
loope
jge
mov
and
testb
incl
or
sub
jb
jno
mov
mov
mov
scas
fmull
cmp
pop
cmpsl
jb
aad
xor
das
xor
sub
les
xchg
xorl
dec
xchg
jnp,pt
adc
mov
shl
lea
inc
sbb
call
mov
das
gs
sbb
dec
or
jmp
cmp
in
pop
sbb
scas
fwait
enter
sbb
lods
rep
mov
cld
push
scas
shr
or
inc
push
pop
sbbl
rolb
push
test
mov
jmp
and
xchg
movsw
or
test
push
cmp
dec
ss
jbe
xchg
pushf
xchg
enter
xor
cld
mov
mov
inc
inc
lods
fisttpl
lods
jle
mov
repnz
sub
push
pop
mov
sub
push
mov
push
roll
fidivs
hlt
or
pushf
or
sub
xor
xchg
ret
stos
inc
out
sbb
xor
jp
test
test
pop
mov
mov
lods
pop
cmpsb
pop
daa
dec
je
testb
loope
lods
in
or
cwtl
mov
test
mov
push
lcall
testb
int3
jo
xor
fdivs
fsubr
mov
std
mov
sbb
out
sub
push
mov
stos
js
aaa
cmp
xor
call
shll
jae
and
and
test
ljmp
adc
imul
std
or
test
push
outsb
jmp
and
push
lret
fistl
cli
add
adc
call
jmp
aad
jne
push
cld
or
jns
shrb
mov
push
xchg
sbbl
mov
aas
sbb
push
mov
mov
movb
mov
mov
pop
mov
jbe
sbb
popa
mov
daa
arpl
mov
mov
adc
jo
dec
lret
pop
addr16
mov
add
in
push
xchg
sti
out
jbe
dec
insl
add
in
inc
mov
adc
xchg
dec
imul
test
in
or
pushl
and
xchg
fisubs
cs
scas
adc
cmp
add
sub
mov
call
lret
xor
dec
shll
inc
scas
xor
pop
in
lods
cmp
out
jns
fmull
or
xchg
pusha
mov
pop
sbb
dec
jns
adc
sub
js
sub
rorl
test
loopne
bound
adc
cld
lea
and
pop
xor
rorb
je
shrb
daa
outsl
push
mov
mov
or
push
and
cmp
faddl
jns
test
mov
sub
test
jne
adc
mov
mov
sub
push
mov
dec
push
push
clc
sti
subl
pop
aaa
inc
dec
imul
addl
push
add
sbb
aas
mov
pop
cmp
mov
adc
sub
sar
dec
push
or
fwait
sub
cmp
out
sub
into
outsb
inc
dec
aam
jge
or
stc
std
in
cli
dec
sbb
mov
int3
dec
mov
push
adc
and
stos
mov
out
sbb
or
push
flds
lret
enter
pop
rcrl
mov
mov
popa
mov
pushf
pop
movsl
mov
ret
scas
mov
mov
push
ret
out
jecxz
fildll
fnstcw
pop
dec
sarb
adc
lock
rorl
call
cmp
in
sbb
loop
jnp
sub
subb
xor
das
mov
stc
popa
pop
pop
adc
and
icebp
and
pop
mov
inc
ljmp
or
sub
xor
arpl
mov
xor
pusha
or
mov
xchg
push
ffree
loop
loopne
sbb
imul
dec
mov
repz
xchg
popf
jg
mov
push
aad
jae
or
xor
ret
mov
mov
aaa
dec
add
mov
mov
mov
sub
mov
jp
test
xchg
lahf
test
lods
andb
shl
lcall
xchg
pop
adc
mov
arpl
ficomps
repnz
test
cmp
aaa
inc
leave
aad
cmp
dec
nop
pop
sbb
rclb
loop,pn
add
clts
into
in
or
movsb
repnz
movsl
orl
xchg
cltd
mov
fdivrl
add
idivl
pusha
add
push
out
in
bound
nop
stc
pinsrw
enter
out
scas
mov
jp
lods
jg
xor
sbb
psrlq
mov
mov
std
sub
sub
jl
fnstcw
push
pop
arpl
stc
ljmp
fcmovu
js
adc
cwtl
adc
xor
js,pn
xchg
sbb
mov
mov
sub
cmp
mov
add
popf
test
pop
cmpl
pop
pop
sub
mov
aad
xchg
mov
mov
ljmp
pop
adc
cmpsl
lock
and
es
mov
clc
mov
imull
inc
jae
mov
jo
pop
sbb
dec
cmp
inc
mov
fs
add
mov
insb
popf
mov
add
lods
lcall
push
or
mov
adc
mov
insb
in
sbb
ss
cmp
leave
cld
xor
rcr
sbb
mov
int3
cs
mov
cmpsl
sarb
jp
icebp
add
stos
repnz
adc
stc
ljmp
jne
mov
push
rcrl
sub
xor
cs
outsl
push
dec
add
xor
scas
sbbl
pop
fcompl
bound
test
sarl
xchg
rcr
jle
orl
jg
into
adc
test
adc
daa
adc
push
loop
dec
adc
push
enter
mov
xor
adc
jecxz
rcrl
nop
mov
add
inc
dec
jb,pt
testb
pusha
add
fisubs
xor
repnz
aam
adc
pop
sbb
dec
lds
push
xor
imul
cmc
xor
xor
mov
bound
lcall
sub
push
cmc
xchg
xchg
sub
xchg
cmp
pop
jecxz
scas
push
or
loope
aad
push
sahf
pop
lahf
aad
jbe
sbb
push
cmpsl
or
mov
push
imul
or
mov
mov
fwait
push
rcrb
pop
mov
mov
mov
sahf
sub
xchg
and
push
and
ret
lret
push
das
sub
sbb
sbb
lret
aaa
cmpsb
dec
sub
aaa
mov
add
jecxz
sahf
int
or
out
int
mov
pop
mov
and
mov
mov
mov
mov
xor
shrl
scas
call
stos
bound
in
lods
add
in
and
and
aas
adc
stc
add
data16
xchg
inc
mov
shll
stos
xchg
inc
icebp
addl
cwtl
outsl
lahf
repnz
jmp
mov
push
nop
xchg
adc
outsl
xlat
sbb
arpl
aad
push
sbb
add
lods
cmpsb
mov
jge
jns
sub
mov
jle
std
clc
jecxz
pop
mov
add
enter
xor
rol
add
dec
pop
mov
push
outsb
cmc
adcb
je
in
aad
mov
test
test
jae
inc
mov
mov
roll
xor
inc
pushf
xor
mov
jge
cwtl
outsl
dec
sbb
movsl
in
jo
mov
cmpsl
scas
es
mulb
pop
outsb
outsb
or
inc
aas
mov
jmp
lds
roll
adc
popa
inc
std
arpl
subb
ljmp
int
rclb
nop
mov
inc
fwait
jne
inc
adc
dec
popa
jecxz
push
mov
push
sub
fcoml
mov
push
jne
lahf
cmp
xor
dec
mov
pop
add
pop
mov
sub
mov
add
dec
in
les
xchg
or
jmp
cli
pop
jp
leave
jge
aaa
pop
pusha
sbb
push
push
jbe
test
cmp
inc
sbb
out
lahf
fistps
aaa
nop
stos
outsb
mov
push
lods
fs
divl
jns
xchg
pop
cmp
movsb
pop
aad
pushf
or
push
imul
loope
pop
lds
push
stc
cmp
rcll
ss
add
add
mov
adc
aad
push
cs
fcmovnu
adc
in
in
mul
sbb
xchg
lcall
es
add
pop
jns
xchg
ds
ljmp
nop
outsl
cmp
imul
in
xlat
sahf
rcll
nop
imul
mov
sub
fcomps
ss
jmp
es
adc
int3
imul
jno
sub
pop
inc
daa
sbb
lock
les
lods
nop
cs
fdiv
mov
pop
jge
pop
xor
jbe
pusha
pusha
addl
dec
mov
mov
xchg
or
or
pop
pop
inc
mov
adc
int
push
cmp
das
scas
stos
xor
fnstsw
enter
into
clc
dec
mov
jns
or
add
jle
mov
lahf
lcall
loopne
lret
dec
sub
das
mov
xchg
sub
ja
movsl
jl
or
repnz
jge
inc
mov
jae
cwtl
jge
inc
dec
jmp
sbb
out
inc
pop
fxch
pop
mov
and
inc
loopne
or
stc
sub
cs
or
es
push
add
nop
enter
xchg
sbb
cmpsb
xchg
movsl
inc
inc
mov
jecxz
sub
add
daa
pushf
pop
out
add
xchg
add
ss
cmp
inc
mov
int3
inc
in
pusha
cmp
xchg
hlt
or
mov
xor
xchg
sbb
fcoms
cli
sub
push
and
daa
xchg
mov
xchg
repnz
jmp
add
pop
inc
mov
lret
movsl
mov
fdivrl
in
loope
iret
addr16
or
jge
mov
addr16
mov
pop
enter
mov
pop
cmpb
mov
sub
jo
sub
sarb
jp
dec
mov
aas
mov
bound
push
cmc
pop
dec
mulb
dec
sub
mov
pop
aam
mov
cmpsl
push
cmp
in
dec
add
test
push
pusha
mov
imul
fldenv
xchg
in
lahf
subb
or
or
cmp
call
sub
call
das
xchg
cld
sahf
sbb
xchg
mov
ljmp
js
pop
mov
fucomi
rcrb
pop
pop
inc
test
mov
sti
repz
je
aas
mov
cld
push
jmp
xor
mov
lcall
mov
cmp
adc
cmp
jae
call
imulb
js
fisubs
push
lret
out
mov
daa
jno
xor
mov
and
shr
stos
dec
and
jle
mov
jae
sti
je
mov
test
cli
pop
arpl
xor
dec
push
fs
xchg
js
mov
icebp
xchg
xor
call
mov
nop
xor
xchg
adc
jge
adc
mov
in
out
mov
xlat
dec
aaa
adc
cmp
mov
in
xor
inc
xchg
outsl
cli
flds
pop
scas
adc
mov
pop
mov
cmp
fcomp
mov
xlat
stc
std
aam
sbb
ja
inc
cmp
jecxz
mov
stc
loopne
cmovp
cmpsl
int3
xchg
scas
iret
dec
ret
sbb
mov
cwtl
mov
adc
add
sti
mov
ss
int
pop
mov
faddl
adc
adc
scas
lods
cmp
and
jmp
sub
lahf
xchg
mov
es
adc
add
sbb
mov
adc
xchg
xor
jns
inc
inc
or
jl
mull
shl
stc
push
cmp
mov
jmp
mov
xchg
scas
adc
mov
jp
and
mov
adc
mov
mov
push
cmp
out
xor
mov
fldcw
sti
arpl
rcrb
fisubrl
aaa
and
xchg
je
addr16
mov
pop
fsts
arpl
add
pop
jmp
mov
add
mov
pop
sbb
pop
ds
lret
cmp
sub
sub
sub
mov
xchg
and
mov
nop
cmpl
push
outsl
pop
mov
push
push
push
mov
dec
test
addl
stc
jno
fisttpll
sbb
hlt
data16
sub
and
jmp
ret
adc
insb
out
cmp
sbb
push
fs
sbb
int
push
add
lretw
mov
adc
inc
repnz
push
lret
sbb
xchg
inc
push
pushf
mov
popa
adc
add
push
mov
or
or
imul
jns
inc
and
push
mov
add
repz
dec
xchg
mov
add
adc
mov
fcompl
add
fistpll
shr
add
and
nop
and
mov
or
mov
push
out
jnp
cmpsb
adc
movsb
cs
mov
gs
das
jmp
pusha
cmpsb
outsl
pop
adc
jl
push
cmp
fldt
jmp
in
movb
loope
clc
int
popa
js
xor
push
testb
iret
repz
pop
jne
inc
mov
push
pop
add
lar
rol
xor
imul
fisttpl
adc
pop
inc
aad
lods
sub
shrl
pop
cld
or
mov
mov
cmpl
stos
jp
stos
imul
and
adc
pop
popa
aas
test
adc
fs
negl
jp
out
ja
pusha
rorb
imul
fcoms
jp,pt
sbb
lods
cmp
nop
loopne
cmpsb
and
repz
mov
lods
sti
in
pop
dec
sub
mov
mov
test
cltd
rcl
je
loopne
jg
in
push
popaw
pop
lock
dec
mov
or
jae
fstsw
mov
sti
cmpsl
cmp
add
mov
pop
cmp
pusha
negl
fisubrs
xor
xchg
leave
or
mov
push
cmp
repz
andb
shrb
sbb
jecxz
clc
xor
sbb
pushf
bound
andb
insb
lods
inc
ja
or
in
scas
imul
push
fwait
rcrl
cmp
mov
lods
mov
roll
stos
dec
sbb
test
dec
aad
pop
add
dec
jne
adc
fisttpl
adc
shll
jb
sti
or
and
pop
push
cmc
mov
dec
pusha
orl
fnsave
clc
dec
xchg
mov
rcl
push
and
outsl
sbbb
mov
push
arpl
ficoms
push
push
imul
in
add
hlt
hlt
mov
fisttpll
sbb
aam
adc
leave
mov
push
pcmpeqw
push
data16
in
jb
jle
jge
in
flds
das
xchg
lahf
stc
add
pop
dec
aas
jbe
popa
je
push
fmuls
mov
shlb
sbb
mov
fnsave
testb
stos
lahf
pushf
rolb
dec
and
cli
ljmp
lea
ljmp
lock
adc
nop
sub
incl
cltd
push
jge
sar
or
inc
sbb
sbb
sbb
dec
adc
ret
dec
xor
insl
inc
and
pop
fcmove
out
in
lods
fstp
fdivrs
out
sub
sbb
imul
scas
or
iret
hlt
je
xchg
cmp
pop
mov
into
mov
daa
out
test
imul
sbbl
addr16
sbb
movsl
and
loope
jge
cmpsb
insl
sub
cld
testl
mov
aas
out
pop
lock
dec
mov
fcomi
pop
js
rcrb
repz
in
jle
pusha
mov
push
je
dec
adc
push
xchg
mov
jle
imulb
shr
mov
xchg
pop
mov
push
dec
pop
mov
jnp
jge
stos
rcrb
rcrb
and
xlat
sbb
adc
dec
xor
iret
dec
mov
lret
lret
insb
sub
and
lods
xlat
cmpsl
fxch
add
dec
cmp
lret
jle
pop
lods
mov
scas
lcall
sbb
cmp
mov
push
sub
imul
lahf
mov
add
jae
ljmp
dec
xchg
mov
add
mov
or
and
sbb
sbb
push
and
cld
mov
xor
adc
mov
int3
jae
imul
mov
inc
dec
xor
addr16
pop
mov
es
jge
jecxz
cwtl
adc
mov
xchg
jl
pop
pop
push
lahf
fcomp
ficoms
fs
xchg
and
arpl
xor
push
xor
and
adc
lahf
cld
cmp
mov
push
cmp
scas
xchg
mov
sub
cltd
pop
test
mov
gs
cmp
push
xchg
push
out
loope
jge
ljmp
ret
jmp
dec
lock
mov
mov
out
pop
mov
xchg
mov
in
inc
jl
mov
push
pop
fwait
int
push
movsb
ss
dec
pop
inc
ljmp
pop
cmpsb
sbb
sbb
pop
xchg
jmp
daa
hlt
cld
or
mov
movsl
xor
mov
adc
test
out
mov
add
lcall
fisubrs
sub
in
popf
stos
or
gs
je
xchg
ds
outsb
sbb
sti
mov
stos
push
or
jge
mov
int
and
mov
sbb
cmc
pop
mov
movsl
add
call
out
jle
push
pusha
xchg
push
inc
cmp
in
push
enter
movsl
cltd
arpl
jne
lcall
and
push
je
xchg
mov
add
test
test
adc
stos
push
mov
mov
xchg
sbb
pop
push
imul
sub
and
sbb
push
stos
emms
adc
negl
repz
test
dec
mov
in
and
mov
hlt
sub
pop
jne
rolb
aas
lods
mov
push
push
dec
dec
inc
inc
sbbl
inc
pop
stos
out
das
jns
and
xlat
push
xor
outsb
aam
pop
dec
aas
subps
into
movsb
push
mov
popa
inc
sarl
movsl
lods
hlt
cmp
movsb
sbb
test
sti
cwtl
pop
leave
pop
jo
jg
js
loope
xor
rorl
inc
xchg
dec
lods
cmpl
and
xchg
pop
repz
sub
enter
push
clc
or
dec
frstor
lea
out
cmp
jl
adc
cld
add
in
das
push
push
lgs
pusha
test
shlb
inc
jbe
lods
enter
inc
cmp
pop
lea
aaa
or
add
add
pop
pushf
xor
aaa
xor
jnp
cmp
mov
jl
adc
xchg
das
popa
lret
and
xlat
arpl
insb
xchg
lods
dec
push
mov
inc
pop
leave
xor
sbb
insl
mov
dec
mov
xchg
mov
cli
sub
fsubrl
xchg
sbb
and
cmpl
add
xchg
pop
inc
pop
dec
dec
mov
and
or
push
int
push
and
jb
and
lret
cmpsb
jg
mov
lods
sub
mov
in
js
mov
insb
test
cmp
sbb
xor
in
popa
adc
cmpsb
ljmp
in
dec
xor
insb
fldt
add
mov
aas
mov
add
sbb
mov
movsl
cmpsb
mov
dec
mov
sahf
rcrb
jno
jg
adc
aaa
mov
sbb
inc
in
pop
adc
pusha
out
pop
cmp
cli
pushf
add
or
in
fwait
and
unpcklps
adc
rcrl
enter
incl
and
test
lret
aad
sbb
popf
jp
adc
hlt
into
mov
jb
rclb
lds
dec
and
movsl
xor
jmp
jnp
icebp
sbb
xchg
add
mov
insb
in
or
in
sbb
mov
xchg
xor
popf
lcall
pop
stos
call
imul
add
cmpsb
ds
sub
lcall
test
lods
rol
or
cmc
in
fnstcw
in
xor
inc
and
popf
hlt
xchg
ret
or
test
call
mov
paddsb
ss
add
xor
xchg
cmp
mov
adc
xor
clc
or
shll
into
mov
ds
into
imul
aam
jne
cmp
mov
pushf
add
aas
inc
xor
cli
ret
scas
in
lcall
es
in
cmp
ja
lahf
test
mov
push
inc
pop
sti
xchg
ficoml
cmpsb
leave
in
cmp
sbb
and
cwtl
in
lock
xorl
or
cmp
repnz
push
and
xor
mov
push
jae
cmp
jae
mov
cmpsb
mov
pop
movsl
mov
mov
sbb
sbb
sub
sbbb
push
xchg
pop
jno
pop
fcoml
or
dec
xchg
adc
mov
out
dec
add
iret
mov
sub
rcrb
xchg
das
repnz
add
mov
ja
mov
negb
mov
test
xchg
or
sbbl
shlb
push
int
ljmp
xor
sti
xor
inc
test
sbb
adc
pushf
mov
rolb
mov
push
add
xchg
mov
mov
ljmp
enter
movsb
pop
adc
les
out
popf
in
sub
loope
mov
je
imul
rcll
cmp
test
cmpb
pop
push
negb
int
pop
cmp
ja
jns
mov
loope
stc
sub
std
pop
mov
push
dec
cs
mov
sub
cmp
test
cmpsb
xor
add
outsb
xchg
aaa
jg
sub
jl
loopne
push
ret
loop
pop
mov
adcb
add
push
div
in
enter
mov
fnstenv
out
nop
jl
andl
cwtl
dec
cmpl
adc
addr16
lods
testb
ud1
popf
in
loope
rcrl
dec
scas
fcomi
jb
xlat
mov
or
xchg
aam
sbb
add
in
xchg
cmp
ja
xor
fistpll
imul
sub
mov
test
loopne
sub
push
repz
js
test
or
bound
mov
add
ja
mov
sbb
sbb
call
nop
sbb
xchg
pushl
popa
push
cmc
sub
push
pop
idivl
imul
sub
gs
cmp
sbb
sar
mov
dec
test
rorb
pop
adc
leave
push
in
or
mov
xchg
cmp
scas
inc
xchg
in
dec
stos
sbb
and
test
gs
pop
push
add
xor
arpl
fildll
loopnew
pop
ficoml
cmp
push
inc
pop
mov
stos
mov
mov
es
adc
xchg
aam
jno
push
pop
lea
adc
lret
dec
outsl
jl
mov
pop
add
jne
pop
xchg
adc
nop
lock
ljmp
add
sti
jnp
mov
push
jno
nop
cmp
call
sbb
dec
std
lods
lods
adc
adc
pop
sbb
mov
jns
popf
or
jmp
push
ljmp
jle
xlat
mov
int3
test
adc
sub
aaa
fistpl
in
inc
stc
push
jle
in
insl
pop
orb
ljmp
fistpll
pusha
push
xchg
aam
iret
mov
js
xlat
fistpl
fcomps
mov
push
mov
mov
test
lods
adc
movsl
vmovhps
cltd
lods
jp
mov
jbe
push
sbb
jb
pop
mov
mov
inc
repz
incl
cwtl
lods
lahf
mov
in
popf
mov
jmp
mov
in
push
mov
push
cmp
fsubp
into
shll
xchg
push
fsubp
cwtl
dec
insl
mov
sbb
jp,pn
inc
jg
jmp
push
xor
daa
fcmovu
sti
inc
decl
pop
xorb
mov
lcall
jle
popf
mov
ja
repnz
sbb
sahf
xor
or
push
adc
mov
stos
mov
andb
pop
or
xchg
pop
or
or
and
mov
or
out
jne
subl
sbb
stos
mov
lods
sbb
mov
cltd
push
int3
sub
xor
loope
ss
pop
add
add
jnp
and
ret
xchg
add
inc
inc
jo
addb
shll
jge
sti
rorl
stos
add
mov
test
negb
add
pusha
repz
bnd
out
cli
cwtl
xorl
decl
lods
sti
dec
rolb
rolb
jb
inc
push
sub
inc
cmpsl
cs
pusha
popl
movsb
movsb
fistps
out
push
inc
inc
out
xlat
notl
xchg
js
xchg
dec
hlt
inc
push
adc
push
xor
mov
lock
into
add
inc
mov
cltd
pop
push
clc
xchg
movl
pop
movsl
add
jl
lods
cmp
adc
fstpl
ret
sub
fcmovnu
cwtl
cld
cmp
sarl
mov
push
pop
pop
cmpsb
jne
add
xchg
mov
and
lea
jb
aam
mov
enter
pop
int3
jl
aaa
or
mov
dec
lds
add
and
pop
lods
inc
xor
daa
adc
je
xchg
dec
iret
pop
jle
jns
xchg
sub
xchg
sub
xchg
js
mov
cmp
pop
outsl
xor
inc
mov
popf
adc
in
mov
sti
mov
clc
in
sub
mov
mov
push
sbb
cmpsb
sbb
gs
mov
test
add
scas
mov
pop
fs
dec
ror
pop
bswap
rcrl
jno
paddusw
aad
dec
jb
cmp
xlat
or
cltd
addr16
in
xchg
mov
iret
ds
mov
pop
pop
or
cmp
loop
inc
cltd
js
out
dec
add
daa
mov
jmp
add
xor
repz
xchg
jge
mov
jmp
daa
and
loopne
fildll
repnz
cltd
jl
xor
dec
movsl
test
fsts
ret
aaa
add
das
jb
pop
mov
mov
rorl
cmp
shr
outsb
jg
cmp
mov
xchg
leave
pop
jb
lahf
pop
lret
loop
lcall
push
shll
lcall
fbstp
mov
xchg
push
dec
xchg
cmpsb
pushf
cmp
mov
cmpsl
dec
mov
inc
xchg
jmp
pusha
adc
pop
dec
lods
roll
pop
jb
cmp
sbb
inc
sahf
stos
cmpsl
fucomi
arpl
leave
sub
pushf
into
push
ror
sbb
cs
mov
frstor
leave
loopw
inc
and
ret
in
aas
sbb
dec
jae
addr16
sub
mov
in
mov
mov
mov
out
mov
cmp
repnz
push
cmp
mov
testb
jb
aam
cmp
mov
sbb
jbe
fsub
cmp
cld
dec
aaa
mov
fwait
lods
or
cli
fimuls
rol
dec
ds
adc
xchg
js
out
cmp
and
in
pop
ss
cs
fcmovu
idiv
jg
mov
sahf
movl
shll
fimuls
bound
inc
push
popf
xchg
movsl
inc
incb
fs
fmulp
shl
push
scas
adc
inc
lea
and
lods
pop
pop
stos
pop
sub
mov
mov
xchg
xchg
rcll
call
mov
sbb
popf
push
jae
ljmp
js
and
adc
cli
andl
mov
jo
cmp
bound
in
test
nop
push
sbb
mov
addb
jle
cmc
sbb
test
jnp
xor
test
in
jne
cmp
adc
xchg
fadd
sub
icebp
jne
les
dec
add
inc
fcomp
ds
mov
enter
mov
int
cli
mov
mov
jae
jmp
loope
cmp
push
aas
into
in
adc
xchg
xchg
outsl
insl
cmp
cmp
shlb
sbb
sbb
add
xchg
push
lds
lcall
pushf
stc
std
or
adc
idivl
ds
scas
mov
fucom
adc
les
fcmovbe
mov
cwtl
pop
pop
add
mov
hlt
out
xchg
mov
enter
jae
dec
mov
or
mov
xor
lcall
cmc
adc
inc
xlat
cmp
xlat
leave
mov
mov
loop
adc
movsb
lcall
aaa
xchg
fnstsw
xchg
xor
jmp
push
sbb
lods
mov
sub
push
arpl
jl
int
lea
jle
mov
mov
or
cmpb
push
popf
sbb
cmp
stos
clc
stos
pusha
test
movsb
mov
lods
sahf
cmp
push
icebp
add
fstl
iret
jno
mov
popf
mov
mov
notb
fwait
mov
mov
adc
add
enter
lcall
mov
cmp
imul
lea
add
mov
mov
jg
daa
popf
dec
or
push
xor
xchg
mov
dec
adc
ficomps
inc
cmc
leave
push
fwait
sarb
xchg
fdivrs
ljmp
and
pop
push
mov
jge
cmp
push
pushf
sbb
or
pushf
fmuls
loopne
or
cmp
lret
add
mov
and
insl
xor
lret
pop
and
daa
xorb
xorps
mov
bt
lret
loopne
xor
sbb
fmull
std
xor
sub
mov
dec
push
hlt
fistpll
adc
and
dec
adc
pop
movsb
dec
xchg
cltd
push
aam
mov
push
inc
adc
data16
addl
rcr
xchg
cmp
or
dec
aaa
aam
sub
jb
mov
cwtl
inc
push
dec
fadd
xor
pop
out
pop
int
dec
scas
add
jno
pop
clc
mov
insl
pop
push
ss
leave
cwtl
fidivrs
and
push
loope
push
lea
cli
mov
jnp
cmp
cli
push
adc
leave
cmpsb
ljmp
jmp
stos
jl
dec
sbbl
in
pusha
outsl
nop
push
and
lock
sub
xor
mov
mov
sbb
scas
pop
cmp
pop
fwait
rcr
or
das
mov
outsb
jo
mulb
cli
or
adcl
push
add
xor
cltd
xor
inc
mov
lret
pop
fidivrs
push
lock
lock
cmp
mov
inc
dec
popa
ret
sub
repz
sbb
add
mov
xor
loop
std
and
test
sbbb
push
test
movsb
mov
or
sbb
sub
pop
sbb
sarb
pop
jns
test
loopne
nop
lcall
scas
popf
cmpsb
in
das
sub
stc
testb
add
xchg
lahf
adc
repnz
xor
loope
mov
inc
lar
xor
out
jg
and
mov
sub
aas
push
xor
push
sbb
and
mov
inc
stos
xchg
push
mov
ret
push
inc
mov
std
or
testb
and
push
sti
mov
pushf
daa
xchg
cwtl
je
jns
dec
pop
stc
jp
fsubrl
aad
adc
gs
movsl
cmp
xor
pop
mov
mov
mov
js
iret
xor
outsb
sub
mov
stc
xchg
pop
lcall
pop
mov
inc
mull
loopne
pop
push
mov
xlat
xor
in
pushf
xchg
xchg
sbb
jecxz
sub
xchg
lret
enter
push
or
cmp
mov
jle
mov
fidivl
addr16
mov
xchg
xchg
xchg
or
and
cmp
or
xor
cwtl
mov
lds
test
dec
jns
fwait
push
pop
fnstenv
dec
inc
jno
lods
add
scas
jno
fcom
imul
sbb
dec
fistl
fldcw
cwtl
push
orl
roll
xchg
lcall
mov
sti
pop
adc
divl
std
fnstenv
inc
movsl
push
mov
xchg
add
out
lods
jbe
jl
iret
out
ret
fildll
repz
ficoml
cmpsl
daa
mov
jmp
xchg
jo
outsl
int3
inc
push
xchg
into
fs
dec
mov
int
je
test
mov
jle
dec
mov
lea
xchg
jno
xchg
cmp
xor
repnz
pop
fs
aas
stos
inc
sarl
mov
setae
fidivs
add
ret
lret
dec
popa
inc
pop
flds
dec
shlb
movq
mov
hlt
test
mov
pushf
sar
inc
fdivp
push
lds
loope
mov
hlt
sub
rorb
push
xchg
jp
mov
cmp
ror
ss
leave
mov
xchg
dec
clc
cld
mov
xchg
lret
lahf
inc
fldz
dec
mov
pop
add
das
add
push
dec
xlat
enter
mov
sbb
fidivs
in
stc
xchg
sar
mov
in
inc
and
clc
imul
or
dec
push
inc
out
in
inc
ficoml
cmpsb
fstl
sbb
inc
adc
add
sub
imul
xor
sar
rcrl
cmp
xchg
in
es
daa
lods
repz
mov
adc
xchg
push
push
inc
shlb
or
enter
ljmp
mov
push
mov
sti
lcall
xor
ja
mov
inc
sub
in
adcb
bound
popa
xchg
adc
sti
mov
pop
sub
std
insb
inc
stos
xchg
mov
rol
popf
dec
movsl
sub
int
gs
rorl
loope
xor
jmp
lods
add
es
dec
add
pop
mov
lret
bound
scas
mul
inc
inc
xor
add
pop
sub
jge
sub
clc
or
inc
movsb
inc
mulb
movsb
jp
mov
mov
test
sbb
arpl
mov
ds
jno
and
loopne
pop
out
divb
popa
scas
ss
mov
test
jp
pop
adc
stos
sti
cmpsl
xor
mov
inc
inc
mov
lcall
enter
xor
xor
dec
out
xchg
je
pushl
push
cmp
idiv
mov
jle
loop
xor
ret
or
xor
mov
in
fisubrs
inc
call
cli
test
xchg
add
mov
pusha
negb
stc
stos
push
mov
cwtl
push
mov
or
mov
repnz
seta
push
shll
mov
sub
iret
js
dec
ja
jo
cld
push
sub
lods
mov
dec
adc
call
int3
sbb
adc
test
mov
cmc
iret
xor
shrb
inc
hlt
ret
or
mov
pop
or
dec
leave
sbb
cmpsl
lret
push
cld
adc
mov
add
cmp
scas
aam
pop
stos
adc
jl
enter
inc
inc
addl
mov
xchg
test
inc
xor
xchg
xor
and
mov
lahf
icebp
mov
push
clc
inc
shll
dec
pop
jmp
sti
shr
jg
mov
sahf
or
lock
and
leave
imul
enter
push
xor
fwait
inc
jo
cmc
loopne
push
popf
inc
and
sub
xchg
xchg
fsubrp
fcmovu
fnsave
cmp
mov
mov
and
adc
jae
lahf
sub
call
pop
addr16
stos
push
in
ljmp
fwait
or
adc
inc
add
lods
mov
test
into
das
cwtl
pop
and
shr
insl
jmp
ret
mov
sbb
pop
sahf
xchg
push
ret
outsl
or
sahf
sbb
jb
data16
pop
loopne
sub
iret
jg
mov
xchg
std
dec
jmp
int
lods
pushf
xchg
cmp
adc
and
js
adc
in
rolb
mov
fldcw
xchg
xchg
sarl
into
cmc
or
mov
push
xor
pop
mov
add
fsubrs
sbb
sbb
fistpll
adc
hlt
popf
cmpsb
or
sub
xchg
jno
cmc
enter
movsb
mov
adc
pop
movsl
mov
xchg
sbb
cltd
call
push
loop
jecxz,pn
testb
push
out
dec
xchg
pminsw
dec
add
add
aaa
and
xor
push
mov
addb
bound
inc
sub
out
xchg
out
jecxz
lods
dec
filds
lods
mov
fcoml
ja
lods
fisubrs
cmpsb
daa
inc
dec
cmp
stos
ror
xchg
mov
xor
sub
and
cs
popa
rcrl
shlb
cmpsl
cltd
xor
xor
leave
cmpsl
int
pop
arpl
push
dec
stc
mov
inc
repnz
cmpsb
lods
pop
adc
sahf
pushf
mov
pop
and
pop
daa
mov
xchg
pusha
ficoms
addr16
je
xchg
mov
adc
inc
daa
adc
sbb
xchg
insl
nop
pop
xchg
pop
add
das
cmp
hlt
jns
jp
pop
inc
stos
mov
jecxz
adc
cmp
mov
lret
or
enter
push
pop
jmp
mov
or
repz
filds
cwtl
fwait
mov
fwait
pushl
adc
mov
sub
mov
scas
dec
jmp
dec
rcrl
cwtl
daa
inc
loope
mov
jb
mov
mov
lock
and
inc
xor
fs
clc
lods
mov
xlat
xchg
dec
inc
pop
inc
pop
push
mov
ljmp
or
mov
mov
fiadds
xor
xor
call
into
cmpsl
inc
sub
pop
test
push
std
adc
ret
loope
mov
fwait
adc
fs
cld
push
cmp
push
sub
jge
insb
or
adc
and
mov
movsl
in
imull
ss
je
sbb
and
mov
lock
loopne
insl
popa
mov
ds
add
scas
mov
nop
data16
test
jmp
xchg
in
sbb
or
dec
test
push
mov
in
cmp
data16
pop
test
xchg
xchg
rolb
mov
dec
sub
mov
mov
mov
mov
dec
push
xor
pop
pushf
add
es
fsubrs
imul
dec
dec
mov
or
xchg
lahf
pop
pop
dec
imul
ds
dec
mov
rcll
inc
inc
mov
xchg
fs
pop
mov
arpl
mov
jp
xor
sbb
cwtl
add
js
xor
call
aam
mov
pop
sbbl
popf
sbb
movsl
mov
pop
das
dec
cmpsl
scas
leave
dec
inc
lcall
scas
add
cmp
adc
aas
cmpsb
mov
cmp
aaa
jno
jns
std
mov
cwtd
fisubrs
subl
mov
and
sub
repz
pop
je
test
cli
fdiv
mov
dec
mov
out
jmp
push
pop
mov
gs
or
lahf
dec
arpl
je
jmp
out
dec
enter
mov
jecxz
jge
lret
lahf
mov
cwtl
jb
hlt
clc
fstpt
sub
fstl
push
add
notb
inc
rcr
push
cmpsl
bound
pop
notrack
icebp
jmp
orb
jne
adc
lret
sar
cwtl
mov
adc
repnz
adc
aad
mov
inc
add
ret
test
and
cbtw
and
sub
data16
and
cmp
cli
sbb
pop
repnz
xor
cmp
push
sbb
addl
jecxz
loop,pn
sar
mov
inc
idivb
out
jg
dec
movsl
shl
mov
imul
or
ret
mov
push
adc
jmp
xor
out
movsb
jle
dec
data16
add
bound
test
xor
mov
cmp
jo
sub
mov
out
sub
dec
sbb
push
ds
fucomip
inc
sbb
lods
sahf
or
inc
xor
std
call
pusha
adc
or
xor
mov
sti
imul
mov
and
pop
add
xlat
cmp
pushf
dec
inc
stos
lret
testl
xor
jae
inc
data16
cvtps2pd
jne
add
fwait
adc
cltd
in
adcb
inc
fmul
sti
add
pusha
cmpsl
and
fistl
sub
cs
dec
movsl
pop
jb
in
xorb
cli
cmp
or
dec
dec
pop
push
push
test
mov
cmc
bound
loope
adc
fbld
out
dec
mov
jmp
mov
mov
movl
inc
pop
pop
push
rol
repz
mov
sti
jno
cmp
mov
sbb
shlb
inc
insb
ja
mov
in
push
xor
aam
xchg
and
mov
aam
cmc
push
std
test
add
mov
int
lock
pushf
test
inc
rorb
mov
push
imul
lods
sbb
jno
stos
cmp
imul
andl
int
xor
mov
fldenv
dec
mov
add
aam
cmp
jo
mov
loopne
pop
xchg
mov
inc
pop
and
add
dec
testb
sbb
xor
sbb
inc
lea
pushf
es
outsl
jecxz
adc
ret
ss
pop
sub
iret
mov
dec
add
push
xchg
push
dec
insb
xchg
mulb
push
lea
sbb
es
ret
xchg
mov
out
fmull
add
push
int
test
pop
pop
cmpsb
cli
lock
jecxz
fidivs
add
lcall
mov
sub
sub
xor
pop
test
sub
arpl
or
xacquire
dec
xchg
sub
popa
int3
sub
testl
testb
inc
pushf
idivb
fmuls
hlt
cmp
mov
inc
cvtdq2ps
and
cs
fdivl
adc
pop
inc
add
ds
in
arpl
js
cmp
lahf
aaa
int3
cmpsl
fldcw
xchg
dec
lahf
cmp
mov
dec
inc
out
pop
sbb
cmp
pop
push
xor
mov
or
popa
sub
pop
call
inc
loope
stos
in
adc
push
mov
mov
and
pop
int3
or
cld
aam
ds
push
add
mov
mov
add
mov
jne
sub
cmc
lahf
cmp
jnp
jo
pop
add
xor
dec
loope
mov
in
shr
fisttps
fstpl
xchg
in
inc
adc
lods
xor
mov
or
mov
mov
push
and
imul
add
mov
mov
fldl2e
dec
nop
push
data16
add
mov
ret
sbb
push
jno
cmp
daa
outsb
add
cmp
or
test
add
dec
push
xor
sarb
loope,pn
ret
adc
scas
in
mov
stos
push
rcrb
movsl
mov
dec
push
int3
and
pop
cwtl
adc
and
in
cmp
shr
loopne
mov
push
mov
lret
jecxz
imul
sub
fimull
pop
add
sub
fisubrl
rcl
shrd
test
xor
neg
test
scas
inc
dec
pop
jge
sub
mov
sub
jg
cmp
pop
xorb
loope
notb
aas
addr16
jnp
inc
pop
aam
stc
psubw
jmp
in
mov
xor
outsl
js
pop
out
adc
int3
pop
roll
mov
into
loope
cmp
push
lock
pop
js
ret
popl
pop
insl
insb
rclb
in
or
add
mov
jmp
and
sbb
xchg
sbb
or
add
scas
ja
das
adc
out
inc
fiadds
dec
and
ret
arpl
pop
iret
pop
jne
ljmp
cmp
sbb
dec
cli
xor
lea
out
or
sarl
mov
out
roll
movsb
mov
and
and
mov
dec
mov
push
xor
fnstsw
xor
lret
pop
jne
imull
mov
adc
push
rcll
aas
pop
jbe
ficompl
daa
into
push
out
test
mov
add
dec
push
enter
pop
jmp
push
je
lock
test
mov
outsl
sahf
push
addr16
mov
jns
and
xlat
loope
stos
push
in
je
mov
out
fisubs
scas
inc
in
int
xchg
inc
xchg
adc
sub
daa
mov
sub
xchg
push
mov
cli
fistpll
xchg
cli
xchg
ret
leave
mov
das
dec
cs
leave
in
adc
jl
mov
js
mov
sysenter
dec
es
lahf
cmpsl
push
cmp
or
mov
nop
js
aad
out
lea
and
adc
es
adc
dec
pop
pop
add
out
fisttps
mov
mov
pusha
int
push
inc
xor
and
fs
sub
repz
test
je
adc
push
xor
loop
push
xchg
add
add
lcall
loopne
mov
in
mov
in
and
jnp
test
jle
lds
inc
shll
xchg
movsl
std
mov
test
jnp
sub
popf
mov
xor
pusha
insb
les
xchg
adc
jecxz
adc
dec
movsl
cmp
mov
jmp
mov
cli
shll
inc
icebp
decl
lds
into
jno
sub
xchg
pushf
xchg
lcall
cmp
stc
jno
push
int
inc
pop
stos
mov
ret
jnp
mov
imul
cli
das
scas
add
sub
cmp
cld
inc
push
cmp
pop
cmp
mov
orb
outsl
js
jecxz
add
jnp
icebp
mov
sbb
xor
mov
popa
or
pop
inc
das
int
lock
fisttpl
cwtl
push
or
mov
inc
sbb
les
aas
mov
aaa
stc
adc
push
cli
sbb
inc
sub
notb
fildll
push
xchg
push
daa
test
hlt
pop
jne
test
cld
ja
loopne
enter
pusha
pop
int3
popa
lahf
shlb
pop
add
les
rcrb
mov
xchg
cmpb
jmp
subl
call
jbe
mov
mov
push
push
xor
sahf
jo
leave
nop
popf
ja
jno
adc
aad
sbb
and
shll
rcll
pop
outsl
mov
sbb
sub
js
iret
pop
les
jle
or
cli
outsl
js
faddl
testb
jno
aaa
sbb
mov
xlat
pushf
loope
ljmp
roll
mov
xchg
out
icebp
ficoms
nop
in
jge
lcall
and
fucomip
add
daa
ficomps
js
mulb
mov
call
fwait
je
xor
xor
sub
les
insb
mov
idivb
jl
jmp
cmc
rclb
and
enter
mov
sbb
mov
dec
inc
pop
or
idivb
add
mov
fdivr
stc
sbb
aad
or
cmp
jnp
xchg
jnp
notl
cmp
mov
out
add
inc
adc
mul
pop
dec
jle
mov
test
psrad
ret
push
fisttpl
addb
mov
daa
and
mov
lret
cli
insb
push
mov
cmp
push
and
mov
xlat
mov
ja
pushf
mov
mov
push
in
fs
xchg
mov
sub
fdivrl
bswap
xor
shlb
mov
cli
stos
sub
mov
dec
cld
mov
popf
mov
mov
mov
in
sar
or
aam
loop
inc
popf
dec
push
jmp
mov
in
sub
jb
and
pop
lea
or
ja
imul
lds
push
sar
sub
shrl
leave
sbb
cwtl
aam
or
mov
mov
ljmp
arpl
sar
jne
iret
inc
push
aam
cmp
jg
sub
or
jmp
insl
sti
lahf
push
lahf
sub
or
jecxz
dec
xchg
loope
push
xor
xchg
iret
ds
inc
pop
fsin
lret
sahf
ss
scas
fsubs
cmp
ret
fisttps
sub
push
jne
jmp
fisttpll
test
push
loope
movsb
push
in
int
lret
add
clc
pop
mov
add
xor
sbb
jae
in
dec
daa
jl
jge
mov
stos
adc
mov
pop
push
cmpsb
aam
xchg
pop
shrl
rcrb
inc
jne
cld
push
insl
pop
je
and
mov
jl
cmp
rclb
dec
mov
stos
and
insl
fstp
dec
aam
pop
mov
dec
add
or
mov
insl
rcrb
addr16
dec
pusha
enter
sarb
and
rcrl
cltd
xor
lods
mov
aas
fisubs
add
pop
jne
rorb
jg
mov
pop
lods
mov
xor
lods
xchg
sub
lods
pop
cld
cwtl
repnz
lahf
adc
shl
adc
cmp
out
xor
dec
adc
push
add
push
pop
and
stos
dec
fs
mov
clc
cltd
mov
cmp
mov
mov
out
stos
fwait
mov
add
and
std
loop
dec
mov
stc
pop
imul
out
and
inc
jo
sbb
mov
mov
bound
lods
push
add
rcrl
adc
sub
and
pop
loopne
cmpsb
mov
insl
cmp
add
add
jnp
movsb
mov
fnstenv
ret
ret
jg
add
sbb
sbb
jp
pop
mov
test
jg
js
fisubs
adc
sbb
jg
mov
aad
cmp
cmp
or
xor
jl
and
int3
mov
jle
sbb
sbb
repz
sbb
mov
adc
mov
xor
fldcw
in
test
lahf
add
inc
pop
cmpsl
mov
xor
lahf
leave
sbb
lcall
es
leave
add
sbb
ja
push
dec
add
sub
or
add
lahf
fwait
inc
dec
jl
mov
cs
jge
mov
dec
rcrl
adcb
dec
push
pop
mov
cmpsb
dec
js
pop
add
sahf
add
fidivl
push
jo
push
repnz
test
loop
or
add
movsb
lods
out
shll
js
fidivl
fsubl
lock
ret
adc
xchg
rcrl
movsb
xchg
or
push
call
idiv
daa
or
adc
stc
xchg
insl
ret
jle
xchg
mov
add
iret
and
sbb
popa
add
lahf
inc
mov
xor
xorl
je
das
iret
push
sub
scas
inc
rolb
mov
subl
data16
mov
fadd
leave
insl
dec
xchg
mov
sub
inc
xchg
test
test
pusha
pop
cmc
jl
orb
or
imul
cmp
jg
lds
test
add
addb
les
mov
jmp
in
mov
movsb
adc
std
jnp
mov
and
mov
mov
pushf
push
mov
shlb
sbb
in
and
dec
cmpsl
mov
insb
dec
add
xchg
mov
or
stos
push
addb
mov
xchg
cld
xor
dec
stc
shll
pop
cltd
lock
pop
mov
lahf
out
lods
push
cld
pop
fwait
out
jnp
pop
mov
fcompl
xchg
fdivs
cmpsl
insl
lods
negl
xchg
cmp
bound
subl
ret
clc
push
mov
dec
cli
fdivrs
and
dec
mov
les
mov
fucom
pop
xchg
mov
jmp
and
mov
pusha
nop
dec
nop
out
into
pop
hlt
mov
push
stos
pop
outsb
cltd
inc
mov
inc
xor
test
adc
imul
xchg
rorb
cmp
movsl
sub
jne,pt
sub
cli
cmp
test
inc
lds
pop
pop
add
mov
fdiv
cs
mov
xor
xchg
out
imul
inc
cmp
mov
int3
push
lcall
cltd
iret
pop
in
cmp
test
jp
loopne
mov
pop
cmp
mov
xor
fdivrs
adc
add
and
sub
repz
and
push
lods
xchg
xchg
aas
cli
mov
neg
loopne
inc
ljmp
das
jbe
ja
push
sbb
stos
movsl
in
mov
popf
mov
cmp
test
fwait
mov
test
xchg
add
cwtl
sub
cmp
sarl
mov
push
mov
xor
mov
cmp
push
sub
push
xor
stc
push
inc
add
mov
loopne
in
xor
xor
cs
or
flds
nop
repz
testl
mov
xchg
shll
and
test
cmp
dec
cmp
mov
push
cmp
xchg
nop
pop
loopne
scas
jmp
stos
sbb
or
jns
stos
add
mov
adc
fbstp
lods
lods
lahf
clc
sub
pop
jg
xchg
pop
push
jnp
ja
lods
pop
aad
movsb
jno
repz
aad
dec
sbb
fs
jne
lcall
addb
aas
pop
addr16
mov
adcl
cmc
rolb
into
arpl
dec
dec
cld
pusha
and
test
mov
movsb
aaa
ljmp
jl
jb
data16
jne
dec
lret
jmp
add
testb
or
jge
jmp
out
xor
fstl
cli
je
in
lea
inc
mov
mov
pop
cmp
push
or
or
sbb
test
push
repz
iret
xchg
mov
mov
pop
cmpl
enter
xchg
rcl
test
lods
mov
mov
or
push
repnz
call
push
mov
jb
mov
test
xor
imul
shl
xchg
popf
jne
test
clc
jle
jp
jecxz
lods
in
pop
pusha
lcall
addr16
xor
dec
jp
rcll
std
adc
lods
mov
cmp
pop
pop
pop
outsl
or
fs
xlat
cld
push
xchg
cmp
jp
inc
adc
iret
rolb
cltd
pop
and
mov
imul
or
xchg
addr16
imul
sahf
jae
std
stos
cwtl
push
xlat
push
inc
scas
or
mov
sbb
outsb
cmp
test
shll
stc
icebp
mov
sbb
push
dec
pop
and
psrad
sti
testl
or
out
xchg
icebp
mov
xchg
cld
pop
enter
dec
inc
mov
mov
int3
shlb
mov
mov
cltd
and
jbe
push
xchg
mov
inc
out
pop
and
in
divl
sub
sub
sub
out
xor
setb
jge
cmpsb
inc
mov
int3
inc
xor
and
loope
pushl
pop
mov
push
stos
mov
add
pop
pop
mov
xor
pop
mov
mov
fs
sbb
mov
rcr
out
sub
jmp
pushf
mov
mov
js
ftst
mov
xchg
push
ja
divl
jle
cmp
sub
mov
loopne
enter
dec
idiv
shl
ret
ja
sarl
and
mov
mov
pop
jb
comiss
mov
fbstp
incl
inc
outsb
enter
add
testl
daa
adc
adc
cmpsl
daa
push
repz
jmp
sbbb
test
ljmp
std
xchg
adc
jo
sarl
pop
out
dec
test
popf
pop
add
xor
cli
movsb
ret
or
dec
in
and
aaa
fcmovnbe
jge
ffree
mov
sub
mov
mov
shrb
pop
add
push
dec
or
xchg
movsb
fimull
sbb
cld
mov
fsubrs
jnp
shll
nop
gs
cli
mov
popa
movsb
lods
lret
sbb
gs
jl
add
inc
aaa
outsb
and
jle
andb
ljmp
sbb
lret
inc
int
in
fisttpll
and
jmp
mov
in
cmp
push
outsb
fisttps
mov
cli
add
ja
ds
ss
push
data16
dec
out
je
sub
mov
push
subb
lcall
sar
imul
jl
adc
xchg
lods
dec
stc
shll
mov
fisttpl
add
into
mov
push
cltd
fs
push
and
insl
scas
sub
cmp
mov
and
or
push
sub
out
and
sbb
dec
scas
insb
int3
fstl
ja
sub
push
or
or
jle
fwait
xor
imul
and
mov
outsb
fdivr
jmp
dec
xchg
stc
adc
sarb
test
cs
cmp
cmpsl
fstps
sbb
inc
iret
cmp
mov
mov
mov
mov
fdivl
adc
cmpl
push
and
xor
xchg
jecxz
pop
add
mov
aaa
xchg
out
roll
test
lret
jb
test
jns
jge
jae
add
jp
sbbb
stos
ja
jmp
loopne
leave
pop
xor
inc
mov
stc
dec
add
cs
sub
push
out
es
mov
or
repz
ret
imul
cwtl
lret
cld
fstpt
sbb
adc
mov
in
mov
aam
call
lock
mov
pop
mov
or
jmp
xor
sarb
fdivp
shrl
inc
scas
sahf
fldl
mov
xor
sbb
xor
mov
rcrl
add
xchg
push
or
mov
test
add
leave
xor
push
cmp
adc
adc
xchg
pop
shlb
out
call
or
mov
mov
lds
inc
push
lahf
js
pop
sbb
cmp
popa
inc
mov
adc
mov
rcll
sbb
adc
fisubrs
insb
and
jp
jle
mov
push
jbe
cmp
orl
loopne
ljmp
inc
pop
movsl
test
push
sbb
iret
pop
sbb
outsb
out
dec
inc
add
ds
pop
cmp
hlt
pop
lahf
stos
dec
push
sub
jnp
sbb
and
scas
jne
movsl
dec
lds
push
scas
subb
push
cmp
dec
dec
scas
adc
push
xchg
ljmp
ljmp
ret
pop
shll
out
adcl
sbb
test
lods
and
pop
out
ja
add
pop
stc
push
sti
jmp
test
dec
stos
xor
movsl
inc
stos
or
dec
or
insl
mov
popf
mov
push
and
arpl
xorl
mov
gs
loope
lea
or
neg
notl
dec
cmp
dec
pop
push
cmp
xor
sbb
in
mov
mov
sbbb
outsl
xor
sbb
inc
mov
scas
add
std
int3
imul
mov
push
adc
lock
or
call
fistpll
mov
outsl
dec
xchg
push
je
popl
pop
mov
sbb
jae
out
outsl
xor
cltd
mov
xchg
mov
inc
dec
loop
and
pop
xlat
ss
add
or
hlt
lret
jecxz
cmp
cmp
pop
stc
mov
mov
pushw
fsub
or
or
add
pop
adc
int3
push
movsl
inc
iret
xchg
je
sbb
dec
mov
xor
and
add
scas
push
outsb
je
ror
adc
sbb
pop
push
lahf
outsl
in
ds
sbb
push
sub
rclb
rcl
xchg
add
add
adc
adc
xor
mov
arpl
mov
aas
xor
shll
inc
stos
out
or
inc
inc
test
ret
dec
mov
inc
jp
clc
cmp
cmp
mov
lea
test
cmp
addl
lds
sbb
adc
push
lcall
add
dec
cld
in
inc
sub
stc
xor
xchg
pusha
jmp
xchg
sbb
ds
stos
jno
repz
fldcw
cld
roll
xchg
iret
xchg
xchg
ja
push
pop
sub
es
sub
pusha
sbb
adc
call
sbb
test
dec
and
xchg
sub
dec
sbb
xchg
cmc
sub
and
pop
aad
xchg
imul
sti
push
loope
repz
xor
xchg
int3
sbb
les
mov
cmp
or
pop
fsubrl
mov
xor
jl
pushf
jo
shrb
stc
fwait
mov
cmp
xor
sub
jb
push
shl
aas
xchg
call
adc
int3
inc
dec
push
mov
xlat
inc
arpl
lret
sub
add
mov
push
add
adcl
fwait
cmp
je
add
xor
fstps
dec
sbb
test
mov
pop
mov
cmpsl
iret
pop
fnstsw
in
mov
mov
addb
outsb
inc
popf
imul
insb
push
imul
int3
dec
xchg
rcl
daa
inc
fbld
dec
jmp
adc
icebp
mov
pop
mov
out
push
cmp
adcb
sub
enter
cmp
js
ja
add
cmp
decb
ds
out
sbb
ret
es
sbb
cmpsb
mov
outsl
xor
mov
pop
add
push
mov
test
pop
sahf
daa
mov
cli
push
or
addr16
dec
inc
jo
shlb
push
je
ja
ljmp
daa
loopne
out
mov
push
in
mov
and
sbb
dec
pop
inc
pushf
inc
pop
mov
cmp
test
sbb
test
dec
xchg
aas
daa
ret
std
inc
mov
dec
jecxz
inc
dec
cli
out
push
test
test
movsb
rolb
cmpsb
mov
jne
add
cs
mov
fs
outsl
jg
mov
cmpl
mov
or
mov
cltd
and
cmp
push
inc
pop
andb
shr
and
lods
mov
in
push
jns
xor
dec
push
and
jmp
and
stos
xchg
and
data16
xchg
int
je
roll
jo
jp
mov
inc
xor
popf
inc
add
adc
lods
pop
xor
sub
stos
loope
push
lret
push
dec
cmp
lods
sbb
pushf
xor
push
loope
ss
mov
ret
pop
mov
cld
sarb
or
sbb
push
mov
push
cmpb
lcall
sbb
push
push
push
inc
je
jo
mov
pushf
adc
lods
jg
push
or
pop
addb
clc
adc
lret
or
cmpsb
push
pusha
xor
sub
mov
jecxz
push
fstps
push
mov
pusha
out
dec
loope
pop
and
addr16
icebp
cli
aaa
loop
out
push
or
push
pop
mov
inc
insb
daa
xor
mov
lods
add
outsl
and
inc
or
push
push
fcmovnu
stc
jno
push
inc
xchg
mov
mov
adc
and
push
mov
and
push
shll
inc
fistpll
fiadds
mov
leave
fisubrl
jbe
sahf
hlt
jae
pop
loope
decl
sbb
sbb
dec
pusha
xchg
pop
xor
pop
jno
jnp
loope
xchg
pushf
scas
adc
inc
pushf
sbb
xchg
ss
pop
es
mov
hlt
int
idivb
sbb
dec
and
loope
int
and
ss
in
add
frstor
outsb
aas
xor
sbb
cmp
xor
shlb
inc
in
lock
sbb
int
add
pop
loopne
pushf
mov
pop
mov
pop
sbb
cmp
and
cmp
adc
mov
loop
inc
add
dec
movsl
fildl
ret
int
aaa
jno
mov
dec
and
ret
inc
aad
xor
ret
adc
xor
and
jecxz
add
dec
js
int
adc
push
outsb
iret
mov
xchg
pop
jns
inc
xchg
ds
mov
jb
loopne
loope
test
cmp
mov
mov
pop
das
test
jne
sub
ret
cmp
pop
loopne
inc
repz
int
out
iret
sub
sbb
push
inc
gs
mov
xor
jb
mov
xorb
mov
jbe
inc
pop
or
add
fsubr
out
jb
test
pop
imul
pop
inc
or
inc
mov
mov
push
push
xor
sbb
test
sub
xor
xor
dec
pop
mov
test
pop
popa
cmp
je
clc
jecxz
imul
dec
sub
mov
dec
fs
jnp
sub
pop
sub
or
xchg
mov
nop
lock
mov
out
sbb
adc
xor
pusha
bswap
sub
jns
addr16
inc
iret
outsb
out
mov
jno
test
mov
roll
push
add
ljmp
cli
add
add
inc
adc
cmp
cs
icebp
popf
loope
fnstsw
stos
lret
dec
inc
mov
adc
enter
lahf
xchg
sti
test
or
test
dec
data16
fucomi
push
xchg
dec
sbb
mov
push
jno
xor
pop
call
push
iret
sti
fwait
mov
pop
xchg
push
sub
cmpsl
into
adc
add
xlat
iret
push
fsubl
sti
sub
push
in
sub
sub
aaa
imul
sub
mov
pop
cmp
aam
mov
mov
push
push
add
jg
dec
xor
call
pop
das
aas
jbe
or
inc
sub
bound
inc
inc
mov
cmp
cltd
pop
loopne
xor
jle
cmpsl
fistl
inc
stos
pusha
clc
pop
fs
mov
notl
dec
incb
pop
sub
xchg
lcall
mov
aas
or
fnsave
test
movsb
dec
mov
into
push
jo
sbb
xor
sub
add
lea
lea
dec
jg
icebp
loope
and
orl
addr16
lods
jnp
gs
mov
rcl
mov
adc
pop
shr
test
or
fildll
and
inc
mov
sub
fwait
add
or
sbb
mov
jge
mov
dec
sbb
orb
inc
in
mov
pop
mov
inc
jecxz
shrb
pop
push
in
dec
shrb
aam
jp
outsb
mul
pop
clc
sub
adc
xor
in
repz
push
in
nop
lods
scas
dec
aas
adcl
adc
outsl
xlat
mov
push
fsub
pop
out
cmp
mov
stos
pop
cmp
jbe
jmp
or
dec
push
push
cmc
push
test
push
outsb
out
cwtl
mov
and
rolb
inc
mov
jb
xor
push
mov
or
xor
xchg
add
inc
mov
insb
pop
repz
add
lcall
sub
outsl
insb
jo
jns
xchg
mov
push
out
aaa
fs
jbe
lds
dec
inc
cmp
popf
sti
jns
adc
jmp
jle
pop
cmc
xor
push
sbbl
push
and
nop
fimull
inc
js
adc
daa
jg
jg
fcoml
lea
popa
sub
jae
loope
jl
enter
or
ret
cltd
fstpl
mov
push
inc
shl
int3
inc
insl
in
jge
mov
enter
js
lods
pop
sbb
cmp
cmp
cmp
popa
lcall
icebp
cmp
insb
ret
aam
scas
std
lods
aam
pop
inc
inc
mov
lods
cmp
jo
add
xchg
iret
test
jge
fldz
loope
lods
inc
ljmp
dec
and
jmp
jg
ret
pop
mov
movsl
popa
push
mov
adc
icebp
and
subb
xor
aad
das
lods
mov
shl
mov
dec
and
je
dec
and
mov
jle
xor
lods
loope
aaa
testb
sahf
jns
and
xor
sub
movsl
sub
or
out
push
in
test
add
xor
pop
and
pop
jmp
push
add
xor
dec
in
insl
sbb
add
or
push
test
mov
sbb
xchg
sti
push
mov
jge
movsl
js
cld
mov
jbe
adc
mov
shrb
leave
movsb
loope
dec
ljmp
pushf
mov
xor
add
dec
pop
inc
and
mov
mov
add
lahf
adcb
out
ss
and
cwtl
or
repnz
addr16
inc
sbb
jle
inc
fs
loop
jae
mov
xchg
cmp
and
rcrl
addr16
repnz
mov
cmp
mov
inc
rcll
mov
mov
add
adcl
and
in
or
popa
push
out
mov
clc
xlat
cmp
fisttps
cmp
pause
mov
inc
out
jno
ljmp
jno
lods
shll
push
repnz
sub
lds
incb
dec
jb
ret
xor
outsl
push
arpl
es
push
ljmp
int
hlt
mov
loope
cmpsb
cmc
adc
lcall
repnz
sti
inc
add
ja
push
xchg
stos
sbb
mov
lods
testl
out
dec
jg
nop
cmp
push
xor
dec
mov
cltd
es
out
cmp
fs
outsl
mov
clc
xchg
aam
jge
popl
xor
gs
js
add
out
dec
rcrb
aam
lcall
add
gs
add
out
push
ljmp
loopne
push
lret
iret
cmp
shl
adc
jae
outsb
push
or
out
adc
cmp
mov
mov
mov
mov
push
cmp
scas
mov
int3
shlb
and
mov
das
mov
jge
test
sub
lods
cmpsl
xchg
mov
stc
inc
ret
xor
hlt
lock
shll
sbb
sub
cmc
cwtl
sub
dec
adc
cmp
in
add
jmp
add
loopne
pop
roll
add
dec
jbe
jne
dec
cmpb
pop
test
and
mov
test
stos
push
inc
mov
mov
xchg
and
repnz
jle
test
iret
sub
cmp
adc
mov
mov
dec
mov
cmpsl
push
dec
xchg
xchg
movsl
xchg
subl
jns
lea
test
inc
lcall
test
mov
pop
and
imul
lock
mov
loopne
sub
insl
data16
icebp
jne
lods
sbb
mov
add
mov
jge
lcall
push
xlat
dec
rorb
insb
push
faddp
jg
adc
arpl
mov
cltd
lret
sbb
inc
push
jnp
jge
push
add
nop
test
testb
je
and
push
inc
sub
sub
xor
imul
aas
sub
xchg
ror
jnp
xchg
loope
pop
cmpsl
dec
pop
lcall
lea
jno
iret
cmp
add
mov
mov
gs
push
mov
cmp
jo
jne
xchg
sahf
repnz
popa
pop
sub
hlt
lahf
bound
fildl
inc
cltd
ffree
clc
xchg
jecxz
loope
ss
and
pop
jg
cmc
shll
mov
rol
mov
sub
cli
dec
jno
clc
sbb
and
in
shr
mov
outsl
or
inc
cs
push
pop
movsb
jl
push
mov
adc
push
sub
xor
adc
ret
subb
incb
dec
and
mov
adc
sahf
jne
jo
addr16
popf
popa
mov
xor
jp
add
mov
into
rclb
repnz
mov
notb
loope
loop
xchg
push
lds
out
fldenv
mov
mov
dec
cmp
jge
xchg
mov
sbb
cwtl
out
pop
mov
pop
adc
add
cmpsb
or
xchg
xlat
or
stos
das
xchg
outsl
mov
enter
inc
jb
sbb
cmpsl
sub
nop
xor
dec
pop
mov
mov
mov
adc
push
aam
cmpsb
movsb
aad
pop
sar
pop
loopne
ret
cmp
lret
sbb
stc
jl
adc
pop
daa
sbb
fbld
push
sub
add
aas
mov
ret
and
sti
push
shll
xchg
xchg
push
lahf
adc
icebp
sbb
outsl
mov
loop
sti
add
adcl
cltd
sbb
fdiv
lahf
mov
ss
mov
movups
lods
dec
inc
std
mov
push
adc
mov
lcall
pop
jbe
cmpsl
mov
insl
iret
rolb
push
leave
nop
jae,pt
rol
cld
sbb
pop
loop
stos
inc
iret
sbb
test
arpl
es
movsl
ja
jb
aam
hlt
pop
pop
sbb
or
jl
ret
lcall
fisttpll
cmpsb
int
xor
jae
dec
jns
repz
cmpb
ds
daa
xchg
push
jle
fsts
cmp
idivl
pop
or
adc
push
sbb
pop
sub
pop
mov
mov
mov
out
fisubs
aas
xchg
je
in
mov
adc
inc
sbb
xchg
pop
sahf
jne
push
sbb
jbe
sub
pop
adc
jno
out
in
or
jp
add
push
dec
aam
and
push
jbe
repnz
jnp
jge
inc
push
add
das
add
aam
popf
add
pop
ljmp
and
jns
lret
push
xor
lret
lea
fmull
nop
je
fsubrl
mov
adc
arpl
mov
pop
pusha
les
test
out
repnz
or
loope
test
insl
lret
mov
push
jg
test
jecxz
jl,pn
sub
jbe
lods
inc
xchg
ja
int
mov
pop
dec
sar
sub
clc
and
jb
ss
pop
arpl
pop
inc
sbb
cmp
dec
lods
or
enter
sub
call
or
scas
mov
call
dec
pusha
pop
shll
hlt
mov
test
fstl
push
popf
ret
xor
pop
cmc
arpl
inc
movsl
cmc
pop
ja
mov
add
push
in
loope
jbe
pop
cmp
dec
xchg
in
lahf
cwtl
dec
lock
sub
mov
into
ret
dec
mov
xor
mov
jl
negb
lcall
xchg
inc
xchg
push
jg
test
push
inc
mov
popf
inc
pop
jg
std
out
addr16
xchg
inc
out
addb
lods
xchg
ja
lock
test
mov
in
cld
or
incl
incl
push
mov
or
mov
fs
cltd
cli
adc
in
js
scas
push
hlt
jbe
jg
into
and
push
sbb
pop
mov
push
inc
add
fisubrs
psrld
int3
and
in
shl
jecxz
jecxz
cs
jmp
mov
fidivl
ljmp
mov
das
imul
ds
js
sbb
mov
fistpl
je
and
push
jmp
in
enter
iret
dec
xchg
fs
jp
dec
or
sub
repz
jbe
enter
enter
call
mov
shrb
scas
adc
adc
fisubrs
lds
rorb
fwait
jg
loopne
push
sub
xor
repz
rcrb
test
lods
lds
push
test
out
sti
xchg
mov
push
popf
shl
call
loop
mov
or
setge
lret
fcmovnbe
jl
fcompl
dec
adc
xchg
add
fdivl
cmp
dec
sub
js
popf
shll
or
int3
pop
cs
pop
jbe
data16
pop
lock
lods
pop
popf
and
and
and
xor
shlb
xor
outsb
in
idiv
mov
lret
or
iret
add
mov
mov
inc
or
pop
fisttpll
add
icebp
mov
cmp
jle
out
mov
test
add
mov
cmp
les
push
sub
psubb
iret
fnstsw
rolb
dec
sub
movsb
push
inc
xor
sub
cmc
or
pusha
das
adc
inc
mov
mov
add
sahf
gs
in
lods
cmp
int3
rcrl
lahf
jge
xchg
ret
jno
ja
jns
sti
mov
push
fwait
push
jecxz
pop
cmp
inc
lock
cwtl
cli
adc
jp
inc
and
or
push
fmull
enter
in
ret
mov
cmp
roll
testb
sub
je
push
repz
out
cmp
xor
add
adc
inc
cmp
mov
cmp
das
xchg
inc
out
cmp
or
mov
inc
pop
mov
jb
sub
add
push
inc
xor
push
mov
jb
sub
lahf
stc
dec
jae
mov
jae
xchg
xchg
lods
adc
or
sbb
adc
imul
das
cmp
es
add
xchg
ss
xchg
mov
imul
sbb
jl
aam
mov
xchg
lret
aam
and
push
int
mov
mov
inc
add
adc
add
aam
movb
js
xchg
jle
push
aas
jo
in
enter
cltd
inc
inc
pop
fs
sbb
push
and
out
dec
jl
sti
pop
shr
sbb
hlt
stc
add
aam
in
jo
adc
or
mov
inc
test
pusha
ret
push
push
call
mov
sub
gs
clc
sub
test
data16
mov
push
daa
push
xchg
shlb
lcall
dec
or
sahf
mov
xchg
pop
shll
lods
mov
jno
aad
xchg
cmp
jle
cmp
int3
sbb
incb
popl
clc
testb
cmpsb
xchg
sti
outsl
out
mov
lret
cwtl
nop
outsb
xlat
add
cmp
mov
adc
and
fadds
or
dec
jg
dec
mov
sbb
cmpsb
mov
xlat
in
nop
ret
out
ffree
sbb
and
add
loopne
int
or
adc
inc
sub
push
add
stos
pop
mov
fmuls
repnz
mov
mov
sti
jns
sub
int
xor
pop
dec
fmulp
mov
aaa
xchg
rol
hlt
xchg
fcompl
ss
jge
gs
push
test
popf
cli
imul
add
cli
or
push
jl
dec
add
jbe
sub
xchg
push
jae
pop
das
jmp
and
cmp
cld
sub
movsb
push
pushf
in
sbb
mov
sub
mov
sub
je
scas
ja
or
fwait
and
add
xlat
and
fstl
add
adc
add
and
fs
lods
out
pop
fsubl
negl
stos
cmpsb
loope
or
insb
add
dec
xchg
stos
test
pop
inc
mov
add
mov
or
push
imul
pop
aas
xor
out
data16
or
cmp
cld
jnp
mov
mov
jae
mov
or
mov
imul
mov
mov
adc
or
pusha
sti
mov
fxch
cmp
dec
stos
mov
cmp
nop
cmp
add
push
cmp
xchg
mov
iret
xchg
loope
arpl
enter
sbb
imul
lods
inc
xchg
push
ljmp
popl
adc
int3
fs
push
mov
jg
pop
pop
in
cmc
mov
adc
fs
jmp
fs
pusha
sbb
outsb
fldcw
and
es
xchg
mov
adc
jno
pcmpeqb
es
jmp
in
jae
fsts
jmp
cmp
mov
cmpsl
clc
or
daa
repnz
sub
lret
pop
jae
pop
xchg
xor
in
cli
jns
lock
test
dec
ljmp
mov
mov
movsl
adc
or
jae
xchg
jo
repz
inc
dec
iret
inc
sub
mov
mov
shr
jl
jb
push
outsb
pop
or
fwait
cmp
fbld
mov
inc
add
mov
scas
mov
jp
adc
stos
addss
sub
in
jo
testb
pop
cmp
ret
pop
xor
lods
in
int3
adc
mov
nop
ret
sbb
add
sbb
lret
call
adc
adc
fs
aas
push
call
adc
dec
push
loop
decl
cmp
jno
fmul
ret
cmp
dec
cwtl
enter
adc
inc
push
add
sub
repz
mov
iret
sarb
je
pop
cmpl
sbbb
mov
fiaddl
gs
je
push
xchg
cli
and
sbb
push
mov
mov
aam
dec
mov
add
stc
jmp
push
pop
imul
adc
out
xor
mov
fisubl
fstps
fisubrs
sbb
and
decb
fistpll
test
repz
sub
dec
add
aaa
jmp
mov
jbe
insl
popa
inc
mov
rol
cltd
sub
repnz
xor
or
inc
pop
mov
lahf
cld
pop
jne
sub
addr16
xchg
cmp
lret
lods
loope
loopne
movsb
daa
xchg
call
aad
in
mov
jno
loope
sti
icebp
sbb
outsl
and
adc
roll
xchg
and
lods
loop
int3
xchg
mov
mov
sbb
mov
scas
in
xor
and
sbb
lcall
add
and
push
lds
add
inc
xchg
daa
es
pop
xlat
or
lahf
sbb
aaa
adc
dec
call
jo
movsb
shll
mov
call
and
dec
addr16
and
mov
nop
cwtl
idivl
call
jae
jmp
xchg
outsl
or
imul
lret
sbb
push
add
mov
push
rolb
sub
xchg
scas
gs
pop
loop
fwait
mov
fs
int3
mov
pop
sahf
aaa
insl
sbbl
hlt
jne
xor
jne
jge
and
jbe
xor
adc
fiadds
scas
popa
fnsave
jno
inc
cmp
movsl
xor
inc
mov
pop
sub
pop
pusha
push
repz
fadds
mov
fs
fs
nop
mov
imul
inc
hlt
out
adc
mov
adc
fcmove
orl
sti
mov
mov
cmp
pop
cmpsb
mov
pop
push
add
mov
inc
rcrl
stos
in
jnp
pop
adc
cli
cmp
xor
repz
sbb
dec
outsl
add
dec
xor
les
and
adc
mov
pop
jne
pushf
push
cmp
fsubs
insl
or
mov
dec
inc
into
dec
adc
or
mov
out
xor
test
jmp
es
mov
dec
mov
inc
inc
cmp
or
ret
jp
loopne
leave
mov
sub
cltd
cmp
mov
loop
add
in
mov
mov
xlat
lcall
xor
jg
ja
mov
ret
and
mov
scas
in
push
lahf
cmp
aad
repnz
shl
addb
cmpsb
lods
sbb
js
ret
jno
xchg
dec
cmp
push
and
mov
xor
or
fbstp
and
out
xor
pop
cmp
addr16
int
ret
push
xchg
stc
call
imul
mov
popa
fistl
js
adc
fsubrs
sbb
sbb
in
sbb
insl
dec
push
ret
cltd
cld
aaa
push
dec
fdivrl
push
mov
xchg
faddl
loopne
aaa
ljmp
stc
pop
shlb
dec
jmp
mov
inc
mov
mov
xor
stc
scas
sbb
jb
mov
cmp
mov
sahf
inc
hlt
scas
add
xchg
sub
adc
sub
sarl
jns
pusha
sbb
mov
cmpsb
xchg
and
pop
cld
xchg
mov
jecxz
fcmovnbe
test
push
negl
push
cmpb
push
lahf
mov
dec
ja
push
sbb
orl
mov
cmc
aad
leave
popw
mov
adc
pop
int3
in
mov
imul
nop
adc
mov
mov
adc
pop
mov
mov
inc
test
push
cmpsb
mov
mov
out
pop
std
jo
and
adc
ja
rcll
iret
push
fwait
int3
jecxz
call
rolb
pop
mov
fsubp
icebp
aaa
push
or
add
or
pop
fsubr
pop
xchg
mov
dec
xor
dec
pop
pop
sub
rcrl
xchg
fiaddl
mov
add
nop
scas
aaa
xchg
and
nop
mov
xlat
decb
jae
scas
mov
cmpsb
and
mov
jge
xchg
adc
mov
fimull
mov
jne
fisubs
clc
mov
adc
dec
clc
pushl
fbstp
nop
or
pop
sbb
out
pushf
pop
push
jb
popa
dec
and
xor
lock
sbb
addr16
shlb
outsl
lods
add
loop
lahf
jle
or
popa
outsb
mov
dec
cmpsl
icebp
dec
xor
sub
xchg
ret
jae
in
adc
in
mov
mov
xor
xchg
sbb
pop
jns
rcrb
inc
imul
outsb
push
add
and
push
movsb
addl
xchg
sar
cs
int3
sbb
adc
add
outsb
xchg
daa
pushf
cltd
xchg
jg
ficomps
data16
xchg
sarl
movsb
aam
mov
roll
gs
xor
mull
fidivrs
or
jbe
fdivs
jbe
cld
add
pop
out
mov
std
je
je
nop
adc
sahf
das
jno
adc
pop
push
shlb
inc
add
enter
in
mov
ds
adc
stos
fldt
and
xorps
fs
int
push
insb
sub
adc
bound
imul
ljmp
mov
add
xor
cltd
xor
xchg
adc
mov
pop
sbb
inc
mov
lods
xchg
adc
dec
jnp
mov
xor
dec
xlat
out
xchg
dec
xchg
mov
xchg
hlt
mov
imul
iret
jnp
insb
lcall
xlat
jge
fnstenv
mov
cwtl
dec
add
and
shrb
enter
pop
test
lahf
fnsave
jl
in
jbe
add
sarl
mov
adc
fcmovnb
pushf
sub
outsl
xlat
movsb
dec
movsb
sbb
insl
jbe
ss
lods
stos
notl
add
test
shrl
adc
xchg
ret
enter
dec
mov
push
push
scas
cmp
mov
in
aad
dec
or
daa
jmp
jno
xchg
movsb
mov
pop
data16
or
jmp
mov
aas
mov
faddp
dec
mov
push
outsl
xor
xor
test
subb
fnstcw
inc
inc
sub
add
cwtl
cmp
flds
xor
jge
sbbl
jno
aaa
push
pop
push
xchg
sub
stos
outsl
gs
bound
movsb
mov
inc
jmp
test
mov
dec
pop
cmp
sub
jge
xchg
mov
movsl
or
std
sbb
push
stos
lret
shr
fnsave
adc
aas
mov
les
cmp
ret
jo
pop
shrl
and
jmp
mov
mov
pop
idivb
int
imul
imul
repnz
outsl
push
cmpsl
jecxz
adc
fs
add
in
push
std
pop
pop
push
push
lret
dec
push
mov
cmpsb
dec
xor
and
iret
fnstcw
mov
mov
mov
and
rclb
inc
cltd
out
addr16
fstps
fcoms
aam
fs
shrb
andl
inc
imul
imul
xchg
sub
ljmp
jp
dec
adc
lods
in
js
lea
push
sbb
push
sbb
lcall
insb
sbb
nop
xor
sbb
ljmp
xchg
and
jg
in
push
jbe
ljmp
rolb
add
mov
adc
dec
push
xchg
loope
xor
jno
stos
lods
test
mov
xor
pop
nop
push
pop
add
data16
enter
in
cmp
xor
and
pop
jl
xchg
and
dec
and
push
add
push
shl
lods
mov
popf
push
lods
or
test
inc
push
dec
ret
cmp
movsl
xor
jne
or
pop
test
fnsave
xchg
jae
stc
insb
call
insb
inc
dec
fisubrl
mov
fdivr
xchg
push
or
inc
pop
sbb
les
in
addr16
call
xchg
cmp
xchg
out
add
pop
jb
lds
inc
mov
mov
inc
push
pop
pop
mov
jns
ret
sbb
cli
or
add
fisttpll
jo
in
ficoms
jae
out
test
jne
add
test
inc
or
rclb
xor
hlt
pop
xlat
ja
cmp
add
inc
and
repnz
mov
sub
mov
mov
mov
shrb
xchg
cwtl
push
lods
adc
push
and
or
hlt
or
test
push
les
and
mov
daa
gs
jnp
jae
inc
jle
sbb
pushf
icebp
xchg
xor
aas
cmp
es
sub
cmp
lahf
add
out
lock
insb
xchg
rcl
xchg
cmp
out
jge
push
aad
xor
xlat
ss
inc
or
inc
decl
lahf
sbb
mov
hlt
lahf
pop
add
cmpsl
fstl
aas
mov
icebp
fistl
ljmp
stos
insl
xor
fcomi
push
xchg
pop
in
cmpsl
jne
adc
adc
mov
je
scas
mov
add
fs
or
sub
push
insl
sahf
pop
fidivl
dec
icebp
pushf
inc
fmuls
cmpsb
shrb
jecxz
iret
imulb
mov
mov
scas
dec
out
rorb
cld
mov
pop
xor
jl
add
dec
aas
and
insl
daa
imul
or
cmpsb
insb
mov
or
dec
daa
in
movsl
pop
fbld
loopne
cltd
jecxz
cmp
fcmovnb
adc
fiadds
fnstenv
fisubl
cmpsb
lock
jg
mov
jbe
mov
pop
repz
call
xchg
dec
sbb
test
scas
sti
lret
ljmp
inc
fidivrs
int3
adc
sbb
mov
xchg
aaa
xchg
insb
lods
lods
or
xor
sub
and
push
insb
imul
mov
int
push
xlat
jmp
movsb
movsb
jbe
add
outsb
lret
test
mov
pushf
cmpl
cld
and
mov
pop
leave
jnp
lret
lock
cld
add
push
adc
and
mov
cli
cmp
sub
ret
push
dec
cmp
cmp
mov
adc
enter
ja
sbb
insl
jae
inc
add
mov
rcr
jle
xor
or
sti
mov
outsl
sbb
scas
and
stos
jmp
je
lds
cmpsl
xchg
inc
fcmovu
pop
lcall
adc
xchg
sahf
sub
ljmp
add
and
mov
push
cld
inc
sbb
xor
jge
mov
inc
xchg
dec
or
or
mov
push
sbb
inc
mov
and
sbb
in
mov
sbb
add
rcrl
shlb
repz
jl
mov
adc
loope
pusha
nop
stc
dec
lcall
xor
cmp
xor
push
lea
mov
add
adc
pop
fildl
dec
mov
inc
jl
out
push
lea
dec
mov
out
outsb
adc
sub
inc
lods
ret
jmp
imul
sbb
push
sbb
dec
push
faddl
sbb
xlat
jle
jmp
mov
inc
int
pop
cmc
aam
gs
xchg
sbb
lahf
les
icebp
xorl
imul
mov
popf
cmp
cmp
xor
test
arpl
pop
in
cwtl
push
aad
xchg
fsubs
cli
push
xchg
pusha
shrb
aaa
lock
ss
nop
sar
enter
mov
filds
das
mov
popf
mov
mov
add
aas
pop
cmp
cwtl
test
jbe
xchg
jmp
icebp
xor
clc
mov
push
dec
or
cltd
outsb
pop
into
push
mov
add
in
push
inc
add
xor
cmp
push
test
ds
in
ret
xlat
add
pop
bnd
dec
in
dec
add
and
xor
jae
or
sub
add
jb
shlb
mov
adc
nop
fnstcw
xor
xchg
cs
stc
add
orb
int3
adc
or
hlt
mov
imul
cwtl
icebp
std
and
out
inc
jg
cltd
mov
test
fstps
mov
iret
lret
xchg
add
lds
xor
mov
lcall
cli
mov
insb
xor
sub
jbe
push
lcall
dec
js
add
mov
add
mov
adc
push
inc
push
push
sbb
pop
out
addr16
add
test
shll
sub
or
or
adc
stc
out
and
fdivrl
ds
mov
test
pop
add
jno
push
add
ds
leave
mov
hlt
sub
xchg
in
xchg
icebp
jle
test
pop
scas
inc
mov
test
sub
mov
inc
push
xchg
jmp
jge
imul
fstpl
dec
or
and
cmpsl
inc
lret
rorl
xchg
out
fnstenv
sub
and
std
sub
xor
xchg
insl
xor
lea
in
and
mov
dec
out
dec
mov
mov
adc
sub
sbb
and
ffree
cmpsb
loope
cmp
adc
neg
xchg
test
arpl
jo
dec
insb
inc
sub
cmp
xchg
popf
out
pop
push
pusha
fldcw
mov
mov
or
or
sbb
add
xor
adc
test
pop
jmp
sub
mov
into
pop
push
mov
inc
pop
lods
mov
mov
popa
jp
dec
in
adc
or
jbe
cld
xchg
imul
lret
insb
int3
cmp
mov
lcall
in
lds
sub
test
or
sub
movsl
int3
imul
xor
das
jne
lds
aaa
mov
cmpb
adc
bound
loope
ret
addl
sbb
ret
and
pop
inc
or
sub
loop
fcomip
jnp
cmc
mov
mov
adc
or
loope
mov
imul
out
rcrl
out
test
or
fs
add
sub
pushf
jg
sahf
scas
sbb
jo
gs
add
scas
fldt
repz
popa
sbb
loopne
es
xor
adc
push
lahf
insl
int3
xor
xchg
jl
insl
add
sub
icebp
mov
cmp
jecxz
mov
or
shrd
push
dec
nop
mov
bound
sbb
fcmovne
dec
cmp
cmp
jmp
add
inc
addr16
mov
xor
andl
inc
xchg
inc
mov
bound
mov
jnp
jo
xor
out
mov
mov
push
mov
pop
insl
jmp
pop
movsb
cli
orps
sbb
push
imul
pop
mov
fstp
xchg
xor
add
stos
sub
sbb
daa
inc
dec
mov
fnstsw
pop
fisttps
adc
aas
inc
xor
outsb
inc
test
inc
lret
mov
aaa
adc
sub
pop
mov
push
es
cwtl
or
cld
stos
pusha
jns
add
cwtl
movsb
fdivrl
xlat
dec
inc
and
lret
adc
nop
dec
jmp
jne
adc
negl
sbb
add
cmp
es
or
in
and
adc
xchg
sbb
mov
pop
jns
push
enter
arpl
inc
push
sbb
jecxz
pop
sub
cli
jno
jbe
pushf
jns
sbb
daa
outsb
pop
sbb
data16
adc
mov
xchg
fstps
push
add
repnz
push
jne
xchg
xchg
and
sbb
pop
loope
pusha
imul
inc
add
jne
sub
add
jl
sub
and
mov
xor
dec
pusha
iret
mov
push
in
add
popf
dec
push
mov
daa
adc
sbb
add
rorb
xor
inc
leave
mov
icebp
mov
lcall
pop
shl
movsb
stos
xlat
addps
stos
cli
jg
fld
into
adc
mov
hlt
mov
push
mov
mov
lds
movsl
dec
aam
in
clc
jo
mov
xor
test
repnz
and
aaa
mov
inc
sahf
lds
pop
andl
push
shr
sti
inc
lods
inc
roll
jecxz
bound
shll
fldcw
leave
cli
sbb
sbb
movsl
add
jmp
fldenv
fwait
jbe
push
popf
push
sub
dec
xchg
inc
add
xchg
sub
addb
pop
push
lcall
hlt
in
jne
push
andl
jl
or
adc
inc
rolb
in
loope
mov
cmc
xchg
mov
in
cmp
pop
xchg
enter
xchg
inc
push
hlt
push
out
mov
push
hlt
dec
mov
mov
jo
aad
outsl
xchg
outsb
leave
out
pusha
sbbl
dec
movsb
pop
test
or
leave
dec
mov
add
inc
cmpsb
gs
sub
call
sub
jns
mov
pop
mov
lods
xchg
jb
jle
mov
not
scas
xchg
jmp
ficompl
into
psubq
dec
pop
xor
je
inc
iret
loop
pop
push
ret
js
add
pop
cmp
lock
daa
cwtl
xchg
js
jecxz
sub
cmp
lds
test
testb
lods
popa
mov
in
leave
jnp
mov
ret
sub
insb
cmpsb
jp
je
add
jns
cmc
sbb
into
sbb
pop
loopne
inc
inc
movsb
shll
sahf
or
mov
ret
mov
ss
std
dec
daa
jbe
inc
imul
rcrb
push
in
rcl
and
jmp
pop
rol
add
gs
jmp
sbb
sub
dec
inc
xchg
sub
dec
repz
jl
mov
outsl
loop
pop
mov
insl
or
jo
and
out
mov
xor
jmp
pop
push
adc
xchg
xchg
xor
xchg
fwait
push
mov
idivb
movsl
and
lea
mov
lahf
pop
icebp
xchg
shl
leave
in
push
aaa
mov
scas
jle
repz
aam
push
cld
lcall
push
xchg
push
and
sahf
hlt
mov
arpl
mov
and
push
push
and
out
ja
dec
mov
insb
int3
call
mov
jmp
lock
add
ret
push
mov
test
mov
add
push
cmpsl
ret
add
stc
jno
mov
xor
add
jb
sub
jnp
push
xchg
push
push
test
sub
mov
mov
repz
xchg
test
shl
cmc
adc
sub
jbe
pop
mov
push
cmp
imul
in
aas
fidivrs
lret
mov
sbb
das
ljmp
cmp
xchg
test
cmp
add
inc
clc
in
sahf
loopne
in
mov
xchg
std
pop
lcall
add
pop
repz
push
sub
sbb
inc
int3
cmp
loop
test
scas
or
psubsb
outsb
rol
cmp
adc
mov
dec
loop
xor
addr16
fs
loope
sub
sub
scas
hlt
leave
aas
dec
cmp
stos
jne
push
fs
popa
repz
sti
sbb
inc
jo
stc
mov
leave
or
and
cltd
icebp
dec
mov
sub
popa
mov
jnp
dec
xor
pop
mov
lods
push
enter
cltd
mov
ja
sbb
addr16
stos
cs
in
dec
mov
dec
add
mov
add
cmp
pop
cmp
and
imul
notb
sub
lea
inc
ljmp
bound
test
hlt
fstl
add
jbe
shll
aam
stos
div
cwtl
mov
jb
nop
pop
push
shr
imul
add
xchg
push
sub
std
ret
push
or
hlt
cs
mov
sub
add
inc
push
bound
lret
shr
jnp
cmp
mov
dec
insl
or
insb
gs
inc
adc
out
dec
into
popf
into
mov
mov
out
jg
push
out
ret
dec
clc
xor
decb
jno
cmpsb
pop
ds
jbe
mov
push
movsl
mov
data16
inc
test
push
xlat
mov
ret
xchg
jmp
xchg
jnp
push
test
mov
icebp
call
adc
pop
xorl
cmpsl
in
mov
mov
lcall
loopne
push
dec
adc
shrl
xchg
aad
dec
sbb
cmp
pusha
sbb
dec
cwtl
cmpsl
subps
or
adc
mov
orb
mov
mov
mov
popa
add
jge
xchg
cs
cmp
sar
fstpt
ret
adc
mov
adc
addl
dec
bnd
mov
jbe
shll
enter
sbb
xchg
ss
lret
dec
dec
mov
jg
or
insb
cmp
xchg
jnp
loopne
repz
jg
dec
mov
mov
ret
out
fsts
mov
sbb
inc
xchg
in
js
repnz
fisubl
sbb
push
movb
pop
pushfw
loopne,pt
and
push
scas
cmp
fsubrp
mov
mov
adc
sti
adc
inc
enter
jg
push
sub
jnp
and
cmc
xchg
mov
aas
pop
addl
pop
or
cmp
mov
movb
shrl
mov
daa
dec
jecxz
mov
lods
mov
das
cmp
sub
push
cmpsl
and
imul
mov
adc
test
xchg
jp
inc
or
sbbb
jae
rolb
pusha
xchg
or
adc
dec
pop
adc
mov
add
mov
sub
xor
jmp
xorl
xor
sbb
xlat
push
mulb
push
out
jae
adc
jb
push
xchg
push
push
push
cmp
cmp
sbb
pop
jno
xchg
ret
dec
dec
xchg
jl
mov
add
repnz
xlat
subl
cmc
test
int3
out
jmp
stos
outsb
jg
cld
mulb
push
out
jp
fldenv
in
inc
ljmp
test
into
sub
dec
add
xor
and
in
out
jmp
into
into
adc
inc
movsb
sub
std
and
mov
push
add
data16
push
cli
mov
or
leave
inc
adc
jnp
lahf
inc
xchg
jne
pop
test
int3
inc
subb
push
jno
and
sbb
pop
nop
fsub
std
mov
cmp
popf
xlat
inc
pop
push
adc
push
push
in
add
or
push
cmp
in
ljmp
push
inc
jo
nop
out
cmp
out
cltd
cld
pop
jle
add
popf
xor
sti
xchg
push
push
mov
pop
inc
loopne
movsb
in
testl
in
mov
loope
pusha
into
bound
jmp
out
into
inc
mov
ss
inc
les
shrb
cmp
dec
sub
cmp
pop
or
mov
cmp
test
lods
int
mov
mov
xchg
stc
add
dec
lea
ret
add
lcall
mov
fbld
jmp
mov
jns
push
fwait
mov
cmp
lods
int3
inc
pop
pop
pop
xchg
cmp
jns
mov
out
and
xorb
xchg
mov
xchg
clc
fs
aas
je
jp
adcb
mov
jne
and
push
dec
push
add
test
or
adc
inc
pop
fidivl
add
xor
mov
xor
sub
fnsave
sahf
mov
pop
pop
xchg
jle
jge
inc
bound
adc
sub
xchg
xchg
pop
aas
pop
push
xchg
sahf
sahf
adc
iret
insb
mov
stos
push
add
sahf
pop
jg
sub
pop
sahf
cmp
decb
jl
xchg
adc
and
mov
pushf
sbb
adc
call
loopne
pop
xlat
outsl
cmpsb
pop
fwait
xor
je
sbb
or
pop
outsb
cli
test
jle
cmp
mov
iret
test
stos
enter
ret
pop
cmp
push
pop
pop
lret
fistl
lret
nop
adc
sub
pop
neg
dec
lds
mov
dec
lret
dec
mov
stos
test
jg
ss
cmp
fsubrl
or
inc
sbb
cmp
push
mov
mov
int3
dec
ds
push
jb
mov
test
add
mov
aas
clc
mov
rorl
mov
inc
mov
icebp
push
mov
loope
ss
ret
std
dec
mov
punpckldq
jne
shlb
fildll
lods
jge
xlat
or
in
xor
std
lcall
or
roll
out
xchg
fdivl
sbb
stos
inc
mov
js
add
hlt
fstpl
cmp
xchg
daa
xchg
sub
mov
push
cld
addr16
ror
repz
mov
and
mov
push
jp
push
test
aas
push
ja
push
cli
pop
push
test
out
inc
sbb
jl
or
push
pushf
aam
lret
pop
stos
jnp
pop
mov
jne
into
xorb
shll
ret
jbe
test
insl
int3
or
dec
xor
ret
mov
xchg
jecxz
push
xor
movl
jno
fwait
mov
inc
mov
or
dec
in
cmp
push
mov
data16
fdivrl
or
jb
lock
inc
enter
int
lret
xchg
xor
xchg
push
mov
push
dec
ds
lods
lahf
cmp
jae
hlt
inc
iret
jns
xchg
mov
daa
dec
inc
ss
xor
pusha
stos
in
adc
xor
dec
enterw
clc
cmp
mov
cmp
sub
jb
xchg
scas
pop
ret
testl
gs
mov
xchg
movsl
mov
mov
pop
jp
add
mov
jns
mov
inc
in
jp
jns
jae
inc
jle
jne
push
sbb
incb
call
sub
xchg
call
jns
push
inc
adc
and
xchg
jae
jno
xor
scas
mov
inc
cmp
pusha
pop
xchg
lods
lds
push
shll
push
movsl
add
add
fs
sti
fstpt
add
fisubs
je
jle
cltd
jns
stc
insb
xchg
mov
jb
imul
push
mov
pop
inc
inc
jbe
outsb
jbe
cs
jp
dec
adc
dec
fwait
push
pop
arpl
xchg
ficoms
dec
inc
ret
rorb
lods
push
mov
lods
scas
out
mov
ljmp
leave
cmp
push
jl
loope
pop
pop
or
loope
mov
in
adc
dec
daa
pop
lcall
shrb
mov
pop
mov
jnp
cmp
jl
jl
and
xor
inc
xchg
jmp
mov
xchg
aaa
pop
mov
xor
push
into
jb
push
cli
clc
jl
fidivs
rcrl
xlat
fstpt
jne
dec
mov
sbb
insb
adc
push
das
enter
xchg
xchg
sti
cwtl
rorb
and
xor
pop
mov
movntq
out
sub
jno
cmp
push
sbb
fcomps
adc
es
adc
adc
mov
mov
push
jo
or
xchg
pop
iret
cltd
push
das
xchg
dec
gs
pop
in
lret
icebp
in
mov
and
xor
mov
adc
in
mov
popf
cmp
bound
enter
cli
out
aad
cmp
jecxz
jle
test
push
ret
out
mov
mov
jge
pop
ds
sbb
daa
mov
jno
add
in
int
mov
xchg
jg
mov
xor
jns
mov
cmp
pop
pop
and
sbb
pop
ss
insl
lods
ja
mov
in
xlat
dec
or
or
fisttps
push
int3
lret
mov
xchg
sub
cmp
jmp
fs
jl
xlat
stos
xchg
adc
ficompl
adc
cmp
test
sub
cmp
pop
cmc
outsb
sub
jmp
and
xchg
dec
scas
gs
xor
mov
jg
int3
arpl
cmp
in
int
inc
xchg
xor
push
cltd
mov
mov
jle
sub
daa
dec
push
xchg
jo
sub
pusha
xchg
adc
pop
push
add
movsb
adc
sbb
test
jbe
xchg
lods
lods
subb
jnp
inc
jb
or
pop
sub
add
pusha
jo
mov
cmpl
loop
loop
test
fdivrl
dec
push
js
stc
push
sub
mov
arpl
inc
mov
aad
bound
xor
pop
fsubrs
sub
xchg
pop
subb
push
jl
push
lahf
dec
xchg
es
bnd
push
cmc
lret
cmovs
xchg
mov
jecxz
xchg
sub
sub
in
adc
jno
pop
sbb
push
aam
mull
xor
xchg
dec
es
jl
inc
mov
push
movsl
pop
insl
xchg
ds
pop
push
movsb
leave
or
call
lcall
and
mov
inc
popf
push
pop
mov
or
movsb
dec
out
xchg
roll
lods
push
int3
ret
xchg
insb
loope
in
push
jecxz
mov
cmp
xor
pop
mov
mov
cmp
idiv
popa
xor
adc
filds
cmp
cld
jg
jmp
push
jg
pop
leave
ljmp
jl
sar
jecxz
ja
and
cltd
jg
fs
jmp
ficoms
fdivrs
push
leave
xchg
adc
mov
lods
fnstenv
cmp
sub
dec
test
or
fs
add
mov
lds
insl
cwtl
mov
js
shl
push
ret
mov
test
call
loop
pusha
roll
jae
push
lock
add
xlat
mov
ds
iret
mov
jns
adc
cmc
or
int3
xchg
je
imull
push
sbb
daa
mov
mov
mov
pop
inc
sbb
push
imul
adc
test
mov
stos
insl
cmc
sub
inc
mov
jecxz
push
pop
aaa
stos
clc
dec
pop
mov
and
and
fcmovbe
fnclex
es
jnp
bound
pushf
xchg
push
sbb
xlat
stc
jno
stc
gs
inc
mov
inc
fwait
mov
sub
jp
push
mov
dec
sbb
xor
sub
lcall
xor
jno
sub
sbb
movsl
mov
jnp
sbb
xchg
cmp
sbbb
inc
xchg
cmove
lahf
mov
scas
daa
inc
mov
pop
shl
xchg
dec
xor
xor
jb
je
mov
and
nop
out
push
inc
sarl
jne
into
arpl
data16
xor
or
xchg
adcb
sub
ljmp
icebp
cltd
add
sbb
into
mov
divb
xor
mov
lea
xor
push
push
pusha
add
leave
clc
stos
jp
loope
loopne
sub
add
cmp
xorl
pushf
sahf
dec
mov
movsl
subl
dec
fmulp
adc
scas
dec
lret
roll
push
add
jp
shl
sahf
inc
lods
les
cmc
jl
inc
stos
jle
mov
icebp
out
jg
xchg
movsb
je
jb
xor
xorb
or
push
cmc
xor
cmp
sub
mov
loop
fadd
int3
imul
cmc
xor
jb
push
mov
out
xchg
mov
sbb
test
mov
in
repz
cmc
lahf
adc
fwait
xchg
dec
adc
ss
les
outsl
rol
sahf
adc
lret
xor
fcoms
test
sahf
lahf
fldcw
mov
and
pushf
dec
lds
inc
jnp
adc
pop
mov
and
or
jbe
fmul
into
repnz
xchg
mov
insb
mov
jno
iret
ja
mov
enter
jne
movsl
lods
pop
mov
mov
sub
pop
mov
dec
pop
fldt
mov
pop
out
out
out
pop
pushf
mov
sub
cmp
mov
push
cmp
inc
sbb
rcr
shlb
int3
inc
fidivl
in
add
mov
jl
fs
push
xchg
cmp
xor
sub
test
mov
jmp
mov
inc
adc
fcomps
mov
jb
cmpsb
xchg
cmp
stc
inc
lea
orl
shrb
xchg
pop
jo
out
mov
ffree
push
in
dec
stos
jbe
jmp
or
fwait
shrb
jecxz
add
or
cwtl
pop
and
sti
jo
push
jae
mov
inc
fisttps
xor
add
inc
loopne
or
inc
mov
outsl
sbb
data16
rclb
leave
dec
mov
add
jp
in
das
adc
arpl
sbb
push
pop
jle
or
mov
xchg
mov
and
adc
in
sub
lahf
adc
or
xchg
jnp
mov
dec
push
jp
mov
mov
push
lds
stc
subb
bnd
inc
call
pop
loop
rcll
pop
mov
popa
cltd
mov
jge
rcrl
nop
fisubrs
outsl
loop
mov
or
int
xor
jecxz
sarl
cs
mov
mov
push
outsb
jmp
sub
jl
cli
std
jle
cltd
jae
lahf
sbb
out
cmp
shll
push
nop
fs
push
xchg
mov
mov
js
mov
mov
scas
adc
gs
push
push
rcrb
xchg
adc
in
cmc
and
xchg
cmp
stos
je
orb
sub
adc
nop
cmpl
divb
sarl
jo
clc
sub
call
jb
dec
adc
push
jnp
cmpsb
push
es
add
fs
adc
out
fists
xor
sub
ds
inc
mov
pop
jge
sbb
push
gs
dec
incl
aam
gs
add
mov
mov
push
movq
icebp
hlt
jo
loope
adc
inc
clc
std
push
dec
xor
int
push
incb
pop
sub
jae
roll
std
pop
loop
das
cmp
in
push
adc
jnp
xor
push
add
dec
mov
std
cmp
xchg
xchg
pushf
cli
jg
cmpsb
or
push
insl
add
shlb
ja
mov
cmc
mov
sahf
fmuls
rcrb
cmp
rcr
sti
dec
dec
es
mov
scas
inc
mov
add
ror
popa
sub
mov
cmp
and
adc
pop
push
and
push
add
out
int3
mov
outsb
pushw
sti
movsb
cli
cld
outsl
in
cmp
jle
jb
add
mov
mov
cld
adc
pop
arpl
cmp
outsl
dec
testb
xor
aad
xor
icebp
leave
dec
add
fs
fsts
mov
pusha
fildl
sti
push
test
mov
dec
mov
ret
imul
cmpsb
adc
movsl
push
mov
lds
arpl
in
leave
mov
adc
jl
jl
xor
fdivl
pop
mov
mov
mov
push
mov
mov
mov
inc
fdivl
int3
icebp
add
sbb
lods
jp
mov
jbe
mov
mov
jle
fcoms
xchg
dec
push
or
clc
and
jp
pop
xor
mov
inc
stos
pop
pop
cmp
movsl
mov
ja
mov
mov
xchg
add
lock
ds
push
xor
out
roll
xchg
arpl
cmp
lret
repz
jmp
jecxz
lock
jb
int
testb
dec
cmp
push
call
mov
push
lret
mov
int3
cmp
sahf
mov
fs
xlat
xor
mov
mov
xchg
fstl
and
cmpsl
push
test
inc
xorl
sub
in
imul
cmp
add
mov
mov
push
fisubl
or
jl
mov
ja
push
push
stos
int
xchg
decb
xor
xor
test
push
jno
mov
stos
and
gs
into
lcall
std
mov
jecxz
xchg
jmp
mov
pop
pop
jbe
jmp
push
mov
scas
xchg
subb
getsec
jg
mov
lds
stc
sub
rcrl
sbb
daa
out
xlat
cmpsl
jb
pop
add
cltd
mov
ss
movsl
mov
push
adc
dec
mov
mov
imul
into
xor
bound
mov
sahf
scas
pop
add
testl
inc
mov
loopne
sbb
shl
xchg
mov
scas
ds
popa
inc
push
dec
arpl
out
stc
ja
cld
and
das
iret
arpl
fsubs
scas
scas
mov
pop
xchg
idivb
jne
add
jecxz
lock
fadds
psllw
jns
cmp
test
movsl
cli
sub
xchg
call
sub
mov
jnp
loopne
mov
or
movsb
das
leave
or
cmp
sub
das
adc
stc
mov
adc
push
pushf
pop
ds
ret
cltd
std
loope
call
pop
dec
adcb
and
jg
ljmp
sbb
inc
loop
push
mov
xor
in
nop
mov
loop
push
call
and
nop
mov
fdivr
out
and
jmp
imul
push
loope
jg
into
xor
mov
dec
pmaddwd
stos
pop
cmpsl
leave
cmpsl
out
call
test
insl
xchg
mov
je
into
mov
push
xor
sarb
add
adc
push
add
jl
sub
sub
push
addl
push
cmp
lcall
mov
shrl
in
adc
mov
out
dec
cmp
nop
aas
sahf
jae
out
inc
aaa
mov
rol
enter
loope
lea
imul
dec
fcomps
mov
xor
jnp
shrb
and
pop
pop
int3
sbb
ljmp
pop
xor
mov
insb
ret
pop
test
add
xor
ss
sub
in
mov
gs
fs
addr16
out
fistl
jg
push
dec
xchg
mov
sbb
xchg
shl
and
iret
mov
popa
xor
xchg
shll
out
mov
clc
pop
or
icebp
mov
in
add
mov
fwait
pop
call
xchg
vpminub
push
pushf
mov
loop
or
xorl
scas
push
pop
jg
pop
out
stos
mov
sarl
inc
dec
mov
sbb
daa
xor
sbb
pop
pushl
dec
imul
adc
dec
nop
push
mov
inc
fldenv
or
lods
ljmp
pop
cmpsb
xor
out
fists
xchg
fimuls
and
test
test
out
mov
dec
in
sbb
out
mov
sbb
sbb
and
mov
pop
and
sar
or
cmpsb
jbe
out
daa
push
adc
sbb
sahf
cmp
sbb
xor
mov
mov
rcrb
int
xor
inc
push
ljmp
cwtl
loopne
xchg
sbb
cld
cmp
lea
test
or
icebp
ret
cmc
pop
xchg
mov
stos
jp
push
mov
nop
cmp
add
outsb
cmp
add
ss
sub
leave
jle
cs
cmp
and
mov
xchg
push
ds
out
sub
in
int
out
mov
lods
cmp
jb
lahf
jno
sub
imul
dec
xor
popa
push
add
jns
stos
ja
push
inc
mov
xor
inc
imul
mov
mov
out
popa
jp
adc
lds
ds
stc
fdivl
mov
leave
mov
xchg
inc
js
ret
repnz
ds
sbb
cs
in
loopne
decl
dec
sti
aam
xchg
or
fists
jae
sbb
inc
mov
sub
stos
dec
shll
add
out
xchg
out
fidivrl
mov
sti
ror
loop
addb
sahf
and
xchg
pop
jns
xchg
push
std
pop
stc
aad
push
ljmp
or
mov
outsb
xchg
aam
loopne
scas
arpl
inc
icebp
mov
je
mov
lea
sub
insl
test
ljmp
mov
loope
lret
cmc
inc
rol
sub
popf
leave
cmpsb
test
fwait
stc
aaa
pop
mov
xchg
lods
bswap
subl
cld
inc
mov
test
insl
push
inc
enter
cmpsl
out
clc
and
rcr
sub
lret
call
xchg
cld
arpl
and
js
inc
imul
jae
sbb
repnz
jb
push
and
ja
push
orb
daa
adc
add
sbb
in
scas
std
sub
mov
js
push
jl
adc
inc
xchg
mov
ss
push
adc
adc
cwtl
jmp
lods
insb
subl
push
insb
pmulhuw
adc
rcr
pushf
fs
sub
je
dec
xor
xchg
das
or
sub
lods
pop
movsb
mov
dec
addr16
xchg
adc
dec
xchg
mov
loop
gs
sahf
aam
insb
and
fsqrt
mov
mov
repz
lea
adc
or
mov
sbb
xchg
xchg
fidivrl
cmc
dec
xchg
mov
imulb
jl
adc
push
mov
in
adc
sahf
int3
xchg
jno
test
lods
mov
jae
stc
xchg
das
push
xchg
in
shr
adc
lahf
fstl
int
sub
mov
shrl
aad
jecxz
mov
xor
mov
mov
test
inc
decl
daa
jg
and
lcall
mov
ret
push
xor
gs
adc
out
jns
xor
sbb
sbb
jle
cmp
clc
mov
cmpsl
out
mov
mov
sbb
jge
popf
adc
add
xor
lret
adc
addr16
mov
cmpsl
leave
mov
cmp
jnp
lcall
enter
push
add
mov
xor
jge
sti
mov
sbb
mov
pushl
pop
jg
icebp
and
inc
stc
outsb
jg
push
pop
rcrl
push
sub
or
pusha
or
or
lds
shlb
mov
adc
sbb
mov
jmp
add
inc
xchg
sbb
jecxz
in
xor
xorl
adc
push
pop
push
mov
jbe
incl
sahf
in
fwait
xchg
dec
testb
sbb
push
mov
push
mov
jmp
call
cmp
pusha
es
mov
inc
push
mov
mov
cmp
and
in
fdivrp
jmp
mov
enter
cmpl
rcrb
mov
sbb
xchg
shll
or
mov
iret
add
add
test
shlb
loope
mov
cli
add
inc
pop
hlt
les
jge
and
in
adc
and
xchg
mov
ret
int
data16
pop
sbb
fs
mov
and
in
sbb
inc
pavgw
inc
in
sar
lods
jo
es
leave
mov
rcll
mov
mov
mov
push
sbb
cmp
or
pop
xchg
lret
sbb
sbb
xor
imul
mov
jno
sub
push
cltd
fidivrl
adc
xor
cmp
mov
mov
sub
mov
adc
mov
pop
shll
icebp
mov
mov
fs
pop
mov
outsl
pop
jne
daa
mov
outsb
cmpsl
scas
leave
or
mov
dec
dec
pop
imul
add
mov
or
sbb
and
lret
adc
cltd
fsts
pushf
setg
and
jle
pop
cmp
xor
add
xor
sahf
pop
push
lock
add
sbb
cmpsl
sti
pop
cli
fdivrs
cwtl
pop
aas
push
out
icebp
cmp
mov
std
mov
out
mov
stos
add
cmp
mov
lcall
stc
loope
pop
cld
adc
rcll
js
rcrb
or
cld
lahf
pop
ss
fimull
pushl
mov
push
std
push
xchg
sbb
gs
lret
lret
fwait
leave
sarl
fbstp
gs
add
jp
jb
subb
fcomps
out
pushf
into
push
jnp
push
dec
outsb
mov
daa
mov
scas
out
sbbl
and
loopne
jmp
jmp
loopne
ljmp
jbe
or
jae
fst
pushf
mov
pop
imul
and
or
mov
ljmp
mov
mov
adc
and
sub
aam
pusha
pop
stos
jle
mov
cltd
fstps
or
cld
add
add
sbb
fimuls
xchg
push
push
outsb
arpl
jg
stc
push
dec
shr
pop
mov
pop
shll
lea
dec
xchg
shl
mov
sbb
adc
stc
xchg
mov
std
inc
sub
mov
es
sbb
leave
jmp
mov
add
sub
jecxz
nop
and
mov
jbe
out
aam
fidivrl
das
addr16
add
pop
xor
mov
fisttpl
jle
repz
es
and
je
dec
or
mov
jmp
faddl
mov
push
fucom
pop
mov
insl
mov
aad
mov
or
add
pusha
dec
mov
xchg
dec
fs
cmpsl
loopne
dec
sbb
movsb
add
cmp
mov
stc
in
ret
stc
jb
lea
adc
repnz
mov
cmp
imul
mul
sahf
mov
mov
xchg
adc
rcrl
mov
mov
or
lahf
fdivr
movsb
inc
outsl
inc
add
lods
test
test
enter
add
sbbl
lods
sub
lcall
insl
sub
pop
or
and
outsb
xchg
push
mov
mov
sub
divb
enter
loopne
inc
or
test
sbb
lret
mov
mov
aaa
data16
adc
ds
lahf
lds
maskmovq
divl
mov
punpckldq
inc
std
nop
xchg
xchg
dec
loopne
loopne
dec
mov
adc
movsb
adc
mov
jns
enter
mov
or
fdivrp
scas
in
shrb
movsl
hlt
neg
and
in
divb
fists
push
out
repz
jl
mov
cmp
xor
lods
sahf
xchg
pop
ret
ljmp
fldt
adc
xor
test
dec
jle
and
xchg
cmp
cs
fnstsw
popf
push
int
imul
in
mov
fdiv
dec
sub
xchg
mov
enter
push
cmp
in
or
in
mov
iret
out
jmp
dec
and
inc
imul
jmp
mov
pop
out
push
jae
and
push
inc
jmp
in
mov
scas
push
icebp
adc
push
lar
and
mov
xlat
sbb
lret
dec
std
stos
and
pop
mov
stos
adc
push
mov
cmp
cmpsb
xor
push
push
fucom
sbb
cmp
pop
mov
ja
and
inc
call
in
jl
mov
push
jl
enter
push
pop
int3
arpl
jge
lret
fwait
adc
ds
test
mov
jmp
xchg
cmp
add
adc
aad
add
cmpsw
jno
scas
push
loopne,pn
das
push
ret
mov
mov
and
lods
icebp
mov
push
mov
outsb
and
mov
aam
lods
js
add
sbb
jb
movsl
fcmove
push
jo
cmp
push
add
mov
cmp
dec
sbb
pop
repnz
test
or
mov
insb
dec
cmp
push
pop
mov
loopne
leave
xor
push
push
cmp
or
adc
lods
push
jl
jne
and
insl
or
inc
inc
cwtl
mov
cmp
and
jg
xor
ret
cmp
fpatan
xlat
test
idiv
pop
imul
ljmp
cli
cmp
aas
adcl
or
shl
xchg
loop
fcoml
std
sti
jne
push
mov
das
mov
cmp
sbb
das
add
inc
ret
and
std
dec
cmp
pusha
or
mov
pusha
lret
xchg
mov
sub
inc
outsb
inc
mov
mov
lods
cmp
scas
movsb
cli
mov
popa
in
and
xor
fstl
inc
sahf
push
mov
or
dec
movsl
cli
fcomps
jmp
push
sbb
inc
mov
cmpsb
scas
jbe
movsb
std
pushl
adc
in
adcb
push
mov
dec
fsub
inc
in
and
fadds
xorb
cmpb
jnp
and
mov
xchg
cld
pushf
pop
movsb
leave
in
push
mov
out
jne
lods
inc
je
mov
mov
mov
rolb
mov
inc
adc
xchg
or
mov
and
cld
mov
shrl
jnp
es
xorl
shrb
cmp
cmp
xchg
movsl
lret
pop
sub
cltd
jo
xchg
add
push
dec
add
aaa
mov
push
incl
xchg
mov
sti
or
sbb
sahf
mov
test
loope
jae
adc
jecxz
or
lock
mov
ljmp
negb
jecxz
sarl
mov
jb
test
lds
js
mov
or
push
clc
test
stc
mov
adc
in
outsl
mov
dec
dec
mov
lcall
adc
cmpsb
push
xor
adc
hlt
dec
ja
jns
mov
inc
sub
mov
stc
push
scas
out
jnp
hlt
dec
and
dec
jle
mov
dec
ja
push
sub
add
repz
call
mov
out
negl
or
adc
jmp
mov
cli
jae
cmc
mov
fwait
sahf
clc
dec
movsl
in
xchg
lods
sub
pop
stos
sbb
shlb
mov
cmp
fadds
sahf
testb
cmc
xor
or
lea
dec
inc
jp
xchg
jl
data16
hlt
or
in
popa
adc
mov
mov
rorl
dec
xchg
push
cmp
inc
inc
int
push
popa
jo
cld
jge
leave
cmp
sti
mov
push
xor
dec
dec
xor
in
push
out
sbb
cmp
int3
cld
push
pop
sti
das
aam
xchg
mov
shll
xor
mov
lret
cs
xlat
add
std
inc
push
das
push
mov
pop
push
aam
jae
rorb
adc
xchg
mov
xchg
adc
sbb
clc
push
xchg
inc
insb
and
sbb
jb
pop
sahf
xor
cmp
or
in
lea
leave
sti
sbbb
cld
add
mov
sbb
imul
imul
orb
out
mov
arpl
mov
addl
pop
popa
pop
dec
cmp
stc
in
add
negb
jg
add
push
mov
inc
sbb
std
or
call
adcb
jg
adc
fidivl
pop
inc
insb
fs
vmread
mov
sahf
fistl
fildll
test
shrl
cmpl
and
jnp
mov
aaa
mov
push
fidivl
xor
jno
adc
or
and
rcrl
push
xor
aaa
lods
push
xor
into
xchg
xchg
or
arpl
sub
dec
xor
dec
sbb
gs
mov
cmc
adc
xorl
insb
jle
push
mov
inc
int3
int
loop
xor
cmp
lods
jnp
inc
add
adc
mov
imul
or
push
out
adc
rcrl
mov
lds
ss
adc
test
les
push
cvtdq2ps
sbb
in
mov
adc
lret
pop
push
clc
shll
dec
push
mov
frstor
ffree
push
push
and
pop
scas
dec
inc
push
adc
inc
rcrl
jle
and
dec
jb
push
or
push
xor
push
add
adc
or
push
or
bound
lds
jae
pop
jns
imul
loope
enter
icebp
aam
and
insl
ja
frstor
mov
outsb
lret
ret
stos
push
jbe
hlt
mov
cmp
mov
iret
call
out
test
inc
mov
dec
sbb
mov
aam
out
mov
fldl
inc
or
sbbb
enter
out
jmp
mov
jne
adc
push
mov
aas
imul
scas
pop
pop
pop
xchg
arpl
jae
xor
add
idivb
out
jno
lds
push
adc
fsub
inc
push
push
fcmovbe
out
in
push
imul
push
sub
jg
test
cltd
cmp
xor
lcall
pop
dec
lods
ret
inc
xor
push
frstor
inc
imulb
or
ss
je
call
dec
cltd
addr16
and
les
je
movsb
xchg
out
cmp
cmpsb
pop
jl
cmpsb
mov
aam
jnp
loopne
rcrl
xor
in
std
jo
inc
les
mov
cltd
dec
in
rcrl
loopne
jp
outsb
fwait
dec
cld
pop
push
gs
mov
mov
pop
bound
ret
cmp
xchg
push
bound
das
shrb
in
mov
mov
in
jb
dec
pop
dec
movsb
and
jp
jns
pop
in
fucomip
xor
push
jo
dec
inc
mov
and
xor
push
pop
lods
lcall
sti
stos
sub
cmp
sub
lahf
insl
mov
scas
fcos
lret
cwtl
jae
in
add
xchg
jns
and
fsubs
addb
icebp
mov
lahf
fisubs
scas
and
xchg
jb
cwtl
xchg
push
lods
jnp
jns
pop
fyl2x
int
inc
in
gs
jae
cmp
push
push
add
lahf
arpl
xchg
dec
add
testl
divb
mov
jno
sub
inc
outsb
into
sbb
clc
aaa
pop
jl
add
test
fists
lods
cmp
adc
add
orl
insb
adc
or
xor
lock
adc
inc
mov
fdivl
pop
into
iret
xchg
movsl
cmp
pop
dec
mov
xor
stc
sahf
je
pop
roll
in
mov
pop
jnp
insl
adcl
sub
rcll
xor
loope
cld
xchg
hlt
pop
inc
add
sti
xor
dec
mov
push
ficompl
mov
lret
testb
pop
sbb
fiaddl
lret
idiv
dec
je
movsb
mov
scas
je
into
in
xor
imul
imul
lock
dec
outsb
sbb
ret
ficoms
jbe
cmp
mov
xor
fisttpll
jge
inc
jl
mov
les
inc
xchg
cmc
jl
inc
ljmp
xchg
out
pop
inc
cli
push
cli
leave
out
imul
and
jae
mov
out
fidivrl
mov
mov
cld
iret
push
add
in
bound
je
inc
mov
loopne
sahf
aas
adc
bnd
mov
in
sbb
xor
movsl
xchg
mov
add
jmp
enter
jae
push
sarb
jne
pop
addl
ljmp
sub
lret
cs
daa
enter
hlt
xchg
mov
int3
scas
mov
xchg
pminub
nop
mov
sbb
lret
addr16
es
jle
icebp
aad
out
out
add
leave
mov
push
aam
insl
leave
sti
sarb
insl
loop
add
mov
pop
cmp
cmp
pop
mov
test
ret
ljmp
push
sub
int3
jb
add
push
test
push
xor
int
hlt
push
adc
sarb
nop
sahf
xchg
insb
jg
in
and
push
cmp
or
adc
mov
pushf
jge
imul
std
std
mov
xor
xchg
addr16
adc
jae
das
add
mov
int
and
pop
add
or
sbb
js
pop
xchg
scas
push
jge
cmpb
add
test
and
inc
cmpsb
daa
jecxz
out
mov
sub
jmp
mov
sub
mov
push
cmpsl
lods
mov
cs
jg
movsl
push
insb
inc
sub
or
aam
pop
xchg
popa
mov
andb
fwait
adc
int
les
int3
inc
mov
mov
cmp
call
cmp
jle
movsl
push
jo
mov
pop
fs
pop
arpl
add
xchg
add
fidivs
mov
sti
xor
call
fnstenv
cld
push
es
fwait
xchg
insb
test
lret
loope
lock
dec
subb
dec
sbb
frstpm(287
mov
cmovle
sti
es
jb
lods
out
cmc
jae
and
inc
mov
xlat
mov
out
mov
pusha
cld
loope
add
popa
sub
xchg
adc
jle
mov
pop
addr16
repz
mov
add
pusha
scas
xor
or
leave
jb
or
loope
jnp
pop
clc
and
push
or
mov
push
sub
dec
jae
fldenv
cmpsl
ret
pushf
movsl
enter
jne
sbb
test
xor
icebp
pop
sbb
sub
cmc
js
mov
mov
call
or
dec
mov
mov
adc
dec
pushl
sbb
test
inc
insb
out
xchg
sub
movsl
sub
sbb
rclb
mov
repz
arpl
dec
jbe
loope
pop
jp
test
out
lds
test
pop
jns
js
sarl
sbb
dec
les
sti
pop
inc
mov
fsub
int3
arpl
sub
jle
and
and
inc
xchg
push
xor
sbb
bound
orl
add
adc
push
mov
mov
and
scas
pop
in
jmp
jbe
add
add
test
in
push
into
jno
pop
fcoms
pusha
aad
js
out
cmc
sbb
int3
test
jnp
sub
lods
jae
dec
int3
mov
cmpsb
lods
test
sbb
sub
pop
mov
imul
mov
mov
add
xchg
sbb
or
cmc
enter
sbb
add
jp
sbb
hlt
pop
stc
insb
inc
jg
ljmp
sub
inc
popf
inc
dec
movsb
les
push
push
popf
add
lds
sub
dec
hlt
mov
jns
pushf
repnz
dec
adc
jb
daa
and
sub
xor
mov
mov
sub
in
hlt
sahf
pop
lret
fsubrl
cmp
stc
movsb
mov
out
cmp
icebp
mov
sarl
and
test
jb
jns
xchg
fistpll
movl
mov
lcall
push
lcall
xchg
imul
stos
xor
popf
imul
fidivl
lock
cld
das
out
sub
dec
xlat
xchg
repnz
loopne
repnz
shrl
push
lahf
jb
cmp
xlat
stc
bound
inc
mov
push
loop
mov
aam
in
cwtl
jo
adc
pop
sub
push
insl
ret
and
sbb
clc
dec
xchg
add
lea
or
sbb
negb
iret
sub
xchg
pop
push
adc
repnz
and
add
push
out
push
loop
fistps
ret
jbe
sti
adc
push
outsl
xor
sbb
xlat
int
enter
es
jl
and
ficomps
in
int3
test
fsubl
sbb
fwait
dec
jns
or
xor
lret
xchg
jae
mov
xchg
stc
addr16
das
mov
add
in
movl
push
mov
fidivs
jmp
arpl
push
push
push
popa
shl
jb
fisubs
rorb
stc
icebp
and
pop
movl
aad
pop
adc
ss
xor
aam
dec
cltd
dec
xor
inc
and
xorb
push
push
sbb
stc
push
je
shll
mov
xchg
xchg
sub
aad
popa
lea
scas
mov
nop
jle
into
pop
and
sbb
pop
iret
in
gs
xchg
test
aad
std
movl
lret
or
push
rolb
xor
mov
lods
loop
std
pusha
adc
mov
push
pop
jae
stc
les
into
sub
mov
ret
test
sbb
inc
js
jmp
imul
in
dec
mov
dec
mov
and
ja
lock
fs
push
inc
mov
xor
in
aam
pop
imul
add
inc
fiaddl
out
fwait
hlt
dec
and
js
jae
scas
lcall
xchg
shr
loopnew
fsts
idivb
lods
push
inc
pcmpgtd
insb
ret
jno
stos
fdivr
lds
sub
insb
in
aam
loop
cmpsl
and
gs
sarb
loopne
test
sbb
sub
jo
or
mov
test
jbe
xlat
das
sti
dec
push
in
ljmp
or
pop
lds
pop
lret
mov
jp
xor
and
push
and
mov
cli
int3
jno
cltd
pop
sahf
push
ss
push
push
mov
cmp
mov
mov
pop
imul
mov
dec
aaa
shl
jmp
cmp
dec
sbb
pusha
sub
ret
ror
add
and
mov
sbb
negb
dec
xchg
inc
xchg
pop
call
xchg
push
push
xlat
stc
xor
fisubl
mov
xchg
jl
andb
leave
sbb
enter
mov
addr16
push
jns
aam
iret
dec
fwait
ss
add
sub
mov
add
clc
push
xor
push
mov
mov
mov
mov
clc
mov
test
xlat
cmp
xchg
enter
xchg
add
mov
pop
stos
dec
cmp
shll
pop
call
push
xchg
clc
mov
in
mov
and
in
xchg
mov
pop
lret
or
mov
inc
add
inc
xchg
in
out
mov
repnz
sub
push
aaa
out
cmp
mov
cmp
mov
mov
add
jp
movsl
arpl
call
jp
xlat
and
lahf
and
in
sbb
into
jb
xchg
imul
dec
fldt
popa
sahf
push
inc
mov
push
ljmp
popa
adc
add
or
mov
aas
xor
adc
loopne
ret
scas
mov
mov
xor
and
mov
jg
sbb
lock
inc
ljmp
fs
jmp
mov
lret
mov
std
in
sbb
xor
dec
jb
ss
in
ja
ret
xchg
and
push
mov
pop
test
int
xor
enter
or
add
sbb
data16
xchg
ljmp
mov
xchg
sahf
xor
sbb
lahf
loop
add
jae
mov
flds
repnz
out
and
insb
jl
in
jmp
out
adc
movsb
or
lea
pop
imul
mov
sbb
sub
aam
cmpsl
cmpsb
jecxz
add
repnz
jns
lcall
add
fidivrl
push
shll
mov
dec
fcom
pop
lods
repz
out
cmpsl
cmp
xor
inc
xchg
rclb
pushf
aad
insb
inc
mov
and
cmp
out
fidivl
jle
aad
enter
push
pop
enter
stos
scas
xchg
rcll
dec
pop
cmp
fistpl
push
imul
enter
cmp
pop
mov
and
adc
jns
fstl
data16
rcll
out
lods
xchg
inc
inc
test
xor
and
fldt
mov
mov
jecxz
fcomp
cmpsb
mov
out
xchg
pushf
stos
dec
ds
sbb
imul
add
stos
rcrb
lret
cmpsl
jl
movsl
jl
and
jp
sub
pop
pop
scas
pushf
lea
imul
adc
sub
jno
imul
jns
pop
es
jo
leave
insb
nop
inc
cmp
pop
jp
lret
pop
dec
outsl
ror
mov
push
aam
lret
scas
jle
xchg
imul
pop
sahf
xchg
add
cmpsl
add
inc
push
mov
mov
cwtl
loope
ret
shl
ds
ljmp
leave
push
out
xchg
fildll
shll
stos
xlat
xchg
ljmp
cmp
popf
fs
shrl
sbb
sub
sub
pop
push
ljmp
outsb
pusha
mov
insl
enter
filds
adc
aam
je
cmp
negb
jns
and
jecxz
ss
int
jg
out
lods
and
cld
or
push
out
push
call
dec
jns
push
jne
mov
outsl
xchg
repnz
add
cmp
xchg
jno
adc
inc
cmp
fnsave
aam
jbe
inc
push
cwtl
and
out
fwait
push
jo
cmpl
fistpl
fld1
and
lret
lock
mov
mov
xchg
pop
leave
lahf
dec
sub
adc
cld
xor
iret
xor
insb
pop
inc
jmp
ja
loopne
cltd
jo
pop
push
js
cmp
out
jg
push
or
and
xor
xchg
push
pusha
jo
movsl
add
inc
adc
mov
jmp
sti
jnp
inc
cmp
adc
jo
into
or
inc
or
loopne
lret
sahf
fnstenv
push
int
lock
push
or
xor
jg
fld
daa
mov
xor
adc
pop
jle
stos
or
mov
lds
lds
movl
pop
les
pop
push
jno
push
xchg
outsb
xchg
cmpsl
jo
fldcw
insb
sbb
and
xor
in
lods
lds
in
mov
fiadds
test
jbe
aaa
lds
xchg
or
nop
push
cmp
cs
cmp
sbb
or
sbb
add
and
inc
push
cmp
stos
xchg
pop
repnz
cltd
push
addr16
pop
pop
cmp
mov
xor
pop
mov
mov
in
adc
or
jecxz
hlt
repnz
mov
add
cmp
lods
in
arpl
rorl
in
loopne
dec
call
out
pusha
loop
pop
inc
sub
mov
out
pop
dec
and
out
jns
std
imul
pop
sbb
outsl
out
sbb
pop
mov
out
sub
stc
and
int3
push
mov
xor
hlt
mov
push
adc
loop
adc
adc
lea
pop
cmp
call
jns
mov
pop
movsb
pop
sub
popa
xchg
hlt
cli
pop
enter
xor
in
or
int3
push
ljmp
push
data16
cmpsl
lret
xor
adc
push
push
mov
mov
pusha
ret
sbb
push
rcl
pop
mov
and
ficompl
adc
mov
out
bound
pop
xor
out
sbb
lock
ficomps
xchg
dec
repz
call
and
mov
das
cmp
or
arpl
mov
leave
fimull
or
jg
xchg
push
mov
pop
add
imul
mov
add
das
adc
and
aam
bnd
lods
rorl
addr16
sbb
ss
and
js
mov
adc
pusha
lock
and
add
pop
sub
sub
push
loopne
out
popf
rcll
xor
sub
dec
pop
push
sarl
les
call
pop
iret
nop
adc
jp
repz
iret
sub
adc
stc
seta
outsb
xlat
mov
sub
imul
or
shr
nop
inc
sub
xchg
add
ljmp
push
xchg
mov
and
cmc
mov
xchg
push
xor
std
arpl
mov
out
pop
je
sbb
dec
push
cmp
test
mov
mov
jmp
into
seta
pop
xchg
sub
cld
push
fidivrl
mov
fcoml
mov
dec
cs
xchg
fcoms
mov
or
push
ret
sbb
dec
add
pop
and
imul
shlb
fwait
mov
and
test
iret
adc
jbe
inc
sub
ljmp
rcr
loopne
jo
inc
sbb
repnz
bound
out
sub
addr16
or
lahf
ja
mov
pop
sub
mov
into
sub
xlat
xchg
xchg
stc
push
out
adc
push
jge
mov
mov
add
cmp
out
add
xchg
xchg
std
mov
dec
arpl
testb
rclb
mov
insl
sub
sub
lret
scas
test
idivl
dec
lret
fwait
icebp
xchg
add
jl
loope
aas
push
cmp
cs
jo
testl
mov
aas
lcall
rcll
dec
rorl
sar
in
xor
movsl
dec
or
test
jecxz
nop
dec
sub
test
test
jge
shll
into
jl
lods
cmpsl
jae
test
sub
or
es
scas
orb
cwtl
sub
dec
gs
iret
ja
lahf
rcrb
stos
mov
sbb
loopne
ds
loopne
fidivl
test
push
fimuls
adc
pop
add
scas
and
push
subb
jnp
jno
mov
add
xchg
mov
xor
test
mov
aad
pushf
add
iret
fsubr
sub
push
nop
xchg
fwait
inc
mov
clc
call
pop
pop
pushf
std
movsl
pop
in
or
out
popf
xchg
adc
mov
add
sbb
add
sbb
lret
mov
lods
dec
mov
scas
cmpsl
push
or
dec
xchg
push
lea
jl
loop
push
mov
js
sbb
into
scas
and
ficomps
movsb
into
mov
aam
mov
sbbb
pop
add
push
and
daa
addr16
jo
jmp
arpl
xchg
mov
mov
in
bound
mov
iret
pop
outsl
inc
mov
mov
mov
mov
rclb
jge
insb
push
jg
xchg
adc
jns
jle
idivl
xor
addr16
aam
dec
and
pop
pop
popf
mov
enter
xor
jno
pop
fmuls
inc
sbb
gs
jecxz
pusha
fs
dec
loop
pop
mov
mov
pusha
stos
mov
das
or
cmpsl
movsb
pop
fwait
cmp
in
jp
mov
or
ja
test
int
mov
pop
test
les
es
scas
inc
mov
inc
or
aad
mov
mov
inc
div
or
in
sahf
or
mov
pcmpgtd
xor
pushf
and
dec
cmp
mov
pop
pop
shr
inc
cmp
pop
jg
jbe
jne
add
dec
and
fbstp
stc
mov
lock
push
es
cld
mov
dec
or
fidivl
sbb
sub
xchg
or
and
scas
inc
jmp
xchg
xchg
cltd
stos
jmp
adc
bound
nop
loopne
dec
mov
xchg
enter
jecxz
xor
lds
sahf
jmp
mov
repz
or
arpl
gs
jle
jmp
jnp
int3
mov
fdiv
stos
push
hlt
cmpsb
mov
pop
dec
aaa
pop
pop
sbb
sub
aaa
dec
adc
hlt
ja
xorb
jp
push
in
sub
dec
popa
cmpsb
lea
cmp
cmp
pop
subb
fmuls
pushf
scas
xchg
cmp
insl
push
mov
test
outsl
push
jb
xor
mov
and
xlat
fsubl
and
dec
arpl
or
sbb
adc
and
flds
punpcklwd
xchg
insb
push
inc
jle
imul
rcll
hlt
dec
div
stos
jnp
or
loopne
lret
mov
shll
out
add
mov
rorl
cmp
mov
push
cs
inc
push
orb
pushf
jecxz
dec
push
xchg
push
sub
shrb
aad
pop
sub
divps
jbe
test
xchg
test
dec
push
mov
adc
cmc
push
jg
lahf
jl
mov
fstl
insb
or
lds
imul
mov
add
pop
xor
mov
sbb
ds
out
sub
push
mov
sarb
push
xor
and
sub
rorl
pop
popf
mov
cmp
sub
ss
test
cmp
cmc
dec
xchg
jmp
arpl
cmp
fwait
ror
sub
imull
jg
mov
popa
lcall
fstl
sti
jbe
fs
sti
daa
sbb
or
xchg
enter
pushl
js
push
xchg
sbb
std
xchg
js
rcrb
cmpsb
and
lcall
nop
jge
cmp
iret
pop
xorb
out
jp
in
cmp
sub
sub
es
stc
push
sub
mov
push
xchg
popa
inc
adc
cmp
sub
jl
sti
icebp
ljmp
and
add
fxch
imul
or
imull
jge
jp
cmpsl
std
loopne
pop
sub
xchg
mov
mov
mul
aaa
xchg
mov
mov
rcrb
test
insl
xor
pop
ret
mov
cmp
addr16
and
push
or
push
mov
mov
test
loopne
add
jg
cmpsl
fwait
pop
das
and
mov
pop
pushf
in
popa
dec
push
cmp
sbb
dec
repz
cld
pop
lret
cmpsb
add
xchg
cwtl
xlat
fldl
dec
pop
shrb
aad
add
fdivl
push
jg
daa
das
jbe
mov
lods
dec
sub
push
sbb
mov
inc
pop
mov
fs
jns
ret
cmp
xor
into
out
stos
fwait
jns
push
lcall
cmp
ficoml
mov
scas
in
loop
fmuls
jo
test
rcrl
push
and
jmp
jo
push
ds
mov
and
sub
les
mov
xchg
xor
rclb
adc
push
movsl
inc
and
daa
xchg
sub
fs
pusha
pop
xchg
xlat
push
gs
out
sbb
xchg
jne
pushf
hlt
lock
out
pop
shll
addl
adc
ds
push
std
jb
pop
sub
xor
pop
jp
hlt
sbb
pop
ret
popf
push
out
push
inc
out
mov
mov
pop
call
mov
out
fmul
fldt
cmp
dec
cmp
sub
cltd
je
in
das
push
cmp
push
aaa
lock
ljmp
lret
insl
out
nop
out
outsl
adc
cmp
cmp
dec
pop
ds
in
dec
pop
iret
or
jns
lcall
xchg
cmp
js
rclb
hlt
push
subb
pop
iret
pop
jl
lahf
adc
cwtl
push
mov
sbb
dec
sub
jnp
push
loope
jg
adc
add
inc
fwait
in
or
jmp
and
adc
mov
jae
xor
sub
not
stc
test
test
and
jb
dec
mov
mov
push
mov
test
push
loopne
clc
pop
pushf
or
dec
push
sbb
jbe
mov
inc
filds
mov
cwtl
loopne
jno
add
fsubs
dec
push
jb
push
stc
push
sbb
data16
pusha
jnp
cmp
xchg
mov
jg
outsb
sub
and
rorl
mov
subl
movlps
movsb
dec
lea
or
cmp
xor
mov
mov
loopne
and
sbb
xchg
dec
fisttpl
lret
mov
fnstcw
xchg
sub
xor
add
das
adc
test
bound
fnstsw
sbb
sub
and
mov
and
cltd
push
pop
mov
jmp
adc
sub
cmp
jle
lods
push
repnz
mov
add
rclb
push
sbb
out
pop
mov
push
dec
push
push
sarb
pop
inc
lahf
dec
mov
jae
pushf
stc
push
stos
add
js
out
dec
push
or
fsts
adc
push
push
sbb
cmc
stos
xchg
scas
in
adc
filds
mov
push
loope
or
xchg
jg
ljmp
loope
sti
mov
xor
mov
mov
sbb
or
pop
or
sbb
mov
jae
js
pop
std
and
stos
inc
aad
cmpsb
enter
mov
sbb
pop
jecxz
std
mov
loop
addr16
outsb
and
push
lock
lods
xchg
imul
flds
hlt
add
in
add
movsl
stos
leave
sti
add
sub
loop
rol
jnp
mov
push
movl
sbb
nop
stos
push
dec
ret
pop
hlt
and
inc
ret
and
xor
in
add
scas
in
into
or
andl
ss
cmpsb
popf
mov
inc
push
cmpl
dec
repnz
push
mov
jmp
lea
dec
pop
aad
iret
test
das
push
xor
inc
inc
movsl
fnstsw
sti
jle
jge
nop
clc
xor
pushf
lahf
imul
and
or
xor
adcb
ficoml
test
or
addr16
ja
sub
testb
fidivrl
xchg
lods
cmp
adc
pop
mov
les
push
cwtl
or
cld
int
ror
icebp
nop
outsb
jae
xor
hlt
and
test
mov
mov
rolb
push
lea
push
stc
stos
xor
push
orl
ja
push
out
aad
or
and
or
mov
xchg
mov
push
add
daa
ds
popl
xchg
invd
jmp
xchg
je
nop
rclb
out
mov
das
adc
push
push
mov
dec
sbb
icebp
divb
or
add
lods
dec
mov
cltd
add
fisttps
nop
cmpsl
stos
xor
insb
aad
ljmp
lods
sub
in
std
scas
fxch
ret
xchg
push
lcall
xchg
test
loopne
aam
repz
sbb
out
add
jge
addb
int3
mov
faddl
xor
out
cmp
testb
subl
cmp
pop
in
inc
xor
fsubr
cmc
push
xchg
and
mov
xchg
mov
aaa
fstl
xchg
cmp
lods
lock
and
icebp
stc
popa
xor
icebp
pop
add
cmpl
jp
ret
mov
jbe
adc
daa
test
rolb
jmp
mov
dec
fmulp
push
mov
arpl
in
xor
cmpsb
mov
xor
shlb
jns
and
fs
dec
or
mov
inc
sahf
and
mov
into
jge
in
add
mov
mov
inc
out
push
sbbb
rolb
mov
popa
popa
rcrl
adc
gs
mov
xor
repz
push
jae
insb
gs
fstps
movsb
arpl
repnz
aas
sbb
rcrl
test
inc
and
movsb
imul
incb
mov
jg
loop
fwait
inc
sub
pop
mov
mov
addl
xor
jnp,pt
scas
mov
mov
pop
test
xor
into
lahf
nop
sub
mov
insb
aam
cmp
hlt
sbb
enter
mov
dec
mov
insb
dec
push
cmp
lods
in
xor
sbb
jb
jmp
jno
test
stos
mov
ss
inc
mov
lds
add
dec
or
hlt
pop
mov
sbb
fimull
arpl
lret
popa
mov
test
adc
es
xchg
push
ret
add
test
out
jno
jle
jnp
dec
addr16
rorl
dec
or
sbb
aas
sbb
pop
mov
push
stos
loop
cs
roll
ljmp
mov
adc
and
xorb
movsb
sti
jns
push
xchg
mov
in
jmp
inc
mov
stos
or
cmp
mov
sbb
aad
mov
out
das
push
jp
and
mov
jo
jecxz
xchg
dec
and
int
push
adc
call
sub
lock
pop
les
icebp
test
adc
push
nopl
cmc
pop
xchg
test
and
xor
cmp
sub
sbb
aas
xchg
cli
jae
sub
or
inc
mov
fidivl
mov
and
jecxz
into
push
push
cltd
out
ljmp
nop
pusha
add
inc
aaa
pop
bswap
fnstcw
mov
ljmp
cld
leave
jmp
add
repz
xor
or
loopne
loop
stos
pop
hlt
out
nop
movsl
stos
sbb
inc
cmpsl
add
dec
insb
scas
rorl
outsb
fmuls
cmp
add
jns
adc
sbb
or
mov
aam
push
imul
hlt
mov
xchg
and
outsl
int
out
mov
pushf
jle
and
fscale
aas
sbb
ficoms
mov
je
jbe
push
add
les
ljmp
es
int3
push
jmp
popa
incl
mov
jb
mov
lock
shll
xchg
push
sbb
shll
imul
dec
in
hlt
cltd
jl
and
jno
hlt
movsb
xchg
xor
jl
inc
jmp
jecxz
repz
jns
rolb
mov
cmpsb
faddp
mov
mov
add
in
push
popf
add
pop
cltd
fwait
mov
xchg
loop
pop
dec
or
test
cmp
adc
sbb
pop
mov
sub
or
pop
icebp
xor
xchg
fbld
lods
mov
xlat
or
jmp
xor
cmp
popl
cli
sbbb
testl
jg
jne
adc
ljmp
dec
add
sub
int3
outsb
shrl
and
mov
outsb
test
sahf
nop
cmovb
push
jg
sahf
ret
call
add
mov
add
scas
sub
jbe
or
pop
push
in
pop
aaa
and
icebp
mov
or
out
sbb
fstl
sar
sbb
push
add
and
push
cwtl
jno
jo
cmpsl
lret
inc
enter
xor
or
mov
pop
jg,pn
mov
and
or
nop
sub
lock
pop
pop
dec
xchg
pop
bound
adc
pop
inc
and
adc
cwtl
pop
push
fdivrs
jns
fcomi
andl
inc
dec
lahf
sbb
lea
add
mulb
or
push
xchg
sarl
xchg
lods
int3
push
nop
push
mov
lods
xchg
movsb
in
mov
push
jmp
ja
fwait
mov
mov
cmpsl
push
lds
jmp
xlat
or
add
das
shrl
lds
jecxz
loopne
mov
pop
jecxz
cmp
scas
movsb
and
or
call
lret
mov
enter
or
in
shlb
add
shl
sbbl
add
loop
aaa
push
xchg
add
das
insb
sub
nop
dec
push
out
cli
mov
ds
ret
lods
push
fidivrs
mov
shll
stos
pop
aad
fcmovb
ret
out
sub
movsb
or
cmpsb
mov
sub
mov
iret
pop
iret
lret
stc
dec
es
fwait
jae
xchg
into
call
jmp
mov
pop
adcb
mov
jecxz
loop
shl
sbb
xchg
mov
shl
in
xchg
inc
outsb
addl
dec
fiaddl
jecxz
xchg
jp
int3
aas
push
sti
jl
decl
xchg
xor
dec
lods
movsb
icebp
jecxz
psubusw
or
stos
pop
xor
mov
mov
call
dec
pop
pushf
rcll
and
cmp
mov
loope
pop
jb
pop
ret
pop
in
sbb
popa
add
pop
addr16
push
sub
les
dec
pop
xchg
mov
inc
mov
xor
push
xchg
lods
fs
incb
jns
testl
aam
mov
cmp
xchg
loop
das
enter
sub
dec
int3
ret
pop
mov
out
shl
mov
rcrl
pop
arpl
push
or
iret
dec
imul
cmp
or
div
mov
xor
jae
aaa
cmc
jb
and
jnp
push
out
in
nop
incl
shl
jmp
jb
int
pop
int3
lods
xchg
and
push
fnsave
loopne
dec
js
mov
inc
lret
int
xchg
mov
out
hlt
push
add
iret
xlat
inc
push
add
test
mov
push
add
mov
pop
fisttpll
sub
sub
or
pop
addr16
cmp
sub
ss
pop
bound
xchg
adc
in
imul
mov
gs
cli
add
dec
pop
in
stos
fsubrs
out
push
clc
and
aas
sbb
push
xor
popa
push
add
or
movsb
popa
push
roll
fmulp
loop
pusha
cmp
enter
ljmp
sub
inc
sbb
xchg
fmull
bound
and
add
add
dec
hlt
je
or
pop
xchg
cmp
add
jne
es
outsl
mov
xlat
mov
mov
repnz
roll
aad
lock
mov
xor
mov
imul
mov
and
loopne
lods
repz
sbb
and
stos
ss
pop
add
test
pop
mov
inc
pushf
pop
lret
outsl
nop
shlb
mov
incl
lock
arpl
cmp
movsl
inc
add
jae
sub
js
repnz
xchg
mov
ja
test
ja
je
in
mov
in
jns
stos
andl
cmp
and
shl
orb
mov
pop
pop
lret
loopne
dec
imul
fstpl
cmpsl
sub
adcb
cld
add
fstps
or
mov
pop
aas
stos
imul
jb
ret
leave
mov
nop
add
cli
xor
addr16
jmp
push
loop
hlt
mov
push
fldl
sbb
rolb
and
jno
mov
rorl
push
add
sbb
cld
in
sbb
loopne
dec
mov
mulb
push
cld
sbb
in
ljmp
or
cmpsl
pop
jmp
in
out
dec
xor
mov
lods
xor
mov
pop
leave
sub
out
test
or
ret
addr16
bnd
daa
jle
mov
insb
xchg
jns
int3
mov
cmp
mov
jecxz
inc
cmpsl
adc
nop
push
dec
fsubs
xor
lahf
jo
sbb
loop
adc
add
imul
incl
xchg
xchg
shlb
xchg
pushf
ja
xchg
testb
dec
jle
lea
fildl
dec
sahf
stos
xor
jg
cwtl
or
inc
dec
cld
lock
pop
lock
mov
test
aaa
dec
mov
or
xchg
sub
int
stc
enter
or
xchg
jecxz
xchg
xchg
sbb
xchg
popf
pop
mov
loope
and
push
orl
cmpb
mov
in
sahf
jmp
addb
xchg
gs
out
xor
adc
xor
scas
idivb
push
cmp
or
aas
dec
adc
jo
into
je
ret
popa
cmp
mov
add
inc
outsl
scas
pop
rcr
sarb
in
push
enter
cmp
cmp
inc
jns
push
push
jno
dec
push
and
cmp
push
and
popa
ja
bnd
dec
out
push
pop
mov
jns
push
mov
and
pop
pop
out
mov
xchg
sti
mov
mov
xchg
pop
stos
xchg
stc
cli
mov
jge
imul
aam
out
push
dec
xor
xor
loopne
and
xchg
movsl
mov
add
mov
sub
lret
dec
in
or
cmpsb
push
jmp
popa
rorb
adc
mov
mov
std
pop
mov
and
push
adc
or
sti
outsb
test
mov
loop
addb
lcall
jo
negl
outsb
test
fwait
mov
movsb
je
push
and
xor
sub
aaa
pushf
sbb
pop
jae
in
mov
loope
cmp
or
xchg
cmpsb
sbb
cmp
inc
or
push
lods
sbb
inc
aaa
add
imull
les
fsubp
test
in
out
sub
pushf
and
and
call
pop
sbb
adc
pop
popf
ficompl
vmovntpd
insb
popf
outsl
jno
fldcw
adc
insb
cltd
in
scas
lock
or
rol
jb
clc
and
fstl
add
outsl
add
mov
sub
mov
cld
scas
push
sub
cmp
fists
sti
fbld
popf
dec
scas
popf
mov
pop
enter
ret
jae
scas
in
cmp
mov
mov
aaa
gs
stos
insb
pushf
cmp
pop
add
sbb
sub
dec
in
xchg
aaa
inc
mov
std
push
sti
loop
jmp
xchg
fwait
inc
lea
icebp
xchg
mov
fs
addr16
pop
mov
aas
dec
insb
push
lods
cmp
and
ds
jp
pop
add
test
test
ficoml
jp
jmp
push
mov
loope
sbb
in
and
pop
cmp
cmp
push
icebp
stos
push
mov
orl
push
jp
cld
inc
pop
icebp
adc
cmp
fisubs
adc
mov
pop
mov
daa
or
mov
push
aas
xchg
hlt
sub
in
pop
dec
sub
pop
adc
ficomps
xchg
fadd
add
mov
fmul
push
jnp
inc
mov
das
aad
scas
std
push
lods
or
mov
jp
xchg
ffree
push
ja
outsb
sub
xor
in
into
xor
sub
movsb
or
addr16
int3
outsb
cmpsl
mov
xchg
ljmp
add
dec
hlt
jl
xchg
add
dec
imul
fwait
inc
imul
sysexit
pop
loop
sub
mov
outsl
sub
fcomps
int3
movsb
clc
jns
dec
sub
jge
gs
cmp
neg
xlat
sbb
in
outsb
icebp
fdivp
jg
rcrl
pop
cmpsl
push
mov
and
xor
or
loope
dec
dec
cli
sti
outsb
dec
mov
cmp
or
jl
mov
mov
out
enter
sbb
iret
icebp
cmp
lret
jle
pop
xor
ja
repnz
mov
cltd
jmp
js
cmp
push
push
fldenv
push
fs
inc
jge
pusha
shll
dec
pop
xor
das
stc
cld
adc
xchg
or
nop
not
fs
adc
lods
pop
inc
sub
cmpsb
xchg
xor
bound
aaa
je
or
out
lahf
mov
jae
loope
cmpsl
idivb
dec
cmp
and
cmp
mov
dec
pop
xchg
stos
push
and
sub
outsl
jo
mov
cmc
add
mov
clc
and
cmp
imul
and
and
cli
add
mov
loope
mov
pop
push
jo
popf
xchg
lods
ljmp
mov
aas
mov
add
inc
sti
shll
out
jl
out
ss
sahf
pop
lret
xlat
cmpsl
int
mov
pop
jns
jb
daa
lcall
cmp
sbb
and
lcall
es
leave
into
call
mov
xchg
sub
pop
insl
adc
mov
leave
out
es
dec
push
pop
imul
and
sub
bound
mov
dec
ret
fsubr
aaa
mov
mov
xchg
xor
fildl
cmp
sahf
lea
mov
push
leave
repz
stos
xchg
gs
xchg
add
repz
mov
dec
or
jnp
pop
cmp
dec
lock
loope
adc
push
xor
bound
fsubp
xchg
out
cmp
cwtl
add
pop
sub
and
test
cwtl
mov
popa
inc
mov
fstpl
inc
stc
push
dec
inc
lret
stos
pop
adc
fmul
mov
xor
dec
xchg
ficompl
andl
mov
stc
mov
imul
insl
fbstp
flds
mov
sub
xor
aad
inc
popa
xchg
fstp
adc
popa
loop
sub
out
or
pop
inc
jge
sbb
inc
popa
daa
cld
movsl
inc
outsb
sbb
xor
and
mov
js
add
imul
movsl
adc
or
inc
in
arpl
addr16
loopne
and
cmp
pop
xor
sub
fisubrs
popa
mov
dec
sub
imul
ljmp
xor
inc
stos
cmp
sbb
mov
xchg
rol
mov
sub
imul
shlb
sbb
es
push
aad
jg
mov
insb
std
add
cmpsl
xchg
scas
pop
xchg
and
pop
fstpl
cmpsb
stc
or
mov
mov
xor
mov
cmpsl
std
cltd
sbb
rcl
mov
int3
lcall
cmpb
xor
loopne
mov
mov
out
push
lcall
sub
jmp
je
jnp
dec
dec
out
mov
notb
mov
add
popf
stos
cltd
cmp
mov
mov
mov
inc
rcrl
mov
imul
push
filds
sbb
and
jmp
or
sub
push
inc
pop
push
cmp
les
sbb
or
rcl
ret
stc
sub
mov
std
cwtl
mov
sbbl
std
andb
jno
pop
inc
fs
stos
enter
inc
daa
iretw
and
mov
jno
jge
loope
ret
and
lret
jg
out
xchg
cmpsl
pop
das
mov
clc
mov
ret
cmpsl
out
fucomip
jge
xchg
push
mov
dec
std
insb
into
rcrl
add
and
or
or
aam
inc
xchg
jl
fidivrs
pop
call
movsl
sahf
aas
in
mov
mov
dec
gs
push
mul
inc
mov
dec
push
adc
add
pop
pop
inc
xchg
mov
out
and
call
iret
mov
outsb
movsb
xchg
in
dec
mov
popa
shlb
shl
fiaddl
mov
sti
jecxz
out
test
cmp
pop
sbb
or
inc
pop
test
add
repnz
xchg
fidivl
ret
aaa
and
sub
inc
dec
sub
imul
or
ss
xchg
icebp
inc
shll
mov
loopne
outsl
xor
dec
inc
pop
ljmp
mov
cld
or
add
dec
enter
fs
ss
push
inc
sub
jb
cmp
sbb
mov
or
inc
movsl
inc
repz
cmpsb
xchg
fwait
mov
and
loop
sbbb
sbb
out
pop
imul
or
or
loope
jnp
cmp
inc
xor
xchg
repz
jmp
xchg
sar
pop
std
push
pop
xchg
mov
mov
mov
sahf
insl
dec
jecxz
cltd
stc
pop
xchg
shll
and
jle
loope
je
push
or
dec
jno
bound
adc
ss
dec
mov
mov
jecxz
out
jnp
bswap
push
xchg
jb
aas
stc
push
into
movsb
in
sbb
bound
jle
leave
dec
jmp
fbstp
enter
push
pop
lods
mov
orb
xor
pop
jl
outsl
sbb
movsb
cmp
cmp
xor
inc
dec
pop
roll
or
push
add
jg
fisttpl
int
scas
push
rorb
push
pushf
gs
fimull
pop
dec
ja
psraw
xchg
mov
add
pop
xor
addr16
add
int3
test
ljmp
cmp
dec
test
pusha
mov
cmp
adc
xchg
cmp
cld
sbb
push
and
mov
sbb
sahf
push
jg
test
das
xchg
mov
scas
divb
data16
shlb
mov
mov
cmp
sub
shlb
lds
les
negb
mov
xorl
jge
mov
xchg
daa
add
outsb
lea
jl
cmp
mov
sbb
pop
fistpll
aad
ret
xchg
test
pop
rclb
outsb
lret
inc
insl
or
imul
xchg
adc
pop
fstpl
bound
mov
push
js
rep
fisttpl
mov
stc
loopne
or
pop
mov
fxch
iret
sbb
add
jo
subl
and
cmp
fstps
cld
movsb
mov
and
aas
sbb
jb
ror
shl
enterw
loop
repnz
sbb
pop
dec
aaa
cmp
mov
je
jne
loope
sbb
jecxz
daa
ljmp
test
sub
fsubs
pop
int3
push
and
lahf
add
dec
and
in
sub
je
ljmp
jle
or
add
adc
shl
jb
pop
push
pop
adc
mov
or
ds
cmpsl
mov
add
xchg
dec
icebp
mov
sbb
mov
jb
xchg
cwtl
imul
cmpsl
pop
fidivs
fnsave
xchg
mov
sahf
lret
cmpsl
xchg
mov
or
sti
pop
xor
negb
mov
jae
jne
into
loope
les
lahf
inc
call
mov
inc
sarl
sub
cmp
fs
mov
ja
xor
push
gs
fs
push
push
xchg
xchg
mov
push
xlat
mov
fildll
sub
xorl
mov
sbb
jg
sub
lret
lds
or
stc
cmp
mov
aaa
js
xchg
in
sbb
insl
jl
mov
stc
outsl
jle
push
jbe
inc
imul
icebp
lods
inc
sbb
popf
cmc
icebp
jle
inc
sarb
sbb
mov
enter
sbb
sub
pop
into
pop
or
inc
or
pushf
mov
shll
mov
orb
smsw
push
fs
testb
fstpl
add
out
push
xor
aad
in
jb
ss
and
cmp
mov
in
int3
daa
shlb
xchg
repnz
mov
adc
sub
call
pop
cs
push
and
mov
cmpsl
lcall
pushf
pushf
gs
cmp
out
xor
gs
jmp
inc
sub
movsl
lods
jle
or
movsl
gs
cmp
decl
pop
xchg
xchg
push
xor
mov
movsb
sbb
lock
nop
orl
imul
and
xor
lret
loopne
pop
pusha
rcrb
cmp
sub
cmp
dec
mov
xchg
jecxz
testb
test
lods
lock
sbb
fadd
insl
not
pop
push
cmp
sub
jo
push
imul
nopl
mov
push
rclb
or
xchg
xor
fwait
jo
lcall
pushf
mov
sbb
mov
in
fcoms
push
adcl
push
push
add
fs
pop
or
mov
repnz
adc
sti
xor
fisttpl
mov
xor
sub
inc
aam
add
fistl
lret
mov
cwtl
stos
sub
mov
jno
fucomp
movsb
idivl
lods
cld
mov
jge
or
imul
xor
xor
pop
fstl
outsl
inc
shr
xchg
sub
mov
mov
cmp
mul
adc
in
mov
mov
in
sub
sub
aam
cmp
addr16
adc
cmp
test
add
into
scas
roll
xchg
cmp
sbb
and
fisttpl
out
xor
inc
rcrb
push
dec
scas
xor
test
sub
testb
icebp
gs
fsubp
jmp
dec
repz
negl
sub
out
dec
fstpl
jl
xor
popa
pushl
dec
es
lret
pop
in
dec
xor
sbb
cmc
pop
imul
cli
mov
xor
push
xchg
rclb
outsl
popl
sub
add
ja
cmp
adc
in
movsl
pavgw
push
dec
or
cmp
test
add
cmp
aad
and
push
test
lods
xchg
scas
adc
push
pop
fidivl
outsl
daa
inc
xor
sub
and
xchg
mov
sbb
inc
and
dec
test
push
aaa
out
insb
xor
xchg
cmp
jecxz
adc
test
jbe
cmp
sub
mov
test
lret
rol
adc
movsb
arpl
imul
aam
mov
jne
sub
xor
jge
push
sbb
mov
inc
dec
push
cltd
andb
imul
mov
mov
ss
fcomps
into
mov
aam
mov
std
jmp
xchg
cltd
popf
mov
pop
jge
jae
mov
and
cs
repnz
into
dec
pop
mov
add
lret
out
cmp
shlb
mov
into
jle
fbld
mov
pop
daa
movsb
in
test
fidivs
mov
mov
cmp
xor
imul
fstps
mov
fisttps
cmp
daa
js
insl
lods
cmp
mov
cmp
inc
add
add
imul
push
loope
icebp
inc
sub
pop
or
push
in
pop
idivb
lcall
jb
cmp
outsb
test
sbb
cmpsl
testb
call
xor
jo
ja
imul
sbb
sti
mov
sub
adc
adc
mov
insb
pusha
in
inc
pop
adc
std
jnp
stos
les
pop
xor
jge
jo
dec
dec
dec
or
lret
jnp
dec
jo
sub
pop
pop
jg
test
je
ljmp
addr16
mov
insb
dec
fs
inc
shll
mov
fbld
outsb
ret
jg
imul
mov
orl
mov
sbb
add
cmpsl
sbb
mov
sub
or
push
lret
xor
jle
jbe
mov
lcall
sbb
sub
mov
dec
push
inc
adc
insl
jecxz
dec
sbb
xchg
jb
xor
iret
ja
mov
sbb
mov
xchg
stos
inc
cltd
add
and
mov
shrb
ficompl
or
xor
adc
aas
ljmp
out
jno
mov
mov
iret
repnz
andb
inc
das
jb
sbb
mov
int
outsb
mov
repz
hlt
clc
xlat
push
sub
sub
and
mov
sahf
adc
jmp
cmp
test
mov
add
push
xor
add
push
pushf
push
hlt
inc
xchg
mov
push
mov
or
sarb
push
imul
inc
fldenv
xor
cld
je
sub
cmp
ja
mulb
cwtl
and
cmp
nop
mov
xchg
mov
add
lods
jne
in
jns
jmp
push
inc
or
push
addl
pop
xor
in
xor
dec
dec
lock
outsb
dec
daa
fwait
js
outsb
cmp
iret
xchg
add
and
cmpsb
mov
test
inc
push
fsubrs
testb
xor
aas
ret
int3
ja
sbb
les
lods
xor
cli
xchg
sub
push
and
sbb
arpl
daa
xchg
pop
out
jae
pop
fbld
in
mov
cmp
mov
dec
or
movsl
int
pop
cmp
mov
adc
mov
add
add
adc
add
push
pop
xlat
mov
movsb
cmp
mov
xchg
mov
stc
mov
mov
ja
lahf
addr16
inc
scas
iret
mov
ret
mov
add
xchg
adc
fwait
cli
sub
loope
mov
int3
shl
mov
or
mov
jecxz
stos
jb
jae
push
jno
lock
push
sub
cmpsw
pop
int3
jecxz
xor
stos
lds
inc
dec
inc
inc
and
inc
and
sbb
fnsave
sub
mov
shll
jle
push
stc
sarl
push
inc
jl
fucomp
jp
and
sbb
pop
mov
movsb
xchg
mov
jg
lds
mov
dec
jae
jbe
in
xor
ljmp
dec
aam
inc
sti
jbe
jge
sbb
arpl
sub
iret
xchg
inc
xchg
test
push
sbb
push
push
push
add
xchg
sarb
loopne
xor
pop
negl
stos
push
icebp
in
sub
xor
loopne
push
or
leave
ret
popl
push
enter
dec
aad
test
cmp
cmp
push
mov
xor
mov
das
lcall
imul
push
xchg
adc
nop
pusha
in
fisttpl
inc
sub
or
add
inc
cmc
and
jg
mov
enter
push
js
icebp
mov
jo
lock
dec
fcomps
and
pop
test
les
xchg
rcrl
sti
daa
fdiv
push
mov
inc
cld
outsb
jne
mov
add
movsb
mov
leave
stos
stos
jmp
jg
loop
jg
xor
arpl
dec
lods
mov
cld
xor
xchg
pushf
push
or
addr16
incb
call
or
mov
movsb
mov
repz
dec
add
jmp
dec
mov
push
mov
or
lret
repnz
xor
jle
aaa
adc
aam
dec
inc
rcl
dec
lea
xor
ljmp
incl
add
ljmp
mov
cmpb
insb
add
pusha
popf
inc
test
insb
lret
jmp
push
roll
and
xchg
imul
pushf
out
jg
sub
mov
dec
and
cltd
iret
xor
repnz
and
mov
clc
adc
mov
and
popa
loopne
mov
lahf
popa
jmp
mov
mov
jge
push
dec
sti
mov
ss
add
cmp
pushf
dec
in
fwait
std
and
push
and
or
adc
or
call
pop
gs
imull
xchg
or
gs
or
mov
add
aad
sti
sbb
arpl
inc
jmp
outsl
nop
int
adc
dec
test
shll
adc
insb
pop
lds
dec
xor
aas
ja
idivb
jle
out
std
int3
scas
int3
or
adc
fidivrs
in
hlt
xchg
inc
mov
cltd
push
stc
xchg
in
scas
shll
shl
std
imul
inc
pop
lock
test
jp
add
lock
gs
pop
stc
loope
mov
cli
lods
fucom
je
xchg
add
jmp
push
mov
mov
fmuls
push
cltd
mov
je
push
mov
inc
add
push
rcll
or
andl
mov
bound
xor
dec
push
mov
lahf
dec
sub
repnz
jnp
or
mov
into
fiaddl
inc
std
push
loopne
mov
jle
mov
adc
popl
xor
leave
mov
ss
inc
cld
ret
es
sub
push
pop
loop
fisttpll
lock
lret
sbb
lds
hlt
loopne
lret
movl
pop
std
repnz
pop
or
jge
fsubrl
dec
cmc
inc
or
push
fs
mov
rcll
sub
jecxz
inc
push
dec
inc
decb
xchg
fisubl
sbbb
in
fldcw
cmp
add
sub
fiaddl
push
out
leave
push
lods
dec
nop
ficoms
sbb
ja
sub
dec
lret
pop
adc
ss
bnd
push
pop
add
aad
mov
jmp
mov
cmpsl
xor
xchg
mov
movsl
or
outsl
jns
cmp
out
inc
rolb
mov
cmc
xor
int3
inc
xor
test
cmp
add
push
xchg
loopne
bnd
mov
mov
mov
or
cmp
inc
push
sub
cmp
push
push
pop
mov
push
test
jecxz
lahf
pop
ss
shrb
push
pushf
aad
aam
movsb
push
push
xlat
pop
pop
pop
div
cmp
imul
jns
or
adc
out
mov
xchg
cmp
mov
into
dec
adc
jo
inc
jbe
cmp
mov
lret
push
leave
out
cmp
or
daa
jae
pop
cmp
jno
mov
sbb
das
dec
xorl
pusha
inc
aas
mov
add
fbld
fmul
sbb
adc
je
mov
out
and
lods
mov
adc
jmp
inc
xchg
mov
dec
ss
sub
jbe
xor
cwtl
push
jmp
push
cld
pop
daa
and
mov
sbbb
test
push
or
mov
xor
fs
push
cmp
xor
mov
shlb
or
xchg
lret
push
btr
xchg
add
daa
test
dec
add
add
inc
sub
xor
inc
and
aas
mov
mov
jbe
or
arpl
lods
push
push
rolb
xchg
mov
sub
cmpsl
jecxz
jnp
sti
xchg
push
sub
sub
addb
mov
sahf
pop
pop
mov
loopne
jne
mov
lock
or
ljmp
push
mov
adc
jnp
or
xor
aaa
mov
outsb
xor
jmp
jle
push
movsl
or
mov
rcl
add
rolb
sub
mov
dec
andl
push
lret
fwait
arpl
repnz
adc
sar
in
jae
aaa
cld
sub
and
les
call
out
std
icebp
imul
dec
sub
jnp
dec
pop
add
push
movsl
xor
iret
xchg
xchg
das
xor
cmp
inc
mov
push
push
or
sbb
rcl
data16
mov
nop
inc
cltd
add
insb
popf
pop
aas
cmpb
add
nop
aaa
inc
push
enter
xchg
fsubrs
or
adc
xlat
pop
lods
iret
clc
cmpsb
mov
lahf
or
cmp
gs
setns
lahf
xor
testl
je
push
je
insb
lods
or
repnz
je
shrb
pushf
push
popa
or
adc
cmpsl
pop
test
jl
mov
ret
jno
sbb
mov
je
scas
shlb
xor
xchg
lret
and
mov
pop
xor
mov
jns
push
cmc
pop
lret
std
mov
push
repnz
js
mov
lcall
xchg
cmpsl
outsl
movq
les
out
imul
int3
mov
sbb
dec
push
lcallw
out
lcall
pop
imul
push
mov
pushf
xchg
loopne
ret
in
lds
push
inc
mov
hlt
mov
fs
sti
mov
mov
icebp
xor
popa
push
and
adc
jbe
pushf
pop
aaa
test
stc
decl
ss
nop
fisttpll
mov
dec
out
into
fst
xchg
mov
mov
push
pop
scas
popf
int3
scas
rolb
jnp
xor
mov
fisttps
xchg
cs
pop
jp
sbb
arpl
in
outsl
scas
jg
movsl
sbb
popf
jl
sbb
adcl
repnz
sbb
sub
push
andb
mov
push
es
jno
mov
xor
sub
and
and
icebp
iret
pop
inc
add
idivl
fwait
mov
je
mov
and
xchg
xlat
push
sbb
loope
cwtl
lds
hlt
iret
aam
jl
lds
iret
imul
rcrb
rcll
inc
sub
js
rcll
aam
xchg
ret
adc
jp
ficoml
iret
jle
cwtl
mov
xchg
push
and
cmpsl
test
pop
or
ret
mov
std
cmpsl
out
mov
jnp
sub
sbb
sbb
out
cmp
icebp
sbb
fdivrl
lcall
lea
rcr
int
movsb
int
mov
and
fnstenv
mov
adc
scas
xor
and
xor
ds
repz
mov
xchg
push
adc
push
cltd
rorb
insl
ljmp
jb
adc
aam
push
lcall
repnz
xchg
add
bound
in
or
jmp
and
sbb
pop
mov
in
aas
adc
ret
inc
mov
xlat
mov
adc
mov
jns
sub
push
push
xchg
ficompl
popa
sbbl
xor
js
dec
push
dec
add
test
ret
push
mov
push
test
in
cmp
mov
aaa
fldl
aad
jns
mov
jno
outsb
cmp
and
mov
sub
adc
pop
rol
lret
push
aad
in
mov
add
add
cmp
or
xchg
sub
jb
test
pop
daa
dec
std
xchg
dec
lods
mov
add
push
test
rcr
out
out
push
lret
pop
lcall
popa
lods
das
xor
dec
inc
ret
push
mov
fsts
mov
js
pop
jl
out
insl
or
push
jle
in
inc
pop
icebp
xor
cmc
jno
pop
sub
jbe
adc
sbb
jae
push
mov
insl
daa
lods
inc
or
lods
dec
push
push
fistps
in
sahf
insl
das
inc
push
and
sbb
out
inc
stos
leave
add
or
and
cmc
loop
loopne
or
insl
fwait
xchg
les
push
loope
sub
pop
or
mov
ss
int3
sbb
pop
mov
sub
jo
stos
fists
add
rorl
inc
inc
out
in
and
cmpsl
loope
orl
pop
movsb
push
test
sub
fsubrs
cmpsl
neg
inc
ret
mov
int
xchg
fcmovnbe
pop
aad
mov
cmp
outsl
sub
sub
jl
pushf
scas
lods
and
in
xor
mov
sete
in
sub
mov
out
cltd
movsl
test
out
aad
loopne
add
stos
pop
lea
xor
push
cmpsb
xchg
xchg
mov
mov
fwait
add
inc
cmp
mov
xchg
js
pop
push
scas
fwait
pop
lods
data16
cmpsb
cmp
clc
pop
mov
inc
push
xlat
out
sub
pusha
stc
mov
fstps
test
dec
stos
add
cmpl
loope
inc
addl
pop
push
sub
hlt
fldt
push
aam
mov
pusha
repnz
pop
cmp
mov
pop
mov
lret
jl
add
xchg
jae
xor
js
jp
push
xchg
and
adc
and
js
cmp
push
sahf
mov
xlat
fnsave
adc
lret
dec
cmc
xchg
cmp
lahf
nop
lahf
pop
adc
pop
das
push
jno
jne
repz
hlt
add
mov
jnp
inc
out
arpl
into
add
lods
pop
iret
out
lret
out
cmp
or
and
stos
int
out
xlat
stc
jo
jno
enter
in
jecxz
stc
mov
mov
arpl
js
or
mov
notl
fistl
stos
jg
repz
jp
cmpsb
dec
pop
jmp
mov
pop
je
jecxz
loope
adc
dec
mov
inc
mov
mov
push
cmc
mov
sub
push
fnsave
leave
jbe
test
fbstp
std
mov
cmp
cli
sub
jl
out
arpl
adcb
push
adc
test
clc
mov
shl
inc
shll
or
adcb
test
mov
das
sahf
loop
loop
jne
jo
mov
mov
int3
add
pop
xchg
sarl
inc
jp
pop
mov
lds
hlt
sbb
add
mov
das
imul
and
ljmp
adc
and
pop
pop
dec
fwait
lods
push
popf
pop
roll
mov
dec
mov
outsl
add
mov
cmp
ficoms
sahf
xor
push
jno
jo
bound
jecxz
in
nop
mov
mov
outsl
es
int
add
xchg
ret
or
cmc
fmull
jo
jg
mov
addl
mov
in
pop
out
test
cmp
mov
mov
ljmp
arpl
dec
lea
int
cmp
lds
cmp
es
sbb
jp
ss
push
cmp
xchg
push
mov
jae
aas
jle
icebp
mov
inc
cmp
fs
lock
adc
and
mov
jb
cmp
addr16
or
in
adc
push
xchg
or
inc
xor
out
mov
xchg
inc
push
xor
jno
scas
pop
jl
sub
cwtl
jg
jecxz
stc
dec
xchg
pop
loopne
fwait
mov
shrb
jmp
ret
add
imul
add
sbb
ljmp
es
fdivrs
cmp
test
loope
ljmp
adc
scas
jbe
add
inc
xchg
push
jne
push
xor
xor
push
dec
mov
mov
add
xor
or
sub
xchg
lret
xchg
pop
repnz
test
cmp
lds
sub
ds
cmpsl
sub
sbb
stos
cwtl
inc
movsb
pusha
adc
repnz
lcall
xor
out
mov
xor
in
test
and
clc
mov
in
daa
test
fs
mov
jp
leave
out
mov
subb
imul
cmp
fs
lcall
mov
push
cmp
xor
enter
dec
dec
pop
jg
inc
pop
mov
into
xor
iret
pop
das
push
inc
inc
inc
cld
cmp
popf
add
pop
cmp
add
enter
repnz
cwtl
test
sub
push
cmp
int
sbb
mov
push
xor
jnp
mov
stos
js
push
decb
inc
or
outsl
nop
add
cmp
lods
inc
push
push
inc
jg
pop
pushf
stos
mov
loopne
cmp
mov
xor
imul
pop
cltd
jbe
add
jnp
lahf
imul
jbe
jl
jae
les
cmpsl
xor
faddp
movsb
sub
ja
lret
clc
and
fsubrs
xor
cmp
adc
or
xchg
gs
push
int
int
out
add
pop
cli
xchg
hlt
lods
shlb
xor
test
lahf
test
sub
stos
add
sahf
shrb
popl
testl
mov
je
push
std
pop
xchg
inc
xor
mov
hlt
push
test
pop
pop
nop
mov
pop
adc
sti
inc
and
jnp
bound
adc
mov
mov
mov
add
das
inc
xor
dec
inc
xchg
adc
push
daa
sub
xor
incl
mov
stc
xchg
popf
stos
daa
lret
xor
std
jnp
cmp
popa
and
or
adc
repz
cmp
add
jl
fucom
jbe
movsl
lret
jl
outsb
out
xor
mov
xchg
adc
subl
dec
ds
cs
insb
cmc
shrl
scas
negl
pop
stc
mov
adc
aaa
sbb
sbb
add
call
movsl
xor
xchg
popa
incl
loop
inc
stos
repz
arpl
fldcw
xchg
js
adc
or
ss
idivb
rcrb
stos
loop
out
xor
push
sahf
scas
call
mov
cmp
out
cmpsl
xchg
test
jo
push
mov
lcall
in
aas
xchg
pop
dec
add
pop
test
cmp
sti
out
lock
push
or
fldcw
es
fdivr
enter
test
jnp
pop
push
cltd
fsubrp
dec
xor
adc
add
mov
jmp
jae
mov
jg
loop
aad
cs
jae
mov
ret
adc
cmp
addr16
adc
xchg
mov
xor
movsl
and
add
enter
shll
pop
jmp
inc
and
imul
xchg
mov
jne
dec
push
mov
mov
push
mov
mov
cmp
fdivl
sahf
jbe
decl
bound
minss
andb
popf
add
orb
outsb
test
movsl
imul
ljmp
andl
cmc
lahf
or
popa
pop
xor
add
loop
or
fldenv
lock
ret
out
pop
xchg
cmp
jnp
cmpsl
inc
and
add
xlat
adc
pop
jns
mov
mov
hlt
out
lcall
mov
push
xchg
xchg
sub
mov
sar
movsl
lea
cmp
filds
adc
push
mov
push
or
fwait
bound
fmull
aas
in
nop
leave
cld
addr16
adc
movsb
outsl
popf
cmp
shrl
and
ljmp
xlat
sub
scas
or
int
leave
pinsrw
bound
and
adc
imul
in
dec
pop
divl
mov
xchg
imul
adc
jg
cmpsl
mov
jmp
xchg
xchg
aas
xchg
push
ficomps
inc
push
shll
popf
mov
or
and
adc
or
add
sbb
sbb
cmp
into
arpl
cltd
push
pop
cmp
push
hlt
sti
dec
and
mulb
inc
icebp
mov
stos
mov
insl
sbb
push
xchg
lahf
jle
addb
xor
cmp
repnz
in
movsb
sahf
test
sbb
scas
pop
jno
fstl
xchg
leave
out
fcoml
stc
lock
mov
movsl
sarl
adc
add
call
adc
xor
js
popf
xor
loop
enter
inc
and
shr
in
cmp
nop
daa
or
xor
in
pop
clc
pop
js
and
push
inc
add
scas
xchg
cmp
es
mov
stos
insb
pop
popa
jae
push
icebp
dec
shlb
ds
fadds
inc
aam
or
shlb
loopne
shl
hlt
jg
rolb
sub
xchg
mov
push
ret
mov
mov
rcrb
in
pop
and
call
fcmovbe
push
mov
push
mov
sub
pop
lret
loopne
adc
mov
jge
shrl
xchg
aad
fidivs
in
xchg
rcll
or
es
pop
divl
outsl
daa
add
pop
cmc
add
mov
fildl
lcall
mov
je
sub
and
dec
mov
jg
pushf
int3
push
arpl
cmc
or
divl
aas
mov
sbb
mov
cmp
outsb
or
into
das
in
add
cmp
das
outsl
push
push
aam
mov
pushf
mov
jae
filds
xchg
imul
mov
add
rcll
loope
fisttpll
clc
test
fdivp
xor
andl
jg
pop
lods
push
rsm
stos
ds
jno
rcrl
loope
xchg
ret
xorb
dec
lock
or
inc
loopne
ja
js
imul
or
lcall
xor
jp
test
ss
push
lea
push
loopne
jns
mov
fcmove
pop
jge
sub
nop
adc
fiaddl
cs
sbb
add
jbe
sub
sbb
testb
dec
dec
scas
mov
pop
xor
adc
packsswb
jnp
popf
pusha
jp
xchg
jmp
fdivrs
pop
or
add
lret
cs
inc
shlb
push
movsb
or
dec
dec
dec
xchg
add
cmp
mov
enter
popf
pop
and
jle
in
jg
mov
imul
les
cli
nop
pushf
sub
movl
sarl
jecxz
and
sets
loope
pop
inc
ret
xchg
aam
mov
mov
jmp
mov
adc
mov
push
adc
mov
fsubrs
fidivrs
push
lea
outsl
mov
push
aad
mov
insb
out
lock
xlat
adc
cmp
std
xor
jb
sti
add
xorl
mov
pop
in
dec
push
clc
ja
jge
insb
icebp
add
adc
add
inc
sub
xor
out
mov
push
lods
enter
xor
fwait
decl
mov
or
sub
xchg
push
sbb
iret
int3
add
adc
insl
ljmp
lock
and
call
xchg
outsl
rcll
decl
lcall
or
es
and
ja
hlt
xchg
aam
inc
insb
imul
subl
cmp
xor
inc
adc
testb
test
push
in
add
dec
cmp
into
ret
inc
lret
out
push
mov
pop
stos
and
fildll
and
xchg
rcll
jl
cld
pop
cld
add
popf
jno
dec
cltd
shlb
lock
js
repnz
or
imul
test
loope
xchg
mov
sub
int
mov
and
adcb
add
or
mov
xor
sarb
sub
sti
cmp
fcom
lds
addr16
xchg
testb
or
cmpsl
sbb
icebp
xchg
and
push
mov
stos
fsubrp
pop
mov
jbe
popl
push
xchg
mov
xchg
or
insb
imul
or
and
jbe
xor
flds
fs
and
lcall
xor
sti
mov
icebp
sub
shr
cltd
cld
dec
mov
das
ss
xchg
adc
mov
mov
mov
xchg
outsb
ret
fdivrs
pop
call
std
pop
fstp
xor
enter
jge
test
rolb
cmp
jmp
sbb
xchg
mov
jle
push
sbb
stos
push
mov
add
in
test
cmp
les
sbb
rorl
push
pop
sbb
sub
add
out
and
and
push
clc
push
adc
push
fwait
mov
or
add
fstpt
mov
jb
ret
imul
hlt
popa
add
out
lret
xorb
jge
jmp
mov
jo
adc
cmp
mov
lods
stos
pusha
int
adc
stos
mov
push
add
mov
ljmp
sub
ret
popf
cmpsb
or
notb
xor
fcom
adc
xor
divl
jno
les
ds
filds
pop
aas
das
sbb
call
add
xchg
aaa
and
int3
adc
pop
xchg
bound
cwtl
imul
mov
lock
sbb
xlat
inc
jb
jae
xor
xchg
xor
scas
lock
cltd
pop
loopne
push
jnp
mov
int
dec
and
insl
lret
inc
mov
xchg
add
mov
mov
iret
adc
fsubl
mov
or
loop
adc
xchg
push
cmp
fmul
ds
ja
pop
das
fimull
call
jmp
inc
data16
adc
dec
sbb
fcomps
sub
mov
rorl
lds
cmc
aad
scas
and
xor
and
xor
sbb
add
mov
lea
push
pop
pop
dec
outsl
addr16
pop
int
xlat
cli
jecxz
cmp
xchg
pop
jnp
jle
mov
test
pop
iret
sbbl
push
push
cltd
mov
in
mov
xor
je
popf
xor
mov
mov
das
fs
fdiv
popf
bound
add
adc
les
out
test
imul
inc
leave
sub
lods
or
cmpsb
push
lock
inc
inc
cwtl
mov
pop
loop
clc
cmp
ljmp
push
andb
insb
cmc
pop
popa
push
testb
les
push
pop
arpl
jmp
cltd
aad
push
test
adc
cs
insl
inc
sbb
decb
ljmp
pop
sahf
dec
out
xchg
push
add
cmpsb
rorl
movsl
xor
mov
dec
push
fildll
or
sarb
adc
push
add
pop
pop
xchg
dec
out
pop
popa
xor
cmc
into
pusha
enter
stos
mov
push
imul
mov
dec
and
jmp
mov
inc
pusha
cmp
enter
sub
xchg
inc
adc
pop
or
pop
stc
fcomps
cmp
sbb
or
int3
ds
ud1
dec
sahf
cmp
lret
mov
adc
fs
mov
rolb
mov
xchg
jns
sub
fwait
vmread
imul
push
adc
lods
inc
fwait
insb
cwtl
sbb
push
cmpsl
add
fwait
inc
bound
mov
pop
or
sti
jb
cmp
jle
jne
int
and
add
push
jge
shll
je
adc
fs
pop
into
mov
inc
pop
call
dec
jle
ret
adc
nop
subb
xchg
int3
movsb
xchg
pop
mov
sbb
and
xor
jg
mov
lods
xchg
pusha
jge
cli
sti
enter
cmpsb
repnz
add
popa
or
add
hlt
mov
dec
loopne
call
shll
sbb
and
pop
lock
cvtps2pd
xchg
rorl
jg
and
adc
mov
pop
movsb
mov
idivl
cld
das
xlat
fmull
jle
ret
icebp
movsb
sbbb
aam
in
sbb
and
pop
lds
xorl
clc
fldl
cmp
xchg
fsub
repnz
push
mov
scas
mov
stos
call
dec
idivb
and
mov
sahf
add
shrb
xchg
push
add
imul
mov
cmpsl
scas
add
inc
push
jg
call
fnsetpm(287
push
mov
stos
insl
loope
cmp
ficompl
in
outsb
push
fidivs
lods
mov
pusha
sub
push
jns
cmp
fildll
test
in
pop
pop
push
inc
pushf
int3
mov
popl
xchg
jge
addr16
out
add
pop
jae
pop
push
hlt
adcb
push
mov
cmpsl
daa
mov
dec
fwait
cltd
jbe
test
ds
cmc
mov
xor
shrb
push
gs
orl
add
pop
outsb
xor
dec
add
call
mov
adc
pop
mov
lock
pop
mov
cmp
pop
xcrypt-ctr
cmpsl
fdivl
xchg
pop
jne
xor
add
sarl
jne
or
push
imul
push
sub
cwtl
outsl
faddp
out
sub
and
pop
push
lock
test
mov
mov
insl
jne
out
inc
mov
es
lods
jmp
fs
push
fs
adc
icebp
lret
ret
inc
addr16
push
int
sbb
into
sbb
sbb
hlt
es
push
rcrl
push
lcall
push
mov
jmp
or
call
cmpsl
push
cmp
pop
jecxz
push
rcr
cld
flds
fists
test
dec
lret
sti
push
xor
xchg
popf
or
mov
sbb
popf
frstor
cli
dec
push
inc
in
xchg
stos
sbb
or
int
ret
js
or
ljmp
iret
mov
aas
loop
pcmpgtb
in
mov
pop
daa
sub
mov
mov
lock
stos
xor
shl
cmpsb
jo
lds
lds
out
cmp
mov
in
fistl
adc
sbb
test
push
jae
inc
mov
aad
repnz
mov
popf
movsb
out
lret
out
jge
test
jo
cmpsl
push
inc
sbb
mov
mov
call
pop
cld
add
sti
push
stos
sub
mov
aam
mov
repnz
dec
imul
cmp
insl
arpl
sub
addb
mov
or
aas
cmp
sub
pop
cmpsl
rcr
inc
lret
cmp
inc
pop
and
and
leave
mov
add
push
and
loopne
xchg
jp
shrb
mov
cmp
jb
ret
pop
hlt
lret
imul
or
sbb
sub
mov
inc
mov
cmp
addr16
xchg
add
mov
dec
ret
and
sbb
cmp
mov
mov
push
jno
push
mov
mov
xor
xor
jle
sbb
das
xchg
movsb
mov
mov
mov
and
int3
dec
sti
sub
daa
fisttps
or
xchg
dec
jb
add
loop
cmpsb
mov
sub
mov
jecxz
mov
fs
xchg
out
aad
jle
add
and
in
scas
xlat
lahf
pop
lds
adc
adc
xor
mov
movsb
pop
mov
xchg
mov
sub
push
pop
in
pop
mov
shrb
fsubrp
stos
lods
xchg
std
mov
mov
mov
loopne
inc
mov
push
f2xm1
or
jno
add
adc
test
fcoms
aas
sbb
cmpsl
or
pop
mov
out
lds
ror
fadds
mov
mov
cs
sub
xchg
sub
xchg
xor
xor
nop
inc
fildl
xchg
lcall
sub
adc
sbb
adcb
mov
cmpsb
mov
cmp
int
bound
cmpsl
sub
fidivrs
xchg
adc
loopne
or
inc
mov
pop
movsl
dec
inc
ret
jbe
jae
icebp
pop
sahf
sahf
add
les
into
testb
sub
loop
sbb
jecxz
or
aas
sbb
mov
int
xor
enter
mov
sbb
dec
or
mov
xchg
mov
shlb
cmpl
dec
and
sub
cli
and
inc
out
repz
lret
cli
xchg
xchg
in
adc
addb
fcomp
sbb
xchg
popf
mov
std
cmc
add
ss
push
pop
idivb
sub
lock
adc
adc
xchg
jle
inc
sbb
adcl
cwtl
enter
call
scas
loopne
and
push
arpl
mov
bnd
mov
data16
lea
ja
test
lret
pop
aam
inc
daa
add
mov
sub
xlat
mov
into
in
push
insb
mov
adc
in
int3
test
pop
cmp
fcoms
dec
in
in
ljmp
dec
xor
popa
or
imul
rorl
xor
sub
adc
into
lcall
jne
gs
fcmovnb
testb
movl
push
xchg
outsb
push
arpl
shll
jge
pop
dec
xor
fcmovu
adc
xchg
fwait
pop
fistl
and
inc
push
sbb
daa
push
push
add
rcr
test
xchg
ficoml
pop
cmp
inc
fmull
dec
repz
sub
push
js
sbb
enter
scas
pop
arpl
mov
mulb
mov
fs
arpl
enter
rcrl
fndisi(8087
sahf
push
inc
js
cmpsb
inc
and
or
into
sbb
dec
or
lcall
mov
int
lahf
and
ja
push
imul
push
and
inc
daa
mov
les
leave
xor
fwait
sbb
rcll
mov
mov
mov
jmp
inc
sbb
xadd
enter
inc
xchg
fdivrl
mov
mov
dec
add
ret
pop
mov
out
daa
fistpll
popf
popf
or
inc
inc
loop
pop
xor
mov
dec
or
sub
addr16
xchg
jns
lret
addr16
in
fidivrl
mov
cld
lea
inc
push
or
and
cs
iret
imul
imul
sub
pop
imul
test
jne
xor
lods
cwtl
push
repnz
add
mov
daa
and
pop
and
mov
push
push
sbb
mov
ja
in
testb
xchg
dec
clc
mov
scas
xchg
pop
add
stos
ret
push
inc
arpl
add
in
inc
jle
pop
pop
divb
jle
test
xlat
notb
ficoms
sbb
orb
stc
and
rol
fisubrs
pop
add
scas
data16
mov
mov
or
add
fdiv
jle
jecxz
sub
int
mov
scas
movl
inc
mov
mov
adc
ret
inc
inc
ja
cli
xor
stos
sbbl
push
ficoml
movsb
shlb
out
es
sahf
imul
sti
mov
mov
cmc
stos
push
add
subb
fimuls
pop
push
dec
in
or
inc
in
push
inc
xchg
sub
push
repnz
cltd
icebp
cld
xchg
shl
outsb
movsl
and
ljmp
xchg
movzbl
shl
int3
movsl
je
or
cld
xor
int
pop
jae
stos
push
add
fsts
cmp
popa
add
push
lods
jecxz
push
lea
ret
cmp
test
mov
dec
repz
adc
lds
std
out
aad
fsubrs
cmpsl
adc
sub
and
loop
sbb
ret
je
aad
lock
push
stos
daa
xor
lcall
xchg
push
mov
dec
cmp
pop
pop
ljmp
orl
ja
jecxz
xor
or
mov
mov
mov
popa
les
imul
push
xor
mov
sub
out
outsb
cmpsb
sub
lock
test
shll
sahf
fwait
jg
cmp
mov
shlb
pusha
mov
pop
jae
ja
add
jnp
pop
repz
rcll
jb
mov
test
insb
sub
push
repz
aam
add
jbe
mov
popf
aad
repnz
add
jecxz
into
divl
ja
ss
shl
rcrl
adc
xchg
xchg
xor
jl
shrb
mov
ret
push
nop
mov
push
dec
imul
cwtl
pop
mov
call
sbb
xchg
scas
push
jae
pushf
in
cli
xchg
inc
imul
add
rorb
addr16
dec
inc
repz
mov
loop
icebp
xchg
xor
jno
lret
add
shlb
bnd
cltd
dec
bound
adc
add
jb
sbb
repz
jmp
scas
scas
sub
jle
xchg
jae
pushf
js
int3
pavgb
jle
dec
sti
bound
push
xor
sbb
test
xor
add
sub
ds
lret
adc
adc
cmc
inc
xlat
push
rcl
ja
stos
jno
add
das
cmpb
dec
aaa
inc
push
int
dec
mov
bound
cmpb
mov
out
fdivrl
push
cmp
lcall
pushf
sbb
test
xchg
mov
cmpsb
cld
stos
xchg
call
sarl
mov
pop
lods
test
cmpsl
mov
mov
rorb
xor
mov
clc
cmc
and
cltd
fldcw
mov
aam
ja
adcb
adc
cmp
test
dec
aam
gs
dec
sahf
scas
mov
mov
pop
mov
loope
ds
xor
pusha
cmp
mov
cmp
inc
lods
in
popa
cld
push
ret
cs
aaa
adc
movsl
shrl
movsl
mov
jno
scas
aam
mov
mov
fdivrp
mov
sti
and
inc
inc
and
mov
loop
or
mov
mov
cli
repnz
xlat
dec
imul
pusha
movsb
dec
push
sbbb
sti
int3
ret
inc
icebp
nop
cmp
add
ss
push
sbb
loope
pushf
add
jbe
push
add
insl
mov
gs
mov
jnp
andb
in
fldcw
and
adc
mov
jnp
mov
add
addr16
mov
jecxz
ficoml
xor
sbb
add
add
push
sbb
xchg
push
lds
push
jb
pusha
mov
ljmp
ljmp
cmp
jl
in
jle
sub
in
and
mov
jns
adc
xchg
dec
push
xchg
pop
loope
pop
loopne
scas
ret
enter
pop
mov
insb
pushf
in
stos
adc
inc
mov
push
cmp
mov
enter
push
xor
pop
call
sub
adc
mov
dec
dec
jp
clc
loope
ljmp
xlat
popa
lret
icebp
add
mov
push
adc
jge
call
pop
hlt
std
push
mov
sbb
xchg
out
addb
push
cmp
push
jno
mov
mov
lods
mov
outsb
add
xchg
loope
shl
jno
xchg
or
cwtl
cwtl
jb
adc
push
xor
out
sub
loop
test
inc
push
inc
outsl
int
scas
and
adc
outsb
mov
popa
rclb
pop
idiv
ds
fnstsw
insl
iret
test
fistpll
out
pop
out
movsb
nop
add
push
push
sub
orl
sub
loop
adc
scas
xlat
mov
xor
call
jmp
cmp
data16
int
test
sbb
out
sub
insb
test
in
sarl
jp
cmpsb
out
lcall
sbb
scas
cwtl
enter
ret
xor
pop
fs
dec
mov
imul
iret
mov
in
mov
lods
pop
inc
dec
shl
inc
lods
push
add
jo
and
daa
inc
scas
mov
aam
cmp
sarl
scas
and
mov
mov
inc
nop
shlb
popf
inc
jbe
mov
push
outsl
adc
aas
xchg
popf
or
push
and
pop
daa
rcrl
out
dec
add
mov
adc
inc
push
ss
mov
add
sar
or
loope
in
aas
mov
xor
out
add
cld
pop
pop
scas
lock
sahf
sti
js
divl
out
imul
xchg
inc
jl
xchg
test
xor
xchg
movsl
iret
sub
mov
jae
and
inc
mov
mov
in
sbb
and
fnstsw
or
jae
out
mov
jl
ds
or
negl
xor
repnz
sbb
rcll
push
mov
sbb
fisttps
fistpll
push
xchg
dec
jmp
pop
and
mov
mov
dec
std
int
arpl
sbbl
pop
jecxz
jne
mov
inc
sub
push
aam
cwtl
mov
je
fdivrs
stc
mov
cld
in
je
and
inc
lret
js
adc
pop
loop
pop
ss
repnz
sub
lret
push
pop
xor
jl
add
inc
popa
leave
pop
add
das
cmp
imul
mov
shl
aas
cmpsl
pop
movsb
call
scas
fdivl
out
and
mov
les
push
adc
testl
es
and
out
mov
jb
enter
push
aaa
and
and
add
adc
insb
push
jp
loopne
or
sub
jp
xchg
mov
stc
pusha
enter
mov
mov
cmpsl
cmc
xlat
pop
jae
stos
faddp
popa
sbb
jno
test
pushf
lds
and
mov
lea
in
sub
inc
call
push
xchg
inc
mov
cmp
stos
ljmp
mov
xor
mov
dec
adc
sarb
sub
adc
in
jecxz
and
repz
out
inc
jl
daa
mov
call
mov
jmp
in
arpl
mov
inc
cmpsl
add
lods
adc
inc
jo
adc
imul
test
out
dec
bound
add
xchg
es
pop
pushf
push
cltd
jmp
dec
je
lcall
mov
pop
push
enter
in
cwtl
push
pop
call
inc
in
xor
cmp
adcb
pop
popa
out
movsl
stc
mov
mov
ret
jle
xchg
clc
jl
arpl
mov
add
push
adc
add
cmp
cld
inc
test
add
and
or
and
ret
dec
in
stos
sub
jae
insb
imul
mov
mov
js
jle
cltd
cmp
jns
insb
test
mov
xchg
fs
mov
icebp
out
inc
or
dec
shl
sbb
inc
pop
lock
mov
mov
mov
movsb
aad
call
jp
pop
add
push
jge
lods
mov
sub
mov
outsb
imul
shll
hlt
cmp
pop
jge
fmull
fsub
aaa
and
in
int
sub
xchg
push
outsb
ficoms
mov
repnz
fs
mov
addr16
lcall
push
fcomp
stc
ja
aaa
je
mov
std
jmp
loop
push
das
add
push
call
into
ficomps
or
decl
lret
sti
mov
or
push
lock
lea
sahf
insl
pop
pop
sbb
mov
mov
or
ljmp
stos
ficomps
sbb
mov
mov
mul
pop
mov
rcll
cmp
mov
xchg
pop
cmpsb
stos
push
repnz
sbb
mov
test
push
pop
addb
lock
lret
xor
int
fwait
jns
fs
loopne
mov
cmp
adc
pop
je
cmc
icebp
call
pop
repz
test
call
daa
int
cmp
hlt
rol
arpl
jae
jb
shrb
dec
pop
xchg
sbb
xchg
sbb
xchg
sub
enter
movl
aad
jne
in
outsb
daa
adc
movsb
cmp
into
xchg
pop
add
dec
hlt
push
cmpsb
shl
mov
lods
xlat
imul
mov
mov
or
add
repz
jp
rolb
outsl
cmp
sbb
inc
pop
out
dec
xchg
inc
cld
cmc
scas
outsl
bound
jmp
imul
jmp
rclb
es
and
cmp
xchg
xchg
testb
push
adc
cmp
sbb
and
imul
jmp
mov
push
cmp
add
je
add
xchg
xchg
hlt
insl
lahf
jns
popa
inc
cwtl
cmpsb
jb
outsb
in
push
push
subl
add
test
hlt
stos
dec
cmp
int3
jmp
jmp
cmpsb
lea
ja
adc
fiadds
lods
pushf
lret
sub
pop
ja
arpl
sub
adc
or
std
sti
or
popa
fisttps
add
pop
fidivrl
lret
or
rcrb
push
cmpsb
push
call
fdivs
fsubs
dec
cmp
mov
mov
fisttpl
jnp
loope
xor
mov
jns
js
xchg
mov
inc
sub
out
jbe
sbb
pop
sarb
dec
mov
or
aaa
ljmp
adc
ja
mov
lods
sub
incb
mov
iret
ss
mov
lret
cmc
cmc
in
and
les
sahf
and
popf
inc
xchg
mov
dec
xor
and
ljmp
pop
cmp
ljmp
scas
cld
pop
adc
les
mov
mov
mov
push
adc
mov
loopne
cmp
cwtl
jno
lcall
dec
jle
dec
arpl
sbb
push
test
mov
mov
das
lahf
mov
popa
fsubrl
and
shufps
enter
dec
add
lods
pop
jbe
jnp
lock
loope
push
xchg
js
inc
mov
repnz
dec
or
add
xchg
adc
dec
mov
pusha
sub
xchg
in
xor
pop
decb
xchg
jmp
in
xorb
dec
cld
in
xchg
dec
and
scas
push
sbb
sbb
mov
je
xchg
hlt
dec
xorb
add
test
ficoms
sub
lods
xor
mov
orb
push
rcr
add
adc
xchg
mov
std
ss
in
inc
mov
imul
pop
test
gs
imul
xor
call
clc
fisttps
scas
and
mov
sub
pop
dec
sub
lods
inc
mov
sahf
call
mov
push
mov
sbbb
sub
popa
dec
pop
lods
push
fidivrs
jnp
add
incl
call
lret
xor
dec
and
xlat
lret
mov
pop
sub
jmp
mov
add
cmp
pushl
sbb
push
jmp
lock
js
cmp
xchg
jne
sub
mov
xchg
insl
xor
call
xchg
lods
sarb
and
push
sbb
inc
mov
push
inc
ljmp
test
clc
pop
add
push
scas
push
pop
aad
pop
ret
dec
jle
and
jno
jnp
or
or
push
mov
pop
pop
aas
idiv
adc
dec
add
enter
lahf
idiv
jge
shll
popa
nop
clc
negb
sbb
icebp
lock
jle
pop
fs
int3
xor
adc
jno
outsb
iret
push
xor
cmc
or
inc
cli
pop
mov
adc
jno
fdivp
adc
arpl
out
mov
cmp
lret
pop
xor
or
mov
sbb
nop
cmp
and
cld
pop
xchg
leave
aaa
inc
imul
or
or
cs
mov
mov
and
inc
daa
ja
pop
iret
xor
outsb
loop
mov
and
pop
pusha
test
xchg
into
sub
inc
mov
outsl
fidivs
aam
jg
push
rclb
and
jmp
cltd
add
add
sub
out
push
mov
inc
inc
push
daa
mov
mov
out
mov
insb
fisubl
sbb
shrl
cli
inc
lock
lock
cltd
jo
pop
sub
hlt
mov
and
inc
lahf
dec
int
adc
mov
push
and
aam
cmp
mov
pop
loopne
mov
js
arpl
data16
test
fdivr
mov
and
fstpt
adc
int3
ljmp
xchg
mov
mov
cs
xor
xchg
jne
enter
aaa
repnz
daa
push
sbbl
add
hlt
mov
into
test
mov
add
je
dec
xchg
out
dec
pop
lahf
addr16
pop
iret
lret
sub
pop
push
sub
dec
mov
sub
scas
lods
jb
in
cli
push
mov
aam
les
sahf
inc
lds
sti
test
adc
xchg
fisubl
mov
inc
cmp
dec
faddl
jnp
adc
jg
aas
push
push
pop
add
push
jb
inc
fstpl
add
or
and
inc
pusha
push
pop
push
enter
mov
inc
push
je
pop
add
imul
cli
sub
adc
shlb
loope
jge
int
mov
mov
inc
or
adc
in
loopew
cltd
icebp
xchg
mov
imul
pushf
inc
cld
mov
cmp
pop
push
mov
xchg
sbb
or
dec
lock
cmp
and
add
stos
cmp
xor
mov
iret
arpl
cmp
mov
push
ljmp
vphadduwq
jo
xor
mov
addb
movsb
and
push
cli
out
pop
adc
movsl
push
mov
cwtl
decl
sub
or
cwtl
lcall
add
fisttpll
mov
dec
ljmp
or
dec
cltd
add
inc
subb
xchg
mov
push
fs
fcmovnu
or
push
jno
mov
cmp
jmp
inc
cld
add
mov
cltd
xor
iret
jl
push
hlt
out
lods
push
test
add
fisubrl
sub
mov
mov
lret
iret
push
mov
lahf
popf
jle
pop
sub
pop
arpl
loopne
adc
or
adc
adc
mov
sbb
jno
mov
mov
cltd
inc
mov
push
push
notb
packssdw
shl
cmpsb
mov
shlb
daa
cmc
mov
pusha
push
xchg
or
cmc
mov
xor
push
rolb
xchg
push
adc
pop
es
mov
inc
ljmp
and
add
repz
xor
lret
icebp
sub
inc
mov
sbb
out
inc
rcl
xor
sbb
pop
push
rcl
shlb
movsb
mov
mov
lods
test
ss
dec
daa
out
gs
daa
mov
push
sbb
repz
iret
xor
mov
xchg
movq
ja
pop
aam
pop
dec
dec
pop
inc
stos
lret
popa
xorb
call
adc
xchg
pop
pop
int
out
in
arpl
bound
andb
fsubrl
ds
lods
movsl
and
cmpsl
push
movsb
add
add
out
std
pushf
std
xor
stos
adc
imul
ljmp
ljmp
cmp
mov
pusha
mov
subl
sbb
aam
mov
daa
xor
cld
pop
cmp
dec
lods
push
hlt
push
shlb
sarb
icebp
add
cmpsb
sbb
add
sbb
into
ret
ret
lds
stos
mov
test
ja
loop
in
mov
xlat
ljmp
imul
inc
filds
xchg
mov
imul
xchg
jbe
or
es
cltd
xchg
mov
mov
pop
subl
cmp
dec
or
icebp
xchg
stos
test
out
sbb
push
bound
test
add
arpl
jl
divl
lods
cmpsl
cmp
xor
hlt
aad
lods
lds
iret
outsl
dec
in
dec
jl
pop
movsb
stos
xorb
inc
and
xor
fimull
lcall
jno
add
cli
mov
in
pop
cmp
push
out
mov
scas
push
imul
lret
pusha
call
inc
pop
and
fwait
jb
cmp
repnz
add
cmc
jmp
add
sub
ljmp
mov
lods
adc
sbb
and
cltd
in
shll
jnp
inc
lods
sub
add
cmpsl
cmpsl
sub
daa
mov
cwtl
cmpsb
shrb
addr16
jb
and
scas
fnstenv
and
cmp
cmp
js
cmp
in
adc
sti
stc
push
popa
mov
xchg
mov
sbb
adc
push
or
jns,pn
xchg
adc
push
scas
lds
test
popl
mov
jo
ret
xchg
pop
mov
mov
push
sub
cmp
mov
repz
ss
aad
pop
cli
ret
jo,pn
in
xor
jo
lds
push
or
fstpl
cmp
call
inc
lcall
inc
dec
sbb
ret
add
add
add
mov
divl
imul
in
hlt
iret
ljmp
xchg
mov
maxps
add
cmpsb
popa
mov
imul
jl
pop
pop
dec
sub
push
ret
in
testb
js
loopne
lea
add
sti
loopne
xchg
jle
lods
sbb
je
in
push
jl
jle
jg
xor
addr16
sub
daa
xchg
inc
into
adc
cmc
xor
xchg
adc
pop
fstps
xor
xchg
sbb
aaa
subl
lds
push
lret
rolb
and
mov
push
pop
arpl
xlat
gs
add
push
mov
or
aaa
push
aam
mov
cmpsl
xchg
inc
negl
into
sbb
jecxz
mov
dec
fidivrl
or
out
adc
sahf
or
push
popa
pushf
jb
push
cmp
jle
adc
fbld
or
sbb
sub
push
mov
adc
pop
es
ja
in
mov
and
cmc
andb
inc
inc
xor
es
dec
daa
pop
out
xchg
mov
jns
push
sub
pop
data16
or
rorl
xorb
and
imul
outsl
sarl
lcall
sti
and
sub
ss
sub
pop
ja
inc
mov
and
into
addb
xchg
xor
and
cs
subb
out
imul
js
ret
inc
xor
gs
sub
es
fcomps
sub
icebp
push
add
hlt
xor
es
push
dec
test
fisttpl
shll
repnz
rcrl
aas
fidivl
das
sarl
stos
aam
lret
mov
mulb
sbb
movsb
and
inc
in
and
ds
sub
hlt
mov
lock
jo
test
aad
xchg
sbb
lods
int
lds
and
xor
mov
add
mov
and
into
mov
or
mov
insb
outsb
pop
dec
js
sbb
push
pop
gs
fcmovnb
or
cwtl
jne
lea
or
das
inc
jmp
lret
xchg
fisubrs
lret
out
mov
push
mov
inc
jns
mov
insl
and
fs
pop
xor
clc
cld
mov
jmp
dec
rorl
mov
mov
outsl
es
push
call
pop
ja
lods
mov
mov
cmp
or
jae
lock
mov
aad
call
xchg
or
push
f2xm1
pop
jecxz
ljmp
cmp
jge
in
aas
aad
inc
shrl
fisttpl
cmp
jle
iret
pop
pop
dec
ljmp
testl
out
push
into
cmpsb
push
jecxz
adc
mov
int
imul
cltd
push
push
lds
mov
aad
cmp
test
pop
add
mov
addr16
jecxz
sbb
out
mov
push
xchg
add
sbb
lret
lods
shrl
xchg
lds
sbb
push
xchg
push
ja
stos
stos
dec
or
aad
daa
adc
rclb
pop
gs
aaa
cmp
sbb
mov
popa
xchg
aam
sbb
push
iret
popa
and
inc
shrb
fwait
sahf
push
out
fs
xchg
test
test
imul
sub
ud1
lds
bound
and
mov
fs
jnp
sub
add
test
repz
int3
jae
insl
adc
incl
or
imul
adc
into
in
pop
cmp
push
test
add
jecxz
cmp
add
mov
ror
mov
arpl
jl
cld
out
sbb
mov
mov
sub
jge
fldl
sub
jmp
add
mov
mov
lds
sbb
insl
pop
mov
data16
dec
into
shll
add
loopne
aad
sbb
mov
pushf
or
enter
imul
std
shll
and
int
popa
push
call
dec
cmp
sub
scas
sub
fcoms
jnp
movl
mov
subl
push
mov
xor
push
add
lods
xlat
push
cmp
dec
imul
test
sub
fwait
add
pop
xchg
jmp
cwtl
mov
pop
sbb
xor
push
adc
add
hlt
dec
out
ja
idiv
pop
cmp
stc
xor
in
outsb
xlat
aam
pop
pop
mulb
xor
xor
pushf
sahf
xchg
stc
adc
ja
frstor
test
lods
dec
mov
aad
call
sar
cmpsb
lods
stos
ss
negb
subb
movsb
cmp
movsb
jns
scas
pop
jle
jo
call
fwait
mov
pop
mov
push
push
mov
int
dec
mov
add
jle
pop
clc
jle
fcmovbe
sub
mov
pop
adc
nop
sbb
incl
jbe
pushf
or
mov
xor
insl
adc
lret
mov
sub
push
xorb
and
fiadds
iret
call
ds
jb
mov
push
xchg
sti
lea
jbe
popa
sub
mov
mov
mov
mov
or
adc
sbb
clc
or
bnd
shrb
das
jle
pop
hlt
jno
into
dec
jns
insl
mov
iret
in
fildl
mov
push
ja
adc
test
outsb
cmc
add
mov
add
vhsubps
je
shrl
insl
adc
test
in
sar
not
adc
inc
push
and
mov
mov
shl
aam
insl
aam
scas
xor
in
test
mov
lret
xchg
or
push
in
jnp
mov
popa
mov
pop
inc
mov
sub
pop
sub
outsb
daa
mov
insl
cmp
test
leave
mov
les
xor
sub
pusha
sub
ds
xchg
fildll
cli
jge
fcompl
imulb
or
es
sub
sbb
lret
xchg
cmpsl
mov
fsubrs
cs
jno
xor
push
pop
jne
push
pop
lea
xor
decl
iret
push
add
pop
or
push
fidivrl
arpl
pushf
or
push
rorl
jl
and
jle
ja
int3
jae
xor
cmpsb
jmp
dec
xor
outsl
cmp
cli
cmp
xor
jle
lods
push
dec
adc
sbb
dec
ljmp
push
push
dec
jmp
movb
aam
outsb
jne
loope
movzbl
ljmp
jl
sub
inc
lea
arpl
inc
leave
push
add
ljmp
jne
fcomps
cli
addr16
mov
sahf
xchg
repnz
enter
sbb
dec
mov
ljmp
aaa
into
popa
in
sbbb
jno
lcall
rorb
cmpsl
lock
lods
pushf
arpl
iret
sahf
xchg
ret
or
fidivs
xor
in
fidivs
sub
dec
jb
ret
lret
lcall
in
sbb
test
add
mov
push
pop
stos
cmp
xchg
adcb
loopne
pop
jge
add
and
mov
lret
fmuls
imul
jo
scas
in
mov
sbb
push
frstor
jp
outsl
pop
cmp
push
inc
inc
jmp
movsl
fidivl
or
jle
loope
xchg
decb
cmp
cmc
xchg
daa
mov
cltd
in
gs
jnp
out
fsts
stc
stc
pop
push
jg
mov
sub
mov
sbb
dec
and
repz
fwait
into
push
shlb
popf
sti
ret
into
mov
fcoml
fwait
lcall
mov
roll
xchg
push
clc
mov
je
or
rcll
pop
mov
cltd
dec
jecxz
and
call
lods
movsl
inc
sbb
addr16
mov
add
into
lds
mov
mov
outsb
xchg
sti
and
mov
jge
imul
mov
fnstenv
jb
repnz
loope
pop
adc
dec
gs
sub
cmpl
sub
sub
fcoml
and
mov
es
int
fbstp
pop
cmp
or
popa
test
cmpb
mov
sbb
xchg
out
lcall
jge
add
sub
mov
jl
jge
sbb
outsb
shrb
dec
out
jnp
mov
ds
inc
and
add
xchg
xchg
mov
cmp
inc
out
repz
mov
cld
fmull
jge
mov
cmc
add
pop
pop
ret
fnstcw
add
inc
lahf
cmpsl
or
push
nop
xchg
push
cmp
insl
pop
arpl
dec
pop
movsl
adc
mov
aad
push
repz
lea
jne
inc
lret
mov
aas
add
shl
push
sbb
imul
in
shlb
or
push
xlat
ss
loope
mul
jno
mov
pusha
sbb
lods
sahf
clc
jle
xor
jmp
dec
ret
loopne
jnp
sbb
test
sub
jnp
std
repnz
fsubs
aaa
push
push
or
sbb
ja
mov
and
sahf
outsb
fucomip
ja
lods
pushf
inc
push
dec
cmpsb
lret
and
hlt
dec
data16
jne
xchg
mov
adc
push
dec
mov
pop
test
xlat
iret
mov
adc
xlat
pop
dec
fwait
pop
dec
add
aaa
mov
aad
xchg
mov
jp
inc
cmp
push
stc
ljmp
aas
add
mov
fmuls
cld
mov
and
jbe
xor
push
testl
mov
pop
jne
int
mov
inc
mov
add
push
stos
daa
and
es
int
lods
jmp
dec
xor
clc
stos
mov
lea
mov
imul
cmp
hlt
add
test
pop
out
fsubr
sub
cli
dec
fcoms
mov
pop
jbe
movsl
les
cmp
test
dec
cmp
test
adc
mulb
in
sub
cmp
ljmp
xchg
dec
insb
xor
cmp
cmp
rolb
push
pop
ds
fcomps
push
je
sub
pop
iret
arpl
xchg
push
and
rcrl
adc
sub
mov
push
repnz
aas
repz
jmp
fisubs
or
jge
cwtl
push
jl
jno
mov
fsubrl
pusha
lock
xorl
pop
and
lret
sub
or
mov
cli
loop
xchg
les
jno
ljmp
xlat
or
sbb
sub
rcrl
sub
jno
jle
pop
adc
inc
sbb
ljmp
loopew
mov
xchg
lods
insl
inc
fstpl
int3
fldt
adc
sub
push
hlt
insb
xor
cld
sbb
add
xchg
pop
dec
fsub
fisttpll
jno
mov
or
add
jecxz
rcrl
mov
adc
sbb
jo
in
mov
sbb
mov
sti
inc
dec
out
in
mov
mov
in
add
jle
sub
out
xchg
test
call
loope
mov
mov
iret
xchg
push
jnp
and
lds
push
and
jae
mov
adc
or
push
data16
pop
daa
jb
lret
frstor
adc
mov
into
into
mov
lcall
rcrl
jns
lock
sub
loopew
xor
movswl
add
xlat
clc
pushf
shll
inc
jg
sbb
cmp
std
mov
stos
cmp
mov
cmc
mov
adc
xor
push
dec
pop
inc
ficoml
mov
jp
out
push
xchg
into
dec
mov
or
sbb
dec
lds
stc
sbb
aas
inc
jae
leave
test
cmp
je
and
xor
loop
adc
xor
mov
sub
add
pop
mov
clc
xor
imul
sarb
jns
in
sub
or
xchg
sbb
cmp
les
out
adc
and
lods
sbb
mov
mov
xor
lods
mov
inc
push
push
stos
add
sti
fnstenv
push
mov
xchg
into
ret
sbb
icebp
popa
fwait
sbb
jbe
xor
fisttpll
or
mov
push
stos
lcall
adc
push
dec
jg
cmp
sub
in
das
stos
shlb
fimuls
dec
test
inc
xchg
xchg
loopne,pn
mov
dec
or
push
movsb
inc
call
lret
xchg
in
ljmp
and
and
loop
hlt
dec
pop
adc
jmp
imul
add
in
mov
sbb
sarl
lcall
es
ja
ja
push
adc
jmp
fsubrs
iret
leave
int
add
in
nopl
push
jmp
dec
stos
out
xor
fwait
call
xchg
fildll
jns
mov
add
dec
push
jl
and
push
add
dec
test
xchg
les
cli
cld
rcr
sbbb
testb
aas
jl
xchg
adc
dec
xchg
adc
sbb
mov
daa
sub
sbb
imul
adc
push
sbb
pop
dec
mov
jb
jnp
cltd
jbe
test
adc
add
xlat
shrb
mov
icebp
sbb
adc
pop
setno
mov
idiv
out
pop
add
imulb
sbb
sub
testb
lock
pop
sahf
cmpsb
outsb
pop
xor
repnz
mov
xor
scas
ret
or
dec
xchg
cmp
cmp
or
lods
inc
inc
rcll
add
gs
dec
hlt
cwtl
adc
lret
popa
and
lea
mov
push
adc
xchg
lret
int
adc
sbb
enter
rcl
jb
mov
ret
sbb
mov
rcl
jg
pushf
test
in
sbb
jns
out
sbb
mov
repz
mov
add
nop
subl
jp
test
gs
fwait
cmpsl
imul
adc
lret
add
outsb
dec
sub
jnp
pop
shrb
jle
pop
jecxz
pop
je
mov
cli
jge
mov
movsl
in
gs
and
gs
loope
addl
xchg
add
xorb
push
call
cwtl
or
xchg
or
mov
ss
hlt
imull
xchg
cmp
and
or
ror
cmp
sbb
pushf
fsts
repnz
jno
or
sub
aam
mov
rorb
dec
jae
test
cwtl
iret
popa
popf
sahf
sbb
inc
sti
mov
test
lahf
sbb
nop
rclb
iret
mov
sub
inc
sub
daa
fsubrl
addl
add
dec
test
sbb
mov
cmc
les
mov
mov
clc
lea
punpcklbw
add
inc
xchg
call
xor
aad
or
ret
jge
add
pop
inc
pop
adc
sub
into
pusha
xchg
mov
xor
fistps
push
aad
lret
lahf
movnti
add
mov
out
aam
fsubl
inc
pop
jge
mov
xchg
jb
clc
add
test
and
inc
sbb
cwtl
mov
jns
fsubr
rorb
into
outsl
mov
push
imul
mov
ret
popf
iret
aam
cmp
or
mov
push
ja
pop
lret
js
mov
popf
cwtl
pushf
pop
dec
sbb
popa
mov
dec
lea
xchg
sub
mov
rclb
pop
loope
mov
jg
out
fxam
stos
aaa
in
cmp
push
sub
into
and
mov
mov
and
movsb
xor
out
inc
ja
clc
addr16
sti
mov
gs
das
xchg
mov
mov
out
jb
inc
lock
cmp
mov
je
in
bound
mov
pop
pop
hlt
outsl
xchg
xchg
mov
lea
xchg
pop
aas
pop
pop
popa
aam
sbb
xchg
nop
loopne
cltd
test
jbe
jle
icebp
std
imul
or
mov
dec
jmp
jno
test
jmp
mov
push
frstor
sbb
mov
addb
jge
jns
and
das
mov
mov
divb
jg
hlt
sub
aam
mov
je
dec
in
ret
test
mov
stc
xor
push
cmp
mov
sbb
push
inc
ret
sbb
hlt
mov
inc
out
cmp
sahf
sbbb
shll
and
test
das
sub
adc
sbb
inc
push
push
sub
push
adcb
pusha
cli
sbb
int3
mov
cmp
lcall
hlt
mov
adc
imul
jb
pop
fwait
push
dec
jecxz
mov
out
pop
and
push
lock
rorb
out
cmp
leave
xchg
jl
push
mov
add
or
iret
mov
xor
in
cmp
es
insb
cmpsb
mov
sub
inc
pop
pop
aas
pop
cmp
push
jge
cmp
mov
outsl
dec
and
and
cmpb
adc
add
aad
icebp
out
pop
mov
shlb
mov
add
aaa
insl
mov
lea
dec
lea
pop
inc
sbb
mov
lret
adc
mov
sahf
fdivrp
daa
mov
movsl
jnp
pusha
test
mov
sbb
jae
sti
ret
dec
mov
pop
mov
lcall
sahf
adc
add
pop
sub
inc
push
test
in
pop
or
xchg
test
mov
in
or
imul
dec
ret
jp
cs
jecxz
push
add
sub
sub
jl
jnp
cltd
or
push
jo
cmc
daa
xor
pop
orb
pop
sarl
mov
lret
xor
dec
fdivl
std
mov
movsl
rcrl
rcrl
push
add
ret
cmp
xchg
ja
jns
cld
dec
leave
dec
adc
mov
ds
xor
ja
jmp
jmp
out
jl
cmp
sarb
sub
xor
in
pop
and
add
rolb
subl
pushf
jmp
pop
imul
mov
in
out
push
mov
mov
icebp
vhsubpd
pop
push
hlt
lcall
das
cmp
aam
xchg
jb
sbb
and
jno
out
sub
mov
aad
sub
pushf
inc
add
inc
adc
negl
jne
dec
add
add
test
out
xchg
ss
sbb
bnd
pop
mov
mov
les
iret
daa
push
or
popl
add
mov
inc
inc
adc
sub
inc
stos
sbb
mov
add
jo
leave
inc
add
adc
lods
nop
push
and
mov
ljmp
test
fs
pop
jmp
xchg
in
jmp
or
out
add
mov
jne
mov
mov
out
add
js
outsl
lcall
scas
inc
mov
mov
nop
mov
sbb
cmp
cli
jle
jmp
sarb
outsb
sbb
pushf
and
enter
sbb
pushf
mov
cli
pop
ss
or
mov
mov
mov
pop
inc
clc
aam
adc
das
cs
xchg
pop
pop
adc
pushf
sub
push
outsb
cld
xor
mov
icebp
fadds
or
pop
icebp
or
int3
lcall
mov
or
cmp
shlb
add
enter
popf
imul
outsb
mov
in
fbstp
shll
pusha
xor
dec
push
pushf
mov
add
mov
pop
out
pop
stos
push
sub
loopne
xor
add
scas
dec
popf
xchg
test
roll
mov
sub
scas
mov
pop
adcb
arpl
xchg
dec
pop
jne
or
pop
loope
and
push
bound
cmp
cmp
push
ss
mov
xor
inc
sbb
sbb
stc
fwait
cmp
fptan
jg
mov
mov
sti
push
mov
rcrl
push
sub
hlt
push
in
test
pop
jg
clc
mov
sbb
ret
jnp
push
loop
insl
pmaxub
sub
enter
pop
add
and
adc
rclb
and
call
movsl
lret
test
fiaddl
xor
pop
xor
dec
fs
sub
jae
xchg
fdivr
sbb
shlb
aam
xchg
arpl
pushf
sbb
adc
dec
jge
in
adc
mov
push
jl
andl
hlt
push
jp
xor
fcomps
pop
ja
outsl
or
dec
repz
mov
mov
sub
leave
lods
fstps
mov
dec
cmpsl
xor
or
inc
dec
iret
test
sbbb
lcall
mov
dec
jae
cmp
pop
sub
mov
inc
inc
add
jno
xchg
daa
aas
inc
in
es
aaa
xor
add
call
aaa
mov
sub
dec
decb
das
roll
push
lcall
pop
sahf
cmpsl
insl
out
jp
into
repnz
frstor
xor
cmp
push
mov
insl
clc
mov
jge
in
adc
rclb
xchg
sbb
dec
cmp
mov
xchg
mov
aaa
iret
sub
test
lds
movl
cli
lea
sbb
fwait
xchg
push
faddl
cmpsb
out
push
xlat
xchg
aaa
xor
push
outsl
dec
pop
xlat
jbe
dec
push
loopne
imul
test
movsl
in
pop
cli
mov
mov
push
jo
sub
adc
jnp
arpl
call
out
xchg
mov
dec
nop
sub
add
pop
pop
sub
aas
cmpsb
loopne
inc
adc
fs
sbb
push
and
fdivrl
or
dec
out
loop
iret
repnz
subl
sub
sub
cmp
push
aas
es
mov
shrl
inc
push
pop
xchg
lcall
imul
fldcw
mov
ljmp
loope
cmp
arpl
sahf
ret
adc
sbb
test
xchg
sub
push
stc
fprem
dec
push
lret
jno
inc
mov
pop
repnz
xchg
and
and
out
mov
inc
push
int
mov
ja
outsb
addr16
dec
int3
lcall
aas
dec
mov
add
je
inc
inc
lods
jmp
ss
add
fisubl
int3
xor
mov
mov
xchg
sub
inc
jg
mov
sub
adc
push
mov
jnp
loop
addr16
ljmp
or
inc
jecxz
int
fsubl
inc
sbb
test
lret
cmp
out
mov
pushf
xchg
in
movsb
cmp
push
sbbl
out
das
inc
jae
cltd
aaa
outsl
mov
pop
and
push
bound
scas
pop
fists
insb
push
out
cmc
sub
mov
add
xor
sbb
xchg
repz
jbe
or
inc
adc
push
mov
int
icebp
jecxz
cmp
aam
cmp
clc
test
fsubrs
jge
sub
ror
sbb
call
and
dec
movsb
cmp
shlb
jg
icebp
push
mov
pop
ja
add
test
mov
inc
xor
push
outsb
in
fwait
xchg
decl
iret
imul
sub
mov
aam
popf
mov
loopne
loop
dec
gs
js
xchg
lcall
stos
mov
les
bound
aaa
dec
shl
and
mov
pop
adc
shr
add
aad
mov
lods
inc
add
out
lret
movsb
or
cli
xchg
loopne
pop
pop
jmp
test
leave
lods
loope
or
dec
mov
jno
and
rcrb
mov
fldl
jns
mov
push
insl
xchg
adcl
cmp
adc
outsl
mov
mov
repnz
sub
sub
add
imul
sti
pop
dec
popf
in
dec
subb
mov
sbb
mov
clc
loope
xor
sbb
pop
test
sub
sub
sbb
jns
pushf
jnp
outsb
mul
add
imul
out
push
leave
dec
pop
inc
push
or
xchg
xchg
aas
xchg
pushf
xor
xor
test
pop
in
pop
jb
add
pushf
mov
out
in
mov
dec
addr16
push
loope
mov
adc
push
lods
mov
je
inc
bound
sbb
xchg
cmp
int
sub
stos
inc
call
xchg
xor
test
cmp
pusha
and
dec
stos
sub
mov
into
cmp
aaa
rorl
enter
push
push
aam
mov
sbb
cmc
dec
adc
inc
mov
jnp
xchg
inc
inc
lods
jmp
xcrypt-ctr
cmpsl
push
aad
fwait
pop
push
nop
cmc
push
and
xor
cmp
mov
mov
adc
or
add
popa
push
xchg
inc
cmpsl
or
stos
sahf
stc
pop
aam
cmc
lods
roll
aam
stos
mov
shr
sbb
lds
sub
mov
sahf
xlat
repz
loop
clc
jns
push
sbb
add
test
push
jge
mov
je
add
mov
sbb
push
in
push
in
and
jle
jge
push
mov
mov
inc
loopne
or
inc
xor
mov
inc
adc
dec
xor
adc
mov
push
decl
js
pop
push
pop
inc
mov
dec
push
sub
fimuls
mov
push
pop
mov
scas
jns
lcall
lds
outsl
int
push
pushf
test
nop
adc
sahf
jae
push
inc
add
inc
daa
hlt
mov
bound
iret
pop
xor
test
pop
andb
leave
mov
lock
cli
and
mov
out
sbb
xchg
mov
jl
inc
pop
and
in
hlt
cmpsl
aaa
cmp
jp
adc
inc
imul
jecxz
mov
inc
out
fiadds
fs
nop
gs
icebp
cwtl
std
cmp
push
fcom
mov
fdivp
mov
push
add
in
inc
insb
cwtl
stc
and
mov
jno
pop
nop
sub
movsl
movsb
test
sti
pushf
stc
xor
cwtl
adc
inc
sar
push
xor
pop
or
hlt
and
in
inc
mov
jle
xor
sahf
or
sbb
push
jle
ds
mov
mov
movsl
les
xor
andb
in
xor
dec
mov
loopne
outsl
cwtl
sub
repz
adc
mov
push
jnp
rcll
jns
jl
loop
pop
sarb
inc
mov
inc
push
dec
mov
adc
repz
test
push
and
arpl
mov
jo
jno
mov
or
mov
push
cmpsl
dec
movsb
ret
mov
push
dec
das
cmp
inc
mov
and
dec
data16
xchg
popf
stos
pop
xor
fwait
mov
adc
or
sub
jb
mov
cs
dec
ja
fcom
test
sub
adc
jnp
insl
fildll
notb
or
andb
lock
in
adc
inc
jns
test
sbb
pop
cmp
cmpb
or
adc
xor
stc
cli
mov
dec
call
stos
addr16
xor
call
call
add
rcll
xchg
aas
and
sbb
fisubs
dec
sbb
cs
adc
fstl
mov
lret
ja
lcall
mov
mov
push
jmp
pop
out
loopne
loop
bound
arpl
sti
sub
lret
daa
add
inc
fnsave
mov
cmp
dec
cmp
add
ljmp
mov
lods
add
outsb
push
popa
mov
adc
imul
push
cmp
xor
add
or
xor
stos
outsb
movsl
mov
sbb
xchg
outsl
loope
xor
lock
pop
push
enter
sti
pop
adc
mov
jge
xlat
pop
pop
pop
jg
inc
and
jp
xchg
repnz
test
fwait
cmp
adc
stos
je
repnz
adc
push
xor
add
jbe
frstor
jb
mov
jo
pusha
roll
cld
pop
mov
test
cmp
dec
mov
test
xchg
and
gs
rclb
fcomp
cmp
ljmp
imulb
loope
push
mov
jecxz
and
dec
mov
or
cmpsl
sbb
jb
xor
xchg
adc
push
stos
xchg
daa
insl
rclb
inc
push
data16
daa
and
xor
adc
in
iret
adc
sub
or
xorl
push
imul
out
dec
adc
pop
stos
push
test
adc
rclb
sub
push
cmpsb
psubsb
jmp
jnp
cmpsb
shll
popa
xchg
jmp
cld
out
addb
sbb
and
mov
sub
in
cli
and
addr16
int
sbb
sub
xlat
sub
dec
ljmp
in
pop
sub
jp
mov
addl
mov
mov
mov
xchg
scas
sub
outsl
adc
bound
hlt
lds
sbb
mov
adc
shlb
mov
shll
fwait
aad
mull
or
lret
ret
jge
inc
pop
call
idivb
fwait
cli
jae
cwtl
adc
stos
jg
sbb
mov
sbb
mov
xchg
cmpsl
bound
sbb
jmp
mov
ss
mov
shrb
insl
xchg
fisttpll
inc
xchg
arpl
std
cli
dec
fwait
xor
popa
pop
lahf
pop
or
test
cld
sbb
mov
cmpsl
xchg
es
mov
xchg
mov
iret
add
sub
pop
mov
inc
jnp
cmpsl
or
mov
testb
sub
adc
sbb
add
lcall
mov
les
sbb
test
out
ja
add
lret
push
dec
aas
ss
sub
rcll
movsb
and
popf
mov
adc
or
adc
cwtl
outsl
in
sub
bound
fnsave
inc
filds
or
mov
xchg
es
das
pop
and
fnstenv
aad
mov
nop
mov
dec
lret
pop
pop
out
mov
scas
xor
repnz
mov
nop
add
mov
test
or
pop
notb
add
clc
mov
push
ja
mov
into
movsb
mov
test
mov
fcomp
push
call
pop
int3
or
sub
addr16
lea
add
shll
out
dec
mov
incb
bound
mov
pop
sub
scas
shlb
in
add
mov
xchg
or
outsb
mov
je
mov
mul
jle
xchg
call
jge
sbb
dec
js
int
ja
aam
and
jp
into
dec
pop
pop
fdivrl
subl
loop
cli
scas
ret
dec
stos
sti
pop
test
out
cmp
inc
testl
stos
mov
adc
inc
push
cmp
sub
adc
mov
dec
mov
int
mov
lods
or
scas
add
test
mov
mov
mov
add
iret
lcall
mov
inc
mov
data16
sub
jl
sub
xorl
in
pop
and
xor
xchg
in
repz
push
out
pusha
or
mov
add
xor
or
test
dec
fstl
push
and
jne
dec
fcomps
nop
mov
pop
xor
or
sahf
loopne
aaa
or
sub
insl
mov
hlt
mull
idiv
fwait
push
repnz
add
fidivrl
rcl
sti
mov
push
inc
scas
lret
and
cmp
jecxz
push
test
push
test
icebp
sub
sahf
push
dec
add
jg
pop
jnp
jb
dec
fsubrl
pop
mov
mov
push
imul
cmp
sub
mov
sbb
pop
jno
dec
lods
lea
mov
ficoml
jns
movsl
xchg
repnz
cmp
xchg
ds
inc
ret
mov
jns
sbb
inc
test
mov
push
mov
mov
iret
jmp
in
fcomip
std
add
fiadds
and
mov
sbb
rolb
xchg
sarl
in
cmp
shll
hlt
mov
cmp
and
inc
add
sbbb
ss
pop
pop
mov
adc
outsl
cmp
std
pushf
test
sub
dec
xor
fstpt
shlb
xchg
popa
sbb
xor
out
xor
das
shlb
lret
test
dec
adc
push
lock
insb
xor
lods
hlt
inc
and
orb
fidivs
js
cmp
arpl
xchg
not
jo
jbe
adc
pop
xchg
clc
jno
arpl
adc
enter
lds
sbb
cmp
mov
xchg
jne
cs
ja
push
xor
pop
nop
mov
addr16
jecxz
fcoml
adc
or
xor
rclb
orl
das
cmp
pop
inc
mov
scas
sbb
pop
push
xor
cmpsl
mov
add
stc
push
mov
mov
or
int3
fiadds
xor
aaa
mov
jecxz
jb
loope
rorb
dec
ret
sbb
pop
inc
or
pop
pop
nop
fsubrl
add
mov
subl
push
sbb
sub
push
adc
jo
xlat
stc
sub
xor
cmp
mov
fwait
cld
into
fs
in
inc
mov
std
cmp
leave
fs
cmp
movb
cmp
cmp
ffreep
inc
mov
sti
mov
lret
roll
insb
xchg
pop
adc
sub
mov
aas
cld
ret
or
push
cmpsb
mov
pop
iret
in
xchg
rcl
sub
add
mov
push
fdivr
pop
shll
arpl
jbe
lock
sub
lods
in
imul
sahf
add
cmp
xchg
xor
push
notl
enter
jns
sbb
rorb
fiadds
push
aas
pop
cltd
dec
dec
test
mov
xor
lods
pop
push
sahf
insb
sbb
lea
pop
push
inc
jmp
ds
cwtl
jecxz
or
add
xchg
imul
pop
push
out
xor
xor
sub
jmp
insb
sti
inc
jle
stc
or
mov
dec
imul
xchg
cmp
push
sbb
mov
lods
jp
rcrb
xor
fsubs
mov
popa
push
mov
shlb
test
clc
pushf
es
daa
sub
jae
cmp
lahf
xchg
out
xchg
adc
push
icebp
fbstp
ret
xchg
stos
ljmp
fisttps
std
cld
sbb
aas
jnp
dec
lsl
mov
decb
sub
std
daa
lahf
inc
and
and
cmc
enter
jl
mov
xchg
jns
outsb
sbb
and
insb
adc
dec
sbb
sub
popf
imul
mov
jb
frstor
testl
stos
inc
jne
inc
shl
pop
pop
leave
add
notl
mov
ror
mov
inc
or
movsl
inc
repz
inc
and
data16
cmpsb
jns
rcrl
cs
sahf
jp
and
push
cmpsl
adc
aad
pop
and
add
pop
mov
icebp
push
mov
jb
enter
mov
xor
mov
cmp
xor
sti
test
inc
dec
dec
das
dec
popf
or
daa
push
pop
or
dec
ss
test
sub
xor
dec
or
in
cwtl
std
sarl
and
inc
pop
pop
in
cmp
jo
lods
xor
mov
das
addl
aas
je
pop
dec
and
and
bound
sub
pop
mov
inc
mov
sub
pop
sub
data16
jae
ljmp
aam
cltd
xor
pop
xor
fwait
dec
shll
lds
pop
mov
mov
mov
jae
jae
push
push
bound
xlat
and
and
popa
pop
xchg
mov
aas
mov
sti
repz
and
or
mov
in
ret
xchg
add
xchg
and
repz
fwait
scas
pushl
bound
icebp
lods
int3
xor
cmc
sbb
pop
xor
ljmp
cld
push
mov
or
mov
xor
mov
mov
cwtl
push
xchg
sbb
cmp
insb
cs
add
arpl
adc
or
stc
mov
je
enter
mov
daa
lea
sbb
dec
xor
mov
fdivrl
fwait
lock
mov
xor
andb
mov
pusha
jns
push
jno
pop
cli
or
lcall
filds
inc
out
movsb
cwtl
movsl
push
test
sbb
jecxz
outsb
push
hlt
inc
xchg
or
and
jmp
adc
add
push
mov
movsl
add
jge
cmp
test
leave
jmp
psllq
shr
inc
rcll
jmp
cmp
pop
and
xchg
cmp
sub
mov
adc
xchg
fstpt
mov
adc
dec
pop
mov
jl
jecxz
leave
lcall
dec
push
mov
push
int3
popa
xor
hlt
fcomps
inc
aas
xchg
aaa
and
ljmp
add
aas
inc
aas
cmp
xchg
jno
int3
mov
cli
das
cmp
into
inc
int3
and
xor
out
lahf
push
add
lea
mov
test
bound
dec
inc
cmp
jmp
scas
mov
cwtl
loope
xlat
or
sbb
sarl
loopne
movups
sbb
push
int
in
movsl
lret
add
test
nop
xlat
popa
add
int3
pop
int
dec
xlat
xchg
lods
lret
shr
jae
shrd
ss
push
cmc
inc
mov
push
test
sbb
fdivrp
test
icebp
mov
dec
xchg
leave
mov
call
repnz
cmpsl
xchg
popa
push
inc
test
imul
and
cmp
push
imul
or
pusha
xor
push
fisttps
cld
enter
dec
or
lahf
movsb
inc
pusha
add
mov
sbb
shl
cltd
cmp
push
aam
add
dec
sub
notl
jnp
add
sbb
fcoms
mov
dec
loopne
orb
add
lods
fildl
adc
push
mov
pop
repz
gs
js
clc
pop
dec
ret
lahf
lods
pop
mov
sar
shrb
negb
push
xor
test
imul
cmp
xchg
lahf
lods
out
rcrl
inc
es
cld
xor
xchg
repnz
stc
push
xchg
rcr
aad
lods
mov
and
xor
mov
icebp
arpl
inc
stos
lock
aaa
insl
fsubs
xchg
dec
out
mov
jbe
fdivr
mov
lret
js
sbb
inc
je
out
pop
test
push
lock
into
aad
jnp
dec
mov
add
or
ljmp
jmp
lcall
sahf
and
cs
aaa
jmp
cltd
data16
sbb
pushf
std
imulb
in
jle
aad
orb
stos
data16
imul
jns
subb
stos
sub
std
sbb
cwtl
hlt
mov
lahf
mov
inc
shlb
mov
pop
stc
sbb
inc
push
jle
les
pusha
cltd
test
jp
gs
jmp
notl
cmpsl
dec
cwtl
icebp
push
popa
cmc
cmp
xor
incl
sub
shll
mov
mov
imul
dec
clc
ljmp
rcrb
pop
bound
adc
iret
inc
imul
loopne
cmp
stc
add
fs
inc
push
fdivs
dec
xchg
sbb
and
fildl
arpl
outsb
lret
mov
pop
out
mov
fldl
inc
movb
adc
add
sti
sbb
fsubrl
ror
xor
or
cmpb
lods
ret
or
fisubl
movsb
xchg
pop
add
xchg
and
cmpsb
sarb
cld
or
mov
xor
out
fbstp
test
or
push
mov
xor
out
xchg
mov
inc
xchg
arpl
push
loop
fldl
mov
pop
aad
dec
pop
jg
add
js
jecxz
leave
mov
xchg
int3
jg
mov
jns
push
jmp
orl
cmp
in
jb
dec
in
sahf
inc
ss
bound
push
jne
xor
cmpsb
fisubs
bound
sbb
inc
clc
add
test
popa
in
push
sbb
in
or
stc
cmp
pusha
out
mov
adcl
mov
xor
sub
aad
or
jns
stos
mov
sub
or
sub
ljmp
pop
mov
cmpsb
pop
aam
mov
fisubl
bswap
iret
test
lea
xor
dec
fldcw
test
jo
mov
adc
ds
or
shr
in
mov
pusha
mov
das
sysenter
arpl
cld
jecxz
fwait
sbbl
jecxz
outsb
jno
sub
jge
movsl
test
sub
or
xor
mov
js
leave
jns
lds
push
cmpsl
sahf
popf
les
bound
mov
sub
mov
iret
sbb
repnz
cmp
mov
cli
push
pop
icebp
das
insl
jge
push
xlat
insl
sub
aad
inc
and
movsb
push
test
pop
mov
mov
outsl
andl
jnp
popw
xchg
adc
pusha
xchg
das
rcrl
lret
test
push
les
push
sbb
lret
xlat
outsb
sarb
les
lods
add
negb
mov
cmpsb
les
sbb
sub
cmp
adc
pusha
int3
lods
xlat
cmp
gs
pop
xor
pop
adc
in
enter
cwtl
mov
xor
dec
dec
lea
sbb
lods
and
mov
sbb
aad
push
jno
cmp
inc
loope
mov
roll
in
mov
lahf
pushl
repz
mov
sub
movsb
inc
mov
aas
aas
or
daa
scas
push
pop
xor
imul
push
imul
and
mov
add
sahf
and
add
rcrb
xorb
outsl
mov
mov
fwait
adc
insb
mov
xchg
aam
lcall
lods
inc
push
mov
leave
adc
scas
ljmp
jecxz
leave
xchg
pushf
pusha
out
ss
clc
je
add
insb
cmp
cmp
cmp
icebp
adc
cli
dec
imul
dec
mov
pop
pop
imul
and
push
push
xchg
shll
add
mov
push
call
mov
push
sub
and
fcmove
mov
pop
push
imul
push
pop
ljmp
lods
clc
int
dec
lea
jno
imul
pshufw
jmp
mov
pop
ljmp
sbb
stos
push
sbb
dec
test
outsb
hlt
push
dec
test
repz
test
mov
out
lcall
jns
dec
push
jecxz
xchg
and
inc
arpl
or
aad
out
dec
sti
addr16
pusha
xor
adc
out
out
mov
mov
in
or
sbbb
inc
jg
mov
cmp
int3
jle
cli
roll
mov
inc
cmc
aam
cmp
gs
in
insl
mov
lea
add
test
cs
ja
stc
jl
add
js
out
xchg
mov
sub
adc
jmp
cwtl
shrl
daa
sbb
shrl
jecxz
movsb
clc
push
pop
or
iret
pusha
xchg
inc
inc
out
jg
or
dec
in
dec
push
add
dec
es
mov
inc
push
add
enter
xchg
gs
mov
add
push
cs
jne
mov
movsl
sbb
mov
pop
add
mov
into
xor
daa
sbb
pop
repz
lahf
xchg
and
and
dec
sub
repz
into
mov
insl
inc
and
clc
leave
xchg
xor
fildl
out
pop
punpcklwd
add
xor
jbe
sbb
or
cwtl
out
sub
push
jmp
cltd
xchg
xchg
ja
pop
jnp
mov
push
mov
insl
ss
xchg
lret
lcall
in
sub
xchg
addr16
enter
arpl
fnstenv
inc
mov
push
xchg
jne
xor
lds
mov
test
pop
aas
cmpl
leave
dec
call
sub
mov
cmpsl
push
add
mov
in
mov
xchg
push
push
es
mov
push
in
push
xchg
cmpsb
mov
out
add
and
pop
ljmp
mov
add
sahf
callw
cmpsb
ret
ljmp
jne
inc
adc
jnp
dec
jns
push
push
gs
lret
xchg
dec
mov
inc
mov
pop
xor
push
rcll
ds
push
mov
test
test
pop
pop
fwait
and
sarb
mov
cmp
lea
pusha
xchg
xchg
mov
es
add
test
movsb
xchg
sbb
insb
movsb
repz
jnp
pop
and
xor
or
pop
jns
or
inc
movsb
fstpl
mov
xor
jae
cmp
stos
pop
mov
push
lea
shll
in
es
bound
push
add
aas
pop
sbb
adc
xor
dec
push
outsb
cmpsl
fidivrl
sub
xor
pop
icebp
hlt
test
inc
nop
jmp
aad
dec
mov
inc
xor
or
mulb
outsb
pop
mov
leave
data16
xchg
fidivs
ficoms
clc
daa
dec
ret
test
mov
std
imul
add
push
mov
mov
pop
cmc
pusha
and
nop
and
das
adc
and
jg
bnd
mov
or
subl
pop
out
in
shll
enter
dec
enter
xor
insl
xchg
in
leave
add
idivl
pop
stos
in
ret
mov
movsl
ret
xchg
adc
adc
divps
mov
dec
data16
lods
cli
aam
je
mov
loopne
fwait
jmp
das
push
addb
xchg
and
imul
and
es
jg
push
jbe
mov
push
aas
adc
adc
and
roll
fimuls
int
and
loope
mov
test
dec
push
incb
cmc
pop
aad
xchg
addr16
and
mov
pop
push
inc
stc
out
imul
fidivl
sub
sub
faddl
add
mov
inc
pop
mov
cmp
jl
mov
push
popf
xlat
dec
push
add
or
in
jae
aad
dec
inc
mov
mov
mov
call
sbb
mov
lcall
les
or
out
pusha
mov
pop
shlb
cltd
mov
pop
into
push
sqrtps
mov
mov
inc
movsl
xor
pop
dec
rcrb
ret
scas
adc
call
hlt
ds
or
mov
shl
jecxz
or
jmp
and
inc
sbb
shrl
mulb
xor
je
inc
rolb
in
das
incb
pop
rcl
scas
mov
mov
jge
pusha
ja
push
cs
pop
and
stos
or
adc
pop
nop
inc
push
xorl
add
cmp
adc
add
jbe
fcmovne
xchg
mov
cltd
xor
mov
hlt
pop
push
loopne
jle
addr16
inc
movsl
sub
dec
lods
add
sbb
mov
jne
rcrb
mov
pop
aam
adc
fcoms
pop
cmp
adcl
mov
aaa
xor
shl
and
fs
fldenv
mov
push
inc
dec
out
insl
sub
loop
fisttpll
pop
mov
cltd
fs
push
or
jl
push
cs
push
push
sub
daa
daa
jge
popf
jns
xchg
fsts
dec
fistps
insl
sbb
mov
jg
push
and
adc
mull
jge
lahf
push
adc
in
sbb
ficoml
fcompl
adc
cmp
jne
dec
ficoml
xchg
insb
fdiv
push
in
fistpll
fwait
mov
js
jecxz
test
mov
movsl
js
scas
jno
std
dec
cmp
dec
jb
mov
rcr
lcall
das
add
movsb
sahf
dec
dec
pop
hlt
xchg
loopne
sbbb
xor
imul
imul
and
mov
or
arpl
add
shlb
sbb
sbbl
sbb
in
out
cmp
js
in
insl
cmc
adc
lret
pusha
xor
mov
imul
aaa
test
push
inc
das
hlt
or
femms
pop
rclb
mov
mov
fistl
sub
into
adc
inc
xor
std
mov
and
sbbb
orl
jmp
stos
jle
hlt
jns
je
xchg
lea
add
push
and
dec
dec
adc
mov
lret
negl
adc
mov
shrb
js
push
jne
fcoml
adc
dec
addb
jecxz
and
in
aaa
stc
loopne
jmp
sti
jp
shl
sbb
sub
push
imulb
xor
addr16
dec
fadds
mov
sub
cwtl
push
cmp
jno
or
aaa
push
push
sahf
cmp
inc
push
stc
mov
add
lds
push
add
push
or
ror
cmpsl
push
and
ljmp
add
xchg
dec
out
push
mov
xchg
rorb
inc
insb
pop
fcoml
jge
add
cvtps2pi
repnz
in
push
ud1
mov
imul
lahf
lods
xor
stos
je
das
jb
popf
in
and
or
push
xchg
int
mov
jmp
cltd
cmp
int3
xor
loope
fisubrl
loop
push
push
mov
jmp
lock
cs
into
xchg
aam
xor
cmp
push
popl
test
mov
cmpl
xchg
clc
sbb
cwtl
test
dec
cmp
mov
add
jne
lret
aaa
inc
sub
sbb
mov
and
adc
jo
add
sub
imul
es
hlt
jmp
js
mov
adc
sub
jb
js
cld
test
into
push
fnstenv
insb
cs
sbb
xor
shl
mov
stos
push
fldcw
xor
sbbb
fdivrl
fists
jle
inc
pop
mov
in
ljmp
and
xchg
push
mov
lods
sbb
pop
les
inc
cmp
into
adc
and
int3
inc
push
subl
mov
sub
arpl
lea
adc
dec
scas
dec
mov
lahf
add
data16
cmp
loop
lret
pop
mov
rcrl
sti
lret
cmpsl
in
sti
rcrl
jne
icebp
fwait
dec
inc
shll
pop
mov
jecxz
es
loop
push
dec
mov
in
jl
outsb
shlb
mov
scas
adc
add
test
pusha
adc
pushf
in
aas
outsb
pop
bound
mov
shrl
test
sub
cmp
sub
adc
data16
adc
mov
push
sbb
or
xor
mov
pop
sbb
sahf
std
loope
scas
cld
sub
xorb
or
nop
pand
in
xchg
pop
lahf
pop
fildl
jl
or
das
xor
rorb
fcoml
daa
sub
sub
inc
iret
pop
cmpsb
aaa
arpl
mov
sbb
sti
and
cli
mov
ja
dec
imul
pop
dec
or
dec
aas
hlt
cmp
ljmp
ret
mov
and
scas
lret
cli
mov
aas
frstor
mov
gs
mov
xor
dec
nop
clc
mov
out
test
add
push
loope
push
add
add
push
xchg
lods
mov
sub
mov
cmp
cwtl
and
adc
into
or
fldl
cmp
lods
mov
lret
jmp
cli
jmp
test
mov
xor
popf
jns
sub
int
pop
xchg
mov
mov
adc
lods
outsb
lds
test
in
dec
mov
inc
add
daa
inc
cmc
pop
lods
fwait
push
ret
cmp
cmpsb
scas
popf
sti
bound
sbb
jg
negb
int3
cli
push
xchg
popa
int3
and
jne
lock
pop
cmpsb
repz
lret
aas
clc
cmp
fcmovne
shlb
and
imul
ret
fs
fbld
inc
jae
mov
lret
add
sub
mov
shr
mov
inc
les
mov
xor
lret
out
mov
inc
jp
clc
rcl
mov
std
f2xm1
dec
scas
mov
pushf
iret
outsl
mov
mov
ret
bound
ljmp
and
andb
dec
test
out
in
mov
mov
cmc
es
adc
sbb
outsl
fstl
aas
mov
inc
cmp
sbb
xor
jmp
lret
inc
mov
icebp
mov
loope
add
cmp
rol
je
sbb
mov
les
stc
ret
call
push
mov
jecxz
test
pop
enter
fcomps
idivb
inc
lods
insl
mov
xchg
mov
nop
testl
fidivrl
and
imul
mov
sub
mov
sub
ret
aam
icebp
or
hlt
and
mov
inc
push
int
inc
xchg
dec
scas
test
push
mov
mov
rol
call
pop
movsl
in
inc
popf
dec
shlb
push
jecxz
cmp
xor
enter
incb
xchg
or
mov
ret
xor
mov
sub
loope
cmc
lods
mov
mov
scas
adc
mov
les
cmp
call
jecxz
dec
push
and
push
push
sub
sub
leave
sub
jmp
test
dec
or
cmp
inc
jg
inc
mov
dec
sbb
mov
jecxz
scas
jo
pop
mov
lods
jne
mov
mov
sbb
dec
jecxz
sbb
hlt
jne
add
scas
push
into
lock
push
daa
cmpsb
push
sub
cltd
sbb
out
sbb
stos
xlat
addl
and
rcrb
mov
add
jne
mov
xor
xchg
xlat
test
lret
mov
rorb
rcr
dec
cs
push
out
out
pop
leave
cmpsb
imul
and
xchg
in
or
jle
movsb
cmp
cmpsl
mov
and
sahf
adc
pop
fcomip
cmp
push
dec
out
fnstenv
cmp
mov
cmpsl
pop
in
mov
mov
es
sbb
mov
and
movsb
add
and
rolb
cmpb
lret
push
iret
jmp
jbe
in
cmpsl
lret
popf
fwait
lcall
jmp
insl
or
push
push
aad
cmc
scas
jbe
in
das
insl
pop
push
int3
jp
jne
out
or
mov
lods
pop
cwtl
add
into
inc
xchg
adc
repz
test
mov
push
dec
sbb
lods
add
mov
aaa
adc
cli
jg
inc
inc
pop
inc
inc
mov
xorb
loop
sub
jp
mov
mov
fdivs
cmc
dec
mov
in
into
mov
stos
jnp
push
jns
sub
rcl
loopne
mov
jg
addr16
dec
sar
add
pop
mov
push
jb
mov
jno
lea
cmc
das
stos
jmp
sbb
in
pop
push
pop
or
in
add
ret
mov
repz
stos
jbe
dec
cmpl
sub
xlat
stos
cwtl
push
jge
lea
outsb
sbb
pop
test
or
test
xchg
mov
lds
inc
jb
pop
incl
loope
or
lcall
lea
ror
rorb
inc
lcall
jle
negl
and
ret
icebp
adc
std
xchg
inc
sbb
fwait
repnz
and
push
mulb
mov
test
lahf
mov
mov
fwait
dec
stc
pop
into
pop
sub
mov
dec
sbb
mov
cmc
leave
cmp
nop
jmp
imul
loope
xchg
inc
add
mov
popa
push
sar
clc
cmp
aaa
es
nop
cs
mov
dec
fstl
es
rorl
subps
test
inc
in
pop
push
adc
jmp
or
xlat
bound
push
mov
aam
inc
ljmp
mov
pop
out
popa
pop
mov
or
fcomps
inc
mov
cmp
pushf
mov
xchg
movsl
push
mov
insl
sti
out
pop
inc
cwtl
addl
sbb
decl
jae
gs
xor
cmp
movsb
outsb
mov
adcl
outsb
aad
outsl
popf
test
dec
and
call
sub
cmp
inc
scas
or
add
push
out
mov
mov
sub
inc
jne
out
xor
inc
das
xor
add
jecxz
mov
fs
and
imul
mov
repz
loopne
mov
push
push
lret
cmp
repnz
cmp
lret
lret
cmp
push
fdivrl
clc
xchg
adc
sub
test
add
sbbb
movsb
fcmovnu
loope
sbbl
jge
loopne
and
into
cmp
out
add
cmp
lret
push
sbb
push
inc
add
xchg
scas
jbe
in
mov
xor
dec
xchg
mov
rcr
dec
xchg
pop
stos
xorl
cmp
sahf
push
adc
aad
pop
fisubl
or
pop
push
lahf
adc
sub
or
aaa
es
std
xchg
sbb
or
dec
outsl
repnz
mov
ljmp
or
jl
add
gs
fidivs
xchg
mov
scas
mov
xchg
jae
btc
ja
in
rorb
roll
std
mov
xchg
sub
xchg
insl
inc
in
int3
and
pushf
push
sbb
cli
jge
dec
lea
add
add
dec
pop
xchg
mov
rol
inc
cld
dec
sti
cmc
push
xor
jg
test
xchg
lods
inc
cli
notl
loop
sti
cwtl
call
clc
xor
xchg
out
xchg
sub
in
imul
sub
sub
cmp
aaa
mov
mov
pop
mov
jmp
enter
xorb
or
add
pop
pop
fistpl
sub
mov
mov
inc
cmpsb
push
inc
addr16
dec
mov
in
int3
bound
pop
movsb
add
fsubrl
imul
popf
dec
mov
fidivl
in
data16
in
dec
cmpsl
test
fcomip
add
out
cwtl
and
lods
sbb
add
rcr
add
jle
jg
or
cmpb
mov
lods
xor
aam
mov
ljmp
test
ds
int3
stc
xchg
test
data16
adc
inc
inc
rorl
repnz
sbb
xor
cmpsl
xchg
lods
cltd
cwtl
outsl
mov
dec
dec
arpl
or
cmp
cltd
lods
and
fidivrs
add
stos
sub
push
cltd
adc
sub
push
push
enter
dec
shlb
insl
add
pop
add
jg
adc
insl
sub
std
cmp
push
jbe
nop
add
push
out
lret
add
aaa
cmp
outsl
pop
mov
movsl
adc
popa
lods
sub
dec
movsb
fsubs
hlt
mov
movsl
xchg
push
xchg
cmp
jl
push
ret
addr16
aaa
mov
loopne
xchg
jno
xchg
mov
jb
pusha
pop
leave
pop
es
arpl
in
mov
fdivrs
ljmp
rorl
xor
negl
xor
inc
and
push
jecxz
xchg
pusha
negb
sahf
dec
fstps
pop
movsl
mov
jle
scas
das
mov
add
cmp
int
cld
adc
mov
pop
mulb
push
stc
jle
pop
add
sarb
xor
sar
fidivl
push
pushf
xor
mov
rcrb
shlb
push
adc
push
lods
es
mov
shll
outsl
insb
test
hlt
push
push
add
inc
pop
and
scas
mov
dec
lds
clc
iret
cli
mov
jnp
mov
sbb
push
insl
lret
sub
inc
or
out
incb
xor
push
xchg
mov
xchg
aam
shlb
roll
in
adc
adc
sbb
clc
xor
imul
cmp
cmp
dec
add
mov
pop
fwait
cwtl
loop
xchg
mov
out
inc
aas
jno
pop
push
cmpb
dec
cld
adc
sbb
mov
sbb
insl
loopne
mov
dec
stos
sbb
mov
sarl
sarl
ja
pushf
mov
push
rolb
lret
push
jno
push
push
enter
loopne
mov
and
dec
inc
std
les
or
clc
ret
jo
or
inc
push
sub
cmp
sub
das
enter
outsl
pop
rolb
dec
xlat
inc
mov
sub
push
adc
push
bound
dec
mov
test
and
out
idivl
int
dec
or
shrl
lret
pushf
movsb
jb
call
push
lods
mov
inc
push
add
fcoml
cmp
xor
pop
es
push
mov
dec
push
sbb
push
arpl
scas
pop
int
inc
pop
cltd
out
mov
or
lock
mov
lahf
pop
jl
adc
cmp
add
sbb
enter
mov
dec
sbb
mov
bound
scas
adc
xchg
xor
push
dec
cmp
xor
popa
push
stos
pop
data16
test
in
out
sub
xor
lret
les
xchg
in
test
bound
repnz
adc
mov
lret
test
je
pop
hlt
adc
xor
push
jmp
mov
xchg
repz
dec
notl
aas
fisubl
mov
xchg
push
cmc
call
sub
mov
decb
sub
fidivrl
sub
lds
pop
pusha
jne
sahf
xchg
pop
jg
in
mov
or
dec
push
inc
mov
push
push
push
call
lahf
mov
lret
shll
cli
adc
in
xchg
movsl
test
jb
push
scas
add
fdivrl
sub
leave
add
add
cmp
test
cmp
mov
inc
in
mov
or
sbb
fs
js
inc
pop
shrb
pop
push
lods
loope
adcl
or
jo
out
fs
push
mov
js
xlat
fiadds
dec
stos
adc
repnz
sahf
test
in
enter
sub
insl
insb
std
pop
out
cmpsb
push
aas
int3
adc
iret
addr16
popf
jne
mov
mov
dec
in
cwtl
jne
inc
jnp
push
push
and
aaa
jecxz
jg
stc
bnd
xchg
addr16
test
and
dec
xchg
pop
pusha
pusha
shl
jle
jb
popa
inc
andl
push
into
push
adc
xlat
lock
in
jge
mov
insb
ret
je
jge
mov
xor
mov
fnstsw
enter
testb
orl
movsb
and
sub
fadd
mov
adc
pushf
add
and
hlt
or
pushf
nop
imul
mov
dec
scas
cmc
fstpt
xor
movsb
shl
ret
mov
xor
xchg
push
pushf
mov
and
jae
jge
adc
mov
cltd
dec
xchg
push
shlb
mov
jg
adc
pop
cmpb
dec
enter
insb
xchg
xor
ret
xchg
test
adc
mov
xchg
cli
mov
repz
cmp
cmpsl
mov
inc
add
cmc
jg
cmpsb
lock
lcall
fwait
mov
hlt
mov
sbb
test
inc
aam
add
push
aaa
sahf
rcl
aas
inc
or
cmp
jno
jle
jle
lods
jmp
cmp
and
sub
jl
cmp
sti
xchg
hlt
or
inc
pop
loope
insb
repnz
or
idivl
mov
and
push
sub
pop
sub
enter
imul
pop
xor
nop
sub
loope
popf
loope
dec
push
cltd
cs
sbbl
out
not
jecxz
pop
add
lods
fdivs
outsb
push
je
and
and
jae
xchg
cmp
outsb
jp
pop
sub
or
sub
bound
pop
mov
scas
repnz
pop
sbb
cli
xor
stc
push
cmp
rclb
push
popw
es
mov
and
add
cli
test
pushf
jmp
test
lea
sarl
fsubrs
clc
jl
push
dec
mov
pop
cmc
insl
add
adc
pop
into
cltd
mov
mov
movsb
stc
cli
rolb
mulb
outsl
add
xchg
and
aam
mov
xor
sub
cmp
rcl
stc
sub
dec
into
add
cmp
push
xchg
fistps
test
and
mov
jmp
outsl
sub
icebp
or
mov
loop
mov
pop
push
or
xchg
add
cmp
adcb
rcrl
outsl
xor
mov
jns
pop
cmpsl
add
jne
add
add
mov
mov
add
loop
call
push
test
cmpsb
push
pop
in
fisttps
imul
aad
lret
ffree
cmc
add
mov
fidivs
pushf
int
int
mov
inc
mul
and
clc
pop
andb
fisubl
push
and
arpl
movsl
enter
mov
add
iret
cli
lret
out
dec
je
dec
fs
out
sbb
in
fisttpll
cs
test
test
negl
je
pop
rorb
cmp
sarb
and
adcb
outsb
pop
xor
and
dec
outsl
push
mov
xchg
out
ss
mov
inc
sub
cmpsl
pop
adc
int
nop
test
les
cwtl
in
or
mov
and
mov
xchg
out
rcrb
stos
lods
out
icebp
fbstp
jbe
sbb
mov
cld
mov
fisttpl
fistl
push
in
enter
adc
inc
pop
lcall
test
div
lahf
jnp
xor
and
adc
adc
or
jmp
enter
loopne
pop
jb
pop
movsl
nop
cli
lds
pushf
shrb
inc
int3
xchg
repnz
sbb
adc
into
adc
out
loope
in
fistps
loope
out
xorb
sub
pop
sub
xor
sub
in
ficoml
push
add
cmp
add
adc
xchg
jne
andb
bound
add
ret
popa
fs
lock
xor
xchg
dec
sbb
loopne
pop
sbb
lock
sub
or
aam
sti
call
nop
mov
cmp
dec
das
aas
lret
and
out
es
jno
repz
sbb
movsl
xchg
fldcw
sarb
lods
ss
push
lock
cli
jmp
sub
pusha
mov
cmc
cmpsl
mov
aam
sbb
nop
sbb
pusha
movsb
or
jno
or
pop
fsubl
cmp
in
jecxz
dec
jae
inc
sbb
xchg
cmpsb
jl
cli
sub
adc
in
xchg
mov
xchg
les
sbb
in
add
dec
mov
stos
and
arpl
adc
idivb
add
push
mov
push
dec
xchg
or
add
fcomps
add
outsb
stos
pop
sbb
cmp
or
sub
lret
pop
mov
loope
adcl
adc
lds
xor
test
and
sbb
inc
jne
mov
outsb
je
xchg
inc
cld
mov
mov
and
jne
clc
sbb
jno
sbb
jne
lock
leave
je
sub
aas
xchg
pop
lret
ss
inc
adc
dec
mov
cmc
dec
cmc
jno
fdiv
pop
sub
mov
xchg
aam
add
shlb
push
adcb
shrb
inc
inc
and
cli
cli
jge
stos
adc
add
xchg
jecxz
jp
pop
sbb
ret
and
or
inc
adc
add
sbb
lock
mov
dec
fbstp
fiadds
xchg
xchg
add
leave
mov
xchg
xchg
int
xchg
push
lret
jmp
xchg
mov
das
pusha
cli
inc
dec
insl
pop
sti
or
push
je
mov
xchg
mov
xchg
test
xorb
inc
and
clc
xor
add
xlat
fbld
fnstsw
lcall
dec
nop
sbbb
mov
pop
pop
sbb
mov
movsl
popf
or
inc
push
dec
add
xchg
add
in
and
inc
je
cmc
and
or
cmp
adc
cwtl
pop
or
lods
cmp
sub
scas
push
out
stc
mov
test
cmp
adc
testl
and
inc
rcrl
repz
std
push
sub
lcall
outsl
shlb
mov
xchg
incl
xchg
inc
das
and
mov
ret
repz
out
jne
bnd
mov
push
and
lahf
les
and
push
pop
inc
pop
jae
data16
popf
push
cmp
mov
insb
and
data16
ljmp
xor
daa
xor
es
gs
lods
mov
and
test
push
dec
imul
sbb
jge
push
out
movsb
ds
cltd
jg
cmp
adc
xchg
xchg
adc
mov
mov
cld
and
jne
popa
lahf
repz
xchg
popa
imul
sbb
pop
mov
imul
sbbb
mov
and
jmp
lcall
faddp
ret
push
test
inc
push
mov
mov
das
aas
sbbl
or
pop
leave
jp
fdivl
sbb
cmp
mov
cli
xchg
cmc
push
xchg
xchg
addr16
pop
mov
adc
mov
or
adc
pushw
xor
xor
mov
outsl
push
push
push
sbb
fwait
dec
mov
ja
gs
sub
test
lds
adc
pop
sub
push
pop
and
setae
fisubrl
pop
xchg
xor
stc
xor
jo
jne
cli
jmp
jns
xorb
repz
push
xor
fdivp
dec
pop
test
test
cmp
jo
mov
push
jns
push
jno,pn
das
fcoms
sti
jg
lcall
push
sbb
fidivs
stos
in
push
mov
adc
sub
repnz
shll
ljmp
xlat
cs
imul
mov
shr
jg
out
test
cmp
sahf
jne
xchg
or
cmp
adc
repnz
mov
int
jbe
nop
loopne
imul
fwait
lock
or
cmc
fsubp
mov
xchg
add
test
mov
jo
cmp
lcall
xchg
call
loop
mov
enter
jno
sub
sbb
inc
sub
movl
sti
es
xchg
add
mov
xchg
or
and
push
add
xor
aad
sbb
icebp
adc
adc
rcrb
pushf
adc
add
mov
notl
sbb
arpl
sahf
mov
dec
bound
pushf
repz
jg
xlat
inc
nop
into
jo
mov
pusha
popf
cmp
jmpw
paddusw
jge
jle
xchg
adc
ja
sbb
and
mov
sbb
jnp
ret
xor
cmp
ss
out
nop
gs
push
dec
jnp
adc
mov
clc
xchg
int
sldt
loop
fwait
sub
lahf
jle
rol
movzwl
pop
popf
lcall
push
fwait
dec
int
xor
push
mov
es
cmp
mov
mov
mov
push
xorb
xchg
add
mov
iret
stos
popf
mov
nop
mov
push
add
in
cmp
cmp
lret
dec
pop
jg
jae
fisttpl
scas
cmp
fwait
cld
aas
xchg
adc
enter
inc
push
jo
rorb
dec
add
stos
in
and
enter
inc
adc
imul
xlat
imul
inc
inc
pushf
sbb
sbb
fldt
call
jo
out
push
into
sahf
fsts
enter
je
ret
cmpsb
pop
push
insl
lret
and
aas
mov
lods
out
mov
stos
test
jp
xor
pop
jo
pop
cmpsb
data16
addr16
inc
rolb
ljmp
pop
sbb
mov
idivb
arpl
clc
daa
mov
mov
in
repz
int3
js
pushf
jbe
push
xor
push
add
xchg
sbb
cmpsl
xor
mov
shr
ficomps
jg
jle
mov
adc
shrb
adc
mov
nopl
dec
jmp
push
dec
jmp
mov
loopne
es
mov
xor
aaa
fcomps
add
sub
push
imul
lret
insb
and
cltd
push
mov
fimuls
sub
dec
mov
mov
popf
daa
add
pop
mov
pop
mov
daa
and
jmp
push
cli
rcrb
insl
fdivrs
aas
notl
add
mov
jecxz
lret
popf
mov
lcall
pop
ret
in
mov
push
mov
cltd
in
mov
rorb
mov
mov
xchg
pop
dec
sbb
stc
xchg
aam
mov
xor
and
and
xlat
std
out
pop
pop
sub
mov
mov
das
jg
push
dec
ret
cmpsl
sub
push
pusha
xchg
or
adc
insb
popa
pop
rorl
leave
add
out
movsb
pop
sub
lahf
jae
mov
clc
sub
add
cmc
pop
sub
push
push
adc
push
or
pop
insl
imul
cmpsb
push
push
sti
sbb
outsl
sub
std
push
imul
test
push
loopne
xor
push
ret
fsubs
sbb
scas
fdivrs
cmp
shrb
xchg
mov
sbb
dec
pop
xor
and
mov
lds
test
xchg
xchg
sbbb
jns
mov
pop
cmp
arpl
dec
loope
add
xchg
addb
and
xchg
clc
or
out
fbld
sti
scas
jne
arpl
dec
pop
lret
xchg
loope
jb
jmp
sti
jne
shrl
sbb
and
bound
clc
mov
cmp
movsl
dec
jge
mov
cmpsl
jo
or
das
jno
je
std
stc
stos
mov
loop
fldl2t
test
inc
subl
mov
xlat
dec
mov
add
lods
cmp
sub
adc
cltd
dec
cmp
xchg
pop
and
cmp
push
mov
xor
sbb
jae
cwtl
or
lcall
push
xor
cmp
addl
in
lds
cmp
ja
xor
adc
inc
xor
pop
sbb
rorb
negl
dec
ljmp
rolb
call
faddp
in
out
data16
daa
insb
mov
mov
out
add
mov
fwait
sub
mov
mov
hlt
sub
mov
jns
push
jg
gs
fs
pop
in
rorb
inc
pop
pop
mov
sub
iret
cltd
into
jnp
pop
jno
or
jbe
fwait
sbb
cmp
xchg
push
pop
insb
hlt
icebp
mov
and
stos
nop
cmp
lock
cmp
mov
ss
pop
jg
push
jne
adc
inc
iret
fnstcw
adc
inc
rcll
shll
adc
jp
jnp
sbb
sub
adc
ret
cmp
push
cwtl
hlt
ret
dec
lret
dec
stos
xchg
into
mov
scas
push
sbb
lds
and
sub
pop
scas
sbb
cmc
out
mov
out
imul
cwtl
add
test
xchg
jge
bound
shr
push
push
push
cmp
out
mov
mov
pop
jmp
and
js
or
outsl
popf
nop
data16
pop
scas
loope
and
aaa
stc
pop
enter
rcrl
or
push
pop
shrb
mov
jns
les
out
jbe
cltd
xorl
mov
jne
scas
repnz
jo
scas
pop
incl
dec
cld
dec
imul
lods
sub
push
pop
jecxz
cmp
add
inc
stc
icebp
hlt
stos
fdivr
insb
cli
jecxz
ljmp
lcall
cmpsb
push
cmpsl
data16
and
inc
out
out
and
stos
imul
mov
fcomps
dec
xor
in
es
icebp
or
and
pop
add
aas
daa
and
cld
scas
push
fisubrl
inc
cli
cmp
mov
clc
in
cmp
cmpl
and
push
ret
pop
test
cs
cmpsb
jp
outsl
std
jecxz
je
sub
adc
or
xchg
rorb
xor
sbb
sub
mov
jecxz
dec
fadds
nop
or
rcl
nop
insb
out
sub
mov
dec
push
lret
lret
sbb
popf
and
stos
and
xchg
pop
es
jb
cmpsl
cmp
mov
mov
lock
adc
jnp
fadds
xlat
test
inc
rclb
adc
push
scas
sbb
iret
bound
mov
lods
cmovae
movsw
pop
sub
xor
pop
pop
adc
lcall
xchg
fwait
mov
out
push
mov
loopne
add
je
inc
cmpsl
outsl
leave
push
push
ss
icebp
jo
dec
mov
push
lret
jl
jns
nop
mov
popa
inc
sbb
frstor
cmp
loopne
jne
or
ja,pt
mov
add
into
jae
divb
add
in
xchg
nop
cmp
sti
xchg
cmpsb
sbb
std
adc
xchg
nop
jl
add
mov
mov
out
ss
out
dec
cltd
mov
outsb
ljmp
insl
jp
mov
inc
pushf
push
insl
xchg
xorb
test
inc
push
jecxz
and
stos
pop
cmp
out
mov
push
inc
cmp
jmp
xor
cmovle
hlt
in
sbb
pop
adc
rcll
push
cmp
sbb
cmp
xchg
sahf
push
jno
ds
lcall
sub
mov
add
cmpsb
addl
nop
sti
gs
add
imul
xchg
mov
jbe
pop
fildll
aaa
rol
add
push
mov
xchg
xbegin
dec
jns
sbb
pop
adc
pop
in
in
inc
ja
insl
xchg
dec
subl
int3
ss
cld
cmpsb
adc
inc
dec
adc
sahf
adc
lds
ret
nop
out
jnp
add
sub
add
pop
xchg
fistpl
adc
stc
rcl
mov
lea
pop
jns
lcall
xchg
mov
arpl
imul
cmpsl
aas
add
mov
shrl
ret
aaa
fwait
pop
sbb
xchg
add
mov
mov
negl
add
lods
roll
mov
fdivrl
mov
dec
movsb
fldenv
mov
nop
fisttps
pop
hlt
ja
dec
pop
std
ud2
jl
sub
adc
shll
adc
jge
and
mov
pinsrw
jg
sbb
insb
dec
fcomip
or
sbb
xchg
add
or
xchg
push
sbb
call
inc
and
cmp
fld1
jge
aas
mov
jo
sbb
insl
gs
inc
mov
pusha
sub
jns
movsb
les
or
lds
ficoms
adc
outsl
sbb
arpl
inc
shll
pop
loop
div
ja
push
xlat
in
das
push
cmp
push
push
sbb
aad
lods
inc
sbb
xor
bound
inc
test
adc
and
shlb
bswap
lretw
jbe
xchg
fs
and
pusha
pop
aad
int
cmc
ja
fwait
xor
rorl
sbb
cmp
mov
add
cmp
loope
jns
xchg
bound
lret
add
nop
xchg
adc
sub
mov
ret
inc
subl
ficoms
scas
push
jle
mov
loopne
insl
or
add
daa
cmp
adc
int3
push
xchg
xchg
adcb
imul
lret
aam
lock
push
xor
xchg
push
push
out
call
shlb
inc
gs
outsb
jl
xor
es
and
dec
sbb
mov
fdivrs
andl
dec
cmc
jb
jmp
push
sbb
in
fbstp
data16
icebp
mov
cli
out
pop
jle
and
adc
lahf
cli
jo
jecxz
mov
sti
int3
loope
and
lds
add
push
inc
add
dec
imul
xor
aaa
or
lahf
cld
fcomps
xorb
and
es
xor
mov
movsb
loopne
clc
movsb
cs
mov
push
int
imul
std
cwtl
inc
fs
repnz
lock
cmpsl
outsl
pop
lock
fucomp
mov
adc
push
sub
push
dec
xchg
push
int
aam
into
sub
test
cmp
xor
fs
xchg
mov
push
sbb
cmpsb
pop
inc
test
xlat
push
test
ret
adc
adc
fisttpll
mov
jne
sbb
or
dec
insb
pop
bnd
jmp
sub
int
mov
int3
cmc
movsb
adc
lahf
pop
clc
dec
or
cmp
cmp
imul
fcmovu
xor
bound
sbb
inc
jmp
imul
add
and
dec
push
sar
add
cmp
in
cld
sbb
into
pop
or
add
jg
insl
dec
mov
sbb
inc
sub
push
jle
test
or
cmp
xor
mov
lock
cmpsb
adc
or
adc
rcl
cmp
outsb
cmp
iret
pusha
push
out
jo
dec
add
xchg
mov
or
fs
and
adc
or
cmp
add
sbb
outsb
pop
adc
int
cmovns
dec
movsb
and
xorb
cld
xchg
jl,pt
mov
leave
or
inc
loopne
sbb
sti
mov
arpl
leave
add
push
idiv
leave
leave
repz
lret
push
mov
bound
jo
add
sub
mov
or
adc
add
loopne
pop
call
mov
das
sub
je
pop
mov
out
fwait
xchg
adcl
shrw
jl
test
ror
xchg
scas
xchg
stos
pop
mov
orl
aam
jne
xchg
les
pop
ljmp
ja
ret
inc
outsl
int
push
lcall
jmp
add
loop
stos
outsb
je
fwait
sub
jno
in
imul
inc
mov
cwtl
aas
pop
pop
ret
loopne
dec
adc
cmpsl
hlt
stc
leave
inc
cmpsl
iret
mov
cmpl
enter
hlt
xchg
cli
mov
ja
aaa
or
lret
mov
or
lcall
popa
xor
push
push
aad
orl
outsl
ljmp
push
xlat
loopne
adc
andb
pop
in
sti
in
fisubrs
dec
fldt
cli
fistl
aaa
jbe
fwait
jns
daa
mov
popa
sub
fcompl
movsb
cs
scas
sbb
dec
jecxz
movsb
xchg
in
mov
mov
mov
out
fiadds
mov
or
pop
in
not
inc
loop
js
dec
xchg
push
xchg
inc
dec
push
and
arpl
add
lock
push
xchg
mov
xchg
out
insb
xor
rcll
lret
xor
inc
sub
jmp
leave
stos
popa
mov
adc
call
xchg
fwait
dec
jecxz
push
jmp
lret
cmp
test
push
outsb
inc
popa
mov
jp
incb
cmp
add
xor
popa
push
cmp
adc
jl
sbb
data16
scas
mov
hlt
ds
push
or
out
adc
mov
inc
inc
xchg
xor
add
jb
xchg
mov
call
mov
lds
cmp
fwait
dec
mov
jmp
push
aam
inc
add
and
jae
sarb
push
xor
xor
mov
sbb
push
cmp
notb
cld
cmp
cmpb
fidivl
aam
jo
dec
icebp
fs
out
push
jge
lret
in
or
ficoml
out
dec
pushf
jg
jo
inc
neg
roll
lahf
or
sub
mov
jne
add
mov
nop
ficompl
bound
xor
jo
ja
int
rolb
xchg
jg
test
mov
jmp
push
aas
lods
push
pop
mov
stos
sbb
sti
mov
je
sbb
jbe
sar
fdivr
mov
loop
or
int
mov
ret
adc
hlt
sti
inc
xchg
jae
insb
dec
inc
popa
stc
mov
insl
movsl
cld
jg
loop
cmp
jmp
stos
ret
mov
movsl
inc
add
in
popa
lahf
popf
add
ljmp
int
ds
lds
pushf
inc
push
sbb
loop
push
dec
mov
mov
xchg
mov
cmp
decb
sbb
pop
or
inc
ret
xchg
lods
lds
xchg
repz
test
dec
test
loop
pop
popa
cld
dec
mov
sub
or
leave
and
adc
jno
cmp
in
mov
lea
incl
ljmp
xchg
xchg
imull
push
es
push
lds
cmc
push
and
cmp
adcl
je
jno
xchg
jmp
mov
iret
leave
stos
add
mov
into
popw
test
dec
popf
outsb
push
add
es
not
lods
push
mov
dec
fdiv
gs
pop
leave
xlat
std
xchg
daa
fidivrl
cmp
stos
loope
xor
dec
repz
push
push
dec
jle
dec
sub
xchg
cs
pop
inc
ja
out
mov
sub
addb
inc
pop
sbb
mov
loope
pop
lods
push
subb
jle
inc
addr16
sbb
shl
inc
mov
jge
call
jge
daa
sbbb
and
or
je
mov
ret
rolb
mov
aad
jg
and
pcmpgtd
aaa
xor
and
lds
or
xor
add
add
mov
lock
enter
pop
adc
xchg
adc
fs
dec
clc
pop
jae
or
icebp
jae
mov
movsl
mov
fsubl
filds
add
fs
cmp
jg
cmp
rcrl
ds
fists
xor
dec
in
ja
cs
xchg
cmp
sub
push
scas
lods
out
xor
ror
imul
stos
push
add
push
xor
jbe
dec
lahf
xor
scas
mov
shll
dec
xor
add
or
fstpl
mov
mov
lret
roll
xchg
or
lods
subb
pop
adc
push
and
push
pusha
test
sub
stos
mov
sbb
jmp
ficoml
adc
es
fwait
out
aas
ljmp
in
int
xchg
xchg
sub
lahf
outsb
xchg
jp
add
add
fsubl
jecxz
in
add
pop
out
imul
ljmp
adc
outsl
adc
push
push
adc
cmp
sub
cs
out
imull
cmp
clc
push
dec
pop
ljmp
adc
pushf
mov
rorb
cli
lea
pop
sub
aad
dec
inc
sub
sub
fildll
sub
cmp
xor
pop
fs
ljmp
out
jnp
loope
pop
mov
push
jbe
and
stos
mov
ret
inc
jp
iret
inc
push
lods
stos
lods
add
sub
fldenv
outsb
adc
push
add
sbb
addr16
sbb
call
fs
push
or
rol
test
sub
inc
aam
sar
movsb
es
cmp
add
aas
push
cmp
inc
sub
cmpsl
mov
sbb
push
cmp
ljmp
repnz
stos
fisubl
rcrb
mov
sub
pop
addr16
pxor
jbe
jnp
mov
xor
jne
mov
add
push
repnz
xchg
dec
cld
arpl
es
mov
cmp
xchg
xchg
neg
addr16
xor
jg
in
loope
cltd
scas
mov
sbb
in
mov
lea
push
lds
stos
and
push
imul
push
mov
sub
jb
in
cmpsb
mov
mov
cld
push
imul
xlat
out
jg
insl
xchg
inc
enter
call
mov
xchg
lret
fistpll
jne
ret
xchg
fwait
inc
push
push
adc
sti
sbb
push
jno
xchg
aad
clc
aad
inc
cld
lret
cmp
ret
pushl
push
mov
xchg
sub
adc
and
or
cli
xchg
sbb
in
xor
jo
add
movsl
bound
add
and
xchg
pop
add
lods
push
dec
adc
jno
or
sbb
lock
and
cmp
and
insb
shl
outsl
ret
cmp
fcomps
push
mov
icebp
rolb
mov
sbb
icebp
shrl
dec
imul
xor
mov
cli
in
xor
xlat
mov
decl
outsb
cmpsb
divb
call
fcomip
sti
das
xchg
shlb
mov
lods
lahf
xor
mov
mov
cmp
ret
nop
lods
adc
add
cli
call
jns
loopne
ret
clc
lods
out
xchg
mov
pop
iret
push
repz
dec
loopne
cmpsb
test
test
push
jp
inc
push
and
dec
jb
mov
mov
xor
pop
or
ret
xlat
or
aam
daa
test
xchg
mov
xor
pop
pop
jg
xchg
sbb
add
mov
mov
les
and
pushf
fs
inc
sbb
xor
pop
xchg
ja
xchg
out
iret
mov
sbb
and
mov
sub
jle
push
es
pop
mov
in
pop
cmp
divb
in
mov
and
jne
ds
dec
mov
fisttpll
repnz
push
dec
sub
fcmovne
mov
xorb
leave
pop
xchg
popf
add
adc
arpl
sub
icebp
fs
popa
pop
dec
adc
pop
int
pop
out
lcall
cld
js
fdivp
mov
rcl
xor
fistps
push
xchg
out
cmp
jo
orl
pop
jnp
sbb
idivb
add
fildl
push
idivl
mov
dec
leave
sub
push
jb
sbb
cli
and
insl
push
and
jo
loope
sbb
fldcw
dec
fs
in
xlat
test
into
shrb
std
add
sti
mov
outsb
jb
sti
or
cwtl
pop
scas
pop
hlt
addl
hlt
pop
in
sub
and
and
mov
pop
addb
adc
iret
sbb
xor
fists
cmp
cld
bound
ss
shlb
sbb
sub
push
mov
or
mov
out
sub
xor
pop
adcb
out
inc
bound
and
repnz
dec
sub
xor
xchg
out
push
test
dec
jo
mov
addb
aam
fwait
mov
pop
mov
sbb
sbb
popf
loop
fcoml
scas
xor
dec
bound
test
push
outsb
dec
icebp
lahf
and
cmovno
mov
jmp
add
mov
mov
and
repz
xchg
adc
mov
das
jmp
mov
and
push
lret
addl
loop
jb
sub
fwait
mov
lea
aad
and
cmc
bound
test
shlb
pop
scas
test
or
fcompp
mov
jp
sub
popa
icebp
xchg
xchg
sub
jo
into
out
jmp
ljmp
dec
enter
cmp
inc
arpl
fmull
xchg
pop
mov
int3
inc
adc
mov
inc
pop
mov
xchg
pusha
cmp
mov
in
sub
and
cld
call
and
mov
lods
cmpsl
jb
push
in
mov
in
popf
xor
insb
ds
addr16
pusha
jbe
aam
sbb
lahf
loop
out
lret
sbbb
repnz
lods
fbld
rcrb
or
sbb
sbb
cmpsl
adc
cmp
adc
inc
cwtl
adc
and
or
push
shlb
fs
jmp
outsl
jmp
jle
inc
dec
xchg
mov
mov
leave
popa
enter
lcall
dec
leave
mov
daa
data16
lret
insb
push
sbb
imul
pop
mov
jecxz
mov
aam
lret
mov
cmp
lock
xor
xor
lret
aas
push
cld
sbb
fs
loop
sbb
pop
js
push
push
xor
mov
int
mov
xor
fidivrl
pop
scas
rcrl
adc
jo
inc
xchg
push
mov
loop
in
add
sub
push
test
sub
jg
sbb
or
arpl
jns
push
push
nop
mov
mov
lcall
jno
out
or
lahf
mov
sbb
mov
jp
xor
std
mov
bound
jmp
xchg
mov
out
test
mov
xchg
mov
cmp
scas
jp
xchg
add
outsb
inc
test
add
pop
stos
lods
cmpsl
scas
dec
and
pop
mov
loop
out
in
or
mov
fs
cs
hlt
adc
adc
loopne
enter
jecxz
xchg
xchg
jge
leave
push
push
or
stos
nop
inc
sub
pop
push
out
push
jno
sti
ds
lcall
andb
mov
jb
push
popa
dec
inc
push
std
mov
dec
sbb
cli
pop
hlt
aas
out
insl
popa
jmp
test
test
sahf
insb
mov
mov
xchg
pop
or
dec
or
push
adc
and
movsl
add
dec
inc
lcall
fwait
add
ror
and
aam
xchg
and
mov
es
nop
pop
std
outsl
push
pop
and
jne
push
mov
and
push
jg
jp
icebp
sbb
push
xchg
add
jp
loope
mov
lock
pop
mov
imul
inc
inc
ret
lcall
add
es
cmovl
fisubrs
xlat
outsl
popf
repz
add
push
bound
dec
xor
ficoml
in
pop
out
lret
push
gs
movsl
push
jnp
fcmovnb
adc
mov
dec
out
push
xorb
rol
imull
xor
sub
jl
fistps
xor
pop
out
mov
fnstsw
scas
add
outsb
pop
imull
inc
stos
mov
add
test
movsl
mov
dec
scas
in
sbb
adc
inc
std
adc
cwtl
fsubrs
fidivrs
pop
xchg
int3
inc
into
and
in
les
inc
mov
sbb
mov
or
fs
cmpsb
jnp
fisubrs
lods
sahf
into
int
dec
iret
xchg
pop
out
lods
jle
test
and
stos
hlt
sbb
and
lret
or
pop
movsl
into
in
pop
lods
xchg
fisubrs
cmpb
enter
or
dec
stc
push
aad
dec
xchg
cwtl
ret
push
xor
push
mov
dec
add
ret
push
and
cmp
add
xorb
pop
cld
data16
pushf
push
je
fcoml
loope
push
xor
js
adc
sub
ret
xlat
sub
jge
ret
in
or
gs
xchg
sarl
jge
xchg
in
sti
iret
mov
and
rolb
in
push
mov
mov
cs
call
jl
sbb
lmsw
rorb
xchg
lods
mov
vmovdqu
fwait
pop
sub
cmp
leave
lods
test
dec
xchg
notb
pop
fcom
into
repnz
test
rol
add
add
jns
dec
loopne
mov
jecxz
incl
sti
inc
testl
ret
mov
mov
aam
test
shlb
push
pextrw
daa
inc
or
daa
scas
add
cmp
lea
sbb
inc
ret
mulb
cmp
sbb
call
test
xor
or
sbb
repnz
movb
or
mov
lcall
or
adcb
cmp
xchg
push
ljmp
pop
pushf
out
jns
pop
and
mov
out
pop
jns
pop
sbb
jns
out
mov
push
mov
cmc
adc
sbb
les
hlt
and
xchg
dec
int
es
mov
lret
push
xor
adc
jae
mov
cmp
pushf
pop
test
pop
pop
mov
lcall
fstps
fisubrl
and
ds
adc
lret
jp
test
adc
fidivl
ja
adc
mov
mov
cmc
add
sbb
pop
shll
jne
lea
roll
mov
push
popf
test
es
sub
test
subb
std
cld
sbb
xor
cmpsb
cmp
dec
fstp
dec
pause
push
inc
ss
fnstsw
aas
xchg
or
add
jmp
jmp
test
orl
dec
xor
pop
or
mov
insb
out
sbb
bound
pop
add
mov
xchg
loopne
xor
mov
ja
enter
adc
sub
ss
mov
outsb
cs
leave
jb
aad
addr16
xor
cmpsl
fisubs
jl
sahf
xchg
out
icebp
lea
lcall
jmp
jae
call
inc
pop
or
pop
jge
sbb
pop
cs
les
push
test
jb
into
fwait
cmpsl
push
int
pop
pop
loopne
adc
pusha
ret
jnp
add
or
mov
jg
sahf
nop
adc
sub
mov
jmp
loope
sbb
pop
icebp
lods
pop
out
xor
push
int3
out
test
fs
mov
pop
bound
cvttps2pi
push
inc
loope
addb
sub
mov
out
cmc
cmp
mov
dec
imul
or
add
mov
fwait
out
loopne
imul
dec
xchg
cmp
pop
sub
push
rorb
into
push
xchg
lds
xchg
movsb
imul
inc
mov
xchg
ret
fdivs
fdivp
lea
data16
test
popf
jle
add
push
int
adc
je
insl
rol
enter
out
pcmpgtb
mov
push
cmpsb
xchg
and
filds
adc
test
out
jns
mov
push
pop
clc
jae
lods
stos
imul
ret
or
cmc
shr
inc
sbb
fwait
arpl
cmpsb
push
xor
daa
mov
xchg
aas
dec
jnp
ss
push
test
lret
jecxz
add
xlat
test
les
cmp
outsl
pop
dec
mov
daa
adc
xchg
add
dec
in
aaa
mov
out
sub
sti
mov
inc
dec
sbb
sarb
imul
into
jge
cmp
pop
add
xchg
test
jo
mov
adc
mov
mov
mov
mov
sbb
xchg
ljmp
and
sub
jecxz
jb
fcoms
fs
hlt
adc
pop
mov
or
jb
and
adc
rcrl
jmp
xchg
cmc
icebp
mov
jnp
sbbb
adc
lds
fisttpl
cmp
andl
pusha
xchg
int
aad
push
adc
xchg
xchg
stc
xchg
gs
or
dec
in
xor
and
je
mov
sub
iret
outsb
hlt
stos
mov
mov
je
mov
jne
sub
jo
pop
cs
scas
or
pop
insl
aaa
push
decl
icebp
fdiv
push
rorb
ficomps
push
xor
popf
outsb
mov
enter
dec
mov
add
int
add
add
iret
add
ret
subb
cmp
stos
and
popa
pusha
cmp
xor
sbb
dec
dec
les
sub
jle
pop
das
test
mov
movb
cmp
sub
xchg
in
xlat
sub
rol
test
wrmsr
shrl
push
xor
cmc
jbe
sarb
sub
inc
mov
and
icebp
inc
push
push
shl
lods
adc
xor
repz
aam
sahf
mov
test
test
xchg
mov
outsl
dec
inc
incb
and
sub
mov
ret
xor
inc
dec
push
jmp
out
shrl
daa
xchg
call
jecxz
cli
imul
fisubrl
outsl
push
cli
or
fsts
inc
dec
pop
loope
out
mov
jp
xor
xor
mov
pop
daa
lret
dec
pop
dec
jo
call
push
int
push
cli
scas
shr
lods
jae
push
mov
cmp
pop
imul
lock
sub
int
inc
hlt
add
adc
aam
and
lret
bound
shll
xchg
jmp
mov
mov
repnz
sub
mov
or
sarl
xchg
mov
pop
bound
data16
sbb
repnz
notl
dec
dec
sbb
jg
shl
aaa
std
ffreep
notb
xor
and
jb
mov
lcall
insb
jns
inc
rol
ljmp
js
subb
mov
dec
jl
push
mov
lret
negb
add
cmp
fisttpl
bound
popa
add
mov
sub
out
sbb
mov
mov
pop
cwtl
cmp
sub
rcrb
les
or
cmpsl
sbb
sbb
add
mov
cmp
jl
cmp
jl
and
repnz
add
jge
in
fcompl
xchg
cmpsl
shll
mov
fcmovnu
jp
call
out
gs
sub
add
xchg
inc
inc
bound
js
int
mov
rclb
xchg
mov
test
ljmp
pop
icebp
pop
imul
cmc
loope
aam
cli
mov
mov
add
lds
in
das
sbb
mov
test
add
inc
stos
inc
out
dec
mov
push
adc
lahf
jne
or
js
fisubrl
popf
shrl
ss
add
xchg
and
adc
fs
orl
clc
add
cld
add
jp
stc
xchg
or
lret
adc
cmc
fistps
push
aas
repz
add
sbb
fwait
jns
sti
bound
add
les
cmp
test
mov
imul
push
cltd
jmp
daa
pop
jne
enter
repnz
mov
loope
dec
sbb
xchg
cmp
outsl
pop
rclb
int
sti
lcall
or
sub
dec
daa
add
mov
pop
les
fdivrs
cltd
lods
jmp
subl
mov
ss
sbb
out
lds
loopne
mov
clc
and
pop
fidivrl
pop
fildll
jae
std
nop
stos
je
repnz
les
mov
sbb
inc
mov
adc
pushf
push
mov
gs
std
repnz
mov
stos
lea
or
mov
mov
test
in
cmc
ret
mov
cwtl
idivl
mov
std
data16
subl
mov
push
sub
sub
aam
cmpb
dec
mov
mov
lds
or
pop
dec
into
push
or
xor
jno
inc
pop
pusha
mov
clc
cmp
stos
daa
popa
jbe
ljmp
xlat
or
sbb
push
adc
cwtl
push
out
dec
out
bound
adc
inc
xchg
repz
cwtl
shrb
lods
add
add
cmp
sbb
lahf
scas
sub
push
mov
sbb
sub
xor
shrb
xchg
jno
sbb
repz
rclb
add
fs
pop
bound
aas
loope
mov
idivb
sarl
or
jl
inc
dec
out
fwait
mov
jno
cltd
jecxz
or
pop
mov
lahf
ljmp
je
iret
jae
mov
js
mov
mov
cmp
inc
pop
aas
aad
xchg
xchg
ror
push
xchg
xchg
sub
icebp
xor
out
lds
xor
add
imul
xor
ret
sub
dec
xchg
mov
dec
adc
lret
xchg
fiaddl
dec
xor
scas
adc
out
pop
fisttpl
lcall
sub
or
jg
rclb
cs
mov
mov
pop
sub
push
mov
fwait
add
test
in
cmpb
push
lret
loop
pop
lds
loope
dec
push
mov
xchg
popa
ret
cmp
and
out
push
bound
push
pop
cmp
imul
mov
add
sbb
dec
push
imull
addr16
mov
mov
and
mov
mov
dec
popa
jnp
dec
daa
push
adc
cmp
jo
push
jl
jo
lock
push
movsb
lcall
pop
stc
xor
adc
sbbl
pop
inc
cmp
push
lcall
mov
mov
pop
popl
insb
inc
xchg
push
sbb
and
push
sbb
sub
in
rcrl
or
int
mov
in
push
nop
or
xchg
xor
in
cmp
enter
mov
sub
aaa
mov
rol
jo
push
and
dec
lock
push
or
dec
imul
mov
stos
insb
pop
stc
sahf
sbb
pop
movsb
sbb
shl
adc
in
adc
push
js
dec
rclb
mov
mov
cmc
bound
mov
mov
cmc
jnp
imul
js
jns
dec
sub
xor
dec
lcall
inc
aam
jmp
sbb
pop
out
fwait
xchg
xchg
dec
pop
cwtl
insb
sti
incb
lret
arpl
stc
or
repnz
testb
fstps
jbe
sbb
pop
push
test
mov
call
subb
scas
stc
out
cwtl
mov
out
jg
inc
add
fldl
out
cmc
icebp
cs
mov
mov
imul
fcomip
or
out
cmp
in
mov
push
clc
imul
hlt
push
iret
cmp
mov
stos
dec
sbbb
push
adc
in
scas
in
mov
mov
imul
cwtl
jmp
and
jp
xchg
pusha
adc
push
adc
cmp
pop
addr16
cmp
add
lea
add
addr16
pusha
sarb
mov
imul
mov
outsb
enter
inc
sbb
mov
repz
shlb
and
or
xchg
xchg
push
aas
sbb
push
mov
sbbb
dec
jle
mov
iret
sbb
mov
jo
xor
shl
and
pop
push
in
cmp
lahf
pushf
pop
lea
leave
push
pop
jae
fisttpll
lcall
or
loopne
and
mov
test
sti
push
pop
movsb
jne
stos
pop
cmp
lcall
mov
xor
pop
rolb
jl
mov
cltd
sbb
dec
rclb
std
sarb
jbe
aam
lret
mov
lret
pop
mov
je
adc
sub
div
jno
push
lcall
ret
mov
or
xor
hlt
adc
inc
sub
sub
in
outsl
into
out
push
jle
stc
fnsave
rol
and
and
pop
filds
lcall
xchg
mov
rcl
adc
pop
icebp
and
or
xlat
jl
and
or
fcmovnu
lahf
push
dec
dec
xchg
loop
pop
xchg
mov
sbb
mov
stos
pop
sbb
call
mov
pop
aaa
loop
and
bound
loope
mov
add
fdiv
imul
not
icebp
jno
mov
scas
mov
xchg
mov
jge
jg
sub
pop
push
mov
ss
mov
mov
sbbb
jmpw
js
or
jg
sbb
adc
or
out
push
aam
fdivrp
or
fdivrl
insb
pop
cmc
sbb
add
jecxz
iret
inc
and
rclb
and
inc
xor
fldt
movsl
sar
adc
test
xor
jge
cmp
dec
je
sbb
pop
cwtl
popf
out
xchg
or
test
mov
cmp
lcall
dec
sub
mov
xchg
sbb
inc
xchg
jb
add
stos
mov
mov
out
imul
cli
mov
mov
ds
call
shlb
cmp
bound
push
xor
ja
test
aam
mov
es
mov
jl
jmp
cwtl
outsb
mov
push
jg
ss
xchg
aad
movsl
xor
mov
pop
mov
test
outsl
pop
adc
xchg
pushl
and
fs
mov
xchg
push
mov
adc
sbb
adc
mov
fdivrs
cmp
cmpl
adc
adc
or
sbb
xorl
push
fstpt
xchg
mov
lock
pusha
jmp
arpl
push
xor
aas
testl
loop
inc
sub
dec
enter
add
test
jno
cltd
mov
mov
cmp
adcl
cltd
test
or
mov
popf
dec
push
sahf
cltd
je
ds
adc
and
out
add
add
mov
xchg
jae
adc
es
filds
cmpsl
dec
lahf
push
int3
cmpsl
xchg
popf
push
xchg
aad
mov
lock
mov
and
sub
bound
gs
mov
test
jae
test
dec
dec
jnp
cmp
and
scas
add
pop
jnp
mov
adc
jp
add
pusha
shlb
sub
inc
and
mov
cmc
xor
mov
mov
pusha
push
aad
cmp
ss
arpl
push
fnstcw
adcb
clc
mov
cmp
int
movsl
xchg
pop
fs
push
cmp
fwait
jecxz
std
les
pop
mov
jmp
push
arpl
orb
sbb
pop
sti
cs
mov
inc
mov
xor
rolb
sbb
pop
add
insb
lea
cmpsl
cmp
int
dec
pushf
lret
loopne
addl
movsl
inc
sub
xor
dec
pusha
xor
ss
jnp
mov
repnz
mov
pop
and
pop
add
sub
test
in
loop
data16
cmpsb
mov
movsl
insl
pop
sbb
or
lcall
jne
outsl
push
addr16
mov
push
adc
push
cwtl
push
xchg
pusha
movsb
inc
in
in
mov
mov
mov
adcb
leave
imul
leave
lods
test
insl
pop
xor
dec
jo
dec
or
add
add
ret
push
lret
mov
popa
gs
daa
pop
sbb
mov
sbb
push
inc
or
push
jle
and
pop
jp
push
inc
xchg
icebp
icebp
cmp
mov
fdivs
scas
aaa
and
mov
fs
sbb
sub
or
test
sub
sbb
movsl
push
xor
push
shlb
mov
jmp
dec
daa
ja
rcrl
cmp
test
push
cmc
add
cmpl
mov
push
sarl
inc
xchg
jnp
lea
mov
inc
call
add
mov
iret
push
cmpsl
test
pop
movb
aad
xchg
xchg
xor
push
insb
in
mov
sbb
mov
outsl
out
cmpsb
in
outsb
aad
lcall
icebp
sbb
xchg
les
mov
mov
and
aad
cltd
and
pop
loope
jp
decb
int
pop
inc
dec
jnp
ja
decb
repz
ja
or
cmc
or
mov
inc
lret
mov
jp
lcall
inc
inc
push
mov
out
mov
fistpll
xchg
rsqrtps
mov
ffreep
imul
movsl
sar
icebp
add
test
add
aam
pop
adc
mov
sbb
aad
jg
xchg
ja
insb
or
cli
cmp
andb
xchg
xor
cmc
fs
incl
cld
mov
mov
inc
xor
push
sbb
mov
repz
xchg
pushl
outsl
fs
lods
shll
repz
jns
adc
mov
fildll
inc
mov
lret
sub
dec
jae
daa
and
or
fsubs
adc
clc
jle
mov
in
fdiv
inc
pop
pop
adc
sbb
pop
jp
fmull
dec
mov
xor
daa
addb
test
pop
jns
add
push
sahf
ds
or
repz
push
fisttpll
test
int3
jecxz
inc
pop
dec
lret
mov
jp
test
xchg
rorl
pop
xor
xchg
and
add
jo
sub
lret
or
or
push
ds
les
mov
in
cmp
out
test
or
lds
and
rcll
std
jmp
mov
shl
in
out
and
sbb
cmpsb
cmp
repnz
call
add
inc
jmp
lock
sbb
xchg
jb
stos
sub
xchg
sbb
sahf
fwait
stos
push
pop
sub
sbb
mov
cmc
stos
dec
sahf
shll
mov
dec
mov
push
hlt
je
outsl
add
cli
test
outsb
jne
repnz
in
sbb
jp
mov
ss
xchg
adc
adc
mov
and
or
sti
xchg
aam
pop
push
and
adc
popa
rcrl
sbb
mov
jnp
push
lea
adc
jno
lock
jmp
in
fcomp
adc
inc
faddl
lds
mov
test
push
lcall
fwait
sub
mov
adc
es
test
add
push
push
je
cmpl
xor
loopne
cmp
jle
push
xor
jecxz
sbb
add
cmp
repnz
cmp
insl
mov
cmp
inc
inc
stos
mov
push
lret
outsb
fs
lcall
xchg
add
int3
xlat
inc
mov
jle
out
pop
cmp
add
stos
in
shrb
dec
pop
sbb
and
sarl
mov
inc
push
pusha
rcl
pusha
push
incl
inc
int
fwait
or
jge
in
add
cmc
in
push
add
dec
lahf
shl
clc
popa
icebp
sbb
popf
jge
outsl
fs
call
push
adc
push
dec
in
add
js
call
jne
dec
roll
xlat
inc
test
lahf
and
frstor
inc
jmp
xor
out
jp
dec
jmp
xchg
aad
cmp
sub
cmp
lea
loopne
mull
dec
aaa
xor
mov
call
inc
and
pop
dec
and
mov
mov
jg
addl
jle
inc
jge
out
xlat
fsubr
addr16
add
push
scas
mov
test
mov
push
add
fdivrs
in
cmpb
nop
cmpsl
gs
lods
pop
leave
dec
dec
sbb
test
push
fcompl
bnd
add
push
call
movsl
mov
jle
loope
loopne
test
stos
pop
aaa
mov
in
iret
sub
mov
xchg
xchg
xlat
pop
jmp
rclb
add
je
stos
insl
cs
pop
xchg
or
mov
mov
lods
fisttpll
push
mov
in
test
adc
bound
mov
jg
out
or
stos
lods
push
xor
or
mov
jge
fdivs
iret
in
sub
dec
test
or
xor
mov
fsubl
add
pop
push
add
mov
or
stos
loopne
shl
mov
shlb
test
sbbl
lcall
xor
dec
int
jo
adc
fstpt
dec
dec
fistps
fwait
cmpsl
stos
data16
insb
pop
out
and
pop
shlb
adc
push
adc
add
mov
in
pop
cmp
js
mov
ret
je
in
mov
dec
inc
mov
hlt
push
mov
and
cs
sub
jmp
pushl
nop
data16
in
jno
cmpl
out
imul
in
lea
lcall
jmp
popf
push
shlb
aad
lock
push
mov
cwtl
rcrb
stc
adc
ficompl
adc
mov
mov
mov
popa
mov
lcall
loopne
sub
movsl
cmp
push
cld
xor
xor
into
dec
cli
push
cmp
xchg
sbb
mov
inc
jge
div
inc
lods
sti
jle
mov
inc
push
or
push
ljmp
sbb
ret
ja
mov
dec
and
fcompl
popa
ficoms
imul
dec
das
decl
lret
sub
sbb
ds
jmp
int
imul
popf
pop
jo
out
push
jbe
adc
sub
adc
out
add
mov
xlat
imul
mov
pusha
pop
cmc
adc
cmpsb
jb
sub
xchg
fldt
arpl
adcb
test
into
jg
das
mov
mov
loope
movsb
daa
fisubs
clc
cwtl
sbb
fs
aad
les
clc
and
loopne
popa
cmp
jns
mov
scas
fistpll
rorl
out
mov
sub
lea
stos
xor
cmpb
adc
aam
bound
outsb
sub
pop
sti
out
and
and
xchg
mov
mov
cmp
int
pop
cli
cwtl
cmpl
push
dec
aaa
jns
mov
es
leave
pop
or
nop
cwtl
fisubrs
les
iret
test
or
jmp
sub
sbb
test
jecxz
sbb
jmp
pop
cmp
aas
aas
cmp
mov
filds
mov
out
sbb
cld
adc
cmpsl
inc
cmpsb
mov
sbb
pop
jle
data16
sub
pop
out
xor
imull
into
sub
sbb
mov
xchg
cmp
sbb
fidivrl
enter
inc
mov
int3
pop
cld
add
jle
stc
sbb
and
push
xor
pop
sub
les
or
stos
das
gs
push
sarb
rcl
insb
test
repnz
xor
sub
loopne
xorl
sbb
mov
das
mov
dec
ds
mov
fiadds
and
mov
mov
jbe
xchg
outsl
repz
pop
fbstp
out
cli
or
jne
test
aas
scas
es
mov
jne
aas
iret
aam
sbb
mov
jle
aas
nop
scas
movl
cmpsb
or
jge
fidivrl
stos
inc
push
dec
jecxz
xchg
dec
lods
in
ret
pop
mov
scas
xchg
dec
sub
cmp
adc
xchg
cmc
into
dec
out
push
sbb
ds
xor
cmp
xchg
adc
xor
or
aas
fisubrl
jo
xor
mov
in
ret
sub
pop
dec
loope
mov
hlt
daa
dec
movsl
insl
jg
mov
xchg
aad
repz
mov
xchg
loope
mov
arpl
pop
and
stos
pop
jnp
pushf
leave
pop
mov
inc
shll
aas
cltd
test
cmp
dec
push
pop
ds
adc
inc
mov
nop
sub
arpl
mov
mov
xchg
dec
add
jne
ret
jecxz
repnz
xchg
add
ss
sub
nop
cs
or
sti
into
orb
mov
in
pop
mov
ret
int
lahf
lea
ds
lret
and
xor
ret
add
push
jg
and
xorl
pop
cmp
dec
mov
mov
lahf
shll
aam
push
mov
sbb
xchg
sub
pop
mov
pop
out
sub
scas
cmp
faddl
les
dec
cmp
mov
jns
xor
or
in
xchg
mov
lock
aas
loope
mov
xchg
jne
jp
and
sarb
jo
subl
xchg
push
flds
daa
call
pop
xchg
mov
and
sbb
fcmovb
jbe
dec
xor
xor
mov
inc
pusha
pop
arpl
fnstcw
xchg
cwtl
js
adc
inc
sbb
add
mov
mov
fidivrs
int
push
lret
xlat
rcrb
test
dec
push
sub
scas
mov
lods
shll
sbb
mov
xchg
mov
mov
sbb
aad
ja
xor
mov
pop
insl
test
in
and
or
out
outsb
ret
lods
push
mov
add
push
test
push
mov
les
cwtl
cmp
lret
test
lcall
testb
inc
push
sbb
pop
imul
das
call
into
testl
movsl
or
js
iret
adc
push
ret
inc
adcl
mov
cmpsl
cmp
roll
imul
jns
lds
pop
mov
popa
jmp
mov
mov
enter
loop
cmp
mov
sets
in
lahf
hlt
jb
push
jl
imul
or
clc
xor
xorl
hlt
mov
scas
les
push
addb
push
push
js
stc
dec
jo
pop
xchg
jge
pop
mov
addps
adc
mov
addb
mov
out
adc
aaa
lds
and
arpl
push
push
sbb
in
pinsrw
and
jl
inc
leave
inc
cmp
push
xlat
leave
test
cwtl
fdiv
dec
test
ljmp
adc
test
xor
sub
xor
ljmp
xor
fimull
and
mov
jo
shlb
xchg
jl
sbbb
sub
movsl
gs
negb
cmpsl
xorl
ret
mov
fwait
gs
pop
ret
outsb
dec
xor
pushf
and
sti
mov
cmp
xor
std
shrl
adc
loop
stc
fnstcw
mov
rcll
bound
push
outsb
js
xor
push
add
orb
pop
jg
ror
cmp
jp
jmp
repz
dec
ret
cmp
dec
or
pop
push
push
sub
push
or
iret
sub
imul
add
jno
mov
cmpsb
or
dec
hlt
ss
cmp
dec
xchg
hlt
add
adc
out
in
inc
pop
lcall
imul
push
pushf
add
daa
pop
addr16
dec
testl
cmp
jb
cmp
mov
mov
xchg
or
pop
scas
clc
arpl
out
popf
out
in
call
mov
adc
ss
cmp
xlat
cld
leave
stc
sub
mov
xchg
xchg
shll
pop
adcb
daa
je
daa
sbb
aaa
cmpsl
arpl
ret
inc
mov
jns
rolb
mov
loop
mov
loop
jne
flds
mov
jl
rol
test
pop
lock
vmovq
mov
jl
push
cmp
inc
xor
pop
mov
mov
push
mov
fwait
mov
aas
sub
push
sbbb
cmp
cmp
add
push
inc
daa
popa
in
lods
out
shll
aas
mov
sbb
lea
jb
xor
add
lahf
inc
js
jnp
mov
add
mov
jne
dec
and
sbb
jo
mov
test
mov
push
mov
mov
xchg
dec
mov
or
push
fistl
jne
mov
mov
js
insl
adc
xchg
push
add
das
mov
rcr
mov
adc
xchg
cld
dec
xor
adc
roll
cmp
iret
mov
das
mov
cmp
arpl
sub
add
xor
ret
pop
adc
xchg
push
push
pop
aam
sub
inc
cmpsb
xchg
xchg
ss
xor
lds
pop
test
shlb
push
cli
mov
add
jae
add
gs
stc
not
je
icebp
dec
cli
lea
sub
push
inc
les
adc
mov
push
loopne
xlat
mov
adc
xchg
and
mov
sbb
pushf
clc
fsubp
cmpsb
dec
mov
fxch
lods
loopne
mov
jg
cmc
out
lods
cwtl
fcomp
jl
and
push
clc
pop
xchg
adc
add
sbb
inc
test
ljmp
in
dec
adc
add
rcr
inc
fisttpl
adc
pop
ljmp
enter
lea
inc
cmp
hlt
or
adc
das
je
call
in
sub
insb
push
stos
cltd
sbb
mov
leave
sbb
leave
add
and
imul
stos
adc
icebp
jo
and
mov
movsl
aad
popa
mov
dec
xchg
in
pop
mov
and
data16
popf
sbb
mulb
add
shl
mov
scas
cmp
mov
inc
mov
or
cmp
inc
loope
xor
cli
leave
push
mov
mov
xor
insb
jno
cmp
add
jle
mov
fwait
adc
outsl
pop
ret
ficoml
sbb
movsl
jbe
shrb
jo
or
push
pop
xor
in
shlb
jno
pusha
cmpsb
rol
or
add
sub
mov
jns
pop
sbb
sbb
inc
data16
and
subl
sub
push
cld
icebp
pop
sti
fadd
add
xchg
outsb
outsl
mov
in
push
cmp
std
add
jmp
popf
fcmovbe
mov
jmp
cmp
jmp
pop
adc
das
xorl
pop
push
cmp
movsl
mov
insl
aam
xor
aas
mov
cmpsb
mov
inc
and
push
fstpl
inc
test
mov
les
pop
out
enter
or
sbb
push
lods
add
imul
add
dec
add
repnz
in
push
cmp
inc
xchg
pop
add
hlt
out
xchg
fwait
add
rcr
es
stos
mov
inc
jl
icebp
add
outsl
xlat
ss
movsl
popa
rcrl
add
lret
xor
fisubl
cmp
les
mov
sbb
cmp
and
mov
inc
xchg
stc
add
push
das
lods
mov
rcl
xchg
test
mov
mov
popa
add
jbe
jl
mov
push
fcomps
push
rclb
mov
dec
push
or
std
sub
dec
js
movb
xor
es
leave
sahf
xor
movq
int3
sbb
bound
xor
or
push
rorl
lock
mov
or
jmp
icebp
cs
adc
xor
sub
mov
decl
xchg
and
add
andl
xorb
add
mov
adc
es
fcoms
push
mov
push
xchg
xchg
mov
and
sub
lds
mov
jns
fisubrs
call
mov
les
popf
pop
push
rcl
push
xchg
and
mov
cmp
dec
mov
sbb
jle
mov
xchg
outsl
jnp
xchg
push
fisubrs
mov
push
jbe
mov
cmp
or
mov
lahf
xor
cmp
lret
outsl
inc
bound
xchg
push
pushf
dec
js
imul
rorl
mov
xor
push
push
adc
fwait
leave
add
cmc
sbb
sbb
insb
adc
in
jl
dec
and
inc
rcll
ret
pop
jge
mov
mov
mov
stc
sbbb
and
inc
push
mov
rorb
lret
outsb
clc
scas
xor
lcall
test
mov
stos
dec
jge
popf
mov
mov
jno
xor
xor
shll
cmp
dec
out
push
sub
xor
jl
dec
pushf
lods
push
or
mov
or
sbb
inc
test
inc
add
dec
test
ds
sub
ret
aas
inc
jnp
dec
aaa
jno
mov
dec
es
data16
xchg
sub
dec
fidivrs
mov
mov
loope
mov
sub
jmp
cld
not
lahf
xchg
mov
push
ja
push
inc
mov
or
sbb
out
notb
sub
adcl
lret
add
mov
dec
fwait
mov
cmpsl
test
push
jg
ret
jg
mov
push
movsb
scas
das
scas
int3
and
imul
in
xor
or
pop
pop
lea
lcall
pop
cmp
adc
dec
mov
add
inc
push
mov
adc
pop
push
divl
jl
hlt
xchg
inc
xor
popa
cmp
lret
fnstsw
jmp
jno
lahf
sbb
mov
or
int
rcrb
lods
test
xchg
lods
and
loopne
fldl
call
sti
ljmp
add
jns
mov
insl
push
aam
out
mov
push
xchg
dec
shlb
jl
movsb
andl
push
outsl
mov
lcall
adcl
sub
dec
push
mov
sbb
or
dec
sbb
adc
rorl
in
lret
test
popa
jno
mov
push
repnz
push
xor
xor
sub
daa
lret
gs
ficoms
das
mov
cmp
mov
push
sub
sbb
push
xchg
fisubs
loopne
inc
les
sbb
or
sbb
addr16
ret
mov
ror
jg
or
jmp
ffreep
ret
jle
push
cwtl
test
or
jecxz
push
xor
into
sti
ljmp
aad
js
repz
loop
pop
push
out
adc
in
pop
fldt
sbb
fwait
loope
mov
das
or
or
push
out
fisubl
ret
enter
mov
test
mov
mov
into
or
lret
and
sbb
enter
mov
inc
pop
lods
push
add
mov
mov
ja
add
mov
push
mov
dec
sbb
xor
pop
inc
adc
push
arpl
aaa
sub
sahf
mov
sub
out
mull
mov
sbb
stos
ds
cs
jecxz
in
testb
in
add
mov
hlt
or
adc
inc
inc
imul
leave
mov
into
js
add
push
lds
adc
hlt
sub
or
mov
or
inc
push
inc
rcrb
setno
sbb
fs
xchg
mov
jne
add
jbe
pop
push
mov
mov
inc
add
sbb
push
jmp
add
push
pushf
push
add
mov
dec
or
shrb
aam
lock
sub
mov
jge
mov
lock
or
xor
jge
fistpl
movsl
sub
add
push
cmp
jge
cli
jae
adc
mov
push
imul
pop
cld
pop
jns
push
pushf
aam
test
das
pop
jmp
cmp
push
xor
cmpsl
incl
sub
inc
sub
in
popa
mov
loopne
mov
sbb
pop
and
mov
pop
mov
inc
in
sbb
insl
ss
mov
pop
filds
sbb
mov
mov
fisubrl
nop
xchg
pop
xor
mov
jecxz
push
pop
xor
ret
mov
mov
xchg
xchg
add
out
cmp
mov
xlat
in
cld
aaa
push
mov
pavgw
xor
shrb
loopne
scas
jg
pushf
enter
jl
popa
imul
test
sub
mov
js
cmp
daa
mov
mov
jbe
inc
and
addl
jno
inc
loopne
rcl
test
iret
call
xchg
outsl
xchg
rcrb
bound
les
aam
dec
jnp
addr16
ljmp
push
rolb
or
add
adc
xchg
aam
jns
push
cmp
xchg
pop
dec
in
jae
pop
mov
sahf
mov
push
mov
jb
pop
push
xchg
push
jae
lock
daa
pop
add
fimull
inc
mov
cld
daa
or
lcall
or
int
gs
shrb
rolb
push
jne
xchg
rcll
cld
test
and
sahf
mov
jne
dec
pop
in
push
xchg
movsl
es
dec
out
outsb
in
mov
cmp
les
xor
sbb
jecxz
fisubl
mov
xchg
cltd
les
pop
adc
jp
ficoms
or
pushf
stc
cmc
push
push
enter
pop
popa
cld
ret
push
and
in
pop
inc
push
xor
sti
lods
icebp
bswap
fcoml
adc
cmc
gs
mov
ljmp
ja
sub
pop
stc
aas
les
or
add
div
adc
push
mov
shlb
lahf
cwtl
mov
pop
sbb
into
into
movsb
inc
test
xor
and
repz
xchg
jp
push
shlb
mov
aad
mov
xchg
inc
push
rol
icebp
int
popf
ss
in
jae
dec
aam
pop
sbb
test
push
inc
jns
outsb
testb
jle
or
push
ret
add
arpl
addr16
loope
lret
push
imull
cmp
out
sub
shlb
icebp
shl
add
xlat
or
insl
xchg
std
outsb
pushf
hlt
push
shll
lods
push
mov
insb
lahf
add
les
add
lret
mov
dec
cld
in
dec
std
jmp
pop
adc
xchg
pusha
loopne
cmpsb
mov
les
enter
ds
rorb
jbe
inc
daa
shlb
shrl
es
stos
ljmp
ret
xor
mov
dec
fistpl
imul
and
jne
mov
sub
sbb
mov
jecxz
out
adc
push
enter
mov
jge
or
pop
inc
ja
pop
loope
insl
cltd
dec
cmpsb
adc
outsb
in
ret
or
mov
mov
repz
jl
pop
sub
ja
mov
push
dec
dec
popa
inc
jne
adcb
popa
notl
jmp
sbb
mov
add
test
lcall
addr16
cmp
and
dec
xchg
jbe
daa
xchg
jmp
out
cwtl
push
jbe
shlb
or
sbbl
pop
add
and
ds
xor
or
pop
movsl
lods
test
cmp
movsl
jge
lea
cltd
adcb
out
ret
es
hlt
sbb
movsl
outsl
pop
push
xchg
mov
cmpsb
mov
add
xor
xchg
cli
mov
pusha
bound
int
mov
dec
sbb
inc
inc
add
std
out
scas
cltd
dec
dec
mov
lcall
mov
rol
xor
xorb
out
push
loopne
push
push
push
in
mov
popf
ss
repz
push
mov
enter
inc
lds
js
mov
push
add
add
sbb
ficoms
mov
mov
adc
stos
xor
pushf
ja
ss
leave
mov
mov
cmp
les
lret
jmp
in
loope
shlb
shll
push
push
or
test
dec
adc
jno
lods
mov
jge
xchg
pop
mov
inc
data16
sub
cmpsl
adc
xor
cs
gs
data16
and
in
call
cmp
ss
ljmp
or
inc
popf
push
fildll
push
ret
test
lret
dec
test
cli
nop
add
xchg
or
lret
testl
jp
leave
mov
pop
fcmovne
jne
push
pop
mov
rcrb
pop
jbe
adcl
or
sbb
dec
mov
cmpsl
or
int3
jg
loopne
popa
bound
mov
or
jle
icebp
pop
fidivrs
mov
lcall
push
jbe
or
nop
mov
fwait
pop
stc
or
xchg
mov
xchg
stos
pushl
shl
divb
popl
stos
sub
cmp
shl
out
dec
xchg
xor
cs
loopne
sub
rcrb
ss
lret
and
hlt
pop
push
inc
jb
jmp
xchg
dec
cwtl
xchg
test
rolb
out
outsl
iret
xlat
and
insb
ror
icebp
dec
fldln2
cmp
cmp
enter
adc
add
cmp
ss
add
add
mov
out
insl
lret
fisubrl
adc
mov
mov
insl
stos
pushl
dec
mov
xor
imul
imulb
xor
ret
push
or
pushf
lods
ss
inc
mov
lock
and
push
maxps
in
or
mov
sarb
xchg
push
push
mov
or
icebp
lea
inc
shll
sbb
mov
fsubl
pop
cmp
rcll
popa
or
push
sbb
dec
dec
pop
push
xchg
gs
gs
and
and
adcl
pushf
cmp
sub
pop
push
add
pop
mov
lods
jl
fwait
sbb
es
dec
into
jnp
mov
push
inc
lods
dec
adc
fildl
pop
cmpsb
mov
inc
lahf
fbld
jb
jo
xchg
jns
or
in
jl
mov
fildl
push
add
jbe
aam
test
xor
out
mov
test
mov
sarb
sbb
xchg
cs
in
repz
fcomip
lret
mov
lock
fadds
in
stos
dec
addr16
sub
pop
cmc
insb
xchg
test
mov
lea
icebp
or
mov
push
push
dec
aad
mov
imul
std
bnd
int
arpl
ret
cmp
or
mov
jo
xchg
jns
sub
outsl
xchg
repnz
imul
lock
sbb
in
mov
push
icebp
fs
lret
pop
sub
adc
aas
jl
dec
popa
lea
shrb
flds
adc
lret
push
mov
insl
pop
dec
popa
pushf
or
lds
loop
jns
mov
push
jg
xchg
inc
adc
adc
jno
shlb
mov
and
jle
mov
push
int
mov
xlat
mov
dec
sbb
data16
xchg
xchg
add
xor
cltd
xor
cmpl
fadds
clc
mov
and
orl
test
dec
adc
popf
add
xor
mov
xlat
sbb
push
lret
add
std
jae
push
cmpsb
fwait
ljmp
or
scas
aad
popf
mov
rcll
cwtl
mov
sbb
insb
icebp
jbe
int3
dec
insb
cld
pusha
pop
outsl
out
or
sub
stos
sub
in
dec
pusha
jg
pop
fwait
ss
add
xchg
pop
jno
pop
mov
lret
loop
xchg
stc
leave
icebp
popa
mov
mov
out
cmp
jnp
repz
sub
frstpm(287
lret
sbbl
pushf
push
inc
lock
mov
mov
mov
adc
test
test
pop
dec
lcall
sub
xor
mov
mov
xor
push
out
daa
or
xchg
jle
in
sub
xchg
frstor
and
xor
add
fcmove
and
clc
fstps
xchg
repnz
das
stc
cmc
jnp
push
xchg
mov
pop
mov
gs
cs
mov
jl
jno
add
mov
push
repnz
xor
add
or
or
mov
scas
xchg
cmp
out
lods
push
nop
jnp
iret
fmull
lock
push
psllw
imul
ja
push
pop
or
mov
cmp
xor
sub
mov
cmpsl
xor
sbb
dec
outsl
mov
bts
xorl
and
stos
xor
in
mov
mov
mov
sbb
call
sub
pop
fistl
pop
insb
rorb
arpl
xchg
xor
test
sbb
dec
or
icebp
movsb
sarl
xchg
push
into
lods
and
sub
mov
mov
inc
sub
js
cmpsb
jecxz
inc
addb
test
das
dec
pushf
sbb
xchg
in
add
movsb
popf
scas
lock
cmp
jnp
mov
les
xchg
imul
popf
sarl
repz
dec
xchg
xchg
test
dec
pop
fsubr
push
push
xor
stos
or
add
add
sbb
in
sbb
scas
cmc
mov
push
int
je
cmp
or
xchg
and
cmpb
pop
leave
xchg
notb
idivl
add
push
mov
mov
sbbb
mov
push
aaa
or
ret
aaa
adc
pop
xchg
es
push
mov
dec
jl
xor
sti
mov
and
add
sbb
loope
add
or
cmpsb
sbb
ss
bnd
mov
pop
sbb
adc
add
xchg
adc
cltd
call
ret
jp
and
and
insb
sti
cmpb
fldl
adc
dec
repnz
mov
lahf
js
jbe
mov
mov
pop
andl
xchg
inc
into
jle
push
or
and
mov
fildl
add
adc
push
cli
lret
int3
xchg
div
add
mov
jmp
f2xm1
cmp
jo
les
out
sub
adc
xorl
lgs
jmp
sub
outsl
sbb
shlb
mov
in
outsb
mov
push
sbb
xor
sub
es
add
cwtl
mov
andl
sub
fistps
mov
popa
jo
stos
rcll
inc
pop
dec
pop
addr16
pop
mov
dec
sub
and
outsb
movsb
popa
xor
or
loope
call
cld
fnstenv
jle
test
pop
in
xlat
arpl
outsb
loop
adc
cmpsl
ljmp
popf
push
jae
dec
cli
das
movsl
roll
and
mov
mov
loopne
or
cwtl
in
jecxz
mov
addl
push
xchg
loope
xchg
rcrb
xorb
in
outsl
sti
mov
out
adc
inc
lahf
sub
das
insb
cmp
sbb
jmp
or
xchg
push
cltd
cmp
ror
jge
mov
in
pusha
cmp
jns
fldenv
sub
aam
mov
and
call
mov
jno
add
xchg
cwtl
xorl
repz
int3
xchg
add
push
loope
das
mov
and
movsb
repnz
int3
dec
pushl
mov
xchg
pop
mov
mov
inc
sbb
int
shrb
sbb
inc
or
imull
outsb
aam
pop
cmp
ljmp
shlb
addr16
add
in
cmc
mov
jle
adc
push
iret
push
add
jmp
lea
add
outsb
and
xchg
xchg
nop
mov
dec
fwait
test
dec
sub
pop
pop
and
push
mov
push
test
xorb
mov
out
xlat
out
ljmp
lea
mov
inc
das
popf
fwait
add
mull
push
insb
xlat
push
mov
or
cmp
jo
add
sub
push
inc
xor
shll
sub
aas
fst
xlat
imul
jp
outsl
inc
shrb
xlat
loopne
loope
sbb
xchg
test
lahf
sub
sbb
gs
xchg
sarl
jae
popf
push
fwait
pop
xor
push
or
lret
jl
dec
int3
jge
in
jecxz
jae
jae
push
inc
adc
inc
orb
xor
mov
mov
shll
push
push
ljmp
sub
cmc
lcall
push
sahf
lahf
mov
push
scas
clc
push
add
dec
mov
stos
cmpsl
pop
add
sub
out
sti
mov
int3
jo
fmul
jle
in
lods
enter
dec
shlb
mov
add
imul
fdivrl
or
jns
or
test
lcall
inc
push
sub
mov
jmp
roll
mov
ficompl
sbb
pop
mov
mov
int
push
and
xor
jmp
push
insb
and
or
fiadds
stos
jmp
mov
jle
out
pop
mov
push
loope
rcr
jb
dec
mov
jb
adc
aaa
shlb
sahf
push
push
out
loop
in
idivl
lret
aas
dec
insl
out
mov
call
pop
mov
hlt
ficoms
test
xlat
rcl
inc
stc
dec
mov
pushf
iret
mov
push
aas
cmpsb
mov
arpl
jecxz
inc
andps
or
xchg
pop
xor
pop
mov
aaa
scas
mov
mov
movsb
push
fbld
int
sbb
push
xchg
loop
and
xor
leave
dec
inc
sub
cli
out
push
mov
cmp
pop
and
ss
xchg
or
sub
pop
nop
inc
sbb
and
fstps
stos
inc
ljmp
jo
push
inc
sub
inc
xor
mov
aas
loopne
xchg
fld
mov
sbb
inc
mov
stos
data16
pop
mov
je
hlt
daa
cmp
stos
mov
cli
fisttps
cmp
add
dec
in
into
xchg
test
push
xor
mov
xchg
mov
xchg
icebp
push
sub
pushf
jl
jns
adc
test
add
stos
ret
jo
push
mov
lods
shrb
xlat
add
hlt
jge
pop
mov
or
jle
lret
rcll
push
and
inc
jns
cmp
std
test
push
xor
lret
in
aad
addr16
mov
or
sbb
test
sub
pop
sbb
mov
mov
inc
push
xchg
popa
out
iret
add
or
mov
and
lahf
jbe
cli
int
mov
adc
push
push
pop
sub
sub
xor
enter
or
inc
adc
sbb
xchg
outsl
data16
test
sbb
mov
out
notb
cmovge
fmul
fdivrl
repnz
leave
rcll
mov
jo
push
xchg
mov
icebp
xchg
cmp
mov
out
inc
cmpsl
test
sbb
les
inc
adc
fbld
jg
jmp
jbe
push
shrl
and
add
mov
or
insl
clc
shrb
push
mov
jae
jo
or
and
or
ja
pusha
out
in
xlat
pop
enter
fstps
pop
pop
gs
cmp
push
std
shrl
cmp
inc
rclb
sti
call
test
dec
dec
mov
popa
scas
leave
mov
ffree
push
sbb
ss
xchg
jb
mov
test
adc
aas
fsubp
fnstsw
add
movsb
mov
lea
es
lods
xor
dec
imulb
imul
in
icebp
inc
mov
sub
in
and
sub
mov
jnp
inc
icebp
xchg
or
mov
das
notb
jb
mov
sbb
fstl
xchg
scas
mov
lret
and
xchg
into
leave
aas
dec
movsb
jg
sbb
std
or
leave
pop
outsl
clc
xchg
push
and
ret
adc
jb
cmp
je
mov
loop
imul
ja
cmp
leave
imulb
fwait
testb
daa
sub
test
cmp
or
out
mov
hlt
leave
sub
inc
fisttps
lock
rorb
mov
icebp
sub
fisttpll
pop
xchg
dec
sub
div
inc
aas
cmp
mov
jmp
in
dec
ret
jmp
dec
mov
loop
pusha
jb
push
in
aas
ret
sbbl
push
cmp
out
jmp
out
pop
idiv
lret
push
fnsave
xchg
outsb
push
and
cwtl
cmp
cmp
out
jl
and
insb
push
dec
and
adc
push
out
int
lock
ret
pop
sti
out
add
mov
stos
rorl
jecxz
sbb
pop
add
notl
out
xlat
sarb
std
into
stos
xchg
or
sbb
pop
add
lahf
sbb
mov
cmc
pop
das
and
jg
and
inc
stc
push
mov
mov
add
es
pop
data16
out
pop
mov
gs
fcmove
mov
lds
arpl
jp
or
cmp
add
adc
mov
jnp,pt
cmp
xchg
inc
sbb
jle
dec
icebp
iret
pop
subl
cmc
stos
xchg
dec
int
pushf
jmp
inc
mov
out
arpl
into
or
or
xor
dec
in
imul
fisubrl
dec
dec
data16
cmp
mov
fsubl
fisttpll
pop
adc
daa
movsl
insl
mov
dec
mov
add
xor
iret
in
pop
fsub
hlt
jno
les
imul
cmp
push
mov
mov
or
roll
dec
incl
sbbb
stc
jae
mov
cli
sahf
leave
xor
mov
inc
call
xor
and
cld
lea
mov
mov
leave
xchg
push
test
movsl
xor
sub
mov
into
push
dec
lea
imul
xchg
jp
cld
or
pop
jp
mov
int3
dec
xchg
fsub
jne
jecxz
sbb
cmp
cmp
adc
mov
jge
repnz
xor
pop
adc
push
jo
orl
in
enter
add
mov
int3
add
push
jae
mov
pop
cwtl
adcl
stos
sbb
orb
jl
jae
or
rcrb
jbe
fistpll
bound
test
and
push
pop
pop
das
pusha
or
xchg
jecxz
int3
movsl
lods
or
adc
inc
daa
je
daa
mov
xchg
insb
cs
mov
cmpsb
cmp
adc
mov
jg
push
shlb
rclb
pop
repz
or
add
sub
testb
jg
aam
dec
fsubl
mov
cmpsl
sahf
in
movsb
dec
out
arpl
adc
or
icebp
push
or
pop
mov
cmp
mov
faddl
cltd
jb
mov
dec
mov
mov
rolb
pop
or
jbe
sub
fcmovu
psrlq
icebp
adcl
int
pop
xor
lea
and
iret
cmpl
popf
mov
pop
loope
ja
movsl
cltd
or
jp
pop
xchg
pop
nop
xorb
fld1
lcall
xor
rolb
pop
lea
cmpsl
mov
hlt
pop
xorb
jae
fwait
sub
or
pop
xchg
jne
adc
fidivs
xchg
or
push
add
shl
cwtl
jl
fstpt
push
dec
push
cwtl
bound
in
sbb
add
lock
shll
mov
sysenter
sub
xchg
mov
js
pop
int3
xchg
mov
icebp
pop
cmp
xchg
pop
sbb
js
dec
and
push
push
or
rcll
xchg
lret
pop
es
cs
popa
jg
cld
cmpl
jecxz
or
das
loop
imul
nop
and
popa
sbb
test
cmpsl
xor
addl
or
adc
sti
imul
dec
fcmovbe
or
pop
jg
icebp
sbb
aam
inc
pop
cmp
inc
fsubrs
loope
mov
add
add
add
sbb
repz
and
dec
fwait
jle
out
fnstcw
scas
aam
inc
lret
rcrl
fstp
mov
icebp
jecxz
in
xchg
jg
jle
lea
outsl
or
ss
out
shlb
aad
imul
xor
outsl
es
lret
sub
cli
jg
add
mov
repz
push
xor
aas
push
insl
xor
inc
jge
sbb
add
lea
pop
test
stc
mov
adc
lds
dec
push
cmpsl
rclb
mov
mov
out
dec
testb
mov
fcoms
gs
mov
push
sub
dec
push
sbbl
pop
push
push
in
or
adc
sub
loopne
pop
mov
das
cmpsb
push
jle
xor
jne
and
add
dec
and
aaa
jmp
or
push
add
xchg
mov
adc
sbb
fnstsw
pop
arpl
mov
add
dec
xor
dec
sub
xor
in
cmp
cmp
xor
out
popf
movsb
ja
mov
dec
repz
mov
aam
icebp
rcrl
cwtl
xchg
rolb
mov
and
aam
jo
out
lods
and
lea
mov
xchg
insb
lcall
xor
sbb
pop
mov
lds
mov
and
scas
mov
iret
aas
enter
and
mov
repnz
jge
push
pop
push
or
cmp
in
sbb
and
lods
frstor
inc
and
les
lea
nopl
imul
test
jg
aaa
outsb
cmp
xchg
push
jg
fxch
std
call
xchg
sbb
cld
jo
cli
movsb
fisttpl
dec
mov
ljmp
jmp
cmp
mov
or
cli
es
je
sub
mov
xor
push
orl
shr
mov
inc
loopne
dec
cmc
gs
repz
ret
cmp
inc
ret
sarl
sub
push
mov
add
jge
jp
mov
outsb
inc
xor
or
jno
dec
push
mov
and
lcall
sarb
push
lock
sub
into
ss
fstl
add
add
dec
cmp
jg
push
and
rolb
dec
ficompl
jp
mov
cld
jecxz
jbe
decl
mov
lret
lahf
mov
jno
sbb
push
add
cld
mov
insb
ja
and
push
dec
mov
rorl
daa
sbb
lcall
inc
sub
ljmp
popf
ss
push
je
daa
stos
push
xor
cmp
in
rorb
add
and
or
jno
jns
bound
mov
mov
fmuls
sti
fistps
dec
push
inc
xor
inc
aaa
loope
subb
subb
subl
mov
jae
sti
xchg
movsb
fcoml
add
or
aad
loopne
sub
pusha
pusha
or
adc
mov
or
inc
jno
lds
mov
add
rep
and
fldt
test
ds
xchg
aam
jne
mov
sub
jge
mov
lods
xlat
and
inc
dec
mov
adc
xor
mov
movsl
or
inc
lret
pushf
lds
clc
xchg
inc
scas
rolb
and
pop
cmp
leave
mulb
in
ret
lret
test
xchg
add
cmp
dec
xor
test
mov
shll
testb
scas
insl
cmp
jmp
call
stos
lret
inc
pop
xorb
mov
sbb
incl
mov
enter
xchg
insb
call
out
rolb
pop
push
mov
dec
orb
jno
dec
insl
icebp
sarb
inc
push
dec
cli
scas
adc
jge
mov
lock
cmp
mov
cmp
ds
push
xor
sub
stos
or
sub
lahf
in
dec
pop
push
mov
scas
lods
lret
push
inc
aam
lahf
cmp
iret
xor
mov
js
sbb
aam
je
jo
lds
xchg
mov
push
xor
mov
orb
xor
adc
and
das
pop
pop
das
pop
xor
mov
xchg
roll
xlat
sbb
out
bound
lcall
out
fcoms
mov
sbb
mov
xorb
out
add
into
insl
arpl
negb
mov
and
xor
cmp
jbe
out
fldcw
mov
cmpsl
pop
ret
out
movsl
es
mov
leave
mov
or
rolb
sub
xor
jb
jle
sub
aam
rorl
sbb
divb
or
lcall
sub
icebp
imul
sti
inc
sub
je
mov
xor
cmp
lahf
sti
push
jp
ret
xchg
dec
pop
cmp
inc
mov
rcll
and
cmpsb
jge
aad
fists
xor
aad
jo
jecxz
mov
aaa
mov
loopne
cltd
push
and
adc
push
cltd
jl
and
adc
in
adc
xlat
sbb
xchg
mov
out
mov
arpl
shll
lds
adcl
stos
shrl
cmp
call
lods
jns
push
int
jns
xchg
mov
test
jmp
daa
scas
dec
das
int3
lea
cmp
enter
call
mov
in
adc
mov
fldl
xor
clc
push
stc
fidivs
fs
repnz
xor
cmp
add
push
adc
pop
pop
inc
or
pop
and
mov
stos
shrl
jl
cld
test
sarl
xchg
cmc
mov
cmp
movsl
cld
cmovnp
xlat
addb
sub
fldenv
mov
enterw
imul
mov
pop
mov
sub
dec
xchg
push
mov
es
js
mov
out
scas
nop
movsb
test
pop
psubusb
xor
add
rolb
mov
jmp
jp
and
cmp
sbb
ss
pushf
fs
addl
je
fstps
outsb
or
sbb
test
movsb
ljmp
and
loopne
adc
inc
inc
fcoms
ja
arpl
out
and
cmp
and
add
iret
popf
adc
push
inc
lret
fcomps
icebp
mov
out
call
std
add
add
lods
mov
add
jge
jg
sarl
jmp
mov
idiv
lea
pop
or
inc
idivl
sub
sub
pop
pushf
sar
inc
and
mov
test
sub
andl
add
push
loop
pop
dec
sub
xchg
dec
cltd
mov
push
jmp
lea
xchg
xchg
jne
nop
inc
jae
mov
rcl
add
popl
adc
jmp
fiaddl
and
adc
arpl
in
fsubr
add
cmp
mov
fwait
out
mov
or
cmp
ret
cmp
adc
push
cli
mov
add
push
mov
in
lcall
adc
push
dec
cli
adcl
std
pop
xor
jmp
mov
sub
imul
inc
adc
out
add
cmp
or
mov
mov
shlb
in
jne
lret
jl
or
pop
push
fs
or
jbe
ds
mov
test
sub
push
inc
mov
fldenv
sub
push
jo
push
pop
sub
pop
test
hlt
push
jl
enter
mov
inc
pop
inc
xlat
leave
repnz
stos
loop
and
in
adc
xchg
jne
shll
or
call
fdiv
xor
aas
mov
stos
xchg
stos
add
arpl
cmp
pusha
add
jmp
jb
or
mov
loop
imul
dec
xor
rcrl
popf
into
add
xchg
or
mov
scas
test
xchg
into
dec
jmp
mov
or
enter
pop
mov
cmc
push
xor
stos
scas
mov
les
les
mov
movsl
in
scas
mov
dec
add
sbb
lret
push
nop
adc
std
xor
jbe
lahf
iret
push
pop
push
incb
inc
xchg
les
lcall
shlb
out
mov
xor
cmc
enter
iret
pop
push
xlat
add
stos
test
dec
imul
loop
cmp
cltd
adc
scas
imulb
insl
jp
int3
roll
bswap
and
adc
insb
push
cmc
pop
lods
add
cwtl
sbb
insb
pop
movsb
sub
push
cli
pop
jne
lock
shl
push
pop
mov
inc
or
je
std
es
cmpsb
mov
xlat
mov
popf
rep
pop
mov
and
ss
scas
dec
sbb
cmp
pop
test
inc
ja
shll
pop
gs
call
dec
shr
xchg
push
and
jmp
into
mov
lahf
ret
push
mov
mov
bound
lret
pop
and
adcl
jle
lcall
inc
outsb
stos
or
popa
push
add
movsl
ret
xchg
std
dec
sarl
daa
sbb
push
pop
lcall
jle
inc
scas
out
and
out
push
mov
xchg
insb
sub
or
push
imul
cwtl
cli
inc
inc
and
adc
in
adc
xor
rorl
sbb
xor
ss
push
inc
pusha
and
dec
jb
xchg
iret
lret
andl
or
adc
xor
sbb
jno
or
ja
dec
or
cmp
xor
stos
pop
fiaddl
jl
push
movsb
and
xor
data16
std
ljmp
xchg
das
push
stos
les
lahf
daa
out
loopne
ds
clc
pop
xor
ja
push
push
and
cmpsl
push
cmp
fistl
jnp
xchg
push
mov
cmc
in
mov
imul
fidivl
nop
push
adc
lods
leave
mov
or
outsb
fs
xchg
test
aaa
test
sahf
aas
in
pop
sub
lret
jecxz
ss
add
jg
cs
mov
aam
lcall
arpl
adc
loop
sub
lock
loope
inc
push
and
pusha
jo
jmp
pop
lods
add
lgs
cmp
fwait
ljmp
jae
jne
pop
cmp
ficomps
jno
jns
outsb
jae
lods
push
xor
mov
sub
cmp
orb
jp
and
loopne
adc
pop
out
pop
lahf
jl
fwait
test
std
push
mov
js
xor
and
fldenv
pop
clc
or
jecxz
pop
stos
rol
dec
imul
pop
dec
mov
je
push
sbb
testl
xor
cld
pop
adc
hlt
mov
mov
dec
mov
data16
push
out
sub
adc
jb
lahf
movsl
subb
inc
adc
loopne
into
push
test
jns
out
mov
add
sub
sub
std
pop
lock
test
xor
cmpsb
sarl
adc
das
push
xchg
iret
aad
inc
jg
lds
es
popa
push
pop
cmpsl
addr16
xchg
adcb
cmp
sub
or
jl
scas
mov
and
xchg
sub
and
test
popa
push
sti
sbb
into
shrb
scas
popa
pop
ja
add
enter
jb
cmc
icebp
pop
mov
loopne
push
push
xor
shl
and
aaa
dec
repnz
stos
fstl
inc
ja
rolb
loop
jns
push
cmp
pop
cmp
and
les
adc
jbe
xor
mov
mov
xchg
xor
add
pop
push
adc
lods
les
xchg
mov
outsl
inc
nop
fs
es
std
and
add
sbb
outsb
dec
test
adc
repnz
or
lret
mov
test
cmpsb
jmp
lcall
xlat
repz
pop
adc
inc
pop
dec
sbb
fadds
inc
movsl
sub
mov
jle
pop
push
insl
and
gs
cli
xchg
ret
inc
pushl
shlb
cmp
insb
repz
xor
pop
cwtl
pop
out
sub
cmp
mov
xlat
outsl
push
and
or
cmp
mov
adc
je
mov
mov
add
fidivl
movsb
push
mov
jmp
xor
adc
inc
iret
jnp
fisubrs
mov
or
pop
xchg
test
fsub
jno
cld
xchg
mov
cmpl
leave
push
test
pop
hlt
cld
pusha
jnp
ja
lods
addb
lahf
aam
call
nop
inc
jge
xchg
pop
cld
divl
imul
add
sub
rorl
scas
push
pop
mov
cli
jg
out
repz
dec
sbb
rorb
lcall
push
ret
lcall
inc
add
popf
jno
or
xor
dec
xchg
nop
mov
cmp
fisubrs
scas
jecxz
add
jnp
push
jns
stos
xor
fwait
lods
pop
aaa
sbb
jb
mov
inc
mov
aam
or
or
ret
adc
and
rcll
inc
jno,pt
ret
dec
push
or
popa
push
frstor
leave
rorb
out
ret
dec
loopne
shl
fnstenv
jge
adc
lahf
adc
out
inc
scas
adc
mov
ror
mov
test
cmpl
dec
jge
mov
in
lcall
push
xchg
test
sahf
cmp
insl
pop
subb
dec
push
pop
xchg
test
mov
pop
pushl
sub
push
outsl
je
out
xor
or
iret
lahf
ljmp
addr16
mov
stos
jecxz
cld
adc
aam
scas
lods
push
aaa
fcomps
ss
inc
adc
rcr
inc
sub
or
das
jecxz
loopne
cmp
daa
int3
and
out
or
lea
mov
cli
stc
push
mov
or
outsb
xor
shl
cmpl
rcrl
dec
jecxz
and
and
arpl
stc
js
les
imul
lcall
vcvtsi2ssl
xor
push
sub
nop
paddsb
bound
pop
leave
pop
inc
dec
xor
xchg
cmpsl
and
push
mov
imul
jmp
jnp
data16
icebp
mov
mov
aam
pushf
mov
inc
sbb
aas
insl
or
lock
pop
jns
jno
mov
mov
jp
push
cmp
mov
aas
xchg
xchg
pop
xor
add
insl
jno
xchg
ss
hlt
daa
sti
stos
ret
arpl
dec
je
imul
push
jl
ret
mov
out
push
loop
fs
and
dec
enter
add
inc
idiv
pop
outsl
or
or
or
sub
or
adc
es
dec
sbb
and
mov
cmpsl
imul
cli
sub
mov
fdiv
sub
sub
mov
mov
add
cltd
popa
je
mov
inc
and
add
outsb
iret
scas
pop
mov
lret
nop
out
out
inc
dec
mov
inc
in
je
jae
xchg
jno
hlt
cmp
dec
fisttpll
xor
jno
out
ret
jp
sti
inc
xchg
xchg
lock
out
pop
aaa
xadd
and
adc
pop
lods
or
add
shlb
cmc
cmp
xor
sahf
jg
sar
stos
in
scas
mov
lods
shll
sahf
lods
jae
inc
clc
arpl
mov
sub
clc
add
sti
pop
in
sub
call
adc
dec
bound
call
jo
imul
push
fs
test
mov
pusha
cmc
std
pop
push
out
xor
mov
mov
stc
lret
sub
xchg
mov
push
fwait
sbb
mov
xchg
scas
add
xor
cmpsb
push
test
or
ret
jg
mov
lods
inc
sub
xchg
dec
push
pop
jmp
jg
test
xor
add
mov
push
ret
aad
sub
sbb
add
rolb
push
inc
test
sar
mov
loopne
aam
and
insl
mov
pushf
mov
and
ret
add
pop
xchg
rol
cmp
push
sub
add
sbbb
jle
xor
sahf
ljmp
adc
int3
pop
addb
sub
dec
xchg
lret
add
sub
daa
adc
jl
push
and
lret
and
pop
lds
in
pop
out
or
fcmovnb
cltd
sub
push
mov
ja
stos
mov
sbb
movb
rol
imul
movsb
xor
daa
sbb
mov
and
sub
in
stos
fsubrl
movsl
xchg
xor
das
push
jns
pop
in
mov
mov
jnp
push
sub
mov
inc
mov
push
dec
add
std
enter
lods
adc
jmp
lock
sub
scas
ret
cmp
or
ljmp
pushf
push
add
mov
mov
incb
pusha
popf
jmp
sub
shr
mov
mov
push
mov
jns
in
cld
sbb
add
mov
push
out
ret
adc
das
mov
dec
add
or
xchg
cmp
out
stos
test
fnstcw
mulb
in
pop
hlt
push
scas
movsb
mov
je
push
enter
dec
adcl
xchg
fwait
mov
jb
push
rcll
enter
test
inc
sbb
fs
shr
iret
andb
outsl
negl
sahf
icebp
test
lcall
pop
jl
pop
scas
add
imul
mov
test
mov
or
fdivs
sbb
mov
roll
fistpl
pop
xchg
cmpsl
pop
int3
ret
sub
push
and
lret
xchg
or
pop
movsl
repnz
xor
jecxz
sahf
sbb
sbb
jne
int
xchg
ss
pop
sub
sti
cmp
aam
frstor
adc
nop
pop
push
inc
mov
jb
jg
jl
mov
mov
insb
dec
int
or
aad
mov
dec
cmp
cmpsb
add
shlb
or
jno
cmp
mov
jle
lods
es
adc
ds
sbb
mov
jg
jae
xor
cld
sub
lea
out
pop
cltd
sub
sub
pusha
push
das
pop
popf
fnsave
fwait
jecxz
lock
lea
mov
loope
jae
bnd
push
daa
popa
jp
out
cmp
jle
push
mov
into
stos
vsqrtsd
jns
inc
jl
jbe
popl
jno
cld
inc
mov
mov
mov
add
sbb
mov
mov
imul
decl
daa
stos
jp
push
adc
pop
iret
or
jle
icebp
push
xor
xor
jb
mov
xorb
xor
rcrl
dec
jns
data16
popa
popf
stc
addr16
mov
mov
or
xchg
cmpl
outsb
dec
xlat
dec
jecxz
or
and
repnz
xchg
or
je
cmp
outsl
lcall
adc
jne
add
orb
and
pop
pop
int3
or
xchg
push
or
or
jecxz
push
fidivl
add
ljmp
in
pop
fcoml
scas
hlt
into
lcall
clc
sbbl
fbstp
jns
add
test
xchg
push
mov
dec
xchg
aam
clc
add
stc
rcr
mull
cs
jecxz
scas
int3
jecxz
adc
mov
sbb
push
pusha
push
outsb
mov
sahf
add
pop
fmull
mov
nop
and
mov
xor
xchg
xor
les
cltd
jbe
mov
sbb
push
lret
insl
shl
push
into
rolb
stos
mov
or
dec
xchg
notl
push
int3
pushf
push
lret
mov
sbb
js
xchg
loope
pop
pushf
mov
fistps
jp
add
scas
sahf
jnp
dec
addl
mov
lock
xor
loop
dec
cmp
pop
cwtl
mov
into
lock
xchg
sub
jb
xlat
into
in
shr
add
xor
aam
aas
pop
jecxz
push
pop
sub
stos
aas
out
dec
stos
lret
and
mov
icebp
jmp
and
js
enter
push
push
and
call
push
sub
push
mov
pop
adc
jno
stc
xor
lea
add
popf
pop
cltd
ja
lods
dec
movsl
icebp
stc
cmp
bound
and
nop
adc
mov
in
bound
xor
mov
int3
dec
arpl
testl
test
stos
sub
dec
popa
std
test
addr16
lods
cli
icebp
pop
mov
daa
xchg
cmc
into
jns
dec
inc
cmp
shlb
pop
lret
xor
pop
dec
ds
push
enter
aaa
std
sahf
outsb
dec
jecxz
and
jge
jl
sti
imul
sbb
push
lahf
sbb
mov
lock
mov
fs
cmp
xor
xchg
loope
xor
fnstsw
in
jmp
xchg
neg
outsb
je
pop
in
xchg
mov
jle
cs
xchg
fidivs
test
lahf
pop
pop
xorb
call
sti
add
jb
add
push
movsl
sub
inc
mov
or
sbb
inc
cmc
shll
mov
inc
xchg
dec
sbb
repnz
fsubrl
xchg
xlat
mov
repnz
pop
jmp
inc
outsl
shrl
xchg
mov
xor
fildl
sub
out
pop
xchg
inc
push
add
xor
pushf
fs
mov
imul
std
sub
mov
fldcw
pushf
ret
arpl
dec
adc
add
xchg
xchg
insl
movzwl
add
lods
int3
push
add
pop
mov
jb
lcall
or
dec
data16
xor
jmp
fwait
push
fisttpll
inc
in
outsl
rorb
add
inc
or
cmp
fidivl
inc
test
aas
dec
add
jle
add
sbbb
fildl
mov
hlt
cltd
xor
lcall
fdivrl
ss
dec
push
adc
in
das
mov
push
pop
into
into
push
into
in
mov
adc
mov
sarl
xchg
xchg
lret
negb
cmpsb
bound
sub
xor
jl
aaa
data16
hlt
jle
xor
dec
nop
scas
sbb
cmpsb
bound
dec
pop
or
data16
fisttps
sbb
fsubs
jo
push
aas
lds
adc
sbb
aad
movsl
mov
or
mov
lret
xchg
repz
lods
pop
hlt
xchg
in
adc
lea
jns
ror
sbb
dec
clc
xchg
pusha
add
arpl
ret
insl
jmp
and
xchg
jge
inc
ja
shlb
pushf
pop
stos
mul
sub
jp
rorl
xor
int3
adc
mov
test
loop
mov
xor
sub
add
mov
in
in
fisubs
xor
nop
daa
and
mov
jbe
mov
out
xor
jle
pop
cltd
das
mov
mov
or
push
xchg
push
int3
cmp
repz
dec
sub
jmp
jno
fs
mov
lods
sahf
inc
push
jecxz
sbb
mov
xlat
xor
pop
xchg
sub
pop
shlb
dec
fcomi
lcall
inc
mov
jp
addr16
orl
hlt
cmp
orl
push
xor
cmp
std
xor
mov
inc
dec
cs
std
and
fdivs
jae
push
inc
and
clc
dec
sahf
fistpl
mov
hlt
std
sbb
js
icebp
pushf
sub
scas
cmp
push
out
pop
dec
fdivrl
push
inc
mov
test
pop
jns
or
sti
lock
inc
cmp
cmp
imul
mov
data16
adc
mov
lea
add
ret
ret
pop
cmp
inc
ficompl
insb
mov
shlb
mov
test
cmp
cmp
mov
cmp
adc
in
in
mov
jmp
and
imul
sub
mov
les
cld
call
jnp
in
cmc
pop
in
out
cwtl
push
mov
mov
push
stos
push
pop
cs
pop
dec
les
push
mov
clc
stos
lcall
addr16
nop
rcll
decl
cmpsb
sbb
mov
or
cld
jae
sub
iret
in
or
cmpsb
mov
xor
icebp
mov
popa
pop
adc
pop
pop
stc
pop
pop
cwtl
fisubrl
fstps
mov
jg
loop
hlt
inc
dec
dec
mov
mov
cmp
sub
cmp
jl
nop
mov
jo
popf
mov
mov
out
pop
sbb
add
pop
mov
push
les
flds
add
fstpl
xor
lock
mov
mov
jle
pop
push
mov
sbb
jae
sbb
out
cmp
aaa
adc
xchg
aaa
mov
movsb
add
fists
aas
push
aaa
dec
pop
andb
xchg
push
adc
inc
add
pop
jge
xchg
add
sub
das
or
loope
jge
push
into
jmp
mov
test
pop
add
jne
fnstcw
sbb
push
add
daa
fcoml
test
stc
rcrl
orb
add
pop
jecxz
adc
push
push
sahf
jo
leave
cli
movsl
cmc
and
insl
jg
icebp
imul
das
aaa
xchg
lcall
outsb
sub
and
mov
and
les
movsb
fcmovbe
and
push
add
sbbl
sub
or
das
ret
or
jp
bound
hlt
and
sahf
into
stos
inc
mov
or
add
mov
imul
fwait
pushf
jno
sub
es
jno
add
dec
mov
inc
ret
jl
mov
push
and
jl
xchg
repnz
lret
out
sub
mov
bound
leave
and
and
lea
outsb
jns
lea
jl
push
xor
pop
aad
and
ja
fcoml
dec
push
and
mov
add
dec
ljmp
jecxz
daa
xor
imul
mov
movb
adc
pop
pop
pop
push
mov
aad
inc
mov
andb
jp
add
stos
scas
stc
mov
pop
mov
adc
pusha
ficompl
xlat
push
stos
xchg
stos
test
cmpsl
dec
imul
pop
push
jl
ss
adc
pop
xlat
mov
pop
imull
sbb
pop
mov
xlat
xchg
push
stos
pop
popf
adc
dec
push
mov
sbb
outsb
in
sub
das
stos
clts
shll
fists
out
ret
pop
mov
mov
and
push
mov
mov
lods
ds
divl
data16
loope
jle
int3
mov
in
xor
jl
jmp
cld
jo
add
or
pop
in
cmp
in
insl
cmp
inc
in
out
inc
sub
xor
les
fstp
rclb
popa
outsb
jns
outsl
push
scas
movsl
bnd
fmul
aam
aad
inc
nop
and
out
shl
scas
enter
push
xchg
sbb
dec
jo
mul
inc
fists
mov
aaa
lods
mov
cmpsl
and
in
rcrb
xor
aad
and
test
push
jb
imul
mov
pusha
pop
jbe
testl
cmp
and
xchg
adc
bswap
and
sti
xchg
cmp
cwtl
pop
or
or
mov
hlt
mov
mov
aad
jb
scas
or
les
lret
int
in
inc
mov
jae
bound
push
out
push
mov
sbbb
aad
mov
sub
push
jne
jecxz
cmp
pop
in
in
pop
ljmp
aad
mov
std
scas
push
addr16
loop
je
icebp
push
or
loope
pusha
jg
add
loopne
rol
mov
lret
pop
mov
lahf
cmc
inc
add
andb
push
and
jns
add
popf
icebp
shrb
rcrl
adc
xor
jle
int3
fs
int3
jno
mov
sub
push
das
adc
clc
sbb
lods
or
in
push
repnz
jle
test
je
dec
lods
pop
pop
mov
mov
repnz
notb
dec
or
pop
add
push
es
inc
sub
imul
push
inc
mov
dec
jmp
out
daa
ds
btr
adc
or
xor
cltd
shlb
xchg
cmp
and
xchg
ss
adc
subw
fldenv
std
movsl
xor
pusha
and
es
dec
jo
push
daa
aad
xor
push
test
pop
lret
xchg
rorb
les
imulb
xchg
mov
cs
jmp
jg
xchg
outsl
mov
jae
mov
mov
xchg
pusha
insl
pop
mov
and
xchg
fwait
xchg
loope
jge
fdivrs
inc
push
fistps
push
push
movsl
cs
add
testb
popf
ret
mov
enter
push
mov
cs
adc
pop
popa
fdivrl
push
push
push
jo
incb
daa
fisttpl
xor
loope
mov
sub
jne
mov
adc
xlat
shl
push
fcmovb
mov
jecxz
sbb
lcall
dec
popf
aas
mov
sub
fisubrl
loopne,pn
push
mov
loope
outsb
xchg
lods
lea
les
xor
inc
mov
mov
inc
xor
or
arpl
clc
push
rclb
jl
or
popa
lcall
lea
popf
fisttps
inc
mov
adc
jnp
les
mov
dec
aam
jbe
jno
xlat
jns
movl
ds
cli
jae
out
adc
jecxz
mov
cld
popf
jae
jb
or
bound
lea
fmull
sbb
add
mov
dec
loopne
xchg
lods
mov
popa
dec
decl
push
dec
repnz
mov
xor
subb
pop
push
add
mov
adc
cli
bound
xor
loope
lods
ja
pop
test
stos
ret
mov
dec
sub
into
cld
jne
mov
add
je
mov
add
mov
push
icebp
adc
filds
repnz
into
hlt
es
cmc
repnz
leave
cwtl
adc
push
or
pop
inc
pop
fidivrl
aam
dec
lahf
inc
fs
repz
push
sub
jp
sub
mov
inc
mov
inc
andl
push
mov
arpl
xchg
pop
int
add
sti
ret
je
outsb
sub
mov
lret
iret
sbb
mov
icebp
cwtl
and
mov
mov
jp
or
add
orb
add
notl
dec
or
lock
mov
mov
fildll
scas
stos
adc
pop
mov
pop
push
xchg
push
xchg
mov
mov
xor
jmp
adc
lcall
adc
mov
xchg
sbb
aaa
and
mov
push
imul
adc
mov
fldcw
xor
stc
pusha
xchg
or
pop
cwtl
dec
iret
pop
or
or
adc
out
test
add
pop
call
mov
enter
jecxz
test
xchg
imul
out
enter
and
cmpsb
rorb
push
iret
lea
bound
aad
cmp
stos
inc
int3
sar
mov
mov
mov
lcall
push
inc
mov
loop
mov
leave
mov
add
jle
sarl
subl
adcl
xor
mov
cmpl
sti
lock
sbb
fsubrl
dec
lock
push
xchg
sarl
xchg
cmpsb
pushf
mov
adc
dec
pop
sbb
mov
inc
stc
mov
lcall
fbld
inc
movsl
jle
xchg
aad
jl
out
dec
int
push
dec
mov
mov
or
test
add
jnp
pusha
xor
cmpsl
xlat
rolb
add
mov
xorl
popw
into
lcall
cmc
adc
leave
cltd
fs
jne
jmp
stos
movsl
lds
adc
push
dec
fistps
pop
jp
mov
add
in
aas
or
pop
call
fcmove
dec
and
and
cld
inc
pop
scas
imul
fisttpl
push
xchg
push
cld
xchg
mov
bound
xlat
sbb
adc
xchg
cld
mov
test
mov
les
popa
mov
fucomp
mov
rcrl
xor
or
push
mov
iret
cmp
stos
push
or
push
sub
in
xor
xor
adcb
loope
adc
push
mov
xor
outsl
mov
stos
out
arpl
les
sbb
xchg
js
inc
mov
xchg
imul
lcall
xchg
or
inc
push
xlat
xchg
push
cmpsl
adc
les
ljmp
pushf
mov
fstpt
add
leave
adc
add
shll
mov
cmp
sub
sbb
loopnew
fiadds
xchg
pushf
push
rorl
in
aaa
xchg
int3
das
stc
call
es
push
jo
xchg
adc
mov
jae
les
les
mov
lret
pop
inc
jmp
inc
jae,pt
movsl
jb
imul
dec
push
mov
dec
dec
inc
and
scas
add
bound
and
ja
rcll
ljmp
sub
scas
mov
add
mov
add
add
dec
in
ja
fistl
adc
es
pop
lcall
addr16
xor
aaa
cs
jno
popf
push
rorb
xchg
sti
mov
jmp
pushf
inc
sub
mov
clc
nop
mov
or
add
sarl
mov
sbb
inc
loop
adcl
test
xlat
jo
test
mov
pop
cld
sbb
pop
jno
movsl
out
or
scas
lods
sub
add
flds
subl
scas
pop
js
push
fnsave
mov
sbb
push
les
push
repz
jns
push
icebp
or
xlat
xchg
test
lock
sub
mov
stos
dec
faddl
loopne
loope
fs
jnp
sub
gs
ret
lret
pop
rcr
jg
fs
lds
out
or
xor
mov
mov
in
cmc
or
add
xor
arpl
sbb
popf
ljmp
mov
sub
mov
push
xchg
das
xor
sti
adc
push
movsl
aad
mov
hlt
add
push
andl
cmc
scas
shrl
rorb
outsb
cwtl
pop
or
push
sbb
lods
mov
dec
lods
aas
mov
inc
pusha
test
pop
lret
cli
ds
xchg
aam
jno
outsb
cwtl
aad
int3
sbb
xor
mov
push
jne
add
aas
int
push
sub
lock
adc
lock
cmp
sbb
cmp
adc
add
pop
imulb
xor
inc
jno
sbb
or
push
pushf
sti
inc
nop
icebp
or
or
inc
in
jnp
and
push
jmp
xchg
adc
dec
movsl
or
loop
in
je
test
dec
add
call
test
xchg
sbb
jb
cwtl
insb
sbb
dec
adc
xchg
js
mov
dec
popf
mov
and
jmp
into
push
cli
js
enter
addr16
jae
rorb
or
sbb
cmpl
add
xchg
pop
popf
ds
cmp
aaa
push
mov
mov
inc
xchg
test
adc
sub
js
jmp
incb
mov
imul
mov
cld
ljmp
aas
push
lock
js
and
mov
dec
orb
mov
lret
mov
pop
idiv
mov
mov
sbb
xchg
mov
in
inc
mov
xchg
lret
test
inc
pop
xchg
out
clc
jecxz
dec
inc
push
mov
cmp
std
inc
mov
outsb
shrb
in
mov
lds
int
sbb
jae
test
or
fiadds
and
mov
xor
aad
clc
arpl
dec
daa
lods
adc
inc
xchg
pop
mov
jb
mov
fiadds
xor
rcr
aaa
fs
xor
sbb
xchg
xor
jns
mov
dec
mov
mov
jecxz
pop
inc
jb
ficompl
in
jle
adc
test
or
pop
test
in
adc
clc
outsb
std
sbb
hlt
daa
in
cmpsb
sbb
adc
adc
fistpl
popf
clc
fsubs
sub
out
rclb
mov
aam
fdivrl
mov
iret
mov
into
test
fldenv
dec
push
push
pop
xlat
into
out
push
jle
inc
xchg
mov
fs
fwait
scas
rorb
xorl
or
enter
aaa
pop
lret
fidivs
push
rol
dec
sub
xor
aam
lret
mov
sahf
jns
adc
js
sub
aad
and
dec
dec
sbb
jg
ja
pop
test
cmp
dec
mov
cmpsb
fisubrl
stos
xchg
dec
outsb
loope
shrl
mov
jge
jecxz
pop
rorb
ffreep
ss
lret
cwtl
mov
mov
pop
mov
int3
mov
inc
shlb
pushf
xchg
notl
std
sub
cli
jge
cltd
xor
push
test
aam
fmuls
jg
mov
cmc
cmp
inc
std
in
shll
scas
pop
in
mov
aas
hlt
into
jmp
inc
inc
ret
xchg
cmpsl
jecxz
cs
adc
je
ja
in
lock
and
dec
xlat
jo
add
xchg
ror
push
mov
stos
mov
xchg
loop
test
jne
mov
push
mov
loope
cmp
es
popa
lret
add
test
imul
fidivl
inc
data16
shrl
and
push
cmpl
nop
fnstenv
dec
and
sub
jl
sbb
mov
xchg
jecxz
mov
adc
cmp
mov
or
ror
push
cwtl
in
mov
mov
mov
cwtl
test
mov
mov
enter
js
xor
jp
or
lcall
jl
and
andl
fwait
xor
aas
inc
int
loopne
push
push
jb
scas
addr16
jb
or
icebp
insb
inc
sbb
rcrl
loopne
jbe
xchg
dec
mov
dec
dec
idivb
adc
in
push
jecxz
mov
test
loope
repnz
adc
stc
xchg
cli
jno
data16
push
sub
mov
cmp
mov
call
ss
shll
stos
std
lods
push
das
daa
rcrl
xor
and
leave
scas
dec
adc
jne
and
add
xor
movsl
ljmp
in
in
lds
pop
push
negl
jg
xchg
and
fimuls
call
in
add
in
xchg
pushf
fsubrs
pop
nop
out
dec
arpl
push
pop
dec
cltd
sbb
mov
lcall
daa
fwait
xchg
les
xor
int
mov
mov
divb
cld
cmp
mov
and
jge
pop
fisubrl
xchg
adc
jae
mov
sbb
aad
sbb
movsb
mov
inc
mov
test
imul
jb
pop
pop
add
mov
sbb
lret
jne
cmp
push
dec
pop
jle
inc
and
lea
insl
mov
fwait
sub
add
and
sbb
dec
lcall
dec
xor
pop
imul
and
and
nop
insb
mov
or
in
out
and
sbb
sub
mov
outsl
in
sub
sbb
push
popa
mov
sub
test
dec
mov
sub
mov
mov
push
rclb
mov
xchg
frstor
adc
cmp
in
xchg
inc
cs
pop
sub
fstl
xor
jecxz
mov
shlb
push
ss
add
and
adcl
int
jge
dec
scas
lret
fsubr
aad
aaa
dec
pop
and
leave
aaa
xor
cmpl
cmpsl
adc
jb
mov
mov
mov
add
add
or
movsl
add
ds
pop
notb
loope
push
sbb
fs
push
or
inc
xchg
out
mov
pop
cltd
lahf
stos
test
and
lcall
xchg
out
jns
js
mov
pop
pop
push
push
ret
mov
nop
dec
rorb
xchg
sbb
pop
repz
out
xor
icebp
pushf
ret
cs
fwait
xor
fldlg2
sti
scas
xchg
sbb
dec
adc
xchg
in
fwait
mov
push
inc
lock
pop
mov
or
lcall
sub
rcr
ficoms
pop
int
push
and
xchg
test
shrb
cmp
jnp
popf
outsb
xor
mov
sbb
mov
mov
mov
bound
pop
rcrb
adc
rcrl
xchg
mov
mov
icebp
adc
jno
das
pop
sbb
jbe
sbb
cbtw
int
or
pop
inc
jae
in
add
stos
mulb
mov
sub
jae
mov
in
cs
or
push
js
inc
dec
movsb
ljmp
jmp
lods
fimuls
mov
lods
xlat
push
out
inc
int
add
mov
fadds
push
loope
jmp
mov
push
popl
clc
enter
into
xor
push
xchg
mov
cmp
orb
shlb
mov
dec
sti
push
stc
shlb
inc
lds
loop
add
iret
mulb
inc
repnz
cli
rol
xor
pop
inc
sbb
mov
nop
lock
imul
je
scas
clc
mov
hlt
xchg
test
ja
xchg
in
daa
xchg
jns
insl
inc
mov
popf
push
in
es
enter
pop
rorb
mov
pop
dec
test
push
cmp
call
mov
pop
pushf
iret
mov
hlt
dec
add
cmp
cmpb
dec
sub
fistl
fstl
faddl
mov
mulb
jp
cmc
in
push
mov
dec
push
adc
or
push
xchg
nopl
sub
lahf
ljmp
sbbl
xlat
adc
aaa
mull
cmpsl
inc
add
mov
add
lods
orl
add
jg
std
test
pushf
or
jo
or
test
push
or
pop
test
int3
inc
and
mov
arpl
les
fcomps
adc
push
aad
stos
rcrb
cmp
sti
or
pop
mov
mov
outsl
or
aam
mov
jae
sbb
and
jg
nop
clc
inc
inc
xor
pop
mov
mov
shrd
cmp
sub
mov
sahf
or
or
jno
stos
les
test
mov
jmp
pusha
adcl
cld
or
setp
test
ljmp
rdtsc
sub
add
es
jo
xor
xchg
aaa
imul
movsl
jle
inc
add
push
sub
push
testb
out
std
ss
in
xor
ror
mov
cs
inc
inc
add
sahf
pop
add
push
inc
stc
inc
pop
pop
das
jg
dec
jb
loope
add
test
cld
mov
xchg
cmp
add
xchg
add
cmp
mov
movsl
pusha
pop
jmp
lahf
pop
enter
mov
lds
negb
dec
imul
ret
xor
roll
inc
ja
xchg
call
repz
lea
sub
pop
mov
cmpsl
popa
cmpsl
stos
jo
int3
jmp
xchg
mov
orl
int
ljmp
and
and
test
inc
pop
adc
sub
add
jp
rorl
fisttpl
insl
out
cmp
cmp
movsl
stos
mov
lcall
ret
imul
sub
aas
jae
js
in
aaa
inc
loopne
mov
dec
dec
stc
and
pop
mov
mov
xor
fmul
pop
sub
fldl
mov
test
aam
dec
loopne
fsts
xor
mov
jbe
icebp
fwait
addl
mov
cmc
in
roll
inc
pop
push
loop
mov
mov
clc
sub
jle
loop
das
shrl
or
movsb
mov
dec
pop
inc
and
mov
cli
movsl
jg
pop
adcb
mov
inc
outsb
cmp
mov
and
shll
jle
push
dec
xorl
sahf
cs
in
or
jle
test
adc
imul
call
fs
sbb
push
mov
das
or
push
call
out
jecxz
loop
sub
or
mov
cmp
add
sbbb
sbb
pop
xor
mov
lea
lods
jns
push
in
pop
cmpl
add
and
or
add
sahf
push
push
pop
in
jo
sbb
mov
fistpl
cltd
pop
jg
xchg
ja
or
testb
shrl
rclb
mov
and
adc
cli
sub
xchg
popa
adc
inc
sub
iret
sub
sar
and
stos
pop
sub
cs
inc
or
cli
xchg
push
andb
jp
sbb
outsb
xchg
xor
lods
jb
bound
sbb
dec
xor
pusha
outsb
add
push
out
idivb
sbb
bound
or
mov
xor
movsb
sahf
push
dec
jg
fcomp
pushf
cmpsb
or
pop
push
leave
pop
shlb
mov
inc
faddp
fs
incb
aad
fmuls
adc
in
mov
inc
jmp
inc
xchg
popl
into
shl
sub
sbb
hlt
or
jbe
dec
pop
mov
sub
xor
aaa
fsubl
push
daa
adc
mov
xor
xor
pop
lods
leave
cld
stos
add
mov
add
pop
in
fcoml
pop
adc
inc
cmp
mov
ficoml
or
jae
push
addr16
jnp
adc
xor
mov
inc
in
mov
sbb
sti
dec
jle
hlt
roll
jle
jecxz
ds
xchg
push
mov
lea
pusha
pop
pop
mov
fwait
dec
aaa
jmp
insl
popa
xor
mov
or
dec
pushf
or
pop
sbb
ror
call
inc
pop
enter
mov
sbb
push
jo
lcall
xsha256
cmpsb
xlat
stc
pop
ja
iret
push
ret
inc
cmc
and
dec
adc
fdivl
negb
inc
cmpsl
lock
sub
sbb
pop
mov
dec
lods
dec
xor
andl
incl
out
or
mov
jge
jp
push
jmp
sbb
push
adc
mov
fsubr
stos
inc
jmp
shl
or
in
nop
cmpb
pushf
add
je
clc
gs
iret
cmp
stos
adc
xlat
out
fmul
cmp
xchg
aam
dec
fucomip
lret
jno
lea
dec
lea
xchg
sbb
mov
sub
outsl
jbe
add
subl
cwtl
sarl
jg
daa
sub
fwait
test
outsb
fcmove
nop
and
pop
dec
xor
xor
int
add
nop
add
dec
lea
ljmp
push
cmpsl
ret
adc
ljmp
add
lods
std
adc
testb
dec
aaa
scas
jmp
xchg
hlt
test
inc
mov
lahf
dec
fwait
push
es
mov
xlat
sbb
jo
gs
pop
aaa
jae
test
or
inc
or
test
enter
cmp
and
mov
mov
cmpsb
sbb
push
mov
xchg
in
xor
in
mov
mov
or
cmp
pop
dec
test
push
adc
sti
mov
cmp
shll
fildll
mov
and
pop
xlat
mov
and
aam
xchg
lea
mov
lods
inc
push
add
cmp
sets
outsl
pop
leave
stos
aam
aas
xor
bnd
fdivrl
ljmp
pusha
in
scas
insl
lret
out
dec
int
cmp
xor
in
fucomip
jl
adc
cmp
dec
push
in
out
out
adc
lock
or
call
and
jmp
lcall
or
pusha
mov
cmpsl
push
jb
xor
frstor
mov
mov
aad
xchg
and
push
les
ret
sbb
jmp
mov
mov
mov
adc
and
rcll
lcall
aad
out
xor
addps
inc
test
inc
repnz
jb
orb
inc
daa
lret
cmp
jecxz
out
sbb
cmpb
mov
js
and
sub
into
orb
jo
jns
push
xor
loope
add
cmpsb
mov
lods
or
push
xor
test
inc
cmp
sub
pop
inc
out
mov
pop
sub
insl
inc
scas
jno
mov
pop
es
das
mov
cli
xchg
cmpsb
mov
outsb
fldt
scas
jno
mov
or
cld
mov
mov
inc
enter
jb
daa
loope
out
push
xor
shlb
mov
shlb
pop
sarl
jbe
push
fmuls
mov
movsl
xor
push
and
fisubl
pop
adc
jo
lcall
pop
or
inc
addr16
and
insl
dec
add
clc
xor
out
sbb
ret
cs
mov
outsl
or
test
sahf
jne
adc
sti
push
roll
sub
mov
rclb
add
aam
xor
lods
mov
lcall
rorl
inc
jnp
stos
add
jg
aad
negb
cltd
cmp
jmp
mov
and
aaa
data16
ljmp
in
cltd
call
fs
push
sbbb
cmp
push
out
cmp
gs
sub
push
fsubrl
lret
xchg
jns
out
lcall
ret
loop
jecxz
push
insb
ss
shlb
cld
in
sbb
rorl
adc
lods
or
inc
lods
filds
mov
insb
inc
jl
xchg
lret
mov
mov
mov
add
addl
pop
inc
arpl
push
dec
bound
xor
add
dec
sub
mov
repz
frstor
push
aas
sahf
xor
cli
or
addr16
mov
mov
aas
pusha
sahf
sbb
inc
jnp
dec
pop
dec
jmp
js
cld
adc
sbb
xor
hlt
movsl
clc
iret
and
loop
sub
es
and
fdivl
pop
push
adc
enter
and
xchg
push
fcmovbe
pop
cmp
test
mov
stc
cmc
mov
jp
mov
jae
rclb
fld
or
scas
inc
mov
and
imul
jb
lret
xchg
aam
mov
leave
add
and
and
pop
push
mov
or
mov
daa
cmp
mov
and
int
inc
mov
lret
call
sub
inc
mov
fildll
scas
dec
inc
adc
and
in
leave
cmp
out
mov
inc
jne
jl
dec
mov
aas
jns
rclb
dec
mov
repz
aas
or
sbb
enter
push
or
push
int3
addl
js
and
and
jnp
jmp
cltd
mov
lahf
sub
out
add
push
xchg
sub
or
dec
add
pop
xchg
adc
ja
ret
test
inc
sbb
sets
outsl
xor
mov
sbb
pop
in
dec
repnz
add
shll
or
shl
fs
cmp
cmp
mov
es
add
pop
or
inc
lret
jmp
cmp
popa
ficoms
xor
mov
movsl
add
inc
jne
pop
sub
aam
aad
pop
push
push
sbb
pop
push
aaa
sar
dec
sub
fs
mov
pcmpeqd
jae
ss
mov
es
sbb
cmp
mov
out
xchg
aaa
popf
aad
inc
xchg
cwtl
mulb
pushf
mull
mov
cmp
jecxz
loopne
imul
cmp
sbb
je
test
cwtl
xor
flds
mov
pop
mov
xor
lcall
in
cmp
sub
pop
call
add
dec
push
enter
xor
inc
lcall
cmp
cltd
xchg
xor
stos
popa
fbld
lds
cmpl
jecxz
and
and
call
dec
cmp
imul
cltd
sti
lea
jbe
adc
xchg
xorb
pushl
inc
or
mov
push
mov
push
test
and
mov
xor
push
xchg
xor
loop
sti
mov
jmp
rorl
xor
mov
fnstsw
inc
int3
xor
mov
pop
or
inc
icebp
xor
sub
iret
push
dec
out
cmp
push
imul
scas
mov
mov
lret
or
or
insl
fcmovnb
or
lea
or
xor
push
data16
and
or
jge
dec
mov
push
jnp
xor
andl
mov
lcall
ljmp
add
out
dec
mov
das
push
stos
mov
rcll
push
lcall
sub
mov
es
mov
fisubs
mov
mov
pop
inc
or
ret
adc
outsl
arpl
mov
xchg
or
xchg
sbb
loope
ss
enter
mov
aaa
pop
fs
insb
mov
and
das
sti
xchg
out
or
xor
ds
jno
ret
push
push
and
xorb
push
adc
and
ss
sbb
int3
loop
push
xor
or
mov
push
je
scas
lret
push
mov
dec
test
push
sqrtps
cmc
mov
cmc
dec
sti
fdivrl
stc
xchg
pop
cmp
add
out
push
dec
bound
scas
xor
sub
sbb
psrlq
inc
xchg
rcrb
fstpl
cmc
adc
dec
int
sti
pop
in
add
push
inc
inc
cmp
insb
xor
jmp
aam
arpl
sahf
lcall
sub
sub
mov
stos
mov
mov
mov
shll
jo
mov
inc
xchg
xor
sub
push
lret
daa
dec
movsb
inc
dec
sub
mov
iret
sub
mov
mov
lock
jmp
jge
xchg
stos
jb
and
out
dec
aas
or
cmp
xchg
mov
sbb
xlat
xor
push
iret
add
test
sub
xor
dec
cmp
test
push
mov
dec
ffree
sbb
pop
fsubp
popa
in
lods
pop
push
cs
mov
gs
nop
ficompl
adc
inc
lock
push
cmp
jge
call
xchg
jg
push
or
inc
data16
push
in
xor
xor
mov
sbb
test
lds
sar
sub
fcomps
fsubrs
pop
or
pop
mov
insl
dec
sbb
pop
movsl
add
adc
pop
dec
iret
test
loope
lock
mov
push
fwait
imul
mov
jecxz
lcall
call
enter
pop
or
icebp
sub
xor
hlt
mov
inc
aaa
aas
dec
pop
popa
dec
inc
in
jae
movsb
sbb
ret
out
jmp
add
arpl
xchg
lods
imul
test
add
inc
repz
sbb
jecxz
bound
mov
and
mov
pop
imul
js
pop
pop
lcall
jnp
cmp
cli
adc
cmp
mull
nop
ret
xor
dec
out
loope
imul
mov
adc
ja
lock
push
inc
sub
add
sbb
inc
xchg
leave
and
pop
sub
lea
jno
mov
dec
int
mov
push
dec
cli
sbb
sbb
push
lret
pop
pminub
loope
sbb
sbb
jns
test
bound
ret
push
and
jg
dec
repnz
lret
xor
xor
pop
xchg
ficomps
fidivs
xchg
push
mov
ds
lods
xchg
dec
stc
xchg
ja
hlt
xchg
notl
xchg
mov
scas
sbb
insb
jo
mov
jecxz
mov
sub
cmp
in
fildll
mov
jmp
adc
rolb
push
fimuls
push
sti
sub
lock
cli
mov
inc
test
mov
movsb
frstor
lret
loopne
cmp
mov
outsb
jb
stc
aaa
lods
ss
lods
jns
add
addl
jns
inc
mov
sti
inc
ret
lahf
mov
pushf
stos
adc
imul
jae
mov
dec
inc
sub
mov
icebp
add
mov
into
test
add
xchg
adc
call
add
xchg
inc
movsl
push
pushf
test
jbe
jno
daa
mov
insl
pop
fldl
mov
int
outsl
xor
test
mov
ret
scas
mov
adc
repnz
fstpt
popf
out
push
in
dec
popa
popa
add
es
lcall
clc
scas
call
lahf
ja
orb
cs
xchg
aaa
xor
shrl
out
push
out
xchg
bound
pop
jno
fdivs
push
mov
xlat
or
or
mov
pop
mov
jecxz
lcall
jg
pcmpgtw
in
iret
jge
lds
into
push
mov
mov
ret
mov
mov
jp
call
mov
repnz
fs
mov
xlat
mov
and
scas
pop
cmc
jp
loope
sbb
lea
sbb
push
cmpl
cltd
mov
jge
lret
jbe
jbe
ja
in
scas
out
ljmp
jl
push
xchg
push
bound
mov
pop
mov
dec
pop
jl
inc
xchg
inc
enter
sub
add
loop
adc
push
test
bound
sub
mov
dec
xor
sub
pop
lret
icebp
mov
inc
push
mov
mov
in
hlt
inc
mov
fnstenv
out
ss
das
jb
outsb
enter
movsb
ja
sub
lahf
push
cmp
scas
negb
inc
aas
sbbb
adc
out
pop
hlt
jno
cmp
mov
xor
xor
add
cmp
xchg
dec
and
stos
xor
repz
adc
push
sti
pop
jne
cmp
mov
jmp
fs
cmc
mul
sahf
out
add
repz
andl
xchg
xchg
inc
sub
ret
or
out
shlw
dec
out
daa
ss
or
ss
inc
fldl
mov
adc
shlb
adc
xchg
add
add
test
lahf
je
addr16
dec
push
cmp
push
sub
xorl
jb
test
or
push
mov
mov
inc
cmpb
mov
or
dec
outsb
fisttpl
or
pop
sbbb
jl
clc
mov
pop
add
divb
add
cli
xor
lock
xor
dec
mov
or
into
sbb
ret
and
push
cmp
test
xor
xorb
repz
and
pop
xchg
or
mov
cltd
dec
push
sub
inc
add
push
inc
ret
sbb
and
cmpsb
in
add
xchg
sahf
je
mov
xlat
je
loopne
subb
lahf
sub
xchg
jno
data16
lea
sub
jne
enter
mov
add
dec
add
sbb
sbb
hlt
jo
inc
cs
adc
fcomps
xor
mov
sub
shl
shr
mov
insl
int3
aas
outsb
pop
dec
mov
mov
cmc
repnz
fdivrl
mov
fisubrl
dec
test
ret
mov
shrl
xor
test
call
ret
push
adc
lahf
xchg
out
pop
and
addb
mov
jne
adc
xlat
fsubs
hlt
mov
stc
popa
insl
add
push
jecxz
std
lahf
cmp
adc
mov
push
fs
dec
and
sbb
add
or
shlb
call
cld
and
popf
xorb
hlt
jns
sbb
std
push
dec
mov
push
xchg
cs
xchg
cmp
pop
pop
and
pop
dec
push
test
pop
lcall
jl
xchg
or
je
mov
add
out
pop
dec
cld
je
lahf
sub
push
add
mov
in
loope
lret
mov
pop
clc
xchg
push
cld
xchg
pop
push
mov
mov
cli
lret
xor
dec
adc
push
push
sbb
rolb
cmp
fucom
mov
or
inc
fisubl
or
fcoms
cli
jae
and
mov
outsb
testb
sbb
fsubr
aam
xchg
dec
mov
jle
cld
pop
orl
pop
aad
aas
inc
push
scas
dec
aas
cmpsl
bound
sbb
xchg
push
fisubs
sarb
mov
ret
imul
mov
inc
je
jg
mov
incb
and
mov
ret
fnsave
nop
in
cmp
sbbb
icebp
pop
arpl
leave
pusha
or
je
cmp
push
cmpsb
orb
dec
pop
add
lcall
inc
movsb
fsubs
jbe
add
jae
xor
in
mov
shl
subl
adc
mov
fisubl
push
jp
imul
cmp
clc
mov
movsl
imul
sbb
sub
sarl
je
shl
repz
repz
xorb
dec
xchg
cmpb
mov
insl
lds
mov
xor
jp
aam
cmp
aas
addl
cmp
in
leave
sbb
int3
add
mov
cwtl
pop
jnp
ja
jb
pop
inc
xor
sarb
call
jne
ds
inc
xchg
repnz
or
fwait
pushf
cwtl
iret
push
inc
add
push
jns
xchg
mov
jbe
jb
popa
jnp
inc
sub
dec
jl
jb
sbb
cmpsl
mov
fs
iret
in
outsb
or
stos
pop
les
push
fdivl
fisttpl
cmp
scas
adc
pusha
inc
je
and
jns
lcall
jae
cld
pop
ret
fimull
mov
mov
aam
fistpl
pop
pop
les
leave
or
mov
dec
adc
add
insl
mov
mov
fwait
sub
das
fstp
xor
leave
push
push
shr
ja
mov
adc
int3
pusha
xchg
sbb
fiadds
das
mull
sbb
mov
lcall
jbe
stos
pushf
lret
cli
cmp
loopne
test
dec
mov
pop
xchg
jmp
popf
mov
xlat
gs
ret
mov
repz
xchg
jo
out
addr16
pop
ret
movsl
push
jo
adc
outsb
mov
cmp
sub
ret
test
incb
ljmp
sbb
fdivl
lcall
xor
dec
mov
clc
shll
xor
sub
sub
sbb
add
daa
cmp
inc
and
test
imul
or
es
jb
push
leave
cmpb
rcrl
fisubrs
sbb
outsl
pop
cmp
insb
addb
cltd
push
cmp
jp
push
sbb
fisubs
cmp
pop
ret
sti
and
divb
or
sbb
jmp
jb
dec
psubd
pop
inc
hlt
fstpt
rcrb
sbb
pop
cld
cmp
inc
fcoms
loopne
in
cs
add
loopne
inc
jnp
or
push
mov
pop
inc
inc
lret
mov
inc
iret
jne
jmp
push
xchg
aas
subb
cmc
xchg
insb
dec
aas
sbb
mov
test
cmp
movl
lcall
push
test
pop
gs
adc
jp
adc
and
das
sbb
mov
xchg
cmpsl
inc
inc
outsl
push
imul
psubsw
pop
sub
push
mov
pop
add
xchg
cmp
xchg
jns
jae
inc
fisubl
loopne
sahf
xchg
pop
xorl
inc
push
pop
xor
mov
mov
pop
adc
pop
sub
mov
in
pop
cmp
sbb
shll
push
adc
movsl
fsubl
sbb
in
xchg
sub
dec
rorb
add
mov
xchg
jns
xchg
js
mov
mov
and
add
adc
mov
stos
jge
mov
int
mov
push
jns
sbb
loop
xor
das
jne
ret
mov
xchg
sub
out
push
cmp
ljmp
push
leave
ds
mov
dec
mov
popa
sbb
jno
lcall
decb
ja
scas
pop
and
repnz
pop
outsb
dec
loopne
and
cli
imul
dec
daa
xchg
inc
cltd
push
pop
pushf
jg
inc
test
adc
xchg
movl
shr
fstpt
std
jmp
out
push
jns
iret
mov
cmpsb
xchg
mov
fistl
mov
mov
and
aaa
xor
push
push
gs
adc
and
imul
fsubs
lock
xchg
and
push
mov
xor
lea
stos
dec
jmp
or
jb
pop
and
aad
pop
mov
les
mov
sub
mov
loopne
stc
cli
pop
mov
dec
xchg
jno
mov
xchg
dec
push
pop
xchg
adc
mov
les
jecxz
fdivrl
mov
push
roll
jl
jl
mov
outsl
mov
push
sub
scas
data16
and
lock
pop
sbb
stc
pop
testl
xor
jecxz
ja
loopne
pop
xchg
cmpsb
bound
popa
mov
mov
cmp
or
mov
mov
pop
mov
dec
push
mov
out
enter
sbb
inc
loop
into
fcmovnbe
xchg
cmp
arpl
xchg
jmp
adc
mov
inc
inc
imul
xorl
and
inc
sbb
inc
stos
mov
or
mov
out
mov
or
popf
out
lds
mov
xchg
mov
push
push
movsb
out
sbbl
adc
mov
add
leave
dec
outsl
and
push
sti
lea
cmp
push
xor
xchg
lret
js
cmp
jae
inc
jp
cmp
sbb
xlat
pop
rorl
shll
imul
jne
js
jne
inc
xchg
rcrb
outsb
sub
or
pop
push
push
adc
shll
les
imul
pop
mov
movsl
xor
insb
sub
inc
xchg
lods
mov
out
movsl
jecxz
or
es
mov
xchg
shrl
jge
lahf
lods
divb
fists
cli
jns
jl
lock
inc
push
test
inc
aam
das
adc
stc
inc
enter
pop
jle
das
xchg
mov
adc
xchg
sbb
icebp
aad
adc
pop
orb
ret
push
mov
cmpl
sbb
test
test
daa
dec
aaa
xchg
xchg
popa
outsl
mov
popf
pop
adcb
inc
jns
fs
mov
in
add
pop
cmp
aam
pop
repnz
pushf
jmp
or
jae
adc
xchg
je
orb
dec
mov
or
xor
les
fs
gs
pop
inc
cltd
je
outsl
shll
lahf
sub
or
cmpsl
dec
or
scas
test
adc
mov
lcall
adc
aad
mov
es
jae
sub
mov
cld
cmpsl
incl
ret
stc
mov
outsl
dec
sbb
xchg
add
push
popa
pop
dec
adc
cwtl
mov
ljmp
fwait
dec
cltd
xchg
xchg
lods
scas
jmp
push
pop
jno
push
add
mov
pop
dec
push
or
shrb
and
sbb
xchg
mov
mov
xorl
inc
fiaddl
leave
aam
pushf
cmpl
lret
daa
mov
fdivrs
stos
or
pop
out
cmp
jmp
jge
daa
cwtl
xor
xchg
inc
ds
add
mov
or
push
outsb
inc
lahf
add
jne
sub
sub
jo
cmp
ds
add
mov
scas
xchg
xor
add
sub
notb
mov
movsb
jmp
es
out
loope
xor
mov
rcll
pop
mov
stos
jl
andb
push
xchg
and
insl
lds
insb
pop
push
push
insl
cwtl
dec
cmp
aam
cmp
cmp
pusha
fmul
and
and
dec
call
sub
xchg
loopne,pt
mov
in
mov
push
in
movsb
pop
loope
in
loopne
jbe
mov
lods
xchg
cmp
mov
cmp
clc
jae
push
mov
push
pop
push
lea
and
in
push
or
out
xor
gs
movsb
xchg
sub
sub
jno
mov
pop
lret
inc
or
mov
out
jg
mov
cmpsl
mov
fistps
neg
push
mov
movsb
pop
pop
and
les
add
idiv
movsb
fs
sbb
loop
mov
cmp
mov
imul
dec
in
stc
out
iret
insb
xor
sub
sti
scas
jmp
ljmp
mov
sti
push
pushf
scas
xor
mov
lock
xor
inc
xchg
popf
mov
mov
lret
imul
jge
outsb
pop
xor
cmp
and
xchg
mov
sub
pushf
xchg
jle
pop
daa
test
mov
dec
add
jae
push
insl
clc
mov
push
xchg
or
add
sti
jb
and
cld
fs
jl
aaa
int3
xchg
push
aad
inc
add
and
sub
test
or
in
mov
popf
cmpsl
mov
xor
mov
pop
js
xchg
loopne
roll
push
clc
int3
test
out
push
xchg
dec
lea
push
aas
mov
push
fldt
and
dec
mov
bound
pop
test
popa
pop
cld
jbe
xor
jp
movsb
das
jb
pop
fldt
dec
lock
mov
pop
xchg
shrb
in
push
lret
bswap
cltd
xchg
sbbb
lret
js
mov
jae
add
insl
xor
sbb
pop
adc
pop
cmp
ss
inc
mov
jg
fisttps
nop
insb
data16
push
lahf
call
lods
fidivrl
mov
test
xlat
arpl
add
test
adcb
out
inc
and
hlt
xor
lret
cmpsl
cmp
int
mov
push
decb
or
addr16
daa
xchg
pop
mov
push
or
pop
ss
nop
rolb
xor
pop
xchg
imul
cmp
cmc
pop
les
and
loop
movsl
cli
mov
incl
inc
add
cs
jge
aad
push
lahf
js
mov
pop
xchg
mov
and
mov
xor
sti
xchg
xor
or
add
loope,pn
aaa
sbb
dec
cwtl
jae
sarb
pop
sub
dec
mov
ljmp
and
daa
int
jo
in
lods
sub
jae
inc
push
xchg
jecxz
xchg
test
fnstcw
pop
movsb
pop
push
es
cmpsl
cmp
sub
dec
dec
pop
dec
es
dec
mov
sub
mov
cwtl
imul
jmp
adc
push
xchg
cmp
das
sbb
mov
adc
xchg
adc
pop
lret
jo
cmp
push
mov
cltd
cli
mov
mov
mov
jo
repz
int3
gs
jb
or
push
mov
xor
icebp
lds
mov
and
addr16
and
test
xchg
cmp
mov
push
inc
out
jbe
ret
or
cmp
jb
jns
stos
mov
mov
imul
lcall
add
inc
fwait
add
pop
and
cwtl
rorl
pop
out
adc
notb
mov
ret
xchg
aas
dec
add
jle
cltd
cmp
fidivl
xor
cltd
xchg
leave
xchg
adc
insl
rcll
cmp
jns
jne
add
add
cmc
xchg
clc
jp
and
ss
sub
out
push
cmp
fildll
xor
jmp
xor
add
sub
add
dec
push
cmovl
popa
pop
dec
stc
outsb
or
jbe
mov
mov
mov
mov
mov
fs
in
jnp
sbb
fwait
and
or
gs
sub
movb
data16
add
ja
push
frstpm(287
imul
sub
orb
pushf
jo
sub
push
xchg
sub
xchg
mov
lods
dec
jg
push
loop
sub
pop
mov
das
push
and
push
hlt
sub
sub
jne
lcall
push
sbb
addr16
mov
sbb
mov
lods
scas
ds
fbld
stc
adc
out
ret
sub
xchg
dec
clc
jae
in
and
adc
push
cmp
pop
pusha
add
mov
mov
pop
push
orb
cmp
jp
out
xbegin
cld
jbe
push
pop
insb
add
pop
imul
jb
jnp
outsl
mov
data16
out
insl
loope
xor
sahf
dec
out
dec
dec
or
push
mov
outsl
outsl
pop
sbb
inc
jle
and
imull
lea
cs
mov
mov
xor
sub
push
and
inc
scas
xlat
adc
movsl
push
jle
aam
mov
adc
stos
test
push
negb
lds
movsl
addr16
fnstcw
mov
xlat
addr16
lahf
cmp
popf
movsb
add
cmp
ljmp
out
and
aaa
in
imul
xchg
adc
aad
jno
pop
enter
pop
push
push
push
ficomps
sub
rorl
dec
sub
xor
inc
or
ss
mov
jo
mov
and
xchg
and
pop
mov
add
fdivrl
jp
cmpsb
xchg
scas
pop
nop
popf
mov
add
subb
icebp
mov
inc
mov
inc
negl
das
fimull
cwtl
stos
dec
fs
stos
adc
mov
add
dec
inc
pop
xor
mov
xor
or
push
inc
test
or
add
and
pop
idivb
xchg
inc
fisttpl
sbb
pushl
mov
xchg
pop
cmp
cltd
aam
in
xchg
scas
popf
inc
incb
push
mov
xor
push
xchg
out
dec
pop
jb
jge
mov
dec
or
jno
ja
push
adc
clc
data16
mov
cmp
inc
xchg
loope
daa
push
je
mov
sub
les
int
aas
or
mov
movsb
mov
outsl
std
push
mov
pop
pop
cld
cmc
add
hlt
xor
sub
inc
fadds
xchg
sbb
insb
out
fcmovbe
push
fldcw
push
push
gs
sbb
mov
fbstp
in
add
inc
jne
ficoms
sbb
hlt
sarb
mov
jmp
jecxz
or
mov
lret
adc
mov
test
shrb
call
lea
add
pop
add
lock
fucomi
mov
mov
iret
lods
mov
lock
cwtl
pushf
mov
fcoml
aad
cmp
outsl
push
sbb
mov
adc
iret
shrl
pop
sbb
or
push
rorl
pop
les
insb
xchg
cmc
add
insb
addl
lds
jb
adc
push
cwtl
pop
cmpsb
adc
fsubs
call
pop
cwtl
and
test
xor
jp
xor
cmp
mov
pop
push
stos
stc
mov
mov
xchg
or
sbb
push
pop
pushf
dec
inc
pusha
sbb
cmp
adc
mov
mov
int3
stc
mov
or
out
repnz
scas
or
aas
loope
scas
sbb
push
into
and
push
and
push
mov
divl
rorl
add
lret
icebp
adc
orl
or
in
push
dec
cs
sarl
inc
out
mov
movsl
aas
jle
loopne
shll
sub
adc
adc
jp
push
dec
decb
dec
and
leave
add
jns
mov
cmc
dec
dec
pop
repz
xchg
add
sbb
cmc
cmp
lret
les
out
push
inc
das
fcompl
or
add
imul
out
hlt
cli
cmp
cmc
pop
jl
loopne
repnz
jo
xor
add
jns
xlat
jno
cli
cmpsb
adcl
aam
mov
lods
mov
or
mov
mov
gs
rolb
jp
loopne
je
aaa
insb
stos
ljmp
cmp
sub
sbb
xchg
pop
or
adc
xchg
and
testl
imul
sub
lds
jp
push
and
push
loope
mov
dec
lea
sub
in
push
add
sub
mov
cmc
dec
sub
add
push
std
andb
inc
icebp
das
rclb
jo
or
cmp
dec
test
out
sub
stc
adc
fwait
lock
or
push
ss
jg
ds
dec
dec
pop
push
clc
mov
repnz
inc
and
and
mov
movsl
push
jne
jno
push
jno
inc
lahf
stc
dec
adc
dec
mov
push
ret
dec
push
in
mov
movsl
sub
inc
out
pcmpeqd
fcmovb
repnz
mov
lea
icebp
in
popa
cwtl
leave
dec
lretw
lock
rolb
mov
roll
push
das
xor
frstor
lret
xorb
jno
sub
jg
imul
mov
les
jno
out
jno
orb
xchg
pop
mov
je
je
movsl
pop
sbb
jo
ds
inc
out
and
cld
ja
sbb
sub
leave
fcomip
aas
mov
hlt
popa
rclb
pusha
ja
repnz
add
iret
notb
popf
xchg
imul
or
cmc
jno
imul
push
lock
xchg
adc
xor
out
lret
xchg
adc
adc
push
xor
in
popf
push
pop
rcrl
sub
inc
ja
stos
mov
xor
jge
subb
lahf
cs
cmc
pop
add
cmp
adc
aam
fidivrs
mov
addr16
sarb
jp
les
sub
adc
das
xchg
mov
cmp
out
scas
insb
add
stos
mov
loopne
xchg
outsb
mov
push
jns
mov
sub
mov
rcrl
xchg
adc
push
dec
mov
mov
jg
lea
into
aaa
pop
mov
mov
pop
shl
xchg
sbb
xor
and
xchg
sub
sbb
jge
or
loope
or
js
mov
mov
lahf
ficomps
or
pushf
insl
fadds
mov
js
mov
sbb
pushf
xchg
cld
test
adc
nop
fsubl
adc
sbb
sbb
adc
or
push
dec
mov
pusha
sbb
pop
mov
push
stos
or
and
sbb
rclb
roll
aas
adc
xor
out
push
pop
fimull
jnp
xor
pop
mov
adc
jo
jmp
aam
sub
scas
in
insl
in
jne
xchg
pop
inc
xor
test
pop
cmp
test
lea
sbb
out
add
mov
mov
push
divl
jb
lret
lea
xchg
mov
or
das
sbb
dec
std
add
dec
dec
dec
pushfw
jae
fnstenv
mov
std
jmp
lods
sub
sbb
mov
mov
inc
imul
scas
jne
sbb
sbbl
imul
loop
and
sub
adc
mov
pop
cmp
mov
mov
arpl
out
xor
mov
push
cwtl
ljmp
test
xor
jbe
inc
inc
push
xchg
test
aam
jge
dec
shl
xchg
lret
shlb
push
les
mov
ror
or
stos
jge
cld
jg
inc
aam
dec
adc
std
pop
das
iret
int3
adcl
and
movsb
fsubrl
out
loopne
adc
les
jl
outsl
mov
push
dec
add
es
mov
push
xor
xor
ljmp
scas
in
cmp
dec
add
sti
cmp
add
lods
mov
xchg
sbb
inc
sub
lock
push
sub
jge
faddp
inc
dec
cmpl
hlt
dec
pop
pop
jae
rorl
mov
push
cmp
cmc
push
imul
sub
xchg
push
fnstcw
rorb
mov
nop
stc
and
movsb
cmp
mov
mov
xchg
or
bound
pop
mov
and
enter
push
je
xor
ljmp
lret
fwait
adc
and
adc
sub
stos
jmp
pop
jmp
mov
fucomip
push
lods
popf
stos
cmp
inc
leave
mov
jne
xchg
jg
aaa
icebp
jmp
add
in
sbb
xchg
mov
mov
and
lods
jnp
int
cmp
mov
pop
push
sub
sbb
push
pop
in
jno
les
sahf
aaa
xchg
lret
in
cld
push
and
scas
jmp
add
imul
data16
fdivrs
mov
push
repz
mov
jmp
xchg
in
test
mov
jle
xchg
lods
gs
scas
xchg
je
xchg
cmpl
lar
xor
mov
dec
stos
aam
scas
pusha
daa
jno
pop
push
jecxz
add
in
cmc
adc
add
in
xchg
inc
push
insb
fisubrs
jecxz
jbe
mov
adc
mov
pop
xor
cld
dec
insl
jecxz
sub
sub
xchg
and
jl
ffree
push
jae
mov
jle
xor
mov
out
cmp
xchg
dec
outsb
add
adc
test
cli
cmc
es
dec
hlt
clc
sbb
out
mov
div
inc
pop
fstpl
je
data16
ss
lcall
mov
push
aas
push
xchg
and
add
adc
ljmp
iret
add
add
push
adc
fcomps
pop
sbb
push
adc
mov
push
push
cmp
aas
cmp
lock
inc
imul
mov
xor
dec
jns
add
idivl
repz
sub
fstpt
lcall
pop
es
outsb
ret
add
rep
mov
and
call
xchg
mov
xor
mov
cmpsl
pop
rorb
pop
insl
lods
push
mov
dec
stos
push
xchg
pop
stos
mov
inc
sbb
mov
lods
cld
dec
cltd
mov
jne
jge
lcall
xchg
add
push
imul
xchg
jno
out
jnp
je
pusha
shrb
call
out
xchg
sub
sub
sbb
hlt
mov
fimuls
push
loopne
divb
mov
rclb
scas
jle
dec
xor
dec
movsb
dec
adc
call
xchg
idivb
pop
mov
xchg
pushf
fidivl
clc
movl
movntq
mov
xchg
imul
ficoms
jne
mov
or
jns
sbb
mov
push
or
fwait
daa
and
jmp
and
push
stos
clc
ss
lock
jns
mov
push
inc
clc
dec
mov
push
rorl
ss
dec
stc
xchg
sarl
sub
in
addr16
psllw
mov
imul
push
add
push
sbb
ja
or
ret
and
fnsave
sti
xchg
jecxz
pop
aam
pop
fs
pop
inc
movups
pop
xchg
mov
jns
cmpsb
cld
and
jno
leave
push
roll
es
add
out
pop
popa
dec
arpl
std
rorb
out
hlt
push
daa
add
pop
lea
int
push
repz
testl
je
mov
or
adcb
int3
nop
aaa
add
hlt
mov
and
and
xchg
cmp
shr
dec
or
jbe
xchg
xor
inc
push
cmp
rorl
add
inc
jns
jg
in
inc
jg
inc
dec
sub
mov
or
orb
add
pop
movsb
xor
jns
stc
daa
cld
push
lahf
bound
cs
hlt
jg
les
pop
addr16
mov
enter
lods
inc
sbb
fidivrs
sub
fwait
stos
jg
push
push
push
pushf
imul
aaa
xchg
out
clc
imul
mov
cli
sub
cmc
cmp
lret
lds
pop
pop
xor
add
loope
lock
sbb
sarl
jmp
addb
repz
subb
cmp
jnp
aaa
rclb
dec
cmpsl
lahf
in
jns
inc
or
sub
scas
lahf
jne
fwait
add
pop
test
clc
xchg
lret
pop
pop
push
std
fcompl
push
ds
sbb
mov
mov
xor
sbb
ljmp
or
out
lods
dec
pop
add
mov
push
mov
std
in
lods
pop
in
mov
popa
imul
xchg
inc
in
dec
inc
ljmp
push
test
dec
ret
jle
stos
shld
out
jnp
idivb
addr16
js
orl
out
mov
pop
fmull
mov
mov
jne
into
fcomip
in
mov
in
mov
mov
xor
mov
mov
mull
and
hlt
inc
sarl
gs
lcall
adc
les
movsb
lahf
sbb
fnstenv
cmpsb
aad
sbb
outsl
scas
push
out
out
pop
jl
inc
cltd
push
fsub
mov
cmp
and
aam
or
cmc
or
cli
popa
and
pop
adc
sar
sub
cmp
js
pop
lea
xchg
shll
insl
loop
mov
mov
or
pusha
or
pop
shrb
or
pop
movsb
dec
lret
in
jno
adc
cld
cmp
in
xor
lahf
jnp
test
xor
jbe
inc
lock
adc
dec
data16
mov
lcall
cmp
inc
scas
pop
sahf
repnz
imul
pusha
in
pop
mov
add
xorb
imul
addl
andl
enter
in
loop
adc
sbb
push
das
imul
pop
push
cmpsl
outsb
cwtl
push
jmp
sbb
clc
jbe
sbb
mov
fsubs
push
mov
jo
push
loope
int3
movsb
inc
sbb
xchg
lds
aam
sub
sbb
testb
inc
leave
jp
mov
pop
xchg
sbb
imul
adc
jle
mov
sub
imul
push
mov
jne
xor
jl
push
jecxz
sub
rcl
pushf
imul
fdivs
push
mov
xchg
jg
movsl
or
sub
sub
in
fstpl
scas
je
hlt
rcrb
nop
mov
dec
adc
sub
sbb
or
push
arpl
and
rorb
cmpl
jae
les
mov
dec
mov
insb
xor
mov
pop
aas
inc
push
mov
xchg
xchg
ret
fstpt
xchg
and
inc
stos
adc
pusha
sbb
pusha
imull
dec
inc
test
repnz
mov
and
out
jp
jno
push
mov
ficoml
mov
push
jnp
mov
cs
mov
in
sbb
adc
scas
addr16
ds
dec
dec
stos
xchg
cltd
adc
add
inc
add
mov
mov
push
rcrl
fsubrs
mov
out
jns
sbbl
lcall
cld
pop
inc
fst
mov
orl
mov
add
loop
test
pop
or
imul
frstor
inc
mov
cs
adc
mov
add
jns
mov
jns
sti
out
icebp
mov
jecxz
mov
pop
xlat
push
andl
pop
fs
aaa
imul
mov
popa
ljmp
ja
add
mov
adc
mov
mov
sbb
jmp
push
or
add
out
fwait
xor
aaa
lods
cmp
push
mov
push
or
sbb
and
jb
lea
loop
call
jns
pop
mov
stc
sub
movsl
xor
push
fldl
cmp
inc
sbb
decl
andb
fimuls
mov
repz
fwait
lahf
sub
xor
cmpl
sbb
xchg
mov
pop
fld
repnz
je
lret
or
pusha
outsl
outsb
aad
push
andl
in
mov
lahf
jb
in
add
sti
pop
int
mov
in
xlat
in
xor
addb
sub
das
add
xchg
or
pop
decl
mov
negl
iret
arpl
sti
push
push
stos
and
mov
lods
cmp
mov
cmp
negl
adc
rcrb
inc
pop
mov
jne
in
out
push
sti
inc
jae
jge
sbb
sub
ljmp
popa
adcb
ret
cmp
push
in
movsl
adc
out
inc
or
sub
mov
in
add
ljmp
sub
dec
in
mov
ss
add
pop
lcall
int3
mov
push
jb
sarb
mov
adc
cmp
jae
mov
into
cmpsl
xor
and
test
bound
sub
push
pop
sub
repz
sub
loopne
mov
jecxz
sub
sti
movsl
push
dec
hlt
outsb
int3
insb
xchg
lea
mov
ja
xor
sbb
jle
fildll
push
inc
dec
popf
inc
aam
aaa
xchg
das
jg
psubsb
fcoml
mov
cmp
pop
clc
lock
mov
push
or
cmp
int
jmp
lcall
jne
push
test
push
jecxz
fimuls
mov
cmc
stos
sub
jne
or
fdivs
adc
jge
cmp
repnz
aad
movsl
dec
repz
fldl
ljmp
mov
push
outsl
stos
sub
dec
neg
or
push
xchg
jmp
mov
ds
sub
pusha
lds
and
dec
inc
sub
sub
push
push
pop
jp
jl
mov
jmp
das
sbb
add
sahf
fisubs
and
sti
imul
mov
inc
das
inc
jae
mov
xor
xor
cmpsl
cmc
lods
dec
fwait
dec
int3
add
es
ja
jp
pop
pop
push
sbb
mov
mov
sub
clc
mov
mov
dec
add
sbb
xchg
sahf
loopne
testb
jmp
and
add
jne
fimuls
add
pop
mov
subl
or
cmp
xchg
add
out
inc
cmp
sahf
lcall
lahf
xlat
xchg
stc
scas
and
bsf
mov
mov
or
adc
sbb
lock
or
mov
out
mov
ds
mov
scas
xor
lock
push
movb
sub
jmp
mov
jmp
mov
hlt
inc
lahf
cwtl
insb
cmp
cmpsb
fwait
jmp
sbb
mov
loopne
sbb
outsb
stos
xchg
mov
and
fsubp
out
fsubrp
and
sub
pop
push
mov
in
mov
add
and
inc
mov
mov
mov
adc
push
rcll
lcall
or
mov
or
lock
dec
lea
test
mov
xchg
xchg
div
add
cmc
lret
dec
add
loop
or
clc
pop
lods
mov
xor
cltd
test
xchg
lcall
fwait
ja
lods
mov
ljmp
notl
hlt
add
loope
sahf
bound
and
ret
mov
inc
add
pushf
xor
or
mov
test
ror
jnp
movsb
repz
push
mov
rorl
adc
push
loope
popa
sbb
lods
imul
cwtl
fimuls
fwait
dec
or
jl
out
add
xor
sbb
xlat
in
push
pop
sub
daa
notl
jo
test
mov
mov
imul
adc
rol
xor
fucomip
stos
das
ja
ss
push
and
fistl
inc
arpl
pop
es
loopne
mov
jo
push
mov
inc
repz
or
push
aaa
in
xor
outsl
dec
sbb
cli
and
xor
sbb
fnstcw
or
xor
add
mov
and
jae
inc
sbb
sub
push
xor
sub
xchg
pop
add
lret
je
push
xor
nop
push
add
ret
xor
or
scas
in
das
mov
and
stc
test
xchg
mov
push
roll
bound
cwtl
dec
in
cltd
mov
xchg
fidivs
inc
push
xor
xor
mov
fadds
insb
scas
add
push
sarb
dec
fisubrs
push
dec
xchg
rorb
sub
pop
adc
cmp
jne
rcr
stos
rol
imul
inc
xor
mov
pop
stc
push
scas
stc
or
inc
mov
clc
mov
stos
sub
jb
jmp
or
cmp
push
jno
jecxz
nop
int3
dec
rcrb
pushf
ret
cmp
mov
out
int3
pop
push
pop
loopne
pop
pop
movsb
ffree
adc
aaa
ss
sbb
mov
pusha
test
push
sbb
inc
sbb
seta
and
push
xchg
cmp
mov
cli
jle
icebp
adc
ret
pop
cmp
push
sub
lods
in
lcall
rcl
xor
insb
pop
imul
adc
push
inc
mov
or
jnp
cmp
ss
jo
sbb
mov
fs
bound
dec
sbbl
mov
das
loop
jl
cmp
mov
lock
fcmovbe
inc
push
andl
jmp
sbbb
inc
fimull
push
jl
add
xor
leave
stos
jns
es
stc
fwait
push
jnp
cmc
pop
sahf
popa
subl
cmpsb
shll
arpl
cmp
ss
dec
shrb
mov
enter
or
es
ljmp
cmp
sub
sbb
pop
test
popa
push
inc
mov
mov
iret
add
lods
or
and
incl
add
mov
cltd
xor
cmp
mov
mov
aas
jg
repnz
push
xor
sub
sub
loop
jb
mov
push
and
scas
pop
push
sub
sahf
lds
pop
sub
scas
xor
cmp
sbb
mov
lods
pop
mov
je
in
sti
scas
testl
sbb
int3
addl
cli
jmp
fadds
insl
xchg
loopne
imul
repnz
int
shlb
mov
xchg
in
dec
arpl
mov
cli
scas
dec
cmp
pop
push
mov
mov
jl
fisttpl
xchg
arpl
stos
cld
mov
mov
loop
repnz
sti
sub
push
enter
xchg
aas
jnp
pop
mov
in
xchg
sub
mov
loop
and
xor
inc
pop
or
cmp
xchg
jbe
pop
std
fcoms
xchg
xchg
jne
mov
dec
mov
pop
jg
adc
push
pop
insl
mov
sub
pop
xor
in
inc
cmp
cmp
mov
clc
imul
aas
rcll
test
ljmp
pop
cmc
sub
dec
fnstsw
sub
insb
mov
push
push
mov
inc
push
add
icebp
pop
lret
lcall
fistl
bound
pop
popf
sub
or
loop
cmpsb
and
test
mov
mov
mov
inc
and
push
and
out
lock
cmp
incl
dec
mov
mov
jbe
in
sub
adc
sbb
xchg
and
xchg
xchg
test
fildl
xor
imul
push
push
or
int
mov
jb
pusha
mov
jbe
jb
cmp
inc
sub
sar
xchg
lret
adc
jae
sahf
in
stos
stos
mov
lahf
xchg
jns
addr16
pop
fldenv
mov
pop
or
or
js
sbb
cmp
in
inc
push
fcmovne
js
aam
repnz
sti
enter
or
stc
push
push
push
fwait
mov
fs
jge
cmpsb
mov
push
pop
add
and
fmuls
pop
lret
repnz
mov
dec
outsl
pop
nop
dec
cmpsl
jo
mov
and
jno
add
idivl
sahf
xlat
adc
inc
mov
testl
and
xor
std
stos
shll
pop
pop
jl
out
lock
sbb
and
loop
imul
cmpsb
into
lret
dec
cmp
ficompl
sti
leave
dec
cmp
sub
daa
jecxz
jecxz
into
ja
daa
daa
sbb
ret
push
add
js
xlat
mov
pop
jmp
sbb
test
aas
repnz
aas
pop
add
addr16
jb
imul
iret
testl
adc
daa
or
ja
add
dec
or
or
xchg
jb
stos
adc
mov
lods
mov
mov
js
push
xor
pop
popa
jo
jae
cltd
xchg
out
sub
mov
adc
mov
pop
pop
pop
push
mov
jo
xlat
add
cmpl
cld
mulb
aaa
ds
push
ret
lahf
mov
jne
stos
movsl
pop
pop
pushf
mov
mov
xor
cmp
adcb
enter
out
xchg
fbstp
xor
dec
in
mov
dec
loopne
adc
testb
addl
and
xor
adc
mov
jmp
movsl
cmp
jmp
sbb
out
dec
push
push
test
sub
jg
jmp
fbstp
lret
loopne
rcrl
call
shl
fnsave
testl
roll
cmpxchg
jnp
xchg
cli
movsb
hlt
daa
cmp
in
xchg
mov
lock
pop
andb
pop
shrl
sub
imul
lea
adc
xor
rorl
mov
pop
rclb
pop
popf
shr
add
xor
fwait
inc
inc
pop
int
fdiv
loope
fstpl
or
xor
cld
xor
pop
ss
xchg
cmpsb
shr
in
inc
jge
or
jb
push
add
cmpsb
pop
fnstsw
loope
xchg
cmp
out
mov
sahf
js
lods
lods
mov
xor
fcomps
dec
cltd
mov
sub
jb
adc
outsb
xchg
aam
and
push
rcl
fs
stc
pop
xlat
jmp
xor
jae
xor
cmpsl
jl
iret
mov
lcall
test
jnp
es
sub
int3
and
inc
stos
mov
xchg
lahf
repnz
in
pop
pop
idiv
icebp
add
or
sbb
cmp
adc
and
and
cmp
jbe
mov
popa
jmp
xor
or
xchg
pop
dec
jl
sub
sbb
bound
mov
mov
loopne
fsubrs
outsb
or
jno
fidivrs
xchg
loopne
shll
and
jne
xchg
or
push
dec
test
cmp
icebp
lods
cmp
out
and
testl
scas
jl
testb
movsb
pop
out
cmpsb
sarb
imul
ss
iret
std
lcall
xlat
pop
imul
mov
cmpsb
mov
leave
repz
mov
in
fcoms
xchg
jbe
inc
push
std
lds
sbb
dec
mov
and
push
in
pop
out
mov
add
or
stos
clc
sub
call
out
adc
sbb
mov
push
mov
repz
or
jbe
sbb
push
fisubrl
test
lods
lahf
mov
mov
xchg
rcrl
scas
mov
ljmp
sub
inc
cmpsb
mov
test
xor
pop
cltd
xchg
mov
loop
out
add
push
dec
xor
std
push
pop
jns
ja
pop
int
xor
lea
add
add
xor
mov
test
fsts
or
xor
ja
movsl
cmp
leave
int
mov
xchg
xor
sar
xor
aam
xchg
and
xchg
test
jmp
pop
fcmovne
mov
lret
pop
mov
iret
lcall
dec
lret
mov
subl
subl
daa
xor
movsl
adc
sbb
in
and
shlb
adc
sub
adc
shll
fcoml
in
and
pop
sbb
mov
ds
lds
jmp
mov
sbb
fisubs
adc
arpl
stc
aad
or
les
arpl
inc
cmp
xchg
xor
mov
pop
nop
pop
out
rcll
hlt
fs
aam
push
xchg
dec
fadd
dec
jns
mov
jo
push
add
xchg
xor
pusha
stc
lcall
es
lea
dec
adc
push
jno
aaa
lret
or
std
xor
xor
push
mov
mov
inc
push
cmp
dec
nop
clc
aas
sbb
sub
aad
lret
mov
out
add
pop
dec
adc
cmp
lret
add
jb
mov
leave
push
out
mov
ljmp
add
xchg
xchg
mov
ja
into
sbb
lock
or
fidivl
push
or
aaa
dec
bnd
adc
leave
in
mov
jnp
in
xchg
inc
fcoml
adc
cmp
loope
jae
adc
fwait
ret
lds
nop
scas
pop
and
xchg
out
lds
es
cmp
lret
iret
inc
out
mov
repnz
or
dec
bound
out
pop
mov
outsl
jle
xchg
lret
pop
repz
cli
sar
mov
dec
sub
adc
scas
sub
inc
or
jmp
out
das
rorl
push
or
pop
xchg
clc
outsb
shlb
or
push
pop
push
add
rorb
add
jbe
lods
ss
push
fucompp
rcrb
divb
jae
imul
insb
rorb
lea
dec
or
inc
cmc
dec
lods
test
sub
ljmp
mov
rclb
push
inc
lahf
push
jbe
icebp
xorb
xchg
insb
sub
or
mov
loope
je
outsl
xor
popf
pop
out
out
xor
and
lock
adc
hlt
fcompl
fs
dec
jg
movsl
cmovnp
repnz
popl
xor
xlat
dec
xchg
jmp
pop
es
mov
xchg
sbbl
adc
ret
add
dec
dec
mov
call
ret
dec
int3
add
xchg
dec
xchg
xlat
lods
bound
fnstenv
popf
pop
inc
in
push
aam
jb
mov
nop
dec
outsl
dec
push
frstor
mov
add
and
lret
cmpl
ja
out
add
bound
orb
cmp
jb
xchg
lret
push
jle
cmp
pop
xchg
cld
iret
add
or
add
insb
outsb
das
fbld
add
out
inc
pushf
mov
pop
push
jns
inc
lret
jmp
divl
ljmp
dec
lds
xchg
loop
pop
and
cs
adc
mov
mov
or
push
xlat
or
test
dec
insb
ret
cmp
in
push
sahf
jo
outsl
fwait
into
jbe
mov
loop
lret
jae
cmpsl
test
test
or
mov
dec
mov
mov
cmp
or
out
loope
push
and
sbb
inc
out
adc
xor
ljmp
das
bound
scas
cmpsl
fwait
sub
pop
mov
cmp
and
mov
in
adc
pop
sbb
pop
xchg
xchg
aaa
xor
lods
push
push
xchg
shll
adc
or
sub
sarl
pop
sub
mov
fisubl
je
jo
inc
inc
into
mov
loope
inc
leave
xchg
inc
mov
rorl
aam
data16
and
sub
ds
xchg
ret
jmp
pop
mov
ljmp
movsl
jmp
fisttpl
mov
or
sub
push
in
lea
dec
xchg
xchg
addr16
pop
dec
daa
push
mov
sahf
lret
mov
sub
dec
popf
test
aam
mov
or
add
sti
mov
push
test
mov
ja
xchg
jle
aad
mov
push
stos
jle
aaa
xor
dec
xor
inc
mov
les
repz
inc
mov
loope
jle
clc
nop
lods
pop
repz
xor
xlat
sub
sbb
fs
shr
out
ja
cmp
popa
lock
mov
dec
mov
mov
sub
pushf
imul
cmp
inc
pop
addb
or
cltd
mov
scas
push
in
pop
pop
or
pop
xor
mov
adc
fsubrp
into
add
je
inc
mov
stos
cli
add
jmp
test
clc
pop
movsl
push
outsb
xor
lret
movsl
int
sti
lds
lret
jmp
ss
mov
jl
stc
sub
jb
hlt
push
add
or
xchg
xchg
call
filds
pusha
rolb
jge
dec
or
cmp
or
push
jp
pop
sbb
in
lock
sub
rcrl
pop
mov
xor
inc
mov
insl
push
cld
idivl
addb
fidivrs
stos
sub
and
fwait
sbb
xor
or
cmpl
jg
add
or
notb
fucomi
fsubrl
pop
adc
xor
rolb
int3
inc
es
loope
fucomip
lods
iret
add
pop
dec
mov
jge
jecxz
rclb
xchg
fisubs
push
outsb
fyl2x
fimuls
popf
jae
mov
push
cs
loopne
push
mov
call
lret
xchg
sbb
or
inc
imul
fsubrs
push
outsb
xor
and
lds
mov
pushf
or
fidivl
out
into
aam
jnp
sti
rclb
mov
movsb
lds
pop
pop
ds
xor
or
ljmp
test
pop
nop
into
gs
sub
sub
test
lods
xchg
ret
and
xchg
jo
adc
mov
inc
cs
rcrb
cld
repz
cmp
cmp
add
outsl
test
jne
dec
add
mov
and
mov
or
pop
jge
mov
pop
pop
xor
mov
ss
add
mov
cmp
inc
xchg
repnz
or
jae
push
in
and
imul
mov
movsl
aas
mov
jmp
scas
idivb
or
js
pop
pop
addl
fcmovne
rcll
cmp
outsl
mov
mov
ja
aaa
dec
xor
mov
jecxz
je
sbbb
cmpsb
adc
pop
jp
cltd
mov
jmp
push
xor
aaa
mov
cli
mov
or
cs
ret
sar
jnp
push
sub
and
add
lea
es
cmp
lcall
adc
mov
sbb
push
add
inc
es
and
sub
nop
je,pn
clc
clc
cmpb
pop
sub
cs
mov
leave
and
lock
repnz
add
lret
mov
pusha
and
stos
add
call
outsb
test
pop
fwait
mov
imul
adc
add
cmp
outsb
jmp
andb
cmp
ret
scas
mov
fsubr
fidivrs
dec
or
insb
imul
adc
shr
arpl
mov
add
test
mov
cld
fsubrl
add
push
and
dec
jns
outsb
adc
sbb
das
inc
and
xor
pop
pop
je
sbb
mov
aaa
add
int3
cli
add
mov
hlt
mov
or
ds
das
sbb
ss
or
xor
iret
sbb
push
pop
out
jecxz
mov
das
jno
fidivs
mov
and
jp
stos
pop
dec
inc
or
jno
adc
cmp
mov
xchg
test
roll
stc
or
cmpsl
loop
ljmp
dec
shr
mov
lcall
ret
pop
xchg
sbb
xlat
in
pop
loopne
iret
fdivp
mov
popa
xchg
aas
adc
cmovs
daa
inc
cwtl
shll
xchg
nop
jge
xchg
mov
popf
lods
sub
xor
or
hlt
mov
test
mov
imul
jno
cmp
adc
scas
fs
in
and
jl
add
dec
outsb
xlat
mov
pop
and
xchg
fwait
xor
mov
loopne
fistl
stos
jns
jae
sti
xchg
andb
subb
ret
sbb
xorb
outsl
popf
add
test
orb
cmp
dec
movsb
lods
test
pop
shl
movsl
jl
iret
adcb
fwait
pop
jmp
paddd
movl
xchg
push
or
pop
xchg
gs
arpl
movsl
xor
pop
jge
pusha
push
test
dec
inc
xchg
cltd
popf
out
and
outsb
cwtl
sbb
inc
mov
cwtl
mov
pusha
leave
sbb
mov
mov
js
fwait
imul
jnp
mov
mov
mov
imulb
mov
sarl
cmpsl
cmp
add
lods
cmp
push
jmp
mov
add
inc
cli
inc
xor
cmp
pop
pop
jo
adc
inc
push
addr16
mov
xor
or
inc
add
out
xchg
or
shlb
roll
inc
mov
jns
jp
popf
xchg
popf
sbb
in
testl
lret
jp
pop
lods
sub
xchg
cmc
call
in
pop
xchg
rcl
aas
push
mov
mov
clc
xor
jae
jmp
jno
pop
orl
sub
mov
ljmp
nop
je
movsb
popf
sub
inc
pop
in
jbe
pop
pop
mov
shrb
pop
jno
jmp
stos
push
in
aad
mov
dec
bound
xchg
out
sub
cmc
arpl
ds
dec
xchg
fstl
gs
sub
test
sarl
aad
sub
lea
jno
add
adc
push
test
pop
dec
sbb
push
xor
insb
jns
push
loopne
scas
decb
xlat
jmp
lahf
jle
movsl
les
or
rcrb
subl
xchg
mov
cmpsl
into
sbb
pop
or
loope
inc
xchg
ja
in
push
and
bound
stos
and
xchg
mov
testl
and
into
inc
jg
aad
pop
add
sarb
call
loopne
jg
cwtl
pushf
push
loopne
test
inc
push
sbb
mov
sub
jmp
les
xor
or
call
sti
jl
cli
jno
sub
movsb
mov
cmp
jnp
shl
adc
sub
clc
cli
call
aas
push
adc
in
loope
cwtl
jbe
sbb
inc
nopl
cmp
shrl
arpl
jb
shlb
popa
ja
ds
mov
lods
add
jl
jp
and
cmp
dec
xor
push
push
lahf
push
lcall
das
mov
mov
cmpsl
push
xor
loop
mov
dec
testb
jo
lret
mov
lea
push
out
dec
bound
fsubs
into
push
mov
mov
cmp
in
or
push
mov
dec
jnp
lret
daa
xchg
mov
and
fwait
sub
or
inc
pop
incb
inc
dec
cli
jnp
cmpsl
lahf
lock
addr16
loope
push
bound
gs
mov
mov
xchg
test
roll
mov
jle
pop
add
add
scas
sti
and
ret
push
add
mov
lcall
or
push
jne
addb
cmp
hlt
or
sbb
mov
out
cmc
cmp
add
and
mov
inc
push
sti
jle
nop
sub
cmp
in
mov
aas
or
sti
int
out
in
clts
fcoms
dec
and
data16
xor
pusha
xlat
ret
xchg
lret
jae
out
pop
pop
lret
fadd
add
sbb
ljmp
stc
xchg
into
loop
sub
push
loop
hlt
adc
cmp
imul
gs
orl
xchg
dec
imull
adc
rcrb
aaa
push
jns
mov
push
pop
xor
faddl
xchg
cmpb
inc
push
nopl
xchg
cmpsl
mov
mov
fadds
insl
push
mov
mov
ficompl
pop
and
jge
lret
mov
clc
or
inc
mov
shl
les
clc
xchg
dec
sysret
jge
cwtl
stc
mov
and
pop
in
pop
jno
jecxz,pn
sbb
xor
xchg
jecxz
push
in
stos
stc
enter
popa
jbe
xchg
pop
loopne
lock
inc
sbb
mov
add
loop
xchg
mov
jbe
xchg
out
cmp
mov
aas
inc
pop
sar
outsb
out
cmpsb
lods
in
xchg
dec
jo
jns
scas
mov
js
pop
cli
push
cmc
scas
mov
jge
daa
int
mov
jg
outsb
add
fwait
rcr
and
fwait
lods
sub
mov
es
mov
cld
push
mov
jecxz
idivb
in
lcall
nop
int3
sub
test
sbbl
and
test
adc
out
fmull
int
push
jmp
std
rcrb
dec
jae
sbb
mov
cmpsb
cmc
add
ja
sub
fldl
test
mov
int3
xchg
imul
add
rcr
addr16
xlat
jmp
out
xor
push
sub
lcall
sarb
out
xchg
mov
fldenv
cli
imul
fsubp
movsl
daa
movsl
test
or
mov
mov
jecxz
popa
sub
adc
mov
out
aad
lds
lret
dec
push
push
sub
lods
mov
cmp
aad
push
sub
xor
and
fs
and
in
inc
jg
or
cli
jp
cmpsl
sub
sbb
pusha
sub
xor
inc
sbbb
cld
or
mov
outsl
ss
pop
or
divb
mov
mov
xchg
push
sub
jne
sarl
adc
mov
pop
xchg
dec
dec
sbb
or
mov
pop
int
out
nop
jnp
jno
scas
sbb
dec
sub
cmc
mov
xlat
mov
pop
add
mov
out
sahf
insl
mov
fs
lahf
out
push
cmp
pushf
push
cmp
or
je
push
inc
call
pushl
jno
pop
test
mov
mov
or
push
or
leave
inc
jmp
jmp
mov
push
movsb
je
insl
add
xlat
outsl
or
lods
sar
mov
inc
pushf
xchg
das
subb
fstsw
sbb
cmp
andl
ljmp
mov
popa
push
mov
aad
out
dec
sub
sbb
test
jl
or
mov
mov
fsubs
push
mov
adc
fincstp
push
pop
dec
movsb
stos
xchg
data16
in
dec
sub
leave
push
xchg
push
sahf
cs
sub
jne
add
cltd
mov
daa
sbb
cmpsb
pop
sub
or
inc
notb
pushl
sub
popf
jnp
in
js
aas
push
xchg
addl
shrl
push
add
cmp
or
es
mov
adc
mov
enter
mov
and
mov
inc
leave
lds
cmp
aas
push
push
jmp
adc
insb
mov
mov
fistpll
in
testl
mov
push
jp
inc
ss
insb
pop
adc
out
xchg
decl
loope
jg
lods
xchg
popa
mov
rcrb
outsl
adc
rcrb
imulb
mov
fadd
push
cmp
push
pusha
arpl
rcrb
or
aaa
lods
imul
push
dec
in
mov
pop
lods
inc
xlat
aam
and
sbb
sub
movsb
adc
sbbl
or
pop
lcall
add
xchg
lods
mov
sahf
cmpsl
add
nop
cmp
int
xchg
repz
pop
ret
popa
inc
repnz
xchg
cmpsb
fistps
inc
repnz
sbb
cmpsb
inc
pop
les
popa
jle
outsl
push
aas
ds
js
xor
push
push
int
lcall
jo
sbb
fwait
sbb
push
adc
push
imul
daa
fisttpll
add
mov
sysenter
out
add
adc
cli
jl
scas
cmc
adc
pop
orps
cmpsl
imul
add
ret
pop
xchg
cwtl
aam
sbb
jmp
in
add
out
cmpsb
fistpl
push
xor
mov
dec
aas
adc
in
subb
rcrb
inc
insb
lods
xchg
dec
sub
sub
in
in
fisubl
jge
xchg
sub
sahf
lret
call
xchg
outsl
and
arpl
lods
mov
imul
cmp
cmp
jae
outsl
add
sub
or
ds
inc
mov
ds
inc
insl
xor
out
testl
push
jle
ja
orb
jae
add
xor
stos
daa
cmpsl
add
xchg
cmp
jp
fwait
add
dec
add
mov
and
pop
xor
and
xchg
enter
mov
rclb
jmp
aas
movsb
cmpsl
out
aam
dec
ljmp
jae
mul
mov
add
mov
jne
js
add
pop
push
and
les
adc
dec
sub
and
fwait
testb
jae
mov
es
movl
xlat
add
fwait
call
mov
sub
sbb
shrl
jl
push
leave
ss
jecxz
fs
das
sahf
dec
xchg
xchg
mov
or
jbe
push
insl
rcll
mov
pop
or
dec
incb
xor
pushf
cli
jae
xor
call
int
push
adc
adc
cmpsb
sahf
in
adc
mov
into
rcrl
push
xchg
hlt
xchg
mov
push
mov
pop
and
data16
push
ja
dec
iret
cwtl
loopw
dec
xchg
das
cmpsb
and
or
mov
inc
and
mov
addl
je
and
adcl
fidivrs
adc
clc
lea
mov
xor
arpl
add
repnz
pop
ror
cmpsb
inc
xchg
adc
mov
sub
xchg
fdivl
jnp
xor
xchg
add
push
jl
cmc
test
mov
jb
sub
xchg
repnz
or
inc
mov
aaa
mov
test
jns
xchg
mov
loopne
cs
fisttpl
pop
mov
or
insl
fsts
notb
mov
rcll
or
lret
test
loope
test
push
je
ret
dec
lret
out
sub
xchg
push
imul
mov
nop
sbbb
mov
jno
dec
hlt
pop
dec
mov
rcrb
adc
jge
popa
out
push
insb
nop
mov
lds
mov
mov
sbb
call
arpl
clc
add
inc
rcl
jnp
dec
icebp
inc
dec
minps
mov
scas
jno
jmp
jg
push
in
cwtl
lock
pop
mov
mull
adc
rolb
cmc
in
aaa
jmp
mov
sbb
xchg
inc
jg
cmp
mov
add
out
xchg
and
add
dec
test
ret
rcr
test
js
mov
push
stc
mov
mov
xchg
mov
fstpl
filds
sbb
shrl
ss
dec
fwait
add
jg
pop
and
cmpsb
das
pop
cltd
out
jp
jno
mov
arpl
mov
pop
push
add
push
popa
inc
cmpl
in
jo
js
lret
rorl
mov
jmp
sub
cld
dec
lahf
mov
scas
icebp
jo
cmc
mov
syscall
imul
pop
sbb
xchg
loope
subl
insb
test
dec
gs
xor
dec
cltd
mov
mov
and
add
add
mov
int
sbb
mov
sbb
inc
lock
sub
ret
jp
xchg
lock
mov
push
cmp
ljmp
and
mov
pop
rcrb
mov
js
test
jg
jno
push
lret
mov
xchg
pusha
in
js
pop
pop
dec
lds
ret
mov
hlt
sahf
adc
sub
icebp
or
scas
std
test
cwtl
sbb
dec
mov
mov
je
mov
fwait
mov
adc
sbb
jae
push
repnz
xor
mov
jne
sbbb
sbb
or
dec
xchg
xlat
fimuls
push
inc
test
dec
in
arpl
out
sbb
mov
mov
in
add
sbb
sbb
pop
pop
mov
push
pop
adc
add
aaa
cmpsl
or
idivl
imulb
test
dec
mov
xchg
xor
pushl
lea
std
sub
and
in
adc
mov
imul
int3
js
adc
pusha
hlt
jbe
mov
out
xchg
push
lock
subb
rolb
mov
dec
adc
mov
inc
jae
xor
dec
lods
xchg
and
push
shr
mov
and
cmpsl
addr16
call
in
in
sbb
sub
pop
je
in
dec
sub
sub
ret
movsl
add
enter
mov
sbb
jge
loope
xchg
inc
sub
clc
and
sbb
or
dec
repz
xchg
xchg
jg
dec
xor
pushw
and
bound
outsl
shrb
nop
clc
add
lock
scas
int3
pop
cwtl
jge
insl
std
mov
in
orl
mov
mov
dec
fwait
stc
inc
add
jg
adc
fbstp
xor
mov
xchg
cmc
test
pusha
stos
jg
push
loopne
cs
movsl
lock
fistpll
ret
lock
loopne
lret
xchg
cmp
inc
dec
cmp
shr
and
jbe
pop
outsl
sbb
cmp
adc
cmpb
adc
mov
pop
sbb
dec
push
mov
daa
push
std
cld
cmp
jecxz
subb
lret
dec
ret
cmp
clc
push
out
push
mov
addr16
movsl
fcmovu
nop
jno
ret
adc
cmp
fistl
sbb
pusha
jbe
jno
add
xor
inc
cli
push
jns
mov
mov
call
mov
mov
les
negl
jae
pop
pusha
add
cmp
jp
ret
js
dec
insl
scas
jno
ss
push
xor
lcall
cmp
in
subb
rcrb
jo
hlt
jecxz
fwait
xorl
xor
loope
aam
gs
fdivs
cmp
mov
rorb
sti
or
orl
xchg
icebp
mov
mov
sbb
mov
inc
push
sbb
stc
testl
cmc
repz
outsl
push
and
fisubl
inc
jmp
mov
and
call
iret
add
jg
sub
sub
mov
in
xor
xor
pop
sbb
popf
iret
call
add
out
std
xchg
push
adc
mov
jmp
adc
hlt
xchg
aad
pop
cmpsl
pop
out
sbb
leave
movsb
mov
jnp
loop
cmp
inc
or
pop
repnz
inc
loopne
xlat
xchg
hlt
in
mov
inc
fdivrp
jmp
mov
cmp
mov
les
dec
cmp
add
adcb
mov
outsb
fsubl
inc
mov
js
aad
cmpl
fidivl
mov
sub
pop
lret
cmp
sbb
test
dec
mov
gs
push
addr16
out
cmp
mov
iret
aad
ljmp
ljmp
pop
pop
xor
push
vcvttps2dq
xor
rcll
mov
pop
mov
js
out
aas
int3
adc
loope
dec
shlb
or
add
aam
push
sub
lock
xor
or
sub
mov
jnp
mov
pop
shl
sbb
and
mov
pop
push
aad
pop
sbb
adc
jo
stos
jbe
cs
arpl
push
scas
mov
sub
add
lcall
fdivr
movsb
mov
hlt
std
lock
sbb
mov
aam
adc
cmpsl
sti
aam
ss
xor
jp
ficoml
ljmp
popf
xor
stos
inc
scas
ljmp
inc
imul
test
stos
sahf
lock
adc
aas
lret
sub
inc
inc
mov
mov
arpl
cmp
pop
adc
in
inc
cmp
and
repnz
inc
aas
int
sub
fs
cmp
sbb
daa
rcr
in
sbb
push
push
stc
cmp
imul
xor
bndstx
lret
bound
xor
mov
loopne
mov
jns
dec
jecxz
in
dec
jl
adc
arpl
jns
pop
in
push
sub
rcr
inc
gs
enter
addr16
lahf
std
sbb
sbb
cmp
enter
adc
fldcw
cli
mov
jle
enter
inc
lods
inc
outsl
mov
mov
mull
sub
fwait
jecxz
push
cmpsl
cwtl
inc
inc
adc
push
ret
and
xchg
mov
adc
jno
insb
mov
push
mov
cmc
jbe
adc
in
mov
add
cli
loop
aad
lret
stos
or
inc
cmpb
sub
jge
xchg
mov
jbe
mov
xor
jecxz
sub
xor
psrlq
sbb
push
cli
lret
inc
inc
mov
test
cmp
test
testl
cmp
popf
roll
add
repz
sub
adcl
pop
jno
add
sarb
aaa
cmp
push
xlat
and
sti
lock
hlt
loopne
mov
cli
fcomps
and
iret
push
xchg
mov
sub
call
mov
mov
repz
mov
sbb
xchg
push
inc
shlb
leave
repz
mov
in
movsb
push
iret
gs
push
push
pop
ror
sti
mov
mov
movsb
aam
pop
push
int3
vmread
leave
mov
sbb
add
ss
in
add
and
xchg
add
jecxz
cmp
arpl
cs
fs
xor
pop
push
insb
imul
sbb
enter
mov
ss
ds
stos
aas
test
aam
xchg
cld
pop
in
add
fidivl
into
insb
repz
ss
nop
enter
and
jmp
mov
push
dec
scas
ret
mov
in
push
xchg
lods
les
pop
mov
das
jl
je
pushl
dec
stos
and
sbb
pop
rclb
aam
jns
push
aas
sbb
jbe
xor
cmpsb
pop
add
testb
loopne
loopne
in
in
std
cmp
mov
sub
inc
jae
sbb
dec
in
inc
or
push
repz
jg
and
lahf
add
in
inc
aad
push
mov
jo
sbb
dec
or
in
cmp
repz
add
movsl
add
sbb
mov
jp
in
inc
and
fildll
pop
sbb
fcomip
mov
sub
cmc
mov
jns
and
stos
xchg
popf
ljmp
repnz
cwtl
jbe
or
lds
fwait
or
cmp
mov
stos
rcrb
or
push
xchg
jnp
shlb
xchg
push
pop
or
sub
ljmp
lret
out
sub
and
shl
xor
repnz
popa
pop
rcrb
or
or
mov
nop
pop
push
mov
push
les
cltd
adc
push
out
mov
push
push
fwait
out
test
je
lret
jg
pop
add
fsubs
jns
pop
adc
clc
mov
movsb
push
mov
jp
jge
jns
and
inc
adc
shlb
pop
leave
push
push
adc
mov
ret
ror
add
pop
movsl
pop
in
cmp
mov
sub
add
subb
into
add
int3
jb
mov
cmpsb
dec
addb
cmpsb
dec
jp
loope
movl
stc
push
or
dec
and
xchg
fcompl
cmc
pop
loopne
outsb
outsl
add
or
adc
dec
fs
aas
cmp
pop
push
sbb
addr16
icebp
pop
xor
xor
scas
cmp
lahf
push
imul
dec
pop
add
inc
sub
and
dec
pop
inc
push
push
aad
mov
sub
add
out
mov
insl
adc
cld
mov
mov
out
inc
xchg
xor
mov
mov
or
add
fmull
lock
loopne
jns
outsl
xchg
sub
int3
mov
mov
and
scas
movsl
sbb
xor
jl
cmp
pop
or
leave
or
add
or
movsl
je
push
xlat
xor
loopne
sub
mov
lock
jle
lret
jne
xchg
dec
mov
adc
mov
out
mov
arpl
cwtl
rorb
scas
and
jmp
dec
cmp
cmpsl
test
push
jl
loop
flds
sbbl
sub
dec
mov
loope
mov
cmp
or
cmp
push
je
push
xchg
add
roll
pop
arpl
sbb
stos
leave
in
dec
cli
inc
fisubl
lret
les
sti
in
mov
push
mov
jo
repnz
mov
add
pop
mov
jbe
jl
mov
push
xchg
imul
popa
sahf
sub
add
mov
jmp
or
and
stos
fs
bound
mov
mov
rorb
sub
popa
stos
repz
mov
adc
popf
jl
sbb
pop
push
fistpl
loope
xchg
test
mov
fstps
pop
xchg
dec
testb
test
roll
int
add
aad
pop
dec
cmpsl
push
lret
or
inc
dec
dec
rcll
lret
addr16
jl
leave
aas
mov
sub
popa
ss
jb
pushf
les
inc
pop
sub
sub
and
sbb
xor
fldt
xchg
or
jo
sarb
xor
clc
rol
nop
cmp
mov
int
jp
push
inc
jp
mov
rclb
fwait
jge
push
xor
lea
popa
inc
dec
shlb
pop
inc
fs
mov
not
cmpb
xchg
dec
in
or
mov
leave
add
cld
jecxz
and
mov
xchg
push
lods
aaa
inc
cli
xor
cmpsl
outsl
sbbl
push
fcomps
adc
int3
shll
rcrl
test
aad
dec
or
xor
iret
outsl
cmc
out
pcmpgtb
sub
out
sahf
sbb
fsubrs
pusha
enter
fiadds
js
cmp
cmpsb
popa
in
add
pop
push
mov
jle
stos
jns
stc
test
add
add
stos
test
pop
adc
sbbl
scas
ljmp
sbb
add
push
xor
xor
inc
iret
ss
xor
mov
mov
leave
inc
stos
stos
lea
push
js
std
sahf
xor
idivb
out
in
dec
out
lods
dec
push
push
jnp
mov
inc
cmc
js
jo
lcall
jae
mov
mov
mov
ljmp
sbb
sub
outsl
loop
or
add
adcb
xchg
iret
fs
aam
in
rolb
fsubs
lods
es
xchg
jnp
and
mov
mov
les
fisubrl
mov
mov
push
cmp
inc
aas
xor
flds
push
pop
adcb
add
sub
orl
mov
mov
in
negl
ds
in
or
or
add
add
xor
jp
jecxz
dec
lods
dec
js
aad
add
jae
je
push
jne
jp
lahf
aam
test
inc
push
or
dec
mov
pop
in
aas
pushl
scas
push
inc
stos
mov
add
sti
out
pop
jb
add
dec
xchg
mov
imul
testl
dec
cmp
test
xchg
add
dec
imull
adcb
sub
repnz
scas
mov
loope
cwtl
xor
pushl
jnp
pop
add
sahf
pop
and
xchg
je
testb
add
subb
aad
dec
inc
loope
add
xor
xor
mov
inc
xchg
dec
mov
sbb
insb
xchg
in
adc
lcall
ret
cmp
pop
movsl
sbb
ljmp
out
and
stc
cmp
shlb
aam
jnp
ret
aaa
test
jp
xchg
sub
sbb
dec
add
aad
or
push
and
aad
sub
adc
rclb
clc
ljmp
shlb
shl
cli
jbe
pop
insb
xor
cmp
lahf
inc
adc
out
mov
xchg
xor
ret
mov
sbbb
aaa
imul
das
and
push
push
xchg
add
cmp
cld
in
add
test
icebp
sbb
andl
scas
es
dec
fisubl
jbe
mov
es
js
dec
adc
mov
aas
fs
jne
jmp
mov
xor
push
lret
adc
add
pop
icebp
sbb
movsb
mov
add
mov
fcom
cli
dec
cmpsl
fwait
mov
jb
nop
sti
pop
push
cmc
and
xchg
xchg
clc
out
jae
stos
mov
inc
mov
lahf
pop
rcrl
lret
ds
adc
inc
push
sub
fmuls
nop
out
dec
sahf
in
cmp
aas
adc
pushf
jle
outsl
adc
fmull
dec
lcall
jecxz
pop
mov
or
dec
lret
xchg
jnp
pusha
jb
xchg
inc
and
ljmp
inc
repz
jp
fdivrl
fwait
adc
iret
imul
xchg
jb
or
xchg
in
pop
jns
push
mov
xor
mov
fiadds
sub
jge
mov
notb
lcall
inc
cmp
dec
xchg
sbb
sub
lret
mov
int3
stos
iret
sti
push
mov
mov
cwtl
jne
arpl
mov
lods
outsl
jns
dec
icebp
mov
mov
jmp
aad
repnz
mov
lcall
popa
lods
icebp
xor
mov
and
lock
jo
call
mov
push
push
test
or
into
or
neg
out
shrl
mov
addr16
clc
cmp
adc
add
aad
dec
fmull
imul
idivb
mov
rolb
popf
or
cld
test
jae
mov
mov
fnstsw
xor
shrb
push
adc
sbb
sub
inc
enter
pusha
popa
stc
sar
cmc
push
pop
adc
orl
popa
sub
mov
mov
xor
negb
jo
loopne
xchg
xor
iret
inc
xor
out
in
mov
arpl
roll
mov
push
push
out
test
sbb
nop
fildl
dec
int
scas
cmc
fidivrl
loop
cmp
inc
sbb
mov
dec
arpl
rcrl
fcmove
sbb
or
mov
xchg
pop
mov
incl
fnstenv
movsl
push
cld
mov
push
inc
pop
push
in
jp
lret
mov
pop
testb
lods
data16
mov
mov
mov
jmp
pop
ja
cmp
xor
dec
push
hlt
xor
js
in
lock
xor
and
add
mov
sub
jo
push
fcmovbe
insb
popf
rcrl
sahf
push
mov
and
in
in
xchg
popf
imul
repnz
or
sbb
roll
and
or
je
insl
aas
dec
ljmp
or
test
iret
add
int
ficomps
out
hlt
push
mov
push
jb
sbb
sub
stos
push
dec
fwait
loope
xchg
xchg
out
xchg
xchg
inc
and
inc
daa
aam
inc
or
and
mov
in
fsubl
adcl
add
lock
or
dec
sbb
pop
fsin
inc
fwait
lcall
xchg
xor
push
ja
repz
mov
push
mov
lea
xchg
ljmp
cmp
pop
mov
sbbl
inc
add
aam
aam
movsb
jo
pushf
push
mov
cmp
pop
mov
rclb
cmp
jnp
adc
and
test
leave
cwtl
pop
sbb
add
sbb
and
xor
pop
in
cmp
or
js
out
dec
out
sbb
xor
or
or
inc
jp
cmp
and
ja
cmp
lret
scas
or
push
pusha
inc
fwait
add
dec
mov
mov
push
pop
push
xchg
adc
push
dec
mov
popa
xor
loop
xor
loopne
xor
int3
adc
adc
out
aaa
inc
and
mov
out
cld
pushf
inc
push
pop
mov
pusha
jg
dec
xchg
pop
jle
shr
test
subl
cmp
xchg
test
jmp
sub
adc
repnz
sarl
rcll
fwait
and
xor
jecxz
and
addb
xor
inc
adc
subl
xchg
ljmp
and
out
in
mov
or
je
mov
pop
push
inc
mov
ds
xchg
rclb
dec
lds
sbb
sti
jno
xor
outsb
in
imul
sarl
hlt
in
mov
add
lea
and
mov
popa
mov
fucom
cmpsb
xchg
clc
push
mov
gs
jbe
add
mov
mul
incl
mov
andnps
push
dec
add
mov
test
movsb
ljmp
jg
lahf
mov
sbb
mov
fidivrs
pop
jns
and
loope
icebp
lock
out
movsb
xor
sub
ljmp
cmp
sbb
sti
adc
cs
xchg
mov
add
movsl
les
int
fbld
cmp
sarb
or
int
lahf
or
cmp
hlt
mov
pop
sbb
stos
test
aam
lcall
negb
sahf
push
and
into
mov
outsl
mov
sbb
mov
add
fistpl
pop
insl
mov
xor
push
jp
or
fwait
addr16
cmpsl
js
mov
sub
and
push
fwait
outsb
mov
sbb
add
sbb
cmp
test
mull
or
ficoms
jg
xchg
xchg
mov
in
cmp
xchg
jb
pop
and
jno
stos
pop
jge
and
jge
leave
inc
fbld
push
pusha
push
sbb
adc
mov
add
xor
push
jo
jmp
jnp
mov
cmp
out
movsb
sbb
push
pop
sbb
lock
xlat
jnp
pop
and
imul
or
push
pop
jl
cltd
inc
mov
test
xchg
ret
popa
fdivrp
or
outsb
mov
adc
fistpll
xchg
mov
sbb
mov
add
rcll
xchg
gs
lods
add
push
xchg
jg
fcmovu
xor
jp
inc
std
test
adc
and
and
dec
popf
jecxz
inc
ret
pop
into
in
jle
inc
stos
push
dec
notb
xor
or
jno
push
sbbl
push
vmulps
aaa
push
fistps
sub
inc
sti
mov
enter
ljmp
or
mov
ss
and
jmp
daa
je
inc
add
push
lods
adc
or
xor
in
inc
orb
add
scas
adc
sbb
push
sahf
push
push
rcrb
lahf
scas
mov
ss
movsb
sbb
jge
xor
out
push
aam
sbb
js
testl
mov
test
stos
push
adc
xchg
lods
mov
push
adcb
fcomip
pop
add
mov
enter
xor
inc
scas
outsl
aaa
jne
insb
pusha
mov
stc
push
xchg
lret
lock
mov
mov
xchg
or
adc
cmc
cmp
push
mov
mov
stc
add
mov
xchg
xor
ja
out
xchg
add
loop
mov
es
test
int3
sub
sub
gs
data16
insb
neg
jno
outsb
daa
dec
in
es
adc
popf
sub
sbb
enter
and
sub
ds
ljmp
cld
jecxz
mov
sbb
js
push
pop
lds
popa
pop
and
idivl
or
fwait
or
hlt
push
mov
sub
jge
add
jbe
pop
xchg
mov
dec
add
adc
pop
push
inc
sbb
push
mulb
jb
int
cltd
adc
sbb
fistl
mov
mov
or
lahf
mov
pop
xor
fidivl
rcrb
or
inc
jo
stc
std
xchg
push
jo
pop
mov
shr
jnp
ror
inc
repz
push
fcompl
jmp
push
xor
inc
sub
dec
imul
xchg
out
add
ja
ret
mov
in
popf
lcall
fimull
fisubs
pop
lcall
in
mov
add
xchg
add
push
add
and
outsb
cltd
sub
xorb
outsl
imul
push
cmp
xor
mov
mov
rcrl
jae
push
cmp
push
lahf
into
jns
imul
sbb
push
loopne
imul
jo
push
movsb
sbb
imul
jbe
in
or
out
push
mov
pop
fwait
divb
cmp
adc
pop
pop
mov
stos
enter
and
push
cmp
neg
jle
inc
enter
xchg
mov
jl
sbb
mov
lea
adc
pop
mulb
andb
fidivs
push
cmc
sbb
cmpsb
fwait
enter
hlt
xor
mov
sub
xchg
or
lret
mov
call
loope
sbb
lret
push
and
add
jmp
pop
xlat
movb
jge
push
cltd
mov
mov
rcl
or
push
rorl
mov
adc
sub
rcrl
mov
stos
or
jge
movb
add
dec
cmp
mov
push
inc
daa
jle
out
and
inc
sub
xchg
enter
jmp
leave
pop
adc
sbb
or
pop
adc
cmp
rcll
push
fstps
cld
out
subl
pop
jge
lret
mov
insl
push
cmc
jge
cmp
push
cmc
inc
xor
movsl
rorb
fs
addr16
cmp
add
stos
popa
jle
ret
shll
mov
jmp
ficoms
in
andl
mov
mov
mov
mov
insb
dec
mov
mov
paddw
mov
paddw
ljmp
stc
int
pop
jns
cmpb
movsl
push
push
leave
mov
out
imul
jl
fisttps
cmpsb
mov
cmp
or
cmp
rol
xchg
adc
mov
loope
nop
dec
cmp
or
mov
popf
mov
sbb
ss
inc
bound
xor
popfw
sti
mov
loopne
fdivs
or
xor
lret
icebp
or
add
sub
inc
lahf
pop
fidivs
add
insl
pop
hlt
lea
ret
ljmp
imul
mov
mov
mov
sbb
or
xchg
psubsw
test
mov
imul
xchg
mov
jmp
inc
addb
and
ds
push
bound
sub
insb
pop
test
popf
in
pop
mov
cmp
stc
test
aas
jp
mov
adc
loopne
andl
or
sbb
enter
jae
mov
movsl
dec
out
jp
pop
or
adc
int3
or
sbb
jb
movsb
es
lods
movzbl
ja
lcall
cwtl
mov
movsl
scas
adc
das
pop
pop
or
test
lcall
or
xor
rorl
pop
mov
jp
push
add
stc
andl
je
or
iret
cmp
scas
dec
push
mov
cmp
sbb
push
or
xchg
out
mov
mov
xor
imul
ljmp
jo
hlt
inc
inc
cli
adc
int3
test
popf
daa
outsl
pop
repnz
push
and
cmc
andl
cmp
inc
mov
scas
push
xor
aas
inc
push
iret
and
xchg
sub
notb
cmp
jge
xchg
jecxz
clc
rcl
xor
scas
jmp
sub
sub
push
adc
push
jno
xchg
lea
xchg
xchg
fsubl
popf
mov
push
adc
movsl
or
out
inc
push
ficomps
push
mov
inc
adcb
xor
arpl
lret
pop
stos
and
push
dec
mov
mov
or
mov
test
lds
mov
cmp
scas
stos
sarb
sbb
cmp
pop
push
test
add
cmc
cmp
je
popa
std
inc
mov
jl
sbbl
mov
cmpsl
pop
mov
push
testl
or
add
add
jle
pop
inc
loop
arpl
int3
xchg
sub
shlb
jp
fisubs
dec
std
stc
pop
aam
xorl
jo
out
dec
pop
inc
push
mov
insl
xchg
test
add
shrb
rcrb
gs
loop
std
lcall
and
mov
gs
mov
fmull
sub
add
shlb
lds
cltd
jne
add
imul
sub
scas
adc
gs
cmpsl
and
add
insl
cli
cmp
sti
sub
push
iret
pop
out
mov
pushf
pop
push
fcmovu
adc
add
out
xchg
add
loop
xchg
add
xor
mov
dec
fiadds
loop
cli
mov
mov
ret
push
pop
dec
popa
stos
out
jl
dec
push
cltd
pop
xchg
lret
cld
jl
cmp
and
mov
or
subb
jl
stc
push
mov
aad
in
pop
push
in
mov
jmp
pop
mov
inc
out
sbb
out
popf
cmpsb
mov
je
int3
cltd
pusha
out
pushf
cmp
xchg
mov
mov
cltd
pop
push
mov
movsb
dec
cli
cmp
fidivrl
enter
test
jmp
xor
in
inc
mov
rorl
and
test
dec
nop
add
imul
xchg
mov
mov
pop
ret
ss
jns
movsb
or
pop
push
div
subb
add
add
rcll
imul
pop
fadds
ds
test
pop
dec
and
inc
jp
jge
xchg
sbb
dec
popf
stc
cmpsl
adc
ss
es
and
pop
pop
test
and
inc
iret
lock
or
xchg
pop
mov
je
push
pop
test
fldt
cs
and
cmp
mov
or
stos
movsb
pop
inc
nop
fstpl
incb
int
cmp
loope
mov
cmp
pop
pusha
lret
mov
add
push
cmp
loop
adc
sub
cmp
ret
aaa
or
xchg
jg
inc
out
jbe
jbe
ja
stc
push
adc
rclb
cmp
pop
adc
out
rclb
mov
fmull
les
je
lods
pop
nop
mov
inc
pop
xor
daa
lahf
xor
shll
sarl
dec
add
cltd
xor
pop
add
add
inc
insb
fnsave
cmp
loopne
cmc
cwtl
out
push
jnp
inc
repnz
testb
sbb
and
pop
mov
scas
pop
xchg
std
lds
in
fiaddl
adc
insl
dec
cmpxchg
leave
sbbb
or
push
push
inc
and
pop
dec
pop
int3
aam
fdiv
loop
sub
out
mov
xchg
push
fs
push
pop
int3
popf
add
clc
push
shlb
mov
mov
dec
addr16
imulb
hlt
and
cmp
in
xchg
push
sahf
stos
mov
mov
aaa
clc
inc
add
das
sub
stos
call
and
xor
adc
lahf
and
inc
lods
jp
xor
sbb
jl
arpl
fldl
enter
loop
mov
out
test
out
adc
add
leave
cld
jne
repz
mov
cmp
cmp
xchg
pop
cmp
pop
add
pop
or
into
aam
subl
fbld
stos
jmp
xorl
push
push
add
sub
push
inc
subb
pop
ret
lods
add
pop
test
aas
fucom
add
mov
mov
push
jbe
and
nop
lds
sahf
mov
into
and
mov
xor
out
push
dec
loope
or
incl
scas
jge
inc
cwtl
inc
arpl
dec
push
movsb
in
cmp
mov
xor
xor
adc
imul
aad
or
adc
es
push
popf
lret
dec
rclb
jb
out
dec
sbb
xchg
xor
stos
add
jmp
lea
adc
jmp
xchg
inc
or
pusha
clc
sar
ljmp
jl
aaa
mov
pusha
and
pop
jbe
pop
fdivrp
stc
sbbl
repnz
testb
inc
rclb
lock
or
sbbl
clc
xor
or
jne
leave
dec
fiadds
sub
aas
xchg
das
neg
scas
ja
stos
sub
pop
loope
mov
xorb
in
in
inc
xchg
aad
lods
xchg
stos
ss
shll
in
fidivs
mov
ss
loopne
nop
and
pop
in
fst
mov
pop
imul
icebp
sbb
pop
xlat
jge
ds
mov
ss
xchg
sbb
dec
cmpsb
fbld
stos
cwtl
mov
mov
iret
stos
loop
stc
movaps
lcall
aas
jmp
fdivrp
call
rorl
popa
push
push
mov
lods
pop
mov
test
sahf
out
mov
mov
lds
pop
dec
into
jne
leave
xor
outsl
xchg
testl
shl
iret
out
lods
shl
dec
and
int
dec
ss
mov
inc
jg
jne
ss
or
sbb
jae
xchg
sbb
test
in
mov
push
mov
mov
inc
mov
jno
inc
cmc
orb
lock
add
loopne
pop
mov
mov
shll
std
push
xor
aas
cld
push
adc
xor
jge
add
cmc
sub
inc
sahf
int
lds
imulb
jmp
je
vsqrtss
popa
pop
inc
mov
pop
enter
mov
inc
xor
aad
stos
jecxz
aam
sub
mov
in
push
pop
icebp
push
insb
sti
inc
jae
mov
fildll
mov
sete
pop
in
push
push
cmp
jno
jg
mov
inc
pusha
xchg
push
mov
sbb
nop
sbb
lcall
sahf
aam
cltd
jo
inc
clc
andb
and
and
aad
aaa
jg
in
push
movsb
into
jno
inc
daa
sti
movsl
in
pop
stos
scas
add
xchg
push
jnp
xchg
inc
iret
rcrb
fwait
iret
int
pop
xor
push
mov
push
cs
cmp
sti
fwait
jecxz
sub
jbe
frstor
cwtl
push
push
sti
cltd
jo
or
xor
addr16
sub
popf
aas
jnp
imul
ficoms
cmp
dec
xchg
subl
fldl
hlt
dec
jle
icebp
mov
and
roll
les
mov
fmull
into
in
dec
or
and
sub
loopne
dec
stos
repnz
mov
xor
ss
aam
or
or
xlat
shl
leave
inc
lret
dec
pop
bound
sbb
dec
scas
imul
repz
adc
mov
ret
mov
jmp
pop
jne
ret
ds
xor
inc
xchg
add
jmp
pop
call
sbb
movsl
stc
int
movsl
inc
es
stos
inc
jo
mov
imul
push
xchg
mov
out
into
or
outsl
outsl
cmp
movsb
sub
andb
xlat
jp
pop
fisttps
dec
in
push
push
mov
popa
mov
pop
sub
ljmp
push
mov
xchg
xchg
pop
fsts
inc
jle
xchg
jb
sub
outsl
inc
dec
push
mov
dec
dec
push
jns
shrb
inc
iret
divb
int
hlt
mov
mov
cld
mov
or
cli
ljmp
iret
aam
xchg
test
pop
dec
andb
scas
outsl
push
jo
adc
xlat
fdiv
or
add
call
mov
into
leave
shll
lahf
xor
pop
and
mov
jmp
mov
les
pop
or
scas
ja
or
repz
imul
dec
add
and
out
lcall
filds
aas
scas
loope
xor
imull
pop
cwtl
das
pop
lahf
out
nop
inc
sub
xchg
push
pop
jnp
cmc
xchg
test
addl
and
push
data16
jp
addl
testl
xor
jecxz
or
into
aad
mov
jne
insb
out
das
pop
or
mov
pop
movsb
enter
mov
int
sub
lods
stc
and
mov
lret
inc
iret
clc
fs
mov
and
int
mov
cli
fldenv
stc
mov
sti
rcrl
cli
mov
addr16
push
out
insl
aas
mov
ljmp
adc
pop
shrb
icebp
out
cltd
jb
inc
adc
or
and
pop
sti
aaa
out
mov
sub
dec
mov
mov
xor
leave
shll
push
test
jae
in
ret
rorb
sub
inc
cmp
and
jnp
dec
xchg
rclb
mov
fsubr
sbb
cmp
or
lea
mov
cltd
mov
pop
adc
loopne,pt
fistpll
divl
stos
in
lea
cs
xchg
mov
aaa
cmp
xor
cmp
pop
ljmp
or
aaa
xchg
ds
jns,pn
sub
popa
xor
mov
or
push
pushf
and
daa
out
call
jmp
mov
xchg
loop
sbb
xchg
adc
push
jmp
aam
mov
jl
mov
xor
jmp
mov
add
xor
ret
fbstp
enter
cmp
add
vpcmpeqd
cmpsb
dec
push
mov
into
sbb
jb
ret
sbb
jle
inc
cs
cmp
jo
and
sahf
pop
pop
das
cmp
mov
inc
adc
sub
xchg
xchg
es
mov
jns
xlat
push
xor
pop
adcb
lea
daa
in
dec
add
shl
movsl
lret
fwait
or
cmpb
scas
sqrtps
adc
or
and
scas
ja
cli
pop
pop
lods
push
test
lret
aad
div
mov
mov
popf
pop
dec
scas
and
mov
aam
mov
xchg
jmp
jmp
shll
add
in
xchg
in
loopne
cmp
inc
or
push
cs
loopne
repz
inc
ljmp
in
incl
add
mov
or
in
test
pop
cmpsb
mov
addb
out
cwtl
sahf
ja
bound
pop
mov
fimull
popf
subl
insl
xchg
mov
call
sub
negl
je
jae
push
leave
dec
scas
ret
inc
loope
daa
adc
fdivs
fdivp
xchg
mov
mov
cmc
jmp
add
sar
out
lods
pop
enter
fnstcw
jne
adc
faddl
popf
ret
js
sub
sub
fxam
jbe
movsl
cld
lea
sahf
cs
xchg
or
incl
add
pop
cmp
or
mov
inc
dec
jne
xchg
adc
jle
mov
inc
adc
nop
inc
dec
dec
mov
aas
jmp
inc
jge
lcall
jnp
cs
cmp
jns
adc
push
lcall
mov
mov
movsl
add
push
test
xchg
mov
lret
stos
xchg
and
or
rcll
lds
jmp
inc
pop
xor
rol
cmp
pop
sbbl
mov
add
shll
mov
arpl
jno
cmp
mov
stos
add
aaa
inc
mov
in
push
xor
jg
jne
arpl
mov
or
jge
mov
jo
ljmp
mov
aaa
mov
sbb
ja
in
cmpsb
icebp
rorb
mov
shr
out
popa
imulb
xchg
es
aaa
mov
call
push
leave
aad
scas
pop
ss
jns
mov
push
pop
xor
pop
sub
outsb
mov
clc
pop
lahf
adc
ja
xchg
push
scas
mov
stos
repz
ret
lret
fiadds
add
xor
xchg
popf
pop
sti
mov
sbb
scas
inc
sbb
cmp
sub
push
mov
or
dec
inc
push
adcl
sahf
add
mov
cmpsl
icebp
mulb
push
decb
and
and
arpl
pop
push
or
popf
dec
pushl
es
mov
add
pop
mov
push
in
inc
int
mov
add
fnsave
ljmp
frstor
ds
adc
pop
fnstsw
jl
dec
xor
mov
sub
outsl
lds
adc
adc
and
inc
pop
dec
ret
mov
push
xlat
lea
mov
repnz
pop
ror
bound
popa
loope
dec
xchg
aad
push
lock
and
adcb
aam
imul
pop
arpl
aaa
call
call
and
jae
es
dec
lock
cmp
pop
cmp
xor
loope
mov
inc
dec
in
lea
xchg
pop
lahf
rcr
ret
pop
cmp
inc
and
enter
mov
inc
push
xchg
pop
or
rclb
push
sub
push
lds
mov
arpl
cmp
mov
jle
pop
repnz
inc
daa
lcall
data16
stos
add
mov
cwtl
out
stc
xor
mov
lea
pop
mov
adc
int3
push
hlt
xlat
dec
popa
test
xor
xor
scas
iret
pusha
loope
test
cltd
inc
push
and
roll
or
pop
add
lret
jno
sbb
push
jno
cmpb
xor
std
imul
and
out
mov
mov
popl
inc
add
in
jle
test
shlb
pop
mov
xor
js
jge
loopne
mov
xor
pop
jecxz
aaa
daa
mov
inc
fstps
jle
ss
insl
cwtl
push
mov
xor
mov
decb
inc
or
aad
clc
std
jmp
mov
in
in
dec
sbb
and
xchg
fisttpl
inc
ret
hlt
push
clc
mov
iret
loope
add
loop
or
mov
es
sub
jno
mov
les
push
fdivs
sbb
out
fndisi(8087
aaa
xchg
push
loop
xchg
mov
icebp
inc
aaa
xor
xlat
xchg
enter
jmp
mov
jnp
mov
imul
or
iret
mov
pusha
addb
popa
pop
bound
pop
enter
cs
imul
pop
mov
in
cmpsb
mov
push
mov
and
sub
cmp
jae
inc
jne
jae
xchg
dec
icebp
mov
push
xchg
shlb
aad
pop
or
jb
pop
lock
fldt
insb
data16
scas
popa
or
arpl
jb
adc
in
mov
mov
pusha
stc
mov
stc
xchg
adcb
fmuls
jns
mov
add
adc
mov
and
icebp
repnz
lea
mov
addr16
pop
pop
add
push
jl
into
mov
jmp
popf
dec
cmc
pushf
xlat
pop
sub
mov
dec
psubusw
or
push
stos
sbb
xchg
testl
add
mov
ficomps
add
inc
xor
aad
adc
cmpsl
dec
clc
mov
push
pop
inc
aaa
xchg
adc
mov
mov
pop
test
sbb
std
xchg
mov
shlb
stc
aaa
xlat
xor
jp
sub
testl
xor
xchg
mov
sub
pop
xor
cmp
adcb
xorl
aas
std
add
cwtl
jl
mov
xchg
pop
sahf
cmp
dec
add
inc
mov
and
mov
fidivl
jge
push
loope
jo
push
pop
ljmp
sarb
jp
ret
or
push
je
sub
xchg
fwait
mov
in
addl
fnstenv
repz
ss
mov
sbb
cmp
mov
push
jne
icebp
ret
sbb
xchg
pop
loopne
fsubp
pop
xchg
mov
gs
arpl
or
addb
imul
sbb
jg
sub
xorb
mov
or
jg
lods
mov
pop
imul
test
cmc
dec
xlat
outsl
inc
dec
lahf
pop
push
jne
fcoml
mov
add
add
push
sbb
xor
daa
mov
pop
fldt
sub
cmp
outsb
xor
insl
fwait
insb
sbbl
lods
seta
hlt
push
loop
into
inc
sbb
cli
jo
adc
adc
nop
pop
jae
jbe
iret
cmp
mov
mov
js
movsb
push
xchg
inc
adc
push
iret
dec
add
arpl
ret
pop
adc
cld
jp
add
push
pushf
lods
mov
loopne
mov
jle
sub
subb
fwait
xor
xchg
and
ret
cmpsl
and
mov
gs
push
rcrl
jnp
and
xor
stos
xor
loop
je
ja
loope
jle
dec
fcmovu
xchg
add
aas
lods
fcoml
int3
sbb
dec
mov
int3
sub
jnp
shlb
mov
sahf
in
and
push
ret
addr16
hlt
jmp
nop
cwtl
pushf
ljmp
mov
sarb
arpl
mov
mov
add
sbb
repz
fisttpl
push
xor
cmp
fnstcw
rcll
lea
cmpb
adc
xor
mov
mov
and
lahf
pop
popa
inc
mov
loopne
lahf
mov
jb
and
push
pop
cli
les
adc
sub
pop
andb
adc
dec
jmp
sub
shl
shll
xor
adc
cld
mov
and
int3
lret
push
clc
fistpl
sbb
add
test
ret
jbe
inc
outsb
aam
ret
adc
outsb
cmp
and
cmp
or
dec
iret
out
jp
data16
mov
cwtl
mov
pop
scas
sub
leave
lahf
test
add
mov
jne
ljmp
aas
shrb
imul
sbb
adc
mov
jb
adc
fcompl
cmpsb
lret
xor
push
sbb
dec
lds
xor
clc
jb
jo
cmp
and
lock
decb
mov
out
addb
cmp
iret
ret
push
test
cmpsl
inc
pushf
mov
jae
insl
mov
fcomi
mov
repz
add
push
add
jno
jmp
repz
mov
std
jns
jnp
lret
jb
std
fidivrs
dec
sub
pop
mov
nop
cs
int
jb
add
popa
cmpsl
mov
ficoml
scas
lock
mov
cmpb
inc
leave
or
push
pop
mov
leave
adc
aam
aas
rclb
xlat
xor
mov
push
inc
subl
js
mov
pop
loope
inc
daa
xor
mov
idivl
mov
stc
mov
jle
mov
xor
push
dec
pop
mov
add
sbb
fisubl
fcmovnbe
stos
test
pop
popf
jge
pop
aas
addl
xor
movsb
push
mov
mov
movsl
add
or
push
movsl
cmp
jbe
fwait
loop
inc
jl
push
or
xchg
mov
or
cmp
xor
add
adc
jb
add
pop
adc
or
fstp
arpl
in
int
inc
xlat
mov
xor
insb
into
in
ja
mov
bound
into
cld
mov
add
mov
jne
cmpsb
outsb
test
add
push
and
sti
xlat
aaa
cmpl
lock
je
shll
push
push
mov
dec
pop
add
lcall
lret
int3
repnz
arpl
cwtl
dec
not
stc
insb
nop
arpl
ficoml
test
dec
hlt
mov
aaa
push
loop
cld
cmp
cli
not
cs
pop
scas
sbb
dec
jl
jle
sub
rcrb
mov
ss
insb
aaa
in
sbbb
push
xchg
test
imulb
ja
and
xchg
push
popf
lock
xchg
mov
or
out
xor
mov
cmpxchg
xor
fmull
inc
mov
adc
in
push
or
cmp
pop
es
jns
fdivr
pop
pop
cwtl
adc
pop
int3
cli
push
mov
in
lahf
push
clc
jl
mov
mov
shll
inc
add
jge
mov
pop
lods
scas
pop
imul
xchg
leave
int3
and
mov
popf
inc
xor
and
lahf
xchg
ds
push
scas
dec
adc
push
jl
aas
add
outsl
dec
out
push
mov
xor
xchg
push
push
fldt
inc
adcl
cmp
sbb
sub
mov
daa
cmp
sub
xlat
dec
inc
and
bound
cltd
mov
dec
aad
push
xchg
aam
in
cmc
addr16
mov
aam
fcmovu
mov
icebp
lea
enter
xor
dec
jbe,pt
mov
xchg
out
cwtl
jp
clc
sbb
int3
ret
dec
jecxz
repz
jmp
cwtl
mov
push
push
push
or
cmp
negb
popa
jmp
or
ret
xor
adc
addr16
sbb
xchg
xchg
xchg
mov
pop
mov
out
mov
cmp
fcoms
test
add
inc
cltd
cmpsb
push
clc
andl
sub
mull
or
sbb
push
push
push
and
jg
inc
or
sub
push
test
push
clc
inc
pop
pop
jne
stos
push
lret
clc
xlat
gs
inc
cmp
push
push
dec
pop
cltd
cmp
sub
push
outsl
xchg
imulb
mov
fcmovne
out
ret
mov
adc
lret
pop
mov
jmp
xor
and
cli
arpl
test
mov
inc
les
cmc
movsl
mov
pop
adc
scas
mov
sbb
lds
xchg
and
adc
adc
rol
xchg
ret
mov
pop
adc
pop
sarl
adc
mov
push
mov
inc
movsb
fcompl
add
push
lret
jnp
pop
les
test
inc
leave
hlt
out
ret
scas
ret
roll
inc
or
push
adc
sahf
cli
cli
out
jge
push
or
add
mov
int
xor
mov
xchg
iret
loop
xor
outsb
aad
in
test
mov
jg
push
lahf
loopne
stos
xor
js
movsl
aam
adc
inc
roll
aaa
mul
dec
pop
sbb
xor
xor
pushw
bound
repnz
in
inc
test
test
inc
bound
nop
xor
sub
stc
and
ret
pop
in
mov
shrb
cmc
or
jo
push
dec
imul
or
xorl
sub
movsb
inc
xor
and
inc
mov
jecxz
cmpsl
xchg
ja
sbb
pop
hlt
mov
int
jmp
inc
and
dec
es
push
mov
cwtl
mov
lea
hlt
call
repz
outsl
dec
push
ret
sub
add
sub
sub
jg
mov
stos
cmc
test
jns
lret
xor
cmp
filds
xchg
imul
bt
popa
xchg
jp
shrb
push
mov
repz
es
mov
pop
aam
mov
cwtl
pop
js
mov
call
sub
pushf
mov
or
mov
xor
inc
cwtl
fildl
push
fisubrs
inc
and
mov
dec
jo
and
or
arpl
daa
mov
ret
int
lcall
jb
jns
outsb
mov
mov
repnz
outsl
pop
or
mov
repz
pop
cs
mov
add
sbb
jnp,pn
cmp
or
pop
mov
aaa
mov
add
sbb
inc
enter
adc
test
dec
dec
push
pusha
repz
push
pop
jle
jae
adc
pop
fistpll
popf
inc
cli
and
test
xorb
push
cwtl
mov
add
in
ret
lods
xor
add
jnp
cmp
ficoml
push
and
pop
xchg
add
mov
cmpsb
cltd
xor
jb
and
aas
dec
icebp
jl
mov
sbb
cmpsb
pushf
sub
pusha
xor
mov
lcall
insb
cmp
sbb
adc
es
popf
xchg
gs
fstp
mov
xor
sub
pusha
cmp
stc
push
ror
sbb
cld
mov
sub
and
mov
mov
test
adc
repnz
jae
dec
lahf
mov
nop
fistpll
sbb
and
xchg
arpl
mul
jecxz
inc
mov
jge
xchg
popa
dec
jno
faddl
jl,pn
mov
pop
pop
jecxz
cwtl
or
cltd
daa
adc
inc
mov
xchg
adc
adc
dec
inc
cwtl
mov
pop
inc
cmp
xchg
imul
out
movsl
movsb
xchg
sub
std
jge
mov
lods
dec
dec
imul
jp
inc
push
fwait
push
aad
sarb
sar
imul
push
imul
mov
stos
incl
in
ss
or
pusha
popa
mov
jmp
sub
fidivs
popf
sub
lcall
dec
mov
cmpsl
mov
mov
xchg
shlb
sbb
bound
outsl
cmpsb
jg
aas
lret
out
cmp
cmp
jnp
rolb
jae
subb
sbb
add
pusha
imul
xor
push
js
pop
mov
out
or
in
dec
xchg
sarb
lock
inc
sub
lahf
cltd
mov
pop
scas
pop
push
pop
sub
pop
add
push
int3
addr16
dec
pop
mov
push
aam
dec
lods
inc
mov
xchg
ja
push
loop
sarb
test
cmpsl
mov
xchg
cmp
call
rep
jb
xlat
mov
mov
pop
addr16
and
fsts
dec
pop
stos
ja
enter
pop
xchg
cwtl
xchg
jnp
jo
fwait
mov
mov
movsl
in
out
les
ljmp
idivl
pop
mov
or
xchg
loope
jae
pusha
add
and
lcall
daa
push
loopne
loope
mov
repnz
aaa
cld
daa
shl
inc
scas
jp
outsb
push
shrb
loope
shrl
mov
sbb
adc
push
pop
subl
shrl
mov
jp
outsl
mov
in
sbb
mov
inc
insb
sub
in
dec
bound
fistpll
icebp
lahf
adc
adc
ffree
inc
mov
out
push
or
sbb
push
stos
fisubs
daa
pop
sub
int
and
add
flds
dec
mov
fimuls
jbe
jno
mov
push
xor
ret
dec
jbe
push
add
aam
cmp
jno
je
test
lock
mov
push
mov
push
cmp
test
mov
mov
push
enter
insb
mov
ljmp
and
repz
pop
sahf
lret
add
rorl
mov
addl
sub
lds
clc
lock
mov
int
testb
sti
sub
addb
xorb
test
repnz
repz
pop
lods
lahf
lods
arpl
out
mov
or
xadd
js
push
and
rol
mov
cli
fs
test
stos
mov
add
and
inc
fs
xor
lods
lret
and
xchg
and
jbe
out
sub
mov
lods
sbb
jns
aaa
fnsave
mov
push
sbb
and
je
add
in
sti
test
fiadds
adc
pop
cmp
call
push
jp
or
and
pop
ret
cmpsl
rorb
jno
clc
lods
stos
cmp
fldenv
repnz
sbb
nop
cmc
lds
arpl
push
mov
lahf
mov
mov
out
lahf
cwtl
jg
jnp
push
rcll
fld
push
popl
mov
mov
xchg
pop
jnp
icebp
test
lahf
ljmp
scas
xor
mov
and
jnp
xchg
mov
add
xchg
jb
pusha
js
dec
lods
lods
sti
in
aas
sbb
pop
sbb
fsubl
and
jne
and
push
xor
lea
mov
ficoms
push
dec
stos
repnz
test
pushf
and
sbb
jnp
ja
pop
inc
inc
fists
pop
test
test
stos
and
arpl
jecxz
mov
les
or
std
cs
mov
push
xor
lea
inc
xor
jp
nop
and
xor
inc
dec
push
cmp
and
jp
xorb
jne
scas
cwtl
jae
cmp
pop
xchg
rorb
mov
pushl
ja
std
nop
imul
push
cmp
pop
mov
adc
adc
mov
fidivs
pop
mov
or
es
lods
or
les
jmp
cwtl
nop
pop
xchg
repz
shll
cmp
push
mov
mov
inc
sbb
push
and
sub
test
pusha
stos
or
xor
aam
xor
std
xchg
xor
jecxz
jbe
sbb
popf
rorl
mov
mov
mov
cmp
popa
in
push
int
xchg
and
and
fistpl
andb
jnp
repz
into
mov
stos
aas
rclb
pop
adc
add
pop
mov
and
pop
cmp
push
push
data16
lahf
sub
jp
loop
test
cltd
nop
test
add
pop
in
cs
inc
add
fiaddl
and
adc
cmpsb
arpl
or
ljmp
es
sub
gs
cmc
jb
lcall
inc
out
hlt
or
push
call
xorl
or
mov
mov
push
popf
inc
add
in
or
jns
inc
inc
popf
xchg
pop
mov
inc
jecxz
outsb
or
cmp
jg
jg
jb
fdivrl
fidivs
sub
cltd
pop
add
jns
movsb
mov
jno
sub
fsubrs
sbb
jae
fildl
ss
mov
adc
mov
mov
andl
add
jns
pop
ljmp
lock
mov
adc
dec
outsl
jo
call
sub
pop
mov
sti
add
loope
jge
dec
xor
add
xchg
adc
sub
add
movsl
lahf
mov
xor
nop
xor
jbe
pop
mov
scas
aas
push
sub
mov
mov
inc
icebp
mov
in
sbb
imul
imul
fiadds
pop
data16
ds
loop
adc
mov
out
xor
push
out
stos
inc
dec
addl
aaa
mov
out
lcall
adc
dec
lock
cmpsl
mov
mov
jbe
add
xchg
push
jbe
push
xor
push
pop
lock
mov
nop
mov
dec
imul
jne
ret
jmp
jno
cmc
int
rcr
sahf
dec
lods
in
or
dec
mov
test
inc
cltd
cmpsl
outsb
mov
cs
jmp
test
daa
xor
test
lcall
addr16
sahf
fistps
push
jae
lods
insb
cwtl
rcll
or
and
jnp
push
push
iret
mov
iret
lock
cmp
xorl
test
cmp
pop
push
jno
sbb
ja
lods
push
adc
adc
push
out
shrl
push
jp
fwait
push
jb
psubw
jb
popf
add
imul
in
and
jnp
push
mov
and
jno
aaa
inc
adc
push
iret
jmp
xchg
dec
sbb
jmp
xchg
pop
nop
push
mov
dec
pop
jns
xchg
imulb
xchg
xchg
pop
pop
and
xchg
or
cs
test
cmc
xchg
pop
sbb
pop
lcall
stos
push
lds
mov
sbb
cmp
adc
push
out
inc
inc
cltd
in
xchg
cmp
dec
add
or
lods
jnp
mov
xchg
cltd
aas
lcall
jo
lea
std
xor
out
sub
aaa
mov
in
lods
pusha
fnstenv
adc
movl
in
mov
bound
mov
test
push
mov
imull
add
das
xlat
pop
jp
outsl
call
jecxz
adc
cmp
test
push
adc
clc
ss
and
jbe
lret
movsb
xchg
js
into
inc
jle
push
pop
outsl
std
mov
popa
inc
dec
xchg
jno
push
mov
inc
loop
push
lds
sbb
add
pop
mov
icebp
repnz
iret
pop
and
scas
mov
pop
cmp
flds
add
add
stos
stos
mov
adc
adc
dec
out
mov
lret
adc
jp
mov
mov
dec
jmp
addr16
mov
sub
or
lock
test
lcall
push
divl
xor
inc
adc
jno
in
nop
popf
jge
out
mov
xchg
jecxz
cmpb
pusha
jge
out
dec
rclb
dec
pop
xchg
mov
shrl
dec
imul
jne
call
lods
dec
push
mov
fldt
sub
or
inc
testb
nop
sub
clc
mov
fnstsw
lods
cwtl
cmp
aad
ljmp
xchg
int3
dec
pop
rcrb
push
scas
inc
jae
sbb
addr16
mov
xor
xchg
clc
fmull
and
cmp
ret
mulb
inc
es
pop
jae
mov
loop
sub
push
jns
xchg
cmpsb
cli
sub
mov
add
aaa
adc
mov
xchg
dec
aad
dec
nop
add
jp
fwait
aaa
addr16
jecxz
push
fiaddl
dec
jae
pop
test
mov
sbb
movsl
sub
mov
mov
mov
inc
test
fdiv
mov
decl
xchg
aam
out
adc
dec
faddp
xchg
sub
test
in
xchg
jcxz
add
push
int3
push
sarl
hlt
data16
bts
xor
in
lea
or
clc
xchg
aad
not
pop
lods
fwait
das
push
cld
fs
fldt
bound
imul
femms
ds
push
and
inc
test
inc
add
jbe
mov
push
xchg
mov
and
add
add
add
jo
xlat
sahf
inc
sbb
or
cwtl
mov
rcrl
and
cmpl
lret
mov
add
and
or
mov
pushf
mov
dec
mov
shrb
and
aas
test
sbb
sub
sub
lret
inc
sbb
sbb
sbb
mov
sub
mov
int3
stos
adc
packuswb
xor
sti
sbb
xchg
ss
jge
dec
ret
jns
sti
lock
stos
adc
insl
mov
shll
dec
cmp
mov
push
mov
pop
cmpsb
or
pop
cmp
mov
mov
pop
dec
xor
jmp
mov
jmp
inc
lret
push
jnp
adc
repnz
ret
add
mov
out
push
and
in
xor
pop
adc
adc
inc
sub
lods
popf
mov
or
mov
cwtl
std
cmp
mov
jns
out
dec
add
mov
push
rcll
gs
sub
fisttps
es
lock
mov
dec
cmpb
out
and
push
and
popf
int
nop
dec
stos
loop
std
fs
cmp
movsl
stos
inc
push
loop
test
add
rorl
pusha
js
jmp
ret
jecxz
lret
sbb
into
jbe
mov
fwait
adc
leave
sti
popf
stc
push
clc
out
stc
mov
add
mov
aam
lods
negl
pop
fistps
push
iret
scas
xchg
mov
push
repz
daa
mov
ficoml
ficomps
lds
inc
mov
repnz
out
in
dec
xchg
jns
adc
dec
loopne
fs
stos
ja
adc
in
fsubrl
orl
stos
sub
lock
cmp
or
or
push
mov
or
rcrl
out
cld
fcomps
adc
subb
mov
jns
mov
pop
nop
dec
sbb
outsl
cmp
push
mov
pop
dec
pop
stc
fsubs
fcompl
adc
in
cmp
sbb
push
mov
mov
dec
pushf
adc
in
sbb
testb
not
fisttpl
fmul
cmp
out
cwtl
leave
je
sbb
cmpsl
xchg
jnp
inc
xchg
test
jns
mov
dec
push
xchg
lret
test
leave
adc
loope
push
jge
push
jb
mov
and
inc
xchg
iret
enter
pop
out
test
iret
sbbl
pop
pop
sub
and
ret
or
jl
scas
and
mov
popf
mov
cmp
mov
jo
sbb
inc
mov
es
aaa
clc
daa
xchg
sub
dec
push
xor
mov
mov
or
jle
nop
iret
xchg
mov
out
adc
in
add
push
iret
jle
sahf
cmp
mov
jns
mov
dec
call
adc
repz
jp
outsl
je
dec
jg
ficompl
dec
pop
push
mov
sbb
ljmp
lea
pusha
fisttps
xchg
movsb
sti
push
push
add
dec
scas
pop
cmc
add
mov
hlt
int
out
mov
pop
pop
sub
daa
cld
sub
sub
xor
imul
test
add
xor
mov
cmp
mov
pusha
push
sti
int
mov
push
pop
mov
icebp
adcl
mov
pop
in
test
mov
call
call
sti
or
stos
cmc
add
add
test
movsb
int
sbb
pop
nop
movsl
jp
and
mov
inc
mov
pop
xchg
test
lods
xchg
mov
les
dec
fists
sub
xor
push
and
or
xchg
mov
dec
xor
mov
pop
xchg
test
pushf
insl
cmp
stos
dec
imul
ret
jo
lea
inc
push
in
and
or
mov
and
cmc
or
cmp
cmp
push
push
jae
std
rorl
sub
fstps
lods
mov
repz
je
sbb
xor
xor
sub
mov
cmp
scas
push
fnsave
xchg
jo
fldenv
idivb
xchg
arpl
stos
fs
stc
lret
pop
mov
sub
data16
jmp
ret
sti
movsb
add
mov
and
jmp
fldl
loopne
mov
sub
mov
xor
insl
or
sbb
inc
pop
xorb
push
mov
inc
mov
leave
jae
ljmp
fidivs
mov
insl
add
frstor
and
lahf
imul
fdivl
cmp
out
dec
fcoms
shlb
cmp
and
mov
movd
add
stos
pop
jb
dec
mov
xchg
pop
imul
mov
aad
outsb
test
xor
xor
cli
or
imul
mov
int
pop
jg
call
ljmp
push
and
arpl
imul
sub
in
push
imul
inc
shlb
and
xchg
repnz
stc
add
enter
js
fidivl
mov
mov
jbe
arpl
lock
lods
repz
mov
ret
dec
inc
mov
mov
xor
cmp
adc
rol
repnz
pop
inc
adc
testb
sub
pusha
mov
jns
icebp
pop
addr16
sarb
sbb
jae
inc
pop
mov
mov
bound
and
cli
xchg
sbbl
add
add
mov
out
pop
fistpl
repnz
fs
cmp
jmp
xor
test
xchg
test
dec
sbb
stc
lahf
orb
je
std
js
add
pop
xchg
xchg
dec
pop
fisttpl
negl
test
test
mov
xor
xchg
xor
dec
push
mov
js
loope
inc
mov
iret
dec
pop
lock
pop
call
adc
jg
cmp
icebp
push
out
fyl2x
add
dec
hlt
out
pusha
dec
xchg
sbb
out
and
into
addr16
mov
bound
lret
insb
or
push
dec
add
mov
sbb
insb
add
sub
aad
pop
and
pusha
jo
pop
mov
leave
push
scas
repz
inc
cmpsl
fsubl
in
adc
popa
out
xchg
iret
cmp
in
js
add
outsb
loop
std
inc
in
jmp
add
subl
cmpsb
add
shlb
sbb
or
lret
testb
jmp
pop
sub
cmp
insl
insb
repnz
mov
daa
mov
sub
movsl
shr
rcll
add
scas
inc
mov
mov
xchg
dec
loopne
pop
sbb
mov
dec
add
push
lea
decl
push
mov
test
stos
cmp
lret
push
cwtl
in
mov
aaa
fs
and
sub
mov
iret
fldpi
stc
bnd
movsl
dec
adcb
adc
stc
mov
aas
out
cmpsb
mov
mov
cld
xor
out
push
mov
and
cmpsl
sbb
lret
add
adc
ja
inc
lods
mov
test
xchg
fnop
pop
inc
and
adc
daa
hlt
add
repnz
cld
add
push
pop
repz
mov
pop
rorl
in
ret
in
out
or
pop
imul
xchg
sti
insl
jno
mov
lcall
cld
inc
pop
cld
mov
aaa
xor
ss
cmc
ficompl
mov
sbb
cmpb
in
xchg
aas
cmp
or
add
cmpsb
call
test
push
enter
out
add
xor
sarb
xor
adc
shrb
sbb
xor
adc
push
cltd
mov
or
mov
mov
iret
inc
pop
out
sub
rcrb
adc
fistps
jb
sbb
push
lods
pop
mov
lret
mov
testb
mov
cmp
mov
out
pop
dec
jle
add
jg
jmp
jg
and
repz
scas
cmc
movsl
sub
or
lea
inc
pusha
loop
and
movb
cltd
ljmp
xchg
jmp
mov
adc
xchg
sbb
call
inc
decb
cmpl
pop
xchg
sbb
mov
mov
jecxz
fbld
fwait
repz
xor
sbb
mov
in
nop
and
jmp
test
les
and
andl
sub
mov
sub
sub
cmp
mov
iret
pop
orb
test
and
or
jp
dec
mov
or
or
ja
movsl
mov
ljmp
nop
je
mov
cmpsl
ror
lret
test
add
adc
xchg
std
outsb
xorl
adc
adc
popa
fbstp
jp
clc
and
pop
jb
inc
repz
mov
stos
das
or
fidivl
je
dec
nop
outsl
push
dec
stos
sbb
lds
mov
mov
inc
lret
sti
das
and
sbb
or
popf
adc
pop
pop
mov
icebp
pop
inc
test
or
xorl
mov
dec
mov
add
fucomip
xor
sahf
pushl
rorb
call
push
aad
push
test
push
add
inc
fistpll
xor
std
and
mov
sti
mov
ret
adc
fsubrs
shlb
aaa
in
lods
out
fnsave
mov
xchg
cmp
dec
shll
sbb
jb
ffreep
xchg
mov
test
xor
frstor
mov
mov
jecxz
mov
cmpsb
push
mov
outsl
hlt
or
pop
pop
repz
push
sbb
or
ret
outsl
clc
outsb
fiaddl
loopne
outsb
fstpt
add
hlt
add
dec
cmp
mov
mov
stc
cmpsl
cmp
jno
rolb
scas
repnz
xor
pushf
stos
std
jb
pop
pop
scas
out
and
cwtl
lahf
dec
adc
out
inc
xchg
jecxz
pop
mov
test
jmp
jnp
push
movsb
adc
out
jmp
stc
add
adc
call
cmpsb
dec
ljmp
ljmp
int3
mov
lock
mov
shrb
mov
and
jno
lret
aaa
aad
dec
or
add
pop
lcall
cli
imul
jns
in
aaa
lods
ret
xchg
enter
into
imul
sbb
in
fdivrp
mov
push
lods
jns
aas
fildll
outsb
mov
add
jns
loop
popf
mov
arpl
gs
adc
in
xor
js
mov
lcall
push
jecxz
lret
xchg
and
js
out
hlt
testl
outsb
push
xchg
roll
mov
imul
nop
xorb
add
cld
mov
push
jp
sbb
push
loopne
push
js
mov
lock
push
sahf
mov
jmp
or
xchg
xchg
pop
bound
inc
xchg
inc
or
and
out
arpl
stc
lds
lds
lret
imul
dec
mov
outsl
addr16
pop
loop
repz
repz
fnstcw
mov
sub
xchg
jge
mov
cmpsl
into
jne
pop
clc
sti
lods
mov
or
dec
lods
in
xor
add
adc
aaa
ffreep
int3
lahf
rclb
pop
jmp
xor
mov
fcmovnbe
xor
mov
inc
xor
popf
push
fdivr
or
cmp
push
mov
mov
xchg
fs
add
cmp
add
ljmp
mov
push
sub
mov
mov
mov
arpl
dec
cmp
cmp
cmpb
jg
mov
out
mov
cwtl
xor
mov
clc
cmpsl
jno
fdivrl
mov
movsb
loope
mov
cmp
push
mov
xchg
mov
imul
fstps
bound
push
adc
and
das
loopne
sbb
mov
popa
jae
xchg
adc
inc
stos
mov
cmc
xor
lret
mov
addl
ret
js
in
test
xor
cmp
mov
mov
xor
adc
mov
jg
lds
loope
push
fimull
mov
test
mov
add
xchg
mov
ret
jnp
adc
cmpsl
cmpsb
push
stos
pop
sbb
lock
inc
mov
sbb
fisubrs
adcb
push
test
out
mov
xor
jge
out
fildl
sub
mov
mov
sti
jns
adc
push
cltd
jmp
jge
dec
movsl
mov
push
push
push
cltd
xor
sbb
sbb
xlat
adc
jmp
jp,pt
pushf
aas
popa
adc
fwait
popa
arpl
outsb
sbb
adc
rcrl
or
inc
jg
or
jns
cwtl
xor
mov
adc
call
cltd
push
sub
xor
jg
add
and
bound
push
cmp
cmp
push
sarb
push
notb
stos
xchg
xor
add
shrb
into
mov
push
mov
test
pop
cmpsb
sbb
cmp
xchg
xor
mov
xor
mov
daa
ret
inc
sbb
sub
pop
sti
ffreep
xchg
push
sub
ret
arpl
rcll
stc
insl
cmpsl
in
xchg
xchg
or
dec
mov
out
decl
mov
jne
push
leave
shrb
ds
les
dec
dec
mov
aaa
jg
sbb
cmpsl
test
dec
lret
mov
or
int3
ret
jnp
pusha
bound
idivb
aam
lds
aaa
xorb
cltd
sbb
imul
lock
sbb
add
mov
clc
xor
sbbb
outsb
aad
or
pop
jnp
negb
adc
cwtl
stos
shl
dec
mov
cli
cli
iret
push
cmp
vcmpps
lret
inc
ret
scas
das
and
outsb
dec
cs
repnz
int3
jae
jecxz
rol
jge
xchg
inc
jle
nop
je
sub
lret
inc
mov
ret
repnz
mov
pop
addr16
jns
cmp
imul
mov
cmp
adc
sbb
mov
cmp
or
push
xchg
mov
aas
fcoms
push
xchg
sbb
cld
and
ds
xor
std
pop
stc
scas
xor
cltd
inc
in
sarb
mov
lock
inc
and
inc
push
jle
xor
popa
mov
inc
lret
mov
stc
jo
xchg
and
mov
or
lds
dec
mov
adcb
int3
clc
xchg
sub
add
rcr
jns
pushf
or
mov
mov
lea
adc
jl
daa
cltd
add
les
push
insl
jp
mov
xchg
add
dec
sub
push
das
aad
jne
jae
lock
repz
mov
pusha
jl
les
mov
out
jb
sub
sub
mov
pop
add
jp
sbb
mov
add
dec
cld
xor
adc
dec
xchg
dec
scas
push
imul
sub
outsl
iret
dec
sbb
jg
fwait
add
jle
das
xor
dec
scas
cltd
pusha
adc
subl
rcl
jne
cld
pop
std
sub
xlat
cmpsl
mov
mov
push
movsl
loope
lds
popa
out
push
jg
mov
mov
addr16
rcrl
dec
jmp
inc
xor
mov
test
cmp
lahf
inc
adc
jo
fidivrl
mov
test
in
fistpll
fstpt
repnz
mov
cmp
dec
cmp
sub
cmp
cmp
repz
mov
xlat
add
mov
imul
in
mov
mov
add
adc
insb
fistl
lods
ror
sbb
cmp
loope
lods
xor
cmp
add
xorl
imul
push
cmp
sub
jns
je
push
sub
js
ljmp
mov
idivb
xor
xchg
fucomp
cmp
xchg
cld
es
jo
mov
xchg
hlt
mov
in
ss
out
and
xor
mov
jecxz
cmc
dec
jp
lret
pop
jg
mov
pop
hlt
lds
xor
inc
aaa
negb
push
jge
adc
cmpsb
push
add
xor
js
pop
sub
cmp
push
ret
fld
jne
add
push
ja
movsb
stos
and
and
into
fcmovbe
mov
add
arpl
out
dec
jbe
jge
or
shll
hlt
jmp
dec
aaa
xlat
and
rclb
fadd
out
xor
loop
sbb
lcall
xlat
stc
inc
push
xchg
shl
lret
xchg
daa
adc
repnz
push
mov
cmp
cmc
insl
push
and
test
mov
push
mov
int
xchg
into
push
sub
jns
stos
arpl
sarl
and
iret
add
cli
mov
fwait
inc
mov
fsin
fcomps
pop
cmc
jbe
jno
or
das
push
xor
cli
cmpsb
into
pop
popa
dec
subb
xchg
aaa
jl
inc
imul
adc
aaa
popf
ret
dec
xor
loopne
jae
cmp
mov
pushf
or
sbb
mov
popf
or
adc
push
cmp
sub
jns
mov
inc
sbb
jno
pop
jl
sub
jns
test
cli
repnz
fcmovb
les
add
xchg
push
sbb
sub
imul
push
stos
bnd
les
icebp
cmp
dec
dec
mov
xor
insl
cmpsl
push
inc
adc
adc
je
sub
add
cmc
add
pop
hlt
mov
push
lcall
les
mov
repnz
sbb
outsb
mov
pop
mov
inc
cmpsl
cmp
cltd
adc
and
mov
movups
subb
pop
sub
xchg
jp
mov
push
pop
test
or
xchg
xchg
and
mov
xor
or
testl
sbb
pop
mov
and
rol
and
ficoml
pusha
sub
jl
mov
and
and
xlat
pop
ja
inc
sbb
sub
pop
addr16
push
and
out
jo
pop
dec
rcl
mov
mov
inc
out
shrb
pusha
cmp
pop
bound
pushf
xor
sub
xor
mov
add
lock
int
stos
outsl
into
clc
out
jo
std
lret
lret
ja
out
shlb
insb
call
jne
stc
popa
aad
loopne
sub
jns
ror
in
cmp
and
push
pop
sbb
pushf
add
xor
subl
cmp
push
inc
lock
mov
addr16
inc
jno,pn
push
mov
rorb
out
testl
xchg
fsubrp
vpcmpgtw
mov
pushl
fidivrs
pop
sub
fiadds
mov
adc
clc
dec
xorb
inc
shrb
fwait
inc
mov
push
adcl
adc
loope
insb
sub
sbb
enter
lea
scas
fwait
pop
jecxz
push
jo
pop
inc
fsubrs
jbe
out
cmpsb
shlb
fidivrs
fcmovu
pop
sub
push
sbb
sub
adc
jo
mov
mov
jns
cmpsl
mov
dec
clc
jo
mov
xor
fdivrl
or
sub
sub
ja
pop
pusha
pusha
add
mov
sub
loopne
mov
stos
or
mov
mov
stos
jp
pop
fcoms
jecxz
adc
inc
xchg
popa
or
push
orl
ret
or
xorb
mov
mulb
mov
aad
pop
ret
mov
mov
mov
lds
sub
std
inc
test
or
mov
jp
adc
shrb
repz
fs
in
adc
sub
test
cmpsb
in
or
bound
jo,pt
dec
xorb
aas
xchg
jp
imul
mov
cwtl
cmpl
cmpsl
add
mov
dec
cltd
int3
xchg
scas
add
shrb
cmc
fdivl
pushf
scas
and
mov
xor
xor
jo
mov
cmp
outsl
mov
mov
lcall
pop
and
cmp
inc
cltd
arpl
fbld
cmp
inc
cld
or
inc
lahf
add
pushf
lcall
out
xor
das
and
xchg
arpl
fimull
xor
aad
popa
outsl
dec
adc
pop
add
pusha
or
out
sub
cmp
cmp
leave
sub
fdivl
jmp
lock
in
xchg
mov
mov
mov
inc
pop
add
and
inc
mov
das
adc
je
push
sub
call
adc
mov
xlat
xor
dec
addl
in
push
jbe
sub
sbb
jmp
hlt
jb
cmpsl
decl
nop
cmp
sbb
mov
int3
sbb
pusha
shlb
add
repz
cmp
in
insl
inc
jbe
mov
hlt
mov
adc
sbb
bound
inc
xor
sbb
in
repz
cmpsb
scas
movsb
jl
push
jo
cltd
inc
enter
push
push
jnp
shl
insl
sbb
xor
inc
leave
mov
mov
adc
imul
test
add
inc
xor
fisubs
iret
mov
xchg
fs
addr16
mov
and
cmc
or
fbld
mov
inc
bound
mov
fcomp
sbb
das
adc
iret
cmc
sub
inc
xchg
sbb
mov
mov
adc
lret
cmp
mov
dec
dec
inc
lea
loopne
in
loopne
jecxz
xchg
dec
aaa
lds
mov
lods
out
jmp
push
lds
mov
add
mov
ficompl
lock
nop
jne
or
inc
jmp
adc
adc
mov
sbb
ljmp
xchg
pop
arpl
xorl
stos
fimull
test
ret
push
daa
xchg
ret
mov
in
outsl
jl
into
sti
outsl
ds
xchg
push
adc
lret
into
inc
xchg
cmp
mov
push
outsb
pop
or
shlb
insb
jb
scas
data16
pop
repz
imul
dec
popf
xchg
jnp
outsb
sub
sub
adc
sahf
pushl
mov
scas
lcall
fstpl
inc
ss
ret
mov
mov
cmp
aas
pop
fucom
jb
dec
jg
lods
scas
inc
and
notl
mov
test
pop
add
and
stos
or
and
mov
mov
lea
mov
das
xor
out
arpl
jbe
test
repz
sti
aad
adc
mov
ds
adc
clc
cwtl
xor
cmp
sar
mov
pop
sbb
mov
js
push
jno
push
xchg
add
addr16
arpl
lods
mov
fdivp
push
jle
popa
xchg
push
push
dec
xchg
push
pop
pop
lea
lods
adc
loop
xchg
notb
xorb
fcompl
sbb
jbe
push
xchg
addr16
jp
jecxz
push
xchg
mov
fucomi
or
cli
cltd
shrl
dec
jns
jl
js
rorl
int
stos
movsl
push
jg
mov
push
cmpsb
sbb
adc
je
ret
into
faddp
dec
mov
sbb
xor
mov
pop
jge
ret
loope
orb
rcrb
mov
jle
mov
xchg
inc
js
sub
inc
inc
cmp
out
xchg
xchg
or
add
ja
xor
int
bound
xchg
sbb
xchg
outsl
xchg
xor
push
jp
jg
mov
sub
or
push
insl
jmp
sub
dec
std
push
push
loopne
clc
fmuls
leave
cld
mov
pop
pop
add
lcall
ja
jle
in
sbb
or
faddl
loopne
in
pop
shl
push
xor
add
inc
xor
adc
xchg
out
and
mov
shr
cmp
cmp
lahf
aas
xchg
arpl
mov
icebp
sysexit
insb
cmp
adc
into
and
inc
mov
fdivl
dec
mov
std
mov
pop
ffreep
cmp
mov
movsl
scas
subl
cmpsb
xor
sti
aad
imul
fmull
cld
xor
adc
jns
lods
std
test
mov
sbb
outsl
xlat
sbb
xor
cmpl
lret
push
sub
and
mov
roll
or
ss
mov
in
movsl
lods
sti
arpl
jmp
xchg
fcompl
cmpsl
test
test
pop
aaa
insl
pop
cmpb
iret
pop
loopne
push
sub
ror
data16
sub
out
popa
pusha
mov
xchg
sbb
mov
pop
sub
cltd
push
mov
mov
mov
stc
aas
mov
int
sub
cmpsl
js
xor
ljmp
cli
aad
fistl
repz
call
pushf
lcall
dec
inc
xchg
push
sbb
cmpsb
add
mov
faddl
cli
out
dec
dec
cmpsb
movsb
cmp
or
jge
xor
push
adc
mov
hlt
fisubs
clc
shll
lods
xor
ret
loope
aas
sbb
or
sbb
lea
mov
jge
mov
iret
pusha
push
andb
xlat
and
rolb
pop
shlb
in
mov
aas
jae
adc
out
jnp
daa
lcall
or
pop
das
xchg
adc
cmpsl
in
popa
inc
inc
inc
and
dec
jp
sub
fsubrl
ss
dec
mov
lods
out
aad
ljmp
rcrl
nop
adc
push
pushf
loope
push
mov
sub
push
push
mov
cld
push
loopne
int3
lahf
push
jno
xor
repz
adc
fstps
jbe
xchg
loope
loopne
add
adc
aas
shll
cmp
pop
imul
out
daa
mov
rorl
xor
and
es
out
roll
es
mov
or
mov
mov
sbb
push
mov
je
add
es
lock
push
mov
cmpsl
loop
out
daa
dec
cmp
push
xor
push
in
test
popa
jle
push
rol
or
scas
mov
mov
xchg
out
mov
xor
cmpsb
cli
cltd
mov
mov
sarb
call
in
add
out
cmp
cmp
jb
inc
mov
xor
cmpsb
movsl
je
xchg
adcl
jmp
pop
mov
and
pop
hlt
push
enter
add
xor
push
jo
das
xchg
fwait
test
ja
mov
bound
pusha
mov
push
xchg
pop
push
xchg
iret
in
mov
xorb
add
lahf
in
xchg
mov
popf
push
call
aad
in
mov
sbb
out
mov
lahf
cmp
cs
cmpl
cmp
mov
xchg
and
and
inc
dec
jnp
decl
test
xchg
mov
xor
adc
ret
loop
or
push
movsl
jle
arpl
mov
push
mov
ret
pop
jnp
mov
mov
mov
aam
mov
mov
cmpsl
inc
inc
mov
pop
dec
movl
sti
hlt
and
sbb
out
lods
add
add
push
sahf
xor
int
lds
insl
add
faddl
xchg
mov
jl
pop
sbb
out
sub
jle
rcr
fists
jmp
ss
insl
das
fisttpl
or
mov
mov
fwait
add
jle
dec
mov
popf
pop
lods
push
loopne
hlt
sahf
cmp
fcmove
xchg
sar
pop
cmp
jle
adc
sbb
aaa
xor
inc
cmpsb
jmp
jbe
mov
fistpl
aas
push
addr16
cmp
mov
sub
dec
inc
sbbb
gs
jge
fsub
fs
fsubr
mov
mov
inc
jmp
xchg
mov
mov
add
xor
lcall
clc
ljmp
mov
cmp
cwtl
loopne
idivb
fs
aad
pop
mov
bound
outsl
mov
jo
lahf
rcrb
frstor
mov
inc
fwait
push
or
shll
jle
inc
add
jb
je
dec
xor
jno
xchg
pop
orl
cmp
fstps
or
mov
test
stos
push
in
cltd
pop
cmp
neg
lock
shlb
ficoms
xchg
cmp
sbb
sbb
and
iret
fwait
inc
add
icebp
ficoms
daa
pop
and
movsl
ss
jg
cld
xchg
jb
xor
mov
rcll
bnd
add
sbb
shlb
xor
jp
jle
aad
inc
cli
mov
lahf
aaa
pop
leave
test
add
jb
push
fbld
add
xlat
les
inc
jle
mov
mov
and
jle
pop
push
push
xchg
push
lahf
sbb
xchg
ja
and
les
sbb
cmpsl
inc
and
std
nop
jmp
lret
jmp
lods
cmp
jnp
mov
into
popf
jne
lea
arpl
mov
inc
or
pop
xchg
xor
sub
aas
mov
mov
mov
sbb
out
sahf
addr16
push
dec
cmp
stos
or
adc
pop
addr16
adc
sub
imul
es
outsl
and
mov
adc
cmp
repz
pop
sbb
test
push
lret
test
mov
pop
gs
jnp
les
dec
iret
xor
mov
ret
subl
mov
cs
push
lock
shll
in
xor
xchg
mov
hlt
jnp
adc
add
sarb
push
cmovl
fnstcw
or
sbb
lret
or
dec
test
loop
and
pop
in
pop
sti
and
xor
daa
cwtl
sub
cmc
cltd
cmp
in
loopne
or
mov
cmp
fstp
push
mov
cmp
leave
mov
cs
lods
shrb
pop
arpl
sub
jg
push
int
sarb
mov
xchg
pop
insl
xchg
jecxz
mov
in
pop
or
test
push
cmpsl
cmc
int
inc
sahf
clc
popa
sti
add
add
test
mov
or
xlat
adc
mov
ret
out
call
mov
lret
outsb
add
mov
jb
jmp
xlat
cmp
mov
inc
cmp
xchg
sub
in
sub
mov
cmc
rolb
test
popf
daa
push
js
repnz
adc
je
lcall
movsl
push
and
bound
clc
sbb
adc
loop
testb
xor
push
mov
cwtl
add
shl
mov
test
jge
push
push
imul
pop
out
xchg
rcrb
push
ds
call
pop
imulb
mov
sub
lods
shll
inc
jno
push
loope
stos
loop
testl
pop
jns
arpl
insl
gs
cmpsl
dec
fidivrs
das
cld
push
sub
inc
pop
out
xchg
mov
imul
gs
push
fsts
adc
ja
xchg
xor
xor
add
sbb
xor
int3
push
pop
add
subb
and
jbe
popf
jne
iret
sbb
push
mov
cs
icebp
mov
lcall
or
pop
dec
lock
pop
sub
xchg
rcl
movd
lcall
ss
sbb
dec
push
repnz
cmp
xor
loop
ljmp
test
pop
add
cltd
cmpsb
shlb
jl
insl
dec
mov
fsubl
sbb
subl
movsl
orl
and
mov
sbb
inc
rcrb
pusha
xor
out
fs
in
push
rolb
xchg
inc
or
sbb
and
push
ret
sub
daa
roll
arpl
lock
mov
add
dec
aas
jg
fnsave
sub
push
lods
daa
push
cmp
xor
dec
call
test
jae
lcall
add
popl
insb
insb
add
jno
xor
mov
and
sub
xor
jb
sbb
push
sarl
and
jo
push
sbb
sbb
jmp
aam
jp
xor
cmp
repz
jp
cmpsl
scas
pop
shl
mov
jg
fstpl
pop
jo
cmp
jle
das
mov
shll
inc
mov
jo
mov
insb
jmp
push
cmp
sub
sarb
std
pop
pop
mov
push
dec
mov
sbb
dec
ret
popf
adc
loope
aam
bound
jno
mov
or
sub
mov
pop
adcl
xlat
pushf
mov
fs
and
sbb
mov
sbb
rcl
test
mov
mov
push
inc
mov
aas
pop
mov
popa
dec
dec
insl
clc
call
xchg
scas
or
jg
jbe
stos
sub
ljmp
lcall
and
inc
icebp
cmp
fimuls
mov
and
dec
or
add
sbb
negb
ret
imul
and
leave
inc
jmp
cmp
cmp
mov
movb
je
pop
ss
cmp
js
jle
repnz
mov
in
jecxz
inc
cmp
mov
mov
ss
inc
mov
cld
inc
jecxz
add
mov
call
add
xor
in
out
decl
xchg
and
lret
mov
dec
xacquire
pop
xlat
mov
mov
out
jmp
pop
lret
dec
jae
fnsetpm(287
es
push
mov
mov
jb
clc
shll
test
inc
mov
push
aaa
sbb
adc
xlat
pop
nop
xor
mov
xor
sbb
lea
cmp
out
daa
sbbb
repz
dec
dec
cmp
scas
or
shll
addl
or
mov
stos
jl
sub
repnz
mov
mov
imull
pop
mov
adc
jmp
push
mov
xor
push
icebp
or
testl
out
and
and
or
rorb
sub
mov
push
jnp
mov
ds
cs
adc
pusha
add
or
mov
add
cmp
sbb
mov
mov
jae
sarl
les
testb
mov
js
gs
add
sub
xorb
push
mov
sahf
sarl
mov
xlat
push
ljmp
es
push
jge
shrl
subl
icebp
test
mov
xchg
inc
out
jns
rcrl
xchg
push
and
cmpsl
rcrb
push
aas
neg
and
add
js
lret
pop
sbb
dec
mov
sub
mov
and
popa
cmp
pop
mov
mov
sub
inc
mov
cli
adc
push
add
jne
mov
xor
inc
and
orb
ja
lahf
dec
ja
inc
sahf
imul
dec
jno
inc
fnstsw
dec
int
mov
xchg
xor
or
adc
ret
ljmp
and
xor
jge
popf
adc
xchg
jecxz
push
mov
jmp
xchg
mov
adc
mov
jbe
mov
inc
daa
aas
loop
cld
sub
pop
dec
add
cmc
fisttpll
das
or
mov
or
test
add
and
setne
cmp
mov
mov
and
or
stc
subb
mov
mov
lea
pop
filds
orl
mov
pop
jg
das
push
in
xchg
test
xchg
dec
and
mov
fwait
sub
cltd
in
popf
cmpsl
dec
ljmp
jg
in
dec
ss
out
data16
mov
pop
push
push
push
and
sti
add
loop
clc
xlat
rorl
sbbl
mov
sub
and
mov
pushl
sbb
pop
scas
mov
inc
pop
inc
xorl
ss
sub
repnz
push
dec
in
inc
lahf
mov
inc
pop
inc
mov
icebp
mov
cmc
xchg
sahf
incl
xor
xor
sarl
inc
push
loopne
lea
jo
dec
test
pop
xchg
mov
sbb
mov
arpl
sbb
push
scas
scas
sbbl
and
or
mov
push
inc
cld
push
jge
sub
aad
clc
jno
jb
or
mov
mov
popa
fcoml
in
add
rcr
or
pop
into
leave
sub
sub
pushf
pop
mov
shl
mov
in
daa
mov
pop
lret
ljmp
mov
std
lcall
ror
mov
in
pop
cltd
out
xchg
mov
sub
push
inc
adc
inc
mov
jb
das
inc
pop
and
mov
push
lret
lea
shrl
sahf
int
or
dec
iret
test
int3
sahf
push
push
ss
dec
jge
cltd
xor
dec
xchg
inc
aaa
mov
pushf
jle
pusha
dec
cmpsb
mov
jecxz
rorl
mov
xchg
inc
fsts
xor
aad
add
loope
push
js
fnstsw
or
cli
inc
data16
push
adc
outsl
mov
lods
mov
in
fists
es
or
mov
xor
loopne
daa
inc
icebp
inc
ret
push
push
push
cmpl
or
or
testb
stc
mov
cltd
rep
shll
inc
sbb
jl
je
add
popf
loope
inc
and
imul
cmc
cmp
push
xchg
inc
les
xchg
push
shll
pop
mov
icebp
rorl
in
lcall
cmp
inc
jbe
jecxz
es
cmp
shl
push
cmp
sbb
xchg
dec
lret
mov
mov
mov
ss
mov
daa
cmc
add
arpl
xchg
enter
movsb
and
shl
jbe
cmp
repz
int3
jle
mov
addr16
sbb
int3
in
pop
dec
mov
dec
out
stos
xchg
dec
dec
mov
ds
clc
mov
outsl
in
icebp
cld
test
inc
xchg
hlt
aaa
imul
ljmp
cli
arpl
enter
pop
inc
popa
jbe
cwtl
pop
xchg
cld
nop
lock
fidivrs
or
sub
push
scas
movsl
mov
pusha
aas
imul
addr16
xchg
add
cmp
pop
rolb
inc
cli
jnp
cmp
jmp
cmp
push
sub
xor
xchg
push
push
into
out
rcrl
mov
daa
popa
daa
jno
jb
cmpsb
adc
xor
pop
jecxz
daa
push
test
jo
out
aaa
jo
fimull
add
shll
or
cmpsl
out
mov
or
mov
bound
pop
nop
and
scas
jns
movsb
repnz
fmuls
adc
push
popf
jl
arpl
adc
fdivr
rclb
push
mov
lahf
mov
or
repz
mov
aas
sub
xor
xor
mov
scas
mov
pop
mov
ret
cmp
repnz
push
push
inc
test
pop
jge
aad
jg
mov
sub
inc
ret
stc
sbb
pop
jmp
jae
jne
sbbl
popa
notl
aaa
jno
andb
pop
push
mov
or
outsb
fadds
mov
mov
xlat
lods
fwait
pop
mov
push
xchg
dec
mov
stc
jno
pusha
push
outsl
inc
xor
mov
dec
inc
xchg
xor
mov
je
std
outsl
inc
and
mov
push
push
bound
adc
fmuls
mov
fs
mov
mov
dec
xor
mov
dec
push
and
cmp
js
sub
int3
mov
mov
xor
stc
push
lock
sub
dec
push
out
add
addr16
jmp
sub
shrl
mov
lods
inc
call
xor
mov
outsb
loope
adc
shrl
xor
sub
fimuls
cmpsl
lds
xlat
cmc
aad
test
xor
mov
xor
ja
xchg
pushf
cmovl
scas
xor
cltd
jge
xchg
loopne
add
cltd
flds
cli
mov
iret
push
enter
add
in
or
es
push
cmp
sti
cli
mov
inc
adc
lock
call
inc
neg
jg
mov
mov
adc
roll
mov
mov
xchg
pop
sbb
cmp
and
scas
cmp
lret
ret
fdivrl
mov
adc
xchg
mov
fistps
jb
aam
ret
gs
inc
xor
add
mov
cmp
clc
push
call
test
lret
xchg
int
cwtl
out
xchg
lret
sub
jb
stc
or
movsb
mov
mov
fbld
xor
jae
sarb
std
leave
addb
adc
pop
jl
push
push
ja
mov
ds
or
or
push
jno
xchg
bound
mov
sbb
cmp
in
sub
pop
in
sub
mov
and
mov
popa
mov
cmp
cmp
xchg
and
aas
repnz
cli
sbbb
bsr
or
inc
out
out
in
adc
mov
mov
dec
mov
add
mov
pop
sub
jmp
or
fcompl
mov
sub
add
push
scas
or
adc
mov
call
outsl
hlt
push
mul
icebp
push
icebp
or
pop
mov
cld
mov
mov
ss
ret
push
xor
and
dec
jo
mov
add
cmp
es
push
xchg
cli
mov
notl
pop
jmp
cmp
push
nop
xchg
jmp
push
icebp
or
insl
jne
into
xlat
sbb
bound
pop
ret
push
adc
xchg
pop
mov
aad
jae
add
addr16
adc
pop
mov
cmp
mov
cld
cmovle
mov
daa
add
nop
inc
xchg
push
xor
xor
rcl
outsb
dec
xchg
movsb
daa
cld
addr16
mov
nop
pop
mov
hlt
test
movsb
push
dec
dec
xchg
lahf
cmp
mov
sbb
jg
jns
cmp
es
mov
aaa
inc
adc
jmp
push
mov
ss
inc
pop
mov
movsl
shll
dec
in
iret
dec
jl
push
sbb
das
push
lcall
insl
dec
jg
mov
mov
push
push
popa
sub
or
xor
out
pop
incb
mov
mov
lock
dec
shrb
xlat
push
jae
add
sub
add
ret
lods
mov
or
xchg
mov
sti
xchg
int3
test
adc
cmp
pop
bound
lahf
mov
inc
dec
in
mov
shlb
push
movsl
adc
insl
lret
ror
sarl
pop
mov
add
sti
and
mov
loop
scas
lods
shl
cltd
enter
sbb
cli
adc
jne
addr16
loopne
push
dec
sarb
add
jge
push
loopne
rorb
outsl
call
subb
jp
mov
mov
jbe
push
cmp
add
fisttpl
jbe
mov
xchg
cmpsl
aad
popa
sahf
xor
push
mov
mov
scas
sub
fnstenv
pop
jge
and
cld
ds
mov
test
popl
out
push
ds
mov
call
test
sarb
nop
insl
or
repnz
scas
sahf
in
out
xchg
fs
leave
jle
mov
xor
dec
and
aaa
outsl
pushl
movsl
cli
out
or
scas
lcall
fimull
sub
jp
divb
xchg
das
cmp
sub
jl
push
adc
cs
and
sub
jne
sbb
mov
mov
and
add
in
negl
pop
xlat
mov
push
lcall
jmp
inc
jp
les
pushf
push
data16
push
or
and
jo
call
enter
inc
aas
lock
or
xchg
mov
xchg
mov
cmp
sbb
push
push
cmpsl
jne
mov
fmull
push
test
pop
sahf
dec
push
data16
loope
cmp
and
push
jmp
cmp
roll
stos
inc
ret
outsl
js
cmp
xchg
push
jmp
mov
sahf
or
dec
sub
bound
pop
mov
and
adc
js
jmp
shrl
jmp
out
inc
jp
in
aad
mov
fmull
call
mov
daa
jbe
pusha
inc
and
pop
in
sub
cmp
inc
cmpsl
fsubs
push
idivl
dec
jl
fldl
cmc
cmp
mov
sub
inc
mov
and
pop
lods
cmp
adc
fbstp
push
and
rcrb
jno
jle
les
mov
fs
mov
and
ss
dec
int
fmuls
ficoml
lods
decb
pop
mov
jo
adc
xor
into
add
mov
clc
push
mov
sub
or
push
ss
add
sbb
lret
mov
sub
sti
pop
pusha
xor
leave
adc
mov
inc
fstpt
sahf
or
cmc
cmpb
dec
inc
sub
sub
mov
push
fnsave
jp
cltd
and
in
sbb
mov
lds
add
sbb
xor
push
or
js
push
xchg
cmp
add
shlb
push
mov
jge
adc
add
cmc
lods
jg
jb
stc
cld
xor
das
push
or
jg
xor
les
push
dec
pushw
std
or
sbb
into
mov
mov
pop
fisubrl
faddp
ds
dec
sub
ret
or
sti
movsb
fistl
jp
inc
sbb
cmpsl
push
cmp
loopne
insl
ficoml
outsb
add
fistpll
frstor
int
std
adc
imul
dec
dec
das
outsl
adc
lcall
out
and
pop
dec
mov
pop
push
and
aas
dec
sub
hlt
mov
daa
fucom
mov
cmp
iret
jge
loope
ljmp
lret
fstps
and
popf
and
adc
fcoms
out
mov
cmp
inc
fldt
rcll
scas
dec
mov
xor
ret
lcall
andl
mov
out
int
imulb
adc
scas
or
dec
xlat
rcrl
cltd
mov
outsl
cmp
in
cli
clc
xor
add
fisttpl
lods
repz
sbb
adc
dec
cmc
iret
fldcw
xor
divl
pop
loop
cmp
mov
into
cwtl
rcrl
xchg
pop
imul
and
push
or
aad
xchg
jmp
into
sub
or
dec
add
das
js
push
adc
dec
xor
pop
js
ret
inc
or
mov
movsl
out
iret
mov
movsl
mov
incl
and
bt
pop
and
mov
pop
out
xchg
jae
mov
cmpsb
shr
jb
cwtl
dec
test
loope
sahf
jb
movsl
add
cwtl
add
sbb
mov
or
jp
sbb
test
xchg
pop
lret
sbb
sub
insb
jg
ds
pusha
push
jle
mov
mov
ret
mov
xor
inc
and
out
fdivr
sub
fwait
shlb
clc
push
mov
pop
dec
dec
inc
sbb
push
inc
ds
leave
loopne
dec
push
lcall
popa
out
imul
add
or
mov
xchg
cmpsb
mov
popa
pushf
adc
out
and
imul
cmp
movsl
lods
xchg
pushl
sbb
cmc
and
stc
test
mov
xchg
clc
fidivl
clc
or
adcl
fstp
xchg
jge
push
and
shlb
pop
inc
jecxz
call
aaa
add
cwtl
lods
add
inc
mov
sarb
out
out
outsb
xchg
pop
loope
test
sub
loope
mov
jmp
popf
xor
or
xlat
aam
inc
push
xchg
cmc
xchg
fcoml
sbb
mov
mov
es
leave
or
nop
push
xchg
inc
pop
mov
xor
sahf
fisubs
push
push
ljmp
mov
inc
and
adc
hlt
test
mov
ja
sub
cmp
in
pushf
add
out
lcall
push
xor
jp
lds
xchg
icebp
push
push
mov
ror
dec
jle
ja
daa
push
cltd
inc
aad
push
xchg
sub
or
fldenv
xchg
jb
inc
je
cld
pop
sub
rorb
xchg
push
sub
mov
sbbb
cli
push
push
jg,pn
ficompl
stos
cmp
rcr
cmp
mov
inc
inc
out
mov
aad
adc
mov
dec
pop
pop
or
sub
test
getsec
pop
loope
mov
mov
loope
and
push
leave
or
iret
or
stos
push
xchg
fwait
dec
addb
dec
add
sbb
ret
lea
insl
sub
mov
xchg
stos
loopne
and
mov
jg
jge
mov
sub
cmp
daa
cmp
loopne
sbbl
subl
lds
ret
pop
mov
cmp
stc
jnp
sub
aad
sbb
imul
or
test
sub
mov
sub
xor
cmp
movsl
inc
das
adc
mov
xor
aaa
mov
pop
cli
movsb
xor
ds
pop
pop
push
stc
je
dec
mov
stc
in
mov
xor
mov
testb
ss
or
push
cmpsb
or
daa
xchg
xchg
fidivrl
shlb
test
jae
pop
in
fwait
sbb
imul
push
xchg
adc
loopne
cmc
xor
dec
dec
lock
into
jecxz
lret
ss
ret
jbe
mov
stc
enterw
stc
xor
adc
mov
repz
sub
scas
fld
mov
div
cli
movb
das
jb
addr16
or
adc
adc
ja
pop
stos
push
mov
jbe
push
lret
add
push
imul
das
ret
test
add
int3
mov
repz
xor
imul
iret
sarl
das
xchg
pop
adc
inc
mov
push
mov
sub
shrb
sbb
imul
push
out
jae
sti
cld
jle
xchg
lahf
adc
int3
test
cmpl
mov
in
mov
shlb
aas
mov
mov
add
xlat
ret
pop
push
adc
xchg
cmp
sub
push
js
movsl
sub
push
xchg
insb
pushf
imul
pop
inc
clc
mov
inc
pop
fldl
out
dec
xchg
xchg
and
dec
push
loopne
lret
sti
fst
mov
sbb
scas
fs
push
fisubl
cld
out
cmp
adc
add
out
pop
outsl
xor
dec
xchg
aam
stc
loope
inc
js
orl
push
cmpsb
dec
ljmp
imul
fcompl
and
mov
andl
rol
xchg
dec
add
lret
xor
cmpsb
shll
mov
fs
and
das
mov
lret
aad
cli
imul
or
ret
mov
or
stos
push
inc
xchg
mov
ds
pop
mov
aad
rcll
lea
test
inc
icebp
push
sub
sub
push
and
and
dec
mov
das
cmpsl
xor
push
push
and
popa
inc
call
mov
out
lret
dec
movsb
jne
sub
cld
cmp
int3
cmp
mov
stc
dec
xchg
pop
cmp
fs
xor
add
cs
fildl
pop
inc
mov
adcb
enter
arpl
stos
sbb
jbe
dec
lahf
fwait
add
cs
and
mov
sti
sub
cmpsb
fisubrs
stc
pop
inc
mov
inc
movsl
stc
lahf
sbb
repnz
gs
or
gs
mov
fxtract
inc
out
mov
mov
xor
mov
out
mov
mull
xchg
push
stc
inc
arpl
sbb
xor
xchg
dec
jle
cmc
fildll
mov
sbb
inc
pusha
int3
imul
js
pop
js,pt
add
dec
pop
mov
inc
jae
iret
cmp
mov
jecxz
sbb
leave
ret
in
jb
jg
xchg
outsl
and
out
leave
lahf
or
shll
jno
push
jge
sbb
movsb
pop
sbb
insb
xor
negl
mov
and
jbe
lret
xchg
stos
and
add
xchg
xchg
in
int3
ffreep
data16
mov
push
aas
xor
and
push
adc
sbb
or
or
push
sub
movsl
push
pop
xchg
aas
insl
pop
sbb
insb
push
jb
push
mov
fwait
nop
or
mov
adc
jo
call
gs
das
mov
sub
jmp
xor
int3
ja
jge
aad
sarb
test
mov
jge
xchg
rcrb
sarb
push
stc
push
aam
mov
cmc
jle
arpl
es
iret
inc
lret
adc
push
inc
jb
add
push
mov
cmpl
repz
dec
pop
dec
mov
pop
push
addr16
movsb
push
test
rorb
imul
mov
int
pusha
call
addb
lahf
or
int
lock
mov
out
lahf
mov
pop
das
sub
adc
divb
and
or
sub
inc
out
lods
jb
mov
call
mov
incb
mov
push
push
gs
out
and
flds
sbb
push
cmp
xor
jg
fstpt
outsl
sbb
lods
push
mov
jecxz
popa
dec
add
inc
sbb
cmp
jp
lret
repnz
scas
xchg
sbb
aam
call
adc
xchg
mov
push
psubw
dec
inc
and
sti
scas
push
shlb
xor
imul
mov
in
xor
enter
test
adc
iret
push
daa
dec
pop
xor
test
dec
add
sbb
clc
and
adc
test
std
mov
rcll
jnp
and
ficomps
testb
sbb
push
movsb
ret
out
dec
mov
pmaxsw
data16
adc
outsl
std
dec
mov
aaa
ret
jno
xor
fimull
mov
cmpsb
sub
dec
fldcw
js
sahf
add
pop
xchg
push
es
jno
scas
pop
je
adc
insb
xchg
push
popf
xchg
xor
cwtl
in
ret
loop
or
pusha
xchg
xor
sub
mov
ja
pop
pushf
aad
loop
inc
in
xchg
sub
mov
cmp
sarb
or
iret
scas
or
sahf
in
dec
inc
push
loopne
add
ss
push
pop
scas
data16
push
add
ds
fsts
outsl
out
sub
push
repz
lahf
mov
cwtl
xchg
je
les
dec
sub
loop
pop
sbb
fcmovne
fnsetpm(287
mov
dec
repz
fptan
outsl
adc
jmp
push
add
adc
mov
mov
push
les
pushf
dec
mov
xchg
andl
jmp
cli
xchg
mov
sahf
mov
fs
jbe
lea
add
inc
mov
cmpsb
cmp
push
ja
mov
add
scas
rolb
dec
xchg
push
jnp
enter
enter
fbld
sbb
sar
dec
adc
push
leave
inc
xchg
ja
mov
cmpsl
cmp
xchg
imul
repz
fs
sub
pop
xchg
rcll
aad
dec
outsb
jp
pusha
cmpsb
paddw
imul
jo
adc
rcll
mov
or
xchg
cmpsl
push
das
cmc
adc
pusha
jle
adc
push
out
lock
in
int
es
je
push
xor
imul
jp
pop
jb
out
mov
shll
in
adc
mov
sub
jp
sbb
repz
enter
inc
ljmp
and
cmp
dec
shr
aaa
repz
dec
add
lods
xor
inc
leave
xchg
mov
mov
sbb
sub
mov
xchg
lds
sub
rol
aas
in
dec
and
lods
hlt
pop
sub
jge
push
lods
cmp
movsb
fcmovnbe
jb
test
add
lahf
sahf
add
add
out
int
mov
jmp
add
int
fdivl
and
push
stos
xchg
out
and
mov
mov
fists
mov
ret
int3
add
mov
or
jg
or
fstpt
ss
sahf
cmp
cmpsb
loop
mov
sub
mov
jmp
and
loop
aaa
pop
test
popf
push
jb
or
lods
adc
xchg
or
int
movsl
jp
push
nop
jmp
aam
rorb
add
lods
fwait
jecxz
popa
aaa
cwtl
jecxz,pn
sahf
inc
hlt
mov
imul
in
or
xchg
lret
fisubrs
or
xchg
adc
popa
sbb
lcall
or
and
mov
dec
mov
push
push
test
mov
sahf
loopne
push
or
xor
andl
das
sbb
cmc
ror
xchg
popl
xchg
dec
pop
movsl
add
xchg
cmp
int3
popa
xor
and
mov
push
sub
xchg
pop
fldenv
and
aad
xchg
dec
xor
jb
push
push
lahf
pop
addr16
sub
ss
adc
pop
fcomps
leave
dec
mov
fs
mov
jecxz
negb
insl
add
push
dec
or
xchg
test
lock
cwtl
fstl
sbb
and
xchg
mov
add
cld
dec
adc
stos
bound
cmpsb
jmp
mov
jb
or
inc
mov
sbb
pop
mov
pushf
icebp
data16
inc
jg
mov
hlt
pop
scas
push
lods
adc
dec
mov
mov
sub
in
stos
fcompl
mov
push
or
pop
leave
int
popf
lds
push
mov
clc
test
adc
fwait
clc
stos
xchg
hlt
inc
sub
pop
test
testb
inc
adc
push
rcrb
mov
mov
xchg
ja
adc
cmp
in
outsb
cmp
aam
sbb
and
popf
or
ds
lcall
out
mov
nop
sbbb
xchg
push
mov
mov
iret
add
sub
sbb
movsb
into
mov
aad
int3
popa
sarl
ljmp
sbb
sub
or
fidivs
adc
btr
addr16
fadds
dec
lds
inc
and
and
rcr
lds
fildl
outsl
mov
xor
cld
fisubl
test
popa
mov
or
pop
shlb
xor
cmpl
scas
xor
cmp
mov
les
es
idiv
cmp
cwtl
xor
push
fidivl
and
adc
imul
pop
xchg
push
bound
mov
jns
das
fwait
xchg
add
int
in
mov
arpl
nop
cmc
fsts
push
es
pop
cld
push
sbb
jg
inc
jbe
xchg
lret
in
inc
jb
data16
mov
push
push
sbb
xchg
loopne
rorl
push
xchg
add
lods
push
mov
inc
enter
mov
add
aas
mov
sbb
xor
sub
lds
mov
jo
sti
int3
mov
das
bound
xchg
jb
movsl
cmp
mov
lea
jne
adc
pop
pop
xor
sti
inc
sub
ja
cmc
lcall
xor
adc
out
div
cld
or
fcompl
or
pop
pop
icebp
ror
shlb
aam
jno
test
mov
jp
pop
adcb
inc
and
inc
mov
setno
and
adc
cmc
das
xor
jge
xchg
shr
mov
push
cs
jle
stc
inc
push
push
jge
xchg
in
adc
stc
xchg
pop
fwait
adc
dec
inc
enter
jmp
shlb
sub
and
in
jmp
pop
jne
mov
xchg
lods
pushf
xorl
sub
movsb
iret
mov
mov
scas
out
test
jecxz
push
int3
sbb
jns
xchg
iret
push
scas
les
pop
cs
or
jno
scas
std
mov
sub
ds
ljmp
icebp
divb
faddl
push
or
fldcw
rolb
in
sbb
cmp
into
xor
lret
xchg
fdivp
cli
subb
iret
fisubrl
jne
orb
out
add
jb
cwtl
aas
ret
imul
test
dec
in
adc
add
repnz
adc
fstpt
imul
repnz
fwait
std
xor
push
pop
fidivl
jecxz
lods
repnz
cs
pop
movsb
mov
mov
js
data16
paddusw
arpl
imul
inc
dec
loop
lcall
pushf
ss
mov
inc
push
mov
aam
jne
movsl
int3
movsb
je
filds
leave
or
sarl
jnp
cmp
push
in
inc
cmc
mov
mov
mov
aad
cmp
das
pushf
push
xchg
inc
popf
sub
inc
pushf
int
dec
mov
xchg
imul
pop
in
pop
cld
ret
clc
cmc
loope
xchg
pop
xor
scas
std
aas
aam
xor
pushf
outsl
or
sub
push
cli
and
and
ss
mov
scas
addb
sahf
movsb
mov
cmp
mov
movb
cmpsb
mov
ljmp
push
mov
push
sbb
dec
adc
cmp
sbb
mov
popa
add
mov
stos
nop
jns
pusha
in
sbb
sub
test
popa
jg
cld
xlat
sub
dec
mov
jmp
sub
stc
pop
xor
push
pop
mov
fdivl
popa
pop
inc
or
rorl
jl
mov
sahf
mov
ret
add
add
adcl
mov
xor
or
mov
and
repz
xor
lcall
sbb
xor
push
arpl
shlb
xor
mov
pop
fwait
cltd
jmp
les
cmp
shlb
lcall
pop
cmpsl
icebp
pop
cmp
jge
lret
inc
nop
imul
and
repnz
pop
and
cmp
xchg
les
mov
stc
adc
sbb
dec
mov
mulb
sbb
scas
rcl
push
jg
das
test
push
push
andb
xor
daa
inc
sub
mov
xchg
lcall
lods
cs
pop
mov
adc
jbe
push
or
jae
lret
lret
insl
add
out
sarl
cmp
pop
ror
fmull
push
pop
inc
inc
loop
ss
movsb
add
xchg
out
dec
test
imul
add
push
cmp
cmp
stos
sbb
cwtl
ficoms
fmulp
mov
inc
roll
out
ret
lea
and
push
or
fnstenv
inc
lods
rcrl
arpl
mov
and
push
rcrl
jb
lahf
dec
sub
or
cmp
notb
sarl
jl
adc
hlt
push
sbb
cltd
mov
sbb
jno
xchg
test
int
adc
mov
jg
imul
xchg
lcall
ja
sub
arpl
mov
jl
sbb
jg
mov
aaa
insl
out
push
pop
sbb
ret
jne
cli
inc
sub
mov
aaa
add
dec
jo
sub
xchg
jp
adc
push
sbb
cltd
adc
loop
xchg
dec
cld
cmp
dec
add
push
loopne
xor
and
mov
and
inc
rorl
in
loop
aaa
cli
lret
mov
scas
or
sbb
dec
inc
mov
push
lods
mov
mov
push
ret
addb
and
and
push
aam
sarl
mov
cmp
push
aad
lcall
movsb
xchg
add
or
jne
inc
cs
xchg
fs
and
mov
jnp
rorb
mov
jno
pop
dec
lock
dec
cmp
insb
sub
xchg
jnp
stos
cwtd
and
stos
mov
cmp
movl
cmp
popf
les
sbb
jb
scas
imul
pop
test
add
nop
cmp
nop
cli
mov
and
into
lock
lahf
ss
test
xchg
mov
shll
pop
mov
fldenv
int3
mov
cmpsl
clc
xchg
lock
adc
sbb
out
std
xchg
jg
mov
sbb
mov
les
xchg
imul
xor
repnz
mov
in
jp
xlat
ja
call
mov
sub
popa
push
xchg
outsl
adc
xchg
inc
das
jle
xor
adc
jbe
lods
xchg
push
mov
ds
jmp
dec
repz
insl
push
mov
sub
rcl
aam
in
add
and
mov
ds
std
push
insb
mov
ret
pop
cld
pop
xor
jbe
in
sub
shlb
mov
inc
jno
pop
xchg
inc
das
sub
lock
loope
push
fxch
xchg
or
push
iret
adc
dec
loopne
and
jns
or
out
mov
ret
jae
cmpsl
cwtl
sub
lock
enter
dec
repnz
add
cmp
mov
xchg
sbb
inc
mov
dec
cmp
insb
pop
lcall
pop
in
lods
pushl
js
dec
outsb
ljmp
add
rcrb
sti
cmp
jmp
pop
aas
repz
and
rcrl
popa
xchg
in
mov
pop
mov
jecxz
stos
popa
add
adc
or
push
pop
das
jmp
jb
inc
shrb
push
outsl
into
iret
je
cmp
std
push
repnz
mov
jge
xor
das
test
mov
jno
pop
pop
in
or
lcall
insl
adc
push
or
xchg
sub
mov
mov
test
dec
ds
call
loop
dec
sarb
clc
pop
xchg
sub
sub
loope
sub
pop
mov
stos
insb
adc
dec
sub
sbb
loop
cwtl
dec
add
int
pushf
mov
inc
fcomps
imul
xchg
int3
sahf
outsl
sbb
mov
push
in
jp
mov
inc
xor
add
loopne
pop
jg
xor
loope
test
fadd
outsb
rorb
mov
jbe
sahf
lea
sarl
xor
decb
out
loope
fwait
and
test
inc
push
outsl
hlt
lret
jns
or
xor
push
pop
ret
int3
js
dec
xchg
test
and
sub
test
shlb
mov
fcos
push
pop
clc
push
mov
scas
les
stc
inc
adc
dec
test
mov
adc
xor
jmp
call
push
mov
dec
cmp
jmp
and
test
or
jmp
in
clc
data16
and
pop
jle
mov
mov
dec
cltd
jge
lods
push
mov
or
loope
daa
pop
pop
mov
andb
jle
daa
mov
test
push
cmp
push
xchg
out
clc
testb
lock
dec
jle
and
insb
mov
jns
aam
pop
xchg
shrb
lahf
in
mov
dec
inc
jns
fmulp
inc
aad
test
fbld
mov
fldenv
xor
adc
imull
inc
inc
outsb
int3
xorl
jl
cmpsb
mov
xor
and
or
push
or
adc
dec
mov
sar
mov
dec
in
dec
xchg
ret
inc
aad
mov
or
jnp
xchg
iret
pop
sub
cmpsl
jecxz
inc
vfmsubadd132ps
dec
pop
cmpsl
lods
inc
scas
cmp
xchg
mov
add
loope
xorl
imul
call
push
dec
test
fcmovu
sahf
lret
movl
cmp
cwtl
call
movsb
in
imul
push
fs
pop
out
dec
popf
ss
and
out
xchg
adc
outsb
push
ret
aaa
leave
in
sub
testl
jmp
cmp
pop
gs
cmp
jp
xchg
mov
aas
pop
inc
sub
rorl
pop
xchg
add
movsl
movsl
push
fs
ja
adc
bound
hlt
jns
lods
and
push
clc
movsb
mov
stos
xlat
scas
mov
ljmp
sbb
sbb
mov
sub
es
pop
ret
imul
xor
sbb
dec
daa
mulb
pushf
test
cs
testb
sub
out
and
mov
inc
in
cmpsb
push
lea
ja
add
into
scas
pop
xchg
rorb
sub
lock
cmp
fsts
in
cmp
test
add
rol
jnp
inc
pop
push
dec
or
popf
sub
rcr
sub
leave
adc
ficoml
jbe
popf
inc
add
cld
cltd
and
mov
xor
jl
mov
sahf
pop
pop
sub
jl
push
outsl
rcr
and
cmp
cmc
out
cmp
fstpt
fldenv
movsb
sbbl
aaa
bound
xor
xchg
test
jae
or
mov
aad
ja
and
dec
cmp
dec
out
popl
test
mov
mov
sbb
xlat
pop
in
dec
sub
sarl
bound
repz
int
pusha
inc
jnp
pusha
arpl
ret
xchg
pop
xor
or
stc
call
adc
jb
push
fldenv
inc
inc
mov
or
sarl
xor
es
xlat
push
push
mov
adc
ja
das
lds
movsl
pop
push
outsl
aam
pop
sbb
mov
cltd
inc
daa
sarb
sbb
cltd
hlt
insb
int
int3
jg
outsb
aam
in
pop
sbb
lahf
cs
and
sbb
js
push
pop
fadd
pushf
pushf
pusha
js
negl
outsb
mov
in
pextrw
and
and
repz
jle
or
xchg
jo
jmp
dec
sbb
pop
sub
inc
das
pop
loop
arpl
scas
inc
clc
shrb
shlb
xor
push
mov
leave
repnz
fdivrs
jle
push
and
sbb
lea
loope
jmp
lea
mov
ret
rcll
mov
repnz
leave
fwait
jle
call
out
mov
outsl
push
push
out
test
add
fisubl
aad
cmp
stos
js
movsb
roll
mov
lahf
push
in
pop
pop
repnz
mov
imul
add
outsb
dec
sbbb
sbb
in
and
and
cmp
inc
dec
jae
cmp
push
pop
ret
and
cltd
insl
imul
jp
shll
jae
jp
roll
pop
call
lahf
dec
nop
movsb
cmp
push
and
int
cmp
inc
mov
mov
addr16
outsb
mov
lods
daa
sub
and
cwtl
mov
xchg
dec
dec
das
daa
add
aad
push
add
cltd
sti
ja
gs
test
sarb
sbbb
inc
idivl
shrl
xchg
push
rclb
xchg
aam
push
rcrb
test
add
sub
dec
add
and
lea
push
call
divl
push
adc
cs
sbb
lds
cmp
jmp
and
sti
jge
out
lret
sub
fcoms
add
in
inc
or
cmp
pop
lock
lret
inc
pop
sub
sti
and
jns
cli
loope
cltd
mov
mov
repz
jl
fiaddl
pop
scas
sub
jns
inc
orl
jb
mov
add
out
cmpsl
mov
push
mov
xchg
mov
xchg
testl
insb
sub
mov
jp
jbe
add
jbe
inc
testb
cli
lods
push
cltd
cmp
lods
and
pop
js
addr16
push
fwait
xor
add
push
push
jnp
dec
mov
lcall
mov
push
cmpsb
push
imul
cmp
out
movsl
call
sti
inc
mov
dec
sahf
iret
xchg
add
xchg
jle
dec
xchg
jecxz
add
addr16
pop
jns
add
cmp
les
pop
dec
popa
es
cmpsb
stos
out
push
mov
stos
jle
cs
dec
mov
fnstcw
jb
ret
or
dec
dec
in
sbb
mov
shll
test
cld
xor
shl
scas
and
aam
add
lahf
jp
push
mov
mov
icebp
and
fdivp
add
pop
sbb
sarl
lods
mov
outsl
pop
sub
call
mov
cltd
inc
lret
xor
loopne
std
xchg
jbe
aaa
mov
je
jle
cwtl
movsl
mov
jmp
ficompl
out
fistl
es
push
sbbb
jno
or
cmp
inc
push
pop
lods
fidivl
shrb
push
int3
outsl
sub
sbb
lcall
movsl
cmpsb
push
xor
jmp
push
dec
stos
adc
ss
xchg
jo
pop
shlb
adc
jne
mov
scas
stc
jmp
mov
rcll
cld
inc
jbe
or
ret
dec
inc
fs
int3
shrb
ljmp
lea
fnstenv
mov
mov
jae
test
xchg
mov
push
repz
adc
stos
dec
xchg
pop
inc
xchg
fisubrl
mov
iret
mov
xlat
inc
sbb
fidivrl
pushf
push
jo
sub
cltd
jbe
inc
push
daa
jecxz
nop
xor
repz
dec
fldcw
fwait
push
jo
xchg
lret
test
sbb
cmpsl
xchg
out
rol
jmp
mov
xchg
iret
shr
add
cmp
enter
movsl
gs
scas
cmpsl
cli
xor
cmp
pop
es
push
jmp
xchg
ss
arpl
sub
mov
inc
lahf
mov
pop
jae
and
push
icebp
fstpl
scas
test
push
sub
xchg
pop
ja
sar
test
popa
cmp
pop
xor
jbe
lret
cmpsl
cmpsl
lods
stos
xchg
xchg
jmp
lahf
push
lods
ljmp
flds
pushf
sbbb
xor
inc
idivl
cmc
sub
int
mov
inc
hlt
xchg
jns
pop
xchg
idivl
sub
xlat
xor
pop
sahf
insl
dec
sub
mov
fs
outsl
scas
mov
aas
sbb
pop
fwait
xchg
and
push
cmpsl
fwait
mov
jecxz
clc
int
lock
addr16
jp
cmp
xorl
imul
out
loop
or
jno
xchg
push
jns
fs
xlat
stos
mov
and
hlt
and
mov
loopne
in
push
aam
rcrl
inc
adc
ja
jle
mov
mov
pushf
push
xchg
mov
sbb
pop
fs
xchg
mov
and
iret
pop
arpl
mov
aas
mov
scas
scas
cmpsl
jae
push
sahf
iret
xor
pop
or
gs
mov
imul
mov
jbe
sbb
inc
add
sub
icebp
pop
cli
call
jle
stos
mov
cmpsl
shrb
push
cmp
jge
sbb
sti
dec
jg
loope
dec
push
push
lods
in
mov
js
notb
mov
in
imul
and
xchg
addr16
addb
hlt
push
cmp
cmpsb
jbe
fld1
sub
adc
add
sbb
pushf
sti
into
cli
or
xchg
xor
sub
rolb
inc
xor
sbb
lret
pushw
sti
movsl
loopne
in
push
xor
inc
cmp
push
loope
sahf
xor
mov
inc
jbe
pop
cmc
es
fstl
sub
push
jno
mov
aad
cmp
lods
ds
and
mov
xor
mov
jg
cmp
je
mov
xchg
repnz
adc
pop
add
adc
jb
xor
push
bnd
cmpsl
aaa
ds
mov
cwtl
xor
outsl
data16
icebp
imul
sbb
loopne,pt
push
or
bound
mov
out
jmp
test
cs
outsb
inc
cmpsl
fnsave
test
mov
mov
or
stc
call
cmpsl
insl
or
mov
sbb
mov
scas
mov
inc
lret
jns
sub
mov
scas
xor
stc
test
jp
fisubrl
xchg
sub
mov
dec
jns
je
fistps
cmp
dec
test
xchg
sbb
imul
loope
in
ds
mov
jg
mov
loopne
clc
pop
xchg
outsb
aas
xchg
test
movsb
cmpsl
jb
pop
sti
push
fwait
mov
mov
or
push
mov
dec
lock
hlt
add
rorl
jle
cmp
sub
cmp
jnp
in
dec
or
jae
mov
cmp
inc
cmp
pop
sub
or
mov
fcomps
rorl
rol
mov
imul
inc
xchg
dec
fsubrl
fwait
cmpsb
or
xchg
mov
mov
ss
xchg
pop
mov
cltd
jno
mov
xor
fsubs
call
repnz
int
and
daa
ficomps
repnz
aaa
xor
inc
mov
outsb
push
lahf
sbb
data16
clc
int3
sub
xor
arpl
push
cs
sub
popa
xchg
cmp
stc
jno
movsl
mov
pop
xchg
jmp
dec
mov
mull
lea
inc
aas
arpl
mov
sbb
lcall
add
xchg
mov
cwtl
dec
fwait
les
inc
add
pop
rcrb
cmc
rorb
mov
jecxz
mov
pop
dec
push
mov
mov
dec
mov
jno
pop
mov
pop
arpl
adc
inc
inc
aad
jo
test
mov
ret
lods
arpl
sub
lret
imul
push
lock
push
or
and
ss
in
int
pushf
xchg
cwtl
out
mov
xchg
repnz
push
in
xchg
jns
add
enter
mov
pop
cmp
icebp
xor
push
push
pop
out
mov
movsb
and
push
dec
push
ja
add
mov
cmp
cli
idiv
and
out
add
xchg
cmp
fwait
xor
sub
scas
roll
data16
loope
insb
test
repnz
inc
popa
and
add
or
inc
cmp
xor
dec
mov
pop
movsb
push
lods
xchg
pop
scas
lods
les
mov
lahf
mov
fwait
and
stos
addr16
mov
sbb
std
and
cli
jne
xchg
test
push
stc
in
jno
bound
repz
in
dec
jno
xlat
add
jp
lcall
sbb
cmpsb
jbe
xchg
sbb
ljmp
mov
mov
xor
nop
popa
dec
mov
adc
fmuls
idivb
cmpsb
idivb
std
jns
pop
testb
mov
mov
mov
mov
pop
sbb
and
rcrb
into
es
lods
cld
pop
repz
sbb
enter
ss
mov
adc
xchg
pop
mov
jns
push
icebp
subl
fcmovne
push
mov
jbe
inc
js
sbb
dec
adc
or
cmp
insl
rol
int
sbb
dec
add
dec
int3
addr16
inc
cmp
mov
pop
sub
loopne
mov
cmpsl
fwait
test
push
lock
int3
or
inc
mov
leave
call
movl
aad
jb
sub
sbb
icebp
enter
cs
xor
clc
js
push
add
nop
xchg
loopne
push
jbe
insl
hlt
xor
pop
xchg
adc
mov
mov
xchg
cmc
pop
xor
and
jo
leave
push
push
dec
aad
cmp
test
jae
mov
mov
xor
sub
in
push
pop
scas
mov
lds
cmc
pop
cwtl
mov
loopne
jae
lret
push
jo
popf
sub
in
dec
ficompl
jmp
mov
je,pt
dec
xchg
loopne
xchg
push
repnz
fsubs
out
loop
fcompl
sub
xor
das
js
add
rcr
push
mov
pusha
sbb
lods
jge
int3
std
enter
ret
jp
pop
mov
loopne
sbb
iret
aaa
pop
jne
cmc
mov
mov
imul
jns
sahf
sub
jo
jae
mov
adcb
cmpsb
jae
sbb
cmpsb
test
push
imul
xor
push
rcll
adcl
push
mov
loope
jmp
subb
xchg
adc
lahf
decl
out
inc
aaa
pextrw
mov
popf
out
in
add
repnz
bound
dec
lods
pusha
inc
jmp
add
clc
das
in
jae
lock
fldenv
jno
xor
ret
fisttpl
js
fcoms
mov
and
push
sub
add
test
lret
out
cmp
jbe
lds
sbb
mov
mov
hlt
mov
xchg
inc
cmp
flds
jl
mov
pop
popa
dec
cmp
idivl
movsl
mov
xor
mov
and
fldcw
cwtl
cli
sbb
scas
cmp
ljmp
push
addl
test
cwtl
aas
js
xor
in
or
inc
jle
and
lcall
or
hlt
jne
xor
mov
fwait
jecxz
cmpsl
ret
sub
mov
xor
movb
pusha
addr16
ret
jl
sub
and
mov
ret
add
jg
jmp
std
mov
xchg
roll
std
pushf
and
pop
pop
shlb
fsubrl
jecxz
fs
adc
jnp
orl
or
movsb
cltd
inc
pusha
lret
jb
add
das
jne
test
iret
adc
je
int3
mov
das
mov
mov
ljmp
dec
push
fnsave
mov
call
jne
sti
clc
out
push
jne
daa
std
adc
enter
adc
ret
outsl
push
mov
fwait
negl
scas
mov
arpl
push
push
arpl
cmpsl
insb
xchg
xchg
cli
rol
daa
scas
xchg
iret
adc
daa
ffreep
cmp
pop
jg
popa
int3
fisttpll
jp
lcall
xchg
in
inc
ss
sub
outsl
popf
in
push
xchg
gs
xor
mov
pop
push
push
arpl
jmp
movsl
nop
mov
adc
jge
inc
sub
in
lds
bound
nop
sbb
mov
mov
pop
sub
sub
pop
daa
mov
pusha
adc
lods
test
lods
test
sub
call
add
xchg
fisubs
add
cs
mov
or
mov
test
mov
movsl
loope
dec
mov
push
rolb
push
add
mov
mov
in
or
sbb
shl
xchg
sti
xor
cmpsb
in
movsl
pop
rcll
mov
setg
pusha
scas
jo
xor
push
scas
add
jb
fs
addr16
adc
push
jge
aas
add
movl
add
push
cld
add
loope
adc
movsl
cwtl
dec
rcr
lods
out
mov
aad
rclb
mov
frstor
imul
sti
push
dec
sbb
xor
lahf
cli
jo
sahf
sub
cli
fidivrs
rcrl
mov
imul
sub
jnp
lret
mov
das
push
push
cltd
add
std
cmp
lock
lods
adc
xlat
mov
adc
xor
mov
or
fwait
adc
dec
out
mov
adc
mov
mov
fwait
xchg
pop
xchg
movsl
xchg
mov
cmp
jp
cmp
xlat
inc
mov
lods
test
cli
scas
ds
pop
filds
popf
inc
int3
leave
jbe
mov
mov
push
cmc
pop
mov
hlt
movsb
cli
popf
dec
jbe
ja
sbb
mov
rclb
xchg
cmc
mov
addr16
cltd
lods
sbb
orl
dec
sahf
fbstp
mov
arpl
into
stc
mov
and
shlb
in
mov
fldt
jecxz
iret
cli
shll
and
cld
jle
dec
mov
scas
or
addr16
sbb
movsb
int
popa
mov
fcomps
cmp
int
pop
movsb
xchg
mov
push
cwtl
testb
mov
enter
mov
popf
xor
clc
and
hlt
sub
inc
xchg
or
pop
mov
stc
cmpsl
mul
or
ss
incb
xchg
das
lods
xlat
sub
jg
xor
aaa
sub
and
sarl
shlb
jl
xchg
pop
sbb
jp
jbe
int
inc
sbb
mov
fcmovb
xor
push
or
mov
or
movsb
lea
sbb
lds
adc
loopne
jge
push
push
scas
roll
sub
lods
shrl
pushf
fsubr
fsubs
call
and
dec
adc
ret
and
test
int3
lods
aas
adc
fs
in
rorl
mov
jo
test
mov
fisttpl
pop
shrb
aaa
sub
jno
lea
mov
dec
sub
fidivl
in
ljmp
loopne
cmpsl
mov
push
inc
add
push
out
sbbb
sub
call
jno
dec
loopne
jg
and
addr16
mov
and
sub
pusha
in
mov
pop
inc
pushf
mov
fisttpl
rorl
xchg
jno
inc
rolb
add
adc
stos
xchg
rolb
ds
fdiv
cmpsb
hlt
add
call
ret
js
inc
fnstsw
std
and
cli
mov
mov
call
pop
pop
shrl
arpl
xor
xor
cmc
js
pop
fstpt
daa
call
cmp
clc
fiaddl
xor
stos
and
loopne
jnp
mov
bound
bound
mov
lcall
loopne
dec
mov
cwtl
daa
out
rolb
dec
fs
push
mov
cmc
pop
fwait
lahf
es
jno
rol
mov
xor
bound
lret
inc
and
dec
mov
add
mov
gs
lret
jb
xor
aaa
enter
add
adc
add
rcll
data16
inc
aas
adc
jg
adc
sbb
clc
out
push
mov
sbb
mov
leave
xchg
std
xlat
and
jno
mov
lret
out
daa
inc
rorl
pop
mov
sub
sbb
lea
sub
pop
and
mov
xchg
dec
fwait
mov
popf
out
cmp
sub
cmp
push
repnz
loopne
jb
sti
adc
lcall
cld
pop
in
and
sahf
lds
xchg
cmp
cmp
loop
int3
and
idivl
out
adc
xor
pop
xor
mov
jmp
dec
icebp
pop
lods
mov
xlat
and
mov
mov
xlat
dec
cmp
int
or
mov
and
shll
cld
or
and
add
adc
mov
addr16
add
xlat
jns
jge
mov
scas
sbb
ret
pop
and
ss
lahf
int
loop
daa
lret
cmc
enter
jae
fistps
maskmovq
notl
or
push
sbb
sahf
addb
dec
loop
test
movsl
iret
psraw
pop
add
cs
jnp
inc
xor
push
scas
fwait
sbb
mov
mov
push
test
out
enter
fisttpl
cmpsl
mov
sbb
add
out
pop
or
cli
int
pop
icebp
dec
rclb
ja
rcll
pop
add
js
cmc
dec
inc
pop
imul
sbb
testl
cmp
adc
lods
sahf
int
test
outsl
mov
and
or
scas
mov
shl
testb
sub
lock
ret
into
pop
jecxz
cltd
or
mov
pop
adc
mov
rcl
ficoms
mov
sbb
push
mov
test
jecxz
mov
push
dec
pop
in
stos
xchg
ret
popf
jmp
or
sub
mov
cmpsl
sbbb
mov
dec
mov
cltd
sub
stc
rorl
test
in
icebp
dec
jp
pop
jb
mov
sub
testb
cmp
mov
aaa
movb
aam
jbe
jae
cmp
inc
std
dec
fst
sbbl
cmpb
mov
jnp
sti
and
push
sbb
mov
jle
pop
mov
or
jne
sarb
dec
outsb
lret
pop
jg
xor
iret
sbb
lahf
inc
pop
add
aam
mov
insb
adc
loope
add
xchg
sahf
outsl
pop
fstpt
pop
mov
out
cmpsl
pop
bnd
jo
push
aaa
inc
ss
or
daa
and
cltd
in
mov
cmp
mov
mov
sti
imul
pop
inc
popf
mov
shll
push
inc
arpl
add
mov
cmp
mov
xchg
rorl
cmp
popf
sbb
stc
jb
lds
cld
dec
mov
pushf
cld
add
in
and
inc
int3
jbe
xchg
jmp
js
sub
into
int
cmp
sub
stos
mov
add
popa
inc
outsl
sub
call
fnstcw
jle
out
jg
mov
and
mov
fsubs
ja
mov
ret
lods
int3
mov
mov
aas
and
lcall
inc
stos
sbb
cltd
lds
jecxz
arpl
and
jo
or
sub
sbbl
aam
or
mov
in
bound
insb
enter
xchg
ret
fs
addb
ret
jle
in
jno
mov
andb
or
scas
jbe
xchg
loopne
fs
jl
mov
inc
scas
mov
je
dec
mov
inc
pop
adc
push
mov
lahf
mov
sbb
jg
mov
and
pushf
or
pop
fidivs
scas
fdivl
sbb
scas
inc
jno
xchg
adc
rcrb
lcall
xchg
loope
aad
sub
into
push
sbb
mov
decl
jae
mov
jg
dec
mov
sub
mov
mov
pushf
and
pop
dec
jge
outsl
inc
fcompl
xor
mov
mov
jecxz
xchg
xorb
sub
inc
add
lea
add
inc
mov
dec
jmp
setl
adcl
movsl
jae
dec
dec
jle
gs
test
fisttpl
outsl
dec
lods
es
mov
mov
xor
addb
sbb
push
cmpsl
gs
adc
push
fbstp
xchg
fwait
enter
adc
out
jmp
cmc
popf
fwait
inc
aad
xchg
adc
xor
jge
push
pusha
xor
and
cltd
jb
in
pushf
hlt
pop
insl
orb
cmp
xor
add
adc
mov
sbb
push
pop
js
enter
aas
imul
out
xor
xlat
sub
inc
popf
cmpsl
mov
loope
lds
mov
icebp
stc
scas
and
js
cmp
outsb
cld
incl
aas
aaa
stc
dec
mov
mov
in
enter
xchg
imul
push
cli
xor
jne
leave
repz
pop
xchg
pop
icebp
dec
cld
test
aaa
stos
int3
nop
je
mov
inc
mov
dec
jl
pop
fidivl
and
dec
jmp
xor
and
xchg
and
dec
repz
pushl
ljmp
rolb
lods
mov
push
jl
xchg
cld
fildll
jnp
ja
scas
dec
xor
xor
ret
fisubrs
dec
adc
dec
xchg
mov
dec
xchg
pop
out
out
and
scas
add
jo
jge
adc
inc
pop
lcall
jle
clc
mov
mov
push
jmp
mov
int
mov
sti
fsubs
mov
jecxz
mov
mov
cli
out
outsl
mov
jecxz
je
add
popf
pop
jne
imul
aaa
or
gs
and
pop
jg
mov
jecxz
ss
outsb
popf
scas
add
jle
sub
adc
ret
stc
adc
sub
adc
cli
jne
cmp
je
fucom
pop
cmpsb
es
mov
jo
xor
pop
pop
push
ds
pop
inc
addl
push
pop
fcompl
push
push
mov
outsl
jmp
or
aas
push
dec
and
pushf
xor
cmp
jb
roll
loope
out
xchg
fadds
and
dec
rolb
pop
out
add
popf
mov
aam
mov
push
mov
out
test
push
bound
cwtl
fbstp
ss
cs
sbbl
mov
adc
clc
inc
fnstcw
pushf
cs
xor
fadds
cmpsb
inc
ja
sbb
dec
cmp
ja
sub
repz
loope
test
sbb
inc
add
rol
or
or
jecxz
inc
les
jmp
add
or
fstpl
iret
jno
mov
mov
data16
roll
lret
inc
ficompl
icebp
sbb
rcrb
shr
cs
jae
aad
loope
pop
push
cmp
xor
dec
test
ljmp
xchg
mov
movsb
xchg
aaa
mov
jbe
xor
shll
