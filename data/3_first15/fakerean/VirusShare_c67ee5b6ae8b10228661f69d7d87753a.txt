mov
jmp
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
cmp
push
push
lea
push
mov
mov
jb
mov
xor
cmp
je
mov
mov
lea
push
push
lea
push
lea
push
push
push
push
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
call
add
test
je
cmpl
jb
mov
mov
mov
add
push
push
push
xor
lea
call
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
mov
call
test
js
mov
push
push
xor
lea
call
mov
cmp
jne
mov
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
lea
call
lea
call
mov
cmp
je
mov
mov
push
call
mov
cmp
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
int3
int3
mov
push
mov
push
mov
push
push
push
push
call
test
je
lea
push
push
push
call
add
test
je
test
mov
je
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
mov
sub
cmp
push
mov
push
je
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
add
ret
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
push
mov
call
pop
pop
add
ret
cmpl
je
xor
ret
cmpl
je
push
push
mov
push
lea
mov
call
test
je
push
lea
push
mov
call
push
lea
call
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
xor
cmp
mov
mov
mov
mov
mov
mov
mov
mov
jbe
push
mov
xor
cmp
je
movzwl
cmp
jne
cmp
je
cmp
je
cmp
je
cmp
jne
cmp
jae
cmp
jae
cmp
jae
cmp
jae
add
cmp
jb
pop
pop
ret
mov
movzbw
movzwl
jmp
cmp
ja
jmp
movb
jmp
mov
test
je
mov
test
mov
je
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
test
je
sar
add
lea
or
mov
ret
push
push
push
mov
push
mov
test
mov
je
mov
call
cmpl
jne
mov
or
mov
addl
mov
add
lea
or
mov
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
push
push
push
push
call
xor
add
cmp
jne
cmp
jne
xor
lea
mov
push
call
add
cmp
jne
jmp
cmp
jne
mov
mov
mov
cmp
jge
mov
call
mov
mov
mov
mov
cmp
je
lea
cmpl
je
mov
mov
push
call
add
cmp
jne
cmp
jne
xor
mov
push
call
add
cmp
jne
mov
lea
mov
mov
cmp
jl
cmp
je
mov
cmp
je
add
mov
cmp
mov
je
addl
cmp
jne
mov
mov
call
push
call
add
jmp
mov
sub
je
sub
jne
cmp
jne
mov
mov
call
mov
cmp
jne
lea
call
movl
mov
call
pop
pop
pop
pop
pop
ret
cmp
je
mov
mov
cmp
lea
jne
mov
push
push
call
pop
pop
pop
pop
pop
ret
mov
push
call
push
call
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
call
test
movl
mov
je
addl
mov
mov
mov
mov
mov
movl
mov
xor
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
call
mov
lea
push
lea
mov
call
mov
movl
mov
push
call
add
jmp
mov
mov
mov
mov
jmp
mov
push
call
jmp
push
mov
lea
push
call
mov
pop
mov
mov
cmp
pop
push
jne
call
ret
push
mov
sub
push
push
push
mov
mov
call
test
mov
je
mov
mov
push
xor
call
cmp
je
mov
mov
call
push
mov
lea
mov
call
mov
push
lea
lea
mov
mov
mov
mov
call
pushl
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
push
lea
lea
mov
mov
mov
call
mov
cmp
je
call
cmp
jne
cmp
jne
mov
mov
push
push
pushl
call
lea
call
lea
call
lea
call
lea
call
cmp
jne
lea
call
pop
pop
pop
leave
ret
pushl
call
test
pop
jne
jmp
push
mov
sub
andl
push
push
push
call
test
je
mov
xor
lea
inc
mov
push
mov
mov
mov
call
test
pop
mov
jne
mov
lea
push
movl
mov
mov
mov
call
test
pop
jne
mov
testb
je
pushl
andl
pushl
call
pop
pop
test
je
push
push
call
pop
pop
cmpb
jne
mov
lea
mov
push
mov
mov
mov
call
push
push
mov
call
add
cmpl
jne
mov
andl
lea
push
movl
mov
call
lea
push
lea
push
lea
mov
push
movl
movl
mov
mov
mov
mov
call
push
push
call
push
push
call
lea
push
lea
push
lea
mov
push
mov
movl
mov
mov
mov
mov
call
push
push
call
push
push
call
andl
add
movl
mov
push
lea
call
mov
mov
call
test
js
mov
push
call
test
je
andl
mov
mov
lea
push
push
pushl
movl
call
pushl
pushl
call
add
xor
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
xor
push
push
mov
mov
mov
mov
movl
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
push
lea
mov
mov
movl
movl
mov
call
push
call
add
push
mov
call
lea
push
call
add
push
mov
call
mov
test
jne
test
jne
mov
pop
pop
pop
xor
mov
call
add
ret
mov
ret
int3
int3
int3
int3
int3
sub
push
push
mov
xor
cmp
push
je
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
cmp
mov
je
mov
lea
push
push
mov
call
mov
cmp
jg
cmpl
je
mov
push
lea
call
mov
mov
mov
lea
push
push
push
call
test
js
mov
mov
mov
mov
push
push
call
mov
push
lea
mov
call
mov
mov
lea
push
mov
push
push
mov
push
call
mov
test
js
cmp
je
mov
mov
lea
push
push
mov
call
cmp
jne
lea
call
lea
call
lea
call
mov
pop
pop
pop
add
ret
push
lea
mov
call
mov
mov
lea
push
push
mov
call
mov
test
js
mov
cmp
je
mov
mov
add
push
mov
push
push
mov
call
lea
call
jmp
push
mov
and
mov
mov
sub
push
mov
test
push
push
movl
jne
push
mov
call
add
push
mov
call
mov
add
lea
push
mov
mov
push
push
push
mov
movl
call
mov
mov
mov
add
test
je
mov
test
je
jmp
lea
mov
test
je
mov
xor
nop
cmpw
je
xor
test
jne
add
add
jmp
cmp
je
mov
test
jne
xor
test
jne
mov
pop
pop
pop
mov
pop
ret
mov
jmp
test
je
mov
mov
mov
mov
cmp
je
movzwl
movzwl
sub
jne
jmp
sub
add
add
test
jne
jmp
mov
mov
push
push
call
add
test
je
mov
not
test
jne
mov
push
push
xor
call
add
push
mov
lea
mov
call
mov
cmp
je
mov
push
mov
lea
mov
call
mov
cmp
je
mov
mov
mov
cmp
je
mov
mov
call
cmp
je
mov
mov
mov
call
cmp
mov
je
mov
mov
push
call
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
lea
call
test
js
cmp
je
mov
mov
lea
call
lea
call
lea
call
mov
pop
pop
pop
mov
pop
ret
lea
call
lea
call
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
push
push
je
test
je
sar
mov
mov
mov
push
push
push
push
push
call
xor
lea
mov
test
jne
cmp
jl
pop
pop
pop
xor
pop
ret
mov
jmp
mov
call
test
jne
mov
mov
mov
mov
push
push
call
add
add
jmp
push
mov
sub
push
mov
test
je
mov
push
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
cmpl
je
call
mov
cmp
jne
mov
test
je
mov
pushl
mov
push
call
ret
push
xor
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
push
push
push
je
mov
mov
mov
cmpl
je
xor
pop
pop
pop
pop
add
ret
mov
push
call
add
test
je
call
mov
test
mov
je
mov
mov
push
call
test
movl
je
push
call
test
js
push
call
add
test
je
mov
mov
call
mov
lea
call
cmpl
je
call
test
mov
je
mov
mov
mov
push
call
mov
test
je
mov
test
je
push
push
call
add
test
mov
je
mov
push
call
mov
lea
push
lea
push
push
push
push
call
add
test
js
mov
test
je
mov
push
push
call
mov
push
mov
mov
push
push
movl
call
add
test
je
mov
mov
mov
push
push
push
call
test
js
push
call
add
mov
test
je
test
je
mov
mov
lea
call
lea
call
lea
call
jmp
xor
jmp
int3
sub
mov
xor
mov
push
push
mov
push
push
xor
push
lea
lea
push
push
movb
call
push
push
push
call
add
lea
push
movb
call
mov
cmp
lea
je
mov
shr
lea
cmp
jl
mov
cmp
je
mov
and
lea
mov
mov
mov
push
push
call
push
push
call
sub
jns
lea
xor
mov
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
mov
test
jne
mov
test
jne
lea
lea
push
lea
mov
mov
mov
movl
call
call
push
push
push
call
mov
cmp
je
testl
jne
mov
cmp
jne
push
mov
push
add
push
call
add
lea
call
mov
pop
pop
pop
pop
xor
xor
call
add
ret
push
push
mov
call
mov
cmp
je
cmp
je
push
call
add
push
call
add
mov
jmp
int3
int3
int3
int3
int3
int3
mov
mov
mov
and
sub
and
mov
and
sub
sub
sar
sar
add
add
mov
shr
shl
add
mov
and
lea
and
mov
shl
sub
push
not
and
call
test
je
mov
add
lea
push
push
mov
call
test
js
mov
test
je
mov
push
lea
push
push
mov
movl
movl
movl
movl
call
add
pop
add
ret
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
push
push
je
test
je
sar
mov
mov
mov
push
push
push
push
push
call
xor
lea
jmp
lea
mov
test
jne
cmp
jl
pop
pop
pop
xor
pop
ret
int3
int3
int3
int3
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
pop
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
push
mov
xor
mov
mov
and
or
push
push
jne
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
call
push
lea
call
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
or
movl
jne
movl
mov
mov
mov
mov
push
push
push
push
mov
push
lea
mov
lea
mov
call
testb
jne
mov
mov
mov
call
cmpb
je
mov
push
push
mov
push
push
push
lea
push
lea
push
mov
push
push
mov
mov
call
mov
push
push
push
lea
push
lea
push
push
mov
call
mov
add
testl
jne
cmpl
jne
mov
mov
cmp
mov
mov
mov
mov
mov
mov
jne
cmp
jne
mov
mov
mov
mov
lea
mov
push
lea
mov
mov
push
push
call
mov
mov
mov
mov
mov
cmp
je
mov
mov
xor
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
add
mov
add
add
add
mov
lea
sub
mov
movl
jmp
mov
add
lea
push
mov
call
subl
jne
mov
lea
call
test
jne
mov
mov
cmp
jne
mov
mov
cmp
jne
cmpl
mov
jne
push
mov
call
mov
mov
cmp
jne
andl
xor
pop
pop
pop
mov
pop
ret
mov
and
or
je
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
movl
movl
mov
push
call
jmp
mov
cmp
jne
movl
mov
cmp
jne
xor
push
push
mov
push
mov
push
push
mov
push
mov
push
push
push
push
lea
push
call
jmp
xor
cmp
sete
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
push
je
cmp
je
mov
mov
test
jne
cmp
je
test
jne
cmp
je
cmp
je
cmp
je
xor
mov
pop
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
add
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
add
jmp
int3
int3
int3
int3
int3
int3
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
ret
mov
pushl
mov
pushl
add
push
call
movsbl
add
and
ret
mov
test
je
push
mov
push
lea
movsl
movsl
movsl
movsl
pop
pop
xor
inc
ret
int3
push
mov
mov
test
push
jne
mov
test
je
mov
test
je
push
mov
test
jne
mov
mov
mov
call
lea
mov
mov
test
jne
test
movl
mov
jne
mov
mov
pop
pop
mov
xor
pop
ret
mov
pop
mov
xor
pop
ret
call
lea
call
mov
test
je
mov
pop
pop
mov
xor
pop
ret
push
mov
sub
andl
push
push
push
push
mov
push
lea
push
mov
call
test
jne
lea
call
mov
jmp
call
test
jne
push
call
test
pop
je
andl
andl
mov
push
push
mov
push
mov
call
test
jne
jmp
mov
lea
mov
add
lea
cmp
je
cmpl
jne
lea
call
mov
xor
mov
and
inc
shl
shr
lea
or
cmpl
je
lea
call
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
sub
mov
xor
mov
mov
push
push
push
lea
push
push
lea
push
push
call
mov
add
cmp
je
mov
mov
mov
lea
lea
cmp
jae
lea
cmp
ja
cmp
jb
mov
cmp
lea
jne
mov
test
jne
test
je
mov
cmp
jbe
and
mov
movb
mov
test
jbe
mov
push
lea
push
add
push
call
add
pop
pop
pop
mov
xor
call
add
ret
cmpl
jg
mov
sub
jmp
test
jne
push
push
push
push
mov
call
test
jne
mov
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
je
xor
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
ret
mov
lea
push
mov
or
lock
dec
pop
je
ret
movl
movl
movl
mov
test
movl
je
andl
andl
push
call
pop
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
mov
push
call
push
mov
call
add
lea
push
mov
mov
mov
lea
push
push
mov
movl
call
mov
mov
mov
movl
cmpl
je
mov
test
jne
test
jne
pop
pop
xor
pop
add
ret
mov
mov
cmpl
je
mov
lea
push
call
xor
ret
mov
pushl
mov
push
call
decl
push
je
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
mov
xor
add
cmp
je
cmp
mov
mov
movl
mov
mov
mov
mov
mov
jne
mov
mov
push
call
mov
call
mov
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
cmp
push
jne
test
je
mov
mov
lea
mov
cmp
jne
sub
add
add
test
jne
mov
pop
ret
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
xor
cmp
push
lea
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
mov
jne
mov
push
mov
call
mov
test
js
mov
lea
mov
push
lea
lea
movl
mov
mov
call
mov
test
js
mov
push
lea
mov
call
mov
mov
lea
push
push
call
test
mov
js
mov
cmp
lea
je
mov
mov
lea
push
push
push
call
test
mov
js
mov
push
mov
call
mov
test
js
mov
cmp
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
push
mov
call
mov
test
js
mov
cmp
mov
je
mov
mov
lea
push
push
push
call
test
mov
js
mov
push
lea
call
mov
test
js
mov
push
lea
mov
call
mov
mov
lea
push
push
call
test
mov
js
mov
cmp
lea
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
push
mov
call
mov
test
js
mov
push
lea
mov
call
mov
mov
lea
push
push
call
test
mov
lea
js
mov
mov
call
lea
call
lea
call
lea
call
lea
call
lea
call
xor
pop
pop
add
ret
push
mov
push
push
mov
call
test
je
mov
mov
imul
add
push
call
mov
test
pop
je
push
pushl
push
call
mov
mov
xor
add
and
xor
mov
xor
inc
pop
pop
pop
ret
push
push
mov
lea
push
mov
call
test
je
pop
pop
ret
andl
push
call
pop
xor
jmp
push
mov
push
push
andl
push
push
push
lea
mov
call
mov
lea
push
push
call
mov
test
js
andl
push
pushl
mov
mov
lea
call
cmpl
jne
mov
mov
mov
mov
lea
call
lea
call
pop
mov
pop
pop
leave
ret
mov
pushl
add
mov
push
call
ret
mov
pushl
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
xor
push
lea
mov
call
mov
cmp
je
mov
mov
mov
push
call
test
js
mov
mov
mov
push
mov
push
push
mov
call
mov
lea
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
push
push
lea
mov
mov
call
mov
cmpw
je
xor
pop
pop
pop
add
ret
push
push
call
add
pop
xor
pop
add
ret
push
mov
and
mov
sub
push
push
mov
andl
andl
push
mov
movl
call
test
jne
pushl
mov
call
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
movl
movl
cmpl
push
je
lea
push
call
add
push
push
lea
movl
movl
call
lea
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
mov
je
testl
jne
mov
test
jne
testb
pop
pop
je
push
call
add
mov
pop
mov
pop
xor
call
add
ret
mov
call
test
je
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
cmpl
jne
mov
push
push
mov
mov
push
mov
mov
call
mov
mov
mov
push
mov
call
cmp
jne
mov
add
cmp
jne
mov
mov
mov
add
cmp
ja
pop
pop
pop
pop
ret
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
mov
xor
cmp
push
mov
mov
mov
mov
push
lea
jne
mov
mov
mov
push
push
push
push
push
push
call
cmp
pop
pop
jne
mov
mov
ret
cmp
je
lea
cmp
ja
movzbl
jmp
movl
jmp
add
mov
mov
ret
push
movsb
or
pop
movsb
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
test
je
mov
mov
cmp
push
jne
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
mov
sub
test
push
push
push
je
lea
mov
push
call
mov
add
test
jne
test
mov
jne
mov
cmp
jb
mov
push
push
push
call
add
cmp
je
mov
push
push
call
mov
add
cmpb
je
cmpb
je
cmpb
je
cmpb
je
cmpb
je
mov
cmp
je
push
call
add
xor
pop
pop
pop
mov
pop
ret
mov
cmpl
je
push
push
lea
push
mov
call
mov
test
je
mov
push
call
mov
lea
mov
movsl
movsl
movsl
movsl
pop
pop
movw
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
test
je
push
mov
mov
push
xor
mov
push
mov
mov
mov
call
mov
add
lea
lea
push
mov
mov
mov
push
mov
movl
movl
movb
call
mov
test
js
push
push
lea
push
lea
mov
call
mov
mov
mov
lea
lea
push
movl
mov
mov
mov
call
test
je
mov
mov
mov
push
call
movl
cmpl
mov
mov
movl
je
mov
test
movl
je
mov
add
push
call
add
test
jne
push
call
add
mov
push
call
add
lea
call
mov
pop
pop
mov
pop
pop
xor
call
add
ret
push
call
add
test
je
mov
call
test
je
mov
mov
mov
push
call
mov
mov
push
push
mov
call
mov
test
js
mov
lea
push
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
call
test
jne
lea
cmpl
je
mov
movzbl
and
cmp
jne
cmpl
jne
test
jne
mov
mov
shr
cmp
jne
mov
pop
pop
ret
sub
cmp
ja
movzbl
jmp
cmpl
je
lea
jmp
xor
pop
pop
ret
cmc
cmpsl
or
inc
test
adc
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
sub
cmpb
je
cmpb
je
push
mov
push
xor
cmp
push
mov
je
push
mov
cmp
je
mov
mov
mov
lea
push
push
push
call
mov
lea
push
mov
push
mov
mov
mov
push
push
call
test
mov
js
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
mov
jne
mov
push
lea
call
testl
jne
mov
mov
mov
push
push
mov
call
test
js
mov
mov
mov
push
push
push
push
mov
call
test
mov
js
cmp
mov
mov
mov
je
mov
cmp
je
mov
push
call
add
lea
call
mov
push
push
lea
call
test
je
mov
mov
add
test
mov
mov
movl
movl
mov
je
mov
mov
mov
mov
mov
push
lea
push
mov
push
mov
push
push
push
mov
push
push
push
call
mov
add
test
mov
jne
test
jne
addl
test
je
lea
call
mov
push
call
add
xor
mov
mov
push
push
call
add
cmp
je
mov
cmp
mov
je
cmp
je
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
push
push
call
test
js
mov
mov
push
mov
call
mov
cmp
mov
jne
lea
call
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
push
mov
push
push
sub
lea
cmp
movl
movl
movl
je
mov
test
mov
je
testb
mov
je
mov
mov
sub
push
mov
movl
call
add
mov
add
push
call
add
test
jne
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
push
mov
push
push
xor
mov
mov
mov
mov
cmp
jne
mov
mov
lea
mov
mov
mov
cmpl
jne
push
lea
mov
mov
call
push
lea
call
mov
mov
sub
sar
push
lea
push
mov
mov
lea
push
lea
push
mov
lea
mov
call
mov
mov
add
test
jne
test
jne
test
js
push
call
add
cmp
je
mov
mov
mov
xor
cmp
sete
movl
mov
mov
add
test
mov
jne
mov
test
mov
je
mov
mov
push
call
mov
mov
mov
mov
cmp
je
xor
mov
cmp
mov
jne
lea
call
lea
call
cmp
je
push
call
add
cmp
je
mov
movl
movl
mov
mov
mov
cmp
mov
je
mov
push
lea
mov
push
mov
call
add
test
js
mov
test
mov
mov
jne
xor
pop
pop
pop
pop
add
ret
sub
je
sub
je
sub
je
mov
jmp
mov
mov
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
sub
test
push
jle
mov
mov
mov
cmpb
je
mov
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
xor
pop
add
ret
xor
xor
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
mov
push
mov
mov
call
mov
lea
lea
push
mov
xor
mov
mov
push
mov
movl
movl
mov
call
test
js
mov
mov
push
push
mov
push
call
mov
lea
lea
push
mov
mov
mov
mov
push
mov
mov
movl
mov
call
push
lea
call
test
je
cmp
je
mov
push
push
push
or
mov
call
mov
mov
mov
push
push
push
call
mov
lea
lea
push
mov
mov
mov
push
mov
mov
movl
mov
call
test
js
mov
mov
mov
push
push
push
call
mov
push
push
push
or
mov
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
xor
mov
pop
pop
pop
pop
xor
call
add
ret
push
mov
lea
call
cmp
jne
jmp
mov
push
mov
test
jne
xor
test
jne
pop
ret
mov
cmpb
je
mov
mov
mov
xor
ret
test
je
push
push
push
mov
call
mov
push
push
call
lea
push
mov
call
mov
push
push
call
mov
lea
push
push
call
mov
add
push
push
call
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
mov
cmpl
jne
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
call
lea
push
lea
push
push
mov
call
cmp
jg
xor
movzbl
mov
shr
and
cmp
jne
xor
mov
cmp
jg
xor
shr
and
cmp
jne
xor
test
jne
test
jne
pop
pop
pop
mov
pop
ret
push
call
add
test
je
movl
mov
movl
mov
mov
push
mov
call
push
call
test
js
mov
call
test
je
mov
mov
push
call
pop
pop
pop
mov
pop
ret
mov
jmp
mov
jmp
mov
jmp
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
call
mov
xor
mov
mov
mov
mov
lea
mov
call
mov
mov
mov
mov
lea
mov
mov
push
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
push
call
mov
cmp
je
cmp
je
testb
jne
testb
jne
mov
lea
push
push
mov
call
mov
xor
cmpb
mov
je
mov
mov
mov
mov
mov
mov
lea
call
lea
push
lea
push
push
mov
call
mov
cmp
jg
testb
jne
mov
cmpb
je
mov
mov
mov
mov
mov
lea
mov
call
lea
push
lea
push
push
mov
call
mov
cmp
jg
testb
jne
mov
mov
xor
cmp
mov
mov
jne
mov
xor
cmp
mov
jne
testb
jne
testb
jne
test
jne
testb
jne
mov
lea
push
lea
push
push
mov
call
testb
je
mov
and
xor
or
jne
orb
mov
call
pop
pop
xor
pop
mov
pop
ret
testb
je
jmp
cmpb
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
push
mov
mov
push
mov
sub
mov
mov
sub
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
lea
mov
call
mov
mov
mov
push
lea
push
call
mov
cmp
jg
mov
cmp
jg
movl
mov
lea
call
test
je
mov
mov
mov
push
lea
push
push
call
mov
push
call
mov
mov
mov
mov
mov
mov
cmp
mov
mov
lea
mov
jl
cmp
jl
mov
mov
mov
mov
mov
mov
mov
xor
lea
mov
call
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
lea
call
test
je
mov
mov
pop
pop
pop
add
ret
mov
mov
lea
push
mov
lea
mov
mov
push
push
lea
call
mov
lea
push
lea
push
push
call
mov
pop
pop
mov
pop
add
ret
mov
jmp
push
mov
push
push
andl
test
push
je
mov
lea
push
push
push
call
mov
push
mov
and
jne
pushl
lea
call
test
pop
jne
pushl
mov
pushl
mov
call
pop
pop
mov
lea
call
mov
pop
leave
ret
movswl
cmp
jg
je
dec
jne
xor
ret
dec
je
dec
dec
jne
mov
ret
sub
je
sub
je
sub
jne
mov
ret
mov
ret
sub
jne
mov
ret
mov
ret
mov
ret
mov
ret
or
ret
push
mov
and
sub
mov
xor
mov
mov
mov
push
push
mov
push
lea
push
lea
push
push
mov
xor
lea
push
push
push
xor
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
call
add
cmp
je
push
lea
mov
mov
call
mov
mov
lea
lea
push
push
call
test
js
mov
cmp
mov
mov
mov
mov
mov
mov
movl
je
mov
lea
push
push
push
mov
call
mov
cmp
jne
mov
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
lea
call
mov
cmp
je
mov
mov
push
call
mov
cmp
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
cmpl
jne
jmp
mov
test
je
mov
mov
mov
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
test
je
sar
add
lea
or
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
lea
push
movb
call
test
je
movl
mov
mov
mov
lea
cmp
je
movzwl
movzwl
add
sub
sar
je
cmpw
je
sub
add
test
jne
cmp
jne
push
lea
push
call
mov
mov
cmpw
je
xor
pop
pop
pop
ret
pop
pop
mov
pop
ret
mov
sub
push
call
test
je
mov
pop
pop
xor
pop
ret
push
mov
mov
mov
mov
push
push
call
andl
push
mov
lea
call
mov
test
je
pushl
mov
pushl
push
call
mov
lea
call
mov
pop
pop
ret
int3
int3
push
mov
push
push
lea
mov
nop
mov
test
movl
je
mov
mov
push
call
add
sub
jne
lea
xor
call
lea
xor
mov
movb
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
mov
test
push
jle
cmpl
jle
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmp
jne
mov
pop
ret
xor
pop
ret
cmpl
jle
cmpl
jg
mov
pop
ret
mov
test
je
mov
mov
mov
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
xor
call
mov
test
movl
pop
jne
ret
mov
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
push
mov
push
mov
mov
mov
mov
mov
lea
call
test
je
mov
xor
cmp
mov
mov
mov
je
push
call
add
movl
lea
push
lea
mov
call
cmp
jne
mov
cmp
je
lea
mov
mov
push
lea
mov
movl
movl
movb
call
mov
mov
push
push
mov
or
call
add
cmp
lea
je
add
push
mov
call
test
je
mov
mov
mov
push
push
lea
push
or
call
mov
lea
mov
mov
lea
movl
movl
movl
movb
mov
push
push
mov
call
mov
push
push
push
lea
call
mov
mov
push
push
mov
push
call
lea
push
mov
call
cmpl
jne
push
call
add
test
je
mov
test
mov
movl
mov
je
mov
mov
push
call
lea
push
lea
movl
movl
movl
call
movl
movb
movb
push
lea
lea
call
test
je
mov
test
mov
jne
mov
test
je
mov
add
push
call
add
test
je
mov
test
jne
test
jne
mov
mov
lea
cmp
ja
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
cmp
ja
mov
test
je
xor
mov
mov
mov
mov
mov
push
mov
call
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
push
lea
call
cmp
je
mov
mov
cmp
je
cmp
je
push
call
add
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
test
jne
jmp
push
call
add
jmp
lea
push
push
call
add
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
cmp
push
mov
push
mov
je
mov
mov
lea
cmp
jb
mov
cmp
jb
mov
cmp
lea
jne
mov
test
je
cmpl
jg
mov
sub
cmp
jbe
and
mov
movb
mov
test
jbe
mov
add
push
push
push
call
add
pop
pop
pop
mov
xor
call
add
ret
test
je
mov
jmp
push
mov
push
push
push
mov
call
test
jne
mov
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
test
jbe
push
push
push
mov
xor
mov
lea
cmpl
mov
lea
jne
mov
mov
push
push
push
or
call
mov
push
push
push
call
mov
mov
push
push
mov
push
call
mov
push
push
push
call
add
subl
jne
pop
pop
pop
pop
ret
mov
lea
xor
inc
lock
inc
ret
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
je
mov
test
mov
push
mov
mov
mov
je
test
jne
mov
mov
and
push
jne
test
jne
test
je
mov
lea
push
push
push
mov
call
test
je
mov
movw
testb
movb
movl
pop
jne
mov
test
je
mov
lea
push
push
push
mov
call
test
js
cmpb
je
andl
xor
pop
ret
orl
xor
pop
ret
int3
int3
int3
int3
int3
mov
sub
push
push
push
call
test
je
cmpl
mov
mov
movl
je
mov
mov
test
jne
mov
test
jne
mov
mov
lea
push
push
call
movzwl
cmp
jne
mov
mov
mov
push
push
mov
push
push
push
mov
call
lea
call
pop
pop
xor
pop
add
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
cmpl
push
mov
jne
test
jl
test
je
mov
lea
push
xor
mov
mov
mov
mov
movl
movl
mov
call
cmp
je
mov
cmp
mov
jne
mov
shr
sub
cmp
jle
testb
mov
push
mov
jne
add
push
lea
je
mov
mov
mov
call
test
je
mov
lea
push
lea
call
add
mov
test
mov
mov
jle
push
push
mov
push
call
add
cmp
jne
testl
jne
cmp
jge
test
jne
push
push
lea
xor
call
mov
mov
test
movl
pop
jne
test
jne
mov
pop
mov
pop
pop
xor
call
add
ret
int3
int3
push
xor
cmp
je
push
mov
push
mov
mov
cmp
push
lea
jne
cmp
je
mov
mov
mov
cmp
jne
sub
add
add
cmp
jne
mov
xor
cmp
mov
movl
mov
mov
mov
mov
mov
mov
jne
mov
lea
call
push
push
call
mov
pop
mov
mov
pop
pop
xor
pop
ret
push
mov
push
push
xor
cmp
je
pushl
mov
lea
mov
call
cmp
je
pushl
mov
pushl
mov
pushl
push
call
mov
lea
call
mov
pop
leave
ret
mov
test
je
pushl
mov
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
push
push
mov
push
lea
push
mov
mov
call
cmpl
je
mov
sub
mov
mov
jne
push
call
xor
test
jne
testb
jne
testb
jne
mov
pop
pop
pop
pop
ret
mov
mov
push
call
test
js
pop
pop
pop
pop
ret
mov
mov
push
call
mov
jmp
push
call
test
je
mov
jmp
push
mov
mov
call
test
je
push
lea
mov
cmp
je
mov
call
test
jne
pop
pop
ret
xor
pop
ret
xor
inc
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
push
push
and
or
push
push
jne
mov
mov
mov
test
je
mov
test
jne
mov
mov
test
je
mov
test
je
mov
test
jne
mov
test
je
mov
mov
lea
call
test
jne
lea
call
test
jne
mov
call
mov
mov
mov
test
je
mov
test
jne
mov
push
push
call
mov
mov
call
test
jne
lea
cmpl
jne
mov
call
test
jne
add
cmpl
jne
movzbl
lea
push
lea
call
call
test
je
movzbl
add
push
lea
call
call
test
je
mov
and
jne
xor
jne
mov
pop
pop
pop
pop
mov
pop
ret
mov
call
test
jne
pop
xor
pop
pop
pop
mov
pop
ret
mov
test
je
mov
test
jne
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
mov
mov
push
push
push
call
mov
add
cmp
jne
mov
mov
call
test
jne
lea
mov
call
test
jne
lea
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
testb
jne
push
mov
mov
sub
lea
lea
sub
mov
mov
cmp
jne
mov
cmp
jne
add
lea
add
cmp
jle
mov
mov
call
test
je
cmpl
jne
mov
cmpl
jne
mov
cmp
jne
mov
test
jne
mov
test
jne
mov
test
jne
mov
pop
pop
pop
pop
pop
ret
mov
xor
mov
sub
mov
mov
cmp
je
test
je
test
je
mov
cmp
jne
mov
test
mov
jne
test
jne
add
add
cmp
jle
mov
pop
pop
pop
pop
pop
ret
xor
jmp
xor
jmp
cmpl
je
lea
jmp
cmpl
je
lea
jmp
mov
lea
push
push
mov
call
test
js
mov
test
je
test
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
lea
lea
call
test
jne
pop
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
jne
ret
push
mov
lea
push
push
mov
call
test
js
mov
test
je
test
jne
mov
pop
ret
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
fldz
push
mov
fsts
push
fstps
push
xor
mov
mov
mov
mov
mov
cmp
mov
je
mov
cmp
jne
mov
mov
test
je
mov
test
je
nop
mov
test
jne
mov
cmp
je
mov
mov
movzbl
lea
push
lea
call
mov
call
cmp
jne
mov
call
add
movzbl
add
push
lea
call
mov
call
cmp
jne
mov
call
add
mov
mov
mov
test
je
mov
test
jne
mov
mov
test
je
mov
test
je
lea
mov
test
jne
mov
test
je
mov
mov
movzbl
lea
push
lea
call
mov
call
cmp
jne
mov
call
add
movzbl
add
push
lea
call
mov
call
cmp
jne
mov
call
add
mov
mov
call
mov
call
test
jne
lea
mov
add
mov
call
test
jne
lea
mov
add
mov
call
push
mov
push
push
call
test
jne
mov
pop
pop
pop
mov
pop
ret
mov
test
je
mov
test
jne
mov
call
test
jne
jmp
mov
cmp
jne
mov
call
cmp
jne
jmp
mov
cmp
je
jmp
mov
mov
mov
call
mov
lea
push
movzbl
push
mov
push
mov
push
push
mov
call
mov
mov
mov
add
imul
mov
call
mov
mov
lea
push
movzbl
push
mov
push
mov
push
mov
call
test
je
mov
fldz
mov
mov
add
imul
fstps
pop
pop
mov
mov
pop
mov
pop
ret
int3
int3
mov
test
jg
ret
push
push
mov
push
xor
mov
test
jl
cmp
jge
mov
lea
test
jl
cltd
idivl
mov
mov
test
je
mov
call
test
jne
mov
mov
push
push
push
call
mov
add
cmp
jl
pop
pop
pop
ret
mov
cmp
mov
je
sub
neg
sbb
not
and
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
add
test
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
push
mov
push
xor
push
mov
mov
call
test
je
mov
mov
add
cmp
je
mov
and
cmp
jne
cmp
je
lea
mov
mov
mov
movl
movl
mov
mov
mov
sub
je
sub
je
push
mov
call
cmp
je
push
lea
mov
call
test
je
mov
lea
push
push
call
add
or
lea
call
mov
test
je
mov
mov
lea
mov
or
mov
lea
not
add
and
mov
test
jne
mov
lea
cmp
jae
movsbw
movzwl
mov
movzwl
mov
and
test
je
add
cmp
jb
mov
push
push
push
lea
push
mov
call
mov
mov
push
call
add
lea
push
push
mov
call
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
xor
call
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
je
sbb
adc
add
test
jne
jmp
mov
mov
mov
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
jne
add
xor
call
pop
xor
pop
ret
mov
shr
je
mov
test
je
mov
and
lea
mov
mov
test
je
test
jne
sub
pusha
push
call
mov
cmpsl
loopne
leave
into
mov
popa
mov
add
xchg
addl
add
push
adc
add
lock
in
insb
add
add
lret
add
add
pop
add
add
cmpsb
add
mov
mov
push
mov
add
push
push
lea
push
push
push
push
push
lea
push
push
push
push
call
add
rclb
add
addl
add
movb
add
out
mov
add
imul
fcomps
inc
in
push
push
push
push
push
push
push
push
lea
push
push
call
add
mov
xchg
mov
add
jecxz
gs
ja
add
imul
movsl
int
movsb
add
add
loopne
add
lea
add
pop
add
add
filds
mov
add
outsl
mov
jl
outsl
add
roll
sub
pop
push
push
push
push
push
lea
push
push
call
out
mov
add
jge
sti
add
add
out
xchg
imul
jns
jmp
xchg
add
int
sub
pop
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
fs
jnp
add
pop
out
cli
add
imul
add
leave
sahf
imul
xchg
mov
shlb
cld
add
xchg
roll
cmc
pop
mov
shl
fmuls
roll
push
add
ljmp
add
add
push
in
in
call
push
push
lea
push
push
push
push
push
push
push
push
push
call
in
scas
xchg
cmpsl
test
add
in
push
mov
add
add
add
enter
mov
out
add
shll
pop
add
add
add
add
xchg
iret
add
add
cli
lds
add
call
push
push
lea
push
lea
push
push
push
push
push
push
push
call
enter
fiadds
xchg
pop
popa
pop
data16
mov
push
imull
aad
add
fistpll
add
lahf
jno
sub
pop
jmp
push
lea
push
push
push
push
push
push
push
push
lea
push
call
add
mov
shr
mov
add
roll
mov
add
mov
mov
cmpsl
add
out
add
add
add
ret
idivl
sahf
add
add
lcall
push
push
push
push
push
push
call
add
mov
jle
push
arpl
out
push
add
jno
add
ljmp
push
in
mov
add
cwtl
pop
xlat
xchg
roll
mov
mov
pop
sti
cmpsb
jb
add
pop
add
add
in
call
mov
push
push
push
call
popa
add
out
bound
cmpsb
mov
pop
mov
add
hlt
scas
cli
rclb
pusha
jo
loopne
xchg
fsub
popa
jne
mov
add
clc
jl
scas
jb
mov
lcall
pop
in
add
push
lea
push
call
add
add
incb
push
add
mov
add
jmp
lahf
fmull
fwait
add
bound
out
iret
add
pusha
fprem1
ljmp
in
clc
pop
add
push
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
add
add
xchg
incb
add
push
add
bound
add
add
xchg
add
scas
push
add
jo
jb
add
jge
test
jmp
test
test
nop
add
rcll
lret
add
pop
add
cmp
push
push
push
push
push
push
push
call
hlt
mov
add
mov
add
jns
xchg
pop
xchg
testb
add
add
add
fdivrp
out
push
mov
sub
pop
xor
push
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
add
jbe
push
xchg
pop
mov
add
add
add
icebp
in
add
pop
movsl
cwtl
fs
sahf
add
push
mov
adcb
xchg
out
add
imul
lcall
in
add
stos
add
add
xchg
push
addl
xchg
add
xlat
add
lcall
les
iret
jnp
lods
push
shr
ror
add
push
xor
add
dec
ror
sub
dec
pop
inc
pop
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
shlb
lock
jmp
fisubs
into
shll
rcl
imul
fisubrl
add
add
mov
mov
jl
add
sarl
mov
clc
add
filds
add
rol
pop
subb
add
stos
addl
pop
pushl
push
push
push
push
push
lea
push
push
lea
push
call
fsub
pop
add
rcrl
sbb
bound
push
xchg
pop
add
add
jp
jns
add
ljmp
cmpsb
shrl
push
mov
add
xchg
repnz
lds
imul
pop
add
push
lea
push
push
push
push
push
push
push
push
call
add
jae
add
data16
mov
in
add
out
jge
cli
add
cli
cmpsl
sub
pop
mov
movl
push
lea
push
lea
push
push
push
push
push
push
push
push
call
in
push
mov
add
add
mov
mov
add
push
clc
add
add
imul
add
add
scas
push
ja
add
add
pop
jns
lretw
add
icebp
out
movsb
mov
add
ljmp
push
cli
push
add
push
add
loope
add
in
fcomps
inc
call
dec
mov
push
mov
jl
push
inc
lea
push
push
push
push
push
push
call
fwait
mov
mov
fstps
add
fdivr
mov
pusha
add
mov
lods
xchg
add
add
mov
stos
add
add
add
aam
lods
xchg
addr16
pop
push
push
push
push
lea
push
push
call
mov
add
add
pop
add
jae
lret
addb
add
scas
add
fwait
jne
mov
add
push
data16
lcall
jne
pushl
push
lea
push
push
call
pop
ja
mov
add
cwtl
out
shl
pusha
add
iret
add
xchg
mov
add
jbe
filds
add
test
add
add
lea
add
add
in
add
roll
mov
add
add
pop
call
pushl
push
push
push
push
push
call
add
push
push
mov
add
add
add
add
mov
fcomip
add
push
pop
add
add
mov
les
out
sti
addl
mov
add
add
sub
pop
pushl
push
push
push
call
jbe
ja
add
add
pop
test
jle
fdivrl
add
add
jp
lcall
fildl
clc
add
mov
jle
fwait
jmp
rcr
jecxz
movl
add
mov
iret
jns
add
mov
add
mov
add
fisubs
sub
pop
call
push
push
xor
lea
push
and
add
sub
lea
add
sub
pop
shl
pop
push
lea
push
push
lea
push
lea
push
push
lea
push
lea
push
call
loop
add
test
push
mov
add
cltd
bnd
pop
jnp
cltd
fsubrp
add
loope
add
mov
mov
add
add
add
lods
add
add
add
lods
mov
addr16
add
in
mov
mov
add
add
call
add
scas
sub
pop
pushl
call
push
push
push
push
call
push
add
ja
xchg
mov
add
popf
int
add
movsb
scas
mov
mov
insb
push
out
add
cld
add
add
std
add
push
data16
in
add
add
icebp
add
pop
push
push
push
lea
rol
sub
push
or
not
add
shr
ror
sub
shl
pop
dec
ror
pop
push
push
push
push
lea
push
call
rcrb
js
add
jb
add
js
add
add
insb
js
add
in
int
loop
clc
add
add
mov
addl
add
add
mov
in
in
pop
push
push
push
push
push
push
lea
push
push
push
call
xchg
add
mov
int
add
add
js
mov
movl
popa
add
mov
fcomps
mov
js
rclb
add
out
mov
add
add
add
jecxz
int
add
mov
in
loopne
lcall
add
lea
push
push
push
push
lea
push
push
call
lahf
jge
testb
out
mov
add
mov
mov
loope
mov
push
data16
mov
add
in
testb
add
add
ficoml
add
add
push
nop
clc
add
add
in
loopne
call
mov
push
push
lea
push
call
fwait
add
mov
mov
add
out
add
xchg
add
fs
add
xchg
add
fdivrp
sahf
mov
add
mov
lcall
mov
jb
jmp
popf
mov
add
rcrl
cld
into
movsb
pop
mov
fldl
jne
add
add
lcall
push
lea
push
lea
push
push
push
call
bound
pop
in
stos
add
jmp
outsl
add
add
imul
mov
add
jns
sub
pop
push
mov
push
lea
push
push
lea
push
lea
push
push
push
lea
push
call
mov
lods
xchg
je
xchg
add
add
hlt
push
add
ja
cli
add
add
aam
add
xchg
add
add
popf
addb
add
add
add
add
push
add
jns
faddl
aad
add
add
in
loopne
lcall
pop
in
add
push
push
push
push
push
push
lea
push
call
pop
pop
add
out
cwtl
lods
add
in
add
xlat
out
add
add
add
mov
jb
push
add
sahf
loop
add
nop
arpl
add
loope
add
mov
call
add
icebp
repnz
bound
add
mov
add
pop
add
mov
push
push
push
push
call
mov
jnp
mov
jne
rclb
mov
add
repnz
addl
cli
nop
xchg
push
mov
loop
stc
nop
add
xlat
add
cmc
cmc
add
xchg
outsl
je
nop
add
jo
iret
out
add
mov
in
hlt
lcall
xor
push
push
push
push
push
call
ljmp
add
pop
loope
xchg
test
test
fistl
add
push
mov
je
add
movsl
subb
add
mov
add
into
add
mov
mov
lcall
sub
pop
add
push
lea
push
lea
push
push
push
push
push
push
push
call
popf
mov
add
add
push
movsb
lahf
add
xlat
movsb
mov
fiadds
popa
mov
imul
jbe
add
aad
add
push
xchg
add
jns
jnp
mov
add
mov
shl
add
test
xchg
cltd
bound
pop
lea
lds
fcompl
jne
push
push
push
push
push
call
add
add
fcomip
nop
lods
jae
add
jbe
rcr
mov
insb
sti
jnp
add
sarb
xlat
mov
arpl
popf
add
bound
add
mov
movsb
push
add
mov
pushf
xchg
xchg
cmpsl
add
add
add
aam
pop
add
lods
ja
in
in
pop
push
push
push
push
push
push
call
leave
add
jbe
insb
add
ljmp
add
pop
roll
add
mov
pop
add
mov
fmulp
stos
jbe
test
ret
popf
aad
scas
cli
in
cmp
mov
add
push
add
in
in
pop
mov
push
push
push
push
lea
push
lea
push
push
push
call
add
cmpsb
loop
lea
hlt
mov
cmc
pop
jge
ffreep
add
add
add
lret
add
add
pop
add
cmpsb
add
andl
pop
aam
cmpsb
add
add
add
xchg
xlat
mov
cltd
add
jp
add
in
xor
push
push
push
push
lea
push
push
push
call
jae
add
add
push
mov
iret
rcll
add
xorl
add
add
not
add
mov
add
mov
add
mov
in
add
push
push
push
push
push
call
test
sti
xlat
add
add
add
pop
movsb
subb
add
data16
push
push
mov
jecxz
add
test
add
pop
push
push
push
call
pop
add
jb
je
add
mov
pushf
je
ljmp
add
mov
ror
int
add
add
data16
add
ljmp
xlat
cld
clc
mov
mov
mov
stos
jae
push
jp
push
push
loope
fs
je
jns
mov
mov
xor
push
lea
push
call
xchg
rolb
add
rolb
ret
ljmp
add
in
add
fidivl
test
add
xchg
popf
add
flds
xchg
in
shl
add
push
add
rolb
in
jge
mov
add
mov
add
mov
loopne
add
pop
add
pop
sub
pop
push
push
push
lea
push
push
push
call
add
test
add
push
jbe
add
out
add
fistl
add
add
add
fistpll
mov
xor
push
push
lea
push
push
call
rcrb
jnp
loop
ljmp
pop
scas
add
pusha
mov
stos
out
add
push
mov
or
leave
out
sahf
add
push
sub
pop
sub
pop
push
push
push
push
push
push
lea
push
push
push
lea
push
call
shll
add
add
je
xor
add
icebp
ljmp
jecxz
xlat
ljmp
add
jecxz
jae
in
fcomps
movsb
push
lea
push
push
push
lea
push
push
push
push
push
push
call
mov
rcr
add
mov
mov
pop
add
add
iret
pop
test
jle
lds
lcall
xchg
add
loop
cltd
hlt
add
add
rcl
insb
lods
jne
add
add
mov
pop
pop
mov
push
push
call
add
xchg
mov
fs
add
xchg
rclb
add
add
mov
add
add
out
add
cwtl
rolb
mov
pusha
add
add
scas
ljmp
fbld
subb
lret
add
add
gs
fwait
add
out
jmp
pop
add
push
push
push
push
push
push
push
call
nop
add
jbe
mov
mov
test
add
add
iret
std
add
mov
insb
jae
add
nop
add
mov
add
add
rcrb
add
jae
in
in
add
push
push
push
lea
push
call
add
pop
xlat
add
add
clc
out
pop
mov
mov
fldl
scas
jbe
mov
lock
rolb
add
add
pop
in
xchg
cmpsb
test
loope
pop
mov
add
add
add
stos
cwtl
add
add
je
icebp
fcmovnbe
add
sub
pop
add
push
lea
push
call
out
jmp
jbe
enter
mov
jl
js
jle
pop
xchg
add
add
test
mov
call
add
add
add
add
add
popa
popf
cmc
add
iret
add
fwait
add
arpl
add
cmpsb
pop
movl
pop
mov
push
push
push
call
xchg
add
popl
add
push
lods
ret
in
test
iret
scas
pop
add
into
cld
mov
add
add
add
add
leave
add
xchg
push
add
lret
cli
pop
add
mov
add
out
leave
imulb
roll
add
add
add
out
mov
mov
jae
add
sub
pop
xor
push
push
lea
push
push
push
push
push
lea
push
push
push
call
roll
leave
loope
mov
add
fwait
xchg
pop
xlat
mov
add
push
add
movsl
jo
aam
imul
add
add
cltd
add
add
xchg
fwait
shr
push
add
je
jb
pop
add
mov
lcall
les
push
call
leave
mov
add
add
jnp
add
enter
incb
fists
cwtl
xchg
mov
faddl
ja
jl
lods
mov
je
hlt
add
test
sti
add
xchg
jae
add
lcall
push
and
repnz
jno
push
push
lea
push
push
lea
push
push
push
call
add
outsl
jp
addr16
popa
test
add
add
sbbb
mov
ljmp
ret
add
je
gs
cmpsl
add
add
sti
lret
add
mov
stos
add
push
add
add
out
lret
cli
add
xlat
mov
je
add
rolb
out
sub
pop
mov
xor
push
push
lea
push
lea
push
call
add
add
add
pop
decb
mov
repnz
add
fnsave
scas
add
add
add
mov
clc
add
add
cli
add
pop
into
test
mul
sub
pop
add
push
lea
push
push
push
push
push
lea
push
push
call
mov
ret
mov
push
mov
add
test
in
mov
add
test
stc
add
stc
lea
add
in
loopne
lcall
rorl
stos
push
shr
not
push
or
not
add
shr
add
sub
add
pop
pop
push
push
push
push
push
push
push
push
push
push
call
add
popl
add
arpl
add
add
push
mov
add
add
test
loope
cmc
roll
add
add
jp
fidivs
add
lret
in
lds
cli
cwtl
pop
js
add
clc
add
imul
add
int3
stc
sub
pop
pushl
push
push
lea
push
push
push
call
add
add
add
insb
insb
jnp
mov
fdivrl
add
insb
add
add
movsb
xchg
sub
addl
add
add
les
stc
add
sti
mov
mov
test
add
sahf
add
ljmp
sub
pop
call
push
push
call
orb
pop
lcall
xchg
iret
stos
call
insb
lcall
add
add
rclb
add
add
test
sub
pop
push
push
push
not
add
push
or
not
add
sub
shr
sub
sub
sub
not
not
pop
shr
lea
dec
pop
push
push
push
push
call
aam
test
add
add
fistl
popl
mov
add
loope
pop
leave
pop
movsb
divl
testb
in
lock
push
push
push
push
push
push
push
call
fiadds
add
add
add
mov
jge
add
jnp
mov
add
add
lret
loope
shrl
add
fisubrl
push
call
push
push
push
push
push
lea
push
push
push
push
push
call
cwtl
mov
les
push
call
addr16
testl
push
fcomps
popf
add
push
jmp
les
pop
add
mov
sub
pop
mov
push
push
lea
push
push
push
push
push
push
call
scas
jp
push
ret
popa
mov
je
fadd
mov
in
add
xchg
fs
add
xchg
faddl
lods
mov
lcall
push
push
push
lea
push
push
call
add
add
out
add
jge
add
add
out
add
add
lods
add
add
add
add
xchg
test
xchg
cltd
mov
icebp
in
in
lock
mov
push
push
push
push
call
add
add
add
add
std
xchg
popf
test
add
add
enter
je
jmp
je
cltd
add
aad
sub
pop
add
push
lea
push
push
push
push
call
pop
sarb
bnd
add
add
ja
pushf
fadds
loop
test
add
lock
add
lods
test
out
jbe
scas
pop
push
mov
add
in
lcall
ret
add
add
add
push
add
pop
mov
push
push
push
call
roll
mov
add
out
lea
jp
scas
add
add
roll
add
cmpsl
add
pop
arpl
jecxz
pop
jns
add
xchg
lock
xchg
mov
mov
add
push
out
add
pusha
mov
fwait
loop
in
clc
pop
xor
push
push
push
push
lea
push
push
lea
push
call
mov
stos
in
add
test
add
fadd
loope
add
fs
add
je
cwtl
mov
mov
add
add
add
add
add
jmp
lret
cltd
rcrb
xchg
jle
add
mov
std
add
roll
jb
add
fldcw
add
addr16
xchg
les
add
push
shl
pop
add
push
push
sub
pop
mov
push
push
lea
push
push
push
push
push
push
call
jle
jnp
je
add
jecxz
js
xchg
mov
add
add
lods
add
fwait
xchg
add
add
roll
call
mov
add
add
jb
jb
jmp
add
fiaddl
mov
in
in
lcall
add
push
push
lea
push
lea
push
push
call
add
add
add
bound
lods
jmp
add
mov
fdivs
add
add
push
fnstsw
push
orl
subl
lcall
les
push
push
push
push
push
lea
push
push
push
push
call
aad
sti
pop
cld
add
add
xchg
insb
add
loope
add
stos
pop
add
lods
add
sahf
mov
mov
add
in
test
ret
jae
mov
data16
mov
lcall
lock
push
not
shl
pop
mov
xor
push
xor
rol
pop
rep
push
sub
dec
inc
sub
pop
mov
xor
push
shl
sub
sub
pop
or
je
push
push
push
push
lea
push
push
push
push
call
xchg
push
xchg
test
cmpsl
push
sahf
insb
cmpsl
test
sti
add
bound
mov
add
cmpsb
xchg
or
mov
testb
faddl
xor
or
dec
mov
mov
leave
push
push
push
push
push
call
aam
add
cmpb
push
mov
movsl
add
fwait
add
jo
jae
add
mov
fwait
mov
ljmp
add
incb
lcall
xor
push
push
push
push
push
push
lea
push
push
push
push
call
jns
imul
movsl
add
xlat
imul
into
ljmp
cmpsb
frstor
mov
add
jl
add
in
add
push
mov
add
fnstsw
imul
icebp
add
add
xchg
add
cltd
add
add
add
in
fcomps
les
add
push
shr
shl
pop
mov
xor
push
lea
pop
add
add
push
lea
push
push
lea
push
push
lea
push
lea
push
call
lahf
mov
ficoms
pop
lods
data16
shll
jbe
cld
addb
ja
add
add
scas
aad
imul
add
bound
in
push
push
lea
xor
lea
pop
mov
xor
push
push
push
push
lea
push
push
push
push
call
lods
mov
add
add
add
add
int
add
in
pushf
xchg
add
mov
add
add
rolb
add
add
std
add
clc
sub
pop
add
push
push
lea
push
push
lea
push
push
push
push
push
call
add
add
imul
divl
add
into
insb
add
in
add
add
jns
repnz
mov
mov
xchg
movsb
out
add
pop
add
add
xchg
add
loope
xchg
add
lcall
rep
push
lea
push
lea
push
push
push
push
push
push
push
push
call
lea
mov
movsb
arpl
mov
jno
test
add
add
add
mov
add
add
add
outsl
mov
lret
lea
subl
pop
cltd
cld
add
xchg
add
add
jb
out
movl
add
leave
xchg
pop
test
fadds
iret
test
lcall
dec
sub
mov
sub
add
inc
sub
pop
or
je
push
lea
shr
inc
not
pop
mov
add
push
add
pop
add
rep
push
inc
inc
xor
pop
pop
push
push
xor
lea
lea
push
xor
add
rol
sub
shr
pop
add
pop
push
inc
pop
pop
push
push
push
lea
push
push
push
call
fincstp
add
cmpsl
mov
clc
test
lea
mov
out
mov
add
add
add
add
push
out
add
add
imul
add
call
mov
mov
push
push
lea
push
push
push
push
push
call
lods
add
enter
fsts
loope
add
add
movl
in
lock
pop
test
add
lea
add
mov
jnp
push
mov
fcom
jno
pop
pop
lods
add
add
add
sub
pop
mov
push
add
pop
jmp
push
push
lea
push
push
lea
push
push
push
push
push
push
call
loopne
push
mov
loop
add
add
add
imul
push
add
cld
mov
xlat
add
jp
sti
roll
add
add
add
adcb
arpl
push
add
xchg
add
add
add
add
add
lret
sarb
jle
in
fdivr
lcall
mov
push
dec
pop
add
push
push
push
push
push
lea
push
push
push
push
push
call
mov
add
add
stos
popf
xchg
jae
shl
add
add
loop
fnstsw
stos
mov
pop
stos
add
add
add
into
add
mov
test
add
out
enter
add
add
mov
sub
pop
push
push
push
lea
push
push
push
push
push
call
add
add
jecxz
int3
add
add
roll
add
add
subb
add
jmp
faddl
movl
cld
repnz
mov
in
in
lcall
push
push
push
push
lea
push
push
push
push
push
push
call
scas
add
faddp
int
incb
xchg
out
add
lds
add
push
movsb
mov
test
aad
add
mov
cld
xchg
add
add
jae
lods
out
in
fdivr
lcall
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
gs
movsl
jecxz
cwtl
out
shrl
mov
xlat
add
add
mov
add
add
fucompp
popf
imul
loope
lret
mov
add
pop
je
add
push
mov
add
push
push
imul
lea
push
push
push
push
push
push
push
push
call
add
add
add
xchg
mov
mov
cwtl
lock
push
pop
jmp
mov
sahf
addl
jb
jecxz
add
add
add
into
scas
push
add
pushf
push
add
pushf
add
add
loope
xchg
jbe
sub
pop
pop
push
push
call
add
lods
add
mov
xlat
add
add
lahf
add
add
add
pop
add
xchg
add
scas
mov
test
mov
popa
mov
andl
pop
addr16
rclb
mov
popf
mov
mov
add
add
out
add
sub
pop
pop
push
lea
push
push
push
push
call
jecxz
mov
mov
mov
add
ret
lea
addl
pop
std
jecxz
nop
xchg
movsl
add
add
push
push
call
push
fnstsw
aad
add
call
out
add
lret
add
add
ficomps
push
lret
xchg
add
sahf
add
flds
pop
imul
in
clc
pop
leave
push
lea
push
push
push
push
push
push
push
call
add
mov
scas
jo
fstpt
loop
in
shl
mov
fs
fstps
gs
ljmp
addr16
loopne
lcall
or
push
push
shr
shl
shl
pop
mov
push
push
push
push
push
push
push
push
call
js
addl
add
mov
add
add
enter
add
add
clc
addb
scas
sub
pop
add
push
push
push
push
call
add
add
test
jno
xchg
add
roll
int3
mov
push
mov
pop
add
bound
popa
int
sub
jnp
lods
cwtl
add
cmc
fs
push
rolb
push
add
cmpsb
add
lods
add
outsl
add
scas
jbe
add
xlat
lock
add
add
mov
push
push
mov
shrl
in
hlt
lcall
push
push
push
push
lea
push
lea
push
push
push
push
push
call
lret
xchg
jle
jecxz
stos
fucomp
cld
add
iret
fs
jae
xchg
push
add
imul
repnz
add
add
jo
cmpsb
test
lds
fsubr
rcr
mov
add
lcall
movl
push
push
push
push
push
lea
push
push
push
push
push
call
add
add
fsubrp
mov
add
add
add
imull
outsl
add
add
int3
out
add
add
add
add
int3
add
add
fiaddl
add
add
std
hlt
xor
andl
pop
addl
push
push
lea
push
call
cmpsl
push
jge
add
push
add
aad
subl
sarb
add
popa
fnstcw
mov
push
add
add
add
mov
gs
fs
int
add
add
add
mov
leave
fiadds
test
rorl
add
rorb
or
add
push
xor
ror
pop
mov
pop
push
push
push
push
lea
push
push
push
push
call
mov
add
push
add
mov
shrl
xchg
fsubrp
pop
add
fdivr
lock
test
popa
faddl
push
add
lret
loopne
lcall
pop
push
lea
push
push
push
push
push
call
mov
add
add
add
in
mov
xchg
ljmp
mov
data16
mov
jecxz
pop
lret
loop
add
mov
in
call
dec
xchg
push
xchg
push
push
push
push
call
insb
add
cmpsb
jb
roll
add
push
movsb
movsl
add
popf
out
mov
pop
xchg
add
cmpsl
add
pop
jbe
pop
mov
jne
data16
leave
push
shr
not
pop
ret
push
sub
sub
pop
push
push
push
push
push
lea
push
lea
push
push
call
add
add
imul
add
mov
push
pusha
add
add
incb
rolb
push
pop
jl
add
movsl
out
fiaddl
pushf
mov
add
jl
add
mov
je
add
jae
enter
add
push
jb
add
xchg
add
mov
add
movsb
add
pushf
pusha
add
in
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
js
imul
add
jb
add
lret
scas
fadds
test
add
mov
add
sahf
add
jle
add
fcom
mov
add
jecxz
add
movl
add
xchg
add
std
add
pop
in
add
fdivr
lcall
cld
push
lea
not
pop
push
push
push
inc
add
pop
push
push
push
push
push
lea
push
push
push
lea
push
call
lods
add
add
imul
rorl
push
jmp
add
xchg
pop
add
arpl
loopne
lcall
testl
push
ror
not
pop
addl
push
push
push
push
push
call
add
filds
add
test
icebp
rcrb
add
shl
add
lcall
lret
add
cwtl
pusha
mov
mov
pop
fstpl
add
add
add
add
add
in
xlat
pop
data16
add
mov
int3
pop
sub
pop
push
call
push
ror
shr
pop
mov
push
add
lea
xor
inc
pop
pushl
push
push
lea
push
lea
push
push
lea
push
push
call
mov
mov
add
mov
mov
std
add
add
into
lret
add
orb
add
lds
leave
xchg
add
add
add
sahf
xchg
add
mov
in
lcall
call
out
lahf
pop
push
push
push
push
push
push
push
call
add
lret
add
add
stc
test
jl
add
scas
lret
add
add
cwtl
add
data16
sub
pop
call
push
shl
ror
pop
cmpl
jne
push
push
lea
push
push
lea
push
lea
push
call
lret
add
mov
add
add
testl
add
lock
add
add
jbe
push
lock
add
add
push
add
enter
push
xchg
mov
pop
pop
add
clc
mov
pop
sub
pop
pop
push
not
sub
pop
pop
pop
push
push
push
call
test
add
add
add
mov
add
add
add
cmpsl
ficoms
out
add
add
aam
push
add
lret
jne
lret
add
xchg
jns
fistpl
pusha
add
add
add
cwtl
push
enter
out
pop
out
add
leave
push
add
lea
ror
pop
ret
push
push
rol
pop
mov
add
push
push
push
push
push
push
push
call
cli
add
push
push
stos
push
add
mov
lahf
add
test
xchg
movsb
xchg
ja
add
add
bound
add
push
lea
inc
dec
pop
push
push
push
add
inc
pop
push
push
rol
xor
pop
movl
push
lea
push
push
push
push
push
push
lea
push
call
add
in
add
icebp
bound
mov
popa
mov
xchg
js
mov
lea
add
fldl2t
add
add
lcall
add
pop
clc
call
rol
loop
ror
inc
pop
push
push
add
pop
call
push
push
push
push
push
lea
push
push
push
call
add
add
pop
add
add
add
call
add
stos
out
addl
arpl
add
fldenv
add
test
in
scas
sub
pop
subl
push
lea
pop
cmpl
jne
push
push
push
call
add
cmpsl
add
add
mov
add
add
les
add
fadds
add
jns
push
jns
popa
add
cmc
lcall
push
ror
sub
pop
pop
push
push
push
push
push
push
lea
push
push
push
push
call
add
add
loopne
mov
add
add
add
scas
enter
add
add
mov
filds
lcall
push
lea
push
lea
push
call
stos
stc
mov
add
popl
test
cmpsl
cmpsb
in
mov
add
add
lods
roll
add
push
mov
fmull
lea
lcall
leave
push
lea
push
lea
push
push
push
call
add
add
sahf
mov
roll
add
add
into
lods
add
add
cltd
popl
int
mov
add
lock
ja
mov
add
add
insb
add
popf
popa
add
popf
pop
add
testl
add
add
add
in
in
pop
ret
push
ror
lea
shr
pop
push
push
add
xor
sub
pop
mov
push
shr
rol
ror
sub
pop
add
push
push
push
lea
push
push
lea
push
call
je
fwait
add
add
pop
fsubl
jno
add
add
fsubrl
sahf
add
push
lea
movsl
test
add
add
add
add
add
mov
add
add
add
jns
add
subb
add
sub
pop
push
push
push
push
push
push
call
add
out
xchg
filds
add
add
je
in
add
jb
movsb
mov
jns
je
add
add
lods
sahf
mov
add
out
add
add
bound
addl
lock
fnstenv
lcall
push
inc
not
pop
push
push
dec
pop
mov
push
push
push
lea
push
lea
push
push
call
cld
mov
push
add
stos
ljmp
add
scas
int
fs
mov
faddl
scas
add
cmpsb
add
add
push
xchg
sahf
mov
mov
in
shlb
into
pop
add
add
icebp
add
lock
mov
push
add
add
imul
lcall
inc
cmp
lea
push
push
lea
push
push
push
push
push
push
call
fadds
add
sbbl
add
add
sahf
loopne
fimuls
add
subb
aam
add
rolb
lcall
outsl
add
ret
addr16
mov
sub
pop
sub
push
add
pop
mov
push
push
push
call
push
jecxz
add
loopne
add
add
enter
xchg
push
mov
add
add
fadds
jge
add
enter
cwtl
jne
std
add
add
testb
ljmp
mov
sub
pop
shr
add
push
ror
xor
pop
mov
mov
push
sub
not
pop
add
push
push
push
call
add
lea
rolb
add
loopne
add
add
cli
add
add
cli
add
pushf
push
ja
xchg
push
test
cwtl
addr16
out
push
add
jge
add
add
mov
add
mov
in
hlt
lcall
shlb
push
call
add
movsb
gs
mov
in
rcrb
out
add
cmpsb
fadd
cmpsl
push
add
mov
cltd
pop
add
lahf
rolb
mov
cld
lahf
add
in
clc
lcall
inc
add
add
push
push
push
lea
push
lea
push
push
lea
push
push
call
mov
add
std
add
cmpsb
add
lock
jl
add
add
leave
lcall
xchg
testl
add
mov
stos
push
mov
add
add
add
pop
add
add
in
mov
fstl
mov
jl
sub
pop
cmp
jne
cmp
jne
push
push
call
std
sahf
add
add
rclb
add
add
mov
in
add
add
int3
xchg
pop
xchg
faddl
mov
xchg
add
aam
mov
cmpsb
sahf
ja
add
add
add
add
add
mov
push
ljmp
add
je
add
in
clc
pop
mov
movl
push
shr
lea
pop
jmp
push
push
lea
push
push
push
push
push
push
push
call
mov
push
pop
add
pop
mov
add
gs
add
add
cmp
add
ret
out
cmpsl
add
add
jne
jmp
fmul
xchg
add
mov
add
add
popa
xlat
add
mov
add
inc
cld
push
lea
push
push
push
push
call
xchg
mov
add
filds
in
add
mov
fldl
xchg
lock
add
std
fadds
sub
pop
imulb
add
xchg
mov
jl
add
sub
pop
mov
push
push
push
push
push
call
add
add
add
add
push
add
loope
jbe
lahf
add
jle
roll
add
fidivrs
out
add
xchg
jno
data16
sub
pop
sub
jne
push
lea
pop
mov
movl
push
push
lea
push
push
push
push
push
lea
push
call
ret
neg
add
test
les
int3
orb
test
jnp
aad
add
jo
imul
add
add
fiaddl
add
in
add
push
add
xor
pop
mov
push
xor
shr
pop
mov
cmp
jne
push
add
pop
mov
push
inc
add
sub
sub
pop
movl
push
lea
push
push
push
push
push
push
push
lea
push
push
call
out
jmp
clc
rclb
cmpsl
add
test
add
ja
lock
out
add
add
add
shrl
add
add
add
fwait
mov
je
add
add
popa
add
cmpsb
add
xchg
add
movsl
add
jge
add
addr16
pop
jmp
push
push
push
lea
push
push
push
lea
push
call
lock
add
xchg
add
jne
add
jnp
add
add
mov
pusha
add
pop
add
add
mov
push
test
jbe
mov
push
add
aad
clc
add
mov
add
mov
add
shlb
jp
sub
pop
mov
push
shl
sub
inc
pop
cmpw
jne
mov
push
push
push
push
lea
push
lea
push
push
push
call
jnp
add
cmpsb
scas
mov
lahf
lret
add
gs
cmpsl
mov
mov
sbb
js
adc
add
int3
in
sub
pop
movl
push
push
call
cmpsl
add
mov
mov
add
lods
add
add
add
repnz
call
into
add
in
add
pop
pop
add
add
cmpl
icebp
add
mov
mov
add
add
mov
enter
sub
pop
jmp
pushl
push
rol
pop
pop
push
push
push
push
push
push
push
call
int3
movsb
add
push
mov
mov
add
add
add
add
add
add
ret
clc
jecxz
add
mov
pop
fisubrl
mov
enter
pop
clc
rclb
mov
add
bound
mov
add
add
inc
or
dec
pop
mov
push
shl
shl
pop
mov
push
push
inc
inc
shr
push
xor
add
ror
add
dec
sub
sub
pop
lea
ror
ror
rol
pop
push
add
ror
pop
push
call
push
push
call
data16
add
push
mov
pop
shl
stos
add
pop
lahf
stos
add
push
cwtl
ja
push
add
xchg
insb
add
rolb
add
aad
call
add
xorb
mov
fwait
add
add
jne
sub
pop
cmpl
je
push
push
add
push
sub
add
lea
ror
sub
add
pop
lea
not
ror
pop
push
ror
add
lea
pop
push
push
lea
push
push
lea
push
push
push
lea
push
call
jb
add
cli
notb
lcall
jecxz
add
add
cmpsb
rolb
out
std
mov
jmp
test
lds
mov
add
in
in
call
push
sub
shl
pop
cmpl
je
push
push
add
push
or
not
add
add
sub
rol
rol
sub
pop
sub
pop
push
lea
add
pop
push
call
push
sub
sub
not
add
pop
cmpl
je
push
push
sub
push
xor
add
shl
dec
rol
sub
sub
dec
xor
pop
sub
pop
push
push
push
lea
push
call
add
add
mov
outsl
hlt
bound
add
add
mov
add
and
lahf
test
add
add
roll
imul
add
add
lods
insb
movsb
add
add
out
popf
xorl
out
push
jle
in
lock
push
push
rol
xor
pop
call
push
inc
dec
pop
cmpl
je
push
push
lea
add
push
and
add
ror
sub
sub
inc
sub
pop
xor
sub
sub
pop
push
sub
pop
push
push
push
lea
push
push
call
add
popf
add
xchg
mov
add
add
add
add
cli
popa
lea
add
imul
add
jo
repnz
add
add
add
data16
jns
xchg
add
xlat
push
xchg
add
sub
pop
call
cmpl
je
push
push
sub
ror
ror
push
push
pop
add
inc
not
sub
shr
pop
shr
sub
inc
pop
push
lea
push
call
mov
mov
xlat
mov
add
nop
add
mov
add
mov
mov
add
xchg
add
xchg
hlt
jb
std
push
push
xchg
mov
fisttpll
hlt
mov
clc
pop
push
push
inc
pop
call
push
push
push
push
push
call
cltd
add
pusha
fistl
rcrb
rcl
add
add
xchg
xchg
lds
add
add
add
add
add
fwait
cltd
outsl
mov
add
sub
pop
cmpl
je
push
push
not
push
or
not
add
add
lea
ror
sub
rol
pop
inc
add
add
pop
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
rcl
add
mov
add
add
jne
jne
faddl
outsl
jmp
outsl
xchg
mov
mov
xchg
sub
pop
push
push
rol
rol
pop
call
cmpl
je
push
push
sub
add
inc
dec
push
or
not
add
inc
add
sub
shr
ror
pop
add
not
sub
rol
pop
push
push
push
call
mov
push
add
js
sahf
add
add
lahf
in
add
roll
jbe
lds
mov
leave
leave
add
add
lret
pop
lcall
bound
add
addl
add
rcl
stos
add
add
mov
in
hlt
pop
push
push
rol
shr
add
pop
call
push
push
push
push
push
push
push
push
push
call
addr16
jns
push
mov
lods
testb
add
add
add
loopne
cli
sti
cltd
ljmp
lock
std
mov
fcompl
js
int3
fldz
ret
pop
add
add
sub
stos
ror
ror
rol
push
sub
add
ror
inc
sub
shl
pop
shl
add
xor
pop
push
push
push
push
lea
push
call
mov
incb
add
add
add
pop
loopne
jmp
add
xchg
imul
jno
push
jae
sub
pop
push
push
add
pop
call
push
xor
pop
cmpl
je
push
push
shl
not
push
or
not
add
sub
shl
sub
pop
shr
ror
dec
pop
push
push
lea
push
push
push
lea
push
push
push
push
call
add
add
out
hlt
add
mov
je
add
jl
jo
adcl
add
andl
jecxz
imul
jecxz
clc
add
add
add
add
add
add
iret
add
subb
test
pop
jmp
addl
scas
faddl
fcompl
stc
out
movsl
add
scas
mov
in
fdivr
lcall
push
shr
pop
call
push
push
push
push
call
popf
pushf
lds
hlt
stos
in
add
xchg
fidivs
add
sarl
ja
add
push
add
add
leave
int
add
jecxz
into
ja
add
loop
bound
add
mov
in
lock
cmpl
je
push
push
add
push
or
inc
add
xor
shr
add
sub
shl
ror
add
pop
ror
sub
add
pop
push
push
push
push
push
push
push
push
push
call
nop
out
in
cld
in
add
int
push
fldcw
add
jae
rol
xchg
in
add
movl
imul
cmpsl
add
nop
testb
add
movb
leave
jle
addl
sub
pop
push
push
add
add
add
rol
pop
call
push
lea
pop
cmpl
je
push
push
dec
xor
push
and
add
sub
dec
inc
pop
lea
sub
pop
push
push
push
push
push
push
lea
push
push
push
push
call
push
push
pop
add
pop
roll
add
stos
mov
add
add
add
lret
add
shl
lret
sahf
jp
arpl
sub
pop
push
call
push
sub
pop
cmpl
je
push
push
inc
push
or
not
add
xor
sub
inc
sub
pop
rol
not
xor
pop
push
rol
pop
push
push
pop
call
cmpl
jne
push
ror
pop
mov
movl
push
shl
pop
jmp
xor
push
lea
push
push
lea
push
push
push
call
add
fildl
sahf
xlat
ret
mov
mov
xchg
loop
loope
test
iret
add
adcb
popf
add
addl
add
mov
out
fwait
add
imul
cli
add
subl
add
sti
jecxz
xorl
pop
pop
push
push
lea
push
push
call
js
add
add
int
add
xchg
jno
add
add
add
addr16
mov
jae
add
add
add
pop
mov
add
xlat
add
add
stos
add
jo
fadds
je
jbe
imul
data16
mov
into
mov
filds
push
hlt
insb
sub
pop
pop
pop
push
shr
pop
pop
push
lea
sub
pop
leave
push
ror
xor
pop
ret
push
push
push
push
push
push
push
push
push
push
call
pop
icebp
add
imul
add
movl
add
mov
fwait
cmpsb
add
shlb
in
fcomps
mov
push
push
push
lea
push
push
lea
push
lea
push
push
push
lea
push
call
nop
clc
lods
add
out
add
je
add
add
add
lock
add
ror
mov
add
fildl
add
pop
in
add
add
add
fcmovb
pop
add
add
in
gs
add
scas
add
add
mov
add
movsl
mov
add
mov
addr16
cld
add
lcall
in
push
shr
shr
rol
pop
cmpl
jne
push
push
rol
push
or
not
add
sub
add
shl
sub
lea
pop
lea
pop
push
rol
pop
pushl
push
push
push
lea
push
call
test
std
out
test
movsl
add
add
push
pusha
add
add
mov
shr
addr16
add
stos
sbb
incb
push
add
lcall
sub
add
push
push
call
xchg
add
cmpsl
ret
add
rcrb
add
jp
jl
sti
movl
arpl
push
pop
shl
enter
add
fadds
xchg
add
mov
add
add
insb
add
sub
pop
push
push
shr
pop
call
push
push
lea
push
push
push
push
lea
push
call
mov
rcll
iret
add
in
andl
add
fiadds
jbe
add
ja
out
add
add
add
cli
mov
add
sub
pop
jmp
cmpl
jne
push
push
push
push
push
push
push
call
add
add
mov
xchg
add
test
add
loope
mov
mov
xchg
add
xor
pop
sub
pop
mov
call
push
push
push
lea
push
call
ja
add
fs
add
call
add
add
mov
cmc
add
mov
in
popl
in
mov
add
push
add
jns
in
stos
sub
pop
ret
push
push
push
push
lea
push
call
add
add
push
add
mov
add
pop
cli
add
mov
cmpsb
add
jo
add
mov
add
add
mov
add
fnstsw
lret
mov
incb
add
cltd
in
fnstsw
sti
add
add
leave
add
add
add
mov
lcall
cltd
pop
add
push
shr
xor
pop
cmpl
jne
push
push
ror
push
sub
add
lea
sub
not
not
shl
pop
not
shr
add
xor
pop
push
inc
add
ror
pop
pushl
push
shl
pop
call
push
push
xor
pop
call
jmp
push
push
push
push
push
push
push
lea
push
push
call
mov
mov
cltd
mov
add
out
mov
push
pushf
add
scas
add
or
enter
add
add
add
jbe
add
add
pop
imul
mov
xchg
add
jnp
out
mov
test
xlat
test
sub
pop
cmpl
je
push
inc
pop
cmpl
jne
push
push
lea
push
push
push
push
lea
push
push
call
out
jge
add
aam
add
add
fisubrs
outsl
add
add
ja
movsl
jge
add
test
out
add
int3
mov
add
les
rolb
aam
mov
sub
pop
mov
push
xor
pop
mov
push
push
push
push
lea
push
push
push
push
push
lea
push
push
call
outsl
add
add
popf
add
fldl
test
add
add
add
test
std
add
mov
imul
add
add
add
stos
movl
fdivr
lcall
call
push
push
inc
rol
shl
push
or
not
add
shl
rol
sub
inc
pop
rol
sub
xor
pop
push
pop
pushl
call
push
inc
pop
call
push
push
add
rol
push
or
not
add
dec
rol
sub
sub
dec
pop
not
inc
sub
sub
pop
push
push
push
push
push
push
call
fsubrs
add
roll
in
addl
cltd
add
jl
push
add
mov
pop
mov
rol
jae
mov
add
pop
scas
add
lcall
jne
push
push
push
push
push
lea
push
lea
push
call
shr
mov
loop
push
add
add
xchg
add
xchg
roll
test
jp
add
nop
arpl
add
popl
test
add
mov
lcall
cmp
add
call
push
push
inc
xor
ror
shl
push
xor
add
shl
sub
rol
pop
shr
pop
push
rol
xor
pop
pushl
call
push
lea
push
lea
push
lea
push
push
push
call
add
add
push
cmpsb
lcall
scas
mov
fiaddl
mov
add
push
in
add
add
add
in
call
call
push
push
not
inc
add
push
or
not
add
add
sub
xor
rol
sub
not
not
pop
inc
pop
push
add
pop
pushl
call
push
add
dec
ror
not
pop
call
push
push
dec
shl
add
add
push
or
inc
add
xor
xor
add
sub
sub
sub
pop
dec
pop
push
lea
push
push
push
lea
push
call
neg
add
in
push
add
out
add
pop
insb
jmp
add
add
adcb
mov
add
push
jecxz
cld
add
out
popa
jb
pop
jns
addr16
add
pop
add
mov
test
nop
movsb
xlat
push
add
add
add
mov
jbe
add
pushl
push
shr
dec
add
add
pop
call
push
lea
push
push
call
jle
rolb
int
cmc
xchg
add
xchg
jecxz
rclb
add
add
roll
int
repnz
adcl
fwait
clc
lret
xchg
out
jge
mov
imul
jge
add
pop
ret
add
gs
add
add
jle
movb
lods
jl
popa
sub
pop
call
push
push
sub
push
or
inc
add
rol
shr
sub
add
shl
pop
add
pop
push
add
dec
pop
pushl
push
lea
lea
pop
call
push
push
push
push
push
push
push
push
lea
push
lea
push
call
xchg
add
mov
add
sahf
cli
lea
bound
out
lcall
ja
mov
addr16
fstp
bound
add
lahf
rolb
add
add
popf
jle
add
push
jge
addr16
add
in
addb
add
lcall
fcomps
loop
add
jbe
stos
sub
pop
call
push
push
shr
push
or
not
add
shl
ror
xor
sub
add
rol
shl
pop
add
pop
push
push
push
push
push
push
push
push
lea
push
call
lret
add
lea
cli
mov
push
add
add
fidivrl
mov
jns
mov
rcl
fiadds
mov
imul
lods
mov
sbbl
add
popa
test
add
add
test
add
push
insb
push
add
in
fcompl
jne
push
push
lea
push
push
push
push
push
push
lea
push
push
call
add
add
in
jmp
ljmp
add
mov
fbld
add
lds
add
pop
aam
mov
add
je
cltd
jne
sub
pop
call
push
push
push
push
push
push
push
push
push
push
call
add
movb
in
or
jp
gs
push
lods
nop
add
add
pusha
push
fwait
iret
fldl
shr
mov
mov
add
imul
lcall
shrb
in
cmp
loop
not
push
and
add
sub
shr
sub
sub
rol
pop
rol
inc
pop
push
xor
sub
sub
sub
pop
pushl
call
push
push
push
push
push
push
lea
push
push
push
push
call
test
add
roll
add
cltd
add
add
mov
pushf
add
add
xchg
aad
xchg
add
mov
mov
jbe
imul
sahf
add
push
add
add
test
add
in
sub
pop
call
push
push
dec
rol
push
or
not
add
inc
sub
pop
ror
shl
pop
push
push
lea
push
lea
push
push
push
push
push
push
push
call
add
jle
mov
cmpsl
cli
jno
mov
mov
pop
pushf
add
les
jmp
fmul
add
adcb
add
mov
jp
mov
xchg
add
add
add
leave
mov
mov
jno
fmul
repnz
test
sub
pop
pushl
push
push
lea
push
call
mov
in
xchg
add
add
mov
pop
push
add
add
scas
add
hlt
pushf
fcmovbe
add
add
add
add
sahf
add
push
fsubrl
mov
js
iret
cli
jle
add
pop
add
cmpsl
add
add
hlt
pop
call
push
push
push
lea
push
lea
push
push
push
push
call
test
add
add
add
add
add
add
mov
int3
jae
pop
add
push
fidivrl
add
clc
add
out
jecxz
mov
add
loopne
lcall
shrb
aaa
sub
sub
add
not
sub
sub
lea
shl
inc
pop
sub
add
rol
pop
push
push
lea
push
push
lea
push
push
lea
push
call
mov
fcomp
imul
loop
add
jp
std
add
mov
jge
add
xchg
push
xchg
jmp
push
hlt
add
movl
push
mov
mov
gs
add
push
imul
lods
jp
sub
pop
pushl
call
push
inc
sub
sub
sub
pop
lea
push
rol
pop
push
push
pop
call
push
push
shl
not
inc
lea
push
xor
add
add
add
dec
sub
not
shl
shl
ror
pop
dec
xor
add
pop
push
ror
pop
pushl
push
lea
push
push
lea
push
push
push
push
push
call
in
add
loopne
movl
add
addr16
lahf
mov
pop
push
out
popf
add
add
mov
cmp
loopne
add
cwtl
mov
lcall
push
sbb
add
shrb
rclb
push
xor
add
lea
rol
sub
xor
ror
shr
pop
lea
lea
dec
add
pop
push
shl
inc
xor
pop
pushl
push
sub
rol
pop
call
push
not
pop
call
push
push
inc
ror
push
push
pop
add
shr
sub
sub
lea
pop
shl
lea
pop
push
sub
lea
not
rol
pop
pushl
push
sub
shr
rol
xor
pop
call
call
push
push
add
inc
push
sub
add
sub
shl
sub
add
dec
sub
pop
add
sub
pop
push
push
push
call
mov
repnz
add
add
push
jnp
test
add
mov
data16
jb
rolb
test
insb
add
jnp
lret
mov
mov
push
aad
ljmp
sarb
fiaddl
mov
int3
test
lcall
jne
call
push
push
rol
push
or
not
add
add
inc
sub
lea
pop
inc
lea
pop
push
push
lea
push
or
not
add
ror
xor
dec
sub
sub
not
lea
pop
rol
pop
push
ror
pop
call
push
shl
pop
pop
push
lea
push
lea
push
push
push
push
push
push
push
call
xchg
push
add
lahf
add
adcb
rcrl
xchg
cmpsl
add
mov
push
add
mov
add
stc
add
push
push
add
add
dec
jne
call
push
rol
sub
pop
mov
int
push
pop
lea
push
push
ror
shr
push
sub
add
not
sub
shl
dec
pop
rol
pop
push
dec
pop
pushl
push
shl
inc
not
inc
pop
call
push
pop
push
push
push
call
add
jo
add
add
add
lcall
in
test
movsl
add
add
pop
add
add
add
pop
xchg
mov
jmp
or
scas
loop
lds
int3
cltd
xchg
add
hlt
test
fildl
addl
hlt
push
push
shl
ror
push
push
pop
add
sub
not
pop
ror
shl
pop
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
add
mov
add
jge
in
jmp
pop
xchg
add
xchg
push
out
lahf
mov
cld
mov
add
add
push
call
add
jne
push
push
push
push
lea
push
push
push
push
lea
push
push
call
les
add
mov
fdivrl
lahf
lods
add
add
cld
mov
add
pop
imul
popa
pusha
popa
clc
test
add
jmp
add
into
add
ret
int
mov
arpl
add
scas
pop
add
add
in
fdivr
lcall
push
add
push
push
push
push
push
lea
push
call
add
add
push
add
push
add
loop
lcall
push
scas
add
rolb
add
repnz
add
jno
add
les
rolb
stc
mov
cmpsb
add
xchg
add
add
fsubrs
in
call
call
push
push
push
push
lea
push
push
push
push
call
add
add
add
ror
in
add
add
add
mov
add
mov
test
gs
add
jns
xchg
pusha
add
add
add
add
jb
add
in
mov
push
mov
add
mov
js
add
add
add
add
test
pop
add
lcall
inc
cld
push
push
call
adcl
add
imul
jo
add
add
add
add
cli
add
rolb
add
add
jnp
test
imul
add
pusha
xchg
add
add
pop
lea
push
push
push
sub
add
xor
sub
shr
inc
ror
pop
lea
pop
push
push
push
push
call
loope
roll
add
add
push
mov
stos
add
add
int
testb
fidivrl
mov
lea
pop
pushl
push
sub
pop
call
push
shr
dec
pop
lea
push
push
push
call
xlat
add
mov
add
add
add
movl
push
add
add
xchg
add
add
fistpl
mov
shlb
xchg
add
enter
add
mov
stc
movsb
add
test
add
jae
in
clc
pop
push
push
push
lea
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
popa
xchg
je
ja
xchg
add
js
rolb
fs
mov
test
mov
mov
stos
add
fnstenv
cltd
add
nop
add
in
jno
jmp
sub
pop
pushl
push
push
add
add
push
push
pop
add
xor
sub
ror
add
dec
pop
xor
add
pop
push
lea
push
call
add
imul
pop
lcall
lea
rolb
jns
add
add
int3
mov
iret
fiaddl
shrb
fnstenv
add
add
cmpsb
mov
flds
lcall
push
shl
not
rol
pop
call
push
push
sub
shl
push
sub
add
add
lea
sub
lea
pop
not
rol
pop
push
push
lea
push
push
call
imul
jno
mov
add
push
add
pop
fiaddl
out
in
add
add
add
mov
lods
je
add
icebp
jecxz
fnsave
jae
add
mov
mov
js
cld
movsl
mov
out
mov
fwait
push
add
cli
add
jne
push
xor
ror
pop
call
push
push
lea
push
lea
push
lea
push
push
push
call
lods
into
mov
add
add
mov
aam
add
cmpsl
loopne
mov
add
pushf
test
scas
add
add
add
in
xchg
js
ret
add
xlat
sub
pop
call
push
push
add
ror
push
push
pop
add
ror
sub
sub
shr
add
pop
add
pop
push
push
push
push
push
push
lea
push
push
push
lea
push
call
mov
mov
mov
add
clc
mov
add
mov
mov
in
mov
add
push
add
rolb
add
add
add
add
lcall
jne
call
push
xor
sub
dec
pop
call
push
rol
pop
pushl
push
push
push
push
push
push
push
lea
push
push
lea
push
call
andl
add
mov
add
add
add
add
mov
push
add
cwtl
add
roll
add
jmp
add
mov
out
data16
ljmp
add
hlt
roll
lea
add
jnp
fnstcw
add
jp
add
jb
in
fdivr
lcall
mov
push
push
lea
push
push
push
call
add
jle
mov
add
mov
mov
jo
clc
xchg
xchg
add
call
add
movsl
add
add
insb
add
gs
add
lcall
jge
ljmp
xlat
mov
enter
add
ret
add
pop
add
and
and
sub
rol
pop
pop
push
push
push
push
call
pop
add
pop
mov
add
push
fldl
add
stos
repnz
pop
add
mov
cwtl
add
test
add
jl
mov
cmpsl
add
lock
pushl
push
xor
shl
pop
call
push
lea
push
push
push
call
insb
rcr
add
out
fsubrp
add
insb
mov
test
movsl
imul
add
iret
ja
fs
mov
repnz
xchg
add
add
sub
pop
push
push
push
lea
push
push
push
lea
push
push
push
push
call
add
push
stos
int3
add
loope
cli
mov
popf
sti
mov
add
add
jbe
add
mov
add
xchg
data16
mov
push
push
mov
xchg
add
add
add
xchg
cmpsl
add
in
movsb
xchg
add
xchg
les
lret
mov
lahf
sub
pop
call
push
push
sub
sub
add
push
sub
add
lea
sub
xor
lea
xor
pop
pop
push
shl
add
shl
pop
pushl
call
push
add
xor
not
pop
push
call
push
add
shr
lea
pop
leave
push
inc
shl
pop
add
push
shr
sub
pop
pop
push
push
push
lea
push
push
push
lea
push
push
push
call
add
rolb
add
mov
mov
test
pop
add
pop
int
popa
add
mov
jl
rolb
mov
add
call
movl
jo
scas
cld
rclb
add
mov
lds
pop
mov
pop
pop
push
pop
pop
push
lea
push
call
jne
add
in
ja
jl
jl
add
scas
add
lds
mov
add
xchg
add
add
fwait
add
rclb
push
push
push
lea
push
push
push
push
lea
push
call
add
fnop
push
fidivrl
add
mov
in
call
scas
and
push
add
add
rolb
add
add
les
flds
jecxz
in
lcall
push
movsl
push
add
add
lock
loop
add
add
add
pop
inc
push
sub
sub
pop
ret
leave
push
push
lea
push
push
push
push
lea
push
push
call
call
lods
add
mov
xlat
js
lret
lods
pop
pop
hlt
mov
fldl
aad
add
xchg
insb
mov
scas
mov
js
add
add
add
add
add
sub
pop
ret
push
lea
push
push
push
push
push
push
push
call
outsl
stos
add
mov
imul
add
pop
cld
add
add
lcall
loope
js
fsincos
sub
pop
push
push
inc
sub
sub
pop
mov
push
lea
push
push
push
call
addr16
mov
sbbb
add
imul
xchg
add
jae
aam
add
leave
loopne
clc
add
nop
mov
add
pop
add
pop
out
add
lods
cmpsl
lret
sahf
add
cwtl
addl
add
add
sub
pop
cmpl
jne
push
push
lea
push
push
call
add
roll
add
leave
add
add
pop
mov
out
cli
insb
add
push
jle
int3
stos
add
clc
push
jo
pop
add
imul
add
mov
add
add
add
sub
pop
mov
jmp
push
lea
push
push
lea
push
push
push
push
push
call
imul
add
test
add
add
xchg
pop
push
imul
xorb
imul
in
loopne
mov
and
push
xor
pop
xor
push
push
lea
push
lea
push
push
push
push
call
add
hlt
add
xchg
xchg
js
pushf
mov
add
add
popa
mov
in
jbe
mov
loopne
push
add
addb
icebp
add
jecxz
icebp
add
add
add
add
movsb
mov
jo
mov
lcall
mov
add
add
add
jle
xchg
in
in
lcall
push
lea
add
loop
not
pop
add
push
add
xor
shr
pop
xor
dec
push
inc
rol
shr
pop
sub
push
inc
shr
inc
sub
pop
jmp
sub
push
ror
not
pop
pushl
pop
push
push
lea
push
push
lea
push
push
push
push
call
push
mov
add
add
mov
int
add
add
pop
xchg
movb
add
add
movsb
lods
jle
mov
lcall
jmp
push
push
push
call
cltd
add
rcll
mov
mov
ret
addl
add
cmpsl
add
push
call
xchg
push
add
jle
add
add
fdiv
add
add
in
hlt
pop
cmp
jne
mov
push
push
lea
push
call
add
add
mov
pop
fstpl
jecxz
jge
add
mov
add
add
pop
jbe
shll
add
add
add
mov
add
loop
add
dec
cmp
jmp
mov
push
lea
push
push
push
lea
push
call
fsubl
call
add
add
lcall
push
addb
add
test
mov
addr16
into
add
cli
mov
stos
add
add
shl
lcall
lods
mov
add
sub
pop
mov
push
not
dec
shr
not
pop
shr
add
push
ror
not
dec
pop
sub
push
push
lea
push
push
lea
push
push
lea
push
push
call
add
iret
add
xchg
mov
mov
imul
xchg
test
loope
mov
test
popl
add
cmpb
clc
mov
add
mov
push
mov
rolb
add
add
ja
xorb
xchg
add
pop
add
xchg
jmp
add
movsl
in
in
pop
sub
pop
pushl
pop
push
rol
shr
pop
shr
and
push
lea
push
push
push
push
push
lea
push
call
add
lcall
add
ret
mov
imul
imull
lret
push
pusha
lcall
addb
push
aam
mov
push
into
in
dec
nop
add
push
add
add
in
lcall
jmp
push
push
call
lret
popa
add
mov
add
add
add
fiadds
add
cltd
add
pop
add
mov
add
clc
add
mov
outsl
xchg
test
fisubrl
add
imul
loopne
xchg
add
imul
add
sahf
add
icebp
add
mov
lcall
stc
sbb
test
cld
dec
push
not
xor
add
pop
ret
push
dec
shr
sub
pop
push
mov
push
lea
push
push
push
lea
push
lea
push
push
call
jnp
add
add
in
mov
add
add
jp
xchg
push
cmpsb
add
add
cltd
add
lock
gs
push
enter
cmpsl
add
add
xchg
add
add
add
add
lcall
cld
push
push
push
push
call
les
jle
pop
xchg
push
add
arpl
lcall
aam
arpl
rol
repnz
js
test
mov
outsl
cli
add
mov
test
leave
out
add
add
in
lock
push
push
push
sub
pop
push
push
push
push
push
call
loop
mov
add
jo
add
jl
pop
jp
rcrl
pop
add
add
enter
add
loope
in
lock
lcall
push
push
push
push
push
push
push
call
add
add
test
aam
fstpl
add
add
add
cwtl
mov
mov
iret
into
add
in
add
sub
pop
push
mov
push
add
pop
lea
sub
push
shr
inc
pop
mov
push
push
push
push
push
call
stc
sarl
stos
add
mov
jge
lahf
jnp
out
add
add
add
xchg
mov
push
add
jne
pop
leave
xchg
add
lret
push
add
mov
fs
stos
pop
in
jae
add
mov
add
pop
testl
addr16
mov
pop
shr
push
push
lea
push
push
push
call
fbld
mov
movb
mov
aad
add
add
lock
add
jb
add
jecxz
cltd
push
stos
add
add
stos
add
stc
add
lret
push
xor
add
sub
pop
add
push
sub
rol
pop
mov
add
push
lea
push
push
push
push
push
push
call
jle
fdivrs
add
xchg
fcoml
cltd
push
out
jno
jbe
div
lock
jns
fcmovnb
xchg
add
add
mov
mov
push
out
add
bound
add
scas
stc
addb
add
add
add
pop
add
jnp
lahf
add
add
lcall
jnp
push
add
inc
shr
pop
add
xor
push
add
pop
mov
push
inc
pop
and
push
xor
add
pop
rol
push
push
push
push
lea
push
lea
push
push
call
add
rolb
fadds
add
xchg
mov
mov
add
xchg
in
jle
jp
cmpsl
cwtl
add
xchg
add
aam
insb
test
fildl
repnz
add
push
mov
lret
fiaddl
mov
in
in
rol
xor
push
xor
add
not
pop
inc
push
push
push
push
push
push
call
test
add
add
pusha
jl
imul
add
add
pop
jo
add
pop
add
add
cmp
jne
add
push
lea
push
lea
push
push
lea
push
push
lea
push
push
call
aam
hlt
jle
add
gs
add
jge
js
xlat
fcmovnb
mov
xchg
cwtl
jmp
nop
testb
add
add
lahf
loope
add
mov
lods
add
lcall
inc
or
test
add
push
add
add
dec
xor
pop
add
cmpl
jne
push
xor
pop
xor
push
push
push
push
push
lea
push
push
lea
push
call
pop
add
add
scas
into
add
movb
add
add
addl
add
add
shrb
lds
add
add
int3
add
lcall
mov
lahf
mov
add
add
jno
add
add
movb
shlb
add
add
roll
add
lahf
add
add
lcall
push
push
lea
push
lea
push
push
call
mov
rcrb
xchg
xchg
gs
in
add
mov
push
add
std
add
shrb
fwait
loopne
add
loop
lahf
jnp
add
and
xchg
add
lods
pop
add
add
xchg
scas
mov
mov
add
aad
mov
in
lcall
push
pop
pop
pop
push
add
pop
pop
leave
push
not
dec
sub
shl
pop
ret
push
sub
rol
sub
pop
mov
push
add
shr
pop
add
push
sub
dec
add
dec
pop
mov
push
push
push
push
call
add
add
jae
out
add
fiaddl
fadds
add
movsl
add
add
je
in
jnp
jb
add
push
out
add
mull
push
inc
add
pop
pop
push
push
call
fldlg2
push
cld
pop
iret
xchg
xchg
xchg
jo
test
add
std
add
mov
add
nop
cwtl
add
add
lret
fxch
aam
add
mov
mov
push
roll
add
add
jno
mov
lcall
push
call
pop
call
push
push
lea
push
push
push
push
call
mov
mov
fcomp
bound
roll
add
cld
icebp
add
add
pop
popf
push
out
add
enter
push
mov
xchg
js
repnz
leave
int
stos
sub
pop
xor
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
lock
add
movsl
addr16
add
sahf
add
stos
add
movsb
jae
sahf
scas
out
addr16
ficoml
add
cwtl
jge
add
mov
filds
add
lds
add
lock
add
push
stos
out
add
mov
add
add
fdivr
lcall
push
add
pop
pop
pop
push
dec
pop
pop
push
push
push
push
lea
push
push
lea
push
call
xchg
add
aam
les
rol
jae
add
add
add
mov
addl
add
add
add
jle
add
pushf
mov
mov
add
cmpsl
xchg
add
leave
xlat
lahf
pop
mov
jno
add
push
push
lea
push
push
push
push
push
push
call
lret
ljmp
repnz
push
jno
mov
add
cmc
roll
add
in
pop
add
add
lcall
xlat
xchg
std
xchg
roll
fcmovbe
add
add
add
loop
xchg
add
add
pop
mov
stos
add
sbbb
add
movsl
add
sub
pop
leave
ret
push
rol
shl
pop
push
push
pop
mov
add
push
push
push
push
push
lea
push
push
push
push
push
call
add
pushf
add
jb
lret
push
add
js
jle
add
add
add
mov
js
push
add
lds
fwait
out
add
add
test
mov
mov
add
jmp
testl
push
push
add
add
sub
pop
push
push
sub
sub
add
add
pop
push
push
push
pop
mov
push
push
xor
shr
dec
pop
pop
lea
push
xor
pop
sub
push
lea
push
push
lea
push
push
push
push
push
lea
push
push
call
xlat
filds
add
fldt
add
add
add
cmc
imul
mov
mov
mov
add
roll
sti
add
xchg
add
add
jge
in
fdivr
lcall
adc
ljmp
fimull
cmp
lahf
inc
pop
add
push
lea
push
push
lea
push
lea
push
push
push
lea
push
call
mull
push
std
aad
data16
jbe
ret
outsl
add
cmc
loop
sub
fwait
jb
mov
mov
sar
add
cltd
add
jne
mov
add
xchg
mov
jecxz
jne
sub
pop
pushl
push
not
pop
popl
push
pop
mov
push
push
push
call
mov
movsl
rcl
add
xchg
arpl
iret
mov
add
aam
mov
rcrb
pop
test
rolb
pop
push
add
lcall
stc
xor
push
shl
pop
lea
mov
push
lea
push
push
push
lea
push
call
iret
mov
int
sahf
loopne
imul
int3
add
add
addb
add
add
test
add
jb
add
add
loopne
add
mov
push
add
call
push
add
add
std
add
lock
mov
in
in
pop
add
xor
push
lea
pop
rol
push
lea
add
add
ror
pop
nop
nop
push
lea
push
push
push
lea
push
push
push
push
push
lea
push
call
add
lds
mov
jmp
nop
popl
xchg
mov
add
jns
add
add
add
mov
add
fiaddl
pop
mov
bound
out
add
add
xchg
xchg
flds
call
imul
add
add
add
add
in
fcomps
add
xor
inc
push
lea
push
lea
push
push
call
add
xchg
add
ja
xchg
add
mov
repnz
fldl
cld
add
roll
faddl
mov
fisubrs
push
shll
pop
filds
xchg
in
add
fimull
pushf
into
lcall
fsubr
add
mov
movb
pop
sub
pop
nop
push
push
lea
push
lea
push
lea
push
call
data16
xorb
xchg
add
les
add
xchg
sti
add
mov
fldl
add
mov
push
pop
clc
arpl
aam
std
pop
add
add
pop
in
add
xlat
shr
add
add
add
out
mov
mov
add
jo
add
sub
pop
inc
push
lea
push
lea
push
lea
push
push
push
lea
push
call
cld
add
add
add
add
add
mov
sahf
mov
add
outsl
add
add
in
add
js
cwtl
int
pusha
jge
add
pusha
add
add
jl
add
fildl
add
jne
add
add
push
push
mov
pop
nop
push
add
pop
nop
push
push
push
push
call
lds
add
movl
add
test
add
add
push
add
xlat
mov
add
out
shrb
add
add
subl
pop
cmpb
jne
push
rol
rol
not
pop
add
push
lea
push
lea
push
push
lea
push
lea
push
push
push
call
add
movsl
mul
movb
mov
add
jle
push
cld
add
mov
pop
in
mov
pop
lock
add
add
pop
sub
pop
nop
push
push
call
xchg
mov
lahf
mov
addl
sarb
add
mov
jmp
clc
add
push
add
jge
mov
fistpl
jne
testb
inc
or
test
add
push
lea
push
push
call
push
add
add
push
mov
add
jbe
xchg
test
lods
lods
fcomps
lret
mov
sahf
add
jbe
xchg
flds
jo
scas
mov
in
mov
add
xchg
add
add
add
pop
add
add
xlat
lods
add
push
add
add
add
add
push
push
push
push
call
stos
mov
add
add
arpl
jbe
add
jnp
fwait
hlt
add
push
rclb
add
add
lcall
push
sub
inc
pop
inc
push
add
xor
shr
pop
nop
push
inc
lea
not
sub
pop
nop
push
shl
pop
cmp
jb
push
sub
shl
pop
xor
jmp
push
push
push
lea
push
call
pushf
cmpsb
xchg
addb
push
pushf
push
push
cmpsb
les
xorl
repnz
cmpsl
cmpsl
add
push
lds
shl
mov
mov
jmp
add
add
rolb
jmp
in
lock
lcall
push
and
lea
push
push
lea
push
push
push
lea
push
lea
push
call
jle
add
add
add
add
mov
iret
movsb
add
mov
mov
mul
movb
add
pusha
add
xchg
jnp
fwait
movb
add
repnz
icebp
add
fildll
je
add
sti
add
shl
sub
pop
add
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
mov
add
ljmp
pop
add
add
cli
mov
pop
in
add
loop
add
add
add
mov
fs
add
mov
test
add
je
movsl
cld
add
iret
add
mov
jecxz
sub
pop
movzwl
push
push
call
pop
add
leave
mov
ficoml
sarb
insb
jae
add
add
mov
arpl
add
imul
fldcw
mov
in
clc
lcall
inc
sbb
add
pop
add
mov
push
push
lea
push
push
push
push
push
call
ret
add
xchg
sarb
add
in
push
icebp
iret
xchg
add
add
xchg
mov
je
add
mov
arpl
add
add
shll
sub
pop
xor
push
push
push
push
push
push
push
push
push
push
call
xchg
sahf
test
pushf
js
add
fidivrs
fildl
add
jbe
mov
scas
cltd
add
hlt
mov
rolb
stos
add
add
int3
addb
push
lahf
scas
add
jecxz
icebp
jo
shl
mov
mov
enter
add
out
add
add
sub
pop
xor
shl
push
shr
pop
xor
push
push
lea
push
push
call
mov
loope
push
add
add
add
add
push
in
iret
add
add
clc
addl
mov
add
cltd
add
sti
arpl
mov
add
jo
add
add
add
mov
in
into
add
loope
push
shl
pop
xor
push
push
push
push
lea
push
push
lea
push
call
add
jl
add
mov
imul
rcl
shr
cli
add
lds
mov
cltd
mov
add
pop
xchg
pop
cwtl
testb
pop
shl
xor
push
lea
push
lea
push
call
mov
add
add
push
add
add
fadds
add
nop
loop
xchg
add
scas
push
aam
loopne
ljmp
fs
add
movsb
stos
push
cld
add
in
xchg
lcall
rcll
or
xchg
lea
push
push
push
lea
push
push
push
call
std
jge
add
add
repnz
leave
test
cli
xchg
add
js
add
add
aam
test
add
gs
test
add
sti
add
jecxz
add
addb
add
jns
push
popf
add
ljmp
add
jge
add
add
negl
loope
js
jnp
jmp
add
in
fcompl
inc
hlt
push
push
push
push
push
lea
push
lea
push
push
push
push
call
add
add
aam
in
add
shr
popa
add
jecxz
add
int
add
mov
add
add
movl
add
add
add
in
imul
in
add
divb
lcall
pop
push
add
lea
dec
pop
pop
push
rol
dec
pop
pop
push
not
dec
add
shl
pop
leave
ret
push
xor
sub
dec
lea
pop
push
mov
push
shr
shr
not
pop
push
push
lea
ror
inc
pop
push
push
push
push
push
call
push
add
push
repnz
add
mov
xchg
out
les
push
add
add
xchg
add
add
mov
cmpsb
add
xchg
loopne
pusha
add
push
arpl
add
xchg
xchg
loopne
add
cwtl
out
pop
add
add
rol
in
hlt
pop
push
push
lea
push
call
imul
in
call
call
jns
outsl
rorl
cmpsb
jae
mov
add
xchg
jns
add
add
pop
add
popa
cli
mov
push
movsb
add
jmp
insb
add
add
push
std
add
add
add
fiaddl
bound
add
add
call
mov
mov
push
xor
pop
mov
push
sub
pop
test
je
push
shr
pop
mov
test
je
push
push
push
push
push
call
xchg
jl
jnp
jmp
add
push
leave
lret
mov
mov
rorb
roll
lods
fs
fs
cli
add
add
cmc
pusha
pop
scas
add
mov
jae
add
fiadds
add
add
xchg
notl
ret
arpl
cmp
push
inc
test
rol
ret
jl
mov
mov
push
push
lea
push
call
jmp
gs
add
cld
mov
fmul
ret
add
aad
jp
add
add
xchg
add
add
popf
nop
scas
movsl
add
hlt
lcall
push
push
push
call
add
aad
out
add
mov
icebp
add
repnz
add
call
push
cltd
out
add
push
push
mov
push
mov
add
mov
add
add
aad
mov
leave
les
lcall
rorb
test
add
add
push
lea
push
lea
push
lea
push
push
call
lret
add
add
add
add
add
add
push
add
flds
add
sahf
add
add
mov
in
in
test
je
mov
push
pop
inc
push
add
pop
cmp
je
test
jne
push
push
push
push
push
push
push
push
call
add
jno
add
push
mov
mov
loope
add
add
test
add
jb
shrl
in
add
in
arpl
addl
add
mov
mov
add
rolb
push
shrl
add
add
add
add
out
add
rclb
fsts
lock
xor
pop
pop
push
lea
push
push
push
push
push
push
call
call
je
pop
pop
add
imul
lret
jp
stc
add
add
jno
add
add
add
mov
mov
xlat
add
ret
in
in
in
pop
pop
push
ror
xor
pop
pop
push
push
push
lea
push
push
push
push
call
add
pop
add
add
pop
filds
mov
imul
xchg
push
add
add
mov
push
xchg
add
pop
push
add
movl
pop
int3
fsubr
icebp
sub
pop
leave
push
push
push
push
call
add
jne
push
fcomp
add
add
in
ja
add
cld
jo
jp
out
pop
add
xchg
add
pop
add
vsubpd
xchg
add
iret
roll
mov
out
jbe
mov
out
add
add
add
xchg
add
sub
pop
ret
mov
push
ror
pop
inc
push
pop
cmp
jne
push
lea
push
push
push
call
add
scas
test
lcall
pop
stc
xchg
cmpsl
push
stos
addb
add
fcompl
xorl
int
jae
lahf
les
aam
cltd
cli
add
pop
stc
movb
add
mov
jbe
aad
add
add
in
xchg
xchg
testb
add
mov
arpl
fdivs
lea
push
push
push
push
push
push
push
lea
push
lea
push
push
call
cmpsl
sahf
cli
mov
add
pop
loope
push
pop
mov
icebp
pop
fiadds
mov
add
add
mov
add
mov
add
add
add
test
jecxz
andb
mov
add
nop
lret
test
sub
pop
mov
push
push
call
add
pop
les
add
add
lret
xchg
add
add
mov
add
add
add
mov
fiadds
test
testl
xchg
add
sarb
add
mov
add
push
add
test
in
test
add
add
pop
pop
pop
dec
push
lea
push
push
push
push
push
call
add
pop
mov
rcrb
xchg
out
add
sti
add
jbe
mov
add
out
stc
lods
testb
jne
xchg
sahf
cltd
add
sub
pop
mov
push
lea
push
call
pop
rcrb
add
add
add
xchg
xchg
add
test
add
add
in
popf
je
lret
cwtl
xchg
mov
add
stc
add
add
mov
add
lcall
add
out
imul
mov
cmp
jne
mov
push
push
push
push
push
push
push
push
lea
push
push
call
mov
fnsave
imul
fs
add
add
arpl
add
cmpsb
add
add
add
xchg
xchg
iret
push
scas
add
in
fcomps
rorb
adc
add
push
lea
push
push
call
andl
jbe
mov
lods
xchg
add
add
scas
cmc
lds
stos
add
lock
mov
mov
add
add
add
add
mov
xchg
sub
pop
mov
push
rol
pop
add
cmp
je
push
add
add
pop
jmp
push
dec
add
ror
pop
xor
pop
push
push
lea
push
push
push
push
lea
push
push
call
add
jns
push
in
fbstp
push
out
cwtl
add
add
loopne
jb
xor
cltd
fs
add
in
imul
add
add
in
loopne
pop
push
shl
shr
inc
pop
pop
pop
push
rol
add
shr
pop
leave
push
ror
shr
pop
ret
push
rol
pop
lea
push
shl
add
pop
pop
pop
push
push
push
push
push
push
push
push
call
add
add
add
mov
push
add
add
mov
je
add
xchg
mov
add
xchg
add
lret
push
aam
in
in
loopne
pop
push
shl
sub
pop
pop
push
not
lea
rol
pop
leave
push
sub
lea
pop
ret
mov
push
add
pop
pop
push
lea
push
lea
push
push
lea
push
push
lea
push
push
push
call
push
mov
add
lahf
add
add
push
add
add
add
add
shll
add
xchg
movl
cmc
add
add
add
add
xchg
hlt
jmp
jge
mov
in
fcompl
pop
push
push
push
push
push
push
call
jo
add
test
jle
add
cmc
push
icebp
pusha
movsl
pop
add
stos
adcb
ja
mov
lret
add
mov
aad
js
movsb
add
add
add
add
out
add
add
add
sub
pop
pop
leave
push
push
push
push
call
lock
popa
in
lret
add
mov
push
add
int
testl
push
pop
movsb
add
mov
add
add
ja
add
push
sahf
jnp
xchg
add
test
fstpt
test
sub
pop
ret
cmp
mov
xor
mov
mov
into
mov
ror
mov
mov
lret
dec
mov
xchg
lret
or
jns
enter
add
adc
sbbl
addr16
lods
add
adc
adc
inc
mov
xor
in
scas
push
inc
bound
jp
add
and
inc
jo
andl
insb
or
add
or
xchg
mov
sbb
popf
cmpb
mov
test
stos
cmc
sbb
xchg
shlb
jbe
push
aas
push
incl
or
cmc
xchg
xor
mov
inc
or
xor
in
jb
jno
adc
repnz
clc
or
aam
xchg
idivb
rsqrtps
cltd
or
cmp
mov
hlt
out
testl
pop
imul
xor
lea
or
outsl
sub
loop
call
cmp
pop
lods
mov
mov
ret
pop
pop
andl
shrl
xor
insb
ss
xchg
pusha
mov
dec
or
dec
mov
test
jns
push
lock
mov
lods
stos
dec
fildl
sub
std
cmpb
pop
pop
sarb
pop
mov
cmp
pop
repnz
pop
stc
loope
push
scas
faddl
xlat
sbb
movsl
test
dec
outsb
and
push
cltd
push
ret
cmp
add
fcmovnu
rcl
addl
add
jl
clc
sbb
dec
ret
lea
in
movb
mov
fs
push
sbb
nop
add
lret
xchg
dec
repz
movb
xlat
fistl
add
cs
fwait
imul
sbb
add
and
out
lcall
mov
shrb
cwtl
pop
aaa
push
add
cmp
repz
fdivs
movsl
push
fidivrl
mov
adc
jle
aad
push
rclb
or
pop
loop
or
test
pusha
sbb
adc
xchg
and
lcall
lods
and
out
ror
xor
nop
add
cmp
mov
adc
cmpsl
jbe
es
and
dec
or
fs
out
push
cmp
cmpsb
int3
sbb
sub
leave
push
sbb
loopne
inc
lahf
xchg
xchg
jns
leave
lods
lret
push
push
push
pop
test
mov
cli
jl
popf
add
jge
mov
lret
test
sahf
fstp
add
out
out
sub
stos
ja
mov
cmpsl
adc
cmp
out
push
fcmovu
add
pop
push
adc
insb
inc
repnz
dec
push
push
cmpsb
or
wrmsr
mov
outsb
ret
mov
sub
jg
lret
icebp
inc
pusha
lods
fadds
in
sbb
fstl
mov
sbb
das
je
xchg
or
jnp
hlt
loope
shlb
ljmp
hlt
cmp
outsb
and
pop
cwtl
cwtl
jo
ljmp
addr16
stos
clc
sub
in
aam
cmp
dec
movaps
ret
fmull
insb
call
and
jmp
ja
push
fsubl
jnp
in
nop
add
dec
incl
sub
xor
xor
aaa
pop
mov
fs
cmp
push
sub
push
and
mov
xorl
sbbl
dec
mov
cwtl
mov
mov
add
inc
push
gs
negb
jno
push
add
lret
rol
push
pop
fidivrs
fdivs
mov
push
data16
stos
sti
mov
insb
and
ja
mov
inc
mov
lahf
daa
shrb
cld
xchg
dec
push
test
jnp
cmpsl
xchg
aas
and
in
xchg
ljmp
mov
fldt
rorb
sbb
mov
imul
sub
jno
or
pusha
inc
movsb
cmp
hlt
test
data16
les
ljmp
xor
adc
adc
mov
sbb
fwait
mov
and
pop
lcall
sub
adc
or
mov
jmp
sub
loop
cmpsb
int3
inc
sub
mov
loop
pop
call
cmp
test
dec
cwtl
mov
or
mov
pop
inc
dec
sub
jle
mov
insb
das
add
repz
insb
jge
sti
add
pop
aaa
mov
scas
aam
std
int
cmp
jmp
cmp
test
mov
mov
or
lods
pop
fstl
jns
leave
jl
call
lcall
xor
movsb
adc
adc
mov
scas
or
lock
xor
add
ds
fidivl
aad
add
dec
test
lods
lock
nop
add
inc
jp
arpl
nop
fimull
mov
lods
push
mov
int
jp
ss
sub
dec
and
scas
inc
add
sbbl
mov
push
pop
shlb
rol
cmp
imul
call
cli
fwait
pop
lea
mov
in
sbb
or
fildll
test
nop
sbb
data16
std
xor
loope
adc
pop
fwait
inc
rclb
in
mov
es
out
cmp
mov
xchg
push
scas
and
add
xchg
mov
ljmp
nop
stc
sbb
cmovge
in
lods
fwait
xchg
mov
icebp
out
cli
je
cmp
or
mov
inc
xor
mov
sbb
dec
dec
inc
push
mov
cmp
movsb
ret
shl
mov
push
mov
push
cmp
pop
sub
and
pop
push
lods
iret
pop
rcll
lods
adc
insb
adc
lea
cmovbe
pop
add
lret
xchg
inc
int
lea
dec
ljmp
jmp
lret
xchg
add
bswap
imul
sub
je
inc
enter
inc
lds
add
or
cltd
ret
sti
pop
push
inc
aaa
leave
add
and
mov
xchg
seto
cmp
push
iret
sbb
mov
movsb
cmp
push
jmp
sbb
ret
push
xchg
pop
fldcw
push
xchg
push
je
push
xor
add
std
js
cld
notb
addr16
cmp
imul
scas
push
cmp
repnz
cld
cmpsl
pop
cmc
fbld
add
sahf
pop
jo
dec
popa
jb
lahf
fidivl
cmp
scas
cmp
shlb
sbb
in
out
mov
adc
mov
jg
mov
push
cmpsl
or
mov
fdivrp
stos
pop
push
or
scas
stos
push
lock
jo
or
jl
out
inc
mov
xor
fisubrl
sti
adc
stos
xor
jns
xchg
dec
mov
repz
daa
sahf
and
sbb
sub
cwtl
mov
int
js
adc
mov
xchg
pop
jbe
ret
and
pop
push
inc
outsl
js
iret
ljmp
sbb
outsl
jb
dec
popa
xchg
jo
inc
rcrb
outsl
jecxz
mov
pop
xorl
xor
out
push
mov
fxch
xchg
mov
add
das
icebp
and
sub
adc
pop
jno
jae
cli
pop
cmpsl
mov
shrl
cltd
cld
scas
ret
pop
js
push
pmuludq
out
aam
outsl
push
cmp
fidivrl
or
outsb
sbb
es
lea
test
mov
cmp
outsl
push
dec
jns
or
add
dec
mov
xsaveopt
sub
inc
sti
ror
shll
test
jne
aaa
mov
push
cmp
and
add
in
pop
movups
mov
push
pusha
insb
dec
jb
pop
xor
dec
xorl
movsl
in
cs
aas
imul
dec
fidivrs
out
nop
icebp
jno
jnp
dec
mov
xchg
xor
inc
aad
push
loop
int3
loopne
ds
jb
repz
rorb
mov
jno
or
mov
lret
push
sub
cmc
pop
int
push
add
xchg
mov
leave
imul
push
inc
stc
mov
sahf
dec
call
sbb
cmp
push
or
sub
dec
inc
jns
in
push
sbb
mov
mov
cmp
jl
and
pop
fucom
and
outsb
enter
arpl
iret
dec
cmp
call
cmp
adc
adc
cwtl
test
inc
subb
push
mov
xor
lods
fs
push
cmpsl
sub
sbb
test
pop
push
lods
inc
inc
cmc
push
std
lods
cmp
push
pop
fwait
cmp
fcmovb
cmc
dec
fiadds
rclb
add
adc
inc
mov
out
sbb
jg
adc
es
in
inc
inc
inc
dec
adc
adc
fcoml
dec
push
xor
adc
mov
test
push
stc
shll
ret
and
out
shll
fisttpll
sbb
push
or
pop
roll
mov
jnp
fdivrs
pop
mov
test
movsb
mov
sub
lcall
adc
and
pushl
test
cli
sub
or
xchg
lock
jns
imul
adc
mov
lock
in
call
push
sbbl
fimuls
aad
jg
mov
add
cmpl
popa
mov
divb
arpl
sub
xchg
cwtl
dec
arpl
int3
xchg
push
pop
aad
das
in
lds
adc
pop
icebp
outsb
add
jno
jb
fcompp
cmp
sub
pop
stos
jl
outsb
sbb
xchg
and
jle
jae
popa
mov
andl
mov
jmp
mov
cwtl
pop
mov
xchg
pusha
cmp
test
xchg
insb
and
ficompl
cmp
mov
leave
push
sarl
mov
add
aam
mov
scas
int3
movsl
ss
adc
or
inc
bndldx
iret
jecxz
test
lods
jnp
lock
jmp
lock
insb
lods
enter
inc
add
mov
inc
push
sahf
adc
or
xor
sbb
iret
enter
cmp
mov
jns
cmc
outsl
rcrl
inc
leave
repz
or
out
xchg
xchg
xchg
in
xlat
xchg
adcl
btr
std
dec
adc
add
inc
insb
adc
repz
jae
mov
push
cmpb
sbb
and
jmp
sbb
xor
mov
mov
popa
pop
or
stos
push
test
pushf
sahf
orb
imul
xor
push
call
cwtl
pushf
push
mov
jno
loope
fsubrl
jmp
ret
pop
push
inc
insb
add
fcmovu
ja
jo
sbb
sbb
pop
push
push
pop
jno
adc
push
sti
xchg
orl
int
jecxz
xchg
sbb
xchg
mov
push
jbe
std
stos
clc
push
aam
addl
adc
bswap
out
adc
sub
je
push
mov
xor
enter
ds
bound
ss
xchg
inc
xchg
adc
adc
push
out
out
cmp
lods
pop
out
or
sbb
mov
jne
ret
imulb
add
jecxz
popa
push
daa
insb
arpl
leave
test
cmp
lret
stos
sti
and
sarb
les
aas
mov
int
dec
ficomps
jne
sbb
push
fnstcw
or
jnp
cli
jne
dec
enter
repz
lret
sahf
pop
repz
mov
adc
stos
es
cmp
out
aas
mov
dec
mov
add
testb
dec
mov
add
inc
push
push
or
dec
sub
xchg
pop
ret
mov
cmp
out
cli
pop
lret
mulb
pop
xor
mov
sub
fdivrs
psubsw
dec
and
mov
shl
cltd
sub
and
sti
in
add
out
popf
js
sub
std
or
sub
movsb
mov
enter
lods
adc
stc
adc
inc
test
stos
push
push
insb
in
daa
inc
ljmp
lret
jae
ret
shrl
xchg
scas
sub
adc
inc
aas
inc
incb
jo
dec
mov
scas
ret
iret
mov
sub
jmp
je
sub
cld
enter
iret
pop
out
pop
paddsw
fdivl
loop
dec
xor
lods
rorb
and
pop
ret
xchg
push
push
mov
push
ret
cmpsb
push
sbb
stc
pop
cs
aam
frstor
xchg
shrl
sarb
push
dec
int
push
in
jge
pusha
jecxz
clc
in
fs
cmc
adc
dec
push
xor
cmp
lods
cmp
and
scas
pushf
sti
lods
ja
or
xchg
shll
mov
sarl
jg
scas
outsb
pop
or
jl
pushf
jle
stos
xchg
sbb
testb
mov
push
mov
or
mov
das
rorb
sub
and
mov
push
dec
icebp
lret
pop
mov
cs
sub
ds
dec
loope
cmpb
add
xlat
rclb
and
jae
lret
rcl
jbe
push
inc
decl
mov
ljmp
inc
mov
jne
insl
dec
xchg
test
push
adc
sub
adc
jecxz
mov
pop
repz
mov
icebp
mov
mov
sub
mov
fldt
in
or
mov
cli
popa
je
jbe
or
mov
fbstp
push
imul
bound
mov
roll
pop
sarl
xlat
repz
cmp
rorl
xchg
aad
in
test
pop
adc
mov
je
mov
iret
or
jmp
push
es
or
and
pop
cmp
mov
stos
out
pop
pop
aam
mov
xchg
insl
mov
sbb
sbb
jo
xchg
sbb
divl
les
xor
out
ret
add
push
jg
push
dec
adc
adc
adc
cwtl
mov
jge
adc
ficoml
dec
adc
mov
mov
adc
andl
and
xorl
lret
idivl
fistpll
lods
sbb
xchg
je
xchg
fistpl
sub
dec
sub
insl
mov
mov
sbb
insl
or
das
lock
fdivrl
cmp
jg
scas
mov
mov
int
cs
test
add
js
push
jnp
cli
add
cli
and
cmp
adc
dec
mov
jg
aas
push
and
repz
ret
jl
and
imull
in
lea
sar
pop
push
das
xlat
push
rcll
sub
loop
rcrl
lret
ret
mov
pop
fidivl
pop
add
fcompl
ficompl
sub
jne
sub
inc
sarl
mulb
mov
pop
xchg
mov
sahf
fwait
and
addr16
mov
push
inc
add
lods
les
pushf
and
or
loope
repnz
in
out
push
push
js
repnz
sub
push
pop
pushf
fsubr
xchg
xlat
mov
pop
dec
sbb
iret
push
leave
push
jg
inc
stos
push
sub
aaa
call
inc
fldz
repnz
fcmove
sub
cmp
adc
test
icebp
jnp
mov
popa
scas
lcall
cld
cmp
sbb
xchg
bound
fists
rorl
stos
adc
sti
test
xchg
insb
test
inc
add
inc
mov
jecxz
xchg
out
mov
xchg
test
mov
pop
stc
xchg
stos
pop
jle
or
int3
not
ljmp
cld
pushf
pop
add
test
inc
mov
add
sbb
test
int3
cld
punpckhbw
aas
icebp
dec
mov
jle
loope
mov
xchg
dec
jo
or
mov
or
xchg
cmp
data16
test
flds
punpckhwd
add
push
rol
cmpsl
xchg
pop
cmpsb
dec
jle
daa
inc
mov
jo
lds
or
adc
out
rep
and
rcrl
loop
mov
dec
push
imul
divl
sub
in
das
aam
mov
inc
icebp
cs
test
adc
pop
les
mov
add
mov
xor
insb
scas
mov
leave
adc
fistpl
mov
add
into
es
loop
pop
xchg
cmp
sbb
sete
out
adc
xchg
gs
mov
cmp
out
adc
xor
fcmove
inc
ja
stc
sub
push
imul
lcallw
mov
or
mov
nop
in
adc
and
arpl
cli
out
nop
clc
aam
imul
sahf
js
cmp
cmc
xchg
inc
adc
dec
sub
dec
add
ficoml
dec
ljmp
fwait
test
dec
adc
loopne
fistpll
iret
dec
push
lahf
idivb
mov
hlt
scas
repnz
leave
cmc
push
xlat
lret
out
push
ds
sbbl
mov
sbb
jno
cmp
gs
xor
insl
xchg
fsubs
lds
xchg
xchg
cmp
lcall
xchg
push
daa
mov
enter
and
call
call
fwait
mov
add
lahf
jp
pusha
lods
adc
dec
sahf
push
cld
add
jnp
cld
dec
xor
pop
add
or
mov
out
or
shlb
test
jge
push
push
jb
movsl
hlt
or
jle
pusha
cmp
pusha
fnstsw
je
xor
movsl
cmp
loopne
mov
adc
xchg
adc
mov
mov
cmpb
and
or
add
daa
cs
loop
popa
inc
pop
movsb
mov
pop
cmp
or
icebp
inc
push
add
cwtl
jnp
jg
cli
ja
xor
xchg
setno
pop
push
fldt
jb
jae
cmp
pop
stc
cmp
in
mov
xor
subl
mov
pop
xor
stos
lret
mov
push
vsqrtpd
mov
pop
and
sbb
enter
into
test
insb
jmp
cmp
fmuls
and
jo
cmp
popa
or
stos
inc
mov
unpcklps
add
pop
ja
adc
out
and
fisttps
cmp
jns,pt
pop
inc
and
cmpsb
push
clc
sahf
arpl
xor
push
and
inc
leave
stos
lea
sbb
inc
add
adc
inc
lret
push
push
xchg
dec
mov
lds
jecxz
mov
dec
xlat
je
jle
sub
jecxz
std
fsubl
call
sbb
loop,pt
pop
fmul
jecxz
add
adc
stos
insb
jecxz
mov
loopne
add
inc
push
mov
adc
push
xlat
sahf
mov
xchg
dec
into
popl
movsl
and
or
and
lods
movsl
or
xchg
xchg
cmp
sbb
jns
push
cmp
push
incb
xor
inc
mulb
sub
sub
xor
fld
mov
loopne
aam
aad
xchg
out
rorb
std
cmc
cli
dec
inc
push
xor
ss
sub
add
adc
pusha
push
jmp
push
inc
jno
aad
fldenv
inc
test
push
push
and
ljmp
iret
mov
push
call
sub
sti
scas
add
cmp
jge
das
xchg
loopne
shll
inc
lock
mov
sbb
xor
bound
jns
and
cltd
xor
dec
in
lcall
and
mov
jns
add
arpl
ror
je
and
fwait
into
add
adc
stos
mov
mov
xchg
adc
ljmp
fucom
push
scas
lods
fstps
inc
leave
sbb
dec
scas
imul
mov
xchg
popf
mov
fsubp
jg
lock
int3
leave
cmp
jecxz
inc
loopne
test
cld
add
mov
roll
cwtl
xor
mov
je
push
mov
sub
lods
int
rolb
ret
jmp
lcall
sahf
into
xchg
xchg
mov
aam
jns
push
addb
dec
hlt
jl
mov
fsubl
cwtl
fnsave
enter
jl
pusha
in
inc
adc
pop
int
gs
or
iret
js
imul
or
in
inc
roll
xchg
sbb
and
clc
aas
lcall
jb
addr16
push
xor
shlb
cmp
push
xor
mov
push
push
cltd
lahf
xchg
data16
mov
mov
leave
xchg
sbb
outsb
sub
dec
outsl
fmuls
jbe
mov
push
mov
stos
mov
sub
sub
add
adc
sbb
int3
push
shr
dec
test
aas
xor
dec
std
mov
les
pop
movsb
sub
roll
repnz
inc
mov
push
sbb
push
shll
mov
or
pop
dec
cmp
or
pop
and
cmp
les
sbb
cltd
push
stos
mov
cmp
jne
aam
sub
inc
repnz
incl
shll
rcrl
xchg
add
out
or
jp
std
cmc
int3
gs
cmp
xorb
xchg
dec
adc
mov
in
jnp
ret
cltd
cli
xor
mov
test
outsb
sub
popf
or
in
scas
lret
push
jg
in
push
in
xchg
cmp
insl
popa
loopne
pushf
clc
mov
mov
das
jmp
push
int3
test
je
or
ds
inc
xor
jno
xor
xchg
gs
icebp
aam
out
je
mov
xchg
nop
jbe
aam
or
dec
jl
lea
movsb
fsqrt
lock
xchg
sbb
lret
jb
insl
aas
mov
in
rcll
push
xchg
push
rcrb
js
mov
adc
loopne
add
cmpsb
pop
adc
loope
repnz
dec
xchg
jle
add
push
daa
pop
inc
imul
scas
enter
test
mov
xchg
xchg
cmp
imul
mov
push
sub
dec
lea
clc
mov
test
mov
sbb
js
hlt
mov
addr16
fimull
xchg
push
cltd
sbb
mov
fsubrs
sbb
outsl
xchg
pop
mov
cwtl
repz
and
push
in
pushf
ret
stos
push
sub
leave
nop
daa
dec
imull
rorl
pushf
and
loop
cmc
cwtl
xchg
loop
sbb
stc
mov
adc
jp
lahf
jne
enter
sub
outsl
add
jl
sbb
fs
pop
dec
nop
cmpsl
ljmp
ds
arpl
mov
cltd
pop
xor
xchg
and
push
popl
xchg
jl
insb
and
fwait
push
or
or
in
loopne
mov
insl
xchg
sbb
fisubrs
mov
adc
or
daa
fwait
stos
repz
mov
sbb
jg
mov
pop
andb
xchg
cwtl
jae
sti
movb
mov
add
dec
aas
cmc
mov
add
dec
ret
inc
pop
mov
rorb
adc
sete
xor
insb
xor
or
pop
lods
lock
or
xor
testl
dec
xchg
xor
push
pusha
or
outsb
popa
js
inc
jg
jno
adc
dec
jnp
ljmp
insb
cmpsl
out
inc
mov
test
xlat
push
flds
dec
inc
adcb
into
pop
xchg
fnstcw
xchg
mov
xchg
cmc
shll
cld
mov
fsub
jg
les
add
cmc
and
mov
xchg
dec
mov
bound
sbb
pop
lret
sti
outsl
lret
neg
sub
test
addb
loop
out
fstpl
mov
mov
inc
test
cmp
stos
jne
jo
fbld
daa
push
inc
shlb
dec
call
loope
xchg
jb
mov
hlt
push
or
cmp
imul
loope
sub
lock
add
xchg
cmp
fwait
stos
jl
sbb
and
fiaddl
cmp
roll
jb
sarb
jae
shrl
rcrl
clc
xor
fprem1
jmp
sub
dec
subb
paddd
mov
add
lcall
popa
or
rorb
pop
jb
adcb
dec
jne
mov
int3
push
dec
insl
dec
adc
sub
idivl
fwait
jg
mov
fucomp
push
in
shl
inc
add
ss
testb
pop
negb
mov
xchg
add
jmp
cmp
iret
xor
pop
repz
or
add
pop
fs
push
lods
aaa
mov
jae
mov
movl
or
xor
sbb
mov
fwait
jns
push
imul
inc
sti
das
cwtl
aad
popf
adc
mov
mov
fldenv
and
cli
addb
jo
in
push
into
test
test
jle
jne
shr
int3
pop
inc
dec
sbb
mov
xchg
repz
push
push
add
imul
jne
repz
jmp
push
and
mov
fwait
sbb
push
push
scas
in
fisttpll
js
add
inc
lret
sbb
icebp
scas
ja
lcall
popf
mov
ret
pushf
adc
ficompl
xchg
iret
mov
adc
jmp
or
leave
or
dec
mov
data16
mov
enter
jecxz
mov
das
cld
inc
sub
insb
xchg
mov
in
jo
cmpsb
mov
lea
and
mov
mov
push
loope
aaa
scas
popa
xchg
clc
cmpsb
add
sub
dec
mov
out
iret
cltd
ret
fisubrs
cmpsb
outsl
outsl
fldenv
jae
ret
jb
mov
sbb
aad
adc
loope
testb
pop
es
xor
dec
ja
adc
mov
ret
btr
xchg
in
xor
in
idivb
daa
sbb
push
cmp
call
je
std
test
jge
cld
adc
rorl
inc
add
das
stc
outsb
aas
out
mov
xor
pop
jo
loop
sarb
dec
cs
dec
xor
rcr
lea
add
lea
or
jnp
fldt
and
pop
std
in
pusha
xchg
pop
inc
pop
ja
subl
lahf
notl
test
mov
xchg
cld
push
fisttpl
push
xchg
das
or
mov
adc
or
ret
jp
fwait
cmc
jb
std
mov
inc
loopne
dec
lret
fists
arpl
lock
out
cmp
fwait
push
inc
inc
clc
bound
sub
push
add
rcrl
push
out
jecxz
ss
inc
jg
pushf
sbb
sbb
xor
out
orl
sbb
push
inc
and
aas
cltd
mov
mov
das
pop
mov
sti
pusha
xchg
aad
inc
int3
jne
lods
fsubl
hlt
inc
sbb
mov
mov
xchg
incl
sbb
dec
jb
std
js
xor
pushaw
cmp
clc
pop
jl
aad
mov
push
insl
jns
adc
daa
and
and
int
data16
in
popf
pusha
sbb
jecxz
cmp
pop
pop
pop
scas
xchg
push
mov
inc
jne
cmp
movsl
and
and
add
sub
mov
addb
mov
and
lcall
mov
fs
mov
fsubl
add
into
pop
xor
inc
outsl
jb,pn
sbb
mov
pop
mov
inc
lcall
iret
or
jno
xchg
add
shll
jne
jl
bound
inc
cmp
sbb
adc
fldt
push
pop
dec
pop
leave
or
jne
das
lods
icebp
outsl
mov
inc
loopne
jae
mov
negl
out
xor
out
enter
mov
jge
and
cmc
lahf
mov
sbb
mov
or
mov
scas
add
into
mov
rcrl
stos
out
sub
jle
jmp
outsl
cmp
push
xlat
ret
repnz
xlat
aad
addr16
testl
mov
ja
push
add
add
dec
mov
mov
adc
push
pop
out
fnstcw
mov
dec
jg
jnp
cmp
pop
rcrl
ljmp
adc
xchg
dec
fdivrl
pop
fnstcw
or
push
cmpsl
sub
dec
fcmovbe
cmpsl
adc
in
sbb
pop
or
jmp
jb
gs
add
mov
mov
aad
add
repnz
repz
lods
jp
jmp
xlat
jb
call
sub
shll
or
cltd
cmp
lods
frstor
fiaddl
mov
insl
sbb
cwtl
daa
arpl
int
sbbl
lret
mov
repnz
mov
cmp
cmc
ljmp
cmpsl
push
movsl
lcall
sub
push
movsb
jg
mov
test
popa
pop
dec
pop
shrb
enter
push
inc
test
repnz
ss
mov
stos
je
xchg
mov
fldcw
xcrypt-ecb
cmpsl
dec
mov
add
fwait
jo
gs
jecxz
js
mov
repnz
divl
adc
lock
push
adc
adc
mov
inc
cli
lret
stos
pushl
jno
fsubr
pop
jmp
lcall
sbb
xchg
cmp
cltd
cmpsb
mov
cmp
out
inc
in
fldenv
insb
test
xor
popa
mov
lea
dec
in
stos
cs
scas
cmp
daa
or
xchg
mov
xor
jae
fst
stos
xchg
loope
shlb
or
mov
or
jecxz
mov
shlb
lahf
add
mov
mov
pop
popf
pop
mov
fbstp
xchg
mov
inc
fidivs
test
xchg
into
lock
imul
adc
xor
add
insb
data16
and
mov
cmpl
call
lret
mov
movsl
leave
imul
enter
xchg
add
mov
dec
and
filds
xor
push
or
adc
adc
nop
jge
in
jg
jp
push
stos
mov
inc
jno
push
and
mov
cmpsl
aaa
dec
stos
or
in
or
xchg
jl
mov
xchg
movsb
xchg
pusha
jge
call
pusha
fsts
push
dec
xchg
mov
cmp
sarb
and
shlb
in
clc
mov
fidivrl
cli
lea
std
cli
fwait
pop
sbb
lret
test
xchg
mov
cmp
sub
rcrb
aas
outsb
call
into
xchg
in
stos
adc
addl
out
lods
cmpsb
jecxz
notl
sarb
cmp
cmpb
dec
push
adc
loope
scas
pop
stos
adc
dec
xchg
xchg
adc
jecxz
add
inc
out
jb
pop
sbb
lret
lcall
arpl
cmp
push
jmp
test
sbbb
imul
mov
imul
pop
ss
inc
sub
fs
pop
cmc
pop
cld
push
jae
stos
lahf
lea
mov
int
out
and
mov
push
sbb
pop
call
test
mov
sbb
push
stos
xchg
call
inc
cmc
xor
mov
iret
xchg
mov
mov
ja
fwait
mov
push
sti
cltd
adc
mov
mov
jmp
or
dec
leave
stos
mov
mov
enter
test
repz
daa
bound
sbb
and
xchg
sbb
jbe
add
and
xor
aas
pop
aas
add
scas
ret
das
cmp
ja
stos
ret
sbb
fstpt
fstl
or
repnz
pop
adc
jecxz
mov
xor
cmp
sub
jno
sbbl
mov
int
in
mov
ret
mov
jg
roll
pop
inc
xor
test
arpl
push
adc
pop
adc
sub
aaa
cwtl
or
fldcw
clc
sub
loope
daa
jnp
mov
inc
pop
imul
mov
add
cli
mov
mov
mov
aaa
bnd
inc
xchg
jns
cmp
sbb
jns
nop
jl
jb
int3
cmc
hlt
sub
out
scas
out
fmul
stc
mov
sti
jmp
mov
push
cmp
jbe
das
fildl
sbb
dec
sbb
push
xor
int
push
bnd
xlat
dec
adc
filds
pop
jp
imul
add
xchg
xor
sbb
add
mov
or
sbb
ss
mov
jp
popf
xor
sub
dec
push
cmpsl
xor
push
sub
mov
ja
xchg
mov
mov
sti
outsl
arpl
cld
pop
lods
lock
clc
sub
mov
push
xchg
imul
cmpl
dec
sbb
mov
in
inc
jo
jecxz
daa
xchg
or
daa
jb
jecxz
mov
push
cmp
pop
lret
jb
cmc
aad
push
cld
pop
mov
enter
out
sahf
and
cmpsl
inc
dec
adc
aas
cmpsl
aaa
test
mov
cmp
or
gs
out
out
mov
and
add
or
pusha
inc
fidivrl
mov
inc
movsb
push
sub
mov
nop
movsl
rorl
mov
mov
std
clc
ficompl
mov
ljmp
not
and
insb
das
aaa
mov
lret
xchg
repnz
mov
lea
and
out
sub
cmp
push
push
xor
in
add
jae
mov
rcr
popa
in
sbb
hlt
dec
mov
adc
and
into
loopne
add
push
xor
idivl
and
or
adc
sahf
pop
aam
sub
inc
xchg
push
mov
es
test
dec
notl
aam
pop
cwtl
or
and
flds
dec
loopne
movsl
xor
adc
dec
out
xor
dec
cli
xchg
xor
flds
enter
fs
mov
pusha
fidivs
sbb
out
mov
add
xor
push
adc
sarb
ds
add
repnz
fcomp
push
xor
addr16
inc
arpl
negl
ret
fimuls
lret
nop
lcall
sub
and
add
lahf
or
mov
fnstenv
or
push
in
adc
lea
pop
jp
mov
sbb
pop
push
movsb
popf
mov
movsb
scas
cmp
pop
inc
pop
out
ljmp
aad
jae
xchg
mov
rcrl
sbb
cltd
or
sti
xchg
cltd
fcoml
fwait
and
out
enter
mov
push
pushl
aaa
inc
push
add
pop
inc
or
mov
enter
iret
shrb
arpl
push
lcall
stos
das
sub
add
or
fcmovnbe
les
sbb
mov
add
jge
jg
test
mov
pop
fdivrl
pop
jbe
push
aad
add
mov
fs
ja
push
cmpsb
inc
ud2
loope
arpl
lods
mov
push
imul
clc
mov
test
xor
stos
pop
lret
lds
movsl
cmpsl
in
pop
pop
xchg
sbb
outsb
pusha
cld
sbb
loope
mov
rcl
ss
fwait
xchg
fdivs
nop
cmp
pop
in
out
add
bound
insl
cwtl
stos
mov
jo
mov
mov
in
cmpsl
fwait
and
in
dec
sub
cmp
daa
mov
enter
in
xlat
test
call
lods
mov
test
jb
mov
mov
insl
test
lret
jne
pop
cmp
insb
mov
push
imul
hlt
push
push
lods
sub
mov
popa
clc
push
and
or
mov
cmpsb
mov
ret
push
lcall
movsl
ss
pusha
add
pop
movsb
and
adc
sbb
cs
rclb
dec
jl
inc
int
push
mov
icebp
sbb
sbb
popa
bound
sahf
inc
jmp
repz
mov
push
out
lret
pusha
js
int3
xor
jne
mov
mov
cld
push
cmp
mov
popa
or
jno
mov
jle
stos
add
adc
cmpsl
push
fstpt
in
mov
jge
jo
into
pusha
add
ds
popa
ret
les
fstpt
rol
in
les
leave
cltd
imul
mov
ljmp
sub
jnp
arpl
lret
in
loope
loopne
cmp
xchg
mov
pushf
sbb
ret
lods
pusha
iret
fdivr
sub
test
std
or
lea
dec
test
add
dec
push
xorb
aas
cmp
pushf
xor
pop
cmp
xchg
mov
mov
ds
or
pop
jl
cmp
sub
rcrb
pop
or
mov
out
push
jp
adc
push
jge
or
mov
popf
cld
xchg
rcr
inc
cmp
push
inc
cld
xchg
jl
pmaxub
mov
jnp
pusha
pop
mov
test
xor
mov
inc
clc
jbe
adc
sahf
fs
in
mov
rorb
aas
test
xor
push
enter
dec
popa
xor
adc
push
fistpll
movsl
xor
rcll
jo
sub
mov
sub
jmp
push
jo
dec
mov
sahf
in
push
div
cmp
jae
cmp
cmp
xlat
mov
xchg
xor
aaa
sbb
jns
ja
fucomi
push
dec
in
test
sbb
xchg
stos
mov
mov
sub
daa
fsubr
mov
testl
push
je
push
mov
jb
mov
outsb
imul
cmp
test
mov
lods
pop
movsb
lret
dec
fwait
jbe
pop
lds
jb
fldcw
stos
cmp
or
and
outsb
inc
pop
es
add
inc
jmp
xchg
xchg
jno
call
fildll
or
dec
out
push
fisttps
and
dec
xchg
add
addr16
fdivs
lds
or
cmp
push
lds
int3
adc
scas
test
sbb
cltd
insl
jnp
out
and
aam
mov
xor
xchg
out
sbb
pop
and
and
sbb
jmp
xorb
pop
mov
jecxz
mov
mov
mov
sbb
shrb
testl
sbb
sbb
vcvtps2qq
or
mov
dec
fldenv
xor
sahf
dec
dec
loope
arpl
sbb
arpl
sbb
mov
mov
cmp
movsl
iret
aaa
cli
sbb
add
mov
lock
jg
in
adc
int3
lods
in
data16
sbb
sbb
popf
aas
int3
xor
mov
push
aam
jecxz
hlt
pusha
pop
lret
je
and
clc
pushf
mov
movsl
sbb
xchg
pop
dec
pop
mov
or
jnp
rcrb
pop
daa
sbb
clc
or
mov
das
subb
das
cli
leave
adc
test
dec
mov
jbe
jmp
ds
adc
addl
cld
push
iret
lods
cmpl
add
push
fsubl
sub
mov
cmp
shll
push
pop
mov
leave
adc
rorl
push
test
shrb
cmpsb
movsl
push
stos
fucom
and
push
adc
movsl
pop
nop
lcall
or
shl
icebp
fsubrs
insw
sub
ds
mov
adc
int
adc
loope
xor
cli
lock
rcrb
mov
jnp
sbbb
lock
sti
enter
dec
jp
hlt
sub
and
sbb
push
fdivs
sbb
inc
movsl
dec
add
jns
mov
or
mov
dec
mov
sub
in
dec
call
mov
cli
ja
stos
mov
adc
sub
sub
ss
test
idivb
dec
push
sbb
lret
loope
push
mov
jl
xor
inc
js
popa
xor
jge
push
sbb
mov
jmp
or
loopne
jmp
mov
cmpsl
jecxz
add
adc
movsl
cltd
inc
fwait
leave
int
jl
and
into
mov
fidivrl
hlt
cmp
push
xor
adc
mov
mov
test
mov
dec
pop
int3
mov
jne
jp
mov
sbb
and
mov
lret
push
pop
push
cmpsb
loope
pop
iret
cwtl
xchg
and
pop
dec
xchg
cmp
mov
lcall
fnstenv
or
clc
sub
sub
sbb
ja
test
push
fldenv
mov
and
fstl
pop
push
int3
cmp
pop
jns
mov
mov
push
sti
jmp
js
in
cmc
imul
inc
xchg
repnz
les
cmp
ljmp
push
hlt
jb
test
fdivrl
pop
into
jae
add
mov
xor
je
in
pop
xor
out
jle
roll
lret
aaa
scas
jno
pop
xchg
clc
push
sub
lods
xchg
repnz
arpl
mov
sbb
jmp
push
test
lds
mov
mov
xchg
in
jnp
jb
lret
sbb
push
cmp
sbb
xor
out
sarl
cmc
jnp
mov
sahf
push
cmp
mov
inc
es
das
jg
sub
mov
cli
ret
jne
dec
iret
push
fdivrs
fwait
imul
pop
clc
repz
fldl
aad
xor
sahf
push
shl
push
cmpsl
cs
movl
setb
mov
xor
pop
dec
test
repnz
lea
out
mov
shrb
lea
cmpsl
ret
test
xchg
adc
xchg
and
sbb
in
inc
and
jae
es
jns
das
dec
into
arpl
mov
pop
pop
push
sarl
add
test
icebp
incl
mov
push
arpl
or
outsb
in
dec
dec
jns
ret
mov
jmp
xchg
adc
cli
jbe
or
mov
fdiv
popf
mov
mov
mov
or
sbb
daa
cwtl
inc
ret
sub
xchg
lea
sarl
std
aas
rol
cwtl
enter
sahf
cmp
out
dec
jle
xlat
test
into
pop
pop
cmp
inc
add
xor
mov
pop
ss
jecxz
iret
inc
jbe
and
xchg
shl
mov
mov
test
incb
dec
add
stc
dec
push
inc
add
push
inc
lock
add
push
cltd
jg
popa
out
je
pop
fildll
mov
andb
push
in
add
mov
pop
xchg
jns
or
cli
scas
stc
dec
mov
in
dec
stos
repz
jo
and
fadds
mov
sti
mov
sub
add
ljmp
dec
xchg
and
fcomp
adc
dec
aad
jns
enter
mov
pop
fs
mov
mov
mov
lea
cmp
js
cmpsb
in
call
cmp
mov
jle
pop
pop
xorl
or
gs
adc
add
xchg
iret
addr16
fnstsw
sub
orl
es
and
popf
loope
movsb
xchg
aaa
and
sbb
mov
and
popa
mov
push
sub
arpl
in
push
cmpsb
mov
sbb
loop
jg
push
int3
mov
into
push
hlt
cs
cmp
pop
push
mov
mov
xor
or
sub
bound
int
inc
xchg
fstps
data16
inc
lds
adc
cmc
and
pop
pop
sub
or
sbb
add
mov
lea
mov
cmp
loop
out
xchg
insl
xchg
adc
cmc
push
jae
cmp
test
div
adc
sbb
lds
mov
xchg
scas
int
and
jno
xor
sarb
push
sbb
les
fndisi(8087
movsb
jno
orl
xorb
sub
lret
dec
out
jb
pop
popf
aaa
inc
stos
loop
dec
gs
scas
mov
pop
jl
outsl
in
dec
inc
sbb
pop
outsb
in
and
push
jnp
mov
jle
sahf
pop
xchg
in
dec
adc
pop
fadds
jno
mull
sub
neg
cmp
adc
pop
in
daa
wbinvd
cmp
popf
jg
push
xor
incb
sub
cmp
fmul
inc
fdivrl
push
cmpl
hlt
int
push
out
inc
push
mov
xchg
fnstsw
pop
mov
ss
into
xor
sub
sbb
mov
scas
jmp
mov
icebp
iret
lret
lods
jno
or
xchg
sbb
push
add
mov
sbb
cwtl
add
cltd
jl
hlt
mov
pop
pop
scas
test
enter
cmp
push
sbb
lock
adc
fdivrs
sbb
xchg
push
xchg
pop
add
fdivs
jns
jmp
imul
stos
cmp
push
test
dec
push
sub
js
sub
or
scas
sub
popa
dec
push
stc
in
and
jno
jnp
outsl
fistl
shll
dec
sti
dec
cli
test
sub
jmp
jge
test
icebp
adc
loope
int
xchg
xor
dec
lods
mov
jmp
in
fs
xor
jno
push
cwtl
outsb
xorl
sub
push
mov
xor
xor
cmp
lahf
adc
call
nop
mov
test
pop
imul
and
fnstcw
push
fcomp
pop
lods
dec
pop
lock
sbb
mull
ror
lods
std
out
sbb
ret
stos
push
lds
jmp
mov
sub
loopne
and
call
subps
or
ss
adc
xor
lods
mov
ret
push
add
mov
pop
pushf
fs
inc
loopne
xlat
pop
fcoms
add
sub
cmpb
lret
repnz
and
and
cmpsl
int3
add
inc
out
pusha
xor
sbb
std
mov
mov
in
mov
xchg
je
xor
les
cltd
mov
fisttpll
inc
js
int
out
jecxz
data16
fisubrl
xchg
rcrb
sub
pop
mov
repnz
jge
pop
fs
mov
mov
sbb
cmp
sbb
mov
scas
mov
sbb
lock
dec
lcall
movsb
int3
xor
jbe
call
ja
jl
push
jo
pop
and
in
inc
jg
dec
sarl
cmp
mov
das
fdivp
ret
test
or
xchg
insb
jno
cmpps
cli
insl
js
and
fadds
or
leave
pop
into
clc
loope
mov
out
icebp
cmpsb
stos
mov
lcall
xor
add
je
out
imul
sbb
pop
ret
jbe
test
mov
sbb
mov
push
push
push
dec
test
xor
leave
pop
cmpsl
lahf
lock
mov
jmp
ss
jno
cmpsl
out
out
push
nop
pop
sbb
rcl
divl
pusha
fdiv
jg
fwait
and
mov
cmp
ja
shlb
xor
andl
fs
in
mov
into
clc
xchg
mov
add
cs
stos
and
loope
mov
aaa
inc
ljmp
daa
push
mov
lods
call
dec
hlt
arpl
dec
cs
les
add
arpl
adc
stc
repnz
push
push
cmp
out
int
inc
rcrl
and
mov
int3
mov
sub
data16
or
and
jb
addr16
mov
lret
and
jbe
repnz
jb
xchg
mov
mov
scas
or
mov
jnp
push
mov
mov
sbb
push
mov
push
push
mov
scas
ljmp
jno
enter
out
jb
jb
inc
or
inc
mov
sbbb
cs
lret
sbb
rcrb
scas
mov
out
int3
lods
xor
daa
jmp
and
mov
push
xchg
xchg
mov
push
testb
add
sub
jne
xchg
pop
test
cmp
inc
mov
test
lahf
inc
mov
sbb
push
scas
xor
mov
cli
push
fadd
clc
imul
int3
mov
jle
lcall
push
pop
cmp
les
popa
sarb
adc
les
pushf
call
in
cld
btr
out
shr
jo
enter
mov
icebp
cli
cmpsb
adc
shr
icebp
dec
call
iret
ret
add
push
sbbl
sahf
mov
and
je
push
orl
inc
xor
push
mov
push
push
shll
out
cltd
and
lds
ja
lahf
xchg
js
push
push
je
sbb
cmp
mov
loopne
xchg
lcall
inc
js
faddp
mov
push
bound
rclb
out
frstor
sahf
xchg
add
push
sbb
aam
cli
pop
mov
push
leave
pop
nop
cmp
sbb
inc
mov
daa
enter
push
push
ja
aas
lods
push
sti
into
fxtract
fistpll
push
rcr
cmp
xor
dec
add
fnsave
pop
jo
inc
addr16
mov
data16
orb
pop
adc
sbb
jnp
xor
ds
ljmp
icebp
fcmovnb
add
jbe
push
std
mov
enter
out
cld
repz
push
xchg
push
sub
xchg
cmp
imul
lcall
ljmp
int
and
les
push
mov
sbb
push
sti
sub
je
popf
mov
lahf
and
sahf
push
cld
cmpsl
loopne
cltd
leave
push
movsb
je
divl
lock
jnp
pusha
mov
test
icebp
call
icebp
gs
dec
dec
add
jle
les
and
sahf
in
dec
sub
in
jae
jle
jne
addr16
inc
ja
and
aad
aad
mov
int3
mov
ss
dec
inc
pop
shlb
xor
lret
mov
arpl
gs
jge
addl
sbb
loope
add
mov
xor
mov
loope
adc
fstps
rolb
iret
jge
aam
mov
inc
adc
push
xchg
sbb
loop
xchg
inc
lret
mov
cmpsb
lock
adc
push
cmc
and
jmp
lret
lret
outsl
popf
sub
xchg
push
pusha
cmp
testl
scas
fadds
cmpsb
test
jle
mov
mov
ss
in
call
fdivr
cmpxchg
add
test
and
pop
pop
fisubs
in
lds
xor
into
call
add
dec
sbb
adc
enter
rol
or
bound
call
xor
rcrl
pop
in
adc
add
fdivrs
int3
rcll
ja
or
sbb
pop
out
fnstcw
jl
and
xor
dec
pop
test
aad
xchg
push
aad
lret
popa
lret
fmuls
push
inc
jp
pop
in
or
mov
filds
pop
imul
aas
imul
sbb
cli
lcall
fildl
dec
in
fs
fistpl
jg
es
repnz
cmp
pusha
je
add
fwait
sub
cmpl
pop
stos
lea
pop
mov
ss
mov
xchg
add
add
loop
adc
mov
and
jmp
xchg
into
pushf
int3
push
movsl
push
or
push
or
mov
rcrl
push
loopne
lcall
and
mov
insl
mov
dec
fucom
pop
mov
stos
jae
out
sbb
add
inc
xchg
mov
pop
loopne
ja
push
int
das
adc
fisubrl
data16
dec
push
addr16
rol
add
jecxz
pushw
das
xor
xchg
mov
cmp
mov
ja
ret
outsl
push
stos
fildl
push
and
xor
in
ds
xor
pop
inc
push
mov
es
or
int3
shl
ret
xor
mov
or
movsl
rorl
fisubl
pop
test
sahf
mov
xchg
cmpsl
mov
lods
jmp
sti
stos
test
dec
jne
jg
test
rol
add
loope
jo
scas
pop
xor
in
loop
add
mov
mov
cs
out
icebp
push
sahf
mov
out
cmpsl
dec
ja
pushf
fdivp
sub
sbb
sbbl
inc
cmp
lock
xchg
ret
mov
pop
call
sbb
outsb
xlat
and
repnz
mov
aas
lods
xor
jmp
push
pushf
ret
push
add
arpl
lds
out
push
mov
push
rcrl
hlt
cli
arpl
inc
in
mov
dec
nop
repz
or
cmpsl
pop
jg
adc
pop
hlt
loope
jle
sub
adcl
fisttps
dec
sbb
xor
and
add
cmp
addb
ljmp
push
mov
fdivp
mov
cmp
testl
mov
and
mulb
or
test
loope
cld
or
dec
fs
in
bound
jle
jl
dec
repnz
mov
push
daa
les
pop
scas
pop
jne
lahf
adc
fs
roll
sub
lods
sbb
add
and
add
and
rcl
lds
loope
cli
sub
push
in
aas
mov
cli
out
nop
push
das
je
lret
inc
fisttpll
sub
std
push
xor
xchg
pusha
int3
sti
sbb
fwait
scas
cmp
cmp
inc
add
aas
repz
adc
fldcw
add
lods
inc
fnstenv
movlps
push
popa
sub
orb
sbb
subl
dec
imul
inc
cwtl
shrb
inc
mov
mov
das
ss
xor
stc
daa
out
mov
mov
insb
dec
jns
roll
jo
ja
data16
mov
iret
rolb
jg
cmpsl
mov
dec
fdivrp
cmc
push
or
idivb
cli
andps
jle
fsubp
push
and
fsubr
dec
adc
enter
in
inc
cmpl
fmuls
sbb
loope
jno
cltd
movsb
jbe
jge
jo
xorl
movsb
out
out
inc
add
out
shlb
xor
decl
stc
jne
call
jae
ljmp
pop
jecxz
xor
mov
int3
fnstcw
int3
adc
cmc
cmp
cmpsl
jg
pop
mov
and
mov
push
imul
jecxz
enter
xor
dec
testb
or
xchg
push
mov
cmc
xchg
scas
adc
ficomps
test
aaa
mov
in
pop
scas
in
cmp
loopne
lret
inc
in
lcall
scas
xlat
out
pushfw
and
dec
inc
add
or
shl
fistpll
push
xchg
jo
or
rcrb
xchg
mov
mov
outsb
add
xchg
imul
sbb
and
xchg
or
stos
sahf
and
xor
sub
push
cwtl
push
movsb
mov
inc
xorl
sarb
pushf
mov
pop
dec
xor
lahf
sbbb
movl
dec
pushf
es
and
push
xor
xchg
push
jbe
jb
cmc
lods
fcomp
stos
mov
loope
arpl
out
mov
add
or
pop
cmp
mov
std
sahf
add
fs
jae
sbb
mov
addl
aad
mov
pop
bound
call
call
or
xchg
lcall
cs
outsl
loop
test
js
xchg
mov
and
movsb
add
shll
sub
and
mov
imul
adc
jae
popa
in
nop
pop
cmpsb
mov
mov
xchg
pushf
es
mov
push
and
dec
icebp
jmp
leave
dec
dec
rolb
fiaddl
jnp
add
pop
dec
das
and
or
ficoms
aas
imul
lock
fmulp
stc
or
std
fadd
daa
jmp
jno
or
mov
test
out
inc
jmp
loop
adc
cmp
cmp
mov
aaa
xchg
rclb
pop
fs
pushl
pop
insl
lret
ud0
and
sub
xchg
in
fwait
pop
lret
jno
mov
pop
psubb
sbb
and
lcall
insl
xchg
cmc
sahf
fiaddl
or
xor
cmc
lret
jo
dec
jg
imul
sbb
mov
bound
fidivrl
push
dec
test
jmp
xor
jns
dec
fs
test
sub
and
stos
push
mull
hlt
pop
mov
adc
into
fimuls
cs
inc
mov
sub
add
clc
push
jno
mov
ret
pop
cmp
pop
js
outsl
fwait
int
sti
or
mov
sub
xor
mov
test
and
dec
aas
repz
mov
dec
mov
ss
js
das
call
mov
mov
sahf
cmp
push
std
xchg
imul
out
add
add
sahf
fmul
test
out
sub
jmp
int
test
stos
mov
push
rcrb
lret
or
and
lcall
xchg
or
pop
pushf
fmull
outsb
or
pop
mov
dec
out
dec
xlat
iret
popa
stos
mov
adc
cs
pop
popa
mov
fsub
or
scas
fisubrs
fcompl
inc
mov
or
add
in
test
addr16
lahf
adc
jo
xchg
mov
add
mov
cs
pop
call
std
lahf
pop
mov
lds
dec
dec
or
mov
mov
cmpsl
or
dec
leave
mov
pop
movsl
ss
mov
int
mov
popf
push
cs
or
sub
out
mov
in
out
xrelease
add
push
outsb
lods
ja
cmp
lods
shll
popa
test
fstl
or
out
mov
ds
and
cmpsb
add
or
dec
in
imul
in
das
pushl
mov
cmp
insl
push
xchg
pop
xchg
mov
mov
icebp
mov
pop
pusha
lcall
inc
jmp
mov
dec
cmp
add
mov
das
inc
outsl
movsb
dec
sbb
push
pop
shlb
sbb
sub
subl
adc
push
add
add
fisubs
or
iret
mov
es
cmp
sub
sbb
pop
sub
pushw
lods
ljmp
dec
stos
rcrb
and
push
push
pop
insl
call
rcrb
pop
pusha
fmul
mov
inc
pop
loopne
xor
dec
jne
push
out
stos
fcomps
negb
inc
xor
cmpsl
out
enter
mov
push
aam
stc
jae
mov
in
mov
lahf
cmp
xchg
jo
add
inc
dec
jmp
out
or
mov
jns
cwtl
jl
pop
sti
push
jl
roll
mov
mov
ret
hlt
lods
in
pop
push
inc
sub
mov
jecxz
lea
sahf
leave
lret
cmp
or
insb
jb
or
mov
popf
in
stc
popf
jg
imul
xchg
mov
inc
les
pop
es
lock
inc
xchg
outsb
subl
lret
out
pop
xor
sub
cmpsb
and
mov
mov
xlat
lods
repz
aas
aas
push
mov
movsl
push
stos
lahf
inc
addl
pop
int
sbb
popf
aam
or
dec
push
hlt
add
xchg
mov
outsb
or
sbb
add
push
movsb
out
imul
jp
fwait
add
mov
xor
pop
mov
jecxz
push
or
add
sbb
les
insb
cltd
and
and
dec
out
cmp
gs
dec
ss
ljmp
jo
pop
cmc
dec
jg
leave
cmpsl
cmp
add
pop
pop
addl
les
aad
shlb
mov
mov
pushl
push
fstps
aam
rorl
clc
fstpt
jo
es
cwtl
or
inc
dec
adc
xchg
dec
js
and
jecxz
negl
out
jle
mov
cmp
clc
repnz
jae
xchg
fnstcw
cmpsl
dec
xchg
insl
stos
es
js
pop
jne
ds
push
mov
mov
jo
lods
pop
lret
rcr
rcll
mov
data16
inc
xchg
lock
mov
into
mov
push
gs
fsubs
jbe
inc
mov
or
inc
aas
into
sub
orb
inc
pusha
jecxz
ret
jnp
pushf
jbe
mov
js
lods
xor
notl
jp
sub
xor
arpl
xor
cmp
pop
inc
xchg
push
insl
in
cmc
aad
inc
pop
mov
xlat
jge
inc
out
fadds
loope
inc
stos
ret
jne
cli
xchg
pop
jns
shr
xor
addr16
addr16
add
les
sbb
aad
shrd
sti
and
jecxz
jnp
sbb
adc
sub
ljmp
add
and
stos
ret
pop
cmp
mov
inc
js
add
nop
push
dec
insb
pop
add
js
sbb
ja
mov
lahf
int3
jmp
lret
push
sub
enter
das
mov
les
adc
push
jnp
daa
mov
push
dec
xorl
and
adc
mov
je
cmpsl
fimuls
xchg
lahf
jnp
iret
insb
rcl
cs
add
push
lods
ss
push
int3
inc
in
cwtl
jecxz
div
inc
mov
sub
jg
lock
stos
in
jg
cltd
inc
shlb
adcl
mov
nop
cmc
int3
repz
and
pop
dec
mov
jo
xchg
stos
mov
push
popf
rcrl
push
push
pop
add
dec
stos
pop
int3
add
inc
fsts
jl
cmp
xchg
lea
mov
andb
xor
movsb
mov
xor
scas
mov
xor
mov
push
or
fwait
jo
ljmp
mov
roll
xchg
pop
popa
insb
mov
jo
dec
out
sbb
movb
xorl
pop
mov
xor
out
cmp
xchg
adc
pushf
sbb
rcr
xchg
ja
mov
lods
stc
iret
jmp
dec
popf
or
out
pop
xchg
xchg
jg
mov
inc
lods
rcrl
iret
xor
in
fcoms
and
push
jge
jmp
lcall
sub
mov
cwtl
insb
imul
loope
cltd
mov
jno
mov
jmp
add
xchg
add
sbb
xor
xor
mov
shll
mov
ja
sbb
adc
test
mov
pop
pushw
xchg
lret
jp
out
and
and
and
mov
imull
stos
push
pop
push
mov
stos
test
cmp
aas
lds
dec
cmp
jns
jle
cmc
mov
and
out
push
lret
out
or
sub
or
and
push
jmp
xorl
push
dec
mov
int3
cmp
pusha
loope
andl
xlat
dec
int
pop
mov
test
lock
mov
sti
ret
out
and
xchg
fbld
mov
out
cmp
mov
pop
mov
int
lea
rcr
xchg
and
inc
inc
xchg
push
add
jle
sbb
outsl
cmp
repnz
xchg
rcrb
add
je
dec
xor
sub
into
clc
fsubl
cmp
test
add
mov
xchg
sub
mov
test
cs
push
jmp
jle
leave
sahf
inc
stos
cmp
jge
mov
shrl
fs
or
push
fistpll
fwait
xchg
dec
js
mov
xchg
xchg
ja
fcos
dec
inc
cmp
push
cmp
jb
in
mov
mov
push
push
filds
and
movsl
xchg
inc
cmp
test
mov
subb
jnp
xchg
jle
jmp
mov
push
pushf
out
test
adc
mov
js
outsl
jp
or
push
xor
mov
divb
dec
xchg
pop
cwtl
ja
insl
pop
fmuls
sub
xchg
mov
lret
shrl
lods
jge
lcall
inc
cmp
xor
push
mov
push
ret
push
jo
cmp
mov
push
or
push
mov
push
std
scas
jecxz
sbb
lock
and
rcll
filds
scas
lahf
cmp
and
sub
movsl
orb
aad
xchg
sbb
gs
fcoms
sbb
in
xchg
pushf
mov
xchg
shlb
push
cmp
mov
divl
test
mov
pop
mov
je
pop
loopne
sbb
jp
xor
addr16
xchg
jecxz
pop
and
mov
pop
sub
mov
stos
leave
dec
mov
loopne
add
adc
pop
test
and
pop
das
mov
scas
dec
or
cmp
or
xchg
jle
jmp
cmp
and
dec
pop
push
jp
callw
inc
out
ds
js
mov
inc
jecxz
mov
jno
xor
pfrcpit2
mov
inc
dec
jmp
es
lds
or
int
xchg
insl
mov
sub
jecxz
pop
jns
mov
mov
andb
test
adc
das
jno
notb
pop
scas
xchg
data16
fs
data16
loope
xchg
mov
mov
insb
mov
sbb
sub
out
cmpsb
push
pushf
pop
arpl
mov
sub
addr16
cld
mov
add
mov
add
or
push
xor
cmpsl
stc
xor
pop
inc
add
sbb
pop
in
test
adc
sbb
into
jmp
gs
jae
les
pop
pop
into
mov
pusha
insl
cwtl
stc
cmp
pushf
cld
popf
aad
sbb
mov
push
int3
into
xchg
mov
pop
call
mov
test
ja
xchg
jae
jnp
cmc
mov
bnd
popf
or
jle
and
inc
xchg
cmp
stc
adc
repnz
in
inc
enter
mov
add
jbe
dec
ljmp
mov
popa
jge
out
dec
push
jmp
xchg
xor
fidivs
mov
and
adc
inc
loope
jno
insl
fisubrl
mov
imul
fwait
add
lcall
ficoms
mov
or
cwtl
sahf
cld
lods
stos
aam
pop
pop
aaa
ljmp
loopne
sbb
into
cmpsl
iret
repnz
jmp
movsb
int3
imul
das
lods
ja
out
xor
xchg
cmpsl
inc
or
pop
cli
mov
ds
divl
pop
pop
fdivr
or
and
cmp
pop
stc
sub
sbb
mov
daa
hlt
fsubrs
lds
out
dec
or
dec
outsb
cmp
or
cltd
out
data16
imul
gs
adc
shrb
push
fnstenv
push
insb
pop
inc
adc
ss
push
sub
sub
sbb
into
jns
int
pop
cmp
stos
cmp
ret
adc
jb
inc
push
mov
push
sbbb
enter
pop
adc
add
inc
ja
ret
leave
inc
mov
cld
xchg
ret
or
scas
in
inc
rcll
adc
int
rcrl
shl
jmp
sub
rorb
xchg
int3
xchg
fwait
bound
mov
sub
mov
push
lahf
ret
cmp
mov
mov
mov
adc
movsl
fs
pop
and
insb
fwait
mov
push
loop
insl
rcrb
jp
std
fwait
test
dec
xchg
fidivrs
mov
clc
in
iret
cmp
repz
xchg
fisubrs
pop
lds
jg
rclb
pop
or
xor
addl
mov
mov
xor
jnp
mov
push
clc
mov
rcrl
js
outsl
dec
or
fnstenv
pop
cmpsl
ss
cmpsb
cld
lahf
adc
dec
inc
fcmovnb
cmc
bound
pop
in
pop
repnz
insl
jmp
lods
icebp
aas
and
test
scas
aam
and
cs
push
cwtl
insl
imul
mov
mov
dec
xor
xchg
shll
lahf
xchg
sub
pusha
jb
aas
mov
xor
fsubs
nop
push
aad
testl
fisubs
sbb
xchg
popf
xchg
lds
ret
jl
ds
pop
lock
gs
icebp
and
test
pop
xlat
ljmp
adc
aam
imul
and
sub
xor
fchs
jb
xchg
push
sarl
pop
adc
sub
sub
inc
sbbl
sbb
xlat
inc
pop
sbb
ljmp
inc
loop
scas
mov
addr16
int
mov
iret
es
aam
xchg
sub
fisubrs
stc
dec
cwtl
dec
ljmp
cmp
push
push
push
pop
cs
incb
push
imul
adc
loop
adc
aas
repnz
repnz
jge
lret
movsb
test
loop
xor
out
mov
jns
jno
daa
and
pop
jnp
nop
mov
add
ret
push
insb
fists
pop
or
lcall
sarl
mov
lret
mov
mov
mov
notb
shrb
jne
out
leave
in
mov
movsb
fbstp
cld
imul
int
in
lret
fisttpl
sub
xchg
aaa
cwtl
lret
mov
insl
cltd
arpl
adc
lock
lds
in
cld
and
sub
repz
push
add
sarb
push
in
repnz
ljmp
insb
xor
fadd
sub
lods
xchg
lret
mov
sub
push
mov
add
fst
cld
sbb
cwtl
pop
jne
rcl
popa
dec
shlb
pop
jmp
and
push
cmp
movsb
sbb
lcall
xorl
jne
and
adcb
push
jb
pop
mov
shlb
lahf
in
mov
pop
fisubs
xor
rcl
xchg
sahf
xchg
mov
data16
cmp
pushf
pop
nop
daa
mov
shrb
mov
jecxz
cmp
ja
jns
jmp
lock
mov
add
arpl
inc
xor
pop
cwtl
add
lods
push
fiadds
bound
rclb
aam
lods
and
mov
dec
jo
mov
mov
test
imul
xchg
movsb
push
xchg
ret
and
test
adc
and
push
ja
sub
jecxz
aad
dec
cmc
jmp
flds
mov
movsl
mov
fdivl
dec
bound
jb
imul
or
mov
mov
xlat
xor
das
push
xor
fldenv
mov
add
sbb
adc
cmpsl
outsb
xchg
adc
int
shrl
aas
cmp
int
cmp
dec
dec
jg
or
out
insl
les
jb
nop
inc
je
ret
imul
fwait
jnp
nop
ds
js
push
sub
mov
xchg
pop
icebp
mov
sahf
daa
repz
mov
mov
data16
jbe
fdivr
addb
aaa
int3
fidivs
shrb
stos
int3
jne
pushf
cmpsb
inc
cmp
cmp
jmp
in
push
mov
jns
lret
imul
add
mov
imul
movsb
mov
pop
lock
push
pop
inc
scas
adc
call
pop
data16
dec
sub
mov
sub
xchg
adc
xchg
lods
sub
and
out
cmp
roll
rolb
sub
cwtl
fdivl
xchg
call
xchg
and
dec
inc
int3
xchg
mov
sbb
sub
repz
subl
mov
fidivl
call
jmp
push
mulb
mov
daa
sbb
and
xchg
ret
sbb
je
add
adcb
mov
xchg
cmpsb
mov
mov
addr16
mov
fisubrl
adc
add
test
ret
push
dec
das
shl
int
mov
cmp
repnz
aad
adc
adc
clc
aam
push
rorl
mov
inc
insb
mov
in
in
xlat
ljmp
add
mov
pop
and
mov
mov
mov
stos
lods
stc
jp
pushf
jae
fcomp
insl
imul
dec
in
and
inc
aas
out
mov
or
lret
mov
sahf
cmp
enter
push
in
fucomi
mov
sbb
xor
jns
int
mov
cmp
xor
dec
mov
gs
xchg
push
push
repz
dec
xchg
sbb
xchg
mov
stos
insb
cmp
fwait
and
fdivl
fs
test
cmp
push
mov
inc
mov
xor
in
test
fidivs
cmp
pop
push
daa
fimuls
lret
mov
push
cmp
std
jnp
pop
or
adc
ds
cld
mov
subl
inc
xor
and
jo
js
jmp
add
xchg
sti
mov
icebp
mov
jp
or
je
and
sti
repz
bound
and
sub
loop
loop
fcomip
call
mov
xor
sbb
loop
push
bts
mov
push
cwtl
sahf
pop
mov
adc
and
add
ja
add
ss
loopne
push
dec
xchg
int
dec
and
adc
out
sbb
xchg
cmp
fdivrs
push
cmpsb
neg
jp
rcll
stos
loop
lds
fisubrl
push
shlb
sub
inc
push
pop
inc
pop
xchg
iret
insl
lcall
sub
fwait
aaa
cwtl
inc
add
sub
fsubrs
aas
pop
orl
mov
popf
xchg
pop
sub
mov
orb
jl
cmp
cli
lret
lcall
mov
push
jp
cmp
inc
mov
xor
setno
std
mov
or
fdivr
jns
xor
nop
sarl
test
movsl
sahf
loopne
dec
test
adc
fnstcw
lods
test
cmc
loope
mov
inc
in
mov
xchg
cli
xchg
inc
inc
insb
and
push
sbb
bound
adc
push
outsl
sbb
fsubrl
xchg
sub
bound
ss
mov
lcall
hlt
cmp
lret
mov
xchg
sub
adc
cmp
push
pextrw
mov
shll
out
mov
jl
xchg
adc
jmp
loopne
clc
mov
or
sbb
mov
gs
xlat
and
mov
mov
fs
mov
add
adc
inc
mov
sbb
inc
pop
cwtl
out
push
push
xchg
push
jl
jno
out
into
fsubrp
pop
mov
inc
mov
xchg
out
test
ljmp
imul
pop
xchg
shlb
inc
clc
push
mov
mov
adc
mov
cwtl
add
subb
cmp
mov
sbb
mov
jo
ds
mov
rcll
lahf
ds
and
xor
lret
and
mov
ljmp
jp
mov
or
scas
je
pop
out
imul
or
cmp
push
fdivrs
popf
outsl
js
sub
jnp
cmpsl
ss
arpl
and
xor
cmpsb
adc
clc
jge
jle
mov
mov
push
push
leave
aas
aas
cmpsl
sti
pop
sub
xchg
pop
mov
mov
add
outsb
sbb
inc
call
icebp
mov
outsb
xor
shlb
cltd
idivl
fwait
and
in
inc
scas
fsts
push
xchg
or
dec
jmp
mov
mov
pop
fdivrl
or
cmp
cld
cmp
ljmp
cmpsb
or
bnd
rolb
adc
outsb
xchg
inc
cmp
or
test
sbb
mov
stos
push
in
outsl
pop
mov
or
or
inc
push
dec
dec
movsl
loope
pop
pop
test
mov
sub
loopne
mov
sbb
adc
sti
loope
push
fidivrl
es
fmulp
mov
xor
sti
sub
sub
adc
lcall
or
inc
dec
pushf
lea
cli
mov
imul
out
setg
xor
jns
mov
xor
int
bswap
sahf
sbb
lret
inc
jb
imul
jae
frstor
lods
in
enter
xchg
mov
stos
inc
xor
xchg
loop
mov
or
jnp
sbb
clc
inc
je
sub
in
adc
imul
lds
fstpt
push
ret
push
fimuls
out
pop
jns
jp
xchg
pop
mov
add
stos
arpl
aas
cmp
xlat
out
mov
shll
inc
orb
iret
cltd
outsb
ss
cli
add
xlat
leave
mov
ficoms
xlat
mov
sbb
and
jbe
icebp
sar
pop
push
imul
adc
adc
xor
out
or
mov
mov
push
stos
push
sbb
pop
jbe
icebp
jl
call
cmpsb
popa
loope
jl
mov
cltd
lock
xchg
movsl
mov
inc
and
and
lcall
es
icebp
jmp
gs
les
out
cmp
jp
insl
imul
mov
mov
mov
inc
sbb
aaa
int
or
mov
icebp
and
in
stos
add
dec
mov
inc
xor
ja
cmp
add
lcall
mov
shrl
clc
jge
add
or
das
xor
ds
sbb
pop
sub
daa
xchg
pushf
clc
mov
jb
int
sbb
xor
mov
pop
and
jl
jp
shlb
mov
rol
popa
mov
loopne
mov
lcall
bound
dec
pop
cmc
cs
fldcw
sub
add
daa
xchg
adcl
xor
jp
insb
mov
xor
dec
pop
icebp
jecxz
dec
pop
faddp
mov
aas
xorb
jge
jle
aaa
fdiv
or
inc
mov
incb
push
mov
outsl
jae
xchg
and
aam
inc
dec
fildl
xchg
or
das
arpl
mov
aaa
shr
jns
stos
hlt
sub
sbb
lret
inc
call
imul
cltd
repnz
jmp
pop
fldt
jno
jbe
mov
mov
cmp
xor
loope
ret
fildl
xorl
push
imul
fiadds
mov
data16
outsb
gs
cmp
lods
in
lret
loopne
push
mov
xor
push
mov
or
inc
mov
mov
push
iret
movsb
ds
pop
sarb
or
sahf
mov
fcomp
inc
sub
fisttps
bound
fs
test
mov
dec
add
pop
jp
add
lahf
cmp
mov
gs
push
push
shll
pop
ror
sbb
enter
xchg
ljmp
mov
mov
push
cmp
int
cwtl
in
test
adc
nop
pop
cmc
xor
ds
mov
and
test
movsl
je
jno
dec
jns
iret
repz
mov
xchg
aam
out
mov
and
xor
sbb
inc
sbb
mov
add
mov
push
pop
jl
das
xor
cmp
scas
xchg
and
mov
xchg
mov
daa
and
add
addl
call
mov
cltd
imul
loope
sub
jp
cmp
das
jbe
and
pop
lods
and
inc
call
pop
jl
fstl
idivb
jmp
outsl
out
shr
or
xchg
and
pop
in
sub
or
mov
std
mov
mov
fcmovnb
xchg
sahf
fwait
js,pn
scas
fs
int3
add
pop
sub
adcl
fdivl
call
lods
mov
push
jl
ret
das
lods
dec
adc
pushf
and
dec
out
inc
aam
mov
push
inc
int
and
push
and
ss
insl
xchg
jecxz
adc
adc
cld
mov
pop
fcoms
cld
notb
stos
push
repnz
jecxz
mov
aas
xrstors
sub
sub
dec
shl
sub
mov
out
nop
add
jne
clc
pop
rclb
push
mov
pusha
jmp
xchg
in
imul
outsl
lods
mov
jne
les
add
mov
mov
ds
icebp
aaa
mov
imul
cld
repnz
sbb
sub
push
xchg
in
ss
out
mov
cld
dec
repnz
pop
movsb
cmpsb
or
jns
sub
lods
shll
dec
mov
dec
sbb
xor
and
sbb
push
mov
addl
lahf
cmc
push
mov
stc
jmp
pop
push
push
sub
scas
dec
dec
scas
push
or
pop
cmp
je
in
daa
add
sbb
cmpsb
dec
jg
adc
fdivl
scas
ficoms
movsb
xchg
in
mov
in
pop
and
dec
sbb
jbe
jae
mov
jp
stos
sub
sub
and
stc
scas
push
scas
xchg
or
mov
dec
xchg
mov
or
daa
lds
jns
xor
fisttps
sub
adc
pop
imul
fnstsw
sbb
push
and
inc
and
scas
pusha
xchg
mov
dec
jns
mov
lds
pop
ret
scas
cmp
dec
xor
andl
add
push
mov
push
fnsave
imul
mov
std
push
adc
cmp
shlb
sub
mov
push
psubb
and
mov
sahf
movsl
xchg
imul
lret
cltd
movsb
outsl
mov
imulb
mov
mov
shrl
inc
mov
repz
mov
mov
loope
lret
xchg
xchg
into
and
sbb
cmpsl
enter
mov
loop
adc
add
push
jnp
jne
push
xchg
ret
insl
and
in
inc
cmp
pop
pushf
call
cld
dec
aam
push
clc
insl
pop
push
outsb
cmp
call
es
jns,pt
movsl
les
inc
mov
xor
imul
jne
pushf
insb
adc
push
in
xlat
mov
cmp
mov
stos
repnz
jno
xchg
test
in
xor
loope
and
pushf
or
mov
mov
pop
je
adcl
dec
jnp
jp
ja
mov
ja
fsts
sbb
lahf
pop
dec
xor
and
sbb
xor
add
popf
push
dec
inc
dec
cwtl
clc
sub
ja
jmp
jge
push
push
sarl
xlat
xor
add
popf
mov
shrl
add
or
mov
shll
cmpsl
into
leave
fists
cwtl
push
add
subl
push
cmp
pop
adc
rorl
sub
inc
mov
leave
pushw
pop
in
mov
xchg
push
push
and
in
xchg
fcmovne
popa
mov
adc
adc
mov
pop
call
pop
push
int
das
mov
sti
adc
jmp
mov
pop
pop
mov
xchg
jbe
out
xor
mov
xlat
lahf
adc
scas
cld
and
out
fidivrs
out
dec
inc
out
inc
movsb
mov
aas
lds
mov
and
mov
mov
lret
fucompp
dec
push
lock
icebp
add
add
loop
add
loop
sbb
jmp
xor
cmp
xchg
jp
mov
mov
sub
decl
sub
cmpsl
clc
loopne
nop
scas
rorb
outsl
int3
pop
inc
test
stc
stos
aas
shrb
jo
mov
sub
push
or
nop
test
les
inc
aam
cmp
mov
lds
xorb
xchg
imul
loopne
in
sub
inc
enter
inc
cmp
sbb
popa
dec
mov
inc
jge
leave
push
xchg
xchg
imul
inc
sbb
dec
stos
pop
mov
out
mov
lret
shll
add
mov
in
mov
mov
or
mov
push
xor
jmp
xchg
jns
test
cmpb
push
sahf
and
stos
stos
fwait
xchg
sub
xlat
imul
sbb
lret
add
lods
pop
icebp
mov
lahf
icebp
inc
int3
sub
xchg
jne
inc
xchg
stos
xchg
mov
mov
pop
shrb
leave
push
mov
testb
adc
movsb
cwtl
sub
pop
lods
dec
xor
mov
push
iret
addr16
pextrw
push
sbb
fsubrs
pop
pusha
sub
fs
sub
imul
mov
mov
add
pop
sub
stos
iret
jg
or
jae
pusha
data16
dec
and
and
add
rolb
jmp
xlat
xor
jae
dec
mov
imul
cmpsl
cmp
fcmovbe
adc
stc
dec
push
lock
int
and
mov
cmpb
push
sub
hlt
pop
xchg
data16
in
jge
aaa
xchg
lds
aam
lds
sbb
cmp
add
outsb
daa
add
out
inc
mov
xchg
addr16
das
leave
pushl
movsl
push
mov
sbb
rolb
xor
jmp
xchg
clc
adc
push
dec
mov
pushf
lock
repz
lahf
notb
mov
inc
inc
jnp
xchg
dec
or
inc
cmp
jmp
lods
daa
scas
pop
inc
repnz
scas
pop
loope
ret
cwtl
mov
notl
sub
les
fsubrs
icebp
fistpl
aas
sub
stc
gs
xchg
in
mov
lahf
mov
mov
push
mov
pop
lods
movsb
cmpsb
scas
lock
sarl
outsb
or
fsubr
out
cmpsl
inc
push
test
mov
mov
push
lock
xor
popf
or
loopne
mov
lods
cli
xor
xor
mov
pushf
pop
xchg
xchg
and
imul
dec
xor
xchg
pop
xor
out
xor
cld
jl
dec
shrb
cmp
sbb
and
cli
das
cmp
xlat
in
mov
sti
xor
sub
or
mov
and
and
fs
jp
pop
mov
lea
ret
imul
adc
jno
shl
xor
das
xchg
sbb
add
cmc
sahf
xchg
lahf
fsts
mov
test
xor
or
pop
leave
xor
inc
lods
cmp
or
ja
jmp
jbe
pushf
pop
into
into
inc
mov
push
sbb
inc
cmp
lret
fucomip
ss
inc
jb
sbb
pushf
fmull
gs
push
les
cmp
in
call
pop
pop
lcall
sbb
push
test
pop
outsl
out
xchg
shll
jge
ljmp
or
xadd
ds
push
not
add
sbb
aad
clc
dec
scas
pushf
or
jecxz
sbb
outsb
mov
push
jb
hlt
cwtl
shlb
dec
mov
shrl
push
test
jmp
int3
mov
hlt
xchg
xchg
mov
cmp
or
pop
add
mov
push
dec
sub
adc
je
or
mov
adc
sub
gs
cli
mov
dec
cmp
mov
cmp
cmp
scas
add
jb
jns
into
mov
shrb
jl
mov
or
fisubl
and
mov
cwtl
je
ss
nop
mov
or
test
shll
and
mov
mov
out
ja
insl
add
mov
fnsave
mov
andl
push
movsl
adc
inc
adc
fdivr
iret
bound
aas
sbb
out
mov
inc
add
dec
add
jmp
sti
inc
cmp
pop
sbb
mov
push
push
test
outsb
mov
test
sbb
lods
xchg
add
mov
mov
cmp
repz
mov
fistpll
pop
aaa
pop
fldenv
xchg
adc
divl
sub
sbb
outsb
xlat
fstpt
out
or
ja
notl
loope
pop
mov
mul
dec
out
popf
lea
jae
jne
push
jbe
jno
adc
adc
mov
mov
popf
mov
popf
into
adc
jle
add
lods
xchg
mov
or
mov
ret
mov
jge
inc
pop
and
ror
shll
clc
bnd
dec
mov
fcmovne
or
shrb
push
dec
jb
aad
and
les
cltd
in
cvttps2pi
ret
mov
add
mov
or
lret
mov
sbb
pop
pushf
out
push
xor
mov
sbb
mov
adc
dec
mov
xor
xor
fcmovnu
mov
fnstsw
sub
in
sub
xlat
outsb
push
xor
mov
aam
jmp
jb
lock
mov
pop
lods
dec
mov
push
xchg
out
adc
inc
xor
lret
push
outsl
stos
repz
sub
addr16
cmc
mov
out
in
cmc
mov
add
and
push
iret
hlt
xor
cld
xchg
test
insb
xor
popa
scas
hlt
add
or
push
in
sbb
fwait
mov
stc
fdivrl
neg
cwtl
adc
sbb
mov
pop
std
pop
ss
test
mov
aam
adc
daa
and
pop
test
lea
xchg
addr16
int
mov
cltd
and
insb
sub
xor
jno
xor
ja
nop
ds
sbbb
out
dec
jecxz
cmp
in
xlat
sbb
xchg
jg
mov
sbb
les
mov
test
push
inc
in
clc
hlt
adc
mov
lds
jbe
dec
adc
rcr
inc
adc
inc
push
inc
icebp
test
stos
or
sbb
xchg
sbb
cli
lods
fstpl
ds
mov
adc
popa
xchg
in
test
aas
sub
mov
push
popa
or
nop
or
push
dec
mov
stos
rcrb
adc
daa
cld
and
cmp
imul
test
rcl
xchg
loope
in
shr
xchg
xchg
fidivl
insb
lods
push
pop
xchg
mov
icebp
sbb
xchg
test
imulb
mov
mov
ret
pop
jp
cmp
push
cli
mov
adc
fiaddl
cmp
jns
enter
pop
dec
push
shrl
repz
add
jo
push
inc
mov
arpl
pop
notl
loop
hlt
popf
xchg
xchg
cltd
fwait
lret
sti
and
cld
sbb
addr16
lods
scas
ja
cmp
stos
pop
arpl
ljmp
icebp
mov
or
pop
adc
js
add
xor
xchg
pop
xchg
aaa
data16
repz
shll
faddl
jo
mov
lods
sbb
xor
lock
inc
or
jbe
adcb
sbb
sbb
inc
fisubl
xchg
mov
aas
mov
jb
adc
pop
cmc
jle
jno
add
in
jmp
ljmp
js
mov
dec
shll
in
and
push
cmp
in
stos
fwait
add
jns
jbe
mov
sbb
jp
cmp
jge
mov
pusha
pop
sub
adc
cmp
cmp
mov
pop
in
xor
xor
test
dec
ss
fnstcw
mov
mov
xor
mov
mov
es
adc
adc
roll
ljmp
mov
movlps
scas
and
mov
cmp
mov
lds
repnz
rolb
and
es
repnz
cmp
sbbb
sub
call
jnp
imul
adc
mov
jae,pt
sub
pop
mov
mov
fistl
loopne
inc
ds
pop
or
inc
add
lock
add
sbb
out
out
push
inc
mov
sbbw
test
push
and
mov
jge
adc
ss
push
pop
push
pop
cli
jnp
mov
dec
fs
mov
adc
enter
sbb
xchg
push
push
dec
push
cli
push
pushf
mov
inc
call
inc
xchg
adc
stc
mov
mov
dec
outsl
movsl
sub
aam
imull
fwait
fwait
dec
pop
divb
sahf
xchg
je
jbe
pop
cmp
pop
mov
inc
sbb
ljmp
movsb
loop
lcall
xchg
fld
mov
jg
das
daa
std
mov
cmovne
popf
das
mov
and
mov
clc
repnz
adc
ss
orl
stc
pop
orb
insb
jecxz
push
das
leave
jg
push
scas
test
and
leave
test
sbb
out
les
out
daa
repnz
cmc
loopne
fidivs
mov
push
push
stos
loop
adc
stos
add
aam
cmp
inc
jns
cwtl
inc
adc
push
aas
daa
cmp
scas
xchg
addr16
push
xor
push
mov
jge
movsb
les
lcall
jno
jnp
fwait
and
lret
mov
ss
int
add
lret
fs
in
push
addb
leave
adc
push
imul
data16
mov
btrl
mulb
xchg
insl
add
int
popa
mov
into
sbb
test
xor
adc
jo
inc
out
xchg
xchg
or
dec
lods
jmp
inc
adc
mov
lret
sbb
xor
bound
cmp
push
jp
or
outsb
jge
pop
repz
adc
mov
jge
call
movsb
lods
mov
and
popf
adc
in
jp
xor
add
dec
xchg
aaa
add
cli
repz
mov
loop
add
push
sbbl
lds
jmp
mov
cli
cmpsl
lock
cmp
cmpsb
adc
fimuls
jae
push
and
es
pusha
mov
jmp
or
insl
or
or
lods
push
cmp
add
in
pop
mov
add
mov
mov
int
ss
xchg
mov
in
pop
lods
sub
mov
jge
ds
scas
andl
xchg
add
push
cld
lret
insb
shll
dec
inc
movsb
inc
out
inc
lcall
pop
fcom
push
int
add
clc
clc
sahf
and
inc
fld1
inc
cwtl
movsb
out
and
lds
mov
jecxz
mov
insb
or
in
repnz
xchg
mov
push
cmpsl
and
fisubrs
sub
cmp
and
pusha
adc
inc
and
sbb
cmp
mov
push
nop
out
or
loope
lods
jns
xchg
sub
mov
test
pusha
popa
pop
mov
add
sbb
les
movb
pusha
mov
cmp
jecxz
mov
mov
adc
mov
in
call
shlb
imull
mov
xchg
push
adc
pop
std
pop
cltd
adc
adc
xchg
in
jp
pushf
xchg
mov
into
lahf
xchg
mov
jne
inc
imul
mov
in
sbbb
insl
add
movsl
stos
cmp
inc
out
jl
fwait
mov
dec
jg
cmp
xchg
pop
cmp
cwtl
and
adc
sub
xchg
xlat
sub
out
iret
or
sub
sahf
or
xchg
xor
push
sbb
pop
shlb
frstor
add
lds
fldcw
jg
xchg
loope
out
fwait
push
mov
imul
push
dec
in
leave
cmpsb
jmp
dec
les
xor
pop
shrb
jae
in
insb
mov
xor
cmp
mov
sbb
imul
xchg
aaa
and
pop
fnsetpm(287
mov
sbb
pop
in
sub
int3
add
pop
cmp
push
inc
fldz
test
dec
or
or
andb
mov
cmc
xor
xchg
sub
test
rorb
push
in
js,pt
outsb
test
jle
dec
mov
mov
popf
inc
cltd
push
mov
sarl
cmp
data16
push
rclb
hlt
iret
cmpsl
dec
popl
iret
adc
xor
cld
add
daa
imul
adc
inc
sub
addl
scas
mov
mov
xor
cmp
jg
movsb
scas
pop
and
push
jg
lea
aad
cs
daa
cmp
fstps
xchg
into
jl
idivl
lcall
sub
cmp
push
sbb
outsl
movsl
mov
mov
jne
aad
jmp
sub
adc
sub
aaa
xor
es
in
push
scas
dec
out
popa
std
sbb
addr16
jl
pushf
pusha
ret
sarl
aas
xchg
mov
fldl
fistps
push
roll
out
cmp
stos
and
xlat
leave
sbbl
ss
pop
test
xchg
into
arpl
fisubs
stos
adc
mov
jae
xor
mov
dec
mov
pop
jmp
mov
movsb
sbb
jecxz
xor
sti
xchg
lret
fdivrs
scas
sbb
xchg
jge
push
dec
test
cmc
cmp
and
iret
cmp
jb
pop
popa
sbb
xor
in
xchg
es
or
les
cwtl
daa
sahf
fdiv
test
aas
js
cmp
test
adc
ljmp
push
loope
shll
cmpsb
lret
and
mov
push
add
lret
cmp
cmp
lret
pop
and
in
in
push
xor
mov
mov
or
cmp
gs
stc
mov
jp
and
shl
aad
aam
outsl
xchg
sub
movsl
jns
dec
jecxz
cmpsl
popa
movsb
popf
jb
rcrb
push
out
mov
xchg
je
add
stos
sbb
xchg
push
xchg
addps
mov
outsl
adc
mov
test
xchg
xchg
cmp
inc
adc
test
add
scas
lret
stc
jno
shrb
push
cli
ror
mov
xor
addr16
xor
pop
pop
jp
pop
jge
fisubs
outsb
in
fsubr
cmpsb
or
mov
scas
das
pop
ds
push
daa
repnz
mov
pop
xor
mov
mov
negb
push
dec
ds
xor
ljmp
or
and
inc
sub
jnp
mov
in
repnz
lahf
rcll
mov
leave
mov
stos
push
aaa
aad
pop
mov
xlat
rol
imul
mov
lea
mull
out
lcall
shrw
test
inc
or
xchg
mov
and
loopne
in
lahf
xlat
jnp
shr
sub
test
xlat
adc
addr16
lahf
out
jg
mov
getsec
mov
cmc
pop
add
cmpsl
add
jnp
mov
enter
loop
dec
or
repz
xchg
repnz
fsubrl
mov
mov
mov
inc
dec
loope
mov
sbb
xor
sbb
xor
enter
mov
push
pcmpgtb
sbb
mov
pushl
imul
icebp
jge
and
movsb
cmp
adc
sbb
mov
adc
lods
imul
cmp
mov
stos
cmp
lcall
pop
adc
mov
scas
push
and
mov
add
mov
pop
out
leave
loop
in
es
jnp
cwtl
pop
aas
mov
cs
ss
in
insb
xchg
sub
sub
xor
lret
insb
mov
sti
and
cs
daa
fwait
push
cmp
sbb
jecxz
pop
lcall
or
push
mov
mov
into
ffreep
ror
xchg
aad
mov
test
sub
sub
jns
lcall
cmpsb
sarb
pop
outsl
fisubl
adc
pop
lock
jno
sub
xor
sub
out
and
out
dec
inc
mov
test
cmp
mov
test
jne
jno
mov
cmc
es
sbb
aas
int3
mov
xchg
mov
xchg
fwait
mov
and
sbb
lret
andb
inc
fucomip
or
and
push
pop
lret
les
js
cmp
inc
and
outsb
shrb
dec
push
or
push
iret
arpl
jg
enter
repz
insb
mov
cmpsl
xchg
xor
loopne
addr16
dec
jg,pt
and
mov
insb
cmc
or
pop
xor
gs
jo
jge
wrmsr
xchg
aad
xchg
xchg
cltd
mov
jecxz
cmp
in
dec
mov
es
repz
xchg
jl,pn
jnp
xchg
push
cld
add
push
mov
movsb
shll
push
jbe
mov
fs
xor
js
mov
pushf
xchg
loop
inc
arpl
pop
ret
bound
ret
xor
mov
and
fisubrl
jecxz
decl
or
push
test
repz
aas
cmc
jno
cmp
je
or
inc
inc
or
xlat
xchg
adc
mov
xorl
add
sbb
dec
add
xor
dec
cmp
jnp
test
test
cmp
popa
pusha
lea
adc
jb
int3
mov
inc
jno
push
inc
adcl
aaa
repnz
adcb
mov
cltd
mov
imul
not
jns
bswap
in
in
rcl
andl
lods
jns,pt
bound
stos
adc
xor
outsl
mov
bound
push
and
inc
ret
cmp
or
mull
jge
push
lds
call
lock
sub
push
test
mov
aad
loopne
xchg
xchg
mov
mov
ret
insl
loop
adc
mov
gs
shrl
in
sub
cs
clc
xchg
push
repnz
loope
in
mov
push
arpl
int
iret
je
pop
repnz
cmp
iret
jp
and
inc
mov
popf
cmp
bound
jle
test
mov
cmp
mov
out
or
insl
cmp
xchg
or
mov
es
mov
icebp
jecxz
loopne
and
hlt
push
shll
stc
add
fidivl
sub
cld
stos
or
lds
loop
add
addb
mov
xor
and
xchg
pop
sbb
int3
out
pop
inc
or
push
mov
pop
fs
add
jmp
ljmp
rol
cmp
imulb
ror
push
lret
stos
iret
pop
ret
inc
xor
sub
or
imul
and
cmp
std
inc
xchg
sub
push
aaa
and
out
push
imul
mov
hlt
pop
adc
add
out
or
cmp
add
call
jb
daa
mov
out
lods
lds
mov
ljmp
jge
scas
pop
movsb
sbb
in
fldenv
aaa
fbld
and
popa
movb
fnstenv
pop
scas
outsb
push
int
push
scas
pop
and
and
call
mov
push
dec
mov
push
push
inc
popf
call
sub
inc
test
add
adc
ss
shl
aad
ljmp
xor
cmpsb
lock
icebp
repz
xchg
mov
mov
jp
dec
std
pop
and
dec
xchg
sub
jb
addl
and
movsb
sbb
sbb
mov
dec
iret
fnsave
ds
or
mov
pop
icebp
andb
movsl
outsb
aas
push
in
push
sub
lret
mov
sbb
out
cmp
es
xchg
jns
or
test
adc
add
data16
jg
sbb
div
ret
pop
fidivs
aam
test
and
jecxz
fistpll
mov
pop
in
imul
aad
test
push
push
into
sub
dec
add
in
sbb
xchg
icebp
xor
jmp
subl
mov
sub
mov
cmp
xor
ret
cmc
pop
scas
adc
sbb
mov
pushf
stos
mov
test
ljmp
xchg
jnp
sub
test
fisttpll
adc
mov
loopne
inc
dec
mov
mov
pushf
dec
nop
negl
inc
es
mov
bound
or
je
aas
dec
aam
xlat
and
mov
data16
pop
xor
cmp
jb
bound
test
stos
pop
xor
push
cmp
dec
dec
scas
ljmp
xor
std
ljmp
and
pop
shrl
sub
xor
dec
inc
mov
dec
lret
imul
xchg
adc
sbbb
jg
shrl
mov
loope
fdivrs
sub
cltd
popa
ds
xlat
add
bound
ret
mov
push
fsubl
int3
iret
jno
pop
mov
nop
sbb
out
add
cs
mov
push
mov
push
jb
xchg
add
cli
push
stos
push
imul
cs
sar
and
mov
or
mov
cmp
jno
dec
cld
dec
aaa
addr16
pop
enter
repz
into
mov
leave
jle
mov
cs
mov
xor
dec
or
cmp
daa
dec
dec
in
or
sahf
out
shrl
jle
xor
cmp
shll
fidivl
mov
sbb
adc
add
jno
scas
cmpsb
sti
aas
adc
cmpsb
test
test
jmp
imul
dec
dec
xchg
orl
cli
stos
sbb
lea
mov
enter
and
mov
or
fidivl
jmp
leave
outsb
loopne
test
ret
into
cltd
or
xor
push
xchg
mov
xor
cld
inc
cmpsl
in
dec
cwtl
jecxz
sbb
ret
mov
inc
mov
fdivrp
mov
push
jno
rcr
jp
js
mov
dec
aad
add
pop
cmp
lea
jmp
jno
and
test
loopne
xchg
pop
add
lods
dec
mov
push
jbe
fsubs
sbb
mov
les
xchg
mov
inc
fcomip
sahf
sub
cmp
mov
aad
pop
inc
xor
push
xorb
cli
cmpsl
icebp
icebp
aaa
sbb
fldt
mov
int
call
mov
enter
xlat
sbb
int3
jo
lret
mov
mov
dec
and
or
rcr
mov
xor
xchg
sarb
jle
fidivs
leave
pop
aas
fisubrl
pop
adc
cmp
lea
das
jmp
shr
jb
rcrl
mov
jecxz
xor
rorb
xchg
xor
dec
cld
cmova
out
cmp
and
popa
test
icebp
ret
int3
push
out
cltd
shr
into
and
dec
nop
jl
mov
pop
cltd
test
and
xchg
dec
test
stos
mov
xor
adc
lods
lret
lahf
out
and
push
jmp
sub
shlb
cmc
pop
ret
aaa
mov
fmull
mov
icebp
push
decb
fldenv
shrb
int3
inc
pop
js
cmp
fdivl
sub
sbbl
stc
mov
or
call
imul
lds
hlt
or
lret
or
push
repnz
bound
iret
int3
cmp
in
push
xchg
and
ret
repz
adc
inc
xchg
dec
outsb
aam
lea
xchg
arpl
sbb
lret
dec
in
lods
insl
jae
shlb
xor
or
or
inc
nop
aaa
out
cmp
imul
adc
mov
cmpsl
inc
pop
lods
adc
push
das
xchg
mov
shrb
xchg
xor
mov
jle
xchg
pop
hlt
icebp
inc
fisttpl
or
mov
ljmp
pop
lahf
adc
jg
popf
xor
mov
sbb
push
mov
jge
pop
adc
mov
cmpsb
popf
outsl
mov
lock
mov
pusha
int3
pop
imul
sbb
mov
cmp
cli
insb
pushf
add
imul
push
mov
jns
pop
mov
ret
cmpb
leave
daa
lcall
and
mov
out
rolb
sbb
push
lods
test
mov
in
in
lods
pop
clc
or
cltd
pop
sub
repnz
jl
lock
je
mov
ja
or
lcall
lods
arpl
dec
xorb
movsl
addr16
xor
xchg
dec
int
ds
cmp
scas
mov
out
xchg
or
test
sbb
inc
fwait
sbb
fldenv
sarb
jno
inc
and
mov
gs
or
pop
sbb
aam
sbb
and
fiaddl
mov
mov
inc
dec
sub
xor
mov
cld
push
fidivrl
jle
fdivp
popf
jbe
dec
and
mov
pop
cwtl
push
adc
push
lea
mov
clc
repz
testl
mov
push
cli
adc
cwtl
negl
into
cmpsl
jecxz
adc
mov
pop
mov
cmpsb
arpl
int3
cmp
in
movsl
dec
icebp
mov
xchg
imul
adc
enter
pop
lock
insb
mov
lret
stos
mov
fstp
es
or
dec
insb
insl
js
and
lea
cld
jne
cmpsb
pop
fbstp
iret
addr16
addr16
xchg
push
pop
aad
jnp
jle
adc
or
fs
inc
fs
js
mov
adc
sub
sbb
or
xchg
cmp
or
mov
bound
fidivs
push
bound
jl
cmp
scas
xor
jns
loope
leave
and
push
int
stc
popa
inc
dec
xor
rcll
scas
adc
data16
fcompl
imul
jnp
jae
push
pop
test
cmp
rcr
es
cmp
mov
cld
lahf
cmpsl
adc
pop
shlb
in
xor
inc
popf
cmc
dec
cmp
stc
jno
js
xor
mov
mov
in
std
dec
sahf
lret
cmp
xor
xor
jbe
push
outsl
pusha
mov
mov
mov
push
repz
jb
addr16
xorl
repz
mov
and
and
data16
ja
fadds
iret
shll
xchg
insl
mov
dec
adc
out
and
test
and
jecxz
fcomps
pop
ja
sub
insb
and
sbb
shlb
add
addl
movsl
push
cltd
fnstcw
add
xor
pop
outsl
dec
imul
pop
mov
sub
xchg
dec
pop
bound
std
lods
mov
push
imul
mov
iret
mov
push
cs
mov
inc
aas
jb
mulb
shrl
shlb
add
inc
cmp
and
add
mov
scas
or
inc
sub
fldcw
int3
pop
int
inc
inc
inc
fcmovnb
sbb
mov
add
xor
jno
ret
dec
xchg
mov
scas
jp
xor
mov
jbe
push
add
jne
push
pop
xchg
cs
dec
fstps
out
leave
sub
repnz
jge
push
add
scas
cmp
idiv
xchg
pusha
mov
xlat
xor
mov
cmp
sbb
mov
sbb
mov
loopne
xchg
ja
lea
stos
aaa
dec
pop
push
jns
int3
dec
sbb
lods
mov
cmp
pop
xchg
outsb
push
cli
inc
cmp
fnstsw
outsl
jno
js
dec
idivl
lea
test
and
fbld
inc
inc
dec
mov
and
jg
inc
fstl
movsb
add
movsl
jns
rorl
stc
xor
test
inc
mov
rorb
mov
sti
xlat
movsl
cmp
aad
adc
and
leave
jmp
fwait
mov
cmp
icebp
shl
jecxz
jg
scas
ja
dec
jl
jo
dec
add
imul
dec
daa
dec
jecxz
jns
popl
in
repnz
insl
shrl
repnz
out
enter
in
jmp
or
sbb
add
xor
mov
dec
adc
or
iret
enter
pop
or
mov
add
lret
inc
cmp
jns
jae
inc
push
jne
into
call
add
out
fdivr
xchg
rorb
inc
add
and
mov
push
rcll
push
call
dec
xlat
inc
inc
mov
push
add
xchg
xchg
mov
ret
test
outsl
shr
out
arpl
cld
sub
nop
gs
xor
in
lcall
lock
loope
clc
mov
adc
cmp
nop
imul
adc
ljmp
iret
leave
mov
stos
or
test
sub
jg
or
add
xchg
jno
fnstcw
clc
cmpl
sbb
int
fstpl
shll
jb
mov
int
insb
fadds
lcall
shll
inc
jo
popa
aas
xchg
lds
mov
mov
aas
clc
cs
movsl
xchg
mov
add
add
dec
mov
mov
mov
rcl
or
sarl
decl
jno
sub
cmp
lds
add
fs
dec
or
push
loopne
lock
xor
lock
cmp
pop
add
outsl
lcall
dec
loopne
xor
outsb
adc
add
bnd
xchg
repnz
xchg
inc
mov
sub
fsubp
mov
pop
jne
push
sbb
lds
mov
jg
fsubr
jnp
push
and
xchg
stos
in
bound
mov
rcll
inc
in
inc
test
arpl
dec
lret
fsubrs
add
fisttps
sbb
jmp
adc
jne
cmp
pop
rcrl
mov
jno
stos
addr16
inc
movsl
leave
mov
mov
in
xor
out
pop
push
repz
add
fidivs
pusha
lcall
in
in
cmpsb
jae
out
mov
jns
inc
stos
sub
mov
pop
xor
les
adc
cmp
cmp
cld
xor
mov
jmp
add
jge
ja
lcall
movl
sbb
inc
jle
pop
sbb
cmp
roll
nop
pop
pop
pusha
aaa
sti
enterw
lret
xchg
jb
mov
cs
mov
cmp
out
mov
cwtl
mov
lds
loop
clc
mov
push
scas
xor
loope
mov
or
xor
js
hlt
sub
cmp
dec
popa
es
bound
stos
sbb
add
fsub
xchg
sub
cmp
subl
mov
arpl
jmp
push
stos
cmp
add
inc
popa
sbb
mov
xlat
adc
xor
imul
je
jns
cld
test
fistl
xchg
mov
pop
push
cmp
mov
or
shlb
xchg
addb
fsubrl
cmp
in
inc
xchg
xchg
es
xchg
pop
cmp
xor
add
push
add
insl
lea
into
cmp
cli
and
jecxz
lods
push
cmc
dec
sub
dec
je
loope
and
in
fwait
xchg
addl
xchg
add
mov
cmp
maxps
adc
lcall
xchg
add
mov
dec
add
mov
rcl
pusha
fcomps
sahf
rolb
sbb
inc
imul
cwtl
xchg
mov
notb
or
xchg
fcoms
lds
jl
push
popf
xor
test
loop
mov
dec
movsb
mov
mov
jne
jo
sbb
fs
jecxz
xor
mov
rcll
and
loope
pop
cmpsb
clc
add
push
push
mov
inc
sbb
stos
aas
dec
sub
xor
outsb
cld
xor
lcall
or
fld
add
xchg
lock
repnz
mov
mov
cmp
sbb
mov
xchg
int
adc
jo
mov
pop
xor
or
inc
mov
movl
sub
lds
or
mov
lahf
mov
pop
jmp
dec
xchg
mov
push
out
test
and
and
into
dec
xchg
jae
push
and
xchg
jae
or
mov
pop
mov
push
cmp
push
ss
call
pushl
mov
pop
inc
lahf
mov
cmp
lahf
mov
ja
dec
lods
test
cwtl
or
mov
adc
rolb
push
test
push
lea
lds
adc
adc
stos
int
pop
cmpsb
push
pusha
inc
jbe
enter
or
push
adc
mov
jb
fidivrs
inc
xchg
mov
jp
flds
out
adc
push
faddl
inc
ds
xchg
int
and
jle
jae
scas
cwtl
xor
scas
mov
dec
xchg
ret
mov
push
lods
lods
cmp
sub
sbb
lods
out
mov
out
test
mov
js
cs
xor
testl
mov
popf
cs
jbe
pop
cmp
sub
pop
add
cmpsl
push
push
push
mov
sbb
pop
cmc
sub
or
lahf
push
es
repz
movsb
clc
xchg
push
jb
cmpsb
mov
inc
int
stos
sub
subb
jns
sbb
fnstenv
popf
pop
arpl
pop
call
shrl
mov
imul
jmp
inc
loope
or
mov
xor
dec
out
leave
pop
xor
mov
cld
ja
out
or
sahf
cmp
ret
pop
pop
stc
pop
ds
into
jp
les
cmp
popf
adcb
sarl
add
jg
iret
fwait
jl
and
pop
or
iret
aad
insb
ds
xchg
push
push
movsb
repz
mov
pop
cmp
sub
adc
sub
or
jl
sahf
pop
xchg
je
int
iret
inc
sbb
mov
stos
outsl
fstps
sub
setne
leave
mov
jns
pop
mov
mov
mov
test
in
mov
fcoms
orb
adc
nop
push
cltd
ljmp
sub
xorb
pop
into
out
jge
mov
cli
mov
dec
sar
test
int
sub
push
aad
loopne
jl
ja
dec
jo
test
decl
aas
cmp
in
popa
lcall
cwtl
pop
das
or
out
in
mov
dec
inc
push
popf
out
stc
or
jmp
pop
testl
stos
adc
aad
notb
aaa
jl
movsl
shl
jp
cmp
pop
bound
or
jb
adc
pop
cmp
mov
sbb
test
fdivs
mov
cmpsb
dec
test
dec
or
into
xlat
cs
mov
daa
popa
int
cmp
pusha
fstpl
xor
pop
push
ret
popf
movsl
sub
lcall
movsl
xchg
call
mov
mov
pop
push
mov
jo
mov
adc
mov
std
faddl
push
mov
mov
popf
fwait
cmp
test
add
push
mov
repnz
mov
dec
mov
imul
cmpps
movl
sub
aam
pop
js
dec
mov
jecxz
cmp
and
cwtl
out
pop
pop
ds
test
and
xchg
add
in
sbb
xor
xchg
rolb
pop
mov
je
mov
insl
dec
jae
and
pop
mov
xlat
and
sbb
inc
fwait
sub
jg
rorb
repz
outsb
cmp
cmpsb
xchg
mov
fisubl
mov
leave
inc
push
sarl
test
sbb
xor
lock
cltd
test
aaa
shlb
outsb
sub
les
mov
enter
mov
mov
dec
nop
sbb
divb
and
or
pop
inc
loopne
add
mov
daa
and
pop
cli
cltd
bound
ret
cmc
pop
nop
jle
push
dec
mov
in
sbbl
fists
push
push
xchg
adc
call
shlb
fs
andl
pushf
out
call
add
js
pusha
add
lahf
adc
insl
sbb
mov
movsl
les
movsl
repz
je
or
mov
or
adc
decb
cltd
xor
ret
fcmovb
adc
or
rorl
iret
lods
out
mov
insb
idivl
test
test
add
mov
cmp
xchg
sbb
int3
or
xor
mov
inc
ljmp
jns
test
aaa
lds
ret
jae
sbb
dec
mov
mov
mov
push
les
mov
xchg
xor
jo
mov
ret
and
fldt
mov
push
arpl
int3
je
add
fwait
inc
scas
pop
pop
xchg
ss
push
pop
jnp
sbb
dec
ss
xor
jnp
inc
fs
mov
ficompl
pop
xor
shll
mov
pop
popf
xchg
push
repnz
iret
cmpsl
mov
push
jle
push
mov
xor
sub
gs
stos
mov
idiv
cmp
movsl
iret
lret
mov
jg
test
jl
mov
mov
hlt
inc
call
sbb
jle
nop
cmp
negl
add
xchg
inc
icebp
sbb
sbb
xor
jbe
in
loop
notl
xchg
push
addl
insl
adc
test
cli
pop
cmp
imul
and
xchg
and
bound
pop
cwtl
pop
shll
mov
cltd
lea
dec
sti
xchg
sbb
out
mov
test
sbb
iret
stos
sysexit
mov
and
inc
pop
and
outsl
adc
inc
andb
enter
adc
subb
inc
mov
pop
xchg
in
int3
sbb
or
add
xorb
xor
mov
stos
mov
icebp
pop
cmp
test
stos
cmp
cs
mov
mov
jnp
or
dec
jl
push
pop
or
mov
mov
mov
clc
je
and
pusha
sti
out
imul
inc
pop
aad
mov
push
or
call
mov
jo
ret
fiaddl
mov
and
jmp
lock
dec
stc
mov
and
jae
push
mov
mov
ja
cwtl
scas
mov
mov
nop
mov
xor
cmp
push
jecxz
or
sub
jle
aam
int
sub
adcb
xor
and
mov
lret
cmp
movsl
insl
xor
sbb
dec
jle
shl
sub
and
enter
cmp
pop
mov
es
dec
out
sub
sub
sbb
push
testb
mov
sahf
andnps
or
lahf
adc
aas
xor
daa
ror
push
jns
aas
jmp
xchg
jb
sti
dec
scas
js
stos
rol
test
fimull
dec
and
lcall
sbb
lcall
orl
or
mov
out
rclb
adc
fisubs
adc
aas
push
js
cld
mov
jns
and
sub
dec
mov
sti
inc
sbb
add
sbb
inc
push
fidivl
or
insb
lods
cmpb
add
lds
and
stos
inc
push
inc
in
lahf
inc
movb
scas
enter
outsb
dec
setp
cmp
lods
stos
dec
jl
fisubrs
add
dec
sbb
mov
psrlw
cmpsb
out
sbb
stc
fcmovnbe
adc
inc
dec
and
pop
nop
movl
mov
mov
jp
sbb
dec
lahf
popf
outsl
xchg
enter
sbb
xor
addl
cmpsb
rcrl
xor
fwait
pop
rcr
push
insb
fsubrs
shlb
imul
push
call
and
sub
xor
aas
inc
notb
push
adc
cmc
flds
and
xchg
pop
dec
lods
xchg
mov
xor
int3
test
push
dec
cmp
notl
in
sub
out
mov
jp
fidivrl
loop
rcll
dec
adc
xchg
loope
pop
fiadds
fnstsw
pop
mov
jecxz
pusha
lret
scas
jl
aas
mov
stc
insl
xor
cmpsb
movsb
ja
aaa
inc
mov
mov
std
int
mov
iret
notb
mov
lock
rolb
cwtl
addr16
fldenv
dec
bound
out
mov
je
ljmp
push
xchg
push
sub
std
mov
jns
adc
cmp
shr
xchg
gs
cmp
out
rorl
aam
cs
and
out
mov
adc
cli
dec
mov
dec
flds
and
pop
andl
fisubs
jl
mov
sub
loope
imul
mov
inc
loopne
sti
sub
inc
jecxz
aam
clc
adc
fsubl
xchg
out
test
icebp
negb
and
and
cmpsb
loop
mov
test
enter
dec
sub
filds
push
jecxz
punpckhdq
add
scas
dec
enter
or
stc
int3
pop
adc
sub
xchg
imul
add
jl
mov
xchg
mov
xchg
mov
mov
arpl
push
push
das
mov
rcrl
aaa
data16
sub
imul
push
addl
jmp
inc
jne
scas
jmp
sub
ljmp
in
add
test
cs
pushf
mov
rorb
and
pop
loope
sbb
push
sbb
sub
mov
mov
popl
mov
loop
in
push
dec
jp
dec
imul
push
inc
test
sbb
mov
cmovle
cli
pop
add
and
sti
fistpl
pop
adc
mov
sbb
pop
dec
sub
sbb
outsb
pop
sahf
das
js
adc
insb
cmp
or
and
shrl
icebp
in
xor
and
adc
mov
cmp
std
cmpsl
mov
xchg
outsb
bound
std
pop
pop
mov
call
in
imulb
nop
sahf
in
pop
mov
mov
and
jbe
loope
or
pop
leave
outsl
in
stos
int
fisubs
xchg
xchg
jecxz
cwtl
xchg
cmp
pop
jmp
popa
mov
rolb
loopne
mov
frstor
jne
pop
mov
repz
lds
ljmp
orb
mov
sub
adc
testb
adc
inc
pop
in
xchg
out
push
lods
or
sbb
inc
inc
and
lret
xchg
sbb
pop
jecxz
sbb
xabort
inc
fs
sahf
out
pusha
cmp
sub
jbe
hlt
add
sub
popf
push
mov
cmp
pop
jns
jbe
jo
addr16
mov
sbb
push
out
cmc
lret
push
dec
mov
not
cmp
jne
push
dec
stos
imul
movsl
cmpsb
sbb
shl
out
lret
loop
rcr
add
push
lahf
lods
jmp
out
popa
mov
pop
dec
ret
popf
mov
imul
xchg
jnp
out
push
addr16
les
rcl
push
dec
push
out
push
add
pop
ret
es
addr16
imul
imul
xchg
pop
idivb
or
and
fwait
pop
imul
inc
sbb
aad
fdivrs
add
mov
fs
pop
fs
cmpsl
daa
dec
movsb
inc
add
push
nop
fisttps
jnp
fdivrs
les
addr16
jne
popa
test
jnp
repz
xor
mov
push
test
add
mov
mov
dec
popf
jns
mov
ja
mov
adc
insb
lcall
or
sbb
push
enter
jp
and
push
scas
outsl
mov
cmp
jmp
ficoms
sbb
insb
pop
int3
dec
jge
int
jb
adc
dec
jbe,pt
aam
cmp
js
and
xor
and
inc
ret
pop
aaa
fucomp
pop
mov
mov
outsl
lret
mov
iret
pop
mov
inc
xor
hlt
scas
scas
xor
adc
add
enter
out
and
mov
idiv
aam
ss
push
pop
push
outsb
or
shrl
lea
jge
add
jnp
pushf
jge
jae
mov
jp
jno
inc
popf
pop
and
inc
das
mov
insl
pusha
sbb
push
mov
clc
fsub
in
jae
int
and
imull
dec
push
xor
add
adcl
pusha
ja
mov
cmp
loopne
jle
stos
sbb
or
cmp
adc
mov
insl
or
sbb
add
stos
mov
arpl
movsb
jle,pn
adc
cmp
outsb
mov
push
jecxz
in
dec
pop
decb
jb
adc
mov
out
push
or
mov
cmpsl
cmpsl
adc
pop
xchg
rcr
fnstcw
pop
mov
push
pop
mov
sub
xlat
nop
and
test
xor
sbb
mov
and
jno
push
ror
mov
out
xchg
dec
fwait
ljmp
leave
test
cmc
xchg
xor
and
ljmp
imul
dec
mov
aas
or
sub
mov
push
test
inc
shlb
rorb
cs
cltd
sub
and
faddl
fs
outsb
std
dec
repnz
push
xchg
in
std
jecxz
or
rolb
add
or
jl
jg
sub
pop
jns
dec
sub
hlt
int3
call
outsb
pushf
sarb
adc
mov
fstps
les
or
test
cmp
aas
imul
mov
cmp
outsb
addr16
ja,pn
arpl
adc
xor
push
cwtl
sbb
push
mov
jle
fwait
mov
les
xor
cmp
outsl
or
inc
fnstsw
ss
push
lea
ss
in
movsb
pushf
jbe
cmpl
lahf
ja
out
sub
out
pop
adc
fs
inc
push
stc
mov
sub
pop
hlt
lods
sub
scas
inc
test
insl
push
scas
rcll
cmpsb
sbb
push
pop
jns
sbb
adc
sub
jmp
pop
fcompl
push
xchg
mov
loope
jae
inc
mov
inc
notl
leave
cmpl
and
xchg
jle
cmp
mov
lcall
push
xchg
test
insl
repnz
test
pop
test
mov
mov
ljmp
loopne
test
lahf
fsubl
push
mov
popf
add
rcll
in
jle
out
cli
xor
dec
popf
cmp
pop
aam
popa
and
or
loop
pop
cmpsl
cli
sbb
rorl
adc
sub
sub
negb
xor
sub
inc
fcmovnbe
or
push
add
xchg
inc
mov
xlat
or
pop
and
iret
loope
fdivl
daa
ja
inc
lcall
pop
jne
in
push
jle
pop
pop
in
cmp
mov
sub
mov
mov
loop
out
jae
mov
cmp
or
je
aad
push
sub
sarb
dec
stos
cmpsb
dec
repnz
sbb
and
adc
jl
xchg
push
lret
loope
fadds
nop
xchg
add
popf
jle
xchg
pop
daa
or
add
sub
xchg
push
or
dec
adc
repnz
test
and
jp
push
sbb
push
pop
xchg
arpl
inc
stos
fldt
clc
cmp
pop
popf
push
enter
gs
sub
mov
insb
rclb
stc
ljmp
pop
or
ret
popf
stos
mov
nop
xchg
cwtl
push
and
dec
movsl
mov
xor
mov
mov
inc
aam
xor
mov
jae
movsb
loop
jae
sub
push
into
stc
or
sbb
adc
aad
sti
pop
fadds
rcr
lds
dec
or
pushf
fistl
stos
fbld
jne
push
pop
cmp
int3
repnz
inc
or
mov
cmp
fldt
inc
add
or
fstl
pop
xor
nop
xchg
movsl
xchg
das
sub
popf
leave
sarb
into
imul
sbb
pop
bound
mov
cmc
or
jnp
dec
inc
push
fsubrs
stos
dec
xor
scas
jecxz
jnp
mov
aam
push
aas
sbb
dec
outsb
ret
rolb
sbbl
or
mov
fnstcw
in
adc
jp
test
pop
shrb
fsub
cmp
xchg
mov
pop
stc
inc
cltd
push
jmp
insl
iret
lcall
sahf
mov
pop
popf
pop
enter
push
pop
jmp
cmp
xchg
movsl
push
mov
scas
fldt
aad
in
fidivrs
inc
popa
xchg
xchg
sub
fadds
xor
inc
lret
add
pop
fcompl
int
xlat
fbstp
leave
lods
push
mov
dec
push
mov
or
add
ret
dec
int
aam
add
mov
inc
dec
pop
jmp
std
cs
push
aad
je
pop
es
jns
jmp
negl
mov
es
repz
stos
or
mov
sbb
jnp
icebp
insl
hlt
lret
mov
arpl
pop
pop
push
xor
aaa
js
mov
je
and
pop
sub
add
xor
push
pop
and
and
push
sahf
pop
push
sbb
xchg
cmpsl
out
stc
jno
das
jnp
leave
lea
test
imul
in
or
mov
aad
ss
push
pop
rclb
push
jg
pop
pop
pop
out
lds
iret
adc
cli
fimull
adc
adc
pcmpgtb
pop
fisubrs
repnz
nop
jns
shlb
sbb
loope,pt
xchg
cmp
jns
xlat
jge
xchg
or
cmpsb
sahf
pushf
push
cli
sahf
cs
dec
push
add
sbb
push
sub
and
mov
push
adc
fs
push
fs
lahf
outsl
xchg
xchg
sahf
mov
pop
out
inc
insl
sbb
dec
fstp
dec
stc
xor
dec
scas
aaa
lods
fdivrl
outsl
icebp
mov
xchg
push
stc
lret
jnp
and
pop
push
push
es
inc
push
gs
jge
or
dec
mov
rorl
dec
push
les
lcall
mov
pop
mov
xchg
shl
push
leave
in
xlat
adc
cmp
mov
lea
pop
mov
adc
cmpsl
and
jecxz
lahf
cmpsb
shlb
bound
out
shll
xchg
xor
xor
stos
cltd
leave
cwtl
cld
xorl
lcall
and
mov
adc
or
clc
outsl
push
adc
push
fidivl
xchg
mov
fwait
mov
fadds
pushf
xor
fdivp
cld
mov
popa
iret
cmp
stc
and
imul
fwait
sbb
mov
add
fistpl
repz
jl
cmp
push
sbb
loope
faddp
popa
cmp
push
cmc
or
lcall
sub
insl
xchg
dec
sub
adc
or
popf
test
mov
clc
mov
cmp
pop
loop
inc
arpl
and
mov
jmp
mov
bound
inc
jl
xchg
dec
dec
jg
cmp
stc
or
push
in
cmp
or
aas
incl
ret
mov
xor
jae
ret
aas
in
leave
xchg
daa
or
lea
cmp
jo
mov
dec
xorb
jne
or
mov
mov
sub
int
ficoms
lea
push
jnp
lahf
out
out
fsub
and
inc
xchg
adc
mov
mov
movsl
adc
ficomps
adc
pop
mov
pop
lds
icebp
test
push
mov
cmp
arpl
int3
addr16
inc
je
and
stc
mov
dec
fwait
sub
xchg
push
or
sub
xchg
lock
in
sahf
lret
mov
fcoms
int3
test
push
sbbb
lahf
rol
xchg
and
mov
repz
in
push
es
fsubr
dec
xchg
jae
lret
mov
fnstsw
mov
orl
pop
testl
sarb
inc
bound
xchg
in
sub
adc
pop
sub
stos
push
xchg
jg
mov
mov
sbb
sub
adc
fcmovnb
pushf
popa
stos
jmp
loope
inc
dec
push
push
fnstenv
insb
mov
dec
cmpsb
je
packuswb
arpl
repz
ret
fwait
in
iret
add
adc
sbb
scas
xchg
jnp
push
inc
push
fimull
loopne
push
loop
adcb
adc
out
inc
push
or
or
jle
jp
add
ja
idivl
xchg
movsb
pop
das
sbb
out
dec
das
inc
mov
pop
jno
jno
jl
sbb
ja
mov
jo
int
aas
and
pop
outsb
or
cmpsl
add
sub
repnz
out
roll
cwtl
cmp
ja
mov
movsl
lds
je
mov
cmp
lods
jnp
inc
push
test
cmc
mov
push
add
loope
sti
scas
add
leave
push
int
mov
aas
loop
std
fmull
leave
cmp
cld
mov
push
cmp
jbe
imull
cmpsb
in
adc
movsb
pop
adc
jg
lock
pop
dec
out
sbb
iret
daa
mov
sahf
movsb
mov
or
jle
push
jle
cmpsl
dec
push
xchg
nop
loop,pn
and
xchg
jae
adc
sahf
pop
lds
jmp
ljmp
scas
mov
cmp
shlb
or
je
xor
mov
out
and
jno
dec
add
adcb
idivb
mov
mov
dec
xor
outsl
sbb
fmull
xor
test
insb
and
adc
jge
sub
mov
pop
loop
or
shlb
and
or
mov
subl
mov
push
movsb
push
lods
imul
xor
inc
test
dec
or
adc
add
loop
jae
add
inc
cmpsl
push
fsub
sbb
movsl
mov
cmp
stos
mov
mov
pop
and
call
sub
mov
push
mov
and
mov
cmp
pop
push
inc
shrb
mov
rcrl
and
and
mov
aas
insl
test
mov
adc
pop
xchg
inc
xchg
setp
popf
push
xchg
adc
inc
imul
inc
dec
test
mov
cmp
jb
adc
int3
gs
xlat
loope
mov
inc
dec
mov
fstps
stc
xchg
sti
and
mov
xchg
and
pop
xchg
and
xchg
cmp
int
cltd
jo
add
out
adc
scas
xchg
mov
mov
mov
test
lock
lea
std
stos
inc
mov
xchg
notl
aam
daa
mov
jnp
sahf
les
aam
mov
mov
jl
add
mov
jge
xchg
stos
subl
push
cmp
xor
push
in
shlb
clc
pusha
movsl
inc
clc
lret
std
push
push
imul
and
push
push
mov
add
xor
sbb
scas
add
push
mov
mov
mov
call
pop
push
int
cmp
dec
sub
dec
aas
sti
adc
gs
dec
mov
jb
icebp
pmuludq
xchg
push
test
shrb
adc
mov
in
sbbb
fisttps
xchg
xor
call
aaa
fnstsw
adc
fstpl
add
call
in
inc
jmp
inc
in
mov
fimull
cmp
test
cmc
das
sahf
scas
andl
or
enter
mov
outsl
das
jl
mov
nop
mov
lret
xchg
orb
sub
into
cmc
das
sbb
inc
dec
out
fmull
push
pop
insl
and
ret
insb
xchg
sbbl
xor
test
pop
mov
ret
adc
scas
push
or
mov
push
cwtl
jb
mov
insl
insb
fidivrs
imul
sub
cmp
subl
add
ds
push
rcl
dec
scas
dec
pusha
flds
test
jmp
mov
xchg
xchg
test
repnz
clc
sbb
xorb
jmp
mov
lcall
adc
mov
add
sbb
hlt
push
clc
jle
js
daa
xchg
mov
cmc
sti
sub
divb
sbb
dec
cld
test
rcl
adc
xchg
sub
or
mov
mov
xor
mov
add
mov
rcl
pop
cmpsb
mov
jp
mov
inc
scas
jae
mov
in
loopne
notb
das
sbb
add
scas
es
adc
push
aad
inc
cmp
xchg
adc
jb
adc
push
inc
fstl
ds
mov
flds
add
push
add
jae
add
movsl
adc
xchg
dec
jp
imul
jae
adc
push
cmp
dec
mov
push
inc
movsb
rcll
icebp
sub
addl
loopne,pt
shlb
or
xchg
inc
push
mov
cwtl
pusha
enter
xchg
rcr
jo
into
pop
mov
adc
nop
lahf
popl
fsub
mov
add
mov
push
mov
sbb
cmp
fcoml
inc
punpckldq
push
movsl
vminpd
mov
adc
adc
movsl
pop
and
jne
mov
xlat
cmp
xor
or
inc
pop
add
shll
sbb
add
mov
ret
sbb
xchg
xor
fists
push
dec
inc
and
sbb
aam
inc
and
sbb
out
in
fstpt
hlt
test
repnz
adc
inc
mov
inc
insl
sti
sub
loop
aaa
fists
repnz
pop
mov
ret
xor
xor
sub
add
adc
xor
pop
cmp
inc
int
loopne
subl
mov
cmp
dec
mov
js
call
add
pop
cmc
fsubrs
xor
jp
xchg
in
inc
cmp
xchg
add
xchg
in
dec
or
insl
sub
and
cs
data16
mov
sbb
cltd
repnz
cltd
cmpsb
test
sti
or
cltd
or
xchg
or
adc
lods
mov
in
fstl
push
adc
enter
sar
push
adc
sbb
cld
mov
hlt
jg
in
xor
insl
jp
ss
jp
mov
mov
stos
pop
mov
pop
scas
mov
sbb
pop
xchg
jnp
loop
or
pushf
std
mov
pop
cmp
adc
inc
addr16
xchg
fbstp
mov
or
dec
insb
xchg
xchg
and
or
xor
add
and
jmp
dec
or
data16
out
ret
out
xchg
xor
cmp
inc
loope
push
es
jge
int3
js
mov
pusha
mov
mov
mov
je
cld
mov
mov
fdiv
add
pusha
xchg
or
dec
ret
popa
inc
mov
dec
sbb
and
xchg
js
xor
mov
arpl
lret
cmp
pop
adc
sbb
lret
arpl
jbe
mov
or
push
rolb
mov
hlt
fcmovnb
or
or
fcoml
scas
xchg
cli
fadds
sbb
push
test
jne
cmp
je
xchg
mov
push
sbb
nop
rorb
xor
push
pop
ds
xchg
outsl
xor
and
out
das
inc
add
mov
out
in
jecxz
push
adc
outsb
mov
xor
inc
es
ret
cltd
arpl
sub
incb
out
pop
xchg
dec
push
enter
pop
pop
rcl
push
inc
in
out
xchg
jle
xor
inc
mov
loope
out
out
inc
or
scas
push
dec
and
pop
xchg
pop
insb
jnp
popf
out
loope
and
js
and
gs
stos
arpl
pushf
pop
test
adc
inc
arpl
jo
xchg
mov
pop
mov
repnz
push
xor
loope
mov
addr16
lock
push
add
in
push
jns
fsts
sub
pop
lret
call
out
inc
sbb
adc
ds
rcl
rolb
push
pushf
mov
push
test
sub
sub
jecxz
jg
loopne
loope
pop
jbe
shll
sub
mov
insb
out
push
les
mov
adcb
dec
dec
cmp
pop
xor
mov
mov
test
iret
push
or
jne
clc
sbbl
ret
stc
int
pop
cmp
pop
pop
ja
repz
push
out
mov
insb
sahf
xor
fadds
and
pop
mov
and
xchg
rolb
dec
pop
sub
pop
pop
mov
mov
and
jmp
clc
in
push
rclb
ret
add
test
data16
fcomp
imul
scas
push
fidivrs
loopne
push
jle
pop
sbb
scas
fs
cs
int3
fsubp
lret
push
imul
int3
pop
ret
mov
xor
cmpsb
jmp
dec
adc
mov
aaa
ljmp
dec
and
dec
cmp
fildl
sub
sbb
jns
movsl
roll
adc
cmp
mov
xchg
and
rcl
ret
imulb
loop
jp
mov
jmp
outsl
sti
sbb
insb
lods
and
pop
push
jo
xor
and
jp
lret
jmp
jge
mov
imul
or
push
dec
add
cmpsl
sarb
popa
cmp
mov
shl
lret
or
push
and
xchg
pop
sbb
daa
mov
or
mov
cmc
push
xchg
xchg
in
jne,pt
add
pop
cs
mov
icebp
aas
bnd
insb
sub
adc
lock
push
add
inc
add
inc
popf
jno
push
scas
lock
inc
stos
les
dec
xor
xor
mov
incb
test
out
lea
cwtl
jecxz
xchg
sbb
lods
aam
pop
stos
xchg
adc
cld
adc
dec
ljmp
pop
repz
ret
faddl
mov
popa
fmull
mov
add
insb
ljmpw
cmp
stos
adc
into
mov
loop,pn
add
fs
lret
xchg
jmp
out
test
lcall
or
popa
lods
pop
and
mov
inc
int3
ret
cmp
cmp
dec
movsb
aas
inc
cmpsb
stos
and
sub
sbb
test
mov
jns
mov
pop
adc
sub
or
cmp
rcrb
xchg
mov
add
xchg
adc
scas
add
xor
mov
jg
movsl
hlt
xor
fisubrs
xchg
shll
xchg
and
pop
inc
or
or
jge
xchg
cmp
adc
push
add
popf
and
dec
cmp
xchg
pop
insl
rcll
outsl
cli
push
out
mov
jp
je
cli
and
pop
inc
out
scas
hlt
paddusb
cmp
pop
subb
jns
xor
mov
sub
pusha
fwait
arpl
sub
dec
adc
xor
sub
mov
stc
in
inc
int3
add
cmp
xor
and
fldl
mov
jmp
ja
daa
inc
push
mov
jl
hlt
repnz
pushf
aaa
es
lea
pop
ret
movsl
jbe
sub
fidivs
repnz
jns
scas
sti
mov
shr
fsts
int
adc
mov
sub
movsl
or
adc
movsb
cli
and
pop
loop
xchg
fcoml
pop
js
jbe
sbb
inc
popa
aas
fnstcw
movsl
pop
dec
sub
jb
xchg
and
cmpsl
int3
mov
mov
adc
pop
fdivr
push
jb
cld
mov
daa
mov
lea
jnp
mov
lret
inc
add
ficompl
mov
outsb
push
adc
xchg
add
aad
imulb
add
mov
lahf
sub
pop
inc
orb
or
pop
xorb
jecxz
sbb
cli
notb
sbb
mov
push
lds
fs
jp
idivb
sbb
hlt
inc
pusha
pop
mov
mov
pushf
sti
jmp
pop
mov
ficomps
push
xor
pop
mov
sarb
mov
jecxz
and
mov
out
cwtl
cwtl
out
mov
dec
in
cltd
xorl
sbbl
dec
dec
mov
scas
std
sbb
cltd
mov
mov
pop
faddl
and
fs
jb
and
cmpsl
hlt
jg
popf
jle
sub
xchg
xor
dec
jne
or
subl
or
push
movsb
xchg
mov
mov
push
xor
arpl
std
subl
sub
bound
aas
ret
out
scas
dec
adc
mov
sar
jge
adc
and
dec
insb
scas
leave
xlat
loop
or
es
cmpl
adc
outsb
stc
insb
inc
shll
lods
movl
xchg
jb
dec
jo
sub
cmp
jb
jge
mov
push
adc
sbb
push
xchg
jmp
mov
fcoml
test
out
xor
push
scas
mov
mov
lahf
fldlg2
jnp
out
pop
outsb
xor
sbb
mov
inc
adc
jo
idiv
call
mov
push
mov
mov
sbb
mov
pushl
test
inc
roll
sbb
jmp
pusha
xchg
stos
jg
int3
cmp
sub
sbb
pop
sbb
imul
and
sarb
mov
sahf
jmp
fnsave
push
dec
push
pop
or
lock
add
ja
sahf
pop
xchg
jmp
inc
or
lea
movsb
call
pop
mov
dec
arpl
popf
pop
push
imulb
cmpsl
pop
dec
movsl
movsl
pop
xor
sti
ja
sbbl
shrl
inc
scas
jnp
popa
js
outsl
mov
scas
arpl
fldenv
xor
push
push
sahf
jl
and
pushf
imul
jae
les
mov
jnp
repz
xchg
int3
aaa
addr16
ja
fiaddl
shll
sub
imul
or
cs
iret
adc
mov
push
mov
push
xor
jmp
dec
sub
test
cld
mov
fcmovbe
sarl
clc
jb
xor
pop
xor
sub
leave
and
loopne
std
rol
or
je
std
lock
mov
add
rcrl
jb
xchg
pushl
and
lods
adc
add
jns
adc
pop
jl
mov
push
pop
mov
inc
dec
shrl
insl
cmp
aam
adc
add
arpl
fisttpll
dec
icebp
adc
sub
jp
ret
add
xchg
xorl
push
xor
lret
sbb
sbb
adc
fmuls
push
out
in
fldt
loope
adc
test
push
add
cmp
push
outsl
in
fmull
icebp
hlt
sbb
es
inc
lret
push
iret
ljmp
in
jecxz
sbb
sbb
je
int3
mov
cmp
jns
pop
aam
mov
xchg
xchg
jnp
inc
sbbl
scas
xchg
scas
jl
sti
aaa
adc
insl
fnstcw
pop
mov
or
int
popf
andl
in
xor
ret
xor
aad
and
out
and
aam
mov
loope
sbb
scas
aad
imul
jbe
mov
push
sub
ja
sub
push
aaa
jl
dec
leave
push
test
cmp
iret
fiadds
adc
pop
cmp
push
mov
jns,pn
dec
imul
push
in
xor
fiadds
lret
mov
arpl
or
and
icebp
imul
clc
adc
pop
mov
pop
cmpb
push
adc
int3
test
faddp
addr16
stc
inc
and
inc
ss
icebp
rcr
js,pn
and
lods
and
repz
pop
and
jnp
adc
or
das
outsl
arpl
jl
stc
shll
fmuls
adc
clc
jo
shr
rcll
adc
xchg
pushf
push
pusha
push
rcr
outsb
out
sub
and
pop
mov
nop
mov
mov
sub
jo
push
imul
movsb
inc
testb
xchg
test
idivl
pop
xchg
test
jecxz
pop
adc
dec
stos
adc
cmp
xchg
fdivl
xchg
xchg
dec
rorl
gs
gs
adc
adc
mov
xor
sub
cwtl
sub
icebp
cwtl
inc
and
adc
or
pop
mov
icebp
mov
jae
or
int
pop
out
pop
jns
xchg
push
sub
std
scas
xor
or
push
mov
out
lods
pop
cmp
pushf
sbb
cmp
arpl
dec
test
dec
fcoml
and
inc
xchg
xor
cmpsl
pop
cltd
test
xor
sbb
rclb
cltd
inc
dec
mov
sub
pop
aas
inc
das
jns
pop
cmpsb
inc
inc
shl
ret
mov
jnp
jmp
shlb
mov
mov
push
sub
mov
jns
sbb
sbb
pushf
mov
adc
xor
and
imul
xchg
jae
or
or
loope
das
call
mov
xchg
std
xchg
jb
sbb
lret
mov
inc
test
insb
xor
lret
add
das
push
lcall
or
insl
push
pop
ret
push
rorl
xor
scas
mov
fdivrl
repnz
icebp
xor
or
xchg
in
jb
dec
jbe
mov
call
cli
sti
cmp
sub
adc
adc
loopne
std
lcall
push
jb
setb
mov
iret
inc
loope
scas
mov
test
cltd
xor
int
jno
loope
pop
cmc
or
xchg
bound
mov
je
pop
out
cltd
ficomps
insl
data16
pop
pusha
lcall
lcall
das
lret
mov
shr
test
cmp
frstor
mov
sbb
scas
idivb
in
pop
adc
and
push
sub
cmpsl
aam
in
xchg
fsts
gs
cmpsb
mov
insl
or
and
pop
cld
out
repnz
jle
sha256msg2
dec
fldl
in
xchg
fildl
aad
xor
shl
insb
dec
test
call
adc
fiadds
loope
pop
in
xchg
pop
fldt
cmp
sti
mov
out
jle
cmp
stos
lcall
inc
dec
ds
pop
dec
shrb
mov
insb
sub
mov
cmpsl
mov
stos
mov
cmp
and
lods
js
bound
xchg
shrb
add
fcoml
pusha
adc
mov
shr
dec
aaa
fbld
or
bound
pop
lods
sub
xchg
sbb
cmp
add
pop
pop
popf
add
xor
xchg
fiadds
pop
test
sbb
mov
sbb
pop
idivl
repz
fwait
xchg
ljmp
addr16
xchg
les
xchg
cvttps2pi
push
pop
popf
pop
xor
loop
leave
adc
push
mov
jl
cmpsb
repnz
or
adc
in
les
mov
mov
inc
cmp
outsb
dec
shrl
clc
pop
push
cmp
cld
iret
nop
cwtl
push
xor
inc
jb
insb
fists
sti
dec
shl
movsl
out
push
xchg
xor
je
mov
and
in
and
scas
add
in
pop
pop
movsl
dec
addb
pop
sbb
or
insb
js
stc
stos
push
iret
shll
add
mulb
daa
inc
cmp
sub
sbb
mov
js
les
mov
fcmovne
out
mov
dec
outsb
dec
pop
pop
lret
mov
idivb
pop
imul
mov
bound
push
push
sar
je
loope
push
dec
movsb
mov
xchg
pop
push
cmp
lods
mov
xor
mov
adc
dec
adc
ret
jle
pop
popf
and
sbb
sbb
jle
ret
and
shlb
ljmp
fistpll
ret
fistpl
pop
daa
push
adcl
push
jecxz
scas
xchg
or
aaa
bound
mul
sahf
sub
lds
data16
pop
mov
icebp
cwtl
mov
js
nop
or
jl
jge
into
sahf
dec
je
mov
inc
bound
dec
inc
int
mov
dec
jne
lds
test
xchg
mov
mov
inc
jmp
mov
mov
in
in
out
or
or
nop
out
popa
mov
inc
pusha
mov
notl
ds
fsubl
pushl
mov
mov
shlb
sbb
dec
in
ret
repz
dec
sbb
or
aam
fisttps
push
stos
sahf
test
stos
push
jmp
or
mov
cmpsb
ss
mov
cmc
cmp
sbb
mov
pop
adc
clc
es
sub
loope
sbb
int3
cmp
dec
iret
mov
fmul
push
enter
pop
pop
inc
push
xchg
imul
out
fldcw
mov
xchg
pop
sarb
gs
gs
lods
test
mov
push
sbb
bound
dec
dec
inc
roll
movsl
je
or
and
dec
xchg
mov
stc
or
test
adcl
hlt
popl
push
mov
pop
sbbb
test
stos
cmpsl
mov
inc
js
int3
in
dec
mov
or
xor
dec
dec
nop
loop
mov
js
adc
enter
fstpt
cmp
shl
add
dec
adc
dec
pop
es
push
xchg
imul
or
call
inc
jl
lcall
ljmp
shrl
jge
cltd
lret
dec
lock
out
mov
rclb
mov
or
ficoms
loop
imul
movsb
fiadds
adc
mov
sbb
sbb
xor
in
das
rorb
xchg
rol
adc
imul
arpl
jo
push
lea
inc
lods
xchg
cmp
bound
outsl
jo
mov
sbb
sbb
jae
into
sub
pop
leave
test
pop
mov
cmp
push
sbbb
stc
mov
stos
aad
adc
mov
dec
mov
jp
sti
lret
insl
push
or
and
sbb
out
lret
xchg
lret
xor
fs
and
inc
fcoms
xor
inc
and
rorb
xchg
js
sbb
mov
mov
push
xchg
or
hlt
xchg
xor
test
movsb
or
adc
pop
pop
xchg
cmp
loope
dec
xor
mov
xchg
jg
loop
outsb
sub
or
call
jns
and
test
lahf
into
push
and
push
jns
sbb
stos
cmp
insl
mov
pusha
aad
push
imul
cmpsl
push
xor
push
dec
loope
or
clts
fucom
fwait
xchg
push
dec
push
push
or
test
cmp
lret
inc
pop
pop
add
add
pop
and
add
cmp
and
es
fildll
das
arpl
jne
aad
out
or
cmp
movsl
xchg
dec
fdiv
jae
out
jnp
int
jmp
adc
xchg
adc
lahf
sub
movsl
jmp
imul
inc
je
mov
loop
mov
cmp
sbb
xchg
mov
fcmovnb
jnp
divb
and
pusha
outsb
out
cmp
cld
sbb
push
sbb
cmc
stc
imul
repz
jno
icebp
out
outsl
and
xchg
add
xor
lods
dec
inc
mov
jmp
shrl
sbb
in
pop
mov
gs
cmp
and
jno
cmpsb
dec
rcll
es
xchg
cmp
das
in
fisttpl
cli
inc
push
mov
or
lds
in
gs
jge
xor
inc
jge
jmp
pop
lcall
add
test
loope
cs
icebp
ja
push
push
mov
aam
repz
aad
add
stos
sub
and
movaps
or
xor
es
aam
and
and
lock
test
dec
aad
iret
or
xchg
or
mull
mov
pop
repnz
jp
popf
fstpl
je
int3
push
in
mov
ljmp
pop
cmp
iret
int
cmp
notb
loope
push
inc
mov
data16
jmp
stos
cld
and
sub
lock
pop
or
sbb
iret
mov
xchg
push
sub
repnz
cmpsb
xor
add
dec
cmp
xor
jbe
mov
test
inc
jmp
das
add
imul
rcrb
lods
sub
lcall
mov
dec
sub
in
cmp
add
addr16
das
cmpsl
imul
fwait
sbb
push
fdivl
fildl
fwait
or
push
arpl
push
inc
aam
push
std
scas
repnz
jno
mov
iret
pusha
out
shrb
sarb
pusha
mov
jg
roll
add
cltd
in
aam
adc
jne
bound
mov
add
mov
or
loop
pushf
pop
jo
shlb
in
and
ret
fcmove
mov
and
jnp
xlat
scas
out
in
jno
cld
push
push
ret
in
adc
inc
xor
aad
test
pop
enter
or
fcomp
mov
mov
sbb
xor
adc
bound
mov
jbe
mov
data16
and
dec
hlt
lret
mov
or
cmc
sbb
int3
xchg
add
xor
jle
add
dec
out
cmp
enter
gs
aam
imul
sub
inc
mov
sbb
insb
movsb
lahf
sarb
leave
leave
aam
xchg
fs
adc
jnp
stos
scas
jnp
push
mov
sbb
xor
in
fisttpll
addb
add
fs
into
jns
inc
lock
push
pop
loopne
mov
mov
cmpsb
mov
enter
pop
pop
sub
dec
inc
cmp
xchg
js
fs
jnp
push
in
in
adc
repz
ret
pop
inc
ds
mov
dec
pusha
out
jl
leave
aaa
das
cld
pop
lods
ror
fisttps
xor
cmp
movsb
xchg
sbb
out
hlt
aad
mov
inc
repz
out
adc
pop
push
mov
std
sub
enter
dec
ds
arpl
mov
fwait
sub
inc
addr16
fcmovne
lods
push
sbb
test
sub
inc
lods
mov
pop
cmpsb
in
adc
or
jbe
jle
mov
inc
mov
fdivl
jecxz
jb
in
hlt
mov
xchg
jb
fwait
add
pop
in
stos
div
mov
dec
cmp
mov
xor
inc
jo
push
scas
pop
sbb
aad
std
xor
arpl
sbb
pushf
arpl
jb
jp
push
xor
mov
mov
jg
mov
dec
cmp
inc
popl
mov
and
shlb
iret
movsb
out
jecxz
repnz
divb
push
mov
sbb
mov
sub
sub
or
sub
xorb
push
repz
fists
dec
inc
insl
or
test
loop
push
pop
andb
push
cmc
cmpsl
push
xchg
cmp
mov
jno
jecxz
dec
sub
icebp
loope
pop
pop
cs
jp
adc
inc
lret
ret
mov
mov
cmc
and
stc
dec
lods
mov
stos
sub
xor
pop
dec
mov
xchg
push
ret
mov
sbbl
sub
test
jae
push
mov
push
out
and
inc
add
dec
fldcw
mov
jle
or
repz
test
scas
cmpsb
jg
lahf
fucomp
scas
jmp
adc
lock
inc
lods
mov
pop
cmc
lahf
leave
ljmp
xor
fimuls
fsub
into
cld
pop
xchg
inc
enter
sahf
jmp
mov
in
and
scas
xor
mov
fcoms
repz
insl
fbstp
xor
pop
inc
aam
les
shr
in
jecxz
fldenv
or
xor
adc
cli
adc
repnz
shll
dec
pop
or
inc
inc
xchg
or
in
push
imul
inc
jle
adc
mov
dec
jmp
call
sub
call
test
or
das
movsb
dec
or
sub
cmc
lock
mov
mov
push
mov
add
mov
sbb
fistpll
mov
js
cld
cmpsb
call
cld
mov
loopne
loop
ret
cltd
pop
jne
addr16
clc
je
mov
or
orb
cmc
adc
jle
mov
xor
or
mov
xor
dec
sub
push
inc
aad
dec
push
mov
jmp
test
ret
sbb
ret
jae
add
testb
ret
icebp
add
icebp
sub
pop
arpl
sub
cmpsl
jmp
mov
push
jmp
mov
add
sub
adc
cmp
jo
fs
jge
shl
xor
addr16
fnstcw
mov
jle
ret
jmp
test
ret
cmp
mov
jo
cmp
jle
jle
or
cmp
push
sub
mov
cmp
les
push
and
cwtl
dec
cmp
mov
dec
in
xchg
jns
cmp
mov
mov
cmp
push
dec
fstpt
aam
mov
test
data16
or
push
cs
pusha
inc
cld
inc
dec
inc
call
pop
sub
cmp
mov
fisttpl
mov
add
out
cltd
mov
mov
jecxz
enter
sahf
ss
ficomps
cmp
and
jne
ror
aam
scas
mov
lock
rcll
dec
inc
adc
push
pop
fisubrl
add
pop
inc
sub
add
ja
fidivrs
movsb
inc
in
adc
imul
add
push
jge
push
jge
push
xor
xchg
fwait
inc
push
dec
xor
push
xor
das
push
push
dec
push
in
dec
aam
ret
xchg
inc
movsl
xor
push
negb
xchg
ja
mov
fimull
sbb
pop
pusha
sbb
sbb
sbb
cs
lods
cmpb
sub
fldt
mov
in
inc
in
push
pop
inc
pusha
jmp
test
or
push
or
js
ret
inc
aad
lahf
mov
or
xchg
push
or
rcll
cmp
es
test
imul
inc
dec
mov
push
dec
pop
int3
lahf
inc
xchg
mov
stos
in
cltd
xchg
mov
nop
add
stc
das
cmpl
jg
addr16
mov
out
outsl
in
dec
push
cmp
push
adcl
mov
push
sbb
in
aaa
cli
push
sbbb
pop
pushf
fmulp
sbb
rolb
loope
add
inc
js
sub
inc
lea
push
inc
adc
cmc
movsb
lods
cmp
or
decl
ds
jge
or
cmp
pop
pop
mov
leave
mov
mov
icebp
or
xchg
mov
call
sbb
pop
addr16
jge
sahf
cltd
lods
std
add
sbb
lret
es
and
pushf
mov
iret
lock
aaa
lds
push
pusha
push
jp
arpl
sbb
sti
jae
lret
je
pop
jle
push
rcll
shll
fdivp
inc
xor
jo
pop
xchg
idiv
lcall
sti
fdiv
add
addl
mov
sub
sub
cmp
inc
fists
ds
loope
mov
lods
cmp
sbb
xchg
add
push
frstor
and
test
sti
je
mov
outsb
xor
xchg
nop
out
loop
leave
jle
fwait
fsubl
mov
inc
inc
rolb
sbb
sbb
inc
sbb
fwait
cmpb
mov
cwtl
loope
or
mov
jge
mov
repz
rorb
pop
in
in
sbb
icebp
pop
push
xchg
cmpxchg
xor
int3
sub
mov
out
jnp
cltd
pusha
jns,pt
imul
arpl
cli
fstps
leave
mov
test
js
mov
inc
lods
inc
pop
frstor
test
dec
sbb
bound
ret
jbe
sti
dec
sub
outsl
adc
pop
add
pop
sbb
addb
in
push
sbb
xchg
dec
jbe
add
data16
hlt
lock
and
xor
mov
xchg
lahf
lret
mov
xchg
iret
xor
push
or
add
dec
int
lods
mov
aas
mov
sti
je
or
rorb
loop
adc
lcall
push
pop
aas
ret
lds
or
jbe
and
not
daa
jle
mov
jbe
fnsave
outsb
push
jo
mulb
mov
mov
scas
jnp
jg
mov
imul
cmp
mov
sbb
jg
sahf
in
or
rcll
add
push
jmp
inc
mov
jo
mov
movsb
popa
mov
cli
adc
pop
cwtl
inc
adc
add
add
cmp
in
test
aad
cmpsb
or
mov
mov
ljmp
inc
fsubrs
lea
mov
nop
pop
push
jle
xchg
jl
mov
push
sbb
inc
dec
sub
push
mov
adc
jecxz
mov
push
pop
xchg
push
in
and
or
out
divb
push
out
jge
jns
cmpsl
call
mov
lahf
xlat
pop
pop
xchg
cld
xor
mov
dec
pushf
cs
adc
dec
gs
cmc
cmp
mov
in
es
mov
bndldx
cmp
pop
mov
mov
rcll
in
notl
sub
sbbb
xchg
xor
xchg
int
xor
sbb
pop
inc
mov
xchg
dec
rcll
sbb
scas
sub
mov
jge
cmp
and
aas
gs
loopne
loope
cwtl
in
fiadds
ret
fsubs
mov
ja
xchg
push
fadds
repnz
jg
jae
je
iret
jae
xor
subb
js
stos
add
call
mov
and
push
xor
sbb
ljmp
mov
sub
xchg
inc
inc
mov
sarl
mov
cmc
inc
mov
xchg
pop
mov
jge
mov
adc
int3
out
stc
repz
cmp
lcall
add
jnp
push
and
cmpsl
cmp
pop
negl
out
iret
mov
shlb
xor
fcompl
icebp
imul
xchg
sub
lods
push
outsb
jl
xchg
mov
movsb
jle
cwtl
add
sbb
xchg
clc
mov
lret
sub
andb
adc
loope
pop
adc
mov
mov
mov
push
lods
mov
and
es
insb
push
test
push
cld
push
mov
mov
add
pop
cmp
push
aam
push
push
stos
mov
xchg
les
in
sub
pop
out
adc
dec
mov
std
mov
in
lds
jno
aad
mov
add
pushf
mov
or
mov
xchg
imul
lahf
dec
aas
sbb
loop
popa
divl
out
add
in
bound
xchg
jg
pop
mov
sbb
or
pop
mov
mov
in
mov
xor
xchg
or
jle
mov
jmp
mov
aam
imul
push
in
mov
cmp
xchg
jo
push
pop
xchg
sbb
and
clc
gs
push
and
or
pushf
sub
out
and
repz
fcompl
shl
repz
fidivrl
mov
xor
ret
shll
inc
addr16
add
fistps
inc
lds
imul
fcoml
ds
movsl
mov
cmp
dec
into
pop
push
fisubl
cmpsb
push
cli
test
lret
lcall
test
mov
nop
or
cmp
dec
jbe
push
and
xchg
xor
sub
jbe
mov
or
mov
lea
fninit
sti
lods
push
jmp
jle
fwait
shrl
in
jle
sarl
cltd
mov
jbe,pt
xchg
dec
mov
in
or
push
dec
negl
pop
cmp
inc
imulb
push
loopne
pop
movsb
adc
sbb
sub
in
push
add
lds
adc
mov
imul
cwtl
inc
xorb
repz
mov
pop
sbb
dec
cltd
push
das
cmpsl
sub
scas
mov
in
dec
or
insb
imul
rcrl
sahf
cmp
push
pop
dec
adc
pop
push
mov
xchg
inc
leave
pop
fld
xchg
sub
sub
mov
stos
and
dec
aaa
sub
add
leave
mov
fstpt
les
mov
xor
imull
jp
bound
mov
ret
cmp
pop
mov
lds
mov
xor
mov
sub
std
insl
sub
daa
and
fmul
mov
sub
mov
mov
into
pcmpgtw
jecxz
jge
jae
mov
outsl
xlat
fdivrs
and
movl
testl
daa
loopne
loopne
jae
mov
negl
xor
cltd
sbb
test
inc
imul
pop
jno
call
fnstenv
adc
jle
scas
pop
xchg
adc
out
inc
imul
fcomip
or
cmp
jle
adc
xchg
arpl
testb
and
js
or
fstl
add
push
repnz
insl
push
shll
sbb
xchg
pop
and
mov
out
cs
mov
cvtps2pi
push
mov
or
call
test
cli
cld
loop
mov
mov
pop
jne
ficomps
push
mov
mov
jae
sbb
daa
inc
jecxz,pn
cmp
jl
bound
xor
ja
jge
mov
repnz
insl
in
movsb
fstpl
js
scas
lcall
jns
sub
adc
in
push
outsb
jp
cmp
mov
bnd
in
xlat
add
mov
out
cld
shll
aas
push
jo
push
leave
gs
lea
inc
xor
test
ja
lea
cmp
pop
mov
in
enter
or
or
mov
add
jl
jg
add
mov
xchg
jmp
sub
jbe
fstpl
pop
mov
repz
adc
mov
pop
jl
mov
sbb
add
mov
or
lahf
mov
push
rolb
ret
jge
mov
repnz
cmp
aam
fistps
movsl
scas
test
jno
inc
cmp
mov
sti
adc
lcall
pusha
loopne
sub
div
pusha
into
lea
push
out
mov
pop
mov
js
adc
test
xor
add
cld
aaa
and
movsl
jnp
mov
pushf
add
mov
fxch
xchg
adc
test
sarb
mov
cmc
js
add
xor
xchg
add
js
out
fwait
pop
test
in
xor
sbb
mov
outsl
and
in
push
stos
div
adc
xor
add
jg
bound
mov
dec
mov
stos
mov
movaps
sbb
jle
or
lds
mov
sbb
stos
fnclex
mov
test
fmuls
in
packssdw
repnz
xor
aas
in
push
fidivs
lret
mov
stc
jns
ljmp
mov
jne
pop
imul
aaa
pushf
inc
outsl
cs
scas
mov
es
mov
inc
aas
sub
xor
pand
push
in
pop
cwtl
ljmp
jge
rolb
mov
into
test
inc
xchg
xchg
sarb
addb
cmp
dec
sub
mov
push
stc
dec
and
shll
dec
or
inc
xor
sbb
mov
pop
push
or
aad
clc
jmp
mov
sub
cwtl
xor
pop
mov
and
stc
imul
xlat
je
xlat
push
addr16
fnsave
cmpl
mov
mov
imul
pop
xchg
test
push
jl
or
push
push
cmp
es
push
push
ja
sub
mov
iret
ljmp
mov
sub
bnd
popa
mov
xor
xchg
jmp
adc
xchg
stos
sub
out
mov
pushf
add
pusha
mov
jmp
not
jg
les
fnstsw
xchg
add
repz
or
in
or
xor
pop
cmc
xchg
lret
jge
in
mov
ds
dec
dec
imul
xchg
push
in
mov
sbb
xchg
xor
mov
into
and
push
out
aas
push
ror
shl
int3
rol
push
nop
mov
add
xchg
popa
mov
dec
fstpl
js
add
dec
je
cld
cmp
inc
xadd
lds
cmp
lds
aas
pop
jmp
push
cmp
ds
cli
enter
add
sbb
add
jae
xor
xchg
inc
ficompl
sub
add
leave
mov
js
adc
mov
fsts
inc
out
bound
fstp
inc
mov
inc
cmp
je
and
add
rcl
aaa
xchg
pop
test
mov
imul
inc
push
hlt
std
lret
sahf
pop
xchg
out
sbb
cli
sub
sti
xchg
call
dec
fs
or
sbb
adcb
push
add
inc
mov
je
xchg
and
imul
pop
arpl
mov
lods
and
fdivr
push
aas
outsl
mov
rorb
test
movsl
mov
mov
pop
push
lea
sub
int
imul
inc
popf
out
jecxz
xor
xor
adc
rcrb
xchg
xchg
scas
sub
stos
push
sbb
sub
xor
jo
and
stos
int
shll
xchg
mov
daa
xor
imull
and
push
xchg
mov
fwait
push
push
pop
jns
mov
dec
insl
inc
sub
repnz
xor
lahf
mov
out
dec
or
ret
push
sbb
pop
scas
jnp
out
and
push
jmp
dec
imul
sub
aad
pushf
mov
mov
xor
leave
cmpl
or
jecxz
add
cs
int
movsb
pop
pop
mov
dec
inc
xor
xor
cmc
push
js
out
sti
lcall
pop
mov
mov
cmpsb
mov
rolb
lods
rcrl
data16
push
mov
imul
imul
inc
pop
and
aas
call
popa
icebp
jb
jbe
pop
xlat
orl
inc
repnz
mov
jne
or
jp
inc
mov
gs
add
ss
sbb
fadds
pop
push
cld
out
cltd
out
roll
mov
test
das
data16
push
ss
inc
mov
pop
cmc
xor
cmpsb
stos
adc
add
sub
push
lods
shrl
push
insl
mov
lods
stos
add
out
dec
cmp
in
adc
leave
xchg
jle
scas
andl
aaa
cltd
push
sub
insl
in
outsl
sbb
faddl
mov
mov
jbe
fs
xor
imul
lds
nop
mov
call
pop
int
sbbb
mov
dec
cmp
push
ss
sbb
fiaddl
sub
push
rcrl
xchg
insl
add
iret
ret
adc
mov
push
or
jne
dec
xchg
ficompl
loope
inc
imul
daa
xor
rcll
pop
xor
push
xchg
jmp
jl
fimull
push
pop
insb
push
hlt
pop
movsb
xor
loopne
pop
testb
or
in
jo
sub
xchg
test
sbb
sub
sub
cmp
sub
mov
dec
push
mov
sbb
insl
cmp
mov
pop
ja
lahf
push
xor
jbe
pop
dec
adc
addb
fistps
and
cmp
cltd
fldl
jnp
adc
lcall
subl
mov
lcall
scas
and
pop
test
sarl
mov
ret
sti
pop
or
dec
rolb
test
xchg
pop
scas
inc
pop
lods
jo
aam
cltd
cs
jge
push
mov
mov
push
out
loopw
jmp
add
or
jae
movb
fwait
push
fstpt
jo
mov
mov
adc
sbb
dec
fdivrs
push
push
cmp
in
xchg
enter
mov
mov
jns
xchg
cltd
out
aas
int
dec
inc
jecxz
xor
data16
xor
clc
and
pop
sub
mov
clc
aam
aam
dec
cs
out
pop
xor
pop
push
push
jae
push
in
pop
movl
lahf
stos
sarb
lods
jecxz
pop
pop
in
push
in
or
in
aaa
cmp
es
inc
sub
xlat
inc
cmp
or
inc
jnp
aad
pop
mov
int3
fcomp
pop
push
aam
in
sbb
stos
data16
lcall
xor
cmpsb
mov
mulb
das
sbb
jae
mov
arpl
xchg
pop
inc
insl
jge
pop
and
in
and
pop
cld
mov
adc
jle
ss
int
insl
cmc
jbe
clc
scas
cs
inc
fisttpll
push
fld
in
push
pop
cmp
clc
adc
mov
hlt
aad
int3
xchg
mov
cs
bound
ds
sti
sbb
fsubl
mov
sbb
xor
popa
stos
aam
mov
mov
fistpl
ds
xor
mov
sbb
mov
icebp
xchg
movsb
es
aaa
jno
or
int
shlb
ret
in
jmp
lret
lock
mov
stos
jmp
cltd
lods
ljmp
int3
jnp
mov
push
loop
je
inc
push
sahf
jbe
cmp
cmp
lea
jno,pn
jb
sub
adc
insl
shll
fists
cmc
xchg
cltd
std
inc
dec
popa
xor
fcmovb
loop
push
pop
lds
cld
xchg
add
mov
or
and
sbb
imul
xor
lea
lods
fisttps
sub
js
jnp
push
push
daa
mov
add
test
push
pop
jmp
jnp
xchg
or
cmp
cmp
repz
sub
loop
xor
add
out
nop
leave
and
jbe
repnz
cmp
nop
lret
jb
dec
pop
mov
pop
mov
mov
jmp
and
jb
adc
enter
data16
fldl
mov
out
xlat
cmpsl
pushf
enter
popf
inc
jns
iret
testl
inc
inc
mov
mov
test
pop
loop
in
sub
xor
ret
pop
xlat
lret
loop
repz
fdivs
jmp
dec
call
filds
xor
pop
push
popa
push
push
xlat
sub
jg
cmp
dec
gs
cmpb
shrb
lret
insb
sti
sbb
insl
push
in
xor
mov
sbb
pop
in
gs
scas
dec
push
pop
xor
out
pop
stos
dec
in
inc
andl
mov
call
xorb
inc
icebp
xchg
xchg
movsb
cmp
fsubrs
mov
retw
negb
xor
jl
xchg
cmp
push
sbb
js
imul
cmc
add
stos
fisttps
mov
cmp
leave
and
inc
pop
ja
cmp
adc
fbstp
pop
int3
xchg
fnstenv
roll
xchg
mov
push
imul
xchg
daa
loopne
mov
mov
scas
sbb
das
pop
shl
fnstcw
jo
insl
leave
aad
mov
std
sbb
mov
inc
adc
mov
dec
adc
out
pop
movsb
jo
mov
dec
add
fiaddl
psubq
add
jno
lods
leave
rcll
and
in
stc
stos
out
dec
out
loop
test
rclb
popl
insb
rcr
sub
in
divb
lret
xchg
mov
icebp
jge
gs
jecxz
cmp
es
lret
outsb
add
sbb
packssdw
gs
popf
cmp
mov
nop
push
sbb
mov
sbb
sub
jl
sub
adc
mov
pop
xchg
mov
or
inc
cmp
push
repz
sarb
popa
adc
ds
sbb
out
repz
shr
jns
int3
jg
or
dec
stos
test
enter
call
loop
ret
or
adc
ffreep
pop
subl
add
pop
rcr
inc
inc
xchg
jne
inc
mov
xchg
push
mov
pop
insl
jg
mov
jmp
add
add
fisttps
and
iret
jb
jl
add
pop
push
rorb
adc
dec
dec
push
mov
inc
sbb
adc
cltd
lock
and
xor
js
ret
pop
jecxz
xchg
repnz
cmc
jmp
inc
out
dec
ja
cld
cmp
repz
scas
js
fwait
inc
cwtl
mov
sub
add
and
and
mov
dec
or
pushf
adc
ljmp
and
rolb
and
xchg
aaa
push
bound
mov
mov
or
jge
xchg
lea
mov
loop
inc
shrb
mov
xchg
gs
scas
xor
cmpsl
arpl
mov
test
iret
cmp
lods
decl
cwtl
and
jmp
inc
mov
push
adc
enter
mov
insb
addl
adc
popa
fimuls
adcl
push
mov
int3
ret
fcomps
inc
sub
mov
insl
mov
inc
fdivrs
rcll
cmp
mov
push
jl
clc
cltd
sub
shr
sub
and
lods
loope
int
mov
idiv
ja
mov
lods
push
sbb
push
jp
outsl
sub
movsl
loopne
xor
in
and
xor
es
sahf
rorb
roll
xchg
sub
xor
cld
adc
add
imul
pusha
fisubs
stos
lcall
idiv
inc
and
mov
jae
mov
mov
lret
sahf
shrl
mov
lahf
xor
cmpb
jno
rorl
pop
loope
shlb
jb
jecxz
add
test
call
adc
shl
dec
stos
push
xchg
cmp
mov
sub
sbb
fcomi
out
js
or
inc
pop
mov
sbb
mov
sub
cmp
xor
cmp
stos
push
ffreep
out
jl
into
rcrb
xchg
adc
pop
mov
adc
dec
jne
cld
leave
jge
stos
push
je
pusha
ss
and
or
stos
out
mov
mov
xchg
jmp
add
cmpb
out
rsqrtps
lret
push
xchg
pop
push
adc
mov
dec
shrl
sub
xor
dec
add
adc
xchg
enter
notb
push
push
sbb
fdivl
lea
outsl
mov
test
mov
and
sub
or
stos
or
ret
lret
hlt
mov
or
xchg
xchg
ret
sub
push
outsb
inc
sub
imul
sbb
stos
pusha
test
test
xchg
cmp
nop
sti
push
cmc
xchg
push
cmp
clc
sbb
or
jns
fsubrl
in
fcompl
test
or
or
stc
fdivr
mov
lds
dec
sub
mov
sub
cs
push
fisubl
and
repz
dec
loop
ss
or
push
loope
or
push
cmp
incl
or
ret
mov
sub
xchg
adc
dec
cs
std
dec
pop
popl
lods
mov
mov
cmp
xor
and
aas
stos
dec
scas
dec
rclb
negl
fsubp
ret
add
push
xlat
push
xor
faddl
nop
ret
xchg
sub
inc
jb
jmp
mov
mov
xchg
lods
lods
mov
je
jle,pt
in
stos
mov
in
out
mov
scas
je
pop
mov
mov
jle
popf
xchg
stos
fwait
push
movsb
sti
xor
mov
inc
repz
insb
aad
out
sti
inc
clc
cmp
and
stc
cs
push
aad
inc
cmp
shll
push
aad
iret
in
daa
mov
and
mov
std
push
cmp
inc
daa
jecxz
mov
dec
dec
fnstenv
cmp
jae
adc
dec
jg
dec
mov
dec
jle
push
inc
in
popa
inc
test
push
adc
popa
loop
mov
shlb
js
mov
nop
dec
ror
jp
iret
popf
pop
add
dec
cmc
xchg
and
sub
push
push
jl
add
mov
jecxz
jbe
add
shl
scas
jg
adc
out
pop
and
fidivrl
jbe
std
mov
aas
rolb
ret
push
test
ds
clc
mov
pop
insl
xor
aam
cmp
sti
scas
jl
mov
imul
push
cmpl
xchg
fsts
cmc
in
sbb
dec
stc
jno
ds
ret
push
or
add
push
xlat
movsb
outsl
out
or
inc
cmpsl
dec
stc
mov
bt
je
push
push
sbb
push
sub
pop
lret
fs
in
cltd
and
mov
loop
push
xchg
mov
push
xchg
push
push
or
add
pop
jne
dec
pop
fistpl
les
cmpl
xor
stc
cmp
pop
out
decb
rorl
sbb
xchg
nop
out
scas
movsl
mov
push
pop
out
jno
dec
dec
xor
jns
out
cmp
fdivrs
fadd
jge
sbb
test
push
dec
pop
filds
add
imul
loope
xlat
push
ret
stc
sbb
jecxz
dec
inc
in
es
loope
or
adc
out
rcrb
mov
js
mov
mov
or
jae
icebp
add
mov
sbb
sbb
dec
mov
pusha
rolb
mov
jg
mov
gs
imul
add
int3
adc
lea
or
negb
fstpt
adc
mov
mov
dec
aam
hlt
int3
enter
jo
aas
test
fsubrl
mov
in
js
ds
icebp
outsb
test
fsubrl
test
xor
mov
rol
test
into
mov
lods
xor
inc
fwait
rorb
push
dec
test
dec
leave
mov
push
and
ds
sbb
inc
xchg
and
mov
adc
icebp
lds
mov
xchg
into
jl
es
addr16
loopne
repz
fwait
shll
and
jbe
stos
pop
add
push
out
jl
sub
or
fbld
movsl
pop
jne
jnp
fwait
data16
mul
push
sub
arpl
cwtl
push
rcl
xchg
xor
cmp
dec
xchg
rol
adc
mov
push
fcompp
aas
jbe
inc
ret
mov
mov
aaa
decb
sbbb
lahf
mov
cmp
cwtl
popf
jl
pop
imul
jmp
push
mov
shrl
inc
jnp
shl
sbb
xor
ds
dec
lods
dec
js
sbb
mov
test
inc
xchg
mov
lock
outsb
enter
sbb
rcrl
mov
arpl
ss
sbb
ret
mov
sbb
mov
or
inc
stc
sbb
loopne
xchg
push
scas
cld
daa
addr16
mov
and
inc
outsl
test
mov
xchg
sub
mov
or
lret
pop
jecxz
dec
loopne
fimuls
movsb
and
pushf
cwtl
cltd
sub
adc
shrb
push
in
push
sub
arpl
mov
clc
stc
dec
inc
mov
sbb
jns,pn
adc
stc
push
out
mov
in
add
xor
sbb
dec
pop
jbe
bound
mov
outsb
jne
jecxz
lods
cmp
rorb
dec
dec
int3
das
into
lret
leave
filds
cmc
dec
xor
mov
cmp
insl
pop
xor
mov
cwtl
loop
add
add
and
mul
aaa
jne
and
es
mov
mov
mov
fimull
fwait
jge
in
push
aam
jg
pop
jne
pop
mov
sbb
lahf
sahf
fimull
lret
test
ret
sbb
xor
cmp
into
vmovupd
push
loopne
xor
cld
and
cwtl
cvttps2pi
scas
ss
and
mov
mov
sbb
jae
dec
xor
rcll
sub
rcrb
and
sbbl
mov
pop
stos
in
jg
inc
mov
bnd
or
mov
mov
jecxz
xlat
pusha
and
clc
lret
bts
loope
das
cmc
jmp
sahf
addr16
ljmp
cmpsb
clc
jne
xor
fstl
lock
push
add
out
shlb
cmp
mov
cmp
gs
in
test
pop
mov
js
fwait
mov
sub
dec
fcompl
adc
test
jnp
jl
jg
dec
adc
test
or
out
das
sub
dec
je
push
cmp
mov
mov
or
mov
dec
pop
lock
or
push
adc
es
dec
loopne
push
les
dec
in
cmc
iret
or
les
add
cwtl
enter
std
popf
js
dec
rorb
rorb
add
and
pop
test
mov
lret
jne
fs
push
dec
xor
or
ficomps
xchg
jnp
mov
or
cmpsb
iret
mov
adc
inc
fcmovnu
mov
fsubl
mov
mov
jmp
jl
cmp
lea
icebp
mov
movsb
insl
sub
bound
inc
lret
cmpl
mov
incl
sbb
add
aaa
jae
lods
roll
inc
or
mov
out
sahf
aam
jns
shr
and
mov
sub
mov
mov
call
cmp
sub
mov
daa
xor
int3
pop
mov
mov
xchg
xor
xchg
mov
cld
fs
addl
lock
adc
ljmp
out
xchg
xor
enter
mov
data16
dec
call
xor
xor
mov
insl
cmp
pop
sbb
push
sub
mov
sub
ss
and
subb
adc
pop
cmp
ret
jg
xlat
push
mov
int3
and
popf
imul
outsb
popa
push
mov
add
and
in
push
push
ds
mov
es
addl
fmul
xchg
arpl
mov
mov
test
xchg
jp
inc
sub
jmp
xchg
ds
repnz
aaa
push
repnz
mov
enter
sbb
cld
mov
fdivrs
jae
jo
jge
data16
push
testb
ret
fcomps
mov
js
push
jne
and
int3
jle
mov
int3
test
xor
xor
int
fwait
pop
lods
in
lret
xlat
rcrl
rcrb
mov
pop
scas
loope
gs
pop
and
aad
mov
addr16
jb
imul
sahf
es
mov
dec
xchg
imul
cmp
push
xor
int3
push
imul
adc
cmp
adcb
mov
mov
std
adc
jmp
inc
hlt
mov
les
ret
mov
clc
xchg
sub
les
negl
sub
leave
inc
ds
push
mov
std
mov
xlat
lret
outsb
je
jo
mov
lret
sbb
cmpsb
jg
sub
test
pop
dec
mov
movsb
and
jl
jp
jp
insb
fiaddl
sub
in
js
mov
push
rcrl
das
test
ror
jns
outsl
dec
aas
mov
pop
push
stos
pop
cs
adc
iret
fiadds
mov
cmp
int3
mov
mov
jbe
hlt
ds
frstor
pushf
mov
cld
call
xor
sbb
push
xor
in
imul
push
mov
shlb
into
lea
jae
cwtl
add
sti
iret
jno
and
imul
mov
test
mov
inc
inc
xchg
mov
xchg
outsb
mov
int3
subl
push
xchg
sub
jge
sub
push
leave
dec
dec
adc
push
movsb
xchg
mov
jg,pt
mov
mov
inc
adc
mov
and
xchg
mov
scas
inc
shll
cmpsl
pop
in
fwait
and
jbe
mov
sub
gs
jno
test
dec
add
lret
jmp
out
testl
cmp
inc
jae
lods
mov
xchg
jae
jno
jp
sarb
mov
test
subb
mov
daa
mov
and
add
mov
or
xor
mov
scas
mov
xor
leave
xor
jbe
dec
ret
mov
jecxz
repz
stos
mov
xor
out
test
stos
mov
dec
rcr
in
and
out
jnp
sarl
jns
pop
push
xchg
mov
inc
movsl
sbb
xchg
mov
pop
lock
jle
loope
mov
pop
push
mov
popf
stos
cld
dec
sbb
ja
xchg
jmp
clc
mov
jmp
pop
aaa
cmp
scas
lods
lea
mov
les
js
sub
enter
mov
adc
jnp
ret
mov
dec
out
pop
stos
stos
push
gs
sbb
sub
mov
call
xchg
jno
lcall
andl
xchg
push
xor
sub
imul
and
sbb
inc
decl
cs
mov
lock
outsb
icebp
or
pop
mov
shrb
adc
cmpsb
sbb
xor
clc
addr16
mov
aas
xlat
fistl
or
arpl
dec
xor
mov
xlat
and
mov
fsubs
out
mov
outsb
inc
adc
xchg
cmpsb
jmp
mov
in
aaa
ret
jl
sahf
dec
lock
jne
cwtl
lret
ja
les
pop
ja
ret
scas
cmp
lcall
pop
lcall
lahf
stos
sarl
cmp
fistl
fistpl
mov
js
jmp
push
lea
xchg
push
and
das
rorl
clc
cmp
mov
mov
loop
aad
in
out
arpl
inc
xor
pop
sbb
and
jge
or
clc
lret
hlt
call
aas
mov
icebp
or
int
das
xchg
xchg
dec
mov
add
mov
push
jb
mov
nop
xor
or
mov
dec
push
or
dec
mov
popf
and
and
jo
cmp
cmp
pop
push
lret
aam
inc
sub
lock
xchg
in
push
stos
sbb
in
add
xchg
sub
jmp
jne
fcmovbe
icebp
repz
js
sbb
mov
lds
jecxz
pusha
adc
rcr
addr16
imul
pop
mov
out
xor
arpl
std
sbb
movsl
lds
popf
sub
loope
popa
mov
mov
push
sbb
test
mov
cltd
jg
jg
sarl
sub
and
jnp
mov
and
mov
cmc
stc
cmp
in
stc
fistpll
fisttpll
das
pop
push
and
mov
addr16
das
jbe
push
mov
or
clc
pop
mov
mov
iret
or
es
pop
inc
ficompl
pop
pop
ficomps
out
fldt
sub
jmp
lahf
insl
iret
test
cmp
lcall
int
vmwrite
mov
xor
push
push
xlat
push
push
sbb
call
sti
push
xor
xor
test
dec
call
mov
add
enter
cs
sti
push
lret
dec
xchg
xor
in
sbb
jnp
xor
lret
fdivrs
mov
imul
jp
bound
jbe
xor
enter
cmp
jl
mov
adc
lds
jno
mov
js
ror
cmp
shlb
js
inc
jnp
push
mov
std
dec
in
fwait
cmp
outsl
mov
shl
fstps
cmp
lds
cmpsl
mov
mov
movsb
lret
xor
rorl
jne
push
sbb
push
hlt
jo
imul
in
repz
call
mov
mov
cs
adc
ret
and
mov
sbb
sarb
ret
dec
in
hlt
sub
adc
insb
mov
outsb
add
mov
sti
and
ret
popl
push
jmp
xor
lcall
sbb
inc
mov
pop
mov
xchg
xchg
pop
lahf
adc
movzbl
out
outsb
or
shrl
jne
loope
and
test
and
sbb
adc
and
jb
push
ficoms
in
cmpsl
fwait
les
hlt
push
add
ljmp
in
push
push
inc
aam
jecxz
scas
movsb
lcall
in
or
ja
mov
and
mov
cld
leave
xchg
mov
mov
sti
divl
shrl
test
imul
dec
or
int
fdivrs
js
test
inc
push
imul
rcrl
rcrb
mov
push
push
lret
pop
fidivs
xchg
mov
aam
add
rclb
cli
dec
jmp
stc
adc
out
push
in
add
xor
cwtl
xchg
inc
cmp
and
jecxz
lret
lret
cli
repnz
lods
mov
xchg
hlt
testl
or
mov
insl
popa
out
pusha
loope
cltd
xor
mov
lahf
mov
dec
bnd
mov
out
mov
les
dec
lock
xchg
push
mov
inc
xchg
pop
mov
or
sbb
xchg
inc
ret
adc
in
clc
imul
imul
xchg
mov
push
xor
lods
out
es
clc
sbb
cld
lock
ss
mov
push
push
fmuls
out
out
in
cmpsb
and
jecxz
jl
dec
xor
add
das
cltd
add
cld
loop
mov
mov
cld
dec
cmp
test
leave
jecxz
add
add
addb
rol
aam
jns
adc
in
daa
std
and
clc
fwait
mov
lods
mov
call
pusha
movsb
cmp
xor
out
mov
rclb
jb
pop
lcall
pop
sbb
loop
mov
sbb
cmp
subl
out
or
insl
jl
dec
and
aad
adcb
and
or
mov
mov
xor
cmp
and
icebp
clc
repnz
sub
and
addr16
aad
fldt
adc
test
aam
movb
pop
pop
mov
xor
mov
or
rolb
push
jg
lret
daa
push
lods
shl
cmp
and
movsb
out
mov
sbb
xor
xchg
loopne
stos
testl
les
inc
leave
cmpsl
adc
sbb
mov
stc
pop
cld
cmp
pop
jle
ss
mov
data16
inc
xchg
sub
add
xchg
sbb
pusha
iret
enter
mov
fistpll
pop
xchg
push
rorb
sub
mov
push
test
cmp
test
fwait
mov
cmp
jns
into
outsb
lret
xchg
leave
fldenv
dec
xor
add
hlt
arpl
and
jg
cmpb
adc
repz
add
jg
dec
mov
pop
cmpsb
jbe
mov
mov
insb
popf
or
sbb
or
popf
dec
xchg
into
xor
cld
inc
out
mov
inc
js
xor
mov
popa
adc
scas
inc
fwait
xchg
rolb
movb
add
inc
add
cli
insb
mov
je
stos
mov
mov
push
xchg
jle
cli
cmpsb
les
jne
nop
jmp
mov
cmp
add
js
aaa
mov
sub
dec
inc
pop
lods
cmc
stc
cmc
fwait
in
jl
pop
int
mov
in
test
add
les
xchg
decl
inc
xchg
outsl
loop
scas
insl
pusha
xchg
pop
adc
loop
push
out
rep
lods
jl
cmp
jno
inc
or
dec
inc
stos
fstpt
and
xchg
out
push
lcall
testb
outsb
add
ss
xchg
scas
mov
loopne
mov
lock
xlat
pop
mov
ret
andl
dec
jp
sbb
mov
movsb
notb
call
outsl
std
call
inc
sub
inc
lock
adc
insl
inc
push
push
clc
mov
and
jmp
inc
add
inc
addr16
dec
mov
jb
shl
cmpsl
jmp
test
sub
fcmove
bound
xchg
push
add
dec
dec
cmp
loopne
sbb
mull
add
xchg
mov
les
rclb
push
jns
cmp
outsb
pop
mov
leave
mov
push
sbb
add
scas
ljmp
push
lret
std
imull
cmp
dec
repnz
lcall
movsb
orl
insl
pop
sbb
cwtl
loopne
add
jnp
pop
lods
sub
pushf
xchg
xor
pushf
jno
jnp
add
out
out
test
mov
jno
in
rcr
lods
jp
mov
int
cmc
pop
pop
mov
fldt
xchg
ss
test
dec
mov
sbb
adc
daa
movsb
in
inc
adc
adc
inc
aam
push
mov
sbb
ja
vpmacsdql
push
adc
adc
jo
add
loop
je
ja
cwtl
ss
adc
clc
and
fimull
cmp
pop
cmp
aad
popf
mov
jbe
addb
imull
or
ret
cld
pop
sub
xor
mov
jbe
mov
mov
cli
push
ds
fs
pop
xor
xor
fcomp
imul
xchg
jge
popf
dec
pop
ja
pop
fs
xor
enter
add
mov
adcb
mov
inc
sub
test
insb
ja
nop
jbe
shlb
xor
popf
negl
dec
shlb
lods
into
roll
nop
ss
jo
sub
mov
stos
test
imul
jge
inc
out
cmpsb
adc
pop
mov
outsl
or
push
ja
mov
dec
scas
sti
test
mov
outsb
cmp
mov
push
inc
es
aam
pop
dec
shll
movsl
mov
add
jne
scas
pop
jno
push
mov
stos
pop
mov
test
pop
ss
mov
pop
xchg
xor
data16
bound
shl
mov
stos
filds
cmp
xchg
cmp
sub
jb
jns
sub
mov
lcall
notb
repz
punpckhdq
pop
mov
out
sub
imul
jb
push
sub
xchg
cwtl
mov
mov
int
mov
mov
xor
popa
fistpll
enter
stos
sbb
jle
es
pop
into
popa
arpl
outsb
loope
jge
pop
daa
and
push
cld
aad
sbb
adc
in
popa
xchg
xlat
imul
xor
inc
xor
adc
mov
fbstp
sub
xchg
pop
mov
jle
ljmp
imul
xchg
push
sbb
popa
sub
inc
xor
dec
jo
pop
arpl
cwtl
sub
dec
out
inc
sbbl
jge
jns
jae
outsb
and
popa
fdivrl
js
xchg
cld
and
dec
scas
cmpsl
mov
movsl
inc
xchg
std
lea
add
pop
xor
imul
adc
fmuls
out
lahf
loopne
fs
mov
cmpsb
lret
mov
add
addb
ss
movsb
pop
incl
add
rep
ds
cltd
pop
pushf
lea
push
cs
pop
xchg
pop
addl
sti
pop
xchg
mov
nop
daa
ja
jbe
mov
enter
aaa
jg
push
inc
mov
cli
jmp
mov
pop
xchg
dec
dec
push
xchg
fistl
inc
cmc
ss
movsl
pushf
ret
lods
fldpi
in
cmc
xchg
mov
jg
pop
mov
push
dec
xlat
fnstenv
jno
sbb
adc
movsl
out
and
lret
add
mull
int3
mov
push
jmp
pop
lea
and
lods
aas
push
sub
adc
and
dec
pop
mov
jg
mov
std
fwait
int3
imul
xor
sub
jne
cs
popa
jne
clc
pop
inc
cs
add
mov
or
jmp
pop
enter
push
mov
icebp
inc
rcrb
push
repz
mov
adc
outsl
out
fwait
push
or
jb
cltd
jno
push
lcall
sarb
outsl
fidivl
pop
aad
call
jae
add
in
inc
sub
push
jmp
adc
jae
notl
xchg
out
mov
ljmp
xchg
movsl
mov
jle
ret
xchg
fcmove
xchg
in
push
loope
cmp
cli
mov
and
and
and
pushf
mov
sub
sbb
sbb
xlat
mov
gs
pop
ja
adc
inc
sub
mov
mov
mov
xchg
mov
and
fst
fisubrl
fsubrl
fistl
les
dec
jp
dec
mov
pop
mov
jno
iret
dec
ss
mov
lods
repnz
fcomps
pop
mov
out
xor
lods
es
popf
sbb
sbb
lods
outsb
jp
or
push
fisttpll
hlt
fcoml
xchg
out
jnp
loopne
test
in
or
dec
mov
loop
pushf
repnz
repz
add
jmp
mov
lret
pop
inc
xor
xor
icebp
sub
orl
xchg
ja
mov
in
inc
cmp
bound
daa
ja
cwtl
cwtl
and
adc
adc
outsb
add
xchg
inc
mov
out
mov
mov
out
repz
out
dec
xor
adc
enter
lods
into
je
push
into
loop
cmp
dec
shr
fbstp
negb
mov
decl
sub
nop
addl
test
gs
adc
ret
test
sbb
int3
sbb
dec
dec
pop
lods
xlat
xchg
fucomi
cmp
clc
arpl
push
int3
je
and
fisubrl
rcll
jp,pt
aad
fdivs
dec
out
pop
out
insb
and
sub
dec
scas
shlb
enter
fs
out
js
mov
movsl
adc
xchg
xor
sti
xchg
clc
and
mov
inc
xorb
sub
jg
jns
in
pop
repnz
outsl
mov
xchg
mov
lcall
setle
imull
sub
xor
adc
jecxz
mov
cmp
add
mov
test
nop
in
mov
dec
inc
add
jl
add
out
mov
es
addb
das
mov
jmp
pop
sub
push
aad
sub
leave
stc
or
jmp
dec
fdivl
lea
ret
sbb
jnp
scas
fs
mov
ror
out
push
sub
push
icebp
das
xor
into
mov
cmp
fnstsw
mov
dec
loope
sbb
sub
out
neg
mov
stos
lods
out
dec
mov
rcrl
push
icebp
mov
sbb
or
pop
mov
ljmp
mov
xor
ret
lahf
out
xor
cld
fistpll
xchg
iret
data16
pop
movsl
std
ss
add
in
leave
add
inc
mov
jl
and
mov
cld
fs
push
xor
daa
fs
jle
inc
leave
mov
in
jno
mov
xchg
test
arpl
int
fistpl
stc
ss
inc
out
sub
decb
inc
push
cli
xacquire
cmp
in
loope
loop
fs
jns
or
aaa
cmp
push
loope
addps
int
xchg
out
cmp
add
cld
icebp
sub
inc
adc
pop
sar
jne
mov
mov
push
add
decb
mov
push
or
ja
aas
gs
pop
jbe
mov
cld
mov
fnstsw
stos
pop
les
or
aaa
fsub
inc
add
cli
pusha
fistps
xchg
mov
das
aas
test
adc
addb
sub
stos
adc
lret
outsb
ss
xor
int
stos
enter
test
cltd
xchg
lcall
or
xchg
jb
xor
and
or
sub
arpl
cmp
rorb
std
outsb
cmpsb
shlb
mov
xchg
je
lods
or
jae
in
pushf
test
push
cmp
aam
in
lock
outsb
mov
and
jle
jb
sub
stos
in
mov
xchg
incl
mov
ja
insl
iret
mov
inc
cmp
jbe
inc
mov
add
data16
pop
out
aaa
pop
call
push
sbb
mov
cmp
pop
inc
aaa
popl
arpl
lock
test
lods
mov
dec
or
pop
inc
mov
inc
mov
and
or
jge
add
mov
pop
aam
and
ds
adc
mov
inc
jae
outsb
call
mov
rorb
mov
movsb
aad
enter
adc
pop
loopne
fcmove
add
cld
pop
add
std
test
jmp
inc
lcall
add
push
ja
mov
mov
jno
addb
sub
mov
xchg
cmp
bound
aaa
adc
hlt
inc
in
enter
adc
scas
scas
int3
sub
out
nop
fnstcw
test
fistl
sbb
cltd
jns
pushf
sub
mov
ret
outsb
or
mov
repz
cmc
out
test
js
inc
loop
popa
in
divb
gs
mov
mov
adc
push
imul
push
stos
lods
inc
aam
mov
stc
sbb
dec
mov
lods
inc
mov
xor
popf
jmp
jne
inc
std
adc
jno
adc
jnp
cmc
or
ja
xor
aam
movsl
and
push
xchg
pop
loop
ss
inc
mov
sbbl
sbb
sub
out
dec
xchg
or
adc
push
cmc
cltd
lds
in
js
xchg
cmp
jge
outsb
or
sbb
xchg
cmp
or
jp
xor
fcomip
and
stos
sub
in
js
mov
jecxz
outsl
adc
jo
jge
leave
sbb
leave
movb
xor
addr16
ret
lods
pop
lret
stos
dec
sbb
pop
ja
test
repz
jp
sbb
ret
cmp
inc
inc
sub
add
mov
sub
cmp
out
lds
je
stos
fdivs
test
daa
add
std
pop
test
sub
dec
mov
rorl
xchg
inc
ljmp
adc
push
cltd
jo
test
mov
pop
cmp
inc
mov
int
mov
je
mov
int
sub
and
js
roll
psraw
lods
mov
out
add
loopne
push
cmpsb
push
das
js
scas
mov
cmp
xor
xor
iret
clc
xor
pop
andb
mov
pop
cmp
pop
dec
add
jnp
cmp
ret
jmp
nop
cmp
idivb
pop
lcall
test
pop
jo
fcompl
lret
fwait
ret
and
inc
cltd
xchg
aad
insl
mov
jne
or
loope
and
push
mov
adcb
ret
mov
bound
adcl
mov
lret
fstps
sbb
mov
sub
call
aaa
and
lds
jl
mov
in
adc
cmpsl
pop
pop
dec
sbb
sub
das
pushf
test
sbb
int3
fldl
leave
stos
jp
je
cmp
sbb
leave
pop
or
cmp
adc
xchg
inc
jg
scas
and
fnstenv
out
xchg
in
test
xchg
lret
lahf
repz
lods
inc
lock
test
loop
or
dec
mov
out
ds
imulb
mov
mov
pop
jp
subl
pusha
mov
enter
fcmovbe
sti
push
outsl
add
xor
lods
mov
std
pop
fisttpll
das
push
cmpsb
bound
mov
inc
sbb
pop
lcall
dec
cmp
cmp
sub
xchg
mov
push
cmp
aad
je
cltd
adc
mov
cmpsl
pop
flds
pop
loope
lret
jb
icebp
js
decb
inc
mov
sub
mov
mov
xchg
sbb
leave
mov
xlat
mov
sub
cmovae
push
push
cmpsl
mov
dec
mov
jbe
mov
lea
jnp
lock
cld
mov
lret
loop
popf
push
cmp
or
or
in
add
iret
inc
jns
int3
sub
loop
push
das
adc
jbe
dec
int3
xchg
fsts
and
sti
enter
xchg
lea
imul
lock
sti
or
lret
repz
ret
nop
aas
mov
jns
ss
fldl
jp
sub
notl
add
adc
test
mov
cmp
incw
mov
pmulhuw
push
inc
adc
negb
mov
jge
cmp
sub
mov
mov
pop
adcb
aad
add
mov
aaa
jbe
sub
cmp
daa
pop
in
add
es
mov
cmc
loop
filds
addr16
leave
adc
xchg
jb
and
sub
xor
dec
inc
pop
rclb
mov
jp
mov
icebp
pop
pop
outsb
out
sub
lea
jle
ja
fsqrt
pop
dec
les
adc
rcrb
gs
mov
sbb
insb
pop
call
inc
pop
push
adcb
adc
lea
inc
subl
shll
cs
icebp
mov
pop
js
dec
test
sbb
into
push
js
mov
jbe
dec
hlt
sahf
in
adc
add
cmp
clc
lods
xchg
adc
mov
data16
dec
aad
nop
xchg
clc
cmc
jl
cmpsb
fs
add
movsl
je
adc
push
imul
jnp
les
xor
jp
xchg
xor
inc
or
out
pop
pop
sbb
push
push
mov
pop
sbb
outsb
loope
and
jp
or
jns
cmp
xchg
data16
pop
jmp
xor
inc
daa
adc
or
jo
repz
jo
test
ret
inc
mov
int
push
fwait
push
scas
les
in
hlt
xor
jg
movsl
sub
mov
xchg
adc
repnz
mov
mov
or
mov
inc
mov
leave
fisubl
mov
ficoml
sub
mov
pop
xchg
je
pop
mov
and
fs
push
push
sahf
dec
rorb
mov
pop
mov
es
jmp
sbb
sbb
cmp
cmp
dec
and
iret
les
add
mov
cmp
push
inc
in
repz
mov
out
sti
rolb
adc
xchg
xchg
push
out
mov
and
xchg
sub
dec
mov
clc
addr16
adc
fwait
cld
cmpsb
pop
sub
ss
xchg
lods
sbb
call
jp
adc
int
sbb
das
movsb
shll
loope
adc
xchg
pop
inc
test
in
out
insb
insb
rcrl
and
scas
mov
sbbb
pop
add
push
imul
fwait
aad
mov
lds
dec
js
lret
pop
inc
pop
xchg
arpl
push
cmp
inc
jg
je
dec
mov
mov
or
nop
pop
inc
push
fcoms
shl
shll
xor
rolb
lock
addl
lea
mulb
xchg
in
sub
jge
out
jns
movsb
in
hlt
mov
cmp
inc
jnp
int
jns
jp
aas
sub
sub
xchg
inc
das
dec
addr16
orl
mov
lret
daa
pop
lret
repnz
lcall
dec
and
dec
mov
mov
add
push
mov
sub
jbe
dec
or
lea
push
lahf
shrl
mov
xchg
xor
or
movsb
mov
sbb
sti
sbb
mov
push
lds
push
stos
mov
cmp
ret
push
nop
rorb
and
mov
mov
mov
lret
mov
in
fucomi
jmp
dec
xchg
inc
subb
in
shll
add
adc
or
test
add
cmp
cltd
jb
push
call
gs
add
xchg
fwait
lahf
pop
test
and
jp
retw
les
pop
movsl
test
in
push
push
mov
fldenv
cmp
jae
adc
push
sub
push
insl
sbb
pusha
push
jmp
in
inc
mov
cltd
mov
mov
cmp
dec
inc
je
das
popa
xchg
and
stos
xor
int
jge
imul
adc
and
rcll
mov
cld
leave
leave
inc
cmpsl
push
sahf
pop
xchg
sub
sti
leave
pop
shlb
jo
subl
fidivs
repz
mov
loopne
jp
adc
in
sbb
les
gs
pop
mov
rcrl
xor
cmp
fsub
lret
icebp
andb
aam
pop
imul
mov
stos
lahf
aad
jecxz
test
or
stos
loopne
rolb
mov
or
adc
and
aas
sbb
out
jmp
xlat
jg
jge
cmpsl
insl
pop
mov
sub
or
xchg
aad
aad
mov
popf
xor
and
aas
jns
push
inc
inc
sub
or
adcl
aas
cmc
in
dec
push
jbe
bound
lret
adc
jbe
mov
ret
pop
jne
pop
scas
std
and
jnp
lea
nop
cs
adc
add
mov
and
add
jle
inc
stos
jnp
mov
push
test
and
mov
pop
out
xchg
icebp
in
mov
push
sbbl
adc
lahf
lcall
jp
pop
mov
cmp
push
js
loopne
loope
repnz
add
test
data16
incb
out
or
or
cmp
aad
scas
push
cmc
outsl
popf
or
cmp
js
addl
fs
jnp
inc
inc
inc
sub
sahf
lock
movsl
sbb
scas
mov
fldenv
pop
xor
lcall
ja
xchg
into
lret
pop
sbb
mov
jl
jno
add
or
mov
cmc
rcrb
adc
loope
or
fcoms
mov
cmp
xchg
decl
inc
dec
enter
and
mov
xchg
insl
fwait
sbb
and
dec
jmp
xchg
out
test
fsubs
mov
cltd
push
out
fwait
aas
in
sbb
mov
mov
adc
mov
push
pop
test
into
mov
cmpl
pop
cmp
lea
lsl
wrmsr
int3
inc
iret
jns
push
rcll
cmp
pop
ret
add
pop
mov
addl
fwait
cmc
jl
dec
lret
mov
jmp
out
inc
push
loop
jle
or
lock
fnstcw
es
pusha
push
cmp
sub
mov
les
xor
cwtl
fwait
inc
pop
inc
pusha
xor
stos
clc
jnp
js
mov
or
push
xchg
cmp
inc
outsb
addr16
xchg
inc
in
cmc
add
sub
sbb
push
xchg
insb
or
addl
pop
jecxz
pop
adc
mov
sti
xchg
sbb
jno
jp
cmpsb
sarl
insb
add
lcall
sbb
subl
xchg
data16
in
movsb
mov
test
pop
sub
or
ficomps
mov
mov
pop
repnz
xlat
lcall
out
repnz
xchg
into
cwtl
pop
je
lock
lods
les
jb
lahf
out
scas
ret
add
pop
ljmp
jl
insb
sub
pop
cmp
mov
inc
repz
mov
xor
pushf
or
imul
int
subb
push
xchg
movsb
data16
pop
push
fcoms
in
dec
subb
xor
sub
mov
jb
xor
fbld
data16
sbb
movsb
fsub
mov
pusha
dec
divb
and
and
lea
loopne
and
subl
rorb
cmpsb
shlb
repnz
mov
dec
push
pop
popl
lea
stc
popl
mov
inc
push
pop
push
cltd
out
sub
jb
mov
leave
adc
sti
inc
imul
test
cmp
ss
fdivs
lret
fidivl
nop
pushf
out
mov
adc
or
sub
arpl
rcrl
mov
sbb
inc
test
pushf
push
lea
fildll
fcoms
xlat
mov
or
enter
mov
int3
ljmp
scas
dec
pop
pop
pop
enter
scas
sbb
mov
rcll
push
into
popf
pushf
popa
xchg
dec
setl
out
mov
sbb
mov
inc
pop
xchg
testl
insb
mov
in
push
jb
fwait
scas
lahf
mov
mov
adc
xchg
ljmp
and
cld
outsl
dec
adc
in
or
pop
mov
js
outsb
push
fwait
gs
xchg
sbb
push
shlb
fcmovnbe
xor
or
mov
adc
adc
jmp
sbb
dec
inc
sbbl
int
jp
pop
jmp
jmp
in
and
and
sbb
cli
bound
push
lahf
mov
imul
mov
rclb
mov
xchg
pop
adc
jb
movsb
pop
dec
inc
cwtl
sbb
xor
and
rcrl
jb
cmp
mov
ret
ljmp
mov
xor
sub
mov
mov
shll
sti
dec
je
frstor
rolb
std
loop
ljmp
scas
lcall
mov
pop
outsl
xlat
push
popa
lods
fwait
imul
je
imulb
test
add
scas
loopne
mov
mov
sub
cmp
in
mov
inc
mov
dec
lret
out
mov
and
dec
lods
sub
aaa
mov
shlb
popa
scas
sbb
mov
imul
mov
mov
xchg
pop
fs
sbb
test
aaa
push
jle
mov
or
mov
jge
xor
outsb
inc
gs
mov
out
out
ret
xchg
xchg
lea
fidivl
lcall
jbe
mov
sahf
into
cmpl
shl
test
divl
fucompp
jle
cmp
cs
cmp
jb
cmpsl
adc
or
ds
inc
mov
in
movsl
jl
cmc
inc
or
mov
add
outsb
push
sbb
jmp
stc
inc
or
mov
sarb
jecxz,pt
sarb
fwait
addb
stc
inc
fdiv
ret
jns
pop
stc
roll
sbb
mov
rolb
out
push
out
add
adc
insb
call
jmp
adc
les
loop
jle
cmc
or
mov
sar
mov
je
outsb
cmp
insb
mov
or
lods
loop
cmpb
in
mov
mov
push
mov
ds
and
mov
loope
lea
xchg
jae
and
sbb
shrl
mov
sbb
jno
mov
movsl
inc
lods
bound
xchg
subl
aad
cli
pop
shrb
test
sbbl
xchg
faddl
pop
stos
scas
idivb
add
cmpsb
call
sub
andb
push
xor
inc
push
sub
mov
pmullw
cmpsb
shlb
in
xor
xchg
cmp
or
jne
fmuls
mov
and
cmpsl
pop
fcoml
cmp
lret
mov
insl
out
jecxz
out
popf
out
icebp
nop
loopne
jnp
and
sub
xor
cmp
or
jle
mov
or
xor
dec
push
pop
ljmp
pop
mov
mov
mov
sbb
push
out
clc
push
repnz
xchg
adc
cmc
inc
ss
rcr
dec
jmp
push
icebp
arpl
jecxz
add
jp
ret
test
fsubs
test
adc
notb
inc
aas
test
out
rcrl
jns
and
inc
sahf
xchg
test
lret
jae
loope
ds
out
and
or
test
subl
lds
bswap
std
jg
dec
les
xchg
mov
imul
push
mov
mov
mov
sbb
mov
mov
cmpl
in
mov
inc
test
ds
icebp
push
cmpsl
cmp
outsb
add
adc
cmpsl
push
or
test
ds
iret
inc
cmpl
sbb
pop
in
fwait
and
test
mov
mov
xchg
shrl
in
sbbb
fsubp
lock
adcl
mov
in
push
cmc
inc
sbb
fsubl
icebp
xchg
rcl
push
or
jnp
loop
lds
xchg
sub
sahf
jbe
int
cli
mov
ljmp
push
cmp
sbb
pop
insl
pop
repz
xchg
and
fsubs
xchg
pop
rclb
icebp
mov
lcall
sbb
push
repnz
sahf
push
mov
ret
lret
loope
cmpsb
add
movsl
cmp
mov
popf
icebp
test
call
out
ss
mov
sbb
xchg
das
out
pop
mov
popf
mov
sbb
pop
mov
mov
mov
mov
dec
cmp
lea
mov
xor
fsubr
jne
push
rcrl
and
outsb
enter
jb
xchg
aam
test
test
add
push
pop
push
jae
cmp
jg
cmpsb
popa
imul
insb
in
rolb
mov
inc
movsb
cmp
std
into
or
xor
test
insb
popf
xor
imul
sbb
loopne
rcr
ja
cmc
fcomip
dec
or
stos
xchg
push
ret
in
pop
push
int
jl
popf
in
test
call
punpcklwd
dec
out
cmp
jg
shll
js
scas
loopne
clc
cld
and
mov
neg
cwtl
push
popa
mov
testl
adcl
insb
xor
adc
mov
xchg
adc
cmpsl
cmpsb
lods
push
mov
arpl
push
loope
jnp
lock
mov
addl
gs
or
int
roll
fcmovnu
imul
ds
repz
test
fadd
shr
add
mov
loope
fwait
mov
jb
pushf
dec
adc
nop
pop
cmp
repnz
dec
fstpl
stos
mov
xor
stos
shrb
mov
loopne
jne
push
enter
mov
mov
mov
aas
imulb
dec
outsl
cli
pop
cmp
jle
add
addl
orl
cli
inc
sti
cmp
sub
nop
lods
shll
sbb
pop
icebp
adc
lock
sbb
lcall
lods
fsubs
or
sbb
icebp
dec
xlat
jb
dec
int
xor
pop
addr16
jg
xor
addl
fidivs
js
xor
xchg
hlt
cmp
sbb
aas
xchg
and
subl
aaa
or
sbb
cs
je
in
pushf
sub
stc
add
push
outsl
xchg
aam
xchg
lret
mov
and
dec
ja
and
loopne
lods
gs
and
les
stos
mov
xchg
xchg
push
xchg
imul
or
repz
sbb
sub
imul
fiaddl
fwait
xchg
xlat
push
je
popa
fucomp
mov
aam
nop
hlt
and
xor
push
pop
push
mov
cmp
leave
fimull
aas
jno
ror
stos
sti
xchg
cwtl
mov
push
mov
adc
inc
lcall
inc
cli
inc
jp
popa
mov
lcall
xchg
add
add
cmove
push
add
xor
push
fnstsw
cmpsb
ret
cmpsb
ljmp
lret
clc
filds
xchg
inc
cld
dec
inc
in
jp
xchg
xor
pop
ljmp
mov
xlat
push
fs
push
popf
and
mov
jne,pn
xchg
xchg
xor
imul
mov
lret
aas
xor
add
ror
adc
mov
push
mov
rcr
xchg
pinsrw
inc
loope
cmp
inc
sub
je
jp
fnstcw
or
push
push
xchg
sbb
push
incl
inc
imul
mov
push
inc
stos
movsl
fnstsw
inc
lretw
jmp
mov
sub
fs
es
or
test
test
mov
dec
sarl
and
mov
test
jp
pop
inc
in
mov
fcomps
mov
in
sbb
shrb
sti
lods
out
decb
adc
shrl
mov
loope
xor
shlb
push
clc
cwtl
gs
xor
sbb
dec
rcrb
mov
jae
outsb
aas
xlat
aad
and
mov
ret
add
bound
mov
adc
mov
ljmp
pop
dec
mov
lea
scas
xor
fst
push
out
mov
fnstenv
push
mov
and
sbb
mov
enter
inc
and
xorb
jmp
mov
dec
pop
cli
and
pushl
das
xorl
andb
out
xchg
jne
es
bound
les
ds
xchg
push
loope
add
in
es
test
jb
bound
push
xchg
add
push
add
stos
lods
sub
sbb
and
mov
leave
dec
pop
jge
sbb
adc
xchg
inc
jge
mov
call
inc
ficomps
out
push
mov
cmp
sub
clc
popa
loopne
cmpsl
mov
mov
popa
out
mov
ficomps
mov
test
xchg
add
push
ljmp
fcompl
pop
inc
mov
xchg
test
fs
out
push
xchg
add
out
mov
test
sbb
add
jo
gs
sbb
gs
and
jecxz
out
or
xor
dec
rclb
push
pop
fbstp
icebp
in
ret
shll
call
push
xchg
insl
out
inc
out
cli
and
xchg
inc
movsb
sbb
repz
iret
lret
jecxz
hlt
dec
push
icebp
in
dec
xchg
rcrb
rcrb
and
in
or
inc
push
ret
and
pop
xlat
loop
xchg
inc
and
xchg
fdivrs
xchg
enter
xchg
dec
outsb
sub
mov
hlt
mov
pushf
aam
testl
dec
mov
fwait
mov
inc
adc
mov
mov
call
or
call
jl
cmp
test
movsl
mov
repz
dec
mov
movsb
dec
aad
push
xor
das
mov
mov
test
pop
mov
addb
and
jle
pop
cwtl
push
int
lret
js
std
pop
mov
imul
fistl
jle
mov
sbbb
sti
dec
bound
push
cli
push
dec
xchg
cmc
fucom
scas
pop
add
mov
in
aaa
dec
mov
out
inc
mov
push
jecxz
dec
mov
enter
lods
ss
push
push
ror
xchg
pop
and
into
xchg
jecxz
fidivs
cmp
lea
popa
or
out
and
xor
ss
add
stc
xchg
inc
adc
pop
add
shll
pop
cmpsb
push
out
das
aam
jno
mov
ljmp
int3
cmp
mov
fbld
adc
sub
test
test
xchg
pushf
int
bound
test
jb
andl
jnp
mov
ss
mov
aas
xor
sarl
stos
test
pusha
leave
push
adc
fs
jecxz
bound
adc
iret
stc
loopne
adc
aam
lcall
inc
sub
adcb
enter
testl
push
sub
cmc
fnstsw
imulb
xor
movsl
xchg
fldenv
cmc
dec
pushf
push
mov
dec
sbb
cmp
in
rcl
loopne
xor
addr16
pop
cmpl
testb
jbe
mov
add
cmp
or
imul
add
sbb
sarb
xchg
out
ljmp
popf
adc
repnz
inc
pop
mov
rcr
pushf
xlat
adc
ss
mov
dec
movsb
lock
pop
inc
xchg
xchg
es
xchg
xor
add
mov
jl
cmp
and
stos
xor
pushl
dec
cmp
xor
sbb
and
insl
jbe
ljmp
xlat
or
out
pop
pusha
hlt
int3
add
or
mov
or
xchg
and
push
pop
sbb
nop
test
sti
mov
cmp
aas
clc
jg
pop
popf
arpl
movsb
sbb
icebp
mov
mov
adcb
push
jns
cmpsb
int3
push
adc
sti
pusha
pusha
adc
push
pop
outsl
inc
xchg
ja
loope
cld
imul
cmpsb
dec
aam
dec
jecxz
fstpt
pop
xchg
mov
xchg
and
xor
test
push
sahf
xchg
cmp
mov
lea
xor
inc
icebp
or
xor
repz
sbb
repnz
movl
scas
scas
or
mov
add
ds
mov
sub
push
leave
mov
push
pop
sub
lahf
imul
daa
in
shlb
shll
push
mov
mov
mov
mov
push
inc
xor
add
clc
inc
jge
sbb
inc
cmp
mov
loopne
sbb
lret
pop
mov
shr
pop
fstpt
push
mov
fdiv
call
repz
cmp
repz
inc
fwait
out
das
sub
pop
leave
sbb
inc
dec
push
fcompl
lods
jns
adc
xchg
in
cli
add
gs
mov
adc
arpl
icebp
dec
out
fsub
fsubl
fcomps
and
mov
in
lds
scas
dec
aas
mov
mov
xchg
scas
jns
dec
inc
repz
jge
leave
pop
mov
movb
sti
mov
push
pop
xchg
movsl
add
and
xchg
popf
insb
insl
cmc
push
pop
movsb
out
push
push
and
xor
mov
mov
out
cmc
js
xor
or
fcoml
leave
push
xchg
or
int
cmp
jg
lods
test
or
dec
pop
or
xchg
in
jae
jge
sbb
push
imul
fcomp
cmp
repz
jl
lahf
mov
paddw
fwait
sbb
pop
fcmovb
icebp
xor
xor
leave
adc
push
out
and
nop
inc
add
xor
and
sarb
dec
xchg
cmc
enter
lods
or
inc
out
sbb
clc
sbb
sti
es
mov
or
pop
pop
mov
fs
test
ja
mov
dec
jmp
les
mov
lahf
lret
lods
or
and
mov
cli
loope
push
fldcw
leave
int
adc
xor
insb
xor
add
jge
js
mov
push
jle
xchg
push
push
dec
mov
aaa
cmp
test
xor
fnsave
push
cmp
hlt
ficoms
and
push
adcl
sarb
or
add
cmp
mov
pop
pop
movsl
cmp
sub
jno
adc
and
hlt
mov
mov
mov
je
out
int3
pop
sti
adc
mov
out
daa
repnz
dec
push
add
clc
into
xchg
js
stos
ficompl
cmp
push
mov
int
imul
movb
js
mov
jg
fsubl
cmp
sbb
sub
mov
ds
push
js
sub
stc
inc
shrb
flds
js
mov
icebp
stc
cmp
movsl
mov
pop
dec
stos
fwait
adc
clc
in
testl
jb
scas
or
lock
rolb
sub
call
inc
loopne
pop
add
jle
fisubl
popf
dec
mov
aaa
stc
jecxz
movsl
hlt
les
mov
jmp
jle
adc
xor
ja
fcomps
xor
pop
les
push
mov
jnp
arpl
lods
mov
loopne
subl
test
pop
idivb
loope
lret
scas
repz
sub
dec
cmp
scas
dec
jp
pop
sub
cmp
sarb
sbb
push
fsub
data16
sbbl
aas
mov
popf
sbb
inc
js
xor
int
dec
inc
repz
pop
mov
add
insl
enter
outsb
fwait
mov
jne
cwtl
or
jo
push
and
add
cld
sub
out
in
sti
sbb
xchg
in
ret
jg
rcrl
xchg
arpl
sub
mov
cwtl
lods
mov
mov
push
jns
xor
popa
cmpb
lods
mov
sbb
dec
shll
cmpsl
add
jne
mov
pop
pop
push
scas
movsb
push
bound
fstpt
testl
rcrl
test
mov
cmp
sub
sti
insl
movl
aaa
out
inc
arpl
sbb
popf
jns
xchg
xor
mov
adc
sbb
test
insl
js
jno
repnz
mov
fidivl
xchg
test
movsb
sbb
xor
mov
sub
sub
push
je
adc
mov
out
fs
adc
push
popfw
or
imulb
dec
test
clc
cmpsb
pop
imulb
outsb
fs
push
popf
neg
aad
iret
lret
daa
loope
jmp
lcall
dec
jle
sbb
jno
mov
cli
sub
cld
mov
push
dec
ljmp
cmp
push
or
fs
xchg
mov
mov
inc
in
xchg
mov
push
or
andb
arpl
call
cltd
loop
xchg
jns
in
mov
loopne
imul
je
sub
or
push
add
fsubr
movsl
mov
movsl
sub
sub
mov
sub
add
inc
adc
inc
sarl
mov
and
rcr
in
cmp
dec
push
cmp
sti
jns
cli
addr16
jg
leave
outsb
sbb
mov
lret
ljmp
jno
jo
loopne
add
sbb
imul
icebp
scas
dec
pop
cli
jge
xor
inc
pop
sbb
pop
jmp
test
adc
mov
xor
subb
pop
pusha
stos
mov
jno
inc
push
insl
and
and
add
repnz
xchg
mov
cltd
adc
call
ja
jnp
xchg
dec
in
dec
lcall
fiadds
xor
push
mov
stos
push
fxch
mov
pop
xor
dec
pop
sbb
add
cli
or
in
inc
pop
data16
popf
clc
mov
xor
jo
cmp
add
out
or
ret
adc
dec
das
dec
testb
sti
mov
iret
into
pop
jno
rcll
mov
pop
adc
xchg
jne
fwait
mov
clc
mov
inc
aas
cmp
push
mov
xchg
shll
push
add
dec
rcpps
sub
mov
push
hlt
das
outsl
or
jmp
xchg
orb
dec
inc
mov
lock
xor
pusha
lret
mov
aas
jnp
mov
ljmp
xlat
lods
and
mov
fmul
imul
mov
pop
mov
scas
repz
push
loopne
negl
add
push
lock
push
push
pop
xor
insl
scas
push
scas
add
cmp
mov
out
push
ja
xchg
cs
clc
aam
test
nop
sub
scas
fcoms
iret
int
inc
jne
fistl
jnp
xor
or
repz
inc
fs
xchg
adcb
xor
pop
pop
push
outsb
bound
les
mov
lock
dec
test
jge
dec
sbb
xchg
jmp
leave
out
lret
pusha
movsl
jo
mov
adc
movsl
popf
cmp
mov
add
out
jns
cmc
pop
or
pop
and
push
es
lret
sbb
mov
add
xchg
call
adc
ds
adc
cmp
in
mov
mov
into
inc
stos
push
pop
sub
jmp
inc
test
cmp
pop
dec
addr16
fcomps
xor
insl
jmp
hlt
cmp
xor
test
cmpsl
sub
xchg
test
push
push
aaa
aas
adc
pop
dec
bnd
outsl
mov
sub
repz
mov
in
add
cltd
ljmp
cli
pop
jne
jl
in
jmp
imul
test
aad
inc
pushf
notl
rcrb
insl
in
in
jns
stos
mov
les
mov
adc
push
icebp
adc
or
aas
movsl
cmpsl
cltd
inc
sarl
pop
xor
lock
xchg
adc
cltd
push
ja
in
in
lcall
push
enter
or
xchg
add
or
sbb
or
or
loope
into
rolb
jg
scas
pop
cmovae
shll
mov
cmp
test
in
mov
cmc
call
in
call
xor
pop
xchg
lock
adcb
rdmsr
idivb
inc
mov
ret
nop
test
pop
xorl
movsb
mov
mov
xor
push
scas
mov
data16
sbb
add
xor
and
jge
dec
jb
dec
mov
fsubl
jmp
jp
addb
cli
psubb
mov
lret
out
pop
cwtl
xor
stos
mov
pop
mov
mov
sub
pop
negb
outsl
jmp
or
scas
outsb
jo
adcl
mov
je
xlat
or
adc
stos
aaa
dec
cmp
add
inc
dec
push
xlat
xchg
sbb
js
aas
xchg
int3
mov
xchg
cmp
sub
lods
cltd
push
negb
shlb
cltd
lret
pop
xchg
cmpsl
jae
cs
scas
adcb
aaa
jl
setnp
push
mov
xor
pop
test
pop
sahf
xor
outsl
lods
cwtl
sbb
and
stos
fists
fiadds
pop
in
ficoml
shl
and
cmpsl
gs
add
ret
mov
add
pop
push
rorb
xor
rep
js
out
popf
cmp
notl
rcll
out
into
mov
lods
sbbl
test
xchg
jmp
push
pop
mov
shlb
xor
rclb
xor
push
push
pop
dec
and
flds
fidivs
js
das
shlb
shl
imul
push
fs
aad
pop
out
dec
loope
inc
aaa
sbb
mov
push
pop
mov
loopne
dec
les
inc
or
negl
pop
add
mov
out
xchg
mov
push
xchg
mov
sahf
mov
int3
lods
mov
xor
inc
faddl
addr16
mov
sbb
roll
outsb
mov
pop
iret
dec
xchg
mov
aas
xchg
mov
insb
jp
insl
adc
stos
mov
ds
jns
and
lret
ret
into
and
add
mov
push
std
inc
loope
data16
push
call
insl
aam
fldl
stos
mov
jmp
add
test
nop
psubsw
arpl
xchg
mov
sbb
stos
fsubrp
mov
aas
movsb
ret
and
xor
add
out
xchg
xchg
sbb
mov
fnstsw
push
flds
add
cmpl
in
leave
mov
dec
std
mov
movsb
movsl
pop
sti
jae
mov
icebp
subb
cli
pop
pushf
cmpsl
xor
add
daa
push
pop
sub
and
sub
fists
arpl
cmp
pop
lds
mov
js
push
cli
cli
leave
mov
out
mov
roll
mov
test
fsubrs
mov
mov
push
ljmp
pop
lret
pop
into
clc
xor
mov
dec
jnp
movsb
adc
xchg
insl
mov
cld
mov
xor
test
mov
fwait
or
jge
jg
repz
adc
xlat
int3
cmpsb
sti
repnz
mov
add
loope
fidivrs
cltd
inc
cmp
dec
cli
fsubrl
out
shll
pop
sub
out
inc
adc
pop
les
sub
test
add
and
ds
outsb
mov
adc
divb
adc
lock
xor
cmpsl
pop
testl
push
popa
ror
int
jb
outsb
and
test
fdivrl
xchg
fists
idiv
cld
aam
orl
pop
lret
icebp
mov
out
clc
pushf
inc
add
xor
out
cmp
movsl
push
mov
add
pop
xor
shrb
lods
pop
and
pop
mov
lahf
pop
jns
outsb
xor
fdivl
sub
les
mov
add
jge
stc
push
jmp
lods
push
pop
sub
ds
cmp
stos
dec
cmp
aad
fcomps
out
cmp
or
adc
ljmp
loope
rcll
adc
cmp
xchg
ret
dec
cmp
lret
inc
loop
mov
ret
bound
xor
xor
ret
repz
xor
dec
push
movl
out
jmp
loop
lods
mov
pop
sub
dec
xchg
mov
sysexit
fs
xor
jnp
insb
scas
stc
pop
push
xlat
pop
and
cmp
mov
push
adc
push
stos
xchg
add
mov
push
js
add
scas
dec
and
mov
js
push
mov
xchg
inc
jno
xor
or
rolb
dec
sub
icebp
int3
shl
dec
sbbb
sub
dec
ds
pop
out
ret
or
inc
pop
mov
xor
imul
cs
fcomi
cmp
and
mov
lahf
jge
push
test
cs
push
and
jecxz
daa
sub
or
ss
movsl
mov
cmp
lahf
addr16
sahf
mov
sbb
aas
in
ss
movsl
sub
xchg
mov
and
sub
fs
pop
xchg
ds
les
imul
rclb
pop
jno
jp
pop
cmp
pop
sub
jne
adc
inc
sub
mov
push
lock
movsl
out
jno
inc
in
inc
out
mov
mov
gs
cltd
mov
push
inc
jp
lcall
ja
arpl
pop
je
mov
aam
imul
push
or
pusha
mov
mov
gs
mov
das
pushf
xor
pop
ja
inc
mov
mov
stc
mov
jg
sbb
push
je
jno
mov
in
lock
je
cmp
cmp
or
ljmp
and
push
ja
ds
in
mov
jnp
aas
mov
cmp
push
dec
jns
aam
fimuls
dec
hlt
mov
sarb
popf
orl
jb
cmp
test
stc
test
test
jmp
inc
dec
xor
and
mov
sarb
jo
out
lret
mov
add
lcall
outsl
mov
popa
mov
mov
lret
lret
in
and
das
dec
les
aaa
aam
lods
movsl
sbb
in
leave
or
and
jmp
jg
fwait
inc
nop
outsl
adc
int
test
cmp
std
pop
test
je
rorb
lock
mov
and
js
cmp
cmp
data16
sub
cmpsl
or
ss
add
xchg
in
pop
sahf
leave
insl
push
xor
test
xor
test
adc
inc
push
hlt
dec
cmc
xchg
cld
in
sahf
or
push
and
push
sti
int
sahf
fdiv
lods
jmp
data16
or
cmpsb
push
lcall
sub
adc
mov
push
xor
mov
aad
or
cmp
xchg
arpl
out
insl
xor
popa
cmc
stos
fs
pop
mov
repz
mov
pop
cmp
addr16
aas
fisubl
das
ret
jb
popf
and
push
mov
inc
add
and
or
inc
mov
icebp
cmp
leave
inc
mov
test
xchg
push
out
out
push
repz
aam
add
and
sbb
add
sti
pop
cli
out
pop
adc
in
cmpsl
ror
idivl
js
ret
add
xchg
push
cli
popf
jp
lret
enter
nop
add
sub
sub
jo
sbb
xor
cmp
or
lds
imul
xchg
pusha
aam
imul
xchg
pusha
ljmp
and
jno
lods
jns
dec
rorb
js
jp
nop
mov
mov
pop
pusha
outsl
std
and
bound
push
pop
mov
jbe
push
push
pop
movsl
add
mov
insl
imul
dec
stos
push
dec
cmp
pushf
and
in
xor
and
daa
shlb
xor
hlt
pop
lock
mov
call
out
dec
movsb
mov
xor
pop
ds
xlat
add
cltd
add
push
inc
push
enter
rcrb
shlb
and
add
cli
inc
lcall
lahf
arpl
into
or
pop
cmp
inc
nop
fstpl
out
int3
push
xchg
mov
div
cmp
cmp
movsb
out
adc
inc
aam
mov
fcmovu
push
or
mov
gs
into
xchg
sbb
jo
sub
mov
lea
adc
imul
sbbb
mov
pop
dec
pop
sub
adc
mov
popa
popl
sub
add
mov
rolb
cmpb
dec
fs
dec
repz
out
mov
cltd
lods
dec
jmp
or
in
stc
std
and
cli
ss
mov
outsl
daa
sahf
xchg
pushf
mov
mov
mov
xchg
xchg
mov
aaa
sbb
and
inc
pop
mov
mov
addr16
inc
adc
add
sti
jbe
fimuls
or
jp
stos
sbb
jecxz
adc
xor
setg
shll
ret
dec
or
sub
dec
push
jae
addr16
sub
notb
jb
neg
adc
lock
cltd
loope
das
leave
aad
xchg
outsl
inc
inc
out
insb
test
lcall
push
movsl
mov
pop
adc
mov
sbb
sbb
mov
cmc
mov
jle
repz
cs
mov
in
push
sbb
or
daa
test
arpl
xchg
pminsw
call
add
xchg
xor
imul
hlt
inc
and
cmp
adc
cld
rcr
inc
leave
adc
dec
pop
dec
orl
push
movzwl
std
jge
ljmp
lahf
xchg
imul
in
xchg
lcall
pusha
jl
and
xchg
mov
xchg
mov
mov
fisubrs
in
add
sbb
xchg
out
mov
adc
xchg
ljmp
lds
loope
divb
ja
push
or
ss
push
jae
loop
popa
sub
dec
into
les
inc
loop
sbb
stc
data16
jle
fs
cltd
mov
mov
leave
test
mov
popf
jle
bound
scas
sbbb
mov
adc
ja
shll
add
jnp
das
add
pop
dec
push
repz
push
in
xor
jg
mov
dec
movsl
ficomps
stos
divl
push
mov
les
lret
cmp
sbbb
pushw
and
mov
cwtl
cmp
in
pop
into
push
ja
arpl
push
movsb
mov
or
loope
es
cltd
lret
cs
repz
data16
mov
and
out
add
cld
jg
cs
out
push
imul
push
mov
pop
mov
imul
xchg
enter
jbe
pusha
mov
shr
cwtl
sbb
hlt
fdivrs
mov
ja
pop
jbe
loopne
xor
lods
test
imul
sahf
aam
cmp
imul
push
fistpl
je
int
outsl
xor
push
repnz
pop
pop
dec
and
js
mov
mull
mov
sbb
movsl
je
adc
rcr
sub
mov
jne
push
mov
and
hlt
cmpsl
inc
sub
out
hlt
in
cmc
fisubl
mov
repnz
lcall
mov
sbb
in
jp
xor
xchg
cmpb
push
lret
rol
mov
sub
pop
outsl
pop
lret
xchg
push
in
add
push
pop
dec
pushl
ret
cmp
sub
push
jnp
mov
sub
mov
xor
jge
ret
xchg
jb
xor
shrb
lock
inc
pop
orb
out
mov
stc
and
or
popa
and
xchg
std
ret
xchg
mov
or
xor
fs
mov
pop
les
mov
inc
sub
lret
enter
push
mov
add
mov
scas
loope
xor
neg
xorb
jo
jnp
popl
ret
or
mov
rolb
jl
xor
mov
sarl
lods
leave
inc
mov
jecxz
stos
mov
ds
call
xor
std
stc
push
jl
pop
insl
movsl
into
cwtl
int
dec
add
rorl
dec
push
test
bound
dec
pop
adc
mov
ficompl
mov
repnz
push
dec
ds
sub
xchg
mov
js
inc
aaa
sbb
push
push
outsl
sbbl
mov
and
out
mov
or
push
jbe
test
adc
pop
test
or
ret
sbb
push
sbb
sub
mov
fcoms
nop
and
xchg
loope
mov
pushf
gs
ficomps
lret
pop
mov
cmp
adc
add
int3
ror
lea
push
nop
sti
hlt
xchg
js
test
pop
dec
ret
lds
int
add
outsb
mov
ja
sub
xor
ret
pop
inc
fcom
mov
cmp
test
pop
jecxz
ud2
adc
cmpsb
ret
jno
jno
call
dec
in
cwtl
xor
aaa
mov
cmp
adcl
add
mov
push
insl
xor
cld
call
add
insb
fsubs
out
enter
iret
into
sub
mov
ret
inc
inc
pop
xchg
mov
pop
mov
stos
sbb
jns
pop
pop
adc
in
cmp
imul
jns
xchg
push
push
popf
test
outsl
pusha
dec
dec
adc
dec
mov
lahf
inc
les
ret
cwtl
mov
shlb
cmp
fiaddl
divl
or
data16
lea
jns
mov
arpl
loopne
jp
cltd
sbb
cli
pop
jnp
hlt
cmp
push
pushf
xchg
cli
cwtl
in
addr16
xlat
push
faddl
test
imul
lcall
test
jnp
cmp
xor
subb
or
push
mov
pop
outsl
jno
inc
insl
jno
push
mov
ret
repnz
arpl
iret
jg
and
push
por
mov
mov
enter
sub
loope
shll
mov
or
loop
mov
fcomps
pushf
mov
popa
dec
jmp
stos
inc
fadds
sbb
ret
cld
sub
sbb
rol
adc
sub
out
mov
pop
daa
in
mov
lock
jno
xchg
lds
adc
jb
xchg
popf
mov
ret
cmpsb
xchg
inc
repz
push
adc
mov
xor
movsl
icebp
pop
iret
jne
push
jecxz
mov
jmp
ret
sub
pop
or
mov
add
push
shlb
xlat
stc
inc
dec
fstps
pop
and
or
cmp
fwait
lock
lahf
cltd
xchg
sub
or
sbb
and
cmp
sub
push
in
in
xchg
and
jbe
lret
inc
test
imul
adc
rcrb
cmp
cltd
inc
out
sahf
adc
jmp
in
icebp
mov
sti
cmp
adcl
lods
bound
shlb
or
movl
test
lods
addb
xlat
xchg
clc
leave
adc
jge
leave
mov
fstpl
cwtl
cltd
pop
pop
in
movsl
jge
push
scas
jnp
and
pop
js
add
mov
cmp
lret
jp
arpl
or
push
cmp
pop
andb
xor
sbb
mov
fwait
leave
mov
push
fldcw
add
sbb
pop
pop
test
cmp
sbbb
movsb
out
hlt
pop
mov
sbb
in
and
cmp
ret
mov
push
in
cmp
or
adc
cmp
loop
push
outsb
sbb
adc
or
dec
daa
nop
sbb
mov
jle
insl
push
and
mov
into
outsl
inc
mov
adc
push
mov
or
pop
adc
rcl
scas
xor
inc
jo
lods
xor
push
pop
sbb
sub
adc
xlat
mov
fdivrs
sbb
popa
ret
pusha
xchg
and
fstl
adc
cmp
mov
das
cmp
xor
cmp
imul
sub
xchg
pushf
fsts
xchg
dec
ljmp
lcall
xchg
bound
and
push
fwait
popa
inc
sbb
lea
push
jl
cmpl
aaa
or
clc
aam
push
push
dec
xor
pop
sbb
outsb
jo
mov
sbb
mov
movsb
sub
xlat
int
mov
inc
cmp
sub
int
aaa
cli
pushf
sbb
jbe
ljmp
shlb
xor
or
pop
pcmpgtw
adc
fadds
dec
movb
popa
pop
xchg
inc
jmp
xchg
and
daa
push
nop
popf
out
push
cmpsb
push
cmp
xlat
fisttpl
sub
push
cmp
lret
jg
cwtl
icebp
sbb
orl
mov
inc
clc
lret
adc
mov
inc
push
scas
ja
xlat
mov
cmc
cmp
dec
dec
xchg
sti
jae
jae
cli
xchg
mov
call
xor
or
pop
imul
push
test
lea
fstpt
cmp
lret
aas
daa
and
jne
push
adc
push
or
imul
xchg
lahf
pop
ja,pt
es
xor
stc
rep
xchg
lret
inc
arpl
xchg
rcl
pop
pop
xchg
xor
sub
pusha
and
dec
insl
outsb
lock
xlat
pop
leave
push
push
scas
and
inc
xor
es
lock
pop
imul
mov
mov
adc
xchg
mov
and
inc
mov
xchg
cmp
inc
push
push
cs
xor
or
leave
push
sub
incb
aam
mov
in
mov
lea
les
sbb
pop
aad
sbb
cmpsb
lods
ret
push
jp
ss
or
push
sub
xchg
inc
out
outsb
in
xchg
aad
cwtl
and
es
mov
testb
add
pop
test
mov
addr16
stos
xor
push
mov
or
jnp
xchg
adc
mov
dec
cmp
xchg
fwait
jge
shl
and
imul
sbb
jbe
lock
jmp
push
aad
xchg
cli
dec
pushf
jecxz
xchg
js
sbb
jnp
das
outsl
mov
adc
xchg
in
in
pop
hlt
int
jmp
xchg
sbb
jmp
shr
mov
xchg
mov
push
inc
mov
xor
xchg
mov
daa
and
mul
inc
in
add
cmp
mov
das
jne
dec
andl
in
adcb
ret
mov
or
in
fs
xor
sahf
xor
inc
mov
mul
mov
jecxz
sahf
add
pop
push
xor
rol
clc
mov
ror
adc
mov
xchg
arpl
adc
adcl
xchg
movl
outsb
xor
mov
loopne
aam
test
orl
mov
insb
orb
fmull
push
push
sub
shl
jb
jne
call
sub
inc
mov
ljmp
cmp
ret
insb
mov
iret
mov
sub
stos
cmc
push
popf
xchg
movsl
std
ja
setbe
dec
pop
clc
lret
inc
fimull
or
pop
cmp
imul
fcos
ret
test
xchg
leave
into
add
jl
jg
shll
xchg
cmp
popf
adc
push
cmp
xor
inc
mov
out
adc
jg
sbb
out
addr16
jg
ja
and
pop
inc
and
dec
pop
inc
int
xor
mov
cmp
mov
pop
xchg
mov
shrl
bound
test
xor
orl
pop
jp
or
outsl
cmp
movsl
sub
jae
push
sub
mov
sahf
dec
lods
std
xchg
ss
and
fstl
das
fildll
push
mov
pop
out
and
hlt
pop
sbb
xor
dec
in
cmp
xchg
negb
push
in
popa
nop
jnp
pusha
sbb
cmpl
stos
jnp
jmp
in
xor
sbb
test
adc
push
sbb
inc
pop
inc
xlat
mov
scas
push
sahf
xchg
lods
pusha
sarl
mov
and
cmp
cmp
in
movl
pop
aaa
mov
and
fs
push
adc
jmp
cwtl
adc
add
test
sti
popa
pop
es
cli
cmp
enterw
cwtl
sbb
or
jae
outsb
fimuls
insl
or
hlt
aaa
test
orb
outsb
jge
fs
imul
xchg
stc
sbb
jp
mov
dec
out
mov
lcall
push
xchg
xchg
mov
divb
pop
push
or
jmp
jno
sub
test
clc
xor
xchg
cmp
push
out
outsl
push
add
pusha
jbe
das
std
out
jle
adc
xor
inc
inc
cs
test
out
movsl
popa
xchg
es
pop
and
cli
cmp
leave
xor
lds
dec
mov
repz
inc
and
mov
movsl
inc
or
aad
xor
decb
aaa
data16
jecxz
fucomip
pop
mov
js
lods
stc
pop
mov
mov
stos
fwait
inc
aaa
mov
js
jl
xchg
sbb
shlb
push
fimull
cltd
mulb
push
cwtl
push
scas
call
xor
fnstenv
adc
dec
data16
inc
in
or
inc
cwtl
mov
jg
cmp
mov
imul
adc
repnz
in
ljmp
mov
dec
aaa
sub
push
jecxz
mov
add
mov
sbb
mov
xchg
sub
ds
daa
insb
std
xchg
adc
test
adcl
aas
push
pop
sub
cmp
aas
sbb
sti
in
xor
sub
sbb
mov
js
push
push
pop
push
sub
imul
mov
cmp
and
adc
les
mov
loop
mov
movsb
dec
and
movsl
xchg
jbe
jns
fdivrl
inc
gs
xchg
rcrl
jnp
aad
pop
jnp
mov
xchg
sti
fbld
jecxz
xor
and
test
punpckldq
pusha
int
pushl
mov
adc
outsb
jg
pop
in
inc
or
lahf
push
les
ret
inc
jge
xchg
std
sbb
mov
push
in
mov
call
jbe
pop
lea
repnz
dec
mov
icebp
push
jmp
adc
ja
jle
dec
sub
movsb
fs
fildll
cmp
out
and
cmp
mov
bound
inc
lahf
pop
lods
cmc
xchg
push
std
pop
mov
mov
int
inc
test
mov
pop
in
jbe
xchg
outsl
jg
xor
fwait
cld
mov
xor
loope
mov
ds
sub
arpl
xor
stos
daa
fiadds
rol
cs
mov
or
notl
pop
add
add
fldcw
xor
mov
pop
bound
add
push
fbld
push
mov
jmp
mov
sarl
faddl
jne
jns
popf
fistpll
cmp
push
rcr
dec
xlat
pop
xchg
shrl
decl
dec
pop
lret
test
add
sbb
xor
xlat
sub
sbbl
shrl
push
cmpsb
cmp
or
inc
mov
es
stos
jge
mov
rorb
jbe
iret
movsl
add
cs
mov
sti
add
dec
jb
int3
jp
cmp
shll
push
daa
inc
cmp
push
jecxz
ret
aas
xchg
inc
jne
nop
imul
mov
rcrl
sub
test
mov
es
push
daa
ljmp
out
mov
mov
and
dec
cwtl
ss
sti
sub
test
and
mov
xlat
movsb
adc
iret
pop
jns
adc
das
mov
jl
iret
xchg
rorb
imul
sub
inc
loope
push
mov
into
mov
or
mov
sub
daa
mov
and
xor
pusha
addr16
push
sub
nop
mov
and
cmp
pop
cmp
sti
inc
out
movsl
xchg
fs
xor
lcall
and
push
test
sbb
sbb
xor
into
xchg
mov
enter
scas
ljmp
incb
jecxz
mov
gs
stos
dec
jmp
pop
push
mov
dec
fsub
cmpsl
push
mov
adc
hlt
inc
xchg
pop
xchg
test
add
mov
cmp
gs
sub
test
call
in
pop
imul
nop
lds
inc
aaa
xchg
push
push
mov
inc
xor
xchg
pop
push
data16
cmpb
push
dec
sarb
cmp
mov
xchg
pop
adc
jl
dec
in
jno
push
inc
orl
mov
mov
adc
cld
cmpsb
into
ds
sbb
stos
jmp
push
adc
sti
dec
int3
nop
inc
outsl
cmp
sub
scas
jecxz
cmp
cld
xor
popf
xchg
pop
mov
add
clc
aas
rcrb
mul
push
iret
cltd
push
adc
adc
into
inc
inc
enter
je
inc
clc
mov
adc
pop
or
pop
leave
xchg
popw
xchg
loop
mov
and
leave
pop
pusha
loopne
cli
pop
mov
xor
pop
outsb
mov
and
push
movsb
pop
ficoml
xchg
jp
dec
enter
pop
gs
sbb
pop
jg
and
lock
mov
jp
inc
shrb
enter
cmp
nop
mov
pop
imul
push
dec
data16
xchg
jecxz
xchg
mov
push
push
es
pop
ja
pop
cmp
icebp
cmp
add
push
stos
sbb
mov
adc
lock
adc
stos
add
iret
int
jne
xchg
cmpl
dec
xchg
xchg
outsb
xor
shll
add
jo
xor
clc
loope
jne
mov
mov
test
sub
or
push
inc
movsl
ss
movsl
or
sbb
push
add
mov
jg
mov
or
lds
push
jne
cmc
cli
dec
inc
fbstp
jnp
adc
and
fdivs
sub
ss
idivb
push
mov
outsl
adc
sub
pop
add
cmp
ljmp
icebp
jns
stos
fwait
inc
lds
es
mov
cmp
or
pop
lret
add
sub
lret
xorb
cs
mov
jne
adc
lret
mov
or
loope
stc
clc
ss
xor
and
jns
mov
adc
or
xor
push
dec
sub
pop
ret
subb
repz
xor
lcall
call
xorl
cmp
pusha
fiadds
xor
or
int3
lock
movsb
mov
jo
mov
push
leave
repz
mov
fucom
popf
je
stc
xchg
ljmp
xchg
insl
cmpsb
cmpl
call
pusha
fnstcw
adc
out
and
gs
movsl
das
clc
jl
iret
popl
sahf
cmovbe
jge,pt
icebp
popa
xchg
push
and
out
pusha
adc
cld
mov
mov
lret
cmp
push
or
jno
mov
xlat
nop
jbe
sbb
daa
jl
js
stc
outsl
push
cwtl
dec
fs
mov
sarl
push
sbb
aad
mov
leave
adc
js
xchg
mov
ja
sarl
inc
shrl
xor
dec
in
sub
jecxz
xchg
popa
or
fs
xor
and
mov
repz
shll
sti
pop
gs
jl
mov
fs
mov
hlt
shrb
add
lcall
and
push
ret
in
mov
mov
test
arpl
inc
mov
sbb
cs
inc
scas
jbe
pop
pop
cmp
xchg
mov
inc
mov
jmp
int
push
pusha
mov
pushf
adc
cmp
rcrl
xlat
in
and
xor
aam
in
lds
adc
outsl
outsb
enter
cmp
fsts
push
sub
fmuls
lock
test
jg
and
jmp
gs
adc
bound
pushf
mov
call
dec
xor
lret
cld
pop
divl
cmc
or
js
inc
or
jne
add
mov
les
pop
lds
ficoml
and
popf
push
jbe
cmpsl
dec
inc
aaa
flds
inc
or
inc
push
mov
jo
rorb
push
pop
fsubrp
jp
and
xor
mov
mov
push
in
sbb
inc
aas
add
push
mov
lock
jmp
into
test
arpl
subb
mov
push
sbb
sub
lahf
js
imul
cmp
cmp
je
mov
and
mov
shl
out
ret
mov
pop
push
stos
inc
mov
pop
mov
int3
scas
adc
jo
cmp
pop
enter
or
and
pop
fwait
rclb
mov
cmc
mov
sub
mov
pop
push
cmpsl
or
ror
stos
adc
test
mov
stos
cli
rcrb
xor
mov
push
jmp
int
dec
push
push
out
jmp
icebp
fwait
iret
test
pop
inc
or
sbb
add
add
cmc
cs
fwait
pop
fisttps
push
pop
lcall
xor
clc
data16
add
xchg
lret
sub
ss
add
cs
or
xor
cwtl
test
cmp
ja
inc
cs
in
jne
or
pushf
xor
icebp
cmpl
rcrb
popf
sarb
push
int3
cld
ss
mov
dec
jg
and
in
sub
mov
out
xchg
mov
hlt
or
in
and
add
mov
inc
push
test
cs
clc
inc
call
fsubrl
xchg
mov
xchg
mov
pop
ljmp
fildll
insl
xchg
icebp
jbe
pop
inc
orb
aad
lods
into
aas
inc
pop
xor
jnp
inc
push
push
dec
cmp
ljmp
test
lock
and
clc
mov
and
icebp
add
add
or
mov
sbb
out
mov
insl
mov
lea
jns
rolw
repnz
push
sbb
jae
pop
mov
scas
xchg
dec
pop
dec
dec
pop
mov
lods
push
ret
jne
inc
jge
mov
cli
inc
pop
out
shlb
sub
lods
es
jae
cmpsl
xor
scas
xchg
xor
mov
aaa
outsl
mov
outsb
mov
adc
mov
daa
fcompl
sub
cmc
lahf
lret
cwtl
cwtl
leave
mov
xchg
add
shrl
push
lcall
dec
cmp
iret
sbb
js
cs
pop
call
fists
mov
je,pt
pop
stos
loopne
lcall
enter
inc
outsl
js
push
jp
dec
mov
fidivrs
mov
addb
inc
insl
jb
xor
cs
or
mov
add
popf
cmp
cmp
cmpsl
lods
or
jmp
ret
in
or
sbb
addr16
subl
sbb
out
scas
mov
jno
or
jb
loope
ds
dec
mov
lods
loopne
or
mov
hlt
mul
or
mov
xchg
add
add
or
insb
dec
loopne
les
in
xchg
fildll
jge
in
cmpsl
daa
stos
frstor
shlb
pop
nop
dec
popl
and
sub
fcoms
xchg
sbb
cmovp
pop
fsubl
je
out
sti
cmp
push
jbe
rcll
stos
xchg
rclb
daa
loop
js
mov
insl
mov
andb
xlat
subl
xchg
int3
and
mov
movsl
add
sbb
or
dec
icebp
cld
push
cmp
xchg
test
aas
jnp
xchg
inc
mov
jmp
jp
testl
scas
icebp
push
adc
mov
push
inc
jne
mov
jecxz
test
lahf
cmp
pop
adc
inc
dec
fisubs
insb
lock
aam
add
cmpsb
sbb
mov
xlat
insl
cmp
out
pusha
lahf
pop
arpl
enter
adc
xchg
add
nop
das
jl
and
xchg
lcall
and
sbb
loop
test
mov
sbb
repnz
in
xchg
jne
push
push
stc
dec
jmp
stc
mov
sub
sub
jo
insb
iret
pop
cmp
inc
loopne
and
mov
ds
arpl
fistps
decl
addr16
and
mov
pop
xor
aaa
mov
xor
into
rclb
dec
sbb
lds
test
imul
aad
sub
cli
ficoms
push
inc
clc
adc
xchg
call
adc
jl
ret
or
popa
and
sahf
or
mov
int
rorl
push
mov
clc
mov
cmpsb
inc
push
fsubs
mov
sub
adc
push
pop
pusha
sbb
adc
pop
imul
add
push
jb
xor
andl
xorb
loop
xchg
jle
int
adc
clc
pop
ja
bound
fs
int
clc
push
add
je
adc
cmp
lcall
add
xlat
adc
mov
mov
cld
jmp
ss
mov
mov
sar
mov
jae
pushf
stos
inc
clc
dec
pop
inc
or
scas
inc
sbbb
insb
sub
jecxz
mov
sub
aaa
adc
sbb
push
std
lds
cld
fcoms
sbb
sub
icebp
mov
in
out
xlat
push
push
int
test
ds
out
jl
pop
test
lret
loopne
xor
loopne
outsl
fs
xor
fistpl
dec
loop
out
int
pushl
bound
loop
or
cs
pop
dec
xchg
sbb
push
cmp
fnstenv
ret
jle
push
cmp
adc
insl
or
loope
cmp
or
jns
pop
cmp
rclb
shll
xor
adc
mov
test
push
roll
addr16
inc
outsb
add
jno
pop
shr
es
lea
pop
aas
pop
add
test
filds
dec
mov
pop
inc
sbbl
pop
add
mov
lods
aam
mov
enter
rcr
pusha
rorl
dec
sbb
dec
rorl
sbb
mov
ljmp
fldt
shrb
ljmp
mov
xchg
dec
adc
xchg
sub
jne
aad
dec
stc
add
or
je
pop
dec
dec
cmc
sub
cmp
xor
fsubr
add
mov
popa
out
es
cmp
jmp
sbb
dec
dec
and
lcall
fs
and
outsb
push
scas
jecxz
and
call
adc
aad
and
out
add
xor
dec
or
push
lods
pop
xor
popa
jge
shrb
pop
adc
movsl
std
into
push
js
repnz
dec
mov
fcom
inc
in
lcall
roll
cmpsb
push
xchg
mov
scas
dec
jmp
xchg
arpl
clc
mov
mov
xor
and
faddl
popa
mov
sbbl
xorps
in
arpl
and
call
push
outsl
jne
imul
popf
push
aaa
cwtl
loope
push
mov
jbe
cmp
stos
hlt
xor
cmp
mov
inc
sub
stos
inc
dec
or
push
dec
cmp
out
in
out
out
popf
mov
ja
adc
cwtl
pusha
bnd
push
nop
mov
mov
sbbb
hlt
cltd
insb
pop
xchg
and
jnp
xor
les
sbb
mov
data16
dec
push
or
sub
cwtl
xor
jle
movsl
cmpsb
xor
int
int
test
out
bound
cmp
adc
mov
push
xchg
xchg
pop
cmpsb
sbb
call
addr16
xlat
rcll
cwtl
je
stc
dec
test
jo
jmp
test
mov
mov
sub
or
js
out
xlat
fdivrs
int3
in
sub
dec
outsl
pop
pop
xchg
adc
and
pop
pop
sub
and
dec
mov
cld
push
inc
roll
add
jb
mov
mov
inc
aas
cmp
inc
cmp
loop
cs
bound
call
sbb
mov
in
fnstsw
insb
pop
push
inc
mov
add
push
test
mov
push
out
fsts
xchg
ret
js
repz
test
fdivl
outsb
mov
add
dec
aad
add
cmp
pop
or
cmova
xor
push
std
iret
rcl
or
arpl
rcrb
xor
adcl
in
dec
sub
imul
xor
stc
movsb
xchg
in
pop
stos
loop
dec
fs
nop
sahf
fdivr
popf
xchg
add
frstor
mov
sti
repz
out
sub
aaa
mov
loope
shll
push
dec
imulb
xchg
sub
sub
bound
add
movsb
es
or
cmp
mov
jo
cltd
inc
xor
lods
mov
sbb
lods
fcomp
nop
popa
add
cmp
rcrl
fwait
pushf
cmpsb
fdivl
inc
insl
fldenv
sbb
les
add
mov
sub
call
sub
jb
shlb
sub
mov
mov
clc
int3
lods
lcall
sub
fwait
arpl
out
mov
test
pusha
in
fbld
mov
add
fwait
imul
mov
sub
ret
mov
ret
sahf
xor
cmp
adc
ja
xor
push
xchg
clc
inc
sbb
int3
inc
xrelease
mov
stos
sbb
mov
xchg
test
out
mov
cltd
out
lcall
jl
dec
lret
and
or
shlb
jo
mov
nopl
pop
aam
jae
fidivl
sub
push
aas
idivl
mov
popf
aaa
cmp
and
ss
sbb
or
xchg
inc
and
cli
jbe
out
jne
mov
aad
push
pop
fildll
and
adc
movsl
incl
fwait
dec
sub
mov
clc
dec
sti
jne
cmp
movsw
mov
sbb
adc
pop
mov
xchg
mov
cmp
in
push
adc
or
sbb
ficoml
adc
lds
sbb
fsub
mov
sub
enter
filds
jg
sete
inc
test
mov
int3
dec
or
test
mov
out
fsts
repz
dec
out
out
outsb
shlb
jns
xor
lock
inc
testb
inc
hlt
xchg
xchg
arpl
outsb
test
add
add
mov
in
stos
int3
mov
adc
ret
mov
addr16
movsb
jno
sahf
test
into
xor
or
sub
inc
movsb
pushf
push
fcompl
aad
add
push
and
in
fisttpll
push
mov
loope
xchg
ljmp
scas
fmull
xchg
mov
push
add
dec
imul
in
stc
movsl
popa
push
xor
jp
inc
cld
sub
ss
sahf
push
jmp
cli
clc
dec
aam
ret
xchg
pop
in
fcomps
stc
or
test
cmc
mov
mov
mov
jge
or
mov
mov
movsl
dec
loope
movsl
loop
shl
test
lock
sbb
lods
cmpsb
add
push
inc
xchg
lretw
xor
aad
pop
in
lahf
neg
inc
mov
mov
push
in
xchg
jecxz
cld
bound
xchg
cmp
jg
add
imul
cltd
lds
or
vsqrtss
mov
sahf
sub
cmp
mov
cmp
mov
push
movsl
int
je
sahf
mov
mov
push
bound
pop
add
js
jge
adc
jge
call
sub
lea
shl
xchg
in
insb
dec
hlt
inc
out
sub
sbb
js
lock
cmp
jae
sbb
push
mov
cmp
pop
mov
or
add
mov
push
insl
fimull
test
xor
insb
clc
or
fdivrp
outsl
xor
xor
and
jb
xor
jl
sbb
xchg
sub
xchg
or
sub
cmp
cmp
scas
stc
imul
mov
xchg
mov
lahf
sbb
jns
outsl
jp
test
cmc
jecxz
add
jne
mov
push
inc
jge
and
je
test
sti
repnz
sti
gs
or
cld
loope
das
pop
cmp
sub
pop
push
cmp
mov
add
imul
pusha
inc
std
fwait
stos
call
cmp
push
leave
push
data16
lret
loop
cmp
dec
je
int3
and
jne
shll
fists
xchg
out
stc
push
fsubs
cmpsl
loopne
adc
or
mov
cmpsb
inc
xlat
out
jno
sbb
add
push
mov
mov
pop
lods
clc
enter
lret
xchg
inc
call
pop
mov
mov
push
adc
mov
jg
and
mov
es
push
adc
fldlg2
scas
loopne
push
xor
in
add
sbb
jp
xchg
dec
cli
inc
aas
mov
sbb
aaa
inc
push
leave
and
nop
xchg
test
xchg
mov
in
out
lods
outsb
cld
inc
dec
in
cmp
sbb
movsb
sbb
dec
fisttpll
and
dec
icebp
pop
sti
jo
mov
jbe
sbb
mov
xor
dec
lods
mov
jle
insb
add
pop
pushf
jg
dec
xor
pop
jb
dec
pop
xor
xchg
lock
xor
dec
iret
cmpsb
lahf
aas
scas
dec
enter
sbbb
pop
sub
sub
cltd
dec
xchg
xchg
les
inc
insb
mov
js
lcall
pop
mov
mov
sub
push
jg
sub
push
pop
adc
xor
cmp
push
and
xor
adc
fsubl
sbb
rcrb
test
cltd
add
popf
imul
mov
cs
arpl
add
jg
mov
mov
je
out
mov
test
inc
mov
iret
inc
fbstp
ss
arpl
jl
push
xor
cmp
bound
cltd
mov
in
ret
sub
sbb
pop
jl
or
pushf
push
std
ss
out
leave
jno
mov
add
out
cmp
push
iret
inc
imul
mov
imul
or
enter
push
mov
imul
and
imul
xchg
clc
shlb
pop
std
sub
call
mov
ss
dec
push
insb
enter
loope
mov
sbb
rorb
out
mov
or
fildll
shlb
imul
add
pop
outsb
test
or
mov
out
mov
xrstor
orb
mov
mov
aam
call
test
add
into
rorl
dec
out
or
in
fdivrs
jo
ljmp
fiaddl
cmp
fisubs
js
js
dec
orb
out
lret
push
cld
fyl2x
das
and
loop
imul
push
fs
cltd
cmpl
test
repz
fwait
ja
lcall
repnz
mov
cmpsl
cmc
mov
pop
mov
push
pop
das
ret
subl
sarl
daa
mov
and
and
or
adc
sub
jne
push
pop
dec
jns
les
pop
fcomp
xor
push
jle
jns
bound
push
rcll
dec
pop
int
je
test
mov
aas
cmp
leave
ja
es
mov
inc
jne
sar
xchg
aaa
clc
das
lret
mov
mov
pop
push
sarl
hlt
repnz
and
xlat
push
addr16
adc
pop
mov
xor
rorl
inc
inc
clc
sbb
int3
hlt
shl
xchg
sbb
inc
shrb
mov
dec
popa
repnz
add
shll
mov
pop
movsb
mov
scas
pusha
nop
insl
pop
mov
jecxz
int3
add
sbb
pop
mov
xchg
imul
movsb
fnstsw
cmp
sbb
out
outsb
fwait
shr
pop
je
push
stos
vphadduwq
arpl
imul
pusha
mov
push
fwait
add
pop
cmp
mov
mov
aad
jp
xchg
xchg
je
sbb
fwait
enter
fcmovne
int3
insl
testb
mov
scas
js
add
outsb
sub
and
ja
add
jecxz
xchg
sti
push
sbb
aaa
call
and
cmpsb
pusha
hlt
mov
push
lods
mov
push
sub
sbb
adc
dec
xchg
xchg
sarl
cmp
rorl
xor
xchg
call
aas
or
xchg
aam
imul
sbb
push
loopne
fsubl
add
shl
out
dec
icebp
cmc
cmp
outsl
sahf
mov
mov
clc
mov
push
in
repz
push
push
sub
add
push
cmc
hlt
cmp
sub
xchg
xchg
mov
js
mov
repz
cmp
pop
xchg
rol
inc
xchg
test
icebp
outsb
push
lods
or
in
out
pop
fnstcw
ja
or
mov
sub
sarl
pop
cmp
addl
dec
xor
mov
scas
jae
jge
ja
lret
popf
add
fldcw
in
sbb
jb
movsl
aad
xlat
inc
xchg
es
pop
and
pop
lods
bound
sbb
inc
outsb
icebp
push
imul
js
jmp
mov
stos
js
outsb
and
or
repnz
sub
icebp
insl
frstor
rol
inc
sbb
pushf
cs
mov
inc
jns
xchg
inc
ret
lret
imul
ljmp
mov
lods
cmp
and
into
ficompl
xchg
jmp
arpl
and
mov
jo
dec
lods
xor
scas
hlt
jo
nop
das
xchg
cmp
push
xchg
adc
mov
inc
or
xor
pop
jne
pop
mov
and
insl
push
sbb
mov
cmc
adc
xor
cmpsb
icebp
mov
jmp
add
jmp
mov
xchg
push
pop
fisttpl
mov
rclb
or
js
mov
cmp
nop
lods
jne
ret
mov
aaa
dec
cmp
movsl
pop
add
mov
add
add
bound
sbb
cmp
adc
adc
dec
nop
adc
mov
mov
jne
dec
subl
push
push
pop
cld
push
aaa
xchg
in
jle
sahf
xor
orl
push
mov
iret
ret
mov
lods
imul
clc
sub
add
xor
mov
mov
mov
or
cmp
mov
xor
and
and
movsb
jecxz
inc
mov
mov
inc
mov
jg
mov
and
int
ljmp
mov
inc
fadds
test
mov
jmp
and
cmp
flds
cltd
addr16
ds
mov
out
stos
std
add
mov
mov
cmp
daa
imul
repnz
cwtl
cld
aad
sbb
fsubs
sbb
shrb
push
cs
fdivrs
stos
ficoml
lock
aaa
cli
movsl
sub
xor
and
pusha
push
sbb
shl
outsb
fmull
out
call
add
int
and
adc
ja
xchg
mov
nop
clc
xor
mov
jb
add
and
les
push
nop
sub
enter
jg
test
mov
xor
icebp
mov
lahf
popa
jge
mov
push
inc
xor
addb
adc
add
jecxz
or
mov
jb
rol
leave
cmpsl
mov
xchg
lea
leave
icebp
jge
call
addr16
ret
xor
mul
mov
inc
repnz
out
or
in
mov
movsb
jl
or
mov
pop
stos
mov
cmp
je
stos
lea
cwtl
aad
or
sbb
add
pop
push
scas
sbb
push
loopne
or
cmc
cmp
sub
in
lret
ror
fcomip
ret
lods
jae
cmc
xor
cmp
inc
je
mov
daa
inc
mov
test
add
lcall
leave
adcl
outsl
inc
mov
ficompl
sbb
aaa
je
and
fsubs
pop
pusha
xor
in
nop
fcompl
lahf
out
and
pop
gs
xchg
ret
mov
in
clc
shrl
push
mov
ret
out
cltd
in
cmp
movsl
jge
lret
mov
addb
mov
pop
hlt
rcl
cmpsl
pop
xor
push
dec
insb
jo
jle
loop
mov
or
push
mov
sbb
es
and
divb
mov
jae
inc
jl
pop
sub
int3
movsb
int
mov
cmp
xchg
add
push
inc
sbb
imulb
int
mov
jae
push
icebp
inc
fnsave
or
push
sbb
fsubrp
sbb
mov
test
scas
sbbl
mov
xchg
lcall
jno
push
push
rorb
jb
sti
pop
loope
es
adc
xor
dec
inc
les
push
cli
add
dec
inc
or
and
lret
daa
inc
fsubl
dec
push
or
popf
outsl
inc
cmpsl
push
andb
popf
add
or
ret
fs
mov
mov
pop
add
cmp
insb
cmpsl
lahf
stos
pop
add
insb
xchg
push
mov
xor
jge
mov
sahf
pop
push
fidivs
mov
popf
pop
lds
push
mov
aam
or
xchg
scas
andb
and
ret
scas
loopne
lock
adc
mov
inc
sbb
std
mov
insl
std
mov
pushf
pop
jns
xor
inc
mov
xor
cmpsl
and
std
rcll
mov
nop
hlt
jg
popf
push
enter
je
shll
std
pop
lea
imul
stos
popf
aaa
lds
lret
dec
out
sbb
in
ret
cmp
inc
popaw
mov
das
mov
movsb
mov
cmp
test
xor
test
pop
sahf
fwait
or
daa
mov
lahf
mov
in
sub
arpl
in
hlt
jbe
mov
fiadds
xor
test
and
inc
in
mov
mov
push
add
and
lcall
sysenter
imul
lret
popf
pop
ficompl
and
pop
xchg
inc
sub
inc
dec
loop
les
jp
es
ret
andb
dec
int
lds
popf
mov
pop
cs
out
lret
add
lea
dec
out
jns
in
cmp
mov
add
inc
sub
sbb
fwait
push
iret
xchg
xlat
mov
or
daa
mov
or
sbb
lahf
sti
sbb
mov
out
pusha
stc
push
lret
add
cltd
mov
xchg
xor
pop
nop
sub
insb
iret
mov
push
iret
in
stos
cmpsl
and
cmp
ds
lret
push
add
xchg
mov
jnp
leave
repnz
outsl
into
adcl
fiadds
push
fisttps
push
mov
mov
scas
js
jecxz
push
addr16
cmp
adc
inc
sbb
xchg
lret
mov
push
mov
sti
xor
pop
pop
ds
xchg
sub
pminub
cmpsb
dec
or
rol
mov
ret
cmp
imul
mov
cwtl
mov
not
adc
mov
movsb
lret
idivl
xchg
mov
test
mov
push
les
and
nop
xor
xlat
mov
rcrl
sti
cld
stos
out
mov
sbb
nop
or
lock
je
adc
push
cld
repnz
jnp
lock
int
imul
lahf
sub
mov
xor
mov
mov
sbb
dec
dec
dec
cmp
sbb
mov
testl
sbb
lock
jmp
lea
fisubrs
insl
cmpsb
daa
ljmp
inc
push
mov
add
int
sub
pop
aam
popa
push
andl
sbb
stos
add
pop
stos
cmc
lahf
push
sbb
xchg
in
lret
imul
add
mov
dec
inc
and
xchg
add
cmp
sub
hlt
cmp
sub
repz
and
stos
push
test
cmp
push
sub
sarl
mov
in
jne
fisttpl
jno
or
leave
push
cltd
scas
stos
push
in
shrl
inc
xor
add
lods
mov
or
ja
fs
adc
jno
in
xor
pop
ss
sahf
adc
stos
icebp
adc
mov
cwtl
imul
out
push
inc
sbb
and
rcrl
or
jl
ficoml
jb
cld
mov
bound
xchg
add
mov
inc
push
add
rcll
ja
dec
lods
je
enter
inc
jae
xchg
mov
mov
fs
addb
dec
ljmp
or
cmp
lret
cmp
pop
cwtl
lock
mov
scas
push
enter
je
sub
lds
add
popf
pop
mov
std
icebp
pop
ss
mov
or
dec
jg
or
ja
sbb
add
jl
push
pop
pushf
mov
xor
mov
ret
inc
das
out
adc
scas
inc
xlat
movsb
fnstsw
not
dec
mov
fs
push
insb
gs
ds
in
cld
sub
stos
inc
mov
mov
js
fidivrs
sbb
xchg
add
push
mov
fidivl
jmp
roll
sbbb
push
test
es
sub
fidivl
aaa
ja
add
cmc
and
cmp
jl
js
lret
lods
cwtl
jp
in
in
test
inc
divb
js
sbb
inc
sahf
test
jne
sbb
in
int3
pushf
jge
sub
adc
push
push
int
pop
push
xchg
inc
mov
jo
jo
pop
or
lds
mov
pop
hlt
sbb
aaa
inc
add
data16
call
push
push
out
or
push
data16
stos
cmp
mov
enter
xor
stos
scas
push
das
push
fbld
pop
mov
push
test
adc
popa
pushf
or
cli
sahf
call
cmpsb
dec
ljmp
je
add
mov
mov
push
fistpl
mov
das
mov
imul
imul
int3
divl
adc
jne
add
pop
mov
jno
xchg
mov
insb
jle
pop
imul
push
sbb
mov
adc
dec
push
hlt
es
cld
dec
cmc
pop
xchg
mov
push
mov
pop
jp
pop
cmp
cmp
jecxz
add
cmp
jne
js
push
inc
pop
dec
aaa
and
push
cmp
dec
test
xchg
cmp
sbb
fmull
cmc
push
push
lahf
sbb
jo
and
stc
and
xlat
xchg
negl
xor
insb
mov
ret
test
xor
ficoms
adc
into
mov
adc
insl
rol
dec
mov
aam
push
out
repz
xor
lds
mov
sbb
ror
movsl
fcomps
popf
mov
in
sbb
cltd
add
test
push
fwait
dec
inc
shrb
and
jne
pop
push
mov
out
ret
lods
mov
imul
mov
pop
fsubrl
dec
sub
inc
mov
or
test
fstps
dec
mov
repz
hlt
cltd
mul
mov
aad
outsl
addr16
shll
and
or
add
lods
sub
mov
daa
pop
jg
sbb
sbb
mov
mov
lock
and
sub
ret
mov
mov
push
addb
and
jno
cs
push
repnz
mov
call
movsb
adc
mov
sbb
mov
out
repnz
sbb
inc
or
call
xchg
fcomps
pop
push
cwtl
jp
pop
sbb
jne
adc
mov
vandnps
inc
les
adc
sbb
xchg
mov
mov
inc
aam
cmp
push
mov
jle
test
cs
xlat
push
pop
call
jle
mov
enter
outsl
cli
ss
mov
test
stos
shll
pop
mov
pop
leave
mov
fstps
ret
in
sub
xchg
imul
cmpsb
pop
add
xor
imull
mov
cmp
outsl
jae
les
movsl
jl
mov
stos
ficomps
inc
in
pop
xchg
int3
shrl
or
popf
and
insb
xor
push
data16
mov
sbb
inc
adc
xchg
sub
mov
lret
inc
ficoms
jbe
cmc
push
or
cmp
loop
imul
cmp
stos
out
stos
xor
shl
hlt
fbld
xchg
lret
sarl
push
jge
or
imul
push
and
push
jns
xchg
out
mov
jo
push
push
mov
lods
mov
push
sbb
insl
push
inc
or
or
repz
jge
cwtl
xor
sub
mov
pushf
dec
jp
fdiv
push
or
test
lret
or
cmpsl
add
aas
cld
imul
adc
icebp
test
mov
adc
pop
sbb
mov
jl
popf
and
mov
mov
scas
push
sub
dec
jbe
mov
sbb
push
pop
cmpsb
lds
xor
mov
movsl
mov
psubsw
stos
inc
cmp
push
incb
inc
xor
std
xor
loope
dec
add
xor
fidivrs
imul
popf
jne
lods
scas
pop
mov
lods
lret
int3
dec
movsb
mov
std
mov
jecxz
sub
mov
shrl
and
test
push
call
das
jb
jecxz
aam
push
sbb
fiadds
test
dec
cmp
fisubs
add
push
or
xchg
icebp
mov
into
mov
test
push
bound
pop
aad
push
scas
nop
adc
call
mov
mov
lods
les
mov
imul
dec
movsb
mov
and
sub
xchg
ljmp
inc
adc
lea
xorb
adcb
push
cmp
mov
sbb
sbb
pushf
cmp
jecxz
icebp
ja
push
mov
and
sub
pop
inc
cmpb
mov
inc
inc
cwtl
nop
inc
jl
idivb
cmp
mov
mov
sub
enter
insb
pop
xchg
aam
ret
jnp
sti
ljmp
mov
inc
aas
inc
ret
jge
ret
insl
sub
sub
aaa
xchg
pushf
test
jbe
jmp
xchg
push
loope
push
out
mov
push
inc
dec
fsubrp
lods
imul
lret
mov
inc
inc
cmp
cmp
mov
pushf
out
das
jl
stos
mov
repnz
cmpsl
push
dec
stos
push
mov
out
dec
aad
push
sarl
subb
inc
mov
aas
loopne
add
mov
sbb
jle
and
inc
test
xchg
or
ljmp
pop
int3
inc
dec
mov
lret
int
dec
mov
cmp
sub
add
xchg
add
xchg
pop
cmp
loope
and
idivl
popf
mov
xchg
mov
mov
cmc
imul
push
xor
mov
mov
lahf
pop
fistl
mov
out
les
sbbl
cmc
testb
fmul
aas
aad
pop
xor
pop
adc
sbb
jecxz
pop
insb
mov
stc
and
arpl
mov
test
cwtl
mov
or
movsl
jne
testl
mov
dec
jo
push
pop
push
sahf
int3
andb
ficoms
popf
mov
mov
add
dec
jns
push
fdivp
dec
cwtl
push
imul
bound
xlat
movups
mov
sti
jmp
rolb
pop
mov
jae
mov
stos
xor
push
repnz
and
cltd
ljmp
rcll
cmc
sub
rolb
std
stos
int3
sub
xchg
stc
push
push
xchg
sub
mov
dec
push
or
loope
sti
pop
jo
fwait
mov
cmp
jge
add
in
cmp
repz
mov
cld
cmpsb
testl
mov
out
fstl
mov
data16
mov
test
sub
add
xchg
mov
mov
repz
sub
in
insl
dec
call
mull
dec
ja
outsl
xor
pop
mov
icebp
es
int
add
xchg
shl
shlb
je
and
clc
jg
lret
mull
xor
sbb
fildll
fcoms
leave
xrelease
push
sub
test
sahf
push
wbinvd
mov
adc
iret
lret
jge
test
inc
stc
in
cli
mov
sahf
int
push
mov
add
or
nop
in
leave
int3
and
lock
les
mov
je
sub
dec
push
movsl
fsubl
fisubrs
jge
test
inc
inc
pop
mov
roll
push
xchg
cltd
add
scas
sub
es
pop
cs
mov
jmp
xor
xor
idivl
sbbl
pop
stc
stos
xchg
test
lcall
loopne
clc
pop
stc
adc
pushf
inc
sub
sbb
pop
movsb
dec
xchg
scas
add
fstps
lcall
mov
pop
adc
fimuls
rcrb
adc
jg
out
dec
nop
shr
mov
shlb
outsb
in
shrl
aam
scas
mov
loop
out
pop
inc
les
xchg
insb
mov
ds
and
test
ss
loope
out
rorb
loopne
push
dec
std
cwtl
mov
and
mov
adc
lock
out
xchg
xchg
xor
aas
dec
pop
add
and
add
xor
movsb
shl
out
mov
lock
mov
lcall
fcmovu
jmp
rorb
push
cltd
jne
pop
into
mov
leave
jmp
pop
inc
orl
ret
sub
jbe
ja
rcll
les
cltd
cwtl
fimuls
ret
and
call
jno
scas
or
rorl
scas
sub
es
andb
bnd
stos
lret
sbb
pop
movsl
sub
sbb
sbb
push
jns
xchg
into
jae
test
mov
jbe
scas
xor
cmp
int
imul
out
sub
push
js
xchg
cmpsb
lock
mov
mov
call
sbb
pop
mov
mov
mov
sub
xchg
xchg
xchg
icebp
cltd
popa
mov
cmpsb
adc
or
repnz
icebp
mov
aam
add
jne
repz
shrl
mov
mov
pop
clc
sbb
cmpsl
sub
mov
gs
das
cmp
dec
movsl
std
jbe
test
shll
imul
das
icebp
sub
out
js
dec
push
out
in
mov
inc
and
aas
jp
and
addr16
adc
xchg
popf
outsl
lcall
xchg
inc
data16
mov
mov
in
push
sub
lcall
xlat
cltd
xchg
js
mov
pop
dec
pop
mov
mov
fisubrl
xor
jle
pushl
mov
sarb
lea
mov
mov
daa
les
and
push
mov
mull
adc
pop
sub
mov
fstps
sub
xchg
jb
mov
cli
jns
xlat
jle
jo
mov
dec
or
xor
call
add
mov
int
or
xchg
scas
shll
leave
sbb
nop
adc
test
into
mov
in
mov
and
push
fmuls
test
xor
sbb
es
es
clc
mov
mov
xor
add
adc
into
xchg
aad
inc
fwait
inc
mov
test
repnz
leave
leave
leave
and
lret
xor
or
push
cwtl
gs
loopne
test
ret
dec
adc
adc
jp
xchg
sbb
enter
pop
in
push
outsb
push
lcall
jae
sbbb
ficomps
loope
xchg
pop
scas
fmuls
mov
data16
xor
popa
mov
popa
push
arpl
push
cmc
xchg
rcrb
add
mov
in
sbb
mov
pop
jle
fadd
or
jbe
aad
fstps
mov
xor
sarb
rcl
push
cmpsb
xor
iret
cmp
in
test
cmpsl
jle
mov
movsb
sub
popf
add
mov
out
dec
jp
aaa
cli
ret
popa
dec
mov
jb
mov
jmp
loope
sub
daa
bnd
xchg
inc
in
mov
vpunpcklwd
mov
mov
pushf
leave
inc
push
mov
mov
cli
jmp
jmp
pop
mov
dec
inc
shrb
mov
mov
inc
lahf
sahf
imul
fildl
sbb
adc
std
sbb
les
ret
dec
in
xchg
sbb
and
aas
xchg
sbb
out
sub
xor
mov
xor
fmuls
pop
shl
daa
dec
pop
cmp
sbb
sub
inc
cld
push
imul
sub
xchg
inc
clc
clc
and
lea
or
pop
fs
rclb
sbb
loope
mov
ss
out
insb
mov
jno
ss
adc
repnz
dec
push
popa
pop
js
scas
or
dec
pop
imul
outsl
xchg
mov
or
neg
pop
push
or
add
int
dec
cli
sub
inc
insl
lock
pop
push
push
adc
push
cmpsb
ds
xor
jp
adc
scas
mov
ja
je
xchg
xchg
dec
push
repz
loopne
ds
hlt
insl
jb
xor
ljmp
mov
das
jle
mov
dec
scas
xchg
add
in
and
push
jb
inc
gs
sti
pop
or
mov
xchg
jecxz
mov
out
cmp
scas
aam
imul
jp
adc
ds
xor
dec
inc
mov
sahf
aam
pop
cwtl
sub
jp
sbb
es
in
int
xorb
jo
call
mov
pop
inc
and
pop
pusha
inc
pop
fnstcw
push
repnz
mov
adc
sarb
roll
mov
aaa
cmp
sub
adcl
and
inc
pop
in
cmp
dec
scas
call
les
mov
js
addr16
test
jle
movhps
xchg
test
out
jp
cmc
pop
adc
mov
xchg
mov
xchg
and
icebp
sub
fnstsw
sub
xchg
jnp
xor
sub
push
sub
jae
jbe
lahf
mov
add
movsb
mov
dec
push
movsl
and
cmp
imulb
cmp
cld
xor
emms
or
mov
call
dec
ret
mov
pop
mov
xchg
dec
xchg
shll
daa
shrl
jmp
sbb
pop
into
imulb
loope
dec
shlb
jle
cmp
aad
or
mov
pop
fcomps
shll
jp
push
imul
mov
movaps
into
ficomps
xchg
call
xor
push
lcall
stos
sti
out
xlat
cmp
subl
bound
jne
sub
mov
shufps
in
orb
test
paddsw
out
or
mov
mov
mov
enter
dec
mov
sub
sub
pusha
gs
ja
into
and
sbb
repz
mov
stos
mov
and
jecxz
xor
mov
loop
shlb
jmp
scas
mov
test
stc
mov
jbe
imul
cmp
out
movsb
sbb
cmc
es
das
push
jns
ja
popf
xchg
sbb
or
adc
movsb
inc
sbb
lock
xor
mov
insl
pop
jae
out
xchg
scas
fstpt
je
ret
test
fwait
outsl
mov
cmc
mov
jmp
mov
rcll
outsb
push
inc
cmp
subb
push
jns
jae
inc
test
xchg
stc
or
cmc
xor
divb
dec
fs
dec
pop
fnstsw
push
clc
aad
cmp
push
icebp
ret
pop
aaa
mov
cs
jb
ret
aaa
mov
jnp
das
lret
inc
jno
xor
cmc
inc
int3
lret
xchg
add
out
call
pop
dec
push
fwait
jp
andl
dec
jge
and
sbb
das
into
mov
repz
cld
sahf
adc
jae
jge
push
dec
jae
icebp
inc
add
add
out
and
push
out
xchg
cmp
cmp
sub
aas
cmp
and
xchg
daa
cmp
or
jb
ss
out
or
sbb
dec
fstl
sbb
sbb
xor
add
push
cmpsl
aad
stc
push
and
les
or
popa
inc
stos
xchg
loop
xchg
xlat
and
xchg
cmp
jmp
xchg
jmp
rorb
andb
test
test
xchg
push
sub
mov
xchg
shl
cmp
inc
hlt
or
pop
sub
mov
outsl
mov
test
dec
mov
sar
dec
fldcw
inc
adcl
movsl
mov
stos
leave
mov
dec
jp
jae
out
mov
mov
and
mov
in
out
xchg
or
lods
push
or
mov
jno
int3
push
jge
pop
sub
fnstcw
pop
fidivs
fcoms
sbb
or
mov
adc
fwait
div
sbb
hlt
outsb
ja
push
jg
lds
pop
jge
leave
dec
test
pop
fcoms
sahf
nop
ficoms
pop
sbb
push
jne
shlb
arpl
movsb
jl
push
push
iret
or
int3
push
mov
sbb
movsb
jbe
sub
lret
clc
push
cmp
ja
hlt
lahf
pop
enter
inc
out
xor
lock
ljmpw
inc
mov
cmp
stc
sbb
mov
sub
stc
fstpt
imul
sub
pop
test
cmp
mov
in
inc
inc
mov
adc
cmp
xchg
inc
adc
and
daa
sbb
add
pop
pusha
rorb
je
jne
pop
or
sub
mov
mov
stos
dec
adcb
or
jo
mov
inc
push
fists
push
push
outsb
jae
mov
mov
push
push
sub
jo
pushf
mov
lea
add
call
xor
dec
mov
mov
ss
movsl
insb
and
cltd
imul
loopne
fbld
std
mov
fisttpll
icebp
pop
inc
rcr
inc
add
shlb
fdivl
scas
test
pusha
loopne
mov
pop
aam
jns
addr16
jb
scas
mov
xor
out
addl
test
xor
outsb
pusha
icebp
or
je
xchg
dec
sbb
nop
jbe
adc
popa
loop
cwtl
fs
insb
sub
inc
js
xor
inc
aaa
sbb
fmul
xchg
arpl
mov
aad
mov
int3
push
mov
cmp
sbb
fcomp
cmp
popf
mov
mov
dec
jp
stc
xor
jns
sub
ret
cli
push
lahf
cmp
xchg
add
push
mov
sbb
jle
jae
or
cs
jns
and
insb
sub
pop
nop
xchg
aam
bound
dec
xor
and
adc
loopne
push
pop
fistl
pop
adc
dec
aam
pop
and
mov
mov
jne
ret
rcr
pop
push
push
cmpsb
lret
mov
inc
or
add
pop
jecxz
loopne
dec
jp
rclb
std
dec
neg
push
js
or
ret
hlt
mov
dec
fsub
sub
jecxz
mov
push
enter
arpl
xor
daa
inc
pop
mov
insl
or
mov
mov
inc
dec
jmp
adc
push
jne
cmp
add
pop
and
icebp
je
lds
mov
xchg
int
xchg
jnp
xchg
dec
mov
repnz
in
iret
add
mov
shlb
xchg
mov
stos
sti
or
ljmp
insb
xchg
or
cwtl
jo
stc
xchg
add
rclb
roll
aas
add
aad
inc
leave
out
or
jecxz
addl
jg
cmpsl
jnp
pusha
push
inc
pop
je
inc
in
scas
lcall
xor
xchg
dec
jb
cmpsl
and
pop
add
lea
nop
push
mov
jmp
add
shrl
mov
pop
or
jnp
inc
ss
mov
fisubs
xchg
adc
xchg
pop
and
and
mov
mov
out
lcall
and
xor
scas
ljmp
dec
sub
push
enter
dec
insb
insb
inc
sbb
mov
xchg
xlat
scas
or
mov
cmp
lret
xlat
mov
js
sahf
jp
bound
adc
xchg
pcmpgtw
arpl
mov
aad
mov
in
mov
jno
rol
ret
dec
mov
arpl
es
push
andl
jp
outsl
mov
bound
cmc
inc
int3
xorl
iret
sub
test
push
leave
pop
mov
jmp
adc
jae
dec
mov
adc
sbb
inc
fwait
sbb
xor
jo
sarl
push
xlat
in
std
insb
pushf
imul
test
bound
inc
mov
sub
fstpl
xor
dec
jne
daa
push
xchg
gs
lods
test
ja
aad
dec
mov
dec
push
push
shrl
lea
jecxz
push
push
scas
sub
cmpsl
and
fwait
cmpb
pop
jb
inc
in
lods
jns
sbb
mov
je
jae
sarb
jmp
sub
jg
xor
xlat
dec
je
sbb
and
enter
cmc
adc
xchg
dec
lods
jnp
fsubl
pop
incb
je
and
push
lret
insb
and
lcall
jb
or
lcall
inc
in
or
push
js
inc
pop
mov
xor
pushf
mov
push
popa
xlat
fs
cmp
jbe
fidivl
xor
mov
add
push
data16
push
fnstenv
fcoml
fwait
aas
test
out
dec
lret
jo
ljmp
dec
or
push
jnp
shll
into
icebp
sub
inc
repz
lods
mov
jbe
aam
dec
loopne
xor
ud2
les
mov
xchg
andl
sahf
add
mov
movsl
loope
adc
std
or
xor
lods
cwtl
cli
add
cmp
push
rclb
data16
push
loope
icebp
movsl
imul
sahf
loope
xchg
mov
adc
push
push
and
fildl
test
or
pop
dec
sub
les
mov
fsubrl
push
xor
bound
inc
cltd
stos
push
add
sbb
inc
cs
mov
and
push
mov
addl
mov
or
push
pop
pop
orb
int3
std
mov
iret
pushf
out
cmc
add
fbstp
cmp
cmpsb
push
dec
mov
xchg
mov
cmpsl
inc
mov
mov
mov
dec
fistpll
icebp
lret
and
sbb
mov
ret
mov
mov
sti
int
js
test
pop
mov
push
mov
and
push
pop
jo
push
mov
lret
lock
pop
mov
subl
and
mov
gs
dec
mov
lret
xorl
add
daa
out
cld
mov
fwait
xor
jg
les
push
push
push
shl
lcall
xchg
push
outsl
clc
shl
mov
lock
ss
int
rcr
js
lret
jge
xor
or
xor
enter
xbegin
pop
std
popf
jns
inc
std
sarb
shll
push
scas
mov
leave
xchg
xlat
or
cli
and
call
inc
imul
ret
imull
jmp
push
jecxz
dec
das
movhps
inc
lods
sarb
out
lret
in
int
jno
rcrl
jne
mov
lret
lea
xor
inc
mov
or
es
lods
outsl
sub
imul
ret
sub
or
insb
ja
xor
aaa
fisttpll
inc
sbb
sahf
xorb
add
test
or
sub
or
sub
jmp
icebp
jb
inc
xlat
test
movsb
loop
adc
mov
add
jnp
pop
movsl
dec
ss
xchg
rcll
int3
xchg
push
mov
adc
shlb
fwait
aaa
and
fxch
sbb
xor
mov
ret
movsb
mull
andb
daa
into
dec
mov
dec
into
ficompl
push
dec
enter
mov
pop
fsts
iret
xchg
jmp
mov
sahf
test
popf
subl
inc
dec
sti
push
xchg
clc
sbb
fwait
cmpsl
add
leave
sub
xor
outsb
inc
adc
shrl
jle
mov
mov
mov
sar
popf
cltd
iret
into
push
push
stc
dec
clc
push
incb
mov
mov
xor
mov
xchg
fwait
cltd
ret
xor
push
cmp
cmc
inc
fcmovb
movsb
loopne
bound
popa
cmpb
jns
rorb
dec
dec
xchg
pop
and
repnz
cmpsl
gs
jb
dec
xchg
pop
dec
fsubrl
cmp
or
mov
sbb
inc
ret
mov
fidivl
xor
outsl
movsb
ds
cmp
roll
popa
addb
repz
aaa
out
aaa
rcrl
or
fisubrl
aam
push
jge
jmp
lock
int
jecxz
xchg
psllq
ljmp
mov
out
imul
xchg
dec
adc
rcrb
fists
xchg
jmp
xor
or
shlb
pop
stc
sarl
jb
fdivrl
incb
push
sbb
push
mov
stos
bnd
cltd
lret
push
inc
add
dec
xchg
ror
mov
das
xchg
mov
sbb
repz
mov
or
mov
pop
popa
lds
mov
sbb
jbe
cld
adc
pop
pop
out
dec
jecxz
nop
add
out
jb
ret
xlat
sti
xchg
jbe
push
popa
loopne
call
enter
int3
push
dec
push
push
adc
pop
das
inc
push
cltd
mov
push
rorl
xchg
fstl
inc
nop
adcb
inc
and
or
in
pushf
xchg
dec
in
cld
adc
out
icebp
mov
stos
mov
xor
and
or
push
in
jb
adc
daa
and
insl
insb
sub
mov
push
dec
popa
xchg
lods
popa
aas
repnz
mov
dec
fcmovnb
cld
mov
adc
clc
ljmp
and
sahf
std
lcall
add
xchg
gs
cmp
nop
cli
sbb
int
xor
jns
call
inc
orb
xchg
and
pop
mov
popa
mov
pusha
push
mov
cwtl
sub
clc
mov
adc
das
and
fldt
push
fistps
inc
cmp
sub
lds
lods
xor
xor
inc
dec
jmp
arpl
movb
dec
push
mov
inc
sub
sti
dec
notb
mov
lea
xor
pop
std
enter
popa
inc
add
aam
or
sub
and
fidivs
jle
jae
lret
adcb
push
call
jb
lret
mov
data16
mov
bound
adcl
pop
sti
and
sahf
xorl
pop
xchg
mov
pop
imul
repnz
cmp
mov
pinsrw
leave
mov
mov
pop
mov
mov
lret
iret
pusha
cwtl
rcrb
aaa
aam
lock
mov
mov
iret
or
mov
mov
popa
dec
lret
loopne
cmp
add
mov
in
xchg
testb
push
cmp
xor
mov
xchg
aam
pop
jp
loop
or
stos
and
xor
sub
push
hlt
or
gs
mov
sub
in
add
repnz
jo
pop
icebp
scas
sub
ret
sub
push
sub
ret
add
rcrl
loope
pop
jmp
outsb
mov
jecxz
push
data16
xchg
adc
scas
mov
stc
and
jb
dec
mov
ja
or
mov
push
or
add
xchg
cs
enter
add
jmp
sar
mov
mov
sbb
sbb
and
data16
mov
ret
mov
xchg
mov
cltd
in
addr16
aas
nop
jno
inc
sub
fnstcw
cld
jmp
or
icebp
and
scas
scas
insb
xor
rcrb
and
cwtl
cmp
adc
imul
int3
popf
lods
inc
mov
lods
mov
cli
test
icebp
jmp
push
mov
leave
xchg
outsl
ret
stc
jns
push
pop
dec
test
mov
push
es
dec
dec
in
push
lcall
insb
fmull
add
sbb
dec
push
cmpsl
in
bound
idivl
jle
mov
shlb
in
pop
clc
push
nop
add
xchg
xchg
mov
push
ljmp
scas
iret
or
xchg
addr16
movl
xchg
movsl
out
loopne
pop
push
push
and
popa
push
lret
aam
xchg
mov
add
mov
xchg
sahf
in
lods
mov
in
cwtl
jmp
xchg
or
pop
in
jb
xor
xor
in
fs
enter
mov
andb
lea
scas
xlat
jp
aaa
inc
jmp
je
sbb
pop
mov
lock
inc
sbb
lret
push
mov
inc
repnz
clc
xorl
xchg
dec
jns
push
mov
cwtl
sub
scas
sbb
in
mov
jmp
aaa
aam
xchg
pop
loope
pop
test
movsb
dec
popf
inc
fwait
mov
jp
in
pop
sarb
mov
inc
ljmp
mov
mov
jl
push
push
jno
cli
andb
test
xchg
imul
lea
les
xor
ret
fwait
ret
sbb
fdivs
dec
es
mov
mov
ret
pushf
jmp
dec
adc
mov
je
loop
shlb
cmp
int3
sbb
mov
adc
add
in
inc
lea
imul
xor
push
idivb
add
cmp
aas
jo
dec
fsubrl
fstpl
stos
inc
fbstp
and
add
or
in
aas
xchg
outsb
fbld
popa
sti
pop
stos
push
test
mov
and
or
adc
xchg
cmp
or
fldl
in
rcll
rcrb
cmpb
cmpsl
push
stc
call
push
outsl
sbb
les
aas
out
and
mov
jle
lcall
xchg
dec
jmp
rol
jp
popa
mov
cwtl
add
mov
mov
arpl
sub
imul
xchg
pusha
adc
jne
pusha
flds
xchg
and
ret
orl
repnz
aas
aas
push
dec
call
pop
sbb
xchg
mov
shlb
xor
shlb
xchg
icebp
dec
ror
pop
mov
lea
scas
sbb
sub
rclb
mov
jno
in
movsb
out
mov
adc
jb
test
sti
pop
fsubl
cmp
dec
push
pusha
xor
pop
xchg
jae
jae
scas
fwait
fs
jno
or
jb
outsl
cmp
pop
stos
or
shrb
lret
sbb
xlat
in
xchg
and
cmp
loop
and
call
jp
les
sbb
in
add
in
lods
sub
pop
out
into
sarl
test
add
jb
push
jnp
cmpsl
add
sub
and
popa
ja
xchg
mov
inc
adc
mov
mov
je
das
roll
sbb
std
cs
mov
cmp
arpl
mov
movsl
imul
mov
jge
in
xor
fistl
jp
push
mov
enter
outsb
push
mov
xor
mov
idivb
push
lods
or
mov
and
jnp
pop
sbb
xor
ljmp
and
loope
add
mov
xor
scas
std
xchg
addb
mov
sub
pusha
je
push
stos
dec
jg
lret
mov
inc
pusha
inc
loop
sbb
mov
push
dec
aaa
pop
mov
add
mov
xchg
pop
push
sti
adc
add
repz
outsl
sub
xor
rol
or
mov
and
in
stos
xor
xchg
shrl
adc
mov
cmp
divb
or
xor
gs
repnz
xor
scas
adc
lahf
in
mov
call
xor
push
roll
add
mov
cltd
cmp
xor
cs
dec
mov
popf
pop
js
roll
xor
mov
mov
aas
cmp
mov
mov
test
cs
dec
cmp
xor
and
ror
inc
leave
nop
and
out
cli
ja
lods
jb
iret
mov
or
aad
add
in
insb
pop
inc
adc
mul
cwtl
sub
push
mov
mov
icebp
insl
in
mov
out
rcl
xor
aaa
lods
das
adcl
and
mov
lea
popf
repz
popa
fdivs
adc
sbb
jne
daa
adc
xchg
int3
pop
shll
inc
hlt
add
xchg
and
xor
pop
gs
push
daa
adc
testb
leave
push
mov
mov
and
xor
cmp
ja
mov
ja
fmuls
arpl
pusha
xchg
jns
inc
add
sbb
rorl
xor
add
stos
in
scas
xchg
cmpsb
push
int
ds
push
outsl
jecxz
mov
ds
out
in
rorb
jmp
cmp
add
loop
cmp
mov
fcompl
sub
loopne
icebp
fbld
push
add
in
in
hlt
cmc
dec
cwtl
mov
into
or
cwtl
dec
popf
xchg
xor
cmp
test
lods
fdivl
pop
push
pop
idivb
daa
jo
es
call
adc
test
rorb
fnstsw
test
stc
dec
stc
dec
fstl
push
in
lods
ret
jne
mov
add
inc
call
xchg
repz
jb
dec
pop
fldl2t
lahf
push
mov
repz
cmp
mov
shl
sub
mov
pusha
insb
xchg
adc
outsb
add
and
xchg
out
dec
mov
mov
test
pop
cltd
or
fisubl
fidivrs
scas
cmp
stos
icebp
imul
into
mul
fdivr
push
dec
and
mov
cli
pop
in
add
jns
dec
into
in
or
call
fisubs
dec
pop
fucomip
push
fmull
cmp
push
in
push
add
mov
mov
cmc
sti
lret
sub
mov
jl
inc
lahf
add
out
push
push
stc
add
adc
inc
xchg
xlat
dec
mov
or
in
lods
pusha
leave
mov
jge
dec
xchg
pushf
shl
add
rcr
add
sub
xchg
hlt
into
xor
sti
decl
fsubr
int3
push
data16
in
dec
lahf
repnz
mov
mov
inc
add
stos
and
mov
pop
out
sub
inc
sti
in
out
xor
sti
sbb
sub
pusha
sbb
jbe
cmp
scas
and
decl
test
cmpsb
aas
xor
mov
sbb
xor
cwtl
hlt
mov
sbb
push
popf
lock
out
jae
mov
in
jl
out
jp
aad
in
add
lock
fisubrl
pop
std
pop
mov
mov
mov
aad
lds
insb
jnp
mov
cmp
sub
jecxz
and
adc
sub
stc
and
push
in
adc
pop
mov
fcomp
ja
adc
mov
test
pop
sub
or
push
out
addb
push
add
cwtl
mov
shll
mov
xlat
pusha
xchg
xchg
call
lods
and
mov
or
ja
lret
outsb
or
enter
fdiv
mov
mov
mov
cmp
xor
pop
mov
lret
sub
pop
push
cmp
test
cs
mov
out
aam
aam
xor
dec
cmp
jno
inc
cs
shr
cmp
push
mov
xchg
daa
cltd
shrb
fidivrl
insb
mov
mov
cmpsl
xor
mov
iret
sbb
adc
ret
pushl
lock
xor
sbb
or
push
out
mov
push
pop
sbb
sub
add
cld
aaa
xchg
fwait
push
mov
loop
mov
stc
mov
and
xor
mov
cli
jp
inc
lret
push
push
addr16
cwtl
xchg
mov
pop
xchg
cs
xor
mov
mov
ds
ljmp
and
mov
lret
std
iret
iret
ja
imul
shlb
subl
addr16
jo
dec
jbe
adc
dec
push
dec
mov
add
std
jle
xchg
sub
xchg
popa
outsb
nop
dec
roll
scas
bound
add
sub
sbb
mov
mov
fiaddl
je
aad
xchg
add
jae
jno
test
xchg
mov
scas
cmc
mov
pop
sbb
popa
sahf
insl
je
mov
bound
mov
jns
iret
fs
pop
imul
xchg
mov
jnp
pop
jnp
xchg
pop
jns
movsl
xor
mov
inc
mov
test
icebp
sbb
cs
mov
pop
negb
cmp
shl
fisubrl
mov
movsb
sbb
add
pop
push
jecxz
shlb
das
push
mov
sub
mov
loope
mov
push
in
pushf
test
adc
inc
fsubrs
movsl
pop
add
insb
jb
xchg
or
ja
xchg
jbe
lods
dec
loopne
aam
sti
ds
sbb
xor
push
mov
xlat
add
lret
pushl
sub
push
pop
jne
add
sahf
std
mov
je
in
test
loop
popa
rolb
aad
inc
les
loope
ret
jecxz
fistpl
cmp
dec
lahf
inc
sub
jb
and
mov
lods
xor
inc
fwait
xchg
cmpsb
xchg
mov
jl
popf
push
addr16
adc
mov
fcoml
aam
ftst
push
jb
and
sub
sub
es
lock
push
jb
je
push
call
cwtl
add
or
fcomip
pop
dec
and
aam
cwtl
xor
dec
jne
xchg
out
into
out
or
or
popa
mov
xchg
cmp
lret
sub
fisubrl
mov
in
iret
das
jmp
sarl
aam
insb
rolb
push
enter
add
dec
in
jns
jle
inc
or
add
imul
adc
xor
stos
inc
test
addr16
pop
loop
push
lea
jecxz
dec
pop
fstl
sub
or
mov
fs
pushf
sbbb
or
mov
or
xchg
push
push
nop
lock
ret
lahf
cmp
sbb
stc
bound
xor
xor
jbe
std
push
and
dec
aad
fistps
hlt
pop
pop
icebp
scas
jp
aam
add
jmp
or
cmp
loopne
sbb
pop
inc
rcrl
lock
mov
out
daa
push
out
adc
lcall
pop
decl
mov
ds
fwait
lods
cmp
sub
or
adc
rcll
lea
lods
cwtl
sub
pusha
sbb
sub
lds
stos
dec
cmpsb
jnp
lret
xor
adc
cli
js
pop
pop
data16
pop
imul
add
ja
mov
fisubl
sub
data16
cmp
jge
repz
mov
pop
sub
jp
les
imul
xchg
mov
sub
inc
sub
sub
push
lock
cmp
lds
sbb
movsl
mov
inc
push
xor
and
loopne
dec
jo
fisttpl
lods
jb
decl
jno
push
jecxz
in
push
stos
pop
lret
sbb
rcl
lret
adc
in
setbe
in
lock
adc
loope
jns
add
sbb
stos
outsb
pusha
and
loope
aaa
pop
xchg
mov
jl
or
dec
sahf
sbb
mov
aad
fsubs
ficoml
nop
xchg
int3
out
mov
movsb
dec
fistpl
pop
push
mov
mov
sub
cmp
imul
ljmp
pusha
ljmp
sahf
pop
jle
add
xor
push
xor
xor
ds
cmpsl
jge
push
jp
push
je
jb,pt
push
fisttpll
dec
es
cmp
mov
inc
add
cmpb
mov
test
push
cmp
mov
pop
and
add
or
movsb
das
mov
data16
movsb
cld
push
mov
andl
push
cmp
pop
stos
mov
cltd
lret
mov
mov
jae
mov
and
shll
push
lcall
inc
int3
dec
xchg
pop
sbb
and
pop
and
stos
hlt
hlt
mov
shr
enter
cld
loop
xchg
sbb
xchg
mov
test
cmp
fsubrl
mov
push
clc
es
adc
iret
jmp
sub
jg
adc
push
lcall
negb
sahf
mov
cmp
cmp
cmpsb
insl
pusha
pop
je
lret
cmp
dec
movb
ljmp
inc
shl
iret
mov
nop
xchg
jle
testb
inc
jne
ja
add
mov
mov
sbb
loop
pop
lcall
fstps
lcall
cs
cmc
pop
ret
in
insb
mov
lods
in
sbb
xchg
loopne
dec
mov
add
rorl
pop
xor
mov
cmp
int3
clc
sbb
jbe
popf
fisubrl
lods
ljmp
or
call
dec
dec
bound
jle
shrl
pushf
leave
jno
push
cmpsb
insb
fsubs
movl
roll
ljmp
cwtl
cld
mov
in
aas
jle
xor
inc
data16
outsb
sbb
cli
test
les
into
adc
movsl
adc
shrb
rol
mov
addr16
call
adc
fsubrl
hlt
xchg
sub
pushf
push
jle
imul
sbb
repz
xchg
por
in
js
movsb
push
nopl
mov
sbb
adc
fiadds
pop
pop
lock
es
push
into
das
in
rorb
pop
sbb
inc
in
out
aaa
jl
into
xchg
in
mov
cli
adc
cmpsl
sbb
jne
rcll
lock
xchg
out
sub
add
jae
jp
daa
pop
addr16
in
stos
cmpsl
xor
mov
cwtl
lea
push
lods
imul
aad
das
pusha
les
cmp
ret
push
mov
out
scas
shrl
inc
mov
inc
insb
pushf
sub
push
sbb
clc
sub
sub
add
xor
jne
xchg
sahf
dec
addr16
push
cs
pop
fidivrs
cltd
es
mov
push
arpl
lock
jl
aam
or
adc
xor
rorb
or
push
xor
pop
rolb
cmp
ljmp
adc
push
pop
mov
mov
inc
divl
sbb
push
aaa
push
outsl
xor
test
inc
cmc
xor
cs
jle
popf
scas
mov
lods
test
pop
insl
or
ret
mov
mov
loop
in
push
in
stc
cmp
repnz
mov
lods
sbb
sbb
fcoml
pop
test
addr16
push
out
std
jp
int
pop
jns
xchg
mov
fstp
ja
lret
hlt
jnp
mov
int3
mov
sbb
cmp
roll
data16
sti
xor
jbe
push
aaa
mov
mov
js
add
push
xor
jno
int3
lods
pop
jp
testb
cwtl
cmp
xor
imul
enter
lret
inc
inc
sbb
out
loop
push
andl
popa
xor
in
and
popa
out
js
into
add
jecxz
mov
push
sub
loope
push
or
lahf
outsb
mov
and
fmulp
jmp
bound
sahf
adc
mov
jns
mov
addr16
xlat
pop
pop
lret
pushf
sub
test
aad
jmp
test
mov
dec
inc
mov
roll
aaa
dec
je
pop
jmp
jns
mov
test
jmp
loop
es
pushl
inc
and
push
inc
mov
add
mov
fldenv
mov
bound
ja
mov
mov
mov
popa
or
int3
lock
outsl
data16
frstor
mov
imul
outsl
popf
loopne
insl
sbb
mov
rorb
ljmp
inc
leave
gs
fwait
repz
movsb
mov
iret
fwait
mov
out
sub
push
xlat
ds
fisttpl
daa
jbe
pop
addr16
fsubl
xchg
inc
notl
jmp
xchg
je,pt
scas
movsb
dec
addb
xor
iret
incl
iret
mov
mov
add
cmp
je
xor
pop
stos
or
int
aaa
mov
clc
xchg
cmp
cmp
xchg
idivl
ret
mov
addl
insb
add
cli
lods
xchg
stos
rclb
or
out
push
fstpt
jbe
imul
in
aad
jb
dec
rcrl
lea
mov
push
or
popa
xchg
cli
sbb
add
mov
xor
add
jmp
gs
mov
pop
loopne
and
push
test
lret
pop
in
cmpsb
cmp
sti
loope
insb
sti
ficompl
js
mov
adc
nop
ss
mov
mov
add
ja
shlb
int
pop
adc
inc
xor
adc
and
sub
pop
insl
lret
sahf
cltd
push
ror
addr16
and
lea
push
mov
jp
mov
cmc
cli
push
bound
rorb
adc
pop
gs
or
sub
dec
mov
mov
cmp
xchg
mov
pop
mov
lcall
loope
inc
pop
xchg
push
xchg
int3
mov
ja
sahf
subl
mov
mov
in
loop
push
or
sub
lds
mov
push
adc
fwait
sbb
sbb
bound
arpl
or
push
push
aas
inc
pop
mov
or
mov
jo
mov
xchg
arpl
in
xchg
inc
push
loop
out
lcall
pop
and
arpl
pop
mov
push
add
cmp
inc
mov
adc
lahf
rclb
outsb
jns
lcall
jae
js,pn
or
mov
repz
nop
add
xor
inc
fwait
push
rol
mov
data16
stc
out
shl
and
inc
sbb
and
pop
loop
cmp
mov
dec
out
ret
jno
jns
xchg
pushl
int3
jns
jo
mov
dec
jecxz
mov
mov
or
sub
call
inc
xor
sub
push
in
push
ffreep
int3
pop
scas
cs
rorb
hlt
mov
dec
sub
cmp
lea
mov
cmpsb
pop
test
push
mov
mov
sarb
push
jae
xor
jp
mov
fnstcw
negl
xor
test
push
dec
ret
pusha
mov
rol
dec
push
call
popa
lds
mov
popf
mov
pop
insl
sbbb
dec
outsb
adc
lret
imul
push
inc
jmp
add
sahf
cmp
push
sub
jp
ds
hlt
inc
and
pop
fisubrl
mov
sbb
inc
adc
les
xlat
cli
nop
sub
mov
out
cmp
and
sub
cmp
mov
sub
dec
add
in
fs
dec
adc
cmc
push
adc
push
push
int
jnp
and
push
fisttpl
mov
dec
jp
mov
cmp
adc
cmp
mov
cmp
arpl
cli
jmp
fisttpl
inc
adc
jbe
mov
out
jbe
mov
orb
pop
mov
jbe
loop
outsb
jecxz
aas
mov
scas
adc
mov
loopne
rcl
vphaddwd
cld
push
dec
dec
cmc
nop
lcall
sahf
outsb
pusha
cmp
xor
mov
adc
out
sahf
iret
cwtl
jl
sahf
mov
insb
mov
icebp
xor
mov
cmpb
adc
jae
xor
pop
jmp
sbb
and
and
aaa
dec
jecxz
push
add
sbb
xor
mov
hlt
cmp
and
adc
lret
cmpsl
mov
push
cli
push
jmp
mov
cltd
shr
mov
dec
std
repz
pop
ret
pop
ret
pop
inc
arpl
sbb
add
fnstsw
dec
pushf
mov
outsl
jecxz
pop
add
push
repnz
jne
into
xor
das
loope
jmp
xchg
mov
fildl
mov
push
mov
iret
pop
pop
mov
push
hlt
fisttpl
jnp
adc
sar
movsl
sbbb
add
cld
or
test
lahf
and
into
xor
aaa
arpl
dec
lock
stc
xor
mov
je
lahf
in
xor
or
pusha
lcall
icebp
or
arpl
xor
dec
frstor
add
stc
adc
dec
dec
ss
push
pop
shrb
mov
aaa
add
jmp
in
hlt
pushf
popa
cmp
test
xchg
dec
ret
push
xchg
sti
in
xchg
movsb
cmp
pusha
jle
xchg
jg
sbb
sbb
cmp
mov
push
adc
add
shlb
cltd
mov
add
aaa
hlt
imul
sti
cli
dec
or
jmp
sub
inc
or
sbb
mov
dec
mov
hlt
fwait
aaa
loopne
mov
je
and
xor
sbb
sub
push
push
pop
addr16
mov
adc
arpl
mov
pop
inc
xor
jl
fisttps
mov
scas
mov
ss
xor
pop
enter
cmp
and
jb
mov
pop
stos
fsubs
gs
push
pop
cmpsb
out
pop
cmpsb
jecxz
cs
and
fdivl
and
pop
fnstenv
add
fwait
gs
jno
add
js
stc
stos
push
lods
repnz
in
push
push
mov
xchg
push
insb
push
je
lahf
enter
lret
sbbl
aam
xchg
mov
pop
and
hlt
repz
jg
aad
imul
jb
xchg
flds
and
lret
mov
dec
mov
add
leave
flds
add
or
cmp
shl
ja
jo
aas
xchg
call
mov
inc
pop
sbb
and
repz
pop
inc
lock
cltd
jbe
adc
pop
pop
add
pusha
cmp
and
cmp
and
adc
shrb
pop
popf
mov
mov
scas
mov
jns
ds
out
sub
divb
test
scas
push
nop
aaa
jns
aaa
movsb
xchg
or
adc
push
mov
jl
push
outsb
push
lods
ja
sbbb
mov
js
enter
adc
push
stc
shll
sub
pop
sub
scas
call
les
mov
jge
clc
imul
cmpsb
sbb
inc
loop
popa
jp
or
or
shrd
mov
lds
adc
hlt
jp
xlat
ret
sub
and
das
mov
xor
lcall
sub
mov
gs
stos
shll
pop
leave
clc
je
xchg
into
adc
lcall
and
lock
adc
bound
xlat
call
mov
mov
pop
fsts
fisttps
mov
push
dec
loope
push
cmp
adc
pop
jne
ror
xor
push
sbb
push
ret
stc
mov
cltd
mov
jns
orl
mov
fucomip
data16
loop
xchg
out
sub
lret
fcmovnu
pop
test
dec
add
test
inc
push
jecxz
mov
test
jno
add
fdivrl
jns
mov
ror
add
into
ja
push
xor
shll
mov
sbb
imul
mov
sti
mov
mov
push
cmp
pop
mov
adc
lods
mov
fst
cld
pop
xor
sbb
lahf
scas
popa
mov
loopne
insl
xchg
cmp
lea
insl
pop
inc
inc
mov
in
subl
fimull
dec
es
lahf
sbb
add
ss
mov
adc
lods
in
insb
adc
mov
roll
add
addr16
adc
pop
loop
fsub
xor
out
scas
outsb
rcrb
push
test
add
leave
sub
inc
cwtl
mov
or
outsl
fdivs
dec
dec
or
xor
pop
mov
aaa
pop
adc
push
enter
fdivrl
fisubrs
stos
lahf
out
js
lret
mov
ret
sbb
loop
push
stc
cmp
nop
cmp
cmp
imul
dec
mov
popf
push
mull
subb
inc
xchg
cmp
mov
push
cmp
mov
repz
call
arpl
mov
scas
xchg
popa
roll
mov
cwtl
mov
sub
mov
push
push
xchg
and
push
shlb
loop
mov
mov
int3
push
repnz
xchg
jbe
adc
mov
rorl
aaa
aaa
mov
mov
test
or
iret
pop
lea
mov
gs
lcall
fisubrs
push
stos
popf
rcll
out
dec
jno
jo
aaa
mov
es
jb
test
popf
into
rcrl
jne
cmc
dec
cmpsb
sbb
xchg
aad
inc
inc
fidivrs
iret
inc
xchg
arpl
rorb
cmp
sub
push
push
in
sbb
mov
inc
test
pop
mov
mov
out
cmp
adc
iret
lods
pusha
hlt
pop
daa
or
sbb
insl
aam
sahf
shrl
daa
lods
lods
cld
repz
dec
xor
cmp
test
jmp
jl
push
mov
xor
dec
mov
pop
xor
leave
icebp
pop
pop
pop
mov
pmullw
aad
daa
pop
lods
lods
adc
shlb
mov
dec
rcll
mov
stos
fxch
cltd
jae
pop
adc
gs
pop
inc
xor
jo
inc
mov
lahf
inc
sub
and
jno
jne
aaa
pop
inc
push
jmp
cmp
fcompl
mov
push
add
cmovnp
mov
dec
add
mov
jl
add
call
test
xor
cmp
mov
jo
mov
adc
repz
lods
push
push
mov
sbb
jnp
imul
inc
adc
pop
cmp
data16
dec
stc
popa
out
cwtl
mov
sbb
call
cli
xor
punpckldq
mov
repz
ror
lret
sub
aaa
jl
outsb
lret
popf
add
xchg
xchg
mov
or
and
and
cli
mov
aaa
int3
mov
or
jb
fs
mov
dec
int3
mov
sub
or
jl
rcl
sub
jo
mov
sub
fsubs
fmull
jns
loope
ds
lods
sub
adc
arpl
es
loope
inc
into
fisubrl
sysret
pop
and
mov
pop
lret
pop
in
push
xchg
ffree
push
adc
xlat
pop
xchg
dec
dec
ljmp
xchg
push
cli
add
inc
jno
cmp
fnstenv
lcall
cmp
test
flds
stos
add
pop
test
push
xchg
pushf
sbb
lods
jo
jecxz
mov
jl
mov
jmp
mov
loope
pop
or
cltd
jle
inc
xchg
mov
int
jno
loop
sbb
outsb
sub
out
fistpl
xchg
call
xchg
pop
lock
mov
iret
jp
test
cltd
icebp
aam
leave
js
in
cmp
mov
mov
mov
movl
scas
mov
mov
cli
scas
mov
ficoml
out
dec
pop
cmp
movsb
jmp
popa
cli
int3
rcll
inc
fimuls
sub
dec
and
and
les
loopne
mov
movsl
movsl
jno
fsubl
stos
jp
xlat
ss
pop
cmc
mov
pop
mov
rclb
dec
mov
push
sti
shrb
push
aam
loopne
int
xlat
cmp
je
testb
mov
aam
jo
or
xor
ss
aam
shrl
lret
out
dec
mov
xchg
ds
xchg
sub
repz
push
xchg
out
popf
aaa
lea
pushf
jb
jno
mov
outsb
psubsw
gs
cwtl
nop
pop
sub
cmpsl
cmp
add
and
into
and
dec
sbb
mov
lret
stos
popa
and
xor
enter
lret
mov
push
lea
xor
push
lock
loopne
mov
ret
fldt
lods
fadds
aas
out
sbb
inc
xor
sbb
fwait
pop
movsl
adc
incl
push
dec
jge
imul
pop
fsubrl
enter
mov
lahf
dec
insl
fdivs
fwait
xor
xchg
int3
push
data16
loopne
add
es
cmc
pop
or
aaa
and
jmp
xor
sub
sub
sub
push
jmp
sti
arpl
mov
jae
ljmp
mov
lahf
mov
cmpsb
test
mov
sub
jmp
jno
sbb
shl
and
loope
inc
pop
sbb
imul
jle
loope
repz
dec
mov
es
fldenv
fcomps
add
xlat
mov
test
rolb
push
pop
jl
mov
loop
mov
aaa
mov
mov
cmp
cmp
mov
out
pusha
sub
fcoml
in
add
jbe
repnz
imul
ss
cmp
sub
and
pop
push
ss
jae
mov
dec
or
std
data16
xchg
push
aad
daa
cmp
adc
cmp
mov
in
xorl
mov
and
or
xchg
cmp
lds
icebp
in
push
push
dec
nop
and
dec
sbb
hlt
cli
lods
lds
sub
lea
xchg
inc
pop
or
ds
push
loop
in
les
mov
or
pusha
xlat
mov
outsb
dec
jg
push
ret
xor
call
mov
leave
jg
pop
jp
adc
movsb
xchg
push
std
add
mov
mov
and
popf
test
mov
scas
xor
xor
imul
jl
and
adc
jb
and
fs
out
adc
push
push
cmp
ret
sti
fwait
jge
in
pop
push
scas
cmp
adc
bnd
insl
iret
gs
es
add
fdivl
sbb
xlat
add
mov
iret
jb
cli
inc
leave
js
fst
aam
pop
or
pop
inc
repnz
add
inc
into
fwait
aad
cs
xor
push
fwait
lahf
movl
pop
inc
enter
out
sbb
jg
jecxz
add
mov
jmp
aas
gs
xchg
in
lock
aaa
dec
je
pop
andl
popa
cltd
ds
sub
ret
fldcw
cmp
and
pop
dec
cmc
loopne,pn
add
test
lcall
mov
stos
jl
rorl
and
jno
dec
aaa
imull
call
sub
xchg
pop
xorps
xchg
add
jl
xorl
cltd
mov
rol
pop
test
push
pop
in
bound
cmp
mov
fdivrs
imul
insb
jnp
mov
cmc
jle
or
cmp
ss
je
ja
sbb
out
add
add
and
dec
or
fisubrs
test
bound
push
enter
std
push
cld
movsl
add
inc
mov
pop
mov
sar
test
mov
jp
mov
xchg
frstor
ljmp
stos
xlat
loopne
jmp
cmc
loope
call
and
mov
loopne
fs
dec
enter
not
out
cmp
sbb
cmc
mov
push
ret
mov
lcall
ret
mov
xchg
xor
cwtl
sbb
mov
movsl
stos
and
xor
loope
ret
xchg
lahf
enter
dec
cmp
out
inc
scas
mov
jo
cmp
mov
or
xchg
xor
sbb
clc
scas
enter
test
push
wbinvd
unpcklps
mov
dec
pop
pop
add
pop
xor
xor
call
mov
and
cld
lods
push
mov
imul
ja
mov
mov
int
test
add
call
aad
sub
test
int3
cwtl
xchg
loope
jno
xchg
xor
mov
je
and
jno
inc
cld
lock
xchg
popl
add
pop
push
pop
inc
push
pop
xor
xchg
insb
pop
jmp
mov
jg
addr16
lods
jmp
je
sub
sub
das
test
jne
or
mov
mov
lock
cmpsl
xchg
test
pop
lock
in
jmp
mov
xor
shlb
addr16
fbld
cmp
movsb
lods
shlb
stc
out
clc
ds
jno
xchg
mov
pushf
callw
fmul
adc
or
or
fdivr
sub
sti
pop
xlat
dec
dec
pop
das
stos
in
pop
cmp
add
push
loope
sub
out
sub
push
inc
icebp
xchg
aad
fadds
inc
mov
push
xor
cli
nop
fisttpll
int
push
ret
adc
popf
cmp
out
in
fisubs
mov
jo
xor
insl
int3
dec
push
inc
mov
jp
mov
push
rorb
pop
int
jle
std
movsl
xchg
fidivs
and
fcomps
dec
mov
push
jo
clc
outsb
cmp
pop
cli
aas
mov
push
pop
and
jg
inc
imull
mov
adc
stc
jb
push
and
out
je
fidivl
cmp
pop
lret
fwait
andl
push
push
xchg
mov
dec
and
jg
into
cmpsb
mov
jno
scas
iret
xchg
xchg
adc
sti
pop
lock
fadds
mov
rolb
cmpsb
xchg
push
jno
push
add
mov
fld
and
xor
add
stos
or
xchg
or
hlt
repnz
sbb
cli
fdivl
lock
push
mov
add
loopne
inc
call
xor
pop
xchg
divl
shll
fisubrs
sti
sub
sti
sbb
cwtl
aaa
xchg
or
dec
inc
sbb
mov
xor
test
or
sti
std
ret
imul
jge
jae
call
inc
pop
pop
les
mov
lret
mov
test
test
inc
xorb
jnp
fwait
cmp
dec
mov
xor
pop
and
mov
sarb
jle
fs
and
pop
push
cmpsb
stos
shlb
pop
cmp
ss
sahf
rcrb
loope
inc
enter
mulb
jbe
loope
sbb
nop
lock
dec
fiadds
lock
mov
sbb
pop
inc
fsubl
lds
pop
addb
jbe
imul
mov
mov
lods
pop
nop
aam
pop
jbe
dec
pushf
cmp
jecxz
push
pop
jge
enter
sub
cmpsb
mov
inc
repnz
cli
sub
jnp
stos
gs
pop
jp
imulb
and
mov
in
pop
dec
stc
jmp
adc
fnstenv
movsb
scas
pusha
mov
stc
out
push
div
imul
clc
lcall
jp
popa
mov
mov
jecxz
clc
adc
movsb
andl
add
insl
cwtl
mov
test
or
or
sub
stos
jmp
and
lods
or
and
stc
adc
pop
pop
pop
mov
mov
xchg
sbb
and
gs
jne
les
mov
fcmovnb
adc
inc
sbb
in
dec
mov
mov
dec
push
testb
cmp
imul
lds
ss
jge
sbbb
mov
insb
repnz
je
push
mov
fsubrp
push
dec
cld
adc
dec
mov
fcompl
cmp
pop
mov
addr16
dec
lahf
sbb
fdivrs
and
sbb
add
push
lret
aad
mov
lods
sub
dec
mov
bound
mov
std
scas
mov
jo
adc
cmpsl
xchg
mov
xor
rorb
movsl
int3
push
test
out
mov
daa
in
shr
icebp
js
or
cmpsl
fs
out
sub
movsl
bswap
adc
int3
mov
dec
rcrl
test
imul
lds
int3
fisubs
xor
stc
add
push
push
add
pop
sbb
fcmovbe
or
gs
imul
pushf
xor
mov
mov
lret
lret
cmpsl
inc
pop
adc
xchg
jbe
sub
jge
stos
push
jge
mov
and
xchg
jnp
add
in
jl
out
clc
dec
cmp
cmp
pop
inc
cmc
pop
jp
enter
out
jae
push
pop
cltd
mov
cld
push
dec
dec
cld
ja
sbb
cmp
push
push
lods
and
test
out
outsl
sbb
push
leave
pop
push
lahf
cmp
mov
mov
je
push
test
lds
mov
push
jecxz
pop
add
cltd
jb
fidivs
cmpl
lcall
insb
xor
test
in
movsl
xor
mov
push
mov
mov
clc
inc
aad
jnp
rcr
inc
aaa
adc
sbb
inc
pop
jne
xor
das
sub
fmuls
lret
push
popf
hlt
inc
mov
data16
and
mov
fs
bswap
leave
dec
movsl
mov
fdivs
and
mov
dec
jbe
loop
mov
aas
push
call
sub
mov
dec
ljmp
sub
adc
dec
ja
leave
insb
jo
je
adc
xchg
adc
in
push
repz
or
mov
cltd
or
mov
out
fcompl
sub
mov
mov
repnz
or
das
nop
dec
into
mov
or
adc
fdivl
in
push
les
mov
push
xor
movsl
daa
cmpsb
push
xchg
popf
or
cmpsb
out
fisubrs
add
lds
addr16
mov
cmp
jl
xchg
sub
fwait
jb
sbb
and
lea
sub
pop
jno
jo
pushf
jnp
dec
cmp
popf
sar
fisubrl
mov
mov
cmp
pop
aas
sbb
mov
mov
xchg
push
sti
xchg
mov
mov
jecxz
xchg
sub
jg
lock
sbb
loop
scas
sbb
add
push
idivl
xor
fs
push
fcomip
xchg
add
adc
jg
mov
int3
arpl
mov
icebp
adc
pusha
push
test
dec
or
push
xor
xor
xchg
ret
popf
es
jp
andl
fs
sbb
jecxz
adc
aam
and
andl
xchg
out
cmpsb
and
addr16
mov
frstor
daa
xchg
stos
adc
xchg
negl
mov
aaa
mov
bswap
dec
adc
pop
sbb
xor
jl
mov
fnstsw
movsb
aad
enter
cmpsl
lods
mov
push
cmc
sbb
mov
mov
cmp
test
cmp
fsubl
leave
sbb
xor
xor
pop
cmpsl
outsl
mov
gs
imulb
int3
into
popf
nop
add
or
insb
inc
adc
xchg
and
pop
aaa
add
cmp
insl
inc
mov
js
or
lcall
repz
stos
movsl
loopne
cmp
das
xchg
pop
xchg
mov
jb
push
mov
jp
pop
adc
add
sahf
lock
fnsave
daa
sub
cwtl
lods
push
das
fsub
lret
mov
sbb
pop
ret
cmp
xor
jle
mov
call
lock
and
jge
dec
add
push
jp
roll
mov
jnp
xor
xor
iret
subl
dec
cli
aas
push
inc
std
pop
enter
repz
xchg
cltd
and
ffreep
xor
inc
cmp
adcl
in
push
pop
xor
and
adc
xchg
fisubrl
fisttpl
xchg
and
xor
xor
push
pop
stos
add
rol
in
or
push
enter
jge
adc
cmp
cmpsb
push
push
or
xchg
push
pop
ret
sub
and
mov
fdivrs
es
jp
adc
add
cmp
jle
stc
xlat
pop
ficoms
xlat
push
loope
mov
dec
dec
inc
insb
xor
test
push
jmp
ret
dec
repz
subb
lock
mov
dec
roll
mov
mov
pop
sbb
fmul
add
inc
nop
adcl
or
sbb
pop
dec
pushl
sbb
in
aad
sarl
out
adc
sub
jp
mov
adc
jno
xor
iret
xlat
xor
push
mov
xchg
ret
cmp
xchg
xchg
dec
jne
sub
std
ljmp
pusha
xor
jae
dec
scas
daa
inc
cmpsb
mov
mov
js
jae
mov
stos
or
sbb
or
repz
lcall
or
push
clc
mov
outsl
movsl
inc
insl
nop
cmpl
pusha
in
sbb
xor
xor
in
es
mov
cmp
fldenv
mov
popf
scas
into
and
xchg
mov
adc
mov
add
lods
push
je
jae
mov
cmp
out
imul
hlt
xor
pop
and
pop
ret
sti
sbb
insb
jae
dec
xchg
adc
mov
daa
jmp
dec
jns
mov
jne
mov
dec
xchg
mov
cltd
mulb
cmp
into
andb
xchg
lods
lcall
xchg
sarl
aas
mov
cli
mov
xor
and
fists
insl
cli
mov
xor
repnz
dec
aaa
inc
jle
pushf
pop
fbld
add
cmp
jbe
mov
movsb
ja
lcall
push
xor
push
cmc
popa
jle
xor
mov
int
inc
lcall
xchg
hlt
xor
mov
into
mov
test
xchg
in
mov
sbb
hlt
sti
popf
inc
pop
adc
fisttps
mov
jns
xchg
sar
fs
cld
mov
add
sahf
mov
pushf
xor
sub
jp
cmpb
test
mov
imulb
lret
push
shl
imul
in
mov
popf
in
aam
jg
jo
pop
lahf
outsb
jo
jle
in
adc
pop
fstps
std
in
aam
mov
inc
and
and
negb
sbb
adc
jnp
filds
stos
mov
pop
rol
push
xor
dec
ret
stc
cmp
inc
xor
popa
shrb
jmp
cmp
mov
sub
ja
sbb
xchg
mov
mov
iret
mov
jp
sbb
inc
lods
nop
pop
jbe
test
mov
sub
ret
les
in
inc
call
daa
popf
lds
fldl
outsl
imul
inc
nop
push
nop
push
cmp
aas
mov
fsubl
jnp
negb
movsb
cs
lock
repz
int3
test
stos
out
pop
int
push
dec
xchg
insb
shlb
dec
xorl
repz
mov
sub
xchg
inc
add
sbb
repnz
subb
inc
push
dec
test
xor
aam
sbb
jg
das
cs
sub
jl
xchg
sub
xlat
repnz
xchg
sti
fstps
sub
in
popf
icebp
mov
lret
out
jno
jmp
sti
dec
mov
movsl
insl
push
xor
dec
cltd
sahf
ficoml
mov
rcrl
into
mov
pop
push
push
stos
xor
jg
arpl
sbbb
ds
cmc
and
inc
call
pusha
add
sbb
sbb
inc
popa
popf
jae
inc
mov
ja
cmp
fsub
out
movsb
inc
xchg
cmpb
push
jp
add
mov
fiaddl
push
xor
sub
dec
xchg
ljmp
aam
scas
jns
push
movsl
cwtl
lock
sbb
sbb
lock
orl
sar
fwait
push
lock
rcr
mov
jae
rorl
fidivrl
mov
gs
or
dec
fstpl
xor
mov
adc
xchg
xor
xchg
cmp
cltd
lods
xchg
outsl
fmulp
or
stos
sbb
es
mov
cmp
adc
mov
cltd
or
push
test
out
add
jo
inc
jmp
add
int3
mov
addl
pop
fisubrl
or
jb
and
xor
jne
mov
test
je
test
arpl
fs
sarl
repz
jbe
in
sahf
push
outsb
mov
imul
cmp
pop
mov
aad
dec
bound
dec
in
push
outsb
sub
pop
pop
dec
mov
add
mov
hlt
in
gs
xor
test
lret
fldenv
insl
and
pop
aad
cmp
and
add
shl
idivl
and
dec
mov
add
cmc
jae
push
jbe
mov
fildl
shll
or
stos
push
mov
sbb
nop
mov
push
out
in
sbb
cmpsb
dec
push
push
outsl
push
cmp
push
jp
fs
pop
push
aas
fiadds
lret
sarb
orl
lds
or
inc
hlt
cmpsl
in
pop
iret
nop
push
add
push
or
push
mov
push
push
sbb
mov
pushf
pop
xchg
pusha
and
inc
icebp
xor
mov
loope
pusha
sbb
in
cli
pop
rcll
mov
sub
inc
and
imul
sub
dec
aas
xor
mov
cmp
xor
xor
mov
in
jg
sahf
xchg
es
mov
or
js
out
sarb
jb
pop
add
push
popa
and
or
iret
push
jg
in
and
pop
shl
icebp
dec
add
push
orb
out
es
cmc
mov
sub
inc
mov
loopne
in
dec
jno
push
mov
scas
arpl
into
insl
jmp
add
push
xchg
adc
lods
mov
dec
pop
into
clc
or
inc
or
or
icebp
add
or
scas
push
out
rcll
cmpsb
mov
stc
in
out
or
pusha
xor
insb
aaa
pop
pop
and
aam
rol
fs
pop
sbb
push
add
popf
sbb
mov
imul
add
sbb
out
dec
in
or
mov
push
fnstcw
loope
inc
xor
push
fcmovnbe
push
adc
push
add
sbbl
enter
mov
push
or
in
test
push
lds
mov
push
add
jae
sub
ss
sti
adc
mov
data16
xor
cmp
out
cmc
ret
stc
push
lods
push
mov
lds
fisubs
mov
sub
mov
cmp
popf
inc
aad
ljmp
xchg
cmp
shll
movsb
fisttpll
xor
push
aaa
icebp
insl
lods
sub
pop
pushf
les
sbb
or
push
dec
les
jns
adc
roll
pop
aas
pop
pushf
pop
mov
adc
movsb
call
ss
in
je
nop
fs
xlat
jg
sbb
add
jb
icebp
subb
or
sub
loop
mov
les
pop
sub
jb
ss
rclb
inc
add
adc
push
push
loope
mov
sbb
jae
jge
adc
xchg
out
jle
sahf
mov
jmp
mov
fstl
into
adc
fwait
push
mov
outsl
cmp
cs
outsb
std
sbb
xor
in
push
out
shll
inc
daa
dec
fs
cmp
sub
pop
add
test
iret
int3
inc
add
or
pop
jo
testl
cmp
push
call
fimuls
push
mov
out
sbb
dec
in
int3
cld
push
icebp
into
out
mov
or
and
mov
cmp
int3
shll
frstor
addr16
lds
mov
out
sbb
push
dec
ljmp
add
outsb
shlb
cmp
sbb
add
mov
pop
cmp
sbb
aad
sti
stc
xchg
aam
jnp
loope
mov
add
jmp
mov
push
sub
xchg
jp
jnp
or
out
shrb
jmp
push
test
mov
pop
arpl
mov
lret
rorb
test
jnp
and
mov
insl
lcall
or
push
xchg
sbbb
into
mov
into
xor
mov
call
cmp
mov
mov
mov
movsl
jne
dec
pushf
das
lret
dec
cltd
dec
pop
in
cli
mov
mov
fisubrs
sub
repnz
les
mov
add
adc
repnz
loope
sub
pop
stos
orb
gs
in
mov
xchg
je
fnstenv
es
dec
imul
cli
dec
adc
loop
push
movsb
and
xchg
xor
jge
rorl
insl
out
push
jns
push
jecxz
inc
movsb
mov
add
bnd
addr16
and
add
inc
fidivs
popa
inc
mov
mov
mov
aas
add
mov
cltd
jmp
pop
leave
in
push
sub
cmpsl
pop
inc
push
inc
and
cld
and
sbb
inc
popa
int3
hlt
stos
push
push
sbb
cmpb
loop
lds
jle
aam
pop
lret
and
cmp
test
gs
xchg
pop
daa
sub
test
aas
sar
out
ret
cmp
jp
insb
sti
in
or
gs
lods
pop
loopne
push
xchg
dec
pop
lcall
sbb
push
xchg
hlt
sub
mov
subl
sub
outsb
add
std
mov
dec
out
adc
out
movsl
push
push
xor
test
out
aaa
leave
cmp
xchg
or
xor
push
mov
out
lea
xor
dec
sahf
inc
jmp
rclb
xchg
enter
in
sbb
roll
notb
pop
inc
sbb
mov
idivl
insl
outsb
xor
pop
dec
outsl
cs
mov
mov
xor
push
insl
adc
cwtl
sub
cs
mov
xor
loopne
test
dec
adc
cs
dec
cwtl
cmp
lods
lods
xor
inc
shrb
std
inc
jecxz
in
cmpsl
movsl
movsb
xchg
or
fisubs
xor
or
int
pop
clc
addr16
push
in
mov
adc
push
mov
cmp
shll
mov
insb
xor
or
icebp
xchg
push
lods
jp
fidivrl
xor
rcr
lret
or
xor
movsl
lds
sub
es
lret
cmpb
sub
push
daa
mov
sub
adc
mov
adc
adcb
pop
and
addr16
fstps
invd
inc
inc
or
and
or
scas
push
pop
adc
fidivs
xchg
add
inc
jae
inc
jecxz
outsb
aaa
outsb
ds
fldl
jns
jbe
mov
aas
xor
jle
cld
xchg
movsl
sub
repz
lock
xchg
jns
and
mov
stos
scas
leave
sub
adc
int
stos
push
jno
repz
fs
jbe
stc
mov
xor
push
cmpl
mov
jne
roll
xchg
add
jge
test
cmc
cmp
push
out
push
cmpsb
test
or
mov
mov
ds
inc
mov
xlat
xor
xchg
pop
xor
psrad
mov
sub
inc
popf
or
test
push
lret
out
xor
int3
cli
icebp
push
inc
or
push
xor
xchg
sbb
or
js
xchg
imul
not
cmpl
xchg
sarl
adc
rcrb
call
mov
jle,pn
add
dec
push
mov
lret
jnp
jle
data16
inc
fldl
fcmovnbe
and
loop
ret
inc
xchg
jle
out
pop
out
jle
mov
push
mov
jne
adc
cmpsl
mov
incl
mov
add
pop
filds
repz
out
push
icebp
flds
cld
leave
pop
cmp
les
inc
push
mov
pop
push
mov
cmp
xchg
push
push
lret
xor
add
fstpt
aas
shl
push
shrb
adc
out
jnp
adc
arpl
fcoml
repnz
add
push
xor
push
adc
ljmp
sbb
xchg
out
and
xchg
aam
ja
mov
and
fsubrp
mov
repz
orb
imul
rorb
ljmp
out
ljmp
test
jns
jo
movsb
insb
sub
xchg
dec
dec
dec
repz
add
push
lods
sahf
mov
shrb
sub
stc
repz
out
notb
test
jmp
xchg
adc
cltd
test
mov
test
inc
mov
mov
mov
lods
sbb
test
mov
inc
adc
inc
xchg
mov
call
sbb
stos
icebp
push
mov
inc
mov
add
pop
sbb
lods
add
inc
mov
xchg
out
xchg
js
setnp
cmp
int
sub
into
divb
pushf
mov
xor
pop
jne
cmpsb
inc
mov
or
rorl
data16
lods
popf
int3
cmp
gs
sbb
inc
gs
rorl
cmp
fstpl
jle
inc
xor
and
mov
ja
or
jbe
mov
incl
push
xchg
mov
inc
pop
scas
dec
or
aaa
mov
dec
aas
sub
cmp
push
push
nop
xchg
shrb
adc
pop
pop
jg
mov
pop
lcall
and
jae
sarb
out
jmp
fimull
imul
mov
jp
xchg
mov
add
aas
add
fwait
inc
and
jle
outsl
je
fadds
pushf
sbb
fnstcw
ret
inc
fisubl
pop
imul
shl
ljmp
sbb
mov
maskmovq
mull
xor
mov
or
pop
hlt
loope
add
mov
out
xor
test
jl
into
pushf
xchg
divl
fdivs
mov
and
sti
incl
and
cmp
iret
pushf
xor
data16
push
out
push
mov
sahf
int3
cmpsl
decb
imul
sbb
inc
cmp
out
rcrb
aas
test
sub
push
inc
lea
cmp
add
in
stc
cmp
jns
dec
and
cmpsl
jnp
ror
sub
sarb
sub
jnp
shlb
dec
cmp
inc
or
push
sbb
aas
cwtl
jne
mov
dec
clc
mov
and
or
fstpt
int
cltd
mov
scas
in
or
pop
cli
call
in
push
jo
subl
das
bound
sub
jnp
out
jno
mov
sbbl
jbe
lock
push
sar
cmp
cmpsb
jns
icebp
fistps
mov
mov
je
sbb
pushf
int
xlat
ljmp
call
push
xchg
loopne
jb
insl
adc
lcall
shrb
clc
xchg
push
sbb
gs
cli
dec
sarb
add
adc
leave
xchg
pop
mov
push
fiaddl
dec
loopne
enter
xchg
pop
lret
pop
bound
out
test
sbb
out
jns
mov
aam
stc
cmp
add
dec
in
mov
cmpsb
loopne
not
inc
rorl
mov
stos
rcrb
sar
fneni(8087
addb
popf
es
loop
imul
lret
inc
mov
xor
cmp
jge,pt
cltd
adc
xchg
je
and
repz
or
dec
sbb
aam
insb
pop
sbb
or
movsb
jp
lret
stos
lahf
xor
mov
shlb
into
dec
insb
push
cltd
pop
pop
mov
fcomps
mov
xchg
jmp
dec
negl
lds
cli
cmp
icebp
lret
and
loope
push
lods
lds
subb
test
lods
dec
and
in
hlt
cmp
vmovsldup
aaa
cld
jo
jecxz
sub
shl
out
xor
lret
mov
sbb
mov
push
dec
out
mov
jns
repnz
cmp
shll
fsts
cmc
and
mov
insb
insb
mov
jnp
aad
insb
rcl
call
pushf
push
movsl
les
ror
jecxz
mov
data16
popa
stc
sbb
call
jecxz
scas
mov
sarb
push
mov
js
jo
mov
fimull
jle
push
mov
mov
mov
adc
jne
push
movsb
ds
stos
test
xchg
jbe
clc
mov
jo
inc
push
add
test
repnz
lea
repnz
xchg
out
sub
aaa
push
ljmp
inc
out
pop
pop
ja
push
mov
fs
repnz
or
cmp
sbb
sbb
idivb
push
xchg
in
push
fsubs
xchg
fs
insl
xchg
std
stos
negl
test
xor
mov
xchg
mov
aad
adc
jns
mov
mov
roll
icebp
mov
std
jne
dec
jno
add
pop
mov
nop
addb
jle
mov
not
cli
inc
adc
cmp
mov
sbb
gs
pop
or
sub
nop
stos
rcrl
sub
jnp
insb
test
int3
xchg
push
popf
subb
lret
rolb
mov
call
loope
ss
jb
xchg
adc
and
insl
nop
int3
lock
sub
neg
push
sub
mov
mov
inc
aas
stc
inc
sub
pop
das
shlb
xor
adc
cmpsl
shlb
cmp
fistpll
out
shll
jl
push
sahf
movsl
sti
fucomip
cmpl
jmp
cwtl
mov
pop
or
pop
test
int3
mov
or
add
pop
hlt
dec
aas
cwtl
dec
out
das
adc
adc
push
loopne
mov
ret
cmp
pop
rolb
xor
cmc
lahf
in
xor
jle
jnp
std
inc
ljmp
shl
add
popf
cld
pop
pop
push
out
scas
in
gs
mov
cli
test
ret
push
decl
ljmp
pushf
sbb
pushf
lods
xor
lahf
push
rcll
or
dec
push
fstl
push
pop
jb
and
scas
outsb
xor
push
addr16
add
dec
push
jb
insl
mov
sbb
pushf
cmp
call
nop
mov
fbstp
add
int3
push
push
cmp
jnp
lods
dec
mov
scas
scas
and
xchg
cmp
sbb
mov
outsl
cmpsb
aam
adc
inc
pminsw
shll
cmp
into
int3
mov
movsl
pop
and
fcmovb
or
and
lods
or
push
in
xor
sahf
mov
shrl
jnp
movsl
in
cmp
push
sub
ret
and
testl
or
xchg
adc
test
fadds
and
shlb
xchg
data16
sbb
pop
out
mov
mov
inc
sti
jb
and
jnp
scas
test
mov
ret
push
lcall
fisubl
movsb
psubq
je
dec
jo
out
jge
mov
mov
lds
outsl
dec
xor
int3
jnp
insb
jno
mov
jnp
popa
or
jg
jl
adc
cmp
inc
shlb
push
mov
fdivl
repz
bound
lds
enter
ud0
pop
or
mov
pop
out
outsl
pop
sbb
xchg
ret
rol
mov
xchg
ljmp
push
mov
and
sti
nop
fucom
scas
and
fs
or
sbb
out
rorb
dec
aaa
and
mov
xchg
xchg
mov
pop
mov
je
outsb
mov
fcmovnb
jnp
faddl
mov
or
cmpsl
mov
pop
into
cli
adc
pop
repz
rcrl
pushf
push
cltd
inc
into
adc
cmp
sbb
adc
std
dec
and
and
sti
or
pop
and
fdiv
cltd
data16
lret
xor
in
jo
mov
out
and
repz
push
fmull
leave
and
aaa
jge
dec
or
xlat
push
adc
dec
sahf
scas
push
add
divl
ss
iret
leave
cmpb
sbb
sub
or
jle
popf
fcmovnbe
pushf
lock
dec
inc
sub
je
cmpsb
dec
sbb
xchg
or
pop
test
inc
inc
and
notl
jle
jp
push
into
pop
mov
pop
fistpll
or
fwait
xchg
mov
loope
test
cmp
mov
into
into
fs
cmp
mov
inc
sbb
sbb
adc
mov
aaa
loopne
ret
pmullw
jo
ds
xrelease
xor
mov
adc
loop
pop
divb
in
sbb
orl
mov
push
push
mov
addr16
dec
sub
aad
jae
fs
iret
mov
int
add
test
push
dec
imul
repnz
push
mov
mov
sub
dec
push
jle
stc
mov
push
fxch
add
pop
jne
pop
dec
gs
and
sbb
mov
or
insl
in
xor
jmp
jns
mov
lcall
es
push
scas
or
mov
movsb
orl
jle
cli
test
icebp
mov
mov
out
jmp
dec
aaa
cmpsl
mov
mov
js
out
repz
lcall
outsl
jo
cltd
mov
scas
addr16
lea
icebp
ljmp
ss
cmp
or
cld
pop
mov
je
pop
mov
stc
adc
imul
aam
mov
pop
cwtl
call
mov
jno
lds
mov
out
test
and
mov
xchg
xchg
xchg
iret
pushf
idivb
mov
jp
ljmp
pop
xchg
mov
loopne
mov
sbb
iret
es
add
outsl
pop
lret
mov
fimuls
and
xor
outsl
negl
shl
fisubs
js
dec
gs
jge
paddb
mov
call
push
mov
ficoms
push
cwtl
lods
in
cmpsb
cltd
and
les
decl
cmpsb
cmp
dec
cmpsb
mov
daa
dec
mov
jmp
push
popa
loope
mov
in
aas
mov
and
cwtl
mov
sub
mov
add
or
cmp
cmp
pop
je
xchg
idivb
sub
sbbb
cmc
fsubrs
mov
frstor
xchg
fidivl
inc
push
dec
and
push
pop
lds
adc
mov
adc
movsl
lahf
test
rcrl
inc
sbb
loopne
inc
add
jns
mov
push
jl
scas
xchg
in
inc
or
push
fbld
stos
lods
pop
or
frstor
stos
shll
lds
jg
lds
in
jne
xor
xchg
xor
and
cmp
inc
nop
jmp
xchg
xor
adc
xor
mov
and
push
vandpd
fmull
or
mov
mov
inc
push
inc
repz
adcb
sbb
sub
xlat
test
jns
aam
xchg
cmpsb
daa
test
sbb
loopne
repnz
in
add
leave
dec
jbe
rorl
fwait
pop
imul
addr16
jb
stc
notl
cmp
icebp
or
mov
sub
mov
mov
shrb
add
or
pop
shl
imul
cmp
imul
sbb
pop
test
arpl
scas
or
lahf
inc
pop
sbb
mov
mov
in
cmp
adc
mov
popf
xor
in
nop
cmc
add
xchg
inc
pop
repz
cmp
out
xor
pop
mov
sub
mov
dec
mov
mov
outsl
cmp
dec
sub
jl
testb
jb
xchg
mov
ja
test
pushl
pop
xor
loop
inc
dec
mov
sub
sbb
adc
pop
sbb
inc
sbb
xchg
and
das
scas
push
mov
clc
into
stc
test
ret
adc
xor
xchg
jns
or
jne
xrelease
xor
cltd
fwait
pop
xchg
lret
lods
sub
subb
inc
cmp
out
movsb
push
mov
push
test
sub
or
outsb
sbb
movsl
ret
mov
cltd
add
inc
shlb
jae
xlat
or
shufps
or
adc
leave
insb
leave
out
dec
lahf
pop
jl
mov
lret
fistps
repnz
or
ret
ja
fidivl
bound
jmp
out
add
mov
mov
jl
xchg
icebp
je
mov
outsb
orl
add
into
push
je
mov
xchg
stos
dec
daa
decl
inc
fcmovbe
sbb
cs
pop
je
shll
xlat
fbstp
cmpsl
ds
out
jns
xor
jae
mov
fiaddl
mov
sti
mull
movsb
cld
or
fmull
arpl
sbb
and
push
imul
aad
aam
pop
shll
xchg
daa
mov
dec
leave
xor
repz
cmp
push
fdivrl
xor
cmp
int3
nop
imul
cli
fisubl
and
bound
xlat
pop
aam
rcr
xchg
lahf
int3
movsl
aam
cli
out
mov
aam
shr
xchg
mov
testl
in
jae
lods
cld
xor
jge
scas
sbb
int3
mov
push
xorb
fcoms
test
fsubl
scas
add
jb
call
mov
arpl
xor
push
mov
xchg
mov
mov
mov
stos
inc
sub
adcb
mov
jb
sub
mov
call
and
jmp
dec
shlb
sbb
and
pop
and
lds
pop
add
inc
test
xchg
mov
sahf
lret
cld
pop
mov
aam
sbb
mov
push
sub
sbb
or
fistpll
imul
nop
loopne
mov
out
popf
mov
push
repz
lds
dec
and
rorb
leave
aam
sbb
xor
push
inc
in
ljmp
pop
stos
xor
arpl
test
rorl
jmp
mov
sub
ljmp
popa
dec
lahf
and
jge
les
mov
adc
cmpsl
fadd
add
lcall
xorb
mov
mov
dec
test
pop
sub
dec
lods
out
inc
xor
aaa
je
scas
xchg
bnd
lcall
add
or
xchg
ljmp
xor
popf
xorb
pop
into
mov
xchg
rcll
sub
or
mov
jp
mov
call
and
jno
sub
shrl
out
inc
in
mov
hlt
or
sbb
cmpb
movsb
dec
cs
push
dec
adc
sbbb
insb
jbe
outsb
add
xor
stos
mov
mov
xor
inc
insb
addb
ret
jp
shll
loopne
ret
popf
and
mov
ret
sub
in
mov
outsl
adc
call
dec
scas
dec
loopne
ss
in
fldl
je
scas
ds
push
xlat
nop
and
mov
or
jge
testl
and
mov
iret
negb
das
fsubs
fsubrs
xor
sub
repz
lods
fldcw
imul
movsb
and
sbb
xchg
stc
push
fldcw
shll
xchg
jo
add
lret
inc
and
cltd
scas
sub
pop
push
add
imul
daa
popf
or
and
inc
imul
pop
cmc
cmc
or
add
xor
pop
in
mov
push
fsubl
clc
adc
cmpb
iret
pop
push
lcall
rorl
ja
daa
or
sub
jne
xor
popa
outsb
xor
jno
or
dec
ss
enter
mov
mov
ljmp
movsl
es
movsl
sub
push
sub
subb
out
xchg
sbb
in
dec
sub
xchg
xchg
or
xor
stc
mov
je
sub
inc
int
xchg
sbb
mov
mov
inc
pmaxsw
nop
push
mov
fstps
xchg
cmp
lret
inc
dec
mov
orl
push
cmpsl
pop
filds
jg
inc
inc
xlat
dec
test
sbb
mov
dec
pop
add
jbe
stc
mov
fstl
mov
push
cmp
xchg
ds
pushl
das
xor
popf
aam
rep
xchg
int
je
out
mov
push
nop
jle
sbb
gs
test
dec
out
jb
fiadds
loop
inc
push
popa
xchg
pop
lea
mov
hlt
push
jne
sbbl
insl
shrl
jnp
pop
jo
push
jecxz
loop
call
sbb
hlt
pop
push
in
scas
test
into
popf
stos
jmp
jl
adc
xchg
out
and
inc
pop
fsubrl
loop
lods
addb
aam
sbb
cltd
cmp
cmp
mov
or
push
mov
dec
xchg
jnp
mov
sub
lds
push
xlat
mov
jmp
imul
mov
adc
xor
push
test
scas
lods
inc
jb
adc
xchg
mov
sti
xchg
daa
inc
push
fisubl
in
mov
mov
xchg
in
int3
mov
jmp
loop
insb
cmp
out
rolb
mov
push
jg
xlat
dec
xchg
mov
popa
popa
in
pop
sbb
add
out
xchg
js
fldenv
out
fnstenv
out
out
aaa
leave
scas
fisttpll
test
dec
lds
jl
mov
gs
cmpsb
push
xchg
pop
addr16
imul
popa
cli
jb
in
mov
jp
or
repz
or
fistpl
in
clc
in
shrl
mov
ret
inc
std
call
jp
das
cli
fdivr
adc
mov
hlt
repz
adc
pop
mov
subb
xor
outsl
adc
dec
jl
pop
icebp
loope
jo
push
push
mov
and
int
adc
divl
das
pop
sbb
push
dec
inc
sti
add
loop
movsl
lea
sub
push
mov
jl
cmp
mov
inc
adc
aad
idivl
loopne
or
mov
mov
leave
xchg
fs
dec
ds
pop
adc
inc
fistl
dec
pandn
insl
sbb
sbb
xchg
mov
fwait
xor
lods
das
hlt
fisubrl
lcall
out
mov
xor
scas
add
cld
jnp
call
mov
jge
mov
xchg
push
jge
sbbl
les
rcrb
std
pop
fwait
and
add
es
inc
movsl
sti
sub
test
push
pop
jmp
add
test
sub
in
inc
inc
jnp
rclb
add
adc
cmp
adc
das
jb
pop
and
sbb
jnp
call
fnsave
sahf
in
ljmp
push
stos
clc
scas
push
pop
ret
mov
clc
push
out
loopne
cli
xchg
lret
int
xchg
add
mov
or
jge
leave
aad
sub
scas
push
loope
jbe
ljmp
sbb
stos
cmp
ss
sbb
push
in
mov
add
aam
sti
fucomi
jp
xor
mov
jns
and
fldl
outsl
insl
jl
int3
adc
jns
add
shll
add
jle
push
pop
cmpsb
jnp
mov
pop
js
jbe
cli
out
movsb
dec
mov
mov
push
stc
inc
and
cmpsl
mov
mov
pop
cmp
push
and
out
adc
pop
in
mov
outsb
and
pop
dec
and
in
mov
aaa
xchg
pop
addr16
fstpl
testl
ss
jns
into
pushf
cmpsl
and
jge
xchg
sub
insb
ljmp
fstps
jae
jb
sbb
std
lret
in
and
xor
inc
je
mov
xor
adc
daa
dec
pusha
xchg
lret
jno
sub
rolb
sti
in
fldl
push
dec
push
aaa
decl
xor
sbb
mov
outsb
ljmp
jge
sub
nop
push
movsl
xchg
sbb
jg
adc
outsl
adc
sub
pop
xor
mov
imul
int3
pop
jno
pusha
inc
sahf
cld
xor
dec
mov
outsb
ja
dec
ljmp
out
jge
mov
and
int
pop
jge
xchg
repnz
faddl
fisubs
jecxz
mov
dec
dec
andb
mov
lock
iret
cwtl
push
push
add
jl
xor
mov
sub
mov
sbb
push
pushl
cwtl
movsl
add
jmp
mov
jecxz
arpl
loope
popf
pushf
pop
pop
bound
filds
dec
jbe
popf
jns
and
cltd
inc
scas
sub
pop
xchg
test
mov
cmp
loop
iret
sbb
push
dec
mov
imul
add
adcb
add
adc
lret
dec
sbb
lea
pop
aam
jp
imul
pmaxsw
cmc
jo
clc
cmpsb
arpl
icebp
movsl
std
sbb
push
adc
push
xlat
pop
sub
lahf
push
pop
xchg
cmp
aas
fnsave
mov
xchg
xchg
repz
test
rorb
xchg
add
push
cltd
inc
pop
pop
outsl
mov
cltd
movsl
hlt
pop
out
inc
jbe
mov
fimuls
adc
in
xchg
rorl
push
add
arpl
and
jle
pop
and
movsl
jno
push
in
sub
out
sbb
xor
loopne
jg
mov
mov
add
aam
mov
stos
cmp
and
pushf
outsb
fists
jb
add
xchg
cwtl
pop
adc
and
fidivrs
clc
xor
xor
sti
xchg
xchg
ja
and
int3
lock
cmpl
rclb
push
push
jns
lret
or
or
jg
xchg
out
lods
stos
pop
xor
adc
lods
aad
mov
and
cli
cmp
enter
xchg
repz
movsb
push
lahf
cltd
pop
cs
sub
xchg
add
push
xchg
popa
ljmp
lods
xorb
loop
adc
mov
leave
jg
out
push
xchg
pop
clc
rcr
xchg
lcall
lret
lret
iret
xor
test
icebp
inc
jnp
pop
mov
cmp
fs
test
out
mov
rcll
cltd
cs
adc
sub
es
jns
ja
cs
addb
aad
push
insb
jnp
addr16
inc
sahf
xchg
ret
outsl
pop
fwait
cmp
xlat
and
dec
push
or
repnz
fisubrs
xchg
fisubrl
dec
mov
fstl
popl
ljmp
loope
mov
insb
xchg
into
adc
mov
sahf
push
xlat
pop
cmp
cmp
pop
add
fdivp
mov
xchg
idivb
and
sahf
xchg
leave
clc
inc
pop
xor
pause
mov
push
or
aas
lods
mov
lret
int3
lock
push
movsl
hlt
cmpsl
fnsave
jl
inc
lfs
test
cmp
iret
pop
mov
adc
jg
sub
fildll
and
loopne
cmp
jne
adcb
xor
loopne
enter
outsl
cmc
out
push
jbe
subl
cmp
xchg
sbb
jmp
push
sbb
aaa
in
push
lods
lret
pop
mov
xchg
push
sub
in
movsl
lods
aaa
fbld
rcr
andb
cmp
sbb
jb
adc
inc
repz
loopne
mov
mov
pop
mov
dec
aad
and
mov
fwait
in
mov
andb
rorb
pop
cmpl
pushf
cmc
jge
mov
sbb
out
mov
shll
mov
int
scas
cmp
in
punpckhwd
and
xchg
xchg
mov
cmp
jp
into
and
icebp
pushf
or
xor
jmp
fdiv
adc
test
ljmp
fs
mov
inc
stc
mov
xchg
adc
ss
fs
mov
sbb
jg
push
and
inc
cmp
addl
insb
xchg
pop
out
mov
jns
lret
mov
dec
inc
sbb
leave
je
mov
aam
dec
mov
pop
fs
mov
stos
jb
push
stc
push
add
inc
mov
js
push
adc
adc
mov
inc
sub
push
add
gs
add
aas
mov
iret
pusha
push
movsl
not
outsl
addr16
mov
dec
mov
test
mov
xchg
dec
push
dec
cmpb
or
call
roll
pop
xchg
xchg
dec
jg
pop
pop
adc
popf
jl
sbb
inc
jae
aam
xor
cmp
sbb
aad
loopne
xor
popl
push
xor
inc
movsb
pop
test
ljmp
or
inc
push
pushf
imul
add
scas
xor
pushf
mov
inc
rcl
mov
mov
xorl
divl
lock
jae
sub
es
mov
cmpl
xor
mov
pop
aaa
jg
or
out
adc
fs
jge
xchg
ja
or
mov
mov
hlt
rcl
pop
cmp
sbb
movsb
mov
pop
shl
lods
cs
cmp
xchg
xor
fdivrl
cmc
leave
sub
lcall
mov
jnp
or
negb
push
mov
xor
jecxz
data16
jo
xor
pop
into
pop
or
aas
push
pushf
and
arpl
jg
push
pop
test
mov
imulb
inc
loopne
mov
xor
push
mov
lret
data16
xor
pop
inc
add
mov
jecxz
orl
xchg
nop
sbb
int3
gs
mov
ret
jbe
mov
addr16
sub
fnstsw
loopne
arpl
iret
pop
test
xor
push
xlat
and
sbb
mov
lods
stc
inc
dec
mov
mov
repnz
cmpsb
jnp
cs
gs
inc
or
pusha
inc
cmp
aas
out
or
cmc
fisubrl
pop
lahf
test
pop
sbb
in
loop
mov
arpl
int
jmp
aad
jmp
cld
out
cld
and
iret
nop
ret
rcr
mov
sbb
sub
pop
loop
jmp
cltd
movsl
dec
lahf
push
scas
push
fisubrs
fcomps
xchg
shll
pop
and
in
jno
push
xor
je
cmp
scas
daa
mov
jp
mov
sbb
cmp
sbb
aas
mov
div
cltd
stos
shll
or
add
fists
mov
fsubr
inc
or
cmp
popf
push
inc
push
test
clc
sbb
jg
jns
out
inc
mov
adc
pop
stos
ljmp
add
mov
in
cltd
push
stos
jge
arpl
fwait
sub
fistpl
es
scas
jecxz
test
cld
mov
fidivrl
ret
jecxz
aam
lods
sbb
mov
pushl
or
cld
cmp
pop
jns
aaa
sbb
sbb
out
popf
sahf
ror
add
pop
ss
xlat
push
jmp
daa
mov
or
xchg
scas
inc
push
mov
mov
ds
pop
mov
outsb
adc
cmpsb
xchg
adc
mov
sub
inc
sbbl
lods
dec
iret
add
dec
mov
clc
mov
clc
inc
rorl
popa
xchg
xchg
adc
mov
or
scas
and
aas
sbb
lods
clc
cltd
push
icebp
inc
insl
cs
mov
jae
fwait
lret
gs
mov
sbb
aaa
xchg
mov
sbb
cli
xchg
rclb
insw
sbb
cmp
ss
inc
mov
cmp
pop
inc
xchg
sbb
lods
or
clc
into
addr16
shll
lret
enter
inc
cmp
fdivp
lods
xchg
dec
and
jle
xor
repnz
pop
outsl
cmpsl
call
int3
pop
cli
jp
pop
fldcw
fildl
add
sbb
cs
sbb
std
adc
lret
aam
add
or
sbb
cmp
andl
pushf
pop
pop
and
xorb
aas
in
mov
add
dec
inc
insb
push
scas
sbb
or
sub
inc
add
maxps
or
sub
push
sbb
inc
jg
popf
cmp
fisubrs
fwait
stos
test
push
inc
sti
xor
mov
xchg
pop
shr
scas
fs
and
or
sahf
js
or
pop
enter
adc
lahf
dec
push
push
sar
xor
mov
dec
pop
sub
add
push
insb
lock
insb
cltd
fwait
les
xchg
push
in
push
je
lahf
sbb
pop
xchg
movsb
aad
ret
push
push
dec
dec
sbb
rcrb
cmp
dec
add
ljmp
fisubl
mov
jns
movsb
mov
mov
scas
cmp
xlat
arpl
aas
inc
jge
fistpl
lahf
sbb
and
xlat
in
push
hlt
mov
pop
inc
mov
dec
cmpl
adc
or
push
lods
cmp
popf
sbb
aas
loope
push
sub
xor
ret
je
sbb
fsts
inc
xor
cld
test
aad
fwait
in
lock
xchg
pushf
es
mov
pop
mov
adc
sub
adc
fwait
push
ret
dec
or
and
mov
push
pop
ret
nop
xor
out
inc
sarb
xchg
test
push
push
ljmp
data16
call
inc
aaa
dec
jmp
std
popa
jae
and
bound
cmpsb
sub
lret
fsub
xlat
xchg
and
pop
std
stc
adc
test
sub
pop
push
sub
adc
push
dec
ret
aaa
and
and
jge
sbb
jno
rorl
push
rclb
cmpsl
les
jle
lods
adc
dec
xchg
or
and
add
sub
ja
mov
inc
in
jge
pushf
pop
pop
and
mov
sbb
jmp
mov
sti
jl
pop
lret
xor
out
insl
lret
push
mov
shlb
xor
test
cmp
divl
sbb
jae
and
inc
sbb
mull
gs
push
inc
dec
xlat
in
jl
fsubl
test
xchg
adc
and
jb
xchg
xchg
stos
jle
pop
dec
mov
adc
inc
and
sbb
mov
rclb
inc
xor
repnz
bound
lret
jb
and
fcmovb
gs
inc
lea
leave
loop
repz
in
aad
jnp
sbb
repz
loope
repz
aam
inc
out
mov
inc
movl
xchg
push
xor
jmp
popf
lods
es
xchg
push
inc
arpl
fistl
jnp
cmc
inc
sbb
xlat
loop
jp
stos
add
mov
xchg
pusha
popa
flds
cmpsl
in
rcl
ret
mov
cmp
inc
xor
movsl
clc
xchg
mov
mov
cs
jg
add
fidivrl
lea
or
push
pop
jle
pop
adc
or
or
push
adc
sbb
lods
stos
out
jl
inc
sub
test
ja
enter
std
sbb
pushf
mov
subb
xchg
xchg
push
adc
not
cld
adc
xchg
hlt
sbb
in
cmp
mov
stos
outsb
pop
std
lods
lock
loope
xchg
push
push
and
sub
jne
adc
and
jge
test
cmpsb
ret
sbb
int
in
fwait
push
test
pop
dec
dec
mov
test
xor
outsb
popf
insl
ljmp
cs
mov
pop
scas
push
cmc
sub
adc
pop
movsb
sarl
negb
push
or
dec
mulb
arpl
jns
std
pop
inc
pop
xchg
bound
sbb
mov
popa
movsb
push
pop
pop
jl
add
cltd
mov
push
dec
hlt
fsubrs
xor
jb
pushl
push
sarl
mov
enter
cmp
cmp
add
gs
jp
sbb
inc
lds
aas
es
pop
jg
mov
inc
cmpb
pop
lahf
addl
xor
adc
pusha
lods
popf
mov
xlat
sub
out
sub
es
or
cmp
sub
imul
lret
movsb
dec
in
sub
insb
or
je
in
pop
xorb
shlb
pop
mov
mov
inc
stc
pop
fsubrp
and
xor
add
mov
arpl
stc
clc
clc
lret
xlat
push
sbb
les
div
cltd
pushf
mov
repnz
jge
mov
dec
cmp
aad
insl
xor
cmpsb
mov
pop
cmpsl
gs
add
mov
jb
mov
jo
icebp
xor
or
idivl
lret
cmp
out
scas
pop
int
test
pushf
lcall
cmp
mov
or
inc
mov
fst
pop
int
or
loop
push
dec
repnz
mov
xor
sarl
xor
dec
in
adc
pop
dec
roll
lods
fimuls
cli
rcrb
dec
fstpt
adc
test
jl
jnp
orb
and
dec
btc
lods
pop
cmc
sbb
jno
inc
cwtl
movsb
ret
and
arpl
dec
inc
shl
fimuls
mov
mov
loopne
jb
outsl
jp
je
add
std
sub
push
cmpl
inc
sbbl
xchg
adcl
adc
adc
cmp
push
ja
mov
addl
xchg
mov
fidivs
leave
dec
and
ljmp
ds
repz
outsb
fisttps
mov
in
cld
inc
cld
daa
rclb
xor
mov
fisttpll
mov
adc
hlt
or
cwtl
fstpl
popf
sub
pop
rcll
cmove
adc
adc
lahf
aam
mov
sub
stc
in
in
rclb
hlt
repz
cmp
rcll
out
sub
xchg
xchg
mov
cwtl
pop
clc
rep
daa
cmp
push
adc
data16
or
mov
or
lmsw
jbe
push
inc
mov
jge
dec
out
cmp
jge
adc
ss
movsb
dec
or
out
bound
fwait
mov
push
sbb
add
dec
push
fmull
rcl
and
pop
icebp
mov
negb
push
inc
inc
test
cwtl
mov
mov
out
xchg
sbb
ljmp
mov
addr16
fdivr
daa
or
and
pop
add
outsb
repz
xchg
mov
fidivrs
dec
repz
jg
mov
xor
pop
cmpsb
movsb
out
push
add
gs
dec
loope
jno
sbb
mov
lds
pop
rcll
fstps
loope
das
clc
repz
mov
int3
inc
setne
or
icebp
dec
movsl
and
cltd
cs
adc
dec
and
mov
cmp
stc
mov
add
nop
in
dec
inc
dec
pop
push
pop
push
adcl
lcall
add
push
jl
and
ljmp
lods
pop
rcrb
adc
aaa
mov
nop
inc
lcall
cli
jno
pop
xorb
in
adc
inc
and
in
cmp
out
inc
in
int
rcrb
jecxz
cmp
or
and
aaa
ret
or
sub
mov
fs
daa
test
fiaddl
insb
out
sbb
jb
scas
jg
cltd
mov
push
mov
hlt
aam
and
lock
into
aaa
out
lret
jbe
into
cmp
dec
add
sbb
cmp
aad
jg
popa
dec
xor
inc
sbb
xor
push
loope
jns
xor
fidivl
fnstcw
sbb
cmp
adc
pop
loope
lret
add
xchg
add
je
adc
xchg
cmp
pop
pop
inc
pop
xchg
leave
adc
xchg
test
cmp
addb
pop
jb
outsl
inc
icebp
ds
xchg
xor
scas
daa
mov
fwait
xchg
scas
movsb
rcll
mov
inc
in
add
mov
jecxz
pop
cli
pop
mov
dec
adc
loopne
push
fwait
sub
lods
stos
pop
push
aad
adc
mov
js
jge
out
ja
movsl
divb
push
scas
iret
les
dec
jne
call
push
mov
xor
inc
push
pushf
push
lods
xchg
fadds
stos
shll
xchg
push
aad
xchg
cltd
mov
or
push
loop
mov
lds
xor
sahf
rorl
jecxz
lock
mov
pop
test
cmp
ret
shrb
ja
arpl
jle
mov
mov
jno
stos
xchg
mov
out
dec
mov
pop
xchg
das
out
in
mov
mov
mov
pop
addb
or
mov
outsl
pop
shrl
leave
iret
sbb
jno
and
popa
cmpsb
jno
testb
sub
movsb
push
fwait
sub
stos
icebp
testb
into
loope
movsb
popa
mov
cmp
inc
inc
push
dec
subl
je
pop
or
xor
jo
mov
ffree
pop
cmpsl
out
lock
inc
call
pop
add
mov
dec
mov
addr16
xor
adc
xlat
or
jnp
jns
cltd
mov
mov
gs
inc
iret
push
dec
addb
das
addb
clc
sub
stos
inc
movsl
movsl
adcl
and
sbb
lods
inc
lock
lea
inc
pop
out
dec
xor
jae
insl
out
insl
pmaxsw
mov
xchg
push
popl
jo
mulb
or
pop
mov
adc
sbb
mov
xor
adc
clc
cmp
es
lret
sbb
mov
aam
mov
pop
xor
pusha
orb
push
lea
push
ret
lods
in
and
jne
pop
and
mov
mov
gs
push
push
call
fsubrs
push
sbb
dec
xlat
adc
dec
into
and
orw
fisubrs
movsl
mov
push
sub
ljmp
push
mov
push
int
xor
pop
cmp
sbb
inc
dec
sub
xchg
jae
mov
enter
cltd
ds
dec
mov
and
popf
inc
imul
cmp
add
aaa
cmp
mov
shrl
pusha
and
mov
dec
jl
daa
mov
loope
xor
fisttpll
push
inc
int3
int
sub
push
xor
into
cs
mov
xchg
xor
pop
xchg
mov
sbb
int
sub
dec
xor
add
insl
pop
sub
cmp
pop
lds
push
mov
pop
lcall
stc
mov
andb
dec
xor
and
add
jns
je
dec
sub
xchg
js
sti
in
cld
enter
add
inc
and
jp
cmp
xor
dec
push
es
in
fwait
lcall
push
es
mov
cmp
ljmp
adc
sar
ljmp
xor
xchg
mov
inc
ffree
sahf
popa
or
push
xorl
dec
fiadds
adc
xchg
cmp
fwait
pusha
dec
filds
loop
out
bound
xlat
mov
mov
loop
fiadds
xlat
stc
movsb
jg
sbb
mov
loop
cmp
std
sub
mov
xor
pusha
inc
ja
es
xchg
pop
pop
rcll
lods
mov
push
ficomps
mov
jb
mov
dec
mov
cmpsb
jl
aas
add
mov
jmp
cmp
faddp
outsb
inc
jo
in
sbb
lods
jecxz
add
and
les
arpl
mov
pop
dec
mov
or
clc
fnstsw
lcall
lea
dec
and
mov
jl
ja
mov
int
lods
in
jnp
add
stc
jg
das
outsb
mov
jecxz
pusha
insb
jb
adc
repz
fmul
cmpsb
pop
dec
mov
or
in
lds
mov
repnz
repz
std
sub
mov
test
xchg
insb
pop
jecxz
lret
cwtl
cmpsl
mov
leave
xor
dec
popl
loop
fs
scas
xchg
adc
jne
fwait
shlb
sbb
fwait
push
imul
adc
pushl
stos
cs
rorl
rol
push
pop
dec
dec
push
pop
pop
cmc
mov
cmpb
das
push
sub
dec
stos
nop
inc
into
or
xor
imul
ds
mov
xor
add
dec
cmp
dec
psrlw
lret
cmp
add
sub
push
inc
and
mov
xor
add
mov
lahf
cmp
or
mul
inc
inc
cmp
mov
js
xor
sbb
fs
aaa
bound
push
sub
loope
jno
push
fcoml
nop
push
cmp
jecxz
popf
add
jno
fsubrs
imul
xchg
mov
enter
mov
movsl
mov
rol
js
ss
adc
rcll
cmp
je
or
lods
pushf
sbb
int
jno
pop
test
cli
and
cmp
movsb
push
xchg
andb
mov
mov
imul
dec
adc
inc
pop
int3
jg
cmc
adc
cmp
imull
ljmp
inc
sbb
filds
cmp
stc
jp
aam
sbb
imul
out
inc
ficoms
inc
mov
and
xchg
daa
popa
push
out
adc
mov
mov
xchg
ret
addl
enter
fs
cltd
in
sar
sub
xchg
mov
fscale
xor
lret
pop
movb
movsl
mov
or
movsb
lea
pop
clc
sub
push
dec
daa
mov
cmp
adc
aam
adcb
and
xor
mov
aaa
fdivrl
inc
mov
dec
push
mov
in
dec
fnstenv
sub
and
push
pop
leave
add
push
out
test
fucom
in
adc
insl
vmovd
repz
mov
jne
mov
cmp
es
aam
cli
sbb
push
rorb
mov
fstps
push
leave
pop
add
push
push
mov
pop
rep
push
mov
inc
in
jmp
aas
rorb
adc
adc
in
pushf
xor
movsl
mov
xchg
cvttps2pi
lds
loopne
scas
adc
pop
cmp
pop
sub
push
push
dec
or
arpl
inc
mov
dec
mov
addr16
test
push
in
fistl
or
jb
or
inc
hlt
cmp
pop
inc
cltd
mov
cmp
xchg
out
sub
loope
mov
cmp
jecxz
push
gs
or
push
imul
scas
cli
jbe
xchg
aad
mov
and
gs
outsb
dec
inc
and
cs
and
stos
nop
xor
mov
mov
test
and
jge
inc
sbbb
testl
loop
jb
xor
aas
jmp
push
cmpsb
sbb
xor
inc
outsl
or
pop
lds
jge
int3
cmp
inc
add
cwtl
rcrb
jge
or
daa
add
loopne
scas
sbb
lcall
cmpsl
jo
add
jg
sub
lcall
jmp
adc
xchg
lods
rcr
nop
ret
cmpsl
rol
push
push
mov
into
push
jb
dec
jno
dec
ret
test
add
and
mov
jae
jo
ja
sbb
push
popf
push
lahf
rclb
jns
inc
or
adc
jge
jmp
rolb
pushl
sbb
jnp
and
inc
je
lea
in
addr16
aad
mov
ficoml
jnp
stos
cmp
xchg
es
fcompl
or
testl
into
jg
mov
lret
push
dec
movsl
popa
mov
in
movsl
sub
mov
dec
dec
inc
adc
in
out
test
loop
lret
gs
fidivs
mov
jae
aam
aas
call
cld
xchg
dec
adc
int3
jge
daa
adc
add
xchg
xor
xchg
xor
adc
idivl
movsb
or
insl
fidivl
mov
or
mov
jmp
fildll
aad
jne
xchg
arpl
sub
jb
mov
cld
sub
stc
pop
ret
in
push
mov
out
mov
loope
arpl
outsl
dec
in
icebp
pusha
mov
inc
sub
push
fisttps
imul
sbb
dec
pop
cmp
xorb
mov
pop
enter
cmp
adc
hlt
cmpsb
mov
ljmp
cld
jge
jne
mov
pop
push
sbb
leave
fisubl
call
xchg
mov
mov
or
sub
xlat
ror
andl
add
push
mov
repz
sahf
push
sbb
pop
inc
lods
je
mov
or
dec
sbb
cmp
add
pop
push
and
xor
xchg
pop
cmp
push
mov
adc
flds
xchg
popa
or
imul
inc
addr16
test
cmp
adcb
call
sub
xchg
or
add
lcall
inc
pop
push
lds
out
or
dec
mov
mov
push
jg
addb
mov
ret
aad
push
pop
sarb
jnp
xlat
push
cmp
mov
sbb
jo
xor
ja
arpl
xor
push
call
dec
test
aas
pop
mov
dec
loop
icebp
xchg
std
lahf
dec
and
ja
test
fs
into
cmp
scas
fisttps
xchg
test
mov
cli
cltd
fwait
add
mov
cltd
sbb
iret
lock
inc
lret
pop
jo
dec
sub
std
sahf
cmp
ljmp
dec
mov
mov
mov
into
mov
test
cmp
test
xchg
add
mov
ffree
hlt
push
adc
dec
mov
adc
test
call
dec
cmp
loopne
bound
fdivrl
and
lcall
scas
push
push
mov
push
orl
sbb
mov
fisubrs
mov
out
iret
jmp
fsub
mov
fistl
or
insb
push
inc
ret
pop
xchg
std
rclb
pop
pop
fiadds
scas
cmp
xchg
test
imul
fcmovnb
pop
fldt
dec
sbb
mov
xor
outsb
xchg
and
enter
hlt
push
subb
sub
insb
push
cmp
daa
arpl
cmpsl
test
push
jne
xor
jnp
push
int
pusha
in
pop
or
inc
imul
fucomip
adc
in
xchg
push
sbb
out
out
cwtl
leave
push
adc
jmp
jmp
cmp
inc
push
cld
js
jnp
out
pop
cmp
xorb
cmp
cmp
xchg
aad
loop
add
notb
les
dec
mov
xchg
mov
dec
inc
lods
std
cwtl
stos
xor
dec
test
mov
outsb
mov
in
fimull
xchg
sysret
dec
add
mov
lret
xchg
mov
push
leave
mov
cmc
adc
xchg
and
outsl
sbb
adc
and
add
leave
test
push
push
stc
leave
xor
mov
daa
cmp
xchg
notl
mov
ret
out
call
mov
clc
js
adc
arpl
test
or
xchg
loop
or
mov
push
pop
loopne
shl
dec
cli
pop
test
cmpsl
mov
ja
xchg
add
ret
inc
sub
push
add
in
xor
std
mov
mov
push
dec
push
jmp
cmpsl
lahf
gs
repz
rcrb
lcall
stc
push
lcall
into
pushl
mov
xorb
jno
pop
cmp
cwtl
decl
movl
les
push
repnz
lock
dec
sub
hlt
mov
push
mov
aas
ret
dec
dec
loop
xor
dec
jb
lds
pop
inc
pop
push
mov
jg
inc
loope
mov
mov
pop
mov
sbb
xchg
inc
rcl
mov
mov
dec
aas
call
mov
xor
push
mov
imul
dec
dec
fs
xor
sub
jmp
cmp
mov
insl
or
cltd
jb
pop
hlt
js
fsubl
in
cli
and
int3
dec
pop
pop
clc
mov
cmc
test
bound
frstor
out
jb
mov
xor
xor
sti
scas
adc
dec
or
ret
sub
inc
aad
and
and
and
aad
and
cmp
aaa
dec
xor
or
arpl
stos
into
test
aad
add
push
pop
jp
pop
xchg
pop
dec
xchg
push
imul
rcl
in
sub
or
pop
das
or
sti
adc
fnstcw
inc
sahf
lret
roll
xchg
xlat
mov
mov
test
test
mov
repz
adc
cmp
mov
sti
inc
sub
xorl
lods
dec
and
mov
stc
popf
leave
in
mov
xlat
arpl
mov
sahf
js
pop
mov
add
mov
idiv
cmp
or
sub
sub
cmc
cmp
sbbl
push
shlb
test
aaa
sub
push
push
fdivs
cmpsl
insb
mov
mov
aaa
push
inc
pushf
std
dec
sbb
sahf
jge
push
comiss
lahf
pusha
icebp
inc
push
sub
push
cmp
imul
mov
lds
fdivl
push
or
adc
dec
popa
fcoms
paddd
imul
ficoms
div
dec
jbe
push
lods
scas
sbbl
xorl
test
mov
out
lds
adc
mov
push
xchg
mov
arpl
in
mov
sbb
mov
push
fistpll
add
push
inc
push
test
xchg
push
mov
adc
test
fdivl
movsb
hlt
and
fldl2e
xchg
add
xchg
or
into
push
cmp
sbb
pop
test
test
mov
add
push
xor
int
pusha
xchg
imul
sbb
das
out
repz
inc
sahf
pop
lahf
add
lret
sbb
scas
lods
fildl
xchg
sbb
addr16
pop
jne
fiaddl
popf
cmpsl
xchg
mov
xchg
test
test
jecxz
or
push
sbb
mov
ljmp
lret
jns
xlat
and
adc
cwtl
fwait
adc
ficompl
cmc
fsub
mov
jp
ss
sbbb
outsl
and
adc
add
inc
popa
xor
and
jl
sbb
push
popf
movb
xchg
movsb
rorl
jecxz
jae
mov
test
popf
lret
sahf
mov
es
stos
sub
sbb
inc
jg
in
or
cli
inc
aaa
sbb
xchg
mov
outsl
inc
jp
test
jmp
ss
rclb
inc
aas
arpl
pop
scas
movsl
mov
lods
dec
outsl
pop
leave
inc
add
jp
adc
xchg
push
js,pn
insl
jmp
adc
or
outsl
jbe
stos
add
mov
mov
scas
jae
leave
cmpsl
les
iret
dec
mov
jge
inc
in
pop
je
in
sbb
out
ss
jl
fdivs
das
fcoms
sub
and
outsl
or
cmp
int3
or
sub
ljmp
cmc
jecxz
lods
jmp
test
gs
inc
jbe
adc
add
lods
cmp
lret
sub
jge
mov
xchg
mov
int
adc
adc
bound
clc
xchg
lds
std
inc
jecxz
ret
adc
push
xor
mov
lods
test
jl
sub
xor
scas
mov
mov
and
rclb
gs
adc
loope
sti
enter
icebp
add
inc
cmpxchg
mov
push
stos
xchg
cltd
adc
xor
test
aam
ljmp
xchg
mov
rolb
mov
push
adc
cmp
mov
cmp
push
js
push
adc
adc
add
in
js
and
imul
lds
or
test
cmp
push
mov
call
push
push
cmc
js
addb
push
loop
mov
xchg
mov
lods
imul
ficoms
jp
test
mov
imul
stos
or
ss
xchg
lahf
mov
jg
push
push
lahf
lock
imulb
sbb
into
adc
and
in
jno
inc
inc
xchg
lods
cmovae
jns
inc
loope
push
mov
mov
add
sbb
and
mov
mov
adc
push
xchg
icebp
stos
imull
dec
push
jo
pop
sahf
and
cmp
loop
xchg
in
jns
jg
jb
sub
testl
pop
xchg
ja
mov
xor
shl
add
or
test
pop
addl
adc
xchg
sub
out
cmp
lds
xchg
mov
scas
out
in
shl
mov
cmp
sbb
jo
scas
cltd
xor
test
jge
xchg
stos
std
xlat
push
push
dec
pop
ja
mov
movsl
dec
int3
out
jns
cmp
inc
sub
sbb
xor
xchg
mov
stos
pop
mov
fdivl
stc
add
jae
mov
fistl
aad
pop
int3
mov
je
sub
jge
sub
sbb
jnp
mov
pop
mov
push
fldl
xchg
fwait
ljmp
or
cmpsb
loope
mov
lds
imul
adc
ss
jl
aad
loop
add
movsb
loope
mov
pop
or
mov
adcb
fcmove
add
aad
test
pop
jo
sbb
mov
add
mov
enter
ss
lret
lock
test
push
mov
and
or
pop
fcomi
or
gs
mov
jb
sub
in
push
sub
test
push
sbbl
cli
jge
jmp
out
lret
mov
js
inc
sub
xor
data16
push
push
scas
xor
lds
dec
jne
mov
push
push
and
sub
jno
sahf
lods
sbb
divb
push
aad
inc
push
lds
pop
adc
fdivrs
rolb
in
cmp
and
xor
cli
ja
ret
xor
fisubrs
or
mov
pop
subl
call
cmp
pop
mov
jnp
inc
mov
sbb
push
int3
sbbb
mov
xor
cmc
xchg
lcall
add
inc
enter
push
dec
nop
add
hlt
add
inc
xchg
pop
in
add
ret
dec
lcall
adc
cmp
je
jbe
sub
das
jge
xorl
inc
insl
push
test
push
stos
mov
jbe
lahf
mov
mov
mov
xchg
push
jg
data16
mov
stc
pusha
daa
stc
sub
rcl
pop
sbbb
addb
jle
fs
addr16
hlt
xorb
int3
pusha
xlat
mov
mov
adc
sbb
stc
cmp
xor
mov
push
or
mov
das
push
insl
mov
cwtl
pop
push
stc
add
fwait
sbb
lods
mov
jge
or
clc
or
call
idivb
dec
xor
rcrb
push
pop
and
mov
cmp
mov
jo
cltd
dec
mov
pop
mov
xchg
mov
jne
insl
xchg
sub
in
mov
aam
jg
rep
jno
push
stc
out
lcall
fnsave
push
popf
adc
mov
in
mov
lods
xlat
dec
or
negb
add
gs
sbb
mov
mov
gs
fidivl
mov
and
jge
in
push
ja
rclb
dec
ja
dec
pushl
stos
imul
xchg
xor
adc
pop
adc
test
aas
add
sbb
js
int3
gs
mov
mov
aaa
inc
stos
in
fdivrp
xor
sbb
pop
or
test
adc
push
sbb
push
and
ret
pop
es
sarl
scas
sbb
xor
push
bound
and
jle
in
jno
jge
dec
or
add
push
or
jmp
push
mov
pop
cmp
std
xchg
rclb
mov
fld
ljmp
outsl
xor
xchg
andl
test
pop
out
loop
mov
pushf
mov
mov
dec
sbb
cmp
pop
cmpsb
les
call
sub
int
jo
dec
je
aaa
icebp
push
mov
sbb
xchg
movsl
sbb
jae
ja
or
and
xorl
inc
inc
mov
dec
aad
jp
mov
inc
addr16
jle
pop
xchg
lret
push
arpl
mov
unpckhps
pop
shr
negl
add
hlt
xor
xor
imul
cmpsl
push
xchg
cwtl
daa
repz
lods
xchg
jge
mov
xchg
sahf
stos
inc
push
add
cmp
mull
mov
mov
pusha
dec
jle
mov
mov
cmc
pop
xchg
sti
pop
mov
xor
push
sbb
pop
negl
xchg
loopne
push
mov
movsb
cwtl
fildl
pop
mov
nop
es
shll
mov
sbb
dec
jno
in
nop
lret
cmp
test
sbb
mov
jp
lcall
cmc
clc
fcoms
dec
loopne
in
adc
push
jg
std
add
push
ss
and
cmp
xor
sub
cmp
mov
cmp
fwait
cli
gs
xchg
sahf
adc
test
mov
and
push
fwait
mov
mov
mov
push
jae
dec
mulb
sbb
loop
imul
xchg
pop
nop
mov
cmp
mov
jmp
adc
repz
ret
cmc
xchg
stos
add
outsb
scas
movsb
cmpb
mov
push
stos
repnz
and
loope
jno
dec
ret
notl
mov
lcall
cmpsb
out
les
sub
push
xor
jge
jno
xor
mov
sbb
loop
or
mov
pop
mov
pop
sub
fsubr
sbb
cmp
push
mov
add
ljmp
sbb
push
push
cmc
sarl
data16
int3
and
jle
les
addr16
push
jecxz
cmc
pop
scas
and
in
fsts
rcrl
mov
cmp
add
mov
jbe
inc
inc
mov
jno
js
repz
rcll
rorl
cltd
aad
mov
push
pop
mov
push
ret
mov
dec
push
or
js
popf
cltd
sbb
and
add
mov
dec
sub
adc
xor
das
mov
cld
ss
and
loope
repz
pop
sbb
cmp
push
lea
addr16
mov
jb
push
add
sbb
enter
dec
movsb
add
mov
inc
bound
mov
sbbb
jp
mov
sub
popf
adc
movb
outsl
nop
mov
in
mov
int
orl
aad
jb
mov
fcomps
mov
daa
inc
lret
mov
repnz
mov
in
push
jmp
aam
imul
jle
out
cltd
pushf
into
imul
or
xchg
fstp
adc
leave
inc
movsl
adc
cs
adc
xor
sub
ret
sub
ds
mov
cld
bound
push
cmp
iret
jge
lret
in
mov
xor
xchg
loop
cmp
or
test
lret
push
xchg
mov
arpl
outsl
jmp
or
xorl
fildl
pop
dec
std
mov
clc
es
imul
lods
and
or
dec
mov
xchg
dec
fwait
stos
and
inc
iret
std
inc
es
outsb
add
mov
ljmp
subl
cmp
out
push
call
stos
das
sbb
pop
mov
mov
cmp
into
mov
jb
jmp
dec
adc
andb
cld
in
adc
xor
or
xchg
es
xchg
stos
pop
push
je
int3
xchg
js,pn
mov
dec
fs
lret
shl
scas
mov
cmp
add
out
inc
stos
fs
mov
cli
xchg
rcrb
dec
mov
imul
push
lds
inc
cld
lret
xchg
lret
das
ret
cmp
add
sub
adcl
pop
cmp
push
jle
cltd
mov
cli
ret
pop
xchg
jae
inc
mov
scas
arpl
call
mov
cmp
scas
add
sbb
sbb
dec
cmp
aad
or
add
jecxz
outsl
sti
push
adc
inc
fwait
mov
mov
jl
clc
hlt
sub
aas
sub
hlt
in
aad
push
jo
mov
int3
jp
call
push
dec
add
cltd
test
rolb
negb
cmp
mov
inc
xchg
dec
mov
cld
mov
mov
std
cmpsl
jno
inc
pushf
scas
negb
mov
jne
sbb
into
jnp
aas
insb
adc
in
jns
xor
mov
inc
and
jnp
lods
add
pop
inc
pop
aaa
pop
icebp
push
les
mulb
bound
push
jno
pop
ss
popa
lret
mov
jbe
dec
mov
ljmp
call
and
std
push
lret
inc
fiadds
stos
int3
push
mov
loop
jns
cld
loope
sbb
sahf
xor
mov
shrb
cmpsb
xchg
das
and
cwtl
je
inc
xor
mov
aam
scas
xchg
loopne
movsl
lods
xchg
outsb
nop
loope
sub
popa
mov
ljmp
pop
in
pop
cmp
xlat
pushf
aam
or
imulb
mov
sti
add
cmpsb
adc
outsl
je
jle
adc
mov
mov
shl
popf
fsubl
jmp
jecxz
cli
orl
std
data16
sub
mov
pop
pop
jae
fcomi
inc
lret
ret
mov
xchg
nop
jo
into
mov
add
sub
ss
mov
js
mov
jbe
pmaxsw
xchg
lods
adc
in
aad
pop
mov
sbb
repz
dec
fdivrl
lret
mov
mov
adc
loopne
fsubs
cmp
mov
das
jecxz
fisubrl
arpl
clc
lret
std
xor
adc
mov
inc
pop
dec
fsubrs
jle,pt
rep
mov
gs
mov
popl
jl
aam
adc
hlt
xor
outsl
outsb
pop
xchg
rcr
add
fs
popa
test
mov
adc
test
sbb
sbb
fcmovbe
loop
pop
dec
push
lock
insl
cmp
rcrl
xor
add
and
sbb
xchg
jecxz
xchg
jnp
loop
sub
mov
xor
lods
or
push
in
xlat
xchg
mov
push
ss
cltd
stos
iret
pop
adc
sub
ss
push
out
xchg
jb
jno
outsb
aaa
mov
dec
sbb
adc
jmp
xor
jno
xor
addr16
mov
sbb
mov
popf
jnp
sub
repz
jae
iret
out
test
xchg
cmc
push
push
and
cmp
mov
lret
push
ja
outsb
in
das
dec
daa
adc
sub
lret
xchg
add
mov
dec
into
bound
fsubl
jno
sub
inc
mov
inc
scas
sbb
shl
and
sbb
jp
addr16
es
cs
and
xor
lock
dec
add
fidivrl
pusha
push
bound
repnz
adc
or
add
pop
inc
outsl
mov
inc
cs
mov
xchg
xchg
mov
rclb
in
in
push
and
mov
inc
clc
or
jb
pusha
sub
xlat
fidivl
js
xchg
test
cmpsl
jns,pt
mov
outsl
mov
mov
inc
mov
adc
fbld
adc
push
fldenv
push
mov
lock
dec
outsb
mov
dec
jl
mov
sahf
inc
inc
or
adc
mov
pop
lret
sub
lods
cmp
dec
mov
jmp
ja
dec
pusha
scas
push
scas
and
sbb
cmp
push
jmp
and
adc
test
stos
cwtl
sub
cmp
dec
xchg
push
push
roll
jp
sahf
xlat
popf
jo
mov
xchg
sub
push
push
je
imul
mov
inc
inc
mov
inc
jp
arpl
shl
sub
jmp
push
inc
or
pop
fmull
out
or
cmp
fwait
xchg
sub
mov
cmpsb
cmp
jle
pop
mov
ret
insb
in
or
lahf
cmp
xchg
xor
hlt
inc
mov
int
pop
mull
lods
xlat
and
test
arpl
adc
pop
fwait
inc
ret
ret
sahf
pop
cmp
push
xchg
dec
lds
sub
mov
inc
push
jo
jno
loope
dec
push
dec
pop
insl
mov
adc
xchg
pop
inc
mov
mov
pushf
adc
xor
shll
pop
lds
pop
pop
cld
stos
or
mov
lods
scas
clc
cld
push
ljmp
shl
aam
sahf
push
in
fsubrl
jecxz
in
mov
inc
inc
xor
in
loopne
dec
nop
mov
pop
jae
pop
ucomiss
mov
lods
ja
aas
inc
fidivl
xchg
aad
decb
sbb
cltd
lds
in
sbbl
and
and
fucom
xor
sub
jb
push
cmpl
rcrb
subb
mulb
divl
and
mov
cmp
mov
sbb
loopne
add
outsl
xorb
cmpsl
pop
or
int
inc
fst
xchg
in
loop
push
cs
xchg
stos
stos
in
jno
pop
pop
mov
fcomip
push
rcl
lock
pop
repz
fwait
inc
mov
adc
outsb
mov
aas
mov
in
mov
pop
in
cmpsb
xchg
sbb
pop
hlt
mov
leave
or
xlat
addr16
out
xchg
divl
notl
push
sub
movsl
mov
faddl
std
mov
jecxz
inc
adc
fs
out
sub
pop
pop
daa
adc
popa
mov
arpl
pusha
fisttpl
mov
cmpsl
sbb
mov
add
xchg
lahf
add
push
lods
pop
xor
andb
ds
inc
adc
arpl
mov
hlt
mov
adc
and
sbb
sub
fs
repnz
push
cmp
push
movsb
fsubl
ficompl
cmp
or
popa
mov
hlt
mov
decb
aaa
sti
push
loopne
jno
add
cmc
sahf
cmp
incb
dec
hlt
fnstenv
fmuls
xlat
addr16
imul
jp
dec
mov
jle
imul
aaa
push
outsl
icebp
lds
mov
lcall
add
pop
ficoml
pop
je
jns
adc
nop
sbb
shll
lock
add
cmpsb
cmpsl
cld
cmp
into
aaa
and
inc
xor
xor
push
cmpsb
jmp
push
out
cmp
loop
inc
push
cli
mov
or
js
mov
fiaddl
imul
in
insl
sahf
sub
sub
fildll
test
mov
and
pop
jg
sarl
dec
aam
mov
jb
pop
xchg
or
adc
ret
cld
jo
jecxz
adc
sbb
scas
cmp
xor
inc
movsb
loope
ror
dec
jp
pop
into
les
movsl
lods
pop
mov
mov
inc
fwait
js
frstor
adc
inc
lock
neg
or
pop
or
dec
mov
jne
cmc
cwtl
repz
or
sbb
push
pop
ds
lea
mov
je
in
sbb
subl
fwait
xchg
popf
out
mov
or
packsswb
movl
sahf
out
addb
jae
popf
sbb
mov
test
push
dec
mov
mov
jne
fwait
sub
mov
hlt
sub
mov
cwtl
cs
sarl
sbb
mov
pop
xor
or
and
xor
cmp
inc
sbb
pop
ljmp
std
stc
push
in
shll
mov
insb
fidivrl
fwait
imul
outsb
pushf
jmp
xor
jae
stos
lret
aad
lahf
lcall
data16
bound
sbb
adc
inc
adc
mov
add
cld
inc
jle
adc
xlat
and
push
pop
fcoms
aam
test
ror
pusha
addr16
pop
imul
sarl
mov
lea
addr16
pop
out
cmp
sub
xchg
insb
xor
pop
mov
in
in
xchg
fmulp
sbb
lret
repz
inc
iret
lea
jne
aam
lret
inc
pop
pop
mov
mov
shll
xchg
test
dec
test
jbe
divl
mov
int
lret
cwtl
daa
fimull
ret
jnp
xor
mov
arpl
sub
cli
xor
pop
ss
cmp
shr
mov
je
push
push
push
and
cmp
push
pop
and
and
sbb
xor
xchg
call
fsubr
lcall
pop
fdivs
adc
add
mov
into
fidivrl
jle
cmp
adc
stos
jg
stos
out
push
xor
sbb
lock
lods
outsl
dec
inc
push
cmc
out
mov
in
cs
mov
out
or
mov
mov
add
inc
mov
jbe
mov
adc
ror
or
ja
jbe
jne
rcl
mov
cmp
or
clc
loop
call
nop
ret
jne
xorl
push
outsl
mov
sub
les
fimuls
cmp
cs
or
cmp
nop
jb
mov
mov
push
pop
lret
in
sub
jnp
mov
xor
jae
imul
fldcw
or
in
jmp
out
out
dec
push
in
sub
scas
push
cmpsb
mov
fldt
shll
jno
insl
daa
push
or
pop
mov
jl
divl
pop
push
mov
nop
idivl
in
push
movb
into
inc
in
push
sahf
movsb
inc
inc
dec
ljmp
xor
test
push
and
xlat
inc
es
cmc
cmpl
pop
int3
sbb
jl
mov
fidivrs
leave
divl
adc
mov
add
inc
adc
mov
mov
daa
adc
push
popa
jo
push
jmp
and
mov
sbb
sti
sub
les
adc
enter
inc
insl
xchg
jae
mov
xlat
xor
add
leave
inc
dec
das
and
out
les
fs
mov
pop
sbb
adcl
mov
lds
mov
mov
mov
stc
fildll
out
sub
movsl
and
ficompl
jbe
cli
xor
and
mov
lret
xchg
scas
xor
mov
mov
into
inc
lods
xor
mov
xchg
lahf
push
loopne
das
or
push
xchg
cs
stos
xlat
out
leave
in
adc
in
out
add
shrb
lods
mov
test
cli
push
mov
or
cltd
inc
xor
jle
aaa
mov
shlb
cwtl
cwtl
add
push
cwtl
adc
jp
pop
push
adc
inc
or
loopne
sub
jp
aaa
fs
jl
arpl
cmpsl
aad
ljmp
push
daa
adc
sbb
test
jno
ja
movsl
aad
cmpl
push
mov
test
in
movsb
or
xchg
andb
mov
sub
sti
jl
xchg
fwait
in
icebp
jae
push
inc
xchg
aam
scas
dec
cmpsl
sbb
bound
mov
lret
aam
rcll
xchg
aam
jp
stc
push
cld
jae
das
xchg
aam
cs
gs
stos
stos
lds
pop
jbe
es
xchg
cmpsl
or
push
rcll
sub
ds
push
xor
jbe
loop
notb
dec
ljmp
adc
xchg
inc
ss
int3
das
sbb
std
xchg
popa
jl
sbb
jno
lock
cmc
mov
ss
mov
mov
mov
std
rcr
push
das
repz
push
pop
sub
leave
inc
sbb
incb
dec
lret
int3
inc
sbb
cmpsb
push
xchg
int
mov
daa
in
or
mov
xor
jp
sbb
aad
int3
es
enter
xchg
and
push
push
mov
scas
pop
cmp
test
cmpsb
daa
into
adc
aam
stc
mov
cmpsb
movsb
jecxz
pop
enter
test
fidivrs
decb
mov
fistl
and
lock
fdivrl
bound
inc
inc
int
jo
leave
xor
pop
popa
dec
jle
clc
jns
pop
jge
mov
hlt
and
sbb
add
mov
dec
addr16
cmpb
ljmp
mov
xlat
mov
add
enter
sarl
out
mov
add
sbb
mov
xor
repnz
cmp
sub
aam
mov
in
clc
movsl
sahf
push
ja
inc
adcb
rcll
mov
inc
icebp
push
dec
jb
outsl
test
loope
rclb
jb
sbb
push
push
imul
and
inc
cmp
sub
or
push
loop
shrl
lret
ficoml
mov
adc
inc
mov
repz
sbb
aaa
ret
negl
mov
ret
xor
push
push
insb
xor
mov
lods
and
pop
shl
cmp
add
fcomip
xchg
mov
lcall
and
scas
inc
mov
jbe
bound
jmp
sbb
sub
mov
adc
pop
bound
pop
and
fistps
enter
xchg
cli
cmc
leave
cltd
sub
mov
and
out
and
xchg
ret
sahf
packuswb
mov
adc
insl
daa
sub
enter
add
cmp
movb
jge
ret
mov
push
add
ja
and
add
sbbb
push
dec
mov
xchg
decb
fcmovnb
xlat
ja
inc
fmul
fstp
out
xor
jo
pushf
dec
sub
mov
ljmp
inc
enter
enter
nop
stos
outsl
or
testl
lret
mov
xor
lret
adc
xor
sub
ret
add
out
sub
mov
in
orl
out
xchg
cmp
mov
push
in
sarl
jno
mov
jno
xchg
mov
in
xchg
imul
sbb
and
imul
out
mov
push
inc
movb
outsl
xchg
cli
pusha
xchg
pop
pusha
iret
movsb
icebp
xchg
dec
adc
mov
test
add
insb
cmp
jo
and
or
mov
xchg
jbe
mov
push
test
fwait
iret
mov
push
inc
mov
sbb
mov
fxch
lret
scas
cmp
jns
jecxz
sti
ret
shlb
rcll
jbe
nop
cmp
das
mov
cli
imul
daa
sbb
clc
xchg
or
das
cmp
ljmp
ljmp
loop
dec
pop
mov
xchg
std
sub
jo
inc
xlat
push
lret
lds
aas
push
dec
jecxz
sbb
xchg
jg
dec
dec
inc
cmova
sbb
mov
icebp
icebp
and
das
aad
addr16
xchg
dec
daa
sbb
adc
aaa
clc
and
inc
test
or
leave
adc
sbb
pop
adc
or
xchg
stos
cmp
pop
lahf
pusha
pusha
arpl
mov
jne
jg
je
push
cwtl
lahf
stos
add
fcmovnbe
xchg
push
into
ja
mov
pop
mov
sub
mov
cmp
mov
daa
js
push
addr16
out
dec
dec
and
fucomip
add
aad
or
cli
scas
out
push
xchg
hlt
test
push
inc
stos
push
sbb
jo
sub
push
andl
jl
fwait
and
mov
enter
pop
add
push
cmc
sub
sub
pop
int
scas
test
dec
jmp
enter
dec
addb
add
cmp
movsb
fstpl
dec
push
fcomip
add
div
jg
pop
popf
aam
xor
cmc
das
repz
cmp
cmpsb
adc
sbb
push
mov
or
pop
out
scas
and
fisttpll
loope
mov
sahf
dec
cmc
xor
sbb
xor
xor
mov
pusha
aad
lods
add
shll
add
dec
pusha
daa
jge
inc
jle
cs
out
sbb
mov
repnz
lret
inc
and
adcb
xchg
inc
cld
pop
xchg
mov
jmp
dec
xchg
inc
mov
test
xor
mov
enter
movsl
xchg
xor
in
cmp
out
sti
ret
dec
aaa
fstp
mov
mov
inc
sbb
push
das
mov
and
sbb
filds
dec
fstpl
scas
cmp
pop
add
cltd
inc
test
and
iret
in
add
aas
mov
adc
les
add
fdivrl
das
inc
mov
xchg
jecxz
xchg
cmp
add
sub
js
leave
mov
lods
iret
addb
popf
das
push
cmp
ljmp
fs
push
push
pop
inc
dec
mull
pop
mov
mov
in
xchg
lods
rep
pusha
cld
filds
loopne
xchg
test
lds
adc
mov
push
loopne
sbbl
add
int3
xor
sub
and
xor
jg
in
stos
and
fists
dec
frstor
inc
pop
cmp
stc
mov
fisttps
int3
imul
addr16
rolb
mov
fcmovnb
pop
cwtl
lahf
stos
outsl
fs
mov
cmp
daa
nop
jno
xor
adc
lods
xor
jg
scas
adc
jae
pop
jae
push
adc
fisubrl
mov
jge
fimuls
in
repz
outsl
jno
sahf
xorb
inc
out
jp
dec
in
cltd
mov
push
jmp
pop
mov
lods
stos
add
addr16
mov
ficoms
fcomi
dec
or
sub
jecxz
inc
outsl
in
mov
dec
sub
push
inc
fstpl
dec
imulb
push
ret
fdiv
sahf
jno
cmp
cmc
ret
test
scas
jo
inc
sahf
daa
xchg
les
push
or
psrlw
xlat
cmp
lock
mov
mov
pop
pop
shl
inc
sti
push
xor
data16
leave
pop
or
ds
cmp
cmp
rcr
jns
xchg
cmp
lahf
fildl
jnp
ficomps
test
jno
orl
mov
arpl
out
adc
shrl
ficoms
xor
fisttpll
shrb
nop
cmpl
ret
in
adc
push
pop
loope
lahf
mov
loope
out
jne
fmulp
and
sbb
sbb
add
je
or
sbb
mov
popa
cmp
jecxz
push
fadds
adc
mov
adc
mov
outsl
rorl
cli
inc
les
push
rcll
aas
lods
test
bound
out
hlt
les
outsb
adc
pop
push
sub
mov
mov
iret
dec
cmpsb
inc
jmp
movsl
inc
leave
sarl
and
cmp
subl
nop
inc
pushf
movsb
mov
arpl
ret
fsts
insb
test
fwait
lea
and
or
je
push
mov
fs
cli
addr16
jo
push
outsb
in
sbb
cld
xchg
push
jl
mov
push
ss
xchg
shrb
cmc
sub
pop
lock
or
mov
in
enter
mov
push
xor
jbe
out
ljmp
insb
sbb
push
loopne
inc
fsubrl
add
pop
xchg
xchg
int
mov
jbe
rcll
jns
or
jnp
lods
and
jns
cmp
cwtl
fstpl
test
popf
sar
pop
pop
cmp
and
mov
jmp
cmpl
sub
popa
sbb
dec
push
lahf
sbb
jecxz
jae
fisubrs
dec
inc
xor
push
sub
cwtl
inc
cmp
push
mov
pop
cvttps2pi
mov
cmp
fidivrs
ljmp
pop
fidivs
sub
push
loope
test
jecxz
orl
fstpl
jg
lcall
pop
outsl
cmp
cmp
xlat
cmp
dec
mov
or
data16
aaa
fldt
or
or
js
in
xor
cwtl
push
adc
aaa
sub
inc
dec
rcrl
jnp
sbb
xchg
jae
jg
inc
divl
push
cmp
bound
in
out
shrw
popf
adc
lret
and
insb
rcl
arpl
leave
cmp
je
sbb
stos
adc
mov
jecxz
in
dec
pop
aad
movl
es
mov
sbb
sub
sti
cmp
daa
int
cmp
inc
xor
ja
pop
orb
dec
orl
xchg
sarb
rclb
test
push
xchg
and
mov
inc
pop
or
add
hlt
out
mov
push
xchg
mov
pop
xor
jne
cwtl
push
jmp
dec
nop
or
push
inc
sub
sbb
dec
ret
stos
fmuls
sub
and
test
ljmpw
sub
sbb
jecxz
stos
int3
fisttpl
fldl
push
sarb
imul
fstpt
xchg
mov
ja
and
push
cmpsb
das
frstor
add
dec
insl
rcll
sub
cmp
inc
sahf
in
into
stos
stc
aam
sbb
aad
pop
lock
js
rolb
and
pop
ret
push
mov
mov
jnp
aam
jge
insl
scas
outsl
lcall
sbb
add
push
fadd
xchg
push
bound
cmp
dec
std
pusha
xor
insb
orb
cmc
and
lret
cmpsl
add
popa
push
stos
negl
sbb
xchg
lods
lods
pop
or
ja
andb
cmp
cmpsl
cmpsl
pop
or
loop
mov
fldenv
les
inc
xorl
arpl
fwait
pop
data16
adc
lds
movsl
mov
xchg
sub
fldl
cltd
loopne
pop
mov
mov
xor
addr16
fwait
out
das
mov
push
pop
mov
testl
cli
push
mov
add
fdivrs
pop
xor
scas
mov
mov
fcoml
fwait
bndstx
xor
mov
xchg
jne
sbb
mov
pop
sbb
ror
lret
daa
lods
push
fidivrl
clc
or
lret
dec
mov
lock
lock
mov
repnz
mov
aaa
xchg
lcall
sbb
insl
pop
mov
arpl
out
rorl
divb
lods
push
enter
sub
mov
mov
in
outsb
test
xchg
out
lret
cmp
add
lock
push
lret
lock
decb
jbe
cli
jl
mov
push
adc
xchg
inc
mull
es
pop
add
loop
arpl
stc
cmp
and
and
dec
push
scas
in
adc
push
gs
mov
cwtl
jg
adc
nop
je
lock
sub
push
das
ficoms
sub
xchg
aam
lds
gs
mov
and
mov
xchg
push
sar
cmp
sub
decb
iret
mov
push
cvtps2pi
mov
in
aad
jle
shlb
dec
sbb
fimuls
leave
inc
enter
ret
mov
mov
into
xlat
lret
out
adc
lcall
cmp
cltd
xor
sub
mov
cmp
and
leave
push
and
orb
or
xchg
inc
sahf
sarb
push
repnz
loopne
clc
push
addr16
pop
ja
test
aaa
scas
pop
pop
xchg
add
xor
in
jmp
adc
andb
or
std
xchg
cs
cmp
fistl
rep
shl
jmp
push
jne
ss
add
sub
dec
adc
mov
dec
test
push
je
xlat
cmpsl
cmp
scas
inc
shrl
inc
xchg
adc
ret
push
and
or
pop
inc
addb
lret
xchg
aad
dec
jne
xchg
inc
inc
pop
jp
rcrl
psubsb
repnz
cmpsl
mov
movb
mov
bound
jg
add
movsb
bound
stos
es
ss
jp
lods
adc
shrl
mov
fdivl
stc
mov
xchg
lahf
ja
inc
imul
push
mov
jmp
je
es
lods
jbe
scas
jae
dec
into
ja
sahf
adc
xor
dec
adc
add
sahf
mov
daa
jl
out
in
lcall
out
push
js
out
mov
add
pop
imul
xor
mov
lea
lods
inc
and
sub
hlt
sahf
outsb
insb
adc
dec
cs
xor
push
pop
int3
adcb
test
loope
xor
push
xchg
mov
mov
inc
mov
mov
inc
push
lods
cwtl
cmc
xchg
add
mov
mov
idivl
xor
mov
xchg
outsl
pop
xchg
and
fnstcw
jge
mov
aas
out
sti
lcall
inc
lods
subl
cmpsb
or
clc
push
lret
cld
or
mov
insl
lahf
movsb
inc
lret
pop
add
sarb
cmp
sub
dec
push
lods
sub
pop
pop
mov
xor
xor
sbb
sub
cwtl
div
lds
xor
arpl
les
lea
daa
push
xchg
xor
inc
mov
sub
in
loopne
sub
cmpsl
and
push
addr16
loopne
sbb
mov
mov
pop
xchg
mov
xchg
jg
mov
int3
jl
xchg
popa
in
inc
nop
mov
push
ds
xorb
jbe
jnp
mov
fcom
pusha
adcb
xor
sub
jle
pushf
aad
xchg
adc
pop
es
mov
mov
int3
loope
inc
clc
scas
aaa
divl
xorl
add
and
stc
push
push
jge
ds
or
mov
dec
addr16
test
or
mov
inc
sub
call
xchg
test
lock
lock
pop
pop
shrb
mov
shrl
mov
add
loopne
mov
pop
movsb
jl
jb
dec
popa
cmp
mov
and
leave
pushf
push
mov
or
imul
push
call
aad
jae
and
jmp
adc
jbe
and
mov
inc
inc
insb
adc
lret
or
mov
rorl
in
ja
jo
pop
lds
out
pop
sub
cmpb
lret
lret
iret
imul
cmp
repnz
jecxz
mull
cld
popa
test
icebp
mov
into
idiv
pop
cmp
stos
jnp
add
adc
leave
mov
inc
fildl
inc
inc
push
mov
and
jecxz
jl
push
mov
adc
dec
out
xchg
xchg
push
loope
sbb
insl
mov
nop
stos
loope
outsl
into
insb
cmpsl
ljmp
pop
push
lds
je
cs
lahf
daa
add
or
test
sbb
push
mov
rorl
xchg
js
mov
cltd
mov
sbb
adc
adc
dec
into
testl
jo
cmp
leave
bsr
mov
fs
push
mov
scas
out
xor
arpl
xchg
mov
lea
mov
in
and
ret
mov
testl
adc
sub
je
cmp
jb
dec
push
fldcw
dec
jge
mov
cli
add
adc
jl
mov
dec
xor
bnd
inc
shlb
lret
cmp
xchg
pop
push
adc
aas
xor
mov
fs
sub
lret
mov
call
popf
or
scas
jno
pop
out
sbb
movsb
push
orl
add
mov
sub
sahf
sahf
icebp
mov
fnstenv
mov
cli
movsb
push
out
setge
scas
mov
jbe
imul
and
shrl
xor
lds
icebp
inc
movsb
pop
push
add
daa
stos
imul
push
and
hlt
push
dec
sub
jne
pop
arpl
iret
scas
das
dec
pusha
rcrb
out
and
neg
sahf
xor
lock
dec
out
clc
outsl
and
pushf
xor
push
pop
test
mov
cmp
sbb
push
pop
pop
sub
loop
shll
fistl
mov
fists
sbb
cld
mov
mov
xor
in
outsb
pop
and
mov
stos
cli
inc
test
xor
push
adc
or
push
inc
test
aas
sub
addb
cmp
sbb
dec
inc
lahf
test
stos
jl
jbe
and
pop
lcall
push
ljmp
mov
push
push
xor
lock
mov
jl
jnp
scas
adc
push
jg
mov
push
test
push
cltd
pop
jne
mov
pop
adc
sbb
lock
movsl
test
stos
push
add
jg
cli
roll
jo
or
mov
and
mov
or
fmull
sbb
mov
pop
mov
push
test
push
and
orl
push
ficomps
lret
inc
and
xchg
and
in
mov
add
movsl
dec
fisttpl
je
fsub
divb
std
or
jl
lds
push
out
shll
sahf
jno
dec
cs
sahf
inc
lcall
aad
fwait
lret
cmp
push
jo
or
fsubrs
call
scas
jnp
lock
jne
jno
cmp
test
jle
pop
aam
mov
mov
addb
mov
jne
punpckhdq
rclb
test
stos
daa
rclb
inc
mov
cmp
ficoml
jecxz
inc
pop
icebp
fnstenv
xor
push
xchg
mov
stc
mov
pop
stc
dec
popf
insb
popf
adc
fwait
and
aad
lahf
and
fs
int3
adc
mov
test
mov
sub
jg
jnp
inc
pop
sbb
pop
xchg
cmp
or
leave
add
pusha
push
xchg
lcall
movsl
stc
in
pop
hlt
xor
call
jle
jmp
mov
std
dec
int
jbe
push
mov
add
fucom
or
cwtl
dec
iret
xor
pusha
mov
mov
jge
adc
jae
rcrl
sub
dec
mov
sbb
loopne
ret
jge
insb
push
repnz
xchg
inc
adcb
sub
pop
int
ss
mov
cmp
cs
lock
push
jg
fmuls
add
mov
push
stc
xor
adc
inc
into
sub
daa
je
sub
pop
jb
aam
sub
popa
and
fisttpll
push
adc
or
xchg
mov
loopne
push
sub
push
addb
push
jmp
push
inc
inc
and
outsl
ds
out
or
cld
hlt
or
imul
adc
loopne
les
in
add
mov
jl
repnz
or
pop
hlt
jmp
je
inc
xlat
popf
incl
pop
sbb
int3
inc
mov
shlb
roll
out
bound
jb
inc
sahf
iret
jnp
add
aaa
out
inc
pushf
fiaddl
mov
push
lds
xor
scas
xchg
arpl
outsb
popf
shrl
jle
movsl
push
mov
lret
push
push
inc
mov
mov
test
icebp
sub
out
add
sub
xor
test
fdivrs
xor
xor
fsubrs
sbb
or
in
sub
icebp
cld
incb
insl
movsl
xchg
xchg
xchg
xchg
dec
dec
mov
in
ffreep
lret
sub
fldl
out
push
sahf
xchg
push
data16
inc
jns
push
arpl
out
jo
stos
dec
xchg
cmpb
hlt
jne
icebp
mov
js
mov
dec
repz
sub
mov
mov
in
xor
stos
sub
add
pop
mov
inc
js
mov
inc
pop
lea
ljmp
fstpt
sbb
adc
xor
and
je
imul
xchg
int
adc
push
in
jb
fs
test
mov
pop
imul
imul
push
int3
push
adc
sahf
enter
fisubrl
in
dec
bound
mulb
xchg
int3
sub
daa
sbb
or
add
inc
xchg
int3
adc
or
int
es
mov
je
jae
cmp
fstl
dec
popa
cmpsl
mov
or
or
adc
int
sbb
inc
and
adc
xor
lods
sti
dec
fists
add
push
push
ret
add
movsl
cltd
popf
push
int
out
cli
jge
sarb
test
lods
ds
dec
dec
je
cmp
lods
xlat
leave
sbb
repnz
stos
fwait
addb
adc
outsl
decl
sub
ljmp
mov
fwait
push
les
dec
xchg
jb
leave
decl
daa
and
adc
pop
roll
dec
inc
jl
or
jne
inc
inc
add
pop
movsb
mov
inc
jmp
xor
pop
jb
popf
mov
xchg
and
ret
adc
dec
sbb
idiv
pop
sahf
ret
dec
xchg
cmp
orb
cld
jne
cmp
mov
int3
jo
mov
ss
mov
xor
test
pop
xor
cmpb
stc
push
mov
pushf
xor
xchg
ss
jbe
dec
lahf
cltd
jmp
cwtl
xchg
xor
adc
push
pop
test
push
adcb
out
push
dec
in
das
daa
pop
cmp
add
push
idivb
or
shll
sbb
cs
mov
jmp
adc
in
mov
mov
mov
into
mov
xor
in
jl
fs
lock
jecxz
mov
add
lock
cmpsl
and
jle
nop
pop
addl
sub
cmp
mov
lods
hlt
jecxz
or
sbb
je
fs
ja
cmp
pop
push
xor
lods
outsb
mov
ret
stos
add
aad
mov
pushf
inc
repnz
ja
sbb
test
or
mov
cmpl
jb
cltd
push
xchg
or
mov
addr16
loope
add
xchg
das
arpl
test
mov
sbb
inc
cwtl
aaa
lcall
cmc
test
add
pop
push
loope
dec
push
shll
or
jecxz
rorl
fidivl
jo
push
jo
sti
std
adc
or
enter
aaa
pop
std
mov
pop
nop
dec
push
leave
test
add
and
jns
cmc
adc
into
repz
xchg
push
jne
fwait
or
and
push
mov
xchg
mov
lret
sbb
dec
add
mov
sub
stos
inc
mov
roll
data16
insl
in
pusha
sti
inc
pop
adc
push
pop
pop
outsl
and
mov
push
scas
imul
je
or
pop
cmp
jg
mov
stos
lahf
jo
insb
adc
mov
mov
mov
add
ret
adc
push
xor
mov
pushf
mov
leave
mov
xor
mov
ss
or
or
xlat
inc
lock
aaa
and
mov
xchg
xchg
lcall
addb
cld
dec
or
mov
test
push
push
pop
lcall
or
pushf
stos
jns
push
pop
mov
xchg
push
rcr
mov
dec
mov
cwtl
iret
mov
cmc
mulb
repz
sahf
push
mov
pop
adc
call
push
js
and
mull
inc
mov
or
or
js
or
icebp
jp
inc
int3
mov
add
lret
push
dec
cmc
xchg
or
mov
inc
leave
test
cli
sahf
mov
add
mov
sub
and
inc
out
outsb
aad
add
sbb
fstl
sbb
repnz
xor
cmc
jp
fwait
mov
je
les
aas
xchg
lods
or
insb
or
sub
insl
pop
lret
mov
mov
orb
mov
mul
cmp
and
inc
popa
dec
inc
lock
lods
fnstsw
fwait
imul
mov
pop
and
adc
add
cmp
aaa
pop
fucomi
ret
cs
mov
int
ja
js
dec
fdivl
pushf
add
jecxz
in
mov
add
rolb
push
inc
adc
jle
xchg
ljmp
mov
mov
jbe
loope
jbe
insb
outsl
notl
push
lock
mov
inc
movsb
test
clc
pop
pop
lret
push
bound
pusha
cmp
jmp
les
into
movl
aad
mov
notb
xchg
pop
das
fwait
out
push
pop
cmc
icebp
cmp
imul
jb
mov
fwait
into
mov
push
out
cmpsb
xlat
into
cwtl
out
js
mov
ja
les
lds
imul
dec
in
fs
jge
mov
dec
or
ss
adc
mov
sub
mov
pop
dec
mov
pop
int3
rcl
lods
mov
mov
or
daa
push
in
int3
xor
gs
inc
insl
test
movl
test
dec
pop
outsb
aam
sahf
pop
jbe
in
pop
jnp
mov
aaa
jge
sti
jno
mov
daa
or
mov
mov
add
mov
xchg
lock
pop
and
sbb
dec
add
shrb
jmp
stc
xchg
nop
pushf
xchg
pop
das
jl
inc
sbb
test
fs
sbb
negb
loop
pusha
mov
test
xlat
xor
ljmp
pop
enter
pop
movsb
mov
int
pop
fiadds
adc
mov
cmp
pop
je
add
pop
sahf
or
or
ss
xchg
sti
pop
insl
inc
insl
or
pop
ret
popf
ja
adc
inc
mov
rcr
mov
mov
dec
nop
in
jmp
fs
and
fistl
add
leave
inc
mov
jmp
pop
add
scas
cmpsl
jmp
push
mov
bnd
jns
int3
and
lahf
test
inc
aam
aas
and
pusha
cwtl
inc
addr16
adc
pop
cld
mov
xchg
ret
out
popa
sbb
cltd
or
arpl
xchg
jg
dec
insl
xlat
inc
adc
enter
jg
xor
mov
imull
dec
lahf
and
xchg
in
cmp
sub
dec
stos
enter
dec
xor
xor
jae
or
xchg
and
jae
pop
xchg
hlt
movsl
push
test
sub
push
pop
dec
push
pop
push
fistpl
test
int3
icebp
xor
or
xchg
xor
mov
scas
ret
jp
sarl
dec
mov
insb
jo
lret
fwait
movsb
sub
lods
push
clc
call
jnp
into
xlat
mov
inc
pop
mov
fwait
lcall
mov
sbb
push
lods
inc
pop
mov
pop
mov
sbb
fstp
lahf
dec
int3
cs
orb
loope
stc
aad
adc
xor
sahf
fildl
and
clc
pop
sub
and
aaa
fs
aam
mov
inc
sub
insl
outsl
mov
dec
push
add
add
cmp
mov
mov
xchg
adc
inc
aas
ret
imul
pop
inc
and
mov
push
add
inc
decl
or
inc
cltd
and
jle
jb
lods
popf
xchg
js
fnsave
xor
jge
xchg
lcall
cli
shll
adcb
jg
adc
mov
lea
push
imul
shr
test
cmp
jg
cmp
outsb
mov
pop
pop
or
fcoms
stos
push
iret
loope
sbb
aas
xor
call
sbb
std
jge
enter
and
lods
nop
fsubl
out
int
repnz
push
jae
inc
int3
lret
je
sbb
sti
movsl
jp
imul
sarl
push
and
xor
nop
jecxz
push
popa
arpl
mov
rcll
je
pop
or
cltd
aam
ss
ret
decl
pushf
mov
rcrb
aam
lock
aam
arpl
xor
sub
add
xor
mov
add
jbe
jnp
xor
sti
or
scas
scas
add
pop
mov
inc
daa
ds
dec
dec
jb
sbb
in
call
je
inc
movsb
add
inc
mov
std
je
enter
popf
cld
jb
sub
xchg
add
ljmp
or
cmpsb
sbb
jbe
xchg
insl
mov
addl
js
push
mov
fiadds
or
ljmp
cmp
stos
xor
leave
test
imul
cli
shlb
shlb
adc
adc
scas
popf
jno
mov
and
add
and
add
adc
mov
stc
xor
mov
xlat
stos
cmp
iret
jmp
mov
mov
ret
sbb
lods
into
mov
dec
pop
repz
aad
inc
xchg
scas
leave
push
or
sub
imul
pop
orl
popf
mov
adc
subl
or
sbb
pop
or
les
pushf
pop
std
in
test
xor
mov
push
add
jns
testb
xchg
jecxz
push
insl
lds
mov
pop
in
sbb
add
pop
div
repz
and
fdivr
pop
clc
and
and
sub
pusha
sbb
cmp
cmp
jge
fsubl
cmpsl
jae
adc
pop
dec
aaa
xchg
dec
lss
outsl
or
out
cmpsb
insb
leave
adcl
pop
or
sbb
jle
icebp
ret
push
and
jge
mov
dec
icebp
cmpl
ret
push
fcoms
mov
icebp
jl
out
in
mov
lods
dec
mov
rclb
mov
shl
push
cmp
into
pop
fidivl
xor
loopne
jns
mov
pop
lds
and
push
pop
jbe
insl
pop
cmp
mov
scas
jmp
aas
push
xor
add
mov
insb
sub
mov
clc
ret
pop
shll
xlat
hlt
rcl
push
pusha
pushw
fsts
mov
push
inc
and
dec
jmp
mov
cs
ret
cmpsl
inc
ss
out
jae
lods
push
add
repz
icebp
pop
mov
or
sbb
push
mov
repz
pop
xchg
out
lret
ja
and
ret
rorb
push
pop
bound
in
fs
fs
stc
sahf
xor
aam
jne
xchg
and
pop
xchg
mov
cli
dec
cltd
fwait
push
pop
pop
and
xor
int
bound
ret
sbb
cld
in
cli
xor
dec
jnp
sub
push
pop
push
mov
jne
fadds
sbb
arpl
loop
cmp
mov
jmp
sub
pop
loop
mov
cld
push
xor
cmp
mov
mov
mov
addl
adc
sbb
push
jbe
decb
sbb
xor
enter
sbb
popl
sahf
and
in
or
call
push
gs
fsubs
lods
mov
cmpb
in
cmpsl
insb
mov
pop
cld
and
sub
dec
xchg
jp
mov
loopne
sub
movsb
jmp
inc
cmp
fldl
mov
mov
cli
in
aaa
sbb
xor
es
or
movsb
pop
pop
hlt
pop
sbb
xchg
sbbl
ret
iret
mov
xchg
pop
cwtl
inc
hlt
loope
fistl
or
inc
fs
pop
dec
pop
adc
dec
rcl
and
je
or
and
push
imull
pop
adc
add
loopne
repz
mov
cmp
out
ja
jb
mov
fcmovnb
push
ret
push
xor
jmp
rcll
jle
mov
aas
sub
in
sbbl
xor
pop
mov
xchg
rorb
xor
jns
add
icebp
out
xorl
dec
ljmp
sub
pop
movsl
fdivrs
inc
sub
dec
push
out
ja
jge
fldenv
pop
vpcmpeqb
xchg
mov
notl
in
or
push
pop
jg
mov
pop
pop
jb
jns
mov
aaa
mov
popf
or
inc
sub
cli
or
xor
sbb
cmc
push
jg
dec
and
push
jle
push
fdivrl
sbb
icebp
stos
js
mov
and
cmp
fs
out
loop
pushf
push
imul
std
out
pop
aaa
lret
add
pop
outsl
xchg
cltd
mov
fdivs
fadds
or
cmp
es
imulb
or
mov
inc
mov
sarb
or
stc
sub
sbb
jbe
ss
push
dec
jb
ljmp
xchg
gs
div
nop
cmp
fs
push
push
aaa
mov
aaa
rcrb
mov
lahf
sub
popa
enter
in
inc
push
les
adc
pop
jnp
int3
mov
xor
popa
push
adc
mov
dec
sbb
and
scas
lret
xlat
cmpsl
mov
jne
cld
pop
dec
xor
ja
les
imul
dec
xchg
test
jbe
rcrb
inc
cs
ljmp
shll
ljmp
sahf
outsl
fdiv
out
mov
outsl
sbb
and
cmpsb
push
jns
add
push
mov
xor
mov
lds
or
rolb
add
xor
jo
xor
mov
mov
sub
loope
divb
scas
int3
adc
out
add
pop
stos
aam
and
push
pop
push
and
and
cli
leave
mov
gs
hlt
push
xchg
test
and
lret
std
ret
test
lods
adc
or
loopne
sbb
cltd
cltd
dec
popf
xchg
bound
addr16
sub
add
pop
jbe
xchg
adc
add
push
aas
aaa
test
sub
icebp
adc
fsubr
sbb
mov
nop
cld
hlt
cmp
adc
aam
sub
movsb
mov
faddp
in
and
std
fcoms
lods
in
jno
pop
iret
dec
mull
lret
mov
and
pop
adc
add
inc
dec
xchg
int
icebp
in
cs
in
jne
hlt
outsb
jl
stos
dec
mov
push
xor
or
xchg
mov
sti
sub
rcrb
testb
sub
push
jl
cltd
jmp
push
stos
sub
mov
mov
or
and
lcall
sbb
dec
push
arpl
lods
lods
mov
jg
cli
mov
adc
pushf
scas
inc
imul
mov
loopne
and
rclb
data16
ficomps
es
or
cs
imul
stc
jg
jecxz
jae
pushf
pop
or
inc
or
mov
xchg
jae
sbb
mov
sub
push
push
push
xor
aad
xlat
xlat
dec
xchg
ljmp
shrl
lea
out
outsb
and
fs
es
and
mov
xchg
push
or
dec
loope
std
xor
jae
or
jbe
stos
push
pop
pop
push
fs
fmuls
repnz
lock
mov
pop
outsb
mov
xchg
and
adc
sub
mov
adc
sarb
xor
in
popf
adc
inc
jge
dec
jecxz
gs
xor
cmc
stc
mov
add
cmp
add
push
push
or
mov
mov
mov
repnz
inc
jmp
rcl
into
icebp
mov
outsl
les
jmp
std
mov
lds
xchg
loope
adc
dec
sub
ljmp
sahf
mov
cmp
pop
jne
inc
insb
subl
jecxz
pop
jmp
fildll
mov
sub
test
aad
inc
jecxz
out
and
stos
pushf
lock
aad
inc
pop
repnz
lods
in
pop
jmp
popf
test
or
or
pop
je
and
call
xor
push
or
nop
lahf
out
and
dec
fwait
pop
xchg
hlt
push
fnstcw
push
inc
mov
ja
cmp
xchg
sbb
mov
jno
inc
hlt
jg
mov
lcall
in
aas
mov
arpl
dec
cmp
les
je
xchg
fsubrs
sbbb
je
les
ds
int3
test
push
and
in
mov
sarl
sarl
push
push
call
inc
test
xlat
adc
popf
aad
mov
fsqrt
loopne
push
jno
xchg
sbb
out
sub
mov
lock
enter
xor
scas
test
in
stos
test
dec
adc
mov
mov
push
sahf
bnd
cmp
push
fnstsw
sbb
in
xchg
or
pop
insl
xchg
xchg
jns
repz
xor
popf
or
cltd
mov
mov
dec
add
cmpsb
and
jmp
mov
ljmp
sbb
rcr
sti
sahf
push
fistl
rcll
xchg
fdivrs
sub
mov
imul
mov
adc
pop
lock
das
or
sbb
fidivs
and
cwtl
push
popf
xlat
insl
xor
cmpsl
inc
lock
in
repnz
jne
and
mov
stos
and
mov
test
mov
sub
js
andl
sar
pop
or
shlb
outsl
push
mov
adc
adc
mov
mov
mov
mov
jb
mov
mov
jge
dec
dec
mov
in
cwtl
pop
pop
jbe
inc
aam
pop
cmp
das
daa
cmpsb
insl
fyl2xp1
mov
pop
sahf
fs
sub
addl
lcall
inc
in
or
jns
adc
sbb
aad
cmp
ret
or
dec
out
and
xor
mov
jne
repnz
jnp
stos
sbb
lahf
les
jo
shll
mov
stc
mulb
das
mov
dec
jb
lods
push
das
add
dec
mov
pusha
jp
jbe
xchg
and
out
xor
cmp
hlt
js
outsb
and
xchg
push
sub
cld
stos
cwtl
or
mov
inc
imul
pop
adc
push
pop
lret
nop
jne
ret
scas
jecxz
pop
dec
pop
sub
pusha
push
pop
jl
int
mov
cmc
in
mov
mov
inc
ds
imul
std
sbb
roll
push
push
arpl
mov
pop
mov
inc
dec
mov
xlat
addr16
jnp
dec
daa
or
xchg
scas
ds
jbe
lods
xchg
loopne
cmpb
sbb
add
lret
xchg
movsb
andl
gs
mov
movsl
out
push
pop
cmp
push
ret
adc
aas
aad
cmc
sti
mov
pop
lds
sub
out
aaa
adc
sbb
ljmp
xor
xchg
xor
hlt
sbb
cmp
out
icebp
mov
cmp
data16
mov
add
mov
test
stos
mov
in
mov
push
int3
adc
icebp
add
push
or
jbe
and
push
mov
xchg
add
mov
int
adc
or
inc
and
loope
push
push
aaa
out
xchg
std
xor
jbe
adc
xor
sbb
jg
mov
outsl
lea
lret
jae
adc
popa
pushf
xchg
ds
mov
xchg
xchg
pop
int
lret
push
inc
adcb
stc
outsl
xchg
add
push
pop
add
jns
push
jbe
leave
fmuls
data16
test
xchg
jb
das
jbe
sub
fadds
push
sub
cmp
xor
loopne
enter
mov
jne
data16
pushf
call
mov
mov
add
nop
cli
cwtl
aad
jns
out
cmp
mov
jmp
insb
jl
fucomip
xor
cs
jl
cs
xor
scas
dec
aad
adc
push
popa
fwait
mov
add
cmp
jp
add
popa
dec
popa
sbb
pusha
push
pop
stos
popf
fnstenv
cmc
scas
repnz
ret
into
adc
enter
xor
sub
sub
scas
pop
ja
imul
into
scas
xchg
inc
js
xlat
sub
jae
dec
imul
adc
out
and
pop
mov
mov
mov
dec
and
mov
lods
sbb
repnz
cmp
nop
in
stc
sahf
mov
fcmove
lds
fcoml
popf
stos
sub
dec
lahf
cmp
add
xchg
leave
add
cmp
sahf
lods
xchg
mov
pushf
push
mov
jmp
cmp
cmp
xchg
sub
in
js
mov
faddl
push
stos
mov
xchg
pop
dec
mov
xor
or
dec
push
push
ds
push
inc
mov
mov
mov
out
mov
mov
mov
xlat
xor
es
or
adc
add
shr
cld
ja
sbb
xchg
rorb
imul
sbb
mov
lret
cmpsl
xor
mov
push
jle
pop
xchg
lahf
adc
daa
sbb
in
inc
dec
aaa
bound
pop
aad
mov
inc
fldcw
push
mov
int3
repz
jg
adc
cli
aam
sbb
xchg
or
inc
and
mov
scas
lea
hlt
dec
mov
pop
push
push
dec
jns
test
mov
xchg
icebp
clc
shlb
mov
testb
dec
and
mov
loop
and
pop
ret
stos
incl
aad
xchg
lea
ja
fsubs
mov
lret
mov
jo
mov
movsb
mov
out
shrb
and
push
and
xchg
int
dec
inc
aaa
pop
cmp
ss
inc
and
mov
dec
sub
sub
adc
ja
cltd
iret
xor
dec
or
dec
aaa
dec
pop
cmp
add
dec
insb
mov
adc
mov
xchg
xlat
loop
pop
into
negl
addr16
scas
test
and
fldcw
aaa
je
mov
cmpsb
fistps
or
out
fld
movb
out
mov
push
adc
call
and
addl
cmpsb
pop
repnz
mov
ja
testb
popf
xchg
dec
fdivr
inc
xchg
jl
mov
aas
das
and
into
pop
std
jecxz
repz
in
inc
daa
movsbl
jnp
or
lds
scas
jno
sbb
pop
into
jb
fucomp
lea
jno
cmc
cmp
xor
nop
pusha
jne
pop
aas
adc
inc
sub
or
and
mov
mov
dec
xchg
leave
adc
mov
xlat
jo,pn
ja
mov
xchg
js
sub
in
adc
cmc
dec
adc
in
mov
or
cld
in
outsb
fdivrl
dec
test
fisttpl
sarl
mov
fs
ja
pop
xor
inc
sub
lret
jge
sbb
sub
xor
je
jb
mov
mov
daa
sbb
mov
iret
in
xchg
addr16
xchg
adc
addr16
xchg
mov
xchg
pushf
test
mov
mov
mov
xchg
and
out
daa
jb
cmpsl
jnp
mov
jp
lcall
lcall
jnp
jno
push
stc
cmp
js
cwtl
mov
out
arpl
inc
stc
sbb
sbb
out
lret
inc
pop
add
js
sbb
mov
jns
sub
leave
and
repz
mov
mov
stos
jbe
jno
dec
test
out
out
std
add
or
nop
popa
repz
shrb
sub
sbb
ds
es
out
int
shll
not
cmpl
xchg
cld
xor
fdivl
bound
mov
stos
sub
fcomps
inc
pop
inc
div
sbb
add
pushaw
andps
push
cli
jno
lcall
xor
repnz
push
out
ffreep
xchg
inc
dec
pop
pop
jno
fwait
lcall
mov
and
push
gs
sarb
aam
ds
inc
mov
call
iret
jle
mov
add
mov
push
dec
and
or
add
xor
add
fisubrs
in
mov
jmp
icebp
push
xor
jae
xor
addb
jg
push
sahf
mov
mov
hlt
xor
fistl
dec
rcrl
cltd
std
fsubs
push
cmc
clc
int3
jb
pop
imul
mov
inc
jae
inc
mov
mov
sti
sahf
sub
loopne
lea
mov
push
cltd
cwtl
jno
jnp
mov
mov
or
jecxz
or
xor
dec
sbb
je
and
dec
mov
test
xchg
je
loopne
pusha
dec
or
lahf
ds
scas
lret
pop
or
dec
daa
hlt
xchg
ror
imul
and
fldenv
stc
jge
push
sbb
cmp
and
inc
aam
loope
lods
and
mov
fstl
dec
sub
adc
push
bound
rorl
das
arpl
or
xlat
hlt
lret
push
mov
fstpt
mov
mov
mov
nop
divb
in
test
loopne
jl
dec
push
lods
sub
adc
popf
aaa
sub
decb
cmpsb
ds
outsl
popf
mov
sub
hlt
xlat
push
jp
jp
mov
jnp
in
pop
sbb
xchg
insb
mov
pop
sub
or
add
fdivr
inc
mov
lods
out
push
call
pop
mov
orb
shrb
out
loope
mov
jbe
scas
push
test
aam
cmp
inc
loope
mov
pop
out
or
xchg
les
inc
sbb
adc
jle
cmc
pop
fcoml
test
fsubl
fidivrl
mov
jns
xchg
mov
popf
push
lods
out
sbb
add
imul
adc
dec
inc
mov
jne
adc
fiaddl
std
enter
fisubl
jecxz
inc
mov
aaa
dec
and
push
jge
gs
xchg
xchg
js
mov
mov
xor
test
aad
negl
inc
enter
push
mov
mov
leave
pop
cmp
sub
mov
mov
jno
sub
call
inc
inc
xchg
jp,pn
dec
outsb
test
mov
mov
xor
clc
sbb
adc
and
pop
fsubrs
jmp
lret
jge
and
dec
fwait
jbe
xchg
insl
jae
adc
stc
cmpsb
les
mov
jg
rorb
jno
movsb
clc
push
xor
les
xor
das
cs
insl
idivl
mov
mul
pop
data16
loopnew
lock
cmp
mov
fwait
popf
push
cmp
pusha
xchg
notb
xor
icebp
repnz
or
lock
and
pop
fistl
insl
jmp
out
xor
cmp
sub
add
adc
das
push
xchg
clc
push
and
out
daa
mov
aam
push
test
lds
push
mov
jp
add
pop
pop
mov
mov
dec
decb
movsb
mov
xchg
jne
mov
push
in
fiadds
push
out
xchg
lea
cld
lock
fucomip
mov
pushf
mov
jae
roll
sbb
std
push
push
adc
lret
fwait
loop
fisttpl
mov
lret
mov
mov
add
add
ljmp
int
shll
scas
sub
pop
es
push
popl
pushf
lds
test
out
push
mov
stos
stc
jg
out
insb
repnz
sbb
movsb
pop
xchg
hlt
pop
shlb
push
xor
inc
sbb
pop
pop
inc
push
std
cmc
jl
sahf
push
leave
mov
xchg
in
movsb
xor
insl
or
xchg
aas
sahf
dec
popl
jg
add
and
lret
mov
mov
mov
jmp
int3
xchg
or
inc
jg
scas
popa
dec
xchg
popf
xor
aam
and
leave
aaa
lods
adc
test
sbb
jnp
into
nop
xchg
test
sbb
xchg
leave
outsb
cwtl
aas
pop
mov
lcall
or
jp
add
repnz
jns
jns
je
mov
arpl
pop
dec
shl
mov
jno
scas
xor
xor
scas
cmpsb
jmp
push
push
or
mov
int
mov
inc
add
push
ljmp
jno
leave
aaa
cmp
or
insl
xlat
ret
pop
adc
and
lds
xchg
mov
sub
pushf
push
or
fldl
nop
shrl
imul
rcrb
push
shrb
mov
adc
int3
pop
xchg
pop
adc
aas
pop
ds
lds
test
cmp
mov
outsb
fsubr
add
test
ret
add
mov
int
and
jmp
xorb
inc
xchg
push
outsb
out
shll
popf
jecxz
sbb
or
fimuls
dec
mov
sbb
add
incb
cld
inc
inc
cmc
xchg
cld
pop
pop
je
jns
pop
roll
dec
out
mov
sub
xchg
mov
pop
mov
push
and
xchg
sub
inc
js
cmp
cwtl
sub
subb
es
inc
adc
in
lahf
mov
repz
pop
jo
ret
inc
icebp
fdiv
lahf
mov
imul
sbb
in
jo
in
pop
jb
push
lods
cmp
inc
loope
lret
es
pop
repz
sbb
ror
jmp
into
jmp
jbe
push
dec
test
jmp
jb
and
ficompl
rcll
push
jno
ljmp
adcb
cmpsb
in
mov
int
les
jno
inc
rclb
outsb
repnz
push
jb
shr
out
sub
push
inc
lret
jbe
xchg
push
pop
pop
popf
es
dec
dec
push
inc
xor
mov
push
sbb
cmp
dec
or
adc
fsts
pop
and
sub
push
pop
popf
outsl
daa
cli
or
xchg
out
das
or
mov
mov
fsubl
pop
inc
js
rcrb
xchg
push
clc
addr16
in
jo
mov
shrb
int
sarb
scas
mov
iret
divb
mov
mov
xlat
cmc
cli
les
mov
ss
mov
sub
jno
dec
fwait
xlat
fstl
stos
pop
jo
cmp
ficomps
add
pusha
addr16
sub
adc
jle
fs
add
daa
roll
fsubl
sbb
sarl
in
push
sbb
lret
ret
cli
inc
add
iret
roll
leave
jl
leave
mov
stos
jecxz
xor
jecxz
sahf
pop
cmp
ficoml
cli
pop
pop
xchg
repz
fidivl
mov
lds
sti
iret
jecxz
cmp
les
jmp
cli
pop
inc
daa
dec
push
rcll
sarl
push
inc
bnd
or
aas
lret
mov
fiadds
jbe
ljmp
and
shrl
mov
clc
mov
and
movsb
mov
mov
js
fsub
pop
xchg
or
push
xchg
mov
loope
stos
add
mov
adcb
stos
xorb
push
and
inc
jbe
ss
test
inc
call
cmp
add
sti
cmp
das
or
stos
push
mov
cltd
pop
or
push
stc
or
jl
push
jo
push
lds
adc
dec
jns
mov
popf
push
jge
aaa
ss
fldcw
lret
test
inc
ds
cmp
dec
or
xor
mov
jbe
jecxz
fiadds
xor
imul
sahf
stc
inc
lcall
pop
test
jecxz
cmp
dec
jns
mov
lea
fldln2
jg
test
jge
pusha
popf
sub
mov
xor
gs
adc
rcrl
cmpsl
pop
insl
fst
in
sub
sub
xchg
adc
mov
or
cmp
add
push
insl
jp
push
mov
mov
sub
mov
mov
xchg
xchg
push
xchg
sub
je
cmpsb
inc
jg
xchg
adc
andl
mov
xor
inc
sahf
dec
mov
das
mov
jle
sub
and
bound
addr16
fnstsw
cmp
inc
lahf
in
dec
inc
lds
cs
ret
pop
adc
jnp
ret
or
sub
dec
outsl
push
add
mov
mov
flds
mov
or
inc
cld
clc
movsl
ret
xor
push
mov
dec
pop
rcrl
push
xchg
lea
pop
dec
dec
lret
out
fidivrl
addb
cld
movsl
mov
cs
lods
mov
sbb
mov
roll
mov
hlt
ds
scas
xlat
sub
loop
orl
add
scas
dec
int
loope
js
mov
inc
adc
xchg
subl
adc
outsl
jmp
ljmp
and
subb
sub
inc
test
js
fcomip
es
in
sbb
loop
inc
inc
push
sbb
aad
jp
sbb
adc
mov
stc
inc
fisttpl
lret
push
pop
sbb
aad
outsl
cmp
dec
xchg
movsb
enter
and
sbb
push
arpl
out
loopne
add
rorb
inc
lock
cmp
xor
xchg
prefetcht1
lock
sub
and
cwtl
jne
add
ljmp
xchg
or
and
addl
jp
mov
push
aas
fistpl
loop
or
push
add
mov
push
pop
dec
out
push
fbstp
xchg
stos
pop
xor
mov
ret
push
ja
adc
lret
popf
mov
inc
cmp
mov
imulb
xlat
sar
rcrl
daa
imul
push
jo
push
adc
lcall
imul
es
imul
bound
fwait
ljmp
repz
lret
dec
add
pop
jge
jge
dec
clc
cmp
stos
add
pop
dec
sub
mov
lods
mov
push
outsl
lcall
mov
or
lret
imul
lret
mov
popf
lea
adc
test
pop
or
ss
repz
pop
cmc
pop
call
dec
fsts
out
push
insl
add
filds
aam
jp
enter
test
sub
subl
ret
sbb
cmp
mov
xchg
or
rcl
xchg
fwait
mov
icebp
and
mov
and
in
cmc
and
sub
cmpsb
ss
mov
test
hlt
push
dec
nop
sub
mov
out
cmc
jmp
sbb
sarl
cmp
mov
clc
push
dec
push
decb
rcll
xor
pop
and
out
jnp
or
inc
das
push
add
movsl
jecxz
cmp
scas
cmp
cmp
xchg
popa
jl
imulb
mov
cmpsb
xchg
jnp
fdivl
loope
mov
mov
inc
call
lret
dec
cli
jne
aaa
jb
push
pop
xchg
ret
cld
jo
and
lea
nop
or
mov
movsl
xchg
mov
enter
aaa
lret
dec
dec
and
add
xor
pop
or
adcl
xor
push
faddp
add
shll
inc
fildll
add
cmp
jnp
movd
iret
mov
sti
cld
pop
dec
sbb
loopne
lret
sub
or
inc
push
or
mov
inc
jno
scas
xorb
aaa
xor
leave
and
pop
xchg
push
movsl
sti
fildll
cld
movsl
bound
or
loop
sub
int3
or
cmpsb
test
lcall
out
mov
add
sub
xchg
dec
push
push
push
cld
outsl
push
jo
and
in
ucomiss
push
cmpsl
mov
mov
cmpsl
adc
mov
out
sub
sti
inc
pop
enter
xchg
scas
mov
inc
mov
cmpsb
aaa
cwtl
cmp
addb
jno
out
xchg
ret
cltd
mov
jmp
mov
add
mov
xchg
xor
mov
inc
lret
mov
andb
mov
mov
mov
dec
addb
outsb
leave
cltd
xlat
add
xor
orl
ja
test
or
rorb
cmp
call
sub
mov
or
fcmovb
mov
ljmp
repnz
sbb
push
std
loopne
loopne
mov
cmpsb
test
lahf
push
xor
cmp
popa
fmull
aas
imul
cltd
loope
sub
dec
inc
shlb
inc
cmp
add
sub
dec
repnz
loope
mov
add
xchg
jecxz
or
jno
mov
cmp
pop
stos
fisubrs
daa
mov
mov
jno
hlt
or
mov
lods
sbb
mov
xor
test
dec
js
test
fwait
dec
adc
mov
push
pop
mov
imul
sub
lods
push
dec
xor
inc
into
or
xchg
les
push
or
gs
adc
fisubs
and
jg
subl
push
adc
dec
sti
mov
xor
les
sub
fisubrs
ret
bound
mov
and
and
dec
ss
push
pop
mov
xchg
aam
pop
in
pop
ds
mov
mov
or
out
mov
mov
inc
push
ret
pop
and
ret
sbb
sbb
std
out
push
fdivs
or
ret
adc
cld
dec
ss
adc
shll
mov
xor
enter
int3
mov
inc
fdivr
js
xorb
outsb
pop
stos
pop
pop
inc
mov
fidivrl
push
cmp
aas
loope
inc
jmp
mov
xor
fbld
mov
cmp
adc
cmp
xor
xchg
mov
add
xchg
jo
lds
adcb
je
je
cmpsl
dec
mov
add
jno
mov
movsb
xchg
in
fsubrp
rolb
fs
cmp
pop
test
pushf
shll
xor
loopne
fdivrs
adc
out
idiv
pusha
mov
add
inc
mov
jb
mov
pop
loop
xor
fsubl
bound
and
mov
mov
jo
mov
arpl
aaa
out
iret
push
mov
enter
jmp
popf
xor
cmp
addr16
popa
mov
mov
or
dec
mov
mov
ljmp
push
inc
inc
jl
pop
jp
push
mov
dec
popf
shll
mov
xor
or
adc
hlt
insl
lret
mov
lock
cmp
push
or
incl
rorb
jb
cmp
insl
push
cwtl
sti
stc
jo
inc
fists
pushf
push
rcll
rorb
sahf
in
cmp
mov
dec
mov
in
mov
cld
imul
adc
jg
in
rcll
or
test
je
jnp
jg
sub
stos
mulb
imul
mov
mov
pop
mov
push
mov
es
mov
cli
add
loop
arpl
iret
or
push
push
loopne
mov
jl
jecxz
jbe
dec
adcl
aam
xor
jne
lock
lret
jnp
xor
ss
outsb
sbb
mov
jnp
gs
ret
cwtl
cmp
inc
lret
mov
pop
lods
jb
or
lock
and
push
add
lahf
gs
cmc
aas
xor
aas
xor
mov
xchg
in
rcrb
mov
push
add
pop
popf
lods
xchg
dec
mov
aam
inc
mov
rolb
jg
mov
cwtl
mov
pushw
sbb
inc
loopne
cmp
ljmp
jns
nop
fistps
es
cmp
pop
push
adc
add
repz
cmp
cwtl
daa
test
nop
cli
jbe
insb
mov
lret
sbb
fs
repnz
jbe
lds
pop
dec
or
and
jmp
negb
pop
ljmp
jle
fnsave
loopne
leave
in
mov
xor
loopne
pushf
sub
shrl
scas
pop
cmc
or
rorl
pop
add
clc
add
mov
mov
mov
inc
fs
test
push
cmp
mov
leave
jp
or
mov
ret
out
test
mov
test
add
push
add
insb
mov
sbb
or
rcll
and
mov
pop
xor
ret
ret
fwait
push
int3
cmpsb
scas
les
mov
push
stos
pushf
dec
out
add
push
xor
mov
inc
adc
insl
out
stc
fwait
cwtl
call
mov
jl
fwait
jbe
mov
push
orl
fsubs
cwtl
aad
jmp
addb
inc
fisubrl
stc
xchg
dec
ficoms
ret
arpl
xor
in
mov
insb
dec
cmp
outsb
out
xchg
insb
add
push
mov
imul
jnp
jecxz
jp
or
mov
test
pop
xchg
xor
shrl
icebp
lahf
stc
pushl
jge
test
xor
pop
icebp
into
pop
and
cs
out
xchg
movsb
leave
outsb
frstor
mov
test
add
stos
insb
fstpt
dec
xor
aad
xchg
ss
data16
out
pop
lcall
xchg
adc
std
int3
mov
mov
popf
add
fwait
loopne
cmc
mov
pop
push
sub
xor
push
inc
je
iret
pop
lock
adc
mov
lods
divl
insl
cmp
rorl
mov
dec
test
cmp
cmpsl
inc
out
clc
sarl
adc
pop
pop
ficompl
pop
stc
arpl
inc
mov
sbb
lock
leave
sub
icebp
xor
in
ffree
int3
lods
xorb
rorb
into
popa
lret
or
mov
or
ror
sbb
xor
add
lods
mov
xor
or
adc
xor
lods
leave
daa
mov
fcmovb
test
int3
ljmp
mov
mov
inc
addl
inc
ret
xchg
mov
nop
mov
pusha
dec
xor
repnz
gs
fadd
iret
pop
imul
mov
dec
addr16
or
sub
jne
add
mov
outsl
xchg
out
xor
jg
shrb
xchg
rorl
mov
mov
lret
out
outsl
enter
xchg
pop
inc
cli
call
mov
mov
mov
sbb
jb
xchg
push
cmp
inc
add
mov
pushf
into
filds
in
push
xor
jbe
push
call
cltd
rcrl
lret
test
dec
cmp
mov
ret
aam
cwtl
stc
add
mov
xchg
and
and
or
cmpsb
sbb
repnz
nop
sub
sbb
pop
pop
mov
popa
cmp
pop
pop
pop
mov
inc
xchg
or
xlat
mov
jecxz
das
fxch
dec
mov
pop
adc
mov
inc
test
loop
outsl
aaa
rolb
mov
push
outsl
push
xor
leave
push
mov
or
cwtl
enter
mov
mov
loope
call
mov
pop
hlt
bswap
imull
push
mov
rclb
jb
and
jnp
sub
add
or
dec
add
mov
xchg
ljmp
xor
nop
int3
out
lret
ljmp
mov
ja
bnd
adc
push
push
xchg
loop
shlb
xorl
jmp
jge
sub
rorl
mov
xlat
hlt
push
adc
and
mov
shlb
cli
js
jge
out
mov
add
dec
push
sub
mov
push
stos
jle
jg
and
mov
je
orb
cmpsl
sti
pop
dec
test
fstl
pop
shlb
int3
mov
andb
test
mov
and
add
sbb
arpl
ret
jecxz
sub
push
mov
push
mov
aam
and
push
cli
outsl
test
shr
pop
adc
sub
popf
add
cmpsb
mov
lret
outsl
adcb
stc
mov
popf
push
push
jno
jb
sub
inc
inc
adc
sbb
call
mov
cmpsb
fwait
shl
mov
xor
jae
ficoms
sbb
adc
xchg
addr16
inc
sub
inc
cld
add
push
mov
ja
inc
scas
mov
ljmp
js
enter
jbe
xchg
js
xchg
in
and
test
push
jns
mov
mov
fwait
and
xchg
sbb
jno
test
adc
ljmp
out
je
cltd
xchg
mov
fcmovbe
push
fnstenv
ds
cwtl
negb
js
out
xor
mov
fmuls
mov
addl
dec
and
mov
addr16
in
aam
ljmp
inc
pop
dec
and
shlb
or
xchg
shr
cmp
into
lahf
fiadds
fwait
pop
movsl
inc
scas
les
in
mov
push
or
dec
cs
js
out
xor
test
ja
jne
sub
stos
pop
mov
jb
std
aas
fisttps
mov
fidivs
icebp
inc
stos
push
push
push
lods
jp
je
insl
mov
jp
pop
aad
inc
mov
xor
xchg
aaa
xchg
pop
out
out
aad
jae
and
repz
push
insb
mov
popf
xor
into
sti
or
jecxz
inc
cwtl
cli
cmp
hlt
fwait
add
outsl
fnstcw
shlb
sub
in
mov
cltd
jae
pop
or
js
add
cwtl
add
fisubrs
sbb
and
int
sbb
mov
loopne
inc
sub
pop
data16
ljmp
push
adc
int
sub
xchg
or
rclb
add
lea
dec
leave
insl
bound
scas
mov
call
or
fisttps
aam
cmp
cmp
pop
dec
fs
fxch
sub
stos
add
jne,pt
pushf
dec
sti
into
call
push
sbb
cltd
and
xchg
mov
cwtl
xlat
cmpl
cmpsl
cmpsb
sbb
adcb
std
rol
add
pop
xchg
lds
add
ljmp
lods
xchg
faddp
lcall
mov
xchg
shrb
out
test
stos
and
lret
fldenv
or
scas
out
push
or
in
jg
jecxz
xor
pop
cmp
roll
xchg
push
ss
cs
leave
xor
cmpsb
je
sbb
sub
xchg
test
insb
xchg
cmpsb
cmpsb
int3
loopne
ja
fwait
sbb
add
xchg
daa
int
lret
adc
lcall
push
jge
cltd
cmpps
cwtl
lahf
popf
and
stos
push
mov
push
adc
xchg
aas
ja
add
inc
fdiv
adc
mov
fnstcw
lods
push
clc
xchg
mov
ffreep
mov
jne
outsb
mov
data16
lahf
push
into
shr
stos
mov
jno
cmp
or
int
lea
das
fcoml
dec
inc
mov
xlat
incb
sbb
inc
insb
iret
lea
cmc
add
jnp
push
fmull
pop
push
aad
das
mov
mov
mov
cmp
or
int
lods
leave
mov
mov
mov
cmp
aad
inc
clc
gs
jne
subb
das
push
sub
push
scas
in
xchg
lds
adc
adc
push
mov
bound
icebp
clc
and
fidivl
mov
xchg
mov
out
mov
push
aas
in
sub
lret
movsb
cltd
aas
out
and
in
add
inc
es
mov
popa
mov
push
mov
cld
ffree
xchg
jl
push
in
sbb
xlat
lock
arpl
mov
mov
jae
loop
mov
xchg
in
mov
int
sbb
inc
jo
test
push
inc
ret
xor
mov
inc
les
sbb
outsl
dec
fldenv
movsb
add
in
jne
cmc
inc
bound
sbb
dec
loope
out
int3
pop
testb
js
inc
in
jno
loopne
out
mov
add
lds
pop
test
sbb
lret
ds
push
jmp
adc
push
cmp
hlt
inc
ret
hlt
push
mov
sbb
mov
sbb
sbb
xchg
mov
push
adc
mov
imull
insb
and
add
xor
test
fsubp
xlat
jl
xchg
push
movsb
loopne,pt
sbb
cltd
mov
pop
sarb
int
aam
sahf
imul
add
cld
push
rol
sbb
add
out
pushf
pop
push
ror
and
in
sahf
pop
aaa
cwtl
leave
or
or
subb
add
out
fs
and
data16
xor
mov
lds
push
mov
adc
pusha
xchg
dec
fs
fmul
int3
and
xchg
test
or
lcall
aas
jle
std
pop
data16
mov
pop
mov
pop
xchg
mov
rolb
pop
sbb
adc
ret
iret
xor
mov
and
mov
mov
push
ds
pop
out
insb
fidivs
inc
sahf
test
xchg
lea
sti
inc
inc
mov
or
fdivl
mov
pop
add
cmp
pop
pop
inc
popf
jge
sbb
mov
or
mov
mov
inc
in
sbb
call
loopne
xlat
pop
xchg
sbbb
mov
pusha
mov
adc
mov
mov
subl
pop
test
add
insl
jp
sub
call
xchg
push
lods
inc
cmpsb
add
mov
or
iret
mov
js
clc
bound
jecxz
out
fdiv
pop
scas
outsl
jo
gs
push
or
mov
and
mov
push
roll
adc
mov
faddp
push
pop
pop
pop
insb
sub
orl
cwtl
sub
cli
rol
xor
addr16
add
imul
xor
sbb
data16
jle
pop
aas
mov
fs
mov
push
inc
sub
enter
js
xchg
mov
test
fwait
iret
mov
xor
inc
push
xor
dec
push
pop
jp
aad
or
sahf
je
rclb
lcall
pop
js
and
sub
jno
cltd
pop
mov
xor
out
xor
rclb
xor
rcr
sbb
sub
jg
adc
xor
lret
mov
inc
lea
push
push
mov
pop
mov
adc
mov
outsb
sbb
add
mov
imul
rcrl
pusha
inc
imul
push
je
jge
sbb
pop
mov
jp
push
js
inc
xchg
jnp
fisttpll
insl
sti
xchg
je
or
dec
lock
push
jl
xchg
cmp
fidivl
cmp
xor
sti
jns
hlt
xchg
jnp
imul
cwtl
push
aam
pushf
popa
stos
jecxz
pop
or
out
mov
pop
repnz
loop
dec
push
jne
mov
mov
fmull
ljmp
lods
inc
data16
add
shl
mov
push
hlt
adc
call
jb
dec
stc
adc
ret
fs
outsb
and
cs
sbb
movsl
flds
dec
loopne
movsb
mov
pop
cli
fsubrl
sbb
mov
push
stos
push
sub
imul
pop
inc
adc
add
je
aam
pushf
xor
aaa
and
bound
sub
add
gs
mov
jg
ficomps
jae
add
xchg
sbb
pop
pusha
es
das
out
sbb
fildll
mov
cmp
jmp
mov
cmp
mov
jecxz
pop
arpl
repz
xor
lock
add
jbe
lods
dec
imul
subl
out
sub
add
jge
sbb
xlat
cmp
popa
xchg
fwait
cmp
inc
nop
jl
stos
fstl
mov
inc
cwtl
outsl
sbb
jnp
aas
out
or
aaa
scas
mov
and
inc
cmp
sub
push
add
push
popf
out
push
xlat
loop
xchg
adc
cwtl
push
jl
shlb
rorb
fidivl
mov
dec
xchg
rclb
mov
daa
mov
cmpsb
dec
mov
xor
pop
pop
scas
das
mov
insl
pop
sarb
fnsave
xor
lds
fistl
pop
ret
fstp
push
push
xchg
add
or
inc
xchg
xchg
xchg
inc
lock
adc
mov
mov
dec
sub
dec
cmp
dec
sahf
or
push
sub
int
mov
mov
je
in
sub
neg
lcall
push
cmc
addr16
pop
pop
sub
cmp
ss
daa
or
inc
and
out
outsb
jns
fisubrs
and
add
out
push
add
sub
dec
inc
sahf
cmp
iret
in
jmp
scas
pop
inc
shrl
xchg
mov
int3
push
loope
aas
test
test
lahf
cmp
add
orb
into
outsb
jl
push
mov
xlat
out
xor
orl
pop
add
movsl
inc
fcoms
test
sub
fisttpll
jp
sbb
add
add
stos
clc
pop
loopne
pop
push
push
or
jno
lahf
push
xor
mov
push
inc
shll
test
pop
sbb
mov
mov
or
mov
adc
dec
and
lret
shll
ror
push
sbb
pushf
push
sub
inc
lock
aaa
pop
js
fadds
lods
cmp
jle
xchg
mov
cmpsl
rorb
add
mov
cmpsb
out
add
or
addb
or
mov
or
scas
loopne
fbld
xchg
mov
loopne
mov
adc
ds
xorb
divb
js
mov
lock
xor
mov
mov
into
add
pop
jb
or
mov
scas
imul
call
adcl
icebp
push
mov
stos
subl
mov
dec
daa
pop
lret
lcall
inc
xchg
fisubl
jne
rcrb
and
pop
test
add
add
xor
shlb
filds
inc
sahf
add
test
xchg
mov
cs
dec
call
lock
in
adc
sub
pop
aad
stos
jo
aaa
aam
mov
cmpsb
xor
add
and
mov
or
outsb
fsts
int3
insb
leave
into
inc
repz
add
xchg
loopne
stc
pop
ror
aas
cwtl
inc
adc
scas
call
pusha
in
in
sbb
sar
in
add
xchg
mov
mov
xchg
adc
ljmp
test
jnp
daa
adc
out
nop
xor
lods
in
das
mov
popl
fsts
aam
jnp
pusha
in
inc
mov
ret
push
xchg
outsb
enter
mov
mov
pop
outsb
addr16
dec
and
lea
pushf
sbb
fnstenv
mov
cli
mov
jo
es
xchg
xor
push
je
inc
jl
cmp
ret
dec
xchg
pop
push
outsb
or
iret
lret
ljmp
adc
jg
jp
shll
mov
mov
jbe
dec
pop
xchg
sbb
frstor
mov
jmp
push
sbb
inc
dec
fcmove
sahf
bnd
sub
stos
dec
push
sahf
imul
insb
cltd
xor
es
adc
call
mov
ljmp
fdivl
pop
out
cmc
xor
pop
mov
shr
or
ss
mov
pop
cmpsl
dec
push
dec
xchg
cmp
test
aam
xor
sub
xor
inc
jbe
movsb
push
push
mov
icebp
or
scas
loop
mov
cmp
in
out
adc
outsb
les
into
add
xlat
push
dec
in
mov
sbb
xchg
arpl
ret
inc
cmp
mov
sub
scas
neg
or
imul
push
jbe
jae
mov
mov
and
mov
mov
jg
int3
call
push
push
aaa
fbld
aam
mov
push
pop
in
insl
adc
xchg
into
orb
ret
xor
jns,pt
cmpsl
jge
rcr
clc
and
cmp
jbe
cmpxchg
mov
je
mov
mov
sub
jo
xchg
jno
cmp
jns
ja,pn
xchg
fldt
mov
mov
sbb
out
push
add
ja
xor
ja
mov
inc
sbb
xor
in
je
js
jne
and
lret
jg
fisubl
or
gs
repnz
shlb
or
cmpsb
dec
cmp
nop
movsb
add
in
aaa
push
insb
aad
xlat
jae
mov
or
sbb
int
leave
pop
push
cld
inc
and
cld
dec
xchg
icebp
mov
xchg
pop
enter
arpl
xor
jne
push
add
mov
cld
out
dec
jp
fidivrs
cld
mov
xor
and
pusha
outsb
xor
test
imul
popf
out
not
jle
adc
imul
out
xchg
mov
addr16
pop
out
int3
test
inc
pop
or
cmp
mov
int3
dec
lea
out
jmp
orb
cltd
push
jl
xor
push
fcoms
imul
fucomi
lds
data16
mov
jo
add
mov
cmp
sub
jmp
cmp
jl
ret
outsb
std
int3
mov
pop
out
fcoms
aaa
lds
mov
add
repnz
xchg
mov
stos
cmpsb
sarb
fdivp
inc
pop
mov
fnstsw
xchg
es
xchg
fcoms
add
movsl
dec
aaa
je
aaa
loop
pop
pop
or
xor
addr16
dec
mov
subl
loope
mov
push
cld
xchg
pop
push
fmuls
add
rcll
jns
adc
mov
mov
cmp
sbb
mov
arpl
push
add
jecxz
dec
subl
data16
dec
sub
xor
cltd
add
cwtl
int
fwait
in
shrl
adc
mov
fcoml
cmpb
rclb
dec
insb
cmp
cmp
mov
inc
mov
xchg
dec
mov
xor
insl
dec
xor
pusha
push
cld
adc
mov
lds
lcall
in
andl
lret
add
sbb
hlt
mov
push
dec
push
mov
lahf
pusha
imul
les
int3
fsubrl
inc
cmc
cld
scas
lcall
aad
aaa
repnz
imul
xor
or
cwtl
out
pop
mov
cmp
mov
sbb
lods
xchg
repnz
xor
xchg
aaa
adc
cmp
mov
push
arpl
cli
sbb
xor
cwtl
sub
pop
in
sbb
jle
lea
pushf
daa
dec
mov
cmpsb
push
mov
mov
mov
xor
shlb
sbb
repz
lahf
xor
dec
pop
int
xchg
in
mov
fs
push
fstpl
popa
iret
jns
mov
mov
xchg
ror
or
insb
clc
jo
xor
adcl
xor
shll
mov
and
mov
fsubrp
or
lods
mov
adc
pusha
test
adc
adc
or
mov
jne
jno
sbb
outsb
stos
fwait
add
loope
mov
cmp
inc
dec
mov
arpl
ja
jp
sbb
xchg
cli
out
or
test
mov
stc
js
push
pushf
inc
jmp
xchg
loopne
imul
loopne
xorl
push
aas
sbbb
dec
int
pop
mov
mov
jns
ss
notl
repz
sbbb
aam
icebp
in
sub
sub
mov
cli
xchg
inc
imul
into
cmp
lret
out
mov
js
xor
stc
fwait
xor
out
lret
push
cmp
imul
rorb
lcall
scas
cmp
cmp
xchg
rclb
mov
scas
test
cli
pop
lret
mov
mov
loopne
or
mov
pop
loop
fiaddl
test
and
or
mov
aad
aad
push
stos
add
sbbb
and
shl
lcall
sub
sar
shrl
dec
push
lret
dec
dec
nop
or
lds
fidivl
mov
cmp
mov
lahf
in
test
sub
adc
movsb
fnstenv
pop
test
fistpll
jg
dec
mov
addl
testl
xchg
in
or
push
shrl
in
push
imul
ja
sbb
pop
pop
test
push
mulb
sub
lret
dec
popa
xor
and
shl
cltd
adc
xlat
sbb
test
pop
adc
insb
or
jmp
mov
pop
fs
rcll
sbb
lcall
adc
ja
jle
decl
adc
sub
cmc
loopne
xchg
mov
or
inc
shrb
jge
mov
sub
leave
call
addr16
lahf
mov
dec
mov
ljmp
push
sub
sbb
mov
pop
es
cmp
adc
jmp
ds
aaa
mov
pop
insb
adc
mov
daa
dec
add
gs
in
or
movsl
stos
adc
jb
mov
testl
cmp
scas
add
rcll
cld
xchg
push
hlt
pop
cs
mov
orl
mov
mov
sub
mov
ljmp
aad
push
sbb
or
mov
out
leave
mov
call
inc
jns
sbb
inc
cmp
test
fsubrl
sahf
add
in
sbb
in
or
mov
push
or
mov
clc
sbb
cli
icebp
mov
test
dec
out
push
movsl
dec
lea
sysenter
sub
loop
sbb
and
or
push
jmp
mov
push
sub
and
loop
insl
or
cs
sti
in
je
adc
popa
js
or
push
sub
scas
faddl
dec
fmuls
je
iret
xchg
sub
in
ret
mov
cmp
je
and
pop
faddl
mov
pop
int3
push
mov
pop
push
xor
sub
int3
sub
xlat
shll
ror
cmpsb
loope
in
loope
or
mov
aam
jp
test
mov
dec
stc
xchg
add
mov
aaa
and
cmp
addr16
sbb
jmp
inc
mov
inc
sbb
add
mov
scas
int3
shr
sbb
rcrb
aaa
xchg
imul
lock
daa
pop
cmp
fbstp
xor
std
imul
dec
adc
jno
pop
sbb
in
test
cmp
jne
lods
jb
cmp
fs
scas
orb
jge
push
jo
shrb
pop
hlt
dec
sbb
push
rcrl
fnstsw
mov
dec
mov
cmp
ficoml
daa
mov
mov
pop
ja
inc
xchg
fstpl
mov
ss
data16
div
arpl
cmp
xchg
loope
sub
dec
cwtl
mov
mov
cwtl
ret
add
movsb
int
jae
xchg
pmaxsw
inc
pusha
aad
pop
arpl
fs
adc
insb
out
int3
mov
mov
addb
mov
cld
adc
or
xchg
into
xchg
data16
and
loop
add
add
call
cwtl
and
pushf
daa
aaa
outsl
jecxz
movl
ss
nop
imulb
inc
pop
punpcklwd
push
sub
mov
xchg
xorb
dec
test
pop
mov
dec
popa
mov
mov
mov
iret
test
sbb
je
jmp
pusha
icebp
inc
cmp
xor
inc
icebp
pop
push
outsb
jbe
cli
popa
adc
hlt
test
jns
test
test
pop
fnstenv
cmp
and
mov
test
daa
xchg
push
fidivl
fists
lds
testb
popa
loop
add
add
pop
int3
add
pop
ja
popa
pop
sbb
adc
nop
imul
jecxz
sbb
mov
test
ljmp
cmc
jmp
push
add
and
or
scas
iret
and
int3
inc
push
sub
sbb
push
xchg
jnp
pop
push
lret
mov
mov
sub
adc
andl
and
ficoms
or
insb
xchg
imul
popa
jecxz
and
cmp
fsubs
push
stos
dec
jb
bound
mov
or
scas
fwait
cmp
inc
mov
mov
rcr
outsb
cli
adc
ljmp
xor
sub
lahf
adc
mov
daa
int3
insl
jge
pop
in
push
repnz
and
push
adc
psubw
stos
fistl
iret
push
lods
inc
or
shrl
in
add
rcl
test
cwtl
idivb
lret
mov
inc
jo
test
dec
inc
shlb
popf
shrb
nop
les
inc
xlat
pop
mov
movsb
es
fs
in
int
imulb
push
in
add
pop
out
or
loop
jle
mov
cmp
sub
rorl
out
arpl
subl
pop
imul
outsl
push
xchg
dec
popf
add
and
incb
leave
push
and
inc
push
movsb
or
mov
sub
xchg
out
pop
mov
mov
lcall
and
or
inc
pusha
mov
sub
gs
cmp
jo
daa
sbbl
cli
mov
mov
cmp
adc
fsubrs
sub
ret
shll
push
mov
adc
and
and
stc
add
repz
data16
orl
dec
dec
nop
inc
cmp
test
dec
testl
std
push
push
mov
jle
popa
nop
add
xchg
out
adc
cwtl
mov
sbb
imul
jno
pop
test
xchg
scas
add
cwtl
inc
fs
sbb
aaa
pop
pop
adc
int
aaa
pop
push
mov
aaa
lret
mov
insl
testl
mov
jle
inc
loopne
fwait
pop
dec
and
nop
fsubs
das
out
pop
sub
subb
add
pop
cmp
dec
or
cmp
jmp
outsl
push
mov
ja
fldenv
loopne
bnd
cmpsb
int
pop
push
mov
in
jns
xchg
lcall
and
add
std
popf
mov
cmp
lret
mov
les
stos
add
arpl
movsl
ja
andb
mov
lcall
cli
add
add
repz
mov
lock
imul
in
pusha
sub
xchg
test
shl
and
cmpsb
sub
mov
push
sbb
mov
lods
in
sub
sub
cmp
lods
aas
insl
mov
icebp
test
fbld
inc
sub
jbe
out
jno
push
mov
testl
insb
pop
pop
xchg
enter
mov
jo
ror
std
or
stos
push
sub
sub
jns
test
insl
inc
jg
imul
xor
and
jle
popa
cli
push
pop
mov
mov
jg
pop
popf
aaa
mov
int3
adc
lret
xchg
or
sbb
push
fsubrs
scas
adc
sbb
xchg
loop
sub
loopne
out
outsl
adc
int3
test
inc
xor
arpl
mov
ja,pn
adc
pop
imul
cmp
jb
jmp
push
mov
roll
leave
fcomps
in
call
mov
mov
outsl
pop
or
push
sahf
pop
pop
fimull
or
cmp
cwtl
sub
cmp
or
push
lods
add
jl
out
ss
and
fisttpl
rcl
pop
jecxz
adc
mov
push
push
mov
mov
push
les
mov
imul
test
je
mov
sti
movd
cld
test
test
mov
add
lods
mov
std
inc
fdivs
xor
gs
or
dec
rcll
leave
xor
hlt
shrb
jns
jge
loopne
sbb
fprem1
ljmp
rol
dec
das
fs
shll
es
pushf
adc
in
pop
neg
pop
das
push
mov
push
ljmp
mov
fnstenv
jne
pop
and
inc
dec
mov
out
repz
push
sub
aad
bound
fcomi
dec
jge
mov
dec
inc
sahf
in
pop
subb
mov
xchg
std
adc
loop
push
nop
lcall
xor
div
mov
mov
nop
pop
test
setns
xor
push
push
mov
sub
mov
out
ficoml
or
pop
jno
imul
test
xchg
inc
sub
repnz
mov
mov
or
jle
fincstp
aam
test
xchg
fists
int
icebp
xchg
dec
xchg
dec
mov
mov
add
xor
sub
pushf
cmp
sub
jns
es
mov
xchg
adc
fbstp
sbb
lea
jb
sbbb
add
mov
adc
pop
lods
push
test
fs
sbb
mov
outsb
dec
jle
jb
cmp
imul
adc
mov
lcall
jecxz
in
inc
mov
leave
add
xchg
rolb
cmpsl
jbe
mul
xor
imul
add
push
mov
sbb
test
add
jge
enter
scas
fucomp
sub
mov
ljmpw
xor
mull
and
cmp
xchg
std
add
dec
aaa
inc
mov
out
xchg
fcomip
das
fimuls
shl
pop
push
pop
add
jnp
pop
jmp
fwait
sub
xchg
mov
jne
jle
push
in
jecxz
xchg
inc
and
jnp
jg
out
cwtl
xchg
outsb
hlt
pop
gs
push
mov
and
fidivrl
pusha
nop
add
aam
stos
ja
adc
cmpb
and
daa
sbb
add
gs
jmp
sub
push
jg
fsubl
movsl
cmp
insl
lods
test
add
clc
pop
push
stos
dec
aas
lldt
das
and
call
jo
mov
sarl
ja
jecxz
cmp
roll
xor
or
mov
sbb
mov
das
push
and
fdivs
shlb
pusha
movsl
inc
ret
ficompl
cmp
rolb
out
std
cmp
sbb
mov
sbb
jle
inc
scas
push
call
jle
dec
in
hlt
mov
xor
push
popa
movsb
bound
push
insl
xchg
pop
jns
hlt
mov
xor
out
jns
pop
jno
jae
mov
xor
inc
pop
push
sbb
fistl
pushf
or
test
jo
cmp
or
leave
mov
xchg
gs
mov
int
cmpb
mov
addr16
pushl
dec
xchg
xor
xor
dec
jmp
mov
test
inc
mov
movsl
popa
inc
je
and
arpl
jb
cmp
mov
mov
xchg
cli
mov
inc
popf
xor
jo
adc
xchg
popf
mov
cmc
inc
push
in
sbb
rol
lret
imul
push
dec
rorb
ds
jl
push
mov
out
test
add
adc
sbb
pop
mov
aaa
inc
inc
xchg
cs
mov
fiaddl
addr16
pop
xchg
jl
in
cmpsb
inc
jno
pop
xchg
icebp
mov
jecxz
movl
cmp
ljmp
popf
vpshufhw
jnp
cs
ja
dec
pop
ret
pop
cs
sahf
stc
lret
pop
add
sbb
jns,pn
jbe
sbb
pop
addb
fisubrs
jmp
and
push
cmp
dec
mov
test
mov
bound
je
lock
pusha
fdivs
data16
call
mov
mov
cli
cli
mov
lea
jge
ljmp
aas
mov
push
in
push
push
mov
jbe
leave
push
mov
sar
daa
rolb
cmp
dec
add
pop
daa
fldl
adc
dec
jbe
mov
scas
into
cmpsl
pop
push
dec
adc
cmp
mov
jb
inc
stc
jg
fdivl
int
sbb
scas
lods
sub
or
adc
mov
mov
mov
insb
popa
mov
sub
jmp
data16
dec
jbe
pop
in
aad
sti
and
pusha
inc
js
push
call
cmp
clc
lds
lock
pop
xchg
ret
mov
pushf
jae,pt
js
mov
sub
test
cltd
cmp
adc
lret
xchg
stos
stos
pop
cltd
shll
push
push
lss
ljmp
divl
cltd
test
sbb
jae
mov
jle
aad
cmp
pushf
loopne
aas
mov
icebp
sbb
cmp
sub
jno
mov
or
leave
xchg
adc
add
outsb
les
cwtl
inc
outsl
lahf
mov
pop
aam
out
mov
sub
pop
or
mov
and
loop
add
sti
bound
dec
out
push
pop
jle
imul
fildl
mov
xor
gs
call
sbb
and
jne
mov
jb
push
jns
stos
cmp
jnp
daa
popa
ret
mov
jno
shlb
xchg
scas
sub
outsl
stos
xorl
adc
mov
jns
fwait
shlb
repz
push
lods
add
cmpsl
lahf
pusha
imul
out
pop
or
mov
jb
dec
inc
sbb
jl
out
lods
xor
ljmp
jns
lods
mov
in
inc
stos
xchg
mov
xchg
sub
mov
adc
mov
cld
inc
sub
mov
sbb
test
add
inc
mov
sbb
lock
pop
pushf
cld
dec
and
es
ss
leave
mov
iret
es
mov
cmc
cmc
sub
mov
ficompl
sub
test
sbb
adc
lcall
negl
addr16
adc
jbe
adc
mov
dec
ret
rclb
adc
mov
pop
xchg
push
or
imul
dec
stos
xchg
notb
fsubrs
pop
dec
jns
push
push
ds
fmulp
sub
adc
mov
dec
adc
jge
idivb
out
xor
jno
inc
mov
mov
mov
cmp
faddl
cmc
xchg
dec
adc
pop
adc
sbb
xchg
jmp
xlat
cmp
mov
pop
pop
push
mov
jge
outsb
inc
les
arpl
mov
dec
loopne
and
push
std
cld
mov
adcb
clc
pusha
inc
dec
test
add
popf
stos
and
repz
pop
dec
test
mov
rclb
je
mov
aas
rclb
adc
in
ljmp
or
xor
loop
inc
xlat
and
dec
jae
jo
ja
pop
scas
je
push
in
lods
or
jle
mov
add
int
jmp
or
fiadds
xchg
andb
xor
out
mov
lods
decb
pop
xchg
mov
inc
mov
pop
xchg
bound
push
xor
imul
loopne
jne
mov
shr
in
push
and
int3
shr
dec
stc
cmp
and
sub
sarw
fistl
subb
stc
cmp
push
push
mov
gs
mov
pop
lock
pop
or
pop
daa
jb
lods
jns
popa
movd
add
dec
test
add
push
movsl
mov
mov
rclb
imul
dec
mov
push
sub
je
cli
jns
in
clc
mov
lea
add
push
mov
adc
cmpb
mulb
pop
movsl
sbb
jnp
enter
insl
fcomp
adc
push
jecxz
cli
sub
dec
cld
stos
adc
les
and
xchg
outsl
jbe
jo
pushf
xor
push
daa
cld
push
filds
fs
in
enter
cltd
leave
jp
jns
enter
cs
or
ljmp
outsl
int
xchg
in
dec
mov
cwtl
shll
mov
inc
push
or
xchg
inc
iret
inc
mov
xor
pop
ficomps
push
mov
mov
and
sbb
je
ret
pop
les
cmp
sbb
test
fldenv
in
les
lds
or
mov
jmp
lea
stos
pop
inc
stos
xlat
sub
jnp
mov
pop
lret
inc
sbb
movsb
mov
andb
cltd
lock
loop
xor
inc
pop
mov
inc
jns
push
jge
das
cli
pop
mov
push
jo
fisttps
jnp
call
outsl
aad
lock
mov
pop
out
ret
jo
into
shrb
and
loop
sti
and
int
dec
cmp
test
xchg
les
dec
push
xor
fildll
pop
push
and
mov
fsqrt
jb
mov
cwtl
push
xchg
pop
lahf
jno
inc
repnz
daa
cmpsb
mov
cmpsl
pusha
scas
outsb
out
push
popa
add
insl
sahf
daa
pop
setle
iret
xorl
push
xchg
mov
hlt
push
call
xlat
ffreep
xchg
pop
sbb
adc
ja
ljmp
push
push
gs
cmpsb
xor
std
insb
sahf
inc
scas
sub
stos
repz
inc
les
inc
out
push
dec
xchg
push
test
and
pop
fdivl
pop
pop
xor
repz
fnstenv
hlt
mov
out
mov
sbb
mov
dec
xor
int
fistpll
mov
sub
mov
dec
aam
lds
in
adc
sbb
test
idiv
cwtl
cmc
add
or
mov
fidivl
subl
sub
pop
mov
scas
enter
mov
pop
adc
leave
pop
imul
jge
mov
lds
in
dec
out
cmp
mov
daa
iret
mov
test
iret
fs
jno
mov
jp
inc
adc
in
mov
pusha
xchg
adcb
icebp
inc
sahf
das
add
mov
jo
jecxz
xor
cltd
inc
xchg
js
mov
out
lcall
xchg
push
dec
ret
or
adcb
dec
testl
mov
addl
mov
push
leave
inc
sbb
mov
jecxz
lea
lods
in
mov
and
jle
mov
and
mov
ror
sahf
add
popf
mov
mov
sti
or
pusha
cmpsb
stos
push
fcomps
scas
mov
lret
fiaddl
fstl
sbb
adc
loopne
and
hlt
pop
arpl
loope
fnstenv
push
sub
xchg
test
xchg
inc
mov
push
mov
jo
push
or
cwtl
adc
out
cmpsl
lock
outsl
xchg
in
xchg
pop
stc
pop
out
shl
jae
jne
pop
xor
mov
popa
in
or
cmpsl
insb
xor
sbb
pushf
hlt
cmp
lcall
mov
jae
add
mov
into
bound
push
insl
mov
push
or
pop
adc
jbe
add
pop
lds
stos
jbe
and
call
jge
les
mov
bswap
add
add
sbb
add
pop
imul
add
js
push
xor
cwtl
outsb
aad
fs
mov
dec
in
sti
movsb
fucomp
dec
sub
sub
arpl
push
jbe
cmp
xchg
lods
mov
int3
in
adc
jge
shll
xor
loop
js
xchg
xchg
js
cwtl
test
loope
adc
cld
push
adc
dec
leave
leave
mov
mov
es
ret
or
es
push
stos
jb
int
test
sub
pop
dec
mov
mov
or
xor
enter
add
icebp
pop
xchg
repnz
and
push
test
rorb
sbb
push
shll
outsb
jno
cmp
or
subl
xchg
pop
pop
clc
fwait
mov
pop
push
movsb
out
jb,pn
test
xchg
imul
fdivl
push
lahf
ljmp
js
sub
in
std
xchg
ljmp
in
adc
out
ljmp
xchg
add
mov
mov
xchg
negb
mov
fisubl
aad
jmp
adc
jmp
lret
dec
mov
lret
pop
inc
xchg
and
fcmovb
push
dec
cmp
out
jne
or
subb
ss
or
mov
aas
sub
xlat
shl
bound
loope
and
mov
cmpsl
aaa
inc
js
sub
ficoms
out
out
fwait
sti
stc
das
pop
push
push
cmp
mov
lods
and
sbb
inc
mov
sub
andl
sub
pop
je
adc
mov
dec
hlt
out
lea
cmpsb
movsb
mov
xor
xor
add
shrl
adc
ljmp
out
jg
or
test
std
into
test
sti
shlb
sbb
lods
cmp
sub
std
lock
movsl
xlat
shrl
xor
daa
out
lock
xor
roll
dec
test
cmp
jg
lock
scas
jg
add
cmpb
mov
inc
xchg
movsl
mov
pop
shll
push
out
pop
xchg
inc
pop
xor
cmp
pusha
lods
xchg
and
stos
lcall
decb
clc
inc
inc
repnz
ret
sub
test
xor
shr
xor
push
ror
fldt
push
xor
jne
pop
insb
xor
sub
sub
jno
sti
aaa
rcrl
rol
pop
clc
cld
rcl
in
mov
pop
rolb
test
xor
inc
not
or
add
js
and
sub
xor
mov
cmc
xlat
stc
daa
xor
inc
ja
imul
xchg
pop
imul
inc
pusha
lahf
mov
jb
ror
inc
xchg
mov
sub
mov
sbb
sbb
adc
xchg
lret
mov
rcl
test
int
in
pop
aam
roll
aad
cmp
sti
movsl
and
push
gs
xchg
xchg
add
mov
lret
mov
dec
dec
test
mov
scas
xchg
dec
pop
adc
or
pop
lods
push
mov
xchg
mov
pop
movsl
pop
mov
sahf
add
inc
mov
inc
adc
int3
movsb
popf
daa
and
cmpsl
sbb
addr16
add
jg
popf
inc
aaa
jg
mov
push
push
pop
pusha
sub
mov
jns
cltd
cmp
xor
jbe
cmp
fldt
movsl
or
xlat
fcoml
or
int
hlt
sub
stc
mov
in
das
lock
shlb
hlt
dec
call
mov
mov
pinsrw
or
sbbl
inc
sbb
ss
add
enter
outsl
xchg
mov
out
movsl
sbb
mov
sarl
stos
sbb
into
push
cwtl
aad
pop
dec
adcl
sahf
mov
jo
js
mov
fists
sub
stc
push
push
pop
cs
cmp
and
mov
test
movsb
dec
mov
mov
and
xlat
fnstcw
aad
push
mov
aad
push
movl
mov
jge
popa
mov
sub
dec
outsl
imul
sbb
in
repnz
pop
sti
mov
push
loopne
dec
adc
mull
add
mov
in
ja
arpl
and
cmp
and
pop
jp
xor
rcrb
pop
jp
aam
mov
ds
dec
inc
cmp
rcrb
stos
jg
and
sub
push
push
mov
and
cld
push
mov
sbb
insb
inc
mov
fstps
aas
daa
lds
jnp
lahf
push
adc
imul
aaa
push
and
add
sub
add
out
inc
rcl
adc
mov
cmp
mov
pop
popf
in
xor
mov
push
push
insb
mov
cmp
and
pushf
mov
add
mov
enter
inc
push
mov
pop
imul
sarb
adc
or
push
iret
in
in
ret
sub
cmp
mov
add
sbb
lock
mov
add
push
pop
int
lods
test
nop
xlat
ds
sbb
adc
cmp
push
dec
rcrb
inc
je
shlb
push
pop
in
daa
or
push
cmpsl
lock
dec
in
clc
movl
or
mov
mov
into
dec
push
xchg
lahf
cs
mov
rclb
inc
jbe
out
stc
mov
dec
and
fs
adc
sub
xchg
mov
insl
shrb
ds
icebp
pop
mov
les
add
sbb
push
xchg
icebp
sbb
gs
adc
dec
mov
data16
in
repnz
pop
xchg
adc
ljmp
jno
mov
adc
xchg
idivl
cmp
in
mov
popa
push
adc
rclb
mov
xchg
mov
mov
loop
int
sub
test
in
cmc
fwait
sbb
mov
shlb
add
mov
movsl
scas
rolb
movsb
sbb
adc
adc
xlat
adc
sub
mov
and
sub
mov
lret
cmp
rcl
xchg
add
cmp
out
stos
push
int
sub
repz
sbb
or
inc
sub
fbld
popa
mov
pop
je
adc
call
arpl
in
mov
mov
push
push
ret
incl
test
repz
test
fs
cmpsb
mov
mov
sbb
into
test
rclb
xlat
and
sub
mov
stc
inc
inc
aad
add
sar
push
sbb
out
mov
mov
xchg
and
xor
mov
scas
iret
fwait
js,pt
fprem1
xor
cmp
stos
aam
subb
cld
es
mov
xor
dec
or
jnp
mov
mov
mov
test
jecxz
js
and
pop
mov
pop
aaa
sbb
lret
stos
add
adc
fisubl
jg
cmp
cmp
leave
cmpsl
mov
iret
stc
xchg
push
data16
nop
fisttpl
xor
push
push
mov
pop
dec
xchg
sar
sbb
adc
jno
xchg
mov
rorl
jns
and
xor
test
mov
sbb
loopne
inc
jns
mov
js
pop
ljmp
xor
shl
movsb
push
in
xchg
iret
mov
cmp
in
shr
aas
mov
cmpsl
stos
cld
repnz
fsub
and
sub
push
cmp
lods
push
repnz
fs
inc
xor
or
int3
add
fdivp
xchg
popf
lods
jnp
jl
and
lea
fs
ja
sti
cmpsb
xchg
out
or
lock
jmp
sub
insb
cld
dec
lgs
add
mov
xchg
dec
movmskps
test
div
push
pop
jno
push
push
xor
xlat
xlat
sbb
outsl
fidivrl
int3
sahf
or
adc
mov
and
mov
or
sub
or
pop
xorl
adc
pop
aas
xchg
and
mov
std
mov
in
or
dec
dec
jae
in
bound
addr16
fs
out
mov
iret
adc
push
cs
sub
dec
xor
nop
mov
jg
sar
or
dec
aad
shlb
add
xor
jo
das
nop
mov
push
mov
jecxz
and
jne
or
cli
xor
sbb
shlb
bound
inc
dec
daa
ds
jno
add
rolb
push
sub
mov
and
filds
stos
inc
fldenv
stc
dec
adc
incl
mov
mov
inc
stos
outsl
movsb
inc
fidivrl
sub
pushf
cmc
out
nop
call
outsl
push
loop
aas
sbb
jnp
in
inc
lea
mov
gs
xlat
cmc
jae
out
mov
out
add
push
mov
jns
cmp
pushf
sahf
jb
aas
mov
push
daa
loope
dec
xchg
or
push
sti
clc
cmp
jl
lea
add
shlb
lds
addr16
pop
lods
arpl
insl
or
lock
rcrl
lds
pop
fidivrs
push
push
lods
or
pop
std
cmp
sahf
push
xlat
mov
inc
rcrb
fs
sbb
leave
pop
mov
aad
adc
lods
dec
sbb
add
ss
push
ja
jno
pop
jo
loop
jl
arpl
pushf
les
dec
leave
jo
out
inc
mov
aam
adc
jg
sub
stc
shlb
pop
dec
adc
adc
divb
xchg
adc
sti
cmpsb
pinsrw
inc
mov
add
jmp
mov
shrl
jbe
jns
mov
mov
push
scas
mov
clc
mov
pop
test
push
andb
inc
test
push
push
xlat
add
fisubrl
mov
movsl
jae
out
mov
mov
mov
jmp
pop
bound
fimull
fnstcw
jno
mov
cwtl
push
mov
push
xchg
aam
addb
jmp
call
sti
cmc
loop
push
imul
notl
stos
movsl
je
mov
mov
ja
lahf
into
pop
mov
mov
dec
insl
lea
lock
inc
add
and
js
sbb
jecxz
dec
jg
rcrl
fimuls
das
mov
into
in
mov
loopne
je
jns
sub
fstpl
push
ljmp
cmpsb
jge
adc
mov
dec
mov
popf
rcrb
sti
push
sbb
iret
mov
bound
add
das
mov
mov
aas
loop
and
cmpsb
test
pop
jmp
test
dec
xorl
push
gs
mov
out
or
mov
cmp
cmp
xor
clc
push
loope
pop
or
dec
inc
mov
gs
pop
jge
adc
add
mov
les
inc
cmc
shll
aas
insb
inc
iret
mov
and
ret
test
inc
cmp
inc
mov
popa
and
mov
and
je
ficomps
popf
inc
xor
pop
lahf
dec
pop
lock
es
mov
pop
xlat
aas
add
fbstp
mov
scas
lock
lahf
xchg
push
dec
cmp
fwait
push
sbb
outsb
pop
mov
sbb
dec
dec
lret
daa
outsl
out
mov
jecxz
loope
or
adc
jne
pop
stc
pop
adc
popa
sub
mov
fs
xor
pop
mov
inc
adc
testl
cs
adc
insl
inc
lcall
or
inc
ljmp
cld
adc
cmpsl
jp
cs
stos
scas
dec
pop
and
adc
aas
push
jecxz
into
aaa
pop
lret
sbb
mov
jno
push
mov
mov
pop
orb
push
out
jb
cmp
pop
in
jno
inc
jb
cmp
aas
imul
jmp
jmp
adc
adc
cltd
mov
fcmove
ljmp
jle
or
sub
or
pop
cwtl
out
mov
in
mov
cld
dec
out
lds
xchg
add
cltd
mov
and
cmpb
cwtl
sbbl
adc
iret
mov
imull
hlt
aad
lret
je
aaa
rolb
xchg
mov
mov
mov
mov
fsubp
lods
and
sbb
and
nop
add
outsb
lahf
xor
subl
jp
icebp
gs
cmp
in
sbb
fwait
jg
xor
mov
incl
and
sahf
es
sarb
cmp
sub
repz
outsl
mov
enter
xor
jo
cmp
aas
xchg
shlb
push
pop
popf
mov
sbb
pushf
jl
mov
iret
push
and
or
xchg
cmp
iret
js
ss
mov
sub
dec
mov
nop
andl
add
lea
ret
mov
push
popa
push
mov
popa
sub
ret
mov
mov
xor
fdivrs
fstps
fstl
xor
push
in
aad
mov
lcall
add
pusha
das
pop
inc
mov
testl
jns
add
inc
push
gs
cld
push
aad
mov
icebp
add
xor
les
cmp
mov
lods
arpl
mov
ljmp
es
add
push
lock
cwtl
add
out
inc
rcrl
out
call
ljmp
pop
sbb
ja
in
sarl
insb
lret
mov
pop
xchg
lock
cltd
xor
jp
daa
xor
jl
lea
fcomi
mov
ljmp
adc
xchg
fnstenv
push
inc
adc
outsl
test
mov
popa
pop
movsb
mov
pop
aad
repz
cmp
jmp
and
push
mov
jle
pop
jne
adc
jge
sub
repz
fwait
dec
and
inc
xor
add
icebp
push
cmp
push
cmp
fdiv
lods
xchg
gs
cmovge
rorb
cmp
adc
shll
sub
lock
cmpsb
outsb
cltd
push
lret
lret
pop
cs
add
inc
cmp
or
dec
jmp
js
orl
inc
and
add
gs
fidivrl
int3
dec
lods
imul
mov
ds
sbb
add
dec
push
into
jns
mov
mov
loop
or
xor
fiaddl
pop
push
shlb
stos
jnp
sti
jno
testl
adc
shlb
das
je
inc
mov
xor
sub
bswap
xor
mov
pop
shl
fisubrs
cmp
shlw
jge
push
nop
jne
cmpsl
rorb
call
sub
jae
cmp
leave
push
sbb
sbb
enter
stos
or
sahf
in
popf
ret
jo
gs
outsb
xchg
inc
fisubl
rclb
and
adc
adc
incb
loopne
aam
dec
sbb
inc
les
stc
lahf
cmpl
mov
inc
pop
mov
jnp
iret
stos
dec
add
jle
test
popa
cmp
in
sub
enter
xor
loop
movsb
xchg
cmp
and
or
push
mov
xor
xor
inc
mov
out
xor
add
lcall
xchg
lds
insl
dec
dec
jmp
ficomps
add
insl
loop
adc
movsl
xchg
fiadds
push
sub
push
or
push
fs
push
inc
jno
ret
ss
cwtl
mov
xor
ret
lret
iret
and
icebp
pop
sbb
push
push
mov
sbbl
in
xor
int3
inc
sbb
mov
cmp
pop
test
mov
repz
std
xlat
test
or
add
scas
jnp
loop
push
mov
mov
outsb
mov
pop
pop
fsubrs
push
mov
adc
mov
stos
and
mov
lods
cltd
hlt
outsl
and
push
stos
popf
cmc
pop
mov
mov
add
xor
int
sbb
movsb
rorb
push
or
mov
movsb
rcrb
xor
mov
cmp
insb
fistl
xchg
mov
mov
sbb
inc
pop
shl
jmp
cmovbe
loop
push
inc
dec
shll
filds
pop
pop
sarb
repnz
sub
xor
fiaddl
lcall
push
mov
clc
out
xor
ficoml
iret
jmp
sub
mov
or
jnp
mov
push
xor
fnstcw
fwait
lods
xchg
inc
sbb
adc
aam
pop
push
jns
lods
insb
sbb
inc
pop
sbbl
xchg
cmp
pop
pop
jnp
xor
addl
or
add
std
push
pcmpeqw
bound
xchg
adc
xor
aas
xchg
sbb
out
movsb
cmpb
inc
ss
jge
add
push
fidivs
test
out
add
je
add
inc
push
push
fdivr
sub
jnp
ljmp
clc
xor
call
or
aad
cli
adc
push
ror
and
and
pop
sbb
inc
pop
inc
push
push
rorb
sub
push
daa
ret
sbb
or
mov
addb
je
sbb
cmp
rcrl
add
ljmp
test
pop
or
adc
icebp
xor
push
lea
push
roll
fs
outsb
push
in
pop
or
inc
andb
dec
mov
inc
mov
shl
out
mov
in
out
mov
daa
xorl
xchg
sbb
sbb
cs
int
xchg
push
inc
or
sub
xchg
daa
iret
adc
xor
push
out
mov
iret
rclb
test
sbb
jb
pop
cmpsb
xchg
clc
adc
fwait
lods
lret
sti
pop
sbb
cmp
sub
clc
shlb
sub
adc
lds
cmp
test
or
cld
pop
adc
sub
test
std
xchg
popa
and
test
les
aad
push
xchg
jne
in
inc
mov
cld
or
xchg
pop
in
cmp
xchg
out
test
add
lock
and
outsb
and
stos
adc
jg
jle
jl
int
lds
sub
sbb
ljmp
mov
loop
mov
test
repnz
sub
jns
xlat
int3
insb
pop
mov
mov
dec
push
and
and
movb
mov
jne
je
pop
outsb
jo
ret
cwtl
popa
jg
fldl
sbb
repnz
call
sti
cmp
dec
arpl
mov
mov
or
xor
sub
das
and
icebp
les
outsb
bnd
pop
mov
rol
cmp
fnstcw
loopne
mov
sahf
dec
pop
jno
scas
inc
stos
bound
pop
js
daa
movsb
adc
xor
imul
ror
ficomps
add
pusha
lea
inc
into
test
sub
sub
dec
ja
xor
adc
mov
sbb
xor
dec
out
xchg
les
jle
or
inc
cld
in
out
out
mov
or
inc
sub
xor
fwait
jb
sbb
xchg
pop
push
cmp
pop
ficoml
cmpsl
gs
lds
sbb
in
insl
mov
aad
iret
jns
lock
sti
lea
dec
movsb
push
fwait
cmpsb
imul
push
push
divl
lods
mov
int3
xchg
mov
lds
fidivrl
xchg
lods
lods
sbb
lea
sbb
imull
dec
stos
outsl
mov
mov
add
mov
adc
ss
mov
sub
cltd
dec
cs
mov
dec
push
fcomi
scas
xchg
xchg
out
repz
sub
pushf
dec
cmp
shl
nop
pop
xor
ja
mov
pop
cltd
sub
sbb
adc
addl
and
push
lds
or
imul
inc
rorl
in
lret
lods
dec
push
cmp
push
jae
repnz
xor
jge
imul
mov
pop
inc
rcrl
adc
push
fwait
sbb
pop
dec
dec
xchg
jge
mov
fisubrs
or
and
pop
insb
adc
push
repz
mov
xchg
jg
cwtl
xlat
leave
movsb
xor
andb
ret
mov
inc
in
addr16
push
push
push
testb
or
rolb
inc
dec
jns
cmp
xchg
sub
movsl
mov
sub
sbb
mov
pushl
ja
test
cs
mov
imul
les
inc
out
pop
jp
adc
loopne
mov
jl
push
cmp
pop
inc
imul
lret
jp
lods
lock
pushl
pusha
jge
shlb
dec
cli
or
mov
int3
orl
sub
mov
cmp
xchg
sbb
std
and
xchg
int
pop
fstps
into
cmpsb
push
dec
or
mov
xchg
bound
xchg
mov
or
push
lods
sbb
dec
adc
std
sub
daa
stos
cmp
out
add
outsl
cmp
cmpsb
mov
fildll
popf
and
repz
fisttps
sub
xchg
lock
lret
or
pushf
test
pop
mov
fisttps
in
call
and
mov
push
xor
aam
xchg
jle
test
mov
lahf
mov
push
and
shlb
xor
ror
ret
adc
pusha
shr
test
dec
inc
adc
dec
mov
jmp
mov
fsts
inc
fcmovnu
push
cmpsl
sub
mov
test
and
mov
inc
mov
inc
cli
std
cmp
mov
stos
pop
xchg
jl
ja
mov
dec
mov
inc
insl
cwtl
loop
int
test
inc
pop
leave
cmp
add
add
es
les
out
sbb
jbe
imull
sbbl
push
call
adc
xor
jmp
xchg
movsb
xchg
sti
dec
mov
and
mov
in
fxam
adc
and
mov
sbb
test
pop
into
cmpsl
cli
jae
hlt
mov
shrl
test
xchg
js
fucomip
mov
sbb
jg
jne
es
adc
hlt
push
fiaddl
in
add
sub
add
jg
out
scas
out
sub
fwait
adc
outsb
pop
sbb
jbe
push
xchg
mov
mov
cmp
push
fdiv
aam
and
mov
inc
pop
pop
xchg
push
nop
cmpl
xlat
mov
mov
mov
aaa
leave
ret
imul
pop
add
push
lds
xor
push
push
mov
and
add
fsubs
add
pop
push
mov
jae
lods
lods
shl
int3
jle
xor
mov
lahf
test
xor
mov
xor
ror
add
sahf
fidivs
movsl
and
push
mov
cmpsb
mov
pop
mov
xor
pop
test
in
push
out
jmp
fbstp
sub
mov
xchg
in
xlat
test
in
dec
mov
imul
in
pop
or
and
in
mov
pushf
orl
pop
imul
jle
push
clc
or
jnp
push
jecxz
xchg
leave
cmc
fsubrl
xchg
popf
or
repz
sbbl
mov
xor
pop
insl
dec
push
pop
and
test
inc
stos
dec
das
loop
dec
je
je
ljmp
ljmp
or
mov
mov
add
and
fsubr
sbb
pushf
xor
sbb
aam
lahf
cmovb
divl
mov
push
mov
xor
and
aaa
cmp
je
pop
pop
outsl
movsl
dec
pop
rcr
add
jge
pop
dec
cmc
cmp
fbld
xchg
xor
dec
leave
rep
je
lret
dec
push
pushf
pop
out
nop
dec
repnz
es
mov
and
and
mov
sub
fldl
cmc
push
pop
xorb
call
arpl
ret
loop
outsb
jp
lods
push
push
adc
je
inc
jnp
in
jo
ss
xchg
loopne
imul
add
xor
inc
inc
mov
scas
adc
in
out
lcall
sahf
xor
jge
and
out
sub
xor
gs
push
add
inc
stos
imul
leave
imul
or
sub
out
out
adc
sbb
mov
icebp
std
push
sti
jecxz
in
lahf
dec
and
dec
mov
mov
mov
pop
jb
movsl
lds
pop
mov
pushw
and
jge
xor
adc
push
xor
dec
mov
sub
xchg
loop
inc
jnp
xchg
pop
sbb
push
push
and
pop
imul
rclb
subl
cmpsb
add
and
sbb
cwtl
loopne
loopne
test
lods
frstor
or
inc
std
jae
cmp
sbb
hlt
cmp
mov
jae
rorl
dec
dec
icebp
mov
pop
pop
je
mov
inc
mov
mov
mov
and
mov
xor
mov
cmp
in
test
aad
divl
jecxz
mov
pop
loop
cwtl
ret
sub
inc
popa
jle
orl
xor
ret
sub
movsl
call
push
ss
jle
test
push
mov
push
adc
enter
add
fmuls
loopne
or
pop
push
add
or
gs
mov
sbb
dec
add
or
jbe
push
mov
pop
push
add
cld
fst
js
mov
sub
add
data16
arpl
and
movsl
push
fsts
clc
arpl
outsb
push
loopne
pop
adc
or
out
negl
dec
adc
jne
mov
mov
inc
pop
ss
ficoms
mov
mov
in
lods
pushf
shrl
inc
fcmovnu
stc
sbb
mov
and
pop
data16
lcall
add
push
cli
sahf
jno
pop
xor
inc
pusha
cli
dec
insl
test
jmp
movsl
fs
aam
mov
sub
add
hlt
jecxz
inc
mov
adc
xor
cs
pop
pop
dec
rorb
rcrl
or
daa
fiaddl
add
pop
mov
pop
xor
jge
lcall
lret
jno
xor
mov
pop
hlt
iret
aam
sbb
xor
sbb
xchg
jnp
dec
push
subl
cmp
nop
ret
lock
fdivrl
sub
cmc
push
lcall
adc
les
add
adc
call
inc
add
stc
xor
and
test
movsl
jb
popa
push
push
xchg
gs
lea
fwait
jecxz
add
cmp
lcall
jecxz
sbb
dec
xchg
stos
mov
fwait
iret
fsub
imul
int3
xor
push
or
aas
ljmp
subb
movl
lock
jmp
imul
push
leave
scas
sbb
mov
add
jecxz
push
cmc
nop
xchg
pusha
enter
ds
add
push
xor
adc
sbb
xor
xlat
fs
arpl
or
xlat
mov
inc
mov
sub
ss
cmp
mov
add
sbb
dec
pop
push
jo
ja
dec
mov
push
out
mov
xchg
sub
inc
ret
dec
lahf
xlat
arpl
mov
lret
call
jmp
or
jae
inc
lea
add
fnstenv
adc
add
rolb
mov
mov
or
arpl
mov
into
cmp
out
movsl
stos
mov
jno
out
sub
jmp
and
and
push
push
int
push
mov
inc
imul
pop
and
gs
add
xchg
out
fwait
cmp
cld
mov
clc
lahf
fidivrl
mov
push
addb
shrb
mov
mov
rclb
addr16
cmpl
jl
ljmp
jp
das
loope
int3
lock
or
mov
mov
or
or
xor
jns
dec
outsb
rclb
xchg
push
mov
rol
adc
or
push
jae
dec
imul
cmp
and
repnz
stos
push
add
xchg
or
cmp
in
mov
mov
dec
inc
sub
push
adc
scas
mov
inc
jmp
leave
ja
aaa
stos
scas
adc
cwtl
mov
aas
daa
cmp
sbb
rorb
xor
shlb
xchg
fwait
jno
cld
int3
cmp
jo
scas
stos
mov
add
sub
pushf
mov
mov
sub
cli
addr16
stos
addb
pop
jg
or
push
cltd
insb
jecxz
cld
jo
or
in
fisubl
in
sub
and
cmpsl
pop
cmc
mov
mov
xchg
mov
imul
subb
dec
sbb
mov
pop
mov
cmp
jno
movsb
cli
lods
or
out
ds
hlt
dec
xchg
imul
cmp
je
jmp
sbb
into
push
dec
fwait
or
fsub
aaa
leave
call
add
ud0
mov
xchg
shll
xor
imul
adc
pop
mov
insl
pop
sub
mov
mov
fcomps
arpl
mov
adc
das
fcompl
sub
fimuls
dec
decl
in
sbb
mov
push
pop
xor
je
sub
push
mov
jo
pusha
inc
mov
adc
cli
xchg
xchg
int3
dec
stc
xor
outsl
add
ds
push
icebp
or
adc
add
or
popf
sub
mov
cmp
mov
popf
mov
pushf
das
mov
ds
cmc
push
imul
pusha
jg
sub
into
dec
jmp
jmp
adc
mov
sub
xchg
inc
testb
test
adc
ljmp
dec
jecxz
xor
mov
cmp
aam
and
mov
insb
and
xchg
cmp
iret
xchg
fistpll
cmpsb
dec
sub
fldl
jge
scas
pushf
cwtl
stc
mov
xchg
stos
mov
movb
scas
and
jg
sbb
sbb
lock
repz
xor
cmc
mov
subl
call
xor
shl
imul
cld
cmpsb
mov
jg
enter
push
sub
cmp
mov
sub
scas
mov
movsl
adc
mov
jecxz
lahf
xor
addb
mov
icebp
jp
cli
icebp
loop
je
adc
imul
adc
xchg
xchg
mov
icebp
outsl
js
data16
stc
lds
pop
adc
cmpsb
into
in
xor
push
loop
add
xchg
inc
sahf
jne
pushl
outsl
sub
into
leave
jge
pop
andl
cld
adc
xlat
jmp
je
xchg
sub
fildl
out
cmp
loop
push
sub
push
rclb
ret
call
es
lds
add
xor
fldt
add
sti
sub
loope
je
dec
cmp
clc
xor
and
mov
xor
ds
rcrl
jb
sbb
xchg
aas
popa
inc
test
mov
or
ret
xchg
dec
insl
popa
js
es
out
imul
jmp
pop
dec
and
and
push
popa
pop
jbe
hlt
test
dec
push
pop
dec
movsl
rcll
pop
test
xchg
pop
test
sbb
ja
icebp
jle
je
fmull
test
adc
jecxz
jecxz
push
mov
sti
mov
leave
or
or
and
fnsetpm(287
inc
mov
or
fadds
push
fs
xorl
sub
test
or
lret
add
mov
xlat
aas
imul
scas
xorl
dec
in
pop
cmc
iret
lods
in
mov
out
jne
out
jnp
cmpsb
fdivs
mov
and
pop
push
daa
hlt
testb
or
push
lea
mov
js
int
mov
mov
aad
out
pushf
insb
add
aaa
add
cs
shlb
and
rep
dec
jne
push
adc
sub
xor
rolb
inc
push
fidivs
adc
cmp
nop
jb
dec
inc
insl
pop
sarl
ljmp
fbld
mov
mov
mov
ds
test
fucomi
lret
in
push
rclb
out
cmp
insl
lea
push
mov
bound
stc
mov
pop
xchg
sbbl
mov
hlt
jl
ja
cmp
aad
dec
push
pop
push
dec
aam
adcl
pop
or
mov
mov
filds
movsl
and
rcr
adc
pushf
or
icebp
mov
mov
loopne
ss
lcall
rep
iret
iret
or
adcl
ret
paddsw
insl
xchg
sub
inc
jae
jne
xor
sub
push
arpl
pop
sbb
insb
imul
icebp
mov
and
js
mov
pop
sub
xchg
sbb
mov
sbb
call
imul
rcrl
fidivs
xchg
xchg
fdivl
adc
addb
jb
int
cli
jle
sub
cmp
mov
add
stos
xor
nop
lock
stos
mov
stos
add
std
sub
fiaddl
xor
je
lds
adc
stos
lcall
add
mov
orl
mov
es
xor
out
sbb
and
ret
cmp
outsl
push
in
or
sbb
adc
mov
mov
iret
sbb
mov
inc
lods
fcoms
sbb
aam
lret
and
fxch
sbb
notb
aam
repz
jmp
push
jle
mov
xor
dec
mov
mov
aas
push
pop
mov
mov
xchg
inc
sti
nop
int
ljmp
lock
shll
fidivrl
sub
adc
jle
inc
xor
lea
pop
and
cmp
jns
pop
ficompl
loop
imul
clc
and
addl
xchg
dec
sub
mov
xchg
rolb
cmp
lret
and
lret
xor
mov
sbb
mov
mov
mov
mov
rcl
xchg
pop
adc
jp
xorl
je
leave
add
inc
mov
imul
mov
and
jg
sub
cltd
jmp
psrad
loope
mov
inc
dec
xor
addr16
push
lods
push
and
jb
mov
mov
adc
jmp
les
lods
sbb
dec
push
cmpsl
movsl
lret
fs
cmc
and
xor
hlt
add
stos
addr16
ds
xchg
jb
sub
jnp
xchg
push
fs
fwait
lret
mov
inc
sub
test
out
push
push
jl
out
aaa
or
sub
xchg
jae
sub
mov
adc
movsl
jmp
lds
mov
icebp
sub
inc
repz
fstpt
insb
xchg
add
pusha
leave
inc
sub
cmp
test
fdiv
or
out
adc
sub
notb
mov
jecxz
leave
cmp
sub
jae
inc
pop
mov
test
and
lods
lahf
sub
aad
lods
xor
sbb
repz
xchg
pop
sub
or
xorl
push
sub
iret
jnp
aas
test
movsb
mov
and
add
inc
repz
nop
sub
jo
rcll
push
sbbl
xor
adc
loopne
push
cmpsl
fstl
mov
js
mov
leave
clc
cmp
nop
lret
shl
sbb
push
les
mov
xchg
add
cmpsl
xchg
popf
mov
adc
cmpsb
stos
repz
add
mov
inc
sbb
xor
cmp
mov
inc
icebp
xor
negb
insb
xor
adc
imul
lcall
jecxz
das
mov
sbb
test
adc
fldt
movsb
cmovno
in
sub
xor
mov
jne
fcomp
xor
scas
cmpsb
sbb
jle
mov
data16
xchg
lea
ret
or
jl
pop
pop
dec
popa
sbb
xor
mov
inc
lahf
pop
mov
daa
ja
nop
sub
arpl
push
add
popa
jge
lret
repz
in
cli
xor
sbb
ljmp
icebp
push
inc
cwtl
xor
test
xchg
jae
cmc
adc
sbb
push
dec
dec
push
rcrl
xchg
inc
lret
test
or
inc
jge
daa
loope
test
dec
sub
jp
frstor
insl
outsl
sub
add
cmp
lcall
mov
ret
cmpsb
and
das
mov
pop
push
sbb
test
mov
cmpsb
cli
pushf
mov
mov
xchg
mov
imul
add
sub
and
mov
incl
lret
adc
notl
outsl
jg
pop
das
mov
add
test
inc
mov
cld
jmp
xor
sub
adc
clc
pusha
cmp
push
xchg
and
adc
int3
xor
xor
dec
in
enter
andl
xor
test
leave
repnz
cmp
ret
sub
cli
dec
mov
cld
loope
inc
data16
arpl
cmp
dec
mov
and
fdivr
movsb
jns
sti
or
cmpsl
xchg
xor
jnp
aas
std
rorb
push
shl
inc
pusha
lods
push
mov
mov
out
xchg
aaa
xchg
scas
xchg
push
pop
lret
inc
xchg
xor
push
ret
pop
inc
xchg
cmpsb
mov
imul
roll
pop
cmpsb
fsubrs
mov
or
xchg
in
sbb
movsb
dec
xchg
lods
inc
sub
jo
jb
dec
cmp
les
movsl
lcall
mov
cmc
xlat
je
ljmp
lret
arpl
lds
xor
sbb
cmc
cmp
mov
aaa
jg
mov
xor
inc
jp
ret
cs
call
insb
cmp
xor
clc
pop
lcall
addr16
mov
dec
pop
sbb
jmp
or
shlb
aad
pop
cmp
repnz
cltd
aaa
xchg
inc
pop
sbb
sbb
cmp
fisttpl
faddl
xchg
mov
insl
insl
mov
xor
out
fstps
arpl
loopne
sbb
in
aam
lods
in
jns
sub
jb
xchg
add
int
push
dec
jmp
out
repnz
mov
mov
dec
sub
adc
pop
lcall
and
leave
mov
loopne
ss
jnp
ret
je
daa
mov
and
mov
mov
stos
push
pop
lock
std
pop
cmpsl
push
cs
cli
arpl
mov
fisttpl
mov
mov
lods
xchg
dec
cltd
push
movsl
pop
or
in
dec
mov
inc
fwait
lods
pop
lahf
mov
add
dec
fwait
inc
and
cmp
gs
inc
rolb
cwtl
loopne
and
cmc
daa
dec
mov
int3
insb
paddusw
jecxz
je
nop
sbb
xchg
ss
pop
enter
and
call
clc
fldt
cs
pop
ret
inc
dec
rclb
jb
loop
dec
repnz
mov
xor
fldcw
fwait
mov
out
xlat
jmp
mov
xchg
fwait
aad
and
xor
lahf
fstl
insb
inc
mov
adc
ret
dec
jno
fcomi
rcl
adc
out
fimull
inc
or
xchg
adc
sub
gs
jo
sub
iret
xor
stos
repnz
sahf
fidivl
dec
xor
pop
out
dec
push
adc
mov
jp
pop
mov
inc
jp
stc
and
push
push
scas
mov
or
fnstsw
xor
sbb
out
movsl
mov
pop
in
std
adc
outsl
stc
pop
fildl
sti
test
pop
cmpsl
dec
das
jl
add
outsb
movsb
sarl
inc
pop
mov
cmpsb
or
jne
addr16
lret
lahf
es
jnp
ljmp
mov
aad
pop
mov
fcoms
or
lcall
jp
dec
sub
dec
inc
sub
jl
popf
movsl
addr16
mov
mov
lds
add
clc
dec
pop
dec
aam
mov
jp
outsl
xorb
fsubrs
es
xor
mov
push
lea
ret
sub
lret
mov
jp
jo
lret
inc
arpl
adcb
int
out
inc
sbb
dec
lret
mov
mov
add
or
xor
mov
jbe
xchg
mov
xchg
fsubrl
stos
sbb
test
in
test
int
cmp
insb
xor
pop
or
mov
jae
adc
and
sbb
je
sub
add
call
mov
sub
pop
adc
ljmp
mov
sub
dec
and
push
clc
pop
mov
or
jmp
mov
adc
fs
pop
das
xchg
call
push
movsb
je
iret
xor
imul
leave
into
add
std
loope
fadds
xchg
in
fcoml
xchg
es
fidivl
bound
jo
loop
xchg
sbb
sbb
mov
lods
xor
movsl
sti
adc
push
lcall
sub
xlat
and
push
enter
lea
pop
movsb
test
bound
jmp
ljmp
ds
cmc
xchg
push
adc
cmpl
xor
xor
sub
xor
push
sub
xchg
repz
add
lcall
mov
adc
mov
xchg
pusha
pop
mov
cmp
sub
mov
cwtl
jl
into
bound
sar
gs
jge
mov
xchg
mov
clc
test
and
inc
or
mov
adc
fwait
xor
cmp
xchg
mov
inc
xchg
add
imul
into
decb
xor
js
mov
test
jl
outsl
or
cmp
inc
cmpsl
push
cwtl
or
push
enter
mov
daa
test
and
fdiv
add
std
and
cmc
icebp
xlat
arpl
pusha
dec
mov
xchg
xchg
and
aas
in
btr
scas
ljmp
outsb
je
addr16
call
mov
xor
jb
cmp
popf
fildll
out
mov
cmc
mov
call
imul
shl
dec
leave
inc
lea
aam
dec
js
xor
xor
repz
insb
fldl
addr16
imul
sub
test
jge
xchg
jno
mov
lds
sub
or
fs
mov
sbb
mov
sub
lock
add
cmc
adc
out
jo
pop
jg
ss
jg
add
xor
push
pop
cmc
push
cmp
push
rcl
rcrb
sbb
ret
lahf
test
xchg
mov
int3
add
outsl
inc
imul
mov
pushf
jb
out
testl
loopne
mov
cltd
decl
mov
ja
sbb
pop
jns
jecxz
lret
pop
push
cs
push
pop
push
fisttpl
mov
mov
mov
adc
fbld
mov
fwait
or
adc
jp
add
push
aaa
or
stos
sub
jmp
cmc
jecxz
mov
cltd
call
add
cmp
push
mov
push
mov
cmp
int3
xchg
adc
jl
enter
dec
sbbl
push
aam
popf
ljmp
mov
in
lcall
cli
aaa
or
cs
xor
cmc
dec
cli
stc
xcrypt-ctr
cmpsl
lcall
jle
adc
fs
imul
xor
or
pop
fmull
mov
xchg
stos
pushf
adc
cmp
clc
sub
icebp
imull
pop
push
sbb
daa
sbb
iret
cmp
jae
push
xchg
stc
loop
imul
adc
andb
add
mov
sbb
push
in
fistps
jmp
daa
push
xor
ret
adc
fsts
add
adc
push
xor
cmc
adc
xchg
stos
dec
adcb
sar
sahf
je
or
imul
lret
test
mov
out
fcomps
fcmove
in
mov
call
mov
jns
push
xor
stos
jno
aad
lods
loopne
and
out
sahf
xchg
mov
repnz
sub
data16
jo
inc
fldenv
mov
loopne
ret
scas
add
add
ljmp
mov
xorb
xor
pop
lods
and
fsubs
repnz
ror
adc
xor
xchg
mov
aad
xor
push
lods
push
test
movsl
int
lret
adc
inc
mov
pop
adc
xor
cmc
jg
and
mov
sarl
in
gs
cli
test
mov
xchg
leave
push
cmc
mov
dec
inc
and
xchg
push
sbb
outsl
movsb
lods
lcall
imul
in
stc
add
and
inc
stos
aaa
cmp
jb
mov
mov
orl
insl
pop
mov
mov
sub
aas
mov
mov
xor
xchg
adc
dec
mov
sbb
dec
fucomp
push
jl
popa
insb
mov
mov
dec
jae
cmp
arpl
sti
xchg
out
insb
ror
dec
push
pop
inc
mov
add
sub
je
subl
nop
or
and
adcl
lods
cmp
andl
jp
add
mov
sbb
xchg
mov
push
stos
imul
loope
dec
mov
add
outsl
jp
dec
and
iret
cmp
inc
add
arpl
cmpsl
cmp
insb
jl
dec
repz
mov
test
jge
or
push
int3
movsb
jmp
cli
stos
mov
fbld
sbb
aad
or
into
outsl
leave
ficoml
sti
cmp
cmp
mov
xchg
cmp
cmp
mov
sub
ss
fldl
inc
mov
xor
jp
movl
mov
mov
pop
stos
jo
out
sbb
dec
ret
out
les
xor
std
or
xchg
inc
test
and
sahf
and
xor
cmp
adc
push
mov
out
xchg
and
jne
cmp
fpatan
stc
mov
sub
or
push
movl
xor
sbb
test
mov
xor
xchg
add
out
arpl
adc
lret
push
enter
sbb
fistpll
and
testl
dec
add
xchg
testb
mov
bound
mov
rol
int3
fistpll
sbb
mov
xchg
imul
out
cmp
jmp
and
inc
mov
call
push
jge
mov
jno
dec
mov
and
scas
jle
xor
clc
stc
test
adc
sbb
mov
imul
daa
movsb
pop
outsb
mov
mov
mov
jnp
push
iret
iret
lock
das
sbb
push
add
aaa
push
cmp
lods
or
shll
ss
cmp
and
insl
mov
test
and
sbb
ljmp
mov
cwtl
sbb
xchg
inc
imul
cmp
push
insb
mov
or
sub
js
test
cmpsb
jmp
leave
mov
mov
flds
or
dec
std
xor
aad
xor
outsl
mov
inc
pop
mov
cmp
scas
inc
mov
leave
imul
lcall
and
lds
insl
pop
inc
cs
xchg
push
fwait
mov
xor
inc
imul
out
xlat
push
xchg
out
mov
ret
push
jnp
jl
pusha
cmc
dec
divl
mov
pusha
mov
push
mov
mov
xor
aam
addb
int
xchg
mov
and
mov
test
mov
xchg
add
add
sub
aas
lahf
movsl
inc
xchg
mov
idivb
sub
mov
mov
out
imul
cld
cmp
xchg
inc
cmp
mov
in
filds
bound
cmc
add
adc
mov
mov
or
push
dec
cwtl
sarl
jno
out
inc
cmp
fwait
add
cmp
cli
add
xor
subb
out
jmp
mov
stos
sub
sahf
adc
inc
lods
lret
mov
sub
fists
outsb
stos
pop
mov
mov
fstpl
orl
cmp
clc
cltd
leave
sbb
jo
pop
lret
jl
sti
in
jb
dec
sub
dec
fcomip
pusha
mov
loop
dec
adc
xor
dec
push
fwait
lcall
sub
xor
cs
insb
mov
es
lahf
mov
rolb
jnp
mov
sbb
push
or
xor
std
mov
int3
mulb
adc
stos
ret
xor
jns
loopne
jp
icebp
jl
inc
push
cld
repnz
xchg
out
fnstcw
repnz
sbb
dec
cmpsb
mov
sub
bound
dec
inc
add
lahf
mov
jl
cltd
and
pop
stos
movsl
inc
adc
pop
xchg
jmp
clc
addr16
ja
adc
repz
dec
sbb
ss
xor
jge
pop
and
loopne
dec
mov
out
adc
int3
add
fnstcw
cli
ret
jle
jecxz
xor
outsl
jns
inc
inc
movsb
loope
or
jae
andb
dec
sbb
push
jo
lods
or
add
cmp
sub
test
int
popa
jno
int3
push
out
pop
add
jecxz
dec
inc
testb
ret
sti
dec
inc
out
dec
repnz
push
push
in
xlat
mov
mov
cld
fimull
in
mov
dec
mov
das
jns
test
pop
pop
xor
lahf
jl
std
fcmovb
mov
add
cmp
loope
int
jno
insb
adc
push
inc
sahf
sti
or
cld
std
stc
daa
in
xchg
popf
xor
jbe
push
lds
mov
iret
xor
mov
mov
aam
pop
mov
out
add
push
dec
sti
cmp
push
mov
add
leave
and
push
mov
or
cmp
les
push
xor
inc
fwait
sbb
mov
fsubp
jno
and
in
pushf
xchg
repz
in
and
xor
sbb
adc
sbb
and
inc
and
les
adc
jp
inc
fldt
cld
fs
push
dec
movsl
add
testb
dec
mov
cmp
dec
pop
adc
lods
scas
inc
mov
sub
sub
cmp
in
cwtl
jae
mov
lahf
pop
test
fidivrl
pop
adc
or
sub
mov
scas
fxch
cltd
xor
and
outsl
call
or
cmp
dec
pop
cmp
scas
pop
xchg
sub
adc
mov
lahf
in
xchg
pop
inc
mov
fadd
in
inc
jno
or
idiv
pop
test
mov
push
cltd
rcll
shll
push
jne
mov
loop
cli
imul
push
lret
insl
xchg
shr
andl
test
xor
add
lea
call
adc
mov
aas
sar
testl
mov
stos
jecxz
ret
nop
adc
iret
jo
mov
dec
dec
insb
aaa
xchg
movsl
in
push
cltd
mov
lcall
mov
lahf
outsb
xlat
hlt
es
movsb
pop
xchg
cs
push
mov
sub
ret
mov
sbb
mov
test
js
pushl
cmp
fisubrs
xor
cld
pop
push
push
jg
lret
movsb
pusha
inc
lods
xchg
lds
pop
push
fdivp
outsb
adc
js
loop
mov
cmp
fcompl
imul
pop
sbb
adc
xchg
pushf
push
sub
push
adc
out
mov
fimull
dec
lock
in
jle
int3
test
and
insb
movsb
push
fucomi
notb
adc
inc
inc
and
xchg
ret
rcrl
cwtl
loop
ja
xorl
jno
std
leave
mov
inc
cmpsl
clc
lds
push
fsubrp
icebp
pop
in
scas
in
cmp
sbbl
arpl
test
pop
cmp
push
xchg
adc
push
lahf
sarl
mov
xchg
mov
jae
out
mov
jp
xchg
mov
pop
push
outsb
cmp
scas
pop
xlat
xchg
enter
lret
jg
sub
jnp
dec
inc
in
add
xchg
dec
push
cs
mov
cltd
mov
xchg
scas
pop
add
lret
insb
xchg
loopne
xor
mov
xchg
jmp
push
mov
sarb
mov
mov
mov
lods
lds
iret
inc
mov
lret
inc
and
mov
aam
pop
rorl
adc
pushf
dec
jne
clc
adc
adc
xor
mov
mov
repz
cld
fldl
test
mov
mov
jbe
mov
rcr
mov
lcall
pop
jns
cmp
push
inc
mov
sbb
xchg
mov
orl
mov
int
push
xor
mov
xchg
mov
add
add
mov
cmp
and
sub
adc
fstl
nop
insl
movaps
popa
notl
leave
sub
ljmp
mov
cld
mov
pop
dec
adc
or
aaa
repz
pop
cmp
int3
ds
aaa
and
lods
into
std
xor
and
in
xor
rclb
xorl
mov
lods
popa
popf
clc
add
out
push
cmp
mov
ljmp
mov
into
into
cmp
cmp
add
and
dec
lret
icebp
test
testb
sbb
pop
aaa
pop
pop
dec
call
outsb
add
repnz
inc
lret
outsl
call
outsb
outsl
dec
lods
sbb
mov
xor
pop
sbb
test
test
pushf
adc
je
outsb
sub
sbb
andnps
add
nop
mov
pop
or
pusha
adc
idiv
jae
mov
sub
ret
cltd
test
orl
lods
cmpb
icebp
outsl
in
push
pop
add
mov
dec
sbb
clc
fwait
ljmp
ret
fwait
jmp
mov
out
mov
sub
stos
jp
clc
repz
xor
cmp
int
add
cmp
jno
xchg
dec
xchg
cmp
movsl
xchg
sti
jne
push
int
cwtl
fistl
lahf
enter
fcomps
jb
jb
stc
in
lcall
or
call
sub
cltd
imull
scas
in
and
sub
mov
sbb
xchg
sbb
aam
mov
es
mov
icebp
xor
std
mov
fidivs
jp
bnd
xchg
shl
cmp
jmp
pop
adcl
mov
add
popa
cmp
mov
pop
fwait
xchg
ss
data16
aam
scas
loope
popf
jno
lret
sub
xchg
push
mov
fsubrs
lret
outsl
adc
xchg
test
adc
in
loopne
scas
mov
cld
push
jmp
mov
out
ficompl
pop
push
lcall
cmp
movsl
jecxz
dec
add
jge
iret
in
xor
arpl
ret
jo
pushf
sub
fs
xchg
sbb
jp
add
jno
outsb
scas
xor
jmp
inc
out
xor
dec
stos
dec
jle
inc
mov
inc
div
xchg
lea
xchg
push
jno
jle
fcmovnu
and
xchg
xor
mov
mov
adc
cmc
stos
call
aas
mov
mov
lret
jo
or
mov
daa
fnstenv
sti
lods
push
xchg
xor
insl
lea
lea
xor
lahf
rsqrtps
es
mov
or
aas
jmp
pushf
sub
and
jb,pn
negb
push
mov
into
dec
cmpsb
mov
push
mov
jae
into
addb
jo
gs
negl
mov
stos
cltd
test
or
and
hlt
mov
into
movsl
xor
ja
dec
push
cli
aad
ja
sub
push
xchg
sub
dec
movsb
add
loop
sti
inc
mov
mov
je
mov
sub
mov
mov
mov
leave
mov
mov
int3
dec
nop
mov
int3
jb
xchg
sub
into
es
xchg
gs
in
jne
sti
pop
jae
aam
dec
mov
mov
mov
outsl
int3
ss
mov
shrl
sub
jecxz
push
incb
fwait
subb
in
push
cmpsl
scas
pop
add
mov
imul
addb
rorb
add
sahf
or
ja
and
jle
jne
scas
jb,pn
shrl
fs
cmp
popa
into
out
lahf
pop
arpl
shrl
das
insb
jae
sub
mov
test
push
movsl
mov
sbb
push
out
pop
testb
add
rcrl
dec
push
jl
and
mov
aam
cs
shll
cmp
movsl
xchg
inc
je
push
and
or
push
popa
out
hlt
aas
or
jb
inc
mov
inc
xor
imul
mov
xchg
idivl
sub
scas
xor
imul
in
push
js
fiadds
pop
fsubs
scas
sbb
sbb
push
outsb
dec
lea
faddl
fwait
push
enter
adc
or
aaa
scas
sbb
data16
test
sub
shlb
xor
cwtl
loop
dec
insb
pop
adc
js
loop
in
xlat
sbb
xor
add
scas
inc
sbb
jl
pop
lds
movsl
and
sub
or
data16
push
jge
out
je
insl
push
jmp
mov
inc
dec
xchg
test
inc
orl
mov
decl
sub
insl
push
aas
shrb
add
addr16
and
into
or
pop
ds
push
push
jo
or
dec
mov
daa
dec
jmp
or
dec
ds
jo
gs
int3
xor
jo
or
dec
add
cmc
cmpsl
adc
xor
incl
imul
in
inc
imulb
mov
cmp
inc
outsb
push
mov
mov
ret
xchg
sbbb
dec
xor
and
lds
test
sbbb
dec
xchg
out
cs
sbb
inc
jnp
inc
or
push
and
or
mov
fsubl
mov
pop
jae
push
sbb
jbe
jle
ds
notl
and
aas
xorl
addr16
and
or
addr16
mov
scas
mov
repz
int
pop
into
fcoms
lods
dec
and
and
push
dec
inc
xchg
hlt
jp
loop
in
dec
dec
or
inc
dec
cld
stc
jle
mov
pop
push
lret
xchg
pop
xchg
pop
and
or
mov
add
aas
xor
out
sub
inc
add
out
mov
jbe
inc
popa
pop
repz
clc
lock
mov
inc
cmp
inc
cmp
ret
add
jl
loopne
in
std
call
clc
push
orl
jnp
inc
lret
add
lret
loope
cmpsb
jmp
mov
ffreep
jge
and
lea
cmc
or
aad
idivb
mov
jmp
mov
mov
mov
mov
push
cli
mov
js
test
fwait
lret
mov
les
fucomp
call
sbb
push
sub
and
xchg
rcll
and
cwtl
or
pop
fnsave
xchg
popf
adc
mov
jge
mov
adcl
mov
mov
pop
inc
mov
dec
dec
sbb
loopne
daa
lcall
sub
jnp
push
sbb
ss
in
lds
jb
sub
sbbl
or
and
mov
xorb
test
pop
cs
add
ljmp
fadd
out
rcll
into
jne
and
push
xor
xchg
aam
mov
rol
push
idiv
lcall
movsb
add
pop
push
pop
sub
or
jns
xchg
sub
lahf
pop
sub
xor
pop
insl
ss
mov
xchg
jbe
test
xchg
out
ljmp
cmpsl
mov
test
adc
cmp
xchg
adc
lea
popa
push
cwtl
mov
mov
inc
pop
ljmp
mov
sbb
jp
out
xchg
jbe
ror
jbe
push
lret
and
push
push
sbb
mov
jg
pop
mov
jmp
daa
sarl
test
cmp
adc
cmc
xor
imul
aam
fcmovne
lahf
mov
xor
mov
jp
push
or
mov
jge
jo
push
dec
scas
pop
outsb
out
add
add
xchg
fwait
sub
rcr
jle
cmc
push
into
les
fadd
scas
outsl
add
jae
inc
out
cmp
mov
xor
les
test
xchg
bnd
lock
imul
cmp
shrl
and
lcall
loope
test
iret
mov
aas
repz
rolb
pop
xor
jnp
in
xlat
rcrb
pusha
mov
insl
cmp
inc
mov
das
xlat
mov
mov
flds
push
jnp
repnz
mov
scas
pop
sub
in
sub
push
xlat
shrb
out
push
and
mov
xchg
imul
ljmp
enter
mov
xchg
lahf
xor
xor
repnz
test
shlb
pop
pushf
ds
push
mov
cmp
addr16
xlat
mov
jnp
and
dec
or
mov
and
fldenv
cmpsl
fldcw
mov
push
push
push
test
jge
add
cmp
je
or
xchg
xchg
movsb
out
jb
loopne
xor
inc
lahf
cmpsb
loope
jmp
sahf
loope
fisubrl
mov
pop
adc
enter
ret
jp
das
iret
pop
xchg
add
push
aas
lock
inc
popf
mov
or
call
lock
pushf
popa
mov
sbb
inc
loop
or
je
add
push
imul
mov
sub
jnp
out
xor
cmp
adc
gs
mov
out
rcll
sub
mov
push
lea
inc
outsl
loopne
add
add
inc
dec
mov
and
inc
orb
mov
subl
push
ret
cmc
movsl
push
cmp
or
sti
pop
popf
cmp
and
adc
and
out
loope
mov
adc
mov
inc
test
xor
and
push
and
sbb
ret
daa
inc
js
sbb
out
mov
or
aaa
out
push
push
enter
add
mov
idivb
adc
inc
mull
imul
stos
stos
or
lods
lods
xchg
aas
or
mov
aaa
cld
xlat
stos
pop
and
add
jae
pusha
mov
scas
pushf
dec
pop
xchg
loope
movl
sub
inc
mov
nop
sub
imull
popf
mov
sbb
add
cmc
xchg
mov
xchg
sbb
ss
dec
neg
and
lods
subl
mov
adc
fwait
in
inc
or
mov
sub
lahf
js
sbb
sbb
adc
in
cwtl
popa
shlb
xchg
and
imul
and
test
std
pushl
add
out
push
sahf
push
sbb
mov
sub
pop
mov
cmp
mov
mov
addl
ret
mov
test
movsl
dec
sbb
push
add
sub
jecxz
inc
sub
or
mov
outsb
and
mov
lret
stos
jno
aam
pop
shl
leave
ds
sbb
or
cs
inc
pop
cli
andl
daa
fidivl
leave
ret
mov
jnp
ret
pop
pop
jecxz
mov
xchg
xchg
mov
insl
leave
popa
pop
pop
stc
push
inc
stc
fistps
shlb
in
out
xchg
sub
sti
cmpsb
inc
and
push
mov
add
push
mov
fcoml
js
in
mov
or
lcall
mov
jbe
mov
or
mov
jp
push
int3
sub
sub
jno
ds
inc
or
das
xor
into
jp
stos
sti
dec
and
and
ss
aam
cmp
rclb
jge
jne
adc
enter
cld
adc
lret
mov
jae
jmp
fadds
or
push
push
adc
pop
mov
imul
xchg
inc
sbb
lods
stos
sub
sbbl
mov
inc
lds
rep
addl
in
sbb
pushl
and
sahf
in
jb
sub
fiadds
pop
push
daa
leave
xchg
mov
pop
or
lds
fsubl
pop
add
out
and
ljmp
cs
in
pop
out
cli
push
daa
imul
ss
movsb
jecxz
out
mov
imull
push
stos
inc
fdivp
fcmovb
outsl
cli
stos
fs
iret
add
pop
xchg
pop
lds
and
mov
fadds
test
fsts
push
test
jl
ljmp
sbb
out
mov
mov
idivb
scas
cmpsb
rolb
enter
sbb
push
jg
iret
dec
dec
push
mov
fwait
dec
movsb
sbb
jns
pop
xor
xchg
enter
and
ds
dec
inc
xor
or
xchg
xchg
sarb
or
test
and
pusha
push
scas
dec
and
mov
adc
mov
cli
push
ja
pop
dec
jno
adc
gs
mov
lahf
cmp
rcll
cmp
pop
dec
rcll
arpl
imul
sub
int3
js
add
sbb
in
mov
pop
inc
jp
mov
mov
mov
in
xchg
or
sbb
fnsave
aas
out
stc
hlt
movsl
movsb
std
push
pop
push
lret
in
sahf
in
aad
jnp
jg
push
mov
inc
sbbl
mov
add
add
pusha
xor
push
pop
adc
int
cmpsl
push
dec
add
js
pop
pop
scas
and
push
xor
std
bound
das
lock
int3
enter
jo
pop
into
cmp
mov
inc
xchg
lds
cltd
in
dec
jecxz
pop
frstor
sub
pop
inc
call
add
push
jb
xor
or
clc
lea
lret
sub
fs
push
push
gs
ret
stc
jg
arpl
xor
push
jnp
fbstp
add
popf
repz
xor
mov
cmp
inc
fsubrs
sub
cli
sub
outsl
mov
loop
dec
sub
outsl
gs
rol
pop
rorb
sahf
in
clc
push
clc
cmp
inc
mov
push
aaa
out
xor
xor
inc
xchg
jmp
and
mov
jae
and
jae
xchg
xchg
fst
jge
mov
push
mov
fs
inc
ror
insb
js
sub
es
loopne
int
cltd
push
adc
xchg
mov
out
sub
sbb
cs
mov
fs
aad
sbb
mov
cmp
repz
negl
lret
xchg
test
inc
mov
jle
ja
mov
push
sbb
mov
jnp
icebp
xor
jnp
inc
pop
xor
loope
fimull
les
jg
in
testl
mov
cltd
int3
jle
ja
and
cltd
or
mov
insl
pop
das
notb
dec
arpl
cli
jne
movsl
in
push
mov
jbe
lock
clc
sub
data16
sbb
sub
mov
popf
and
dec
jb
push
cmpsl
andb
leave
cmp
dec
jge
cltd
pop
jne
ret
call
addb
and
ljmp
push
out
and
scas
push
dec
movb
sub
lods
xor
pop
push
dec
dec
pop
dec
imul
shlb
les
xchg
call
lahf
loopne
ret
and
sbb
lret
lea
fcmovb
push
cwtl
stc
lods
loope
sbb
or
dec
mov
dec
repnz
addl
cmp
shr
push
mov
inc
jo
cltd
lods
in
dec
pop
sti
mull
xor
gs
fstpt
cmp
repnz
dec
test
xor
outsb
push
pop
sbb
xor
mov
das
lock
jns
push
add
fstpt
cltd
lea
pop
and
insb
sub
or
push
dec
adc
test
mov
mov
ret
std
clc
in
xor
mov
jae
mov
pop
pop
mov
xchg
mov
loop
test
movsb
sbb
fmull
and
xor
aaa
push
xor
xlat
lds
repnz
cmp
mov
popf
mov
fbstp
and
ds
push
fmulp
xlat
pop
add
push
mov
cli
pop
fnstcw
mov
js
inc
test
adc
jae
mov
loop
pop
outsl
mov
sbb
dec
fs
dec
pop
mov
les
xchg
mov
and
cmp
gs
iret
adc
push
arpl
int3
xor
adc
shrl
inc
data16
movsb
push
sbb
mov
cmpl
lock
xor
sbb
jmp
ja
loop
xchg
adc
stos
in
pop
andl
pop
lock
out
adc
loop
std
push
movsl
imul
jmp
fnstcw
xor
push
scas
mov
rcrb
add
add
lret
or
adc
xchg
cmp
loope
dec
add
out
sub
jo
jnp
or
sahf
inc
into
dec
and
jecxz
add
pop
adc
jge
push
in
inc
jp
imul
dec
pop
add
push
adc
test
sub
inc
cld
dec
sbb
push
mov
or
add
ja
mov
mov
test
adc
mov
sbb
mov
notl
sahf
sub
lcall
shll
fcoml
inc
dec
lcall
insb
lock
or
mov
pop
aam
cmpsb
or
test
jp
mov
sub
mov
xor
arpl
and
lds
or
push
sbb
in
aam
xchg
ljmp
jecxz
out
add
mov
jp
mov
sbb
mov
xor
mov
cmp
mov
sti
repnz
push
mov
inc
pop
sahf
xchg
dec
lret
out
cmp
insb
push
fstpl
ljmp
je
test
mov
jnp
jge
shrl
xor
jl
sub
aaa
mov
xchg
sub
or
sti
push
stos
jp
rclb
adc
into
stos
adc
dec
mov
push
rorb
ljmp
jnp
rcl
pop
push
jg
movl
mov
add
cmpsl
fmull
orl
jae
scas
out
xchg
ret
pop
imul
push
add
cld
mov
sub
outsl
dec
push
pop
pop
or
jmp
cmp
decl
mov
cmpsl
mov
movsb
jmp
xor
lret
and
cwtl
sbb
imul
add
cltd
ret
mov
outsl
daa
js
imul
loop
subl
pop
sbb
xor
sarw
xchg
mov
push
mov
ret
xor
scas
ja
into
xor
pop
roll
pop
shr
add
xlat
test
sub
lds
call
hlt
mov
dec
fdivr
fcmovu
add
ds
sub
pop
bound
inc
jp
cmpsl
or
je
xor
fcompl
xchg
scas
addr16
ja
ds
iret
mov
iret
loop
push
or
jg
repnz
xor
je
shll
pusha
mov
popf
out
mov
inc
or
addr16
adc
int
ficompl
lahf
mov
rcr
mov
pop
insl
fstps
push
stos
adc
xor
adc
mov
testl
sub
push
cmp
add
mov
bound
aas
and
mov
xchg
std
pop
addr16
mov
push
mov
std
xchg
xchg
dec
outsl
dec
or
sub
add
cmpsb
in
call
mov
xor
or
repz
jecxz
popa
test
call
std
icebp
std
pop
out
gs
es
enter
dec
xchg
add
push
and
iret
idivb
outsb
pushf
aas
std
out
pop
mov
push
xchg
stos
pop
pushl
cmp
cmp
push
xlat
jns
sub
push
mov
mov
je
in
mov
push
xor
or
fs
sub
rcr
xor
and
inc
mov
imul
mov
xor
ja
movsb
lret
xor
lods
cli
loopne
in
cltd
cmpsl
xor
and
xchg
ljmp
dec
fucomp
sahf
sbb
mov
imul
add
sti
mov
dec
or
lea
incl
dec
push
pop
divb
xor
fnstsw
cmpsl
xor
push
imul
xor
mov
mov
popf
mov
fistpll
