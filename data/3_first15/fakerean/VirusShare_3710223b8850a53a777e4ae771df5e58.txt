push
arpl
jle
arpl
adc
xlat
clc
jp
push
pop
mov
repnz
or
ret
jmp
push
add
mov
icebp
outsl
push
mov
imul
mov
mov
jge
shlb
dec
pushf
loopne
xchg
inc
test
mov
lret
daa
sbb
stos
pushl
ss
aas
cmpsl
fstps
fsubr
sub
arpl
sub
roll
mov
add
fisttps
mov
push
fcmovbe
andb
jns
cmp
mov
loop
cwtl
xlat
push
dec
adc
movsb
mov
dec
mov
cmp
mov
sbb
cmovs
cmp
into
jg
int3
mov
movsb
call
mov
les
repnz
jg
add
jg,pt
arpl
test
push
pushf
ret
into
ds
xchg
pushf
ret
es
jl
lahf
xor
mov
es
hlt
mov
inc
and
jne
cmp
call
aad
inc
pushf
ret
addr16
clc
inc
cmp
fwait
pop
hlt
stc
imul
dec
pushf
ret
pop
jo
enter
dec
ljmp
mov
and
out
mov
jl
ljmp
and
mov
or
push
jg
sub
mov
mov
cmp
inc
xorl
push
ds
arpl
jg
mov
mov
ja
aaa
das
sub
mov
mov
hlt
inc
xchg
xchg
hlt
imul
icebp
andl
cs
nop
fwait
es
xorl
cmpsl
aaa
xchg
mov
inc
pusha
xchg
andl
hlt
aaa
ljmp
aas
cli
add
mov
lds
adc
ds
cmp
cmp
jne
sbb
sub
inc
inc
mov
or
lcall
sub
imull
popa
daa
inc
inc
and
imul
cmc
imul
leave
mov
arpl
mov
jle
imul
fimull
sbb
ljmp
pop
test
pop
xchg
mov
lret
scas
jbe
movsb
and
imul
stc
loop
iret
mov
dec
inc
cmc
imul
addb
inc
inc
cmc
in
movsl
js
cmpsl
out
leave
sub
inc
leave
xor
inc
icebp
dec
ljmp
or
sub
scas
sarl
or
jno
sbb
ret
mov
xor
inc
add
add
loop
inc
mov
lret
add
jne
aas
add
inc
inc
cmc
imul
mov
or
inc
sbbl
sub
aaa
sbb
dec
cmc
imull
mov
cmc
push
lret
mov
pop
and
inc
inc
mov
popa
test
or
lds
loop
and
dec
leave
mov
lock
fwait
out
imul
add
stos
xchg
imul
sbb
sbb
imull
lock
sbb
jnp
xor
sbb
call
cmc
imul
mov
inc
inc
push
inc
in
xchg
sbb
sbbb
mov
inc
cmc
imul
jmp
ret
mov
mov
lret
xchg
push
leave
add
mov
aaa
stos
int3
idivl
push
push
daa
stos
jae
mov
scas
mov
sbb
sbb
push
adc
orb
lret
scas
jbe
mov
jle
dec
addr16
cltd
mov
imul
leave
pop
std
addl
rcl
jnp
cmc
xor
aad
imul
cmc
loopne
mov
lds
adc
cmpsl
dec
stos
add
mov
add
loop
mov
sub
mov
in
inc
leave
sub
adc
sub
inc
mov
test
or
jns
cmc
lds
imul
cmc
add
sub
sbb
mov
mov
test
inc
inc
jle
push
adc
or
popf
int3
sub
jo
inc
inc
cmc
cmp
stos
jnp
mov
jnp
imul
jle
mov
mov
add
mov
std
add
repz
sbb
xchg
mov
leave
sbbb
leave
mov
xor
inc
scas
push
dec
cmc
mov
jge
ss
push
adc
dec
inc
mov
or
loop
jp
push
mov
dec
mov
push
ret
in
ds
jle
push
inc
sbbb
sbb
movsl
mov
pop
sahf
or
leave
jle
inc
inc
cmc
mov
leave
outsb
jmp
sbb
dec
add
push
sub
cmpsb
mov
aaa
aas
sub
dec
test
stos
xor
mov
jae
add
leave
add
dec
notb
out
test
mov
xchg
std
sub
adc
adc
mov
popf
jbe
push
test
jle
dec
inc
scas
push
imul
sbb
and
or
dec
int
inc
cmc
imul
cmc
loop
inc
mov
or
ljmp
pop
les
out
xchg
rolb
popa
gs
loope
mov
inc
jbe
inc
inc
cmc
push
out
imul
jle
inc
inc
cmc
mov
leave
inc
test
xor
imul
add
sub
sbb
mov
inc
fisubs
mov
push
inc
inc
inc
cmc
loop
dec
xor
inc
cmc
imul
inc
cmc
imul
lahf
xor
pop
bound
dec
xchg
add
hlt
xchg
xor
test
cmc
imul
stc
loop
pop
jle
dec
jnp
jno
inc
jle
jns
in
sbb
leave
scas
inc
inc
pop
std
loopne
pop
jl
inc
and
addb
movsl
xlat
push
rolb
or
inc
xchg
imul
sar
clc
inc
add
jl
dec
hlt
addr16
dec
ljmp
arpl
or
cmp
xor
push
daa
lea
jle
andl
inc
push
mov
push
and
shl
add
add
xor
inc
stc
pop
push
inc
insl
mov
mov
icebp
in
push
xor
pop
lahf
jp
enter
test
ja
pop
leave
icebp
add
mov
add
int3
push
jno
and
pop
popa
bound
dec
jl
aam
jns
adc
call
or
outsl
inc
sub
mov
dec
hlt
bound
gs
test
jnp
xor
icebp
pop
je
std
imul
push
jno
jmp
push
pushf
pop
sbb
lea
pop
push
adc
in
dec
xor
dec
call
inc
fistpl
mov
cld
insb
mov
outsb
xor
jnp
popa
or
inc
daa
mov
outsb
shrb
dec
jo
inc
jne
jecxz
mov
cmc
loopne
imul
mov
je
sub
cs
cs
sbb
adc
mov
mov
les
loope
xchg
jle
dec
jno
adc
aad
adc
into
cltd
leave
pop
or
cmp
mov
sti
into
add
pop
adc
jae,pn
shlb
xor
dec
dec
outsl
adc
jbe
mov
pop
mov
mov
sub
sub
cltd
stc
cmp
gs
leave
xor
loope
lods
sahf
mov
lcall
sti
mov
stc
pop
sbb
push
xchg
adc
dec
lds
pop
pop
inc
mov
jne
jle
xor
mov
ret
lret
repnz
mov
retw
imul
xor
push
imull
aaa
mov
icebp
stc
pop
add
stos
push
orb
push
xchg
add
xlat
rolb
jb
push
jns
ficoms
xor
es
push
insl
cli
cld
jnp
mov
loop
andl
lahf
dec
inc
sbbl
sbb
dec
add
adc
add
andl
sbb
push
lods
mov
jo
test
inc
repnz
stos
aad
xchg
push
lods
mov
mov
pop
mov
aaa
sbb
insl
lret
jb
pop
lods
jnp
add
dec
inc
gs
and
out
inc
xchg
es
das
inc
test
mov
fwait
scas
jne
lret
jg
or
xchg
ss
leave
add
pop
dec
jo
cmp
sub
in
xchg
lahf
addb
lret
pop
lods
imulb
cs
xor
movsb
dec
imul
dec
cmp
or
inc
in
incl
ja
movl
jp
test
in
sub
sub
xor
stc
leave
ljmp
fmuls
push
in
jbe
loop
icebp
mov
icebp
jb
popa
aas
loopne
dec
push
insb
gs
repz
or
cld
cmp
dec
loop
test
repz
filds
adc
xchg
mov
shlb
sbb
data16
dec
shll
dec
jbe
cwtl
int
inc
in
push
fistl
fcos
mov
les
loope
bound
xchg
cmp
pop
bound
add
mov
lret
fnsave
sbb
cmp
xlat
mov
dec
and
jge
out
pusha
jns
repz
or
ljmp
inc
push
push
or
or
popl
add
sub
cmp
sbb
dec
daa
cmc
jecxz
mov
xchg
sub
or
pop
dec
jbe
sbb
bound
inc
xor
notl
fsts
inc
ss
call
dec
lds
into
lods
bound
les
mov
push
xchg
pop
mov
pop
shl
mov
dec
add
leave
pop
std
in
popa
inc
out
pop
sbb
jb
push
xchg
dec
xchg
jp
loope
out
dec
mov
or
shlb
cmp
in
push
stos
jge
add
lock
push
dec
in
mov
mov
mov
aam
out
shrb
dec
mov
loope
push
and
jns
out
jno
std
iret
lds
dec
dec
test
popa
sbb
mov
popa
sub
lock
inc
jns
lret
call
fidivrl
add
xlat
int
mov
mov
out
aam
dec
lods
cli
jo
sarl
dec
jno
test
inc
lret
clc
sbb
or
add
add
xchg
adc
sbb
lcall
popf
jnp
push
mov
push
inc
inc
dec
movsb
daa
into
adc
sub
mov
shr
addl
loopne
outsb
cli
popf
lret
pop
pop
popa
lret
cmp
sub
js
adc
push
sbb
sbb
les
fldenv
bound
sub
fwait
iret
out
add
gs
in
pop
mov
test
sub
jb
cmovae
adc
pop
dec
enter
mov
nop
pop
jbe
shlb
xorl
dec
sbb
mov
rolb
in
pop
or
sbb
jno
sbb
push
out
mov
stc
lcall
and
insb
dec
add
jne
pop
sub
scas
mov
adcl
das
inc
ss
ret
sub
test
in
cmp
add
andb
dec
idivl
dec
rol
lea
and
int
mov
std
jno
ljmp
shl
call
shlb
xchg
or
bound
sbb
stc
or
jae
out
jmp
sub
idivb
test
xchg
out
fs
mov
push
sub
adc
sub
xor
in
mov
or
lret
insb
cmp
inc
mov
jne
ds
jecxz
lahf
loopne
dec
inc
mov
sub
push
repz
push
sbb
leave
shrl
push
popa
ret
divl
insl
inc
enter
smsw
mov
ja
test
cmpsb
jnp
popa
lods
push
add
ret
push
icebp
push
and
das
sub
adc
or
xor
sbb
sub
mov
roll
pop
mov
dec
push
sbb
sub
inc
cmpsb
cltd
push
jmp
mov
jbe
xchg
jecxz
mov
adc
sub
push
jmp
enter
ret
jp
and
call
insb
xor
mov
ljmp
adc
cmp
stos
test
mov
outsb
jmp
inc
xchg
mov
mov
das
insl
sbb
cmp
jge
mov
or
or
xchg
sbb
sbb
stos
sarl
ljmp
inc
adcl
outsb
test
pop
jmp
xchg
cs
push
jne
mov
cmpsb
mov
dec
test
lods
aas
out
js
repz
and
adc
lds
pop
sti
jmp
jecxz
mov
adc
stos
cmp
adc
sub
jnp
scas
mov
insl
int3
add
test
cli
xor
shrl
data16
ds
add
xchg
xchg
rorl
jae
jge
sbb
icebp
cmp
fs
ljmp
sbb
pop
shll
inc
test
push
inc
negb
shl
vcvtss2sd
pop
lret
fcoml
mov
mov
dec
lret
pushf
dec
loope
inc
arpl
push
outsb
mov
inc
push
stos
mov
cli
mov
xchg
iret
jno
lahf
push
fs
cmp
call
mov
bound
mov
add
push
sub
mov
fwait
in
pop
xor
scas
lahf
outsb
ja
out
inc
cmpl
popf
push
dec
jne
fstpt
push
pop
jns
in
xor
shrb
mov
adc
add
or
loope
push
jne
xor
stos
push
inc
mov
inc
ret
in
add
xor
fdivs
lods
shlb
icebp
addr16
lret
pop
xchg
jno
mov
xor
int3
xor
addb
xchg
test
sarb
inc
inc
jne
xor
jnp
and
loope
loop
sti
adc
aam
lods
lods
mov
lret
push
add
add
fidivrl
test
stc
in
push
dec
xor
mov
jge
push
stos
inc
sub
push
nop
fidivrl
sbb
xchg
inc
sub
dec
popa
push
sub
sbb
rcr
lds
gs
dec
lret
popf
jecxz
ret
push
push
push
loope
dec
mov
hlt
leave
roll
xor
inc
push
lret
add
aad
xor
aam
and
ret
push
push
in
arpl
push
push
les
mov
mov
fs
mov
mov
and
sbb
fwait
dec
fdivr
mov
mov
xchg
pop
sar
push
addr16
mov
push
dec
sarb
pop
js
out
mov
jo
sub
jns
aaa
mov
or
mov
sbb
and
sbb
in
pop
mov
lret
xchg
inc
inc
das
lds
imul
stc
mov
call
sub
dec
sahf
sbb
inc
dec
popf
cmp
jecxz
bound
xlat
loopne
mov
mov
call
mov
xchg
xchg
inc
push
sbb
dec
xor
xor
std
in
lods
lods
jmp
xchg
jns
adc
test
inc
insb
jae
rcr
addb
jle
add
adc
sbb
inc
dec
testl
sbb
mov
pushl
mov
inc
imul
dec
jge
mov
ja
adc
xchg
lods
dec
lret
inc
movsl
movsb
pushf
movsb
mov
popf
sub
cld
je
clc
inc
int
jae
adc
pop
xor
push
and
movsl
aam
or
test
fldcw
mov
mov
mov
cmpsl
rcrl
inc
stos
outsl
mov
xor
sbb
push
adc
scas
in
mov
pop
jmp
pop
pusha
sar
stos
pushl
add
into
movsl
jne
xor
es
movsb
jbe
fisubs
xchg
pop
add
fisubl
aas
sbb
adc
inc
icebp
jmp
mov
jnp
adc
popf
addr16
push
lods
enter
subb
enter
mov
fs
loopne
or
xchg
dec
cwtl
imul
mov
jb
cs
das
loopne
int
push
pop
mov
adc
push
mov
loopne
inc
inc
out
inc
and
testb
jl
adc
outsl
gs
out
mov
shrl
jno
sarl
add
aam
push
push
or
cld
inc
js
repnz
mov
sub
dec
jp
xor
dec
dec
mov
testl
inc
jnp
sub
mov
jnp
scas
fisttps
icebp
or
outsl
mov
xchg
xchg
daa
mov
inc
sub
out
test
out
mov
mov
jne
mov
fwait
sbb
add
sub
mov
mov
fcomps
sbb
dec
nop
stos
cmp
cmp
inc
mov
pop
repz
adc
xlat
mov
push
jns
pop
jbe
jb
stc
sub
push
ds
clc
sti
adc
stc
jne
leave
js
addr16
push
pop
xlat
adc
lahf
push
loopne
or
push
out
mov
sub
les
inc
mov
mov
fisttpll
lret
push
outsl
jge
mov
cmpsl
arpl
cmpsb
or
push
dec
pop
push
pusha
add
les
clc
mov
jmp
mov
dec
sbb
cmpsb
pusha
insb
jbe
push
imul
test
jno
dec
rep
dec
ret
stc
loopne
sbb
xchg
insb
mov
scas
add
mov
bound
pop
jo
mov
sub
jl
dec
imul
mov
adc
and
movsb
push
ret
popa
imul
arpl
fistpll
pop
sbb
adc
xchg
popa
jecxz
cmpl
adc
mov
repz
gs
ss
push
xchg
jns
sbb
addr16
sub
fimuls
sbb
jne
int
mov
cmp
and
jl
add
cs
adc
dec
jnp
out
xor
stc
jl
mov
push
test
daa
xchg
jg
cmpsl
lds
and
lret
sbb
jl
cwtl
mov
cmpb
inc
mov
inc
fnstsw
xor
aaa
push
gs
inc
jge
dec
add
movl
inc
mov
test
mov
scas
sub
aaa
popa
shrl
roll
aas
lock
lods
mov
in
add
and
add
mov
jecxz
test
dec
add
dec
fsubrp
inc
orl
mov
adc
mov
adc
lcall
xor
out
outsl
jnp
xor
xor
xor
dec
adc
dec
xlat
out
mov
lock
shrl
stc
jg
xchg
jns
mov
adc
adc
adc
push
jo
ds
fnstcw
cwtl
repz
fst
aaa
clc
adc
inc
je
xor
aas
add
or
in
mov
testl
repnz
neg
inc
jns
xchg
inc
ss
push
imul
and
push
mov
xor
push
cmp
call
ja
jle
leave
loopne
nop
in
jo
jns
cmp
sbbl
sub
enter
jns
cmpsb
test
cli
inc
mov
sbb
add
push
icebp
jne,pt
mov
sar
call
mov
andl
fnstsw
hlt
jge
ss
mov
add
xor
pop
mulb
mov
mov
mov
test
rolb
cmp
mov
jns
cmp
adc
test
sub
out
inc
jae
jb
mov
mov
mov
icebp
das
pop
loope
rcrl
cmpsl
cmp
call
pop
sub
testb
call
inc
xor
or
jnp
addr16
enter
mov
xor
pop
leave
xor
cmp
jle
aaa
rorl
stos
in
imul
push
sti
arpl
pushf
into
mov
xchg
mov
into
orl
cli
ds
stos
gs
xchg
out
sarb
cltd
and
nop
xor
jne
lock
pushf
leave
adc
cld
inc
ss
fnstcw
sti
xor
mov
in
mov
imul
pop
cmpsb
les
ljmp
stc
dec
mov
push
or
dec
cli
sbb
pop
mov
cltd
push
std
push
push
fistpl
pop
push
pop
jnp
movl
bound
test
pop
mov
adc
jl
pop
sarb
mov
aam
jmp
or
jnp
add
add
or
push
mov
add
sbb
imul
std
xchg
or
sahf
es
mov
outsl
push
and
aam
gs
mov
popa
mov
into
scas
mov
lret
into
push
push
aaa
es
mov
dec
xchg
fsubs
test
ds
mov
jne
mov
dec
adc
lods
loop
aaa
lods
mov
or
addr16
sar
jnp
push
push
fnstenv
das
insb
xlat
sahf
pop
xchg
aaa
scas
jb
jnp
push
popa
push
jl
add
inc
aas
push
push
sbb
jno
int3
or
xor
xor
leave
arpl
cs
sbb
in
call
and
fistl
and
xchg
push
sti
enter
push
mov
or
cmp
lds
fiadds
push
enter
test
xor
out
cmp
inc
movsl
andl
imul
jnp
cmpl
shll
push
sbb
cmpsl
xchg
push
popf
stos
into
mov
dec
gs
test
add
mov
imul
retw
push
fstp
cmp
andl
xchg
xchg
in
dec
jle
inc
test
push
mov
aam
ftst
xchg
daa
add
cltd
add
or
pop
ret
mulb
enter
push
stos
ss
dec
movsl
mov
push
mov
cwtl
gs
in
clc
sbb
sub
aas
add
xor
inc
mov
loopne
or
testb
rcll
mov
xor
ret
test
lods
or
sbb
out
push
mov
ss
push
sbb
mov
insb
jnp
out
mov
orb
aas
add
movsl
push
adc
je
je
subb
int
mov
popl
decl
mov
mov
and
jge
repnz
imul
xchg
aaa
vmwrite
sbb
add
insl
jmp
stc
stos
add
outsb
and
cmpl
push
dec
enter
out
xor
dec
mov
outsl
inc
loop
mov
cmp
iret
jmp
lods
sbb
out
cmp
ds
les
jb
not
push
adc
loop
xor
dec
popa
jmp
je
push
jbe
loop
push
fnsave
aas
inc
mov
mov
js
jl
jb
pop
mov
mov
add
cmp
mov
lahf
sti
in
or
out
push
push
push
mov
cli
xor
xchg
xor
je
jb
xor
jae
xor
dec
add
ljmp
pop
or
pop
iret
pop
sub
cmp
sti
lods
lret
sub
sbb
xchg
lcall
push
sti
mov
arpl
orb
add
gs
mov
dec
gs
stos
jle
jne
jge
dec
pop
jge
dec
cmp
repz
dec
enter
mov
xchg
add
and
movsb
push
and
mov
cmp
jb
rorl
jno
enter
bound
out
mov
ljmp
aaa
inc
or
aam
repnz
dec
lret
dec
loop
dec
mov
jbe
add
push
xor
inc
jl
lea
inc
pusha
imul
movsl
int3
cmp
test
fstpl
ljmp
cli
cmp
jl
test
negl
jmp
mov
ja
in
imul
jmp
xor
rorl
push
sbb
lods
cwtl
loopne
mov
pop
cltd
sarb
or
xchg
inc
stos
lock
ja
cmp
in
ja
jg
push
addr16
loopne
mov
dec
outsb
mov
test
push
pop
mov
sub
lds
xor
aam
leave
testb
test
jb
rcrl
cmp
or
and
push
dec
and
mov
push
add
aaa
mov
jae
cs
push
push
push
test
out
std
scas
imul
rolb
mov
and
cmp
adc
std
out
mov
les
jl
pop
dec
mov
arpl
mov
mov
ret
pop
lret
xor
sub
rcl
arpl
inc
lds
loopne
shr
add
xlat
repnz
jns
btc
clc
in
inc
mov
jne
roll
loope
nop
cmpsb
push
mov
dec
mov
jge
xor
inc
and
pop
add
push
lods
jmp
add
cwtl
xlat
shr
adc
in
mov
add
dec
ret
lret
sbb
mov
pusha
sbb
mov
push
push
cld
lock
adc
jp
jle
pop
sub
xchg
xchg
rorl
mov
mov
xchg
pop
inc
dec
mov
add
sbb
add
dec
sbb
fidivl
dec
stc
dec
cmp
xor
fwait
pop
push
loop
lods
negl
push
call
add
cvttps2pi
push
sbb
mov
insb
sbb
mov
sub
ja
movsb
lret
fwait
cmpsb
mov
add
inc
xor
push
std
cs
push
cltd
cmp
jge
sub
xor
cmpsl
inc
aaa
daa
mov
lret
xor
roll
sbb
sbb
lar
insl
dec
lret
loop
push
push
jmp
push
loope
pop
in
lret
jmp
sbb
xchg
cmp
pop
leave
inc
aas
loop
pushf
sub
int3
dec
ficomps
stos
push
orl
dec
dec
aaa
push
cld
xorb
test
dec
jns
sahf
pop
in
sbb
loope
pop
enter
fildll
jns
test
push
gs
sbb
add
add
lcall
cli
insl
imul
add
sub
into
add
popf
das
lods
aam
xor
mov
pop
xor
sbb
je
in
xchg
jg
or
fildll
push
adc
imul
mov
data16
mov
sahf
adc
cmp
or
inc
arpl
out
dec
mov
in
stos
lahf
dec
xor
shl
mov
and
imul
adc
mov
mov
lods
lds
xor
jns
adc
cli
push
add
in
jns
sbb
mov
pushf
pop
imul
lea
js
push
mov
dec
bound
dec
sbb
lods
cmp
inc
das
add
mov
int
adc
mov
dec
mov
stos
push
ss
movsb
out
test
je
pusha
loope
cs
mov
hlt
lods
push
dec
imul
mov
mov
lock
xchg
adc
xchg
or
int3
push
js
jns
je
prefetch
jne
addr16
lods
out
dec
movsb
xchg
inc
pop
mulb
sbbl
pop
and
sbb
cmp
fidivl
fcmovbe
pushf
pop
addr16
mov
outsb
push
dec
push
stc
push
adc
push
rcrl
and
sbbb
loope
arpl
mov
adc
inc
xlat
repnz
and
aam
popf
out
jnp
popa
or
fistpll
pop
inc
pop
adc
cmp
jns
lcall
pop
cmp
push
out
imul
cmp
mov
jns
subb
std
xchg
fistpl
out
push
xor
sbb
xlat
push
inc
popf
aam
jae
mov
cmpl
sbb
bound
cmc
and
cmp
inc
mov
dec
clc
popf
test
mov
dec
mov
sub
xchg
pop
pop
in
jl
aaa
inc
xchg
add
iret
sub
test
adc
sbb
jne
pusha
fisttpll
or
pusha
in
and
push
cli
ljmp
scas
fstpt
popf
mov
js
inc
jecxz
enter
cli
shll
outsb
pop
cld
call
mov
sbb
leave
jb
insb
shll
fsubrs
rcrl
push
or
hlt
repnz
cmp
xchg
sub
and
fs
add
stos
push
sub
sub
cmp
and
mov
sub
out
mov
push
ficomps
jo
xchg
mov
loope
stos
fnstcw
int3
xchg
shlb
lock
and
jl
pusha
adc
or
arpl
xchg
pop
xchg
out
je
out
cmp
adc
mov
aas
jns
adc
sub
inc
aaa
insb
lcall
es
jae
xchg
inc
scas
sbb
dec
add
push
sbb
mov
pushf
cld
xor
add
sti
pusha
or
pop
aas
mov
xchg
je
aad
mov
pop
sub
popl
add
imul
andl
cmp
jmp
incl
sub
rclb
push
mov
mov
push
scas
jp
mov
test
imul
cmp
jo
cmp
ds
or
adc
push
push
xchg
ret
lock
xor
clc
clc
mov
in
sahf
mov
fldl
test
mov
inc
lods
mov
push
cmp
or
push
cmp
mov
sub
aas
add
mov
push
ljmp
dec
adc
adc
and
call
int3
dec
push
xor
and
jns
push
test
lret
mov
shll
adc
lea
gs
cmp
mov
int
lret
and
les
sub
push
xchg
repz
push
jne
jnp
sub
jo
lahf
lcall
clc
cmp
sbbl
mov
nop
gs
inc
test
xor
lret
xorl
test
shl
sbb
ret
dec
fisubl
sub
dec
jmp
cmp
mov
pop
dec
rorl
add
loope
push
hlt
or
scas
jmp
gs
push
and
call
ret
or
clc
pop
mov
pop
lea
adc
movsb
je
es
nop
push
or
out
mov
add
add
popf
dec
push
cwtl
outsl
and
push
push
sbb
int
pop
add
sub
loopne
ss
ret
daa
or
outsl
shlb
sbb
test
test
mov
aaa
mov
sub
aaa
les
mov
test
adc
xchg
adc
inc
push
and
pop
mov
test
fisttpll
jns
mov
lret
addr16
popf
imul
xor
addr16
ds
and
ret
cld
push
stos
ret
or
pop
test
inc
pop
and
jbe
jg
rcrb
lret
inc
add
mov
outsl
gs
idivl
mov
aas
sbb
stos
sbb
leave
insb
xor
jne
sub
sbbb
mov
mov
inc
mov
out
add
jns
and
xor
sbb
bound
stc
jno
data16
test
dec
bnd
ror
jnp
sub
inc
mov
push
shrb
jae
jnp
aas
push
inc
cmp
rcll
ret
addl
popf
push
test
les
out
leave
add
mov
mov
lret
lods
adc
jb
inc
dec
xchg
jle
push
sbbl
jnp
jle
pop
cld
pusha
nop
out
js
xchg
sbb
cs
pop
dec
inc
outsb
repnz
push
sub
mov
leave
data16
lds
push
outsl
pop
add
mov
or
dec
js
and
mov
jg
jmp
sbb
jecxz,pt
adc
movsb
xchg
rcll
inc
repnz
movsb
fisttps
pop
cmp
xchg
lods
dec
ljmp
and
gs
xor
pop
insb
or
lock
mov
mov
xor
jmp
mov
lds
stos
scas
stos
ja
sar
out
aaa
jl
add
inc
pop
inc
jmp
push
pusha
xor
loope
lea
icebp
and
xchg
pop
sub
adc
stc
mov
pushf
sub
les
jns
or
inc
dec
dec
ds
daa
xor
outsb
cmp
cmp
cmp
xchg
rcll
int
or
fcompl
in
cmp
int
aaa
or
les
mov
call
lret
in
into
jmp
adc
mov
es
enter
imul
add
mov
cld
or
stc
pusha
in
ljmp
xor
outsl
pusha
push
std
jne
add
xorl
add
mov
out
sub
push
add
sarb
mov
dec
iret
mov
jns
or
push
push
ss
jecxz
jnp
add
push
aas
dec
jp
icebp
adc
dec
or
lcall
in
inc
lcall
pop
lea
mov
xlat
in
pop
adc
adc
loope
jle
push
in
jns
sub
jae
inc
push
jb
loop
cmp
and
xchg
add
popf
push
mov
dec
lods
loopne
cmp
repz
push
pop
pop
sub
xchg
xchg
cmp
xor
xchg
pushf
shll
cltd
adc
dec
movsl
gs
das
cmpsl
shll
jp
xchg
xchg
lds
insb
push
stos
insb
cmp
dec
cltd
mov
loop
fimull
cmp
xor
movsb
mov
mov
mov
mov
pop
sarb
faddl
ficomps
sub
mov
test
cld
cli
lret
mov
push
out
sbb
js
in
mov
lods
xchg
cmp
popf
in
outsl
pop
cmp
pusha
ja
jb
push
orb
ja
xor
push
jle
adc
pop
lods
test
push
cmc
dec
outsb
jge
mov
loope
stos
push
push
int
pop
insl
dec
aam
inc
imul
adc
jmp
mov
outsl
cmp
add
stos
mov
mulb
fdivr
push
int
add
add
inc
mov
inc
jle
mov
xchg
jle
fcompl
sarl
enter
mov
fcom
pop
sub
lcall
adc
push
mov
push
dec
ja
mov
fsubl
fsubl
insl
xchg
push
add
out
mov
lea
inc
or
jg
sbb
dec
push
push
mov
insb
sub
mulb
jecxz
jno
jg
adc
pop
aam
int
lods
mov
lret
adc
nop
pusha
ror
jecxz
shlb
push
rcr
lds
mov
inc
rol
push
sub
aas
push
xor
add
jmp
icebp
popf
leave
sub
dec
shlb
loope
in
jl
xchg
fldt
aaa
iret
xlat
sbb
xchg
jnp
add
mulb
mov
mov
add
jl
push
sbb
push
mov
aad
dec
ds
add
add
pusha
push
dec
hlt
sub
fsts
lcall
pop
insb
popf
ror
push
ljmp
add
bound
loopne
ror
roll
sbb
xor
test
and
mov
jg
adc
mov
push
jne
mov
push
ljmp
mov
cmp
in
inc
jb,pt
imul
mov
mov
cli
in
dec
mov
rcrl
mov
adc
mov
mov
arpl
aaa
sbbl
pop
sub
pcmpgtd
inc
push
cmp
jmp
aad
cmp
and
xor
push
lea
push
inc
out
movsl
cmp
imul
out
mov
pop
out
xor
lahf
mov
ret
dec
aaa
repz
pop
push
insl
xchg
fildll
pop
hlt
jb
push
mov
jp
mov
push
test
xchg
and
shrl
sahf
mov
xchg
ret
and
popa
insb
les
icebp
in
adc
inc
mov
add
insb
lock
leave
rorb
push
inc
insb
mov
jns
mov
sarl
xor
rol
divb
dec
insb
xor
push
mov
insb
fldl
xchg
in
out
cld
sbb
icebp
push
jnp
jecxz
pop
jnp
stos
xor
mov
das
movsb
push
insl
lret
mov
sub
scas
frstor
mov
pop
mov
hlt
subl
jnp
push
gs
xor
popf
xor
test
inc
sbb
adc
push
mov
mov
pushf
cmpl
lahf
mov
mov
pushl
or
xor
movsb
stos
pop
lods
adc
add
dec
cli
add
hlt
and
add
fisubs
sbb
stos
and
sub
mov
lods
je
dec
jo
push
clc
push
and
cli
pop
mov
cmp
test
stc
ret
out
push
pop
leave
mov
or
xor
jae
adc
test
ljmp
dec
inc
xlat
dec
in
jo
mov
not
mov
faddl
sahf
popa
insl
aam
mov
test
outsl
jl
std
or
repnz
mov
sti
sbb
incb
jnp
stc
in
aaa
cmpsb
pop
sub
mov
test
inc
out
sub
push
test
in
movb
push
add
movsl
out
add
aam
push
add
pop
jle
daa
leave
push
mov
mov
not
mov
pop
ds
pop
xchg
dec
aaa
mov
sarl
leave
cmpsb
scas
xorl
addl
push
in
xchg
jb
outsl
pushf
dec
popf
add
enter
and
lods
addr16
shlb
les
repnz
fbld
shll
inc
ret
mov
mull
lock
enter
insb
ja
mov
mov
arpl
sub
xchg
sarl
filds
and
sub
out
fcmovb
mov
and
cld
les
lods
adc
hlt
xor
cmp
iret
and
mov
mov
dec
lods
dec
mov
sub
push
popf
mov
push
stos
or
notb
jo
insb
mov
mov
fisttpll
sub
loope
pop
fs
dec
mov
push
cmp
enter
sbb
sbb
movsb
xchg
les
add
loopne
and
add
and
push
jmp
mov
pop
xchg
test
in
fs
adc
jae
lods
adc
push
sti
stos
mov
add
shl
sarb
mov
in
hlt
es
jmp
ret
in
dec
rorl
inc
cli
out
mov
aaa
aam
jmp
sub
and
mov
pusha
sahf
shrl
sbb
xor
or
rcrb
pop
jno
div
in
outsl
out
xchg
mov
in
sarb
xchg
adcb
aad
push
cmpsb
adc
mov
cld
inc
jle
mov
mov
xor
bound
inc
sub
es
js
or
cmpsb
or
mov
ud2
call
shl
jno
add
daa
inc
in
xor
shrb
adc
popa
mov
mov
mov
sbb
int3
popa
gs
push
adc
or
imul
sbb
pop
test
cmp
rcl
or
rcr
push
test
sub
icebp
fcoml
pop
dec
add
or
stc
dec
insl
dec
sub
or
les
cmp
andl
lds
mov
sbb
jno
mov
fbld
loopne
mov
aam
lock
or
xchg
and
mov
loope
aad
push
mov
subl
add
imul
xchg
aam
cld
xor
sbb
lds
movsl
inc
xchg
add
xchg
test
and
and
fdivs
cmp
xor
inc
rorb
es
xlat
or
sub
dec
bound
adc
loopne
add
int3
mov
xor
cmp
jge
ficompl
into
ljmp
sub
or
dec
cmp
jle
ja
movsl
push
outsb
pop
adc
push
jecxz
xor
adc
mov
push
ret
stc
imul
ljmp
insb
or
inc
jns
dec
popf
aad
sbb
lods
mov
xchg
das
pop
stc
in
xor
stos
cmpsb
push
aam
sub
fwait
mov
mov
pusha
nop
adc
or
imul
insb
or
icebp
pusha
int
stos
hlt
pop
es
jge
mov
in
pop
sub
push
xchg
dec
stos
mov
sub
adc
in
pop
icebp
xor
daa
cmp
mov
and
sub
out
push
test
test
decl
scas
pop
dec
mov
or
cmpsl
mov
adc
pop
test
dec
mov
pop
mov
outsb
xchg
rorb
out
mov
or
fwait
mov
lds
add
dec
daa
cmp
xchg
gs
inc
mov
aaa
std
add
dec
test
data16
jns
test
cmpsl
push
popa
xchg
fwait
xor
or
imul
cli
xlat
shl
dec
dec
fidivl
cmpsb
or
mov
dec
in
pop
xlat
aad
hlt
push
outsb
pop
sub
fsubrs
out
xor
repz
add
xchg
iret
call
fst
sub
pop
lock
rolb
fadd
nop
xchg
test
and
add
xchg
jne
ret
std
dec
daa
std
push
and
xor
gs
push
or
pop
fistl
cmp
mov
pop
cmp
add
leave
nop
dec
cmpsb
cld
test
repz
xchg
in
stc
out
hlt
inc
ret
movsb
mov
mov
pop
mov
push
mov
inc
rorb
cmp
dec
dec
popf
ror
xor
pop
stos
cmp
test
arpl
or
and
popa
inc
sbb
inc
mov
cmp
xchg
xor
jb
jno
dec
sbb
push
enter
stos
outsb
fnstcw
inc
loope
jnp
lcall
inc
int3
aas
stos
ds
push
ret
aas
ret
imul
fs
cmp
nop
insb
lods
js
addr16
xchg
decl
sti
dec
pop
mov
icebp
shrl
sbb
xor
cmp
js
shll
mov
outsb
ljmp
mov
insl
ds
nop
inc
loop
in
sub
adc
and
lods
lret
decb
sbb
enter
in
shrb
std
movsb
lds
mov
enter
scas
jge
inc
add
jns
lcall
ljmp
cmp
cmp
mov
popf
sbb
push
xchg
pushf
call
cmp
dec
mov
push
cmp
mov
ret
and
gs
cmp
ljmp
fs
shl
js
fwait
gs
jne
in
lcall
jecxz
stos
bound
in
divps
int3
clc
pop
aaa
loop
mov
sub
ja
lret
push
ret
mov
test
enter
popf
lahf
sbb
ljmp
mov
pop
imul
inc
add
divl
inc
stc
popf
or
jb
xlat
xlat
jne
push
jno
push
xchg
jmp
addr16
popf
std
inc
cs
and
jge
pop
ss
inc
mov
cld
test
jb
push
xchg
std
add
sub
ljmp
adc
xchg
test
mov
lcall
out
and
push
cmpb
or
and
xchg
mov
xor
mov
rcl
mov
orb
bound
daa
adcb
fidivrs
sbbb
shll
xor
pop
cmp
sbb
cmp
dec
xchg
xor
ss
inc
pop
sbb
xorb
pop
mulb
jnp
mov
lds
loope
clc
jge
or
stos
add
jl
add
cmc
cld
pop
mov
pusha
pop
adc
nop
cld
cmpsl
xor
jnp
jg
inc
push
sub
frstpm(287
stc
inc
jbe
mov
lret
jbe
addr16
cmpsl
cmc
add
xlat
sub
mov
in
xchg
je
ficoms
test
cmc
addr16
gs
in
push
mov
push
movsb
mov
aam
mov
fcmove
shrl
cmp
imul
adc
leave
mov
xchg
test
mov
xchg
push
cmp
xor
aas
xchg
ffree
repnz
rcll
dec
lahf
or
in
in
rorl
push
lret
stos
dec
mov
iret
call
int
jle
clc
imul
dec
shll
cmp
repnz
insb
shll
push
mov
xchg
lds
or
gs
and
icebp
and
mov
int3
int
xchg
mov
imul
clc
add
movsb
jmp
mov
stos
mov
bound
mov
mov
jl
scas
sub
cli
imul
sub
cmp
int3
adc
jmp
sbb
stos
fnsave
cmc
xor
push
push
loop
or
and
es
loop
sub
or
in
in
stos
jo
test
hlt
sbb
shl
mov
jge
imul
mov
inc
xchg
std
jge
jbe
test
and
loop
stos
adc
inc
cld
mov
cmpsl
inc
sbb
gs
inc
xchg
lock
es
cmp
mov
inc
mov
xor
mov
xchg
cwtl
xor
cwtl
push
out
jb
repnz
in
jns
pop
je
sbb
dec
jb
jb
adcl
and
in
lahf
lcall
rolb
add
arpl
jbe
test
push
xchg
push
xor
pop
pop
int
scas
push
lret
cmp
and
xchg
inc
pop
les
or
xor
dec
xor
jge
add
xchg
imul
jns
in
and
xchg
cltd
xchg
ficomps
and
inc
adc
and
addb
ss
loop
mov
adc
ret
std
movsb
aaa
popf
fimull
movsb
or
cmp
repz
jae
adc
pop
rorb
gs
jno
and
ror
andl
call
lahf
jns
cmp
dec
daa
sub
xor
movb
lods
sub
jge
imul
icebp
mov
sub
ja
xor
jne
js
push
inc
shlb
mov
mov
xor
jmp
jbe
test
std
inc
je
sti
stos
jge
mov
jne
in
aaa
mov
dec
pop
nop
inc
mov
xchg
push
sub
push
mov
ss
cmp
int3
fisubrs
ljmp
bound
and
sarl
dec
rol
test
ja
adc
sti
fldt
sbb
addr16
xchg
inc
rorl
jns
bound
adc
out
push
les
dec
stc
andb
cmp
mov
es
mov
cmp
adc
enter
cmc
cmp
sub
cltd
mov
dec
mov
lods
or
jo
rcll
push
inc
mov
imul
sti
or
dec
stos
dec
sti
xchg
xor
rclb
mov
loop
lcall
push
mov
pop
clc
sahf
and
jg
mov
ss
fistpl
stos
in
lcall
mov
jb
jne
mov
jae
or
jns
cmp
dec
jle
dec
sbb
cltd
add
dec
out
int3
mov
mov
sub
bound
mov
mov
adc
aaa
xor
mov
add
push
or
hlt
mov
xor
aad
gs
jle
stos
and
inc
xchg
xchg
and
pop
out
jl
sti
inc
xchg
addr16
popa
lds
out
imul
mov
enter
mov
cltd
stos
adc
push
in
rcl
dec
rolb
clc
popf
cltd
jle
sbb
insb
movsl
xor
push
push
std
dec
mov
mov
push
push
push
int3
shll
out
rcll
jnp
dec
in
xor
fs
lret
jecxz
enter
shrb
xor
adc
inc
dec
jne
pop
leave
mov
xorl
sti
sub
jns
lcall
test
dec
addr16
cli
fisttps
jl
daa
or
xorl
mov
xchg
jmp
jp
stos
mov
movl
cmp
push
rolb
add
xchg
xchg
mov
pop
div
leave
inc
push
inc
add
push
outsl
mov
bound
push
pop
sbb
pop
fidivl
adc
fs
sbb
clc
loope
pop
cli
sbb
dec
adc
std
rcll
pop
nop
inc
stc
adc
jg
push
scas
gs
add
shll
cmp
call
dec
loopne
sub
mov
lret
fidivrl
inc
arpl
js
mov
insb
div
ljmp
dec
lcall
xor
clc
add
push
fldl
clc
shll
iret
aad
dec
xor
cmp
adc
out
push
mov
jge
and
ret
outsb
pop
pop
inc
test
popa
lcall
fs
les
dec
push
rcr
mov
js
mov
or
mov
mov
add
dec
sbb
xchg
loope
sbbl
pop
jne
shrl
dec
or
jb
std
push
adc
int
movb
mov
call
add
dec
clc
push
xor
add
mov
sub
jmp
jecxz
sbb
pop
jecxz
mov
cmp
or
clc
sub
pop
icebp
sbb
loope
aam
aad
test
jg
xchg
mov
mov
mov
inc
and
xchg
dec
es
clc
xor
pop
pop
xcrypt-cbc
cmpsl
xchg
cli
or
mov
push
lea
push
outsl
rcrb
sbb
pushf
je
arpl
andb
jns
ret
int
ret
mulb
lods
fidivl
rcrl
roll
push
into
adc
daa
adc
lea
jle
jbe
mov
mov
pop
mov
pop
lods
gs
dec
adc
sbb
insb
rcl
subl
jns
shlb
push
out
les
les
lret
cmp
and
add
test
push
mov
or
xchg
xchg
mov
sarl
loope
cli
mov
dec
int
in
js
lock
gs
sub
or
jle
jg
adc
das
leave
insl
nop
popf
adc
xorb
mov
popa
xchg
frstor
xor
mov
jmp
stos
scas
xchg
mov
shll
push
in
ljmp
dec
mov
sub
fisubrs
arpl
loop
data16
and
and
pop
add
stc
jae
xor
ss
push
inc
iret
add
push
xor
mov
clc
inc
shrl
mov
test
bound
loopne
xor
push
cmpsb
icebp
shll
pop
das
subb
sub
pop
test
cmpsl
and
add
or
andb
jo
and
jge
shrb
inc
shl
adc
xchg
push
out
scas
dec
adc
aaa
cli
mov
ficompl
nop
outsb
sbb
dec
stos
inc
sbb
ja
hlt
jmp
mov
adc
sbb
scas
dec
movb
dec
or
loope
adc
jp
clc
inc
pop
fdiv
dec
mov
cltd
imul
sbb
andb
pop
pop
cwtl
xchg
push
dec
sarb
xchg
mov
mov
popa
mov
stos
jmp
das
fbld
dec
cmp
add
xchg
les
and
scas
or
xchg
test
mov
sahf
add
ret
shlb
mov
xchg
push
dec
rolb
cltd
bound
cmp
mov
aaa
inc
sbb
dec
jnp
mov
add
loopne
jbe
and
pop
jle
jne
jbe
jo
push
xor
dec
xchg
push
inc
lods
jns
sbb
jecxz
dec
jp
cmc
jge
jns
pop
inc
imul
jno
jne
mov
std
gs
cmp
xchg
sub
sub
jnp
lds
add
mov
add
jne
inc
lahf
insb
jp
fstp
push
sub
and
testl
sbb
movsl
dec
adc
into
dec
add
mov
or
clc
sub
or
sbb
push
lcall
in
popf
ja
pop
rclb
push
popa
mov
push
mov
sbb
aaa
jae
shll
andl
pop
popa
out
lahf
icebp
mov
lcall
sub
test
sub
arpl
sbb
mov
mov
dec
inc
fs
jnp
add
cmp
mov
pusha
add
sbb
jae
pop
push
test
or
xor
fbld
mov
add
add
push
mov
cmp
mov
or
jne
icebp
cmpb
jg
jp
scas
jno
insb
nop
jnp
dec
int
insl
or
push
lret
in
xchg
push
adc
inc
and
popl
in
add
jge
sub
movsl
mov
mov
jno
int
js
jnp
and
push
inc
andl
je
jae
pop
int
popa
push
sbb
jmp
mov
aas
cmc
es
sbbl
mov
call
lds
stc
out
test
adc
leave
adc
mov
jl
inc
inc
pop
inc
xor
pop
movsb
xchg
out
dec
push
jle
adc
add
in
sbb
jg
push
mov
outsl
pop
mov
popl
dec
add
xchg
jge
lods
lds
lahf
jnp
dec
scas
add
add
pop
xchg
cltd
pop
mov
lock
xchg
add
lea
push
movsl
cmpl
jbe
pop
jnp
lds
and
sbb
dec
stos
mov
push
outsl
sub
int3
add
cmp
aam
dec
jle
nop
ds
mov
or
cmp
neg
rclb
leave
pop
out
and
dec
js
push
inc
add
push
in
xchg
mov
dec
sbb
xchg
imul
outsl
dec
pop
js
test
jbe
xchg
ss
adc
popa
inc
inc
bound
dec
sbbb
jb
insb
and
enter
pop
mov
sti
ficomps
mov
fsubrs
les
negl
mov
dec
std
ret
in
cmp
cmc
lret
lock
shll
cwtl
mov
std
mov
push
stc
cli
and
outsl
push
int3
xchg
or
adc
in
sbb
mov
nop
inc
push
dec
xor
pop
clc
stos
pop
leave
lret
inc
mov
jno
jmp
lret
gs
mov
mov
popl
adc
push
xorl
push
std
pop
mov
addl
adc
push
push
push
clc
sbbb
inc
lods
jne
push
push
sar
ja
sti
push
sub
inc
jne
push
repnz
fmull
loope
arpl
pop
ljmp
enter
xlat
enter
push
xorl
aad
sbb
lret
dec
aam
sub
sbb
pop
fstps
pop
lock
cwtl
inc
sub
mov
fsubrs
and
add
cmpl
inc
fidivrl
jg
loop
adc
add
and
sub
xor
fsubr
or
iret
inc
fisttps
mov
lock
into
loope
ds
xor
roll
pop
push
dec
push
mov
les
dec
cmp
outsl
xlat
mov
repz
mov
imul
cmc
or
inc
push
push
ret
pop
xor
leave
ss
mov
insb
imul
adc
sbb
add
push
cmp
data16
gs
int3
imul
dec
push
pop
lret
in
sub
adc
dec
mov
or
movsb
xchg
int3
dec
pop
repnz
adc
adc
xchg
cmpsl
and
adc
or
mov
js
xchg
mov
sbbb
dec
or
mov
nop
push
call
or
dec
mov
daa
jbe
outsb
arpl
mov
mov
jg
add
add
test
stos
jne
push
nop
dec
jnp
mov
xorl
mov
mov
inc
mov
jne
jnp
mov
nop
andl
out
filds
in
sahf
scas
dec
adc
lods
jnp
aad
xchg
out
xor
pop
mov
add
stos
ja
insb
dec
into
aaa
jnp
push
sbb
jns
aas
mov
mov
cmp
dec
outsb
pop
xor
cmp
into
jge
dec
inc
stos
pop
adc
jne
pop
incl
mov
stos
sbb
xchg
cli
xor
xor
in
popf
jge
neg
add
repnz
stos
loop
popa
and
or
stc
les
in
mov
leave
adc
sarb
lods
push
xlat
sbb
or
shrl
or
cmc
xor
dec
sbb
insl
dec
dec
sbb
adc
mov
xor
or
aam
cmc
stos
push
iret
test
adc
jbe
cmp
lret
xor
test
push
shrl
jle
ljmp
sbb
insb
aas
lods
bound
out
add
xor
out
dec
and
xchg
add
in
loop
roll
sarl
adc
xchg
lods
cmpl
test
stc
dec
adc
dec
mov
ja
in
dec
nop
jne
jl
ficoms
iret
dec
leave
inc
jg
lods
inc
ss
or
xor
ficoml
mov
pop
xor
fisubrs
and
movsl
jns
push
adc
inc
jns
insb
fidivl
xor
mov
repz
andb
aad
sbbl
push
call
jns
in
and
push
cmp
sub
daa
mov
popf
cmpsb
lock
pop
cld
push
in
pop
jbe
out
jno
sbb
test
sub
mov
ret
pop
mov
sbb
mov
inc
xor
lahf
jnp
jns
push
sti
mov
movsl
adc
insl
fcmovb
and
imul
xchg
scas
lcall
inc
lods
xor
pushf
lahf
or
bound
mov
jne
mov
lock
xor
inc
fwait
sub
adc
jp
dec
bound
lea
push
mov
mov
sub
cmp
xor
add
dec
dec
mov
test
sarb
push
into
mov
aaa
mov
mov
nop
jnp
sbb
stos
mov
movsb
pop
je
jno
push
jnp
pusha
adc
pop
fdiv
enter
pop
jb
repz
xchg
push
stos
xchg
jecxz
sbb
leave
mov
push
lock
xchg
lret
loopne
imul
pop
rorl
lods
pusha
loop
dec
adc
ljmp
sti
loopne
mov
dec
out
stc
fucom
stc
ret
addr16
ss
test
mov
jae
ja
int
inc
mov
push
sub
mov
dec
dec
push
dec
inc
movsb
ljmp
test
outsb
push
dec
dec
sbb
or
fcompl
mov
jo
ss
scas
cmp
mov
pop
push
add
lea
push
bound
popf
inc
dec
aaa
filds
fwait
scas
stc
mov
cmp
mov
mov
ss
lea
cmpsb
js
sub
fdivs
stos
push
sub
insl
add
inc
pop
jle
mov
in
mov
mov
jle
rcrb
es
cmp
inc
test
movsb
stos
push
xchg
addr16
std
movsb
cmp
test
insb
shl
sbb
sbb
hlt
adc
jmp
push
sub
gs
push
mov
inc
dec
adc
xchg
shlb
cmp
mov
inc
dec
push
add
mov
test
and
loop
adc
scas
decl
adc
jns
cmpsb
icebp
cmp
xchg
dec
je
push
push
pop
pusha
cli
loopne
popa
popaw
loope
pop
xchg
inc
mov
std
pop
add
leave
shll
insl
pop
add
stc
and
and
insb
cli
xor
adc
cwtl
idiv
xor
in
jno
xor
lock
jp
scas
pusha
cmp
and
adc
push
push
push
fs
cltd
pusha
cld
je
sub
or
jne
inc
push
push
mov
dec
ss
sti
int
add
subl
lret
cmovnp
mov
and
gs
call
push
fdivp
fcoms
add
sbbl
sbb
roll
pusha
fistpll
mov
fisttpl
inc
mov
sub
andb
in
loopne
repz
repnz
add
xchg
cmp
xor
cmp
push
mov
cmpsl
out
std
add
out
aam
ja
pop
fisubs
ds
leave
mov
lds
jecxz
mov
jne
adcl
mov
sahf
aam
jns
add
loop
mov
jno
push
dec
test
dec
mov
adc
fbld
rclb
inc
mov
loopne
push
pusha
pop
pop
mov
jg
in
dec
jno
push
ds
sub
insl
rcrl
mov
mov
push
stc
lret
int3
pop
or
repnz
loope
mov
sub
cltd
pop
dec
outsb
jo
imulb
and
push
dec
frstor
test
jg
les
add
fs
jnp
je
jge
jnp
or
inc
cmp
std
xchg
outsl
pushf
or
dec
push
sbb
jecxz
fists
pop
stos
lods
add
lea
sub
push
adc
mov
mov
xor
push
mov
add
xchg
cltd
adc
xchg
fs
jb
mov
sbb
std
ds
cli
lods
jns
mul
notb
aad
jb
lret
dec
xor
jo
outsl
mov
dec
cmp
sub
xorl
fdivl
inc
fwait
in
pop
or
outsl
sti
mov
jns
loope
movl
std
lock
sbb
xchg
test
gs
hlt
outsb
sub
pop
aas
mov
stos
hlt
aam
pop
imul
rclb
and
idivl
mov
jno
push
fistpl
cmp
push
xor
or
in
loopne
jp
je
add
jmp
dec
add
jae
dec
jae
adc
push
pop
mov
xor
cmp
xchg
repnz
lock
int
cltd
leave
inc
lahf
mov
lea
mov
jno
leave
cmp
add
fdivr
faddl
or
push
fs
push
cli
insl
sbb
fcom
dec
push
mov
cwtl
lea
jg
into
mov
gs
in
adc
dec
push
gs
fmul
push
ret
gs
add
push
sbb
push
test
sbb
inc
push
icebp
xor
in
gs
call
dec
lods
push
xchg
jge
movb
push
mov
dec
mulb
sub
mov
sarl
lods
or
scas
inc
inc
std
rol
dec
push
das
nop
ficompl
xchg
xor
in
imul
inc
push
mov
dec
mov
repnz
les
inc
dec
xchg
jno
or
xor
fdivrs
pop
add
lcall
mov
rol
push
pop
movsl
adc
pop
jbe
push
mov
pop
add
inc
out
or
pop
xor
sbb
lock
int
xor
xchg
clc
dec
jg
filds
dec
add
xor
sbb
jmp
gs
and
lea
inc
lret
dec
imul
jge
mov
push
addb
ljmp
sbb
imul
adc
call
in
push
add
mov
pop
sbbl
ret
out
mov
out
iret
aas
shlb
xchg
fs
jb
push
mov
mov
orb
pusha
loopne
inc
aad
pusha
cmp
mov
sbb
jo
or
dec
imul
push
aad
mov
jae
and
adc
xchg
shlb
mov
roll
stc
mov
mov
roll
aam
cld
andl
fldt
sbb
dec
add
inc
mov
inc
popa
mov
cltd
repnz
or
frstor
loopne
add
addr16
sti
sub
dec
jo
jno
repnz
push
inc
pop
mov
jg
inc
stos
data16
les
lods
bound
inc
mov
test
mov
loopne
sbb
fs
aaa
fs
add
push
icebp
or
and
icebp
xchg
push
mov
mov
hlt
fcompl
pop
lret
fdivrs
sub
jl
dec
mov
cmp
cs
pop
fisubl
xchg
imul
leave
adc
gs
in
insb
inc
rcl
aas
inc
mov
add
jl
outsl
into
jecxz
fidivrl
cs
ss
mov
icebp
movl
loopne
adc
dec
fcomp
push
push
adc
xor
ret
adc
or
leave
bound
push
xor
adc
lret
push
repz
mov
sbb
fisubrl
push
sarb
aam
lret
mov
xor
scas
outsb
jnp
pop
xor
hlt
or
fs
lcall
fldt
push
lahf
insb
in
and
fwait
scas
gs
dec
insb
mov
inc
or
shll
cld
pop
add
sbb
cmp
popa
cmp
jle
cld
popa
pop
mov
fidivs
loopne
inc
mov
add
or
pusha
push
adc
xor
into
push
out
shrl
inc
push
push
das
fnstsw
cltd
inc
fs
jae
sbb
jae
pop
push
mov
pop
nop
dec
or
ljmp
push
bnd
lods
xchg
outsl
sub
xchg
xchg
inc
push
out
addr16
rcrb
fildl
xchg
fmul
out
xorb
stc
push
xchg
or
inc
sbb
mov
push
pushf
shl
hlt
shr
movsl
mov
pop
sbb
fwait
adc
xchg
jnp
or
mov
push
loop
repz
sub
arpl
mov
jno
test
pop
add
xchg
popa
stos
int
je
je
adc
rcrl
out
jno
sbb
or
xchg
dec
aam
aaa
mov
lahf
add
inc
cli
add
xor
jne
mov
loope
not
adc
jo
add
pop
sarl
mov
adc
mov
pusha
gs
jbe
out
lds
push
repz
ficoms
push
mov
mov
jle
mov
es
sarl
adc
loop
xchg
into
push
fists
int3
shrl
arpl
push
push
sub
movsb
and
add
or
stc
add
cmp
or
iret
xchg
daa
loop
adc
test
push
das
mov
sbb
out
enter
add
inc
lret
inc
cmp
add
dec
push
and
adc
sti
or
lahf
hlt
je
inc
data16
adc
pusha
xor
mov
cltd
sbb
xchg
xchg
mov
mov
jl
repnz
test
loop
and
loopne
and
pop
jmp
pusha
fwait
jmp
cmp
fsubrl
mov
push
push
mov
addr16
dec
mov
jo
inc
push
cli
jbe
push
lock
inc
aad
mov
sbb
testb
xchg
cmp
mov
std
adc
jno
jecxz
and
add
dec
mov
or
int3
inc
dec
jns
push
xlat
shrl
xor
cmp
in
in
adc
adc
int3
adc
xor
decl
jle
jmp
push
cmpsb
jecxz
cmp
aad
frndint
aad
popa
jo
inc
clc
add
sbb
sbb
sbbb
loopne
mov
cli
lea
jae
or
push
cwtl
ljmp
push
or
das
adc
int
jns
push
inc
jmp
jnp
jae
imul
popf
jnp
jno
adc
mov
int3
adc
cmp
call
loope
push
aam
mov
and
clc
push
leave
mov
imul
bound
push
das
xor
filds
outsb
enter
pop
out
icebp
dec
fwait
jne
inc
sub
sub
dec
movsl
xchg
push
jle
popa
jbe
dec
adc
ficoml
inc
mov
movsb
xchg
les
push
and
pop
dec
pusha
scas
pop
adcb
test
sub
mov
int3
gs
ss
aas
push
xchg
divps
add
aaa
add
jbe
cmp
jp
add
mov
mov
nop
cmp
pop
out
dec
adc
dec
out
out
adc
sub
popa
aad
xchg
ret
xor
mov
pop
stos
mov
test
cmp
cmp
push
fisubl
xchg
pop
inc
dec
xchg
sub
and
outsl
or
cmpsl
inc
ljmp
pop
fld
pusha
imul
fistps
mov
fistpl
mov
xchg
jns
sub
pop
push
xor
fistpll
test
sub
xchg
sub
mov
jp
icebp
mov
fistpl
fs
call
pop
sbb
outsb
inc
dec
xlat
in
filds
out
loope
lcall
outsb
mov
jne
in
pusha
or
sarl
mov
nop
aam
popf
inc
in
adc
mov
add
popa
add
lds
and
mov
aas
inc
xorl
cli
inc
popa
push
cltd
mov
xchg
shrb
adc
or
cmp
xor
adc
sub
mov
repnz
inc
jns,pt
fadds
sub
push
or
fadds
jg
sbb
push
ss
test
mov
mov
dec
aaa
pop
cmp
pop
inc
push
je
push
xchg
sbb
shlb
xchg
mov
jne
xorl
push
cmp
sub
sub
sbb
mov
push
pushf
popa
push
adc
cmp
rorl
push
test
fstp
hlt
cwtl
xor
sahf
xor
jl
pop
mov
sarb
mov
insl
fsts
insb
pusha
arpl
movsb
ret
mov
or
or
pusha
push
mov
shl
adc
shl
test
test
inc
mov
fldl
loop
adc
push
sbb
mov
test
push
cli
mov
outsl
shll
fimull
ret
xor
add
inc
nop
sbb
test
loopne
inc
jbe
movsb
mov
fucom
dec
imul
insb
pop
fistpl
cmpsl
addr16
cmp
sbb
icebp
or
in
ret
lock
push
rol
into
jecxz
pop
outsb
cmp
mov
xor
mov
sbbb
push
sbb
jge
ja
adc
push
xchg
test
dec
dec
push
push
jmp
loopne
or
inc
jbe
push
sub
cmp
adc
mov
jmp
lret
decb
js
sbb
pop
fucomip
mov
mov
or
mov
cmp
gs
inc
or
loop
mov
mov
sub
jg
rolb
loop
lret
jae
push
mov
mov
and
mov
dec
push
sbb
cmp
addr16
mov
mov
pop
or
dec
adc
and
add
mov
jle
imulb
movsl
bswap
xchg
fadds
shlb
xchg
sub
adc
aas
leave
push
clc
cli
pop
or
and
je
sub
mov
lret
sbb
std
loope
push
sbb
add
cmp
loopne
adc
pop
bound
test
push
dec
dec
xor
push
ret
mov
outsb
cwtl
pop
mov
mov
mov
sarl
lahf
dec
cmp
repnz
mov
stos
insb
js
sbb
dec
adc
pushf
dec
pop
add
lsl
mov
mov
outsb
mov
in
pop
sub
fsubrs
sub
lods
inc
push
adc
lea
xor
adc
inc
insb
movsl
add
mov
inc
loop
push
ja
adc
je
lret
push
jo
lea
lea
not
leave
add
adcl
cmc
jecxz
out
and
mov
mov
xlat
cmp
mov
xchg
mov
add
pop
sub
sub
push
in
jbe
filds
add
jne
xor
adc
ja
fs
clc
or
push
insl
aam
sarb
jge
sbb
lea
in
mov
nop
jle
dec
xor
shrb
pop
mov
int3
cmp
add
fisubrs
in
sbb
or
test
jno
and
mov
add
repnz
mov
subb
sarb
sbb
push
push
xor
push
js
loopne
jno
call
dec
or
sahf
aad
pop
jge
dec
mov
movsl
fisttpl
in
pop
rorl
cmp
mov
inc
mov
pop
sbb
hlt
push
lods
cmp
dec
add
inc
ja
insl
mov
dec
aas
lock
cwtl
dec
or
cld
rclb
dec
pop
adc
in
dec
mov
xor
push
mov
call
add
in
dec
mov
rcl
mov
imul
stos
hlt
add
push
jbe
adc
shll
aad
adc
mov
push
dec
pop
or
and
sbb
jle
mulb
sbb
xchg
lds
inc
cmp
movsl
push
leave
sbb
mov
cmp
iret
frstor
divl
sbb
je
inc
inc
sub
fsts
dec
mov
push
lret
lock
pop
int
pop
inc
ljmp
outsl
xchg
rcrb
xor
jno
jns
stos
mov
cwtl
mov
pop
mov
inc
push
push
push
inc
xchg
jl
add
inc
mov
pop
pop
out
push
out
inc
imull
andl
sbb
jmp
xor
adc
scas
rcll
in
inc
stos
push
ljmp
mov
mov
sbb
mov
data16
int
ss
adc
push
or
mov
rorl
addb
sar
push
jno
adc
incb
jno
adc
cmp
js
lods
xchg
or
fisttpl
pop
sbb
stc
mov
ret
or
iret
sub
fabs
lahf
lahf
stos
bndstx
leave
sbb
push
add
or
or
cltd
mov
mov
daa
cmc
dec
and
push
push
pop
arpl
add
andb
push
popf
loope
nop
jg
push
int3
jo,pn
shlb
dec
pop
clc
cwtl
inc
push
cmpsb
imul
popf
es
lds
cmpsb
dec
push
scas
in
push
push
and
mov
push
xchg
and
in
cld
gs
dec
lds
mulb
sahf
inc
es
mov
add
cmpsb
test
enter
sahf
sbb
popf
or
lds
push
mov
inc
div
xor
inc
mov
subl
cmp
in
mov
aaa
push
popf
jecxz
gs
hlt
xor
in
jne
adc
inc
repz
xchg
dec
or
iret
jge
jecxz
ja
mov
lea
cmp
adc
mov
loope
xor
das
inc
mov
arpl
inc
push
shrl
pop
rcll
xchg
jge
mov
add
adc
inc
dec
sub
lock
leave
add
pop
add
pop
mov
in
push
push
lods
ss
dec
pop
cmp
sti
xor
inc
int3
mov
push
imul
adc
jns
jo
fs
fadds
push
push
in
insb
xchg
clc
lahf
push
push
dec
or
mov
or
dec
cmp
movsb
add
cmpb
xor
repz
push
subb
dec
add
movl
dec
mov
cltd
jecxz
repz
dec
sbb
pop
push
adc
ljmp
loopne
add
add
dec
pusha
dec
inc
and
mov
sbb
sbb
mov
sub
stc
out
pop
and
cli
xlat
cmp
aad
push
ret
rorb
lcall
push
sub
mov
lcall
lods
adc
push
dec
push
sbb
mov
jno
in
sbb
xor
xor
dec
mov
pushf
xchg
mov
test
stos
out
xchg
pop
pop
or
int3
mov
mov
push
mov
jno
outsl
push
aas
cld
sub
popf
add
test
mov
fldcw
and
sbb
and
adc
or
cwtl
test
jge
es
lcall
xor
or
cmpsb
dec
inc
dec
xor
addl
mov
push
fisttpll
scas
lds
icebp
pop
pop
les
mov
imul
gs
movsl
jmp
fsubl
push
dec
mov
imul
into
outsb
outsl
push
sbb
xor
testl
inc
mov
mov
shrb
dec
cld
add
mov
xlat
mov
and
inc
dec
dec
pmulhw
lods
mov
cmp
sub
lcall
pop
sub
push
lret
cmc
test
pop
jo
dec
aad
ss
jmp
add
xchg
sub
in
inc
fs
push
cmp
jmp
jo
lret
jno
dec
push
out
data16
pusha
stos
dec
fs
push
mov
lods
inc
adc
mov
push
or
stc
push
in
fwait
mov
dec
iret
push
push
or
pop
or
mov
push
adc
loope
int
cmp
jbe
lcall
fstp
adc
mov
mov
andl
adcb
push
adc
dec
leave
inc
mov
sbb
notb
loope
adc
sbb
pop
leave
ljmp
imul
jmp
pop
add
lods
sbb
and
pop
cmpps
stc
mov
jle
rclb
dec
and
outsl
sbb
out
mov
xchg
sub
in
pop
sub
stc
in
mov
aad
cmpsb
mov
xor
pop
cmp
outsl
add
loope
mov
pop
jmp
sbbl
xchg
mov
mov
ror
mov
aaa
push
shl
xchg
mov
pop
ss
je
loopne
in
int
push
popa
xor
lock
xorb
adcb
decl
jb
pop
jecxz
gs
out
sbb
pop
mov
pop
shrl
inc
outsb
ss
fsub
dec
xor
outsl
test
stos
dec
jnp
add
enter
push
mov
enter
gs
or
iret
test
inc
cmp
jl
jl
jb
pop
dec
insb
je
dec
bound
inc
ret
push
dec
inc
stos
fiaddl
insb
ret
mov
adc
sub
and
das
scas
mov
addr16
leave
fdivrs
loope
stos
xchg
jmp
cmp
adc
enter
rorb
and
stos
repnz
mov
xchg
inc
stos
push
enter
bound
sub
insl
mov
test
inc
fucomp
out
jg
jns
push
xchg
dec
in
push
les
mov
jbe
xchg
cmp
mov
sbb
or
sub
push
jge
daa
xorl
rcr
lods
mov
stos
icebp
sub
lods
insw
les
pushf
push
cltd
repnz
stos
mov
and
adc
inc
xchg
mov
lds
mov
mov
add
dec
daa
cmp
icebp
jg
movsb
xchg
mov
mov
int
outsl
pushf
or
push
sbb
dec
stc
mov
std
xchg
loope
mov
mov
fsub
repnz
xor
cmp
out
inc
bound
fs
jge
sarl
xor
push
int3
test
dec
mov
cmc
int
out
ret
pushf
xchg
add
loopne
lahf
cmp
jg
pop
fldenv
sbb
add
adc
cld
pop
inc
data16
sbb
dec
cltd
and
ds
sar
push
sub
inc
inc
out
into
enter
int3
inc
addr16
push
cmpsl
stos
test
insl
aaa
pop
outsl
js
out
mov
lock
sub
and
insb
sbb
sbb
scas
mov
dec
ret
je
lahf
mov
pop
or
cmp
pop
pop
sub
out
leave
faddl
stos
adc
mov
movsl
push
mov
xchg
xlat
cmpsb
sub
lret
pop
pop
iret
iret
ds
cmpsl
popl
inc
push
jl
and
mov
mov
push
out
ja
subl
outsb
mov
arpl
cmp
jnp
jno
xchg
in
lea
in
enter
js
xorb
out
sub
dec
jo
pop
imul
dec
mov
pop
cmp
push
std
lcall
sbb
cmp
sti
adc
sub
fldenv
fisubrs
or
xor
das
pushf
push
cmpsb
sub
add
push
xor
sub
mov
cltd
sub
scas
ss
and
mov
mov
pop
cmpsl
and
mov
push
je
jg
or
js
jo
movsl
loope
stos
lods
inc
and
and
lret
cmp
lods
sbb
clc
xor
add
jb
in
or
mov
dec
cmp
outsb
and
lahf
shlb
sub
fwait
in
mov
sbb
popf
push
into
xor
add
xchg
rcr
mov
push
dec
negl
ds
scas
bnd
in
adc
iret
fsubrp
xchg
and
mov
push
hlt
mov
inc
sub
jle
and
notb
sti
dec
loop
sbb
popa
dec
inc
sbb
xor
js
xchg
mov
inc
sahf
addr16
xor
cmp
imul
ljmp
sbb
sub
mov
jns
xchg
mov
or
aam
mov
pop
inc
mov
adc
jne
add
xor
xchg
adc
push
repz
cmp
js
clc
shll
jecxz
mov
hlt
jmp
stos
cmp
in
imul
cli
in
inc
nop
movsb
fcomps
inc
pop
out
mov
ljmp
das
ret
or
jg
mov
fbld
mov
inc
pop
push
popf
repz
aaa
pop
jbe
sbb
jp
rcl
and
ja
add
cmp
push
or
dec
xchg
xor
mov
add
pop
pop
mov
iret
sub
mov
outsl
test
testb
test
ja
stos
adc
sub
sti
xchg
imul
lock
sahf
or
push
aaa
jecxz
int
mov
push
aam
jnp
fildll
fisubrl
sbb
jge
outsl
jno
sahf
adc
sarl
xor
mov
and
andb
add
dec
arpl
out
inc
xor
lret
psrld
imul
push
pushf
lods
xor
popa
and
lahf
scas
mov
outsl
mov
push
outsl
or
xor
or
fdivrs
pop
push
dec
jnp
cwtl
push
aad
xor
adc
sbb
xor
dec
pop
js
adc
sub
add
dec
push
leave
shlb
out
adc
xchg
fstps
insl
mov
test
imul
dec
pop
aad
adc
mov
imul
out
insb
sub
sub
insl
mov
pop
adc
push
fwait
jno
icebp
cmp
outsb
aam
or
sbb
mov
or
aad
dec
and
rclb
stos
and
pop
cmpsb
push
pushf
mov
pop
dec
outsl
or
xor
mov
pop
jo
add
push
sub
pop
xor
xchg
jle
xorb
pusha
stos
test
iret
lds
sub
decl
stos
cmp
xorl
jl
push
xchg
movsl
mov
sti
dec
cmp
rclb
mov
inc
adc
into
mov
cmp
subb
leave
pop
mov
xor
out
cmc
out
repnz
jbe
or
jno
xor
in
out
decb
shlb
rcll
outsl
lock
into
mov
dec
insb
scas
adc
xor
ret
lret
sbb
das
ret
sub
push
and
int
push
dec
fiaddl
jno
dec
jns
enter
stos
je
inc
lret
es
or
cld
push
inc
ljmp
sub
sbb
mov
loop
xor
mov
pop
cmp
mov
and
add
loopne
je
mov
aaa
aas
lahf
jl
dec
and
fnsave
dec
idiv
repz
iret
xor
adc
inc
push
dec
pop
aaa
mov
push
mov
adc
pop
stos
and
sub
addr16
bound
sbb
leave
scas
int3
loop
and
pop
fidivs
and
jne
mov
cmpsb
test
mov
outsb
stos
ss
aad
daa
lcall
adc
mov
cmp
ljmp
pop
cwtl
aad
sub
mulb
cld
inc
test
xchg
sub
sbb
scas
jle
adc
or
sqrtps
out
movsb
or
add
sbb
pop
fstl
insb
add
lock
or
push
xlat
jns
lods
cli
in
pop
cld
inc
test
cwtl
mov
or
dec
push
mov
in
lods
mov
cmp
dec
mov
popa
test
es
sbb
jg
lds
cli
insb
sub
das
loope
xor
adc
rclb
push
pusha
arpl
or
mov
mov
loope
movsl
mov
fwait
mov
mov
sub
in
fsts
stos
mov
movsl
aad
popa
dec
ja
clc
mov
cmp
stos
push
dec
xor
jmp
movsb
cwtl
sub
jbe
int3
sub
sbb
pop
xor
enter
jmp
in
push
xchg
push
sub
out
cmp
stos
or
out
subb
add
sbbb
push
xor
or
andb
xor
pop
xor
daa
fiaddl
stc
and
mov
rcll
in
call
push
cli
sbb
dec
popf
inc
movsb
dec
mov
push
pop
aam
inc
mov
push
adc
stc
push
sub
loope
dec
mov
call
mov
jg
fs
inc
cmpb
aad
sub
fadd
sbb
or
push
ss
daa
loop
xor
roll
mov
cmp
adc
int3
andb
insb
pushf
xor
call
inc
dec
jo
pop
movl
cmc
and
mov
ror
or
out
aad
cli
in
mov
ficoms
es
sub
lret
jne
loope
push
dec
push
push
add
cmp
insb
and
lret
jle
scas
popa
sar
test
cmp
loop
addr16
repnz
pop
jmp
adc
fs
lods
pop
stos
jecxz
lods
jnp
jmp
sub
xor
sbb
test
push
adc
int
rep
icebp
cmp
stc
push
loop
enter
pop
pop
jno
sub
fs
push
inc
jb
sbb
ret
bound
das
push
enter
ss
insl
jl
pop
out
jb
dec
ss
mov
push
dec
and
mov
out
xor
xor
mov
jle
cs
repnz
dec
sbb
cmp
inc
sbb
icebp
jb
pushf
jne
cs
test
cmc
es
sbb
add
xor
push
stc
outsl
pop
les
jecxz
dec
incl
clc
push
mov
and
call
ret
dec
pop
dec
lcall
outsb
inc
jbe
popa
es
or
jl
xlat
dec
dec
bound
mov
adc
xchg
push
repz
dec
fisubs
mov
mov
dec
shll
sub
xchg
loopne
push
mov
or
out
pusha
dec
sub
push
lods
rcrl
shll
mov
cld
pop
or
fs
fcmove
inc
jnp
sub
test
add
cmpsb
xlat
jnp
push
mov
loope
mov
xor
add
pusha
jbe
shrl
mov
outsw
and
rorl
and
jl
pop
fs
jns
test
sub
lret
push
xor
movsl
add
adc
leave
or
pop
jns
lods
xlat
xor
xchg
cld
mov
mov
cld
sub
push
jl
pop
or
adc
mov
mov
test
mov
shll
add
fs
aam
pop
sub
push
xchg
shll
push
inc
pop
dec
pop
push
fstl
add
xor
dec
add
lcall
repz
inc
fs
inc
pusha
cld
sub
push
dec
ror
or
pop
fs
sbb
cli
adc
dec
test
jns
pop
fbld
push
mov
pop
lret
jnp
data16
and
push
pop
dec
add
aad
movsl
sub
cmp
arpl
mov
bound
mov
and
fwait
jnp
data16
pop
dec
clc
push
aas
mov
mov
pop
dec
fmull
jg
xor
sub
push
pusha
sarl
dec
pusha
xchg
les
aas
mov
fwait
jb
cld
frstor
stc
sarl
xlat
cltd
roll
mov
xlat
pusha
test
andl
in
dec
push
jg
leave
sub
cmp
jns
scas
pop
inc
inc
mov
add
mov
pop
inc
mov
and
or
cmpsb
cmp
sbb
xchg
or
xchg
or
and
sahf
add
xor
cmc
sbb
sbbl
cmp
pop
je
ret
pop
inc
jp
inc
outsl
adc
xor
jg
xchg
push
ja
add
cmc
pop
inc
scas
mov
add
jb
mov
mov
and
loopne
push
loope
inc
fcmovbe
int3
or
fs
mov
dec
popa
stos
mov
stos
inc
jp
std
pusha
pusha
add
addb
out
adc
sub
mov
dec
aad
out
jbe
adc
jo
scas
fs
mov
popa
daa
xor
ja
push
loop
jnp
or
push
inc
cmc
jg
dec
ret
mov
jp
push
and
lock
dec
xor
mov
orl
mov
clc
mov
dec
insb
xor
jo
jge
je
lea
xor
dec
add
mov
push
push
dec
mov
xor
jnp
leave
out
lods
cli
push
insl
xchg
or
loope
in
sbb
mov
cld
lret
cmp
pusha
in
inc
jle
cmp
cmp
mov
dec
jmp
jo
je
and
lret
xchg
pop
and
stos
mov
and
push
popa
mov
push
xlat
sbb
push
loopne
push
adc
loope
adc
mov
outsb
inc
or
xchg
jno
pusha
cld
sub
bound
mov
push
mov
sti
jns
push
inc
pop
pushf
arpl
dec
dec
mov
jbe
jle
xchg
fucomi
mov
jno
movsl
pusha
stc
in
test
arpl
hlt
popa
int
pusha
lret
dec
or
sbb
inc
jae
jns
jne
jmp
into
cmp
cmp
out
push
pop
and
cld
pop
or
insb
push
imul
ret
push
rcll
or
pop
mov
lret
test
sar
lds
mov
inc
pop
adc
mov
scas
leave
sub
mov
pusha
repnz
pusha
or
shl
shll
mul
inc
mov
out
shlb
jbe
stc
jmp
fisubrs
les
pop
popa
arpl
roll
xchg
lcall
inc
inc
out
fcmove
push
loop
pop
sbb
clc
inc
test
adc
rorl
lock
stos
in
xchg
shlb
std
daa
cmp
std
aam
stc
fisttpll
lret
xchg
adc
and
loopne
subl
jns
xchg
cmp
cmp
jns
test
scas
jns
rol
adc
mov
sarl
or
repz
xchg
pop
movsb
pusha
pusha
jg
inc
mov
pop
inc
popf
popf
or
hlt
sub
dec
in
les
insl
inc
cmpsb
cltd
push
mov
loopne
inc
loopne
cmc
sbb
shlb
leave
lock
loope
dec
cmc
rorl
out
dec
xor
push
inc
jns
push
mov
sbb
enter
jmp
mov
add
fsubs
imul
fcmovnbe
repz
roll
imul
push
pusha
dec
loopne
rcr
push
add
jecxz
arpl
jl
push
jp
pop
mov
push
inc
bound
push
int
loope
sub
fstps
fs
hlt
shl
inc
pop
inc
decb
cwtl
pop
xor
aad
je
cld
xchg
loope
or
inc
xor
loopne
pop
and
aad
nop
imul
inc
shlb
insb
shrb
test
fisttpll
loope
lret
mov
add
in
lahf
dec
in
stos
push
mov
imul
or
fmull
dec
mov
int3
xor
flds
mov
and
and
in
jge
mov
dec
inc
hlt
or
xor
shrb
and
xorl
lcall
and
jge,pn
mov
adc
mov
dec
or
jmp
cmpsl
pop
cld
fnstenv
push
adc
ja
adc
js
jmp
lcall
das
movsb
inc
fs
xchg
push
pop
rorl
pop
mov
pop
and
push
repz
xor
lods
dec
sub
xchg
repnz
fwait
push
sarl
sub
xor
adc
sub
inc
outsb
stos
jecxz
xchg
dec
dec
lods
aaa
xor
jle
mull
mov
push
sbb
xchg
inc
push
cwtl
insl
std
xchg
sub
mov
int3
divl
jae
mov
cmp
out
sbb
cs
loopne
inc
lret
or
mov
dec
sub
dec
inc
inc
mov
jge
push
push
mov
in
imul
sub
cmp
xchg
sbb
cmp
pop
or
push
insl
orps
and
push
in
or
mov
cmp
jbe
adcb
or
pop
sub
adc
pop
xchg
clc
mov
and
dec
ja
dec
jb
nop
rclb
cmp
shrb
scas
lods
sarl
pop
cs
es
mov
sub
jg
push
imul
or
cs
and
cmpsb
pop
or
test
insb
mov
imul
sub
mov
aaa
fwait
rorb
push
es
sbb
dec
push
mov
sbb
jle
adc
aam
scas
inc
rorl
cmp
or
ror
pop
mov
cs
mov
int
in
addr16
pop
das
sub
or
push
lcall
js
outsl
mov
int
mov
jle
subl
arpl
mov
lods
adc
gs
inc
mov
ret
ja
cmp
inc
fdivl
clc
lock
mov
xchg
roll
repz
sub
mov
adc
addr16
pop
fwait
pop
sub
pop
push
cmpsl
addr16
lret
or
cmp
lods
inc
lret
ds
add
lea
in
mov
xor
into
pop
icebp
in
xchg
xchg
cmp
cmp
fdivrs
lcall
aas
push
aam
movsl
push
subl
mov
scas
push
and
outsb
mov
jge
mov
in
sbb
xor
sub
sub
jo
adc
cmp
push
push
jmp
add
xchg
and
bound
data16
jp
pusha
or
xchg
and
jo
or
xchg
lret
sbb
push
xchg
push
popa
nop
push
push
xor
push
and
xor
in
addb
sti
imul
xchg
lds
arpl
out
cmp
ds
and
imul
cwtl
cmp
add
add
or
add
inc
sbb
repnz
jp
lods
cmp
sub
and
aas
xor
imul
jo
sahf
repz
cli
jbe
or
pop
movsb
push
ficomps
xor
adc
mov
jae
sbb
rol
mov
in
shlb
inc
sub
out
jg
mov
jns
push
mov
dec
popa
sbb
push
pop
cli
std
cmpsl
xor
add
cmp
inc
scas
pushf
or
lret
out
dec
mov
aam
out
movsb
in
xchg
lock
pop
mov
imul
cs
inc
sub
loopne
fs
mov
in
mov
xor
orl
enter
and
addb
hlt
jb
test
xor
mov
inc
add
mov
test
shrl
and
dec
orl
sub
test
jle
dec
jno
or
sbb
pop
out
inc
int
or
adc
cmp
jmp
sub
xlat
jg
and
dec
int3
dec
test
jle
jbe
sub
mov
inc
enter
cmp
sub
ret
inc
adcb
outsl
xchg
sub
pusha
daa
jns
ret
mov
shlb
adc
aad
nop
mov
stc
lods
into
movsb
cmp
mov
mov
adc
je
js
loope
or
insb
in
and
icebp
dec
jge
mov
sbb
outsb
inc
or
jne
xor
pop
jbe
cmpl
pop
ss
xchg
jae
and
jmp
shlb
jecxz
jge
cmp
sub
mov
or
jmp
jl
mov
mov
add
xchg
jns
imul
aam
cmpsb
inc
subl
xorb
sub
std
jnp
fld
jmp
ficoms
mov
push
insb
mov
repnz
mov
mov
cmp
dec
int
inc
push
jo
test
sub
lcall
loopne
idiv
pop
mov
cmc
lds
dec
adc
adc
sub
jge
inc
sub
sub
push
xchg
ss
pop
xlat
test
jnp
mov
xor
sbb
bound
pop
and
cs
insb
mov
xchg
inc
jb
loop
adc
jnp
es
ja
adc
mov
add
pop
and
sub
or
or
imull
pop
dec
pop
inc
ss
dec
mov
push
or
and
xor
cmc
out
xchg
aaa
and
out
xchg
gs
mov
and
loopne
sub
dec
mov
push
mov
cwtl
in
adc
push
sti
loope
mov
or
decl
bound
inc
pop
adc
sbb
aam
dec
xor
je
sti
lods
je
jmp
enter
push
jecxz
loope
xchg
mov
pop
mov
test
or
jmp
nop
popf
mov
or
adc
push
cmp
sbb
das
ljmp
push
sub
les
outsl
pusha
lods
hlt
and
push
push
mov
pop
push
jo
xchg
sbb
jge
pop
xor
iret
or
lcall
or
adc
pop
mov
test
popa
and
add
sbb
sbb
cmp
jp
push
popl
repz
ror
inc
and
mov
out
clc
mov
add
dec
push
adc
cli
add
adc
or
cmpsb
lods
iret
mov
test
cmp
ret
mov
cs
mov
stc
lea
loopne
push
outsb
test
pushf
cmp
rcrl
push
cli
ljmp
lret
push
mov
enter
movsl
adc
pop
and
xchg
xchg
and
push
adc
adc
push
inc
ja
int
push
sub
inc
sbb
les
dec
xchg
and
dec
bound
rcl
pusha
and
inc
jmp
mov
sbb
repz
ret
lcall
cmp
mov
ret
xchg
int3
loopne
aaa
pushf
jb
lods
mov
nop
fbstp
sbb
sub
xchg
pop
roll
movsl
or
repz
mov
or
push
and
jecxz
add
hlt
cmp
shlb
sarb
add
rcrl
jae
inc
inc
and
xor
into
jle
inc
cmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
push
mov
sub
add
xor
xor
leave
call
or
add
or
and
call
xor
add
and
sub
inc
mov
xor
dec
sub
and
mov
or
dec
add
sub
sub
add
jmp
push
xor
add
push
add
and
and
push
sub
call
sub
dec
sub
xor
push
and
or
call
or
xor
cmp
mov
je
sub
sub
xor
or
mov
mov
mov
mov
je
or
and
dec
xor
mov
and
and
sub
mov
xor
add
add
inc
jmp
xor
or
and
push
inc
call
inc
push
or
push
sub
sub
push
sub
sub
and
xor
push
sub
push
xor
sub
dec
xor
call
and
add
and
mov
add
push
sub
add
dec
pop
sub
mov
mov
and
xor
or
shr
xor
or
inc
lods
add
xor
and
or
inc
sub
mov
mov
inc
add
dec
mov
mov
mov
jne
add
pop
or
xor
and
pop
and
pop
sub
add
xor
mov
jmp
