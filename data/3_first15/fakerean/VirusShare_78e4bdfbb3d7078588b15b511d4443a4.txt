mov
not
not
mov
xor
mov
neg
xor
push
mov
xor
jmp
mov
xor
mov
mov
and
adc
xor
neg
mov
mov
xor
jmp
xor
mov
xchg
mov
rcl
ror
lea
hlt
shr
lea
and
xchg
mov
jmp
lea
mov
mov
xor
not
mov
xchg
jmp
rol
mov
xor
lea
rol
mov
mov
xor
lea
mov
xchg
lea
add
cmp
je
xor
adc
jmp
adc
xor
lea
lea
mov
add
and
neg
jmp
push
pushl
pushl
call
mov
not
mov
mov
neg
rcl
xor
and
mov
lea
adc
xor
shl
shrl
add
xor
xor
xor
jmp
lea
mov
mov
neg
lea
lea
mov
xor
and
lea
push
jmp
push
mov
sub
push
push
jmp
mov
not
xor
lea
ror
not
lea
xor
jmp
shl
mov
add
mov
mov
mov
popl
adc
lea
xor
jmp
ror
mov
mov
mov
mov
jmp
call
xor
lea
ror
mov
ror
call
mov
mov
neg
mov
xchg
rol
push
and
lea
lea
mov
ror
push
mov
mov
jmp
neg
push
ror
xor
mov
lea
mov
push
neg
xor
shl
call
push
adc
jmp
add
adc
rol
neg
neg
jmp
add
xchg
lea
lea
neg
mov
shr
mov
mov
not
shr
decl
jne
lea
jmp
lea
mov
push
and
adc
mov
jmp
ror
mov
xchg
push
lea
xor
neg
push
mov
xor
shl
jmp
mov
movl
xor
mov
movl
rol
mov
xchg
mov
jmp
add
add
not
lea
pop
xor
xor
lea
not
mov
not
jmp
lea
adc
rcl
lea
shl
xor
mov
xor
neg
mov
lea
rol
jmp
neg
and
shl
lea
rcr
lea
lea
xor
shl
mov
xor
mov
not
lea
jmp
xor
mov
neg
xor
shr
add
mov
mov
and
add
shr
jmp
push
add
lea
lea
lea
lea
add
adc
and
xor
xor
xor
jmp
rol
xor
xor
sub
xor
lea
shl
xor
not
push
xor
jmp
not
xor
xor
xchg
mov
xchg
mov
jmp
add
sbb
repz
pop
sbb
sbb
pop
sbb
mov
sbb
cmp
push
div
push
mov
xor
dec
push
xor
pop
addr16
adc
inc
cmc
outsb
mov
jo
lret
outsb
mov
mov
pop
jnp
in
movsl
shrb
dec
mov
pop
js
cmp
sahf
mov
dec
xlat
push
fcomp
mov
mov
pop
xor
pop
xlat
call
es
xlat
enter
mov
icebp
jge
jp
sbb
mov
mov
pop
cs
pop
cmp
pop
test
jle
aam
mov
xor
es
jb
aaa
ja
pand
mov
inc
nop
test
and
lahf
aaa
sub
rol
scas
mov
icebp
mov
shrb
add
pop
jns
sbb
jne
mov
iret
mov
mov
or
pop
pop
test
pop
sbb
fistl
nop
mov
adc
fcompl
js
pop
aas
pop
jns
nop
mov
lahf
jecxz
xor
adc
stos
in
and
loopne
sbb
stos
xchg
sbb
pop
lcall
add
pop
mov
pop
xchg
sbb
pop
xor
imul
inc
jecxz,pn
mov
push
repz
in
jmp
test
fwait
sbb
xlat
xor
add
mov
push
nop
push
xchg
push
dec
ljmp
pop
xor
xchg
out
roll
jmp
sbb
mov
cs
xlat
cmp
add
mov
shr
xlat
cmpsl
sbb
fiaddl
xor
jg
cli
pop
call
inc
cli
pop
nop
and
push
movsb
jnp
sbb
hlt
stc
cmpsl
xor
out
cmp
add
mov
or
ds
test
push
inc
pop
jnp,pn
sahf
xorl
cwtl
arpl
test
push
xor
testb
jp
nop
mov
cmc
push
jcxz
ss
testl
mov
jge
add
or
jnp
mov
add
mov
daa
pop
jge
ret
xlat
lea
sbb
adc
dec
scas
ljmp
add
je
outsl
xchg
xchg
test
jge
add
movsb
sti
test
test
mov
div
push
in
pop
pop
push
imul
testl
stc
lock
push
cld
hlt
repz
imul
or
mov
out
lds
ja
loope
xchg
fwait
incb
jae
testb
push
cmc
mov
add
xchg
push
mov
mov
div
push
es
xor
imul
icebp
je
mov
mov
fyl2x
je
into
dec
addl
repnz
iret
imul
dec
jg
testl
mulb
push
arpl
or
je
jo
scas
jno
sub
xchg
jl
xchg
push
ja
ja
push
push
inc
or
fwait
testl
inc
push
xchg
push
mov
test
mov
div
jge
inc
cmc
dec
cmp
pop
inc
mov
negl
test
jnp
pop
sbb
arpl
cmp
fwait
push
mov
mov
sbb
daa
daa
pop
jp
in
in
addr16
out
div
push
mov
mov
mov
test
or
mov
mov
fwait
add
inc
paddusw
and
pusha
js
fdivr
repz
int
and
out
or
icebp
cwtl
aas
pop
jmp
jns
fdivl
fidivrs
scas
ljmp
add
je
jg
jl
adc
je
xchg
mov
lods
jp
mov
jmp
mov
testl
nop
mov
push
xor
push
mov
jl
xchg
mov
xchg
push
popf
dec
jecxz
push
mov
cli
rolb
jle
ja
inc
pop
xchg
mov
test
or
cmc
sub
or
mov
pop
cmpl
jmp
gs
mov
pop
arpl
je
xchg
mov
add
mov
inc
jge
mov
fs
sahf
jp
mov
test
into
add
into
test
or
idivb
mov
or
mov
jb
mov
negl
push
jns
je
int3
cld
out
mov
test
or
idivb
jge
test
sarb
scas
nop
jl
mov
cmc
movsl
xor
mov
push
movb
inc
mov
negl
mov
jg
or
or
or
jnp
jge
or
filds
hlt
push
mov
inc
inc
stc
inc
jge
jnp
adc
hlt
jo
jge
push
add
add
test
ss
lds
std
and
push
add
hlt
jnp
cmc
mov
js
scas
push
or
fucomip
inc
or
gs
or
div
push
push
div
push
mov
cld
clc
jmp
lahf
jle
jo
out
or
icebp
xorb
add
dec
leave
pop
xchg
jbe
or
add
cld
clc
hlt
jl
mov
pop
add
xor
call
push
lret
mov
pop
fstps
pop
popa
jbe
or
sub
add
hlt
push
mov
movsb
cmp
cmpsb
xchg
add
xchg
loope
stc
mov
testl
hlt
mov
add
hlt
jae
jge
or
pop
fbld
shlb
and
jp
rorl
add
adc
test
hlt
lea
div
push
mov
push
mov
int3
stc
cmp
test
testl
dec
div
push
mov
faddl
or
repz
loope
lahf
aas
decl
out
or
icebp
add
pop
add
xchg
lods
cmpsl
div
push
add
testl
cmp
testl
add
loop
xorb
push
mov
popf
pcmpeqb
sbb
out
push
push
mov
jl
xchg
add
mov
into
pop
xchg
xor
mov
mov
push
mov
scas
jmp
repnz
mov
pushf
mull
popa
out
arpl
iret
push
fcmovne
cmc
imul
pop
mov
out
addl
push
test
inc
pop
inc
xlat
mov
fwait
mov
xlat
jle
cltd
nop
cmp
xor
icebp
test
xor
fcompl
jmp
scas
rcr
fcoml
mov
push
leave
fsubrl
or
std
testb
int
push
ret
push
mov
fwait
mov
xchg
cmp
imul
jecxz
movsb
lea
adc
cmp
push
and
inc
xchg
cmp
mov
iret
mov
ljmp
pop
sub
iret
mov
aas
pop
decb
les
enter
out
into
leave
movsl
adc
xchg
xlat
sarl
sub
fcomps
mov
add
add
mov
xorl
pop
cmp
out
movsl
scas
xchg
jp
out
out
adc
fmulp
mov
mov
fistpll
fisttpl
notb
repnz
sub
addb
addb
lods
jmp
loop
psrad
rclb
aam
mov
jecxz
jbe
cltd
push
xlat
or
mov
xchg
jp
lahf
adc
fists
and
je
inc
out
mov
out
jl
iret
push
adc
js
xchg
test
lcallw
stc
jle
mov
lea
not
lahf
ds
out
lahf
aaa
out
ljmp
sbb
test
mov
and
lret
adc
jl
iret
sub
mov
mov
mov
xor
mov
add
iret
rcr
ud0
clc
mov
add
std
and
mov
aam
sbb
aaa
pop
fisttpll
fisttpl
xor
scas
icebp
sub
jge
mov
repnz
sub
jmp
add
arpl
xor
faddl
xor
into
push
call
jmp
dec
or
push
sbb
jo
out
sbb
data16
pop
lret
xor
mov
sbb
inc
inc
dec
jge
xchg
sbb
add
jecxz
cmc
fistpll
sub
add
addr16
xor
cli
lock
mov
push
jmp
stos
clc
mov
dec
addr16
clc
push
pop
xor
add
in
mov
add
lock
pusha
jecxz
add
int
jnp
xlat
into
xchg
sub
or
jnp
and
lret
arpl
push
push
aam
jg
sti
lods
jecxz
xor
xor
inc
out
pop
xchg
cmp
rolb
cli
daa
xchg
push
je
jae
addb
out
mov
lods
mov
repnz
sarl
sbb
mov
insb
dec
xor
js
mov
or
call
pop
test
lock
in
clc
cli
xchg
cmp
int3
jo
xchg
jbe
rclb
aam
push
jbe
pop
sub
mov
or
or
jl
sbb
jmp
arpl
loope
lahf
lcall
or
jg
mov
adc
pop
dec
sbb
out
in
or
adc
push
mov
mull
xchg
pop
add
xor
clc
xchg
fs
cmpsb
subb
movsl
loop
xchg
adc
inc
mov
je
mov
jecxz
insb
pop
sub
sti
sbb
inc
and
adc
je
addr16
sbb
loope
xor
nop
mov
in
pop
ret
nopl
orb
hlt
sahf
lock
sbb
jno
xchg
or
lods
sbb
mov
cld
xor
inc
and
fwait
mov
jo
scas
jnp
sbb
out
mull
mov
jmp
or
inc
push
sbb
mov
or
cmp
push
ja
out
jnp
push
or
test
xlat
in
push
fiaddl
xchg
fcompl
mov
pop
mov
test
jo
cmc
mov
or
sub
jno
lret
addr16
testl
mov
das
pop
fcomps
mov
andb
xchg
test
pop
aaa
jo
test
outsb
adcl
out
mov
xchg
cmp
movsl
cmpsl
sbb
cli
test
inc
adc
cld
and
jnp
pop
or
lret
cmp
jecxz
cmc
mov
ja
into
call
lret
into
mov
repnz
jbe
je
mov
sti
xor
cmp
cmpsl
xchg
fnstcw
scas
shl
xor
add
cmpsl
in
in
mov
loop
jg
push
sub
cmp
leave
arpl
or
int3
xlat
adc
pop
dec
adc
enter
mov
cli
icebp
out
insl
scas
xor
movsb
push
pop
shrb
xor
jmp
or
repz
sub
clc
sbbb
pop
and
mov
sarl
mov
ja
push
adc
sbb
inc
loope
add
push
out
or
arpl
pop
loop
sbb
arpl
jmp
mov
pushf
or
rcl
repnz
sbb
jmp
mov
mov
pop
cmp
jg
mov
ss
mov
inc
sahf
fistps
insl
hlt
add
mov
mov
in
jb
xor
or
push
pop
call
clc
lods
add
mov
cmp
les
jb
xchg
stos
cs
sub
fs
inc
aas
aaa
add
sub
inc
out
cmp
jecxz
jns
lret
lahf
add
jns
push
inc
jbe
addr16
data16
mov
or
jg
mov
jb
ja
es
sbb
cld
sbb
outsl
outsl
pop
es
add
mov
sahf
wrpkru
cmp
lret
cmpsb
jne
push
lea
mov
cmc
dec
test
divb
mov
lret
add
jnp
dec
sti
sub
dec
into
mov
repz
and
push
add
scas
ret
addb
jo
and
loopne
bound
mov
pusha
adc
movsl
stos
aam
fmuls
jae
pop
and
adc
jecxz
push
stos
sbb
cmpsl
out
shll
cltd
mov
leave
sub
inc
inc
mov
add
std
xor
mov
jnp
fimull
popl
sbb
loop
xchg
mov
jl
xor
fisubrl
inc
fdivr
std
fldl
repnz
stos
sub
int3
or
jmp
jnp
aas
je
int
in
ret
loope
jb
pop
jno
into
jge
pushf
jae
ja
jne
jmp
pop
dec
cmp
add
sbb
pushf
mov
fistl
jg
sti
loope
je
mov
packssdw
inc
pusha
jb
inc
dec
sbb
jl
xor
out
cltd
ja
dec
xchg
sbbl
push
aam
xchg
add
cmp
out
jnp
packuswb
push
idiv
xor
add
pop
mov
pop
das
scas
mov
mov
mov
xchg
repnz
mov
lahf
pop
jno
loope
sbb
xlat
pop
std
mov
xor
cwtl
sti
jb
sbb
push
mov
mov
scas
mov
xor
push
nop
mov
decb
add
mov
cpuid
sti
push
pop
aas
or
insl
jnp
pusha
out
cmovl
xchg
push
idivl
xor
lea
test
hlt
rorb
mov
das
cmp
lahf
xchg
jecxz
scas
lods
mov
xchg
das
sub
hlt
sbbb
scas
xchg
jmp
lock
aad
inc
dec
xchg
inc
and
les
mov
push
jne
inc
scas
xor
xchg
mov
and
or
setb
xor
jae
xchg
sub
xor
imul
cld
sbb
lahf
dec
and
outsb
mov
sub
sub
push
out
jb
xor
and
call
fcomi
ss
std
ds
loop
fisubs
and
ret
movl
or
rol
jl
sub
sub
dec
jne
jg
mov
jne
xchg
es
mov
xchg
lds
and
pop
xchg
or
lods
aaa
xchg
nop
sbb
mov
cwtl
inc
pop
push
pand
xchg
cmpsb
in
in
sbb
out
mov
xchg
nop
cmp
movsl
push
jg
mov
mov
fs
lcall
pop
or
jle
add
mov
pop
je
dec
mov
sahf
clc
cmp
adc
xor
push
mov
out
pop
movb
bound
add
push
lock
ficoms
mov
cld
std
ret
or
xor
arpl
push
cmp
lcall
shll
xchg
xor
push
ret
or
push
or
jne
jecxz
aas
adc
out
movsl
jp
stos
mov
mov
or
scas
lods
push
scas
shrl
test
orl
std
mov
xchg
mov
inc
adc
repnz
loope
call
jnp
xchg
js
xor
dec
pop
push
loope
test
lds
push
sar
addl
mov
cmpsl
and
pushf
inc
mov
xchg
orb
sbb
cli
jl
jae
outsl
pop
cmpl
mov
push
xchg
int
add
fiadds
mov
fwait
sbb
jg
dec
sbb
movsbl
add
scas
sub
push
loop
fistpll
ror
stos
inc
outsl
lods
adc
inc
pop
mov
mov
repz
jnp
mov
outsl
pop
mov
mov
inc
movsl
fmuls
lcall
cmc
jae
inc
jp
adc
hlt
mov
out
pop
aas
dec
inc
mov
mov
mov
add
lea
int3
sub
or
xor
fmull
jno
or
js
push
sbb
addb
jp
and
dec
cmc
xor
add
inc
mov
idivb
or
sbb
ja
arpl
lret
jns
loop
data16
lea
add
and
lahf
aaa
mov
cs
mov
push
scas
mov
out
xchg
aam
add
mov
cmpsl
add
scas
insl
adc
stos
fsubs
jbe
mov
push
push
fsubrs
xorl
mov
xchg
ret
jl
sarb
mov
bound
pop
push
ja
out
add
jmp
nop
cvttps2pi
rcrb
outsl
adc
sub
insb
jo
jmp
call
movsl
add
aam
aas
bound
cld
icebp
xchg
jg
dec
mov
xchg
ss
or
mov
test
mov
movsb
jl
pop
in
out
enter
jl
ret
fnsave
sub
mov
outsl
testb
sysexit
mov
mov
jg
xor
inc
or
cwtl
mov
sub
sub
xchg
gs
add
out
dec
hlt
adcl
aam
hlt
bound
dec
xor
lea
xor
jbe
and
add
mov
in
int3
add
mov
inc
sbb
shl
mov
leave
push
sub
mov
loopne
adc
cwtl
jl
enter
pop
jne
dec
add
push
push
jecxz
xchg
inc
mov
push
lret
mov
addr16
cmpsl
int
mull
fistl
jmp
je
popf
and
fmuls
push
mov
test
inc
cmp
test
bound
jo
stc
mov
add
push
or
arpl
cmp
adc
pop
stos
je
add
leave
lcall
or
mov
sbb
mov
sub
data16
sub
movl
fistps
leave
cmc
ret
push
cmpsl
inc
mov
and
sti
mov
pop
xchg
xor
imull
sub
out
std
fwait
pop
sub
shll
pop
mov
out
lock
out
dec
mov
aam
push
adc
ficompl
adc
jo
scas
les
add
mov
cltd
testb
shr
push
push
and
cli
jmp
and
cmp
push
cmp
call
bound
sbb
ds
pop
lcall
out
cwtl
push
sbb
adcb
push
pushf
outsl
inc
out
sar
xchg
sbb
mov
jbe
repnz
stos
or
mov
aaa
mov
mov
cwtl
icebp
xor
sbb
rcrl
and
shl
repnz
std
jo
jle
pop
imul
loop
aad
sbb
sahf
mov
sbb
pop
ret
fidivs
adcb
out
mov
mov
sbb
jo
stos
xor
push
aas
cmpl
out
pop
fstpt
pop
iret
out
pop
adc
out
inc
mov
jne
mov
movb
dec
ds
push
xchg
add
mov
push
in
cmp
lea
xchg
push
xor
test
rcll
out
cmp
aad
xchg
jo
adc
test
cmp
mov
pushf
inc
or
xor
dec
and
idivl
jle
push
mov
jo
xchg
icebp
xchg
insb
mov
outsb
repz
stc
ja
scas
out
add
jl
dec
adc
stos
out
movsb
mov
jno
lahf
shl
xlat
pop
pop
fldenv
or
es
aas
dec
pop
das
test
sbb
add
sbb
adc
mov
lds
je
xchg
test
mov
xor
adc
rorb
daa
minps
jg
int3
add
add
adc
aas
inc
jns
xchg
pop
xchg
xchg
hlt
imul
sahf
test
jne
pushf
pop
mov
aaa
jl
sbbb
fadd
std
jle,pn
out
mov
cmpl
jno
aaa
shr
pop
jbe
pushf
add
lock
lret
cmpl
in
jg
bound
inc
test
lret
gs
sub
into
sbb
or
xor
inc
dec
mov
jmp
testl
sbb
xor
pop
jbe
cmp
and
mov
mov
xor
hlt
and
daa
ljmp
jge
xchg
pop
cli
into
movsl
pop
cmp
xlat
sbb
pop
int3
push
dec
cmp
cwtl
jle
cmp
add
adc
fnstenv
cmpsl
stos
and
ja
lret
decl
test
mov
sub
mov
mov
or
mov
ds
add
aaa
mov
std
call
pop
cmp
in
jp
add
out
sub
stc
lock
cld
hlt
fldt
sbb
cld
lea
sub
das
fs
cmpsl
aas
icebp
xchg
mov
aas
jmp
xchg
popf
nop
jo
lret
fnstcw
jbe
mov
jo
and
cwtl
enter
lods
mov
jge
pop
es
stos
mov
cmpsb
adc
lock
mov
movsl
or
popa
cwtl
xchg
adc
push
dec
sarl
push
repz
add
jecxz
sbb
ss
lahf
je
or
call
je
icebp
fwait
lcall
lret
dec
mov
clc
cli
loope
inc
lods
roll
fstpt
lret
call
lahf
and
sub
add
jae
sub
mov
mov
addr16
in
pop
and
jge
out
cmp
cld
jl
mov
sbb
ret
add
xchg
rcrb
in
ss
cmp
mov
out
xchg
notb
pusha
ja
mov
xor
test
add
cmc
subl
into
adc
clc
rcll
mov
jmp
jo
push
in
sub
ja
data16
jns
pop
fwait
movsb
cmpsl
adc
loope
arpl
lret
stos
imul
or
psllw
mov
pop
mov
nop
mov
insl
ffreep
and
std
test
dec
popf
cmp
cmpsb
into
fnstsw
adc
mov
movsb
outsb
dec
adc
lods
inc
sbb
outsb
in
daa
jge
loop
mov
jmp
add
divl
mov
int
mov
sbb
test
ret
addl
cmpsb
hlt
ds
or
sub
jb
lahf
rcrl
jo
shll
stc
mov
push
out
mov
inc
push
test
inc
cmp
jns
data16
inc
out
mov
sahf
shr
cwtl
cmp
xchg
sub
pop
dec
addr16
fistps
xchg
pop
dec
sbb
sub
ljmp
add
aas
dec
test
push
scas
sbb
sahf
rcrl
insl
cmp
pop
sub
mov
gs
or
xor
cmp
xchg
out
push
in
mov
push
pop
pop
mov
clc
mov
ret
in
lea
aas
clc
add
repz
add
xor
dec
pop
add
jl
aad
loope
cmp
mov
ret
ret
mov
and
or
adc
arpl
mov
cwtl
fnstsw
inc
or
out
daa
jae
addr16
push
loop
jnp
jnp
sbb
std
jg
leave
sub
and
pop
cli
loopne
cmc
js
sbb
xchg
cmp
loop
cmpsb
andl
insl
les
dec
cmpsl
and
sbb
outsb
iret
inc
jl
mov
scas
lahf
jle
pop
add
xor
imul
jae
arpl
or
dec
push
and
test
dec
stos
mov
xchg
repnz
lods
adc
icebp
push
outsb
cmpl
icebp
sbbb
dec
xchg
sbb
fs
xchg
loop
iret
aaa
cmp
xchg
popf
mov
push
into
repnz
add
ja
xlat
pop
inc
sbb
and
in
mov
lea
fiaddl
or
add
das
scas
inc
mov
es
mov
decl
push
mov
fstpt
jno
out
jne
adcb
sahf
fisttpll
popa
hlt
in
test
xchg
out
bound
je
mov
pop
pop
cmp
dec
pop
rclb
or
mov
mov
sbb
subl
cmc
sbb
mov
or
adcl
shlb
cmpsl
lahf
sbb
fistps
xchg
dec
jl
lahf
sbb
insb
inc
mov
js
inc
es
bound
jle
arpl
cmp
aaa
loopne
cmp
xchg
xchg
pop
iret
adcb
and
cs
pop
pop
inc
jnp
pop
test
ficomps
fildl
cmpsb
in
out
xchg
mov
cmp
cli
jge
int
or
inc
btc
fidivrl
cld
mov
hlt
mov
mov
shlb
or
mov
fcmovu
push
ja
pop
cld
ror
negb
jp
iret
test
mov
lock
cmp
pop
mov
or
inc
repz
jno
jne
mov
pop
mov
fdivrl
xor
stc
repz
stos
xlat
mov
pop
test
sbb
xor
test
call
add
stos
ffree
push
mov
cmp
cmp
push
lods
or
mov
sarl
call
jge
outsb
mov
jg
lahf
int
mov
cmpsb
out
out
imul
loop
xchg
es
and
hlt
testb
fbld
sub
push
loope
cwtl
dec
in
or
sbb
arpl
cmp
ret
cli
lret
testb
mov
scas
inc
std
push
paddb
stc
cld
aaa
in
dec
add
sbb
fistpl
or
js
outsb
cmpsb
push
mov
jg
inc
stos
cli
ret
std
nop
ficoml
insl
arpl
mov
cmp
or
mov
xor
lods
lret
test
test
cmp
cmc
in
mov
mov
jne
mov
das
mov
jecxz
data16
lea
jmp
pop
pop
cwtl
les
push
push
decl
cmp
addb
out
mov
jp
ret
enter
ret
movsl
sub
dec
into
jle
dec
mov
ljmp
push
insb
pop
pop
loopne
push
sbb
push
negb
or
mov
leave
push
scas
mov
jae
addl
int
stc
ljmp
jg
aaa
mov
dec
mov
fbld
ljmp
orl
aam
fwait
push
and
lods
jo
and
jb
sahf
or
cs
inc
mov
mov
cmpsl
aam
movl
nop
js
cs
fmuls
sub
jae
or
subb
mov
repz
jmp
mov
mov
sbb
rcr
push
mov
sahf
daa
cwtl
lds
jo
mov
add
loopne
cmpsl
shlb
mov
cmp
sub
repnz
cs
addr16
cltd
inc
pop
pop
int3
clc
mov
rolb
ud0
jae
into
xor
stos
daa
jmp
dec
hlt
cmp
scas
aam
sub
clc
repz
inc
add
insb
lret
into
or
push
adc
pop
xor
push
lahf
ja
sub
mov
mov
dec
loopne
push
cmp
lret
jp
mov
push
movsb
pushf
adc
mov
mov
into
cmpl
arpl
movzwl
adc
add
or
mov
movsb
negl
fdivl
push
sub
add
jbe
iret
push
std
sahf
push
jbe
stos
adc
pop
sbb
testl
lret
scas
xchg
xchg
inc
push
or
and
jl
push
inc
icebp
arpl
out
push
sbb
xor
iret
mov
sbb
stc
test
push
out
in
sub
loopne
xchg
xorl
cmpb
adc
sbb
int3
cmp
inc
sbb
adc
test
notb
dec
mov
or
dec
call
push
aad
push
add
xor
push
or
ja
adc
test
roll
push
jmp
lea
ja
pusha
push
mov
testb
push
adc
pop
scas
leave
cmp
add
cld
jp
cmpsl
and
adc
inc
bndldx
add
cmp
repnz
idiv
jnp
repnz
pushf
jno
lahf
ret
ret
dec
in
arpl
sub
stos
mov
sbb
adc
ds
xor
into
add
jmp
cmpsl
xchg
orl
sub
loop
je
cmp
add
popf
imul
pop
jne
mov
sbb
in
push
xchg
js
pmuludq
enter
or
add
pop
test
movsl
dec
xlat
mov
or
lcall
xor
iret
pop
divb
jge
andb
push
adc
int
addr16
repz
lahf
push
roll
idiv
and
aas
inc
jl
dec
js
out
pop
aas
ja
aad
xchg
mov
ficoms
aas
ljmp
pop
jmp
dec
fistps
push
push
dec
xorl
out
jne
mov
inc
divl
orl
repnz
pop
cmovne
into
fidivl
push
or
add
mov
pop
gs
adc
shrl
clc
insl
push
in
in
iret
and
xchg
or
add
clc
out
adc
lock
jne
jg
or
int
in
fbstp
mov
push
xchg
and
jp
xor
pop
mov
or
jbe
arpl
test
and
or
clc
sahf
lahf
cmc
fs
stos
rcll
add
push
jbe
lcall
es
cmpsl
dec
stos
stos
stc
jle
cltd
push
outsb
adc
or
cmp
xchg
fcomp
call
inc
idivb
sbb
mov
xor
lea
sbb
pushf
jnp
dec
jae
in
leave
arpl
xchg
xchg
cs
inc
test
int
inc
sbb
jmp
jne
or
faddl
outsl
les
inc
orb
jnp
test
sti
add
jmp
mov
jae
leave
aam
rol
adc
repnz
add
add
pop
cli
mov
xor
cmp
hlt
aad
cmc
cmpl
or
xchg
jb
sar
push
shlb
scas
sete
faddp
or
sbb
enter
add
lahf
leave
add
fdivs
aaa
fstpt
inc
fisttpll
cmp
pushl
pushf
fistl
les
cmp
push
sub
mov
test
sub
fldenv
hlt
cs
jbe
push
out
jge
aaa
add
mull
xor
xorb
sbb
call
cli
mov
cmpsl
add
xchg
cmp
cmp
pop
in
shrb
cmpsb
mov
or
inc
dec
xchg
imul
and
lods
push
push
push
ja
scas
data16
std
out
cmp
shll
stc
icebp
sahf
test
pop
or
arpl
mov
xchg
insb
fistps
sbb
adc
fmull
sahf
mov
push
stos
repnz
push
xchg
icebp
fs
sub
gs
insb
out
jl
mov
aaa
sti
add
andl
xor
sub
xchg
int
rclb
das
inc
cmp
test
out
cmp
movsl
pop
stos
xlat
adc
adc
out
lret
inc
jns
or
adc
pop
cmc
in
mov
sub
dec
add
andl
pop
loop
xchg
cmpsb
add
sbb
adc
test
divl
inc
or
add
rcrl
push
or
sub
out
cld
jp
int3
cmpsb
xor
outsl
xchg
scas
movsl
lcall
add
cld
fidivs
int
sbb
std
push
int3
or
out
and
inc
shl
or
push
daa
push
sbb
mov
mov
jo
popa
sub
push
lds
out
es
inc
dec
je
ljmp
scas
aam
repz
int3
sub
pop
dec
enter
mov
aam
mov
xchg
adc
jle
sub
mov
out
pop
or
out
and
xchg
mov
mov
movsb
lods
insb
in
push
into
dec
pop
dec
andb
xchg
mov
std
lret
push
repnz
mov
mov
jle
pop
fisubs
inc
aad
lahf
xchg
xor
mov
int
out
push
jns
or
divb
repz
mov
jns
out
lods
and
shll
pop
sub
out
push
in
xchg
movsb
hlt
inc
cmp
add
mov
push
dec
push
arpl
andl
mov
lcall
fisubrl
sbb
lret
add
cmpsb
add
mov
sbb
jg
sti
in
xrelease
mov
xor
into
ficompl
cwtl
stc
icebp
sub
sbb
pop
mov
shl
cmpsl
inc
add
fmull
ljmp
imul
sbb
adc
in
push
adc
std
jne
fcmovnbe
mov
shrl
cmp
inc
das
jle
and
repz
mov
dec
add
jmp
dec
mov
stos
and
xor
loop
dec
xchg
sub
jo
or
mov
iret
or
nop
ja
cli
or
aam
ret
add
das
mov
cmc
pop
popa
es
sbb
xor
push
inc
andl
lahf
jns
inc
jg
stos
mov
sbb
iret
mov
push
mov
hlt
mov
idivb
aam
aam
in
dec
out
iret
rcl
jp
push
aam
outsl
fcoml
jb
jle
push
fidivl
mov
testb
sti
les
repnz
sub
sbb
insb
pusha
jecxz
out
dec
mov
repz
std
and
xchg
jb
lret
xchg
jnp
jns
sub
sahf
mov
std
cmc
ljmp
mov
xchg
dec
loop
jno
xchg
inc
stos
jo
cmpsl
pop
lods
incb
sahf
pusha
dec
out
adc
out
sbb
rcll
adc
lahf
jg
inc
push
gs
out
fs
adc
mov
cmp
outsb
mov
lret
adc
pop
aaa
out
mov
into
mov
mov
dec
mov
push
in
into
jb
in
cmc
je
add
mov
iret
pop
dec
cs
cmpsb
mov
js
fnstenv
arpl
cmpsl
int3
jae
incb
movsb
dec
sbb
pop
pop
cmp
fildll
mov
pushf
daa
cmpsl
loopne
push
pusha
pop
xchg
xor
adc
call
or
hlt
pop
jl
out
in
lret
mov
ja
lahf
or
sbb
push
push
inc
outsb
xchg
pop
adc
inc
pop
outsb
cmpsl
xor
ja
cs
loop
inc
mov
mov
push
ss
sti
adc
lahf
stos
xor
sub
clc
repz
cli
ds
hlt
lahf
push
ror
mov
or
dec
dec
shll
sbbb
jb
scas
fldl
adc
and
stos
mov
push
loopne
cmp
int3
orl
es
loop
lea
lods
fimuls
cwtl
or
test
sbb
mov
pop
mov
es
cmc
jg
leave
and
dec
arpl
push
mov
out
in
dec
fwait
insb
leave
add
lods
les
mov
addl
icebp
mov
ja
sub
cmc
mov
cltd
jae
loope
push
cmp
xchg
incl
imulb
call
xor
or
push
js
addr16
lods
mov
call
repnz
int3
pop
in
add
ljmp
jae
cli
jb
push
or
mov
or
pop
inc
mov
sahf
stos
lea
in
fsubrp
xor
sub
std
sbb
push
mov
sahf
fcmovbe
xor
jbe
stos
mov
scas
stos
data16
shll
inc
cltd
pop
adc
cmp
repz
inc
dec
dec
pop
pop
iret
mov
mov
mov
mov
movsl
ss
xchg
jne
arpl
test
xor
cmp
das
xchg
or
rorb
sbb
or
push
cmp
or
lock
dec
mov
sbb
cld
xchg
rcll
cmp
sbb
xor
xchg
jb
call
push
xchg
mov
pop
cmpsl
mov
push
cmp
push
mov
lock
orl
mov
mov
lea
test
sbb
imul
mov
mov
and
jb
add
dec
dec
aaa
cmp
lret
in
mov
and
inc
ret
inc
dec
data16
jnp
xchg
mov
cmc
cmp
jo
jae
mov
imul
jo
ja
sbb
ds
fprem
pop
mov
pop
sbb
mov
mov
std
hlt
xchg
add
dec
or
mov
test
push
mov
mov
movsl
cmp
in
cld
lods
sbb
sti
icebp
or
mov
int3
sub
or
int
cld
mov
or
faddl
jle
and
scas
test
test
mov
repnz
mov
inc
xchg
hlt
test
add
cmp
xor
je
mul
hlt
mov
jl
arpl
scas
dec
jge
ret
lods
in
test
push
inc
movsb
in
in
es
dec
ljmp
adc
loop
mov
ljmp
adc
push
pop
aas
cmp
or
das
ret
in
sub
aad
push
xchg
movsb
adc
scas
cs
mov
les
daa
orb
or
cmp
add
aas
or
xchg
ljmp
pop
loop
jp
iret
dec
xchg
scas
mov
or
or
sbb
cmp
mov
arpl
and
cld
cmp
loope
sbb
mov
sbb
hlt
nop
dec
jge
xchg
xchg
inc
add
pop
mov
cmp
fnstsw
inc
pop
xor
repz
sti
inc
insb
cmc
shrl
arpl
pop
push
gs
push
shlb
imul
dec
mov
cmpsb
outsl
add
out
or
ja
inc
mov
test
cmp
test
or
push
popf
sarb
aam
jmp
imul
mov
ret
push
in
movl
iret
lret
or
jno
add
mov
sub
mov
icebp
dec
dec
decl
cmp
cmp
push
or
mulb
sbb
daa
ja
pushf
sub
jo
xlat
dec
mov
adcb
push
call
imul
out
shrb
in
ja
ss
pusha
ficomps
fidivrs
pop
lds
or
sbb
push
pop
and
or
sub
inc
movsl
shl
inc
and
aad
push
jmp
sub
scas
xchg
push
aas
mov
cmpsb
out
lcall
ret
fsubr
cmp
xor
cmp
sbb
rolb
xchg
mov
fcoml
rcrb
adc
sbb
cmp
pcmpeqb
lahf
dec
mov
cmp
cmpsb
pop
lds
fistpll
xchg
mov
jb
icebp
scas
dec
jo
mov
mov
imul
mov
cld
mov
insb
and
aam
mov
push
xchg
pop
loop
cs
shrl
lds
scas
jae
xchg
mov
lcall
rolb
les
fbld
addr16
mull
xchg
jae
arpl
or
or
repnz
int
pop
ds
ret
icebp
xchg
gs
lods
stos
xor
je
mov
add
mov
ret
mov
sub
out
and
xor
sbb
xor
cmp
loop
repz
dec
das
negl
add
jp
xchg
ljmp
out
push
sbbb
jnp
hlt
cmpsb
adc
addr16
adc
shll
subb
xlat
and
push
cld
out
push
sti
scas
push
cli
idivb
push
clc
notl
out
xor
int3
lock
aaa
shl
addl
pmulhw
sub
adc
inc
icebp
push
cli
rorl
sbb
in
mov
flds
add
dec
inc
popa
jae
sbb
cmp
loopne
ret
mov
in
mov
push
test
sahf
lods
inc
jne
out
incl
je
jle
or
out
stos
sub
jb
mov
imul
and
mov
sub
enter
stos
mov
scas
outsl
ds
add
pusha
xchg
test
sti
std
out
add
add
cmpsl
ljmp
mov
jp
or
adc
popf
pusha
mov
and
pop
test
mov
loop
iret
in
push
mov
arpl
sti
fiadds
rcll
lret
push
lock
pusha
mov
push
repnz
std
cmp
out
fdivrs
xchg
push
xchg
dec
push
pop
ss
test
idivl
idiv
test
in
out
fcmovb
push
xchg
pop
xor
iret
cmc
data16
dec
testl
push
cmp
cmp
lret
pop
jge
or
std
add
mov
mov
add
pop
pop
xlat
cltd
out
xchg
pop
push
shl
shl
ds
pop
jno
pop
inc
sahf
or
imul
fimull
rcrl
test
push
mov
mov
shrl
leave
scas
in
mov
xor
test
fldt
aad
shrb
out
lret
in
sub
mov
push
stc
jb
push
xchg
scas
in
cld
jne
or
xorl
fyl2xp1
add
enter
ljmp
xchg
push
sub
push
pop
xor
push
add
mov
xchg
movb
dec
pushf
push
or
fimull
push
movsl
lock
adc
xchg
in
scas
mov
ljmp
cld
add
js
adc
shll
sub
pop
cmp
int3
div
aaa
mov
mov
xorl
pop
pop
iret
add
fsubp
sbb
ficompl
lods
fcompl
cmp
add
inc
and
fwait
mov
pop
dec
out
divb
popf
sti
pop
sub
mov
out
pushf
cmp
fisubrl
mov
ljmp
jno
fs
inc
movsl
push
in
lods
adc
cmpsl
cs
mov
add
mov
loope
and
shl
mov
fnsave
mov
rorb
jg
jle
outsl
mov
push
cli
mulb
jns
rcl
xor
push
inc
loop
ss
cmp
sti
in
pop
xchg
lcall
mov
jb
or
std
xor
mov
pop
push
mov
addb
sti
testb
repnz
aad
sub
fdivp
adc
es
mov
add
movsl
sub
lods
add
xchg
out
scas
loopne
inc
loop
adc
js
xchg
int3
lea
notl
adc
adc
adc
dec
xchg
jne
ds
out
arpl
rol
dec
dec
xchg
fimull
add
xor
xchg
enter
aas
push
loop
mov
flds
inc
mov
sbb
stc
push
sbb
push
pop
or
xchg
xchg
push
addl
jne
dec
mov
push
ret
repnz
loopne
insl
aad
aad
add
pushf
cli
add
pop
push
fdivl
cmp
jp
addl
jae
ret
aad
jecxz
cmc
fldt
jno
dec
jns
andl
sbb
sbb
sbbl
or
jnp
jo
lcall
into
pusha
cmc
pop
xchg
daa
int3
and
scas
idivl
lock
xchg
push
popa
fistps
std
sbb
mov
adc
loop
out
nopl
push
mov
cmp
lods
and
xlat
jecxz
or
enter
.byte
