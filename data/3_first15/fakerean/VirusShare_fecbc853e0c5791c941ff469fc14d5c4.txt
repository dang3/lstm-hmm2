cmpsb
daa
add
add
add
dec
dec
inc
inc
push
push
xor
cs
insb
add
sldt
inc
jb
popa
je
inc
jne
add
adc
inc
outsl
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
dec
outsb
imul
add
pop
add
push
gs
jb
js
inc
insb
popa
outsb
imul
add
push
popa
jae
dec
gs
inc
jb
add
rolb
outsb
imul
imul
push
je
imul
inc
dec
push
dec
inc
add
xor
cs
insb
add
add
outsl
jae
dec
popa
outsb
fs
add
add
insl
jo
jb
inc
imul
xor
inc
outsl
insl
jo
jb
push
je
imul
add
insl
jo
jb
push
je
imul
add
gs
je
inc
imul
jns
add
dec
add
gs
je
inc
jbe
outsb
je
add
push
add
gs
je
inc
imul
jb
popa
je
dec
jne
gs
add
arpl
inc
jb
popa
je
push
jb
arpl
jae
add
imul
je
push
push
add
jp
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
inc
gs
gs
inc
imul
imul
push
dec
imul
popa
insb
insb
jae
popl
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
mov
inc
js
popa
outsb
fs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
insb
gs
imul
jae
gs
push
imul
inc
imul
gs
add
outsb
fs
imul
gs
add
aam
inc
imul
inc
imul
outsl
jb
popa
je
gs
popa
addr16
add
out
add
gs
imul
cmp
inc
gs
jne
jb
outsb
je
jb
arpl
jae
cmp
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
inc
jne
jb
outsb
je
push
add
add
je
jne
jb
outsb
je
push
dec
add
dec
add
je
jb
jbe
push
jns
gs
add
inc
gs
js
je
outsl
fs
jb
arpl
jae
add
inc
gs
js
je
outsl
fs
push
add
inc
gs
imul
bound
gs
js
add
pop
add
je
imul
bound
gs
add
pop
add
je
imul
pop
add
je
imul
pop
add
je
imul
imul
gs
outsl
arpl
push
imul
inc
gs
outsl
arpl
gs
outsb
outsw
push
add
outsl
add
je
outsl
imul
jbe
push
je
imul
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
popl
inc
gs
jb
jbe
je
push
jb
imul
push
add
push
jb
jbe
je
push
jb
imul
imul
add
je
jb
arpl
fs
jae
add
fwait
add
je
jb
arpl
jae
gs
jo
add
push
jns
je
insl
inc
gs
jne
je
popa
outsb
addr16
inc
add
mov
push
jns
je
insl
inc
imul
jns
add
push
jns
je
insl
dec
outsb
outsw
add
push
jns
je
insl
push
imul
gs
jns
je
insl
push
imul
insb
gs
imul
gs
imul
je
add
add
je
jae
jb
gs
jne
je
popa
outsb
addr16
inc
add
loopne
inc
gs
gs
imul
loop
inc
gs
outsl
insb
jne
gs
outsb
outsw
jb
popa
je
outsl
outsb
push
add
add
je
outsl
insb
jne
gs
popa
je
aas
out
inc
add
add
add
je
imul
imul
jns
add
out
add
outsl
bound
inc
insb
insb
outsl
arpl
cmc
add
outsl
bound
inc
jb
add
push
add
popa
jo
insb
insb
outsl
arpl
or
dec
gs
jo
jb
add
adc
dec
gs
jo
gs
insb
insb
outsl
arpl
sbb
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
dec
outsb
je
jb
outsl
arpl
fs
outsl
insl
jo
jb
inc
js
push
add
push
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
je
jb
outsl
arpl
fs
js
push
add
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
dec
add
fs
imul
js
add
push
add
popa
insb
inc
jb
add
dec
popa
jo
imul
insb
add
dec
outsl
jbe
inc
imul
jne
je
inc
jns
gs
outsl
push
imul
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
test
fs
imul
gs
gs
jae
dec
jne
gs
add
outsl
jbe
inc
imul
jns
add
ret
gs
je
jbe
outsb
je
add
add
je
outsb
fs
inc
imul
gs
jbe
outsb
je
add
inc
imul
bound
gs
add
push
add
je
imul
gs
add
add
je
imul
sbb
push
gs
popa
jae
inc
jb
outsl
jb
add
add
je
outsb
push
gs
js
gs
imul
gs
inc
add
gs
dec
add
jae
gs
push
imul
insb
gs
imul
push
gs
imul
outsl
arpl
jae
add
push
outsb
push
gs
js
gs
imul
gs
add
push
outsb
insl
popa
jo
imul
insb
add
je
outsl
jb
jne
je
jo
gs
bound
arpl
add
je
outsl
jb
imul
push
arpl
add
fs
push
dec
jne
je
inc
jns
add
gs
imul
je
arpl
push
add
mov
insb
jae
jb
insl
jo
push
add
jb
jo
outsb
push
add
insb
outsb
inc
add
mov
jb
outsb
push
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
adc
inc
add
jb
add
sub
inc
push
js
push
add
inc
push
jo
jb
add
aaa
add
xor
inc
add
jb
add
mov
jo
je
push
popa
addr16
add
loope
inc
js
je
imul
js
jmp
inc
gs
arpl
gs
imul
add
je
gs
outsl
popa
jb
push
jns
add
inc
gs
imul
xchg
faddl
push
jb
arpl
jae
add
in
add
addr16
popa
imul
je
jo
gs
bound
arpl
add
push
gs
jae
addr16
add
add
push
outsl
jae
dec
gs
popa
addr16
add
inc
add
outsb
fs
gs
popa
addr16
add
stos
add
outsb
jae
popa
je
dec
gs
popa
add
push
push
inc
push
xor
cs
insb
add
sub
push
popa
je
loope
inc
add
je
outsb
jae
outsl
outsb
push
add
dec
add
je
inc
add
imul
push
popa
je
push
roll
je
add
popa
je
jmp
inc
add
add
data16
je
mov
add
inc
popa
arpl
insb
popa
jae
xchg
in
add
push
popa
je
lods
fldl
jo
outsl
push
outsl
outsl
je
add
fadds
push
je
inc
push
add
jb
insl
jo
push
add
filds
push
je
inc
insl
jo
add
add
jb
inc
push
add
push
je
push
je
dec
push
add
or
push
je
push
outsl
dec
outsb
je
js
add
add
jb
outsl
dec
outsb
je
add
add
insb
inc
outsl
insl
bound
gs
add
add
insb
inc
gs
popa
jb
push
add
dec
push
inc
push
dec
cs
insb
add
push
dec
inc
jb
ja
gs
outsl
jb
outsl
insb
fs
add
mov
push
dec
inc
gs
outsl
insb
fs
popa
je
xchg
inc
add
push
dec
inc
gs
popa
insb
insb
outsl
arpl
mov
gs
popa
je
lret
dec
inc
dec
imul
add
rolb
js
arpl
gs
add
inc
dec
dec
xor
cs
insb
add
inc
fs
jae
push
outsl
imul
jb
jbe
insb
gs
sbb
outsl
arpl
gs
outsb
fs
outsb
imul
push
imul
outsb
jbe
jb
push
je
imul
jb
je
inc
gs
jb
jo
outsl
jb
outsl
push
arpl
imul
imul
add
inc
outsl
jo
push
imul
popa
insb
push
imul
gs
imul
dec
outsb
addr16
in
ljmp
gs
arpl
imul
imul
arpl
add
je
arpl
imul
imul
outsb
gs
add
add
je
outsl
imul
outsb
outsw
jb
popa
je
outsl
outsb
add
add
push
popa
insb
imul
add
imul
jb
jbe
insb
gs
popa
insb
jne
push
add
jae
inc
insb
outsl
jae
add
bound
dec
jae
inc
jb
gs
gs
outsl
jb
add
dec
jae
dec
je
je
je
jae
outsl
push
imul
add
dec
jae
dec
jo
outsb
push
outsl
insb
imul
jae
push
jne
jb
dec
outsb
outsw
jb
popa
je
outsl
outsb
push
outsl
insb
imul
jo
outsb
push
jb
arpl
jae
outsl
imul
add
add
addr16
insb
outsl
jae
dec
gs
into
add
addr16
jb
popa
je
dec
gs
js
add
add
addr16
gs
gs
dec
gs
add
add
addr16
outsb
jne
dec
gs
js
add
add
addr16
outsb
jne
dec
gs
add
add
addr16
jo
outsb
dec
gs
js
add
add
addr16
jo
outsb
dec
gs
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
cli
add
addr16
gs
popa
insb
jne
inc
js
add
sub
push
gs
popa
insl
gs
arpl
imul
add
push
inc
push
dec
xor
cs
insb
add
add
je
jb
gs
popa
outsb
outsl
outsb
imul
push
jb
push
add
jb
dec
outsb
je
jb
gs
jb
arpl
jb
push
add
gs
gs
gs
outsl
outsb
outsb
arpl
push
je
je
add
gs
gs
jne
jb
dec
jo
imul
dec
dec
dec
dec
inc
push
cs
insb
add
inc
dec
pop
inc
gs
inc
gs
outsl
fs
push
imul
jb
jo
jb
jns
add
inc
dec
pop
inc
gs
inc
gs
outsl
fs
push
je
je
jae
lea
inc
dec
pop
dec
outsl
arpl
gs
inc
gs
outsl
fs
add
out
push
gs
jo
insb
outsl
jae
inc
imul
add
add
je
jo
insb
outsl
jae
dec
outsb
inc
imul
je
jo
imul
jb
jbe
jb
outsb
outsw
dec
imul
push
gs
jo
imul
inc
gs
arpl
outsb
outsw
dec
imul
gs
jo
imul
inc
gs
arpl
outsb
outsw
dec
imul
push
gs
jo
imul
jbe
arpl
outsb
outsw
add
add
je
jo
imul
imul
outsl
push
add
xor
push
gs
jo
imul
jae
inc
gs
push
add
aas
add
je
jo
imul
imul
popa
insb
insb
push
popa
jb
insl
jae
add
inc
add
je
jo
imul
imul
popa
outsb
arpl
fs
add
push
gs
jo
imul
imul
jae
jb
push
jb
jo
jb
jns
add
push
gs
jo
imul
jbe
jb
outsb
jae
popa
insb
insb
push
popa
jb
insl
jae
add
pop
add
je
jo
imul
insb
inc
jb
jbe
jb
imul
gs
jo
imul
jbe
gs
gs
add
push
gs
jo
imul
jbe
arpl
outsb
outsw
push
add
jbe
push
gs
jo
imul
imul
popa
insb
insb
push
popa
jb
insl
jae
add
jle
push
gs
jo
imul
arpl
inc
jb
jbe
jb
add
jne
inc
imul
je
imul
push
gs
jo
gs
je
imul
fs
add
movb
gs
jo
jo
outsb
inc
imul
add
enter
je
jo
jo
outsb
dec
outsb
inc
imul
gs
jo
arpl
inc
imul
push
add
push
push
push
inc
push
dec
cs
insb
add
inc
add
jb
inc
gs
gs
imul
inc
outsl
outsb
je
js
push
jb
jo
jb
jns
cltd
add
jns
je
popa
jae
aam
inc
add
dec
gs
outsb
outsw
add
inc
push
pop
push
push
xor
cs
insb
add
add
in
push
push
call
cmpl
je
mov
cmp
jne
mov
mov
leave
ret
js
add
js
add
add
add
cld
and
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
mov
add
add
add
loopne
add
shlb
add
add
add
xchg
and
add
add
add
add
sbb
add
clc
and
add
and
add
and
add
and
add
flds
add
add
and
add
and
add
add
les
add
xor
add
sub
add
repnz
add
add
lock
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
mov
add
add
add
loopne
add
shlb
add
add
add
xchg
and
add
add
add
add
sbb
add
clc
and
add
and
add
and
add
and
add
lret
inc
add
add
push
add
je
jo
insb
outsl
jae
dec
outsb
inc
imul
je
jo
imul
inc
gs
arpl
outsb
je
jb
popa
arpl
gs
gs
add
add
je
jo
imul
inc
gs
arpl
outsb
outsw
dec
imul
push
gs
jo
imul
jbe
arpl
outsb
je
jb
popa
arpl
add
push
gs
jo
imul
jae
inc
gs
push
add
push
add
je
jo
imul
jae
dec
outsb
jae
popa
insb
insb
push
popa
jb
insl
jae
add
push
gs
jo
imul
imul
jb
popa
arpl
gs
imul
gs
jo
imul
insb
inc
gs
arpl
add
jne
inc
imul
inc
gs
arpl
outsb
je
jb
popa
arpl
add
jne
inc
imul
jae
dec
outsb
jae
popa
insb
insb
push
popa
jb
insl
jae
add
add
je
jo
jo
outsb
dec
outsb
inc
imul
jne
popa
jo
cs
insb
add
sub
inc
push
ja
jb
add
push
push
inc
push
xor
cs
insb
add
lds
dec
dec
inc
inc
jb
insl
push
je
imul
je
imul
inc
push
dec
inc
xor
outsl
insb
xor
cs
insb
add
add
addr16
insb
outsl
jae
dec
gs
inc
inc
push
inc
push
dec
xor
cs
insb
add
add
outsl
jae
dec
popa
outsb
fs
add
inc
jb
popa
je
inc
jbe
outsb
je
add
push
add
gs
je
inc
imul
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
bound
push
dec
imul
popa
insb
insb
jae
imul
popa
jae
inc
jb
outsl
jb
add
jbe
jb
popa
jo
gs
gs
insb
je
fwait
add
je
jb
arpl
jae
gs
jo
add
add
popa
jo
insb
insb
outsl
arpl
or
dec
gs
jo
jb
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
push
mov
push
push
call
cmpl
je
mov
cmp
jne
mov
mov
leave
ret
add
add
sgdtl
add
and
add
add
add
or
add
js
add
add
add
or
add
or
add
sub
add
dec
and
add
fildl
adc
add
adc
add
adc
add
adc
add
add
add
adc
add
adc
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
add
add
add
jb
outsl
insb
cs
insb
add
push
dec
outsl
arpl
outsl
ja
push
jb
jbe
fs
inc
dec
push
push
outsl
insb
imul
dec
push
push
outsl
insb
imul
imul
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
push
imul
jb
gs
inc
insb
insb
push
outsb
jb
imul
jb
gs
inc
gs
jne
insb
imul
gs
outsb
jae
outsb
gs
gs
imul
add
add
add
add
add
and
add
add
add
or
add
js
add
add
add
or
add
or
add
sub
add
dec
and
add
jmp
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
add
add
add
jb
outsl
insb
cs
insb
add
push
dec
outsl
arpl
outsl
ja
push
jb
jbe
fs
inc
dec
push
push
outsl
insb
imul
dec
push
push
outsl
insb
imul
imul
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
push
imul
jb
gs
inc
insb
insb
push
outsb
jb
imul
jb
gs
inc
gs
jne
insb
imul
gs
outsb
jae
outsb
gs
gs
imul
add
add
add
add
add
and
add
add
add
or
add
js
add
add
add
or
add
or
add
sub
add
dec
and
add
fadds
adc
add
adc
add
adc
add
adc
add
add
add
adc
add
adc
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
add
add
add
jb
outsl
insb
cs
insb
add
push
dec
outsl
arpl
outsl
ja
push
jb
jbe
fs
inc
dec
push
push
outsl
insb
imul
dec
push
push
outsl
insb
imul
imul
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
push
imul
jb
gs
inc
insb
insb
push
outsb
jb
imul
jb
gs
inc
gs
jne
insb
imul
gs
outsb
jae
outsb
gs
gs
imul
add
add
add
add
add
and
add
add
add
or
add
js
add
add
add
or
add
or
add
sub
add
dec
and
add
ljmp
adc
add
adc
add
adc
add
add
add
adc
add
adc
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
add
add
add
jb
outsl
insb
cs
insb
add
push
dec
outsl
arpl
outsl
ja
push
jb
jbe
fs
inc
dec
push
push
outsl
insb
imul
dec
push
push
outsl
insb
imul
imul
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
push
imul
jb
gs
inc
insb
insb
push
outsb
jb
imul
jb
gs
inc
gs
jne
insb
imul
gs
outsb
jae
outsb
gs
gs
imul
add
add
add
add
add
and
add
add
add
or
add
js
add
add
add
or
add
or
add
sub
add
dec
and
add
fiadds
adc
add
adc
add
adc
add
adc
add
add
add
adc
add
adc
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
add
add
add
jb
outsl
insb
cs
insb
add
push
dec
outsl
arpl
outsl
ja
push
jb
jbe
fs
inc
dec
push
push
outsl
insb
imul
dec
push
push
outsl
insb
imul
imul
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
push
imul
jb
gs
inc
insb
insb
push
outsb
jb
imul
jb
gs
inc
gs
jne
insb
imul
gs
outsb
jae
outsb
gs
gs
imul
add
add
add
add
add
and
add
add
add
add
js
add
add
add
or
add
or
add
sub
add
dec
and
add
movb
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
add
add
add
jb
outsl
insb
cs
insb
add
push
dec
outsl
arpl
outsl
ja
push
jb
jbe
fs
inc
dec
push
push
outsl
insb
imul
dec
push
push
outsl
insb
imul
imul
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
push
imul
jb
gs
inc
insb
insb
push
outsb
jb
imul
jb
gs
inc
gs
jne
insb
imul
gs
outsb
jae
outsb
gs
gs
imul
add
add
add
add
add
and
add
add
add
add
js
add
add
add
or
add
or
add
sub
add
dec
and
add
out
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
add
add
add
jb
outsl
insb
cs
insb
add
push
dec
outsl
arpl
outsl
ja
push
jb
jbe
fs
inc
dec
push
push
outsl
insb
imul
dec
push
push
outsl
insb
imul
imul
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
push
imul
jb
gs
inc
insb
insb
push
outsb
jb
imul
jb
gs
inc
gs
jne
insb
imul
gs
outsb
jae
outsb
gs
gs
imul
add
add
add
add
add
and
add
add
add
add
js
add
add
add
or
add
or
add
sub
add
dec
and
add
filds
adc
add
adc
add
adc
add
adc
add
add
add
adc
add
adc
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
add
add
add
jb
outsl
insb
cs
insb
add
push
dec
outsl
arpl
outsl
ja
push
jb
jbe
fs
inc
dec
push
push
outsl
insb
imul
dec
push
push
outsl
insb
imul
imul
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
push
imul
jb
gs
inc
insb
insb
push
outsb
jb
imul
jb
gs
inc
gs
jne
insb
imul
gs
outsb
jae
outsb
gs
gs
imul
add
add
add
add
add
and
add
add
add
add
js
add
add
add
or
add
or
add
sub
add
dec
and
add
aad
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
add
add
add
jb
outsl
insb
cs
insb
add
push
dec
outsl
arpl
outsl
ja
push
jb
jbe
fs
inc
dec
push
push
outsl
insb
imul
dec
push
push
outsl
insb
imul
imul
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
push
imul
jb
gs
inc
insb
insb
push
outsb
jb
imul
jb
gs
inc
gs
jne
insb
imul
gs
outsb
jae
outsb
gs
gs
imul
add
add
add
add
add
and
add
add
add
add
js
add
add
add
or
add
or
add
sub
add
dec
and
add
lds
adc
add
adc
add
adc
add
adc
add
add
add
adc
add
adc
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
add
add
add
jb
outsl
insb
cs
insb
add
push
dec
outsl
arpl
outsl
ja
push
jb
jbe
fs
inc
dec
push
push
outsl
insb
imul
dec
push
push
outsl
insb
imul
imul
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
push
imul
jb
gs
inc
insb
insb
push
outsb
jb
imul
jb
gs
inc
gs
jne
insb
imul
gs
outsb
jae
outsb
gs
gs
imul
add
in
push
push
call
cmpl
je
mov
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
leave
ret
add
add
inc
pop
add
add
add
add
add
cmp
pop
dec
add
add
adc
add
add
add
mov
add
mov
add
sub
add
in
and
add
adc
add
adc
add
adc
add
adc
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
or
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
sbb
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
and
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
sub
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
xor
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
cmp
adc
add
adc
add
add
inc
adc
add
add
inc
adc
add
add
add
inc
adc
add
add
dec
adc
add
add
dec
adc
add
add
dec
adc
add
add
dec
adc
add
add
push
adc
add
add
push
adc
add
add
push
adc
add
add
push
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pusha
adc
add
add
bound
add
arpl
add
adc
add
add
data16
add
add
push
adc
add
add
imul
add
add
add
outsb
adc
add
add
jo
add
jno
add
jb
add
jae
add
je
add
jne
add
jbe
add
ja
add
js
add
jns
add
jp
add
jnp
add
jl
add
jge
add
jle
add
jg
add
adcb
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
sub
add
push
daa
add
js
add
xchg
add
scas
daa
add
lret
daa
add
frstor
add
hlt
daa
add
or
add
sub
add
inc
sub
add
add
insb
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
aaa
sub
add
add
push
sub
add
ret
rolb
add
in
sub
add
sub
add
sub
add
add
push
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sbb
sub
add
add
add
jg
add
xchg
sub
add
add
lret
add
sub
add
sub
add
sub
add
add
pusha
sub
add
add
xchg
sub
add
sub
add
sub
add
sub
add
push
sub
add
subl
add
into
sub
add
pop
add
sub
add
inc
add
popa
add
jp
add
xchg
add
cwtl
add
test
add
mov
add
enter
in
add
push
das
add
push
das
add
xor
add
dec
das
add
outsb
das
add
test
add
sahf
das
add
scas
das
add
les
add
das
add
repz
add
add
add
sbb
add
sub
add
inc
xor
add
add
data16
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xorl
add
mov
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
bound
add
jnp
add
xchg
xor
add
xor
add
xor
add
add
push
xor
add
add
xor
add
add
lea
add
stos
xor
add
xor
add
xor
add
xor
add
xor
add
add
aas
xor
add
xor
add
add
pop
xor
add
add
mov
add
xor
add
xor
add
xor
add
xor
add
add
adc
add
inc
xor
add
jno
add
xorb
add
xor
add
out
xor
add
and
add
push
add
je
add
xorl
add
add
loop
add
adc
add
cs
add
inc
aaa
add
xchg
add
add
add
test
pop
add
add
pop
add
add
add
add
add
fadds
add
cltd
add
push
add
add
add
lcall
add
movsb
add
pop
add
add
add
pusha
add
dec
rolb
add
add
cmp
sbb
add
add
add
add
pop
add
add
jg
aas
add
add
add
add
xchg
add
add
add
mov
add
add
add
add
add
add
add
jnp
and
xor
add
dec
add
add
add
mov
push
add
mov
lahf
add
dec
add
or
je
jns
sbb
mov
add
add
addb
add
addl
and
cwtl
add
xor
test
sub
ja
stos
add
dec
add
data16
add
fwait
add
imul
nop
add
add
add
popf
add
add
add
mov
add
add
add
cmp
xor
and
je
popa
insl
cs
insb
add
gs
je
dec
outsb
je
jb
popa
arpl
dec
outsb
je
jb
popa
insb
push
je
popa
insl
dec
jne
inc
insb
imul
outsb
outsb
arpl
push
outsl
inc
outsb
imul
gs
popa
insb
push
je
popa
insl
push
push
push
push
ja
inc
outsb
imul
gs
insl
inc
bound
je
popa
insb
insb
add
gs
insl
inc
bound
je
outsb
outsl
imul
dec
inc
push
imul
insb
imul
push
je
popa
insl
inc
arpl
jne
jae
jb
jo
imul
imul
popa
insl
inc
insb
outsl
arpl
outsb
addr16
popa
insb
insb
add
gs
insl
inc
push
inc
arpl
jne
je
popa
insl
add
gs
insl
inc
push
inc
insl
popa
imul
jae
push
je
popa
insl
inc
push
inc
outsl
jb
outsl
je
outsb
push
popa
jae
ja
jb
add
gs
insl
inc
push
dec
data16
imul
jne
add
gs
insl
inc
push
push
popa
jae
ja
jb
add
gs
insl
inc
push
push
gs
outsl
outsb
popa
insb
push
inc
add
gs
insl
inc
push
jo
dec
ja
gs
push
je
popa
insl
inc
insb
gs
outsb
jne
add
gs
insl
inc
insb
gs
jb
jb
outsl
jb
push
je
popa
insl
inc
insb
outsl
jae
inc
imul
insl
inc
jb
popa
je
inc
arpl
jne
je
push
je
popa
insl
inc
jb
popa
je
inc
popa
arpl
fiaddl
insb
outsl
popa
fs
add
gs
insl
inc
jb
popa
je
dec
outsl
addr16
outsl
outsb
je
js
add
gs
insl
inc
arpl
jo
inc
popa
je
inc
outsl
jb
push
arpl
fiaddl
push
je
popa
insl
inc
gs
addr16
popa
arpl
faddl
je
popa
insl
inc
gs
gs
inc
arpl
jne
je
push
je
popa
insl
inc
outsb
arpl
jo
inc
popa
je
inc
outsl
jb
push
arpl
rolb
push
je
popa
insl
inc
outsb
jne
gs
je
inc
jo
add
gs
insl
inc
outsb
jne
gs
je
inc
jo
inc
gs
outsb
fs
arpl
push
je
popa
insl
inc
outsb
jne
gs
je
inc
jo
dec
arpl
add
gs
insl
inc
outsb
jne
gs
je
inc
jo
dec
popa
jne
arpl
fldl
outsl
outsb
add
gs
insl
inc
outsb
jne
gs
je
inc
jo
push
gs
imul
popa
insl
inc
outsb
jne
gs
je
push
jne
jae
jb
jo
imul
popa
insl
inc
outsb
jne
gs
je
push
jne
jae
jb
jo
imul
outsl
jne
je
push
je
popa
insl
inc
outsb
jne
gs
je
push
jne
jae
jb
jo
imul
outsl
jne
je
jne
insb
imul
je
popa
insl
inc
imul
push
je
popa
insl
inc
imul
add
gs
insl
inc
imul
je
xor
push
je
popa
insl
inc
imul
je
push
je
popa
insl
inc
imul
ss
push
je
popa
insl
inc
imul
add
gs
insl
inc
imul
gs
inc
gs
jb
outsl
jb
je
imul
popa
insl
inc
imul
gs
dec
je
jb
je
push
gs
gs
push
je
popa
insl
inc
imul
gs
dec
jne
push
gs
gs
add
gs
insl
inc
insb
jne
push
add
gs
insl
inc
insb
jne
push
add
gs
insl
inc
outsl
jb
gs
gs
insb
dec
add
gs
insl
inc
outsl
jb
gs
insb
insb
dec
imul
gs
insl
inc
outsb
gs
je
push
jne
addr16
gs
arpl
jne
je
popa
insl
gs
push
je
popa
insl
inc
gs
arpl
jne
je
je
je
jae
push
je
popa
insl
inc
gs
jo
inc
popa
arpl
in
inc
add
push
je
popa
insl
inc
gs
jo
inc
dec
inc
push
je
je
jae
push
je
popa
insl
inc
gs
jo
inc
gs
outsb
fs
arpl
jae
push
je
popa
insl
inc
gs
jo
inc
imul
insl
inc
gs
jo
dec
fs
push
je
popa
insl
inc
gs
jo
push
jne
arpl
lock
add
outsb
je
jns
push
je
popa
insl
inc
gs
jo
push
je
je
add
gs
insl
inc
gs
jo
push
jo
popa
je
push
je
je
add
gs
insl
inc
gs
jo
push
jae
jb
imul
outsb
outsw
add
gs
insl
inc
gs
jo
push
jae
jb
imul
arpl
add
gs
insl
inc
gs
popa
arpl
les
jb
jo
imul
push
je
popa
insl
inc
gs
popa
arpl
jmp
insb
je
imul
jns
push
je
popa
insl
inc
gs
popa
arpl
in
add
popa
je
dec
aad
add
inc
gs
popa
arpl
ret
arpl
je
jb
insl
outsb
je
je
outsl
outsb
add
gs
insl
inc
gs
outsl
outsb
je
outsb
je
gs
gs
outsb
outsw
add
gs
insl
inc
gs
jne
jb
outsb
je
insl
popa
imul
jae
push
je
popa
insl
inc
gs
outsb
arpl
jo
gs
gs
popa
insb
jbe
inc
inc
dec
gs
push
je
popa
insl
inc
gs
outsb
arpl
jo
gs
jae
jb
inc
push
imul
je
popa
insl
inc
gs
outsb
arpl
jo
imul
outsl
push
outsb
fs
outsl
dec
gs
insb
imul
gs
insl
inc
gs
outsl
arpl
inc
insb
imul
jae
outsl
outsb
add
gs
insl
inc
gs
outsl
arpl
inc
imul
push
je
popa
insl
inc
gs
jne
inc
arpl
jne
je
push
imul
inc
fs
jae
add
gs
insl
inc
gs
data16
imul
jne
add
gs
insl
inc
gs
jo
outsb
jae
jb
jb
add
gs
insl
inc
gs
jne
jae
jb
jo
imul
outsb
fs
outsb
outsw
add
gs
insl
inc
gs
jne
jae
jb
jo
imul
push
je
popa
insl
inc
gs
jne
jae
jb
jo
imul
push
outsl
jne
je
jns
push
je
popa
insl
inc
gs
jne
jae
jb
jo
imul
imul
popa
insl
inc
gs
jne
jae
jb
jo
imul
jae
push
je
popa
insl
inc
gs
outsl
je
insb
push
jo
popa
je
push
je
je
add
gs
insl
inc
gs
jae
jb
push
je
popa
insl
inc
gs
jae
jb
jns
add
gs
insl
inc
gs
gs
imul
popa
insl
inc
gs
add
gs
insl
dec
imul
jne
arpl
gs
gs
insl
dec
outsb
imul
push
jae
jb
inc
push
imul
insb
imul
je
popa
insl
dec
outsb
jae
jb
inc
jo
inc
gs
outsb
fs
arpl
push
je
popa
insl
dec
jae
arpl
jne
je
popa
insl
gs
outsb
push
jae
add
gs
insl
dec
jae
jo
push
jne
jae
jb
bound
add
gs
insl
dec
jae
popa
arpl
filds
imul
insb
gs
gs
insl
dec
jae
imul
imul
jbe
imul
je
popa
insl
dec
jae
imul
fs
jns
jo
add
gs
insl
dec
jae
imul
fs
jns
popa
arpl
lret
gs
insl
dec
jae
outsl
addr16
outsb
add
gs
insl
dec
jae
arpl
gs
outsl
insl
jo
je
jb
push
je
popa
insl
dec
jae
jne
jae
jb
bound
add
gs
insl
dec
jae
jae
outsb
addr16
imul
je
outsb
je
gs
gs
push
je
popa
insl
dec
popa
jne
arpl
roll
push
je
popa
insl
dec
outsl
popa
fs
popa
arpl
inc
add
imul
insl
dec
outsl
popa
fs
imul
add
gs
insl
dec
outsl
popa
fs
imul
push
gs
insl
dec
outsl
add
gs
insl
dec
outsl
addr16
gs
jne
arpl
outsl
popa
fs
imul
inc
add
insl
dec
outsl
addr16
gs
jne
arpl
outsl
popa
fs
je
jb
gs
gs
insl
dec
outsl
imul
insl
dec
outsl
outsl
jne
add
gs
insl
dec
imul
dec
outsb
imul
dec
outsl
jne
je
jo
inc
imul
insl
add
gs
insl
dec
outsl
jne
je
imul
insl
add
gs
insl
dec
outsl
jbe
inc
jo
add
gs
insl
dec
jne
inc
jo
jae
jne
outsb
imul
popa
insl
dec
jo
outsb
inc
imul
gs
insl
dec
jo
outsb
inc
imul
insl
dec
jo
outsb
inc
imul
gs
insl
dec
jo
outsb
push
insl
jo
imul
insl
dec
jo
imul
gs
outsb
push
jo
data16
jb
insb
imul
inc
imul
arpl
add
gs
insl
push
popa
jne
gs
popa
arpl
aam
add
imul
popa
insl
push
jb
outsb
je
imul
insl
push
jb
arpl
jae
popa
insb
insb
add
gs
insl
push
jb
arpl
jae
outsb
outsl
imul
dec
inc
push
imul
insb
imul
push
je
popa
insl
push
jne
arpl
push
je
popa
insl
push
gs
fs
imul
insl
push
gs
jae
es
je
outsb
outsw
xor
push
je
popa
insl
push
gs
jae
or
inc
add
je
outsb
outsw
add
gs
insl
push
gs
jae
xchg
out
inc
add
je
outsb
outsw
inc
js
push
je
popa
insl
push
gs
jae
rol
inc
add
push
je
popa
insl
push
gs
jae
call
insl
inc
outsl
outsl
je
jb
outsb
je
imul
popa
insl
push
gs
outsl
jbe
inc
jo
inc
gs
outsb
fs
arpl
push
je
popa
insl
push
gs
imul
jb
jo
inc
popa
arpl
ljmp
push
gs
gs
inc
arpl
jne
je
inc
jns
fs
gs
insl
popa
imul
push
gs
gs
inc
arpl
jne
je
inc
jns
insl
popa
imul
jae
insl
popa
imul
push
gs
gs
inc
insl
popa
imul
jae
gs
imul
outsl
outsb
inc
insl
popa
imul
push
gs
gs
inc
outsl
jb
outsl
je
outsb
push
popa
jae
ja
jb
inc
insl
popa
imul
push
gs
insl
gs
popa
arpl
in
add
imul
popa
insl
push
gs
gs
push
je
popa
insl
push
gs
add
gs
insl
push
gs
jo
inc
popa
arpl
loopne
add
push
je
popa
insl
push
gs
jo
push
gs
imul
popa
insl
push
gs
popa
arpl
out
add
insb
je
imul
jns
push
je
popa
insl
push
gs
popa
js
je
insb
insb
inc
outsl
jne
je
push
je
popa
insl
push
gs
outsl
je
imul
outsl
outsb
inc
popa
insb
insb
bound
imul
je
popa
insl
push
gs
jae
jb
push
je
popa
insl
push
gs
inc
jne
add
gs
insl
push
push
ja
inc
outsb
imul
popa
insl
push
push
ja
push
jae
jb
inc
push
imul
insb
imul
je
popa
insl
push
imul
ss
push
je
popa
insl
push
imul
add
gs
insl
push
je
jb
inc
outsb
imul
popa
insl
push
je
jb
inc
outsb
imul
je
popa
insl
push
je
jb
dec
outsl
popa
imul
mov
inc
add
insl
push
je
jb
push
popa
insb
imul
gs
popa
insb
jbe
inc
inc
dec
gs
push
je
popa
insl
push
je
jb
push
popa
insb
imul
jae
jb
inc
push
imul
je
popa
insl
push
je
jb
jne
add
gs
insl
push
je
je
xor
push
je
popa
insl
push
je
je
push
je
popa
insl
push
je
jo
outsl
popa
imul
iret
in
inc
add
insl
push
jne
jae
jb
bound
push
je
popa
insl
push
gs
insb
inc
imul
gs
insl
push
gs
insb
inc
imul
insl
push
outsb
imul
add
gs
insl
push
outsb
insl
outsl
jne
je
jo
inc
imul
insl
add
gs
insl
push
outsb
insl
outsl
jne
je
imul
insl
add
gs
insl
push
outsb
jae
bound
jb
bound
push
je
popa
insl
push
jo
popa
je
inc
arpl
jne
je
imul
outsw
add
gs
insl
push
jo
popa
je
push
jne
jae
jb
jo
imul
imul
add
gs
insl
push
gs
data16
insl
popa
imul
jae
push
je
popa
insl
push
gs
data16
popa
jae
ja
jb
add
gs
insl
push
popa
imul
push
gs
fs
outsl
dec
popa
jne
arpl
fadds
popa
insl
push
popa
imul
push
gs
jne
arpl
add
gs
insl
push
popa
imul
outsl
jne
arpl
add
gs
insl
push
popa
jae
insb
outsl
bound
imul
insb
gs
add
gs
insl
push
gs
imul
imul
popa
insb
jbe
inc
inc
dec
gs
push
je
popa
insl
push
jb
je
inc
imul
insl
push
jb
je
dec
imul
inc
jb
insl
inc
jae
gs
add
gs
insl
push
jb
je
dec
imul
push
gs
outsl
insl
insl
outsb
je
push
je
popa
insl
push
jb
je
dec
imul
push
jae
outsb
addr16
js
gs
imul
add
gs
insl
push
jb
je
dec
imul
push
jae
outsb
addr16
js
gs
imul
push
imul
dec
add
gs
insl
push
jb
je
dec
imul
push
imul
add
outsb
xor
dec
imul
dec
outsb
imul
add
inc
pop
add
add
add
add
add
cmp
pop
dec
add
add
adc
add
add
add
mov
add
mov
add
sub
add
in
and
add
adc
add
adc
add
adc
add
adc
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
or
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
sbb
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
and
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
sub
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
xor
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
cmp
adc
add
adc
add
add
inc
adc
add
add
inc
adc
add
add
add
inc
adc
add
add
dec
adc
add
add
dec
adc
add
add
dec
adc
add
add
dec
adc
add
add
push
adc
add
add
push
adc
add
add
push
adc
add
add
push
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pusha
adc
add
add
bound
add
arpl
add
adc
add
add
data16
add
add
push
adc
add
add
imul
add
add
add
outsb
adc
add
add
jo
add
jno
add
jb
add
jae
add
je
add
jne
add
jbe
add
ja
add
js
add
jns
add
jp
add
jnp
add
jl
add
jge
add
jle
add
jg
add
adcb
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
sub
add
push
daa
add
js
add
xchg
add
scas
daa
add
lret
daa
add
frstor
add
hlt
daa
add
or
add
sub
add
inc
sub
add
add
insb
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
aaa
sub
add
add
push
sub
add
add
inc
add
add
in
sub
add
sub
add
sub
add
add
push
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sbb
sub
add
add
add
jg
add
xchg
sub
add
add
lret
add
sub
add
sub
add
sub
add
add
pusha
sub
add
add
xchg
sub
add
sub
add
sub
add
sub
add
push
sub
add
subl
add
into
sub
add
pop
add
sub
add
inc
add
popa
add
jp
add
xchg
add
cwtl
add
test
add
mov
add
enter
in
add
push
das
add
push
das
add
xor
add
dec
das
add
outsb
das
add
test
add
sahf
das
add
scas
das
add
les
add
das
add
repz
add
add
add
sbb
add
sub
add
inc
xor
add
add
data16
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xorl
add
mov
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
bound
add
jnp
add
xchg
xor
add
xor
add
xor
add
add
push
xor
add
add
xor
add
add
lea
add
stos
xor
add
xor
add
xor
add
xor
add
xor
add
add
aas
xor
add
xor
add
add
pop
xor
add
add
mov
add
xor
add
xor
add
xor
add
xor
add
add
adc
add
inc
xor
add
jno
add
xorb
add
xor
add
out
xor
add
and
add
push
add
je
add
xorl
add
add
loop
add
adc
add
cs
add
inc
aaa
add
pop
add
add
add
add
add
add
arpl
pusha
add
add
add
pop
add
jno
pop
add
add
add
add
insl
add
sbb
pop
add
add
lahf
add
add
push
add
add
add
add
add
inc
add
add
scas
add
test
add
add
add
add
add
or
cmp
sbb
xor
sbb
add
add
add
add
add
add
in
inc
add
xor
lods
add
add
jns
sub
cmp
cmp
add
outsb
add
add
add
add
add
add
add
dec
add
add
add
add
add
cmp
ja
cmp
scas
add
add
add
popf
add
add
add
add
add
add
add
add
add
add
add
add
push
add
js
sbb
sbb
jo
xchg
add
add
dec
add
push
je
popa
insl
cs
insb
add
gs
je
dec
outsb
je
jb
popa
arpl
dec
outsb
je
jb
popa
insb
push
je
popa
insl
dec
jne
inc
insb
imul
outsb
outsb
arpl
push
outsl
inc
outsb
imul
gs
popa
insb
push
je
popa
insl
push
push
push
push
ja
inc
outsb
imul
gs
insl
inc
bound
je
popa
insb
insb
add
gs
insl
inc
bound
je
outsb
outsl
imul
dec
inc
push
imul
insb
imul
push
je
popa
insl
inc
arpl
jne
jae
jb
jo
imul
imul
popa
insl
inc
insb
outsl
arpl
outsb
addr16
popa
insb
insb
add
gs
insl
inc
push
inc
arpl
jne
je
popa
insl
add
gs
insl
inc
push
inc
insl
popa
imul
jae
push
je
popa
insl
inc
push
inc
outsl
jb
outsl
je
outsb
push
popa
jae
ja
jb
add
gs
insl
inc
push
dec
data16
imul
jne
add
gs
insl
inc
push
push
popa
jae
ja
jb
add
gs
insl
inc
push
push
gs
outsl
outsb
popa
insb
push
inc
add
gs
insl
inc
push
jo
dec
ja
gs
push
je
popa
insl
inc
insb
gs
outsb
jne
add
gs
insl
inc
insb
gs
jb
jb
outsl
jb
push
je
popa
insl
inc
insb
outsl
jae
inc
imul
insl
inc
jb
popa
je
inc
arpl
jne
je
push
je
popa
insl
inc
jb
popa
je
inc
popa
arpl
xlat
inc
add
fs
add
gs
insl
inc
jb
popa
je
dec
outsl
addr16
outsl
outsb
je
js
add
gs
insl
inc
arpl
jo
inc
popa
je
inc
outsl
jb
push
arpl
xlat
inc
add
gs
insl
inc
gs
addr16
popa
arpl
lret
inc
add
insl
inc
gs
gs
inc
arpl
jne
je
push
je
popa
insl
inc
outsb
arpl
jo
inc
popa
je
inc
outsl
jb
push
arpl
rolb
je
popa
insl
inc
outsb
jne
gs
je
inc
jo
add
gs
insl
inc
outsb
jne
gs
je
inc
jo
inc
gs
outsb
fs
arpl
push
je
popa
insl
inc
outsb
jne
gs
je
inc
jo
dec
arpl
add
gs
insl
inc
outsb
jne
gs
je
inc
jo
dec
popa
jne
arpl
in
add
add
gs
insl
inc
outsb
jne
gs
je
inc
jo
push
gs
imul
popa
insl
inc
outsb
jne
gs
je
push
jne
jae
jb
jo
imul
popa
insl
inc
outsb
jne
gs
je
push
jne
jae
jb
jo
imul
outsl
jne
je
push
je
popa
insl
inc
outsb
jne
gs
je
push
jne
jae
jb
jo
imul
outsl
jne
je
jne
insb
imul
je
popa
insl
inc
imul
push
je
popa
insl
inc
imul
add
gs
insl
inc
imul
je
xor
push
je
popa
insl
inc
imul
je
push
je
popa
insl
inc
imul
ss
push
je
popa
insl
inc
imul
add
gs
insl
inc
imul
gs
inc
gs
jb
outsl
jb
je
imul
popa
insl
inc
imul
gs
dec
je
jb
je
push
gs
gs
push
je
popa
insl
inc
imul
gs
dec
jne
push
gs
gs
add
gs
insl
inc
insb
jne
push
add
gs
insl
inc
insb
jne
push
add
gs
insl
inc
outsl
jb
gs
gs
insb
dec
add
gs
insl
inc
outsl
jb
gs
insb
insb
dec
imul
gs
insl
inc
outsb
gs
je
push
jne
addr16
gs
arpl
jne
je
popa
insl
gs
push
je
popa
insl
inc
gs
arpl
jne
je
je
je
jae
push
je
popa
insl
inc
gs
jo
inc
popa
arpl
fiaddl
add
gs
insl
inc
gs
jo
inc
dec
inc
push
je
je
jae
push
je
popa
insl
inc
gs
jo
inc
gs
outsb
fs
arpl
jae
push
je
popa
insl
inc
gs
jo
inc
imul
insl
inc
gs
jo
dec
fs
push
je
popa
insl
inc
gs
jo
push
jne
arpl
loope
add
outsb
je
jns
push
je
popa
insl
inc
gs
jo
push
je
je
add
gs
insl
inc
gs
jo
push
jo
popa
je
push
je
je
add
gs
insl
inc
gs
jo
push
jae
jb
imul
outsb
outsw
add
gs
insl
inc
gs
jo
push
jae
jb
imul
arpl
add
gs
insl
inc
gs
popa
arpl
loop
add
jo
imul
push
je
popa
insl
inc
gs
popa
arpl
fadds
popa
jne
je
imul
jns
push
je
popa
insl
inc
gs
popa
arpl
jecxz
add
popa
je
push
loopne
add
inc
gs
popa
arpl
int3
inc
add
outsb
je
jb
insl
outsb
je
je
outsl
outsb
add
gs
insl
inc
gs
outsl
outsb
je
outsb
je
gs
gs
outsb
outsw
add
gs
insl
inc
gs
jne
jb
outsb
je
insl
popa
imul
jae
push
je
popa
insl
inc
gs
outsb
arpl
jo
gs
gs
popa
insb
jbe
inc
inc
dec
gs
push
je
popa
insl
inc
gs
outsb
arpl
jo
gs
jae
jb
inc
push
imul
je
popa
insl
inc
gs
outsb
arpl
jo
imul
outsl
push
outsb
fs
outsl
dec
gs
insb
imul
gs
insl
inc
gs
outsl
arpl
inc
insb
imul
jae
outsl
outsb
add
gs
insl
inc
gs
outsl
arpl
inc
imul
push
je
popa
insl
inc
gs
jne
inc
arpl
jne
je
push
imul
inc
fs
jae
add
gs
insl
inc
gs
data16
imul
jne
add
gs
insl
inc
gs
jo
outsb
jae
jb
jb
add
gs
insl
inc
gs
jne
jae
jb
jo
imul
outsb
fs
outsb
outsw
add
gs
insl
inc
gs
jne
jae
jb
jo
imul
push
je
popa
insl
inc
gs
jne
jae
jb
jo
imul
push
outsl
jne
je
jns
push
je
popa
insl
inc
gs
jne
jae
jb
jo
imul
imul
popa
insl
inc
gs
jne
jae
jb
jo
imul
jae
push
je
popa
insl
inc
gs
outsl
je
insb
push
jo
popa
je
push
je
je
add
gs
insl
inc
gs
jae
jb
push
je
popa
insl
inc
gs
jae
jb
jns
add
gs
insl
inc
gs
gs
imul
popa
insl
inc
gs
add
gs
insl
dec
imul
jne
arpl
gs
gs
insl
dec
outsb
imul
push
jae
jb
inc
push
imul
insb
imul
je
popa
insl
dec
outsb
jae
jb
inc
jo
inc
gs
outsb
fs
arpl
push
je
popa
insl
dec
jae
arpl
jne
je
popa
insl
gs
outsb
push
jae
add
gs
insl
dec
jae
jo
push
jne
jae
jb
bound
add
gs
insl
dec
jae
popa
arpl
iret
inc
add
addr16
outsb
popa
bound
add
gs
insl
dec
jae
imul
imul
jbe
imul
je
popa
insl
dec
jae
imul
fs
jns
jo
add
gs
insl
dec
jae
imul
fs
jns
popa
arpl
loopne
add
insl
dec
jae
outsl
addr16
outsb
add
gs
insl
dec
jae
arpl
gs
outsl
insl
jo
je
jb
push
je
popa
insl
dec
jae
jne
jae
jb
bound
add
gs
insl
dec
jae
jae
outsb
addr16
imul
je
outsb
je
gs
gs
push
je
popa
insl
dec
popa
jne
arpl
out
add
gs
insl
dec
outsl
popa
fs
popa
arpl
jecxz
add
imul
insl
dec
outsl
popa
fs
imul
add
gs
insl
dec
outsl
popa
fs
imul
push
gs
insl
dec
outsl
add
gs
insl
dec
outsl
addr16
gs
jne
arpl
outsl
popa
fs
imul
inc
add
insl
dec
outsl
addr16
gs
jne
arpl
outsl
popa
fs
je
jb
gs
gs
insl
dec
outsl
imul
insl
dec
outsl
outsl
jne
add
gs
insl
dec
imul
dec
outsb
imul
dec
outsl
jne
je
jo
inc
imul
insl
add
gs
insl
dec
outsl
jne
je
imul
insl
add
gs
insl
dec
outsl
jbe
inc
jo
add
gs
insl
dec
jne
inc
jo
jae
jne
outsb
imul
popa
insl
dec
jo
outsb
inc
imul
gs
insl
dec
jo
outsb
inc
imul
insl
dec
jo
outsb
inc
imul
gs
insl
dec
jo
outsb
push
insl
jo
imul
insl
dec
jo
imul
gs
outsb
push
jo
data16
jb
insb
imul
inc
imul
arpl
add
gs
insl
push
popa
jne
gs
popa
arpl
fiaddl
insb
outsl
popa
imul
popa
insl
push
jb
outsb
je
imul
insl
push
jb
arpl
jae
popa
insb
insb
add
gs
insl
push
jb
arpl
jae
outsb
outsl
imul
dec
inc
push
imul
insb
imul
push
je
popa
insl
push
jne
arpl
push
je
popa
insl
push
gs
fs
imul
insl
push
gs
jae
test
inc
add
je
outsb
outsw
xor
push
je
popa
insl
push
gs
jae
outsb
fiadds
jne
je
outsb
outsw
add
gs
insl
push
gs
jae
xchg
inc
add
je
outsb
outsw
inc
js
push
je
popa
insl
push
gs
jae
into
jecxz
add
push
je
popa
insl
push
gs
jae
or
inc
add
insl
inc
outsl
outsl
je
jb
outsb
je
imul
popa
insl
push
gs
outsl
jbe
inc
jo
inc
gs
outsb
fs
arpl
push
je
popa
insl
push
gs
imul
jb
jo
inc
popa
arpl
xlat
inc
add
insl
push
gs
gs
inc
arpl
jne
je
inc
jns
fs
gs
insl
popa
imul
push
gs
gs
inc
arpl
jne
je
inc
jns
insl
popa
imul
jae
insl
popa
imul
push
gs
gs
inc
insl
popa
imul
jae
gs
imul
outsl
outsb
inc
insl
popa
imul
push
gs
gs
inc
outsl
jb
outsl
je
outsb
push
popa
jae
ja
jb
inc
insl
popa
imul
push
gs
insl
gs
popa
arpl
roll
insb
outsl
popa
imul
popa
insl
push
gs
gs
push
je
popa
insl
push
gs
add
gs
insl
push
gs
jo
inc
popa
arpl
out
inc
add
push
je
popa
insl
push
gs
jo
push
gs
imul
popa
insl
push
gs
popa
arpl
ljmp
inc
imul
jns
push
je
popa
insl
push
gs
popa
js
je
insb
insb
inc
outsl
jne
je
push
je
popa
insl
push
gs
outsl
je
imul
outsl
outsb
inc
popa
insb
insb
bound
imul
je
popa
insl
push
gs
jae
jb
push
je
popa
insl
push
gs
inc
jne
add
gs
insl
push
push
ja
inc
outsb
imul
popa
insl
push
push
ja
push
jae
jb
inc
push
imul
insb
imul
je
popa
insl
push
imul
ss
push
je
popa
insl
push
imul
add
gs
insl
push
je
jb
inc
outsb
imul
popa
insl
push
je
jb
inc
outsb
imul
je
popa
insl
push
je
jb
dec
outsl
popa
imul
dec
fiadds
gs
insl
push
je
jb
push
popa
insb
imul
gs
popa
insb
jbe
inc
inc
dec
gs
push
je
popa
insl
push
je
jb
push
popa
insb
imul
jae
jb
inc
push
imul
je
popa
insl
push
je
jb
jne
add
gs
insl
push
je
je
xor
push
je
popa
insl
push
je
je
push
je
popa
insl
push
je
jo
outsl
popa
imul
mov
inc
add
insl
push
jne
jae
jb
bound
push
je
popa
insl
push
gs
insb
inc
imul
gs
insl
push
gs
insb
inc
imul
insl
push
outsb
imul
add
gs
insl
push
outsb
insl
outsl
jne
je
jo
inc
imul
insl
add
gs
insl
push
outsb
insl
outsl
jne
je
imul
insl
add
gs
insl
push
outsb
jae
bound
jb
bound
push
je
popa
insl
push
jo
popa
je
inc
arpl
jne
je
imul
outsw
add
gs
insl
push
jo
popa
je
push
jne
jae
jb
jo
imul
imul
add
gs
insl
push
gs
data16
insl
popa
imul
jae
push
je
popa
insl
push
gs
data16
popa
jae
ja
jb
add
gs
insl
push
popa
imul
push
gs
fs
outsl
dec
popa
jne
arpl
fldl
popa
insl
push
popa
imul
push
gs
jne
arpl
add
gs
insl
push
popa
imul
outsl
jne
arpl
add
gs
insl
push
popa
jae
insb
outsl
bound
imul
insb
gs
add
gs
insl
push
gs
imul
imul
popa
insb
jbe
inc
inc
dec
gs
push
je
popa
insl
push
jb
je
inc
imul
insl
push
jb
je
dec
imul
inc
jb
insl
inc
jae
gs
add
gs
insl
push
jb
je
dec
imul
push
gs
outsl
insl
insl
outsb
je
push
je
popa
insl
push
jb
je
dec
imul
push
jae
outsb
addr16
js
gs
imul
add
gs
insl
push
jb
je
dec
imul
push
jae
outsb
addr16
js
gs
imul
push
imul
dec
add
gs
insl
push
jb
je
dec
imul
push
imul
add
outsb
xor
dec
imul
dec
outsb
imul
add
inc
pop
add
add
add
add
add
cmp
pop
dec
add
add
adc
add
add
add
mov
add
mov
add
sub
add
in
and
add
adc
add
adc
add
adc
add
adc
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
or
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
sbb
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
and
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
sub
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
xor
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
cmp
adc
add
adc
add
add
inc
adc
add
add
inc
adc
add
add
add
inc
adc
add
add
dec
adc
add
add
dec
adc
add
add
dec
adc
add
add
dec
adc
add
add
push
adc
add
add
push
adc
add
add
push
adc
add
add
push
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pusha
adc
add
add
bound
add
arpl
add
adc
add
add
data16
add
add
push
adc
add
add
imul
add
add
add
outsb
adc
add
add
jo
add
jno
add
jb
add
jae
add
je
add
jne
add
jbe
add
ja
add
js
add
jns
add
jp
add
jnp
add
jl
add
jge
add
jle
add
jg
add
adcb
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
sub
add
push
daa
add
js
add
xchg
add
scas
daa
add
lret
daa
add
frstor
add
hlt
daa
add
or
add
sub
add
inc
sub
add
add
insb
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
aaa
sub
add
add
push
sub
add
bswap
inc
add
add
in
sub
add
sub
add
sub
add
add
push
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sbb
sub
add
add
add
jg
add
xchg
sub
add
add
lret
add
sub
add
sub
add
sub
add
add
pusha
sub
add
add
xchg
sub
add
sub
add
sub
add
sub
add
push
sub
add
subl
add
into
sub
add
pop
add
sub
add
inc
add
popa
add
jp
add
xchg
add
cwtl
add
test
add
mov
add
enter
in
add
push
das
add
push
das
add
xor
add
dec
das
add
outsb
das
add
test
add
sahf
das
add
scas
das
add
les
add
das
add
repz
add
add
add
sbb
add
sub
add
inc
xor
add
add
data16
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xorl
add
mov
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
bound
add
jnp
add
xchg
xor
add
xor
add
xor
add
add
push
xor
add
add
xor
add
add
lea
add
stos
xor
add
xor
add
xor
add
xor
add
xor
add
add
aas
xor
add
xor
add
add
pop
xor
add
add
mov
add
xor
add
xor
add
xor
add
xor
add
add
adc
add
inc
xor
add
jno
add
xorb
add
xor
add
out
xor
add
and
add
push
add
je
add
xorl
add
add
loop
add
adc
add
cs
add
inc
aaa
add
mov
add
add
add
push
add
add
jae
mov
dec
add
sub
test
outsb
add
add
dec
add
jl
popa
add
add
add
add
add
add
add
add
add
push
add
jnp
cmp
mov
add
adc
cmp
add
inc
add
add
jne
insb
add
pop
add
add
add
js
jno
pop
add
add
add
add
add
add
add
add
add
add
verr
inc
add
addb
add
add
add
add
cmpsl
add
scas
add
add
lahf
add
add
add
add
dec
add
add
add
inc
add
add
add
cmp
add
add
add
push
pop
add
add
add
pop
add
xor
dec
add
add
add
add
add
add
add
add
sbb
stos
add
xchg
add
add
push
je
popa
insl
cs
insb
add
gs
je
dec
outsb
je
jb
popa
arpl
dec
outsb
je
jb
popa
insb
push
je
popa
insl
dec
jne
inc
insb
imul
outsb
outsb
arpl
push
outsl
inc
outsb
imul
gs
popa
insb
push
je
popa
insl
push
push
push
push
ja
inc
outsb
imul
gs
insl
inc
bound
je
popa
insb
insb
add
gs
insl
inc
bound
je
outsb
outsl
imul
dec
inc
push
imul
insb
imul
push
je
popa
insl
inc
arpl
jne
jae
jb
jo
imul
imul
popa
insl
inc
insb
outsl
arpl
outsb
addr16
popa
insb
insb
add
gs
insl
inc
push
inc
arpl
jne
je
popa
insl
add
gs
insl
inc
push
inc
insl
popa
imul
jae
push
je
popa
insl
inc
push
inc
outsl
jb
outsl
je
outsb
push
popa
jae
ja
jb
add
gs
insl
inc
push
dec
data16
imul
jne
add
gs
insl
inc
push
push
popa
jae
ja
jb
add
gs
insl
inc
push
push
gs
outsl
outsb
popa
insb
push
inc
add
gs
insl
inc
push
jo
dec
ja
gs
push
je
popa
insl
inc
insb
gs
outsb
jne
add
gs
insl
inc
insb
gs
jb
jb
outsl
jb
push
je
popa
insl
inc
insb
outsl
jae
inc
imul
insl
inc
jb
popa
je
inc
arpl
jne
je
push
je
popa
insl
inc
jb
popa
je
inc
popa
arpl
aad
add
fs
add
gs
insl
inc
jb
popa
je
dec
outsl
addr16
outsl
outsb
je
js
add
gs
insl
inc
arpl
jo
inc
popa
je
inc
outsl
jb
push
arpl
loope
add
gs
insl
inc
gs
addr16
popa
arpl
inc
add
insl
inc
gs
gs
inc
arpl
jne
je
push
je
popa
insl
inc
outsb
arpl
jo
inc
popa
je
inc
outsl
jb
push
arpl
int
add
gs
insl
inc
outsb
jne
gs
je
inc
jo
add
gs
insl
inc
outsb
jne
gs
je
inc
jo
inc
gs
outsb
fs
arpl
push
je
popa
insl
inc
outsb
jne
gs
je
inc
jo
dec
arpl
add
gs
insl
inc
outsb
jne
gs
je
inc
jo
dec
popa
jne
arpl
jmp
add
add
gs
insl
inc
outsb
jne
gs
je
inc
jo
push
gs
imul
popa
insl
inc
outsb
jne
gs
je
push
jne
jae
jb
jo
imul
popa
insl
inc
outsb
jne
gs
je
push
jne
jae
jb
jo
imul
outsl
jne
je
push
je
popa
insl
inc
outsb
jne
gs
je
push
jne
jae
jb
jo
imul
outsl
jne
je
jne
insb
imul
je
popa
insl
inc
imul
push
je
popa
insl
inc
imul
add
gs
insl
inc
imul
je
xor
push
je
popa
insl
inc
imul
je
push
je
popa
insl
inc
imul
ss
push
je
popa
insl
inc
imul
add
gs
insl
inc
imul
gs
inc
gs
jb
outsl
jb
je
imul
popa
insl
inc
imul
gs
dec
je
jb
je
push
gs
gs
push
je
popa
insl
inc
imul
gs
dec
jne
push
gs
gs
add
gs
insl
inc
insb
jne
push
add
gs
insl
inc
insb
jne
push
add
gs
insl
inc
outsl
jb
gs
gs
insb
dec
add
gs
insl
inc
outsl
jb
gs
insb
insb
dec
imul
gs
insl
inc
outsb
gs
je
push
jne
addr16
gs
arpl
jne
je
popa
insl
gs
push
je
popa
insl
inc
gs
arpl
jne
je
je
je
jae
push
je
popa
insl
inc
gs
jo
inc
popa
arpl
call
push
je
popa
insl
inc
gs
jo
inc
dec
inc
push
je
je
jae
push
je
popa
insl
inc
gs
jo
inc
gs
outsb
fs
arpl
jae
push
je
popa
insl
inc
gs
jo
inc
imul
insl
inc
gs
jo
dec
fs
push
je
popa
insl
inc
gs
jo
push
jne
arpl
rolb
jne
je
jns
push
je
popa
insl
inc
gs
jo
push
je
je
add
gs
insl
inc
gs
jo
push
jo
popa
je
push
je
je
add
gs
insl
inc
gs
jo
push
jae
jb
imul
outsb
outsw
add
gs
insl
inc
gs
jo
push
jae
jb
imul
arpl
add
gs
insl
inc
gs
popa
arpl
ljmp
imul
push
je
popa
insl
inc
gs
popa
arpl
in
inc
add
insb
je
imul
jns
push
je
popa
insl
inc
gs
popa
arpl
enter
push
popa
je
push
lds
popa
insl
inc
gs
popa
arpl
movl
inc
jb
insl
outsb
je
je
outsl
outsb
add
gs
insl
inc
gs
outsl
outsb
je
outsb
je
gs
gs
outsb
outsw
add
gs
insl
inc
gs
jne
jb
outsb
je
insl
popa
imul
jae
push
je
popa
insl
inc
gs
outsb
arpl
jo
gs
gs
popa
insb
jbe
inc
inc
dec
gs
push
je
popa
insl
inc
gs
outsb
arpl
jo
gs
jae
jb
inc
push
imul
je
popa
insl
inc
gs
outsb
arpl
jo
imul
outsl
push
outsb
fs
outsl
dec
gs
insb
imul
gs
insl
inc
gs
outsl
arpl
inc
insb
imul
jae
outsl
outsb
add
gs
insl
inc
gs
outsl
arpl
inc
imul
push
je
popa
insl
inc
gs
jne
inc
arpl
jne
je
push
imul
inc
fs
jae
add
gs
insl
inc
gs
data16
imul
jne
add
gs
insl
inc
gs
jo
outsb
jae
jb
jb
add
gs
insl
inc
gs
jne
jae
jb
jo
imul
outsb
fs
outsb
outsw
add
gs
insl
inc
gs
jne
jae
jb
jo
imul
push
je
popa
insl
inc
gs
jne
jae
jb
jo
imul
push
outsl
jne
je
jns
push
je
popa
insl
inc
gs
jne
jae
jb
jo
imul
imul
popa
insl
inc
gs
jne
jae
jb
jo
imul
jae
push
je
popa
insl
inc
gs
outsl
je
insb
push
jo
popa
je
push
je
je
add
gs
insl
inc
gs
jae
jb
push
je
popa
insl
inc
gs
jae
jb
jns
add
gs
insl
inc
gs
gs
imul
popa
insl
inc
gs
add
gs
insl
dec
imul
jne
arpl
gs
gs
insl
dec
outsb
imul
push
jae
jb
inc
push
imul
insb
imul
je
popa
insl
dec
outsb
jae
jb
inc
jo
inc
gs
outsb
fs
arpl
push
je
popa
insl
dec
jae
arpl
jne
je
popa
insl
gs
outsb
push
jae
add
gs
insl
dec
jae
jo
push
jne
jae
jb
bound
add
gs
insl
dec
jae
popa
arpl
ljmp
inc
outsb
popa
bound
add
gs
insl
dec
jae
imul
imul
jbe
imul
je
popa
insl
dec
jae
imul
fs
jns
jo
add
gs
insl
dec
jae
imul
fs
jns
popa
arpl
into
inc
add
insl
dec
jae
outsl
addr16
outsb
add
gs
insl
dec
jae
arpl
gs
outsl
insl
jo
je
jb
push
je
popa
insl
dec
jae
jne
jae
jb
bound
add
gs
insl
dec
jae
jae
outsb
addr16
imul
je
outsb
je
gs
gs
push
je
popa
insl
dec
popa
jne
arpl
faddl
push
je
popa
insl
dec
outsl
popa
fs
popa
arpl
loope
add
imul
insl
dec
outsl
popa
fs
imul
add
gs
insl
dec
outsl
popa
fs
imul
push
gs
insl
dec
outsl
add
gs
insl
dec
outsl
addr16
gs
jne
arpl
outsl
popa
fs
imul
inc
add
insl
dec
outsl
addr16
gs
jne
arpl
outsl
popa
fs
je
jb
gs
gs
insl
dec
outsl
imul
insl
dec
outsl
outsl
jne
add
gs
insl
dec
imul
dec
outsb
imul
dec
outsl
jne
je
jo
inc
imul
insl
add
gs
insl
dec
outsl
jne
je
imul
insl
add
gs
insl
dec
outsl
jbe
inc
jo
add
gs
insl
dec
jne
inc
jo
jae
jne
outsb
imul
popa
insl
dec
jo
outsb
inc
imul
gs
insl
dec
jo
outsb
inc
imul
insl
dec
jo
outsb
inc
imul
gs
insl
dec
jo
outsb
push
insl
jo
imul
insl
dec
jo
imul
gs
outsb
push
jo
data16
jb
insb
imul
inc
imul
arpl
add
gs
insl
push
popa
jne
gs
popa
arpl
out
inc
add
imul
popa
insl
push
jb
outsb
je
imul
insl
push
jb
arpl
jae
popa
insb
insb
add
gs
insl
push
jb
arpl
jae
outsb
outsl
imul
dec
inc
push
imul
insb
imul
push
je
popa
insl
push
jne
arpl
push
je
popa
insl
push
gs
fs
imul
insl
push
gs
jae
sub
inc
add
je
outsb
outsw
xor
push
je
popa
insl
push
gs
jae
mov
inc
add
je
outsb
outsw
add
gs
insl
push
gs
jae
mov
outsb
je
outsb
outsw
inc
js
push
je
popa
insl
push
gs
jae
xchg
fadds
outsb
add
gs
insl
push
gs
jae
pop
rolb
jne
inc
outsl
outsl
je
jb
outsb
je
imul
popa
insl
push
gs
outsl
jbe
inc
jo
inc
gs
outsb
fs
arpl
push
je
popa
insl
push
gs
imul
jb
jo
inc
popa
arpl
loope
add
insl
push
gs
gs
inc
arpl
jne
je
inc
jns
fs
gs
insl
popa
imul
push
gs
gs
inc
arpl
jne
je
inc
jns
insl
popa
imul
jae
insl
popa
imul
push
gs
gs
inc
insl
popa
imul
jae
gs
imul
outsl
outsb
inc
insl
popa
imul
push
gs
gs
inc
outsl
jb
outsl
je
outsb
push
popa
jae
ja
jb
inc
insl
popa
imul
push
gs
insl
gs
popa
arpl
rolb
insb
outsl
popa
imul
popa
insl
push
gs
gs
push
je
popa
insl
push
gs
add
gs
insl
push
gs
jo
inc
popa
arpl
aad
add
push
je
popa
insl
push
gs
jo
push
gs
imul
popa
insl
push
gs
popa
arpl
roll
jne
je
imul
jns
push
je
popa
insl
push
gs
popa
js
je
insb
insb
inc
outsl
jne
je
push
je
popa
insl
push
gs
outsl
je
imul
outsl
outsb
inc
popa
insb
insb
bound
imul
je
popa
insl
push
gs
jae
jb
push
je
popa
insl
push
gs
inc
jne
add
gs
insl
push
push
ja
inc
outsb
imul
popa
insl
push
push
ja
push
jae
jb
inc
push
imul
insb
imul
je
popa
insl
push
imul
ss
push
je
popa
insl
push
imul
add
gs
insl
push
je
jb
inc
outsb
imul
popa
insl
push
je
jb
inc
outsb
imul
je
popa
insl
push
je
jb
dec
outsl
popa
imul
das
rolb
popa
insl
push
je
jb
push
popa
insb
imul
gs
popa
insb
jbe
inc
inc
dec
gs
push
je
popa
insl
push
je
jb
push
popa
insb
imul
jae
jb
inc
push
imul
je
popa
insl
push
je
jb
jne
add
gs
insl
push
je
je
xor
push
je
popa
insl
push
je
je
push
je
popa
insl
push
je
jo
outsl
popa
imul
flds
gs
insl
push
jne
jae
jb
bound
push
je
popa
insl
push
gs
insb
inc
imul
gs
insl
push
gs
insb
inc
imul
insl
push
outsb
imul
add
gs
insl
push
outsb
insl
outsl
jne
je
jo
inc
imul
insl
add
gs
insl
push
outsb
insl
outsl
jne
je
imul
insl
add
gs
insl
push
outsb
jae
bound
jb
bound
push
je
popa
insl
push
jo
popa
je
inc
arpl
jne
je
imul
outsw
add
gs
insl
push
jo
popa
je
push
jne
jae
jb
jo
imul
imul
add
gs
insl
push
gs
data16
insl
popa
imul
jae
push
je
popa
insl
push
gs
data16
popa
jae
ja
jb
add
gs
insl
push
popa
imul
push
gs
fs
outsl
dec
popa
jne
arpl
out
inc
add
push
popa
imul
push
gs
jne
arpl
add
gs
insl
push
popa
imul
outsl
jne
arpl
add
gs
insl
push
popa
jae
insb
outsl
bound
imul
insb
gs
add
gs
insl
push
gs
imul
imul
popa
insb
jbe
inc
inc
dec
gs
push
je
popa
insl
push
jb
je
inc
imul
insl
push
jb
je
dec
imul
inc
jb
insl
inc
jae
gs
add
gs
insl
push
jb
je
dec
imul
push
gs
outsl
insl
insl
outsb
je
push
je
popa
insl
push
jb
je
dec
imul
push
jae
outsb
addr16
js
gs
imul
add
gs
insl
push
jb
je
dec
imul
push
jae
outsb
addr16
js
gs
imul
push
imul
dec
add
gs
insl
push
jb
je
dec
imul
push
imul
add
outsb
xor
dec
imul
dec
outsb
imul
add
inc
pop
add
add
add
add
add
cmp
pop
dec
add
add
adc
add
add
add
mov
add
mov
add
sub
add
in
and
add
adc
add
adc
add
adc
add
adc
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
or
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
sbb
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
and
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
sub
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
xor
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
cmp
adc
add
adc
add
add
inc
adc
add
add
inc
adc
add
add
add
inc
adc
add
add
dec
adc
add
add
dec
adc
add
add
dec
adc
add
add
dec
adc
add
add
push
adc
add
add
push
adc
add
add
push
adc
add
add
push
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
pusha
adc
add
add
bound
add
arpl
add
adc
add
add
data16
add
add
push
adc
add
add
imul
add
add
add
outsb
adc
add
add
jo
add
jno
add
jb
add
jae
add
je
add
jne
add
jbe
add
ja
add
js
add
jns
add
jp
add
jnp
add
jl
add
jge
add
jle
add
jg
add
adcb
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
sub
add
push
daa
add
js
add
xchg
add
scas
daa
add
lret
daa
add
frstor
add
hlt
daa
add
or
add
sub
add
inc
sub
add
add
insb
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
aaa
sub
add
add
push
sub
add
or
inc
add
add
in
sub
add
sub
add
sub
add
add
push
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sbb
sub
add
add
add
jg
add
xchg
sub
add
add
lret
add
sub
add
sub
add
sub
add
add
pusha
sub
add
add
xchg
sub
add
sub
add
sub
add
sub
add
push
sub
add
subl
add
into
sub
add
pop
add
sub
add
inc
add
popa
add
jp
add
xchg
add
cwtl
add
test
add
mov
add
enter
in
add
push
das
add
push
das
add
xor
add
dec
das
add
outsb
das
add
test
add
sahf
das
add
scas
das
add
les
add
das
add
repz
add
add
add
sbb
add
sub
add
inc
xor
add
add
data16
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xorl
add
mov
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
bound
add
jnp
add
xchg
xor
add
xor
add
xor
add
add
push
xor
add
add
xor
add
add
lea
add
stos
xor
add
xor
add
xor
add
xor
add
xor
add
add
aas
xor
add
xor
add
add
pop
xor
add
add
mov
add
xor
add
xor
add
xor
add
xor
add
add
adc
add
inc
xor
add
jno
add
xorb
add
xor
add
out
xor
add
and
add
push
add
je
add
xorl
add
add
loop
add
adc
add
cs
add
inc
aaa
add
sbb
dec
add
pop
add
add
add
add
add
jg
pop
add
add
add
add
add
jne
inc
add
push
add
add
cmp
test
dec
add
add
add
add
cwtl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
jge
scas
add
cmpsb
add
add
dec
add
add
xchg
add
fildl
add
add
add
inc
add
add
jbe
movsl
add
add
add
pop
add
cmpsl
add
add
and
stos
add
add
add
add
add
push
add
add
cmp
jo
mov
sub
add
cmp
xchg
add
add
add
daa
add
add
add
push
add
add
sbb
pop
add
add
add
add
add
add
popa
insl
cs
insb
add
gs
je
dec
outsb
je
jb
popa
arpl
dec
outsb
je
jb
popa
insb
push
je
popa
insl
dec
jne
inc
insb
imul
outsb
outsb
arpl
push
outsl
inc
outsb
imul
gs
popa
insb
push
je
popa
insl
push
push
push
push
ja
inc
outsb
imul
gs
insl
inc
bound
je
popa
insb
insb
add
gs
insl
inc
bound
je
outsb
outsl
imul
dec
inc
push
imul
insb
imul
push
je
popa
insl
inc
arpl
jne
jae
jb
jo
imul
imul
popa
insl
inc
insb
outsl
arpl
outsb
addr16
popa
insb
insb
add
gs
insl
inc
push
inc
arpl
jne
je
popa
insl
add
gs
insl
inc
push
inc
insl
popa
imul
jae
push
je
popa
insl
inc
push
inc
outsl
jb
outsl
je
outsb
push
popa
jae
ja
jb
add
gs
insl
inc
push
dec
data16
imul
jne
add
gs
insl
inc
push
push
popa
jae
ja
jb
add
gs
insl
inc
push
push
gs
outsl
outsb
popa
insb
push
inc
add
gs
insl
inc
push
jo
dec
ja
gs
push
je
popa
insl
inc
insb
gs
outsb
jne
add
gs
insl
inc
insb
gs
jb
jb
outsl
jb
push
je
popa
insl
inc
insb
outsl
jae
inc
imul
insl
inc
jb
popa
je
inc
arpl
jne
je
push
je
popa
insl
inc
jb
popa
je
inc
popa
arpl
les
insb
outsl
popa
fs
add
gs
insl
inc
jb
popa
je
dec
outsl
addr16
outsl
outsb
je
js
add
gs
insl
inc
arpl
jo
inc
popa
je
inc
outsl
jb
push
arpl
fildl
push
je
popa
insl
inc
gs
addr16
popa
arpl
filds
je
popa
insl
inc
gs
gs
inc
arpl
jne
je
push
je
popa
insl
inc
outsb
arpl
jo
inc
popa
je
inc
outsl
jb
push
arpl
movl
insl
inc
outsb
jne
gs
je
inc
jo
add
gs
insl
inc
outsb
jne
gs
je
inc
jo
inc
gs
outsb
fs
arpl
push
je
popa
insl
inc
outsb
jne
gs
je
inc
jo
dec
arpl
add
gs
insl
inc
outsb
jne
gs
je
inc
jo
dec
popa
jne
arpl
xlat
inc
add
add
gs
insl
inc
outsb
jne
gs
je
inc
jo
push
gs
imul
popa
insl
inc
outsb
jne
gs
je
push
jne
jae
jb
jo
imul
popa
insl
inc
outsb
jne
gs
je
push
jne
jae
jb
jo
imul
outsl
jne
je
push
je
popa
insl
inc
outsb
jne
gs
je
push
jne
jae
jb
jo
imul
outsl
jne
je
jne
insb
imul
je
popa
insl
inc
imul
push
je
popa
insl
inc
imul
add
gs
insl
inc
imul
je
xor
push
je
popa
insl
inc
imul
je
push
je
popa
insl
inc
imul
ss
push
je
popa
insl
inc
imul
add
gs
insl
inc
imul
gs
inc
gs
jb
outsl
jb
je
imul
popa
insl
inc
imul
gs
dec
je
jb
je
push
gs
gs
push
je
popa
insl
inc
imul
gs
dec
jne
push
gs
gs
add
gs
insl
inc
insb
jne
push
add
gs
insl
inc
insb
jne
push
add
gs
insl
inc
outsl
jb
gs
gs
insb
dec
add
gs
insl
inc
outsl
jb
gs
insb
insb
dec
imul
gs
insl
inc
outsb
gs
je
push
jne
addr16
gs
arpl
jne
je
popa
insl
gs
push
je
popa
insl
inc
gs
arpl
jne
je
je
je
jae
push
je
popa
insl
inc
gs
jo
inc
popa
arpl
rolb
add
gs
insl
inc
gs
jo
inc
dec
inc
push
je
je
jae
push
je
popa
insl
inc
gs
jo
inc
gs
outsb
fs
arpl
jae
push
je
popa
insl
inc
gs
jo
inc
imul
insl
inc
gs
jo
dec
fs
push
je
popa
insl
inc
gs
jo
push
jne
arpl
inc
add
outsb
je
jns
push
je
popa
insl
inc
gs
jo
push
je
je
add
gs
insl
inc
gs
jo
push
jo
popa
je
push
je
je
add
gs
insl
inc
gs
jo
push
jae
jb
imul
outsb
outsw
add
gs
insl
inc
gs
jo
push
jae
jb
imul
arpl
add
gs
insl
inc
gs
popa
arpl
inc
arpl
jo
je
inc
cmp
call
mov
incl
lods
cmc
add
add
int
fnsave
xor
cltd
test
add
incl
sar
jecxz
pop
push
incl
jmp
lds
mov
fdivl
movsb
mov
add
xchg
test
flds
clc
xchg
mov
mov
movsb
xchg
shr
cmpsl
rcrb
adcb
decl
add
cli
sahf
mov
clc
add
pop
add
cmpsl
push
test
cwtl
add
lea
mov
add
add
jne
fsubs
add
stos
add
incl
mov
stos
jne
add
bound
sti
xchg
xchg
add
add
lcall
shrl
push
mov
add
push
push
push
push
call
mov
add
mov
add
incl
mov
lahf
incl
cwtl
add
pop
in
add
jl
xchg
add
fwait
add
std
sbbl
add
lret
jecxz
add
lcall
jmp
mov
mov
xchg
in
mov
cmpsb
add
clc
in
add
add
add
add
add
lcall
inc
call
or
push
push
push
push
push
call
mov
icebp
scas
xchg
jbe
add
jle
fidivrl
mov
jmp
mov
jb
mov
scas
aad
lds
fiadds
pushl
sti
ja
add
pop
cltd
mov
lds
movsl
mov
jge
mov
mov
mov
sub
push
push
push
push
push
push
push
push
push
push
push
call
mov
push
push
mov
add
jl
mov
push
scas
mov
pushl
add
add
mov
add
jae
cltd
fadds
popf
mov
pop
mov
mov
flds
sbb
aad
push
push
mov
add
mov
add
xchg
mov
add
add
add
call
add
xor
add
push
push
push
push
push
push
push
push
push
call
rolb
cmpsb
mov
add
add
add
add
faddl
pushl
add
fcmove
fnstenv
shr
pusha
aad
cmpb
add
jmp
add
mov
add
call
pop
add
js
add
push
fmuls
call
push
call
push
push
push
push
push
call
jb
loope
bnd
pop
adcl
pushl
jne
jnp
incl
add
add
add
popa
aad
add
shlb
arpl
xchg
add
mov
mov
mov
ror
mov
lcall
test
add
gs
cmpsb
scas
incl
scas
xchg
mov
add
jne
aad
stos
imul
enter
incl
add
push
mov
sub
jmp
push
push
push
push
call
lock
pop
add
lcall
loop
lahf
pop
push
fldenv
ljmp
add
add
icebp
imul
jle
enter
jecxz
leave
mov
add
cmpb
cmpsl
add
lcall
decl
xchg
decl
sub
ret
mov
mov
push
push
push
push
call
imul
lahf
cmc
int3
jbe
clc
mov
add
bound
cmpsb
add
jmp
mov
add
add
popf
add
mov
jne
in
add
add
jo
cmc
jbe
lds
add
incl
pop
leave
scas
jle
test
push
add
cmc
pop
lock
ljmp
mov
sub
add
add
add
push
call
lret
addb
add
pop
xchg
jae
addl
cmc
int3
cld
add
mov
mov
call
call
gs
xlat
add
ljmp
decl
jecxz
add
add
fistpl
incl
call
push
incl
mov
push
test
add
jno
mov
sub
pushl
push
push
push
push
push
push
push
call
cld
shrb
mov
xchg
add
lret
loopne
incl
xchg
pushf
add
iret
add
incl
add
stc
push
xchg
js
add
mov
xlat
pop
test
pop
add
loop
pushl
add
call
movsb
fwait
aam
mov
add
addl
pushl
cmpsl
call
jp
fildll
lret
jge
incl
call
push
push
push
push
push
call
call
add
inc
mov
add
add
xchg
jae
mov
add
stc
jp
stos
add
jbe
fisubrl
add
test
pop
filds
add
add
add
add
out
add
ljmp
xchg
add
call
cld
testl
sub
mov
sub
push
push
add
lea
ror
shl
push
or
not
add
dec
not
rol
sub
xor
xor
pop
shr
dec
ror
pop
push
push
push
push
push
push
push
push
call
add
outsl
add
add
aad
add
jb
push
scas
ljmp
mov
jbe
add
add
pop
add
cld
fs
add
pop
mov
add
add
xchg
add
jns
add
add
add
add
mov
jae
incl
add
roll
insb
add
movsl
mov
xchg
popa
add
add
pushl
call
push
push
push
push
call
add
add
pushl
fcoml
movsw
mov
divb
mov
push
pop
divl
sahf
pop
cmpl
cmpsl
pop
lahf
jne
out
add
mov
fst
repnz
mov
jmp
int
fstl
add
add
add
push
int3
add
cmpsl
in
mov
sub
mov
push
push
call
out
sti
roll
mov
xchg
add
jb
pop
test
mov
add
addr16
inc
jb
add
movsl
inc
jl
jecxz
lods
add
mov
lret
pop
push
int
outsl
add
add
imul
mov
lret
cwtl
repnz
stos
mov
testb
add
arpl
jmp
mov
incl
mov
sub
movl
lea
push
push
push
push
push
push
push
push
call
in
add
add
incl
add
outsl
out
mov
mov
imul
mov
js
add
scas
jns
add
iret
movsl
add
push
xchg
icebp
xchg
add
incl
idiv
lcall
add
call
imul
sub
pushl
push
push
push
push
push
push
call
add
add
ret
iret
imul
add
add
cmc
popa
bound
sti
add
lcall
imul
add
lds
push
incl
std
xchg
add
add
test
xchg
add
add
dec
fisttpll
stos
in
push
imul
xchg
add
pushl
push
push
push
push
push
push
push
call
add
xchg
push
xchg
call
add
fmulp
add
xchg
addl
pop
xchg
scas
add
lock
outsl
scas
lret
pop
jns
xlat
add
pop
add
push
loop
imul
mov
fisttpll
jns
mov
pop
pop
add
add
cld
add
add
jmp
push
pop
pop
mov
add
incl
cmp
add
jne
push
push
push
push
push
push
push
push
call
add
jle
popa
icebp
add
lods
add
incl
jmp
add
pusha
mov
add
add
shr
lcall
mov
addl
call
push
pushf
add
cld
out
pop
mov
call
push
add
call
dec
mov
lock
pushl
call
push
push
lea
add
dec
push
and
add
shl
sub
pop
dec
add
pop
push
push
push
push
push
call
incl
add
outsl
shll
repnz
les
pop
pushl
nop
cmc
add
into
test
add
loop
add
into
lea
add
pop
gs
push
push
mov
call
rcrb
add
pop
data16
jmp
add
dec
lret
pop
int
std
outsl
pop
lret
xchg
incl
fildll
data16
add
add
incl
pushl
call
push
push
push
shl
push
or
inc
add
xor
sub
sub
shr
inc
pop
dec
add
add
pop
push
push
push
call
mov
add
incl
add
mov
add
pushf
call
mov
ljmp
test
cld
sti
imul
lods
mov
add
filds
push
mov
les
test
call
jb
mov
bound
add
dec
out
ret
incl
mov
add
faddl
mov
sub
push
push
push
push
push
push
push
push
push
push
call
add
pop
sbb
push
push
incl
push
add
icebp
scas
cmpsl
add
std
scas
jp
incl
incl
repnz
lcall
jbe
mov
sarl
imul
pushl
cmpsb
add
fiadds
add
scas
rorb
add
add
ljmp
push
push
push
push
push
push
push
call
lcall
bnd
addl
mov
fidivs
popf
add
in
jne
push
add
lds
add
jecxz
idiv
fmul
addr16
push
enterw
mov
js
add
add
push
add
push
call
add
mov
rclb
add
add
ljmp
add
mov
sub
call
mov
push
call
scas
add
call
pushf
sti
pop
jl
jns
incl
add
add
scas
ljmp
push
mov
stos
mov
add
jp
add
idivb
pushl
cltd
fadds
add
xchg
roll
roll
xchg
call
add
jge
add
loope
push
jmp
add
std
call
test
incl
push
push
push
push
push
push
push
call
mov
js
add
incl
leave
push
add
ja
pushl
les
add
lods
jmp
test
add
add
add
add
incl
js
add
lcall
loopne
incl
mov
jne
incl
add
nop
add
mov
sub
push
mov
add
push
push
push
push
push
push
push
push
push
call
jae
incl
sarl
call
incl
clc
add
dec
decl
add
add
out
push
xchg
jbe
cmpsb
push
add
mov
testl
xchg
repnz
incl
push
add
into
mov
jge
mov
fistpl
add
popl
movsl
mov
sub
add
add
push
push
push
push
push
push
push
push
push
call
push
add
in
add
mov
mov
sahf
add
movsl
mov
lcall
add
xchg
add
inc
jmp
add
out
add
aam
add
outsl
add
push
push
add
stos
incl
jns
cld
leave
mov
test
jmp
arpl
test
incl
push
lods
int3
rcl
mov
sub
mov
push
push
push
push
push
push
push
push
call
jp
push
pop
push
fsubrl
pushl
incl
add
add
out
jnp
push
mov
jp
jmp
cmpsl
enter
add
add
add
jmp
jp
add
jmp
arpl
aad
jno
out
mov
push
fidivs
add
call
add
add
mov
fdivr
incl
mov
clc
jnp
incl
out
and
push
push
push
push
push
call
push
cmpsb
out
mov
add
add
pusha
fldl
ljmp
mov
jmp
adcl
jne
add
mov
hlt
mov
jmp
lcall
cli
data16
mov
mov
sbbb
add
xlat
incl
popf
add
decl
popa
incl
add
add
push
mov
sub
push
push
push
push
call
xchg
filds
lea
cltd
out
add
add
enter
add
add
push
in
popf
add
cwtl
in
jns
add
mov
addb
add
jp
fimull
jmp
push
in
clc
rcrb
addb
aam
add
fcos
incl
push
stos
add
roll
add
orb
add
mov
in
add
pop
push
push
push
push
push
push
push
push
call
add
add
insb
fnsave
jmp
add
testb
call
incl
add
test
xlat
lret
popf
clc
test
stc
mov
ljmp
add
mov
add
xchg
pop
std
cwtl
mov
pop
decl
add
mov
mov
add
jmp
jp
gs
call
mov
sub
mov
push
push
push
push
push
push
call
lcall
pop
lret
add
ljmp
pushl
mov
mov
mov
scas
ficoms
add
lcall
add
cltd
add
jmp
add
addl
add
add
push
in
xchg
pop
xchg
xchg
iret
add
mov
mov
hlt
add
cmpb
call
add
sti
add
add
add
push
mov
sub
sub
push
push
push
call
add
fimuls
repnz
incl
ret
add
mov
pop
cmpsb
cmc
add
jge
add
in
mov
icebp
cld
add
imul
in
add
add
nop
add
xchg
std
add
lcall
incl
add
mov
add
jmp
decl
lock
call
inc
sbb
jg
hlt
push
push
push
push
push
push
push
call
int
pusha
leave
add
imul
jns
sahf
add
incl
mov
add
add
add
lds
add
add
lret
ja
add
pop
loopne
ljmp
add
lcall
in
test
inc
je
mov
sub
sub
sub
push
push
push
push
push
push
push
push
push
call
jp
idiv
decl
add
aam
ljmp
stos
jl
clc
mov
lahf
xchg
out
add
jecxz
add
mov
add
in
push
in
add
cmp
jmp
jnp
lret
incl
add
cmpsb
add
mov
hlt
add
pusha
add
les
add
mov
sub
pop
push
call
rolb
stos
lret
add
add
scas
mov
add
incl
jo
test
add
jge
decl
pushl
mov
fcmovne
lret
pushl
mov
add
call
add
push
pop
add
decl
push
movsb
push
push
push
push
push
push
push
push
call
icebp
add
call
mov
push
xorl
add
aad
jge
fildl
add
xchg
imul
pushl
add
add
incl
add
add
add
add
add
add
lods
jo
icebp
add
test
loopne
lcall
jns
xchg
push
out
add
movsl
outsl
jmp
push
add
les
ljmp
add
fldl
add
pop
mov
push
push
push
push
push
push
push
push
push
call
push
imul
incl
fiaddl
pop
mov
add
add
mov
push
lahf
fsubrl
add
jno
addr16
stos
add
pop
add
pop
add
incl
repnz
outsl
movsb
insb
add
add
push
decl
dec
add
add
mov
shl
push
mov
add
mov
sub
add
add
add
push
push
push
push
push
push
push
push
push
call
lods
mov
add
push
testw
add
popa
mov
mov
mov
jns
fdivr
ljmp
call
jmp
call
add
add
ficoms
add
add
jne
add
sahf
in
add
jb
add
incl
push
idiv
incl
add
add
mov
sub
mov
sub
push
push
push
push
push
push
push
push
push
call
pushf
jge
xchg
fsubl
lcall
push
call
push
mov
push
push
push
add
add
add
add
add
cmpsb
add
popa
add
addb
loope
lcall
int
test
push
test
mov
sub
mov
sub
push
push
push
push
push
push
call
add
imul
lods
jmp
add
out
lcall
pop
add
aam
ja
addb
mov
jno
testb
jns
arpl
mov
fwait
mov
add
cmp
decl
iret
loopne
push
jnp
jmp
add
push
add
inc
push
mov
sub
mov
push
call
xchg
add
mov
xchg
shrl
jmp
pop
add
pop
call
push
add
pop
add
xchg
mov
rclb
jmp
add
out
mov
incl
add
incl
gs
in
jecxz
fstpt
lock
add
push
jnp
add
add
push
incl
incl
les
call
fcoms
incl
icebp
jge
in
xchg
add
add
xchg
mov
add
jl
add
enter
cmpsb
push
add
add
in
sub
xchg
lret
add
mov
roll
pop
mov
add
nop
andl
dec
loop
mov
loop
leave
lods
mov
sub
add
push
push
push
push
push
call
bound
add
int
movsl
iret
outsl
pop
add
mov
adcb
notl
add
scas
add
clc
add
fcmovu
add
incl
lods
mov
lcall
mov
cmc
fwait
xchg
addl
in
add
add
fistpl
push
incl
fdiv
add
incl
fmul
int3
les
call
or
push
push
push
push
push
push
push
push
call
popa
repnz
add
add
sti
ror
repnz
flds
add
loope
hlt
jecxz
lret
out
inc
mov
mov
xchg
mov
lahf
add
add
add
mov
lcall
call
inc
mov
mov
mov
test
ljmp
add
enter
add
jmp
mov
sub
mov
push
push
sub
shl
push
or
not
add
add
rol
sub
not
pop
shr
pop
push
push
push
push
call
loope
addb
add
jmp
add
jmp
mov
incl
ja
inc
popf
imul
mov
movl
jp
mov
xchg
add
lea
mov
xchg
add
ljmp
pop
add
xchg
fldt
add
pop
add
xchg
fs
loopne
incl
add
ljmp
jge
incl
pushl
call
push
push
push
sub
sub
rol
push
xor
add
sub
add
sub
sub
inc
pop
inc
pop
push
push
push
push
push
push
call
rol
fsub
out
add
add
testb
ljmp
incl
mov
add
jns
mov
ret
push
imul
jmp
push
add
add
movsl
aam
sti
add
jl
add
add
xchg
add
sahf
mov
incl
add
iret
into
mov
sub
push
push
push
push
push
push
push
push
call
jmp
add
add
data16
incl
add
lods
xchg
out
add
lods
aam
lcall
jno
add
push
add
push
data16
stc
add
call
lcall
mov
ficoml
add
jb
flds
add
ljmp
movsl
add
add
jae
incl
mov
push
push
push
push
push
call
loop
xlat
add
jl
ljmp
aam
mov
mov
ljmp
add
add
add
add
decl
ror
mov
filds
lahf
mov
mov
add
xchg
test
pusha
fcompl
fistl
lahf
faddl
mov
xlat
movsb
add
in
in
call
push
push
push
push
push
push
push
push
call
mov
mov
push
call
aad
jmp
push
hlt
jo
pushl
incl
ja
mov
xchg
add
incl
stos
pushf
in
out
repnz
xchg
pushl
add
dec
cli
lcall
mov
add
mov
add
in
fstpt
decl
mov
push
xchg
lcall
test
add
decl
mov
push
push
push
push
push
push
push
push
call
add
icebp
push
jne
push
nop
pop
mov
loopne
pushl
mov
incl
lret
add
incl
add
add
popf
jns
in
std
roll
scas
scas
data16
add
imul
mov
rolb
push
add
add
ljmp
movsl
mov
icebp
jp
cli
jmp
cmpsl
sti
mov
mov
call
lcall
add
fisttps
incl
pop
call
sbb
push
call
imul
pop
xchg
add
stos
hlt
fldcw
xchg
stos
repnz
ljmp
in
xchg
incb
mov
shlb
addl
cld
fstp
jmp
add
out
decl
in
data16
add
call
add
add
loop
fcoml
mov
enter
popf
add
in
jne
enter
incl
add
add
push
push
push
push
push
push
push
push
call
add
movsb
pushf
in
lahf
add
rcr
notb
jl
sarb
ljmp
add
mov
add
add
add
add
lcall
push
sti
add
lcall
imul
stc
push
mov
push
stos
movsb
add
jecxz
add
mov
sub
add
push
push
push
push
push
push
call
in
add
mov
ret
push
mov
enter
lcall
mov
mov
jnp
mov
imul
lcall
mov
mov
movsl
add
add
insb
add
add
mov
add
scas
sti
mov
add
lahf
popa
add
ljmp
mov
sub
mov
sub
push
push
call
cltd
mov
mov
mov
loop
mov
cwtl
loop
test
add
add
mov
mov
inc
jae
mov
lods
add
cmpsb
sahf
in
js
mov
jl
add
add
fninit
dec
add
jge
add
add
fadds
frstor
subl
hlt
incl
jne
push
push
push
push
push
push
push
push
call
add
add
pushl
mulb
mov
add
fdivrs
add
add
add
stc
pop
shr
scas
add
mov
test
pop
pop
mov
mov
jns
loope
call
add
mov
out
lahf
mov
scas
loop
incl
add
mov
mov
mov
pushf
jge
mov
sub
mov
sub
add
push
call
add
push
fildll
lcall
jge
addb
stc
cli
add
mov
add
lret
pop
add
mov
scas
fadd
cmc
incl
subb
fidivrs
pushl
mov
fstpt
out
addr16
mov
add
add
call
imul
add
mov
incl
andl
add
incl
add
decl
lcall
push
push
push
push
call
mov
incl
pushf
fadds
pop
add
aam
add
pop
rorb
cmpsl
in
mov
incl
loope
roll
xchg
cmp
incl
fiaddl
add
add
cwtl
mov
pushl
inc
add
add
add
mov
jnp
add
mov
incl
add
jmp
incl
sub
enter
push
call
std
cld
add
add
popa
gs
mov
add
jo
jge
push
fdivrl
test
add
inc
add
add
add
negl
add
cltd
movsl
mov
add
addl
add
roll
cmpsl
test
cmpsl
add
enter
push
fcmovbe
lds
lea
testb
sahf
mov
sub
sub
push
push
push
push
call
insb
pop
aad
iret
add
xchg
xchg
test
rclb
incl
add
in
add
jno
scas
add
push
rolb
xchg
mov
jecxz
jmp
mov
add
fwait
scas
add
cwtl
rclb
add
stos
pop
add
loop
pop
push
pop
jno
ja
in
mov
mov
push
jge
out
add
add
pushl
xchg
add
mov
sub
rep
mov
push
push
push
call
jae
sahf
test
int
xchg
add
rolb
sahf
add
add
xchg
add
add
push
pushf
pop
arpl
cld
loop
xlat
stos
decl
mov
scas
add
mov
add
xchg
add
gs
add
xchg
add
fildl
mov
jmp
add
sub
or
je
mov
push
push
call
addl
clc
leave
fdivr
pushl
mov
test
pop
add
jmp
iret
loopne
jge
aam
cld
mov
popl
out
xchg
in
js
add
push
call
lea
aam
push
add
int3
add
call
xchg
add
sub
sub
push
push
push
push
push
push
push
push
push
call
jmp
jb
fiaddl
add
add
call
add
lcall
dec
add
loop
add
in
fidivrs
xchg
mov
add
incl
xchg
xchg
add
mov
fs
repnz
add
incl
call
test
mov
sub
add
push
push
push
push
push
push
call
je
pushf
add
movsb
add
stc
add
sahf
jmp
flds
add
popa
mov
lds
ljmp
add
push
jmp
pop
add
incl
xchg
add
out
add
fwait
shll
call
testl
popa
decl
incl
add
add
add
not
js
add
incl
js
incl
loopne
sub
inc
add
push
push
push
push
push
call
imul
add
cld
cld
mov
add
add
mov
add
call
push
cld
std
incl
jbe
sti
in
pop
add
cmc
aam
add
incl
jno
fsubp
gs
jo
sti
mov
incl
mov
add
add
and
scas
mov
decl
cld
fists
mov
jmp
mov
sub
push
push
push
push
push
push
call
incl
out
ret
mov
add
loop
lods
stc
push
add
rcr
loop
jp
push
add
add
sti
mov
push
leave
lods
ljmp
test
iret
mov
xchg
incl
incl
pushl
add
decl
mov
push
push
push
push
push
push
call
pushl
test
jns
pop
mov
add
mov
add
stc
add
add
add
data16
insb
enter
incl
leave
sar
je
loop
jno
add
std
mov
loopne
out
cwtl
data16
add
jecxz
decl
add
incl
ljmp
add
push
call
cwtl
gs
mov
loopne
mov
loopne
add
cltd
mov
add
addb
add
add
mov
add
jmp
jmp
enter
xchg
test
lcall
incl
add
add
rcrl
ljmp
ljmp
out
add
cwtl
add
aam
movl
incl
movsb
push
push
push
push
push
push
push
call
test
clc
call
pop
add
push
push
add
cmc
pop
mov
shrl
mov
sahf
add
mov
inc
add
add
jb
fiaddl
addb
testl
test
push
add
movsl
incl
mov
test
fiaddl
sahf
add
incl
call
mov
sub
mov
sub
push
push
call
pop
add
fiaddl
lea
lods
push
fbld
pushf
scas
mov
int
cmpsb
xchg
fdivrp
incl
mov
mov
test
out
lock
jp
xlat
add
add
add
mov
add
incl
add
call
cmpsb
add
push
hlt
jl
add
cltd
aad
out
add
inc
mov
sub
or
je
push
push
push
call
xlat
ljmp
lret
add
shlb
add
leave
add
lcall
push
imul
jmp
pop
add
add
fnsave
add
xorb
lock
push
aam
add
jb
add
mov
add
add
mov
incl
decl
add
push
push
push
push
push
push
push
call
add
jp
stos
mov
ljmp
add
incl
add
ljmp
jmp
jo
push
xchg
jmp
clc
popl
mov
incl
add
mov
mov
jmp
jl
ljmp
arpl
add
rolb
add
lods
add
add
fildl
jae
leave
add
lret
addl
mov
sub
rep
push
push
push
push
push
call
lea
mov
add
sti
incl
pushl
int3
jge
xchg
cli
fbstp
call
add
jnp
fldl
scas
jns
push
pop
lods
cli
add
data16
je
mov
mov
flds
push
test
mov
call
imul
mull
add
int3
add
call
in
call
add
push
ror
lea
push
or
not
add
rol
sub
sub
sub
pop
shr
xor
pop
push
push
call
incl
pop
xchg
or
ja
add
imul
fwait
stos
add
add
sti
repnz
fiadds
jp
jo
scas
add
jge
cli
hlt
imul
rcl
xchg
arpl
mov
jge
add
add
add
add
fdivp
jnp
iret
xchg
pop
rolb
testl
mov
mov
push
push
push
push
call
add
fstpt
arpl
mov
jns
dec
add
je
xchg
addb
add
lds
scas
sti
decl
jmp
data16
add
jne
out
jb
int
mov
jmp
incl
xchg
add
in
add
lcall
sub
mov
push
push
push
push
push
push
call
add
call
add
incl
add
jge
xchg
incl
add
jmp
imul
incl
jo
mov
jmp
mov
incl
roll
test
add
add
addb
jle
add
pop
add
pop
mov
push
add
sti
add
iret
add
pop
xchg
ror
add
jmp
push
push
push
call
add
pop
add
call
mov
xchg
mov
pushf
imul
loopne
add
pushf
mov
stc
test
add
add
jno
add
cltd
add
fisubs
sahf
mov
stos
ret
mov
add
lret
push
push
loop
add
stc
out
add
add
call
andb
std
scas
sti
incl
call
mov
sub
push
push
push
push
push
push
push
call
add
mov
fsubs
add
pop
add
add
xchg
add
incl
jns
test
add
jecxz
lods
add
incl
pop
xchg
out
push
shr
shrb
add
lea
add
ljmp
fadds
add
add
mov
test
add
adcb
test
jle
incl
sahf
add
lcall
incl
decl
push
push
push
push
push
push
push
push
call
mov
add
add
add
lods
add
incl
in
pop
stos
fdivr
ljmp
pop
add
addr16
add
stos
pop
in
std
jmp
mov
jle
clc
lods
add
add
js
add
add
add
add
sarb
mov
sub
push
push
push
push
call
sahf
cmpsl
add
jo
jne
jae
xchg
insb
add
imul
add
add
incl
hlt
add
add
add
add
je
mov
add
shll
add
lcall
cltd
add
add
mov
add
xchg
add
push
push
push
push
push
push
push
push
push
push
call
fwait
int
mov
rolb
filds
push
andb
clc
gs
add
mov
pop
mov
lods
call
or
ljmp
test
xchg
add
mov
ret
add
int3
js
add
fwait
clc
idivb
imul
add
popa
mov
add
xchg
lea
decl
and
push
push
call
add
add
jecxz
add
add
push
add
xchg
add
pushl
jmp
fdivrp
shl
test
mov
pop
add
add
mov
mov
pop
call
popa
mov
incl
out
int
stos
add
pop
push
add
loop
add
test
add
imul
mov
sub
add
mov
lea
push
push
push
push
push
push
push
push
call
jno
lcall
test
cld
mov
add
std
fs
iret
lcall
xchg
lret
addb
stc
add
mov
add
add
jnp
mov
pushl
mov
lcall
mov
mov
stc
add
ljmp
pop
cmc
add
incl
mov
lods
fsub
mov
sub
push
call
push
push
call
clc
scas
add
in
data16
popa
add
add
xchg
mov
jae
call
lods
imul
add
aad
pop
push
lcall
pop
add
jle
lcall
xchg
xchg
mov
stc
pushl
push
roll
decl
push
add
data16
decl
decl
and
push
push
push
push
push
call
scas
js
icebp
mov
fdivrp
mov
enter
push
test
push
xchg
loop
add
dec
lret
add
nop
add
cli
call
incl
incl
ja
test
fwait
in
pushl
mov
jnp
mov
cmpsl
jo
in
fdivr
jp
add
mov
ljmp
push
test
icebp
imul
sub
push
mov
push
push
call
add
mov
ljmp
push
ljmp
add
mov
add
add
add
decl
in
lods
add
popf
add
call
testl
add
sti
jno
in
add
scas
divb
hlt
decl
add
push
call
add
push
add
add
incl
lods
gs
lds
movl
xlat
add
jmp
lret
ljmp
roll
mov
push
loop
int
add
bnd
mov
incl
mov
imul
jmp
add
mov
dec
add
mov
ljmp
mov
call
aam
incl
call
pop
push
push
push
push
push
push
call
les
pop
jb
add
xchg
aad
ljmp
ljmp
pushl
incl
add
mov
lahf
push
les
add
push
mov
decl
mov
scas
jno
xchg
incb
add
lods
pop
xchg
add
add
cld
movsl
lahf
inc
pop
cmpsl
cmc
lods
add
jle
lahf
add
sub
pop
pop
push
push
push
push
push
push
push
push
call
mov
sti
roll
add
add
leave
arpl
add
mov
jae
out
add
mov
movsb
add
add
add
incl
ljmp
call
add
stc
mov
mov
incl
add
jge
stos
incl
add
jo
aad
add
cmc
mov
add
dec
push
push
push
push
push
push
call
fcoms
lods
pop
add
fs
cmpsl
pop
icebp
pop
mov
aam
incl
test
add
pop
pop
bound
xchg
add
add
mov
call
push
incl
pushl
add
popa
rcr
test
xchg
incl
mov
enter
into
add
jnp
push
push
push
fs
arpl
add
call
in
in
inc
add
push
mov
push
push
call
add
mov
xor
jnp
test
add
jmp
add
incl
mov
test
cld
in
shl
jne
mov
pushf
add
add
jge
add
mov
clc
incl
add
fdivr
dec
add
call
incl
cmpsl
cld
push
enter
add
jae
cmpl
incl
add
add
incl
push
call
push
movsb
lods
add
mov
out
ljmp
inc
add
pop
add
cmp
mov
mov
call
push
fistpll
jmp
mov
jge
add
out
add
movb
out
push
add
mov
fucom
stc
mov
mov
in
hlt
call
push
push
call
add
int3
lock
pop
add
mov
pushl
jge
mov
jmp
incl
jo
pushf
out
add
lds
add
hlt
add
test
add
jmp
cmpsb
rolb
mov
mov
add
lahf
xlat
repnz
fnstsw
mov
gs
sub
mov
mov
sub
push
push
push
push
push
push
push
push
call
add
pop
add
cmpsl
mov
mov
push
add
rolb
pop
xchg
scas
lods
js
add
sahf
mov
ja
pop
test
fiadds
gs
jae
add
cli
loope
add
into
jle
lock
pop
add
imul
frstor
add
mov
add
mov
sub
mov
cmp
push
push
push
push
push
push
push
push
call
add
cwtl
add
pusha
xlat
add
cmpsb
add
add
int3
addr16
jmp
lock
incl
add
fidivrl
loopne
fadds
add
js
mov
incl
fisubs
cwtl
add
pop
pop
add
jmp
in
movb
outsl
jnp
add
in
fmull
push
push
push
call
xchg
jle
add
pop
add
mov
ljmp
stos
mov
add
incl
jmp
add
div
mov
scas
mov
jmp
jne
repnz
jmp
add
js
add
add
add
xchg
add
clc
xchg
decl
mov
ljmp
iret
push
scas
add
xchg
imul
sub
add
dec
jne
pop
push
call
lcall
mov
push
xchg
cmpsl
cmpsl
mov
jp
pusha
xchg
fsts
add
add
add
incl
mov
jmp
roll
addr16
add
mov
push
incl
fwait
add
mov
lcall
movsb
lret
popf
push
mov
incl
mov
jnp
jle
xchg
movsl
add
add
add
incl
pop
push
push
push
call
test
add
mov
mov
call
add
mov
js
movb
add
add
push
jnp
add
pushf
xchg
jns
bound
add
into
std
faddl
jmp
rcll
imul
add
pushf
add
add
add
out
add
cli
ljmp
add
in
lods
std
testl
jmp
mov
sub
leave
push
push
push
push
push
push
push
push
call
clc
add
incl
mov
add
pop
roll
movb
add
mov
fldt
add
add
xchg
mov
int3
rorb
stc
ljmp
mov
in
mov
incl
add
incl
cmpsb
jmp
test
arpl
jp
popa
gs
add
inc
add
push
push
push
call
out
add
outsl
cwtl
add
jmp
mov
mov
incl
cmpsb
in
add
mov
add
int3
test
pop
test
add
xchg
mov
loop
lods
add
xchg
out
call
incl
add
leave
add
loopne
call
add
jne
add
call
pop
int
lock
add
add
lret
mov
sub
mov
push
call
cwtl
push
hlt
add
add
mov
jmp
xchg
into
pop
add
loopne
rol
add
mov
cli
test
push
int
shr
xlat
add
add
mov
add
push
popf
incl
add
push
add
add
jno
add
add
xchg
pop
mov
mov
sub
add
push
push
push
push
push
push
push
push
push
push
call
cld
add
scas
fcomps
out
xchg
xchg
add
push
sar
incl
add
xchg
stos
aad
popf
out
lcall
into
add
incl
jno
add
xchg
add
push
add
jecxz
add
add
add
lret
outsl
mov
subl
incl
push
mov
add
cwtl
add
inc
mov
mov
rcr
dec
insb
stos
add
fmuls
push
push
push
push
push
push
push
call
add
rolb
add
xchg
call
int
stos
add
mov
xchg
mov
js
add
add
js
addr16
les
add
mov
xchg
xchg
add
add
incl
sahf
mov
loopne
add
incl
mov
stos
test
incl
out
incl
mov
enter
jmp
ljmp
stos
mov
sub
push
push
push
push
push
push
push
push
push
push
call
cltd
add
jmp
add
pop
push
stos
lret
mov
lret
in
add
add
add
cmc
stc
mov
inc
add
cmp
add
bound
dec
in
ljmp
lea
jmp
fldl
add
jl
ljmp
add
add
pop
mov
mov
jne
add
mov
sub
mov
push
call
add
jbe
lea
loope
sahf
stos
pop
push
in
ja
cmpsl
pop
add
fsubs
add
leave
add
pop
addb
mov
lcall
add
jmp
xchg
ja
add
call
addl
out
add
add
stc
cmpl
decl
in
add
mov
sub
pop
push
push
call
lret
leave
cmpsb
mov
into
outsl
add
iret
sahf
jmp
enter
incl
push
pop
pusha
add
rolb
add
add
pop
mov
movsl
jne
add
push
roll
add
add
mov
imul
call
xchg
lcall
push
popa
decl
pop
push
call
pop
push
add
add
pop
into
jmp
ljmp
add
add
add
add
test
add
lds
out
gs
out
add
add
ljmp
imul
jecxz
incl
pop
incl
add
add
jb
leave
test
outsl
add
lret
incl
jmp
cmpsl
incl
pop
add
lret
mov
out
push
add
jl
shll
ja
incl
or
inc
add
jge
add
loopne
mov
incl
push
add
jmp
add
data16
test
add
flds
mov
js
mov
scas
add
jl
mov
add
int3
cmpsl
add
flds
add
mov
mov
jb
ljmp
push
mov
cmp
add
call
pushf
add
pop
mov
shlb
add
add
mov
sub
pop
leave
push
push
push
call
xchg
add
insb
mov
jo
add
incl
sbbl
add
stos
mov
add
xchg
add
ret
stc
add
push
popf
add
add
in
fcmovb
jns
add
mov
loopne
scas
pop
icebp
push
int
add
movsl
bound
addb
add
ljmp
lock
pop
cli
mov
mov
sub
ret
push
push
push
push
push
call
popa
push
xchg
add
int3
ret
incl
pop
popf
mov
add
pusha
cltd
push
test
push
lcall
incl
add
add
out
add
aam
xlat
jnp
add
add
add
add
movsb
push
loope
add
mov
sub
push
mov
add
push
dec
inc
not
rol
pop
push
push
push
push
push
push
push
push
call
add
cmc
push
pop
faddl
loope
rcl
add
add
add
ja
push
add
incl
incb
cltd
add
ljmp
add
testb
ljmp
add
ja
stos
incl
incl
mov
dec
icebp
fs
push
jmp
incl
incl
scas
mov
out
incl
call
add
dec
pop
movl
addl
push
shr
rol
pop
test
je
push
dec
sub
ror
pop
mov
push
call
mov
pushl
leave
pop
bound
call
jnp
cwtl
add
stc
pushl
jl
jmp
jmp
movb
xchg
add
pop
xchg
pop
jno
mov
mov
pop
idiv
iret
add
incl
movsb
add
incl
add
mov
sub
pop
pop
pop
push
push
push
push
call
pusha
push
cld
add
incl
repnz
mov
add
incl
jo
incl
in
adcb
add
add
mov
add
jle
add
int3
test
jmp
jle
mov
call
mov
jp
lcall
sub
xor
add
add
pop
leave
push
push
push
push
push
push
push
call
add
jbe
shl
loop
incl
test
pop
stos
data16
jp
jne
jp
outsl
push
add
call
add
add
popl
add
jno
jmp
xchg
scas
in
mov
cwtl
mov
imul
pop
add
test
push
addr16
add
lret
jbe
push
mov
add
pushl
fwait
orl
add
push
push
push
call
add
incl
sti
push
sti
out
add
add
call
ljmp
add
add
jne
xorl
movl
push
lods
incl
jmp
add
incl
jo
lcall
shll
add
incl
gs
jl
bound
enter
jmp
mov
sub
push
push
sub
add
pop
mov
add
push
ror
ror
xor
pop
push
push
push
push
add
dec
rol
pop
push
testl
push
push
call
add
pop
pop
xchg
add
incl
push
rcl
js
jno
xchg
jno
lcall
mov
out
add
data16
add
aad
jmp
fiadds
in
xchg
fildll
add
fs
add
scas
mov
rcrb
incl
mov
add
add
add
mov
pop
movsl
stc
mov
incl
or
push
sub
lea
pop
push
push
push
push
push
push
push
push
push
push
call
movsl
add
add
rclb
addr16
popa
add
incl
add
jae
cltd
xchg
mov
mov
add
out
ret
add
out
incl
cmpsl
mov
add
incl
add
pop
push
lods
add
add
mov
add
add
loope
add
add
add
test
add
out
add
add
ljmp
les
push
mov
sub
call
mov
push
sub
pop
pushl
push
push
push
push
push
push
push
push
push
push
push
call
jecxz
add
outsl
xchg
add
xchg
add
xchg
jmp
call
je
negl
incl
add
add
mov
jne
pop
call
add
ljmp
add
push
mov
xchg
push
leave
lods
sahf
scas
add
add
test
arpl
mov
push
mov
jmp
lods
lods
stos
sar
decl
call
cmpl
jne
pop
push
push
push
call
add
xchg
rolb
add
pop
flds
lahf
pop
into
outsl
add
gs
neg
cmpb
add
std
scas
jno
out
loop
add
add
incl
test
add
jmp
xchg
lret
xorl
fdivr
cmpl
push
loop
mov
mov
sub
pop
push
dec
add
pop
pop
pop
push
rol
pop
leave
ret
push
push
push
push
push
push
push
push
push
call
mov
pop
ljmp
mov
add
add
xchg
mov
aad
add
add
pop
jo
add
call
jge
in
add
add
add
pop
clc
gs
sti
push
incl
push
add
popa
lcall
pushl
mov
sub
mov
add
push
push
inc
add
pop
push
push
push
push
push
push
push
push
call
push
pop
mov
add
loop
add
mov
add
out
pop
movsl
mov
add
lcall
loop
mov
call
add
sti
js
jb
loopne
loopne
cld
push
lahf
iret
add
insb
pop
out
cld
lods
add
add
lcall
add
int
addl
mov
repnz
pop
mov
lcall
mov
sub
push
push
push
push
push
push
push
push
push
call
add
add
add
mov
add
mov
incl
mov
add
mov
mov
aad
pushl
icebp
scas
xchg
int
loope
push
push
pop
mov
add
push
mull
dec
negb
jae
lock
call
cwtl
xchg
add
add
incl
add
mov
add
xchg
mov
add
mov
sub
movl
push
push
push
call
test
js
add
out
mov
int3
shll
fidivs
stos
pop
frstor
mov
add
jmp
div
add
xchg
push
add
lret
incl
pop
mov
add
pushl
mov
xlat
add
ret
je
mov
add
add
add
add
pusha
arpl
add
std
xchg
mov
pushl
mov
mov
in
lock
call
push
push
rol
pop
call
push
push
push
push
call
add
add
mov
xlat
push
jl
push
add
mov
lahf
add
add
lds
push
nop
pop
cltd
scas
je
int
iret
add
insb
mov
cmpsb
test
mov
into
mov
out
ja
add
scas
addr16
pushl
add
push
add
add
add
mov
pushl
pushf
decl
subl
cmpl
jne
pop
push
ror
shr
inc
pop
pop
pop
pop
push
xor
not
pop
leave
push
push
push
push
push
push
push
call
test
lods
incl
add
icebp
aam
pop
jns
mov
repnz
pop
mov
add
add
out
clc
mov
iret
int
mov
push
out
add
shll
jb
cmpsb
add
add
add
add
jnp
out
pop
std
add
jb
loopne
add
lret
jo
incl
push
sub
shr
pop
mov
push
dec
add
add
pop
add
push
push
push
push
push
push
call
out
pop
int
add
mov
push
mov
pop
mov
out
ljmp
loop
jmp
mov
add
std
xchg
add
scas
add
inc
popa
mov
pushf
xchg
pushf
aam
add
pushf
add
mov
jb
outsl
add
mov
mov
aad
mov
inc
movsb
fimull
mov
mov
sub
push
push
push
add
shl
shl
pop
push
push
push
push
shr
xor
add
push
or
not
add
rol
add
dec
sub
not
pop
sub
shr
add
xor
pop
push
shl
add
shl
pop
pushl
push
call
ja
call
add
pop
mov
call
xlat
mov
rcl
in
jmp
mov
add
icebp
mov
dec
out
pop
sahf
aam
add
add
xchg
add
push
add
stc
add
arpl
push
add
jno
dec
add
data16
call
fsubr
add
incl
popa
pop
mov
test
pushf
add
add
mov
sub
call
call
push
push
not
sub
push
xor
add
sub
sub
pop
add
xor
inc
pop
push
rol
inc
lea
sub
pop
pushl
push
dec
pop
call
push
sub
pop
call
push
push
lea
inc
push
sub
add
rol
sub
sub
not
sub
ror
not
pop
inc
sub
pop
pushl
push
rol
add
pop
call
call
push
push
push
push
push
push
push
call
mov
fptan
add
jle
in
mov
incl
fcomps
add
shll
arpl
fnstsw
add
dec
add
ljmp
add
add
xchg
fistpl
push
push
jbe
add
mov
push
rolb
mov
add
push
add
icebp
movsl
push
out
incl
or
inc
cmp
call
add
lea
xor
pop
mov
push
call
jge
cli
std
xchg
xchg
ljmp
pop
popa
hlt
mov
shrb
mov
jge
in
xchg
add
roll
ljmp
movsl
add
mov
jmp
jnp
xchg
add
add
xchg
cwtl
jl
add
add
add
add
add
std
jb
std
add
add
std
xlat
mov
mov
ret
add
mov
sub
shr
add
mov
push
add
pop
mov
add
movzwl
push
rol
rol
pop
add
push
push
push
push
push
push
call
in
push
add
movsb
gs
add
nop
jecxz
add
call
push
add
data16
jmp
ljmp
add
lock
sti
mov
call
xchg
test
sti
test
add
add
push
mov
not
pushf
incl
call
add
mov
in
jmp
fisttpl
test
add
add
lods
sub
add
add
add
js
movl
arpl
int3
add
add
add
mov
fmull
add
fwait
add
fadd
cld
mov
incl
add
add
mov
add
add
inc
add
decl
cmpsb
in
mov
add
mov
addr16
sub
movl
jmp
push
push
push
push
push
call
push
add
inc
add
loopne
add
add
lea
add
ljmp
movl
incl
add
enter
add
lret
lcall
add
int
mov
rcll
mov
add
clc
mov
out
stos
test
leave
mov
sub
mov
push
sub
sub
sub
pop
mov
sub
jne
push
sub
rol
shl
shr
pop
mov
movl
jmp
push
sub
sub
pop
mov
push
not
not
ror
sub
pop
mov
sub
jne
mov
push
push
push
push
push
push
push
push
call
enter
push
add
in
add
add
push
rcrl
add
add
add
lahf
add
add
add
ror
cltd
add
loop
add
add
lcall
fcomps
add
dec
ret
hlt
add
sar
incl
mov
out
add
add
add
lret
add
scas
add
add
loop
mov
fdivr
inc
add
add
jmp
mov
push
push
push
push
push
push
push
call
in
mov
lret
jo
add
arpl
fldl
inc
cmpsl
xchg
movsb
jns
into
out
mov
add
xchg
jbe
jbe
stos
mov
lret
mov
mov
add
dec
test
scas
loopne
in
cmpsb
fistl
fldl
add
dec
jle
add
sti
xchg
add
testl
incl
mov
add
cmp
jne
push
push
push
push
push
push
push
push
call
add
arpl
incl
pop
add
add
in
in
fsts
enter
xchg
jl
add
jb
call
jo
add
ja
pop
add
incl
lahf
add
lds
xchg
mov
jne
add
call
add
fldl
jae
add
xchg
add
aam
add
pushl
incl
decl
rorl
add
add
push
lea
add
pop
jmp
mov
push
sub
sub
pop
cmpw
jne
push
lea
pop
mov
movl
push
push
call
loop
repnz
pop
je
pop
cli
pop
add
shll
icebp
incb
faddl
out
add
jmp
aad
cltd
movb
add
notl
enter
mov
mov
popf
jne
lcall
ljmp
les
incl
cld
rolb
add
add
out
add
add
push
mov
test
add
add
jmp
push
pop
pushl
pop
mov
push
shl
pop
mov
mov
push
push
sub
xor
rol
push
xor
add
ror
sub
ror
shr
shl
pop
lea
rol
pop
push
inc
xor
dec
shl
pop
push
push
push
call
pop
fwait
add
add
cmpsb
add
addl
add
sti
add
add
lods
jge
jl
xchg
add
add
add
mov
shll
int
fiadds
add
add
incl
xchg
jecxz
loop
mov
stos
add
fwait
dec
call
jle
add
add
lods
mov
lret
scas
xchg
push
xchg
scas
add
push
add
jo
jp
mov
sub
call
cmpl
je
push
push
dec
push
or
inc
add
add
sub
dec
rol
sub
dec
pop
ror
shl
shl
pop
push
push
push
push
push
push
push
call
push
add
stos
shrb
lcall
add
mov
add
mov
mov
add
add
mov
pop
jae
mov
add
fiadds
ret
push
jnp
lcall
add
add
insb
jmp
push
pushf
stc
xlat
stos
xchg
add
scas
lahf
push
jmp
jbe
ljmp
lds
fimuls
call
pop
inc
add
cmpl
je
push
push
dec
push
or
inc
add
add
sub
inc
inc
pop
rol
pop
push
push
push
push
push
push
push
push
push
call
lea
add
pop
movsl
cmpsl
mov
pop
add
push
add
jmp
xchg
movsl
test
pushl
pushl
lcall
cmpsl
test
mov
incl
add
add
shll
add
push
mov
test
data16
push
add
pop
add
lds
jo
fadds
jbe
incl
dec
inc
add
push
push
push
push
push
push
push
push
push
call
jo
add
mov
add
int
shlb
add
add
incl
jmp
add
incl
mov
jmp
stos
add
mov
not
add
push
add
aad
aad
add
jno
fdivr
call
lods
cltd
mov
imul
xchg
mov
add
add
lods
add
decl
incl
out
ret
xor
add
push
push
rol
push
xor
add
shr
shr
sub
inc
add
pop
lea
add
pop
push
rol
dec
pop
push
call
push
call
lahf
push
add
jle
shl
in
add
pusha
add
movsb
add
mov
jns
out
out
int3
mov
jmp
cmpsl
mov
push
pop
add
add
push
mov
add
outsl
pusha
std
incl
mov
rolb
push
int3
add
pop
add
rolb
mov
cld
add
mov
sub
cmpl
je
push
push
dec
ror
inc
push
push
pop
add
lea
shr
sub
shl
sub
add
rol
pop
add
pop
push
shl
add
ror
pop
push
push
push
push
push
push
call
mov
add
ljmp
jns
jmp
add
pushl
insb
incl
add
loopne
enter
pop
add
aad
add
add
movl
popf
int3
push
pop
cld
lret
push
mov
add
arpl
jecxz
sti
mov
sub
call
cmpl
je
push
push
inc
push
or
not
add
inc
add
inc
sub
sub
sub
xor
pop
dec
dec
sub
pop
push
push
push
push
call
jmp
add
stos
lcall
mov
stc
mov
je
fisubl
adcb
add
movsl
jb
push
adcl
add
add
incl
add
add
out
jns
scas
loop
add
jmp
fs
add
xchg
jecxz
add
incl
cmpsb
jl
icebp
add
incl
jae
ljmp
in
in
push
push
push
push
push
push
push
push
push
push
call
add
add
into
stos
cmpsb
addr16
push
add
add
add
add
ljmp
mov
add
incl
push
stc
add
cld
mov
stc
mov
push
int3
add
jnp
add
arpl
pop
add
add
out
aad
add
pop
loop
add
cmpsl
add
add
add
mov
pushl
decl
call
cmpl
je
push
push
not
ror
not
push
push
pop
add
shr
dec
add
xor
sub
sub
shl
pop
shr
pop
push
push
push
push
push
push
push
push
push
call
add
mov
ljmp
ljmp
lods
add
loopne
insb
add
cwtl
mov
out
imul
call
incl
xchg
add
aad
rolb
lcall
push
leave
call
arpl
add
add
incl
pop
incl
add
add
jmp
cmpsb
out
add
outsl
gs
add
add
mov
fdivr
call
jecxz
add
cmpl
je
push
push
sub
rol
xor
push
sub
add
sub
xor
inc
sub
xor
xor
pop
ror
xor
pop
push
push
call
loope
add
mov
mov
push
sti
xchg
imul
stos
add
les
out
scas
std
add
add
stc
pop
jmp
add
popa
fcos
call
add
cmpb
add
fs
pushl
add
fwait
xchg
mov
rcrb
ljmp
enter
add
imul
mov
hlt
call
sub
sbb
push
push
push
push
push
call
pusha
lret
add
loop
incl
cli
test
add
je
xchg
addb
mov
push
add
loope
lds
push
push
addr16
incl
out
ljmp
in
mov
lcall
jecxz
add
pushl
push
pop
mov
incl
stos
add
add
mov
sub
cmpl
je
push
push
add
add
push
or
not
add
inc
lea
add
lea
sub
sub
pop
lea
sub
pop
push
add
ror
dec
pop
push
call
cmpl
je
push
push
sub
push
or
inc
add
sub
sub
lea
shr
dec
rol
pop
sub
pop
push
dec
lea
pop
push
push
push
push
push
call
lock
ljmp
sahf
incb
nop
jp
lcall
add
incl
push
add
mov
add
mov
add
mov
add
xchg
nop
cmpsl
add
popa
jmp
add
hlt
roll
shrb
add
call
nop
jecxz
add
add
add
ja
aad
add
add
sub
call
cmpl
jne
mov
push
dec
pop
movl
push
push
push
push
push
call
popf
fistps
add
add
mov
mov
imul
add
xchg
test
add
add
insb
add
insb
cmc
loopne
lcall
enter
test
xchg
mov
mov
insb
mov
cmpsb
add
jo
lret
add
mov
outsl
call
add
jl
add
jle
add
sub
jmp
xor
push
push
push
push
call
add
call
push
test
pop
mov
add
fucomip
add
jnp
ljmp
push
sarl
fdivs
add
lds
testl
incl
push
jae
mov
loope
cli
mov
imul
cmpsb
mov
xchg
test
mov
js
call
imul
in
add
in
lcall
std
push
push
push
push
push
push
push
call
testl
add
xchg
incl
in
testl
cltd
ja
jne
popf
scas
addr16
pop
mov
in
incl
pop
out
add
ja
test
cmpsb
mov
negb
push
decl
in
mov
ret
jmp
mov
lret
add
decl
imul
sub
pop
pop
push
rol
shl
pop
pop
leave
ret
push
shl
pop
push
mov
add
push
pop
cmpl
jne
int3
push
push
inc
push
or
not
add
rol
sub
inc
not
pop
not
pop
push
sub
pop
pushl
push
shl
add
pop
call
push
push
call
addr16
add
pushl
incl
insb
out
addr16
aad
call
lret
fldl2t
lcall
call
out
add
mov
mov
add
xlat
push
out
pop
jno
xchg
push
in
mov
jge
add
lea
add
cld
ljmp
scas
mull
push
rcr
lds
add
incl
ljmp
call
push
shr
rol
xor
pop
jmp
cmpl
jne
push
push
lea
add
ror
pop
ret
jmp
cmpl
je
push
sub
rol
shr
pop
cmpl
jne
push
push
add
xor
lea
push
and
add
sub
inc
add
sub
shr
pop
add
ror
pop
push
push
push
push
push
push
push
push
push
call
test
addr16
incl
push
lret
mov
jle
add
xchg
push
leave
add
aam
mov
mov
cld
test
cld
add
ror
add
aad
mov
xchg
test
jb
add
pop
fistps
add
call
xchg
fstp
dec
out
mov
xchg
lods
jle
mov
sub
pushl
call
push
not
inc
inc
pop
call
push
push
push
push
push
push
call
fs
scas
add
mov
add
push
lahf
pop
add
popl
mov
xchg
mov
jmp
into
movsl
sti
gs
call
les
push
jbe
xchg
add
rcl
add
out
add
xchg
add
jbe
add
add
jae
jmp
jp
mov
sub
push
push
push
sub
lea
dec
shl
push
or
not
add
lea
inc
sub
inc
pop
rol
inc
rol
pop
push
not
shr
pop
pushl
push
sub
shl
ror
pop
call
push
inc
not
pop
push
push
push
push
push
push
push
call
push
int
repnz
lods
lea
pop
mov
add
mov
loop
add
hlt
add
incl
cwtl
add
add
stc
addl
add
fadd
xor
mov
jmp
push
in
mov
test
cmc
add
add
scas
sti
add
jl
add
call
jp
dec
roll
call
add
mov
sub
call
push
push
push
call
stos
add
pop
enter
add
int3
mov
stos
add
pushl
mov
jno
add
add
ja
mov
add
test
mov
add
cld
add
into
ljmp
pop
lret
rcll
push
rolb
xchg
pop
xchg
fdivp
pop
jmp
add
add
add
int3
push
push
push
push
push
push
push
call
icebp
cld
add
add
add
add
xchg
jl
xchg
fs
sahf
andb
add
jmp
jne
fistps
incl
incl
add
lea
mov
gs
add
push
add
add
rcll
jge
cmc
out
mov
cmpsl
lcall
mov
sub
leave
push
lea
add
shr
shl
pop
add
pop
push
ror
xor
sub
pop
pop
pop
push
add
sub
shl
sub
pop
pop
push
lea
sub
rol
pop
leave
push
inc
dec
pop
add
ret
jmp
push
call
cld
incl
incl
lret
scas
pop
in
add
loopne
arpl
pop
out
fildl
roll
movb
add
fiadds
insb
lret
vcvttps2dq
add
popf
add
mov
incl
mov
movsb
imul
mov
cld
incl
jns
add
jbe
add
add
call
je
mov
sub
cmpl
jne
push
push
add
push
xor
add
dec
shl
sub
add
dec
pop
sub
inc
pop
push
call
mov
add
push
mov
stos
add
stos
add
jnp
mov
incl
push
lret
pushf
decl
pushf
add
incl
add
shrl
add
incl
add
incl
rol
push
pusha
mov
ljmp
add
fistpll
iret
mov
sahf
mov
loop
jne
ret
std
add
pushl
push
push
push
push
push
push
call
movl
imul
add
out
mov
nop
add
add
mov
jbe
pushl
jle
mov
add
in
cld
add
out
incl
add
addb
push
stc
testb
jns
add
js
add
mov
add
xchg
jb
nop
add
cld
iret
jp
hlt
scas
ja
mov
hlt
jp
add
mov
add
xchg
add
call
mov
sub
call
push
call
push
lea
add
not
pop
jmp
cmpl
jne
push
sub
add
pop
mov
push
push
push
push
push
push
push
push
push
call
add
lcall
mov
jns
lcall
add
mov
out
add
mov
add
mov
mov
ljmp
mov
add
lahf
jecxz
sti
mov
add
ret
add
int3
in
add
add
add
mov
push
stos
xchg
flds
data16
add
incl
add
mov
sub
mov
push
call
jmp
mov
fcompl
call
push
add
icebp
add
mov
js
fcomi
pop
lds
jl
stos
mov
scas
jbe
fstpl
cmp
add
xchg
add
hlt
movsl
mov
mov
pushl
add
add
mov
out
lahf
arpl
test
loopne
add
je
lods
add
add
incl
cwtl
incl
rol
in
mov
add
mov
sub
jmp
push
push
push
shr
inc
push
or
inc
add
shr
sub
xor
ror
pop
ror
pop
push
push
push
push
push
push
call
mov
lcall
lds
jmp
add
incl
mov
mov
les
lret
mov
pop
test
pop
xlat
xchg
shrl
aam
aad
push
add
xchg
decl
rolb
add
sahf
xchg
pop
jmp
rol
les
add
add
push
add
sahf
lcall
incl
pushl
call
call
push
push
inc
push
push
pop
add
xor
sub
shr
inc
pop
shl
add
add
pop
push
push
push
push
push
call
cmc
fisubrl
nop
xchg
add
lahf
add
add
cli
pop
push
ja
add
add
lret
arpl
loopne
stos
jnp
lcall
add
fnsave
xchg
imul
push
fbld
add
jecxz
mov
add
push
add
cwtl
mov
mov
sub
pushl
push
push
call
push
add
xchg
add
test
call
add
mov
xchg
rolb
add
add
enter
call
add
add
mov
loop
jmp
add
sti
add
jmp
add
call
lcall
add
fsubs
rolb
popf
push
mov
jae
jnp
jmp
mov
hlt
call
push
sub
pop
call
push
push
sub
xor
push
or
inc
add
dec
sub
inc
add
pop
pop
push
push
call
jmp
ljmp
in
add
movsb
xlat
xlat
push
test
push
add
call
add
rolb
sarl
ret
jmp
add
add
mov
fstpt
fdivr
shlb
jecxz
ljmp
pop
mov
pop
mov
scas
incl
mov
loope
pop
call
pop
add
sub
pushl
call
push
push
push
push
push
call
loopne
xchg
add
jmp
faddl
jmp
jnp
out
cltd
jo
iret
imul
jmp
add
out
mov
into
add
mov
jecxz
mov
add
pop
pushl
ljmp
std
sarb
mov
add
add
add
add
orl
ljmp
jge
jbe
add
add
add
add
add
mov
call
push
push
not
lea
push
xor
add
add
add
sub
rol
pop
shr
not
pop
push
push
call
incl
xchg
pushl
add
pop
jbe
fadd
mov
cmpsl
in
jmp
pushl
pop
add
add
jecxz
subb
xchg
ljmp
addr16
add
mov
inc
rcll
call
lods
loope
mov
xchg
mov
test
arpl
ljmp
add
mov
loope
push
call
hlt
pushl
push
push
call
mov
clc
push
js
jmp
in
movsl
mov
push
arpl
add
jmp
add
rclb
jp
in
mov
int
fstl
xchg
incl
add
ljmp
xchg
lcall
fildl
andl
add
fcomip
push
add
add
cwtl
add
mov
sub
call
push
push
call
add
fildll
rcll
add
add
xchg
fbstp
cmpsb
bound
jmp
call
aam
mov
in
mov
mov
add
stos
stc
jae
add
add
sar
pushl
loopne
jmp
hlt
cld
ficomps
fisubl
into
popf
mov
sub
call
push
push
sub
add
push
push
pop
add
add
inc
add
rol
sub
not
ror
sub
pop
rol
pop
push
push
push
push
push
push
push
push
call
pop
mov
add
out
mov
aad
add
add
incl
incl
mov
incl
xchg
shll
pushl
stc
loop
add
test
jmp
stos
leave
iret
mov
dec
jmp
mov
dec
add
add
out
xchg
add
mov
leave
push
pop
push
add
orb
decl
pushl
call
push
ror
not
pop
call
push
push
ror
shr
push
sub
add
ror
sub
shr
add
pop
xor
sub
add
inc
pop
push
sub
pop
pushl
push
not
shl
add
pop
call
call
push
push
ror
shr
push
xor
add
dec
add
shl
sub
sub
add
pop
shr
inc
xor
dec
pop
push
push
push
push
push
push
call
pop
mov
mov
add
mov
add
in
add
incl
add
add
add
add
subl
add
add
lock
mov
mov
mov
xchg
pop
cmc
cwtl
lcall
fwait
mov
add
incl
add
decl
pushl
push
shl
pop
call
push
call
cmc
incl
add
icebp
xchg
in
scas
jle
cwtl
in
add
out
add
incl
jo
add
int3
aad
add
add
push
cmpsb
cmpsb
add
add
mov
add
incl
add
pop
pusha
add
lcall
popa
test
jge
fcmove
mov
sub
call
push
push
not
lea
dec
not
push
xor
add
ror
sub
sub
pop
pop
pushl
push
sub
dec
pop
call
call
push
push
not
add
sub
push
or
not
add
sub
inc
sub
shl
pop
shr
shl
rol
pop
push
push
push
push
push
push
push
call
xchg
add
push
add
lods
test
mov
add
add
add
out
popa
call
cld
clc
add
jmp
add
add
je
stc
addl
scas
test
lret
pop
data16
mov
call
shrl
sub
pushl
push
shl
sub
sub
dec
pop
call
push
push
push
push
push
push
push
push
call
mov
insb
xchg
imul
add
jmp
add
fwait
incl
mov
int3
ja
movl
mov
sar
mov
movb
incl
add
call
pushl
mov
jle
mov
add
incl
add
lahf
stc
jmp
mov
stos
add
jno
movsl
mov
add
mov
sub
lea
push
push
push
call
lret
add
jbe
xchg
mov
cmp
fnstcw
add
lret
leave
loope
incl
hlt
fadd
clc
push
add
lahf
lret
add
roll
add
loop
add
je
ja
xchg
add
mov
add
jmp
pusha
add
add
push
mov
movsb
add
xchg
js
incl
lods
add
pop
mov
jnp
jle
add
lahf
mov
hlt
call
push
push
push
push
pop
add
sub
ror
add
pop
xor
pop
push
shl
pop
pushl
push
push
call
rcl
incl
jge
jp
mov
jecxz
insb
int3
add
clc
add
push
add
leave
mov
std
ja
cltd
aam
mov
int
mov
mov
jae
pop
add
enter
shll
add
jmp
add
jl
xchg
incl
incl
fdivp
in
incl
out
in
push
popf
mov
jbe
data16
add
rorb
call
push
push
push
push
push
call
icebp
add
mov
mov
testl
jae
mov
pushl
incl
mulb
incl
scas
add
add
addb
push
cltd
add
mov
add
add
movsb
js
add
pop
outsl
jp
lock
mov
add
decl
je
add
jne
pop
mov
jmp
mov
sub
push
call
push
push
sub
push
or
inc
add
add
ror
add
ror
sub
shr
pop
ror
ror
pop
push
shr
rol
pop
pushl
push
push
push
push
call
add
mov
pop
add
mov
in
out
fcom
pop
add
pushl
leave
fildll
mov
pushl
hlt
mov
int
add
ja
ficomps
je
add
rolb
mov
out
mov
roll
add
pop
incl
add
loop
incl
add
add
add
jmp
hlt
out
imul
pushl
jmp
lcall
xor
add
call
push
push
lea
not
push
push
pop
add
rol
shr
sub
xor
rol
pop
pop
push
push
push
push
push
push
call
add
add
ret
add
ljmp
dec
popa
stos
lods
out
add
nop
loop
lcall
ljmp
mov
add
add
add
add
add
fwait
in
add
sarb
fstpl
mov
jecxz
stc
fcmovbe
lahf
int3
callw
lcall
incl
cmpsl
add
ja
add
js
incl
or
jno
add
call
push
push
dec
shr
push
xor
add
not
sub
rol
shr
shl
pop
xor
not
shl
pop
push
push
push
push
push
push
push
call
call
int3
pop
in
in
push
mov
stos
jecxz
sahf
out
pushl
repnz
add
add
lcall
add
add
aam
add
incl
pop
testl
xchg
fcoml
mov
decl
pushl
call
push
push
call
shl
test
mov
add
add
push
ljmp
mov
incl
pop
fsts
xchg
add
jmp
add
call
je
rcrl
mov
outsl
add
lahf
icebp
jns
mov
add
mov
xchg
jecxz
incl
add
sar
stc
enter
test
hlt
call
lea
push
push
push
xor
add
add
dec
sub
sub
shl
pop
lea
sub
shr
pop
push
push
push
push
push
push
call
in
jl
xchg
in
out
test
mov
add
loopne
pop
jecxz
add
xchg
test
mov
outsl
mov
mov
add
enter
jle
test
scas
add
adc
mov
add
xchg
pop
push
add
lahf
mul
addb
rolb
cmc
mov
movsl
incl
decl
pushl
push
push
push
call
push
in
mov
add
flds
fnstcw
out
add
out
test
mov
jmp
movl
mov
add
roll
add
mov
add
clc
add
add
add
jmp
decl
mov
pop
aam
in
add
stos
add
add
decl
call
push
push
call
test
pop
add
push
jl
push
mov
aam
outsl
add
add
in
mov
jl
push
add
incl
add
add
incl
incl
pop
int
add
add
xchg
shll
xlat
xor
int3
lea
stc
add
popa
add
add
mov
add
mov
sub
call
push
push
sub
push
xor
add
not
rol
sub
pop
inc
inc
sub
inc
pop
pushl
push
add
pop
call
call
push
add
add
pop
mov
push
push
rol
add
dec
push
sub
add
add
sub
dec
pop
inc
pop
push
push
push
call
pop
int
incl
mov
sti
xchg
mov
les
xchg
fs
jmp
add
add
ljmp
add
imul
add
pushl
xchg
addr16
pushl
fiaddl
mov
add
dec
imul
mov
mov
add
incl
push
out
add
roll
pop
call
incl
add
int3
movl
imul
out
mov
sub
pushl
call
push
sub
pop
push
call
push
push
dec
push
and
add
lea
not
sub
sub
pop
sub
sub
pop
push
ror
add
inc
pop
pushl
push
push
push
push
push
push
push
push
call
add
sar
inc
lret
add
jb
call
ficoml
mov
pop
cmp
call
add
clc
jp
mov
xchg
add
jmp
cmpsw
add
lds
in
lret
add
pushl
push
jae
int
add
add
push
xchg
call
popf
jae
mov
mov
mov
out
incl
call
push
shl
add
pop
push
push
add
shr
shr
inc
pop
pushl
call
push
push
dec
dec
push
or
not
add
add
not
sub
lea
not
sub
pop
ror
pop
push
call
pop
faddl
cwtl
mov
in
mov
gs
add
add
incl
mov
arpl
incl
mov
mov
incl
mov
imulb
add
xchg
addl
add
in
add
outsl
roll
mov
aam
clc
add
jnp
fbstp
add
mov
mov
shlb
add
add
mov
sub
pushl
call
push
push
rol
push
xor
add
shl
sub
sub
shl
pop
xor
pop
push
push
push
push
push
call
leave
stos
add
insb
mov
add
add
add
call
add
pop
std
push
add
cli
add
mov
in
add
add
jl
push
ja
push
call
lcall
dec
arpl
clc
out
add
jp
cld
mov
sub
push
push
call
mov
jge
add
lcall
pushl
add
sar
pushl
call
add
add
call
pushl
insb
add
add
add
add
iret
ljmp
icebp
add
out
add
add
jo
add
add
push
int3
je
dec
jae
addb
add
mov
push
mov
sub
call
push
push
sub
push
or
inc
add
sub
add
shr
pop
shl
pop
push
push
push
push
call
add
cmpsl
add
fadds
add
les
add
imul
add
scas
xorb
addr16
add
aam
mov
xchg
push
stc
stos
repnz
mov
mov
not
add
lods
add
je
mov
xchg
imul
add
incl
out
call
mov
jbe
add
xchg
mov
sub
pushl
push
push
call
push
ljmp
stc
repnz
pushl
popl
add
mov
adcl
incl
addl
test
add
addr16
xorb
mov
add
andb
push
add
xchg
sbbb
add
add
pushl
incl
movsl
ja
add
add
icebp
ret
decl
call
push
shr
lea
add
pop
mov
push
push
push
push
push
push
push
push
push
call
sti
add
lods
popa
adcl
cltd
ljmp
scas
cli
add
add
add
ret
push
push
addb
arpl
incb
push
mov
pop
popl
push
lea
test
add
lcall
decl
push
add
add
jmp
incl
pop
mov
rcr
pushl
decl
decl
call
xor
shl
pop
push
push
sub
shr
sub
add
pop
push
push
push
call
out
enter
add
xchg
add
push
add
test
add
div
shrl
cltd
mov
aad
in
pop
cli
add
nop
jo
add
add
xchg
xchg
add
push
jp
add
add
incl
flds
push
mov
clc
mov
add
mov
fildll
hlt
ljmp
push
push
push
call
call
xchg
lock
out
mov
mov
add
add
clc
pop
pushl
lods
repnz
clc
lret
add
add
push
test
add
incl
shl
movsl
push
jmp
mov
add
cmpsb
in
bound
incl
mov
mov
xchg
mov
add
push
mov
push
incl
mov
sub
push
push
push
push
push
push
push
push
push
push
call
jae
pop
loop
xchg
add
je
call
push
call
aad
add
cmp
inc
lret
lods
add
add
add
jbe
pop
cmpsb
xchg
loopne
add
incl
test
mov
cmpsb
pushf
mov
in
enter
mov
test
in
xchg
add
add
pop
insb
incl
sahf
pushl
mov
sub
push
pushl
push
ror
pop
push
call
push
push
sub
push
and
add
rol
shl
sub
lea
rol
pop
add
inc
pop
push
push
push
push
push
call
push
int3
fildl
lods
add
mov
lret
incl
add
fcoms
add
add
testl
add
add
add
jp
mov
incl
std
add
add
jle
outsl
add
mov
out
aam
add
add
cmc
rcrb
mov
fldl
add
shlb
add
iret
addl
incl
or
dec
sbb
add
shl
pop
call
mov
push
not
dec
sub
pop
pop
dec
jne
jmp
push
push
push
push
push
push
push
push
call
int3
add
push
add
inc
add
sti
test
ret
movsl
int
sahf
stos
jbe
push
lds
add
add
add
std
cmc
mov
mov
add
in
call
add
mov
add
add
call
sub
call
push
push
push
push
push
push
push
call
scas
mov
xchg
insb
add
add
in
std
add
ret
pop
add
test
mov
jp
negb
lahf
mov
jmp
push
shll
popa
mov
out
push
outsl
add
pop
push
aad
pop
lock
mov
xchg
lahf
incl
mov
add
fdiv
loop
into
add
imulb
lds
mov
jp
add
xchg
mov
sub
jmp
push
push
push
push
push
push
push
call
add
popf
jb
cmc
rorl
call
add
hlt
popl
in
pop
incl
add
add
fbstp
xchg
rcl
add
gs
add
xchg
add
add
add
pusha
push
into
incl
jle
fstl
mov
ficoms
mov
jne
mov
sub
call
push
push
shr
sub
push
sub
add
lea
lea
sub
sub
rol
rol
pop
rol
pop
push
push
push
push
push
push
push
push
call
add
mov
dec
fiaddl
rcrb
jmp
jecxz
add
hlt
push
jl
jns
push
int
add
movsl
aam
idivl
call
cli
fiadds
jp
xchg
push
out
push
jns
add
call
ja
aad
push
loope
addr16
lcall
add
in
fdivr
pushl
push
ror
pop
call
push
push
push
call
add
pop
cmpsb
decl
call
loop
rclb
test
incl
incl
add
add
mov
jnp
scas
xchg
lock
fsts
add
jecxz
add
inc
xchg
filds
movsb
fildll
push
mov
mov
mov
roll
xchg
jnp
add
cwtl
insb
decl
push
mov
sub
call
push
push
push
push
push
push
push
push
push
call
sti
jnp
xlat
incl
dec
mov
call
add
incl
add
add
jno
call
bound
add
add
xchg
add
pop
jmp
xchg
add
rcll
mov
add
stc
mov
add
call
mov
sub
mov
lea
push
push
rol
push
xor
add
add
rol
add
sub
shr
pop
lea
rol
sub
pop
push
push
push
push
push
call
add
test
addl
push
popa
popf
add
add
lcall
add
rcr
cmpsb
fiaddl
pop
add
lods
incl
add
mov
incl
add
filds
sar
push
je
add
add
loope
incl
jns
nop
loop
add
decl
pushl
push
add
sub
pop
call
push
push
push
push
call
pop
scas
mov
shll
jmp
hlt
add
in
loop
cmpsb
mov
add
les
push
add
inc
int3
pop
add
add
lcall
lods
add
roll
pop
add
je
add
mov
out
push
call
jecxz
mov
jbe
cmc
movb
sahf
add
call
rclb
stc
cmpsb
cltd
mov
sub
lea
push
push
sub
pop
push
push
push
push
push
push
push
push
push
push
call
push
add
add
scas
xchg
add
push
xchg
call
pop
jno
incl
into
pop
add
lahf
push
flds
popf
add
add
add
mov
add
add
roll
lcall
enter
shlb
jp
lea
in
mov
fidivs
in
mov
iret
xlat
push
fcomip
add
ja
mov
in
fsubrs
pushl
push
push
add
push
sub
add
sub
dec
sub
dec
sub
inc
pop
shr
sub
pop
push
inc
sub
pop
push
push
push
call
incl
imull
add
fwait
cmpsl
pop
loop
repnz
icebp
jl
incl
addb
mov
add
lret
add
fadds
ret
xchg
mov
lcall
add
jns
add
jb
jmp
xchg
pop
add
add
add
call
scas
incl
add
add
in
add
clc
outsl
mov
sub
call
push
push
add
push
sub
add
not
sub
add
add
pop
xor
rol
pop
push
inc
ror
dec
pop
pushl
call
push
push
not
lea
sub
pop
call
push
push
add
sub
push
push
pop
add
add
rol
sub
add
shr
pop
add
xor
lea
xor
pop
push
push
push
push
push
push
push
push
push
call
push
incl
jge
movl
push
outsl
jnp
repnz
sahf
push
cmc
fadds
into
push
mov
add
call
cld
pop
jge
pop
add
incl
add
les
aad
pop
mov
add
add
mov
xchg
add
add
cltd
stos
add
loop
incl
add
add
jbe
add
mov
sub
pushl
call
push
xor
add
pop
call
push
push
push
push
push
call
scas
add
add
push
mov
lock
mov
add
in
mov
add
movsb
jmp
pop
pushf
popf
add
add
xchg
inc
shll
outsl
jecxz
incl
incl
add
add
push
add
jle
jmp
mov
add
xchg
xchg
add
scas
cmp
incl
shrl
jmp
push
add
pop
pushl
mov
push
push
push
push
push
push
push
call
add
add
stos
decl
add
pushl
mov
mov
bound
add
sti
fbstp
add
mov
sahf
out
mov
add
call
les
test
call
cltd
call
add
push
jae
test
add
jmp
add
fucom
fldenv
mov
sub
jmp
push
push
xor
not
not
rol
push
or
inc
add
lea
sub
xor
lea
pop
sub
pop
push
sub
not
shl
pop
pushl
call
push
push
push
push
push
push
push
push
call
jb
add
fsubl
add
fnstenv
push
shrb
popa
sar
pushl
imul
iret
mov
xchg
clc
addr16
push
add
xchg
xchg
enter
lods
add
cld
nop
add
cmc
lods
test
lods
mov
fwait
jae
ja
cli
mov
fists
aam
xchg
mov
sub
call
push
push
sub
push
and
add
dec
inc
sub
xor
shl
pop
xor
rol
sub
dec
pop
push
not
rol
pop
pushl
push
shr
pop
call
push
inc
add
inc
pop
push
call
leave
push
push
push
push
push
push
push
push
call
arpl
fisttpll
add
xchg
jnp
shl
add
fcomip
add
add
add
mov
add
add
xchg
cwtl
pop
add
fcompl
pop
add
clc
add
add
jmp
jmp
mov
rorl
add
push
push
push
push
push
push
push
push
call
add
add
sti
mov
add
pop
fwait
testb
add
cmpsb
in
add
outsl
push
addr16
lock
push
subl
incl
add
stc
mov
pop
pusha
add
add
decl
in
pushl
enter
mov
stc
pop
mov
incl
add
mov
incl
lcall
sahf
push
push
push
push
push
push
push
call
cmpsb
mov
subl
je
add
jbe
add
add
ljmp
pushf
cmpsl
jns
stos
sbbb
testl
add
add
call
fbld
jne
sub
incl
test
add
add
mov
add
lret
decl
pop
pop
push
dec
pop
pop
leave
add
push
push
push
push
push
push
call
nop
fdivrp
incl
lds
arpl
loop
push
roll
cld
add
incl
mov
add
incl
in
movsl
xlat
add
arpl
dec
fnstenv
jecxz
add
je
outsl
xlat
scas
in
addb
add
shl
arpl
incl
xchg
fcmovbe
pop
out
xlat
add
add
add
add
add
add
fcmovu
testl
sub
ret
leave
push
dec
pop
ret
push
sub
dec
ror
lea
pop
push
mov
cmpl
jne
push
push
push
push
push
push
call
in
incl
pushl
add
incl
push
bound
add
mov
inc
jo
jo
rclb
pop
add
add
outsl
pop
mov
roll
jp
push
add
dec
cwtl
add
pop
add
pushl
fcomps
pusha
roll
lahf
push
jne
popa
icebp
scas
mov
sub
mov
jmp
push
not
ror
add
pop
mov
push
inc
pop
and
push
add
pop
xor
xor
push
push
call
add
add
shl
insb
add
test
add
fstps
jecxz
in
xchg
add
pop
loop
push
add
loope
mov
jmp
call
cli
push
fwait
add
pop
add
add
mov
add
ljmp
push
pushf
add
jge
cmpsl
add
xlat
jl
incl
incl
decl
fs
add
add
bound
add
mov
jmp
fs
sarl
pop
jge
add
xchg
add
cmpsb
add
xchg
mov
add
roll
fwait
repnz
incl
add
fidivl
add
mov
add
jl
in
into
fs
add
in
lea
out
add
add
pop
mov
ret
incl
add
jmp
sub
push
shr
pop
pushl
pop
sub
push
ror
pop
cmp
jne
mov
lea
push
dec
rol
pop
sub
push
ror
ror
pop
mov
push
lea
ror
sub
pop
shr
push
not
rol
pop
add
sub
pushl
push
push
push
call
add
decl
push
loope
jns
add
xchg
out
fs
jb
add
imul
push
in
imul
decl
stc
add
jge
mov
call
mov
in
add
add
pop
mov
jmp
arpl
mov
flds
loope
je
shrb
add
add
add
pop
shr
and
push
xor
sub
dec
pop
sub
push
push
push
push
push
push
push
push
push
call
fidivrs
sar
je
mov
fisubl
xchg
pop
ror
sar
incl
pop
add
data16
add
lcall
repnz
push
js
in
add
xchg
lea
les
add
rolb
incl
add
xchg
xchg
mov
add
in
fdivr
incl
decl
test
dec
push
shr
dec
pop
ret
push
push
push
push
push
push
push
call
mov
popa
add
call
xlat
jb
jbe
add
incl
add
add
add
fadds
xchg
out
data16
push
incl
xchg
cmc
jl
add
flds
add
push
rcll
add
test
xchg
fsubrp
add
add
incl
lods
hlt
add
int
add
out
add
aad
imul
in
cwtl
mov
add
sub
mov
add
push
push
push
push
push
call
jle
add
push
mov
out
xchg
hlt
mov
add
mov
jbe
in
mov
filds
add
pop
pushf
leave
add
mov
mov
shlb
add
mov
push
pop
aad
mov
add
clc
add
jle
xchg
push
mov
add
add
mov
xchg
mov
sub
push
push
push
push
push
push
call
jb
filds
iret
cltd
stos
jp
les
cwtl
movsl
movb
pop
xchg
ja
mov
scas
pushl
jmp
add
call
push
roll
push
movsb
jp
fisubs
add
pop
fyl2x
pop
outsl
add
add
jecxz
out
add
mov
pop
add
jnp
hlt
les
xchg
pop
mov
incl
call
push
push
not
add
add
shr
pop
mov
push
push
call
pop
shrb
jle
call
add
call
out
aad
jno
xchg
incl
add
lods
xchg
mov
test
add
addb
add
pop
add
add
xchg
scas
imul
add
cltd
flds
nop
add
add
lahf
out
cmc
icebp
roll
cwtl
jmp
add
mov
sub
lea
sub
mov
push
add
lea
lea
lea
pop
shr
push
call
fildl
mov
leave
popa
std
add
add
push
ja
push
add
decl
incl
dec
std
add
add
lret
add
add
incl
std
mov
pop
in
add
jmp
push
loop
popf
mov
jo
add
incl
push
ror
pop
mov
push
push
call
lds
add
jl
add
add
add
add
incl
pop
fstl
mov
loop
lea
push
incl
call
mov
jb
loopne
add
mov
hlt
add
push
add
in
add
add
mov
movsb
add
roll
pushl
ljmp
push
fsubrp
nop
ja
jp
add
jmp
add
lock
incl
incl
pop
or
push
push
push
push
push
push
push
push
call
mov
add
sti
mov
incl
fwait
xchg
jle
add
test
push
mov
ljmp
add
mov
fstpl
movsb
insb
aad
aam
mov
gs
in
filds
add
test
addr16
ljmp
int3
mov
add
pop
ljmp
fdivrl
add
decl
decl
sbb
push
push
push
push
call
add
fnstenv
incl
incl
aad
sarl
incl
add
add
je
hlt
mov
jmp
jnp
mov
add
ja
jle
mov
lret
call
push
int
lea
add
add
faddl
movsb
add
add
add
js
add
add
incl
mov
sub
add
push
lea
pop
xor
mov
and
push
push
push
push
push
call
cld
add
pushf
out
js
mov
add
add
loop
add
add
add
pop
jmp
rcrb
mov
push
les
add
add
fwait
fs
jmp
pop
in
mov
mov
push
add
add
add
add
fdivr
decl
call
add
push
push
call
out
jnp
incl
add
std
push
add
dec
mov
rolb
incl
mov
add
int
ljmp
mov
incl
add
call
add
jns
hlt
add
incl
sti
aad
adc
cwtl
add
popa
mov
add
add
ret
add
incl
or
test
add
push
push
push
push
call
add
jmp
pushf
rolb
add
mov
xlat
mov
add
pop
mov
jb
fldl
lods
jmp
add
add
call
add
call
std
out
add
fadds
in
add
mov
incl
fucomi
jns
add
fs
pushf
mov
add
push
mov
sub
add
push
lea
add
pop
cmpl
jne
xor
pop
push
not
inc
pop
pop
push
push
push
push
push
push
push
push
push
call
call
enter
mov
call
mov
jne
loop
add
xchg
in
xlat
mov
push
imul
pop
xchg
loop
lret
sahf
add
sti
pop
add
add
hlt
add
incl
jmp
add
ret
pushl
mov
add
mov
std
mov
mov
ljmp
xchg
push
add
pop
pop
push
push
push
push
push
push
push
push
push
call
jne
add
fwait
jns
add
mov
mov
add
in
pop
add
xchg
iret
jnp
mov
leave
cltd
push
add
jmp
outsl
in
fstpl
mov
outsl
jge
sarl
incl
add
push
pop
jnp
out
mov
xchg
cld
fcoms
call
mov
call
gs
xlat
in
jmp
in
xchg
insb
sti
add
sub
pop
push
call
mov
add
add
push
mov
add
xlat
movl
fnsave
add
add
add
test
sub
addr16
jnp
cld
mov
add
in
mov
pop
add
add
imul
jno
in
add
add
xchg
in
leave
cltd
incl
jle
decl
leave
ret
push
sub
pop
mov
add
push
shr
shr
xor
sub
pop
push
push
shr
ror
pop
push
push
ror
rol
pop
pop
pop
mov
push
push
push
push
push
push
push
push
call
fs
fildl
mov
add
add
scas
push
mov
push
loop
incl
cld
cli
call
addl
jecxz
add
add
call
cltd
in
pusha
jb
into
in
out
test
push
out
add
sarb
xchg
nop
mov
in
fdivr
call
push
push
push
push
push
call
cmc
add
decl
idiv
add
push
test
clc
idivb
lds
pushl
lea
push
aad
jmp
out
xchg
pusha
ficomps
fdivrl
sbbl
add
fbld
call
mov
cmc
incl
out
lods
add
incl
lcall
incl
call
push
pop
xor
pop
push
sub
pop
pop
pop
push
push
push
push
push
push
push
push
push
call
add
sti
pushl
xchg
pop
jo
add
std
add
sar
incl
test
add
pop
jae
jmp
cwtl
add
jae
cmpsl
shlb
gs
shlb
mov
add
mov
pushf
add
add
add
std
fcomip
add
sub
pop
push
call
test
addb
add
std
add
push
add
loope
add
add
faddl
out
add
add
call
push
test
cmc
cmpsl
xchg
add
fmul
test
ljmp
incl
mov
mov
in
pushf
add
push
sar
lcall
mov
jmp
loopne
add
jp
cld
jbe
movsb
lds
lcall
push
push
push
push
call
add
add
mov
xchg
fidivrs
push
inc
inc
add
call
in
call
ljmp
add
add
fs
movsl
add
fsubrp
push
ret
les
hlt
add
add
add
jge
repnz
roll
jnp
cwtl
loop
add
decl
dec
ret
push
dec
pop
push
mov
push
ror
shr
pop
add
push
dec
pop
push
push
push
push
call
mov
cltd
jne
enter
incl
aad
add
ljmp
shlb
inc
pop
add
pushl
ret
cwtl
add
add
ljmp
push
add
fcmovnu
add
std
add
add
add
call
mov
inc
nop
mov
mov
add
mov
sub
push
push
push
push
push
push
push
call
in
add
add
insb
movl
lret
int3
mov
arpl
add
add
xchg
add
push
add
add
jmp
popa
incl
jp
incl
rcrb
pushl
mov
decl
add
incl
mov
sub
mov
push
push
not
pop
pop
push
sub
dec
pop
lea
sub
push
push
push
push
push
push
push
push
push
call
mov
push
testb
addl
pop
jne
pop
incl
fucomip
add
push
add
add
pop
jmp
jle
xchg
icebp
ljmp
add
clc
add
lea
fwait
incl
into
icebp
hlt
add
jne
je
jmp
lcall
mov
lock
add
sub
mov
shr
add
push
push
push
push
push
call
mov
jae
add
add
loope
addb
add
roll
cmc
add
call
cmpsl
pop
add
adcb
lcall
incl
add
jmp
add
stc
movsb
shll
add
testb
std
int3
add
jge
popf
add
cltd
jne
incl
loope
add
mov
sub
mov
add
pushl
push
push
push
call
add
dec
jmp
mov
add
push
mov
fs
add
add
add
nop
push
fadd
add
fldenv
je
push
mov
sbb
jb
call
add
in
js
out
push
add
jne
add
push
push
popf
add
cld
jp
mov
sub
popl
push
sub
pop
mov
push
shl
not
pop
add
push
push
push
push
call
add
jno
leave
add
incl
cwtl
mov
add
push
add
jbe
insb
std
mov
js
jmp
aam
mov
add
add
xchg
in
add
hlt
mov
incl
fistpll
add
incl
add
ljmp
mov
testl
sub
xor
lea
push
ror
shl
shl
shr
pop
mov
push
ror
rol
pop
add
push
inc
add
xor
pop
xor
call
add
push
call
cltd
mov
add
in
jle
xchg
mov
push
stc
mov
imul
add
add
lret
jnp
lcall
add
jmp
pushl
add
incl
add
jmp
cltd
jmp
stos
add
arpl
incl
add
loope
mov
xchg
xchg
pop
decl
nop
push
shl
lea
pop
nop
push
inc
pop
cmp
je
push
not
not
shr
pop
nop
push
inc
pop
nop
push
push
push
push
push
push
push
push
push
call
shll
add
incl
mov
test
add
add
mov
imul
jo
lret
lods
repnz
test
add
inc
pop
stos
add
nop
cli
idiv
xchg
add
xchg
mov
jp
int
lea
in
pop
pop
xchg
loopne
incl
add
testb
incl
orl
mov
push
push
push
push
push
call
jo
xchg
inc
add
add
inc
movsb
jmp
add
in
out
rol
pop
sbb
icebp
aam
pushl
add
pop
mov
mov
call
imull
movb
jmp
pop
rcr
pop
push
mov
addr16
add
incl
add
mov
add
out
mov
fdivr
call
mov
pop
nop
push
ror
pop
cmp
jb
push
not
dec
dec
pop
xor
push
call
add
push
add
add
mov
incl
pop
popa
test
add
ljmp
jno
mov
lcall
jmp
fdiv
incl
gs
mov
mov
add
cli
js
nop
add
add
test
mov
data16
ljmp
into
xchg
call
clc
jmp
mov
push
push
push
push
push
push
call
pop
in
add
push
add
js
incl
mov
movsb
pushl
add
into
aam
roll
loopnew
add
add
mov
loopne
cld
add
out
fucomi
mov
add
add
in
mov
pop
lcall
pop
lahf
add
jp
in
stos
jp
out
add
add
fnstsw
sub
add
push
inc
pop
movzwl
push
call
push
add
cmc
mov
decl
add
push
int3
add
add
je
ljmp
jmp
jmp
add
mov
add
push
xchg
add
fidivl
push
add
shrl
hlt
add
add
xchg
add
fiaddl
rolb
add
pop
add
decl
push
push
push
push
push
push
push
push
call
xchg
mov
cwtl
pop
add
incl
out
push
jmp
ljmp
add
test
scas
mov
add
mov
incl
clc
mov
in
add
add
add
cld
data16
popf
jmp
add
mov
in
jmp
jecxz
add
pop
jne
roll
push
leave
add
add
add
mov
sub
add
push
call
nop
fs
jo
add
out
fnstsw
in
lret
add
push
add
jmp
shlb
fwait
js
push
jbe
add
mov
add
jle
add
filds
add
mov
mov
push
clc
add
mov
lcall
aam
mov
mov
sub
mov
push
push
call
add
hlt
jns
test
add
decl
imul
mov
lcall
pop
add
xchg
ljmp
stos
add
mov
call
pushf
add
add
mov
stc
add
add
gs
mov
call
jbe
jle
add
ja
add
incl
sarl
push
incl
pushl
leave
xor
push
ror
shr
add
pop
shl
push
add
ror
pop
xor
shl
xor
push
push
push
push
push
push
push
push
push
call
xchg
push
mov
push
fs
jmp
add
add
pop
enter
subb
add
jmp
mul
test
insb
movb
clc
jb
lock
mov
cwtl
incl
add
imul
fadds
pop
add
repnz
lcall
mov
incl
or
or
push
ror
not
pop
mov
add
pop
push
push
push
push
push
push
push
push
push
call
add
mov
incl
in
fsts
pop
rolb
call
add
pop
loopne
testb
add
add
stos
xchg
jb
push
add
lods
call
add
lcall
incl
scas
mov
mov
xchg
incl
mov
add
xchg
add
call
gs
add
dec
mov
add
add
lcall
mov
sub
pop
push
push
push
push
push
call
mov
add
arpl
call
incl
jnp
add
pop
add
pushl
call
out
pop
dec
jnp
call
mov
jp
incl
mov
xchg
sti
add
add
lcall
lea
jnp
ret
insb
enter
sti
movl
leave
ja
sti
add
pop
pop
push
sub
sub
not
rol
pop
leave
push
push
call
lods
imul
push
add
add
add
add
cmpsl
iret
cli
ret
add
sbbl
loope
addr16
mov
iret
mov
xlat
roll
pushl
incl
jge
mov
add
add
outsl
add
scas
incl
in
add
jne
add
pop
mov
add
mov
sub
ret
push
mov
push
push
call
xchg
imul
incl
add
incl
rolb
in
add
test
add
mov
add
add
icebp
mov
incl
call
add
add
mov
mov
hlt
add
cld
xchg
bound
decl
jge
stos
clc
popf
mov
sub
push
push
push
push
push
call
int3
add
mov
ret
add
addr16
add
out
add
mov
add
rcr
jmp
add
decl
lods
mov
mov
add
mov
loope
mov
sti
mov
stc
call
add
inc
add
push
push
push
push
push
push
push
call
test
add
decl
xchg
add
nop
bound
incl
add
les
mov
push
out
cwtl
add
incl
in
push
add
out
add
out
pushl
test
test
add
call
movsl
add
sarb
jmp
jmp
add
pop
hlt
mov
sub
push
push
not
pop
mov
push
push
push
push
push
push
push
call
jno
int3
add
enter
jge
add
add
push
add
notb
incl
jbe
bound
push
add
cltd
incl
test
jmp
xchg
add
mov
xchg
add
cld
stc
push
add
fistpl
cld
out
pop
add
add
lcall
lds
loopne
adc
sbb
push
push
push
call
add
add
loop
lahf
movb
add
pop
jns
xchg
xchg
pop
mov
add
lods
add
mov
fstpl
add
add
mov
jge
jns
incl
lds
add
les
lcall
pop
xchg
pop
decl
incl
add
push
push
push
push
push
push
push
call
lcall
pop
xchg
push
call
lds
jl
stos
popf
mov
in
mov
jmp
xchg
push
cld
fstpl
imul
xlat
add
lcall
add
shlb
decl
aam
pushl
add
add
decl
incl
mov
add
add
add
fildll
mov
sub
mov
test
je
push
shl
pop
mov
push
add
add
dec
pop
mov
mov
push
push
push
push
push
push
call
xchg
mov
incl
add
lock
call
add
stos
cmpsl
jb
add
inc
xchg
out
shl
add
add
stos
push
bound
dec
jmp
mov
iret
lods
pop
call
popf
iret
add
imul
flds
add
jbe
rcr
jmp
add
addl
cltd
rolb
rolb
enter
in
in
incl
sub
add
sub
pop
cmp
je
push
push
push
push
push
push
push
push
call
add
movsl
decl
lcall
test
je
loopne
jecxz
add
xchg
mov
jne
add
imul
lret
pushl
jae
arpl
add
add
jns
add
add
add
out
fs
add
add
call
add
into
lcall
mov
sub
test
je
mov
push
sub
add
xor
pop
inc
push
rol
pop
cmp
je
push
sub
sub
add
dec
pop
test
jne
xor
push
shl
add
pop
pop
pop
pop
push
xor
pop
pop
leave
push
sub
add
pop
ret
mov
push
push
push
call
jecxz
add
les
xchg
add
add
add
into
incl
inc
ljmp
leave
mov
fwait
into
pop
add
jl
pop
mov
push
loopne
aad
lcall
lods
add
jne
add
add
repnz
incl
in
mov
mov
rcl
test
xchg
lods
lahf
cld
enter
imul
pop
pop
lods
mov
sub
inc
cmp
jne
lea
push
push
push
push
call
mov
add
mov
incl
mov
add
mov
add
std
add
incl
int3
shlb
cmpsb
cwtl
add
incl
jae
mov
cmc
add
addb
lea
add
add
jmp
add
add
add
add
add
clc
add
decl
into
fldl
in
decb
decl
je
push
add
lea
not
pop
mov
push
lea
rol
pop
add
cmp
jne
push
push
push
push
push
push
push
call
add
mov
fcompl
jo
pushf
add
lods
fwait
add
mov
fldt
add
out
mov
add
roll
call
mov
test
nop
js
mov
arpl
mov
sarl
push
stos
cli
add
jo
ljmp
add
fcmovne
add
mov
mov
incl
lods
nop
add
add
mov
testb
incl
add
add
push
push
push
push
call
decl
xlat
in
sahf
mov
add
jecxz
incl
add
jp
pop
xchg
add
stos
push
bound
add
incl
add
into
out
insb
lret
xchg
test
in
test
xor
call
loope
mov
lcall
pop
cld
add
jne
insb
xchg
push
addb
jae
shr
ja
jmp
add
stos
add
incl
decl
imul
jmp
leave
rolb
jno
insb
add
add
stos
cli
lds
ja
lods
add
jb
lods
int
mov
enter
add
mov
bound
add
jbe
jmp
add
add
pop
icebp
mov
shl
add
pushfw
int
add
cwtl
jbe
incl
add
call
jns
add
test
add
fcomi
push
cli
mov
jae
imul
pusha
jmp
mov
xchg
rolb
add
pusha
jb
add
pop
mov
mov
add
mov
jmp
xchg
xlat
call
gs
in
xchg
pushl
mov
div
add
fmull
ljmp
popa
fisttps
decl
mov
sub
cmp
je
push
push
push
push
push
push
push
push
call
mov
test
push
mov
in
xchg
cltd
pop
std
add
add
fsubrl
mov
add
pushl
xchg
loop
incl
mov
pusha
hlt
jb
add
ljmp
ja
add
jp
jmp
cwtl
call
ljmp
add
movsb
ret
inc
addr16
push
mov
sub
jmp
xor
push
not
lea
dec
add
pop
pop
pop
pop
push
push
push
push
push
push
call
mov
mov
push
incl
mov
add
in
xor
pushl
add
xchg
add
xchg
pop
mov
repnz
add
jns
add
jnp
lods
incl
lods
add
jbe
mov
xchg
lock
add
add
in
in
lcall
push
rol
shl
pop
ret
lea
pop
push
dec
inc
pop
pop
pop
pop
push
push
push
push
push
call
fsts
shl
ljmp
push
push
fildl
add
ljmp
fisubrl
aad
push
mov
xchg
pushl
idiv
jns
incl
push
add
imul
incl
pushl
scas
add
leave
ret
mov
push
lea
shr
add
add
pop
pop
pop
push
add
pop
pop
push
lea
lea
sub
pop
pop
push
push
push
push
call
add
push
roll
testb
lds
imull
stos
add
lret
rcrl
incl
push
out
ljmp
push
lcall
movsl
mov
in
mov
mov
mov
add
add
add
jmp
push
incl
add
call
data16
jbe
incl
jo
add
filds
xchg
add
scas
int
add
mov
sub
leave
push
sub
pop
ret
push
inc
pop
rol
push
push
push
push
push
push
push
call
je
test
add
add
loope
push
pop
in
in
rcll
add
imul
mov
pop
movsl
imul
mov
xchg
incl
add
stos
push
add
addr16
incl
add
mov
push
incl
xchg
popa
jmp
jns
mov
xchg
into
push
mov
incl
inc
rolb
add
not
pop
cmpb
jne
ret
out
and
movl
les
jecxz
out
jecxz
les
lods
xchg
les
and
out
and
out
cmpsb
xchg
out
mov
xchg
les
ror
cmp
inc
out
rolb
or
inc
shll
jae
or
outsl
mov
sub
push
and
add
inc
jp
aas
xchg
stos
rcrl
sub
xchg
dec
out
mov
lahf
push
popa
xchg
mov
mov
mov
mov
mov
inc
jl
xchg
lahf
pushf
xchg
mov
les
gs
int3
shll
push
add
jo
or
cmp
jg
aaa
sarb
sub
inc
inc
push
push
test
in
ja
jb
jmp
dec
test
jmp
jecxz
push
xor
or
pop
inc
lods
cs
mov
push
xor
push
jae
inc
jb
rolb
jnp
dec
inc
repz
xlat
or
jne
mov
daa
cli
adc
cmp
add
pop
pop
or
cmp
jl
mov
push
and
and
mov
repnz
int3
pushf
enter
or
jmp
or
and
fwait
mov
sub
mov
test
and
add
call
push
cli
inc
scas
movsl
imul
cmpsb
dec
sbb
add
aam
dec
pop
sub
push
imul
mov
mov
push
stos
out
cld
xor
jmp
pop
push
es
inc
out
add
fcom
scas
xchg
add
aam
cmp
jne
pop
adc
repnz
pop
xor
sub
fldl
and
enter
add
or
das
pop
dec
xchg
pop
sbb
pop
js
push
push
jae
pushf
pop
mov
enter
pop
xchg
adc
sti
mov
jmp
sahf
or
pop
dec
aas
std
fidivrl
es
dec
sbb
mov
add
pop
sub
mov
pminsw
push
pushf
jne
mov
fwait
sub
hlt
lcall
mov
movsb
fbld
das
loope
ja
lcall
pushf
adc
cltd
inc
push
cwtl
test
and
sbb
hlt
addr16
sub
inc
adc
jns
and
imul
shll
sub
out
fisubrl
cmp
or
enter
sbb
pop
clc
cmpsb
jecxz
int3
adc
add
mov
js
mov
mov
sub
stc
inc
mov
ret
cmp
adc
arpl
lcall
out
call
add
push
out
or
adc
arpl
scas
mov
stos
out
scas
jge
out
mov
add
adc
jo
mov
xchg
mov
shl
adc
inc
inc
pop
cld
iret
jle
sub
aaa
pop
mov
jecxz
xchg
push
and
in
mov
add
jl
dec
fmuls
jl
test
std
sarb
divb
jbe
xor
adc
or
loope
xchg
fs
ficoms
cs
loopne
mov
pop
push
sbb
push
stos
loopne
out
cli
jno
in
pop
imul
test
mov
testl
cmp
imul
or
adc
outsb
bound
ret
arpl
incb
add
jg
fidivrs
sbb
lret
mov
push
shl
jle
pop
dec
mov
test
pop
loop
pop
cmp
es
test
mov
sbb
push
sbb
cmpsl
pop
dec
cmp
mov
push
jmp
xchg
sbb
fistps
cmp
fincstp
and
jmp
jle
fs
decl
inc
mov
jne
pop
jl
mov
push
nop
fisubs
cmpsl
or
mov
inc
mov
sub
mov
sub
dec
sub
jne
fabs
push
lds
loope
cwtl
mov
pop
dec
adc
rcrl
and
push
add
jg
not
sub
daa
add
xchg
xor
push
gs
mov
xchg
cwtl
cmovo
outsb
bound
adc
insl
sbb
imul
jl
xchg
fmull
sub
insl
inc
jae
rolb
sahf
pop
adc
jns
jmp
mov
mov
roll
sub
push
dec
xchg
pop
aas
and
lahf
xchg
mov
cld
cld
mov
cmp
aam
add
pusha
inc
dec
or
bound
adc
mov
mov
cmp
mov
cmc
fs
inc
outsb
pop
xor
out
lahf
cmpsl
clc
aas
in
or
test
sbb
insb
mov
cmpsl
adc
sahf
fisttps
aad
add
dec
ss
stos
scas
mov
iret
sahf
popf
das
call
xchg
adc
mov
sbb
test
mov
and
and
dec
cmp
sub
inc
stos
push
in
aas
pop
jmp
fistpll
or
jb
lds
test
sbbl
sbb
into
into
clc
popf
out
mov
sahf
inc
imul
push
xchg
ftst
push
adc
adc
dec
loope
and
lcall
mov
loop
xchg
cmp
dec
add
out
frstor
mov
cmp
andb
mov
sub
shlb
call
testl
and
clc
fistl
test
dec
adc
mov
jns
pusha
mov
jo
mov
jmp
int
push
pop
push
lret
mov
cld
add
adcl
xlat
jl
mov
clc
jmp
jge
into
push
in
xchg
and
add
xchg
ss
je
mov
pop
gs
data16
stos
mov
or
sub
es
scas
stc
mov
mov
xor
or
or
das
mov
xor
lret
mov
das
jb
or
leave
mov
es
repz
cwtl
push
adc
sub
push
dec
in
test
sbb
fcmovne
mov
cmp
sahf
cmp
pop
lcall
test
mov
mov
sarb
mov
dec
in
mov
loopne
pop
xor
mov
adc
cmpsb
pop
xlat
mov
stc
call
sbbb
inc
stc
ljmp
pop
sti
mov
pop
dec
cli
jge
add
dec
enter
rcrl
xor
dec
jo
ja
scas
lds
out
dec
mov
js
mov
gs
stos
or
lret
dec
iret
xor
fwait
mov
sti
push
and
and
test
pop
inc
jo
cmp
inc
arpl
loopne
hlt
jl
mov
cmp
cltd
jo
insl
orb
adc
cmp
xchg
mov
jb
fsubrs
and
fs
inc
outsl
adc
mov
cli
in
inc
imul
sbb
xchg
sbb
or
les
scas
cltd
inc
adc
ffree
mul
movsb
in
and
lods
aam
fldl
std
in
scas
fs
adc
push
popa
cs
fnsave
sbb
jae
push
mov
and
roll
fisttps
or
test
pop
dec
xchg
xchg
ja
shl
mov
out
add
insb
mov
ss
jbe
jns
bound
xor
fsub
xchg
dec
ficoms
mov
sbb
lret
xor
push
loop
or
fistpl
aas
inc
les
jae
out
decl
push
andl
xchg
cmp
jp
cmpsb
dec
cmpsl
dec
jge
inc
aas
mov
push
cltd
or
or
daa
inc
dec
dec
inc
mov
leave
sbb
data16
hlt
fs
push
or
cmc
ds
sbb
sbb
sahf
bnd
or
popf
pop
hlt
push
mov
lret
fistl
jne
in
je
jnp
and
out
inc
aam
xchg
xchg
push
je
outsl
add
sar
inc
push
ss
popf
and
cmp
xchg
or
test
cltd
leave
push
mov
fsubrp
cmp
sub
sbb
ljmp
cld
ret
add
pop
xor
out
sbb
call
dec
jo
popf
filds
orl
jecxz
push
imul
pop
dec
fisubs
imul
aam
push
jne
fmull
shll
sub
ds
imul
pop
mov
mov
add
ds
dec
cmpsl
es
mov
push
in
mov
mov
push
loope
mov
sbb
les
les
std
fildll
jns
idivl
stos
mov
fadds
add
setge
mov
sub
arpl
outsb
sbb
leave
push
jno
ss
idivl
rorb
mov
clc
jmp
aad
mov
ret
bound
xchg
jo
mov
lret
adc
mov
jae
push
mov
dec
lret
cmpsl
ja
mov
cmp
movsl
cmpsb
lahf
mov
xchg
adc
das
adc
mov
std
icebp
cmpsb
int
leave
xchg
pop
in
sbb
aam
imul
pop
lods
push
xchg
rcrl
popf
fdivl
lods
rcr
mov
pop
scas
insl
outsl
mov
and
mov
and
cmpsb
cmp
mov
xchg
or
mov
mov
sbb
sbb
fldenv
cmpsb
cmc
mov
nop
stc
push
jg
scas
xlat
and
sub
movsl
push
mov
leave
push
fcomip
cmpsl
push
cltd
add
test
arpl
push
bnd
bnd
cmp
arpl
jo
cmp
imul
std
or
push
stc
sbb
rcrl
loope
cmp
nop
jl
test
inc
nop
inc
shlb
and
stc
das
xchg
call
imul
mov
dec
ret
scas
sahf
nop
or
aas
inc
imul
sub
ljmp
jno
push
dec
adc
pop
mov
adc
sti
mov
inc
dec
in
cmpsb
into
jge
ret
push
adcb
je
daa
imul
aam
movsl
test
je
jecxz
inc
push
lea
gs
rcr
lcall
test
pop
pop
and
adc
scas
push
das
push
addr16
inc
int
inc
pop
fisubl
cs
adc
stos
les
icebp
addr16
add
jne
es
xchg
jne
ret
ret
mov
jnp
inc
jns
or
mov
movsb
jg
push
ja
lock
sbb
mov
jg
push
mov
xor
stc
sub
clc
lcall
adcl
mov
cld
aad
pop
fsqrt
fdivp
sarb
pop
fnstsw
push
sub
mov
std
mov
in
mov
inc
sbb
lcall
pop
cmp
jne
add
adc
repnz
adc
stc
scas
fildl
and
sarl
adc
dec
repz
loop
lret
jnp
data16
sti
push
test
add
inc
sbb
lea
int
lcall
sub
push
sbb
inc
lret
pushf
cmc
loop
xchg
dec
pop
push
sbb
jns
outsl
into
mov
mov
add
stc
sub
imul
loopne
pusha
js
lock
cmp
pop
lcall
xchg
nop
lods
je
jmp
pop
mov
stos
dec
push
push
push
out
outsl
sbb
xchg
jge
mov
loope
in
mov
lock
jne
add
je
mov
or
mov
jb
mov
pop
jmp
push
into
inc
das
lahf
mov
mov
pop
je
lds
mov
sbb
ljmp
call
jns
xor
repz
cld
leave
fs
xchg
cmp
inc
inc
lds
adc
cmp
jmp
nop
push
mov
stos
mov
xor
or
shr
sbb
out
loop
je
cmpsl
mov
cmp
adc
fimuls
add
mov
fildll
mov
pop
in
add
sub
sti
stos
push
mov
push
dec
shll
daa
sbb
cs
adc
cmp
or
mov
test
or
lea
popa
inc
pop
pushf
push
shll
dec
test
popf
push
xchg
jl
ss
mov
xchg
outsl
push
push
stos
pop
cmpsl
stos
cli
repz
dec
addr16
add
inc
sub
jg
add
scas
sub
pop
xorl
mov
xchg
bnd
popa
add
mov
mov
addr16
xchg
push
arpl
popf
ret
fmul
seto
push
pop
cmp
outsb
ret
dec
fsubrs
jns
out
cmp
les
arpl
fldcw
xlat
int
push
out
and
or
adc
fidivrl
or
mov
addl
jne
mov
orb
fs
ja
bound
mov
in
loop
sbb
test
lock
movsl
cmp
pop
or
xchg
jae
call
and
sahf
mov
movsl
movsb
mov
and
stos
out
pop
daa
jne
cmp
xchg
leave
pop
sahf
ret
sbb
fcomi
jle
loop
or
lods
push
aaa
movsl
sbb
inc
sub
mov
mov
sbb
xchg
test
fcos
loopne
in
ss
shlb
fs
icebp
ss
mov
sbbl
jns
mov
mov
ljmp
sub
jge
insl
lcall
mov
sbb
fistps
pop
pop
pop
add
xor
roll
clc
hlt
pop
jne
nop
add
jnp
imul
xchg
mov
bound
inc
jnp
xor
pusha
lcall
aaa
mov
adc
dec
xor
mov
mov
dec
and
fs
mov
lret
push
std
insl
xchg
or
lcall
add
push
sub
dec
rcrl
test
jnp
add
popa
mov
ds
gs
pop
jns
mov
cmp
sub
jmp
mov
gs
lods
mov
iret
and
data16
push
arpl
and
popa
test
dec
loop
ss
inc
add
add
dec
je
out
and
push
loopne
aam
pop
sbb
mov
inc
or
cwtl
loope
xlat
add
fisubrl
mov
dec
add
out
rcrl
jge
lcall
pop
pop
aad
inc
jns
sbb
mov
adc
imul
lock
in
mov
aaa
cwtl
stos
xor
aam
ljmp
mov
pop
xchg
fdivrl
imul
push
mov
fistps
cmp
test
pop
sub
xchg
dec
and
xor
push
divl
dec
push
sbb
inc
xor
shlb
xchg
stc
into
xlat
mull
mov
xor
nop
xor
jmp
add
das
sbb
daa
jecxz
mov
fwait
jnp
sbb
pop
xorl
aad
enter
data16
into
rorb
stos
pop
mov
mov
scas
sub
dec
out
mov
int
fwait
push
xchg
cwtl
dec
scas
inc
int
adc
push
hlt
push
stos
rcr
inc
mov
popa
xor
mov
cli
cld
xchg
repz
mov
loopne
cmp
pop
fs
cmp
pop
sbb
arpl
mov
push
mov
adc
pop
rolb
cmpsw
shrb
cmc
test
test
dec
xchg
mov
pop
sub
push
mov
in
xchg
and
hlt
mov
lret
sbb
inc
call
mov
ficoms
cmp
push
sub
mov
sbb
xchg
jg
mov
jno
js
lods
dec
aaa
aad
fcoms
mov
or
daa
cld
xchg
insl
int3
push
ds
inc
lret
adc
xchg
test
and
pop
pop
out
push
outsb
xchg
iret
adc
or
mov
dec
or
mov
xchg
mov
enter
pop
repnz
add
mov
pop
imul
xorb
mov
outsb
or
mov
fcomi
loopne
fadds
mov
daa
or
aam
mov
iret
jne
mov
mov
cmp
in
dec
and
push
stc
inc
test
lret
push
pusha
sub
jmp
and
movsb
sbb
xor
ds
dec
leave
xor
in
lods
push
pushf
mov
xchg
pop
jecxz
lcall
je
mov
push
sub
testl
repnz
mov
cwtl
ds
xor
and
hlt
inc
xor
add
hlt
cwtl
fistpll
add
mov
int3
roll
in
fstl
lds
into
pop
ret
adc
test
or
rclb
mov
cld
inc
movsb
sub
xchg
push
xchg
sub
fdivl
xlat
in
fisttpl
hlt
sub
xchg
adc
daa
arpl
mov
sub
push
inc
push
js
cli
ljmp
dec
xlat
pop
addr16
push
sbb
xchg
sub
jp
sbbb
sti
mov
imul
adc
mov
lret
or
mov
xor
pop
icebp
dec
jecxz
lea
jmp
push
xchg
les
fisubrs
je
cld
add
ljmp
shll
jnp
push
add
outsb
mov
xor
xlat
test
cld
cmp
jnp
mov
xchg
sbb
lods
out
aas
hlt
pop
mov
leave
adc
repnz
fidivrl
xor
inc
loope
dec
fsubp
pop
shl
inc
jne
push
dec
push
es
mov
out
insb
jmp
lods
rclb
cmp
cmp
mov
dec
arpl
jp
mov
pop
mov
sub
out
jae
jge
mov
push
dec
addl
mov
daa
enter
stos
sub
out
sarb
fstps
push
fisubrs
mov
mov
fcoml
inc
nop
add
sbb
add
test
jmp
or
xchg
shlb
push
and
jbe
loop
setns
sbbb
and
loope
lret
mov
jmp
cltd
jl
inc
sbb
pop
mov
ss
and
or
shlb
ds
fadd
sbb
std
xlat
mov
pop
cmp
cld
inc
jnp
in
lcall
popf
and
fsubrl
dec
jle
dec
bound
test
daa
mov
xchg
negl
pop
daa
mov
mov
lcall
repnz
sbb
jg
jns
ljmp
divb
in
sub
push
mov
insl
aas
jnp
jmp
mov
ss
imul
dec
xor
test
out
and
bnd
pusha
out
mov
retw
lds
inc
mov
inc
js
mov
out
movsb
xchg
or
adc
adc
inc
mov
movsb
xchg
movsl
out
push
mov
sbb
add
fstpt
inc
mov
push
loop
fisubl
dec
inc
cmp
fs
sub
lahf
jge
xchg
ja
repnz
data16
dec
pusha
fs
push
sbb
movsl
lods
mov
pop
push
xor
pop
xor
loope
mov
or
les
in
mov
cmp
and
mov
in
in
pop
jnp
lods
mov
lret
cwtl
outsb
into
pop
sbb
mov
mov
dec
or
test
das
shr
adcl
insl
xchg
in
fs
and
addr16
sarl
cmp
mov
adc
mov
or
movsl
mov
cmpsl
pop
aas
inc
ljmp
and
cmp
jp
jno
or
test
xchg
lcall
pop
in
ljmp
xor
xor
std
popa
sbb
add
mov
scas
cmp
mov
movsl
fcompl
and
out
aaa
sub
cmpsl
add
adc
xor
xchg
mov
clc
scas
dec
xchg
shrb
sub
push
mov
xchg
jle
flds
mov
clc
iret
out
dec
adc
pop
mov
insl
dec
aad
sahf
sbb
inc
out
mov
testb
test
fsubrs
sbb
sarb
loope
mov
mov
js
scas
mov
lret
pushf
mov
gs
cvtdq2ps
sbb
inc
das
mov
push
sbb
dec
cmp
pushf
or
cmp
dec
adc
test
aas
jbe
sbb
and
aaa
or
imul
nop
adc
jb
or
lcall
dec
ljmp
cmp
repz
push
pop
jbe
inc
mov
ja
mov
adc
sbb
lret
sarl
insb
ficoms
mov
add
ds
call
add
dec
mov
mov
mov
mov
daa
adc
ljmp
jnp
testl
jp
addr16
adc
jg
das
fs
mov
jbe
sub
jge
stc
movsb
xor
sti
sub
cmp
or
jmp
test
cmc
xchg
mov
aam
int
cmp
mov
daa
mov
pop
mov
mov
testl
into
xor
loopne
jmp
mov
mov
shll
sub
lret
daa
jbe
sub
pop
aaa
mov
push
ret
out
ja
leave
adc
js
pop
fidivrl
pmulhuw
ljmp
inc
subl
push
mov
movsb
xchg
ja
sbb
cmpsl
out
in
jbe
lds
int3
and
enter
setne
popf
push
cmp
sti
sub
mov
jg
cmp
jp
or
pop
sbbl
flds
cmp
inc
cltd
sti
push
imul
and
jnp
xchg
clc
jns
mov
and
jmp
sbb
add
push
loope
shlb
add
mov
jmp
mov
sbb
mov
sub
jno
dec
sub
fst
adcb
push
stos
jle
dec
out
xor
mov
rcrb
js
inc
scas
add
push
fisttpll
mov
dec
xor
push
dec
addr16
nop
or
iret
movsb
shll
and
adc
push
cmp
mov
sbb
inc
loop
cmpsb
pop
pop
ljmp
test
pop
cmpl
int
xchg
sbb
jnp
mov
out
push
inc
in
and
loope
in
outsb
int3
ljmp
add
adc
scas
sbb
mov
jb
or
stc
and
push
cld
fistl
or
jno
sub
adc
cmp
jmp
push
lret
icebp
sub
pop
mov
out
bound
inc
dec
movb
stos
das
push
and
inc
call
push
int
setge
shlb
clc
iret
not
mov
push
pop
rclb
aam
mov
ret
js
mov
sub
mov
cs
mov
xorl
sub
mov
push
xchg
push
xor
xchg
testl
sahf
adc
clc
and
push
add
xchg
ret
jg
and
sti
cltd
fisttpl
push
cmp
mov
iret
ljmp
or
imul
pop
in
and
adc
jl
pop
push
cltd
xchg
in
jp
jno
pop
aad
mul
lds
bound
dec
jne
sbb
and
push
add
lcall
xor
xchg
fsubl
cltd
fdivl
cmp
dec
call
add
daa
dec
mov
test
dec
or
jecxz
dec
adcb
or
rorb
sbb
xchg
cwtl
adc
mov
aaa
jge
lods
xchg
or
lock
sbb
leave
cmc
js
test
jno
stos
inc
es
imul
je
leave
xchg
mov
xchg
dec
mov
insl
cmp
ret
cltd
lds
shll
mov
jb
inc
lcall
into
sbb
je
mov
cmpsb
movsb
xchg
pushl
outsl
or
mov
movsb
cmp
cmc
mov
mov
or
adc
xor
jl
mov
outsb
cmp
les
scas
fstps
outsl
mov
pushf
notb
xlat
push
jne
sub
push
fwait
jp
inc
mov
sahf
pusha
jmp
aad
shl
int
mov
add
cmc
add
shll
inc
jne
lret
mov
lods
nop
aam
int3
leave
mov
test
into
loopne
scas
iret
sbb
cmpsb
outsb
repz
push
xor
scas
daa
aas
jno
scas
cwtl
add
sbbl
cmpsl
xchg
mov
inc
gs
lret
xlat
xchg
jnp
nop
cltd
and
inc
xor
push
shlb
push
or
sub
mov
cmp
adc
or
sbb
icebp
jmp
mov
nop
in
dec
add
push
mov
push
xchg
loopne
sbb
cwtl
in
push
dec
sub
mov
pop
jae
sub
stc
xchg
push
xchg
push
adc
lock
xor
test
outsl
cmp
xor
add
test
xchg
mov
xchg
repnz
movsl
mov
repnz
pop
stos
aam
idiv
push
adcl
js
xchg
pop
addl
imul
test
mov
sar
sbb
and
dec
inc
in
or
loope
shlb
cmpsl
addl
into
jb
or
lods
add
jg
jmp
test
stc
mov
sti
mov
jmp
mov
sti
lret
out
mov
sub
cs
mov
leave
roll
lea
pop
sub
cmp
stc
jmp
xchg
push
fs
ret
lret
push
mov
test
inc
fcomps
add
add
into
imul
loop
mov
in
push
in
imul
cld
in
data16
dec
xlat
dec
add
jno
adc
push
dec
fs
xchg
sbb
lret
xchg
test
jle
dec
mov
add
mov
mov
mov
aad
and
inc
mov
insl
pop
xor
ja
movsb
mov
push
shl
or
or
dec
xchg
adc
pop
mov
adc
add
inc
sub
push
pop
cltd
pop
or
test
rcrb
test
adc
pop
leave
sub
cltd
lea
sbbb
pop
pop
daa
jnp
add
jl
pop
mov
sub
mov
push
jecxz
stos
lahf
mov
js
push
into
lods
push
xor
out
adc
enter
xchg
movsb
movsb
or
mov
jp
xor
imul
rorl
mov
divb
repz
into
ficompl
sbb
int
lods
xchg
je
popl
mov
inc
in
dec
push
mov
out
and
psadbw
push
rcrb
daa
xor
xorl
pushf
mov
lds
test
ljmp
pop
ror
mov
test
cwtl
test
xor
cmp
jle
mov
dec
stc
push
pop
mov
icebp
adc
xor
mov
js
jp
fsts
jecxz
stos
push
xlat
add
ja
pop
nop
cmpsl
mov
xchg
cmp
insl
leave
jp
lret
leave
test
xchg
cmp
and
push
lods
je
sub
or
mov
sahf
sub
inc
sbb
mov
aad
cmp
out
xor
push
test
pop
sub
sbb
or
mov
inc
xlat
adc
in
add
push
jle
in
in
stc
xchg
xlat
ljmp
add
jno
mov
imul
lahf
and
dec
adc
imul
andl
and
adc
in
stc
call
aas
pop
pop
add
jl
arpl
addr16
jp
aaa
das
iret
cmpsb
sti
int3
aam
out
roll
clc
jbe
or
lcall
hlt
adc
jo
negb
daa
cmpsl
cmp
cltd
xchg
jecxz
adc
cld
addr16
rorb
or
dec
xchg
push
pop
mov
inc
in
scas
push
adc
loop
mov
repnz
mov
cwtl
int
cmpsb
push
push
mov
push
cli
push
xchg
cmp
lea
stos
lea
sti
jnp
and
push
push
push
aam
xor
mov
push
sub
mov
xor
stc
mov
aam
push
jg
adc
jns
inc
mov
fdivrl
jmp
scas
or
sbb
push
xor
fldcw
xchg
cmc
adc
sub
mov
and
sub
pop
dec
das
bound
mov
daa
es
xchg
pop
mov
push
in
movsb
mov
fcmove
push
aas
lods
pop
repnz
pop
popa
stc
and
inc
dec
inc
add
inc
cmp
mov
fcompl
leave
push
data16
out
xchg
repnz
mov
add
loopne
jmp
jmp
das
cld
and
inc
movsl
clc
pop
js
xchg
ror
cmp
imul
push
cwtl
fcmovne
sub
cltd
xlat
or
jo
xchg
popf
rorb
out
dec
add
cwtl
and
daa
loop
out
jmp
stc
fwait
sub
inc
mov
mov
int3
cmp
jnp
mov
dec
test
aaa
fs
pop
mov
divb
pop
pusha
mov
pop
mov
sbb
repnz
push
mov
mov
xor
loope
xchg
ljmp
fistl
or
jecxz
aam
and
push
stos
incb
insl
fcmovb
dec
xchg
pop
xor
out
adc
push
or
and
call
fsub
adc
xlat
inc
bound
ds
pop
rcll
les
in
mov
rcrb
sub
rcll
in
outsl
in
imul
jb
or
mov
lock
fildl
addr16
sbb
pushf
push
sbb
lods
outsl
in
lea
test
cmp
and
pop
mov
push
sbb
inc
pop
mov
fcmovb
vmovlhps
inc
jecxz
popf
sub
jl
pop
xlat
outsb
stc
dec
mov
sub
iret
push
in
mov
in
das
pop
and
mov
dec
jae
xlat
lea
sbbb
lret
and
xchg
test
sbb
add
mov
and
in
and
add
in
jmp
lret
in
out
into
icebp
dec
pop
cmp
sarl
stc
nop
jle
fsubrs
lods
pop
fwait
sub
mov
fs
popf
mov
push
cli
not
xor
in
into
in
call
xor
cld
sub
sub
aas
in
mov
dec
add
int3
or
pop
popf
mov
idivl
fisubrs
pop
adc
lods
xor
mov
inc
mov
inc
aad
fsubrl
xchg
add
mov
push
xchg
pop
xor
mov
imul
fisubl
inc
and
fwait
mov
mov
jp
fs
push
add
fisubrl
jmp
std
inc
pop
adc
or
repz
leave
mulb
ljmp
movsl
xchg
jb
stc
pop
lret
dec
aaa
sbb
mov
jns
xor
sbb
xor
adc
jge
cld
sub
loopne
stos
ret
or
outsb
mov
sarl
aaa
mov
mov
and
rcr
lods
jno
mov
mov
movsb
inc
outsb
lahf
jle
sbb
inc
in
jl
xchg
std
sti
mov
stc
cli
cmp
insb
mov
push
mov
mov
fcomp
cmp
sbb
adc
movl
les
pop
popf
sbb
pop
sar
pop
and
repz
add
jmp
jp
incb
inc
repnz
scas
mov
or
push
mov
sub
into
mov
dec
lret
sub
lods
pop
cmp
cmp
mov
add
fsubr
lret
nop
shll
cld
or
jae
sub
cmpsb
and
sub
sbbb
ret
aas
pop
and
sub
inc
cltd
loopne
clc
adc
insb
ss
mov
sub
into
ss
stc
jle
push
lods
dec
leave
cwtl
xor
test
xor
xor
adc
xchg
shrl
cmp
cltd
mov
jmp
sbb
push
xlat
ffreep
dec
stos
pop
jno
sub
sti
mov
jb
inc
mov
add
cmpsl
daa
and
add
fisubs
out
rcll
add
rcr
into
push
js
mov
iret
popf
mov
push
mov
xor
mov
lret
add
xchg
mov
shrl
push
jecxz
xor
or
mov
out
or
cli
dec
and
dec
or
imul
dec
out
sbb
dec
lret
mov
cmp
fidivrl
addr16
test
inc
insb
orl
mov
and
lds
inc
xor
jle
sbb
lahf
stc
cld
dec
pop
repnz
sti
or
mov
adc
sbb
jnp
insb
scas
xchg
popf
pop
inc
ficompl
stos
lret
cmc
jp
rcrb
jp
ds
add
repnz
jecxz
cmp
cmpl
hlt
loop
sub
jo
xor
xchg
mov
inc
into
cli
sbb
sbb
cwtl
and
jecxz
data16
inc
cli
push
sub
sti
mov
sbb
mov
pop
aad
ret
jl
shlb
jb
adc
rclb
mov
ret
and
mov
mov
xchg
push
lahf
jno
mov
mov
xor
jns
or
jne
or
pop
insb
insl
sbb
js
mov
xlat
arpl
push
cmp
push
out
mov
pop
stos
xor
repz
mov
lcall
jno
sbb
adcl
in
fwait
xchg
ja
stos
xor
arpl
sbb
and
cmp
mov
fwait
mov
adc
dec
cld
push
sub
icebp
jo
jno
mov
int
out
mov
sub
nop
lret
rclb
jb
lds
cmpb
and
sahf
test
mov
or
sub
js
jl
scas
scas
xor
imul
mov
pop
ds
inc
outsb
jg
mov
push
int3
mov
inc
push
xor
stc
lcall
and
mov
outsb
mov
shll
es
or
cmp
outsb
mov
push
dec
cmp
jp
call
lea
lahf
push
lds
aad
lahf
hlt
dec
test
jecxz
mov
pop
xor
cmp
or
cmpl
enter
push
jp
popa
xor
sbb
sti
nop
pop
sbb
add
stc
and
repz
xchg
sahf
cld
inc
outsl
push
outsl
push
xchg
push
cmpsb
mov
out
jo
pop
sbb
xchg
jne
fisttpll
outsl
mov
pop
inc
test
adc
xchg
dec
cmpl
imul
mov
push
js
xor
push
pushf
jge
jb
lds
or
in
inc
fnstenv
add
cltd
or
enter
sbb
jno
adc
in
dec
fucomp
push
addl
adc
sub
add
addl
dec
cli
adc
add
xchg
jne
imul
nop
push
cmpsl
xchg
fcoms
mov
jbe
jg
mov
in
cmc
arpl
push
ja
push
pop
sub
test
push
cltd
lods
call
xchg
mov
cwtl
repz
add
dec
xchg
es
xchg
xchg
xor
mov
js
nop
xlat
mov
pop
insl
xchg
out
sub
in
jae
test
wbinvd
cld
xor
inc
aad
sub
sub
mov
fistpll
aam
shrb
push
mov
push
cltd
cli
pop
push
mov
xchg
cmp
adc
mov
cmpsl
mov
dec
mov
add
or
sahf
xchg
int
jns
fs
repz
loope
add
jno
add
push
sub
mov
or
pop
pop
stos
xchg
jecxz
cmp
fwait
cmpsl
repnz
or
mov
shl
adc
inc
in
xchg
int
sti
mov
xchg
inc
sahf
push
je
inc
into
daa
int
xchg
scas
fisttpl
jb
inc
jg
test
xchg
sub
xchg
outsl
testb
stos
enter
jb
loope
pusha
inc
test
push
js
ja
add
xchg
in
movsb
inc
cmp
jns
out
ret
lods
mov
clc
push
out
popf
lods
outsl
mov
fstps
mov
aaa
je
test
cmp
jne
adc
sbbb
andb
mov
mov
inc
mov
mull
icebp
jge
push
and
push
inc
roll
sbb
test
into
mov
sti
ret
fsincos
sahf
xor
push
mov
and
test
std
ja
cltd
dec
call
insl
fcoml
add
xchg
divb
add
pop
enter
insl
jecxz
mov
pop
cmpl
mov
cmpsl
mov
jp
push
loopne
lods
dec
inc
scas
sub
les
fisttpll
inc
movsl
scas
icebp
jne
pop
cmc
dec
fstl
and
sti
lret
lock
cmp
adc
mov
pminub
dec
data16
insb
dec
outsb
cmp
mov
in
lgs
dec
jecxz
into
jl
pop
sti
mov
aaa
pusha
jg
push
out
sar
pmaddwd
adc
rorb
inc
sar
inc
cld
cld
les
test
and
sub
mov
es
mov
pop
fnstsw
loopne
mov
push
jmp
xchg
sbb
mov
loope
xchg
ds
cmp
outsl
lods
loop
sub
ljmp
mov
sbb
leave
mov
incb
push
mull
sub
sub
pop
stos
iret
or
pop
pushf
xor
push
mov
lods
inc
gs
cmp
xor
popl
push
mov
xor
stc
cmpsb
fiadds
stos
mov
or
mov
dec
out
mov
rorl
and
jb
push
xor
pop
pop
test
or
add
iret
push
xchg
cmpsb
dec
xchg
stos
jmp
loop
mov
in
andl
lret
sti
cmp
dec
jns
in
fwait
push
cmp
movsb
pop
cltd
pop
sbb
test
or
mov
les
xlat
iret
stc
shrb
fiadds
pushf
sbb
ljmp
xor
jp
sbb
pop
sbb
push
mov
loope
mov
fldcw
movsb
xor
fsubs
bound
mov
jp
mov
jle
fidivrl
jmp
fcomip
xchg
dec
mov
cwtl
lds
out
mov
fcomp
pop
test
cmp
lahf
popa
shlb
fnsave
xlat
mov
out
shll
jne
inc
adc
std
mov
add
add
sbb
jmp
mov
insb
mov
gs
and
mov
orl
lods
data16
push
xor
repz
mov
xchg
xchg
lret
cmp
and
movsb
out
out
and
cmp
inc
pop
dec
rorl
xor
addr16
sbb
test
lock
mov
push
sub
adc
sub
xlat
popa
mov
xchg
adc
js
sbb
loop
js
je
pusha
loope
cmc
sub
js
xchg
fldpi
pop
xchg
push
cmp
out
push
mov
and
imul
out
push
fists
inc
adc
les
dec
add
inc
sti
jbe
ds
repz
std
cltd
repz
adc
testb
lea
fdivr
or
sbb
mov
in
ds
loope
ja
push
loopne
lahf
mov
fcmovne
imul
call
jnp
jmp
adc
push
aam
in
pop
pusha
pop
jnp
fmuls
int3
mov
clc
loop
sub
aad
mov
add
movl
push
loop
inc
cltd
or
jle
jnp
imul
ret
or
fwait
mov
mov
xchg
adc
or
in
or
push
fwait
lcall
hlt
push
mov
jg
pop
shll
cmpps
jl
clc
mov
shl
ds
cmp
dec
repnz
cmp
xor
icebp
mov
stc
stc
jbe
pop
inc
int
mov
add
cwtl
mov
dec
jns
mov
fbld
mov
xchg
or
dec
xor
cld
xchg
cmc
mov
fs
pusha
or
add
jne
das
cmpsl
sub
insb
je
pop
popa
xchg
sbb
or
mov
pusha
xchg
push
test
or
rorl
pop
push
ret
hlt
dec
pop
or
mov
test
pushf
push
xchg
hlt
fidivl
dec
sbb
shlb
dec
lahf
push
xor
fs
pop
mov
sub
adc
leave
sbb
movsl
fldcw
repnz
jle
mov
mov
add
or
sub
push
xchg
fildl
add
test
cmp
push
sub
xor
addr16
ja
xchg
in
adc
jb
pop
dec
hlt
mov
sub
push
xchg
push
out
ljmp
mov
sub
cltd
hlt
arpl
push
ljmp
cmp
imul
fldcw
pop
ljmp
fwait
rorl
enter
jo
fld
mov
push
in
test
sbb
pop
lods
push
push
sbb
xor
jp
stc
in
lcall
xor
je
sahf
push
repnz
lcall
inc
adc
out
xor
fidivs
cmpb
lahf
sbb
decl
sub
sbb
cmp
int
mov
pop
and
sbb
lret
dec
les
inc
push
cli
jle
jb
jecxz
cmpl
or
dec
mov
pop
popa
sbb
xor
inc
mov
xor
xchg
repnz
mov
inc
sti
lds
mov
sti
stos
mov
cmpsb
rorb
mov
rol
xchg
ss
cli
dec
in
dec
aaa
mov
jmp
test
loop
inc
or
out
loope
adc
pop
rorl
sahf
scas
pop
sbb
nop
imul
mov
dec
sub
sbb
lret
sub
and
inc
jmp
sahf
or
shr
mov
mov
ljmp
mov
sti
test
mov
add
mov
mov
xor
xchg
and
sbb
pop
and
pushf
adc
mov
push
pop
sbb
test
loop
mov
test
out
cmp
or
les
jg
push
int3
cwtl
dec
cmp
or
jno
loope
push
or
or
and
push
push
inc
cmp
ds
inc
and
or
pop
les
add
xchg
xchg
or
cmp
xchg
pusha
mov
and
pop
push
xlat
imul
sahf
push
cmp
mov
mov
sub
push
mov
and
je
xor
sbb
test
scas
loopne
ljmp
test
jnp
clc
jo
enter
mov
fwait
inc
int3
mov
xor
addr16
jp
lds
pop
and
pop
push
and
pop
cmp
out
rcrl
fsubl
cmp
push
cli
pop
jb
mov
lcall
sub
cmpl
push
push
xchg
sub
mov
sub
push
pop
xchg
add
jl
rcr
fmuls
push
pop
testl
adc
das
pop
int
push
xchg
mov
pop
mov
fisubs
mov
push
mov
pusha
cmp
sahf
adc
insb
mov
sbb
clc
das
mov
jp
mov
aam
inc
aad
jl
dec
shlb
mov
ror
mov
icebp
cld
cwtl
pop
outsl
cmp
scas
test
outsl
iret
cld
inc
inc
or
inc
lods
lahf
es
out
sbb
in
push
mov
push
fst
and
arpl
jmp
mov
push
inc
cmp
mov
push
or
pop
pop
mov
jnp
cmp
cmc
add
fs
add
sti
mov
mov
cmpsb
mov
mov
push
push
inc
addr16
int3
rorl
pop
insb
pop
push
mov
mov
repnz
lret
test
ficompl
mov
dec
adc
in
imul
and
aas
ja
loop
xor
gs
cli
mov
xchg
pop
movsb
jnp
mov
inc
clc
ret
les
dec
sub
adc
jae
stc
dec
clc
loopne
test
fbld
or
inc
iret
xchg
dec
sbb
and
mov
jbe
arpl
test
jbe
mov
andl
sarb
in
lods
xor
out
xlat
loope
into
std
pop
adc
sbb
shl
ret
sbb
es
jbe
mov
pop
adc
inc
scas
mov
push
into
jae
push
inc
add
cld
dec
andb
in
mov
cltd
mov
xchg
cmp
daa
jo
sub
out
jns
dec
sbb
mov
test
mov
push
jae
pop
dec
into
pop
int
xor
into
xchg
jl
xor
dec
cli
mov
dec
sbb
fidivl
sub
cmp
jp
sbb
push
fwait
jge
call
mov
cmp
sti
and
scas
mov
insb
lahf
mov
dec
adc
ljmp
jb
pusha
scas
lret
sub
adc
or
adc
ljmp
jecxz
lock
cmc
fs
loope
jo
out
cs
sbb
cmc
sub
test
or
roll
pop
out
or
add
out
loope
arpl
add
pop
or
pop
loop
adc
lret
pop
and
imul
sbb
roll
pop
stos
iret
ficoml
leave
cmp
lret
cltd
fcmovne
and
enter
lret
jmp
inc
inc
mov
mov
fwait
jl
lret
movb
sarb
testb
repnz
lods
sbbb
cmpsl
and
cs
cwtl
lcall
jge
push
add
scas
loopne
push
aaa
jno
or
out
inc
stos
add
popa
sbb
inc
jb
and
sub
lcall
mov
inc
fs
aas
xchg
and
fstpl
mov
pop
cmpsb
fidivs
in
add
mov
and
cmpps
sbb
fxch
scas
aas
push
jns
je
fucom
xor
aaa
je
push
flds
adc
jge
mov
sub
cli
sarb
mov
inc
add
pop
iret
shl
es
divps
jns
cmp
test
pop
out
ret
js
call
adcl
hlt
fs
jae
or
push
sahf
std
daa
add
jmp
arpl
out
dec
sarl
push
add
sahf
clc
insb
jae
gs
jmp
mov
in
out
jns
stc
mov
pusha
mov
xchg
inc
pop
mov
enter
cmp
pop
mov
and
add
sub
mov
cli
rcrl
cmp
gs
xchg
fnstcw
jno
das
das
ficoms
mov
inc
cmp
popf
pushf
mov
shrl
sub
pop
pop
adc
xor
scas
imul
dec
mov
add
mov
out
pop
sub
mov
int3
add
int3
mov
js
repz
ja
nop
addr16
pusha
out
xor
mov
sbb
dec
mov
push
lcall
les
cli
push
fldt
lods
addr16
aas
sbb
shrb
sbb
outsb
mov
inc
sub
cwtl
mov
mov
cmp
push
mov
mov
xchg
int
scas
pop
lods
sbb
gs
mov
lods
lds
icebp
or
ret
lret
jp
imul
cld
jbe
mov
loop
psraw
inc
and
aam
xchg
arpl
xchg
dec
xchg
stc
or
adc
or
outsl
jg
lods
xchg
push
insb
mov
test
pusha
inc
sub
sarb
and
lea
mov
pop
fildll
adc
aam
mov
fists
popf
push
and
fdivs
imul
outsl
inc
and
lods
fs
out
cwtl
and
insb
out
mov
mov
ret
ljmp
out
inc
daa
popl
inc
xchg
xchg
je
sub
mov
sbb
mov
int3
inc
popa
adc
lods
dec
out
ret
jle
test
ss
push
mov
xor
mov
dec
addr16
pop
clc
pop
push
xor
or
sbb
fnstsw
in
ds
mov
scas
test
fistps
cmp
mov
jp
ud0
inc
bound
test
dec
or
push
pop
sub
subb
clc
jbe
jne
xchg
dec
xchg
and
push
cmp
into
loope
or
add
mov
shrl
fildl
leave
hlt
add
cmc
xchg
cmc
mov
shr
jbe
je
cmovo
lds
inc
mov
add
push
and
jp
mov
xchg
inc
jp
mov
jecxz
ja
push
inc
dec
icebp
iret
adc
mov
push
and
dec
mov
add
sbb
mov
inc
leave
cmp
jge
sbb
jmp
not
pop
jle
sub
mov
sub
mov
cmp
es
cmp
sbb
xchg
mov
adcl
fimuls
subl
fldl
iret
ret
rcrl
fnstcw
inc
sti
das
dec
adc
xor
jb
test
jg
push
out
push
mov
divb
push
mov
call
sbb
test
adc
ss
pop
pop
or
push
pop
push
mov
in
sbb
mov
push
sub
aas
mov
jge
jl
in
mov
int3
or
icebp
fsubr
mov
cmc
xchg
xor
and
ret
cwtl
fs
je
sti
jae
pop
lret
adc
add
add
andl
mov
cltd
jb
hlt
lret
and
xor
in
push
mov
imul
leave
in
int
mov
mov
addr16
pop
push
pop
mov
orl
push
jp
inc
cmp
rcrb
into
xor
shl
sbb
push
shlb
clc
lahf
mov
sti
xchg
pop
dec
inc
jmp
js
cmc
sub
lods
mov
lahf
cmp
imul
gs
cmp
sarl
xchg
std
inc
xchg
inc
test
xlat
xorl
cmp
jmp
and
aas
sbb
lret
mov
mov
cwtl
mov
lods
adc
dec
cmp
sub
jnp
ret
mov
inc
adc
sbb
daa
xlat
dec
lcall
mov
outsb
sbb
dec
ds
cmpsl
mov
pop
int3
movl
sbb
pop
mov
int
es
repz
lock
mov
mov
insb
inc
or
lock
cmc
mov
stos
aas
mov
push
xchg
and
pop
adc
and
push
inc
popfw
lods
push
jae
dec
or
mov
jle
xor
and
xor
push
jne
mov
mov
pop
mov
cmc
fists
dec
mov
or
sbb
push
lods
movsl
xchg
xor
scas
adc
adc
hlt
cmpsl
lock
push
mov
lcall
dec
hlt
mov
repnz
je
cmp
dec
nop
test
cmp
or
arpl
dec
xchg
or
std
lea
jge,pt
mov
lods
in
lock
pop
inc
mov
add
cmpb
sbb
mov
in
push
dec
test
inc
jle
les
inc
lahf
push
mov
xor
inc
lock
dec
pop
stos
test
nop
ja,pt
fwait
add
lea
lret
xchg
inc
xor
xchg
cmpsl
mov
addl
je
int3
mov
js
stos
lret
ja
ret
sub
sbb
sub
clc
dec
xchg
dec
ficoms
sbb
mov
fwait
mov
push
imul
cmp
pushw
sub
pop
cmp
xor
out
inc
sbb
mov
loop
movsb
cmpsl
fisubrl
push
push
lds
cwtl
and
cmpsb
mov
jmp
insb
imul
xchg
enter
popf
test
leave
jns
xorl
adc
loopne
lock
test
cmp
sub
movsl
cmc
jp
fdivrp
jb
inc
jmp
jne
push
adc
ljmp
cltd
or
push
lea
sub
lret
push
fwait
pop
inc
fiaddl
outsl
dec
mov
adc
cwtl
jb
push
jns
in
jbe
jmp
repz
dec
fucomp
stc
aad
push
add
cmp
sub
xchg
cmpsb
xor
pushf
out
push
jle
add
mov
out
clc
xchg
sarb
inc
mov
push
inc
icebp
mov
clc
les
mov
fs
out
or
jl
je
push
lahf
stc
je
push
cmp
je
ja
or
andb
lret
inc
stos
dec
repz
mov
inc
pop
sbb
xor
xchg
fisttpll
sub
mov
call
ss
lcall
mov
orl
aas
push
mov
divl
xchg
movntq
out
orl
pop
rcrb
pop
mov
adc
sbb
xchg
dec
xor
pop
daa
xor
popf
xor
xchg
xchg
js
pop
cltd
cmp
sub
dec
scas
add
xor
and
movsl
shr
mov
jecxz
mov
cmpsl
xchg
gs
enter
jge
adc
add
lret
std
add
pop
ffreep
xor
mov
loope
mov
stc
mov
enter
lret
push
int3
push
cmp
add
jo
add
push
push
push
jp
push
nop
inc
push
das
mov
sti
lret
push
or
pop
pop
dec
mov
pop
pop
aas
mov
pop
dec
rorl
mov
and
push
ja
push
popa
repnz
lret
repz
sbb
sub
mov
stc
mov
add
ds
pop
loopne
push
mov
cmp
cmp
lret
mov
xchg
out
das
inc
xor
popa
iret
cld
imull
xlat
inc
js
xchg
decl
xchg
ret
or
sti
push
mov
push
mov
and
mov
enter
sahf
xchg
cmpsb
mov
pop
xchg
ss
xlat
daa
insl
jge
mov
jl
fwait
xor
or
andb
xchg
mov
dec
jnp
movsl
cmp
ss
inc
loop
dec
stos
fdivrl
stos
pop
add
mov
cmp
jns
xchg
fsubl
int
xor
out
stc
insb
movsb
int3
mov
ret
pop
push
jle
in
push
popw
add
sub
negl
push
into
test
cs
push
xor
shrb
hlt
cmpsb
cwtl
enter
pop
push
cltd
jnp
sub
fwait
and
xchg
pop
inc
jl
xor
in
mov
lods
loope
movb
orl
mov
imul
inc
call
xor
mov
inc
cmc
iret
sub
xor
vmwrite
addr16
call
jno
jne
sub
add
es
movsl
add
jge
mov
leave
inc
push
fmuls
xlat
inc
pop
adc
mov
inc
lahf
pusha
idivb
clc
and
insb
inc
cmpsb
mov
repz
xchg
inc
sbbl
and
sahf
loope
add
sarl
mov
arpl
cmpsb
flds
jnp
jp
pop
mov
out
in
xchg
cmp
pop
roll
adc
dec
mov
adc
stc
mov
mov
pop
test
mov
cltd
dec
inc
mov
pushl
sub
fsub
das
popa
cmp
sub
push
push
nop
jno
jle
xorl
dec
xor
lcall
ja
ror
cmpsb
push
pop
xor
xchg
inc
fsts
sbb
fcompl
mov
pop
insb
aam
ficompl
popa
and
cmp
ja
fildll
fptan
jmp
pop
movsl
xlat
rolb
mov
fadd
pextrw
lea
mov
sub
cltd
mov
add
divb
dec
sub
xchg
and
or
and
pop
movsl
and
dec
cmp
cmpsb
pop
divl
std
push
sub
sub
notl
aad
scas
dec
test
sbb
xlat
mov
and
ja
in
jnp
roll
push
std
xcrypt-cfb
cmpsl
and
les
aaa
addr16
xor
lret
outsl
pop
xor
jnp
loope
inc
aaa
jp
shlb
add
sbbl
and
stos
clc
adc
scas
or
lods
pmaddwd
xchg
cmp
ds
pop
cmp
orl
mov
mov
cli
leave
push
cltd
cmp
lods
sub
dec
or
inc
imul
rcl
add
sbb
sub
addb
xchg
sbb
cwtl
xor
push
jbe
loope
push
cmp
aas
pop
mov
ss
enter
gs
jo
stos
out
outsl
negb
imul
pushf
push
pop
mov
xchg
cmp
hlt
dec
sub
in
out
xor
mov
xchg
mov
fcoml
adc
mov
outsb
outsl
lods
xchg
ja
call
andb
in
cmp
jecxz
pop
or
out
fildl
mov
push
jmp
push
cmp
and
jge
pop
int3
call
stos
or
popf
mov
and
mov
xor
lcall
lock
adc
xchg
orb
cmp
fnstenv
clc
pusha
cmp
fidivs
rcr
mov
sub
add
orb
in
jbe
pop
push
idivl
push
push
xchg
ficomps
jno
sub
adc
cld
negb
mov
fwait
pushw
cwtl
pop
jbe
jmp
inc
adc
xor
out
shl
mov
jb
adc
call
fmul
xchg
mov
add
div
ret
test
ss
dec
into
fimull
cli
lods
sti
jbe
lret
test
or
sub
adc
mov
mov
repz
sbb
imul
fs
dec
int3
adc
or
xor
fstpl
cmp
mov
mov
lahf
mov
out
or
shrl
sahf
gs
test
movb
adc
shlb
popf
cmp
mov
into
jo
xor
add
or
lock
push
jnp
cmpsl
adc
jno
jle
and
xchg
sbb
dec
testl
in
repz
sti
sbb
and
push
test
xchg
sbb
jl
cwtl
lret
push
test
inc
out
loopne
cmp
test
loop
sti
inc
adc
push
lcall
call
xor
jns
loopne
out
out
js
mov
loopne
xchg
in
pop
inc
cld
iret
cld
cmp
and
dec
xlat
jb
dec
push
push
dec
movsl
inc
std
fs
call
push
push
aam
inc
gs
repz
sbb
repz
out
pop
sub
add
mov
or
outsb
sbb
xchg
lret
sbb
sbb
push
inc
test
or
and
push
dec
sbb
aas
mov
mov
inc
aad
xchg
push
or
jno
add
out
aam
add
in
lahf
pop
insb
xchg
xchg
sbb
pop
aas
pop
push
mov
push
pushf
jecxz
jge
rcrb
pop
xor
rorb
sbb
jo
mov
addb
or
pop
and
sbb
xor
xor
push
xchg
sbb
push
decb
pushf
inc
mov
repz
pushf
mov
xchg
push
inc
addb
out
push
xchg
out
mov
add
scas
and
das
aam
mov
addb
adc
clc
scas
iret
jle
or
out
inc
fisttps
sbb
jmp
sbb
fcompl
call
jmp
sub
lret
push
pusha
fildll
push
cmp
push
fsubrs
sti
in
mov
add
ds
ss
push
sbb
push
and
xchg
outsl
pop
addl
ss
pop
dec
pop
add
stc
or
insl
ja
or
sub
incb
sahf
pop
gs
mov
pop
ds
and
jle
mov
xchg
into
mov
addr16
dec
push
push
jbe
sub
outsb
and
movsl
arpl
cmp
xor
jp
lock
lea
andb
xchg
subl
pop
ja
in
jg
in
int
jp,pn
mov
gs
frstor
jo
push
xchg
push
ret
mov
cltd
ret
or
rorl
push
sahf
push
sub
mov
cli
shl
mov
sbb
pop
sbb
cwtl
cmc
cmp
test
scas
add
out
in
cli
test
inc
and
cs
in
xchg
cli
ljmp
pop
outsb
mov
loopne
mov
add
dec
jb
dec
popa
shlb
sbb
jb
fwait
outsb
jmp
pusha
mov
icebp
adc
jbe
xchg
sbb
fcmovb
mov
fscale
or
outsb
loope
mov
xor
sub
stos
mov
sub
xor
add
push
js
imul
jmp
mov
lahf
fdiv
cmp
jg
add
in
lods
repz
push
xchg
sbbb
sbb
dec
fistpll
push
and
push
int
mov
sbb
dec
shr
jecxz
shrb
mov
outsb
fdivrs
mov
sub
imul
mov
sbbb
xchg
lret
test
outsb
mov
adc
ss
dec
mov
xchg
mov
jg
sti
jns
lods
sbb
in
pop
mov
imul
in
sbb
jb
dec
cmc
mov
insl
pushf
lret
lods
clc
sub
mov
subb
in
mov
sub
push
hlt
sbbb
out
xchg
lea
lahf
xchg
jo
sbb
dec
inc
push
scas
cmp
fs
xlat
sub
das
pop
add
add
movsl
in
jnp
out
fs
out
aas
je
mov
cmp
inc
jl
hlt
scas
movb
addr16
push
mov
aas
xor
mov
std
push
push
outsb
inc
mov
rclb
fs
shld
inc
and
adc
repnz
sub
sbb
sub
mov
in
jo
movsl
and
cmp
xchg
sbb
adc
push
popa
and
cld
mov
aad
lahf
and
sbb
mov
xchg
clc
sbb
sub
pop
pop
adc
jo
ds
xor
mov
fwait
adc
mov
ljmp
insl
jae
sub
loopne
lods
fstpl
adc
out
fisubrl
sbb
add
repnz
mov
mov
or
jmp
lcall
loop
jp
jp
popa
jns
and
dec
lods
or
test
fwait
mov
dec
insb
xchg
mov
mov
xchg
jne
mov
pop
js
ja,pn
repnz
stos
icebp
pop
sub
push
repnz
mov
imul
xchg
sub
les
ret
adc
outsb
jge
jle
sbb
jo
pop
pop
push
lds
pop
sti
shll
mov
xor
mov
pop
imul
repz
dec
aas
mov
mov
inc
jle
fldl
enter
movsb
fdivrs
push
and
pop
loopne
popf
sti
leave
fldcw
mov
mull
sbb
or
js
push
mov
imul
xor
mov
cli
push
les
or
xlat
or
or
sub
js
lahf
outsl
xor
jnp
gs
cmp
and
add
rcr
out
dec
es
mov
mov
cld
pop
add
pop
jae
mov
mov
lods
rcll
inc
aad
out
cmp
fisubrs
fistpll
out
insb
and
popa
cmp
hlt
lds
add
sbb
add
leave
imul
out
mov
outsl
cmp
loope
xchg
cmp
cmp
or
cmp
outsb
stc
jp
daa
xor
hlt
add
sub
mov
daa
out
and
mov
cmp
inc
leave
aaa
insb
subb
or
fstp
test
and
repz
das
dec
xchg
pop
xchg
insb
cmp
xor
xor
mov
aad
lea
inc
and
push
dec
cmp
jmp
int3
adcl
loop
jbe
inc
int3
orl
and
lret
inc
sbb
dec
sub
movsb
outsl
push
xchg
dec
mov
push
cli
je
in
sbb
es
imul
sub
outsl
adcb
fwait
scas
filds
leave
mov
out
pop
mov
fcomip
dec
std
out
popa
test
leave
push
pusha
xchg
repnz
adc
ds
or
adc
scas
sub
xchg
ret
aad
dec
cli
daa
xchg
and
add
adc
add
cmc
ljmp
outsb
xor
jne
aam
imulb
in
std
dec
add
push
nop
in
out
shll
adc
jae
lods
push
and
outsb
pop
mov
aaa
mov
push
repz
pushf
jg
dec
lcall
into
cli
mov
test
sbbb
and
pushl
in
sarl
pushl
cltd
in
in
or
mov
cmpsb
ss
dec
lea
mov
imul
add
ss
rorl
aas
mov
push
shll
cmp
orb
sbb
lods
lods
or
jl
aas
iret
lock
test
inc
pop
xor
jp
xor
or
adc
pop
push
xor
loopne
mov
add
cmpb
in
and
xchg
test
pop
cmp
test
jg
xchg
das
roll
std
flds
scas
push
jl
sbb
jg
test
movl
adc
cmp
xchg
inc
pop
mov
rclb
fiadds
mov
dec
call
rolb
nop
and
dec
pop
xor
cli
pop
mov
outsl
icebp
or
ror
insb
mov
add
jnp
and
xchg
jmp
and
lds
adcb
jl
inc
jle
cmp
rolb
test
dec
xor
fs
gs
mov
inc
scas
cwtl
or
jno
pop
leave
mov
lcall
cli
in
xchg
pop
jg
jp
je
pushf
in
pop
stos
es
fcomip
pop
sti
ds
and
fisubl
lea
dec
lcall
pop
out
scas
or
sbb
push
jo
jle
cld
xor
push
imul
js
or
fdivl
int
fs
shlb
mov
ret
xchg
add
sbb
mov
xor
sub
or
mov
clc
dec
and
fimull
xor
les
cmp
mov
add
out
pop
fcomp
enter
in
sti
cs
mov
push
scas
in
hlt
rcrl
outsb
mov
mov
xor
sbb
cmovg
dec
mov
sub
aad
mov
xor
mov
ljmp
and
js
inc
and
idiv
sub
mov
fwait
mov
push
sbb
mov
aam
inc
jnp
sbb
popl
and
mov
mov
push
jbe
mov
pop
and
into
pop
sub
xor
mov
inc
scas
sti
mov
xchg
jb
or
stc
mov
cld
dec
test
cmp
xor
cmp
jle
js
sbb
pop
stc
sbb
push
mov
jnp
push
js
lret
repz
in
pop
sub
mov
in
cmp
xchg
push
lret
fisubs
mov
mov
lret
ret
xchg
adc
insb
push
test
insl
andl
unpcklps
lret
shl
and
test
cmp
cmp
pop
mov
pop
dec
sub
push
sahf
adc
jmp
add
mov
cmp
rcr
push
jmp
cmc
and
cmp
lcall
xchg
repnz
movsb
aas
pop
xor
sbb
xchg
fiaddl
and
dec
imul
leave
jns
push
aas
lahf
xchg
inc
push
xor
xor
mov
mov
and
popa
popf
inc
pop
ret
dec
add
in
xchg
rorb
or
lds
andl
sbb
or
jg
fisubrl
pusha
repz
jg
mov
mov
add
popf
mov
sbb
push
sqrtps
fcmovnu
in
and
in
stos
jbe
movsb
les
test
dec
mov
pushf
ret
shll
sbb
cmp
dec
mov
or
adc
xlat
sub
fdiv
popa
xchg
pop
sbb
lcall
mov
pop
mov
cld
dec
push
cmp
jge
int
fs
xchg
pusha
dec
xor
pop
add
popf
push
js
mov
mov
jmp
enter
adc
test
push
ret
xchg
imul
lds
cmp
fistl
push
cmpl
pop
outsb
out
pop
dec
cmp
cmpsb
adc
ljmp
stos
cli
test
outsl
add
push
mov
cmp
ret
or
call
mov
push
aad
shlb
jno
jnp
ljmp
scas
not
push
adc
ss
mov
pop
pushf
cli
es
test
xor
ret
insb
cmpps
clc
mov
data16
ret
leave
fists
int
dec
sar
lahf
dec
mov
arpl
cmp
xchg
and
push
or
inc
lret
mov
sbb
add
inc
imul
dec
scas
imul
rorb
in
pop
dec
or
enter
insl
lods
pushf
movsl
xchg
in
sahf
sbb
sub
mov
js
scas
jne
sbb
loope
push
iret
cmc
mov
jb
loope
cs
inc
loopne
mov
add
mov
dec
loop
stos
jbe
dec
xlat
mov
cltd
mov
jbe
adc
ficompl
cli
push
in
or
push
push
pop
movsb
into
dec
pushf
leave
aam
mov
jmp
and
mov
inc
cmpsl
cmp
mov
add
cmp
cmp
jmp
cmp
or
cmp
cmpb
push
sub
push
jne
push
pop
clc
pop
or
sub
xchg
jmp
sub
xchg
orb
pop
push
jp
aad
scas
scas
in
repz
cs
mov
and
cs
movsl
aas
orb
lahf
rcl
cmp
pop
sbb
inc
push
inc
out
mov
movsl
inc
sahf
sbb
mov
and
push
lret
sub
sub
adc
dec
cmp
movswl
pop
xlat
push
adc
lods
xchg
lods
imul
push
fadds
imul
push
inc
pop
xor
dec
sub
xor
and
fsubr
ret
jo
lret
js
adc
inc
or
or
push
inc
add
in
aad
mov
mov
cmp
sub
mov
adc
pusha
in
sbb
pop
sbb
test
mov
push
and
xchg
loope
pop
aaa
rcrb
ljmp
sbb
xor
pop
lahf
mov
xor
pusha
xchg
mov
data16
ja
mov
hlt
push
xor
xor
inc
adcb
pop
sbb
scas
gs
insl
cmpxchg
dec
cmpl
xchg
sbb
sti
or
ljmp
mov
or
cwtl
xchg
pop
idiv
sti
lods
adc
xchg
shlb
sub
xchg
and
mov
mov
loopne
add
mov
jae
insl
pop
sub
jns
pushf
stos
and
sub
rcl
jnp
fldt
mov
into
inc
pop
pusha
sub
xchg
iret
mov
sub
mov
cmpsl
into
xor
mov
pop
mov
xchg
adc
sbb
pop
stc
xor
add
rcll
test
test
add
dec
xor
leave
mov
testb
scas
fstps
pop
jb
ffree
cmp
xor
ror
test
inc
mov
mov
popf
mov
adc
push
lods
mov
loop
stc
push
stos
or
mov
imul
pop
dec
or
push
scas
adc
jp
sub
mov
scas
movsb
stos
lcall
sbb
dec
mov
stos
push
lret
xlat
adc
bound
rcrl
shrd
cld
inc
push
mov
lds
subb
and
xor
test
andl
outsl
out
testl
iret
push
ja
div
leave
test
xchg
bound
mov
lret
je
dec
js
mov
adc
adc
xor
out
mov
lods
jae
rcl
sbb
jbe
mov
jb
mov
sub
jne
fcoml
scas
cld
pop
das
mov
in
std
sbb
es
scas
or
aas
or
mov
and
orl
xlat
push
das
mov
xchg
fmul
push
xor
lea
mov
outsb
repz
push
frstor
sbb
sbb
fldenv
mov
mov
cmp
decl
xchg
lahf
inc
xchg
lret
jecxz
cmpsb
cmpsl
push
mov
and
lahf
dec
fildll
loopne
mov
mov
push
pop
fwait
out
dec
cmp
mov
mov
or
jp
jle
bound
cmp
mov
incl
ret
fwait
or
cmpsl
or
aas
mov
sbb
sub
mov
iret
shlb
mov
repz
adc
xor
cmp
xchg
ja
sarl
xor
sbb
popf
stc
inc
int
inc
mov
pop
daa
nop
shll
stos
mov
into
jne
xchg
fisubrs
sub
mul
dec
rcl
repz
in
inc
xchg
xor
and
ja
enter
out
sti
test
xor
gs
adc
ljmp
and
jmp
ja
or
fwait
push
add
add
sub
or
imul
dec
dec
insl
hlt
push
daa
imul
dec
mov
inc
fisubs
les
pop
cmp
sbb
lock
cmp
int3
cmp
cmc
cmp
xchg
test
push
mov
cli
dec
pop
rcrl
adc
das
mov
in
xchg
in
pusha
and
cwtl
dec
jae
dec
push
sbb
insb
bound
sub
push
sbb
es
lahf
jp
xchg
pop
fwait
lea
int3
rcrl
sub
andb
in
out
ljmp
adc
jp
pop
push
mov
cmp
xor
cmpsl
int3
mov
or
cmp
popa
aad
mov
divl
sbb
cmp
mov
dec
push
std
cmpsl
lret
jg
push
inc
out
push
mov
ret
cmp
jo
lock
popa
push
aas
shl
add
mov
loopne
cmp
out
inc
push
lcall
outsb
ljmp
mov
pop
jb
stc
popl
std
scas
and
lds
leave
addb
jmp
mov
cmp
cmc
dec
xchg
int
roll
adc
loop
imul
jl
data16
hlt
fistl
into
dec
sub
and
pusha
sub
in
inc
out
lahf
outsl
ds
dec
cmp
mov
jo
movsb
and
mov
ljmp
and
lods
jmp
pop
aas
xchg
cs
pop
add
sub
push
repz
into
mov
sarb
push
lods
xchg
jbe
pusha
adc
xorl
out
push
outsl
pop
inc
xor
hlt
and
fimuls
dec
fst
lds
in
out
into
jmp
cmp
and
mov
or
je
xchg
xor
lcall
jbe
mov
sbb
push
jnp
sub
sbb
fldenv
out
stc
mov
xor
cmp
inc
mov
cmp
inc
xor
sub
jg
imul
push
bswap
js
ss
mov
arpl
sbb
test
mov
lret
and
dec
mov
pop
aam
mov
gs
xchg
xchg
sti
sbb
hlt
pusha
rorl
sub
push
arpl
xor
inc
inc
dec
je
loope
ficoms
push
pop
scas
push
mov
ss
dec
jmp
push
xor
sbbl
mov
lcall
stos
inc
mov
jg
subl
and
or
add
loop
sbb
loopne
js
mov
mov
adc
in
xorb
fcomp
stos
shll
inc
rorl
or
pusha
jp
mov
xchg
xchg
lret
pop
inc
add
daa
mov
inc
add
push
ds
cmc
ret
mov
shlb
pop
mov
push
imul
adc
cmp
jo
push
sub
cmp
ja
notl
in
pop
push
and
mov
lods
inc
lods
and
or
enter
mov
adc
inc
push
adc
sub
pusha
lds
sub
insl
scas
push
mov
stos
or
out
mov
push
pop
ret
cli
lds
imul
and
jne
and
push
jle
xor
or
sahf
sbbb
push
ss
adc
jge
leave
lods
leave
dec
push
aad
jae
lret
fldcw
mov
pop
movsb
sub
mov
inc
add
out
sub
add
mov
mov
loope
mov
fs
in
sbb
std
ljmp
scas
lods
add
pop
pop
call
sbb
push
add
sub
sbb
test
mov
mov
stc
cmp
or
shrb
pop
nop
cmp
mov
cmpl
lds
or
xchg
lret
and
adc
push
xchg
inc
lods
fdivs
adc
sub
mov
push
add
es
call
inc
ficompl
jl
sbb
pop
adc
jae
xor
inc
movsl
cwtl
sub
xchg
fisubs
ret
ret
jae
push
imul
aad
cli
sub
insb
std
or
mov
out
lahf
cld
test
mov
jle
scas
in
sub
mov
fbstp
pop
stos
xor
add
imul
inc
push
xor
push
movsb
dec
stos
mov
mov
les
mov
bswap
fwait
ss
fsubrs
jns
xchg
sarl
das
dec
mov
adc
xor
repnz
xchg
xor
scas
addl
dec
push
fucomi
add
ret
rolb
loop
jno
mov
fstpt
adc
cmc
xchg
add
sti
test
cmp
das
fbld
cmp
cli
imul
int
push
rorb
mov
jge
sbb
adc
js
adc
adcl
sub
add
adc
iret
mov
fdivrs
inc
or
pop
and
sub
mov
shrl
in
push
fs
lcall
push
jbe
sbb
leave
push
xchg
test
dec
mov
or
test
mov
inc
xrelease
lods
mov
mov
aam
lea
mov
faddl
sarl
pusha
and
push
xchg
aad
je
cwtl
pop
movb
add
int3
push
mov
pop
mov
scas
fidivrl
daa
bound
pop
lea
inc
or
jne
stos
bound
loop
jns
xchg
jb
xchg
out
inc
dec
push
pop
push
scas
popf
test
xor
adc
xor
and
adc
and
xchg
mov
fistpll
outsl
jp
sub
sub
test
sarb
xor
xlat
ljmp
dec
insl
xchg
imul
inc
or
sbb
jmp
push
lods
xchg
sbb
lods
into
xchg
mov
push
jno
fisttpl
int
js
out
mov
daa
paddw
filds
xor
scas
dec
out
xchg
int3
stos
pushf
push
push
sbb
sbb
sbb
inc
out
adc
mov
xrelease
push
jecxz
mov
lahf
push
mov
fidivl
out
movsb
jo
lret
mov
push
cmpsb
shl
test
and
aaa
in
sahf
out
fcompl
arpl
sbb
pop
dec
or
movsl
jns
jo
xor
ljmp
jae
ficoml
xchg
push
orl
shll
mov
fistpl
xor
test
mov
out
roll
mov
scas
xorb
aad
sub
xchg
das
sbb
bound
add
fprem1
cmp
xchg
pop
and
xchg
sarb
mov
adc
clc
mov
les
cmc
shll
dec
ret
repz
imul
aas
dec
sbb
inc
dec
mov
pop
lcall
test
push
jne
cmp
pop
cmp
xchg
into
daa
enter
sbb
push
stos
jg
mov
adcl
jb
dec
dec
popf
test
test
and
dec
adc
aam
inc
push
mov
mov
pusha
mov
mov
int3
or
scas
mov
or
movsb
scas
lods
add
inc
mov
inc
mov
xchg
mov
fadd
dec
jecxz
jnp
push
jg,pn
adc
icebp
shlb
hlt
pusha
bound
stos
daa
jp
add
das
push
mov
leave
ret
xor
fdivrl
pop
lods
push
out
jno
xlat
scas
cmpsb
movsl
pusha
ds
pusha
push
push
lea
loopne
dec
add
cli
sub
aaa
pop
jae
jg
adc
jg
xchg
loop
scas
adc
add
mov
outsl
rcll
in
push
push
xor
dec
inc
cmp
adc
mov
and
iret
push
adc
mov
fwait
sbb
aam
sahf
mov
pop
int3
arpl
imul
cmp
push
jg
ror
loope
jne
push
addl
int3
sub
outsl
ljmp
mov
std
pop
lock
repnz
add
push
push
jmp
stc
mov
ds
pop
cmp
cmp
push
or
mov
imul
jnp
jp
xor
repnz
rolb
insl
push
out
ljmp
daa
or
int3
adc
push
les
out
shr
mov
cmp
fnstcw
jmp
push
lea
test
fidivrl
shll
and
sti
imul
in
xor
pop
ffree
mov
cld
movhps
in
xor
clc
push
loope
inc
jae
mov
sbb
inc
inc
shrl
jecxz
or
jae
fcomps
addb
clc
fstpt
int3
dec
cmpsl
cmp
popf
add
outsl
cs
mov
lock
std
lods
pop
fld
sbb
stos
lahf
int
aad
insb
inc
movsb
pushl
push
jg
fnstcw
adc
jno
push
cmpl
mov
push
in
push
mov
push
pop
push
pop
or
aad
std
lret
daa
imul
test
add
aas
icebp
xchg
iret
adc
xchg
sub
fs
lret
lret
test
cmp
jl
lcall
dec
or
add
lods
cmpsl
je
lds
sub
dec
jo
gs
cmp
inc
or
jne
popa
cmp
cmc
pop
cltd
sti
std
adc
jno
lea
loopne
inc
popf
addl
mov
or
fcoml
nop
or
es
inc
iret
sbb
outsl
ror
inc
roll
jb
pop
jecxz
outsl
and
mov
loopne
push
dec
xchg
call
clc
call
cmp
sub
mov
fldcw
cmp
aaa
mov
stos
ljmp
dec
or
fmull
or
adc
or
sbb
ljmp
insb
mov
lcall
inc
sbb
jge
aas
inc
xor
mov
imul
sub
lods
out
sbb
pop
pop
aam
mov
adc
insl
mov
xor
push
lods
mov
cmpb
jae
test
out
out
mov
jp
lcall
mov
lock
inc
lret
loopne
test
push
lds
ds
fistl
mov
icebp
test
add
addr16
adc
xchg
jae,pn
xor
lds
and
imul
pop
ljmp
int
dec
add
mov
mov
push
aaa
xchg
dec
pushf
cmp
xchg
movsl
in
adc
imull
push
add
repz
rcll
clc
xchg
jae
nop
nop
nop
rclb
sarl
movl
mov
mov
push
pop
jmp
out
inc
mov
mov
sti
mov
call
jmp
adc
xchg
or
cli
mov
rorl
imul
mov
push
rorl
and
adc
cmp
xor
mov
push
pushf
fistpll
lock
addl
mov
dec
jns
and
ljmp
cmpsl
test
jle
sbb
xchg
xchg
mov
jl
clc
pushf
mov
push
jno
fisubl
mov
pushf
push
sbbl
iret
and
xchg
mov
jne
dec
xchg
jae
adc
cmp
or
mov
roll
mov
mov
xor
imul
scas
jmp
ja
outsb
jns
jae
mov
mov
jae
sbb
test
add
push
sahf
pusha
xor
jmp
jmp
pop
sbb
xchg
aad
stos
lcall
inc
xchg
cmp
sub
xchg
jp
add
loopne
dec
addr16
sub
je
mov
inc
mov
clc
push
mov
cmpb
addl
aaa
fisubs
xchg
push
gs
es
xor
pop
popa
repnz
adc
cwtl
jle
push
dec
lds
bound
sahf
mov
stos
push
mov
adc
je
aaa
jmp
fildll
mov
adc
sbb
and
pop
push
mov
dec
xor
adc
orb
cmpsl
cld
fmull
sbb
xchg
or
add
imul
and
mov
inc
or
jb
fnsave
dec
jne
xor
push
sub
cwtl
pop
mulb
outsb
mov
pop
mov
cmp
jo
add
inc
cmp
sahf
jg
cli
test
int3
ficompl
ss
pop
add
mov
iret
repz
jae
cli
cld
inc
lods
jg
insb
xor
sub
cltd
fidivl
fisttpl
jnp
scas
push
jmp
test
cwtl
sub
add
daa
sbb
in
jg
mov
cmp
pop
adc
adc
pusha
aam
loope
jns
dec
cmp
lcall
fdivl
out
cmp
cmc
cwtl
cmp
push
es
xor
mov
movb
push
scas
outsl
lea
push
jo
ret
jb
es
mov
xchg
loopw
mov
xor
outsb
cmp
mov
in
rcrl
out
dec
xlat
jmp
cmp
sub
pop
leave
xchg
popa
int3
jb
lret
jo
mov
add
and
and
mov
movb
jb
or
out
lret
pop
and
arpl
cwtl
and
outsl
out
mov
xor
mov
dec
shll
vshufps
or
xor
out
mov
arpl
dec
je
out
cmp
icebp
pop
xchg
lret
jne
mov
sbb
xor
push
sbb
fidivrs
insb
notl
pop
inc
scas
inc
push
and
lcall
addr16
insl
sub
aad
out
mov
sbb
sbb
inc
and
mov
dec
call
sub
pusha
sub
aas
dec
es
adc
movsb
cmp
stc
jg
ljmp
out
push
loopne
adc
lods
mov
les
pop
xorb
adc
add
bound
sti
lret
xchg
jbe
aas
movl
push
jnp
cmpsl
fcompl
fisttpl
or
imul
lods
xchg
push
dec
aaa
sarb
pop
das
ljmp
test
ds
fwait
push
or
push
pop
mov
sbb
push
jmp
cmp
pop
mov
mov
inc
addr16
jnp
xchg
pushf
aad
jecxz
mov
jge
dec
cmp
loopne
cmp
iret
sub
leave
repnz
fwait
lret
push
push
lods
xchg
je
shl
test
ret
fmull
rcll
out
lock
rorb
mov
push
iret
ret
int3
xor
jp
cmp
lcall
imul
cmp
xchg
push
adc
sub
inc
jb
adc
decb
out
out
add
ss
add
lcall
or
loop
jecxz
mov
scas
jo
pop
sub
sub
arpl
mov
fcoml
cmp
dec
lahf
cmp
inc
inc
sub
mov
xchg
xor
pop
sahf
jmp
fldcw
out
lret
cli
mov
xchg
fsubrs
enter
mov
mov
arpl
cmp
mov
test
int
orl
xor
or
xchg
repz
inc
inc
add
faddl
rclb
sub
xlat
es
mov
jmp
out
lock
das
push
jp
mov
mov
fs
into
fsubr
out
jno
fucom
inc
mov
jne
lods
xlat
jg
daa
scas
fdivrp
cmp
inc
push
adc
mov
push
add
ljmp
loop
pop
inc
pusha
mov
sti
in
and
sbb
sub
les
mov
pop
or
outsb
in
or
cltd
push
je
pop
fdivs
add
rcll
pop
cltd
xor
bound
push
loopne
std
mov
scas
or
cmp
inc
imul
je
jne
mov
add
and
sbb
and
xchg
test
xchg
loop
and
mov
lock
lods
mov
mov
pop
push
pop
xlat
pop
lcall
pop
les
xor
into
insl
pop
lret
ss
adc
cmp
ret
scas
cmp
inc
adc
push
mov
into
jmp
cmp
pop
fistpll
fcomip
dec
pop
pop
orl
mov
add
shll
or
fwait
test
cmpl
push
mov
arpl
test
sub
xchg
and
push
cli
insb
jecxz
sub
stos
rolb
scas
xchg
pop
push
jle
js
data16
push
jg
shlb
lock
pusha
xchg
mov
movsb
pop
pop
add
push
in
data16
lcall
xchg
push
mov
push
push
push
mov
xchg
sti
mov
jne
mov
or
mov
lea
mov
fdivrl
aam
mov
jmp
mov
cmp
in
mov
mov
adc
sbb
repz
stos
jne
movsb
repnz
add
movq
out
and
es
aam
loopne
ds
ror
xchg
and
push
lcall
movsl
subl
and
in
rcrl
push
pop
xchg
shll
xor
sar
clc
cmpsl
mov
mov
pop
ret
fwait
sub
push
xor
and
int3
imul
sub
bound
and
incl
cli
cwtl
jl
addr16
jb
repnz
pop
icebp
ds
mov
xor
xor
add
mov
cld
and
push
push
push
sbb
out
in
sbb
fidivl
neg
add
add
inc
sub
sbb
xchg
movsl
push
outsl
adc
mov
jmp
subl
add
inc
dec
lret
aad
cmp
roll
out
test
sbbb
cld
popa
ss
popf
or
fisubrl
cmpsb
ljmp
scas
fdivrs
push
sub
inc
data16
pop
int
lock
pop
cld
enter
fwait
and
pop
jne
fs
or
cmp
cmp
nop
lods
mov
jge
mov
out
fistpl
mov
sar
sarb
cmp
mov
iret
sbb
add
enter
mov
inc
add
out
jg
add
test
cltd
xchg
ss
pop
sahf
push
fisubs
lods
dec
xor
jp
cs
pop
lea
lea
popf
inc
sbb
xchg
sbb
add
inc
mov
clc
out
mov
ret
dec
cmp
out
fsubrs
xor
lods
and
in
pushw
fldenv
rcr
cwtl
add
pop
sbb
shl
sub
cs
gs
jge
out
ja
xchg
mov
lret
mov
leave
scas
dec
xchg
dec
lea
cmovs
pusha
xchg
sub
xor
in
enter
jo
jbe
and
rclb
rcl
sub
cwtl
nop
lock
fmull
inc
and
test
insb
adc
bound
mov
mov
mov
sarb
inc
scas
adc
adc
sub
fstps
in
xchg
jae
mov
pop
mov
in
call
les
adc
fstl
lret
push
mov
leave
cmc
or
add
int
sub
xchg
out
sbb
or
mov
jae
xchg
mov
rcl
out
sti
and
mov
mov
mov
lock
into
cld
ret
push
mov
inc
ret
dec
pop
data16
gs
push
jno
adc
xchg
pop
outsb
jo
pop
fcomps
add
dec
adc
sti
jmp
insl
pushf
sub
xchg
inc
sub
das
add
ret
cmpb
cmp
adc
jl
cs
jbe
je
fisubs
sahf
push
add
xor
jle
push
aaa
pop
or
mov
sbb
mov
mov
push
pushf
gs
dec
or
add
jp,pn
cmpsb
push
or
or
push
or
lret
hlt
ja
push
fstpl
lcall
and
imul
pop
scas
outsb
in
in
sub
pushf
adc
outsb
mov
orl
inc
rol
fidivl
jnp
pop
or
das
dec
fldcw
insb
lea
inc
cmp
bound
aam
ret
push
loopne
xorl
pand
push
pop
cmp
nop
loopne
cmp
in
jne
and
mov
insl
sub
int
sarb
jne
add
jg
push
popf
jge
xor
das
imul
scas
adc
cmpsl
mov
movsl
and
jnp
mov
imull
mov
int
sbb
sub
dec
jbe
dec
pop
mov
fwait
jns
push
and
int3
aas
scas
push
sbb
mov
jo
out
mov
dec
dec
nop
pop
inc
push
mov
mov
jne
lret
arpl
insb
mov
sub
imul
mov
loopne
jecxz
rcll
and
sbb
aad
inc
addb
out
push
arpl
fcmovb
in
lea
xor
mov
and
adc
fsubs
jno
dec
rcrl
xchg
outsl
xchg
cmp
ret
ret
jg
shll
test
rclb
mov
andl
mov
pop
jecxz
daa
cmp
call
mov
cli
inc
out
cmp
rcl
mov
dec
xchg
mov
mov
mov
xchg
imul
push
jmp
testl
adc
mov
lock
lahf
cltd
xchg
jmp
out
push
dec
lods
in
xor
xchg
bound
in
cltd
or
and
adc
xchg
pop
and
cmovo
adc
mov
mov
ss
xor
fdivs
sbb
sar
into
cmc
mov
popa
cmp
int3
mov
dec
cmp
enter
xchg
or
cmp
icebp
pop
sub
stc
mov
aas
adcb
sbb
ret
jns
mov
insb
movsb
lcall
mov
pushf
dec
test
scas
push
or
pop
sahf
xchg
push
enter
lock
dec
rol
loop
xor
mov
dec
cmp
andl
xchg
gs
cwtl
addl
ficoms
iret
and
pop
jo
or
frstor
xor
adc
loop
notl
out
and
mov
push
sbb
mov
out
xchg
push
pop
ja
in
loopne
push
sbbl
or
mov
dec
adc
mov
gs
and
sub
jg
inc
lahf
cmpsl
pop
jmp
jns
xchg
add
sbb
dec
and
lods
js
jo
sbb
ss
sub
jp
pop
sbb
stos
jmp
add
mov
and
cmc
mov
cli
sahf
cs
inc
add
mov
mov
xrelease
pop
add
jle
dec
loopne
inc
mov
mov
ss
pop
shlb
mov
push
mov
aas
xor
fdivr
mov
arpl
push
jnp
jnp
sbb
into
cmp
xchg
add
add
stos
push
jo
sbb
nop
mov
fdivl
sti
scas
push
into
test
ds
je
and
pop
repnz
push
dec
or
sahf
adc
outsl
cwtl
jno
test
inc
push
ljmp
mov
pop
dec
shl
inc
inc
test
aaa
sub
imul
fcmove
es
add
in
mov
fs
mov
js
add
mov
mov
cmp
dec
jae
imul
pusha
in
fisubrs
add
mov
sub
cltd
xchg
xor
lock
or
in
mov
sbb
mov
mov
rorb
mov
sarl
divl
sahf
add
inc
jp
gs
mov
in
jbe
sbb
loop
pushf
aam
jmp
sub
out
test
nop
inc
sbb
inc
push
fists
pop
sbb
popa
in
mov
nop
lret
into
xchg
loop
push
xor
fwait
jge
jo
push
es
jle
arpl
mov
into
add
std
lret
xchg
jnp
icebp
lret
insl
jg
sbb
pop
jmp
gs
adc
repz
call
int3
mov
cmpb
stc
push
push
push
cmp
sbb
outsb
aaa
int3
out
xor
pop
jl
jp
into
lea
push
jmp
stos
push
pop
mov
jb
test
pop
dec
pop
loop
lret
lods
mov
arpl
cmp
sbbb
lret
adc
call
dec
lods
mov
mov
movsl
jmp
outsl
mov
mov
in
mov
mov
mov
jnp
ljmp
and
jb
jmp
jb
sti
lret
add
sbb
filds
lods
movsb
cmc
jmp
push
test
push
enter
mov
inc
sub
dec
jno
mov
lods
jecxz
cmp
test
jmp
jmp
subps
rcrl
dec
in
mov
enter
repnz
lret
jns
push
ss
mov
adc
mov
pop
mov
or
inc
in
imul
push
or
pop
fwait
int
pop
stos
je
rolb
int3
or
mov
push
mov
jmp
lret
or
sbb
xchg
sub
jmp
pop
lods
cmp
mov
mov
xor
or
jo
pushf
shl
jmp
les
inc
ljmp
fmull
add
mov
push
fwait
sub
xor
mov
repnz
gs
mov
in
sahf
subl
ret
enter
inc
lds
sbb
and
daa
xor
mov
loopne
scas
push
jmp
inc
js
in
fldcw
lods
sub
dec
mov
rcl
pop
loope
lock
cli
dec
addr16
push
lods
test
scas
xchg
mov
inc
aam
push
test
js
ja
inc
push
lahf
jle
fmulp
xor
mov
testl
sti
add
call
pop
adc
scas
dec
iret
push
test
mov
and
in
test
push
xchg
div
cmp
popa
aaa
jbe
mov
fwait
xor
outsb
push
dec
fmull
data16
or
inc
mov
aas
inc
vshufps
cmc
xchg
jbe
adc
push
dec
mov
das
jnp
or
push
rorl
and
lds
pop
daa
inc
jae
adc
fst
add
xor
jl
incb
ljmp
jp
adc
xchg
add
and
and
push
fistl
or
xchg
out
movsb
imul
cmp
or
xor
stos
std
mov
mov
clc
gs
hlt
mov
push
out
imul
pop
mov
test
in
inc
pop
jge
lret
jl
mov
mov
mov
cmpsb
and
jne
xor
sbb
sbb
test
sti
fs
xor
cli
cmp
adc
scas
and
jo
mov
jnp
pop
xor
jnp
fcom
les
cmp
dec
pop
inc
and
dec
dec
adc
push
sti
adc
add
jmp
ja
push
push
mov
pusha
dec
addb
sti
and
arpl
push
push
scas
mov
jle
add
jp
gs
mov
scas
out
pop
push
cmp
sbb
popf
mov
push
mov
gs
lret
inc
push
dec
test
arpl
mov
jge
daa
mov
xchg
inc
sub
adc
mov
cwtl
jecxz
test
fstp
adc
scas
cmc
sub
enter
aad
out
fcmovnb
inc
popf
pusha
mov
pop
in
out
and
xlat
call
imul
negb
outsb
pop
insb
lret
push
les
xor
es
sub
test
repz
xchg
mov
push
movsl
ja
mov
or
das
lret
fld
fs
sbb
popf
inc
testl
ja
cmp
sbb
imul
and
clc
mov
mov
pushf
cmp
mov
sbb
add
pusha
mov
loopne
sub
jle
je
mov
sti
shr
outsb
adc
call
adc
lret
pushw
shrb
leave
mov
dec
jno
out
in
pop
lds
xor
loop
cmp
je
int
lds
or
std
pop
mov
pop
imul
jns
cmp
sub
fsubl
aam
dec
scas
jb
stos
iret
mov
sub
cmp
lcall
lahf
notl
mov
cs
mov
mov
inc
roll
div
mov
fidivl
mov
cmp
xchg
jns
pop
mov
sbb
dec
mov
or
ficomps
jp
aad
xor
enter
rolb
roll
sbb
mov
clc
pop
mov
fisttps
mov
add
ds
outsl
jbe
pop
sub
jl
repz
movsb
enter
loop
hlt
jnp
inc
inc
cmp
mov
es
jb
ss
sahf
imul
sar
cmc
cld
lcall
clc
jb
iret
xchg
adc
sub
js
dec
add
mov
fwait
jmp
sbbb
and
xchg
sete
movl
mov
sbb
mov
pop
jecxz
jl
pop
jp
pop
clc
fistps
adc
jecxz
scas
gs
dec
and
iret
or
lods
and
mov
mov
popa
repz
lret
mov
or
sub
xchg
sarb
or
sbb
fwait
pop
lahf
jl
rcr
push
inc
push
dec
pop
sahf
sti
or
cmp
and
subb
mov
inc
push
pop
push
mov
mov
inc
rclb
add
fwait
js
adc
aaa
sarl
int3
ljmp
xchg
jmp
xor
in
nop
mov
sub
out
sbb
into
repnz
ds
fucom
ss
push
jecxz
fdivs
hlt
or
adc
pusha
pop
aam
lea
scas
lds
ds
and
outsb
bound
repz
mov
mov
mov
bound
test
daa
push
pop
add
js
fwait
push
mov
aas
jl
popf
loop
pop
divb
and
movsl
imul
popa
push
rcrl
xchg
inc
jne
outsb
repnz
push
repnz
shlb
or
mov
insl
fs
or
mov
lds
dec
adc
dec
hlt
pop
xor
xor
scas
mov
mov
pop
leave
jbe
xchg
inc
sub
mov
test
cli
mov
xchg
loope
jns
pop
cwtl
sbb
cmpsb
push
pop
iret
sahf
xchg
mov
ficoms
inc
add
xor
mov
xlat
sbb
sbb
insl
sub
ret
mov
jmp
addps
or
std
pop
cmp
sub
popa
and
movsl
jecxz
lea
xor
testl
fs
dec
hlt
repz
inc
call
insl
and
inc
lods
mov
xchg
push
popa
incb
ja
faddl
jns
mov
add
fs
jns
cmpsl
push
das
ss
sti
dec
jne
loope
cmp
stos
cs
std
dec
out
imulb
shlb
add
fsubr
dec
push
push
jge
or
or
jge
mov
mov
jne
push
daa
nop
pop
call
pop
sub
dec
mov
leave
jecxz
mov
enter
cs
mov
pop
frstor
mov
into
xchg
ss
pushf
mov
insl
cmp
pop
mov
aaa
dec
xor
cli
xchg
cmpsb
adc
loope
jge
push
jnp
or
inc
sahf
sub
out
insb
arpl
adc
or
addr16
sub
xchg
je
nop
dec
cmp
stos
outsb
int
sub
ret
call
std
daa
sbb
push
imul
jno
shll
decb
loope
test
movsl
or
cmpsb
xor
lods
jl
into
lar
ja
mov
xchg
cs
lret
fdivrl
les
xor
lock
mov
jbe
es
mul
sarl
push
loop
mov
add
push
pusha
dec
xor
out
xor
mov
push
add
imul
sub
je
scas
mov
data16
ret
mov
cmp
pop
test
cmp
lret
push
jge
xor
movsl
mov
or
jmp
popf
loop
ret
dec
outsl
dec
js
jno
enter
add
loope
cld
pushl
ret
xor
xchg
scas
mov
enter
cmc
sbb
or
mov
sbb
cmp
xlat
imul
push
test
out
scas
imul
icebp
inc
sub
and
rol
mov
mov
pop
pop
int
iret
dec
xchg
adc
ljmp
jecxz
adc
pop
or
sbb
lahf
sbb
dec
js
xor
cmpl
xorl
or
int3
xchg
loop
pop
mov
addr16
inc
mov
and
shrb
lcall
lock
inc
out
pusha
cmp
out
mov
inc
neg
mov
outsb
cmp
inc
lahf
cwtl
test
cmp
dec
mov
sbb
push
fistpl
mov
xchg
jo
sti
data16
loop
jns
int3
or
loopne
xchg
out
insb
repz
aaa
filds
femms
aas
hlt
pop
inc
sbb
das
mov
neg
cmp
jp
xchg
hlt
or
outsb
or
jno
sub
add
mov
data16
lret
jecxz
cmp
adc
dec
jnp
ljmp
fcmovbe
mov
pop
int3
ljmp
faddl
inc
xchg
data16
xchg
out
pop
lods
aas
cmp
movsl
xor
aaa
clc
pop
mov
mov
in
pop
mov
aad
adc
add
cs
push
cmp
pop
es
lock
je
inc
xor
syscall
aad
lret
mov
xchg
jecxz
inc
insb
mov
in
adc
pop
or
push
xor
lods
xor
adc
jecxz
aaa
div
dec
fcmovbe
fdiv
imul
or
inc
sub
cmp
push
xchg
inc
rclb
or
add
lds
cmpsb
push
cmp
push
mov
ja
loop
or
mov
pop
mov
in
or
out
jno
add
jmp
call
loop
pushf
ficoms
sbb
mov
pop
inc
sarl
out
sbb
sahf
and
sub
pop
mov
jb
mov
inc
roll
pop
jnp
rorl
xchg
xor
xchg
mov
addr16
lret
cmp
mov
orb
mov
nop
in
movsl
cmpb
scas
sub
ret
pop
or
add
es
outsb
lret
sti
xor
in
push
pop
xor
jp
xchg
xchg
adc
or
jns
xchg
pop
jno
pop
sbb
sbb
cs
mov
sbb
push
and
lahf
push
bnd
push
mov
aad
sahf
push
notl
xchg
pop
lret
arpl
shr
adc
mov
inc
push
je
testl
hlt
fcompl
sub
inc
in
sub
imul
mov
sub
frstor
add
pop
ljmp
movsb
xlat
add
in
aam
insl
push
cmp
jnp
cmpsl
stc
je
cmpsl
mov
dec
push
push
mov
filds
dec
and
push
push
mov
loope
mov
push
imul
or
popa
pop
pop
sub
mov
pop
fisubrl
and
xchg
aas
and
jno
adc
xor
cmp
ret
sbb
xchg
sbb
or
aad
mov
xlat
sarl
sub
xchg
inc
jae
mov
add
cmp
pop
push
imul
mov
sbb
xchg
fwait
xor
jae
ret
int3
aad
adc
hlt
stos
fstpl
adc
sub
mov
mov
or
xchg
aas
jae
jg
push
fstl
and
aad
insl
gs
cmc
jne
cmp
cmp
push
push
push
cmp
inc
call
out
pop
pop
xor
cmp
data16
push
jbe
jns
outsb
add
pop
mov
mov
pop
jg
inc
add
mov
cmp
adc
xor
je
iret
inc
or
rorl
push
outsb
cmpsb
fnstenv
mov
inc
mov
cli
jg
mov
out
mov
sub
sti
dec
in
mov
scas
loopne
in
adcl
or
or
adc
int
pop
dec
je
loopne
rcr
jbe
or
js
cmpsl
or
fstpl
sbb
in
add
cmp
ds
mov
mov
push
sbb
cs
sub
jl
loopne
add
sti
jmp
sub
ss
js
testb
mov
out
xor
aam
shrl
pop
and
test
icebp
inc
int3
movsb
jbe
inc
js
and
cmpsl
jle
xchg
pop
add
loop
mov
stc
sub
dec
cmp
jno
popa
int3
pop
sbb
jbe
sub
mov
sub
xchg
cmp
inc
enter
add
adc
sbb
into
mov
insb
push
popf
push
hlt
nop
cmp
pop
out
ljmp
push
out
inc
inc
dec
xchg
push
mov
adc
js
ja
das
push
in
enter
mov
push
sbb
and
enter
or
fdivrl
sbb
test
jmp
imul
xchg
arpl
lcall
mov
jo
jp
fmull
nop
int3
push
add
call
bound
fisubs
xlat
lods
and
mov
sbb
dec
test
jmp
jp
fsubl
lahf
sbb
pop
cmp
mov
lahf
xchg
icebp
cli
or
and
cs
sti
outsl
mov
scas
cmp
fwait
sbb
cmp
int
cwtl
iret
cwtl
push
mov
push
and
fists
std
cmp
int
out
push
dec
xor
or
jp
dec
in
mov
xchg
inc
mov
into
mov
das
imul
mov
loopne
sub
lock
xchg
cmpsl
stos
jbe
repnz
loopne
jecxz
mov
icebp
and
out
gs
adc
test
mov
and
mov
scas
jp
subl
push
out
movsl
ds
jecxz
xlat
pop
cwtl
pop
cmc
pop
iret
inc
lods
mov
imul
cltd
cmp
cmp
sti
outsl
stos
cmp
ffree
mov
enter
addr16
add
sub
sti
jp
or
ja
shr
cli
mov
out
or
pop
xchg
push
xchg
inc
and
ficompl
mov
outsb
iret
stos
aam
leave
lcall
xor
cwtl
dec
fldt
and
jo
push
mov
mov
pop
scas
into
lock
notl
fnstenv
xor
es
ds
and
jge,pt
or
jle
out
std
jae
jle
ret
dec
cli
mov
insb
cmc
arpl
add
aam
dec
or
sub
push
add
dec
fistpll
movsb
idivb
xor
jp
cs
cltd
cmp
jp
adc
fstpl
mov
sub
movsl
loopne
cmc
dec
push
inc
pop
int3
dec
aad
subb
shl
test
popf
sub
mov
xor
mov
int
aaa
faddp
data16
jp
mov
jo
adcb
ret
out
lods
xchg
jnp,pn
cmc
shl
mov
dec
pop
shl
ja
incl
iret
ficompl
sti
xor
setge
fmull
cmpb
xorl
push
clc
jmp
pop
mov
test
pop
int3
dec
mov
cmpsl
jle
gs
jmp
mov
loope
push
jns
pop
test
call
or
arpl
push
xor
adc
mov
xor
aad
push
push
or
push
dec
sbb
ds
data16
flds
jge
dec
lods
add
lcall
ljmp
in
cld
sti
push
and
pop
inc
push
sbb
mov
pop
movsl
fs
inc
sub
sti
pop
sbb
lret
dec
loope
mov
add
add
xor
std
ret
and
or
rorl
cmc
out
movsl
dec
shrb
test
mov
and
pop
pop
adc
push
inc
cmp
lds
aam
lss
adc
lret
fsub
jge
lahf
jnp
pop
cltd
mov
xor
adc
sar
dec
mov
mov
addl
jmp
and
and
call
and
iret
movsb
mov
scas
fidivl
js
jmp
stc
clc
loopne
and
cmp
ret
ret
mov
loope
jp
out
popf
rcrl
mov
ret
jae
add
mov
arpl
pushf
jmp
cmc
insb
pop
fcomip
sarb
test
clc
mov
inc
popa
jl
into
mov
cmp
incl
xor
cmp
leave
sub
dec
pop
loopne
data16
inc
fildl
test
or
mov
call
ret
mov
pop
pusha
or
mov
hlt
xor
sbb
and
xor
sub
aaa
or
sarb
movsb
cmp
repz
bound
mov
sbb
mov
pop
xchg
pop
sbb
mov
loopne
sbb
jnp
lcall
loop
out
imul
inc
cmc
mov
xor
fadds
test
mov
pop
add
pop
imul
mov
ds
daa
call
and
xchg
xor
cmpsb
mov
or
insb
mov
push
addr16
aas
ss
in
js
sbb
dec
mov
jecxz
add
push
or
mov
test
cmp
das
add
stos
mov
push
push
mov
ds
das
imul
cmp
ds
les
mov
lcall
cmpsl
jp
jns
fimuls
xchg
pop
lock
adc
scas
aam
pop
cmpsb
lea
add
aad
je
mov
testb
jns
push
push
push
add
sbb
leave
imul
jmp
shll
dec
in
jmp
dec
mov
divb
gs
mov
outsb
add
xor
mov
cmp
in
aam
sbb
jo
xchg
adc
sti
arpl
or
call
jo
pop
push
sub
inc
push
fcmovbe
xchg
adc
pop
mov
xchg
int
iret
aad
lea
das
jne
shl
mov
popa
xor
mov
mov
adc
pop
fisttpl
inc
stc
pop
aas
jle
add
mov
out
mov
cs
push
pop
call
int3
rorb
movsl
mov
mov
xlat
lahf
hlt
jnp
outsb
nop
inc
xor
or
sbb
inc
dec
insl
fld
xlat
fistl
movsb
inc
jmp
mov
pop
pop
loop
pop
testb
mov
xor
nop
mov
iret
sub
scas
fcompl
xchg
jmp
mov
pop
mov
cmp
fwait
sub
icebp
arpl
scas
pop
dec
lret
xchg
cmp
fistpll
lds
xchg
sbbl
and
mov
push
jns
mov
xchg
or
pop
xchg
insl
inc
inc
mov
mov
test
xor
inc
mov
mov
daa
add
push
outsb
sub
add
dec
sbb
shl
cld
inc
jecxz
sbb
or
test
outsb
jae
fimull
outsl
mov
aam
mov
xor
pop
dec
roll
daa
mov
hlt
les
popa
mov
dec
gs
and
daa
sti
xchg
shrb
xor
pop
ret
dec
fwait
nop
or
aas
mov
lcall
es
test
cmp
jb
sub
lcall
pop
movsb
stos
adc
test
loopne
cld
pop
mov
adc
fsubrs
lret
in
in
dec
fsubs
pop
xchg
sub
sti
iret
push
mov
lret
nop
idiv
pop
mov
sub
jbe
enter
bound
jecxz
adcl
jnp
cld
fistpll
push
jne
and
shr
test
pop
enter
aas
loop
mov
cwtl
adc
rcll
adc
dec
mov
std
call
aaa
das
or
sub
mov
scas
adc
aam
inc
or
xor
lret
test
cmp
mov
into
rorl
pushf
xchg
push
mov
movsl
adc
add
bound
dec
jmp
jb
adc
push
or
movsb
lahf
in
in
stos
jg
and
scas
xchg
jns
jecxz
arpl
je
std
sub
add
lods
jge
packuswb
jmp
or
cmp
pop
push
dec
test
imul
inc
cltd
xor
aaa
and
xchg
push
ljmp
and
push
clc
push
ds
pop
and
adc
xchg
fdivrl
and
repnz
mov
mov
add
pop
iret
pop
cwtl
and
pop
ret
push
jb
push
xchg
dec
cld
outsb
jmp
lret
js
or
data16
repnz
and
dec
cmpsb
mov
lcall
stos
jb
movsl
rcr
hlt
add
inc
xor
lds
jmp
cmpsb
mov
scas
jno
push
leave
push
and
cmpsl
popa
push
mov
xchg
push
push
mov
mov
and
mov
arpl
rcrb
jns
orb
mov
mov
gs
xor
xlat
aad
movsl
dec
jecxz
sbb
xor
pusha
subl
in
popa
inc
sbb
sub
add
nop
jg
push
fdivrs
or
cltd
xchg
or
sub
cmc
notb
lods
pop
or
dec
add
or
mov
inc
repz
inc
add
push
mov
data16
fwait
push
vcmpss
dec
stos
push
jg
fcoml
xchg
lret
xchg
mov
lret
mov
mov
sti
movsb
jle
adc
out
inc
and
ljmp
xor
das
idiv
movsb
test
cmp
mov
or
inc
mov
jbe
repnz
repz
ljmp
sti
mov
cmc
jecxz
xchg
jns
add
cmpsb
cmc
dec
adc
cmp
cmp
push
xchg
cmp
nop
dec
fwait
orps
and
popa
jbe
cmp
aas
push
mov
jl
xchg
lds
sbb
aad
out
cmp
int3
push
adc
outsl
push
mov
mov
test
lret
test
add
xchg
aad
mov
shll
sub
mul
adc
or
call
jle
outsl
into
jo
rclb
pop
out
test
lcall
inc
aas
addr16
insl
pop
adc
sarl
xchg
cmpsl
add
out
cs
leave
shlb
movsb
xor
pop
call
cmp
ret
xor
test
popf
mov
xchg
imul
lods
rclb
and
or
decb
xor
fadds
xlat
push
in
testl
mov
stos
or
jno
and
xchg
cmp
sub
imul
or
cs
lcall
aaa
or
shll
dec
xor
adc
mov
scas
mov
lcall
pop
and
les
fcom
push
sub
push
imul
push
mov
repnz
xchg
mulb
push
sub
xchg
mov
fnstenv
jmp
test
jp
cltd
pop
sbb
or
mov
ljmp
insb
out
dec
out
cwtl
jp
mov
xlat
and
xor
and
inc
inc
repnz
lea
loop
call
lods
jge
dec
mov
mov
or
addr16
inc
daa
xchg
dec
inc
mov
push
into
add
daa
ds
jmp
xchg
sbb
incb
lock
inc
adc
sub
test
fcmovu
mov
mov
cwtl
es
mov
add
jb
xlat
xchg
push
das
lret
xchg
std
cmpsb
push
push
mov
addb
cwtl
mov
cmp
pop
shlb
subl
enter
insl
das
or
mov
jp
stos
mov
mov
clc
xchg
lock
jae
or
and
mov
mov
and
js
das
dec
mov
sbb
cmc
xor
call
add
pop
repnz
repz
mov
loop
xorb
pusha
xlat
push
mov
xchg
and
std
ffree
and
ljmp
in
sbb
mov
sti
addl
jmp
ret
cs
and
jmp
xlat
xchg
mov
mov
jnp
mov
stc
repz
shl
in
jge
fadds
sub
aam
push
xor
cmp
dec
mov
mov
xchg
addr16
adc
icebp
adc
out
addr16
sbb
div
ljmp
mov
pop
jp
jge
xchg
push
clc
mov
or
into
jae
sbb
pusha
loopne
loopne
push
shll
xor
mov
inc
add
xchg
and
cmp
jns
in
jg
or
dec
mov
adc
adc
mov
negl
leave
push
fstps
inc
ret
call
sub
lret
adc
xchg
out
add
dec
mov
and
mov
and
in
mov
mov
test
inc
jle
inc
pop
aad
int
xor
stos
aad
cli
sub
pop
inc
stc
and
push
shr
xor
fcoml
mov
lret
ret
sbb
stos
cmpsl
xor
imul
adc
clc
popf
mov
mov
subl
fsubrl
push
add
inc
push
icebp
sti
jo
adc
jp
push
or
subl
dec
sarb
pop
addr16
daa
addps
sub
xchg
jg
push
stos
or
in
pop
rorb
in
scas
lcall
es
cmp
mov
outsb
test
and
cwtl
stos
mov
in
ffree
cmpb
mov
mov
jp
mov
popa
lds
jae
outsb
pop
hlt
jo
jno
aaa
cmp
mov
test
bound
ret
cld
xor
stos
push
fisubl
or
std
gs
and
inc
nop
xchg
leave
pop
int3
pop
sbb
pop
push
inc
dec
jp
and
lock
sahf
popf
xor
fs
xor
pop
cmpb
or
es
mov
fs
jb
mov
push
std
and
push
xchg
inc
je
and
mov
dec
pop
cmpsb
jb
mov
cwtl
addr16
mov
and
sub
mov
pop
add
repnz
mov
xchg
dec
or
and
dec
icebp
call
ljmp
aas
mov
jnp
adc
add
jp
test
or
lock
mov
rol
inc
mov
cmc
pushf
or
cmpsl
push
jne
sarb
lret
xor
pop
or
ljmp
inc
arpl
iret
sub
mov
inc
aam
cmp
adc
call
iret
ja
mov
das
and
mov
mov
fldcw
or
cmc
mov
sub
insl
jae
xor
adc
jle
out
or
add
int
stc
mov
pop
and
mov
inc
popf
fbld
or
loopne
xor
movsb
dec
aad
insl
sbb
xchg
cmp
mov
push
andl
jl
xor
dec
mov
mov
sbb
push
push
mov
popf
movsl
int3
mov
push
or
repnz
scas
cs
orl
lret
data16
xlat
pop
dec
fimull
sub
mov
aaa
and
adc
jae
pop
mov
int
dec
cmp
out
mov
mov
or
cwtl
into
sbbl
xchg
dec
pop
scas
enter
int3
mov
lret
xchg
arpl
aam
xor
cld
jnp
mov
popf
xor
subb
ret
shrb
mov
loope
insb
mov
mov
lret
cld
lret
push
adc
and
add
xor
in
nop
mov
sbb
xor
or
add
xchg
cmp
xchg
stc
stc
iret
xchg
fstpt
push
mov
adc
add
fldz
jle
out
and
and
push
cs
jge
inc
mov
inc
testb
or
and
fbld
pop
es
lahf
subps
mov
fisubrs
xor
sarb
mov
sub
dec
xchg
ja
inc
scas
lods
inc
arpl
jecxz
sub
jo
dec
sahf
gs
dec
lock
cmp
cmpb
add
xor
fdivr
and
or
cmp
xchg
inc
into
mov
lcall
fwait
cld
movsl
adc
aad
cmp
dec
mov
xlat
pop
lret
insl
roll
jge
nop
jo
aaa
inc
inc
push
orb
repz
push
mov
inc
cwtl
pusha
loopne
sbb
rcll
mov
je
pusha
cmp
inc
inc
xchg
orl
ljmp
sbb
lret
or
cmp
and
inc
mov
push
inc
mov
das
or
bound
lahf
inc
cmpsl
adc
in
cmpsb
cs
lods
mov
cmp
inc
test
dec
lret
dec
push
lret
in
xchg
sbb
adc
dec
jbe
roll
push
sbb
fists
lcall
ja
mov
pop
xchg
xchg
out
sbb
aaa
jge
inc
mov
aam
adc
rcll
and
popa
mov
pusha
mov
out
sbb
insl
inc
xor
sbb
fstpl
fstpt
sbb
mov
aam
add
es
in
je
or
mov
push
shl
cmp
pop
sub
loop
inc
inc
xor
push
std
arpl
xchg
std
bound
mov
aad
aam
push
cmpsl
sti
sbb
fstpl
outsl
shl
push
and
into
pop
jb
pop
pushl
cmpsb
loopne
cpuid
sub
and
or
cmp
arpl
cmp
aam
ret
sbbl
aaa
ret
sbb
mov
add
lret
sub
loopne
int3
cltd
retw
stos
adc
inc
adc
mov
dec
fstl
push
mov
fimuls
mov
xor
cmc
pushf
das
xchg
dec
dec
ja
add
sub
iret
or
clc
into
sbb
pop
or
cld
popa
add
pop
icebp
jns
test
cmp
sbb
mov
push
test
pop
dec
loope
mov
cmc
and
push
out
fiaddl
xchg
add
or
cmp
sbb
and
push
dec
mov
stos
test
add
pop
fimuls
and
jecxz
inc
dec
lcall
xchg
fs
dec
aas
xor
movsb
add
sub
pop
cmp
xorb
xchg
fs
test
add
xor
outsl
testb
dec
mov
add
mov
mov
lea
sbb
sub
or
sub
mov
cltd
jae
xor
std
xchg
inc
test
and
mov
xor
fcoml
cmp
mov
inc
adc
stos
js
je
mov
clc
test
ja
shlb
adc
in
sub
enter
sub
push
ret
popa
mov
dec
add
fnstcw
test
icebp
mov
adc
push
xlat
lock
sbb
inc
adc
push
in
xor
loope
test
test
lcall
sbb
es
push
mov
stc
or
or
mov
inc
cmpsb
add
ret
sbb
and
push
dec
sub
gs
repnz
sub
pop
fcomi
popa
mov
lock
gs
out
aad
and
call
les
popf
phsubd
sbb
xlat
mov
es
imul
fisubs
and
xchg
cmpsl
std
xchg
and
jne
inc
push
adc
xchg
lods
mov
push
fwait
imul
cli
pop
shlb
add
pop
ja
xchg
lods
mov
jo
inc
dec
js
popa
mov
fbstp
aam
bound
pushf
sbb
cmp
mov
cltd
cmc
mov
ds
pop
xchg
or
out
shlb
mov
subb
push
dec
fisubs
stc
sahf
movsl
add
nop
or
fmull
sar
lods
mov
stos
dec
or
dec
inc
lret
inc
sub
mov
test
or
push
movsb
mov
or
mov
mov
cwtl
push
sbb
mov
cld
jl
lahf
int
xchg
sbb
jbe
inc
mov
sub
cs
jno
nop
cmp
or
je
outsb
and
cmpb
pop
subl
bound
nop
or
jbe
insb
adc
dec
xchg
lahf
xchg
xchg
add
scas
jns
mov
ret
stos
mov
inc
push
pop
dec
inc
mov
mov
les
jmp
into
int
sub
push
jg
xor
push
rcr
movsb
pop
cld
stos
das
out
xchg
fistpl
shll
imul
sbb
inc
xchg
dec
push
mov
add
inc
push
adc
xchg
in
mov
in
push
or
jle
lret
xchg
repnz
test
insb
cmpsb
js
gs
inc
popa
int
and
add
add
mov
es
push
popf
stos
xor
xchg
out
cmp
pop
cmc
int3
fstpl
inc
lock
dec
popa
cmp
int
sbb
loopne
pop
sub
pop
sub
arpl
ds
sub
adc
xor
aam
test
dec
sbb
sbb
mov
or
mov
mov
sbb
jbe
pusha
mov
push
push
pop
pushf
push
cwtl
and
out
arpl
adc
add
int3
mov
das
inc
int3
sbb
outsb
aas
mov
jno
in
mov
fcoms
pop
sub
sbb
mov
mov
rorl
mov
in
cmp
es
inc
pop
xor
mov
mov
sti
push
rcrl
pop
out
roll
lods
jbe
sub
aad
or
out
or
pop
mov
xchg
pop
ffree
mov
and
and
push
repz
pop
mov
shlb
sarb
or
pop
push
pop
test
leave
data16
in
es
cmpsb
xlat
movsb
jg
mov
xor
dec
imul
test
out
push
ret
lret
push
stc
xor
push
adc
out
and
mov
loop
adc
mov
data16
xchg
jg
loop
mov
push
jg
mov
sahf
cmp
adc
sub
dec
inc
arpl
into
mov
ja
mov
lods
pop
loopne
imul
jnp
imul
sbb
rcrl
dec
nop
lods
in
dec
fisttpl
movmskps
jecxz
sub
mov
popa
repnz
pop
xor
lock
ret
sbb
mov
push
ret
xchg
sbb
jle
in
ljmp
cs
mov
aam
loopne
pop
mov
sbb
add
filds
mov
and
xor
adc
loop
in
xchg
pop
lock
add
dec
negb
jl
adc
inc
cmp
mov
mov
iret
inc
inc
lret
fimuls
sub
fpatan
mov
je
xchg
add
repz
sbb
dec
lahf
dec
sub
ret
mov
ss
add
push
fwait
push
out
cltd
inc
aad
push
sarb
cmpsb
fdivs
mov
add
mov
mov
add
xchg
fst
xor
pop
inc
add
cmc
mov
xor
pop
mov
in
mov
rcr
push
xor
adc
mov
mov
pop
and
or
sub
shll
sbb
cltd
fs
ficompl
inc
hlt
mov
push
mov
add
fisttpll
jmp
jne
cmpb
das
movsl
push
lea
sub
jp
mull
popf
incl
cltd
insl
or
in
cmp
daa
push
in
lret
mov
adc
xor
adc
sbb
and
insl
mov
ja
inc
mov
xlat
push
cs
out
enter
mov
std
sbb
pop
out
mov
lret
push
or
ds
nop
jecxz
punpcklwd
int3
push
fwait
negb
cmc
shll
push
popl
push
stos
fcoml
cmc
jmp
subb
insl
ja
jae
push
sub
jg
jmp
aad
jp
cltd
movsl
adc
bound
push
sbb
out
out
jmp
int3
xor
jecxz
xchg
mov
sub
jae
bound
int
out
test
nop
int3
jmp
cwtl
stos
mov
mov
add
fldt
ja
lock
ja
sbb
mov
dec
imul
dec
ds
sbb
lahf
or
sub
je
shrl
mov
cmp
sub
les
dec
mov
mov
cmp
hlt
mov
andb
into
into
aas
adc
cmc
cmp
shlb
sub
mov
xchg
sbb
loop
and
and
mov
xor
push
jne
and
adc
ja
xchg
jle
push
gs
mov
mov
and
adc
push
inc
xchg
scas
scas
cmp
arpl
sbb
clc
test
add
mov
xor
xor
sub
call
mov
icebp
add
jecxz
mov
in
daa
pop
cmpsb
sub
xor
add
or
pop
mov
icebp
fcmovb
fcomps
dec
loopne
pusha
sbb
repnz
or
bound
cld
daa
jne
scas
cmpsl
das
mov
fisubl
stos
inc
inc
push
arpl
fcompl
add
test
mov
sbb
dec
sub
outsb
clc
sahf
sbb
lcallw
inc
lods
mov
insb
test
inc
adc
push
lea
dec
es
int3
movsl
enter
mov
or
inc
ss
lock
jbe
imul
and
jg
aad
and
lcall
call
dec
in
out
pop
cltd
fiaddl
sub
imul
mov
inc
jp
adc
stos
xorl
test
push
push
lret
in
pop
lea
imul
or
adc
mov
mov
hlt
scas
pop
cmp
dec
xor
pop
pop
clc
sbb
mov
cld
mov
icebp
fbstp
sub
push
push
mov
push
adc
push
inc
fadds
jns
jnp
imul
pop
push
dec
out
leave
pop
imul
inc
in
imul
mov
clc
or
repz
fcmovnbe
cli
jno
push
jns
xor
xchg
rcll
adc
shl
or
fmull
dec
adc
push
shll
xchg
mov
sbb
xor
daa
push
out
in
cltd
hlt
test
int
leave
iret
mov
inc
stc
cmp
decl
mov
push
in
inc
pusha
clc
das
orb
push
xor
adc
aad
aas
rcrb
jp
imul
or
into
cwtl
cs
dec
mov
push
ljmp
fisubs
shrb
adc
movl
sti
add
sub
jg
sbb
hlt
or
test
and
xchg
xor
ja
cltd
enter
mov
scas
cmp
pop
cld
pop
leave
pushf
cltd
inc
in
lock
xchg
lea
mov
fnsave
adc
cmp
aaa
stos
sti
pop
ja
sysexit
mov
lret
notl
xchg
mov
jp
in
adc
hlt
mov
cmp
xor
aad
iret
and
popf
fwait
fwait
add
jnp
adc
loopne
sti
xor
push
xchg
sti
push
mov
int
mov
pop
ja
lcall
xchg
push
mov
int
sbbl
xlat
sbb
data16
xorb
or
sbb
addr16
xorl
es
mov
mov
fisubs
xchg
orl
or
xchg
push
push
adc
mov
xor
outsl
dec
inc
adc
push
jnp,pn
add
add
rorb
sub
dec
add
repz
sub
inc
pop
sti
sub
or
and
push
roll
enter
hlt
mov
mov
ss
fsubrs
pop
dec
xor
mov
nop
aaa
ret
hlt
mov
push
rsm
shl
mov
xchg
mov
mov
and
or
or
mov
sar
cs
cmp
mov
inc
popa
inc
dec
jecxz
mov
lea
xor
lea
dec
adc
jae
mov
mov
jmp
sub
sarl
push
sahf
out
cmp
cld
insl
or
dec
jns
push
jo
cwtl
jg
xor
dec
jge
mov
test
add
pop
scas
cmp
sbb
xor
xchg
popl
scas
loop
dec
dec
stos
xlat
cld
cmpsb
mov
mov
int3
dec
adc
sbb
sbb
lret
pop
mov
sub
sub
ja
cwtl
ja
lcall
adc
jmp
adc
addr16
dec
mov
push
aam
add
insl
stos
jmp
cmp
int3
jo
dec
jnp
decl
fnstenv
pop
add
aam
xchg
xor
ja
in
xor
gs
lods
test
shl
gs
call
inc
or
mov
lret
mov
cmp
mov
add
stos
xor
std
test
pop
or
push
xchg
sbb
cmp
dec
repnz
sub
fiadds
ficoms
je
push
cmc
add
dec
xchg
adc
and
lds
mov
dec
pop
or
push
nop
add
mov
fwait
lcall
in
in
inc
jb
scas
icebp
mov
into
icebp
lods
lock
pop
dec
rcrl
movb
push
dec
out
mov
pushf
add
sarl
sbb
call
add
sub
jl
and
mov
bound
dec
xor
fisttpl
and
push
dec
fadds
lods
es
fiadds
lock
xor
shll
sti
adc
and
sbbl
add
aad
dec
cmp
cmp
mov
mov
inc
mul
js
sbb
in
fistl
jae
xchg
pop
xchg
or
mov
lcall
or
pop
lret
push
sub
adcb
or
and
mov
mov
mov
push
cmp
js
lods
mov
sub
int
mov
xor
pop
cmc
or
xchg
pop
sbb
insb
sub
ficoms
lahf
add
sbb
adc
mov
jb
mov
shlb
dec
mov
sub
cltd
popa
in
popa
lods
pop
push
iret
shlb
dec
add
inc
mov
mov
push
sbb
cwtl
cmpsb
clc
arpl
sahf
aad
mov
and
cmp
scas
test
arpl
ja
and
xor
push
jl
fidivrl
pop
adc
lods
dec
and
popa
jg
mov
push
mov
cmpsl
in
in
pop
pop
jge
cmp
sub
arpl
ss
mov
cmpsb
adc
dec
push
hlt
int
imul
stos
xchg
testl
mov
xchg
mov
repz
arpl
cmp
rcl
mov
sbb
in
mov
push
popf
jp
lods
ljmp
cmc
sub
stc
sbb
inc
cmp
int3
call
inc
in
sahf
inc
add
jp
daa
fistpll
leave
inc
leave
loope
inc
mov
in
mov
mov
mov
cmp
mov
adc
adc
xchg
and
xor
nop
pop
aas
fwait
out
mov
mov
sub
xchg
push
outsl
scas
nop
sub
sbb
sub
cmpl
sbb
or
insb
test
lods
cwtl
cvtps2pd
jbe
lods
jle
dec
jns
ficomps
mov
data16
adc
rcrl
pusha
jl
fcoml
ss
dec
jge
cwtl
xchg
sub
shll
push
fimull
inc
ss
adc
aam
in
inc
mov
jb
push
sub
jbe
inc
sar
lds
loope
dec
rorb
push
mov
icebp
mov
cmpl
lea
ja
or
fisubrl
aaa
movl
rolb
sbb
das
mov
pop
cs
icebp
dec
adc
sub
dec
lahf
mov
inc
shlb
sbb
mov
mov
xor
push
push
jae
or
fucomip
in
push
push
add
mov
jne
loop
rcl
insl
adc
dec
xchg
in
mov
loope
dec
ljmp
jno
out
bound
add
mov
cmpsb
std
jo
ja
lahf
out
dec
xchg
clc
add
lea
and
push
xor
das
mov
xchg
je
lret
wrmsr
insl
mov
jne
push
add
out
cmp
mov
and
push
ret
sbb
dec
outsb
pushf
aad
dec
or
enter
in
adc
lret
inc
or
mov
mov
daa
testl
cli
adc
inc
inc
jge
int
jl
icebp
add
repnz
mov
xlat
xlat
addr16
in
mov
sbb
mov
in
scas
push
lods
sub
sbb
jle
addb
sarb
int3
jae
sbb
sti
pop
js
popa
add
in
mov
lea
mov
fsubl
faddl
xor
or
repz
mov
sbb
stos
addr16
sbb
lds
sbb
loope
sahf
mov
popf
and
cmp
or
shlb
dec
outsl
rorl
pop
mov
mov
outsl
xchg
xor
push
xchg
sub
aad
repz
adc
aad
add
les
jns
push
pushf
mulb
in
mov
bound
ret
pop
inc
es
clc
addb
enter
cmovo
ret
outsl
jp
dec
lods
call
pop
jno
imul
test
inc
sub
lock
xchg
push
mov
lea
mov
cli
std
jl
js
add
std
adc
adc
xor
pusha
push
push
add
fucomi
sub
cltd
repz
out
xor
mov
sub
mov
and
shl
push
ljmp
pop
xchg
xchg
inc
pop
xor
iret
sub
ss
lds
ss
add
inc
inc
inc
mov
imul
mov
out
adc
shll
pusha
jp
insb
jp
sbb
xor
fistpl
outsl
and
pop
jne
das
cld
sub
mov
sbb
shl
stos
dec
outsl
jg
sbbb
mov
sbb
sti
loope
shll
test
aad
xor
data16
add
out
mov
in
testl
cmove
sub
sbb
add
pop
add
cmp
out
pop
fnsave
mov
pop
pop
pop
arpl
cmpsb
outsb
adc
xchg
in
sub
mov
jne
testl
cltd
addb
xor
shll
cmc
scas
and
mov
gs
fildl
mov
in
xchg
pop
xor
sbb
mov
repz
pop
jae
jmp
stos
aam
jns
rcl
inc
jo
cwtl
fcoml
xchg
jb
mov
lock
jo
lret
fnop
inc
mull
jnp
mov
repz
inc
cmp
cwtl
mov
nop
shll
fsts
pop
addr16
cltd
jae
xlat
in
mov
xor
int
in
rorl
insl
mov
mov
inc
scas
sub
mov
scas
cs
call
fiadds
test
repnz
xor
popa
mov
popf
dec
ss
mov
stos
mov
push
push
into
xor
popa
mov
ja
push
stc
or
rcrl
and
lock
mov
idiv
dec
xor
and
clc
enter
jae
pop
stc
or
mov
jmp
sub
or
and
repnz
popf
arpl
dec
dec
push
push
leave
and
mov
jg
adc
mov
inc
mov
inc
out
adc
jle
test
jno
hlt
mov
adc
push
push
loope
fstpl
in
jb
xor
mov
incl
or
jmp
push
gs
movsb
push
or
ret
dec
scas
xchg
cs
outsb
adcl
push
cltd
movsb
clc
cmpsl
fiaddl
cmp
dec
xor
pop
pop
mov
jl
mov
outsl
inc
mov
in
sbb
stc
lea
sbb
scas
test
iret
dec
aaa
sub
rorl
jbe
pop
pop
inc
hlt
aas
sbb
inc
mov
push
inc
push
dec
int
frstor
out
dec
xor
mov
jo
mov
push
pop
pop
fs
mov
or
jae
xchg
mov
in
outsb
pushf
sbb
jle
push
aam
leave
lcall
nop
or
cmp
loop
jmp
adc
push
mov
add
pop
sbb
cld
icebp
ljmp
push
das
iret
cmpsb
sahf
ds
movsb
imul
mov
and
jg
fimull
fcmovnbe
das
inc
or
pop
das
adc
fnstsw
std
clc
xchg
popf
sbb
xor
cmp
in
daa
lods
popa
int
and
jns
xchg
sub
push
mov
dec
test
mov
xor
notl
pusha
inc
stos
inc
outsb
lahf
sub
out
sbb
rorl
or
data16
fistpl
push
mov
aam
addr16
in
rcl
adc
fwait
pop
cmp
and
mov
adc
mov
mov
es
das
and
inc
scas
sahf
push
push
adc
cmc
ja
jns
push
add
rcl
test
xor
sahf
lcall
les
pushf
inc
pop
dec
inc
sub
enter
fisubl
cs
adc
in
xor
mov
fildll
xor
sbb
mov
jno
xor
jl
icebp
xchg
adcl
repz
out
addb
leave
sbb
jo
leave
call
add
mov
xlat
lea
add
sub
inc
mov
cld
cs
fdivs
pop
and
sub
and
adc
xchg
rolb
ret
aas
out
lds
add
loope
movsl
rclb
loope
jp
jle
push
pop
pop
add
scas
inc
xor
dec
pop
push
mov
dec
cld
cmp
repnz
out
test
xchg
popf
popf
mov
popf
lds
shrl
xlat
leave
xor
ret
test
cmpsb
jle
inc
stos
adc
les
cmc
sub
add
jae
mov
and
into
xchg
and
or
mov
shl
lea
sbb
ret
lahf
pop
pop
adc
in
mov
xor
add
iret
pop
mov
lds
xchg
test
dec
pusha
outsl
pop
mov
cmpsl
jb
shlb
jb
cs
inc
xchg
xchg
push
sarl
xor
sub
ss
or
xchg
in
jbe
cwtl
mov
enter
lods
or
sbb
mov
pop
dec
testb
leave
not
inc
xor
stos
ficoml
sub
fcomps
movsl
rcrl
cmpsl
test
push
rolb
mov
and
mov
or
es
jns
xchg
call
loop
lock
adc
jo
pop
incb
mov
ds
std
movsl
in
sbb
add
xlat
fiadds
add
repnz
sbb
push
mov
insb
cld
cmp
jl
lods
or
cmp
jecxz
mov
enter
push
mov
or
shrb
add
icebp
mov
xchg
mov
inc
and
shrb
pop
xchg
xchg
mov
lock
stos
lods
mov
sbb
lock
mov
cmpsb
jg
lea
clc
cmp
lret
pop
out
repnz
push
dec
std
aad
dec
ljmp
test
mov
in
clc
bound
repnz
push
or
lods
les
inc
mov
push
mov
push
cmp
adc
das
insb
pop
mov
add
xchg
adc
pop
decb
nop
jle
std
daa
ret
mov
ljmp
cs
push
or
das
in
or
ja
fnstenv
ret
cltd
push
jl
mov
cwtl
dec
dec
add
sbb
adc
test
ss
scas
xor
int3
cs
sbb
gs
lods
sbb
loope
add
dec
adc
mov
add
shrb
outsl
repz
add
sub
xchg
cmp
aad
out
frstpm(287
mov
stos
pusha
int
push
push
jp
ret
icebp
rcll
aas
fildll
jb
sbb
in
xor
fistps
push
adc
popa
lds
push
jno
and
add
mov
std
fiaddl
sbb
int3
fistpll
jne
lock
mov
push
je
adc
cmpsb
add
pushf
mov
push
push
inc
in
frstor
dec
xor
lcall
arpl
clc
mov
lret
cmpl
or
pop
mov
movsb
lcall
adcb
dec
mov
arpl
mov
ret
inc
subl
jo
scas
xor
arpl
or
mov
mov
xchg
das
cmp
mov
stos
mov
in
nop
ret
mov
inc
ja
or
mov
jg
mull
cmp
and
scas
inc
mov
cmp
cltd
psubsw
ret
add
gs
lods
outsb
cld
arpl
popa
sub
popa
xchg
sbb
scas
xchg
fildl
sub
stc
nop
jo
in
stc
xlat
js
sub
pushf
lock
add
test
mov
dec
clc
mov
and
cwtl
xor
or
ss
dec
dec
sub
push
test
add
xchg
add
outsb
das
rol
add
fsubl
mov
out
call
ficompl
es
inc
pop
filds
out
push
negb
pop
nop
xor
xchg
dec
mov
aam
xchg
mov
mov
mov
cmp
sbb
add
mov
fnstcw
xchg
jo
lock
sti
adc
andb
aas
xor
mov
loop
push
repz
or
insb
mov
xor
xchg
or
mov
mov
fwait
xchg
xorl
aaa
inc
xchg
and
push
mov
or
movsl
lahf
push
sbb
pop
xchg
cs
jno
dec
xlat
mov
inc
mov
mov
mov
mov
sarl
js
jecxz
std
add
add
pop
imull
sub
inc
fcmovbe
ret
jb
imul
jmp
fidivl
mov
cmc
jl
jns
jg
shlb
or
in
mov
xor
add
sbbb
fwait
jo
push
add
adc
stc
sarb
loop
ror
les
pop
fmuls
push
mov
fildll
mov
and
mov
sbb
loop
cmp
mov
daa
iret
xchg
dec
mov
imul
sbb
mov
mov
add
mov
in
test
dec
pop
pop
xchg
pop
cmpsl
mov
or
and
sarl
and
or
push
lahf
push
sti
xchg
mov
mov
jns
loop
sbb
push
inc
fidivs
xchg
xchg
push
movsb
sbb
sbb
fimuls
fwait
push
mov
fwait
js
mov
scas
mov
dec
cld
sbb
daa
jmp
ja
outsb
clc
sbb
sti
gs
dec
push
shrl
cs
jno
cmp
pop
push
lds
add
adc
inc
pop
adc
cli
cmpsl
in
sub
xorl
addb
loope
orl
lcall
and
mov
fucomi
cmp
jmp
clc
lcall
mov
pop
pop
jno
push
dec
push
daa
imul
push
loope
jle
mov
out
icebp
mov
lods
ss
ret
cmp
adc
lcall
scas
mov
xor
push
fcompl
pushf
and
cmpsl
sub
jb
cmp
movsl
inc
or
jne
or
sbb
jp
mov
std
shrl
shll
or
rorb
mov
ret
xchg
arpl
push
pop
fwait
xchg
dec
nop
pop
lods
mov
mov
dec
imul
pop
jbe
sbb
mov
lock
cmp
mov
cld
lea
cmp
lret
sbb
out
cli
into
pop
imul
inc
mov
mov
sub
mov
pop
mov
pop
lds
push
push
push
fwait
inc
mov
adc
sub
xlat
adc
cs
outsl
push
loopne
enter
pop
js
inc
adc
adc
add
push
sbb
and
mov
xor
jl
sahf
add
fisubrl
mov
sub
inc
movsl
mov
test
jo
sub
sbb
sub
mov
mov
sbb
lret
int3
inc
inc
or
ret
arpl
cmp
add
add
ficomps
shl
rorb
je
mov
out
add
fmull
pop
rorb
cld
mov
jmp
lods
inc
hlt
out
iret
mov
and
pop
mov
add
mov
movsb
fwait
pop
inc
push
fcmovnu
cmp
or
and
sub
idiv
fdivrl
insb
mov
pop
xchg
bound
jle
push
test
push
mov
dec
mov
sbb
movsl
mov
popf
in
inc
fisttpl
jns
push
ss
mov
ret
faddl
lcall
mov
add
pop
pusha
sub
loopne
cmp
dec
into
cmp
insl
add
xor
sub
cmp
ficompl
fsts
cmc
pop
and
je
xchg
xchg
or
inc
adc
jo
insl
or
ljmp
lds
sbb
shrl
push
out
dec
adc
sti
out
add
imul
in
xchg
and
loopne
lods
xor
imul
push
jbe
out
inc
push
pop
vpmacsswd
daa
dec
mov
leave
mov
fs
fbstp
sahf
adc
fidivl
aaa
bnd
dec
and
and
cld
addr16
loopne
cmp
adc
sbb
and
inc
pop
out
pop
mov
jne
sbb
sarb
aad
jl
leave
lret
xchg
pcmpgtd
inc
ficomps
into
cmp
and
ss
aam
mov
ljmp
cwtl
popf
pusha
je
in
pop
push
mov
push
lcall
mov
outsl
push
fnclex
sahf
and
mov
lret
out
in
ficomps
cs
inc
dec
lret
push
subb
mov
fistpl
sti
pop
in
inc
and
in
and
push
cmpsl
iret
mov
bound
fisubs
roll
and
lret
xor
inc
jp
loop
mov
push
jbe
xchg
negl
imul
pop
das
xchg
cmp
int3
mov
cmp
push
addr16
loop
mov
cmp
jae
lock
mov
mov
lret
enter
adc
cmp
push
jbe
test
int
fistl
xchg
inc
fisttps
or
lods
addb
dec
lret
pop
sbb
mov
out
aam
cmpsb
out
out
mov
push
mov
imul
nop
push
testl
fs
leave
mov
mov
push
mov
mov
call
push
popa
shlb
arpl
scas
out
loop
push
lds
inc
stos
lods
mov
in
sbb
pusha
push
inc
outsl
fstl
dec
cmpsb
adc
inc
cmpsl
or
dec
loop
iret
push
in
push
push
imul
pushf
add
aam
test
sbb
js
rcll
xor
jp
daa
mov
lock
lret
or
lock
inc
sbb
loop
cmc
adc
ret
lret
sub
stos
rcll
shrl
mov
xor
fst
mov
add
loop
xor
addr16
mov
dec
push
popa
mov
das
icebp
stos
ljmp
mov
int3
jnp
nop
sbb
sub
lock
stc
add
sub
out
dec
movsl
and
mov
jo
jns
pmuludq
sysexit
loopne
int
pop
mov
push
outsb
jae
lds
or
les
xchg
sub
jnp
lahf
sub
sbb
leave
iret
dec
pop
mov
das
test
insl
mov
sub
rcl
cmp
lcall
or
cmp
orl
cmp
dec
lock
mov
shll
fs
cmp
out
test
push
mov
xchg
cli
sub
and
in
xchg
mov
adc
adc
and
jge
mov
mov
push
fmull
repz
scas
das
scas
out
test
dec
cs
add
dec
or
and
jge
idivl
int
xlat
sub
into
pop
movsl
inc
add
pop
add
push
bound
dec
mov
les
bound
addr16
pop
sub
cmp
adc
lahf
popa
xor
jg
xor
jnp
out
adc
pop
es
in
filds
out
xchg
insb
nop
cmc
pop
sbb
ss
lahf
jne
cltd
cmp
adc
add
add
data16
xchg
inc
outsb
sbb
mov
out
jle
rolb
js
jmp
jle,pt
cmp
es
lock
add
cmp
js
std
nop
xlat
pop
push
scas
and
pop
mov
lcall
cmp
push
cmpb
popa
aas
cmc
movsl
jecxz
lock
mull
mov
rolb
mov
add
mov
push
pop
imul
mov
and
imul
xchg
mov
repz
orl
int
arpl
das
aaa
mov
jns
mov
push
loopne
enter
add
jne
or
cwtd
ret
jle
add
fldenv
adc
jbe
nop
das
xor
inc
mov
fs
lahf
sub
mov
and
daa
stc
data16
ret
ficoml
ret
pop
jge
adc
and
sbb
pop
mov
lret
in
movsb
sub
push
jle
adcl
orb
cmpsb
loopne
sbb
cs
cmp
ret
les
fisubrs
out
arpl
jns
xor
das
inc
dec
mov
cmp
pushf
xor
xor
rolb
fdivrl
mov
adc
or
push
js
xchg
ljmp
xchg
or
add
pop
or
popa
int
mov
cmp
dec
or
lret
fldcw
inc
xor
arpl
dec
push
pushf
outsl
cli
adc
dec
jb
jo
faddl
sbb
lods
aad
cmovl
dec
or
xchg
jge
sbb
inc
fstl
scas
add
jle
arpl
sub
dec
out
in
and
in
out
mov
out
pop
fmull
cmpsl
pop
mov
das
loope
jge
xor
xchg
dec
sub
es
pop
mov
inc
ret
sub
pop
cmp
mov
pusha
ficoms
and
cmpsb
cmp
not
jbe
shlb
mov
in
cmp
sub
xchg
cmp
lcall
dec
sbb
sbb
push
xor
nop
cmpsb
gs
rcll
hlt
stos
movsb
lds
or
test
movsl
jbe
sbb
inc
dec
movsb
mov
xlat
aad
cmpsb
jge
call
cld
mov
ret
inc
jmp
fbld
push
jno
ja
sbb
call
add
out
xchg
sbb
or
and
pop
add
out
outsl
xchg
xor
xchg
or
sub
mov
lds
adc
jnp
xchg
loope
data16
push
outsb
sbb
popl
pop
sbb
mov
mov
iret
jb
lods
pop
jecxz
jp
mov
inc
mov
aam
mov
pusha
in
movsb
ja
fisttps
jmp
mov
pop
addr16
xor
pop
out
fnstenv
scas
outsl
out
sub
mov
fstl
jmp
stos
add
jb
aam
add
mov
sub
push
in
push
testb
mov
adc
jp
addr16
pop
inc
fwait
js
and
push
mov
sti
fcomps
pop
inc
aaa
lahf
push
stos
lcall
js
xor
push
xor
mov
in
mov
movsb
or
lret
add
ss
std
push
and
mov
sub
mov
or
or
sahf
loop
push
or
in
or
add
pushf
cld
mov
jmp
sbb
push
cli
cli
mov
sub
jae
ss
cwtl
mov
inc
enter
cmp
jecxz
enter
ja
adc
lret
push
mov
ljmp
fiadds
pop
dec
hlt
mov
je
imul
sbb
ljmp
cmp
fstps
int
fbstp
xchg
ficomps
sub
jl
add
jb
xor
mov
pop
fs
outsb
cmc
popf
pop
test
std
or
push
or
xor
push
mov
mov
sbb
xor
cmp
divl
dec
mov
fmulp
xchg
ficomps
jbe
rcr
fimuls
loop
stos
out
xor
inc
jns
mov
or
popf
sub
xchg
jns
or
add
lcall
imul
adc
dec
dec
mov
notw
push
fldcw
lahf
mov
jl
ds
mov
cmp
push
fdivp
pop
dec
loope
pop
sbb
bound
sti
mov
jne
sbb
dec
dec
or
testl
jae
xchg
dec
jg
mov
hlt
push
jecxz
int3
clc
hlt
ds
aam
repz
add
or
xor
push
call
in
dec
mov
xchg
js
je
mov
lahf
lock
mov
xchg
imul
mov
fwait
ss
popf
leave
ret
stc
iret
les
sarl
test
mov
repnz
push
jmp
jno
clc
jae
aas
cld
pop
fs
sbb
jecxz
stos
xlat
in
xchg
xchg
mov
dec
shll
xor
in
stos
jbe
adc
ss
sub
fdivl
aam
stos
scas
inc
popa
jge,pt
scas
iret
dec
repz
out
and
pop
into
incl
int
mov
out
push
sahf
clc
test
add
xchg
ficompl
pop
orps
xchg
mov
xchg
push
insb
mov
imul
sbb
adc
repnz
or
fcoms
sbb
push
mov
cmc
pop
push
cmpsb
inc
mov
rcr
negl
lret
out
dec
mov
insl
jl
mov
jnp
cmp
dec
xchg
push
mov
mov
dec
loopne
cltd
add
out
addl
add
test
push
mov
lods
dec
adc
movsb
mov
or
lock
mov
lea
adc
sahf
mov
movsl
xchg
pop
or
enter
lds
imul
std
outsw
mov
adc
imul
in
out
loopne
fstpl
nop
ss
push
mov
fidivrl
jo
mov
jmp
lods
mov
and
rcrl
insl
sti
mov
adc
pop
stc
add
insl
jecxz
add
cmp
aaa
inc
cwtl
cld
shll
push
jne
inc
mov
out
imul
ja
movsb
xchg
pusha
dec
je
aas
test
cmp
pop
insl
icebp
inc
add
mov
inc
xchg
sbb
out
lock
lds
lods
loope
jb
addr16
push
ret
int
pop
cmp
sbb
fistl
ja
mov
frstor
jle
dec
pushf
dec
cmp
dec
roll
das
inc
testb
jmp
push
cld
adc
mov
jmp
icebp
fnstenv
test
add
lock
pop
imul
mov
je
scas
lret
rorl
outsb
inc
push
push
or
cmp
push
in
cmp
xchg
dec
push
xlat
in
push
divl
mov
mulb
dec
mov
sub
mov
std
hlt
ljmp
dec
sbb
into
imul
imul
mov
das
xchg
pop
pusha
cmp
adc
enter
push
nop
push
inc
jbe
lds
adc
mov
outsb
xchg
adc
shll
inc
adc
int3
xchg
push
xor
ljmp
sub
out
imul
testb
sbb
loop
or
hlt
std
shll
inc
or
les
lock
es
add
and
sbb
cmp
les
daa
mov
and
out
jno
push
mov
push
fistpl
cwtl
clc
lea
out
mov
mov
push
test
add
int3
sbb
push
mov
shl
out
es
pop
orb
xchg
mov
push
rolb
sub
mov
movsl
push
mov
and
jbe
inc
notl
sarb
insl
imul
fcmovnb
xchg
into
cmp
in
inc
cli
jno
mov
clc
inc
loop
add
aas
out
stc
sti
add
xor
xchg
dec
xor
mov
pop
fisubrl
dec
pop
mov
mov
dec
int3
in
and
or
and
lret
sub
pop
lock
rolb
push
aam
jb
mov
pop
loop
leave
mov
mov
mov
mov
sub
mov
xchg
pop
xchg
in
sub
jle
in
and
push
clc
jb
test
jbe
fisubrs
mov
mov
xchg
jl
push
loop
fidivrl
push
clc
scas
mov
jnp
dec
mov
pop
dec
scas
out
mov
ja
inc
or
hlt
xlat
clc
movsb
imul
push
testb
jae
sbb
pusha
in
and
add
adc
mov
test
pop
stos
movsb
int
imul
jae
push
cmp
mov
sub
jae
xor
loope
jmp
push
lret
cltd
aaa
add
sbb
les
lock
stos
into
mov
cmpsb
iret
jb
mov
mov
ja
lods
push
movsl
lds
orl
test
sbb
cmpsl
sub
lret
pop
dec
into
leave
movsl
subb
int
mov
dec
add
aad
dec
in
jge
sub
ror
lret
mov
sbb
and
cmp
arpl
pushf
inc
inc
std
int3
or
add
mov
add
gs
call
js
jge
or
pop
hlt
addr16
aaa
and
xchg
in
adc
lret
lods
out
cltd
mov
xor
xchg
and
push
mov
mov
dec
test
subb
mov
sti
dec
repnz
ja
mov
push
mov
movsb
xchg
cmp
outsl
dec
pop
clc
cmc
xor
xlat
push
into
clc
or
or
dec
cmp
jecxz
sete
cmpb
inc
push
sti
mov
dec
cmp
fisubs
clc
dec
xchg
sahf
adc
test
cld
or
pop
mov
xor
or
fistps
rcll
dec
xchg
sub
repz
sbb
test
inc
push
dec
xchg
add
outsb
popf
xor
push
stos
xor
hlt
jae
mov
sbb
push
cmp
and
mov
aad
xchg
lock
jo
push
sub
xor
in
nop
loopne
pop
int3
cmp
xchg
inc
sbb
sub
in
sub
fmul
pop
hlt
push
addb
jmp
jecxz
mov
or
aaa
fmul
in
daa
cwtl
mov
cltd
mov
in
int
cwtl
add
fnstcw
and
push
fldl
xchg
movb
adc
xchg
xor
ljmp
in
adc
mov
dec
ret
stos
xor
lea
fmull
xchg
adc
jnp
fildll
scas
popa
cmp
add
pop
popa
mov
stos
loope
jns
cmpsl
adcb
add
popa
cli
test
sti
stc
imul
gs
scas
leave
pop
arpl
add
inc
stos
fistpl
xchg
mov
pop
and
cmc
mov
dec
cmp
in
rorb
cmpsb
fidivs
nop
adc
inc
jp
cwtl
stos
pushf
inc
lret
ljmp
mov
int
mov
xor
adc
mov
leave
nop
cmp
adc
sub
cmpl
cwtl
sarl
sub
mov
repnz
pop
sar
xchg
adc
pop
sbb
je
jnp
test
inc
movsb
mov
pop
mov
add
stos
enter
dec
daa
aam
or
push
push
std
mov
dec
mov
ficompl
sbb
xchg
sti
xchg
popa
push
xor
lds
pop
jmp
lcall
loopne
leave
push
inc
aam
aas
stos
clc
dec
mov
leave
gs
into
cli
test
pop
xor
inc
jo
and
out
mov
outsb
mov
sub
ja
adc
icebp
mov
fcmovnu
lea
addr16
push
lahf
pop
andb
xchg
in
sbb
dec
jl
push
sub
push
das
xor
adc
pushf
xchg
and
xchg
add
or
js
pop
aad
fbld
popa
insl
lret
lea
leave
cmp
lds
ret
jae
sub
mov
lods
lods
add
push
dec
gs
sarb
and
popa
and
xlat
dec
sub
pop
mov
stc
jns
sti
jp
or
aad
pcmpeqw
sahf
int3
jge
cli
adc
cs
add
lea
ja
repz
mov
f2xm1
mov
xor
dec
inc
fdivp
movsl
pop
arpl
mov
cmp
insb
pushf
xor
sti
insl
cli
adc
sbb
rcl
call
daa
js
lods
out
addb
movsb
aam
loopne
nop
in
fisubrl
jns
cmp
xor
push
imul
loop
scas
mov
inc
aaa
inc
and
insl
imul
jg
test
add
aas
inc
xor
lcall
mov
lods
add
mov
sbb
lods
lahf
pop
cmp
mov
sub
int
loopne
cmpl
jnp
ds
mov
push
cmp
jg
xlat
inc
jl
mov
arpl
orb
push
pop
lcall
out
lock
pop
pop
aaa
mov
popa
sbb
xchg
push
loopne
sub
into
cltd
daa
xor
jecxz
imul
aas
mov
and
incl
push
scas
jle
pop
sub
push
push
roll
xchg
repz
idivb
cmp
dec
dec
fwait
dec
fiadds
mov
mov
ret
lcall
dec
dec
xor
and
mov
rolb
sahf
push
jmp
hlt
andl
and
and
push
mov
nop
ss
xchg
fsubs
inc
in
mov
sti
push
xor
mov
and
pop
mov
shrb
mov
mov
icebp
movsl
mov
jo
ret
mov
dec
adc
mov
inc
addr16
jecxz
jmp
mov
fiaddl
pusha
sub
imul
hlt
push
in
sbb
sub
cmpb
mov
ja
pand
out
shlb
movsl
rcrl
or
mov
adc
sub
in
jl
rorb
les
lods
int3
hlt
inc
xchg
and
inc
call
adc
fmull
je
adc
sub
dec
int3
xchg
mov
xor
sahf
push
into
fldenv
mov
jns
and
loope
jge
in
sub
idiv
sbb
pop
testl
popf
push
push
shl
inc
cmpsb
mov
aas
sub
sbb
imul
arpl
pop
ljmp
arpl
adcb
hlt
loope
mov
fs
pop
fwait
mov
int
mov
jle
cmc
in
imul
outsl
mov
sub
xor
sbb
lods
dec
adc
cli
and
fs
add
imul
lea
imul
shlb
sarb
xchg
xor
in
inc
adc
mov
push
insb
clc
mov
jo
sbb
adc
mov
xchg
adc
sbb
mov
adc
mov
cmp
push
aaa
lods
cld
adcb
adc
addr16
add
scas
push
inc
mov
mov
cmp
xchg
cvtpi2ps
push
repnz
jmp
adc
mov
mov
mov
ljmp
adc
test
jmp
cmp
add
cmc
adcl
negl
xor
loope
mov
push
je
aas
sar
xchg
fucomip
cmpsl
mov
sub
mov
xchg
addr16
mov
mov
jne
mov
mov
pusha
pop
punpcklwd
mov
cmp
inc
ljmp
cli
addr16
add
dec
jnp
pop
aam
call
jnp
pop
je
cmp
and
aam
add
sub
or
mov
aas
jbe
pop
adc
xchg
and
bound
outsl
aad
rorl
mov
dec
dec
or
jge
inc
loope
and
mov
jno
push
xchg
lods
adc
mov
mov
mov
or
pop
xchg
lea
in
mov
scas
and
mov
lea
andl
xchg
sub
sub
xchg
push
push
fs
dec
dec
sbb
mov
cmp
inc
mov
mov
push
jo
push
mov
pushf
and
sbb
xchg
pop
iret
insl
hlt
insl
inc
fdiv
cltd
arpl
sub
xchg
inc
les
mov
jbe
mov
fcoml
cmp
cwtl
xor
add
stc
jno
xchg
data16
push
add
stc
lea
add
jbe
test
stos
dec
sbb
jae
sub
fildll
adc
pop
outsl
cmp
shrb
dec
mov
push
loope
add
sub
jnp
or
lret
scas
mov
push
xchg
stos
jae
xor
and
aas
loop
in
add
xchg
add
outsb
jge
mov
push
xor
and
push
jmp
mov
mov
addl
loopne
xchg
mov
lods
idivb
cli
arpl
push
add
mov
ret
sbb
pop
push
repz
shl
adc
jmp
pop
js
xor
mov
push
adc
mov
inc
test
inc
jmp
imul
lea
insl
push
and
cmp
jne
or
sbb
mov
or
imul
adc
mov
dec
adc
mov
movsb
dec
sbb
mov
out
cmpsl
notl
and
push
jmp
lret
cmp
in
js
pop
shll
ja
ficoml
in
mov
cmp
xor
cmp
mov
fldl
rcll
or
movsl
lret
adcl
dec
xlat
pop
adc
jb
bound
sub
xlat
xchg
les
movsl
ja
xchg
lods
mov
sbb
cld
cli
int
and
fwait
jne
adc
push
push
pop
mov
loope
or
add
mov
fisubl
or
mov
cmc
cmp
jmp
push
xorl
add
cmc
test
leave
sbb
fists
jp
out
cli
xor
fnstsw
cmpsb
nop
in
aam
and
vphaddbd
mov
xchg
cmp
xchg
shll
popf
mov
ret
inc
jle
and
push
pop
scas
inc
or
test
roll
ret
hlt
xchg
xchg
cltd
xchg
mov
shrb
mov
roll
leave
fwait
das
add
pop
cmp
push
and
cmp
jnp
ljmp
test
mov
jle
dec
std
cmp
push
dec
xor
in
dec
imul
repnz
outsb
jecxz
mov
xor
adc
jno
scas
xor
hlt
push
ret
popa
xchg
jne
push
lea
int
add
rcl
je
int3
add
movsb
cmc
lret
lds
push
movsl
sbb
sbb
inc
pop
or
xchg
xchg
mov
sub
push
pop
pop
mov
insl
fwait
add
push
fsubp
loope
cmp
push
lret
push
lret
cmp
mov
stc
xor
push
stc
push
cld
pop
mov
pop
std
imul
xchg
adc
lret
call
js
adcl
pop
jle
cmpsb
push
inc
mov
popf
pop
push
and
adc
sahf
jle
scas
fisubs
and
cwtl
add
in
leave
push
dec
addl
jmp
pusha
dec
sbb
pop
imul
mov
push
pop
pop
lock
stc
sub
rcr
mov
cmpsb
cmp
ret
xor
sub
fsubrs
mov
out
adc
fbld
cmp
add
rolb
mov
xor
inc
adc
out
stc
cmpb
sub
hlt
cltd
cs
mov
pop
jnp
repnz
les
aaa
add
inc
mov
push
push
cmpl
je
call
add
daa
mov
xchg
in
rcll
fists
xchg
push
es
xchg
scas
sub
mov
add
cld
std
sbb
inc
std
jp
les
in
and
inc
sbb
mov
ja
mov
xchg
xchg
ffreep
arpl
lock
test
push
sahf
cmp
adc
filds
jp
movsb
inc
xlat
test
imul
mov
ds
add
xchg
dec
mov
cld
andl
rcr
inc
mov
inc
cmpsb
mov
push
ret
mov
dec
and
or
xor
xchg
cld
lret
or
das
xlat
xchg
outsl
in
push
loopne
enter
xchg
dec
jle
stos
sbb
stos
cmp
jecxz
jno
jbe
jge
push
gs
mov
xchg
aam
jmp
cmpsb
jg
mov
push
iret
dec
push
hlt
out
push
adc
test
icebp
je
sub
cltd
add
jne
andl
jo
lods
pop
jle
movsb
sub
pop
fwait
jae
gs
pop
jl
add
cli
mov
and
mov
icebp
jb
je
sbb
cmc
push
pop
jle
or
ret
call
rcrl
bound
jbe
mov
aam
mov
adc
cmp
inc
cld
xor
add
insb
jg
add
fstl
or
cmp
out
and
mov
mov
cli
repnz
pop
lods
sub
mov
clc
pop
pop
aad
popa
dec
mov
xchg
int3
loope
mov
and
fisubrs
push
adc
inc
and
fwait
add
mov
bound
repnz
sar
movsb
adc
lret
scas
subb
push
xor
mov
aam
add
mov
pop
push
movsb
jbe
mov
out
out
int3
stos
push
or
testl
iret
fdivrl
out
insb
cltd
mov
mov
and
popf
and
mov
pop
push
sbb
pop
dec
repz
popa
in
mov
in
enter
jo
jp
jae
add
dec
sub
adc
iret
cs
add
in
adcl
hlt
xor
mov
mul
inc
es
pop
popf
incl
push
sub
insl
repz
jns
and
xorl
sarl
cmp
cltd
pop
test
or
pop
sbb
push
mov
aad
outsb
rorb
lods
addr16
xchg
mov
cmpsb
pop
fisttpll
fcmovbe
cmpsb
xchg
dec
push
fwait
sub
jp,pn
pusha
aaa
loopne
aas
push
jl
mov
lods
sub
sbb
mov
add
addl
sti
outsl
lret
lea
stc
lcall
xor
adc
outsl
xor
imul
dec
out
pop
sbb
outsl
aam
xchg
mov
dec
arpl
mov
test
cmp
pop
dec
dec
jbe
jbe
bound
icebp
add
shr
in
cld
add
dec
adc
jmp
arpl
push
jmp
lcall
iret
xchg
dec
repnz
das
dec
nop
cmpsb
jl
outsl
ffreep
je
mov
cmp
cmc
aaa
out
jge
pop
adc
fcomip
sbb
sbb
adc
aam
ja
push
loope
inc
adc
mov
pop
cmp
sbb
jnp
ja
jnp
js
mov
ljmp
bound
xchg
push
repz
pushf
out
push
inc
or
xchg
das
das
mov
clc
push
fimull
addr16
nop
out
mov
std
cmp
cmp
mov
jo
and
cmpsl
testb
call
inc
outsb
rsqrtps
ss
dec
data16
push
ror
js
xchg
xchg
jns
xorb
fnstenv
cmpb
cmp
mov
cld
and
add
fs
and
mov
fistps
popf
repz
adc
sbb
fwait
xor
pop
jg
add
cltd
pusha
jecxz
ljmp
xchg
das
mov
inc
popf
sbb
sbb
or
dec
mov
xor
xchg
dec
mov
cmp
enter
dec
adc
rcrl
cmpb
lea
jmp
mov
js
movsl
mov
inc
cmp
mov
xchg
subl
adc
cmp
cmp
aas
mov
stos
cli
xor
xor
mov
add
jno
cmpsl
outsl
clc
adcb
daa
movsl
xchg
out
sub
mov
xchg
out
stos
lret
push
jae
and
add
inc
shlb
cs
aaa
aaa
sti
test
dec
into
add
jnp
vmptrld
and
js
mov
sub
mov
pop
loop
cld
mov
cwtl
push
lods
repnz
mov
push
jp
jbe
mov
sub
add
sbb
or
loopne
rclb
mul
pop
jnp
xor
dec
fsubl
lods
out
push
add
imul
pop
nop
mov
ds
push
xchg
jl
scas
cltd
cli
hlt
jmp
jecxz
xchg
add
js
inc
mov
clc
lret
stos
out
cmp
mov
mov
imul
pop
xor
repnz
insl
hlt
ljmp
inc
xor
out
dec
imul
push
pop
mov
mov
mov
cmp
push
add
or
loope
rcr
repnz
subb
mov
popf
inc
mov
out
lret
push
lods
push
jmp
adc
sbb
xor
jl
and
in
xor
loope
imull
mov
jge
push
sar
andl
xor
and
add
inc
push
xor
or
mov
imulb
xlat
mov
or
pop
out
mov
ret
or
mov
es
or
add
inc
push
adc
cmp
sub
pusha
in
lea
iret
cmp
sub
jmp
xchg
aad
mov
xchg
out
jle
enter
adc
adc
aam
cs
push
scas
jmp
jno
out
or
jmp
mov
ret
in
lret
lcall
call
adc
dec
sub
adc
repz
lods
into
jae
add
je
and
enter
xchg
add
subb
and
jns
mov
add
or
loopne
xor
jp
adc
rcr
cmp
mov
and
fsubrp
sbb
negb
std
and
cmp
mov
loop
ret
jne
movsl
inc
ja
call
sahf
loopne
push
xchg
sub
pop
fldl
dec
jg
fdivl
jno
cmovb
cmp
mov
shl
sbb
pop
mov
repnz
inc
iret
mov
in
sub
iret
aad
fwait
lahf
xchg
addr16
pop
xor
and
sub
mov
inc
pop
dec
popl
std
xchg
scas
sbb
rolb
pop
call
pop
ja
push
jl
pop
dec
jbe
sahf
inc
mov
cli
jg
popa
iret
cmc
push
mov
sub
hlt
pop
ljmp
sbb
xor
mov
xchg
xchg
call
jle
push
cmp
hlt
aam
mov
fwait
cs
cmp
lret
and
popa
sbb
jmp
cltd
fldcw
add
lcall
out
pushf
jmp
lock
push
imul
movsb
out
fbld
mov
push
arpl
bound
test
mov
mov
and
sarb
je
jbe
sub
dec
fdivr
push
push
fisubs
mov
bound
sti
leave
fcoms
cwtl
sarl
jno
sbb
std
hlt
mov
aaa
pop
xor
fldl
sarl
jg
movsb
iret
notb
pop
dec
dec
hlt
cmp
std
fxch
or
add
mov
inc
xor
cs
test
aad
out
iret
testl
aas
lods
lea
mov
sub
fcmovbe
repz
mov
or
call
lds
sub
leave
jg
inc
or
sti
xchg
inc
sbb
pop
add
pop
add
leave
es
xchg
jne
sbb
lret
pop
outsb
and
add
call
insl
movsb
int3
mul
int
push
into
or
cltd
cmp
cmpsb
adcl
out
pop
jno
mov
pop
mov
xlat
pop
rcll
jg
mov
sbb
cmp
inc
or
adc
inc
sub
and
inc
pop
cmc
nop
add
hlt
insb
push
adc
scas
and
jecxz
push
pop
sbb
in
push
popa
adc
lret
inc
lds
push
pushf
jo
in
xchg
xchg
cmp
out
mov
mov
in
mov
leave
out
ss
test
insb
xor
stc
cltd
xor
push
fbld
jp
pop
pop
stos
pop
mov
lahf
dec
int3
packuswb
out
or
call
xchg
jge
inc
jg
iret
mov
icebp
add
fsts
add
inc
inc
outsl
rclb
in
out
push
rcrl
dec
mov
push
cmp
sub
loopne
inc
mov
jmp
jae
das
in
scas
dec
lret
add
movsb
or
inc
loope
ljmp
push
push
decl
pusha
out
dec
mov
lods
out
scas
into
jmp
aas
xorl
fadd
cli
push
xor
mov
test
aaa
js
daa
scas
test
mov
movsb
clc
pushf
push
xchg
adc
push
mov
es
dec
adc
add
jns
imul
pop
mov
stc
insb
add
xchg
enter
inc
not
iret
sub
sbb
cmpsl
std
cld
lods
subb
xchg
lret
movsl
xchg
mov
dec
mov
mov
repnz
rorl
lahf
cmp
xor
outsl
jnp
xorl
roll
or
cmpsl
popf
arpl
andl
loop
arpl
mov
mov
push
movsl
fistps
and
shr
dec
mov
push
cmp
jae
mov
sub
clc
pushf
sahf
les
xchg
das
inc
pop
sbb
movb
jge
lods
test
sbb
xor
ret
out
outsb
adc
cmp
or
mov
jle
aam
jae
lods
pop
sub
jl
ds
push
pop
lea
int3
mov
loope
sarl
ds
sahf
lcall
outsb
mov
das
xor
arpl
mov
inc
int3
pop
popa
push
std
xchg
cmp
mov
xchg
mov
jg
pushf
or
inc
out
jmp
pop
fucom
inc
and
scas
or
add
xchg
icebp
outsl
lret
xchg
pop
ret
and
adc
cmp
fsubrs
sbb
enter
and
push
mov
nop
push
ljmp
pop
and
in
in
mov
sub
filds
mov
outsb
inc
imul
push
addb
loope
iret
and
xor
mov
dec
add
inc
repz
mov
jp
mov
push
in
sub
and
sub
cs
cld
cmp
mov
nop
mov
dec
lahf
push
pop
push
leave
xor
xor
dec
arpl
cmp
outsl
leave
or
push
loopne
out
loopne
mov
dec
xor
in
dec
sub
mov
outsl
jnp
les
dec
and
jecxz
js
sbb
in
inc
sub
movsl
push
int
sbbb
sbb
cmpb
mov
stos
test
shll
or
insl
ficoml
mov
inc
fildl
loopne
daa
adc
push
pop
aam
test
xchg
jle
imul
xchg
add
gs
into
xchg
jg
dec
jp
mov
div
mov
adc
cltd
in
es
and
dec
movl
dec
dec
dec
sahf
and
dec
fistl
icebp
notb
dec
int
add
fiaddl
sbb
mov
dec
jbe
daa
jno
mov
inc
push
push
add
lods
and
jl
or
cmpsb
fstpt
fldenv
cmp
idivl
addl
add
fcomp
cmp
dec
push
sbb
sbbl
xchg
test
add
mov
inc
cs
clc
orb
adc
pop
dec
pop
ret
pop
aas
addr16
fwait
xchg
es
cmp
xor
decb
lock
loopne
sub
jnp
mov
mov
or
adcl
mov
cltd
mov
int
outsl
repnz
cltd
fdivs
xor
in
aas
aam
jmp
mov
fmull
std
mov
in
imul
jecxz
testb
ffreep
push
mov
cmp
lods
mov
aas
sub
cmpsb
stos
stc
cli
loope
xor
xchg
fxch
inc
cltd
aas
sbb
loopne
cmp
lock
mov
mov
dec
ret
mov
pop
xchg
stos
stc
mov
mov
loope
xchg
roll
mov
icebp
bnd
into
xchg
mov
pop
inc
mov
push
mov
lods
sti
mov
fs
rcrb
out
jmp
jbe
arpl
jp
cmc
les
adc
dec
icebp
mov
fstps
xchg
fidivrl
out
inc
xor
mov
push
push
push
pop
rcrl
mov
bound
test
hlt
imul
dec
pusha
arpl
add
rorl
fmull
stc
mov
imul
push
and
add
pop
sub
inc
push
fwait
sahf
lds
mov
xor
gs
loop
jbe
push
test
and
sub
lcall
xchg
outsb
push
cltd
iret
mov
pushf
rcr
aam
push
aas
ja
lds
xchg
iret
or
mov
or
pop
adc
xchg
nop
xor
cmc
mov
lods
pop
push
pop
xchg
dec
xor
lret
push
cwtl
inc
dec
adc
insl
mov
fs
jae
jb
mov
repnz
sub
in
mov
sub
in
push
clc
mov
ljmp
into
and
push
pop
push
scas
into
cmp
cli
push
pop
xor
aas
cld
mov
pop
adc
les
sti
push
ljmp
or
daa
cld
mov
mov
imul
sbb
mov
mov
jae
cmpsl
stos
xchg
inc
cmp
fwait
adc
out
fimuls
nop
jecxz
xchg
sub
scas
arpl
push
movsl
fisubrs
test
push
mov
cld
repnz
data16
push
out
mov
jecxz
leave
das
xchg
test
jg
rcrb
pop
test
pop
lar
mov
arpl
mov
jnp
lea
fwait
das
das
inc
inc
and
nop
xchg
adc
into
repnz
pop
out
mov
std
push
and
push
es
and
add
xchg
mov
aad
movsb
push
xchg
push
inc
sbb
jmp
sbb
test
loopne
and
sub
and
movsb
callw
mov
or
dec
cld
loop
imul
inc
or
call
mov
popa
mov
stos
aad
popf
xorb
xchg
xorb
cmp
push
mov
sub
and
fdiv
int
nop
or
jp
imul
lock
adc
test
int
xor
sub
pushf
push
jmp
mov
push
icebp
mov
mov
push
lret
pop
ret
loop
repz
bound
test
mov
mov
or
jle
fadd
ljmp
rolb
insl
dec
mov
sbb
jmp
lret
xchg
out
outsl
xor
adc
cmp
push
mov
mov
jge
ficoml
inc
mov
call
ficoml
ret
xlat
dec
test
cmp
ljmp
rcll
jno
insl
neg
mov
scas
cmp
movsl
mov
jmp
or
ret
add
scas
mov
cmp
adc
pop
adc
stos
xchg
jecxz
adc
jmp
pop
ds
jmp
mov
mov
js
sbb
mov
lahf
dec
outsl
cmp
lcall
jne
lods
push
push
aad
xor
cmp
jmp
sbb
pop
cmp
orl
rorl
pop
add
mov
mov
icebp
leave
jmp
and
mov
push
repz
inc
sti
or
or
jbe
push
jns
in
xchg
das
adc
push
xchg
cli
lea
enter
jo
jns
jns
add
mov
clc
cmp
add
dec
mov
clc
or
cmc
add
jno
outsl
mov
adc
mov
and
imul
xchg
pop
or
test
mov
ljmp
inc
xor
test
icebp
mov
dec
lods
jmp
loopne
cwtl
sub
xchg
sti
mov
sbb
hlt
sbb
cld
or
into
in
pop
jmp
and
scas
jmp
jl
pop
pop
push
inc
inc
dec
and
cmp
lods
or
loopne
fwait
sbbl
cmpsl
mov
movsl
xchg
pop
xchg
jg
add
cwtl
xor
add
cmp
movsb
bound
icebp
xchg
sbb
mov
push
cld
jp
adc
cld
std
ljmp
outsl
cmp
enter
nop
xchg
mov
cs
sbb
sbb
daa
jno
adc
ljmp
mov
adc
and
outsl
push
or
xchg
mov
mov
xchg
lock
adc
nop
xchg
dec
mov
push
fwait
aas
fwait
addr16
mov
out
sub
loope
mov
ds
and
aaa
nop
inc
inc
mov
dec
ja
movsl
jns
lea
rcrl
fisubl
aas
negb
adc
aaa
mov
test
jmp
jb
xchg
cld
stc
jno
in
fsts
adc
int
mov
into
jp
mov
inc
aam
jno
push
mov
stos
repz
arpl
call
mov
add
mov
or
repnz
cli
inc
orl
cmc
fbstp
sub
or
out
cmpl
sbb
icebp
and
lret
fmul
mov
test
xchg
pop
aad
mull
pop
jb
loope
lods
sbb
xchg
out
test
pop
inc
sar
jmp
sar
add
imul
adc
add
and
into
and
repnz
sbb
cmp
mov
pop
btr
nop
out
or
insb
lahf
dec
jge
sub
mov
call
pop
loop
mov
jmp
sub
pushf
lcall
or
xchg
fwait
loop
or
lods
sti
cmp
or
xchg
sbb
aaa
add
push
push
fwait
test
aam
mov
adc
adc
dec
addr16
dec
xchg
int3
xchg
pop
push
stos
sbb
aaa
pusha
leave
das
jae
pusha
mov
pop
mov
int3
pop
sbb
mov
jb
gs
cwtl
test
dec
lret
adc
xchg
lret
scas
mov
add
fcomip
push
mov
inc
mov
jmp
mov
cmpsl
jno
bound
jb
repnz
out
push
push
sub
shll
imull
xchg
stos
pop
inc
test
mov
cmpb
sti
loopne
sbb
push
push
and
xorb
aaa
fnsave
aam
mov
sub
repz
xor
pop
sbb
repnz
dec
xchg
xor
in
cmpsl
pushf
rsm
xor
xor
or
mov
ret
xchg
xchg
cltd
fs
inc
dec
cmpsb
mov
aas
jl
dec
int3
push
xor
or
cwtl
in
pop
in
lds
fs
cmp
xor
fiaddl
pop
faddl
mov
add
repnz
xchg
addr16
sbbl
out
fdiv
out
push
jns
icebp
call
lret
inc
sub
mov
out
adc
inc
jl
idiv
jnp
leave
or
xor
jle
stc
sbb
pop
mov
imul
sbb
dec
push
push
jle
fcomi
nop
outsb
lock
pop
cmpxchg8b
cwtl
adc
pushf
cmp
or
fs
adc
sbb
mov
add
push
push
jno
ljmp
mov
xchg
jae
mov
pop
cmc
int3
mov
gs
outsl
mov
movb
pop
push
jmp
daa
add
fs
sub
pop
ret
call
jp
xchg
fisubs
or
pusha
loop
movsl
cmc
xchg
mov
lods
mov
mov
sar
push
adc
sub
imulb
jne
popa
push
cmp
fsubrs
push
fisubrs
lock
aaa
sbb
daa
push
enter
inc
sti
pop
cmp
inc
addr16
fwait
adc
in
test
out
enter
outsl
xchg
inc
call
xor
push
jbe
xchg
sbb
fisubs
movsb
xchg
outsl
sub
int
popa
in
cmp
push
and
sbb
sub
or
xor
mov
dec
lock
inc
jo
mov
mov
das
cmp
cmp
in
add
stos
inc
sbb
mov
call
and
adc
jg
sbb
sbb
loopne
mov
rolb
xor
push
xchg
rcrb
in
aad
and
inc
add
add
movsb
cmc
les
test
clflush
sbb
add
les
or
mov
mov
add
mov
pushf
out
or
dec
adc
sbb
sub
sbb
jbe
push
cmp
cmp
jge
loopne
sub
adc
stos
stos
cmp
mov
cli
pop
jl
popf
sbb
jp
mov
ds
or
cs
ljmp
mov
fnstenv
jp
popa
push
lods
xor
fisttpll
aam
sti
sub
test
out
cmp
sbb
pushf
jmp
ret
shl
pop
mov
dec
cwtl
xchg
jns
lret
and
nop
out
push
bound
fiaddl
jns
rcll
ret
xor
dec
in
popa
and
lock
inc
roll
pusha
call
push
dec
ss
daa
jl
lods
fimull
bound
movsl
cs
js
and
aam
sbb
push
sub
imul
add
addr16
aaa
add
xchg
or
sbb
aaa
sub
pop
push
mov
sti
push
imul
fdivs
push
int3
pop
aad
fadd
stos
or
add
cld
inc
mov
lock
pop
test
ss
pop
lcall
pop
imul
pop
addr16
jno
insl
std
notl
out
negb
fsts
jl
sbb
inc
xchg
cmc
stos
cmp
cltd
push
or
rorl
xor
xchg
push
mov
jecxz
lret
popa
pushf
sub
push
sbb
pop
or
pop
not
lods
xor
and
push
push
notl
add
gs
jecxz
inc
jne
adc
das
mov
stc
int3
or
aam
xor
xor
lea
xchg
stos
inc
mov
jle
imul
or
or
pop
jl
in
push
push
ljmp
cmpsl
mov
pop
cs
lods
ret
std
inc
adc
pop
and
sbb
pop
mov
mov
add
push
pop
aaa
mov
mov
adcb
adc
data16
hlt
add
out
test
lock
test
loope
stc
cld
das
adc
daa
jp
mov
leave
pop
jecxz
cmc
cld
sbb
popf
and
ja
fstpl
repnz
push
in
ret
and
push
jge
test
jbe
and
push
xlat
xchg
gs
and
jbe
shrl
push
pop
cwtl
pushf
inc
jno
stc
cmpb
insb
cltd
sbb
or
dec
push
or
imul
ret
int3
push
idivl
int3
int3
push
pop
dec
jle
mov
sub
movsl
fistpll
sbb
aad
xlat
pop
lock
inc
mov
mov
loopne
dec
cmc
pop
shl
insb
stos
ljmp
int3
or
push
jnp
loopne
or
pop
adc
push
xchg
inc
mov
ret
mov
fistpll
sub
pop
fs
in
stos
loopne
aaa
dec
cmc
mov
jbe
mov
lock
add
dec
jecxz
cmp
outsl
mov
les
pop
mov
xchg
dec
data16
clc
shll
ljmp
lods
scas
jnp
mov
ljmp
sbb
and
mov
out
xor
jl
jle
pop
call
jno
jnp
cmp
sarb
add
dec
mov
mov
mov
inc
jnp
cmc
cmp
loopne
xor
xor
inc
xchg
shrb
popa
jl
jo
sbb
int
stos
or
jp
push
ret
add
dec
ss
jnp
cltd
and
mov
xor
lods
mov
outsl
dec
inc
mov
and
movsl
ja
cmp
addr16
cmp
lcall
popf
add
inc
xor
outsl
out
jno
xchg
xlat
ds
lea
lods
pushf
ret
push
pop
pop
xchg
outsl
mov
xlat
jl
pop
inc
jb
je
cmp
dec
rorb
hlt
fisubs
cmp
pop
xor
mov
pop
in
sbb
or
stc
jmp
add
adc
mov
popf
ss
pop
cltd
js
or
stos
lret
mov
das
dec
test
outsb
data16
fcomip
repz
mov
cmp
mov
lahf
mov
ret
shlb
pusha
pop
pop
pop
mov
mov
and
mov
sub
rclb
popa
xchg
outsl
jnp
mov
test
cmpb
mov
push
notl
jl
orb
sarl
and
int
cmp
in
lahf
mov
inc
inc
jge
pop
inc
push
jo
or
sbb
cs
pop
or
jnp
inc
or
jge
pushf
stc
leave
in
mov
add
xchg
cmp
push
inc
dec
push
popa
mov
xchg
cmp
adc
mov
std
stos
cs
mov
rcrl
add
lds
repnz
or
iret
xor
push
push
jge
daa
mov
adc
test
je
mov
jmp
adc
rcl
int3
xor
xor
stos
arpl
dec
ret
arpl
sub
jnp
add
in
movsl
and
aaa
mov
mov
cs
jmp
push
mov
lods
jmp
push
jno
imull
mov
or
jmp
xlat
or
jmp
or
into
xchg
in
mov
stos
xor
in
xchg
in
cmpsl
xchg
negb
inc
push
lea
int3
inc
mov
push
mov
les
out
pop
adc
ja
out
aam
lahf
jno
lods
mov
jmp
les
mov
pop
icebp
dec
mov
movsb
cmp
pop
int
std
dec
jno
testb
pushf
pop
inc
or
jg
arpl
insl
loop
mov
ret
lds
incl
push
jp
or
dec
rorb
and
inc
movsl
aam
aas
mov
shr
sub
jmp
rorl
repnz
call
xchg
xor
mov
fcmovu
lods
add
mov
mov
insl
stc
stc
sbb
jp
dec
fsubl
pop
inc
pop
fildll
pop
adc
ja
js
add
lcall
ds
popa
push
mov
cmp
pop
out
fnsaves
loope
inc
jmp
mov
enter
popa
dec
js
sbb
or
mov
push
cmp
adc
mov
imul
dec
sbb
daa
push
mov
jle
test
ljmp
loopne
popa
aad
jle
jecxz
aaa
out
xor
pop
ret
bound
pop
cmp
add
aaa
or
jb
rcl
or
adc
inc
lea
ljmp
rorl
ret
dec
mov
mov
pop
scas
xchg
ret
dec
push
pop
es
sbb
push
aaa
jecxz
mov
int3
mov
cltd
mov
mov
add
orb
push
je
ss
int
mov
test
xchg
sbb
jp
fldcw
in
push
movsb
loope
add
nop
je
inc
xor
data16
pop
xchg
imul
in
xor
fldenv
inc
sub
mov
mov
add
cmp
xchg
fstpl
cmp
adc
es
mov
cmp
ss
lahf
dec
cmp
out
push
mov
mov
mov
repnz
or
mov
pusha
stc
adc
sbb
je
repnz
lahf
inc
loope
jge
mov
in
jno
stos
inc
jge
jg
fistpl
adc
dec
or
outsl
sub
lods
scas
dec
jns
or
add
push
jb
adc
jns
call
ficomps
add
loopne
lret
or
lret
push
stos
jns
jns
faddl
adc
out
imulb
sbb
mov
jecxz
xchg
scas
inc
mov
push
sub
rep
inc
add
xor
xchg
fs
cmpsl
mov
andl
jg
jle
addr16
or
inc
pop
sbb
js
jg
imull
iret
push
jecxz
insb
sbb
or
cmpsb
jnp
into
sub
mov
dec
popa
inc
inc
fdivrs
pop
outsl
cmc
jmp
cmpsl
sahf
jmp
sub
in
pop
insl
les
outsb
pop
dec
inc
xchg
adc
js
out
push
out
sub
pop
dec
fsubs
aas
je
jne
or
cmp
dec
add
mov
call
mov
mov
imul
fwait
leave
repz
mov
aad
mov
jmp
cwtl
lds
sbb
inc
inc
jp
into
push
rorl
pop
test
mov
data16
or
or
push
pop
dec
xchg
add
pop
inc
jecxz
fdivr
lret
clc
add
xorl
and
and
mov
popa
clc
add
or
push
inc
ror
inc
pusha
mov
lock
enter
pop
lret
mov
mov
and
into
or
sahf
clc
push
pop
mov
jno
pop
movsb
lahf
out
stos
loope
add
inc
xchg
add
mov
adc
dec
sti
adc
mov
sbb
shll
adc
lret
mov
aas
pop
aas
push
xchg
popf
outsl
mov
pop
aaa
sbb
pop
xor
inc
mov
leave
jle
jns
sub
and
xor
or
jp
jb
lods
cmpsl
stc
sub
or
add
and
adc
cmp
mov
shll
sub
fdivs
and
push
out
aad
sub
into
into
mov
outsb
loopne
pusha
loope
movsb
lcall
mov
lcall
movsl
mov
cmp
sub
popa
or
and
pop
adc
in
fwait
dec
out
or
int3
add
sbb
popf
ds
sub
insb
pop
add
cli
xchg
jge
cmp
stc
mov
lock
jne
sarb
mov
loopne
aad
pop
adc
ss
lds
cltd
jne
rol
pop
test
loope
scas
dec
out
adc
mov
ds
pop
sbb
adc
inc
jbe
cmpsl
data16
xor
pop
testb
notl
push
lods
inc
jbe
insl
ret
inc
xorl
insl
pop
cmpsb
mov
rcll
loop
or
ds
cmpsl
fidivrl
inc
and
sub
test
out
sbb
jmp
scas
or
pop
lock
ja
mov
dec
mov
call
push
loope
push
push
xor
jae
jp
push
stos
mov
ljmp
in
aaa
sbb
orb
push
int
scas
pop
xchg
push
sub
add
adc
movsl
cmp
pop
incl
nop
insb
es
and
cmpsb
into
pop
mov
fbld
xchg
icebp
cli
mov
fildll
arpl
shll
mov
push
loope
daa
addr16
dec
cmp
mov
mov
pop
test
push
out
dec
mov
sub
in
out
shrb
push
test
fldl
cwtl
lret
and
pop
popf
xor
imul
inc
mov
daa
lcall
mov
out
movsl
sub
jle
stos
xor
mov
jmp
mov
loope
dec
not
or
jmp
lcall
xchg
add
leave
hlt
sbb
push
push
sbb
shl
movsb
enter
lcall
pop
outsl
ja
xor
call
jne
cli
xor
pop
push
data16
push
mov
imul
gs
insb
in
out
push
mov
push
xor
shlb
std
add
push
in
call
int
lret
pop
repnz
insl
lds
popa
daa
cltd
pop
fsubl
xor
js
std
into
sub
push
into
ror
imul
jb
adc
es
jo
js
jg
pop
adc
divb
shrl
adc
divps
aas
inc
pextrw
sbb
jl
and
mov
dec
data16
pushf
gs
loope
clc
cli
mov
and
ss
daa
xorb
int
add
loopne
or
cwtl
mov
adc
pop
mov
sub
adc
ds
cwtl
xchg
push
daa
pop
push
ds
xchg
iret
popf
ja
out
faddl
push
push
xor
lahf
cmc
push
repz
mov
notl
push
daa
inc
lods
lahf
push
outsb
pop
and
jbe
test
xchg
sub
pusha
sti
pusha
sbb
pop
xor
clc
movl
fildll
js
rorl
sahf
sbb
aam
lret
scas
pop
pushf
xor
push
sub
out
shll
cltd
hlt
mov
repnz
es
sub
outsl
shll
sti
insl
pop
sub
mov
nop
in
aad
or
sbb
push
inc
pop
dec
pop
test
push
sub
pop
add
xchg
iret
sub
std
fistpll
scas
mov
insl
jl
inc
sub
data16
sahf
jns
fidivl
test
sub
adc
lret
xchg
mov
jp
or
test
sqrtps
aad
dec
push
dec
movsl
sahf
sub
cld
ret
pop
jmp
xor
or
and
pop
push
or
stos
mov
xchg
adc
mov
ret
je
loopne
sub
mov
jl
pushf
fs
rclb
jp
or
mov
mov
enter
inc
int
push
xlat
push
stos
addr16
push
mov
jnp
xchg
sbb
cmp
mov
cmp
push
mov
scas
cmp
push
push
mov
mov
jno
sbb
clc
and
in
pop
stos
fnstenv
add
mov
popf
mov
ss
or
imul
std
xor
pop
faddl
xor
lds
ss
ljmp
gs
fistl
ret
stos
scas
xchg
xchg
ffree
pop
cmp
mov
mov
mov
flds
popa
imulb
push
stc
adc
fmuls
push
adc
push
test
in
and
sub
and
in
cmp
outsb
mov
shrl
pushf
sti
jbe
lret
mov
int
mov
pop
out
mov
xchg
mov
lods
sub
icebp
cmp
push
ss
jno
daa
add
shlw
sti
push
in
in
cli
lods
test
movb
push
adc
push
xchg
testl
les
pop
add
mov
stos
test
aam
in
stc
xor
sub
nop
loopne
lahf
push
repnz
xchg
xchg
rorl
cltd
dec
data16
push
loop
stos
mov
xor
jge
lcall
mov
stos
and
int
mov
jp
xor
test
fisubrl
jb
test
cmp
out
and
popa
cmp
repnz
pop
ds
pop
in
dec
and
mov
lret
scas
clc
pop
iret
or
jl
das
mov
fsubp
add
hlt
lret
jns
adc
das
mov
cwtl
and
in
lods
rclb
sub
adc
push
cmpsl
push
sbb
jl
xor
mov
jae
xor
and
and
cmp
adc
test
fisttpll
lods
mov
jno
dec
cmp
ret
adc
mov
jae
fwait
lret
rol
rorb
les
ljmp
enter
inc
and
dec
subl
jmp
mov
mov
out
dec
fldcw
in
cmp
xor
cmp
add
iret
in
jo
xchg
push
imul
xchg
pop
mov
cld
mov
orb
add
add
pop
aad
adc
scas
sub
outsb
cmp
test
sbb
data16
dec
repz
or
shrb
push
adc
ljmp
popa
repnz
aaa
and
rcll
icebp
xchg
add
mov
xor
pop
push
dec
out
test
addl
fdivl
andb
add
xorb
ret
movsw
mov
imul
stos
cmp
mov
xor
scas
loopne
idiv
fs
jae
insb
mov
pop
mov
mov
push
and
movsb
or
jb
je
test
scas
push
and
outsl
imul
fldl
mov
into
sbbb
mov
xchg
int
loop
mov
lahf
das
xor
mov
cwtl
mov
dec
repz
gs
dec
outsl
sub
and
fdiv
popf
shll
adc
int
mov
cli
mov
xor
mov
jnp
repnz
cmp
sub
and
fcomps
sbb
add
pop
les
push
xor
sbbb
sbb
je
hlt
inc
cmp
dec
outsb
dec
vpcmpeqb
dec
les
inc
and
and
pusha
mov
fidivl
fistpll
jnp
scas
ja
inc
push
paddusw
push
scas
push
adc
dec
xchg
in
dec
xor
and
fldenv
jno
pop
inc
pop
dec
add
loopne
and
xchg
mov
lcall
loope
cmp
es
es
cld
in
add
ss
aaa
push
push
push
pop
push
fildll
sbb
xor
sbb
mov
mov
push
inc
cwtl
lret
nop
jecxz
dec
dec
mov
stos
sbb
mov
jno
cld
imul
fldcw
mov
add
xchg
popf
mov
jge
mov
jae
mov
scas
out
pushf
and
es
out
jecxz
cmpsb
stos
pop
jp
push
mov
push
or
xchg
mov
cmp
adc
repz
xchg
imul
xor
xchg
inc
xchg
push
ja
mov
bound
mov
or
imul
inc
jo
jnp
lea
stos
add
sbb
in
stos
push
push
dec
push
jle
dec
and
test
inc
xchg
lahf
dec
ja
or
test
aas
test
clc
repz
shll
lea
insl
dec
pop
je
aam
repz
adc
pushf
add
add
repnz
fnstsw
lcall
loop
jne
and
pop
arpl
jo
in
push
adc
shr
push
pop
std
xchg
mov
fs
mov
out
add
cmp
mov
sub
add
inc
ljmp
lret
and
ljmp
mov
jo
inc
lahf
dec
arpl
fsts
mov
push
test
xor
pop
lds
packuswb
push
repnz
jo
cs
pop
bound
scas
fs
adc
mov
push
ret
cmpsb
in
pop
and
ret
imul
and
je
fnstcw
pop
jo
stos
leave
sbb
jmp
mov
cmp
inc
in
lret
jno
rcll
push
push
dec
push
rcll
push
ret
dec
cmp
mov
sub
mov
fsts
sub
ror
js
push
mov
dec
push
gs
rcll
xchg
mov
sub
adc
mov
scas
fldl
out
fwait
jmp
and
cli
or
sbbb
fcoms
add
pop
les
mov
mulb
insb
mov
pop
jne
xchg
inc
dec
icebp
inc
repz
es
rol
icebp
fimull
adc
shl
int
sarb
and
ret
aas
aam
inc
popf
cmp
mov
fucomp
jp
sub
mov
aam
imul
inc
jbe
pop
and
sti
inc
fcomps
dec
jle
rcpps
sbb
js
pop
roll
mov
loopne
xor
xchg
mov
divl
cmp
dec
in
mov
and
or
int
cmp
inc
pop
mov
sbb
fdivs
mov
cli
iret
mov
xchg
mov
aaa
stos
mov
inc
mov
push
push
rorl
push
test
mov
pop
jle
neg
cmp
pop
addr16
ficoms
lea
in
jns
push
loop
das
lock
lret
lret
push
pop
pop
inc
andl
lret
sub
push
loopne
pushf
roll
stc
sub
dec
dec
push
and
add
xor
push
push
arpl
ror
sub
imul
mov
pop
or
lret
out
lret
fsubs
fisubl
mov
lahf
sub
daa
and
add
je
sbb
jg
xor
sub
in
shrb
nop
arpl
negl
push
loop
mov
xlat
lds
loopne
gs
push
xchg
lahf
loope
enter
jnp
and
jg
and
insl
xchg
adc
sbbl
push
adc
push
mov
cmpsb
add
xor
cmp
leave
xchg
inc
pop
cs
popf
push
scas
aam
push
xchg
into
insb
es
push
pop
lcall
mov
mov
push
pop
cmpsl
lds
js
cld
and
outsb
xchg
mov
add
lahf
insl
loop
and
cmp
sub
loopne
add
mov
cmp
aas
xchg
data16
add
movaps
xchg
pop
ss
push
mov
push
movsb
jne
mov
mov
andb
and
push
fadd
mov
fstps
cmp
mov
jbe
dec
lods
xchg
sub
push
push
lcall
dec
sub
dec
mov
xchg
in
cmp
outsb
push
lret
jp
movsl
dec
or
jmp
pop
ss
addr16
fwait
in
add
add
popf
mov
sbb
jecxz
add
fdivrp
aaa
call
xor
mov
in
add
loop
jle
rorl
lds
mov
inc
cltd
andl
push
aam
mov
je
jge
lock
inc
dec
adc
push
test
iret
jnp
into
sarb
lcall
inc
mov
mov
inc
cltd
and
roll
lcall
add
ffree
in
and
sub
cmc
in
ja
icebp
pop
xchg
das
int
lret
sar
pushf
enter
lock
jno
aaa
xor
and
mov
dec
pop
pop
pop
inc
aas
aas
push
lds
popl
adc
mov
mov
imul
adc
icebp
and
adc
lea
out
nop
cmc
cmpsb
rcrl
stc
fs
fsubl
cmp
xchg
fisttps
loopne
pop
mov
psrlw
jecxz
out
sti
sahf
fidivl
mov
ss
add
jns
outsl
jmp
incb
sbb
pop
mov
cmp
insl
fcmovnbe
inc
push
jne
mov
loopne
add
push
sbb
push
jmp
sub
fucomp
int3
aaa
mov
or
sbb
jbe
or
inc
jmp
jns
pop
push
popf
popf
aaa
into
fucom
pop
or
ds
movsb
mov
popf
es
repz
add
sbb
sbbb
int3
push
cwtl
jb
js
cmp
dec
adc
push
xor
mov
mov
negb
sub
xlat
sub
pop
pop
bound
push
lcall
add
ljmp
das
ret
pop
jge
enter
mov
adc
lods
xorb
mov
sbb
repz
icebp
sarl
xor
sbb
movsb
aaa
xchg
jmp
into
jb
jnp
dec
das
mov
inc
clc
hlt
adcl
xchg
adc
add
mov
mov
adc
pusha
push
and
fwait
shlb
mov
dec
fdivr
loopne
pop
push
stc
push
mov
mov
js
gs
cs
inc
mov
adc
push
jmp
cltd
aad
mov
std
push
pop
mov
in
sub
fucomi
test
jbe
rcrb
orb
les
jnp
pop
arpl
repnz
cmc
add
jl
xchg
mov
test
xchg
push
out
outsl
stos
dec
xor
aam
add
jno
andl
dec
mov
or
shlb
andl
nop
jb
inc
cltd
push
iret
mov
data16
inc
leave
aad
test
push
int
mov
mov
int3
push
call
xor
jns
jbe
insl
test
movsl
mov
mov
std
out
jge
out
jle
incl
push
sub
cmpsb
add
xchg
mov
push
sahf
ljmp
add
gs
pop
inc
push
xor
ret
insl
inc
divb
std
sbb
cld
mov
pop
jl
popa
sub
cmp
lock
nop
mov
sti
sbb
fldt
out
dec
nop
fisubrs
scas
xlat
arpl
loope
frstor
push
lret
mov
ret
dec
lods
adc
jns
test
jmp
inc
insb
lahf
pop
fldt
imul
push
aaa
out
lret
fwait
push
sub
adc
jge
mov
adc
sbb
dec
xor
mov
mov
leave
sub
adc
mov
incl
fists
sbb
popa
xchg
fcom
mov
movsb
xor
in
dec
aam
stos
insb
or
popf
cmp
mov
inc
loopne
mov
lea
inc
adc
mov
xor
adc
inc
push
std
fnstcw
ja
cmp
lret
clc
outsb
mov
hlt
dec
jo
stos
inc
scas
xchg
push
fdivrl
and
pop
sub
jmp
cmpsl
outsb
lods
fadds
adc
sbb
add
jbe
stos
inc
push
cmp
and
push
fldt
sti
xor
popf
sbb
mov
std
or
mov
fwait
sub
clc
fistl
inc
in
sub
jb
inc
or
data16
lock
call
sbb
jl
push
bswap
in
shll
test
push
push
sbb
in
dec
shll
enter
movsb
pop
xchg
mov
scas
jge
mov
movl
movsl
jae
push
mov
stos
insb
fwait
insl
xchg
shrb
mov
pop
test
push
sub
data16
cltd
int
jo
les
fincstp
adc
int3
push
dec
jns
add
jne
imull
inc
outsb
or
xor
pop
xor
adcl
add
lds
daa
inc
icebp
cmc
aad
add
mull
sahf
push
push
pop
jne
or
pop
add
shlb
int
daa
enter
fs
test
adc
and
rolb
mov
cltd
pop
lret
out
xor
fs
and
xor
loop
xchg
dec
jo
clc
popa
ret
adc
mov
xor
iret
jle
pushf
inc
jl
adc
jnp
scas
pop
cmp
mov
inc
xchg
and
fadds
pop
inc
cli
clc
movsb
les
int3
mov
add
lahf
jbe
cmp
popf
xor
mov
sbb
into
lcall
mov
pop
pop
push
mov
fsubrl
inc
inc
fs
testb
pop
mull
mov
lahf
jecxz
inc
inc
mov
movsl
mov
mov
cmp
enter
aas
xor
mov
fld
daa
std
mov
aas
and
in
mov
fstl
icebp
pop
dec
cli
ret
mov
pop
bound
imul
mov
jae
outsl
push
and
fwait
je
les
and
cltd
inc
in
add
repnz
js
fldcw
mov
jo
int
mov
inc
push
cwtl
notl
insb
jle
aaa
jo
inc
mov
xchg
xor
pop
mull
xchg
mov
sub
ja
cmpsl
jo
cmp
out
jo
adc
xchg
dec
repz
popa
cld
sbb
out
sub
cli
pop
inc
jl
fwait
sub
mov
imul
pop
adc
sub
mov
repz
js
ret
rcrb
jnp
into
faddl
call
mov
cmpsb
push
cs
pop
cs
pop
rcr
pop
dec
lret
mov
fiaddl
mov
xor
dec
call
xchg
jmp
divl
add
jno
xlat
ja
adc
outsl
push
and
bound
pop
and
mov
mov
cmp
push
lea
rep
and
xchg
lea
icebp
imul
cmpsb
cmp
insb
inc
add
in
inc
push
and
into
add
ja
lods
add
cmp
std
xor
pop
mov
lahf
push
or
scas
sarl
ret
inc
sub
fs
aaa
sti
test
mov
jne
lahf
sub
dec
fisttpl
cwtl
adc
je
scas
mov
cmp
std
push
popf
insl
std
out
pop
mov
call
js
sub
cmp
xchg
call
repz
sbb
je
add
push
sub
lahf
sbb
ja
push
or
into
lods
jecxz
mov
pop
imul
test
fs
sbb
sub
movsl
mov
cmpsb
sub
mov
js
inc
lds
int
pop
subl
jno
out
lods
lds
stc
into
or
ss
jb
jle
mov
int3
idivb
int
cmp
aad
shlb
movsl
popf
mov
dec
fmull
mov
pop
dec
mov
stos
jbe
fucomip
or
xchg
cmc
loope
inc
lock
pop
pop
imul
hlt
scas
in
add
xchg
scas
xchg
add
cmp
in
loopne
je
loope
or
jp
adcl
adc
shrb
test
pop
jge
mov
xchg
jo
push
jnp
cwtl
into
push
movsb
xchg
push
in
mov
call
inc
jecxz
stos
mov
pop
jle
inc
xor
jno
icebp
xor
adc
fwait
pusha
pusha
out
out
jns
xor
lock
jl
cmp
shrb
loope
xchg
or
add
cmc
jns
mov
or
stc
fistps
or
jl
lret
inc
int
dec
outsb
arpl
andl
lea
mulps
fwait
lret
es
jecxz
mov
add
mov
push
mov
adc
inc
inc
add
jne
fisubl
mov
or
sbb
push
push
push
inc
enter
pop
mov
pop
adc
sbb
sti
mov
in
xchg
pop
push
or
js
sub
popf
dec
clc
data16
push
sub
push
xchg
and
pop
mov
jmp
xchg
dec
repnz
push
push
push
xchg
test
or
test
mov
push
mov
int3
imul
andl
std
test
push
mov
push
jmp
inc
int3
jbe
inc
sub
push
xchg
ret
rorl
mov
xor
pop
js
pop
repnz
ja
jle
in
sub
stos
imul
push
pusha
fldcw
scas
inc
mov
cmpsl
mov
sahf
aam
popa
mov
pop
out
and
pop
inc
in
sub
insl
aad
subl
xchg
int3
and
je
stos
dec
sub
sbb
xor
ljmp
jle
dec
or
push
push
or
jo
mov
fmul
test
pop
loopne
dec
dec
jae
out
push
cmc
sbb
int3
fs
cwtl
stos
imul
and
fistpll
inc
sub
pop
jge
xor
jmp
push
mov
xor
pop
scas
hlt
in
dec
add
xor
testl
mov
mov
lahf
jb
push
lcall
jnp
lahf
and
aad
insl
stc
popa
loop
jo
xor
dec
stos
jg
orl
mov
adc
lea
pop
pop
adc
dec
fnstsw
mov
and
jnp
push
mov
sahf
in
mov
arpl
dec
idivl
test
aad
out
dec
rcr
adc
int
das
ret
fnstcw
mov
sub
movb
iret
fildl
add
popf
pusha
notl
inc
je
jns
lods
aas
push
xor
pushf
cli
dec
add
call
lret
sub
jecxz
add
jo
add
jnp
dec
mov
mov
pushf
xchg
rcrb
sbb
cs
pop
xor
adc
mov
movb
inc
mov
fwait
push
cmc
outsb
push
mov
xchg
or
cmp
je
pop
notb
rclb
push
rclb
fsubr
dec
stc
ljmp
les
pop
mov
dec
inc
lret
mov
out
into
mov
mov
xchg
mov
dec
icebp
out
mov
jmp
sub
test
jmp
mov
push
pop
add
sbb
xchg
jno
jle
jb
adc
cmc
daa
mov
xchg
hlt
jae
aas
pmaxub
into
mul
ficomps
out
stc
and
or
mov
mov
enter
cs
add
jle
sahf
cltd
sub
fldenv
pop
xor
mov
sbb
mov
cwtl
stc
sti
mov
inc
out
leave
sbb
fidivs
rcrl
scas
cmpsl
xchg
fildll
loopne
int
jbe
mov
xchg
scas
dec
rolb
mov
mov
adc
or
dec
xchg
popf
push
outsb
int3
cli
je
fs
ret
scas
ret
dec
imul
fmul
ret
cmp
mov
stos
nop
inc
in
sub
and
cmp
sbb
fcompl
push
inc
aaa
leave
jmp
xchg
and
add
in
lds
rorb
mov
or
enter
cmp
xor
dec
add
int3
pop
test
dec
sbb
jae
fimull
cmp
mov
mov
sub
or
insb
ss
sti
inc
xchg
cld
cmpsb
cmp
mov
gs
and
popf
or
adc
cmp
std
adc
sub
mov
pop
lcall
jg
mov
mov
xchg
inc
jge
mul
ret
jge
xor
jmp
test
and
cs
pop
cmpsl
inc
aas
add
clc
push
std
dec
scas
or
jecxz
inc
stc
inc
xchg
gs
jbe
insb
fsubrl
lds
and
movsl
pop
pop
pop
and
subb
sbb
stc
push
dec
imul
outsb
outsl
outsb
adc
push
xchg
inc
rol
jg
ds
out
cmc
xlat
pop
cmp
flds
push
ja
push
mov
lret
mov
cmc
inc
shlb
jbe
xor
lock
mov
test
mov
cmp
or
les
push
pop
push
testl
add
daa
inc
ds
mov
push
notl
xor
inc
mov
test
icebp
pushf
xchg
pop
fldcw
mov
cmp
lea
mov
and
jp
adc
ds
je
cmp
std
lret
loop
xlat
jl
mov
arpl
adc
sbb
fstps
adc
or
sbb
arpl
rclb
outsl
sub
outsl
repz
lcall
orb
add
sbb
mov
lods
inc
test
mov
dec
sahf
iret
or
cld
inc
pop
mov
jl
jnp
jne
mov
lds
fadds
xchg
lret
mov
arpl
push
cmpsl
fcmovbe
inc
pop
outsl
jle
jno
iret
mov
jge
insl
pop
pop
repnz
push
dec
sbb
fistl
rolb
out
xor
xchg
add
sbb
add
lods
sahf
push
clc
cmp
and
psubsw
mov
inc
cmpsb
cltd
movsb
leave
push
fwait
and
daa
cld
push
or
jmp
mov
mov
mov
mov
pop
jg
sub
pop
push
aad
fnsave
pop
iret
pop
scas
int3
mov
es
filds
repz
lahf
push
je
sbb
into
shl
jmp
sub
pop
jae
jns
push
cmp
mov
xchg
sarl
lcall
jb
aad
mov
push
out
jp
mov
aas
mov
xchg
dec
loop
adc
cld
adc
aas
xchg
nop
or
dec
adc
mov
mov
setae
cmp
int3
lret
and
dec
arpl
out
jmp
add
xor
inc
bound
int
leave
pop
outsb
cmpsb
aam
dec
push
fildll
inc
loopne
ss
xlat
sub
add
aaa
dec
mov
ret
rcr
mov
mov
dec
cmp
out
movsl
cmp
sbb
aaa
dec
xchg
pushf
xor
xchg
int
jp
ret
pop
gs
push
addr16
lcall
insb
add
fwait
xor
push
shlb
lret
lret
mov
adc
and
movsl
sub
lock
and
rclb
icebp
xchg
fdivs
addr16
lea
stos
push
xchg
rol
push
into
pushf
ja
in
mov
cmp
lock
sbb
xchg
in
gs
mov
add
cwtl
aam
fs
push
dec
sub
lods
jl
rorb
into
mov
push
div
sub
sub
push
pop
mov
fcmovbe
adcb
pop
cmp
ret
mov
xchg
popa
or
pop
scas
aaa
repz
test
lcall
jle
repz
xlat
sub
jae
aaa
cmc
push
mov
pop
pop
jge
pusha
push
add
and
shrb
sub
sbb
leave
fnstsw
push
jo
scas
and
add
mov
pop
shll
or
adc
imul
or
xchg
fdiv
sub
jnp
jo
cld
pop
cmp
add
or
push
jnp
dec
aad
ljmp
xor
cmp
sub
leave
push
dec
cwtl
add
inc
sbb
mov
fwait
push
in
mov
int
iret
adc
ds
sbbb
das
std
xchg
shll
adc
lock
xor
mov
aam
inc
sbb
arpl
mov
or
iret
xchg
movsb
sub
cwtl
fwait
push
mov
in
or
add
mov
lret
mov
mov
push
xor
xor
mov
fs
adc
cmpsb
mov
sti
xchg
sti
inc
push
adc
mov
jns
xchg
in
outsb
imul
mov
lea
out
lret
sbb
xchg
ds
out
and
dec
mov
loop
lahf
cmp
cmp
sahf
icebp
jecxz
push
call
addr16
jne
xchg
add
rorl
clc
xor
sbb
aas
in
stc
inc
gs
add
popf
cli
movsl
sbb
or
mov
popa
lret
add
ficomps
fsubrl
adc
add
pop
mov
cwtl
std
push
cli
test
mov
in
out
dec
cmc
mov
popf
data16
aam
pop
and
xchg
push
mov
mov
fldenv
jno
or
cmp
xchg
fldl
dec
dec
mov
aas
nop
sub
jmp
test
mov
adc
fcoml
dec
add
and
mov
cld
lcall
paddw
jle
sbb
je
mov
gs
cmpsb
push
add
pop
jbe
divb
aam
adcb
sbb
cmpsb
into
in
aaa
je
pop
rol
fnstsw
mov
lods
xor
xchg
and
out
xor
sbb
adc
mov
rolb
sbb
or
lret
adc
xchg
push
rcrb
test
lock
xlat
xlat
adc
mov
dec
addb
mov
pop
mov
subb
push
sbbl
push
push
or
or
inc
fdivrs
and
movsl
push
cmpsl
pop
xchg
xor
cmp
shlb
jp
xchg
cltd
add
je
rorl
mov
xor
lods
sbb
out
out
imull
in
in
push
faddl
inc
imul
psubsb
mov
shl
js
push
sbb
pop
addb
shlb
ljmp
lret
inc
mov
jg
sahf
js
xlat
push
leave
lret
add
mov
sub
test
xchg
pushf
mov
jbe
sbb
js
lret
mov
inc
inc
xor
loopne
jo
subl
add
inc
add
cmp
pop
mov
rcl
dec
lret
add
out
push
in
je
scas
jne
movsl
xchg
lock
sub
arpl
mov
adc
lcall
or
test
test
inc
scas
pop
outsl
jle
xor
fld1
icebp
jle
pop
ds
aad
jmp
shrb
ret
test
out
ja
ret
ret
mov
rcll
or
call
mov
call
xor
jl
test
dec
and
lods
fdivp
es
adc
jp
sbb
divl
int3
sub
mov
fs
mov
cmc
jmp
adc
aam
aaa
jp
test
jo
aam
mov
dec
xchg
mov
sub
imul
push
lahf
push
cmp
xchg
sub
sti
cmpsl
mov
sub
sub
push
mov
icebp
push
outsl
movsb
sub
arpl
mov
sub
adc
bound
sbb
call
popf
ret
test
outsb
ss
cmpsb
or
jo
std
push
sub
rcrb
sarl
xchg
in
test
and
rol
int3
add
fmull
inc
lods
int
jl
mov
xchg
xchg
dec
mov
xchg
fistps
fdivs
stos
sub
pushf
test
enter
xor
pusha
sub
and
inc
pop
sbb
push
lret
and
imul
fidivrl
jne
shlb
push
das
mov
xchg
sub
ss
dec
sub
pushf
xor
xchg
and
adc
shrb
test
push
xor
shll
jne
and
add
out
outsb
xchg
imul
in
jae
or
cltd
inc
clc
insb
mov
adc
popf
xchg
pop
scas
shlb
insb
adc
pop
mov
or
lods
mov
adc
push
dec
movd
pop
and
and
push
ret
icebp
pop
push
loope
add
out
mov
clc
dec
inc
mov
cmp
inc
mov
sub
fmuls
push
inc
jp
adc
out
or
movsl
dec
mov
insb
rorl
push
in
add
ljmp
push
out
sbbb
or
cli
jmp
push
aaa
jo
mov
push
dec
mov
xchg
out
popf
daa
cmc
or
cmpsl
loope
xchg
test
mov
outsb
sar
xchg
push
roll
inc
mov
fldcw
mov
enter
mov
cmp
imul
in
sbb
jecxz
cmp
out
sub
mov
sahf
add
sbb
jge
test
stos
inc
lahf
lea
cmp
xchg
in
gs
aaa
pop
gs
cmp
xchg
daa
outsl
cmp
cs
push
lods
popf
testl
fildl
into
out
in
mov
rcrb
into
sahf
pop
fcompl
cmp
bound
out
ret
or
dec
ljmp
adc
enter
cmp
mov
xor
lods
lods
cmp
aas
ja
jae
cmpsl
push
inc
push
adc
lahf
mov
xchg
call
test
loope
push
idivb
pop
pop
mov
loope
pop
push
cmp
mov
sbb
push
sbb
and
mov
jno
bound
in
mov
jnp
mov
insl
out
add
aam
or
pop
lock
dec
stc
ret
clc
cs
add
mov
add
xor
arpl
push
ss
jno
fisubl
push
sub
sti
cmp
mul
and
cmpsl
mov
sub
xchg
inc
sub
int3
ss
cmp
outsl
add
xor
pop
cmc
mov
out
sbb
mov
inc
imul
cmp
cltd
sub
push
jp
xchg
je
das
pop
imul
or
add
push
mov
inc
cmove
sub
adc
arpl
jmp
cmp
add
mov
andl
test
mov
and
popa
pop
in
dec
xchg
mov
sahf
loopne
cli
push
subb
ds
sbb
mov
and
test
fistpll
nop
jp
mov
push
or
inc
loopne
xchg
pop
mov
mov
or
or
mov
jno
gs
lcall
into
xor
pusha
fwait
loopne
pop
jb
xor
and
pop
cmc
pop
push
ficoml
jne
mov
mov
sbb
cltd
xchg
ret
outsb
stos
sub
pop
push
push
adc
popf
lds
scas
btr
jno
test
push
jecxz
sub
insl
mov
xchg
sbb
leave
lds
jmp
lret
test
insl
loopne
lods
sahf
inc
sbb
adc
cld
fs
arpl
mov
add
add
push
inc
sbbl
add
mov
fs
cli
push
mov
cmpl
jae
pop
jp
push
mov
push
add
mov
dec
ret
cmp
dec
insb
lds
hlt
in
jb
jbe
stos
stc
cmpsl
ja
pop
push
int
loope
xchg
xor
daa
jnp
jg
icebp
inc
std
push
jmp
int
inc
or
hlt
jecxz
pop
popf
cmpsl
and
pop
mov
or
cmpsb
cmp
ror
cwtl
adc
out
cmp
add
sub
pop
fsts
lods
sub
jle
inc
dec
dec
ljmp
dec
int3
push
xlat
mov
jb
and
mov
xchg
cmpb
fwait
jnp
ja
cld
add
pop
test
je
adc
dec
hlt
fistpl
inc
add
shrb
idiv
roll
add
inc
lcall
loop
popf
loopne
adcl
stc
xor
addr16
cmp
adcb
mov
cmp
mov
mov
test
mov
test
ss
mov
sub
adc
lahf
cmp
mov
sarl
fdivrl
push
or
ja
cli
icebp
scas
jne
add
daa
scas
jp
sahf
test
add
sbb
ss
inc
notb
adc
ja
lret
push
jecxz
bnd
add
mov
mov
pop
test
jns
clc
jge
ret
ss
push
fnstsw
popf
cld
mov
loop
jmp
dec
stos
xchg
xchg
decl
sbbl
push
sbb
sbb
jecxz
mov
mov
out
xchg
sbb
sti
loope
dec
je
cmc
arpl
lahf
push
data16
lock
rclb
es
jne
shll
and
arpl
nopl
dec
jb
adc
fldenv
inc
jnp
mov
mov
cmpl
addr16
adc
imul
jg
inc
adc
push
sub
imul
nop
add
or
insl
jne
fisubrl
out
cltd
cmp
fisubl
into
out
daa
lea
lea
test
lea
cmp
push
jg
and
stos
pop
push
and
std
dec
dec
dec
mov
movsb
arpl
stos
sbb
lods
arpl
int3
dec
inc
sbb
push
negl
dec
pop
cmpsb
xor
xchg
mov
xchg
aaa
xor
fdivrl
clc
or
sub
scas
xchg
fwait
xchg
fcomps
dec
push
push
addb
lods
sub
add
js
mov
mov
shll
or
mov
das
lret
mov
in
lea
mov
sbb
jo
in
imul
scas
xor
int
jne
pop
movsb
dec
mov
push
incw
adc
cmpsb
and
insl
inc
adc
bound
mov
les
adcl
arpl
ljmp
js
xlat
push
add
call
mov
sar
fs
cmp
pop
cmp
add
scas
loopne
iret
pop
mov
test
call
mov
shl
shrb
cmp
stos
mov
sbb
bound
fs
es
aaa
rcrb
pop
shrl
mov
jb
xchg
push
jne
cmp
in
cli
ret
loop
add
std
iret
and
inc
lds
or
cmpb
pop
dec
dec
dec
sahf
mov
pop
fistpl
int
clc
mov
clc
and
and
push
aas
or
loopne
call
or
push
fcmovne
mov
pop
aaa
lods
or
add
pop
cwtl
mov
and
jp
sub
popa
xchg
scas
cwtl
popa
std
subb
sbb
jno
bound
cmpsb
ljmp
test
lds
cmpsb
test
data16
sbb
inc
rcrb
add
pusha
push
inc
nop
lods
stos
sub
rcrl
mov
xor
and
xchg
sub
cmc
mov
pusha
mov
push
adc
add
ret
sti
lahf
jo
scas
cwtl
lcall
imul
jmp
loope
cmp
cmp
lods
popa
jmp
cmovo
pop
repz
mov
push
jno
ljmp
add
or
pop
sahf
mov
dec
mov
lds
sahf
sbb
sbb
imul
lret
popa
icebp
inc
inc
ret
pop
lea
in
xor
popa
loopne
lcall
jnp
outsb
repnz
scas
std
xchg
scas
mov
es
scas
cmp
dec
sub
inc
jp
inc
int
add
pop
in
xchg
cltd
shlb
sbb
mov
es
repz
mov
movsb
jle
xchg
fistpll
sbb
push
jecxz
lds
fcom
mov
mov
push
clc
inc
xchg
out
out
adc
js
add
imul
aaa
sub
mov
sub
adc
adcb
adc
roll
sub
mov
lcall
clc
stc
add
mov
push
xchg
pop
sub
push
bound
shrb
pop
sbbl
push
jmp
inc
jnp
cmp
ret
out
iret
out
pop
pop
and
jmp
pop
aad
xchg
jle
fwait
push
addr16
jecxz
daa
mov
hlt
test
stc
outsb
mov
stc
andl
mov
dec
pop
adc
cmp
mov
cli
pushl
adc
and
push
sbbl
pop
mov
and
or
mov
arpl
or
push
jns
rcr
push
xchg
jecxz
cmpsb
ret
xor
insb
xor
cmp
xor
fdivrl
adc
adc
jbe
insl
jg
xorl
sbb
fwait
out
jb
outsb
rsm
xor
test
xor
push
sbb
mov
addr16
mov
pop
jg
aam
and
inc
icebp
ss
dec
leave
push
xchg
or
pop
or
cmp
popf
add
cmpb
pop
int
mov
sbb
xor
out
andl
test
adc
xor
js
dec
cmp
mov
dec
pop
jp
int3
pusha
cwtl
and
out
fmul
loop
das
mov
xchg
iret
insb
pop
ss
fbld
mov
push
rcll
xor
scas
jmp
fldcw
repz
fdivrp
sbb
push
imul
jbe
dec
xor
subl
pop
fldl
lods
loopne
sbb
push
dec
cmp
ret
inc
setns
mov
inc
pop
ds
and
outsb
fsubr
or
cmp
inc
ds
pusha
mov
aam
pop
mov
jp
nop
xchg
hlt
ss
mov
push
arpl
loop
movsb
push
push
cmpsl
sarb
loope
movsb
mov
pushf
sub
jmp
ja
mov
es
mov
imul
movsl
push
fldl
bound
or
mov
pop
out
push
sbb
mov
pop
out
int
xor
sub
mov
push
and
repnz
clc
les
test
mov
sbb
adc
fnsave
or
stos
loopne
push
dec
jg
mov
xor
mov
jne
mov
mov
scas
lea
mov
mov
mov
xchg
push
or
out
movsb
icebp
or
cwtl
jno
sub
inc
mov
push
test
sarb
out
xchg
call
and
outsl
inc
jmp
mov
mov
fsubrs
mov
jge
daa
push
cmp
or
xchg
rcll
into
jo
inc
xchg
cld
xchg
mov
sbb
aad
xchg
lds
sub
ljmp
pop
movsl
insb
add
cmpsl
xor
fdiv
idiv
jno
jecxz
ljmp
push
pushf
addr16
cmpsb
out
das
shrl
std
dec
lods
into
adc
dec
lods
inc
sub
in
inc
inc
and
ljmp
cmp
jle
out
xchg
loopne
testb
adc
pop
sbb
mov
fsubl
adc
out
es
or
test
cmp
adcl
les
ljmp
and
mov
mov
fsubrl
popa
mov
repnz
inc
pop
push
ljmp
push
aaa
sarb
adc
add
mov
cmpb
aas
fidivrl
adc
clc
sahf
dec
popf
jle
das
xor
stos
aad
fnstenv
pusha
pop
out
popf
out
mov
ja
pop
inc
movsl
pushf
lea
add
cmpsl
frstor
movb
add
push
push
push
shlb
data16
shrb
cld
lcall
lea
movsl
or
out
sub
int
adc
inc
repz
subl
out
int3
sbb
jb
mov
shl
lahf
imulb
loop
test
ds
cmc
decl
subl
fldcw
sbb
jne
lock
dec
sub
adc
mov
adc
push
add
adc
clc
gs
popa
fisubs
cltd
jle
into
mov
lahf
inc
aaa
mov
fbld
in
xor
lods
bound
fs
int
xchg
popa
push
imul
or
push
leave
loope
sbb
fisttpll
push
iret
xor
pop
push
out
iret
stc
shl
loopne
stc
push
bound
in
popa
push
xchg
mov
xchg
mov
sbb
jle
add
xor
aas
cmp
cmc
xor
leave
mov
mov
rorl
sbb
cmp
dec
jecxz
mov
int
ljmp
xchg
scas
ja
std
and
popa
enter
pop
jl
inc
test
cmp
mov
pop
mov
idivb
adc
pop
shlb
test
das
push
lcall
rcll
in
test
inc
add
and
out
jbe
sbb
les
push
mov
jp
cmpl
lahf
sahf
inc
jno
and
das
fadds
cmovg
xchg
sub
ja
inc
ret
mov
icebp
jb
out
rclb
ss
gs
or
in
mov
out
inc
rcrl
fimuls
cmp
pop
add
sub
fwait
leave
pusha
push
push
adc
fxch
and
loopne
sub
jge
sub
lods
sbb
xchg
sub
aas
mov
enter
sub
testb
and
lret
add
dec
push
mov
enter
mov
mov
lods
sbb
in
arpl
jnp
add
out
int
adc
xchg
jb
and
adc
scas
lds
out
push
mov
xlat
sub
xor
roll
or
jmp
lret
xchg
enter
test
add
shrb
mov
lcall
lret
mov
xchg
cmp
out
sub
mov
mov
jb
ret
in
inc
fwait
xchg
outsb
shll
jmp
cmp
les
inc
lcall
mov
inc
daa
xchg
push
outsl
pop
rol
aaa
mov
out
jp
rcr
xchg
inc
pop
and
ljmp
and
fnstcw
xor
cltd
adc
mov
aas
icebp
xor
pmaxsw
arpl
setno
std
lods
fcoml
push
call
mov
notb
aam
push
push
adc
sbb
pusha
xor
jecxz
adc
loopne
in
nop
mov
imul
jle
push
test
jmp
or
mov
icebp
test
mov
ja
mov
pushf
mov
mov
jecxz
mov
scas
repnz
ficomps
or
mov
jl
dec
sbb
outsb
mov
mov
push
dec
aam
mov
jl
loop
icebp
mov
je
fsubrs
jp
jo
rcrl
lea
jo
das
jae
xchg
push
lret
jle
adc
cmp
lret
add
in
mov
jg
daa
pop
stos
shrb
push
dec
xchg
es
adc
sbb
shl
sbb
sub
jb
xorl
adc
cmpsl
push
jge
adc
xor
push
mov
xor
dec
pop
cmp
dec
xlat
ljmp
aad
ja
int
add
sub
movsl
jae
inc
iret
jno
daa
pop
lods
in
mov
sbb
hlt
cmpsl
int
in
xor
mov
clc
mov
dec
and
mov
out
notl
inc
sbb
ja
push
aam
push
push
fnstenv
nop
testl
xchg
lahf
sbb
add
mov
arpl
gs
jmp
or
mov
ret
shl
jbe
add
push
sahf
outsl
sbbb
xchg
jb
cmp
lcall
ja
push
and
dec
icebp
cmp
dec
loope
sub
in
push
das
cli
xchg
mov
add
inc
mov
lahf
push
bound
xchg
lea
addr16
jbe
dec
fcmovb
jmp
addr16
mov
fmul
aam
test
ds
cmp
stos
mov
repnz
test
xor
add
push
fsub
adc
rolb
out
rorb
mov
sbb
push
sahf
mov
bound
mov
pop
or
jge
imul
cmp
push
es
or
mov
add
cld
jl
cmp
push
mov
pop
cmp
push
mov
pop
stc
fs
call
jo
rorb
xchg
mov
cmp
jg
fwait
sub
xchg
dec
jl
mov
add
ds
cmpsb
icebp
dec
scas
lahf
dec
add
outsl
cmp
jmp
mov
hlt
pop
stos
ror
cwtl
and
pop
in
in
mov
aaa
inc
jne
ficoms
add
mov
mov
add
inc
mov
mov
push
hlt
es
jns
std
out
ret
mov
xchg
imulb
sub
scas
inc
add
cmp
rolb
out
sub
pop
xchg
mov
inc
in
inc
xacquire
jmp
mov
add
mov
js
add
push
fimuls
mov
jge
inc
cwtl
jle
das
mov
cmp
pushf
sub
test
jb
xchg
mov
adc
in
fstl
push
push
jmp
out
mov
mov
push
cltd
mov
fwait
stos
mov
fistpl
sti
xlat
mov
add
faddl
nop
pop
adc
xchg
xor
and
aad
sub
sbb
push
fstl
push
inc
fdivrl
gs
jle
xchg
lcall
in
lret
daa
xchg
xor
in
mov
push
jns
push
rorl
mov
cmp
dec
sbb
mov
pushf
xchg
xchg
and
bound
xchg
mov
dec
cmp
loopne
icebp
arpl
sub
rcrl
mov
std
ret
rcll
fdiv
repnz
mov
add
icebp
inc
clc
shlb
nop
and
mov
xor
or
push
nop
xor
jne
xor
fnstcw
and
sub
loopne
ja
lret
add
mov
outsb
xchg
jo
call
cmp
mov
jge
mov
xchg
add
jg
push
fsub
cld
jns
add
testb
mov
outsl
addr16
xchg
push
in
outsb
jbe
movb
lods
jb,pt
jmp
pop
repz
repz
lock
xchg
adc
mov
daa
pusha
loopne
sub
inc
xlat
adcb
fwait
or
xchg
jl
inc
pop
dec
xchg
mov
mov
sbb
or
imul
lahf
lcall
dec
mov
stc
xchg
xlat
testl
cs
jbe
clc
push
inc
sbb
in
enter
mov
out
or
cwtl
xor
xchg
mov
and
mov
sub
lret
imul
imul
in
pop
sbb
mov
sti
jmp
gs
pop
pop
sub
lcall
push
jmp
fwait
add
mov
mov
andl
pop
xchg
xor
aaa
fcomip
inc
sahf
sbb
xor
fcmovbe
dec
sub
lods
dec
aam
imul
cmp
js
mov
cmpsl
inc
jp
and
es
in
nop
mov
sub
aaa
mov
enter
dec
pop
cmp
jle
mov
jno
xchg
sbb
pop
cmpsb
cmpsb
cmpsl
icebp
data16
dec
push
adc
cmp
adc
int
cmp
sbb
shlb
jp
pushf
cmpb
je
ret
pushf
dec
add
adcb
xor
gs
xor
mov
or
ss
clc
fisttpl
adc
lods
lods
bound
mov
imul
xor
sub
xor
stos
push
mov
aam
and
sub
dec
xchg
fisubrs
dec
sub
repnz
pop
rcr
push
jge
iret
fdiv
faddl
inc
addl
insb
mov
mov
xchg
and
adc
repz
mov
test
ficoml
and
pop
ljmp
adc
outsl
mov
ret
outsb
mov
jp
lahf
and
stos
dec
sbb
fnstsw
sbb
adc
and
outsl
or
xor
daa
adc
sti
sbb
pop
orb
enter
inc
jmp
or
pop
fstpl
fistpl
pop
insl
mov
or
push
push
mov
test
test
sbb
push
and
mov
adc
xchg
out
push
adc
mov
add
cmp
pop
in
out
in
loopne
pop
ljmp
rcr
jns
pop
lds
add
jnp
add
fs
cmp
xorb
dec
mov
leave
clc
xchg
out
stos
sbb
mov
loope
xor
movsb
lret
imul
xor
lcall
test
fucomi
fcomps
xor
stc
jmp
std
pop
aam
fdivs
imul
cwtl
mov
xchg
lcall
movsb
lods
cmp
fdivrl
in
jg
add
mov
push
push
lods
sub
push
xchg
fisubl
adc
xchg
fists
push
pop
out
sbb
jle
add
add
jl
push
inc
sbb
ljmp
pop
cmp
xor
jae
push
sbb
aad
or
sbb
nop
cmpsb
fisubrl
dec
xchg
mov
cwtl
pop
pop
push
mov
les
or
sub
mov
mov
leave
add
cmc
test
cs
mov
sbb
xchg
idiv
xchg
mov
popa
mov
push
push
cwtl
roll
pop
sub
xchg
arpl
shll
pop
lds
pusha
pop
sbb
xor
adc
inc
mov
pop
scas
lea
and
or
dec
das
dec
inc
test
jle
pop
pop
xor
jmp
lea
lahf
loop
inc
scas
jno
mov
imul
mov
test
pop
cmc
xor
cmpsb
dec
cli
idiv
push
sahf
xor
es
push
call
xlat
mov
sub
dec
cmc
aaa
pop
gs
dec
xor
fwait
jp
adc
sub
push
jle
out
or
adc
notl
out
sub
sarb
into
xlat
xchg
sbb
adc
shlb
mov
adc
stos
sbb
test
sub
inc
outsl
stos
jg
scas
popf
xchg
cmp
inc
lea
in
out
addr16
lcall
mov
or
mov
mov
sbb
movsl
hlt
pop
push
add
pop
scas
sub
into
inc
incl
les
sub
and
push
outsb
nop
mov
imul
cld
popf
and
sbb
xor
push
popa
adcb
push
lret
pop
jb
or
pop
enter
ljmp
or
insb
pop
jmp
mov
scas
aaa
pop
mov
lods
fwait
jmp
adc
ficompl
enter
fcmovne
cmc
lret
jg
xor
lahf
jp
dec
pop
inc
out
or
insl
jno
jmp
push
in
shlb
loope
lcall
inc
out
add
test
ret
into
lea
addr16
push
sub
loopne
push
xor
push
popl
mov
into
out
aaa
scas
sub
fisubrl
movsl
mov
loope
test
insb
cmp
ja
scas
lahf
jb
movsb
in
daa
jmp
mov
cld
or
jbe
push
int3
cli
movsb
dec
sub
add
xchg
and
loopne
adc
imul
out
add
xchg
stc
loopne
xchg
inc
adc
mov
mov
mov
mov
mov
sbb
xchg
and
into
jmp
push
out
cmp
test
jg
add
jae
lahf
int
popa
jbe
add
cmp
pop
enter
dec
xchg
cli
mov
icebp
and
fisttpll
pop
loopne
ds
xor
movl
adc
adc
test
dec
and
adc
mov
xor
fisttpl
leave
push
jo
mov
movsl
int3
fdivrl
in
dec
icebp
xchg
stos
push
scas
int
pop
adc
mov
dec
mov
sub
rcll
leave
and
out
movsl
call
loope
cs
xchg
mov
imul
mov
or
incl
jne
mov
push
mov
mov
xchg
push
fistpll
sarb
mov
adc
push
jmp
sbb
mov
imul
push
sub
aad
xor
sbb
sbb
insb
pusha
enter
iret
aad
inc
push
stos
push
stc
fs
loop
movsb
sub
test
push
sub
test
mov
cmp
xchg
fs
insl
andl
xor
pop
fdivrl
adc
int
scas
aam
cltd
lds
cmp
hlt
fmuls
add
or
sbb
shll
pop
ja
daa
outsb
dec
pop
pop
pop
pushf
sub
test
sbb
fcoms
dec
out
ret
ss
sbb
xchg
dec
es
out
call
and
mov
mov
inc
or
daa
fnstsw
jmp
jge
sub
pusha
pop
fadd
xchg
mov
mov
sbb
ljmp
lret
push
lds
sub
pop
pop
xchg
daa
dec
fwait
and
adc
push
sub
inc
loope
sbb
or
add
ret
mov
push
iret
aad
xor
xor
in
xchg
jmp
pop
and
push
xor
and
xchg
jp
mov
sub
push
arpl
add
or
or
adc
stos
adc
cwtl
out
mov
adcb
mull
mov
mov
cld
std
insl
mov
loopne
or
or
pop
mov
dec
lret
fstp
adc
or
add
cmp
faddl
sub
adc
inc
xchg
push
je
mov
icebp
test
lahf
add
or
ljmp
push
mov
xor
icebp
sub
fnstcw
push
pop
stos
iret
mov
daa
pop
jbe
pop
fisttps
cmpsb
mov
cmp
nop
mov
leave
mov
xchg
or
and
les
mov
ret
or
mov
xlat
cld
push
into
repz
fmul
mov
js
cmp
cmpsb
sbb
inc
push
popf
sbb
aam
xchg
cmpsb
push
push
sbb
lret
pop
stos
sub
mov
and
cmp
push
jns
aaa
xchg
pushf
sbb
jl
dec
cmc
sarb
in
sbb
test
inc
xor
or
test
sbb
xchg
pop
loopne
rcl
xor
push
cwtl
iret
xor
inc
int
lods
jp
xchg
test
test
ss
lea
mov
dec
test
iret
test
xchg
fcomps
enter
int3
or
stc
xor
or
loopne
add
xor
sbb
mov
stos
or
mov
jle
mov
sub
add
lea
mov
cmp
jo
cmpsb
rcrl
mov
mov
out
jg
mov
adc
aam
aas
pop
mov
xchg
mov
je
pusha
je
fs
fmuls
sbb
push
loopne
inc
cmp
add
add
inc
mov
pop
sar
pop
or
xor
mov
push
jge
outsb
je
or
je
xor
out
out
and
sbb
jmp
aad
xor
clc
out
aad
outsl
pop
mov
jne
dec
rcrb
push
iret
fs
sbb
fdivrl
insl
pop
lcall
in
cmp
mov
and
cmpsb
jp
jg
adc
mov
cmp
rolb
xchg
mov
enter
enter
push
xlat
pop
cmp
pushf
xchg
pop
or
sub
sbb
push
fldt
std
pop
mov
mov
dec
stc
adc
dec
mov
sub
pop
cmpsb
mov
add
cmp
add
inc
repz
daa
or
dec
add
xor
push
mov
add
push
and
enter
mov
shrb
scas
or
or
int
sbb
cmp
inc
rcl
fisttpl
insb
cmpsl
mov
das
stos
mov
pop
sbb
enter
mov
xchg
xor
jns
jle
aad
or
fs
mov
mov
sub
jo
or
mov
inc
fldt
xchg
iret
repz
fadds
mov
loop
pushf
push
stc
decl
push
jg
aaa
mov
inc
and
imul
dec
or
pop
clc
jg
movsb
rcrl
leave
int3
fld
xor
xchg
imulb
xor
and
xlat
test
popf
cwtl
xchg
mov
aas
sub
mov
adc
nop
sahf
pop
hlt
roll
lea
out
cli
sub
xor
sbb
sti
ret
pop
cmp
faddl
and
mov
mov
add
adc
stos
adc
add
repnz
addr16
sahf
imul
lods
mov
mov
cli
test
cltd
push
arpl
idivb
xchg
push
movsl
mov
and
ret
arpl
mov
hlt
xor
clc
scas
movsl
push
les
push
and
fwait
sbb
fwait
enter
std
insl
mov
xchg
adc
in
mov
enter
arpl
add
ljmp
fstps
iret
aas
mov
cmpsb
stos
int
mov
scas
pop
rcrb
push
insb
insl
mov
out
adc
int
in
jge
lret
mov
sahf
idivl
dec
jp
xchg
out
cs
push
sub
jp
dec
sub
loop
jo
mov
push
xchg
add
jecxz
roll
out
std
repz
loop
mov
imul
insb
movsl
pop
jb
xchg
push
dec
addr16
rclb
movsb
push
cwtl
xchg
js
jbe
dec
fbld
aad
mov
add
jp
ret
adc
mov
jo
icebp
dec
bt
fwait
or
leave
hlt
inc
push
int
inc
mov
mov
add
call
push
icebp
mov
leave
xchg
push
int3
dec
adcb
mov
sbb
cmp
dec
in
test
mov
cltd
jno
mov
nop
ret
cmpsb
dec
xor
stc
pop
roll
push
cmpsb
cs
sbb
lahf
push
lret
daa
fs
or
movsb
mov
add
jb
sbb
dec
mov
push
imul
clc
cli
daa
and
inc
data16
add
push
insb
mov
sbb
sub
mov
sbb
fsubs
xchg
repnz
adc
fucomip
mov
fst
arpl
or
mov
mov
outsl
and
inc
stos
test
and
inc
sahf
mov
sbb
jno
xor
bound
insb
loope
jno
pop
test
push
dec
cmpb
pop
xor
imul
leave
jmp
add
loope
mov
insb
je
mov
or
xor
xor
jns
sub
xor
xchg
stos
popf
adcb
mov
jmp
rclb
jp
or
insb
cltd
sbb
dec
movsb
mov
shlb
sbb
stc
mov
lret
or
push
pmaddwd
stos
out
jns
mov
fiaddl
mov
dec
xlat
push
jbe
xchg
xchg
pop
aaa
sbb
jecxz
stos
ss
or
stos
pushf
cmp
xchg
xor
imul
mov
push
xchg
int
ds
pop
in
jb
stos
lods
out
stos
gs
add
test
stos
or
mov
cmp
dec
jle
cs
das
hlt
add
inc
jmp
add
or
fisubs
pop
push
mov
pushf
sbb
mov
mov
jns
ficoml
scas
pop
lods
adc
adc
xchg
mov
mov
xchg
iret
or
cmp
xor
add
add
dec
mov
out
mov
in
mov
mov
sbb
mov
sbb
mov
cwtl
rorb
outsl
arpl
setb
adc
inc
inc
dec
jg
adc
shlb
mov
shlb
jg
out
or
xor
sbb
lea
mov
jecxz
out
fimuls
jbe
xchg
sub
mov
andb
data16
mov
loop
test
pop
cltd
inc
mov
sbbl
iret
jl
xchg
cwtl
mov
sahf
imull
das
cmp
hlt
jne
fdivrs
pop
cli
sbb
imul
sbb
jne
xchg
mov
movsl
or
mov
pop
mov
cwtl
fldenv
out
mov
mov
inc
out
aad
bound
xchg
adc
icebp
call
sarl
xchg
testl
in
in
lret
and
in
cmp
and
hlt
popa
aad
cmp
xchg
clc
sub
cmp
inc
adc
dec
push
out
and
jae
clc
cmpsb
mov
vdivss
adc
mov
scas
jmp
daa
iret
pusha
sub
cs
adc
inc
ja
scas
and
in
dec
ja
jo
xchg
cmp
cli
or
or
arpl
pop
rcrl
mov
in
cltd
addr16
out
sahf
inc
clc
mov
into
data16
mov
mov
inc
pop
adc
int
add
sub
roll
push
sub
nop
dec
popf
imul
push
adc
xchg
cld
sbb
into
push
jecxz
mov
pop
mov
mov
test
pop
mov
inc
mov
pop
test
dec
testb
mov
sbb
inc
ljmp
add
mov
fwait
clc
or
jge
stos
and
cmp
mov
dec
mov
iret
adc
inc
dec
push
fwait
mov
mov
std
test
in
and
or
pop
xchg
lock
cli
push
jl
xchg
xlat
jae
sub
daa
xchg
cli
push
sbb
imul
stos
mov
std
dec
or
mov
iret
loope
fmul
sub
lods
cwtl
scas
fmull
lret
mov
pusha
pushf
cltd
xor
shrb
push
xor
ret
stc
sbb
pop
jmp
test
add
arpl
mov
test
das
arpl
daa
cltd
loopne
popa
movsl
outsb
loopne
call
adc
ljmp
jbe
leave
repz
adc
mov
repz
div
outsl
aas
das
and
aad
mov
divl
ret
dec
fwait
dec
ret
sub
icebp
mov
sbb
add
testb
inc
xchg
inc
cwtl
test
js
cwtl
xor
mov
ficompl
sub
rorb
fisubl
cwtl
mov
cmpsl
pop
cmp
ret
or
add
scas
pop
xor
icebp
test
push
xorl
and
adc
fimull
pushf
pop
stc
or
lret
and
int3
dec
roll
cmc
fisubrl
sbb
pop
les
in
scas
daa
stos
andb
cmp
xchg
sub
mov
and
or
or
pushf
mov
cs
mov
sub
fstps
loope
jle
mov
pop
imulb
xchg
xchg
mov
test
or
inc
xor
xchg
mov
adc
mov
cmp
cmp
push
xchg
fistl
cmp
sbb
xor
mov
and
cmp
idiv
bound
test
sbbl
dec
daa
sbb
mov
mov
sar
cmp
mov
in
sub
pop
inc
lahf
xchg
je
jecxz
push
inc
mov
sahf
mov
mov
jno
mov
jg
adc
xchg
jae
pop
push
ret
mov
scas
mov
push
fdivp
mov
mov
fxam
or
lea
pop
push
stos
sbb
xchg
xchg
lret
addr16
mov
push
hlt
jbe
inc
shl
shlb
add
jne
fwait
cld
rclb
mov
sub
inc
pop
pop
enter
push
mov
xchg
lods
push
mov
pop
mov
jnp
fs
push
popl
push
push
xchg
jmp
xchg
xchg
insl
leave
insb
pop
jl
pop
mov
pop
lods
sti
or
mov
mov
xlat
and
xor
sbbb
jae
add
xchg
adc
cltd
xchg
jnp
scas
lahf
dec
aas
inc
adc
sbb
pop
and
pop
test
scas
daa
xchg
xchg
sub
jge
or
stos
insb
mov
les
xchg
push
ret
mov
flds
scas
adc
lret
jno
test
pushf
cmpl
mov
iret
sbb
jmp
mov
mov
push
mov
pop
scas
sbb
pop
cmp
adc
pop
sub
push
xchg
nop
in
or
mov
xchg
subl
add
clc
out
sbb
cmp
int
mov
dec
lcall
lea
loop
jne
cmp
and
sub
xchg
lock
xor
js
nop
cmpsl
lret
xor
xchg
loop
or
pop
sub
mov
imul
adc
jnp
add
cmp
fimull
mov
xchg
rclb
lahf
cwtl
andb
jmp
data16
sub
loop
mov
add
div
xchg
sbb
jl
fldl
adc
push
shlb
les
push
mov
idivb
outsb
lret
in
imul
pop
bound
cmpsl
daa
addl
mov
lahf
and
inc
leave
rcl
jb
clc
cmpsb
fstpl
pop
lock
inc
aas
sub
inc
add
out
call
xor
sbb
push
cld
aad
jnp
adc
dec
dec
push
dec
inc
movlps
shlb
mov
sub
push
inc
movsb
mov
pop
add
ljmp
push
xor
or
cmc
mov
mov
pop
in
aas
call
xchg
push
add
mov
sub
pop
or
adc
xor
and
mov
iret
or
mov
lahf
sbbb
mov
enter
jo
jg
dec
lods
test
pop
ss
mov
roll
ret
cmp
call
fistpll
stc
mov
pop
mov
dec
or
cmc
mov
sub
mov
lret
mov
jmp
jns
fcomp
dec
loop
xor
testl
imul
adc
int
and
or
xlat
lret
lahf
mov
sti
pop
test
out
sbb
sub
rcll
into
sbb
cltd
mov
movsb
out
xor
stos
std
jbe
ljmp
push
loopne
sbb
add
inc
pop
les
daa
pop
mov
insl
push
out
les
mov
cmp
pop
xor
jmp
std
and
xchg
xchg
dec
fidivrl
std
dec
add
xor
and
dec
ljmp
fistpl
ficoml
sbb
aad
dec
jbe
shrl
loop
adc
mov
outsb
movsl
aam
stos
jae
jmp
aam
ds
mov
stc
repz
movsb
xchg
add
and
jg
out
push
test
mov
or
adcb
sahf
cmpsl
dec
test
sub
fstps
mov
daa
nop
cmp
push
add
fdiv
push
or
inc
hlt
cmpsl
mov
mov
cmp
push
imul
and
rcl
add
jae
xchg
and
fstl
inc
popf
add
js
repnz
cmc
gs
inc
clc
std
xor
adc
cmp
std
push
cmp
jbe
pusha
or
pushf
pusha
int
ljmp
sti
loop
scas
sbb
ja
pop
insl
pop
pop
adc
cmp
push
cmp
clc
mov
jo
nop
push
aam
insl
adc
add
loopne
mov
pop
cwtl
push
or
adc
mov
mov
ss
mov
loop
cli
mov
into
imul
out
jne
enter
and
sbb
adc
push
sub
nop
cmp
sub
mov
imulb
pushw
dec
add
xchg
faddp
mov
add
outsb
je
jmp
jl
sub
pop
test
xchg
mov
out
add
fldl
imul
nop
sbbb
jmp
mov
jl
insb
mov
cli
sub
inc
mov
cmpsl
mov
ficomps
enter
jae
inc
data16
push
push
and
sbb
sbb
in
insb
pushf
arpl
lahf
pushf
jne
cmp
cmp
add
jl
or
xchg
testl
in
and
mul
dec
dec
adc
gs
iret
push
popf
mov
pop
fcmovne
leave
sub
sti
mov
pop
inc
pop
push
fwait
jb
loop
or
add
jecxz
mov
shrl
dec
rolb
xchg
sub
xlat
imul
lea
xor
scas
push
or
lock
fisubrl
pusha
dec
sbb
das
dec
mov
pusha
add
adc
mov
push
mov
dec
mov
sub
push
sahf
lea
cmpsb
xchg
fmul
out
ljmp
test
xchg
mov
pushf
pop
and
sbb
add
inc
ret
inc
stc
adc
iret
xchg
outsl
push
out
outsb
in
dec
fwait
dec
fsubs
js
stos
loop
sbb
sbb
push
sub
test
push
rorl
mov
enter
add
or
mov
es
cs
into
push
outsb
je
bound
jmp
rcrl
outsb
dec
aas
ljmp
xor
xor
dec
out
popf
jg
lea
in
js
adc
push
sbb
sub
cmp
jae
je
push
xlat
xor
iret
popa
pop
adc
ja
cmc
leave
hlt
adc
ret
jmp
gs
jbe
fists
xor
aas
shrb
or
pop
push
aas
scas
pop
dec
fstpt
jo
movsl
pop
out
push
shll
notb
repz
sahf
or
mov
add
adc
ljmp
fldl
jp
std
das
pusha
sbb
sub
cmpsb
in
cli
std
scas
mov
sub
daa
pusha
mov
mov
imul
push
out
ljmpw
shr
jb
fwait
jl
js
jmp
adc
pop
iret
or
jmp
jnp
mov
jae
data16
addl
sar
dec
mov
jae
fstpt
mov
movsb
cmpsl
fldcw
cmp
dec
fcompl
adc
push
iret
jecxz
add
and
cmp
jns
adc
fdivrl
and
out
imul
pop
lret
sub
cmpsl
or
arpl
fisttps
xchg
or
adc
xchg
mov
push
add
outsl
shlb
cmp
jo
mov
push
les
push
aaa
pop
icebp
insl
pop
daa
test
scas
ret
ja
rcl
xor
cmp
jbe
pop
inc
outsl
fwait
push
xchg
loopne
cmpsl
cltd
ror
lcall
leave
ds
mov
adcb
inc
push
imul
lods
add
aad
lods
cmpsl
inc
scas
bnd
ffreep
fisttpll
mov
mov
cli
inc
fstpl
test
push
loop
shl
adc
inc
scas
push
call
xor
push
add
inc
negl
repz
movsb
lds
mov
push
mov
out
sub
xchg
and
mov
mov
push
cmpsb
add
movb
lods
cmp
cwtl
pop
mov
sbb
sahf
push
fcompl
adc
sbb
xchg
dec
test
xor
gs
mov
fnstsw
dec
inc
inc
mov
cmpb
sub
mov
and
push
cmp
out
mov
inc
gs
mov
mov
mov
sbb
lods
jnp
aaa
rclb
insl
push
adc
fs
addr16
sti
jo
insb
daa
mov
int3
lret
sahf
ds
jae
sub
xchg
inc
ljmp
cmp
pop
in
testb
xor
dec
mov
sub
inc
pop
sahf
xchg
push
sub
and
pop
and
add
sub
add
pop
mov
lcall
dec
shl
jns
mov
shlb
cmpsb
mov
mov
sahf
test
push
incb
xchg
into
sbb
popa
push
stos
jnp
dec
mov
push
sub
stc
add
dec
jae
fsubrs
or
shrl
inc
out
push
sub
pop
adc
add
jbe
inc
push
push
xchg
cld
sbb
jle
sbbb
ljmp
imul
lea
imul
popf
pop
cmpsb
cmp
adc
add
sub
push
push
mov
clc
enter
insl
mov
mov
add
icebp
call
jbe
test
hlt
mov
jmp
pushf
pop
hlt
or
xor
push
mov
xchg
cmc
lods
inc
shl
imul
testb
jg
mov
push
mul
stos
jo
adc
rorb
or
ljmp
mov
push
xor
imulb
mov
jmp
fdivr
mov
adc
or
fdivl
arpl
loope
enter
jle
jg
and
mov
pop
test
shlb
fmuls
sub
call
inc
and
lea
stc
imul
imul
add
or
and
push
jg
fcomp
bound
bound
pop
dec
es
cmp
dec
inc
inc
ja
pushf
sar
inc
loop
in
add
cs
mov
cmc
ja
fs
in
or
pop
cmp
shr
fwait
fwait
outsl
and
sbb
inc
cwtl
outsl
jno
insl
jbe
je
stos
push
pop
push
clc
fbstp
xor
mov
sbb
dec
leave
lahf
gs
arpl
leave
inc
int
test
fxch
stos
push
add
mov
insl
pop
push
or
cs
pop
sub
xor
lcall
rolb
xchg
inc
mov
int3
rcl
cli
push
add
pop
clc
and
int3
xor
mov
inc
or
or
gs
mov
jnp
jg
mov
or
xor
or
mov
fildll
mov
xlat
mov
cmp
enter
shll
iret
push
pop
lea
repz
insl
mov
and
and
xor
xchg
imul
test
jg
xor
push
mov
pop
push
sahf
lcall
addr16
sbb
add
stos
push
enter
cmp
sbb
inc
mov
shl
or
arpl
adc
push
cmp
xor
fs
fldl
out
xor
gs
mov
popl
xchg
rolb
shl
adc
lret
fbstp
push
fucomp
mulb
jae
test
lock
mov
adc
je
xchg
jmp
adcl
jg
into
jbe
in
loope
ret
mov
test
mov
xchg
inc
enter
or
xchg
or
mov
test
push
aaa
adc
sub
dec
ret
mov
movsl
lret
mov
xlat
pop
dec
push
mov
push
lahf
lods
out
fs
mov
push
mov
ljmp
and
in
addr16
push
inc
fucomi
sbb
sbb
sub
cmp
nop
fwait
lret
dec
daa
push
clc
and
les
sub
adc
jp
aas
lock
mov
aas
shlb
mov
aaa
cmp
leave
adc
ds
nop
mov
into
repz
ja
mov
addb
jge
int
xor
leave
dec
dec
loop
fimuls
pop
and
pop
sbb
pop
pushf
or
mov
mov
fwait
stos
or
inc
inc
insl
les
jno
jl
test
mov
jo
inc
popa
mov
test
dec
shll
jnp
mov
xchg
mov
sub
cwtl
sbb
xchg
test
xchg
cmpsl
jp
pxor
push
inc
ljmp
pcmpgtd
push
mov
jbe
and
out
push
call
insb
int
and
incb
pop
cmpl
fwait
inc
pop
leave
mov
cmp
add
push
loope
pop
and
dec
ret
into
aas
daa
pop
ss
cmp
subb
mov
mov
in
jnp
sbb
into
shll
iret
jae
dec
cs
add
mov
stos
mov
imul
mov
inc
lods
outsb
rcrl
outsb
js
bound
mov
ss
or
push
push
push
std
push
sahf
xchg
adcl
pop
xchg
jl
cmp
pop
jae
imul
loop
push
clc
adc
insl
and
add
fidivs
rol
cmpsl
js
push
pop
sub
push
ficoms
mov
cmp
call
sbb
int
roll
cli
adc
ffreep
xor
cmp
xchg
inc
andl
jnp
jle
cltd
ds
sar
cmpsb
mov
push
push
ret
lea
sub
sbb
lods
cwtl
adc
lea
pop
mov
mov
repnz
jb
cltd
das
sub
jecxz
fistpl
xchg
popa
fstl
cwtl
or
inc
add
mov
ja
and
adc
stc
jg
sub
adc
gs
jbe
and
pop
dec
push
add
mov
stc
sbb
in
mov
xor
cs
pop
and
int3
data16
shrl
insl
adc
ss
mov
loopne
jl
pop
or
js
sahf
jbe
sub
and
rcl
roll
mul
out
into
cwtl
mov
cmpsb
inc
neg
jne
and
sub
xchg
xlat
dec
gs
add
notb
leave
test
test
fimuls
movsb
out
cmpsl
cmpb
pop
and
mov
xchg
lds
aad
cmpsl
xor
xor
ja
fnstenv
mov
jmp
das
mov
push
add
or
lds
fcmove
adc
ffree
outsb
nop
or
outsl
sub
lds
add
cmp
ss
adc
push
jge
ds
test
pushf
pushf
popf
int
fld
mov
jl
push
dec
cmp
add
mov
sarl
jae
out
and
pop
jbe
push
mov
inc
sbb
mov
jcxz
cltd
xchg
sahf
push
pop
jecxz
sbbl
lods
dec
popl
insl
pop
movhps
lds
jnp
call
lods
dec
push
cmp
cmp
mov
cmp
jnp
cmp
push
dec
sub
dec
cs
out
sub
lock
lret
sub
iret
push
or
int
xor
lods
xor
mov
push
add
and
bound
mov
loopne
pop
lock
add
xor
fstl
in
out
test
es
add
lds
push
lods
pop
ret
iret
add
mov
pop
sbb
mov
jl
fldl
rol
dec
lcall
jl
lds
push
es
xchg
push
push
fisubrs
std
pop
fcoms
in
adc
adc
mov
xor
shlb
fs
and
jns
inc
je
xor
popa
lret
mov
xlat
sub
in
adc
mov
dec
dec
dec
push
fdivrl
leave
int
jg
or
push
daa
stos
or
into
addr16
xor
into
mov
mov
lret
popf
inc
pop
sahf
adc
cs
add
lret
jno
xchg
mov
cld
pop
pop
or
dec
rclb
aaa
jmp
call
notl
vpaddsb
andl
xor
fstpt
or
cltd
es
movb
inc
adc
adc
iret
mov
test
mov
js
cmpsl
xchg
or
ljmp
flds
test
jae
daa
xor
and
push
adc
test
sub
sub
adc
gs
jbe
jmp
data16
dec
in
fdivs
scas
mov
ljmp
in
mov
inc
loope
data16
sub
scas
dec
inc
mov
jp
xchg
popa
inc
cmp
in
hlt
sub
cmpsb
es
dec
or
shrl
jg
mov
add
xchg
negb
jae
mov
adc
cwtl
mov
inc
xchg
mov
lods
sbb
cmp
dec
data16
inc
inc
shl
cmp
mov
call
mov
fnstsw
push
inc
inc
xlat
out
cmp
xchg
xor
rolb
push
addr16
lock
push
gs
and
pop
test
push
xchg
cs
xor
cmpsl
mov
je
pop
xchg
sahf
fsubs
pop
inc
or
jmp
popf
add
mov
mov
add
push
int
icebp
imul
les
dec
mov
sbb
call
leave
arpl
and
subb
sbb
xor
adc
je
mov
mov
jecxz
pop
sub
xchg
aad
fdivr
sahf
mov
mov
mov
mov
shlb
xchg
fsts
and
jg
leave
mov
pop
ret
push
loop
push
xor
jg
out
dec
dec
fs
int3
out
pop
loope
and
js
and
test
in
pop
sahf
ret
bswap
and
xor
loop
xchg
insl
sub
xchg
mov
inc
pop
pop
push
addr16
int3
sub
push
inc
and
mov
inc
and
mov
loopne
sub
stos
sarb
lods
pop
sbb
adc
or
add
mov
or
in
test
ja
dec
sahf
popf
cmp
pop
mov
in
aaa
js
inc
pop
outsl
jae
jae
mov
sbb
sub
sahf
adcl
cmpl
inc
orb
push
shll
mov
jnp
sub
bound
xchg
xor
sub
xchg
add
sub
xchg
clc
inc
sbb
inc
push
pop
xor
push
in
mov
pop
inc
dec
mov
out
lea
mov
es
std
xchg
mov
dec
mov
xor
out
imul
shlb
das
mov
sahf
ja
cwtl
in
add
inc
inc
cmp
les
mov
or
add
pop
aad
lds
sbb
pop
fstpl
adc
cmp
cmp
movsl
cltd
rcl
add
xchg
dec
fisttps
or
mov
xor
jmp
out
out
imul
inc
push
jo
fidivs
mov
leave
leave
adcb
add
jb
sbb
insb
or
mov
fdivs
jle
daa
les
mov
xchg
or
movsl
icebp
and
xchg
bound
push
aaa
add
movsl
test
call
sbb
jne
lahf
add
jno
push
sbbb
mov
popf
xchg
sub
lret
xchg
mov
in
mov
popa
dec
adc
ret
test
loope
push
add
mov
or
pop
sub
data16
pop
push
ror
mov
inc
and
jmp
leave
sbb
add
insl
andl
mov
or
jge
jnp
mov
push
lods
aam
pop
mov
loop
inc
pop
loope
inc
es
pop
test
lods
pop
and
imul
ds
xor
mov
mov
dec
movsl
sub
pop
push
adc
scas
mov
es
mov
push
dec
mov
mov
insb
xor
inc
xor
pop
sbb
inc
xor
sti
lods
pop
sbb
sbb
test
sub
loop
ljmp
daa
and
jb
mov
mov
or
adc
out
adc
loope
mov
fadds
push
pop
into
fiadds
sti
mov
jecxz
push
inc
cmp
daa
inc
int3
push
int3
fsub
dec
mov
push
mov
out
ss
mov
fld
out
jbe
mov
test
dec
mov
cmp
add
lds
and
inc
jmp
mov
pop
imul
sbb
stos
aas
push
cmp
popa
lea
or
jne
shrb
add
sub
adc
dec
and
int3
loopne
xlat
xchg
ja
mov
fs
notl
mov
adc
shll
outsb
xchg
movsl
xchg
icebp
jmp
aad
pop
sub
pop
ljmp
pop
push
sarb
add
outsl
rorl
dec
cli
pop
mov
adc
mov
out
and
sub
scas
mov
arpl
fbld
cmp
repnz
popf
xchg
icebp
mov
std
je
insl
mov
hlt
sti
arpl
outsl
js
in
xor
dec
jbe
xchg
adc
flds
adc
and
test
int3
scas
insb
dec
dec
incl
les
ficoml
and
sti
outsl
xchg
cmpb
leave
ljmp
fs
jmp
mov
loope
cmpsb
cmp
imul
pusha
sbb
dec
stc
mov
jbe
loop
jmp
pop
xchg
test
imul
push
fcoms
js
push
or
xchg
leavew
je
rcrb
mov
jmp
rorl
fimuls
or
loopne
aas
dec
cmp
mov
xor
adc
lret
loope
sub
xchg
lret
pop
pop
lea
inc
shll
sub
cmp
aas
jo
and
rcl
imul
std
fisubl
sub
dec
jne
pop
lret
inc
stc
jg
xor
inc
pop
mov
xor
cmp
sub
mov
mov
arpl
pop
rcll
lock
jne
dec
jb
fistps
mov
es
sbb
out
jp
jns
mov
mov
dec
fadd
pop
clc
xchg
jl
sarb
cmpsb
mov
sbb
push
or
xchg
adc
lods
inc
gs
testl
cld
imul
cwtl
cmpsb
mov
roll
repz
sub
fidivs
xchg
pop
jb
in
cmp
xchg
arpl
iret
jne
fwait
inc
xchg
cli
loop
pushf
scas
sbb
xchg
mov
xor
in
loop
push
cmp
ljmp
mov
push
push
sti
and
pop
jmp
sub
andb
sbb
movsb
aaa
in
inc
fdivrs
xchg
sub
add
je
daa
sti
push
jle
jo
add
xchg
sbb
stos
test
pop
pushf
mov
xor
ret
or
mov
sbb
pusha
adc
inc
lcall
adc
out
adc
cwtl
xchg
insl
cli
sti
jg
jo
pop
pop
repz
loope
test
adc
test
mov
les
loop
cmp
add
xlat
mov
dec
xchg
xor
popf
mov
xchg
aad
sub
inc
xchg
xchg
test
and
add
and
mov
divb
adc
in
xor
adc
lea
inc
insl
xor
fisttpl
add
sbb
sahf
jns
or
jnp
insl
and
jns
adc
push
andl
in
pop
adc
enter
push
cmp
lahf
rclb
mov
mov
ss
sub
iret
into
adc
cmp
mov
pop
pop
ljmp
shlb
test
add
nop
pushf
and
stos
dec
je
ss
sub
fsubrl
mov
aaa
xor
aas
cwtl
sahf
loope
inc
mov
xor
push
sub
mov
dec
or
popa
sub
push
arpl
clc
scas
shrb
stos
or
imul
les
repnz
jae
in
repz
outsb
mulb
lahf
mov
shl
and
dec
enter
xor
imull
sbb
icebp
hlt
inc
pop
push
cltd
stos
mov
adc
test
mov
mov
rorl
mov
repz
jle
scas
xchg
jbe
adc
je
push
jle
mov
dec
std
jns
push
rol
ja
inc
xchg
or
clc
dec
or
lods
lods
fdivl
shl
cmp
add
popf
fnstsw
mov
jmp
jmp
insb
cmp
sbb
jns
sub
aam
pop
and
nop
or
or
jle
iret
jns
pop
rcll
daa
inc
loop
sar
fstps
gs
jns
adc
arpl
push
test
das
cmp
inc
or
outsb
lcall
subl
cmpsl
pop
insb
adc
imul
pop
xchg
xor
nop
js
and
jno
cmp
lret
xchg
scas
andb
ljmp
clc
cmp
lods
xor
or
adc
sahf
cmp
insl
inc
dec
add
addr16
xchg
xchg
add
cld
push
dec
adc
push
pop
inc
int3
movsl
mov
cmp
jne
cli
dec
xchg
or
pop
cld
loop
mov
sbb
out
cmp
mov
add
jp
pop
mov
sbb
int3
or
ret
push
sbb
adc
iret
xchg
in
aas
jo
xlat
loop
or
test
mov
lock
push
inc
inc
repz
add
cmpsb
mov
out
inc
iret
xchg
test
insb
sahf
addr16
jo
cs
push
xchg
popf
jo
loopne
adc
sub
mov
cmp
mov
stos
insb
xchg
sub
jmp
adc
into
inc
flds
adc
fsubp
push
inc
int
je
or
mov
hlt
enter
test
jle
xchg
add
fwait
js
mov
adc
test
sti
cmc
jmp
in
dec
dec
jle
in
leave
or
ficoml
add
aam
enter
mov
arpl
in
iret
insb
xchg
jmp
fidivs
popf
xor
ds
test
inc
cmpsb
imul
dec
pop
ds
lcall
rclb
inc
lret
imul
enter
fadds
mov
mov
daa
jl
jle
sbb
cmp
fwait
imul
pushf
stc
or
aad
sub
mov
ret
pusha
cmp
push
and
adc
orl
pop
movb
out
mov
jb
xor
mov
cmc
dec
xchg
xchg
in
mov
shlb
push
or
pop
inc
leave
dec
dec
in
lods
test
loopne
pop
pusha
cwtl
mov
rorl
jg
pop
imul
jge
push
push
jns,pn
jl
or
out
je
mov
lods
or
add
mov
arpl
aaa
stos
lcall
testb
lea
stos
sub
adc
sti
cld
sbb
leave
inc
cld
xchg
fcmovnb
xchg
add
add
or
mov
sbb
inc
mov
fisubs
mov
add
jmp
popa
push
adcb
xchg
mov
ja
repz
and
dec
mov
pop
push
cmp
ja
xchg
mov
adc
sub
ret
dec
xor
mov
mov
js
jmp
leave
sbb
xor
mov
mov
pop
mov
jno
cmp
lds
pop
push
popf
inc
or
rorl
adc
jb
or
andb
mov
push
stc
jae
cli
stc
mov
mov
push
push
repz
dec
xchg
in
inc
adc
push
ja
pusha
push
ss
cmpsl
ret
roll
sub
jae
xchg
hlt
cmc
jo
cmp
cmp
lea
xchg
adc
xchg
mov
insl
les
jp
out
cmpsb
in
mov
leave
lahf
popa
jae
sub
scas
sbb
pop
jnp
ja
sbbb
push
adcl
testb
imul
push
and
pop
inc
les
lret
and
add
mov
inc
stc
gs
adc
shl
sub
or
fxch
mov
adc
adc
mov
ret
inc
fmul
sbb
frstor
stos
cmp
nop
adc
test
inc
push
idiv
mov
pop
loopne
test
rol
fucomip
pop
sbb
jle
lock
inc
jg
push
mov
add
pop
jp
or
int
dec
and
icebp
les
dec
mov
int
subl
push
iret
pop
jns
aas
pushf
jg
leave
pop
add
jnp
repz
adc
stc
mov
dec
rclb
add
in
sbb
and
sahf
mov
loopne
mov
sub
sbb
ss
aam
test
jbe
jno
jns
fmull
stos
imul
xlat
sbbb
and
jae
lret
and
inc
lahf
movb
je
stos
orb
sub
in
in
adcl
pop
sub
fstpt
dec
jns
sbb
push
dec
push
push
insl
je
arpl
pushf
inc
lds
jnp
pop
mov
in
pop
jae
test
iret
ljmp
mov
ja
jno
xor
es
jbe
mov
xchg
popl
sub
fcmovu
push
mov
int
pop
orl
stos
arpl
push
in
rcr
mov
decb
pop
mov
repz
lahf
fwait
or
cmp
xchg
shlb
sub
lea
mov
es
js
mov
jecxz
pusha
aad
adc
adc
test
hlt
sbb
sbb
pop
push
pop
stos
adc
outsb
out
and
daa
test
inc
nop
fistps
jg
and
dec
es
rcl
xor
int3
sub
push
mov
iret
mov
add
xchg
out
adc
repnz
mov
sahf
jnp
cli
mov
scas
push
adc
lret
lds
test
movsb
push
push
ds
jp
into
cmp
mov
arpl
fsubrl
jmp
loopne
mov
xor
test
push
inc
inc
mov
mov
pusha
mov
fsubl
out
inc
or
or
sti
pusha
pop
popa
mov
loopne
xor
xor
enter
lock
fdivrs
sub
and
and
lods
push
lret
repnz
pop
lea
cmpsl
aaa
push
lret
fmuls
bound
and
xchg
das
pop
insl
ficoms
insb
pop
mov
sbb
shll
ja
in
in
mov
pmulhw
add
lret
fs
push
xchg
and
inc
lods
roll
lods
mov
outsl
push
xor
and
add
pushf
pushf
fcoms
iret
gs
cmp
add
pop
xchg
lret
ljmp
pop
int3
adc
cmp
add
cmp
nop
adcb
mov
pushf
jno
push
pushf
mov
addl
sub
lds
rclb
sbb
cmp
sub
scas
add
incl
and
paddb
mov
incb
sbb
push
sti
push
and
xor
inc
lret
cmp
ljmp
les
dec
gs
or
loop
sub
cld
leave
and
jb
out
cmpsb
xor
mov
jge
dec
mov
out
fwait
hlt
outsb
aam
and
into
jne
mov
dec
push
pushf
stos
bound
add
lret
push
into
jns
jo
mov
andb
sbb
xor
enter
add
dec
or
mov
fs
fs
cmp
mov
xchg
add
sbb
dec
fistl
lret
out
fisttpl
cs
orl
ja
adc
xor
fcomp
push
mov
ja
test
push
cmp
pop
loop
pushf
push
js
nop
xor
nop
sbb
jle
rorb
jge
shl
add
shll
pop
ljmp
insl
jo
lcall
lea
out
mov
jg
ljmp
cld
sahf
mov
lods
iret
aas
sub
nop
mov
xchg
xor
mov
inc
adc
int3
stos
loop
pop
dec
fs
xchg
mov
outsl
stos
lret
fcompl
in
push
cmp
lcall
push
adc
mov
roll
js
lock
xor
or
mov
and
mov
inc
dec
pop
ret
sbb
mov
loope
xchg
xchg
out
or
xorb
stos
leave
loop
mov
stos
dec
jo
aas
daa
in
push
jg
lret
mov
inc
add
xchg
int
xchg
in
or
jns
xor
ds
or
out
jae
push
xchg
inc
imul
adc
les
into
mov
cwtl
lods
or
pushf
roll
dec
popa
movb
xacquire
loope
testl
sbb
and
shrl
cli
push
xchg
push
gs
sub
stos
and
xchg
jns
loopne
cli
sti
jbe
dec
mov
mov
imul
pusha
dec
sti
mov
test
enter
rorb
or
lcall
xor
ljmp
sub
shlb
rcrl
aad
fwait
leave
jecxz
pop
cmp
or
sbb
imul
dec
into
scas
das
std
sub
push
fnstcw
dec
mov
inc
in
ret
movsb
aam
dec
loope
cs
mov
lahf
add
nop
xchg
sbb
repz
repz
mov
ret
pop
mov
and
pusha
fisubrs
mov
pop
int
dec
pusha
xor
les
out
mov
rclb
in
repnz
inc
lret
jnp
mov
and
pop
loop
xchg
imul
mov
xadd
lods
xor
or
rol
mov
push
inc
lods
movsb
das
std
lret
ficoms
loopne
jo
cltd
fildl
aam
dec
int
mov
stc
js
push
fisubrs
sbb
ja
outsl
cmp
pop
inc
les
xchg
jg
enter
mov
xor
sbb
int
inc
xchg
int3
lea
xor
arpl
inc
sbb
nop
xorl
push
out
dec
mov
jne
aad
iret
test
shl
cld
fsts
aaa
mov
jmp
fidivl
scas
cmc
dec
adc
jg
lock
fdivl
lahf
xor
xlat
repnz
jecxz
loop
sbb
mov
cmp
mov
mov
xchg
jno
jno
mov
insb
orl
inc
je
mov
imul
daa
ss
or
fwait
ret
inc
mov
rcrb
mov
push
js
mov
nop
fsubrs
dec
mov
std
fisubrs
shlb
adc
jns
imul
xchg
and
adc
xor
repnz
mov
daa
xor
xchg
xchg
mov
enter
push
js
addl
pusha
pop
stos
subb
dec
fcompl
in
jns
adc
das
cwtl
sbb
gs
imulb
rcrl
inc
dec
mov
loopne
cmp
jno
gs
test
addr16
in
xchg
lock
jecxz
pop
icebp
insl
push
push
push
fisubrs
cs
lds
aaa
leave
int
test
pop
fdivr
sbb
dec
mov
push
jnp
mov
dec
sbb
outsb
xchg
inc
fldenv
adc
ret
xchg
ret
movsl
xchg
pop
aad
scas
int
mov
dec
gs
int
rorl
cmp
mov
xchg
inc
inc
lds
xor
cmpsl
daa
jbe
add
pop
addl
out
stc
inc
pop
sub
dec
fs
sbb
lods
iret
push
stos
sbb
imul
mov
pop
imul
outsl
mov
ljmp
movb
jmp
dec
movsb
mov
or
es
sahf
int
or
mov
ds
sbb
pop
pop
and
jbe
popf
dec
pop
cmp
pusha
adc
lods
test
push
aam
and
out
add
popf
sub
fwait
pusha
xor
push
cmp
push
sub
aas
mov
and
mov
ficompl
mov
je
dec
add
pop
inc
and
lods
cmp
mov
cltd
gs
cltd
mov
lea
push
lds
mov
pop
fldcw
pop
fucomi
mov
pop
inc
pushf
in
inc
pop
inc
imul
or
mov
sub
in
mov
mov
into
jo
test
loope
pop
jb
leave
addr16
mov
xchg
push
inc
sti
sbb
adc
enter
xchg
pop
sub
dec
jne
xor
in
mov
loope
xchg
out
sub
ljmp
or
jbe
ja
jmp
mov
inc
push
call
xor
jle
into
inc
out
ljmp
mov
push
inc
mov
clc
shrl
js
mov
lahf
out
fidivs
sbb
pop
adc
xor
outsb
outsl
maxps
js
lock
or
or
add
mov
stos
pop
xchg
ret
daa
sub
jmp
adc
in
faddp
ja
loope
dec
test
mull
dec
sbb
enter
mov
sbb
ljmp
inc
les
push
jmp
out
jg
pop
iret
arpl
or
xor
test
stc
test
mov
sahf
mov
push
inc
cmp
in
inc
fwait
inc
or
xor
popf
jecxz
je
pop
sarl
test
gs
pusha
das
dec
dec
sub
mov
hlt
pushf
xor
in
xor
out
gs
lea
xor
shrb
and
dec
push
leave
jmp
sub
out
jbe
notl
jmp
fnstsw
decl
xchg
mov
in
and
int
pop
adcl
push
cmp
in
push
js
push
je
fs
test
xchg
pop
adc
gs
inc
mov
push
push
test
xchg
inc
adc
rcr
push
cmp
pop
in
or
sub
dec
dec
cmp
xchg
xchg
pop
and
lea
cmc
and
scas
aad
leave
push
repz
xchg
in
jne
ss
cmp
sbb
std
mulb
ffreep
or
into
inc
xor
mov
or
adc
mov
dec
adc
push
mov
arpl
mov
out
jno
leave
jmp
adc
fcomip
fstpl
cmp
cmp
shr
lock
xor
enter
add
adc
enter
and
mov
fbstp
mov
xchg
dec
ss
mov
mul
add
push
xchg
dec
cmc
out
test
icebp
jp
test
in
movb
sub
in
stc
lea
hlt
xor
adc
adc
and
jne
mov
fldt
insl
adc
add
mov
mov
lret
stos
inc
lods
xor
mov
and
lret
cmc
sti
lcall
shrb
test
sbb
cmpsl
push
xor
push
cld
add
or
mov
loop
enter
pop
icebp
and
mov
add
das
inc
daa
testl
cmp
sub
push
cmp
adc
push
mov
insb
pop
sbb
dec
dec
andl
outsl
aaa
push
jbe
xor
jle
mov
jmp
push
outsb
mov
in
std
pop
xchg
cmpsl
cltd
xchg
fadds
and
loop
jbe
push
push
add
mov
sub
lahf
sbb
mov
push
jo
pop
or
or
xor
pop
pop
les
sbb
xchg
inc
mov
xor
xor
pushl
adc
data16
pushf
and
aam
cmp
test
mov
and
ret
dec
sub
aam
cmp
test
mov
mov
jg
jg
xchg
push
dec
inc
gs
es
fcomps
push
call
bound
gs
cwtl
sbb
adc
jb
out
leave
inc
mull
clc
sbb
mov
sbb
mov
frstor
clc
sar
jl
or
popf
lahf
insl
divl
fldt
fdivs
cmp
arpl
pop
pmuludq
loopne
mov
mov
dec
fsubl
bound
mov
pop
pop
jmp
sub
sub
loopne
jns
outsb
outsb
push
movsl
fldl
movsl
pop
bound
push
inc
movsl
mov
repnz
jnp
mov
pop
jecxz
jbe
out
xchg
insb
aad
adcb
mov
dec
and
pushf
ljmp
loope
sbb
popa
adc
mov
repnz
mov
mov
into
add
mov
cmc
scas
scas
xchg
cwtl
stos
dec
arpl
ficoml
xor
clc
ret
push
std
scas
stos
mov
gs
into
jecxz
jae
sbb
jp
dec
jg
js
pop
ret
fs
std
cmp
cmp
data16
and
and
jo
pusha
sbb
pop
add
xor
ja
flds
int3
jl
pop
fistpll
jo
cmp
scas
push
pop
push
movq
cmc
jg
pop
out
pushf
dec
or
or
mov
movsl
adc
out
dec
jae
leave
and
and
jmp
sub
dec
add
and
call
leave
inc
test
imul
push
mov
push
mov
dec
aaa
imul
scas
cmp
cmp
jge
ds
or
mov
lds
cmpsb
xchg
out
bound
repnz
push
cmp
push
cwtl
push
test
cmp
test
aas
xlat
ss
jno
aad
loop
lret
or
sub
jge
out
movsb
jo
pop
lret
orl
aad
mov
out
stc
pop
pop
adc
mov
imul
push
out
sub
jne
pushf
outsl
and
test
into
mov
imul
jle
les
add
mov
adc
xor
cli
jl,pn
inc
cmp
repnz
mov
xor
ret
pop
add
addr16
jle
push
mov
inc
push
shll
or
lock
mov
pushf
push
mov
mov
dec
roll
aas
cmp
cmp
sbb
bound
movsl
lcall
jnp
cs
push
stos
push
and
mov
shlb
push
jne
pop
and
adc
inc
cmpb
jbe
popf
xorl
adc
test
dec
lea
xchg
shl
add
ja
and
mov
and
sbb
dec
fadd
push
lods
addb
sbb
popf
add
dec
cwtl
jle
int
fs
sbbb
pop
mov
inc
stos
jae
xor
sbb
icebp
push
inc
xchg
or
imul
inc
sbb
ror
mov
push
fs
in
mov
out
pop
popf
loope
push
lock
test
and
mov
addr16
lods
or
mov
mov
xchg
bound
push
sub
mov
popa
sub
in
out
push
je
std
xchg
mov
call
push
jnp
lret
stos
test
add
fidivl
scas
dec
loope
lods
cwtl
lret
loop
sub
inc
test
loop
cmp
clc
add
adc
lret
push
pop
out
out
add
mov
leave
fidivs
outsb
shrl
xlat
dec
fwait
pop
xchg
repz
jmp
sub
in
dec
adc
popf
sub
daa
pop
xchg
pop
push
adc
xchg
push
or
push
push
mov
push
stc
mov
outsb
in
and
test
ret
test
push
xchg
repz
shrl
pop
rorb
stc
cltd
xor
mov
mov
data16
fldenv
push
cltd
mov
gs
xchg
jmp
pop
adc
stos
hlt
xchg
aas
addr16
shll
jmp
test
test
stos
add
test
out
stos
cltd
xlat
xor
cmp
cmpsl
mov
movsb
cmp
lret
add
inc
adc
adc
push
or
jbe
out
aas
mov
ret
cmp
ljmp
daa
push
sbb
int3
js
pop
leave
insb
push
inc
ja
not
xor
mov
call
jae
mov
pop
insl
int3
or
add
and
jp
pop
cmpsl
call
lea
rcrl
vphaddbq
and
jno
shlb
xchg
and
fmull
push
shlb
into
jb
cmpsl
lcall
jmp
xorb
icebp
mov
push
mov
mov
dec
cwtl
mov
xchg
test
and
mov
ljmp
dec
adc
stc
mov
mov
mov
lret
pop
test
pop
insl
and
out
lret
cmp
rorb
jne
gs
out
cwtl
test
test
jl
cmpsl
flds
scas
add
int3
pop
xchg
add
in
push
mov
das
push
mov
sti
fwait
rcrb
nop
out
loopne
push
sarl
and
push
out
cmpsl
out
hlt
lock
fsubl
xchg
xchg
and
ljmp
sarb
cmp
push
fdivr
pop
jl
cmpsl
or
rorb
mov
jg
pop
sub
mov
sti
jbe
jno
add
xchg
stos
jne
dec
loopne
testb
sbb
add
mov
in
mov
dec
sub
push
movsb
popf
pop
fcomp
or
loop
mov
test
adc
insl
jmp
mov
xchg
pop
jecxz
xorl
movsl
xor
adc
mov
sub
filds
lret
mov
push
loop
imul
lock
mov
add
add
jno
mov
xor
dec
pushf
push
xchg
js
push
addr16
inc
int
mov
mov
pop
jae
cmp
add
sub
pop
push
xchg
jmp
xor
data16
jb
psrad
jnp
sahf
cmp
cmp
or
lahf
cmc
outsl
shlb
rcrb
mov
or
sbb
aad
xor
mov
rorl
jmp
int3
iret
fs
inc
jne
cmp
mov
mov
repz
push
sahf
ret
cltd
stc
cmp
in
aam
scas
adc
sub
imull
mov
sub
scas
mov
xor
and
inc
mov
cmp
sub
and
lds
adc
es
inc
xchg
mov
int
cmp
add
xor
insb
add
and
and
push
and
data16
scas
jmp
push
xchg
inc
cmpsb
mov
xchg
inc
pushf
das
pop
iret
or
xchg
add
lcall
pop
xchg
sub
cmp
push
les
cmpsb
adc
fistpl
dec
mov
outsl
std
mov
push
das
fs
jp
add
jne
fsts
lret
adc
mov
repnz
inc
stc
pusha
loop
adc
popf
inc
rcll
mov
cmc
stos
pushf
mov
lods
sub
add
adc
jno
daa
mov
ljmp
mov
sub
repz
cli
ds
lea
jo
cmp
test
das
outsl
jg
pop
lock
cld
xchg
and
mov
nop
sbb
xchg
push
push
mov
hlt
mov
in
sbb
fldt
imul
aas
js
mov
in
sbb
insb
pop
fisttpll
rolb
loop
nop
add
sub
subb
ficoms
or
jbe
or
sub
shlb
sbb
fs
test
fs
lret
cmpsb
movsl
cmpsl
cwtl
das
cs
mov
push
cmp
or
mov
loopne
add
push
fsubl
and
xchg
xchg
push
in
mull
jecxz
fsubrl
int
mov
jp
into
jae
in
jae
sahf
jbe
push
jge
pop
inc
clc
sub
inc
fimuls
pop
xor
mov
fwait
int3
mov
adc
lock
fstps
mov
push
in
cmp
ja
fisttps
cmp
jg
mov
fisttpl
sub
push
push
pop
repz
push
jbe
into
push
lods
push
push
sahf
call
out
dec
push
ffree
dec
popa
pusha
inc
adc
cmp
dec
sbb
pop
fsubrl
push
ja
andl
jne
sbb
pop
pop
popa
call
pop
sbb
jle
mov
faddl
enter
jo
lock
adc
xorl
in
pop
cmpb
mov
in
or
dec
mov
loop
add
sbb
cmp
inc
sbb
loope
test
push
dec
popf
lahf
and
arpl
outsb
or
jbe
cmp
add
aaa
lods
push
insl
lret
out
out
cmpb
xchg
mov
push
inc
cmp
cmp
das
loop
fcmovu
rolb
cmp
pop
cli
test
mov
cltd
sub
inc
and
fnstsw
cmp
xchg
sub
ds
bound
or
lret
mov
xchg
insl
jo
ror
test
int3
mov
sbb
adc
mov
push
cld
orb
fwait
repnz
or
inc
xchg
aaa
pop
cmp
cmpsl
int3
sahf
dec
sbb
shll
inc
scas
adc
cltd
pop
push
cmc
lret
jge
mov
popa
cmp
data16
enter
sahf
inc
push
inc
xchg
push
add
outsb
sub
cmp
roll
iret
push
adc
ja
into
pop
push
lret
int
cmp
mov
jae
and
loop
jno
adc
or
test
daa
cmp
imul
test
fwait
mov
push
test
mov
pop
inc
mov
adc
inc
bound
test
fldt
xchg
subb
shr
popf
sbb
or
pop
cld
int
or
lea
cltd
jbe
cwtl
push
mov
lret
pusha
std
xchg
icebp
sbb
mov
lds
shr
pusha
mov
fsubl
pop
dec
fdivp
mov
add
cmpsl
aam
inc
sub
ficomps
fcomip
cli
mov
inc
mov
push
dec
hlt
add
aas
jno
add
adc
and
js
gs
mov
xor
or
icebp
pushw
fisttpll
dec
insl
sub
inc
cwtl
jnp
fldenv
dec
cld
cmc
movsl
dec
dec
int
mov
jno
lds
push
inc
mov
mov
push
test
popf
in
idivl
aam
push
das
sbbl
pushf
push
dec
mov
mov
lock
xchg
mov
sub
sbb
cmp
shll
sbb
les
mulb
aad
fimull
cmp
shll
push
aad
and
je
ret
mov
dec
pop
fisubrs
mov
pop
out
pop
test
aam
adc
jb
pop
js
xorb
pop
xchg
in
mov
stos
scas
sbb
outsl
dec
pop
cld
jo
pushf
add
push
push
nop
sbb
add
ret
xchg
cs
add
stos
push
pop
sub
icebp
sub
cmp
pop
mov
in
test
add
push
push
ss
add
lea
outsl
xlat
push
adc
leave
inc
cwtl
out
mov
pop
das
pop
scas
mov
xor
cmp
sub
dec
xchg
out
lcall
nop
stos
adc
jge
pop
jge
inc
or
sbb
push
inc
push
sbb
jecxz
dec
pop
rcrb
jecxz
add
dec
loop
push
xor
scas
or
ficompl
fsts
test
push
jmp
inc
push
mov
andb
mov
inc
adc
sub
fisttpll
cmp
jns
mov
sti
mov
mov
movsb
fisubl
add
mov
mov
cmpl
adc
sub
into
dec
fwait
mov
xor
adc
cmp
test
push
pop
jp
addr16
sbb
lcall
enter
arpl
xor
mov
data16
xchg
in
in
or
lods
pop
jl
cmp
xlat
sub
or
subl
xchg
call
mov
sahf
icebp
jbe
dec
and
dec
sub
or
movsb
inc
inc
cmp
lods
rcrb
je
cmpsb
jo
gs
sbb
sub
rcrl
aas
cmp
cltd
aad
and
cmp
mov
call
cmpsl
sbb
shl
cmpsl
shll
jne
push
ficompl
inc
mov
add
arpl
fwait
jns
insl
ja
popa
pop
movsl
sbb
insb
xor
icebp
insb
nop
repnz
pop
loop
loopne
inc
test
xchg
in
shr
jl
add
mov
das
dec
int
addr16
outsb
sub
mov
mov
out
and
clc
jbe
xchg
sub
inc
mov
mov
mov
cmp
jg
into
daa
hlt
popa
inc
cmp
cmp
xor
insb
push
jmp
pop
xchg
scas
push
into
fwait
inc
dec
adc
fwait
add
loop
xchg
cmp
subl
push
in
inc
and
scas
cmp
cwtl
pushf
and
dec
fistpll
in
adc
cld
mov
mov
pushf
and
mov
jo
mov
or
lret
scas
or
or
jl
mov
cld
pop
into
movsl
fsts
pop
xchg
scas
dec
add
sbb
lds
sbb
sub
loopne
shrl
dec
push
mov
cmp
jne
jmp
fmul
movsl
int
mov
jno
add
daa
fidivl
js
scas
xchg
mov
xchg
pop
sbb
pop
xor
lods
in
push
out
sbb
lcall
in
loope
lock
push
pop
scas
hlt
xor
test
subb
sti
clc
fwait
dec
lret
sbb
popf
stos
and
sub
inc
push
push
lcall
push
pop
mov
pop
pop
es
in
inc
outsb
cli
inc
stos
jge
fistl
jbe
pusha
ret
bound
lods
mov
add
movl
dec
push
mov
subb
js
idiv
call
xor
cmp
cmpl
test
mov
enter
cwtl
sbb
mov
lock
retw
in
pushaw
test
pop
icebp
add
add
fisubrl
ret
pop
jne
les
out
mov
pop
fistpl
adc
xor
jbe
nop
cmp
fisttpl
add
adc
jp
out
sbb
push
arpl
xchg
mov
dec
lock
jne
mov
fwait
mov
and
adc
mov
inc
pop
push
fildll
aam
clc
pop
outsb
add
outsl
mov
pop
push
xchg
mov
cwtl
sub
loopne
imul
ret
lock
inc
aas
incl
daa
sub
cli
sti
mov
pushf
adc
mov
pop
js
mov
pop
lea
xor
inc
outsb
inc
lcallw
or
es
dec
cmp
mov
cmpsl
insl
push
std
mov
mov
roll
dec
sti
jecxz
insl
mov
or
sbb
fcom
jb
shlb
and
cld
nop
pop
repz
or
dec
dec
out
sbb
data16
sub
cmpb
mov
ret
imul
sub
push
xchg
mov
int3
or
bound
mov
incb
fimull
push
imul
inc
pushf
push
pop
mov
inc
std
inc
sbb
push
fcomps
hlt
dec
push
bound
sbb
mov
gs
xor
in
inc
fstl
popf
cld
jmp
ljmp
lock
sbb
push
sub
push
and
mov
adc
aam
je
arpl
sub
push
and
pushf
ljmp
dec
pop
in
push
mov
adc
mov
ss
and
mov
xchg
pop
and
push
push
jnp
loop
sahf
test
pop
xlat
jo
lahf
adc
nop
jg
cmp
popa
cltd
fwait
movsl
movsl
filds
data16
inc
inc
push
push
mov
add
notl
lahf
arpl
out
adc
pop
push
movsl
test
jecxz
and
decb
test
xchg
xchg
cmp
int
jg
jl
inc
mov
dec
xor
or
aaa
movsl
xlat
add
loop
pop
push
mov
cmpsl
fnstcw
push
mov
or
mov
xor
fidivl
xor
xchg
inc
subb
das
or
and
add
js
xchg
ljmp
enter
pop
hlt
into
cmp
stc
clc
sarb
out
mov
lcall
jle
dec
leave
mov
xor
cmp
fstpl
shll
mov
cmc
push
add
cmpsl
push
sbb
cli
and
xchg
pop
insl
add
aam
fisubs
cs
adc
aas
cmp
leave
inc
ss
cli
push
in
cmpl
ja
fisttpll
test
imul
loopne
dec
aaa
add
pop
mov
xchg
ljmp
popa
push
inc
and
add
push
mov
sbb
push
les
out
outsl
push
cmp
scas
xor
xor
sbb
inc
xchg
cwtl
stos
in
cmp
out
pop
cmp
xchg
data16
sub
inc
lods
test
out
pop
in
mov
imul
or
or
jp
push
jg
repz
cs
push
arpl
adc
jae
mov
add
out
adc
pop
lods
fadd
enter
popa
fsts
push
or
je
adc
test
dec
push
xchg
mov
pop
inc
sub
inc
jge
int
pop
out
jl
pop
aas
frstor
xlat
cmp
test
or
ficoml
mov
into
stos
mov
in
sub
adc
mov
shrd
clc
psubw
test
jge
movsl
inc
nop
inc
push
sbb
clc
add
jbe
loopne
pop
into
mov
mov
xor
mov
es
jp
movsl
mov
fisttpll
or
push
mov
inc
gs
and
ljmp
dec
lods
mov
xor
das
jo
ret
mov
rcll
push
sarl
and
arpl
inc
out
lret
addr16
push
into
jge
mov
push
into
jnp
xchg
nop
das
sbb
sub
stos
stos
repz
fs
cmpl
dec
and
imul
js
dec
or
add
add
adc
insb
stos
daa
je
aam
or
and
imul
pop
daa
in
mov
add
insb
push
sahf
scas
cmpsb
or
pop
add
xchg
cmpb
inc
dec
or
cmpsl
jbe
add
stos
daa
push
sub
dec
mov
dec
mov
mov
push
jle
xor
or
shll
xchg
add
and
lods
mov
in
in
insb
imull
or
into
call
jmp
rcr
ljmp
jmp
repz
sub
sbb
mov
mov
loopne
mov
das
in
loope
fiadds
dec
clc
or
sbb
xlat
and
xlat
mov
xchg
xor
mov
mov
pop
fsubl
mov
mov
xor
fs
fwait
inc
cmpsl
imul
jae
gs
jnp
xor
dec
cmp
insl
mov
push
jne
adc
loopne
push
lock
adc
cmp
int
pop
pop
dec
inc
repz
sahf
int
sub
or
rcll
out
icebp
dec
inc
ja
rol
leave
fsubp
rcrl
jp
dec
xor
xchg
inc
fbld
movsl
das
mov
push
gs
fimuls
jp
call
aas
es
pushw
dec
dec
aad
aas
rorb
call
hlt
push
xor
push
add
xchg
or
sub
mov
rcl
or
mov
sbb
dec
mov
lods
lret
fisubrs
insl
ret
adc
or
push
test
sti
cmp
repnz
imul
rclb
cmp
dec
loopne
fiaddl
add
fs
pop
das
ret
mov
cmpsb
dec
test
jle
jg
push
xlat
loopne
or
pop
dec
cs
sbb
jno
mov
lds
cltd
fstl
jns
jnp
and
mov
inc
sahf
daa
adc
sub
push
fcoms
and
fisttpl
ds
push
push
subb
mov
push
aam
pop
vminsd
jecxz
sti
xchg
sbb
dec
decb
sub
lods
pop
test
out
pop
lahf
push
xor
sbb
push
or
dec
lods
test
mov
mov
cld
mov
jnp
stos
cld
test
sbb
push
push
arpl
repnz
aad
and
sub
inc
loop
pop
sbb
imul
movsb
lretw
cmp
push
mov
fistpl
inc
push
and
adc
push
sub
pushf
mov
movsb
out
adc
fs
pop
push
xchg
and
aam
shlb
push
push
dec
add
roll
jns
mov
add
mov
je
mov
lds
bnd
hlt
mov
cmp
sbb
popf
lock
cmp
lea
or
mov
bound
mov
inc
decb
add
and
cs
push
and
pop
sbb
mov
add
push
fcomps
pop
int3
mov
pop
jl
sub
je
adc
cwtl
xor
inc
mov
lret
data16
xchg
movb
push
out
cmp
ljmp
divl
jmp
or
lret
jnp
lcall
dec
mov
mov
out
scas
jge
std
jg
mov
pop
sub
push
clc
in
ret
push
dec
mov
jb
shrb
nop
ret
xor
shlb
jno
in
xor
jp
or
movsl
xor
subb
lea
push
clc
je
sbbl
fmuls
lods
mov
pop
mov
add
hlt
pop
hlt
pop
leave
inc
add
out
dec
cld
push
cmp
pop
cwtl
cmpsb
popf
addr16
jecxz
dec
loopne
outsb
stos
sbb
lret
add
add
icebp
jmp
leave
fwait
sub
mov
push
add
lret
fstps
sbb
xchg
in
add
and
jno
push
imul
sbb
fldt
adcl
aam
mov
mov
std
mov
push
xchg
push
push
pop
or
out
xchg
bound
dec
pop
xchg
cs
jb
mov
cmpsl
push
rolb
incb
or
jmp
orps
imul
xchg
notb
adc
mov
dec
jl
mov
xor
sahf
std
lcall
push
dec
jmp
or
ret
sub
sbb
mov
push
cltd
nop
inc
mov
rcr
arpl
notl
adc
push
in
fimull
lods
clc
out
xchg
cwtl
pop
js
add
out
push
sub
fsubrl
lods
insl
fisubs
dec
push
in
push
sbb
bound
int
jmp
lcall
xor
and
out
push
xlat
int3
push
clc
fsubl
add
cmp
pop
testl
mov
sbb
inc
ljmp
cmpsb
xchg
loop
add
mov
scas
enter
mov
xchg
lods
sbb
xbegin
mov
leave
loop
sbb
add
and
cli
mov
mov
adc
test
or
loop
pop
xchg
in
dec
lods
xchg
dec
mov
fucomip
rcrb
stos
test
imul
ja
loop
push
jno
push
pushf
loop
clc
into
outsb
ss
ret
xor
cmp
and
mov
scas
nop
push
enter
or
clc
jp
push
mov
jns
push
pop
xor
fsubp
adc
push
lods
gs
pusha
iret
sbb
les
loopne
add
and
adc
cmc
xchg
arpl
scas
sbb
push
rcl
mov
hlt
push
leave
jecxz
add
int
jmp
outsb
stos
or
pop
jnp
stc
mov
lods
mov
call
xor
inc
pusha
mov
mov
test
or
ror
push
mov
mov
xor
mov
aad
jb
mov
push
dec
adc
push
popf
leave
dec
pop
and
mov
xor
lea
pushf
jl
lahf
repnz
pop
pop
imull
test
sub
fstpl
das
xchg
rolb
sbbb
xor
jg
fucom
and
push
dec
cmp
and
std
mov
cltd
mov
sahf
outsl
loope
push
ret
dec
xchg
xchg
mov
or
les
jl
or
test
xchg
ljmp
and
adc
mov
in
stc
fadds
push
loop
mov
xchg
ret
addl
inc
scas
ds
mov
mov
push
mov
daa
and
pop
ret
incb
out
movb
mov
enter
adc
jmp
sbb
arpl
xorl
leave
pushl
xor
inc
dec
pop
test
mov
test
fistpl
lods
outsb
and
out
mov
insb
mov
pop
aas
xor
xchg
movsl
imul
js
ds
hlt
push
pop
ret
xchg
mov
aad
pop
jb
cs
popf
jbe
mov
sub
jmp
cmp
out
rep
insb
jnp
pop
or
jmp
sub
imul
push
cwtl
xorl
int
ret
scas
fldcw
mov
push
sbbl
sbb
xor
mov
fldz
pop
popf
and
ficomps
sahf
out
dec
xchg
sub
dec
jne
imul
mov
lahf
pop
rol
stos
in
push
int3
cmp
sbb
mov
incl
mov
rolb
es
sbb
add
and
sbb
mov
jne
xor
xor
hlt
fmull
popf
and
xchg
int
fsub
cmpsb
jge
dec
rcrb
dec
imul
lahf
jno
or
dec
sahf
sti
out
notl
xor
push
insb
xchg
fdiv
xchg
cltd
pop
out
aaa
orl
loope
dec
pop
jmp
out
fdivrl
or
rcl
or
push
mov
add
lret
data16
sub
xchg
dec
icebp
loope
ret
aam
out
push
and
add
push
xlat
arpl
sbb
ja
or
or
xchg
shrl
jns
sbbl
sub
xchg
mov
push
mov
jbe
or
jp
loop
aam
lea
fnstcw
loop
or
and
packssdw
ret
pop
sbb
add
out
fcmovne
mov
xor
inc
jmp
jo
divb
in
fwait
inc
jp
or
in
inc
rcrl
mov
fdivrs
xchg
xchg
ljmp
and
add
subl
insb
push
mov
pop
repz
mov
call
dec
sbb
sub
leave
inc
adc
add
cmovo
add
and
mov
dec
dec
mov
mov
inc
sub
std
lcall
std
inc
cmp
scas
adc
out
call
test
mov
int
sbb
dec
scas
ret
xchg
xchg
adc
jb
mov
mov
mov
push
leave
dec
enter
stos
or
popf
push
push
push
ljmp
jo
mov
pop
std
int
cwtl
or
mov
mov
pop
sub
pop
outsl
sbb
lret
inc
std
pop
fistl
cwtl
pop
and
loopne
push
ja
jns
add
sbb
xor
push
cmpb
dec
or
ret
in
push
sub
mov
and
cmp
add
testl
popa
fucom
add
dec
push
pop
ret
jb
fucomip
test
sub
inc
mov
sahf
dec
mov
movsb
testb
pop
jge
scas
roll
pop
cmpsb
push
insb
fisubs
enter
jecxz
loope
fnstenv
sub
mov
popa
test
dec
lcall
data16
aas
mov
pop
bound
xchg
jae
dec
loop
lods
pop
std
inc
xor
cmp
xor
cmpsb
push
xchg
int3
xlat
shr
insb
or
mov
mov
jb
ljmp
pop
push
xlat
xchg
das
push
enter
movsl
mov
xor
popa
mov
lret
push
mov
jno
lret
mov
pop
lcall
sbb
xchg
xor
and
pop
scas
cmp
shrl
sbb
jp
cmp
aas
divb
sarl
cmp
push
mov
jne
in
xor
aas
push
pusha
jle
cmp
lahf
out
mov
rolb
movsb
ja
xor
test
jns
in
mov
cmp
sub
xchg
into
xchg
mov
add
into
sahf
push
clc
mov
inc
popa
mov
data16
cli
adc
sub
push
sti
inc
add
push
popa
in
test
jne
aaa
jb
clc
add
dec
inc
test
jbe
cmc
fld
mov
loope
shrb
gs
sbb
push
into
inc
mov
sub
xor
bound
jle
and
add
into
push
pop
std
sub
rcrb
cltd
mov
xchg
add
aam
out
repz
and
adc
fcomps
dec
xor
mov
movsl
into
pop
dec
idivl
push
stos
test
adc
cmp
add
dec
lahf
fmuls
push
sub
stos
lret
into
jmp
sub
lock
mov
pop
cmp
mov
insb
enterw
mov
in
push
cmc
sbb
mov
clc
dec
xchg
rclb
inc
jle
js
daa
les
and
cmp
mov
pop
pop
jno
jge
lcall
pop
jge
outsb
test
leave
cmp
stos
popa
es
loopne
jge
cmp
pop
pop
jne
dec
mov
lods
ret
popf
xor
aam
pop
cwtl
lahf
fwait
arpl
hlt
icebp
dec
fnstenv
lret
int
or
incb
xchg
cmc
les
mov
push
adc
xchg
jmp
jne
insb
jp
mov
fcmovb
jp
sahf
xchg
popl
push
imul
aad
adc
pop
push
add
cmp
jp
push
out
test
out
inc
jmp
xchg
in
insl
mov
ret
mov
mov
jbe
out
cmp
or
adcb
icebp
adc
fldt
in
insb
sbb
aas
xor
shll
dec
insl
ret
cmp
into
dec
jb
aas
dec
aas
xchg
or
nop
inc
test
push
and
or
dec
out
dec
dec
add
or
dec
jns
js
pop
sbb
jno
mov
push
ret
mov
loop
loopne
fsubrs
inc
cmpsb
jge
popa
pop
mov
mov
jno
xchg
fsubrl
ret
sub
clc
fadd
testb
test
stos
mov
mov
stc
lcall
push
mov
add
in
out
outsl
mov
bound
imul
xchg
xlat
mov
mov
sub
xchg
enter
arpl
call
cltd
push
leave
sub
cwtl
pop
pop
lods
int3
repnz
jle
mov
aam
loope
loopne
out
add
in
je
sub
mov
pop
imul
fcompl
mov
repz
ljmp
fs
loop
mov
pop
cmp
jmp
jmp
mov
in
mov
jno
clc
and
rorb
push
icebp
fidivrl
push
sbb
dec
ja
push
and
dec
imull
popa
addr16
push
or
cmp
movsl
cld
loopne
leave
mov
xor
mov
dec
int
popl
and
stc
dec
sbb
xchg
jecxz
dec
daa
mov
jg
out
mov
das
out
xor
cmc
cwtl
mov
pusha
push
test
mov
mov
jns
mov
lret
in
lret
mov
push
aam
or
xchg
hlt
andl
add
mov
push
mulb
xchg
mov
jl
dec
lahf
pushf
dec
mov
fnstcw
xchg
mov
push
fstpt
sahf
jno
icebp
xor
bound
pop
or
pop
xor
sub
ficompl
or
inc
mov
fbstp
das
cs
jge
push
popa
xor
das
aas
in
bound
lods
cmp
xchg
mov
pop
sahf
xor
adcl
adc
sub
sub
sbb
mov
mov
and
and
lods
xor
into
dec
fisubs
lds
mov
dec
jo
pusha
loope
icebp
adcb
test
es
aam
and
fwait
int3
mov
dec
or
ret
test
push
insb
popf
xchg
dec
sahf
sbb
inc
adc
int
rcr
sub
insl
mov
push
mov
addl
nop
fnsave
pushf
pop
scas
xor
lds
mov
sti
sbb
inc
inc
pop
rclb
jns
add
xchg
mov
test
push
in
or
xor
xor
cmp
jmp
call
or
xchg
sbb
mov
xor
popf
jle
lahf
out
call
sahf
test
lods
repz
jbe
mov
mov
mov
mov
loope
or
xchg
dec
iret
pushf
sbb
mov
ret
mov
pop
mov
mov
push
add
sub
test
xor
ret
xchg
inc
cs
fdivp
jne
mov
std
sub
mov
std
and
test
and
cmp
mov
psrld
jno
aad
inc
call
jle
jp
jecxz
pusha
pop
sbb
and
dec
adc
push
cmpsb
cltd
stos
das
loop
mov
inc
xor
stos
or
adc
mov
je
fisttps
pusha
add
cld
lds
aaa
mov
jmp
in
push
adc
xor
test
and
and
fldt
xor
inc
dec
shll
js
pop
hlt
or
sbb
lods
dec
psubsb
in
in
pop
mov
ja
jl
push
int3
xor
repz
rcrl
shll
add
or
sti
fmull
mov
mov
push
dec
fdivrs
mov
jb
outsb
aaa
lds
sub
ds
mov
out
mov
xchg
icebp
adc
faddp
jo
mov
sbb
cmp
push
outsb
leave
imul
push
push
add
pop
jl
sbb
sub
mov
insb
pop
and
into
int3
push
hlt
jmp
xorl
pop
aaa
popf
cltd
cmp
outsb
cltd
pop
pop
mov
sar
xchg
xchg
aaa
stos
fcomps
or
sub
in
jo
mov
int3
cmp
mov
lret
lret
in
dec
mov
arpl
fistpl
sub
push
sti
lret
mov
xor
stos
dec
sti
es
fistpll
pop
mov
mov
movsl
sarb
pop
mov
ljmp
mov
xor
adc
rolb
cs
dec
pusha
jmp
call
xchg
mov
dec
cwtl
hlt
test
and
lahf
in
xchg
mov
test
xchg
jno
xchg
dec
lret
pop
xchg
adc
push
xchg
cmp
jl
ror
popf
cmp
jmp
push
mov
into
mov
sub
pusha
and
outsb
adc
or
xorb
xor
jmp
int
lahf
push
ret
int3
push
iret
mov
mov
cmp
addr16
inc
data16
sub
popf
mov
lock
je
sbb
pusha
xor
in
mov
push
int
xor
les
cmp
xor
repz
insb
stos
jmp
add
sti
clc
inc
push
push
xchg
xlat
adc
das
iret
mov
imul
inc
sub
idivb
testb
pop
outsb
test
movswl
popf
cmp
cmc
inc
ss
lock
push
adc
in
aas
mov
cmp
mov
push
lret
dec
pop
cmp
pop
jo
jne
push
xor
and
mov
into
sbbb
leave
push
lock
fisubl
aam
pop
ja
inc
call
jl
lods
ret
xchg
in
push
mov
mov
cmp
movhps
cmp
outsb
and
or
subb
pop
aas
inc
and
inc
fwait
ror
jbe
sbbl
in
pop
loope
adc
xchg
adc
push
ficoms
pop
mov
mov
push
mov
and
xchg
std
mov
outsl
enter
add
dec
scas
fcompl
movsl
cmp
cmp
push
sbb
lea
jge
imul
in
jne
shll
int3
push
je
push
nop
jle
mov
cmpsb
and
xchg
stos
mov
cmp
mov
mov
out
sub
mov
cltd
pop
lret
jmp
test
cmp
mov
movsb
push
repz
adc
jns
aam
mov
mov
mov
mov
add
sbb
daa
fbstp
jne
lahf
jg
inc
ret
in
arpl
xor
mov
mov
sub
jns
pop
addr16
and
dec
enter
pop
out
sub
and
test
cmpsl
push
cwtl
xor
dec
xchg
int3
xor
xchg
xchg
in
icebp
and
or
popa
sub
ljmp
cwtl
mov
xchg
adc
mov
cwtl
lea
sarl
ja
arpl
and
inc
iret
mov
cmp
imul
not
jno
fisttps
xchg
dec
fwait
jp
push
or
mov
divl
dec
sbb
and
add
das
xlat
mov
jl
mov
stos
xchg
xor
cli
scas
sbb
push
push
push
add
jb
jnp
mov
mov
fstps
adc
mov
test
mov
divb
cmpsb
inc
jo
das
inc
inc
adc
mov
cmp
lcall
mov
cwtl
mov
sti
cmp
xor
test
adc
js
rcrb
fs
gs
jmp
push
outsl
mov
ljmp
cmp
dec
loope
or
lods
rcrl
xchg
sub
sbb
lods
and
insb
aas
or
add
cmpsl
jmp
inc
shlb
jnp
pop
jo
or
mov
out
icebp
cmovae
or
sub
or
addl
lods
xor
sbb
sub
xchg
test
sbb
lea
stos
mov
hlt
mov
inc
jmp
and
xor
xchg
js
enter
out
sbb
out
mov
leave
lahf
or
dec
and
adc
jae
mov
add
inc
add
fisubrs
mov
and
push
rcr
dec
arpl
cmc
sub
adc
xor
adcb
pop
mov
pop
ret
js
aas
into
add
imul
sub
sub
clc
mov
lock
pop
mov
mov
mov
std
mov
cld
xlat
xchg
fistps
fstpl
flds
mov
jae
in
inc
fs
xor
adc
or
lcall
sub
out
push
cmpl
cwtl
std
xchg
mov
shrd
arpl
add
cmc
xchg
push
push
push
or
sbb
xchg
pop
lods
or
push
push
stc
lret
clc
ja
jbe
cmpsb
lea
sarl
lahf
cmp
lds
push
lret
mov
enter
mov
sub
cmpsl
rcrl
popa
ret
bound
stos
out
cmp
xchg
sbb
fldcw
daa
les
sahf
js
in
xor
sahf
aas
push
pop
xchg
jbe
cli
jb
lcall
push
xchg
mov
sub
aaa
movsl
xchg
dec
sub
repnz
jl
push
jg
ss
push
push
fmuls
mov
icebp
pop
and
fidivl
mov
movsb
hlt
sub
mov
mov
loope
fistpll
or
cmp
push
and
daa
pop
out
ds
lds
stos
bound
cmp
sti
jae
rorl
dec
add
and
repnz
xor
add
clc
cmp
dec
mov
lahf
push
test
imul
gs
pop
pop
jae
lods
lahf
fwait
addr16
fmuls
and
outsl
call
in
cmp
and
out
stos
push
testl
inc
aam
sahf
outsb
mov
dec
pop
dec
sbb
leave
mov
imul
mov
mov
jmp
scas
and
pop
rcll
mov
insb
cmp
xorb
jl
xchg
mov
fisubs
cld
dec
jae
fmul
rorl
xor
inc
mov
push
add
out
inc
xchg
sub
das
xchg
shufps
push
ret
xor
jo
enter
mov
pop
jp
shrl
js
cli
fcmovnu
adc
call
jp
sbb
icebp
in
jo
cmp
movsb
movsb
push
lods
push
cwtl
xor
movsl
iret
fnstenv
xchg
call
sub
lret
sti
int3
movsb
loop
xor
rcrb
divl
sub
incb
icebp
add
mov
rcrb
push
les
loope
incb
adc
mov
aad
stos
roll
sub
or
into
addr16
xchg
movl
gs
aas
push
int
in
push
or
test
mov
jg
dec
mov
filds
add
or
outsb
das
mov
cld
icebp
pop
sub
xchg
in
cmpsb
mov
jae
cmp
or
and
test
xor
inc
out
dec
cmpsl
in
shlb
adc
dec
aam
adc
cmc
stos
loopne
icebp
mov
nop
enter
push
hlt
xchg
call
frstor
cmc
into
inc
loop
or
jb
jbe
or
sahf
xchg
cmp
push
shr
cli
pop
dec
imul
daa
sub
mov
stos
mov
xchg
cmpsb
or
sbb
bound
cmp
cmp
cmpsb
push
pusha
jg
insb
adc
mov
ds
mov
xchg
mov
push
sub
mov
mov
or
negb
jmp
xchg
mov
imul
xchg
push
add
sbb
push
sbbl
ret
outsl
add
or
mov
and
dec
fisubs
jge
icebp
adc
insb
xor
out
loopne
sahf
mov
cmp
cmp
daa
jg
mov
jle
in
icebp
aam
fmuls
sub
dec
push
adc
repz
jle
add
inc
daa
cs
aas
add
fisttpl
mov
add
repz
cld
sbb
or
pop
popf
add
jmp
mov
adc
das
inc
pop
bnd
sub
jp
in
mov
fistps
pop
jno
push
mov
daa
and
fstpl
ds
cmp
jno
adc
jbe
rcll
add
jmp
mov
mov
jge
fsubrl
shl
jge
and
mov
das
sarb
lock
rcl
and
push
in
mov
push
jmp
cltd
and
xor
push
test
popf
divb
outsl
subb
jne
and
mov
mov
loop
mov
mov
xor
out
testl
rcrl
mov
xlat
pop
jecxz
cmp
imul
outsl
jae
aad
mov
cltd
pop
pop
roll
roll
jl
xor
pushf
lret
jae
inc
cs
xchg
shr
repnz
pop
andps
enter
inc
pop
pop
dec
gs
rcr
mov
dec
out
mov
pop
sbb
imul
sub
fldl
dec
xor
pop
stc
loope
movsb
dec
or
sub
inc
in
and
mov
add
orl
xor
pop
mov
xorb
push
add
sbbl
ja
cltd
and
ljmp
test
xchg
sysenter
stc
jae
add
push
jb
xchg
loope
nop
or
roll
xor
mov
pop
shr
cmc
stos
lret
cs
dec
fsubrl
loope
and
push
push
cld
das
les
pop
pop
add
jno
add
cmpsl
insb
xor
js
push
sub
lcall
push
mov
repz
mov
push
pop
mov
pushf
movsl
mov
popa
pop
or
mov
and
and
mov
ret
add
dec
mov
cmpl
adc
repnz
ret
cli
imul
stc
push
mov
mov
pop
mov
bnd
lea
lods
lahf
xchg
xor
dec
lahf
loope
and
xchg
mov
and
rcr
add
loopne
sbb
clc
mov
mov
movsb
adc
mov
ret
mov
ret
sbb
xor
mov
in
fsts
xchg
xchg
insb
cmpsb
pop
loop
and
loopne
pop
int3
mov
jp
mov
es
push
add
pop
orl
lahf
stos
adc
mov
mov
fwait
repz
mov
mov
fistpl
test
sbb
add
std
dec
or
mull
lods
xchg
sbb
insl
mov
mov
add
mov
cwtl
movsb
pop
in
cmp
lahf
dec
test
xchg
xchg
jo
inc
fsts
sub
dec
sahf
pop
fdivp
xchg
in
xchg
pop
mov
leave
jecxz
jmp
mov
jmp
dec
xor
popf
xchg
lods
in
adc
sub
jb
test
or
sub
jno
lcall
xchg
bound
sub
inc
sbb
sbb
sub
lahf
mov
cmp
cmpsl
in
cmp
out
shll
fdivl
cmpsb
ljmp
jae
push
out
push
je
or
in
dec
cmp
shlb
sub
mov
ret
daa
mov
aas
pop
adc
jne
in
ds
jns
dec
hlt
cmp
dec
mov
std
mov
test
insl
mov
mov
mov
int3
xchg
lahf
push
test
jae
outsl
push
lds
into
sub
arpl
xor
mov
mov
out
lret
add
test
mov
out
xchg
addb
pop
add
push
and
cld
push
pushl
or
and
lea
push
in
jp
sbb
inc
leave
jno
lods
jle
cltd
xor
mov
sbb
icebp
mov
and
mov
es
cld
mov
mov
sbb
mov
xor
xchg
inc
shlb
push
sbb
push
cwtl
test
and
dec
iret
add
push
cmp
cwtl
inc
mov
jg
stos
jno
lcall
and
stos
push
and
movsl
das
jbe
sub
sbb
xchg
cli
aad
inc
fs
push
mov
push
xchg
cmp
push
pop
les
pop
cld
out
out
sbb
lcall
popf
mov
lret
insl
loope
push
jo,pn
mov
stos
orl
stos
mov
mov
jae
aad
and
xchg
sbb
jl
dec
lock
pop
dec
cmp
cmp
in
lods
gs
dec
push
sbb
testl
insb
xlat
pop
js
push
and
scas
jns
adc
sub
adc
mov
mov
scas
rcll
lock
lret
cld
pop
add
jns
pop
fisttps
push
sub
ljmp
xor
inc
cwtl
mov
jns
shll
ret
jno
loop
lret
xchg
dec
cmpsl
xchg
ja
jecxz
inc
or
cmp
movsb
in
xlat
add
mov
inc
dec
jmp
stc
mov
lcall
jecxz
cltd
inc
lahf
outsl
flds
test
stos
sub
jp
xlat
push
stc
jmp
mov
scas
push
and
shlb
sbb
fwait
scas
mov
fstpl
adc
inc
jle
into
xorb
push
jle
scas
jo
and
adc
adc
mov
mov
ja
inc
xchg
xlat
adc
cli
scas
cmc
test
pushf
shr
jae
sub
mov
pop
mov
cwtl
jns
sahf
lods
cltd
inc
imul
out
enter
add
lea
mov
xor
push
into
sbb
sub
xchg
sub
loop
dec
mov
mov
jge
pushf
mov
rol
subb
lods
xor
out
ja
adc
and
vlddqu
mov
jb
cmp
leave
cmc
jecxz
enter
push
push
fldcw
rorb
sbb
leave
pop
cmpsb
pop
xchg
jnp
jb
mov
pop
xchg
out
js
mov
and
shl
mov
cmp
and
arpl
neg
cmp
lds
cwtl
stos
push
fcompl
pop
icebp
loop
push
fnstenv
or
push
add
xchg
or
xor
pushf
pusha
adc
and
mov
pop
mov
int
sbb
and
adc
das
fstl
push
sbb
jmp
cmpsb
fld1
mov
leave
dec
andb
int3
loopne
inc
jae
fiadds
inc
mov
inc
and
push
scas
jl
pop
cmc
dec
out
and
loope
mov
jg
fildll
f2xm1
jne
xor
test
mov
pusha
adc
sbb
lcall
jle
in
jb
insb
and
iret
out
jb
sbb
or
std
dec
mov
and
mov
and
aas
adc
jl
stos
xchg
pushf
inc
and
shrb
xor
int3
mov
fiaddl
shlb
ljmp
mov
push
sub
cs
mov
shlb
out
jne
stos
pop
sub
test
sub
subl
insb
pop
xor
or
mov
out
lods
jmp
pop
inc
mov
pop
clc
mov
clc
stos
enter
imul
push
or
sub
stos
and
push
inc
push
jne
add
insl
jno,pn
push
mov
inc
xchg
jo
jnp
fsubs
lods
mov
popa
icebp
outsl
mov
stc
fcomi
subl
mov
lret
scas
scas
mov
dec
mov
cvtpi2ps
xor
cmpsl
mov
leave
lahf
sbb
leave
pop
add
sbbb
iret
in
jle
pop
das
gs
aad
shlb
cmp
or
sub
adc
push
push
or
in
out
mov
sub
sar
push
hlt
xchg
idiv
fisubrs
push
sbb
cmp
cmp
push
cmpsl
mov
cli
nop
push
rcrl
pushf
and
adc
pop
sbb
enter
xorl
adc
cmp
push
leave
out
divb
test
rcrb
ficoml
adc
out
std
fs
bound
mov
sbb
in
int3
push
das
xor
and
pop
outsb
xor
mov
stc
les
mull
jg
mov
orl
movsb
push
xchg
das
in
xchg
and
lret
inc
mov
out
mov
adc
add
test
pop
xchg
xchg
sub
mov
pop
sbb
xchg
sbbl
in
cs
rorb
xchg
sbb
push
xlat
cmpsb
sub
je
or
sub
mov
out
jp
into
push
jns
xor
ljmp
xor
movb
or
pop
jmp
mov
mov
pusha
dec
inc
movsb
test
jnp
push
and
and
dec
rclb
xchg
loop
push
cmp
push
mov
mov
sub
aaa
or
rcr
pop
pop
jb
add
jp
pusha
call
xchg
shll
shl
push
shr
int
je
nop
cmp
aaa
enter
jbe
mov
fcoms
adc
mov
loopne
xchg
mov
lds
in
jmp
es
leave
lret
fst
loope
incl
and
cwtl
sub
fdivr
sbb
push
adc
daa
ja
dec
pop
pop
sti
jl
inc
movsl
fbld
xchg
stc
cmpsl
jae
stos
testb
xchg
loopne
imul
test
std
cmpsb
and
cmp
adc
lret
jno
aad
in
mov
cmp
xchg
andl
add
push
pop
pushf
adc
fwait
jb
popa
jbe
adc
stc
pop
div
dec
imull
dec
mov
jb
sti
decl
push
xchg
punpckldq
or
pusha
push
push
aam
ficompl
faddl
sub
jns
popa
call
xor
xor
mov
int
and
repz
lds
das
icebp
jnp
fcoms
push
cmp
enter
sbbl
jecxz
stos
and
mov
dec
outsl
jp
lock
or
in
xchg
mov
imulb
cmc
sbb
or
aaa
movsb
adc
xchg
pop
push
into
aam
pop
adc
inc
jo
pop
fisubs
out
fcomps
mov
ret
pop
in
jmp
outsl
rorb
addr16
jp
dec
scas
mov
lahf
out
inc
mov
fisttps
int
imul
inc
in
xchg
xlat
adc
adc
repz
out
dec
sar
imul
movsb
lret
ret
add
fs
fildl
adc
mov
or
xchg
cmp
jmp
push
lcall
gs
inc
xor
and
ficoms
mov
xchg
mov
stos
mov
lret
fwait
sub
adcb
mov
pushf
mov
insw
sub
dec
push
mov
adc
adc
dec
mov
push
mov
dec
das
jb
adc
mov
stc
adc
sti
dec
xchg
add
mov
sbb
push
inc
jp
mov
mov
dec
mov
ljmp
loop
je
pop
xor
pop
test
lds
jae
leave
push
inc
mov
gs
frstor
jnp
add
mov
ud2
mov
out
maskmovq
divl
mov
sbbb
sub
fcompl
stos
cmc
popa
jb
ret
data16
sarb
fisttpll
push
ljmp
fdiv
inc
ret
xlat
lock
pop
outsl
mov
pop
dec
test
ficompl
or
dec
sarb
sub
xor
cmp
or
shl
dec
testl
push
repz
inc
dec
loopne
mov
mov
adc
cmpsl
aaa
je
ret
inc
pop
inc
scas
jle
xor
xchg
dec
int3
fimull
jae
push
das
pop
subl
xor
cs
push
or
inc
sti
adc
repnz
test
leave
mov
mov
jbe
fisubl
daa
jae
stos
mov
loopne
aam
push
xlat
nop
cmp
out
xchg
sti
lods
out
clc
int
popa
mov
mov
lods
sbb
cmpsb
xor
or
data16
ret
cmp
xor
jo
fst
mov
aam
xchg
and
cmpsb
cmp
jnp
pop
xor
dec
les
cmp
test
mov
inc
and
xchg
mov
mov
cmpsb
xchg
lds
js
out
dec
xor
xchg
outsb
xor
clc
pop
mov
in
push
mov
repnz
jmp
jno
sbb
into
mov
gs
in
sub
mov
push
sub
in
fsubrs
dec
or
in
out
mov
xorb
adc
fdiv
xor
xor
cmovle
jmp
dec
jne
xchg
icebp
aam
push
mov
in
mov
ret
push
mov
rolb
dec
mov
inc
sbb
lahf
sbb
inc
xor
outsb
ret
fists
push
rcrl
divl
icebp
jle
add
in
and
roll
ficomps
adc
pop
int3
repz
push
int
arpl
sarl
lock
mov
in
outsl
push
sub
pop
in
add
xchg
pop
jo
insb
out
ljmp
xchg
mov
xor
mov
inc
sub
test
sbb
xchg
cs
daa
test
xchg
subl
push
sub
mov
clc
xchg
jle
xchg
test
adc
xchg
pop
movsl
popa
fldt
test
xor
pop
mov
mov
std
out
sbb
int
popa
fisubrl
sbb
inc
cmpsl
test
stos
icebp
xor
adc
mov
hlt
add
push
push
aas
fnstenv
fldenv
mov
mov
jp
lea
sbb
pause
lds
negl
mov
ret
xchg
sti
negb
push
sbb
aad
cwtl
ja
push
pop
add
xchg
je
outsb
xchg
dec
jne
ja
pop
out
inc
rorb
mov
iret
js
lods
push
mov
jnp
jecxz
sub
inc
jecxz
enter
int
ret
jnp
cmc
sbb
mov
repnz
lds
lds
clc
fcmovnbe
out
jnp
mov
cmp
adc
shll
xor
add
push
jno
cmpsb
aaa
pop
addps
jo
lahf
repz
stos
xchg
cld
mov
das
cmp
inc
lahf
xor
outsl
out
sahf
mov
shrl
mov
sub
or
sarl
jp
mov
scas
and
push
jecxz
push
ljmp
pop
test
mov
je
adc
fcomps
cltd
in
outsb
cmp
or
cmp
repz
jae
je
popf
or
xchg
call
rclb
push
js
aam
mov
int3
int
lods
ja
xchg
aam
lock
push
jle
cmp
outsl
scas
and
pop
ds
mov
mov
enter
pop
mov
stos
jge
xor
pusha
cmp
les
test
mov
mov
aaa
mov
scas
or
test
pop
cmc
sbbl
sbb
stc
daa
xor
push
xchg
test
js
std
jno
add
adc
insl
or
dec
fisubs
cmp
out
inc
fstl
mov
loop
pushf
out
pop
ret
push
mov
jl
xchg
ss
pop
mov
and
aad
pop
cwtl
fdiv
shr
pop
ja
add
add
mov
adc
push
push
lods
mov
popf
insb
arpl
fstpl
icebp
fisubrs
pushf
fiadds
data16
pusha
adc
cmp
in
addb
sahf
out
mov
push
loopne
aaa
mov
jne
add
push
test
call
loope
shrl
sarl
xor
cmp
ja
xchg
jg
shll
in
cmpsb
test
imul
inc
pop
pop
into
jmp
or
movl
add
fdivrs
mov
in
push
aad
sbb
movsb
push
jbe
sbb
popf
scas
xchg
fists
insl
imul
dec
test
mov
cmp
sti
ficoms
test
jno
pop
lods
jge
and
inc
inc
out
mov
outsb
jbe
or
jne
call
lahf
xchg
adc
sbbb
or
sbb
dec
sahf
rol
les
test
adc
outsb
filds
inc
testl
lods
ljmp
pop
loopne
jp
aaa
cmp
xor
test
xor
xchg
inc
mov
test
cmp
jns
sub
ja
repz
pop
fsubrs
mov
adcl
pop
pop
mov
mov
outsb
mov
pop
xchg
add
jecxz
xchg
lods
xor
inc
jmp
pop
add
xor
mov
push
or
mov
mov
gs
stos
xor
and
enter
int3
push
mov
mov
daa
jp
shrl
cmp
and
rcrb
mov
cmp
in
mov
sub
jns
xchg
xchg
mov
repnz
adc
test
dec
cmc
mov
cld
pop
inc
pop
jno
popf
adc
in
movsl
mov
jb
inc
inc
sbb
call
sub
jp
sbbl
sub
dec
sub
subb
int
sarb
push
ret
cmc
ficoms
jne
jae
jl
data16
mov
ja
add
lretw
jnp
sub
cmpsl
and
ss
cmp
scas
jne
jl
ss
mov
test
daa
and
xchg
lods
mov
lret
xchg
fdivrl
sbb
ret
push
pop
fisubs
push
or
push
mov
inc
lods
mov
int
das
mov
out
jb
sbb
outsl
test
pushf
mov
add
xor
ffree
jnp
and
pop
mov
mov
lret
repz
inc
inc
cli
sub
mov
imul
pop
setae
int3
arpl
sbb
sub
decl
push
aas
push
or
mov
pop
and
xchg
jo
paddusw
sbb
jbe
inc
xchg
into
or
mov
enter
push
daa
cmp
ss
mov
iret
andl
mov
shll
push
jl
jne
xchg
mov
ret
fiadds
dec
setb
cwtl
push
movsl
in
push
insb
test
mov
push
je
xor
fcomps
mov
hlt
mov
les
cmpsb
xchg
and
imul
cmp
bound
or
fisttpll
out
outsl
rorl
dec
mov
fcmovb
into
pop
push
mov
mov
inc
stos
mov
dec
push
xor
mov
add
insb
cmp
add
arpl
notb
arpl
out
je
adcb
xchg
cli
or
cmp
pop
sub
inc
test
imul
imul
movsb
nop
movsl
das
dec
xchg
iret
mov
cmp
and
mov
mov
push
pushl
outsl
outsl
sub
int3
xchg
xchg
roll
popa
lods
inc
aaa
dec
push
xchg
addr16
or
xchg
lret
dec
mov
pop
xor
xchg
sbb
jb
push
scas
jbe
inc
les
cmp
cmp
cmp
pop
cmpsb
test
fimuls
mov
push
add
out
pop
popa
push
mov
sbb
cmp
out
or
test
insl
mov
mov
inc
lea
aas
inc
or
adc
jecxz
sbb
ret
pop
jmp
or
stos
adc
push
outsb
je
dec
imul
enter
in
mov
mov
inc
mov
mov
sbb
aad
push
pop
dec
testl
aad
push
sti
and
imulb
inc
int
enter
lcall
aaa
xlat
dec
testb
pop
dec
gs
inc
ret
pop
insb
in
lahf
sahf
sbb
pop
fisttps
jmp
dec
lock
ficomps
mov
and
cld
push
mov
adc
cmpl
mov
mov
sbb
stos
ja
or
mov
mov
mov
lods
cmp
xor
insb
xor
dec
add
cmpsl
or
lret
mov
or
test
das
daa
jge
and
xor
or
xor
je
cs
ja
xor
push
je
es
insb
fucom
jno
mov
shl
dec
mov
popl
loopne
cltd
std
outsl
cmp
add
inc
dec
ret
sbb
jmp
int
xchg
in
enter
in
and
bound
inc
cmpsl
test
pop
ficoml
xchg
test
mov
stos
inc
fimull
adc
and
enter
icebp
xor
int3
sub
xchg
lret
push
cmc
call
mov
mov
aas
sub
fisubl
shl
out
repz
pop
pushf
xchg
nop
out
bound
mov
pop
enter
call
call
ss
sbb
cmpsl
inc
inc
sti
jne
cmp
jo
cltd
cmp
mov
lods
adc
movsb
adc
iret
xor
xor
cmpsb
inc
fstl
and
and
jl
cmp
test
aam
dec
add
movsl
adc
lods
js
pop
adc
rcrb
imul
cs
sarb
imul
std
fdiv
ret
mov
inc
filds
and
out
mov
ja
mov
into
and
push
adc
pop
jnp
sub
mov
sbb
mov
mov
jno
out
fimuls
xchg
fcmovnb
leave
les
test
jmp
sbb
and
adc
in
xor
fbstp
xor
jp
mov
in
incl
popa
mov
in
pushf
xchg
or
xor
add
mov
cmp
jae
lods
mov
ret
adc
adc
cmp
mov
loopne
push
outsl
mov
in
sbb
xchg
pop
and
ret
js
or
movsl
orb
push
dec
push
mov
xchg
adc
mov
pop
ds
icebp
scas
xchg
sbb
out
inc
lds
fs
ds
mov
or
cmp
and
lret
mov
inc
or
push
add
mov
lahf
pusha
aaa
dec
insl
lret
lret
and
aas
hlt
cmp
aad
xchg
int
pop
lock
lahf
cld
ss
push
mov
xlat
add
mov
scas
adc
mov
and
leave
mov
lds
ds
loopne
xchg
cwtl
jp
inc
pop
pop
repz
ret
push
neg
mov
les
cmpsb
xchg
jno
stos
cmp
ss
stos
je
xchg
sbb
addl
xchg
mov
stos
arpl
sbb
mov
xor
add
sbb
int3
psllw
insl
jg
mov
jg
jp
inc
nop
emms
rclb
jbe
pop
sbbl
iret
mov
test
jg
xor
mov
mov
mov
aaa
jne
mov
add
negl
cmc
ret
andps
add
leave
addb
es
into
and
ljmp
pop
sbb
sbb
push
sahf
repnz
rorl
and
sub
call
xor
push
notb
leave
push
inc
jne
mov
movsl
out
cli
mov
mov
pop
cwtl
adc
xchg
push
pop
cmpsl
fadds
push
enter
push
sahf
cs
and
rorb
fdivl
insb
jae,pn
jecxz
sti
or
sbb
lea
sub
jge
inc
cmp
stc
jno
hlt
ljmp
aaa
dec
jb
push
iret
mov
xlat
xchg
lcall
push
into
push
es
testl
mov
je
out
inc
xchg
push
ja
cmp
lods
pop
shrl
mov
cmp
inc
sbb
xchg
in
adc
push
pushf
or
dec
iret
adc
outsb
add
ja
mov
adc
pushf
push
jle
jns
push
mov
sbb
movsb
lea
mov
sti
cmpl
jnp
dec
add
ficomps
pop
in
fcoml
inc
sbb
xchg
push
inc
cmp
or
mov
fdiv
jge
push
paddsw
and
sahf
jno
pop
ja
add
shl
cmp
dec
insl
jp
sbb
mov
icebp
cmp
adc
lea
push
dec
adc
jb
std
neg
data16
pop
jl
lods
add
mov
ja
xchg
loope
loop
imul
scas
fidivrl
pop
aad
jp
dec
pushf
stos
addr16
ja
xor
jne
call
fwait
mov
out
loope
cmc
pmaxsw
or
pop
xor
rorb
xlat
dec
jmp
popa
mov
mov
cmp
data16
insl
test
shrl
mov
add
mov
popw
stos
and
test
adc
sub
cmpsb
es
dec
addb
out
xchg
in
loope
aas
cwtl
adc
fcoms
inc
mov
in
imul
pop
pop
adc
mov
cmpsl
lods
dec
ret
mov
clc
xchg
xlat
pop
pop
iret
dec
aas
aaa
mov
mov
adc
fisttpl
mov
xchg
cmp
stos
pop
cmpsb
inc
out
sub
sub
pop
jae
xlat
divl
rorb
push
sub
and
mov
sub
rcrb
sub
xor
leave
lock
jmp
pop
shl
repnz
imul
cmpsl
and
in
out
sub
pop
mov
in
jle
xchg
xchg
pop
outsb
inc
pop
push
leave
aad
lods
fisubrs
jne
adc
xor
sti
lea
xor
fdivrs
lahf
jg
push
icebp
fistps
mov
push
add
push
xor
call
push
fmuls
ljmp
rorl
shrb
mov
mov
xchg
inc
lcall
push
xchg
add
xor
das
and
in
xor
sbb
push
push
sub
addr16
add
subb
inc
adc
xlat
loopne
jp
cwtl
sbb
push
sar
stc
sub
arpl
jb
loope
jo
xchg
stos
int3
lret
sub
out
cmp
cmp
movsb
mov
test
test
fcmovu
pop
add
xchg
pushf
lods
ljmp
lock
mov
jl
xlat
push
out
scas
dec
shr
mov
and
inc
into
mov
repz
add
out
loopne
mov
cmpsl
nop
mov
in
sub
mov
mov
scas
mov
mulb
dec
xchg
sbb
mov
xor
imul
and
xchg
cmp
lret
xorb
xchg
inc
mov
or
cmpsb
lahf
negl
adc
xor
sub
sub
push
xchg
or
insb
sbb
mov
lea
adc
inc
dec
dec
lock
aas
xor
xor
jb
dec
xchg
sbb
insl
xchg
sahf
mov
fsts
push
fistps
jge
or
ljmp
cmp
adc
cmc
xchg
xor
push
fnstcw
notl
add
imul
mull
push
ret
adc
movsb
mov
jp
sub
cmc
add
xchg
lret
adc
mov
adc
sub
pop
aaa
dec
outsb
mov
cltd
daa
or
xorb
dec
sahf
imul
fsubr
data16
and
xchg
lock
pusha
popa
and
int
inc
pop
clc
add
push
and
test
adc
pop
fcoms
fs
and
imul
push
insl
pop
inc
sbb
pop
and
xchg
push
bound
cmp
sbb
mov
inc
std
pop
push
add
mov
clc
or
mov
pop
lods
mov
push
cmpsb
in
inc
push
sub
jae
cmp
in
mov
frstor
icebp
xorl
stc
sub
inc
xor
out
sub
rcrl
mov
xchg
add
xor
daa
jecxz
ret
cld
loope
mov
push
lea
mov
push
in
mov
xor
out
fs
mov
out
mov
sbb
lock
popa
subb
mov
repz
or
fmul
xchg
push
rcrl
cmp
dec
push
dec
les
rclb
sti
jmp
js
mov
stc
xor
cmp
es
jp
outsl
cmp
adc
or
push
outsb
xchg
cwtl
adcb
pop
push
xchg
mov
adc
ror
dec
lcall
rclb
dec
mov
mov
fldenv
mov
jae
xor
sub
jecxz
inc
xchg
adc
popf
icebp
decb
or
inc
mov
popa
mov
sbb
stc
testl
fmul
or
imul
mov
add
sbb
pop
xorl
dec
pop
mov
jno
popa
mov
xor
filds
fcmovnb
xchg
aas
cmp
mov
enter
mov
test
xor
jnp
push
pushf
xchg
outsb
xchg
sbb
pop
movq
jo
xchg
pop
sbb
cmp
pop
aaa
mov
adc
sbb
and
push
adc
sub
mov
pop
adc
lds
or
popa
incb
int
jns
dec
cmp
or
ror
xchg
jae
or
clc
jae
mov
jae
push
ret
ret
mov
push
aas
sti
aad
xchg
clc
xor
imul
dec
push
aad
xor
test
inc
or
cli
shrb
pop
out
bnd
aas
jae
jno
cmp
cltd
mov
orl
fmulp
cmp
cmp
cmpsl
addr16
fldcw
das
ljmp
sahf
pop
or
xor
js
add
cli
mov
or
and
incl
bound
jecxz
clc
inc
lcall
cmp
push
stc
into
fisubs
out
push
ljmp
and
enter
rolb
jb
cmp
mov
or
or
int
mov
out
test
adc
test
sti
sub
mov
lret
ds
mov
push
jmp
ja
mov
repnz
mov
in
or
jns
fnstsw
or
loopne
push
or
pop
outsb
ror
sub
aam
sbb
stos
out
jb
add
jno
and
mov
lret
sbb
nop
jg
fisubl
push
ja
mov
fwait
std
dec
lods
inc
jne
testb
gs
mov
add
enter
add
xchg
sbb
and
out
fstps
loope
jbe
pusha
mov
data16
es
stc
repz
ja
in
push
or
fcoml
mov
rcrb
inc
es
sub
push
shll
rclb
pop
fmull
jle
jo
movsb
push
or
add
pop
inc
inc
popf
rcrl
jmp
jg
insb
insl
mov
mov
outsl
mov
jne
out
inc
cmp
xor
ss
jnp
insb
push
mov
outsl
or
sub
mov
hlt
je
test
dec
dec
dec
xor
int3
push
jne
xchg
imul
mov
sbb
sub
pop
orl
or
adc
movsb
fwait
cmp
mov
and
mov
mov
dec
rcl
stc
std
jns
sbb
movsb
inc
xchg
or
jg
sub
outsb
push
cli
or
fstl
lret
call
fildll
fsts
outsb
sub
pop
sbb
and
setnp
scas
les
outsl
mov
xor
jns
mov
add
adc
and
outsl
jmp
pop
repz
aam
mov
pop
stos
mov
push
notb
mov
push
add
and
adc
dec
loopne
test
aas
sbb
dec
or
push
mov
js
push
scas
xor
push
jp
call
cwtl
jnp
insl
pop
mov
add
popa
jmp
lea
mov
push
f2xm1
xchg
inc
pop
xor
cmp
sbb
xor
mov
and
mov
sub
mov
cli
push
xor
and
xchg
mov
mov
xchg
add
loop
testl
adc
mov
inc
pop
xor
add
repnz
lds
or
and
in
out
clc
les
js
mov
sub
mov
addr16
lock
mov
movsb
mov
sbb
sub
dec
cmc
adc
push
adc
call
mov
lds
roll
sub
out
insl
out
lock
cmp
lret
andb
xor
dec
sbb
fwait
shr
test
sbb
std
std
inc
repnz
out
pop
push
push
lret
cltd
outsb
mov
pop
dec
cmpsb
mov
and
jecxz
and
cltd
sbb
jg
dec
aam
test
cmp
mov
stc
mov
jge
std
out
push
or
push
dec
lahf
frstor
jnp
push
sbb
js
sub
pop
je
jmp
arpl
push
cltd
mov
sub
fwait
sub
or
in
arpl
mov
push
out
icebp
xor
add
xchg
xchg
jle
inc
shrb
or
pop
or
cwtl
ljmp
xor
and
enter
test
lcall
xchg
cmp
inc
mov
and
sbb
lock
ret
add
fnsave
out
dec
sbb
cwtl
mov
pop
pop
shlb
hlt
mov
imul
mov
jle
aam
fld
aam
push
inc
push
insb
sbb
push
xor
setbe
ret
vprotd
movsb
jmp
icebp
inc
sub
mov
out
dec
fiadds
jns
mov
shlb
add
add
test
dec
dec
das
sahf
pop
xchg
ljmp
sti
subl
inc
cmp
ficoml
pop
sahf
jbe
mov
pop
inc
ljmp
adc
idivb
outsl
pop
xor
mov
cli
pop
mov
pop
mov
jle
pop
inc
pushf
mov
dec
cmc
sub
push
mov
adc
push
mov
adc
shl
lcall
xor
jle
sar
inc
mov
jbe
mov
daa
call
cmp
mov
loope
stos
or
push
call
cmpl
orb
mov
in
mov
subb
nop
icebp
push
mov
aas
aaa
gs
mov
lea
push
and
cltd
or
push
xchg
mov
pop
mov
cli
and
or
mov
loop
sti
fdivrs
scas
outsl
out
pop
popa
push
jae
stos
cmp
jg
push
insl
jmp
sub
clc
sti
pop
xchg
rep
jl
hlt
fsub
aad
cmp
or
mov
test
leave
sub
pop
dec
lea
test
stc
loop
pop
fadds
xchg
push
jno
jbe
filds
cmp
cmc
adc
arpl
mov
push
popa
cwtl
stos
adc
mov
icebp
rcl
or
das
movb
and
mov
in
stos
loope
pop
mov
lock
xchg
or
hlt
ds
repz
dec
lds
mov
jp
mov
loop
in
rcll
cmc
adc
hlt
adc
add
push
mov
in
or
inc
mov
jb
push
dec
gs
inc
test
xor
aaa
subb
mov
das
iret
stc
loopne
ficomps
mov
adc
orb
mov
xchg
or
or
rorl
push
icebp
ret
lea
lods
add
sbb
lret
adc
fimuls
test
xor
mov
mov
or
xchg
xchg
add
scas
mov
cmp
sbb
cld
xchg
in
imul
cmp
in
sub
or
mov
mov
adc
dec
add
mov
sub
je
test
dec
cmpl
cmpl
xchg
sbb
mov
test
in
aas
outsb
mov
lahf
jnp
js
and
jmp
push
into
mov
push
jle
fldl
pusha
cwtl
dec
pop
xchg
ja
sub
fmulp
outsb
pop
mov
sub
mov
outsb
ret
jl
lock
add
xchg
sub
test
xchg
add
push
pop
sbb
jbe
or
adc
cmp
out
mov
sub
mov
sub
cmp
dec
add
loope
cmpsb
or
mov
mov
mov
inc
mov
pop
push
pop
inc
insb
std
xchg
and
xchg
imul
pop
repnz
stos
mov
sub
addr16
repnz
jmp
repnz
out
mov
in
lret
fsub
out
xchg
hlt
sub
pop
jge
jae
pop
call
and
or
js
rcrb
test
add
nop
ds
inc
mov
or
fcmovne
rcrb
jbe
mov
lret
outsb
fwait
sub
scas
add
call
jbe
mov
data16
mov
out
imul
pop
add
xor
jge
pcmpeqb
inc
notb
and
xor
test
jp
call
cmp
ret
mov
xchg
mov
inc
shrl
and
push
xchg
or
sub
sbbb
inc
data16
out
js
sahf
cmp
pushf
xor
pop
dec
jg
je
or
dec
int3
cwtl
sbb
call
dec
and
jecxz
mov
mov
mov
inc
rorb
mov
adc
clc
repnz
pop
mov
sti
sbb
dec
sbb
or
jp
sbb
mov
aas
cltd
jne
loop
push
out
push
das
fstps
lds
inc
pop
inc
sub
sbb
sbb
bound
cmp
in
scas
mov
inc
jecxz
inc
inc
jbe
sbb
pop
push
lret
or
pop
xchg
push
aad
iret
cmp
xor
push
xor
scas
into
jo
es
cmp
cli
mov
fnstcw
xor
push
fs
cmp
scas
sub
or
arpl
mov
test
pop
repnz
div
push
push
clc
pop
jge
add
adc
ret
pusha
stc
adc
push
rcl
and
cs
and
lock
cmp
pop
jmp
in
cmp
jno
mov
mov
js
jl
mov
pop
jbe
out
mov
dec
fwait
imul
xchg
pushf
mov
sbb
in
arpl
jl
lahf
out
xor
jl
mov
mov
cmp
sbb
mulb
jmp
out
test
fistl
mov
test
insl
mov
js
xchg
push
lock
inc
or
mov
jp
inc
pop
jle
or
push
adc
mov
push
pop
sbb
cmpsb
jne
mov
loope
aam
xorl
mov
or
cmp
xchg
and
pop
xchg
stos
push
xchg
jns
pop
dec
dec
sbb
or
scas
ret
sbb
test
push
or
cltd
loope
test
gs
ficomps
adc
and
sbbl
cwtl
icebp
xchg
divl
fs
and
jns
add
bound
rcrb
pop
icebp
bound
ljmp
test
sbb
test
arpl
jmp
fistl
jbe
int3
pusha
add
aam
fstl
and
mov
push
cmp
ljmp
mov
xor
fucomi
sub
mov
leave
jnp
cmp
ja
push
cli
test
mov
mov
test
in
xchg
mov
inc
and
jg
insb
icebp
in
addr16
cmpsb
je
rol
jmp
loopne
xor
push
inc
call
outsb
push
imul
push
out
outsb
and
xor
xor
fists
out
scas
adc
shll
and
and
aad
mov
xchg
jp
int
repnz
shl
mov
hlt
or
dec
inc
popf
fldt
cmc
daa
jge
ljmp
popa
subl
push
sahf
add
xor
out
push
jmp
xchg
lods
das
add
fisttpl
loope
dec
imul
push
pop
mov
les
mov
in
mov
mov
arpl
mov
dec
test
mov
push
outsb
inc
mov
daa
dec
icebp
jns
sbbl
push
jb
mov
xchg
pusha
pop
jg
add
xor
xorb
hlt
or
mov
testb
cwtl
xor
sbb
mov
scas
pop
push
mov
das
jmp
repz
inc
lea
dec
icebp
cmpsl
mov
or
fwait
cltd
lds
sbb
and
pop
inc
pop
dec
jecxz
test
xchg
and
pop
jne
in
push
icebp
push
outsb
loop
push
mov
mov
scas
fwait
mov
scas
lret
imul
and
lock
mov
mov
cmp
inc
jae
mov
mov
je
dec
sbb
aaa
sbb
sbb
insb
sub
cmp
ss
out
sbb
mov
imul
mov
push
fidivs
jb
pushf
xor
push
gs
mov
sbbb
pop
pop
mov
jg
inc
fs
mov
xchg
mov
pop
ret
cmc
mov
mov
mov
cld
mov
push
lret
hlt
out
dec
test
mov
data16
sarb
sub
jnp
iret
mov
ficomps
jns
sti
push
inc
aas
mov
mov
mov
test
pushaw
mov
loop
movsl
in
jbe
or
jb
sub
jp
lret
jnp
mov
pusha
sbb
and
adc
loope
jne
sbbb
repz
fst
icebp
in
insb
negl
mov
loopne
inc
push
movsb
addr16
push
or
push
xor
insb
aad
loope
fstp
mov
insb
jno
or
mov
sti
jnp
jne
imull
cli
in
mov
cmp
adc
jb
mov
es
ja
ror
push
dec
lods
stos
xor
xor
test
sub
roll
repz
cmpsb
enter
mov
pushf
xchg
sti
mov
mov
jb
scas
mov
mov
cltd
aas
xor
adc
mull
pop
in
stos
xor
or
and
push
icebp
test
aas
adc
int
mov
fists
out
cmp
cmp
dec
and
je
xchg
sub
xor
xor
mov
cmc
test
fildll
jg
subl
and
jb
movsb
push
xchg
xor
rep
or
or
insl
xor
xchg
int3
sub
pop
dec
nop
cli
test
movb
aam
jmp
or
test
rcrl
divb
lock
sub
popa
pop
and
and
dec
pop
dec
outsl
inc
jecxz
pop
and
mov
addb
push
cmc
push
xchg
add
js
inc
cltd
lock
outsb
or
sarb
js
xchg
iret
pushf
out
dec
shlb
or
mov
movsb
push
add
xchg
sub
jnp
mov
hlt
push
fstl
mov
dec
hlt
test
test
cmpsb
sub
out
adc
je
pop
mov
hlt
lds
and
mov
lods
hlt
test
xchg
push
stos
xor
lahf
dec
sbb
js
cmp
lahf
dec
sbb
xchg
dec
vxorps
mov
push
jae
out
pushl
aad
sub
push
test
cmp
dec
adc
xchg
xor
sbb
and
hlt
test
test
pop
mov
insl
or
imul
or
imul
aam
lea
push
ret
ret
mov
lods
xchg
cld
mov
imul
inc
push
push
and
inc
jno
sti
sti
andb
mov
adc
popf
sahf
andb
xchg
ljmp
movsb
sbbl
pushf
popa
push
out
mov
xchg
cmc
rorb
jb
ficomps
adc
jle
cmp
cli
pop
sub
iret
ss
loop
outsb
cmpb
loopne
mov
cmp
jmp
js
xchg
cmp
notb
mov
std
int
cmp
pop
out
aam
or
imull
sarb
and
and
sbb
scas
pop
ds
lods
mov
sub
hlt
sbb
cmp
xlat
test
fnstcw
lret
cwtl
cli
call
clc
fistl
js
lea
idivb
aad
ret
lock
pop
xchg
call
inc
mov
pop
iret
rcrb
fldcw
dec
jmp
push
inc
lds
cltd
adc
lea
push
ss
adc
popa
idivb
adc
inc
sbb
dec
push
mov
pop
aaa
or
push
repz
data16
arpl
jl
popf
ja
cli
xor
xor
pop
jecxz
daa
cmpsb
mov
inc
outsl
inc
iret
mov
fdiv
jbe
pop
mov
inc
repz
jp
mov
sahf
xchg
int
call
jae
mov
fcompl
jge
add
popa
dec
cmpsb
es
std
icebp
fstl
std
ja
rcrl
jns
inc
xchg
jnp
xchg
sahf
push
mov
lcall
or
pop
test
xchg
sbbb
pop
push
enter
clc
adc
xor
dec
cli
mov
pop
pop
mov
es
and
pop
or
insb
dec
ljmp
arpl
cmp
sbb
repz
cs
leave
jo
test
adc
out
icebp
add
sbb
mov
addl
xor
jno
pop
mov
mov
jne
popf
aad
ss
sub
sub
jmp
ja
jb
sarb
insl
arpl
mov
stos
mov
sbb
xchg
mov
vpaddusw
jae
out
cmpsl
filds
insl
and
sub
mov
cmp
cltd
rcr
fs
lds
jge
mov
cmp
jmp
outsb
xor
aas
ljmp
repz
cld
jb
sbb
or
aam
sbb
ffreep
jg
negb
fmuls
aad
cmp
adc
in
sbb
incb
fwait
aaa
sub
xor
fbstp
test
cltd
add
shll
hlt
movsb
push
ds
sub
in
xchg
mov
rclb
pop
lahf
setns
mov
adcl
inc
adc
xchg
pop
lods
imul
jns
push
push
inc
cltd
cmpl
ljmp
xor
mov
xor
add
es
adc
push
mov
aaa
inc
daa
int
xchg
mov
mov
sub
xchg
fcomps
mov
call
loope
or
add
sub
hlt
je
stos
cmp
adc
lods
sti
stos
les
sbb
cltd
mov
adc
inc
je
cmc
sahf
xchg
cltd
xchg
fidivl
jecxz
pop
or
inc
add
pop
mov
xchg
imul
jo
comiss
ret
dec
in
addr16
jl
out
add
cmp
addr16
inc
inc
aas
mov
or
cmc
pop
sub
fldcw
fneni(8087
pop
and
pop
and
push
rorl
xor
mov
shrl
sbb
or
out
cltd
push
adc
aad
inc
or
loopne
int
and
movsb
cmc
and
mov
cmovb
lret
pop
mov
shr
mov
mov
les
mov
lods
stos
in
aad
jge
repz
lods
lea
mov
mov
out
dec
add
mov
fstpl
cmp
sbb
adc
and
imul
xchg
or
addr16
add
shll
movsl
push
mov
xor
push
inc
sbb
sub
scas
or
xor
ds
push
out
call
adc
jg
sbb
aaa
xchg
fistpl
cli
mov
scas
je
loope
movsb
arpl
aam
or
inc
xor
loop
mov
out
test
inc
int3
push
pop
rcll
movsb
int3
ljmp
inc
xor
fsubr
push
addr16
mov
adc
cmpsb
xor
bnd
addr16
les
cmp
divb
pop
int
movsl
rcrb
push
pop
je
sbb
lods
gs
das
fstl
cmp
mov
out
ret
dec
and
cltd
mov
movsb
dec
fs
in
mov
pop
lods
or
sub
cmpsl
das
inc
add
mov
cmpsl
mov
or
push
cmpsb
push
popf
jmp
mov
in
fisubs
dec
lea
pop
sub
push
xchg
in
xor
lea
iret
sub
and
out
mov
dec
push
mov
or
lea
in
hlt
stos
and
add
in
outsb
mov
scas
test
popa
and
jb
dec
stos
mulps
jl
add
gs
push
mov
insb
mov
xchg
rcrl
movsl
pop
push
es
push
adc
pcmpeqw
mov
adc
movsl
sbb
push
mov
pop
inc
inc
test
imul
mov
push
mov
jb
outsb
scas
pop
addr16
loop
cli
ljmp
mov
faddl
lods
pop
loopne
ret
dec
shrb
mov
pop
sahf
jle
sbb
adc
insl
jnp
xorb
cmp
popa
xor
push
dec
mov
jle
decl
push
insb
loopne
pop
dec
jp
dec
add
jmp
cmpsl
xchg
das
cltd
dec
xchg
mov
pop
dec
xlat
rcrb
sub
dec
or
aas
outsl
sbb
cltd
xchg
pop
push
sbb
lcall
xchg
jecxz
and
mov
pop
mov
pop
imul
jle
xchg
xor
jl
jae
daa
aaa
repnz
xor
mov
mov
lock
pop
dec
pop
add
je
and
pop
pop
ds
sbb
mov
lret
out
pop
lahf
sbb
add
in
xchg
sbbb
lcall
ret
lcall
jge
push
loope
and
test
cmp
or
xorb
or
pop
imul
jl
ss
jmp
xor
sbb
sub
int
aam
pushf
jae
jne
adc
push
or
lds
fdivl
push
daa
into
mov
mov
in
movsb
into
fcomps
mov
sub
add
mov
inc
add
outsb
jle
add
in
jge
shll
pop
push
out
je
sbb
call
mov
out
push
mov
push
cmp
into
test
aam
xchg
in
mov
inc
scas
repnz
mov
and
adc
dec
iret
popa
clc
mov
mov
loopne
in
out
and
popa
and
adc
in
popf
loopne
mov
rorb
jmp
adc
fcoml
ss
mov
mov
xor
rcrb
adc
jo
cltd
and
jle
ja
int
push
imul
sbb
jae
leave
sub
sbb
arpl
fnstsw
fisttps
shl
js
and
iret
mov
ja
sub
xchg
and
pushf
xor
push
xchg
adc
lahf
xchg
in
dec
inc
pop
dec
repnz
push
dec
pop
out
aam
les
js
stos
xor
scas
or
xchg
mov
jnp
cmc
test
sbb
lods
xor
mov
mov
sbb
icebp
outsb
sub
or
outsb
cltd
rcrl
je
ret
jge
ret
addr16
push
push
xor
add
xor
test
dec
mov
adcb
sub
stc
cmp
sbb
add
sbb
outsb
mov
sbb
or
jns
inc
fwait
dec
jns
jmp
test
mov
or
jb
out
shl
cmp
mov
loop
adc
inc
add
cltd
mov
repnz
dec
lds
xor
loope
dec
jmp
dec
ja
std
andb
loope
jo
and
data16
sub
sti
sbb
shrl
dec
ss
into
mov
loope
inc
xchg
out
mov
cmp
fmull
lret
mov
jmp
sbb
mov
pop
cli
jbe
jg
lock
sub
cmp
dec
lock
push
dec
hlt
jae
sbb
sbb
test
cmp
cmp
adc
inc
out
dec
sub
xchg
xorl
pushf
xchg
inc
xchg
stc
cmp
sbb
into
icebp
and
xchg
aaa
imul
push
in
lahf
mov
cmp
jp
jb
mov
pusha
mov
add
adc
add
inc
int
insl
leave
hlt
cmp
sbbb
loop
outsb
js
push
aad
cmp
repz
movsb
mov
popf
das
scas
in
sarl
xor
dec
scas
jl
stc
mov
cwtl
xchg
test
stc
repnz
pop
push
daa
sbb
push
and
int
rcll
ds
pop
ret
push
xchg
cmp
ret
and
bound
cmp
fwait
push
inc
dec
or
sti
out
lahf
iret
pop
gs
jb
mov
xchg
push
pop
addr16
pop
dec
cli
insb
cld
xchg
scas
data16
jb
push
ret
cwtl
add
and
xor
xor
mov
sub
add
adc
dec
adc
pop
mov
arpl
idivl
pop
push
imul
jne
adc
incl
and
scas
dec
movsl
sahf
imul
mov
dec
dec
orl
inc
pop
lock
push
adc
jmp
lret
sbbb
sub
mov
push
test
mov
fwait
popf
data16
mov
add
dec
or
cmpsb
jns
outsl
ret
outsb
call
shr
jo
and
loope
sub
mov
lods
dec
test
ss
sbb
sub
push
dec
push
pushl
push
sub
sub
adc
mov
sub
ds
adc
mov
aam
movsl
ds
sub
loop
mov
stos
call
xor
addr16
pop
xchg
decl
dec
nop
out
stos
jb
test
gs
mov
push
lret
pop
or
lret
sbb
pop
sti
sub
adc
jle
mov
push
je
lock
js
push
push
push
mov
subb
jmp
xchg
mov
adc
stc
push
imul
push
outsl
adc
cmp
divb
cmp
dec
repz
loopne
sub
jbe
mov
inc
movsb
in
jle
cmpsl
cld
in
xor
lret
int3
inc
movsl
jl
dec
add
shlb
vmaxss
insl
cmp
ret
jae
fmuls
outsl
aaa
shll
outsb
imul
fs
repz
sahf
xchg
mov
popa
out
lret
xor
out
jno
xchg
lock
popf
inc
rcrl
mov
ja
add
js
cmp
pop
mov
roll
lahf
jae
jno
mov
rclb
mov
xchg
or
dec
sbb
jno
or
xchg
add
popa
jbe
and
fbld
aaa
or
clc
mov
push
xor
mov
fisttps
inc
inc
stos
sub
jbe
xor
adc
scas
lcall
pop
and
lcall
imul
movl
xor
arpl
xor
inc
jecxz
jle
mov
loopne
xchg
jl
jae
sbb
push
mov
movsb
mov
sub
sub
or
out
aam
out
or
and
outsb
xchg
push
add
in
adc
orl
lea
in
jb
rcrb
dec
lods
sbb
testb
inc
jecxz
and
xlat
push
enter
jg
mov
idiv
push
je
xchg
imul
push
loope
je
add
icebp
enter
mov
lock
fxch
xchg
stos
data16
push
adc
ja
sub
stos
push
inc
js
xchg
inc
cmp
push
cs
xchg
push
fwait
push
repnz
add
out
lds
xchg
sahf
add
lret
mov
test
daa
dec
scas
insl
mov
and
mov
std
cmc
mov
add
cmp
inc
sbb
in
mov
addr16
inc
cmpsb
cmp
fsts
push
push
insl
inc
xor
pop
and
sbb
std
sub
outsl
call
rorb
jle
cmp
push
xlat
mov
mov
xorb
sbb
xchg
movsb
fxch
nop
mov
mov
pop
pop
outsl
pusha
mov
xchg
jns
sub
pop
pop
mov
jle
testl
lret
or
xor
pushf
test
mov
mov
icebp
xlat
jl
int
dec
or
xor
roll
adc
dec
jnp
pop
dec
aas
ss
std
sub
rorl
dec
mov
cmpsb
jl
inc
mov
jns
test
test
inc
bound
pop
stc
jmp
cs
push
lock
jp
push
lcall
push
mov
popa
jb
mov
mov
add
xchg
pushf
or
outsl
movsb
and
cmp
rcrl
pop
xchg
lret
ret
fdivr
rolb
lea
imul
imulb
test
sub
fld
aas
cmp
test
dec
in
sarl
cmp
dec
or
in
ret
adc
and
testl
xchg
int
aaa
outsb
lahf
mov
insb
ds
jne
sarb
rclb
lcall
hlt
clc
int
into
call
xchg
inc
mov
repz
push
nop
add
dec
cmovbe
inc
shr
push
or
push
xchg
or
xchg
dec
rcll
push
jo
movsl
xchg
cmpsl
jle
pop
dec
dec
add
mov
mov
xchg
push
jecxz
filds
or
jmp
scas
mov
mov
scas
lret
and
pop
inc
ret
xorb
adc
stc
popa
sbb
mov
inc
cs
scas
imul
decl
jle
popf
dec
inc
jl
xchg
xor
aam
pop
or
iret
cmpsb
movsl
push
jg
shlb
idivb
test
cmp
sbb
out
xor
sbb
cmp
jno
sbb
stc
jl
push
xor
mov
mov
sbb
adc
int
je
jno
mov
cmp
inc
mov
sub
mov
push
dec
or
or
sbb
or
outsl
imul
xor
push
sahf
in
pop
push
sti
jle
jmp
test
pushf
cmpb
sbb
or
pop
push
fcompl
xchg
push
pop
or
sub
adc
out
xchg
and
sbb
push
cmp
add
dec
enter
add
pop
sbb
cmp
pusha
insb
mov
adc
aas
dec
loope
loop
pop
ss
je
aaa
outsl
sub
ds
adc
xor
xor
mov
setns
adc
cs
lods
ret
push
sub
lret
in
into
into
fsubp
sahf
lea
xchg
je
cwtl
and
xchg
inc
popf
mov
xchg
xchg
pop
aad
daa
in
pop
cld
sbb
int3
or
iret
mov
in
inc
dec
pop
inc
mov
xor
aam
es
jo
sub
jbe
repnz
cmc
dec
add
jmp
jmp
into
cmp
mov
or
cmp
mov
mov
lods
mov
fincstp
jl
imul
ja
add
inc
push
push
pop
decb
dec
push
stos
aam
lods
adc
add
arpl
sub
cmp
dec
push
stos
cmp
stos
out
xchg
sub
push
sbb
adc
pop
icebp
dec
test
lahf
mov
dec
jp
push
and
lcall
xor
shrb
inc
sub
jno
push
or
iret
adc
popa
mov
inc
mov
or
sbb
xor
test
xchg
sbb
sub
rcll
mov
adc
imul
push
andl
jno
sbb
mov
fildll
mov
jb
movsb
sub
push
mov
fcomps
cwtl
push
test
out
sti
pop
cs
pop
jb
or
add
sarb
adc
pusha
sbb
mov
inc
shr
xchg
loopne
pushf
ja
jns
std
or
xchg
insl
pop
add
dec
iret
loopne
cmp
sbb
cmpsb
xor
cmpsl
shr
push
leave
cmp
pop
dec
lea
popf
pop
cmpsb
dec
rcrb
pop
mov
in
and
aam
xchg
lock
test
xor
and
loope
sbb
dec
add
dec
pop
repnz
jp
dec
mov
sbb
xor
xor
imul
imul
ljmp
jbe
lret
test
jge
pushf
icebp
mov
mov
add
cwtl
inc
movsb
leave
add
mov
repnz
jmp
test
ret
sbb
movsl
push
cmp
ret
sub
cmpsl
aaa
cmp
shl
jno
add
inc
lret
jle
repz
jp
lea
mov
shll
or
test
es
push
mov
and
mov
std
jnp
lock
test
push
dec
or
add
test
mov
clc
cmp
ret
fwait
add
mov
xchg
les
mov
cmp
add
shlb
stos
roll
pusha
push
sub
je
jl
sub
xor
imul
push
std
imul
sub
repz
mov
jo
jnp
mov
and
fistps
mov
jmp
iret
roll
ret
push
push
inc
ret
jb
das
push
push
sbb
cmp
mov
fistpll
adc
clc
xchg
loope
or
pop
mov
lret
insb
int
movsl
pop
xchg
out
outsb
js
jb
mov
lahf
mov
lea
dec
sbb
das
in
dec
icebp
cmp
and
push
mov
mov
popa
shlw
xchg
ret
mov
push
pop
stos
jp
inc
lcall
push
add
push
pushf
mov
and
ret
push
pop
into
iret
aad
fcmovne
sahf
and
arpl
movsb
xchg
pop
jmp
jecxz
sub
sbb
iret
dec
and
push
mov
stc
pop
data16
sbb
or
mov
jb
fucomi
outsl
xlat
push
adc
pop
test
int3
ret
mov
xchg
push
xchg
mov
repz
inc
or
mov
cs
cmpsl
or
arpl
test
or
add
or
mov
mov
xchg
mov
add
pop
lods
sbb
xchg
mov
rcl
std
adc
adc
std
inc
sbb
and
cld
data16
and
inc
shlb
sbb
adc
fsubp
xchg
je
add
call
imul
imul
sub
mov
imul
add
clc
jmp
mov
data16
int3
stos
out
sub
pop
mov
xchg
lock
mov
xchg
mov
mov
lea
inc
test
mov
jns
sbb
arpl
sahf
mov
push
das
mov
sbb
dec
or
adc
iret
mov
inc
jns
lods
and
xor
push
adc
xlat
jle
shl
call
pop
mov
pushf
das
negl
xchg
sbb
sti
pop
std
jnp
lods
stos
stc
push
test
fs
cs
into
cli
pop
ljmp
push
lds
jo
push
jp
cmpsl
add
into
cwtl
adc
iret
xchg
xor
setg
mov
and
cmp
xor
rol
jnp
cmc
out
mov
fs
mov
aaa
dec
adc
ret
add
jmp
aad
jno
cwtl
in
aad
push
cs
jne
nop
ja
sub
push
leave
aam
push
mov
jge
aaa
xchg
xchg
mov
push
sti
ret
jl
aaa
out
fdivrl
jns
lods
and
push
pop
clc
add
into
cltd
sahf
inc
sbb
jb
scas
sbb
fsubs
aaa
lahf
cld
loopne
push
jno
and
dec
or
lods
adcl
hlt
mov
xor
and
dec
js
fdivr
fistps
mov
arpl
ds
popa
dec
fistl
and
xchg
pop
mov
xchg
dec
insb
push
fadds
in
sbb
fimuls
roll
sbb
xor
test
insb
outsl
xor
adc
nop
stc
sub
out
out
imul
stc
fdivrs
adc
shr
or
ss
ds
scas
dec
xchg
pop
fdivs
iret
cltd
mov
push
or
mov
fidivl
push
enter
fisttpl
je
insl
lea
in
adc
or
jecxz
in
iret
inc
add
pusha
jne
fsts
jmp
jmp
push
call
hlt
dec
mov
fstpt
jne
movsl
add
hlt
mov
loope
roll
inc
pop
lea
jmp
xor
mov
lods
jno
test
adc
cmp
sarl
lds
popf
idivb
jecxz
cmc
ja
add
mov
clc
lret
lret
push
in
or
pop
popf
xchg
popf
add
mov
mov
mov
cmpsb
test
xchg
je
pop
jb
lahf
das
sahf
out
sub
and
nop
adc
push
mov
xchg
xor
inc
jge
mov
xor
setp
dec
movsl
mov
sub
bound
jns
mov
repnz
xchg
sub
call
aas
mov
ljmp
mov
ret
shlb
shl
out
cld
sbb
cltd
jmp
xchg
mov
insb
mov
pop
push
sub
and
jle
push
mov
rcrl
aam
xlat
mov
int
xchg
roll
fcomps
adc
cmc
sti
cmpsl
jge
mov
cmp
lea
lahf
cli
leave
test
das
rorl
out
cmpsb
lahf
lahf
push
js
popf
mov
mov
mov
push
mov
sarl
mov
mov
xor
sub
push
scas
lods
and
push
test
nop
mov
mov
lcall
lods
mov
fisttpl
gs
shrb
and
xor
mov
jp
scas
sbb
pushf
jp
pop
add
stos
mov
cltd
jbe
or
rcrb
sbbb
outsb
fsubl
adc
mov
jecxz
pop
aam
dec
mov
roll
insb
or
scas
ret
pop
pop
dec
or
xchg
fbstp
xor
lcall
add
jno
mull
mov
les
xchg
cmp
fsub
push
sub
push
std
les
push
test
jecxz
aad
inc
adc
xor
sarl
add
popf
adc
jns
adc
lahf
test
mov
and
sbb
push
inc
pop
scas
pop
dec
mov
sbb
int
mov
stos
sub
lahf
xor
pop
jmp
push
aam
out
mov
mov
pop
inc
xchg
push
jo
aad
movsl
daa
enter
sbb
addr16
ljmp
jl
mov
push
dec
into
push
xchg
shrb
and
push
test
push
lcall
mov
scas
in
jmp
pop
icebp
jbe
add
jb
shlb
gs
das
std
jge
arpl
jo
adc
jg
arpl
mov
popf
push
insl
pop
push
cmpsl
cmp
movsl
aad
pop
std
xor
ret
aaa
loope
fdivs
push
sahf
movsl
stos
fldl2e
pushw
sahf
int3
add
cmp
push
cmpsb
out
std
mov
clc
pusha
pop
subb
xor
lods
inc
add
or
inc
pop
es
pop
cmpsb
imul
mov
cmp
je
adc
cltd
mov
pop
mov
mov
pop
mov
je,pn
loop
jge
adc
pop
xchg
sbb
outsb
inc
cmp
cld
push
pop
sarb
insb
idivl
jns
ljmp
cltd
ret
ljmp
icebp
sub
je
cltd
addb
fmul
xor
pop
insl
sbb
js
sbb
test
add
or
out
les
outsb
ljmp
mov
pushf
xor
loop
sub
int
cld
cld
movsl
jnp
mov
and
sub
adc
adc
into
xchg
mov
and
sbb
dec
ds
lret
sti
xchg
push
pop
push
mov
mov
fists
mov
out
or
pop
xchg
xor
popf
hlt
das
leave
insl
jno
mov
xor
jge,pt
xlat
dec
or
setbe
jnp
cmp
insb
fldcw
popa
lcall
mov
jmp
and
cld
or
popa
out
ficoms
and
call
loop
repnz
jo
sahf
iret
ja
pushf
dec
in
int
testb
in
add
sahf
test
fs
pop
mov
shr
push
push
mov
xchg
adc
sub
push
xchg
fmuls
pushf
mov
out
or
sub
push
pop
bswap
push
rcrb
xor
adc
mov
es
ret
xchg
and
inc
xchg
adcl
and
lods
jns
int
cmpsl
loope
pop
xchg
mov
and
sbb
jno
add
jge
dec
fcompl
mov
pushf
ficomps
xchg
dec
sbb
cwtl
xchg
dec
movsb
stc
pop
add
int3
mov
or
or
mov
test
and
inc
leave
aam
mov
stos
cs
je
in
push
stos
popa
pusha
mov
iret
xchg
mov
xchg
or
add
inc
cmovl
pop
ja
pop
mov
mov
gs
mov
out
ret
jge
xchg
mov
insl
shl
jl
shl
jecxz
and
inc
or
inc
outsb
mov
cmp
cmpb
and
hlt
lret
cmp
ds
inc
clc
les
lcall
addr16
lods
dec
mov
sub
inc
dec
mov
jb
mov
xchg
ret
hlt
push
xchg
add
or
add
scas
jne
lods
andl
inc
stc
insb
xchg
lahf
mov
sbb
ja
pop
loopne
lods
xchg
mov
and
inc
out
icebp
xor
insb
pop
jbe
add
and
add
lods
sub
js
outsb
pop
mov
mov
in
xchg
mov
xchg
clc
mov
ljmp
pop
or
xchg
inc
push
lods
cli
shlb
push
push
jbe
icebp
pushf
xor
mov
inc
push
jb
lock
adc
push
sub
adc
js
jp
popf
inc
jnp
outsb
dec
or
imul
je
xchg
sbb
sahf
fildl
sub
add
push
add
cld
inc
popa
sub
sarb
mov
xchg
pop
mov
xchg
xchg
jecxz
jns
xchg
rcrl
lock
jle
sub
or
mov
xchg
je
adc
adc
mov
inc
ficompl
cmp
xchg
pushf
sub
mov
or
xchg
cmp
jl
or
xchg
inc
and
lcall
xor
ret
lret
shlb
push
mov
mov
test
cs
in
ret
xor
or
pop
cli
shrb
push
lods
popf
sub
outsl
loope
lods
xchg
ljmp
jmp
sub
pop
sahf
cmp
scas
xlat
mov
frstor
call
ficompl
or
mov
pop
inc
stos
rorl
loop
xchg
push
arpl
loope
scas
pop
sub
or
js
xchg
jae
arpl
arpl
or
dec
dec
and
out
mov
cmove
inc
and
popa
ret
cpuid
lds
adc
ret
xchg
hlt
loope
js
cmpsl
mov
data16
and
xchg
xchg
cmc
in
inc
cwtl
fdivrl
mov
fidivl
movsb
pop
pushf
and
out
jb
test
jl
in
lods
movaps
xchg
mov
fidivrs
sub
hlt
add
pop
dec
je
push
sar
rcrl
es
pop
loope
cltd
js
cld
mov
lods
mov
mov
stos
shrb
int
out
popf
movsl
lds
inc
add
add
pusha
push
aas
mov
ljmp
push
pop
fidivl
fwait
push
rolb
dec
add
repz
pushf
ficoms
push
inc
jp
fistps
pop
xchg
loope
out
xor
add
jge
add
test
xlat
push
jg
shrb
aaa
inc
sbbl
andb
fstpt
xchg
insl
movsl
pop
pop
and
cmpb
pop
sti
lret
fstps
xchg
mov
push
jnp
testb
add
in
and
or
pop
inc
fstl
inc
push
in
mov
jo
pop
std
xchg
adc
xchg
pop
int
cmp
sbb
ficoml
dec
xor
jp
jg
addr16
cs
cwtl
ficoms
inc
jnp
sbb
mov
mov
lea
pop
in
aas
inc
pop
inc
loope
insb
mov
mov
mov
push
xchg
jmp
clc
out
and
jge
insl
inc
mov
fisubrl
cmp
mov
je
xor
sub
mov
xchg
jmp
cli
pop
lods
imul
mov
inc
sahf
push
testl
and
xchg
mov
lcall
push
adc
xor
insb
imul
inc
xchg
push
cmp
les
out
jecxz
loopne
or
stos
mov
jmp
and
out
jno
mov
and
xor
pop
popa
test
jge
movl
in
test
sub
mov
jne
cmpsb
aad
cmp
push
inc
inc
test
pop
scas
loopne
mov
jge
adc
push
xchg
or
int
pusha
xchg
push
loop
push
or
sbbl
xor
notl
jnp
mov
out
ss
jne
jmp
push
popf
sub
pop
xchg
xchg
or
in
mov
push
shrb
xchg
sbb
mov
lods
xor
xchg
adc
test
mov
push
and
es
imulb
push
xor
cli
jle
pop
mov
jae
stos
out
mov
sbb
lahf
icebp
js
dec
sub
std
ret
jb
data16
pop
insb
pop
test
and
sub
ret
xor
push
pop
pop
mov
jmp
cmp
lret
loope
insb
outsb
std
pop
and
inc
xor
mov
sub
imul
mov
icebp
push
push
adc
xor
mov
xor
add
lret
sbb
cmpsb
repnz
cld
ret
shll
dec
inc
outsb
inc
repnz
and
ret
out
cli
stc
push
sti
lret
aad
and
mov
int3
fcmovb
xorb
lods
adc
mov
iret
cltd
adc
fisubl
jbe
pushf
mov
jne
pop
pop
popf
movsb
subb
jp
push
pusha
pop
mov
or
nop
in
ja,pn
stos
mov
xlat
out
lock
lahf
cmp
scas
test
rcrb
outsl
mov
lea
mov
dec
jle
std
sti
jbe
lock
sub
lret
data16
sbb
fdivrl
push
and
loope
aad
dec
add
inc
daa
jb
adc
add
imul
bnd
andb
and
lcall
inc
das
mov
mov
mov
imul
mov
les
and
or
mov
mov
fiaddl
call
mov
ret
sub
or
idiv
xchg
jecxz
gs
dec
les
ja
aam
push
fs
xorl
adc
pop
mov
xchg
rclb
mov
lds
add
lret
xchg
fwait
decb
shlb
fsub
and
push
xlat
mov
fimuls
adc
inc
xor
lods
xchg
mov
lods
insb
test
xor
dec
movsb
lret
bound
arpl
stos
sbb
sbb
jbe
pop
mov
mov
ret
push
cltd
aam
lret
sbb
xor
adc
addl
mov
repz
loopne
addr16
dec
xor
call
push
add
leave
clc
fists
sub
jmp
inc
rcr
lahf
in
out
and
sbb
adc
sbb
push
stos
mov
dec
and
fsub
movsl
mov
mov
inc
jo
mov
push
dec
test
push
jl
xchg
pop
in
fwait
mov
loop
fadds
jmp
test
sahf
or
cmc
call
lea
sub
push
nop
lahf
repnz
adc
cmp
mov
sub
popa
mov
mov
jge
xor
dec
or
inc
ret
scas
xchg
sbb
test
add
inc
add
std
adc
cli
inc
sbb
inc
sub
out
outsl
mov
xor
inc
adc
shl
std
stos
push
int3
iret
and
xchg
mov
push
jnp
lea
push
pop
or
mov
cmp
add
cmpsb
xor
fadds
cmpsl
add
out
jo
incb
and
push
inc
std
mov
bswap
adc
mov
push
shrb
xchg
idivb
lret
jae
pop
popa
sbb
aam
dec
mov
mov
inc
mov
xor
ljmp
or
adc
dec
pop
lock
cmp
outsl
xlat
dec
mov
and
dec
stc
dec
pop
cltd
push
pushf
stos
in
sti
adc
pop
xorb
push
jmp
cli
call
sub
sub
pop
ret
mov
add
add
inc
dec
hlt
xor
pop
out
lret
in
push
fstl
jmp
add
hlt
fisttpl
push
adc
orb
xor
jmp
adc
add
pushf
mov
ss
mov
mov
and
or
jb
cmp
icebp
rclb
adc
lahf
push
add
xor
jbe
xchg
push
xchg
xor
imul
aad
xchg
outsl
es
pop
push
cmc
pusha
inc
subl
jnp
mov
push
and
mov
cli
shrl
xor
sahf
inc
mov
dec
ds
xchg
lock
je
inc
icebp
scas
ljmp
pop
out
cltd
sbb
cs
mov
adc
popf
xor
jns
and
sahf
inc
fld
ficompl
int3
sbb
lock
fmulp
shlb
mov
cltd
int3
negb
bnd
cmp
xorb
mov
push
nop
aas
mov
dec
or
xchg
or
jle
int3
push
push
test
cmp
sbb
and
in
mov
xchg
jle
adc
jp
rcrb
test
mov
fmul
out
xchg
repnz
pop
jle
shrl
and
adc
fs
enter
int
mov
inc
imul
pop
iret
call
fsubrl
add
or
fwait
ds
cs
bound
sbb
iret
xchg
pop
stc
movsl
sar
push
pop
push
inc
jmp
addl
lret
mov
cld
ja
jno
in
pop
mov
lds
push
inc
loopne
adc
push
cmpsb
into
xcrypt-ecb
cmpsl
or
aam
jmp
sub
daa
cmc
std
roll
adc
fwait
push
xrelease
jmp
in
push
shrl
xchg
cmp
bound
fwait
movsb
lret
jns
mov
das
mov
mov
push
aaa
push
pop
inc
push
dec
sub
addr16
ret
sarl
das
fdivrp
shl
sub
out
jmp
inc
sub
arpl
in
shll
add
sbb
inc
and
or
xor
lret
inc
sbb
iret
add
ja
dec
cltd
or
pusha
fsubp
out
jp
imul
js
cmp
or
adc
addr16
jns
sbb
stc
mov
mov
xchg
nop
sub
nop
xchg
cmc
adc
inc
mov
adc
fld
cld
js
negl
in
pushf
cs
dec
or
jnp
jns
pop
lods
mov
xor
hlt
test
mov
jb
mov
pop
addr16
adc
ret
push
push
scas
pop
dec
int3
xchg
stos
leave
std
jns
pop
or
leave
stos
mov
sbb
sbb
inc
inc
cmpl
ds
shrb
scas
jnp
divl
dec
add
addr16
sbb
mov
out
inc
fucomip
xor
loopne
imul
dec
sarb
sub
sub
xchg
push
jp
ljmp
mov
mov
add
nop
fcoml
sarb
xchg
jecxz
sahf
loope,pt
or
adc
cmp
adc
inc
and
andb
imul
addb
mov
out
jbe
cs
subb
int
inc
movsb
cmp
mov
cwtl
xchg
in
push
adc
lahf
pushf
xor
ss
jl
push
push
jmp
cmp
cmp
fsubs
pushf
inc
test
frstor
jp
push
mov
push
movsb
mov
cmpsl
adc
mov
xchg
xchg
and
sbb
sub
jae
sbb
dec
pop
mov
je
push
out
testb
lods
dec
push
iret
lret
loop
push
repnz
xchg
mov
lcall
adc
dec
xchg
out
sbb
loope
scas
sub
ljmp
sarl
and
idiv
iret
jnp
es
pop
ds
fildll
cmc
jb
jmp
jle
cwtl
lods
and
adcb
mov
jle
sub
arpl
scas
xor
repz
mov
dec
clc
test
add
sbb
fcoms
mov
frstor
loopne
insl
push
cmp
inc
adc
imul
sbb
push
insl
xchg
shll
sarl
or
popf
and
into
fyl2x
seta
mov
add
loop
enter
xchg
test
mov
fimull
jb
xor
loop
mov
stos
outsl
lods
lcall
in
fcomi
sar
push
daa
lds
cs
shr
frstor
pop
xchg
sbb
cmpsb
or
xchg
std
mov
inc
outsb
jle
shll
movsl
inc
arpl
add
std
cmp
xor
je
aas
rcrb
cbtw
add
loope
pushf
mov
xchg
mov
pusha
outsl
test
fimuls
mov
out
nop
xchg
jno
jo
mov
fidivrs
ds
flds
scas
insb
fisubrl
int3
pop
je
pop
insl
jl
aam
mov
xor
fs
push
es
lret
lret
mov
xchg
popf
inc
ja
fistpl
pop
xlat
out
sub
sbb
loop
cmpsb
or
jns
cmp
pushf
push
mov
xchg
filds
out
data16
mov
pop
movsl
jno
and
fidivs
add
popf
xchg
mov
xlat
jmp
cmp
nop
jnp
daa
cmc
mov
add
adc
pop
push
jne
xchg
push
jp
das
pop
cli
and
mov
pop
repz
movl
aam
subl
cmp
jno
mov
stos
adcb
insb
or
pushf
xor
std
xor
subb
jns
test
fisttps
dec
aas
repnz
stc
ds
mov
fisubl
in
cmpsl
pop
in
outsl
ficoml
mov
lea
or
loopne
pusha
mov
sbb
xchg
adc
add
lret
mov
mov
int
insl
jecxz
out
je
sarb
std
popa
cmp
inc
inc
aas
movsl
mov
sub
xor
data16
push
sti
in
or
xorl
jmp
es
mov
jle
incl
int3
mov
pop
mov
mov
inc
inc
lock
stc
adc
jae
or
xor
cwtl
sbb
pop
shr
mov
add
adc
xor
scas
and
push
mov
lcall
jmp
call
mov
lock
out
jb
in
add
xchg
cmpsb
std
sbb
xchg
push
jns
mov
ss
pop
sbb
mov
in
data16
test
jbe
popf
lcall
mov
jnp
lods
cmp
andl
and
inc
jnp
inc
add
sbb
push
leave
xchg
push
mov
rcl
jge
test
dec
and
add
and
or
das
lods
loop
adc
mov
jno
cmp
fists
lret
xor
popa
fisubs
sar
inc
mov
popf
or
jnp
pop
loope
dec
mov
and
les
pop
mov
test
or
cs
arpl
fstl
cwtl
mov
jo
std
dec
jno
pushl
shr
hlt
rcrb
shlb
gs
call
xor
xlat
pop
in
addr16
mov
clc
enter
jmp
mov
sub
sbb
repnz
cmp
enter
push
fsubrs
imul
jl
test
scas
std
std
add
sub
leave
inc
push
or
adc
sbbb
or
jns
fsts
out
sub
mov
inc
pop
outsb
jo
adc
mov
pop
push
pop
bound
mov
jb
push
clc
clc
inc
xchg
adc
mov
cltd
add
mov
add
neg
add
in
sbb
jle
into
add
xchg
cmpl
sbb
loope
mov
mov
inc
add
sub
and
mov
popf
mov
adcb
add
mov
pop
dec
das
mov
push
jnp
xor
insl
nop
enter
mov
xor
jae
mull
mov
idivb
std
push
or
pop
jns
out
fcomps
sahf
jae
stos
fs
sbb
icebp
cld
addr16
jne
in
xchg
fucomip
push
jg
std
mov
or
mov
dec
das
cmp
shlb
ljmp
into
subl
test
xchg
mov
outsl
stos
xor
sbb
push
outsb
mov
xlat
movsb
cmp
or
mov
dec
inc
in
xchg
clc
arpl
je
cmp
dec
adc
xor
jl
nopl
mov
jo
test
or
rorl
aad
cmc
stos
bound
and
jo
inc
out
mov
add
aas
fcmove
sbb
movsb
outsb
or
out
sbb
dec
push
insb
add
push
push
loop
dec
cmc
stc
cld
mov
cmc
fnstcw
out
lahf
jbe
shl
mov
insb
dec
mov
add
lret
ja
or
hlt
cltd
lods
mov
xlat
jecxz
mov
mov
sbb
jb
fwait
dec
in
out
inc
push
je
out
pop
mov
mov
jno
adc
mov
lea
testb
jbe
fbstp
push
lret
dec
push
loopne
movntq
out
aas
repnz
xchg
push
sub
mov
cmp
pop
push
pop
pop
inc
daa
sbb
push
ret
jmp
push
mov
mov
xchg
movsl
clc
addr16
cli
aad
fs
je
push
dec
fdivs
in
or
pop
lods
rcrb
loope
in
int
pop
dec
xchg
inc
inc
aad
xor
mov
daa
call
dec
sbb
adc
loop
pop
addr16
mov
add
faddl
inc
cmp
subps
push
mov
imul
cmp
push
or
sub
cmp
adc
mov
mov
push
mov
push
mov
out
pop
pop
out
cmpsb
lds
stos
jp
test
pop
popa
cs
hlt
int
add
pushfw
cmp
lret
mov
push
stos
xor
out
ret
adc
mov
test
insl
sbb
dec
push
adc
push
or
dec
or
xor
push
loopne
fstp
test
adc
pop
ja
sahf
cmp
xor
cmpsb
push
jg
mov
lods
mov
adc
inc
mov
ret
inc
mov
mov
xor
push
call
push
xchg
ffreep
push
cmp
outsl
xor
out
out
out
adc
negl
dec
sub
ds
add
mov
je
adc
push
rorb
cmp
cmp
sahf
push
pop
int
or
jne
lods
adc
jns
cltd
dec
into
xchg
and
lock
mov
cmpsl
ret
xorb
mov
lea
icebp
addr16
movsb
adc
dec
hlt
inc
call
enter
add
addb
aas
nop
sub
xchg
pop
mov
push
and
adc
push
int
or
loope
or
xor
mov
jno
inc
or
adc
add
test
ret
jle
vmwrite
xor
mov
mov
fnstcw
les
sbb
mov
mov
mov
sub
aad
out
test
leave
add
fsubr
pushf
movsl
leave
ja
mov
mov
inc
dec
ds
rolb
in
cmp
push
sbbb
popa
repnz
jno
mov
adc
gs
imul
js
xor
lods
test
clc
shrb
mov
inc
add
and
push
stos
pop
fbld
xchg
mov
mov
lahf
or
inc
bound
in
push
add
ret
xorl
fcoml
mov
push
jmp
push
inc
sbb
mov
cmp
cmp
mov
sbb
in
roll
enter
sub
push
loop
sub
in
dec
adc
push
push
add
ret
xchg
icebp
repnz
pop
push
shrb
out
dec
dec
in
hlt
pop
push
out
fcompl
jb
in
xchg
jecxz
xchg
mov
repz
jbe
cmp
ffree
mov
rcl
out
sahf
std
sbb
mul
ja
mov
pop
push
or
xor
jnp
push
dec
scas
fs
adc
mov
lret
xor
out
test
pop
dec
nop
mov
sbb
loop
enter
xor
pushf
in
xchg
push
das
jp
movsb
shr
stc
jle
mov
testb
adc
mov
aam
movsl
or
out
push
stc
in
adc
jmp
cmp
xlat
test
add
cltd
adc
lret
inc
ja
xchg
dec
stos
mov
fisubrs
ds
subl
les
das
push
in
psllq
jmp
pop
fwait
jecxz
icebp
or
iret
adc
xor
push
filds
mov
xor
das
ror
fbstp
cs
fs
scas
sbb
xor
mov
mov
push
and
push
data16
inc
and
and
adc
stos
or
hlt
shll
adc
je
jae
popf
out
rcrl
clc
leave
mov
dec
inc
mov
add
inc
and
inc
fucomip
fimuls
loop
sbb
xor
mov
and
jp
aas
xadd
sarb
mov
adc
les
pop
mov
pop
cmp
push
std
js
cmpsb
ss
movsl
lds
sub
into
test
or
stc
aad
insb
push
mov
cwtl
mov
out
xor
call
out
cmp
imul
lret
mov
lods
push
repz
cmp
std
repz
pushf
clc
outsb
dec
sti
push
ficompl
inc
pop
lcall
jge
add
lods
popf
push
testb
pop
adc
sub
or
mov
adc
ret
push
mov
pop
pop
insl
push
repnz
cwtl
icebp
xchg
or
cmp
imul
jno
xchg
xchg
std
das
add
imul
jp
test
mov
imul
xchg
cs
pop
ljmp
lret
cs
cmp
mov
inc
loope
pushf
xchg
or
inc
adc
je
and
fmuls
nop
es
xchg
fcoms
and
sub
adc
mov
jo
or
test
xor
out
jge
jecxz
sbb
fadds
out
mov
pop
in
and
and
fimuls
pop
repz
stos
clc
push
jne
mov
add
loop
inc
cltd
push
cmp
stos
sbb
xchg
stc
jae
dec
pop
sbb
mov
addr16
cld
fs
xor
mov
sub
sub
stos
cltd
cmpsl
es
sahf
inc
jle
pop
sub
pop
sub
adc
neg
adc
leave
push
and
jnp
insl
lds
bound
lds
out
xchg
or
arpl
mov
and
rorb
pop
add
test
in
in
mov
add
test
out
arpl
push
les
out
daa
mov
ja
xor
pushl
or
xchg
pop
inc
fimuls
sub
pop
popa
jbe
pop
jae
outsb
out
xchg
sbbl
stos
push
iret
mov
mov
jmp
lods
pop
push
mov
lods
ljmp
mov
or
mov
jne,pt
mov
aaa
push
xchg
movsb
jle
call
dec
sub
andb
push
ja
cmp
xchg
xchg
fnsave
pop
jnp
jo
lret
pusha
pop
ficomps
icebp
stos
or
repnz
sub
mov
mov
push
mov
lea
or
rcrl
ret
mov
int
mov
sahf
in
mov
in
test
call
jno
xchg
mov
cmp
jp
dec
fs
js
sbb
negl
jmp
ds
push
in
dec
jp
jmp
inc
xor
pushf
push
fucomip
jl
jno
cmp
ret
mov
dec
mov
arpl
ficoms
cs
pop
mov
mov
dec
push
int
mov
lods
and
insb
sub
mov
out
andl
jne
mov
cmp
pop
pusha
dec
jno
mov
loop
iret
daa
mov
fwait
insb
cmp
insl
fstpt
fstp
jo
cmc
out
stos
dec
sbb
lcall
jecxz
dec
mov
rcl
out
mov
mov
js
mov
cwtl
push
push
pop
cwtl
fdivrs
test
movhps
xchg
cmp
xchg
jne
pop
sbb
test
sub
or
sahf
ds
dec
xor
or
inc
pop
fucomip
pop
int
cs
pop
cmp
xor
lcall
mov
mov
dec
and
imul
cmp
sbb
js
mov
cmp
jg
cmp
mov
sbb
mov
dec
popa
popf
sahf
ret
gs
pop
scas
lock
aam
fdivs
stc
mov
enter
push
push
lods
add
ret
pushf
pop
mov
cmp
add
sbb
sahf
jecxz
lods
test
sub
scas
aam
addr16
leave
and
dec
add
or
leave
pusha
or
sbb
addb
xchg
inc
add
les
push
xlat
xlat
pop
ja
ljmp
loope
or
and
add
inc
xchg
dec
and
adc
out
cmp
aas
je
js
cs
push
and
cmpsl
add
outsb
jnp
aad
mov
mov
mov
and
fiaddl
and
xchg
mov
jnp
mov
mov
push
mov
cmp
jne
pop
jno
and
je
cltd
cmp
fsub
xchg
test
pop
inc
test
jbe
cmpsb
push
mov
ret
std
daa
or
scas
stos
gs
out
dec
and
int3
rolb
imul
repnz
push
loop
add
mov
dec
jg
push
call
in
out
inc
add
xor
lahf
fldcw
cmp
push
ds
add
fists
jmp
aam
cld
jne
jmp
testl
bound
mov
cltd
sti
stos
pop
or
ret
fmul
jno
iret
jo
cmp
sbb
jbe
cmp
xchg
insl
xchg
dec
pusha
pop
imul
sbb
std
jns
mov
ret
outsb
pop
loopne
out
lcall
xlat
inc
sbb
inc
inc
pop
mov
sub
cmp
popa
stos
mov
outsl
gs
sub
pop
sub
stos
loope
hlt
push
pop
mov
jmp
push
les
or
lret
pop
rorb
push
mov
push
ret
sar
nop
jg
aad
gs
lock
scas
movsb
sbb
dec
xchg
or
daa
out
inc
or
push
or
stos
fwait
test
jno
dec
pusha
fdivrp
pop
xchg
mov
das
push
mov
mov
out
cmp
leave
add
mov
leave
inc
dec
dec
rcll
dec
sbb
sbb
push
adc
repz
outsb
int
mov
icebp
mov
xor
cld
repz
inc
das
xor
call
push
mov
cld
mov
test
mov
std
ficompl
fs
and
mov
sbbb
pop
scas
xchg
adc
jne
gs
mov
lea
cmp
fisttpll
aad
mov
pop
pop
pop
into
adc
pop
push
cmp
cld
mov
add
cmp
addl
lret
inc
or
pop
mov
js
sbb
imul
shrb
pop
and
pop
pushf
pushf
mov
addb
adc
xor
sbb
mov
test
dec
and
mov
xor
and
scas
testl
repnz
push
lahf
add
pusha
in
jecxz
test
shlb
pop
pop
lea
mov
lcall
loope
xchg
inc
repz
jg
pop
xor
ss
jnp
mov
fcomi
rorb
inc
add
fldcw
and
mov
stc
push
xchg
sub
xchg
push
mov
enter
fs
jb
sbb
test
jecxz
cmp
in
aam
mov
add
mov
bound
adc
js
inc
or
mov
mov
mov
pop
pusha
jg
mov
mov
and
push
roll
sbb
mov
out
out
decl
dec
mov
testl
sub
mov
leave
mov
mov
fcoms
mov
int3
aam
and
test
adc
sahf
xchg
and
pusha
and
inc
xchg
jmp
enter
add
notl
sti
popa
leave
add
orl
mov
cs
or
int
jecxz
mov
les
popa
dec
clc
mov
mov
sbb
xchg
cmp
mov
xor
clc
push
xlat
fidivrl
pop
cmp
mov
or
mov
jns
ljmp
test
jnp
jns
mov
sahf
aaa
mov
cmp
inc
jg
ljmp
cmp
mov
dec
inc
xchg
sbb
inc
popa
push
out
daa
int
and
pop
fisubs
add
mov
mov
and
out
data16
idivl
inc
cmp
je
clc
jnp
pusha
mov
loopne
insb
pop
js
inc
mov
aaa
daa
je
mov
push
icebp
lret
loopne
fildl
mov
jmp
arpl
fildll
pusha
and
faddl
fcompl
shrl
das
pop
xchg
loop
movsl
testb
xchg
iret
mov
sbb
mov
cltd
mov
push
pop
cmp
mov
jno
xchg
inc
xchg
push
cmp
cwtl
jbe
dec
push
int
dec
fidivrl
push
dec
bound
or
mov
push
adc
mov
scas
sbb
ss
adc
push
adcl
xchg
pusha
stos
push
aaa
std
mov
cwtl
sub
pop
cmp
ja
lret
insb
pop
in
out
lahf
out
rolb
adc
sbb
pop
inc
imul
dec
daa
xor
jns
scas
jnp
out
mov
and
test
sarl
orb
in
stc
push
fdivl
jp
add
sti
call
in
pop
comiss
daa
ret
and
pop
mov
repnz
scas
cmp
std
hlt
dec
sub
jg
cmp
jno
and
jmp
dec
inc
push
leave
outsb
add
test
sbb
scas
adc
aaa
push
cmpsb
mov
cmpl
sub
and
pop
ss
or
mov
sbb
add
cld
push
pop
cmp
sub
rorl
fimull
ljmp
push
dec
mov
push
xor
and
insb
je
cs
push
ja
inc
lds
jno
pop
jno
jge
jae
jl
pop
jo
cmpb
mov
dec
addr16
mov
xchg
outsl
pushf
mov
xor
out
jmp
xchg
stos
mov
and
xchg
lret
cmc
adc
je
pushw
pushl
jbe
or
dec
mov
xchg
aas
lret
or
xchg
lods
mov
and
dec
push
xchg
das
out
xlat
mov
jbe
pop
fs
adc
icebp
and
ja
pop
idivl
out
sbb
push
sub
push
shlb
xor
xor
clc
pop
fidivrl
lods
call
xchg
inc
and
insl
cmp
sbb
or
cwtl
push
lods
push
test
mov
sti
and
repz
sbb
fcomip
xchg
fdivl
add
dec
cmp
shlb
shr
out
mov
or
xchg
xchg
loope
iret
cmc
shrl
push
fcoms
or
and
and
mov
dec
jnp
mov
inc
and
dec
add
mov
dec
mov
hlt
lods
fisubl
jo
pop
adc
das
jmp
cmp
clc
inc
jle
mov
adc
pop
repz
or
fs
dec
or
jbe
andb
ds
push
into
insb
xchg
stos
xor
adc
mov
jmp
or
mov
jae
bound
fnstcw
sahf
pop
popa
movaps
xchg
cmp
sub
or
icebp
call
leave
mov
dec
push
or
outsb
fdivs
rclb
pop
cmp
jb
add
test
js
shlb
mov
arpl
pop
cwtl
addr16
add
push
scas
mov
adc
inc
xor
dec
sub
and
mov
adc
pop
pop
mov
pop
add
jb
or
psrlq
mov
mov
ds
pop
lcall
in
dec
aad
pop
imul
lods
sbb
out
movl
test
jg
orb
cli
sub
cmpsb
je
mov
pop
lcall
xchg
push
in
test
les
hlt
adc
push
loope
out
setae
fcomps
ss
mov
xchg
repz
xchg
add
loopne
cmp
lods
adc
mov
sub
push
decb
inc
mov
out
loopne
mov
pop
pushf
mov
cmp
in
cmpsl
cmpsb
xor
lods
xchg
aas
imull
mov
dec
mov
loope
push
push
rorl
repnz
mov
and
iret
lret
add
packssdw
push
mov
mov
rcl
push
jns
sbb
shlb
push
mov
cmpsb
push
mov
int
cmp
lock
xchg
and
insb
ret
fnstenv
xor
jle
loope
cmpsl
xchg
inc
xor
mov
push
mov
scas
fwait
cmp
pop
cmp
ja
jbe
imul
dec
ljmp
ss
push
ret
lcall
push
mov
lret
shr
inc
cmp
pop
xchg
mov
ljmp
lret
stos
mov
ja
fdivs
bound
leave
jg
out
mov
mov
decl
pop
inc
adcb
xor
ljmp
pop
lret
push
mov
in
fiaddl
xchg
add
rclb
shll
add
sbb
dec
xor
xchg
push
outsb
dec
in
or
cld
sub
out
xor
or
adc
jecxz
or
jnp
leave
inc
scas
sti
outsl
fs
out
insb
xchg
cmp
fiaddl
test
push
adc
add
lods
pop
cwtl
xchg
xchg
xchg
adcl
and
enter
dec
push
popl
stc
ret
out
add
jg
arpl
fcomps
mov
test
insb
outsb
sub
pop
or
or
cld
mov
or
mov
rorb
scas
jge
loopne
cli
int3
add
lahf
dec
jne
add
and
ret
cmp
or
mov
out
xchg
inc
lock
js
or
test
jl
lods
push
jns
cs
mov
aam
or
cmp
test
inc
add
data16
push
sbb
shrl
iret
inc
lea
jge
cmp
xchg
fdivs
jbe
jmp
cli
push
mov
jns
xor
aad
lret
cmp
lds
jmp
sub
xchg
mov
mov
stc
fsubl
shll
imul
xchg
int3
data16
add
or
outsb
inc
sbb
mov
insl
sbb
sbb
sti
out
mov
sub
pushf
sti
push
mov
mov
cmp
jns
out
or
sbb
jg
repz
or
icebp
or
jge
pop
pop
xchg
xchg
dec
andl
dec
scas
mov
add
adc
movsb
and
aaa
dec
clc
xor
mov
stos
repz
sub
addb
ss
sahf
sbbl
or
mov
icebp
out
and
faddl
pop
ds
stos
pop
iret
pushf
sub
push
insl
sahf
mov
push
add
xor
in
fmuls
sub
mov
sti
mov
nop
ror
dec
and
jge
inc
cmp
push
jbe
rorl
mov
adc
lahf
jae
lret
sti
mov
pop
cwtl
mov
add
mov
adc
sbb
add
dec
mov
xchg
xchg
xchg
xor
mov
push
fsts
push
stos
push
mov
push
movsb
popf
mov
cmc
fwait
xchg
popf
mov
sbb
adc
add
adc
and
nop
pushf
std
xlat
xor
cli
push
add
pop
in
pop
mov
insl
xadd
mov
and
movsl
mov
inc
add
ret
inc
sub
in
lods
jns
sub
mov
popa
fiadds
les
xchg
and
loope
inc
inc
lcall
xchg
pop
pop
fsubl
jns
jno,pt
mov
or
jns
insl
cltd
cwtl
daa
cwtl
sbb
cmp
stos
lahf
mov
shlb
push
ss
jmp
es
cs
sahf
shr
into
dec
cmc
dec
sub
jmp
fsubr
xorb
xchg
push
js
xor
push
pusha
cmc
lahf
into
inc
shrl
ret
jg
lahf
push
ret
mov
lock
cmp
ret
inc
mov
mov
lods
sbb
andb
push
sub
pusha
jae
mov
inc
inc
add
sarl
arpl
add
ss
dec
fcoms
dec
inc
push
push
cmp
sbb
push
ror
aaa
int3
mov
aad
push
rol
out
xchg
jae
jecxz
loop
sbb
sahf
out
and
xchg
adc
push
dec
std
stos
fiaddl
pop
das
clc
mov
ja
push
lock
pop
mov
adc
xchg
inc
add
fisttpl
lcall
and
or
leave
mov
sahf
jmp
rcrl
fidivl
mov
inc
cli
sub
or
mov
xchg
jb
shr
add
mov
and
dec
push
xchg
mov
scas
loope
adc
and
lret
je
xchg
mov
insb
jle
enter
negb
outsl
popf
mov
and
and
mov
in
mov
mov
sub
sub
sbb
ljmp
adc
fs
jb
push
sub
push
jle
xor
lods
cs
or
push
iret
mov
repnz
sti
in
lret
mov
cwtl
sbb
movsl
outsb
lahf
loop
dec
jge
xchg
mov
mov
jne
push
jne
cs
seta
cmpsl
dec
jbe
jns
pop
sbb
jae
mov
sbb
fstps
dec
or
push
insl
sbb
fs
fs
push
loope
es
fcoml
adc
sub
sbb
jecxz
dec
rcrb
loop
push
mov
xchg
or
sbb
clc
in
rclb
or
sbb
in
iret
pop
mov
outsb
pop
xchg
subb
gs
or
mov
test
mov
or
or
fwait
push
jne
dec
aas
push
addb
jbe
aam
adc
test
shld
cs
imul
sbb
jae
mov
cmp
xlat
rcll
jno
subl
out
xchg
push
in
push
xchg
loop
popf
fwait
adc
sub
rcrb
xchg
fcmovne
or
xor
mov
push
dec
lcall
sbb
ljmp
inc
mov
cwtl
jnp
cmpsb
stc
pop
jns
jle
out
adc
les
fwait
sarl
repnz
mov
hlt
pop
pushf
aas
mov
std
les
mul
mov
test
andl
stos
js
add
mov
mov
stc
adc
dec
dec
dec
sub
gs
mov
or
shl
push
jg
shl
push
mov
pop
jbe
jns
iret
xchg
inc
xchg
sub
and
xor
hlt
std
xor
xlat
icebp
sti
jno
xchg
ds
icebp
xchg
xor
push
xlat
cmp
lret
push
repz
vucomiss
ljmp
sub
stc
enter
mov
rcll
outsl
jp
inc
mov
mov
cmp
out
inc
das
jae
shr
mov
ljmp
cmp
cmp
inc
out
ret
loop
xlat
fwait
jp
outsl
loop
pop
int
mov
adc
cmp
cmp
sub
inc
enter
cmp
in
cwtl
sub
push
inc
icebp
pop
jne
fcoml
mov
inc
aaa
insl
aam
scas
fcom
pop
cmp
into
stos
mov
adc
je
sub
pop
dec
in
mov
cmp
dec
add
jecxz
push
xchg
sbb
andl
mov
mov
sarl
or
sbb
pushf
arpl
mov
icebp
aam
xor
fxch
xchg
shrb
out
lods
aad
fstp
je
mov
popf
push
sub
repnz
bound
mov
fcoms
ror
in
and
and
hlt
push
and
outsl
orb
pop
mov
sbb
push
lahf
lahf
mov
push
or
inc
lods
or
sub
int3
mov
xchg
lods
aad
mul
cmpsb
aaa
popf
iret
lods
pushf
scas
popa
test
jb
xchg
mull
sti
sub
mov
mov
out
stos
mov
mov
adc
add
sub
cmp
pusha
pop
mov
mov
shrl
fsubl
lahf
sub
xchg
sbb
ss
and
ds
movsb
mov
cmpsl
push
insl
fwait
inc
mov
cmp
jbe
in
stc
inc
or
das
data16
mov
mov
jmp
lock
sbb
add
adcl
push
cmpsb
fsubl
enter
mov
sbb
inc
mov
cli
aaa
rcrb
out
mov
lahf
mov
icebp
xor
mov
mov
into
cmp
xlat
pop
jmp
lahf
inc
movsb
inc
test
stc
std
jae
push
aaa
aam
jo
xchg
xchg
xchg
and
popf
sbb
data16
sbb
in
xchg
ds
in
jo
mov
int
and
mov
cmp
xchg
pop
imul
push
mov
cmp
rcr
call
cmp
jne
pop
mov
aas
xchg
ljmp
inc
adc
sbb
test
seta
js
icebp
jle
psubusw
iret
ds
xchg
inc
add
push
mov
cmp
pop
mov
mov
and
adc
mov
jmp
cmp
out
dec
push
push
mov
subl
aad
sbb
or
fstpl
mov
das
popl
clc
pop
cmc
dec
call
jg
int3
cmp
add
pushf
rcrb
push
sbb
mov
jge
popa
nop
fldcw
mov
js
stc
push
jbe
pop
sbb
add
pop
cmc
mov
cmp
xchg
dec
jle
push
or
std
and
dec
in
outsl
mov
dec
addr16
or
popa
xor
push
cmp
pop
sub
sbb
inc
cmp
pop
sub
nop
mov
ficoml
lret
idivb
fstl
cld
push
cmp
call
outsb
imull
dec
jg
dec
loope
jle
jno
or
add
or
sbb
andb
push
pop
flds
xchg
insb
pop
cwtl
and
mov
fstpl
in
push
cs
lods
shrl
pop
xchg
push
lock
leave
call
xchg
pop
jp
add
rorl
dec
leave
mov
mov
pop
pushf
fsubl
out
outsb
jp
lds
push
cwtl
stos
inc
leave
sbb
bound
jg
and
mov
pop
lret
dec
movsb
and
xchg
mov
test
inc
and
sbb
fstl
cmp
dec
xchg
jl
lds
stos
rorl
call
mov
loop
xchg
in
lods
dec
inc
popa
add
imul
cmp
xchg
aaa
pop
pop
das
mov
xchg
into
mov
ljmp
rorb
cmp
leave
push
loope
fbld
bound
push
push
out
in
sub
dec
pusha
mov
mov
inc
repz
adc
movsl
dec
adc
test
adc
dec
pop
test
imul
int3
mov
mov
add
bound
in
ficoms
jg
stos
pop
add
das
cltd
and
dec
jp,pt
xor
lret
les
cs
mov
or
push
movsb
shll
cmpsl
dec
dec
xchg
push
mov
push
add
popf
xor
or
and
dec
push
or
leave
push
notb
push
push
stos
and
adc
clc
mov
imul
mov
in
call
filds
or
sub
jl
out
pop
pop
inc
aad
int
ret
push
pop
cmp
rcrl
lahf
jns
int3
hlt
aad
xor
or
push
mov
shll
jae
movsb
popa
sbb
ljmp
jo
mov
cmp
lahf
or
pop
push
subl
imul
aad
stos
cmp
out
rcr
pop
jb
mov
mov
push
mov
jmp
loop,pt
shll
cmp
sbb
cltd
std
scas
sbb
push
in
cmp
or
and
xor
and
sbb
test
lods
fadd
dec
adc
lcall
mov
lret
mov
das
pop
dec
in
out
jp
in
pop
push
mov
cmp
loopne
out
rolb
sub
push
inc
ror
mov
out
push
mov
pop
hlt
lret
movsb
dec
daa
push
enter
popa
je
lahf
pop
imul
sahf
clc
daa
cmp
and
mov
int
scas
out
push
add
aad
shll
out
filds
out
cld
psrlw
cwtl
fwait
dec
arpl
scas
mov
and
sub
in
fimull
mov
lea
mov
daa
leave
fs
arpl
xchg
sub
loop
jne
fidivl
sbb
or
fiadds
cmp
dec
loop
lea
in
xchg
pop
dec
sar
or
xor
cmp
jo
rolb
scas
arpl
mov
xor
nop
cwtl
pinsrw
lahf
ljmp
and
std
jae
es
fidivl
cmp
nop
sub
ja
mov
lds
lcall
xchg
lret
jge
in
movsb
loope
xchg
push
dec
inc
bts
lea
jl
and
repnz
int3
inc
lods
inc
cmc
pop
or
jmp
popa
dec
outsl
jne
mov
xchg
add
stc
fwait
mov
xchg
stos
daa
cmpl
cmp
mov
rcll
fdivrl
pusha
or
fcmove
or
scas
arpl
pusha
inc
icebp
repz
lcall
push
cmc
in
in
add
cmp
stos
loope
push
add
mov
test
xchg
adc
scas
inc
fisttps
loop
not
inc
stc
stc
push
add
jecxz
insl
xchg
push
dec
clc
push
test
pop
pop
js
or
and
mov
cli
push
jo
repnz
push
jo
jae
test
ljmp
jae
adc
int3
mov
push
pop
cmp
sbb
mov
xchg
in
dec
sbb
inc
lods
or
rorl
lret
and
repnz
dec
popa
inc
sti
mov
xchg
sbb
lret
mov
sbb
push
dec
pop
adc
out
or
xor
rcl
sbb
cmp
loope
adc
mov
pop
jecxz
mov
add
xchg
es
adc
sbb
leave
add
out
fmuls
sub
xchg
lret
dec
lods
pop
rorb
icebp
mov
cmc
sar
mov
dec
xor
bound
jo
push
imul
cmp
lret
nop
ficoms
scas
mov
mov
dec
popf
out
sti
ss
ret
jmp
sbb
cs
imul
adc
lret
cmp
inc
pop
loope
sbb
outsb
add
movsb
xor
fxtract
xchg
sub
sbb
cli
add
aam
sbb
shlb
mov
pop
pop
xchg
push
bound
xor
test
cmpsb
cmpsl
push
testb
addr16
out
mov
fsubrs
pushf
lcall
loope
cwtl
in
in
nop
jo
push
mov
mov
leave
rorl
cmp
fcmovnb
nop
sbb
fnstsw
mov
dec
mov
adc
aam
xorl
clc
out
lcall
cmp
out
xor
push
and
scas
std
shrl
test
xchg
stos
mov
cmp
add
sub
pusha
movsl
imul
lods
push
sub
cmp
jp
push
rolb
gs
sahf
add
adc
xor
ret
in
sbb
cs
dec
cltd
push
mov
jmp
pop
shl
mov
shlb
push
out
push
arpl
pop
jg
xchg
xchg
push
mov
es
ja
mov
jp
in
sbb
shlb
jb
clc
jg
repnz
adcb
jbe
push
jp
add
pop
jae
inc
lcall
dec
pushl
outsl
mov
bound
dec
es
fsubrp
pop
bswap
sbb
cmp
mov
aas
pop
incl
nop
fdivl
lahf
cmp
imul
or
or
das
test
flds
cmp
pop
mov
adc
ss
mov
add
xchg
and
xchg
loopne
into
sbb
enter
mov
cmp
push
pop
mov
cmpsb
out
lods
aaa
imul
aaa
fdivp
stos
cmpsl
sub
push
inc
push
push
daa
xchg
mov
enter
arpl
movsb
mov
or
sub
dec
mov
rorb
imulb
sbb
mov
mov
lahf
inc
push
jbe
pop
js
icebp
fstps
push
aam
pop
pop
mov
aas
push
cmp
inc
sub
scas
cmp
pop
btsl
fcmovnu
push
pop
fnstenv
sbb
repz
movsl
cmp
popf
mov
fbstp
lds
icebp
loop
push
in
repz
sub
std
mov
enter
fists
add
mov
or
mov
das
arpl
cmp
je
add
add
paddw
cmp
leave
stos
stos
lds
or
mov
mov
cmp
scas
jne
es
hlt
stc
jl
add
dec
loope
aaa
cwtl
adc
in
jge
sbb
push
cltd
inc
dec
lahf
cwtl
xchg
movsl
pop
idivb
inc
cmp
add
aad
add
adc
test
sarl
push
dec
aas
xchg
mov
fisubrl
int3
lahf
rcrb
scas
or
jb
cmp
push
add
outsb
fcomps
sbb
pushf
mov
outsl
cmp
sbb
shll
push
jp
outsb
dec
aaa
and
pmulhuw
jns
imulb
adc
jle
repz
fidivl
push
daa
std
jno
dec
sub
dec
adcl
adc
and
test
repnz
or
fxtract
mov
adc
jecxz
xchg
in
pop
mov
and
cmpsl
lods
into
adc
cltd
popa
pop
xor
dec
insl
dec
sub
jno
out
jmp
inc
lcall
dec
fsubl
mov
xchg
fnstsw
cmp
dec
imul
sbb
xchg
pop
inc
xchg
mov
sbb
mov
sbb
out
into
sbb
rcrb
adc
insl
sbb
mov
push
pop
loopne
outsl
and
mov
xchg
int
ja
ret
mov
iret
test
sahf
mov
fprem1
jnp
pop
xchg
add
pop
scas
pop
test
in
test
mov
mov
icebp
push
cmp
imull
dec
and
int
jo
ret
leave
push
cs
test
mov
fiadds
mov
dec
dec
dec
adc
aaa
push
jle
mov
dec
addr16
ljmp
in
fmull
movsb
ja
cmp
mov
imul
cs
jle
in
cmpsb
call
es
dec
jbe
clc
sub
and
cmpsb
sub
mov
mov
jecxz
push
xor
mov
repz
sub
aad
adc
or
mov
or
jne
pop
fdivrl
and
andb
lret
jns
js
mov
and
mov
test
es
out
js
leave
mov
push
mov
sub
adc
add
call
scas
je
pop
pop
mov
and
jecxz
ljmp
addr16
fdivrl
popa
push
sbb
inc
adc
jnp
lcall
mov
mov
push
sbb
fwait
cs
fsts
add
jp
testl
fimuls
or
lods
sub
cwtl
xchg
or
mov
jmp
xchg
adc
loope
lret
sub
lods
scas
sti
pop
addr16
jb
mov
inc
scas
imul
loopne
cmp
inc
xchg
pop
mov
ds
xlat
mov
push
dec
add
inc
bound
enter
mov
mov
xchg
mov
inc
adc
ret
adc
pop
xor
loop
cmpsb
push
fisttps
popf
jg
xor
push
cmp
adc
push
push
in
ljmp
cli
call
cmp
sub
fwait
push
ss
xchg
add
insb
pop
push
inc
mov
mov
add
dec
arpl
pop
add
and
je
mov
std
cmp
mov
imul
mov
push
mov
ja
dec
daa
out
mov
xchg
shll
subl
xor
repnz
daa
insb
push
clc
jle
arpl
pop
imul
mov
outsl
ds
mov
loopne
aas
out
rcrb
mov
mov
shrb
pop
push
and
xchg
repz
inc
aas
rorl
jle
data16
call
sti
leave
in
push
sub
ss
xchg
mov
jp
dec
imul
mov
sbb
dec
adc
jno
mov
jg
pop
pushf
subl
or
mov
stc
mov
sbb
movsl
ret
arpl
cmc
push
orb
in
pop
orb
movsl
xor
add
xor
rol
mov
es
push
aaa
jg
dec
fldpi
mov
fnstcw
cwtl
add
xor
lahf
push
jbe
adc
fidivl
dec
mov
mov
stos
mov
cmc
aam
sbb
outsb
pop
aas
mov
sbb
xchg
adc
mov
loopne
dec
inc
push
xlat
test
ret
xchg
inc
adcl
inc
inc
xor
fisubrl
mov
inc
xor
lds
sbb
test
dec
lea
push
mov
cmp
filds
mov
dec
xchg
outsb
std
mov
in
sarb
lods
push
push
pop
adc
std
into
bound
jne
mov
movsl
or
out
das
test
outsb
stos
and
cmp
pop
int
int
mov
insb
cmpsl
imul
add
and
sbb
popl
aaa
ss
mov
hlt
or
sub
addr16
xor
dec
sub
pop
sbb
or
or
dec
xorl
fwait
sti
mov
leave
cmp
fnsave
shl
xchg
mov
pop
xlat
int
or
enter
fsubl
ljmp
mov
jo
inc
xchg
adc
stos
sarl
hlt
inc
add
movsb
mov
sbbl
mov
into
out
iret
sti
xchg
aam
add
add
out
inc
push
jecxz
test
inc
aam
sub
and
es
out
jmp
xchg
bound
loop
cs
hlt
call
lods
je
adc
inc
es
orb
add
fucomp
mov
pop
ds
and
and
or
adc
jne
and
cmpsl
js
and
jnp
cmp
ss
js
inc
mov
mov
adc
inc
test
mov
into
push
sub
ret
jecxz,pn
repz
jl
pop
aam
leave
xor
and
in
add
pop
and
jle
imul
fdivrp
xchg
pop
pop
lea
pop
push
jae
mov
nop
xchg
sub
xchg
test
in
or
icebp
test
rorb
fwait
into
int3
xchg
imulb
loopne
push
push
arpl
rcr
jno
pop
fldenv
mov
dec
xor
pop
cs
scas
inc
loopne
xor
shrb
or
sub
leave
or
inc
divb
pop
outsb
sarl
pop
loope
jmp
in
fidivl
jle
stc
jecxz
jp
lods
fsubrl
lock
pop
cmpsl
xor
mov
or
xchg
push
lods
or
inc
sub
jns
loopne
mov
xchg
loope
icebp
xchg
mov
in
fistpll
sub
push
cmp
pop
fisubrl
scas
pop
adc
sub
nop
push
int
jmp
jbe
sub
in
std
cmp
mov
data16
jecxz
mov
call
sahf
lcall
out
loopne,pt
sbb
sub
test
pop
movsl
fiadds
sub
xchg
dec
clc
dec
fnsave
pop
jbe
pusha
and
or
mov
popa
mov
adc
es
cli
or
dec
scas
test
sbb
pop
or
sbb
mov
pop
je
test
xor
jl
pop
jno
pop
cld
jg
xor
adc
jp
stos
ljmp
jl
push
iret
xchg
into
push
push
dec
push
add
cmpl
lods
mov
sub
shl
fdivrl
inc
mov
cmp
ja
movsb
mov
ficompl
loope
pop
notb
mov
jns
jmp
dec
push
outsb
mov
inc
ror
jg
insl
push
shll
push
add
cmp
jne
das
add
cmp
add
cmp
outsb
mov
ss
fcmovnu
dec
and
sbb
or
out
mov
pop
mov
pop
push
jne
idivl
push
or
inc
shlb
sub
hlt
sbb
mov
mov
fstp
jg
movsl
lock
or
and
push
aas
inc
inc
cmp
mov
push
ret
cmpsb
loope
aaa
hlt
add
ret
stc
xchg
sbb
in
mov
pop
sbb
inc
cwtl
filds
fldcw
sbb
pop
stos
addr16
mov
jb
push
sbb
jnp
mov
mov
fiadds
gs
leave
jo
add
mov
lcall
std
out
pop
push
mov
leave
mov
xchg
push
dec
imul
xlat
outsb
lds
add
ror
imul
notl
and
fs
subl
fdivr
or
sbb
js
lret
or
pusha
mov
mov
enter
sahf
mov
gs
xor
push
lock
push
adcl
pop
inc
fstpl
fbstp
adcl
fadds
xor
hlt
popa
stos
pusha
sub
pushf
and
mov
mov
hlt
cmp
xor
adc
mov
and
arpl
jmp
cs
enter
jecxz
fwait
test
jge
int3
push
xorb
sbb
cmp
arpl
adc
scas
stc
int3
iret
test
nop
in
dec
fwait
jp
mov
cmp
stos
aad
mov
lret
mov
mov
add
push
cmpsb
rorl
sub
fldl
adc
imul
out
lret
outsl
mov
mov
jmp
cmp
push
xchg
inc
inc
sub
decl
out
mov
aam
outsl
je
les
out
cmp
ret
mov
xor
sbb
mov
adc
cmpsl
ret
jp
or
jle
sarb
stos
mov
stc
repz
out
cli
mov
pop
push
inc
cld
dec
sbb
push
xor
push
cmp
and
mov
les
mov
add
mov
lods
outsl
lcall
ja
xor
leave
jae
es
gs
fldt
pop
xor
cld
add
xchg
fisubs
jp
mov
int
les
or
fcomps
dec
jmp
cmp
ljmp
aas
sbb
push
popa
ss
add
out
add
test
lods
lock
int3
or
lods
fimuls
std
pop
adc
inc
bound
outsl
js
andl
and
xor
pop
test
mov
xchg
cmp
mov
sti
cmpsb
into
xchg
pop
cmp
adc
enter
sbb
mov
test
aaa
adc
int
mov
pop
dec
sub
les
inc
in
dec
call
sahf
shl
mov
repz
pusha
int3
jae
std
jne
ja
rol
pop
inc
mov
notb
sub
hlt
ret
push
int
imul
xor
and
sbb
in
es
pop
dec
pop
xchg
aam
adc
in
lods
cmp
push
addb
leave
arpl
test
add
cmp
ss
jb
push
mov
stc
pop
mov
rol
mov
or
ss
xor
adc
out
jp
movsl
jmp
das
roll
lock
fcomps
fwait
nop
jp
jg
xchg
dec
mov
enter
les
xchg
jbe
outsb
test
cli
pop
adc
jb
or
out
mov
mov
fs
aam
pop
popf
iret
js
movsl
sbb
es
aas
or
push
and
cmpsb
jle
mov
xlat
inc
mov
and
or
pop
mov
addr16
lds
pop
cmp
mov
sbb
aam
aam
dec
jmp
dec
add
pop
adc
cmp
jo
xor
call
pop
jg
sti
idivl
inc
pusha
adc
push
pop
mov
je
push
int
mov
adc
or
fwait
mov
jne
xchg
cmpsb
xchg
jg
jno
pop
ljmp
dec
jmp
jp
xchg
mov
pop
dec
inc
leave
or
div
mov
or
aas
xor
jno
cmpsb
push
and
movsb
movsb
outsb
mov
ss
cmp
push
push
shrb
sbb
mov
nop
daa
loope
outsl
xchg
xchg
xchg
addr16
inc
sub
jo
test
fldt
push
push
sub
sbb
inc
jge
add
mov
add
in
movsl
dec
jp
inc
ret
lea
or
orb
outsl
dec
popa
mov
aaa
adc
arpl
fidivrl
or
sub
scas
xchg
pop
mov
call
dec
ja
fidivl
lods
adc
push
and
flds
push
out
ss
inc
outsb
and
ret
lahf
adc
cld
and
jecxz
movl
insb
or
push
add
xor
lods
cs
and
imull
rcpps
outsl
ljmp
leave
sahf
sub
xchg
ret
fbld
adc
aad
inc
test
dec
pop
cmp
fmull
cmc
cmp
mov
mov
out
es
mov
mov
ret
xchg
adc
or
cmp
pop
xor
xchg
sbb
sub
mov
les
sarl
jmp
es
jge
mov
mov
adc
into
mov
adc
lods
pop
xor
sbb
mov
xor
fstpt
enter
jae
jnp
popf
mov
adc
and
inc
xlat
dec
adc
pop
cmpsl
out
in
or
rcrl
insb
pop
je
repz
sbb
fsubrl
sbb
inc
or
pop
lods
insb
cmpsb
insb
xchg
dec
sbb
dec
sbb
stc
leave
scas
mov
inc
pop
jge
int3
mull
pop
sbb
inc
and
or
ficomps
add
mov
push
mov
xorb
xchg
call
repnz
mov
xchg
push
pop
dec
int3
lret
inc
mov
aaa
mov
mov
adc
jo
mov
addr16
cmp
ss
push
sbb
pop
add
ja
adc
bound
incl
pop
outsl
mov
popa
pop
rcl
cli
insl
mov
push
mov
inc
mov
das
hlt
jae
bound
add
lret
sbb
int3
pop
sub
arpl
cmc
pop
fisttpll
fwait
add
aam
pop
leave
aam
aam
cmp
push
push
cwtl
and
orl
scas
xlat
lcall
js
pop
daa
mov
mov
call
lret
xor
idivb
cli
sbb
rcrb
cmpsl
sti
int3
test
out
lahf
in
pop
mov
adc
sub
outsl
in
push
sahf
cmpsl
js
pop
cmp
stos
sub
testl
jb
ja
adc
cmovno
adc
jmp
nop
repnz
repz
popa
arpl
push
lds
mov
fdivr
adc
ds
mov
sar
push
into
fistpll
cwtl
loope
shrb
call
ror
add
psrlq
stos
mov
test
adc
push
addr16
add
jp
jmp
shr
inc
lret
push
das
push
mov
pop
jecxz
cmpsl
clc
in
sbb
inc
fnstsw
push
test
pop
pushf
stos
sbb
sahf
mov
ljmp
cmpsl
xor
enter
pop
xlat
stos
aas
mov
pop
fcompl
stc
imul
and
mov
aas
jl
pop
hlt
xchg
dec
faddp
pop
pop
in
xlat
sbb
popa
dec
gs
in
stos
lea
test
sub
sahf
mov
and
adcb
shrl
aam
stc
fsts
call
cwtl
pop
lret
or
push
jp
fsubrl
add
ds
adc
call
inc
push
add
jg
inc
test
pop
sbb
xor
xlat
jmp
repnz
pusha
jo
out
cmp
repnz
inc
sahf
xchg
ljmp
xor
int
iret
loope
insl
mov
pushf
adc
pop
cmp
cmpsb
add
bound
int3
test
lods
sub
ds
mov
std
lret
loope
cmp
jl
inc
xor
ret
stc
inc
dec
push
push
jns
lods
cmpsl
fs
pop
fisttpll
xlat
scas
outsl
imul
js
daa
cmp
mov
movsl
imul
mov
jg
dec
aad
repnz
jae
push
and
fstpl
mov
push
sahf
pop
push
cmp
lahf
movsb
fistl
lock
dec
out
sbb
dec
add
pop
add
inc
pop
dec
and
fadds
push
or
jns
xorl
or
mov
xor
push
loopne
inc
push
mov
mov
pop
pushf
stos
pop
test
ljmp
out
cmp
lock
cmpsl
dec
pop
adc
mov
cmp
cmp
push
jge
dec
sbb
daa
xlat
mov
cmp
out
aaa
dec
es
aad
sub
sbb
and
pop
insl
pop
xor
addb
push
inc
popf
mov
mov
gs
xchg
push
adc
in
jnp
xor
xchg
addr16
stc
dec
pusha
nop
sar
outsl
ljmp
or
jbe
in
incb
pop
sbb
lret
lock
loopne
jno
cmp
call
or
icebp
mov
pop
insb
mov
xchg
pop
adc
lods
and
pop
imul
pusha
inc
insb
fcompl
mov
lea
popa
mov
daa
jo
sub
and
clc
cmpsl
daa
sti
mov
sarb
xchg
xor
shll
aaa
pushf
xchg
frstor
and
cmp
push
sbb
sub
fiadds
pop
sub
add
push
imul
dec
push
test
insl
jo
push
outsl
insb
inc
dec
stc
jno
push
xchg
sti
sbb
and
out
nop
stos
mov
dec
xchg
add
add
dec
xor
dec
cli
push
adc
mov
ds
mov
cld
cli
inc
sub
dec
jle
add
adc
movsb
xchg
lock
imul
adc
into
xor
out
in
loope
test
test
setns
pop
std
mov
xchg
addr16
loopne
xor
pusha
jge
loop
repnz
mov
or
add
pop
lahf
clc
push
cmc
sbbl
cld
mulb
xor
or
mov
jge
lret
push
addl
and
mov
cmp
inc
in
inc
lock
cli
push
scas
push
sub
pop
cld
outsb
pop
pop
loop
pop
inc
imul
ds
mov
mov
int3
sub
push
mov
je
mov
adc
dec
dec
dec
inc
xchg
repz
rcl
mov
and
mov
pop
push
xchg
pop
mov
iret
rcll
push
scas
adc
jmp
dec
imul
stc
insb
jmp
jnp
cmp
dec
movsl
mov
les
das
fistps
in
xor
mov
dec
and
push
lods
imul
add
in
mov
mov
push
in
test
or
gs
stos
out
dec
sarb
fcmovu
mov
pop
into
out
mov
fstpl
sbb
xchg
pop
clc
mov
je
xchg
popf
out
sub
rcrb
ja
mov
aam
filds
insl
xchg
push
pop
mov
mov
outsb
popf
lcall
scas
inc
jo
aad
mov
rol
xor
add
ljmp
adc
sbb
out
insl
insl
push
lret
mov
in
aad
pop
cmp
stos
pop
xchg
repnz
cmp
dec
sti
out
xor
or
xchg
out
stos
daa
mov
and
xchg
xlat
cs
in
sub
sub
cs
fisubrs
adc
cmp
dec
std
mov
cmpsb
cmpsl
mov
or
adcl
add
pusha
sarb
mov
pop
int
sub
iret
and
clc
pushf
and
ret
fnstenv
repz
orl
push
testl
test
mov
fldl2t
mov
dec
inc
lea
cmp
mov
fwait
outsl
fldl
sbb
movsl
push
jge
cmp
mov
dec
int3
jnp
lods
push
std
push
cld
neg
or
ja
sti
negl
in
jg
jle
test
mov
mov
ds
push
pop
pop
into
mov
mov
push
jnp
push
inc
int
push
push
ret
sbb
js
in
bound
dec
or
cmc
call
repz
dec
lods
jne
jne
and
add
movsl
sbb
test
or
sbbb
jo
int
cmp
or
lret
pusha
sbb
dec
cwtl
mov
adc
or
push
ljmp
add
and
enter
stc
or
mov
xchg
inc
lret
pop
call
rorb
xor
sub
incl
xor
mov
jle
jne
in
xchg
loop
mov
fidivrl
int3
cld
sti
test
xor
mull
ret
inc
pop
std
mov
test
aad
inc
clc
or
mov
jg
push
movsl
pop
outsb
jne
dec
icebp
cli
movsl
cmp
lret
insb
and
fs
icebp
shll
pop
pop
or
popf
xchg
dec
cmp
ret
in
fwait
call
xchg
lock
sbb
mov
cwtl
mov
dec
jb
pop
mov
jecxz
lret
lds
pusha
repz
push
outsb
mov
and
mov
stc
fwait
push
std
jge
mov
pop
mov
out
shrl
cld
mov
in
push
scas
pop
js
out
mov
sub
inc
inc
cmp
pop
adc
push
pushf
inc
adc
and
aad
adc
mov
repz
std
lods
hlt
dec
mov
push
mov
pop
lret
mov
dec
and
clc
push
or
lret
inc
mov
cmp
xchg
xchg
imul
inc
cwtl
lahf
aam
cmc
nop
mov
adc
retw
add
aas
or
and
es
and
dec
data16
push
and
cmc
mov
cld
jle
or
cmc
xchg
aaa
scas
shrl
mov
sbb
sub
xor
dec
cmp
scas
pop
dec
in
mov
dec
outsl
cmpb
xor
fldl
stos
stc
xchg
test
xor
movd
enter
sahf
adc
daa
je
xorl
pop
add
call
xchg
into
repz
mov
inc
lea
or
push
aam
mov
fadds
clc
xchg
jp
dec
in
pop
sbbl
cs
fisttps
jno
fwait
push
mov
pop
movups
mov
mov
fidivrl
mov
xor
fcomi
mov
imul
mov
les
lahf
stos
or
cld
sarl
psubq
sub
pushf
add
fidivl
xchg
mov
stc
or
or
shrb
lods
std
daa
ficomps
fsubrl
loope
int
nop
daa
mov
jge
jnp
add
xchg
pop
nop
pusha
mov
pop
or
mov
pop
mov
stos
push
jmp
das
push
mov
pop
mov
jl
push
decl
pop
ficoms
andb
inc
leave
dec
mov
lret
push
iret
mov
mov
dec
sbb
or
dec
mov
lock
xlat
js
adc
lods
mov
cmp
leave
xor
push
jl
or
dec
push
test
jnp
xchg
loope
jmp
aam
add
push
icebp
lcall
popf
xchg
cmpsb
xor
iret
fxch
outsb
push
xor
fstps
mov
out
lret
nop
cmp
jns
add
or
mov
insl
aam
icebp
outsb
or
lods
adc
into
push
sbb
jns
iret
into
cs
jmp
cmp
inc
jns
pop
push
nop
xchg
xchg
add
fstl
sub
mov
push
cld
xlat
dec
setnp
outsl
jb
add
xchg
loope
mov
call
or
sub
jb
test
dec
jmp
push
jo
inc
cmpsl
popf
inc
es
and
lock
sbb
lretw
push
sub
adc
push
add
das
scas
cmp
pop
pop
add
dec
in
mov
jb
out
push
mov
insb
out
bound
mov
pop
icebp
scas
sub
fistl
gs
adc
cli
inc
mov
fucomip
mov
push
jne
xchg
dec
inc
adc
dec
je
cmpsb
cltd
sub
lcall
loopne
pop
enter
add
sti
push
shll
cwtl
loop
xor
xchg
movsb
dec
inc
stc
mov
inc
fcomps
dec
lret
push
iret
mov
mov
pop
adc
mov
js
loop
das
sbb
push
dec
push
sub
rorb
add
xorb
mov
inc
push
pop
test
push
adc
xchg
xor
or
dec
scas
adc
stc
and
icebp
outsb
in
jo
lods
mov
aam
fdivr
mov
dec
es
add
in
pop
movsl
or
mov
cmpb
adc
mov
sbb
xchg
testl
movsb
mov
xchg
pop
pop
lahf
rolb
cmp
dec
xchg
mov
cmpsb
sti
xchg
mov
add
std
mov
mov
mov
stos
push
dec
dec
ja
sbb
je
cwtl
jnp
mov
push
or
jge
mov
mull
inc
mov
and
mov
fdivs
adc
dec
movsb
pushf
scas
mov
mov
xor
push
jmp
and
adc
int
out
dec
mov
inc
push
mov
push
xchg
pop
jmp
lods
test
sti
aam
in
repnz
out
push
rcrl
xor
pop
mov
mov
or
sbb
movsb
sub
daa
xchg
popf
sbb
stos
in
dec
loopne
aam
repnz
inc
cmp
int
data16
outsl
and
adc
push
pop
ss
inc
cmp
jo
xor
jbe
jl
cwtl
sub
sbb
cld
aas
sbb
or
xchg
mov
mov
inc
add
aad
pop
aaa
jg
jbe
pop
dec
mulb
xchg
sub
mov
xchg
mov
movsb
push
xor
scas
mov
ss
out
call
or
in
shl
fimuls
fimull
pop
or
ss
jbe
inc
gs
sub
push
jge
movsl
pop
adc
sti
push
xor
imul
and
add
call
mov
add
pop
aam
adc
pop
out
jecxz
mov
mov
jmp
test
mov
clc
jg
mulb
lcall
fsts
pop
cmp
mov
sub
jae
and
xchg
popf
test
cmp
pop
inc
sbb
out
mov
mov
ja
adc
or
imul
pop
mov
popa
pop
add
and
mov
iret
mov
jnp
or
jg
fisubl
call
rolb
push
lcall
sub
jno
push
push
std
call
or
inc
cmp
das
std
in
jge
subl
cmp
stc
in
cmc
jns
inc
xchg
call
or
cli
enter
inc
outsb
add
aam
fnsave
das
rcll
std
cmc
push
push
adc
or
dec
leave
call
sub
dec
sbb
jns
xchg
mov
sub
jle
mov
push
xlat
popa
xor
hlt
imul
pop
fbld
stc
in
in
sti
inc
mov
in
lret
or
mov
mov
inc
sub
inc
or
inc
jecxz
sahf
les
dec
les
mov
orb
and
mov
movsb
jne
jbe
repnz
mulb
jle
repnz
pop
sahf
mov
in
pop
xchg
fmull
xor
mov
pusha
dec
fildll
xchg
repnz
js
add
addr16
mov
mov
inc
test
push
cmpsl
aas
jecxz
and
lods
in
in
mov
and
movsw
jno
ds
push
sbb
test
mov
dec
in
pusha
xor
pusha
aaa
and
ror
ljmp
pop
dec
inc
mov
and
fsubrs
rorb
iret
loopne
jne
nop
cmc
daa
and
xor
jae
mov
xchg
stos
push
mov
iret
lea
jnp
enter
lods
adc
mov
dec
repnz
dec
mov
rep
sbb
pop
ja
mov
pop
push
cmp
ffree
inc
test
mov
dec
lods
xchg
sbb
lods
sarl
push
and
ja
mov
jecxz
in
and
mov
dec
jbe
add
adc
cmp
push
lahf
mov
jne
dec
jecxz
xchg
or
sbb
imulb
lcall
lahf
sbb
jae
jbe
sub
stos
lret
lahf
add
jecxz
adc
shll
ret
addr16
mov
jne
jp
test
pop
adc
fwait
mov
sbb
icebp
cwtl
mov
xchg
xchg
lock
inc
dec
cltd
dec
test
inc
sub
mov
add
add
xlat
mov
jl
cs
pusha
aam
adc
fstpt
pop
cmpsl
add
mov
xor
aas
nop
jmp
imulb
rcll
movsb
fwait
and
mov
inc
scas
jb
cmp
fsubrl
mov
divb
dec
dec
loopne
mov
dec
xchg
arpl
mov
ret
fsubrs
lods
rorb
lret
mov
out
or
add
sbb
clc
shlb
mov
or
jle
and
xchg
xchg
adc
popl
xor
int
inc
pop
pop
cwtl
jne
jbe
loop
and
neg
push
test
aad
subb
sarl
mov
inc
aad
inc
jle
fnstenv
jecxz
dec
pushf
mov
hlt
cld
inc
mov
ds
jg
mov
repnz
mov
mov
xchg
jmp
lods
mov
aas
jmp
ffreep
in
fidivrl
adc
push
cltd
jne
pop
xchg
sbb
dec
push
jae
scas
sbbb
nop
ret
cmp
jmp
rep
hlt
cmp
cmc
cmpsb
rorl
aad
pop
dec
push
mov
inc
adc
jne
add
or
fidivrl
in
cmp
fs
fs
dec
adcl
mov
test
mov
push
cmpsb
jecxz
xchg
mov
sub
dec
xchg
and
repnz
xchg
mov
pusha
fxch
scas
jo
xor
jnp
xor
add
cltd
xor
mov
mov
js
mov
out
sbb
adc
jbe
je
xchg
addb
fdivr
fnsave
pop
cmp
jg
cmp
inc
out
lods
dec
popf
inc
xchg
sub
push
divl
cli
xchg
addr16
stc
add
outsb
xchg
jge
fistl
out
adc
inc
cwtl
pop
lcall
xchg
xchg
add
out
aas
push
popf
fnsave
sar
out
jno
or
insl
mov
testl
insb
int3
mov
xchg
call
cmp
shlb
xchg
test
and
mov
dec
ror
mov
pop
popf
inc
rcrl
icebp
mov
pop
push
dec
outsl
pushf
in
xchg
mov
pop
xchg
js
add
fucomi
lods
adc
mov
mov
inc
loop
das
ljmp
inc
xor
sub
pop
cwtl
jmp
mov
mov
setae
mov
sub
sbb
mov
sbbl
test
adc
lods
adc
enter
or
rclb
pushf
xor
sbb
fnstenv
or
rclb
sbb
stos
shl
aaa
rorb
xchg
nop
cli
shrb
adc
xchg
mov
stc
mov
pusha
pop
imul
pop
push
arpl
push
push
mov
sbb
add
or
mov
mov
lock
scas
push
mov
sub
jb
push
out
ljmp
pushl
pushf
insb
rolb
jl
fsubrs
dec
data16
mov
hlt
mov
out
jl
or
scas
std
and
xchg
xchg
xchg
sub
jmp
js
dec
in
es
xchg
scas
addb
loop
fsubp
xchg
scas
aas
adc
ss
mov
scas
jne
inc
lret
daa
popf
sysenter
sub
and
xchg
int
test
gs
lcall
sbb
dec
negl
pushl
dec
push
mov
movsb
int
setge
fs
pop
ret
mov
push
sbb
scas
push
popa
roll
popa
inc
test
cmp
or
call
rcr
rcrb
pop
stos
mov
cmp
adc
jbe
out
mov
and
cmp
pop
inc
aas
xor
mov
out
pop
pop
jnp
out
sub
push
sub
pop
xchg
push
fiaddl
push
inc
neg
fldcw
cmp
imul
sub
in
jns
insl
mov
lods
pusha
cmp
and
subb
inc
hlt
cmpsb
lock
int3
jno
frstor
lods
daa
dec
testl
arpl
bound
push
in
sub
or
mov
int3
mov
mov
loope
ljmp
test
jnp
sti
push
jb
and
adc
fildll
cmp
fdivrp
bound
es
push
jmp
mov
mov
sub
mov
xchg
icebp
xchg
mov
sbb
or
adcb
test
repnz
jl
ljmp
scas
data16
cltd
adc
mov
mov
gs
or
rcll
mov
scas
aas
xchg
mov
cmp
in
aad
pop
repnz
sbb
in
inc
fdivrl
repnz
mov
and
xchg
xchg
inc
ja,pn
fldt
jns
xchg
in
jge
stc
inc
xchg
push
lcall
inc
add
fistps
es
lock
es
cmp
cmp
or
xchg
mov
pop
push
iret
repz
aas
xor
lods
push
ss
orps
loop
inc
and
lcall
adc
pop
movsb
dec
lret
ficompl
cltd
sbb
adc
insb
fnstsw
ss
insb
inc
fsincos
sbb
add
sarb
add
mov
std
divb
cmp
push
push
mov
pop
or
outsl
std
push
adc
in
push
and
lds
mov
jo
in
cs
cmp
inc
and
mov
lock
sbb
sbb
ss
push
jge
shrl
addb
cwtl
inc
xchg
lea
into
mov
addr16
pop
push
or
jns
push
outsb
mov
or
int
dec
sub
imul
rcrb
jo
pop
cltd
mov
adc
sti
mov
jae
test
rol
andl
adc
sbb
ss
popf
or
ss
sub
cmp
dec
and
shrl
pop
inc
xchg
nop
scas
cmp
xorb
xchg
outsb
dec
cs
mov
xor
aaa
inc
repnz
and
jge
or
outsb
rorb
push
cld
jecxz
das
repz
inc
inc
sub
mov
sub
sbb
std
inc
inc
xor
and
and
xchg
mov
arpl
adc
inc
cmp
bound
push
addr16
or
out
jno
repz
cmpsl
dec
mov
fadd
inc
in
cmp
ror
xor
or
inc
fnstcw
fwait
pop
imul
aas
dec
push
sti
or
jbe
push
outsl
xor
imul
aaa
mov
xchg
xchg
mov
sub
dec
inc
and
push
cmp
sub
or
and
xor
cmp
pushl
pop
mov
out
and
lcall
hlt
mov
sti
cmp
data16
repz
popf
add
fdivs
or
cmp
call
xchg
insl
mov
sbb
loope
push
popf
fdivl
sbb
clc
xchg
gs
sub
inc
clc
lods
xchg
sahf
arpl
and
test
xchg
stos
mov
add
xor
test
mov
test
sti
push
xor
es
cwtl
out
movsb
adc
add
mov
shrb
cmp
sub
push
sbb
push
lcall
hlt
shll
adc
rolb
pop
pop
jmp
or
dec
ficomps
xlat
in
fiadds
mov
mov
shll
push
hlt
out
rcrl
shlb
cmpb
or
sbb
xchg
pop
out
pop
test
lcall
rorl
mov
xor
mov
jbe
mov
dec
fwait
mov
pop
lock
into
and
mov
lahf
insb
scas
popa
xor
lcall
xchg
shr
dec
pop
cmpsl
adc
sub
pop
sbb
insb
dec
out
lcall
and
or
mov
mov
and
dec
pop
cmp
aaa
outsb
sbb
or
push
rol
out
in
xchg
rcr
movsb
test
mov
movsl
das
repnz
movsl
nop
or
mov
pop
fwait
daa
lret
inc
mov
add
cld
xlat
sub
cmpsb
xchg
or
ss
and
roll
sarb
add
jl
mov
ljmp
xor
dec
dec
xorb
aad
lahf
jl
cltd
ljmp
xchg
sub
push
out
cwtl
lods
in
test
pop
cmp
iret
jbe
mov
or
fs
push
xor
push
or
cmc
dec
xchg
mov
ljmp
pmaxub
out
or
xchg
xor
ljmp
adc
clc
sbb
jne
enter
sub
insb
outsb
shlb
mov
mov
daa
xchg
sub
jno,pn
push
add
sub
mov
adc
or
push
std
mov
fidivrs
xor
mov
xchg
sbb
xor
dec
pop
hlt
popf
sub
or
pop
test
fwait
mov
sub
imul
push
popa
and
push
and
clc
in
shll
dec
test
jle
mov
inc
movsb
outsl
lcall
cmc
mov
addb
fstpl
rolb
inc
in
ret
roll
fsubr
xchg
inc
pop
jp
and
fmull
insl
js
cmp
inc
jno
xchg
pop
nop
sbb
sar
cmpsb
cmp
lahf
shl
sarb
mov
je
push
pushf
mov
jo
loopne
stc
movsl
ret
jae
je
ret
aad
jp
mov
lcall
popf
shlb
into
test
sub
push
add
cli
rcrl
pusha
push
pop
fistpll
sti
pusha
pop
es
add
inc
mov
scas
push
mov
jmp
repnz
iret
mov
jecxz
mov
mov
pop
xor
xor
fs
rcrl
insb
pop
sub
pop
sbb
push
shrb
cmp
pop
das
mov
and
pop
pop
ffree
or
scas
inc
mov
leave
mov
pusha
js
jb
mov
sbb
xor
sub
jne
inc
ja
and
pop
cltd
in
sbbb
xchg
mov
cmc
jmp
cltd
dec
xor
enter
popa
adc
mov
shlb
sub
pushf
dec
jp
jge
rolb
adc
shl
std
out
out
fs
aas
cmp
cmpsl
sbb
mov
mov
rol
lahf
int
xchg
sti
idivb
adc
push
push
inc
negb
xor
jno
cmpsl
iret
dec
addr16
cmpsl
ret
cmpsb
cld
xchg
mov
mov
out
jle
pop
cli
sub
sti
pusha
xor
xchg
adc
call
cs
push
inc
loop
mov
inc
ja
arpl
mov
jne
cltd
dec
loope
shr
mov
in
jge
add
rolb
jnp
xchg
mov
xlat
fisubs
cmpsb
aaa
or
ret
clc
jae
inc
push
add
or
push
mov
mov
mov
pop
mov
mov
ljmp
pop
sub
cli
or
rcll
sbb
cmpsl
push
mov
fildl
jl
pusha
xor
push
dec
push
mov
mov
scas
mov
xchg
cltd
daa
mov
nop
xlat
insl
or
and
dec
pop
inc
lcall
cltd
jae
addb
daa
fs
mov
pop
push
out
sbb
sbb
movsb
cmc
mov
insb
mov
fwait
sub
cmc
test
sbb
lret
outsl
and
movsl
jno
clc
jge
jnp
cmp
mulps
jno
es
mov
cmpsl
test
or
test
mov
xor
aas
ds
adc
fisubl
mov
pop
divb
and
cmp
cli
lcall
xchg
mov
or
jmp
cmc
call
imul
and
cmp
sbbb
xor
sbb
mov
dec
gs
fnstsw
push
push
inc
enter
stos
mov
jmp
sub
jle
enter
rorb
mov
fidivl
das
into
ljmp
and
xor
jmp
push
ret
and
mov
xor
mov
adc
sub
testb
mov
push
jl
add
cmp
fs
mov
lcall
mov
iret
sub
or
lock
xchg
dec
loop
adc
pop
icebp
cmp
lock
pop
cld
lods
sub
movsb
push
xor
xchg
rclb
cmpsl
cwtl
lock
xchg
adc
cwtl
aas
rcr
fdivrs
in
push
pop
imul
mov
cmp
icebp
sub
mov
adc
dec
out
xor
mov
imul
mov
nop
rorl
ja
mov
or
inc
and
retw
push
and
xchg
sbb
mov
decl
mov
filds
sub
jbe
shr
mov
loope
into
jbe
xor
ja
out
or
cmp
jnp
fiadds
enter
push
add
and
sub
ja
jae
dec
sahf
jns
jl
pop
or
sahf
mov
or
xchg
int3
mov
rcrl
push
jecxz
cmpsb
int
pop
inc
pop
xor
push
xchg
scas
nop
call
sbb
loop
xchg
and
cli
fst
js
lret
sub
call
sub
pop
mov
sbb
jl
stos
les
mov
pop
inc
lret
and
cmp
jg
lret
push
mov
jns
inc
xchg
stc
lds
and
je
inc
in
in
cmpl
add
or
fwait
mov
andl
mov
xchg
jge
xchg
in
and
sbb
sub
pop
cmp
fildl
push
and
insb
xor
dec
pop
mov
ljmp
scas
test
out
jb
xor
in
add
adc
jno
push
aad
cltd
std
int3
es
add
cmp
cmpsl
cmpsb
test
mov
aaa
or
mov
cmpsl
ljmp
sub
pusha
rolb
test
lret
mov
xchg
out
ret
xchg
cmpl
repz
push
fisttpl
out
repz
es
lahf
dec
icebp
repz
je
sub
mov
inc
cwtl
push
adc
lret
sub
jnp
imulb
aas
fnstsw
das
repz
gs
mov
rorb
xlat
out
mov
popa
mov
jne
outsb
fwait
scas
ffree
inc
in
iret
push
lahf
test
aaa
subb
dec
lahf
cmp
das
cmp
or
xchg
pushf
push
test
jbe
xlat
adc
and
mov
imul
dec
xchg
cmp
inc
out
in
leave
shl
mov
adc
add
mov
xchg
xor
jae,pt
add
adc
fidivl
jbe
je
stc
ret
sub
mov
xchg
rorl
repz
insl
lret
xchg
inc
scas
mov
mov
xor
dec
loop
inc
pop
or
or
fidivrl
jmp
xchg
test
sti
sub
rclb
cmp
sub
sbb
rorb
mov
sti
mov
bound
lock
rorb
call
or
add
xor
int
adcl
cmp
add
xchg
imul
icebp
xchg
push
dec
pop
cld
stos
hlt
mov
mov
fnsave
cmp
ret
or
adc
sub
push
xor
ror
lret
lret
imul
scas
pop
in
cmp
lcall
or
popf
inc
sub
out
das
mov
bswap
adc
test
aaa
mov
mov
sbb
adc
mov
roll
nop
into
cmp
icebp
mov
xchg
cwtl
mov
out
loop
inc
flds
cmp
dec
jne
adc
or
xchg
addr16
mov
enter
test
cwtl
cmp
shll
loop
dec
fidivs
negl
sbb
jbe
mov
mov
addb
or
mov
xchg
idivl
cmp
int3
aad
pop
cld
mov
add
sarl
jl
mov
mov
xchg
mov
loop
push
sbb
mov
mov
cli
xchg
push
push
int
aaa
lret
repz
mov
hlt
fcomip
scas
movsb
cld
clc
outsl
add
jle
into
cli
xchg
xchg
leave
push
mov
das
leave
mov
jne
int3
or
mov
xchg
jge
xchg
or
pop
loop
movsl
push
and
mov
sub
xor
mov
push
enter
inc
xchg
lret
loop
arpl
sub
pop
loope
int
call
cmp
ljmp
pop
mov
mov
shlb
int
out
stos
push
add
or
daa
adc
xchg
inc
jle
mov
pop
xchg
into
inc
ret
mov
cwtl
add
mov
sub
cs
cwtl
push
mov
out
pop
movsb
mov
cltd
iret
add
ficomps
push
je
sub
pop
sti
inc
idivb
cmc
jns
inc
movsl
cld
stc
fwait
cmc
xor
fs
hlt
mov
mov
stos
ljmp
xchg
jmp
aam
pop
mov
jp
inc
test
jge
rcrb
popl
mov
dec
fnstcw
or
xchg
or
mov
push
xchg
xchg
out
xor
ja
mov
push
subl
adc
aas
enter
mov
ficoms
fadds
xor
out
inc
push
mov
testb
pushf
adc
cli
and
cmpsb
jg
arpl
std
jmp
decl
fsub
xchg
push
call
lret
out
lret
and
jecxz
mov
ss
xor
jecxz
fsts
js
jb
mov
les
xchg
jne
cltd
popa
sub
inc
aaa
jb
push
push
jge
adc
xorb
outsl
in
pop
push
jbe
lods
aas
into
test
jae
adcl
jno
sbb
popf
mov
xchg
or
mov
adc
mov
xor
or
ret
les
pusha
xor
dec
sub
inc
loopne
imulb
jp
int3
outsl
loope
icebp
adc
push
push
ss
cmp
jge
add
aaa
mov
in
les
repnz
jecxz
repz
test
mov
ret
arpl
call
das
dec
mov
in
sbb
roll
fs
sahf
dec
cmpsb
mov
and
add
idivl
cmp
stc
mov
xchg
neg
push
cmc
cmpsb
push
dec
test
repnz
hlt
push
jecxz
fldpi
sub
xchg
popa
rolb
add
mov
sarl
ret
xchg
xorb
iret
pusha
xchg
xorl
cmpl
sub
fnstcw
mov
adc
add
test
insl
es
push
das
sbb
mov
js
xor
and
or
cltd
mov
sbb
or
outsb
mov
jae
gs
jbe
mov
lahf
cmpsl
stos
and
ret
mov
mov
icebp
insl
cmpsb
test
pusha
test
addr16
adc
jmp
gs
cmp
adc
pop
cmp
mov
dec
adc
jnp
inc
push
sbb
inc
call
inc
and
inc
mov
sbb
and
inc
js
rorb
jbe
test
dec
xorl
int
lcall
or
std
test
lock
xor
mov
loop
out
jne
int
sti
or
sbb
nop
cmp
mov
fwait
dec
sub
test
mov
in
test
mov
push
sub
aaa
sarl
rcr
leave
repnz
xchg
jecxz
fldcw
dec
sbb
cmpsb
or
lcall
add
js
je
in
add
shlb
cs
addl
lcall
call
sahf
aad
addr16
pusha
aaa
xchg
xor
xchg
test
cltd
pop
or
in
xchg
testb
mov
pop
and
pop
mov
inc
mov
aam
sub
fs
dec
pop
dec
dec
pop
dec
dec
pushf
sub
jecxz
xchg
cmp
mov
outsl
cmp
or
mov
into
xchg
insb
cli
jne
mov
mov
cmp
dec
adc
arpl
push
xchg
or
es
cmp
outsb
sbb
jo
shl
mov
test
jge
das
push
scas
aas
sub
jmp
lods
pushf
or
sub
adc
push
pushf
push
xor
jmp
sub
mov
mov
cld
sbb
sub
pop
cmp
sub
les
and
push
inc
pop
cld
imul
out
xchg
adc
arpl
adc
pop
scas
fcoml
jne
cmpsb
repz
leave
inc
es
iret
xchg
aaa
bnd
xlat
imul
or
dec
cmpsb
jne
das
mov
ret
jbe
cmp
clc
inc
cmpsb
mov
mov
stos
adc
mov
mov
mov
sub
addr16
call
mov
lret
nop
stos
test
xchg
enter
push
mov
es
xor
jns
pop
fnstenv
inc
xor
insl
stos
adc
jns
xorl
sub
add
mov
shrb
xor
out
lahf
mov
mov
test
jb
stos
sahf
std
push
movsb
insl
mov
jl
inc
ds
fisttpll
sarl
push
je
pop
movsl
adc
les
insl
ret
pop
pop
jmp
das
dec
sub
addb
into
insb
test
ds
inc
inc
mov
pop
mov
out
push
repnz
xorb
jmp
aad
mov
inc
shrl
pusha
stc
out
pop
mov
int3
or
int3
imul
mov
jo
daa
mov
lret
andl
fsub
inc
xor
cmp
fisttpl
push
add
aas
nop
push
icebp
push
rcr
jnp
movsb
loopne
sub
loopne
inc
xchg
push
pop
xor
push
xchg
js
pop
fs
ret
and
or
jg
mov
adc
pop
sbb
imul
push
in
lock
out
mov
lds
or
lds
out
adc
mov
mov
cmp
popf
mov
jns
stc
mov
sub
bound
movsl
dec
xchg
popf
idivl
sub
mov
movsl
nop
sbb
jecxz
add
leave
fbld
jge
cmp
inc
pop
out
pmaddwd
xchg
cmp
cmc
out
adc
push
repz
mov
add
cmp
mov
cmpsb
fldl
push
adc
cmpsl
pop
popa
sub
push
cs
adc
add
leave
rcrb
cmpsb
inc
js
insl
adc
mov
jne
addr16
faddl
addl
adc
addr16
sub
aaa
push
shl
or
and
addb
sbb
cmp
push
pop
jge
aam
adc
mov
sub
jp
daa
sbb
pusha
icebp
push
repz
and
pop
push
imul
sub
push
iret
aam
fidivrl
sbb
sub
adc
test
xlat
fldcw
adc
cmp
xchg
out
inc
movsb
fs
pop
mov
test
xchg
pushf
popa
xchg
mov
or
out
dec
aad
mov
or
sti
test
pop
outsl
arpl
enter
rclb
repnz
aaa
outsb
into
bound
lcall
mov
int3
out
jae
pop
sbb
loop
pop
xchg
enter
mov
pop
arpl
mov
aam
sbb
sbb
aam
roll
xchg
jo
and
or
add
add
push
xchg
sub
add
pop
cltd
or
adc
mov
mov
lahf
add
call
int3
sbb
lods
and
int3
jno
inc
push
push
cmpb
shr
out
push
scas
xor
adc
jnp
loope
inc
sub
sbb
and
scas
jnp
xor
ds
mov
loop
pop
add
nop
or
adc
cli
outsb
and
stos
nop
pop
lods
iret
sbb
cld
in
loope
cld
mov
gs
data16
scas
sbb
loopne
sbb
lea
mov
mov
stc
sub
cli
pop
mov
and
mov
mov
ja
cmp
adcb
ret
aaa
int
or
add
push
sub
iret
dec
lret
push
add
rcll
aaa
enter
or
push
shll
test
leave
les
jmp
sbb
enter
xor
scas
sub
es
lret
insl
add
fwait
aas
incb
in
sub
xor
inc
cmpsb
ljmp
jno
mov
adc
int3
push
lahf
adcl
out
adc
cmpsl
pusha
cmp
idivb
repnz
mov
das
pop
popa
aam
push
sar
hlt
cmpsl
mov
cwtl
scas
jle
push
or
ss
or
pop
cmp
xlat
cmpsb
pop
sahf
outsl
cwtl
push
stc
ljmp
cmp
cmpsl
clc
mov
sbb
jns
es
xchg
dec
push
shl
cwtl
cmp
mov
and
sub
cmpsl
shlb
adc
push
and
pop
mov
insb
xchg
imul
imul
lret
dec
push
pusha
ljmp
outsl
mov
decb
mov
or
lds
movsl
cltd
pop
push
fwait
sahf
icebp
aas
jno
std
mov
or
push
sub
xor
rol
ret
aas
mov
subb
icebp
or
aam
push
fmuls
jle
adc
repz
add
pcmpeqb
jmp
sub
mov
mov
xor
lock
das
gs
cld
mov
mov
xorb
xor
outsl
ja
mov
pop
jp
pop
mov
mov
push
or
cld
mov
xchg
mov
repnz
pushf
sbb
pop
test
js
adc
aas
jbe
ds
jmp
jae
sub
enter
dec
sub
mov
je
in
cmp
or
test
jmp
sub
imul
lcall
outsb
dec
shll
and
lret
popf
adc
and
bound
mov
sahf
xchg
inc
sub
mov
xchg
shll
addr16
dec
mov
bound
into
and
imul
jmp
or
jmp
xor
mov
pop
push
inc
in
sarl
xor
sbb
test
jle
cli
lret
jg
cmp
fmuls
or
pop
insb
les
dec
negb
lock
sbb
and
shll
daa
popf
aaa
test
xor
imul
mov
int
xchg
das
aas
cmpsb
xor
jnp
cli
cltd
cld
cmp
sbb
push
dec
cwtl
sbb
and
enter
inc
mov
push
mov
add
lods
enter
movsl
outsb
mov
call
or
mov
outsb
cmp
into
xorb
sti
daa
dec
jg
xchg
or
fwait
sub
cli
and
pop
daa
jp
addl
test
add
lret
ret
jg
fwait
loope
lea
stos
sbb
adc
push
jnp
and
inc
out
dec
jnp
call
inc
icebp
sub
or
sahf
pop
popa
add
jg,pn
mov
dec
cli
fldcw
cmp
mov
add
pushf
in
push
sbb
pop
arpl
push
xor
dec
dec
lock
inc
out
je
add
and
inc
push
jp
and
lret
add
and
mov
lea
mov
aas
xchg
mov
out
repnz
test
mov
pop
cli
arpl
jae
mov
orl
xchg
movsl
cwtl
ss
xchg
sti
xchg
pop
loopne
js
ss
mov
adc
xor
sbb
inc
mov
shll
dec
rcrl
push
fcom
mov
dec
ret
test
ret
lea
aam
in
loope
ret
int
in
sbb
push
lods
push
mov
outsl
andb
fdivl
popf
adc
inc
out
stos
xlat
arpl
mov
and
fnsave
hlt
dec
pop
lcall
mov
inc
xchg
stos
pop
es
clc
out
xchg
stos
lock
adc
jmp
mov
jbe
mov
add
or
mov
adc
jnp
cmp
mov
out
pop
aas
jg
js
mov
lock
pushf
loopne
iret
lret
cli
les
hlt
sbb
mov
mov
mov
test
popf
leave
and
xor
sbb
jp
and
sti
sub
inc
mov
xor
adc
fstpl
or
js
jmp
cwtl
xor
cmp
fwait
pop
sarb
popf
add
stc
ficomps
scas
push
inc
mov
iret
popf
pop
xorl
dec
cmp
popf
add
arpl
stos
loopne
mov
adc
sbbb
in
fcmovnb
pop
jnp
inc
cwtl
and
pop
xchg
mov
fnsave
and
pop
jne
mov
and
and
xlat
out
test
mulb
sbb
or
or
enter
fsubs
mov
test
shll
xor
and
mov
out
sbb
sti
or
fcompl
cli
cld
mov
insb
test
xor
or
hlt
ja
jb
pushl
sbb
and
xchg
pop
inc
xor
in
inc
ror
test
sahf
jo
ljmp
mov
xchg
jns
rorb
xchg
sarb
aad
inc
jle
jle
in
daa
and
xchg
adc
jb
sbb
lea
out
iret
repnz
es
jb
les
pushf
cld
add
sbb
mov
lods
shlb
movl
movsl
popf
sub
inc
out
lock
sbb
imul
jle
in
aas
shrb
test
mov
cmp
push
dec
and
test
sbb
pop
cld
ja
int
mov
sbb
or
call
test
inc
mov
into
fsubs
sbb
pop
popa
mov
xchg
ret
adc
xchg
js
and
cmp
xchg
sbb
pop
dec
fwait
inc
cmp
orl
icebp
mov
int
fs
iret
pop
add
xor
fcmovnbe
mov
mov
cmp
mov
lock
imul
mov
arpl
cmp
push
ret
jmp
inc
sub
inc
xchg
lods
mov
orl
dec
add
jns
xchg
lret
jnp
movsb
xchg
movsb
les
cmp
mov
cmp
jbe
or
ss
adc
xchg
and
in
dec
aad
mov
xor
negl
enter
popf
je
fsubp
in
sbb
xor
mov
xor
pop
push
les
stc
test
xlat
fisttps
popa
or
leave
push
push
and
fsts
cmp
daa
insl
xchg
bound
inc
xor
out
cli
inc
xchg
fidivs
int3
mov
dec
dec
loopne
mov
mov
mov
in
rcl
cmp
cld
sahf
lods
xor
sahf
jle
shlb
sbb
rorl
into
mov
or
sbb
shll
sub
leave
sbb
lds
rolb
mov
pop
xchg
aaa
enter
dec
sarl
movsb
subl
in
popl
jmp
stc
insl
adc
loope
unpckhps
jmp
repz
jae
lret
mov
push
adc
outsl
aam
pop
xor
lahf
in
cs
stos
adc
testb
pop
adc
adc
popa
aaa
lahf
idivl
push
fdiv
in
popf
lahf
nop
rolb
pop
jo
insl
popf
mov
imul
sbb
test
mov
push
or
add
pop
add
mov
pop
add
lahf
jns
push
push
pop
int
ret
dec
lea
and
sub
ds
cmp
int3
fwait
xchg
popa
inc
add
fcmovnbe
ljmp
scas
rorl
test
stc
mov
cld
add
cmp
jbe
pop
or
in
fdivl
insl
jne
stos
aad
fsubrl
hlt
add
movsb
movsl
lret
xor
sbbb
and
pop
adc
push
dec
cli
adc
cwtl
push
mov
cmc
xchg
lcall
pop
cmp
js
das
movsb
mov
daa
pop
jge
inc
sbb
into
lds
notb
fs
xchg
test
hlt
xor
pop
sahf
jmp
cmp
movsb
fidivrl
sbb
out
lods
shlb
xor
dec
cld
mov
aam
scas
push
into
popa
xlat
movsl
jno
dec
repz
mov
in
insb
daa
mov
and
dec
dec
into
icebp
sub
jmp
mov
and
mov
data16
movsb
iret
dec
cmpsl
add
sub
mov
jecxz
or
ret
xchg
sti
rorl
stc
in
shl
shll
jbe
inc
les
inc
xchg
inc
push
popa
test
or
test
outsl
out
lahf
mov
fs
sub
push
cmc
lret
push
pusha
sbb
mov
cmp
push
sahf
dec
add
mov
xchg
add
cmp
aad
xchg
jmp
lahf
mov
push
mov
sub
jno
mov
dec
pop
ds
push
cwtl
movsl
aaa
test
jge
sub
mov
je
data16
cmp
pusha
popf
das
adc
repnz
jbe
jo
ficoml
decl
xor
mov
outsl
mov
dec
sub
daa
cmpl
mov
popf
adc
loop
push
lret
push
je
popf
xchg
imul
jno
xor
sahf
outsl
mov
subl
imul
maxps
fcmovne
ret
nop
jmp
outsb
or
inc
std
pop
sbb
test
or
fbld
pop
and
dec
hlt
fimuls
neg
jp
sub
push
sub
idiv
push
xlat
repnz
je
testb
jo
add
inc
js
outsb
or
stos
daa
xor
mov
push
popa
sbb
fsubrs
inc
sbb
mov
sahf
pop
into
scas
stos
test
add
sub
mov
cmpsb
test
mov
stos
fcmovbe
and
push
add
add
xchg
test
dec
mov
insl
nop
jo,pt
inc
fmuls
xchg
mov
sbb
fdivr
aas
sbb
mov
push
pop
inc
shr
mov
mov
cmp
and
jo
sbb
data16
push
adc
insb
inc
daa
cmp
nop
mov
jl
xchg
push
and
cmp
lds
dec
jb
ljmp
iret
inc
nopl
cs
sarb
pop
std
scas
add
inc
and
sahf
xchg
fldt
add
pushf
mov
jno
arpl
push
inc
xchg
xchg
mov
cmpsb
in
fildl
and
cmp
cmpsb
rorl
xchg
clc
adc
jge
mov
mov
mov
push
imul
pop
dec
lcall
std
cmp
cmc
push
fst
es
sti
in
shlb
adc
or
sahf
xor
fmull
insb
pop
xchg
cwtl
outsl
xchg
pop
dec
daa
cmp
bound
jb
inc
jo
mov
ficoml
mov
jns
call
aad
push
cmp
fildll
jae
cwtl
sub
inc
cwtl
xchg
push
xchg
leave
xchg
xchg
cmp
xor
repz
and
aad
out
pop
xchg
mov
dec
add
pop
aas
or
repz
and
dec
shlb
sbb
and
sbb
mov
lret
ja
mov
mov
dec
xlat
repz
sbbl
or
lock
movsb
testl
cmpsl
pushf
daa
sub
mov
pushf
imul
xor
scas
daa
pusha
ja
cmp
xchg
cmc
cmp
dec
pop
into
lret
cmp
mov
repz
mov
sbb
lods
lret
push
mov
andb
push
in
aas
adc
xor
gs
push
ds
dec
adc
stc
xchg
fs
test
inc
cmp
adc
iret
std
mov
ss
push
jb
push
shl
xchg
add
jecxz
jecxz
xchg
jns
pop
mov
cli
daa
jne
mov
jae
movsb
cmc
jmp
add
add
mov
jecxz
test
ret
popa
clc
push
ds
subb
pusha
adc
jb
mov
rol
mov
out
fnsave
pop
daa
push
push
popa
pop
leave
pop
cmp
rcl
imul
push
push
jecxz
xchg
pop
push
dec
xchg
mov
push
lods
clc
rol
dec
push
xchg
mov
xor
dec
push
push
pop
sbb
dec
cmp
lahf
fldpi
push
pop
enter
clc
std
add
and
cmc
lret
sub
dec
fstpt
sub
push
les
add
jl
js
hlt
adc
mov
pop
popa
xchg
jge
imul
aaa
mov
rcrb
fildl
push
inc
pop
pop
cmpsl
cld
test
loop
mov
insl
addl
mov
mov
clc
push
insl
divb
popf
shrl
clc
mov
imul
pop
inc
xor
pop
enter
add
mov
push
cmp
rcll
or
push
rcll
and
in
mov
shrl
mov
test
push
test
je
divb
push
adc
fdiv
push
pop
and
iret
cmpsb
fstpt
xchg
mov
xor
inc
mov
leave
popf
mov
into
pop
mov
mov
mov
lcall
add
inc
lock
fwait
addr16
dec
adc
test
mov
andl
mov
loope
mov
adc
xor
jns
fstl
std
aam
mov
lock
push
in
jl
sahf
push
jmp
lcall
cmp
pop
imul
repnz
sbb
enter
lds
adc
lock
andl
cs
cltd
negb
fmull
rclb
xor
push
pushf
insl
cltd
les
mov
ja
stos
mov
cmp
and
stos
pop
mov
ret
aad
jp
dec
jecxz
mov
xchg
ja
lret
in
add
jne
mov
data16
cmp
mov
jmp
adc
cwtl
mov
inc
xor
dec
cltd
sbb
addr16
add
dec
dec
cmp
stos
or
xchg
cmp
jae
add
sahf
mov
mov
push
in
push
fldcw
push
pop
adc
lahf
mov
shll
sub
rcrl
inc
shl
sbb
sub
xor
mov
lret
xchg
pop
cmp
mov
inc
add
mov
roll
jmp
jp
test
lret
push
pop
movsl
imul
std
pop
push
ficoms
je,pn
sub
xchg
xor
sbb
lods
dec
stc
js
insl
cmp
xor
iret
mov
jo
jbe
push
mov
test
repz
or
in
icebp
jge
sub
pop
repz
add
mov
xchg
mov
aas
ds
jo
mov
dec
push
enter
xchg
outsb
popf
mov
ficomps
shll
pop
add
lcall
in
pusha
fdivs
pop
popf
pop
jae
inc
aaa
loop
addb
aam
xchg
adcl
adc
fwait
nop
dec
xchg
ret
outsb
cmp
lods
sbb
js
gs
sti
nop
int3
and
cmp
outsl
hlt
leave
fiadds
dec
jl
mov
in
out
add
dec
adc
jmp
and
xor
test
sahf
or
lret
mov
cmp
pop
negb
mov
or
pop
test
into
mov
out
jnp
insl
in
push
xchg
push
lock
xor
push
mov
mov
inc
pop
pop
pushf
adc
rorb
sbb
xchg
cmpsl
cmp
mov
sbb
ljmp
scas
imul
or
mov
jae
es
outsb
ja
clc
jge
cmp
jg
iret
jne
mov
int3
sahf
jecxz
lea
call
fsubs
rep
fcmovnb
xchg
out
add
and
inc
adc
sbb
push
lods
repz
pushf
inc
test
imul
push
cmp
dec
loop
jle
mov
and
dec
lret
sbb
jo
push
imul
dec
sti
out
jae
bound
outsb
mov
lret
fucomp
xor
loope
jbe
in
repz
pop
dec
addl
cwtl
insl
pusha
movb
lcall
push
sbb
sbb
lea
fs
xchg
aam
cmc
or
inc
das
or
pop
sub
sti
test
cltd
inc
jno
xor
jl
gs
jno
xor
mov
dec
in
mov
pop
popa
aas
call
cmc
daa
or
orl
adc
popa
inc
adc
lret
or
push
adc
cmpl
bound
aad
arpl
cltd
push
pop
das
xchg
imul
fwait
ret
stos
std
stos
out
fwait
cltd
cmp
jb
inc
mov
andl
push
out
lds
aad
jge
filds
in
cmp
ss
dec
rcl
sti
cmp
ljmp
inc
cmp
push
shrl
push
pop
xchg
cwtl
inc
ficoms
mov
ljmp
xchg
loop
jl
faddp
xchg
fimuls
pop
repz
pop
sbb
std
adc
out
sbb
jo
mov
outsb
pop
lahf
xchg
rolb
insl
clc
or
lcall
rol
out
subl
clc
xor
vmptrld
fiadds
js
lds
xchg
ljmp
or
aas
ja
xor
jno
repz
shlb
sub
inc
xor
cmpsb
adc
add
popa
dec
movsl
inc
mov
sbb
push
add
cld
lahf
and
inc
out
negb
or
or
mov
inc
inc
lahf
icebp
imul
lahf
dec
add
cwtl
clc
lahf
lds
jmp
cmpl
das
pop
push
mov
in
jp
aad
dec
mov
sub
imull
ret
hlt
adc
test
loop
clc
pop
insl
and
ljmp
xchg
pop
sub
rorl
mov
shlb
in
nop
jnp
inc
fcomp
jle
imul
mov
fstpt
test
repz
fcomps
lret
sub
xor
push
fs
adc
test
mov
clc
imul
imul
ret
mov
pop
dec
lea
jg
xchg
push
sub
adc
jno
lods
fcoml
leave
or
imul
les
in
loope
test
inc
aam
xlat
fadd
cmpsl
mov
push
cli
mov
push
ss
push
ljmp
fucomip
mov
xchg
sbb
mov
push
inc
xor
cmp
push
insb
or
sub
dec
loope
sbb
sub
out
mov
movsl
sbb
or
movsb
outsl
sbb
fsts
jle
sahf
sub
mov
scas
xor
pop
jno
and
daa
add
xchg
dec
rorb
xchg
push
mov
sbb
xor
xor
inc
imul
mov
mov
cmc
xchg
lock
ficompl
insl
cli
jo
adc
fldl
push
stc
inc
inc
orl
ds
inc
sub
push
out
mov
xor
xor
mov
rcrb
test
xor
xchg
push
out
dec
inc
inc
xchg
mov
xchg
test
frstor
shlb
pusha
test
mov
mov
ret
addb
inc
fdivl
and
add
out
mov
mov
or
ret
insl
pushf
movsb
dec
add
dec
xor
fst
mov
jecxz
pusha
pop
pusha
mov
add
scas
shrl
leave
pop
xor
imul
rorl
stos
jp
fldt
xchg
adc
jl
sub
add
nop
push
cmp
lahf
stos
in
es
fstpl
jecxz
pop
sbb
fdivrl
stos
loope
sbbl
scas
je
xor
fisubrl
jmp
mov
dec
pusha
or
xorl
jle
out
movsb
or
jmp
das
pop
jmp
xchg
popf
push
mov
mov
mov
adc
enter
xor
adc
sub
idivl
inc
imul
out
stos
sub
xor
aad
pop
je
cwtl
xor
lods
xchg
arpl
or
jle
or
repz
in
push
xchg
mov
and
jbe
push
xchg
cmp
gs
repnz
add
adc
into
sub
daa
fistpll
cmp
mov
adc
xor
mov
inc
cmpsb
mov
pop
push
leave
in
or
fsubrs
cmp
enter
cltd
mov
mov
cmc
dec
fldt
push
nop
adc
cwtl
sarb
pop
sub
adc
xchg
jp
push
addb
int3
or
lret
mov
or
cmp
dec
hlt
or
fdivr
or
xchg
shrl
or
rolb
call
sub
aam
lcall
ret
xchg
inc
icebp
jp
mov
aam
xchg
mulb
adc
cmpsb
jb
and
lea
mov
xorl
outsb
or
sbb
movsb
sbb
inc
ja
loop
inc
and
stos
rclb
ret
dec
add
and
sbb
aad
cmp
dec
shr
jl
mov
cmp
xchg
iret
sub
pop
std
push
and
mov
mov
ficoms
sub
xchg
mov
out
pop
push
or
hlt
xor
popf
out
sbb
push
xor
push
test
scas
add
or
xchg
out
clc
dec
cmpsb
std
push
cmp
push
data16
mov
addl
jne
mov
jo
aas
test
jge
pushf
mov
out
mov
and
xor
adc
sti
mov
lcall
into
inc
out
mov
lcall
ret
in
mov
enter
cmpsl
lahf
xchg
pop
pop
lcall
in
je
add
imul
pushf
movsl
push
sub
inc
xchg
repnz
pop
pop
mov
xchg
xchg
std
test
test
es
mov
or
dec
push
push
xlat
mov
dec
mov
jbe
push
cld
out
rcl
sub
inc
mov
pop
jp
lcall
push
mov
inc
push
inc
hlt
cmp
or
add
orb
mulb
pop
sbb
push
loop
fcompl
imul
sahf
lcall
pop
fabs
inc
movb
movsl
lret
daa
lcall
stos
mov
sub
lret
out
fs
into
jle
mov
mov
out
out
shlb
and
mov
movsl
jae
dec
mov
xor
stc
sahf
sbb
mov
push
sbb
cli
fldt
int
fnsave
cmp
push
mov
scas
mov
inc
aam
push
jg
adc
cmp
xchg
cmp
clc
add
movsl
stos
and
cli
or
inc
sti
fistpll
in
or
sarl
lcall
push
pop
cmp
pop
imul
mov
mov
and
jns
dec
icebp
les
dec
xchg
jmp
sti
push
inc
push
movsb
fnsave
in
cmpl
push
loopne
mov
or
out
in
movsb
mov
cmp
insl
cs
jno
test
jl
or
and
mov
dec
xor
jb
mov
stos
mov
stos
sub
scas
addr16
jecxz
loope
mov
out
sbb
and
pop
dec
and
out
jo
adc
out
leave
push
mov
or
std
shlb
xchg
and
xchg
jns
cmpsb
sarb
stos
lds
cltd
jne
pop
lret
push
insl
sbb
jno
lahf
lcall
xchg
loope
jns
repnz
mov
fcompl
dec
jnp
xchg
push
jecxz
xor
out
popl
dec
cmpsb
leave
jbe
push
popf
cld
lcall
shll
pop
scas
push
mov
mov
inc
inc
dec
add
mov
add
jmp
inc
jl
pop
or
insl
or
xchg
dec
movsl
adc
adc
inc
inc
dec
loopne
push
les
push
jb
push
fidivs
lock
imul
pusha
jle
mov
mov
sub
jo
ja
ljmp
dec
das
mov
out
add
inc
out
push
addl
inc
out
gs
out
jl
imull
lods
mov
sub
leave
ljmp
pop
repz
hlt
into
sbb
inc
fdiv
imul
xor
fwait
scas
jl
push
loopne
pop
push
lods
push
push
in
sbb
repz
lods
lds
jle
mov
ror
add
mov
sbb
push
imul
xchg
es
and
out
xlat
loop
in
test
xor
xlat
mov
push
cwtl
fisttpl
arpl
mov
add
cs
sub
in
push
bound
jecxz
push
gs
imul
roll
jp,pt
sub
inc
xlat
data16
dec
ja
imul
andl
ficomps
inc
insb
aad
lea
and
ret
cltd
jbe
addr16
cltd
mov
out
pop
lret
incb
cld
jecxz
jp
sub
cmpsb
addr16
mov
sbb
shrb
cli
mov
cwtl
shrb
decb
into
ret
repnz
lock
rcll
lock
mov
push
push
push
mov
jo
stc
dec
fisttpll
xchg
sahf
xchg
jns
loope
das
xchg
and
push
fildl
jno
pop
jge
es
stos
pop
ljmp
adc
and
jnp
jmp
addr16
add
xor
popf
das
inc
popa
and
mov
adc
ret
xchg
jl
mov
mov
sub
les
in
pop
loopne
pop
shl
ljmp
pop
pop
mov
stos
push
scas
mov
mov
mov
int3
sarb
jmp
mov
or
int
repnz
iret
mov
lock
and
add
jbe
aaa
movsb
ret
mov
out
mov
rcr
xor
push
sbb
dec
ds
pop
jl
jge
mov
xchg
sub
clc
jecxz
roll
adc
jb
stos
push
fwait
repnz
js
in
scas
outsb
mov
add
add
into
dec
inc
or
sub
and
out
mov
pop
jl
adc
rclb
out
popl
push
iret
rcll
ret
fs
cmc
mov
jmp
orps
inc
dec
mov
cmpl
mov
clc
sar
fildl
ret
fldenv
xchg
bound
je
pop
push
stos
rcrb
add
adcb
loopne
and
lods
inc
mov
lret
imul
fbld
sbb
