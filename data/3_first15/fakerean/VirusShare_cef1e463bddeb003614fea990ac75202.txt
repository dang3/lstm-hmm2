add
add
jne
cmpl
jne
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
push
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
push
mov
call
push
call
incl
pop
pop
pop
leave
ret
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
call
push
call
pop
xor
jmp
mov
test
je
push
call
pop
mov
test
je
mov
push
call
andl
mov
test
je
mov
push
call
andl
mov
test
je
cmpl
jge
call
add
jmp
push
lea
sub
mov
xor
mov
mov
test
push
mov
je
mov
mov
push
push
lea
push
xor
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
je
push
lea
push
mov
call
mov
imul
testb
je
mov
add
push
call
test
pop
je
pop
pop
mov
mov
xor
pop
call
add
leave
ret
push
mov
and
sub
push
push
push
mov
testb
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
xor
inc
lea
call
lea
push
lea
push
push
mov
call
mov
pushl
neg
call
mov
pushl
mov
add
neg
call
mov
add
cmpl
jne
pushl
mov
mov
push
call
test
jne
xor
push
push
mov
mov
push
call
jmp
push
mov
and
sub
push
push
lea
mov
call
mov
cmp
jl
mov
add
cmp
mov
jg
mov
mov
cmp
jl
mov
lea
cmp
jg
mov
xor
cmp
mov
mov
jne
mov
cmp
jne
mov
push
push
mov
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
push
mov
push
mov
andl
push
mov
lea
call
mov
mov
push
call
push
lea
call
pop
leave
ret
push
mov
sub
add
enter
mov
mov
push
push
push
mov
mov
mov
call
test
je
mov
xor
push
mov
lea
mov
call
mov
mov
push
call
mov
mov
push
mov
call
cmp
je
mov
cmp
lea
mov
mov
movl
movl
mov
mov
jne
mov
mov
push
lea
push
push
call
cmp
jne
cmp
jne
cmp
je
mov
call
test
jne
pushl
mov
pushl
mov
pushl
call
testb
mov
jne
testb
jne
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
add
push
call
test
pop
jne
push
call
pop
jmp
mov
mov
mov
mov
push
lea
mov
call
lea
push
mov
call
test
pop
js
pushl
mov
pushl
call
mov
lea
mov
call
cmp
jne
jmp
xor
jmp
cmp
jne
mov
lea
mov
mov
call
pushl
mov
mov
xor
cmp
sete
push
push
call
add
inc
add
decl
decl
test
mov
daa
inc
add
popf
pusha
decl
test
push
push
push
mov
call
pushl
pushl
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
mov
mov
test
mov
je
jmp
lea
mov
cmp
je
test
push
jne
mov
mov
call
test
je
mov
push
push
call
mov
mov
test
je
test
mov
je
cmp
je
cmp
je
test
jne
mov
cmpl
mov
lea
mov
je
lea
push
mov
mov
push
push
push
lea
push
add
push
call
add
mov
xor
mov
mov
mov
mov
mov
lea
push
push
push
push
lea
push
lea
push
lea
movl
call
add
test
jne
add
cmpl
je
mov
mov
lea
push
push
push
push
lea
call
add
test
jne
mov
cmp
je
cmp
je
xor
mov
mov
mov
jmp
addl
mov
mov
mov
mov
add
movzbl
add
movzbl
lea
push
lea
call
add
add
mov
movzbl
lea
push
lea
call
mov
mov
xor
mov
mov
mov
mov
lea
push
mov
push
push
push
push
lea
push
lea
push
lea
push
mov
call
add
test
jne
mov
add
cmp
jl
mov
mov
cmp
je
cmp
je
cmp
je
mov
mov
mov
push
call
cmpl
je
mov
cmpl
je
cmp
mov
mov
jne
mov
pop
pop
pop
pop
add
ret
mov
lea
mov
test
jne
or
mov
mov
cmp
jne
pop
mov
pop
pop
pop
add
ret
push
mov
sub
andl
push
mov
push
lea
push
lea
push
mov
push
call
mov
cmp
je
cmp
je
cmp
je
cmp
je
pop
pop
leave
ret
mov
cmpl
mov
jge
push
mov
call
mov
lea
push
lea
push
lea
push
lea
push
add
push
lea
movl
call
add
jmp
lea
push
pushl
lea
call
test
pop
pop
je
mov
cmpb
jne
mov
mov
mov
mov
jmp
push
mov
mov
call
pop
jmp
mov
cmpl
jge
testb
je
pushl
pushl
call
ret
push
pushl
mov
call
mov
orl
cmpb
pop
jne
jmp
mov
test
je
mov
mov
mov
xor
ret
mov
mov
mov
add
test
mov
je
test
je
xor
ret
test
je
mov
push
push
call
jmp
push
mov
mov
call
mov
mov
add
cmp
ja
jmp
flds
fstps
mov
pop
ret
mov
mov
jmp
nop
iret
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmp
xchg
mov
cmp
lods
mov
cmp
mov
mov
in
sub
andl
push
mov
push
lea
add
push
movl
movl
call
mov
push
call
test
je
andl
lea
push
push
call
testb
pop
pop
je
mov
add
push
call
test
pop
je
pop
xor
pop
leave
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
add
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
add
adc
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
add
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
mov
call
mov
mov
test
je
add
mov
cmpl
jne
push
mov
mov
mov
mov
mov
pop
mov
mov
mov
xor
inc
pop
ret
int3
mov
lea
mov
lock
inc
ret
mov
ret
mov
orl
mov
ret
push
mov
push
test
push
jne
mov
mov
push
push
push
call
test
mov
mov
mov
js
mov
test
je
mov
mov
mov
pop
leave
ret
mov
test
je
mov
mov
cmp
je
addl
mov
mov
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
sub
add
mov
mov
test
je
mov
mov
mov
mov
andl
xor
jmp
push
mov
push
push
push
mov
test
je
mov
test
je
mov
mov
mov
cmpl
je
push
mov
mov
lea
push
lea
push
push
movl
movl
call
add
mov
pop
xor
inc
pop
leave
ret
push
mov
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
movl
movl
movl
movl
movl
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
push
call
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
test
je
mov
push
call
mov
test
mov
jne
cmpl
jbe
xor
mov
mov
push
call
inc
cmp
jb
cmpl
ja
pop
ret
xor
mov
mov
incl
call
inc
cmp
jae
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
xor
test
push
je
mov
mov
mov
mov
mov
test
jne
add
lea
xor
test
je
mov
test
jle
mov
test
jle
mov
add
mov
imul
cltd
idiv
mov
sub
mov
mov
mov
test
jg
test
je
orb
add
add
push
mov
mov
call
mov
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
test
je
mov
push
push
call
mov
jmp
push
mov
mov
cmp
push
push
je
mov
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
pushl
call
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
call
add
mov
pop
pop
pop
ret
push
mov
sub
push
mov
cmpb
jne
push
push
call
xor
inc
test
pop
jne
mov
test
je
mov
lea
push
push
push
call
test
js
cmpb
je
xor
pop
pop
leave
ret
mov
call
test
je
pushl
mov
push
call
jmp
push
mov
push
lea
push
call
andl
push
lea
call
lea
push
push
call
mov
test
je
andl
test
movl
mov
je
mov
mov
mov
mov
mov
pushl
mov
push
push
call
testb
jne
testb
jne
lea
call
pop
jmp
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
cmpl
je
xor
inc
leave
ret
mov
mov
push
lea
push
push
push
mov
call
and
neg
sbb
not
and
pop
leave
ret
xor
leave
ret
push
mov
movl
movl
cmpl
je
lea
push
call
pop
testb
je
push
call
pop
mov
pop
ret
push
push
mov
movzbl
flds
movzwl
fldl
fmul
fxch
shr
push
movzbl
and
lea
mov
shr
lea
shl
call
sub
fmull
call
sub
mov
and
add
pop
sar
pop
xor
pop
ret
push
mov
mov
call
add
pop
ret
push
mov
sub
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
mov
push
push
pushl
lea
push
call
mov
cmp
mov
je
mov
cmp
je
lea
add
mov
push
pushl
push
push
pushl
pushl
pushl
push
push
call
test
jne
test
je
add
add
mov
push
push
call
xor
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
mov
jmp
xor
jmp
push
mov
push
test
je
mov
andl
lea
push
push
push
call
mov
test
je
mov
mov
mov
test
jle
push
push
push
push
pop
mov
mov
mov
mov
test
je
incl
mov
test
jne
andl
decl
je
dec
mov
jne
pop
pop
pop
mov
push
call
leave
ret
add
jmp
push
call
push
call
pop
pop
jmp
push
cmpl
je
test
je
mov
test
lea
jne
mov
test
jns
push
mov
call
cmpl
jne
xor
test
jne
mov
mov
call
call
lea
push
push
call
call
lea
cmp
inc
add
push
push
push
call
add
pop
ret
mov
jmp
push
mov
push
push
xor
cmp
je
cmp
jle
push
push
push
mov
lea
push
push
push
call
mov
mov
mov
add
and
jne
test
jne
pushl
lea
call
test
jne
mov
test
mov
je
mov
mov
lea
push
call
mov
lea
push
pushl
push
call
test
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
mov
lea
call
mov
mov
xor
lea
call
pop
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
cmpb
je
push
push
mov
movsbl
cmp
jle
mov
cmp
lea
jne
mov
test
jne
test
je
mov
cmp
jbe
mov
and
mov
movb
mov
mov
mov
add
cmpb
jne
xor
or
movzbl
jmp
mov
push
push
push
or
mov
call
jmp
mov
sub
cmpl
jg
mov
sub
jmp
push
push
push
push
call
test
jne
int3
sbb
add
add
or
mov
call
jmp
mov
sahf
into
cmp
mov
cmp
mov
mov
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
push
push
mov
pushl
lea
mov
mov
call
cmpl
je
mov
lea
xor
testb
je
push
call
test
pop
mov
je
mov
cmp
je
cmp
je
movb
mov
mov
cmp
je
cmp
je
movl
mov
mov
push
add
push
lea
push
call
mov
test
mov
je
mov
add
call
test
je
mov
add
or
inc
add
or
push
mov
add
call
mov
test
pop
je
mov
test
jne
mov
call
mov
test
mov
jne
mov
test
jne
mov
call
test
jne
mov
test
jne
lea
call
mov
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movb
mov
movl
mov
mov
mov
movl
mov
movl
movl
mov
mov
xor
inc
cmp
je
cmp
je
mov
mov
movl
movl
mov
lea
push
mov
mov
call
cmpl
jne
mov
mov
cmp
mov
jne
mov
mov
mov
orw
cmpb
jne
mov
lea
call
mov
pop
pop
pop
ret
cmpb
je
mov
jmp
mov
push
call
mov
test
je
cmpb
jne
mov
mov
mov
mov
jmp
mov
orl
mov
mov
mov
mov
mov
jmp
mov
movl
movl
mov
movl
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
add
push
or
adc
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
add
jne
xor
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
mov
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
push
push
push
call
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
push
mov
push
mov
push
pushl
pushl
call
add
test
push
push
pushl
jl
call
add
test
jg
push
push
pushl
call
add
test
mov
jge
pop
pop
ret
call
add
test
jl
push
push
pushl
call
add
test
jl
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
mov
jne
test
jne
xor
cmp
setne
cmp
mov
jb
mov
shr
imul
add
cmp
movl
jbe
lea
imul
add
cmp
mov
ja
mov
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
add
test
je
cmp
jg
add
shr
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
add
imul
add
lea
mov
mov
mov
cmp
ja
mov
cmpl
jne
mov
test
mov
jne
test
jne
test
jg
jne
cmpl
mov
movl
jne
mov
mov
mov
mov
mov
add
mov
add
cmp
jbe
jmp
imul
lea
add
cmp
jae
mov
sub
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
push
push
push
call
mov
add
jmp
cmp
ja
mov
lea
cmpl
jne
mov
test
mov
jne
test
jne
test
jl
jne
test
movl
jne
mov
mov
mov
mov
sub
mov
sub
cmp
ja
mov
jmp
mov
push
push
push
call
mov
add
jmp
test
je
push
push
call
mov
add
jmp
cmp
ja
test
je
cmp
mov
mov
jg
mov
shr
jmp
lea
mov
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
add
movl
sub
jmp
test
je
push
push
call
mov
add
jmp
mov
mov
imul
add
cmpl
je
mov
mov
mov
sub
sub
cmp
mov
jge
test
jle
mov
sub
cmpl
jg
shr
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
sub
test
jg
mov
mov
sub
sub
sub
cmp
jl
test
jg
cmp
jle
mov
mov
push
push
mov
xor
div
push
push
push
call
add
cmp
jle
mov
sub
mov
mov
xor
div
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
movl
sub
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
lea
cmp
jae
mov
mov
sub
mov
mov
lea
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
mov
mov
mov
jmp
mov
shr
imul
lea
mov
add
mov
push
add
push
mov
push
call
mov
mov
lea
push
push
sub
push
call
mov
mov
mov
sub
push
sub
push
push
call
add
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
push
sub
push
call
mov
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
mov
mov
jne
test
jne
ret
test
je
push
push
call
add
ret
mov
ret
or
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
mov
xor
push
call
test
je
mov
push
lea
mov
call
push
lea
push
mov
call
mov
mov
cmp
je
lea
lea
push
mov
mov
movl
movl
mov
les
inc
add
push
call
mov
test
js
lea
push
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
je
mov
cmp
je
mov
push
call
mov
pop
mov
pop
xor
pop
call
leave
ret
testb
je
jmp
push
mov
push
push
mov
mov
call
test
js
mov
xor
cmp
je
cmp
je
mov
cmp
mov
lea
pop
inc
add
pop
leave
ret
mov
cmp
mov
lea
ja
lea
jmp
push
mov
sub
push
mov
test
je
mov
mov
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
push
pushl
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
xor
push
lea
mov
call
lea
push
push
call
test
pop
pop
js
push
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
cmp
mov
je
mov
lea
push
push
push
call
test
pop
jne
pushl
lea
call
mov
pushl
mov
push
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
call
lea
call
add
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
mov
push
mov
lea
xor
push
lea
mov
mov
movl
movl
mov
mov
inc
add
add
test
js
mov
cmpl
push
mov
jge
push
lea
mov
mov
call
push
lea
call
lea
push
lea
push
call
test
pop
pop
jne
pushl
mov
pushl
call
pop
pop
mov
mov
mov
push
call
test
jne
mov
push
mov
call
lea
push
lea
push
pushl
call
add
test
jne
pushl
mov
pushl
pushl
call
pushl
mov
call
pop
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
add
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
mov
mov
and
dec
je
dec
dec
je
movzbl
and
cmp
je
mov
call
test
je
push
push
call
test
pop
je
movl
mov
test
je
mov
call
mov
movl
xor
inc
pop
pop
ret
xor
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
movl
movl
xor
mov
mov
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
ret
push
mov
lea
mov
push
call
test
je
cmpl
je
pushl
lea
mov
push
call
testb
jne
push
lea
push
mov
call
pop
pop
ret
mov
test
je
mov
mov
mov
mov
push
call
xor
ret
push
mov
and
push
mov
push
xor
movl
mov
call
pushl
mov
pushl
mov
pushl
mov
pushl
xor
push
pushl
cmp
pushl
sete
mov
mov
mov
mov
mov
push
push
call
pop
mov
pop
mov
pop
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
mov
test
movl
movl
movl
movl
movl
jne
lea
call
lea
call
lea
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
mov
cmpl
je
andl
xor
ret
push
mov
push
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
mov
je
add
push
call
xor
mov
mov
mov
pop
pop
ret
push
push
push
mov
call
test
pop
je
mov
movl
andl
andl
add
test
je
mov
mov
test
je
pushl
mov
push
push
call
mov
test
js
mov
pop
pop
ret
xor
jmp
push
mov
push
push
push
xor
cmp
mov
mov
jne
push
mov
push
lea
call
pushl
lea
push
push
call
add
cmp
pop
je
pushl
pushl
call
cmp
pop
pop
jne
mov
mov
mov
lea
mov
lea
call
lea
call
pop
leave
ret
push
call
pop
push
lea
call
jmp
push
lea
sub
mov
xor
mov
push
push
mov
mov
xor
mov
cmp
push
jne
mov
add
je
cmp
movl
jne
mov
mov
lea
push
pushl
lea
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
mov
je
mov
lea
push
call
mov
lea
call
mov
cmp
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
lea
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
mov
call
mov
mov
mov
mov
mov
mov
add
call
push
pushl
call
pushl
mov
push
pushl
mov
call
mov
mov
mov
push
push
call
mov
test
jne
xor
cmp
jne
mov
testb
je
mov
mov
mov
mov
cmp
jne
add
mov
push
push
call
test
jne
testb
movl
je
mov
add
push
call
test
pop
jne
jmp
call
cmp
je
mov
pushl
mov
push
call
test
pop
pop
js
mov
lea
mov
call
jmp
add
or
test
jmp
push
mov
push
push
push
xor
push
lea
mov
call
lea
push
push
push
call
add
test
js
pushl
mov
lea
push
push
call
mov
mov
add
lea
push
push
call
mov
cmp
jne
push
pushl
mov
call
pop
pop
mov
lea
call
add
pop
leave
ret
push
mov
mov
sub
push
push
push
mov
xor
mov
cmp
je
cmp
je
mov
orb
lea
mov
mov
call
push
mov
call
mov
andl
pop
lea
push
mov
lea
call
andl
push
lea
call
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
pushl
call
andl
test
pop
pop
je
push
lea
mov
call
mov
lea
push
pushl
pushl
push
call
test
js
push
call
test
pop
je
pushl
mov
pushl
mov
mov
push
push
call
test
mov
je
mov
push
call
cmpl
je
mov
mov
lea
push
push
call
pushl
pushl
pushl
call
add
test
je
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
pushl
call
pop
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
cmpl
jne
push
push
mov
push
lea
lea
mov
push
push
call
test
je
cmp
jae
push
lea
lea
call
pop
pop
mov
xor
pop
call
leave
ret
push
add
push
call
jmp
push
mov
mov
call
add
push
pushl
call
xor
pop
ret
push
mov
push
push
push
mov
push
mov
mov
push
mov
imul
lea
push
add
pushl
push
call
mov
lea
push
pushl
push
call
cmpl
jl
cmpl
jg
mov
lea
push
pushl
push
call
test
mov
jne
mov
flds
mov
fstps
mov
mov
test
pop
pop
mov
pop
je
cmp
je
fldz
fcomps
fnstsw
test
jp
xor
inc
leave
ret
mov
jmp
xor
leave
ret
push
mov
push
push
mov
push
push
xor
cmp
mov
je
inc
add
push
push
push
add
push
call
and
jne
inc
add
test
cld
lea
call
mov
cmp
je
inc
add
push
push
call
mov
mov
push
call
mov
pop
pop
leave
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
mov
orl
mov
movl
mov
pop
ret
sub
push
push
push
push
mov
mov
mov
mov
mov
sub
lea
mov
mov
mov
mov
sub
sub
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
movl
mov
shl
sub
mov
mov
sub
mov
nop
cmp
jae
movzbl
add
mov
shl
add
add
mov
add
movzbl
shl
mov
add
add
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
lea
test
je
shr
and
mov
jne
cmp
jb
mov
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
shr
and
cmp
mov
jb
mov
mov
mov
shl
sub
sub
and
mov
mov
add
mov
mov
sub
shr
cmp
ja
mov
sub
movzbl
add
add
mov
mov
add
add
mov
movzbl
add
add
sub
cmp
mov
ja
test
je
mov
add
add
cmp
mov
ja
mov
jmp
test
jne
mov
mov
mov
mov
shl
shr
sub
and
add
mov
mov
mov
shr
movzbl
movzbl
shr
sub
test
jne
add
shr
mov
cmp
jae
cmp
jae
mov
jmp
mov
movzbl
add
add
mov
mov
movzbl
shl
add
mov
shl
add
add
add
jmp
cmp
jb
mov
mov
shl
sub
and
add
shr
sub
jmp
mov
mov
add
jmp
mov
sub
cmp
mov
ja
mov
add
mov
mov
mov
test
jne
mov
sub
mov
add
mov
cmp
jb
cmp
jbe
lea
mov
mul
shr
add
jmp
lea
movzbl
add
add
mov
movzbl
add
add
mov
movzbl
add
add
sub
sub
mov
jne
test
je
mov
add
add
cmp
mov
jbe
mov
mov
add
mov
jmp
mov
lea
test
jne
mov
movzwl
mov
shl
mov
sub
and
add
mov
mov
shr
movzbl
movzbl
shr
sub
test
mov
jne
jmp
mov
movzbl
add
mov
mov
shl
add
add
cmp
jae
jmp
cmp
jb
sub
mov
add
mov
cmp
jae
sub
mov
add
add
subl
mov
jne
mov
sub
jmp
test
je
mov
movl
mov
mov
shr
sub
add
add
add
sub
mov
mov
shl
lea
sub
sub
and
mov
mov
lea
mov
mov
sub
add
add
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
sub
add
mov
sub
add
cmp
jb
mov
jmp
mov
add
mov
movzbl
mov
shl
add
add
jmp
sub
jmp
lea
mov
add
add
subl
mov
jne
mov
sub
jmp
push
mov
sub
andl
push
mov
push
mov
push
push
lea
push
lea
push
pushl
call
add
test
je
mov
andl
lea
push
movl
movl
mov
push
call
test
js
mov
mov
lea
call
testb
mov
jne
testb
jne
mov
test
jne
mov
pop
pop
leave
ret
push
mov
push
push
mov
lea
lea
mov
push
call
test
je
mov
test
je
push
pushl
call
xor
pop
pop
pop
ret
cmpb
je
pushl
mov
pushl
mov
push
call
test
jne
jmp
push
mov
push
push
mov
mov
test
je
cmpb
push
mov
je
mov
push
mov
call
test
je
andl
push
lea
call
mov
lea
push
push
call
pushl
andl
mov
lea
call
push
pushl
pushl
call
lea
call
lea
call
xor
pop
pop
leave
ret
push
mov
mov
cmpl
push
push
push
mov
jge
testb
mov
jne
test
jne
testb
jne
mov
xor
cmp
je
testb
jne
mov
cmp
mov
jne
mov
andl
test
je
mov
push
call
mov
andl
test
je
mov
push
call
cmpl
jne
testb
jne
testb
jne
test
jne
andl
cmpl
mov
mov
je
testb
je
testw
je
lea
call
lea
cmpl
je
mov
cmpl
jge
lea
test
je
lea
pushl
mov
mov
lea
add
push
push
call
xor
mov
call
push
mov
call
cmpl
je
push
lea
call
cmpl
jne
mov
test
je
lea
test
je
lea
pushl
mov
push
push
push
call
lea
xor
call
lea
xor
call
xor
pop
pop
pop
pop
ret
mov
mov
jmp
xor
jmp
push
mov
push
push
mov
push
mov
test
je
mov
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
decl
jne
mov
movl
call
pushl
call
pop
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
push
call
pop
pop
pop
mov
add
call
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
movzwl
cmp
push
mov
jle
sub
je
dec
je
dec
je
dec
jne
pushl
push
call
xor
mov
pop
xor
pop
call
leave
ret
pushl
mov
call
jmp
mov
test
jle
mov
test
jle
mov
mov
ret
andl
andl
ret
mov
cmp
je
cmp
je
cmp
je
xor
ret
xor
inc
ret
push
mov
push
push
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
push
mov
cmp
je
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
mov
pop
pop
leave
ret
push
push
mov
mov
test
je
mov
push
call
mov
andl
test
je
mov
push
call
push
push
call
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
push
call
xor
add
cmp
mov
je
mov
mov
movl
movl
mov
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
incl
xor
ret
mov
sub
je
dec
jne
mov
ret
xor
jmp
mov
jmp
mov
mov
mov
mov
ret
push
mov
push
mov
push
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
je
pushl
lea
mov
call
pushl
lea
mov
cmp
mov
push
call
pop
mov
call
inc
add
call
pop
mov
pop
pop
pop
pop
ret
push
mov
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
push
mov
mov
push
lea
lea
jmp
mov
mov
call
test
jne
add
cmp
jne
or
pop
pop
pop
ret
mov
sub
sub
sar
jmp
pushl
mov
call
add
pushl
xor
jmp
push
pushl
xor
inc
call
xor
inc
ret
push
lea
sub
mov
xor
mov
mov
test
je
push
mov
call
test
mov
je
mov
push
call
mov
test
je
andl
test
jne
push
xor
xor
inc
cmp
jne
cmp
jne
mov
mov
call
mov
mov
cmp
mov
je
test
je
andl
cmp
je
call
mov
lea
call
mov
test
jne
lea
call
inc
add
add
jne
mov
pushl
call
pop
pop
mov
mov
mov
lea
call
inc
add
pop
mov
xor
call
add
leave
ret
cmp
jne
and
je
andl
adc
add
mov
mov
mov
mov
test
mov
mov
je
mov
lea
push
push
call
test
js
mov
call
cmp
jne
testb
jne
testb
jne
testb
jne
testb
je
jmp
mov
push
call
jmp
push
mov
push
mov
test
je
push
mov
test
je
andl
push
lea
call
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
push
mov
xor
cmp
je
cmp
je
mov
mov
push
lea
push
push
call
mov
mov
lea
push
call
mov
lea
cmp
je
call
mov
push
call
lea
mov
mov
dec
jns
mov
mov
push
push
push
push
call
lea
mov
lea
push
lea
push
push
movl
call
add
lea
xor
call
lea
xor
call
lea
xor
call
andl
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
xor
lea
movzbl
push
lea
call
cmpl
jne
add
add
cmp
jle
xor
mov
lea
lea
movzbl
lea
push
lea
call
mov
call
cmp
je
cmp
jne
mov
call
test
mov
jg
lea
mov
mov
add
add
cmp
jle
movb
pop
pop
pop
pop
add
ret
lea
jmp
xor
jmp
push
mov
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
mov
mov
cmpl
jne
cmp
je
cmp
je
mov
mov
andl
push
call
test
je
test
je
push
push
call
mov
test
je
test
je
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
push
mov
push
pushl
pushl
lea
push
push
mov
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
push
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
movzbl
push
push
push
lea
push
lea
push
lea
call
mov
add
lea
push
push
pushl
lea
pushl
lea
push
lea
push
call
mov
add
test
jne
lea
push
mov
pushl
lea
pushl
lea
push
push
lea
push
call
movzbl
push
push
push
lea
push
lea
push
lea
add
mov
dec
add
push
push
push
lea
push
lea
push
lea
call
add
flds
push
push
push
lea
fstps
flds
lea
fstps
push
lea
call
fld1
mov
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
lea
add
cmpl
je
lea
push
mov
pushl
lea
pushl
push
push
lea
push
call
add
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
add
cmp
jne
mov
mov
mov
pop
pop
pop
leave
ret
push
push
pushl
call
jmp
test
je
call
jmp
mov
mov
jmp
push
mov
push
mov
sub
jne
leave
ret
dec
dec
je
dec
je
dec
je
add
push
jne
call
fstps
testb
flds
fstps
fldz
jne
testb
jne
fstp
leave
ret
mov
cmp
jg
je
sub
jne
ret
sub
je
dec
je
sub
jne
mov
mov
ret
dec
je
dec
jne
mov
andl
mov
jmp
push
mov
sub
mov
xor
mov
push
push
push
mov
push
mov
call
test
je
xor
cmp
je
orb
lea
mov
mov
movl
movl
mov
mov
lea
push
mov
call
test
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
push
push
push
lea
call
test
je
mov
movw
jmp
orb
cmpl
je
lea
push
push
pop
mov
call
testb
jne
testb
jne
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
mov
cmp
je
push
mov
call
add
add
add
clc
ss
cmp
jne
jmp
cmp
jne
movl
jmp
mov
add
call
jmp
push
mov
and
mov
sub
push
push
mov
xor
push
mov
mov
mov
xor
mov
mov
inc
test
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
mov
je
or
mov
mov
push
mov
call
test
pop
je
movb
movb
movb
movb
andl
movl
mov
mov
test
mov
je
push
mov
mov
call
test
jne
and
and
test
je
andb
cmpl
je
cmpl
jne
mov
call
push
call
pop
push
lea
call
cmpl
mov
jne
mov
cmp
je
cmp
je
mov
add
call
lea
call
mov
test
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
mov
cmp
jne
mov
cmp
jne
or
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
test
jne
push
push
pop
mov
call
test
je
pushl
push
call
test
jne
jmp
cmpw
mov
je
jmp
push
lea
push
call
test
jne
jmp
cmp
jne
cmpw
je
jmp
cmp
mov
mov
jne
mov
jmp
push
mov
push
andl
push
push
mov
push
mov
lea
call
mov
pushl
add
call
mov
test
js
mov
mov
mov
push
call
lea
call
pop
mov
pop
leave
ret
cmpl
je
mov
push
mov
call
test
jne
pushl
mov
mov
call
cmp
je
mov
push
push
push
mov
call
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
jne
testb
je
jmp
int3
int3
int3
int3
int3
push
push
mov
test
mov
je
push
mov
push
xor
lea
cmpl
jne
cmp
je
mov
mov
test
jne
pop
pop
pop
mov
pop
ret
mov
mov
push
push
call
add
test
jne
cmp
jne
test
mov
je
mov
mov
push
call
push
call
add
mov
xor
jmp
mov
jmp
mov
test
je
mov
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
push
pushl
mov
pushl
push
call
mov
and
neg
sbb
and
pop
ret
push
mov
test
je
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
movb
xor
pop
ret
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
mov
test
push
push
je
lea
fildll
inc
add
pushl
call
mov
cmp
jne
mov
pop
pop
ret
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
xor
jmp
xor
jmp
mov
mov
push
inc
push
push
call
test
je
mov
mov
incl
lea
ret
xor
ret
push
mov
push
mov
push
mov
test
jbe
push
add
andl
lea
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
push
pushl
xor
push
inc
call
pop
pop
pop
leave
ret
incl
add
cmp
jb
jmp
push
mov
push
push
push
push
mov
push
mov
xor
cmp
je
cmp
je
inc
add
mov
call
mov
lea
push
push
call
push
lea
mov
call
mov
lea
add
mov
push
push
call
pushl
mov
lea
mov
call
mov
cmp
mov
je
inc
add
call
lea
call
lea
call
cmp
jne
inc
add
pop
leave
ret
push
mov
push
push
push
mov
xor
push
lea
mov
mov
call
lea
push
mov
mov
call
mov
mov
and
pop
jne
mov
mov
mov
push
pushl
pushl
call
cmp
jne
mov
mov
push
push
push
call
mov
lea
call
pop
mov
pop
pop
pop
ret
push
mov
sub
push
push
mov
mov
sub
je
andl
andl
lea
push
lea
lea
movl
movl
mov
call
testl
jne
mov
mov
push
push
lea
push
push
call
mov
mov
mov
push
pushl
pushl
push
pushl
push
call
add
mov
movl
mov
mov
pop
lea
call
mov
pop
pop
leave
ret
push
mov
test
je
push
push
mov
test
jl
mov
cmpb
jne
andl
mov
pop
mov
movb
xor
pop
pop
ret
lea
movl
call
lea
call
lea
call
lea
call
lea
call
lea
jmp
mov
xor
test
je
mov
test
je
add
movzbl
rol
xor
mov
test
jne
ret
mov
push
push
mov
movl
sbb
nop
or
add
or
add
or
add
lea
xor
add
test
inc
js
shlb
adc
pop
mov
mov
push
call
lea
add
movl
cmp
str
add
and
mov
str
add
sbb
mov
add
call
lea
call
lea
call
lea
call
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
push
mov
mov
mov
shr
push
mov
and
mov
mov
mov
jne
mov
mov
cmpl
je
mov
push
push
call
test
je
mov
call
movl
lea
movl
movl
movb
movb
call
mov
orb
mov
mov
mov
mov
mov
mov
cmpl
jne
movl
movl
cmpl
je
mov
andl
push
mov
lea
call
mov
test
je
mov
call
test
jne
lea
call
xor
cmp
jne
mov
push
mov
push
xor
lea
call
cmpl
mov
mov
mov
mov
je
mov
cmp
mov
jne
pushl
andl
pushl
mov
lea
push
call
lea
push
call
mov
andl
lea
push
push
pushl
lea
pushl
pushl
push
lea
push
push
call
lea
push
call
mov
lea
mov
mov
call
add
mov
cmp
je
test
je
mov
call
mov
test
mov
je
mov
cmp
je
inc
mov
mov
push
pushl
pushl
push
call
cmpl
je
mov
mov
lea
push
push
push
mov
mov
call
cmpl
jne
mov
mov
mov
mov
lea
xor
push
and
push
or
mov
push
je
call
lea
push
call
lea
call
pop
pop
xor
pop
leave
ret
push
call
pop
mov
jmp
andl
push
call
test
je
andl
jmp
pushl
lea
pushl
push
call
lea
push
call
mov
jmp
push
mov
sub
call
test
je
push
push
push
xor
push
lea
mov
mov
call
lea
mov
call
pushl
lea
call
mov
cmp
mov
je
mov
lea
push
push
push
lea
push
push
call
lea
call
cmp
jne
mov
cmp
je
cmp
je
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
lea
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
pushl
call
call
lea
call
add
call
pop
pop
pop
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
and
push
xor
or
cmp
lea
mov
mov
mov
jne
mov
mov
lea
lea
lea
cmp
jne
test
jne
mov
mov
imul
lea
lea
cmp
jne
test
jne
cmp
je
testl
je
lea
cmp
jne
pop
pop
pop
mov
pop
ret
test
push
je
mov
lea
movsbw
cmp
jne
sub
add
add
test
jne
xor
pop
ret
movsbw
movzwl
movzwl
sub
pop
ret
push
mov
push
push
mov
push
mov
cmp
je
push
pop
cmp
je
andl
test
je
push
call
pop
push
lea
call
cmpl
je
mov
pushl
mov
pushl
mov
push
call
test
jne
mov
test
je
and
mov
test
jne
mov
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
pop
pushl
mov
call
test
pop
jne
jmp
xor
jmp
mov
cmp
jne
ret
push
mov
cmpl
push
mov
jne
test
je
incl
mov
test
mov
pop
pop
je
jmp
push
mov
sub
push
mov
push
xor
cmp
mov
je
push
pushl
lea
call
mov
cmp
pop
mov
je
mov
lea
push
push
push
call
test
js
cmp
mov
je
mov
test
mov
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
mov
lea
push
push
pushl
push
call
cmpl
jne
mov
test
mov
jne
mov
test
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
cmpl
je
mov
mov
push
push
pushl
call
test
je
andl
lea
call
inc
add
pop
mov
lea
call
mov
pop
pop
pop
leave
ret
push
mov
and
sub
push
mov
mov
cmp
push
push
je
cmp
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
inc
ret
push
mov
cmpl
jne
xor
inc
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
call
add
test
jne
push
push
push
push
push
call
add
cmpl
mov
mov
mov
jne
push
mov
call
add
cmp
jne
pop
pop
pop
ret
push
push
call
add
pop
pop
pop
ret
pop
pop
movl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
fldl
push
fstl
push
fldl
push
fstl
lea
fldl
mov
faddl
fldl
faddl
lea
fxch
push
mov
fstpl
fxch
push
fstl
push
fstpl
fxch
fstl
fstpl
fstpl
call
fldl
add
fstpl
xor
fldl
fstpl
jmp
fstp
fstp
fstp
fstp
mov
mov
lea
push
lea
push
push
call
fldl
fldl
add
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
fldl
fldl
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
add
cmp
jl
mov
fxch
fstl
pop
fxch
pop
fstl
pop
fxch
fsubp
fstpl
fsubrp
fstpl
mov
pop
ret
fstp
fldl
fstl
jmp
fstp
fldl
fstl
jmp
cmpl
jne
mov
test
je
incl
mov
test
mov
jne
ret
pushl
mov
movb
call
ret
push
mov
push
mov
test
jne
leave
ret
push
mov
mov
push
xor
cmp
movl
jne
mov
cmp
jne
push
push
add
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
pop
pop
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
je
mov
call
testb
je
push
call
jmp
mov
call
mov
call
ret
pushl
call
mov
ret
push
mov
and
sub
mov
xor
mov
push
push
push
call
test
jne
mov
xor
mov
push
lea
mov
call
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
js
mov
mov
push
push
push
call
test
js
mov
mov
mov
add
call
push
push
push
push
call
push
push
push
pushl
call
test
js
mov
mov
lea
push
push
call
test
lea
js
mov
call
mov
mov
push
lea
mov
mov
call
mov
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
jne
lea
call
lea
call
mov
mov
lea
push
push
call
test
jne
cmp
je
mov
mov
lea
push
push
push
mov
mov
call
add
cmp
jl
jg
mov
cmp
jbe
mov
mov
mov
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
mov
call
add
je
sub
inc
and
pushl
pushl
pushl
pushl
pushl
push
lea
push
push
call
test
je
jmp
lea
call
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
push
xor
cmp
push
je
pushl
pushl
call
pushl
mov
pushl
call
mov
add
push
mov
call
pop
xor
pop
pop
pop
ret
mov
push
call
test
je
mov
push
call
test
je
mov
orl
jmp
push
mov
mov
test
je
mov
push
push
call
mov
test
je
andl
pushl
mov
call
pop
ret
push
lea
sub
mov
xor
mov
cmpl
mov
jge
test
push
push
je
andl
push
pop
mov
movsl
daa
inc
add
lea
push
mov
mov
mov
push
movl
mov
movb
call
test
js
mov
andl
test
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
andl
lea
push
lea
lea
push
mov
movl
mov
mov
movb
mov
push
call
test
je
testb
jne
testb
jne
lea
call
testb
jne
testb
jne
xor
pop
pop
mov
xor
call
add
leave
ret
pushl
lea
call
pushl
mov
cmp
add
add
pop
fwait
push
add
lea
call
pushl
pushl
call
pop
xor
pop
inc
jmp
mov
add
call
ret
mov
test
je
mov
dec
push
mov
lea
mov
add
rorb
add
push
mov
mov
push
push
mov
call
test
pop
pop
jne
mov
andl
and
xor
or
jne
mov
pop
pop
ret
push
push
mov
test
je
cmp
jne
mov
and
or
jne
cmpl
jne
cmpl
je
pushl
mov
pushl
push
call
test
je
mov
pop
pop
ret
xor
jmp
mov
and
or
jne
mov
call
mov
jmp
mov
add
mov
call
mov
jmp
xor
jmp
push
mov
push
mov
push
push
push
lea
call
test
jne
mov
test
jne
mov
test
jne
mov
mov
mov
mov
lea
call
test
jne
test
jne
mov
mov
push
pushl
push
call
test
je
pop
pop
pop
pop
pop
ret
xor
jmp
pushl
mov
mov
call
mov
jmp
incl
jmp
pushl
mov
mov
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
xor
cmp
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
mov
mov
cmp
mov
jne
mov
test
je
test
js
test
jne
add
cmpl
jne
test
mov
mov
mov
mov
jne
mov
mov
mov
pop
pop
xor
pop
ret
mov
test
lea
je
test
js
xor
jmp
mov
test
je
test
js
xor
jmp
mov
jmp
mov
jmp
push
mov
call
cmp
jne
mov
xor
jmp
mov
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
call
mov
mov
jmp
mov
test
je
mov
jmp
push
mov
mov
call
cmpl
je
mov
jmp
mov
mov
lea
push
push
call
mov
pop
movl
mov
pop
xor
pop
ret
mov
mov
lea
push
push
call
cmpl
jne
jmp
mov
cmp
jne
mov
cmp
je
xor
ret
xor
inc
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
push
mov
push
xor
push
mov
push
lea
push
lea
push
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
add
cmp
mov
mov
mov
jne
cmp
jne
mov
mov
test
je
test
jne
mov
out
sbb
and
jne
mov
call
mov
mov
mov
cmp
movb
mov
mov
mov
jne
mov
xchg
adc
lea
call
test
je
xor
cmp
mov
and
cmp
jne
lea
push
lea
push
sub
cmp
mov
mov
mov
jne
mov
mov
mov
push
call
cmp
je
mov
mov
mov
mov
call
mov
mov
cmpb
jne
mov
mov
mov
mov
add
inc
add
add
mov
and
cmp
jne
mov
mov
and
lea
push
push
call
cmp
mov
mov
jne
jmp
mov
mov
mov
mov
and
or
movl
jne
mov
call
mov
mov
push
mov
mov
mov
call
mov
push
push
call
mov
mov
add
push
lea
mov
mov
call
mov
add
cmp
mov
jne
mov
call
mov
add
mov
jmp
mov
push
mov
mov
call
mov
je
inc
add
mov
mov
jmp
mov
mov
mov
push
call
jmp
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
mov
lea
call
mov
pop
leave
ret
int3
push
mov
mov
test
je
call
testb
movl
je
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
push
mov
mov
test
mov
jne
test
jne
movl
mov
test
jne
testb
je
push
call
add
mov
pop
pop
ret
lea
push
call
add
test
jne
push
call
add
jmp
push
mov
push
push
push
mov
mov
cmpl
jge
mov
andl
mov
push
call
mov
test
pop
jne
test
mov
jne
testb
jne
lea
mov
lea
call
xor
mov
call
andl
push
call
mov
test
pop
pop
pop
je
mov
push
push
call
lea
call
leave
ret
push
mov
push
mov
push
lea
push
lea
push
xor
push
pushl
mov
call
cmp
je
cmp
push
jne
xor
testb
je
mov
mov
mov
cmp
je
mov
mov
cmp
shll
inc
add
jne
cmp
jne
cmp
jne
mov
pop
pop
leave
ret
lea
pop
sub
add
jns
push
mov
call
cmp
je
mov
jmp
mov
mov
mov
call
cmp
jbe
pushl
mov
pushl
mov
pushl
call
xor
jmp
xor
jmp
xor
inc
jmp
mov
cmpb
jne
push
call
test
je
pushl
mov
pushl
push
call
ret
mov
cmpb
jne
mov
push
lea
call
test
je
mov
lea
call
xor
ret
push
mov
lea
call
mov
test
mov
je
add
push
call
test
pop
jne
push
call
pop
pop
ret
push
mov
sub
pushl
andl
mov
lea
movl
call
mov
test
jne
push
push
mov
lea
cmpl
push
je
xor
call
lea
mov
test
je
mov
lea
pushl
push
call
xor
mov
call
xor
mov
call
mov
test
mov
je
mov
push
call
test
jne
mov
mov
call
mov
test
jne
lea
mov
test
je
mov
mov
orl
mov
mov
and
jne
orl
cmpl
je
test
jne
call
add
mov
andl
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
mov
cmpb
jne
mov
test
mov
jne
and
neg
sbb
and
push
call
call
mov
jmp
mov
mov
lea
call
pop
pop
xor
pop
leave
ret
push
mov
push
mov
push
pushl
call
mov
pop
pop
ret
push
mov
push
push
andl
push
mov
push
mov
test
mov
je
push
call
pop
movl
mov
call
test
je
xor
cmp
jne
cmp
je
mov
cmp
je
cmp
je
push
call
pop
xor
pop
pop
leave
ret
test
je
movzwl
mov
mov
mov
incw
movzwl
cmp
je
test
je
cmpl
je
push
call
pop
xor
inc
jmp
push
mov
and
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
push
call
mov
mov
lea
mov
mov
mov
mov
lea
call
mov
lea
call
mov
call
mov
test
jne
mov
xor
cmp
mov
mov
je
push
call
pop
movl
push
lea
call
lea
push
push
mov
call
test
jne
call
pushl
mov
call
cmpl
pop
jne
cmpl
mov
jne
cmp
je
inc
mov
mov
movl
cmpl
jne
mov
sub
add
push
pushl
call
pop
pop
xor
cmp
je
cmp
je
pushl
call
pop
mov
cmp
je
mov
push
call
lea
call
cmp
je
mov
test
jne
cmpl
jne
lea
call
lea
call
pop
pop
xor
pop
mov
pop
ret
cmpl
je
andl
decl
jmp
movl
cmpl
je
decl
pushl
lea
call
mov
jmp
push
mov
sub
push
mov
push
push
mov
call
test
mov
je
mov
sub
mov
mov
mov
sub
pop
pop
mov
mov
pop
leave
ret
testl
je
mov
push
pushl
pushl
call
xor
ret
movl
jmp
push
mov
and
sub
push
push
push
lea
call
mov
lea
mov
mov
xor
mov
add
mov
push
mov
lea
push
mov
call
mov
test
jne
mov
cmp
jge
mov
xor
mov
and
inc
shl
mov
shr
shl
not
and
and
cmpl
je
lea
call
lea
push
mov
call
cmp
je
xor
inc
push
push
push
pushl
call
mov
andl
test
jne
mov
andl
test
jne
push
push
lea
push
call
lea
push
call
pop
pop
pop
mov
pop
ret
push
mov
push
mov
push
mov
call
test
je
push
mov
mov
mov
call
test
mov
je
mov
push
call
mov
test
je
mov
push
call
call
pushl
mov
push
call
mov
push
mov
call
mov
test
mov
je
mov
push
call
add
call
mov
pop
leave
ret
xor
jmp
push
mov
push
push
mov
cmpl
mov
mov
jne
call
mov
push
pushl
lea
push
mov
call
mov
test
mov
je
cmpl
push
push
jne
mov
mov
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
andl
push
lea
call
mov
mov
lea
push
push
call
test
js
mov
test
je
xor
cmp
jne
inc
mov
push
push
push
push
call
lea
call
xor
leave
ret
push
mov
sub
push
mov
test
je
mov
push
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
mov
xor
cmp
mov
je
lea
call
mov
mov
call
push
push
push
push
push
pushl
mov
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
mov
test
jbe
push
pop
mov
mov
mov
push
call
test
je
mov
mov
test
je
cmpl
je
mov
test
jne
mov
test
je
call
add
decl
jne
lea
call
lea
call
lea
call
jmp
mov
push
push
call
jmp
push
mov
and
push
push
mov
push
call
push
call
mov
fwait
pop
add
add
add
jae
add
push
cli
insb
add
pop
stos
pop
addr16
add
jae
aam
xchg
add
out
clc
out
mov
out
lock
jecxz
lea
add
int
add
loope
add
add
imul
add
stos
add
sarb
lods
leave
cmpsl
add
mov
add
add
push
mov
add
push
push
push
push
call
add
jge
add
call
mov
nop
cwtl
add
add
mov
roll
insb
add
add
mov
add
lret
add
add
add
add
push
cmc
lods
xchg
push
cmpsl
fwait
cltd
jl
int3
add
lea
pop
popl
push
push
push
push
push
push
push
push
push
call
add
add
fadds
pop
fs
popa
pop
jmp
add
movb
mov
xchg
call
mov
add
add
add
fldl
std
mov
add
mov
xchg
add
pop
test
lcall
jbe
mov
add
add
pop
push
push
push
push
push
call
add
xchg
in
gs
add
mov
add
add
lret
add
movsb
les
add
add
mov
add
mov
mov
add
add
into
jnp
pop
add
add
out
add
xchg
add
loope
add
cld
stc
in
mov
mov
add
filds
mov
lea
pop
push
push
push
push
lea
push
call
add
data16
notl
add
cwtl
addb
arpl
add
add
add
add
add
push
mov
add
arpl
add
add
mov
mov
lea
pop
push
push
push
push
push
lea
push
lea
push
push
push
push
call
add
fnstsw
pushf
ljmp
data16
add
add
addb
in
lock
mov
add
loopne
cli
fildl
pusha
add
test
test
nop
mov
pop
call
push
push
push
push
lea
push
call
loop
push
add
jb
test
insb
icebp
add
pop
pop
add
loope
out
add
add
add
int3
add
insb
add
mov
add
fiaddl
addl
bound
mov
lea
pop
call
push
push
push
push
push
push
push
lea
push
call
add
add
add
mov
fcoml
mov
add
add
push
or
shl
jbe
xorl
fldt
xchg
add
movsl
rcr
add
push
fldcw
add
add
add
sahf
mov
lea
pop
call
jmp
push
push
push
call
je
pop
mov
out
rolb
add
add
outsl
lcall
mov
mov
mov
pop
add
add
add
add
pusha
mov
jno
add
out
sahf
add
cmpsl
aad
add
add
add
mov
mov
add
add
pusha
sti
mov
lea
pop
ret
push
push
lea
push
push
push
lea
push
push
call
add
xchg
xchg
pop
mov
out
add
jae
fdiv
add
cld
add
mov
pop
jle
fldl
pop
add
lret
leave
stc
jno
aad
cld
pop
add
jae
fadds
add
fstp
jle
add
les
inc
in
mov
push
push
push
lea
push
push
call
add
incb
xchg
pushf
mov
mov
leave
fs
add
add
add
mov
cli
into
jp
aad
mov
lods
add
add
mov
cmpl
rcr
fdivr
jae
stos
cmc
cli
add
add
add
stc
add
js
hlt
add
loop
aam
bound
add
push
push
push
push
push
push
push
push
lea
push
call
mov
jmp
aad
clc
pop
shll
lods
mov
add
add
scas
add
int3
lcall
fidivrs
jbe
sahf
add
out
mov
fldl
push
scas
popa
mov
imul
fwait
mov
add
push
add
mov
arpl
pop
add
push
push
push
push
push
push
call
xlat
add
add
push
mov
std
add
add
aam
mov
sahf
cmpl
ret
push
lods
add
add
add
add
lcall
add
push
add
push
ja
add
add
call
sbb
ret
fildll
add
and
test
lods
push
clc
lds
outsl
xlat
js
inc
push
and
sahf
call
jb
out
jl
hlt
add
pop
outsl
shl
jne
into
lret
jmp
add
push
add
loopne
into
into
jno
add
add
scas
add
pop
add
loopne
int
loop
pop
movsl
addr16
add
push
jbe
mov
sar
xchg
lahf
add
add
mov
lea
pop
mov
push
push
push
push
lea
push
push
push
lea
push
push
push
call
lcall
add
mov
push
add
mov
add
add
test
jo
add
add
mov
add
add
add
enter
add
add
aad
imulb
add
pop
add
jl
fsub
xchg
jl
add
add
add
pop
mov
enter
add
hlt
lea
pop
xor
push
push
push
lea
push
push
push
push
lea
push
call
pusha
mov
add
les
lods
push
pop
add
add
divl
add
add
xchg
add
add
add
lcall
add
xchg
add
iret
add
push
mov
lea
pop
add
push
push
ror
push
xor
add
sub
sub
dec
sub
dec
pop
shl
pop
push
lea
push
push
push
push
push
lea
push
push
push
lea
push
call
cmc
arpl
repnz
mov
repnz
add
add
mov
in
icebp
push
int
hlt
xchg
enter
imul
add
pop
sti
add
movsl
icebp
xchg
add
stc
add
mov
cli
sahf
shll
add
mov
add
add
scas
xlat
popf
cli
adcb
push
xchg
aam
mov
cld
add
add
add
aad
lret
push
mov
lea
pop
pushl
call
push
push
push
lea
push
push
push
push
call
add
adcl
add
add
xorl
add
add
add
add
stos
test
imul
add
push
aam
lea
decb
add
add
repnz
lea
pop
mov
movl
push
push
push
push
push
push
push
push
call
subb
nop
add
add
mov
pop
leave
sti
lret
ret
add
mov
jmp
aam
add
add
bnd
pop
clc
fistpl
hlt
lea
pop
lea
push
push
push
call
data16
add
add
jnp
add
mov
add
add
add
add
xchg
add
add
hlt
jo
add
jb
stos
in
pop
push
add
mov
mov
stc
les
cmp
mov
lea
pop
pushl
push
lea
push
lea
push
push
lea
push
push
call
add
lahf
add
insb
add
mov
add
cltd
leave
add
add
xchg
enter
add
rcrl
mov
add
mov
jl
add
add
push
fiadds
mov
pop
add
mov
bound
pop
pushl
push
push
push
push
push
push
push
call
xchg
push
pop
mov
add
add
lcall
pusha
imul
in
add
add
andl
bound
jmp
add
int3
mov
add
mov
add
add
add
fmull
xor
add
push
push
lea
push
push
lea
push
lea
push
call
testl
loop
xchg
add
fwait
add
xchg
add
stc
add
mov
arpl
mov
add
lea
add
pop
pushl
push
lea
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
add
mov
aad
add
xchg
xchg
add
jns
add
add
test
loop
add
jo
add
aad
mov
add
add
mov
lea
pop
pushl
push
push
lea
push
push
call
push
add
mov
add
xchg
add
push
mov
stos
add
rolb
add
fidivrl
add
pop
push
add
add
add
add
mov
mov
subb
mov
imul
add
add
xorl
push
mov
in
enter
add
movsb
add
test
jnp
jne
add
add
pop
call
push
push
push
sub
add
shl
shl
sub
xor
xor
pop
sub
sub
pop
push
push
push
push
push
push
push
push
call
pop
fadds
add
pop
lock
lods
jmp
add
add
add
cwtl
add
imul
add
lock
mov
mov
push
mov
add
mov
test
xchg
push
into
add
insb
jb
ret
add
mov
add
jns
push
ret
mov
lea
pop
pushl
push
lea
push
lea
push
push
call
add
add
jb
add
cld
clc
mov
add
insb
mov
add
lret
insb
jae
add
add
stos
add
pushf
imull
jge
mull
pop
add
lock
sbbl
pop
add
gs
lea
pop
call
push
push
push
add
push
push
pop
add
dec
lea
sub
ror
lea
pop
lea
pop
push
push
call
ficompl
mov
int3
add
add
xchg
ja
testb
add
iret
xchg
xchg
add
push
pop
aad
add
mov
mov
lcall
loop
jae
add
pop
push
push
push
push
push
push
lea
push
push
call
push
add
jnp
add
mov
push
testl
jl
filds
jns
add
cmp
add
mov
mov
mov
add
stos
in
add
test
roll
add
fidivrs
lea
add
mov
jmp
add
cli
negl
lods
jns
fucomp
add
pop
call
push
lea
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
add
fistl
xchg
cld
add
test
add
test
mov
sahf
add
add
xchg
in
stos
mov
add
add
mov
push
imul
pop
mov
push
push
push
push
call
add
xchg
add
xchg
testb
add
fiadds
fs
mov
mov
negb
add
add
add
jmp
add
add
jb
lods
mov
add
aad
movsb
push
mov
lea
pop
push
push
push
push
call
divl
add
add
add
xchg
pop
jmp
je
test
push
out
popa
jne
test
add
push
jno
insb
add
lods
add
out
out
jae
add
jb
add
into
or
jo
stos
add
jecxz
mov
ljmp
add
add
movsb
test
clc
movsb
add
int
mov
mov
lea
pop
mov
add
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
mov
add
mov
jb
lods
add
jge
add
push
lret
add
pop
jecxz
xchg
add
add
ja
jp
fists
cwtl
out
add
add
add
popf
xchg
cli
lea
push
popa
call
repnz
add
fxam
ja
add
jo
add
add
pop
add
add
filds
add
add
add
pop
add
push
lea
push
lea
push
push
lea
push
push
push
call
icebp
lret
lret
movsb
pop
scas
add
add
mov
loopne
add
xchg
add
mov
clc
add
stc
pop
int3
add
add
in
sti
imul
addr16
lea
pop
add
mov
push
push
push
push
lea
push
push
call
ljmp
pop
mov
bound
add
jecxz
mov
add
into
mov
add
add
add
add
int3
push
add
sti
add
pop
push
xchg
add
add
rolb
movsb
stos
add
ljmp
cli
mov
push
add
lea
pop
xor
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
add
scas
les
fdivs
pushf
add
je
push
lret
add
jne
movb
rolb
enter
mov
mov
jno
addb
lahf
in
mov
add
loope
add
add
add
mov
jne
push
add
xchg
movsb
cmc
popf
add
mov
fildl
xchg
mov
lea
pop
add
push
push
call
enter
add
add
testl
add
add
add
add
outsl
push
mov
add
int3
stos
int3
jl
int3
outsl
jae
scas
add
add
test
add
add
add
add
push
shlb
lcall
add
addr16
js
mov
lea
pop
add
push
lea
push
lea
push
lea
push
push
call
cltd
int3
add
mov
add
jle
stos
add
movsl
add
popaw
add
int
push
aam
xchg
fdivrs
mov
add
test
xchg
jmp
lock
mov
add
mov
lea
pop
push
mov
xor
push
push
push
lea
push
push
push
lea
push
push
call
lods
test
add
add
mov
into
add
push
data16
fadds
mov
fldt
add
add
add
popf
add
nop
faddl
lock
add
push
xlat
js
in
add
jp
mov
stos
nop
fadds
add
push
in
jo
loop
arpl
lret
cmc
mov
add
pop
add
push
push
push
push
call
mov
xlat
jo
movsl
add
fadds
pop
test
add
stos
add
jmp
add
add
add
jecxz
add
pop
pop
push
push
call
out
xchg
nop
xchg
add
out
mov
add
popl
imul
cwtl
mov
notb
notb
add
mov
add
add
add
pusha
stc
add
fadd
add
add
add
in
add
addl
jmp
add
js
add
movl
fmull
dec
add
icebp
test
push
push
push
push
lea
push
push
push
push
call
mov
add
out
add
add
rcll
add
faddl
add
icebp
add
clc
mov
mov
fmul
jp
gs
add
mov
imul
shrb
sti
js
mull
int3
lea
pop
push
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
mov
mov
add
mov
mov
icebp
add
ljmp
add
xchg
jbe
xchg
add
xchg
add
mov
mov
push
leave
sahf
addl
mov
add
jae
mov
cli
mov
add
add
aad
push
add
add
int
add
in
add
mov
lea
pop
mov
xor
push
push
push
push
push
call
arpl
out
out
lods
cli
mov
add
cli
add
add
mov
mov
test
push
jmp
push
xchg
ret
out
test
mov
jmp
hlt
add
jae
mov
jo
in
push
clc
xchg
mov
lea
pop
sub
push
push
push
push
push
push
push
push
lea
push
push
call
aad
mov
add
xchg
lods
repnz
xchg
push
pop
cmp
add
add
push
lds
mov
jl
add
add
aad
jns
test
js
scas
testl
add
add
add
mov
roll
xchg
pop
pop
rep
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
add
xchg
mov
jno
ret
add
lds
int3
les
mov
stos
add
push
incb
call
movsl
rcrl
ret
jb
call
add
add
pop
xchg
data16
add
arpl
jbe
add
add
xchg
shll
shr
out
addl
aam
bound
pop
mov
push
lea
push
push
push
push
push
push
push
push
call
add
add
out
mov
insb
pop
add
out
add
icebp
jl
lock
cli
cltd
push
ljmp
cwtl
mov
mov
mov
lret
pushf
push
popa
pop
roll
pop
add
push
push
push
push
call
mov
pushf
jns
lds
cli
aam
icebp
add
icebp
add
add
fwait
mov
pusha
add
call
cld
add
mov
add
xchg
add
aam
in
rolb
stos
mov
add
add
fcoms
js
loopne
push
push
add
addr16
lea
pop
add
push
push
push
lea
push
call
add
mov
stos
add
mov
in
jmp
jmp
mov
ljmp
add
jae
jge
addl
pushf
add
push
rcr
fiaddl
mov
lret
mov
add
iret
add
lea
pop
add
push
push
push
push
lea
push
push
call
push
lods
shrb
aam
shlb
mov
add
mov
lahf
add
add
andl
jae
add
add
mov
add
add
pop
mov
lahf
add
icebp
add
popf
lds
add
add
add
mov
jmp
int3
lea
pop
mov
xor
push
rol
pop
mov
push
push
push
push
push
call
add
add
add
mov
pop
add
ret
out
push
xlat
loopne
sahf
mov
add
out
add
push
add
popf
add
fsubrl
sti
add
test
add
aam
cld
out
jo
add
add
add
push
add
pop
xor
push
push
lea
push
push
lea
push
push
lea
push
call
outsl
add
test
mov
test
add
jecxz
add
xchg
add
add
mov
fyl2x
jp
out
mov
jae
add
pop
lcall
in
popa
add
int
add
add
addr16
xchg
movsb
add
fwait
add
aam
bound
add
push
push
push
call
add
add
jecxz
test
add
add
test
cli
add
rorb
add
mov
pop
add
icebp
xchg
add
testl
add
leave
push
mov
add
mov
push
fcom
jmp
lea
pop
mov
xor
push
push
push
push
lea
push
push
push
push
push
call
scas
mov
testl
ljmp
lds
push
push
test
mov
add
add
aam
stos
jmp
incb
add
add
mov
add
add
add
add
mov
int3
xchg
add
cmpl
cld
lea
pop
add
add
push
push
push
push
lea
push
push
push
lea
push
push
push
call
jb
add
out
add
arpl
jge
mov
lret
push
add
cld
add
movb
popa
mov
and
mov
add
lret
cmpsb
jl
fst
in
add
jl
mov
push
add
add
test
mov
stos
jmp
imul
jns
cld
mov
aam
bound
pop
mov
push
push
add
push
or
not
add
inc
not
sub
not
pop
ror
shr
not
pop
push
lea
rol
pop
pushl
call
push
xor
rol
pop
push
push
push
push
and
add
inc
xor
sub
sub
sub
add
pop
ror
rol
sub
pop
push
lea
push
push
push
push
push
push
push
push
push
call
popl
popf
mov
add
add
rcrl
rclb
pop
sti
add
scas
iret
lock
push
into
int
mov
sti
mov
popa
sub
push
push
lea
push
call
imulb
out
outsl
mov
test
add
roll
div
add
add
mov
std
les
add
outsl
fcoml
push
add
js
jp
add
xchg
outsl
aam
shrl
pop
add
add
aad
mov
add
add
add
add
push
fcmovbe
fldenv
repnz
out
xchg
add
or
push
push
xor
sub
sub
rol
pop
call
push
shr
pop
mov
push
lea
push
call
pop
push
rolb
add
lea
leave
out
add
loop
mov
data16
lahf
leave
leave
mov
add
add
add
ljmp
gs
scas
imul
jecxz
stos
test
hlt
lea
pop
push
push
lea
push
push
push
call
ja
testb
jae
add
add
jae
iret
xchg
mov
nop
sahf
add
add
mov
imul
loopne
mov
add
push
cltd
add
add
movsb
pop
add
add
mov
add
pop
incb
add
aam
jnp
pop
add
pop
push
mov
push
push
lea
push
push
push
push
push
call
xchg
leave
lahf
jge
fwait
add
mov
add
fistpl
stos
in
fsubr
roll
add
mov
movsl
icebp
clc
outsl
add
add
add
cmc
lock
add
mov
add
pop
je
scas
mov
jmp
mov
mov
add
jmp
into
jecxz
popl
push
pop
xchg
mov
add
mov
mov
lea
pop
add
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
push
call
bound
add
cmpsl
add
data16
add
lods
fwait
add
jecxz
mov
pop
add
add
add
add
jno
bound
mov
xchg
add
mov
lea
pop
add
push
sub
pop
add
push
push
call
in
outsl
clc
fnstsw
add
add
add
add
mov
mov
mov
add
imul
mov
ljmp
sar
add
add
mov
cmpsb
je
out
lea
fildl
faddl
mov
mov
data16
cmpsb
pop
cli
add
push
cmc
shrb
add
fiaddl
rcr
cmpsb
mov
lea
pop
mov
xor
push
ror
add
shl
add
pop
add
push
lea
pop
push
mov
xor
push
push
lea
push
push
push
lea
push
push
push
call
jns
mov
mov
add
imul
fsub
fidivrl
cltd
xchg
add
int3
mov
add
stos
data16
addb
pop
jno
popa
rcrb
add
lea
cmpsl
add
stos
add
mov
add
add
aam
div
movsb
addr16
add
mov
testb
jne
add
jae
mov
rorb
pop
add
push
xor
add
pop
pop
mov
xor
push
not
shl
pop
rep
push
shl
pop
mov
push
push
push
call
stc
xchg
enter
add
xchg
icebp
jmp
add
js
add
add
data16
movsb
call
xchg
ret
lret
mov
fstp
ja
lea
rol
add
jmp
add
add
add
add
add
out
arpl
mov
xchg
add
cli
sti
fisttpl
pop
xor
push
push
push
push
call
int
add
jne
fwait
add
jp
mov
add
jp
pop
add
popf
cmpsl
add
in
push
pop
add
out
pop
mov
add
pop
add
add
add
add
call
add
fsubrs
cld
lea
pop
add
push
rol
lea
pop
or
je
push
push
push
push
push
push
lea
push
push
push
call
loop
add
andl
add
nop
add
out
add
add
add
stos
jae
cmpsb
shr
push
add
out
add
mov
pop
mov
rcrl
in
mov
lea
pop
mov
push
push
push
push
push
push
push
push
push
push
call
fadds
mov
add
mov
mov
movsl
add
xchg
movb
mov
test
pop
test
jne
lods
test
lods
xchg
xchg
sti
mov
cmpsl
add
add
scas
shll
add
jle
clc
add
mov
and
xor
push
lea
push
push
lea
push
push
push
push
call
add
iret
hlt
add
add
add
add
out
push
scas
add
add
in
stc
push
fmulp
cmc
add
mov
add
into
jmp
add
jge
add
cld
cli
jnp
loopne
add
addr16
add
push
lea
lea
sub
shr
pop
mov
push
push
lea
push
push
push
lea
push
push
push
push
push
call
popf
push
div
jb
jbe
xchg
add
fadds
add
add
add
mov
mov
xchg
les
pop
add
pop
rcrb
add
pop
xor
push
push
push
push
push
push
call
add
add
mov
ror
add
jne
push
cld
add
mov
ror
push
jecxz
add
pushf
add
mov
fsubl
add
std
out
mov
lea
pop
add
push
lea
sub
shl
pop
add
push
rol
pop
add
push
not
pop
push
push
sub
add
pop
mov
push
push
push
push
lea
push
push
push
call
andb
add
add
push
add
mov
add
movsl
add
add
lret
pop
add
scas
aam
fldl
mov
testb
rcll
insb
test
shrb
jp
xchg
pushf
add
add
popf
shlb
add
jbe
add
loope
rcll
pop
jle
roll
pop
xchg
mov
mov
fistpl
arpl
pop
xor
push
push
push
call
add
je
scas
jns
rolb
out
loop
add
add
add
add
add
add
loopne
shlb
jle
mov
flds
add
push
lret
add
scas
sahf
add
add
mov
mov
jns
add
add
jo
pop
cwtl
shlb
arpl
add
push
lea
push
push
lea
push
lea
push
lea
push
call
cltd
mov
add
add
mov
add
jmp
cwtl
mov
pop
push
pop
mov
jge
rolb
int3
add
fadds
lahf
mov
test
push
add
xchg
jo
add
add
mov
cld
cwtl
pop
rolb
cmc
call
mov
hlt
lea
pop
add
push
xor
add
pop
pop
push
push
push
push
push
call
lods
out
add
add
mov
pop
add
add
xchg
add
mov
xchg
push
lahf
popa
push
mov
into
jp
roll
pop
mov
ljmp
rep
mov
push
push
lea
push
lea
push
push
push
push
push
push
push
push
call
mov
divl
jmp
add
add
mov
outsl
xlat
mov
or
pop
add
xorb
mov
scas
add
add
add
add
jnp
add
out
add
jnp
lds
pop
xor
push
push
push
lea
push
call
fiaddl
in
test
mov
add
jle
add
stos
aad
test
fwait
in
xchg
mov
pop
add
xchg
jl
jmp
pop
mov
add
out
jp
mov
add
fcmovbe
cmc
hlt
std
mov
add
mov
imul
add
ret
mov
add
roll
lret
mov
mov
hlt
lea
pop
add
push
push
push
push
call
addb
add
add
pop
arpl
add
fstp
addr16
mov
repnz
add
loop
pop
add
scas
xchg
xchg
add
add
add
xchg
xchg
fdivp
xchg
jle
cwtl
add
cld
lea
pop
or
je
push
add
pop
mov
push
shl
shl
pop
add
push
push
push
call
icebp
pop
add
scas
xlat
aad
lods
faddl
js
add
pop
add
imul
mov
add
rcl
lods
jle
add
add
add
test
test
stc
data16
stos
add
movsl
mov
fisubrl
icebp
add
add
aam
bound
add
rep
push
push
push
lea
push
push
push
push
push
call
out
shr
bound
mov
popa
add
hlt
add
out
int3
push
add
add
mov
add
repnz
jmp
add
sti
jp
fadds
xchg
add
test
mov
jae
outsl
mov
out
add
xchg
add
add
add
jnp
add
andb
push
add
and
push
push
sub
sub
sub
push
or
inc
add
not
add
sub
add
shr
pop
sub
ror
inc
pop
push
push
push
lea
push
call
mov
mov
fildll
add
mov
cli
aad
push
xchg
add
int
aam
mov
add
out
mov
stc
add
sahf
rclb
fs
add
jb
pop
add
mov
mov
mov
lea
pop
pop
push
push
lea
push
push
push
lea
push
lea
push
push
call
cli
gs
jo
push
push
xchg
leave
xchg
add
add
imul
mov
mov
push
js
xchg
add
ror
arpl
xchg
add
add
std
jno
add
cwtl
ja
add
xchg
pushf
add
outsl
mov
lea
pop
mov
mov
push
push
push
push
push
call
lahf
mov
jae
add
add
imul
add
mov
add
add
add
out
out
push
push
add
jbe
add
add
add
pushf
clc
into
jae
add
lret
in
jge
mov
push
jl
mov
lea
pop
mov
push
not
dec
pop
jmp
push
inc
lea
rol
shl
pop
push
mov
push
push
push
lea
push
push
call
sti
xchg
xchg
add
lahf
jnp
aam
mov
add
fucomp
add
xchg
add
xchg
add
mov
fwait
rolb
add
add
add
jge
push
add
sti
add
add
add
cwtl
loop
loope
fmull
cld
push
push
lea
push
push
push
call
jnp
mov
insb
add
out
addb
add
add
nop
add
mov
in
jp
add
pushf
je
jmp
pop
mov
add
loopne
in
add
stos
ret
add
imul
add
mov
jnp
fdivr
jecxz
div
cltd
add
add
sti
add
push
add
mov
mov
sahf
add
lea
pop
push
push
push
lea
dec
pop
push
push
push
push
push
push
push
push
push
lea
push
call
ljmp
js
sahf
out
add
add
jae
add
mov
add
add
cmc
mov
lret
stos
int3
add
add
fsubrp
in
add
add
fdivrs
idivb
add
add
mov
add
shlb
add
add
lahf
lahf
add
stos
fwait
push
add
lea
pop
push
mov
push
push
push
push
push
push
push
call
flds
mov
mov
add
add
fildl
mov
pop
pop
pop
cmpsl
arpl
jno
fidivrs
stc
stc
mov
mov
into
add
xchg
add
pop
add
mov
enter
jns
sahf
add
add
outsl
pop
clc
add
add
pop
pop
push
push
push
push
push
lea
push
push
push
push
push
call
push
add
addb
mov
sahf
icebp
jmp
add
add
lcall
add
loop
xchg
lds
add
bound
add
add
add
add
push
data16
add
addb
add
push
mov
add
add
pusha
lds
lea
pop
pop
pop
push
push
push
call
mov
add
add
ret
movsl
popa
add
add
mov
add
add
add
mov
imul
add
add
out
xlat
push
add
add
add
pop
hlt
add
jb
into
mov
add
ljmp
mov
data16
pop
leave
push
ror
not
pop
ret
push
not
sub
pop
push
mov
push
not
pop
add
push
lea
push
push
call
lock
mov
add
add
popf
add
sbbl
add
fwait
ljmp
repnz
imul
add
add
fiaddl
in
mov
lea
pop
push
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
add
addr16
jb
add
jmp
loopne
mov
ret
imul
add
xlat
mov
mov
add
sar
add
lahf
fstl
mov
imul
add
push
mov
lea
pop
push
push
push
push
push
call
mov
flds
aad
add
add
mov
jge
add
mov
add
lods
ret
fsubrs
ljmp
cwtl
addr16
pop
adc
add
add
add
lret
mov
mov
rcrb
lea
pop
push
push
shl
pop
push
movl
push
push
push
push
push
call
mov
mov
add
std
cli
add
ffreep
lea
add
add
push
gs
push
data16
add
cmc
add
clc
fsubrl
add
pop
add
add
mov
shl
xchg
pop
in
pop
jecxz
loopne
add
add
mov
mov
mov
add
add
repnz
push
addl
jle
cld
lea
pop
addl
push
push
push
call
iret
loop
mov
mov
mov
xorl
push
jecxz
add
loop
mov
cli
add
push
fwait
jecxz
movsl
add
lods
add
mov
xchg
stc
jl
add
add
mov
or
test
je
mov
push
push
push
lea
push
push
push
push
call
test
add
push
jno
sti
call
mov
pop
add
push
xchg
testl
in
jns
mov
jle
add
jns
add
push
test
add
mov
add
add
lods
in
jb
cli
add
jecxz
jl
add
pop
pop
push
xor
pop
pop
pop
push
push
push
push
call
mov
add
add
lods
test
add
xchg
add
mov
loopne
enter
add
cwtl
add
les
add
mov
add
rolb
jp
cltd
jnp
add
add
add
lods
add
jl
jb
mov
lea
pop
pop
push
push
push
lea
push
call
movsl
add
push
xchg
cwtl
imul
jbe
in
add
cld
cld
cmc
hlt
cmpsl
add
add
pop
xchg
fisttpll
outsl
add
in
in
icebp
push
add
add
xchg
loop
add
xchg
repnz
add
xchg
mov
jnp
fstl
add
mov
lea
pop
leave
push
push
lea
push
push
push
push
push
call
add
add
add
add
jmp
add
add
cld
outsl
sti
cmpsl
into
insb
mov
add
pop
ret
aad
add
gs
add
cltd
loopne
add
pop
ret
push
add
sub
sub
dec
pop
push
push
lea
pop
mov
push
push
push
push
call
add
sti
aad
add
xchg
andb
loop
rolb
jmp
add
add
decb
mov
push
hlt
popaw
add
movsb
cmpsb
repnz
add
mov
mov
mov
lea
pop
add
push
push
push
push
push
push
lea
push
push
push
push
call
add
add
add
add
xchg
in
xchg
add
add
ret
add
push
popa
add
icebp
out
pop
jl
sahf
lcall
add
sahf
add
add
add
fadds
lret
fs
add
sub
push
push
push
push
call
jl
add
mov
shlb
xchg
lock
lea
clc
add
add
aam
cwtl
mov
add
mov
test
add
lret
bound
insb
lock
mov
add
jne
out
jbe
cwtl
add
add
add
jge
xchg
add
add
jecxz
fiaddl
add
jl
loop
aam
bound
pop
push
push
push
sub
shr
pop
push
push
push
push
call
jp
outsl
mov
add
add
add
xchg
jnp
test
clc
arpl
mov
sti
add
insb
add
fistpl
add
xchg
cmpsl
xchg
add
les
leave
jnp
ret
mov
lea
pop
testl
addl
push
lea
push
push
push
lea
push
lea
push
call
nop
cmpsb
pop
lods
add
jmp
push
addb
add
lock
add
add
add
add
add
fwait
pop
add
mov
insb
add
add
add
frstor
xchg
pop
into
enter
lds
add
mov
push
out
out
out
les
mov
pop
lock
mov
lea
pop
push
call
push
pop
mov
push
not
add
dec
pop
pushl
push
sub
ror
xor
add
pop
push
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
test
lahf
cmpsl
testb
xchg
test
add
sahf
add
into
cmc
add
lcall
mov
add
int
add
jb
cmpsl
push
xchg
push
mov
stc
add
add
add
add
sahf
xchg
icebp
add
scas
mov
lea
pop
call
push
lea
push
push
call
jmp
add
mov
add
cmpb
imul
add
add
add
pusha
in
add
add
add
loopne
cwtl
add
add
push
popf
add
iret
cltd
add
pop
jb
add
mov
int3
jmp
add
xchg
add
add
pop
cmpl
jne
push
push
lea
push
lea
push
push
push
call
sahf
out
add
loopne
shrb
add
shl
add
data16
sahf
in
lods
scas
in
movb
add
call
arpl
add
lea
lds
add
rolb
insb
add
pop
testl
lea
pop
pop
push
push
push
lea
push
lea
push
push
push
call
scas
add
add
mov
jo
add
push
add
lcall
mov
add
movl
in
cwtl
add
add
add
add
add
mov
pop
in
push
mov
pop
lds
xchg
add
xchg
pop
mov
arpl
clc
stc
mov
mov
mov
lea
pop
pop
push
push
push
push
push
push
push
push
push
call
jo
add
fstps
mov
push
mov
add
fwait
lret
popf
add
stc
add
add
add
add
add
jbe
add
add
movsb
imul
fcoms
mov
add
add
out
add
mov
and
pop
pop
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
arpl
xchg
insb
add
mov
pop
shll
xchg
add
lahf
add
andb
fldl
add
movb
add
movb
mov
sti
add
lcall
add
xchg
add
outsl
push
add
add
add
lea
pop
leave
push
push
push
push
call
cmpsl
push
pushf
ret
cmpsb
add
jbe
iret
add
cmc
add
mov
add
mov
fcmovnu
pop
add
mov
add
add
jns
mov
in
mov
xchg
lret
aad
add
bound
jmp
pushf
mov
cld
lea
pop
ret
push
add
pop
push
push
push
push
push
push
push
call
outsl
mov
mov
in
test
data16
add
add
jecxz
add
mov
out
xchg
lret
scas
pop
test
add
lock
add
xchg
push
mov
ffree
add
mov
lea
pop
mov
push
push
lea
push
push
lea
push
push
push
push
call
push
add
sarb
leave
fst
leave
add
add
movl
stos
add
add
push
pop
add
pop
imul
jge
add
push
loop
mov
add
in
iret
push
add
add
add
add
in
add
add
mov
add
add
sahf
pop
test
pop
add
push
push
pop
push
push
add
pop
push
push
push
push
lea
push
lea
push
push
push
push
push
push
call
std
arpl
shr
test
sahf
out
add
fadds
lods
add
add
jp
fstps
add
add
pop
addb
pop
in
mov
mov
add
cltd
in
jl
out
movsb
add
fisubs
add
jecxz
xchg
call
add
add
icebp
outsl
add
add
out
hlt
add
jnp
fsub
add
add
pop
push
push
shr
sub
pop
movl
push
push
push
push
push
push
push
call
and
popa
push
test
add
jl
mov
fdivrl
fildll
xchg
les
mov
nop
add
test
add
add
in
add
je
mov
call
add
xchg
andb
add
mov
mov
jne
cli
add
rolb
mov
lea
pop
push
push
add
dec
shl
pop
call
push
sub
pop
push
push
sub
lea
sub
pop
call
push
lea
push
push
call
movsl
imul
sahf
xchg
test
add
mov
add
fiaddl
insb
mov
andl
mov
hlt
xchg
add
addr16
loopne
repnz
lods
add
test
mov
jbe
sbbl
in
scas
push
push
lds
stc
insb
lret
popf
arpl
aam
bound
subl
push
push
push
call
movsb
mov
add
mov
notb
add
add
xchg
mov
xchg
mov
add
cld
mov
push
lods
movsb
ror
gs
push
add
popf
add
add
add
fmul
push
push
imul
mov
stc
mov
add
lds
add
cli
cmpsl
popl
add
mov
lea
pop
cmpl
jne
push
lea
push
call
fldl
aad
add
xchg
ljmp
les
lret
add
xchg
add
hlt
clc
int
add
xchg
loop
loopne
mov
iret
add
mov
aam
push
lock
lea
pop
pop
push
push
push
push
push
push
lea
push
push
lea
push
call
mov
loope
cli
add
add
in
stos
movsl
xlat
ret
add
rolb
lahf
add
ret
mov
lret
mov
fstp
idiv
stos
out
add
add
pop
mov
lea
pop
pop
pop
push
lea
not
pop
pop
leave
push
lea
push
push
push
push
lea
push
push
push
push
push
call
in
pop
mov
add
rolb
mov
test
popf
addb
jno
repnz
add
insb
lcall
int
nop
loop
loope
add
cld
lret
js
mull
xchg
add
add
icebp
jbe
add
test
mov
jno
cli
add
add
popa
jle
jbe
mov
lea
pop
ret
push
lea
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
jbe
mov
push
bound
add
add
add
iret
mov
loop
fistpl
add
add
loope
test
cwtl
add
movsl
xchg
mov
lea
pop
push
push
inc
add
add
pop
mov
push
add
shr
pop
add
push
push
lea
push
push
push
lea
push
push
push
lea
push
lea
push
call
mov
stc
mov
xlat
into
fsubrl
fs
fcomp
hlt
mov
subb
loope
lcall
add
push
stc
xchg
call
mov
add
mov
jbe
lret
mov
add
mov
lea
pop
push
push
push
sub
xor
inc
pop
push
push
lea
push
push
lea
push
push
push
call
push
add
mov
rcrb
mov
push
cwtl
add
add
add
mov
mov
add
lods
lret
add
xorl
movsl
add
test
xchg
push
add
add
jae
add
scas
add
add
out
fwait
jb
aam
bound
pop
push
mov
push
dec
pop
lea
push
push
push
lea
push
lea
push
call
pop
add
add
add
test
cli
add
leave
add
jge
add
shlb
stc
add
add
out
mov
stos
mov
stos
add
add
mov
add
scas
add
push
add
pop
mov
lea
pop
sub
push
lea
push
push
call
fildl
add
add
fnstenv
fxch
clc
add
mov
scas
out
out
jp
push
add
add
push
jle
push
add
add
add
xchg
mov
lods
xchg
add
add
xchg
cmc
mov
ror
ret
add
in
add
add
add
mov
addr16
mov
push
lea
push
call
pusha
sarl
add
inc
add
add
add
add
add
add
add
xchg
add
pop
out
mov
jmp
mov
stc
push
ret
mov
test
xchg
add
add
or
call
push
ror
inc
pop
mov
mov
push
ror
sub
lea
pop
add
push
push
push
push
call
add
add
add
add
test
enter
cltd
cmpl
add
xchg
jns
mov
roll
add
add
jmp
popa
add
lods
add
mov
add
push
faddl
add
sahf
add
add
add
mov
lea
pop
add
push
push
push
push
push
push
lea
push
push
push
lea
push
call
mov
jle
enter
in
js
mov
stos
cltd
enter
push
fiaddl
cmc
lahf
add
cmpsl
test
push
imul
testb
mov
add
mov
sar
add
add
mov
add
sub
inc
add
add
push
rol
ror
pop
cmp
jne
push
add
lea
dec
shl
pop
cmp
jne
push
not
xor
ror
pop
mov
push
lea
pop
movl
jmp
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
cltd
add
pop
mov
add
fildl
mov
fiaddl
mov
add
cmc
add
add
xchg
add
pop
push
jl
jno
add
stos
add
add
push
jae
xchg
neg
add
mov
add
add
add
add
cld
add
cmpl
mov
lea
pop
mov
push
sub
pop
mov
push
push
push
push
call
add
loopne
shll
rolb
add
mov
scas
add
add
add
add
cmpsb
add
add
stos
add
add
add
into
mov
push
sahf
stos
jo
add
jno
pop
repnz
int3
lea
pop
sub
jne
push
push
push
push
push
push
push
call
fnstenv
into
aam
pop
push
mov
cltd
lahf
stos
aam
pop
add
jle
ret
add
add
movsl
insb
add
loop
stc
nop
test
loope
repnz
mov
push
jbe
ficompl
add
add
call
add
add
aam
add
lock
mov
lea
pop
mov
push
push
lea
push
call
add
mov
mov
add
add
rcrl
pop
mov
pop
mov
mov
pusha
add
lds
fldlg2
int3
add
movsb
mov
add
add
cwtl
lods
imul
push
add
xchg
add
movsl
gs
lds
push
ret
add
add
cmpsb
jl
pop
add
mov
lea
pop
movl
push
push
push
push
call
add
out
push
mov
fs
insb
mov
fisubl
add
add
ror
xchg
add
add
add
cmpsb
in
add
roll
pop
movsl
add
pop
arpl
fld
in
mov
lea
pop
jmp
push
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
xlat
add
add
xchg
lock
fwait
pop
lods
mov
incb
out
sahf
mov
add
add
fmul
mov
addl
add
cltd
add
add
gs
lea
pop
mov
push
push
lea
push
call
js
add
test
add
mov
xlat
add
add
add
shrb
add
subb
addl
add
add
leave
mov
in
add
mov
scas
push
add
std
add
jmp
ljmp
add
mov
lea
pop
mov
cmp
jne
push
dec
shr
pop
mov
push
push
push
lea
push
call
roll
gs
mov
mov
lds
add
add
bound
xchg
add
add
pop
add
add
add
adcb
pop
in
add
add
pop
jp
les
add
add
add
jne
add
push
not
rol
pop
mov
push
push
lea
push
push
push
call
les
mov
enter
popa
add
add
add
lds
xchg
ja
add
mov
test
add
test
cwtl
mov
mov
fsubrl
lods
add
add
mov
hlt
add
add
js
clc
mov
ja
jle
add
test
add
jmp
lcall
les
loop
add
mov
arpl
cmpw
jne
push
shr
pop
mov
push
push
push
push
push
lea
push
push
call
add
in
int
jp
out
add
cld
addb
mov
add
add
jno
push
lods
add
push
lret
add
aam
add
add
add
call
fbld
movsl
add
in
iret
insb
sahf
mov
jle
push
pop
jbe
mov
lea
pop
movl
push
xor
pop
jmp
push
sub
sub
lea
pop
pushl
push
push
push
push
lea
push
lea
push
push
push
call
or
jae
mov
pop
pop
push
out
push
add
lock
movsb
addl
xlat
push
pop
add
add
add
stos
add
hlt
insb
mov
mov
std
aam
add
les
add
jb
add
hlt
lea
pop
pop
push
push
call
add
sarl
mov
mov
in
add
add
add
je
fwait
lods
loop
add
scas
add
push
add
jmp
pushf
add
imul
push
clc
add
push
repnz
jne
fnstenv
add
add
add
mov
pop
les
lea
pop
mov
mov
push
lea
push
push
push
push
push
push
call
add
clc
mov
jb
icebp
add
fsubrs
push
loope
scas
pop
xchg
jbe
xor
test
add
add
fsubs
out
lahf
mov
pop
add
bound
mov
out
add
outsl
lea
add
lods
mov
sahf
add
movl
into
add
push
lret
add
movb
imul
sti
push
mov
lea
pop
mov
push
push
not
rol
push
or
inc
add
lea
sub
not
dec
pop
not
pop
push
lea
push
push
call
insb
roll
test
cltd
add
mov
add
add
jle
pop
jmp
jne
mov
roll
lcall
push
aam
fs
add
cmpsb
cmc
add
add
nop
add
add
jb
mov
lea
pop
push
push
shr
ror
pop
call
push
push
push
push
call
add
imul
testl
push
add
into
pop
add
add
jle
cmpsb
push
add
push
jae
add
add
jno
add
jae
call
stc
add
xchg
add
add
add
mov
popa
mov
data16
js
int3
fldz
ret
push
or
add
lods
pop
inc
push
shr
shl
push
and
add
sub
shl
sub
sub
xor
pop
pop
push
add
not
shl
pop
push
call
push
push
call
jns
jno
jb
add
bound
jbe
add
add
data16
mov
add
stc
mov
add
add
add
add
test
add
movl
fmull
js
int3
fldz
ret
ret
or
add
mov
inc
push
xor
sub
inc
push
sub
add
add
sub
sub
sub
dec
not
ror
pop
not
pop
push
push
lea
push
push
push
lea
push
call
pop
lock
mov
jle
fadds
add
add
rcrl
jb
add
add
rolb
add
mov
jo
addl
popf
xchg
addl
mov
add
lds
jge
out
add
add
pop
push
push
push
push
push
lea
push
call
mov
add
mov
xchg
add
add
add
cltd
add
add
ljmp
bound
mov
mov
mov
add
scas
add
test
sahf
loope
iret
add
shll
add
out
xchg
lcall
lea
pop
call
cmpl
je
push
push
add
shl
push
or
inc
add
inc
sub
shr
pop
add
add
shr
pop
push
lea
push
push
call
mov
add
add
lods
pop
cmpsb
lahf
add
add
int
xchg
std
hlt
mov
xchg
pop
add
mov
xlat
pusha
add
cld
lock
add
add
roll
push
mov
lea
pop
push
call
push
ror
pop
cmpl
je
push
push
inc
push
push
pop
add
add
sub
shl
xor
rol
pop
add
lea
pop
push
not
shr
pop
push
push
not
dec
rol
pop
call
cmpl
je
push
push
lea
lea
ror
push
sub
add
add
rol
sub
ror
inc
add
inc
pop
sub
xor
pop
push
shl
pop
push
push
rol
inc
dec
pop
call
push
push
push
call
add
xlat
pusha
fdecstp
add
mov
pop
addr16
add
jecxz
fbld
std
add
add
mov
jmp
pushf
add
jne
fmull
int
addl
mov
pop
add
lahf
loop
add
icebp
loop
in
pushf
jne
add
fiaddl
jge
xchg
add
xchg
negb
add
add
push
add
add
out
xchg
mov
lea
pop
cmpl
je
push
push
add
shl
push
sub
add
sub
pop
add
not
add
xor
pop
push
push
call
cmpl
add
add
add
add
add
add
fldl
add
fwait
cmpsl
cmc
add
in
popa
fyl2x
arpl
loope
add
je
cld
push
jmp
std
popf
add
loope
popa
add
add
int3
lea
pop
push
push
inc
add
pop
call
push
push
lea
push
lea
push
push
push
push
push
push
call
int
pop
mov
fcmove
ret
add
popa
add
bound
popa
add
mov
add
push
add
add
cwtl
xchg
rorl
pusha
sahf
jl
add
add
add
hlt
cmpsb
push
xchg
fisubrs
add
add
xchg
add
popa
and
cmpl
je
push
push
xor
sub
shl
push
sub
add
shr
dec
sub
dec
pop
lea
pop
push
push
push
call
testl
add
mov
add
add
shr
xchg
add
je
add
std
popa
ror
fwait
add
add
in
add
push
add
xchg
pop
ja
shlb
test
scas
loop
fmull
push
inc
add
pop
call
push
inc
pop
cmpl
je
push
push
ror
not
push
push
pop
add
add
sub
xor
shr
pop
not
shl
lea
pop
push
push
push
lea
push
push
push
lea
push
push
call
outsl
stos
add
add
mov
add
jae
loop
mov
add
pop
add
push
fdivrs
add
add
add
jge
mov
iret
add
add
add
add
test
mov
lea
pop
push
push
lea
push
push
push
push
push
push
lea
push
push
push
call
add
mov
xchg
jo
in
gs
call
rolb
add
insb
add
add
mov
mov
imull
push
add
push
fcmovne
call
addr16
mov
mov
test
pop
call
cmpl
je
push
push
add
push
or
inc
add
ror
xor
inc
sub
not
lea
not
xor
pop
add
lea
pop
push
lea
not
ror
not
pop
push
push
push
push
push
lea
push
call
mov
jecxz
mov
into
arpl
add
add
out
add
cmc
add
push
jle
add
je
add
lods
iret
mov
scas
cmpsb
add
mov
add
sti
push
pushf
pop
add
int
mov
lea
pop
call
push
push
lea
push
push
push
push
push
push
lea
push
call
add
mov
cld
mov
jge
jmp
add
push
lcall
add
jb
add
add
popf
add
cmpsb
add
add
mov
add
ljmp
pop
add
adcb
lea
pop
cmpl
je
push
push
shl
add
ror
push
xor
add
sub
rol
not
sub
ror
lea
pop
inc
inc
sub
pop
push
push
push
lea
push
push
call
adcl
loopne
add
add
int
lock
fistpll
in
push
add
lock
lret
add
mov
repnz
lds
lahf
negl
std
data16
xchg
subb
add
rol
add
add
add
cli
js
add
mov
popa
adc
push
push
push
lea
push
push
push
call
add
xchg
pop
in
int
rcr
xlat
add
add
cmpsb
mov
add
movl
xchg
jle
add
add
pop
jbe
lret
pusha
iret
add
iret
aad
ret
jmp
add
bound
call
cmpl
je
push
push
sub
push
xor
add
ror
sub
ror
xor
pop
xor
pop
push
add
shl
pop
push
push
not
sub
pop
call
push
inc
inc
pop
cmpl
je
push
push
sub
push
push
pop
add
sub
sub
shl
sub
shr
pop
add
shr
pop
push
push
push
push
push
push
push
call
add
int3
mov
xlat
mov
popl
add
add
mov
add
movsb
jge
js
mov
insb
add
fucom
xchg
ret
xorb
iret
xchg
add
loop
add
add
jae
and
add
add
push
add
test
icebp
add
xchg
fwait
pop
pop
add
add
lea
pop
push
call
push
push
push
push
push
lea
push
call
rolb
add
test
popl
addl
xchg
cld
add
clc
add
add
out
in
add
into
lods
int
jnp
jb
add
in
lods
mov
notl
mov
pop
add
in
add
xchg
loope
in
into
test
clc
out
add
add
mov
hlt
enter
push
mov
add
out
add
mov
lea
pop
cmpl
jne
push
lea
push
push
call
roll
cmpb
push
sti
cmpsb
add
xchg
add
addl
mov
mov
push
jl
iret
movsl
add
add
add
into
arpl
add
add
sbbl
imul
add
add
lret
fistpl
mov
lcall
mov
lea
pop
mov
push
ror
not
pop
movl
push
push
push
push
push
push
push
push
push
call
add
add
xchg
mov
mov
add
fdivrs
mov
mov
add
xchg
lahf
cmpsl
mov
popa
ret
clc
scas
add
fbld
int
add
mov
lods
loope
bound
jp
add
add
jp
add
fisubrs
add
cld
push
xchg
add
add
mov
lea
pop
jmp
push
inc
shr
pop
xor
push
not
pop
pop
pop
push
sub
ror
shr
add
pop
pop
pop
push
push
call
mov
add
add
insb
add
mov
xlat
mov
add
addl
jns
add
jmp
in
pop
add
add
int
in
movl
test
jle
add
lea
jns
test
push
jle
mov
in
rcrl
add
pop
leave
push
shr
pop
ret
push
push
push
push
lea
push
push
call
add
mulb
jl
xchg
add
add
lret
imul
jb
push
push
add
add
lods
cld
push
call
add
add
test
add
js
add
sarb
popf
add
add
mov
jmp
int
roll
rcll
add
add
mov
mov
lea
pop
mov
add
push
push
lea
push
push
call
mov
add
add
jmp
mov
push
mov
add
xchg
popa
add
add
enter
iret
push
mov
jecxz
add
test
std
fildl
incb
push
lock
add
mov
xchg
add
repnz
add
test
add
mov
aam
bound
pop
cmpl
jne
push
push
xor
shr
ror
push
push
pop
add
dec
inc
shl
sub
dec
add
sub
lea
pop
inc
lea
add
pop
push
push
push
push
push
lea
push
call
push
jae
add
cmpsb
pusha
add
into
add
out
add
xchg
push
addl
mov
out
in
aad
add
mov
add
arpl
push
add
mov
bound
ja
mov
fsubp
push
add
add
add
shlb
add
add
pop
push
je
hlt
lea
pop
pushl
call
push
lea
push
lea
push
push
push
lea
push
push
call
out
add
push
aam
pushf
add
out
sti
jge
imul
add
popa
testb
mov
scas
add
mov
fs
add
pushf
add
mov
pop
mov
hlt
std
add
jge
add
fsubrl
aam
add
xchg
sti
negb
aam
add
add
add
les
mov
lea
pop
push
call
push
dec
rol
add
pop
jmp
cmpl
je
push
push
lea
push
call
lret
popa
jb
movsl
mov
add
test
jb
jne
mov
add
xchg
divl
jae
add
add
cli
add
cmpsb
pop
mov
add
js
add
fcomps
enter
add
mov
add
jnp
mov
push
mov
addl
add
pop
cmpl
jne
push
push
lea
push
push
lea
push
push
push
push
call
mov
xchg
add
add
xlat
int
hlt
add
in
add
xchg
mov
add
mov
add
bound
add
jb
add
cmp
shlb
mov
lea
pop
leave
add
push
add
ror
sub
pop
pop
push
shl
sub
pop
pop
pop
push
add
add
pop
pop
leave
push
push
push
push
call
out
mov
mov
pop
jl
add
add
mov
outsl
add
int3
sbbb
addb
cwtl
cmpsl
pop
popf
mov
add
adcb
js
mov
xchg
add
pop
add
push
sub
rol
pop
ret
push
lea
push
lea
push
lea
push
push
lea
push
push
lea
push
push
call
ja
pop
mov
add
mov
jne
mov
add
add
mov
mov
fldl
add
popa
mov
popl
in
jb
ret
loope
add
add
mov
mov
lea
pop
jmp
push
push
push
push
lea
push
call
add
add
add
add
mov
mov
add
outsl
fnsave
add
loop
leave
mov
fyl2xp1
out
add
andb
pop
push
add
mov
js
cmpsb
add
add
add
add
add
pop
cmpl
jne
push
push
inc
push
push
pop
add
sub
not
sub
add
xor
xor
sub
pop
sub
sub
pop
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
add
popa
jmp
add
jge
xlat
jmp
stos
add
xlat
xchg
movl
xchg
cltd
roll
mov
in
jge
add
add
fwait
add
mov
add
add
add
jb
add
mov
fwait
add
call
add
jp
mov
add
add
icebp
add
pop
pushl
call
push
push
push
push
push
call
mulb
je
loopne
add
add
add
lods
push
xchg
out
cld
cmpsb
lods
push
add
add
add
mov
xchg
roll
out
add
popa
data16
add
push
add
faddl
add
add
outsl
imul
add
add
add
imul
incb
add
add
push
mov
lea
pop
push
push
add
add
pop
call
jmp
push
push
push
push
push
push
push
push
push
push
call
push
add
mov
jp
pop
cltd
push
pop
shl
xchg
sarl
add
jmp
addr16
outsl
scas
hlt
add
scas
mov
mov
iret
add
test
add
sahf
mov
add
mov
lea
pop
cmpl
jne
push
add
ror
rol
pop
mov
push
ror
shl
rol
dec
pop
mov
push
push
lea
push
call
aad
mov
pop
sahf
add
add
add
add
in
cmpsb
add
je
jo
out
idiv
ja
add
jge
pop
jae
add
add
mov
lea
pop
push
push
push
sub
push
sub
add
add
rol
sub
sub
ror
pop
sub
ror
ror
pop
push
lea
push
push
push
push
push
push
push
push
call
pusha
jno
add
out
pop
les
add
roll
pop
mov
add
gs
add
iret
add
add
add
add
jne
pop
movsb
jnp
popa
enter
pusha
and
pushl
call
push
push
ror
ror
lea
push
xor
add
sub
not
lea
sub
sub
pop
ror
dec
lea
pop
push
xor
xor
pop
pushl
push
shr
sub
xor
pop
call
call
push
push
shl
push
or
inc
add
add
sub
ror
lea
not
dec
pop
shl
not
pop
push
shr
pop
pushl
call
push
sub
ror
shl
pop
call
push
push
rol
push
xor
add
dec
shl
sub
sub
sub
rol
shl
pop
add
pop
push
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
push
push
call
add
mov
add
lahf
test
mov
clc
mov
pop
popa
ret
stc
add
mov
js
mov
pop
add
mov
add
add
add
cmc
rcrl
add
xchg
add
cmpsl
test
mov
mov
loopne
leave
fisttpll
add
data16
add
lea
xchg
push
mov
lea
pop
pushl
call
push
add
xor
pop
call
push
push
push
sub
add
xor
sub
ror
sub
inc
rol
add
pop
shr
shl
pop
push
ror
dec
pop
pushl
push
rol
inc
pop
call
call
push
push
dec
shl
inc
push
push
pop
add
add
lea
ror
sub
dec
shl
pop
sub
dec
pop
push
lea
push
push
push
push
push
push
push
push
push
call
jecxz
add
add
add
add
add
add
xchg
int3
add
pusha
push
add
lahf
scas
add
in
pop
cltd
test
pop
stos
fldl
xchg
in
mov
lahf
mov
gs
add
xchg
mov
rorl
hlt
jle
in
push
sub
jne
push
push
push
push
push
push
call
loope
add
add
add
scas
jmp
add
add
pop
imul
outsl
add
pop
mov
mov
mov
mov
add
icebp
jae
jb
push
jbe
mov
lea
pop
call
call
push
sub
shl
sub
pop
call
push
push
ror
push
or
inc
add
dec
rol
inc
dec
sub
inc
shl
rol
pop
add
shr
pop
push
inc
pop
pushl
push
push
push
push
lea
push
call
pop
push
lea
je
mov
test
add
lret
sahf
add
lds
lock
loopne
add
add
add
jne
stos
add
add
add
add
aad
sarb
add
mov
lea
pop
call
lea
push
add
sub
pop
push
push
ror
shr
pop
call
push
push
xor
push
and
add
rol
dec
not
sub
dec
sub
pop
dec
inc
pop
push
lea
push
lea
push
call
add
add
add
mov
movl
lea
stc
add
scas
jb
fs
add
push
xchg
pushf
jo
mov
rcll
add
in
pop
add
in
ret
in
bound
add
jge
jp
in
add
add
out
jns
add
add
jle
rolb
in
pushf
add
mov
les
mov
lea
pop
pushl
push
push
lea
push
lea
push
lea
push
push
call
jle
jle
add
ret
out
lods
jb
add
mov
clc
add
add
add
mov
add
lret
add
xlat
mov
pop
add
jge
xchg
mov
pop
add
add
icebp
scas
mov
lea
pop
call
call
push
push
add
ror
push
or
not
add
not
sub
sub
add
not
pop
shr
pop
push
lea
push
push
push
push
push
lea
push
push
push
call
sahf
pop
add
in
call
add
mov
nop
imul
add
add
fsubrs
push
add
js
mov
add
add
add
push
jle
add
add
add
fstps
int3
movsl
mov
lea
pop
pushl
call
push
xor
pop
call
push
push
shr
push
or
inc
add
shl
sub
inc
inc
pop
sub
sub
add
not
pop
push
lea
push
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
call
add
roll
add
push
add
in
cltd
add
add
testb
ljmp
add
in
add
call
xchg
shrb
cmc
add
mov
jmp
scas
out
popa
mov
scas
xchg
out
jns
mov
aam
bound
pushl
call
push
sub
ror
add
not
pop
call
push
xor
pop
lea
push
push
not
add
not
push
xor
add
lea
rol
sub
not
xor
rol
pop
dec
add
shr
shr
pop
push
shr
dec
pop
pushl
call
push
push
push
push
call
int3
add
add
jb
iret
mov
mov
add
jne
les
add
add
out
sarb
pop
add
add
xchg
push
mov
subb
add
shr
test
je
fnstenv
push
add
mov
lret
add
mov
cld
addr16
stos
jns
add
cld
lea
pop
push
push
shr
inc
sub
inc
pop
call
push
push
add
push
xor
add
not
ror
dec
sub
add
sub
pop
xor
pop
push
pop
pushl
push
push
push
push
push
push
push
call
jmp
stos
xlat
add
pop
idivl
add
add
mov
add
cld
sti
in
test
add
add
add
push
mov
lock
mov
orl
mov
push
add
ret
mov
je
icebp
add
jge
jb
data16
lods
add
in
add
iret
out
mov
lea
pop
call
push
dec
pop
call
mov
push
push
add
shr
push
xor
add
add
sub
xor
inc
xor
pop
pop
push
push
push
push
call
add
out
add
cmpsb
add
mov
add
xchg
mov
movsb
add
in
add
push
add
jne
pop
cwtl
test
add
add
add
hlt
out
out
imul
mov
add
js
scas
imul
mov
hlt
lea
pop
pushl
push
inc
rol
lea
pop
call
push
push
add
shr
rol
pop
pushl
call
push
push
add
shl
sub
push
sub
add
dec
xor
rol
sub
rol
pop
rol
pop
push
add
add
ror
pop
pushl
push
lea
push
lea
push
push
push
push
call
add
scas
add
add
xchg
jp
scas
fisttpl
add
repnz
fidivl
add
add
add
mov
push
mov
add
pop
add
add
mov
mov
jecxz
int3
movsb
add
push
push
fiadds
add
call
push
sarl
add
pusha
pop
add
xchg
xchg
add
add
jns
je
les
sub
add
push
push
sub
lea
push
sub
add
sub
add
xor
sub
inc
pop
xor
pop
push
push
add
inc
push
xor
add
add
sub
shr
xor
add
xor
pop
sub
pop
push
lea
push
push
push
lea
push
push
push
push
push
call
add
lock
jl
add
mov
add
bound
loope
pop
imul
add
mov
sarl
jb
add
roll
leave
mov
add
add
add
jno
int3
lea
pop
call
push
push
shr
not
push
sub
add
sub
sub
inc
add
not
xor
pop
dec
shl
pop
push
shl
pop
pushl
push
push
lea
push
call
addl
jge
into
push
add
add
lahf
jo
addr16
xchg
add
add
fsubl
mov
add
add
mov
add
leave
jmp
xchg
mov
pop
call
push
not
shr
pop
mov
push
inc
shl
pop
lea
lea
push
inc
pop
push
push
sub
shl
rol
pop
push
push
push
push
push
lea
push
push
lea
push
call
outsw
jne
add
movsb
shl
les
test
stc
add
in
cmpsb
add
mov
ja
mov
add
lods
add
push
add
ret
mov
rorb
add
popf
jge
mov
xchg
stos
loop
pop
add
xchg
add
add
faddl
leave
adc
add
icebp
mov
leave
not
nop
mov
stos
gs
lea
pop
push
push
shr
rol
shr
ror
pop
push
push
xor
rol
pop
push
push
push
shr
ror
pop
push
push
push
add
add
shr
pop
pushl
push
inc
pop
push
call
push
push
sub
push
push
pop
add
ror
shr
sub
add
pop
shr
rol
pop
push
sub
inc
sub
pop
pushl
push
shr
shl
pop
call
call
push
rol
add
pop
mov
pop
push
lea
push
call
rclb
lret
add
add
xchg
mov
stos
movsl
add
lahf
pop
add
jmp
insb
cmpl
add
mov
addr16
leave
add
xchg
stos
mov
mov
xchg
pop
add
add
jl
popf
xchg
scas
lods
add
push
mov
add
add
adc
mov
add
pop
dec
jne
push
dec
inc
pop
jmp
push
rol
rol
pop
call
push
push
rol
push
or
not
add
lea
sub
pop
rol
xor
pop
push
push
push
push
push
push
lea
push
call
cwtl
add
fidivs
add
mov
imul
add
xchg
fs
jo
add
add
jns
rolb
add
fwait
add
jae
push
mov
add
add
mov
add
add
push
sahf
mov
lods
add
mov
jge
mov
jle
mov
pusha
add
cld
stc
mov
lea
pop
pushl
call
push
lea
push
push
push
push
call
sahf
add
add
add
add
sarl
add
test
imul
mov
jae
add
out
mov
into
addl
lret
mov
add
jge
xlat
add
test
fstp
add
popl
cmpsl
into
add
add
fadds
mov
add
cmpsl
xchg
je
pop
add
pop
push
call
push
push
push
lea
push
push
push
push
call
add
shll
mov
lods
add
jecxz
mov
arpl
pop
stc
add
add
mov
add
add
add
cltd
cltd
cwtl
mov
jmp
fs
add
loope
add
add
mov
lea
pop
mov
push
dec
xor
pop
lea
push
push
not
rol
shl
add
push
and
add
not
sub
sub
sub
sub
pop
shr
rol
pop
push
push
push
push
lea
push
push
push
push
lea
push
push
call
xchg
mov
add
mov
jno
push
mov
add
lods
call
add
stos
add
aad
add
cld
rorb
jmp
add
cmc
jb
add
out
stos
add
add
sahf
mov
add
leave
aam
shll
lea
pop
pushl
push
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
fadds
mov
ljmp
add
mov
add
sti
jle
cmc
add
popa
rolb
testl
test
pop
add
pusha
add
add
pop
add
xchg
hlt
scas
loope
add
mov
mov
lea
pop
call
push
ror
dec
rol
pop
push
push
pop
call
push
push
inc
add
push
or
inc
add
sub
sub
sub
lea
dec
pop
inc
rol
dec
pop
push
lea
push
push
push
lea
push
push
push
call
pop
pop
orb
out
les
add
push
add
fs
shl
add
pop
add
popf
xor
pop
mov
lahf
add
add
stos
add
add
xchg
push
out
add
add
xchg
outsl
fsts
add
les
aam
add
xchg
add
fwait
mov
lea
pop
pushl
push
push
push
push
push
call
add
mov
mov
add
add
add
arpl
add
leave
pop
mov
add
mov
cltd
jno
add
add
add
cli
push
arpl
mov
out
add
rcrb
add
faddl
add
loope
push
mov
loop
push
add
leave
out
mov
lea
pop
call
push
shr
ror
pop
call
push
push
push
push
push
push
push
push
push
push
call
jecxz
cmpsb
fadd
add
mov
je
arpl
add
enter
add
pop
int
add
pop
fxch
sahf
lret
add
jo
ficompl
js
add
xchg
add
mov
loop
xchg
out
fildl
add
add
imul
add
js
orb
mov
push
add
inc
add
pop
lea
push
push
add
rol
push
push
pop
add
shl
not
ror
sub
ror
add
pop
add
not
pop
push
push
push
call
add
test
add
add
popl
xlat
jae
aad
cwtl
jno
scas
add
sti
add
fdivrp
add
add
sti
lods
add
cltd
mov
add
mov
mov
add
add
add
aad
mov
pop
testl
add
pop
pushl
call
push
push
push
lea
push
push
lea
push
push
push
push
call
ret
push
pop
add
add
push
in
add
mov
test
jl
test
lea
movb
push
add
mov
lods
out
add
add
mov
add
mov
mov
lea
pop
lea
push
pop
push
push
push
push
call
add
add
sahf
stos
add
int3
jmp
xchg
in
rcll
xchg
mov
push
add
pop
pop
jge
clc
push
aad
add
cld
je
stos
movsl
jge
lret
mov
jecxz
mov
jae
cld
lea
pop
push
push
shr
shl
sub
pop
push
push
push
push
lea
push
push
call
add
add
popf
ljmp
add
jb
add
pop
mov
add
lock
rolb
add
lea
add
add
ja
add
sti
pusha
add
jnp
clc
add
lock
lcall
add
data16
add
addl
fmull
jne
push
push
ror
sub
push
or
not
add
not
add
sub
pop
xor
not
pop
push
pop
push
push
sub
pop
call
push
push
not
rol
push
push
pop
add
xor
not
sub
not
inc
pop
shl
add
ror
rol
pop
push
pop
pushl
push
shl
pop
call
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
add
add
mov
mov
mov
ror
gs
mov
imul
cmpsl
jle
mov
add
add
xchg
add
ror
pop
add
push
add
add
enter
add
mov
lea
pop
push
push
lea
push
call
repnz
add
aam
cltd
add
pop
add
add
cltd
add
lods
out
mov
std
add
mov
repnz
loop
aad
fcoml
jno
push
cld
add
pop
andb
xchg
jp
test
push
add
add
add
add
mov
mov
lea
pop
call
push
push
sub
sub
push
xor
add
shl
rol
sub
shr
pop
add
shl
not
pop
push
push
push
push
push
push
push
call
mov
jno
addb
in
add
lahf
mov
add
add
mov
mov
add
add
add
lods
outsl
add
lahf
mov
lock
std
mov
add
mov
lea
pop
pushl
push
dec
shl
pop
call
push
push
push
push
lea
push
push
call
mov
add
fiadds
add
add
stos
mov
pop
cmp
iret
lods
cmp
iret
sarl
jp
les
scas
add
cwtl
add
fnstenv
jmp
mov
jb
mov
mov
add
add
push
xchg
mov
add
lea
pop
call
jmp
push
lea
push
call
add
hlt
add
add
xchg
add
add
push
bnd
test
fsin
insb
push
add
cld
mov
or
iret
mov
mov
cwtl
add
aam
sahf
cltd
arpl
popf
icebp
shrl
iret
add
mov
cld
mov
out
jno
add
fstp
add
add
popa
test
add
push
scas
add
movsb
add
push
add
add
pop
pushl
push
push
push
push
call
xlat
mov
repnz
les
add
xchg
add
insb
icebp
fiaddl
jae
push
add
add
in
mov
fwait
lret
hlt
add
ja
add
add
add
sahf
push
mov
add
fistpll
add
mov
pop
cld
mov
pop
add
mov
jns
add
into
add
mov
lea
pop
mov
jmp
push
push
lea
sub
sub
push
push
pop
add
add
dec
sub
rol
pop
sub
pop
push
xor
sub
not
shr
pop
pushl
push
lea
push
call
in
add
add
popf
mov
fbstp
add
ja
add
ljmp
add
add
lock
loope
add
add
push
cltd
add
out
pop
add
pop
push
add
add
call
lods
hlt
mov
lea
pop
call
push
add
shl
pop
push
push
lea
not
sub
pop
call
push
push
inc
shr
add
push
sub
add
shr
not
sub
add
lea
inc
pop
dec
inc
ror
pop
push
shl
pop
pushl
call
push
push
lea
push
call
mov
sahf
add
add
shl
lret
add
js
int
push
jb
mov
xchg
mov
iret
cmpsl
lret
fs
fstpt
lret
sub
xchg
add
lea
scas
push
popf
add
mov
push
add
mov
add
mov
flds
loop
in
add
aad
imul
add
popa
or
push
push
push
push
push
push
push
lea
push
call
push
roll
jne
out
hlt
out
out
add
scas
push
jns
add
add
aam
add
add
add
fwait
add
cli
add
jno
imul
pop
scas
rcr
mov
add
pop
call
push
shl
xor
dec
pop
leave
push
lea
not
pop
add
push
ror
pop
pop
push
push
lea
push
push
push
push
lea
push
push
call
insb
arpl
jmp
js
add
mov
fcompl
jns
fadds
add
add
add
mov
loopne
add
nop
add
sahf
mov
cltd
lcall
fcmovbe
xlat
lahf
les
mov
mov
pusha
push
xchg
push
add
add
enter
mov
lea
pop
pop
push
ror
xor
not
pop
pop
push
push
push
push
call
add
push
lods
cmp
add
add
push
add
add
add
xlat
add
mov
add
ljmp
call
mov
jns
lods
not
filds
add
lock
mov
mov
lcall
push
add
mov
lea
pop
pop
push
push
push
push
push
call
add
jbe
lods
add
add
fwait
add
sti
add
mov
aam
loopne
add
pusha
add
pop
add
jo
mov
shll
imul
int3
add
jno
xchg
popl
mov
add
mov
add
out
hlt
pop
jns
push
mov
lea
pop
leave
add
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
lods
mov
mov
add
popa
add
lahf
test
add
xchg
int3
addr16
add
mov
fstp
lea
jl
hlt
testl
add
add
into
push
add
mov
loope
lock
roll
jae
addb
sar
add
gs
add
add
imul
xchg
roll
pop
jbe
mov
lea
pop
ret
leave
push
lea
push
call
add
loopne
xchg
add
push
movsl
add
mov
les
xchg
in
into
xchg
mov
mov
add
into
cmpsb
add
stos
js
mov
add
mov
mov
mov
mov
lea
pop
ret
push
push
shr
not
add
pop
mov
cmpl
jne
push
rol
pop
mov
push
lea
push
lea
push
push
lea
push
push
push
call
add
mov
stos
mov
jmp
div
addb
jle
add
xchg
mov
fiaddl
ror
ficompl
add
add
leave
movsl
pop
add
add
and
lcall
xchg
addr16
add
leave
add
add
xchg
jge
jmp
mov
ja
jp
cli
enter
mov
cwtl
lock
add
sbb
jmp
mov
push
sub
dec
pop
and
xor
push
push
push
lea
push
push
push
push
push
push
call
add
stc
mov
add
add
add
imulb
insb
bound
rcl
push
add
add
movsb
pop
sti
in
aam
data16
addr16
add
add
add
mov
add
mov
xchg
hlt
add
jl
nop
add
add
lds
add
xchg
int
cmc
xchg
mov
fdivr
add
mov
lea
pop
xor
push
sub
add
pop
add
xor
push
push
push
lea
push
lea
push
push
push
lea
push
call
add
add
imul
adcb
add
shl
add
shlb
mov
add
leave
add
sahf
xor
add
add
pop
add
add
add
mov
negb
ret
ja
pop
add
add
add
sahf
faddl
mov
shlb
lods
add
add
mov
lea
pop
dec
push
push
lea
push
push
call
popf
push
repnz
test
xchg
sahf
xlat
fcomi
mov
add
lcall
jecxz
out
pop
push
mov
mov
xchg
fwait
test
xchg
popa
add
jae
xlat
mov
add
mov
jno
imul
mov
fistpll
add
std
add
add
bound
mov
pop
mov
mov
adc
jmp
push
shr
ror
inc
xor
pop
jmp
push
lea
sub
pop
sub
push
xor
pop
pushl
push
inc
pop
pop
push
lea
push
lea
push
lea
push
lea
push
call
pop
xlat
enter
add
arpl
in
add
arpl
jno
mov
cmc
cld
push
jb
add
add
add
aam
cmc
lods
arpl
add
xchg
add
ret
mov
lea
pop
sub
push
lea
ror
pop
cmp
jne
push
push
push
call
out
mov
mov
movb
add
f2xm1
add
movsb
xchg
flds
jo
add
jp
add
xlat
add
loop
lcall
ret
add
add
jle
sar
add
lret
pop
lods
add
add
fcomp
jp
add
add
into
jnp
lock
add
mov
or
mov
push
xor
pop
lea
push
dec
sub
pop
sub
mov
push
rol
shl
pop
shr
push
pop
add
push
push
push
push
push
push
push
push
push
push
call
add
jbe
jle
xchg
push
add
add
jbe
add
add
leave
fcompl
repnz
add
add
ljmp
mov
into
mov
push
mov
mov
fucomi
add
mov
add
into
mov
lea
pop
sub
push
push
lea
push
push
push
lea
push
push
call
lds
loope
in
repnz
jge
add
add
ret
pop
mov
test
add
xchg
ja
add
testl
test
pop
push
rclb
in
mov
lahf
sti
add
add
leave
mov
lea
pop
pushl
pop
push
push
push
push
push
push
push
call
sahf
pop
push
scas
add
cltd
fdivs
jae
add
cltd
lock
mov
add
test
out
add
jns
in
add
add
jae
nop
xorl
add
add
lret
sahf
add
add
ret
jnp
add
in
fldl
addr16
add
add
add
arpl
shr
and
push
dec
sub
sub
pop
sub
cmp
jne
push
sub
pop
leave
push
push
call
xchg
clc
clc
add
xchg
popf
mov
add
shll
mov
add
add
jp
repnz
push
add
stc
mov
mov
add
imul
lret
ja
popl
push
bound
add
add
lcall
imul
scas
jnp
add
jl
add
cmpsb
clc
mov
lea
pop
ret
push
push
push
push
push
push
push
push
push
call
cmpsl
scas
lds
add
mov
pop
add
add
add
lds
add
add
add
add
mov
pop
cmc
xchg
add
xchg
jno
mov
in
add
std
cld
iret
xchg
add
mov
add
hlt
mov
jp
aam
bound
pop
mov
push
push
push
push
lea
push
push
push
call
add
cmpsb
add
add
add
addb
filds
xorl
jmp
add
add
add
add
add
fidivrs
scas
add
mov
xlat
pusha
test
hlt
lea
pop
add
push
dec
pop
push
push
push
push
lea
push
call
add
add
cmpl
add
add
rolb
xchg
add
add
neg
out
push
in
mov
cld
mov
add
jo
adcb
iret
add
jo
add
xchg
add
roll
bound
mov
add
int
push
jb
mul
add
jae
int
add
pop
push
push
push
push
push
lea
push
push
push
call
xchg
jne
pop
add
add
lcall
fs
rcll
scas
add
mov
add
in
pop
roll
add
add
xchg
push
rcr
pusha
fs
lods
add
add
cmc
std
add
cltd
add
add
in
fmull
push
ror
inc
sub
pop
push
push
not
shl
add
pop
mov
lea
push
dec
shl
pop
sub
push
lea
push
push
push
push
push
push
push
push
push
call
mov
add
mov
lret
add
add
add
add
outsl
jae
add
arpl
test
js
popl
mov
repnz
addl
ja
xchg
mov
hlt
xchg
cmpsl
add
stos
xchg
cmpsl
add
iret
pusha
add
jno
add
pop
jmp
jb
lea
aam
bound
pop
mov
shr
push
sub
add
dec
pop
add
mov
push
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
add
xchg
add
add
jl
mov
arpl
jle
pop
fdiv
add
jne
test
push
add
mov
ljmp
mov
iret
push
subl
fdivl
add
pop
add
push
sub
dec
pop
mov
push
sub
ror
pop
add
push
push
push
push
push
push
lea
push
lea
push
call
fildl
add
insb
bound
stos
add
mov
add
pop
fidivl
add
int
js
xchg
mov
add
jbe
pushf
jnp
add
mov
cld
add
jmp
add
cli
rcr
mov
jae
lcall
cld
mov
add
mov
mov
leave
pop
roll
hlt
lea
pop
xor
mov
push
push
push
lea
push
push
push
push
call
mov
add
mov
mov
cmpsl
stc
add
add
cmc
lcall
add
mov
fadds
pop
test
xchg
outsl
add
add
add
add
jp
add
push
into
ljmp
add
jnp
in
cld
add
cld
lea
pop
and
rol
push
dec
pop
rol
push
xor
shr
shl
add
pop
xor
push
push
push
push
push
push
push
call
push
test
jnp
mov
adcb
movsb
add
xlat
xchg
add
aad
repnz
icebp
fstl
test
mov
mov
lock
mov
add
push
add
add
pop
inc
cmpb
jne
push
rol
shr
pop
add
push
lea
push
lea
push
push
push
lea
push
push
lea
push
push
lea
push
call
add
clc
movsb
jecxz
add
shrb
add
add
aad
lret
jle
mov
mov
add
out
add
add
mov
popa
fbld
add
aam
bound
pop
cmp
je
add
push
lea
push
lea
push
push
lea
push
push
push
call
add
mov
add
xchg
add
mov
add
mov
add
push
fldl
ljmp
add
int3
jge
jns
pop
mov
add
push
jne
lret
popf
add
cli
mov
add
add
test
hlt
lea
pop
cmpl
jne
push
xor
pop
xor
push
push
push
push
push
call
imul
mov
add
add
add
push
les
cli
stc
xchg
sahf
xchg
push
add
add
ja
lods
imul
ret
push
icebp
pop
add
lret
mov
push
icebp
add
int3
xchg
stos
add
add
add
movsl
add
cwtl
jmp
add
add
cmc
mov
lea
pop
pop
push
push
lea
push
push
push
call
lea
lcall
addr16
jmp
push
pop
sti
add
lcall
add
fidivl
add
arpl
add
lods
add
add
add
test
popfw
lock
add
iret
stos
out
fadds
push
add
out
add
add
add
add
mov
lea
pop
pop
push
push
push
call
add
push
add
xchg
hlt
add
incb
add
add
call
fisubrs
icebp
subb
jae
fs
add
lock
add
pop
mov
nop
mov
add
add
cmp
add
add
add
add
add
add
je
add
pop
pop
push
shr
pop
pop
push
dec
pop
pop
leave
push
lea
pop
ret
push
push
push
call
bound
mov
add
mov
add
add
xchg
mov
add
add
stos
pop
add
loope
add
push
imul
popa
jae
add
add
fwait
add
enter
into
leave
add
jmp
mov
add
mov
xchg
mov
add
add
add
add
mov
fcmovb
fmuls
pop
mov
push
sub
shr
pop
add
push
not
add
dec
add
pop
push
push
push
push
push
push
call
jno
ljmp
movsl
stos
in
mov
add
add
xchg
loopne
data16
add
push
pop
add
mov
mov
add
add
negb
cmp
int3
lea
pop
add
mov
push
add
shr
lea
shl
pop
cmpw
push
push
push
push
lea
push
call
loop
jbe
add
push
add
testb
add
push
mov
add
mov
add
mov
loop
add
pop
out
add
repnz
ljmp
mov
lea
pop
pop
push
push
push
lea
push
call
jae
pushf
add
add
jb
add
fcomps
lods
xchg
jge
mov
ja
add
xchg
fnstenv
add
lock
adc
leave
subb
add
movsl
shll
jge
jp
fldl
push
pop
add
nop
xchg
bound
add
ja
add
pop
fwait
pushf
add
out
cltd
icebp
leave
stos
testb
add
add
lds
loop
rolb
mov
lea
pop
pop
push
xor
pop
mov
push
push
push
push
push
push
push
push
call
mov
cmpb
add
add
jno
xchg
xchg
add
add
loop
roll
stos
ror
jae
add
add
lock
cmpsl
add
lret
cld
xchg
mov
rolb
add
pop
mov
idiv
mov
lea
pop
call
xor
push
rol
pop
pop
push
push
push
push
push
call
insb
arpl
jmp
in
icebp
jbe
mov
std
ficompl
aad
mov
lret
ret
add
cmc
jne
add
out
hlt
lea
pop
pop
pop
push
rol
not
pop
pop
push
add
pop
pop
push
push
push
push
lea
push
push
lea
push
push
call
add
add
add
add
hlt
sti
popl
add
add
icebp
add
leave
int
mov
jno
add
xchg
jge
nop
add
lods
xchg
imul
les
add
rcrb
pop
js
push
bound
cli
push
sti
mov
stos
add
out
add
pop
leave
push
add
add
pop
ret
push
sub
pop
push
mov
push
shl
add
pop
add
push
push
push
lea
push
call
lcall
icebp
add
mov
jnp
add
flds
add
mov
add
add
fldl
ja
pop
mov
add
loope
add
cltd
ret
scas
pop
add
add
pop
push
push
dec
xor
lea
pop
push
push
ror
dec
pop
push
mov
push
not
add
pop
push
push
pop
pop
push
shr
shl
pop
lea
push
sub
sub
pop
sub
push
not
ror
pop
mov
shr
push
push
push
push
lea
push
push
lea
push
lea
push
call
loopne
ljmp
add
aam
xlat
mov
out
mov
push
jge
add
mov
push
add
add
roll
lock
shrb
add
add
ror
in
popf
in
mov
rolb
add
hlt
lea
pop
add
push
xor
pop
mov
push
lea
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
xchg
add
imul
add
add
incb
les
add
pop
jae
call
push
add
add
add
xlat
add
cmpsb
pushf
add
add
add
add
mov
push
mov
add
pop
enter
out
fcompl
lea
pop
add
push
push
push
lea
push
push
push
lea
push
call
push
test
aad
mov
add
subb
lea
jne
jns
lret
loopne
pusha
cmpsl
add
insb
add
add
add
stc
add
mov
out
add
add
xchg
mov
sar
add
lret
mov
jecxz
movsl
mov
test
jno
out
loope
mov
add
mov
lea
pop
pushl
push
lea
push
push
push
push
push
push
push
call
in
push
add
incb
cmpsl
popa
out
jnp
shrb
jmp
test
add
loopne
mov
in
add
xlat
xchg
cltd
out
pop
add
add
mov
lea
pop
popl
push
push
push
lea
push
push
call
add
ljmp
sbbl
add
sahf
xchg
add
movsb
into
fabs
rol
fiadds
lahf
add
add
lret
fwait
jmp
add
add
add
fldl
add
cli
imul
lret
push
add
fs
pop
add
cmpsb
add
add
xchg
idivl
cwtl
mov
test
mov
lea
pop
mov
push
lea
push
lea
push
push
push
lea
push
push
call
add
sarb
add
pop
jae
mov
add
add
nop
movsb
add
pop
jp
add
cld
adcb
pop
data16
cmpsl
jmp
push
push
in
ret
add
mov
add
add
jl
mov
lea
pop
add
push
push
push
lea
push
push
push
push
push
push
call
popa
add
mov
in
addb
lea
add
add
xor
lea
pushf
lahf
mov
stos
test
add
add
add
push
add
imul
mov
mov
add
imul
add
mov
aam
jb
add
pop
rol
sti
jo
cmpl
negl
out
add
in
mov
cmpsl
addb
pop
mov
lea
pop
xor
push
push
push
lea
push
push
push
lea
push
call
enter
bound
pop
add
pop
jns
push
jmp
add
pushf
mov
xchg
add
call
add
lds
add
ljmp
add
jle
add
mov
addr16
lds
imul
add
add
add
add
outsl
add
addr16
sahf
into
add
add
sbb
lea
push
inc
pop
mov
push
shr
sub
pop
add
push
rol
pop
xor
push
ror
xor
xor
dec
pop
rol
push
push
lea
push
lea
push
lea
push
push
push
call
add
cmpsl
imul
add
pop
stos
popa
add
push
test
add
add
add
add
jge
ffree
call
push
mov
mov
xchg
ret
int3
add
icebp
lcall
aam
arpl
fldl
add
add
add
add
add
cmpb
sahf
mov
pop
nop
push
not
not
pop
nop
xor
push
push
lea
push
call
add
add
mov
add
aad
add
jae
add
cli
push
xchg
add
addr16
add
imul
subl
lock
call
mov
add
add
call
stos
into
int
add
mov
add
test
mov
add
mov
lea
pop
nop
push
lea
push
lea
push
call
add
imulb
mov
add
sti
add
aam
add
hlt
jnp
in
add
pusha
push
add
add
jae
add
fwait
add
stc
add
add
add
lcall
pop
nop
push
lea
push
call
mov
lods
add
stos
cwtl
cli
stc
add
sarb
pop
cli
mov
popf
mov
add
add
mov
add
lea
pop
inc
push
push
push
push
lea
push
call
flds
add
jle
add
addr16
pop
in
add
lret
mov
add
add
fldl
repnz
add
int3
add
add
lret
add
add
add
jns
fwait
lods
loope
add
add
repnz
add
hlt
add
bound
add
push
add
mov
lea
pop
nop
push
push
push
lea
push
push
call
mov
fadds
je
add
add
add
add
into
add
xchg
add
add
xchg
xchg
movsl
add
lods
test
rcrl
add
add
fidivrl
add
add
add
into
add
add
jne
add
add
add
scas
add
add
addr16
sti
mov
scas
int3
int3
add
ljmp
data16
nop
cmpb
jne
push
shr
lea
sub
pop
add
nop
push
push
push
push
call
mov
xchg
pop
push
lock
add
pop
les
add
add
add
lods
cmc
add
add
loop
outsl
mov
mov
push
lods
fstl
mov
mov
add
mov
lea
pop
nop
push
xor
sub
lea
add
pop
cmp
je
push
push
push
push
lea
push
push
push
push
call
add
outsl
add
lcall
add
enter
gs
add
out
add
mov
addl
jl
add
add
mov
add
add
mov
lea
pop
nop
push
push
push
push
push
call
stos
add
mov
stos
add
xchg
addr16
sti
test
loope
push
aam
add
push
add
jmp
mov
shlb
mov
xchg
andb
add
xchg
mov
mov
sahf
fsubr
add
add
movl
adc
nop
push
not
ror
pop
inc
push
push
lea
push
push
push
call
add
add
add
pop
mov
xchg
popf
add
ficoms
push
add
jge
movsb
lret
add
add
in
add
add
add
add
mov
add
rolb
add
add
insb
add
aad
add
add
fadd
jge
add
push
mov
jmp
add
testb
fadds
cmpsl
int
add
pop
nop
push
push
push
push
push
push
push
push
push
push
call
add
mov
jge
push
add
add
add
cld
add
les
xchg
negl
push
testl
jae
add
fisttpl
leave
xchg
aam
bound
pop
nop
push
push
lea
push
push
lea
push
push
call
lahf
jl
add
out
add
xchg
bound
mov
ja
add
std
pop
jns
add
add
add
mov
jno
test
xlat
int3
mov
mov
stos
mov
in
je
call
add
scas
add
jl
mov
mov
out
jp
mov
mov
add
lea
pop
cmp
jb
push
push
push
push
call
jmp
mov
add
add
mov
addl
pop
add
lds
add
add
lret
incb
roll
int3
lea
pop
xor
push
ror
pop
jmp
push
ror
lea
pop
mov
push
push
push
call
mov
mov
xchg
add
aam
js
test
rcrl
add
aam
popa
add
in
in
push
add
jle
add
add
add
add
add
loopne
rorb
pop
add
movzwl
push
lea
pop
mov
push
not
rol
rol
pop
add
mov
push
not
pop
xor
xor
push
push
lea
push
push
push
push
push
push
push
push
call
add
enter
mov
jmp
mov
mov
mov
aam
add
jp
roll
lods
add
add
ret
mov
add
add
jge
add
xchg
hlt
add
add
test
mov
lea
pop
shl
xor
push
xor
xor
pop
shl
push
ror
pop
xor
push
shl
ror
lea
pop
shl
push
push
push
push
push
call
xchg
push
add
add
outsl
jbe
add
lock
add
add
add
rolb
in
imul
pop
in
leave
pop
jl
jnp
add
add
add
xchg
out
jno
mov
mov
cli
jb
pop
in
add
mov
pop
cwtl
sti
jb
cld
add
jle
cmp
scas
addr16
mov
mov
hlt
lea
pop
xor
mov
push
push
push
call
push
lahf
mov
add
add
add
mov
add
add
xchg
push
add
movsb
add
add
popf
negl
je
add
mov
add
add
imul
pop
add
add
pusha
out
add
fildl
add
ljmp
add
add
add
add
orl
pop
push
lea
push
push
lea
push
call
flds
add
mov
cmpsb
add
in
mov
mov
mov
flds
add
addb
int3
addl
mov
add
add
jmp
ljmp
lret
hlt
pop
add
rcl
add
add
lret
jmp
push
mov
hlt
jge
movsl
add
out
mov
lea
pop
pop
push
push
push
call
add
addr16
leave
test
in
fwait
icebp
mov
les
add
push
xchg
addr16
jns
xlat
lods
int
add
mov
add
data16
std
add
jno
mov
js
pop
mov
jbe
imull
add
adcl
add
sti
mov
jno
pop
add
bound
add
add
add
call
lods
mov
lea
pop
pop
push
lea
shl
xor
add
pop
pop
push
xor
dec
pop
leave
push
ror
pop
ret
push
xor
inc
inc
shr
pop
push
mov
push
shr
not
not
pop
push
push
push
lea
push
lea
push
push
push
push
call
out
imul
add
xchg
mov
addb
test
add
testl
add
add
add
test
add
pop
add
pushf
add
add
add
repnz
add
add
xchg
pop
push
push
push
push
push
push
push
call
push
test
hlt
jbe
add
add
add
mov
test
add
ret
add
add
clc
scas
jle
add
add
insb
add
rcll
xchg
mov
lea
pop
push
push
pop
push
push
sub
pop
mov
push
add
pop
mov
mov
push
not
ror
dec
pop
test
je
push
push
lea
push
push
push
push
push
push
call
test
movsb
stos
jl
bound
insb
nop
add
test
add
lods
imul
out
aad
pop
nop
add
add
mov
cli
ja
bound
add
mov
add
add
fwait
xlat
roll
lret
loope
add
add
insb
add
addb
fisubl
mov
lea
pop
mov
test
je
push
push
push
push
push
call
ret
add
jmp
add
lods
loop
add
out
scas
add
add
in
cmpsb
xchg
orl
rolb
add
push
add
lahf
rcll
icebp
add
cmpsl
shlb
xchg
cmp
add
ja
add
mov
call
fmull
notl
cld
add
pop
mov
push
add
pop
mov
inc
push
pop
cmp
je
push
add
pop
test
je
mov
push
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
add
mov
mov
push
mov
iret
cmpsb
add
pusha
lds
add
add
add
jae
mov
xchg
cmpsb
add
add
jge
in
arpl
add
xchg
fs
scas
cwtl
add
mov
pusha
add
lcall
add
mov
add
enter
lea
pop
inc
push
lea
not
pop
cmp
je
push
not
rol
pop
test
jne
push
lea
shr
not
not
pop
xor
push
shl
sub
shr
pop
pop
push
inc
ror
pop
pop
push
dec
pop
pop
push
lea
push
lea
push
push
push
push
push
push
push
call
mov
std
xchg
call
add
add
icebp
jne
mov
add
je
mov
add
xchg
call
pusha
push
in
push
mov
add
add
xchg
add
cmpsb
cmpsb
xchg
ja
mov
add
mov
add
pop
mov
jno
mov
lea
pop
pop
push
lea
push
lea
push
push
lea
push
push
push
lea
push
lea
push
push
call
pop
mov
addb
add
fiaddl
enter
imul
add
push
lcall
add
jnp
xchg
out
add
out
idivb
les
add
add
push
add
ljmp
add
add
add
les
push
push
lea
push
push
call
push
add
jno
mov
incb
addl
jb
add
add
jne
addl
filds
add
lock
add
add
scas
orl
fs
add
jno
add
add
loope
pop
arpl
xchg
add
jmp
insb
addl
adc
or
mov
push
push
push
call
loope
fiadds
mov
xchg
mov
icebp
xchg
add
add
pop
push
test
jbe
xchg
int3
mov
add
jnp
mov
imul
in
add
mov
jb
add
add
gs
ljmp
les
add
mov
icebp
filds
add
add
add
push
pop
mov
fwait
pop
add
add
addr16
inc
push
sub
shl
inc
add
pop
cmp
jne
push
sub
shl
pop
lea
push
lea
push
lea
push
push
push
push
push
push
call
pop
add
jae
movsb
lret
add
test
repnz
mov
add
add
push
add
add
mov
add
add
pop
mov
out
add
push
add
xchg
mull
push
jne
fsts
add
lea
pop
mov
push
rol
ror
inc
sub
pop
test
je
mov
push
lea
push
push
push
push
lea
push
push
lea
push
push
push
call
addr16
xchg
add
add
stos
add
mov
push
add
in
cmpsl
enter
aad
add
mov
add
push
jge
aad
add
add
add
loop
fstps
icebp
add
add
pop
add
push
push
push
call
xchg
push
stos
jne
flds
stc
add
in
add
clc
add
push
add
jnp
jle
cmpsb
mov
jle
hlt
in
add
js
add
add
xchg
test
fs
gs
add
iret
shlb
push
sarl
addr16
cmp
jne
mov
push
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
xchg
mov
addb
add
bnd
add
imul
mov
jle
add
test
test
jnp
pop
add
xchg
push
js
add
cwtl
add
add
add
add
icebp
test
in
mov
add
stc
fnstenv
out
roll
jmp
repnz
lea
pop
test
je
push
push
lea
push
call
data16
loopne
mov
cli
add
in
jp
add
add
xlat
add
movb
jns
add
add
icebp
cmpsb
icebp
xchg
add
mov
int
add
jnp
mov
pop
add
sbbb
incb
sti
add
xchg
add
icebp
in
imul
sahf
add
lcall
mov
lea
pop
mov
push
add
shl
dec
pop
add
push
rol
add
lea
add
pop
cmp
je
push
add
pop
jmp
push
add
pop
xor
push
shr
pop
pop
pop
push
inc
pop
pop
push
add
shl
shr
pop
pop
push
push
push
push
push
push
push
push
push
push
call
popf
cli
lret
ficoml
jne
add
stc
push
movsb
xchg
shll
pop
jge
add
add
movsl
add
lret
add
add
mov
add
leave
jmp
add
mov
jmp
add
add
add
aam
add
lock
pop
add
add
les
push
push
lea
push
push
push
push
push
push
push
push
call
add
addb
idivl
add
sbb
add
add
insb
jbe
pop
out
mov
add
push
add
cld
add
add
add
not
mov
add
add
je
mov
add
add
add
in
stos
mov
sub
or
push
inc
lea
pop
lea
pop
push
pop
pop
push
add
xor
pop
pop
pop
push
inc
shl
add
pop
leave
push
push
push
lea
push
push
lea
push
push
call
add
add
sub
lds
add
hlt
mov
scas
pop
cwtl
pop
add
std
add
add
add
jnp
add
add
add
jge
add
add
insb
pop
cmpsl
cmpsl
mov
lea
pop
ret
push
sub
inc
pop
mov
push
push
push
lea
push
push
lea
push
lea
push
call
add
xchg
pop
add
add
push
mov
add
add
cmc
in
add
xorb
out
add
movsl
push
add
add
add
mov
outsl
mov
sbb
pop
pop
push
lea
push
push
push
lea
push
push
push
call
addr16
add
mov
les
rcll
jbe
xchg
mov
inc
jo
add
add
add
lock
mov
lahf
test
out
mov
test
scas
push
mov
xorl
pop
jp
mov
jns
add
add
mov
lea
pop
pop
pop
push
rol
pop
leave
ret
test
push
test
jae
xchg
imul
fwait
jo
test
push
outsl
jae
arpl
jae
xor
jae
test
jae
je
jb
sbb
aam
scas
mov
cmpsl
and
roll
pop
mov
sub
push
fsts
xor
and
imul
pop
pop
movsl
xchg
loopne
mov
lds
mov
sbb
pop
or
in
jns
call
nop
mov
cmpsl
or
mov
out
mov
jg
or
in
stc
jp
push
sub
psrad
clc
jmp
push
gs
fldenv
push
loop
cltd
adc
xchg
das
test
in
iret
xor
es
sbb
sub
int
lfs
xchg
inc
shll
and
sbb
in
js
xchg
jge
lods
inc
test
and
inc
adc
cmpsl
loop
in
pop
pop
jmp
nop
outsb
std
dec
scas
dec
lds
je
pop
mov
ja
mov
adc
sahf
ss
xlat
cld
jns
dec
push
ljmp
sub
push
lods
test
add
xor
es
hlt
aas
fcmovbe
movsb
fsts
es
dec
push
inc
pop
jbe
pushf
lret
mov
adc
inc
sub
js
mov
enter
inc
stc
xor
out
pop
cmp
sarl
mov
insl
cmp
mov
ljmp
cmp
and
mov
pop
cmp
add
sbb
ljmp
lods
dec
leave
lcall
into
fidivrl
mov
sbb
xor
jge
call
dec
and
jae
jne
daa
xchg
xlat
inc
inc
popf
cwtl
popf
pusha
paddusb
cmpsb
icebp
test
sub
cmc
fisubl
insb
out
push
in
mov
lret
orl
ret
lcall
xchg
jle
or
push
push
jmp
inc
sbb
popf
push
mov
dec
imul
or
mov
push
mov
outsl
jp
mov
jg
dec
xlat
mov
lods
xor
pusha
dec
mov
add
loopne
jne
repz
sub
cwtl
sub
xor
sbb
jnp
outsl
ja
daa
mov
sub
lds
ljmp
push
sbb
stos
cmp
cltd
push
jecxz
cmp
xor
sbb
cs
rcrl
add
addb
xor
pop
call
hlt
jne
mov
je
stos
enter
inc
cli
insl
divb
mov
int3
mov
stos
mulb
lods
hlt
xor
int
sub
imul
mov
addb
sbb
pop
loope
cmp
add
pusha
xchg
and
push
pop
push
or
int
xor
sub
jbe
inc
xchg
sub
push
mov
push
add
push
dec
mov
jp
cs
xchg
jb
xor
inc
shrb
xor
or
adc
loopne
pop
xor
mov
out
or
pop
in
ret
cld
mov
std
adc
call
stos
testl
mov
out
loop
jo
lds
xlat
les
xor
cmp
pop
shrl
and
push
sub
imul
addr16
fwait
stos
adc
lcall
into
cmp
push
xchg
shrb
xor
and
sbb
cld
xor
sub
int3
call
cs
add
cmp
data16
add
xchg
push
push
call
adc
pusha
frstor
mov
jb
cwtl
mov
mov
mov
sbb
jae
pushf
sub
hlt
sbb
pop
dec
insl
mov
rcrb
clc
leave
jns
fwait
nop
cli
bound
out
inc
decl
cmc
adc
mull
mov
pushf
mov
and
leave
cmp
iret
cmp
std
jo
adc
notb
adc
or
shlb
daa
mov
pop
into
adc
sti
nop
lods
cltd
fisubrl
xchg
push
test
shrb
cmpsb
jge
cmpsl
mov
sbb
shll
and
sahf
test
or
cmp
sarb
jge
fbld
sub
pop
or
and
cmp
sub
mov
jmp
push
mov
mov
divl
es
xchg
push
mov
xchg
bound
add
scas
jns
in
push
adc
mov
mov
das
jb
mov
sbb
leave
bound
scas
push
pop
lods
ds
or
cmp
outsb
adc
add
js
int
enter
mov
pop
jb
add
pop
hlt
fcmovu
les
arpl
lret
add
nop
pop
lods
xor
xchg
cmp
mov
sahf
loope
sarb
or
lds
imul
adc
pop
mov
jb
pop
cmpsl
sahf
adcb
add
mov
lret
lret
scas
inc
das
jl
cli
add
dec
popf
hlt
addl
sbb
lods
lret
mov
rol
mov
cltd
clc
mov
push
mov
call
lret
out
dec
fsubl
and
or
inc
arpl
mov
adc
pop
hlt
inc
lret
out
pop
pop
cmp
pop
adc
mov
ficomps
mov
pop
mov
sbb
cmp
xor
lea
aad
dec
mov
dec
mov
je
jp
hlt
xchg
dec
dec
xor
mov
testb
adc
cmpl
push
fidivrl
pcmpeqd
out
and
fildl
stos
jae
mov
test
fimuls
pop
and
push
sahf
imulb
lock
pop
dec
icebp
loop
sbb
or
lods
or
inc
stos
iret
repnz
aad
pop
and
mov
mov
or
dec
xchg
ljmp
or
mov
out
xor
iret
std
fldpi
and
rol
shrl
cmpsb
cwtl
xchg
cmp
sti
mov
in
mov
movsl
add
pop
cltd
scas
dec
fnclex
mov
inc
or
cltd
sahf
fbstp
and
icebp
xchg
mov
dec
test
stos
xor
jge
xchg
mulb
or
add
test
mov
rcr
out
cld
sub
aaa
and
pusha
inc
fisttps
dec
dec
push
movsb
mov
dec
jno
lret
push
pop
lret
sbb
test
cmp
cmp
shrb
lods
ret
add
mov
or
out
inc
mov
sub
arpl
xor
mov
mov
mov
push
out
das
rcrb
push
jae
fcompl
and
popf
sub
jle
push
jp
xchg
fildll
and
mov
movsl
inc
hlt
push
inc
or
mov
fnstcw
mov
pop
adc
int
inc
pushf
inc
pusha
stos
inc
xor
ja
pop
ret
mov
ret
loope
dec
jge
call
imul
xchg
scas
adc
inc
and
push
fnstsw
scas
mov
xor
push
inc
xor
push
fnstcw
mov
jo
dec
mov
repz
fwait
xchg
stos
jmp
dec
cmp
fldcw
or
jecxz
sub
cmpl
jmp
sahf
cli
sbb
cmpsl
ss
cmc
imul
jge
loop
test
scas
inc
ja
jmp
mov
out
sbb
xchg
addl
cmpsb
fsubrl
pop
cld
add
mov
sahf
mov
decb
or
lret
subb
mov
dec
fmuls
fsubl
sbbb
and
popf
test
dec
arpl
and
cmp
outsb
loopne
aas
out
mov
fisubl
pushf
icebp
inc
lock
sub
cmpsb
lea
jl
daa
and
lods
pop
adc
inc
xchg
rcrl
movsl
mov
fsubs
or
aam
push
mov
sbb
fcomps
mov
jmp
mov
pop
xorl
push
fisttpl
or
push
mov
pop
fcompl
stos
shrl
dec
sub
mov
aas
xchg
lods
dec
out
sub
inc
lods
xor
or
inc
mov
mov
cmpb
dec
push
outsl
lods
flds
dec
fbstp
mov
lods
jne
mov
mov
push
push
sbb
lds
inc
push
mov
xchg
icebp
add
test
lretw
leave
shlb
jns,pt
addr16
insb
jmp
sbb
sub
push
mov
mov
jge
rorb
xor
push
imul
push
push
mov
bound
cmpsb
or
xor
lods
inc
daa
add
or
push
pop
aam
adc
mov
add
cld
shlb
dec
fcoml
mov
addb
shlb
scas
adc
cwtl
std
add
cmp
xchg
mov
arpl
xor
xchg
data16
test
outsb
inc
push
mov
xchg
mov
fwait
ret
and
and
push
mov
les
mov
cmp
imul
pop
xchg
or
and
push
jbe
xchg
rcll
jb
dec
roll
mov
xchg
push
jns
icebp
in
mov
cmp
and
sub
inc
xlat
cli
movsb
loop
test
roll
loopne
xchg
iret
xchg
mov
pop
xchg
adc
mov
xor
lret
into
lods
addl
stos
jp
in
popa
shlb
dec
add
dec
dec
lahf
js
dec
mov
mov
jmp
fadds
pop
mov
insl
mov
push
dec
or
adc
ss
pop
inc
test
rcll
test
orb
sbb
sbbl
jnp
pop
or
sbb
test
ds
jg
arpl
jnp
sub
push
popf
pop
shlb
dec
das
push
push
int3
movsb
das
push
addr16
jbe
sar
cli
in
cmp
xchg
stos
push
jg
les
aad
cmp
or
inc
sub
and
push
pop
or
xlat
xchg
mov
aas
adc
xchg
cmp
xor
lahf
fdivl
jns
sbbl
push
fildl
add
pop
out
daa
mov
inc
xchg
push
inc
cmpsb
jmp
mov
mov
stos
mov
imul
dec
inc
lods
pop
imul
in
adc
cmpsl
cmp
add
sarb
nop
push
and
rorb
cmp
jg
pop
push
filds
dec
mov
add
outsl
add
pushl
icebp
jae
aaa
jne
stc
mov
lods
xchg
push
aaa
shll
hlt
repz
je
xchg
jmp
out
rclb
pop
daa
push
jl
inc
leave
fldenv
shl
shlb
popf
jnp
pusha
jg
xchg
clc
in
pop
mov
ret
dec
ds
dec
ret
jmp
aaa
xor
pop
mov
pop
push
push
lcall
mov
xorb
cwtl
and
sub
shrb
jecxz
pop
and
pop
fidivs
repz
fwait
jmp
test
rcll
aas
jae
mulb
xchg
int
nop
push
jl
test
iret
xchg
idiv
sti
sbb
fsubl
xchg
dec
je
lods
xlat
xor
insb
fisubrs
mov
jno
cmp
adc
aas
adc
dec
rep
xor
dec
dec
jp
mov
xchg
mov
xor
or
xor
jbe
in
pushl
sbb
js
mov
jle
icebp
mov
test
mov
ljmp
test
call
bound
aam
pop
stc
mov
push
mov
and
int
fwait
inc
add
daa
mov
rcr
cld
mov
fcomps
mov
mov
mov
fstpl
inc
aas
cli
cli
shrl
xchg
push
cld
and
pop
adc
mov
movl
xchg
cmp
inc
xchg
in
xor
xlat
ds
adc
mov
xchg
test
ret
push
inc
rolb
mov
push
stos
dec
hlt
cltd
mov
cmpsb
push
lods
push
adc
push
dec
dec
cld
xor
gs
push
push
adc
pop
lret
xlat
push
jle
inc
xchg
sti
sub
sub
shlb
in
dec
xor
fsubs
mov
rorl
sbb
push
test
sahf
xchg
jno
push
ja
mov
inc
lea
pop
add
aam
mov
mov
imulb
cltd
lds
stos
shl
sub
stos
xor
in
dec
xchg
jbe
pop
xor
dec
push
cld
mov
adc
push
jo
push
cmpl
call
lods
pop
les
ret
and
mov
shl
mov
adc
or
lret
adc
je
roll
mov
add
loopne
test
or
adc
xchg
mov
mov
mov
shrl
stos
push
jae
push
fisttps
and
sub
xor
or
jne
fidivrl
ret
xchg
push
jmp
xor
sub
or
call
sub
jb
fidivrl
add
ffree
sbb
jg
inc
sub
fists
cmp
testl
outsb
mov
mov
push
test
mov
out
leave
dec
mov
cli
jmp
leave
mov
mov
aas
mov
jl
sti
iret
sbb
jne
sbb
mov
out
cli
fidivl
loopne
add
in
js
jns
mov
push
imul
cmp
test
mov
icebp
pop
or
std
pusha
push
jne
xchg
sub
arpl
push
jae
repz
cltd
jb
into
lcall
xor
test
loope
lea
test
jns
and
jae
insb
sbb
scas
mov
jb
adc
jne
sub
sahf
out
fisubrs
dec
stos
push
test
ljmp
adc
jnp
scas
aaa
push
jmp
rcll
sbb
inc
dec
sbb
rcrb
xchg
les
mov
push
int
pop
test
dec
sub
fcoms
adc
lock
adc
adc
push
or
lods
lds
jae
cmpsb
jae
mov
pop
mov
inc
sub
jg
dec
mov
inc
test
add
mov
fistps
jp
or
movsb
popa
sub
in
and
or
enter
dec
jnp
add
test
mov
sub
stc
dec
leave
push
inc
mov
lahf
loop
xor
and
and
cmp
push
jmp
mov
and
sbb
leave
ss
popf
aad
add
pop
dec
pop
pushf
dec
add
and
repnz
adc
jns
dec
lcall
dec
mov
cmp
mov
rorl
push
sbb
sarb
sub
jnp
out
lahf
outsl
xchg
sub
jge
jae
ds
addr16
cli
add
andb
xchg
push
jae
cmpsb
aad
cld
or
dec
fimull
out
jl
cmp
es
stc
mov
jecxz
lcall
popf
mov
sbb
jge
pop
jo
adc
ljmp
push
rclb
cmp
sbb
cmpsl
mov
lret
mov
je
int
jne
in
ret
adc
mov
push
mov
addr16
push
fadd
sub
xor
shrb
dec
add
repnz
stc
mov
aad
pop
xchg
cmp
inc
rcrb
add
stos
and
sbb
xor
je
dec
and
aam
js
jle
sub
mov
pushf
pop
movsb
inc
adc
popa
mov
pop
sbb
out
pop
fmuls
std
pop
notb
fsubr
adc
scas
jmp
adc
fwait
popf
xor
cmp
fwait
gs
mov
xchg
pop
cmp
scas
ds
adc
into
test
mov
cmp
ss
xlat
mov
xchg
sub
xor
mov
sub
lret
or
daa
stos
filds
jbe
mov
out
enter
pushf
inc
scas
ja
sbb
or
fstps
or
into
dec
push
pop
daa
fldt
or
dec
outsb
enter
movsb
jge
jbe
xchg
jge
arpl
outsb
aam
pushf
xchg
rep
arpl
adcb
fimull
or
xchg
mov
aam
push
jno
dec
loope
in
sub
push
adc
xchg
xchg
lock
mov
popa
mov
scas
adc
jno
aam
pop
mov
lds
pop
arpl
xchg
out
inc
cmc
jle
fistpl
push
xor
mov
inc
mov
arpl
jno
icebp
cld
nop
xchg
pop
and
add
int3
sti
rclb
mov
imul
sub
jge
adc
cli
sub
mov
mov
mov
xchg
and
dec
jecxz
sub
loopne
outsl
jbe
into
cs
cmp
pop
push
cmp
add
mov
enter
aam
push
scas
and
jg
jnp
cmp
into
cmc
rcl
bound
outsl
scas
fs
lods
adcb
or
add
mov
fcompl
pop
insb
adc
lds
fstsw
pop
cld
leave
xchg
xor
push
int
fisubrl
and
popf
adc
or
xchg
mov
adc
ds
mov
test
loopne
lahf
in
hlt
add
mov
leave
cmpsl
leave
sbb
dec
sbb
dec
xchg
xor
gs
scas
mov
and
mov
adc
aad
nop
std
ret
sahf
imul
hlt
stos
int
int3
je
push
mov
push
es
jmp
outsl
test
addr16
push
rep
and
cmp
in
in
mov
int3
bound
aad
jnp
pushf
xchg
adc
pop
out
lahf
mov
fldln2
jbe
push
popa
loop
cs
mov
sbb
inc
jmp
push
inc
mov
inc
or
sub
and
cs
xor
test
cmp
mov
and
sub
decb
xor
dec
push
imul
sbb
sbb
fsubrs
push
test
inc
fcmovne
mov
scas
jnp
dec
out
and
dec
jbe
ss
mov
adc
rclb
sbb
sub
movntps
adc
add
sti
in
aam
push
in
mov
fstps
cs
pushl
jnp
push
stos
xlat
cld
pop
rolb
cltd
bound
dec
add
jg
repz
sbb
jno
pop
cmp
and
scas
cltd
or
jae
xor
push
clc
je
mov
in
test
sub
mov
xor
mov
adc
xchg
inc
jno
leave
daa
std
imul
dec
mov
scas
negl
cmpsb
fldenv
push
stos
cmp
in
cmp
adc
lahf
mov
adc
jno
jnp
jge
cmp
jnp
and
fs
push
pop
shll
xor
lahf
es
insl
xchg
jbe
mov
or
addr16
leave
scas
std
mov
imul
sub
repz
pop
cld
jp
pop
es
sbb
cmp
aaa
sbb
push
pop
mov
into
cmc
mov
sub
out
add
ljmp
data16
lock
jns
cmp
lcall
pcmpgtd
dec
test
pop
mov
xchg
inc
add
adc
fs
xchg
shrl
add
mov
mov
jae
in
aaa
cmpsl
in
je
xor
xchg
or
test
lahf
jp,pn
mov
mov
bound
cltd
sbb
loop
shl
cmp
fimuls
lahf
popf
out
xchg
adcb
popa
clc
inc
mov
xchg
out
or
lods
xchg
fcomps
iret
test
and
push
xchg
push
lods
mov
fisttps
adc
fwait
jnp
mov
jle
std
inc
loop
xchg
mov
cmp
jmp
jbe
mov
push
push
loopne
pop
loope
dec
lods
or
jmp
cltd
daa
popf
pop
or
cs
stc
adc
jle
scas
test
insb
je
xchg
push
nop
shlb
xchg
mov
fcmovnb
adc
dec
jp
sub
pop
jecxz
adc
pop
aas
rol
cld
mov
mov
test
push
xor
add
or
xchg
dec
lds
xor
andl
test
mov
test
enter
or
sbb
rclb
or
je
and
mov
sub
pop
xor
fimuls
push
ljmp
xchg
inc
xchg
inc
out
xchg
sbb
push
or
mov
push
lock
mulb
int
mov
mov
xchg
cmp
mov
adc
xor
out
and
out
scas
adc
or
daa
jb
das
push
inc
pop
shr
jmp
fsubl
ret
rcrb
fs
cmp
fdivrl
fistps
popl
mov
leave
inc
push
add
mov
gs
call
adcl
add
es
stos
daa
xchg
dec
hlt
push
scas
lods
hlt
cmp
adc
xlat
cmpl
repz
pop
movsl
outsl
fcmovu
mov
icebp
dec
xlat
or
dec
mov
aaa
rcrl
movsb
leave
outsl
rolb
xchg
pop
jne
into
fisubrl
out
iret
fwait
inc
pop
icebp
sbb
in
push
push
sbb
add
adc
dec
andl
sbb
out
fnstsw
iret
rol
pop
enter
mov
push
pop
ret
mov
es
add
xchg
das
aam
ljmp
lods
in
icebp
out
jb
das
xchg
nop
cmp
data16
aaa
dec
dec
push
repnz
or
fidivl
clc
bnd
push
shlb
sbb
dec
movsb
ret
nop
and
ds
fstp
nop
mov
lret
or
test
and
loopne
adc
mov
fwait
or
jecxz
mov
cld
xchg
cmpb
jecxz
sub
sub
or
mov
add
push
sbbb
fbld
cs
xchg
xchg
xor
cmp
sub
xchg
xchg
sub
mov
cs
stc
stos
mov
hlt
verw
stc
stos
mov
xlat
loopne
addr16
xchg
testb
cmpsl
call
fcmove
fists
xchg
arpl
push
and
jge
adc
push
dec
leave
pop
xor
gs
subb
orl
js
ds
frstor
repz
cmp
bnd
pop
push
mov
push
stc
insl
out
jecxz
push
lcall
jle
jl
clc
out
dec
stc
xchg
adc
cli
cmp
jo
in
xor
cmp
in
out
movsl
sbb
add
xchg
adcb
icebp
adc
outsb
sub
mov
movsl
mov
adc
mov
je
fdivrl
inc
mov
xchg
cmpsl
adc
and
cltd
lahf
push
cmp
mov
add
pop
mov
out
pushf
ret
lea
jg
jno
jns
ljmp
ss
mov
stc
js
imul
shll
fdivs
push
fists
inc
cmp
sbb
add
mov
sbb
dec
pop
cmp
out
mov
push
sbb
jp
out
push
mov
mov
sarl
fsubrl
adc
cmp
xchg
jmp
dec
push
mov
inc
test
clc
aaa
ja
adc
jnp
es
mov
das
mov
orl
jbe
lea
cmp
rorl
pop
sahf
andb
sub
push
push
std
call
and
and
push
add
stc
mov
adc
insb
dec
repz
mov
icebp
cmp
or
cwtl
je
and
das
add
jle
and
mov
lret
push
sub
cld
test
lahf
push
jg
gs
lods
das
clc
cltd
xor
imul
mov
into
cmp
push
mov
rcl
and
pop
shll
out
scas
add
fldenv
jecxz
mov
ds
bnd
fs
mov
mov
mov
das
push
fstl
xchg
xchg
mov
dec
add
mov
in
sbb
cmp
cwtl
loop
sub
imul
fs
xchg
mov
or
push
adc
mov
loope
mov
mov
movsb
inc
jo
jno
jbe
sbb
lcall
jmp
inc
rcrb
in
or
mov
add
aas
and
popl
mov
cmp
addr16
mov
jg
nop
add
push
cmpsl
or
or
mov
fimull
mov
mov
fwait
xlat
gs
pusha
sbb
popa
loopne
fsubr
jge
mull
add
aad
ss
push
mov
sub
add
dec
into
loopne
into
scas
aaa
ds
je
js
pop
mov
and
cmpsl
mov
pop
ds
adc
dec
xor
rolb
sahf
jns
or
daa
adc
add
dec
xlat
mov
jbe
xor
fwait
enter
dec
pop
movq
fisttps
adc
mov
sbb
adc
mov
fdivp
stos
lret
cmp
cmp
js
std
or
push
movsb
pop
fsubrp
pop
stc
pop
insl
dec
out
fwait
dec
dec
cmpsl
cmp
lea
push
inc
insb
xor
fists
jae
ss
sbb
loope
arpl
jmp
enter
loop
jecxz
inc
pop
adc
or
sbb
ljmpw
cmpb
sbb
jecxz
sti
insl
xchg
sarl
out
xchg
stos
test
loop
scas
push
jmp
pcmpeqw
aas
fmuls
mov
aas
es
dec
jno
stos
pop
hlt
fisubl
pop
imul
dec
hlt
movsb
mov
lods
add
dec
add
xchg
call
scas
and
pop
addr16
push
adc
in
jae
cmp
mov
std
and
mov
test
add
sub
mov
xchg
hlt
dec
ret
mov
movsb
scas
cld
add
mov
push
pop
fidivrs
add
stc
outsb
shlb
sbb
push
in
mov
testl
inc
inc
into
inc
imul
mov
mov
pop
imul
test
addr16
cmc
mov
add
mov
out
out
dec
xchg
xchg
sbb
ds
ja
cmp
pusha
mov
dec
cmp
sub
sub
jne
xor
subb
insl
movsb
add
inc
cmc
inc
push
pusha
adc
insb
sbb
adcl
xor
js
dec
push
test
ficoms
dec
sub
out
mov
test
dec
adc
cmp
pushf
jne
lcall
cmp
cld
and
gs
jae
and
dec
inc
lahf
test
inc
int
insb
lret
xchg
sbb
mov
out
xabort
mov
ja
or
mov
cmp
jo
xchg
cmpsb
loop
push
nop
rolb
sbb
ret
jno
leave
fdivs
rcrb
dec
mov
xor
loope
inc
ds
push
cltd
jns
and
or
arpl
pop
ret
sub
jge
dec
jl
bound
cmp
mov
add
std
stos
dec
jne
inc
out
iret
jnp
cmpsl
and
mov
xchg
pop
dec
repz
xorl
xchg
push
dec
xor
push
dec
popa
loopne
fwait
jne
sbb
ds
ss
lock
pop
jmp
fidivrs
mov
bound
test
or
hlt
pop
cwtl
inc
mov
xor
out
inc
roll
sbb
or
push
xlat
enter
mov
sarl
aaa
jmp
pushf
dec
scas
cwtl
fistps
push
shr
fsubrl
pop
test
and
insl
insb
or
dec
xchg
pop
into
js
inc
sahf
jmp
insb
push
cld
fisubrl
in
jmp
adc
dec
mov
pop
xlat
push
loope
aas
dec
push
mov
xchg
dec
imul
xor
sbb
sbb
stos
cmc
push
stc
and
aad
jne
out
mov
dec
add
or
jecxz
dec
pop
xorl
mov
pusha
dec
rep
sbb
loope,pn
jb
aas
inc
add
add
adc
dec
mov
mov
aad
jo
dec
negb
in
pop
dec
mov
arpl
repnz
pop
fldcw
roll
jns
adc
leave
mov
mov
out
jnp
xor
nop
cmp
push
dec
in
push
add
xlat
mov
mov
jns
andb
lcall
mov
dec
or
sbb
fcmovnbe
push
pop
loopne
push
in
add
or
lcall
xchg
mov
in
loope
dec
push
mov
scas
test
xchg
xlat
and
xor
sti
sarb
stos
cld
adc
bnd
jg
popa
mov
jmp
mov
sbb
arpl
in
dec
or
mov
push
push
es
fs
rolb
cmpsb
jl
pop
xor
addr16
test
sbb
fadd
or
sub
stc
or
addr16
mov
es
sbb
pop
ds
xor
rolb
arpl
nopl
cmpb
gs
ds
mov
push
dec
add
scas
aad
shrb
fsubrl
cld
loopne
insl
popf
jae
sub
fstl
ljmp
cmpsb
mov
scas
push
in
test
loope
clc
icebp
je
cli
or
mov
ds
data16
outsl
pusha
push
and
aaa
loope
loope
xlat
ds
jl
push
pop
std
xor
and
fwait
mov
jp
inc
mov
stos
mov
inc
stc
jno
cltd
int
dec
jae
cli
or
jp
enter
inc
xchg
inc
ds
adc
cmp
inc
call
filds
sub
arpl
jge
cmp
lods
int
xor
push
mov
imulb
mov
adc
sbb
arpl
stos
aas
sbb
lahf
mov
add
inc
stos
push
lret
scas
inc
sub
shlb
gs
mov
xchg
pop
int3
xlat
lcall
in
xor
dec
or
jns
sti
cli
pop
xchg
fstl
fcmovb
sbb
fdivrl
mov
and
mov
pop
add
and
outsl
xchg
push
add
ror
sub
push
and
lcall
fdivs
push
enter
and
pop
fst
or
into
sbb
mov
inc
and
ljmp
scas
mov
inc
cmp
inc
lahf
in
cmp
sub
mov
pop
mov
adc
sbb
adc
stos
pop
ret
out
fucom
dec
sub
mov
push
cli
jle
adc
xor
stc
lock
mov
jno
adc
orb
xor
repz
and
or
in
jmp
test
jmp
add
cmp
inc
call
cwtl
aam
mov
mov
adc
or
xchg
sar
test
pop
cmp
inc
push
push
in
ficompl
sbb
and
add
cmpsb
push
cmp
les
jp
sbb
push
jp
inc
inc
fdivr
inc
add
rol
gs
pop
pop
add
loopne
or
cmp
cmpsl
push
fwait
sub
inc
mov
in
xor
inc
movsl
in
xor
jecxz
in
mov
inc
mov
pop
or
or
loopne
shl
mov
sub
mov
jmp
mov
xor
inc
nopl
fistl
ja
dec
adc
xchg
mov
repnz
xchg
ret
fcmovnbe
sti
sub
sub
mov
test
and
dec
inc
out
pushf
arpl
pop
mov
lahf
cmpsb
les
bound
add
imul
lcall
stos
adc
aam
push
ret
in
fisttpl
adc
or
inc
ljmp
cmp
imul
add
outsb
repnz
int
xor
jno
jbe
into
xchg
mov
mov
mov
leave
insl
imulb
ds
js
ret
jecxz
jp
loop
mov
sti
popa
push
xor
xchg
outsb
dec
sbb
rclb
repz
mov
lock
negl
rolb
mov
jns
dec
rcl
popf
sbb
sti
loope,pt
lea
jb,pt
jmp
add
xlat
lahf
mov
jmp
movsb
push
cmp
and
mov
dec
xor
daa
shl
fwait
test
div
hlt
inc
mov
push
mov
cmp
aas
sub
nop
inc
sbb
mov
dec
fdivrs
sar
fsts
jp
lea
lcall
gs
jecxz
sub
shr
dec
push
insb
jge
or
jl
cmp
shl
loope
cltd
cmp
or
xchg
enter
loop
push
imul
mov
cli
add
push
xor
sub
insb
test
nop
mov
sub
in
cmp
idivb
fsts
xchg
insb
push
inc
ja
lret
sbb
pop
lcall
lret
xor
movl
lahf
lock
or
test
stc
sbb
out
cld
test
nop
lea
adc
pop
push
sub
cld
cmp
imul
adc
clc
or
fildl
pop
repnz
lock
loopne
pop
mov
stc
mov
cld
ds
add
stos
iret
pop
shr
es
subl
push
mov
scas
ret
sub
push
sub
pop
mov
test
sub
lods
mov
fists
aad
lahf
sbb
fstpt
mov
ds
adc
jmp
mull
cltd
std
add
push
fsubrl
jmp
jge
jno
inc
test
mov
mov
or
repnz
jmp
not
cmp
adc
sub
call
lea
jo
data16
pop
mov
mov
ss
jnp
mov
data16
sub
xchg
push
and
sarb
sbb
jle
dec
das
scas
push
mov
cld
jge
push
mov
pop
mov
inc
inc
addl
in
fnstcw
jg
fistpl
mov
push
repz
inc
imull
mov
mov
iret
shrl
mov
cmpsl
ret
dec
arpl
decl
mov
or
or
lret
or
push
mov
mov
xor
cs
xor
push
pop
hlt
decl
inc
daa
lods
mov
popa
jecxz
jnp
jecxz
and
mov
adcb
icebp
stos
imul
pop
adc
xchg
ja
out
lods
addr16
daa
rolb
mov
jge
or
fdivs
mov
mov
adc
cmp
jo
arpl
xchg
xor
push
out
jae
shrb
icebp
pop
sahf
jge
push
call
add
jnp
mov
pushf
pusha
ret
lcall
inc
shl
sbb
cmp
testb
cmpsl
xchg
pop
aam
pop
mov
mov
sti
rcr
mov
filds
imul
jns
cmp
sbb
inc
adcb
popa
xlat
xchg
inc
xor
lahf
test
mov
pop
lock
addb
loope
pushl
outsb
rorb
ret
repnz
or
pop
sahf
jno
aad
in
fidivs
dec
xor
imul
mov
es
in
xchg
jae
dec
push
or
add
sub
imul
jmp
out
les
pop
mov
in
fistps
inc
mov
sbb
mov
loopne
pop
pop
lods
pop
dec
jns
stos
or
lahf
cmp
fistpll
aad
mov
movsb
ljmp
adc
pop
imul
stos
pop
mov
jo
stos
in
xchg
push
push
std
mov
pop
rol
cltd
in
sub
mov
mov
inc
add
inc
xchg
cld
test
jae
push
xchg
push
fwait
mov
ret
mov
inc
aas
inc
lret
jne
pusha
pop
sbb
sbb
jbe
int
pop
xchg
es
add
xchg
rcrl
push
dec
pop
lods
nop
xchg
pop
fmuls
into
xor
jl
mov
lea
fldenv
movsl
fdivp
scas
lret
push
out
mov
inc
repnz
clc
pop
jmp
sbbl
mov
jbe
and
jle
pusha
lods
push
in
xchg
cld
stos
pop
push
movsl
push
out
lods
lock
push
arpl
std
mov
pop
add
or
stos
ljmp
pusha
mov
ret
in
mov
sub
sub
jb
fistps
mov
cwtl
inc
jmp
out
cmp
jae
data16
adc
inc
jno
lea
push
sub
push
scas
iret
inc
pop
out
stos
fsincos
call
xor
push
jns
mov
mov
jnp
inc
mov
rol
adc
adc
je
sub
dec
pop
fistpl
sbb
dec
insl
icebp
js
dec
clc
add
jns
add
xor
add
jl
jmp
dec
sub
shll
sub
adc
fs
and
jp
sbb
inc
cwtl
adc
ret
sub
ret
mov
jb
and
cmp
sbb
dec
dec
addr16
cld
push
cmp
mov
sub
xor
lret
sub
movsb
dec
icebp
pop
fistl
loope
adc
sub
cli
mov
rolb
repnz
hlt
orb
cli
push
pop
adc
int
add
push
in
add
mov
lock
or
and
fwait
iret
loope
pop
idivl
mov
mov
cld
mov
mov
push
dec
add
int3
mov
or
stos
aad
inc
std
stos
or
xor
mov
stc
nop
mov
inc
push
mov
jne
loop
inc
adc
gs
pop
outsl
lcall
aaa
lcall
jl
pop
mov
dec
div
cmp
out
loopw
sbb
xchg
cmp
sub
adc
fisubrl
enter
xor
jmp
and
jp
in
jno
cmp
dec
mov
add
imull
ret
std
das
push
ret
jmp
mov
popf
out
ds
les
iret
in
fistpll
push
iret
gs
stc
int
mov
and
scas
jbe
test
sub
test
adc
je
out
in
mov
adc
xchg
or
and
cwtl
push
int3
pop
mov
clc
mov
xor
lcall
inc
xchg
test
xor
je
xchg
mov
mov
pushf
push
push
push
sbb
outsb
push
addr16
and
cwtl
das
ret
pushf
inc
roll
push
pop
lods
xlat
dec
aas
add
jmp
addb
fcoms
out
xchg
mov
mov
xchg
fildl
loopne
inc
push
push
daa
adc
push
or
shl
mov
iret
jb
xor
add
inc
std
sbb
fnstsw
jo
xchg
and
aad
lock
rorb
in
in
xor
rclb
sbb
ret
jae
mov
cwtl
test
mov
and
icebp
adc
ret
test
push
and
xor
jns
int
lods
test
fs
aam
jns
add
xchg
jp
cmp
push
pop
fldenv
shlb
negl
push
mov
mov
dec
jmp
xchg
insb
loopne
lret
xor
repnz
fcmovnu
es
in
xor
dec
mov
pushf
cmc
cmpl
sar
cmc
out
out
shll
into
int3
inc
insb
push
adc
imul
popf
popf
mov
inc
mov
mov
adc
mov
add
shrb
mov
mov
fisttpl
dec
sbb
lods
faddl
mov
push
cmp
mov
cltd
sub
mov
cs
jae
dec
lea
prefetcht0
fucomi
and
push
push
mov
sub
testb
xchg
jns
repnz
inc
mov
pop
into
inc
push
movsl
xchg
ss
sub
testl
sbb
cmp
adc
pop
dec
pop
mov
fisubs
int3
inc
notl
stos
adc
push
fyl2x
inc
pop
mov
cmp
dec
roll
or
xchg
arpl
xchg
aad
or
sarl
and
lahf
add
adc
into
dec
sbb
loopne
icebp
pop
pop
fldt
cmpsb
loop
jno
bound
pop
out
shlb
push
mov
stos
push
push
xor
add
mov
es
iret
xchg
push
ret
leave
ret
mov
adc
add
lea
clc
cmp
insb
cmp
mov
push
daa
or
clc
ja
xchg
pop
ds
mov
cmp
sahf
in
std
adc
lock
jmp
in
add
iret
test
xlat
mull
mov
aad
popa
cmp
aas
add
into
mov
inc
xchg
and
clc
push
test
inc
scas
fistpl
adc
fldenv
shrb
mov
push
or
into
out
pop
mov
sbb
shr
imul
lds
cmp
mov
dec
push
outsb
arpl
inc
dec
xchg
shrb
push
lret
lcall
in
data16
cmc
add
xor
lock
fstps
or
arpl
pop
mov
pop
sbb
aad
xor
daa
xchg
mov
jno
mov
out
sbb
mov
and
sahf
scas
and
push
add
loop
xor
ja
in
sbb
outsb
mov
movsb
push
pop
push
inc
pop
rcrb
add
dec
sbb
ljmp
fiadds
cmp
pop
in
sub
ret
jecxz
mov
int
or
sti
stos
rorl
mov
jg
les
aaa
clc
or
mov
call
dec
jo
push
mov
mov
int
jnp
lcall
popf
arpl
roll
pop
dec
pop
test
in
popa
shlb
aaa
xor
add
xor
jne
or
push
push
cltd
fcomps
dec
jp
mov
pushf
mov
outsl
cmp
pop
mov
daa
fdivl
js
dec
popf
lahf
sbb
insb
test
dec
jae
popa
in
add
mov
js
mov
xchg
ja
loope
jle
fistpll
push
jb
lock
jge
sbb
mov
or
add
adc
add
jg
xor
mov
inc
jge
jmp
fst
fninit
cmp
stos
mov
in
inc
jle
call
hlt
mov
mov
push
hlt
cmc
mov
cmp
and
outsb
cld
xchg
pop
sub
pop
stos
iret
cmpsl
sbb
aad
mov
xor
push
into
insl
outsb
fsubr
imul
test
cmp
popf
jbe
jmp
fadds
mov
lret
dec
xor
daa
in
sub
pop
fldcw
addr16
roll
mov
fstp
sbb
pop
xor
push
xchg
aas
ljmp
and
imul
pop
in
push
negl
jae
jp
mov
pop
sbb
ret
xchg
add
push
inc
invd
mov
inc
data16
mov
sti
dec
sub
jp
add
mov
mov
dec
pop
out
fnstenv
and
sarb
movsb
lret
les
cmp
add
sub
mov
mov
jg
jecxz
test
jbe
addl
add
or
icebp
adc
mov
cld
jns
cmc
push
sub
pop
pop
sbb
push
aad
imul
sub
pop
mov
or
mul
hlt
call
add
mov
jo
mov
test
lcall
xchg
test
add
out
ffree
bound
jo
mov
dec
push
jnp
xchg
pop
inc
shlb
xlat
or
insl
push
popa
cmp
hlt
push
aad
sbb
popf
popa
mov
out
inc
arpl
fsubl
out
call
mov
andl
sbb
mov
daa
imul
insl
fldt
add
sbb
mov
and
mov
rorl
xchg
or
lock
cmp
dec
mov
lret
mov
mov
push
nop
or
sahf
icebp
movsl
mov
add
inc
dec
icebp
xchg
insb
push
cltd
jns
rorl
pushf
incl
ljmp
call
xchg
inc
and
adc
fistps
adcb
pextrw
xchg
ret
jp
pop
in
mov
xchg
sub
aas
pop
pop
sahf
sub
aad
push
loop
fs
loop
adc
outsl
sti
inc
sub
subb
fs
inc
pop
xor
push
lahf
and
fwait
aaa
adcl
pop
xchg
inc
ret
pop
cmpsb
repnz
jno
repz
jl
dec
inc
in
sbb
add
sarb
int3
cli
adc
push
mov
pusha
sbb
or
dec
shll
les
pushf
adc
add
shrb
pop
vmptrld
push
je
idivb
mov
sbb
and
movsb
test
movsb
jp
cld
mov
rcl
mov
iret
adc
mov
das
or
fsts
aam
lcall
ret
outsl
out
xchg
add
jle
xor
jge
mov
loop
cmpsl
movl
mov
sub
mov
mov
into
mov
loope
popa
mov
pushf
rcr
lret
jbe
inc
pop
data16
push
jne
dec
out
mov
or
push
out
sub
lods
and
mov
mov
and
cmp
rcr
scas
ljmp
popf
int
cmp
sbb
aaa
pop
stos
cmp
mov
xor
data16
and
push
xlat
xor
mov
dec
cmpsb
push
xchg
scas
ret
jl
sub
jg
hlt
pop
push
insl
fsubr
in
or
ljmp
ret
pop
in
xor
mov
mov
or
push
jl
and
dec
dec
jb
outsl
das
inc
sub
pop
cmp
jb
sahf
out
pop
and
push
mov
and
cltd
stos
add
xchg
imul
clc
pop
imul
lock
clc
das
cltd
or
cmpsl
xchg
test
fucom
loope
adc
lods
cmp
pusha
fstl
loopne
movsl
ret
lods
and
add
push
cmpsb
push
ret
mov
mov
mov
add
rclb
inc
pop
pop
inc
ja
stc
roll
jne
aaa
insb
out
jns
jo
and
cmc
cmp
test
outsl
imul
imul
dec
xchg
fistl
inc
bound
add
jecxz
cld
daa
mov
iret
in
int
jecxz
in
movsb
adc
jp
adc
sbb
pop
aas
push
imul
jmp
cmpsb
jnp
jbe
pop
nop
sbb
scas
fmull
imul
ljmp
xchg
sahf
into
sahf
add
shld
adcb
or
mov
into
iret
pusha
addr16
push
aam
fdivrl
out
inc
push
mov
dec
orb
in
dec
or
aaa
mov
js
lahf
aaa
sub
sbb
sub
jl
shll
in
cmp
insb
sarl
shll
jno
mov
mov
xchg
sbb
out
fwait
inc
nop
loopne
add
mov
pusha
xlat
into
jp
mov
push
push
dec
inc
je
lock
mov
xlat
test
insb
outsb
xor
adc
mov
jne
and
sub
lret
and
mov
ljmp
mov
iret
aas
out
mov
ffree
add
icebp
cmp
mov
mov
push
jg
pop
out
shlb
pop
dec
cltd
lret
cmp
mov
mov
lea
cmp
jge
push
sbb
xchg
pop
jno
sbb
rcr
js
jae
scas
int3
or
mov
xchg
xchg
jbe
mov
ret
jo
pop
mov
repz
cmp
lret
sbb
dec
cmp
mov
xor
xor
mov
out
shl
outsb
sbb
push
add
fnstcw
enter
in
xchg
mov
push
and
add
fsubrl
lret
in
inc
cld
adc
jno
outsl
nop
push
pushf
jns
sarb
out
lock
pop
cwtl
push
ret
shll
je
mov
add
adc
mov
jne
int
xor
ljmp
mov
js
cli
sbb
inc
mov
test
jns
jnp
idiv
sbb
rcrl
stc
cld
pop
mov
add
lods
or
shlb
rolb
aaa
and
std
adc
lahf
shll
icebp
out
cs
cld
pushf
pop
fiadds
arpl
lret
aam
pop
dec
andl
cmp
lds
subl
testb
imul
push
in
adc
sbb
repz
arpl
fmull
add
add
daa
xlat
ds
jno
stc
out
sti
scas
idivb
dec
out
sub
loop
cmp
insl
test
mov
push
jge
stos
mov
aad
sbb
movsb
jge
ret
loope
cltd
pop
cmp
out
mov
fucomp
mov
test
sbbl
sbb
add
xor
arpl
jno
mov
jg
test
cmp
add
or
mov
adc
jns
or
fimuls
and
addr16
int
jnp
pop
push
je
mov
mul
and
jae
mov
repnz
call
mov
fcompl
jg
and
jmp
sub
cmp
bound
xchg
inc
sahf
fisubs
sarl
add
inc
ss
aas
out
fwait
bound
stos
leave
aas
dec
sbb
cmpsb
lret
mov
mov
jnp
mov
in
inc
mov
mov
das
push
add
jg
test
or
jns
lods
xchg
cmp
jb
push
add
imul
loop
nop
sub
lock
jae
loope
movsl
mov
fisttpll
fs
test
adc
inc
insl
call
mov
shrb
and
cmp
dec
roll
sub
test
in
jne
clc
pop
jg
es
mov
xchg
jb
dec
aas
call
rorl
pop
push
mov
mov
sti
stos
push
mov
inc
and
cli
lods
sub
add
lret
bound
push
sbb
adc
scas
fdiv
dec
cmp
and
ds
scas
arpl
repnz
push
push
ret
add
js
addr16
dec
jg
jp
pop
pop
adc
or
cld
inc
std
sbb
in
iret
cmpsb
mov
or
push
xor
int3
clc
imul
mov
push
loope
sbb
mov
adc
cltd
aad
add
addr16
sahf
stos
sbb
lcall
sub
sub
fistpl
adc
sahf
jb
mov
xor
fisubl
in
ffreep
cmp
std
lods
push
xchg
loopne
or
out
lds
rorl
jb
out
and
inc
xlat
dec
cltd
push
add
fninit
xor
add
sub
pop
mov
pushf
jnp
dec
adc
mov
cmp
outsl
or
jns
lock
loope
in
lea
push
inc
inc
stos
push
out
std
aam
outsb
sbbl
xchg
enter
out
jno
xchg
cmp
stc
sarl
push
jae
lods
hlt
mov
jbe
ret
aas
jne
loop
hlt
repz
dec
push
push
and
icebp
jge
int
inc
mov
repnz
mov
and
imul
sbb
adc
sti
mov
push
cmp
push
jg
cmpsb
int
sub
addr16
divl
je
pushf
xor
push
push
ja
addb
adc
enter
jp
cltd
push
fistpll
xlat
dec
std
add
mulb
lret
dec
lahf
xlat
xchg
sub
add
push
dec
test
and
jnp
out
inc
push
push
push
repnz
rcll
lods
jmp
inc
loop
imul
insb
pop
sbb
xchg
lahf
adc
aad
and
jl
cwtl
jne
xor
cmp
cmp
add
or
fdivs
in
pop
adc
inc
inc
pop
out
dec
adc
adc
and
in
shlb
and
or
js
or
je
cmp
push
add
dec
jg
js
jge
pop
jmp
push
or
xor
loopne
popf
mov
clc
or
dec
aaa
test
pusha
add
mov
ljmp
ja
mov
daa
das
mov
mov
in
fdivs
sbb
aad
adc
mov
push
hlt
cmc
mov
iret
xchg
sub
dec
imul
xor
js
rep
inc
test
shlb
cmp
gs
xchg
cltd
incl
mov
in
int3
mov
cmp
shld
cmpsb
mov
js
jae
dec
fsub
fs
jge
xchg
jg
test
push
lret
inc
outsb
mov
adc
sti
cmp
pop
les
dec
outsb
inc
sub
push
std
pushf
mov
ror
cmp
aam
ficoml
mov
mov
pushf
sbb
mov
push
and
lock
lods
lock
out
ss
out
cmp
imul
cwtl
or
out
cli
stc
inc
mov
iret
in
sbb
add
sbb
xor
sub
dec
dec
mov
stc
movsl
jns
push
sub
int
and
int3
stos
xchg
pop
fists
insl
lea
mov
and
inc
push
pusha
xor
jl
rolb
and
mov
test
xchg
jmp
test
das
loop
sbb
and
inc
loopne
dec
xchg
xchg
mov
push
rolb
xchg
lea
sti
mov
cld
xchg
jmp
pop
daa
pusha
dec
pop
push
add
neg
dec
jle
push
push
xchg
cmp
cmc
adc
sub
cmc
xor
inc
rep
mov
cmp
inc
jns
test
push
add
add
mov
cmp
loop
mov
mov
andb
cmp
ret
sahf
xchg
mov
mov
jl
ret
ret
adc
sbb
clc
sbb
aaa
pusha
fwait
rol
or
outsl
ljmp
mov
adc
sahf
test
sbb
or
rcrb
jnp
mov
lea
adc
movsl
cmc
aas
adc
add
arpl
shrb
arpl
insb
mov
xlat
pushf
sbb
jge
xchg
fsubrs
iret
inc
adc
xchg
pop
mov
aaa
jns
adc
lock
ja
mov
pop
stc
or
inc
divl
xchg
jmp
sub
add
filds
cs
adc
xchg
xchg
jp
mov
and
push
jp
jp
icebp
xchg
in
fidivrl
adc
je
in
xchg
pop
fs
xlat
or
mov
and
fistpl
mov
lods
int3
cmpsl
rcrb
cmpsb
xchg
inc
loope
and
call
arpl
adc
ret
stc
inc
mov
fadds
pusha
xchg
jns
pop
xor
pop
repz
pop
adc
stos
das
jb
push
mov
xor
orb
add
cmp
test
or
bound
and
dec
repnz
stos
mov
mov
dec
xor
mov
jnp
fistps
and
mov
clc
mov
les
lods
mov
lret
and
in
xchg
sub
push
sbb
inc
mull
outsb
loop
bound
push
scas
mov
inc
lds
xchg
and
fdivrp
mov
cmc
mov
xlat
stc
pop
mov
sbb
mov
mov
inc
std
pushf
lcall
leave
test
inc
xlat
jo
popa
fs
mov
insl
sbb
addb
push
or
int
jns
mov
movsl
mov
in
xlat
repnz
clc
arpl
xor
mov
jp
push
push
lea
mov
sub
push
int3
xor
xor
sub
sbb
lcall
adc
mov
inc
mov
call
push
rclb
es
in
xchg
iret
sarl
movb
sbb
adc
xchg
sub
sbb
pop
inc
mov
and
xor
gs
fbstp
jb
adc
sti
outsl
adcl
mov
aad
jge
nop
push
movsl
push
mov
dec
stos
cltd
cmp
sub
sub
add
test
xlat
imul
out
je
jae
mov
xor
gs
jg
aam
sub
jle
iret
or
leave
inc
jns
push
mov
rcr
rcll
add
mov
cmp
pop
scas
push
scas
test
xor
sub
lods
popa
mov
pop
xchg
fidivl
fwait
imul
mov
lock
scas
mov
and
mov
les
add
nop
ja
das
out
or
sahf
mov
push
cmpsl
mov
outsl
stos
mov
or
mov
pop
fwait
lcall
dec
sbb
in
inc
mov
dec
xchg
mov
add
xchg
imul
call
dec
jmp
sbb
cmp
adc
jne
insl
mov
cs
mov
mov
mov
add
ljmp
ss
inc
out
xor
push
mul
nop
mov
dec
leave
addr16
or
arpl
mov
mov
call
adc
cmp
xorl
sub
mov
cwtl
or
inc
sbb
pop
xor
mov
push
cmc
scas
xchg
out
popl
xchg
loop
stc
stos
in
pop
lods
imul
cmp
repnz
mov
push
jno
jnp
loop
mov
shl
clc
push
rol
jnp
adc
cld
ja
xchg
imul
shll
aas
dec
adc
pop
dec
sar
push
or
fsub
mov
sbb
orb
add
sbb
jns
push
imull
es
cmp
mov
jbe
jb
push
pop
in
sysexit
sbb
mov
movsb
out
xlat
xchg
push
ret
fcompl
mov
fisttpll
mov
xchg
ljmp
js
data16
dec
ss
xchg
push
inc
aas
jno
pop
inc
adc
stc
int3
add
sub
jge
mov
cmpb
jno
mov
cmp
and
and
push
lret
rcr
repz
psubusw
jae
push
sbb
adc
insb
lods
add
in
aas
daa
mov
xchg
nop
add
rcrb
lods
pop
adcl
xchg
xchg
mov
das
je
mov
or
pop
lcall
aam
fcmovnb
inc
mov
jmp
rorb
aad
cmc
mov
shlb
ds
repz
sub
push
cld
mov
in
mov
rcl
fstps
test
enter
data16
aaa
xchg
fprem
mov
push
jmp
pop
movsl
je
jnp
pushf
xchg
mov
mov
out
add
les
pop
and
movsb
outsl
or
adc
and
sbb
fldl
out
push
push
inc
dec
cli
in
fs
mov
inc
cmpsl
jnp
mov
cmp
inc
sahf
sbbb
stc
mov
jmp
push
orb
xor
loope
jge
sbb
xor
inc
and
mov
inc
subb
push
push
sub
jo
xchg
int3
in
call
divb
pop
or
cmp
adc
xor
inc
sub
add
sub
inc
shl
push
loope
mov
mov
cwtl
ja
jno
icebp
sbb
and
gs
mov
enter
std
bound
push
sbbl
or
add
fst
in
xor
enter
cmpsl
dec
mov
popf
addr16
pop
lds
call
arpl
insl
mov
or
sbb
fmuls
int3
xchg
cmp
scas
add
lahf
push
pop
jmp
or
push
loope
out
inc
cwtl
ja
adc
xor
push
mov
fsubrl
and
rcrl
enter
bound
push
xor
cmp
adc
push
fidivrl
sub
cmp
pusha
insb
cmp
jle
lds
sbb
adc
aam
cli
jb
int3
aaa
add
xor
repnz
pop
inc
dec
push
aaa
and
xor
mov
clc
xchg
and
xor
movsl
jecxz
cmpsl
push
xor
sbb
dec
or
into
int
mov
aam
loope
lcall
sub
pop
xor
das
jae
js
aam
enter
fst
push
add
fildll
into
outsl
outsb
shrl
sub
xchg
nop
inc
flds
das
cwtl
mov
mov
inc
into
pop
test
mov
imul
dec
cmp
xchg
les
mov
fbstp
sub
pop
out
sahf
jecxz
mov
push
test
push
sub
out
shll
cs
dec
and
sbb
mov
fsub
mov
mov
jle
jb
pop
mov
inc
cltd
mov
subb
fistl
lahf
sub
add
lock
push
cs
sti
dec
dec
lret
imul
cmp
sub
daa
vmovaps
mov
inc
push
popa
insl
rcrb
mov
sarb
jle
insb
pop
sub
cmp
lret
sahf
mov
lret
xchg
sbb
push
pop
inc
in
jecxz
fcomps
fcoms
cld
lcall
bound
cs
sbb
sub
dec
mov
cwtl
icebp
int3
sbb
mov
mov
sbb
andl
pop
sar
loop
xor
jecxz
repnz
push
mov
hlt
cmp
and
pop
in
adc
xchg
imul
std
fld1
sub
adc
pop
call
xor
iret
cmc
dec
arpl
cmp
nop
add
or
mov
lahf
aam
xorb
dec
int
mov
fisttpl
out
loopne
mov
ja
sub
sbb
fld
pop
test
leave
loope
sub
ljmp
lods
push
fstl
push
adc
sub
dec
pushf
xchg
int
cmp
popf
lret
aas
loope
repnz
nopl
sub
call
aad
pop
mov
jecxz
arpl
and
movl
jne
mov
mov
or
pop
inc
lret
lcall
shlb
add
sysret
jb
jb
rcrb
lds
or
mov
jmp
mov
out
fistl
scas
sub
int3
push
jmp
jle
sub
add
xchg
pop
dec
inc
out
shl
jle
out
sub
sub
in
cmp
fldenv
pop
add
jle
jge
insb
push
jmp
scas
sub
gs
dec
push
mov
in
sbb
lret
xchg
inc
dec
sbb
cmc
mov
inc
mov
pop
cs
mov
xchg
ja
jns
pop
and
dec
jns
loopne
jle
repnz
xchg
or
cmp
movsl
imul
jge
test
repnz
xchg
push
rorb
loopne
leave
cmpsl
sub
pushf
mov
ficomps
popa
cmpsb
sahf
push
testl
push
mov
fildl
push
xchg
movsl
sub
ret
add
inc
push
adc
sub
lret
lods
add
jmp
xorl
pop
js
aas
add
add
lds
push
test
jmp
bound
orl
leave
inc
inc
movsb
pusha
cld
scas
enter
xchg
inc
loop
stc
xchg
loope
ret
mov
push
shll
sbb
dec
inc
adc
pop
pushl
sahf
jp
pop
lock
sarl
add
pop
arpl
cli
sub
js
fistps
pop
mov
xchg
repz
dec
ds
aaa
and
fwait
adc
push
aaa
scas
test
sbb
leave
adc
pop
das
scas
pop
adc
jmp
scas
xor
lods
gs
cmpl
mov
into
out
inc
repz
fcomps
mov
push
xlat
xchg
in
add
repnz
bound
ja
push
push
popf
fistps
jp
ljmp
fxch
mov
add
pop
pop
outsl
add
stos
xchg
mov
push
in
inc
jl
dec
subb
icebp
and
cmp
pop
sbb
mov
fwait
add
push
jb
mov
ret
mov
push
adc
sub
push
fistpll
iret
lods
pop
xchg
jb
jmp
jae
fcoml
mov
mov
cmc
jnp
fbld
gs
in
aam
out
in
shlb
jb
jne
jnp
sub
add
scas
sbb
out
jg
mov
push
sub
sub
inc
adc
ljmp
fincstp
sub
loope
mov
arpl
adc
add
rcll
mov
popf
mov
mov
mov
ss
and
fmul
scas
cltd
int3
push
xchg
shrb
mov
jns
cmp
fwait
pop
jnp
test
jb
jnp
xchg
out
or
fdivr
xor
js
int3
in
and
inc
jns
adc
movsb
cmp
int
or
or
push
cmp
xchg
xchg
jecxz
mov
test
push
rorl
sahf
sub
sbb
jo
in
aaa
adc
inc
fwait
dec
divb
out
cvtdq2ps
pop
add
inc
pop
clc
jns
and
ljmp
add
push
outsb
adc
jg
pop
xor
and
aam
addr16
inc
push
jl
or
outsl
stos
out
clc
mov
in
out
ljmp
sub
sbb
push
mov
leave
lret
xchg
mov
mov
loope
in
mov
xor
pop
test
inc
adc
mov
iret
inc
decl
inc
xchg
ret
pop
mov
add
lahf
pop
add
popa
stc
fsubrl
andl
ficoml
cmp
push
jl
inc
mov
push
dec
adc
adc
iret
add
clc
addr16
and
shll
adc
jb
or
cmpsb
addr16
enter
adcl
jb
popa
lods
cs
pop
sbb
mov
jno
and
push
mov
icebp
loopne
jno
aaa
and
adc
or
scas
mov
scas
jge
out
mov
leave
int3
mov
sbb
cli
pop
cmp
pop
xchg
or
adc
mull
sbb
cld
lahf
cmp
mov
int
jne
inc
aam
jnp
mov
push
pop
sub
scas
stc
mov
sbb
add
out
pop
add
push
add
jno
jmp
shr
cltd
sub
add
or
xor
push
pop
rcr
push
jno
std
sbb
and
jecxz
sbb
jno
sub
xchg
aas
inc
jmp
lds
sbb
insb
repnz
and
call
mov
adc
fcmovbe
xor
hlt
std
test
jnp
cmp
xor
iret
push
mov
dec
call
stc
pop
sub
and
add
fwait
cmp
shr
or
cmpsb
mov
repz
pushf
pop
pop
inc
fs
js
rcrl
movl
das
hlt
push
xor
rol
test
xlat
ret
shlb
push
call
xor
fnsave
popa
ljmp
adc
fcompl
sub
sub
xor
mov
int
jge
out
mov
data16
sahf
lahf
push
dec
imul
mov
mov
rcll
cmp
lret
xchg
rcl
je
and
xor
out
dec
inc
sbb
push
sahf
push
mov
push
stc
mov
pop
xor
in
rcl
lret
ret
jmp
movsl
adc
dec
mov
lret
scas
pop
cmp
cmp
xor
push
aas
mov
and
out
rcr
mov
sub
jmp
cwtl
adc
inc
je
mov
cmp
pop
jno
lret
cmp
and
mov
sub
movsb
xor
add
jl
imul
mov
or
fiaddl
mov
mov
or
imul
jae
ljmp
imul
jge
cmp
loope
fs
sbb
out
movsl
addr16
jl
xorl
jl
fwait
mov
cmc
leave
pop
or
push
pushf
cwtl
pop
add
mov
test
aas
adcl
mov
pop
mov
push
inc
imul
adc
dec
icebp
sub
xchg
rcrb
outsl
into
push
xchg
mov
pop
ljmp
cltd
dec
jbe
bound
sbb
mov
mov
cmc
xchg
mov
clc
mov
gs
mov
subl
fsub
mov
fs
movsl
xchg
or
jmp
inc
jns
mov
dec
ljmp
push
xor
int3
jae
aaa
out
es
push
pop
xor
shr
jmp
adc
mov
inc
mov
ds
sub
xchg
inc
dec
int
aaa
test
scas
movsl
mov
fs
inc
inc
ds
dec
adc
and
stos
or
jnp
sub
in
popf
lret
fidivs
inc
sub
sti
cmc
nop
in
adc
xchg
call
pop
addr16
repz
sbb
cmc
call
sbb
push
xchg
in
mov
lods
clc
inc
adc
or
and
sbb
repnz
xor
mov
subl
cmpsl
scas
cmp
lods
xor
jnp
sub
popf
lcall
sbb
fwait
int
lock
pop
leave
adc
jo
sbb
and
hlt
popa
or
pop
loop
popa
dec
sbb
andl
jl
xchg
rcr
ljmp
push
sbb
and
dec
mov
int
xor
mov
jno
mov
dec
push
pop
ficomps
aaa
sahf
aaa
xchg
mov
adc
mov
dec
in
xor
fdivp
stos
jne
dec
mov
in
cwtl
and
movsb
jnp
icebp
dec
sbb
fists
das
cmp
stc
test
or
sub
inc
movsb
movsl
pop
pcmpgtw
pop
and
imul
sub
ret
mov
aad
cmpsb
out
mov
adc
inc
sahf
dec
mov
stos
xor
scas
mov
pop
dec
adc
js
ljmp
shl
mov
scas
mov
or
inc
in
xchg
arpl
xchg
nop
xor
pop
push
icebp
call
pop
mov
mov
dec
sbb
int3
lods
cltd
scas
mov
pop
push
stos
jecxz
jecxz
mov
xor
mov
lret
fcmovu
lods
popl
sti
sbb
push
scas
je
in
inc
xlat
and
push
jle
es
roll
mov
push
push
dec
mov
or
inc
xchg
inc
pop
call
jle
in
test
dec
mov
fisttps
push
jno
xor
xchg
in
adc
out
testl
stos
and
add
xor
sbb
jno
out
popa
mov
pop
pop
dec
mov
and
mov
push
adc
mov
jo
sub
xchg
test
daa
daa
jge
pushf
test
outsl
imul
aam
adc
aam
stc
add
or
pop
and
and
in
push
test
dec
das
lret
shlb
dec
mov
adc
mov
bound
push
or
loopne
cld
pop
outsl
push
popf
adcl
loopne
pop
popa
or
fmull
sbb
rcll
je
stos
mov
mov
in
xor
js
mov
xor
adc
roll
mov
imulb
lret
adc
cli
push
jle
cmpb
dec
popl
icebp
sbb
or
dec
neg
repnz
mov
outsl
iret
jne
xchg
bound
call
movsl
mull
in
dec
sub
test
push
sub
mov
adc
negl
add
sub
xor
data16
mov
pop
mov
rclb
jecxz
push
push
or
xor
nop
sti
jg
xlat
push
notl
fadd
dec
inc
popa
adc
icebp
push
test
scas
adc
add
sub
inc
fdivrs
rolb
fwait
out
popf
jno
sbb
xor
mov
testl
sbb
aad
mov
cmp
add
inc
in
aam
jg
pop
std
cmpsl
or
pushf
dec
inc
add
mov
jle
push
imul
mov
lahf
inc
stos
out
lcall
int
ds
or
lock
xchg
or
mov
inc
pushf
mov
pop
jmp
sti
clc
mov
push
in
xchg
lret
ds
jae
xchg
mov
clc
popa
int3
add
push
mov
add
test
sbb
lret
movsb
pop
clc
or
adc
in
xor
lret
lret
pop
sbb
shlb
leave
dec
mov
in
insb
arpl
loopne
icebp
aas
jl
push
and
mov
or
sub
sub
and
dec
xchg
adcl
xor
out
and
jp
jnp
xor
lods
stc
adc
mov
mov
xchg
rclb
mov
es
and
lods
dec
sbb
je
jmp
lahf
iret
ror
jge
sbb
aaa
movsl
arpl
push
icebp
pop
cwtl
sahf
lds
fdivp
mov
xchg
das
mov
mov
test
lods
push
gs
mov
insb
mov
or
jmp
adc
xor
jg
loop
mov
xchg
push
ljmp
popf
repz
sbb
cwtl
xor
int
xchg
jb
cs
cs
roll
ljmp
push
dec
jnp
xor
mov
adc
sub
iret
mov
inc
mov
sub
aaa
inc
fs
cmp
inc
in
test
stc
lods
out
mov
cmp
or
mov
shlb
bound
push
addr16
xchg
and
loopne
lahf
movsb
adc
cmc
pushf
lcall
xchg
testl
push
dec
jb
xchg
out
nop
ret
lea
js
dec
fwait
inc
or
hlt
jp
adc
push
lods
movsl
adc
mov
mov
cmp
and
xchg
xor
sub
pop
pop
repnz
aaa
gs
inc
push
add
rcrb
jg
mov
outsl
stos
mov
pop
ficoms
sar
fadds
sahf
push
aas
adc
dec
fdivrs
aam
call
aaa
cmc
shl
adc
mov
stos
lods
xchg
pop
and
shl
mov
sub
dec
cmpl
jbe
jnp
mov
ret
ret
dec
add
filds
adc
loopne
or
daa
xor
fs
int3
movsl
adc
xor
into
jbe
repnz
jmp
shl
sbb
in
jns
test
out
addr16
pushf
stos
xor
cmp
popf
scas
xchg
dec
loopne
inc
aam
pop
in
jmp
xor
gs
dec
aaa
gs
fwait
out
and
int3
fdivrp
add
pop
mov
dec
ja
push
inc
mov
push
push
pusha
pop
leave
mov
lret
insb
test
sub
push
sbb
int
xchg
pop
shll
enter
mov
cmp
mov
and
jmp
pop
inc
dec
and
jp
dec
sbb
add
nop
mov
and
shlb
lock
push
gs
mov
cmp
inc
ds
scas
or
pop
jmp
adc
mov
popf
push
inc
inc
stos
push
xchg
cmp
xchg
add
or
xchg
add
pop
in
sub
or
hlt
out
imul
iret
add
mov
jmp
jnp
es
jnp
ss
pop
jmp
inc
inc
jo
mov
push
xor
ds
mov
aam
push
jae
pop
mov
test
sub
inc
mov
out
pop
ficoml
mov
and
fiaddl
xlat
and
ja
jne
fmul
outsl
dec
ret
cmc
and
fdivl
cmp
mov
push
xchg
push
sbb
ljmp
push
out
cwtl
mov
sub
push
mov
ffree
dec
hlt
imul
jge
push
mov
mov
dec
jge
pop
lds
xchg
mov
sbb
loop
mov
je
adc
in
jmp
push
icebp
fildl
mov
jl
sbb
stos
aas
cmp
lock
fsts
subl
btc
sbb
mov
sarl
jmp
push
and
aas
fisttps
mov
xchg
inc
out
pushf
lods
and
stos
pop
cmp
add
lcall
add
jmp
sub
mov
sbbb
out
adc
iret
jo
in
repz
add
sbb
push
mov
fstps
lret
dec
lret
mov
outsb
jmp
xchg
push
jmp
cmc
leave
adc
mov
mov
xchg
jmp
push
pop
jge
fists
jae
pop
sub
pop
outsb
mov
aad
in
das
out
inc
xchg
mov
jl
ljmp
jne
aas
xchg
jae
or
jle
aad
imul
js
xchg
js
in
into
cs
std
ret
lods
popf
mov
jno
pop
pop
out
dec
and
xchg
pop
lret
mov
adc
in
jnp
jmp
frstor
mov
add
mov
in
add
adc
and
ja
xchg
mov
std
mov
rorl
cmp
test
scas
shrb
xchg
add
adc
addr16
xchg
add
lea
push
lods
and
inc
adc
push
or
mov
test
insb
in
outsl
cld
pusha
xor
and
add
cmovge
out
jb
dec
inc
cli
add
adcb
bound
leave
data16
add
lret
imul
sbb
mov
jge
dec
das
std
push
and
subb
pop
mov
push
daa
xlat
cmp
hlt
add
in
andb
lds
nop
jle
adc
rcrb
xchg
xchg
ret
test
popa
out
ficomps
mov
clc
ja
dec
xchg
into
cltd
mov
hlt
and
shll
out
ja
jno
cmp
cmp
fpatan
pop
test
xchg
fstpl
pop
dec
jecxz
push
mov
decb
hlt
in
or
xor
lods
push
xchg
adc
dec
in
dec
pop
jp
cmc
lcall
inc
popf
sub
aaa
enter
xor
stc
sub
cmp
fmull
lcall
pop
jg
fwait
daa
inc
sub
test
adc
mov
vmovlps
mov
xor
dec
adc
stos
insl
mov
test
loop
outsb
pop
jae
and
jl
push
adc
push
cld
bound
adc
mov
mov
cmp
std
xchg
pop
and
aam
out
cmp
sti
repz
push
fisubrl
jmp
je
in
int
cld
jge
mov
mov
or
cmp
lea
dec
xlat
xor
jmp
jne
inc
jecxz
ftst
bound
scas
sub
sub
mov
cmp
cld
xor
mov
push
cmp
jo
sar
xchg
mov
ds
test
push
addr16
cmp
inc
inc
jl
mov
jae
arpl
sub
or
sub
shlb
scas
lea
fsubrs
out
cs
lret
adc
pop
stos
add
or
mov
cmp
add
mov
rcrb
cmp
cs
lahf
movsb
pusha
mov
mov
negl
pop
cld
jno
jl,pn
std
rcl
jmp
xor
icebp
fmull
mov
xor
imul
clc
iret
fs
xorb
std
mov
aam
leave
cmp
or
negb
outsb
cmp
inc
loopne
mov
fidivs
sbb
pop
cmp
cmp
push
lret
jp
fs
hlt
loop
jmp
mov
lahf
sbb
push
pushf
aas
dec
xor
bound
out
jne
ss
add
inc
sub
sbb
test
loope
les
fidivl
pushf
loope
subb
aad
cmp
pop
sbb
mov
xor
and
push
inc
or
xchg
push
dec
push
movl
inc
add
lahf
dec
xchg
jo
add
xchg
shrl
push
fmull
or
clc
cvttps2pi
add
je
aas
icebp
sbb
ss
xor
cmp
bound
dec
pop
pop
jb
lahf
xor
mov
out
and
pop
fnstsw
daa
and
sti
dec
inc
adc
cmp
mov
push
fiadds
and
icebp
or
insb
mov
bound
call
adc
xor
leave
pop
stos
arpl
dec
mov
outsb
sbb
movsl
jne
sub
cmc
dec
mov
data16
cmp
fstp
pop
sahf
or
lods
cmp
mov
enter
insb
lret
pusha
adc
or
loope
sbb
stos
js
mov
inc
jbe
scas
mov
xor
lods
pop
add
mov
fdivrs
cmp
pop
jecxz
xchg
xchg
shll
dec
es
mov
addr16
mov
gs
cmp
push
adc
sbb
inc
xor
pop
add
add
sbb
in
mov
ficoms
push
ficompl
lret
push
sarb
scas
adc
hlt
push
mov
shrb
and
xor
cltd
js
call
inc
lret
jl
mov
in
mov
ss
fnstsw
jnp
mov
shrl
mov
enter
add
pusha
je
loop
ret
outsb
or
mov
xchg
mov
lahf
push
out
inc
mov
jmp
insl
call
push
push
xchg
sti
out
jne
sti
mov
adc
or
xchg
cld
sub
sub
adc
std
dec
js
xchg
popf
out
in
adc
cltd
pop
adc
dec
dec
daa
fstl
ficoml
inc
inc
adcl
and
pusha
fcomp
and
int
xor
mov
xchg
imul
push
arpl
jp
adc
movsl
push
into
out
jp
xor
jmp
jmp
inc
dec
out
dec
std
cmpl
insb
xor
jle
int3
inc
jb
dec
ja
jae
stc
sub
pop
xchg
jg
mov
xor
sbb
jo
or
cld
test
sarb
or
rorl
ss
mov
pop
orl
aas
pop
pusha
stos
sub
xor
inc
mov
pusha
lcall
adc
jl
sti
inc
and
dec
dec
adc
jp
xorb
and
cwtl
xor
mov
lods
push
dec
insb
sbb
outsl
xor
mov
mov
repnz
hlt
pop
fcomp
and
arpl
pusha
sub
mov
sti
in
mov
and
jbe
jae
ljmp
push
jbe
out
lods
mov
test
xchg
xor
jns
jle
add
jb
aam
rclb
mov
jecxz
iret
mov
scas
push
mov
out
in
sar
hlt
dec
stc
mov
sub
xchg
iret
and
test
xchg
lret
xchg
out
xlat
inc
adc
pop
push
fcmovnbe
pop
notb
jno
dec
pop
mov
pusha
cli
adc
cmpb
cmp
and
lds
mov
out
adcl
testl
popa
sti
pushl
aaa
push
pushf
and
das
rcrb
movsl
iret
inc
rcrl
jecxz
pop
xor
and
mov
or
cmp
fbld
mov
inc
or
jmp
rcrb
jnp
jl
mov
sub
shl
inc
push
rcrb
pop
hlt
outsl
jb
shll
dec
dec
xchg
jmp
sub
loopne
jae
inc
mov
movsb
mov
sub
mov
mov
push
sbb
imul
or
cmc
xchg
rcrl
ret
pusha
aas
and
dec
test
mov
xor
movsb
mov
lds
jg
xor
pop
hlt
or
mov
jo
cli
inc
adc
push
inc
lods
xor
jle
lret
mov
test
or
dec
aam
push
inc
lods
insl
cld
cli
jb
and
inc
into
je
and
xchg
inc
xor
hlt
xor
xchg
or
xchg
push
lea
inc
sub
mov
je
aam
in
in
fldenv
test
outsl
or
push
fcoms
mov
mov
ret
mov
sbb
xor
mov
test
cld
daa
adc
inc
loopne
call
mov
mov
ds
mov
dec
sbb
push
insl
pop
adc
fistps
push
repz
jb
cmp
and
daa
daa
push
mov
lock
lret
test
mov
xchg
sbb
jae
jnp
ds
jo
pop
mov
call
sti
push
jb
and
lods
pop
sub
lret
push
dec
mov
mov
pusha
adc
fcomip
les
lcall
outsl
js
and
les
cmp
imul
dec
loopne
xor
cmp
add
aas
xchg
icebp
sahf
adc
add
and
imul
mov
arpl
movsb
mov
lret
mov
gs
dec
aad
xlat
popa
dec
add
aas
pop
ss
outsl
aaa
ret
dec
xchg
sti
push
loopne
lock
out
jge
out
xchg
sub
nop
add
addb
jb
arpl
mov
in
push
mov
mov
or
xlat
adc
xchg
das
cli
in
add
dec
test
jge
aas
inc
add
testb
xor
dec
sbb
sub
cs
cmp
pop
decl
popf
jo
sub
mov
mov
shll
shlb
ficomps
sbb
mov
ficoml
imul
cmp
fidivrs
mov
in
push
gs
and
inc
inc
cltd
sub
inc
stos
popf
xchg
out
fstpt
in
cmp
mov
push
and
xchg
sub
cmpsl
nop
adc
push
cwtl
sahf
cmp
sbb
inc
jno
xor
pusha
push
jno
lea
lret
jns
dec
arpl
rcrb
pop
dec
roll
lret
pop
std
push
xchg
mov
and
sbb
dec
cmpsl
maxps
fiadds
test
and
jnp
mov
pop
sub
add
scas
ja
or
mov
fcmovne
pop
cmp
out
push
lds
dec
std
adc
pop
jne
jne
fwait
mov
jp
sbb
test
call
xchg
fwait
and
push
xchg
lods
dec
int3
les
je
bound
xchg
xorb
pop
cmp
repz
dec
mov
loop
daa
sbb
mov
js
cmp
push
fbstp
loop
pushf
test
popf
push
mov
dec
and
mov
fildl
jo
pop
xor
cmp
dec
jo
cmp
cli
stc
xor
les
lret
mov
int3
sbb
hlt
scas
ret
sub
dec
dec
icebp
mov
sbb
xchg
scas
ds
fmuls
xlat
or
repnz
cmp
lock
push
jecxz
push
sahf
or
je
test
pop
in
stos
or
sub
mov
jne
pushf
cmp
xor
xorl
dec
leave
icebp
or
cwtl
fadd
pop
stc
sub
in
lds
xchg
faddl
insl
shlb
push
subl
mov
notb
shll
xchg
ret
pushf
les
mov
lods
adc
outsl
inc
daa
mov
in
faddl
dec
enter
test
mov
das
cmp
jne
lods
sbb
pop
addl
xlat
mov
icebp
shll
xchg
shlb
push
xchg
aam
mov
outsb
xchg
mov
idiv
sub
xor
repnz
mov
xchg
cmp
jae
adc
xor
sbb
stc
ret
mov
f2xm1
fwait
push
sbb
mov
dec
xchg
add
cli
enter
sbb
pop
lea
mov
jp
xchg
addr16
dec
fiaddl
pushf
movsl
pop
dec
cmpsb
sarb
mov
jp
sub
js
xchg
paddusb
lds
jmp
push
or
sbb
cmp
cmp
sub
adc
dec
sub
lret
fcmovb
mov
adc
jge
repnz
andb
and
stc
mov
mov
dec
xor
inc
inc
jle
mov
mov
imul
cmc
mov
cmp
sti
in
sti
loop
adc
push
lahf
mov
mov
stos
or
or
sub
mov
das
js
addr16
jb
jp
adcb
inc
push
jnp
jmp
push
xchg
rcrb
leave
lock
jbe
pop
test
push
sarl
fst
pop
jge
pusha
lock
mov
hlt
cmp
add
jge
rorb
pop
mov
cmp
imul
push
push
nop
shll
mov
mov
and
dec
jne
mov
push
fidivrl
decb
jg
mov
xor
push
arpl
aaa
jg
insb
repz
fcmovnb
call
pop
outsb
mov
ret
jmp
mov
xor
outsl
xchg
mull
and
jb
cmp
xchg
jle
std
jle
jp
jmp
ljmp
fcoms
cmpl
pop
xchg
clc
addr16
add
fnstsw
rcrl
xchg
ficompl
mov
sbb
xlat
lock
cltd
aas
mov
add
mov
xchg
lahf
aas
lods
lret
js
mov
mov
out
jne
dec
push
lods
imul
sub
adc
fimull
sub
pop
sbb
inc
jecxz
stc
cltd
ja
ljmp
inc
stos
mov
and
pop
out
mov
dec
push
mov
sub
in
or
ss
out
cltd
repnz
hlt
mov
inc
sub
hlt
and
sub
mov
lock
into
pop
xchg
js
mov
sbb
push
sbb
mov
dec
xor
pop
into
jge
stos
inc
cwtl
jp
mov
jb
jp
dec
cmp
cli
inc
dec
jne
test
pop
jecxz
rorb
inc
pop
aad
push
sub
in
mov
inc
jnp
lods
rcl
mov
es
pop
sahf
cmpsb
inc
fwait
add
cmp
ror
scas
xor
cld
insl
jecxz
sub
xchg
push
xor
inc
sub
iret
or
loope
jmp
pop
inc
jg
sbb
mov
sbb
sbb
cli
sbb
out
mov
lahf
test
rcrl
push
filds
scas
rcrl
dec
scas
cmp
loop
insb
mov
je
inc
mov
call
bound
mov
std
xchg
out
repz
je
mov
cli
enter
aaa
stos
xchg
aad
shr
mov
call
es
divl
push
outsl
mov
fnstcw
inc
popf
pop
inc
jo
mov
popf
ficompl
mov
es
out
stc
pop
jne
in
leave
push
push
mov
dec
in
and
cwtl
dec
mov
pop
sub
mov
pusha
out
dec
pusha
shl
inc
rcrl
or
and
push
pop
rolb
xor
mov
add
inc
xor
cltd
mov
or
aaa
dec
mov
iret
sub
cmp
aad
stc
dec
in
pxor
idiv
sbb
sahf
adc
mov
xchg
lret
xchg
fdivr
mov
lahf
jo
repz
pop
push
popf
idivb
test
fld
jecxz
inc
add
jb
push
subb
inc
and
testl
int
inc
and
push
scas
mov
pop
or
xchg
pop
repnz
lds
jl
pushl
or
cmp
cmp
jbe
out
xchg
push
adc
push
jo
test
push
mov
mov
push
xchg
push
cwtl
cmp
sahf
sub
jo
lahf
mov
jecxz
adc
sbb
xor
jae
push
adc
dec
pop
jge
out
rcrb
int3
mov
or
push
add
popa
cmp
jne
mov
pop
pop
mov
test
push
loopne
cmp
mov
push
push
loop
int3
add
addr16
movsb
mov
jns
fadd
cmpb
cli
ss
jle
push
mov
in
xchg
movsb
rcrb
inc
frstor
push
xchg
ja
cmp
pop
rcl
push
sbb
fdivrl
pop
fidivl
lods
cmp
cwtl
dec
inc
cmc
in
mov
popl
js
sub
xchg
out
roll
shlb
jge
lcall
sbb
das
dec
ljmp
sbb
xchg
fstps
cs
sti
mov
ret
and
mov
jg
jno
jl
pop
out
and
and
xchg
ljmp
cmc
jbe
repz
jae
push
mov
add
jge
push
sub
imul
push
sbb
push
loopne
in
fidivrs
lods
cmpb
mov
and
mov
jae
subl
fdiv
notb
sub
test
lcall
push
mov
aas
cltd
orl
push
icebp
nop
in
push
rcrl
cltd
int3
pop
pop
jmp
xchg
aad
mov
fucomp
cltd
ds
sub
test
adc
adc
xor
cmp
pop
aaa
stc
mov
pop
adc
adc
aaa
test
out
sub
xchg
cwtl
jbe
add
dec
pop
dec
dec
add
jle
pushl
adc
adc
iret
in
addl
cmp
add
mov
mov
mov
mov
in
scas
jecxz
push
mov
and
fcompl
dec
mov
cmp
jg
sbb
repnz
sub
jp
stos
aam
xchg
movsb
jne
cmp
add
pusha
ja
in
sbb
add
js
mov
fwait
adc
test
mov
dec
js
mov
mov
push
pop
and
insl
sub
mov
dec
xor
sub
pop
jb
and
jmp
xchg
pushf
aam
pop
add
sub
jecxz
mov
mov
pop
mov
icebp
dec
dec
push
repnz
pop
push
inc
mov
cmp
sub
mov
addl
int3
mov
outsb
aad
sub
mov
arpl
sub
sub
rorb
jbe
mul
lret
mov
xor
sbb
mov
cli
add
fs
test
inc
mov
insl
jmp
dec
mov
repnz
cwtl
push
mov
pop
das
arpl
jae
xor
mov
sub
sbb
mov
in
pop
pop
outsb
mov
inc
in
sahf
cwtl
push
sbb
xor
mov
stos
imul
lret
and
cmp
push
ljmp
ret
std
data16
inc
pop
inc
mov
sub
shr
dec
mov
insb
shr
add
sub
test
push
push
shlb
push
cmp
sub
cmp
sbb
pop
imul
mov
pushf
shrl
in
mov
pop
lret
lahf
fistl
scas
leave
mov
lcall
roll
fcomp
jmp
adc
push
or
xchg
cmp
outsl
aad
and
ljmp
pop
mulb
jns
or
and
add
clc
cmc
or
mov
jle
clc
fs
sub
xor
stos
add
cmc
or
mov
aas
cmp
divl
lds
pushf
in
dec
push
out
imul
push
pop
scas
sbb
adc
or
les
stc
cmpsl
dec
xor
outsb
std
arpl
or
or
xchg
sub
in
mov
add
out
fs
cwtl
sub
cld
loope
pop
shrl
lahf
mov
movsl
mov
inc
or
xor
xchg
push
push
jg
mov
stos
outsb
add
mov
sbb
leave
sbb
shlb
test
pop
jne
sub
mov
scas
inc
cwtl
fstl
loop
dec
pop
fistps
xor
lods
inc
mov
mov
mov
adc
in
jp
cmpsb
aaa
insb
pushf
stos
stc
outsb
ja
out
pop
cmp
adc
adc
mov
fcoms
dec
jle
xor
push
imul
lret
cmpsl
mov
out
cltd
lods
inc
push
pop
mov
xchg
adc
mov
hlt
movsl
insl
sarb
mov
stc
je
jnp
lods
movsl
in
add
dec
iret
inc
dec
outsb
xor
dec
sbb
and
movsb
stos
movsb
mov
pop
in
in
xchg
pop
mov
sbb
inc
jae
sbb
or
and
push
or
jmp
shlb
add
dec
jp
sub
clc
divb
pop
dec
mov
cmp
jmp
fwait
xor
add
cmpsb
sbb
rcll
or
sbb
insl
fldpi
imul
cmp
orb
add
addl
mov
rolb
dec
scas
or
inc
dec
fistl
call
ljmp
sbb
cmc
or
daa
fcompl
push
jo
jnp
mov
sub
mov
mov
mov
xchg
xchg
shll
jns
xchg
aas
repnz
push
mov
cmpsl
cltd
mov
xor
xor
ret
insb
and
outsb
mov
outsl
test
mov
in
adc
leave
test
pop
ja
push
xchg
jnp
dec
fidivrl
or
cmp
shlb
add
xchg
adcb
add
pop
andl
sbb
lds
cmpsb
jl
jle
cwtl
xchg
pop
sub
les
adc
push
sub
add
sub
inc
mov
xor
add
imul
sub
jnp
cmpl
add
call
mov
mov
lcall
or
xchg
mov
cmp
fimuls
jb
push
xlat
xchg
jb
ds
inc
push
xor
mov
push
and
xchg
add
sbb
sbb
xor
cli
hlt
mov
xorb
rorb
and
pop
into
test
iret
jl
lods
or
push
jbe
push
cmp
dec
lea
add
lret
aam
pop
fnsave
inc
out
enter
dec
rcl
test
sbb
adc
fisttpll
sar
mov
add
jle,pt
adc
in
pop
mov
test
inc
shl
scas
call
mov
roll
mov
pop
clc
mov
js
sub
insb
push
jp
sahf
pop
mov
loop
mov
out
movsb
gs
mov
stc
jecxz
jl
pop
adc
loopne
ljmp
aas
arpl
ss
fisubrs
loopne
mov
mov
mov
xor
mov
das
ljmp
mov
mov
or
movsl
pop
xchg
aas
mov
aad
xlat
or
cmp
and
mov
lea
out
xchg
ja
push
push
and
xchg
mov
or
clc
dec
adc
adc
jge
sbb
das
adcb
jne
out
or
push
dec
stos
and
jecxz
imul
dec
pop
cmp
cmp
xor
mov
cmp
cmp
rcrb
out
das
imul
mov
jnp
into
iret
rol
mov
popa
cmp
in
sbb
ja
mov
dec
inc
rcrb
sti
inc
popa
scas
xchg
cmp
sbb
out
mov
inc
xor
cmp
imul
jnp
mov
mov
mov
mov
sbb
push
inc
sub
dec
popf
xchg
sub
loop
or
shrb
xor
loope
add
cmpsb
ret
jmp
shrl
rorb
inc
fisttpll
test
dec
fidivs
mov
pusha
cli
add
pushf
mov
dec
out
lahf
enter
mov
push
or
cmp
push
cmp
in
cmpsb
push
mov
mov
dec
call
pop
xor
in
je
xchg
pop
int3
push
fwait
pop
fbstp
pop
std
mov
pushf
or
outsl
sbb
xor
dec
movzwl
xor
or
enter
push
xchg
loopne
in
dec
push
push
cmp
out
pop
jno
mov
aas
and
in
fisubrs
mov
push
mov
insl
mov
das
jb
adc
clc
dec
xor
fmull
pop
addr16
pop
fisttpl
mov
and
fldl
pop
jnp
lock
sbb
addr16
mov
subb
add
xchg
mov
adc
xor
rcrb
mov
dec
inc
hlt
in
cmp
imul
out
ljmp
fstl
cmpsb
pop
xchg
and
in
mov
sub
inc
test
icebp
scas
cmp
adc
push
mov
jb
dec
insb
rcrb
fstpt
push
cmp
mov
xchg
adc
arpl
mov
mov
xor
popf
xchg
mov
out
out
mov
and
lods
xor
pushf
add
and
xchg
lret
daa
rolb
xchg
mov
push
jmp
push
inc
mov
aam
sbb
push
add
stc
outsl
pop
inc
cmc
cmp
lcall
mov
ret
jle
aaa
dec
jo
and
pushf
loopne
mov
enter
or
or
repnz
orb
jmp
into
add
cmpsb
outsb
popa
imul
mov
negb
pop
sti
or
rcrl
sub
sub
test
out
inc
ja
imul
mov
lret
mov
mov
inc
inc
pop
mov
lods
jmp
insb
push
repz
arpl
lea
fs
jne
jb
mov
or
inc
xchg
sub
sub
sub
mov
es
in
xchg
lock
lret
xor
fistl
dec
mov
mov
or
fs
and
inc
subl
stc
or
pop
dec
inc
fdivp
cvtps2pd
nop
leave
xchg
adc
xor
jb
jp
es
aaa
cmp
cmp
sub
dec
jle
repnz
adc
in
scas
ret
mov
jl
and
test
adc
adc
or
sbb
push
shll
mov
or
stc
jmp
or
jge
aad
sbb
and
cmp
stc
andb
pop
pop
pop
test
popa
out
lods
sub
iret
sbb
push
mov
lock
adc
or
inc
inc
pushf
jg
data16
push
mov
popa
cmpl
dec
push
inc
incb
lret
or
mov
adc
sub
mov
adc
push
add
add
imulb
dec
outsb
pop
lret
push
inc
ss
xchg
pop
outsb
ljmp
ret
and
bts
adc
add
ret
push
data16
push
orb
nop
push
outsb
sbb
cs
int3
cmpsl
add
inc
ret
gs
mov
add
xchg
and
or
sbb
dec
push
imul
pop
add
pop
hlt
add
mov
xor
arpl
in
mov
out
adc
mov
sahf
cmp
lods
arpl
aas
inc
inc
push
xchg
or
dec
test
push
cwtl
push
cld
out
je
push
xchg
sahf
cltd
jmp
and
ds
cmp
xor
imul
test
and
sub
push
pop
pop
jno
push
popa
popf
cmp
mov
jno
sub
lock
dec
push
leave
loop
mov
scas
fistpl
mov
cmp
aaa
or
stos
cmpsb
pop
aas
ljmp
shlb
or
pop
pop
pusha
cmc
push
mov
imul
std
repz
push
fld
inc
inc
loop
and
leave
pop
push
movb
movl
push
push
idivl
add
adc
lret
jo
repz
shl
scas
data16
sub
hlt
aam
and
das
xor
out
clc
and
jmp
jb
aas
sub
cmpsl
adc
xchg
andl
aam
jg
enter
mov
fldenv
dec
inc
cmpl
shll
lods
sub
fisttpl
jnp
lock
jmp
test
cmp
loope
out
inc
sub
popa
jle
jo
adc
stos
pop
shll
cmpsb
inc
ret
sbb
sbb
push
jb
out
loope,pt
dec
inc
lahf
adc
sbb
xchg
sub
jecxz
fwait
jb
add
push
add
sub
push
add
xchg
sub
aaa
ret
lock
imul
and
xchg
sbb
outsl
stos
out
negb
rcll
mov
fadd
and
ret
icebp
pop
cmp
das
mov
sbb
jge
xor
ds
jnp
mov
out
call
fsubs
fistpl
stos
test
mov
push
push
mov
and
adc
sahf
nop
int3
push
leave
xor
push
fxch
lods
test
call
ja
enter
test
das
pop
in
and
and
js
rol
test
in
push
jge
push
mov
frstor
loope
xchg
int3
popa
add
add
or
movsb
fisttpl
or
xchg
inc
mov
dec
nop
pop
lods
sub
sub
gs
cmp
jle
jns
xchg
ja
jae
mov
sarl
outsl
jns
pop
cmp
mov
xlat
cmp
sahf
push
sub
add
aaa
fbld
cltd
xchg
shll
fwait
and
pop
inc
fcompl
xchg
out
rolb
xchg
inc
add
or
out
push
push
lock
jp
aam
xchg
pop
xorl
call
loope
arpl
cmpsl
sub
and
mov
test
pop
push
insb
sbb
fs
add
jg
test
ret
pop
mov
loope
pusha
pushf
sti
sbb
andl
sbb
imul
loope
xorl
xor
push
xlat
decb
cmpsl
sahf
jmp
xchg
xor
mov
sub
cmpl
rcll
ds
in
mov
test
dec
sub
insb
lcall
push
mov
insl
aas
mov
push
jno
inc
xor
gs
and
pop
or
inc
movsl
inc
adc
add
cld
add
imul
and
cmp
insl
pop
mov
mov
xchg
add
jbe
sub
xor
les
and
fdivl
shrb
in
popa
and
cmp
mov
sub
adc
lods
lea
xchg
jo
aad
nop
repnz
iret
fimull
arpl
inc
test
fsubrl
mov
clc
dec
xchg
insl
in
insl
inc
out
push
xchg
iret
scas
pusha
sarb
cmp
loop
push
sbb
stos
inc
cmp
ss
jae
sbb
inc
imul
rcrb
push
push
cwtl
inc
push
and
loop
adc
pusha
xchg
stos
sbb
cmp
outsb
scas
ss
leave
test
fcmovne
fiadds
ljmp
nop
dec
and
sarl
mov
rcll
mov
pop
mov
hlt
dec
inc
shrl
and
and
fnstenv
push
loopne
push
out
push
call
and
loopne
dec
mov
cmp
xor
push
xchg
roll
je
jp
filds
pop
xchg
push
fdivs
lcall
adc
mov
sub
popf
mov
jmp
and
ss
jecxz
cmp
mov
push
xchg
popa
in
cli
pop
add
hlt
sti
jecxz
mov
xor
addb
cmp
inc
and
hlt
test
cmp
mov
mov
ds
jl
test
loopne
out
imull
dec
xchg
pop
lods
add
xchg
and
xor
loop
cli
and
xchg
jae
stos
aas
sbb
mov
or
stos
scas
mov
push
mov
aad
fwait
loope
and
or
addr16
lds
ljmp
sub
lahf
and
mov
test
out
mov
mov
pop
lods
jns
push
rolb
mov
data16
and
ret
mov
jo
in
loopne
inc
mov
out
push
fldcw
jns
pinsrw
cld
jge
pop
bound
mov
dec
mov
sub
mov
inc
out
mov
xchg
outsb
repz
mov
pop
je
rorl
icebp
dec
insb
mov
push
dec
xchg
pushf
stos
xchg
bswap
mov
stc
call
dec
int
jl
rcrl
push
lea
mov
cmpsb
shl
add
push
aam
mov
aaa
and
popl
cwtl
and
pop
xor
call
loop
cwtl
stos
mov
xchg
pushf
or
les
stos
or
jl
sbb
adc
sub
and
lods
mov
loopne
add
test
push
lods
sbb
mov
mov
btr
fldt
mov
bound
addr16
push
pop
xchg
inc
fs
pop
jge
psubb
mov
faddl
add
cwtl
push
and
push
dec
into
xchg
mov
int
pop
test
xor
pop
repnz
mov
xor
jmp
iret
jg
mov
sbb
xchg
repnz
repz
mov
gs
mov
outsb
dec
xorb
sbb
pop
sub
jge
popa
aam
jp
or
dec
jns
ss
push
pop
dec
je
dec
icebp
popf
push
jo
xchg
mov
repnz
push
std
and
loope
push
cmp
push
inc
dec
or
mov
jns
fwait
push
ret
pop
xorb
push
imul
inc
or
dec
popf
in
in
mov
mov
hlt
ds
cli
mov
insb
xchg
testl
cwtl
ret
and
cltd
push
fistpl
pop
xchg
sbb
fcoms
aam
mov
mov
sub
inc
push
dec
push
cltd
mov
test
push
addr16
inc
jns
sarl
std
lock
mov
add
in
out
fcomip
mov
fnstsw
push
push
adc
pop
lds
popa
xor
xor
cmp
cmp
jno
iret
mov
inc
or
push
xchg
insl
mul
lock
xchg
icebp
sbb
jle
dec
cmp
popf
fnsave
xchg
inc
sbb
mov
in
mov
int3
dec
inc
or
dec
enter
dec
push
mov
sbb
jnp
fbstp
jno
push
mov
test
mov
pop
mov
jno
icebp
push
repnz
scas
insb
inc
xor
ficompl
fsubp
std
push
insb
mov
pushf
movsl
mov
cmp
iret
or
dec
ss
pop
sub
mov
sub
jle
rep
ret
fildll
inc
stc
mov
sysret
jp
lods
lods
loopne
mov
inc
sbb
mov
cmp
xorl
jle
movsl
mov
mov
ja
fnsave
test
dec
out
sbb
lods
jo
xchg
sbb
imul
outsb
je
das
inc
cli
int3
imul
leave
cltd
lret
jns
imul
inc
out
div
xor
cmp
aam
int
movsl
push
hlt
leave
push
test
adc
stos
fxch
cmp
int3
mov
push
adc
imul
shlb
jb
add
nop
pop
mov
xchg
xlat
addr16
dec
test
loopne
stos
or
pop
ljmp
jb
scas
dec
sub
popf
jns
dec
xchg
dec
sahf
call
test
out
sub
data16
or
sarb
out
inc
lret
fs
mov
mov
mov
rcrl
pop
cli
mov
imul
cmc
int3
pop
push
sahf
mov
pop
and
cmpsl
xor
and
loop
popf
mulb
ror
pand
outsl
xchg
imul
repz
dec
imul
xchg
ljmp
test
pop
fdivrs
pop
inc
and
sub
aas
mov
xor
lret
mov
xor
pusha
or
adc
stc
and
cmp
xchg
fldt
aad
repnz
ljmp
icebp
adc
stos
out
push
paddsw
xchg
cwtl
cmc
out
or
inc
dec
or
sub
mov
test
or
je
ja
mov
and
adc
call
mov
data16
sbb
insb
jae
add
dec
xchg
xchg
pusha
dec
sub
leave
cmpl
cmpsb
ljmp
pop
adc
stos
mov
ja
pop
jne
xor
loope
jns
stc
lods
das
add
or
gs
data16
les
fsts
inc
fidivrs
push
inc
out
add
adc
daa
lock
addr16
aaa
inc
imulb
mov
out
loopne
outsb
cmp
jmp
roll
loopne
inc
pusha
mov
pop
pop
dec
and
cli
pop
sub
push
inc
je
pop
repz
xor
fs
cmp
repnz
popa
push
sbb
and
jge
jge
movsl
cmp
test
pop
sub
mov
adc
xor
outsb
and
mov
pop
fbld
dec
xor
adc
scas
push
out
mov
ret
xor
add
inc
movsb
jb
stos
xchg
inc
ficomps
dec
mov
aaa
mov
gs
call
int3
rcrb
sbb
lods
es
cltd
cwtl
push
and
xor
mov
jmp
data16
mov
xchg
xchg
idivl
xchg
std
pop
lods
pop
push
sbb
inc
or
outsb
sub
nop
mov
outsl
stos
dec
fbstp
pop
cmp
cltd
cli
push
add
aam
dec
outsb
or
sub
xor
dec
cmp
mov
xchg
cmp
jg
loopne
out
repnz
sbb
bound
insl
sub
loopne
sbb
mov
inc
add
pop
xchg
dec
adc
adc
sbb
sahf
dec
fdivrs
cmpsb
popf
dec
movsl
mov
filds
push
xor
mov
jns
scas
xchg
sbb
xchg
mov
lods
cli
enter
ja
sub
repnz
jmp
jae
orl
loopne
xor
aas
push
push
sahf
std
cmp
daa
and
mov
add
loopne
subl
js
mov
pop
sub
dec
push
mov
push
sar
pusha
pop
call
cmp
push
sar
mov
rolb
and
lods
cmp
adc
cltd
aad
inc
cmpsb
lret
popa
sbb
movsl
jae
fwait
scas
in
pop
ficoms
adcl
push
xor
es
out
aad
mov
mov
and
fwait
pcmpgtb
pop
out
movsl
xchg
push
repz
sub
ljmp
mov
add
pop
das
pop
outsb
mov
jge
out
les
negb
sub
lea
je
inc
leave
and
cmp
inc
out
loop
xchg
or
cli
push
xor
es
scas
mov
sub
rorl
jns
add
lahf
or
add
and
cmc
cs
cltd
push
mov
mov
aas
cs
pop
ss
daa
test
pushf
scas
icebp
mov
xchg
loopne
rorb
dec
in
push
sub
push
ret
pop
mov
or
ret
dec
negb
mov
mov
inc
xchg
push
xchg
or
fdivl
out
mov
jecxz
adc
xchg
scas
mov
lods
fs
loop
scas
fsubrs
add
pop
imul
fucomp
outsb
jno
in
pusha
push
pushf
dec
sbb
ja
mov
cmp
xor
dec
lods
bound
sti
clc
push
cmp
call
and
shr
outsb
xchg
add
ds
jno
lds
adc
fstps
shl
fsubrs
xchg
push
push
js
pusha
xor
mov
icebp
pop
xor
sub
sub
sysexit
push
or
stos
xchg
or
push
mov
addr16
les
les
in
mov
lea
aas
cwtl
je
mov
and
add
clc
dec
xor
mov
dec
ret
cmp
addr16
pop
insl
xor
jg
iret
mov
out
fstl
int
addb
push
mov
add
ljmp
daa
jb
call
std
cmp
pushf
mov
xchg
mov
pushf
mov
js
arpl
loope
inc
fildll
or
sahf
jmp
and
pop
in
push
pop
sub
dec
adc
jne
negl
or
adc
cli
cwtl
sub
cmpsl
xchg
es
fxch
shll
lcall
roll
inc
and
inc
popf
rcrb
leave
in
test
adc
idivl
movsb
std
das
sub
gs
repnz
aaa
dec
sahf
stc
cmpsb
cli
mov
in
sub
xchg
popa
lcall
popa
or
insl
inc
shrl
xor
sbb
jp
sbb
popa
sbb
test
inc
push
push
jbe
fisttps
xchg
popa
push
mov
push
dec
adc
sub
push
sahf
lret
test
popf
pushf
in
ror
xchg
imul
adc
push
mov
push
cltd
hlt
mov
xor
cmp
mov
mov
sbb
pop
and
jge
jp
cmpsb
sbb
stos
xor
mov
out
cmp
rorl
in
rcl
mov
xchg
xor
mov
jbe
in
lcall
scas
lods
hlt
mov
mov
jne
push
xchg
les
mov
xor
dec
xchg
les
out
lahf
ljmp
sbb
mov
and
xchg
out
roll
adc
shrl
mov
fs
int3
add
sahf
pop
push
mov
or
jns
daa
mov
xor
inc
test
jns
pop
xor
dec
fstps
cmp
shll
jbe
loope
lock
dec
push
popa
dec
adc
jg
xchg
aas
xor
jns
inc
std
pushf
push
or
add
jle
push
mov
scas
scas
or
sahf
lcall
mov
pop
test
insl
loop
cmp
cmpsb
cmp
out
push
xchg
popf
mov
mov
xor
inc
sub
movsl
outsb
leave
jne
mov
push
pop
movsl
add
inc
pop
shrl
repz
push
pop
out
out
shr
jae
cmpsb
and
stos
xor
mov
xlat
lcall
call
mov
in
adc
int3
cmpsl
ficoms
xor
adc
jg
inc
outsl
js
xor
add
mov
testb
and
loope
push
mov
jg
hlt
mov
es
xor
rol
outsb
lods
scas
gs
sub
pop
dec
mov
je
fsubrp
adcl
std
cmc
adcb
mov
in
ret
jbe
stos
mov
push
sbb
lds
fwait
repz
jb
adc
adc
pop
jmp
insl
sbb
mov
add
lahf
or
xlat
enter
xor
addr16
add
in
ss
mov
imul
sub
adc
mov
pop
pushf
das
mov
cmp
inc
rcrb
sub
or
lds
jecxz
dec
pop
jl
adc
and
ret
and
and
and
add
les
inc
test
adc
jb
ss
loopne
xor
sbb
jae
test
cwtl
mov
fwait
test
mov
in
mov
jmp
push
fwait
jo
lds
aam
clc
icebp
cwtl
dec
xor
cmp
xchg
cmc
mov
jbe
mov
jnp
dec
sub
mov
in
into
push
aam
inc
push
lcall
cld
sbb
or
mov
jbe
jo
dec
adc
jmp
rcrl
or
outsl
dec
and
stos
sub
inc
or
cs
lea
int3
pop
jg
iret
xchg
push
daa
pop
jae
mov
es
sarl
cmp
mov
mov
mov
outsl
add
or
out
pushf
push
insl
sbb
dec
push
push
xor
jge
push
cmpsl
aam
sahf
dec
push
jge
pop
xchg
dec
int
push
jno
insl
mov
sbb
sbb
mov
mov
xchg
sub
inc
test
cs
test
outsl
sti
xchg
test
push
xor
aad
mov
popa
add
cli
dec
in
xor
sub
sub
in
mov
pop
mov
test
mov
and
push
scas
sub
sti
leave
out
and
ror
lock
push
adc
mov
inc
and
jbe
aad
lahf
or
push
scas
jmp
mov
rol
mov
imul
inc
cld
cmpsb
mov
inc
fcmovnbe
loope
xchg
test
lods
shl
movsl
xor
push
inc
pop
mov
xchg
iret
sbb
ja
arpl
add
scas
jg
and
mov
xchg
xchg
inc
cmp
aad
xor
mov
imul
nop
mov
xchg
fs
out
push
mov
mov
mov
mov
sub
xchg
xchg
popa
add
addr16
shrb
xor
cmovne
out
mov
out
daa
push
cmc
push
jo
and
les
cli
sub
jns
out
mov
lahf
rorl
dec
sub
in
test
and
popa
push
popf
ja
pop
xor
sub
out
xor
push
jp
aas
stos
cwtl
or
mov
jns
ror
push
cs
lods
mov
fidivs
mov
das
hlt
jb
sbb
enter
movsb
and
sbb
aas
sub
repz
lods
dec
pop
repnz
gs
pop
fistl
loope
pop
pop
in
xlat
jge
sarl
mov
dec
int
dec
jl
push
and
pop
dec
mov
jg
adc
xor
pop
push
enter
cmpb
lret
pop
mov
xlat
jbe
jmp
shrb
call
lcall
setg
rcll
fwait
mov
fldcw
dec
lret
xchg
mov
daa
sbb
xchg
call
jle
sti
cmp
add
ror
jg
inc
rorl
cli
and
ja
mov
stos
jg
pop
jl
inc
inc
ret
or
pop
call
push
inc
dec
das
push
jns
mov
sbb
rcrb
call
inc
enter
sub
sub
fwait
sbb
and
ficomps
sub
pop
stc
adc
mov
call
cmpsb
cmp
mov
orl
movsb
pop
inc
jp
sub
sub
loop
jle
aad
fsubr
je
loopne
es
xlat
cmp
mov
jb
ss
xchg
and
xchg
mov
inc
es
xor
push
repnz
add
nop
sub
mov
xchg
sub
pop
sbb
mov
data16
daa
mov
adc
sub
mov
ret
dec
mov
data16
jns
jp
test
jb
mov
cwtl
scas
and
adc
push
stos
and
nop
mov
ret
jp
mov
mov
loopne
jmp
mov
fwait
insb
cltd
jb
aaa
int3
lods
test
sarl
hlt
cmovns
subl
nop
jnp
sbb
and
fistpl
or
mov
stc
into
xchg
mov
jge
test
jle
mov
fimuls
fstpt
mov
pop
stos
out
repz
sub
in
rorb
loop
mov
scas
mov
fs
sbb
stos
adc
stos
call
loopne
call
mov
ret
out
or
jecxz
adc
les
xchg
pop
push
inc
ss
mov
sub
fs
cmpsl
cmp
test
and
fldl
orb
push
rolb
mov
popf
or
flds
xchg
ja
shll
push
lahf
into
push
out
iret
cmpsb
and
pop
mov
lahf
mov
cmp
mov
or
pop
pop
and
add
inc
sub
xor
push
stos
inc
cli
mov
inc
jmp
je
call
mov
cltd
mov
or
adc
cmpsb
leave
lret
icebp
std
jle
sbb
xchg
neg
bound
ja
dec
movb
adc
shl
in
pop
aam
mov
lret
mov
pop
aaa
xchg
xchg
inc
ljmp
ljmp
std
je
add
sub
dec
out
pop
stos
popf
clc
in
pop
dec
mov
pop
sub
jno
arpl
ja
jmp
add
adc
xchg
adc
mov
mov
hlt
bound
enter
movsb
cmp
inc
jg
subb
in
add
push
das
out
jb
movsl
lret
xchg
xor
jge
jge
jle
sub
cmp
dec
lods
fsubrs
movsl
push
xchg
push
pop
mulb
mov
push
or
or
mov
jmp
or
mov
lahf
popa
outsl
cld
into
cmpsb
xchg
aas
xchg
fdivrs
push
insb
mov
stos
dec
xor
sti
aam
dec
ret
mov
movsl
addr16
fwait
sbb
pop
cmp
fs
icebp
into
inc
add
cmpsb
push
cmpsl
cmc
and
mov
dec
scas
inc
inc
adc
pusha
inc
sarl
sub
push
jp
jnp
outsl
data16
loop
js
test
sbbb
mov
call
cmp
es
inc
jmp
out
out
mov
sub
test
xchg
jno
sbb
idivl
inc
pop
fwait
and
stc
mov
mov
fidivl
lret
rol
pop
sahf
adc
repz
mov
inc
mov
data16
xor
dec
xlat
pushl
sbb
dec
xor
movsb
add
lahf
fs
push
jg
lcall
add
ffree
jmp
adc
adc
insb
iret
int3
xor
cmpsb
test
or
mov
inc
rcl
inc
sbb
imul
out
or
jnp
push
xchg
cmp
mov
loop
lods
shlb
movsl
pop
pushf
cmc
mov
mov
mov
ret
lahf
cmpsl
jmp
insl
push
inc
fadds
sbb
dec
lods
lret
or
repz
mov
ja,pn
adc
arpl
out
inc
cld
sahf
loopne
and
imul
dec
or
mov
adc
dec
nop
mov
and
in
mov
xor
xchg
lock
daa
imul
dec
loop
or
and
xchg
push
clc
pop
addr16
fistpl
ret
cmp
aas
mov
cmp
fs
mov
inc
sub
push
inc
cmp
or
pushf
sti
cwtl
rolb
push
lcall
out
cmp
push
sti
ljmp
shll
jno
in
stos
jge
fcoms
and
mulb
push
int
add
push
xor
dec
mov
mov
pushf
xchg
out
sbb
movsl
sbb
fsts
inc
mov
mov
cmpsb
in
scas
mov
enter
data16
rcll
mov
aaa
dec
mov
cmp
fldt
mov
pop
loop
and
lret
sti
out
jnp
mov
xchg
mov
cld
jb
xchg
rcrb
mov
test
hlt
mov
jl
add
in
loope
cmp
scas
addl
inc
shl
push
sub
xchg
cmpsb
test
push
movsl
mov
rolb
cli
push
scas
je
xchg
rolb
mov
add
ret
push
sub
icebp
adc
mov
jmp
dec
add
loopne
loope
lock
mov
loop
add
cmp
adc
test
test
xlat
popf
xor
xchg
cltd
stos
cmp
inc
push
xchg
hlt
push
sub
and
fs
fidivrs
test
jmp
or
push
jl
pop
and
test
sbb
jge
cmpsb
sbb
jae
mov
lret
popf
lret
push
aas
push
ja
fbld
jmp
xor
xor
add
sti
and
mov
adc
inc
out
xchg
repz
and
cmp
pop
call
inc
push
or
or
adc
push
sub
cmp
xchg
lahf
sbb
xor
mov
mov
mov
pop
push
mov
pop
popa
inc
addr16
mov
sub
and
enter
push
lret
lods
push
dec
in
pusha
push
das
xchg
mov
jno
xchg
imul
mov
loope
sbb
imul
jp
sub
popa
or
xlat
sar
mov
inc
paddb
and
jno
xchg
xchg
iret
fldz
rorb
cmpl
out
cmp
int3
add
cwtl
test
ja
xchg
adc
movsb
test
inc
mov
cld
pusha
jns
mov
fistl
add
ja
arpl
pop
jo
imul
sbb
pop
lock
xchg
dec
and
xor
and
leave
ljmp
popa
ret
addr16
sub
insl
loope
rcrl
in
xor
mov
cwtl
repz
jmp
shll
mov
icebp
sub
sti
imull
adc
je
loop
fxch
sub
mov
inc
push
and
mov
jp
dec
gs
scas
and
mov
mov
pop
pop
mov
inc
pop
insb
out
je
push
emms
call
xchg
mov
out
pop
out
mov
arpl
arpl
dec
add
sahf
jae
cli
shl
or
cltd
imul
xor
std
mov
sbb
sbb
aas
ljmp
mov
xchg
mov
stc
cmc
rol
mov
sub
lret
mov
jge
sub
and
clc
adc
jle
pop
adc
inc
jb
or
testb
and
popf
stos
loop
mov
into
sbb
stos
add
ds
inc
push
jecxz
push
movl
mov
sub
jl
adc
rcrb
or
dec
and
andl
pop
fdivl
and
pop
jp
dec
enter
add
into
arpl
test
call
mov
cmp
int
jl
push
loopne
mov
xlat
cmp
ja
push
into
dec
pushf
addb
mov
scas
scas
pusha
js
adc
cmp
in
mov
sbb
add
cmc
mov
pop
or
inc
repnz
rolb
push
inc
int3
ror
popa
scas
mov
sub
fwait
and
ret
out
movsl
clc
outsb
mov
mov
fidivrl
jg
push
dec
push
mov
mov
inc
lret
or
add
popf
sahf
cmp
icebp
jne
xchg
addl
add
test
mov
inc
add
lea
mov
mov
push
movsl
mov
mov
enter
inc
jb
loopne
sub
inc
xor
mov
cmp
xchg
inc
fcmovne
cmp
cmp
sbb
test
aam
ss
cmp
loopne
notb
jnp
xor
add
jl
test
ss
std
pop
cs
scas
cmpsl
mov
cmp
fcomip
adc
andl
jp
sbb
mov
mov
inc
pushf
pushf
lea
or
ret
imul
pop
insl
addr16
andl
sub
push
daa
push
push
inc
and
test
dec
daa
mov
daa
dec
add
into
cmp
adc
jne
jo
adc
cmp
clc
outsb
xorb
dec
jge
shlb
rorb
ds
testb
inc
mov
jae
xchg
mov
ss
push
jge
cmp
xchg
jp
or
adc
lret
mov
mov
test
test
test
xchg
insb
xlat
bound
push
or
push
xchg
dec
stos
adc
xlat
mov
or
mov
add
addl
and
push
mov
pop
adc
pushf
divl
inc
mov
mov
sbb
add
cmp
add
xor
mov
jl
jmp
dec
xchg
and
mov
sbb
mov
dec
mov
jne
stc
jg
lods
adc
ficoms
sbb
lea
mov
movsb
sub
push
out
rcrb
or
xchg
in
ds
pusha
inc
stos
jo
and
rclb
add
sub
push
mov
xchg
inc
xor
or
cmp
and
jecxz
iret
loope
jno
ss
jne
or
ds
out
xrelease
rcrl
push
in
dec
jae
mov
inc
sbb
push
xchg
mov
in
je
aad
and
xor
es
push
push
shlb
test
je
ss
es
out
xor
ja
rol
fadd
and
enter
pop
fldt
ret
mov
dec
or
orl
scas
push
xchg
mov
cmp
push
dec
push
arpl
cmc
adc
dec
inc
loope
xor
xor
mov
popf
rcr
outsb
mov
pop
lods
aaa
mov
push
outsb
push
insl
jmp
roll
cmpsb
pop
loopne
test
shll
daa
jae
in
imul
pop
push
push
sub
stos
xor
subb
cmp
int
lahf
ret
cmpsl
leave
xchg
jno
jb
sarb
pop
xor
lods
add
hlt
jl
jp
sub
add
sbb
or
jne
jmp
repnz
jno
in
xchg
push
cmp
jbe
inc
inc
ret
popa
imul
adc
pop
push
js
lahf
cmp
cmp
cmp
jbe
sub
jmp
imul
lret
mov
dec
jg
in
sub
and
sub
sbb
xor
stc
rol
notb
inc
lock
out
mov
shlb
dec
cmc
and
in
in
ljmp
xchg
pusha
loopne
sahf
leave
pushf
lods
add
xchg
in
mov
mov
scas
std
adcl
icebp
call
bound
cld
pop
lods
sub
push
and
bound
mov
adc
xor
jnp
or
push
cmp
imul
addr16
and
mov
cmpsb
mov
mov
mov
jbe
sar
insb
popa
cmp
add
mov
mov
mov
or
stos
and
cmpsl
ljmp
cli
jne
xchg
jg
mov
into
fnstenv
das
mov
imul
into
pop
les
or
out
push
and
cltd
jmp
add
jl
mov
push
out
js
mov
aad
and
sub
xchg
sub
sbb
lcall
add
jle
lret
stos
and
xor
prefetchwt1
or
cs
mov
sbb
dec
push
push
scas
mov
lret
lods
out
addb
in
mov
sbb
xchg
mov
mov
clc
rolb
insl
jmp
gs
cmp
pop
pusha
call
add
mov
in
roll
mov
and
jb
fisubrl
mov
or
pop
das
rcrb
fimull
and
adc
cli
in
add
ds
es
mov
mov
jne
xchg
test
fistpll
leave
xor
arpl
push
and
inc
mov
pop
mov
imul
ret
mov
mov
push
shrl
in
call
cmp
cmp
mov
ljmp
push
mov
mov
mov
pusha
mov
stos
jg
push
iret
sbb
iret
xchg
adc
sbb
push
sbb
sub
outsl
fsubr
aas
pop
cmp
test
shl
pop
scas
out
pop
mov
add
idiv
dec
add
mov
or
xor
cmp
pop
mov
out
movsl
jl
jbe
outsb
fwait
add
jns
repnz
fcmovnbe
rorl
cli
movsl
and
ss
addr16
or
jg
jg
xchg
subb
sbb
jnp
mov
dec
aam
xor
fdivl
mov
pop
cmpsl
adc
dec
lcall
out
and
mov
mov
mov
dec
or
add
xor
add
jg
insl
inc
jo
jne
push
movsl
inc
xchg
mov
cmp
jo
sti
testb
enter
lret
inc
mov
aaa
push
pop
arpl
and
xor
loope
adc
push
mov
adc
jb
mov
dec
test
and
ja
jge
rorb
mov
sub
mov
std
lea
fwait
xchg
movsb
lds
cmp
cmp
pop
mov
fcompl
lea
inc
push
jbe
lods
int3
cmp
arpl
popa
cmp
adc
or
adc
mov
inc
notb
enter
mov
adc
lret
pop
leave
jge
mov
jg
testl
mov
mov
sarl
sbb
and
add
imul
jbe
int
sti
out
push
sub
aad
sub
sarl
add
xlat
frstor
pop
int
in
ljmp
iret
jmp
iret
push
out
sbb
lcall
push
sbb
jne
inc
xlat
push
testb
shrl
jae
mov
adc
adc
inc
push
daa
cmp
jge
mov
mov
jns
add
clc
mov
pushf
mov
xor
cwtl
or
jnp
adc
jb
jmp
ljmp
insb
pop
fistpll
xchg
dec
push
cwtl
js
and
xchg
mov
xor
jmp
adc
fwait
jecxz
pop
mov
pop
lret
sub
lcall
test
gs
inc
ret
add
ret
inc
dec
push
add
adc
dec
mov
xchg
dec
mov
dec
mov
adc
rolb
ftst
jle
sbb
or
loope
in
jmp
dec
fs
rclb
in
sub
xchg
push
dec
sub
jecxz
sbbl
push
push
movsb
fucom
jl
scas
dec
lahf
sub
shrl
or
mov
add
jns
fidivs
mov
and
arpl
dec
mov
stc
sbb
add
mov
xchg
ss
sbb
xchg
push
lock
or
jo
pop
xor
sti
or
ds
sub
mov
fcoms
outsb
xor
stc
lds
sbb
sti
mov
fistps
frstor
push
or
ds
jecxz
add
mov
dec
je
jb
jnp
xor
pop
xchg
stos
fistpl
lods
inc
ret
jne
add
sub
jle
gs
xor
pushf
ljmp
repz
mov
add
mov
or
ret
dec
xlat
stc
push
out
into
loop
arpl
and
cmpsb
mov
sarb
aad
fbstp
push
jg
dec
cmp
mov
stos
daa
xor
sub
adc
int
test
pusha
jns
aad
nop
pop
add
cmpsl
icebp
arpl
roll
push
aas
lret
cli
mov
xor
add
dec
xor
fnstsw
jge
mov
shl
in
sub
repnz
mov
cltd
inc
es
pop
jae
loopne
cmp
xor
out
mov
scas
mov
add
cld
dec
xchg
cmp
sbb
and
sbb
xlat
aas
inc
pop
out
mov
in
test
icebp
sbb
jae
stc
and
lock
jbe
lahf
jbe
pop
out
stos
lods
pop
sub
and
xor
mov
icebp
hlt
stc
adc
sti
push
jmp
adc
pop
jae
lods
mov
faddl
neg
jnp
mov
out
int
inc
js
sahf
dec
ljmp
mov
jp
pop
rcrl
xchg
add
jne
jno
and
or
jno
in
sub
mov
pusha
cmp
loopne
lcall
mov
fs
add
fnsave
mov
cmpsb
lods
or
inc
imul
rcrb
stos
clc
movsl
push
call
fcomps
jb
push
cmc
push
cmpsl
cmp
xchg
cli
out
loopne
push
sub
and
sahf
insb
outsb
jp
in
add
cld
fiaddl
out
dec
jmp
push
sarl
ss
data16
sbb
push
dec
dec
insb
aad
jl
cmc
mov
xchg
inc
and
add
jae
adc
pop
in
sbb
das
xchg
mov
lahf
sbb
rolb
and
test
and
popa
sub
adc
cmp
pop
lods
rorb
fldt
lcall
andb
dec
aaa
les
loope
push
lds
mov
mov
jnp
movsl
add
adc
les
mov
push
mov
call
decb
outsb
sbb
add
fimull
cmpsl
xor
pusha
jle
adc
sahf
stc
pushf
test
mov
iret
mov
sbb
push
notb
cmp
or
lahf
jle
inc
sbbl
add
sub
xchg
xor
jecxz
cmp
test
out
jmp
cld
sbb
rolb
in
lcall
pop
jl
ret
cmpsb
idiv
and
dec
ja,pn
push
mov
mov
fstpt
lea
sbb
jecxz
xchg
fstpl
subl
mov
lock
sub
jl
sahf
out
xchg
and
sbb
in
adcl
ds
cmp
cmp
jg
push
enter
sub
lahf
mov
inc
mov
int3
or
lret
les
mov
xor
jge
cltd
pop
sbb
jnp
cmp
jns
test
xchg
shr
and
js
aam
cmp
pop
sbb
pop
adc
push
sub
or
jne
and
jno
or
sbb
lcall
cmpsb
mov
push
push
nop
cmc
shl
fildll
loop
mov
mov
jo
decb
int
in
or
stc
or
into
cmp
mov
mov
and
fisubl
cli
xor
sbb
int
mov
stos
jnp
mov
mov
jp
lea
popf
cmp
or
xor
data16
sti
sbb
vsubps
xchg
call
pop
cmp
test
lret
je
xchg
add
push
sub
test
sub
add
fstpl
cmp
leave
and
ret
xchg
sub
push
into
stc
inc
ret
or
icebp
pop
cmp
sbb
and
scas
adc
inc
push
jae
out
aam
movsb
iret
sbb
data16
push
or
jle
andl
insl
std
sub
sbb
lcall
stos
sub
aad
rcrl
push
dec
mov
mov
mov
xor
add
or
dec
mov
or
imul
xor
clc
push
subb
popa
or
outsb
stc
cmc
pop
adc
fiaddl
sub
lret
rolb
les
pusha
cmp
or
sub
pop
fldcw
cmc
pop
icebp
mov
mov
add
or
add
adc
insb
sub
add
push
mov
jo
inc
mov
sbb
icebp
mov
imulb
das
repz
movsl
lds
jb
xor
xchg
add
mov
jp
mov
pop
rorb
das
ficoml
aaa
test
and
pop
mov
call
jle
cltd
inc
test
push
cmp
push
add
xor
fnsave
mov
push
jle
fcomps
sub
xchg
ficoms
jp
jecxz
push
xchg
sub
xchg
aas
mov
cmpsl
mov
mov
pop
test
call
out
and
mov
cmp
aaa
mov
out
bound
scas
lret
rclb
push
xor
rorb
arpl
outsb
add
xchg
scas
dec
int
xchg
mov
stos
pop
mov
mov
mov
nop
dec
sub
dec
pop
ja
push
pop
xchg
scas
or
mov
ja
testl
sub
mov
sub
and
sub
imul
popa
shr
cwtl
pop
rcrl
xchg
popa
testb
cmp
fsubs
jmp
push
or
and
push
and
jno
fisttpll
xor
clc
sahf
stos
inc
mov
stos
data16
mov
mov
je
cli
jns
in
fsubrs
mov
push
or
cmp
mov
je
out
adc
jne
pop
scas
dec
shr
out
das
in
daa
int3
hlt
aad
mov
int3
xchg
out
gs
jmp
dec
jle
out
sbb
sub
sub
outsl
dec
pop
inc
stc
popa
push
push
movsl
sbb
loopne
in
scas
nop
cmc
xor
shll
cmp
xor
jbe
shr
int3
sbb
and
push
jnp
loope
imul
cmc
addr16
jmp
arpl
sub
dec
fdivr
mov
faddl
dec
pop
dec
stos
divb
rclb
movsb
pusha
and
add
fldl
push
lds
les
mov
or
andb
rcll
or
addr16
rcll
fisubrl
mov
xor
and
push
enter
leave
fwait
jb
dec
loopne
rcll
fdivs
icebp
dec
les
xchg
pop
pop
fimull
dec
ljmp
imulb
push
mov
push
lock
cmp
in
xchg
in
inc
daa
jmp
add
xor
adc
loopne
into
push
bound
int
push
mov
into
out
in
lea
sbb
shll
jno
adc
andb
movsl
sub
xchg
cmp
and
fidivrl
push
xchg
pop
add
repnz
push
xchg
imul
mov
out
dec
or
pop
roll
xchg
dec
sar
mov
inc
shll
inc
jge
sub
int
imul
inc
mov
jb
mov
data16
or
pop
pop
sbb
push
popf
push
mov
or
dec
inc
pop
push
push
arpl
add
push
jae
or
into
addl
cmp
enter
sub
lds
mov
add
out
push
scas
sbb
dec
test
cmpsb
jo
stos
push
addr16
mov
or
call
hlt
mov
lods
jnp
xor
mov
mov
outsb
cmp
push
stos
dec
mov
sbb
add
call
xlat
outsb
ret
adc
addr16
shll
pop
mov
push
cmc
test
cmp
mov
or
cmp
inc
data16
lods
aas
bswap
mov
pop
or
out
ljmp
cs
cltd
mov
cmp
daa
cli
imul
xor
inc
adc
dec
push
adc
and
dec
push
and
jb
fcoms
adcl
cli
dec
stos
fnstcw
xchg
rcrl
pop
out
push
dec
or
add
mov
dec
sbb
lea
sub
lods
sub
mov
xchg
sub
and
or
jmp
sub
outsb
popaw
adc
xor
sbb
inc
insb
cbtw
ret
rolb
lods
lea
pop
inc
push
into
sarb
iret
pop
andb
ja
push
xchg
roll
lahf
jbe
cmp
cli
and
sti
adc
mov
popf
xor
mov
jno
push
pop
test
and
mov
inc
jae
flds
mov
ljmp
jne
bound
cltd
push
int3
lds
sti
pop
cltd
out
dec
ret
sub
fnsave
shlb
and
or
sub
fidivrs
sub
sub
mov
add
cmp
hlt
mov
gs
xchg
ss
xchg
sub
lds
out
push
sbb
ror
jp
adc
or
repnz
adc
sbb
lods
cmp
fisttpll
xor
pop
xor
popf
xchg
push
sub
scas
lret
xor
push
sbb
or
mov
adc
sbb
std
call
call
aaa
mov
loope
cld
lret
fildll
mov
push
cmpsb
pop
xor
mov
sbb
xchg
scas
add
mov
pop
pop
jo
cs
push
mov
jg
out
fstp
pop
cmp
push
or
icebp
cmp
push
sbb
sbb
repz
cmc
mov
shlb
sbb
call
popf
cmp
inc
arpl
cmp
fs
and
dec
popa
adc
call
out
xchg
daa
enter
int
nop
inc
bound
xor
push
fincstp
jge
xchg
mov
int3
mov
mov
insb
cmp
js
mov
mov
jb
divb
test
ljmp
mov
movlps
push
push
sub
pop
std
aad
add
add
mov
hlt
add
hlt
inc
std
sbb
add
jecxz
adc
xchg
xor
mov
aam
mov
je
scas
fs
cmp
insb
hlt
inc
aaa
jno
into
cmp
xchg
pop
or
push
add
out
cltd
sub
lret
jns
mov
fcmovnb
push
lods
shr
cmp
in
dec
js
mov
movl
sarb
jle
or
sub
inc
in
jl
repz
xchg
pop
push
sahf
sub
xchg
add
dec
add
push
movsb
and
xlat
pop
insl
lahf
mov
imul
outsb
fnsave
jge
inc
push
pop
or
inc
sub
xchg
jae
dec
cmc
dec
dec
and
pop
mov
pop
rolb
int3
repnz
std
pusha
xor
fmuls
call
inc
jbe
lret
dec
dec
adc
call
mulb
xor
cltd
mov
push
xchg
jmp
xchg
inc
ja
sahf
push
push
xor
cwtl
mov
testb
stc
sarb
pusha
dec
lods
fsubl
sbb
call
ret
cs
add
inc
rcll
sbb
fsubp
jp
pop
sti
ret
ljmp
pop
xlat
jg
sub
and
decb
mov
adcb
pop
arpl
sbb
pop
and
sbb
dec
sub
jecxz
rorb
mov
nopl
stos
dec
clc
outsb
out
ds
ljmp
sbb
lret
loope
dec
cmp
out
xchg
inc
xor
imul
inc
inc
jg
dec
subl
mov
add
lea
jle
insb
xchg
push
pushf
jbe
pop
mov
inc
aas
into
imul
adc
jge
pop
push
pop
dec
pop
pop
sub
xor
xor
fnsave
pop
bound
pop
add
inc
in
sti
fsubr
and
pop
pusha
filds
repnz
mov
xor
pop
xor
adc
xor
lcall
outsb
mov
jb
add
pop
jge
inc
test
fldl
xchg
jnp
arpl
xor
fstl
inc
push
addb
jbe
adc
test
pop
lret
xchg
out
pop
out
mov
ja
mov
into
jbe
sbb
aas
xlat
xorb
cmpsl
arpl
in
std
movsb
repz
loopne
btc
sbb
test
rclb
cmpsb
jbe
fisubrs
int3
call
fcmove
sub
nop
mov
cmpl
je
push
mov
add
popa
xlat
pop
in
pop
mov
xchg
dec
rorb
adc
in
push
sbb
call
rcrb
cmp
notl
jp
mov
test
jo
je
test
call
ror
adc
dec
and
sbb
pop
loop
jo
ffree
jb
dec
jmp
test
push
jmp
stc
mov
inc
popa
je
mov
adc
aas
ss
mov
mov
dec
push
mov
push
add
fcompl
and
hlt
lcall
adcl
and
push
sbb
mov
popf
and
das
arpl
pop
add
mov
or
jmp
fnstcw
inc
sub
in
mov
ret
dec
cmpsl
out
pop
adc
mov
and
mov
int3
lods
mov
or
and
imul
cmp
aas
outsl
aam
lock
xlat
lock
and
jmp
je
sahf
sbb
ss
cltd
repz
clc
cmp
sbb
sarb
xor
shlb
push
xchg
xchg
jle
adc
call
popa
andb
dec
int
in
dec
repz
mov
jmp
lods
cmp
pop
inc
js
int3
mov
out
addr16
push
dec
pop
push
mov
add
rclb
cmp
js
cmp
outsl
mov
mov
sarb
cmp
mov
andl
or
popl
sti
mov
jge
insb
mov
adc
nop
flds
sbb
sub
nopl
sbb
mov
movsb
sub
or
dec
out
pop
clc
imul
jle
fisubl
inc
pop
inc
sbb
dec
in
or
adc
ret
js
lods
in
pop
addr16
loope
movb
adc
cmp
push
fsubrl
mov
gs
std
push
nop
fldenv
xchg
mov
lods
cmp
lods
fbstp
ljmp
cmp
shlb
out
sub
jg
loope
lods
jno
je
rcll
das
mov
mov
sbb
pusha
js
push
jle
cli
rcl
int
add
cmp
push
into
push
fwait
cltd
sub
call
stos
adc
inc
xor
icebp
je
sub
or
clc
sar
les
leave
rorb
or
loope
pop
ljmp
jnp
loopne
pop
mov
add
push
cmpsb
movb
mov
es
jp
test
cwtl
out
test
mov
cmpsb
inc
mov
aam
and
lret
jbe
test
in
push
adc
popf
ja
fst
inc
repz
rorb
jg
fucomi
movsl
cwtl
and
repz
sub
mov
or
mov
addl
sbb
shll
jae
sbb
out
xor
stc
sub
int
in
das
sbb
jo
xchg
sahf
jno
nop
inc
cmp
dec
ja
test
sbb
jo
rcr
sti
test
cmp
cmpsl
xchg
hlt
cli
xor
rcll
das
icebp
inc
imul
or
enter
loopne
and
lcall
and
jge
test
out
add
add
cmc
pop
xorb
xor
ljmp
sbb
inc
cmpsb
out
jbe
xor
neg
sub
fldcw
cwtl
sub
into
test
fildl
rcrb
andb
xchg
or
xor
jno
adc
bound
enter
test
aaa
dec
int3
xor
imul
daa
insl
pop
jle
inc
pushf
sti
push
aam
sbb
repnz
divb
sub
pusha
cmp
inc
cmp
push
xchg
jnp
lret
shlb
test
or
ud1
push
iret
xchg
inc
int3
push
mov
out
push
sub
aad
pop
sahf
push
jge
mov
int
movsb
inc
rorb
call
jg
dec
sbb
popf
jno
ljmp
sbb
mov
dec
cmp
xchg
outsb
mov
das
mov
stos
xchg
mov
rep
mov
and
jb
push
cli
dec
and
mov
cmpsb
xchg
shl
aas
cmp
daa
outsb
mov
adc
aaa
faddl
movsb
sub
scas
in
lods
movsl
inc
les
outsb
dec
shlb
or
fsub
dec
xchg
push
sub
mov
lcall
stc
cmp
inc
loopne
pop
aad
pop
rolb
mov
lods
mov
scas
pop
orb
adc
inc
or
xchg
mov
or
cmp
enter
push
mov
fiadds
jae
ret
cmp
aam
xchg
clc
mov
in
push
sub
inc
inc
pop
sarl
or
cwtl
push
imul
repz
mov
fwait
lods
outsl
rcrb
xchg
mov
sahf
arpl
and
jge
outsl
dec
out
enter
adc
rorb
xor
in
push
sbb
xchg
mov
jg
inc
pop
rolb
or
call
mov
cmp
cmp
push
pop
cmp
inc
popa
sbb
mov
ljmp
lahf
or
scas
loope
iret
lea
push
dec
push
xchg
les
enter
mov
sbb
inc
mov
cmp
es
movsb
mov
loopne
jno
add
outsb
push
addl
cltd
xchg
stos
adc
mov
xchg
loopne
adc
mov
and
jnp
mov
imul
clc
pop
scas
into
mov
jb
lcall
fmull
fs
stos
mov
cmp
stos
jmp
dec
rorb
xor
repnz
testb
adc
pop
dec
push
lret
mov
sub
sbb
mov
jmp
movsl
dec
mov
loopne
outsb
cmp
fildl
cld
xchg
shrb
jp
and
movsl
pop
cmp
cld
mov
xlat
out
lea
aad
decl
adc
out
mov
xorl
call
pop
stc
movsb
jno
ja
scas
test
sbb
outsb
sub
cmp
pushl
sbb
inc
out
lds
adc
cmp
rclb
xor
ja
loop
and
xor
cmp
pop
adcb
lret
fs
gs
mov
sbbb
scas
push
pop
jp
jmp
mov
push
sahf
and
mov
jmp
pusha
ja
or
hlt
in
sti
sub
fdivrl
dec
roll
fstpt
sbb
es
pop
cli
clc
pushf
mov
lcall
testl
inc
inc
cmp
adc
in
adc
push
outsb
popf
loop
push
jp
out
cmp
adc
ficoml
xor
inc
xor
mov
jecxz
adc
cld
repz
push
adc
lea
ljmp
les
cli
jb
cmpsb
arpl
js
stos
lcall
lods
push
imul
mov
inc
sub
imul
fimuls
jmp
movsb
subb
dec
ss
inc
sbb
sbb
int
jecxz
pop
fisubrl
jecxz
mov
test
cld
add
addb
data16
mov
gs
or
push
xchg
je
int3
cmp
mov
aas
mov
shll
int3
pop
jmp
sub
xor
adc
movsl
xchg
stos
mov
leave
mov
pop
dec
fadds
ja
out
loop
dec
std
mov
in
lods
add
dec
push
pop
mov
xchg
xlat
clc
imul
pop
mov
and
dec
add
popf
lcall
mov
pop
ljmp
cmp
xor
jbe
jg
call
jle
xchg
daa
jp
ljmp
xchg
rcrl
arpl
cmc
imul
xchg
pop
lret
test
xchg
jmp
or
sbb
inc
xlat
xor
mov
push
xor
mov
mov
push
lret
push
les
cld
push
adc
mov
add
push
lret
add
jecxz
int3
std
fdivrl
jl
loope
mov
mov
pop
rcrb
icebp
enter
andb
fs
jae
push
popf
jge
jo
std
inc
sbbb
lock
call
lahf
into
push
inc
mov
push
nop
pop
jl
loop
scas
lds
movsl
adc
cmp
mov
mov
fmul
and
jle
ret
test
xorb
mov
xor
in
or
leave
xchg
cmpb
xor
adc
mov
jbe
or
ja
aad
hlt
sub
mov
cmp
enter
fwait
pop
cmp
pusha
stos
dec
pop
jbe
out
pop
or
clc
int
adc
fwait
and
in
mov
in
enter
andb
pop
add
dec
enter
cmpl
cli
jmp
jbe
or
mov
pop
cmp
mov
push
mov
out
adc
loopne
cmpb
hlt
dec
insl
in
decl
jae
dec
push
push
es
add
adc
fisttps
aad
mov
es
dec
add
loopne
call
cmp
sbb
sub
fimuls
pusha
xchg
ret
jl
into
jo
mov
aas
in
andb
push
shl
mov
and
insb
sub
adc
data16
and
mov
push
lret
out
push
aaa
pop
mov
mov
mov
test
mov
dec
insl
and
pop
pop
testb
repnz
mov
hlt
mov
daa
iret
push
loopne
int
movsl
cld
mov
pop
xchg
mov
testl
xchg
inc
xlat
cmp
int
idivb
test
loopne
pop
jge
mov
adc
stos
add
iret
mov
mov
xchg
addr16
rcrb
call
shlb
mov
loop
jbe
push
mov
or
sub
pop
jl
jp
mov
dec
cmp
icebp
xchg
add
in
inc
xchg
es
mov
lahf
mov
stos
jo
mov
xor
mov
push
xchg
mov
mov
test
add
cld
es
pop
dec
je
sbb
dec
mov
jmp
push
aaa
add
paddusb
inc
test
sbb
imul
cmc
push
int3
or
or
insl
cmp
fsts
cmpsb
mov
xor
add
adc
bound
mov
sub
imul
adc
inc
sahf
sti
dec
mov
mov
dec
mul
mov
jg
mov
sub
pop
jg
inc
xor
pusha
dec
lret
cs
push
xlat
jle
clc
out
jp
test
push
fistl
add
xchg
jnp
push
cltd
or
add
out
jnp
pop
pop
fidivl
loope
adcb
mov
stos
outsb
dec
test
jb
jecxz
or
push
loopne
outsl
cmp
scas
mov
rorb
ds
lock
sti
jne
icebp
imul
xchg
xchg
mov
mov
add
pop
scas
lock
mov
push
cmp
out
pop
inc
ret
cmp
les
insl
and
popa
sub
jge
std
orl
movl
lock
push
test
int
out
mov
or
add
jecxz
stos
add
ds
mov
stc
add
and
mov
sbb
sti
cmp
iret
push
testb
jp
jae
in
fstpl
or
aad
push
in
clc
loopne
jmp
sbb
cwtl
rorl
mov
lock
inc
fisubs
mov
lock
arpl
xchg
lret
rcr
lds
rorl
fistl
push
push
std
xchg
mov
push
pop
cmp
fldpi
out
loop
mov
data16
sub
sahf
fs
lea
xchg
jns
lahf
cmpsb
mov
arpl
and
dec
lret
movsl
or
pop
subl
mov
shlb
cli
sbb
sar
fs
out
ret
jl
outsb
aas
imul
sbb
or
shll
iret
iret
cmp
xor
adc
frstor
inc
stos
mov
test
and
mov
fsub
jmp
hlt
adc
iret
dec
clc
js
add
sub
addr16
rcl
push
mov
mov
test
fistpl
pop
insl
fstpt
ret
jmp
xchg
and
sbb
or
imul
mov
popf
cmc
lods
pop
push
mov
lods
lahf
movsl
hlt
nop
movl
xor
mov
cmp
mov
mov
jmp
sub
outsb
fimull
in
jp
jo
pop
push
dec
and
adc
idivb
push
xor
loop
jne
jbe
pop
cli
jg
mov
rolb
popa
fsts
mov
pop
das
mov
mov
jno
add
add
aam
xchg
dec
jge
mov
call
push
sub
jmp
fwait
push
mov
bound
dec
shll
int
daa
pop
cli
add
mov
push
xlat
xor
imul
push
pop
cli
and
outsl
bound
adc
jb
xchg
lock
pop
push
pusha
mov
xchg
or
cmpsl
cmc
adc
mov
lods
jmp
add
out
mov
std
mov
jmp
pop
cmp
sbb
sbb
fnstsw
outsb
push
gs
push
adc
jnp
and
sti
adc
fstpt
int
in
jge
xchg
ss
mov
fldcw
popa
cwtl
add
xor
icebp
pop
insl
movsl
jae
or
js
daa
or
cltd
rolb
jl
int3
or
sub
inc
sub
add
or
push
test
jmp
mov
sahf
test
mov
into
divl
mov
cmp
push
jl
jg
gs
jae
pusha
ret
sub
mov
jo
call
xor
sub
out
hlt
loopne
pusha
nop
enter
pop
cs
hlt
adc
inc
add
sbb
mov
fisubrl
inc
lods
jle
adc
pop
sarb
or
and
xchg
jne
xlat
pop
loope
push
clc
std
jp
sbb
ljmp
jno
gs
pop
xchg
jge
dec
sbb
in
lods
mov
mov
loopne
lcall
cs
out
test
and
mov
imul
loopne
test
ret
adc
fdivrp
iret
insl
mov
push
js
xlat
lret
push
clc
mov
add
inc
jp
ja
fcomip
test
xor
fdivrl
xor
push
sub
scas
push
pop
dec
jns
stc
mov
in
adc
das
xchg
push
iret
fsubrs
scas
add
stos
lods
mov
pop
xchg
out
mov
mov
les
sbbb
ret
addr16
lret
sahf
les
jno
nop
mov
mov
scas
push
rcl
aas
inc
test
sbb
addl
xchg
jo
ja
stos
cmp
int
adc
loope
jno
ja
xchg
push
pop
mov
dec
add
push
mov
mov
and
jle
mov
mov
jg
pop
sub
jmp
clc
imul
adc
and
sub
dec
test
lahf
fcomps
mov
pop
fdivl
dec
shll
mov
xor
ss
rcll
cld
sub
mov
in
push
cmp
and
or
mov
imul
push
push
jne
jg
cmp
mov
xor
mov
or
clc
lcall
divl
loop
dec
incl
jae
add
ret
jb
cmp
sbb
pop
push
dec
pop
lods
jae
pop
test
fldenv
aam
scas
push
xor
bound
lret
push
dec
loopne
xor
out
push
dec
les
mov
arpl
es
popf
std
mov
hlt
rorb
shlb
cmp
mov
xor
jle
mov
push
test
mov
and
sbb
pop
pop
jae
popf
and
or
dec
mov
add
popa
repnz
loop
and
mov
loope
xor
setae
stos
in
xor
outsl
shl
xor
das
cmpsb
setns
icebp
cmp
add
sbb
into
mov
movsl
jno
es
push
cwtl
pop
mov
mov
inc
inc
fmull
push
push
cmpsl
mov
cli
jge
int3
mov
xlat
dec
mov
call
outsb
jecxz
mov
mov
stc
lea
into
sub
push
inc
movsb
xchg
xchg
imul
sub
mov
mov
cmpsl
mov
xchg
js
das
pop
cmpsl
push
xor
cmp
js
out
test
adc
xor
sbb
jae
mov
ljmp
sbb
mov
pushl
scas
push
or
lods
fsub
pushf
rorb
rcll
outsl
out
scas
add
cmc
data16
xchg
or
repz
pop
lods
or
pop
test
loope
sbb
dec
add
ljmp
in
push
shlb
jge
inc
cmp
pop
mov
push
inc
ds
cmp
jg
out
dec
int3
repz
xchg
mov
or
aas
movsb
cmpb
push
and
push
add
js
lea
pop
sbb
and
addr16
xadd
fisttps
test
std
push
test
xchg
addr16
mov
sbb
aam
int3
push
ja
lret
mov
cld
mov
lods
sbb
or
nop
mov
xchg
loope
and
inc
loop
in
mov
aad
push
imul
inc
ljmp
adc
lea
push
sbb
fistps
orl
dec
pop
dec
adc
nop
cltd
inc
jl
or
test
lods
dec
cs
das
cmc
in
ficomps
adc
jne
mov
xchg
or
fs
sub
add
sub
lods
subb
pushf
xchg
mov
ror
lea
mov
xor
pusha
and
loopne
loope
fildll
jp
neg
xor
out
enter
popf
jmp
sarb
jnp
loop
rcrl
pop
daa
sub
cs
in
mov
inc
test
and
inc
cmc
repnz
add
loopne
aas
push
xor
xor
test
out
push
sbb
pop
test
dec
pop
scas
aaa
pop
fisttpll
fisttps
xchg
mov
outsb
sbb
mov
dec
jg
ds
fwait
loope
add
pusha
int
push
movsb
adc
fimull
into
popf
push
xor
aad
in
daa
push
jns
xchg
icebp
addr16
xchg
fistps
or
xor
pop
nop
fs
dec
icebp
inc
add
popf
sub
mov
sbb
arpl
into
and
cmp
scas
ret
lcall
scas
dec
loop
mov
push
pop
push
or
pop
outsl
imul
imul
cmp
jns
inc
mov
fldenv
daa
pop
ja
xchg
negb
loop
xchg
xchg
adc
cld
push
std
cmp
call
or
std
outsl
icebp
cmp
xor
mov
out
aas
sbb
cmp
xlat
pop
jbe
imul
mov
into
jmp
xchg
cmpsb
in
lds
sub
sub
dec
das
inc
add
dec
pusha
xlat
movsb
or
jg
pop
jbe
and
mov
add
pushf
xchg
mov
mov
push
push
dec
sarl
in
hlt
xor
xchg
inc
push
ljmp
stc
sbb
and
fcmovnbe
cs
xor
icebp
inc
xor
aad
imul
popl
scas
icebp
and
movl
addr16
or
dec
mov
xchg
aam
adc
loope
sbb
dec
adc
leave
pop
mov
or
out
insb
hlt
lock
pop
add
out
inc
pop
fxch
and
cmp
popa
or
incb
mov
dec
mov
repnz
es
jmp
xlat
pop
sbb
shl
xchg
sbb
repz
adc
inc
cmp
inc
sub
test
or
xchg
xchg
scas
repz
push
adc
jg
xor
mov
mov
or
sahf
xorb
adc
mov
aaa
pop
jl
mov
cltd
loope
cmp
push
std
out
mov
cmp
fists
add
mov
int3
cwtl
add
push
loope
bswap
scas
ja
push
cmpsl
xchg
movl
adc
and
clc
push
or
or
sbb
jecxz,pt
sub
cld
mulb
sti
xor
into
xchg
and
loopne
mov
cmpsl
unpckhps
jg
stos
fisttpll
mov
bound
into
or
lock
lcall
outsb
outsl
push
sub
mov
cld
cmpsl
das
stos
fcmovne
roll
add
mov
scas
mov
xchg
inc
and
in
sahf
and
je
in
mov
jbe
xor
ficomps
mov
das
cs
rcl
mov
inc
sarl
imul
clc
pushf
sbb
lods
adc
push
dec
adc
call
mov
xor
std
fnstcw
cmp
cltd
and
fildll
hlt
pop
xchg
jnp
loop
jle
pop
rolb
incb
stos
pushf
mov
cltd
mov
or
push
push
rcll
mov
aas
scas
xorb
dec
inc
enter
fs
inc
loope
stos
insb
test
push
jge
jp
sub
pop
aas
loop
pop
icebp
les
cmp
dec
add
orl
mov
out
cltd
xor
pop
sbb
and
jmp
in
mov
cmp
fwait
mov
lret
mov
sbb
sbb
jg
imul
iret
dec
sarl
dec
sbb
mov
add
orb
and
lods
addr16
bound
cltd
xor
sbbl
mov
rcrb
jnp
dec
add
or
sbb
push
adc
bound
orps
dec
aam
out
mov
push
dec
jp
mov
rolb
bound
adc
or
rcrl
fimuls
pop
xor
xor
out
mov
inc
cli
dec
hlt
inc
pop
imul
pop
mov
xchg
dec
out
mov
jge
lods
idivb
add
outsb
push
andb
xor
mov
adc
mov
out
xor
and
xchg
lock
clc
or
mov
into
loope
jp
cld
aaa
adc
mov
roll
out
mov
push
cmpsl
out
in
cld
pop
call
sbbb
cmp
jecxz
test
dec
js
je
adc
mov
or
add
cmpl
outsb
insl
add
cltd
mov
adc
negl
ja
xchg
sbb
ljmp
in
xor
call
sbb
mov
jg
xor
pusha
xchg
mul
in
loope
das
dec
call
hlt
pop
xor
add
mov
mov
lea
pop
ret
std
jp
add
pop
paddusb
out
adc
int3
test
or
fidivs
mov
rcrl
cli
xor
mov
aaa
pop
or
xchg
sbb
add
arpl
in
xorl
xor
fbld
lock
cwtl
jge
fcomp
pop
and
ret
adc
aaa
popf
mov
imul
dec
push
mov
lcall
das
jb
ja
pop
pop
mov
add
sti
adc
stos
lret
cmp
ret
and
jg
push
jle
xchg
int
lret
cwtl
pop
pop
mov
popl
or
push
xlat
sbb
inc
sbb
sbb
xchg
push
adc
shlb
inc
mov
sahf
sub
cs
cwtl
sbb
lahf
cmp
inc
sub
cmpsb
ljmp
xchg
adc
xorb
push
ja
sbb
xor
jo
mov
xchg
jmp
jg
jl
xor
clc
es
cs
insb
mov
icebp
inc
sahf
inc
cltd
pop
xor
movsb
fisttpl
mov
jle
fidivl
sar
outsl
lcall
mov
push
movsb
scas
rol
jbe
sbb
xchg
jns
push
in
stc
xchg
sub
imul
mov
pop
sub
aas
xlat
dec
adcb
ja
fcomp
push
test
mov
xor
je
xor
lahf
xorl
jge
xor
sbbl
aad
shll
aas
and
scas
test
frstor
loop
xchg
xchg
out
xor
sbb
adc
les
idivl
popf
ja
mov
fs
ds
push
pusha
cwtl
xor
outsl
inc
aam
test
fcompl
pop
push
jecxz
lcall
int
or
and
gs
and
sbb
sbb
or
xchg
push
sub
in
push
scas
cbtw
sahf
sub
stos
js
sub
or
in
inc
roll
push
sub
loope
and
je
js
int
push
movsb
sub
xchg
out
push
sub
xchg
cwtl
push
sahf
out
add
pop
inc
test
pushw
mov
pop
pusha
sbb
fadds
lret
in
push
test
jmp
inc
iret
and
lods
loope
jle
inc
insl
outsl
sub
xchg
push
adc
loope
iret
js
jne
cmp
add
cmp
jmp
sub
movsb
scas
in
les
dec
xchg
outsl
stos
sub
pop
cli
cltd
adc
pop
push
jp
push
sub
orb
pop
sub
clc
or
jle
pop
push
mov
dec
push
cmp
pop
push
pop
lods
in
fwait
out
mul
rclb
sarl
clc
icebp
ds
test
xchg
adc
arpl
insb
gs
sarb
adc
ss
pop
int
out
xchg
mov
xlat
jecxz
pop
movsl
xchg
mov
add
sbb
stos
dec
inc
in
xorb
jne
inc
out
dec
jnp
xchg
xchg
out
dec
cltd
movsb
addr16
pop
aam
sub
subl
fnsave
jns
inc
in
in
rcll
cmp
cmc
adc
dec
mov
clc
and
inc
mov
xchg
call
cmp
push
add
xchg
out
sahf
cmp
mov
dec
mov
enter
sub
notb
mov
lea
add
and
lret
xchg
test
xor
pop
sub
pop
cmpsb
ljmp
je
push
push
pusha
sbb
int
sbb
out
jg
les
inc
mov
xchg
lcall
cmp
mov
out
jns
aaa
dec
loop
stc
stc
xor
lods
subb
xchg
cmp
and
dec
sbb
das
xchg
addl
cmp
inc
mov
out
nop
push
bound
inc
mov
jo
mov
jae
mov
jp
sti
cmp
ficoms
mov
mov
cwtl
or
icebp
in
add
outsl
fmuls
cmp
scas
pop
ret
rcrl
ljmp
movsl
sub
xlat
imul
ss
roll
cmp
fldl
insl
push
inc
cli
and
arpl
pop
lea
xchg
cwtl
loope
popf
lret
pop
dec
movsl
or
pop
ret
lods
sub
jne
push
mov
pop
jnp
lret
stc
push
mov
repz
inc
jns
int
sahf
repnz
les
or
or
popf
inc
lods
stc
aaa
mov
out
dec
or
sbb
mov
mov
pop
push
popf
mov
mov
inc
xchg
add
arpl
dec
add
pop
push
adc
jg
cli
subb
enter
dec
ret
je
mov
nop
adc
cmp
xor
mov
push
mov
adc
mov
lret
add
inc
push
fiadds
sar
lods
js
out
or
sub
xchg
adc
or
mov
bound
push
pop
imul
push
sub
xchg
pop
sbb
in
sub
mov
inc
adcl
push
inc
mov
xchg
dec
xchg
pusha
repz
lods
adc
movsl
icebp
loop
iret
adcl
jecxz
mov
movb
push
and
lods
pop
xchg
pushf
adc
and
in
mov
inc
cmp
mov
xor
out
xchg
clc
dec
cmp
mov
inc
xor
arpl
pop
push
jno
xchg
data16
jnp
in
sub
mov
loope
jns
lcall
lods
je
arpl
or
mov
pop
sahf
xchg
dec
iret
and
inc
inc
test
dec
in
ljmp
in
ss
push
sub
sub
jnp
outsl
jp
adc
sbb
test
push
or
nop
pop
movsl
iret
dec
rol
mov
mov
mov
sub
push
xor
mov
pop
and
lock
inc
inc
lds
test
and
mov
loopne
lods
int3
insb
push
movsl
lret
std
lcall
cld
xchg
mov
in
sub
xor
lods
adc
arpl
mov
insb
dec
jbe
inc
ret
push
cli
addr16
jecxz
scas
lret
xchg
mov
addr16
push
xchg
xor
pop
inc
fadd
dec
lahf
xor
or
xlat
push
and
pop
dec
inc
adc
jne
cld
gs
pop
mov
cmpsl
int3
loop
mov
cmpsb
mov
sbb
jne
inc
pop
pop
mov
jl
cwtl
mov
mov
lea
inc
add
pop
mov
ret
adc
rcrl
lcall
out
cmc
adc
les
ret
jge
int
nop
push
dec
in
scas
jne
das
mov
dec
xor
cmp
adc
mov
scas
mov
adc
xchg
jns
push
pusha
addr16
jecxz
ja
pop
lahf
xchg
loop
xchg
mov
pop
inc
roll
push
shll
and
cmp
push
pop
mov
xchg
stc
dec
out
push
or
cmp
dec
jb
lcall
or
push
cmp
lods
stos
xchg
jns
or
and
in
pusha
aam
jl
cli
and
das
sub
push
mov
xor
aam
scas
dec
push
pop
mov
fs
dec
pop
les
rolb
inc
pop
ja
scas
pushf
popf
sbbb
push
mov
int
adc
add
loope
inc
outsl
and
repnz
loope
pop
fmulp
cmp
and
mov
and
imul
iret
sbb
in
add
or
pop
sub
lcall
out
lahf
cmp
loopne
and
push
movb
call
or
jb
sbb
jbe
or
loop
js
fs
jle
or
mov
xor
roll
mov
pop
pusha
sarb
push
push
inc
iret
jge
stc
cmc
fwait
stos
fdivrs
sub
jp
notb
push
inc
shl
aaa
negb
and
scas
mov
int
das
pop
bsf
cld
in
dec
popf
jno
xor
ja
cmp
testl
test
in
mov
lea
cmp
lahf
xor
mov
add
int3
lods
mov
cmp
rcr
add
insl
add
add
loopne
xor
test
stos
fisubs
cmp
sbb
icebp
rep
pop
mov
jle
sub
push
rcll
bound
push
fildll
cmp
test
sbb
xchg
bound
inc
inc
ss
dec
mov
lret
cmpsl
scas
mov
in
lahf
movsb
add
out
rclb
cwtl
aaa
mov
cs
cmp
inc
sbb
sub
jns
or
adc
imul
iret
add
cld
push
idivl
lahf
push
inc
es
add
or
mov
adcl
test
jbe
cmp
in
push
call
pusha
push
scas
pop
or
jl
leave
lret
cltd
icebp
inc
ss
aad
add
mov
and
fsubl
stos
ljmp
mov
lods
outsl
sbb
mov
push
mov
push
push
aaa
push
dec
and
sub
xchg
jo
push
jge
mov
mov
outsb
cmp
cmpsl
popf
stos
jecxz
dec
mov
nop
fisubrl
inc
repz
stos
dec
pop
ss
addr16
sbb
xchg
dec
ljmp
les
xor
cmp
nop
mov
aas
inc
mov
push
pop
or
add
ss
xlat
dec
mov
aad
xchg
xchg
addr16
cmp
push
inc
pop
lcall
jnp
ljmp
rcl
push
jl
clc
cmp
add
sbb
push
mov
jp
mov
push
aam
and
cli
stc
fpatan
dec
test
call
mov
xor
int3
js
mov
mov
jo
jbe
lds
jecxz
xor
push
xor
cld
cwtl
push
adc
fs
popf
in
int3
leave
shll
lods
jmp
mov
int
or
mov
in
inc
hlt
fstl
push
adc
je
dec
scas
xlat
xor
popa
xchg
out
pop
inc
add
out
insl
and
sbb
ljmp
cmp
repz
retw
dec
test
mov
outsb
jae
popf
cli
pop
fs
movsl
shrb
fimull
xor
jle
inc
sbb
or
movsl
add
ljmp
mov
mov
mov
mov
in
outsl
popa
and
inc
cli
and
into
and
mov
jns
cmpsl
push
sbbl
or
in
les
or
cmpsb
push
bound
test
push
xorl
sahf
xchg
mov
or
cld
pushl
push
jmp
clc
mov
push
jb
inc
test
aad
and
out
mov
cmp
pop
sbb
arpl
push
int
add
cmp
aaa
sbb
mov
mov
scas
mov
in
mov
imul
xchg
jbe
les
push
mov
inc
and
in
ficompl
or
push
inc
incl
cmp
adc
and
cmp
pop
repnz
hlt
cld
mov
xor
pop
test
loop
inc
ffreep
test
or
push
push
cwtl
ja
fsubr
gs
pop
rclb
leave
repnz
dec
aam
jns
and
mov
ljmp
sub
or
sbb
jp
jl
sarb
fildll
push
nop
pop
les
test
mov
or
jg
test
cmpsl
adcl
mov
ficompl
mov
or
dec
loop
push
out
pop
test
out
ljmp
xor
inc
sub
sbb
jo
test
dec
lock
xchg
xor
xchg
repnz
inc
incb
imul
pmullw
ret
dec
int
sbb
pop
aas
mov
and
adc
nop
fdivs
mov
and
pop
inc
sti
adc
pop
jne
pop
mov
jae
roll
push
and
xor
ficoml
pop
xchg
inc
push
in
adc
mov
or
jl
lds
mov
in
popf
cmp
sub
popa
popf
out
leave
pop
mov
adc
add
jne
mov
mov
add
lock
push
and
data16
dec
jg
insl
mov
out
popf
mov
add
hlt
jnp
sbb
cmp
les
ret
sbb
jo
scas
jb
inc
shrb
test
fsubrs
pop
lcall
fists
out
fnstcw
add
subl
xor
mov
stos
xchg
mov
ja
aad
jl
mov
xchg
xchg
pop
cmpsb
ljmp
jb
lds
cmpl
jns
outsl
rolb
jle
push
dec
incl
mov
and
lcall
ret
inc
cwtl
insl
ss
cli
push
sbb
sub
adc
je
loopne
aam
aaa
lds
dec
std
stos
jl
rclb
inc
inc
xor
pop
sub
push
jl
cmp
push
adc
in
push
mov
cmp
mov
and
movsl
push
mov
cli
mov
sarl
add
sbb
sarl
or
popa
jbe
fadd
dec
and
dec
test
xorl
xlat
pop
sub
jl
pop
call
sbb
fisubrs
and
ret
fsubr
cs
stos
and
cmpsb
rcrb
cmp
dec
sbb
xchg
mov
fstpl
ss
cltd
fstpl
mov
inc
inc
into
mov
sub
xor
mov
pop
mov
in
push
or
mov
jns
jle
lea
mov
sarl
xor
pushf
xchg
mov
cmc
inc
pop
je
movsb
sub
mov
rcrb
jge
insb
in
cmp
pop
cmp
sbb
es
push
mov
sub
stc
in
sarb
and
imul
jo
and
outsb
scas
out
xchg
popf
test
cmp
jmp
mull
aaa
repnz
mov
push
sbb
sbb
enter
or
pop
jno
xchg
adc
fisttps
js
adc
inc
or
cwtl
call
mov
addr16
js
cmc
xchg
dec
inc
pop
out
cmp
loopne
testb
ja
adc
pop
shlb
sti
xor
out
dec
bound
pop
lods
popf
or
outsl
in
add
cli
add
faddl
ds
or
jg
xor
dec
jne
rorl
int3
pop
cmp
jo
pop
enter
sub
movsb
xlat
mov
inc
aam
sbb
jmp
inc
lods
mull
push
push
and
cmp
jmp
inc
pop
xchg
push
dec
dec
fs
les
push
mov
pop
in
sbb
pusha
bound
or
dec
jmp
sub
stos
fs
and
xchg
push
sub
mov
repz
mov
mov
xor
pop
or
xchg
xchg
jg
xchg
mov
pop
pop
add
cmp
jg
mov
inc
mov
jo
in
dec
mov
dec
fmull
mov
or
sub
dec
sbb
lcall
fdivl
icebp
inc
xor
data16
jae
add
cmp
fnstsw
fbld
mov
mov
xor
or
cmp
pop
mov
sbb
inc
repnz
rcr
xor
testl
ds
pushf
shll
jb
loope
pop
movsb
bound
inc
pop
insl
imul
test
sub
inc
bound
test
int
adc
scas
mov
cmp
inc
adc
dec
leave
bound
inc
rolb
or
xor
int
in
xor
pop
cmp
mov
add
int3
jbe
inc
xor
sbb
and
dec
movsl
inc
xor
jae
out
and
addr16
pop
sub
sti
les
in
paddw
sbb
dec
and
adc
mov
and
mov
les
mov
jae
nopl
and
push
push
ror
adc
xor
out
or
scas
mov
mov
xor
gs
call
aas
cmc
lds
and
or
loopne
rolb
xor
cmp
loop
cld
data16
xor
sbb
sbb
repnz
inc
out
test
pop
sbb
dec
mov
hlt
mov
outsl
pop
add
pop
push
jmp
inc
adc
inc
xor
push
push
sbb
jle
clc
mov
add
cmp
sub
movsl
dec
lods
repz
or
out
sub
arpl
xchg
lcall
shlb
push
repnz
clc
jnp
or
jbe
ljmp
mov
xchg
jbe
or
les
in
and
rcr
lret
push
xchg
push
fwait
insl
imul
shll
xchg
adc
jp
lret
clc
popa
popf
pop
push
cmc
push
xchg
adc
push
pop
outsb
sbb
xlat
mov
mov
lods
es
sbb
mov
mov
xchg
stos
lcall
adc
xor
in
popf
into
cmp
and
je
test
sbb
test
jp
pusha
or
pop
and
push
not
jno
in
jno
scas
sbb
xchg
mov
and
adc
arpl
add
mov
jbe
dec
mov
add
xchg
sub
jge
pop
xor
add
lahf
clc
dec
fcompl
leave
stc
js
lock
push
sub
jbe
push
jecxz
jbe
js
ja
xlat
imul
pop
shrb
cmpb
or
mov
mov
xchg
aad
inc
lea
sbb
inc
repnz
movsb
mov
push
mov
loop
xchg
lret
inc
in
jb
inc
dec
cmp
xchg
out
add
ficomps
dec
mov
repnz
push
rcrb
bound
mov
orb
xchg
inc
int3
ljmp
pop
hlt
in
jmp
mov
sbb
mov
rcrb
popa
test
sbb
fistpl
xor
lea
mov
inc
push
adcl
clc
jge
pop
jmp
adc
ja
jno
pop
xor
jnp
mov
pop
arpl
in
mov
nop
pop
jg
mov
mov
stc
aam
cltd
adc
aad
mov
xorb
aas
dec
outsl
scas
data16
aaa
fbld
dec
xchg
in
call
cmpsl
add
js
sub
dec
data16
cmp
mov
adc
push
sub
addr16
xor
out
scas
fs
lods
int3
xchg
dec
loopne
mov
mov
iret
jo
aas
movsl
mov
mov
and
mov
fldt
push
out
push
add
mov
das
iret
cmp
clc
xchg
sbb
mov
sbb
xor
lock
mov
stos
popa
pop
mov
js
mov
mov
inc
mov
mov
mov
adc
pop
mov
cmp
inc
push
pop
aas
jb
clc
fiaddl
jbe
iret
fimuls
xchg
std
sti
and
dec
gs
lods
outsl
mov
aam
adc
jb
push
push
xchg
rolb
sti
add
push
insb
add
dec
pop
fwait
xchg
pop
jno
fnsave
test
add
pop
out
imul
pop
popa
mov
jns
movl
das
push
jb
js
add
adc
test
dec
dec
ret
pop
cmp
mov
xchg
jmp
xchg
or
or
jmp
jo
out
in
sbb
push
jbe
sahf
xchg
add
scas
push
cmp
in
mov
lods
sub
adc
in
sbb
outsl
icebp
xorl
movsl
jo
shlb
push
aaa
xor
fs
inc
mov
lds
pop
in
inc
cmpsb
aam
aas
cmc
mov
dec
pop
add
pop
cmp
and
shl
push
bound
lcall
enter
ljmp
fnstsw
xchg
loopne
imul
mov
mov
mov
out
push
xor
sbb
fcmovnbe
lock
mov
jecxz
cmp
and
roll
sbbl
or
xlat
dec
dec
xchg
pop
jge
cwtl
jle
out
pop
push
fcmovnu
lahf
xchg
inc
pop
inc
mov
mov
aam
js
xchg
add
sbb
fimull
push
mov
mov
pop
loope
test
xlat
sub
sub
cltd
mov
mov
enter
popf
jp
mov
mov
mov
push
cmp
iret
jbe
shll
fbstp
jb
je
int3
xchg
movsb
add
sahf
mov
stos
cmp
push
push
mulb
push
xchg
nop
repnz
pop
in
cmpsb
pop
outsb
jne
push
nop
shll
rclb
bnd
fs
pop
aaa
or
xor
and
xor
pop
fdivrl
jle
xor
xor
push
xor
fwait
dec
jmp
jg
push
pusha
bound
lret
sub
es
cld
and
sub
cld
sub
cmp
scas
add
or
sbb
adc
in
lahf
jp
ljmp
pop
int
outsb
mov
mov
sbb
cmp
nop
fcmovb
aam
aam
jle
mov
add
sub
or
out
bound
and
arpl
jg
mov
into
sub
xlat
adc
ja
add
dec
and
dec
test
pop
pop
cmp
loope
push
inc
jle
push
sbb
sub
xchg
push
aaa
call
shlb
xchg
mov
fdivl
sub
iret
pop
dec
pop
inc
xor
roll
xchg
dec
mov
std
add
shrl
lods
shrl
insb
sbbb
xchg
push
test
loop
add
arpl
ret
enter
xor
mov
cmp
in
jecxz
pop
js
cmpsl
sub
cmp
js
pop
icebp
test
mov
movsb
jb
mov
scas
f2xm1
mov
push
icebp
gs
sub
mov
stc
pop
outsb
xor
push
inc
jb
popf
sahf
mov
hlt
and
xor
sahf
mov
js
pusha
lea
dec
loopne
test
pushf
adc
push
sbb
cmpsl
fstpt
and
in
push
cli
into
in
xor
int
inc
pop
mov
into
fisttps
xchg
aaa
sub
dec
pop
add
adc
sub
sahf
inc
mov
jb
arpl
test
mov
test
mov
xor
add
mov
or
cmp
aam
push
push
repz
cwtl
mov
mov
out
repz
mov
fidivl
test
bnd
divb
cmpsb
sub
push
inc
sbb
xor
mov
fs
mov
push
iret
insl
scas
or
popf
test
mov
and
mov
dec
movsl
cmpb
xchg
xchg
jmp
mov
sub
mov
push
jne
pop
stc
inc
push
inc
aaa
sbb
adc
jp
sub
in
out
shlb
sbb
cmp
das
push
imul
jbe
test
add
cwtl
pop
popf
in
push
nop
repz
das
out
xor
or
jno
adc
pop
cmp
mov
cmc
fisubrs
and
mov
ret
and
mov
inc
addr16
fucomi
sub
sbb
or
shrl
add
cmp
mov
iret
out
cmpsl
decb
ljmp
out
sub
xor
inc
push
and
jmp
sbb
mov
or
aas
ficomps
xchg
imul
shrb
fadds
loope
repz
shrb
add
cmc
xchg
pop
pop
mov
sub
les
cmpsb
xor
mov
call
mov
pop
aaa
sbb
and
movsb
push
jo
or
jns
js
loopne
mov
dec
xchg
dec
mov
movsl
cwtl
mov
mov
movsb
imul
add
scas
stos
inc
div
fs
lahf
jle
hlt
jo
push
adc
mov
in
inc
call
sub
mov
call
inc
ja
jo
std
ljmp
es
stos
dec
fiadds
nop
inc
inc
scas
out
in
cmp
xchg
pop
rcr
lret
mov
std
scas
sbb
cs
pop
ja
ljmp
dec
cmp
mov
xor
lock
lret
out
push
fildl
push
mov
lret
sti
js
ret
jno
popf
jle
and
insl
and
dec
in
fwait
xor
dec
mov
sahf
xor
arpl
test
push
popa
lcall
push
test
pop
xchg
push
add
mov
push
loopne
sbb
mov
arpl
dec
aaa
int
in
xor
xchg
add
xchg
xchg
je
popf
mov
jb
push
ss
mov
pop
imul
fimull
rclb
or
sub
push
hlt
out
rcrl
nop
push
out
xor
pop
out
mov
lret
and
imul
pop
xchg
jns
xor
test
push
cmp
dec
push
xchg
lahf
outsl
pusha
jnp
pop
or
cwtl
aas
enter
jno
sub
inc
xchg
jl
ljmp
out
push
sub
jge
mov
mov
dec
cmc
mov
mov
push
clc
mov
or
testl
xchg
int
jb
xchg
fld
loop
addr16
aad
cmp
lea
in
cli
sub
push
pop
xchg
xor
pop
clc
int3
mov
sub
popa
mov
mov
shlb
xor
jmp
fsts
add
ret
ljmp
das
adc
xchg
rcll
sarb
test
push
mov
cmc
mov
lahf
clc
mov
xor
insl
or
cli
in
mov
movl
push
test
shlb
fisubrl
add
lret
pop
cmp
lret
rclb
test
mov
sahf
cld
mov
dec
movsb
jle
sahf
push
fmull
pop
push
cmp
sub
mov
pop
mov
jb
int
in
fld
rolb
xchg
inc
data16
lret
and
out
cmp
aam
pushf
test
or
push
add
xchg
cmpsl
lcall
mov
lods
mov
inc
xor
sete
jmp
jno
add
sbb
stc
mov
jbe
sbb
stc
pop
hlt
and
pusha
adc
or
mov
mov
hlt
inc
add
divb
pop
push
movsl
sbb
jp
mov
mov
push
xchg
nop
push
or
outsl
ret
neg
sahf
cmp
adc
xchg
xchg
push
outsb
mov
out
loope
mov
shl
lret
cmpsl
mov
mov
sbb
jl
mov
int
dec
enter
out
pop
mov
cmpb
and
and
fdivrl
roll
insb
dec
cmp
sbb
xchg
mov
pop
sub
scas
xor
jno
repnz
jle
mov
movsb
xor
outsl
cmp
sub
xchg
lcall
pop
push
std
leave
inc
or
stos
ja
sahf
jecxz
imul
ss
add
int
jecxz
or
daa
lock
test
xor
sub
dec
or
rclb
and
pop
mov
xor
sbb
dec
jle
xor
xchg
mov
pop
add
jb
in
inc
mov
cltd
inc
fstpt
xor
mov
outsb
ss
jmp
pop
jmp
add
sub
pop
insl
sub
push
out
fnstcw
push
repnz
addr16
add
loop
jns
xchg
aaa
sarl
inc
push
cmpb
mov
lret
lcall
mov
pop
arpl
or
jnp
out
arpl
out
sti
cmpsl
out
mov
lock
fbstp
xor
push
dec
mov
sbb
or
les
mov
pop
push
add
lds
aad
dec
jl
aam
nop
jns
stos
repz
out
dec
push
xor
mov
sub
call
les
or
jle
testb
jnp
outsb
subb
pop
and
dec
jmp
dec
pop
pop
push
test
mov
jns
repnz
xor
sahf
sahf
inc
gs
or
shll
pop
sbb
icebp
dec
jg
into
push
sarb
scas
xor
push
push
xchg
arpl
pop
adc
shl
inc
sub
fdivl
sub
push
into
into
pop
cwtl
push
gs
mov
sbb
popa
hlt
adc
les
outsb
jbe
jb
pop
loop
add
mov
dec
jno
dec
ss
subl
push
lods
outsl
or
add
mulb
popa
sbb
add
loope
in
cmc
jbe
xor
sbb
jp
jb
sbb
out
pusha
push
pop
push
pushf
iret
xor
lock
lret
aad
mov
mov
cmc
dec
inc
ret
rcrb
add
and
pusha
test
fs
inc
testl
lret
adc
ss
add
adc
or
jns
ret
jb
mov
add
out
repnz
rol
out
out
in
test
gs
outsl
aaa
mov
adc
pusha
cmc
adc
jne
imul
xchg
mov
out
mov
aaa
dec
mov
lods
xor
push
inc
lahf
dec
shr
mov
sub
cmp
or
jl
bound
and
imul
or
inc
les
or
lods
lret
sub
bound
fwait
movsl
mov
fcoml
and
xchg
pop
mov
jge
xchg
mov
popa
lds
mov
mov
lods
ss
test
mov
sarl
shrb
std
dec
cwtl
aam
mov
mov
ljmp
pop
jbe
lods
aad
add
rorl
pop
mov
jmp
pop
add
repz
testb
out
push
cmp
shlb
leave
mov
pop
bt
or
mov
sarl
faddp
stc
fdivp
lret
fists
sub
aam
mov
stos
ds
testl
push
pop
mov
push
leave
pop
stos
fmull
shll
and
mov
xor
mov
mov
inc
cmp
mov
roll
scas
adc
fwait
cmp
jp
pop
frndint
call
outsl
enter
imul
sbb
xchg
push
lods
or
xor
add
dec
pop
xchg
into
mov
cli
incl
add
test
ret
xor
cmpsl
xchg
dec
aaa
sti
mov
fwait
repnz
adc
sbb
imul
mov
and
ljmp
ss
adc
stc
adc
pop
pop
idiv
mov
mov
fstps
jo
outsl
xchg
xchg
push
mov
dec
lcall
loopne
pop
push
sti
cmp
jns
ja
repz
scas
cmp
out
pop
pop
in
add
hlt
in
and
add
es
jo
cwtl
test
add
into
adc
fwait
jo
sub
cmp
in
cmpsl
or
sbbl
cmovnp
mov
ret
push
jno
mov
add
es
sbb
pop
pop
movsb
roll
loopne
or
outsb
insb
test
shlb
dec
cmp
or
dec
aaa
ljmp
pop
and
pushf
mov
jno
mov
jl
ja
rorl
push
push
lock
clc
das
add
fadd
mov
cwtl
idiv
pop
inc
aad
adc
lods
test
mov
adc
mov
and
int
jecxz
hlt
mov
sti
pop
int3
insl
fwait
rcl
add
in
daa
sbb
xorb
mov
mov
xchg
hlt
push
cmc
fsubrp
loop
subb
xor
lods
xor
adc
xchg
rorb
fcmovbe
sbb
or
mov
sub
push
xchg
std
jl
cmpl
pop
and
int
insb
dec
xor
cld
pop
mov
arpl
xchg
sbb
sbb
and
fcmovne
cld
cmpsl
mov
ljmp
and
mov
in
fldt
in
mov
jmp
mov
cmpsl
and
loopne
sub
in
add
psubb
xchg
jne
popl
inc
cmp
push
es
out
xor
jecxz
bound
lds
ja
out
add
xchg
jno
scas
push
dec
mulb
inc
fmul
out
cmp
jge
pushf
inc
inc
jbe
jnp
add
or
sub
mov
lcall
adc
cld
inc
dec
or
xchg
pop
dec
mov
mov
jb
jecxz
repz
xor
jg
lahf
sub
push
xorl
out
addr16
loopne
xchg
sbb
mov
lods
or
sub
mov
adc
jg
leave
sbb
push
cwtl
pop
mov
nop
mov
and
fcos
out
sti
pusha
data16
mov
aaa
add
or
push
insl
xchg
lods
push
dec
push
xor
mov
mov
pop
jae
daa
outsl
lods
lds
call
orl
out
or
add
and
icebp
ja
ret
adcl
das
shrb
add
das
dec
mov
mov
pusha
mov
add
cmc
loope
add
rcll
sbb
pop
iret
add
add
mov
cmp
in
clc
push
inc
dec
xor
cld
inc
fsubs
adc
clc
popl
hlt
adc
sub
and
push
aad
dec
mov
sbb
jge
pop
mov
ficoml
xchg
mov
and
loope
and
push
sbb
fisubs
into
mov
loopne
mov
push
pop
test
dec
inc
pop
dec
mov
in
in
outsl
or
aad
lock
cmp
push
inc
pop
dec
jae
dec
inc
jecxz
movsl
mov
add
push
sbb
shrb
mov
sahf
std
cmp
jecxz
in
icebp
or
ret
adc
cmp
inc
repz
inc
popa
sbb
mov
xor
jge
lahf
icebp
insb
jns
les
cmp
push
cmp
inc
insl
xor
sti
push
add
out
or
sub
xchg
or
addr16
repz
lcall
sbb
adc
mov
push
inc
enter
ja
in
jl
mov
in
sbb
cltd
aad
int3
xchg
js
and
add
jo
add
stc
mov
adc
rcrb
fistpll
mov
or
sbb
adc
jle
xchg
lret
in
add
mov
push
add
pusha
js
pop
sbb
filds
mov
dec
xchg
and
mov
xchg
mov
jae
pop
nop
dec
sarb
imulb
lret
ds
lcall
call
inc
daa
sbb
adc
fimuls
lahf
push
cmp
mov
mov
sub
push
jo
jmp
mov
inc
data16
inc
mov
mov
scas
mov
xor
out
cli
mov
in
daa
pop
adc
xchg
hlt
xor
mov
pop
ret
push
fstl
fsub
xor
and
jnp
loop
cmpsl
or
xchg
test
xchg
mov
push
in
ss
and
adc
mov
das
sbb
lahf
push
sub
pop
mov
cwtl
ret
gs
xor
rcrb
aas
adc
in
xor
test
das
movsb
add
push
xorl
test
sub
inc
adc
cmp
cmpsb
push
jae
xor
mov
mov
fwait
inc
fisubrs
outsb
sbb
divb
roll
loope
push
testb
into
lahf
std
lea
and
gs
mov
cmp
mov
push
and
mov
dec
jecxz
or
in
xor
mov
cmp
pop
cmpsb
mov
mov
mov
hlt
xlat
lods
pop
scas
enter
enter
rcll
loope
or
xchg
dec
mov
xor
out
mov
icebp
inc
inc
jge
mov
lods
cmp
pop
pop
inc
stc
mov
getsec
mov
lock
sbb
addr16
adc
jecxz
push
cwtl
inc
xchg
jno
add
push
dec
loop
divb
popf
push
pusha
adc
push
into
and
ret
mov
pop
push
xor
leave
pushf
mov
getsec
sub
jbe
sub
mov
jne
inc
rorb
rcll
inc
jle
mov
testb
xor
test
test
insb
mov
add
js
int
cli
xchg
mov
xchg
or
mov
iret
xlat
fxtract
mov
adc
lea
int
ret
mov
mov
dec
fadds
add
data16
shlb
aam
and
aam
sbb
mov
test
mov
adc
jne
jae
xchg
pop
es
adc
fcomps
adc
jecxz
scas
and
mov
cmc
mov
imul
sub
mov
rclb
mov
in
mov
push
daa
xchg
psubd
shll
movsb
idivl
mov
xor
cmc
repnz
imul
xor
rcr
inc
int3
divb
mov
lret
xchg
in
mov
mov
aam
and
decb
jbe
adc
inc
imul
mov
add
orl
mov
mov
jae
add
bound
push
push
iret
int
mov
mov
adc
iret
jl
mov
loop
outsl
scas
add
fs
insl
in
jns
jno
cmp
mov
mov
fistl
push
lods
aam
dec
rclb
push
mov
push
or
in
xchg
push
outsl
clc
ja
inc
dec
pop
in
js
test
cld
cmp
pop
mov
sbb
jle
or
cwtl
push
test
mov
paddsb
add
lret
mov
incl
mov
leave
in
andl
jg
nop
xlat
stos
xor
or
or
cwtl
add
aad
negb
imul
je
pop
into
in
mov
push
dec
fcompl
int3
mov
fnstsw
sbb
xor
lcall
lcall
xchg
inc
jg
xchg
outsb
bound
or
mov
pop
and
dec
add
add
out
in
inc
xor
pop
rcrb
out
jmp
inc
or
or
clc
imul
pop
mov
xor
pop
das
lds
dec
call
inc
aad
stos
iret
jmp
out
sbb
mov
xchg
fcmovbe
push
lds
mov
icebp
inc
dec
push
ja
inc
jle
xchg
xor
movsl
fwait
inc
inc
iret
sbb
mov
and
repnz
xchg
mov
jae
arpl
push
mov
fldt
scas
int3
mov
push
jb
daa
mov
mov
push
loopne
sbb
popf
or
aaa
xor
mov
insl
inc
jl
aaa
dec
xchg
and
jle
fs
ljmp
add
jo
mov
bound
or
sbb
sbb
imul
adc
adc
mov
xor
mov
loopne
fdivs
into
add
cmp
ret
mov
push
hlt
imul
or
xor
mov
ud1
sub
cmp
dec
inc
pop
mov
add
les
int3
mov
mov
loope
sub
pop
xchg
mov
cmpsb
lods
adc
imul
cmc
mov
lahf
das
mov
mov
pop
xor
sbb
cmp
xor
insl
pusha
out
mov
add
fwait
hlt
nop
xabort
mov
call
test
or
push
push
or
je
mov
or
call
movsb
mov
xor
and
mov
mov
mov
dec
and
test
pop
xor
fidivl
push
pop
pop
into
divl
sbb
mov
fldt
inc
inc
sub
fstpt
xlat
pop
mov
xchg
cmpsl
stos
ficoms
insl
jecxz
out
sub
addl
or
jg
xchg
jo
mov
xor
add
cwtl
mov
cmp
jge
cmc
sub
fisttpll
mov
sub
loope
sub
mov
push
cmp
gs
cmp
inc
or
cmp
mov
popl
cmp
rcl
push
pop
fbld
jmp
cmc
jae
jmp
stos
insb
lock
fnstsw
je
aas
sbb
inc
ret
test
or
sub
adc
aad
mov
jecxz
bound
ret
inc
sarl
lods
jcxz
mov
int3
xchg
mov
aam
pop
inc
mov
lock
fmull
sub
push
stc
dec
jne
out
sbbb
cmpsl
test
fcomps
addr16
icebp
imul
pop
dec
les
aam
les
mov
outsl
sub
pop
sbb
out
popf
add
sbb
into
out
aaa
pusha
and
jae
xlat
idiv
or
mov
lods
mov
push
aam
push
test
mov
js
and
cmp
pop
iret
test
mov
insb
xchg
addr16
and
insl
shll
movsb
mov
push
pop
in
push
jl
sbb
mov
lods
insb
mov
mov
sub
aaa
mov
dec
xchg
imul
push
push
insl
cld
mov
inc
cmpsb
jo
sbb
fdivrs
inc
shrb
test
cs
jns
and
loopne
fldl
je
jae
sbb
jae
add
imul
cmp
mov
xor
in
outsl
lea
sub
int
out
adc
push
inc
iret
aaa
sbb
mov
or
push
mov
dec
xor
outsb
lods
sahf
dec
rclb
loopne
call
sub
arpl
sbb
roll
sub
sbb
ficoms
push
ss
insb
sti
jge
sar
div
lock
inc
pop
sub
mov
ja
inc
mov
test
xor
mov
test
cld
add
stc
mov
sbb
call
xor
jns
popf
jae
pop
and
sub
gs
pushf
push
add
inc
push
insb
xor
dec
adc
sub
fldcw
cmp
jge
dec
arpl
pop
repz
push
push
xchg
popf
jmp
jnp
int
ds
mov
jne
mov
dec
mov
xchg
stc
push
jl
out
adc
ljmp
push
cwtl
nop
jle,pn
and
adcl
sub
movsb
or
pop
pop
ss
xchg
sbb
bound
xchg
or
xchg
lret
mov
adc
or
out
mov
fistps
push
mov
pop
dec
pop
push
mov
popa
std
addl
add
gs
outsl
sti
fisttpll
aad
or
das
push
sbb
aaa
cmp
add
sbb
cmp
sahf
add
in
jmp
jge
mov
pop
inc
cmc
or
jl
cmp
das
mov
inc
std
rol
or
andl
dec
fimuls
fsubs
xor
sbb
lock
movsl
sti
fists
mov
pop
cmc
mov
xchg
push
dec
stos
or
pop
lret
rcrb
pop
dec
adc
cmc
sbb
pushl
bound
sahf
inc
dec
shll
js
mov
push
add
int3
push
or
dec
sbb
aad
push
pop
imul
test
popf
push
sub
and
psrlw
push
xor
stos
mov
inc
lds
inc
add
cmc
pop
bound
pop
adc
not
bound
clc
sub
test
js
jecxz
sub
sti
pop
push
adc
js
push
in
pshufw
cs
gs
adcb
pop
push
jp
xchg
xor
mov
jbe
sbb
ds
xchg
ds
mov
or
mov
xor
enter
lret
jg
or
mov
jg
jb
cli
arpl
imull
and
xchg
jae
divb
cs
test
ss
mov
out
and
pop
mov
jno
mov
ffree
imul
inc
pop
decl
in
adc
popa
fcoml
aad
mov
stc
lods
mov
rcll
mov
rcll
mov
movsl
je
dec
or
stos
inc
xchg
in
add
arpl
add
push
test
jo
and
sahf
sbb
cmpsl
test
jbe
ss
cltd
push
push
or
push
pushf
and
cli
sbb
iret
inc
mov
cwtl
dec
push
mov
xchg
sbb
sahf
cs
aad
pushf
rcrl
lock
sub
xchg
notl
and
xor
jl
inc
xchg
or
and
fldcw
mov
int3
cmpsb
and
es
clc
outsb
xchg
jno
lds
bnd
adc
pop
arpl
sbb
jmp
cmp
dec
cmp
pop
xchg
mov
inc
mov
pushf
lock
into
sti
bound
rolb
popa
push
out
aad
lods
adc
shrl
fdivrp
pop
xchg
mov
pop
ljmp
mov
pop
or
xor
pushl
lods
push
cli
iret
addl
xchg
xchg
xor
in
jge
push
outsb
cmc
aam
inc
loope
fwait
cltd
cmp
inc
jb
fcompl
xor
mov
imul
into
xor
ja
sub
jnp
push
aam
sti
test
add
jbe
jne
lret
adc
xlat
push
sub
pop
and
inc
push
add
subl
pop
fldcw
out
out
cltd
mov
adc
popf
out
add
adc
cmp
xchg
xchg
out
add
sbb
pop
xchg
sub
bnd
pcmpeqb
mov
mov
and
or
ja
inc
mov
data16
dec
cmp
jbe
push
fmull
stc
call
mov
and
clc
and
hlt
sbbl
shr
int3
jp
mov
push
xchg
fdivrp
pop
imul
movsb
jae
dec
mov
mov
mov
jno
int
sbb
je
dec
mov
lcall
mov
test
cwtl
ja
ret
xorb
push
cli
xchg
sar
cmp
or
xchg
adc
push
pusha
jnp
lcall
out
pushf
test
pop
mull
sbb
rcrb
sub
mov
or
inc
stos
fstp
cmp
cmp
lcall
out
pop
mov
sbb
mov
jne
push
pop
aaa
fwait
mov
icebp
arpl
shlb
mov
mov
pop
icebp
lds
sbb
sbb
adc
jge
mov
enter
popf
xchg
jae
mov
push
mov
inc
push
outsb
mov
mov
mov
mov
imul
cli
nop
or
sbb
popf
ret
lret
insb
mov
xchg
fldcw
xchg
test
jb
aaa
push
sbb
and
pusha
stc
pop
mov
daa
or
cmp
sar
outsl
aad
cmc
xor
dec
jb
cmp
push
dec
repz
dec
mov
shll
xor
and
lret
movq
xchg
lret
cli
adc
push
inc
cmp
jle
inc
imul
xchg
push
mov
adc
and
adc
mov
dec
lds
or
push
xlat
dec
fdivrl
sub
pusha
mov
nop
and
mov
xchg
cvtpi2ps
sub
in
adc
push
iret
dec
icebp
mov
sahf
das
jl
das
leave
addr16
xchg
sbb
mov
adc
pop
mov
pop
adc
pop
push
add
adc
clc
enter
sub
jae
xor
out
jl
stos
cld
jmp
inc
add
jbe
mov
iret
mov
lret
lods
mov
aaa
lods
lahf
mov
cmpsb
cmp
shlb
xchg
mov
mov
lret
flds
jecxz
push
mov
jg
out
jo
push
mov
sbb
iret
xor
stos
push
mov
sub
and
inc
nop
jl
adc
cmp
icebp
adc
add
and
test
nop
pushf
jecxz
das
lret
push
dec
mov
push
cmc
adc
out
scas
cwtl
push
imul
lahf
push
aaa
cmpl
pop
add
add
xor
leave
cwtl
cs
dec
aaa
adc
in
repnz
xchg
and
and
in
mov
sbb
mov
sub
cmp
cs
fisubl
and
push
jnp
orl
sub
ret
fisttps
daa
mov
cmp
xchg
jb
les
iret
jnp
in
or
sub
nop
sti
cltd
fs
nop
sbb
add
rorb
cmp
les
xchg
fstps
in
sbb
andl
ss
and
sbb
js
jns
xor
xchg
cmp
in
pop
adc
or
push
out
fdivrs
insl
scas
repz
dec
popa
push
xor
and
sbb
mull
test
js
mov
sbb
int
ret
dec
fcmove
rcll
js
sbb
arpl
in
and
push
movsw
lds
push
mov
mov
popf
mov
mov
aas
add
jmp
mov
pop
bound
in
fcom
push
pop
lea
xor
mov
cmp
jno
xor
add
ret
pop
clc
mov
inc
in
dec
add
inc
test
mov
jge
push
and
mov
fistpll
mov
repnz
out
out
test
jp
test
ja
clc
out
mov
imul
mov
push
dec
in
mov
jnp
sbb
push
and
leave
cmp
xchg
jno
xchg
subl
ret
inc
sub
adc
sub
shll
push
mov
jg
mov
aad
fdivs
xchg
cmc
add
push
push
mov
xor
cmpsl
or
push
cmp
stos
lret
mull
and
cwtl
fisubrs
mov
leave
or
dec
dec
vmovaps
mov
add
sbb
dec
xchg
das
mov
add
cmpb
mov
dec
leave
dec
push
pop
outsb
mov
mov
pop
pop
in
sbb
cmp
popf
xor
jae
sbb
mov
out
or
sub
nopl
xchg
faddp
cmp
and
les
inc
dec
cmp
sbb
test
mov
movsb
or
jae
outsb
inc
lods
mov
int
test
sbb
cltd
mov
fsubl
test
in
xor
mov
mov
in
scas
mov
xchg
xchg
nop
add
push
sbbl
es
sub
push
jne
es
jp
inc
pop
push
adc
fisubrs
and
mov
sbb
pop
xchg
add
fildll
xor
jnp
enter
mov
dec
cwtl
push
in
xor
sub
iret
in
and
gs
loop
add
sbb
push
mov
jge,pt
fbld
adc
inc
inc
push
jge
ja
out
xchg
add
in
push
fwait
jg
test
insb
pushf
adc
in
shrw
ss
scas
bound
push
xor
lret
add
push
sub
push
push
xchg
mov
jge
sbb
test
fsubl
pusha
or
mov
sub
test
in
cmpsl
idivb
pop
add
enter
or
iret
xchg
stos
mov
lret
xchg
mov
xor
xor
ljmp
je
js
je
stc
cmp
insl
cmp
lods
push
mov
outsb
les
dec
iret
aam
insb
insb
pop
mov
mov
sbb
push
inc
pop
cmp
sti
repnz
gs
mov
xchg
fs
andb
aam
mov
cmp
inc
push
out
pushf
or
cld
sbb
push
out
in
aas
cmpsb
and
pop
sbb
imul
std
sbb
ljmp
cli
call
sbb
mov
in
insl
dec
loope
pop
xchg
ss
xlat
imul
jae
shrl
mov
popf
sarl
and
lret
mov
xchg
pop
lret
mov
and
mov
push
mov
pop
sbb
sbb
pushf
push
jnp
pop
bnd
insb
sub
push
imul
jns
jbe
push
sbb
sub
add
cmpl
xchg
dec
push
negl
cmp
push
fldl
loope
sub
pusha
xchg
mov
xchg
mov
adc
adc
pushf
push
push
pop
ss
pop
xchg
xchg
mov
jecxz
sbb
add
cmp
outsb
mov
and
insl
lods
push
mov
out
orl
fistl
outsl
mov
cmpsl
xchg
data16
mov
jg
cmp
popl
dec
mov
push
cmpsl
xchg
popf
cmpsb
xor
jbe
fwait
enter
push
and
jmp
js
adc
mov
sub
push
add
jb
and
andl
shrl
test
push
in
repnz
arpl
out
cmp
pop
add
mov
sub
jno
out
sub
xchg
fs
dec
scas
dec
jb
push
add
int3
inc
inc
arpl
out
not
arpl
push
lods
add
sub
call
mov
mov
hlt
mov
adc
adc
jb
xor
rcrl
scas
mov
scas
inc
jge
add
cmp
jno
xor
popf
and
fdivrs
nop
jae
mov
mov
stos
fidivrs
movsl
or
mov
popf
sbb
or
aam
add
mov
in
dec
cmp
mov
lods
test
mov
jb
insb
imul
push
shr
and
inc
add
int
adc
loopne
jmp
sar
andb
fldl
mov
or
and
xchg
and
cmpl
pop
mov
sbb
cmp
inc
movsb
mov
xchg
pushf
je
dec
sbb
sbb
mov
mov
dec
push
out
mov
pop
cmp
push
and
cmpsl
cmp
cmp
loope
push
sbb
in
lret
in
inc
sub
mov
inc
jecxz
in
ficompl
and
mov
fcmovnb
push
sarb
inc
pop
lahf
jge
adc
jnp
mov
sbb
movsb
shrb
clc
shlb
mov
adc
pop
outsb
push
xchg
adc
hlt
jnp
push
test
mov
mov
push
movsb
inc
mov
call
iret
push
sbb
push
fcmovnu
idivb
push
test
orl
adc
stc
mov
scas
insb
arpl
dec
sub
sbb
test
roll
sti
xor
xlat
xchg
cmp
out
loop
and
xchg
pop
cmpl
mov
xor
xor
aas
pop
or
jae
pop
xchg
mov
pop
and
test
pop
jnp
fisubs
push
and
cmc
cmpsb
sub
cmpsl
cmc
add
test
lods
pop
push
mov
pop
xchg
hlt
std
xchg
jns
xorl
mov
xchg
sub
es
jecxz
jb
mov
gs
popa
repz
scas
dec
nop
mov
and
scas
add
add
lret
shl
out
cwtl
and
inc
mov
lret
add
stos
fisubl
mov
sub
jge
loop
fwait
push
fwait
clc
or
mov
mov
outsl
mov
add
pop
push
sbb
dec
xlat
shll
add
pop
sub
faddl
aaa
inc
subb
and
fstl
fldt
js
push
push
push
dec
push
sahf
fldcw
pop
adc
lods
rol
mov
int3
scas
negl
sub
js
pushf
xchg
mov
pop
jno
sub
sbb
cmp
xchg
pop
dec
inc
pop
add
sbb
enter
ds
jecxz
xchg
and
imul
jnp
adc
mov
add
inc
mov
xor
push
xchg
das
add
icebp
and
lcall
mov
sahf
enter
or
cmp
push
pop
mov
mov
clc
xor
pusha
pop
pop
add
xchg
out
sub
fs
cmovp
insl
inc
pop
orb
nop
push
out
ret
add
pop
out
fistpll
in
mov
adc
pop
push
jecxz
inc
mov
cmc
jae
roll
mov
fidivrs
mov
pushf
adc
sbb
adc
xchg
and
pop
lret
and
dec
out
adc
ljmp
xchg
xor
push
mov
mov
mov
or
jge
fcmovbe
xchg
icebp
sti
pushf
inc
dec
lahf
xchg
fldt
cmp
xchg
lret
cs
xchg
cmp
add
das
mov
sbb
push
push
insb
mov
add
and
mov
mov
aam
rcr
popa
xchg
inc
and
jo
data16
shll
sub
xor
addr16
sbb
rcrb
insl
shll
pushf
rcrb
lods
call
shll
xor
mov
mov
std
adc
sahf
lds
inc
mov
xor
pop
imul
jmp
push
gs
ret
movsl
insb
jp
cmp
pop
in
cmp
bound
pop
cmpsl
ljmp
sbb
and
xchg
sub
inc
inc
cmp
stos
adc
lret
lahf
xchg
insb
sbb
cli
jns
loop
adc
enter
jae
mov
xlat
fwait
sbb
pop
nop
cmpsl
popf
mov
inc
cmpsl
pop
mov
loopne
into
cmp
pop
cmpsb
push
or
ljmp
adc
xchg
sub
test
pop
lock
xchg
jp
out
and
cmc
cmp
dec
lcall
mov
aaa
or
push
cltd
push
xchg
scas
jl
int
fists
into
decl
mov
in
inc
mov
aad
pop
mov
mov
mov
push
sub
sbb
push
and
jb
insb
xlat
mov
in
and
sbb
inc
in
sti
dec
lea
lods
dec
pusha
pop
pop
push
roll
inc
mov
inc
ret
inc
imull
arpl
pop
jae
sbb
pop
pop
mov
rcrb
mov
cmpl
pop
inc
ret
mov
insl
push
in
push
inc
fmulp
out
sbb
jge
ret
push
fnstcw
sbb
loope
inc
jae
pop
xchg
punpcklwd
add
xchg
test
rcll
jne
mov
dec
fsubs
and
mov
popf
repnz
adc
mov
push
jno
mov
fwait
mov
pusha
fcomip
adc
mov
and
mov
in
shr
cmc
loopne
push
mov
aas
sbb
mov
fwait
sbb
cmp
mov
cmp
js
jle
inc
out
out
cs
pop
lock
cmpsl
push
lock
jg
popw
and
loop
add
notb
add
add
imul
aad
mov
pop
push
jno
aad
push
call
test
sbb
add
movsl
pop
xor
push
xorl
dec
ljmp
imul
arpl
and
sub
add
movsl
lret
data16
jecxz
add
or
jno
cld
sub
hlt
jmp
iret
dec
imul
fwait
mov
adc
js
xor
dec
inc
loope
push
cmpb
jne
ja
cs
cmpsl
adc
add
sbb
fdivs
imul
sub
cmp
iret
popa
or
inc
ja
or
add
popf
in
xchg
rcl
sahf
ja
in
pop
and
sub
mov
scas
shlb
jg
push
in
bound
popaw
mov
fnstsw
popf
hlt
mov
sbb
outsb
xchg
stos
enter
add
push
movsb
pop
and
stos
pop
in
lahf
lret
lock
ret
scas
sub
add
inc
stc
cmp
mov
pushf
mov
dec
dec
mov
aam
add
call
lret
adc
or
pop
rclb
xor
jae
in
jae
add
out
xchg
jecxz
out
and
repz
jo
fsin
leave
rorl
inc
lret
in
mov
mov
stc
fwait
push
popa
ja
mov
cld
loope
psubq
cmp
mov
loopne
xchg
and
lret
xchg
clc
mov
inc
sahf
dec
je
fidivl
mov
cmc
or
repz
rol
test
shrb
fsubl
sbbl
daa
adc
sbb
cmc
mov
pushf
bound
aas
out
push
stos
incl
sbb
fxam
jecxz
push
hlt
cwtl
lods
mov
insb
ret
jnp
push
mov
fsubr
aam
enter
ja
inc
dec
call
xchg
cwtl
fistl
lahf
push
popf
cmpsb
int
cs
inc
add
outsb
jb
out
ljmp
lcall
mov
xchg
inc
insl
push
js
mov
imul
stos
inc
outsb
out
negb
loope
adc
push
pop
jecxz
test
lret
fdivl
sub
sbb
cmc
adc
popa
pop
cli
decb
cmp
mov
mov
mov
stc
or
shl
imul
add
or
adc
push
pop
ds
cmp
sub
imul
inc
icebp
cmpsb
fldt
xchg
add
mov
popa
mov
jnp
subb
mov
cmpsl
loopne
mov
addl
cwtl
sub
inc
fcmovne
sbb
cmpsl
mov
jbe
int3
out
mov
divl
sbb
dec
cmp
pop
or
dec
insl
xchg
movsb
es
pop
pop
sub
xor
xchg
insl
adc
cwtl
nop
mov
lea
repz
std
int
push
cld
jge
sbb
shlb
lock
gs
or
push
imul
and
sbb
popa
push
mov
and
cld
dec
cmp
mov
cli
and
jg
push
cmpsb
dec
data16
in
fldt
xchg
mov
sbb
iret
enter
cmpl
sub
jge
popf
je
push
or
xchg
cmp
cltd
add
inc
sarl
lret
cmp
test
test
imulb
mov
inc
sti
xorl
sarb
cmp
mov
lds
and
in
or
mov
mov
cmp
inc
je
repnz
insb
daa
adc
pop
shld
arpl
popf
es
int
and
mov
cwtl
or
jecxz
mov
jo
add
in
lods
hlt
stc
mov
aad
es
pop
outsl
into
push
cld
push
mov
mulps
inc
ds
adc
sbbb
icebp
adc
outsb
push
mov
push
ret
jg
cs
mov
test
pusha
and
jg
insl
rolb
jno
cltd
jle
imul
lahf
fistpl
push
jmp
xor
mov
pop
push
xor
lods
jbe
fistpl
leave
add
mov
pop
arpl
lods
dec
test
mov
mov
xchg
outsl
and
inc
movsb
scas
push
pop
or
fcompl
loopne
inc
push
xchg
or
push
fwait
jb
popa
dec
roll
loop
cmpsb
into
cs
rcr
inc
ss
addb
jecxz
push
shll
sub
jmp
dec
xchg
add
jle
clc
adc
dec
mov
jmp
push
dec
jb
jo
std
cmpsb
jnp
dec
add
in
jl
jnp
mov
or
stc
lret
pop
and
adc
andl
add
add
insb
cmovae
jmp
loopne
inc
imul
cmp
xor
bound
ja
sbb
mov
lcall
cmp
lret
jecxz
push
sub
js
lahf
xor
pop
repz
inc
leave
jbe
test
sahf
push
cmp
nop
in
sti
xchg
fnstsw
out
dec
jo
pop
aad
nop
inc
cltd
and
pop
push
movb
popf
int3
cmpsl
mov
cmp
cmpsb
rolb
jp
mov
iret
test
mov
adc
lahf
and
out
aaa
inc
mov
mov
cmp
mov
ljmp
cs
out
push
lret
cmc
adc
aaa
xchg
jb
jl
xor
in
or
push
dec
lods
fwait
mov
fisubrs
stos
xchg
xchg
jle
addb
mov
xchg
outsb
cli
dec
jp
jecxz
add
imul
insl
adc
push
cmp
clc
aaa
mov
outsb
mov
dec
nop
lret
std
mov
and
dec
in
inc
lcall
testl
push
jns
jle
mov
imul
scas
fld
push
es
and
push
mov
and
call
xchg
rolb
sbb
out
cli
mov
test
sbb
mov
xchg
sti
mov
insl
out
dec
out
mov
jmp
scas
push
in
mov
cli
mov
pop
xchg
pop
popf
cltd
insb
stos
test
inc
out
sub
cwtl
adc
sbb
shll
movsb
mov
and
sbb
out
std
enter
adc
test
fcmovnb
addb
lea
mov
das
pop
adc
mov
mov
add
stos
addr16
popa
push
jb
rcll
push
cmpsb
xchg
adc
shr
cmp
adc
daa
add
adc
dec
mov
ret
xor
jl
ret
pop
fs
mov
inc
in
sbb
mov
dec
add
adc
sarb
dec
test
roll
jnp
push
mov
cmc
and
adc
push
adc
push
xlat
jle
stc
in
sbb
sub
fmuls
imul
adc
pop
sub
xlat
pusha
daa
mov
ret
or
inc
sbb
jbe
adc
dec
fldcw
movq
data16
cltd
fldcw
xchg
lods
ret
loope
iret
ds
js
inc
push
in
dec
dec
les
jmp
fcomps
xor
int
out
pop
iret
jle
or
or
add
add
dec
mov
jmp
add
cmp
mov
lcall
xchg
lcall
lahf
mov
pop
mov
jo
xchg
idivb
add
push
add
and
aad
imul
loop
mov
mov
mov
cli
cmpsl
push
inc
push
out
ljmp
push
pusha
pop
das
in
aas
mov
xchg
sbb
adc
cld
call
lock
lods
cmpsb
out
and
or
imul
into
inc
lret
lds
outsl
ds
shl
sti
pop
xor
in
adc
xor
push
pushf
mov
fildll
insb
repz
fmul
mov
js
sbb
in
sbb
mov
in
cmp
in
push
scas
loope
es
cmpsb
push
cmpb
test
cld
bnd
ss
pop
jecxz
lock
fdivrs
cwtl
lods
aas
or
ret
adcb
fwait
arpl
xor
test
jo
notl
or
enter
xchg
add
or
in
je
sbb
sbb
inc
cs
pop
imul
hlt
sti
jle
cmpsb
jo
jp
cmpsl
lea
xchg
fsubr
push
mov
pop
cmp
mov
in
push
push
push
into
ficoml
pop
mov
add
inc
or
mov
push
int
lret
movq
in
lock
shrl
je
sbb
mov
adc
sbb
fwait
movsb
xor
gs
jecxz
fisttps
out
inc
inc
movsb
repnz
in
hlt
jbe
cli
mov
ja
jns
rclb
sbb
outsl
cmp
sbb
cmp
pop
mov
test
popf
fcmovne
add
mov
aam
inc
mov
and
jp
popa
inc
shll
lods
sub
inc
or
sbb
mov
mov
mov
lods
push
dec
fidivl
ja
lret
jle
add
inc
cmc
mov
in
sub
xor
js
jl
push
cmp
fwait
or
movsb
jge
ret
pop
ret
pmulhw
dec
sub
sbb
mov
iret
insl
jb
cwtl
es
add
shlb
cmp
adc
in
xchg
pusha
pop
mov
shrb
movsb
pop
popa
xor
and
adc
adc
out
jecxz
les
inc
inc
and
inc
dec
cmp
jg
lret
sub
mov
ja
jge
xor
and
jo
push
and
dec
lods
dec
inc
jp
pop
mov
mov
sbb
xor
js
inc
cs
orb
jecxz
int3
ret
scas
ret
mov
loop
in
push
cmp
jne
enter
cmp
popl
pop
inc
jnp
adc
jne
jb
les
jg
or
inc
xchg
scas
dec
push
pop
js
or
psraw
mov
push
mov
ret
jbe
push
mov
add
stos
loope
push
fstl
stc
dec
rorl
xlat
cmp
fs
push
or
mov
inc
cmp
leave
aad
test
js
xor
sahf
cmp
push
adc
xor
div
cltd
xchg
repnz
add
push
fisttps
out
pop
fadd
push
ljmp
aas
lahf
lock
lret
dec
push
xchg
ret
das
cltd
or
loop
push
cli
push
pop
mov
insl
outsl
sbb
xor
mov
xor
clc
rcll
pop
fidivs
xchg
cmpsl
add
lahf
cmp
outsb
popfw
mov
sub
in
or
test
sti
xchg
fwait
mov
jge
jmp
js
lret
ds
popf
hlt
mov
cltd
inc
enter
fcmovnb
jp
or
mov
stos
nop
jl
push
mov
lret
and
das
push
and
lahf
loopne
not
mov
fcoms
arpl
arpl
sub
sub
faddl
lea
jge
in
pusha
push
insl
in
scas
ret
adc
pop
mov
xchg
out
nop
dec
leave
cwtl
adc
add
sub
xor
shl
insl
pushf
xchg
push
jne
push
cs
negb
daa
inc
lds
push
cmpsl
inc
enter
and
adc
movsl
dec
or
in
jle
cmc
xor
xor
inc
out
adc
rclb
and
popa
leave
xchg
insl
sbb
mov
cs
push
cs
push
jecxz
pop
sbb
in
mov
je
push
and
pusha
inc
clc
xchg
out
xchg
mov
adc
rol
mov
sub
aaa
adc
adc
jmp
or
leave
pop
mov
mov
xor
cmpsb
movsl
inc
xlat
mov
faddl
mov
shld
sbb
pushf
mov
xor
mov
scas
data16
pop
outsl
mov
fwait
imul
fidivrs
adc
mov
lds
sbb
js
std
jb
xor
push
jge
out
push
fidivs
push
mov
notb
cmp
mov
int3
pop
sahf
dec
dec
xchg
adc
pop
lods
mov
jl
das
inc
gs
sti
test
stos
mov
add
cmp
repz
ds
and
jae
cmp
movsb
mov
xchg
into
sahf
popf
jle
push
jl
fmull
pop
popa
js
ss
adc
fildl
fisttpl
fldt
push
cmp
decl
ss
inc
bound
in
xchg
sahf
cmp
pop
push
scas
push
es
ds
and
pusha
fmul
enter
das
sahf
or
out
arpl
cmpsb
popa
push
decb
fistpl
pop
or
mov
int
sbb
ret
daa
fisttpll
pop
mov
fistpll
pop
cmp
inc
xchg
pusha
inc
shlb
and
popa
xor
insb
stos
pop
int3
aam
xchg
mov
push
gs
fsts
jb
push
iret
pop
push
pop
jge
mov
and
push
xor
pop
add
xor
dec
std
add
pop
dec
inc
pop
inc
mov
cmp
jmp
aas
inc
sbb
mov
or
mov
push
in
mov
or
pop
inc
mov
in
mov
ds
xchg
xor
js
rcr
aaa
push
and
test
mov
aas
mov
in
cmpsl
cs
xchg
ljmp
std
cwtl
or
pushf
jnp
inc
jge
fcoms
fimuls
shlb
or
add
fstl
fildl
incl
adc
dec
jl
imul
adc
push
mov
and
xor
faddl
lret
rcll
daa
mov
xor
cs
pop
pop
and
lcall
add
call
cld
bound
mov
add
xchg
jp
lea
mov
idivb
pushf
jae
int3
or
sub
stc
rcll
pop
shll
dec
xor
sub
inc
ljmp
enter
aas
fistl
add
xor
stc
sbb
mov
inc
xorl
push
movl
push
clc
mov
adc
push
daa
imul
jb
xchg
inc
xchg
xor
add
lret
rorb
les
or
push
fldcw
dec
or
mov
in
imulb
out
sub
call
adc
mov
inc
lcall
sahf
lret
lds
call
adc
addr16
insb
mov
enter
jge
jg
cmp
test
sbb
push
je
jle
pop
fs
mov
call
or
jne
fstps
cmp
and
cmp
data16
dec
imulb
inc
push
shr
pushf
push
or
push
xor
mov
mov
push
xor
mov
jns
arpl
mov
mov
out
xchg
adc
lods
call
inc
lods
xor
jge
pop
scas
push
lcall
lcall
and
xchg
sbb
inc
jge
mov
push
cld
mov
xchg
inc
push
or
int3
out
cmp
nop
js
gs
cltd
fldenv
clc
popa
dec
jae
sbb
scas
sub
sub
jg
ret
out
inc
sbb
push
xlat
hlt
dec
ja
cs
push
js
mov
pop
adc
mov
xchg
mov
mov
sub
nop
xor
pop
clc
sbbl
or
rcrb
lcall
xor
bound
mov
adc
fsts
sbb
fs
ret
imul
jp
fsubs
stos
dec
dec
push
daa
inc
add
mov
push
or
and
ja
push
movsb
and
test
cld
pop
add
sbb
dec
cmp
or
loop
ds
dec
jg
mov
test
sub
and
xor
lcall
inc
data16
pop
mov
js
icebp
or
stc
jle
push
sbb
int
cmp
jle
fnstcw
xchg
xor
adc
sbb
push
fisttpll
notl
scas
arpl
jo
in
popf
add
test
push
and
neg
lods
mov
sbb
xchg
pavgw
dec
nop
dec
mov
mov
jae
jne
scas
subb
and
cmp
mov
push
int3
imul
add
faddp
movsb
xor
call
push
push
jl
decl
out
leave
mov
xchg
cmpsl
dec
inc
in
lods
out
sbbb
pop
stos
fucomi
in
insl
or
sub
mov
add
movsb
add
fs
lds
ljmp
hlt
cmp
add
mov
pop
inc
ss
xor
ljmp
test
cwtl
and
out
test
mov
lock
les
shrl
and
int
adc
pusha
inc
mov
or
sbb
movsl
daa
sti
xorl
mov
mov
jb
push
lock
pop
adc
jnp
adc
mov
push
call
lcall
or
cmpsl
mov
add
sbb
in
mov
ja
and
inc
cmpsb
rorl
stos
or
xchg
xor
sub
lret
sub
and
dec
sti
movsl
sub
cltd
xor
mov
stos
sub
cmp
sbb
cmpsl
cli
js
xor
jae
add
mov
push
dec
int3
mov
cmc
xor
jnp
daa
and
xchg
xor
sbb
popa
sarl
scas
test
mov
jl
push
ret
and
lcall
mov
out
push
push
out
mov
adcb
sahf
test
out
sbb
adc
xchg
inc
pushf
and
pop
cmpsl
add
scas
std
je
mov
or
lods
popf
cmp
pop
sbb
pop
fsts
xorl
cmp
pop
xchg
add
mov
push
cwtl
push
xchg
cmp
pop
outsb
clc
mov
sub
movsb
movb
jge
ret
adc
cmpsl
push
test
enter
dec
mov
cwtl
dec
push
in
cwtl
stos
dec
shlb
lods
rolb
adc
in
inc
jp
clc
imul
leave
xchg
add
xchg
test
push
int3
sti
pop
sub
cmpsb
push
cmp
sub
pop
or
add
or
je
in
xor
inc
xchg
jle
pop
test
rorl
sub
mov
mov
jbe
xor
out
xlat
mov
mov
fisttps
aaa
rcr
mov
pop
add
ds
das
popa
mov
sbb
sbb
lahf
fisttps
cmp
aas
push
mulb
or
sahf
ja
cmp
inc
mov
andb
loope
dec
test
pop
popf
or
xor
hlt
and
shl
jo
or
call
stos
clc
and
adc
syscall
adc
sub
int
push
fldcw
cld
cli
cmp
mov
jb
push
cmpsb
sbb
push
mov
in
mov
insl
or
sbb
xor
nop
and
ficoml
ljmp
mov
aas
cmc
cmpl
pusha
rcrb
lods
repz
cmp
mov
and
ds
mov
cltd
mov
addl
mov
ret
outsb
ja
in
inc
mov
mov
loop
dec
add
and
xor
pop
je
daa
mov
dec
xchg
fs
fldt
fsubs
and
repnz
sahf
cld
dec
imul
mov
mov
mov
push
cmpsb
sub
daa
mov
sub
dec
fdivrs
sbb
push
shll
xorl
pusha
enter
orb
ljmp
push
stos
fwait
push
cmp
fucom
inc
jnp,pn
pop
pop
fs
push
mov
xchg
xchg
cwtl
aam
mov
jns
xor
mov
roll
add
fwait
in
dec
add
inc
testb
rcll
insl
pusha
and
jno
jns
dec
add
rcl
dec
adc
xor
push
cld
pop
push
jne
sbb
mov
insb
pop
or
cs
call
mov
cwtl
popf
mov
xchg
xor
push
sbbb
adc
cmp
cli
mov
xor
add
sbb
in
mov
and
icebp
jg
loopne
scas
jg
testl
cmpsl
adc
inc
cld
inc
push
push
jno
int
fcoml
fsts
cmpl
xchg
mov
dec
and
jp
mov
fiadds
mov
arpl
xchg
adc
repnz
leave
sub
in
loop
das
fisubl
push
and
sti
jbe
cmc
stos
cwtl
daa
push
xor
clc
outsl
dec
aad
xchg
jp
cmp
mov
sub
aam
mov
or
scas
xchg
loop
jb
mov
movsb
inc
push
xor
dec
adc
dec
and
popa
dec
or
mov
dec
and
aaa
inc
adc
dec
ljmp
rclb
push
sbb
pop
pop
lahf
mov
xor
dec
ss
or
add
jno
es
loop
mov
mov
pop
cld
into
shll
mov
pop
dec
jmp
idivb
inc
and
lea
jecxz
sbb
int
cmp
and
dec
and
or
loop
xchg
scas
clc
es
mov
mov
enter
aam
sarb
mov
js
xor
sbb
xchg
and
ret
inc
ficomps
mov
mov
nop
pop
xchg
and
loop
push
sub
mov
daa
arpl
sbb
xchg
sbb
sahf
lods
inc
dec
mov
mov
dec
aaa
mov
cmp
adc
enter
and
inc
lea
movsl
dec
lret
mov
push
jnp
ljmp
sbb
jp
mov
outsl
iret
test
std
out
dec
rcrb
xor
mov
sahf
ss
out
mov
push
int
sbb
daa
addb
jae
add
sbb
or
sahf
mov
rcrb
sub
scas
xchg
push
aas
cmp
lret
mov
leave
jb
mov
or
aaa
ret
jno,pn
jno
add
movsb
sti
jo
or
mov
pmaxsw
stc
xor
outsl
cmpsb
mov
mov
mov
mov
pop
stc
mov
mov
lcall
ficoml
inc
cli
inc
loope
std
hlt
mov
dec
xchg
add
in
lea
fidivs
lock
jo
push
int3
nop
mov
movsb
rorl
xor
jbe
jge
daa
stos
jp
out
ss
xchg
jle
mov
int
in
pushf
fstl
inc
jl
cmp
xchg
sbb
shlb
sbb
aas
mov
fdivr
push
mov
adc
cltd
pop
popf
daa
jb
jae
sti
repz
push
les
test
mov
and
pop
inc
div
dec
pop
leave
mov
xorb
xchg
repz
jae
repz
ficompl
test
insl
push
mov
mov
inc
push
in
pop
mov
inc
jg
rcrb
scas
aaa
add
es
out
aam
jns
fadds
test
repz
lods
aam
into
lea
xchg
sub
push
push
dec
jmp
loop
and
cmc
decl
in
sbb
or
sub
std
mov
jmp
cmp
mov
cmp
sub
lret
add
sbb
and
rcrl
int3
test
out
insb
mov
jo
int
cmp
dec
mov
inc
mov
jecxz
pop
call
aad
daa
dec
inc
dec
sbb
repz
ljmp
ret
add
jne
test
ljmpw
pop
mov
test
lea
xchg
push
insb
aam
pop
imul
add
ret
push
sub
mov
cwtl
outsl
aas
xchg
lahf
xchg
shll
ret
xchg
dec
mov
mov
dec
push
gs
lock
sahf
xor
orb
pop
test
and
sbb
push
mov
adc
mov
sub
ja
insb
xor
repz
pop
adc
repnz
loop
js
jecxz
jge
in
pushf
mov
pop
jmp
pop
dec
fnstsw
or
ljmp
cmpsl
inc
insb
data16
shl
pop
pop
dec
test
daa
nop
push
cmp
ja
fcompl
iret
js
aad
negb
mov
mov
aad
sub
mov
inc
ss
mov
stos
adc
test
push
xor
xor
inc
cmp
sbb
imul
push
push
cmpsb
loope
inc
addl
xchg
push
data16
scas
cli
or
mov
add
loopne
lods
bound
inc
xchg
jns
das
aad
js
loopne
cs
or
flds
adc
fildl
cmc
sarl
ret
or
sbb
xlat
loope
push
mov
pop
add
xchg
les
fsubrs
shll
orb
out
cltd
cmp
mov
sub
pop
orb
adc
adc
pop
mulb
icebp
cmp
addl
loope
pop
addr16
jmp
call
ret
in
mov
mov
das
sbb
scas
popf
leave
pop
test
addl
jl
xchg
jae
push
fildl
xor
lcall
pop
pop
lods
subb
xlat
pop
lds
cs
jns
popa
pop
and
push
out
dec
cmp
add
pop
jb
je
xchg
xlat
popf
xchg
stc
out
sub
mov
sbb
dec
xchg
fsub
sarb
leave
fiadds
xor
sbb
push
movsb
fcoms
aam
xchg
adc
leave
add
mov
js
mov
insb
divl
xor
repnz
mov
mov
icebp
sub
hlt
mov
mov
movsl
mov
inc
in
mov
imul
cltd
mov
testl
mov
sbb
leave
mov
pop
movsb
cmp
cmp
sbb
mov
cmc
nop
rorb
andb
pop
stc
aam
jg
push
cmp
jg
jae
adcl
aam
or
rclb
adc
sbb
mov
iret
xor
inc
iret
dec
out
popf
or
je
mov
fbld
fwait
mov
and
mov
sub
lock
test
bound
aam
cmpsb
enter
mov
pop
pop
clc
out
sbb
std
jl
test
xbegin
cwtl
or
inc
sbb
stos
mov
testl
xchg
xor
push
xchg
mov
cmp
cmp
add
xor
scas
mov
mov
mov
push
aas
and
jl
add
stc
fisubs
mov
subl
push
popf
imul
inc
and
mov
or
fsubrl
mov
ret
fdivrs
gs
and
push
outsb
add
xor
adc
in
mov
pop
xor
dec
loope
cltd
dec
cmp
outsl
inc
cld
addr16
push
out
pusha
test
pop
inc
cmp
pop
push
inc
sbb
pusha
jl
mov
jge
mov
add
clc
inc
sti
xor
pop
xor
push
dec
push
cmpsl
je
leave
xchg
out
push
or
lods
movsl
cltd
push
push
icebp
adc
dec
sti
xlat
pushf
shrl
sbb
lcall
and
std
mov
and
std
xchg
nop
mov
and
pop
cmp
test
sub
and
jb
add
cwtl
xchg
pop
dec
pop
loopne
sub
data16
xchg
push
cwtl
dec
daa
das
add
call
sarb
sub
jno
nop
or
jno
out
mov
push
std
sbb
loop
movsb
idivb
pop
jl
vpaddsw
and
or
gs
mov
mov
jns
rcl
cmp
sarb
mov
adc
pop
cmc
pop
lea
add
dec
mov
sub
mov
shrl
lods
xchg
adc
pop
cmp
mov
jno
lret
pop
pop
adc
xchg
or
ds
cmpsl
mov
test
stos
xchg
jne
int3
pop
mov
and
iret
jmp
int
pusha
mov
xorl
cmp
mov
push
addl
outsb
xor
jmp
mov
mov
inc
cmp
mov
insl
scas
mov
lret
ljmp
add
sarl
jns
adcl
stos
mov
adc
jne
in
sbb
pop
int3
adc
jo
lods
adc
int3
scas
mov
sarb
into
clc
das
mov
mov
fwait
mov
leave
lea
test
daa
ret
pop
movsb
xor
sahf
jecxz
fstps
mov
mov
add
dec
adc
inc
repnz
mov
shrl
outsl
std
xchg
cmp
inc
leave
fmuls
mov
outsb
leave
mov
jp
scas
ret
mov
and
movsl
jno
mov
inc
mov
mov
icebp
sti
repz
push
cmpsb
or
orw
cld
fs
bound
fwait
mov
clc
mov
rcll
mov
adc
repz
adc
icebp
sarl
cmp
jecxz
pop
adc
mov
rcrb
call
das
aas
movsb
and
sub
je
jnp
in
push
sar
addr16
test
shrl
or
idivl
aam
test
daa
movsb
and
in
sbb
xorl
sub
pushf
cli
cmc
inc
fs
mov
push
jp
jb
xor
stos
dec
outsl
cltd
dec
pop
xor
xchg
xor
jno
rol
cmp
insl
lret
out
adc
lds
inc
pop
jbe
data16
adc
rcrl
sbb
sbb
push
ja
cmpsl
loopne
inc
dec
xchg
clc
add
imul
pop
jb
dec
sub
xor
hlt
call
or
out
pop
rcll
addb
pop
insl
gs
cmp
jg
cmc
push
or
mov
xorl
cmpsb
mov
movsb
ja
push
test
jge
outsb
out
sahf
pusha
push
fisubs
add
mov
inc
push
shll
outsb
nop
gs
popf
fwait
aad
dec
push
xlat
repnz
test
cmp
pop
insb
mov
in
pop
cld
inc
xor
cld
ret
sarb
ds
lock
pop
push
insb
stos
lahf
push
sti
pop
inc
in
adc
pop
lret
popf
xchg
mov
pop
dec
out
ja
out
jnp
jp
popf
add
sbb
sub
pop
mov
jne
mov
std
loopne
out
lods
lea
imul
in
lock
jo
xchg
out
gs
aad
push
fcoml
inc
rclb
insl
cmpsb
dec
xor
into
mov
xorb
mov
arpl
push
fwait
dec
popf
lahf
sbbb
push
addl
je
or
dec
sub
sub
lea
ret
dec
mov
mov
movsb
xor
inc
dec
push
into
les
imul
js
int3
mov
outsl
imulb
ficomps
mov
xchg
out
mov
jbe
inc
cmpl
or
stos
icebp
popf
xor
rcl
jbe
aad
fsubs
cld
mov
jns
inc
stos
push
jno
mov
dec
es
mov
loope
scas
out
insl
add
mov
cmp
xor
stc
cltd
jo
or
stos
mov
cmp
push
scas
es
inc
jnp
clc
mov
mov
xchg
fsubl
enter
ret
pop
addr16
cli
xor
pop
jnp
in
ds
and
push
ds
mov
mov
insl
imul
or
mov
test
cli
and
sub
cmpsl
orl
or
stos
clc
clc
ljmp
sub
cmp
xor
insl
shll
sar
lcall
jp
jge
pop
arpl
loop
sub
cmpsb
fnstsw
imul
mov
xor
jge
loopne
das
les
ficoms
iret
movl
pop
jg
jl
xor
jge
or
inc
insl
in
repz
enter
ret
ret
rclb
jb
test
out
push
es
in
dec
filds
in
call
roll
subb
mov
jb
hlt
ret
mov
mov
jns
fisubrl
xchg
dec
sub
push
cmp
jo
fs
and
mov
or
push
inc
not
adc
das
xchg
push
mov
fcomps
sub
push
stc
cld
adc
mov
int
or
sarl
clc
sub
xchg
js
jb
adc
sub
push
call
sub
ljmp
inc
into
sbb
pop
aas
idiv
sub
cld
cli
mov
mov
add
lods
pop
lea
adc
std
mov
xor
inc
cmp
mov
cld
adc
cltd
test
fcoms
pusha
xchg
inc
outsl
mov
sahf
xchg
sub
inc
sub
frstor
fdivs
push
imul
shlb
popf
js
add
imul
adc
lods
push
dec
aaa
xor
fisttpl
pusha
into
fstl
jno
in
adc
or
stos
jo
out
jle
gs
lea
out
movb
xor
pop
scas
daa
mov
lahf
test
sub
es
cmp
sbbl
iret
pop
jl
aaa
mov
sahf
cltd
cmp
shll
into
sub
js
dec
inc
dec
fisttpl
fdivr
or
dec
aam
repz
outsl
inc
shlb
cmp
jnp
xlat
mov
hlt
sti
loop
lods
jle
jnp
cltd
cs
cmp
jo
mov
mov
in
call
and
mov
ds
dec
cmovge
hlt
shl
adc
dec
mov
pop
divl
add
adc
fcomps
add
movsl
gs
fsubr
cmp
dec
in
adc
out
js
jecxz
xchg
jle
adc
sbb
adc
adc
mov
mov
and
clc
mov
inc
mov
andl
push
sub
ffree
mov
arpl
sbb
imulb
pop
inc
sbb
inc
add
lcall
pop
cmc
hlt
sarl
pop
imul
imulb
and
mov
stc
jp
lock
jl
outsb
jge
imul
or
push
pop
cmp
hlt
scas
jmp
leave
lods
fidivl
in
jmp
xlat
xchg
and
and
xchg
push
jns
in
add
mov
dec
mov
cmp
subl
mov
je
xor
sti
loop
bound
out
outsb
and
dec
fs
inc
mov
adc
out
idivl
lods
or
cmpsl
or
pop
inc
jcxz,pn
or
aas
adc
jg
mov
loopne
add
dec
sbb
pop
pop
jnp
jmp
movsb
mov
jmp
leave
mov
push
call
xor
jno
adc
leave
fistpll
int3
mov
nop
in
add
cmp
add
jb
mov
ds
or
imul
mov
mov
in
lods
subl
in
int
inc
xchg
xchg
ljmp
jecxz
or
dec
adc
cmp
sbb
aaa
enter
mov
das
pop
cmp
or
sbbl
inc
push
mov
in
jecxz
les
xchg
push
jae
mov
mov
add
cmpb
ljmp
int3
ret
hlt
int3
scas
int3
mov
pop
mov
out
rcr
insb
mov
mov
ss
sbb
and
ss
and
dec
inc
push
sub
aam
cmp
int3
cmp
cltd
push
in
jecxz
jmp
sbb
xor
and
jge
and
popf
inc
xor
in
scas
lahf
lcall
and
pop
mov
cmp
pop
lods
sbb
loopne
pop
mov
xor
mov
lret
div
inc
int
xlat
inc
stc
cmp
cwtl
iret
in
decl
cmpsl
adc
leave
fwait
jg
les
rorl
loop
inc
insb
add
bound
jae
or
add
inc
dec
lock
add
rorl
shrb
shlb
jge
icebp
inc
scas
pop
add
jae
xlat
mov
lea
inc
mov
xchg
test
cli
pop
dec
movsb
fs
dec
lret
sub
shl
push
shl
sbb
fiadds
les
rcrl
inc
icebp
insb
xor
loopne
dec
mov
out
lret
inc
push
xchg
mov
cwtl
xchg
dec
pop
shrl
aaa
lcall
int
rclb
sub
mov
cs
push
std
mov
cmp
adc
punpcklbw
pushf
notb
enter
test
pop
out
lods
repnz
mov
cmpsb
or
fidivs
fbstp
jecxz
inc
push
xchg
xor
inc
in
pop
push
push
or
jae
fs
pop
dec
imul
int3
iret
mov
jnp
loop
outsb
fsubrl
sub
and
dec
cmp
ret
mov
push
lds
mov
mov
mov
cmpl
xor
outsl
cltd
lds
ficompl
lcall
jbe
inc
pop
inc
pushf
imul
insb
mov
jb
or
pushf
mov
lret
add
inc
cmpsb
arpl
inc
js
addr16
leave
push
roll
lods
in
xchg
shrb
mov
inc
mov
xchg
subb
or
and
inc
push
cli
int
and
xor
pusha
into
dec
xor
push
int3
cmp
sar
mov
mov
in
int3
sarl
ret
or
mov
sub
out
xchg
shll
repz
adc
dec
cmp
mov
mov
mov
cmp
jno
jp
pop
pop
add
pop
sbbl
add
sbb
adc
add
sbb
or
test
rorb
fsubrs
insl
jge
repnz
adc
repnz
push
cmc
gs
sahf
mov
aaa
or
push
imul
aam
iret
sub
adc
push
in
fs
add
test
jb
pop
sti
mov
xchg
mov
xor
mov
mov
shlb
in
dec
lcall
dec
mov
shll
xor
shlb
jl,pt
xchg
pop
xchg
lahf
xchg
push
pushf
lods
cld
lds
lds
popf
xchg
lret
movsb
xchg
push
and
xchg
xor
cli
pop
imul
stc
pusha
out
outsl
sbb
or
pop
data16
xor
les
inc
cmp
mov
cmp
xor
inc
sub
inc
push
adc
jnp
xor
imul
out
stos
lcall
sub
xchg
inc
adc
insl
mov
push
sub
fldl
aas
leave
cmp
fsubrl
shlb
cmc
cmc
pop
mov
inc
xchg
bound
add
stc
nop
gs
loopne
mov
test
lret
aam
push
mov
dec
adc
rclb
sub
out
rclb
int3
and
mov
push
stos
add
jmp
push
shr
pop
shll
pop
insl
mov
in
and
dec
inc
in
push
dec
sub
cmc
jne
dec
lret
daa
flds
or
cmp
out
sub
lds
sub
mov
adc
sarl
pop
sub
imul
out
insb
insl
pop
test
xor
cmp
xor
dec
cli
lret
fmul
negb
jb
xchg
sbb
aaa
add
pop
xor
call
cmpb
fwait
pushf
test
lahf
mov
testl
rcrl
orb
mov
rolb
inc
scas
cmpb
repnz
jl
cmc
xchg
pop
add
push
or
push
lahf
add
clc
into
ret
fadds
jecxz
int
popa
push
mov
lea
stos
mov
sbb
mov
sub
sbb
loop
jmp
xchg
les
pop
and
mov
pop
mov
adcb
pushf
es
xchg
sbb
addr16
and
mov
dec
fistps
pop
insb
cmp
test
lcall
adc
fisttpl
jo
mov
push
iret
and
jae
jno
jo
sbb
lret
std
mov
fimuls
imul
jge
mov
mov
fstpl
sub
mov
pop
insl
stos
push
repz
fmuls
inc
pop
or
mov
lock
fsub
push
xor
popf
sahf
cmpsl
xlat
lea
pushf
xchg
jo
stos
in
das
out
repz
adc
mov
adc
arpl
fmull
lcall
pop
in
xchg
jg
xlat
rcr
outsl
xchg
sbb
sub
aad
jbe
sbb
and
fdivrl
lahf
pop
xchg
mov
lock
jecxz
mov
sti
out
mov
or
lret
repnz
pop
js
sbb
arpl
add
sbb
sub
jne
xchg
xchg
mov
xor
aam
adc
sbb
adc
dec
movsb
shrl
inc
jl
pop
sub
js
jmp
test
dec
xor
mov
loopne
bound
ljmp
insb
cmp
and
mov
mov
div
push
mov
add
into
ja
fistpll
push
dec
xchg
stc
pusha
xor
jno
mov
fldenv
outsb
lds
mov
mov
dec
jno
aas
xor
push
dec
mov
stos
push
adc
xchg
dec
out
cmc
jge
scas
ret
and
add
mov
cmp
std
iret
setae
push
repnz
mov
mov
lahf
adc
je
hlt
testl
mov
fnstcw
arpl
pushw
sub
push
in
xor
rcr
inc
in
and
jb
push
out
inc
stc
fwait
inc
aas
cmpl
arpl
cwtl
std
cli
out
enter
clc
mov
shlb
lods
div
add
sbb
cs
jns
adc
aam
adc
shll
call
daa
xlat
movsb
test
popf
int
enter
scas
xchg
jno
les
xchg
in
xchg
mov
mov
fadds
inc
loopne
or
out
inc
fimuls
cmpl
xchg
mov
mov
pushf
shr
xchg
jno
fxch
xchg
xor
xchg
lods
in
testb
mov
pop
and
add
les
sbb
xor
pop
jnp
fcmovnbe
lods
dec
insb
pop
pop
sbb
lret
jbe
add
push
cmp
adc
mov
add
adc
pop
cltd
mov
sahf
lret
inc
xchg
cmp
cli
in
imul
jecxz
jmp
leave
popa
cwtl
shlb
lahf
fs
cs
jb
les
pop
xchg
cmc
lret
jno
arpl
xchg
inc
dec
xorl
or
repnz
jg
divl
test
fiaddl
mov
mov
adc
jne
ljmp
add
aas
scas
and
ss
sysenter
int3
insb
ret
aad
loopne
xor
adc
dec
repnz
movb
jl
in
cmp
aaa
fs
pop
gs
xchg
xor
push
jbe
stos
rorb
push
cmpsl
cmp
or
pop
popf
xor
jmp
test
imul
cs
or
sbb
es
imul
inc
dec
pop
test
test
jp
or
ret
sub
mov
mov
adc
inc
push
lahf
push
or
mov
adc
lea
add
sahf
test
jno
pop
test
inc
arpl
mov
jno
cmp
push
jl
ds
int
cld
not
jae
xchg
int
stc
xlat
cmp
movsl
push
jp
jp
decl
sbbb
out
fimull
popf
es
push
into
popa
mov
inc
push
xchg
pop
cmpsl
ljmp
add
sub
xchg
mov
mov
adc
addr16
push
mov
mov
sub
mov
stc
sub
in
rcll
dec
imulb
fnstsw
insb
jl
add
xor
pusha
push
outsl
pushf
xor
aad
or
aad
cltd
aaa
and
push
lahf
roll
repz
jg
sbb
sub
loopne
inc
out
nop
lret
inc
cmpsb
pop
call
cmc
push
out
cmpl
mov
in
pop
lock
sub
dec
xchg
push
stc
addb
push
xchg
nop
shlb
lcall
outsb
cmp
sbb
add
ljmp
fadd
adc
call
cmp
pop
mov
jmp
cmpsl
inc
mov
stos
pop
jmp
mov
gs
push
lret
sti
sti
adc
add
dec
pop
adc
inc
mov
bound
mov
lahf
or
add
cmc
lods
cwtl
xchg
adc
pushf
je
push
push
and
clc
mov
lea
jp
scas
addr16
xorb
xor
lock
mov
mov
or
xchg
test
push
loope
ljmp
sub
dec
jecxz
mov
lods
filds
mov
pop
mov
pop
out
jmp
mov
pop
subl
movsb
jle
lds
popl
mov
repnz
daa
jge
call
xor
dec
lahf
insl
hlt
shll
movsl
inc
scas
sbb
dec
shll
divb
aas
push
push
mov
cmp
or
push
dec
or
loopne
or
ljmp
idiv
ret
add
jbe
popl
jmp
and
pcmpeqw
xchg
out
movsl
shld
add
outsl
aad
pop
mov
and
xchg
shrb
sub
cli
sub
sarl
xor
imul
push
into
sti
add
fcmovb
bswap
cmpsl
stc
xor
cmp
mov
adcl
dec
or
jg
jno
int
sub
fsubs
sbb
mov
testb
rcrb
div
stos
addr16
push
jge
pop
xchg
call
movb
mov
jp
xrstor
jae
jb
mull
sbb
lcall
mov
les
or
dec
and
mov
test
js
inc
pop
mov
mov
dec
lret
enter
or
inc
stos
jl
add
add
push
xor
xchg
leave
aad
xor
push
pop
and
int
cmp
mov
into
call
rclb
aad
adc
lcall
sbb
xchg
mov
icebp
and
imul
fs
pop
test
imul
add
cmp
inc
pop
ja
into
sbb
nop
mov
pop
insb
add
hlt
addl
jno
outsb
and
subb
mov
ret
inc
pop
es
aaa
test
or
pop
lds
cli
loope
js
in
inc
cltd
mov
mov
imul
mov
mov
dec
add
jl
adc
orl
pop
shll
inc
inc
jg
jns
mov
adc
adc
dec
inc
add
fs
and
rolb
pop
sub
dec
cmp
aam
jle
xor
fcomps
dec
cmp
fwait
pop
inc
mov
or
hlt
outsb
inc
push
mov
xor
lods
push
jnp
push
jle
dec
pop
jnp
shr
inc
inc
xchg
int
and
imul
pop
lds
addr16
inc
dec
and
fsubs
ret
test
ficomps
xchg
in
push
les
push
jmp
loopne
pop
dec
dec
loope
adc
in
sbb
push
cld
sub
scas
mov
and
jge
push
xchg
imul
bnd
xor
das
inc
cmpb
out
rcl
jecxz
enter
out
jnp
push
clc
mov
xchg
ja
daa
into
popf
rcrl
jnp
cmp
std
fs
cli
dec
mov
fwait
mov
sti
sbb
sbb
sbb
inc
gs
push
out
mov
sbb
out
pop
loope
mov
nop
rorl
mov
add
and
pop
mov
lahf
or
dec
or
xchg
mov
mov
xorb
fimuls
cmpsb
ja
icebp
repnz
ficomps
repnz
sbb
lea
jo
sub
xlat
sarb
push
inc
scas
les
push
dec
add
and
push
jno
in
pop
push
pop
push
arpl
js
in
cmp
stc
mov
cld
push
std
sbb
fadds
mov
xchg
xchg
pop
sbb
in
inc
ds
add
xchg
enter
mov
imul
aam
addr16
or
pusha
and
jmp
pop
stos
sbb
xchg
daa
fiadds
cld
call
aas
xchg
cs
mov
pop
sbb
enter
lds
xchg
jmp
dec
jmp
and
fsubs
ds
pop
mov
sbb
test
outsb
loop
dec
xchg
mov
adc
sbb
int
popf
sub
push
stc
xchg
mov
fcmovnbe
mov
fprem1
jb
sti
push
xchg
xor
iret
aas
pop
rcll
cmpsb
mov
movsl
cmovne
fcmovnu
xor
mov
roll
jl
jmp
ficompl
mov
movsb
adc
and
sbb
leave
pop
add
inc
rcl
cltd
sbb
fldcw
inc
hlt
mov
lock
and
mov
or
mov
pop
pop
or
push
and
fwait
aad
pushf
xorb
fcomip
lods
xor
or
push
pop
in
iretw
jecxz
mov
pop
out
cltd
mov
outsl
loope
inc
push
imul
sbb
adc
cmp
ss
mov
das
push
and
shll
loopne
out
dec
cmpsl
jb
cmp
xchg
out
hlt
loop
dec
push
or
mov
push
mov
jg
cmp
jg
scas
sub
es
mov
leave
shl
stos
out
fs
push
popf
arpl
enterw
arpl
or
clc
js
aaa
sub
int3
add
mov
xor
loop
xlat
stos
lahf
test
push
std
mov
xor
call
push
in
lods
icebp
fwait
scas
ja
push
mov
lods
add
sub
sub
sub
dec
popf
jns
scas
in
arpl
push
dec
ret
sbb
mov
adc
sbbb
push
sti
test
dec
sub
inc
mov
pop
cmpb
xchg
mov
or
ret
adc
fcom
shl
dec
mov
pop
imul
dec
xor
jecxz,pt
shll
mov
mov
cmp
mov
or
mov
dec
mov
movsb
fcoml
outsl
fldt
movsl
hlt
or
lahf
add
jle
scas
adcb
cmp
sbbl
push
gs
jb
pop
or
lea
adc
popf
test
inc
cmp
sub
aad
pop
fwait
lret
add
fcomps
orl
cltd
roll
andl
and
sbb
jne
xchg
adc
icebp
fsubr
int3
inc
test
out
inc
sahf
cld
scas
jne
inc
orb
jg
frstor
sub
jg
mov
in
test
pop
sub
insb
add
xchg
test
jnp
mov
xchg
or
lea
repnz
scas
aaa
mov
clc
test
mov
rorl
mov
push
dec
or
jbe
insl
mov
cmp
repz
fisubs
mov
outsl
or
hlt
sub
ljmp
mov
test
insl
pop
jg
cmp
das
pop
xchg
das
aam
inc
ret
cmp
mov
push
cs
into
mov
mov
pop
mov
outsl
movsl
call
ret
jl
dec
and
ljmp
out
mov
push
add
pop
mov
jbe
or
dec
ljmp
dec
sbb
xchg
mov
sbb
and
mov
sub
ja
test
lret
jne
jl
adc
xor
ss
dec
push
adc
out
scas
insl
daa
push
pop
pushl
add
jo
jge
dec
jae
aad
leave
fmulp
out
out
sub
cli
cmc
dec
rolb
push
pop
rcll
clc
mov
out
hlt
adc
push
test
sub
cli
push
sbb
and
xchg
adc
arpl
fmulp
out
into
push
test
jg
ret
sub
mov
push
std
pop
or
pusha
mov
xor
sbb
push
int3
or
xor
mov
scas
add
fs
add
jmp
add
push
pop
outsl
cmpsl
mov
test
lret
seta
fldcw
sbb
or
bound
add
pop
push
pop
out
mov
pushf
push
cwtl
mov
mov
loop
push
adc
sub
xor
cmp
push
mov
dec
or
pop
mov
repnz
rcl
sti
in
mov
outsl
jle
xlat
mov
mov
xchg
mov
std
cmp
and
mov
xchg
jmp
adc
adc
jnp
scas
into
jg
ss
pop
and
cmp
jle
fstl
js
ret
bound
fisubrl
notl
xlat
cwtl
ljmp
push
pop
pushl
mov
mov
imul
insl
jb
lods
push
push
idiv
cmp
xor
pop
into
mov
adc
scas
sbb
flds
sbb
fdivr
test
or
xor
in
push
leave
mov
je
pop
jae
hlt
fidivl
rclb
sbbl
and
faddl
cs
and
dec
sub
ds
xchg
xor
bound
fldl
hlt
and
mov
cmp
lods
inc
insl
arpl
inc
insb
call
test
add
jl
or
cs
mov
jo
pop
xchg
out
cmp
xchg
xor
int3
jne
fisubl
or
pop
out
addr16
insl
fdivr
cmp
push
pop
insb
test
cmp
push
roll
jmp
push
xlat
add
jecxz
push
inc
test
cs
mov
push
xchg
sbb
lods
mov
pushf
int3
mov
into
in
loope
mov
jne
mov
or
dec
add
xor
enter
dec
pop
cmp
jne
repnz
aaa
gs
in
adc
idivl
add
push
roll
lret
inc
jmp
lret
ret
outsl
arpl
je
mov
mov
int3
adc
popa
fwait
rorl
xor
or
pop
mov
or
outsb
pop
pushf
cmp
push
rcrb
add
xor
jg
notb
xchg
cmp
cmc
jl
addr16
lret
outsb
lods
sarl
out
test
push
jle
testl
es
pop
cmp
mov
pop
mov
xchg
jae
imul
sbb
sub
leave
and
in
out
in
add
add
fcompl
xchg
mov
inc
xor
js
iret
jge
xlat
mov
sbb
xchg
lahf
imul
lret
cmpsb
mov
xlat
movsl
jecxz
xchg
adc
inc
xchg
jne
push
test
nop
vmwrite
lret
mov
inc
mov
lods
std
loop
push
jp
pop
pop
pop
cmpsl
lods
imul
and
in
add
cmp
jge
jb
push
out
or
mov
inc
jae
add
push
dec
push
adc
sbb
cmp
notb
aas
into
cs
or
jo
aam
scas
loop
loop
jb
or
xor
sbb
mov
xchg
lock
testl
int3
xor
icebp
dec
movsb
out
adc
outsb
sarb
pop
loopne
sbb
je
mov
cs
push
mov
push
insb
rorl
clc
cmp
mov
inc
push
outsl
add
mov
loopne
xchg
jnp
pushf
add
mov
xor
jl
push
sub
out
fcmovu
test
outsl
cmpsb
in
ret
outsb
call
mov
arpl
ret
or
mov
cmc
enter
adc
loope
std
mov
sub
cwtl
xchg
lret
inc
outsb
fldl
sbb
inc
lahf
test
add
into
sarb
incl
shl
gs
adc
shll
pop
insl
shrl
adc
add
or
movb
hlt
pop
push
cs
pop
mov
outsb
mov
cli
and
and
mov
xchg
stos
jmp
push
dec
xchg
and
xor
inc
aad
in
clc
out
inc
mov
xor
add
lret
int3
addr16
inc
pop
out
sbb
aas
outsl
or
lret
xor
xchg
bound
sbbl
popa
mov
pop
shll
mov
test
sub
rcrl
xchg
rorb
or
inc
ja
shll
mov
into
pop
das
xchg
out
shlb
scas
in
outsb
adc
push
adc
cs
xor
stc
mov
popf
push
aad
mov
ret
and
enter
mov
mov
dec
sub
scas
addb
jg
in
loope
mov
testb
cmp
outsl
mov
std
jmp
sbb
mov
push
mov
movsb
sub
dec
sub
aam
mov
in
cmp
xchg
icebp
jno
and
fucomp
mov
and
and
and
jmp
xor
adc
imulb
jmp
call
fdivl
sub
sahf
repz
fisttps
fistpll
out
out
orb
push
sub
addl
test
mov
push
mov
insl
xlat
mov
jns
sbb
cmpsb
pop
fpatan
pop
mov
ljmp
cmp
bsr
clc
mov
xchg
push
cmp
test
inc
fidivrs
das
mov
out
mov
fisubrs
daa
ret
int3
dec
mov
add
jno
mov
div
les
cmp
sub
pop
inc
and
mov
mov
dec
mov
jg
or
dec
sbb
xor
push
and
mov
ss
mov
mov
or
test
lock
jb
jno
adc
out
das
dec
xchg
inc
mov
lret
pushf
mulb
xlat
js
mov
or
loopne
lods
daa
stos
pop
jns
jp
icebp
es
push
mov
push
das
or
or
cmp
popf
fbstp
add
fiaddl
sub
xchg
sti
insl
inc
insl
jo
cltd
insl
std
clc
in
push
insl
pop
js
sub
out
outsl
pop
insb
or
daa
inc
insl
adc
ljmp
or
xor
inc
cmpsl
push
jne
mov
inc
mov
inc
jbe
sbb
sbb
or
xchg
ret
outsb
outsl
lcall
cmc
sbb
inc
dec
pop
fsubl
jae
int3
cmp
int
jo
jg
jno
cmpsb
in
iret
scas
cmpsl
dec
lods
mov
testl
pop
sbb
insl
push
mov
icebp
jae
cltd
clc
movsl
ss
mov
cli
cld
aas
stc
jns
subb
xor
shlb
mov
adc
stos
inc
stos
jge
pop
add
pusha
mov
xor
mov
and
jg
int3
and
ljmp
push
mov
ljmp
test
jo
clc
mov
mov
negl
sub
sbb
adc
cli
xor
out
mov
dec
out
lret
push
fnstenv
cld
into
dec
jp
mov
lods
movsb
ret
popa
pop
mov
mov
mov
push
add
roll
test
lods
add
leave
mov
xchg
les
add
aaa
stos
std
rolb
add
push
loope
add
rol
and
cvtps2pi
rorl
pop
inc
cmc
pop
frstor
push
in
into
imul
dec
sub
mov
shl
adc
or
push
test
mov
mov
subb
mov
pop
movsl
dec
cmovb
push
or
sub
jnp
outsl
cltd
add
lret
gs
nop
adc
dec
pushf
test
out
iret
fisttpll
mov
movb
sub
jg
insb
out
jne
lods
sarl
xchg
cwtl
ficoml
gs
or
add
inc
cmp
iret
jns
lods
jns
popa
xchg
mov
pop
icebp
xor
ljmp
pop
cli
lods
mov
sub
insb
mov
gs
test
gs
jnp
sbb
xchg
jl
aaa
hlt
mov
pusha
sbb
xlat
adc
sub
lret
mov
pop
pop
inc
shll
stos
out
dec
out
pop
mov
or
xor
loopne
mov
pop
movsb
jmp
cwtl
pushf
add
pop
aas
pop
inc
xchg
push
adc
add
ret
leave
jg
aam
stc
push
aam
shll
js
mov
pop
sub
mov
or
jge
jp
cmp
or
mov
test
sbb
mov
push
xor
mov
cmp
in
int
sub
dec
push
arpl
add
xor
sub
std
jae
xor
dec
int
sbb
lcall
mov
jmp
pop
push
fldenv
mov
test
aas
dec
push
cmp
iret
or
and
insl
and
arpl
add
mov
or
clc
rorl
in
cmpsb
shr
sbb
mov
cmp
hlt
push
sub
mov
sub
lock
mov
inc
and
mov
mov
imul
and
jb,pn
xor
inc
cmc
push
mov
and
fnstenv
jg
and
mov
dec
jb
push
scas
cmp
dec
les
mov
inc
mov
mov
xor
frstor
addr16
movsl
mov
fsubs
idivb
dec
orb
lea
cmp
sub
fisubl
mov
aam
lock
cs
add
insb
pop
cwtl
mov
push
lods
inc
xchg
pop
leave
pop
faddl
fwait
adc
xchg
or
rclb
pop
mov
mov
xchg
dec
cwtl
fsubs
lds
lods
sbb
clc
pop
dec
int
lds
sub
outsl
jmp
inc
dec
or
push
push
dec
xchg
mov
push
add
mov
iret
stos
int3
sub
sahf
pop
jge
push
mov
push
cltd
add
decl
js
out
pop
add
jle
push
int3
test
inc
push
or
push
bndstx
ret
aas
dec
xor
dec
or
inc
in
pop
jnp
outsb
mov
jae
in
lcall
inc
mov
ret
mov
inc
inc
fisubrl
ss
cmpsb
bnd
xor
jns
inc
ss
mov
jle
inc
mov
dec
shrl
jne
cmp
mov
push
rorl
dec
je
adc
scas
popa
cmp
pop
and
nop
mov
push
and
cltd
mov
jo
loope
cmp
pusha
xor
sahf
lds
mov
xchg
jb
push
les
popf
xor
add
push
fcom
cwtl
sti
push
mov
add
addl
dec
ds
push
lret
pop
inc
push
and
in
xor
stos
dec
xchg
jmp
cld
aam
stos
aad
scas
imul
rcll
ljmp
jb
and
mov
sub
dec
rcrb
and
sahf
cmc
addr16
imul
push
cmpsl
cld
mov
inc
cmp
cmp
xchg
sbb
cmp
dec
cmc
fs
out
gs
pop
std
mov
xchg
ds
mov
and
pop
mov
xchg
and
ret
or
inc
aad
sbb
popf
sarb
icebp
or
les
and
notb
rorb
sbb
mov
push
lock
or
loope
inc
sbb
cmp
clc
jmp
outsb
out
mov
sub
stos
xchg
jg
aam
pushf
stos
push
xor
xchg
lods
jb
cmp
mov
jge
push
mov
xor
in
out
pop
mov
out
or
adc
movsl
xchg
mov
adc
add
push
push
push
jl
cwtl
inc
ljmp
inc
mov
adc
cmp
pop
jecxz
int3
pop
test
insb
insb
xlat
adc
rclb
add
mov
push
popf
test
lcall
adc
or
popf
mov
cmp
mov
insl
testb
in
sbb
sub
inc
lret
lahf
dec
lds
xchg
pop
mov
ret
ds
dec
aas
xchg
xor
xor
lret
clc
int
loope
data16
rcrl
nop
adc
stos
or
adc
mov
out
mov
mov
mov
add
push
addr16
push
jne
xor
or
jecxz
cmp
clc
fisubrs
popf
add
out
iret
aaa
cmpsb
inc
cmpsb
dec
and
mov
insl
outsb
mov
das
push
xchg
xlat
movsb
shl
inc
arpl
fldt
stc
and
test
jnp
fwait
test
pop
pop
std
jbe
dec
mov
lods
fdivr
push
cs
fstpl
push
dec
cmc
fldenv
fnsave
test
mov
pop
xor
cmp
xchg
jmp
push
mov
pop
cwtl
push
sbb
dec
jno
pop
jae
test
or
dec
pushf
sti
repnz
xchg
nop
push
mov
push
mov
and
shlb
jns
mov
push
and
aam
out
mov
mov
js
fcoml
mov
and
sarb
pop
test
push
outsl
or
nop
xchg
xchg
dec
cmp
adc
loope
outsb
sbb
cmp
or
jno
mov
add
xchg
adc
fdivl
inc
test
rcr
pop
shll
fbld
ffree
leave
js
xchg
jle
gs
fcomp
stos
loopne
cmc
sub
and
sahf
jne
push
sub
fwait
or
out
jg
mov
fidivl
jl
and
lret
add
adc
repz
jle
xor
inc
mov
sbb
inc
enter
scas
loop
data16
popf
cmp
test
int3
enter
pop
lods
rcrb
fbstp
add
outsb
sbb
lret
cmpb
repz
push
je
add
jne
lock
dec
fwait
pop
aad
inc
push
cli
push
enter
dec
mov
popf
jne,pt
stos
inc
test
push
insl
stos
int
pushf
mov
data16
call
fdivr
out
lret
iret
outsl
dec
fisttpl
jnp
pusha
jmp
pop
mov
mov
xchg
mov
jle
cltd
jle
data16
dec
lds
pop
sahf
test
jne
cmp
mov
in
dec
push
jne
rcr
fistps
sarb
push
mov
std
push
fisttpll
test
sbb
pop
mov
jmp
cmpl
loop
fcoms
cmp
sbb
sbb
mov
repnz
dec
in
pusha
sbb
adc
inc
push
or
aad
or
pop
mov
test
dec
gs
lds
adc
clc
jmp
xor
push
cltd
ja
pop
add
dec
test
cmp
imul
and
ficoml
inc
aas
dec
xchg
lock
in
xchg
movsb
and
xchg
pop
stos
out
sub
or
lods
mov
push
inc
cmp
dec
loopne
dec
ror
jp
adc
hlt
mov
ja
pushf
and
dec
sti
scas
jae
idivl
jns
mov
mov
xchg
xchg
int
jae
sbbb
std
mov
mov
mov
sub
sub
repnz
add
andl
pop
cmp
mov
pop
jmp
ja
sbb
rcl
sti
iret
ret
movsl
mov
lcall
cmpsb
mov
mov
std
jl
push
cmp
add
jb
adc
xchg
adc
popa
xchg
fsubs
ljmp
dec
arpl
sbb
es
cmp
or
nop
cmp
repz
or
sub
xchg
inc
lcall
into
adc
or
out
roll
sbb
repnz
out
mov
dec
mov
pop
push
push
into
or
sbb
push
loope
mov
les
ret
dec
dec
clc
mov
and
sub
cmpb
stc
pop
push
hlt
ret
push
in
mov
shrb
fcomps
ds
jl
and
dec
enter
sbb
scas
and
mov
insb
test
inc
and
cmp
pop
daa
fdiv
and
fmuls
dec
daa
sub
inc
pop
cmp
cld
dec
cmp
fdivp
and
xchg
mov
mov
adc
mov
dec
inc
sub
cwtl
jnp
shrb
stc
sbb
push
lea
or
xor
loope
xchg
mov
sub
enter
mov
mov
stos
cmp
int3
push
bound
and
adcl
das
sbb
push
imul
bound
andl
sub
testb
arpl
add
sbb
mov
jp
icebp
sbb
push
jecxz
pop
pop
idivb
inc
lock
lahf
movsl
mov
mov
xor
push
cmc
push
lret
or
ss
das
lea
sti
ret
dec
inc
loope
cld
dec
and
xor
cwtl
xchg
lds
push
mov
mov
or
fst
jb
jae,pt
cmp
xchg
push
adc
mov
adc
mov
cmp
stc
faddl
daa
test
lahf
or
cltd
dec
mov
push
pop
and
insb
pop
pop
movsl
add
outsb
shr
jne
ja
in
mov
inc
into
gs
mov
daa
sbb
sbb
cwtl
cmpsl
shll
mov
imul
jmp
sbb
fstpl
dec
mov
ja
lret
inc
sub
sbb
inc
add
stc
pop
sar
add
jno
mov
lods
test
stos
mov
inc
sub
and
icebp
dec
xor
nop
rol
in
jo
jns
adc
popf
sub
into
jne
xlat
and
aad
push
xlat
or
lds
push
rcpps
adc
xor
imul
test
out
and
jmp
daa
cmp
out
outsb
xchg
in
push
arpl
jb
adc
iret
imul
or
dec
dec
rcrl
sbb
fsin
add
stos
inc
lods
iret
adc
or
cltd
and
movsl
mov
clc
mov
arpl
in
inc
repnz
lock
jns
inc
add
pusha
hlt
fwait
das
push
cmp
int
xchg
dec
inc
xor
and
inc
dec
data16
ds
out
cmc
pop
stos
pop
in
xchg
adc
adc
sbb
cli
mov
inc
stos
mov
inc
test
test
data16
dec
call
sub
dec
push
lock
aad
dec
inc
cmp
lock
fwait
adc
imul
inc
push
mov
adc
nop
add
mov
lcall
lret
mov
testb
push
stos
xor
jbe
xor
out
pop
out
push
mull
add
dec
pop
dec
dec
adc
call
adc
xchg
bound
xchg
jbe
xchg
nop
sbb
mov
add
in
jbe
pop
into
arpl
lock
lock
jne
inc
jecxz
cli
scas
popf
xor
clc
fisubl
fsubrl
push
fcmovb
in
stc
fisubrl
fmull
sahf
cmp
sti
dec
mov
out
test
cmpsb
cli
push
and
cmp
int
adc
pushf
sub
sub
mov
ds
push
jno
sub
nop
lods
xlat
xor
stos
xor
fs
mov
jl
aam
ret
mov
xor
je
lcall
data16
insb
stc
xchg
movsl
loopne
mov
pop
inc
mov
fildll
repz
jo
mov
mov
out
mov
fstps
mov
jo
jbe
adc
jge
sub
ficompl
sub
fisttps
and
sub
leave
xchg
test
pop
dec
int
fstpt
ljmp
jne
add
nop
iret
cli
out
loopne
jl
or
inc
or
fldcw
sbb
push
pop
fimuls
dec
mov
xchg
push
ror
xchg
and
xchg
adc
shlb
xchg
push
iret
push
mov
mov
aad
cmpsb
xchg
jb
push
mov
outsb
xor
cld
sub
fs
cmc
add
jno
sub
mov
stc
lret
fdivs
sti
sbbl
inc
pop
pop
adc
add
shll
pop
test
adc
or
mov
clc
pop
aad
pop
add
movsb
out
sti
shl
cmp
lea
xchg
out
ficompl
cmpsl
imul
mov
sub
xchg
push
fwait
repnz
xchg
inc
ljmp
ljmp
mov
add
pop
inc
push
mull
xor
call
inc
sbb
push
xor
push
test
loopne
jmp
sbb
roll
loope
arpl
xchg
icebp
sub
inc
cmp
shlb
out
scas
movsb
sbb
jnp
xor
ret
xor
push
cs
hlt
cwtl
int
mov
mov
push
mov
add
mov
call
lods
stos
or
imul
hlt
loopne
test
xor
pop
adc
pop
jb
inc
ja
xchg
xorb
lock
cmp
pop
fldenv
sub
imul
adc
pop
and
bound
push
adc
mov
push
xor
fidivl
fnstcw
dec
jae
sub
std
out
iret
sub
lea
mov
in
push
push
setb
inc
mov
mov
add
int
repz
cli
mov
mov
mov
xor
xchg
insl
movsl
xchg
add
aaa
mov
and
adc
mov
lahf
and
bound
cmp
and
adc
test
test
test
popl
mov
in
lea
insb
dec
test
xchg
out
repnz
fldt
lds
orl
js
repz
shll
outsl
fwait
jp
pop
ss
enter
int3
cli
cmp
sbb
lahf
mov
xor
add
jge
mov
xlat
pop
jbe
fidivrl
pop
xor
xchg
jmp
ds
outsb
hlt
data16
cmpl
mov
dec
add
sarb
loop
mov
push
lahf
or
push
lahf
or
jbe
or
mov
push
pop
call
hlt
xchg
hlt
sub
sti
call
repz
mov
mov
pop
call
cmp
sbb
adc
fldcw
mov
mov
dec
das
or
adc
cmpsb
and
adc
jne
mov
mov
mov
stc
xor
sbb
fisttps
fisttpl
shlb
clc
adc
loope
in
inc
aad
pop
jno
xlat
inc
in
mov
adc
jp
cwtl
clc
hlt
pop
jnp
jg
repz
nop
rol
xchg
js
cmp
mov
movsb
add
popf
repnz
aas
out
push
mov
xchg
jmp
rorb
outsb
cmp
lods
jl
fldcw
xor
push
loop
xor
rolb
xchg
pop
cmp
negb
fwait
test
hlt
cmp
cmp
sub
pop
insl
icebp
cmp
ljmp
je
mov
fucomi
sub
xor
mov
rcrl
ret
cmp
mov
aaa
int3
outsl
lea
sbb
pop
mov
mov
insb
jge
mov
jecxz
or
mov
lea
pop
cmpb
in
icebp
jmp
jmp
add
cmp
into
hlt
dec
cmpxchg
or
vmwrite
roll
subl
add
cmp
mov
dec
les
mov
in
push
jno
cmp
mov
lock
add
js
xor
cwtl
cltd
data16
dec
lret
mov
insl
sub
xchg
xchg
cld
add
scas
push
mov
andb
mov
dec
ds
or
lret
test
insl
out
sbb
imul
bound
stos
cmp
mov
mov
inc
lahf
xchg
arpl
mov
xchg
jns
mov
mov
scas
aam
push
lahf
insl
mov
sub
test
xchg
pop
inc
cmpsl
xor
pop
mov
ja
movsl
imul
push
push
stos
hlt
sbb
push
sub
adc
mov
adc
cld
ljmp
je
mov
int3
das
fadds
pop
call
dec
sub
sbb
push
mov
push
ja
in
jl
jno
scas
adc
jb
mov
lcall
enter
outsb
cmpsb
andl
sub
nop
inc
leave
cmp
sbbb
out
lahf
xchg
shlb
mov
test
inc
and
hlt
push
clc
mov
push
int3
push
shrl
cld
mov
stos
mov
scas
pop
mov
sarb
lahf
ss
fwait
sub
out
push
pop
jle
shll
jns
popf
popf
add
repz
jae
fcomps
fs
pop
aad
scas
scas
push
insb
aam
or
xchg
imul
pop
stos
dec
aas
pop
rcrw
and
cmp
cmpsb
leave
mov
fildll
mov
sahf
cmp
jae
icebp
add
int
mov
sub
dec
shr
mov
add
imul
sub
hlt
lock
add
pop
clts
outsb
arpl
outsl
lret
test
inc
loope
dec
xor
pushf
or
jp
ror
mov
push
arpl
sbb
leave
test
dec
loope
or
mov
xor
es
lods
je
inc
xlat
and
in
xchg
fisttpll
xchg
sub
or
push
mov
pop
fwait
mov
sti
add
cmpsb
jb
push
pushl
mov
rcrb
mov
xorl
bound
and
pop
jne
aad
dec
jl
jg
mov
out
mov
or
adc
xchg
pop
sarb
dec
adc
pop
xchg
jo
test
or
sarl
dec
lds
popa
imul
push
pop
xchg
popf
or
imul
scas
stos
sbb
jecxz
xchg
lcall
test
add
dec
loope
or
icebp
aam
sbbb
lods
fcompl
cmp
mov
sub
popf
mov
fwait
lcall
ret
mov
lahf
and
xchg
enter
ja
movsl
cmc
setl
fs
xor
push
xchg
fdivr
push
xor
ljmp
and
into
jl
jle
rclb
jge
or
jge,pt
and
mov
jmp
loope
testb
lods
push
push
xor
scas
mov
pop
dec
cmpsb
mov
jns
jge
insl
fwait
scas
movsl
sub
in
mov
shlb
xor
rclb
sbb
mov
push
mov
cwtl
pop
cmp
lea
cmpsb
jns
cmc
or
xor
aad
push
jb
xchg
sub
pop
xor
push
testl
sbb
xchg
popf
xor
jmp
gs
scas
imul
sbb
lret
inc
repz
or
mov
mov
jno
xchg
inc
ds
and
and
fs
sbb
add
mov
out
ret
cmp
or
adc
sahf
xchg
jmp
mov
jle
jl
cmp
fisubrl
mov
xchg
jnp
inc
inc
mov
push
jp
sub
dec
test
mov
mov
xor
mov
pop
xchg
add
in
ret
pop
mov
xchg
lahf
sti
ret
adc
sub
xor
ret
outsb
pop
cwtl
or
mov
movsl
xchg
and
sbb
incb
data16
dec
enter
pushf
addr16
sbb
jae
out
or
rcrb
data16
cmc
jle
inc
outsb
push
mov
fisubrs
jle
leave
add
js
filds
jb
adc
push
xchg
pusha
sbbl
popw
repnz
inc
sbb
loopne,pt
push
xor
les
in
jmp
scas
mov
cmp
mov
xchg
inc
inc
or
lret
jecxz
sbb
sub
push
scas
sub
outsl
mov
adc
int3
sbbl
adc
jb
daa
or
or
test
mov
add
dec
mov
and
fadds
xchg
add
mov
adc
aam
subb
mov
pop
ljmp
lahf
aaa
fwait
add
sahf
int3
xor
xchg
xor
add
movsb
or
xor
xchg
and
fistpll
pop
fwait
dec
loope
and
push
push
pop
or
dec
sub
pushf
lret
insb
fdiv
stos
sub
mov
mov
adc
mov
sub
fimuls
leave
or
outsb
push
dec
fwait
adc
sub
xor
push
push
rclb
shlb
lcall
ret
add
xor
dec
lret
aas
roll
cmp
mov
pop
adc
loope
daa
xchg
mov
js
out
aaa
jnp
and
sahf
iret
mov
test
sub
je
push
mov
inc
mov
ja
mov
sahf
push
imul
roll
or
data16
dec
push
ret
test
fcmovnbe
out
jmp
fwait
dec
mov
ljmp
xrelease
pop
insl
out
mov
add
sbb
je
or
imul
pop
fstpt
fsts
dec
cmp
jbe
aas
sub
dec
push
cmc
mov
sbb
and
das
fists
sub
mov
shrb
push
push
add
sti
ss
outsl
pop
cwtl
fnstsw
sbb
ret
dec
lock
cmp
mov
sub
or
xchg
mov
lock
std
fadd
out
push
jmp
mov
cmp
xchg
gs
cmp
pusha
or
out
xor
mov
imul
repz
je
mov
rclb
sbb
and
cltd
cli
xchg
mov
loopne
jo
mov
out
fsubrs
aaa
push
and
mov
pop
and
arpl
xor
xor
lcall
in
cmpsb
and
cmp
cmp
ss
push
insb
dec
mov
repnz
mov
sub
adc
pop
sbb
int3
dec
shlb
mov
adc
or
jb
sub
xchg
or
jp
scas
gs
out
mov
dec
sub
mov
xor
xchg
scas
or
inc
aam
push
bound
xchg
loopne
ja
rorb
rcrb
out
jne
repnz
xorb
inc
and
mov
xor
sbb
testl
push
aad
sti
out
subb
sbb
repnz
repz
call
pop
jp
fcmovu
inc
rclb
insb
in
jae
outsb
std
sub
fsubrl
sbb
push
enter
ret
xchg
fsubl
lea
cmpsb
xchg
lods
out
push
dec
imul
stos
nop
lahf
add
mov
pop
cltd
pop
lcall
jb
xor
jb
jmp
sar
enter
or
jecxz
mov
push
or
aaa
or
dec
adc
fdivrl
mov
sub
nop
jmp
jle
cwtl
mov
or
mov
and
out
movsl
mov
ljmp
xor
frstor
pop
mov
dec
addr16
or
push
cmpsb
orb
cmp
into
inc
push
dec
fldenv
xor
stc
pop
lcall
or
pop
std
jmp
shrl
xlat
jl
mov
loopne
pop
fprem
pop
stc
in
cmc
mov
mov
jp
add
cmp
xchg
xor
mov
cmp
in
addr16
mov
mov
xchg
dec
pop
pop
jl
or
mov
outsl
test
or
and
add
scas
std
adc
in
sbb
fisttpl
ret
cmp
inc
sbb
add
or
popf
pusha
pop
ds
lret
or
xor
pop
xchg
ret
jg
es
jns
insb
aad
insl
aas
ficoms
sbb
mov
dec
pop
and
mov
test
loopne
cmp
cmp
lret
mov
pop
mov
jns
adc
les
inc
sub
inc
xor
lds
jns
push
and
xor
stos
test
adc
xor
inc
or
lock
nop
cli
pop
imul
call
leave
nop
scas
jle
mov
sub
dec
addr16
cmp
cmc
fistpll
sbb
xor
fadd
mov
push
mov
scas
subb
mov
xor
adc
jge
sarl
push
cmp
fldenv
nop
fistl
pop
testl
popa
arpl
incb
inc
add
cmp
cmp
dec
sbb
add
lret
mov
jno
repnz
decb
pop
scas
xchg
or
sbb
jae
mov
add
jnp
fildll
ss
test
sbbl
cmpsb
jg
mov
arpl
hlt
pop
cmp
and
sub
xor
in
scas
pop
push
into
test
fistpll
cld
outsl
sarl
or
scas
mov
das
jmp
loopne
rcll
fldl
addl
std
fstpl
arpl
push
sbb
push
movl
into
cmp
fstpt
mov
aad
or
shrb
mov
cmp
push
call
repnz
xlat
mov
jmp
mov
and
xchg
mov
mov
scas
pusha
jmp
mov
xchg
sbb
mov
fistpll
adc
xor
jo
push
lock
mov
fmuls
pop
jo
rorl
in
adc
dec
dec
add
sti
dec
or
xchg
ficoml
xchg
push
xor
mov
fidivl
das
loopne
cli
es
sbb
and
add
fs
adc
les
hlt
lret
sbbb
mov
or
jne
sbb
imul
daa
hlt
inc
cwtl
pusha
insb
jb
mov
jbe
sbb
hlt
inc
adc
lcall
call
les
xchg
mov
call
adc
iret
or
cltd
pop
in
mov
push
mov
dec
imul
sub
out
or
test
pop
ficomps
cmovle
popa
xchg
mov
repnz
adc
cli
in
cmp
pushf
dec
or
data16
shl
push
add
push
rclb
cmp
xchg
jmp
xor
pop
lcall
andb
push
aad
push
test
jnp
xlat
mov
popf
inc
sbb
xor
ficompl
push
out
dec
xor
orl
sub
adc
ds
test
test
test
test
xor
xor
or
repz
ss
repz
mov
or
frstor
les
mov
das
sub
adc
cmp
lods
add
xchg
loope
and
arpl
cld
stos
outsl
scas
push
popf
cmp
sub
fwait
pop
pop
adc
and
scas
les
leave
imul
add
insb
inc
adc
xchg
add
aam
push
sbb
mov
enter
js
or
adc
shl
pop
push
out
iret
mov
xchg
cmc
xor
mov
clc
jecxz
xchg
cmp
add
mov
jae
sub
sbb
pop
or
inc
shl
and
mov
or
adc
pop
jo
rcl
inc
stc
das
shr
sub
fiadds
popf
mov
out
imul
mov
mov
sbb
xor
mov
cmpsb
rclw
push
movsb
xchg
repz
out
mov
add
add
in
adc
into
loopne
adc
loop
call
nop
test
pop
mov
cmp
mov
and
in
scas
add
mov
push
out
pop
mov
lea
loopne
mov
repnz
aas
jg
fwait
sub
xchg
jnp
and
lea
jns
jno
inc
and
int
fisttps
iret
arpl
cwtl
mov
push
arpl
dec
mov
inc
aas
test
int3
cmp
pop
rolb
int3
cli
cltd
sub
pop
and
in
fadds
dec
inc
stc
pop
jno
frstor
scas
sub
sub
jecxz
sbb
sub
push
jecxz
cwtl
sub
rcrl
adc
and
xor
out
push
push
imul
fidivrl
in
push
fnstsw
push
cmp
fimull
and
xor
xchg
adc
popa
or
movsb
in
addl
mov
loopne
jns
loopne
xlat
sbb
int3
inc
mov
nop
jg
xor
sub
pop
leave
jns
push
jge
xchg
out
and
mov
inc
adc
xor
xorl
add
push
xor
xchg
subb
out
inc
popa
xchg
pushf
out
push
dec
xlat
dec
enter
in
or
pop
add
inc
mov
test
fidivs
pop
stc
mov
and
outsb
dec
pop
cmc
mov
int
xor
xchg
icebp
jmp
xchg
ja
push
scas
fnstenv
dec
mov
or
enter
ret
rcll
xor
xor
push
cmp
jno
sbb
call
mov
aam
pop
lods
loope
mov
fld1
adc
pop
dec
xchg
add
cmp
std
xor
mov
push
arpl
and
dec
cmc
mov
out
test
mov
mov
and
inc
xchg
mov
and
sbb
push
notl
push
push
hlt
or
decl
mov
mov
mov
cmpl
std
jnp
int
fsubrp
xor
in
clc
dec
insb
sbb
ds
mov
sbb
js
cmp
push
push
test
fwait
sbb
inc
in
and
xor
push
add
aas
pop
vmovhlps
jo
push
mov
mov
addr16
je
jmp
cltd
mov
cltd
repz
jl
pop
clc
lahf
fidivs
xchg
or
notl
mov
jp
jb
or
mov
xchg
loope
jo
sbb
mov
push
push
stos
test
jb
inc
jp
sti
aaa
movsl
add
mov
sub
and
xchg
rol
inc
bswap
sbb
int
xor
pop
repnz
add
lods
or
adc
jne
dec
mov
dec
fwait
jg
push
aam
or
push
push
mov
mov
pop
mov
push
shlb
cmp
aam
sbb
andl
mov
sahf
pushf
lcall
in
adc
aam
lret
dec
fcmovb
cmpsl
dec
push
loope
lods
and
ss
or
sub
adc
ficoml
fnstsw
mov
inc
call
mov
loope
aas
dec
inc
jg
jnp
mov
or
sbb
movsb
xchg
std
cmc
xchg
mov
adc
add
pop
leave
and
stos
decb
add
pop
gs
cli
dec
add
cli
lods
sub
mov
mov
cmp
mov
jno
push
pop
xor
out
xor
mov
jmp
mov
pop
xor
arpl
inc
mov
das
stc
push
or
mov
xchg
pop
loopne
adc
ja
out
test
and
rcll
ljmp
push
push
js
outsl
mov
lcall
fiaddl
int
out
mov
mov
aad
or
frstor
shrb
test
scas
out
pop
mov
cmp
add
add
jnp
arpl
add
mov
and
cmp
out
adc
test
xor
lret
js
outsb
pop
out
out
call
fucom
fisubs
and
inc
pop
mov
out
stos
add
pop
enter
imul
jbe
arpl
pushf
in
add
dec
loop
mov
shll
or
adc
xor
lea
or
jb
dec
sbb
xor
adc
pop
xor
pop
in
sbb
xchg
mov
mov
movsl
fstps
mov
mov
into
inc
lcall
pop
ret
imul
xchg
lock
or
insl
hlt
sub
loop
lods
mov
scas
pop
pop
out
fadd
fsubrl
inc
paddq
das
int
outsb
xchg
inc
cmp
roll
inc
mov
dec
jecxz
mov
push
jno
sti
rorl
push
lods
inc
or
nop
adc
and
gs
aad
shlb
bound
movsb
fidivl
xor
and
xor
add
sbb
sub
in
sbb
pushf
adc
test
jo
adc
cmp
stc
lea
lock
xchg
fnstenv
test
jmp
push
stos
cmp
in
fcoml
pop
mov
cs
cltd
lea
xchg
jne
xor
jecxz
cmc
dec
mov
sarb
cld
inc
filds
sahf
push
sti
rcr
adc
jge
xor
push
sub
xchg
adc
ficompl
aam
pop
popf
xorb
pop
mov
mov
sub
inc
into
jl
add
xchg
jecxz
fcomps
pop
mov
jb
test
cwtl
fidivs
xor
dec
xor
xchg
hlt
lds
insl
push
sbb
movsb
push
pop
hlt
out
push
das
or
in
enter
cs
mov
mov
pusha
in
std
xor
jne
movsl
push
ljmp
mov
sub
mov
repz
aam
imul
aad
loop
and
call
mov
mov
or
cld
xor
lods
adc
mov
clc
jl
gs
daa
adc
xor
fs
add
and
ljmp
jecxz
mov
pop
mov
mov
dec
sarl
jns
popf
inc
or
ja
or
outsb
mov
and
inc
jmp
sub
push
jmp
mov
test
mov
push
jp
xor
cmc
jo
xor
jbe
call
dec
movsb
jbe
pop
xor
scas
push
dec
sub
fidivrl
or
jnp
push
pop
xor
xlat
dec
loopne
out
loop
cltd
fdivl
mov
xor
jb
mov
lods
add
mov
insl
and
mov
jle
dec
xor
sub
mov
pop
mov
orl
sub
sbb
aam
test
and
sub
cmp
lcall
pop
xor
mov
adc
cmp
xchg
sti
pushf
and
xchg
and
mov
jae
pop
adc
js
out
inc
insl
pop
mov
sbb
sub
add
in
lds
or
inc
sbb
push
in
in
aas
mov
nop
into
and
adc
sub
sub
xor
int3
push
xor
sti
dec
adc
pop
add
popf
or
sub
shr
insl
gs
insb
testl
test
cmp
or
popf
shrl
pop
sbb
add
fs
enter
int
mov
mov
subl
push
sbb
xchg
and
test
xor
movsb
and
mov
xchg
mov
or
dec
xchg
jb
mov
jnp
push
sbb
aam
cmc
lock
cmpsb
lock
mov
insl
popa
rorb
mov
sahf
lods
fistl
mov
ret
decb
testb
enter
icebp
xchg
leave
repz
leave
mov
ficomps
leave
in
movsb
mov
dec
push
repnz
cmc
std
rcl
inc
ret
int
loope
cmp
mov
mov
das
sti
sbb
scas
sub
pop
jb
mov
fldcw
inc
push
or
mov
sbb
mov
or
sub
push
jmp
ds
inc
and
rcrb
xor
cli
sub
mov
cwtl
lcall
push
pop
mov
icebp
stos
jb
mov
bound
cmp
xchg
mov
adc
dec
clc
jno
int
xchg
mov
js
js
andl
scas
idiv
inc
push
call
xsha256
cmpsb
xchg
clc
inc
jle
hlt
lods
pop
sub
mov
xor
mov
push
in
and
in
pop
mov
cmpsb
popa
imul
lahf
stc
lock
sbb
push
jbe
mov
mov
push
xchg
xchg
mov
cmc
cmp
sarl
imul
cmp
pushf
sbb
cmp
in
pop
inc
mov
into
out
push
add
ret
xchg
mov
mov
pop
lcall
xchg
and
xchg
or
shl
inc
fwait
jle
test
insb
fistpl
sbb
in
fisubrl
xchg
xor
out
lret
and
aaa
into
fdivs
popf
mov
xchg
push
cs
mov
or
ret
ja
sub
fsts
adc
out
lcall
pushf
xor
jmp
xor
aaa
addr16
jo
movq
jl
or
cmp
pop
pop
mov
inc
xchg
stos
mulb
mov
fadd
sub
push
mov
mov
cltd
shll
fadds
jnp
dec
cmc
mov
mov
mov
outsl
rcr
repz
push
fcomp
ret
push
insl
aaa
insb
iret
les
shll
pop
add
outsb
jmp
sub
xchg
mov
adc
xor
dec
sbb
cli
inc
mov
xor
jns
mov
cs
inc
sar
or
leave
std
int3
cmp
sbbb
pop
mov
xorb
pop
lods
add
jg
mov
xchg
pusha
xchg
enter
jmp
out
sbb
arpl
nop
dec
jo
sbb
sub
xchg
sub
add
adc
xlat
xchg
cli
pop
ja
fsubrs
cmp
add
pop
xchg
cmp
icebp
mov
inc
lods
into
jnp
popf
je
int3
inc
ret
aam
adc
mov
cmc
cltd
aam
out
dec
sahf
mov
lret
xchg
mov
push
rolb
test
or
shrl
push
divb
xchg
ret
or
aad
dec
insb
cwtl
dec
jne
outsl
cs
push
rolb
push
jno
loop
lret
pop
int
xor
xchg
je
ds
enter
sub
pop
sti
les
push
fisubs
arpl
xor
fdivrs
pop
leave
jnp
roll
add
aam
jmp
outsb
call
sbb
jle
ret
pop
sub
jo
sub
sbb
sub
mov
mov
and
test
out
into
sbb
test
loope
out
mov
repz
test
pop
xchg
cwtl
xor
dec
xor
enter
stos
out
in
add
lea
jo
out
push
sti
mov
lahf
in
xor
lcall
repnz
xchg
ss
mov
cli
ja
imul
jae
fcompl
lret
jmp
add
add
push
xor
push
stos
sbb
mov
out
cld
aad
sub
imul
lcall
push
dec
fldl
xor
dec
into
xchg
pop
mov
jns
push
mov
mov
ret
rolb
mov
mov
and
push
call
repnz
add
push
mov
or
dec
jg
lcall
mov
cmp
dec
daa
push
push
sbb
xchg
enter
lods
inc
pop
shrb
cmpsb
ds
xor
mov
nop
arpl
sbb
int
push
ror
push
fcompl
sbb
movsl
testb
movsb
mov
test
push
mov
mov
out
gs
out
sbb
jne
inc
in
sub
ss
sti
out
sarl
or
mov
fwait
int
adcl
xchg
xchg
mov
mov
xchg
or
sub
shrl
das
cli
adc
mov
sahf
lahf
jp
hlt
sub
xchg
xchg
jo
xor
mov
out
cmpsl
jb
xor
jmp
or
sub
xor
lds
andl
test
lcall
add
arpl
sub
push
pushf
or
mov
outsl
cld
sbb
mov
add
add
and
scas
adc
push
es
repz
ret
loopne
stos
mov
jbe
xlat
push
jecxz
aaa
pop
mov
add
pop
jp
dec
gs
aaa
or
lret
xlat
adc
xor
xchg
nop
sub
add
shl
andb
push
lea
lahf
je
andb
adc
jp
outsl
add
data16
fwait
aad
ficoml
add
lds
rcll
pop
push
aas
and
dec
ss
mov
pop
jl
push
pusha
mov
lods
insb
out
sbb
nop
mov
pop
dec
cmp
aam
mov
mov
in
pand
mov
xor
and
mov
jns
cmp
or
push
mov
jecxz
test
add
addr16
lds
xchg
jl
sbb
dec
mov
enter
pop
fnstenv
movsb
loope
inc
je
mov
dec
pop
push
and
pop
add
jmp
mov
push
out
mov
rorl
jbe
pop
fldl
imul
jno
scas
push
mov
out
aas
push
xor
mov
enter
rcrl
pushf
xor
je
mov
jle
testl
and
xchg
dec
adc
push
fiadds
std
popf
mov
lds
les
cltd
pop
add
jbe
mov
ss
gs
inc
out
push
in
in
aam
loope
mov
pop
push
sub
cmp
xor
sbb
dec
out
cmp
imul
stos
push
sbb
test
or
fwait
lcall
add
sub
inc
xchg
dec
cli
mov
sti
mov
in
imul
ljmp
int3
sbb
dec
ds
ljmp
ret
mov
jp
sbb
pop
js
jg
xchg
dec
mov
shl
mov
cld
cmp
shlb
cwtl
imulb
scas
daa
outsl
lahf
jp
dec
add
pop
clc
xorb
js
xchg
in
cli
andb
lahf
gs
lret
ljmp
mov
iret
jg
sub
ljmp
pop
or
loop
imul
mov
push
mov
mov
shrl
mov
adc
jecxz
test
xor
inc
pusha
mov
fwait
mov
cmpb
in
movsl
inc
and
loop
xchg
push
movsb
add
push
scas
fwait
ja
sub
sbb
fisubrs
pop
inc
jg
sahf
lock
jl
addr16
jle
dec
in
push
xor
int3
dec
sti
or
arpl
push
xorl
xor
fnstcw
pop
add
cmp
cwtl
fsubrl
pop
aas
gs
rcrl
pop
cs
out
pop
cmpsb
sbb
out
jg
in
pushf
ja
or
or
xchg
fisttps
push
mov
sub
cwtd
test
and
lahf
int
push
fisubrl
mov
aam
add
xlat
cmp
shll
inc
mov
arpl
dec
xchg
out
imul
add
nop
orb
and
adc
lcall
aad
ljmp
sbb
test
sub
popa
ret
and
icebp
or
arpl
cmovne
aad
or
adc
jl
jp
xchg
insl
push
sub
aam
mul
into
test
into
fs
mov
lret
int3
adc
xlat
cmp
mov
ret
jb
dec
shll
cmp
pop
sti
sbb
out
push
scas
aas
movsb
cmpsb
sti
mov
or
fwait
sub
mov
or
jae
sarb
popa
leave
fs
dec
insb
fisubrs
stos
jne
jns
mov
push
pop
pop
addl
or
xchg
inc
adc
ret
loopne
mov
pop
sub
test
cli
js
or
je
rolb
int3
mov
cmp
mov
sub
es
cmpsb
jne
and
adc
pushf
js
lret
pop
adc
enter
js
push
mov
xor
xchg
cs
inc
jmp
sbb
cmp
or
fidivrl
dec
ss
pcmpeqb
scas
lret
cmp
sub
shll
cmpsl
ret
mov
fadd
jno
cs
ret
adcb
xchg
dec
jo
loopne
and
sbb
ljmp
shr
in
push
cmc
jle
push
clc
xor
sbb
jnp
jle
lds
lds
stos
push
xor
jl
mov
mov
or
adc
mov
es
ja
mov
cmp
insl
ret
aad
add
cmp
stos
data16
loopne
call
add
je
test
adc
aas
jnp
sbb
dec
sub
lahf
pusha
mov
test
mov
and
sahf
std
push
in
push
cmp
inc
mov
pop
loop
or
xchg
sarb
pop
push
into
lcall
mov
pop
ret
inc
push
adc
xorl
add
inc
lret
add
pop
and
jns
repnz
mov
push
adc
in
and
lds
mov
clc
lret
pop
mov
pop
push
and
jmp
imul
inc
inc
dec
mov
push
mov
js
pop
add
ss
xor
sub
sub
push
cmpl
push
mov
js
scas
xchg
pop
cmc
or
dec
ljmp
cmp
sbb
cmp
test
pop
or
mov
ss
mov
cmc
add
dec
or
insb
inc
lret
arpl
stc
adc
add
push
incb
mov
mov
daa
push
movsl
mov
jg
mov
ret
lock
sar
lods
cmp
or
shll
pushf
dec
movsl
daa
arpl
xchg
mov
sbb
pop
or
mov
popf
div
mov
neg
dec
push
rcll
mov
loope
std
rol
movsb
or
pop
xchg
or
xlat
or
test
lahf
pop
insl
mov
je
nop
and
addr16
mov
mov
push
test
mov
and
cmp
push
mov
pop
out
xor
iret
jl
inc
jne
jge
or
and
mov
pusha
dec
cld
repz
sub
call
mov
mov
mov
fisubrs
xchg
popf
push
cmpb
add
adc
addr16
inc
xchg
adcb
sub
mov
lret
data16
xchg
sbb
mov
adc
ret
xor
cmp
mov
call
lods
loope
out
dec
adc
insb
mov
and
and
outsl
outsb
fldl
xchg
inc
xor
pop
lods
pop
lea
pusha
mov
lea
cwtl
xchg
xchg
sub
push
test
pushf
dec
cmp
mov
or
mov
ds
pop
or
test
cmp
into
mov
pop
fistpll
test
leave
sbb
push
scas
xchg
push
fistpl
or
xchg
out
arpl
pop
lods
aas
or
rolb
outsl
sbb
mov
push
lret
sub
push
lahf
mov
jb
out
ljmp
mov
adc
popa
stos
hlt
nop
insb
sub
das
push
pop
dec
adc
sub
stos
jnp
xchg
or
cmp
cmp
cmp
mov
insb
shrl
into
enter
ficoms
scas
in
out
adc
and
fnstsw
xor
add
lea
rcrl
mov
in
dec
add
jb
imul
fsubs
push
mov
int3
cld
push
loopne
popa
ss
out
out
es
adc
arpl
mov
test
inc
push
mov
push
mov
andl
xor
adc
icebp
add
adc
repz
dec
mulb
push
sbb
repz
pop
pusha
sub
jl
test
and
cmpsl
cwtl
outsl
xchg
mov
sbb
outsl
out
pop
mov
daa
sub
dec
jb
shl
arpl
mov
shl
xor
outsl
pop
addr16
adc
stos
adc
lea
pop
aad
in
mov
pop
sti
mov
in
ljmp
xor
cmpsb
in
inc
mov
fcoms
mov
into
call
mov
sarb
pusha
add
push
scas
sub
xchg
mov
int3
cmpsl
aas
divb
and
cmp
jae
movsb
xor
flds
pop
fwait
pop
cltd
loopne
mov
push
inc
rorl
xor
lds
test
jge
je
ret
shl
andb
cmc
cmp
pop
mov
rcrl
test
es
ss
leave
dec
cmp
rclb
sbb
xchg
pop
in
jns
add
mov
mov
xchg
imul
out
jg
ds
cmp
push
enter
jl
in
popf
add
mov
mov
ss
sbbb
mulb
fldl
sbb
push
imull
add
scas
lcall
iret
in
fisttpll
pusha
xchg
fadd
test
rclb
pop
lds
jo
sbb
test
mov
test
push
nop
ja
mov
fdivrp
ror
mov
loop
imul
out
pop
test
mov
test
repnz
mov
lcall
jns
dec
dec
or
movsl
fcoml
push
mov
out
pop
inc
hlt
lock
sbb
mov
push
xchg
mov
fnstcw
push
frstor
push
jmp
jge
outsl
xor
mov
push
mov
sub
mov
sbb
cmp
rorl
and
mov
lds
mov
push
push
xor
scas
ficomps
es
inc
ss
orb
repnz
push
lcall
nop
outsb
loope
ret
aam
fs
mov
pushf
sar
outsl
rcll
push
loope
add
outsb
das
push
dec
pusha
cli
shrd
dec
je
addr16
and
fadd
sub
popa
xchg
sbb
cld
push
adc
les
mov
stos
mov
and
cmp
loopne
ds
mov
mov
jecxz
arpl
test
and
dec
lcall
sub
ja
jle
aaa
in
adc
cwtl
mov
sub
insl
in
pop
imull
push
setbe
mov
xor
nop
add
dec
or
push
cltd
cmpsl
push
push
jg
push
leave
clc
sub
scas
inc
cmp
cmp
sub
pop
mov
das
jmp
push
dec
sti
mov
push
xor
xorl
insl
mov
cmp
bound
mov
add
inc
inc
xchg
push
xlat
ret
ja
push
fwait
push
xor
leave
das
jb
xor
ss
int
repnz
inc
dec
cwtl
xchg
mov
inc
cmp
fldl
cld
ljmp
scas
lret
cld
push
dec
jecxz
lret
cmp
cwtl
inc
xchg
loop
enter
jne
and
xchg
lea
clc
les
scas
and
inc
push
test
hlt
lods
scas
addb
jb
movsb
cmp
lods
push
push
scas
not
mov
or
sahf
int3
test
cld
shll
aad
push
inc
xchg
rcr
jl
cld
pop
add
mov
add
sbb
loop
cmp
andb
test
add
and
scas
jno
cmp
cmp
fdivs
pushf
fnsave
out
js
adc
mov
jo
jae
inc
loopne
cs
les
test
pop
scas
jae
imul
lods
mov
sbb
cmc
mov
inc
adcl
sbb
inc
jnp
in
pop
mulb
loope
inc
ret
jo
aaa
mov
int3
push
cmp
xor
cmp
mov
mov
jmp
mov
rol
incb
pop
sbb
cmp
xchg
cs
ret
lock
pop
xor
in
mov
cmpsb
jbe
inc
jbe
inc
inc
sbb
mov
mov
pop
or
cltd
or
pop
lret
aad
lea
push
inc
fwait
mov
or
add
jne
inc
arpl
fs
inc
popf
push
add
sti
adc
mov
loope
adc
pop
xor
fldl
mov
adc
mov
mov
and
push
inc
cmc
jg
fsubrl
jl
xchg
scas
jge
pushf
xchg
jl
insb
lret
out
and
or
test
sub
push
sbb
mov
cmc
stos
out
mov
stc
int3
mov
es
fsubs
or
xor
ss
xor
push
push
test
push
lods
mov
das
jno
int3
pop
jne
inc
cmp
sub
popf
lahf
push
loope
mov
fs
pop
pop
mov
mov
inc
lea
sbb
cld
out
mov
rolb
fiaddl
call
sti
out
push
das
out
repnz
jmp
out
mov
and
insl
or
or
es
or
lahf
push
mov
dec
sub
adcb
fiaddl
jns
cmp
mov
mov
xor
test
into
lret
js
gs
fisubrl
dec
or
insb
int3
test
inc
clc
add
push
cmpsb
ret
xchg
jnp
inc
out
mov
jp
scas
in
int3
mul
xchg
sbb
aaa
imul
andb
mov
loope
sub
fs
imul
and
aas
add
test
das
rorb
jg
adc
xchg
iret
ret
call
sbb
bt
push
inc
and
xchg
xchg
popa
sub
cmp
popf
jno
int3
cmp
sbb
cmpsl
rol
mov
dec
jne
pop
outsb
push
mov
xor
jg
dec
or
lcall
popf
pop
xchg
pop
ret
test
cmpsl
mov
lods
test
cmc
sbb
mov
or
push
scas
scas
and
sarl
ljmp
flds
je
cmpsl
xchg
push
popa
andb
mov
cmp
mov
adc
loop
pop
adc
cmp
int3
cmp
aaa
ljmp
add
xchg
xchg
inc
pmovmskb
inc
clc
movsl
jge
pop
daa
les
stos
sbb
stos
xchg
or
jecxz
mov
cmpsl
sahf
sub
jmp
cmpsb
fs
mov
xchg
lods
das
push
mov
mov
push
lds
cmp
sub
das
enter
repz
pop
cmp
in
fstpl
shlb
pop
rcrb
jg
mov
fcompl
in
push
aam
outsb
popa
push
pop
outsl
orb
pop
movsl
in
push
xor
fstl
sarb
pushf
jecxz
jae
test
mov
ljmp
cmpsb
xchg
fdivr
push
cs
jle
hlt
sbb
add
or
sub
dec
ds
cmp
sub
mov
bound
sbb
cltd
ds
dec
lods
or
push
jp
pop
xor
bound
jne
pop
cmc
push
outsb
mov
repnz
push
inc
test
jns
add
sbb
cltd
push
jne
mov
mov
xor
or
rcrb
push
scas
shr
lcall
lret
cli
push
dec
jmp
mov
xor
dec
shrl
movsb
add
inc
mov
mov
xor
in
cmpsl
mov
xor
imull
mov
jns
cmp
popa
imul
mov
xrelease
xchg
adc
fldt
sahf
lahf
in
out
dec
outsl
ds
pop
in
add
jmp
sub
mov
loope
ljmp
ja
pop
add
addl
jae
jg
xor
pusha
and
pop
mov
sbb
cmp
xchg
xor
loope
int
repnz
adc
adc
lret
inc
fwait
cmp
out
dec
mov
add
mov
push
jnp
lret
push
in
or
jle
pop
mov
jne
pop
pop
icebp
adc
mov
or
sbb
dec
add
sbb
sub
out
pop
mov
imul
aaa
jbe
icebp
imul
mov
push
std
ret
fwait
xchg
mov
iret
and
in
adc
scas
adc
mov
shrb
in
mov
popa
sbb
mov
xchg
repnz
jne
das
xchg
and
pop
push
add
push
jle
jecxz
jecxz
and
sbb
cmp
inc
mov
iret
and
jb
mov
in
fwait
or
jl
adc
add
scas
inc
loopne
scas
xchg
mov
mov
jo
stos
das
cld
mov
xor
add
xchg
cmp
adc
gs
or
and
add
adc
imul
dec
pop
xlat
mov
in
xor
rcrl
loope
jo
pop
jmp
jns
out
int
mov
sahf
lcall
xor
leave
sub
sub
aas
pop
fldcw
push
push
outsb
ds
jnp
stos
jb
inc
cmp
out
lahf
cmp
into
imul
lcall
or
daa
mov
xor
sub
xchg
into
push
xlat
cmpb
push
push
cmc
loope
pop
jle
push
mov
aas
insb
lcall
idivl
lret
sub
cmp
and
fwait
xor
push
outsb
out
sbb
xor
das
cmc
or
les
and
xchg
mov
jp
xchg
pop
and
popa
push
mov
cmp
insl
les
pop
sbb
lea
les
std
sub
adc
lea
dec
sub
bound
inc
andb
jno
jne
je
mov
pop
sti
pop
xchg
sub
jmp
mov
lret
fcmovnbe
pushf
sub
and
lret
mov
mov
push
fs
xchg
test
adc
jns
sbbl
repz
and
je
jp
add
and
std
sbb
push
pop
shll
into
loopne
mov
push
div
jge
stos
sub
jo
lods
ds
cld
stos
int3
xorb
mov
pop
nop
sub
mov
movl
scas
inc
cmpsb
push
mov
lods
int3
mov
inc
mov
inc
sub
pop
xchg
in
into
pop
lods
xchg
pop
dec
cmp
fidivs
ljmp
aas
xchg
push
rcrb
pop
rorb
stos
popf
mov
xor
and
mov
mov
repz
xor
mov
jb
ljmp
gs
clc
insl
xor
clc
sbb
push
or
pop
and
sahf
xor
xor
pop
or
cmp
xchg
inc
and
mov
mov
daa
jmp
outsb
mov
aam
push
jne
shll
sub
lahf
lret
pusha
inc
repnz
pop
add
and
cmpsb
stc
ret
test
sub
mov
inc
test
loopne
in
imul
fld1
rcll
xchg
and
jmp
insb
push
xchg
jne
pushf
aaa
out
xchg
sbb
sbb
xchg
cmovb
jp
decl
push
dec
pusha
rcrb
sub
jbe
xor
aad
add
push
dec
adc
bnd
idivl
and
cmp
test
loope
adc
popa
sbb
mov
arpl
mov
aam
adc
mov
add
mov
add
xchg
loop
lret
data16
scas
inc
lcall
push
push
mov
inc
jecxz
out
mov
mov
inc
inc
in
les
and
sti
inc
adc
test
stos
xchg
out
leave
mov
pop
xlat
mov
xchg
int3
rcrl
shl
cld
mov
and
and
insl
mov
push
rcrb
or
push
in
mov
xor
sub
push
and
dec
adc
fwait
lods
out
push
ja
jbe
sub
in
andl
clc
ds
xchg
jecxz
add
sub
xor
fwait
sub
inc
call
fsubp
jmp
or
and
push
jo
mov
aad
ret
sbb
subl
sub
aas
mov
hlt
fwait
xor
mov
loope
int3
or
mov
mov
mov
dec
or
ds
jno
adc
add
gs
add
dec
jmp
arpl
or
pop
sbb
sbb
insb
shlb
adc
jp
out
les
xor
push
xor
rolb
adc
movsl
pop
sahf
aad
sbb
adc
pop
adc
out
or
lds
pop
jae
jo
je
nop
les
add
daa
ljmp
sub
out
mov
adc
les
outsl
xorb
push
lods
jbe
das
aaa
mov
dec
sti
outsl
shll
imul
xchg
mov
ja
inc
jo
dec
xor
mov
cmc
pusha
jle
pusha
and
repnz
cld
xchg
mov
pushf
xor
ficoms
loop
in
xor
jmp
pop
xchg
imul
outsl
add
cmp
push
mov
data16
fucomip
cmp
int
fcoms
inc
andb
cltd
test
popa
fadds
stos
arpl
scas
inc
mov
push
xor
mov
je
scas
je
add
subl
mov
decb
fisttps
notb
int
add
ror
adc
jo
cs
inc
cltd
rorb
scas
lds
insb
js
sar
movsb
cmp
leave
es
pusha
xor
dec
push
or
xchg
xor
mov
push
push
xor
and
cld
mov
or
fcomp
in
and
insb
cmp
loope
mov
inc
mov
mov
cmp
cltd
shrb
addl
fsubs
loop
repnz
adc
cmpsl
push
push
movsb
stos
in
add
nop
jo
aad
fucom
pop
in
out
loop
loope
ret
push
lret
or
movsl
vpmacsww
mov
jns
out
outsb
add
cwtl
or
lds
mov
clc
divb
mov
fcomi
sti
dec
clc
lcall
rcll
aad
enter
insb
les
push
lods
pusha
jmp
imul
xchg
push
mov
push
ret
cmp
adc
outsb
out
and
jb
or
in
loope
test
jle
pop
push
inc
fcmovne
adc
fsubr
add
fdivrl
fs
sarl
jecxz
mov
xchg
or
roll
insb
jecxz
add
pop
or
dec
loopne
fcoms
sbb
hlt
int3
jl
xchg
jae
lret
xchg
jno
mov
daa
insb
cmp
fstpl
adc
jecxz
aam
andb
sbb
loopne
mov
stos
das
add
inc
in
mov
sub
push
pushf
test
iret
mov
lahf
int3
cmp
push
add
cmp
or
mov
icebp
mov
pop
mov
stos
insb
push
mov
mov
cmp
mov
push
jno
jb
shrd
scas
xchg
adc
xchg
int
dec
je
mov
stos
mov
cmpl
inc
pop
ficoml
lods
lods
xor
test
mov
sar
lock
dec
push
sub
pushf
das
lea
nop
notl
shl
pop
cld
dec
or
inc
jmp
pop
orb
push
stc
xchg
pusha
mov
ds
jno
push
fdivs
sbb
movsl
jnp
int
pop
xchg
es
cwtl
push
aam
aad
jne
mov
iret
sarl
test
sar
shlb
mov
add
jne
and
pushl
ja
dec
popa
enter
sub
and
mov
mov
xlat
shll
mov
lock
pop
lret
pop
mov
popa
fwait
rcrb
add
stos
pop
adc
mov
ret
jae
add
jno
sbb
rclb
push
mov
iret
push
fsubrl
inc
iret
cmp
inc
jae
cwtl
pop
loope
cmp
mov
pusha
mov
std
int
jp
mov
push
xor
xor
daa
daa
int
fisubrs
in
jle
pop
fidivrl
mov
xchg
adc
jne
cmp
jp
mov
jb
hlt
decl
test
fistpl
lret
in
push
mov
data16
xor
aad
jbe
in
fcoml
fs
int3
jnp
add
stos
stos
faddp
stos
sub
mov
sbb
sbb
aas
stos
mov
jl
mov
mov
outsl
adc
mov
scas
mov
sbb
repz
push
enter
jecxz
xor
add
cmp
pop
mov
pop
aam
and
xchg
dec
je
inc
mov
es
je
outsb
clc
ret
jecxz
sub
push
gs
and
ljmp
cmp
outsb
adcb
and
sub
mov
ficoml
jnp
lret
mov
lods
xchg
lods
xchg
cmp
pop
shrb
jbe
mov
lods
add
orl
ja
sbb
add
add
mov
mov
lock
popa
mov
xchg
roll
pop
ficoms
hlt
stc
push
int
cli
mov
jge
cmc
fcoms
sar
mov
push
bound
movsb
sarl
sbbl
jo
lods
dec
ljmp
and
fcoml
lret
rclb
sub
and
mov
loope
lret
test
or
sahf
bswap
sbb
cli
sub
inc
xchg
call
lods
int
add
scas
cmp
ret
mov
adc
aam
scas
xchg
stos
enter
fs
ret
xchg
icebp
lock
push
ss
lods
ret
mov
mov
sbb
cltd
das
sahf
ds
movb
leave
sub
and
ljmp
mov
inc
xchg
in
fisubs
js
lret
or
leave
sbb
test
ja
cmp
icebp
outsl
mov
pop
pushf
in
ljmp
mov
lret
loop
jne
pop
pop
inc
cmpsb
sbb
es
jp
push
dec
cmpsb
out
aad
test
add
int3
pop
outsb
dec
add
out
fucom
cmpsl
icebp
sbb
mov
in
pop
lea
cmp
lcall
sahf
xor
and
dec
jmp
push
pop
jmp
or
addr16
mov
mov
gs
sbb
decb
xlat
xor
daa
loope
xor
mov
jge
cmp
xchg
insb
call
pop
cs
and
mov
add
fwait
mov
dec
arpl
andl
je
mov
cmp
sbb
pop
aaa
ss
cli
jl
lret
sbb
in
out
mov
call
fiadds
inc
dec
fldenv
fstpt
and
dec
ss
mov
out
jle
iret
mov
cmp
lods
ljmp
inc
mov
jle
add
lret
adc
in
enter
push
js
push
mov
nop
xor
and
jne
data16
dec
mov
cmc
clc
lret
cld
pop
jns
loope
lods
das
int3
jbe
xchg
leave
push
dec
mov
lcall
cmpsb
ljmp
aam
js
cmp
mov
add
dec
mov
lods
inc
cmpsb
push
xor
pop
popf
rclb
icebp
fwait
sbb
fwait
jge
sbb
mov
lods
aad
addr16
jbe
jl
popa
mov
leave
scas
sub
test
pop
sarl
call
dec
std
mov
xor
cmc
jbe
fld
scas
dec
cmpsl
inc
adc
repnz
mov
sar
add
cmp
mov
sti
sar
les
sbb
adc
pop
ss
mov
and
sub
sbb
loop
in
or
mov
and
inc
push
mulb
jg
jbe
ss
pop
cmp
mov
insb
aad
inc
cmp
jo
mov
icebp
add
loop
and
shll
adc
add
iret
jb
xor
adc
scas
mov
out
and
out
mov
xor
push
loope
movsb
adc
adc
test
out
in
xor
fidivrs
lock
inc
inc
pop
les
or
cmc
push
aam
mov
cmp
xlat
mov
mov
sarb
in
jo
mov
mov
out
mov
cmp
into
fsubs
jle
shll
mov
add
inc
push
jmp
cmpsl
push
idivb
add
xor
scas
xlat
xchg
out
xchg
dec
int3
aad
and
jae
xchg
jns
stc
cmp
clc
jmp
jo
lds
and
push
ds
fldt
call
aaa
sbb
aaa
push
mov
jnp
mov
fisubrl
dec
testl
pop
dec
lret
or
sbb
bound
call
pop
mov
xchg
ljmp
roll
inc
rep
lret
movsl
push
cld
pusha
cmp
cmp
hlt
mov
dec
xor
push
push
aaa
cmc
jnp
shll
push
rcll
repz
cmp
sub
mov
cwtl
nop
dec
aas
out
out
pop
out
decb
cmp
push
cwtl
fwait
mov
pushf
jae
dec
out
in
shlb
or
out
in
pop
push
push
out
leave
out
jae
xchg
push
mov
mov
mov
jns
in
test
mov
sbb
adc
mov
inc
xchg
rcr
popf
cwtl
and
enter
or
mov
sub
xor
scas
andb
popf
and
push
xor
sbb
insl
xor
xor
inc
pop
in
lock
nop
scas
cli
and
xchg
jecxz
lahf
pop
push
xor
cwtl
in
mov
ds
arpl
pop
xchg
cs
inc
sbb
jp
xchg
xor
jecxz
js
movsb
jo
or
push
dec
xchg
xor
dec
outsl
inc
push
pop
mov
and
ja
fistl
jg
shr
std
mov
stc
push
jbe
add
add
imull
in
pop
int
cltd
mov
shr
lahf
inc
leave
addl
inc
movsl
aaa
in
das
sbb
mov
mov
xor
arpl
jle
inc
xor
and
adc
jno
loope
xchg
jbe
jb
jge
fsubr
movsl
push
xchg
push
mov
cmpsl
test
jmp
in
mov
jmp
push
aad
gs
sarb
mov
pop
or
outsl
test
add
lahf
fs
and
fs
lods
in
push
stc
iret
cmpsb
pop
in
popf
mov
pop
mov
subb
stc
bound
imul
nop
rclb
inc
roll
adc
imul
test
pop
aad
jmp
sub
stc
and
lea
test
stos
xor
sub
jno
arpl
mov
mov
xchg
test
ss
cmc
pop
sub
xor
xchg
jp
arpl
pop
jecxz
in
xchg
mov
cmp
in
xlat
cmc
pop
push
jmp
push
mov
add
repnz
lods
push
cwtl
jns
daa
or
mov
inc
fidivl
add
movsb
repz
jnp
adc
nop
rcrb
loopne
das
add
mov
push
outsb
cs
leave
sbb
aad
xlat
jp
adc
into
adc
mov
popl
das
cs
cmp
pop
fs
xor
es
push
aam
jb
leave
jle
jno
cmpl
loope
int3
mov
jg
out
mov
lods
lods
iret
les
mov
jnp
ret
outsb
mov
int3
js
mov
jmp
or
test
inc
rol
lods
mov
mov
aaa
mov
add
ja
call
add
stc
sub
int
cwtl
std
mov
cmp
add
mov
dec
cltd
lods
dec
xor
and
mov
out
adc
aam
mov
sub
cmp
fs
fs
push
mov
mov
mov
sbb
addb
mov
rcll
sub
insl
aaa
fisubrl
test
fldl
rcl
movsb
fsubr
or
cmp
xchg
shll
jmp
insl
sub
sarl
in
insl
jp
push
dec
adc
aas
add
jl
inc
mov
xorl
aam
mov
dec
adc
or
sbb
jnp
out
pop
scas
sbb
xchg
mov
or
enter
add
dec
mov
stos
lods
xchg
push
push
jbe
rorl
jb
xchg
test
rcl
jo
daa
cmpsb
std
repz
and
dec
in
in
out
push
jns
adcl
sbb
mov
mov
mov
push
lock
iret
push
stos
mov
lods
push
mov
loopne
cltd
fwait
push
pop
mov
or
sbb
popa
push
or
test
test
cmp
lds
xchg
jns
out
push
aas
mov
and
pop
in
loope
rcrl
repz
leave
push
int
mov
int
pop
jl
mov
cmc
xor
sub
daa
mov
out
xchg
adc
push
jbe
mov
bound
jecxz
xchg
push
xchg
ret
push
ss
aam
jmp
mov
jno
jp
jle
addr16
add
pop
aad
cmpb
and
dec
cmp
push
outsb
rcll
out
and
xlat
sahf
fnstsw
and
ret
cmp
jg
dec
jnp
ljmp
xchg
add
fs
pop
jbe
lret
mov
loopne
cmovl
xchg
daa
sbb
dec
mov
cmpsb
rcrl
adc
xor
adc
add
dec
push
add
sbb
xor
cmpsl
rorl
cmp
sub
imul
insb
jmp
mov
cwtl
dec
dec
imul
mov
mov
push
xchg
mov
cmp
mov
jmp
mov
imul
lret
add
cltd
leave
bound
pop
push
in
sbb
and
and
loopne
stos
int
lods
sub
jp
negl
and
popa
faddl
fbld
rcll
xor
fsub
xchg
iret
fiaddl
mov
loop
push
jb
pop
pop
enter
outsl
imul
push
pusha
fadds
or
sub
sub
cli
or
sub
inc
or
push
add
mov
cmpsl
popf
std
les
loope
call
ljmp
leave
test
ret
xor
mov
cld
pop
stos
jo
and
clc
out
cwtl
xchg
rorb
push
sub
xor
insb
lods
cmpsl
ror
push
xor
mov
dec
ja
cld
xchg
test
pusha
mov
shl
inc
mov
lcall
dec
jno
fcomps
jae
xor
adc
push
ret
test
lret
fwait
or
fisubl
push
or
pop
bound
push
sbb
test
xor
pop
lcall
pop
scas
jbe
ret
fldcw
or
popf
xor
cmp
lds
je
sbb
or
pop
push
stc
lahf
sbb
add
fwait
mov
dec
leave
and
sub
adc
shrb
add
test
jae
faddp
ljmp
sbb
iret
jno
rclb
and
lock
inc
mov
scas
cmp
adc
cmc
inc
xrelease
scas
repz
je
lahf
sbb
loope
outsl
dec
je
inc
pop
jmp
lret
es
fstpl
dec
mov
xchg
in
insb
pop
psrlw
call
and
mov
int3
into
xchg
aam
lea
loop
mov
mov
adc
rcrb
je
movsb
cmp
imul
dec
test
push
loopne
mov
and
sub
aam
mov
cmp
insl
pop
jle
push
add
mov
jne
pushf
lea
fdivl
inc
xchg
xchg
outsl
push
daa
mov
fsts
mov
mov
out
pushf
fsubrs
mov
mov
mov
xchg
lret
into
jno
jmp
lea
xchg
or
mov
lea
mov
inc
xor
push
nop
dec
les
jns
lret
push
push
in
leave
sti
sub
xchg
cld
andb
push
out
and
xchg
movsl
mov
sub
cli
test
push
popf
add
add
fidivl
test
adc
and
mov
and
add
pop
adc
dec
arpl
daa
in
test
add
xchg
loope
xchg
adc
pop
xchg
dec
or
int3
cli
xor
mov
into
pop
dec
sub
sbb
lret
cli
sbb
stc
popa
out
enter
icebp
and
inc
stos
gs
sub
fdivl
inc
stos
jne
cmp
adc
popf
sub
xlat
loop
in
sbbb
in
std
pop
xor
inc
mov
push
xor
rclb
sbb
adc
pushf
mov
fwait
inc
xor
sbb
sub
es
dec
popf
sub
and
clc
adc
sub
add
clc
lahf
push
out
lea
cs
dec
loope
cmpsl
mov
mov
and
std
pop
push
sub
mov
shrl
and
pop
fs
loope,pt
pop
loopne
lret
movsl
repz
fisttpll
lock
cld
mov
movsb
xor
cmc
jnp
icebp
testl
bound
pop
fs
lea
ja
add
sbb
aas
sbb
or
or
push
dec
xor
add
ret
imull
xchg
sbb
jg
subb
testl
out
mov
test
cmpsb
shlb
sbbl
cmpsl
lock
jg
push
lods
cmc
dec
adc
ret
shl
popa
and
outsl
inc
dec
std
mov
ret
ja
bound
js
and
sub
mov
fyl2xp1
add
sbb
fldenv
add
mov
out
xchg
lock
pop
inc
xor
or
cld
or
enter
push
inc
mov
fists
cmp
jns
mov
lea
iret
out
mov
imull
cwtl
fnstcw
sti
cmovg
ja
fdivrl
push
test
int3
scas
pop
jno
mov
sbb
lea
test
sub
lock
in
and
add
xchg
fs
ret
popf
ja
xor
adc
dec
cs
add
daa
ljmp
icebp
sub
jmp
das
lock
jns
loope
dec
movsb
shrl
and
ds
xchg
fisubs
or
imul
insb
jbe
inc
pusha
or
fs
test
adc
ss
das
push
pop
pop
cmp
dec
mov
jne
stos
dec
outsb
mov
mov
and
fbstp
ss
xchg
fldenv
divb
test
sbb
test
not
je
fstl
dec
add
dec
adc
lea
xchg
pop
sti
inc
hlt
cmp
adc
les
cmp
push
pushf
imul
dec
icebp
jns
in
push
vmaxps
xchg
push
rcrb
mov
jecxz
cmp
sbb
inc
lret
imul
je
movsl
dec
pop
jmp
cmp
push
lds
dec
pushf
scas
pop
push
mov
push
mov
jle
push
and
xchg
mov
lds
imul
bound
lcall
cmpsl
test
mov
xor
popf
push
ljmp
insb
jge
divb
jmp
inc
scas
add
sbbl
into
cmp
rcr
adc
outsl
xor
mov
xor
cmp
fwait
es
je
adc
aas
ret
repz
xor
fdivrs
mov
sbb
mov
mov
mov
fnstcw
dec
mov
pop
mov
mov
testb
and
and
inc
sbb
or
adc
adc
mov
pop
movl
push
test
sub
pop
test
add
lods
sbb
lahf
ss
xchg
pop
ds
push
and
aad
dec
jecxz
hlt
dec
pop
mov
cmp
js
push
xchg
mov
iret
movsb
add
test
push
add
cmp
rol
nop
adc
adc
negb
push
daa
fisubrl
adc
aad
addb
pop
mov
sub
xor
mov
test
jnp
or
pusha
sahf
mov
filds
inc
mov
mov
and
sub
mov
mov
imul
pop
rorl
dec
rclb
mov
xchg
mov
fimull
call
insb
cmp
inc
mov
decb
mov
fsubr
dec
pop
jg
shll
dec
movsl
jp
cmc
das
out
push
enter
loope
fidivrl
je
andb
mov
rcl
movsl
pop
sub
jmp
lods
jno
cmpl
daa
icebp
je
pop
fdiv
cmp
sub
repnz
icebp
adc
mov
ljmp
fdivrl
dec
add
jle
dec
lret
mov
nop
jns
ret
mov
mov
cmp
addr16
imul
sub
pop
xchg
cs
addr16
bound
pop
mov
stos
insb
lods
sub
xchg
and
sahf
rorb
loopne
xor
mov
xchg
and
and
cld
ja
js
movsl
ja
jge
test
out
daa
into
cmp
out
andl
movsb
inc
adc
in
add
mov
jns
xchg
fwait
or
in
xorb
in
dec
cld
test
scas
ja
call
xor
cltd
aam
jp
add
or
mov
lods
arpl
push
mov
push
dec
jbe
mov
scas
out
ficomps
iret
pop
fs
sahf
scas
lret
arpl
adc
add
xlat
insl
xor
in
stos
imul
add
lods
add
xchg
add
push
push
dec
mov
pop
push
mov
ss
xor
jae
dec
test
adc
cld
or
scas
test
or
iret
inc
movsb
lret
dec
outsl
xor
mov
aam
xor
call
cmpsl
icebp
dec
cmp
lret
add
push
jmp
add
cmpsl
push
mov
fildll
xchg
push
mov
jg
fwait
xchg
cmp
push
adc
aam
jl
inc
fwait
ljmp
inc
cmc
pop
insl
idivb
adc
bound
xchg
pop
mov
out
sub
cmp
mov
data16
fidivrs
jb
jnp
add
arpl
gs
out
mov
fcomps
jne
fdivl
adc
outsb
jns
fnstsw
out
outsl
or
das
jle
js
int
jnp
cmp
stc
movsb
jno
in
pushf
mov
sub
pop
xlat
mov
jne
cmp
sub
pusha
stos
pop
aam
mov
xchg
in
mov
in
int3
xchg
aad
jmp
ss
sub
in
xchg
mov
pusha
fisubrs
mov
mov
pushf
fucom
lock
mov
inc
shll
dec
and
sti
mov
xchg
es
std
ja
lods
pushf
push
scas
daa
lret
inc
lret
mov
shrl
or
insl
xchg
cmp
inc
nop
outsl
jecxz
pop
mov
mov
xor
adc
jle
leave
jmp
mov
push
pop
daa
fs
cmp
xchg
push
or
pop
scas
cmp
stos
in
mov
lods
popf
xorb
jle
xor
push
pop
aad
pop
pusha
cli
sbb
hlt
fiaddl
xchg
sbb
xor
push
imul
fmull
lret
xor
add
ret
ljmp
pop
in
add
movsl
xchg
out
jnp
dec
ror
rcll
push
mov
push
xor
dec
add
bound
fadds
sbb
and
out
jmp
arpl
les
fwait
push
mov
fldt
sub
adc
mov
add
test
mov
leave
popf
es
xor
mov
ret
and
and
mov
aas
cmc
shlb
mov
cmp
push
jnp
in
xchg
inc
fadds
inc
out
sub
sti
movsb
jno
add
push
dec
jecxz
lds
xchg
mov
pop
cmc
cmpsl
jp
jmp
ss
lea
cli
sbb
add
ss
fmull
and
lahf
fiadds
sbb
xchg
push
lret
jecxz
js
xchg
dec
ss
inc
mov
out
incl
cmc
add
cmp
adc
lcall
fdivrl
imul
jge
movsb
mov
push
add
scas
aas
pop
sbb
mov
fidivs
nop
rcrb
xorl
loope
sbb
lds
push
idivb
sbb
mov
les
jg
movsb
push
pop
lcall
clc
mov
mov
dec
jl
addb
jecxz
aaa
sbb
pop
je
mov
and
jo
insb
or
or
inc
cmp
jge
add
xchg
add
sbb
jne
sahf
xor
ffree
cmp
dec
rorb
inc
ret
add
shrl
and
inc
mov
test
inc
shrb
jmp
sub
mov
push
mov
inc
scas
enter
dec
ds
xchg
test
out
rcrl
mov
cmp
and
fists
std
cs
sahf
or
mull
xchg
mov
out
iret
std
mov
cli
lods
mov
fisttps
xchg
aaa
xchg
lret
inc
xchg
incb
mov
dec
in
lea
fwait
loop
loop
adc
test
out
mov
dec
jmp
mov
vmovdqu
adc
jl
xchg
in
add
push
jns
push
ret
ds
fwait
pop
fidivl
inc
icebp
es
std
cmp
ja
insb
scas
mov
cmc
pop
inc
enter
push
jmp
gs
aaa
adc
xor
adcb
pop
mov
fs
mov
dec
int3
iret
jmp
aam
out
inc
xor
fdivs
cs
fwait
aaa
or
scas
sbb
pusha
scas
pop
dec
scas
scas
jle
mov
out
mov
js
ss
leave
jnp
push
out
shl
jmp
lea
push
out
cltd
rol
stc
add
popa
bound
xchg
ficomps
adc
cmp
mov
gs
int
pop
movsl
sub
lret
mov
cmpb
call
mov
and
cmpb
jae
xor
mov
pop
repz
dec
movl
jle
scas
into
push
cs
gs
fs
ss
pop
mov
mov
pop
xchg
cmpsb
mov
jecxz
shrb
out
cmp
adc
in
jne
mov
xchg
js
mov
xor
mov
cmpsl
jne
ret
outsb
jne
and
add
loope
sbb
mov
ret
mov
lcall
push
loop
popa
adc
sbb
fstp
mov
mov
mov
loop
inc
je
cmpl
test
dec
and
sub
push
mov
push
neg
mov
mov
shlb
push
pop
adc
subb
jb
inc
aam
popa
xchg
mov
cmp
inc
stc
or
adc
xchg
adc
cmp
test
aaa
pop
fdiv
push
jl
imul
je
pop
xchg
cmp
enter
xor
xchg
sahf
mov
sti
mov
sub
push
ja
enter
cmpsb
inc
out
fsubrl
rcrl
pop
movzwl
hlt
adc
in
in
scas
call
inc
shll
mov
ud1
stos
xchg
mov
push
cltd
mov
call
and
out
dec
mov
sahf
jle
sbb
cmp
adc
repz
test
lods
mov
sbbb
negb
jp
mov
sbb
pop
sub
push
shlb
lds
adc
test
adc
bound
pop
mov
enter
adc
out
and
in
or
stc
rcr
mov
test
sti
ficomps
ja
sub
popa
jp
push
addr16
pusha
adc
pop
fwait
je
jne
in
sub
mov
sub
adc
ljmp
mov
cs
and
jmp
pusha
push
mov
add
icebp
andb
cld
ds
scas
gs
lock
inc
and
adc
or
mov
inc
ss
cmpsl
jge
in
lea
clc
jge
mov
test
fbstp
addr16
push
xchg
imul
add
lds
sbb
shll
adc
loope
int3
icebp
mov
pop
sbb
in
je
dec
mov
aas
int3
sarb
jne
push
lcall
pop
pop
or
rclb
add
push
adc
ss
dec
mov
test
out
adc
ds
push
inc
inc
dec
orl
or
in
jne
cwtl
mov
xchg
dec
enter
cltd
sub
in
pusha
popa
cmpsb
test
ret
cmc
xor
fdivs
inc
cwtl
aaa
int3
rorb
in
jns
lret
push
sub
push
mov
repnz
mov
mov
inc
sub
jno
cld
loopne
sub
int3
or
negb
insl
ret
mov
bnd
test
addr16
push
push
sbb
xlat
test
popa
fsubl
ljmp
pushf
imul
xchg
ljmp
jnp
and
fists
out
rorb
dec
sub
mov
lea
in
in
jecxz
xchg
pop
sbb
mov
in
or
xor
aam
xchg
lods
in
ljmp
sahf
mov
cmp
ret
gs
add
loope
mov
cmpsb
movsl
push
in
icebp
cmp
add
mov
cmp
repnz
inc
xchg
cld
xor
mov
int3
lea
movsl
sbb
aad
orb
push
addr16
push
nop
and
lahf
movsb
mov
jmp
roll
fs
dec
lods
test
xchg
sub
shlb
push
movsl
sub
jecxz
lds
and
dec
xchg
push
outsb
xlat
xchg
add
sahf
ror
dec
xchg
rcrb
push
sbb
cmp
js
shlb
jbe
mov
xor
sbb
dec
mov
shll
stos
mov
pop
inc
movsb
sbb
aad
rcrl
mov
enter
mov
or
sub
and
ss
dec
and
inc
fcoms
and
jb
divl
cld
dec
jo
adc
dec
inc
dec
sbb
sysexit
fcompl
pop
int
mov
and
ja
cmp
daa
xchg
das
out
cld
sub
pop
mov
push
imul
dec
cmp
mov
mov
into
dec
popl
test
jae
jae
pop
rcrb
add
jge
mov
fisubrs
mov
cmpsl
into
xchg
movsl
sbb
pusha
inc
jle
test
mov
xchg
lcall
out
add
bound
sti
scas
cmp
pop
mov
fcoms
mov
mov
cmc
inc
es
mov
cmpsb
sub
mov
ficomps
xor
dec
insb
out
rorb
stos
inc
and
cmp
pop
cwtl
andl
xlat
mov
pop
int3
push
add
pop
mov
jl
mov
cmc
sti
icebp
sub
rcll
mov
pop
sbbl
jge
in
mov
sbb
outsb
aam
xlat
adc
inc
stos
outsb
loop
inc
sbb
cmp
lret
fcmovb
aam
push
jp
subl
dec
cwtl
pop
in
mov
pop
js
cmp
call
xchg
jecxz
mov
in
repz
test
ret
add
addr16
lret
xchg
ret
shll
add
add
cmovg
jns
xchg
or
inc
cmp
xor
sbb
int
daa
push
adc
dec
loop
dec
cmp
ds
mov
mov
enter
inc
adc
test
jb
jecxz
inc
push
enter
pop
xor
imul
pop
das
or
mov
or
lret
notb
dec
sub
xchg
popf
mov
fcmovb
int3
je
lret
divb
xchg
jecxz
pop
aas
cmp
jae
loopne
cwtl
sub
mov
xchg
data16
xchg
test
dec
xor
pop
push
loope
movsb
jne
pop
jp,pt
lea
jmp
test
sub
loopne
mov
ss
movsb
pusha
nop
add
lcall
add
int3
clc
and
cmp
pop
xor
or
es
pushf
leave
lret
and
adc
adc
push
in
repz
push
out
fwait
addr16
push
fidivrl
mov
mov
inc
xor
jae
and
mov
call
lahf
mov
scas
orb
sbb
and
lea
enter
pop
cmpsl
adc
push
jnp
adc
inc
stos
movsb
xor
push
cli
lock
cmpsl
es
push
fsubrl
mov
inc
into
ljmp
cmc
and
push
mov
pop
mov
int3
jno
inc
movsb
xchg
movsl
imul
mov
sub
scas
sbb
jbe
mov
mov
ds
and
push
and
jns
xor
mov
mov
jl
dec
loop
js
out
sub
sbb
xchg
push
jp
jg
and
lods
lahf
push
out
push
jb
dec
sbb
jnp
bound
jge
mov
cmp
or
ljmp
add
repnz
push
popa
and
mov
push
aad
arpl
adc
mov
movsb
pop
imul
sub
sahf
mov
std
mov
push
subb
pop
mov
cmp
jp
mov
inc
pop
ds
aaa
jo
inc
testb
cmp
cs
push
insl
sbb
aad
popa
or
or
outsl
lea
xor
pop
jae
shrl
jp
sbb
flds
cmpsl
mov
out
pushl
cltd
loop
mov
push
js
movsb
and
xchg
movsl
jns
lret
scas
imul
ja
test
fs
or
cld
cmp
fidivrl
test
inc
call
and
mov
jmp
mov
sbb
push
scas
daa
mov
in
es
inc
test
xor
inc
cmp
lcall
ljmp
push
in
test
lds
icebp
push
sbb
imul
mov
pop
mov
mov
and
mov
pop
lret
loop
divb
int
lret
mov
sbb
jae
jg
pop
sub
add
scas
enter
mov
mov
hlt
xchg
xor
pop
jp
iret
daa
dec
xchg
adc
insl
pop
mov
sub
cli
fadds
jno
mov
ja
adc
pop
jb
mov
xor
int
loop
or
repnz
test
rcll
int3
jbe
ljmp
mov
xor
lret
data16
push
scas
das
push
sbb
dec
stos
pop
hlt
test
lcall
or
sbb
jnp
mov
jmp
jg
mov
ja
aad
in
lods
pop
outsb
push
repnz
push
dec
adc
rorl
out
dec
int
cwtl
aam
mov
sbb
stc
adc
out
mov
mov
into
pop
fldenv
lods
push
fcmovnb
inc
and
jge
call
sub
out
mov
out
jne
inc
and
inc
andl
pop
mov
sub
scas
int
rolb
sbb
xor
mov
jnp
sbb
lea
mov
cmp
xor
add
cli
cmpsl
xchg
and
sbb
inc
mov
call
xchg
jmp
mov
mov
in
push
lds
jbe
imul
dec
fstps
rcr
fs
imul
dec
cwtl
aaa
sub
mov
cmpsl
jp
fsubl
xor
out
into
insl
jecxz
adc
and
push
in
loop
fnstsw
inc
xchg
into
jle
stos
sarl
cmp
loopne
mov
and
mov
cmp
lcall
lods
in
inc
mov
or
add
test
iret
and
inc
lcall
cmp
stc
inc
loope
ss
rcrl
cmp
add
sub
xchg
push
lcall
std
mov
jo
jle
and
int3
pop
xor
jae
xchg
dec
into
jae
add
test
mov
and
dec
std
dec
add
movb
inc
push
sub
cli
sarl
mov
mov
add
js
imul
movsb
xor
aaa
mov
movsb
push
lahf
jns
add
sbb
xlat
mov
stos
jmp
ds
js
mov
mov
mov
push
or
mov
xchg
inc
jge
jnp
and
add
mov
addr16
xor
push
sub
mov
cs
fstl
ljmp
push
movsb
mov
mov
std
cmpsl
faddl
mov
xchg
jle
xchg
cmpsl
jno
jne
mov
call
jae
hlt
call
inc
mov
movsl
push
sbb
mov
dec
jns
ret
dec
dec
bound
test
loopnew
jl
leave
test
out
dec
dec
adc
mov
jno
ret
aaa
jne
push
inc
loop
push
push
out
lea
mov
loopne
jmp
mov
out
mov
mov
cmpsl
sbb
mov
adc
xchg
push
loop
xor
movsl
repnz
cmp
dec
dec
popa
repz
faddp
sub
mov
sub
cmp
std
jns
pop
ret
sarl
ja
pop
pop
loope
test
sbb
sbb
mov
pushf
mov
sub
mov
mov
mov
daa
xchg
mov
and
mov
jecxz
jmp
insb
cmp
pop
sbb
xchg
xchg
es
pop
and
push
adcl
int
jge
insl
xchg
and
stos
out
xchg
loop
ljmp
dec
ja
pop
mov
push
or
rorl
int3
jl
sub
dec
push
sub
inc
push
sub
mov
xchg
dec
stos
shl
or
pop
js
outsb
push
fucomp
in
pop
dec
in
sbb
pusha
lock
inc
dec
fs
repz
push
jge
cmp
push
xchg
daa
pop
jmp
fwait
aaa
in
dec
call
lcall
lods
jo
sbb
leave
or
lds
fstl
mov
or
add
adc
pop
push
push
std
or
shl
cmpl
insl
pop
mov
out
and
test
insb
pop
rep
dec
jg
ss
je
psllq
xor
iret
shl
test
icebp
fiaddl
inc
ret
in
arpl
and
mov
or
inc
out
mov
mov
flds
pop
sub
int
jae
enter
dec
mov
and
mov
jge
lahf
dec
sbb
mov
jle,pn
fs
xor
out
aad
stos
sbb
mov
sarb
inc
adc
jg
dec
into
fimull
xor
mov
test
je
sbb
mov
aad
in
adc
push
fistpll
addr16
inc
push
sti
mov
ljmp
push
fistpll
pop
dec
adc
outsl
push
lret
iret
fisttpl
lret
inc
mov
xchg
add
push
xor
sub
lods
cmpsl
mov
ja
jb
pop
pop
xlat
push
xor
mov
fists
adc
sub
int3
rorl
sub
insb
stc
jne
xchg
jg
sub
jb
jae
fadds
push
stos
fs
out
aam
lods
fists
dec
bound
sub
xor
gs
dec
out
jl
adc
sub
insb
in
test
mov
inc
or
sub
cs
mov
pop
add
cmpsl
loop
adc
lds
shl
jb
mov
mov
xor
mov
into
lock
int
mov
mov
or
mov
inc
movsl
cmpsb
pop
inc
dec
mov
rcrl
daa
daa
cmp
or
lcall
xchg
out
lds
mov
dec
ret
ret
je
adcl
scas
dec
inc
flds
xlat
fcomps
mov
loop
xorl
jmp
fisttps
clc
adc
daa
and
fcompl
mov
jns
inc
jmp
cmpsl
insb
adc
test
pop
push
movsb
clc
mov
hlt
ljmp
loope
enter
addr16
pop
sub
rorl
xchg
mov
sarl
rorl
int
add
cwtl
push
aas
xchg
sbb
push
jle
out
inc
jo
fwait
out
push
outsb
aad
cwtl
aaa
sbb
push
sbb
or
loop
popf
sarl
and
sbb
stos
xchg
iret
or
or
testl
sbb
into
add
std
adc
mull
jmp
js
loopne
ds
add
jne
mov
jns
rorl
test
jp
mov
leave
xor
dec
push
and
pop
fiaddl
sbb
test
lds
xchg
js
sbb
jmp
push
int
roll
daa
decl
ss
aad
arpl
dec
adc
push
dec
sub
inc
cltd
popf
out
std
pop
xchg
push
repz
mov
adc
mov
cmp
xor
and
and
mov
sbb
and
lock
in
icebp
adc
cwtl
es
and
iret
subl
dec
scas
pop
pop
fwait
add
mov
out
add
jne
out
adc
jns
inc
xchg
add
or
jo
push
pop
push
mov
mov
dec
jne
sub
lds
ret
shr
or
frstor
dec
xchg
cmp
or
in
or
insl
bound
mov
mov
and
sahf
incl
enter
in
mov
sub
inc
dec
push
mov
xor
xor
out
xlat
leave
jb
mov
jecxz
xchg
adc
push
loop
cmp
mov
aas
inc
pop
jg
jl
jbe
push
dec
pop
aad
ret
ret
imul
loopne
jns
push
pop
mov
sar
adc
jns
add
fnstenv
bound
push
or
sbb
mov
push
xchg
out
pushl
imul
test
add
inc
push
mov
sbb
or
cmp
idivb
movsb
mov
jl
andb
cmp
pop
xchg
inc
cmp
roll
stos
inc
sub
lret
xor
or
popf
xor
push
pop
push
sub
jecxz
cli
push
cmp
lret
sbb
push
adc
mov
iret
xchg
mov
lock
outsb
sub
mov
xchg
inc
and
xchg
sub
inc
jo,pn
pop
jb
das
scas
int3
cmp
dec
mov
xor
enter
jno
call
decb
insl
cmp
in
and
mov
scas
or
enter
aad
fwait
pop
and
shll
xor
inc
cmp
pop
aas
jb
xchg
aad
mov
iret
adc
xchg
enter
push
cmpsl
xchg
dec
inc
sub
shrl
cmc
xchg
adc
mov
sub
rclb
repz
dec
pushf
lcall
cmc
xchg
fsubrl
dec
fidivrl
into
sub
std
dec
daa
lret
sub
les
shl
adc
push
jns
xchg
leave
mov
icebp
insb
test
xor
std
mov
sub
cmpsb
push
push
add
add
aas
adc
jl
xor
inc
mov
imul
push
stc
dec
lods
arpl
sbb
test
jne
sbb
jle
add
test
bound
scas
push
das
icebp
mov
rcrb
dec
test
mov
or
clc
inc
movsb
add
fisubs
addb
or
jbe
adc
mov
aas
out
xchg
and
dec
jle
out
xchg
cmp
jl
lock
xor
mov
mov
adc
push
inc
push
xor
jno
jnp
lods
stos
jmp
jnp
push
fldenv
xlat
fwait
xor
inc
ljmp
pop
popf
insb
mov
mov
ret
push
insl
hlt
jp
enter
hlt
test
outsb
sbb
int
in
cld
mov
adc
pop
add
cltd
dec
cwtl
push
movsb
lods
xchg
adc
mov
xor
adc
mov
dec
and
orl
xchg
into
fistps
inc
in
cmp
fldcw
add
mov
repz
syscall
adc
cmpsb
test
cmp
mov
and
test
popf
xor
mov
cltd
test
sub
ret
js
xchg
jg
push
rcrb
push
cmp
sbb
fmull
jo
mov
push
jno
xchg
xchg
stos
hlt
call
jno
cli
lock
test
insb
and
adc
int
pushf
mov
mov
aad
addr16
popa
sbb
loope
adc
mov
inc
bound
add
rcll
push
cmp
pop
cltd
es
mov
sbb
gs
or
inc
int
xchg
in
repnz
mov
push
cmp
sbb
int
call
pop
cld
mov
and
int3
mov
aam
sbb
inc
sahf
out
inc
jb
pop
shll
rcrb
jl
stc
pop
push
xor
in
pop
pop
lea
adc
jp
pop
call
jo
mov
or
je
je
cmp
jmp
mov
pop
loopne
popf
insb
in
or
pusha
iret
cmp
es
stos
sbb
fistpl
sti
push
cmp
pusha
setl
xchg
cmp
cwtl
sahf
push
outsb
mov
stc
jae
pop
bound
mov
jne
adcb
sarb
jg
lds
push
je
cli
jg
ja
in
mov
scas
or
inc
xor
sbb
inc
and
push
jecxz
insl
jecxz
push
jo
ds
shlb
pop
mov
sub
ds
mov
add
decb
shlb
add
and
jle
mov
loop
leave
rcrb
fildll
sub
push
out
mov
fmull
xchg
filds
hlt
out
or
and
shrl
cs
xor
push
cmp
imul
clc
icebp
mov
icebp
xor
cld
push
gs
stos
ret
jmp
in
cmp
mov
cwtl
cmp
lcall
sub
pop
or
test
xchg
sub
fsubrs
mov
or
lahf
inc
pop
pop
push
push
mov
jle,pt
or
push
outsl
repnz
lahf
push
pop
jp
sbb
mov
add
shlb
mov
pop
sarb
sub
inc
enter
pop
mov
jnp
loope
scas
loop
jbe
ficoms
shl
pushf
out
addr16
cmp
pushf
iret
in
pop
hlt
inc
dec
sbbb
pop
iret
nop
mov
sub
enter
push
arpl
dec
sub
xor
lcall
mov
or
loop
cwtl
and
pusha
xor
aaa
mov
addl
mov
out
mov
ljmp
ret
xor
test
adc
cmp
cmc
lahf
scas
in
shrb
aad
and
test
lods
sub
or
sbb
pop
ds
adc
das
shll
movsb
cmp
jae
inc
cmpsb
jle
int3
jb
and
jo
push
mov
or
xchg
repz
inc
mov
adcb
cmc
cs
shr
inc
mov
sbb
or
or
and
jb
xlat
aas
add
mov
aaa
jl
add
aam
or
xchg
push
jno
jns
fsts
call
cmp
dec
hlt
ja
sbb
xchg
pop
adc
mov
jmp
sbb
xchg
adc
mov
repz
sbb
cltd
inc
into
inc
fstl
and
imul
lods
adc
shl
pop
mov
mov
rorl
popf
addr16
mov
mov
dec
shrl
bound
xor
and
cmp
lods
lret
dec
mov
jne
int
notl
movsl
leave
push
repnz
adc
icebp
bound
inc
xchg
pop
loope
sub
mov
push
repz
idiv
fwait
dec
fsubrl
cmpsl
sub
popf
ljmp
add
cmc
fwait
repnz
push
and
pusha
nop
mov
cltd
dec
ficoms
pop
scas
movsb
imul
and
mov
stos
pop
pop
call
lahf
das
out
xchg
iret
sub
cmp
ret
push
push
sub
cmpl
jns
push
sbb
adc
xchg
adc
dec
add
xchg
clc
xor
jno
fcmovb
das
lea
push
pop
xchg
mov
stos
stos
outsb
sbb
leave
dec
int
mov
sbb
inc
pop
adc
es
ret
cmp
ss
insl
xchg
nop
pop
xlat
adc
scas
push
ret
in
stos
decb
cld
mov
pop
scas
push
mov
adc
das
cmp
lods
jbe
sub
xchg
and
shlb
lods
repz
mov
sbb
inc
clc
push
pop
sbb
fiadds
aam
adc
popa
jmp
popf
shrb
adc
orb
inc
dec
mov
loopnew
xchg
lods
pop
pop
mov
ja
pop
and
gs
mov
cmp
je
faddp
roll
arpl
sti
test
ja
add
jnp
adc
or
mov
es
fnstenv
int3
xor
pushf
adc
or
rcr
mov
inc
add
lods
or
out
cltd
jmp
stos
xchg
or
xor
adc
in
stos
xchg
or
loop
aad
mov
mov
nop
jnp
xlat
adc
ss
dec
add
mov
vminsd
jb
cmp
sub
push
jae
js
bound
inc
xchg
test
sbbb
movsl
xlat
cmpsl
sub
push
out
sub
lahf
push
int3
in
sub
call
pop
mov
push
sub
es
sti
out
jno
aam
dec
dec
pop
iret
pop
mov
addb
outsl
cmc
cmovs
add
stos
mov
shlb
ljmp
shr
pop
in
cmp
or
out
pop
fcmovnbe
movsb
jecxz
into
lock
jp
jl
mov
or
mov
cmp
dec
jae
push
imull
mov
sbb
push
or
or
stc
jnp
aam
popa
test
mov
fnstcw
xlat
mov
xchg
push
mov
and
loop
ja
hlt
add
sbb
out
adc
rolb
fwait
inc
std
push
push
dec
xor
lock
sbb
stos
sub
int3
orb
jl
mov
cmp
mov
fs
mov
mov
xchg
sub
popa
mov
fidivrs
dec
pop
idiv
scas
loope
jl
mov
scas
daa
dec
movsb
xchg
fdivr
sbb
pop
xchg
shl
clc
pop
xor
and
mov
pop
push
bound
sarb
cli
dec
movsb
or
pop
int3
pop
push
xor
cld
inc
sub
fs
cmpsb
cmpsb
call
inc
out
cli
hlt
imul
shll
clc
mov
sbb
push
lret
or
push
adcb
jns
scas
outsb
lret
lret
push
mov
pop
sbb
repnz
stos
int
inc
or
pop
adc
xor
ss
loop
pushf
test
mov
cmp
mov
dec
faddl
cld
mov
fndisi(8087
ljmp
movsb
out
dec
sti
roll
stos
pop
inc
xchg
in
mov
add
jmp
push
mov
cmp
js
push
or
push
filds
pop
xor
rclb
and
jbe
cli
xchg
repz
and
jb
cmpsb
addr16
pop
sbb
rorl
mov
outsb
mov
dec
lcall
mov
test
mov
push
dec
pop
loopne
cli
pop
inc
mov
aas
add
imul
jns
int
xchg
and
out
shlb
fdivs
pop
int
js
xlat
imul
cltd
jecxz
mov
nopl
push
arpl
rcll
cmp
dec
and
cmp
pop
mov
ficoms
xchg
cwtl
int
pop
sarl
mov
cmp
loopne
ja
sbb
dec
fs
sub
pop
cld
mov
inc
sub
movmskps
adc
or
dec
aad
outsb
mov
fisttpll
out
icebp
test
data16
ret
pushf
adc
stos
cmpsb
stos
and
movsb
arpl
sti
ljmp
ss
stos
push
and
mov
sub
jno
nop
jmp
nop
cmp
ret
and
jge
mov
or
cli
push
xor
mov
or
arpl
xor
test
test
imul
dec
fidivs
psubd
out
dec
fucomip
cmp
add
std
clc
hlt
inc
fdivl
and
call
into
xchg
jl
cmp
mov
xchg
les
mov
jle
out
push
stos
in
icebp
pop
aaa
or
addr16
loop
xchg
aam
jecxz
cmpsl
xchg
push
cmp
mov
push
insl
mov
ret
adc
mov
in
inc
mov
sub
cmpsb
outsb
inc
dec
loope
inc
incl
fisubs
pop
mov
out
xchg
insb
addb
pop
pop
lea
mov
cld
arpl
aas
pop
iret
sub
mov
daa
and
adc
into
fbld
jae
adc
nop
push
mov
rorb
mov
and
sub
in
fadds
imul
js
or
bound
push
push
stc
nop
sbb
loopne
in
jmp
imul
clc
jle
sbb
or
xchg
ret
pushf
pop
ror
mov
push
push
das
jge
ja
in
cmpb
shrb
sarb
lods
stos
push
popa
push
int3
sub
xlat
fidivrl
std
mov
push
push
pop
or
ja
push
repz
aad
movsb
mov
xchg
xchg
std
lds
sub
outsb
rorb
jne
xor
adc
inc
dec
fiadds
mov
pop
xor
xchg
imul
xor
dec
mov
pusha
mov
cmp
mov
inc
add
lea
mov
mov
inc
mov
cmpsl
dec
jmp
xchg
dec
scas
cwtl
popf
fldl
je
or
stos
jne
fwait
sub
out
xchg
inc
das
lcall
sahf
mov
in
fists
hlt
xchg
fdivs
ljmp
pop
lds
jnp
dec
push
movsb
mov
sahf
add
pop
dec
lcall
or
into
sbb
xchg
stc
sub
fimuls
ficompl
stos
stc
lods
jp
xchg
pop
sbb
adc
outsl
imul
popa
dec
jp
cmp
dec
repz
dec
cmp
iret
xchg
sub
or
xor
xlat
aas
add
add
jae
xchg
cmp
or
or
out
frstor
ret
fldcw
or
insl
xchg
xchg
xrelease
add
andl
out
mov
inc
pop
mov
cmp
cmovae
dec
xchg
mov
pop
cmc
aas
mov
sbb
arpl
dec
sbb
out
jb
iret
or
add
mov
and
add
call
push
mov
stos
call
mov
and
mov
cmpsl
or
ficoms
out
sub
xchg
xor
dec
inc
jge
cs
in
aaa
xor
rorl
in
and
jmp
hlt
add
scas
in
xchg
pusha
add
inc
jnp
adc
push
push
mov
fcoml
ficompl
push
pop
jecxz
scas
and
cs
icebp
mov
add
or
inc
test
xor
and
data16
jmp
in
call
ficomps
mov
ds
cs
ret
inc
hlt
inc
jmp
mov
push
sbb
push
pop
xchg
dec
leave
jnp
xchg
dec
je
fmuls
xchg
and
scas
sub
pusha
jge
test
sbbb
mov
jp
cmp
push
add
xor
cmp
in
hlt
sahf
pop
stos
sub
cmp
mov
in
shlb
cmp
jne
enter
inc
out
fbstp
or
scas
add
fsubr
jo
outsl
mov
mov
sub
js
mov
std
lock
es
leave
in
sahf
xchg
adc
test
jnp
mov
sub
dec
or
cli
cs
in
dec
xchg
ficomps
shll
fiadds
jecxz
sub
sbb
xchg
cmpsb
inc
and
icebp
push
out
jecxz
movsl
or
push
lret
add
adc
iret
inc
shl
movsl
sub
xor
push
jns
cwtl
inc
cmpb
sarb
mov
ljmp
mov
mov
adcl
icebp
sbb
dec
fcoml
stos
xor
dec
insb
loope
ljmp
lahf
mov
lock
mov
ret
lahf
push
and
sbb
stos
mov
xchg
cmp
push
call
pushw
mov
shlb
sbb
adc
call
sbb
xchg
push
pop
lahf
jnp
int
arpl
xchg
mov
adc
cmpsl
sub
daa
into
mov
cmp
aas
out
and
sub
fisubs
cmp
mov
inc
inc
mov
and
xor
sbb
or
rcrb
push
repz
jle
inc
movsl
pop
cmpl
int3
cmp
xor
push
lods
bnd
add
mov
int3
or
fcmovbe
shrb
ret
lret
sbb
cmc
cmc
dec
sbb
dec
or
ficompl
rcll
stc
jae
inc
jae
jae
sub
sbb
rorb
js
mov
jo
push
pop
pushf
stos
lret
stos
xchg
mov
push
rcr
divl
mov
mov
cmpsb
in
add
and
jno
sub
sub
lea
test
xor
mov
pop
stos
inc
inc
pushf
or
mov
and
adc
mov
jne
test
std
inc
add
mov
push
cmp
std
jp
pop
add
jnp
rolb
or
or
out
jecxz,pn
sub
mov
fistpl
sbb
pop
mov
aaa
xchg
adc
sub
into
test
sbb
jno
add
hlt
sub
lds
cmc
je
ja
sbb
rcll
nop
dec
iret
loope
hlt
jno
jp
mov
fldl
xchg
pop
and
pop
popa
cmp
test
adc
repz
leave
dec
inc
adc
ljmp
sub
imul
fsubrl
and
add
adc
add
outsb
sub
pop
out
dec
loopne
xor
insl
push
and
testb
aad
es
mull
dec
sub
cmp
push
jmp
repnz
outsb
sub
xor
rcll
iret
xchg
pop
rcrl
hlt
push
outsb
jecxz
and
lods
dec
icebp
xchg
fisttpll
lea
jo
ja
les
imull
stos
rclb
push
std
inc
push
clc
pusha
push
adc
loope
popa
js
push
ja
xchg
jno
outsl
rorl
popa
mov
pop
jecxz
sti
cmp
push
in
test
pop
add
fidivrl
mov
inc
adc
loope
inc
add
dec
mov
sbb
test
add
jecxz
jae
inc
xor
push
sub
mov
popa
or
mov
push
not
in
dec
insb
std
notl
mov
flds
mov
lods
xor
test
cmp
ss
outsb
pop
cmovl
cmp
sbb
jle
popf
mov
jb
les
jb
cli
pop
scas
xchg
jmp
push
cli
or
xor
mov
pop
mov
outsl
push
jnp
dec
ss
pusha
mov
out
adc
lret
es
pop
cmp
inc
inc
mov
cmc
mov
aad
cmpsl
movsl
pop
mov
int
aad
xchg
mov
or
mov
pop
jmp
insl
test
das
call
test
das
sbb
in
mov
push
dec
fists
jb
adc
into
scas
sbb
loope
outsb
jnp
insl
ret
sub
flds
or
pop
ja
push
adc
jnp
out
dec
std
pop
lods
pusha
and
pop
fists
adc
pop
and
mov
mov
aad
fsub
inc
dec
sbb
clc
mov
daa
mov
outsb
scas
mov
fcomp
jg
das
popf
pop
popa
xchg
push
or
adc
fldenv
mov
cli
cmpsl
or
int3
adc
lahf
sarb
insb
and
outsb
inc
jmp
jg
test
imul
jmp
inc
js
out
ja
aad
xchg
inc
mov
js
pop
hlt
jbe
add
cmp
lods
cli
test
mov
and
cmp
fisubl
popf
imul
push
ret
ret
cltd
imul
hlt
inc
dec
imul
pop
maxps
enter
mov
in
add
lock
iret
mov
xor
cs
adc
pop
iret
cmpsb
dec
push
and
jno
clc
push
pop
test
xor
push
push
ss
shl
ss
sub
dec
dec
lea
dec
stos
xor
decb
jle
insl
xchg
inc
and
stos
mov
stc
sahf
nop
out
pushf
push
xor
ret
mov
dec
arpl
scas
cwtl
std
mov
fs
xchg
push
clc
stos
sub
pop
cmp
mov
ds
cmp
popa
mov
jmp
and
inc
xchg
pop
mov
outsb
dec
or
fildl
sti
dec
xchg
dec
rorb
cmpsb
add
sub
mov
out
or
pop
cli
aam
cmpsb
in
stc
outsb
cld
mov
loope
mov
cmp
insl
add
adcb
add
pop
ret
jle
data16
ja
mov
insl
push
fsts
lock
imul
xchg
insb
inc
jmp
stc
mov
adc
std
subl
int
stos
sub
cmp
dec
mov
ss
mov
out
out
add
push
movsl
add
movsl
rol
stos
out
jb
ret
xchg
imul
push
inc
daa
mov
sbb
stos
push
imul
mov
dec
in
jmp
fadd
les
and
mov
mov
das
xor
sbb
pop
and
jg
adc
in
cmpsb
cmpsl
xor
mov
or
ss
sbb
out
dec
arpl
leave
movsl
imul
inc
push
push
std
aad
sbb
mov
lock
dec
shll
dec
push
xchg
jne
shl
or
sidtl
or
psubd
lods
jno
inc
loop
pushf
sub
testb
and
xchg
popf
hlt
gs
push
or
push
aam
mov
mov
mov
icebp
sbb
or
mov
into
or
repz
dec
jbe
sbb
repz
sti
test
fsubrs
clc
inc
fs
test
add
jbe
fsts
xchg
push
inc
out
ljmp
rcrb
dec
xchg
aam
push
sahf
fstpl
je
ds
test
fs
add
repz
test
inc
jge
push
sbb
mov
xor
mov
add
aam
loopne
mov
aaa
pop
sbb
or
cmpsl
call
shll
xchg
rorb
jo
subl
rcrb
adc
and
lea
xor
xchg
pop
add
movsl
rolb
or
dec
popl
add
test
gs
lret
xor
js
sbb
sbb
bnd
pop
adc
fdivr
mov
xchg
fbld
cmc
ss
cmpb
mov
xchg
cli
fisttps
and
mov
test
sahf
add
dec
add
rcrb
aam
cmp
icebp
dec
xor
ror
sbb
mov
cmp
imul
pop
lea
dec
mov
dec
mov
push
arpl
fists
or
in
mov
push
mov
push
mov
mov
ret
iret
pop
add
into
outsl
fwait
sbb
clc
mov
add
cmp
inc
insb
cmove
shrl
dec
sub
cltd
or
lods
fcoml
adc
je
lret
shlb
push
mov
and
sbb
mov
pop
xchg
pop
sar
lahf
mov
push
push
fists
sbb
out
jl
cmp
push
sbbb
pusha
jg
mov
test
aas
out
jp
and
push
push
pushf
xchg
pop
outsl
pop
jo
mov
fs
xchg
or
or
mov
mov
int3
xchg
mov
and
ja
sarb
sub
xor
bound
pop
fstpt
push
sub
mov
out
fstpt
xchg
repz
pop
adc
imul
aad
arpl
fiadds
jbe
aad
push
xor
mov
or
jnp
mov
cmpb
cmp
adc
das
jge
adc
cli
sbb
pop
adc
lock
pop
cs
push
ljmp
dec
lea
movsl
popa
inc
mov
xor
xchg
or
mov
sti
adc
test
xlat
dec
push
lahf
stos
push
xchg
inc
fs
add
fnstenv
fiaddl
push
xchg
mov
jg
cmc
mov
xor
push
rcll
push
dec
add
dec
mov
sarb
xor
loopne
cmp
call
cmp
push
or
out
lds
pushf
scas
fadds
dec
or
xchg
fnstcw
rcrb
scas
outsl
mov
iret
fsts
or
inc
cld
mov
data16
push
mov
imul
jmp
mov
sahf
push
xor
xchg
movsb
mov
inc
movsb
shlb
dec
xchg
push
movsl
xchg
inc
adc
or
push
mov
dec
neg
pop
in
pop
sahf
dec
sahf
pop
or
add
xor
outsl
mov
das
mov
pop
mov
gs
inc
outsl
pushf
stos
add
inc
lret
ss
test
ja
sub
add
jae
das
adc
enter
mov
push
mov
sub
out
pop
test
inc
clc
jecxz
rolb
or
adc
and
jg
jo
outsl
fadds
cmp
iret
inc
insl
xchg
adc
pop
mov
mov
cmp
out
sub
rorl
pop
push
cmp
insb
cmp
dec
xchg
jg
mov
dec
xchg
shlb
cmp
js
imul
je
loop
sbb
xchg
ror
adc
call
andb
gs
mov
inc
mov
lock
das
bound
xor
xchg
jmp
ret
movsb
adc
mov
jne
mov
mov
jb
mov
int3
sub
push
pop
cmpsb
out
loopne
lret
push
ss
mov
and
adc
cs
xchg
push
in
mov
or
or
pusha
test
mov
out
and
xchg
pop
xchg
xchg
push
sbb
lcall
repz
fxch
jle
mov
out
xchg
mov
sub
cmpsb
icebp
loop
xchg
and
and
lcall
fdivl
cmp
fsubrl
cmpsb
push
xchg
pop
sbb
faddl
js
imul
sbb
arpl
nop
pop
lret
sbb
xchg
jae
pcmpgtb
pop
inc
or
inc
jne
lcall
fdivrs
push
lcall
xchg
sahf
test
and
aas
imul
icebp
push
cmp
dec
jle
subl
inc
test
mov
lret
stc
mov
call
mov
lods
or
lcall
sbb
cmp
jp
adc
enter
iret
fmull
add
xor
mov
idivl
arpl
xchg
pop
in
mov
test
pop
mov
cmc
cmp
dec
shll
pop
fsubl
lahf
dec
iret
lock
leave
sbb
adc
int
dec
and
xchg
lret
dec
sbb
in
push
add
subb
inc
jo
xor
nop
fimull
push
push
fs
sbb
or
sbb
outsb
outsl
xor
xor
addps
out
mov
cmp
push
mov
scas
movsb
xchg
push
inc
xchg
fdiv
clc
mov
cmp
mov
cmp
lahf
fwait
xor
hlt
pushf
popf
xor
and
mov
push
jbe
int
fmul
inc
clc
sarb
xchg
mov
daa
xchg
data16
ja
cmpl
inc
mov
pop
or
sub
xor
inc
gs
pushf
or
xchg
js
push
repnz
push
stos
lret
test
sub
aad
pop
mov
bound
xchg
xor
dec
ljmp
popf
fsubs
aam
in
ljmp
mov
aaa
xor
je
mov
rcrb
lcall
pop
xchg
sahf
lret
iret
add
and
push
push
xlat
imul
push
mov
pushf
test
mov
aas
mov
mov
lret
lds
mov
dec
cmc
cwtl
adc
mov
mov
push
add
stos
cli
inc
and
ss
xchg
sbb
outsl
sub
or
lcall
inc
push
daa
mov
mov
sbb
inc
sbb
jno
jno
fidivrl
dec
adc
dec
mov
mov
nop
xchg
pop
push
lock
sbb
popf
divl
jne
out
lock
fs
or
mov
add
mov
or
add
loop
ss
jae
sbb
push
lods
push
add
sbb
movsl
cmp
dec
