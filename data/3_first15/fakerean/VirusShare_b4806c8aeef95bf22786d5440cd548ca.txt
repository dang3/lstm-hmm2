sbb
add
mov
fs
lds
les
dec
shr
rorl
movsl
xor
roll
lea
inc
mov
and
nop
stc
xor
adc
push
gs
lock
mov
push
movsb
push
push
adc
push
lea
rorb
pop
add
push
inc
fwait
push
mov
mov
lods
jge
call
push
jo
cs
push
sbb
sbb
test
jno
xor
mov
jge
dec
stos
jno
inc
pop
jp
xchg
outsb
jp
insb
and
sbb
loop
mov
xchg
cmp
and
xchg
xchg
stc
sub
cmp
and
cmp
mov
test
mov
cmp
insl
xor
jge
iret
and
fmul
das
push
pop
jmp
hlt
incb
cmp
add
push
icebp
es
cmpxchg
dec
fisubrs
sbb
or
jo
mov
xor
adc
and
sbb
popa
cltd
lret
mov
idivb
push
push
add
and
loope
enter
inc
mov
jle
xor
dec
pop
movsb
and
xchg
inc
pushf
mov
fidivrs
pop
sbb
int
icebp
jne
andb
cmc
cmp
insl
mov
insb
mov
mov
and
cltd
je
aam
outsl
or
xor
popf
push
pop
lahf
ret
scas
adc
or
pusha
dec
add
movsl
pop
and
mov
mov
cmp
sub
aaa
or
enter
cmc
jbe
pop
sahf
mov
pop
xchg
rclb
out
in
jg
ret
aas
add
fdivr
test
or
shlb
add
mov
daa
mov
fiaddl
or
cmp
mov
dec
sub
xchg
xchg
adcb
sub
cmpsb
bound
les
push
ljmp
mov
shll
cmp
mov
add
cmp
and
jb
mov
xchg
fcmove
xchg
mov
jle
outsb
bound
out
xchg
mov
dec
cli
lds
shr
mov
lret
out
cmp
stos
lods
and
pop
cmp
or
jo
out
jp
mov
pop
push
cwtl
es
out
in
pop
xchg
dec
aas
or
inc
fwait
aas
in
pop
mov
insb
sar
xchg
stos
scas
inc
fstpt
push
cmpsl
mov
enter
insb
inc
xchg
mov
or
stos
sbb
adc
lret
cs
outsl
dec
xor
fsubrs
jb
cli
inc
xchg
inc
adc
sbb
aas
and
or
or
jge
xchg
mov
enter
fidivl
add
std
mov
sbb
stos
popa
push
pop
dec
add
cltd
loop
mov
or
sub
jb
mov
push
mov
pop
dec
sbb
and
mov
je
add
lock
mov
shlb
fstpt
mov
push
jl
std
sub
std
fisubrs
les
jl
lret
scas
shll
pop
add
or
std
jle
push
cmpsl
test
repnz
fsubrs
mov
std
mov
cwtl
cld
test
and
pop
in
xchg
std
lahf
cmp
loopne
cwtl
xchg
mov
xchg
movsb
iret
lret
or
adc
int
inc
jmp
jmp
dec
mov
push
addr16
inc
sahf
mov
mov
and
ja
mov
out
ljmp
fwait
xchg
ja
and
pushf
repnz
cmp
push
shr
in
ljmp
aas
mov
xchg
push
clc
mov
subl
xor
popl
mov
cmp
notl
sbb
loop
sub
andl
loop
enter
or
mov
lret
xchg
mov
jl
mov
aas
in
mov
xchg
outsb
and
aad
mov
lret
mov
repz
aas
and
push
mov
mul
lods
mov
xchg
test
aad
and
or
inc
addb
jl
dec
inc
push
and
cmp
sub
and
andb
insl
out
sbb
adc
sbb
nop
dec
icebp
int
sbb
cmp
sbb
mov
and
or
divl
sarl
stos
jge
jbe
jmp
cmpb
fistps
jae
mov
aam
cmp
inc
xor
movsl
xor
imul
sbbl
cmp
test
jae
cmpsl
subl
fdivr
pop
mov
cmp
call
sub
and
stc
dec
iret
xchg
pop
adc
sbb
push
xor
test
fs
sarb
fidivrs
nop
imul
sbbl
cld
pop
idivl
sub
jbe
in
or
mov
fcomip
add
lods
jo
pusha
mull
lods
test
push
mov
xlat
ret
mov
mov
fdiv
inc
test
jg
jno
imull
add
fisubs
fldl
jae
xor
jge
pop
adc
pop
fbstp
scas
mov
clc
fiadds
pop
sbb
inc
scas
scas
lea
shl
push
pop
jno
ficoms
push
and
jnp
mov
scas
push
leave
fstl
insb
xlat
hlt
or
jmp
popf
xor
xchg
insl
les
subl
adc
mov
jle
jg
subb
fldenv
jmp
mov
adc
cmpsl
imul
movsl
cwtl
out
jae
test
enter
xlat
mov
xor
shrb
cld
std
aaa
stc
pop
inc
inc
pop
sbb
fcomp
movsb
and
jl
xchg
out
mov
xchg
mov
mov
and
mov
insb
cmp
pop
das
jle
pusha
pop
es
push
adc
jno
imul
stos
mov
aas
xor
or
xchg
movsb
lods
pop
pop
jle
fldl
cmp
mov
pop
sub
enter
mov
leave
fdiv
cmp
js
lea
sub
filds
jns
cmpsb
add
test
adc
fwait
xchg
sahf
and
fsub
and
cwtl
popf
sub
jns
xor
inc
das
push
enter
mov
loope
stc
mov
mov
push
mov
popf
dec
lods
dec
push
scas
and
inc
sub
sbb
fistpl
mov
adcb
xchg
mov
scas
adc
and
addr16
scas
idivl
mov
lods
icebp
into
ljmp
sub
pop
xchg
dec
jp
adc
lret
mov
fisubrs
inc
adcb
mov
xor
scas
inc
inc
mov
cmp
sub
add
sub
mov
dec
jo
mov
mov
sbb
pop
nop
fwait
mov
inc
hlt
shrl
insb
xchg
adc
leave
sub
mov
sbb
xchg
mov
mov
fcoml
xchg
fsubrl
xchg
xchg
cmp
inc
mov
pushf
push
pop
xlat
and
or
ret
bnd
in
inc
cwtl
es
mov
lret
xchg
insl
jmp
sub
sahf
adc
pusha
lods
enter
mov
mov
stos
fldpi
push
xor
fildll
push
and
mov
ret
adc
sub
loope
test
or
iret
and
jle
into
int3
pop
xchg
dec
inc
xchg
call
in
mov
fdivrp
fists
jnp
cmc
lret
and
xchg
push
dec
into
dec
mov
std
and
ljmp
or
popa
sub
std
xchg
pop
lcall
dec
ss
repz
dec
hlt
pop
jp
inc
lds
mov
xlat
sub
adc
pop
sub
jns
lret
mov
or
or
cmp
ljmp
mov
movsl
insl
sbb
or
lock
cmp
jo
jbe
inc
xchg
icebp
in
adc
cld
and
cmp
mov
pop
mov
idivl
jle
les
aam
into
add
movsl
inc
push
sarl
add
adc
or
mov
loop
cmp
ds
clc
in
pushf
mov
pushf
push
jl
aaa
push
repz
xchg
out
insl
pop
sub
sub
mov
adcb
clc
mov
mov
into
push
in
add
and
lea
ret
sub
push
push
sarb
jge
pop
out
sarl
mov
fimull
xchg
sbb
mul
lods
xlat
lds
jb
leave
into
mov
movsl
sbbb
jl
pop
jg
test
and
mov
out
lds
mov
int
or
sbb
test
xor
lods
fsubs
pusha
push
pusha
in
cmc
cltd
aaa
push
xor
mov
pop
add
notl
sbbl
iret
jne
repnz
xor
xchg
mov
xchg
icebp
cmp
sub
call
lods
ljmp
jg
cmp
xorb
loope
mov
cmp
bnd
loope
insb
adc
pop
repnz
clc
andl
insb
repnz
out
mov
push
test
xor
daa
sbb
pop
stc
popf
popa
fcmovnb
stos
xchg
aam
xchg
insl
in
shll
call
xchg
xchg
mov
cmp
cmpsl
inc
test
int3
or
dec
xor
mov
dec
jle
push
mov
ret
cli
lret
aam
dec
push
pop
cmp
inc
lds
xor
mov
fwait
or
mov
jno
test
push
mov
mov
xor
xor
mov
insl
sbb
leave
cld
test
xchg
movsl
pop
adc
int
movsb
pop
lcall
bound
ss
dec
clc
cmp
push
or
mov
iret
pushf
or
sbb
add
pop
loop
push
dec
scas
or
add
call
fisttpl
xchg
aad
leave
push
inc
loope
fisttps
hlt
mov
cmc
inc
fisubrl
push
hlt
jmp
dec
push
enter
in
and
pop
inc
and
mov
xlat
cli
in
ret
imul
dec
cmc
test
add
das
lods
adc
sbb
insb
icebp
sub
subb
sub
push
and
imul
sub
je
mov
inc
rorb
cmc
leave
mov
inc
es
mov
jecxz
andl
and
lret
test
xchg
mov
or
cmpb
dec
cmp
daa
mov
movsl
aam
sbb
cmp
aad
jns
cmpsb
test
adc
nop
mov
aas
ret
xchg
popf
xorl
scas
lcall
insl
jb
jp
and
and
fldl
cmpsl
jecxz
int3
ds
daa
add
out
cltd
sbb
dec
fwait
adc
adc
inc
xchg
adc
xor
dec
adc
ret
jb
xchg
ja
call
rcrb
testb
sub
xchg
mov
iret
jo
xor
int3
cmp
outsl
mov
loop
in
iret
repz
out
mov
test
imul
sub
cltd
xchg
subl
adc
fbld
mov
mov
jo
push
pop
subb
lahf
shlb
ja
and
or
or
push
adc
lahf
jns
mov
cmpl
inc
inc
xor
mov
repnz
movsb
sub
fstpl
pop
pop
xchg
push
xchg
inc
test
or
sub
movl
push
inc
out
hlt
or
or
sti
dec
scas
xchg
arpl
aaa
cmpsb
xchg
adc
wrmsr
and
jbe
fimull
sbb
xchg
rclb
add
push
cmp
adc
mov
nop
pusha
inc
or
pavgw
xchg
sahf
push
outsb
dec
into
js
mov
jp
outsb
scas
sbb
add
adc
push
push
xor
adc
aaa
pop
scas
mov
pop
mov
add
call
jb
jne
jg
jecxz
jne
aas
mov
ljmp
mov
mov
int3
add
adc
clc
mov
pop
pop
loop
cmp
and
push
rclb
mov
push
xchg
lahf
sub
pushf
out
pop
adcl
repnz
test
push
nop
cmp
pop
rcl
adc
xchg
add
cmc
pop
sbb
in
sbb
dec
and
mov
mov
and
bound
push
push
adc
stos
repz
cmp
xchg
mov
addb
cmp
in
add
add
aad
sub
pop
cmpsb
jg
rorl
push
inc
add
enter
sbb
add
daa
pop
jnp
imulb
sub
push
xlat
idivb
add
cmp
inc
lods
daa
xlat
sbb
push
xor
shrb
sbb
xchg
stc
notl
jecxz
fistpl
gs
cmp
stos
xor
imul
scas
inc
cltd
push
adc
adc
xor
dec
lret
sub
rol
xchg
iret
jno
jmp
xchg
mov
movsb
xor
loope
ror
jge
rcrb
inc
xor
add
jo
cld
inc
sti
das
jo
insl
dec
dec
adc
adcl
sti
jne
in
mov
xor
jns
mov
dec
jl
addr16
push
jb
and
int
dec
stos
push
js
mov
or
ja
pop
push
mov
push
popf
ljmp
xrelease
jno
adc
ret
push
jbe
sbb
lock
xor
roll
or
or
and
hlt
pop
cmp
aas
ja
or
xchg
icebp
inc
call
mov
call
shrl
and
imul
sub
rcrl
xor
into
cmpsb
add
les
movhlps
or
movsl
icebp
push
cmp
cwtl
mov
pushf
dec
cwtl
cmp
iret
mov
push
pop
adc
inc
push
std
push
xchg
xchg
push
or
test
js
js
cmc
xor
jl
rcr
push
rorb
xchg
scas
and
lahf
hlt
jl
fcmovnbe
enter
cmc
das
sarb
adc
sti
dec
je
test
pop
or
cmc
sahf
and
rcl
cmp
or
sti
push
insb
dec
push
push
cmpsl
insb
ljmp
sti
cs
jo
popa
test
mov
dec
jnp
push
mov
enter
negb
in
cld
repz
dec
inc
in
mov
xchg
mov
in
mov
jae
lahf
dec
pop
push
inc
sti
push
es
sub
push
ja
xchg
loope
pop
pop
adc
jecxz
test
sub
jne
lock
jne
sbb
inc
sahf
dec
add
mov
jle
das
fdivr
call
xor
lea
sub
sbbl
and
mov
and
xchg
loope
jl
popa
fcompl
loopne
add
popf
xor
cmpsb
inc
test
movsl
jg
shrb
xorl
mov
lret
adc
mov
xchg
into
ds
cmc
addr16
fwait
sbb
hlt
fmull
mov
lret
adc
je
mov
mov
mov
fiaddl
into
fwait
inc
lcall
add
aam
loopne
in
push
ret
mov
xchg
push
imul
mov
scas
jle
out
jnp
adc
sub
out
mov
mov
sub
mov
fwait
sub
push
je
add
push
clc
sbb
movsb
popf
je
adc
push
xor
push
and
pop
sub
nop
ficoms
xor
ret
add
sbb
jnp
cmp
xchg
out
into
movsb
jmp
pop
negl
hlt
mov
lods
xchg
hlt
mov
scas
push
xchg
cli
push
adc
ret
pop
int
jbe
iret
push
jno
mov
aad
call
loope
addr16
sub
and
sbb
push
in
or
je
push
mov
mov
mov
les
adc
adc
fwait
push
mov
not
sub
xorl
add
mov
push
fcmovne
xor
pop
test
loopne
test
loop
and
mov
arpl
adc
icebp
push
lcall
jecxz
mov
ss
jg
pop
shr
push
jns
or
fmull
cmp
push
mov
les
add
mov
inc
dec
pop
adc
jne
dec
aaa
and
inc
loop
jnp
loopne
fildll
mov
push
fdiv
xor
mov
sub
pushf
mov
mov
aaa
push
aad
ret
fadds
test
stc
lret
mov
jge
xor
mov
jl
into
dec
inc
cmpsb
je
out
mov
mov
out
mov
jmp
pop
int
inc
pusha
fsubl
cmpsl
loop
jne
or
mov
mov
int3
jo
push
push
inc
aaa
popf
aas
or
sbb
movsb
sar
jne
inc
and
mov
rorl
dec
pop
arpl
and
pop
jmp
dec
push
xor
push
xchg
push
dec
insl
xchg
test
sbb
in
and
scas
data16
pushf
pop
out
daa
adc
out
mov
out
cmpsb
sbb
cmp
xchg
icebp
sbb
mov
pop
jae
add
dec
arpl
pop
mov
shrl
js
mov
dec
push
xlat
sub
and
jae
push
mov
cmp
and
sub
setbe
notb
jmp
test
cmp
loopne
or
out
jg
cltd
sub
adcl
mov
or
add
mov
rolb
test
dec
cmp
jb
filds
jne
mov
mov
iret
ljmp
push
into
xor
out
cld
repnz
xchg
fists
loop
and
xorl
push
push
lret
push
xchg
and
pop
jmp
pop
adc
cmpsb
aas
sub
mov
stos
lock
dec
mov
xor
or
call
js
sbb
lods
sbb
lds
or
adc
lods
in
pop
mov
xchg
mov
repnz
pop
mov
mov
mov
sub
cmp
or
dec
out
inc
in
xchg
loop
xchg
lahf
nop
mov
dec
cmp
jo
and
in
push
imul
xchg
mov
outsl
xor
fmuls
fidivs
rorb
leave
or
sbb
add
push
cmp
mov
jecxz
movsb
adc
push
in
stc
fstps
enter
cs
es
sbb
mov
cmpsl
stos
jl
je
add
add
cmc
sbb
popa
cld
add
incl
jmp
add
pop
in
cmp
test
cmpsb
mov
ds
out
xor
jnp
movb
shll
cli
fdivl
movsb
mov
imull
fsub
lcall
mov
jl
mov
jg
or
and
or
ja
test
outsl
and
xor
and
sub
cmp
add
inc
popa
inc
and
insb
xchg
lea
mov
push
pop
mov
dec
icebp
sbb
jb
add
das
hlt
push
ja
std
and
jmp
sub
js
cs
xlat
mov
cmpsb
sub
es
and
mov
popf
test
loopne
adc
fldenv
xor
pop
out
mov
mov
push
outsb
adc
inc
fisttps
adc
xchg
jns
jl
xlat
xchg
xchg
mov
lea
cmp
xchg
xor
or
xchg
xorb
outsl
sahf
add
test
cmc
or
mov
js
push
inc
aam
lahf
mov
mov
pop
push
mov
xchg
shll
pop
or
dec
pop
or
ss
aaa
inc
out
xor
mov
dec
orl
stos
mov
push
mov
and
push
scas
or
pop
enter
xor
xchg
adc
sahf
add
enter
dec
ja
test
add
jge
divb
aaa
mov
inc
pop
test
lea
xchg
jp
add
cwtl
roll
mov
daa
cwtl
cmp
xchg
ds
lea
test
pop
add
dec
mov
div
push
pop
daa
cwtl
push
jmp
in
xchg
pusha
test
adc
sub
xchg
add
jnp
and
dec
adc
out
xchg
mov
fsts
jo
ss
lcall
mov
mov
add
shrb
cs
or
xor
enter
jg
inc
jmp
cmp
int3
push
shll
clc
int
or
fidivl
data16
lods
mov
fidivrl
adc
shlb
or
je
ficoml
insb
int3
mov
je
ss
popf
mov
orl
loop
dec
and
push
lods
add
cmp
sub
fs
adc
daa
fwait
bnd
ret
cmp
stos
xchg
mov
adc
repz
adc
shr
adcb
cld
cmp
test
cmpb
ja
sbb
jl
jg
push
or
enter
and
and
lock
push
faddl
jmp
ss
and
jne
std
repnz
jb
ja
pop
das
jecxz
rclb
xchg
sbb
pop
nop
scas
cmp
sub
rcr
xor
cmc
aaa
mov
imul
mov
mov
dec
adc
movaps
mov
hlt
sarb
sub
fldl
sbb
jmp
sbb
ja
mov
lcall
out
aam
jnp
cmp
dec
mov
sbb
adcb
cmp
jbe
mov
dec
shlb
aam
mov
scas
mov
int
mov
testl
js
and
fs
lahf
jae
jno
ds
outsl
insb
insb
xor
inc
xchg
sar
daa
and
push
xchg
popa
inc
scas
or
cmp
sbb
add
pop
xlat
ljmp
fimull
mov
ds
sub
lds
outsb
inc
in
bound
sti
movsl
pusha
les
in
jns
test
jne
mov
call
add
test
out
adc
cwtl
pop
mov
mov
xchg
lret
aas
dec
lcall
je
adc
sub
fisttpl
jae
hlt
call
dec
enter
mov
test
add
push
sarl
sarb
sbb
icebp
nop
es
ret
js
cmpsl
lds
test
or
jb
adc
es
and
clc
adcl
sub
inc
jle
sub
pop
imul
aam
stos
mov
and
jne
add
or
subl
xchg
inc
aam
test
cmp
add
lods
mov
mov
test
jle
js
dec
or
mov
scas
pop
xor
mov
fstpt
rclb
dec
addl
xlat
inc
push
xlat
mov
aas
and
dec
or
es
fisubrs
mov
inc
cmpsb
mov
push
mov
jecxz
leave
mov
dec
stos
xchg
jnp
icebp
cmpl
outsl
jmp
add
inc
test
stos
push
scas
lea
mov
jg
sub
in
jl
push
je
sub
mov
pop
cmpsb
aas
not
loop
dec
dec
cwtl
lock
insb
sbb
jg
mov
shll
mov
int
cwtl
xor
scas
mov
fcmovnbe
lret
xchg
jle
jle
xchg
and
jmp
imul
movsl
mov
push
fwait
rcr
arpl
dec
add
jmp
nop
into
fs
jb
push
push
pushf
in
test
iret
cmp
sbb
aaa
adcb
dec
sti
gs
cld
mov
pop
inc
sbb
mov
sarl
js
sarl
add
enter
mov
shrb
movsb
push
sbb
insb
pop
outsb
leave
icebp
fidivs
fildll
mov
pushf
mov
addb
fs
pop
popf
fs
and
jecxz
fcoms
es
popa
mov
movups
mov
xchg
ret
push
cmpb
shlb
mov
jb
cmpl
insl
push
lahf
hlt
outsl
dec
mov
push
mov
test
xchg
lahf
fisubs
sub
shll
sahf
cmpsl
out
sub
lock
scas
push
je
mov
das
sbb
pop
mov
xlat
shl
pusha
inc
nop
pop
fwait
ja
je
fisubrl
xchg
insl
or
fsubr
mov
outsl
ljmp
out
pop
mov
lcall
ret
cmpsl
add
xchg
das
xchg
fidivs
or
sbbl
jmp
xor
fiadds
fwait
subb
fmulp
out
popf
out
add
inc
out
les
dec
push
mov
inc
lods
shlb
fcos
mov
push
lock
xor
stos
xchg
popa
push
fdivr
in
loop
movsl
cmp
lret
push
xchg
ret
mov
out
inc
subb
lods
in
ljmp
scas
jns
cmp
fistps
push
popf
faddl
test
fdivr
or
and
shrb
mov
incl
scas
jne
and
mov
and
mov
psubw
xor
lret
ss
insl
pop
dec
xor
xor
leave
xchg
mov
sbb
js
gs
cmpsl
push
enter
cmp
mov
out
rcrl
add
cmp
or
pop
dec
and
cmp
das
movsb
sbb
or
int3
loopne
jle
and
in
push
sbb
dec
dec
ljmp
rcrb
pusha
lods
jnp
out
es
stos
sahf
aaa
mov
push
scas
dec
cwtl
mov
xchg
and
in
jge
fwait
mov
daa
add
movsl
jecxz
jg
movb
out
inc
mov
popf
inc
adc
das
adc
and
daa
mov
cmp
add
add
movsb
out
ror
movsl
pop
movsl
adcl
cmpsl
mov
sbb
fldt
pop
in
pop
cmc
jbe
inc
out
arpl
popf
std
cs
movsl
ret
push
lods
sub
imul
pushf
jmp
mov
or
mov
lret
cwtl
outsl
xchg
mov
xchg
pop
add
fimuls
jae
std
push
sub
lret
test
loope
fmuls
push
ds
cwtl
dec
into
in
mov
out
scas
jne
cmpsb
xchg
ja
mov
jns
call
or
inc
xchg
pop
jnp
ret
cmpsb
aam
sarb
repnz
pushf
ds
push
pop
dec
aaa
scas
jbe
icebp
lods
hlt
leave
pop
adc
mov
dec
shrb
fcoml
sahf
and
clc
xchg
data16
mov
lock
dec
fdivrl
or
pop
mov
loop
aaa
jmp
lcall
sbb
cmpl
ret
andb
pop
xor
loopne
enter
pop
fs
cmp
or
lahf
inc
imull
cmp
testb
shrb
ss
sbb
xchg
fmuls
int3
out
inc
sbb
scas
mov
andl
add
jns
push
ret
jg
jle
and
mov
push
cmc
sahf
sub
inc
outsb
dec
push
cmpsb
in
pop
adc
dec
loop
repnz
out
and
daa
stos
in
jb
outsl
fsubl
lods
sti
sub
adc
cmpl
mov
jae
rcl
mov
push
inc
outsl
outsl
fs
xor
sub
lahf
nop
int
and
call
aaa
lcall
daa
dec
faddp
das
out
push
adc
sbb
xor
loop
xor
pushl
xchg
test
push
aas
dec
add
cmp
pop
pushf
ja
dec
movsl
out
sub
sti
loopne
mov
iret
mov
mov
test
add
xor
sbb
add
jle
push
cmp
sub
dec
hlt
sub
xchg
jle
lret
fmulp
es
sbb
push
out
xorl
mov
mov
mov
inc
adc
mov
jp
ja
adc
sbb
push
loope
mov
pop
sarb
push
cltd
and
inc
sbb
lret
mov
mull
inc
push
sbb
push
xor
aam
scas
mov
pusha
icebp
fbstp
pop
fwait
pop
loop
sbb
stos
sub
ds
mov
gs
dec
adc
mov
adc
lds
lret
inc
lock
mov
and
scas
adc
jp
mov
imul
ret
jb
mov
pusha
mov
and
and
mov
mov
pop
arpl
cltd
pop
lret
shll
xchg
inc
les
arpl
mov
shll
adc
addb
es
std
and
clts
xorb
mov
scas
cmpsb
popf
in
into
mov
dec
scas
adc
add
push
packssdw
loope
in
leave
or
popa
push
pop
jae
int3
orl
mov
je
cli
adc
pushf
outsb
jl
inc
jge
dec
mov
arpl
jno
out
fdivl
stc
or
mov
mov
sub
or
hlt
pop
mov
pop
mov
adc
sbb
out
rcr
lret
out
inc
scas
jmp
pop
xchg
add
outsl
add
cli
push
xor
mov
sbb
daa
xchg
inc
paddsb
out
ja
repnz
pop
adc
iret
pusha
repnz
shll
inc
add
mov
jle
fsubrs
jp
bound
jae
dec
pop
out
jb
push
cmc
xchg
hlt
test
inc
pushf
cmp
sbb
push
jecxz
or
sbb
jl
add
loopne
pop
dec
push
and
pop
dec
jne
nop
loope
int3
inc
mov
loop
and
iret
sbb
pop
hlt
std
in
xlat
push
add
in
inc
or
daa
sbb
aaa
repz
xchg
jb
imul
xor
push
inc
in
out
sbb
lret
mov
push
lds
xchg
in
push
lods
insb
mov
enter
mov
jns
lods
mov
pop
es
fstpl
leave
rcrb
add
lahf
les
sub
mov
jnp
mov
scas
add
rorb
adc
dec
dec
push
rcll
cli
or
test
xor
lods
sbb
pusha
xchg
test
mov
popa
ret
cmp
daa
imul
rcrl
clts
or
imul
fimull
jns
lcall
js
mov
movsl
and
in
or
inc
push
adc
cmpsb
scas
jp
stos
jae
notb
cltd
xor
inc
add
xchg
xchg
popa
sub
jmp
scas
dec
test
arpl
imul
in
ljmp
cld
jmp
aad
jle
jmp
leave
xchg
add
in
sbb
cmc
push
mov
pop
jle
push
bnd
lret
gs
stc
jo
addr16
mov
jecxz
pop
stos
data16
mov
or
mov
cmp
into
lea
sbb
xchg
dec
scas
jecxz
push
mov
or
into
in
pop
push
pop
imul
sbb
bound
rcrl
icebp
push
lds
push
inc
sbb
inc
test
stos
xchg
out
jp
mov
inc
mov
repz
xorl
adc
sub
lds
dec
mov
inc
shll
inc
xlat
jo
mov
mov
adcl
popa
push
jp
cmp
das
mov
std
rcl
push
cmc
xchg
lds
in
cli
out
pop
and
jae
xchg
and
xchg
rorb
and
pop
and
xchg
popa
dec
loop
pushf
dec
xchg
dec
popa
cmp
jp
sbb
testl
xchg
loope
or
inc
push
mov
fs
mov
popf
stos
insl
xchg
xor
popa
mov
push
data16
cmp
out
cld
sbb
add
mov
xor
nop
enter
mov
mov
enter
mov
push
add
sub
sub
mov
jnp
addr16
loopne
out
stc
das
call
sub
sub
xor
jne
aam
aas
xchg
xor
mov
push
test
clc
aas
mov
mov
inc
xchg
sub
loop
xchg
dec
subl
loop
in
iret
fwait
xor
sahf
in
sub
mov
sub
call
inc
jb
cmpl
or
ljmp
mov
jns
fistps
inc
mov
aam
in
xor
sub
fsubrl
dec
dec
addb
dec
cmc
out
adc
xchg
andl
addl
je
pusha
mov
inc
pop
dec
andb
jg
xor
ds
sbb
adc
dec
mov
imul
cmp
push
out
repz
ds
add
xor
mov
push
idiv
lds
push
dec
push
push
in
mov
jo
orl
iret
fstpl
xor
call
sbb
or
iret
fisubrs
iret
sbb
sub
sbb
nop
cmp
cmp
sbb
or
push
pop
jmp
fs
subl
xchg
xor
xchg
cld
cmc
test
add
loopne
jle
insb
sbb
inc
mov
adc
cmpsl
aaa
xchg
sahf
xor
pop
jb,pt
movsl
int3
leave
dec
mov
adc
add
out
mov
aas
out
pop
pop
mov
mov
cs
adc
sbb
adc
xchg
cs
and
push
jmp
imul
aam
xlat
clc
push
push
and
in
out
mov
mov
xor
cs
addb
cld
rcll
push
out
sub
nop
inc
pop
mov
fdivrs
xchg
jmp
call
int3
xor
bound
in
xchg
ss
out
cmp
mov
sahf
cmpsb
sub
inc
ret
mov
in
xor
add
jge
sbb
outsb
das
xchg
and
mov
lret
lods
adc
daa
add
test
nop
inc
iret
or
jp
lods
mov
adc
add
xchg
jge
mov
jno
push
push
push
and
sub
lahf
ret
hlt
push
rcrb
add
mov
xchg
in
jp
xlat
mov
shrl
ljmp
inc
jecxz
mov
mov
sub
mov
pop
iret
mov
adc
or
jg
fyl2xp1
mov
lcall
ficomps
aas
and
gs
testb
pop
jo
ret
aam
xor
stos
jge
fidivl
out
mov
call
ds
adc
sbb
clc
jecxz
cltd
stos
ds
adcb
sbb
push
xchg
mov
arpl
shlb
sub
inc
imul
sbb
pop
mov
mov
int
adc
inc
movsl
lds
inc
repnz
dec
xchg
repnz
repnz
in
add
or
scas
sub
xor
push
xchg
cmp
cmpsl
xchg
sub
lcall
fcmovbe
inc
sub
adc
cmp
ret
test
call
xchg
and
das
jp
push
fwait
add
mov
push
mov
push
or
cmp
ljmp
mov
and
pop
lahf
lret
jp
jl
nop
decb
sbb
les
int3
pop
xor
inc
lret
shl
sub
lcall
or
dec
dec
lds
adc
jno
pop
jg
jecxz
cmp
mov
inc
mov
in
aad
cmp
xor
cmp
mov
incl
lods
mov
aad
loope
mov
lods
and
daa
cmp
push
dec
push
sahf
aas
lods
mov
and
sub
adc
sub
aad
cmc
inc
nop
sub
xor
icebp
inc
or
test
into
mov
and
push
cs
lea
out
xor
insl
stos
ss
test
xchg
cwtl
mov
sbb
or
dec
xchg
in
pop
cltd
lcall
mov
lods
fstpt
push
jbe
or
mov
fimuls
mov
mov
push
push
dec
fldt
movb
mov
inc
push
mov
mov
lock
in
xor
je
sbb
cld
mov
xchg
add
mov
pop
or
aaa
sbb
pop
push
leave
xor
sbb
push
aam
jno
or
xchg
inc
insb
push
cmpb
fcmove
popa
mov
dec
dec
xchg
scas
fstl
sub
or
pushf
pop
pop
fildl
sub
mov
insl
xlat
adcb
or
pop
popf
out
xchg
je
adc
into
jb
xchg
or
mov
lret
mov
push
sbb
inc
mov
lods
xchg
pop
cmp
cmp
ljmp
pop
and
jmp
test
dec
mov
pop
sbb
push
dec
gs
je
addr16
and
enter
lahf
std
sbb
mov
std
jae
cmp
fcoml
rolb
xor
lcall
popa
jecxz
xchg
je
outsb
cmc
imul
je
ds
lcall
stc
xor
dec
clc
mov
push
mov
pop
loopne
div
inc
xchg
pop
mov
ret
xchg
mov
gs
in
pushf
push
ja
lods
adc
inc
xchg
sbb
mov
mov
pop
xchg
inc
int
nop
mov
dec
sbb
jae
fdivl
shrb
mov
dec
lret
inc
pop
cltd
cmpsb
inc
xchg
xor
push
inc
ret
cmpsl
das
xchg
adc
cld
cmp
sti
cmpsl
push
stc
mov
sbb
pop
mov
iret
cmp
add
and
jl
sub
cmp
int3
lret
dec
test
aam
incl
bnd
into
or
fs
adc
loop
fwait
and
inc
push
fcomip
shlb
call
inc
ret
inc
mov
loope
xor
fnstenv
pop
mov
sub
dec
fildll
mov
pop
push
ret
sub
inc
mov
jle
xor
dec
lods
xchg
mov
cmp
mov
cltd
lcall
mov
and
bound
or
ret
adc
int3
adc
and
pop
xor
add
xor
xchg
incl
int
cld
dec
add
mov
cmp
jmp
insb
push
pushf
inc
shll
xor
inc
dec
rorb
mov
pop
dec
push
add
fidivrl
addr16
test
arpl
sub
arpl
and
push
insl
mov
sbb
int3
loope
stos
adc
sbb
jo
adc
repz
movsl
push
jg
setp
mov
jl
jl
call
or
cmp
int3
test
int
les
out
imul
cld
cs
sbb
pusha
fcomps
jmp
pop
xor
jb
cwtl
cmpsl
sarl
inc
clc
or
jmp
mov
into
mov
lea
aam
pop
fadd
sbbl
mov
adc
loopne
cmp
enter
ljmp
aad
jecxz
dec
mov
stos
sarl
pop
in
rclb
cmpsl
ds
iret
scas
les
xor
xor
mov
dec
std
dec
mov
and
jmp
ds
inc
scas
addps
pop
cmp
mov
pop
jb
data16
sbbl
mov
sub
in
jae
and
push
lods
les
leave
add
pop
aad
and
cmc
mov
jb
xorb
fldl
roll
je
xchg
shl
notl
mov
mov
cltd
cld
add
ret
nop
cvtps2pi
mov
cwtl
lds
or
mov
scas
and
fsubs
fcomi
ficompl
mov
adc
test
or
stc
shll
enter
cmp
cmp
xchg
mov
add
xor
imul
xor
int3
or
aaa
test
add
lods
out
js
scas
mov
xchg
lahf
insl
int
mov
xchg
adc
push
push
cmp
in
adc
scas
cmp
sbb
incl
or
xor
push
fwait
pop
testl
add
adc
int
mov
psadbw
jbe
gs
mov
pop
dec
ret
out
pop
test
xor
xorl
mov
cld
add
mov
adc
lock
bound
jne
cmpsl
mov
js
pop
or
sbb
fidivrl
lahf
and
mov
loopne
sbb
or
mov
xchg
sub
xor
lock
ja
cmpsl
adc
outsl
mov
push
insb
inc
xchg
pop
shlb
daa
pop
add
orl
jmp
sub
push
cmp
jno
or
dec
ss
out
test
cmpsl
fsubrs
sub
dec
testl
xchg
inc
push
aad
cmpl
mov
imul
movsl
mov
incl
push
outsl
push
dec
cmp
adc
mov
sbb
repz
iret
cmpsb
and
stos
pop
cs
or
push
movsb
shl
jnp
clc
addr16
mov
and
jle
mov
fldl
mov
xchg
add
mov
rcrb
mov
lcall
add
adc
outsl
xchg
push
mov
add
scas
mov
mov
in
dec
jmp
scas
push
ret
push
inc
xchg
je
mov
mov
xacquire
xor
mov
std
lahf
adc
mov
adc
xchg
cmp
xor
jno
xor
lret
lds
sbb
dec
lahf
cmpsl
jo
dec
pop
and
js
or
cmp
xchg
xor
sub
mov
mov
shrl
adc
jae
fbstp
fwait
inc
bound
lcall
add
mov
jns
cmp
or
pop
sbb
lock
sti
or
data16
xchg
loope
push
sbb
adc
imul
int
add
sahf
pop
mov
daa
call
xor
jne
pop
dec
notb
lods
mov
push
add
into
xor
adc
imul
push
nop
inc
ret
in
mov
push
sbb
add
xor
insb
push
aaa
dec
cmpsl
insl
or
cmpxchg
in
inc
ja
pop
xchg
lret
push
cmp
fs
sahf
or
jl
mov
mov
jne
loope
cmp
sbb
push
ror
adc
add
mov
test
fsubrs
push
sub
pop
push
push
dec
or
iret
sbb
test
aad
int
popf
inc
lret
add
pop
and
in
scas
insl
repz
daa
data16
xchg
push
std
int3
fs
jb
pushf
lret
enter
jae
push
push
adc
mov
int
xchg
mov
ja
popa
jmp
adc
push
pop
mov
mov
fsincos
inc
int
addr16
neg
inc
aaa
and
popf
mov
inc
fsub
mov
fwait
je
adc
mov
adc
sub
inc
mov
or
adc
mov
sbb
cmp
push
dec
inc
movhps
and
jg
adcl
inc
shlb
xchg
push
js
pop
mov
jp
sbb
xchg
clc
adc
jle
push
rcr
inc
ret
mov
cs
in
sbb
shrl
push
sahf
inc
mov
sbb
xor
jns
jo
out
mov
loope
xor
and
sub
xlat
cmp
mov
mov
data16
cmovg
loopne
fstps
sbb
push
inc
jg
pop
pop
loope
inc
pop
in
xchg
fdivl
jno
push
call
shrl
into
pop
test
push
and
sti
scas
outsl
imul
andb
dec
sbb
dec
push
rep
lods
scas
mov
inc
fsub
cmpl
dec
jmp
mov
mov
adc
and
and
lea
cmp
lret
cmp
jmp
mov
fwait
cmp
dec
push
push
bound
arpl
add
call
or
inc
jbe
xchg
mov
sub
or
add
cmp
ja
pop
jecxz
sub
mov
fmuls
fistpll
dec
popf
dec
in
lods
sti
clc
or
loope
cmpsb
ss
add
lds
stc
adc
sahf
std
push
out
insb
add
aad
push
aam
cmp
sbb
jae
in
int3
cmpl
xchg
add
in
add
and
xchg
mov
jge
dec
fldcw
inc
push
add
aad
jl
addl
add
leave
xor
mov
add
in
test
les
xchg
sbbl
add
das
adc
neg
adc
xor
jl
and
push
cmp
or
pop
cli
in
outsb
fiaddl
fstl
repz
lods
out
cltd
insb
mov
daa
dec
incb
or
dec
or
fsubrp
ja
js
jmp
jmp
adc
rcr
inc
mov
mov
pop
sbb
sub
fs
lock
stos
jne
adc
mov
hlt
movsb
add
lret
and
test
cmp
jl
dec
les
mov
mov
test
adc
jmp
and
test
je
xor
ret
xor
push
pop
negb
push
sti
adc
into
outsb
mov
add
cmpsl
pop
add
sbb
or
xor
fwait
mov
sti
mov
xorl
jno
mov
cmp
mov
mov
sbb
mov
dec
sbbb
ja
cmpsb
xor
aam
push
nop
xorb
add
pop
mov
mov
enter
mov
roll
push
repz
ret
or
and
sbb
fistl
call
ss
pop
mov
xchg
pop
mov
pushf
sub
cli
test
mov
mov
inc
les
into
mov
ss
cmpsb
sub
shll
push
mov
mov
sub
mov
cmp
adc
inc
aas
adc
cmpb
fldt
lcall
lret
push
aas
adc
jmp
adc
jge
ja
aas
aam
add
movsb
jbe
fimull
jb
or
mov
movsw
pop
mov
or
and
dec
shlw
aaa
sub
sar
outsb
int3
sub
add
push
lods
je
ret
pushf
fbstp
mov
adc
and
dec
stos
push
mov
jge
mov
sub
adc
outsb
sti
divl
sti
mov
das
fmull
lds
jl
xor
clc
mov
jo
ret
jge
test
jae
scas
jle
inc
jne
mov
lret
jne
jbe
jo
xor
ds
xor
outsl
ljmp
dec
inc
scas
std
sub
push
addr16
pop
movl
cmpsb
mov
sbb
jbe
repnz
jbe
lds
and
loopne
popa
xor
aad
stc
cwtl
repz
cmpsl
fmuls
pop
add
mov
jns
mov
ret
dec
std
xor
in
out
sbb
and
jnp
inc
adc
mov
in
dec
aaa
shl
mov
xchg
sbb
or
mov
cmp
or
or
movsb
and
mov
es
jl
fstl
and
pop
mov
into
adc
stos
inc
xchg
shlb
xor
test
mov
addb
push
or
sbb
xchg
ss
mov
xchg
repz
lods
xchg
enter
sub
pop
sub
repz
mov
xchg
add
imul
or
sub
vpunpcklqdq
bound
fs
pop
add
sub
gs
vcvtsi2ssl
adc
dec
add
je
call
je
mov
mov
mov
push
xchg
add
adc
loopne
jae
scas
dec
cltd
and
add
sbb
add
mov
sbb
jmp
and
xor
outsl
int
rorl
sbbb
xchg
xor
aad
push
xor
xor
dec
mov
mov
pusha
adc
and
test
sbb
sbb
adc
out
xlat
cwtl
pop
enter
pop
imul
add
ss
out
rcrb
data16
rcrl
push
int3
incb
insl
shlb
jecxz
adc
pop
add
jns
xchg
repz
push
and
cmp
inc
das
repnz
loop
dec
xor
ljmp
or
pop
loopne
scas
lods
xor
sub
xor
in
adc
cli
mov
adc
cmpsl
nop
sbb
push
sub
orl
or
testl
lret
out
int
jl
mov
cmc
loope
add
cmpsl
in
leave
mov
inc
cli
xor
movsb
arpl
lcall
sub
stc
jns
jecxz
dec
jg
cmp
aas
dec
fnsetpm(287
test
mov
sub
xchg
hlt
shlb
in
mov
out
movsb
adcb
pop
xlat
insl
roll
xor
fisubl
sub
test
in
xor
jecxz
jecxz
and
xchg
add
cld
push
pop
xchg
jg
dec
in
sub
sbb
and
ljmp
xchg
fdivrl
push
push
cs
or
leave
cmp
mov
les
cmp
push
addb
hlt
rcl
scas
add
les
sti
push
mov
xchg
popf
mov
loopne
iret
leave
clc
scas
add
jo
dec
sub
fistps
add
scas
mov
les
mov
xchg
out
push
cs
and
mov
pop
sahf
je
sahf
es
pop
dec
insl
add
dec
sub
in
adc
xchg
lock
fcmovu
ret
cmp
push
pop
sub
xchg
lods
xor
jns
adc
mov
push
enter
jae
fstpl
pushf
arpl
jmp
lahf
xor
pop
cmp
mov
fscale
jnp
lahf
cmpsb
jo
out
pop
pusha
jne
shlb
out
fadds
and
fldcw
lcall
arpl
lcall
lahf
test
decl
xor
das
cmp
popa
inc
in
mov
dec
gs
insl
jns
enter
mov
mov
andl
mov
sbb
test
out
fmull
repnz
sub
orl
loope
push
sahf
adc
fldenv
aaa
add
sbb
rcr
lcall
push
lods
das
push
mov
add
cmp
dec
aad
outsl
bound
adc
into
sbbl
cmpsb
hlt
jle
inc
push
sub
add
sti
jmp
sub
stos
jle
or
jne
aas
sub
mov
push
jp
pop
lods
xchg
lds
aam
fldenv
adc
cmp
push
mov
and
data16
divb
ljmp
fldcw
ret
ret
cld
lods
xchg
cmp
jge
and
fnstsw
and
xchg
std
jne
pop
pop
sbb
jl
mov
out
mov
fisubl
push
or
lods
pushf
ss
je
mov
sub
xchg
adc
pop
xor
push
or
out
or
push
cmpsb
lods
lods
mov
sub
xor
dec
push
sbb
jo
es
jns
pop
enter
test
xchg
lahf
push
dec
mov
aaa
roll
push
test
scas
scas
fisttpll
xor
mov
loopne
repnz
hlt
popa
test
push
jo
lret
push
xchg
or
rorl
mov
jmp
jnp
mov
std
loope
test
hlt
dec
and
mov
pop
and
dec
inc
out
jbe
jns
or
jb
mov
out
int3
sti
int3
xor
cltd
xchg
lea
and
xor
and
mov
flds
sbb
cli
mov
cmpsb
adc
sahf
rorl
in
ja
mov
lods
aaa
pushf
mov
cltd
cmp
into
xlat
and
jmp
jnp
inc
xchg
jns
popf
ss
inc
ret
popa
mov
add
lods
xchg
icebp
push
in
enter
andl
ss
and
mov
push
xor
imul
roll
rorl
fstpt
popf
mulb
enter
idivb
addl
call
mov
jo
imul
scas
mov
inc
int3
mov
sbb
lcall
push
int
insl
xchg
jae
jnp
xchg
ret
sahf
push
aaa
fiaddl
out
fsubl
roll
rolb
pop
iret
movsl
push
int3
xor
into
push
add
mull
mov
out
add
dec
rclb
in
int
ds
movsb
push
aad
cld
mov
repnz
jae
das
and
xchg
imul
sahf
add
adc
push
push
enter
mov
movl
sub
push
adc
outsb
adc
gs
xlat
or
aam
xor
fildl
cmpsb
sarb
js
hlt
dec
sub
andl
mov
lea
sub
cli
stc
mov
sub
in
fnstcw
sbb
sub
cmpsl
sub
sub
adcb
cli
es
adc
jle
imul
fucomp
bnd
jno
xor
jp
testb
mov
mov
sahf
jae
push
scas
pop
dec
cmc
out
sub
lea
fsubr
in
add
xor
mov
and
aaa
es
pop
ss
dec
dec
adc
out
jge
push
nop
jge
outsb
pop
and
jmp
and
lahf
or
xlat
adc
loopne
pop
xor
mov
sbb
or
jmp
arpl
sub
cmp
inc
and
mov
mov
leave
or
lods
add
jnp
sbb
ret
insb
cmc
clc
ret
aad
jo
or
or
ja
loope
xor
daa
movsb
rcrl
mov
cmpsl
cmpsb
fildl
push
int
scas
sub
mov
add
les
in
push
or
lea
jmp
jg
jmp
cltd
sbb
iret
mov
adc
mov
stos
lcall
jecxz
mov
pop
andl
adc
inc
add
lret
ficoml
jae
pop
mov
dec
repz
or
pop
lods
out
inc
cmp
xchg
mov
adc
inc
dec
inc
mov
iret
mov
lock
mov
sub
test
mov
out
mov
in
movsb
stos
cmp
aam
cmpb
sahf
clc
fisubl
and
jae
mov
test
aam
inc
and
lret
xlat
les
cmp
dec
jnp
cmp
xsaves
push
dec
adc
push
int
inc
scas
in
dec
cmp
cmp
leave
sti
sub
mov
adc
and
jns
sub
popa
mov
imul
push
cmpsb
xor
mov
cltd
popa
aas
les
dec
aad
es
inc
roll
dec
adc
insb
je
sti
pusha
loopne
pop
push
aaa
ds
and
stc
add
aaa
inc
sub
xor
cmp
and
iret
jl
add
fstpl
push
es
and
js
jle
xchg
loop
xchg
movsb
mov
mov
nop
jp
add
daa
dec
jns
fs
fmuls
jecxz
das
xchg
push
movsl
jmp
lods
adc
xor
std
jnp
not
pop
int3
cmp
aas
or
xchg
cmp
fdivp
adc
sbb
mov
pop
movsb
int
pop
aas
inc
addr16
and
ljmp
dec
xor
mov
lcall
push
push
dec
sbb
ret
insb
sub
cmp
mov
mov
mov
jb
scas
inc
sarl
jge
mov
jmp
or
mov
cmc
cmp
inc
ficomps
mov
or
fdivp
loop
inc
or
xchg
es
pop
fisubrl
xchg
xchg
push
xchg
imul
ret
sub
lahf
lods
sbb
hlt
ss
mov
jl
imul
dec
ficomps
into
inc
out
leave
dec
pushf
sahf
push
cmp
pop
data16
add
cld
dec
and
mov
cmpsl
cmp
popl
xchg
fwait
adc
or
pop
and
mov
inc
aad
cli
or
mov
outsl
daa
mov
cmp
mov
bnd
nop
mov
xchg
pop
dec
call
adcl
sub
icebp
fists
pop
andb
out
adc
pop
aad
or
sti
adc
push
lcall
adc
xchg
inc
jge
mov
lcall
into
dec
pop
jg
sbb
test
or
mov
xchg
imul
push
mov
inc
adc
mov
in
cmp
mov
xchg
int3
in
mov
add
xchg
jmp
xchg
inc
xor
push
mov
std
push
mov
or
cmpsb
jbe
das
pop
dec
dec
jge
ja
jp
adc
loop
jecxz
sub
lea
push
xchg
pop
jg
mov
cmp
into
cmpsb
mov
movsl
test
cmp
lret
in
repnz
pusha
sub
dec
shrl
adc
jns
mov
adc
movsl
dec
sbb
push
lods
mov
mov
int
pop
mov
cmpsb
mov
jg
mov
xchg
outsb
xorl
mov
jns
add
pop
pop
xor
pushf
sarb
outsl
jno
jns
inc
aad
arpl
inc
mov
out
sub
xchg
mov
fimuls
sub
loop
mov
insl
aas
push
inc
std
rcrl
int
faddl
mov
ja
cmp
jnp
xor
xor
ds
pop
jae
pop
and
and
lods
icebp
inc
pop
movsb
xor
movsb
fnstsw
call
loop
xor
jecxz
fdivl
gs
push
mov
mov
scas
icebp
cltd
pop
lock
or
bnd
sub
push
xchg
int3
dec
leave
out
jo
jle
cmp
ficomps
push
inc
lret
inc
xchg
sahf
pushf
xlat
scas
fisubl
mov
bound
jp
clc
jecxz
sarl
movsb
mov
test
mov
add
pop
es
and
insb
sub
mov
xlat
lcall
es
imul
pop
ljmp
cwtl
in
aas
sub
clc
adc
in
and
add
lcall
cltd
les
icebp
add
ret
loope
in
push
jns
adc
sub
imul
add
xlat
push
jnp
pop
inc
push
or
xchg
cmc
repz
fstl
lcall
sti
mov
enter
hlt
pop
dec
push
ficoml
jmp
add
add
sbb
into
adc
jae
sub
mov
add
or
cmpsb
scas
mov
push
push
jnp
push
sbbb
inc
int3
mov
fisubrl
ds
fstpt
loop
xchg
pushf
inc
movsb
xchg
bnd
dec
fwait
inc
jmp
pusha
push
lret
mov
loop
or
mov
xlat
xchg
outsl
push
inc
xor
dec
jp
mov
dec
gs
pop
or
and
idiv
flds
dec
mov
pop
xlat
or
lock
mov
cld
xor
push
shl
in
ja
push
sbb
lds
jbe
dec
add
jle
sbb
fwait
jmp
lods
inc
and
xor
xor
mov
out
or
pop
shrl
flds
and
and
data16
xchg
xchg
insl
inc
and
adc
pusha
fistps
inc
cmc
push
mov
cmp
lea
push
aam
sti
hlt
sbb
ret
std
vmaxps
lods
xor
pop
and
xchg
mov
add
lods
push
pushw
jbe
adc
jo
mov
dec
xor
les
inc
sub
jne
loope
test
ljmp
adc
dec
mull
push
les
jae
aas
mov
mov
sbb
sub
lods
jno
pushf
andl
jl
out
mov
fbld
pop
mov
test
mov
xor
xchg
xchg
pushf
pop
pop
xor
dec
insb
iret
fwait
dec
adc
pop
sbb
lcall
fistpl
dec
sub
or
adc
nop
mov
int
push
fdivl
popf
or
pop
cmp
pop
xchg
and
fistps
push
add
in
std
and
call
sbb
test
test
cli
popf
xor
jnp
push
jmp
lock
push
pop
lea
cld
fs
pop
mov
add
push
loope
jl
popa
fsubl
pop
xchg
imul
leave
lds
sub
fsubrs
or
stos
stos
stos
mov
mov
dec
jg
cmpsl
mov
in
jle
xor
or
push
xchg
sub
lret
and
cmp
jno
add
repnz
xchg
js
add
divb
jl
in
clc
int
insb
pop
add
push
aaa
cltd
jp
sbb
inc
mov
nop
je
mov
aas
call
mov
xchg
cmp
inc
add
aam
adc
insb
adc
add
xchg
cmpb
shlb
cmp
add
call
iret
xor
in
xor
jl
int
add
and
cmp
decl
mov
mov
mov
aaa
stos
sub
jno
std
ror
cmp
sbb
pop
mov
out
mov
mov
cmp
push
mov
ss
aas
dec
adc
cli
fsubs
jmp
in
subb
sbb
int3
mov
repnz
push
push
andl
das
icebp
dec
push
aaa
pusha
out
push
sbb
push
mov
fwait
and
mov
out
fdivl
xor
mov
stc
xchg
aaa
mov
mov
das
add
add
sti
mov
sub
icebp
xchg
push
mov
or
imul
sahf
stc
jg
nop
cmp
add
gs
cmp
fcomi
sbb
mov
movsb
inc
out
test
jbe
sbb
or
push
pop
xor
jge
sbb
jbe
jle
xchg
adc
sets
xor
mov
sub
jge
fbstp
jne
scas
push
std
je
xchg
shlb
pop
mov
xchg
and
push
loope
mov
lahf
mov
jp
stos
movl
cs
ds
add
js
jecxz
or
lret
lock
push
je
jecxz
xchg
fucomip
stos
fsubs
and
insl
cmp
stos
inc
shrl
leave
bswap
test
lret
mov
sti
out
xchg
inc
dec
sbb
mov
pop
jmp
or
add
in
xchg
gs
sub
aam
mov
and
xor
push
pop
xchg
movsb
orb
jle
out
mov
push
les
and
enter
pop
mov
adc
lcall
movsb
adc
xor
sbb
test
in
mov
test
jg
pop
gs
xchg
pop
jns
dec
jae
div
lock
fsubl
lcall
pop
popf
ret
int3
adc
inc
dec
in
jp
pushf
insb
push
mov
es
lock
cmp
mull
gs
jnp
out
xor
ret
xorl
outsb
mov
shll
xchg
cld
push
stos
xor
mov
inc
loope
jmp
fisubrs
push
sub
pop
dec
mov
loop
icebp
push
popf
cld
stc
or
dec
jp
outsl
sub
into
inc
sub
rol
xor
or
push
sub
mov
jp
andb
adc
repz
mov
xchg
and
stos
dec
pop
ror
popa
or
sub
pusha
dec
int3
dec
and
cmp
imul
std
shrb
in
lea
into
fisttps
jns
insl
sbb
push
xchg
lcall
mov
data16
scas
nop
inc
jmp
adc
lock
cmp
loopne
inc
stc
test
push
lods
in
xor
add
es
sbbl
mov
xor
lea
push
xorl
outsl
in
stos
into
ffree
clc
and
xchg
ret
xchg
adc
sbb
pop
out
fistpl
test
mov
adc
pop
cwtl
jg
loopne
jl
lret
inc
jmp
sbb
ror
add
ret
or
insl
jmp
sbb
mov
enter
sbb
ss
inc
sbb
jp
push
testb
ficomps
sbb
mov
add
fiadds
test
insb
mov
mov
and
daa
mov
xchg
aam
jo
pop
notl
arpl
cmp
lret
push
cmc
cmpsl
push
xchg
lret
mov
sub
mov
sub
mov
arpl
cmp
cltd
cltd
lcall
repz
mov
inc
das
dec
or
icebp
les
push
sbb
push
ficoml
or
mov
andl
sub
call
aas
shlb
lahf
popl
mov
xchg
daa
xchg
xchg
add
xchg
push
sbb
mov
mov
pop
dec
push
imul
out
out
mov
dec
lahf
out
xor
cmp
mov
add
test
scas
pop
cltd
pop
inc
pusha
jnp
ljmp
ret
popa
push
sub
adcb
ljmp
rcrb
shl
mov
rolb
stos
and
data16
dec
pusha
inc
push
push
ret
popf
xchg
lods
mov
xor
jg
cltd
jecxz
sar
ljmp
negb
test
out
andnps
mov
push
cmp
jl
aad
fildll
and
dec
jl
inc
add
shll
divb
fidivs
mov
cmp
mov
xchg
scas
pop
sbb
aam
aad
iret
lcall
scas
pop
negl
mov
insl
mov
idivl
xchg
xchg
xchg
dec
in
int3
push
les
ffree
pop
push
insl
leave
ret
mov
mov
sub
or
or
push
cmc
fdivl
faddl
adc
dec
xor
sub
cld
imul
push
cmp
add
mov
lahf
mov
ss
pop
rolb
outsb
ret
nop
testl
insb
mov
movsl
mov
mov
cmc
dec
sub
std
jecxz
into
shlb
mov
adc
out
lea
sub
and
stc
repz
jo
xchg
sbb
in
xor
pop
jl
inc
push
mov
out
data16
and
hlt
and
adc
sahf
mov
fidivl
push
jb
mov
cs
in
leave
clc
and
sub
lds
fcoms
xchg
jbe
rclb
scas
mov
in
mov
cmp
or
mov
ja
inc
sub
push
inc
fs
mov
aad
das
xchg
xlat
sub
cltd
outsb
or
pop
and
imull
lahf
mov
addr16
or
stos
sub
and
sbb
push
sbb
jg
aad
xor
lods
repz
pushf
push
push
inc
pop
lods
mov
sbb
add
inc
sbb
xchg
and
loope
fadd
jle
shlb
push
pusha
shrb
jle
ljmp
aam
mov
in
adc
xchg
and
inc
movsb
mov
dec
loopne
sbb
es
movsb
test
add
mov
pop
mov
or
sub
in
and
mov
cmp
xchg
push
mov
sub
mov
insb
xchg
test
gs
jo
repnz
int
sub
mov
sub
dec
pop
arpl
push
xchg
pop
push
adc
leave
popa
aam
insl
and
jmp
iret
inc
test
out
lods
xchg
inc
xchg
in
cmp
inc
test
in
sbb
lea
inc
int
hlt
jl
fnstenv
mov
movl
cmp
insb
addr16
xor
lahf
mov
and
sbb
dec
lcall
loopne
rcll
add
sub
lods
fstps
jge
mov
mov
cmp
fnstenv
lret
cltd
pop
sub
cld
ret
in
push
jmp
xchg
js
mov
jb
or
rol
ss
ret
mov
gs
stos
int3
jb
sub
add
test
int
loopne
jmp
or
lods
pop
ss
push
ljmp
push
mov
pushf
xchg
clc
jo
add
jmp
addb
jns
sub
adc
jmp
mov
mov
inc
dec
pop
leave
jno
mov
xchg
mov
sarl
cwtd
and
jmp
dec
sbbl
mov
push
mov
jns
hlt
out
inc
sub
icebp
jo
jle
das
mov
das
and
scas
push
out
popf
mov
jg
mov
mov
dec
fcoms
divb
or
iret
int3
pop
cmp
xlat
ret
dec
fadd
repnz
inc
repnz
inc
test
pop
insb
push
mov
fidivrl
mov
cmc
cmp
or
insl
cmc
xor
gs
jmp
jo
fistps
into
xor
xchg
aaa
insl
fcomps
cmp
push
sbb
popa
inc
pop
stos
cwtl
inc
xchg
sarl
jp
roll
inc
push
insb
adc
pop
mov
jnp
idivb
out
mov
inc
adc
jl
fimuls
push
dec
pop
fmulp
xor
sub
repz
and
loopne
notb
stos
pop
sbb
xchg
xor
push
test
xor
xor
xor
int3
ret
sarl
in
icebp
pusha
dec
nop
cmp
jne
jle
jg
mov
outsl
jp
mov
inc
jle
sbb
pop
cmp
fcomps
loope
jle
cmpsb
test
lret
cmp
push
movsb
xor
xor
in
js
fnstsw
daa
cmp
mov
mov
push
loope
mov
xchg
stos
sub
shll
mov
cli
add
sub
ss
mov
shlb
add
imul
push
insb
fldenv
int3
dec
mov
xor
ss
pusha
testl
push
in
shr
cwtl
mov
jne
test
xchg
inc
pop
adc
lods
jbe
out
idivl
jns
es
xchg
jge
push
fisubs
push
mov
loope
fcoms
xchg
cmp
xchg
xor
js
push
mov
push
pop
cwtl
cmp
jb
fs
and
imul
mov
in
mov
xor
add
add
pop
cmp
jae
or
jg
jbe
mov
add
inc
cmp
push
adc
cs
cmc
xor
lahf
stos
test
jge
mov
scas
xchg
in
outsb
mov
add
das
nop
hlt
mov
cmp
push
popa
je
inc
js
or
subl
mov
test
out
lock
lock
add
outsl
in
or
dec
pushf
roll
add
jbe
mov
dec
dec
clc
add
out
cld
cmp
xor
jecxz
test
aam
adc
rol
pop
fisubrs
ss
dec
hlt
jl
mov
out
adc
out
or
jo
pop
push
and
sub
data16
jno
test
xlat
roll
pop
scas
and
jae
xor
mov
xchg
imul
xor
ss
out
mov
or
leave
add
cs
out
xchg
mov
mov
xor
inc
shlb
imul
pop
push
xchg
mov
inc
arpl
mov
fbstp
lods
fdivl
icebp
movsl
repz
pop
jl
in
rorb
testl
or
xor
lret
xchg
jle
mov
in
mov
mov
xor
push
mov
ss
jp
popa
sbb
jb
loope
jno
fs
jge
and
add
mov
in
cmpsb
lds
addr16
sub
pop
cmp
rorl
orl
mov
movl
ret
cmpb
xchg
add
out
aad
adc
cmp
mov
sbb
and
cmp
loopne
push
mov
jg
adcl
xor
xor
leave
and
pushf
cmp
jg,pt
jl
cli
or
repz
mov
call
dec
notb
cli
add
inc
pop
aaa
mov
push
xchg
lahf
sbb
stos
je
pop
cs
mov
cmp
ss
xor
push
lods
sbb
pop
punpckhwd
push
subl
add
push
int3
sub
mov
sub
jg
xchg
adc
and
xchg
cmpsl
jp
sub
dec
std
push
in
fsubl
xchg
dec
or
es
lret
jge
pop
cwtl
cld
pushf
push
pop
xchg
mov
js
mov
pop
xor
or
xchg
cmc
lock
and
sub
pop
idivl
cld
and
add
push
push
iret
hlt
rcrl
dec
jge
dec
jae
sbb
movsl
dec
sahf
xor
xchg
dec
mov
push
adc
loop
inc
sbb
add
test
inc
ljmp
je
stos
ljmp
jle
out
xlat
mov
fistpl
adc
into
repz
sbb
pop
mov
iret
mov
lret
cmpsl
pop
mov
dec
loop
dec
insl
repz
dec
rclb
loope
dec
jnp
pop
mov
insb
gs
sub
add
add
xor
enter
roll
jne
cmp
fnop
rorb
popf
scas
dec
leave
ret
adc
nop
testb
jns
sbb
dec
mov
mov
push
dec
inc
mov
sbb
imul
xor
out
inc
and
add
aas
cmp
mov
repz
cmp
scas
out
cmpsl
mov
add
into
xor
mov
xor
test
in
es
mov
test
mov
aaa
ljmp
sub
and
outsl
ljmp
call
nop
inc
lahf
imulb
add
das
jbe
stc
rorb
and
sub
pop
stc
sbb
fs
mov
xlat
cltd
lock
test
call
xlat
cmp
xor
loop
cmp
inc
cmp
inc
in
pushw
negw
pop
sub
sbb
stos
push
ret
notb
xchg
dec
push
push
rcll
sahf
int
xchg
decl
cltd
lods
or
icebp
repz
push
inc
and
and
cli
fstps
xor
out
pop
popa
into
adc
lods
adc
in
je
icebp
sub
cmc
std
mov
inc
shrl
aad
sbb
rcl
xor
sub
add
imul
and
les
or
aam
cmpsl
jne
repnz
pop
in
movsl
mov
push
sbb
inc
pop
jge
stos
lods
sub
repz
in
xor
xchg
cmpsl
push
mov
adc
and
adc
add
std
inc
mov
mov
ret
xchg
xchg
sbb
pcmpgtb
mov
ja
notl
aam
pop
xor
insb
pop
divl
adc
jl
dec
mov
data16
ss
jno
and
push
fildl
pushf
int3
nop
push
js
sub
outsb
sub
sub
adc
mov
scas
mov
push
cld
cmc
push
in
mov
adc
ret
int
fwait
xchg
push
add
inc
dec
lret
ret
add
roll
sub
mov
pop
mov
sub
cs
sub
and
pusha
pushf
xchg
cmpsb
mov
and
xor
xchg
lahf
jge
pop
pop
jmp
jne
add
sti
sti
andb
icebp
shl
jmp
cmpsl
and
xchg
mov
les
cwtl
fisttps
inc
inc
or
insb
nop
outsb
sub
jb
xor
inc
inc
ds
das
push
mov
ret
xor
cmp
sarl
inc
and
mov
rcl
pushw
pop
insl
sbb
outsb
and
and
cli
sub
mov
ret
loop
fcomip
lock
jnp
dec
xchg
int3
add
aas
mov
push
inc
xchg
push
ficompl
dec
add
lcall
inc
add
mov
mov
cmp
lcall
mov
sub
push
jne
pop
xor
jge
push
xchg
pop
mov
outsb
shl
xchg
mov
out
cmpsb
adc
sbb
loope
xor
hlt
push
mov
out
dec
inc
and
adc
pop
scas
dec
sti
mov
xchg
mov
dec
sbb
push
pop
push
xchg
ret
ret
imul
mov
mov
and
fildll
aam
mov
cli
popf
mov
adc
push
addb
pop
int
cmp
and
jne
add
or
cmp
push
daa
mov
js
dec
ret
out
jp
mov
pop
and
jns
outsb
cmpb
pop
mov
movsb
fiaddl
fldl
pop
lahf
lock
xchg
ret
push
lods
jle
dec
data16
dec
xor
inc
dec
fildl
shrb
xchg
push
jbe
lahf
add
dec
pop
inc
cmp
call
shll
sti
push
lods
push
mov
dec
les
adcb
mov
adc
divl
xchg
pop
mov
test
sbb
add
pop
pushf
push
push
xchg
iret
add
shufps
aad
sbbb
fmul
push
xchg
rcr
lock
and
cltd
addb
and
mov
ds
mov
rcll
add
adc
cltd
add
cmc
int3
fimuls
cmc
mov
and
mov
lods
aaa
sti
mov
push
add
pop
je
xchg
inc
pavgw
jo
jae
push
pop
das
fcoml
mov
movsb
repnz
fcmovu
adc
jne
jecxz
jne
aas
pop
mov
stos
jmp
and
pop
dec
test
xchg
or
pop
inc
stos
shr
and
mov
sub
std
enter
xchg
fdivs
icebp
mov
inc
dec
cld
mov
ljmp
in
dec
sarb
sahf
fs
jmp
sbb
test
mov
push
mov
test
iret
cmp
pop
in
dec
inc
jle
add
jbe
cmp
adc
cmpsb
or
mov
into
lds
pop
rcpps
push
clc
repnz
and
cmc
jmp
mov
call
test
aaa
add
jb
mov
lcall
pop
jb
xchg
xor
ljmp
fisubrl
push
repnz
mov
mov
test
or
fiaddl
mov
add
push
movsb
adc
jno
push
pushf
mov
jg
test
and
lods
fstpt
sub
sbb
or
imul
pop
push
push
clc
daa
sti
out
push
push
icebp
sbb
push
xchg
out
insb
jo
fdivl
and
movsl
test
mov
mov
pop
andl
push
add
or
mov
addb
cmpsl
ljmp
push
and
and
clc
cmp
leave
cmc
idivl
xor
cmp
in
pop
push
daa
aam
jl
leave
movsb
xlat
popa
ja
ret
mov
popa
leave
popa
xchg
fcom
jmp
mov
bound
aaa
mov
add
out
pop
mov
lock
jne
xchg
movsb
sub
cwtl
insl
out
push
xlat
imul
loope
ja
mov
push
or
xor
push
pop
in
push
push
jmp
adc
or
sbb
lret
pushw
xchg
ds
insb
add
rcrl
scas
stos
repz
ret
imul
push
cmc
add
mov
mov
inc
loope
testl
gs
mov
push
mov
jmp
push
aas
pop
mov
mov
push
xor
push
mov
adc
inc
loopne
dec
sbb
fisubrl
ret
jge
ja
xor
jl
enter
xchg
stos
aas
mov
shrb
fsubl
mov
sbbl
fs
mov
insb
xor
jmp
xchg
add
sub
inc
mov
into
outsl
add
xor
arpl
sbb
mov
xor
sub
sub
lcall
jg
xchg
into
push
mov
scas
adc
outsb
rorb
xlat
iret
cld
xchg
lea
cmp
mov
xchg
lods
scas
sbb
jp
pop
cmpsl
sbb
cltd
inc
sub
fildl
lea
loop
fwait
lcall
cmp
mov
pushf
sub
mov
mov
call
ret
out
or
mov
jo
inc
jns
or
add
stos
lea
adc
mov
fdivrp
push
mov
or
hlt
mov
nop
jl
ret
aaa
enter
sbb
icebp
aad
shrb
lret
std
lret
push
out
aaa
jp
or
mov
xchg
mov
adc
cmp
dec
xchg
push
daa
mov
or
mov
and
aam
xchg
and
in
rorb
jo
pop
push
lahf
mov
fs
mov
in
sarl
test
xchg
leave
add
ss
mov
lret
jo
pop
pushf
add
shll
xchg
xor
mov
fists
je
movsl
inc
andb
popf
iret
pop
adc
pop
cmc
mov
test
and
mov
mov
cwtl
jne
aad
jg
insl
jb
call
addb
loopne
cmpsl
gs
imul
adc
mov
dec
or
sarl
jb
mov
inc
cmp
addr16
fs
adc
cmc
sub
jle
sbb
mov
inc
std
push
scas
xor
js
pop
add
sub
test
rcr
add
pop
in
or
sub
mov
pop
fsts
jmp
pop
mov
pop
loopne
sbb
fs
add
mov
xchg
jl
cli
hlt
pop
sbb
sbb
push
push
pop
cwtl
repnz
dec
xchg
pop
in
inc
in
in
or
je
lret
psubusb
cmp
aam
cs
es
mov
imul
ja
sbb
mov
xchg
dec
icebp
test
jg
cmp
lret
xor
je
sbb
jbe
pop
frstor
icebp
adc
add
xor
imul
pop
test
nop
insb
frstor
jmp
clc
fwait
xor
imul
push
adc
and
xor
mov
cmpsb
xor
imul
and
addr16
add
int3
ds
and
inc
push
xchg
enter
std
inc
add
sbb
fsubl
adc
adc
jl
clc
out
sub
inc
xor
aad
push
rclb
mov
in
cwtl
les
add
shr
dec
ss
ds
arpl
add
outsl
call
test
push
fiadds
xchg
and
add
dec
jmp
gs
adc
xor
scas
cmp
sub
mov
and
lahf
cmp
aad
dec
inc
adc
push
shlb
movsl
stos
fsubrs
mov
add
enter
sbb
push
pop
mov
dec
stos
dec
gs
shr
cmc
jmp
rcll
outsl
add
mov
sub
int3
and
add
mov
xor
fildll
lods
push
cmp
fs
xor
dec
lds
fisttpl
mov
jp
shlb
jb
pop
cmp
cmpb
out
hlt
aad
xchg
aam
mov
push
outsb
inc
dec
scas
in
sbb
dec
in
das
sarb
nop
push
shl
test
cmp
cmp
leave
ljmp
leave
fcomi
loopne
jg
repz
jge
sbb
mov
outsl
xlat
xchg
sar
mov
shr
inc
and
cli
or
aas
cli
into
in
jmp
xchg
push
cmp
dec
je
mov
xchg
lret
jg
cmp
lock
cmp
pop
mov
dec
daa
mov
lods
mov
adc
cltd
xor
and
arpl
mov
jp
in
or
clc
xor
add
in
adc
aad
aas
and
out
cmp
cmpb
mov
cs
add
outsb
and
sub
fisubrs
jae
shll
add
pop
outsl
jmp
dec
rorb
or
in
pop
inc
xchg
push
adc
sbb
fldt
int3
mov
nop
sub
cli
sbb
je
ret
mov
imul
jle
xchg
test
jnp
cmp
loope
les
aaa
aas
aad
sub
xchg
cmp
inc
fcmovnbe
outsl
adc
jo
lret
sub
lds
mov
aam
jle
sub
mov
mov
outsb
rolb
insl
shrb
test
jmp
or
test
scas
daa
pop
xchg
sti
rcl
sahf
imul
stos
push
mov
xchg
sbbl
insb
xor
movsb
fisttpll
test
mov
js
enter
jae
dec
mov
cli
xchg
sub
outsl
pop
xchg
loopne
or
adc
jne
mov
push
jmp
fisttpl
fstpt
inc
inc
movups
adc
int
test
jns
add
je
hlt
out
mov
dec
push
sarb
pop
out
scas
negb
aad
ss
cmc
fs
das
push
mov
xchg
pop
jp
fcmove
je
xchg
jl
ficoml
xor
ret
sbb
cmp
or
sti
mov
adc
test
aad
lds
stos
mov
cmp
dec
lds
popa
nop
lock
hlt
pop
hlt
mov
ret
push
sbb
js
pop
add
nop
push
cli
popf
cmp
add
das
or
aad
sbb
loopne
mov
test
daa
mov
adc
cmc
inc
cmpsl
and
scas
mov
cmp
dec
stos
popf
adc
sti
outsb
sbb
int
decb
add
adc
addb
and
mov
mov
test
mov
data16
push
in
jmp
es
sub
shr
std
xchg
inc
repz
pop
sarl
xchg
inc
ret
rcl
jae
add
movsb
add
movsl
ret
addr16
je
mov
ret
xchg
aaa
mov
xor
cwtl
gs
icebp
scas
mov
sbb
adc
sti
inc
mov
jmp
sbb
xor
fdivr
add
cmp
push
int3
in
dec
shrb
das
jnp
stos
jnp
sub
push
out
push
pushf
or
mov
mov
neg
popa
inc
mov
rcr
insl
xchg
shlb
scas
cltd
inc
shll
sub
mov
xchg
in
ret
out
xor
jne
or
pop
sarl
sub
stc
sub
shll
nop
mov
push
xchg
rcrl
inc
test
and
mov
loopne
and
pop
cmpsl
jns
xchg
fiadds
das
arpl
or
repz
dec
xor
xchg
sbb
or
push
adc
mov
add
pop
lahf
nop
inc
cmpsb
adc
mov
roll
lret
xor
cli
mov
jnp
sub
or
cmp
orb
rclb
dec
jg
in
or
fisttps
dec
jae
sbbl
shrl
call
xchg
addb
leave
nop
jb
arpl
movsl
mov
inc
push
inc
sbbb
lcall
pushf
test
in
push
fstl
or
inc
mov
insl
and
lea
call
sbb
pop
stos
hlt
neg
iret
inc
bound
ja
out
jge
and
fdivr
js
loopne
mov
aas
xor
pop
sti
sbb
cmp
cmp
pop
jp
push
mov
out
dec
fcoms
mov
repz
mov
in
pmaxub
movsb
push
es
aam
popf
scas
fisubrl
data16
mov
xor
mov
ja
test
jo
ja
fs
or
hlt
sub
test
es
inc
sti
cmpsl
and
mov
testl
and
rcll
adc
xchg
sbb
inc
or
clc
fadd
andl
pop
int
mov
mov
adc
stos
jmp
mov
jne
fistl
push
cmp
jmp
adc
sbb
cmp
inc
mov
fsubrl
push
inc
mov
pop
repnz
xor
mov
lahf
dec
inc
inc
and
inc
sahf
xchg
repz
sbb
sbb
mov
out
mov
xchg
push
shrl
sbb
mov
pop
mov
lds
popf
add
fs
jne
jno
popa
das
push
adc
jge
test
adc
lods
push
pusha
sbb
mov
push
pop
cmp
mov
fdivrs
or
popa
addr16
sbb
jg
ss
and
mov
fldz
mov
js
mov
adc
add
add
ret
stos
popa
add
aaa
xchg
add
imulb
jb
dec
je
lods
cmpsb
movsb
and
cmp
loope
inc
ret
mov
mov
push
jmp
adc
add
xchg
mov
loopne
ljmp
jl
pop
and
out
fucom
into
xor
xor
and
in
mov
inc
fdivs
lret
pminsw
bswap
sbb
in
iret
push
sti
inc
push
dec
pop
movsl
mov
mov
xchg
dec
adcb
dec
insl
ds
sub
cmp
mov
aam
jecxz
sti
cmp
xchg
mov
js
mov
pop
sub
sub
enter
pop
push
mov
add
jno
cmp
in
pop
pop
jbe
jmp
push
sub
in
aad
mov
push
adc
js
sub
and
mov
addr16
sbb
mov
int
mov
jne
testl
xchg
inc
ljmp
mov
clc
cli
mov
mov
mov
jp
leave
xor
sbb
and
test
pop
xlat
scas
fbld
push
push
repnz
cwtl
and
or
sub
in
daa
popf
loop
xchg
outsb
adc
insl
ror
xor
bound
insl
xor
sbb
stc
lods
mov
inc
in
shl
js
cmp
lret
lret
loop
xor
ja
ljmp
movaps
or
data16
jp
aas
test
jle
dec
jl
movl
adc
pop
mov
push
decl
push
leave
shll
pop
push
mov
mov
scas
std
xchg
shlb
lods
inc
arpl
movsl
clc
not
shr
lods
jp
pop
into
outsb
int3
movsb
sub
aam
je
adc
loope
popa
ljmp
dec
mov
cmp
push
xchg
scas
lret
je
ja
andb
pop
push
xchg
adcl
outsl
inc
cmp
outsl
in
jl
outsb
cmpsl
mov
push
and
scas
arpl
push
testl
push
mov
push
mov
jno
pop
ds
loopne
push
lret
or
mov
outsl
dec
sbb
and
and
mov
cltd
jbe
jle
xchg
mov
xchg
mov
sti
loopne
pop
and
add
and
or
push
push
sub
lods
adc
call
pushf
jmp
mov
mov
mov
outsl
push
inc
push
pop
stos
mov
adcb
jo
cltd
add
xchg
cli
sub
pushf
sub
out
enter
add
dec
pop
cmp
in
pop
jae
loope
xchg
addr16
xchg
cmovb
jo
sbbb
roll
clc
fwait
fwait
out
pop
andl
push
mov
jl
std
and
adc
inc
shll
lcall
fcomip
enter
cltd
jae,pn
sbb
pop
mov
ror
outsl
jnp
xchg
shl
lock
addl
xlat
mov
fs
imulb
mov
rolb
imul
or
inc
fdivrl
lret
int
mov
ficoml
ljmp
cmp
sbb
lock
mov
test
in
inc
pop
sbb
ss
pop
fwait
push
in
nop
adc
mov
scas
jmp
lcall
xchg
xchg
dec
iret
cs
add
imul
ret
or
orb
fidivl
add
addb
inc
mov
repnz
mov
sarb
xchg
push
shlb
mov
fsubrl
pop
loopne
stc
aad
jo
jbe
pop
mov
adc
push
cmpsb
mov
stc
xchg
jg
loope
daa
aad
test
inc
call
push
repz
out
sbb
xchg
xor
mov
cmp
pop
mov
mov
sub
mov
adc
add
inc
mov
xchg
dec
dec
callw
mov
cwtl
mov
rorl
xchg
sbb
mov
push
mov
dec
adc
mov
sbb
clc
call
addb
leave
jecxz
and
push
add
pop
gs
fildl
cmp
pop
lds
and
sbb
cltd
dec
lret
sbb
xchg
test
mov
pusha
gs
pop
stc
dec
xchg
imul
mov
lret
push
sbb
mov
cmp
lcall
andl
test
jmp
xchg
cmpsl
or
cmp
loopne
push
and
add
jb
pop
cmp
jg
sub
les
xor
dec
add
shlb
inc
inc
push
mov
sar
cmp
int3
jae
dec
mov
into
popa
jmp
dec
dec
callw
xchg
pop
xor
pop
aaa
sbb
push
mov
stos
sub
in
jno
loop
popf
sub
or
scas
and
jae
aad
cmp
mov
add
out
loop
mov
jns
jns
fisttpll
ret
outsb
test
leave
je
mov
or
mov
jne
fisttpll
outsl
push
lret
dec
inc
cmp
idivl
fdivl
shlb
mov
xor
sub
cli
or
ror
adc
movsb
or
data16
xchg
mov
daa
push
into
adc
mov
fdivrl
cmpsb
mov
fdivrs
in
dec
add
add
dec
and
jmp
inc
sbb
cmp
testl
pop
into
jp
lret
data16
xchg
jo
push
sahf
lods
mov
mov
mov
ret
insl
adc
add
mov
inc
inc
lcall
in
js
sbb
test
cmp
cltd
mov
xchg
shlb
mov
xor
xchg
push
loopne
push
test
addr16
or
mov
inc
mov
inc
scas
cmp
push
test
and
mov
aaa
pop
mov
add
aas
mov
pop
in
sbb
fwait
cmp
int3
add
jbe
xchg
dec
test
leave
fwait
adc
mov
sub
hlt
pushf
push
popf
das
mov
xchg
fisttpl
stos
out
jmp
pop
push
mov
fisttpll
arpl
ret
lahf
fcompl
ret
jp
mov
js
jne
sahf
sarb
push
sub
xor
out
or
fwait
mov
push
rcll
push
out
sub
push
inc
xor
mov
adc
sbb
jbe
lcall
jp
jnp
ljmp
daa
dec
addl
xor
jbe
aas
sahf
cld
dec
inc
xchg
inc
cmp
sub
call
jbe
sub
pop
sub
pop
sbb
ss
rol
inc
es
pop
inc
cmp
push
dec
xchg
and
in
jns
sub
xchg
arpl
fwait
lods
mov
xchg
inc
into
or
xchg
mov
push
xchg
cmpsb
cmp
pusha
cs
sub
fs
ret
icebp
cmc
xchg
or
std
cmp
fists
push
cmpsb
daa
lods
and
movsl
mov
push
lods
rorb
mov
mov
xchg
pop
jo
aas
sub
cltd
jns
inc
pop
movsl
enter
mov
jo
xchg
cmpl
mov
stos
adc
cmp
xchg
shll
pop
xor
cmpb
loope
sahf
notl
incl
mov
clc
pop
and
push
andl
and
inc
and
xlat
int3
mov
enter
jae
jnp
stos
ljmp
into
or
mov
addl
cld
mov
add
or
pop
lds
lret
push
jne
add
fildll
push
daa
and
loopne
push
scas
cmp
shl
lea
and
xchg
add
daa
sub
jae
cld
and
jmp
xchg
loope
dec
jmp
push
cmp
cmp
loopne
mov
ja
mov
inc
fnsave
outsl
push
aad
mov
adc
in
mov
into
mov
or
lds
repz
lea
xor
push
imul
test
rorl
dec
pop
ds
add
fwait
ds
push
and
xchg
adcb
out
mov
mov
xor
js
adc
lods
inc
lahf
lea
mov
add
xor
sub
lahf
lods
cmp
clc
add
movsb
in
xor
xchg
mov
mov
scas
dec
mov
pop
sub
outsl
add
movsl
je
mov
cltd
inc
inc
xchg
cmpsb
imul
idiv
adc
jl
fstpt
ss
sarb
jp
add
jl
mov
xchg
stos
aas
and
icebp
ja
cmp
xchg
and
leave
sbb
mov
pop
lret
cwtl
clc
mov
inc
and
pop
cmp
jns
mov
xchg
cwtl
out
addr16
xchg
in
enter
incb
mov
mov
mov
out
sarl
into
cmp
cltd
sbb
or
or
jns
push
es
popa
jge
int3
cmp
push
pop
jle
out
scas
lret
inc
jmp
mov
rcll
pusha
bound
push
out
xchg
mov
dec
inc
mov
push
jl
lahf
test
mov
cmp
jecxz
jecxz
mov
das
rclb
mov
mov
mov
popf
mov
cmp
lcall
bound
xchg
je
push
pop
add
sub
pop
int
cmp
andl
inc
sbb
pop
lods
jl
test
into
into
in
jns
cli
outsb
inc
dec
push
arpl
pop
shlb
shrb
sub
mov
adcl
jmp
cs
fwait
cmpsl
mov
sbb
fnstcw
and
mov
push
xchg
orb
imul
repnz
out
mov
push
pop
lds
jns
mov
jno
xor
stos
and
push
push
arpl
cmp
and
cmp
mov
aad
push
lock
loope
xchg
xchg
repz
lea
lahf
fs
mov
fs
fbstp
es
imul
or
lcall
fs
add
in
inc
subb
icebp
sahf
adc
push
mov
mov
sub
fstpt
pop
and
fstps
push
cmp
aad
jnp
out
jo
push
mov
add
aas
fwait
ror
pop
bound
lret
fsubrl
std
jo
add
sti
jb
shlb
cmp
jnp
sbb
movsl
or
cmp
jne
sub
fcomi
fmuls
lock
sbbb
xor
stos
mov
iret
dec
jmp
stos
cmp
sbb
mov
bound
mov
push
mov
int3
xor
jnp
adc
fadd
mov
push
and
aaa
mov
call
mov
fsubrs
nop
ds
push
sarl
push
fnstcw
pop
repnz
mov
dec
insl
in
repnz
push
stc
inc
int3
jle
xacquire
fstpl
inc
test
jns
mov
push
mov
mov
aas
add
loopne
or
imul
out
xor
arpl
aam
jge
cmp
fmul
jmp
in
in
fdiv
push
cmp
out
test
fidivrs
and
pop
fcmovb
dec
xchg
ss
xchg
add
xor
addr16
cmp
xchg
xor
sti
inc
xchg
out
iret
dec
aaa
adc
mov
pop
mov
fcmovnu
mov
add
cmpsb
dec
add
fisubrs
ja
dec
daa
jge
lods
cmp
mov
mov
xchg
or
sti
sbb
xor
sub
sbb
mov
sub
pop
mov
fsts
mov
idivb
hlt
aas
mov
iret
inc
cmpsl
adc
mov
std
push
movsb
and
add
aaa
pop
sti
int
xorl
mov
dec
cmpsb
add
xor
jo
ja
orb
xor
mov
and
sub
inc
mov
in
cld
mov
mov
leave
jp
mov
push
pop
jp
dec
rol
pop
inc
scas
in
jl
daa
inc
mov
xchg
push
mov
popf
inc
jecxz
stos
fbstp
push
adc
insl
jbe
add
xchg
mov
jnp
adc
mov
sbb
xchg
scas
cmpb
cmp
dec
shrl
or
movsb
push
test
dec
lock
push
stos
add
mov
aaa
mov
lret
push
mov
leave
jb
aaa
je
lret
fimuls
addr16
clc
bound
jbe
inc
dec
idivl
sub
and
lods
ja
int3
enter
iret
jo
or
inc
arpl
and
leave
push
push
fcoms
rolb
and
jecxz
stc
sbb
test
icebp
clc
nop
mov
cmp
loop,pt
jmp
stos
cmpsb
scas
stos
pop
mov
lock
or
test
repz
fstpl
or
test
push
xchg
aam
out
mov
xor
xlat
scas
pop
adc
mov
jo
mov
cmp
sahf
xchg
push
hlt
cmpsb
out
sbb
xchg
test
pop
ss
fsubrs
test
jmp
dec
pushw
xchg
mov
dec
in
les
xchg
cmpsl
sub
jecxz
pop
push
jnp
subb
sarl
stos
sub
movsb
mov
jae
pop
jns
push
pop
mov
fstps
insl
pop
enter
fists
pop
sbb
sbb
inc
aam
iret
mov
dec
and
adc
mov
xchg
ss
ret
lret
mov
dec
sub
fcmovb
jo
fs
std
or
fadds
push
sub
adc
add
cmpsl
daa
ss
jp
adc
rol
cmp
xor
test
xor
push
in
push
clc
fnstsw
pushf
dec
cmp
call
inc
xor
pop
shll
or
xchg
orl
fs
out
inc
std
dec
inc
std
pop
nop
scas
push
pop
cld
jno
int
out
jbe
cwtl
cmpsb
push
jns
mov
mov
inc
jae
push
lock
enter
add
addb
jge
mov
and
and
cmpl
sub
cmpsl
insl
dec
int3
fcomps
xor
inc
cmpsb
loop
and
xchg
dec
and
nop
cmpsl
hlt
ss
adc
jns
sbb
shlb
mulb
inc
dec
cmc
lods
add
push
sbb
mov
nop
push
fists
lods
jmp
push
vshufps
rcl
out
jae
je
or
js
xchg
inc
adcl
andb
es
mov
ja
xchg
mov
es
push
ljmp
sub
cmp
shrl
xor
push
add
scas
loope
fldl
mov
lahf
dec
cwtl
and
adc
mov
jg
sub
mov
es
or
fbld
outsl
mov
jo
mov
jo
push
cmp
xor
sbbl
clc
mov
cmp
loopne
fs
out
enter
sbbl
push
mov
xor
cmp
ja
cltd
xor
es
sub
add
jmp
jle
xchg
into
xor
xchg
arpl
bound
pop
mov
xor
fimuls
clc
fstps
sbb
inc
mov
lret
jo
testb
pop
inc
inc
dec
dec
loopne
in
ficomps
push
add
pop
lret
jbe
rol
sbb
adc
movsl
ja
int
fstpl
xchg
lds
repnz
mov
jle
xchg
jnp
push
push
popa
xlat
jae
and
mov
jns
mull
add
aaa
cmpsb
in
jle,pn
sbb
pop
out
xlat
repz
sub
fldl
nop
push
push
and
jb
sbb
dec
xor
add
pop
outsl
les
mov
popf
sahf
xorb
or
or
mov
or
orb
and
ljmp
scas
loope
test
push
stc
mov
loop,pn
xchg
stos
mov
popa
cwtl
jmp
movsb
rclb
xor
cmp
lock
mov
out
out
xchg
and
popa
lret
and
or
jmp
addb
fcomps
mov
ret
pop
xchg
xor
enter
xlat
ds
and
or
push
popf
and
push
xchg
dec
bound
cmp
cmc
pop
sbb
mov
inc
and
adc
mov
scas
lahf
lock
shl
pop
mov
dec
mov
cltd
sub
mov
outsl
les
mov
mov
dec
pop
jno
or
je
pop
stos
inc
mov
in
sub
jb
mov
mov
je
test
out
push
in
scas
cld
movsb
mov
fstps
dec
and
push
push
adc
push
in
std
sbb
lods
std
sub
and
ljmp
or
dec
mov
cs
hlt
fsubrl
loope
mov
sub
jno
in
jmp
jbe
add
mov
jns
inc
sti
xchg
mov
dec
les
sbb
in
cwtl
shll
xor
pusha
shll
and
gs
out
imul
lret
xchg
sub
loop
sbb
shll
stos
popa
or
fstps
fists
fcompl
lods
pusha
test
roll
popl
mov
in
icebp
in
mov
jbe
sub
sbb
test
stos
push
and
mov
mov
fs
lcall
jmp
jne
fcoms
xchg
sub
ret
sub
daa
ret
imul
or
in
sub
add
pushl
sub
fwait
push
jecxz
ret
cld
pop
mov
mov
xchg
fidivrs
lods
xchg
xor
roll
inc
xchg
mov
mov
iret
mov
jo
fdivp
xchg
icebp
lret
xor
mov
push
sbb
mov
pop
nop
cmp
cmp
ret
lea
nop
arpl
outsb
and
jle
fimuls
das
ret
add
lret
ds
push
fs
xchg
lahf
push
cmp
cmp
in
fwait
or
lret
pop
xchg
cli
int3
mov
xchg
out
adc
addb
dec
jb
add
stc
dec
jne
hlt
int
cld
dec
cmc
out
inc
mov
popa
push
dec
ds
sub
mov
jg
daa
cwtl
mov
adc
mov
inc
imul
loope
daa
outsl
cli
jge
stos
push
xor
lcall
mov
jnp
bound
popf
inc
pop
incl
roll
ja
mov
dec
mov
fs
mov
insb
lods
in
xchg
sbb
pop
scas
ja
les
out
test
xlat
inc
mov
ss
int3
inc
call
in
ficomps
es
hlt
rol
dec
aaa
dec
clc
fnstsw
aam
in
nop
test
leave
out
push
cmp
jne
pop
mov
lret
incb
es
ret
lods
jl
sub
lods
mov
jp
lods
mov
sub
mov
fcmovbe
jp
cmc
jae
sbb
fimuls
push
xor
mov
or
sub
mov
sti
lds
xor
sub
packuswb
filds
icebp
fadds
adc
sarb
jl
xchg
clc
fs
stos
dec
pop
add
xor
pop
outsb
rorb
sahf
pop
stos
sahf
sub
fs
hlt
mov
sbbb
fldt
ds
cmp
cli
push
push
mov
shll
or
jmp
sub
mov
inc
stc
aad
xchg
mov
fidivs
fstl
sbb
xchg
lret
mov
test
into
pop
xchg
dec
mov
daa
leave
lret
adc
cmp
jg
rcrb
inc
adc
mov
sub
daa
cmp
mov
ds
and
sbb
das
pop
push
push
xchg
popa
xchg
inc
push
sub
push
xchg
cmp
xchg
subb
nop
in
xchg
xchg
cs
cmpsb
jmp
movsb
inc
ret
add
cwtl
mov
int
testl
movsl
iret
jecxz
roll
mov
adc
aam
ss
ss
out
out
or
pop
add
lods
imul
mov
mov
push
or
stos
xchg
aas
rorb
xchg
xchg
les
and
test
push
aad
pop
mov
sub
cmpsl
imul
pop
ss
addr16
xor
out
bnd
lret
push
jle
jns
cld
ljmp
jns
lahf
nop
inc
push
xor
xchg
outsl
repz
jp
push
enter
scas
pop
jb
dec
leave
and
sub
jl
jge
inc
divb
call
cmp
inc
aaa
idivl
out
pop
sbb
cltd
sahf
cmp
add
mov
add
xor
or
dec
pop
repnz
or
stos
daa
js
sbb
sti
jbe
pop
or
in
dec
addr16
xor
dec
and
xor
jbe
mov
cmpl
in
xlat
push
mov
data16
fdivl
ja
fidivrl
repz
jbe
lcall
subl
insb
dec
lret
stc
xchg
lods
add
lock
add
pop
leave
addb
sub
push
rcrb
adc
leave
push
inc
shl
fimull
filds
dec
rclb
adc
pop
out
ljmp
xor
call
sti
mov
sbb
lret
roll
xor
or
sbb
loop
sub
mov
mov
mov
jge
arpl
mov
or
fisttps
mov
add
sub
jae
inc
mov
outsb
shlb
inc
outsb
push
and
out
fcompl
clc
and
jb
outsb
xchg
xchg
push
popa
scas
adc
push
pusha
and
inc
xchg
push
cmpsl
mov
xor
jo
and
gs
mov
add
xor
ljmp
jle
scas
dec
adc
std
int
loope
loope
out
xchg
daa
mov
xlat
sub
icebp
sti
inc
or
inc
orl
sahf
xchg
out
dec
bound
jle
xor
lods
test
ror
lret
das
or
mov
and
popa
loopne
outsb
cmp
lea
mov
inc
jmp
pop
jo
push
pop
cwtl
into
sbb
outsb
adc
loope
jg
and
sub
add
sbb
jb
xor
adc
inc
jbe
stos
loopne
enter
jmp
xor
add
jge
ret
jp
scas
mov
enter
mov
nop
mov
sub
lock
jmp
mov
aad
dec
in
out
mov
test
mov
sub
adc
stos
xchg
mov
inc
pop
enter
fidivl
test
lea
mov
jmp
and
ja
push
shll
pop
inc
movsb
sti
pop
fwait
jo
roll
pop
clc
adc
mov
xor
or
sub
es
out
mov
lcall
popf
xchg
sahf
cs
insb
jns
mov
jns
ds
out
or
adc
or
xor
adc
test
loopne
lcall
mov
add
mov
push
fsub
cli
insb
jge
sti
lds
je
cmp
and
inc
and
push
sub
xlat
xor
xchg
jp
xor
ret
scas
stos
or
aad
or
fisubrs
icebp
sbb
test
lods
pop
fldl
mov
pop
pusha
sbbl
cmp
xchg
dec
or
push
push
push
ficompl
shrb
jle
shrl
sub
push
add
jmp
xchg
inc
xor
jnp
mov
leave
jle
loope
add
adc
mov
pop
jg
movsl
push
lahf
adc
mov
inc
jl
sbb
xchg
pushl
in
sahf
bound
lret
dec
dec
cli
push
aaa
push
pop
xchg
mov
cmc
roll
out
push
nop
push
mov
mov
mov
fcomp
aad
iret
lods
test
inc
ret
rclb
push
movsl
jmp
sbb
test
jns
push
fisttps
push
lock
and
xchg
mov
cltd
loop
xor
sub
stc
jl
loop
ret
dec
or
dec
jb
sbbb
les
inc
pop
cmp
movsb
ret
push
or
pop
push
xchg
push
ss
jp
test
stos
xchg
das
movsb
mov
das
in
cmp
test
fidivrl
sbb
mov
cmpsb
stc
clc
and
push
add
jo
jecxz
sbb
mov
aas
xchg
pop
cmp
adc
sub
nop
xchg
in
push
into
or
mov
pop
xor
mov
fsubrs
out
pop
decb
int
movsl
and
or
fucomp
es
mov
add
rclb
cmp
mov
data16
movlps
repnz
or
pushf
xchg
sub
mov
inc
lahf
loope
out
lea
pop
xor
mov
jo
ljmp
aad
inc
push
dec
xchg
incl
mov
or
push
jle
sarb
ret
popa
mov
push
stos
inc
push
sub
mov
jno
orl
xchg
rorl
dec
rol
andb
aad
sbb
jbe
loopne
pop
pusha
jo
push
shlb
pusha
pop
jae
jb
cli
in
mov
lods
bound
call
int
or
fsubs
pushl
pop
jg
jnp
mov
mov
popa
and
daa
mov
mov
aas
lahf
xchg
cmp
or
mov
or
imul
shl
xor
loope
lret
gs
imul
addl
sbb
xchg
hlt
mov
push
std
stos
cmp
test
ret
push
out
ljmp
inc
cmc
nop
stos
hlt
mov
cmp
or
dec
xchg
mov
mov
ficoms
sbb
or
dec
cwtl
je
in
je
les
js
test
cltd
cmp
ret
pop
loop
mov
lods
lods
movsb
mov
add
imul
mov
sbbl
xchg
mov
insb
xchg
push
cmp
lods
jo
mov
mov
stos
mov
push
out
lods
mov
jp
push
je
jge
or
jecxz
xchg
iret
mov
outsl
jecxz
fs
cs
jg
int
inc
ret
sar
movsb
inc
out
add
ljmp
xchg
insl
mov
dec
ret
mov
out
or
fcomps
into
sahf
pop
and
movsb
lret
mov
lods
fwait
sub
and
pushf
mov
mov
xchg
out
sbb
mov
add
mov
add
clc
or
pop
dec
lods
lods
cmpsb
xchg
in
cwtl
les
push
stos
outsb
adc
js
sbb
int3
jns
std
aad
push
fs
clc
jmp
xchg
mov
dec
inc
vandnpd
add
mov
les
sbb
add
xchg
inc
inc
pushf
leave
in
sbbl
aaa
xor
add
stc
jle
mov
fidivrs
daa
outsl
jmp
xchg
sub
mov
jge
aad
data16
out
cli
xor
sub
sub
cmp
cs
cmp
inc
sahf
cmp
pop
repnz
jbe
subl
dec
jl
pop
push
js
insl
cwtl
rclb
subb
add
jl
das
and
mov
add
mov
mov
pushf
icebp
xchg
inc
aaa
xor
pop
mov
pop
sub
mov
mov
and
jne
mov
stos
jecxz
jle
call
data16
or
inc
enter
pop
in
push
xor
xchg
pop
cmp
push
add
xlat
sbb
faddl
movsb
dec
sub
into
ret
pushf
and
fstps
lds
test
push
aaa
sbb
adc
imul
icebp
les
movsb
mov
fdivrl
mov
cmp
pushf
adc
inc
cld
addl
test
jge
sbb
jp
inc
ja
fisubl
jo
fisubl
fs
jle
cmp
rcll
mov
aam
mov
int
ret
sub
fcompl
aas
jns
in
or
sti
xor
roll
sbb
fstpl
sbb
pop
aaa
rcr
addr16
mov
loopne
pop
lea
or
mov
add
repz
xor
mov
pop
int3
jmp
jg
je
sub
test
xchg
mov
outsl
add
jns
push
xor
in
sbb
xor
mov
inc
xor
adc
scas
clc
sub
repz
pop
in
sbb
inc
cmp
mov
iret
mov
jno
mov
enter
xor
cmp
mov
jae
les
inc
pop
loope
inc
roll
daa
cmpsb
xchg
adc
pop
cpuid
mov
dec
icebp
xchg
or
cwtl
mov
lret
jno
cltd
icebp
adc
xchg
pop
or
sbb
and
fld
and
xchg
je
adc
sub
adc
pop
sbb
adc
xchg
test
pop
sbb
mov
cs
xchg
sub
test
dec
pushf
sub
add
idivb
jbe
cmp
ds
jmp
stos
push
lods
mov
loopne
rol
pop
scas
push
ret
mov
add
repnz
push
add
shlb
cmc
daa
push
cmp
test
loop
aam
jl
pop
gs
pusha
xchg
push
mulb
inc
push
stos
mov
dec
jmp
mov
dec
inc
mov
jle
imul
dec
push
test
mov
clc
dec
aas
fisttps
call
add
add
inc
xor
mov
cmp
fcom
adc
das
xor
loop
cmpb
xor
in
add
iret
clc
mov
mov
shll
mov
pop
inc
rcll
stos
jo
insb
movsb
cmp
push
int3
pop
popf
and
bound
sbb
mov
push
scas
fisttpll
out
incb
sahf
add
nop
xchg
cmp
call
inc
in
lods
mov
shlb
lret
fwait
popf
test
cmpsb
xor
inc
repz
call
cmc
mov
rcl
int
dec
test
mov
dec
cmc
jg
push
xor
cli
sub
mov
shrb
pusha
ror
adc
dec
and
mov
popa
sub
cmpsb
enter
mov
je
inc
in
rcrb
popa
les
js
push
in
pop
dec
and
mov
mov
or
mov
pop
sub
insb
sub
jo
rclb
leave
xchg
adc
in
fidivrl
sbb
cmc
xchg
scas
xor
dec
fwait
int
mov
xor
dec
cld
imul
jmp
inc
cli
gs
shlb
dec
dec
jno
int
pop
jo
or
repnz
inc
andb
shlb
jne
jmp
push
push
cltd
jnp
arpl
lds
mov
cld
lret
arpl
jb
adc
sub
aaa
js
lds
cmp
int
rorb
add
bound
and
add
addr16
add
sarl
push
inc
adc
sbb
push
dec
push
leave
lcall
fimuls
out
out
jbe
js
mov
movsl
call
decl
imul
out
out
out
pop
mov
push
scas
nop
leave
or
out
dec
dec
cmp
dec
mov
loope
dec
jge
inc
inc
fmul
in
sbb
insb
cmp
mov
jecxz
mov
mov
mov
push
mov
jg
test
cwtl
and
pop
pop
adc
push
popa
cmp
pop
sbb
out
stc
int
cmpsb
shlb
ljmp
push
cmp
jnp
jmp
insb
lcall
pop
push
dec
cmp
call
push
or
adc
ja
sub
pop
jg
inc
bound
jp
mov
adc
pop
inc
nop
cs
pop
cmp
insb
jnp
or
test
add
aam
popa
movsl
jp
and
and
or
add
xchg
out
cmpb
xchg
adc
pop
dec
jns
mov
sub
insl
popf
sbb
rolb
xchg
imul
addr16
loop
std
arpl
jno
ret
daa
push
das
outsl
xor
pushf
xchg
loopne
mov
aad
call
or
adc
cli
jg
mull
movsb
push
and
dec
imul
stos
jnp
mov
mov
lret
or
mov
lea
push
popf
lods
clc
pop
into
lock
pop
xor
xchg
adc
lcall
sub
jo
jb
mov
fsubs
jge
repz
jp
call
loopne
hlt
ror
clc
je
aad
movl
in
jnp
jne
stos
push
jae
add
arpl
gs
es
add
adc
cmp
movsl
das
push
push
out
pushf
je
xor
sbb
jne
ds
jg
nop
pop
xlat
mov
xchg
rcrl
scas
loope
aad
aad
aad
jl
hlt
pop
add
and
lret
cmpsl
xchg
add
lret
sbb
jne
add
xlat
sahf
mov
mov
mov
std
movsl
adc
fnstcw
jne
aam
push
orl
in
mov
insb
arpl
iret
jmp
shll
aas
negl
mov
mov
std
add
xchg
sub
sbb
sub
jno
xorl
adc
push
out
mov
mov
sbb
iret
pop
movsb
cmp
sub
jb
popa
arpl
insb
hlt
imul
stc
fdiv
iret
push
rol
pushf
dec
inc
or
fisubrl
dec
mov
push
ret
dec
mov
push
test
pop
push
out
push
movnti
adc
xchg
int3
mov
clc
and
pop
test
mov
push
sub
jecxz
mov
negl
push
test
cmc
xor
sbb
lahf
leave
lock
scas
xorl
push
stc
xor
xor
xlat
and
push
inc
jb
cmp
out
fcoml
sub
enter
or
dec
adc
xchg
cmp
mov
cmpsl
jae
clc
pop
pop
cmp
mov
pop
lret
clc
dec
daa
fisttpl
ret
call
out
sbb
xchg
push
int3
mov
test
jns
sub
xor
sbb
data16
test
sahf
cmpsl
jb
xchg
out
sbb
out
mov
jl
or
leave
xor
daa
jo
out
add
push
jecxz
jecxz
cmp
cmp
fstpl
addr16
jge
mov
xlat
inc
data16
ds
jmp
clc
adc
test
enter
sub
test
xchg
fstl
mov
bound
push
stos
xchg
sub
lret
test
out
repnz
xor
rcr
adc
lahf
imul
inc
mov
insb
pop
shl
xor
fistpl
cli
ret
popa
xchg
je
mov
jno
jno
mov
add
xlat
push
das
push
xchg
dec
gs
sub
push
popf
and
pop
std
fisubrs
cmpb
jle
dec
pop
inc
sbb
inc
push
out
cmpb
ret
push
leave
and
pop
int3
imul
fdivrs
dec
cmc
lret
dec
ret
addr16
data16
jmp
lahf
pop
push
jmp
and
stos
xchg
xor
ret
sub
push
xchg
inc
jmp
int3
and
sbb
clc
pop
and
rolb
stc
aaa
sub
stc
push
or
imul
or
test
out
in
adc
push
jl
add
int
fwait
inc
or
cmp
and
mov
cltd
fisubrl
lret
sbb
andl
les
cmp
jmp
mov
es
mov
inc
repz
add
repnz
addb
push
mov
dec
jno
inc
jge
lods
adc
mov
jmp
scas
out
insb
sti
pop
dec
test
loopne
aaa
dec
sbb
mov
movsl
xor
xchg
into
mov
sub
lcall
push
jb
inc
fsubrl
push
cmpsl
mov
scas
jl
mov
dec
jle
mov
mov
cltd
inc
add
adc
rcrb
dec
in
popa
sbb
xor
cmpsl
std
xchg
cmc
mov
das
or
sub
mov
pop
int3
cmp
sbb
pop
dec
gs
movsl
pop
xchg
dec
mov
call
pop
jno
ss
addr16
push
ret
push
flds
pop
mov
sub
xchg
mov
add
hlt
inc
pop
loop
and
xor
aaa
enter
cmp
lret
lret
orl
jg
push
mov
cwtl
cmp
rorl
mov
fwait
inc
push
xor
addr16
or
mov
ret
xor
or
popf
iret
xchg
or
mov
xchg
loopne
mov
add
jmp
ljmp
inc
movsb
sbb
push
push
iret
xlat
cmp
adc
ljmp
stos
dec
imul
inc
push
and
mov
loopne
sarl
imul
ds
lods
clc
imulb
cmp
cmpsl
jmp
leave
ja
sti
jb
push
jae
fisubl
shrb
push
pushl
jae
data16
mov
adc
imul
mov
hlt
pusha
fs
cmp
jo
mov
dec
or
adc
sbb
push
dec
sbb
cli
in
inc
sbb
push
cli
push
cmp
and
imul
push
daa
or
inc
push
xchg
aad
sbb
sarl
cmp
mov
push
pop
sbb
add
cmp
mov
daa
loop
loop
and
loop
dec
dec
mov
ds
push
dec
out
add
jecxz
pop
sub
cmp
imul
jo
ds
jg
pop
jo
sbb
and
stos
mov
shll
leave
ficoms
fsubrs
mov
dec
pop
cs
in
outsb
aam
pop
orl
lds
jns
ja
mov
cmp
mov
dec
cmc
dec
ret
adcw
orb
jns
mov
inc
idiv
fwait
and
xorl
sbb
xor
mov
fstpt
or
stos
sbb
arpl
add
mov
call
mov
and
cmp
xlat
imul
mov
out
push
xchg
sub
mov
mov
add
loope
jmp
popa
aam
cs
fsts
add
outsl
adc
dec
and
rcll
in
int
jg
push
xchg
and
popf
jle
sub
outsb
rorl
sti
jne
ret
jbe
cltd
mov
sub
mov
cmp
sbb
xchg
mov
rclb
sbb
push
lods
out
fmuls
repz
imul
sub
mov
int
ja
pusha
sbb
push
mov
out
and
dec
pushf
shlb
jb
cmp
sbb
adc
pop
push
jae
lods
pushf
addl
dec
cmp
push
out
mov
out
jg
xchg
xchg
mov
cld
je
popf
popa
scas
mov
xchg
out
dec
pop
push
xor
nop
sti
push
xchg
ss
sub
cmpsb
jns
xorb
pop
arpl
ss
insl
adc
loop
mov
insb
repnz
dec
sub
lcall
jl
mov
fmull
xor
sahf
push
je
ds
or
mov
shll
push
push
jne
sub
pop
mov
movsb
js
insl
scas
ljmp
mov
inc
fidivrl
outsb
add
pop
repz
pop
add
fnstsw
jge
sbb
int
push
sub
jecxz
ficompl
sub
repnz
pop
xor
xor
xchg
js
xchg
sahf
sub
out
adc
and
gs
push
jbe
mov
scas
or
lds
aad
sub
cmpsb
jb
jecxz
fwait
imulb
fnstsw
mov
push
enter
hlt
dec
mov
lds
lcall
in
add
or
enter
dec
push
lea
clc
push
sbb
ds
jmp
pop
jo
lcall
fbstp
add
cmp
jb
pop
jp
cmp
push
or
cmc
or
inc
mov
pop
cli
push
inc
in
loope
jnp
cmp
or
sar
inc
stos
popf
and
int
imul
mov
sahf
mov
jmp
inc
loop
sti
iret
add
cs
lock
les
jnp
in
or
je
jo
sub
gs
scas
arpl
fwait
mov
pop
test
jbe
imul
and
sbb
sub
pop
inc
mov
jb
outsb
stc
addb
xchg
mov
popf
push
in
movsb
adc
inc
pop
mov
jecxz
jb
mov
fstpt
fildll
add
xor
outsb
pop
loopne
in
clc
jae
jnp
sub
scas
dec
clc
ja
sub
add
push
jno
push
mov
mov
cmp
push
adc
fldl
sub
mov
rcll
jmp
fildl
dec
jno
or
mov
or
loop
or
adc
jmp
mov
inc
movsl
inc
mov
outsb
out
mov
ror
cmp
sti
cmp
add
or
cmp
insb
push
loope
fistpl
sbb
sub
movsl
mov
xchg
inc
popa
sbb
xor
nop
aam
dec
in
inc
fmull
mov
cmp
das
adc
dec
call
jl
mov
add
mov
xchg
fs
xor
in
es
outsb
add
imul
pop
sbb
cmp
arpl
add
pop
sub
and
jnp
je
add
repz
iret
sbb
push
push
repz
mov
cmp
jg
sub
jg
cmp
aam
xlat
xor
adc
and
and
mov
ret
mov
jb
push
aam
push
inc
pop
mov
lret
push
lods
repz
mov
int
and
cmp
pushf
test
mov
xchg
add
fnstenv
into
in
mov
mov
or
inc
fs
fstl
or
ret
arpl
std
scas
les
imull
pusha
sarb
aaa
xchg
iret
inc
imul
insl
inc
xor
jns
xor
pop
push
pop
test
popl
jbe
adc
or
mov
loopne
cmp
mov
into
bound
fs
dec
arpl
push
mov
mov
out
and
push
add
xor
mov
mov
cld
testb
aad
sub
mov
push
push
xor
and
out
sub
mov
push
mov
pop
lahf
fiadds
mov
decb
mov
inc
adc
jmp
rolb
push
push
and
and
out
sbb
pop
add
mov
cmp
add
xchg
xor
movsl
add
std
aad
inc
shl
mov
mov
repz
sbb
jae
lock
test
aam
lahf
mov
scas
add
cltd
aaa
aad
adc
mov
call
add
out
leave
adc
int
outsb
xchg
dec
inc
inc
cwtl
leave
ret
fadds
sub
aaa
in
jae
std
je
and
das
push
cmp
cmp
or
jnp
mov
jb
jecxz
ficomps
cld
xchg
lds
aaa
mov
and
xchg
mov
sbbl
adc
subl
mov
or
pop
mov
sub
cmp
dec
and
mov
mov
mov
mov
sbb
fistl
rorb
pop
fcompl
mov
mov
ftst
jo
nop
xor
dec
aaa
dec
sahf
sahf
pusha
dec
add
sub
jl
xchg
fwait
push
xchg
xor
jno
mov
pop
mov
stos
inc
in
lods
xchg
inc
aad
fildl
push
adc
inc
jl
inc
mov
leave
mov
test
inc
jg,pt
and
arpl
icebp
and
push
mov
pop
add
jl
imul
stos
mov
jge
xor
jne
daa
push
inc
sti
pop
push
mov
xchg
sbb
mov
test
fmul
lods
pop
nop
xchg
pop
lret
lea
rcrb
test
jge
cmp
cmpsl
xchg
jb
cmc
movsl
cwtl
pop
adc
cmp
dec
lahf
stos
pop
int3
roll
mov
pop
stc
fisubs
pop
test
or
lods
push
push
xchg
mov
mov
mov
xor
outsl
inc
xchg
xchg
shl
rorb
dec
cltd
dec
sub
stc
arpl
imul
jg
ret
push
inc
mov
out
gs
dec
cmc
insl
xor
ljmp
enter
sbb
xchg
fwait
int3
cwtl
fildll
movnti
addr16
aad
pop
push
mov
daa
cmp
rclb
popf
dec
mov
outsl
imul
pop
in
xor
insl
int
sub
mov
mov
add
sarl
mov
flds
pop
lods
add
aaa
dec
flds
mov
pop
dec
xchg
mov
insl
xor
mov
test
es
xchg
rclb
xchg
data16
aam
xchg
inc
dec
cmp
pop
jbe
lret
push
xor
jl
enter
dec
clc
xor
repnz
cmp
lock
cli
sub
stos
mov
orl
popf
nop
pop
idivb
insb
shlb
ret
aad
clc
pop
mull
iret
lret
test
inc
popa
arpl
jl
add
xchg
pop
repz
int
xor
lds
dec
jg
outsb
out
out
push
shr
out
pop
mov
mov
jle
mov
cltd
jne
cmc
aaa
jecxz
push
loop
mov
jmp
lret
jno
js
insb
xchg
add
add
imul
addb
jle
jge
push
clc
in
adc
arpl
stc
add
loope
pop
add
adc
lods
pusha
popa
cwtl
cmp
and
xchg
inc
int3
mov
add
bound
mov
rorl
andl
mov
and
fistps
mov
sbb
xchg
fs
nop
inc
inc
repnz
test
lods
repz
cld
int3
inc
repz
xor
cmp
das
mov
add
adc
stc
insl
fidivrs
out
and
jle
inc
adc
jg
lret
out
mov
out
jg
dec
out
and
jae
cmp
nop
das
test
aad
gs
pop
sub
loopne
out
add
mov
or
xchg
sub
pop
mov
sarb
pop
jne
mov
lcall
in
das
sti
icebp
jmp
push
lcall
inc
hlt
popl
mov
in
dec
shrb
sub
stos
lea
or
cmp
jbe
test
xchg
and
and
jo
add
sbb
sub
outsb
inc
adc
aam
sub
ss
mov
or
cltd
push
adc
dec
xor
adc
cld
jnp
out
push
and
cld
cwtl
test
imull
mov
insb
lret
mov
xchg
aad
int
mov
cwtl
pop
dec
xlat
jo
mov
test
cmpsl
int3
dec
adc
rclb
dec
cmpsl
add
test
ja
pushf
jb
rclb
mov
js
jb
sub
pop
cld
jp
inc
push
mov
cmp
dec
sub
pop
ret
adc
out
push
mov
popf
rorl
xchg
cmp
ljmp
cmp
sub
and
fs
pop
add
or
jge
aas
les
lods
mov
ja
iret
dec
mov
mov
or
mov
popw
inc
sbb
rcr
icebp
mul
adc
pop
iret
pop
sbb
xlat
popa
arpl
push
clc
mov
cmpsl
leave
rcrl
in
lahf
push
scas
and
popf
jnp
iret
add
add
pop
int3
xchg
cld
test
mov
leave
jl
push
lahf
or
dec
sbb
clc
cmpb
test
mov
mov
push
insl
sbb
or
shl
stos
insb
incb
or
push
xor
add
pushf
stos
adc
jg
fcomi
fwait
bnd
aam
outsl
sub
push
xor
cltd
pop
std
test
call
pop
xor
cmp
mov
clc
fiadds
gs
dec
jmp
std
mov
test
jp
out
stos
dec
aam
mov
dec
rcll
es
outsb
push
jae
in
loop
stos
xor
jecxz
nop
mov
fsubrl
insb
lock
push
adc
test
dec
out
imul
adc
push
cltd
popf
push
out
cmp
xor
call
fistl
push
dec
lea
jo
mov
popa
push
xlat
adc
jg
or
fdivs
pop
sarb
pop
jp
xchg
ret
ret
es
hlt
sub
and
outsb
push
xchg
jle
jne
sbbl
aam
lahf
int3
jns
mov
push
les
daa
add
lea
inc
leave
sti
rcr
dec
jl
jne
imul
aaa
and
inc
lahf
xchg
in
incl
stc
mov
std
addr16
loopne
or
jp
gs
mov
hlt
push
add
loop
mov
pop
adc
fdivs
or
xchg
lods
popa
xchg
dec
movb
decb
pop
addb
fimull
inc
insb
sub
sub
ljmp
out
jnp
sbbl
notb
in
or
sub
ds
lock
add
loope
sbb
cmc
lcall
mov
jno
shrl
sub
and
mov
adc
lret
xchg
push
xchg
das
dec
fistps
adc
scas
push
out
aas
inc
mov
mov
pop
stos
frstor
testb
mov
stc
pop
rcll
loopne
lret
pop
sub
jbe
xchg
dec
fcmovb
loope
dec
out
enter
pop
loop
pop
cmp
mov
adc
scas
js
jo
mov
dec
flds
cmp
sub
in
push
fwait
mov
pop
scas
inc
push
aaa
mull
sbb
xor
ljmp
push
fadd
xchg
cmp
mov
mov
dec
ljmp
add
insl
xchg
and
mov
outsl
mov
mov
pusha
fldenv
stos
dec
es
xchg
jbe
mov
aam
xchg
push
dec
push
xor
sar
and
ret
std
ret
push
test
sbb
xor
mov
mov
jge
in
mov
push
cmp
inc
icebp
stos
mov
divl
dec
rcrb
movsl
fisttps
push
xor
mov
cmp
sahf
scas
fsubs
fstp
int3
test
add
cli
push
shlb
inc
dec
stos
jge
es
jbe
mov
or
je
xchg
mov
adcb
cmp
push
loopne
into
xor
mov
negb
xchg
pop
addr16
cli
test
sbb
rcr
pop
shlb
jno
inc
inc
arpl
dec
adc
gs
loopne
jb
xchg
jmp
inc
dec
lret
out
ljmp
cs
enter
fcoms
pop
pop
mov
mov
xor
out
movsb
mov
xchg
hlt
mov
imul
lret
pop
jecxz
in
cltd
push
jecxz
and
and
xor
jecxz
xchg
daa
test
mov
ss
mov
dec
mov
or
pop
adcb
pop
daa
insb
lods
hlt
adc
and
pop
jecxz
dec
in
mov
mov
ret
jne
dec
mov
enter
push
es
ret
rcll
iret
mov
std
jbe
adc
or
rcrl
cmpsb
xchg
ret
fsubr
mov
sahf
xchg
popf
and
adc
and
stc
fdivl
and
xchg
and
sbb
mov
sbb
push
push
pop
push
sahf
dec
int3
add
shrb
pop
mov
jnp
mov
popa
cmp
ja
lock
insb
in
jp
push
xor
ss
pop
ljmp
jns
ja
dec
push
and
mov
fs
popa
sub
out
aam
outsl
jnp
mov
in
push
je
rorb
dec
add
mov
clc
arpl
lock
cmp
ds
add
push
cld
sub
lcall
xor
add
lret
in
gs
push
xor
in
xlat
lods
mov
pop
add
add
mov
mov
mov
pop
lds
add
cmpsb
mov
call
push
repz
jae
fstps
xor
fcmovbe
and
mov
cmpsb
popf
mov
xchg
xchg
scas
cmc
cmp
cmp
ljmp
jbe
das
add
leave
dec
nop
mov
mov
loopne
sahf
leave
or
decl
loopne
add
jne
in
and
leave
sahf
push
mov
jb
data16
pop
adc
lds
and
pop
fistpl
test
outsb
mov
nop
dec
fimull
jecxz
ret
ljmp
in
push
push
xor
in
or
mov
xchg
outsl
jno
stc
xchg
sub
jle
jb
inc
cli
and
cmp
scas
push
sti
push
ret
dec
stos
or
js
or
mov
push
sahf
xor
in
dec
fisubl
jecxz
cwtl
arpl
dec
hlt
inc
lea
sbb
or
mov
jo
pop
push
dec
jg
ror
push
arpl
fldcw
sbb
mov
xchg
or
dec
mov
inc
mov
ss
jg
mov
inc
enter
popa
into
xor
jmp
lods
push
lods
rcrl
fstpl
iret
jle
pop
in
inc
dec
push
jmp
and
and
mov
pop
mov
xor
ljmp
cmp
ljmp
push
sub
sbb
pop
out
pop
sbb
pop
in
sti
add
push
xlat
repnz
xchg
lretw
stc
adc
arpl
inc
jo
inc
dec
mov
lea
push
fisubl
adc
andb
inc
cmp
push
and
shll
icebp
and
fs
jge
dec
add
mov
xor
adc
cwtl
push
out
pop
adc
bnd
pop
stc
lods
xor
iret
cmp
call
jle
or
fs
repz
pop
adc
jge
sbb
cmp
shrl
or
stos
les
test
sarb
xchg
inc
or
mov
inc
iret
rcrb
out
shrb
roll
leave
cmpsb
adc
push
test
add
arpl
fisubs
inc
andl
add
mov
int
lods
out
inc
adc
xchg
popf
fistpll
daa
inc
lret
or
pusha
std
mov
ret
inc
test
enter
dec
data16
hlt
shll
mov
shr
pop
and
fdivl
mov
mov
or
nop
lods
lret
push
mov
xchg
add
fucomp
aam
lret
or
jmp
fxch
xor
or
dec
lret
jmp
leave
pushf
pop
daa
inc
mov
gs
cmpsb
rorb
push
lods
movsb
out
dec
lods
dec
pop
pop
push
daa
cli
xchg
subb
push
repz
rorb
lds
mov
add
mov
pushf
jmp
jp
mov
adc
or
and
mov
rcll
pop
push
sarb
popa
pop
pop
pop
mov
enter
or
mov
js
and
mov
adc
jae
sbb
outsb
mov
mulb
mov
clc
jle
pop
mov
out
sub
pop
out
mov
fwait
aad
jo
jle
lds
jecxz
and
sarl
or
insl
daa
es
adc
xorb
or
test
push
cmpsl
pop
dec
pop
push
aaa
cmpsb
dec
daa
push
jl
sbb
in
adc
push
xchg
nop
popa
in
dec
movsb
les
dec
outsb
push
loopne
shl
mov
and
in
fsubl
movsl
cld
orl
gs
mov
adc
and
les
or
leave
jnp
ja
mov
js
out
lret
push
push
daa
bound
inc
lret
movsl
xor
mov
loopne
sub
push
sub
push
and
fsub
daa
jb
pop
jnp
andl
leave
repnz
jg
jmp
push
in
or
imulb
dec
nop
daa
es
xchg
fisubrl
push
int
movsl
jo
add
orl
mov
stos
mov
scas
adc
pop
or
cmp
cmp
mov
xor
inc
inc
cmp
adc
cmp
int
call
scas
popa
cmpsb
mov
jo
xchg
pop
pop
push
in
rcl
sbb
add
pop
pop
push
mov
cmpsb
fmul
inc
scas
test
or
adc
lret
jne
xchg
lock
and
mov
test
inc
jl
add
movsl
push
jg
int
in
test
pop
cmp
sbb
es
ss
inc
out
cmpxchg
cltd
mov
sub
fldenv
fwait
xor
out
mov
rolb
and
scas
xchg
or
and
ficompl
test
out
adcl
add
cmpb
into
xchg
std
movsb
cmpsl
out
je
push
shrb
add
and
adc
ljmp
ror
loop
mov
sbbl
mov
dec
ja
sub
js
and
push
shlb
loope
outsl
inc
mov
fs
ja
mov
sti
dec
lods
xor
mov
cmp
xor
cmp
inc
cltd
mov
mov
sub
cmpsl
insl
ja
push
xchg
ret
mov
lahf
jmp
cmpsb
adc
cwtl
mov
dec
sbb
sbbb
arpl
js
xor
fiaddl
lods
xor
outsl
in
lods
hlt
lods
adc
mov
lods
cmpsb
mov
mov
mov
pop
icebp
mov
daa
inc
mov
in
xor
mov
jnp
push
ja
ja
cmovp
cmp
pop
sbb
mov
jne
pusha
pextrw
sbb
loopne
out
sahf
iret
fidivl
das
bound
xor
push
mov
ds
lcall
xor
sbb
mov
and
stos
test
mov
inc
inc
xchg
out
shlb
dec
mov
add
push
cmp
sub
outsb
adc
cmc
jge
sbb
mov
jl
int
lods
jo
stos
mov
ret
adc
cmp
or
add
dec
cmpsb
cmp
iret
or
scas
mov
leave
scas
inc
jmp
mov
or
jnp
mov
push
fdivr
mov
mov
aam
add
add
addb
cmp
leave
es
or
mov
in
lods
dec
pop
bound
jg
aaa
sbb
inc
daa
jge
push
fdivrp
arpl
cmpsl
js
add
test
push
es
mov
js
gs
sub
or
xchg
ljmp
fstpt
mov
mov
or
test
mov
scas
jge
xor
inc
out
push
sbb
xchg
icebp
xchg
stos
cmp
mov
xor
jne
adc
jno
inc
loop
xchg
ficompl
andl
in
into
mov
lcall
outsl
mov
jg
push
aas
lcall
jnp
daa
les
and
mov
js
add
ds
loop
pop
mov
icebp
in
jmp
movsl
and
lods
mov
in
outsb
sub
jnp
sbb
sub
jns
clc
lock
jmp
inc
dec
and
js
dec
mov
mov
mov
sbb
pop
or
xor
or
pop
sub
imul
xlat
cli
testl
shr
imul
subl
mov
mov
push
stos
iret
lods
icebp
outsb
inc
jb
mov
push
mov
jb
imul
mov
je
outsl
jg
sti
enter
cmp
lahf
or
fidivrl
or
stos
fcomp
popa
sti
ror
jg
std
sub
mov
int3
notrack
fdivrs
mov
roll
loopne
not
int
pop
sub
jnp
enter
std
shll
jge
imul
push
pop
inc
insb
push
hlt
pop
or
xor
push
jecxz
stos
addl
mov
loope
movl
sub
xchg
adc
rolb
add
enter
shll
cmp
pmaxub
shl
or
popa
mov
jbe
iret
adc
add
or
daa
inc
test
mov
fistl
leave
in
push
dec
pop
and
sahf
test
bound
pop
mov
popf
and
cld
mov
lcall
add
jecxz
add
loopne
leave
ss
mov
imul
cld
jb
rcrb
inc
popf
xchg
pop
cmp
jmp
or
xor
mov
ret
xchg
push
je
rolb
cmpb
lret
cmp
mov
pop
pop
xchg
rcll
inc
xchg
jno
fucomp
cmpb
cmc
addr16
jg
stos
dec
repz
je
dec
adc
cmp
test
loop
insl
pushf
mov
xor
sbb
dec
sarl
cld
lcall
push
repz
movsb
andb
hlt
adc
std
push
cli
in
pop
jecxz
sti
add
dec
sub
mov
fmulp
inc
cs
enter
or
jno
cmp
adc
mov
jge
dec
sbb
xor
ret
jle
stc
repnz
add
pop
daa
fstpl
aaa
shlb
or
adc
mov
xor
inc
mov
ljmp
lds
pop
mov
mov
in
inc
sub
xlat
int3
mov
cs
outsl
repz
sbb
jae
into
jg
icebp
into
js
jns,pn
cmpb
loope
icebp
loop
lock
push
shrb
pop
les
enter
les
iret
add
jmp
lret
inc
or
cmc
jg
jae
test
jmp
and
xchg
mov
pop
outsb
ljmp
inc
sbb
cmp
loope
ljmp
jnp
aas
popa
push
loopne
rorl
xor
add
iret
loop
data16
mov
loop
xchg
lahf
push
mov
or
pop
nop
aad
dec
jmp
adc
cmpsl
mov
fbld
das
xchg
stos
ds
xchg
dec
mov
mov
mov
sbb
push
mov
dec
in
jl
mov
jmp
insl
js
jg
aas
jg
adc
jns
fmull
es
popf
stos
push
cmpb
fs
push
es
pop
sti
insb
push
xchg
int
sar
mov
cmp
ficoml
nop
cmp
mov
adc
lret
add
out
push
in
xchg
mov
mov
les
fldcw
test
mov
daa
shlb
lds
daa
cwtl
mov
jno
out
or
into
icebp
cmpsl
lret
nop
pop
mov
movsl
dec
aas
loope
jp
cmp
push
cli
dec
into
aaa
xchg
lcall
pushf
insl
inc
sahf
add
inc
pmaxsw
jno
fwait
loope
xor
jg
lea
pop
clc
in
xor
mov
xchg
sbb
mov
push
xchg
mov
sub
insb
push
xchg
inc
jg
adc
xor
lea
sub
pop
sub
lahf
or
call
pushf
cmpsl
jne
mov
repnz
mov
and
jnp
in
cltd
cmp
loopne
xor
xor
je
pop
shlb
jecxz
lds
push
jo
push
cmp
mov
xor
cwtl
mov
mov
jo
sub
jge
dec
push
push
push
xchg
mov
into
xbegin
icebp
in
xlat
pop
test
loopne
lds
loopne
shll
jl
cmp
pushf
out
mov
mov
adc
scas
js
mov
arpl
push
and
push
sbb
xchg
stc
inc
aad
jbe
scas
jmp
jp
sbb
in
sub
dec
sub
cld
hlt
ljmp
fimull
loop
push
out
push
xchg
test
sub
stos
ja
xor
sahf
sub
mov
jns
adc
dec
js
ja
inc
loop
test
inc
gs
lret
mov
add
in
push
push
pop
mov
fimuls
bound
xor
push
adc
add
mov
sbb
mov
push
lock
stos
cmp
ret
fwait
adc
test
sub
daa
daa
dec
icebp
inc
mov
or
inc
lods
mov
pop
cwtl
jnp
lret
test
cld
negb
cmp
dec
int3
call
mov
adc
inc
mov
lret
lock
sbb
ljmp
ret
sbb
pop
jle
es
xor
sbb
inc
insb
cmp
jp
outsb
jecxz
pop
ds
sub
outsl
dec
cs
xlat
add
lcall
jmp
cwtl
adc
sti
je
pushf
imul
sbb
and
ret
push
dec
fsubrs
fs
push
lcall
pop
push
cs
es
incb
iret
mov
pusha
adc
add
sahf
xchg
add
lods
adc
xchg
ljmp
hlt
push
mov
xchg
fxch
shll
ljmp
not
add
pop
mov
push
push
mov
xchg
loopne
sahf
sub
mulb
mov
stc
int
out
xchg
push
test
cs
imul
leave
iret
in
push
bound
scas
pop
pop
sbbb
sub
push
es
pop
fcmovnb
inc
push
push
xchg
pop
sti
sub
faddl
or
sbb
arpl
mov
add
fbstp
shl
and
test
lods
push
or
mov
cmp
out
mov
in
sbb
sahf
xchg
popf
std
mov
mov
inc
fnstsw
pushf
loope
insb
fimuls
mov
rcrb
jmp
xchg
outsb
sbb
pushf
jno
outsl
nop
fcmovb
push
loop
push
int
add
das
push
and
sub
idivb
je
push
jl
cmp
xor
fmul
xor
iret
lret
stc
popf
popa
movsl
pusha
jae
cmp
std
stos
mov
lret
mov
stc
push
sti
cmp
pushf
mov
jb
sarb
fcomps
hlt
jo
pop
xchg
inc
adc
sbb
sahf
xchg
sti
in
fistl
rcll
jb
lock
loop
cwtl
in
add
push
cli
push
sbb
mov
fcomi
push
fwait
test
aas
aam
mov
mov
push
ljmp
pop
push
push
adc
push
mov
pop
cmc
in
lock
cmc
xchg
out
pop
adc
ret
in
sbb
sahf
cmp
inc
sub
jg
and
lods
add
push
adc
mov
sub
jno
dec
jge
dec
cltd
add
dec
pop
fstp
ljmp
or
test
or
push
mov
sbb
cli
lret
lcall
xor
mov
cs
xchg
or
push
imul
ret
rcll
push
and
and
mov
lcall
fdivrs
push
cwtl
cmc
stos
xchg
xchg
in
arpl
mov
or
jbe
push
add
shl
in
sub
pop
nop
mov
imull
iret
push
xor
clc
sub
mov
lret
sub
repnz
out
stc
enter
stc
clc
mov
mov
popa
leave
lahf
sub
test
test
pushf
arpl
xor
idivb
loopne
mov
jl
mov
sbbb
xchg
mov
mov
mov
insb
sahf
xlat
push
xor
dec
sub
std
testl
stc
cmc
jp
test
sub
rcrl
bound
jp
and
mov
mov
xchg
jo
inc
xchg
inc
test
push
cli
popf
adc
cld
in
bound
test
out
jb
xor
test
les
push
adc
mov
psrad
insb
mov
jnp
adc
sbb
cwtl
sub
into
jne
lods
rcrl
fwait
sub
push
sub
xchg
clc
jns
mov
jg
out
dec
arpl
out
dec
ret
data16
ret
les
add
cmpsb
rdmsr
push
push
pop
enter
scas
imulb
test
int3
es
fwait
add
dec
cmc
adc
or
add
mov
sub
aaa
sbb
movsl
sub
xor
frstor
mov
das
sub
mov
inc
mov
adc
push
push
add
ja
mov
cmp
test
cmp
rcll
xor
jg
subl
xor
neg
fisubrs
xor
into
out
or
insb
pop
mov
adc
push
pop
sbb
push
ficompl
mov
mov
lods
out
or
jbe
push
scas
out
mov
int3
sbb
mov
mov
sti
add
icebp
xor
and
and
call
out
js
cmp
jg
mov
fcmovnbe
cmp
ds
es
imul
xor
scas
fdivl
mov
or
mov
outsl
sbb
jge
push
aaa
int3
into
rcrb
in
aas
dec
daa
jg
cmp
sbb
push
mov
pop
filds
cmc
dec
inc
xor
jle
push
arpl
push
jg
adc
mov
insl
cmp
jnp
cmp
jmp
sub
jnp
or
les
popf
repz
fsub
pop
and
dec
pop
in
and
jle
xchg
out
in
sbb
cmp
das
nop
arpl
cmpsb
push
xor
mov
sub
push
sbbl
fs
mov
mov
cmp
mov
push
andl
mov
xor
mov
fwait
mov
mov
lds
cmpb
cmp
pop
fucomi
ljmp
jne
xor
sahf
in
xor
cli
ja
loope
mov
inc
mov
and
ds
inc
cld
mov
aas
rolb
dec
inc
xchg
mov
sbb
or
mov
clc
in
inc
or
push
ror
gs
mov
rorb
shll
insl
gs
mov
mov
pusha
aam
xchg
mov
scas
dec
sbb
xor
lret
pop
in
dec
mov
push
js
fwait
clc
cmp
out
dec
pop
inc
gs
lods
inc
imul
cmp
divl
out
and
cmp
daa
sbb
test
and
adc
lea
imulb
or
mov
hlt
rcll
sbb
les
ljmp
and
test
mov
cmp
scas
je
jle
cmpsb
add
call
and
mov
shrl
pop
out
fwait
stos
jg
push
add
popf
in
in
arpl
xor
cmc
mov
add
pop
stc
mov
jl
bound
es
push
dec
in
and
adc
cmc
mov
push
call
push
push
fdivrs
je
inc
mov
cmp
data16
mov
sbb
fcompl
and
rcl
movsl
add
out
push
inc
push
lret
xchg
jg
dec
out
movl
jo
push
enter
sahf
pop
pop
repz
cmpsl
orb
dec
into
jle
sbb
and
iret
xor
mov
and
xor
lods
dec
inc
lea
lods
jbe
jno
aam
scas
jns
dec
add
xor
sarl
mov
insl
inc
mov
rcrl
ljmp
jae
int
scas
add
fbstp
xchg
mov
les
enter
and
cltd
add
loop
icebp
cmp
scas
loope
les
pop
stos
adc
and
pop
lock
ss
push
outsb
xchg
bound
or
imul
cs
repnz
js
mov
aas
mov
je
dec
dec
inc
js
in
test
push
aaa
jae
cld
pushf
cmpb
mov
xchg
mov
aas
push
out
push
mov
add
sub
add
and
push
push
addps
and
add
inc
popf
mov
andb
test
gs
pop
ret
xchg
fdivp
aaa
mov
shll
rorb
or
sbb
stos
pop
das
inc
pop
leave
repnz
dec
rorb
lcall
loopne
insb
in
ljmp
mov
ret
mov
xor
dec
call
pop
scas
push
sbb
push
cld
repnz
push
dec
mov
leave
cmp
cltd
jb
int
in
es
add
dec
or
and
dec
pusha
mov
icebp
jl
jp
dec
mov
cmp
scas
add
jle
sub
push
push
pop
xor
jge
push
in
fsubrs
test
dec
jmp
jmp
or
stos
push
or
outsb
dec
test
pop
jne
mov
inc
mov
lods
hlt
sub
pop
adc
out
mov
jnp
cmpsl
mov
lods
inc
les
xchg
push
fcmovb
adc
fwait
sahf
push
ljmp
jp
jle
mov
rclb
adc
sub
or
xor
dec
movsb
clc
fcoms
inc
push
push
xor
xor
push
rol
cmp
sahf
out
dec
shl
and
mov
jmp
xchg
inc
bswap
int
xchg
test
xchg
sub
testb
adc
rclb
cmp
mov
outsl
mov
and
imul
aaa
sub
data16
jecxz
sahf
bnd
psrld
xchg
inc
mov
pushf
bound
xlat
add
xor
data16
lock
dec
and
jp
loopne
imull
cmovns
scas
jl
jbe
adc
ret
jmp
dec
mov
and
and
bound
xchg
push
jg
mov
jp
xlat
xor
sahf
js
pop
out
sti
or
mov
iret
sub
mov
loop
repnz
mov
insb
push
and
in
push
xchg
push
cld
les
push
sahf
mov
pop
jb
sub
cmc
xor
aas
mov
in
addr16
xor
int
addb
rcrl
pop
int
movsb
fbld
addr16
jp
pop
imul
movsb
xchg
mov
imul
sarl
hlt
pop
pop
push
jno
push
sbb
pop
add
shrl
mov
jns
or
jne
sbb
sbb
dec
sub
int3
dec
or
xlat
and
cmp
xchg
push
inc
or
mov
daa
int
stos
addr16
mov
xor
fndisi(8087
stc
xor
inc
imul
lret
outsb
pop
and
fcomip
or
adc
rcll
cmpsb
arpl
sub
and
es
mov
scas
sbb
insl
in
cltd
les
repz
xlat
hlt
mov
ret
jae
jbe
lret
stos
sbb
popa
xchg
pop
sbb
push
stc
sub
lods
aam
mov
xor
pop
gs
push
aaa
sub
in
in
push
mov
pop
cli
mov
xchg
push
lock
loope
mov
in
add
dec
je
jmp
mov
mov
xor
cli
pop
and
jmp
sbb
or
mov
iret
fscale
pop
fistps
in
sbb
cmp
xchg
in
stos
jae
pop
sahf
cld
mov
in
das
jae
imul
out
loopne
int3
test
fcoml
fisubl
sti
push
cmc
test
push
addr16
cld
cltd
pop
int3
ja
jae
cmp
mov
jge
jne
jl
dec
xor
sahf
cs
mov
mov
ficoms
ds
sahf
mov
sbb
mov
in
mov
stos
mov
push
or
adc
adc
inc
jo
nop
andb
std
ficomps
push
xor
dec
je
xor
pushf
or
addb
mov
imul
and
or
popf
cmp
ss
fisubs
jmp
mov
sbb
lea
insb
dec
mov
jg
data16
dec
mov
aad
cmp
loopne
sbb
mov
inc
mov
rcrb
pop
cmp
jmp
jnp
cmp
std
lds
xchg
pop
in
cmp
les
movsl
sbb
pop
leave
push
faddl
add
adc
test
pop
push
mov
jne
loop
sub
push
adc
std
mov
inc
or
and
cmp
orl
mov
cld
fs
mov
xchg
ds
pop
movsb
cwtl
dec
push
jnp
or
das
loope
shll
dec
rorb
adcb
dec
out
scas
mov
jge
mov
gs
in
cmp
movsl
jle
gs
fnclex
stos
push
add
xor
or
and
adc
out
push
and
inc
jbe
adc
mov
lret
xchg
scas
stc
mov
addr16
lcall
push
enter
cli
popa
pop
dec
std
scas
add
xchg
in
call
outsb
push
jg
or
and
push
cli
jg
xor
fnsave
pop
inc
mov
and
js
dec
ds
loop
jno
cltd
add
mov
dec
push
jbe
cld
xor
jbe
mov
inc
xchg
popa
push
mov
std
testb
test
mov
or
shl
imul
xchg
xchg
push
jg
aam
xchg
cli
pop
ljmp
cmp
push
in
icebp
pop
sbb
xor
cwtl
loop
xchg
in
jecxz
mov
inc
xchg
mov
cli
cmp
flds
cld
sub
addr16
jle
cmp
inc
in
fdivrl
sbb
fsubs
jmp
pop
sbb
aam
arpl
dec
sbb
fs
mov
subl
dec
jb
add
idiv
fs
or
imul
or
dec
pop
mov
pop
push
stos
lcall
inc
inc
int3
orb
mov
xor
mov
in
inc
rolb
inc
ja
pop
mov
lods
daa
sahf
inc
nop
insb
xchg
mov
xchg
repnz
pop
pop
mov
jecxz
add
push
xor
or
and
pop
pop
js
dec
je
pop
jp
out
sub
and
arpl
in
cs
std
lcall
and
outsb
mov
adc
xchg
xor
cmp
mov
mov
fidivrs
pop
cmp
fstl
xchg
in
loope
push
inc
scas
xor
cmp
add
fsubs
lods
xor
mov
daa
fisubs
add
test
test
pop
jnp
stos
and
or
sbb
xor
mov
lret
mov
add
pop
cli
ds
imul
test
int
and
and
push
nop
and
fisubrl
dec
pushf
push
mov
nop
out
sar
fwait
mov
mov
sub
aad
adc
mov
add
andl
mov
jae
dec
out
ljmp
call
movsl
pop
inc
cmpsb
mov
and
je
fucomp
out
adc
mov
fmull
lret
addr16
mov
or
loop
xchg
mov
mov
inc
xchg
push
mov
rorb
test
lret
sbb
fcmovu
adc
clc
int
and
add
mov
enter
out
add
scas
xor
push
int
jne
xlat
cli
into
rolb
add
movsl
push
in
jno
scas
push
mov
push
adc
movsb
cmp
popa
enter
adc
add
mov
aam
mov
es
cmp
mov
out
mov
lock
mov
sub
sbb
out
lret
fdivr
hlt
cld
mov
stos
test
xor
cmp
jo
out
pop
mov
adc
aad
push
dec
push
sbb
in
insw
sarl
xor
es
sub
das
scas
push
sti
gs
pop
cmpsb
pop
inc
jmp
sbb
call
or
lahf
fs
jns
icebp
shlb
jbe
repnz
mov
push
scas
movsl
stc
cmp
adc
mov
jmp
addw
out
mov
xchg
jl
jg
push
xchg
or
cmp
cmp
mov
stc
or
repnz
idivb
mov
jne
pop
ret
or
jno
xchg
shlb
dec
cwtl
mov
or
push
jg
cmpsl
popa
sub
insb
aaa
hlt
push
es
sub
mov
int3
add
jge
shrb
sbb
adc
mov
or
mov
aad
mov
sub
sbb
movsb
fimull
dec
and
ret
call
ss
mov
xchg
clc
push
adc
arpl
aad
insl
jno
mov
inc
fwait
pop
xlat
xlat
sub
mov
imull
jg
cmp
jge
mov
inc
lods
lcall
sub
xchg
addr16
jbe
lods
add
add
fsubr
in
push
sub
cmpsb
test
imull
ret
pop
adc
cmp
ja
loop
lods
fldenv
lods
sub
neg
xor
xchg
mov
jae
adc
js
add
iret
adc
rorb
lret
outsl
imulb
sbb
pop
sub
test
add
cmp
cmp
rcrl
and
ljmp
mov
inc
dec
nop
and
push
into
xorl
sub
dec
sbb
xchg
ret
dec
lahf
loope
and
addb
and
scas
aaa
mov
xchg
movswl
cmp
mov
dec
dec
mov
xchg
dec
loop
mov
into
fiaddl
fs
and
xchg
pop
dec
lods
test
addr16
xchg
mov
add
sub
cwtl
cld
mov
push
adc
adc
aaa
mov
sbb
sbb
gs
sahf
in
lods
mov
lods
xor
xchg
xchg
cmpsb
push
xchg
push
xlat
sbb
pop
mov
mov
bound
jo
das
xor
lods
add
je
cmpsb
neg
dec
popa
jmp
pop
dec
mov
lods
fmull
cmc
rcrl
cmpsl
mov
les
scas
gs
cld
dec
movsl
test
cmp
mov
jo
mov
jecxz
pop
emms
rcrb
jle
outsl
aaa
xchg
or
cwtl
xor
aaa
out
sbb
mov
and
mov
jge
xchg
and
push
test
test
fwait
add
mov
loop
addr16
lret
call
sbb
push
sub
lea
xchg
in
inc
and
inc
lret
andl
in
lods
insb
jmp
jl
aad
popf
sub
ret
imul
movsb
xchg
or
bound
jmp
lcall
fists
xchg
jns
cmp
int3
add
mov
xchg
or
clc
fistps
mov
inc
shrb
push
iret
dec
dec
fistps
std
cmp
dec
pop
pushf
mov
xor
leave
jae
xchg
pop
in
repnz
sti
js
enter
jns
ret
sub
in
enter
push
shrb
cmpsb
cld
fsubrl
xchg
push
popa
jb
mov
sub
mov
or
push
mov
mov
test
lcall
mov
test
hlt
sub
ss
mov
loop
sbb
subb
push
iret
sti
es
xor
xor
fwait
adc
xchg
xor
inc
xchg
ret
push
mov
ljmp
das
jnp
orb
cwtl
push
cld
lret
lret
addr16
lods
rcl
ss
xchg
mov
jae
cmc
sub
sub
pop
sbb
add
jmp
sub
mov
jl
in
jmp
sub
adc
mov
mov
and
dec
and
pop
inc
xchg
dec
mov
imul
cmp
mov
lret
pop
lds
mov
jmp
sbb
cmp
fbld
add
adc
xor
lods
xlat
cmc
sbb
sub
leave
sub
call
mov
sahf
lar
bound
mov
popa
dec
outsb
insb
cmpsl
jmp
inc
jecxz
mov
test
or
icebp
dec
int3
mov
iret
stos
mov
int3
sbb
cmp
mov
aaa
mov
test
mov
adcb
add
mov
cmp
push
ret
test
test
xor
out
push
sbb
jbe
adc
mov
add
out
and
sub
pop
popf
mov
sbbb
sbb
inc
enter
push
fdivs
mov
push
iret
mov
lea
imul
in
call
sbb
mov
rcr
xor
mov
xchg
test
icebp
dec
and
mov
test
push
inc
adc
cmp
arpl
lds
pop
dec
imul
rcr
inc
adc
fadd
push
and
or
adc
stos
pop
jecxz
sub
mov
cltd
mov
push
push
sbb
mov
xchg
addb
addr16
push
push
mov
es
jle
add
mov
leave
cmp
sub
jno
push
mov
pusha
pop
xchg
add
add
inc
mov
popf
mov
dec
loop
arpl
jmp
lods
mov
scas
and
pusha
push
and
push
dec
sbb
loop
arpl
in
jb
cmpsl
stos
jbe
pop
bound
lods
ljmp
iret
cmc
adc
cmp
xchg
mov
push
cli
mov
pop
test
insl
jle
and
jp
add
pop
xchg
push
jo
xchg
popa
and
or
push
cld
sub
mov
inc
pop
pop
movsb
adc
dec
push
inc
mov
mov
and
flds
testb
pop
lds
lret
or
dec
mov
pop
ret
mov
mov
add
dec
xchg
sub
in
ss
adc
jg
lcall
cmp
adc
sbbl
aad
xchg
xchg
enter
inc
jnp
lret
jl
mov
fucom
ficompl
jecxz
sub
inc
popf
sbb
addl
xchg
pop
enter
lahf
mov
mov
push
cmp
push
sub
inc
push
aad
outsb
imul
inc
push
pop
jge
jge
mov
pop
das
loope
test
sub
std
add
mov
adc
mov
aam
scas
dec
fimuls
mov
and
push
adc
inc
sub
in
fimull
sahf
movsl
ljmp
dec
xor
test
outsb
inc
fs
or
sub
jmp
imul
pop
push
shr
sbb
mov
cs
mov
push
addl
les
or
add
xor
inc
sbbb
jne
ret
pop
test
lds
mov
cmp
mov
pop
push
mov
jle
in
mov
dec
sbb
outsl
mov
popl
push
bound
push
aaa
adc
mov
ds
mov
sub
or
cmpsl
xor
stc
sbb
and
pop
in
es
mov
sti
stc
sub
rcrl
ljmp
xchg
or
pop
shrl
repnz
jg
aad
mov
sbbb
stc
xlat
aam
cld
adc
cmp
aaa
dec
sub
pop
cmp
adc
lret
cltd
push
in
in
pop
jecxz
dec
rcrb
into
jae
xchg
pusha
in
xor
out
cmpsb
pop
dec
cmc
popa
sti
cmp
cmc
jae
pop
pusha
insl
fs
mov
dec
mov
ficoml
cmc
add
inc
mov
adc
push
pop
sbb
clc
mov
mov
fcomps
stc
vpcmov
push
sub
sub
dec
pop
inc
mov
repnz
push
lret
xlat
popa
arpl
xchg
out
iret
sar
test
pushf
add
je
lods
stos
push
ret
mov
sbb
and
add
pop
repz
out
and
push
add
out
je
stc
pop
jmp
out
gs
and
adc
push
adc
sub
shr
loope
aas
cmp
push
mov
mov
cmp
nopl
fcoml
clc
xor
es
das
lcall
test
push
sub
jne
xchg
mov
stc
sub
fstpl
mov
push
mov
mov
movsl
pop
loopne
outsl
ss
stos
cmpsb
shll
aas
cs
sub
adc
je
loope,pt
ja
out
xchg
jmp
mov
or
fwait
xor
in
cmpsl
mov
mov
lahf
cld
shrl
mov
sub
test
or
adc
mov
cmp
pop
cli
out
pop
pop
mov
outsl
dec
scas
add
int3
xchg
daa
dec
push
pusha
push
fstpt
andl
fisubrs
inc
xchg
push
sbb
adc
and
gs
mov
fcomps
push
cli
mov
loope
inc
iret
pusha
sub
ljmp
cmp
jecxz
decb
add
stc
das
cmp
or
mov
insb
dec
jp
ret
lcall
lods
mov
push
out
fcomi
push
lret
or
aas
iret
dec
or
push
and
adc
adc
and
and
test
in
xlat
cmc
sub
lods
mov
xor
ret
push
ds
outsl
rcrl
pop
imul
cld
bound
fucom
push
in
iret
cli
into
push
push
sbb
aam
xchg
mov
jne
leave
popf
ja,pn
mov
test
lds
mov
test
mov
cld
repnz
mov
cmp
daa
mov
loopne
cmpxchg
test
cmpsb
inc
in
pop
add
and
sbb
sbb
pop
into
sbb
frstor
in
lock
adc
mov
cmp
in
or
addr16
sbb
testb
and
pop
ljmp
jl
jbe
jl
ffreep
pushf
stc
scas
adc
cmpsb
mov
adc
mov
sbb
xchg
pop
daa
jne
adc
jmp
nop
xchg
je
incb
adc
lcall
add
pop
aad
imul
pop
lods
sub
mov
jge
rep
dec
stc
pop
adc
or
jmp
xor
and
xor
push
or
fld
inc
or
sbb
test
repz
lret
jno
ja
xor
inc
or
std
xor
sub
lret
decl
xor
call
mov
movsl
cld
mov
and
cmc
pop
pop
rolb
int3
xchg
iret
pop
icebp
ror
orb
dec
inc
dec
adcl
divb
lds
mov
insl
pop
mov
add
dec
imul
push
stc
pop
fldt
sub
dec
add
das
sahf
adc
cmp
add
or
mov
jl
pop
popa
sbb
jmp
jne
dec
popf
nop
mov
mov
hlt
push
pop
xor
or
inc
int3
imul
imul
pop
stc
xor
cmpb
xor
sbb
loopne
lods
in
iret
fsubs
inc
sub
aas
cld
fcmovnu
ja
iret
out
insl
adc
bound
mov
and
mov
in
leave
ss
lods
cwtl
jecxz
cwtl
fxch
popa
cmc
mov
inc
repnz
mov
jo
jl
imull
mov
push
cmp
xor
xor
mov
je
cli
xorb
bound
ret
sub
dec
insb
adc
jp
jnp
sub
sub
sub
cmp
mov
negb
popf
xchg
test
cmp
adc
xchg
add
push
mov
icebp
pop
push
cmp
mov
js
dec
jnp
jo
xor
insb
lcall
inc
mov
shll
pusha
dec
repz
jb
cmp
rcrl
xchg
sub
daa
lods
or
dec
mov
xchg
xor
int3
xchg
mov
mov
lds
xor
test
cmp
fwait
xchg
stos
adc
fwait
imul
out
sahf
xor
icebp
dec
jecxz
int
pop
out
jns
outsl
xchg
xor
sbb
push
jae
test
cltd
ss
icebp
xchg
push
dec
fs
out
jbe
rcrb
mov
loopne
cld
aaa
lcall
data16
loope
adc
stos
add
sub
sub
sbbl
fsubs
adcb
int
mov
add
or
mov
repnz
mov
int
out
scas
pop
push
cli
xchg
mov
mov
xor
jecxz
push
hlt
jnp
xor
sbb
xor
cmc
or
pushf
fcomps
enter
jmp
out
sub
div
cmp
add
pop
pop
es
cli
jnp
mov
and
mov
bound
xor
iret
imul
adc
mov
addb
je
rolb
jae,pt
add
and
or
mov
les
add
leave
mov
pop
in
iret
imul
and
push
adc
popa
push
gs
inc
jne
into
xor
rolb
cltd
cmp
shll
pop
je
je
adc
xchg
push
sbb
push
cmp
mov
sbb
mov
daa
xchg
xchg
push
sahf
or
push
mov
jno
lods
aad
dec
fiadds
cwtl
int3
inc
or
neg
sarl
and
fnstcw
xor
ss
lods
adc
cmpsl
dec
xchg
ljmp
inc
cli
iret
push
imul
pushf
xchg
mov
data16
pop
push
subl
in
dec
outsb
mov
mov
sbb
scas
jnp
inc
mov
jo
sub
lret
and
in
push
testl
sahf
mul
xchg
xchg
sub
stos
jne
xchg
pusha
mov
fs
psrlw
js
cli
sbb
push
xor
cmp
xchg
jno
push
fmulp
dec
jns
pop
cmpsl
ror
mov
ljmp
out
push
jnp
std
bnd
shrl
pop
dec
pop
jecxz
daa
dec
inc
aas
adc
fs
lea
xchg
test
hlt
jnp
dec
lret
leave
dec
movsb
cmp
sbb
cmc
fimull
or
xor
xor
inc
and
inc
gs
icebp
mov
mov
pop
sub
sub
xor
pop
add
out
arpl
shl
cmp
and
dec
cmp
jo
xchg
sbb
fstpl
mov
ret
inc
mov
jecxz
test
cltd
dec
mov
ljmp
arpl
xchg
sti
lret
mov
fnsave
jge
movl
scas
cmpsl
add
scas
dec
mov
aam
or
idivl
cli
sbb
fimull
js
arpl
mov
xlat
xlat
push
aad
mov
nop
jae
lret
and
je
adc
inc
jb
insb
sub
xchg
hlt
and
rcll
outsl
mov
cmp
pushf
bswap
div
fimuls
jle
shrl
punpcklwd
call
icebp
test
inc
xchg
xchg
cmp
or
xchg
movl
add
push
and
cmp
out
dec
mov
push
push
xchg
push
popa
and
dec
lahf
push
sub
add
mov
jmp
aas
pop
adc
mov
push
jns
addb
scas
mov
adc
lahf
aad
mov
lea
jae
dec
mov
inc
fimuls
xchg
pushf
das
add
into
add
cmp
jbe
adc
xor
idiv
and
mov
lret
daa
mov
pop
sti
ja
cmp
das
rcr
pop
add
ficomps
adc
mov
ljmp
push
xor
insl
popf
inc
das
mov
cli
xor
sbb
arpl
fwait
je
xchg
cmp
mov
pop
aas
inc
mov
sub
rolb
xlat
les
mov
mov
idivl
push
aam
cmp
les
adc
mov
imul
xorb
int3
inc
cmp
imulb
push
jle
aam
ljmp
out
push
test
and
stos
mov
mulb
mov
rorb
jne
out
and
mov
out
hlt
jmp
arpl
fsts
jle
pop
cwtl
mov
and
jns
inc
push
and
int
jb
cmpsl
ret
cld
mov
and
jae
xchg
or
push
je
movl
pushf
push
ret
mov
jle
pop
jne
push
ljmp
aas
inc
jo
cs
das
std
es
je
mov
push
mov
push
sub
fst
add
das
push
in
leave
mov
test
mov
push
jecxz
out
in
and
ret
test
test
inc
dec
mull
jbe
xchg
pop
push
push
jo
and
mov
mov
and
jp
adc
lret
xchg
and
repz
loope
in
arpl
pop
orl
lock
jmp
inc
push
inc
cmpsb
sub
lods
mov
pop
cs
sub
sub
int3
adc
js
dec
mov
loop
cmp
outsb
xlat
sbb
xchg
adc
lds
pushf
jecxz
sub
fcmovne
daa
sbb
cmp
stc
ret
mov
popa
jbe
cmp
stc
and
or
divb
ret
adc
imul
pusha
adcl
jbe
stos
jae
lret
shll
inc
or
lods
sbb
lret
jb
loop
add
lret
jl
sbb
mov
adc
je
aam
mov
pop
push
add
rol
xchg
shll
or
jl
aaa
cmp
xchg
pusha
ret
mov
inc
ret
push
cwtl
in
outsl
inc
mov
adc
xchg
pop
pop
loop
push
adc
sub
adc
lret
rcll
gs
adc
bound
or
aad
jle
out
incb
mov
imul
xor
pop
dec
pop
fucomp
testl
imul
cltd
xor
lods
daa
adc
imul
inc
add
jg
movsl
insb
pop
popf
leave
mov
call
outsl
dec
xchg
movsb
loop
es
jecxz
mov
and
test
in
or
cmp
es
ret
adc
cmp
pop
rorb
stc
in
cmp
stos
lret
adc
mov
xchg
shll
je
lret
cltd
jb
and
mov
mov
xor
repz
pop
mov
stos
das
mov
out
add
and
push
arpl
jge
fistpl
xchg
xorb
and
mov
mov
rcl
dec
inc
mov
jne
pop
mov
out
or
inc
cmp
mov
call
lret
out
loope
out
mov
jg
ret
cltd
xchg
inc
sti
mov
icebp
jg
push
jno
lcall
xor
ret
pop
pop
add
lret
inc
or
xor
pop
mov
fimuls
adc
mov
lds
mov
xor
mov
std
sub
adc
push
inc
add
pushf
inc
cld
cmp
mov
adc
mov
xchg
or
and
pop
ret
lahf
test
jl
enter
xchg
mov
ljmp
notb
and
scas
cwtl
adc
fcompl
push
cmp
ret
jnp
enter
movsl
imulb
mov
jg
xor
pop
scas
decl
lcall
sub
mov
mov
insb
test
cmp
movsb
lret
ret
cmp
roll
xlat
xchg
mov
dec
xchg
sbb
xor
add
imul
mov
push
aas
pop
sbb
or
xchg
inc
pop
cmp
xchg
pop
das
stos
sbb
mov
jne
and
fisttpl
pusha
in
arpl
or
sub
idivb
insb
jae
xchg
pop
stos
scas
fwait
pusha
cmc
pop
cmp
xor
dec
fstpl
mov
cmp
gs
aas
sbb
xor
push
lds
je
xchg
add
decb
xchg
out
cmp
sub
out
sub
in
rclb
cmp
add
int
pop
inc
lret
or
sbb
cmpsb
jp
or
push
mov
outsl
adc
pop
in
rclb
aas
xchg
mov
jp
mov
aam
ss
in
xchg
aas
negb
jne
loopne,pt
and
aam
mov
cwtl
gs
add
pop
in
pushf
jo
cli
scas
adc
aam
das
xor
adc
fbld
icebp
push
in
pop
loope
mov
movsb
push
mov
mov
std
cld
push
sbb
push
dec
push
xor
jns,pt
cs
adc
inc
test
push
loop
xchg
push
out
cmp
jae
in
mov
sbb
leavew
sbbl
xchg
mov
bound
ljmp
mov
inc
enter
push
mov
lods
push
lret
fiadds
push
movsb
out
xchg
inc
outsl
test
sbb
xchg
pop
popf
test
push
inc
xchg
fucomi
and
xor
adc
mov
adc
cmp
mov
lahf
mov
pop
pop
std
and
loop
loopne
dec
outsb
fldt
call
xor
dec
in
adc
pushf
bound
fucom
sbb
std
rcrb
sarl
pusha
sahf
jge
hlt
add
cmp
sub
fs
fisubrs
sub
outsl
repz
inc
mov
pop
jg
mov
fs
sbb
fisttpll
xor
jmp
push
mov
mov
mov
loope
pushl
sub
push
push
and
inc
xchg
in
pop
sub
stos
lods
sub
ret
rorl
xor
mov
adcl
into
leave
inc
fadds
lret
mov
cmp
adc
in
rcll
sbb
shl
xchg
pop
leave
aam
push
popf
out
std
sti
and
fucom
pop
push
add
mov
fidivrl
mov
dec
std
sti
ret
clc
add
dec
add
sbbb
mov
jle
pushf
sbb
or
mov
pushf
hlt
mov
xor
les
sbb
xor
cmp
lds
pop
xorb
xchg
push
movsw
negl
sub
out
sub
je
sbb
fs
fstpl
pop
xorb
inc
enter
or
cld
mov
dec
aam
std
xor
test
shll
push
movsl
mov
test
je
and
dec
ss
sub
cmpb
pop
cld
mov
add
add
rcr
in
enter
xor
adc
icebp
shll
fnstenv
jns
add
and
in
cmp
jg
add
sbb
adc
ficompl
push
int3
inc
or
sbb
xor
inc
mov
roll
stos
inc
add
les
jge
jl
sub
mov
ds
lea
cmp
movsw
mov
pop
dec
dec
arpl
lahf
xor
fs
xor
pusha
push
cmp
in
inc
inc
subb
push
xlat
xchg
rcrb
jne
push
pop
jne
add
mov
jnp
js
mov
sbb
fsubrl
jp
dec
xlat
scas
int
mov
jnp
cli
stos
dec
push
insb
or
adc
dec
dec
inc
lahf
fsub
mov
je
sub
sbb
push
test
loop
lea
mov
scas
insl
sar
dec
stos
cmp
shrl
loop
movd
jae
out
aas
stc
aad
push
add
std
or
in
dec
mov
rclb
shll
andb
xchg
fldl2e
popf
jb
out
push
mov
xchg
dec
mov
cmp
mov
jns
or
pop
aad
mov
pop
inc
jecxz
jecxz
movsl
add
jae
prefetch
or
jle
adcl
ja
xlat
dec
jnp
cmpsl
and
adcb
mov
jne
imul
ljmp
sub
or
sbb
lock
stc
add
int
jg
sbb
mov
inc
outsl
mov
aas
imul
push
dec
data16
int3
adc
dec
mov
mov
sahf
dec
xchg
into
mov
loop
out
adc
cmpsl
mov
or
ficoms
xchg
jp
stos
inc
sbb
shlb
int3
sub
lahf
mov
pop
fstl
or
outsl
sbb
pushf
xchg
rcll
popl
pop
jp
xchg
daa
sbb
mov
popa
test
std
out
xchg
cmp
push
xchg
sub
jmp
or
or
les
and
clc
jg
xlat
nop
push
mov
xor
push
jg
scas
mov
stos
mov
cmp
aas
in
mov
dec
jbe
jl
fidivrl
push
stc
leave
xchg
mov
daa
add
add
and
lds
mov
pop
imul
cld
std
sarb
inc
and
add
cmp
push
sub
mov
pop
imul
jb
outsl
je
jge
jge
pop
and
shl
mov
pop
ss
xor
and
fdivs
repnz
dec
ljmp
scas
adc
xor
stc
adc
pop
lock
nop
ret
mov
cmp
xlat
sbb
xchg
ds
mov
adc
sbb
insl
mov
jns
push
andb
test
dec
adc
mov
xor
jb
pop
push
sub
jo
and
cmp
add
lahf
inc
jb
or
xor
pushf
mov
pop
in
jp
rolb
mov
mov
pop
aaa
xor
daa
gs
cmpsb
or
xchg
jle
nop
sbb
xor
xchg
xor
test
jne
jmp
sbb
push
pop
insb
push
in
imul
leave
ss
gs
in
mov
shrl
push
nop
or
icebp
dec
mov
sub
cmc
add
fidivl
jecxz
xchg
adc
and
ss
loop
sahf
notl
xor
jae
push
int
gs
cmp
pop
sbbb
cmc
es
out
imul
aam
movsl
and
outsl
jecxz
hlt
loope
popa
xchg
cmp
inc
sar
adc
push
jbe
xchg
insl
mov
sbb
fstl
fbstp
or
pusha
mov
jb
lock
pop
insl
fnstsw
push
lcall
dec
jo
cmp
mov
test
aam
jl
mov
stc
or
popa
ljmp
and
ret
insb
in
or
sbb
xor
push
mov
jno
lea
sbb
arpl
fsubrs
fidivl
fadd
mov
test
push
add
push
psllw
loop
sbb
leave
les
movsb
mov
xchg
cmp
cwtl
and
push
mov
into
push
push
xchg
push
cmp
loope
dec
inc
cmc
lret
pop
inc
fwait
pop
xor
dec
adc
mov
inc
fnsave
dec
sti
cmp
push
out
iret
leave
arpl
xchg
icebp
pop
or
fcmovne
ss
sub
shlb
in
cmp
push
sahf
imul
rcr
xchg
stc
sbb
test
fwait
je
nop
shrl
push
or
stos
aad
mov
mov
stos
sub
out
sbb
stos
pop
mov
popa
test
repnz
aaa
jae
cmp
mov
push
push
jb
mov
idivb
adc
inc
pushf
loope
or
dec
and
das
imul
sbb
mov
push
imul
push
lea
adc
jge
in
push
loop
add
sub
jbe
add
xor
jl
push
inc
adc
push
add
insb
aas
push
stos
inc
les
cltd
sbb
lock
add
clc
jns
and
adc
lods
sub
and
adc
push
sbb
mov
or
fs
push
mov
cmpl
xchg
les
mov
xchg
fsubp
xchg
xor
rcrl
loop
mov
pop
subl
ja
jnp
cs
out
scas
jl
lret
in
call
push
int3
mov
jno
aam
sar
imull
push
sub
aaa
test
outsl
push
decl
rolb
add
leave
mov
jns
rorb
mov
sub
push
push
outsl
pop
dec
data16
cmp
je
inc
and
imul
cli
mov
fcmovne
inc
out
lods
push
xor
push
xor
cmp
test
sbb
push
add
popf
imul
sti
inc
in
cld
movsb
aaa
mov
mov
mov
xchg
ja
outsb
sahf
sub
dec
ret
in
mov
push
daa
std
out
ret
adc
hlt
xchg
pop
rorb
push
lret
inc
fs
mov
scas
xor
test
mov
xchg
jmp
aad
sbb
jne
arpl
arpl
and
stc
test
jecxz
push
lcall
xchg
in
arpl
lock
cmp
inc
mov
pop
gs
popa
cmp
xor
cmp
push
cmpsl
icebp
ja
outsl
pop
in
pushf
repz
pop
outsb
lcall
push
iret
dec
jbe
cld
adc
lock
cmp
lcall
add
jmp
addr16
adc
push
lret
jnp
daa
jle
sbb
in
out
sbb
into
push
mov
sbb
imul
and
ror
mov
js
mov
xchg
jbe
dec
or
or
stc
sbb
loope
sub
push
dec
cwtl
jnp
sbb
sahf
mov
or
add
and
cmpsl
popa
pop
adc
popf
xlat
or
xchg
lcall
mov
inc
pop
loopew
mov
lds
pop
lea
lods
shlb
jo
or
jmp
push
addl
sub
or
icebp
dec
cmc
hlt
mov
lret
and
and
pmuludq
addr16
fwait
mov
sub
pusha
push
lea
sub
pop
rol
stos
fidivrl
fldt
dec
sbb
and
mov
sub
mov
jl
scas
stos
test
int3
cmp
int3
push
jbe
imul
jmp
mov
into
mov
inc
mov
push
xor
lods
sub
cmp
test
adc
xor
fnsave
xchg
or
jns
add
lea
add
add
inc
jb
out
call
jl
sub
mov
sub
popa
and
stc
xchg
out
jnp
je
xor
mov
sbb
and
add
lret
or
xchg
mov
pop
lods
pop
jns
rorl
jno
sbb
stos
int
repnz
sub
aaa
arpl
mov
in
aaa
icebp
mov
fcmovnu
add
mov
mov
dec
scas
and
push
or
pop
mov
lods
fcoms
into
push
lods
mov
je
pop
sub
dec
mov
sti
in
mov
sti
mov
dec
pop
xor
inc
pop
add
das
test
test
out
gs
push
jno
daa
out
movsb
sub
or
fisubl
lods
out
dec
shlb
sub
daa
inc
test
cmp
sbb
cmpsl
and
mov
stos
lret
sbb
or
push
mov
cltd
es
mov
gs
sarl
adc
ds
cs
jae
mov
test
add
jl
icebp
lock
or
mov
loope
cmp
push
sti
push
and
adc
movsb
cmp
fistpll
ja
cmpsl
lods
pop
mov
pop
jnp
pushf
push
add
cmp
mov
mov
repnz
mov
fimuls
rcrl
sbb
push
mov
ror
pop
and
push
cmpsl
fidivs
ret
icebp
cmp
aaa
mov
inc
lahf
jne
mov
imul
nop
xor
push
jne
xor
push
pop
leave
inc
jl
pusha
sbb
fnstcw
aas
das
sbb
mov
cmp
imul
out
jge
test
or
push
xor
and
mov
aaa
aad
push
stos
out
sbb
outsb
mov
es
or
mov
mov
lcall
jae
mov
shll
roll
jge
stos
dec
aas
and
and
or
or
mov
ljmp
mov
mov
sub
mov
or
pop
ds
rcr
dec
sbb
and
fidivrs
loope
cmp
or
jne
fildll
inc
fwait
cmpl
nop
mov
fst
and
stc
inc
ss
xchg
add
or
cs
inc
inc
pop
xchg
ffreep
pop
shlb
fistl
push
add
xlat
sbb
lcall
jg
lahf
bound
shlb
xor
adc
jecxz
push
adc
inc
mov
xchg
mov
sbb
andb
stos
adc
add
clc
sahf
pop
rol
ja
adc
sbb
out
in
inc
shlb
pop
fidivrs
int
push
sub
push
sub
lock
stos
in
dec
scas
in
pop
dec
inc
dec
pop
lahf
stc
mov
pop
sbb
les
jbe
ja
pop
gs
mov
or
push
cmp
pop
mov
mov
test
push
mov
xor
cmp
mov
jl
pop
sub
xlat
jne
or
divl
jmp
xchg
imull
iret
or
shll
dec
sub
xor
sbb
mov
aas
fucomi
sahf
cmp
mov
add
dec
push
data16
or
dec
aad
and
mov
push
orb
fsubl
mov
movsb
and
stos
mov
xchg
nop
cmp
das
jge
test
out
iret
sbb
rol
xchg
xchg
dec
in
adc
jge
mov
pop
cmp
gs
add
aaa
xchg
cs
mov
mov
bound
out
pushf
pop
out
mov
pop
xor
mov
and
enter
pushf
insb
cmp
scas
repz
jbe
mov
seto
xor
scas
ja
and
das
inc
pusha
mov
pop
pop
lock
xchg
icebp
cmp
and
lea
jae
dec
aad
stos
push
adc
mov
cs
mov
adc
xchg
hlt
mov
pop
sub
mov
mov
lea
xlat
cli
es
das
pusha
mov
add
out
push
xor
sbb
jle
arpl
mov
jns
sub
js,pn
fcmovbe
adc
sub
jg
ret
cmp
pop
cli
pushw
push
xor
fcmovnbe
rcl
pop
lea
ret
lcall
mov
sbb
sbbl
sbb
shr
add
lret
bound
push
lods
dec
push
and
mov
sub
add
add
sbb
dec
mov
mov
cld
fildll
mov
shlb
mov
iret
push
sbbb
cli
xor
roll
add
cs
adc
xlat
mov
loopne
rclb
mov
sbb
cmc
xchg
leave
and
or
mov
aam
jnp
enter
fmuls
movsb
daa
fisubrs
inc
and
pop
push
cwtl
pop
std
ljmp
loopne
jmp
sub
in
sbbl
push
test
pop
xchg
adc
jmp
xor
pop
xor
loopne
push
sti
push
lods
cmpsl
cmpb
xchg
icebp
pop
frndint
ja
inc
popl
jecxz
or
test
ljmp
dec
test
push
sarb
cli
test
inc
lods
loopne
push
cmp
inc
cmovle
mov
push
cltd
loop
cmpsb
lods
push
enter
dec
inc
dec
pop
jne
out
cmp
stc
shr
or
fldt
jae
aas
clc
jnp
push
or
insl
pop
call
push
cmp
test
jecxz
xor
and
idivl
adc
push
push
dec
in
dec
ljmp
fwait
pop
insl
mov
adc
shlb
test
sub
adc
mov
push
xchg
adc
xor
push
fs
loopne
add
cld
ja
das
icebp
jne
stos
lea
cmp
icebp
imul
adc
mov
subl
push
pop
fisubrs
sbb
movsb
and
out
push
push
mov
in
jg
jo
jnp
addr16
repz
xor
ljmp
xor
xchg
cmpb
loopne
mov
add
dec
pushf
push
call
ret
and
daa
lock
sbb
loope
fistpll
rolb
lods
mov
popa
insb
dec
imul
cmpl
mov
ret
or
push
xor
dec
jg
aaa
mov
pop
inc
jne
add
imul
cmp
movb
fistps
fwait
lods
or
sbbb
sarb
mov
fs
push
mov
adc
in
imul
inc
mov
xchg
push
mov
xchg
sbb
popa
cmp
test
jbe
push
cmp
xor
arpl
xor
push
dec
shll
call
xlat
ja
insb
mov
xchg
sub
cmpb
in
icebp
push
mov
frstor
icebp
pusha
les
push
das
imulb
dec
iret
cmpsb
test
jp
ret
movsl
gs
mull
mov
movsb
mov
cmpl
dec
pop
das
movsb
xchg
ror
cmpsb
sbb
xchg
inc
sarb
mov
popl
sub
cmp
xor
sub
enter
ds
out
xchg
aam
pop
or
popf
xor
or
fiaddl
mov
cmp
fstpt
cmp
rcll
iret
ds
test
and
sbb
adc
mov
push
mov
and
and
xor
jne
into
push
add
hlt
fwait
jo
sbb
xchg
push
jae
xchg
fnstsw
push
and
cmpsb
std
fldl
bound
rorb
inc
arpl
jmp
adc
mov
xchg
push
add
push
pop
lret
imul
pop
cmp
movsl
push
dec
cld
adc
sub
cmp
cs
add
mov
pusha
xor
push
xchg
mov
xor
shll
cs
faddl
jne
cld
cmp
in
mov
loope
les
dec
dec
dec
sub
sti
mov
pop
fcomps
addr16
jp
mov
xchg
es
and
repnz
mov
insb
mov
dec
mov
bound
lahf
mov
xor
sub
xor
xchg
sub
inc
fistps
xchg
pop
mov
or
ds
sub
sbb
sbbl
dec
jmp
jp
add
jle
mov
push
xchg
adc
or
inc
jg
fs
mov
mov
mov
aad
push
cmp
mov
sbb
cltd
jp
hlt
jae
mov
add
bound
imul
and
dec
jge
test
mov
and
sub
in
movsb
jmp
add
loope
adc
test
pop
mov
pop
mov
push
xor
or
xor
mov
sbb
pushf
inc
and
jp
mov
notl
js
sub
xchg
loop
sbb
roll
cmpsl
xchg
dec
fists
out
mov
mov
pop
lcall
lods
int3
lock
jnp
sub
lods
jne
jg
jae
dec
xchg
sbb
dec
pop
adc
pusha
enter
mov
push
and
lret
repz
xchg
sbb
cmp
lock
sbb
outsb
mov
test
hlt
cmpsb
mov
sub
repnz
mov
cltd
inc
sahf
cs
pop
jns
aad
cmp
or
cwtl
push
loopne
in
jl
shrl
insb
adc
add
xchg
out
call
rolb
mov
adc
orl
jecxz
rolb
dec
decb
loop
ret
xchg
dec
notb
xor
popa
fs
clc
stc
mov
mov
and
lcall
adc
mov
in
jae
fucom
inc
adc
cli
cli
mov
leave
mov
pop
mov
mov
jge
int3
fisubrs
xchg
push
in
push
add
scas
and
inc
test
fwait
test
mov
and
or
aad
pushf
out
ret
imul
and
push
pop
out
adc
pushf
or
dec
push
arpl
out
or
dec
sub
test
and
js
inc
jae
insl
add
dec
aam
or
cmpsb
cmpsb
dec
xchg
or
and
lods
push
testl
add
sbb
push
inc
xor
mov
inc
mov
inc
cmp
mov
ljmp
ret
popf
sub
cmc
jmp
js
imulb
dec
xchg
jmp
outsl
jl
iret
js
ret
repnz
mov
mov
adc
outsl
add
cwtl
inc
out
mov
pop
mov
rcll
jbe
fldenv
fidivl
lcall
cmpsl
cmpsb
std
fisubs
or
jae
lcall
rorl
adc
pusha
sbb
push
std
and
fcoms
jg
fndisi(8087
insl
pop
xchg
push
test
adc
out
sub
stc
cld
push
mov
cmp
mov
scas
dec
clc
push
jmp
push
aas
jo
data16
cmp
ss
inc
aam
jo
mov
bnd
pusha
sub
shlb
push
cmc
insl
or
int
xor
dec
shlb
jle
shlb
jl
or
push
pop
mov
mov
or
ss
out
outsl
punpcklwd
jnp
jne
xlat
icebp
or
mov
cmpsb
scas
sbb
jp
sub
dec
push
test
or
xchg
mov
mov
sub
inc
out
jl
cmp
mov
lock
pop
adc
arpl
mov
pop
loop
dec
sahf
xchg
clc
fmuls
add
aas
push
repz
sub
cmp
xor
negb
push
mov
rcl
lret
mov
xchg
mov
jnp
mov
bound
cmp
cltd
andl
push
stos
cmp
shrb
push
std
xchg
das
add
cld
sub
xor
in
cmpsl
scas
int
mov
cmp
daa
pop
sti
inc
sar
or
cmp
movsb
cs
int
jo
repz
ss
jecxz
decl
add
repz
fs
xor
cmpb
push
add
xchg
push
fcomi
add
iret
sub
mov
mov
push
int
test
mov
adc
pop
pop
jl
addb
add
fcompl
jne
push
fs
xchg
ret
imul
inc
aas
push
lret
out
push
jle
psrlq
jmp
jne
daa
mov
mov
dec
mov
cltd
sub
jl
and
inc
iret
dec
adc
pop
fisubrl
push
cmp
arpl
test
sbb
pop
fdivrs
sbb
mov
mov
cmp
test
or
mov
inc
jne
in
in
ja
push
xor
mov
fidivl
in
sbbl
jo
or
inc
xchg
pop
xor
push
lods
or
mov
jle
sub
cmpb
adc
pop
test
ret
mov
lret
pop
pop
xor
lods
mov
jg
push
xchg
or
or
popf
in
inc
cmpsl
sbb
jb
call
in
and
xor
mul
imul
gs
jnp
adc
xor
add
sbb
mov
adcl
ss
ss
add
sbb
mov
aaa
int
jae
cmpsl
mov
dec
fstpl
and
jmp
lea
xchg
jp
cs
test
enter
sub
inc
jg
mov
lods
arpl
daa
inc
cmp
xor
pop
mov
push
and
popa
lcall
sub
in
jl
xor
adc
shrl
repnz
jnp
xchg
jp
push
and
rclb
dec
xor
icebp
jno
in
fimuls
jmp
jo
push
aaa
outsl
jmp
pop
js
xchg
adc
dec
dec
lods
lods
aaa
fbld
push
pop
sbb
int
push
int
mov
push
mov
sbb
dec
scas
sbb
or
xor
es
mov
adc
ds
xchg
adc
xchg
adc
pop
lret
add
std
add
add
dec
xor
arpl
and
arpl
mov
xchg
push
stos
xchg
cmp
clc
xchg
sbb
aam
push
dec
inc
and
in
inc
icebp
lcall
inc
imul
ljmp
jl
fwait
mov
jl
xor
sub
inc
push
adc
mov
pusha
stc
pop
fs
fcomi
adc
push
and
push
push
mov
inc
jg
push
pop
fstl
movsl
test
mov
leave
add
adc
mov
mov
xor
pushf
dec
mov
aaa
mov
std
pop
dec
std
jbe
adc
fildl
mov
inc
sahf
mov
ret
sub
cld
mov
jb
push
out
and
shlb
xor
out
xlat
jecxz
pop
inc
mov
mov
or
roll
and
addr16
jl
jo
pop
add
roll
lret
call
add
insb
jl
add
or
int3
in
movsl
lcall
js
lahf
sub
lods
iret
push
bound
jg
js
dec
push
daa
ss
int
rolb
stos
fs
add
and
mov
divb
push
pop
or
lret
sub
and
adc
sub
repz
mov
or
in
cmp
sub
fdivs
dec
xor
lea
and
dec
or
aam
test
bound
in
inc
dec
test
cmp
xorb
outsl
xchg
or
loope
push
pop
sbb
aad
les
or
loope
cmc
lcall
pop
mov
jne
cltd
push
xchg
test
ss
scas
pavgb
shl
test
nop
cmp
lret
and
jl
popa
movsb
clc
mov
xorb
loope
xor
inc
mov
jnp
movsb
andb
sub
cli
jp
mov
pushf
sti
in
imul
fisubrs
mov
push
leave
lods
sbb
mov
fnstcw
stos
xchg
mov
xor
loop
mov
shlb
pop
inc
cmp
push
addl
and
inc
sbb
dec
pop
movsb
cmp
mov
adc
test
inc
adc
aaa
jae
pop
xchg
push
cli
cmpsl
pusha
js
xor
ror
scas
push
jns
cld
inc
cld
dec
andl
in
jnp
and
arpl
push
lods
push
add
mov
lods
mov
lea
movsb
jp
ficomps
mov
fucom
lods
jne
outsl
mov
or
or
mov
rclb
pop
cmovo
mov
xorl
push
xchg
adc
and
mov
pop
stos
mov
jge
xor
lea
sbb
scas
outsl
movsb
in
and
adc
iret
push
and
add
andl
jb
aam
xchg
or
movsb
xor
pop
inc
dec
fisttpl
fldcw
pop
mov
xor
insl
jnp
xor
in
int3
call
cs
inc
and
pop
or
das
and
addl
stos
mul
mov
insl
rcrl
into
addr16
imul
dec
in
cwtl
int3
cwtl
mov
sub
loopne
movsb
jnp
sub
pushl
scas
orl
lods
ds
mov
add
int
lret
inc
outsb
pop
inc
inc
sbb
push
pop
clc
pusha
mov
lcall
inc
es
inc
sub
pop
add
or
xor
pop
daa
mov
aaa
push
mov
inc
push
and
ja
and
test
xor
icebp
iret
aam
mov
lret
fcmovnu
sbb
aad
nop
sub
das
popa
or
arpl
nop
lret
jno
gs
sbb
das
xrelease
out
out
adcb
pop
dec
mov
jae
and
nop
and
testl
pop
pop
lock
cli
lahf
cwtl
cmpsb
cld
arpl
fwait
dec
in
jg
pushf
cmc
jo
sbb
push
adc
je
aaa
sub
jp
into
jae
loope
and
xlat
mov
mov
fsubs
cmpb
ret
adc
push
call
push
enter
sbb
loope
cmpb
dec
lret
and
ja
inc
test
add
jg
sbb
or
mov
add
outsb
sub
in
lret
sub
lret
xor
pushf
les
out
ficomps
sub
mov
jns
push
sub
outsb
call
pop
sbb
mov
xchg
in
push
imul
fwait
jmp
je
cli
pop
lds
fcmovbe
iret
pop
inc
sahf
push
out
dec
lret
outsb
add
jmp
push
sbb
sbb
xlat
sbb
jmp
icebp
movsb
gs
cmc
js
dec
inc
lcall
repnz
idiv
ret
mov
and
sub
ja
lock
jo
ljmp
cmp
std
sbb
arpl
sbb
inc
sub
adc
mov
andl
or
mov
xor
push
popf
popa
stos
fildll
shll
cli
insb
inc
rcl
addr16
dec
dec
aam
and
movsb
rcrb
outsb
add
pop
cmp
enter
dec
aaa
or
test
sub
or
sub
cmp
inc
into
or
movsb
dec
fdivrp
inc
mov
pushf
sbb
inc
sahf
lods
pop
jg
pop
jl
pop
popa
dec
mov
mov
les
and
jo
mov
push
fcomp
test
inc
in
pusha
shl
dec
ficompl
pop
inc
sbb
mov
enter
inc
push
arpl
push
in
aaa
call
ret
xor
lret
addr16
lock
aas
mov
je
inc
popf
movsl
aaa
sti
sbb
lods
and
mov
push
xchg
xor
jbe
xchg
imul
jns
xor
cli
mov
loope
jl
mov
mov
test
aas
push
pop
aam
sahf
les
movsb
mov
stc
dec
xor
rcll
sar
clc
mov
loopne
or
cmp
pop
mov
xchg
lods
and
mov
push
cmp
mov
sbb
popa
add
mov
jmp
inc
stos
pop
cmp
and
pop
jbe
imul
jp
adc
out
sbb
mov
popa
psllw
out
inc
inc
cli
and
mov
fldt
or
sahf
repz
lahf
cmp
pushf
and
xlat
cmp
mov
je
imul
dec
bound
in
ljmp
add
arpl
jo
add
fnstcw
inc
lret
mov
roll
add
repz
pop
jbe
xlat
push
cmpsl
push
pop
add
and
cli
dec
lock
ret
mov
mov
push
in
add
cwtl
outsb
cltd
dec
lds
mov
adc
jns
test
fcomp
insb
ja
popa
leave
popa
inc
pusha
sti
jns
rol
lret
gs
shrb
aas
cmc
sti
pop
orl
outsb
ds
push
xor
fmull
inc
xorl
jle,pt
mov
push
mov
sbb
sub
add
add
pop
adc
sarb
insb
insb
shl
sub
sub
mov
push
push
xchg
lret
jg
and
mov
xor
mov
or
adc
and
push
lret
push
xchg
cltd
outsl
nop
jno
fsts
loope
in
mov
scas
xchg
and
push
and
jnp
add
inc
cwtl
ret
ljmp
mov
lods
clc
cs
aas
movl
mov
jg
pop
pop
jne
sub
stos
test
mov
les
adc
jp
sbb
dec
mov
pop
roll
dec
addr16
adc
sbb
push
enter
jp
adc
mov
es
sbb
mov
jnp
pop
xor
in
xchg
and
or
loop
pop
cmp
outsb
jge
pop
or
jecxz
lds
adc
sbb
fnstcw
out
xchg
pop
xacquire
lahf
push
mov
add
lret
insb
inc
ljmp
pop
dec
dec
icebp
dec
mov
pop
stos
jae
dec
sti
jns
fdivl
push
enter
sti
xchg
iret
and
sbb
mov
and
fwait
jle
mov
cmp
add
nop
pushf
mov
in
movsb
jp
sub
scas
sahf
fwait
aas
adc
sbb
aas
xor
mov
cmp
inc
inc
push
sub
popf
ja
xchg
jb
cmpsb
mov
shl
outsb
aaa
cltd
xor
repnz
fsub
es
dec
mov
dec
jnp
cmp
outsb
aaa
nop
mov
test
add
jmp
and
jae
and
xchg
mov
mov
fldenv
decb
pop
mov
mov
bound
mov
ret
and
and
push
dec
in
pop
cmp
dec
fiadds
inc
cmp
std
enter
pop
iret
imul
cli
test
cmp
lds
mov
xchg
xorb
add
hlt
ss
jl
cli
pop
sub
dec
cli
lock
and
add
push
dec
ja
pop
stc
or
data16
xor
iret
or
inc
cmp
js
cmp
cmp
lods
ja
lcall
add
sbb
add
mov
xchg
fld
js
inc
pop
mov
and
lock
inc
fstpt
adc
push
clc
shll
pop
nop
sub
int3
sbb
nop
mov
outsl
cmp
imul
fidivl
bound
inc
lock
fs
xchg
addr16
ret
out
dec
test
or
outsb
loope
popaw
leave
sbb
push
sarl
cmp
lahf
and
add
mov
jle
add
fsubs
sarb
fidivrl
mov
ret
and
cwtl
xchg
ljmp
mov
loop
dec
imul
insl
stos
cmp
dec
std
inc
mov
loopne
ret
test
jle
loopne
popa
and
cmpsl
stos
rolb
push
pop
mov
push
aam
mov
cmpb
jns
out
pop
jno
leave
pushf
sub
dec
mov
sahf
scas
test
nop
test
add
fldenv
mov
adc
fcmove
inc
jns
stos
sub
cmp
mov
and
cmp
dec
das
bound
xchg
js
sbb
mov
div
xor
das
mov
adc
push
cmp
cwtl
outsl
lcallw
gs
inc
jnp
push
rcrb
mov
subl
icebp
xlat
test
in
jns
dec
cltd
mov
fsubl
dec
es
popa
lret
shlb
jns
or
insb
test
sbb
sbb
mov
mov
iret
mov
add
add
xor
mov
pop
scas
sbb
cmc
cltd
subl
push
ret
mov
mov
sbbl
orb
ret
daa
cmpsb
jl
pop
and
dec
mov
testb
and
pop
xor
xchg
adc
jmp
mov
sub
sub
aam
mov
lret
test
jge
adc
shrb
es
inc
and
out
jle
pop
mov
popf
mov
mov
push
sub
lods
stos
jne
daa
jle
pop
adc
sub
fcmove
push
rolb
push
je
push
pop
rcrb
aaa
gs
mov
pushf
xlat
jg
ret
mov
sbb
and
mov
aam
shrl
dec
addr16
push
aas
ret
adc
cwtl
cld
int
repz
xchg
in
sti
xchg
xchg
std
add
dec
mov
push
mov
ret
cmp
push
mov
push
ljmp
fistps
arpl
lea
dec
xor
loop
xchg
or
add
movsb
mov
aam
adc
out
addl
mov
aad
or
sub
dec
cs
out
sbbb
loope
gs
outsl
ret
lret
lock
sub
mov
xchg
sbb
cmpsb
mov
dec
sub
cmpsb
sbb
call
push
xor
das
xchg
insb
leave
mov
fdivs
arpl
mov
jl
xor
mov
sub
lret
xor
xchg
and
adc
and
xor
cmp
cmpsb
outsl
mov
movsl
call
and
mov
push
adc
inc
jp
and
fs
add
sub
hlt
cwtl
jns
rclb
jbe
test
je
adcb
push
inc
daa
out
test
mov
push
addr16
xchg
loop
cmpsl
aas
cmc
dec
lcall
cmc
clc
xor
mov
push
add
mov
sarb
hlt
lret
jp
sbb
insb
and
push
xlat
cmp
xlat
lret
jl
jnp
add
inc
shll
fisttps
or
mov
lock
inc
aam
stos
shld
sub
je
adc
andl
and
pop
subb
adc
mov
aas
imul
dec
arpl
dec
sahf
in
cmp
out
sbb
adc
jp
call
and
add
adc
lock
mov
mov
cs
flds
mov
es
call
jns
std
mov
sub
ja
pop
jge
dec
sub
data16
xchg
sbb
je
and
inc
mov
xchg
mov
subb
addb
xchg
sbb
and
cmp
gs
pop
outsl
xor
xchg
xor
test
enter
in
xor
jg
sbb
mov
je
ds
pop
inc
add
jmp
int
lods
dec
aas
test
sar
aam
mov
outsl
sbb
push
ret
inc
add
loop
dec
iret
std
shl
lock
jge
mov
sti
sub
dec
xchg
push
mov
sub
or
cltd
lds
inc
xlat
pop
lods
cmpsl
xchg
in
outsb
xor
cmpsb
cmp
inc
pop
push
in
cmp
sti
pusha
cmp
movsl
pop
dec
cmc
push
add
aad
divl
cs
mov
cs
loope
sti
insb
lret
cmp
iret
test
nop
xor
pop
jl
ret
sub
clc
and
orb
push
les
arpl
and
popa
test
xchg
jns
adc
mov
addb
xchg
mov
dec
sbb
mov
aas
hlt
movsb
push
iret
push
jb
ficoms
push
mov
in
lea
mov
ja
inc
dec
mov
aaa
jae
test
mov
outsl
mov
adc
mov
xchg
sub
xor
lods
or
ds
xlat
aaa
dec
mov
pushf
clc
add
enter
sti
sub
cld
xchg
mull
pop
pop
cli
pusha
pop
jns
clc
jle
lods
mov
bound
sub
xchg
xor
icebp
sbb
inc
cmp
cld
gs
pop
jbe
dec
mov
add
mov
in
pop
mov
cmp
pop
enter
inc
adc
nop
mov
imul
jb
shrl
jae
xchg
sub
cmp
rcrb
inc
aas
test
sub
add
iret
and
xor
ror
add
in
and
lods
push
jns
mov
xlat
sbb
xchg
jle
int
cld
or
dec
or
xor
sbb
adc
ljmp
push
je
xchg
mov
sub
clc
scas
cs
jp
xchg
xor
push
cmp
sub
cmpsb
mov
sbb
int3
lods
stos
xor
xor
sub
fs
pop
jmp
fisubrs
cmpsl
xor
push
test
outsl
lods
imulb
sub
jmp
pop
loope
jno
xor
in
pop
cmpl
add
movsb
rorb
sbb
pop
pop
or
mov
std
popf
into
inc
fs
rorb
imul
iret
add
jmp
pop
mov
ljmp
outsb
adc
or
arpl
movsl
mov
repnz
andl
push
loopne
pushf
dec
shl
test
pop
es
and
or
adc
mov
pop
pop
cli
push
dec
vmovmskps
outsb
je
and
mov
outsl
imul
inc
xchg
mov
jnp
rcrl
mov
movsb
mov
push
xchg
sbb
mov
out
pop
lret
jb
fimull
xlat
and
inc
in
pop
adc
sub
scas
pop
negl
cwtl
xchg
cmp
icebp
sbb
sbb
inc
inc
sbb
aaa
add
adc
jecxz
roll
jnp
sbb
mov
repz
inc
cltd
adc
in
dec
sub
mov
cmp
cmp
push
arpl
int
ret
pop
xchg
mov
xor
push
addr16
rcll
popf
jmp
xor
fwait
xchg
mov
sbbb
xchg
popf
in
xor
daa
jl
mov
pusha
mov
fnstsw
rorb
lea
out
repnz
sub
aas
loop
mov
divb
inc
mov
and
lcall
push
inc
inc
pop
pop
cmpsb
mov
gs
test
mov
fcoms
rol
pop
push
insl
mov
push
xchg
push
add
pop
add
push
xor
cmp
arpl
or
mov
pop
xor
cmp
jge
shrl
add
ficompl
lods
add
xchg
dec
jmp
hlt
iret
mov
sub
pop
mov
and
pushf
insb
sbb
sub
cmpsb
subb
pop
orl
fwait
push
xchg
mov
adc
adc
adc
pushf
inc
xchg
int
sub
sbb
cmp
insb
xor
bound
xchg
shld
dec
xchg
cs
aaa
xchg
in
cltd
addl
arpl
andb
aas
or
test
rcr
js
xchg
popf
dec
xchg
inc
nop
sbb
call
mov
push
loop
ss
xchg
jmp
pop
and
push
test
or
pop
xor
push
xor
adc
adc
rcll
les
adc
gs
cs
xor
adc
add
jecxz
imul
sbb
adc
or
jg
mov
jns
pop
cmp
movsl
mov
in
les
xor
xor
loopne
sbb
mov
adc
iret
sbb
xor
je
push
push
add
std
mov
fnstsw
xchg
lds
scas
data16
orb
mov
push
push
ja
adc
pusha
sub
mov
orl
pop
sbb
int
push
mov
aaa
fnstenv
push
sbb
adc
pop
mov
pop
repz
mov
mov
push
iret
jno
mov
clc
lods
call
jl
dec
aaa
jge
test
xor
xor
jg
clc
icebp
jg
add
or
adc
xchg
mov
adc
insb
push
sahf
test
fidivs
mov
lcall
fstps
je
jnp
xchg
mov
lret
xchg
mov
andl
dec
pushl
mov
cltd
fcoml
sub
shll
mov
xchg
push
je
cmc
inc
repnz
push
aas
jnp
roll
inc
or
test
pushf
sub
scas
mov
and
movsb
cmp
add
loopne
fxch
jae
xor
mov
clts
cs
sti
adc
movsb
inc
inc
pop
lock
adc
test
dec
xchg
leave
xchg
add
or
lods
pop
imul
insb
add
stos
popa
mov
sbb
fdivrs
inc
dec
mov
jl
dec
aam
mov
daa
jl
jg
push
outsl
add
loopne
cmc
ss
stos
fisubs
xlat
jns
mov
mov
repnz
out
cmp
xchg
in
xchg
cs
lds
out
shrl
sub
scas
and
pop
inc
mov
or
call
cmpsb
ljmp
cmp
ret
push
sbb
sbb
scas
jne
xchg
mov
jge
das
popf
cmpsl
stc
dec
cld
push
out
fcoms
pop
out
loope
inc
test
stc
aaa
and
loopne
mov
or
pop
xchg
repnz
mov
stc
inc
sub
push
pop
dec
push
push
push
scas
cmc
loope
sarb
shlb
pop
pop
adc
and
test
push
mov
mov
mov
out
sbb
mov
push
loopne
nop
arpl
orb
imul
pop
mov
xlat
lods
ret
cmp
push
mov
fisubrs
ret
ret
scas
gs
inc
jp
sbb
push
insl
push
pop
xchg
mov
int
out
mov
mov
lret
stos
gs
pop
mov
add
mov
adc
xchg
pusha
jno
iret
mov
and
add
in
out
xorl
addr16
int3
popa
xchg
je
cwtl
cmp
sbb
loope
adc
push
arpl
lods
imul
mov
mov
stc
xchg
cmpsb
pop
ja
dec
mov
ret
ja
test
pop
sub
xchg
movsb
fistpl
cmp
adcb
popf
scas
push
icebp
je
cmp
cltd
shl
pop
shlb
push
adc
add
fisubs
fwait
call
mov
in
mov
cmp
call
cli
and
xchg
adc
dec
jg
movsl
inc
js
push
jmp
fwait
out
cmp
out
fstpl
inc
sbb
test
and
add
subb
inc
lods
test
popa
call
jg
adc
and
adc
test
fimull
jg
mov
add
sti
jg
pop
or
scas
inc
lds
fstps
jbe
mov
cmp
cs
mov
mov
add
push
push
jns
jge
ljmp
cmpsl
or
clc
cli
mov
dec
jl
push
cwtl
rcr
fwait
adc
enter
mov
stc
aaa
hlt
aaa
mov
cwtl
mov
xchg
jge
cmpsl
sahf
cmp
jg
xor
int
insl
mov
or
push
fwait
jb
mov
jle
mov
jno
into
shrb
push
scas
popa
loopne
and
mov
ljmp
ljmp
rcl
adc
cmp
fucomip
jae
cmp
dec
dec
dec
mov
cmc
jmp
push
mov
shrb
cmp
inc
xor
pop
packssdw
ret
cwtl
sbb
push
push
mov
enter
cwtl
lds
push
mov
sbb
or
and
loopne
jg
adc
push
repz
into
into
cmp
ret
test
incl
jne
mov
imul
mov
jne
cmp
jecxz
sub
mov
xor
push
xchg
in
push
pop
mul
aaa
pop
push
sbb
xchg
out
cmp
inc
pop
leave
add
ficoms
les
pcmpeqb
aaa
xchg
fldl
hlt
mul
push
fstpl
push
mov
jae
movsl
mov
clc
xor
push
fildl
test
arpl
sahf
dec
mov
pop
push
sbb
pop
mov
in
xor
mov
and
xchg
sbb
xor
adc
dec
or
fdivrs
andl
jge
mov
into
pusha
jno
dec
dec
addb
icebp
rcl
orb
dec
aam
push
cmp
sahf
ret
dec
jne
sbb
sub
xchg
pop
mov
cmp
enter
out
sbb
lret
gs
ss
sbb
das
fisubrl
sub
sbb
jnp
cwtl
jle
fs
jno
mov
test
les
fistps
in
pop
jnp
push
push
ret
lea
movsl
lea
enter
mov
mov
push
add
xchg
je
dec
xor
xchg
cmc
cmpsl
das
adc
rdtsc
pop
repz
int
jp
mov
or
ret
push
jmp
out
loope
dec
into
jnp
icebp
mov
pop
loopne
dec
addb
addr16
aas
fwait
aam
mov
mov
jmp
pop
cld
inc
or
pushf
mov
sub
out
and
xchg
adc
in
inc
inc
lahf
sbb
mov
cmp
lock
xor
test
cwtl
sbb
pop
jae
jns
sub
jnp
mull
dec
mov
lods
scas
lea
cmp
fldl
xor
sahf
rorl
iret
mov
xchg
ds
cs
out
xor
mov
out
jge
jecxz
test
mov
xor
mov
int3
std
in
jno
inc
mov
sahf
mov
push
jbe
outsl
mov
and
fs
loopne
test
lahf
int
push
std
xor
inc
jno
fwait
pop
adc
test
cmpsl
or
add
nop
lahf
sbb
pop
xor
inc
xchg
shll
jno
nop
jg
add
cmc
jg
xlat
test
sbb
xchg
cltd
mov
inc
sti
popaw
mov
xor
shlb
push
loopne
jo
andb
sub
lock
mov
push
inc
mov
pushf
imul
xlat
call
nop
mov
dec
mov
sahf
lret
sar
enter
insl
pop
mov
loop
cmc
mov
pop
push
out
jp
xor
aaa
call
jae
outsb
cmp
dec
sub
vpavgb
nop
cmpl
and
sti
imul
or
push
and
mov
sub
fldt
jecxz
adc
inc
nop
or
xorb
pop
repz
xchg
xchg
or
or
pop
push
int3
mov
and
loopne
ja
push
mov
arpl
loopne
add
inc
adc
aad
mov
imul
stc
out
clc
inc
jno
dec
xchg
adc
data16
fldenv
out
aad
cs
push
mov
ficomps
popf
pop
inc
lods
lock
cmp
lds
rcr
mov
in
mov
mov
sbb
cmp
jnp
jmp
ficoml
test
mov
outsl
cmp
xor
pushf
in
pop
jne
push
pop
adc
push
into
jnp
xchg
mov
xlat
xor
push
pop
andb
daa
js
aaa
test
rep
dec
push
mov
cmp
push
inc
cmpsl
cmc
add
mov
loope
jmp
ret
sbb
xchg
mov
add
ds
pusha
mov
imul
add
int
mov
sbb
dec
lds
xchg
jns
hlt
popf
push
push
cltd
ret
cmpsb
pop
hlt
add
mov
mov
lods
pop
pop
cmp
xchg
pop
mov
pop
rcrb
add
lods
lock
cli
push
idivb
aam
stos
lcall
ja
sub
lahf
popa
subb
xchg
ss
sbb
movsl
out
shll
shr
outsl
aad
add
lea
sbb
fcoml
add
and
inc
rcrb
scas
subb
mov
bound
ljmp
loope
mov
int3
push
or
js
fsubs
xor
iret
sub
xchg
push
cmpsb
mov
jno
std
jns
sbb
push
mov
rolb
mov
imul
in
sbb
jae
dec
les
xlat
jge
fisubrs
jle
inc
add
sbb
rclb
xorb
out
shrb
jle
jge
mov
or
xchg
inc
or
or
mov
test
outsb
lahf
mov
das
das
inc
out
inc
inc
sub
or
out
aaa
xrelease
mov
mov
in
cmpsl
fdecstp
mov
ret
ss
dec
movl
push
pop
add
sahf
repnz
les
add
lret
je
sub
jge
jbe
jge
push
hlt
inc
sbb
lods
pushw
jae
jecxz
cmpsl
shl
and
jb
or
out
xchg
sbb
ret
mov
cmp
test
sbb
adc
cmpsb
fisubrl
std
stos
sbb
sar
ret
mov
cmp
add
adc
push
inc
dec
test
pop
insl
pop
pop
std
out
cmp
inc
test
jno
sbb
add
sbb
scas
les
lods
mov
sbb
cmp
fwait
sub
lcall
sbb
adc
jge
mov
xor
add
stos
test
cwtl
lods
pop
ret
and
or
loop
sarb
scas
mov
mov
push
xchg
push
sahf
cld
imul
ja
insl
push
int
add
pop
outsl
out
cmp
pushf
bound
decb
inc
mov
shll
stos
xchg
sbb
push
pusha
xor
test
cmpsl
sbb
adc
adc
mov
aam
push
daa
inc
clc
and
pusha
xor
andl
cmp
or
loopne
imul
adc
mov
scas
sbb
in
outsl
out
jo
jbe
inc
mov
clc
dec
cmp
push
aaa
rol
xchg
mov
sub
ljmp
shrb
sbb
dec
sti
or
inc
dec
aas
pop
insl
in
sbb
hlt
int3
nop
cs
dec
icebp
jb
and
xor
mov
push
fcomps
lock
push
in
out
sahf
pusha
test
stc
xchg
add
and
sub
sub
push
mov
mov
mov
dec
pop
or
jnp
cmp
das
and
cmp
fwait
dec
outsl
daa
and
hlt
push
roll
pop
sub
sbb
add
movb
mov
xchg
clc
mov
leave
adc
xor
shrl
insl
xchg
cmp
xor
orb
stc
enter
cs
push
pcmpeqd
sub
pop
outsb
hlt
pushf
mov
daa
mov
fdiv
mov
or
mov
add
and
scas
data16
imul
cmp
cs
mov
pushf
stos
pop
add
mov
pop
insb
xchg
xchg
sub
pop
cmpsb
iret
mov
mov
sub
out
int
mov
sub
subb
jo
scas
popa
arpl
push
xorb
adc
cld
dec
cli
cltd
in
xchg
ljmp
mov
repz
lock
in
mov
cmpsl
jmp
jae
arpl
push
jae
in
cmc
xchg
in
adc
fs
rcr
and
movsl
pop
jg
push
fstpl
pop
ss
outsb
fsubs
jmp
inc
mov
push
je
sbb
mov
pop
fstpl
mov
lods
ret
mov
mov
push
sahf
xor
jne
icebp
imul
cmp
mov
and
sub
inc
cmp
pop
inc
popf
fisubrs
cmpl
mov
and
sahf
mov
in
out
call
or
cwtl
sahf
xor
xchg
stc
popf
int
jno
ror
test
mov
or
aas
jmp
jge
rcrb
mov
ret
or
repnz
jo
sbb
je
mov
xchg
adc
mov
lods
lods
shlb
fstps
mov
mov
jb
out
push
dec
adc
fiadds
or
stos
mov
or
xor
mov
inc
fcmovnu
pop
dec
xor
pop
sbb
fsubr
ja
xchg
insb
add
xor
xorl
inc
cmp
dec
jmp
and
es
jmp
dec
jno
in
mov
test
push
xchg
ja
jmp
fidivl
fxch
adc
pop
pop
pop
and
mov
mov
pop
jge
paddq
sub
mov
add
cmpsl
xchg
xchg
add
inc
outsb
push
add
xor
pusha
and
adc
cs
sub
pop
dec
cmp
fistpl
rcll
add
call
pushf
ss
std
daa
sbb
dec
xor
jl
adc
inc
rol
jno
nop
push
pop
mov
mov
dec
inc
xchg
imul
in
mov
icebp
or
ret
jno
ret
bound
in
nop
mov
shlb
fwait
gs
iret
insl
sbb
orb
outsb
push
push
jle
xchg
js
dec
nop
mov
mov
in
xlat
cmpsl
or
iret
fwait
pop
mov
test
ljmp
out
outsl
inc
push
cltd
test
adc
sub
sbb
mov
in
push
mov
pop
xchg
fistpl
push
nop
adc
je
pushf
xchg
xorl
leave
or
popa
cmpl
xchg
mov
adc
and
mov
mov
std
jnp
data16
adc
jecxz
sbb
fldenv
ret
and
mov
jno
shl
push
dec
mov
xor
jnp
cmp
jno
cli
daa
fldenv
pop
outsl
je
xchg
adc
push
cmp
shll
idiv
scas
addb
ret
ss
scas
mov
in
or
fwait
outsl
insl
sbb
mov
push
inc
push
adc
inc
pop
xchg
imull
sub
adcb
imul
insl
xor
test
pusha
fstpl
repz
xchg
sahf
xchg
push
pop
mov
adc
stos
sub
inc
inc
rcl
lods
mov
test
prefetch
xchg
sbb
fimuls
push
and
jl
xchg
xor
ss
test
lret
cld
adc
out
stc
adc
out
aad
outsb
ret
ficoms
sub
jno
insb
inc
lds
xchg
nop
lea
or
jg
xchg
push
and
loopne
cmpsb
es
lretw
jmp
adc
int3
pop
or
mov
shrl
sub
ss
mov
test
or
rolb
sub
xchg
lret
mov
dec
nop
adc
inc
test
movsl
roll
add
cmp
sahf
pop
mov
mov
fistpl
sub
loop
clc
push
xchg
repnz
mov
sbbb
ds
xchg
ja
or
push
mov
lret
cltd
sbb
pop
jb
push
in
inc
ja
add
sub
and
fistps
call
mov
lret
popa
sub
mov
pop
adc
fdivr
mov
adc
call
movsl
cmpsl
pusha
bound
cwtl
push
pop
or
cmp
adc
xor
ret
stos
cmp
loope
xor
test
dec
leave
fdivrs
hlt
ja
jge
push
add
pop
pop
xor
lea
push
icebp
pop
adc
jecxz
dec
push
and
in
mov
and
add
test
fisttps
pop
stc
inc
shll
dec
push
sarb
pop
lret
jns
fwait
mov
outsb
jno
lret
push
inc
je
push
fsubrs
cmpsb
fsubs
push
inc
mov
loop
dec
push
leave
cltd
xchg
icebp
adc
pop
pop
lcall
jbe
imulb
loope
lahf
lock
dec
int3
cli
clc
cmp
inc
fwait
push
loope
aas
das
push
aas
or
or
pop
mov
cs
fs
sbb
pop
stc
ret
and
inc
and
push
loopne
rcr
out
mov
into
pop
aam
fwait
mov
outsl
push
imulb
out
in
xchg
mov
outsb
nop
das
inc
jmp
clc
flds
and
fcoml
or
js
insb
test
hlt
jbe
movsb
add
or
xchg
cmp
mov
xor
cmp
dec
sbb
ucomiss
add
ror
dec
push
outsb
add
cmp
fisubrs
push
inc
shlb
call
add
insb
pop
inc
adc
jecxz
adc
xor
sti
fimull
pusha
dec
lock
or
add
mov
lret
scas
lock
dec
adc
fbstp
xor
cmp
inc
std
sbb
sbb
ja
stos
in
or
mov
jle
jns
hlt
fdivrs
into
mov
jb
sbb
push
in
shlb
out
mov
jnp
in
enter
movl
xchg
ds
sub
adc
sti
das
cmp
xlat
fdivrl
mov
je
insb
push
mov
ljmp
sub
jecxz
dec
jecxz
arpl
or
lahf
or
cli
inc
ficompl
push
int3
pop
sbb
popf
mov
inc
dec
test
and
stos
push
jbe
loop
jmp
outsb
lahf
shrl
cmpsl
cmp
jno
mov
push
dec
xor
xchg
iret
fidivl
mov
ret
cmp
fadds
lahf
jg
aam
into
jg
sub
roll
pop
xchg
mul
inc
or
arpl
and
and
push
insb
leave
cmp
shll
ret
inc
inc
jg
mov
cmp
push
dec
jecxz
sarb
out
movsb
mov
in
sbb
xor
ss
ljmp
orl
pusha
jp
rcr
scas
pop
or
popa
out
adc
jl
adc
insl
push
dec
loope
xlat
inc
js
in
sarl
dec
sti
push
sbb
outsb
inc
push
and
cli
mov
jnp
out
aam
or
xor
sub
test
inc
jp
xlat
push
loope
and
pusha
repz
jle
inc
mov
rorl
sub
imul
cwtl
mov
test
das
dec
adc
add
fldl
xchg
daa
call
pop
ss
push
or
outsl
xchg
or
int
push
pop
inc
andl
xor
mov
push
clc
dec
mov
inc
xchg
enter
lcall
add
movsb
mov
xchg
and
mov
dec
push
jnp
iret
mov
lea
sub
push
push
rorb
add
ljmp
jnp
clc
xor
aaa
xor
lea
imul
scas
pop
jae
call
sbb
mov
cs
insl
stos
push
fsubrs
sub
push
mov
mov
pop
push
sub
mulb
dec
cld
and
inc
cmp
mov
rcrl
iret
dec
bnd
mov
aam
in
pop
pop
negl
xchg
xchg
testb
shll
fcoms
rolb
mov
in
lods
cmpsl
xor
pop
and
daa
cmpsb
pop
fildl
outsl
fwait
pusha
sahf
shl
add
mov
cmp
mov
imul
mov
lds
push
orb
cmc
push
mov
cwtl
adc
mov
jp
hlt
push
imul
int3
ret
rep
sarb
loopne
jp
jne
add
add
dec
adc
ja
sub
lock
dec
mov
dec
jg
hlt
fisubrl
pop
cmpl
mov
xchg
jns
xor
or
adc
imul
xchg
mov
adc
push
mov
ljmp
ss
or
sbb
cmp
addb
mov
mov
mov
outsb
push
leave
je
pop
push
dec
insl
mov
xor
push
in
clc
adc
sbb
xchg
jns
faddl
shlb
gs
mov
push
into
fidivrl
outsb
jg
insb
inc
mov
mov
add
stos
leave
pop
test
sub
mov
outsb
loopne
pusha
jecxz
fmuls
push
jecxz
div
pop
mov
jp
add
jmp
subl
or
repz
mov
frstor
xchg
xor
inc
adc
mov
or
ror
push
cmc
inc
in
lods
pop
and
icebp
pop
fisubrl
hlt
jns
test
jbe
mov
mov
xchg
inc
subl
mov
fists
icebp
loop,pn
mov
mov
imul
rcl
xchg
call
xor
sub
pop
idivb
into
jae
fsubrs
aas
cs
lods
ds
mov
inc
dec
lods
lock
stos
loope
pop
add
insl
mov
adc
inc
in
lret
pop
sbb
ljmp
arpl
mov
sarb
sbb
shl
lcall
jb
mov
xchg
ss
stc
jbe
xchg
pop
and
ljmp
cmp
add
cltd
lret
pop
cltd
jg
cltd
fiaddl
shlb
std
add
in
and
int
push
loopne
lahf
fisttps
stos
js
ds
or
icebp
xchg
sbb
negb
aad
add
setp
cltd
shll
pop
in
push
test
push
lea
sbb
pushl
stos
jl
mov
cmp
mov
sub
mov
jle
sbb
aam
fisttpl
cmp
add
sti
inc
int3
xor
mov
fsub
adc
stos
or
push
std
mov
loope
push
in
sub
xchg
ljmp
mov
add
xchg
sahf
inc
pop
mov
push
pusha
add
cld
sub
enter
jo
xchg
jp
cld
fsubp
enter
je
test
outsb
data16
mov
mov
lcall
pop
iret
xor
dec
dec
xchg
jo
adc
scas
sbb
rol
enter
pusha
mov
mov
dec
xor
inc
or
int3
mov
sbb
outsb
out
cmp
int
xlat
dec
xchg
xor
jbe
das
push
xchg
mov
sbb
insl
pop
and
arpl
loop
aad
test
mov
cltd
or
rcll
imul
adc
imul
pop
aam
rcr
mov
lds
scas
lahf
dec
mov
push
sub
fistps
mov
dec
in
lods
outsl
loopne
aam
and
fisubrs
movsb
mov
xor
inc
loope
sarl
push
adc
and
adc
lods
adc
das
mov
iret
and
mov
outsl
xchg
mov
dec
mov
cld
xchg
imul
idiv
pop
loop
dec
pop
test
pop
insb
stc
movsb
and
jmp
in
pop
out
sub
repnz
mov
fistps
xor
push
rcrb
adc
nop
push
jne
loopne
inc
pop
inc
sahf
xchg
sbb
sbb
in
pop
imul
stos
and
adc
in
cld
pop
push
and
out
lahf
xchg
lret
test
inc
cli
push
lods
push
push
sub
shll
scas
movsl
bnd
or
pop
faddp
push
mov
daa
dec
mov
cmp
arpl
jno
testl
xor
cs
inc
data16
jge
or
jbe
adc
inc
xor
sbb
popf
push
addr16
jge
aad
inc
outsb
dec
cmc
shrl
push
push
lods
stos
je
lds
dec
dec
out
bound
pop
or
mov
push
xor
fistl
stc
pop
sbb
xchg
and
lret
mov
aas
jmp
repnz
add
sub
fidivl
leave
inc
stc
lret
inc
subb
pusha
pop
inc
fildl
repnz
xor
jo
gs
clc
stos
jne
les
jne
in
arpl
repz
dec
push
aad
jne
outsl
arpl
push
test
push
and
mov
xchg
sub
test
icebp
sbb
test
xor
mov
nop
pop
hlt
fadds
adc
pop
iret
jge
sbb
sbb
sub
les
mov
add
mov
ss
and
loopne
pop
rcl
test
shl
cmpsb
inc
add
orl
cmp
fs
dec
shlb
sbb
lcall
loope
cmpsl
xor
adcb
outsl
scas
sbb
insl
adc
cmpsl
sub
jle
imul
or
pop
ret
mov
and
and
sbb
into
sub
pop
xchg
imul
xlat
sbbl
rorl
out
add
shr
or
cld
rorl
sahf
adc
cwtl
jmp
mov
xchg
test
in
test
adc
jle
ljmp
fdivrs
loope
jb
jno
movsb
gs
xorb
clc
cmp
scas
mov
jbe
inc
data16
mov
leave
mov
xchg
fwait
cmp
xor
addl
xchg
mov
cld
push
sub
daa
adc
xor
mov
xor
insb
mov
lock
in
sub
adc
sbb
popf
mov
cmp
mov
negb
xor
push
fsts
rcl
outsl
sbb
sbb
pop
pop
int3
lods
jecxz
xchg
outsb
aam
inc
fsubs
xchg
clc
rorb
mov
xor
cmp
inc
cmp
or
mov
insl
daa
pop
hlt
shlb
negb
and
mov
add
jo
jp
mov
int
sbb
and
movsl
xlat
sbb
jmp
stc
inc
dec
fnsave
lea
xchg
xor
ficompl
ljmp
dec
mov
mov
call
mov
xchg
jne
jo
mov
push
fnstsw
sub
inc
pop
mov
out
push
into
xchg
std
or
test
sub
lods
filds
dec
sbb
push
mov
inc
mov
sahf
in
mov
add
mov
sahf
cmpsl
push
adc
and
pop
mul
mov
dec
cmpl
inc
les
inc
xchg
lods
hlt
lcall
cs
xchg
test
scas
sbb
mov
push
mov
pushf
sbb
sbb
sub
cld
inc
mov
or
test
addr16
mov
fcoml
inc
iret
push
sub
scas
ss
mov
ss
pop
jno
out
in
sub
push
fcomps
repz
cmp
mov
ja
add
mov
push
cli
gs
xchg
addr16
stos
inc
outsb
out
lds
rcrb
xchg
xchg
call
jno
pop
or
or
adcb
call
cltd
add
mov
pop
push
nop
decb
fsubr
jne
cmp
mov
addr16
in
and
or
sbbb
sub
andl
in
int
push
mov
jbe
lods
mov
fildl
sub
mov
inc
jbe
fs
push
xchg
out
fdivrs
hlt
iret
int3
repz
mov
pop
push
pop
data16
adc
push
daa
and
mov
and
inc
out
addb
or
mov
scas
popf
hlt
int
ret
mov
cs
cmp
jge
xor
xchg
cmc
mov
test
int3
fs
in
xor
cmc
int3
mov
les
daa
jl
insb
adc
or
pop
das
xor
cmp
idivb
sub
sbb
ja
inc
mov
enter
loop
aam
mov
adc
call
xor
sbb
std
inc
ss
fdivrl
push
jns
arpl
xor
aad
repz
mov
mov
imul
dec
mov
or
jg
push
shll
adc
inc
cmp
test
push
or
fsubs
ja
nop
pop
insl
push
mov
jo
cmp
mov
adc
mov
xchg
sub
push
fwait
pusha
mov
test
ret
sbb
sbb
in
sbb
cmp
aam
std
xor
push
mov
mov
inc
xchg
push
sbb
lcall
mov
mov
lods
jle
data16
cmpsl
int
mov
loop
push
xlat
mov
ud0
xor
aad
cmp
repz
inc
jns
sar
add
das
pop
roll
or
push
cltd
lcall
jle
cmc
jp
xchg
mov
mov
cwtl
add
add
icebp
aam
out
jo
pop
push
js
rcr
aam
jmp
mov
negl
jo
inc
push
lods
mov
push
xor
aam
sub
rolb
pop
mov
mov
in
icebp
mov
jmp
sub
jecxz
sahf
iret
xor
into
mov
cmpsl
add
fld
es
and
mov
arpl
jmp
xchg
mov
sbb
mulb
push
clc
pop
std
mov
push
dec
in
dec
outsb
inc
push
adc
out
into
lock
mov
cwtl
dec
lds
dec
mov
sub
pushf
mov
push
inc
lahf
in
and
xchg
adc
ficoms
and
or
push
add
jo
adc
inc
mov
push
idiv
inc
hlt
pop
sbb
inc
cmp
test
ffreep
sub
sbb
jnp
sub
leave
leave
and
inc
cmpsl
or
xchg
lret
cmpsl
cmpsb
mov
xchg
dec
cli
inc
cld
lcall
push
or
jmp
adc
mov
aam
imul
movsl
stos
jne
cmp
and
inc
mov
xor
xor
mov
push
xchg
jae
add
jno
cltd
sbb
sub
sub
rol
or
ljmp
jne
bound
in
js
pop
dec
xor
loope
out
adc
fdivp
add
lahf
xchg
add
je
mov
xor
add
das
mov
je
mov
xor
insl
loope
nop
xchg
or
lds
inc
jo
repnz
jmp
cmp
xor
repz
cmpsl
in
and
pop
inc
popa
push
ljmp
in
push
jnp
mov
pop
lods
aaa
imul
mov
push
xchg
scas
jg
or
loope
or
lds
sarl
push
cmpsb
ss
loope
aas
lret
test
xchg
mov
push
pusha
clc
xchg
mov
inc
rcr
fcom
ja
or
mov
mov
pop
inc
mov
es
je
jno
mov
sbb
xchg
push
push
lret
nop
add
mov
das
sub
jae
test
arpl
mov
pusha
outsb
lds
outsl
add
aam
or
movsb
scas
jb
ja
sub
outsl
mov
cmp
out
jg
cld
lods
add
push
sbb
mov
dec
sub
loope
xor
cmc
pop
push
and
pop
sub
mov
dec
inc
subl
mov
sub
mov
mov
popa
cwtl
pop
push
sub
jbe
push
cmp
popa
lds
add
out
data16
sub
push
in
mov
ja
add
mov
ljmp
mov
mov
xor
popa
mov
jno
jl
mov
xor
sbb
fwait
adc
in
sbb
mov
mov
fildll
push
mov
dec
loope
iret
jle
test
inc
andb
shl
jbe
pusha
inc
jg
xor
inc
mov
shr
ja
sub
jecxz
xor
xor
lret
addr16
lret
cmpsb
ss
mov
inc
frstor
cli
scas
nop
push
inc
dec
sti
std
dec
js
lock
pop
ret
dec
ret
mov
lea
xlat
mov
addb
lahf
call
inc
push
push
lea
leave
mov
loop
xor
mov
daa
call
fldenvs
pop
sbb
jge
cmp
inc
mov
bound
dec
and
inc
xor
int
pop
jecxz
mov
push
je
fidivrl
jle
ret
ja
push
ret
mov
xor
and
sbb
adc
add
cmp
mov
push
jge
pushf
decl
mov
and
iret
mov
jbe
inc
or
daa
mov
fisttpl
and
xor
xchg
loope
adcl
idivl
popa
je
xor
inc
loope
shrb
push
inc
fwait
adc
test
sbb
mov
pushf
out
shll
xchg
jbe
lds
or
jge
mov
xor
mov
push
lret
out
add
mov
inc
flds
fldenv
outsl
je
fistpl
int
inc
clc
dec
or
loope
inc
xchg
lahf
cli
mov
mov
fs
adc
push
pop
fldt
rcl
push
push
ja
xor
pop
push
push
push
and
sbb
fwait
in
fcoml
dec
pop
push
and
and
adc
xor
out
cmpsl
pop
data16
imul
pop
mov
lock
inc
dec
mov
shl
clc
out
bound
movsb
hlt
xchg
or
and
scas
dec
xchg
adc
sbb
mov
add
lds
mov
repz
divb
cs
adc
int
mov
inc
adc
jl
fistps
jne
aaa
das
mov
push
xor
shlb
rorb
js
loop
cltd
mov
cmp
ds
daa
sahf
jae
jno
in
or
test
push
xchg
sub
sub
xchg
stc
xchg
clc
stc
mov
xchg
and
sub
or
cs
fiadds
add
add
mov
add
xchg
ja
enter
sbb
pop
ds
test
insl
jb
xchg
test
cmp
fst
hlt
xchg
sub
push
in
out
dec
mov
sub
jp
mov
in
mov
scas
pop
inc
fsub
xchg
push
rcrb
sbb
jae
pushf
and
pusha
pushf
int
inc
out
rorl
pop
inc
mov
and
dec
cmp
les
and
test
adc
iret
mov
aaa
lcall
push
jecxz
int
xchg
movsl
or
in
inc
cs
mov
adc
xor
mov
flds
fmull
xor
jno
loope
sub
into
pop
fstpl
xor
mov
imul
ficomps
cmp
in
bound
cmpsb
scas
ret
das
bound
lock
xor
daa
jno
pop
mov
mov
ja
std
and
rorl
shl
xor
push
adc
sub
add
andl
mov
fidivrl
sbbl
repnz
insb
out
mov
ljmp
push
mov
jb
adc
jne
dec
sbb
cld
inc
fwait
xchg
jo
sahf
aad
and
out
xchg
es
jge
daa
inc
pop
pop
sahf
imulb
fistpll
mov
in
add
add
push
das
sub
out
mov
mov
aad
and
or
jae
mov
mov
pop
imul
xchg
and
test
popf
jns
fwait
movsl
movsl
aad
test
fnsave
daa
push
popa
mov
test
sub
lods
inc
insl
adc
notb
jbe
imul
fs
push
jne
or
mov
fwait
inc
cld
das
pop
mov
xchg
sub
add
mov
shrl
jmp
xchg
sahf
mov
or
and
mov
push
dec
dec
push
or
xchg
cmp
push
sbb
mov
aam
loopne
nop
sar
cmp
sbb
imul
push
dec
jb
jmp
sub
addr16
mov
aaa
cli
leave
lahf
mov
xor
scas
xchg
das
adc
or
dec
ret
std
scas
jge
or
test
xchg
adc
fldt
inc
insb
xchg
sbb
push
and
push
cmc
mov
push
insl
mov
pusha
mov
xor
psubd
cmp
pusha
or
inc
ret
dec
pop
das
sbb
mov
out
mov
loopne
test
pop
mov
xchg
add
xor
stos
xorl
popf
jns
loopne
jae
in
pusha
ljmp
adc
cmp
addl
mov
pop
dec
movsl
or
adc
rep
test
jmp
rorb
enter
or
repz
xor
xchg
xchg
xor
and
dec
cmp
out
push
and
out
aad
jb
dec
aas
lea
add
dec
mov
dec
aam
mov
or
adc
lods
xlat
out
dec
push
aas
sub
mov
xchg
sbb
jnp
ljmpw
pop
mov
sub
xchg
shl
cmp
cmp
push
rol
sti
dec
cs
add
sub
pushl
fwait
cmp
cld
enter
popf
push
or
mov
xor
outsl
lahf
cltd
into
cmp
loop
imul
scas
and
jp
loope
aad
mov
ret
fisttps
lods
xor
cmovg
addr16
mov
push
add
xor
pop
sub
dec
push
dec
xor
in
ja
xchg
xchg
pop
cs
cld
scas
out
mov
and
lods
xchg
cmp
mov
stos
fs
pop
std
jnp
mov
sbb
ret
sbb
dec
movsl
insl
sbb
pop
cli
jno
or
pop
or
pop
out
rol
cmp
bound
mov
test
add
cmc
xchg
jmp
inc
jnp
or
mov
arpl
sub
push
xchg
test
loope
cwtl
mov
add
pop
push
mov
into
push
jb
push
pusha
mov
inc
addr16
sti
and
sbb
nop
int3
aam
std
cltd
aad
ret
xchg
xchg
shll
sbb
dec
and
ja
fbstp
and
mov
inc
sbb
imul
clc
je
add
sbb
popf
iret
movsl
add
repz
sti
daa
adc
shll
daa
call
lds
sti
xchg
and
insb
push
pop
xchg
jnp
dec
sub
test
ret
lret
dec
test
sar
jge
popf
mov
xor
movsb
pop
cmpsb
mov
out
aam
aad
movsl
sub
test
sbbl
cmp
xor
aad
push
out
in
outsl
mov
cld
in
mov
mov
js
in
ds
stc
sbb
add
int3
stos
mov
sbb
outsl
aam
add
jg
jno
fs
rcll
subl
int
xlat
iret
loopne
in
sar
hlt
outsb
cmp
das
xchg
aas
dec
cs
ljmp
rorl
fistps
loope
je
push
sbb
cmp
xchg
push
xor
data16
mov
xchg
xor
rcl
test
ret
xchg
dec
into
ds
or
icebp
shlb
xchg
fnstenv
mov
clc
repnz
xor
push
and
mov
push
adc
mov
cs
call
sub
xchg
jg
sub
jle
add
jmp
stc
mov
cmc
aas
bound
push
mov
push
fsts
inc
dec
jecxz
xor
push
cmp
jmp
mov
xchg
mov
testb
sub
jb
divl
adc
push
mov
xor
jno
dec
add
xlat
pop
scas
mov
push
cmpsl
push
repz
js
add
pop
in
decb
add
cmp
cmp
push
scas
rclb
push
ja
cmpsb
jle
mov
data16
push
add
inc
es
outsb
int3
xchg
sti
sbb
jo
or
leave
add
sahf
add
jl
rorl
aam
ds
and
pushf
inc
pushf
pop
fbstp
and
adc
inc
and
xor
cli
xchg
orl
cmp
adc
xchg
and
or
adc
xchg
and
aad
mov
xor
sarb
dec
xadd
pop
pop
lret
shl
frstor
fisttps
cwtl
cmp
inc
in
js
outsb
dec
mov
inc
push
pop
ss
pop
or
and
dec
and
push
mov
dec
xchg
inc
cwtl
or
loope
mov
xchg
lahf
or
enter
int3
mov
pop
inc
jne
iret
sub
stos
xchg
cmp
sub
dec
lret
xor
int3
cmp
sbb
popa
in
mov
stos
add
mov
add
arpl
imull
sub
adc
lock
scas
mov
mov
cmp
dec
adc
int
xor
xor
imul
bound
imul
and
xor
jo
insl
jbe
sbb
mov
jnp
sub
xlat
lcall
cmpsl
mov
jge
mov
jno
jae
push
cmp
pusha
lods
push
inc
lock
insb
fwait
loopne
pop
adc
leave
subl
mov
xchg
xor
movsl
mov
sbb
rclb
jmp
rorb
add
flds
xor
jecxz
movsb
adc
lahf
pop
aam
cmc
movsb
mov
sbb
cmp
sbb
adc
adc
pop
int
mov
fnstenv
jb
add
jle
push
into
dec
es
dec
mov
pop
mov
cmp
cmpsl
ret
ss
xchg
aad
lods
mov
add
cmpsb
dec
dec
data16
xor
addl
out
bound
mov
cwtl
and
repz
and
lahf
out
cmp
add
ljmp
pop
cld
pop
ret
dec
cmp
pop
xchg
gs
adc
xchg
mov
mov
aad
lahf
shlb
or
fiaddl
out
mov
pop
ja
push
jno
nop
out
push
dec
pusha
ss
push
and
jno
insb
into
jmp
push
sbb
cld
mov
adc
sbb
jns
xchg
sbb
into
ljmp
push
mov
int
mov
and
fists
add
jbe
xor
outsb
add
movsl
xor
add
xchg
dec
xchg
sub
adc
fcmovu
cltd
andb
imul
cmp
dec
jle
lahf
popf
push
add
enter
xchg
inc
stc
das
cli
lret
sbb
in
hlt
mov
into
popa
mov
gs
cmp
les
dec
and
mov
data16
test
jnp
sbb
dec
out
push
sub
mov
xchg
std
sub
pushf
mov
les
js
xor
add
xchg
shrl
insb
sbb
sbb
add
ja
jno
inc
incb
pop
imul
insb
mov
dec
shl
dec
jge
roll
pop
js
rcll
movsl
mov
add
paddsw
cli
pop
pop
pop
cmpsb
call
and
adc
xchg
in
pop
pop
cld
pop
mov
jne
and
push
pop
in
inc
xor
inc
fidivl
sbb
jne
ret
adcb
and
out
pop
addl
sbb
pusha
js
mov
xor
das
mov
adc
and
aaa
inc
cld
xchg
ds
fstpt
sub
sub
or
fcomp
xchg
pop
outsl
add
inc
mov
push
dec
adc
clc
cmpsb
jecxz
loopne
shrl
push
nop
popf
sbb
sbb
dec
iret
outsb
and
stos
imul
xchg
jp
enter
jmp
xchg
jmp
enter
push
sbb
and
lea
pusha
loopne
xchg
nop
lcall
xchg
icebp
or
mov
mov
xor
pop
popf
xchg
xchg
int3
jnp
fisttpll
mov
pop
insl
scas
or
push
push
mov
add
cwtl
int3
mov
mov
mov
shlb
xor
xor
add
sahf
dec
add
outsb
mov
loopne
movsl
out
push
xchg
and
lock
fnstenv
test
push
mov
and
jg,pn
and
imul
xor
xchg
bound
stos
mov
and
inc
fimull
sub
jns
es
push
cwtd
cltd
add
movsb
into
and
pop
das
jno
addr16
test
add
clc
rcrl
adc
pop
std
out
and
dec
dec
inc
leave
out
xor
pop
daa
add
dec
cmp
mov
mov
sbb
sub
pop
xchg
push
push
stos
add
add
jp
pushf
xchg
fcmove
sub
ret
or
pop
insb
fimuls
bound
inc
xchg
cli
adc
fldenv
ret
or
fmuls
xchg
mov
lds
add
iret
push
hlt
ss
mov
dec
jg
pop
rclb
push
sti
and
mov
inc
nop
cld
stc
fstpl
inc
or
ja
rclb
add
aas
jne
mov
mov
fcoml
jecxz
push
or
scas
jmp
add
xchg
pop
xor
sub
sbb
lods
add
xor
aad
pop
xor
rorb
xchg
mov
aad
push
inc
imul
fstps
jo
sub
in
or
into
push
sbb
and
nop
std
sbb
leave
call
mov
or
je
sbb
iret
addl
push
xor
loop
push
lds
outsl
addr16
mov
pop
inc
or
addb
adc
xchg
mov
push
xlat
cwtl
jl
sub
push
test
pop
jb
jae
mov
jne
shr
dec
or
mov
lea
dec
jp
pop
loop
add
push
addr16
add
sub
jne
rclb
movsb
bound
ja
jae
mov
lods
repz
lock
out
mov
test
repnz
push
jge
fidivs
cmp
daa
pop
movsl
out
push
jge
into
fimull
sub
sub
punpckhbw
sbb
in
push
push
mov
out
sbb
jp
testb
sbb
sub
sub
pop
fmull
idivl
mov
sub
push
add
test
xor
bnd
mov
repnz
data16
clc
fsubrl
mov
in
js
dec
out
int
call
outsl
test
std
aas
pop
fnstcw
jns
fstpt
popl
mov
adc
inc
mov
cmp
sub
dec
lea
xorl
xchg
cli
aam
mov
cmp
je
and
les
mov
jmp
xchg
push
or
sbb
or
ret
sbb
sysenter
adc
push
sub
xor
ret
xor
mov
movsl
inc
outsl
jp
mov
xor
xchg
jbe
cmp
insl
inc
adc
cmpsl
push
pop
and
test
in
mov
ret
sbb
pusha
jmp
inc
sbb
minps
jne
jb
fldl2e
xor
xchg
or
outsl
pop
cmp
pop
xchg
inc
repnz
scas
movsb
nop
lret
shll
aam
xlat
leave
lock
mov
cmp
outsb
out
loop
sti
adc
xor
bound
lods
daa
mov
pop
lcall
icebp
clc
fsubl
sbb
test
data16
mov
std
scas
fistpl
fiaddl
cmc
pop
dec
orb
add
leave
push
xchg
aam
jnp
or
and
push
dec
sti
test
cmpsl
fistps
dec
arpl
push
cld
or
int
popf
mov
dec
xor
jecxz
xchg
out
cli
mov
outsl
in
pop
and
ljmp
stc
push
out
ds
cwtl
mov
out
lcall
mov
hlt
push
shll
jns
or
call
mov
push
aaa
icebp
leave
shlb
arpl
popa
mov
dec
push
cld
gs
cld
fldenv
add
out
jecxz
mov
dec
hlt
sti
pop
jp
and
out
push
mov
fstl
sub
insb
xchg
in
pop
das
mov
cmpsb
cmp
lret
aad
mov
int3
lcall
sbbl
adc
or
mov
mov
cwtl
outsl
out
dec
enter
cmc
pop
imulb
pop
add
iret
xchg
lret
mov
cmp
daa
sub
cmp
jns
jo
mov
mov
mov
or
fsubrl
aam
xor
and
push
pop
push
xchg
andl
mov
push
mov
jmp
xchg
push
mov
inc
mul
cmp
shr
mov
add
ja
lock
daa
cld
xchg
pop
arpl
aam
dec
fbstp
add
dec
inc
sti
movsl
out
mov
rcrb
cltd
mov
add
or
xchg
push
cmpsb
test
testl
mov
mov
test
mov
mov
iret
imul
pushf
inc
cmp
inc
cli
dec
jp
test
adc
dec
xor
cwtl
pop
lcall
hlt
int3
mov
lahf
sahf
adc
mov
xchg
xchg
jg
jae
sar
test
repnz
mov
fsubl
mov
scas
push
imul
mov
pop
pop
hlt
in
mov
sbbl
jno
stc
clc
test
xchg
das
cltd
cli
adc
jmp
lock
movsb
push
push
or
jns
lds
ret
adcb
inc
xchg
and
ret
push
and
add
fwait
v4fmaddps
add
push
pop
test
push
mov
arpl
cmpsb
andl
jg
ss
mov
in
jb
dec
and
scas
jns
dec
mov
jbe
out
popf
xchg
cmp
fimull
sub
or
flds
mov
test
mov
or
sbb
or
in
jecxz
fdivl
cmpsl
outsb
inc
sbb
js
inc
add
ret
and
mov
scas
xchg
xor
push
movsb
lahf
addr16
xchg
mov
or
sub
clc
repz
sub
mov
jbe
mov
nop
pop
push
jbe
fnsave
mov
mov
mov
mov
xchg
push
jbe
cmpsb
sub
jge
push
inc
es
mov
mov
dec
imul
loop
mov
xor
mov
sbb
stc
push
subl
popf
cmp
add
dec
dec
inc
ret
or
push
repz
int
inc
rcrb
lods
mov
cli
sbb
pop
pop
dec
or
ret
scas
xor
or
ljmp
and
add
push
or
ja
rol
sbb
cmp
sbb
mov
jno
push
in
push
aaa
dec
aas
xor
test
addr16
or
cs
dec
sub
into
imul
mov
ds
mov
xchg
addr16
push
jmp
mov
cmp
sbb
aaa
aaa
arpl
jl
hlt
int3
xchg
sub
push
ret
jns
mov
lods
mov
jge
movsl
lds
jmp
inc
int
inc
mov
das
ficomps
push
dec
icebp
shlb
lock
in
rcrl
daa
or
xlat
lea
lock
mov
pop
cmpsb
inc
xchg
or
arpl
mov
adc
cwtl
popf
sub
add
mov
xchg
or
jno
push
cmp
popa
dec
jbe
and
pop
es
xchg
movsb
insl
or
and
cmpb
push
sar
dec
push
mov
cmp
sti
lahf
or
jecxz
scas
enter
stos
dec
xchg
pusha
push
js
ljmp
and
scas
cmp
adc
repnz
xchg
cltd
jnp
fildll
insb
pop
ljmp
pop
lcall
ret
inc
push
mov
fiadds
or
out
movsb
mov
jecxz
jp
pusha
sti
adc
push
ss
test
jb
xchg
pop
stc
lds
pop
orl
cmpsl
mov
mov
xchg
jg
cwtl
lret
cmpsb
push
lret
jno
sub
int
inc
inc
lds
mov
mov
bound
negl
lea
sub
int
fbld
iret
shr
negl
mov
rcl
into
orl
mov
scas
lret
mov
out
push
mov
dec
and
and
fcmovb
mov
dec
cmpsb
jne
test
aad
jbe
ss
sub
in
mov
stos
lds
movsl
fld
lret
stos
int3
xor
push
jb
pusha
test
stos
xchg
xor
lods
fisttpll
mov
pushf
xor
cmp
add
aad
addr16
add
xchg
out
mov
or
push
xrelease
jmp
ret
clc
out
pusha
push
scas
icebp
add
aam
push
stos
mov
push
rorb
fsubl
mov
sub
shl
jb
jp
sbbb
mov
xor
aad
dec
inc
out
scas
push
scas
call
lea
xchg
cmp
test
fimull
lret
aad
cmp
mov
cmp
test
hlt
ror
adc
mov
push
loope
sub
inc
mov
movsb
fidivl
pop
mov
mov
xor
popa
jne
cmp
mov
dec
mov
sbb
rorb
jmp
cwtl
fldl
mov
jge
or
in
push
push
test
out
outsl
enter
cmc
ljmp
push
daa
mov
pop
lods
sbb
jb
inc
popa
enter
aas
fisttps
movsb
addr16
bswap
mov
push
popa
mov
add
or
cltd
or
adc
or
movsl
loope
mov
adc
push
push
pop
add
cmpsb
mov
push
jae
stos
je
repnz
cmpsb
aad
and
or
fiaddl
pop
loop
mov
cmp
mov
push
in
dec
cmp
lods
pop
cmpsl
xchg
fistps
popl
adc
shll
push
fs
popa
out
xchg
sub
adc
lret
aam
shlb
add
loop
jp
mov
adc
out
repz
aaa
dec
ret
inc
int3
cmp
sbbl
mov
mov
popf
loope
adc
adc
inc
mov
test
mov
xchg
add
pop
jecxz
testb
pop
clc
les
jle
outsl
adc
pop
lcall
pop
cmp
xchg
lcall
or
push
pop
je
les
dec
in
push
cli
pop
imul
mov
jne
sahf
cmpsl
ficoml
jecxz
out
out
sub
sub
test
xor
dec
cmpl
and
sbbl
shr
sbb
lret
and
imul
sbb
add
in
push
addl
push
push
add
movsl
pop
ds
mov
inc
mov
testb
mov
xchg
mov
sbb
fwait
xchg
data16
and
nop
enter
scas
dec
lret
push
call
xor
shrb
push
and
jmp
addr16
add
inc
orl
popa
in
xor
mov
pop
test
xor
js
cld
push
lea
in
jne
sub
mov
sbb
je
gs
xchg
mov
pop
rcll
add
add
add
addb
xor
ljmp
sti
mov
imul
xchg
popf
lahf
repz
or
xchg
jmp
rcrb
or
jl
dec
mov
jp
dec
or
inc
stos
fistl
jge
jb
dec
and
popf
xchg
jg
jp
push
jb
dec
pop
sbbb
push
jns
mov
int3
jl
xor
es
xchg
shlb
pop
test
dec
jno
outsl
jae
outsb
fldenv
data16
dec
and
pop
test
stc
push
outsb
dec
jle
dec
bound
jl
lods
ja
loop
dec
push
mov
push
mov
in
dec
push
pop
aas
lahf
cli
mov
mov
mov
sbb
lods
pusha
mov
mulb
xchg
jge
jg
mov
pushf
fneni(8087
bound
xor
cmp
sbb
and
gs
and
call
inc
or
jbe
xchg
push
mov
cld
out
rorl
pop
sbb
insl
push
call
mov
xor
sbb
sahf
ret
cli
xor
outsl
jg
faddl
mov
dec
mov
movsb
xor
xchg
cs
lock
negb
hlt
and
call
xlat
adcb
iret
push
jae
inc
xlat
arpl
xchg
cld
adc
inc
sub
adc
sbb
inc
xor
loope
fwait
and
add
cwtl
xchg
pushf
pop
test
and
aaa
not
pop
jp
imul
sub
or
aam
shl
sub
mov
xor
sbb
sbb
sbbb
and
sbbl
les
clc
mov
jle
lock
add
pop
shrb
jno
xchg
orl
add
adc
shrl
std
mov
adc
loopne
imul
jae
aad
lret
cmc
arpl
mov
lcall
stc
mov
push
cmp
or
lret
cmp
inc
add
cs
scas
dec
pop
push
sub
gs
sub
cltd
push
xchg
add
xlat
add
cmc
fwait
inc
cwtl
lahf
pop
mov
icebp
push
das
loop
dec
pushf
jno
dec
lds
inc
add
xor
xchg
data16
or
mov
sub
jno
mov
inc
add
lahf
sub
mov
test
mov
mov
stc
add
sub
into
out
mov
repz
stc
in
in
xchg
js
fidivrs
sub
aas
rcr
dec
ja
xchg
out
ja
mov
pop
mov
movsl
mov
xor
jne,pn
imul
hlt
scas
inc
je
loope
inc
test
and
jecxz
push
hlt
mov
fdivp
cmpsl
inc
mov
jp
push
adc
or
ljmp
cmpl
fstp
pop
mov
les
inc
pushf
dec
jne
inc
movsl
fwait
mov
jns
sbb
mov
push
test
pop
inc
pusha
loopne
dec
ret
subl
jmp
mov
jecxz
lcall
mov
test
repnz
add
jp
outsl
scas
mov
mov
cli
xor
loop
mov
xchg
xchg
inc
cmp
push
ret
mov
pusha
test
inc
pop
adc
inc
imul
fstpl
jge
add
fs
je
inc
das
rcrl
pop
fstps
aas
add
mov
insl
push
pop
jo
and
in
and
xchg
and
cmpsl
pushf
mov
push
add
mov
push
and
pop
sbb
pop
shll
mov
subb
stc
fcomip
enter
clc
mov
aaa
int
fcompl
pop
sbb
test
sbb
add
out
xchg
leave
push
jns
sbb
and
insl
jecxz
pavgw
and
clc
sbb
cwtl
mov
nop
inc
mov
mov
jb
stc
and
rorl
js
lahf
insl
pop
pop
rolb
inc
jle
mov
lret
inc
mov
aaa
sbb
sbb
aad
pop
pop
xor
jg
int3
push
out
mov
adc
cmp
mov
xor
test
jge
push
negl
xchg
fdivr
inc
inc
or
sub
or
cli
pmaxsw
sti
icebp
jg
aad
lret
aad
xlat
loopne
jbe
das
pop
mov
sbb
neg
push
ja
sbb
int3
fs
sub
sarb
jecxz
cmp
imul
inc
loopne
lea
out
lock
lods
cltd
jecxz
and
out
push
popf
cmc
mov
and
push
mov
in
sbb
cmpsl
jne
fistpll
sbb
out
cmpsb
mov
xchg
cltd
mov
popf
dec
dec
add
cld
mov
inc
and
push
shrl
push
jae
pop
insl
inc
xchg
xchg
and
lahf
add
ret
xor
dec
adc
dec
dec
shrl
push
fdivl
inc
sarb
cs
lods
jo
xchg
ja
mov
pop
rcr
xor
in
lea
mov
pop
fstpl
stc
xor
jnp
dec
cmpsl
sbb
lods
inc
mov
loopne
dec
push
mov
fisubs
dec
or
jg
popf
cmp
rcr
mov
in
iret
sub
and
jge
sub
loopne
sahf
sbb
ret
mov
jmp
fcmovb
mov
and
jns
ljmp
and
in
add
loopne
insb
xchg
in
adc
loopne
loopne
mov
inc
add
mov
and
xor
add
dec
pop
add
and
mov
fwait
and
fstpt
outsb
pop
jne
movsl
sahf
repz
pop
and
mov
push
sub
cld
adc
mov
mov
and
and
jle
push
xchg
sbb
dec
sti
and
jmp
repz
mov
cmp
mov
xor
sbb
push
pusha
repz
mov
mov
push
pop
mov
dec
lcall
push
add
out
inc
scas
dec
dec
add
lahf
aad
es
jbe
repz
ret
outsl
sbb
ficoms
or
xchg
cmp
sbb
dec
lds
out
clc
mov
je
adc
ret
add
dec
pop
popa
or
and
mov
push
push
mov
lods
ds
mov
mov
stos
rorl
in
cmc
adc
adc
loop
push
insb
mov
outsb
jmp
test
pusha
out
add
pushf
mov
mov
inc
jmp
cmp
test
shlb
cmp
push
rol
push
jl
inc
xchg
jne
mov
pop
addr16
sar
fistpll
cmp
xchg
daa
sbbl
fs
mov
sbbl
rcl
addr16
bnd
arpl
subb
dec
mov
mov
lret
mov
mov
adcb
sub
fmuls
js
andb
pushf
or
les
xchg
xor
sahf
jg
or
loop
insb
jno
sbb
int3
cltd
or
cmp
push
jne
dec
jg
or
push
or
stos
fnstsw
fucom
jle
mov
aaa
repnz
cmc
push
mov
xchg
popf
sbb
repz
mov
lods
stc
rcrl
cmp
imul
sbb
mov
cmpsb
movsl
sti
sbb
mov
adc
push
sub
pop
sbb
fwait
loop
push
xor
sbb
pop
sahf
xchg
sub
mov
lods
call
cmpsl
cwtl
push
arpl
mov
gs
dec
xor
mov
stos
std
int3
dec
fnstcw
push
cmc
movsl
add
add
cmp
dec
or
loope
ret
sub
fwait
add
and
adcl
push
cmpl
movsb
pop
and
dec
lcall
stc
adc
and
cmp
jae
inc
popf
out
jnp
mulb
xor
xchg
mov
mov
jle
pop
call
mov
mov
jmp
out
aaa
lcall
movl
out
mov
sub
sub
test
es
inc
or
push
xor
dec
or
cmpsl
and
cmpsb
xchg
daa
sub
mov
call
out
add
xchg
popa
jmp
dec
adc
mov
or
pushf
mov
xchg
and
daa
repz
in
loopne
lods
leave
and
ja
sarl
add
shrb
arpl
shl
fldl
data16
add
cltd
mov
xchg
out
cltd
jae
and
arpl
test
xor
xlat
vmread
mov
sbb
and
data16
lods
mov
int3
jg
dec
pushf
or
aaa
out
xchg
mov
and
xor
and
mov
mov
dec
cmp
inc
pusha
mov
mov
mov
push
mov
sbb
fldt
push
aas
cmp
pop
sbb
addr16
call
jne
in
xlat
mov
sbb
xchg
imul
stc
inc
aaa
fldenv
cmpsb
xchg
cmc
in
icebp
aam
sbb
jno
mov
rclb
loop
ret
adc
leave
fwait
aas
mov
cvttps2pi
loope
lock
inc
rolb
lock
imulw
movsb
bound
ret
sub
inc
pop
sbb
mov
mov
mov
push
xchg
xchg
xchg
out
je
push
xchg
lret
ljmp
out
xor
push
push
es
mov
pop
and
mov
inc
arpl
popa
push
dec
fimull
scas
cmp
test
loope
xchg
inc
call
sbb
xor
jo
xor
addb
push
int
jo
dec
ljmp
aas
add
dec
addr16
inc
stos
mov
hlt
cmpsl
sbb
sbb
subb
test
pop
sub
clc
push
call
jecxz
lds
and
pusha
mov
dec
adc
scas
xor
or
lret
test
ret
jg
out
mov
addr16
dec
adc
pushf
xor
sbb
test
mov
aas
mov
jnp
hlt
or
imul
repz
loop
std
or
mov
pop
pop
adc
leave
aaa
pop
enter
repnz
or
adc
mov
jl
add
shll
jae
push
add
pop
es
or
fsubr
sbb
mov
outsl
js
stc
aad
xchg
pop
push
adc
jle
cli
sub
lds
dec
inc
xchg
jno
sbb
lcall
push
repnz
jle
addb
inc
ret
insb
push
inc
cmp
pop
xlat
mov
outsl
test
loopne
fcoml
xor
cwtl
or
pop
icebp
fisttpll
enter
in
call
or
mov
sbb
rclb
mov
fcmovnb
int3
aaa
insl
xchg
daa
push
fwait
inc
pop
mov
loope
push
jnp
jg
dec
push
xchg
adc
stc
dec
cld
lods
rol
popa
cld
adc
or
pop
ljmp
outsb
xor
in
aad
push
cmpsb
test
clc
mov
ret
mov
ror
cs
mov
pop
and
aas
mulb
shll
mov
mov
scas
pushf
inc
loop
sub
movsb
mov
pop
enter
stc
push
add
or
fst
mov
adc
mov
cmp
adc
xor
clc
cmp
add
push
ret
mov
gs
icebp
test
mov
lods
add
xchg
jnp
push
ds
mov
sti
negb
cmp
cmc
xchg
testb
or
jl
cwtl
jo
inc
jns
pop
cmp
mov
aaa
fnsave
push
popa
sub
mov
loope
inc
int
and
pushf
je
call
sbb
stc
push
and
incl
pop
or
fdivrs
and
xor
out
repz
int3
clc
rclb
insl
leave
mov
pop
bound
lea
push
pop
or
xor
sbb
sub
out
int3
jmp
rolb
dec
adc
aas
dec
add
stos
mov
fistl
cmp
lcall
pop
in
das
int
dec
inc
push
scas
mov
add
cmpsb
cmc
jmp
jb
fstpl
add
sbb
bound
dec
and
into
xchg
sub
rolb
cmc
cmpsb
inc
adc
lea
pop
movsb
movsl
push
xor
push
mov
and
inc
movsl
add
dec
sbb
pop
push
daa
mov
stc
push
lcallw
or
data16
pop
adcb
inc
out
mov
das
call
sbb
pop
mov
bound
insl
into
out
cld
mov
add
mov
outsl
xchg
nop
insb
repz
mov
loopne
out
test
dec
pop
xor
cmp
ja
data16
xor
mov
mov
jno
adc
pop
sarl
jo
cld
aaa
mov
inc
pusha
dec
sahf
imul
pop
int3
shl
adc
nop
call
mov
jg
loopne
lea
cmpsb
loop
mov
in
aaa
add
xchg
pop
loop
popa
ds
cwtl
in
cwtl
xor
stc
and
outsl
cmp
jbe
push
out
mov
adc
mov
xchg
adcb
data16
push
jb
mov
and
add
lods
xor
inc
fldl2e
adc
lcall
pop
xorb
xchg
movsb
rcrb
mov
mov
mov
sbb
add
dec
or
dec
out
out
mov
insl
dec
jge
js
shrl
lods
mov
data16
inc
cs
dec
sbb
push
ficoms
fnstcw
jmp
movsb
das
cmp
idivb
sbb
or
sbb
fs
mov
mov
aam
mov
ja
xchg
or
push
ss
jmp
loop
lret
push
cmp
js
adc
or
push
cld
sti
and
pushl
adc
inc
out
mov
outsl
xchg
sti
push
in
cmp
icebp
scas
add
scas
dec
fsubs
xchg
loopne
cwtl
xor
test
pop
jg
xor
mov
sub
lea
jbe
adc
std
movsb
subb
push
in
repz
pusha
les
lock
mov
iret
outsl
and
push
jne
push
into
xchg
imulb
outsl
sti
xchg
aam
dec
in
lea
outsl
jae
bound
ss
sbb
jg
cmp
jge
mov
mov
ficompl
xchg
and
jmp
rcll
sbb
mov
call
mov
inc
popa
cltd
mov
ja
mov
icebp
test
mov
xchg
pop
mov
xor
and
adc
or
add
out
fmuls
mov
les
testl
xor
xchg
xlat
and
mov
out
sbb
clc
sub
pop
int3
add
xlat
or
loopne
jecxz
adc
jns
rorb
shrb
fstl
push
or
add
mov
es
dec
aam
mov
test
movsl
xchg
ja
adc
cmpsb
sar
xor
dec
cmpsl
or
scas
add
out
fcompl
jb
xor
fldl
add
es
mov
push
adc
loop
out
mov
and
mov
pop
mov
addr16
out
mov
fwait
inc
lods
and
fldl
jns
out
mov
lret
mov
outsl
mov
icebp
clc
sbb
jae
sbb
push
add
pop
mov
pop
push
repz
cld
xlat
xor
sub
sbb
mov
jne
insl
std
mov
rorb
rclb
ret
outsl
pusha
lea
adc
push
scas
mov
push
dec
shlb
mov
mov
hlt
pop
leave
pop
dec
xchg
add
add
jno
and
cmp
sub
push
or
cs
fists
cmp
into
lds
mov
fwait
push
pop
pop
mov
loop
add
xlat
jns
inc
jle
subb
pop
sbb
ljmp
loop
mov
ljmp
xor
pop
call
aaa
cmovle
xor
dec
xchg
mov
icebp
test
pop
loopne
jns
dec
outsb
addr16
jns
mov
inc
xchg
bound
pop
push
mov
aas
scas
stos
dec
mov
push
js
inc
fldl
js
xor
jmp
and
jmp
jb
arpl
lret
nop
jle
cli
jb
pop
jecxz
aad
mov
or
pop
sbb
and
test
sub
jno
jbe
mov
cmp
mov
pop
xchg
xchg
pop
rcrb
push
js
adc
cltd
hlt
sti
and
mov
mov
jno
xchg
mov
or
sbb
test
pusha
mov
mov
jo
cmp
fldl
ss
shl
sti
outsl
fidivl
rcr
lret
cmp
pushf
stos
mov
and
xor
xchg
jmp
cmp
lock
xor
mov
and
push
or
adc
xchg
push
outsl
pop
out
and
out
mov
rcrb
aad
push
leave
movsb
hlt
movsl
stos
aas
jle
imul
fs
mov
into
fmul
movsl
lret
vpackuswb
jo
insb
sub
ja
mov
jae
adc
loope
das
sbb
pop
das
loope
out
xchg
inc
sub
dec
xchg
sub
sub
and
into
jp
add
fs
xchg
xor
mov
push
fidivrl
sub
fsubp
xor
adc
jmp
fsubrl
add
bound
adc
lahf
addb
cwtl
cwtl
outsl
cli
dec
push
and
adc
jb
mov
mov
cs
test
or
and
jnp
inc
lods
inc
stos
pop
pop
lods
ds
xor
xchg
cmp
cmp
mov
xor
int
in
aas
add
leave
ss
arpl
divb
aas
insl
xchg
jmp
mov
out
mov
jmp
inc
push
mov
clc
dec
insb
adc
xchg
leave
mov
mov
repz
int3
push
lock
rcrl
pop
lods
push
xchg
xchg
mov
popa
mov
mov
sbb
or
pop
enter
jmp
lret
lock
repnz
testl
out
les
inc
shl
movsl
or
fcom
cmp
in
pop
push
das
call
shrd
xchg
jge
adc
push
dec
pop
mov
mov
shlb
sahf
repz
lea
in
nop
mov
test
pop
cltd
dec
lahf
hlt
gs
scas
cmp
cltd
sub
ja
sbb
outsl
out
pop
pop
lods
test
fdivrl
sub
stos
mov
cltd
add
andb
add
ret
movsb
fsubs
jbe
movsb
push
dec
xchg
hlt
jnp
dec
and
push
xchg
dec
lods
icebp
xorl
pop
orb
cltd
in
xlat
aaa
fdivl
push
jmp
push
mov
lods
cs
xor
mov
insl
call
xchg
repnz
fnstenv
push
std
ss
cmp
mov
xchg
into
lcall
mov
push
pop
add
movsl
sub
jae
je
mov
pop
stos
scas
mov
mov
push
in
inc
sbb
leave
pushf
pop
ds
and
mov
cld
ds
add
push
ds
sub
inc
xchg
movsb
mov
sbb
cltd
inc
repnz
jge
scas
mov
in
adc
xor
fisttpll
inc
inc
mov
xchg
ret
pop
inc
leave
and
arpl
dec
fsubr
fiadds
int
adc
jae
lahf
scas
or
adcl
pop
jnp
push
loop
rorl
in
mov
test
sub
test
pusha
push
jbe
dec
dec
sbb
in
inc
mov
test
orl
cmp
fs
pop
adc
stos
fcmovbe
cmp
les
cmpsb
repz
pop
xchg
mov
and
and
xchg
loope
add
pop
sbb
xchg
out
movsb
lret
mov
daa
push
pop
xchg
xor
ret
jb
xlat
fdivl
test
pop
int3
jge
mov
shll
cmc
jg
fcoml
data16
movsb
push
push
inc
aas
les
inc
cmpl
add
js
lock
in
xchg
mov
fcoms
cmp
test
jae
sub
push
mov
addl
mov
cmp
sbb
lahf
rcrl
mov
cld
roll
sub
jno
in
iret
jl
iret
in
aad
push
aad
jne
sbb
repnz
addl
inc
lods
xor
push
xor
fucom
stos
push
cmc
pop
add
lea
mov
arpl
fcomip
out
fs
xor
pop
lods
mov
inc
orl
mov
loop
mov
cmp
add
mov
lods
repz
popa
xchg
gs
fwait
mov
popf
and
ds
ds
pop
xor
dec
pop
aam
xchg
or
out
mov
pop
add
repz
mov
mov
cmpsb
xlat
jns
int3
loope
pop
decb
and
ret
mov
inc
aam
adc
mov
lods
ljmp
xchg
stc
jo
idiv
nop
mov
pop
sbb
jge
or
fdivl
or
dec
jg
jp
jp
sub
pop
call
call
rol
mov
movups
mov
clc
aas
imul
scas
gs
and
sbb
inc
inc
rcrb
movsl
jp
add
lret
xor
cmp
fdivrp
sub
pop
inc
adc
imul
mov
fistpll
sbb
xchg
aaa
jmp
mov
mov
out
push
adc
inc
mov
xlat
fcoml
pop
lcall
or
lret
pop
daa
psllq
sarl
stos
addr16
loop
insb
in
jne
jb
mov
int3
addr16
sub
nop
mov
xchg
or
call
sub
leave
aaa
jecxz
repnz
inc
das
xchg
and
xlat
testl
xchg
and
cwtl
or
mov
dec
push
cmpsl
sahf
push
and
and
cmp
cwtl
subb
imul
add
mov
dec
xchg
xor
jl
xor
fidivrs
lock
pop
incb
cmp
cwtl
call
sbb
shll
cmp
dec
mov
cmpsl
ret
inc
idivl
fs
cmp
pushf
cmp
call
shll
pusha
dec
mov
push
sti
addb
pop
loope
mov
pushf
out
push
mov
sbb
push
popf
gs
repz
push
fildl
ja
mov
fcomi
sub
pop
mov
jmp
ds
pop
scas
xor
aad
fimuls
xchg
xor
andl
fmull
std
in
jmp
jg
ffree
test
and
mov
aas
shl
sarb
fdivs
adcb
ljmp
sbb
daa
jae
cmp
adc
cs
sub
lds
pop
int3
or
adc
jns
in
mov
add
cmp
pop
sbb
mov
jmp
jbe
icebp
imul
push
mov
add
ss
out
mov
lret
clc
repz
jle
movsl
mov
push
out
nop
loopne
cli
lahf
push
jp
push
pop
mov
push
push
scas
insl
popf
push
jae
xchg
cmp
mov
jg
or
jmp
stc
aad
fisttpl
inc
jo
dec
pop
inc
xlat
xchg
mov
repnz
cltd
xlat
inc
fcmovne
scas
mov
or
ss
rcrb
aam
mov
std
jnp
lods
mov
jge
ret
jp
lods
push
mov
inc
into
mov
nop
fsubrl
mov
js
pop
cmpsl
rorl
mov
push
fwait
stos
jns
frstor
je
and
and
lret
rcrb
cmp
data16
and
mov
jns
push
mov
imul
fcmovnu
jmp
and
jbe
cmp
sbbb
mov
lea
and
mov
or
mov
popa
mov
mov
imul
jbe
mov
cmc
mov
add
cmp
cmp
outsl
imul
movsl
xor
icebp
push
adc
dec
xchg
pop
mov
imul
call
sbb
fimuls
pop
cmp
dec
lea
test
mov
test
cld
std
mov
jge
xchg
into
and
lcallw
cmpsl
ret
and
push
rcrb
outsl
pop
mov
clc
adc
and
or
in
cmp
or
adc
cmp
pusha
es
inc
jne
sbb
adc
out
icebp
daa
dec
jne
fs
mov
xchg
sbb
adc
std
add
add
mov
push
out
jo
lret
mov
jecxz
ret
andl
inc
mov
mov
jns
in
adcl
aaa
fdivrs
jno
loopne
ja
lahf
mov
add
aad
sbb
inc
mov
pop
xchg
dec
negb
push
into
movsl
or
pop
testl
lds
out
loop
je
repnz
scas
lods
or
insb
test
push
dec
lahf
add
jno
mov
mov
cli
xor
cmp
sub
xchg
dec
lret
add
rcrl
sub
std
and
movsb
sub
xor
clc
mov
push
inc
sub
jno
inc
cmpsb
or
cs
bound
fiadds
popf
mov
xor
mov
cmc
pusha
shrl
mov
push
cmpsl
mov
repz
or
ljmp
mov
mov
fcompl
adc
repz
xor
pop
repnz
or
add
sbb
lods
jb
and
and
arpl
repnz
xor
cmpsb
xor
in
lock
stos
or
pushf
mov
lods
aam
into
xchg
xchg
mov
or
push
adc
out
xchg
inc
cltd
aas
and
inc
jne
jecxz
adc
or
rcr
shll
frstor
shlb
dec
jg
scas
pop
xlat
popa
mov
movsl
scas
out
dec
pop
lock
xchg
cmp
jns
add
ret
mov
loope
and
enter
adc
jge
ds
and
mov
outsl
fmuls
cltd
sub
lea
xchg
dec
movsb
mov
sarb
scas
ret
mov
pop
mov
mov
sub
lcall
pop
mov
jnp
mov
and
jecxz
dec
dec
mov
jae
cltd
out
sub
xchg
jo
fwait
mov
ficomps
adc
jbe
pusha
outsb
out
daa
cld
pop
es
scas
popf
inc
mov
inc
xchg
xor
push
lods
and
push
cmp
out
mov
xor
push
sbbb
divb
add
or
out
xchg
cmp
call
in
aam
and
add
sub
decb
jnp
dec
jmp
cli
mov
add
xor
mov
data16
mov
testb
outsb
in
fdivrl
je
xor
adc
mov
mov
fs
sahf
mov
int
dec
in
add
and
add
dec
and
adc
movsl
mov
dec
ja
sbb
jo
stc
lds
inc
and
mov
aam
movb
pop
sti
jg
push
test
enter
or
xchg
mov
into
mov
mov
push
ds
out
cmp
out
push
cmp
push
rcrl
push
adc
mov
repz
mov
cmp
lds
aam
test
sbb
shl
sbb
xchg
dec
mov
ljmp
insb
adc
cmp
xchg
int
sub
inc
xlat
sbb
scas
in
adc
insb
push
addr16
xchg
pop
pop
into
fiadds
shlb
mov
shll
packuswb
pop
leave
xor
sub
sbb
stos
sub
call
sub
scas
ret
insl
inc
mov
push
or
mov
aas
inc
inc
notl
dec
sub
push
adc
in
shll
and
dec
stc
idivb
icebp
cmp
or
es
push
pop
jns
mov
jnp
mov
add
scas
sbb
test
pop
jb
pop
mov
mov
mov
mov
movsl
clc
sbb
jle
sbb
daa
push
pop
jns
or
std
pusha
out
imul
mov
sarb
push
js
mov
fisubrl
sbb
lret
loope
jns
adc
push
sub
mov
xchg
jns,pt
push
xchg
push
loop
int3
xor
jl
mov
mov
clc
out
xchg
mov
push
int3
mov
mov
arpl
jle
xchg
jge
lahf
out
xor
nop
xor
rolb
mov
addl
sub
jmp
scas
test
loopne
out
call
cli
push
popa
or
daa
adc
push
mov
mov
xchg
shr
and
cmp
mov
or
rcr
mov
mov
addb
pop
sub
out
push
xchg
das
sub
add
cmc
clc
and
cmovo
lcall
xor
mov
mov
and
cmp
cwtl
add
push
call
insb
xchg
xor
pop
test
dec
add
inc
ret
ss
ds
fs
sub
mov
stc
inc
jae
pop
xchg
loope
and
mov
jp
adc
jae
jne
xchg
ret
in
sbb
ficomps
push
push
arpl
sub
mov
insl
icebp
enter
call
mov
testb
xor
xchg
and
jle
inc
mov
mov
inc
cltd
inc
mov
and
add
inc
mov
lahf
push
dec
daa
adc
into
mov
pop
inc
test
outsb
ret
mov
push
sub
xor
pushl
or
push
xor
popa
idivb
in
fmuls
dec
pop
lret
push
pop
pop
mov
ss
adc
in
mov
pop
test
aad
add
arpl
cmc
adc
cltd
dec
jb
adc
inc
mov
mov
dec
arpl
mov
in
ja
cld
mov
and
add
push
cltd
shlb
xrelease
aad
out
loopne
cmp
movsb
ret
outsl
enter
ljmp
mov
lods
out
sbb
sub
gs
lahf
enter
xchg
insb
push
int3
icebp
sbbl
jo
in
mov
mov
loope
cmp
xchg
xor
aaa
fldcw
mov
hlt
lcall
ret
add
jmp
sarb
mov
popa
shlb
sub
jmp
dec
stos
dec
mov
jo
out
call
ss
shrb
ja
in
push
cmp
pushf
cs
sbb
nop
xchg
aas
mov
ret
jns
negl
pop
sbb
out
push
mov
arpl
dec
sbb
and
xchg
aas
scas
pop
mov
dec
daa
jl
xchg
cli
sub
loope
push
xor
push
lahf
pop
xor
push
clc
mov
pop
ficoml
sahf
movsb
js
outsb
xor
push
leave
dec
test
jbe
or
sub
mov
hlt
mov
cmpsb
popa
inc
shl
inc
in
lret
cmp
jne
pop
push
xor
and
xchg
outsb
mov
pop
sahf
xor
stos
sub
jmp
loope
and
xor
fwait
nop
add
icebp
cmp
mov
jmp
mov
ja
fndisi(8087
dec
mov
jl
es
call
or
bound
out
mov
lds
push
clc
loopne
scas
dec
insl
mov
popa
adc
js
pop
xor
sbb
nop
pop
popa
mov
aas
dec
sub
lods
inc
test
sub
xor
cmp
jne
cmp
sbb
inc
add
mov
mov
test
mov
test
dec
mov
jno
mov
pushf
push
stos
sub
cmp
jne
fistpll
test
or
fld
scas
pop
enter
and
jne
andl
pop
sub
push
fsubrs
mov
lods
call
jmp
scas
pushf
mov
push
mov
test
inc
mov
dec
pop
dec
ret
cmp
pop
sbb
sbb
je
outsb
cwtl
jl
xor
xor
jge
call
test
test
adc
adc
cmpsb
les
pop
les
aaa
sahf
add
pop
dec
mov
jle
push
cmp
loopne
idivb
sub
loop
jo
cmpb
jmp
cmp
cltd
pop
jg
xchg
pushf
out
sub
mov
mov
mov
shrl
mull
inc
shrb
mov
bound
jg
dec
std
sahf
push
mov
xchg
leave
sub
lods
adcl
cld
or
xor
pop
fdivrp
or
cmc
sub
mov
jnp
scas
insl
aas
scas
ret
mov
cmp
mov
xor
add
and
add
test
ret
adc
sbbl
jo
xor
add
xchg
shl
jb
push
push
loopne
gs
cmp
notb
xchg
add
xchg
test
sbb
jmp
jb
and
aam
jb
push
nop
or
ret
scas
mov
cmpb
xchg
icebp
lods
adc
sub
and
shrb
ror
addr16
jbe
call
mov
sbb
mov
mov
sbb
daa
mov
clc
xchg
shrb
call
movsb
iret
adc
ret
sbb
sub
in
gs
mov
test
inc
divl
mov
stc
call
loope
dec
imulb
aad
stc
jns
call
xchg
cli
cld
adc
xchg
subl
mov
xchg
sub
jp
jmp
les
lret
push
sbb
adc
mov
push
or
out
stos
push
or
dec
sbb
push
int
pop
mov
xlat
dec
test
pop
int3
cmc
add
dec
imul
adc
lcall
jne
mov
add
leave
test
lods
sub
adc
mov
add
loop
insl
jge
mov
sub
xchg
js
ja
hlt
dec
push
inc
add
sub
pop
adcl
mov
push
fcmove
cmc
xor
xchg
or
sub
daa
xchg
pop
mov
stos
cltd
pop
popl
cli
jle
in
inc
lods
ret
cmp
xor
jne
jae
aaa
pop
sub
fdivrs
fstl
in
int3
inc
sbb
xchg
bound
idivl
push
sbb
xlat
or
fnsave
push
data16
fstps
add
jno
fnstcw
mov
out
or
pop
js
imul
push
sub
imul
cmp
dec
xchg
inc
sti
mov
adc
inc
fcmovnb
ljmp
push
sub
into
push
push
and
sbb
loope
jl
mov
popf
xchg
gs
shlb
mov
ret
xchg
sarl
pop
cmpsl
and
hlt
or
repnz
or
sti
mov
sbbb
jb
inc
sub
out
add
jo
add
push
nop
shrl
jmp
in
xchg
mov
popa
dec
fsub
jmp
xchg
cmp
xor
inc
mov
pop
insl
and
mov
stc
xchg
pop
gs
jne
pshufw
pop
in
mov
and
outsl
mov
ljmp
push
addl
dec
push
sti
roll
popa
inc
out
push
cwtl
or
aam
mov
dec
jo
arpl
mov
imul
jne
les
sbb
xlat
mov
aam
sub
dec
bound
lea
jle
fildl
cwtl
dec
out
or
add
cli
mov
sbb
outsb
call
add
inc
clc
jnp
add
jnp
imul
xchg
xchg
mov
jno,pt
dec
repnz
and
jp
jecxz
out
add
and
xchg
hlt
adc
jg
ja
incb
xor
or
addr16
or
lret
and
sbb
jne
repz
ds
add
mov
jbe
adc
mov
mov
adc
pop
icebp
jp
je
loope
push
into
add
pop
fs
out
ror
pop
mov
push
fldenv
out
pusha
in
je
jnp
inc
mov
in
test
sub
rorb
sub
in
stc
lahf
js
lds
dec
lods
stc
imul
mov
sub
cwtl
jo
cmc
or
xchg
or
xor
adc
jl
or
rcrb
push
test
adc
or
xor
xor
leave
jb
daa
addl
push
aam
fistpl
movl
add
ret
sub
ljmp
jne
cmp
ja
mov
pop
nop
insl
and
nop
jp
shll
fstl
cmp
fsub
jne
mov
adc
int3
cs
inc
fwait
jg
loop
out
stos
pop
dec
dec
leave
adc
es
pop
dec
lret
dec
cmp
and
push
push
pop
push
cmpsl
xchg
mov
out
bound
push
cmpsb
dec
dec
mov
test
gs
dec
xchg
xchg
mov
push
data16
out
movsl
out
xchg
into
mov
pushf
cmpsb
sarl
inc
jmp
and
inc
and
daa
ljmp
shlb
mov
and
inc
mov
inc
loop
leave
adc
sbb
sbb
les
or
jno
test
stos
mov
ret
clc
test
fwait
jmp
mov
jbe,pn
jns
imul
out
fldenv
aaa
mov
cmp
mov
lcall
outsb
sub
jb
pop
jge
outsl
iret
dec
push
bts
sarb
out
in
xor
jbe
out
aad
sub
fsubrs
lret
inc
out
jne
imul
aas
adc
popf
add
cmp
sbb
lods
and
inc
lods
jbe
pop
push
ja
into
mov
xor
jmp
push
and
add
psubusb
int
sahf
fs
jge
jne
lret
ret
add
pop
ds
xchg
cs
jmp
push
popf
int3
and
into
push
sti
mov
daa
mov
into
pop
adc
mov
mov
pcmpeqd
inc
xor
add
ret
mov
in
pop
dec
xor
cmp
pusha
or
push
orb
pushl
je
clc
jmp
sbb
setl
subl
je
lcall
pop
push
cli
pop
add
fisttps
sbb
lahf
mov
xchg
push
sub
pop
push
xchg
or
pop
xchg
mov
mov
out
xor
test
fiadds
xor
fimull
loop
jge
push
jo
enter
and
lods
pop
inc
mov
cwtl
add
dec
xchg
stos
inc
test
push
pop
aas
dec
mov
xchg
pusha
push
mov
jb
les
cld
mov
movsb
jno
pop
adc
dec
test
adc
pop
push
rcpps
add
vphsubd
and
add
mov
xchg
call
sti
ja
jl
cmp
dec
fwait
test
je
loope
gs
fs
jbe
addb
cmpsl
sub
lret
lds
lea
sub
add
jb
loop
and
daa
mov
outsl
xorl
inc
enter
test
and
sbb
push
push
fisubl
and
cmp
jge
fcmovnb
push
cld
test
add
xchg
in
call
mov
push
xlat
pop
pop
push
add
push
push
aas
call
out
cmpsl
and
mov
push
jo
xchg
enter
hlt
push
bound
hlt
pop
das
xor
sbb
sub
xlat
int3
lea
jno
in
add
mov
fiaddl
inc
js
or
bound
mov
aas
ja
add
dec
pop
inc
push
mov
std
sbb
lock
clc
test
repz
stos
lahf
hlt
sub
jmp
xor
inc
xchg
sbb
lcall
and
fdivrs
in
rorb
test
cli
adc
push
push
outsl
cwtl
imul
hlt
push
push
or
push
add
std
cmp
sub
xor
mov
mov
ret
sbb
movsb
int3
rorl
dec
xchg
daa
arpl
fisubs
push
pop
movsl
shrl
sub
ljmp
pop
cmp
cwtl
push
pusha
outsl
lcall
fdivr
sbb
hlt
dec
adc
arpl
lods
push
rcrl
lock
push
dec
inc
and
shrb
fsubl
fisubrs
mov
mov
sub
ret
lcall
push
sbb
pop
in
push
int
pop
in
sbb
xchg
jo
shrb
orb
push
loop
bound
cld
jno
pushl
imul
aaa
rcl
outsl
adc
lret
cld
jae
shrl
rcrl
pushl
push
sub
iret
push
gs
mov
out
mov
mov
cltd
mov
push
inc
in
imull
add
cmp
cmp
std
jge
inc
daa
sbb
adc
stc
adc
adc
lret
in
mov
push
aad
and
in
mov
and
arpl
icebp
pusha
aaa
adc
jb
push
fneni(8087
pusha
dec
test
stc
cmp
pop
gs
sbb
incl
stc
xchg
pushf
test
jl
xchg
enter
orl
add
dec
sub
mov
mov
loopne
aaa
sbb
adc
sub
or
inc
push
mov
mov
lcall
push
xor
jle
push
lock
shrb
fidivl
mov
sbb
imul
rcrb
fbstp
xchg
out
in
cwtl
xchg
dec
adc
push
add
xchg
clc
aas
int
popl
and
out
xchg
sub
xchg
mov
mov
or
mov
loope
pop
lods
mov
cli
pop
pop
sarl
or
sbb
outsl
insb
lcall
mov
addb
xor
sarl
shll
dec
push
and
or
add
or
insl
mov
inc
ret
cli
in
jecxz
jb
movsl
aad
xchg
pop
test
shrb
loope
aad
es
enter
mov
push
cmp
ljmp
mov
popf
push
sbb
add
cltd
mov
mov
xchg
cmc
cld
adc
popa
hlt
mov
call
sti
es
sbb
inc
mov
in
gs
sbb
mov
iret
aam
mov
pop
jl
movsb
adc
inc
aaa
pop
jne
mov
push
and
aas
movb
push
insl
mov
lock
ret
inc
dec
das
adc
sbb
clc
dec
fadds
cld
clc
rcr
shl
cmpsl
or
sbb
or
mov
test
scas
pop
orl
push
sub
into
mov
push
jmp
and
cmpl
mov
out
cli
or
add
sbb
add
ljmp
nop
cmp
shl
jmp
leave
dec
jle
dec
daa
mov
loope
cld
inc
jmp
movl
icebp
ret
jae
test
in
mov
add
into
mov
cmp
subb
les
mov
les
pop
insl
into
and
pop
cmp
pop
out
push
and
shl
sbb
xor
sbb
xor
push
lahf
sub
cmpsb
sarl
and
icebp
in
je
int
das
data16
inc
and
cmpb
jo
fs
cltd
into
add
fsubs
in
int3
outsb
push
insl
sub
lods
inc
cli
je
sbb
cmp
fildl
cmc
daa
inc
jns
dec
mov
lret
jmp
test
out
cmp
cmpsl
mov
sarl
add
cmpb
nop
mov
pop
xor
push
dec
scas
lcall
pop
cmp
mov
cmp
rcll
insl
and
lret
adc
shll
fstl
lret
mov
add
xor
stc
out
sbb
pushl
push
js
ret
and
mov
xor
push
cmp
inc
pop
add
inc
inc
jne
xor
imul
and
jo
jbe
xchg
fistpl
nop
add
iret
xor
fsubrl
jge
and
lea
or
jmp
or
call
dec
jne
and
xor
int3
mov
cmp
push
fnstenv
sub
dec
mov
adc
mov
jg
lds
jnp
mov
jb
push
in
cs
ror
aas
xor
mov
cmp
push
mov
pop
das
cmp
pop
xor
dec
ret
push
icebp
gs
inc
pusha
pushf
fimull
popf
xchg
jns
xor
fldl
mov
into
test
add
and
fldenv
scas
push
shlw
mov
jb
lods
lds
inc
sbb
jge
mov
outsb
ficoms
add
mov
pop
sub
add
jb
adc
std
jo
pusha
inc
das
add
pop
in
in
mov
sbb
int3
jg
mov
sarb
div
fnstcw
mov
stos
mov
push
mov
dec
je
push
in
loop
insb
xchg
mov
push
jl
fwait
loop
mov
repz
cmpsl
test
xchg
inc
popa
pop
mov
iret
jbe
rcr
or
in
mov
or
dec
test
or
and
pop
popa
scas
cmc
or
mov
pop
shl
std
arpl
lock
jmp
int
sbb
int
lods
ss
fisttpl
mov
jmp
ret
and
aad
mulb
dec
sub
dec
push
icebp
popa
sub
push
mov
jbe
in
jbe
inc
fcmovne
mov
jge
adc
inc
mov
mov
inc
sbb
lods
pop
or
mov
popf
pop
sbb
sub
sub
leave
inc
add
jb
sub
pop
lea
xor
pop
jp
push
and
xchg
fcoml
dec
shrl
xchg
cmpl
push
test
fldl
mov
mov
rcl
out
cmp
js
ljmp
std
popf
pop
sahf
cli
pop
jp
insl
jp
cmpsb
test
data16
pop
stc
or
pop
dec
ret
inc
icebp
enter
dec
push
mov
outsb
gs
cmc
test
loope
jge
into
cmp
or
push
outsl
sbb
fistl
je
xchg
stos
jmp
or
stos
xor
ds
cmp
add
adc
jl
hlt
icebp
dec
pop
insb
loope
dec
pusha
fidivl
in
jae
push
add
in
and
wbinvd
mov
mov
jmp
jp
fldcw
cwtl
xchg
xor
xor
adcb
sub
pop
jno
and
add
popa
or
push
cmp
aas
push
mov
adc
xlat
jp
cmp
sub
ljmp
push
mov
adc
mov
cmp
mov
orb
or
stos
mov
lds
xor
arpl
and
cs
aas
sbb
movsb
push
hlt
lock
js
repz
test
sub
shll
mov
outsb
cmp
imul
adc
test
fistps
jle
mov
jnp
jecxz
popa
pushl
test
and
hlt
adc
xor
xor
adc
in
orl
stos
or
lods
enter
pop
mov
cmc
push
jl
sbb
bound
shlb
inc
lret
js
mull
cltd
push
cwtl
add
out
jne
ds
or
daa
shlb
loope
incb
add
bound
pop
aas
sahf
xchg
or
out
aaa
mov
or
or
lea
mov
or
dec
ss
popw
jns
mov
pusha
lods
xchg
dec
mov
dec
and
scas
mov
dec
aas
jbe
or
xor
mov
sbb
xchg
jle
jo
fildl
cs
sar
in
mov
cmp
push
out
jns
fucom
rorl
mov
icebp
mov
arpl
orb
sbb
mov
push
jo
add
add
xor
test
mov
jp
mov
xor
shll
push
push
icebp
pushf
stc
mov
push
xchg
ret
pop
in
inc
xchg
test
mov
icebp
cld
andb
sbb
ds
sar
outsb
cwtl
mov
mov
jbe
jle
addl
imul
test
sub
loop
xor
lock
mov
add
int
and
lods
mov
xor
lock
mov
sbb
dec
and
push
add
adc
sub
sub
aam
mov
adc
ss
out
mov
mov
xorl
xchg
dec
push
xor
adc
lods
aam
out
xchg
jnp
mov
out
push
dec
sbb
adc
push
rclb
cmp
dec
je
cmp
add
xchg
repz
mov
mov
adc
jns
inc
mov
mov
loope
mov
jb
fldt
movsl
lret
mov
sbb
mov
add
pop
xor
dec
add
ret
rorl
xlat
popf
hlt
dec
fdivrl
sbb
sub
add
lcall
sbb
jns
inc
adc
xchg
mov
mov
push
or
mov
cld
push
cwtl
gs
stc
push
outsb
test
adc
mov
mov
movsl
add
test
roll
xchg
lds
test
pop
jnp
inc
ljmp
aam
pusha
in
leave
mov
out
fs
adcb
imul
dec
es
in
xchg
sub
mov
mov
shll
mov
jg
sbb
dec
pop
cld
push
jnp
stc
addb
aas
les
testl
xor
js
mov
pop
repnz
xor
xor
jb
fnsave
xchg
and
fiaddl
icebp
mov
ds
enter
xor
push
mov
sbbl
and
loope
mov
mov
loop
inc
lret
in
mov
dec
jp
jmp
adc
dec
or
lods
cmc
sbb
push
mov
nop
xorb
call
rcll
aad
pop
pop
push
xor
test
sbb
adc
les
shll
cmp
mov
adc
mov
out
push
add
into
cmp
jmp
inc
and
cmp
stc
insb
cwtl
imul
sbb
cmp
mov
xchg
mov
cltd
ret
mov
mov
mov
mov
arpl
cld
lods
xor
xchg
mov
mov
mov
mov
clc
pop
inc
and
loope
mov
pop
iret
fildl
inc
xor
mov
mov
leave
xchg
ret
sbb
push
lea
pop
add
cmpsb
clc
repz
mov
fwait
scas
movsl
int3
and
cltd
mov
mov
pop
dec
xchg
popa
jg
sub
sbb
inc
shr
out
mov
xor
into
cld
jp
insl
in
cmp
rclb
cmpsl
xor
jp
jl
test
jns
push
mov
dec
fcomp
or
scas
pushf
loope
imulb
push
ret
adc
mov
sub
dec
push
and
iret
andb
sub
pop
jo
xchg
push
sbb
pop
mov
jns
cmp
ficomps
cmc
and
inc
xlat
xchg
enter
ds
icebp
jecxz
pop
je
lcall
arpl
fs
leave
push
cmp
mov
in
sub
ss
nop
xchg
fiadds
enter
jg
cmp
loope
insl
push
int3
test
scas
jle
scas
sbb
sub
pop
sbb
and
or
push
dec
es
cmp
lret
push
cmp
ljmp
and
xchg
popa
dec
push
iret
xor
inc
inc
pushf
sub
test
loop
jle
xor
addb
add
mov
in
movsl
js
mov
test
fisubrl
int3
pop
add
push
cmp
out
mov
jle
xchg
scas
mov
or
imul
mov
sahf
sub
loopne
lea
mov
xchg
daa
mov
sahf
mov
mov
jnp
push
inc
fs
pop
cmp
cli
push
test
push
mov
decl
repnz
mov
testb
nop
mov
rclb
ret
sahf
rorb
mov
ss
fwait
dec
inc
aad
xchg
sbb
call
ret
arpl
inc
pop
mov
pop
push
and
pop
int3
movsl
adc
mov
sub
jp
push
jg
jl
addr16
mov
gs
xchg
decb
int3
jl
mov
je
cmp
xchg
dec
js
in
test
mov
subb
cmp
lods
mov
sub
pusha
or
xor
adcl
add
or
dec
in
and
cwtl
sti
ljmp
test
inc
adc
push
repnz
mov
fldt
fcmovnu
lods
mov
lea
cld
jl
sub
jns
xor
pop
out
fisttps
inc
dec
stc
lcall
xchg
pop
push
scas
fistl
je
pop
jb
idivl
cmc
aaa
rorb
push
testb
sub
add
inc
inc
cmp
sti
dec
rorl
ds
imul
push
lret
jg
and
aam
jnp
mov
cmp
in
dec
mov
ss
push
jp
mov
jl
jne
pop
adc
pop
arpl
mov
icebp
aad
xchg
jle
xorl
bound
scas
popa
movsl
sub
jl
cmpb
ficoms
mov
add
push
mov
push
xchg
sub
add
clc
jecxz
icebp
sub
cltd
fcompl
addr16
test
repz
dec
mov
cmp
daa
sbb
dec
inc
cs
jns,pt
popa
push
push
int
iret
or
jge
cmpsb
enter
imul
jb
lock
mov
mov
xchg
jmp
movsl
pop
fistl
cs
and
inc
jmp
shrb
xor
mov
sahf
outsb
iret
in
popf
cld
or
xchg
lret
lret
xor
lahf
xor
bound
push
pop
mov
rorb
lahf
pop
and
aas
clc
mov
inc
enter
push
dec
std
loopne
daa
adc
xchg
and
out
inc
ljmp
adc
insb
out
mov
bound
outsb
jnp
sbb
dec
pop
shlb
xor
xor
fidivrs
js
in
insl
xchg
test
scas
test
lds
sub
into
push
and
sub
test
dec
and
clc
pushf
sub
jge
mov
mov
aaa
push
out
in
pop
xchg
les
insb
clc
insb
rcrl
and
push
or
ss
mov
pusha
mov
icebp
lahf
xor
adc
fs
add
mov
in
jae
and
lret
dec
mov
es
adc
notl
dec
and
dec
xchg
mov
push
pop
clc
aad
or
ja
push
add
ja
out
add
jl
mov
push
xor
das
out
add
lret
lods
andl
lcall
das
xor
sbb
jbe
lcall
lret
mov
popa
xlat
push
js
fcomi
push
gs
lret
data16
sarl
ja
movsl
dec
mov
mov
mov
scas
rolb
icebp
sub
stc
loope
shl
adc
mov
push
ljmp
iret
jb
push
push
add
mov
hlt
call
mov
push
ja
pop
ss
mov
jne
imul
pusha
sub
rclb
ret
or
mov
lods
iret
xchg
aad
jo
sbb
cmp
jno
insl
add
jbe
fdivr
inc
fmull
sahf
mov
cmpsl
cwtl
pop
je
lret
inc
addr16
adc
add
aam
inc
arpl
xchg
or
push
xchg
data16
nop
jecxz
cmp
mov
loop
dec
pushf
ja
lret
add
or
or
movsl
popf
sub
mov
sub
enter
cmp
test
bound
mov
add
adc
pop
ror
cmpsl
lret
cmc
int
sahf
loope
jp
jns
inc
cmpb
ss
push
addr16
jp
mov
sbb
in
mov
cvtps2pd
adc
mov
push
gs
jmp
rcrl
cmp
jg
fstpt
mov
mov
rorl
xlat
aas
mov
push
std
aad
adc
dec
js
mov
fistpl
pop
aaa
shl
jl
mov
pop
lcall
push
adc
decl
bound
bound
adc
mov
js
dec
pop
mov
xchg
ficomps
push
mov
cli
or
popf
lcall
and
xor
cmpsb
push
inc
xlat
inc
addl
ljmp
and
cs
das
sub
in
inc
je
sbb
push
outsl
add
mov
jns
or
aam
cmpsl
outsb
xlat
aam
mov
sbb
insb
sbb
mov
insb
mov
xor
fbstp
popa
adc
nop
jle
xor
testl
daa
jns
stc
rcrb
arpl
cmc
lea
jl
fistpll
popl
jmp
adc
loop
das
jp
and
jne
in
and
or
outsb
adc
imul
flds
push
clc
jb
lea
cmp
stos
dec
adc
in
sbb
push
adc
adc
cli
mov
jle
push
enter
sub
cmpsl
sbb
cmp
xchg
cwtl
enter
fucomp
jnp
mov
loop
rcrl
pop
rcr
arpl
xor
xchg
test
mov
cs
lods
sub
inc
xor
daa
imul
cmp
xchg
or
xchg
jge
cmp
add
jns
or
cltd
xchg
xchg
xchg
and
dec
jg
push
add
jmp
movsl
sarl
xchg
test
and
and
push
sub
pop
ficomps
cld
xchg
rolb
jo
nop
ret
or
jl
aad
inc
inc
gs
inc
sahf
loope
mov
jno
jae
aas
loop
adc
xchg
push
icebp
inc
cltd
clc
push
pop
pop
jb
sbb
icebp
inc
repnz
and
mov
pop
stos
lahf
add
out
mov
add
mov
adc
mov
mov
add
fcoms
sbb
lea
sbb
sub
mov
enter
jg
imul
cmp
xor
cmpsl
push
out
enterw
fwait
addr16
les
lock
cmpsb
ss
jmp
pop
mov
pop
pop
out
pop
sbb
mov
xchg
xchg
das
mov
sbb
test
shl
cwtl
outsl
xchg
inc
or
frstor
or
iret
add
fidivrl
xchg
mov
add
sarb
add
js
loop
mov
and
ja
movsl
negb
test
mov
sbb
gs
aad
push
mov
push
into
pop
push
call
mov
icebp
fildll
lods
fdivrl
add
call
jmp
in
addr16
aad
jae
dec
aam
lcall
lret
mov
mov
out
inc
adc
test
cmpsl
cmp
testl
aaa
pop
sti
dec
in
jbe
frstor
int
js
xor
in
test
cmp
mov
arpl
jg
lcall
fs
repz
ss
lret
mov
icebp
xlat
loop
xor
or
flds
repz
push
mov
sub
jno
push
in
cli
lods
mov
or
jecxz,pn
add
fldl
fnstcw
mov
fbld
mov
iret
popa
xor
mull
and
leave
pop
dec
adc
aaa
or
rolb
rcll
fucomip
adc
jg
push
cmp
repnz
xlat
in
jno
mov
hlt
sbb
mov
shll
addl
inc
mov
in
mov
mov
rcr
pop
pushf
aam
xchg
push
or
and
inc
shrl
insb
movb
push
add
mov
cmpsb
sbb
pop
into
out
push
jp
jp
filds
insl
js
js
outsb
lcall
sbb
cli
jp
loope
adc
jp
pop
fldcw
mov
inc
test
lcall
push
scas
fmulp
push
shl
repnz
arpl
sti
push
mov
imul
mov
test
mov
pusha
jno
fisttpll
nop
pop
out
jmp
and
ds
movsb
jge
lds
out
xchg
adc
or
cmpb
std
mov
call
or
lret
repnz
mov
pop
sbb
xchg
icebp
mov
jne
or
push
cmp
outsb
jg
sbb
push
adc
inc
das
orl
sub
test
sbb
repz
insl
je
pop
mov
int3
or
ss
nop
xchg
in
xor
xorb
pop
repz
addr16
hlt
pusha
xlat
sbb
enter
push
mov
fldl
mov
scas
in
adc
mov
xchg
sub
or
fwait
pop
dec
pop
cmpsb
fisubrl
nop
loopne
jb
fstpt
and
xlat
fisttpll
cmp
in
dec
push
push
arpl
cmp
pop
iret
scas
fwait
xchg
test
rol
bound
dec
fcoml
addr16
mov
adc
sti
add
inc
movb
mov
adc
add
adc
es
call
mov
pop
xor
popf
imul
cmp
aam
dec
out
push
sbb
push
test
pusha
jo
shrb
shll
xchg
and
inc
mov
aad
loope
ljmp
cmp
sub
in
mov
pop
sarl
negb
outsb
incl
insl
sbb
xchg
lahf
enter
pop
cmpsl
and
inc
jb
mov
pop
jns
and
mov
arpl
adc
inc
cs
daa
mov
jno
push
cmpsl
pop
stos
sbb
sti
pop
xchg
fldcw
xchg
mov
adc
popf
dec
mov
cli
mov
loopne
mov
xchg
loope
rorl
mov
in
jg
bound
loope
fildll
mov
stos
sbb
push
or
xchg
xchg
xchg
xchg
cmp
pop
aaa
xchg
in
addr16
mov
lahf
dec
popa
outsl
sub
xchg
icebp
sbb
stc
add
test
in
xchg
repz
cmc
ljmp
addl
mov
bound
lock
scas
sarl
lea
das
mov
orb
or
mov
repz
scas
xlat
test
and
ja
fiadds
push
dec
repnz
sbb
adc
dec
repz
and
mov
mov
push
inc
out
xor
cwtl
inc
call
lock
stc
sbb
xchg
sahf
xchg
inc
inc
add
adc
xchg
sbb
sub
fxch
push
inc
mov
out
push
shll
jp
andl
lock
lahf
mov
pop
cwtl
jno
loope
lret
stc
pop
stc
out
adc
add
mov
sahf
inc
test
push
sbb
inc
sub
pop
mov
stos
cmp
lret
cmpsl
or
dec
jg
enter
inc
xchg
out
inc
fcoml
ret
out
aad
add
div
inc
or
daa
pop
push
push
mov
dec
iret
pushf
in
aaa
lds
inc
cld
loope
jo
sbb
leave
aaa
movsb
jl
lock
sbb
cwtl
push
push
inc
jge
pusha
fmuls
popw
jb
insb
test
mov
mov
jno
test
dec
xchg
adc
inc
fnsave
sbb
jmp
sub
movsb
fidivrs
test
in
lock
mov
mov
test
sub
out
mov
pop
dec
mov
add
sub
scas
enter
jp
cmp
pop
repz
aaa
mov
xor
xor
pushf
pop
loop
mov
daa
loop
das
andl
xorl
ucomiss
ljmp
cli
sbb
pop
xor
mov
inc
pop
les
ja
rol
xor
nop
dec
add
and
test
gs
mov
push
mov
aas
fnstenv
xor
sbb
adc
arpl
pop
jge
loopne
mov
cmp
cltd
fdivrs
cmpsb
adc
rcll
mov
lahf
hlt
mov
adc
sub
ret
mov
mov
jg
repz
cmpl
xor
fdivr
inc
mov
xor
adc
fmulp
clc
ret
jge
pop
cmpsb
insl
adc
jae
jecxz
xor
dec
mov
and
addr16
popf
xor
cmpsb
in
shr
ret
mov
loopne
xor
addr16
add
adc
sbb
and
mov
pushf
mov
daa
push
aas
fsubl
mov
jb
push
std
push
movsb
mov
inc
fisttpl
adc
push
xor
fcomps
icebp
cltd
xchg
addl
cli
test
nop
jp
div
leave
and
xor
popa
lods
sbb
push
or
fistl
enter
mov
and
imul
pop
push
mov
cltd
icebp
jecxz
sub
fmuls
mov
inc
js
mov
xor
jae
dec
add
test
xor
and
fwait
mov
adc
dec
in
cmpsb
out
ljmp
and
dec
ljmp
or
lods
insl
mov
pop
xchg
loopne
mov
jne
dec
in
cwtl
lods
out
int3
cli
and
repnz
and
xor
mov
push
xchg
mov
mov
pop
in
jp
adc
and
clc
pop
or
or
mov
jns
cmp
jb
nop
and
sub
and
pop
lret
mov
xor
adc
movsl
mov
xlat
inc
sub
aad
loop
popa
jne
leave
or
sub
stc
mov
inc
jg
inc
aas
into
in
aas
push
xchg
cmp
inc
aam
push
mov
je
push
icebp
nop
xchg
pop
jl
mov
adc
je
test
lea
adc
dec
jp
scas
cwtl
push
andb
and
jns
mov
icebp
repz
lcall
cmp
push
xlat
adc
inc
cld
inc
and
push
push
outsb
adc
popf
dec
cwtl
inc
aam
fstp
cmc
das
std
mov
ja
es
popa
adc
pop
int
js
addr16
aam
jne
fwait
rclb
dec
mull
inc
fwait
xchg
adc
mov
or
push
fs
out
sbb
xchg
jge
dec
fsubrs
stc
sbb
lock
movsl
cwtl
cmp
sub
push
add
adcl
mov
dec
push
and
and
mov
repz
dec
cmp
movsl
pop
addb
or
sub
cmp
lods
cmpsb
cltd
aam
jl
orb
and
pop
aas
jo
popa
lods
std
mov
mov
dec
cltd
les
shll
out
fwait
xchg
test
pushf
mov
sbb
test
mov
filds
stos
push
je
or
sub
cs
fidivs
mov
fdivs
inc
push
je
mov
xchg
pusha
outsl
ficoml
dec
ss
pop
inc
mov
enter
imul
inc
push
add
add
cs
out
jmp
in
push
call
mov
mov
push
enter
push
mov
pop
mov
dec
pop
aaa
inc
adc
fwait
sbb
out
inc
pop
inc
jp
push
or
out
pop
lcall
inc
cmc
xchg
mov
mov
mov
das
xor
fadds
push
jns
ljmp
popf
das
movsl
sub
cli
pop
ljmp
xor
jb
xor
pop
in
mov
push
sub
insl
cmp
jae
ss
jno
fdivr
xor
sti
clc
int
xor
ds
mov
iret
or
xchg
cmpsb
or
dec
xor
nop
xchg
xor
bound
clc
out
ja
sbb
xchg
dec
xchg
int3
pop
es
pop
jns
dec
xorb
xor
sahf
mov
jg
pop
clc
jnp,pn
sbb
js
jns
or
in
and
jno
pop
fcmovbe
pop
mov
push
int3
test
or
std
ja
push
mov
aaa
lds
call
es
aas
cmp
cli
or
out
arpl
test
sub
out
out
pop
inc
adc
test
test
dec
jo
pop
int
mov
das
subl
popa
push
and
and
bound
out
idivl
pop
in
inc
and
push
cmp
lds
pop
loope
stos
pop
or
insb
mov
or
sub
push
xor
sbb
cld
mov
pusha
inc
mull
ljmp
scas
mov
cmp
xchg
xor
jns
sar
orb
xchg
cs
sub
xchg
jecxz
sub
cmp
pavgw
push
pop
lds
js
mov
cwtl
xor
mov
jle
xchg
fstl
sbb
xlat
das
in
movsl
xor
in
add
popa
add
xchg
inc
cmp
sub
rorl
sub
inc
imul
std
pop
fadd
fldt
xor
push
incb
imull
lahf
addr16
imul
imul
add
mov
repnz
or
sbb
mov
jg
or
mov
pop
popa
stos
into
or
les
sub
fs
out
into
insl
cltd
shrl
sbb
ljmp
repz
fidivrl
pop
addr16
hlt
mov
or
or
cmp
cmpsl
notl
dec
sbb
xor
lret
aad
jmp
imul
dec
js
es
push
test
out
stc
inc
gs
pop
negl
shl
pop
loopne
fstl
bound
xchg
or
cmp
ret
jb
clc
adc
mov
mov
aad
outsb
ret
cmp
mov
mov
jecxz
ds
loop
imul
aas
inc
lcall
js
xor
jne
testb
push
sbb
jecxz
sahf
xchg
out
enter
je
xlat
mov
je,pt
clc
gs
aad
stc
and
pop
cmp
jnp
mov
push
movsl
sbb
or
sbb
movsb
and
inc
sub
stc
xor
mov
dec
fmuls
lea
scas
loope
je
lods
or
ljmp
lahf
xchg
mov
in
data16
fldt
addr16
lret
push
stc
dec
jmp
mov
cmp
dec
pop
push
add
lcall
push
push
mov
lds
das
xor
scas
insb
ret
sub
leave
sub
jns
subb
fildll
stos
outsl
sbb
dec
pop
xchg
sbbl
into
xor
loopne
cld
rcrb
iret
jl
xchg
cmp
ss
mov
xor
idivl
pop
add
cmc
xchg
popa
sub
movsl
adc
push
pop
stc
sub
dec
addr16
sbb
sub
cld
ds
jnp
and
cmpsl
push
clc
jno
adc
cmpl
fld
imul
rcl
aaa
ja
ljmp
jg
pop
fwait
mov
lock
roll
idivb
pop
imul
add
xchg
xchg
js
sbb
lret
jmp
imulb
fadds
aaa
test
fwait
out
ljmp
xor
add
sub
and
pop
std
lcall
jmp
xchg
inc
iret
cmp
pusha
fimull
mov
insb
pop
jns
clc
push
cmpsb
call
inc
sbb
pop
out
add
mov
sbb
push
jle
cmp
stos
cmc
int3
popf
mov
mov
push
mov
sub
pop
inc
jle
sbb
sbb
jmp
je
into
mov
lret
sbb
notl
test
jb
fdivl
xchg
movsl
jbe
lock
imul
push
addl
or
popa
ds
ss
pop
into
cmp
sbb
mov
cmc
repnz
jg
inc
mov
aam
mov
pop
pop
test
loopne
out
inc
pop
sbb
lds
repz
rcrl
jae
sbb
cmp
xchg
hlt
loop
mov
loop
push
test
push
sbb
icebp
mov
incl
test
pusha
fwait
sarl
adc
inc
push
xchg
cmpsl
into
xorb
xor
mov
sbb
out
jne
lret
dec
lods
cmpsl
and
sbb
xchg
mov
aaa
push
push
jle
mov
js
imul
icebp
loope
sub
adc
and
pop
cmp
hlt
ljmp
test
sub
in
adc
push
sub
scas
sti
sbb
test
inc
aaa
std
inc
es
add
test
mov
scas
push
sbb
add
cld
int
xorl
lcall
push
pop
xchg
ss
lods
sub
push
inc
mov
push
insb
loope
or
mov
push
lods
outsl
mov
sub
cmp
jne
jns
rclb
pushf
hlt
pop
xchg
outsb
lea
ret
sub
lods
mov
jns
out
out
mov
mov
sbb
sbb
and
fnstsw
in
cmpsl
popf
fnstcw
sbb
icebp
jns
mov
xor
push
mov
mov
add
push
faddp
cmpsb
sub
mov
jo
jecxz
xchg
dec
jb
bound
or
sub
and
in
push
jp
pop
cs
sub
js
inc
mov
repnz
in
sub
test
mov
mov
ljmp
jp
cmp
js
pop
push
push
shlb
xchg
inc
push
sub
pop
and
inc
and
aad
and
lahf
data16
rcrl
test
and
daa
aas
jne
xor
pop
out
dec
cli
rol
cli
mov
ret
fs
insl
pop
xlat
cli
pop
test
cmpsb
sti
mov
mov
fsts
jo
sar
push
cmpsl
mov
testl
sbb
testl
cmp
jge
seta
dec
fucomi
bound
lods
push
mov
bound
add
fwait
xchg
in
xor
sub
xchg
or
pop
xchg
aaa
cmpb
shrb
pushf
outsl
cs
mov
xlat
jb
mov
xchg
pusha
out
xor
xchg
fldenv
es
out
std
sti
cli
aaa
in
cld
iret
outsb
cmp
pop
dec
fwait
into
ret
and
adc
daa
movsl
inc
repnz
inc
mov
mov
jb
dec
rcrl
fsubp
fisubs
stos
ds
dec
sub
ds
push
fs
sbb
jmp
dec
mov
aad
enter
pushf
inc
pop
aaa
push
push
loopne
shrl
sarb
xchg
inc
fbstp
sub
push
inc
jg
xchg
push
jne
add
mov
sbb
and
loopne
sub
pop
ds
xchg
sahf
pop
push
es
aam
test
out
dec
cmp
out
lret
fs
adc
jge
adcl
rorl
scas
in
out
insb
ret
je
cmp
lret
stc
pop
roll
add
lods
rorb
lret
std
stos
xchg
cmc
jmp
std
inc
ss
pop
or
loope
lods
mov
push
jns
push
sbb
sub
scas
jns
lret
cmpsb
imul
xor
js
cmpl
xor
or
adc
inc
iret
mov
enter
xchg
jnp
sub
cmp
jmp
push
mov
loope
imul
repnz
rcr
mov
fdivrs
mov
adc
je
int3
jne
and
pop
arpl
daa
enter
es
or
sti
iret
inc
inc
pop
notl
cmp
jne
sub
adc
pop
or
adc
repz
sub
jne
adc
mov
cwtl
lods
cmp
jmp
inc
cmc
sub
or
xor
adc
fbstp
ret
mov
or
sbb
add
aad
fwait
mov
lcall
xlat
and
pop
fdivr
and
sub
outsb
pop
lret
and
cs
mov
dec
sbb
mov
aas
fisubs
push
ljmp
imul
dec
mov
mov
aad
sbb
das
in
out
daa
pop
daa
mov
push
xor
loop
jnp
popf
pop
loop
movsb
mov
xor
out
clc
jo
xchg
sbb
push
xor
jmp
fldt
fbld
in
lahf
daa
jge
test
xchg
push
push
xchg
movsb
rclb
pop
jmp
jmp
ljmp
mov
pop
movsb
imul
or
fcoml
lahf
jnp
cmp
loop,pn
xchg
scas
int3
jge
and
leave
xlat
pop
xchg
mov
pop
mov
insb
mov
push
mov
aas
bound
dec
mov
add
inc
pop
orl
test
mov
lcall
pop
or
dec
cltd
inc
fidivs
mov
cmp
mov
cs
inc
push
stc
bound
outsb
div
pop
popf
fidivrs
pop
clc
jns
in
les
in
mov
rcrl
scas
jb
loopne
cmp
into
scas
sbb
sahf
cmpsb
hlt
pop
or
xchg
pop
loopne
jmp
ds
stos
dec
cmp
cmp
clc
imul
jno
addr16
ror
jmp
rolb
inc
mov
pop
std
cltd
mov
stos
dec
adc
push
mov
push
pop
out
out
popa
xor
insl
sub
and
sbb
lcall
push
fisubrl
addb
sub
popf
pop
mov
insl
in
add
test
movsl
ljmp
int3
inc
cmc
mov
out
xor
lds
imul
mov
sub
xlat
shlb
test
lds
and
addr16
popf
inc
adc
push
cmpsl
enter
cmp
push
push
js
pop
xor
std
adcb
scas
sub
inc
test
adc
inc
aas
jle
je
push
sbb
lds
mov
jae
mov
dec
leave
data16
aas
insl
sub
js
sar
aaa
ljmp
or
iret
xchg
jge
movsb
push
cmp
push
sub
mov
loope
fsubl
loopne
cld
sbb
imul
add
jnp
jl
cmpsb
movl
inc
push
fstpl
cmp
and
jmp
mov
adc
or
dec
dec
pop
cmpsl
icebp
insl
inc
cmp
lods
xchg
inc
iret
out
inc
mov
mov
adc
iret
xlat
stos
xchg
sarl
add
popa
pop
mov
xlat
stos
iret
ss
rep
xchg
sahf
lret
jmp
jae
fmulp
icebp
mov
add
ljmp
imul
cld
mov
pop
jb
mov
and
popa
in
fld
sti
pop
inc
lods
pop
sub
pop
xor
dec
inc
jne
cwtl
lcall
pop
in
lock
mov
cli
aaa
or
stos
repz
cmp
jae
xchg
mov
inc
pop
in
lds
jmp
add
mov
push
repz
mov
or
sub
mov
inc
cltd
sbbb
jmp
cmp
fcoml
leave
or
or
mov
pop
inc
sbbl
xchg
call
mov
addr16
outsl
ret
outsl
sbb
dec
mov
jns
jne
jmp
inc
movsb
fisubrl
outsb
into
sub
and
mov
jl
mov
popa
mov
fsubl
mov
and
loop
dec
push
pop
xor
mov
mov
xor
pop
jg
cmp
sub
mov
xchg
and
cmc
inc
fistl
test
out
sub
in
jbe
ficoms
out
pop
int3
enter
cmpsb
push
jb
pop
mov
mov
gs
jge
jg
pop
cmpsl
scas
in
mov
popf
mov
outsl
dec
sub
push
jp
imul
jb
xor
sub
pop
push
cwtl
aam
out
xor
inc
jne
mov
mov
xchg
and
pushf
cmp
arpl
mov
notb
addr16
cmpsb
cmpsb
outsl
pop
jle
jmp
xchg
mov
pop
pushf
fists
cmc
popa
into
mov
iret
addl
fadd
in
sub
push
mov
xor
sub
push
fdivrs
bound
inc
dec
or
mov
aam
into
call
lods
arpl
or
adc
jp
jb
pop
lods
xor
enter
arpl
shrb
adc
insl
in
scas
mov
addr16
xchg
cld
sarl
pop
repnz
pop
or
mov
outsb
pop
jns
jnp
lods
rcrb
sbb
bound
cmp
xchg
cmp
mov
into
xchg
into
outsb
out
mov
jg
mov
ja
push
pop
lcall
cmp
mov
scas
sbb
loopne
cmc
lret
push
rclb
cld
call
adc
mov
add
xor
lahf
sub
lcall
loopne
lcall
je
ficomps
or
pop
or
lahf
arpl
xor
ret
mul
js
fdivl
push
shr
pop
sbb
pop
shlb
jbe
sbb
xchg
jno
mov
push
ss
out
lea
mov
push
clc
sbb
stc
movsb
test
ret
stc
xchg
in
shr
adc
add
das
mov
clc
mov
into
repnz
mov
dec
dec
cld
push
in
fldl
jp
nop
inc
call
add
dec
sarw
test
sub
shll
fnstsw
lahf
popf
cmp
filds
jns
andl
inc
xchg
imul
pop
xchg
xchg
insb
add
lds
add
outsl
int3
sbb
cmp
fnstsw
push
gs
fwait
or
jl
iret
adc
sub
fsts
inc
das
inc
imul
mov
push
dec
mov
rolb
testl
pop
push
scas
in
or
iret
inc
jbe
movhps
or
cmpsb
movsl
inc
jne
enter
lds
fdivp
adcb
or
lock
ss
pop
or
add
push
inc
cmpsl
mov
sbb
rcrb
ss
sbb
lret
ja
or
in
imul
add
dec
mov
out
dec
cmp
ja
push
mov
sub
jb
ljmp
xor
cmp
push
lret
jno
lods
mov
stos
das
jae
inc
jmpw
aam
outsl
adc
add
stos
cmp
data16
mov
shl
fcmovnb
mov
shll
icebp
mov
pop
std
xchg
movsb
adc
test
push
pop
in
loopne
fwait
or
pop
jle
and
or
loope
mov
mov
push
mov
add
sub
lahf
sbbb
call
idiv
and
dec
psubsw
lods
outsl
sahf
mov
mov
jecxz
lods
or
mov
fisubl
ret
lcall
jge
out
fs
xchg
adc
jecxz
ret
inc
mov
test
pop
gs
je
or
add
cld
sub
fnstcw
jno
pop
push
movsb
and
stos
dec
push
in
lea
xor
aaa
push
xchg
or
repnz
pop
enter
or
mov
sbbl
jns
push
and
sub
testb
jb
add
mov
daa
fnstcw
sub
inc
sub
sbb
movsl
mov
xor
jnp
test
ss
mov
popl
inc
sub
or
mov
jne
xlat
test
in
imul
add
mov
test
dec
xchg
hlt
jmp
pop
jno
out
fpatan
outsb
add
into
cmpsb
cmc
xor
xchg
rcr
aas
enter
mov
fisubl
push
xlat
sub
cmp
mov
fldenv
mov
add
stc
cmpsb
in
pop
mov
dec
jmp
outsl
ss
pusha
sub
rorb
ror
ss
lea
in
pop
mov
and
test
in
push
mov
cltd
pop
push
xchg
ja
push
shll
and
push
inc
cmp
out
pop
loop
sbbb
das
mov
xchg
in
dec
cmp
jle
outsl
and
mov
insb
insb
xchg
and
jae
or
mov
push
mov
push
imul
pushw
push
mov
dec
cmp
fwait
into
add
cmp
out
cmp
rolb
push
subb
popa
adcb
scas
cs
pop
dec
pop
dec
test
cmp
mov
aad
jg
mov
std
dec
incl
jo
shl
ja
xchg
shll
mov
rcl
mov
addr16
xor
sbb
mov
test
mov
xor
mov
jmp
pandn
inc
cld
sub
add
lods
pop
sbb
and
dec
inc
xchg
or
jne
xchg
push
pop
or
in
and
pop
bound
mov
cwtl
out
fsubs
sub
or
in
iret
sub
loope
jle
or
imul
test
inc
dec
or
decl
jl
mov
add
inc
xor
dec
cmpb
sub
sub
jno
fsubs
xlat
mov
or
hlt
cmp
cmpsl
cmpl
jo
popf
out
roll
bound
ret
or
ds
aam
and
movsl
lcall
aas
dec
adc
mov
jb
xchg
lahf
jb
cmpsl
repz
and
mov
xchg
outsl
push
and
jp
adc
iret
mov
mov
lret
subl
pusha
scas
sbb
mov
mov
fcmovnu
mov
mov
adc
sub
mov
mov
fisttps
cltd
adc
ja
cwtl
mov
loopne
es
and
mov
jno
sbb
lods
scas
dec
fdivs
fldpi
inc
rcrb
das
fcmovb
mov
xchg
cld
sbb
sub
and
cmpsb
lcall
jg
gs
add
mov
push
add
loope
mov
mov
xchg
imul
nop
jmp
jmp
push
rcrb
pop
or
dec
inc
imul
in
movsb
je
int3
scas
aaa
imul
mov
sub
mov
or
out
out
dec
les
xor
xchg
sbb
add
loopne
dec
int3
test
scas
jl
xchg
or
das
stc
cld
mov
test
sti
fisubl
nop
mov
jne
cmpsb
loopne
lds
push
inc
jbe
aas
sub
or
adc
in
cpuid
bound
push
or
shlb
mov
lods
push
mov
dec
mov
test
arpl
shl
inc
cld
sub
int3
roll
add
inc
inc
fnstenv
lods
cmp
and
out
or
inc
in
inc
mov
iret
inc
inc
daa
mov
cmp
sub
inc
mov
int
push
jg
push
call
hlt
jne
jo
das
fdivl
cmp
cmpsb
mov
das
dec
repnz
addr16
add
sti
mov
jge
and
scas
int
cmpsl
mov
subb
aad
js
mov
aam
mov
ret
add
xchg
in
or
popa
jl
sbb
sub
or
push
lods
xchg
ret
inc
push
inc
jae
pop
add
push
loope
dec
les
add
or
dec
jae
pop
jmp
pop
mov
shr
fld
into
popa
mov
sti
scas
ja
ja
imul
test
xchg
adc
push
mov
jno
mov
andl
add
xlat
rcrl
ja
mov
leave
stos
jbe
dec
bound
stos
mov
fimull
xor
sub
sbbl
mov
shll
xchg
insl
shll
imul
mov
repnz
pop
lods
fcmovb
xor
or
jno
mov
add
pop
xchg
xchg
add
mull
inc
int
fldl
pushf
das
loopne
int3
leave
lods
dec
sub
adc
imul
sbb
popa
shlb
jbe
hlt
jb
sbb
lea
push
ret
in
push
rol
test
mov
mov
adc
xchg
pusha
pop
jno
stc
mov
ljmp
mov
sub
push
int3
mov
jo
dec
cmp
cmp
or
pop
int
mov
scas
inc
cmp
inc
inc
stos
mov
pop
xor
mov
push
adc
test
sbbl
mov
shll
ret
add
mov
dec
std
std
mov
dec
outsb
lods
int3
jne
loope
lods
or
jmp
gs
test
adc
mov
imul
push
mov
inc
cmp
icebp
adc
xchg
cltd
mov
hlt
push
mov
push
jmp
and
fimull
and
jns
pop
xchg
adc
inc
psubsb
add
jns
xchg
push
cmpsl
jns
aaa
add
add
popf
mov
icebp
adc
inc
add
shr
ret
stos
inc
aas
dec
add
pop
ret
loope
jnp
ret
dec
xchg
or
adc
adc
cmp
sbb
mov
xor
xchg
jno
or
outsb
bound
cmpsl
mov
bound
scas
flds
cmpsb
xor
add
addr16
cmp
mov
mov
outsb
jns
cltd
cmp
je
push
or
loope
pop
or
jmp
mov
add
dec
sub
sub
push
xchg
cmp
sub
sarl
mov
jle
push
cmpsb
sub
add
rorb
lods
jo
cli
dec
jbe
shll
test
cmp
adc
mov
sahf
enter
dec
sub
push
iret
insb
mov
xlat
mov
xchg
inc
adcl
pop
mov
sub
jne
pushf
in
aam
outsb
pop
stos
jg
aas
ljmp
and
pop
dec
mov
scas
push
gs
lahf
bound
mov
addr16
cmp
jno
or
cs
add
mov
nop
and
lds
inc
inc
or
lcall
mov
out
jecxz
mov
sub
xor
mov
rcll
sub
jecxz
jne
dec
pop
xlat
outsl
ret
or
cmp
int
sub
cli
cmp
mov
pop
test
popa
mov
in
imul
or
mov
imul
int
xchg
dec
hlt
test
or
movsb
popa
push
push
mov
cmp
dec
aaa
cmp
or
enter
aam
movsb
mov
sar
cmp
loope
icebp
dec
cli
fsubs
push
jge
out
xor
sub
es
insl
cs
scas
fadds
cld
jp
xchg
sub
mov
arpl
dec
mov
lahf
sub
pop
mov
sub
xchg
push
adc
jmp
mov
push
and
cmp
mov
add
mov
repz
loope
mov
xor
add
push
add
or
jp
mov
mov
sub
and
loope
push
mov
insl
dec
push
adc
fs
mov
std
jecxz
pop
inc
xor
dec
lods
mov
pop
and
xchg
subb
and
xor
lahf
cltd
and
sti
out
sub
sti
addr16
push
iret
subb
push
cmp
out
mov
jb
out
bound
pop
dec
mov
push
cmc
repnz
pop
das
dec
push
pop
pop
dec
sub
mov
mov
and
push
fnstcw
jmp
adc
cmc
cmp
scas
xor
xlat
xchg
into
cmp
cmp
inc
push
movsb
mov
call
pop
rolb
cmp
dec
arpl
jmp
sub
mov
out
adc
fadds
sub
int
in
and
jmp
mov
stos
fsubrl
hlt
dec
add
test
scas
push
push
jno
stos
enter
push
push
dec
mov
negb
mov
jb
xchg
dec
push
xor
pop
jmp
jle
dec
out
sub
scas
lock
mov
push
scas
dec
sbb
sub
adc
mov
ja
out
jmp
fld
adc
enter
adc
pop
les
jno
mov
xchg
ficomps
mov
xchg
lods
jge
jecxz
lods
mov
add
cmpsl
jae
arpl
in
cmpsb
test
sbb
jb
addr16
add
sbb
dec
outsl
in
xchg
pop
xlat
and
sbb
idiv
lea
push
dec
popf
mov
in
cltd
or
outsb
lods
fwait
jo
push
dec
cli
test
flds
mov
xchg
out
inc
loopne
push
es
xchg
cwtl
sbbl
xor
sbb
jecxz
outsb
into
clc
mov
xchg
movsl
and
mov
in
and
lock
xchg
and
or
jo
aas
das
cmp
pop
sbb
icebp
mov
push
sbb
xor
sub
cmp
adc
mov
dec
xchg
pop
pop
sub
or
add
jle
and
or
mov
or
lret
movsl
sbb
decb
cwtl
sbb
sbb
fadds
cltd
addr16
add
loopne
or
and
mov
aas
push
cwtl
pop
arpl
dec
aad
test
ljmp
cmp
push
dec
pop
cmpsl
pop
cld
jb
mov
clc
mov
pop
inc
jg
imul
pop
out
cmp
sbb
fwait
cld
pop
jmp
cmc
jne
icebp
push
ljmp
sub
in
hlt
test
mov
in
jp
xlat
cmc
cld
push
movl
leave
loope
daa
jno
sbb
sbb
jno
je
in
aam
mov
sbb
popf
jns
add
out
imull
aas
out
mov
pop
leave
inc
push
inc
push
pop
clc
adc
fstpl
mov
in
test
ret
in
mov
pop
adc
jno
lcall
and
lods
sbb
lret
xorb
xor
add
push
push
and
shll
mov
int
addr16
pop
aas
dec
fwait
stos
popf
jns
pop
xchg
ror
cld
push
mov
cmp
cmp
sbb
jns
jnp
xchg
add
push
orb
js
sbb
aaa
out
je
mov
mov
adc
clc
cmp
and
sub
inc
and
testl
xchg
lcall
jb
add
aam
cmc
sbb
pop
sbb
scas
mov
cltd
xlat
sbb
stos
adc
dec
pushf
inc
bound
cmp
inc
int
sub
inc
nop
jge
or
pop
mov
ljmp
lcall
add
repz
aam
pop
gs
and
push
mov
pop
sub
xor
mov
xchg
cmp
sbb
add
mov
loopne
cs
mov
test
cmpb
cld
stos
mov
shll
test
iret
mov
xlat
pop
lds
mov
dec
mov
mov
repz
cmc
stc
pop
sbb
pop
daa
xchg
pop
xor
inc
leave
xlat
es
sub
sub
lea
sbb
movsb
cld
mov
push
dec
sub
pop
fmuls
push
fcoml
inc
js
or
jo
mov
dec
add
inc
out
dec
ljmpw
xchg
sbb
sahf
addr16
xchg
cmp
inc
outsb
bound
jb
into
mov
inc
cmpsl
pop
mov
arpl
inc
pop
lret
add
adc
dec
in
sub
jmp
in
mulb
pop
add
mov
xor
sub
mov
ret
lods
jecxz
adc
imul
out
int3
cmp
pop
inc
pusha
xor
nop
adc
sub
and
push
enter
lret
mov
popf
ret
sarl
mov
cmp
ljmp
cmp
add
cmp
push
lds
mov
fistpll
and
cwtl
idivl
pop
cmc
iret
ja
fwait
cmc
mov
fcmovbe
pop
sbb
mov
cs
and
inc
inc
jb
push
add
flds
test
popa
or
gs
mov
sahf
push
stos
insb
pop
and
mov
push
push
int3
and
push
mov
ljmp
loopne
push
mov
xlat
out
sub
sbb
sub
xlat
dec
lret
sbb
shlb
int
addr16
pusha
mov
inc
ret
jmp
faddl
inc
js
pop
xchg
adc
enter
pop
jno
movsl
mov
test
aas
xchg
cmp
cmpsl
out
dec
inc
loope
std
mov
fwait
jbe
gs
imul
adc
sub
loop
xor
arpl
sbb
sub
shl
in
xchg
and
notb
mov
push
cs
or
leave
mov
cltd
cmp
push
jle
lcall
ret
pushf
mov
sbb
push
jmp
dec
fsub
inc
rolb
pushf
das
flds
inc
sub
mov
add
les
lcall
mov
mov
daa
cmp
or
sbb
inc
rorb
xchg
in
nop
xchg
sahf
add
mov
xor
sbb
lods
ret
decl
or
out
scas
pop
mov
mov
popf
aaa
jge
jl
movsb
cmp
gs
and
mov
add
jg
mov
test
mov
clc
jge
bound
out
mov
mov
or
lret
inc
cwtl
lret
rclb
cmp
pop
adc
loopne
sbb
in
in
xchg
inc
jb
mov
inc
cmp
mov
mov
inc
jbe
mov
stc
cwtl
inc
lcall
mov
cmp
and
stos
push
dec
ljmp
fisubrs
movsb
push
sub
popf
das
xor
addb
jnp
aas
xchg
jge
ret
es
in
fldenv
addr16
mov
mov
leave
icebp
sbbl
sbb
sub
icebp
pop
cmp
add
xor
mov
jno
fdiv
clc
push
es
sbb
sahf
and
into
or
clc
out
out
sbb
mov
rol
call
and
lret
insl
pop
sub
int
mov
orb
bound
out
lock
fdivr
mov
mov
and
cmp
adcb
jo
cmp
mov
cmp
stos
cmp
leave
stos
and
jne
fistps
xchg
mov
adc
or
outsl
lea
loopne
pop
lret
int
inc
push
mov
lea
mov
cltd
adc
scas
ds
ds
xor
mov
cmc
in
aad
xchg
xchg
and
ficoml
mov
das
iret
daa
idivl
pop
lret
outsb
out
mov
mov
repz
sar
scas
dec
add
or
loopne
jge
addb
pusha
idiv
js
inc
mov
imul
ja
insb
cwtl
lods
adc
testb
cmp
out
out
scas
cmpl
inc
test
andl
mov
cmp
xchg
aad
push
pushf
pop
rorl
shll
jb
mov
dec
mov
push
mov
mov
stos
jmp
lret
mov
mov
cmc
es
pop
in
mov
sbb
call
insl
mov
cmpsb
mov
test
mov
pop
or
cld
test
xor
jo
shlb
jb
add
cmp
mov
jecxz
pusha
pop
mov
lds
pop
into
inc
imul
js
mov
shlb
adc
in
xchg
int
sbb
jge
add
and
add
jg
adc
mov
add
cltd
mov
sbb
push
fmull
sbb
push
stos
pop
daa
and
jg
jae
or
sbb
stos
iret
jge
movb
mov
adc
mov
call
dec
rep
mov
adc
repz
jmp
mov
xorb
int3
cmp
push
popa
sub
xor
sub
loopne
rolb
mov
dec
mov
fsin
data16
push
pop
or
jge
repnz
int
cmp
mov
lret
pop
fimuls
nop
sbb
shll
jne
xchg
aad
das
ret
in
sub
into
popa
jo
aam
sub
jne
lea
adc
subb
pop
cwtl
lods
and
mov
mov
and
jl
decb
push
scas
ljmp
ss
lds
push
lds
push
add
das
mov
movl
nop
arpl
fcmovu
loope
mov
cmp
inc
push
out
test
aas
mov
mov
fwait
xchg
xor
mov
sub
xlat
stc
push
daa
sub
dec
jecxz
loopne
je
fstps
push
adc
sbb
arpl
pushf
xor
daa
test
sysret
notl
mov
out
adc
mov
push
inc
xlat
or
jmp
mov
or
fsubl
inc
push
shrl
mov
jge
mov
in
std
jne
xchg
loop
dec
mov
mov
or
shlb
data16
jnp
das
sub
pop
push
mov
js
dec
jae
ret
sbb
xchg
mov
ss
sub
pop
xchg
in
in
push
das
mov
cmp
adc
cwtl
inc
xor
sub
pop
or
jae
mov
nop
pop
lods
xchg
jl
mov
xor
pushf
mov
mov
cli
rorl
notb
add
ss
roll
jno
ret
arpl
pop
test
out
xlat
adc
dec
sub
divl
jle
mov
xchg
cmp
stos
sub
jp
sub
pop
leave
in
jle
or
inc
insb
pushf
xchg
aas
adc
pop
call
sub
push
sbb
in
mov
xchg
cmp
lods
mov
movhlps
shll
mov
adc
xchg
cmc
xchg
mov
jmp
repnz
sbb
int
and
push
out
les
jnp
add
lods
stos
fidivrl
cwtl
int3
jns
dec
push
shll
int3
jo
and
mov
into
add
xorb
mov
repz
xor
int
add
adc
in
fiaddl
cmpsl
shll
or
insl
jno
pop
mov
or
xchg
xchg
jmp
frstor
cltd
and
test
ja
nop
pop
xor
sbb
sub
icebp
daa
pop
decb
mov
fldl
inc
test
mov
push
inc
hlt
cli
idivl
add
and
repnz
jp
cltd
cmc
in
push
in
stc
ror
sub
push
cltd
lea
sbb
lds
adc
sbb
imul
push
call
adc
xchg
cmp
insl
loop
mov
popa
out
cmpsl
xor
sbb
out
leave
ljmp
push
mov
or
ds
arpl
inc
adc
enter
pop
xchg
pop
rcrb
lret
xchg
mov
pop
test
or
das
xchg
sti
lea
insb
sti
and
jae
out
outsb
sub
jecxz
pop
xor
test
popa
cmp
les
mov
xor
out
cmp
xor
sahf
mov
int3
pop
jb
sub
add
jno
es
or
xchg
sub
daa
sub
cli
cmc
jae
cmc
mov
lcall
jge
shl
adc
pop
repz
or
dec
cmp
sbb
push
and
sbb
jg
jbe
pop
cmp
inc
lcall
rcl
xchg
add
mov
mov
in
orl
inc
cmp
push
hlt
divb
or
lds
mov
xor
cmp
xor
outsb
xchg
jns
lds
std
or
inc
dec
cmpsl
mov
out
push
stc
test
xchg
inc
dec
call
ffree
xchg
mov
ret
push
fdiv
add
xor
xchg
xor
pop
xchg
loope
fldl
mov
and
push
pop
cli
mov
adcb
dec
push
data16
ror
fadd
fs
xor
cmpsl
mov
imul
xchg
adc
popa
fdivr
mov
or
pop
jno
aaa
push
mov
pop
cmpb
xchg
push
cmp
xchg
imul
in
in
lret
cmp
cmpb
pusha
outsl
push
xor
xchg
jg
ljmp
xor
jbe
inc
fs
loope
pop
sbb
lret
lret
out
mov
pushf
xchg
sub
sbb
sub
push
faddl
pop
dec
mov
pop
out
and
xchg
out
iret
mov
pop
jbe
das
jg
test
adc
adc
aam
xchg
lea
jmp
iret
or
dec
jno
jge
jge
std
sahf
jb
and
push
faddl
adc
cmp
aas
into
jl
mov
popf
shlb
cs
inc
sbb
sbb
mov
scas
out
stos
pusha
lods
xor
sahf
dec
xchg
jle
cmp
out
sahf
scas
mov
lds
mov
add
xor
ret
mov
adc
icebp
cli
and
outsb
xor
mov
adc
mov
enter
push
sub
jle
mov
call
pusha
push
test
inc
adc
jb
mulb
push
shrb
or
mov
dec
mov
sbb
cmp
int3
in
aam
sti
scas
cmc
cmpsb
xlat
pop
lds
into
inc
mov
push
les
ljmp
pop
cld
cwtl
cltd
push
mov
jl
pop
loopne
mov
or
mov
rorl
add
sbb
push
fidivrl
rcrl
xor
push
mov
es
jo
sub
insb
xor
push
sbb
push
push
and
imul
sbb
push
testb
lahf
and
rol
dec
jmp
pop
adc
xor
dec
pop
out
cmp
lock
ljmp
push
rclb
and
in
adcb
and
mulb
fstpl
dec
cwtl
or
mov
mov
sbb
out
jmp
mov
and
daa
rep
dec
jmp
xor
pop
mov
mov
dec
xchg
inc
imul
sahf
inc
lds
mov
add
ds
scas
push
fdiv
cltd
out
jle
mov
mov
sub
inc
test
test
mov
sti
mov
and
cmpsb
loopne
inc
pop
es
mov
cmp
sarb
iret
lret
sub
into
and
dec
lods
pop
loope
gs
aas
sbb
push
in
mov
mov
xor
inc
cmpb
loopne
scas
in
push
aas
cmp
outsb
mov
xchg
dec
fadds
lock
mov
sub
leave
push
je
pop
pop
fistpl
jl
ja
pop
clc
ss
fsubrs
push
fimuls
divb
fwait
and
push
xor
jl
push
out
ret
dec
dec
cmpsl
insb
xor
pop
xor
xchg
cltd
scas
dec
and
sub
cli
aam
and
xor
daa
adc
sub
dec
daa
shrb
sti
cli
cltd
mov
and
or
out
mov
jo
ret
dec
xor
add
pop
adc
lock
dec
and
push
lea
bound
mov
cmp
pop
call
ret
lea
aaa
loope
push
xor
and
inc
les
gs
ja
pop
stos
or
int
pusha
roll
or
adc
ljmp
adc
inc
mov
xorb
inc
dec
xor
jne
inc
sarb
lock
js
je
fs
mov
aad
mov
mov
xor
cld
jge
in
jp
call
mov
dec
sbb
push
jns
insb
xchg
mov
and
mov
popf
cwtl
daa
add
das
xchg
xor
or
mov
pop
add
pop
mov
cli
cmp
xchg
push
clc
jge
adc
iret
mov
fdivl
jnp
sbb
push
mov
pop
mov
pop
dec
insb
mov
sahf
dec
xor
iret
fcompl
push
icebp
sbb
ret
inc
jae
dec
ljmp
in
adc
or
sbb
insl
jns
sub
outsb
xchg
popa
xor
dec
add
fnstcw
cmpsb
rcrl
sbb
bound
push
pop
mov
add
and
sbb
movsb
xlat
push
xchg
es
or
push
mov
xor
cwtl
js
inc
call
add
int3
gs
je
loope
add
out
lods
mov
push
mov
rorl
stos
popa
pop
fimull
subb
add
aam
imul
fdiv
js
xchg
adc
out
mov
loope
clc
jmp
in
popf
pop
jge
dec
ret
stos
xchg
js
mov
sbbl
rcrl
ljmp
popa
mov
push
inc
adc
repz
mov
in
stos
push
add
mov
mov
mov
out
negb
cmp
xor
cmpsl
xchg
js
cmp
sub
mov
lcall
xchg
and
ficomps
cmp
sub
push
icebp
imul
mov
cmp
testb
scas
push
dec
xchg
sbb
mov
out
es
call
jns
push
dec
test
movsl
pop
mov
xor
cmpsb
inc
shl
sbb
push
outsb
xchg
outsb
sarl
lds
mov
or
ret
mov
add
push
and
hlt
mov
lcall
or
aad
push
loopne
pop
inc
mov
sahf
mov
lds
mov
fwait
jne
clc
lret
pushf
push
pushf
pop
cltd
stc
popf
push
cmp
repnz
inc
out
dec
or
mov
stos
mov
adc
jp
loop
imul
xchg
js
xchg
xchg
xchg
pop
stos
cwtl
cmp
mov
std
cltd
push
dec
ficomps
aaa
add
push
ljmp
stos
sbb
into
sti
push
mov
pop
shrb
pop
jae
icebp
pop
bound
scas
mov
subl
and
and
mov
sub
xor
mov
sub
mov
xchg
ss
push
out
mov
jae
jge
push
mov
jp
gs
ss
xchg
test
lock
push
add
cmp
xor
cmp
pop
inc
outsl
add
lcall
in
sbb
jecxz
mov
icebp
jb
fsubr
fnstsw
jmp
push
pop
mov
push
bound
test
adc
cli
adc
xor
mov
mov
or
fcmovb
insb
sub
pop
leave
inc
out
cmp
in
outsb
loope
jb
adc
inc
sub
das
jmp
push
insl
stc
pop
cmp
out
cmp
sub
scas
int3
fidivs
sbb
push
pushf
adc
mov
outsb
dec
cmp
fidivs
es
repnz
ja
fimull
mov
imull
pop
faddl
add
into
rolb
sub
adc
mov
jg
fs
mov
icebp
adc
bound
inc
stos
fldenv
icebp
pop
or
mov
inc
jge
pop
add
xor
add
rolb
xchg
filds
repnz
je
mov
push
fsubrl
mov
xchg
mov
mov
js
dec
push
jne
cmp
adc
and
cld
outsl
inc
daa
jne,pn
push
dec
mov
dec
jp
daa
in
jnp
mov
jge
sbb
mov
test
mov
sbb
push
fs
or
dec
int
imul
enter
push
inc
les
mov
inc
pop
test
or
repnz
push
or
push
sub
pop
sbbb
sub
and
into
adc
bnd
push
add
dec
cmp
lods
test
ljmp
push
mov
stc
cld
pop
sbb
pop
nop
push
stc
iret
test
pushf
pop
mov
rorl
jle
call
push
pop
adc
int3
push
lods
frstor
in
mov
aam
jmp
xchg
add
jne
daa
sub
clc
xor
and
xchg
insb
xor
push
rcrb
add
out
in
in
rol
clc
sbb
loop
je
adc
ljmp
mov
nop
std
add
rorb
call
ret
or
pop
cmp
fwait
mov
add
jnp
cmpsl
mov
mov
fucomp
lock
lock
addr16
je
mov
mov
and
fwait
std
fmul
lret
pop
cmc
call
pop
mul
icebp
ljmp
mov
adc
jp
cmc
stos
sbb
loope
jne
lock
outsl
popa
mov
push
arpl
imul
iret
sbb
sub
int
dec
jo
stos
cmp
in
leave
push
sub
in
je
fwait
cmc
xlat
mov
push
inc
xchg
dec
cmpsl
sub
jb
movsl
scas
jge
add
mov
ja
mov
popf
leave
add
test
mov
jecxz
fidivrs
sub
js
cmpsl
xchg
insb
inc
push
out
and
lret
das
xchg
lahf
in
pushf
loope
pop
lock
fsubrp
aad
std
in
rorb
mov
mov
fiadds
xor
jmp
ljmp
xchg
fidivrl
pop
fcomi
inc
movsb
addr16
sarb
dec
scas
dec
sbb
mul
into
mov
adc
pop
jl
or
orl
lret
or
stos
test
ja
das
pop
dec
lret
mov
negl
cmp
mov
repnz
pop
mov
out
pop
and
and
leave
xchg
xor
mov
sub
pop
call
xchg
scas
out
ficoml
lock
push
lret
rcrl
insl
out
jge
outsb
cs
mov
test
gs
cmp
pop
sub
sbb
push
jnp
xor
mov
imul
dec
pushf
icebp
jl
mov
int
das
push
ljmp
shlb
cs
out
mov
or
jno
pop
les
push
cwtl
out
clc
push
and
loope
mov
xor
or
and
or
xor
out
adc
shl
xlat
xchg
sbb
lds
mov
and
jo
xor
or
aam
mov
aad
in
mov
test
shll
shrb
or
sti
pop
inc
insl
cmp
ficomps
ja
mov
mov
xchg
and
push
cwtl
sbb
test
cmp
add
cli
xchg
aas
push
repz
leave
adc
orl
push
push
inc
lret
cmp
push
lea
or
pop
mov
cwtl
iret
cmpsl
jecxz
push
lock
rcr
adc
mov
iret
movsl
jl
mov
shr
ret
lcall
sahf
std
cmp
add
mov
dec
notb
or
cmp
fcmovne
aaa
test
and
cwtl
repz
xlat
push
in
out
aas
scas
call
pop
cmpsl
inc
dec
mov
in
ja
mov
xlat
rcr
jno
cmp
inc
push
mov
mov
sub
pop
mov
shll
les
loope
jmp
mov
sbb
fists
sbb
xchg
mov
cmp
fs
xchg
xchg
lret
mov
inc
or
jbe
mov
mov
adc
mov
jecxz
xchg
xchg
aad
sbb
call
xchg
aad
ljmp
movsb
roll
xchg
icebp
insl
fs
pop
jb
fs
mov
call
jecxz
mov
test
mov
in
stos
xor
add
and
dec
sub
dec
test
pop
je
mov
mov
inc
sub
jo
popf
in
or
call
scas
scas
andl
mov
pop
jl
insl
lcall
cs
stos
cmc
and
adc
mov
push
das
lds
mov
pop
adc
popf
jge
jo
xchg
lods
insb
cmp
or
mov
jmp
icebp
and
call
test
out
sub
fs
mov
mov
rol
insl
adc
mov
adc
pop
fildll
xorb
push
iret
xor
in
dec
adcl
jmp
insl
add
inc
sub
int
stc
cli
scas
pop
insl
pushl
or
mov
or
stos
jp
aas
dec
mov
cmp
ss
xorb
xor
ljmp
adc
ficompl
aam
xor
mov
sbb
mov
push
mov
jae
sbb
data16
and
imul
inc
fisttpll
cli
negb
jbe
push
mov
jmp
in
mov
test
sbb
out
das
pop
mov
das
push
shlb
add
and
mov
sbb
adc
jne
clc
push
fsubl
push
mov
iret
sarl
mov
in
jno
sti
ljmp
daa
push
cmp
addl
pop
jp
mov
or
fdivl
xchg
hlt
mov
adc
bound
test
stos
mov
add
mov
cmp
push
loope
pop
mov
clc
sbb
movsl
cli
orl
bound
or
sbb
sub
mov
mov
call
lds
or
dec
adc
jno
xor
call
out
mov
dec
jns
lret
out
imul
in
stos
test
jg
jae
mov
cmpsl
or
push
cltd
xchg
inc
jne
cmp
xchg
sbb
hlt
inc
xchg
push
int
fiaddl
inc
repz
xchg
and
cwtl
adc
cmpsl
leave
cmp
lods
jg
sub
imul
xchg
ret
scas
xor
mov
cmp
aaa
inc
xor
int3
pop
mov
sub
std
mov
lahf
adc
enter
inc
ds
mov
and
idivb
nop
add
insb
lcall
or
push
mov
mov
cli
sub
lret
cpuid
movsb
and
mov
xchg
dec
mov
fnstenv
dec
fstl
call
xor
outsb
cmpsb
loop
xchg
jne
stc
push
in
mov
add
das
stc
push
aad
xchg
pop
mov
outsb
enter
pop
sbb
fucomip
data16
stc
cmpsb
stos
jbe
movb
fdivr
mov
cli
mov
and
inc
inc
addl
test
mov
sbb
and
jle
xchg
jne
xchg
sbb
jnp
mov
pop
mov
mov
mov
cmp
andl
cmp
dec
movsb
test
bnd
xor
lret
jl
mov
lret
pop
push
mov
cwtl
mov
mov
pop
pop
loope
les
push
mov
mov
in
jno
jb
push
push
push
push
dec
xchg
fwait
outsb
push
pop
push
lock
cli
jecxz
mov
sub
cmp
xor
outsb
iret
ljmp
mov
adc
push
ljmp
or
stos
adc
jecxz
cmp
sub
mov
pop
es
lahf
movsl
imul
enter
inc
sbb
jne
push
shll
leave
xchg
pop
icebp
dec
repz
adc
sub
movb
adc
push
mov
pop
pop
int
jecxz
fyl2x
or
jg
xchg
push
cmp
mov
repnz
out
xlat
inc
jno
jle
xchg
cmp
cmp
je
leave
pushl
add
std
jbe
jge,pt
idiv
scas
jae
jge
ret
jns
inc
mov
aaa
imul
sub
fldcw
sbb
dec
mov
add
or
pop
pop
lcall
in
sbb
mov
call
inc
or
sub
mov
out
sbb
inc
iret
ret
cld
sar
pop
adc
into
jmp
call
and
inc
mov
mov
xorb
xor
inc
aas
pusha
jb
out
lahf
inc
mov
pop
loope
mov
adc
fbstp
nop
mov
addl
mov
jge
mov
push
dec
testl
lret
jno
mov
jbe
fs
insl
mov
mov
repnz
jns
inc
push
xlat
iret
leave
rol
xchg
adc
jmp
aam
fs
inc
dec
decb
and
mov
push
dec
pop
in
iret
xchg
fcoms
or
imul
ficomps
sahf
out
cmp
mov
sbb
jnp
xchg
add
mov
stc
loopne
test
mov
lock
and
ret
pop
icebp
arpl
dec
das
push
mov
mov
cmpb
enter
cmp
push
fsubl
cmp
xor
mov
inc
sub
and
cmp
and
mov
cmp
cmpb
sub
mov
cwtl
pushw
add
mov
test
inc
xor
jnp
jle
insl
jmp
pusha
lahf
mov
xor
cmp
lea
je
or
push
add
aas
nop
int
or
aaa
sub
adc
xchg
or
repnz
addr16
and
jnp
call
cwtl
jl
mov
cwtl
and
mov
adc
lret
mov
out
lcall
aaa
push
jae
jp
mov
test
bound
push
push
lods
xchg
rol
sarb
cmpsb
dec
adc
out
mov
insb
lds
pop
cmp
scas
jecxz
mov
xor
shrb
push
inc
pop
push
or
mov
add
sub
sbb
xor
mov
cld
jmp
xor
out
daa
iret
sbb
cmpsl
test
lcall
mov
lcall
mov
xor
add
and
sub
fwait
cmp
stc
jge
mov
and
cltd
pushf
and
test
and
sarb
not
dec
jecxz
or
lcall
or
cmp
dec
rorb
pmaxub
bound
shlb
int3
imull
andb
jp
and
js
jne
mov
pushf
cwtl
pop
je
or
repnz
push
movsl
xor
je
insb
popf
and
test
fildl
cmp
push
xchg
add
add
scas
cmp
fdivl
insb
out
stc
jae
pop
ljmp
inc
sahf
xchg
mov
mov
inc
pop
lods
pop
icebp
je
inc
es
inc
cs
ret
into
sbb
jmp
out
xchg
dec
out
filds
jge
js
pop
or
jl
mov
shll
pop
inc
aaa
jb
outsl
xor
dec
adc
in
dec
movsb
push
jle
hlt
testb
mov
mov
js
or
out
push
jmp
mov
jl
push
mov
pop
popf
ljmp
xchg
ret
jbe
cmp
push
mov
add
vmread
xchg
shll
cmp
aas
cmp
ss
lea
add
adc
mov
icebp
push
cmp
nop
add
cmc
xchg
xchg
and
and
ljmp
sub
fucom
cmpsl
xchg
das
out
jge
fidivs
cmp
adc
xor
shrl
arpl
xchg
addr16
and
mov
inc
push
or
jl
mov
push
rcrb
test
mov
sub
movsb
insl
adc
leave
adc
adc
fbld
popa
sub
push
lahf
cwtl
rcr
inc
ret
repz
mov
addb
inc
stos
sbb
dec
ljmp
out
xor
fildl
dec
dec
jg
xor
jmp
andl
add
sbb
pop
adc
sbb
sbb
xchg
lods
mov
daa
sbb
in
mov
cmp
ja
dec
cmp
push
jnp
pop
jne
mov
adc
xchg
cmp
fimuls
scas
in
clc
cltd
jl,pn
outsb
rolb
adc
mov
out
adc
mov
mov
shlb
daa
mov
xor
insb
scas
add
mov
inc
orl
rolb
sbb
out
jmp
enter
das
cmpsb
hlt
hlt
sbb
jne
and
add
std
cmpb
arpl
int
das
scas
lret
pop
out
loope
lods
jle
loopne
cli
aas
inc
cltd
sbb
push
test
lea
pop
repz
xor
lock
sub
pop
scas
ljmp
inc
xor
fisttps
push
rcrb
add
dec
and
in
push
and
dec
adc
idivl
mov
fwait
cltd
fs
adc
dec
rcl
add
fwait
xchg
jp
sbb
sti
out
lods
insl
arpl
xor
icebp
les
mov
sub
sbb
xchg
pop
rclb
int
mov
fsubrp
xchg
cmp
int
es
and
jmp
jne
cmp
fwait
das
insb
sbb
jbe
fwait
adc
mov
out
and
add
das
adc
cmp
enter
pop
ljmp
mov
cwtl
mov
cmc
lret
leave
outsl
cmp
xchg
jl
scas
jo
push
sbb
outsb
xor
cmpsl
inc
sbb
pop
cmpsl
or
enter
shl
xchg
subb
out
imul
cmc
stos
aad
jb
sub
jae
pushf
sbb
cmpsl
fcmovu
mov
lcall
pop
cmp
fstps
daa
movsl
mov
sbb
or
mov
test
in
push
ret
pop
into
cmp
cmpsb
and
inc
les
roll
popf
cmp
add
out
inc
testl
rcrb
jmp
cmp
lods
add
ds
fwait
daa
ljmp
xchg
stc
je
pop
insb
dec
dec
pop
ljmp
pop
mov
clc
pushf
or
flds
popf
sbb
sti
xchg
sub
flds
test
sub
fisubrl
les
popa
into
sub
sbb
mov
jnp
xor
lret
xchg
xchg
sub
fisubrl
mov
pop
stos
mov
ljmp
push
or
adc
hlt
cmp
sbbb
out
jg
push
in
mov
jl
mov
cmp
mov
leave
xor
popa
enter
dec
mov
hlt
fcoms
xchg
mov
sub
ret
dec
adc
popf
and
xchg
mov
pushf
fwait
cmp
cmp
testb
inc
sub
mov
scas
mov
cmp
or
and
lods
pop
or
xchg
aad
lock
dec
xlat
xchg
dec
dec
or
decb
aas
int
in
repz
ret
cmp
adc
jb
mov
fwait
ds
mov
add
inc
sub
jl
sub
xor
add
test
dec
aad
mov
xchg
outsb
negl
sbb
mov
adc
jge
sub
dec
jle
enter
lcall
lods
sub
xor
cmpb
pop
push
ljmp
mov
xchg
jo
push
mov
nop
xchg
icebp
adcl
inc
repz
pop
jns
lds
pushf
pop
sub
sbb
leave
inc
cmp
sarl
xchg
add
ja
stc
shrl
push
pop
pop
movsl
and
jle
add
or
pusha
mov
stos
sbb
mov
cmc
shrb
cmp
jmp
rep
pop
sahf
mov
inc
mov
pop
pop
rcr
inc
inc
and
xchg
push
pop
gs
nop
movl
xor
adc
icebp
sub
cs
mov
cltd
pop
lock
add
cltd
stc
push
xor
lahf
mov
popf
jne
es
jp
test
sub
jno
xlat
push
jb
in
int
enter
inc
mov
les
inc
jne
cs
outsb
loopne
add
jns
xor
stos
decl
imul
aaa
dec
sub
dec
insb
pop
fildl
xchg
addl
mov
ja
mov
cmpsl
inc
and
jno
cmp
push
in
jge
xchg
push
xchg
bound
dec
xchg
or
jno
mov
jg
pop
mov
push
inc
push
xchg
in
adc
mov
xchg
add
in
push
lods
pop
xchg
cmp
cmp
leave
mov
repz
aam
xchg
pushf
mov
aad
sub
not
loope
repnz
stos
ljmp
xchg
ret
div
cmpsb
xchg
test
mov
sbb
in
dec
xor
and
aam
xlat
mov
or
arpl
adcb
rolb
mov
and
movsb
mov
dec
sub
aam
dec
mov
mov
sbb
inc
and
sbb
mov
lea
int3
mov
inc
inc
inc
push
stos
pop
aas
aam
ret
jmp
pop
nop
add
cli
and
or
fs
cmp
add
jae
sub
mov
test
cld
out
rcrl
mov
lock
cmp
pop
div
cmp
in
cmp
mov
mov
lret
punpckhbw
into
push
jl
dec
ljmp
stos
scas
out
inc
repz
mov
mov
movsb
lret
lock
scas
inc
add
lcall
das
sub
scas
mov
sbb
adc
addr16
out
ljmp
ljmp
mov
call
nop
popa
xor
rorl
mov
outsb
repz
lods
fimull
xchg
mov
fidivrl
aas
mov
cmp
daa
aam
mov
fwait
pop
outsl
push
or
scas
xor
pop
imull
mov
or
addr16
gs
jp
in
int
mov
pop
sti
dec
add
ljmp
jns
mov
adc
ja
sub
cmpsb
push
in
add
ja
nop
scas
faddl
xor
cmp
mov
ficoml
fistl
outsl
fsubrl
imul
out
outsb
inc
je
mov
scas
cld
adc
test
add
insb
sub
mov
or
and
mov
lcall
enter
jns
es
push
imul
jns
and
sbbb
fidivl
jg
inc
add
movsb
and
std
mov
mov
xchg
sbb
fwait
sub
adc
xor
stos
lret
shr
rep
or
mov
gs
addr16
mov
in
ficoml
test
cmpsb
scas
jmp
mov
mov
add
mov
sub
mov
aam
lods
push
xor
dec
jl
sub
sti
pop
rclb
or
pop
mov
test
pop
jecxz
and
in
jae
xchg
hlt
xor
mov
sbb
mov
orb
lahf
jae
popa
cmp
jns
mov
rorl
pop
dec
flds
add
jnp
adc
popa
sbb
dec
inc
ds
sub
lcall
hlt
xor
fmuls
lret
mov
imul
mov
inc
pop
rcrb
roll
push
lcall
int
and
jne
and
fistl
scas
pop
imul
dec
jb
in
adcl
mov
jns
add
pop
inc
out
les
fidivrs
sub
out
or
xchg
aad
jp
bound
xchg
mov
data16
andb
incl
lods
cmp
inc
jg
pusha
int
dec
lret
jg
cmc
ret
push
test
outsl
xor
ret
lahf
daa
xchg
or
sete
mov
jns
rorb
adc
ljmp
sub
lods
sbbb
call
ret
xorb
jp
jmp
and
subb
out
sub
add
cmc
jecxz
push
jno
add
jae
sub
lea
sub
je
jnp
push
xchg
adc
xchg
out
gs
and
lret
pop
aad
inc
lea
mov
pop
pushf
aad
push
adc
xchg
inc
mov
push
push
adc
cmpsb
mov
sub
pop
aaa
insb
pop
dec
dec
mov
jp
cmc
mov
dec
push
rclb
cli
jle
les
fnsave
cmp
stc
lret
cwtl
orb
pop
je
fmuls
sub
cltd
cs
sub
cmpsl
or
fldl
outsb
xchg
xchg
dec
and
jge
cmp
icebp
jmp
or
fimuls
jb
popf
sub
icebp
dec
in
test
pop
das
jns
cmp
mov
or
adc
in
sub
outsl
andb
andl
fists
jg
push
daa
decb
adc
sbb
push
cs
cmp
bound
inc
cmp
xchg
insb
aam
push
mov
jne
or
or
or
inc
das
jg
bnd
ffree
push
mov
ss
add
das
mov
rcrb
inc
jl
jnp
dec
sub
ret
ljmp
jge
dec
inc
push
jo
sbb
and
sbb
cmp
sub
sub
mov
js
in
jae
or
enter
jle
loope
push
jne
arpl
inc
cmp
push
xchg
pusha
fs
push
stos
popa
loopne
push
cmpsb
push
mov
inc
into
sub
inc
mov
mov
or
addr16
cmpl
jecxz
ljmp
mov
out
pop
xor
add
inc
rorl
sbb
test
ret
outsl
inc
mov
movsl
lock
insl
xchg
mov
sub
adc
cmpsb
iret
int3
or
fcmove
fldl
cmp
adc
jne
jecxz
fwait
inc
sahf
js
cmpsl
jle
fnsave
mov
xor
mov
out
xchg
and
adc
or
push
lret
jae
mov
xlat
or
jmp
loope
mul
test
pop
jns
imul
in
or
or
adc
inc
fcmovnu
shrb
loope
jnp
mov
cld
xchg
sub
lcall
es
addr16
pushf
inc
popf
xor
jnp
jge
stos
or
mov
mov
repz
hlt
arpl
mov
pop
and
lret
fstl
mov
fwait
mov
cld
scas
xlat
iret
xor
mov
aad
sarb
inc
push
cmc
jnp
cmp
pop
pop
mov
mov
mov
mov
and
xchg
cmc
adc
pop
ret
mov
mov
jmp
cmp
sub
mov
cmp
cltd
lock
jmp
push
mov
sub
aad
stos
lods
dec
scas
mov
int
in
dec
inc
rolb
dec
stos
dec
push
mov
or
fcomps
push
ret
mov
ljmp
mov
aaa
xor
or
jae
pop
sub
loopne
rorl
ss
cwtl
adc
adc
or
popf
adc
and
pop
outsb
ljmp
test
fldpi
sar
mov
cmpsb
sub
mov
fidivl
fidivl
jecxz
xor
push
imulb
jbe
loopne
push
or
cmp
xchg
xchg
jge
nop
push
nop
nop
shll
je
jmp
movsb
sbb
inc
sbb
out
push
xor
push
subl
mov
jo
ret
call
dec
sbb
test
repz
hlt
push
shll
xchg
rcrl
dec
inc
xchg
lcall
sbb
addl
jl
in
addr16
out
and
hlt
adc
stos
pop
adc
and
cmpl
into
xchg
jmp
ret
daa
popa
test
inc
test
dec
out
por
fsub
or
shrl
xchg
pop
adc
dec
pop
test
test
aas
push
in
mov
adc
lret
out
fstl
jge
xchg
dec
pop
arpl
xor
inc
xchg
cmp
add
or
outsl
data16
std
mov
xlat
lret
pop
adc
das
adc
pop
bound
repnz
daa
loope
add
cltd
and
testw
jl
jge
xchg
lret
xor
mov
aas
mov
outsb
inc
inc
into
aas
pop
xor
xchg
xchg
push
daa
push
mov
mov
add
les
lea
xlat
mov
cmp
add
ss
fistps
scas
push
insl
mov
dec
iret
or
call
mov
jno
fldcw
xor
shr
insl
mov
jmp
pushf
sti
loop
pop
inc
in
xchg
pop
lea
dec
ds
fdivr
xor
mov
cs
jmp
mov
jbe
lret
cs
mov
loop
dec
pop
lods
cmp
or
insb
lret
fists
pop
push
loopne
rol
in
cmp
pop
pop
push
mov
imul
jne
mov
add
xlat
fs
dec
or
inc
mov
idivb
xchg
in
mov
xchg
xchg
ljmp
movsl
cmpsl
inc
stos
mov
rcr
test
mov
call
add
cmp
movsb
inc
push
sub
cmc
lahf
sbb
ficoms
and
inc
loopne
pushf
jp
xor
xchg
jp
loop
mov
xlat
in
gs
ja
mov
stc
fimuls
sub
and
and
jno
les
jae
mov
fsubrs
dec
dec
aas
jns
call
sub
mov
mov
test
sbb
xor
xchg
aaa
incb
in
repz
inc
lds
insl
sbb
sub
call
test
adc
xor
mov
adc
adc
jle
test
bound
mov
jbe
stc
divb
lahf
sub
aam
test
scas
lds
int
rcrl
lods
enter
bound
inc
shlb
add
insb
pop
dec
pushf
test
and
push
push
push
push
pushf
aaa
test
insb
add
ja
shl
or
push
mov
jp
icebp
repz
add
pop
xchg
jecxz
in
xchg
fadds
add
fstps
push
loopne
adc
ret
jecxz
in
push
fidivrl
sqrtps
pop
dec
aam
movsl
pop
cmp
mull
mov
data16
je
adc
mov
add
xlat
lods
adc
addl
enter
outsl
sub
mov
das
sub
pushf
xor
fwait
xchg
outsl
jo
sub
xchg
sahf
jmp
dec
call
add
jl
movsl
shrl
pop
aas
mov
xor
je
mov
pop
shlb
scas
jp
lock
pushf
cltd
pop
sahf
sbb
adc
push
aam
xor
push
and
es
out
in
int3
push
aaa
push
jae
adc
shlb
out
test
xchg
fsubr
rcrl
adc
psubd
movq
pusha
mov
cmp
mov
out
push
fwait
sub
rcrl
adc
jl
push
xchg
adc
xchg
pop
fs
loope
les
insb
lea
dec
push
das
xchg
adc
cmp
jl
xchg
jle
mov
mov
rol
leave
xchg
cmpsb
mov
shl
test
sbb
push
in
test
enter
shlb
adc
add
inc
pop
cwtl
inc
and
mov
ret
pop
xor
divb
out
dec
jne
out
test
sarl
cld
mov
jge
mov
test
cwtl
bound
mov
sbb
lock
mov
jb
cld
mov
xchg
inc
adc
inc
jbe
mov
cmpsl
mov
mov
lds
cmpsb
int3
ret
inc
mov
pop
adc
jae
fwait
decb
scas
push
xchg
into
adc
adc
mov
movb
jecxz
sbb
cmpsb
pop
xlat
shrb
cli
jl
mov
xchg
add
in
xchg
aad
scas
cmp
cwtl
mov
loop
dec
adc
lret
aaa
cmp
cmp
mov
scas
or
sbb
cmpsl
data16
cmp
jae
imul
addr16
call
mov
dec
nop
dec
jnp
or
mov
hlt
shl
pop
icebp
stos
shlb
pop
mov
fisttpll
xor
jp
sbb
js
and
cmpb
inc
stos
les
loopne
cli
in
orl
je
mov
push
xchg
mov
or
jl
imul
sbb
loope
mov
aad
fisubs
adc
in
jo
dec
imul
xor
add
jl
mov
movsb
jle
cs
inc
or
roll
push
adcl
pop
cmp
gs
adc
sbb
jecxz
fisubl
bound
and
cwtl
fs
inc
jbe
sbb
fbld
dec
fisttpll
aaa
std
sbb
mov
xchg
cmp
cs
mov
stos
xchg
ja
add
arpl
lcall
ja
lock
xchg
test
fsubr
inc
outsb
jmp
add
in
fnsave
imul
and
arpl
pusha
int3
sub
arpl
inc
idivl
and
dec
icebp
pop
jae
mov
inc
stos
out
or
inc
aaa
xchg
sbb
icebp
sub
movsl
pop
and
add
jle
cmc
jmp
xchg
mov
pop
mov
pusha
and
sub
mov
adc
cwtl
cltd
cmp
out
call
push
or
cmp
jecxz
popa
mov
push
test
dec
sub
push
pop
das
shlb
mov
adc
jno
jbe
xchg
jle
cld
test
sub
nop
scas
sbb
fildl
adc
js
or
nop
pop
iret
dec
pop
loop
cmp
mov
lods
xchg
sbb
sbb
js
lock
pop
es
cli
arpl
jnp
mov
jmp
xor
into
in
pop
ja
cli
das
mov
sbb
into
jmp
jae
repnz
sbb
test
cli
adc
pop
ljmp
insb
xchg
pop
js
jg
fwait
js
fimull
js
sub
ret
out
pop
push
popl
jp
in
das
loopne
aas
stos
fiadds
into
push
jmp
pop
popf
fdiv
fnsave
add
cltd
inc
pusha
and
out
ret
loopne
std
lret
pop
addr16
or
and
fisubs
push
pop
in
test
lea
inc
mov
and
loopne
aam
sbb
dec
jg
decl
inc
mov
xchg
or
pop
xor
cld
push
lods
std
insl
mov
lds
jne
lock
insb
inc
fcmovbe
pop
sub
imul
xor
inc
xchg
jle
adc
add
mov
test
je
daa
and
and
push
mov
mov
mov
sub
loop
jg
mov
jmp
mov
stos
iret
test
iret
cmp
lret
cmp
adc
xor
xchg
je
push
or
sub
sbb
cmp
push
xor
xchg
or
mov
cmp
mov
addr16
push
sbb
in
es
pusha
sbb
lds
test
je
in
popf
sub
xchg
pusha
xchg
fmuls
xor
lahf
dec
or
push
mov
mov
inc
popf
js
or
negb
push
lea
lcall
out
out
scas
push
rcr
sub
cmp
jnp
adc
lret
sahf
adc
fwait
dec
pop
orps
dec
ljmp
dec
xor
cmpsl
lea
pop
repnz
out
add
test
jne
adc
fisubrs
mov
lahf
lea
call
movsb
pop
add
es
icebp
into
xchg
shlb
pop
ljmp
rcrb
mov
pushf
dec
xchg
xchg
sbb
fisttpll
sahf
pop
imul
scas
push
fcomip
sbb
loopne
pushf
in
xchg
xchg
in
pop
xorl
loopne
fs
dec
rolb
xchg
imul
out
add
cli
addb
add
mov
mov
stc
adc
mov
or
dec
sbb
mov
adc
and
jecxz
testl
sar
mov
mov
push
xchg
cmovb
xor
xchg
cmp
adc
mov
orb
out
cld
aam
lods
xchg
push
add
out
pop
loopne
outsb
pushw
push
test
scas
lods
or
add
mov
and
add
imul
push
pop
mov
sbb
mov
arpl
pop
mov
les
scas
lock
mov
mov
iret
sbbb
test
add
push
mov
or
fdivrl
lret
test
outsb
sbb
orl
jno
imul
movsb
xor
daa
xor
addr16
scas
push
into
cmp
jp
jp
std
cmc
psrld
jb
lea
lods
test
repnz
mov
jne
xor
jae
loopne
mov
or
mov
xchg
shll
pop
jecxz
scas
imul
daa
je
xor
jl
cmc
repnz
ret
sbbl
or
repnz
movsl
test
pop
jo
movsb
sbb
jl
sahf
mov
or
lcall
js
lcall
add
popa
mov
pop
xor
cmp
add
cmp
dec
addr16
mov
adc
xor
jecxz
or
pusha
sbb
test
cmpsl
jne
xor
mov
aad
test
jmp
in
mov
xchg
xor
or
and
shl
add
push
add
fs
insb
fs
adc
leave
dec
xor
xchg
mov
or
xchg
or
xchg
sbb
jp
fcoms
push
or
test
movsl
mov
mov
imul
sub
cmpb
xor
fisubl
int
pop
xor
lods
dec
insl
repnz
popf
lcall
test
in
stc
subb
loop
pop
ja
test
add
xchg
scas
outsl
in
jnp
repnz
cmc
mov
test
sbb
pop
mov
sub
or
fwait
pop
vmovaps
mov
cmp
xchg
stos
aam
xorl
sbb
fucomp
pushf
or
das
xchg
and
mov
and
in
testl
lret
dec
cmp
addr16
mov
pusha
mov
mov
data16
hlt
pop
xor
cmp
aad
xor
cmpsl
stos
pop
call
lret
aam
and
sbb
lret
xchg
jmp
xchg
xchg
aam
mov
scas
ficompl
lock
push
push
outsb
xor
js
out
add
insl
flds
int3
jae
dec
jno
in
out
pop
dec
inc
mov
fsubrs
mov
and
mov
and
jg
xchg
mov
or
sub
and
push
inc
mov
dec
pop
pop
out
sarb
lods
sbb
sbb
sahf
bound
cmp
mov
pop
cwtl
shrl
into
sbb
in
cli
das
inc
daa
dec
shl
xchg
jp
idivl
btc
pop
mov
jmp
test
out
dec
je
adc
sti
mov
test
adc
xchg
popf
icebp
movsl
jne
xor
sti
or
shl
sub
shl
mov
mov
arpl
das
cmp
mov
mulb
jo
jg
stc
test
dec
and
sub
xor
loopne
sub
inc
scas
sbb
cwtl
cmp
dec
js,pn
in
cwtl
int
xor
inc
int3
pop
pop
insl
movsl
and
repz
shl
or
lcall
int
das
jl
in
adc
mov
daa
pop
jbe
mov
mov
pop
mov
xor
aaa
pusha
test
pop
sarl
xchg
cmp
imul
insb
mov
sbb
xchg
and
call
loope
adc
aas
cli
ss
into
aas
out
mov
sti
adcb
jnp
mov
jne
mov
xchg
rorb
cmp
adc
inc
inc
test
xchg
ja
rorl
jno
inc
js
rcrb
gs
inc
mov
out
jae
test
jp
jns
adc
sub
and
retw
das
das
jbe
cwtl
sub
outsb
mov
bound
fcmovnb
leave
lock
fsubrp
push
das
push
repz
push
inc
or
push
xchg
mov
or
inc
xchg
mov
push
notb
and
dec
lock
lahf
ficoms
fcmovnbe
cs
pop
push
lcall
add
lods
scas
inc
cmp
inc
jmp
leave
and
sahf
or
insb
xor
orb
xchg
jo
idivb
mov
cmp
aas
push
or
mov
ja
mov
adc
subl
adcl
or
out
hlt
fwait
mov
sbb
imul
push
xor
mov
cmc
sbb
xchg
aas
aas
jle
and
outsl
je
or
std
inc
add
cmpsl
add
daa
xlat
sti
mov
mov
push
sbb
fsubr
aaa
imul
push
pop
xor
call
shlb
or
cmp
jmp
je
pop
stos
in
ljmp
adc
testb
sbb
hlt
mov
jg
cli
lock
mov
push
push
repnz
jnp
sbb
je
pop
or
cmp
add
out
icebp
sub
jbe
sub
jb
test
loop
roll
xchg
inc
xlat
mov
je
movsbl
lea
adc
cmp
arpl
dec
stos
jae
cmp
pop
push
add
push
or
out
or
ss
pop
push
push
jp
inc
pop
xor
popf
shlb
popa
out
enter
int
xor
push
mov
nop
jl
pushf
ficoml
sti
in
sar
xchg
xlat
or
dec
scas
das
fisttps
aad
inc
mov
in
lods
out
aas
imul
xchg
mov
mov
test
and
sub
cmp
inc
jne
in
pop
imul
pop
push
inc
jg
jl
loopne
dec
dec
jae
leave
pop
popa
and
and
adc
lods
jmp
and
cmp
test
outsb
jae
push
movsb
insb
mov
mov
mov
idivb
jno
pushf
sbbb
and
sub
cmp
clc
popa
adc
pusha
xor
movsb
fnstcw
jnp
jmp
pushf
testb
sub
dec
lods
sahf
fists
adc
xlat
xlat
dec
inc
and
xchg
icebp
frstor
pop
popa
sbb
xor
and
and
inc
or
inc
cmp
dec
sbb
push
pop
fmul
leave
xorb
mov
in
out
mov
cmp
dec
faddl
fmul
rcll
mov
pop
jo
adc
int3
and
fstpl
jne
insl
into
bound
ljmp
in
pop
xchg
jns
mov
stos
pop
xchg
roll
movsl
xchg
jo
xor
lret
scas
fsubl
jnp
dec
out
stc
pop
inc
adc
or
dec
ja
mov
dec
xchg
xor
arpl
shl
jmp
repnz
mov
xchg
aam
inc
dec
inc
pop
jecxz
enter
inc
push
mov
jmp
xor
repnz
cmp
push
xlat
loope
ds
cs
xor
repz
ljmp
dec
mov
jmp
hlt
fdivrl
xor
push
or
icebp
xlat
dec
loopne
and
inc
aas
dec
andl
hlt
adcl
jo
push
add
lcall
mov
adc
enter
ljmp
out
ret
adc
push
das
xlat
or
cmp
aam
inc
xchg
push
sti
push
daa
int
jb
divb
push
mov
xchg
outsl
popf
jbe
jl
jmp
out
lods
push
dec
adc
xchg
dec
aaa
sub
add
enter
in
adc
mov
pop
popf
inc
lcall
cwtl
jmp
cmp
xor
std
leave
enter
mov
sbb
mov
sub
add
jo
push
jle
xchg
dec
mov
out
repz
testb
fcompl
notl
fsub
shll
sarb
fstpt
subb
dec
dec
outsl
add
jbe
call
or
lret
add
dec
stc
mov
bound
push
ret
cmp
mov
xchg
mov
mov
stc
hlt
or
jl
rcl
icebp
dec
push
adcb
push
xor
or
mov
jmp
test
add
xchg
pop
mov
repnz
or
rcr
xor
fs
aas
xor
push
popa
filds
sub
pop
or
sbb
mov
in
mov
inc
pop
pop
int
in
shlb
int
inc
sahf
jo
das
cmp
sbb
mov
jne
mov
shrl
cmc
fs
mov
scas
shr
pop
rclb
out
ror
xor
imul
lds
jp
and
and
pop
imul
xchg
loope
lcall
adc
jecxz
pop
cmc
sbb
push
cmp
dec
js
pushf
push
sub
gs
adc
ljmp
in
mov
rolb
dec
out
inc
add
imul
pop
and
in
cltd
in
shrb
out
clc
popa
test
lds
ficomps
ss
sti
pop
jno
in
jnp
sti
and
jno
dec
mov
fxch
stos
mov
out
xchg
jae
call
cmp
fbstp
stos
pop
icebp
sbbl
push
ja
sarb
sub
icebp
js
movsl
bound
movb
adc
lods
sub
sbbl
sbb
les
xchg
adc
or
push
fwait
mov
aam
cli
sbb
jecxz
and
lods
mov
pop
ljmp
xlat
mull
aaa
mov
insl
les
test
or
jle
imul
js
ljmp
xor
pop
es
mov
cmp
roll
mov
jg
push
ja
dec
pop
ror
push
mov
push
cmp
repnz
sub
add
lret
jp
sbb
xor
stos
lret
inc
mov
dec
dec
inc
xor
stos
xchg
insb
inc
add
shlb
ljmp
mov
xor
fwait
addl
int3
roll
push
sarb
sarl
nop
push
ds
adc
mov
int3
test
or
rcrl
inc
cmp
mov
icebp
in
sub
cmp
sub
and
ret
movsb
pop
inc
movsl
outsl
push
sbb
xor
int3
int
inc
and
xchg
iret
loop
cmpsl
aaa
cmp
scas
push
and
push
or
cmpsb
add
imull
testb
dec
cmp
mov
jbe
stos
aas
cmp
push
push
jle
lret
jge
lcall
sub
test
mov
sbb
testl
dec
lds
sbb
out
fcomps
cmp
mov
sbb
jmp
cwtl
movaps
mov
das
and
fdivrl
rorl
sti
int
sbb
scas
xlat
mov
inc
dec
sar
ds
leave
sahf
mov
sub
and
rolb
jge
aaa
push
xor
jge
xorl
lahf
fisttpll
in
push
pop
call
mov
or
das
aas
repz
int3
xor
std
test
push
iret
std
mov
rorb
xchg
pop
jle
sub
out
and
lods
mov
mov
mov
data16
dec
lods
mov
push
sbb
fadd
pop
push
push
jecxz
popa
decl
les
sub
iret
stos
imul
fcompl
cmpsl
inc
jb,pn
in
push
out
movsl
in
inc
dec
sbb
jns
aaa
iret
inc
push
call
lods
sub
mov
adc
and
mov
cltd
mov
and
fs
add
ror
in
sbbl
rorl
sbb
inc
cmp
movb
repz
lcall
jns
es
jle
fildll
sub
repnz
push
fmulp
subps
bt
mov
jae
mov
xor
jb
int3
dec
jmp
fsts
lock
jl
or
mov
xchg
test
add
sahf
pop
push
mov
stos
test
fdivrp
xchg
cmp
insb
cmc
stos
rcrl
mov
lahf
add
ret
sbb
popf
mov
repnz
mov
iret
adcl
mov
loop
inc
int
mov
in
packsswb
sbbl
sahf
xchg
dec
and
add
inc
ret
inc
aad
xchg
inc
pop
dec
sbb
mov
out
pop
or
jecxz
dec
nop
jno
or
ds
fistpl
inc
mov
nop
jns
std
jecxz
sbb
xchg
popf
xor
cmp
xchg
xchg
loope
daa
jp
cmpsb
sub
dec
addr16
jae
push
testw
hlt
daa
mov
dec
stos
mov
loop
nop
or
pop
cmp
stos
ret
aad
dec
mov
int
outsl
lahf
out
cmpsl
mov
aas
and
add
in
in
or
sbb
hlt
sub
push
pop
testb
sub
into
dec
mov
add
das
fimull
pop
inc
inc
add
enter
js
or
cltd
imul
push
dec
xchg
js
xchg
clc
add
inc
xor
shrb
xor
roll
mov
daa
mov
dec
fists
cli
fists
test
sub
movsb
sub
lock
imul
add
push
or
sahf
outsl
sub
push
fidivrs
int
lahf
jle
repnz
inc
pop
sbb
push
xor
mov
sub
int
xor
mov
cmp
lretw
mov
mov
sti
push
dec
sbb
pop
jle
xor
mov
ss
cli
insl
and
push
xor
fstps
testl
daa
arpl
sahf
or
push
pop
adc
test
inc
fs
inc
outsl
lods
mov
adc
fs
dec
out
lods
push
mov
xchg
and
xor
adc
sub
jnp
cli
pop
cmp
cmp
mov
loope
rclb
add
aas
insb
mov
cmp
scas
push
pusha
dec
pop
pop
lret
cmp
ficompl
or
add
loopne
sub
orl
or
sub
out
and
test
test
rcrb
out
fistl
stos
fcoms
dec
pop
ds
das
pop
mov
or
jno
xor
ret
enter
in
pop
push
mov
cmp
mov
push
adc
lea
mov
or
scas
mov
cwtl
aas
pushf
out
addr16
dec
fisttpll
imul
adc
je
and
ja
sbb
shl
rcll
add
ret
cmc
test
ja
mov
popl
scas
mov
inc
or
outsl
mov
and
add
lods
mov
out
add
outsb
and
call
in
sbb
pop
cwtl
dec
test
cltd
cwtl
shll
mov
test
shlb
mov
pop
clc
xor
dec
mov
jl
cmp
flds
lods
xor
out
in
imul
pop
push
rclb
fincstp
movsl
and
mov
jne
loop
push
inc
adc
dec
fwait
cmp
lret
push
jno
cmc
out
sub
mov
pop
xchg
icebp
inc
pop
and
fwait
popa
loopne
add
jle
ret
fwait
rorl
mov
ljmp
adc
out
inc
out
cmc
ljmp
push
das
dec
aaa
jno
loop
push
add
aam
cld
and
and
mov
mov
mov
or
outsl
lret
pop
push
mov
sbbl
mov
and
in
idivl
mov
mov
push
mov
repz
insb
and
pop
and
aad
loope
mov
dec
jno
mov
fadds
into
mov
xchg
mov
andl
out
aaa
cmp
movsl
lret
lds
movsl
scas
cwtl
cmp
add
in
push
push
inc
and
sub
sti
shlb
push
sub
pop
std
cmp
mov
lea
fnstenv
xchg
sti
inc
xor
mov
leave
repnz
sarb
scas
xor
scas
and
push
mov
xchg
push
daa
lock
add
pop
out
push
sbb
xchg
jno
hlt
mov
mov
push
aam
inc
sbb
mov
push
jmp
testb
jns
enter
jp
ljmp
mov
mov
sti
add
xchg
imul
or
lcall
outsb
mov
push
shlb
mov
sub
cmp
lds
fs
xchg
repnz
lods
mov
inc
pop
adc
arpl
xchg
push
add
inc
sahf
mov
in
xor
sbb
test
bound
mov
mov
loop
loopne
xchg
aam
pushf
xchg
stos
push
arpl
and
xor
pop
outsb
scas
mov
ret
jecxz
daa
xchg
loopne
stos
sbb
xor
mov
int
fiadds
push
inc
pop
cwtl
rclb
adc
lcall
call
inc
outsb
test
mov
cli
lea
fs
adc
out
xor
dec
lods
and
add
iret
mov
mov
xchg
outsb
jmp
mov
repz
sbb
mov
int3
adc
loopne
pop
pop
jns
push
daa
fmul
mov
in
push
lretw
lcall
mov
stos
addr16
xchg
inc
inc
sbb
adc
dec
push
mov
jbe
and
fidivrs
sbb
jbe
or
int3
test
mov
mov
jle
xchg
je
repz
stc
mov
lcall
mov
xor
lcall
repnz
ja
add
gs
iret
jb
pop
sbb
inc
mov
push
sbb
ret
icebp
pop
sub
mov
cltd
push
xor
sahf
mov
popf
push
lahf
repnz
mov
push
xchg
imulb
loopne
sub
xlat
xchg
push
jmp
cmp
insl
xor
add
cs
ret
cwtl
dec
mov
sti
or
add
into
shrb
or
out
ret
xchg
jnp
and
test
push
hlt
test
jg
int
sub
jmp
mov
xlat
pusha
outsl
xchg
enter
dec
dec
push
lcall
jb
mov
loope
es
push
ja
add
fwait
sub
push
aad
sub
sub
mov
pop
sarb
mov
dec
xchg
jmp
pop
addr16
shl
xchg
xchg
sbb
xor
lret
sbb
mov
sub
pop
cli
xor
push
repz
mov
imul
add
add
xor
mov
push
mov
mov
jmp
aam
fwait
mov
xchg
das
out
xchg
shlb
enter
jmp
lods
xor
mov
mov
jl
sbb
add
rcr
inc
xor
in
mov
sbb
insb
les
aas
dec
out
pop
jge
fisubl
jno
in
pop
sub
mov
mov
gs
inc
int
call
adc
add
pop
das
cmc
out
ds
cmp
insl
mov
jo
ja
dec
pushf
lret
mov
ds
mov
je
adc
jns
pop
push
shll
push
sbb
leave
jbe
sbbb
addr16
xor
add
lods
jnp
adc
xor
jb
fwait
adc
add
ret
cmp
mov
sub
jle
mov
lods
jle
jge
adc
push
and
ficompl
inc
cmp
mov
xchg
jmp
sbb
sbb
mov
add
cs
inc
int
rcl
push
ljmp
insl
pusha
fisubs
jb
std
pop
popa
adc
popf
jg
shrb
mov
out
mov
sub
repz
sub
lcall
or
aaa
pushf
mov
lods
xor
xor
test
dec
int3
pop
mov
mov
push
jno
cmp
mov
mov
cmp
adc
lods
insb
adcl
andl
clc
mov
jge
mov
dec
sti
addl
cmp
bound
and
mov
popf
push
popa
add
in
mov
pop
push
push
cmp
mov
arpl
jecxz
popa
ficoml
add
jno
push
mov
shll
push
rcrl
sarb
neg
dec
aaa
fdivrl
sarb
fdivs
arpl
test
dec
mov
addr16
test
insb
or
xor
les
loop
sub
jae
jne
in
rclb
aaa
ss
mov
popf
adc
jns
out
bound
fs
into
jle
dec
cmp
xor
and
cli
es
fs
inc
pop
shrl
rcll
add
repz
mov
movsb
xorb
sub
jbe
repnz
add
sbb
cmp
das
ss
inc
enter
insb
subl
xor
outsl
dec
iret
mov
jge
fldcw
in
add
stc
sahf
in
add
jg
sbb
jns
test
cmc
shlb
icebp
push
cld
sbb
andl
fs
loop
add
mov
pop
loopne
stos
jo
lcall
push
jnp
push
les
push
sarb
iret
iret
dec
dec
mov
jae
stos
cmc
lahf
mov
cwtl
mov
shr
ret
mov
aas
jne
xor
xchg
inc
mov
sub
je
out
popa
mov
sbb
mov
add
test
sti
jae
xchg
out
aas
xchg
dec
popa
and
xchg
pop
subl
pop
mov
idivl
sbb
movsb
test
js
adc
mov
data16
insl
mov
jo,pt
jne
daa
mov
or
sub
aas
sarl
mov
mov
inc
mov
cmp
push
cmpsb
and
inc
jge
cmp
testb
push
dec
dec
push
jne
mov
adc
pop
std
mov
popa
sbb
rcrl
repz
cmp
addl
or
xchg
push
movsb
cld
lcall
int
add
jno
cltd
sti
push
ret
or
je
pop
lock
sahf
mov
movsl
imul
inc
push
pop
subb
out
out
and
cmpsl
into
sub
or
cmpsb
fildll
inc
jb
push
outsl
jo
push
push
daa
or
jecxz
test
fwait
sbbl
pop
imul
cli
and
mov
jmp
mov
inc
data16
aam
out
out
pop
cltd
xor
faddl
jge
in
cmc
pushf
adcb
and
push
or
dec
push
cmp
ficomps
pop
int3
mov
sbb
add
pop
adc
int
cwtl
cmp
dec
in
and
mov
pop
fnstenv
dec
leave
mov
outsl
sti
mov
mov
mov
repnz
imul
enter
xor
mulb
pop
pop
cs
aam
add
xchg
xchg
mov
or
testl
out
test
ljmp
pusha
fcoms
mov
or
inc
or
js
fdivrl
add
out
arpl
pop
pop
stos
sbb
pop
inc
mov
mov
xor
sub
daa
cs
icebp
jge
push
mov
pop
aad
ljmp
xor
push
lods
imul
add
sbb
lcall
int
sbb
sub
les
xor
aaa
push
adc
arpl
lahf
mov
cmp
add
mov
int3
xor
ss
mov
js
mov
adc
ret
mov
hlt
cmpsl
loope
out
adc
sbbl
stc
mov
aam
fists
mov
jno
pop
dec
inc
lahf
xchg
mov
sbb
loope
ljmp
lea
cmpsl
inc
xor
lahf
xor
xchg
loop
jne
sahf
and
jmp
lods
hlt
das
pop
icebp
xchg
or
cmp
xchg
push
daa
negb
stos
fildl
add
loopne
inc
cmp
sub
inc
dec
addb
pop
and
in
cmp
int3
mov
push
ss
loope
mov
fmul
push
sub
daa
add
pop
andl
push
dec
push
fwait
testb
mov
call
sub
fsubr
arpl
icebp
test
xrelease
arpl
aaa
mov
loopne
sub
in
push
adc
mov
es
fucomp
rclb
test
inc
and
popa
push
ret
mov
das
jg
ret
mov
push
or
xor
in
cmp
fcomps
test
xchg
dec
sbb
or
xchg
out
sub
pop
mov
add
cmpsb
xchg
adc
addl
sbb
popa
dec
cltd
adc
and
fcomp
jae
daa
adc
cs
sub
dec
xor
inc
adcl
sub
clc
jecxz
clc
in
ficomps
adcb
inc
push
mov
jl
and
push
cli
popf
push
sbb
rcl
inc
adc
jg
jl
movsl
popa
cmp
lods
inc
push
xchg
pop
or
ds
cmp
adc
cmp
lcall
xchg
mov
nop
leave
mov
push
cmc
lret
bound
std
and
iret
mov
push
dec
insl
push
inc
dec
push
sbb
or
scas
cmp
icebp
in
and
popa
rcrl
cmpb
scas
or
ret
mov
add
dec
inc
mov
testb
add
outsb
stos
mov
lds
mov
lods
clc
ret
cltd
daa
mov
or
imull
lods
inc
lret
mov
pop
sub
das
or
int3
mov
add
mull
sahf
repnz
cmp
fwait
mov
xchg
pop
std
lcall
dec
cmp
add
adc
adc
cli
mov
pop
mov
es
mov
jae
stos
in
sub
adc
mov
sub
inc
xlat
mov
inc
xchg
stos
fs
mov
lds
lahf
negl
dec
fistps
pop
inc
xchg
das
test
std
lea
std
add
xor
dec
outsb
es
mov
nop
enter
sub
sub
test
out
test
outsl
mov
sbb
loope
jb
and
fsubs
pusha
adc
pop
sub
add
push
pop
dec
mov
sub
lret
int
xchg
and
adc
cmpsl
mov
or
pop
fdivr
mov
cli
jo
xorb
sub
push
pop
call
xchg
inc
ss
outsb
push
jmp
pop
push
inc
mov
mov
scas
in
dec
sub
mov
scas
add
and
cs
outsl
dec
pop
pop
sti
imull
inc
aas
xchg
ror
mov
stos
sbbb
cmp
mov
dec
and
fisttpl
dec
or
je
ja
cmp
je
sub
sbb
jle
mov
mov
or
ret
cli
xchg
xchg
mov
pop
arpl
ja
xchg
inc
jp
sub
in
lods
scas
shl
mov
inc
lret
push
pop
mov
xchg
mov
iret
dec
mov
adc
aaa
sub
add
push
in
adc
cmp
jne
xchg
cmp
jo
jbe
movsb
mov
jb
lea
loope
xchg
bound
pop
aas
mov
stos
adcb
ret
or
mov
xchg
pop
push
cmp
mov
mov
adc
clc
push
lods
es
je
jmp
lods
mov
xor
jo
out
ja
or
and
sahf
dec
jno
mov
xchg
fcomi
outsb
cmp
jp
push
outsl
cli
inc
dec
pusha
or
xor
call
jbe
jecxz
pop
mov
xchg
clc
out
les
sahf
test
stc
std
hlt
das
cmp
push
das
into
aam
clc
test
xor
loopne
ret
mov
push
shlb
stos
aaa
mov
out
shll
ja
in
adc
je
data16
aaa
cmp
pop
mov
cwtl
cmp
pop
test
call
test
sub
bnd
add
push
out
jg
adc
cmovle
clc
push
mov
xlat
dec
fistps
push
sar
cmp
ss
pop
push
mov
mov
mov
xor
xchg
sub
inc
ficoms
xchg
sbb
dec
jnp
mov
out
cld
sbb
jecxz
mov
inc
sub
lahf
mov
mov
in
repz
pop
andl
jl
loopne
pop
jmp
jb
xor
or
out
test
aas
mov
mov
shll
aam
movsb
mov
cmp
outsl
mov
and
pop
xor
push
out
push
dec
jns
lock
leave
push
cltd
loop
push
rolb
mov
dec
push
mov
out
jg
inc
cmp
cmpsb
mov
fidivs
cmc
pop
push
sti
outsb
mov
push
push
push
addr16
or
cmp
push
ja
jae
js
jge
repz
jns
inc
xchg
fdivrl
xor
mov
shl
rorb
or
stc
sahf
dec
in
or
aad
fimuls
add
sub
out
test
fldl
jmp
pop
aam
mov
icebp
xlat
mov
cltd
jae
nop
xor
push
dec
add
outsb
jae
mov
push
shl
das
adc
pusha
inc
fwait
push
adcb
jno
pop
inc
and
or
mov
mov
push
cmpsb
pusha
out
push
xchg
lods
clc
fwait
outsb
xor
out
scas
sub
cmp
pushf
xchg
jae
jmp
or
mov
enter
popf
mov
sub
sbb
je
jb
daa
pop
cmp
data16
sahf
or
mov
faddp
xchg
aas
imul
ja
sub
pop
and
xchg
mov
mov
test
movsl
mov
jp
sbb
push
fbld
xchg
das
sub
fsubl
test
jmp
loop
rcrb
dec
pop
sbbb
or
mov
dec
cwtl
mov
fadds
xchg
jmp
or
fidivl
mov
push
sahf
mov
fisubl
dec
fcoms
out
push
aam
scas
inc
dec
add
sub
aam
test
mov
rclb
jp
daa
insb
jb
lds
pop
sbb
repnz
push
cmp
mov
or
dec
cmp
inc
stos
insb
lods
shlb
and
mov
lock
repnz
inc
das
rorb
call
and
mov
fdivrs
mov
mov
flds
ljmp
mov
repz
cmpsl
mov
and
ret
and
mov
cmp
sbb
jno
lods
mov
jo
add
push
mov
cmp
or
mov
add
loop
hlt
adc
jmp
call
jne
test
xor
jle
mov
fldenv
dec
sub
outsl
sbb
pop
leave
or
push
xchg
sbb
test
sub
lods
loop
daa
shl
sub
xchg
int
push
movsb
data16
pop
inc
mov
xchg
sub
mull
repnz
stc
fadds
movsl
adc
adc
les
mov
push
or
mov
int3
fs
fs
dec
inc
jle
cmpsl
sub
pusha
fnstcw
jmp
sarl
xor
or
add
ss
pop
cs
loop
outsb
xchg
nop
into
inc
out
call
nop
dec
lahf
outsl
mov
and
sbb
stos
shrb
ret
sbb
test
sub
mov
cmpsl
pop
ljmp
repz
mov
lahf
leave
jecxz
mov
sti
push
mov
xor
ret
inc
jle
in
xor
pop
push
test
test
rcrb
mov
mov
ret
fistps
testb
push
iret
cmp
mulb
pop
daa
mov
call
pop
imul
cmpsb
push
hlt
dec
pushf
ja
decl
imul
adc
cs
ret
imul
pop
in
ja
xor
incl
daa
inc
dec
cltd
dec
or
xchg
aaa
ss
sbb
jo
out
push
adc
or
out
ss
inc
mov
hlt
scas
cwtl
andb
addl
aaa
dec
dec
iret
sub
mov
enter
movsl
movsb
xchg
mov
mov
scas
dec
mov
dec
and
push
xor
and
ljmp
into
cmp
mov
sbb
es
ret
pop
lds
fsub
mov
ljmp
je
jl
pop
je
in
inc
fldcw
loopne
xor
testl
dec
push
sub
xchg
mov
inc
call
pop
pop
xchg
jg
outsb
lods
divb
lret
iret
and
sbb
inc
adc
test
imul
jnp
fs
shlb
test
cmp
and
cmp
popa
gs
push
mov
and
mov
enter
push
lds
cld
out
in
test
mov
cmp
mov
and
sub
loope
pop
sub
adc
icebp
xchg
xor
dec
jno
adc
in
int
sbb
out
jl
inc
jmp
mov
call
stc
pop
movb
xchg
sub
jb
or
pop
divl
cmp
mov
into
xlat
cwtl
sub
mov
popf
arpl
ficomps
les
popf
and
in
clc
testl
enter
lret
loop
je
sub
mov
je
inc
or
lods
mov
outsb
xor
in
xlat
es
cs
mov
xor
jecxz
adc
test
and
out
test
shl
mov
sub
xor
test
sahf
pop
repz
pop
in
xor
add
push
ja
stos
in
xchg
add
sub
mov
call
pop
test
rcl
cli
jle
mov
jp
pop
jne
out
sti
push
in
or
mov
out
faddl
mov
adc
jns
mov
imul
or
cmpsl
jno
test
outsl
jmp
sbb
lret
inc
jo
outsl
insb
add
fwait
hlt
fadds
push
addr16
nop
mov
movhps
dec
ljmp
in
je
mulb
jbe
push
push
or
das
dec
inc
sbb
mov
aas
inc
scas
in
das
mov
lahf
xchg
aaa
or
adc
aad
popa
dec
aad
fisttps
lret
pop
ret
int
dec
adc
jae
cmc
push
lods
sub
cmp
push
out
sub
ss
cmp
mov
push
enter
test
mov
jp
dec
leave
cs
mov
in
or
dec
sbb
mov
out
out
xor
or
xlat
dec
loopne
mov
add
rcrb
pop
sub
loope
outsl
inc
lea
gs
fstl
call
pop
pop
in
push
sarl
movsb
fsts
int3
xor
lahf
adc
enter
jp
sub
pop
out
adc
sbb
mov
pop
lods
inc
mov
mov
sub
movsl
dec
rcrl
and
imul
into
and
cltd
dec
cmpsb
femms
dec
mov
mov
pop
push
dec
jnp
shrb
and
sbb
mov
addr16
insb
stc
or
jne
sub
lret
stc
je
repz
and
imul
push
jne
push
aad
inc
xor
ror
lea
push
pop
and
lock
in
cmp
push
pop
inc
dec
test
sbb
mov
mov
adc
pop
pop
lretw
mov
mov
pop
jge
pop
sbb
pushf
pop
inc
pop
stos
es
mov
or
pop
xchg
pusha
jl
pop
add
sbb
mov
sub
mov
cmp
jg
sub
fcompl
lods
add
jo
fnstenv
sub
and
scas
repnz
int3
jge
roll
jb
mov
pop
jb
into
fidivrs
jle
ds
add
insb
cltd
or
icebp
inc
sbbb
inc
sub
mov
jo
mov
hlt
shlb
jp
jno
add
jae
mov
jae
jo
add
ret
mov
fwait
adc
or
movsb
dec
js
xchg
fcoms
add
jb
pop
jae
push
jns
push
test
sti
mov
xchg
movsb
es
xchg
ds
xchg
or
push
and
push
rorl
push
addr16
jg
xchg
sub
inc
pop
dec
push
sub
in
jmp
push
arpl
arpl
sbb
push
iret
sub
jmp
jae
insb
cmp
pop
jmp
or
subb
cmpsl
xchg
mov
sub
jmp
mov
sub
or
hlt
jne
pop
out
xor
pop
loop
ja
test
dec
call
xchg
nop
adc
sbb
nop
push
sti
imul
sarb
adc
fldcw
std
xor
add
out
ret
jl
pop
ds
movsb
jge
loop
mov
mov
dec
and
xor
jns
mul
test
bound
in
movsb
mov
int
inc
out
jmp
xchg
jle
imul
icebp
sub
popf
scas
dec
push
es
stos
stc
imul
stos
jge
xor
pop
add
mov
pop
mov
xlat
sub
add
fidivl
stc
lea
mov
or
ret
mov
lods
pushf
cmc
sbb
dec
out
mov
or
scas
jecxz,pn
adc
jge
mov
cmovbe
add
cld
stc
or
xor
push
clc
inc
cmp
icebp
mov
push
sub
dec
inc
xchg
out
and
inc
xchg
sbb
jbe
cmova
jmp
adc
or
pop
fmul
enter
push
xorb
inc
pop
fsubrl
lods
in
daa
out
jno
and
lahf
or
cmc
push
lcall
jmp
stos
cmp
sub
add
js
mov
mov
add
inc
sub
pop
shll
ret
test
sub
jg
inc
and
aaa
mov
jnp
lahf
mov
mov
sbbl
cli
pop
dec
inc
int3
pop
cmpb
dec
lret
inc
jne
and
mov
lahf
jecxz
sbb
in
sub
arpl
in
popa
xchg
adc
cmp
aaa
xchg
gs
inc
testl
pusha
adc
jge
insl
ja
int
test
inc
inc
lds
testl
adc
cmpsb
jp
mov
sbb
xchg
popa
push
fbstp
test
leave
rorl
jl
imul
rcll
push
in
shlb
je
mov
fmuls
cmp
pusha
test
mov
push
repz
sub
dec
jecxz
loope
movsl
lret
xchg
ret
les
inc
dec
jge
mov
popa
lret
xor
movsb
sub
ljmp
nop
fcompl
inc
lret
loope
mov
aad
stos
adc
pop
mov
outsl
mov
es
cmp
dec
mov
ficomps
enter
pmaxsw
jnp
mov
and
cmp
lds
jbe
push
inc
mov
sub
cmp
aas
xor
jg
mov
xorl
sti
lea
enter
fimuls
aas
dec
mov
mov
jno
fwait
mov
xor
test
aad
dec
ja
push
lock
xchg
scas
outsl
daa
mov
je
out
in
dec
push
xchg
lcall
cmp
cwtl
push
pop
jg
in
lods
movsl
out
push
mov
adc
mov
shl
sub
cmp
sahf
xchg
jbe
lods
cs
cltd
or
mov
inc
xchg
shr
rcll
jecxz
mov
int3
bound
and
jl
mov
push
mov
fwait
and
fwait
xchg
sub
movsl
mov
ret
sbb
adc
xlat
xchg
pop
mov
stc
push
int
dec
pop
sub
cmp
lcall
out
sub
and
and
xchg
pushl
and
jbe
fsubp
sahf
loop
cmpl
xchg
cmp
hlt
jp
stos
lods
pop
daa
out
fistps
aaa
loop
in
push
push
mov
fwait
and
pushf
or
in
inc
mov
mov
stos
aad
pop
aas
adc
adc
xchg
out
cmp
pushl
imull
xor
jp
pusha
pop
stos
mov
xor
mov
out
std
pop
sbb
les
mov
stos
push
mov
ret
push
cs
cmpsb
mov
and
daa
testl
sbb
push
push
push
inc
lahf
je
jae
and
inc
testl
mov
inc
xchg
mov
sub
push
adc
je
mov
cmpsb
mov
push
xchg
sub
mov
and
push
jmp
cmp
aad
inc
or
pop
repz
cmp
scas
jl
jmp
lret
xlat
lahf
pmaxub
and
pop
jb
or
xor
pushf
mov
xchg
mov
dec
outsb
insl
dec
xor
test
jae
std
add
ss
movsl
push
adc
pop
daa
mov
push
or
xor
xor
lea
pop
repnz
std
roll
dec
std
inc
arpl
and
repz
pop
xchg
in
outsb
adc
mov
xor
mov
sub
faddl
in
clc
stc
xor
jmp
int3
inc
sbb
add
pop
adc
cmp
inc
xchg
aad
nop
and
sbb
test
cmp
jmp
cld
outsb
adc
cmp
cmpsl
testl
call
imul
adc
jne
imul
movsb
mov
repnz
int3
jg
imull
adc
dec
pop
cli
mov
stos
sub
sar
mov
mov
jmp
or
fwait
in
inc
jle
fs
shlb
push
sub
jae
ret
or
outsl
xchg
dec
xchg
or
leave
repnz
lahf
mov
adc
inc
clc
lcall
mov
jl
and
push
rol
or
lods
scas
add
dec
pop
nop
push
pop
push
inc
push
mov
int3
add
mov
mov
or
mov
rcl
fcompl
lcall
fs
dec
cmp
sub
jle
test
fnstsw
mov
scas
loope
aaa
sub
xor
xor
ds
sbb
shlb
shlb
cmc
jae
cmp
adc
inc
pop
sbb
inc
and
cs
sbb
jl
ljmp
iret
mov
mov
inc
push
sub
jbe
pop
or
or
inc
cmc
and
mov
aas
cmpsl
sbb
or
pop
loop
icebp
xor
mov
bound
shlb
xchg
cmp
xor
imul
sub
cmp
mov
inc
pop
rcl
imul
pop
repz
clc
xchg
xorl
addr16
pop
rorl
xor
iret
jnp
add
loope
cmp
mov
jle
stos
pop
pop
inc
rcrl
push
jnp
gs
rolb
adc
jg
xchg
sbb
xor
sub
stc
and
js
fs
in
mov
mov
fprem
mov
sarl
pop
mov
outsl
loopne
or
in
movsl
out
xchg
jbe
mov
xor
push
pusha
pop
push
mov
out
jb
dec
add
fsubrl
call
cmpsl
rcrb
loop
jl
data16
inc
cmp
jb
hlt
dec
arpl
fistps
movsl
xchg
xchg
movsl
fsts
mov
popa
out
mov
dec
cmp
and
aad
lock
cmpsb
in
mov
cmp
add
jno
pop
mov
inc
dec
ja
cli
fsubl
jg
pushf
outsb
jmp
int
sbb
lods
dec
pop
movsb
call
int
cmpsl
pop
fs
sub
fmull
inc
dec
cmp
push
push
movsb
lods
push
hlt
icebp
inc
mov
fcompl
mov
adc
mov
in
orb
ret
jne
aaa
dec
ljmp
xchg
dec
outsb
xchg
mov
mov
iret
lea
cmc
out
cmpsl
insl
das
mov
xlat
mov
int
mov
repz
push
cmp
ja
pop
push
mov
push
test
aas
mov
aas
shrb
arpl
pop
mov
push
test
hlt
lcall
jmp
test
imul
or
into
test
aad
outsb
mov
lds
test
call
cmp
mov
push
push
daa
cmp
pop
dec
mov
xlat
inc
fcoms
into
inc
out
sbb
gs
sbb
lods
ja
and
pushf
push
xor
push
andl
movsb
fs
push
scas
movsb
popa
xchg
dec
loop
dec
jae
mov
mov
rcrl
sub
inc
rcl
push
sub
xchg
in
lock
dec
mov
popa
mov
sub
ficoml
pop
dec
repnz
cmp
movsb
mov
jnp
outsl
stos
lods
cmc
cmp
cmc
int
inc
cmp
dec
jge
in
fistl
into
jno
lahf
arpl
js
loopne
jne
sbb
and
lds
fsubrs
mov
test
sub
nop
ss
lods
mov
jmp
xchg
pusha
ss
daa
push
xor
xchg
push
push
sti
jge
ret
movsb
mov
fs
dec
mov
test
xor
sbb
popa
int3
movsl
cwtl
inc
jae
into
cmpsl
sub
test
push
mov
std
cli
mov
jae
out
dec
jle
loopne
push
stos
scas
sub
xchg
in
lret
lcall
sti
lcall
lods
orb
stos
ljmp
into
pop
lea
add
mov
jb
ja
add
loope
jns,pn
jg
adc
ficoml
or
mov
xor
push
dec
mov
sbb
adc
inc
jmp
sub
out
mov
sbb
cmp
and
mov
xor
add
cmp
xchg
pop
je
fbld
icebp
or
cs
fwait
int
and
orb
jmp
dec
ja
jl
mov
xchg
lock
sarl
les
inc
fstpt
add
fiadds
xor
pop
dec
xchg
das
add
add
subb
pop
and
mov
xchg
mov
iret
mov
and
cmp
int
push
mov
ror
cltd
ret
popa
push
dec
or
stc
jle
sarb
insb
jns
mov
test
jns
pop
ror
and
lcall
rorl
mov
and
popa
mov
cwtl
xchg
movsl
jbe
pushf
ds
ret
pop
cs
aam
pop
outsl
push
mov
enter
adc
and
xor
mov
inc
hlt
gs
mov
mov
ja
push
cmp
inc
jl
dec
js
loop
sbb
insl
sahf
push
ljmp
fnstenv
outsb
mov
repnz
jmp
lcall
jno
xchg
dec
sahf
fisttpl
lahf
lret
cwtl
jno
xorl
push
pushf
test
in
ficoms
or
pop
leave
jae
out
stos
cs
out
mov
pop
dec
mov
arpl
pusha
xchg
xchg
dec
popf
xor
push
mov
js
sbb
or
add
aam
sbb
pop
out
ds
dec
xchg
mov
fdivs
lods
aas
out
xchg
movsb
sub
mov
mov
mov
mov
xlat
iret
jp
pop
mov
movsb
dec
xor
and
cmp
mov
sbb
lea
pop
insl
sub
jae
pop
rol
dec
cmp
xchg
das
push
loope
outsl
nop
cltd
xor
xlat
fsts
mov
cmp
jo
dec
cmp
outsl
inc
cmp
fwait
in
dec
jns
outsb
add
jp
xlat
ds
pop
and
xor
xor
sarb
idivb
arpl
std
leave
sarl
outsl
cs
fsts
dec
inc
nop
xor
adc
cmp
and
lds
pop
push
inc
xor
out
cmp
out
adc
mov
xor
mov
fdivrs
dec
xchg
cli
shl
xchg
std
cmp
mov
enter
mov
inc
push
jmp
sub
addr16
in
roll
icebp
scas
ljmp
jle
mov
jb
jl
inc
int3
dec
mov
fstpl
incl
sbb
push
sarl
dec
and
xchg
imul
mov
push
ljmp
rolb
outsl
xlat
add
decb
imul
xor
ljmp
xlat
push
iret
lcall
pushf
insl
test
xchg
gs
mov
or
fwait
inc
sti
lcall
adc
sub
movd
hlt
or
data16
cwtl
mov
lahf
cmc
push
mov
add
sbb
jns
nop
adc
and
gs
in
sub
or
cmp
hlt
add
and
mov
sbb
scas
mov
mov
leave
icebp
sub
xorl
push
pushf
out
jbe
dec
fs
and
dec
cltd
inc
jnp
into
mov
lcall
inc
outsl
sub
mov
movsl
adc
das
mov
add
and
xor
mov
inc
xchg
in
cwtl
sahf
and
outsl
adcl
mov
push
testl
mov
mov
loop
popa
xchg
inc
adc
mov
movsb
push
nop
push
push
mov
loopne
bswap
mov
fcoms
icebp
aad
daa
mov
add
add
icebp
loope
mov
ljmp
cmp
bound
enter
jns
xchg
sbb
mov
mov
test
stc
stc
add
scas
in
iret
mov
lods
ds
inc
adc
mov
fwait
lcall
sbb
inc
dec
mov
rep
ljmp
js
pop
and
loopne
sar
sbb
push
lods
pop
push
rorl
std
arpl
ucomiss
adc
mov
dec
jae
jmp
xchg
fildl
movl
jl
or
inc
push
test
lea
add
popf
mov
xor
dec
cli
dec
jl
add
add
movsl
imul
mov
jbe
div
ret
mov
or
inc
push
int3
mov
rcll
into
lret
cwtl
je
cld
icebp
out
jg
cmp
bnd
mov
xchg
ret
add
cmc
fcmovnb
mov
incb
mov
and
or
mov
nop
cmp
push
out
js
jmp
movsb
jp
aam
jnp
das
pop
aaa
pop
sub
xor
shrb
cld
hlt
lea
cmpsl
jb
insb
mov
mov
push
and
or
or
jg
in
iret
push
or
xchg
dec
popa
scas
inc
inc
adc
xchg
adc
mov
fwait
sarl
out
fnstsw
adc
les
sub
jge
mov
ret
mov
scas
pusha
xlat
cmp
in
add
push
iret
xor
arpl
mov
pop
aad
push
decb
pop
mov
xor
xchg
movl
cmp
cmp
daa
pop
movsl
inc
daa
pushw
cmc
in
in
mov
xchg
jl
aas
cmpsl
inc
sub
pop
test
jl
test
imul
jl
xchg
aam
rclb
lods
cwtl
lock
pop
xor
in
aam
sub
pop
out
pusha
mov
dec
xor
iret
or
pushf
xchg
jb
mov
cs
movsl
aaa
test
and
and
test
sbb
shll
jge
or
or
hlt
std
inc
adc
mov
sbb
repnz
mov
adc
sahf
xor
xor
cs
popa
push
sub
jb
lret
cwtl
insb
add
arpl
push
mov
fld
outsb
call
jl
xchg
push
push
lock
jns,pn
mov
std
lods
ja
jg
jb
dec
xchg
xchg
push
push
popa
cwtl
and
fidivrs
daa
mov
sti
ret
inc
pop
gs
dec
test
xchg
int
enter
mov
mov
frstor
pop
jecxz
gs
rclb
and
or
icebp
xchg
jmp
idivl
divps
sahf
cwtl
xchg
mov
jecxz
adc
ret
cmp
xlat
pop
aaa
ret
mov
roll
or
push
testl
enter
das
mov
outsb
push
push
incb
mov
cld
sbb
enter
jp
outsb
adc
gs
out
movsl
out
int
sbb
jns
mov
push
dec
xchg
es
repz
pop
and
xor
pop
pop
cmp
pop
mov
sbb
or
gs
dec
daa
sbbl
movsl
mov
daa
fidivrl
lahf
pop
es
ss
dec
loopne
test
xchg
mov
cld
call
inc
push
imul
movsl
cs
xchg
mov
imul
inc
popf
xor
outsl
hlt
push
mov
push
sahf
test
roll
inc
sarb
mov
subl
dec
dec
pop
jl
in
push
arpl
inc
cwtl
jnp
ret
cmova
stos
and
adc
rcll
call
adc
gs
jae
mov
daa
adc
popf
int
xchg
aas
cli
daa
push
loopne
push
scas
add
pop
and
jle
sub
add
lret
add
cwtl
push
jg
hlt
dec
mov
and
and
inc
fistpll
int
lock
mov
test
xlat
mov
pop
ss
mov
mov
out
addl
and
and
and
subl
xor
shl
sbb
mov
bound
daa
sub
popf
xchg
fcomps
inc
and
xchg
aam
mov
xchg
popa
adc
testl
mov
roll
enter
jb
das
xchg
jg
cs
mov
mov
push
pusha
and
movsl
or
xor
pop
push
cmpsl
push
pop
mov
imul
fsub
lret
jnp
pop
adc
pop
pop
cltd
rclb
arpl
lret
outsl
test
rolb
or
loope
fs
nop
cmp
lea
xlat
and
mov
dec
rclb
jae
shll
jl
xchg
aas
ret
bound
mov
popf
fucom
stos
xor
and
pop
les
imull
xchg
sub
or
pop
pushf
pushf
aaa
mov
jns
and
mulb
jbe
or
test
mov
mov
mov
fwait
push
jle
xchg
mov
les
push
jb
inc
das
aas
or
mov
jne
ljmp
incl
sbb
lcall
add
jo
or
sbb
or
dec
cmpsl
adcb
pushf
orl
add
ja
mov
or
data16
pop
stc
cmp
movsb
or
nop
sub
imul
push
cmpl
or
inc
xor
adc
shrl
ret
push
loop,pt
cmp
sbb
mov
mov
pop
push
add
scas
push
out
mov
pop
xchg
stc
mov
push
adc
idivb
cmp
ljmp
mov
and
jns
mov
enter
shlb
insl
or
xchg
jbe
pop
inc
sbb
movsl
jp
push
out
adc
jmp
daa
jb
gs
sbb
enter
pop
and
cmp
sub
jge
cmp
inc
movsb
pop
ret
mov
sub
out
inc
stos
in
xchg
imul
push
adc
cmp
je
cmpb
sub
mov
aaa
adc
in
xlat
adc
pop
or
inc
fnstcw
into
push
add
leave
mov
jbe
fimull
sahf
lea
adc
mov
pop
fcoml
insb
xchg
and
dec
cmp
mov
sbb
rclb
jo
flds
mov
out
sbb
ja
jnp
jne
xchg
int
movsb
sub
stos
pop
push
iret
push
addr16
lds
aad
pop
fcmovb
adc
jg
inc
movsl
mov
xor
jne
ss
cmpl
dec
roll
lods
imul
mov
push
push
rcr
sti
xchg
pop
int
inc
in
mov
ss
sub
lahf
inc
std
mov
imul
js
and
movsb
movsl
cmp
mov
xchg
jo
pop
push
leave
sub
push
or
mov
jns
jno
insl
pusha
jno
add
outsb
pusha
sbb
idiv
fstpt
push
lock
pop
leave
sbb
fwait
test
pop
or
aas
stos
and
mov
loop
jecxz
xchg
idiv
push
push
pop
fwait
cmp
adc
mov
cmovle
or
sub
ds
sub
sbb
aam
inc
inc
mov
out
fists
pop
movsl
enter
stc
enter
pop
cmpsl
test
mov
js
enter
xchg
lods
mov
ja
xchg
mov
push
inc
fsub
sbb
rorb
pop
push
push
and
or
std
dec
aaa
or
daa
push
fsubrs
xchg
das
mov
ja
jb
or
test
scas
sub
inc
add
int3
loop
mov
pushf
popa
mov
hlt
mov
dec
and
lcall
jmp
dec
inc
andps
maskmovq
negl
insl
aam
mov
int
shll
int3
dec
insl
or
imul
sbb
adc
sarl
pop
xchg
addr16
scas
mov
inc
out
fwait
bnd
fwait
insl
inc
cwtl
cmp
jecxz
aas
cmpsl
jnp
and
pop
sbb
adc
es
outsl
jbe
imul
add
dec
xor
imul
xchg
mov
pop
out
movsl
pop
adc
cmp
mov
sub
in
icebp
mov
negl
call
ja
je
not
inc
push
or
imul
sub
fists
mov
or
add
push
pop
sub
or
xor
cwtl
gs
mov
jle
dec
mov
mov
mov
pop
sub
inc
pop
jo
dec
mov
jno
xchg
notb
fistpll
fwait
jg
aas
mov
lock
mov
bound
fucomi
loopne
int3
jecxz
insl
fstl
je
bound
stos
mov
sub
mov
and
xchg
add
aas
inc
lahf
popa
adc
cmp
addr16
repnz
shlb
dec
ret
push
in
mov
in
iret
dec
lret
sti
mov
pop
push
fisubrs
pop
jnp
mov
cmc
sahf
in
je
cltd
mov
ret
rclb
cwtl
mov
sbb
and
insb
sub
cmp
cmp
fs
jg
sbb
xchg
xor
stos
shll
dec
xor
xchg
mov
mov
jmp
add
and
adc
xor
push
push
pop
pop
in
je
mov
dec
filds
jle
and
pop
cmp
and
adc
push
test
clc
loop
mov
flds
pop
test
rorb
loop
sbb
and
lcall
inc
fucomi
movsl
dec
nop
dec
push
cli
xchg
mov
aam
call
or
push
cmp
js
leave
adc
int
xor
fldl
addr16
pop
lcall
inc
in
in
clc
das
pop
in
mov
out
or
scas
int
mov
inc
cmp
adc
int3
sub
cmpsl
adc
faddl
cmp
fidivs
mov
dec
jnp
add
mov
xchg
jb
test
hlt
inc
mov
push
iret
out
jp
inc
out
cmpsb
cmp
rcll
fildl
outsl
rorl
xchg
jmp
pop
pop
add
or
mov
in
adc
std
jnp
sub
jmp
lret
pop
test
sub
add
push
cli
mov
test
ret
jnp
mov
lods
ss
and
inc
add
xchg
data16
stos
inc
rorb
ljmp
aam
flds
popf
add
pushf
frstor
test
or
sub
jno
insb
out
pop
mov
jg
arpl
jne
ds
or
int
mov
xor
movsl
fidivs
int3
pusha
pop
loopne
cmp
cmp
fbld
lods
scas
clc
pop
jle
pop
jp
in
sbb
xorl
inc
pop
or
push
and
pop
add
iret
fstl
call
or
pop
and
lods
lea
sub
cmp
test
mov
std
hlt
cmpsb
rorb
mov
jecxz
stos
aam
jle
int3
stos
pop
pop
jns
in
mov
mov
jmp
bound
jns
jmp
mov
push
dec
fmuls
add
or
jbe
sub
andb
push
cs
cld
mov
xor
xchg
scas
xor
fstl
sub
cmp
xor
xchg
sbb
insl
mov
mov
mov
mov
lds
sub
pop
xlat
and
scas
jecxz
or
subb
lods
aas
mov
pop
pop
push
cmp
aad
adc
xchg
js
and
leave
push
lock
mov
adc
fmuls
push
jmp
mov
cmp
add
inc
imul
and
dec
jmp
and
add
shrb
xchg
popl
pusha
ret
add
into
jns
jmp
sub
add
add
fcmovnb
cmp
adc
xor
pop
jnp
cmp
inc
mov
pushf
dec
sbb
es
das
lea
test
fcoml
enter
xor
fistps
add
loopne
out
mov
pop
push
int3
mov
xlat
jl
cmp
cmpsl
in
loope
or
sti
in
dec
sub
push
pop
jo
pushf
pop
mov
or
paddsb
mov
fs
repnz
lret
out
fldenv
mov
cmp
ret
std
cmc
xchg
pop
adc
sub
xchg
cld
adcl
repnz
jnp
out
adc
test
adc
addl
and
push
leave
shll
stos
mov
jle
test
scas
xor
setnp
add
pop
jmp
cmpsl
ljmp
lahf
fcompl
divl
test
pop
enter
gs
sub
sbb
in
cmpsb
icebp
popf
call
in
fisttpl
das
and
add
sub
imul
cmp
sahf
test
mov
loop
or
data16
or
popf
int
push
out
xor
jp
xor
inc
pop
jmp
shrl
frstor
mov
mov
add
lods
shrl
jae
test
mov
clc
adc
push
sub
adc
xlat
stos
loop
pop
scas
mov
adc
inc
cli
push
inc
mov
int
ret
std
sahf
stc
push
in
or
push
push
int3
gs
fwait
dec
pop
pop
test
std
imul
call
bnd
jnp
mov
arpl
jno
daa
mov
cltd
lcall
jle
cltd
jge
sub
inc
in
call
mov
and
orb
pop
ds
iret
adc
adc
addr16
mov
inc
xchg
fdivr
leave
jno
pop
aaa
sbb
mov
ret
xchg
inc
frndint
insl
mov
sub
arpl
sub
add
outsb
pop
ss
out
mov
cs
jno
dec
pop
std
cwtl
aaa
push
mov
int3
xchg
mov
insb
cs
test
add
cmp
adc
out
push
in
rep
std
and
pop
cmpsb
cs
sub
cmp
add
test
adc
int3
out
xor
adc
mov
shrl
rorl
loopne
out
stos
push
push
leave
sub
push
xor
ficomps
jle
xor
stc
loopne
fs
jb
out
mov
jp
lods
sbb
push
es
mov
jecxz
out
sub
pop
push
cmp
ss
lock
imul
xchg
daa
in
cmpsl
std
pop
das
cmp
xchg
pop
sub
xchg
loope
mov
outsb
jnp
pop
fmuls
jo
leave
adc
clc
lods
data16
call
loopne
push
cmp
je
pop
rorb
cmp
in
stc
push
daa
xchg
and
inc
lcall
cmpsb
cmpsl
aaa
subb
xlat
pop
mov
int
stos
pop
stos
dec
insl
fwait
adc
call
in
hlt
jmp
jbe
rcrb
hlt
mov
pop
or
insb
pop
jb
push
flds
jnp
out
arpl
xor
imul
out
push
jge
in
mov
jge
subl
push
shlb
pop
xchg
dec
jb
jge
adc
sahf
stos
dec
cmp
push
js
adc
cmp
gs
into
imul
pop
lock
or
arpl
out
das
inc
add
das
lods
rorl
mov
ret
add
jle
fidivl
pop
imul
insb
bound
xor
cmp
sbb
dec
in
mov
test
shll
mov
movsl
rcrl
adc
sub
xchg
lahf
ja
mov
sahf
fadd
fisttpl
jg
mov
mov
aam
nop
sbb
xchg
testb
je
jl
in
popa
shlb
je
inc
nop
test
mov
js
sub
fnsave
xchg
dec
popa
push
int3
lods
fidivl
mov
jno
ja
cmp
popf
in
loope
filds
inc
sub
jnp
test
rorb
mov
sahf
or
imul
add
sub
xchg
aam
push
sahf
dec
nop
push
mov
and
jns
cmp
mov
sbb
sbb
inc
in
mov
cltd
loop
jbe
sub
cmp
mov
inc
xor
popf
ds
mov
aad
cmc
cmp
sub
lahf
jae
lods
xor
sti
or
rolb
add
dec
aas
cmp
dec
mov
imul
scas
jo
testl
das
mov
loope
inc
xchg
sbbb
inc
xchg
lcall
sbb
mov
add
jl
jl
sub
inc
pop
fs
add
aad
xor
cmc
repz
jns
out
push
sbb
mov
mov
mov
cmp
ljmp
je
sbb
mov
lods
adc
jmp
ja
in
fdivl
imul
out
loopne
sub
cmp
ss
in
cmpsb
notl
or
outsl
pusha
xorb
icebp
xchg
out
sahf
flds
bound
push
cli
add
jp
pusha
mov
in
lahf
sarb
cmpsl
mov
or
jmp
mov
push
sub
inc
or
aad
cmp
inc
mov
cmc
lock
fs
dec
mov
sub
popf
jbe
aam
clc
fistps
pop
imul
adc
shll
outsb
addr16
add
test
push
in
cltd
test
das
mov
mov
mov
cmp
xchg
xor
insb
jnp
or
pop
push
dec
pop
adc
outsl
pop
arpl
mov
xor
mov
ss
push
pop
pop
push
cmp
pushf
outsl
sahf
into
lret
mov
cmpb
not
xor
cmp
sbb
je
pop
mov
jmp
outsb
sub
fisubs
fadds
icebp
outsl
lds
imul
mov
pop
cmpl
loopne
cwtl
popa
out
cltd
stos
xchg
xor
inc
setl
lret
cltd
cmc
flds
sub
outsl
dec
add
mov
lea
mov
sbb
pop
fldl2e
and
int
xchg
push
and
out
mov
jae
int3
push
pop
inc
xchg
and
rcl
addb
push
inc
and
daa
mov
mov
mov
xchg
cmpsl
sbb
pop
iret
ds
mov
add
mov
cmp
into
fucomi
jnp
xor
sub
jge
add
mov
cmp
out
jmp
pop
sbb
dec
cmc
das
lret
lret
push
shr
imul
in
je
mov
jle
mov
cltd
scas
stos
pop
xchg
sub
pop
mov
push
out
mov
or
lods
dec
shlb
mov
mov
pop
lock
push
add
clc
popa
std
popf
or
and
aam
sbb
icebp
addb
in
push
mov
cmpl
mov
cltd
jl
mov
outsb
adc
push
cmpsl
je
xor
push
add
bound
daa
push
leave
mov
or
sub
adc
cmp
cmp
jl
dec
mov
mov
mov
cmpsb
inc
or
aaa
ret
mov
nop
mov
inc
fdivrs
stos
in
xor
enter
push
add
mov
mov
mov
mov
and
bound
or
adc
add
cmp
push
and
mov
dec
or
xchg
inc
dec
stos
push
sub
pushl
push
jae
addr16
adc
mov
push
inc
push
aam
pop
sarl
and
scas
out
mov
pushf
insl
test
jg
xor
jecxz
cmpsb
out
ss
cmp
mov
mov
cld
mov
jns
notl
dec
out
ja
hlt
popf
push
jecxz
cmp
leave
cwtl
popa
out
in
jbe
mov
pop
roll
mov
and
pop
sub
jno
sbb
inc
rcl
push
lods
into
push
xchg
sub
inc
xor
inc
sbb
push
test
shl
out
xor
jo
push
mov
lock
xchg
mov
dec
cmp
inc
and
xchg
sub
out
fldt
jo
mov
out
jbe
pop
sti
jl
jmp
jg
pop
jb
in
fcmove
pop
dec
data16
jae
clc
hlt
sahf
xor
leave
sti
out
test
cmp
jne
clc
jb
dec
je
mov
loopne
cld
xchg
lds
addr16
lods
pop
scas
sub
jb
data16
sahf
bound
out
jnp
or
push
scas
and
data16
sahf
xor
push
dec
jg
push
leave
scas
test
sbb
into
push
xchg
mov
dec
jg
push
enter
leave
jns
adc
or
lock
sbb
pop
fadds
shlb
cli
push
mov
inc
and
sbb
mov
aad
sbb
icebp
jp
xchg
xchg
cld
xor
and
gs
fs
and
cmp
cld
jmp
call
ds
and
insb
pop
dec
jne
je
pop
repz
sub
xchg
inc
jg
lock
adc
dec
rcl
sbb
or
jmp
mov
mov
pushf
lods
pop
in
and
cli
enter
pop
repz
inc
mov
movsl
pushf
das
mov
pop
push
jae
cmc
loop
add
adc
or
aad
inc
out
scas
in
xor
stos
insl
nop
fwait
pushf
xor
scas
mov
adc
mov
dec
lock
push
ja
adc
jns
push
dec
aaa
jno
cld
sbb
mov
cli
push
fisubs
xchg
jnp
and
pushl
mov
mov
pushf
fmuls
js
adc
xor
ret
xor
jl
scas
loopne
mov
pop
sahf
xorb
dec
mov
inc
shl
add
push
into
inc
stc
out
out
push
sub
mov
jg
adc
mov
cmpsl
gs
xchg
adc
mov
xor
push
xor
imul
scas
inc
sub
popa
jmp
adc
rclb
lods
dec
inc
rolb
ret
stos
je
jns
or
stos
test
and
ret
stc
or
jmp
sahf
scas
adc
adc
or
inc
ret
mov
and
js
sub
mov
lahf
or
pop
movsl
dec
mov
dec
pop
or
dec
mov
gs
jge
dec
repz
mov
fwait
sahf
mov
lods
push
push
lret
movsl
shlb
scas
push
movsl
mov
rol
cld
je
das
ret
jnp
rorl
sub
xorb
pop
mov
mov
ficompl
sti
repnz
lea
jg
cmp
adc
lods
or
jg
adcb
enter
ret
mov
or
and
dec
mov
sbbl
and
mov
scas
inc
mov
outsl
cmp
repnz
inc
lock
push
or
clc
xchg
stc
stc
lcall
sub
inc
aaa
mov
fsubl
jp
add
icebp
lcall
jg
xlat
clc
mov
shrb
popf
clc
cmp
nop
jb
jne
inc
adc
lds
mulb
enter
xchg
cmp
mov
in
push
loopne
sub
lret
mov
xchg
dec
test
push
ret
sub
js
push
fnstsw
fdivrl
pop
pop
mov
pop
and
sub
xor
mov
sbb
and
push
int
mov
sub
xorb
adc
jmp
inc
add
pop
dec
jnp
sub
fidivrs
sbb
bnd
dec
test
rclb
cmp
rorb
pop
jo
lcall
push
stos
je
mov
leave
sub
xor
in
fwait
cltd
rcll
ja
sub
in
cmp
fsts
sbb
xor
movsl
push
add
out
cmp
std
mov
or
nop
push
ss
ss
push
add
sbb
out
xchg
shl
test
aam
into
mov
adc
xchg
hlt
mov
sar
mov
push
sbb
push
movsl
jg
sbb
lret
add
jb
mov
mov
sbbb
mov
sahf
or
mov
jb
repnz
add
xor
divl
adc
bound
push
and
mov
dec
lret
mov
add
fdivrl
pop
xor
push
iret
push
andl
in
in
aam
repnz
js
cmc
icebp
mov
das
popa
shlb
pusha
xor
iret
nop
push
subl
fstl
mov
dec
jmp
cmp
push
sti
iret
inc
leave
cmp
jmp
mov
xchg
jmp
mov
mov
or
xlat
add
push
push
push
aad
and
cltd
in
imul
xchg
jns
testb
inc
pop
dec
divl
xor
dec
ljmp
aad
or
test
push
lds
sbb
loope
push
int
fwait
lea
adc
add
neg
xchg
divb
test
movsl
pop
inc
lahf
in
adc
jge
stc
push
lds
fstpt
push
dec
pop
cltd
sbb
inc
sarb
iret
fadds
insl
inc
xchg
inc
fisubs
jecxz,pn
sub
sub
sub
push
fnstcw
imul
hlt
jmp
or
jecxz
jne
stos
adc
mov
and
and
pop
fisubrs
pusha
push
addr16
shrl
mov
aam
xor
or
stc
sbb
mov
add
es
jl
mov
dec
repz
mov
mov
dec
mov
sbb
js
inc
ljmp
sbb
jmp
negb
arpl
cmpsl
popa
adcl
fisttpl
lock
repz
ljmp
aaa
pop
adc
and
pushf
dec
jg
das
shll
je
sbb
lahf
xchg
sub
movsl
pushf
mov
ds
xorl
insb
lods
dec
push
dec
jmp
mov
cwtl
dec
adc
mov
loopne
int3
or
lods
sbb
sub
pop
popa
mov
add
les
jg
or
loope
jp
add
fldenv
or
cmp
fwait
adc
fsubs
adc
push
lods
les
sub
imul
jo
adc
mov
or
mov
xor
and
lds
sbb
inc
add
and
xchg
xchg
iret
and
aad
fsubl
outsl
scas
pop
test
imulb
jnp
movsb
push
sub
cli
mov
orb
pop
bnd
daa
push
pop
mov
xchg
and
enter
lret
out
mov
repnz
jg
add
jne
arpl
out
cmp
orb
xchg
sub
add
test
mov
inc
pushf
in
lds
sar
jg
lretw
int
mov
roll
push
sar
xor
push
pop
mov
mov
testl
icebp
pusha
cmp
rcl
out
push
push
daa
xor
sub
cwtl
sbbb
es
in
mov
ljmp
stc
xchg
push
pop
lret
pusha
and
gs
sbb
lds
jns
icebp
inc
jbe
inc
orl
mov
jl
sbb
cmpsl
js
sbbb
out
xor
les
jbe
jmp
fidivrs
sub
fsts
push
mov
mov
mov
inc
pop
insb
dec
cltd
mov
mov
and
add
dec
orl
mulb
fs
pop
mov
mov
in
xchg
arpl
outsb
ret
insb
mov
imul
push
add
ret
pop
cmpsl
pop
xchg
arpl
and
fs
pushw
fisubs
mov
movb
js
fucomi
jno
outsl
test
loop
xchg
jnp
mov
xor
nop
test
fwait
cmp
out
in
push
out
sbb
das
and
xor
push
mov
or
imul
push
add
sub
int
inc
inc
sti
jne
insb
or
push
test
pop
jno
cmpsb
mov
sub
das
mov
filds
jne
movsl
sub
jno
lea
mov
stc
icebp
inc
xor
out
movsb
cmovle
js
push
and
add
pop
lret
inc
dec
dec
push
pop
das
push
xchg
ss
fisubl
cmp
das
dec
adc
sub
and
cmc
or
mov
mov
or
mov
icebp
faddl
mov
rcll
divl
mov
inc
in
pop
lahf
push
sbb
out
mov
jge
js
add
mov
lds
inc
dec
xlat
sbb
shlb
into
lock
adcb
repz
lea
data16
xor
icebp
pop
dec
xor
inc
in
test
inc
push
leave
js
in
jns
mov
test
jo
xor
xchg
jnp
pop
divl
stc
mov
lcall
fsubl
push
inc
mov
loope
fdivrl
jbe
lret
pop
repnz
sbb
out
cmpsl
lds
lods
mov
lods
aas
cli
add
int3
ret
adc
jg
cmp
pop
cmp
repz
jmp
dec
incl
cld
insb
pop
lret
pop
xor
loope
jl
jb
ret
adc
push
aam
leave
cmp
xchg
mov
into
add
filds
sbb
jmp
sbb
aas
sbb
sahf
gs
xchg
cmp
out
add
jb
inc
sbb
pop
in
pushf
cmp
xlat
mov
and
mov
sar
jbe
jp
sub
andl
pop
adc
iret
arpl
mov
sub
addb
sub
pushf
mov
mov
fisubrs
inc
dec
sub
cmp
xchg
iret
adc
enter
scas
or
sti
ret
sub
jbe
mov
jg
jbe
in
or
mov
or
mov
and
push
mov
xlat
arpl
sub
xchg
pop
in
in
enter
inc
mov
movsl
mov
mov
rorl
mov
jns
cli
jecxz
lock
fucomp
iret
stc
insl
leave
shr
lret
mov
mov
xchg
ret
fwait
cmpsl
fimull
jne
outsl
stc
dec
jb
xchg
xor
xchg
movsl
dec
add
mov
mov
jbe
xor
js
pusha
pop
fildll
jae
pop
popa
gs
lahf
push
out
adc
xchg
gs
inc
sarb
pop
mov
adc
xorb
pop
jbe
aaa
aas
fmull
das
mov
dec
dec
sub
push
xchg
inc
mov
jb,pn
lea
rol
jno
inc
inc
stos
push
in
into
cmp
int3
inc
push
jmp
imul
mov
in
xchg
in
xchg
inc
jge
add
fsubrl
sbb
sbb
cli
mov
jbe
bound
fnstcw
dec
mov
stos
cmpsl
arpl
mov
loop
jo
scas
fs
cs
lock
pop
dec
out
ljmp
or
nop
lahf
inc
out
and
adc
mov
les
cmc
test
sbb
arpl
jnp
or
inc
jmp
outsb
hlt
ja
push
xor
aas
sub
push
xchg
or
mov
arpl
rcrl
mov
test
les
in
bnd
mov
cli
mov
subl
pusha
std
sbb
xorl
into
lcall
mov
and
test
or
cmpsl
mov
movlps
and
push
sbb
push
movsb
mov
jecxz
pop
fiaddl
fisttpl
rorw
mov
xlat
lret
cmp
addr16
inc
or
fildl
shr
pop
xchg
mov
cmp
dec
sarl
push
add
sbb
les
inc
and
dec
insb
mov
popf
ljmp
out
movsl
sbb
leave
gs
icebp
sbb
outsl
repz
xor
dec
mov
enter
cli
das
les
sbb
mov
xor
mov
mov
rcll
test
pop
inc
mov
mov
xchg
in
pop
xchg
jbe
call
stos
addr16
aam
jno
pop
pop
dec
mov
test
daa
icebp
aas
fbld
nop
mov
in
std
push
sarl
ja
popa
mov
adc
test
adc
jl
mov
into
ss
clc
mov
lods
in
lods
int3
sarl
push
push
inc
outsl
sub
or
jne
aam
jmp
or
jmp
aas
sbb
mov
add
cmp
imul
insb
adc
lret
push
jge
enter
imul
mul
lahf
imul
cmp
int3
vcvtss2sd
mov
shll
sub
aas
inc
lods
lds
dec
shll
inc
adc
insl
aam
jl
push
bound
pop
adc
push
outsb
xlat
xchg
inc
mov
loop
adc
movsl
test
lret
mov
clc
adc
outsb
dec
inc
mov
iret
sbb
push
cmp
lds
cmp
je
sbb
sarb
and
std
test
pop
inc
sbb
ja
movsb
fadds
sub
lahf
imul
inc
lds
sbb
sbb
pop
dec
outsl
jg
hlt
ds
dec
sbb
mov
push
or
or
test
sti
push
ret
sbb
add
sbb
push
mov
mov
xchg
sub
icebp
stc
lds
mov
in
clc
pop
jae
out
pop
setne
int
lret
xchg
adc
jns
mov
fsubp
push
popf
in
imul
push
lahf
add
xchg
sub
cmp
mov
jno
fldt
shlb
cs
icebp
in
loop
test
scas
arpl
or
push
inc
sahf
mov
and
insb
lods
xor
cli
ljmp
push
xchg
rol
push
pusha
roll
cmp
fldt
pop
xchg
xchg
xlat
lods
sbb
dec
out
fmuls
int
xor
decb
jbe
sub
ret
jnp
mov
push
mov
jo
aam
dec
je
aad
sbb
call
push
cli
ds
arpl
outsb
or
testl
jl
in
sub
sbb
int3
outsl
popf
nop
push
iret
rclb
addr16
xchg
jl
or
aam
and
push
xor
xor
ret
jle
sahf
mov
mov
jo
cmp
add
jp
rorb
roll
or
insl
jnp
inc
sub
das
sub
fsubr
mov
test
mov
jecxz
mov
sub
pop
xor
pop
pushl
adc
pop
ud1
cwtl
int
fisubrs
daa
jle
jb
lret
lea
jmp
pop
dec
push
loope
jle
roll
rcll
fcmovnbe
xor
fcom
rolb
test
das
sbb
push
test
cs
mov
cmpsb
cmp
mov
movsl
lock
add
fwait
sub
push
mov
and
jg
mov
xchg
imul
push
dec
jg
sti
gs
sub
mov
push
out
adc
ret
leave
sarl
loope
and
sti
push
cmp
fcomip
stos
sub
sbb
ljmp
mov
or
ret
or
addr16
adc
add
jg
test
test
out
sbb
shr
fucomi
dec
addr16
pop
xchg
cmp
jbe
sarl
jge
repz
gs
loopne
or
sub
xchg
loope
mov
push
ljmp
and
lret
dec
popa
mov
lds
repnz
lods
sub
mov
movl
pop
push
xchg
inc
fs
cmp
lret
in
cmp
cmp
xchg
pop
sahf
push
loope
pop
lahf
int
fwait
xchg
push
outsl
int3
mov
aas
sub
add
test
clc
in
push
mov
daa
scas
and
les
cmp
stos
xchg
lret
mov
pop
or
pop
sbb
and
cld
cmp
push
or
ss
int3
inc
rcrl
arpl
out
mov
dec
testl
data16
iret
or
aas
add
xchg
test
dec
jg
xor
xor
test
fwait
add
mov
push
cs
jecxz
xor
ficomps
andl
mov
or
addr16
data16
ss
jl
dec
mov
insb
push
dec
out
xchg
and
xchg
out
mov
mov
outsb
adcl
insb
in
lds
dec
mov
lret
xorl
aaa
das
in
lock
stos
je
mov
xor
push
and
or
jge
cld
sub
sbb
mov
leave
mov
push
mov
mov
into
aaa
add
jb
aam
inc
jns
or
xor
mov
push
jecxz
xor
movsl
cmp
stos
ss
scas
sbb
std
fwait
pop
mov
jo
pop
jno
iret
add
fsts
jne
sbb
push
das
std
add
push
add
push
fucomip
lahf
cmp
mov
dec
dec
sub
sbb
int3
xorl
insb
jp
jbe
dec
sbb
pop
pop
pop
jo
xchg
in
clc
aad
idivb
cld
stos
mov
movsb
push
cmpsb
fsubs
jl
pop
movsl
push
jb
aad
dec
add
xor
out
cmp
mov
pop
popa
jp
std
add
sbb
in
sbb
fcomi
cs
ffreep
stos
popa
out
test
daa
sbb
add
inc
sbb
mov
rcrb
fwait
adc
pop
push
mov
dec
mov
out
sbb
mov
mov
xor
cltd
mov
mov
sbb
add
cld
adc
mov
rorb
out
adc
mov
mov
pop
push
loopw
daa
in
sbb
das
push
mov
rolb
out
mov
fstpt
movb
test
push
mov
inc
clc
cltd
pushf
push
stc
inc
lods
or
sbb
dec
sahf
jmp
pop
stc
or
rcl
push
sarb
rol
mov
nop
sbb
mov
ret
jno
push
inc
sub
pop
xchg
call
sbb
cwtl
faddl
or
imul
fisubrl
mov
sbb
iret
sub
ret
in
adc
adc
inc
outsl
xchg
fwait
int3
mov
or
aam
pop
outsl
lea
mov
stos
test
pop
cltd
lods
cld
js
push
sbb
push
sub
or
movsb
or
loope
lea
in
pop
jns
xor
shll
aam
int
and
dec
xchg
insl
ret
mov
aam
mov
shll
out
xor
or
dec
cltd
mov
inc
ds
pushf
add
mov
or
inc
mov
out
or
mov
call
mov
movsb
jae
ds
leave
adc
scas
cmp
icebp
call
je
xchg
cmp
adc
inc
sbb
mov
or
xor
ljmp
push
dec
hlt
stos
cmp
aam
loop
and
push
jecxz
test
int
adc
sub
in
shll
fisttps
js
into
mov
jae
push
out
pop
pop
iret
inc
out
adc
sub
mov
out
ror
xchg
dec
mov
lods
das
hlt
cmp
rcrl
xor
ja
mov
subl
adc
pop
or
jl
inc
mov
lods
and
inc
mov
mov
cmp
rorb
mov
jmp
pop
inc
lahf
sbb
jb
shlb
imul
pop
data16
mov
dec
inc
xchg
mov
aas
lods
mov
pop
pop
sub
cmc
aam
sbb
xor
cmp
lret
push
insl
in
fisubrl
cmp
scas
cmp
add
add
shl
hlt
mov
lret
int3
mov
pop
addl
hlt
pop
xor
adc
shll
clc
es
ret
jae
cmc
arpl
inc
aaa
mov
sub
xor
mov
xor
cltd
sub
cmpps
icebp
xchg
lret
out
adcl
xchg
lcall
mov
push
push
sub
testl
jle
push
lods
nop
mov
and
icebp
mov
adc
xor
das
daa
lods
pop
enter
xchg
fimull
sub
mov
ja
mov
enter
popf
stos
mov
int
call
cmp
stos
sahf
pop
ds
add
imul
push
push
loop
mov
cmp
and
inc
xor
fs
je
rorl
das
pushf
mov
std
imul
movsb
jg
jne
adc
mov
pop
fsub
shll
in
subb
mov
data16
jge
movsb
fdivl
dec
or
les
xchg
jge
in
mull
clc
pop
mov
dec
mov
pusha
repnz
push
out
xchg
sbbl
jl
add
jne
jmp
mov
mov
dec
imul
xchg
mov
cmp
hlt
clc
fnstsw
cmp
mov
clc
cmpsb
pop
outsb
adc
adc
test
adc
shll
data16
pop
stos
out
xlat
add
stos
jns
jl
cmp
sti
and
aaa
pusha
hlt
sub
push
sti
pushf
push
push
lcall
mov
ds
arpl
mov
in
ret
aas
xor
cmpsl
test
add
loop
jne
das
movsb
sti
ret
dec
xchg
enter
dec
ds
jecxz
jecxz
mov
push
mov
mov
insl
xchg
js
int
pushf
dec
inc
pusha
inc
sbb
sbb
sbb
lret
or
in
bound
lock
jo
inc
test
popf
push
xor
das
std
out
and
mov
repnz
imull
pushf
fs
movsb
jecxz
pop
cmp
aam
mov
iret
fcmovu
pop
push
out
aas
xlat
imul
cmpsl
clc
stos
sahf
cltd
cmpsb
leave
pushf
mov
inc
inc
outsl
cmpb
inc
inc
mov
jo
jge
pop
les
movsl
jl
cltd
inc
das
jno
das
dec
push
dec
cmpl
push
gs
mov
xchg
push
mov
mov
add
inc
mov
rcll
fdivrs
decb
push
test
push
mov
xchg
sbb
pushf
enter
push
jl
mov
cmpsb
xchg
pop
dec
jecxz
push
int
outsl
fs
cmp
popf
in
sub
lods
mov
push
stc
rorl
push
aaa
and
mov
jne
add
jne
repnz
push
and
cmpsb
adc
mov
pop
stos
ret
loopne
mov
scas
jb
adc
out
push
and
lcall
loopne
hlt
adc
imul
dec
add
in
movsl
sub
inc
or
or
icebp
xchg
or
sbb
or
iret
jo
push
lcall
jae
lods
push
lahf
pop
pop
lret
push
inc
cmp
mov
outsl
add
outsl
sbb
shlb
sbb
repz
mov
sbb
rcl
pop
push
pusha
mov
imul
cmp
pop
mov
ret
mov
mov
aas
cmpsb
repz
cmc
inc
inc
xchg
sbb
push
test
push
pusha
orb
and
cmp
fstpl
ja
leave
outsb
daa
xchg
nop
fs
mov
mov
mov
dec
cmp
mov
jns
mov
movsl
test
sbbl
add
fwait
dec
jbe
adc
pop
sub
cld
pusha
cmp
jge
stos
xor
pop
xchg
lods
movsl
mov
in
bound
jle
clc
mov
jb
sub
out
shrl
cmc
mov
dec
mov
dec
sbb
and
aaa
sbb
push
test
idivl
fmul
divb
iret
setne
dec
jnp
mov
sbb
inc
add
into
pop
adc
cmp
push
push
dec
mov
jecxz
pop
mov
add
adc
aaa
and
sub
cmp
sub
clc
scas
incl
xor
bound
jmp
int3
lahf
cld
inc
cwtl
add
jns
scas
and
pop
icebp
inc
shll
int
pop
fisubs
cmp
std
adc
sar
and
fs
mov
dec
aam
imul
add
xor
fwait
xchg
fisubrs
jg
xor
mov
xlat
faddl
xor
jmp
movsl
push
pusha
jne
jbe
push
inc
pop
test
add
loope
es
int3
pop
dec
mov
ficoms
mov
dec
mov
cmp
push
push
push
fs
and
sub
or
adc
adc
or
lea
inc
cmp
inc
testb
jnp
mov
mov
arpl
roll
std
and
fidivs
hlt
xchg
xor
mov
sbb
jl
iret
cmc
jecxz
xor
test
sub
je
int
insb
jge
daa
jmp
mov
jle
pop
xchg
dec
test
mov
and
mov
mov
mov
icebp
arpl
outsb
push
pop
loope
add
std
push
scas
mov
outsb
shll
sbb
mov
ret
js
dec
fdivr
and
or
setge
daa
test
es
adc
pusha
push
mov
pop
sub
lcall
test
outsb
jno
and
push
adc
sti
std
imul
in
adc
add
mov
lock
xor
adc
dec
jne
adc
mov
xor
insl
cmpsl
fsubl
xchg
fistpll
rcrl
test
or
fildl
gs
repz
and
cltd
jmp
leave
inc
and
icebp
fisttpl
in
push
mov
xor
xchg
adc
out
test
stos
mov
xor
adc
rcl
push
and
push
cs
sbb
cli
ret
mov
fistpl
and
mov
add
mov
xor
stc
mov
pusha
push
dec
clc
sarl
jle
lcall
mov
in
pop
gs
mov
and
jno
or
movsl
call
jg
xchg
xchg
inc
adc
push
mov
inc
jae
adc
es
inc
les
or
sbb
mov
jae
dec
aaa
bound
inc
fidivs
out
cmp
sti
mov
test
or
je
or
cmp
loopne
add
jne
in
inc
push
lea
xchg
imul
in
aaa
sub
fwait
testl
rorb
mov
push
adc
adc
mov
push
jnp
and
mov
push
std
lahf
into
sub
mov
and
in
jae
mov
andl
sbb
scas
int
push
mov
cmovbe
pop
popl
aad
cmp
repz
add
xchg
xchg
stos
outsb
adc
jmp
mov
add
sbb
lcall
push
jnp
repnz
xchg
mov
inc
or
pushf
inc
loop
stc
mov
int
shlb
adc
inc
iret
dec
das
jle
xor
xor
lea
hlt
mov
stos
push
sub
jbe
mov
adc
rcrl
push
fldenv
sbb
fnstenv
sbb
mov
mov
mov
out
les
lret
mov
int3
cmp
mov
sarl
and
enter
mov
rclb
testl
cmpsb
push
loop
vmwrite
dec
enter
bound
inc
fbstp
fimuls
cmc
mov
in
mov
inc
mov
out
mov
sub
and
mov
daa
lds
adc
fdivp
les
pop
shl
adc
sbb
or
lahf
and
or
inc
inc
test
cmp
cmp
jo
leave
mov
xor
pusha
cs
inc
pop
mov
fistps
loop
push
lret
ret
das
mov
incb
test
mov
in
negl
fmulp
enter
hlt
scas
push
cmp
cmp
push
ficoms
pop
popf
push
bound
cmc
sbb
lahf
xchg
adc
or
xchg
jg
mov
sbb
inc
inc
or
enter
loope
push
inc
jbe
xchg
xor
in
dec
or
jbe
dec
adc
lcall
push
nop
mov
imul
and
jg
pop
fadds
inc
mov
mov
sub
sahf
mov
popf
out
cmp
inc
mov
movsb
cmp
in
cmc
mov
push
mov
rcrl
jne
adc
adc
xor
cmp
daa
aad
pop
dec
xchg
movsl
xor
inc
sub
fbstp
cmp
ds
out
std
out
js
pusha
rorb
xorb
fwait
stc
lods
dec
cmc
jmp
mov
dec
and
mov
xor
int3
xchg
fwait
adc
dec
es
or
subl
hlt
fidivrs
push
out
add
xchg
and
xor
xchg
xor
lock
cmpsb
pop
jp
pop
fcomps
ror
shlb
pop
int
or
xor
stos
loopne
in
and
pop
in
or
cwtl
loope
sub
ljmp
cmpsl
lret
cmp
lea
or
in
ficoml
data16
cmp
stc
fld1
in
mov
and
outsb
or
jnp
scas
orl
mov
adc
and
lods
in
scas
mov
aaa
xchg
aam
shr
ret
imul
push
daa
dec
jno
fisttpl
test
insb
orb
cmpsb
outsl
xchg
lea
popf
mov
fwait
arpl
jge
cmpsb
ljmp
mov
test
xor
mov
addr16
mov
aaa
pop
daa
jno
iret
add
fildll
frstor
sub
movsb
push
movsl
ret
inc
aad
mov
push
jmp
pop
jp
int3
pop
pop
jns
fisttps
adcb
inc
div
and
loopne
jns
andb
mov
push
inc
pop
mov
aaa
mov
cli
leave
dec
xchg
cmpsb
and
jp
faddl
ret
xor
repz
pop
inc
pop
inc
fstpt
mulb
push
cmp
mov
inc
mov
mov
mov
xchg
rorl
pushf
cmc
inc
sbb
inc
imul
lcall
nop/reserved
xor
or
and
cmc
sarl
out
inc
dec
sub
mov
cmpsl
sub
or
rorl
je
push
xchg
jp
cld
pop
dec
mov
pop
mov
dec
push
pop
jl
push
mov
bound
push
out
aam
xcrypt-ctr
cmpsl
fisttps
add
mov
je
pop
cld
test
cmp
clc
test
xor
stc
icebp
cmp
sahf
push
cwtl
out
enter
inc
pushf
and
clc
jbe
enter
fmuls
imul
pop
mov
xor
jbe
roll
mov
stos
mov
test
mov
es
insb
es
int
or
cmpsl
rol
sti
jmp
jg
cmc
push
das
push
iret
pop
adc
hlt
xchg
dec
aaa
clc
out
decb
adc
out
cmpsl
mov
enter
cmp
insl
jmp
xor
lea
lea
lahf
sbbb
mov
jecxz
ja
add
mov
add
lock
cmp
push
add
aad
inc
mov
ret
sbb
mov
les
stc
out
sub
repnz
icebp
mov
mov
pusha
and
imul
lds
xchg
dec
xor
dec
mov
lcall
ret
mov
out
movb
lahf
jo,pt
bound
loope
fisubrs
shl
cmp
push
sub
and
lea
mul
scas
stos
loope
mov
and
jp
jmp
fcomps
xchg
cli
scas
push
xorb
cmpsl
pop
jle
jno
add
enter
dec
stos
movsb
pcmpgtb
lods
xlat
aaa
dec
jnp
lds
xchg
pop
jl
movsl
xchg
test
cmc
cmp
lods
cwtl
lds
aad
push
push
or
xchg
test
or
mov
adc
or
cmp
scas
jne
jp
rorb
aad
mov
pop
scas
out
nop
add
xchg
pusha
sub
pop
repz
movsb
and
insb
out
shrb
adc
imulb
mov
clc
movsl
ja
sti
aam
cmp
push
dec
int3
faddl
gs
push
sahf
imul
xchg
in
insl
sbb
scas
lcall
or
out
xchg
enter
std
pusha
sbb
ja
push
into
lcall
mov
ss
mov
scas
push
and
push
cltd
lret
push
popf
aad
adc
lods
lret
inc
mov
out
scas
std
jle
popa
mov
ja
movsb
ret
mov
mov
dec
or
ror
stos
xlat
mov
mov
sub
inc
cli
arpl
push
push
mov
pop
repz
dec
ret
lods
aad
pop
sbb
ja
cmp
mov
mov
call
repnz
divb
je
hlt
or
sahf
inc
pop
jmp
and
pop
jg
sub
dec
je
mov
imul
jno
loop
cmpsl
int
or
aas
cmc
push
shrb
or
je
out
lock
xchg
lods
and
push
fcmovu
add
jmp
cltd
in
cmp
lods
mov
push
cmp
xor
sbb
aam
imul
mov
xorb
mov
dec
xor
mov
aas
or
cmp
mov
sub
enter
das
popf
mov
icebp
sbb
out
sub
sahf
pop
shll
jbe
pusha
rorb
mov
dec
adc
cmp
pop
inc
lods
mov
cmp
ret
inc
xor
aad
cmp
mov
mov
mov
inc
sub
xor
mov
mov
sbb
addb
and
int3
in
ficomps
pop
iret
mov
mov
sbb
lods
mov
add
push
and
cmpb
or
in
loop
jnp
scas
cmp
testl
xor
jno
daa
and
iret
add
test
add
mov
fwait
insb
push
sub
fsub
stc
incb
les
mov
sbb
sbb
mov
pushf
mov
cmpsb
out
inc
je
push
jp
test
inc
es
cmpsb
mulb
mov
mov
sar
in
scas
lods
cltd
repz
out
loop
movsb
xchg
jb
xchg
addr16
nop
xchg
sbb
pop
orb
mov
and
or
sbb
shll
add
pop
mov
inc
shll
mov
out
bound
sbb
repz
filds
xchg
mov
ds
divl
js
iret
lods
pushf
sub
test
pusha
in
icebp
lods
cld
push
jg
pushf
cld
adc
add
pop
mov
inc
jnp
mov
stos
jle
cmp
enter
xchg
xorb
out
xor
jg
lods
jb
sub
sub
jecxz
dec
inc
or
cmpsb
rcll
sbb
pop
divb
xor
cmpsb
dec
cmc
jge
push
aad
push
call
popf
mov
pushf
add
shl
hlt
lea
je
out
adc
pop
pop
push
gs
ljmp
pop
outsl
mov
test
pushf
mov
add
in
pop
jns
or
sbb
add
sub
out
loope
rcll
xor
movhps
ljmp
mov
scas
aad
test
mov
rcll
inc
push
dec
test
int
push
xchg
inc
push
push
cmc
sbb
mov
subb
popa
xchg
lret
or
daa
pop
in
add
xor
mov
shll
inc
fadd
inc
xlat
mov
adc
dec
cmp
loopne
cmp
ds
shrl
stc
lahf
int
dec
or
sub
cmp
bound
sub
xchg
inc
ret
pushf
xor
stc
clc
mov
leave
imul
pop
dec
jne
sbb
scas
adc
dec
ret
jne
shll
jne
inc
mov
mov
scas
inc
inc
jo
js
xor
adc
mov
call
jl
fs
cmp
in
jecxz
sbb
movsb
out
mov
push
movsb
fisubs
sbb
push
cmp
push
aam
pop
dec
cli
pop
jo
or
xchg
bound
in
lods
inc
cmpl
inc
popf
fstps
fnstsw
push
adc
sti
sub
and
jns
inc
pop
xchg
neg
sahf
inc
inc
cmpsb
or
js
cs
rorb
jae
add
cltd
inc
push
cmpsb
jb
jnp
cmp
popa
jae
jmp
xor
dec
jmp
jno
imul
lret
sbb
repnz
and
mov
ss
daa
out
dec
sbb
mov
movsl
add
clc
cmpsl
fistps
mov
and
cwtl
lock
enter
sbb
mov
push
cmpl
inc
mov
mov
shrl
lods
xchg
xchg
pop
pop
cmp
sahf
mov
cs
loope
addb
lcall
mov
in
push
lret
xor
cwtl
ja
jmp
cmp
std
test
mov
shll
sub
stos
mov
mov
imul
inc
dec
repnz
mov
push
jle
add
pop
cmc
in
ret
mov
nop
ljmp
insl
mov
aaa
dec
push
lock
jno
pop
and
sarl
add
test
out
xor
out
mov
mov
dec
repnz
mov
pop
leave
and
and
sahf
add
or
insb
orb
xor
xor
or
xchg
arpl
add
xor
cmp
das
les
aaa
sub
dec
xchg
cltd
mov
leave
mov
hlt
pop
sub
ja
fildll
cmp
xor
mov
mov
jne
sub
inc
xchg
daa
adc
lds
and
xor
sub
andb
hlt
mov
lods
cld
int3
call
lods
jbe
and
orb
lcall
fs
test
int3
mov
fldlg2
cltd
push
xchg
xchg
mov
hlt
outsb
xorl
push
pop
add
xchg
xlat
sbb
stc
xchg
enter
inc
cwtl
push
sbb
clc
xor
xchg
jno
fucomip
loopne
mov
add
push
xor
cmp
or
xor
ja
mov
scas
sbb
lret
sbb
mov
push
popa
into
ja
adc
cmp
adc
lahf
sub
push
xor
imul
and
enter
xchg
cmpsl
add
dec
das
cmc
mov
cwtl
ljmp
sar
mov
ja
and
imul
or
cli
xchg
adc
ljmp
aam
in
cli
xchg
sbb
and
arpl
or
push
push
dec
xor
in
lret
mov
xor
push
sbbb
pop
mov
popa
mov
mov
rolb
imul
lret
xchg
dec
mov
cmp
push
mov
mov
scas
and
outsb
test
sbbb
andb
inc
cmp
js
sbbl
clc
ljmp
iret
dec
idivb
out
test
xor
stos
sti
xchg
dec
insb
xchg
xchg
mov
arpl
and
sbb
dec
pop
dec
stc
jge
jns
xor
in
lret
fsubrl
mov
fcompp
jp
push
enter
jnp
lds
and
lret
test
daa
sahf
jns
dec
mov
xchg
push
cmp
outsb
fisttpll
jns
pop
push
xchg
push
lcall
cltd
shlb
mov
jmp
roll
mov
inc
jl
and
aad
cmpsb
pusha
in
jp
mov
mov
inc
cmp
imul
push
adc
faddp
test
jnp
pop
push
cmp
les
test
insl
flds
sub
shrl
fcmove
sub
mov
repz
push
mov
cmp
out
pop
pushf
addr16
ret
dec
lcall
outsb
sub
and
loop,pn
insl
test
cld
xchg
pop
adcl
cmp
add
cmp
aaa
dec
in
cmp
adc
or
in
or
outsl
mov
pop
setns
add
jae
cmp
ret
lcall
mov
lahf
sub
insb
or
and
inc
add
and
jp
and
into
cld
daa
pop
addr16
fmull
mov
pushf
sub
incl
lock
add
and
rcrb
and
mov
xchg
rcl
and
fwait
insl
or
dec
clc
cmpsb
les
jg
dec
adc
dec
packsswb
dec
adc
sar
push
and
loope
or
push
frstor
scas
mov
inc
lahf
sbb
adc
xchg
lds
iret
xor
test
clc
test
add
ss
pop
shll
and
push
mov
fistps
mov
mov
aad
jg
adc
mov
xchg
data16
jns
in
mov
testb
inc
and
repz
xchg
mov
sub
adc
rcl
daa
cld
pop
add
inc
jns
adc
mov
out
fld
ss
mov
jae
xchg
mov
inc
adc
mov
sarb
fstp
test
add
adc
mov
dec
lods
mov
ror
xor
out
inc
fwait
outsl
js
inc
iret
mov
mov
push
nop
xchg
dec
xor
inc
test
repnz
fdiv
lock
popa
cmpsl
add
xor
ja
fcompl
rcll
cmp
cwtl
imul
repz
data16
sti
and
pop
sti
adc
sbb
cmp
mov
and
mov
call
or
and
inc
fdivrs
sbb
int3
inc
bound
jge
push
inc
jp
jg
sbb
pop
mov
xor
mov
xor
fwait
mov
mov
and
adc
sub
pop
scas
rolb
sub
push
mov
lret
push
mov
loopne
repz
inc
sbb
cmpsb
outsb
bnd
fldcw
pop
dec
addb
decl
xchg
andl
cmp
mov
jmp
filds
decl
mov
cmpsl
xlat
pop
sbb
out
shlb
mov
mov
insb
jp
leave
or
jmp
push
shll
rclb
mov
rcrl
repz
adc
push
or
mov
push
adc
in
ja
dec
stos
lcall
mov
out
jo
lock
sbb
loopne
dec
sub
mull
mov
dec
pop
bound
sti
pop
sub
sbb
inc
push
xchg
cmp
mov
dec
or
fstpt
ja
lods
int3
sahf
mov
notb
cwtl
mov
xor
cld
mov
mov
inc
adc
out
sbb
xchg
mov
rcrl
mov
mov
add
test
push
xchg
ja
cmp
xchg
dec
mov
xor
lods
and
sbb
pop
test
aad
pop
and
out
daa
or
xor
pop
sbb
imul
mov
mov
and
push
mov
cli
mov
cmp
popf
into
mov
pop
sbb
push
arpl
enter
fisttpll
outsb
add
push
dec
lea
and
out
lahf
mov
xchg
pop
xchg
sub
cmc
dec
cs
xor
out
test
push
cs
repnz
es
pop
clc
cs
mov
push
lock
mov
lcall
inc
and
adc
scas
mov
dec
insb
pop
lds
sub
xchg
sbb
dec
jmp
sub
je
jae
jmp
js
jns
jb
push
add
cltd
fimuls
sub
xchg
loop
mov
sarb
fst
add
fucomp
xor
sti
mov
add
dec
lock
jbe
stc
ljmp
cmp
sbb
pop
mov
iret
and
and
clc
loop
mov
dec
pop
or
std
jmp
and
jp
and
ficompl
je
rorb
xor
test
adc
push
push
jne
imul
cmp
lahf
ret
test
add
xchg
push
out
cmp
fiaddl
inc
ffreep
dec
pop
xlat
je
imul
pop
xlat
push
ljmp
and
in
mov
outsl
push
jns
xor
xchg
mov
mov
cld
mov
mov
inc
filds
in
cwtl
out
inc
out
outsb
adc
pushf
push
xchg
mov
xchg
fcomi
xchg
add
and
into
sbb
adc
xor
in
lock
aas
jbe
fcmove
arpl
xchg
fwait
add
filds
popa
or
add
sub
clc
lcall
addr16
mov
pop
push
out
repz
fcmovnu
adc
jno
loopne
shll
adc
cs
jle
daa
and
inc
push
lock
sahf
fiaddl
dec
in
xor
xor
aaa
xor
xchg
pop
jo
cld
or
bound
jp
fisttpll
sahf
jnp
cmp
popf
inc
inc
popa
pop
mov
daa
dec
out
or
and
outsb
imul
sbb
xor
fwait
icebp
out
sub
xchg
jl
adc
clc
insb
sbb
jne
sti
cld
loop
or
jp
popa
aad
jno
mov
int3
ss
inc
std
cmp
mov
push
repz
push
sub
mov
repz
pusha
pop
cmpsb
push
push
jp
pop
jecxz
jno
das
dec
imul
ret
xlat
dec
push
fistl
shll
sbb
std
push
jb
ss
test
testb
xchg
mov
jns
fmul
pop
rclb
outsb
jmp
ss
les
out
test
jae
sbb
popa
mov
mov
pop
adc
imul
or
mov
out
popf
sbb
mov
jns
xchg
pop
push
inc
fildl
stos
xor
add
jno
inc
cmpb
sub
cmp
loop
aam
mov
mov
imul
leave
cli
idivb
mov
jnp
mov
sbb
das
lock
jmp
jno
sarb
shll
pshufw
xchg
xchg
mov
adc
sub
rorb
dec
cmp
mov
inc
mov
pop
adc
es
push
js
or
lret
repnz
cmp
fs
mov
adc
cmc
xor
or
loop
xchg
aaa
push
jg
mov
daa
xor
test
lea
jecxz
add
jmp
data16
xor
ret
xor
arpl
jecxz
cli
int3
and
mov
lods
fimull
lods
pop
arpl
hlt
sahf
repz
pop
mov
mov
xchg
cmp
sbb
hlt
cmp
mov
pop
sub
xchg
cltd
sti
addl
mov
pinsrw
pop
fmull
pop
jbe
cmp
shll
clc
pop
xchg
push
jecxz
test
mov
jp
add
cld
ds
pusha
mov
jns
push
sub
lret
cmp
add
jecxz
stos
movl
aaa
inc
pop
iret
jge
xor
movsb
ficoms
les
pop
call
sbb
adcl
repz
rol
subl
dec
imul
mov
pop
xlat
add
jmpw
repz
js
jp
xor
insl
adc
lret
popa
cmpsb
mov
fwait
sub
cmc
movsb
add
movsl
xchg
dec
adc
dec
je
cli
iret
or
enter
push
mov
shl
stos
xchg
inc
insl
xchg
filds
aad
arpl
xchg
and
pusha
imul
enter
in
pop
dec
or
sbb
je
out
push
xlat
pop
mov
insl
push
xchg
ret
pop
ss
or
mov
cltd
mov
mov
add
shll
xor
rorl
rcr
or
pop
jmp
inc
lods
inc
clc
in
popf
les
pop
aas
scas
cli
add
dec
test
dec
fs
dec
and
ja
adc
mov
jg
aam
adc
fwait
sbb
xchg
mov
test
pop
and
dec
or
and
int3
mov
dec
aad
mov
mov
xor
or
or
xchg
pop
insl
repz
push
mov
out
xchg
lahf
cmc
into
sub
call
das
pop
mov
jns
sub
roll
and
jbe
outsb
mov
adcb
fdivr
pop
add
xor
arpl
dec
sbb
pop
enter
xchg
sub
loopne
cmpsb
cmp
nop
and
sub
lret
push
nop
pop
jae
nop
or
add
add
out
fwait
cmp
mov
mov
into
push
sbb
and
je
test
mov
gs
and
cmc
in
mov
fistl
loopne
mov
jno
rcll
mov
scas
aas
and
je
into
mov
ja
cli
or
xchg
cmp
das
aas
mov
pop
adc
sub
mov
fsubs
pop
push
sahf
sbb
sti
xorl
aas
sub
dec
or
pop
jmp
jp
mov
idivl
inc
int3
xchg
push
and
fstps
mov
mov
sub
rorl
mov
hlt
mov
pop
fstps
dec
inc
pop
mov
push
mov
cmp
mov
xor
push
fwait
popf
add
sbb
ret
icebp
mov
lret
push
adc
add
sahf
pusha
and
imul
pop
jg
ficompl
inc
sbb
fwait
adc
cld
lret
mov
pop
sti
decb
mov
bnd
popf
stos
mov
dec
in
jne
mov
cmp
stos
inc
inc
jnp
sub
inc
lcall
fmull
stc
sbb
mov
xchg
xor
scas
dec
adc
scas
mov
int
inc
test
mov
sbb
mov
cmp
sub
jb
dec
lock
lods
jp
fisttpl
scas
add
inc
pop
lahf
push
mov
rcrb
inc
adc
movsl
xor
lret
int
cmpsl
push
xor
mov
imul
movsl
das
test
aam
loop
into
mov
pushf
sub
cmp
sbb
scas
lds
push
push
dec
xchg
imul
sub
mov
fwait
movb
push
mov
movb
xchg
arpl
inc
cld
inc
sbb
and
pop
or
mov
xchg
pop
imul
into
mov
les
inc
aam
daa
and
pusha
nop
add
fiaddl
iret
or
lret
pop
or
aaa
xor
cmc
adc
addl
icebp
adc
shll
pop
push
jl
mov
jb
xor
inc
add
xchg
xor
add
mov
push
inc
jge
jmp
stos
xor
cmpsb
rcll
xor
pop
adc
cltd
jb
cmp
mov
jbe
xchg
sub
pop
add
sub
cmp
sub
lret
testl
mov
push
lods
cmp
lahf
xchg
outsl
xchg
mov
push
pop
lea
dec
pusha
sbb
dec
adc
fistps
pop
dec
cmp
rcl
pop
jle
ljmp
lock
sub
cld
test
adc
leave
jecxz
int3
dec
or
push
push
adc
pop
dec
jno
into
into
aad
push
mov
dec
scas
out
ljmp
mov
aaa
lods
mov
adcb
xchg
popf
mov
fisubrl
push
xor
pop
int3
lret
jne
rcl
outsl
sbb
xchg
aam
sbb
mov
pop
cwtl
je
xchg
lahf
xor
out
cmp
inc
aam
and
pop
jle
ja
mov
cmp
sub
sbb
jle
cli
int3
xor
test
enter
jmp
int
pop
out
iret
je
fnsave
push
or
push
sub
lret
addb
stos
mov
addr16
jp
les
adc
pop
lods
mov
orl
push
js
lcall
add
out
mov
sbb
das
int3
push
les
sbbb
jno
scas
and
dec
test
adc
xchg
div
adc
mov
icebp
xor
rcll
or
aad
push
sbb
push
fs
xchg
aaa
inc
test
cld
dec
pop
loope
inc
je
test
cmp
adc
jge
flds
pop
nop
jae
xlat
test
adc
mov
add
add
add
sti
test
cs
xchg
into
ficompl
test
mov
mov
into
bound
repnz
xorl
or
movsl
sub
xor
add
enter
inc
push
pop
xor
mov
mov
sub
add
push
xor
mov
adc
nop
inc
mov
push
sub
stc
push
sub
cmp
push
imul
idivb
jl
enter
cmpsl
and
dec
sahf
cmpsl
ret
push
and
or
ja
ficomps
test
mov
out
dec
addl
test
aam
xchg
mov
cs
mov
mov
notb
imul
cli
into
add
ret
and
out
sbb
dec
test
icebp
frstor
insl
lcall
jnp
pop
lods
mov
xlat
aas
pusha
iret
pop
sbb
jg
cmp
sbb
lsl
shlb
mov
fcmovb
xchg
divb
inc
test
jne
int3
stos
mov
rcrb
je
adc
mov
rolb
xor
addl
enter
jmp
jns
xor
mov
enter
gs
shr
push
push
test
pop
outsb
pop
mov
cltd
dec
outsb
pop
dec
sbb
push
add
push
je
imul
adc
test
cli
mov
outsl
mov
in
xor
arpl
gs
dec
xlat
insb
push
inc
imul
mov
cmp
lds
scas
adc
cld
popa
cmp
pop
rorl
mov
lods
or
mov
xchg
jmp
push
sti
stos
ret
loopne
push
call
sbb
or
pusha
and
scas
pop
sbb
movsb
push
ror
call
subb
scas
hlt
mov
mov
inc
adc
imul
mov
lret
insb
shlb
les
mov
inc
lcall
bound
out
cmp
jg
test
and
loop
push
mov
clc
cld
inc
dec
cmp
aad
mov
mov
xlat
shl
pop
xlat
mov
mov
fucom
push
push
inc
dec
ss
dec
or
lret
ja
jb
sti
outsb
rcl
imul
xchg
rclb
jnp
arpl
push
outsb
out
add
xor
xchg
push
adc
jnp
adc
adc
push
and
push
lock
add
xchg
mov
adc
cmp
jb
out
insl
sbb
mov
sbb
out
leave
jmp
push
aam
inc
mov
rcr
in
rolb
pop
lock
pop
jecxz
test
pop
cmc
repnz
jne
jp
or
or
cld
stos
dec
sbb
mov
lahf
adc
adc
ljmp
xor
mov
pop
scas
jecxz
inc
gs
call
cli
pop
pushf
pop
sub
leave
mov
rcrb
add
arpl
jo
xchg
dec
scas
lret
mov
push
mov
sub
shrl
das
loopne
cmp
std
rclb
pop
lods
and
rcrb
fdivs
outsb
mov
mov
xchg
clc
push
pushf
add
cltd
add
mov
loope
and
jns
cmpsl
and
addb
sub
shlb
test
dec
in
rcr
adc
mov
sbb
fadd
in
adcb
cli
inc
js
pop
fdiv
mov
push
cld
pushf
inc
push
xchg
repnz
dec
ljmp
xchg
cmp
leave
adc
testl
adc
test
into
fdivrs
and
aaa
lods
ja
fcom
or
rcrl
das
in
mov
shrl
xchg
mov
dec
xchg
add
ja
hlt
xor
mov
and
loope
shll
cmp
lahf
adc
jmp
or
or
inc
push
cld
mov
push
push
pop
test
fs
cmp
ss
bound
push
test
shlb
lahf
negl
inc
inc
or
or
sbb
mov
mov
aad
jmp
jns
cld
out
hlt
jns
push
adc
imul
xor
inc
xchg
loope
shrb
push
rclb
pop
sahf
pushf
mov
inc
popl
sub
enter
jge
loop
xor
xlat
pop
aas
and
outsb
sub
fs
dec
cwtl
shlb
rcr
aaa
inc
repnz
enter
rol
add
fildll
pop
lods
arpl
dec
insb
sahf
pop
and
mov
mov
lds
dec
xchg
loopne
addl
mov
adc
push
and
dec
aas
scas
add
in
std
lock
daa
in
add
lods
push
mov
or
shll
ja
mov
pop
mov
or
cli
xor
fildll
cmove
test
inc
test
pop
add
std
in
lods
sbb
mov
aaa
cmpsb
dec
push
call
sub
push
cwtl
pop
add
loopne
ficompl
xor
out
cli
stos
addr16
mov
inc
pop
daa
sub
out
dec
adc
cmp
arpl
push
mov
imul
mov
jb
in
mov
pop
xchg
fwait
and
das
hlt
jecxz
rcll
imul
jne
enter
ja
mov
or
stc
xchg
std
nop
dec
shlb
mov
rclb
and
mov
and
sti
pop
jl
jmp
adc
mov
push
std
xor
push
sub
setle
xchg
daa
mov
sub
mov
adc
mov
bound
adc
scas
xchg
or
scas
insl
dec
dec
add
dec
xchg
ja
scas
dec
ret
test
or
dec
and
pop
mov
call
fidivs
jge
repnz
leave
mov
in
ficoms
mov
sub
frstor
jge
ret
cmp
test
or
pop
and
test
sub
cs
push
adc
xor
in
sbb
nop
jmp
cltd
arpl
push
lock
daa
sub
movsb
push
push
xchg
inc
and
in
mov
popl
cli
adc
cltd
inc
leave
push
bound
lahf
testb
mov
mov
inc
push
xchg
xchg
cltd
std
push
pop
lea
sub
pop
insl
pusha
jge
dec
sbb
pop
mov
push
xlat
out
pop
lods
push
add
pushf
pop
pushf
inc
cmpsl
xor
or
inc
push
mov
add
inc
and
add
mov
jns
xor
sbb
ret
push
or
rcll
push
test
xlat
cli
xchg
mov
out
and
scas
xor
cmp
or
jmp
bound
std
test
loope
and
mov
xchg
nop
mov
or
sub
roll
or
lock
sbb
jns
loope
jge
shl
mov
fidivs
pop
loope,pt
dec
mov
enter
mov
stos
sbb
sbb
xor
popf
inc
lahf
cmp
mov
adc
and
adc
mov
xor
push
mov
pop
enter
icebp
inc
cwtl
cltd
je
rcr
cltd
or
test
dec
xchg
pop
inc
mov
fcmove
jge
into
pop
lods
in
pop
cwtl
test
in
push
adc
pop
enter
add
fwait
insb
lods
stc
cmp
or
cmp
aam
loope
imul
fwait
xlat
lahf
xchg
dec
adc
data16
cmpsb
iret
adc
std
sarl
arpl
stc
add
sub
movsb
xor
lahf
and
cld
sub
pop
js
sub
jae
fstpl
loopne
cmp
mov
mov
in
jp,pn
std
inc
mov
cmp
fdivs
scas
pop
jecxz
int
pop
jmp
popa
pop
jg
xor
dec
ficomps
pop
in
pop
rcll
dec
faddl
popl
ret
adc
and
cmp
and
ds
add
adc
or
popf
les
pop
div
fsub
mov
jnp
xor
jb
adc
mov
cmp
test
in
or
mov
xor
jbe
ja
in
popa
out
xchg
sarl
mov
insb
movsb
dec
jb
jmp
mov
fdivrs
fisttpll
inc
xchg
jmp
adc
lock
mov
mov
insb
xchg
cmc
mov
insl
lcall
mov
and
push
jne
and
testl
outsb
mov
cmc
add
pop
sar
arpl
sbb
aam
push
imul
add
icebp
je
push
xchg
inc
xchg
int3
ljmp
adc
inc
pop
cmpb
fnstenv
mov
or
mov
rcrl
fsubrl
inc
lods
sbbb
mov
inc
rcrb
fwait
je
clc
xchg
mov
xlat
cwtl
rorl
dec
mov
cltd
mov
lret
int3
push
scas
pop
out
jl
jb
ss
lods
push
fdivr
xorb
leave
mov
shl
push
mov
xchg
adc
enter
jmp
or
adc
mov
or
mov
and
lcall
pop
fstps
fxch
es
mov
scas
bound
test
mov
push
jae
add
adc
fnsave
pop
fdivs
cld
xor
gs
aaa
lret
jo
xchg
mov
call
xor
je
lds
cmp
pop
add
cmp
jmp
clc
idiv
sbb
mov
imul
int3
pop
mov
push
pop
xor
adc
je
add
mov
push
fs
mov
xchg
cmp
pop
mov
ss
hlt
inc
repnz
stos
mov
pop
mov
push
push
pop
mov
movsb
shll
add
loope
mov
inc
pusha
loope
xchg
mov
in
mov
pop
mov
test
adc
repnz
mov
lods
mov
ds
aaa
push
lret
enter
pop
add
mov
int
adc
xchg
dec
cwtl
pop
rol
lock
pusha
add
or
pop
sbb
aam
loop
frstor
out
adc
push
sub
sar
insl
sbb
ficoms
call
and
repnz
stos
cld
xor
mov
fsts
out
fldz
pop
add
outsl
int
inc
mov
insl
xor
mov
jno
out
fxam
inc
shl
mov
pop
push
imul
dec
jl
dec
ss
jl
ret
pop
sub
sbb
xchg
cmp
jb
xor
aam
mov
cltd
inc
fcoml
dec
in
dec
popa
stos
jge
xor
and
jns
inc
sub
sahf
rcl
or
dec
jecxz
dec
das
mov
rcrb
xchg
push
ds
or
in
pop
mov
mov
mov
in
data16
arpl
inc
lock
mov
dec
std
jl
imul
shlb
outsb
idivb
jle
pop
adc
lods
mov
inc
fidivl
mov
mov
push
mov
push
daa
loop
mov
fadds
jnp
call
mov
pushf
push
imul
in
and
inc
fisttpl
dec
and
inc
cmpsl
mov
mov
lods
push
mov
lea
jl
imul
sub
stos
je
insl
push
xchg
mov
add
sbb
es
inc
andb
ret
pop
gs
push
int
and
mov
imul
and
ds
or
push
ss
imul
push
dec
mov
xchg
lea
jne
bound
add
xchg
sub
lods
jl
cwtl
and
pushf
imul
mov
scas
out
ds
movsl
out
pusha
adc
pop
icebp
neg
or
or
mov
shlb
in
in
repnz
test
stc
adc
pop
pop
dec
sbb
mov
add
mov
in
out
aaa
mov
mov
adc
repnz
mov
es
das
or
insb
call
mov
fs
xor
mov
insl
arpl
mov
inc
xorl
sbb
inc
or
sbb
insl
jge
imul
pop
or
mov
lcall
jb
mov
cmp
cwtl
scas
repnz
dec
fs
mov
sub
data16
pop
push
movsl
xchg
or
leave
push
mov
jo
pop
rcr
jl
rclb
jne
cmp
and
pop
jge
in
xor
fisttpl
mov
dec
or
in
adc
mov
call
push
jge
fistps
aas
inc
mov
adc
int3
push
add
xchg
xor
xchg
pushf
fmuls
inc
mov
mov
out
mov
pusha
cmp
mov
mov
inc
cld
jmp
aad
adc
ja
stc
test
incl
out
aad
out
mov
lcall
jl
test
jmp
les
dec
movsl
add
addr16
fildl
or
loop
aad
fcmovnb
or
push
mov
sahf
pushf
sub
push
jp
xor
std
mov
jl
add
cmpsb
inc
fcomps
inc
push
sar
jl
cltd
inc
js
cmp
popa
test
mov
fst
inc
sub
xchg
mov
jnp
sbb
in
push
mov
push
or
add
bound
xor
std
lea
out
jp
push
out
repz
je
sub
ret
les
frstor
hlt
push
lahf
mov
call
das
sbb
pop
and
lods
mov
out
out
jp
in
cltd
fwait
mov
ljmp
ss
adc
fldenv
jg
sub
mov
stc
cmpsb
setae
push
popa
xchg
enter
xchg
and
push
mov
xor
or
mov
js
push
push
sub
xchg
stos
adc
xor
push
and
ljmp
ds
fisttpl
repnz
mov
cmp
shl
sti
and
push
mov
daa
test
lcall
dec
popa
in
je
loopne
push
xchg
push
jle
xchg
push
cli
lret
jne
jmp
inc
push
cmp
mov
sub
sub
cmpsl
mov
mov
fwait
xchg
mov
and
adc
cltd
rcrb
cmp
fcomps
scas
pop
dec
mov
cmp
mov
into
test
pop
mov
jmp
sub
cli
mov
and
cmpsl
mov
push
dec
mov
xor
mov
lahf
mov
mov
and
xor
and
xor
pop
and
shr
fisttpl
ficoms
adc
cmp
cmpb
dec
push
jp
shl
mov
sbb
xor
loope
dec
cs
imul
inc
mov
fdiv
and
std
fiaddl
cmp
jp
lock
bound
xchg
insl
dec
das
sbbb
xchg
or
bound
loopne
dec
dec
enter
popa
pop
iret
xchg
aad
sub
xchg
and
inc
bound
mov
lock
cmp
lea
out
ficoms
push
es
pushf
jl
dec
cmp
sbb
pop
test
outsl
inc
sahf
int
ret
xor
sbb
sbb
mov
xor
mov
scas
sub
or
xor
inc
in
adc
xchg
lds
cld
jmp
repnz
inc
push
ja
popf
mov
pop
push
cs
loopne
adc
or
or
ror
mov
jle
mov
divl
jbe
push
add
fnsave
ret
stos
cmp
mov
call
aaa
ds
xor
stos
repnz
sahf
mov
xor
js
ror
hlt
mov
scas
ds
fsts
mov
repz
repz
xchg
cli
or
sub
cli
dec
cltd
mov
sbb
icebp
arpl
nop
sub
lock
mov
xchg
lcall
popf
pop
dec
fmulp
aaa
jecxz
mov
mov
fs
out
xor
mov
jp
add
in
push
jp
jle
test
setge
pop
dec
pause
fwait
rcrb
xchg
push
adc
jmp
mov
mov
icebp
call
fwait
jns
fmull
cmpb
aas
lcall
bound
mov
fdivs
cltd
xchg
lea
adc
mov
repz
xchg
inc
lods
cs
clc
aas
xlat
jge
loopne
mov
xchg
mov
sbb
push
hlt
mov
clc
mov
cwtl
shrb
push
addb
cmp
push
mov
sub
nop
inc
sub
filds
cmp
sub
nop
and
and
icebp
icebp
push
rcll
push
adc
sub
je
lret
or
sbb
cli
hlt
pushf
jne
shlb
cltd
loope
or
or
or
pop
sahf
scas
enter
mov
lea
and
lcall
xchg
push
jmp
in
xchg
orb
mov
push
cwtl
jmp
dec
mov
and
push
xchg
leave
sbb
scas
shr
push
dec
sti
pop
ret
jbe
jns
inc
aad
push
stos
data16
jbe
lret
or
sbb
pop
dec
push
lea
mov
push
dec
mov
mov
pushf
pop
mov
jmp
dec
movsb
loop
into
bound
mov
mov
mov
int
jns
add
jb
or
cwtl
in
dec
jecxz
add
lods
adc
and
inc
cmp
lret
fdivr
nop
or
mov
mov
aam
dec
in
movsl
pop
push
mov
adc
arpl
in
mov
shlb
push
fcoms
lods
out
mov
mov
movl
enter
mov
pop
ss
aam
push
pushf
sbb
xor
pop
add
jp
inc
in
daa
cmp
mov
lock
stos
sub
test
add
pop
outsb
inc
push
lret
mov
push
aad
pushf
dec
xor
cmpb
in
mov
nop
pop
push
mov
test
lock
xor
push
shl
ficompl
cli
orb
lahf
push
mov
and
sub
hlt
js
int3
sbb
insb
pop
test
jl
xchg
mov
or
rcrl
int3
dec
or
xor
lea
mov
lea
sahf
push
jnp
xor
xor
mov
je
movsl
mov
push
jl
movsb
xor
pop
xchg
push
call
xchg
mov
push
add
jno
jg
mov
ficoml
fxch
cli
outsb
sbb
sub
push
fs
xchg
cmc
in
jo
hlt
lahf
cli
jnp
and
xchg
and
test
cli
lahf
das
fmulp
and
out
stos
movsb
ss
push
pop
adcl
sbb
insb
incb
and
push
repnz
add
aas
mov
cli
icebp
in
mov
jae
loop
xchg
mov
jp
sbb
scas
call
leave
and
ret
in
push
xchg
xor
xchg
rcl
sub
bound
imul
ss
mov
cli
adc
pop
dec
ret
loope
add
mov
xchg
mov
jno
and
popf
xor
mov
call
mov
shl
mov
je
pushf
jmp
cltd
adcb
adc
loope
or
mov
andb
push
push
cmc
les
cmp
and
out
fsubrl
aaa
jno
mov
aam
leave
jp
push
lcall
aam
aam
movsl
xchg
popf
js
repz
hlt
insl
dec
sbb
push
pushf
pop
jp
mov
cmpsb
sbb
sahf
mov
iret
add
je
lods
lods
scas
inc
ror
ja
jo
out
jnp
cmp
push
or
cmpsl
xor
add
aas
sub
cld
out
inc
cmp
pop
xchg
xor
bound
adc
dec
mov
dec
insb
int3
rol
movsb
xchg
sub
in
dec
jg
push
and
xchg
bound
inc
jae
adc
jge
and
ds
mov
sub
sbb
pop
fmuls
popa
xchg
rorb
loop
inc
xchg
arpl
mov
mov
push
lock
hlt
jne
adc
jg
fs
xchg
hlt
aaa
shrb
filds
call
fildl
cmp
shll
or
in
jnp
imul
mov
cmpsb
mov
cmp
movsl
call
mov
sar
pop
ret
push
pop
sbb
fiadds
dec
dec
xchg
xchg
inc
mov
xchg
rcrl
xchg
js
sbb
sahf
adc
lock
pop
mov
fwait
enter
pop
xor
cmp
test
loope
mov
stc
mov
fnstenv
dec
mov
pushf
inc
jae
std
setno
popf
xor
movhps
icebp
aaa
cmp
das
int3
icebp
in
pop
dec
sbb
xchg
cmp
xor
bnd
lds
xchg
icebp
faddp
pop
mov
out
lds
data16
ja
add
xor
imul
xlat
mov
adc
sbb
add
xorb
sbb
inc
shl
ja
je
dec
mov
cmp
movsb
imul
add
xor
jge
mov
xor
jl
std
push
sbb
in
adc
push
in
pop
ret
fdivrl
sub
or
pop
icebp
das
gs
repz
icebp
lcall
or
pop
movsl
mov
ret
lods
rorl
icebp
cmp
test
lcall
movsb
loope
loop
sbb
in
test
filds
sbb
sub
mov
lea
popf
push
jl
icebp
out
imul
popf
mov
push
mov
xchg
cmpsb
push
fdivr
clc
pop
jne
dec
js
mov
sub
ljmp
add
pop
sbb
out
movsb
mov
mov
out
adc
jb
aas
dec
lock
pushl
cmp
or
mov
icebp
sub
decb
mov
xor
add
cld
lahf
inc
mov
ficompl
leave
je
mov
addl
mov
sbb
adc
testb
push
xlat
mov
loopne
popl
repz
jg
stos
mov
mov
sub
sbb
mov
das
and
mov
in
xor
add
daa
pusha
adc
testl
stos
cs
out
arpl
cmpb
pop
mov
cmp
mov
aad
popf
jno
jg
out
adc
aaa
mov
incl
aaa
aad
adc
push
cltd
mov
cmp
jp,pn
mov
push
pusha
push
mov
cwtl
into
dec
inc
mov
rcrb
pop
mov
mov
fstl
imul
es
idivl
dec
aaa
test
ret
out
insl
xchg
jg
call
es
sbb
dec
jne
sub
mov
or
cltd
nop
or
ja
scas
mov
movsl
mov
add
cmp
aad
xor
adc
push
mov
or
pop
dec
bound
int
js
push
ret
and
or
iret
push
leave
dec
stos
xchg
sbb
sbb
sbb
inc
or
cmp
aam
bound
dec
ja
pop
push
push
inc
adc
test
push
call
push
ja
lods
cli
mov
lea
enter
jg
ds
pop
or
lret
dec
sahf
fadd
mov
mov
adc
mov
mov
psllw
mov
fisubrs
adc
and
sbb
inc
sbb
xor
mov
imul
jg
mov
mov
sub
and
out
or
and
test
dec
imul
or
pop
pop
rcrb
mov
arpl
xor
orl
jmp
movb
cmp
divb
xchg
es
add
cmpsb
xchg
pop
ret
add
sbb
out
cmpsl
cli
fwait
dec
mov
mov
loope
xchg
cltd
cli
outsl
pop
xchg
dec
mov
stos
loopnew
pop
jns
int3
adc
test
xchg
imul
and
enter
stos
into
pop
lcall
in
mov
pop
cmp
stos
mov
fcoms
and
or
int3
inc
lret
in
cmc
fcoml
lret
fstpt
stos
pop
popa
repnz
push
xchg
mov
cmp
jne
fnstcw
ficompl
adc
aaa
pushf
inc
mov
jb
shr
cmc
dec
xchg
sub
mov
mov
push
push
jns
jmp
jnp
hlt
std
movsb
bound
push
js
test
or
movsl
movsl
xchg
xor
dec
icebp
xchg
sub
jb
pushf
jg
nop
mov
movsb
dec
sub
int3
out
dec
je
mov
inc
ds
insb
mov
push
lahf
jle
jno
adc
ss
mov
mov
add
adc
or
std
fimull
add
push
mov
lods
xchg
testb
xchg
cmp
and
push
lds
movsb
ret
cmp
js
xchg
rorl
inc
mov
cmpb
stos
or
or
mov
lret
mov
std
jb
leave
adc
clc
push
cmpsb
frstor
push
adc
arpl
or
int
and
jle
int3
cli
cli
add
movsb
mov
int
push
adc
ret
xor
push
and
pop
loope
addr16
jb
mov
adc
mov
xor
pop
test
adc
pop
and
mov
xchg
dec
cmp
mov
dec
imull
cmp
add
pop
push
push
ds
sbb
mov
cmp
in
mov
pop
out
mov
sarl
jnp
dec
test
jno
pop
out
dec
jae
loopne
mov
mov
sti
arpl
xchg
lea
dec
out
dec
das
inc
les
inc
sbb
xor
testl
push
sbb
leave
cli
mov
loope
lods
push
adc
pop
add
loop
mov
or
mov
sub
scas
dec
or
out
mov
xor
mov
push
jo
add
jnp
icebp
insl
jo
cmpsb
sub
loope
stos
and
outsl
mov
ja
mov
movsl
and
lea
nop
sub
sub
mov
mov
mov
add
frstor
decb
pop
xchg
cmc
jge
cmc
add
pop
stos
mov
pop
or
cmpsl
inc
cmp
mov
inc
rcl
aas
mov
inc
ljmp
dec
in
mov
pop
mov
sub
movsl
fldl
inc
mov
add
pop
fmull
out
add
jo
movb
pop
mov
fwait
dec
mov
lret
aam
stc
pop
das
data16
cmpsl
roll
jbe
sbb
xchg
mov
pop
cs
sti
out
mov
jge
loope
bound
mov
xor
cmpsl
sbb
adc
add
mov
jl
inc
idivb
xor
xchg
jle
sti
gs
lock
cli
cmp
imul
lret
jo
cmp
ljmp
lods
sub
xchg
loopne
sub
xor
or
mov
or
push
lcall
repz
outsb
test
push
pop
cmp
std
xchg
mov
cs
shlb
cmp
pop
xchg
cmp
pop
mov
inc
and
push
dec
shlb
inc
addr16
cmpsb
push
pop
and
cmp
js
adc
stos
test
or
cmp
or
mov
sbb
cmp
cmpsl
movsb
jmp
cmp
dec
jno
pop
test
xor
jo
sub
in
test
mov
sti
mov
jae
ret
into
pusha
iret
sub
pop
jle
pop
mov
mov
ret
push
cmp
pusha
jmp
dec
xor
cmp
mov
rorl
test
es
pop
mov
testl
jae
dec
ret
addl
dec
test
and
mov
mov
fisttps
in
dec
jge
mov
pop
jp
or
daa
in
out
shrl
push
fmuls
enter
in
fisttps
fdivrl
in
clc
mov
std
pop
mov
jl
mov
push
sub
jmp
ljmp
cmpsl
or
pop
push
jns
cmp
jge
lcall
mov
imul
mov
push
mov
hlt
cs
push
stos
aam
cs
pop
xchg
mov
daa
pop
dec
jmp
jp
inc
pop
xchg
mov
add
aam
jne
in
sub
fdivs
inc
lds
fcmove
adc
test
int3
mov
add
xchg
movsb
mov
in
rcrl
mov
imul
push
or
cmpsb
jne
cs
enter
sti
aam
lods
movsl
mov
adc
inc
push
mov
sbb
loope
mov
lahf
fs
popf
or
rcl
and
push
push
movsl
rorl
rorb
pop
fs
xchg
pop
fsubl
movsb
add
incb
mov
jbe
push
popf
call
fcom
pop
mov
adc
mov
push
scas
jmp
aas
movsl
or
in
aas
popa
add
jp
pop
fldcw
xchg
cmp
movsl
adc
loopne
stc
imul
imul
lock
push
insl
xor
dec
dec
add
sub
push
inc
cs
nop
pop
cmpsl
pop
sbb
sbb
mov
in
jl
int3
pop
leave
xchg
ret
xchg
adc
push
pop
mov
outsb
push
cli
cmp
inc
dec
into
fcmovbe
add
jmp
dec
cli
dec
or
aaa
dec
rolb
mov
xor
test
jge
call
cwtl
add
mov
mov
shl
add
jae
repz
stos
mov
sbb
xor
repz
lock
sub
mov
out
xchg
jnp
inc
int3
dec
popf
test
sub
jg
ljmp
daa
xchg
jp
xor
dec
fidivs
stos
adc
loop
push
cltd
imul
test
jg
jb
ret
into
or
sarb
xchg
push
dec
mov
mov
mov
inc
cmp
inc
clc
repnz
push
or
in
outsb
jmp
mov
cld
repz
cltd
lahf
xor
mov
cld
test
mulb
inc
out
call
in
sbb
mov
mov
ret
mov
stc
mov
fildl
mov
jae
addr16
push
jne
xchg
sub
add
stos
int3
sbb
mov
mov
fildl
xor
mov
cltd
xor
popa
sti
stc
aad
and
rcrb
push
loope
or
aam
insl
mov
xchg
cmp
insl
orl
loop
pop
jmp
lahf
out
and
hlt
cmp
movsb
cmc
sbb
out
xor
xor
push
int
leave
ljmp
shl
mov
and
pop
mov
dec
sbb
outsl
mov
lock
insl
cs
xorb
incl
mov
xchg
iret
xor
cli
mov
out
and
adc
ja
pop
push
sub
pop
subl
inc
icebp
lock
outsb
loopne
and
or
jno
int
pop
push
push
jnp
in
outsl
cmp
xchg
fadd
sahf
inc
push
jg
adc
sub
pop
sbbl
pop
add
xor
xchg
push
int
jmp
jge
fldcw
in
test
inc
in
fisubrs
addl
repnz
les
sbb
cs
mov
cmp
daa
movsb
ficoml
cmp
cmp
sbb
xor
test
gs
dec
mov
dec
xor
xchg
dec
lea
jge
inc
inc
xchg
xchg
sbb
bound
movsb
adcb
dec
sub
mull
xor
or
dec
xchg
fisubrs
arpl
and
mov
mov
or
sbb
dec
cwtl
hlt
xorb
mov
les
push
das
or
push
push
cmp
repnz
cmpl
mov
in
jbe
push
sti
in
push
inc
lahf
dec
dec
outsl
cmp
push
pop
mov
xchg
mov
pusha
cmpsl
mov
push
std
pop
cmp
dec
outsl
inc
repnz
jbe
xchg
xchg
jbe
push
and
hlt
dec
shlb
in
mov
in
or
xor
in
mov
jb
stos
pop
sahf
in
mov
cmpsb
cmpsl
xchg
pop
loope
jne
and
fistpll
jl
aas
add
fsubs
sub
test
xchg
cmp
jae
dec
dec
xchg
push
int3
gs
pop
idivl
sbb
and
jecxz
arpl
mov
pop
rorb
aas
mov
xchg
inc
inc
or
scas
fcmovu
pop
xor
sbb
add
aad
scas
call
insl
das
inc
pop
pop
inc
sub
push
push
adc
aas
pop
mov
aaa
jmp
insl
in
push
aad
cwtl
sbb
ja
aam
lods
pop
lret
inc
out
fists
push
push
ss
lock
sbb
sub
xchg
sti
nop
fildl
out
xlat
int3
rorl
fsubrl
fcom
scas
xchg
into
jo
ja
popa
clc
mov
dec
inc
call
testb
or
push
test
add
pop
mov
xor
push
add
ss
lods
mov
sbb
adc
inc
les
fistps
mov
ss
push
in
mov
or
xchg
xor
adc
insl
pop
jo
cmpsb
pop
fcmove
mov
fs
daa
test
aam
push
jo
mov
cli
jne
out
mov
push
imul
sbb
fnsave
pop
adc
fsubs
xor
mov
int3
fxch
insb
pusha
loopne
lea
xor
data16
inc
push
popa
adc
lods
push
cwtl
dec
out
xor
adc
orl
add
jp
fsubrs
fbstp
add
lds
mov
pop
or
out
sti
push
pop
adc
mov
jp
jno
mov
out
xor
sahf
sub
inc
add
and
aam
mov
inc
fwait
push
and
and
test
xlat
out
daa
mov
dec
pop
imul
aam
repz
nop
inc
push
out
js
sahf
pop
sub
adc
enter
adc
and
adc
jmp
fimuls
aas
mov
fs
xchg
testl
or
movsl
jl
mov
xchg
into
jnp
sub
adc
loop
or
roll
out
test
push
mov
push
mov
test
or
add
inc
push
sbb
ds
cwtl
ss
push
inc
scas
cmc
pushf
lahf
xchg
pop
push
lcall
jne
xchg
cwtl
dec
jmp
push
push
fnstenv
push
fneni(8087
xchg
inc
xor
mov
inc
push
ret
addr16
adc
jge
into
iret
fcmovb
inc
sbb
in
mov
xor
xor
lock
testl
stos
mov
xor
lret
shll
push
mov
jb
iret
int3
cmp
fnstcw
test
cli
lock
push
das
cmpsb
inc
test
sbb
mov
jae
adc
mov
sub
cmp
jae
stos
xchg
push
stos
shrl
imul
fs
test
push
insb
mov
cld
mov
and
inc
push
xor
daa
cli
movsb
jle
mov
pop
jno
mov
cli
sub
jbe
addr16
xor
or
mov
sbb
xor
push
adc
add
push
out
mov
lret
adc
dec
cs
fidivs
mov
fmuls
stc
mov
into
into
out
es
in
sbb
add
sahf
jns
je
xorb
in
mov
xchg
jae
mov
xor
fsts
loopne
push
stc
mov
loope
ss
jge
arpl
xor
mov
cltd
jo
xor
mov
fdivp
xor
push
inc
insl
mov
aaa
mov
dec
sub
mov
icebp
popa
test
daa
mov
inc
ds
into
jb
cmc
outsl
aas
mov
xor
movsl
negl
es
insl
movsb
iret
mov
test
cwtl
shl
iret
mov
cmpsb
fadd
mov
adc
cs
test
ss
ljmp
pop
jle
or
mov
fbld
movl
adc
pop
jg
xor
stc
stc
xor
push
or
rcrb
test
lahf
jnp
push
iret
sub
mov
cmp
out
fdivrp
sahf
sarb
add
dec
test
es
adc
ss
nop
int
insb
cmp
inc
push
sub
mov
mov
aaa
jo
pop
adc
cmc
add
pop
hlt
dec
adc
push
push
jge
leave
sbb
gs
outsb
aam
add
pop
aaa
adc
jp
or
stos
add
ret
pop
sbb
xchg
cmpsb
int3
cwtl
mov
das
adc
enter
cmp
mov
pop
cmp
arpl
das
sub
in
test
sar
adc
aam
jo
push
sbb
xor
sbb
push
enter
mov
inc
add
add
xor
clc
mov
or
mov
cltd
fs
sbb
and
pop
mov
mov
nop
adcl
movsb
clc
sbb
xor
bound
out
lds
popl
movsl
test
shl
jp
xchg
xchg
test
cmc
sarb
push
stos
jns
mov
mov
xchg
push
push
in
pop
adc
cmp
arpl
fwait
inc
mov
cmp
ret
sbb
imul
adc
sahf
sbb
mov
xor
outsb
shl
leave
add
int3
inc
in
std
cmp
hlt
or
cmpsb
cmp
cmp
push
cld
fnsave
arpl
pop
mov
xchg
mov
in
sub
cs
xor
mov
pushf
pop
sub
jmp
mov
mov
test
pop
loopne
jg
sub
imul
das
in
xchg
sbb
mov
push
int
mov
lret
stos
shrb
push
push
mov
or
mov
and
pushf
xor
sbb
mov
jnp
xchg
lock
sbb
fwait
mov
cmp
jns
or
repz
out
pop
sahf
into
mov
cmp
sub
lods
rol
decl
nop
rclb
ja
lahf
ljmp
rcl
jle
pop
sub
pop
pop
ret
out
xlat
lock
cli
movsb
shll
mov
or
dec
cmpsb
sahf
ljmp
jp
int
jno
adc
in
push
mov
enter
jnp
cmpsb
clc
xor
add
xchg
loop
dec
and
cs
mov
sahf
and
mov
mov
andl
pop
add
mov
lahf
pop
dec
aam
adc
std
std
xor
arpl
rcll
test
mov
or
inc
mov
mov
mov
xlat
jmp
sub
inc
mov
pop
dec
push
sub
int3
out
sbb
ret
add
stos
aas
dec
mov
cmp
cmp
lret
lods
mov
insl
push
ret
inc
stos
pop
ja
roll
lods
xchg
fmull
mov
pop
fucomi
hlt
jp
xchg
stc
dec
xchg
and
sbb
jecxz
dec
and
rcrb
push
test
arpl
xorl
inc
mov
pop
rcr
inc
jmp
sbb
dec
test
sub
pop
mov
jle
pop
fnstenv
mov
xor
sbb
hlt
lds
jle
or
adc
ret
cmpsb
sub
mov
pop
pop
dec
loope
jbe
arpl
adc
dec
xchg
or
mov
rolb
loop
adc
sbb
imul
bound
and
pop
sbb
push
push
int
fisubl
push
in
lods
sub
fmull
jns
popl
into
or
addr16
jne
insl
leave
or
mov
pop
sbb
add
subb
movsl
pop
dec
jnp
and
jno
pop
push
xchg
leave
test
or
sub
mov
dec
pop
jecxz
jg
xchg
pop
mov
jne
iret
or
iret
or
jb
icebp
ret
push
pop
jns
cmc
cli
sbb
aas
adcl
adc
xor
mov
jbe
jle
jge
je
fst
repz
jae
pop
cmp
shrl
push
das
mov
mov
mov
out
jbe
cli
inc
insb
popf
ret
mov
mov
es
test
push
xchg
push
fidivl
sti
loop
in
mov
sti
andb
mov
or
stos
and
es
or
jle
inc
mov
mov
mov
dec
jns
dec
lods
ds
or
enter
leave
loope
dec
sub
notl
out
push
or
and
sub
lock
fadds
cmpsl
xor
lock
aas
adc
fcompl
xor
pop
rolb
ds
cmp
cmpsb
sub
orb
mov
cmpsb
xchg
cmp
push
inc
add
outsb
cmp
lds
pop
jle
pop
jl
gs
inc
push
lods
out
fisubl
cmp
cmpb
lods
arpl
movsb
cmp
mov
pop
dec
insb
cmp
xchg
shl
stos
mov
cmpsb
adc
adc
loop
jb
jmp
cmp
out
fnstsw
or
jmp
cmp
xchg
xchg
xchg
ret
cltd
aam
push
adc
mov
into
scas
xchg
movsl
sbb
and
or
or
into
clc
jl
cwtl
and
mov
jge
and
sub
sbb
cmp
add
bound
pop
std
lret
lock
adc
movsb
arpl
xor
aas
leave
repz
dec
out
sti
dec
lret
xchg
jno
or
sub
jno
aam
test
mov
imul
leave
in
lea
jnp
xor
pop
lcall
aas
lock
popa
jae
clc
xor
push
loop
push
inc
jnp
dec
jae
dec
jns
in
aas
adc
mov
jg
in
subb
loope
lret
lea
into
scas
stc
dec
mov
dec
sahf
andl
sub
xlat
xchg
loope
and
dec
pop
fisttpll
inc
out
popf
sbb
xor
rcll
jl
xor
outsb
push
sbb
push
and
mov
les
fnstsw
cs
xlat
xor
ljmp
popa
add
leave
mov
je
inc
daa
enter
fcoml
inc
pop
movsl
lret
stos
xchg
data16
addr16
add
dec
iret
push
ljmp
sbb
jg
addr16
mov
xchg
aam
fisttpl
add
jecxz
or
add
aaa
aaa
aad
into
or
aad
lcall
je
loopne
inc
ja
fdivl
push
fstpt
dec
mov
popf
rcll
repnz
jbe
and
in
mov
xchg
dec
inc
sti
lret
test
xchg
or
push
lahf
scas
sahf
jo
xor
pop
in
dec
adc
hlt
jge
mov
enter
lret
xor
push
rcll
nop
push
imul
xchg
lret
daa
adc
push
and
xchg
push
stc
sub
or
ds
sbb
dec
mov
aaa
and
aad
mov
scas
insb
mov
and
xchg
and
xchg
dec
mov
sahf
inc
aas
mov
and
clc
mov
push
fwait
dec
sub
xchg
popf
and
xchg
out
gs
popf
sarb
imul
fs
out
or
mov
pop
and
jg
lock
arpl
mov
sbb
and
jns
push
and
push
out
pop
insl
mov
test
repz
mov
push
or
mov
cld
or
cmp
loop
je
rep
mov
movsb
fstp
pop
fwait
incl
fidivrl
loope
std
pop
push
sbb
jbe
xchg
pop
pusha
sbb
sub
std
xchg
and
xchg
dec
adc
cmp
pushf
jnp
wbinvd
clc
jo
sbb
mov
pop
cmpsl
insb
push
aaa
mov
mov
sub
popa
repz
ljmp
in
roll
data16
pop
pop
shlb
push
jne
mov
ud2
nop
mov
addr16
test
cmpsl
add
pop
ret
lret
sbb
jo
and
test
int
jecxz
mov
imul
rcl
fs
push
push
test
jo
pop
icebp
into
aaa
fidivl
pop
in
imul
aaa
out
aam
dec
xor
popf
pop
aad
cmp
jp
aam
loope
xchg
lcall
jecxz
add
std
sti
jmp
stos
scas
pop
dec
arpl
xchg
std
in
stos
push
and
inc
sub
out
pop
mov
pop
or
inc
adc
bound
push
or
push
inc
push
test
push
out
ds
cmp
inc
dec
add
xchg
cltd
hlt
repz
inc
jg
inc
lahf
sub
xchg
lods
mov
mov
fwait
pop
push
cmpb
and
push
sbb
stos
mov
pop
jmp
inc
lcall
and
xor
daa
mov
cli
xchg
or
data16
jmp
dec
pushf
xchg
dec
or
cltd
cwtl
sbb
sub
xchg
lods
jmp
lods
sub
sbb
mov
movsl
aad
sbb
outsl
ret
cmp
or
in
addr16
xlat
mov
inc
test
rcrb
jb
aam
cmpsl
lahf
ror
adc
ret
lret
jo
mov
shrb
push
mov
cmp
jge
push
jno
loope
or
cltd
in
mov
xchg
scas
xor
repnz
mov
mov
ret
xchg
adcl
dec
pop
pop
xchg
shl
jno
in
or
movsb
push
sti
cmc
fisubrs
call
dec
adc
int
jns
pop
jnp
cmp
pusha
insb
call
mov
mov
cwtl
out
test
and
hlt
add
sti
addb
xorb
int
xor
jnp
popa
cmp
adcb
or
das
jo
or
and
dec
mov
dec
jmp
jl
pop
ficomps
imul
int
sub
push
rorb
inc
insb
loope
lahf
cld
cmp
jne
subb
je
rol
movsl
divb
jne
mov
sbb
and
popa
inc
mov
stos
lock
mov
mov
lods
shll
cmp
cld
gs
adc
int
stos
cmp
jb
int
das
jae
pusha
pop
and
mov
or
pop
xchg
cmp
push
dec
xchg
dec
inc
sbb
aad
mov
bound
std
dec
mov
sbb
sahf
jne
mov
pop
mov
and
push
dec
xor
dec
adc
sbb
sub
popa
dec
xchg
sbb
mov
cmp
push
hlt
add
ret
push
adc
adc
mov
fwait
inc
sub
cmpsl
push
inc
fdivrl
xchg
adc
out
or
xchg
push
orl
insb
addr16
mov
mov
int
fs
add
leave
push
sbbl
mov
jne
testb
push
arpl
inc
pop
push
bound
adc
and
inc
pop
or
jecxz
push
scas
and
lcall
cmp
icebp
dec
clc
and
cmp
aam
inc
lods
dec
insb
stos
lods
movsl
sbb
test
jmp
and
mov
aaa
jno
frstor
adc
mov
mov
test
aam
push
add
xor
outsl
inc
subl
arpl
je
dec
aam
xchg
jbe
subps
inc
adc
out
add
xor
mov
inc
xor
sbb
pop
dec
lret
daa
sbb
out
in
mov
dec
idivb
out
pop
stos
xchg
mov
std
adc
sbb
icebp
test
loope
dec
ret
insl
inc
decb
cld
xor
jae
and
lea
test
test
add
shll
mov
pop
mov
or
outsl
mov
mov
lahf
rcll
adc
fadds
inc
xor
in
jp
push
push
orb
push
push
sbb
cmpsl
cli
add
aaa
mov
int3
jmp
cltd
xchg
dec
dec
inc
mov
adc
loope
out
xchg
std
in
sub
shrl
ja
mov
sbb
pop
les
dec
mov
inc
cmpsl
sub
scas
repz
mov
jle
lds
out
lods
pop
shrb
sti
cs
adc
or
pop
sub
push
push
cmpb
cmp
push
jbe
les
jne
cltd
adc
insb
gs
roll
inc
mov
pop
adc
xorl
lock
stc
inc
xor
jp
cmp
dec
mov
insl
adc
sbb
mov
jge
pop
push
hlt
mov
cmp
lcall
jb
cld
roll
push
psrld
dec
sbb
mov
jbe
test
ret
popa
js
push
jb
nop
dec
out
out
sahf
cwtl
stos
mov
fs
bnd
xor
and
out
dec
and
or
data16
adc
imul
jb
push
loope
and
cmp
push
loope
dec
lea
mov
aaa
movsl
scas
jecxz
cmpsl
in
out
jne
ret
adc
enter
jg
cmp
push
ja
shr
jnp
sti
sarl
rcrl
in
out
sub
sti
xchg
mov
xchg
mov
inc
cmp
sub
cmpb
mov
nop
mov
push
rcl
int
and
xchg
outsb
cmp
aam
inc
adc
hlt
in
mov
mov
in
in
pop
sub
addb
test
das
test
xor
fmull
and
xchg
lea
pop
mov
or
testl
mov
mov
rorb
mov
push
test
add
shl
mov
push
dec
les
je
xor
jmp
push
or
fdivrl
and
add
lahf
sub
xchg
xchg
cmp
or
adc
pop
jns
lcall
cltd
icebp
inc
scas
or
jo
and
ss
out
dec
sbb
inc
inc
or
cmpl
in
push
adcb
ja
adc
dec
sub
xchg
xor
xchg
je
out
cltd
pop
mov
cli
stos
out
mov
sahf
push
fld1
bnd
fmuls
inc
push
add
pop
movsb
test
sub
data16
push
fistpl
lret
out
outsl
xchg
outsl
fists
jg
repz
xchg
push
inc
add
jbe
out
xchg
mov
lods
jno
cmp
add
dec
test
fcom
xchg
cmp
into
sub
mov
mov
jno
in
subb
iret
xchg
loope
imul
sub
rolb
mov
test
movsb
cmp
xor
jbe
xlat
aaa
push
push
mov
dec
in
pop
arpl
pop
in
sbb
mov
test
sahf
push
loop
push
or
mov
jge
mov
ss
push
cli
shrl
mulb
pushf
mov
fisttpl
addr16
mov
das
stos
mov
js
out
std
test
xchg
out
test
hlt
divl
dec
sub
xor
nop
or
or
mov
pusha
inc
imul
rorl
pushf
lea
jp
xchg
shl
push
add
sahf
xchg
insl
fbstp
mov
mov
mov
and
xchg
fidivl
sbbl
and
jecxz
xchg
pop
sbbl
cmpsl
cltd
jbe
pop
lahf
adc
in
test
or
dec
out
nop
lods
mov
and
jns
outsl
cld
mulb
pop
jecxz
test
fistps
loopnew
scas
lret
jmp
movb
rol
roll
push
daa
cltd
fisttps
loope
pop
xor
out
mov
push
testb
aam
adc
mov
lahf
aas
dec
mov
push
cs
sbb
inc
pushf
das
mov
and
loope
xlat
jnp
lods
xor
sub
push
inc
cld
jecxz
xor
mov
xchg
popf
out
negl
xchg
mov
and
icebp
xchg
dec
push
in
add
out
mov
stc
pop
cmp
sub
lcall
push
xorl
clc
or
sub
dec
or
loop
pushf
in
xchg
ret
outsb
cwtl
push
loopne
pop
inc
lcall
fmuls
sub
inc
iret
mov
lock
jbe
cmp
add
dec
push
in
dec
shl
cltd
repnz
xchg
fwait
lcall
or
cld
mov
sti
hlt
imul
lahf
mov
jbe
sub
ror
in
decb
or
arpl
xchg
pop
lahf
test
and
sub
inc
add
mov
xchg
pop
mov
das
mov
dec
ret
jl
cmp
icebp
or
inc
xchg
mov
cld
lret
sub
push
push
or
not
fwait
adc
mov
dec
push
cmp
pop
aam
iret
push
mov
push
add
mov
xlat
jno
enter
pop
pop
jno
or
pop
inc
adc
and
aad
call
std
test
or
lods
rol
jno
das
fildll
popf
sub
jno
mov
jb
inc
jb
iret
stos
push
in
in
aad
add
cmc
sub
mov
cmp
test
outsb
sub
je
cmpsl
mov
jecxz
repnz
jge
and
les
xchg
lds
cmp
pusha
mov
lods
xor
push
and
and
fwait
dec
dec
sbb
jns
scas
inc
add
mov
jb
dec
sbb
xchg
lcall
test
jle
add
xor
aaa
loope
mov
pop
mov
inc
sub
lret
sub
adc
test
jp
fcomps
or
and
dec
xchg
out
loop
adc
or
sub
adc
in
xchg
or
lea
sub
cli
dec
mov
cmp
jne
mov
scas
scas
frstor
fwait
add
xchg
movsb
out
xchg
mov
in
aad
out
push
int
or
outsl
add
xchg
and
or
daa
mov
push
adc
and
sahf
cmp
dec
cmc
leave
xchg
jecxz
jle
push
pusha
filds
idivb
and
lcall
mov
mov
out
xchg
jne
or
xchg
add
xchg
xchg
imul
mov
popf
cmp
pop
imul
xlat
mov
mov
jne
or
lcall
ret
push
mov
sub
dec
or
ret
mov
ds
sbb
mov
out
add
sub
push
inc
sub
pop
push
or
jb
aaa
adc
jp
orl
cmpsl
pop
test
movsl
and
dec
roll
rcll
rclb
popf
pop
ret
scas
xor
frstpm(287
shl
das
pop
sbb
cmpsb
gs
nop
jo
lds
outsl
jl
out
xchg
jb
fs
ret
lret
test
clc
lock
cmp
inc
fadd
and
inc
adc
sub
ja
mov
and
nop
outsb
xor
mov
mov
fisttps
xchg
lods
xchg
out
cli
jnp
dec
dec
ja
adc
stc
pop
cmp
xlat
mov
inc
jns
adc
loop
out
mov
inc
or
mov
and
adc
mov
or
jmp
stos
mov
lods
sub
rsm
orl
inc
fisubrs
rorb
add
and
cmpb
sbb
movsb
icebp
ds
leave
sub
xchg
cwtl
xor
dec
cld
inc
lods
ljmp
insb
mov
loope
std
test
sahf
mov
xor
mov
or
push
inc
jl
xchg
jl
pop
pop
rol
or
sbb
adc
sti
cs
xchg
fprem
shlb
or
xor
push
cwtl
cld
pop
out
dec
enter
xchg
sub
rcll
jecxz
lods
andb
mov
mov
ljmp
lods
out
xchg
call
cld
jmp
pop
mov
or
cmp
into
xchg
daa
out
addr16
mov
ja
push
adc
adc
adc
mov
mov
xor
pop
ds
cmp
xor
js
or
les
les
loopne
pop
repnz
lods
pop
push
in
cmpsb
ret
lret
clc
xchg
fdivrp
int
or
dec
xlat
sahf
cmpsl
mov
repz
sbb
mov
mov
sub
bnd
pop
fstp
lret
lret
jg
jp
mov
mov
sti
addr16
clc
mov
xor
insl
mov
ds
jl
test
loop
sbb
fcmovbe
dec
cmp
sahf
xchg
sbb
arpl
jae
je
dec
aaa
cmpsl
dec
adc
pop
inc
push
aaa
fsubr
mov
add
pusha
dec
push
scas
test
out
and
mov
in
inc
repnz
cmp
loopne
stos
ja
xor
pop
es
xor
aaa
scas
test
sbb
and
adc
or
lret
inc
and
jge
sub
les
adc
jne
loop
add
mov
adcl
pop
into
sti
pop
adc
fsubrl
stc
xchg
outsb
insb
sarb
sub
xor
aam
repz
pop
sub
pop
les
fldlg2
in
inc
mov
pop
das
xor
lock
leave
push
addb
movsb
or
sub
dec
jl
je
js
add
fsts
add
sbb
scas
js
cld
insl
push
gs
mov
mov
pop
jnp
jl
shll
add
xchg
outsb
mov
movb
dec
jp
mov
sub
subb
adc
push
test
stos
inc
dec
imul
arpl
ljmp
cmp
jle
dec
pop
mov
xchg
mov
sub
push
in
xor
lahf
je
fstl
imul
iret
loopne
orb
aad
jge
repnz
cmp
cmp
lahf
add
cltd
hlt
mov
and
pop
inc
mov
jnp
push
iret
ret
aaa
xor
sahf
jb
and
mov
dec
adc
jmpw
aad
loopne
push
pop
cmp
je
enter
hlt
pop
mov
pop
sbb
pushf
out
adc
push
adc
faddl
popa
mov
clc
sbbb
fisttps
jl
repnz
mov
loop
das
iret
sub
add
push
mov
mov
and
push
das
loop
push
xchg
xchg
cltd
lods
lahf
mov
inc
aam
dec
dec
jmp
pop
pop
pop
mov
jl
inc
pusha
cmpsl
mov
sub
mov
in
ljmp
mov
repnz
mov
mov
adc
cld
cli
lahf
js
ret
movb
jb
mov
ss
or
xor
inc
popl
arpl
mov
jp
fisubrl
cs
sub
iret
pusha
mov
in
sbb
popl
inc
out
fmull
mov
sub
dec
mov
push
pop
das
push
stos
popf
sbb
add
in
sbb
jne
or
mov
mov
imul
and
popa
daa
dec
or
nop
daa
pop
pop
sahf
mov
fistpll
dec
call
add
fisubl
mov
lret
mov
push
and
lea
mov
pop
inc
insl
inc
mov
sbb
popa
enter
lret
fsubrp
mov
loope
in
adc
dec
push
mov
mov
sbb
jns
push
movsb
xor
andb
push
test
and
xchg
call
cwtd
add
int
pop
cld
fxam
push
or
fistps
jo
scas
lret
in
and
dec
movsb
iret
sub
and
lods
addr16
mov
test
movsb
cmpb
enter
fwait
idiv
push
xchg
jno
adc
xchg
aad
in
dec
mov
in
push
loope
dec
mov
mov
sti
divb
jno
jecxz
jno
mov
addl
jno
mov
mov
or
or
or
mov
scas
ljmp
pop
test
enter
divl
inc
mov
shrb
sarl
pop
or
or
pop
xor
fiadds
ret
push
dec
fsts
insb
movsb
nop
push
push
push
fmull
lcall
adc
mov
stos
dec
add
xor
stc
fcoml
add
lea
adc
lcall
pop
mov
sub
cmpb
mov
mov
or
xor
inc
lcall
subl
mov
mov
movsl
xor
fidivrs
movsl
insl
sti
mov
sub
shrb
imul
in
push
repz
lret
mov
adc
out
jecxz
stc
inc
mov
push
nop
dec
out
and
fmull
push
mov
xchg
sbb
jo
add
icebp
push
call
or
fdivs
inc
sub
adc
sti
push
push
leave
and
mov
aas
xchg
or
xchg
fs
add
xchg
popa
cmpsb
or
sahf
faddl
ret
push
es
inc
repnz
jmp
push
xchg
mov
sahf
mov
divl
mov
cmpb
xor
inc
outsb
jns
fists
imul
cmp
jge
aas
inc
jb
shll
jne
add
add
cltd
add
push
rcr
scas
cmp
test
cs
iret
in
inc
push
mov
jno
adc
and
mov
push
mov
ret
pusha
inc
rcrl
in
dec
pusha
adc
or
jecxz
xor
xchg
or
mov
shlb
pop
fldt
pop
f2xm1
mov
pusha
mov
lret
cmpsb
in
jno
sbb
adc
cmp
and
push
fidivrl
jbe
aam
pop
lahf
nop
notl
sbb
scas
movsl
mov
mov
add
je
call
xsavec
and
cmp
stos
outsb
cmc
lret
ss
sbb
rorl
out
ljmp
or
xor
lods
movsb
rclb
ficomps
rcrb
mov
and
cs
out
shrb
lcall
data16
js
nop
mov
cmp
push
jecxz
dec
push
lds
cmpsl
rcl
cmpb
xchg
aad
mov
sub
dec
add
mov
stos
cmpsl
mov
xor
iret
fisubrl
in
adc
jbe
out
mov
mov
mov
imul
lret
mull
jmp
fiaddl
sar
inc
roll
or
inc
xor
iret
mov
test
cltd
pop
push
shlb
xchg
mov
movsb
mov
push
rcr
jg
push
divl
ljmp
push
xchg
popf
test
scas
cmpsb
out
pushf
mov
dec
shrl
push
adc
push
das
pop
and
adc
mov
lahf
ret
test
in
jge
stos
in
mov
push
add
jp
test
rcll
add
sarl
std
push
adc
loopne
mov
rorb
movhps
mov
test
jecxz
mov
lock
adc
dec
fiaddl
lcall
jecxz
cmp
mul
mov
inc
iret
adc
cmpsl
cmp
push
pop
sub
es
sub
xchg
into
push
xor
xchg
ja
mov
jns
fstl
test
lds
mov
mov
dec
mov
jne
cltd
loope
xor
es
rcll
push
mov
ja
add
mov
cmp
mov
aas
inc
popf
xor
call
sub
jb
lcall
pop
out
outsl
nop
out
push
xlat
pop
sbb
test
and
repz
sbb
and
filds
sbb
shrl
ret
dec
andb
pop
push
popf
push
loope
jmp
push
adc
pop
popa
fs
andb
mov
shlb
cmp
inc
adc
pop
jbe
into
xchg
aad
xor
imul
test
mov
data16
sbbl
and
hlt
mov
pop
push
loope
mov
outsl
negl
add
adc
cmp
enter
inc
aam
mov
push
xchg
jns
pop
sbb
jno
addl
fstl
mov
pop
das
sbb
inc
out
mov
pop
mov
fsubp
dec
mov
clc
jecxz
or
pop
mov
mov
sbb
push
out
xlat
lea
xchg
lods
sbb
test
or
loope
mov
add
or
dec
mov
loop
adc
in
cmpsl
jmp
pop
cli
push
lret
dec
scas
test
push
mov
fwait
mov
push
insl
pop
mov
mov
push
push
ds
stos
imul
inc
cld
cmp
into
hlt
or
cltd
divl
cmp
push
loope
pop
jmp
inc
dec
cmp
pop
adc
sub
mov
mov
loope
cmc
scas
scas
lea
mov
test
mov
xchg
mov
sahf
jns
gs
push
dec
in
add
aaa
mov
pop
daa
test
clc
cmp
pop
aad
lods
adc
loop
mov
or
push
addr16
loope
dec
test
aam
cmpsb
ja
lock
cwtl
outsb
adc
js
pop
adc
icebp
push
push
stos
mov
decb
sub
call
and
shll
mov
or
adc
mov
xchg
inc
xchg
push
out
jmp
mov
or
fdivs
adc
mov
dec
repz
xor
je
xchg
push
xor
mov
rclb
mov
mov
sbb
add
mov
fidivl
leave
dec
mov
ret
mov
pop
mov
iret
push
sbb
pop
push
cli
adc
mov
fwait
and
cld
inc
ret
mov
lcall
push
mov
xor
mov
cmp
pop
fwait
add
push
shrb
or
add
jg
xchg
push
xchg
dec
cltd
js
add
pushf
inc
aam
add
popf
cmp
add
mov
jno
mov
stc
pop
add
test
sub
add
xor
jecxz
xchg
out
add
or
mov
popf
mov
or
inc
lods
fs
xor
jne
xchg
jne,pn
bound
xchg
add
and
call
mov
mov
adc
into
out
ret
or
inc
je
pop
jg
and
xor
jo
jecxz
lcall
cmp
lock
sti
jecxz
cli
or
cmpsb
mov
loope
jae
mov
inc
add
out
jo
pop
mov
xchg
or
xor
mov
ss
inc
cs
cli
ret
xchg
loope
cmpsb
cwtl
jge
dec
dec
push
das
repnz
add
mov
mov
sbbb
mov
push
jp
mov
jge
adc
add
xor
cwtl
mov
lahf
add
xor
and
fcoms
push
or
fsts
jbe
scas
dec
sbb
sub
sub
add
and
in
mov
push
rcll
js
mov
xorl
sarb
cmp
aam
xor
sub
lods
adc
inc
in
mov
shll
lds
in
and
ret
ljmp
cmp
inc
adc
or
add
dec
es
sub
ret
adc
je
dec
cmp
sahf
push
mov
imul
inc
fidivrl
clc
sbb
in
lret
mov
movsl
mov
jbe
dec
ljmp
ss
xchg
inc
fstps
xchg
outsl
adc
aas
adc
in
add
les
insb
mov
repz
and
mov
cmp
test
push
adc
xchg
iret
or
add
and
xor
inc
std
and
mov
add
sti
sarb
nop
sbbb
js
xchg
and
shlb
push
cwtl
stos
cmp
xchg
aad
pushf
jecxz
mov
test
jl
or
and
inc
movsb
loopne
stc
or
aam
pushf
scas
add
testb
cmp
lea
mov
negl
sahf
sub
cmp
cs
xchg
fisttpll
dec
lods
jo
jmp
mov
enter
add
fsubs
call
adcb
mov
cli
pop
jnp
pop
rcll
pop
mov
ss
mov
popf
xchg
fwait
cltd
js
or
or
adc
sbb
jnp
sbb
pop
sti
cmp
xchg
adc
mov
mov
aad
inc
aam
sub
cld
push
nop
mov
loopne
fldenv
xor
test
jns
jle
rorl
aad
ret
sbb
lahf
xchg
fcoml
adc
cltd
pop
xor
jae
xchg
aaa
dec
repnz
pop
add
fcompl
int3
int3
adcl
mov
and
scas
lcall
daa
lock
lea
add
adc
jmp
aam
and
hlt
int3
mov
adc
gs
sahf
les
jp
add
cmp
mov
mov
cs
imul
aaa
jmp
add
add
push
jecxz
mov
and
xor
jg
xor
push
xchg
sbb
jns
dec
dec
int3
cmp
testl
lret
xchg
sarb
mov
mov
rcr
inc
xor
adc
dec
sbb
mov
inc
push
clc
dec
fsubs
call
icebp
mov
daa
mov
rcrl
mov
or
push
push
nop
jle
mov
gs
rol
imul
ret
dec
sbb
add
movsb
or
ljmp
loopne
outsb
fcomps
lea
sbb
pop
add
push
mov
sub
cs
aaa
shlb
roll
dec
arpl
cmp
add
jns
mov
pop
or
lea
daa
enter
enter
or
fisubs
mov
xchg
out
cmc
xlat
iret
xchg
test
in
lods
pop
and
andb
loope
fwait
and
iret
pop
pusha
daa
and
xchg
das
fiaddl
jo
xchg
imul
xchg
scas
hlt
retw
push
aad
push
push
or
test
lret
lock
test
push
add
jo
jb
push
cmpsl
pop
lahf
jmp
xchg
jg
mov
dec
lret
inc
jno
mov
scas
jle
and
in
hlt
and
sbb
cld
mov
or
js
sub
outsl
inc
pop
push
inc
sub
jge
enter
js
les
add
xchg
hlt
xlat
in
ds
filds
daa
push
mov
lcall
pop
aaa
and
mov
or
adc
insb
roll
jg
jno
aas
xchg
sub
jae
outsl
js
movsl
lods
loope
and
jle
in
push
sub
inc
xchg
push
mov
mov
es
and
aas
xor
pop
aas
loopne
sbb
xchg
dec
push
out
or
jecxz
imul
lcall
mov
pusha
in
jno
jno
dec
mov
mov
xor
lcall
pop
pop
sbb
shrl
std
ret
rolb
mov
cmp
out
jl
mov
and
notb
je
std
shr
adc
mov
in
movsl
data16
xchg
pop
dec
xchg
add
or
fsubrs
dec
xchg
ja
dec
and
mov
mov
and
out
xlat
dec
inc
mov
cmpsb
mov
fmul
dec
outsl
mov
jmp
adc
dec
hlt
out
sbbb
in
les
aaa
movsb
outsb
cwtl
fbld
add
lret
call
add
cmp
dec
push
add
incl
sbb
testl
and
dec
jp
mov
and
clc
outsb
push
adc
movsb
mov
push
xchg
incb
inc
mov
jnp
adc
js
cwtl
inc
xchg
sub
ret
push
mul
out
add
shlb
in
and
dec
jmp
out
out
xchg
push
nop
enter
movsl
cmp
dec
rcl
cmpb
sbb
sti
mov
xor
das
jle
pop
orb
rcrb
lea
dec
xor
push
xor
test
punpcklwd
pushf
pop
mov
mov
and
adc
mov
mov
dec
mov
xor
mov
jg
jne
lds
mov
jb
loope
insl
lahf
push
test
das
sti
test
sbb
push
lahf
mov
push
in
push
call
out
testb
pop
push
xor
ret
mov
mov
xchg
jns
sbb
je
mov
pushf
mov
fwait
xchg
add
sub
cli
cld
lock
aaa
pop
jecxz
xor
ss
cmp
jnp
and
inc
mov
inc
sahf
movsl
lea
xor
mov
mov
mov
gs
clc
je
lods
lahf
movsl
ljmp
ja
ljmp
out
inc
faddl
js
inc
mul
lcall
aad
xor
icebp
sub
mov
inc
loope
pop
popl
jmp
add
test
xchg
into
pop
inc
mov
mov
insl
mov
jns
jb
xor
jne
loop
fwait
mov
repnz
jae
jl
mov
mov
jns
sub
or
inc
mov
insl
cmc
mov
mov
xor
loopne
sub
test
pushf
xor
push
pusha
cs
loop
pop
mov
push
add
cwtl
pusha
pushf
push
mov
int
pusha
push
xchg
rclb
fildl
movsl
je
dec
inc
mov
cmpsl
jae
icebp
lret
push
dec
shl
sub
negb
pop
sbb
add
xchg
test
cli
fistl
push
inc
jg
jp
icebp
pop
push
jbe
pop
aam
add
rclb
outsb
mov
adc
mov
imul
jl
ds
lret
cmpsl
jb
adc
idiv
gs
mov
in
insl
sub
jbe,pn
mov
cld
xchg
mov
inc
sub
jb
mov
jbe
jecxz
lea
pusha
push
mov
mov
inc
and
aaa
dec
and
mov
call
sbb
mov
inc
addl
mov
inc
cltd
push
jmp
pop
and
mov
push
nop
adc
sub
pop
inc
cwtl
sub
inc
jmp
ret
rclb
inc
popf
jmp
out
lods
repnz
stos
lds
aam
sub
in
lret
or
mov
icebp
and
cs
lock
pushf
mov
jp
mov
mov
mov
stc
push
and
divl
in
ss
shl
mov
lahf
sub
fwait
mov
xchg
mov
inc
add
stc
mov
std
lods
add
ja
cmp
lahf
xchg
in
xchg
mov
pop
ds
jo
ret
fwait
mov
xchg
xlat
lahf
mov
orl
xchg
es
push
or
imul
mov
xor
sbb
ds
xchg
pop
and
mov
pop
xchg
imul
pop
das
stos
jl
aam
inc
stc
roll
dec
sub
ja
push
cmpsb
mov
cwtl
lret
adc
push
ret
pusha
clc
adc
fiaddl
insl
sahf
jnp
dec
sub
ljmp
fsubl
stc
test
push
fsubl
aad
jge
xor
push
push
xor
cli
push
pop
mov
inc
push
sbb
faddl
imul
test
push
dec
inc
and
cmp
or
divb
pop
cmpsl
dec
xlat
jmp
sub
pop
aam
sub
mov
outsb
cmp
fwait
sbb
adc
and
imul
enter
jnp
adc
mov
mov
shll
cmp
rcrl
mov
in
iret
jmp
or
or
lahf
insb
or
mov
rclb
or
stos
mov
aaa
sub
stc
inc
push
sbb
jo
cld
mov
int3
push
out
iret
pop
mov
push
int3
call
jge
or
outsb
adc
adc
push
mov
sarb
xchg
xchg
test
xor
adc
jae
adc
sbb
pop
mov
push
mov
xorb
or
imull
inc
hlt
and
mov
adcb
fs
imul
sahf
in
in
pop
lret
mov
xor
lret
or
loopew
or
test
sbb
leave
jns
stc
dec
lods
jae
pusha
loop
pushf
sub
dec
ret
jmp
push
inc
or
sbb
movsb
leave
jge
xchg
push
xchg
inc
cmp
and
add
sbb
adc
scas
jecxz
sbb
sbb
lret
test
sbb
test
sti
sbb
lods
jnp
mov
sbbl
rcrl
or
cwtl
icebp
das
aam
fists
or
pop
fldenv
scas
mov
jne
lahf
mov
mov
mov
movb
rclb
xchg
mov
out
adc
jb
cli
jae
fmuls
sub
mov
dec
mov
xorb
fstps
push
enter
push
jmp
ret
push
lret
jnp
ret
mov
sbb
pop
sub
mov
adc
popa
insl
dec
xchg
ret
fbstp
adc
es
ficoml
xor
xchg
imul
mov
jnp
and
adc
in
icebp
pop
lods
repnz
mov
fsts
nop
mov
add
stos
rcr
daa
add
lock
sub
pop
sbb
jno
into
out
xchg
or
jae
das
pop
lock
add
stos
inc
fwait
pop
cld
inc
fadd
pop
fidivrs
push
dec
shll
enter
cmc
lcall
pop
fidivs
xchg
es
jne
dec
push
shl
add
daa
cmp
sti
mov
adc
or
and
jne
mov
hlt
push
dec
push
adc
dec
sbb
test
pop
pushf
jo
aad
aad
loope
xchg
cmp
jle
ja
lds
int3
enter
cmc
inc
mov
sub
inc
imul
fsts
cmp
and
clc
sub
sti
jecxz
lock
pop
push
xor
and
push
insb
inc
cmpsb
adc
mov
fdiv
lret
push
dec
sub
mov
jae
stc
xchg
jns
clc
cltd
les
scas
loop
pop
jmp
fisubs
outsl
in
enter
xchg
adc
pop
repnz
out
mov
scas
sbb
cwtl
rorb
mov
push
flds
jo
jl
cmp
fldt
adcl
xor
or
or
cli
inc
push
in
stc
in
mov
pop
adc
adc
xchg
xor
sub
cwtl
lahf
dec
add
lret
xchg
xchg
int
pushf
mov
cld
mov
sbb
add
js
and
scas
mov
rol
sbb
xor
and
jp
mov
sub
push
insl
sbb
mov
xor
andb
cmp
inc
inc
repz
push
sbb
in
push
jge
cmp
clc
ljmp
into
push
popf
jmp
push
ficomps
push
mov
or
xor
cmpsb
add
jns
out
hlt
xlat
out
xor
cmc
or
and
jne
popf
adc
sub
lret
mov
inc
inc
xlat
nop
push
inc
push
pop
cmc
xor
dec
or
jecxz
or
rcrl
arpl
inc
pusha
lahf
mov
out
mov
dec
xchg
int3
imul
mov
mov
fnstsw
pop
mov
outsl
adc
rorl
push
and
and
mov
pop
popa
data16
hlt
inc
xchg
sbb
mov
and
out
ss
sub
dec
mov
xchg
lahf
lret
pop
mov
mov
fs
and
inc
jo
movsl
ljmp
sahf
orl
dec
sbb
pusha
xor
pop
cmpsb
jp
jns
movsl
shr
popf
jl
jg
lret
and
mov
enter
mov
push
mov
lds
iret
out
rcrl
pushf
arpl
jge
pop
insb
gs
xor
sti
and
imul
dec
xchg
sbbb
aaa
stos
push
push
xlat
popa
in
pop
roll
andl
ss
rorl
push
jle
cmpsl
cld
sarl
adc
mov
pop
pop
push
jp
mov
repnz
dec
es
adc
cmp
push
adc
out
neg
adc
cmp
push
inc
outsl
inc
lds
mov
stos
mov
lods
jne
bound
jae
mov
les
cltd
jg
dec
mov
testb
in
push
inc
loopne
in
jne
sbb
pop
sub
scas
sub
sub
dec
inc
test
int
test
std
sbb
jns
mov
cmpsl
call
shlb
ret
cmp
test
das
aas
je
lret
fdiv
xlat
adc
xchg
xor
or
pop
jg
cmp
outsl
jb
shr
clc
aad
mov
ret
test
aas
stos
mov
les
fdivrl
cmpsb
xchg
jo
adc
xchg
xlat
out
out
or
inc
or
mov
adc
es
cmpsl
hlt
int3
dec
push
lret
addr16
cmc
and
sub
mov
imul
sbbl
pop
push
bound
lret
and
dec
sbb
mov
sbb
add
or
repz
lods
gs
sarb
mov
mov
inc
push
dec
leave
in
addr16
movsl
int
imul
repnz
lret
add
adc
repz
iret
in
movl
mov
cmp
mov
mov
push
push
cs
outsl
sbb
jo
sahf
and
or
hlt
aas
xor
push
cltd
mov
shll
popf
es
aad
and
iret
adc
negl
add
add
jae
fs
test
mov
cmp
adc
cmp
adc
js
repz
jmp
jnp
xor
aas
mov
cld
xor
cmpsb
xchg
cmp
push
xor
out
in
mov
push
lods
fidivl
pop
shlb
cmp
into
aam
sbb
lret
leave
insl
xor
lock
insl
mov
int3
xor
std
adc
lret
cmp
sbb
insb
and
iret
loopne
mov
loop
repz
ds
push
popf
fstpl
inc
jne
loop
and
xchg
mov
pop
mov
sub
jmp
sarl
adc
add
mov
les
gs
call
jge
mov
rcll
aas
xchg
test
mov
arpl
jb
loope
icebp
xor
jmp
sub
ss
xchg
imul
jecxz
cmp
lods
jge
sarb
repz
jno
sahf
loope
adc
or
push
arpl
mov
adc
cs
jb
rcr
leave
jmp
xor
in
bound
inc
iret
mov
jl
outsb
ds
mov
jmp
lcall
addr16
xchg
push
cltd
pusha
or
out
stc
cltd
sbb
sbbl
mov
shrl
jmp
or
pusha
bound
sub
pop
adc
addr16
push
push
or
fnstsw
mov
mov
jb
xor
fldlg2
inc
cltd
mov
xor
sbb
pop
mov
mov
jg
mov
test
das
push
scas
mov
mov
aas
sub
adc
dec
jg
repz
xor
leave
inc
fbstp
mov
test
sbb
add
dec
dec
add
imul
and
sub
out
jl,pn
imul
iret
inc
cmc
mov
ret
push
dec
mov
ucomiss
add
push
in
dec
sub
push
into
lock
repnz
int3
pop
lea
add
pop
xor
mov
lods
int
pop
popf
insl
xchg
jle
cmc
xchg
int
mov
inc
jbe
mov
test
adc
xlat
mov
mov
insl
or
mov
xchg
dec
mov
repnz
xor
imull
divl
aaa
xor
sub
je
jns
inc
loopne
sahf
push
xor
mov
sbbb
out
fiadds
xchg
iret
out
push
dec
xor
mov
adc
mov
rorl
dec
and
xchg
imul
adc
jle
adc
test
lds
leave
inc
dec
or
xchg
mov
add
enter
jns
jae
sub
test
push
dec
jp
ds
fs
mov
xor
jmp
sub
sbb
pop
mov
orl
mov
sbb
and
insl
mov
adc
jmp
mov
jecxz
repz
int3
sbb
cmp
les
lods
add
xchg
pusha
xchg
cwtl
fbstp
mov
mov
pop
mov
mov
push
clc
jnp
insb
pop
rorb
mov
jae
xor
mov
cmpsl
loope
adc
and
mov
inc
mov
cltd
repnz
mov
dec
dec
jg
fisttpll
mov
cmp
out
add
jno
inc
or
inc
pop
mov
int3
xchg
cli
pop
push
gs
push
ficoms
mov
add
inc
jmp
orb
les
pop
push
mov
push
lods
cli
lock
jge
push
into
inc
stos
std
std
mov
or
jae
pop
lods
and
cld
add
jae
sbb
jo
mov
add
lock
or
push
clc
xchg
inc
mov
push
dec
dec
fists
test
shlb
pop
mov
ret
in
subb
xorps
adc
ror
push
in
pop
pop
add
rcl
out
jmp
jg
push
fucomp
lods
mov
fcompl
call
xlat
pop
sub
hlt
iret
stos
add
jno
inc
int3
stos
je
or
dec
add
mov
outsb
xchg
popf
jnp
push
ss
in
cmp
fsubl
aaa
xchg
out
lods
insl
mov
pop
idivl
out
inc
fwait
xchg
inc
mov
sbb
xlat
adc
test
jmp
pop
lods
jl
push
or
push
pusha
inc
or
daa
jp
in
inc
clc
test
jg
or
push
std
int3
add
in
or
jecxz
in
mov
xor
stos
adc
sub
fcmovu
jb
or
sbb
inc
add
mov
test
inc
mov
sahf
push
push
out
mov
fcmovb
mov
xorb
out
movsl
les
aas
xor
jp
cmp
cmp
inc
dec
xor
aad
jp
stos
push
jno
icebp
and
inc
push
jmp
xor
mov
sub
mov
scas
inc
mov
ficoml
in
or
pop
pop
mov
addr16
xor
nop
xchg
mov
je
cmp
in
ljmp
mov
loop
out
fldenv
in
outsb
jnp
test
cmp
bound
or
mov
inc
add
test
insb
push
fs
leave
mov
mulb
test
pop
fldcw
jns
addr16
testl
test
in
push
jb
stc
adc
dec
sub
addr16
pop
mov
adc
lahf
adc
or
call
js
pusha
mov
adc
lods
cmp
xchg
mov
mov
push
dec
and
mov
add
cs
into
push
jle
sbb
out
cmp
lods
clc
sub
je
or
mov
mov
jmp
pusha
mov
data16
inc
adc
aad
pop
mov
arpl
mov
inc
ja
lea
and
hlt
push
ljmp
ret
mov
adc
les
push
xor
stc
xor
psubusb
data16
clc
mov
popa
jecxz
mov
bswap
les
add
inc
add
icebp
adc
call
cld
push
inc
pop
stos
lock
dec
jno
scas
mov
inc
lds
xchg
push
or
xchg
lea
jo
lods
clc
inc
rol
pop
pop
popf
test
rcrl
cwtl
fstps
or
lods
daa
clc
nop
mov
mov
scas
dec
jbe
sub
mov
lret
ficomps
xorb
xor
outsl
cmp
call
adc
fbstp
mov
loop
jae
jecxz
xchg
xchg
int3
push
sub
rol
gs
mov
mov
jecxz
movsb
xchg
into
jg
das
xchg
lods
pop
jb
addr16
sbb
add
mov
mov
jne
lods
orb
aad
xor
inc
in
pop
xlat
stos
mov
mov
outsb
dec
sbb
mov
mov
jmp
iret
cmp
imulb
test
or
ret
test
jl
loopne
mov
call
cmpsl
lds
mov
xorb
mov
in
xor
aad
jmp
and
adc
es
out
sti
sub
xchg
stos
pusha
mov
lea
not
xlat
arpl
enter
jno
or
pop
xor
shll
je
test
xor
push
int3
hlt
mov
sub
std
cmp
mov
ret
sub
adc
ss
movsbl
in
xor
ret
scas
shl
xlat
into
sbb
and
fsubl
cs
add
mov
adc
iret
push
jb
dec
fcmovne
mov
pop
ss
lds
jnp
or
and
mov
dec
ja
loopne
stc
push
in
cltd
xor
jecxz
lret
xor
cmpb
jbe
and
add
addr16
mov
adc
mov
repz
rcll
lcall
inc
xchg
pop
sub
and
sub
or
pop
negb
test
cmpsl
test
jb
pop
loope
xor
data16
cmp
imul
in
lret
dec
mov
xchg
dec
mov
or
xor
mov
xchg
mov
fldl
lea
jmp
jno
xchg
imul
add
sbb
cltd
cmpsb
mov
out
lcall
rclb
lahf
leave
cmp
push
sbb
outsl
mov
add
js
push
sub
ss
test
or
mov
inc
cmp
mov
pop
push
mov
pop
nop
lods
mov
jae
xor
jecxz
dec
jecxz
out
xchg
loopne
pop
outsb
dec
sub
ss
cmp
fdivr
or
das
mov
aad
cmp
inc
out
jb
mov
xchg
loope
add
imul
add
ret
mov
and
mov
cmp
jp
outsl
cmc
iret
xchg
stos
sub
repz
test
mov
fbstp
aam
push
stc
stos
jne
xor
mov
push
insb
dec
mov
arpl
jge
pop
lock
mov
shr
int3
push
sub
adc
aad
inc
test
out
call
cvtpi2ps
out
mov
or
push
mov
cltd
ds
fcomps
je
pop
fmuls
xchg
sub
sbb
movsl
sub
jge
ljmp
test
push
rcr
push
jne
and
inc
orb
and
sti
outsb
int
std
lret
cmp
shll
adc
mov
scas
imul
movntps
int
int
pop
popa
inc
jae
and
sbb
iret
mov
xchg
stos
or
push
mov
mov
cld
in
shlb
sbb
cli
cld
cmpsb
test
inc
cmpsb
dec
or
data16
lock
dec
sbb
and
in
rclb
xchg
sub
fdivrl
push
loop
xchg
pop
inc
pop
int
mov
mov
push
add
sub
or
mov
loop
push
mov
dec
imul
lds
mov
in
pop
popf
popf
pop
mov
adc
andl
test
arpl
cmpsl
lret
fildll
sbb
loopne
rcll
add
lcall
xorl
aas
cmp
lea
test
lret
mov
jmp
dec
jb
pop
fstpl
aaa
inc
sub
mov
and
stc
cmp
lcall
mov
lcall
in
xchg
fdiv
or
and
cmp
push
sub
iret
lahf
imul
inc
test
ja
mov
out
adc
inc
sbb
xchg
rcl
push
adc
add
adc
mov
and
mov
adc
in
into
xor
push
adc
out
repz
popf
mov
mov
out
pop
jp
leave
fidivs
shl
popa
push
jbe
inc
xchg
nop
push
or
push
sbb
sub
repnz
xor
orb
scas
xchg
mov
mov
mov
aaa
or
sub
lahf
xchg
sub
mov
lods
add
std
or
jo
sbb
fistps
xor
add
cmc
cmpsb
scas
cmp
sti
mov
enter
stos
pop
decb
fnstenv
dec
fmul
stos
jbe
pop
mov
es
ja
push
mov
cwtl
jne
shll
je
xchg
cmp
mov
mov
or
sbbb
or
or
and
outsb
in
mov
and
jb
or
aaa
les
jle
jb
mov
in
inc
lcall
mov
or
in
jb
daa
rorb
repz
rcl
cmc
pop
pop
sub
mov
jmp
scas
sbb
pop
push
mov
and
and
jae
mov
call
mov
imul
mov
scas
xchg
cmpsl
adc
xchg
jb
jb
or
cmp
ja
cltd
add
adc
rolb
in
xor
xchg
xor
sub
cmpsl
push
stos
adc
mov
repnz
scas
outsb
outsl
shrb
and
sbb
add
mov
mov
xchg
popa
xor
inc
pusha
les
sbb
or
aaa
aas
gs
std
cmp
mov
jge
add
int3
sbb
push
in
sbb
jb
testl
shll
xchg
fiaddl
pop
aaa
pop
push
bound
lret
std
mov
or
sub
mov
or
stos
jnp
aam
jne
mov
dec
in
inc
dec
pop
mov
lock
mov
stc
inc
mov
lock
cld
subl
fcmovnu
enter
movsl
cmpsl
jg
jge
sub
enter
ds
test
inc
nop
lahf
loope
xchg
fldenv
mov
outsl
pop
add
ret
pop
dec
fs
sahf
add
mov
cmpps
outsb
stos
je
sti
outsb
xor
lds
out
divb
mov
mov
ficomps
lock
leave
xchg
jp
sub
mov
shlb
and
push
push
jmp
arpl
push
jb
jo
cwtl
out
incl
dec
jp
xor
in
xor
mov
xchg
cmpsb
mov
cmpl
into
cltd
or
pop
sbb
in
popf
pop
lock
loope
mov
adcl
outsl
mov
sar
test
sarl
lods
fsubp
add
push
call
repnz
adc
cltd
rcrb
mov
jns
and
outsb
ret
repnz
aam
push
jge
push
shrb
mov
lock
xor
movsb
loope
scas
mov
push
add
mov
mov
in
push
and
pop
lret
cmp
iret
and
adc
divb
aaa
push
xchg
mov
dec
jno
inc
mov
mov
rcrb
pushf
sbb
imul
push
lcall
push
mov
sbb
movsb
rcrl
add
leave
fisubrl
mov
roll
dec
or
mov
cmpl
jle
and
mov
cmp
loopne
lret
jne
test
test
jb
inc
mov
scas
dec
subb
jno
lds
cmp
jno
in
mov
fdivrs
addr16
inc
gs
rolb
jnp
in
jp
fadds
xor
out
les
pop
ljmp
cmp
push
jl
push
ds
cmp
imul
add
fisubrl
sbb
dec
mov
add
push
push
inc
add
adc
into
mov
aad
arpl
mov
insl
add
push
mov
sbb
adc
pusha
cld
adc
xchg
test
inc
ror
call
jl
les
mov
cwtl
jb
push
xchg
ret
addr16
ja
pop
mov
stc
es
xchg
dec
mov
push
mov
nop
ret
mov
fs
add
and
ja
mov
fwait
sub
push
xchg
outsb
xor
sub
pop
ret
pop
ds
jp
lock
push
decl
and
arpl
mov
test
popl
lret
jmp
mov
ds
into
std
je
pop
jp
adc
mov
test
mov
and
or
xor
push
imul
add
mov
insb
xor
cltd
cld
inc
fwait
xchg
imul
lock
or
mov
push
fsubrl
lods
adc
dec
and
out
aaa
sbb
call
dec
in
add
lods
push
sbb
divb
arpl
mov
mov
sbb
mov
xchg
shlb
push
inc
cmc
cmp
sbb
mov
int3
cmp
xchg
jnp
mov
stc
push
int
stos
lret
cmp
sub
mov
jl
and
dec
pop
les
jne
sbb
or
xor
sbb
lea
es
pop
mov
loopne
mov
mov
mov
cmp
fsubrl
stc
xor
aad
mov
mov
cld
dec
es
std
fadds
fildl
popf
clc
pop
or
sub
push
scas
in
in
xchg
hlt
pushf
and
or
and
dec
cwtl
dec
add
mov
mov
jne
adcb
ss
repz
push
pop
sub
repnz
add
inc
push
pop
dec
cmp
pop
push
sub
or
xchg
test
out
xor
push
xchg
adc
arpl
in
pop
stos
add
pop
pop
push
gs
xchg
cmp
adc
inc
xor
jns
xchg
es
push
ds
sarl
pop
repnz
cmp
xchg
adc
mov
in
mov
jb
rcr
adc
inc
push
or
mov
testl
imull
lds
rcrb
insl
push
cmc
ret
sub
dec
mov
arpl
int3
pop
mov
test
and
jae
dec
push
outsl
xor
push
and
les
mov
xchg
dec
lret
push
call
cs
cmp
cmp
add
cltd
pop
mov
mov
xorb
sub
ds
dec
jne
popl
sub
popf
jnp
ss
sub
jb
mov
inc
push
fldt
loopne
add
inc
mov
popa
pop
pop
sub
arpl
sarl
or
dec
aam
inc
roll
or
dec
in
mov
lods
push
xorb
xor
pusha
leave
push
mov
in
sbb
mov
xchg
je
mov
xor
mov
adc
push
aad
xchg
pop
test
sub
gs
dec
insb
data16
lds
mov
adc
mov
pusha
push
pop
iret
mov
lret
sbb
jbe
fisttps
adc
adcb
mov
frstor
add
inc
out
arpl
repz
jmp
pop
cmpsb
jns
shll
popf
mov
xor
push
iret
or
filds
add
fisubrs
adc
jae
mov
xchg
subb
mov
push
stos
add
std
lock
loopne
shl
and
std
loope
mov
push
push
cmpsb
add
dec
js
call
les
addl
jo
test
in
dec
aaa
jp
add
nop
xchg
jb
mov
lods
hlt
loopne
push
push
dec
mov
test
neg
cmp
mov
or
xor
popa
jge
adc
push
insl
cmp
or
rcrb
or
mov
jmp
inc
mov
mov
mov
xchg
scas
jnp
repnz
pop
fxch
mov
scas
inc
outsb
leave
icebp
xchg
ret
shll
cwtl
mov
cmp
dec
mov
outsb
xor
enter
test
adc
mov
fwait
loope
xchg
shll
mov
adc
shrb
mov
push
sti
nop
xchg
sbb
pop
xlat
scas
inc
mov
stos
add
jb
sarb
addl
arpl
gs
out
pop
js
push
ja
and
and
mov
cs
adc
je
iret
pop
dec
push
test
cld
xchg
fcmovb
dec
mov
pop
imul
fsubrl
adc
insl
inc
add
jbe
mov
sarl
pushl
idivb
fdivs
jb
inc
scas
pop
jno
int
fwait
sti
sbb
lods
insl
lods
mov
rcr
mov
mov
imul
test
mov
sbb
imul
dec
loop
ljmp
call
shrb
mov
or
pop
mov
dec
ret
inc
out
cmc
mov
in
add
cwtl
mov
sub
insl
ss
sub
xor
lret
or
out
jg
dec
sub
lock
inc
sbb
jle
outsl
push
mov
push
sbb
dec
xor
cmpsb
in
sub
idivb
or
add
lea
divb
adc
aas
mov
ret
and
lods
jns
jecxz
call
cwtl
hlt
lahf
cltd
xchg
mov
sbb
fistps
adc
jecxz
call
xor
loopne
stc
mov
jecxz
pop
pushf
lock
jbe
sub
mov
adc
or
in
lock
cmp
push
cmp
adc
push
add
sub
popa
add
je
mov
xlat
push
mov
fadd
xchg
mov
inc
mull
adc
add
stc
imul
rcll
fisubs
jbe
xlat
fucom
movsb
or
mov
push
inc
std
push
cmpsb
inc
addr16
and
sub
iret
scas
adc
mov
pushf
in
ficomps
mov
imul
aaa
mov
pop
test
push
pusha
lcall
jge
mov
mov
arpl
stos
inc
jne
or
cmp
mov
pop
dec
aaa
dec
call
fcoml
and
ds
dec
lods
or
outsl
imul
mov
lret
and
imul
mov
mov
scas
rol
push
sbb
dec
dec
out
mov
mov
cld
or
movsl
aam
int3
push
mov
add
jbe
dec
lea
pop
jns
mov
les
pop
xor
jbe
in
cltd
jmp
sub
int3
xlat
mov
mov
mov
shll
mov
mov
xlat
xchg
pop
fistpll
cli
adc
mov
jecxz
push
sub
xchg
adc
fldenv
icebp
dec
jnp
adc
adc
push
inc
pop
xor
push
js
dec
into
scas
fs
pop
jg
sub
mov
and
mov
aaa
lcall
add
add
in
das
int
push
in
dec
jl
inc
stos
repnz
in
clc
jnp
adc
xchg
aas
insl
add
int3
mov
cwtl
pop
push
addr16
mov
sbb
jns
out
xlat
fistl
sbb
pop
popl
jbe
sti
sub
add
pop
push
adc
mov
dec
lret
mov
lahf
jns
test
push
cwtl
pop
stc
enter
mov
push
rcrl
dec
adc
out
xor
bound
fs
shlb
push
lea
dec
push
push
lods
lds
inc
xchg
push
pop
arpl
fadds
imul
cmp
das
inc
push
mov
push
dec
fistps
mov
push
ficompl
cmc
mov
test
sbb
call
push
jae
push
xor
push
cmp
bound
cmp
ljmp
sarl
and
faddl
xchg
or
jbe
clc
in
jns
adcl
jecxz
test
and
pusha
xchg
push
and
pop
repnz
cld
inc
inc
rol
jae
jmp
in
pop
jnp
leave
or
adc
cmp
inc
or
dec
xor
mov
add
jns
sub
in
push
adc
or
push
xlat
adc
inc
and
cmp
mov
dec
rcll
push
dec
into
mov
ds
add
rcll
dec
call
in
mov
xor
and
pop
sub
xchg
ljmp
shll
in
pop
pop
adc
push
push
pop
and
fisubrl
fstps
sbb
int
add
xlat
in
test
mov
hlt
fcmovnbe
mov
inc
fsubp
sub
cld
out
cltd
fdivl
pop
outsl
movl
pusha
xor
and
push
lret
xor
sub
cmp
in
es
or
shlb
mov
scas
into
mov
mov
pop
mov
fidivs
push
repz
or
loopne
imul
into
gs
cmc
movsl
xchg
scas
mov
mov
pop
mov
andl
cmp
frstor
mov
subl
sbb
or
cmpl
mov
fidivs
xchg
inc
lds
sti
mov
xor
xor
nop
mov
push
sub
mov
dec
and
mov
push
jmp
xor
xor
cld
push
mov
mov
or
fucom
jmp
fstps
inc
adc
mov
dec
mov
mov
add
jge
and
fnsetpm(287
inc
movsl
movsl
and
aas
push
mov
xor
cmpsb
dec
insl
sti
inc
inc
and
push
lea
xor
jecxz
mov
mov
clc
es
mov
cmp
or
mov
mov
mov
mov
sbb
or
push
loope
or
movl
mov
lahf
xchg
fidivl
jecxz
pop
js
cli
and
int3
xchg
dec
repnz
pop
int
popf
or
push
mov
push
stc
xchg
jns
imul
xor
fst
mov
lock
add
mov
push
sub
enter
xor
and
scas
nop
and
js
aad
inc
xchg
dec
mov
mov
dec
xchg
lret
rolb
cwtl
ror
jae
clc
inc
lods
cmc
cmp
sub
rcr
out
xor
hlt
add
mov
lods
push
and
push
mov
cltd
xchg
push
dec
gs
or
jb
pop
arpl
dec
or
dec
sbb
loope
test
stos
leave
sti
pop
fsubrs
mov
in
or
add
ss
mov
mov
jne
xchg
xor
mov
into
jo
rcll
adc
xor
loopne
cmc
add
bound
push
and
push
fsubs
call
outsb
repz
inc
mov
sub
sbb
cmc
jo
mov
adc
xchg
jnp
add
fs
test
inc
push
insl
jge
xchg
mov
pop
fcmovne
pop
dec
pop
mov
cwtl
test
pop
xchg
repz
call
xor
pop
cmp
aas
push
jge
inc
mov
sub
ljmp
sub
xchg
xor
cmp
pop
leave
push
sbb
int3
stos
jl
je
adc
sahf
sub
lods
insb
sbb
xchg
lcall
jl
pop
stc
ds
xor
ret
lret
push
mov
cmpb
sbb
pop
popf
push
rolb
roll
xor
pop
push
leave
popf
xor
bound
movb
cmp
movsl
mov
pop
xlat
sti
adc
jp
stc
lahf
cmpsl
or
adc
lret
shl
pop
inc
das
addb
push
lods
mov
iret
pop
mov
jge
dec
into
or
sbb
into
divb
xchg
cmp
dec
out
add
add
pop
stos
test
sub
je
and
das
add
rcrb
sub
jne
lods
lods
and
adc
sahf
fwait
add
decb
les
lods
mov
add
bound
xchg
adc
insb
cmp
pusha
jl
pop
lcall
insb
bound
mov
addb
pop
scas
scas
pop
sti
mov
stc
push
push
fcmovne
sbb
cwtl
xorl
sub
mov
lea
es
ror
repz
ss
inc
scas
sbb
mov
gs
lods
not
cmpsl
rcrl
cwtl
xchg
mov
dec
aaa
inc
fcom
cmp
out
xor
mulb
imul
cli
test
js
cmp
inc
test
adc
or
xor
push
mov
sbb
fildll
pushf
dec
or
add
ja
test
dec
sbb
dec
push
inc
push
inc
mov
std
jns
cltd
icebp
stos
mov
arpl
push
sub
mov
cli
cmp
dec
and
dec
push
xchg
gs
sub
cmpsb
mov
cmp
popa
push
fsubl
stc
xchg
dec
pop
xor
jecxz
jae
hlt
dec
sub
and
andl
hlt
dec
pushf
mov
stos
and
ficoml
mov
push
in
or
mov
bound
fmull
inc
cmc
sbb
or
xor
cmpsb
xor
adc
ret
jecxz
pop
mov
jb
addr16
jae
scas
jle
inc
pop
cltd
movsl
adcb
fdivs
push
test
mov
scas
push
or
adc
push
lods
movl
int
mov
push
daa
xor
subb
jmp
and
cmp
int
leave
xor
les
jmp
xchg
cmp
insb
mov
ret
pop
fldenv
xor
mov
loope
cmc
iret
aas
and
xchg
fwait
lods
test
leave
adc
mov
push
xor
lret
fsubl
inc
inc
nop
stc
inc
mov
xor
insl
xchg
aam
adc
mov
aas
aam
dec
jle
inc
gs
mov
pop
insl
mov
icebp
push
sbb
pop
test
leave
sbb
stos
jo
mov
cmp
insl
push
sti
shll
inc
repnz
rorl
test
mov
cmpsb
push
xchg
adc
repz
test
mov
xor
rorl
gs
mov
fmull
outsl
sub
adcl
or
add
or
repz
daa
sbb
loop
stos
rclb
test
mov
cmp
pop
addr16
sahf
leave
xchg
jns
in
xchg
das
dec
mov
ret
jae
xor
cmp
jmp
or
add
xor
xchg
shrl
push
cmp
call
jb
and
rcl
call
std
mov
in
js
lahf
pop
fs
sbb
mov
xchg
push
rolb
mov
orl
mov
imul
mov
mov
mov
mov
loopne
cltd
loope
sbb
pop
and
adc
nop
or
enter
fcoml
push
jo
pop
imul
xor
gs
cmp
lea
inc
adc
out
or
movsb
enter
loopne
stos
xchg
mov
adc
sbb
xlat
cld
sub
sbb
cmp
ret
in
sub
stos
xchg
aad
daa
sar
sbb
mov
fisttpll
outsl
popf
mov
and
int3
popa
mov
rorb
out
jge
in
cltd
inc
arpl
mov
xchg
add
push
test
sahf
mov
or
mov
jp
sarl
xchg
shrb
jle
aaa
dec
icebp
mov
mov
push
mov
push
and
xor
pop
cltd
or
and
sbb
sub
push
mov
push
sti
mov
pop
add
dec
das
std
dec
adc
xchg
sbb
mov
jg
scas
cmc
adc
lds
daa
dec
push
jmp
dec
cmpl
mov
add
fcomps
mov
jne
or
xchg
and
cld
out
push
lods
pop
js
popf
push
out
push
call
in
push
sbb
lods
in
in
in
xchg
fstpt
jne
outsl
mov
lods
cmp
fildll
pop
popf
clc
pop
mov
cmpsb
popf
in
inc
in
aas
pop
cmpsl
dec
ljmp
stc
js
scas
arpl
outsb
jno
outsb
mov
in
mov
add
pop
xchg
gs
or
jg
add
xchg
mov
imul
cmp
sahf
insl
ret
into
add
aad
and
xchg
dec
push
and
dec
movl
add
xchg
adc
push
lcall
lret
xchg
ret
dec
and
pushf
xchg
inc
stos
iret
jmp
scas
test
ret
and
movsb
fdivl
out
clc
inc
ds
dec
jg
stos
lods
mov
fs
mov
in
rcr
cmp
scas
popf
sub
mov
dec
sub
lahf
pop
test
push
sbbl
sub
imul
xchg
inc
xlat
jo
xchg
jp
xchg
inc
push
nop
test
mov
enter
imul
cmp
gs
mov
mov
in
aam
std
dec
insl
in
lret
xchg
mov
loop
or
scas
jmp
lret
cli
cmp
mov
ret
mov
sbb
adc
out
push
rcrb
insb
jle
xchg
xchg
adc
push
and
xchg
jle
push
sti
call
out
gs
mov
shlb
cmp
pushf
fidivrl
fildl
xchg
pop
mov
xor
xchg
sbb
xor
test
mov
mov
add
cmp
ss
imul
dec
jp
push
or
in
jnp
bound
cmovge
jb
aam
sbbl
sbbl
pop
push
jle
jle
nop
dec
cmp
dec
scas
mov
dec
mov
xchg
out
adc
sti
xchg
add
out
sti
inc
andb
mov
rorb
push
test
add
xor
cmp
out
bound
fisttpll
fs
call
lock
cld
and
fmul
jmp
jae
mov
adc
ret
jecxz
nop
jecxz
xor
jl
pushf
jg
lods
int
mov
sub
fs
xchg
ror
lret
lods
bound
pop
adc
fs
ja
xchg
mov
fcmovb
fcmove
rol
mov
jge
xlat
fstl
stos
leave
stos
mov
aam
hlt
jmp
stos
xchg
inc
cmp
lcall
cmc
inc
jmp
int3
pop
and
mov
lds
cmp
callw
xorb
mov
dec
and
xchg
aad
out
push
testl
loop
scas
scas
sti
sub
inc
inc
xlat
test
and
scas
lret
inc
inc
sbb
sbb
push
hlt
imul
cmpb
and
sub
sarb
stos
fimuls
mov
dec
xor
xchg
push
fs
test
xlat
mov
adc
je
lock
push
stos
mov
shrb
repnz
test
and
inc
pop
pop
aam
cmpsb
add
clc
inc
arpl
xchg
cmpsl
cmpsl
jl
ret
mov
icebp
mov
stc
addl
xchg
mov
leave
shl
mov
mov
sub
mov
adc
dec
push
add
es
pop
push
mov
sbb
movsb
sub
ja
xchg
push
sbb
and
lods
jecxz
adcl
xor
inc
or
mov
roll
cwtl
cmp
xchg
inc
sub
test
lea
xchg
dec
insl
xor
xchg
pop
lea
inc
xlat
push
and
add
or
jecxz
popa
shrl
je
fldenv
insl
adc
mov
negl
xor
cwtl
iret
and
push
sbb
in
pushf
adc
adcl
sbb
dec
cwtd
and
add
mov
xor
ret
ds
test
in
out
leave
add
lcall
shlb
inc
cmpsl
arpl
fsubl
jmp
mov
jp
pop
shr
pop
cwtl
xchg
push
push
jns
mov
movsb
pop
stc
sub
sbb
icebp
push
cmp
out
aam
in
pop
ficoms
sbb
sub
lea
pop
inc
mov
aam
inc
cmp
call
adc
mov
pop
shll
add
faddl
enter
in
jmp
and
hlt
jl
es
data16
aad
adc
test
push
or
push
xchg
add
push
mov
inc
push
cwtl
mov
jecxz
mov
sub
xchg
jno
int
jns
lods
ret
cld
dec
mov
sub
enter
jno
pusha
or
add
sti
push
fucomp
push
jle
push
jl
fwait
jg
in
scas
or
rolb
cmc
push
xchg
sub
cmp
adc
shrb
sbb
jge
insl
pop
pop
mov
lret
mov
test
mov
arpl
mov
nop
push
int
adc
dec
cmp
cmp
adc
je
dec
aam
dec
mov
out
inc
or
clc
sti
psllw
xor
std
leave
jae
cmp
jo
and
imul
cmpsb
sub
inc
add
or
add
push
adc
sar
imul
pop
push
add
xor
sbb
in
cmp
js
sub
dec
inc
lret
scas
push
jns
sub
jo
push
es
mov
xchg
mov
movsb
lret
add
push
mov
sbb
repz
mov
dec
sbbl
movsb
dec
xlat
xchg
aam
lods
sarb
pop
icebp
xlat
fbld
mov
push
scas
loop
rep
xchg
add
sbb
sub
and
daa
cmp
mov
pusha
jle
imul
or
test
fadds
or
dec
xchg
or
repz
jnp
shrb
out
dec
xchg
sahf
jp
test
insb
daa
vpsubusb
jb
clc
pop
mov
adc
jne
out
push
jg
and
pop
mov
std
pop
dec
sub
mov
pushf
add
arpl
mov
xor
xchg
adc
pop
cmp
sbb
lds
xchg
frstor
or
sub
sbb
pop
cmp
hlt
jno
enter
pop
out
pop
arpl
mov
test
pop
scas
pop
dec
pop
mov
or
sbb
cli
jmp
fs
dec
imul
xchg
ret
hlt
pushf
pusha
add
mov
std
lock
loopne
push
sbb
lret
mov
loope
and
fidivrs
jge
out
jp
ds
dec
jge
inc
or
and
add
xlat
imul
dec
pop
mov
sbb
mov
cwtl
pop
push
aad
jmp
push
sub
loope
insb
cmp
xchg
es
ret
pop
add
movsb
icebp
scas
pop
xchg
stos
xchg
ficoml
mov
cltd
xchg
xchg
lods
ret
dec
lods
out
inc
call
scas
stos
mov
add
mov
pusha
jae
dec
cltd
mov
sbb
xchg
push
inc
dec
or
pusha
pop
push
push
fstl
jmp
lret
cmpsb
xor
jne
lret
xlat
int
cmp
sub
xchg
outsb
sti
dec
cmp
or
jp
ja
mov
mov
out
test
cmp
push
mov
cmp
sti
jmp
loop
push
xor
lcall
flds
lret
ficoms
mov
test
aas
add
mov
iret
xchg
xorl
mov
stc
pop
aam
jl
cmp
sbb
fldt
dec
jmp
stc
pusha
cmp
push
pushf
insb
fucom
sbb
into
mov
or
outsb
ljmp
fcoml
mov
lods
cld
mov
fwait
nop
sbb
aas
test
shll
jmp
inc
les
mov
pop
cmpsb
jp
or
int3
xor
pusha
lds
jge
test
adc
bound
es
scas
xchg
mov
mov
mov
jne
xchg
lock
out
adc
dec
ret
shll
insl
xlat
imul
pop
sarl
jbe
push
mov
xor
stos
fs
xchg
or
or
add
je
lock
cmp
ret
js
mov
int
out
fisubrl
push
lds
xor
mov
in
das
jge
lea
jno
notl
push
jl
inc
xor
lds
out
mov
cltd
rcll
lods
push
outsl
adc
loope
subl
xchg
aad
jns
push
xchg
call
pop
inc
setge
sbb
fcomip
adc
gs
jge
shlb
enter
adc
lcall
cltd
int
bound
popa
pop
xor
push
xor
aam
lahf
and
stc
sahf
outsl
dec
sub
jmp
fldt
pusha
jge
add
and
std
fimuls
pop
xchg
mov
in
adc
cwtl
push
mov
cmp
or
adc
out
sbb
hlt
sub
cli
divl
inc
iret
cwtl
lods
mov
cmpsl
jecxz
inc
insb
in
je
mov
xchg
push
push
jae
aaa
mov
call
push
pushf
in
stos
callw
inc
dec
xlat
shlb
ret
data16
lea
mov
mov
jb
repz
add
cli
rorl
adc
mov
out
xlat
fnstsw
xlat
outsb
and
pop
fwait
jo
xchg
int3
mul
push
sbbl
mov
mov
mov
or
inc
sub
fcomi
mov
inc
test
das
sub
xor
and
test
jp
mov
imul
jecxz
or
mov
cmc
push
jno
movsb
xor
pop
xor
jge
test
cli
adcb
arpl
leave
xchg
pusha
sub
or
clc
es
adc
jb
push
lret
dec
insl
int3
jl
mov
xchg
push
cmp
adc
adc
notl
adc
mov
ds
sbb
out
xor
mov
cwtl
rcl
cwtl
fisubrl
inc
xchg
push
cmp
pop
cmp
test
inc
pop
dec
mov
in
orb
add
shlb
stos
jno
outsl
mov
and
iret
pop
mov
mov
sti
std
xchg
xchg
cmpsl
dec
inc
stos
pop
ret
jmp
stos
push
push
dec
dec
repnz
pop
popf
jmp
push
mov
jg
push
js
ja
xchg
push
mov
pop
and
incb
dec
fdivrp
inc
jnp
ret
push
lock
cmpsl
cwtl
jle
stos
popa
dec
fmuls
push
aaa
lods
add
mov
sub
mov
fstpl
jne
dec
pop
fistpl
lcall
mov
jno
xor
push
ficoms
sahf
pop
int
cmp
push
sti
jbe
and
mov
xchg
sub
or
hlt
test
push
orb
sub
pop
mov
add
push
sbb
add
jne
xor
test
fstl
clc
daa
xor
aam
and
cmp
inc
inc
inc
ljmp
in
sti
movsl
clc
adc
and
test
inc
xchg
movsb
insb
mov
int
aam
sub
js
outsb
add
jnp
pop
jae
sub
cmp
and
jno
lock
xchg
sub
dec
mov
enter
ret
arpl
addr16
shlb
fisttpl
lcall
daa
xchg
cli
cmp
dec
sti
mov
cmp
int3
pop
inc
aad
inc
pop
test
lahf
xlat
cli
push
push
mov
mov
addl
stc
leave
or
out
jns
push
jp
repnz
jmp
mov
mov
xchg
mov
lods
into
hlt
movsl
cmp
test
adc
bound
shrl
dec
pop
dec
std
push
and
lds
aas
lods
mov
cmp
jnp
sbb
rcr
jmp
inc
pop
cwtl
mov
sbbb
xor
imul
sbb
inc
xlat
mov
ret
pop
std
lret
rcll
and
and
movsl
btr
or
hlt
fdivrl
push
bound
fildl
cmp
adcb
lret
data16
mov
popa
pop
in
les
stos
pop
cmp
mov
dec
inc
xchg
and
fimuls
xor
dec
jecxz
jle
inc
test
in
shlb
hlt
movsb
aad
or
xchg
add
fsubrp
mov
shl
cmp
sub
xor
loope
xchg
dec
into
or
sbb
popf
inc
inc
push
stos
lret
insl
push
push
aad
pop
mov
jecxz
push
mov
xchg
cmp
test
jp
mov
jmp
xchg
mov
sarl
pop
jg
sub
insb
mov
cmp
clc
pop
inc
sbb
loop
or
xor
push
pop
inc
push
mov
jae
mov
push
add
mov
ljmp
pop
idivl
dec
pusha
out
icebp
out
and
insl
ljmp
xchg
pop
dec
ret
xor
cltd
cmp
and
pop
jl
mov
jae
lahf
inc
rorb
mov
add
cmp
popa
rcrl
in
movb
mov
ja
mov
inc
lret
xchg
rcr
sahf
adc
aad
add
or
dec
sub
mov
inc
icebp
divb
mov
icebp
loop
mov
in
xchg
ret
xchg
jb
mov
xor
imul
and
pop
popa
shlb
cwtl
pusha
sbb
hlt
hlt
testb
ja
andb
push
loopne
jne
push
cltd
pop
and
and
cmp
sub
mov
xorb
je
cs
or
mov
pop
xchg
fwait
mov
push
pop
mov
pop
lock
inc
add
pop
xor
jnp
push
xor
mov
mov
pop
cwtl
and
xor
in
push
pop
ds
sti
aas
std
xor
add
cmpsl
xchg
les
dec
enter
or
es
xor
aas
mov
cmpsl
fiaddl
inc
scas
bound
push
arpl
clc
loopne
mov
xchg
or
dec
xchg
mov
aad
stos
stos
loopne
addr16
fstpt
xchg
gs
cmpsb
inc
lahf
clc
pop
mov
addr16
lock
mov
imul
xchg
sbb
xlat
cwtl
push
or
daa
sahf
daa
or
jmp
popa
into
pushf
lahf
dec
adc
clc
pop
repnz
imul
sbbl
or
adc
enter
pushf
roll
ret
outsl
test
pop
inc
mov
sbb
jnp
jmp
xlat
pop
daa
loop
aam
add
cmc
int
insb
pop
andb
orl
addb
fldt
mov
adc
jp
outsl
shl
cmp
fs
jp
stc
pop
aad
and
loop
xor
ja
jnp
xchg
jle
push
daa
and
dec
clc
hlt
fistpll
dec
jnp
cmp
xchg
xor
subb
mov
adcb
mov
or
das
xchg
out
mov
xorb
fidivrl
test
sbb
imul
pop
jae
pop
leave
and
inc
test
xchg
mov
lcall
ss
shrb
dec
imul
dec
hlt
sub
xchg
cmp
or
mov
xchg
aam
mov
es
jbe
jle
or
dec
push
ret
push
xchg
pand
hlt
and
add
jnp
fcomp
add
xor
lahf
scas
aad
lods
fistpl
dec
notl
push
mov
inc
fnstenv
jg
lcall
xor
adc
cmp
or
lcall
mov
xor
sub
xchg
adc
add
sarl
xchg
jle
and
lods
and
adc
inc
mov
pop
sti
int
insl
cli
sahf
sbb
lods
cmp
sahf
adc
jg
sbb
ds
push
pop
cli
pop
fdiv
arpl
cmpsl
pop
out
movsb
cmp
popf
inc
iret
jl
or
gs
rcl
imul
sbb
sub
pop
and
and
out
lock
mov
js
stos
xchg
int3
push
fdivrl
or
jmp
test
xor
cmp
mov
imul
mov
lret
test
dec
movsl
adc
fldl
in
imul
push
push
sbb
inc
jmp
inc
or
repz
pushf
repz
mov
add
lret
sti
imul
pop
addr16
outsb
les
insl
jns
rcrl
push
sub
sbb
mov
jne
icebp
mov
add
cld
inc
aas
subb
and
pop
xor
sbb
mov
sbb
andb
cwtl
cmp
cwtl
lret
shrb
inc
repz
psrlq
push
push
push
adc
fisubs
and
icebp
mov
je
mov
pop
pop
mov
negb
cwtl
pop
push
jo
scas
add
hlt
add
or
lahf
std
dec
pop
adc
cwtl
xchg
jmp
jp
jns
dec
repz
mov
xchg
mov
ret
sbb
and
sbb
mov
mov
sub
cmp
iret
xorl
push
scas
in
test
push
iret
xor
fdivp
mov
testb
lea
adc
and
sbb
shll
aam
dec
cld
mov
loop
pop
clc
lds
jnp
stos
loopne
and
ret
shrl
sahf
pop
push
xchg
fwait
mov
leave
ds
stos
ds
repz
hlt
or
adc
pop
jmp
fsqrt
imul
cmp
shl
push
dec
adc
mov
push
mov
add
popa
enter
add
mov
aas
dec
movsl
mov
inc
lock
push
and
lcall
push
xchg
push
push
xchg
mov
sub
cmpb
xor
ljmp
and
lcall
pop
repz
xor
stos
and
test
push
and
jnp
cld
int3
shrb
sahf
xchg
fmuls
dec
fcoml
xor
sub
push
push
mov
mov
mov
mov
cltd
mov
push
cmc
mov
sbb
mov
mov
push
aad
push
push
dec
mov
add
test
subb
scas
jne
fsts
fcomps
ljmp
cmp
mov
outsl
test
out
pusha
jge
out
push
aam
in
mov
adc
sbb
sbbb
out
pmulhuw
cwtl
inc
xchg
inc
loopne
ljmp
inc
add
sbb
cmp
xor
mov
iret
loopne
loop
daa
popa
mov
mov
and
push
in
ret
cwtl
repz
mov
in
insb
adc
dec
es
xor
mov
inc
sub
adc
xchg
lahf
popf
aad
dec
and
push
push
out
cmpsb
cmp
mov
or
fwait
jno
pop
fistpll
sbb
mov
pop
or
sbb
std
ret
bound
adc
sub
mov
xchg
and
jno
pop
out
dec
jb
push
cmp
in
cmp
inc
jge
in
iret
movsl
xor
or
push
adc
decl
push
jmp
testb
test
sbb
mov
cltd
int
pushf
add
sbb
inc
cmp
mov
xorl
les
stos
data16
cli
pop
and
mov
pop
mov
xor
inc
sub
sub
neg
arpl
mov
es
rcrb
jle
sahf
and
inc
sbb
adc
test
inc
push
sub
ficomps
loop
icebp
jbe
ss
jb
adc
cmp
jmp
dec
push
cmp
dec
lods
mov
pop
pusha
mov
fnstsw
cmp
test
or
data16
xor
inc
decb
xor
fimuls
ja
pushf
call
sub
jp,pt
cld
ja
test
dec
repnz
in
stos
jo
mov
test
push
mov
cli
inc
xchg
aaa
xlat
sub
out
ror
jno
adcl
xor
pop
mov
shrl
inc
jae
movsb
out
lock
shll
mov
nop
cwtl
mov
ds
pushl
lcall
mov
fstpl
push
bound
imul
loope
mov
push
popa
sahf
dec
pop
sbb
adc
xchg
js
push
push
pop
leave
rol
xchg
ret
std
jmp
scas
icebp
xor
inc
inc
mov
test
dec
loop
pcmpeqb
jb
cmc
mov
xchg
addr16
adc
jmp
add
xchg
lcall
js
subl
es
mov
jecxz
pop
xorb
push
data16
push
dec
adc
push
mov
sbbb
nop
dec
clc
repnz
ja
pop
dec
push
jnp
push
scas
packssdw
mov
xchg
cltd
fcomip
out
cmp
pop
insb
add
loopne
daa
mov
mov
cwtl
sbb
hlt
jmp
ja
push
or
lds
fsub
pop
imul
mov
xchg
sub
fisttpll
rcrl
loop
les
push
xchg
lds
fidivl
jnp
addr16
outsl
cli
mov
inc
sbbb
add
jno
xchg
inc
test
fsubr
mov
jns
xor
push
sub
outsb
push
and
cli
stos
pop
fisubs
adc
hlt
inc
mov
mov
negb
inc
stc
sub
mov
insl
in
push
push
lret
rol
ss
stos
dec
and
mov
pop
push
out
push
popa
lret
pop
pop
cvtpi2ps
fsubl
sbb
add
adc
bound
pop
mov
aas
xor
jne
fidivrs
inc
mov
rorb
inc
rcr
lahf
mov
mov
xchg
dec
mov
pusha
sub
xchg
in
push
jle
stc
jmp
psubsb
les
or
fcomps
dec
jg
lcall
in
std
push
insl
call
xlat
pop
mulb
adc
adc
push
mov
push
es
in
push
mov
ds
add
movups
repnz
sti
adc
and
rorb
add
sub
jge
jae
frstor
push
out
roll
adc
mov
clc
leave
jmp
jmp
int
and
stc
inc
pop
mov
xchg
in
lret
mov
frstor
clc
add
sbb
loop
dec
loope
pop
xor
push
cmp
mov
incl
jbe
pop
or
enter
mov
movsb
xchg
daa
pop
xchg
shl
popa
mov
insb
adc
mov
sbb
fsubl
mov
rol
fsubrs
dec
nop
mov
mov
and
inc
push
push
or
lcall
popf
and
out
sar
in
mov
pushl
lret
lods
dec
add
repnz
pop
sar
insl
xchg
aam
dec
push
pop
cmp
adc
dec
and
mov
push
and
inc
lods
mov
lcall
fstpt
adc
aad
adc
push
sub
pop
xchg
xchg
fwait
mov
jno
adc
cmp
dec
into
aad
outsb
std
xchg
sub
jae
out
ljmp
int
sub
shrl
xchg
jmp
in
sub
pop
sub
lret
ret
pushf
imul
push
jmp
js
cltd
aad
lds
xchg
out
lahf
jns
push
jp
daa
and
cmpb
bound
xchg
push
test
rclb
cli
jnp
pop
aad
or
sbb
pop
push
fs
or
les
in
add
mov
lret
cs
adc
sbb
cmp
mov
inc
xchg
in
cmpsb
mov
sub
cmpsl
cmp
out
sub
mov
cmp
or
lret
fiaddl
shlb
push
stos
jnp
push
imul
enter
inc
sub
adc
les
or
aaa
dec
mov
cmp
mov
imul
insl
jbe
sub
call
xchg
sbb
test
add
mov
sbb
or
cmp
insb
aad
mov
sahf
push
outsl
sahf
data16
das
cmp
xchg
fdivs
cltd
test
enter
jl
cmp
ljmp
movsb
xor
cmp
inc
adc
ret
xlat
std
cmp
or
pop
xor
test
in
mov
sarb
mov
and
push
ret
cwtl
repz
jne
sbb
lods
dec
pop
xchg
xor
and
push
mov
insb
jge
mov
pop
and
jmp
jo
lahf
mov
xor
dec
addb
mov
lahf
or
jb
loope
jne
mov
or
std
adc
jb
dec
mov
ljmp
mov
or
push
or
in
xchg
aam
ret
cmp
pusha
dec
lds
sub
jp
sbb
bnd
jbe
jno
out
xchg
mov
xchg
ljmp
lcall
pop
or
outsl
and
mov
xor
ds
push
imul
loopne
outsb
xchg
jnp
loopne
in
cmpsl
in
cmp
mov
call
fiadds
fsubrp
roll
mov
mov
mov
loop
lods
outsb
jne
aad
sub
out
loop
fadds
add
sbb
adc
xorl
mov
lea
scas
xlat
add
jg
xor
lcall
lret
adc
and
jl
cmp
mov
in
rcrb
shll
xor
add
push
and
push
or
shrb
data16
dec
pop
pop
xchg
jle
dec
hlt
inc
popf
mov
jno
xchg
inc
mov
and
mov
inc
lods
fistpl
mov
lcall
mov
sbb
push
dec
push
push
cmpsl
jl
sbb
xor
adc
pop
cs
pushf
out
imul
enter
ljmp
shlb
dec
lahf
pop
mov
cmpsl
push
add
cmp
push
test
ja
sub
imul
mov
sbb
inc
icebp
lds
jecxz
sbb
out
mov
ficomps
lret
dec
push
push
mov
mov
das
mov
pop
mov
jge
and
pop
cmpsl
jb
sub
es
mov
aam
out
lock
or
push
lods
fildll
inc
xor
lret
ret
sbb
and
std
lods
xchg
gs
mov
xchg
sarb
sub
in
lods
cmpsb
add
jb
or
push
fnsave
ljmp
xchg
fs
push
sbbb
pop
repz
js
sub
sbb
rcll
outsb
loopne
clc
cld
mov
mov
mov
pop
mov
jo
dec
cmp
inc
lods
lds
cli
xor
je
and
jg
into
jae
pop
mov
fcoml
stos
mov
jmp
sahf
testb
pop
sbb
push
jns
mov
sub
xor
popa
lods
mov
mov
xchg
push
xor
bound
mov
repnz
and
mov
add
push
add
std
dec
and
mov
jl
sarl
imul
mov
js
testb
ret
pop
or
lret
sbb
enter
cs
fsubrl
ljmp
enter
mov
mov
in
mov
pop
xchg
into
cmp
xchg
mov
mov
mov
es
push
jle
notb
notl
mov
inc
xor
hlt
dec
jp
stos
and
das
shll
mov
pop
add
push
dec
cmp
test
cmpsl
cld
mov
sbb
xchg
or
sub
fs
out
pop
gs
insl
shrl
xor
sub
xchg
in
push
lcall
shlb
inc
mov
cmp
test
xlat
pop
cmp
and
lcall
fcoms
xchg
pop
clc
or
jg
pop
das
sbb
adc
scas
pop
mull
decl
xor
loopne
push
movnti
push
cmpsb
mov
xchg
lret
pop
cmp
stos
mov
xchg
xlat
mov
data16
and
lods
mov
out
jno
sbb
push
add
sti
pop
xchg
dec
sti
pop
andl
xchg
jge
hlt
sahf
repz
jl
arpl
aam
jnp
xchg
mov
stc
sahf
mov
in
roll
loope
push
je
mov
out
and
outsl
adc
das
adc
push
cwtl
jl
push
les
lret
nop
jno
int3
lds
into
sbb
dec
jl
bound
sar
jnp
dec
and
push
aas
pushf
loope
sub
xchg
push
ds
dec
mov
inc
mov
push
sub
jecxz
rcr
sub
insb
xchg
shl
cmc
push
pop
and
adc
jle
or
pop
jbe
add
test
jo
sbbb
jne
ja
fistpll
insl
inc
inc
insb
and
aas
arpl
add
sub
mov
inc
std
jne
mov
jbe
push
ljmp
xchg
mov
pop
pop
sub
mov
add
xchg
mov
xor
jmp
aaa
insb
or
into
dec
and
dec
daa
test
dec
lods
xorb
iret
mov
cmp
dec
lods
mov
xchg
je
outsb
lock
cltd
stos
shl
sti
inc
sub
test
pop
xor
push
jne
rcll
mov
inc
sub
test
jns
cmp
and
scas
jns
hlt
pop
cli
arpl
adc
std
or
mov
xchg
sbb
icebp
jns
inc
out
sarb
jns
js
xor
mov
out
loope
aaa
cmp
push
insb
scas
dec
in
ja
and
add
xchg
sbb
mov
xor
push
call
lock
sub
idivl
or
sbb
shll
dec
rcll
leave
dec
sbb
pop
xlat
or
cltd
into
dec
sub
jno
shl
mov
add
inc
push
fcoml
popa
xchg
aas
inc
mov
shll
out
inc
lods
and
dec
clc
cwtl
dec
mov
and
test
lcall
push
cmp
pop
xor
add
adc
popa
mov
cltd
push
or
dec
inc
mov
jmp
xor
jae
push
inc
mov
cmp
int3
push
or
lds
orl
sahf
push
mov
rorl
dec
push
call
mov
xor
sbb
push
ss
outsl
inc
xchg
lock
mov
xchg
aaa
xchg
addr16
addr16
addb
test
sarl
fldcw
jb
cli
cmc
cmp
shll
scas
push
mov
jbe
inc
lahf
frstor
or
pop
insb
enter
adc
test
pop
movsb
mov
repnz
ret
inc
jmp
or
jnp
jecxz
sub
adc
mov
dec
pop
loop
dec
or
mov
inc
lret
ja
xorb
adc
or
aaa
clc
mov
shrl
daa
mov
fadds
fistl
fbstp
leave
xchg
adc
mov
scas
jo
add
cmpsb
jecxz
push
addl
sbb
into
adc
les
add
xchg
mov
icebp
lea
subb
cmp
test
adc
cltd
lds
test
stos
lds
pop
pop
sbb
mov
and
test
dec
ret
and
inc
rcll
xor
in
pop
sub
mov
pop
pushf
sub
xor
xchg
xchg
pop
jo
pop
imul
lea
xor
xchg
stc
daa
adc
ja
and
sub
fstpl
fadds
int
dec
dec
sbb
push
inc
jno
jmp
push
xsavec
lcall
repnz
outsl
pop
leave
inc
or
dec
ljmp
cmp
dec
arpl
sub
inc
xor
dec
outsl
cwtl
xor
pop
mov
mov
push
ds
xchg
shlb
out
push
pop
mov
sbb
rcll
jno
ficompl
adc
out
les
xor
sub
sub
sbb
dec
mov
xor
cwtl
shll
dec
js
inc
cmpsb
mov
lods
jae
and
cmp
jo
sahf
or
rclb
adc
lock
fisttpll
xchg
das
or
and
es
mov
cmpl
xchg
cmp
sbb
push
push
in
icebp
sub
mov
push
ja
jb
push
hlt
push
push
ljmp
out
xlat
cmc
push
fdivrl
and
leave
xchg
movsl
xchg
cmp
hlt
lahf
pop
lret
popa
inc
addr16
lcall
pop
ja
scas
lcall
movsl
dec
je
aam
mov
std
push
xchg
roll
push
jecxz
pop
mov
test
cmpsl
in
dec
cmp
dec
inc
fimull
and
pop
inc
mov
cmp
aaa
ljmp
adc
dec
daa
or
sbb
inc
pushf
nop
mov
js
mov
mov
add
shl
push
jae
mov
lret
mov
test
jecxz
mov
or
in
xor
into
adc
mov
push
inc
das
mov
and
out
jno
pop
out
ljmp
addl
loopne
cmp
subb
inc
repz
leave
aam
sbb
shl
dec
iret
ljmp
std
mov
arpl
push
cmp
mov
dec
and
or
cmp
xlat
ficoms
xchg
scas
jb
es
dec
pop
nop
subb
jecxz
mov
mov
mov
xor
xchg
jno
out
outsb
jp
mov
fistl
cmp
leave
inc
pop
mov
pop
xchg
xchg
xadd
sub
sbb
sub
mov
cs
mov
mov
xor
mov
subl
in
bnd
cli
and
fnstenv
pop
fstps
mov
nop
cmpb
cmp
xchg
insl
gs
jae
mov
xor
mov
cmp
cmpsl
inc
fsubrl
aaa
mov
repz
inc
sbb
sbb
push
push
aaa
fstps
arpl
cld
lods
sub
rcl
out
imul
stc
adc
notb
pop
cmp
pop
out
outsl
mov
jo
fxch
dec
or
mov
shlb
stos
and
lods
cmp
int
or
jp
mov
add
loope
cmovno
adc
mov
or
mov
cwtl
cmp
hlt
adc
adc
cmp
loop
jp
dec
daa
push
enter
mov
mov
mov
mov
jbe
mov
and
fsubrl
ficoml
mov
jg
outsb
imul
decb
imul
imul
daa
imull
addl
lret
pop
pop
fwait
jle
ffreep
jmp
fnstenv
aad
pusha
sub
push
or
cmp
xchg
xchg
rolb
roll
int
sbb
fucom
lret
push
faddp
ljmp
aad
in
shl
aam
out
cmp
pop
jae
inc
push
mov
inc
out
lods
xor
adcl
inc
shll
in
mov
mov
bound
jae
dec
jno
xchg
jp
test
jnp
and
repz
add
pop
out
cltd
in
and
fdivl
loopne
push
scas
push
sub
lret
bound
cmpsb
lcall
jge
xor
fcoml
out
test
aas
jp
sti
popf
outsb
push
jne
enter
xlat
stos
xchg
sti
shr
lret
mov
dec
imul
in
cmp
adc
xchg
cmp
jl
add
in
fldenv
xor
subb
adc
jno
filds
hlt
jnp
add
aaa
xchg
mov
inc
cmp
xchg
mov
fsubs
mov
loop
sahf
aas
sub
mov
fdivr
pop
push
dec
dec
dec
add
cmc
mov
stos
shll
enter
or
mov
xchg
cs
jmp
jmp
rclb
andl
or
ret
dec
sbb
mov
inc
inc
call
and
std
loopne
stc
cwtl
inc
stos
fidivs
pop
imul
mov
fnsave
dec
bound
dec
pusha
call
ret
inc
pop
aaa
inc
fcmovnu
mov
mov
xchg
ljmp
test
push
mov
fstl
movsb
aaa
movsl
mov
jns
ficoml
jle
and
sub
les
mov
add
sti
or
sub
pop
js
inc
mov
jb
jp
xor
add
loop
xchg
pop
in
mov
sub
cld
and
mov
les
int
loopne
daa
cltd
aad
push
sbb
mov
scas
imul
stos
xchg
sbb
mov
jecxz
jae
dec
repnz
sub
sub
push
mov
lods
inc
daa
call
adc
inc
mov
inc
sbb
sub
popf
or
test
adc
daa
fldenv
and
out
xor
cmp
adc
nop
nop
cmpsb
out
loop
sub
sti
mov
ss
enter
push
jp
in
adc
mov
mov
cmc
aam
add
push
pop
mov
adc
sbb
mov
imul
enter
imul
mov
rorl
dec
es
sbb
stc
mov
not
sti
rcr
fmuls
negl
nop
movsl
push
mov
push
in
jno
cltd
leave
mov
sbb
ja
xchg
or
cmp
jl
andb
test
adc
sub
arpl
ljmp
and
pop
pop
mov
mov
popa
ss
fnstenv
add
mov
pop
xchg
sbb
ss
jg
xchg
mov
rcrb
xlat
mov
ret
mov
in
pop
mov
cmc
in
rcll
mov
insl
xchg
xor
xchg
mov
sarl
inc
mov
imul
in
sub
bnd
out
lret
cmp
idiv
push
sub
scas
and
icebp
sub
sub
roll
mov
cmp
das
aaa
jmp
out
xor
xchg
add
call
sbb
popf
inc
push
push
add
adc
aad
hlt
add
sarl
xchg
add
and
pop
dec
xor
hlt
cli
stc
xor
mov
or
sbb
pusha
dec
sub
daa
push
push
aam
xor
or
lock
cs
loopne
cmp
mov
in
pop
ret
and
mov
das
call
daa
pop
cmp
subl
test
sbb
lods
out
and
addr16
addl
lcall
dec
aad
cs
adc
xchg
cld
mov
cmp
pop
fsts
jp
ret
inc
push
mov
sbb
cmc
push
insl
push
inc
stos
iret
mov
sbb
testb
or
out
pop
mov
dec
xor
les
xchg
xchg
adcb
mov
scas
adc
shl
or
push
pop
dec
lds
push
lret
add
aad
scas
and
pop
iret
dec
jl
lods
mov
xchg
lods
push
lea
add
mov
xchg
cs
sbb
jo
out
fdivs
movsb
loopne
fisttps
dec
bound
fadds
test
sti
pop
je
nop
sbb
sub
addr16
jp
jo
push
sub
mov
adc
popf
out
push
adc
sbb
or
or
ja
enter
sbb
les
movb
push
pop
repnz
cld
cmp
loope
inc
jmp
popa
pop
xchg
insb
loope
sub
or
rcl
xchg
mov
loop
lret
outsb
push
js
add
ljmp
jp
es
push
call
pop
lret
cs
dec
cmp
cmp
jae
das
outsl
xor
add
mov
roll
push
jb
shll
push
cmp
mov
push
nop
lret
sub
dec
xlat
jne
pop
xchg
or
cmova
iret
outsb
test
dec
pop
mov
rcrl
mov
mov
aas
xor
sub
push
mov
jae
repz
sub
sub
or
and
sahf
loop
push
adc
movsb
mov
std
lock
fstp
mov
int3
pop
pop
orb
or
push
pushf
xchg
aad
div
ret
sarl
test
inc
dec
inc
mov
rclb
and
mov
push
ja
add
outsb
test
mov
push
dec
outsb
mov
in
repnz
pop
sbb
and
movlps
mov
jbe
loope
in
sub
rcll
pop
pop
out
inc
mov
pop
icebp
scas
pop
call
int3
fdivl
mov
sbbb
push
xchg
icebp
sbb
hlt
outsl
orl
sub
push
cli
pop
scas
push
lds
out
outsl
lret
ja
push
and
mov
mov
bound
mov
in
mov
addr16
mov
push
data16
jno
in
mov
push
or
mov
int
and
cld
jl
sub
psubb
xchg
adc
out
pushw
push
bound
call
fildl
dec
sahf
shrb
cs
sub
jae
int
repz
add
sbb
fisubrl
dec
je
mov
outsb
xlat
test
test
fs
pop
cmc
mov
ds
jge
cmp
push
cli
mov
add
jbe
pop
pop
cmp
mov
insb
or
mov
sbb
lcall
jmp
mov
arpl
sub
adc
dec
ret
and
add
xor
mov
jo
ror
cli
adc
xor
aas
xchg
mov
xor
out
sbb
jg
xor
pop
fidivl
pop
popf
addr16
roll
mov
das
mov
stos
mov
add
and
cs
xchg
pushf
rcl
xchg
push
add
lea
or
mov
mov
xor
data16
or
lock
mov
pop
push
test
jp
loop
sub
sbb
rcrl
push
adcl
jnp
in
fstps
xor
mov
stc
adc
outsb
xchg
stc
sahf
loopne
icebp
repz
push
xchg
rclb
lcall
faddp
outsl
int
inc
aaa
pop
lea
mov
pop
pop
mov
add
cmp
scas
inc
cld
push
std
fadds
add
xlat
xor
ja
fmulp
cltd
lods
fs
xor
addr16
in
sub
cmp
in
xor
inc
orb
fildl
inc
sti
sbb
decl
xor
fnstcw
outsl
add
cmp
ds
xchg
xchg
xchg
into
or
fcoml
inc
or
adc
test
xchg
popa
push
lret
out
jp
jno
lret
out
out
stos
andb
and
pop
mov
call
repnz
sbb
iret
rclb
push
mov
push
push
sbb
lret
xor
sti
fs
mov
addb
fs
cmp
mov
out
in
lcall
stc
stos
mov
adc
pop
push
lds
cmp
push
xor
rcrb
outsl
and
aam
and
mov
pop
notb
sbbb
and
pusha
inc
imul
dec
icebp
sbb
mov
outsb
pop
test
ja
lock
addr16
sbbb
ljmp
arpl
adc
ret
fwait
enter
and
xchg
jb
push
iret
test
xchg
or
jp
dec
push
movsl
inc
pop
test
or
cltd
pop
and
mov
dec
test
clc
test
fs
push
push
pop
pop
icebp
dec
jge
jno
cmp
shrl
adc
cmp
fcmovb
mov
test
mov
loopne
mov
or
insb
test
cmp
cwtl
jge
mov
ljmp
jg
mov
arpl
inc
push
and
jl
jmp
sub
inc
enter
mov
ret
jae
outsb
setae
out
sbb
rclb
test
pop
clc
mov
mov
popa
push
in
insl
es
sbbb
fldenv
loopne
inc
xor
cmp
gs
sub
adc
div
inc
cld
mov
std
xchg
mov
outsl
fadd
mov
mov
push
test
lods
enter
or
cmp
movsb
les
mov
xchg
mov
sahf
or
cld
push
add
imul
or
push
sbb
ret
mov
xor
mov
test
adc
and
ljmp
shrl
popf
sahf
push
xchg
jns
or
dec
dec
pop
xor
and
sub
loop
and
mov
in
fisubl
ja
daa
mov
fs
sub
fisubrl
loopne
movsb
xor
add
cwtl
je
sub
jle
fs
test
adc
or
xchg
inc
pop
inc
push
adc
ljmp
dec
or
fsubr
jbe
insl
push
jl
adc
jb
dec
sub
jg
mov
je
bound
mov
mov
add
mov
push
int3
inc
xchg
jge
jns
jle
lods
add
roll
mov
sbbl
mov
js
xor
pop
push
insb
in
sti
addr16
cmp
lahf
or
rcrl
mov
mov
or
xchg
pop
cwtl
jns
jecxz
jne
enter
scas
out
cmpsl
mov
repnz
enter
ljmp
inc
push
fisubs
push
movsb
mov
popl
dec
cld
std
out
mov
pop
cmc
sub
sti
dec
inc
cwtl
push
lds
xor
std
in
pushf
repz
inc
dec
fs
std
sahf
dec
sub
into
stos
mov
inc
in
repz
scas
loopne
stos
out
fs
add
xchg
cmp
push
out
xchg
bound
mov
stc
or
jo
rcrl
cmpsb
dec
nop
data16
mov
dec
xchg
aad
pop
inc
jne
into
lahf
inc
jns
fcomps
fstpl
xchg
push
push
mov
decl
outsl
inc
inc
mov
jecxz
cmc
sub
xor
mov
xchg
jle
mov
pop
call
aas
adc
or
cmp
stc
adc
test
fstp
push
or
mov
fimull
xchg
mov
pop
inc
cmpsb
mov
shll
jmp
fidivrl
das
and
inc
scas
rorl
push
jbe
jg
inc
mov
add
lods
aam
jo
loope
clc
and
lods
cwtl
inc
rorb
subb
xchg
pop
pushf
xor
pop
dec
shr
imul
xor
xchg
cmp
add
jbe
jns
xchg
lock
pop
scas
xchg
dec
cmc
mov
jns
cltd
mov
pop
sbb
add
add
js
clc
imul
aaa
sbb
add
pop
add
data16
je
jne
mull
or
lods
dec
insb
add
negb
jo
lcall
mov
call
leave
mov
inc
xchg
pop
jg
std
push
jnp
xchg
das
rcll
jnp
sahf
cmp
sbbl
mov
xor
and
xchg
sbb
sbb
cmp
and
lds
pop
pop
mov
pop
repz
dec
add
outsb
testl
imul
aaa
mov
xchg
pop
push
loopne
xor
cmc
enter
xchg
cmpsb
pop
adc
daa
xchg
dec
inc
pop
mov
stos
sbbl
dec
and
sbb
mov
aaa
icebp
je
and
cmc
ss
rorb
insl
jecxz
dec
xchg
mov
cmpb
cmp
push
jl
sahf
or
inc
mov
sub
dec
mov
scas
fisttpll
mov
int
aaa
dec
outsl
cwtl
insb
lods
mov
pop
dec
repz
out
ret
mov
cmp
andb
or
mov
addr16
xchg
clc
gs
adc
push
insl
rcrb
xchg
lock
fwait
sti
and
stos
pop
loopne
push
sysexit
inc
popa
xchg
jae
add
imul
mov
inc
mov
xchg
lods
aas
jmp
outsl
test
mov
pop
pop
shll
or
fwait
cmp
std
ret
int3
fsubrp
mov
mov
adc
cmp
cs
xor
test
fs
out
data16
jmp
add
mov
sub
shll
push
iret
mov
lret
stos
sub
enter
sub
inc
ficoml
movsb
sbb
insl
add
adc
pop
xchg
mov
out
mov
sub
hlt
sbb
arpl
ljmp
in
iret
das
cmp
jne
movsb
ja
mov
cmpsb
xchg
xor
pushf
sbb
iret
lret
push
mov
or
jg
cs
jo
xor
addr16
arpl
fistpll
xor
mov
movsb
mov
push
pop
hlt
sbb
mov
or
or
xlat
stc
sar
and
mov
xorb
ficompl
push
add
addr16
pop
xchg
pop
push
insl
insb
xor
xor
push
sub
sub
mov
jge
sub
adc
mov
mov
fisttpll
out
mov
rorl
loop
adcl
sbb
popf
stos
stc
je
cmp
pop
int
shll
clc
lds
imul
push
mov
xor
sub
lcall
fs
dec
jnp
jno
mov
in
cmpsl
out
xchg
stos
pop
xchg
out
lds
lret
dec
into
adc
pop
call
nop
imul
lahf
lcall
push
push
adc
scas
inc
xchg
out
in
mov
dec
pop
popa
dec
insb
fidivl
mov
mov
insl
and
into
and
jg
adc
add
pop
sti
cmc
jmp
std
or
xchg
bsf
and
mov
fs
xor
je
pop
lcall
inc
lods
xchg
jecxz
mov
or
imul
int
into
in
pop
sbb
ret
cmp
nop
aaa
outsl
dec
andb
aas
mov
pop
add
xchg
in
sbb
ffree
stos
xor
lock
cmpsl
mov
xor
mov
enter
mov
in
mov
shll
inc
test
lods
das
ljmp
popf
nop
inc
cld
push
jo
gs
les
mov
sbb
push
inc
pop
xor
sub
mov
push
ss
rol
mov
mov
and
dec
sub
and
pushf
push
negl
dec
nop
cmp
xor
fildl
sub
cmp
mov
ret
mov
mov
xor
cs
insl
mov
push
sub
xchg
add
inc
andb
fistpl
pop
jle
mov
gs
push
inc
rorl
shll
dec
testl
jbe
addr16
jnp
push
leave
out
daa
mov
into
pop
or
and
jae
push
add
js
mov
insb
mov
sub
rol
sbb
push
test
sarb
cmp
dec
ds
daa
pop
add
test
xchg
mov
cmp
cmp
test
and
mov
cmp
mov
lock
ret
popa
movsb
int3
sahf
mov
aas
stos
push
sbb
xchg
movsl
inc
mov
push
jne
push
adc
lret
xor
inc
repnz
lahf
cmp
mov
jns
dec
lds
lds
mull
adc
test
daa
jae
jne
shl
inc
in
jg
or
sbb
sub
ja
dec
imul
pushf
cs
mov
sbb
in
xor
mov
xchg
push
mov
pop
or
in
addr16
inc
jbe
repz
enter
movsb
ss
inc
add
shl
sub
jecxz
sbb
insb
pop
dec
shlb
pop
cltd
add
jo
mov
int
jge
xchg
repz
xor
push
aaa
test
sbb
push
cld
dec
outsl
or
imul
sub
cld
pop
cmp
adc
ljmp
adc
in
hlt
int
lcall
mov
xchg
add
mov
pushf
xlat
ljmp
push
fstpl
jnp
imulb
in
in
push
push
sbb
mov
subb
cmp
inc
mov
mov
repnz
in
sbb
inc
aad
pop
dec
xchg
jne
out
pop
in
mov
and
xchg
push
movsb
insb
ret
les
hlt
fs
sub
hlt
or
paddusb
fcompl
pusha
data16
movsb
cmp
push
nop
lcall
sti
mov
mov
ljmp
mov
dec
push
scas
shll
movsl
push
aam
bnd
movsb
pop
mov
fnstsw
push
repz
fldenv
int3
xchg
pusha
inc
add
mov
ret
pop
test
lcall
arpl
mov
push
fsub
test
jae
xchg
jbe
inc
mov
push
out
sub
outsl
mov
xchg
addr16
dec
lret
jnp
jmp
sub
adc
adc
js
add
gs
ss
sti
sbb
lock
es
inc
jbe
popf
cltd
gs
testl
ljmp
imul
loop
inc
inc
adc
lret
mov
push
adc
addr16
pop
sarl
inc
adc
shll
adc
jmp
out
ja
aam
imul
cmp
seto
adc
aas
jg
pop
lahf
push
sub
xchg
imul
cltd
cmpsl
add
adc
popa
mov
addl
pop
out
jb
push
lods
lret
lds
in
push
xchg
clc
insl
mov
movsb
cmpl
xor
and
xchg
sbb
mov
ret
cmp
sbb
add
les
rcll
scas
mov
stos
popa
jae
pop
inc
repnz
inc
adc
icebp
aas
push
sub
rcrb
nop
add
scas
mov
sbbb
test
mov
xchg
mov
mov
jbe
popf
add
mov
mov
subb
sbb
imul
push
or
inc
aaa
add
dec
ret
jp
cmp
out
rcrb
loop
testb
cmp
inc
orb
sti
lret
jno
or
scas
inc
icebp
jmp
clc
xchg
mov
incl
add
fsubrs
js
add
into
popa
ja
pop
popl
ss
dec
mov
push
or
clc
test
clc
loope
and
ret
lcall
xchg
sub
jecxz
push
mov
test
xchg
and
les
dec
in
ds
lahf
push
mov
data16
into
es
add
fmul
adc
or
jmp
jns
out
and
sbb
hlt
adc
cs
xchg
and
and
sub
inc
mov
bound
into
stc
pop
dec
fld
in
jno
mov
mov
iret
imul
dec
xor
pop
lods
xor
into
inc
out
add
sbb
xor
pop
outsb
pop
lds
ss
mov
push
jecxz
addr16
ds
cmp
mov
jge
out
sbb
outsb
add
mov
popf
mov
mov
cwtl
test
aas
cmpsb
dec
insb
sub
clc
pop
stos
jle
push
jmp
adc
pop
xor
jb
mov
sbb
hlt
xchg
add
sbb
push
push
orl
push
hlt
pop
scas
out
sub
iret
cltd
stos
ret
fsub
cltd
js
adc
pop
movsb
or
ljmp
add
jnp
imul
pop
inc
mov
mov
mov
iret
jb
lea
jg
andl
xchg
jle
in
mov
ja
cs
frstor
shl
mov
sbb
idivb
add
xor
xchg
fistpll
mov
dec
push
jo
sbb
or
imul
repz
and
or
or
sub
sub
ss
and
arpl
push
sub
add
in
jmp
push
cli
pusha
push
ret
leave
rolb
rcr
dec
xchg
mov
in
fimull
sub
cmp
sahf
push
pushf
hlt
enter
jle
xor
repnz
stos
cwtl
inc
out
jbe
mov
pop
xor
ss
adc
cltd
leave
push
ret
test
pop
loop
std
jno
jae
pusha
in
push
lret
add
lea
push
pop
jp
inc
mov
lds
mov
cmp
int
push
dec
lret
or
cmp
insb
rcr
sbb
movsl
out
jecxz
jo
test
sti
movsl
xor
mov
cmpsl
sbb
cmpsb
jle
ss
stc
fwait
imul
shlb
or
dec
dec
inc
fwait
jbe
xchg
xchg
add
out
push
pop
mov
inc
mov
jbe
je
adcl
mov
xchg
fcoms
sarb
out
mov
mov
push
cmp
sbb
push
jle
mov
in
sbb
or
mov
cld
pminub
push
enter
adc
sbb
movb
push
push
inc
pop
and
popa
sub
dec
push
arpl
jbe
leave
dec
test
insb
popf
std
pushf
mov
jo
mov
mov
and
dec
mov
xchg
mov
mov
repnz
loop
xor
or
sbb
xor
sar
jo
jne
push
js
in
adcb
mov
mov
stos
sub
cmp
icebp
lods
int
stos
mov
jae
nop
mov
push
and
lods
lea
mov
loopne
mov
jmp
stos
out
sbbl
and
fisubs
sub
pop
mov
add
cltd
jns
add
push
xchg
enter
push
daa
cmp
sub
pop
xor
pop
aam
shrb
push
popa
mov
jbe
fstps
enter
add
insb
clc
rorl
add
stc
adc
pop
dec
je
fmul
xor
mov
aad
inc
dec
and
inc
add
out
mov
and
inc
cmp
jle
mov
mov
mov
xchg
fbstp
inc
mov
int
ret
rolb
mov
nop
inc
pushf
push
and
cmp
jmp
xor
jns
std
jnp
out
in
out
in
iret
jge
lret
xor
adc
ret
cmp
rcrb
es
fs
pop
push
fs
jmp
lds
rclb
mov
pop
jo
cmpsl
add
shrl
inc
jg
jle
cld
rclb
int3
add
mov
sbb
jb
xchg
addl
cltd
sub
cmpl
mov
sub
dec
fcmovne
mov
loope
scas
or
jge
mov
idivb
ja
imul
inc
push
mov
ret
lret
daa
push
jne
cmp
push
mov
mov
sbb
or
std
ja
dec
inc
pop
lods
and
sbb
xor
adc
adc
sub
jp
incb
cmpsl
arpl
jmp
push
loop
ds
add
shll
push
sub
push
aam
xchg
sub
sub
xchg
adc
punpckhbw
xchg
fs
mov
mov
es
mov
adc
data16
adc
aad
dec
arpl
mov
push
and
out
je
out
pop
and
jno
mov
mov
movsb
scas
push
enter
xchg
fs
test
shlb
sub
add
aam
xchg
jae
cmp
js
push
add
mov
stc
repnz
scas
xchg
xor
and
pushf
push
pop
testl
cmp
xchg
bswap
fwait
in
mov
repnz
cmp
push
popa
cli
xchg
xacquire
push
push
inc
adcl
repz
pop
cmc
jbe
es
pop
lock
push
jmp
or
repnz
jmp
out
outsl
xchg
xor
sbb
add
cmpsb
repz
nop
fs
mov
bound
out
sbb
rcll
lcall
out
push
hlt
insl
sub
clc
jb
xor
les
adc
pop
mov
or
and
leave
aaa
test
push
push
fcmovnu
lds
lods
jmp
mov
sbbl
aad
cmp
inc
or
shlb
jne
dec
dec
mov
out
mov
xchg
push
dec
loope
xor
test
mov
push
fwait
bound
mov
xor
test
jl
repz
testl
pusha
jge
out
add
lods
jg
test
jg
sub
mov
jns
out
pop
ss
cmp
shll
cmp
test
fnsave
xchg
aas
inc
push
push
fistps
call
push
inc
dec
test
bsr
data16
sub
movsl
popa
lods
and
or
sarl
jns
cmp
addr16
push
pop
insl
aad
lahf
pop
loop
repz
mov
stc
testb
mov
sbbl
loopne
std
adc
pop
add
inc
add
iret
cmpb
testl
aas
pop
shr
xor
lds
scas
out
pop
out
out
aas
push
inc
push
sub
xchg
shll
fnstsw
pop
int
pop
add
add
mov
insl
fadds
stos
add
dec
sbb
mov
adc
repz
push
xchg
sub
les
add
lcall
loope
add
sbb
gs
push
stc
push
inc
fs
lods
jb
push
into
sub
mov
or
adc
jecxz
mov
jp
nop
cltd
ljmp
sbb
testl
inc
test
jge
sahf
cs
aaa
sub
mov
xor
jecxz
xor
push
lret
lock
xor
pusha
pop
pop
mov
test
jp
lahf
xor
repz
in
or
sub
sbb
outsl
sahf
shl
xchg
adc
xchg
jp
cwtl
cmp
loop
push
cmp
xchg
and
inc
sub
stos
imul
pop
lea
push
scas
imul
ss
in
loop
push
mov
icebp
push
mulb
call
add
sbb
subb
ret
inc
dec
in
cltd
dec
cmp
dec
mov
imul
mov
adc
rcrl
cmp
movsl
fwait
icebp
ja
sub
jo
adc
cmpsb
les
test
adc
dec
cltd
mov
mov
out
in
mov
call
pop
dec
sti
xor
mov
sarl
aad
data16
add
aas
and
push
mov
cli
inc
lret
shrb
push
sbb
ljmp
mov
inc
lds
jo
enter
mov
mov
cmp
mull
repnz
outsl
cwtl
push
into
add
dec
imul
push
pushf
push
or
int
and
les
out
rolb
xor
out
dec
repnz
inc
fdivrs
push
fdivl
or
push
push
mov
lods
inc
ret
jae
adc
aam
push
push
stos
lea
ja
cmp
jno
ds
out
movsb
fisubl
pop
inc
xchg
add
push
popa
repz
xor
aaa
cld
mov
sub
jns
ja
sub
mov
ja
fnstcw
jecxz
push
and
and
pop
movsl
jle
mov
adc
mov
lea
cmp
cmpsl
jp
jge
scas
outsb
in
xchg
mov
ljmp
mov
loop
mov
mov
test
out
or
int
sub
stos
cmpsl
or
mov
in
mov
mov
and
cmc
fs
jb
dec
pusha
out
pop
fnstenv
xchg
inc
icebp
jmp
andb
adc
mov
jo
xchg
test
xchg
mov
xchg
fs
xor
dec
sbb
jnp
stos
mov
cmp
out
pop
xor
mov
out
adc
inc
mov
aam
inc
sbb
int3
ret
push
std
nop
lods
xchg
sbb
mov
mov
pop
mov
loopne
pop
jns
sbb
outsl
rol
pop
pop
aam
inc
roll
je
xor
jnp
in
cwtl
add
out
add
mov
in
push
aam
inc
js
repz
fildl
ljmp
scas
test
cmp
stos
push
rcpps
int
inc
ja
jg
inc
out
mov
jnp
sti
movsl
jge
stos
adc
lret
mov
jecxz
sbb
cwtl
push
fwait
xor
ds
mov
movsb
xor
and
das
je
sub
pop
xchg
popf
inc
cmpsb
and
sbb
ds
inc
into
dec
dec
aas
les
mov
and
jo
mov
sbb
aad
add
adc
xchg
stc
cli
cmc
cmp
cs
es
xchg
xchg
stos
sti
js
push
jo
push
lock
and
negb
mov
scas
call
adc
dec
or
jns
jge
in
xchg
stos
and
popa
mov
jl
push
arpl
mov
das
lahf
daa
mov
mov
or
and
push
pop
xor
pop
mov
nop
push
dec
xor
mov
jb
adcb
add
dec
jge
add
shl
or
dec
mov
push
jns
jne
push
aas
xchg
mov
sub
orb
hlt
xchg
mov
xchg
adc
shl
jecxz
adc
rorl
aaa
arpl
adc
xlat
arpl
cltd
xor
mov
daa
iret
stos
and
mov
das
fisubrs
cmp
jbe
inc
or
or
in
in
jno
lea
xchg
fmull
mov
cmc
pop
push
in
mov
mov
out
mov
sti
or
outsb
mov
loop
cmc
fildll
and
pop
or
cmp
ror
sbbl
adc
mov
push
and
jae
lcall
inc
add
sbb
xchg
xchg
mov
insb
jmp
addr16
mov
push
cltd
push
xorl
inc
sub
les
or
loop
sbb
cmpsl
mov
mov
sti
int
push
test
and
outsl
jae
add
movsb
mov
fs
arpl
in
cmp
call
dec
aaa
mov
mov
adc
gs
loope
push
pop
aas
jmp
mov
sub
imul
in
mov
jmp
lock
negl
sarb
popf
lcall
mov
push
xchg
movsl
notl
xor
imul
dec
cli
jle
out
jle
mov
sbb
xchg
lds
jl
cmp
sub
pop
scas
xor
aad
sbb
xlat
aad
movsb
pop
adc
push
ds
out
add
roll
pop
fsubr
pop
fdivrl
cmc
push
dec
fldln2
inc
mov
dec
cmp
inc
outsl
ss
jl
es
das
gs
inc
iret
pop
push
in
mov
leave
pop
add
cmp
inc
outsl
sub
add
mov
jb
test
mov
repz
jmp
sbb
lret
add
cmpb
aam
rcll
jmp
mov
into
and
pop
call
rol
push
adc
or
clc
adc
and
movsb
jae
mov
pop
rcrl
xchg
sub
xchg
sbb
xchg
ljmp
mov
push
adc
imul
js
ret
stc
imulb
es
fsubs
xchg
sub
loopne
xchg
pop
dec
enter
shrl
fwait
insb
adc
arpl
out
lods
test
jg
dec
addl
inc
or
adc
jecxz
mov
jns
dec
xchg
lcall
fcompl
mov
rcr
add
arpl
movsb
mov
pop
test
imul
loop
out
adc
out
fcmovu
cltd
scas
outsl
pop
pop
aad
es
popa
push
fidivl
sub
adc
stos
test
std
add
out
push
mov
inc
incl
outsb
dec
push
arpl
in
or
pop
adc
enter
adc
ret
mov
jle
mov
out
push
mov
aad
and
jge
cmp
repnz
aad
aaa
js
lret
pop
ljmp
int3
into
call
enter
out
xor
pop
into
inc
test
orl
adc
aaa
add
cli
stos
mov
and
mov
inc
das
xchg
and
sub
dec
jne
add
fstl
scas
enter
scas
sti
imul
imul
cwtl
out
daa
enter
xchg
data16
jmp
mov
lret
pop
sub
pop
rcll
inc
jecxz
stos
add
outsb
sub
pop
in
rcr
rorb
fwait
pushl
lret
or
loope
mov
pop
adc
imul
pop
push
xchg
pop
cli
fstpt
sub
sahf
push
xchg
lock
imul
outsb
and
dec
mov
jae
mov
mov
lahf
xchg
shll
mov
mov
imull
mov
mov
xchg
xor
push
xor
aam
jge
ficompl
jno
lcall
ss
test
adc
pop
cwtl
call
fwait
dec
mov
pop
push
push
jbe
movsb
shlb
jae
mov
cmp
dec
push
addl
ja
js
inc
insl
aad
ret
mov
scas
popf
pop
lcall
imul
loopne
mov
test
pop
rclb
mov
xchg
push
cld
ja
lahf
ss
pop
sbb
lcall
fldcw
rorl
sbb
pop
int
pop
and
xchg
adc
adc
mov
mov
pop
sahf
repz
fsub
jp
repnz
ret
mov
jnp
dec
push
push
mov
mov
nop
aad
dec
dec
adc
sbb
push
lea
sbb
bound
es
adc
inc
inc
fadd
jecxz
nop
jbe
lahf
mov
int
add
addr16
mov
outsl
mov
inc
pop
inc
pop
inc
mov
cltd
hlt
jle
jb
inc
add
gs
push
or
fs
jns
fwait
lahf
sbb
jmp
jmp
rclb
sub
mov
cmpsl
pusha
icebp
pop
das
mov
xor
dec
mov
daa
dec
cld
mov
jns
cmp
iret
fsubs
push
adc
mov
add
scas
nop
sbb
push
adc
jo
adc
pushf
mov
jl
xor
lret
mov
insl
inc
ret
xchg
pop
fidivrs
in
test
hlt
notl
push
sbb
or
push
sbb
test
shll
pop
insl
adc
punpcklbw
add
mov
xor
jo
cmp
cmp
loopne
sbb
mov
in
push
insb
repnz
push
subl
sbbb
popl
adc
jl
xchg
mov
lahf
in
lret
xor
clc
xor
iret
mov
mov
xchg
and
fwait
push
jo
mov
jno
aaa
out
stos
cmp
sbb
pop
xor
pop
cmp
mov
in
push
inc
mov
add
jmp
mov
popw
addl
js
scas
shlb
mov
and
aad
loopw
dec
xor
mov
adc
popa
js
imul
repz
hlt
ds
sbb
sahf
test
pop
jp
sub
and
push
in
inc
jns
pop
push
push
jl
xor
xchg
sub
mov
jmp
push
scas
push
and
lods
in
stos
lret
sbbb
jo
in
pop
enter
mov
in
repz
dec
jne
xor
sbb
sbb
pop
lcall
mov
and
mulb
int
sub
outsb
fisttpll
push
pop
pop
js
movsl
leave
sub
xchg
push
cltd
sahf
into
inc
pop
adc
mov
rorb
pop
xchg
push
jmp
fcomip
add
scas
dec
xor
stc
movsl
nop
and
push
add
test
push
es
mov
xor
push
or
cmp
sub
icebp
push
and
jne
or
xor
jns
dec
jg
outsb
orl
idiv
dec
aam
dec
inc
push
bnd
rcl
jo
pop
es
add
test
xchg
mov
add
test
out
push
push
call
jo
pop
pusha
lods
pop
pop
pop
pop
hlt
out
fwait
sub
mov
cltd
dec
pop
pusha
push
fistps
jecxz
xchg
imul
xor
pushf
aaa
cmp
push
jno
jg
jl
scas
fwait
cmpsl
pop
xchg
cmp
pop
decl
add
test
mov
into
pop
sarb
adc
fwait
or
in
clc
jl
pop
hlt
lret
mov
dec
sub
or
mov
add
dec
std
std
xor
fistps
and
jne
aaa
dec
fdivl
sub
ja
mov
push
test
stos
les
movsb
cmp
jb
add
test
int3
pop
insl
lret
divl
dec
inc
lods
pusha
xchg
adc
mov
inc
cli
fimull
es
jne
and
incb
iret
add
mov
imul
dec
xor
push
cmp
fiaddl
jmp
jb
mov
rorl
add
jno
int
addr16
andb
andb
dec
mov
out
sbb
or
adc
push
jo
sti
cmp
add
sub
sti
xchg
mov
jae
add
mov
loopne
sub
add
int3
cmp
imul
ret
or
dec
and
addl
mov
adc
and
lret
std
pop
std
add
jnp
scas
jnp
adc
or
repnz
fcompl
xorl
xor
mull
mov
adc
jb
fadd
dec
fs
daa
fwait
adcb
cmp
jnp
out
xor
outsl
xchg
or
test
ljmp
subb
or
xchg
lds
mov
popf
insl
inc
sarb
fidivl
adc
xor
adc
outsl
mov
jg
ror
icebp
out
test
sub
popf
aam
cmp
dec
mov
dec
xchg
or
push
xchg
in
push
push
xchg
push
jne
jae
into
dec
xor
inc
aaa
popa
xlat
fwait
into
adc
cmp
mov
pop
pop
push
mov
push
lea
pop
fdivrs
sti
testb
push
test
scas
sub
cmpsb
mov
mov
xchg
mov
mov
fs
lret
mov
rcr
push
fldl
sub
into
dec
stos
push
stos
mov
xor
testb
or
xchg
push
add
mov
jb
ret
cli
sahf
jbe
jmp
mov
sahf
scas
aad
js
jmp
outsl
aas
lcall
pop
in
in
mov
jae
inc
loopne
add
js
or
pushf
cmp
push
jb
aaa
xchg
dec
fcomp
push
aas
xchg
maskmovq
daa
fnstenv
movsl
je
dec
pop
add
call
mov
dec
in
pusha
inc
imul
sbb
xchg
daa
les
sbb
in
mov
lods
rcrl
pop
inc
mov
popa
pop
aad
push
xor
lea
add
ss
xchg
jmp
je
aad
dec
cmp
std
movsl
cltd
and
xchg
out
insb
push
xchg
cmp
cmpsl
xchg
inc
sub
or
jle
mov
leave
aad
jae
and
add
pop
mov
es
sub
mov
dec
out
mov
sahf
inc
out
call
daa
pop
ret
push
mov
mov
sub
arpl
cmp
pop
mov
testl
sti
mov
xor
cltd
jnp
push
xor
sarb
test
std
ss
dec
fildll
cmp
add
xor
adc
xchg
fisttpl
inc
add
mov
sbb
mov
inc
push
and
mov
pop
ret
ret
xor
jo
movsb
add
dec
scas
pop
test
push
push
aam
rorb
jg
push
inc
xorl
push
push
jb
ss
outsb
movsb
pop
loope
das
aam
test
cwtl
mov
add
inc
pop
imul
push
outsb
jnp
or
ljmp
pushf
mov
cmp
push
pop
cmp
jle
in
adc
test
sti
push
add
lahf
iret
ret
mov
mov
fucomip
xchg
popa
mov
enter
or
and
sub
mov
and
pop
rcrb
fcoml
cmp
adc
arpl
cmp
mov
stos
add
in
mov
jmp
push
mov
or
add
in
mov
sub
out
stos
mov
add
or
inc
xor
jne
imul
xor
out
sbb
xor
pop
mov
repnz
imul
and
scas
adc
lret
mov
test
pop
jae
add
jle
or
xor
pop
jecxz
sbb
insl
cli
jne
jl
push
movsb
and
mov
add
inc
dec
mov
or
fnstenv
push
pop
fcomps
iret
sbb
push
lret
and
pusha
dec
and
insb
arpl
jbe
test
fadds
data16
loope
adc
xor
xchg
imul
inc
insb
xor
sub
push
push
dec
rclb
push
sbb
test
mov
lea
iret
repz
mov
sub
or
cltd
test
pop
add
loopne
jmp
push
cmp
xchg
cmp
clc
mov
stc
and
pop
dec
jns
daa
and
fwait
xchg
rclb
scas
sub
int3
cs
rorl
in
lahf
jg
leavew
je
std
mov
in
pop
loope
popa
and
cltd
adc
sub
mov
loop
pop
mov
jno
notl
ficoms
shl
cmp
jl
ljmp
ja
cmp
pop
mov
dec
cmp
pusha
orb
pusha
insb
sbb
add
aad
sbb
pop
adc
rcrl
das
imull
adc
jno
mov
push
xchg
adc
cmpsl
shl
mov
ljmp
jne
push
lcall
cld
mov
and
nop
rcrl
mov
cmp
adc
and
shlb
movsl
fwait
ss
inc
data16
push
dec
push
jno
xor
add
push
adc
cltd
mov
mov
data16
sbb
add
stos
xchg
and
pop
imul
mov
ja
mov
push
add
mov
add
sahf
std
inc
les
mov
adc
push
cmc
mov
sub
pop
jmp
jb
mov
shlb
imul
inc
rcrb
fiadds
sbb
imul
aaa
mov
pop
xor
push
fdivrl
mov
mov
pop
popf
add
and
sub
rorl
mov
adc
les
xor
bound
insb
fs
xor
clc
jle
xchg
je
scas
mov
inc
jmp
inc
stc
or
or
xchg
cmc
cld
out
sbb
ss
pop
andl
push
in
mov
jns
xchg
pop
lcall
mov
jl
dec
fstpl
fsubl
popa
lds
jmp
sub
push
data16
js
mov
in
in
es
jl
fs
jg
gs
iret
jmp
jb
inc
orb
cs
outsl
imul
jbe
sbb
inc
sti
mov
aaa
push
adc
fxch
mov
add
outsl
jp
and
jmp
mov
and
popf
fldcw
leave
jge
mov
mov
and
mov
inc
mov
inc
subl
push
out
testl
jb
int
mov
je
dec
shrb
shll
mov
lods
adc
out
je
or
arpl
xchg
mov
out
adc
cmp
es
lahf
push
xor
sahf
das
cmpb
or
inc
sbbl
inc
call
jbe
arpl
inc
loope
imul
movsb
std
jae
push
jl
pop
mov
les
mov
push
inc
jb
jbe
and
jnp
adcb
vpshuflw
aas
fcmovbe
mov
add
or
sub
adc
xorb
push
and
sub
mov
xchg
or
cmp
add
inc
sbb
neg
lods
addr16
test
ret
pop
shlb
shr
icebp
sbb
push
push
mov
or
pop
test
lret
aam
fimull
std
les
mov
rcrb
xchg
push
and
std
sbb
into
xchg
gs
dec
add
sarl
mov
or
ret
sbbl
in
cmpl
push
int
out
stos
stos
mov
je
sub
xlat
xchg
into
shl
lret
push
sbb
fnsave
mov
and
int
addr16
or
test
scas
bound
push
pop
ficoml
sbb
or
outsb
repz
hlt
pop
lret
or
or
sub
das
aam
ret
ljmp
cmp
imul
jo
aas
and
xchg
imul
mov
xor
fsubp
insb
aam
movsl
stc
fcomi
xlat
es
push
test
cwtl
pop
popa
and
push
xchg
sarb
inc
push
mov
push
or
jb
mov
and
aas
iret
popf
orl
mov
fisubrl
nop
or
mov
add
into
inc
xchg
mov
fsin
scas
into
mov
js
testl
pop
mov
push
inc
inc
fwait
add
dec
push
scas
cmpb
popa
sub
push
add
jle
sbb
inc
mov
and
popa
mov
and
and
push
or
mov
and
rcr
xlat
add
out
xchg
insl
lock
dec
xchg
adc
mov
in
xchg
sub
lods
cld
add
inc
jbe
cli
push
inc
cmp
ss
adc
ljmp
sbb
xor
arpl
sti
lds
cli
jl
dec
cmp
mov
lcall
mov
fiaddl
sub
dec
push
ljmp
dec
push
test
enter
inc
push
jne
pop
sub
xchg
loope
xchg
fdivrs
adc
xchg
mov
pusha
sbb
negl
aaa
loopne
repz
loope
test
mov
or
pushf
flds
rolb
sbb
hlt
pop
push
mov
orb
icebp
cwtl
lds
mov
push
imul
mov
push
jle
add
popa
inc
bsf
jmp
ret
js
lret
jg
ror
push
scas
sbb
loopne
mov
mov
cmp
jne
adc
and
fs
mov
add
lret
in
cmp
mov
or
inc
outsl
fstpl
dec
ss
xor
mov
sub
adc
xor
mov
pop
je
inc
js
push
push
adc
jp
cmp
jle
daa
add
loop
scas
xchg
loope
imul
das
pop
movsl
sub
xchg
out
push
not
out
fisubs
xchg
rcll
dec
pop
test
xchg
add
cltd
mov
test
jge
inc
dec
shlb
in
pushf
lahf
and
mov
sub
jne
jp
push
sub
mov
or
add
or
repz
pop
mov
pop
cmp
sbb
inc
or
shrl
and
xchg
xchg
sub
cmp
shrb
push
shrb
scas
test
jecxz
inc
pop
lock
mov
ss
iret
xchg
mov
push
adc
cmpsb
or
les
fsubrs
out
jb
xchg
scas
imul
jbe
jne
aaa
cli
mov
inc
jnp
mov
xchg
std
dec
mov
push
push
sub
xchg
jl
mov
jp
push
test
ja
adc
add
dec
mov
shl
dec
sbb
pop
jl
in
loope
sti
test
rcrl
adc
push
rcrl
mov
sahf
shll
cmc
push
loope
mov
fdivrs
in
inc
fstpt
dec
shlb
and
movsl
mov
cmpsb
fisttpll
loop
xchg
cld
leave
adc
sub
imul
adc
cmc
fisttpl
ja
enter
and
inc
movl
push
stc
cltd
hlt
sbb
lea
dec
sub
int
outsl
fwait
daa
incb
jecxz
mov
sbb
sahf
cs
xchg
insb
pop
mov
nop
lds
dec
fistpll
adc
add
push
mov
or
pop
xchg
enter
ficoml
les
or
out
aas
cld
divb
push
enter
pop
shrb
mov
jns
hlt
adc
mov
out
adc
js
adc
dec
outsl
sbb
push
and
bound
pusha
mov
sub
add
mov
sahf
adc
mov
dec
sarb
dec
mov
sti
popa
nop
or
jmp
jno
or
inc
mov
hlt
jnp
xchg
push
jne
jmp
cmp
lcall
xchg
loopne
jno
ds
outsl
iret
sbb
or
mov
jge
mov
gs
adc
jecxz
push
add
sbb
clc
movsl
subb
loope
inc
xchg
add
aas
jno
pop
imul
mov
loopne
insb
sbb
and
pop
jae
inc
dec
out
in
dec
pop
push
notl
ja
pop
add
fistl
cmp
int
sbb
mov
mov
mov
sub
mov
mov
jbe
or
shl
movsl
and
rcl
sub
fadds
xor
je
rclb
clc
or
out
sub
sub
mov
int
mov
fiadds
sub
andl
and
push
pop
into
lock
push
xor
xchg
jo
jbe
test
push
arpl
notl
fs
cmpsl
int
jmp
pop
test
aaa
das
out
imul
scas
jnp
pop
outsb
cs
out
cmpl
pop
leave
dec
js
adc
xor
mov
ret
jecxz
adc
rclb
sub
test
or
dec
pop
outsl
push
sahf
repz
cmp
cmpsb
jp,pn
and
cbtw
dec
pop
push
out
push
fadds
repz
stc
fsts
je
ret
imul
nop
and
fdivl
pop
push
aaa
add
adc
in
out
xchg
mov
insl
inc
outsb
push
subl
xchg
mov
push
add
mov
dec
ja
nop
in
push
adc
lock
lods
sub
pop
insb
pop
jns
cld
push
mov
out
jbe
push
stos
pop
pop
xchg
sbb
xor
push
mov
xor
cmpsl
neg
andl
inc
fstl
int
mov
push
dec
jbe
pop
ja
mov
and
fidivrl
out
jl
lret
cltd
push
mov
pop
daa
loop
push
push
lock
jmp
xchg
pushf
call
repz
pop
fisttpll
lret
or
in
mov
aad
lock
aam
stos
out
rorb
aad
cmp
xchg
lods
bound
imul
mov
int3
jg
xor
xchg
mov
repnz
lods
ror
dec
jne
in
pmulhw
pop
push
cmp
dec
cmc
fwait
jg
ljmp
lcall
cmpsl
ja
sbb
std
rorl
test
je
int
addr16
adc
inc
mov
push
movsl
sub
mov
inc
jmp
fidivrs
mov
shlb
xchg
and
inc
dec
jne
nop
nop
je,pn
push
dec
test
ds
mov
into
and
add
mov
into
pop
pop
lods
pop
iret
lret
dec
xchg
push
push
js
leave
jns
shr
rcrl
icebp
popf
scas
cmpb
dec
adc
jmp
pop
mov
xchg
out
stc
aas
adc
mov
inc
and
pop
ja
loop
aas
pop
xor
lcall
hlt
cli
xor
mov
xlat
insb
rcr
push
mov
and
and
scas
jnp
jae
sub
repz
test
hlt
sub
stc
loopne
jb
and
inc
push
mov
gs
sbb
div
adcl
adc
inc
jge
pop
mov
add
icebp
cltd
pop
add
mov
stc
add
mov
lret
xchg
setae
roll
mov
jns
jecxz
jbe
clc
xchg
shll
fstpt
jl
fstpt
adc
in
mov
mov
out
scas
movsl
icebp
and
pusha
pop
lods
out
dec
hlt
sub
loope
pop
mov
ret
subb
xchg
and
out
lea
jno
mov
xor
pop
shr
cli
jo
add
sub
pop
or
test
shlb
and
cmp
lods
sbb
and
out
cli
push
mov
and
subl
xor
xchg
int
inc
repz
les
shll
fcmovne
mov
xchg
sub
xchg
sbb
mov
int3
inc
jmp
or
aam
out
cmpsb
inc
mov
lret
sub
lock
out
push
scas
fwait
jmp
mov
ja
and
jns
xchg
pop
sbb
jo
mov
sbb
mov
mov
xchg
ds
std
jo
icebp
push
adc
movsb
xchg
mov
and
sbb
sub
xchg
sti
sbb
sub
mov
mov
add
cld
out
lcall
test
sahf
imul
mov
fwait
mov
loopne
xor
shrl
sbb
sbb
push
inc
loop
xor
or
insb
aaa
xchg
xor
add
test
lods
dec
xchg
mov
out
daa
lret
dec
popf
jle
in
clc
or
addr16
cmpsl
xchg
adc
add
add
repz
rcrl
aaa
sbb
insl
movsb
lea
jbe
aad
cmp
mov
sbb
mov
push
aad
pop
insl
mov
insb
add
imul
mov
dec
lds
dec
movsb
cmp
mov
cmpsl
dec
imul
icebp
aas
test
cmp
rcrb
mov
sbb
mov
mov
or
dec
dec
daa
outsl
or
inc
push
jge
pushf
push
rol
sbb
push
arpl
push
aam
cmp
gs
pop
jbe
lea
push
mov
stos
shrb
push
dec
js
adc
mov
in
int3
mov
push
flds
jnp
hlt
and
pop
push
out
jne
xchg
cmp
aad
jno
dec
jl
shl
outsl
xlat
sub
add
mov
xchg
sti
mov
pop
push
cmpsb
inc
test
daa
push
inc
jo
adcl
push
cmp
inc
push
insl
test
and
rolb
sub
cmpsl
or
xchg
jo
inc
sahf
pop
loop
push
cmp
cmp
pop
popa
imul
inc
xor
push
mov
mov
add
jns
roll
adc
mov
testb
lcall
fcoms
sbb
das
movsb
in
dec
loopne
into
xchg
push
imul
and
clc
xchg
dec
sahf
jb
stos
shrb
stc
test
pusha
xor
and
sti
xchg
pcmpgtb
icebp
pop
imull
fdivr
aaa
adc
negb
dec
xor
or
lcall
insb
out
pop
loope
push
pop
mov
out
sbb
and
mov
mov
iret
cld
lock
mov
add
js
ljmp
xchg
pop
nop
push
and
stc
fdivr
inc
sarb
inc
mov
mov
jbe
xchg
and
fs
xor
addb
and
cmp
test
mov
and
jnp
popa
cli
push
pop
xlat
aas
push
sbb
cmp
add
mov
jecxz
les
jae
dec
jmp
inc
js
xchg
push
cltd
rclb
pop
sbb
pop
xchg
shll
jo
nop
dec
hlt
popf
xchg
dec
frstor
sbb
cmp
faddp
fimuls
jge
mov
or
test
inc
std
mov
fsubl
mov
testb
adc
push
cmp
jae
mov
int
xchg
rolb
jne
mov
pop
mov
iret
repz
pop
mov
dec
in
test
test
aad
les
fisubrl
inc
mov
xor
out
movsl
mov
pop
pop
xchg
push
sti
stc
xor
pop
insb
leave
sub
mov
repnz
mov
pop
lods
stc
shll
sub
lea
cmpl
xor
call
sub
bnd
push
push
stos
sub
cs
shrl
subl
mov
outsl
rorb
loopne
sbb
or
xchg
imul
xor
sub
jo
jnp
mov
push
subb
ficomps
clc
push
insb
xorl
cmp
lods
shl
mov
lods
xlat
add
jge
fs
in
jnp
dec
and
lods
adc
jl
aaa
das
dec
mov
adc
jae
addl
test
scas
pop
popa
dec
mov
ss
jg
cmp
push
das
lcall
lds
cltd
mov
add
mov
push
xor
cwtl
mov
clc
mov
sbb
movsbl
xchg
push
xchg
inc
lcall
cmc
pop
jp
pop
adc
jno
jg
insl
loop
ja
dec
cli
inc
ror
lods
scas
push
dec
push
cmp
push
xchg
jle
inc
sahf
rorl
enter
pop
sub
mov
sahf
xor
push
stos
adc
out
mov
xchg
enter
fdivrs
xor
outsb
dec
lock
or
out
xchg
xchg
fdivr
mov
in
add
push
outsl
jmp
mov
push
push
xor
sbb
cld
adc
dec
lret
call
xchg
and
les
xchg
nop
pop
pop
adc
pop
out
fistl
jno
push
push
cmp
daa
jp
xchg
fistpl
cwtl
clts
das
add
pushf
rolb
xor
fistpll
mov
and
stos
andl
test
repz
dec
cwtl
mov
mov
cmpsb
aad
mov
shl
mov
andb
dec
xor
push
xchg
shlb
or
pop
mov
mov
in
out
sahf
ljmp
int3
cwtl
repnz
pop
cmpsl
outsl
dec
out
sbb
sbbl
cs
push
lods
sbb
jl
pop
ds
out
push
mov
movsb
adc
push
aas
pop
jmp
imul
add
add
push
xor
cld
or
push
stc
adc
stc
pop
fs
fadd
mov
imull
sbb
or
sub
in
push
inc
add
stos
xchg
test
jo
xchg
sbb
iret
push
ret
sbb
pusha
inc
pop
sbb
test
mov
dec
shl
cmp
inc
int
fisttpl
cli
adc
pop
pop
js
jg
mov
nop
cltd
leave
sahf
fs
pop
fcompl
fwait
imul
inc
ret
jae
cmp
xchg
pop
cld
inc
push
cmpsb
xorl
xchg
jl
mov
jb
out
push
out
enter
adc
jmp
adc
sbb
xchg
adc
sbb
enter
xchg
inc
in
lcall
jmp
sub
jae
mov
lret
xor
sbb
push
xor
sbb
out
bound
and
aad
and
mov
lret
or
stc
sub
and
sti
rorl
mov
or
int3
cmpsb
out
fcoml
jl
lds
leave
mov
rclb
stos
scas
cmp
xor
jno
cmp
add
testb
dec
fwait
jmp
loope
lods
sahf
pop
jo
out
push
dec
mov
or
adc
adc
scas
dec
lods
aaa
daa
xorb
fmuls
dec
mov
inc
mov
lret
push
addr16
ja
mov
es
pop
pop
std
mov
dec
dec
lcall
and
dec
cmp
cmp
pop
movsb
jmp
jmp
push
repnz
cmp
scas
pop
sub
dec
lea
das
sti
adc
mov
in
sbb
daa
jmp
push
dec
jle
inc
cmp
cmc
adcl
sbb
in
push
adc
les
xchg
movsb
sbb
ror
insl
ret
push
mov
clc
xor
ficomps
sub
push
das
jge
cmpsb
mov
adc
ret
pop
fucomp
xchg
cld
adc
push
int
sti
push
movsb
jle
aam
and
mov
arpl
repnz
addb
ret
aaa
repz
xor
ds
pusha
pop
mov
jmp
aad
mov
dec
push
fcoml
pop
add
enter
scas
pop
jno
pop
aam
ficomps
je
loope
add
pop
fimuls
cmp
sub
jb
xchg
jae
inc
dec
nop
xchg
jbe
aaa
test
jge
pop
adc
mov
pop
cs
jmp
mov
adc
inc
dec
je
lahf
lods
sub
xor
mov
repz
addr16
mov
repnz
jmp
loopne
shrb
push
jge
mov
sub
cwtl
inc
cwtl
pop
outsb
imul
ss
stos
sbb
bound
add
pop
sahf
xchg
pop
idivl
mov
push
cmp
aas
adc
scas
pop
inc
enter
mov
movsb
movl
and
pop
lods
lods
xor
dec
inc
rorl
and
push
xchg
es
sbbl
out
out
int
roll
popa
pop
hlt
inc
cwtl
sbb
enter
cmp
mov
fadds
cs
pop
mov
jge
nop
mov
popf
inc
jns
pushf
stc
dec
and
clc
stos
mov
jns
enter
insb
push
xchg
lods
pop
pop
mov
roll
fs
lock
xor
nop
insl
sbb
or
mov
mov
scas
in
hlt
xchg
cmc
fcomps
rcll
ficomps
mov
ss
out
fidivs
mov
ret
mov
mov
iret
sbb
pop
lahf
fisttpl
mov
vucomiss
std
mov
mov
int
jl
and
xor
xlat
loopne
add
stc
lock
push
in
test
jnp
jg
aas
jecxz
ja
mov
je
xchg
rcrb
popa
les
pop
dec
out
in
xchg
ljmp
cld
lcall
xchg
loopne
sarb
inc
fldcw
mov
leave
sbb
lahf
jno
in
loopne
aaa
jns
jecxz
xchg
xchg
inc
fsubs
pop
fldl
cwtl
in
dec
jae
int3
sahf
mov
push
jns
and
push
call
fiaddl
push
jecxz
ret
sub
fistl
shll
pop
pop
jbe
out
adc
cli
repz
gs
repnz
icebp
mov
mov
movsb
pop
jae
pop
cwtl
mov
add
mov
sahf
sbb
pop
rcr
push
pushf
fcmovne
push
jge
es
sarb
dec
js
clc
scas
xlat
cmp
test
sbb
fisttpl
dec
cmp
rorb
pop
ljmp
cld
out
adc
dec
sti
mov
mov
sbb
push
imul
jge
mov
flds
aas
jb
push
addr16
sub
scas
fnstcw
js
enter
sti
cmpsb
and
cmp
mov
lcall
cmp
sbb
addl
or
push
push
mov
add
shll
pop
testl
cmc
pop
mov
push
sbbb
pop
adc
adc
roll
and
mov
sbb
and
xchg
shrl
mov
sub
stos
jbe
inc
jnp
in
addr16
rcll
adc
add
stc
add
aam
loop
adcl
into
or
xorb
loopne
dec
out
ja
cmpsb
movsb
mov
sub
aam
testl
jmp
mov
imull
gs
aaa
and
and
aas
xchg
and
cmpsl
add
mov
in
ljmp
int
jno
mov
lea
or
in
out
inc
bound
sub
loop
daa
xor
adc
push
pusha
inc
jno
lods
adcb
inc
insb
mov
test
mov
adc
push
push
sarb
in
push
ret
insl
mov
sbbl
pop
in
sbb
ret
lea
fxch
mov
add
loopne
daa
jecxz
shlb
push
clc
xchg
and
fwait
inc
inc
aaa
out
inc
inc
mov
xchg
repz
xor
mov
xor
fwait
pop
mov
mov
outsl
hlt
xchg
mov
pop
rol
imul
andl
mov
pop
pop
stc
lods
dec
cmpsl
adc
or
xchg
push
jge
out
mov
xchg
aas
cmp
push
xchg
xchg
cmp
call
dec
out
mov
dec
push
into
mov
insb
xlat
adc
mov
movsl
xlat
mov
sub
xor
in
scas
movsl
imul
es
aad
or
xlat
repnz
in
imul
cmpsb
jg
sub
adc
mov
push
xorl
mov
mov
mov
xor
xchg
cmp
push
test
xchg
mov
xchg
xchg
lods
sbb
das
fnstenv
fnstsw
mov
test
test
push
xchg
or
inc
sub
jl
mov
xchg
mov
das
sub
cld
aam
mov
dec
mov
xor
sbb
cmp
jo
cmp
add
dec
shr
stos
mov
sub
test
movsb
or
adc
ret
loope
inc
aas
xor
mulb
aaa
sbb
cmpsb
mov
pop
push
pop
or
dec
xchg
push
pop
add
jb
fistpl
push
mov
cmp
inc
and
enter
cmc
int3
test
pushf
fwait
incb
adc
popf
int
xlat
stc
add
pop
jecxz
add
dec
dec
enter
jmp
out
scas
insb
jbe
test
adc
inc
insb
jg
jge
sti
xor
das
adc
aaa
lret
and
push
mov
out
aaa
push
add
xor
xor
ljmp
mov
cli
addb
frstor
in
lds
dec
out
in
cld
cltd
fistpl
mov
pop
xorb
cmpsb
pop
out
mov
scas
and
psubw
outsb
shr
fcmovne
pop
lcall
dec
fstpl
pop
hlt
inc
insl
lea
fcompp
sbb
push
add
xor
pop
or
sub
mov
sbb
cmpsl
shrb
adc
mov
loopne
fsubrs
jecxz
flds
lods
lock
testl
inc
sbb
mov
sub
nop
loopnew
rcrl
and
jno
aad
mov
pop
sub
inc
sbb
scas
jb
mov
inc
std
outsl
leave
cmp
dec
xchg
pop
sub
and
ficompl
and
mov
mov
push
or
daa
outsb
mov
jae
jl
push
adc
movsb
dec
xchg
mov
sti
cmp
dec
adc
mov
mov
fdiv
dec
push
or
aas
jne
aas
xor
dec
adc
mov
xor
ljmp
in
aaa
jno
xor
mov
rcll
add
shl
add
jecxz
push
sub
lods
popw
cmp
dec
mov
mov
cltd
movsl
jbe
mov
mov
lea
mov
cli
scas
shll
divl
mov
aaa
shl
mov
in
imul
lcall
push
repz
add
inc
shll
pop
mov
or
fbld
inc
xchg
mov
pusha
push
or
ret
repz
fimull
dec
addr16
test
mov
sub
movsl
sub
loop
and
fidivrl
inc
xchg
inc
js
rorl
popf
sbb
xchg
mov
pop
adc
xchg
cmp
cmovo
clc
push
sub
fisttps
or
push
xchg
cmp
nop
mov
repz
adc
cltd
jmp
mov
ljmp
iret
xor
jmp
pop
sbb
lods
hlt
insl
test
pop
pop
mov
or
gs
flds
and
jecxz
fcoms
xchg
aaa
mov
xchg
outsb
add
lods
adc
pop
mov
and
loopne,pt
scas
xchg
movsb
pop
sbb
add
sahf
pop
mov
fnsave
pop
rcrb
mov
push
sbb
loope,pn
mov
jne
arpl
xor
push
xor
sarl
jecxz
lock
add
cmpsl
sbb
adc
sbb
cmpsb
dec
sub
pop
bound
lods
or
xchg
push
add
rcr
dec
mov
xchg
faddl
dec
ds
shlb
push
sbb
or
xchg
jge
jo
jno
out
mov
pop
mov
mov
ss
adc
es
sub
push
mov
ss
ljmp
jnp
scas
mov
xchg
add
test
lahf
and
mov
popa
aad
inc
shlb
fiadds
lret
popf
mov
jb
lea
std
adc
out
xchg
daa
fdivrl
cmp
push
and
inc
mov
imul
sub
add
rol
jno
cs
loopne
jo
mov
mov
and
es
fildll
jno
jo
out
mov
jge
xchg
loope
jb
pusha
test
sub
adc
or
outsb
xchg
jg
dec
in
jle
add
test
push
jnp
cmc
in
out
or
push
dec
jbe
sti
pop
sbb
scas
out
aad
aas
mov
das
dec
popa
stc
jns
dec
lea
push
cmp
into
adc
mov
dec
jp
fwait
push
fwait
addl
stos
mov
and
inc
cmp
lock
pop
push
push
jp
fnstcw
or
shlb
dec
mov
mov
icebp
jae
cmc
je
bound
xchg
push
popf
sbb
mov
push
test
ret
sti
xchg
pop
push
xchg
lcall
fdivrl
sti
xchg
std
test
jnp
cmpb
fldenv
cmpsl
mov
pop
scas
addr16
or
adc
xchg
call
fabs
into
loope
sbb
xor
aam
adc
pop
pop
mov
cltd
fistpll
xor
ficoms
enter
jl
inc
outsl
lods
mov
xchg
dec
aas
in
cmp
push
jle
sub
test
dec
sbb
lock
pop
lds
cmpsl
in
sahf
mov
jecxz
xor
cwtl
rcrb
cmp
in
dec
mov
addr16
mov
xchg
or
roll
pop
fwait
addr16
dec
or
and
test
push
into
cmpb
jb
movsb
repz
fnstcw
sbb
cld
xchg
lahf
adc
arpl
push
sti
sbb
cmp
hlt
js
je
aad
mov
push
xchg
xor
jmp
aam
push
lea
mov
dec
aaa
shll
jo
pop
sbb
push
ja
cltd
or
cld
stc
orb
stos
and
bound
add
lar
sti
mov
lods
and
sbb
mov
out
scas
enter
add
inc
outsl
jge
movsl
mov
lods
loope
test
pusha
xor
sbb
sar
out
cld
jno
mov
and
daa
fxch
and
mov
push
fists
cmpsl
fiaddl
movsb
and
jge
inc
sub
dec
call
push
adc
sbb
inc
imul
xchg
add
xchg
es
cmc
sub
rolb
scas
hlt
pop
loop
outsb
rorb
jl
int3
push
sbb
jl
push
imul
or
fmuls
dec
or
arpl
jge
xchg
fsubrs
jle
fadd
in
repz
pop
mov
test
jbe
in
std
test
mov
scas
pushf
and
leave
inc
subb
or
loopne
dec
push
je
js
inc
push
mov
incl
ja
shlb
xchg
les
outsl
jns
xchg
fwait
das
inc
add
mov
add
pop
shlw
shlb
shll
sub
imul
or
adcl
and
xor
test
mov
mov
mov
sbb
ljmp
sub
sbb
sbb
push
cltd
pop
add
std
es
xchg
or
aaa
es
or
andb
leave
mov
xchg
psrlq
mov
xor
mov
jbe
imul
xor
pop
adc
mov
mov
mov
sbb
sub
fisubs
mov
shrb
insb
imul
jp
add
ds
stc
cld
les
inc
dec
xchg
add
sbb
mov
xor
out
scas
jecxz
popa
dec
es
xorl
int3
cmpsl
or
jae
mov
scas
sti
arpl
sbb
xlat
mov
ljmp
jecxz
clc
jl
mov
shlb
mov
fistpll
jle
add
scas
sbb
mov
decb
mov
add
pop
mov
test
cld
push
xor
aam
mov
fiadds
ret
adc
or
dec
push
sti
hlt
popf
push
rclb
lret
dec
and
repz
push
adc
mov
pop
pusha
jnp
fsubrs
aad
and
jg
mov
jo
arpl
cld
add
mov
dec
lret
dec
push
dec
pop
add
and
mov
das
inc
cltd
xchg
push
add
or
mov
add
cld
ret
fstpt
push
cmp
lods
cli
sbb
mov
ret
mov
and
out
mov
fdivrl
sbb
sub
stos
xchg
push
fsubp
je
xchg
filds
lods
xor
iret
mov
inc
in
xchg
insl
out
test
and
cmp
lock
popf
imul
pusha
and
push
or
mov
dec
xchg
mov
xor
xor
cmpsl
addb
xchg
mov
jb
je
pop
lret
std
push
push
adc
scas
aas
adc
shlb
arpl
fs
push
sbb
into
idivb
dec
xor
add
mov
jne
outsb
dec
cmp
int3
lret
in
add
fcmovnb
xchg
add
and
int
lret
aad
arpl
xor
mov
loopne
push
xchg
popf
std
add
fisubrs
andl
push
lea
cmp
stc
out
sbb
and
lds
aam
xchg
roll
pop
hlt
es
push
sbb
clc
add
mov
xchg
rclb
or
or
arpl
lock
cmp
or
push
stos
inc
jp
xor
ja
sub
cmpsb
mov
shr
shrl
fcmovnu
or
pop
sti
mov
and
cmp
sub
js
popa
rclb
and
test
icebp
dec
or
xchg
fildl
mulb
scas
pop
mov
int
daa
adc
push
ja
scas
lods
mov
repnz
dec
out
cmpsl
aam
shl
dec
mov
jmp
sbb
sbb
xchg
sbb
jbe
loopne
lods
movsl
jl
aas
inc
sahf
pop
bound
int3
xor
or
cmp
out
sub
test
ljmp
pop
adc
fsubs
cmpsl
lea
mov
notb
out
loope
insb
not
cmp
sahf
pop
icebp
mov
add
pushf
inc
mov
xchg
lock
out
push
ret
lret
mov
sti
pop
lock
jno
sbb
push
and
nop
insl
jno
adc
scas
test
daa
popf
xchg
sbb
and
fsubs
sarl
data16
add
scas
in
add
in
repz
mov
jg
mov
push
mov
lea
movsl
xchg
popa
aad
lret
das
dec
jno
mov
bound
popa
jb
mov
imul
scas
pop
call
test
rorb
cmp
xchg
add
and
add
push
mul
ficomps
shrl
push
xchg
jno
adc
popa
mov
push
ja
ljmp
shll
shl
scas
shrb
mov
cmp
fstps
loope
and
cmp
dec
bound
shlb
in
dec
data16
mov
xor
mov
inc
ret
js
inc
jmp
pop
dec
in
jmp
neg
filds
addl
xchg
cli
fsubrl
imul
mov
stc
add
xchg
stc
adc
xor
cltd
fdivl
ret
ljmp
pop
leavew
insb
repz
sub
repnz
jmp
xchg
mov
call
fcoml
pop
pushf
mov
ljmp
std
jmp
inc
gs
popa
lahf
mov
arpl
in
fdivp
xchg
inc
jle
or
add
or
test
xchg
fisubl
ja
adc
ja
xlat
arpl
data16
lcall
adc
aam
inc
xchg
cmp
jo
stos
ljmp
stos
ret
cmpl
xor
push
cmpsb
mov
ljmp
and
inc
xor
movsb
dec
push
push
aas
test
dec
mov
mov
jmp
sahf
push
jbe
pop
outsl
in
sub
in
cmp
xrelease
inc
xor
aaa
jle
dec
iret
pop
or
aam
pop
sub
std
insl
in
in
dec
stos
bound
mov
test
cmp
insb
lret
fdivr
add
stos
inc
mov
lods
inc
lods
out
je
dec
sub
std
mov
test
fdivs
inc
imul
and
xchg
pop
push
ljmp
outsb
sub
sub
in
pop
int3
inc
xor
lock
in
out
hlt
mov
mov
or
push
mov
sti
outsb
aaa
testb
insb
pop
jecxz
repz
sbb
sar
push
mov
out
or
out
mov
int3
pop
cmp
or
sbb
adc
repnz
mov
das
inc
or
fcos
cmp
push
cmpl
shr
imul
in
stos
sub
fstps
lods
or
xchg
and
loope
clc
jge
sub
imul
cwtl
sub
sub
mov
dec
xlat
mov
ljmp
lret
fcmovb
clc
test
mov
sahf
pop
push
add
mov
gs
cmpsl
popf
test
add
loop
xor
push
addr16
addr16
pop
dec
xchg
jmp
pusha
cs
mov
push
leave
ss
cmpsb
add
push
test
mov
dec
jle
mov
mov
das
repnz
or
out
adc
push
aad
stos
arpl
add
mov
lods
stc
mov
lock
shrl
push
in
jmp
lods
int3
push
mov
xchg
add
dec
in
adc
outsb
jae
xor
cmpb
inc
and
sbbb
jl
cmp
ljmp
lret
stos
fstl
or
jne
xchg
rol
xor
dec
test
test
push
xchg
in
cmpsl
ja
in
pop
xchg
es
jb
andb
addb
mov
fwait
popa
xor
jp
outsl
pop
ds
test
int3
or
ss
mov
ret
dec
pop
mov
cmp
insb
lret
pop
sbb
stc
inc
xor
lret
popf
push
popa
ja
sub
dec
mov
ret
dec
gs
call
mov
enter
jmp
cmpsl
cmc
loopne
aam
in
dec
push
cwtl
mov
xor
and
pop
sbbl
sub
push
addr16
adc
and
ss
and
data16
jns
push
jle
add
outsb
fucom
pop
adc
fnstenv
mov
sbb
ljmp
jb
cmp
cwtl
pop
leave
sti
mov
xor
push
cmp
mov
inc
add
add
add
adc
adc
inc
mov
mov
imul
popa
adc
in
fucom
pop
jecxz
pop
jl
pop
xchg
shll
xchg
hlt
mov
and
aad
adc
xor
js
fucom
jb
push
aaa
mov
es
mov
out
insl
ds
push
or
andb
sbb
mov
push
mov
xor
mov
xchg
jne
call
cmpsl
je
test
divb
mov
and
or
inc
inc
pop
fcoml
outsb
inc
int3
out
inc
adc
fs
pop
add
sbb
fimull
rcrb
mov
fldl
sbb
xor
fisttps
daa
in
cli
loop
fwait
sti
stos
lock
scas
sbb
cmp
dec
out
cmc
in
cmp
xor
cmpsl
xor
dec
popf
test
jmp
jp
addl
xor
bound
out
push
cmp
fistpl
cld
jbe
shrb
adc
sub
jno
divb
daa
inc
ret
enter
jnp
call
jbe
sbbl
imul
push
add
add
adc
das
lods
sub
rorb
add
arpl
aas
sub
das
orb
and
mov
cmp
dec
js
jmp
and
ds
sbb
jo
or
adc
jmp
mov
xchg
test
sbb
mov
jle
cltd
aas
cmp
xor
cmp
sbb
hlt
push
dec
mov
adc
jb
aaa
sbb
jmp
stos
fbld
sti
sub
jnp
and
add
aas
sbb
or
push
sbb
mov
mov
push
and
scas
jne
or
addr16
and
sub
sub
dec
pop
insb
lahf
out
or
add
outsl
rol
lea
pop
cmpsb
jp
lods
pop
pushf
testl
cmpsl
aas
mov
xchg
movsl
pop
inc
shrb
subb
dec
push
xchg
addb
push
adc
sub
xchg
mov
mov
rolb
cmpsb
das
mov
xchg
jmp
sub
cld
cli
into
mov
pusha
mov
mov
loopne
xchg
adc
mov
call
sbb
xchg
lahf
pop
popf
jbe
push
int
push
or
test
das
hlt
popf
inc
sub
test
cmp
das
xchg
rclb
ret
mov
xor
push
mov
gs
fidivrs
in
jl
loop
adc
xor
fwait
pop
sarl
cmp
xchg
jg
cmp
shll
mov
or
and
lods
pop
les
jbe
jle
adc
inc
call
adc
pusha
in
repnz
shr
lock
rclb
ficoml
fsubr
add
mov
cmc
out
testb
lret
movsl
push
adcb
jae
out
adc
push
push
fistps
hlt
jmp
jp
out
sub
jne
lret
incl
and
xor
in
jl
adc
pop
sub
inc
orl
ror
insl
pop
mov
mov
mov
fmull
fwait
inc
out
or
add
push
addr16
mov
dec
lret
sti
push
and
mov
aaa
cs
mul
addl
pop
pop
push
xchg
adc
or
movl
cmp
or
mov
imul
cmp
fmull
outsl
bound
test
popf
or
and
jno
pusha
pop
add
dec
lods
adc
popa
xlat
outsb
outsl
cmp
rcrb
inc
or
pop
sbb
rcrb
fs
inc
sbbb
arpl
call
jg
dec
and
mov
sbb
dec
or
shr
pusha
push
sub
mov
push
mov
and
shll
sub
or
pop
jbe
push
movsl
adc
ds
icebp
xchg
mov
xchg
xchg
cwtl
cmp
jmp
divb
mov
ds
es
dec
fildl
mov
dec
imull
les
xchg
mov
pop
out
lret
xchg
bound
dec
insl
pop
in
pop
fdivl
test
or
in
pusha
gs
loop
sbb
sti
sti
adc
cmp
jo
push
ds
adc
mov
lret
ljmp
pop
push
adc
sbbb
sti
push
stos
lds
push
stc
sbb
sbb
adc
jp
mov
add
xchg
shl
dec
adc
xchg
jne
cmp
fimuls
push
pop
nop
outsl
stos
clc
adc
inc
dec
lock
je
cwtl
or
sbb
divb
mov
adc
xchg
mov
fstpl
call
push
jae
decl
inc
inc
stos
or
jge
loopne
decl
int3
mov
hlt
cmpsb
jnp
pop
push
inc
adc
adc
push
insl
dec
sti
xchg
xor
cld
add
mov
rorb
int3
jp
popf
mov
push
ja
lea
xchg
mov
adc
ss
or
loop
cmc
or
dec
add
push
mov
rcrl
xchg
int
insl
int3
mov
lock
test
mov
sbb
and
push
xchg
lods
or
jle
out
loop
jmp
sub
in
jae
or
mov
lods
and
in
lods
in
mov
pop
cmpsb
movsl
xchg
loope
mov
dec
mov
adc
rol
dec
push
popf
rorl
mov
int3
lds
cmpsl
iret
cmp
jecxz
add
mov
cmp
popl
adc
ds
je
lods
pop
xchg
mov
adc
shrb
lock
aad
ds
inc
sub
or
push
jne
dec
xor
pushl
cwtl
fbstp
or
jge
sarl
ljmp
dec
lahf
roll
das
lret
or
sti
neg
aaa
mov
scas
pop
add
mov
test
pop
adcb
xchg
imul
cwtl
mov
lcall
inc
inc
jo
test
jbe
push
insb
xchg
aas
in
adc
nop
fwait
mov
pop
cld
dec
inc
push
repz
jg
mov
jb
cwtl
imul
aaa
ljmp
fcoml
jl
popf
int
add
dec
add
jae
inc
fwait
xlat
sub
clc
cmovp
mov
mov
jmp
sbb
and
loop
mov
in
push
loope
inc
sbb
div
test
mov
enter
test
cmp
movsl
mov
add
push
dec
add
jae
adc
mov
push
or
dec
aaa
lret
jl
test
mov
dec
pop
test
scas
sbb
inc
sub
sti
imulb
pop
mov
sbb
fmuls
sbb
jne
push
test
adc
fdivl
rcr
pop
gs
xor
jo
pusha
int
mov
test
jg
scas
call
cmpb
mov
mov
jl
outsb
fwait
inc
dec
fsubr
push
data16
pop
stc
dec
or
inc
loopne
lahf
mov
mov
sub
mov
mov
fldlg2
fwait
pop
jle
push
mov
xlat
mov
fisubl
lds
lods
xchg
out
sahf
sub
cmpl
ret
fstpl
push
test
pop
test
lret
outsb
shll
mov
jle
stc
pop
mov
mov
lods
pop
outsb
loope
test
cmp
and
lds
lahf
stos
inc
sti
jl
xor
or
nopl
fstp
insb
or
mov
dec
xchg
arpl
jmp
sbb
aaa
dec
sbb
cmp
push
mov
mov
mov
cltd
dec
mov
mov
add
inc
sub
dec
scas
lds
inc
hlt
dec
movsb
pop
loope
add
or
dec
pop
mul
mov
out
je
dec
pop
adc
movsl
movsb
out
icebp
xchg
jmp
out
insl
cmp
rcll
movsb
or
or
aaa
and
jnp
add
ret
ja
lds
repnz
and
call
push
lods
subb
sub
cmp
cmp
in
push
ja
add
mov
inc
inc
mov
in
loopne
dec
ljmp
rclb
mov
sbb
nop
mov
push
mov
mov
insl
mov
fabs
fdivrl
mov
mov
adcb
mov
aaa
imul
mov
cmp
ljmp
lods
sahf
fmulp
push
ficompl
xchg
pop
jecxz
cmpsl
xchg
push
loop
mov
mov
xchg
mov
mov
cmp
dec
jecxz
jmp
test
push
pop
mov
push
in
cmpsl
dec
fxtract
pop
mov
mov
lock
sbb
dec
adc
mov
jecxz
mov
sar
sbb
pcmpgtw
daa
jecxz
inc
mov
je
jp
pushf
fdivrs
ss
mov
mov
sub
jo
call
repz
out
lea
push
push
imul
ss
pop
lea
movsl
jl
mov
xchg
push
fstps
and
jmp
mov
mov
jnp
sub
cmpsl
sbb
fidivl
sbb
mov
add
mov
fisubl
mov
addr16
or
inc
and
xor
in
push
xchg
adc
inc
xchg
mov
fsubrs
scas
and
sbb
lret
adc
outsl
outsb
lea
xchg
sub
scas
fstps
test
out
add
jle
push
fs
pop
adc
pop
mov
xchg
pop
sarl
xor
or
add
mov
lock
pop
fisubl
add
insl
cmpsb
push
dec
and
push
xor
mov
packssdw
dec
inc
mov
sarb
out
sbbb
xchg
adcl
cmp
nop
mov
les
test
rcrl
add
mov
push
push
loop
mov
or
das
lea
mov
sub
aas
inc
imul
mov
fwait
pop
fnstcw
rcrl
mov
sti
adc
aam
ss
in
scas
stos
cld
xchg
add
sbb
ret
sti
sub
mov
jnp
lds
cmp
sub
in
ret
in
nop
int3
das
lods
fisubrl
push
cmpsl
adc
out
add
mov
or
sub
pop
dec
pop
or
mov
fldl
push
mov
insl
sub
popa
imul
and
adcl
mov
decl
sub
xchg
lock
pop
xor
jo
shlb
mov
xor
jecxz
jecxz
aas
outsl
movsl
xchg
iret
add
cli
pop
pmuludq
add
mov
mov
xchg
movsl
jnp
fdivrs
dec
xor
pop
nop
mov
sbb
loope
shl
push
movsb
inc
mov
fbstp
outsl
xchg
sub
aaa
adc
mov
jne
cltd
pop
jnp
xchg
mov
arpl
xchg
and
in
jbe
xchg
lds
movb
lcall
cmp
sbb
push
adc
inc
mov
fs
mov
ficoms
lea
or
lret
les
adc
leave
cmp
pop
test
inc
ljmp
aam
adc
jo
pusha
mov
sub
notl
dec
aas
test
mov
inc
call
push
stos
xchg
lahf
fwait
mov
cmpsl
icebp
call
pop
out
movsl
les
pop
sbb
rorb
xor
enter
mov
inc
lds
xchg
xor
xor
fsubrs
bound
roll
repz
fwait
mov
repz
in
jno
in
inc
sub
jmp
or
aas
or
jle
inc
jmp
push
imul
sti
out
jl
mov
inc
fwait
sub
pop
push
movsb
ret
jl
xor
movsl
hlt
mov
jne
fdiv
mov
aaa
push
lods
in
mov
cmp
aad
fsubp
jo
push
xchg
lock
jns
mov
inc
test
sti
inc
lahf
sbb
sbb
jne
int3
ja
dec
sbb
dec
xchg
adc
push
sub
xchg
fsts
test
out
or
divl
cmp
je
sub
test
mov
jns
adc
push
mov
sti
jmp
push
imul
sub
es
movsb
sbb
jne
or
and
stc
jl
add
scas
sub
mov
add
aaa
pop
jo
adc
rcr
adc
xchg
mov
xchg
pop
lock
es
outsb
stc
shrb
add
and
sub
imul
cs
mov
sub
lods
mov
pop
int3
sahf
mov
popf
imul
rclb
dec
xor
icebp
lea
out
insl
adc
rclb
insb
sahf
sub
cmp
add
movsl
mov
loope
sub
add
mov
push
or
ret
mov
sbb
outsl
loope
inc
dec
inc
push
add
xor
inc
sub
mov
sbb
add
movsl
std
icebp
call
mov
and
test
test
and
mov
fs
fdivrs
in
divb
add
jb
jnp
xorl
dec
movsl
mov
mov
lret
sub
and
pop
repz
xchg
jbe
dec
shl
icebp
iret
push
xchg
loopnew
out
adc
inc
fcompl
dec
sbb
mov
add
je
or
loopne
fnstsw
or
sbb
sbb
mov
mov
pusha
adc
or
xorb
lods
push
inc
fbstp
xchg
scas
test
repz
pop
pop
cmc
inc
dec
sarb
adc
sub
mov
nop
loope
in
pop
dec
xchg
ja
jo
pop
roll
lock
mov
loopne
js
lahf
mov
or
mov
pop
out
js
inc
mov
in
pop
xor
fistps
ja
push
mov
add
dec
movsl
insl
jno
inc
and
popa
leave
fwait
jg
xchg
rcr
bound
cmpsb
sbb
inc
inc
ret
fldt
fists
xchg
stc
call
xor
int3
mov
stos
push
and
mov
jle
adc
idivl
stc
into
xchg
iret
dec
jle
inc
ret
mov
out
jle
and
stc
dec
xor
sbb
in
pop
movsb
lds
imul
fnsave
outsb
adc
lret
jmp
inc
lock
sbb
fsubl
aaa
icebp
cmc
sub
lods
push
mov
aam
ljmp
mov
xchg
sti
loope
mov
sti
loope
rcll
jbe
sub
outsb
jo
in
add
iret
orb
andb
and
sahf
pop
sub
cli
xor
pop
mov
inc
xchg
outsl
dec
cld
movb
mov
shl
test
inc
adc
rcr
rclb
mov
jge
cmp
test
sarb
shlb
push
pop
pop
push
cmp
int
mov
mov
add
daa
test
cmp
sub
and
pop
jecxz
dec
or
jecxz
mov
adc
imul
xor
or
jnp
repz
adc
cmpsl
mov
loopne
or
mov
jp
jnp
sbb
cltd
loop
xlat
lret
or
sarl
fimull
inc
out
aaa
fcomps
popa
out
rclb
cmp
call
add
test
int3
decl
mov
cmp
cmc
mov
adc
fcmovu
outsb
fimull
fs
fsub
jmp
hlt
sub
sub
xor
add
sti
xlat
adc
pop
bound
mov
push
test
sbb
or
out
mov
cltd
enter
sarl
jno
imul
ss
xor
push
leave
or
cli
leave
insb
mov
mov
jae
int
inc
cmpsl
in
pop
daa
loopne
jl
dec
sub
mov
test
notl
xchg
aas
nop
repz
xchg
fcomi
pop
inc
negb
inc
sub
xchg
cltd
scas
lock
jnp
gs
xor
ja
mov
xchg
popf
xchg
lret
aaa
mov
imul
mov
mov
xor
mov
int
and
syscall
clc
shll
ret
test
mov
pushf
pop
jb
pop
int3
out
cmp
mov
shlb
lea
lcall
mov
inc
cwtl
roll
dec
cmp
std
cmp
fcmovnbe
add
dec
lods
mov
lret
sub
out
adc
fmuls
insb
mov
push
xor
adc
jle
push
mov
dec
lea
sub
or
nop
mov
xor
push
push
inc
mov
cmp
cmpsb
lret
xchg
lds
imull
mov
mov
popf
sti
pop
add
and
inc
outsb
xchg
repnz
lods
and
mov
insl
mov
xchg
sbb
test
inc
xor
lea
pushf
movsb
daa
push
in
xchg
cmp
imul
daa
push
jns
cli
out
dec
cmp
mov
xchg
unpcklps
das
mov
jge
jmp
mov
jmp
outsl
imul
or
jnp
je
je
mov
dec
jbe
jle
adc
ficomps
pop
imul
dec
popf
or
int3
aas
insb
mov
mov
outsb
addr16
popf
inc
call
push
mov
mov
ret
mov
cmp
xor
mov
jnp
mov
adc
xlat
mov
jne
or
jo
movb
push
xor
cld
nop
xchg
dec
jmp
aad
jecxz
pop
adc
jne
mov
dec
add
add
cmp
mov
push
daa
mov
xor
inc
testl
cmp
fiadds
hlt
lahf
mov
jnp
and
imul
xor
int3
dec
xor
and
sahf
jle
inc
xchg
sub
push
scas
sub
xchg
insl
mov
lret
pop
mov
and
push
mov
jecxz
call
cltd
adc
mov
iret
outsb
ja
pop
aaa
cwtl
cmp
add
push
fmull
cmp
lock
call
mov
cs
or
adc
and
jmp
jmp
xchg
popf
or
cld
jns
push
adc
testb
int
add
mov
jecxz
shll
mov
icebp
xor
insb
bound
test
add
outsb
rorl
mov
inc
inc
lret
fildll
dec
push
push
jbe
jmp
push
call
cltd
xchg
shrb
xor
push
fidivrs
jbe
stc
out
push
in
lahf
in
insb
add
pop
fdivl
cltd
ljmp
subb
hlt
roll
pop
test
fiadds
insb
xor
insl
mov
sahf
inc
mov
adcb
das
mov
jmp
mov
or
in
add
leave
mov
fsts
inc
insl
pop
sbb
cmp
sbb
in
pxor
cmp
cli
stos
jle
data16
addr16
pop
out
mov
roll
mov
lahf
and
mov
xor
scas
stos
mov
mov
jno
dec
in
and
sbb
xor
jnp
or
mov
in
mov
out
add
out
adc
sub
fiadds
imul
lds
in
mov
add
jmp
or
inc
mov
pop
fsubs
jnp
shll
shll
mov
bound
pushf
adc
add
sbb
pop
jge
lds
xor
pushf
int
inc
imul
or
das
rclb
xor
mov
scas
fldt
lcall
push
leave
adcl
sub
xor
gs
ja
cmpsb
add
sbb
sbb
test
xchg
cmpsl
sbb
std
xchg
pop
sub
jae
cmc
je
inc
test
cmp
mov
call
sti
dec
into
stos
sbb
sbb
call
adc
add
sub
mov
jecxz
js
pusha
or
popa
jb
hlt
adc
repnz
insl
or
nop
stc
mov
aas
loope
lods
js
mov
std
jnp
sbb
dec
inc
orl
pop
mov
dec
adc
dec
mov
sbb
mov
cmp
pushf
shlb
mov
xchg
dec
push
push
out
push
mov
push
jno
repnz
cltd
jb
movsl
lret
cltd
pop
outsb
in
mov
add
mov
imul
js
xchg
loop
stos
sub
xor
icebp
je
jmp
or
mov
arpl
and
and
fs
les
mov
stc
inc
test
lret
ljmp
jecxz
cmp
push
xor
lea
or
vmaxsd
inc
stos
outsb
lods
adc
hlt
pop
inc
sarb
push
pop
push
push
push
cmpsl
inc
sti
pop
pop
in
inc
dec
stos
sarb
in
pop
pop
dec
loopne
ficoms
jp
bnd
xchg
or
push
xor
mov
imul
test
mov
out
cmpsb
sub
push
push
addr16
bound
pusha
or
data16
lret
adc
je
repnz
cld
dec
in
imul
pop
mov
mov
jns
sbb
inc
pushf
lock
lcall
dec
push
adc
lods
notl
sahf
inc
xchg
popa
xchg
js
cmc
mov
mov
cltd
jle
jmp
call
mov
sub
push
enter
fistpll
fstps
xor
mov
jle
fwait
push
repz
push
add
sub
adc
sub
add
movb
mov
cmpsb
leave
xor
push
pushf
gs
add
fnstenv
mov
xchg
mov
in
out
adc
cmp
cmp
repz
push
hlt
mov
daa
dec
std
push
shlb
add
sti
jge
xor
push
sub
scas
mov
mov
push
cld
jmp
xor
and
mov
pusha
iret
add
jmp
push
xchg
sub
dec
fsubs
pop
xchg
and
cmp
push
push
adc
sub
loop
sbb
cld
lds
outsb
sub
mov
ja
and
repz
mov
cmp
dec
pusha
or
adc
pop
mov
in
mov
push
movsb
push
mov
dec
dec
jp
xor
sbb
movb
mov
cmp
cli
mov
jmp
jle
mov
sbb
ljmp
out
into
dec
mov
enter
mov
push
shrw
adc
fistpl
stc
mov
stos
mov
pop
xor
std
stos
sub
xchg
xchg
scas
pop
mov
movl
xor
mov
repz
dec
mov
sbb
leave
mov
mov
jnp
cld
xor
in
scas
mov
andl
mov
movsl
ret
inc
and
push
in
add
push
xchg
sub
pop
out
cltd
cli
dec
dec
les
cli
cmp
rcl
add
xor
xchg
lret
rcl
scas
xlat
sahf
mov
lock
pop
test
add
mov
call
push
xchg
in
orl
jmp
stos
adc
xchg
adc
fwait
rorl
push
xchg
loope
cli
in
mov
push
clc
incb
lahf
stos
dec
xorb
ret
stos
in
inc
pop
xchg
test
nop
inc
out
rcrb
lods
push
insl
cmp
ds
repz
mov
mov
jl,pt
js
inc
cs
jg
fidivrs
into
shlb
mov
cmc
cmp
push
sub
and
cmp
cmp
jns
mov
call
cmp
cmp
arpl
dec
stos
mov
shrl
es
lret
pop
cmp
std
scas
shr
xor
ja
inc
adc
lds
cli
out
aam
fwait
arpl
push
mov
std
outsl
mov
cwtl
repnz
pop
adc
sbb
inc
mov
bndstx
mov
dec
push
or
jbe
fbstp
sub
pop
mov
ljmp
mov
bound
mov
mov
pmullw
in
lcall
sub
inc
lret
mov
jo
mov
and
sub
out
cmp
insb
in
clc
imul
mov
filds
mov
int
loopne
mov
rcrl
and
incl
push
adc
mov
mov
mov
sub
lret
mov
mov
popf
mov
mov
and
mov
mov
sti
dec
cltd
lds
mov
stos
es
es
mov
outsl
sub
movsl
lea
xchg
sti
out
xchg
xlat
cmp
stos
adc
cmp
out
out
subb
sbb
cld
jl
mov
or
xchg
out
setp
dec
imul
inc
leave
pusha
jge
sahf
movsb
insl
mov
add
ja
mov
mov
adc
xor
inc
push
xor
pushf
xor
inc
ss
inc
insb
ret
cmp
imull
mov
pop
add
add
outsb
mov
and
xchg
movsl
fiadds
out
or
sahf
inc
int
cwtl
int
pop
orb
and
fsubs
std
sbb
push
movsb
mov
gs
sti
ja
sbb
adc
aaa
lea
and
or
and
test
sub
mov
cmpsl
bound
iret
pop
imul
sahf
mov
xlat
pop
cmc
jo
das
rolb
lock
xchg
or
out
xor
clc
rcll
pop
lcall
aaa
es
shlb
stos
loopne
das
jmp
jbe
adc
in
repnz
les
or
insb
sub
inc
call
in
add
push
icebp
lods
mov
adc
jno
jb
adc
jbe
outsb
out
mov
mov
push
cltd
sbbb
not
push
mov
movsl
sub
adc
or
lock
push
loop
push
dec
pop
jae
mov
mov
je
or
jno
outsl
xor
xacquire
std
add
in
rcll
xor
je
loope
push
jecxz
adc
ljmp
rcrl
addr16
sarl
icebp
sub
cmp
out
test
mov
mov
mov
push
movsl
imul
push
bound
rcll
ret
imul
sub
stos
push
add
shl
jmp
sub
mov
jnp
push
inc
dec
gs
and
xor
shrl
insb
hlt
pop
ja
fldenv
repz
fimull
xor
mul
in
cmp
cmp
push
sub
cmp
in
ja
arpl
inc
out
dec
xor
int3
and
jnp
cmc
outsl
cmp
mov
je
xchg
inc
insb
mov
push
popf
xor
sbb
mov
push
in
imul
scas
adc
sub
jbe
out
or
lds
out
or
fwait
loope
mov
outsb
mov
push
loope
mov
push
cld
sub
adc
jmp
mov
sarl
jecxz
push
push
mov
inc
and
in
jbe
or
mov
cmp
lods
iret
fbstp
repz
daa
cwtl
imul
adc
aaa
pop
pop
or
movsl
popa
movsb
nop
adc
xchg
adc
dec
dec
xor
xchg
dec
xor
mov
push
lcall
adc
icebp
daa
push
jns
or
ds
mov
movsl
jge
xchg
insb
out
xchg
dec
lcall
cmp
shrl
js
jg
arpl
inc
lahf
into
add
push
pop
pop
in
cmp
sbb
out
lahf
out
pop
pop
cli
pop
sbb
sti
int
mov
stos
push
fisttps
in
leavew
add
or
mov
test
out
inc
or
ljmp
int3
hlt
jg
inc
pop
rcrb
stc
popf
xor
xor
pop
adc
insl
add
loop
popf
xchg
and
mov
jns
inc
incl
cmc
test
push
push
popa
adc
imul
mov
outsb
mov
out
data16
rcrb
sahf
xor
popf
loope
inc
int
or
popf
lods
pop
out
mov
nop
test
ja
lret
jl
mov
dec
dec
movsl
jne
jle
push
inc
rep
mov
push
fnstsw
fimuls
xchg
enter
cmpsb
cltd
popa
fimuls
in
mov
ss
sub
pop
cmp
out
adc
cmpsb
jbe
cmp
js
xchg
popf
ret
xchg
mov
xchg
xor
fldcw
repnz
sarb
ss
sahf
xor
push
mov
in
xor
mov
ds
int3
xchg
icebp
sub
push
aad
or
mov
es
inc
jmp
insl
pop
fdivp
sub
aaa
jl
lea
out
sahf
mov
insb
add
push
mov
call
push
jle
int
icebp
movsb
xchg
in
mov
push
call
lahf
push
into
fwait
lea
add
aas
shrb
pop
dec
push
sub
push
je
jmp
sbb
ja
js
sbb
sub
and
scas
adc
lock
pushf
ds
je
sbb
mov
ljmp
flds
cmp
push
aaa
and
cmc
lahf
sub
adc
push
aad
out
mov
cmp
xor
pop
cmpsb
cmp
cmpsl
adc
fwait
rorl
test
int3
push
dec
testb
ss
add
pop
sbb
stos
adc
dec
jecxz
pop
mov
fistps
bt
add
pop
popa
mov
sbb
mov
out
pop
xchg
addb
cs
cmp
out
xchg
mov
adc
push
les
cmp
lcall
loopne
mov
pop
push
cmpsb
mov
dec
sub
sarb
xlat
test
ja
mov
add
es
mov
cmc
mov
rcll
sub
push
xchg
pop
je
adc
cli
idivb
mov
div
loop
push
xor
in
pop
xchg
push
dec
sub
lret
jb
mov
sbb
pop
jns
xchg
data16
adc
pop
mov
mov
add
jnp
dec
cmp
cmpsl
push
lea
shll
cmp
ret
cmp
dec
xchg
iret
pop
jo
jbe
les
mov
icebp
out
gs
ficoml
mov
sub
jns
insb
cmp
ss
mov
mov
jne
std
or
nop
roll
jno
pop
push
shrb
add
adcb
xor
daa
shll
clc
testb
add
sub
aas
push
xor
push
in
lahf
inc
je
ds
cmp
stos
aas
dec
xor
fwait
movsl
xchg
aam
pop
xchg
pop
jl
mov
and
hlt
add
test
mov
out
mov
mov
daa
sub
jg
push
mov
movntq
out
mov
sahf
xchg
sbb
into
in
push
mov
mov
cs
inc
scas
cmp
aas
adc
je
test
outsl
imul
fcmovnbe
test
leave
cmp
jl
jecxz
push
les
idivl
push
mov
iret
aam
mov
mov
or
aad
add
imul
in
sbb
clc
ret
shrl
into
mov
push
out
cmovo
fcomp
mov
fidivrs
mov
adc
aam
sbb
mov
jo
push
add
jbe
add
daa
mov
imul
sub
add
push
jno
jmp
jl
mov
xor
aas
cltd
mov
push
xchg
xorb
in
push
outsl
into
mov
cmpsb
sub
xor
lods
xchg
mov
mov
cmp
mov
dec
or
and
pop
sbb
pop
loopne
je
xor
aas
cwtl
xchg
cld
mov
sahf
mov
shrb
cmp
sbb
sbb
or
dec
pop
sbb
xor
negb
jns
xor
clc
pop
fwait
push
jae
cmpsb
push
xor
lcall
ljmp
cs
out
xchg
pop
ds
ds
ljmp
popf
push
dec
pop
xchg
mov
bndstx
inc
or
push
enter
mov
mov
dec
out
jle
xor
jno
dec
sahf
mov
jb
mov
jae
mov
fwait
fs
dec
ja
std
xchg
into
mov
lods
fld
lods
into
push
iret
cmp
out
insl
ret
bound
xchg
jae
rclb
in
jge
in
add
fwait
push
cmp
mov
aad
xchg
mov
sbb
adc
inc
in
cltd
sti
shrb
in
lea
mov
push
loop
inc
xchg
jne
imul
push
roll
push
push
xchg
adc
fwait
inc
push
push
or
adc
mov
cmp
rclb
cmpsl
scas
aas
out
cwtl
ljmp
leave
in
into
shll
cs
xchg
in
jge
cs
popa
stos
fildl
stc
and
int
push
outsl
add
mov
sar
push
xchg
mov
stos
je
pop
nop
shrl
pop
push
icebp
nop
sarl
jle
xor
add
adc
push
pushf
pop
mov
xor
jge
addr16
ss
inc
lahf
and
adc
lahf
xchg
xor
sti
scas
push
montmul
cmpsb
ja
mov
les
or
jnp
xchg
mov
inc
ja
push
push
fcompl
jbe
idivb
pop
pop
popl
sub
les
pop
pop
jecxz
das
ljmp
push
mov
xlat
dec
movsl
cli
dec
inc
out
cmp
mov
gs
jmp
in
push
clc
je
add
xor
fbstp
adc
jae
jno
sub
adc
xlat
aad
mov
mov
and
sub
je
jo
ja
xchg
lcall
ret
out
jbe
test
stc
cmp
and
push
and
push
shlb
fildl
clc
rol
out
in
in
adc
adc
mov
xlat
push
or
test
jle
ret
sbb
pushf
xchg
lret
out
and
dec
es
adc
insb
hlt
mov
jns
ds
xor
adc
testl
push
sbb
daa
mov
sbbl
clc
dec
cld
and
lret
adcb
xor
aas
pop
imulb
int3
cmp
mov
add
mov
mov
push
mov
arpl
inc
and
stos
aas
dec
xchg
mov
jmp
jns
and
gs
fcoml
cmp
xchg
fsts
cs
push
push
and
fsubrs
rolb
mov
jae
imul
jge
lock
sbb
pusha
add
sti
mov
ficoms
or
cmp
inc
xchg
add
jo
rep
cmpsb
mov
push
mov
adc
dec
leave
sub
jbe
mov
mov
xor
dec
test
jge
inc
push
and
aam
stos
lret
outsb
fildl
popa
adc
dec
jl
mov
mov
insl
push
xchg
mull
push
cli
aam
lret
out
pop
push
cld
and
dec
addr16
outsl
faddl
mov
dec
jo
movsb
inc
and
orb
icebp
xor
mov
and
adcb
les
out
pop
push
pusha
add
xchg
lea
xchg
pop
mov
mov
mov
mov
fcom
xor
cmp
mov
jnp
shrl
push
mov
sub
or
xchg
adc
sub
mov
jl
dec
daa
pushf
pop
add
push
inc
ficoms
arpl
bound
adcb
xchg
movsb
aaa
into
out
inc
xchg
pop
insl
push
fs
adc
mov
rcll
and
loop
mov
inc
addr16
dec
cli
add
movsl
scas
loop
mov
mov
repz
in
pop
cmp
pop
fsubl
out
push
jnp
push
les
sub
mov
cmp
push
notb
push
or
das
icebp
movsb
adc
outsl
xor
outsl
mov
imul
fstps
inc
sub
in
xlat
aam
adc
lods
adc
sbb
adcb
or
testl
pop
sbb
imul
sub
xor
and
imul
push
stc
xchg
xchg
jb
push
dec
mov
mov
xor
fmuls
adc
mov
rcll
vcvtdq2ps
aad
cwtl
or
popf
push
popf
or
pop
cwtl
mov
lods
repz
int
jge
sub
ficoms
xor
in
insb
and
mov
sub
fmul
into
bound
lret
mov
mov
shll
sbb
xchg
mov
inc
mov
inc
rcrb
inc
jmp
bound
mov
ret
add
or
leave
orb
lret
mov
mov
xchg
cmp
aas
call
nop
cmpl
push
fwait
sub
lods
pushf
add
test
jne
ds
xchg
and
push
mov
sarl
arpl
or
movsl
mov
lea
add
jns
cwtl
sbb
sti
pop
xchg
cmp
inc
push
or
shll
in
mov
in
out
push
lret
inc
das
jge
push
stc
fcmovnbe
enter
test
or
in
jns
sbb
notl
and
mov
xchg
test
adc
mov
test
test
sbb
iret
bound
xor
pop
jmp
out
dec
iret
cmc
or
mov
xor
pusha
mov
int
pop
in
cmp
fistpl
mov
fbstp
or
loopne
lea
push
test
xor
in
mov
dec
dec
push
xor
adc
adc
fisubs
outsl
xchg
sub
repnz
dec
jge
ja
in
adc
iret
jno
scas
repnz
in
or
push
and
jge
mov
aaa
push
cmpsb
iret
movsb
cmp
faddl
dec
test
stos
insb
inc
mov
xor
sbb
xchg
arpl
dec
pusha
fwait
cltd
cmpsb
outsl
stos
shrb
pop
lods
add
out
orl
fsubr
mov
mov
popa
mov
adc
jnp
stc
xchg
cmp
push
xlat
inc
jbe
inc
sub
inc
or
fildll
and
mov
sbb
lret
test
xchg
std
sub
inc
add
das
sbb
and
fwait
sbb
rol
xor
add
rorb
add
shlb
and
xor
daa
and
cltd
leave
and
jmp
mov
fistpl
cwtl
sub
xchg
jge
adcl
mov
mov
xor
jns
cmp
mov
sti
inc
inc
mov
imul
jb
out
ja
xor
jbe
xchg
push
cwtl
mov
mov
sahf
jb
int
jae
jb
pop
cmp
push
push
push
mov
xor
int
cmp
jp
mov
fbstp
and
sbb
scas
dec
mov
fidivs
adc
insl
cmp
mov
and
insb
push
cmp
jb
sbb
in
in
hlt
pop
into
jmp
or
push
push
popf
inc
std
cwtl
xchg
call
sbbl
scas
pop
inc
ret
cmp
jle
xor
push
jae
loope
rcl
xchg
xchg
sub
and
mov
inc
xlat
dec
pop
add
sub
mov
hlt
sub
adc
jl
leave
xchg
mov
repz
adc
fdivl
add
mov
pushf
lret
leave
push
sahf
adc
sub
add
mov
inc
xlat
push
int
inc
mov
adc
ljmp
push
mov
orb
add
icebp
pop
push
in
sub
js
mov
dec
js
jnp
xchg
scas
shll
adc
cmpsl
mov
pop
test
push
imul
mov
push
frstor
and
mulb
xor
xchg
aas
xchg
mov
cmp
int
sbb
sbb
dec
imulb
xchg
outsb
jp
repnz
fdivrs
ss
sbb
adc
rcrl
add
nop
sbb
xor
leave
or
in
sti
icebp
bnd
mov
and
mov
jo
pushf
js
push
lret
cmc
dec
movsl
inc
std
lcall
stc
mov
je
repnz
dec
insb
aad
mov
cwtl
sar
sbb
xchg
push
outsl
adc
in
and
pop
jle
inc
cmp
cmpsl
cmp
fcoms
dec
add
add
lods
lahf
mov
adc
ret
addr16
sub
mov
adc
push
add
jbe
add
mov
or
jae
cmp
dec
pop
push
and
fiaddl
stos
test
idivb
add
daa
divb
push
sahf
or
arpl
push
adc
test
xchg
xchg
andl
pop
inc
fdivr
fmul
aam
test
cltd
and
ror
cmpsb
cmpsb
mov
sub
mov
outsl
gs
clc
sbb
push
inc
mov
mov
sub
aad
jg
xchg
pop
cmovae
popa
aaa
orb
fwait
mov
movhps
and
or
ficomps
push
pop
fiadds
mov
mov
jg
ret
dec
jne
push
pop
jns
int3
repz
xor
sub
xor
sub
or
xchg
movsb
sbb
cwtl
add
addb
add
cmc
lock
jmp
mov
jo
push
lds
insl
mov
pop
mov
xor
adc
jle
xor
adc
cmp
imul
cltd
cwtl
mov
lds
shlb
xchg
sahf
cmp
dec
dec
arpl
rolb
mov
lock
bound
in
cwtl
push
in
sub
mov
cld
leave
jle,pn
pop
jg
call
jle
jmp
rclb
das
jecxz
repz
aad
sub
sahf
repnz
jg
dec
into
andb
inc
mov
fisubrl
mov
cmpsl
test
sub
data16
xchg
add
push
mov
mov
mull
xchg
xchg
mov
mov
imul
daa
nop
xchg
sub
mov
insl
lcall
aam
mov
ss
dec
lret
cld
mov
jno
xchg
jge
jecxz
xchg
xor
sub
out
adc
fadds
popf
enter
cmpl
sub
sti
jnp
stc
xor
cmp
js
push
je
in
inc
pop
fldt
bsf
movsl
cli
lds
fisttps
mov
mov
movsl
push
stos
ret
and
jb
mov
xchg
mov
adc
lock
fwait
add
mov
je
lods
add
shrb
jo
adc
pop
push
xchg
shll
mov
ss
xor
ret
into
cmp
stc
ds
inc
gs
in
jns
push
jp
sti
outsb
sub
xchg
adc
and
inc
stos
lds
lods
in
fimull
mov
or
int
arpl
add
add
cli
iret
xchg
mov
rcll
sbb
js
rol
or
lods
mov
xchg
inc
int
test
dec
aad
jnp
std
sub
mull
clc
fs
repnz
outsb
fdivl
mov
xchg
pop
lea
cmp
inc
lds
sub
xor
xor
add
scas
pushf
dec
and
add
pop
clc
daa
in
in
fildl
fdivs
mov
and
arpl
aad
and
stos
xchg
jle
inc
jge
mov
ljmp
cli
add
aad
rol
dec
mov
orl
mov
lods
movsb
mov
std
loope
dec
in
and
daa
add
repz
loope
pop
mov
jle
ffreep
loopne
cs
mov
jmp
sbb
pop
mov
fcoms
outsb
sbb
mov
das
icebp
mov
popa
scas
into
fsts
mov
xlat
dec
andl
lret
into
and
test
fs
addr16
xchg
pushf
or
push
jmp
dec
pop
pop
movaps
mov
or
out
inc
or
nop
stc
add
mov
jl
and
div
jns,pn
lret
hlt
xor
and
push
push
jge
jge
cmp
inc
or
mov
addr16
push
lret
int3
lcall
int
mov
jecxz
data16
jnp
outsb
data16
or
in
movsb
ret
add
inc
push
insl
push
loopne
mov
mov
mov
shll
arpl
sti
push
sub
divl
stc
negb
dec
ja
mov
popa
mov
mov
in
clc
xchg
push
sahf
loope
mov
cld
ljmp
mov
jb
subl
mov
pop
fisubs
xchg
push
pop
test
cmpsb
fcmovnb
inc
icebp
loopne
ljmp
jp
mov
mov
data16
out
mov
in
cmp
cmc
and
rol
and
test
sub
and
std
sbb
dec
dec
mov
adc
jmp
repz
sub
dec
xor
mov
sub
dec
test
test
jmp
pusha
cwtl
jbe
jecxz
bound
xchg
call
pop
and
movsl
xor
jl
fsubl
mov
test
rcrb
or
add
movsl
mov
mov
add
in
loope
push
gs
sbb
arpl
out
xor
mov
xchg
dec
xor
test
mov
push
loope
jno
pop
cmpsb
or
xor
adcl
rorb
fistps
inc
cmpsl
test
ljmp
aam
push
jne
add
out
xor
xchg
and
add
xchg
aas
xchg
ljmp
sub
xor
imul
loopne
lea
cwtl
movsb
mov
add
out
sub
ficompl
inc
mov
mov
add
stos
sub
dec
and
jge
adcl
lret
sti
out
push
icebp
push
xchg
orb
or
jg
xchg
cwtl
pusha
insb
or
aam
subb
and
mov
pop
pop
loopne
mov
mov
sti
adc
push
test
mov
adc
mov
or
dec
cmp
sub
out
jle
adcb
in
lods
mov
lods
shrl
mov
jae
and
or
sahf
adc
xchg
stos
dec
pop
fnstcw
stc
sub
jg
inc
inc
push
test
xchg
xor
shl
jno
rcrb
cmp
jmp
negb
enter
inc
mov
aam
jbe
sbb
dec
cli
cltd
iret
mov
mov
pushf
repz
xchg
sbb
shlb
aas
fstpt
or
out
addr16
divl
dec
adc
jp
and
fstl
add
ror
loopne
or
push
or
jle
add
arpl
gs
cli
push
icebp
mov
push
jmp
add
sbb
xor
shll
xchg
jne
scas
ja
mov
and
and
cmp
cmp
int3
jl
mov
imul
leave
pop
mov
push
push
mov
xor
push
xlat
and
sbb
ss
sub
cmc
popf
push
mov
push
fildll
jo
outsl
jl
dec
std
xchg
repnz
dec
add
mov
outsl
xchg
and
push
cmp
in
imul
cmp
sbb
test
mov
repnz
xchg
sub
aas
leave
fisttpll
imulb
mov
inc
out
out
xor
jo
xchg
sti
sti
les
push
push
push
dec
push
mov
pop
sub
sub
test
lahf
mov
movsb
leave
add
jo
cmp
sbb
gs
cwtl
cwtl
inc
ja
push
in
fstps
push
and
in
mov
or
jo
jns
test
mov
cld
repnz
pop
nop
push
fcoml
jne
cmpsl
push
push
filds
lods
ret
cmp
xor
sbb
jne
out
fwait
sbb
test
add
lret
sbb
stc
out
or
andb
xchg
fcmovbe
or
dec
fnsave
jb
lahf
jb
add
daa
xchg
cmp
xlat
adc
imul
jo
push
or
das
leave
jp
stos
stos
addr16
push
cs
pop
test
push
clc
cmp
sub
pop
sbb
lret
mov
mov
pop
iret
rorb
je
mov
mov
outsl
std
xchg
movsl
leave
out
pop
and
jp
mov
cmp
icebp
mov
push
mov
add
add
ret
ret
push
test
push
add
es
das
dec
jnp
test
jle
inc
cmp
ja
cmc
shll
ret
xchg
lods
stos
push
int
es
pusha
adc
inc
in
cmp
into
adc
cmp
outsb
sahf
mov
mov
scas
and
loop
fldenv
popf
lcall
int3
je
imul
mov
stos
push
mov
xor
mov
mov
das
mov
jb
into
mov
lock
pop
jl
bswap
pusha
pop
jne
mov
add
xchg
push
in
bswap
cli
imul
inc
repnz
mov
je
cltd
sub
adcl
enter
xor
movsb
inc
adc
xor
adc
dec
push
adc
xchg
pushf
int
mov
sti
out
pop
adc
sahf
mov
loop
sub
dec
mov
call
jecxz
cmp
ja
pusha
mov
in
sub
ret
xor
in
add
inc
pop
daa
adc
mov
fs
dec
jne
ficompl
jnp
xchg
sbb
xchg
sti
jle
cmp
or
rcr
sahf
test
cmpsl
xchg
sbb
push
push
out
add
xor
jb
and
inc
cmpsb
dec
push
sahf
mov
pop
add
dec
loopne
inc
xchg
add
repz
add
pop
push
inc
mov
loop
out
add
add
arpl
je
fptan
xchg
lods
int3
sbb
push
dec
push
xlat
fs
push
mov
adc
pusha
mov
or
jnp
xlat
ret
lea
xchg
xor
insb
mov
pop
mov
cmpsb
clc
and
push
xchg
push
cmc
cs
icebp
gs
mov
jl
cmc
rolb
xor
adc
dec
jae
pop
mov
inc
mov
dec
add
das
adc
mov
jecxz
jge
pop
in
push
mov
dec
jmp
lods
rcrb
dec
push
mov
aas
int3
sub
clc
test
sub
push
add
push
push
xchg
aaa
dec
cltd
pop
inc
dec
inc
cli
cmp
jnp
rcrl
push
jo
mov
flds
aad
xor
cmc
pop
and
inc
mov
push
cmpsl
mov
in
push
mov
aaa
inc
push
std
xchg
push
sub
lea
adc
popf
daa
imul
inc
rcrl
ret
cmp
inc
cmp
cmp
xchg
repz
movsb
call
stos
jb
or
and
jmp
mov
ss
mov
mov
push
stos
imul
sub
dec
out
add
or
push
dec
push
adc
loopne
push
dec
enter
xor
xchg
pusha
sbb
je
inc
xchg
cmpsl
xor
and
mov
push
cmpl
dec
mov
pop
mov
sti
stos
xor
dec
ds
repnz
mov
and
jg
add
fcoms
sti
jl
int
pushf
add
mov
bnd
adc
sbb
int3
lods
cmc
fucomi
mov
aam
or
shll
push
mov
ds
inc
in
test
outsl
cld
mov
cmp
or
mov
mov
daa
mov
in
add
push
adc
xor
jp
outsl
adc
out
lea
xor
scas
scas
push
fxch
mov
push
into
stc
lahf
push
cmp
inc
call
sbb
xchg
sbb
cmp
std
rclb
inc
js
and
inc
push
mov
pop
mov
sub
insb
or
sbb
cmpsl
jns
lahf
rcl
cmpl
add
loope
lcall
jb
testl
xchg
sub
adc
enter
fsubrs
movsl
scas
pop
and
mov
sbb
sub
lahf
clc
scas
mov
ss
data16
insb
pop
pop
bound
dec
fisubs
adc
and
add
mov
mov
jns
pusha
dec
dec
ficoml
ja
sbb
fs
out
test
add
arpl
inc
mov
mov
in
jmp
insb
xchg
xor
pop
cmpsl
out
add
out
shll
jb
or
ja
mov
cmp
sub
mov
leave
loop
push
popa
rorb
movsl
push
scas
adc
push
mov
jns
xlat
cmc
jge
aad
sub
into
mov
test
cwtl
repz
sub
sub
xchg
jnp
imul
dec
scas
inc
dec
popa
or
mov
mov
mov
xchg
or
lcall
test
mov
pop
fsubrl
iret
push
dec
mov
sub
ss
push
cmc
int
and
sbb
and
das
sub
dec
in
data16
cwtl
jecxz
push
xor
ficomps
pusha
repz
fdivrp
cmp
and
jmp
in
pop
cmpb
test
or
iret
pusha
xor
jp
mov
inc
jg
lods
push
test
xchg
cmp
inc
add
insb
mov
outsl
xor
pop
mov
outsl
ret
sub
faddl
adcb
jns
in
daa
bound
sub
popa
adc
pop
outsb
xorl
ss
xor
xor
in
addr16
loop
pusha
jle
mov
in
mov
hlt
sahf
pop
jle
imulb
je
movsb
jae
hlt
xor
adc
cmp
ret
inc
xchg
xchg
mov
xchg
scas
inc
xor
and
mov
pushf
sahf
jp
inc
mov
adc
or
popa
cmp
xor
push
ja
mov
loop
or
int3
mov
mov
cmp
mov
push
out
imul
jb
jae
dec
push
xchg
insl
xor
sbb
mov
cmp
lock
cmp
movsl
rclb
push
inc
nop
sbb
test
add
dec
neg
adc
mov
pop
fcoml
gs
jns
clc
jecxz
push
mov
mov
stos
andl
mov
push
aaa
mov
inc
lcall
add
add
push
pop
or
shrb
jnp
inc
ja
xlat
dec
mov
daa
cmp
adc
push
dec
scas
bound
stc
xchg
jbe
sbb
dec
mov
mov
push
aaa
insl
add
mov
ficoml
insb
mov
in
cmc
test
sub
scas
mov
adc
jns
push
mov
icebp
imul
int
pop
sbb
jecxz
sub
jno
mov
sahf
sbbb
pop
xchg
ja
xchg
adc
subb
outsl
pushf
push
xlat
loope
imul
iret
pop
sbb
mov
mov
lcall
daa
ret
inc
ss
and
repz
out
outsb
loop
ret
cld
or
xor
mov
ret
js
insb
push
adc
lds
and
dec
and
inc
je
xchg
popf
mov
nop
inc
jae
movsb
push
xor
lock
mov
push
mov
movsb
add
push
rep
xchg
mov
mov
cld
popa
xchg
mov
xor
mov
jne
and
clc
lret
loop
fiaddl
mov
push
adc
movsb
push
adc
orb
push
stos
adc
repz
mov
adc
xor
mov
sub
fst
xor
mov
pop
jns
sbb
and
lds
add
inc
notl
sbb
lods
sub
or
lods
and
in
push
lods
aad
jo
xchg
dec
pop
mov
mov
insl
fs
mov
sbb
in
mov
mov
sbb
shl
lea
fsubrs
xchg
xchg
inc
or
cmc
mov
add
popa
sbb
aas
std
mov
lret
inc
in
in
flds
mov
mov
out
dec
jmp
sbb
outsb
scas
test
pop
lods
stos
lcall
pop
push
cs
mov
dec
scas
loope
dec
xor
lret
and
in
dec
xor
pop
ljmp
ret
shl
in
mov
ret
push
test
xor
fildll
cmp
adc
and
shrl
jb
clc
gs
cmpb
sub
stc
in
insb
push
xorb
lds
repnz
xor
pop
lds
clc
push
fs
and
ja
xor
mov
cwtl
ret
cmpsl
mov
sbb
out
test
mov
adc
dec
and
or
nop
push
mov
arpl
fs
fsts
outsw
dec
xor
addr16
negl
mov
call
push
cwtl
inc
mov
jge
in
xchg
pusha
in
push
insl
sbb
pop
rcrb
push
inc
fucom
or
and
lds
in
test
pop
push
or
and
dec
dec
cmp
repz
mov
jno,pt
test
or
cmp
cmp
mov
out
mov
cwtl
inc
xchg
sub
add
arpl
lcall
xor
dec
dec
lret
clc
je
shrb
jp
sbb
popl
dec
insb
jbe
vmread
adc
mov
sbb
or
mov
aad
push
sbbb
adc
loope
sar
jno
mov
ljmp
xor
add
mov
jecxz
js
fcoml
sub
push
imul
out
ja
jmp
xor
rolb
mov
or
cmp
cs
arpl
mov
fcoml
jno
popa
mov
cmp
roll
jnp
jne
dec
bound
jl
lods
js
and
xor
and
loopne
and
pop
pop
xor
sahf
jns
decl
cli
pop
xor
and
insl
shll
mov
inc
mov
or
inc
cli
sbb
pop
fisttpl
out
cmp
mov
xor
shrl
sub
mov
int3
fnstsw
outsl
adc
addr16
xchg
push
int3
test
xchg
cmp
outsb
sbb
add
ret
xor
imul
cld
cmp
stos
fcmovnb
xchg
les
mov
jle
in
lods
mov
pop
popa
enter
xchg
push
push
jno
cltd
aam
and
pop
mov
sub
outsl
cmp
in
repz
nop
jae
inc
stos
sahf
mov
dec
in
andb
and
xchg
test
lea
adc
and
jne
mov
fsubs
and
pop
fs
out
jge
lods
ljmp
test
cmp
sar
jmp
pop
filds
mov
in
cmp
ds
sub
pop
addr16
jno
fwait
aam
das
adc
lock
movsb
shrl
clc
push
cmp
cmpsl
or
pop
int
test
lret
mov
mov
mov
or
pop
mov
scas
cmp
andb
outsl
and
xchg
out
jb
dec
xor
pop
int
icebp
ja
popf
popl
pop
fstp
out
sub
movsl
dec
in
pop
mov
fnstenv
testb
mov
cmpsb
in
sub
sarb
cmp
cmp
xchg
jnp
faddl
xchg
xchg
shll
cli
imul
fimuls
or
xchg
mov
push
pop
sbb
dec
sub
or
mov
push
rclb
movsl
scas
mov
inc
mov
data16
shlb
arpl
sarl
pop
imul
pop
mov
test
cmpsl
js
inc
and
push
cmp
in
arpl
in
inc
pop
jmp
int
cmpl
enter
xchg
mov
xchg
push
lds
mov
stc
mov
and
jmp
xor
lods
adc
psllq
mov
xchg
cmc
das
pop
sub
arpl
cmp
push
rorb
test
mov
and
mov
loope
cmpsl
data16
rcrl
pop
testl
incl
mov
fldl
pushf
xchg
dec
shlb
pop
and
xor
push
jle
fbld
lret
arpl
xchg
adc
arpl
mov
jae
aas
icebp
jo
bound
jae
negb
adc
adc
lods
pop
ficomps
iret
outsb
push
xchg
int3
aaa
push
lret
iretw
xchg
shll
ret
nop
mov
pusha
push
xor
mov
cmp
pop
xchg
lock
sub
jp
lret
lea
sub
cmp
dec
xchg
sbbl
sub
xor
out
pop
rorl
outsb
dec
or
cwtl
call
xlat
sbb
mov
das
fcoml
sbb
ljmp
dec
pop
push
icebp
or
mov
cmc
int
pusha
out
xchg
je
cmp
aaa
and
ret
rcr
jb
and
dec
adc
sbbb
loope
sub
addl
fstps
or
fildl
cmp
outsl
mov
dec
out
stc
mov
adc
sbb
xorb
enter
popf
jl
pop
adc
mov
mov
and
test
mov
sbb
fistpl
gs
jle
push
mov
ja
imulb
lods
movsb
nop
movsl
out
jnp
mov
pop
xchg
xchg
dec
enter
mov
xor
sub
cmp
dec
jecxz
outsl
mov
imul
push
inc
add
and
std
jmp
xchg
add
enter
js
into
fisttpl
add
dec
lahf
and
mull
cld
dec
nop
cwtl
inc
sub
pop
stos
imul
test
mov
lret
aas
enter
stos
cmp
mov
inc
inc
ss
pop
or
testb
pop
pop
lods
push
cwtl
rorb
inc
shll
xorb
xchg
or
popa
nop
pushf
leave
lods
xor
or
cld
sub
lea
push
addr16
mov
xchg
xchg
dec
popf
pusha
aas
cmp
xorb
pop
cmp
adc
mov
mov
loop
in
jmp
sbb
xlat
loopne
jmp
lods
hlt
aam
scas
cwtl
add
inc
inc
ret
lds
jno
xor
lcall
ja
cs
mov
push
pop
mov
dec
shrb
repnz
das
repz
xchg
shlb
push
fisttps
pop
inc
pop
xchg
ja
fcoml
ret
or
outsl
and
push
hlt
pusha
shll
lcall
and
roll
push
insb
pop
scas
pop
ss
lcall
popa
jno
mov
test
gs
test
pop
sahf
adc
mov
into
xchg
fadds
ret
imul
icebp
xchg
mov
sub
lods
xchg
cmpsl
dec
jbe
out
aam
call
dec
out
je
mov
pushf
in
mov
jne
sbb
mov
jle
sub
xchg
test
in
xor
mov
xlat
dec
mov
pop
adc
mov
sbb
mov
xchg
imul
pop
shrb
or
out
scas
cmc
pop
push
out
fists
test
push
dec
cli
and
lock
cmp
mov
add
dec
xor
outsl
dec
test
push
std
mov
push
jmp
std
out
mov
in
je
inc
xchg
nop
xchg
xchg
pop
mov
popf
cmp
insl
push
shl
lock
cld
movsb
and
outsl
daa
cmp
jbe
iret
popa
mov
push
xchg
lods
adc
jnp
mov
scas
mov
stos
dec
xor
or
and
jo
dec
ret
inc
mov
jl
leave
push
pushf
stos
addr16
xchg
push
popa
xlat
push
jo
mov
mov
movb
sbb
and
mov
jno
mov
sbb
jmp
jnp
ror
pop
int3
ds
pop
sahf
daa
inc
in
cs
ror
fisubrs
loope
loope
sub
aad
inc
cmc
mov
sub
aas
lcall
lock
ret
shl
popa
stos
clc
cmp
mov
xchg
push
in
mov
jb
int3
pop
rclb
dec
daa
adc
fnstenv
xlat
fwait
aad
fst
and
mov
icebp
aad
or
jle
inc
cmp
data16
data16
je
mov
sub
fsubrl
cli
adc
lock
push
jb
xorl
call
add
add
sub
xchg
or
push
fwait
and
rcrl
popf
xor
and
dec
xchg
cmpsb
inc
es
shl
addr16
test
cmpb
enter
data16
push
test
test
pushl
loopne
pop
movsb
add
mov
cmp
sbb
jns
sub
inc
push
or
and
adc
fbld
roll
das
mov
into
xchg
jmp
fmuls
and
std
loopne
mov
pusha
rolb
mov
rorl
daa
cmp
dec
xlat
cmp
enter
aam
cmp
dec
in
dec
adc
mov
aas
data16
jg
jmp
je
sbbl
out
and
fiaddl
and
inc
sub
lret
pop
add
push
decl
lods
stos
ds
test
and
aas
and
mov
mov
push
cs
jne
inc
xor
adc
jbe
out
sub
pop
lahf
sub
or
and
inc
adc
dec
xor
mov
mov
mov
je
push
stc
adc
mov
loop
ljmp
or
dec
in
dec
aaa
xor
mov
adc
jb
xorl
push
push
lea
adc
repz
cli
mov
stos
and
testb
ja
adc
scas
addl
push
in
mov
data16
call
mov
mov
ss
mov
cmc
push
sar
jle
imul
sub
orl
push
xor
sbb
jmp
in
scas
arpl
pop
adc
xchg
ljmp
xor
mov
sbb
cmp
daa
jle
pop
pop
inc
add
mov
fistps
test
adc
std
or
cmpsb
fnstcw
xor
push
lahf
adc
dec
imul
jp
test
xchg
cld
aas
add
mov
mov
pop
ret
ds
movsb
xor
jmp
mov
sub
push
mov
mov
push
jle
xchg
sti
push
or
xchg
push
mov
mov
pop
dec
xchg
lcall
jmp
aas
add
rcl
test
ljmp
dec
jge
faddl
and
inc
adc
add
test
jb
bound
shl
inc
mov
add
pop
sub
test
cmp
xchg
lea
iret
lret
push
sub
or
pop
std
iret
pusha
inc
ljmp
jns
dec
push
dec
cmp
subb
hlt
int3
sub
jmp
mov
add
push
sahf
and
mov
fstpl
xor
int
sub
daa
je
repz
ss
and
enter
jb
lock
loop
imul
jae
pop
fldt
mov
ja
push
xchg
jmp
jg
es
ljmp
scas
aaa
inc
adc
stc
loope
or
fnstenv
inc
jle
shrb
insl
sahf
add
data16
mov
sbb
data16
filds
adc
aaa
adc
jecxz
test
lcall
mov
iret
sbb
sub
loop
out
mov
repnz
lds
jg
sub
push
es
sahf
pop
insl
adc
mov
loope
movsb
inc
inc
lock
adc
pop
pop
push
cmp
jne
in
and
mov
mov
jae
add
jge
test
mov
das
pop
cli
movsl
ljmp
es
fwait
lcall
outsb
and
cmc
ss
add
and
mov
loopne
jle
sbbb
push
gs
mov
jg
mov
enter
xor
mov
pop
shl
rolb
xor
inc
popf
xor
jno
repnz
fistpl
mov
mov
sub
cwtl
addw
insb
in
inc
loope
pop
inc
push
mov
or
inc
jae
xchg
sbb
imul
push
addr16
push
sti
sbb
ja
bound
mov
aaa
adc
push
cwtl
and
push
leave
roll
repz
ja
lea
pop
imul
das
jbe
sarl
xor
pop
sbb
fiadds
cmp
jge
rolb
jno,pn
mov
repz
and
push
lahf
mov
test
movsl
xor
pop
lea
cltd
jp,pn
mov
jnp
ds
leave
aas
push
mov
imul
pop
out
cmp
pop
jle
and
xor
jmp
jl
fildl
mov
pushf
mov
mov
lock
call
adc
test
testb
int3
ja
push
sbb
jmp
jle
xchg
outsl
addr16
push
xor
dec
les
insl
hlt
hlt
scas
cmc
mov
mov
cli
loope
in
xlat
pop
pusha
add
je
sub
loopne
adc
mov
pop
jne
cmp
adc
xor
inc
and
scas
andl
sbb
sbb
dec
int
fnsave
adc
push
inc
repz
pop
and
and
xor
sub
xchg
dec
clc
data16
dec
test
int
and
dec
sub
sar
cs
ljmp
enter
xor
dec
and
mov
xchg
dec
pop
fwait
out
stos
iret
subb
sbb
cmp
lods
stos
or
adc
sahf
mov
popa
out
aam
js
inc
pop
mov
push
test
rcrb
jge
fdivs
insl
xor
xchg
xor
xlat
sbb
push
xchg
mov
ret
daa
adc
es
popa
roll
pop
hlt
in
mov
and
sub
scas
jns
aam
mov
aam
pop
jo
lea
dec
sbb
movhps
xor
insb
adc
jge
mov
inc
jne
jns
inc
arpl
dec
movsl
movsb
fsubl
jne
dec
mov
pop
xchg
pop
push
mov
sbb
je
dec
sarl
sbb
jo
inc
push
add
scas
pop
sti
xor
sub
sti
lgs
cld
cwtl
jge
divl
jae
adc
sahf
and
xor
cmp
mov
push
scas
in
rorl
pusha
loop
stos
call
jne
test
fdivs
mov
stos
lcall
or
cmp
inc
es
mov
aaa
xchg
hlt
test
arpl
imul
lret
sub
icebp
push
pushf
out
push
ss
js
inc
repz
mov
lahf
xchg
rcll
xor
scas
xor
pop
fdecstp
xchg
pop
lds
ret
cmp
popf
mov
mov
and
adc
push
pop
mov
mov
xchg
mov
push
jecxz
jg
into
jne
lret
movsl
push
ret
rcrl
in
or
insb
push
outsl
int
movsl
mov
sti
fnstcw
cmp
inc
hlt
and
aam
or
pop
notl
add
mov
idivl
add
aam
and
xorb
jnp
mov
leave
adcb
mov
xchg
inc
cld
cmp
ja
push
rcrl
lods
jae
fsubl
cmp
orl
idivl
out
lahf
mov
popa
xlat
addr16
jg
xor
scas
mov
sbb
js
mov
or
sbb
xchg
inc
cltd
stc
test
cmc
lahf
jge
xchg
or
and
fs
mov
inc
leave
inc
xchg
add
jcxz
fistpl
adc
sarb
std
jbe
adc
lret
mov
incb
lret
pusha
sub
scas
push
scas
decb
mov
mov
jecxz
dec
adc
push
fidivrl
push
xor
outsl
mov
xor
sbb
pop
or
dec
js
jmp
insl
adc
aaa
inc
push
insl
mov
mov
in
iret
mov
stos
test
mov
sarb
addb
leave
das
xchg
fs
out
add
fdivrs
cmpsl
in
daa
sub
add
mov
cltd
loop
test
jns
out
cmpsl
push
or
xchg
sbb
imul
popa
and
adc
fidivrs
xor
push
repnz
sarl
test
lods
push
xchg
or
icebp
dec
or
xchg
rcrb
xor
mov
ja
xchg
adc
mov
xchg
notb
cmp
arpl
xor
mov
pop
sub
rorb
cmp
jle
mov
jno
xor
pop
imul
aaa
inc
cmp
popf
loop
dec
ret
int3
xchg
imul
lret
pop
sub
stos
pop
sbb
iret
mov
icebp
or
mov
sbb
sysexit
mov
cmpsl
push
inc
stos
outsl
mov
sahf
aas
pop
aad
jb
cmpsl
ljmp
or
pop
lods
data16
and
pop
xchg
sbb
inc
pop
cltd
push
push
xlat
pop
xchg
in
lods
insb
jnp
adc
mov
mov
sbb
mov
mov
test
ret
out
ss
adc
inc
inc
mov
mov
dec
test
pop
imul
adc
into
roll
xor
aaa
and
mov
jns
roll
pop
jge
lahf
mov
jmp
cmc
mov
adcb
pop
into
sbb
adc
test
dec
sub
or
jle
jbe
ss
rcrl
daa
rorb
test
push
dec
jnp
je
dec
adc
iret
lcall
push
negb
push
add
and
lods
cmp
call
leave
sahf
std
aad
leave
inc
test
jo
mov
lds
pop
lret
cmpsb
pop
push
scas
arpl
inc
loope
fwait
je
enter
or
arpl
inc
les
dec
inc
dec
jns
xlat
movsl
dec
popa
and
cld
jb
xchg
xchg
or
mov
pop
pop
pop
ds
lods
push
std
pop
ret
push
ret
inc
and
dec
mov
out
idivl
icebp
or
cltd
popf
notb
xchg
enter
mov
ret
loop
fdivs
data16
repnz
fisttpll
xor
cmpsl
cltd
andb
adcl
iret
loop
or
mov
mov
das
in
xchg
shrb
rcr
out
mov
mov
sub
ds
sub
in
or
inc
cmp
call
data16
scas
aaa
adc
jecxz
cmp
inc
mov
inc
mov
mov
outsl
cmpsb
loop
lcall
mov
xchg
ljmp
ret
lahf
sqrtps
imul
imul
ss
or
xorl
lods
lock
ficomps
inc
jmp
cmpsb
add
xchg
pop
pop
out
push
insl
je
mov
mov
aas
call
sub
jmp
fnstsw
adc
sub
pop
sbbb
pop
loopne
jecxz
xchg
shrb
jl
scas
ret
mov
loopne
pop
lret
push
pop
adc
mov
push
aaa
hlt
pop
and
call
test
adcb
mov
push
pop
dec
sarb
xchg
mov
mov
les
test
dec
movl
sub
pop
xchg
jle
pop
insl
shr
lea
pop
jp
aaa
leave
xor
or
push
mov
cmp
ret
ret
pop
cld
aad
ret
add
push
jge
xchg
ret
mov
ds
inc
jae
jnp
cmp
sahf
clc
daa
sahf
imul
das
out
push
shll
lea
jmp
jp
je
adc
xor
xor
fcomps
add
add
jle
xor
nop
push
pop
out
sub
fildll
aaa
sbb
fidivrl
push
dec
lock
jmp
cmp
fcom
aad
cwtl
push
dec
fcmovnb
pop
xchg
cmp
insb
shlb
jae
jbe
cmc
icebp
lret
out
inc
sbb
mov
mov
sub
inc
movsb
cli
movsb
insb
stos
pop
inc
xor
or
loopne
xchg
jae
je
or
lcall
cs
les
push
int
mov
xchg
negb
inc
ja
cmp
mov
xchg
test
dec
inc
xchg
fidivrl
mov
dec
orl
test
pop
sub
insb
int3
or
fiadds
test
data16
mov
or
xchg
mov
test
jmp
xor
test
xchg
inc
mov
pop
lods
xchg
in
out
bound
pop
sub
std
enter
dec
int3
xor
pop
mov
popf
jb
orl
pushf
imul
jnp
push
xchg
ret
mov
dec
pop
cmp
daa
pop
or
imul
add
push
adcb
lcall
in
pop
jae
ljmp
pop
push
sbb
pop
sbb
jno
push
cwtl
mov
mov
xor
xor
lahf
addb
pop
adc
pop
ret
sbb
inc
stos
lea
outsl
arpl
sub
inc
xchg
or
cmpsl
push
pop
mov
sbb
data16
cmp
andl
sbb
andl
sub
inc
push
xchg
mov
adc
inc
addr16
ja
int3
ret
sbb
out
or
adc
fisubl
and
dec
and
mov
add
xor
mov
scas
or
cmpsb
in
lret
insb
pop
imul
add
andl
pop
adc
mov
inc
mov
adc
leave
sub
es
cmp
or
lcall
nop
mov
mov
out
add
sub
in
jns
dec
dec
adc
pop
adc
es
mov
incb
jne
pop
cmpsl
sahf
or
hlt
dec
push
daa
dec
in
aad
push
mov
pop
push
sub
lds
jnp
out
clc
ror
cld
cld
popf
dec
scas
pop
fstl
cltd
loop
out
xchg
mov
rcll
neg
lea
subl
ja
adc
fsts
fdivs
add
inc
aas
push
xor
xchg
aaa
cwtl
sub
int3
add
sbb
jle
sub
xchg
test
xchg
xor
and
divl
xchg
and
push
shl
dec
sub
nop
jnp
xchg
xchg
int
or
inc
lds
leave
push
repz
pop
add
xor
dec
sbbl
adc
std
adc
je
testl
dec
insl
shlb
cmp
push
lret
push
push
in
into
lret
inc
inc
lcall
add
scas
push
pop
pop
add
popaw
xchg
loop
loop
mov
push
mov
orb
shrb
hlt
push
jns
and
int3
mov
repz
and
je
fistpll
mov
cmp
xor
data16
xchg
int3
fsubrs
push
movsl
jge
adc
stos
sub
sahf
cmc
sbbl
daa
mov
add
jb
pop
lds
pop
loopne
or
insb
mov
push
xchg
cmp
outsb
int3
bound
stos
dec
push
mov
mov
int3
pusha
out
xor
mov
xor
fldt
mov
in
sub
mov
and
les
jae
cmovo
outsl
mov
jp
int
int
jnp
add
out
pop
ffree
std
push
push
adc
sbb
sub
or
and
loope
call
mov
scas
inc
sub
imul
adc
sub
cs
mov
jbe
add
test
lcall
jmp
jne
pop
jne
xchg
lret
sbb
nop
je
sub
repnz
xchg
lahf
cwtl
or
mov
cmp
ret
cmp
ja
mov
fs
mov
mov
clc
test
or
shr
cli
sahf
fdiv
push
test
nop
pop
outsl
rcrl
add
cmp
mov
mov
leave
int3
cltd
arpl
fwait
jae
xchg
and
pushf
int
mov
jae
and
lea
cmp
das
fwait
in
xadd
or
jle
add
mov
fdiv
cmc
fdivl
xchg
cli
push
das
jns
inc
lret
in
or
push
sbb
jmp
jmp
add
dec
in
loopne
fld
mov
mov
adc
sub
pop
jno
popf
test
adc
xor
fstps
mov
and
aas
cmp
incl
mov
mov
jg
lock
cwtl
pop
or
nop
xchg
mov
jp
add
push
in
cmp
pop
mov
inc
gs
loopne,pt
mov
sbb
fs
dec
jle
ss
adc
push
inc
out
repz
cmp
cwtl
sbb
pop
inc
mov
out
lock
outsb
data16
and
test
decl
fwait
cmpsl
jecxz
addr16
cli
andb
mov
jg,pn
push
adc
push
and
call
mov
shl
mov
outsl
lea
jbe
nop
sbb
add
shll
sub
mov
hlt
dec
dec
out
repnz
lret
test
push
imul
add
insb
stos
jne
jne
jge
out
fistpll
dec
jp
int3
call
hlt
jmp
bound
and
pop
mov
push
xchg
dec
jo
stc
push
push
mov
stc
insb
js
xor
mov
fisubrs
mov
inc
imul
inc
pushf
push
movsl
add
adc
add
mov
cmp
leavew
fsubrp
in
and
and
ret
pop
cmpsb
lahf
sbb
xchg
jle,pt
dec
lods
mov
mov
mov
mov
arpl
and
adc
mov
sub
js
adc
sbb
and
jmp
cmpsb
fldl
lahf
mov
out
sbb
movsb
xchg
mov
add
adc
push
js
cmc
pop
shll
aas
dec
pop
adc
mov
ljmp
mov
xlat
repz
test
shll
push
xor
ljmp
pop
test
push
test
jmp
sub
sti
xchg
jno
pop
and
mov
add
es
es
sbb
sbb
inc
sub
lock
pop
fs
add
xor
outsl
bound
jge
mov
inc
leave
cli
mov
inc
in
jnp
jmp
int3
adc
mov
in
jo
pop
adc
out
jnp
push
popf
test
push
addr16
mov
push
jecxz
rol
test
loopne
pop
jno
sub
pushf
sahf
mov
into
repz
cmpsl
xlat
xor
push
jbe
std
xchg
jns
and
popa
mov
adc
scas
out
scas
xchg
xchg
es
jecxz,pn
mov
data16
cmc
jbe
cmp
lret
xor
les
push
cmp
xchg
add
fisttps
jmp
or
daa
push
stos
add
loop
lcall
or
fcompl
jl
mov
daa
dec
pop
mov
scas
inc
adc
lds
mov
mov
fstps
pop
adc
cmp
pop
mov
sbbb
mov
les
or
xchg
mov
mov
clc
iret
mov
roll
xchg
pop
cmp
cmp
cmp
scas
push
mov
and
sbb
arpl
pop
movsl
fstps
push
incb
and
into
in
cmp
xchg
push
lds
out
adc
and
daa
lcall
sti
popf
int3
dec
mov
dec
sub
out
inc
xlat
and
imul
scas
push
pop
aam
push
testl
adc
neg
jb
das
stos
mov
xor
stos
and
add
push
or
xor
xor
xorl
mov
push
in
inc
test
mov
movsb
shlb
lods
jb
push
mov
hlt
push
loopne
mov
popf
sbb
adc
in
mov
int
insl
dec
fiaddl
cmpb
mov
push
iret
sub
in
fwait
dec
xchg
and
xor
subl
xchg
pop
mov
pop
add
dec
insb
loope
or
pop
ret
xchg
ret
push
jno
mov
sti
cmpsl
push
mov
popa
push
call
pop
lcall
nop
dec
mov
out
lock
push
lea
dec
mov
adc
add
rclb
and
mov
in
add
pop
jb
mov
loope
ror
lret
int3
xchg
jp
les
stos
leave
lret
out
mov
lock
lds
roll
clc
cld
and
in
or
cmp
sbb
push
mov
mov
lods
cmp
pop
sbb
mov
in
jns
push
or
ret
lret
aas
test
xchg
jmp
icebp
mov
fldl
in
push
aad
bound
mov
ds
imul
add
mov
and
out
push
xor
lods
ja
das
and
mov
inc
fsub
mov
nop
lds
mov
push
fisubs
mov
and
mov
sahf
cmp
stos
in
cld
cmpsl
pusha
enter
mov
test
fisubs
adc
outsb
rolb
sbb
loope
sbb
sarb
inc
jmp
fwait
sarl
inc
sub
cmpsb
lock
testb
pop
sbb
dec
es
and
data16
jle
std
jne
jmp
cltd
addb
notl
divl
movsb
add
out
cmp
mov
mov
xchg
sbb
test
movsb
repnz
or
xchg
movsb
push
iret
aaa
arpl
jmp
add
aad
inc
into
sub
addb
add
mov
and
inc
das
or
mov
test
arpl
and
cmp
repnz
outsl
sub
add
xchg
out
cmp
mov
fdivrl
pop
fdivrs
sub
into
shll
adc
arpl
aaa
pop
jne
push
jo
pop
in
mov
xor
add
mov
je
push
xlat
and
lret
add
jmp
mov
in
and
shufps
jg
adc
popf
mov
imul
lret
lea
scas
mov
and
or
in
inc
xor
aad
mov
push
pop
dec
cli
add
xor
jmp
mov
loop
cwtl
adc
repnz
insb
sbb
out
cmpsl
fwait
xor
loope
dec
cmp
cmc
outsl
mov
mov
push
jne
lcall
jle
negb
movsb
inc
cld
jg
cmp
cmpsb
lods
mov
fiadds
mov
jmp
je
or
or
inc
into
cmc
mov
aaa
push
push
movsl
push
mov
pusha
adc
rol
sub
xchg
mov
mov
push
in
xchg
jns
cmp
pop
test
xor
out
lea
in
or
mov
add
xchg
ljmp
dec
and
lods
lods
mov
hlt
pop
inc
test
mov
push
sidtl
add
enter
aas
xchg
loopne
iret
aaa
fs
stos
mov
fcomps
sti
hlt
inc
shl
int
movsl
insl
sbb
fcomps
jle
pop
lods
add
jecxz
int3
into
jge
loopne
in
fucomip
sub
fcomi
xor
or
ror
out
xor
cmp
xchg
popa
and
in
call
sbb
insb
shrb
lret
insl
in
in
out
mov
enter
pop
sub
enter
mov
cli
insl
fldt
aas
ret
sti
dec
loopne
stc
shrl
nop
ret
inc
fs
mov
add
adc
rcrl
shrl
mov
xlat
adc
pop
test
in
sub
cmp
cmpsb
ja
fidivs
or
xlat
mov
jecxz
cmp
mov
cwtl
push
jl
lods
sbbb
push
fwait
mov
jnp
sub
add
ss
dec
cmp
push
adc
dec
into
xor
lret
negl
lcall
test
xor
jg
bound
mov
dec
cmp
cmc
jno
mov
mov
frstor
js
push
lret
icebp
cmpl
loop
mov
jns
and
sbb
add
cmp
mov
mov
mov
adc
ds
mov
iret
xor
pop
or
push
dec
push
arpl
dec
mov
test
mov
mov
push
sbb
cmp
xchg
or
sub
mov
mov
pop
lret
ja
mov
test
jne
testl
xchg
push
fcoml
data16
and
cltd
mov
call
mov
fsubr
xchg
scas
aas
out
scas
mov
mov
sub
fisttpll
xchg
mov
js
push
jne
mov
jmp
fsubs
add
mov
fimull
rcrl
mov
out
popa
lcall
jno
ret
and
or
imul
add
addr16
and
mov
lea
inc
or
jp
pushf
cli
xchg
push
lret
imul
js
daa
xchg
cmp
push
iret
xchg
sbb
mov
cmc
lds
push
push
push
jo
xchg
insb
sub
jle
lcall
cmp
mov
cmp
pushf
les
repnz
cmp
test
pop
jne
inc
push
xor
and
pop
jnp
cmp
pop
jge
stc
popf
neg
ljmp
jge
int
ds
ja
imull
mov
in
out
fistpl
jae
jl
repz
inc
lods
pop
rclb
sahf
mov
test
or
add
call
inc
or
push
daa
push
mov
xchg
cmpsl
fwait
dec
jns
adc
xor
dec
call
mov
cli
or
mov
stc
movsb
jbe
ret
mov
stc
xchg
fdivl
push
cli
xor
testb
shll
xor
and
jecxz
mov
xchg
xorl
std
loopne
push
add
xchg
xchg
sahf
in
jg
mov
cmp
fildl
jo
mov
jle
rcrl
enter
out
cmp
rorl
mov
adc
xor
push
inc
jns,pt
stos
cmpsb
cmpsl
sbb
int
das
add
in
dec
cmp
adc
jle
cmc
add
xlat
lea
iret
stc
addb
pusha
pop
out
cmp
xor
add
clc
dec
mov
mov
sbb
stos
push
dec
adc
ja
dec
xchg
and
sub
loop
in
pop
and
pushf
sub
pop
stos
ja
add
mov
imul
add
push
insb
repz
sub
sub
lahf
and
ror
cmpsl
mov
mov
jl
int3
leave
sarb
cmc
test
in
lods
mov
inc
lret
push
jo
adc
mov
xchg
aam
mov
aad
test
add
and
ja
dec
dec
sub
lock
fisttpl
adc
js
push
sahf
fwait
insl
xor
fsts
inc
out
mov
cmp
sti
fisubl
sbb
idivl
cli
into
sub
jp
xchg
mov
or
out
xor
mov
lret
push
lret
js
pop
lcall
push
pushf
sbb
jno
fldcw
cmp
inc
out
imul
sbb
pusha
push
ljmp
jl
cli
mov
push
nop
in
cltd
sub
cli
cmc
pop
xchg
push
ja
lock
sahf
lret
es
xchg
cltd
lods
or
cmp
lock
pushf
dec
pop
iret
pop
das
jp
icebp
icebp
push
cmp
mov
and
cmpsl
add
repz
mov
stos
adc
js
xchg
out
mov
or
jnp
add
jp,pt
fidivrs
hlt
jae
cmp
mov
sbb
aaa
subl
lock
imull
setge
mov
mov
ret
loop
jae
fs
pop
idivb
jnp
sbb
xchg
je
mov
sub
pop
xchg
mov
clc
icebp
sub
jo
ja
sub
popf
sbb
inc
xor
jge
jns
sub
fisttpll
cwtl
sbb
mov
imul
dec
pop
sbb
mov
cli
and
mov
fistl
aaa
fisubrs
fwait
adc
xlat
adc
push
or
mov
mov
inc
hlt
adc
xchg
out
cs
or
mov
jp
push
pop
dec
andl
xchg
xchg
int3
das
stos
jne
arpl
orl
or
xlat
int3
pop
call
adc
adc
sub
inc
pop
repz
fst
adc
sbb
aaa
cmpsl
xrelease
movsl
sarl
add
mov
cmpsl
sbb
xchg
mov
xchg
jo
mov
jg
sbb
das
xorl
mov
pop
mov
jb
jbe,pn
pop
adc
or
jo
push
in
daa
pop
call
cmp
sbb
jle
dec
andb
push
shll
in
pop
or
mov
into
out
mov
jne
push
mov
xorb
mov
dec
repnz
clc
icebp
sahf
fildll
mov
pushf
test
repz
ss
mov
lock
push
call
mov
iret
mov
mov
stos
dec
hlt
shl
cs
lcall
pushf
inc
sarb
jle
ret
sbb
push
sub
mov
sbb
jb
cmc
push
aas
repz
sbb
inc
lds
ficompl
imul
out
and
stos
fidivrs
xchg
mov
fbld
sahf
mov
fmul
jnp
cmp
sub
mov
imul
inc
xchg
mov
add
insb
sbb
aaa
pop
push
xor
jmp
mov
inc
fwait
mov
xchg
adc
mov
mov
dec
dec
or
jmp
dec
out
push
cmp
and
outsl
fidivrl
cwtl
stc
mov
pop
test
in
push
movsl
xchg
mov
test
inc
aas
mov
push
fldl
cwtl
ret
frstor
fldpi
jmp
ret
lret
out
xchg
inc
outsb
lds
push
mov
lods
cs
lahf
lcall
sbb
adc
pop
dec
pop
and
pop
mov
xor
inc
mov
cmp
or
dec
lret
and
dec
nop
test
push
nop
sub
leave
ljmp
inc
ret
cli
and
stos
cmpsl
lret
or
cmc
testl
aam
fldt
pop
jnp
sub
stos
in
rcrb
inc
outsb
pop
leave
fs
add
add
not
inc
xchg
adc
lcall
clc
sbb
lock
ficoml
mov
iret
pop
icebp
mov
push
dec
or
imul
jp
sbb
or
add
in
sub
dec
cmp
iret
stc
popf
jo
pushf
push
adc
repz
inc
jae
sbb
test
imul
jl
dec
mov
xchg
sub
and
xchg
inc
cmp
mov
shr
jp
cwtl
mov
add
jne
push
aaa
nop
jmp
test
test
add
inc
movsl
mov
psubsw
ror
mov
xchg
imul
cmp
cmp
dec
stos
es
cld
adc
arpl
rolb
stos
sub
aas
mov
sbb
mov
das
outsl
cmpsb
stos
mov
inc
jmp
xchg
sub
inc
mov
inc
sahf
inc
inc
imul
popa
mov
pop
mov
sbb
or
adc
push
out
dec
dec
jecxz
pop
xchg
push
dec
fs
lods
xchg
mov
xor
xchg
mulb
scas
dec
cmp
push
ds
mov
loop
pop
addb
lock
or
and
mov
repz
js
popa
shrb
insb
subl
clc
stos
lock
cs
xor
cs
inc
cmpsb
fwait
movsb
mov
mov
out
jb
jmp
dec
rcrb
pop
xchg
add
in
push
dec
mov
xchg
mov
dec
lods
sbb
fcmovnu
inc
dec
pop
mov
jae
dec
sti
push
stos
packuswb
aas
pop
loop
outsl
cmp
push
push
cmpsl
imul
jns
adc
dec
xchg
pop
cmp
ret
icebp
sbb
rorb
in
pop
lods
and
xor
jmp
inc
push
rcr
idivb
inc
add
cmp
ljmp
sbb
lret
fs
cmpsb
rclb
adc
call
mov
test
ret
fdivrs
and
xchg
adc
call
lcall
in
xchg
jl
popa
rclb
cmp
jle
cmp
cmp
sub
or
fisubs
outsb
inc
sahf
inc
jae
cld
xorb
cmp
mov
mov
cmpl
sbb
leave
aaa
cs
mov
nop
sahf
lds
test
mov
cmc
sub
xor
jae
in
mov
xchg
mov
in
push
das
pop
pop
xor
notl
push
mov
fistl
ds
movsl
sahf
cld
stos
mov
push
mov
popf
inc
cwtl
bound
mov
shrb
cld
push
movsb
fcoml
and
xchg
shll
jbe
rcrb
mov
mov
in
xchg
inc
cmc
push
inc
cmp
ret
inc
pop
sbb
xor
divb
hlt
sub
jl
inc
xchg
sbb
cmp
sar
and
cld
pop
add
sahf
sub
inc
mov
jle
test
sbb
and
scas
std
jl
push
aas
and
cmpsb
mov
dec
mov
mov
insb
repnz
push
pop
xchg
nop
stos
or
scas
ss
cmpsl
test
xor
in
xchg
fs
js
sbb
insb
test
dec
les
sbb
lock
sahf
movsb
pop
rcrl
push
xchg
outsb
enter
dec
xchg
out
xchg
mov
dec
mov
jae
sub
je
inc
or
cmp
jp
out
arpl
pop
out
ljmp
sahf
xorl
hlt
mov
push
inc
cmpsl
cmp
cmc
fsubl
or
pusha
repz
inc
ror
test
fwait
push
mov
xchg
ljmp
fs
adc
popa
push
cld
pusha
mov
sub
mov
push
movsb
push
pop
pushf
jnp
orl
fsubrp
repz
sub
rclb
jb
cmp
mov
scas
xchg
pop
inc
hlt
push
outsl
aad
push
cmpsb
mov
iret
repnz
jae
pop
scas
loop
or
jns
cs
sbb
int3
bound
mov
scas
ja
mov
xor
cld
out
push
xchg
ss
mov
rcrb
lock
jns
mov
mov
rcrl
pop
add
cmp
es
bnd
mov
stc
cltd
sti
lcall
flds
jae
fs
mov
insb
aad
adc
mov
out
cld
fs
mov
adc
insb
pop
cmc
sub
dec
pusha
mov
push
push
pop
adc
push
in
or
roll
cmp
jmp
lret
push
and
push
xchg
lret
add
mov
mov
inc
adc
push
adc
adc
scas
push
push
push
xor
popf
sbb
dec
lock
cmpsb
fwait
cs
pop
add
adc
mov
lahf
xorl
adc
popf
mov
fstps
mov
add
xlat
fbstp
lcall
bound
popa
push
mov
xor
pop
test
pusha
pop
mov
push
mov
sbb
jne
mov
notb
out
pushf
hlt
xor
xor
iret
mov
xchg
ljmp
xchg
mov
push
out
pop
sbbl
icebp
lret
rol
add
call
push
rcr
adc
insb
leave
sbb
lock
mov
sbb
ficoms
push
pop
ss
loopne
mov
insb
mov
cld
push
pusha
cltd
ret
xchg
cmp
faddl
outsb
push
xchg
inc
aam
sbb
nop
pop
adc
pop
cmpsb
xchg
bound
mov
mov
in
mov
stos
insl
jecxz
bound
mov
dec
out
in
mov
cmc
dec
mov
xchg
out
rcrl
xchg
mov
dec
sub
loop
dec
lea
psubsb
push
outsb
xor
mov
xor
scas
mov
imul
stos
jge
gs
push
cmp
fadd
test
xchg
cltd
ja
rclb
in
test
sar
add
inc
inc
ljmp
jmp
xchg
add
loopne
mov
out
leave
mov
cvtps2pi
xor
nop
add
inc
cs
adc
mov
jae
xchg
inc
add
sbb
ljmp
push
mov
xchg
cmp
jns
push
ss
lock
in
pop
push
cmpl
fcoml
inc
daa
adc
ret
jmp
in
mov
ja
add
xlat
inc
je
pop
adc
hlt
in
aam
pop
add
outsb
cmp
inc
cmp
mov
repnz
daa
lods
sub
push
imul
lods
inc
xchg
fsubs
jae
cltd
ds
xor
je
inc
xor
pop
xlat
shrl
xlat
ja
add
mov
lods
adc
cld
mov
push
add
icebp
sbb
aad
pop
mov
pop
jmp
mov
test
test
jmp
push
aas
popa
push
mov
int
pop
mov
lea
dec
mov
sbbl
add
jnp
xchg
fnsave
ja
and
push
popa
lock
int3
orl
mov
jnp
adc
push
xor
and
push
movb
push
mov
dec
aas
roll
in
cld
dec
mov
jp
es
mov
and
test
mov
add
xchg
dec
pop
xor
adc
add
sbb
and
lods
mov
ljmp
rolb
mov
pop
test
jge
pop
push
push
rcrl
mov
lcall
mov
push
add
adc
pushf
enter
inc
adc
sub
inc
pushf
mov
fldt
iret
xchg
jmp
push
repnz
sbb
inc
lahf
test
aad
pop
sbb
adc
jmp
movsb
mov
cwtl
dec
lcall
add
in
pusha
pop
lret
sbb
popa
push
mov
mov
jg
in
cmpl
pop
inc
mov
jge
subl
adc
sbb
add
popa
mulb
or
mov
imul
mov
out
out
out
and
or
add
sub
or
push
data16
add
les
jmp
xor
cmpsb
sbb
pop
dec
fisubrl
nop
dec
aaa
mov
mov
cmc
jge
jne
jg
jle
jle
mov
mov
add
dec
inc
mov
push
rorb
sbb
adc
and
int3
jnp
xchg
sub
inc
add
mov
leave
shr
cmc
jbe
sub
in
test
cmp
pop
nop
stc
sub
loopne
lret
xchg
dec
inc
xchg
stos
imul
jge
jnp
mov
cmpl
jnp
mov
push
adc
dec
pop
inc
movsb
int3
in
mov
add
in
push
mov
push
daa
jno
adcb
xchg
dec
sbb
fidivrl
sbb
xchg
dec
icebp
jo
je
mov
iret
stc
lret
jmp
in
and
lret
aam
mov
mov
das
imull
inc
repz
fcmovnu
dec
inc
mov
stc
pop
ficoms
adc
out
cmpsb
pop
dec
xchg
cwtl
pop
leave
xor
shrb
or
jae
dec
inc
jl
add
arpl
pop
jno
pop
aas
js
sti
cmpsl
cmp
in
mov
sti
xchg
les
mov
pop
arpl
or
ret
adc
jmp
sub
dec
mov
leave
add
fdivrs
ja
fisttpll
push
repz
pop
out
bnd
mov
sub
ljmp
pop
in
mov
or
div
mov
repnz
push
stc
adc
fisttpl
idivl
int3
addr16
xchg
insl
jecxz
dec
push
ret
mov
out
mov
jo
push
insl
and
and
rcr
mov
test
pushf
pop
jne
or
mov
inc
mov
repz
or
test
or
push
adc
pop
fcom
negb
and
test
mov
mov
jmp
push
inc
stos
rolb
jecxz
mov
push
out
lods
lods
cs
add
pop
mov
xchg
pop
adc
rorl
idivl
insb
in
sarb
aam
pop
add
push
mov
xor
pop
addr16
inc
adc
cli
adc
insb
jae
imul
sbb
lahf
cmp
sarb
mov
or
ja
popf
icebp
pop
sar
rcrb
adc
roll
pop
test
jnp
and
lods
pop
pop
cwtl
in
dec
fcmovb
lcall
mov
jbe
jns
popl
lcall
es
insl
dec
stc
xor
aad
jo
sti
add
lcall
mov
test
aad
jb
xchg
icebp
sahf
movsb
cmp
mov
je
insl
int3
sbb
dec
out
or
mov
dec
adc
xor
push
lahf
adc
stos
and
mov
pop
cwtl
xor
sub
sub
push
mov
sbb
push
push
xchg
push
rcr
outsl
sbb
mov
ds
pop
sahf
divl
jp
sbb
and
orl
pop
leave
ljmp
xchg
cmp
sub
push
fldl
daa
mov
pop
iret
faddp
popa
aam
xor
pusha
inc
dec
jnp
aam
mov
mov
int
test
and
fists
ficoml
sahf
mov
cmp
add
lea
mov
mov
cmpsl
div
pop
jns
popf
or
in
xchg
lock
adc
sbb
je
inc
movsb
repnz
cmp
addr16
ficoms
adc
dec
in
mov
call
cmp
in
testl
shr
xorb
dec
dec
push
fnstenv
loop
das
pop
stos
sbb
mov
scas
das
insl
mov
adc
mov
mov
ljmp
sbb
into
sbb
test
or
pop
cmpsl
xchg
mov
jae
add
jno
sub
and
and
jo
mov
mov
adc
fistpll
mov
pop
xor
in
sub
not
or
add
in
aam
xchg
sub
mov
lret
lahf
jae
mov
ds
jnp
inc
test
call
ljmp
cld
movsb
out
jns
push
in
sbb
aaa
in
push
jg
cmpsb
or
scas
aam
inc
push
lret
scas
or
adc
push
and
push
cmpl
cld
or
fwait
dec
into
repnz
fs
inc
cmpsw
enter
add
jne
aad
mov
jb
jno
rcrl
mov
jl
mov
xchg
in
aaa
ror
inc
inc
xlat
aaa
arpl
es
xlat
or
int3
ret
dec
popa
movsb
stc
icebp
ss
and
jl
into
xchg
insl
cld
sbb
sahf
jae
and
push
les
dec
cmp
pusha
inc
push
push
cwtl
rclb
cmc
adc
add
pop
call
das
pushf
cmp
pop
mov
mov
ljmp
iret
stos
jmp
pop
mov
jl
pop
lret
xchg
cmpsb
jge
mov
fmul
jg
sbb
popa
pop
jae
xchg
push
cmp
les
push
popa
mov
sub
xlat
jb,pn
cs
sub
popa
repnz
mov
loopne
popf
es
fsubrs
cs
lahf
xor
xor
popa
les
int
pop
jg
jp
adc
lahf
gs
lds
inc
lcall
push
cmp
or
pop
popf
xor
in
mov
dec
iret
adcb
lahf
aaa
fnstsw
lods
pop
inc
jle
or
xchg
loopne
mov
mov
add
test
outsl
inc
push
stc
out
xchg
cs
mov
mov
sbb
icebp
jnp
mov
inc
lock
leave
or
push
loop
in
pop
clc
jl
cmpsl
jno
aam
dec
jae
pop
insb
xchg
loope
mov
pop
out
cmp
lret
mov
add
out
inc
mov
aad
xor
lock
mov
xchg
xor
xchg
adc
stos
mov
xor
aas
fcomp
insl
jbe
push
gs
rclb
hlt
fs
ja
sti
or
xchg
pop
sahf
inc
dec
aad
addb
cld
scas
lahf
mov
cmp
and
cmp
aaa
jnp
inc
fcompl
imul
mov
testl
pushf
cli
push
pushf
add
mov
jecxz
xchg
mov
mov
jecxz
out
xor
shll
push
pop
jle
xor
scas
jmp
in
xor
mov
mov
orl
xor
hlt
sbb
lcall
es
repz
out
pushw
xor
sti
pop
add
lea
sub
jb
mov
ret
adc
lods
call
int
addr16
and
outsl
in
fsubs
push
pop
add
ror
mov
mov
sbb
in
jle
leave
and
std
and
add
aad
dec
lret
outsl
addb
repz
jl
cmp
push
sbb
push
xchg
mov
pop
adc
stc
sbb
into
push
pop
sub
pop
lret
fisttpl
sbb
divb
bound
cwtl
add
inc
idivb
xchg
jnp
add
sub
jnp
jbe
and
pushf
imul
lea
shll
aaa
sub
jmp
movsl
movsb
pop
or
out
xchg
mov
pushf
test
mov
test
insl
arpl
adc
shl
xchg
mov
bound
lcall
dec
aaa
jbe
pop
cld
sti
mov
ret
dec
pop
movsl
movsl
sbb
popa
adc
incb
ljmp
ja,pn
xchg
add
pusha
pop
xchg
stos
mov
test
dec
adc
xchg
mov
xchg
lock
repz
popa
pushf
cmp
xchg
fists
leave
fsubl
test
add
js
leave
mov
dec
dec
inc
jg
add
ret
aas
jne
add
dec
js
push
dec
out
mov
push
scas
out
pop
pop
mov
or
mov
mov
push
sbb
pop
mov
dec
xchg
rclb
ljmp
std
test
repnz
addl
jp
add
adc
xor
hlt
push
insb
test
pop
lods
push
pop
ret
data16
adc
inc
add
push
mov
xor
adc
arpl
xchg
ret
xor
or
and
sbb
cmp
scas
cmp
xchg
sub
mov
test
pop
pushf
pop
test
test
fwait
cs
push
pusha
outsl
xchg
jmp
aaa
ret
in
xchg
jecxz
jnp
ja
add
mov
int3
or
jle
pop
push
ss
jle
aad
mov
iret
pop
xchg
sub
dec
movsb
jbe
or
lret
jp
mov
adc
mov
repz
jp
fisttpl
dec
fwait
mov
xchg
mov
lret
cli
fldt
mov
cwtl
arpl
inc
pop
enter
adc
pop
jl
xorb
push
ret
ror
sbb
jecxz
mov
cmc
or
lcall
cltd
cmpsl
movb
add
out
xchg
scas
push
sbb
pushf
insb
push
cs
scas
fdivl
dec
bnd
ss
leave
mov
sbb
lea
test
pushf
push
inc
push
push
repz
cli
repnz
mov
ret
mov
push
and
xchg
mov
xchg
push
push
add
adc
push
xor
mov
sbb
fwait
lret
mov
subb
ffree
fidivl
aas
cs
fsubl
sbb
pop
jmp
iret
popw
push
push
or
cmp
add
dec
sub
mov
shl
sarl
push
test
out
xor
push
inc
andb
cmp
je
or
sub
mov
cmp
xchg
pop
push
iret
outsl
push
xchg
add
sbb
sub
xchg
inc
das
rcrb
push
jbe
enter
push
ljmp
call
jg
xorl
outsl
dec
dec
mov
inc
inc
sbb
mov
adc
adc
test
lods
lret
es
stc
test
jne
insl
add
shl
aam
out
orb
jp
imul
dec
fnstsw
jbe
lret
cmp
aad
jne
sbb
sar
mov
mov
jo
js
pop
cmp
xchg
mov
lods
push
or
lea
dec
xor
xorl
pop
arpl
or
push
dec
pop
out
jg
outsb
sbb
ja
sbb
das
imul
adc
int3
push
xlat
out
and
or
fisttpll
aas
jle
in
stos
pop
sub
lods
cmp
jns
xchg
pop
mov
inc
int3
push
andb
fwait
rcll
push
xlat
fcom
push
cmp
sub
xor
mov
inc
movsl
mov
mov
push
in
xchg
ja
and
pop
dec
cmp
lea
dec
sti
mov
cmc
pop
and
and
test
out
jbe
inc
inc
adc
mov
repnz
out
xor
js
sbb
mov
dec
and
jo
int3
lcall
iret
sbb
lcall
rcrb
lcall
arpl
jne
dec
insb
sub
add
jl
andl
mov
cli
push
repnz
mov
sti
popa
adc
sub
mov
jl
cmp
cmp
mov
movsb
ret
insl
dec
jbe
jge
pop
das
in
cmc
lds
add
jbe
jnp
fstl
xchg
fmuls
push
repz
ret
xchg
mov
fisttpl
and
mov
out
pushf
sbb
ret
add
outsl
jg
mov
rorb
sub
add
push
mov
mov
aas
jbe
inc
fs
dec
das
jle
sbb
clc
in
mov
xchg
fsubrp
mov
iret
mov
imul
jge
cmp
pop
fdivl
pusha
xor
inc
cmp
cmp
int
sbb
sbb
popa
pop
not
cltd
lret
or
enter
mov
int
pop
sub
inc
or
insb
pop
or
cmp
sbb
lret
jb
fisttps
in
cwtl
xchg
bound
aam
int3
sbb
or
mov
int
pop
and
insl
test
adc
jg
push
push
pop
lods
rorl
cmp
push
cltd
lods
xor
dec
shll
js
mov
push
popa
push
scas
jl
xchg
xchg
fildl
sub
adc
arpl
std
sub
inc
or
cli
std
lods
imul
jae
inc
push
xchg
aam
cmpsl
jecxz
inc
and
cwtl
fmul
sbb
sbb
mov
sbb
xchg
mov
push
pop
cmpsb
and
fwait
lahf
push
push
in
bound
push
ja
mov
outsl
rolb
bound
adc
mov
push
mov
pushf
add
mov
sbb
adc
dec
mov
pop
sti
push
xchg
movl
sbb
outsb
pop
xchg
push
and
and
push
dec
dec
sti
add
movsb
jle
push
jecxz
ja
pop
repnz
stos
cmp
adcb
fldl
scas
mov
mov
and
out
or
pusha
mov
push
xor
pop
rolb
mov
jg
inc
add
mov
pop
je
jecxz
mov
mov
adc
sbb
jp
in
sbb
xchg
int
adc
aas
or
rcrl
push
or
pop
inc
mov
dec
jl
mov
insl
insl
and
cmp
mov
fists
mov
movl
out
pusha
mov
mov
cwtl
cmpsb
cwtl
adc
aam
inc
and
sub
enter
jne
ret
mov
imul
in
mov
and
xchg
into
outsb
fadds
sbb
sub
fs
dec
test
std
inc
push
pop
int
mov
les
jge
cmp
loop
cmp
movsb
arpl
insl
test
mov
cmp
or
fcmovb
jb
cmp
mov
sbb
mov
sbb
cmp
cs
fs
add
mov
je
inc
xchg
or
fnstenv
jae
mov
in
es
xchg
adc
aaa
jp
xor
insb
add
lock
mov
jmp
pop
enter
stc
mov
repnz
sbb
and
pop
sbb
dec
iret
bound
jg
mov
jns
aam
mov
rorb
pop
call
inc
pop
dec
lea
aas
bound
adc
xor
ja
mov
mov
popa
mov
imul
inc
xchg
lret
jne
sub
xlat
mov
push
adc
pop
pop
adc
xor
cwtl
adc
in
imul
mov
ss
mov
or
or
adc
push
or
jb
int
movsb
lds
and
sbb
xchg
push
scas
aaa
shll
inc
or
cli
out
scas
xchg
add
fadds
jne
xor
push
pop
test
divl
lcall
mov
xor
enter
sub
pop
jle
pop
out
imul
pop
sbb
dec
push
xor
lret
shl
mov
aas
inc
lods
cltd
jmp
repz
sarb
outsb
adc
daa
sbb
pop
sahf
jmp
adc
lcall
xchg
je
and
ds
and
in
scas
icebp
data16
jne
cmc
lret
jmp
movsb
mov
dec
mov
xor
sub
adc
test
pop
cmc
fdivs
jns
sub
ss
adc
pop
scas
daa
push
stos
enter
push
mov
scas
stc
or
rorl
sub
out
std
lds
and
mov
xchg
mov
bound
outsl
cld
movsl
pop
dec
jo
lods
or
add
ss
gs
jge
movsl
out
jl
or
imul
adc
sbb
stos
and
adc
jbe
sub
xchg
and
xor
bound
jmp
outsl
sub
lods
rcll
test
test
inc
sti
jne
hlt
out
mov
cmpsb
or
mov
cmp
sub
xor
pop
jbe
xchg
sub
movsb
push
bound
sub
lahf
call
add
les
sbb
cmp
and
jb
push
rorb
sti
test
lock
loopne
inc
mov
enter
xor
push
xchg
pop
das
mov
and
push
adc
mov
add
fmuls
loope
out
movsl
lea
sub
mov
push
sbbl
insb
push
mov
xor
mov
js
fwait
cmc
jecxz
lock
rcll
es
push
in
pusha
mov
rcrl
mov
pop
adc
pop
sbb
fadds
adc
shlb
fsub
inc
dec
test
dec
cmp
mov
sbb
jecxz
cmp
dec
shrb
cmp
lea
jbe
icebp
fisubrl
mov
or
cs
jmp
outsl
or
popf
push
sub
ss
cld
pop
mov
sub
rcr
in
jmp
or
dec
jnp
inc
stc
sbb
mov
sub
imul
inc
mov
push
rclb
jno
sub
add
aad
jo
std
mov
dec
sbb
mov
mov
rorl
daa
out
in
sub
and
xchg
cmp
icebp
mov
test
ljmp
movsl
add
jecxz
mov
push
lods
imul
outsl
mov
int
ljmp
sub
and
add
mov
ret
mov
or
cwtl
popa
xchg
push
push
mov
jnp
inc
movsb
or
aas
aam
mov
cld
rcll
jmp
xor
fcoml
xchg
or
out
push
rcrl
fs
adcb
inc
or
xor
in
jnp
aad
ds
out
inc
mov
xchg
xchg
leave
rclb
mov
add
dec
rclb
mov
xor
xor
insb
sbb
xrelease
xor
sbb
cmp
aaa
cmp
fildl
es
or
mov
jmp
les
mov
xchg
out
test
jb
pop
es
pop
ret
test
mov
fidivrs
dec
xchg
adc
aad
fwait
xor
scas
fs
stos
jmp
lahf
and
js
or
mov
xchg
or
jmp
sarl
mov
not
pop
mov
mov
push
adc
mov
dec
hlt
stos
ds
enter
js
inc
jl
fists
hlt
out
bound
cmc
jecxz
popw
lods
mov
or
fdivrl
repz
cmp
mov
scas
cmc
mov
ja
neg
negl
mov
cmp
adc
mov
movsl
jne
or
add
jnp
stos
ja
in
and
ja
push
sbb
pushf
ret
cwtl
xchg
adc
es
xchg
push
into
call
sbb
sub
xchg
pop
stc
orb
es
cmp
pop
cli
xchg
mov
dec
sub
fisttps
cmpsl
sti
subl
call
lret
adc
adc
mov
mov
adc
enter
subb
rol
nop
or
xchg
pusha
xor
stc
test
lock
jg
insb
aas
sbb
jne
pop
ljmp
and
aam
pushf
addl
es
xchg
push
leave
inc
js
mov
add
cld
inc
mov
stos
lods
jnp
ljmp
adc
cs
mov
mov
in
inc
adc
mov
cmp
xor
xor
ss
out
ret
sub
clc
sub
nop
and
mov
pop
adc
fists
mov
xor
loopne
movsl
rcl
je
jo
test
mul
add
ret
cltd
cmp
loop
mov
je
out
xor
sbb
and
ss
pop
mov
dec
xor
lahf
sub
dec
js
shll
or
outsl
inc
insb
ficompl
mov
mov
push
cmpsl
push
mov
repnz
inc
mov
js
in
mov
add
in
dec
xlat
loopne
pop
push
or
ljmp
loop
sbb
mov
sti
push
and
pop
pop
xor
push
jo
out
lahf
test
dec
imul
cmp
insl
inc
insb
sahf
outsb
rclb
inc
data16
iret
test
mov
sub
mov
jb
fdivs
cld
and
pop
mov
inc
push
rcr
sub
and
cmp
jecxz
fisttpll
or
stos
in
lret
dec
pop
data16
jb
ret
fs
jae
in
mov
mov
jge
shlb
cmp
or
mov
gs
push
mov
mov
int3
pop
xor
and
push
das
pop
mov
ret
fisubs
adc
cmp
and
test
pop
push
lds
rcll
fwait
test
clc
ja
cmp
das
ja
lds
cmpsl
stos
arpl
lock
nop
test
or
cmp
loope
adc
cmp
jmp
sub
inc
dec
shll
sti
sti
call
add
jne
pop
add
mov
jge
xorl
mov
lahf
dec
push
aas
bound
addr16
cs
push
or
push
subb
or
lcall
xchg
mov
inc
sar
xlat
push
mov
in
add
cld
xchg
add
mov
inc
int
push
lock
sub
sbb
xchg
mov
test
mov
xor
mov
xchg
mov
adcl
daa
int3
and
fldl
xlat
cmp
jnp
dec
mov
xchg
imul
mov
inc
and
movb
outsb
cld
insl
outsl
pusha
add
sbb
arpl
hlt
fwait
and
stc
mov
cltd
xchg
int
or
int3
sub
jle
lret
jnp
popf
out
das
inc
xchg
jecxz
push
xlat
sbb
cltd
fstps
push
xchg
or
mov
sti
xchg
push
cmp
sbb
mov
xchg
dec
stc
lea
push
mov
outsb
pop
mov
imul
daa
mov
pop
add
adc
sub
in
jle
xchg
mov
test
aaa
cmp
add
addl
sbb
or
xlat
mov
ret
xchg
and
sub
js
je
fildll
das
adcl
dec
das
or
mov
daa
xor
cwtl
ljmp
jmp
or
jb
stos
mov
test
xchg
data16
mov
mov
inc
pop
jecxz
mov
mov
lcall
xchg
loope
xor
xchg
cs
xchg
xchg
pop
xchg
xchg
and
js
dec
push
cmpsb
pop
jp
fsubrl
fimuls
shl
cltd
insb
jo
arpl
es
pop
fmull
cltd
pushf
rorl
out
leave
enter
or
inc
inc
or
sbb
and
push
lds
jp
clc
push
dec
and
leave
mov
pop
out
mov
mov
add
sbb
cmp
cli
or
lcall
addr16
inc
test
shrb
and
xor
cmpsl
lods
clc
aas
dec
sub
dec
jge
dec
or
push
rcr
das
xchg
mov
das
pop
aad
test
push
or
xchg
jno
add
lods
dec
int3
les
sbb
stos
ja
and
xor
movsb
mov
idivl
xor
iret
xor
inc
jbe
fsts
and
imul
scas
cmovne
in
call
inc
lret
sub
fld1
pop
movb
subb
adc
sti
stos
xlat
sub
and
adc
xchg
pop
inc
sbb
or
or
divb
movsl
std
fdivrl
loope
pop
fs
add
add
stc
jo
jl
add
pop
fisubs
xchg
xorl
lret
xor
mov
xchg
cmpsl
inc
adc
xchg
add
pop
inc
inc
mov
jne
movsb
adc
or
pop
jnp
xor
roll
hlt
dec
adc
xchg
add
lds
imul
xchg
sub
mov
pop
or
mov
clc
mov
push
jne
mov
in
xchg
shlb
imul
add
enter
sti
and
pop
lds
out
fcoms
xchg
outsl
xchg
mov
dec
mov
in
fstpt
push
jl
add
ret
sub
pop
lea
loop
je
sub
pop
mov
cld
sub
popa
sub
dec
outsl
scas
xchg
negb
inc
mov
xlat
sbb
jnp
mov
jbe
xor
cwtl
popa
sub
lret
sub
xchg
js
inc
or
adc
in
adc
push
adc
rclb
outsl
xchg
movsl
movsl
jns
or
jbe
rcrl
ds
icebp
adc
sub
shll
xchg
movsl
jmp
cmp
fisttpll
aaa
xchg
xchg
add
cmp
popa
call
mov
jmp
xor
jae
mov
pop
call
roll
cmpsb
cmc
fildll
popa
pushfw
inc
push
idivb
dec
xchg
repnz
jge
sbb
addr16
xchg
out
and
cwtl
sbbl
daa
sub
dec
sbb
dec
sbb
lcall
push
mov
jp
sti
out
ret
and
or
cli
push
xchg
mov
sub
cmpsb
mov
pop
jecxz
xchg
dec
bound
sub
repnz
dec
xor
push
nop
push
call
fisubrs
aam
in
rolb
stc
movsb
in
fdivl
sbb
lods
jl
stos
js
pop
and
pop
orb
xorb
jg
movb
movsl
orb
mov
cmp
imul
nop
out
test
jb
stos
dec
loope,pt
aas
and
jmp
pop
int
add
cmp
lret
add
das
pushf
jp
test
mov
fcmovne
out
imul
ljmp
mov
xor
scas
fwait
mov
std
aaa
clc
imul
or
cmc
pop
fnstenv
jp
push
jno
dec
add
subl
xorb
adc
repnz
out
cmpsl
and
mov
les
cs
adc
xchg
push
pop
inc
mov
shlb
jnp
dec
jmp
dec
ret
fwait
inc
scas
xor
test
xor
pop
mov
int
fcmovnbe
outsl
or
sbb
xchg
lds
mov
mov
sub
jg
sbb
inc
rorl
ljmp
negl
cmpsl
mov
ss
xchg
movsb
pusha
add
call
cld
xchg
mov
cmp
popa
fstpl
sbb
cltd
jle
push
in
fisttpl
dec
rcr
js
mov
sbb
inc
push
cmp
aaa
dec
rcr
gs
pop
pusha
add
mov
push
inc
pop
fisubrs
loop
imul
movsb
cmpxchg
mov
aas
out
ret
movsl
pop
push
sub
imul
xor
rcr
sbb
lods
xchg
and
push
and
outsb
stos
mov
das
mov
ss
sbb
mov
push
adc
sbb
loop
wrmsr
adc
cmp
inc
push
ucomiss
repz
les
aad
mov
insl
leave
and
cmp
fmull
fwait
fwait
adc
cli
or
pop
in
push
jmp
sub
cmp
lock
test
in
pop
ss
dec
adc
pop
popa
xor
ficomps
push
push
adc
cli
test
repz
jmp
repz
xchg
cs
inc
int
cltd
mov
push
into
cs
jmp
outsb
mov
inc
push
and
mov
mov
jle
xlat
aas
test
adc
fs
adc
pushf
push
sub
shrb
pop
scas
cli
int
and
je
stc
adc
out
ss
ja
loope
add
push
mov
outsb
xchg
sti
loopne
xchg
pusha
sbb
leave
mov
mov
lds
jge
or
lock
push
sbb
sub
aaa
jae
push
ret
inc
imul
adc
jae
ss
repz
daa
push
std
xchg
jecxz
or
ljmp
push
and
add
xchg
dec
outsl
xchg
mov
mov
mov
push
fdivr
jae
sub
lock
lods
aad
outsl
sarl
ss
fldl
xchg
pop
setp
outsl
pop
es
add
push
add
mov
jle
test
lods
imul
xchg
jb
dec
insb
adc
imul
push
cmp
xor
test
adc
mov
dec
rcll
mov
lods
pusha
fsubl
cltd
rcrl
ret
std
inc
xor
jecxz
insl
xor
hlt
mov
leave
sti
addr16
je
bound
dec
aas
cmpsl
push
movsl
rolb
test
lds
xor
dec
aas
aam
out
inc
jnp
xchg
or
out
movsb
cltd
cmc
push
stos
add
pop
imul
rcrb
mov
add
or
fs
or
mov
sahf
inc
dec
jp
scas
outsb
aaa
leave
jge
xchg
cmp
loope
sub
mov
cld
pop
gs
add
xor
jo
scas
stc
out
ss
cmpl
or
jns
outsl
push
inc
mov
hlt
dec
rcrl
or
jecxz
addr16
pop
jns
iret
adc
shl
lret
ja
mov
shl
inc
rcll
movsl
addr16
aas
cmp
imul
int3
rcrl
and
push
out
dec
inc
jno
mov
stc
in
sub
xor
ss
cmp
xchg
push
hlt
les
add
push
sbb
inc
cs
fs
iret
sbb
mov
add
xor
xchg
loope
out
je
mov
int
jbe
or
mov
je
sub
ja
mov
int3
insb
mov
xor
inc
nop
mov
mov
dec
les
neg
push
movsl
lahf
xchg
xchg
gs
lret
xchg
mov
and
add
out
mov
out
push
sahf
mov
and
lods
test
rorb
inc
mov
ffreep
pushf
std
xchg
test
inc
and
loopne
insl
fisubrs
push
inc
dec
mov
mov
outsb
mov
mov
cmp
or
ficoms
or
and
adc
xor
call
jmp
cmpl
mov
roll
ret
xchg
aam
sbb
xchg
mov
ja
push
pop
sarb
pop
push
jbe
xchg
movb
addr16
jbe
xchg
scas
sahf
in
mov
repnz
mov
stos
enter
scas
aam
movsl
xchg
xchg
lods
push
in
negl
loopne
mov
test
push
sahf
add
mov
add
enter
pop
push
jl
mov
negb
cmp
mov
sub
xchg
mov
xor
rorb
lret
scas
test
pop
loop
cmp
insb
mov
or
adc
push
incl
xor
xorl
lcall
test
movups
inc
jbe
mov
sbb
lods
xchg
and
adcb
jmp
push
out
into
aam
cmc
mov
xchg
push
mov
push
jle
hlt
out
ja
adc
xchg
clc
adc
xchg
push
lcall
cmp
rorl
push
sti
inc
loop
rorl
add
and
push
in
and
sub
dec
out
push
push
sub
cmpsb
push
lret
out
int3
pop
in
sub
insl
aam
stc
xor
lods
adc
pusha
popa
push
int
xor
xchg
pusha
rclb
add
inc
movsb
mov
jecxz
xchg
jnp
dec
bound
adc
add
adc
or
adc
movsl
dec
jge
inc
and
xchg
in
ss
pop
loope
lret
ss
insb
adc
dec
mov
push
xchg
aad
xchg
mov
cltd
js
xchg
xor
movsl
jns
scas
roll
icebp
int3
sti
int3
xchg
adc
mov
insb
xor
add
xchg
xchg
enter
pop
jo
or
adc
adc
jg
push
nop
in
inc
dec
lahf
scas
popa
jle
jg
xor
cltd
inc
push
or
scas
jle
mov
iret
out
pop
roll
daa
cmp
push
mov
push
mov
inc
mov
push
ss
cld
adc
loop
insl
or
xchg
cmpl
daa
pop
dec
sbb
cmc
inc
test
xchg
and
leave
mov
jg
jle
cli
adc
dec
je
cmp
push
and
adc
mov
push
sbb
test
test
outsl
adc
xchg
mov
ss
es
push
leave
pop
cwtl
in
push
or
sub
cmp
shrl
cmp
and
adc
mov
dec
outsl
scas
pop
sub
jge
xor
out
mov
jb
rcrl
popf
sbb
push
and
add
push
cmpsl
jb
push
mov
lods
and
push
pop
push
sbb
xchg
adc
xchg
lds
dec
xchg
adc
cmpsb
notb
aad
aas
dec
xor
adc
addl
std
inc
outsl
test
cmpsb
push
adc
jns
sub
int3
loopne
es
pushf
xor
adc
cmp
sahf
add
xor
xlat
test
sub
sbb
pop
xchg
cli
adc
bound
stos
jmp
xchg
or
in
jg
push
lods
mov
push
inc
and
inc
int
imul
les
imul
xchg
cmp
fstpt
clc
dec
mov
xchg
cmp
mov
jmp
outsb
mov
js
loop
sub
mov
cmp
adc
push
pop
mov
test
cmpsl
fdivl
repz
shrl
add
mov
push
jb
dec
cs
push
daa
in
les
ja
xchg
mov
test
adc
data16
push
pop
inc
or
rolb
loop
lds
jnp
int
cmp
xor
mov
pop
int3
jns
jecxz
les
hlt
add
imul
into
aam
js
loope
add
jnp
xchg
and
sub
and
dec
adc
lcall
add
les
xchg
loopne
das
fucomi
jb
mov
test
and
push
pop
xor
dec
cltd
pop
repz
das
rorb
or
lret
lcall
imul
insb
lret
daa
dec
and
push
pop
lods
mov
adc
xor
call
mov
xor
adc
push
adc
or
mov
mov
sahf
pushf
pop
jecxz
test
cltd
scas
pop
std
sbb
push
pop
inc
addb
dec
pusha
int3
xchg
ja
in
test
add
and
insb
out
mov
xchg
push
or
ficomps
add
stos
cmp
ret
cmp
mov
imul
aad
pop
rcll
dec
jl
dec
pop
xor
sub
shrb
mov
test
pop
jmp
std
jmp
sahf
dec
fimull
aas
pushf
rcr
fistl
test
and
push
add
jge
data16
loope
jge
inc
icebp
es
out
lods
push
les
cmpxchg8b
mov
fld1
es
dec
rorb
dec
or
pusha
push
cmp
xchg
add
inc
ffreep
jp
test
loop
inc
sahf
push
push
lret
add
sub
sbb
adc
insl
push
pop
sti
fs
roll
lret
sbb
aad
rcr
aad
ret
outsb
xchg
jo
notb
inc
roll
push
scas
mov
dec
mov
insb
or
jl
push
and
mov
lret
sbb
jno
dec
cltd
ds
fidivs
mov
pop
and
popa
add
mov
mov
pop
mov
sbb
and
jle
mov
mov
xor
aad
inc
clc
rcrb
aaa
or
xor
cmp
arpl
jmp
enter
test
mov
shlb
jle
cmp
and
faddl
adc
or
mov
mov
mov
leave
imul
push
scas
add
jecxz
and
mov
lock
jne,pn
aad
mov
mov
sbb
scas
pop
push
push
pop
dec
test
adc
mov
sub
std
rcl
sbb
dec
loopne
scas
test
lods
inc
nop
shlb
fs
mov
fstps
xor
int3
mov
xor
je
pop
sbb
or
jmp
sbb
das
movsl
sub
rol
cmp
pop
push
outsb
imul
pop
lahf
sti
dec
xchg
scas
sbb
test
sti
add
dec
push
jbe
xor
mov
mov
aam
in
mov
aad
in
mov
fdivp
pop
inc
xchg
imul
add
dec
dec
and
scas
enter
xor
xor
imul
js
scas
fmul
movsl
test
sub
push
aas
xor
and
or
xchg
push
sbb
insl
jle
mov
rcl
adc
push
fsubp
mov
ret
and
fcmovb
fldenv
xor
or
and
div
push
leave
pop
das
ret
push
je
jp
js
and
pushf
sbb
push
add
jecxz
cmp
ljmp
mov
adc
lcall
ds
mov
jl
jmp
out
cmp
push
repz
icebp
push
lods
out
dec
cmp
sub
mov
mov
and
adc
inc
gs
xchg
xor
and
or
into
mov
addl
cmc
in
das
or
notb
stc
test
add
dec
adc
leave
insb
xor
add
loop
push
pop
outsl
xchg
or
jp
test
mov
cmp
adc
in
popa
cmp
push
and
inc
dec
std
push
adc
lea
push
pop
sahf
cmp
sub
xchg
loopne
and
push
sahf
js
daa
push
add
jge
test
out
stos
xor
pop
rclb
nop
adc
test
and
stos
or
xchg
sub
sub
xor
sub
rcl
jecxz
xor
lcall
int
stos
lods
inc
or
call
dec
xchg
sbb
adcl
movsl
insl
enter
and
notb
movsl
push
into
cld
mov
inc
movsl
icebp
inc
fsubrs
stos
std
fcompl
push
mov
lds
sbb
fisubs
pusha
xor
cld
xchg
sub
scas
and
fistpl
mov
mov
cmp
icebp
arpl
inc
in
mov
dec
enter
sbb
sbbb
mov
fnstcw
pushf
xor
or
bound
rep
std
sub
mov
add
test
mov
rcll
push
sub
lret
icebp
jle
out
mov
xor
mov
push
mov
push
loopne
int3
ret
setb
out
movsb
add
ja
inc
fbld
lret
inc
and
stos
or
push
xor
push
push
sbb
and
mov
fcmovbe
pop
ljmp
push
aad
xchg
push
push
popf
add
in
test
ret
or
cmp
scas
insb
pop
pop
int
add
mov
sbb
adc
cmp
cmp
je
loope
inc
cmp
outsb
insb
sub
dec
out
pop
cmp
adc
mov
xchg
ficomps
push
out
mov
push
pop
dec
mov
das
loop
push
push
jnp
adc
insb
mov
push
aaa
cmpsl
push
loope
loopne
mov
stos
xlat
mov
cmp
inc
insb
imul
ljmp
inc
aas
call
jp
pop
dec
fwait
adc
add
xor
pop
mov
into
pop
pop
mov
shrl
mov
shlb
mov
repz
pop
subb
inc
xor
pop
xchg
fiadds
push
jns
and
imul
jnp
negl
push
dec
push
pop
ds
lock
push
sub
outsl
clc
inc
mov
es
fnsave
faddl
xor
stos
mov
insb
int3
cmp
xlat
push
push
push
adc
dec
mov
jne
jge
std
sbb
lret
inc
aaa
adc
mov
xchg
arpl
shl
shr
mov
sub
cld
lcall
xor
xor
jno
mov
int3
xor
outsl
mov
call
xchg
mov
pop
adc
mov
push
mov
cmpb
push
push
adc
popa
lock
pushf
js
jl
xchg
inc
sti
pop
inc
add
test
stos
addl
mov
sub
sbb
inc
clc
sar
jns
dec
dec
dec
gs
xor
cmpsl
pop
addr16
jmp
mov
aaa
adc
adc
add
mov
nop
dec
ss
out
mov
shrb
outsl
sahf
xor
mov
mov
push
jne
cmp
bound
rcr
sti
cs
push
clc
cmp
popa
test
push
inc
cltd
mov
xor
cmp
sbb
xor
add
cmp
xchg
push
stos
cmp
add
js
inc
mov
and
les
clc
cltd
cwtl
lret
insl
sub
cmp
pop
imul
adc
or
cmpsl
adc
jne
outsb
ficomps
adc
cwtl
loope
lock
jl
or
push
adc
leave
popa
jmp
scas
arpl
clc
aad
ret
pop
mov
shll
pop
xchg
mov
data16
add
mov
inc
cwtl
dec
sahf
mov
push
jecxz
mov
mov
shrd
out
fstps
mov
mov
ljmp
stos
movsl
out
cmp
sub
mov
pop
jae
sbb
and
in
or
cmpb
or
or
add
rorb
das
into
dec
sahf
imul
arpl
pop
repz
push
cltd
xchg
cmpsl
mov
je
out
mov
cmp
fdecstp
movsb
and
pop
cmp
daa
es
add
in
sub
lret
mov
lock
adc
addr16
ja
hlt
sbb
pushf
fwait
push
inc
cmp
push
xchg
insb
lods
push
and
cmp
into
sub
stc
push
mov
and
cwtl
divl
aaa
jnp
ljmp
pop
jg
outsb
loopne
xchg
push
xlat
out
push
add
leave
jl
cmpsb
sub
sbb
shll
repnz
inc
popf
add
clc
sbb
xchg
shll
nop
mov
movsl
icebp
pop
add
and
sti
js
jo
fcmovnu
lods
inc
and
cld
shll
js
divb
loop
into
into
int
pop
popa
dec
add
or
loope
mov
loop
mov
das
xchg
dec
es
adc
inc
fistpll
les
les
in
fnsave
mov
pop
or
enter
xchg
adc
xor
cmp
hlt
and
lds
lea
jge
ret
ret
repnz
inc
popa
pop
rcrl
xchg
aad
cmp
enter
jmp
or
sub
add
xor
sub
jle
in
sub
dec
push
test
data16
dec
adc
jl
or
das
pop
enter
mov
mov
inc
pushf
into
das
out
repz
sbb
and
ljmp
add
sbb
or
outsb
add
cltd
mov
jns
mov
test
int
stc
sbb
scas
mov
in
int3
int
xor
out
and
jbe
popa
scas
and
inc
enter
inc
dec
mov
xor
xchg
mov
fs
out
lods
push
mov
jne
cltd
lcall
andl
into
push
cmp
ret
sbb
mov
inc
bound
push
mov
xchg
pushf
lahf
jnp
dec
or
mov
scas
out
mov
aas
mov
jmp
test
push
iret
cmp
mov
push
testl
or
push
dec
jp
movsb
dec
ret
fnstenv
xor
xor
push
in
aad
pop
dec
out
stos
mov
xor
cld
cld
imul
xchg
pop
mov
lcall
sarl
push
pop
orb
ljmp
data16
dec
sub
cmp
clc
pushf
xchg
xchg
call
shll
add
movsb
cwtl
or
dec
addl
mov
push
movsl
mov
into
xchg
push
divl
add
sub
sub
add
dec
pushl
pop
iret
dec
mov
mov
stc
cltd
sub
test
adc
mov
cltd
mov
sub
pop
out
jnp
jbe
sub
add
pop
add
popf
inc
cmp
and
jecxz
mov
aaa
aam
pushl
push
cmp
xchg
mov
dec
test
in
sahf
dec
scas
test
jl
arpl
fsubrl
xor
mov
and
les
or
hlt
dec
test
add
lea
bound
add
push
mov
pop
jae
cli
test
jbe
dec
imul
stos
repnz
out
mov
xchg
push
sbb
push
pop
mov
pop
mov
or
mov
inc
jmp
mov
jecxz
xor
inc
jl
test
lret
xor
add
push
mov
js
mov
inc
jmp
pushf
mov
enter
shlb
cmp
mov
lret
jg
popf
paddusb
or
or
mov
mov
or
sub
push
and
mov
insl
scas
ljmp
adc
ds
xor
jae
ret
ret
push
clc
adc
test
repz
jne
sub
into
and
lods
ja
enter
cmp
push
test
icebp
sbb
fildll
adc
aad
outsl
stos
test
stos
pop
xchg
ljmp
sar
push
mov
jge
jmp
faddl
dec
movsb
imul
lret
mov
add
fildl
add
movl
mov
shl
sbb
mov
xlat
iret
mov
push
test
cmc
mov
imul
sbb
sub
mov
add
call
add
je
fnstcw
in
dec
inc
push
pop
sahf
add
xor
pop
jg
ret
push
ret
mov
pop
push
or
scas
dec
mov
and
dec
sbb
and
xlat
je
xchg
xchg
and
sbb
jbe
lods
or
insb
mov
jnp
ljmp
clc
pop
push
das
aaa
push
sti
or
xor
addr16
mov
xor
gs
movsl
fdivs
into
xchg
or
pop
lds
xchg
mov
adc
mov
scas
inc
shr
je
push
and
xor
xlat
aad
xor
pushf
sub
jecxz
pop
cmpsb
mov
adc
cmp
or
jmp
mov
ljmp
js
cld
mov
cmp
movsl
lahf
adc
shrb
je
outsb
out
mov
xchg
out
negl
ljmp
daa
subb
scas
sub
pusha
icebp
mov
dec
sbb
xor
jecxz
stc
or
in
fistpll
or
es
jmp
jb
inc
repz
sbb
adc
mov
enter
sub
test
loope
stc
push
push
aam
scas
cmp
and
inc
roll
jno
inc
jbe
fbstp
mov
mov
pop
push
add
mov
rep
mov
pop
into
aas
int3
stc
test
lods
int3
pop
pop
dec
add
stos
out
inc
dec
and
sti
mov
push
mov
mov
hlt
ljmp
pop
iret
dec
lock
push
and
fsubrs
jns
aas
sbb
jge
loope
push
daa
mov
scas
stos
push
sbb
sub
xor
mov
lods
repz
mov
outsb
jmp
xchg
iret
gs
mov
xchg
xchg
call
into
pop
xchg
mov
ljmp
inc
jle
daa
stc
push
xchg
xor
cmpsb
xor
movsl
cmp
xor
xchg
ret
xor
ljmp
cmp
je
or
and
cmpsb
push
sahf
xchg
mov
negl
filds
jl
adc
dec
sub
addr16
outsl
xchg
jl
add
xchg
jnp
mov
insb
and
cltd
addr16
iret
out
mulps
adc
stc
enter
mov
and
adc
xor
xor
lahf
test
xchg
mov
icebp
sub
cmp
push
sub
xchg
push
fisttpl
insb
adc
lods
adc
push
cmc
and
adc
jb
rcrb
divl
jno
idivl
arpl
inc
out
rcr
sti
cmp
add
sub
jnp
jo
and
sarb
adc
xchg
movsl
repz
sar
xchg
xor
lods
cmp
push
mov
and
sub
fnsave
push
xchg
pop
push
icebp
push
outsl
jmp
sbb
pop
aas
push
push
movsb
cmp
loope
pusha
xchg
push
loop
pushf
push
cmpsb
cmpsb
mov
or
movsb
dec
or
test
mov
inc
mov
ds
and
and
imul
sbb
push
xchg
mov
jge
or
popa
sbb
xor
adc
xor
pop
dec
adc
outsb
mov
and
cmc
jb
aaa
adc
push
jp
cmp
int3
inc
pop
dec
aas
push
insl
mov
mov
lcall
adcb
mov
call
sub
mov
xchg
push
test
das
sti
inc
add
cmp
xor
sti
ret
sbb
sub
mov
lock
mov
xchg
cld
xor
xchg
fists
pop
cmp
xchg
lods
xchg
jne
mov
aas
pop
adc
pushf
call
xor
shrl
leave
adc
addr16
js
sub
cli
lret
cltd
sub
cmp
add
insl
out
pop
rcrb
test
mov
jl
mov
pop
push
cmp
aad
in
cli
or
jg
sahf
in
or
push
mov
out
mov
fnstsw
insl
lret
push
lea
and
into
loop
imul
dec
pop
mov
sbb
sbb
sub
mov
in
movd
lret
mov
adc
andb
jecxz
aad
leave
outsb
cmp
lock
ficoml
mov
aas
lea
out
mov
fwait
xor
inc
xchg
add
repnz
lret
mov
xor
mov
or
mov
jl
aam
pushf
jp
sbb
mov
or
es
das
pop
push
sbb
and
push
lds
repnz
call
mov
xchg
fidivrs
lds
mov
iret
leave
inc
jae
jmp
mov
inc
push
bound
inc
inc
fs
inc
and
push
mov
rcl
sub
jg
fidivrs
dec
adc
imul
jp
rclb
imul
loopne
xchg
or
test
mov
inc
out
sbb
call
push
push
xor
sub
push
jns
pop
aam
aaa
add
lret
mov
mov
and
or
mov
jns
in
lods
call
fwait
pop
push
outsl
repnz
jge,pt
lret
xor
adc
in
xchg
test
lcall
pop
fmuls
pushf
pop
sbb
inc
mov
out
and
sbb
test
mov
dec
outsb
repnz
outsl
fdivrp
faddl
pop
xchg
imul
dec
inc
pop
lea
loope
test
leave
lahf
ss
mov
xor
dec
in
mov
movsl
sarl
or
pop
hlt
dec
fmulp
push
jecxz
pop
jb
jbe
jl
pop
pop
mov
mov
and
pop
or
mov
aaa
jno
jae
xchg
push
sbb
jno
das
pushf
cs
adc
icebp
dec
ja
and
enter
stos
mov
cmpsb
push
sub
mov
scas
stos
pop
or
jns
out
lods
mov
xchg
mov
pop
mov
jne
ret
lds
fadd
jp
pop
popf
cmp
bound
in
gs
push
fcmovnu
xlat
xor
mov
sbb
cmp
nop
popf
and
mov
inc
sarb
cli
mov
mov
and
ja
add
jecxz
jle
xor
loop
xchg
mov
xor
in
pop
xor
lcall
rorl
pop
je
gs
push
test
outsb
divl
dec
cltd
sahf
mov
cmp
sti
js
lahf
mov
jecxz
lret
sti
sbb
adc
mov
outsb
dec
jecxz
push
bound
lahf
les
or
and
rclb
dec
pushl
add
push
sarl
or
sub
push
mov
xor
out
mov
push
leave
loopne
cmp
lds
loope
mov
subb
jns
stos
sbb
loope
es
and
cmp
out
lahf
mov
loop
add
xor
and
inc
xchg
adc
mov
out
mov
sahf
push
cmpsb
cmc
and
fists
lahf
repz
stos
xchg
jge
cs
cmp
inc
push
fs
xchg
sub
int3
or
test
stos
xchg
jb
pop
cmpsl
pop
imul
pop
test
or
insb
adc
dec
inc
lcall
mov
pushf
bswap
pop
bound
cmp
or
jae
js
cwtl
repnz
and
mov
inc
jle
das
sub
loope
aaa
aaa
cmpsb
fdivrl
int
int3
dec
cmp
mov
shlb
pop
roll
mov
test
and
outsl
insb
or
outsb
jns
push
mov
xlat
leave
loope
or
pushf
arpl
cmpsb
add
xchg
out
adc
ss
xchg
nop
shlb
flds
dec
cmpb
lea
jp
mov
or
mov
les
push
icebp
xor
fwait
cmpsl
cmc
divb
pop
push
cmc
mov
filds
pop
mov
and
fistps
adc
mov
fcom
inc
push
lret
add
lods
fcoml
cli
inc
sahf
or
mov
mov
mov
jns
jecxz
int
cmp
bound
jo
mov
and
aam
mov
jge
sbb
pop
test
sub
cmp
outsl
mov
mov
pop
rcrl
gs
cld
lods
lret
loopne
inc
adc
xor
push
in
mov
addb
mov
lret
dec
jne
pop
push
fsubs
sbb
orb
inc
xchg
fidivrl
pop
das
cmp
mov
pop
testl
sub
or
jge
dec
imulb
xchg
sbb
dec
dec
shr
mov
test
fimull
xorb
sbb
sbb
fistl
jecxz
push
adc
aam
sbb
xchg
mov
in
icebp
sub
push
ljmp
and
ja
cwtl
xor
rolb
cltd
mov
loope
or
insl
pop
shl
rorb
clc
sbb
jno
aad
cli
ret
mov
daa
or
aad
popf
push
popa
ret
pushf
xor
out
push
cwtl
data16
popa
xor
repnz
fldl
xor
cld
daa
rep
popa
ss
jecxz
sarb
xor
fists
mov
mov
flds
jns
xorl
daa
arpl
inc
cltd
jbe
outsb
mov
mov
mov
sub
js
cmp
xchg
xchg
cmpsl
pop
movsl
adc
lahf
push
sub
aas
sbb
mov
cli
or
hlt
mov
cltd
test
jmp
jle
js
jg
jmp
inc
push
flds
mov
decb
movsl
ret
mov
loop
out
inc
mov
nop
add
aam
mov
test
cmc
mov
sbb
mov
loopne
nop
in
stos
imul
jmp
and
mov
je
xchg
jne
aad
bound
ret
and
jbe
cmp
jle
imul
ljmp
enter
mov
test
cmp
fists
cmp
sbbb
roll
or
push
lea
sti
ret
popf
adc
mov
adc
adc
icebp
sahf
sub
jae
arpl
pop
ss
shlb
xor
fisubrl
xlat
pusha
hlt
cmpsb
pop
ss
addb
mov
push
lret
sbb
sbbl
in
cmp
push
outsb
loop
push
daa
lahf
lods
dec
sub
cmp
and
mov
and
decb
xor
xchg
jg
sbb
stos
outsb
enter
loop
data16
cmpsl
jae
or
loopne
int3
daa
pop
adc
and
push
push
xor
push
or
out
movsb
lods
call
mov
lret
mov
stc
stc
jg
xor
hlt
enter
mov
int
inc
jmp
movsl
fidivl
scas
adc
negl
shrb
push
cmp
fsubp
hlt
jg
or
shrl
cltd
test
ss
imul
xchg
dec
loope
out
adc
mov
jecxz
cmp
push
lcall
add
xchg
jae
les
add
pop
xor
in
push
or
push
or
push
jb
mov
stc
add
fstpl
jecxz
fwait
orb
lahf
repz
sbb
mov
in
sub
in
mov
xor
cld
xor
mov
sub
pop
dec
add
sbbl
ja
les
loope
sahf
sbb
inc
mov
jne
nop
fwait
test
addr16
orb
adc
xchg
add
iret
ljmp
aaa
cltd
into
aas
das
mov
bound
xchg
xlat
mov
in
fcoms
jno
outsb
add
into
inc
outsb
push
mov
movsb
adc
js
rcrl
cli
xchg
add
adc
jl
push
imul
push
mov
roll
data16
in
in
out
xchg
subl
or
or
cmc
aaa
mov
sbb
xor
or
jb
mov
mov
jae
push
test
outsl
jo
add
inc
sbb
pop
movsl
loope
loop
jno
xchg
ljmp
push
mov
mov
imul
cld
adc
cld
pushf
cmp
adc
xchg
and
sub
subb
outsl
lods
test
xlat
std
mov
stos
lods
je
cmpsb
push
test
fstl
pop
adc
aaa
test
test
dec
mov
ffree
sbb
jne
jecxz
icebp
sub
stos
inc
dec
adc
inc
mov
cmp
aad
adc
loope
dec
lahf
imul
jno
xor
int
loope
shrl
mov
cld
mov
cmp
sahf
test
popf
jbe
push
es
inc
mov
mov
cmpsb
xor
jmp
cmpsl
in
sbb
add
cld
insl
inc
add
jns
sbb
cmp
xchg
push
mov
push
adc
ror
cmp
pusha
mov
push
inc
adc
jns
arpl
add
insb
lods
sbb
and
xor
std
xchg
xlat
add
mov
cmp
ficoml
aad
nop
dec
ljmp
iret
leave
inc
or
and
in
repz
push
subl
out
stc
xchg
adc
or
testb
pop
ljmp
or
add
jp
jne
jmp
dec
mov
cmp
iret
cmp
sahf
cmpsb
shlb
std
dec
hlt
repz
mov
fidivrs
or
dec
in
out
mov
xlat
lret
outsl
iret
pop
out
cli
push
mov
pop
je
or
ret
mov
stc
insb
subl
aaa
jp
clc
divl
ret
dec
dec
test
ret
dec
mov
jp
dec
pop
daa
mov
mov
dec
push
mov
inc
mov
fwait
sbb
mov
rcrl
add
xor
xlat
shrb
jae
outsb
jo
dec
mov
daa
inc
rcrb
cmp
and
ror
or
or
aam
rcrl
push
pushf
pop
jl
pop
cmpsl
sub
or
inc
js
ds
sbb
add
cmpb
mov
push
mov
lea
aam
dec
pop
je
sub
push
jo
pushf
dec
pop
mov
push
inc
sub
cmpsb
call
aam
mov
addr16
jnp
leave
lods
loopne
stos
push
jl
jmp
adc
mov
setbe
xchg
push
mov
cs
jae
jmp
sti
xchg
sub
inc
cmpsb
xchg
dec
mov
add
mov
hlt
or
repnz
icebp
jbe
cltd
push
sub
inc
mov
js
sub
mov
int3
adc
ljmp
stos
inc
sbb
cmp
scas
in
sub
lods
adc
xchg
enter
lahf
or
sub
jp
addr16
fbld
push
pop
iret
test
adc
int
addr16
mov
icebp
cmp
rclb
add
lcall
cs
xchg
popa
clc
clc
hlt
sub
loop
dec
ficoms
cwtl
or
xchg
and
fidivl
dec
mov
popf
movb
repz
mov
push
in
fs
iret
ja
push
lcall
imul
rorb
test
inc
mov
mov
shrb
sbb
or
bnd
jmp
sub
dec
jb
jo
popa
cmp
or
sub
xor
mov
mov
or
or
fisttpl
pop
ja
loopne
mov
mov
push
pop
lret
jge
adc
push
imul
jno
mov
mov
sti
adc
xchg
out
insl
fnsave
push
cli
inc
jno
mov
xchg
add
or
cli
push
out
push
loopne
push
enter
mov
xchg
mov
test
or
aaa
lea
sub
inc
push
repz
inc
mov
adc
data16
sbb
gs
dec
fsubrl
xchg
cmp
xchg
fucomi
mov
leave
xchg
scas
and
pop
cltd
in
pop
loopne
sbb
hlt
out
add
cmp
add
sub
nop
inc
sbb
psubd
mov
dec
ja
sbb
push
dec
inc
xchg
fwait
into
dec
push
xchg
cmp
call
jnp
das
cmpl
fildll
daa
lea
popa
push
mov
enter
int
pop
mov
mov
adc
adcb
daa
lahf
dec
jb
arpl
inc
xchg
pushf
int3
pop
cmp
dec
fisubs
mov
imul
cmpsl
or
imul
out
jbe
mov
push
ret
and
jmp
daa
inc
mov
dec
pushf
dec
push
push
xor
jl
inc
inc
sub
mov
mov
sbb
cmp
out
stos
mov
push
mov
ss
out
mov
pop
outsl
aam
aad
cmpsb
inc
xchg
inc
pop
xchg
lcall
mov
xchg
jo
cmc
out
xorb
or
lock
icebp
push
fsub
dec
imul
out
dec
pop
xchg
fneni(8087
pop
xor
loope
loop
and
xlat
dec
adc
scas
mov
inc
and
pop
dec
mov
xchg
imul
cs
mov
imul
mov
add
fdivl
xchg
xor
cmp
or
stos
fisubl
cs
lret
stos
shrb
xchg
iret
mov
fisubrl
jmp
loope
sbb
xchg
daa
push
outsb
int3
sbb
sub
pop
push
dec
fsubl
xor
mov
xchg
or
js
xchg
clc
inc
xchg
and
mov
add
icebp
pop
loopne
sbb
jle
cmpsl
movsb
mov
addr16
cmp
gs
test
sbb
sahf
jae
dec
dec
cmp
daa
mov
push
stc
cmp
out
or
inc
cmp
aad
push
outsb
mov
int
adc
mov
push
ljmp
xor
mov
mov
stos
add
add
call
insb
aad
lods
sub
fcomps
xchg
mov
pop
and
dec
mov
popa
sarl
mov
add
push
ljmp
xor
pop
sub
pop
cmpl
les
pop
scas
cltd
stos
ret
out
or
lea
sub
push
dec
push
mov
cmpsl
xchg
jmp
lahf
aas
push
xchg
and
movsl
call
lock
xor
rcll
push
and
in
bound
jg
js
dec
jo
jns
mov
adc
xchg
loopne
sub
jo
roll
into
ljmp
sbb
inc
roll
out
jnp
xlat
sbb
inc
insb
pop
enter
mov
clc
cmp
stos
jns
push
pop
or
pop
push
pop
cmpsl
fwait
or
and
adc
icebp
jp
push
xchg
sbb
adc
repz
insl
insl
sahf
ljmp
jmp
cmp
mov
gs
mov
push
mov
sarl
xchg
movsb
mov
inc
mov
jno
add
icebp
dec
lea
sbb
daa
jb
cld
ficoml
adc
and
out
inc
ss
sahf
cmpl
stc
pop
pslld
rol
jmp
dec
lret
adc
xor
outsb
sub
sub
pop
adc
xchg
jb
and
fmuls
jb
sub
outsb
pop
fstps
xor
or
add
inc
add
mov
push
mov
insb
adcl
pop
loopne
jge
jp
sbb
xchg
lea
stc
fisubrs
xor
sub
fildl
jecxz
or
mov
or
pop
mov
cs
mov
mov
mov
fildl
or
test
jae
cmpsb
call
sbb
lods
jo
insb
outsb
jnp
mov
in
int
imul
pop
addr16
or
add
sbb
add
jae
mov
cmc
xchg
sarb
lcall
test
mov
iret
or
das
es
push
pop
gs
iret
mov
pop
xchg
sbb
pop
add
enter
ljmp
inc
pop
in
inc
shl
test
mov
pop
pop
scas
mov
roll
pop
cmp
leave
lea
mov
fldcw
in
ds
mov
and
cmpb
mov
sbb
notl
sbb
inc
mov
xchg
sti
mov
lock
jle
mov
cmp
jmp
xor
cmp
add
pusha
testl
mov
loope
pusha
loopne
jo
filds
inc
cmp
jmp
int
jmp
xchg
cli
arpl
jns
xchg
mov
dec
xor
lcall
iret
dec
cmc
subl
movsl
in
subb
mov
fsubrs
ja
jge
jnp
adc
aaa
clc
into
stc
add
cs
loop
add
pop
jo
les
popl
test
sub
jg
data16
daa
sub
push
mov
std
loope
push
loopne
dec
mov
sti
mov
push
lds
dec
test
jl
xchg
sbb
push
push
add
or
inc
push
inc
adc
rcl
jbe
not
inc
cli
jo
jne
cmp
imulb
xchg
insb
fidivrs
sub
and
aaa
mov
daa
pop
cmp
sbb
mov
cmp
das
ljmp
sbb
push
stos
mov
fnstcw
inc
mul
adc
rcl
cs
out
xchg
ret
add
and
cwtl
stc
ds
movsb
out
adc
mov
nop
sbb
push
inc
scas
mov
aam
xchg
repz
xchg
or
add
cmp
ret
daa
enter
add
int3
push
cmp
jmp
iret
jo
insl
test
icebp
xchg
pushf
repnz
xchg
xor
gs
or
inc
mov
sub
mov
mov
in
mov
and
mov
ljmp
movsb
cmp
sbb
mov
ja
sbb
cmp
call
cmp
cld
mov
sub
fiadds
pop
nop
xlat
push
jecxz
or
xlat
fistps
lahf
insl
inc
or
xlat
mov
mov
inc
push
jg
sbb
push
dec
ret
push
mov
or
movsl
sub
inc
push
iret
clc
out
mov
push
loope
pop
lret
outsl
mov
xchg
roll
dec
or
mov
mov
mov
cmp
notb
cmc
sahf
inc
scas
mov
repz
inc
xor
fmuls
outsb
fldcw
mov
scas
gs
sahf
adc
int3
inc
call
pusha
xchg
lods
fadds
pop
loop
je
push
lods
jb
mov
stc
inc
sbb
add
aaa
add
sahf
push
and
cmp
fsubl
scas
orl
xchg
mov
cmp
hlt
pop
in
xlat
fsubrs
mov
push
xor
or
adc
cwtl
push
jno
decl
dec
cmp
push
push
insb
push
sub
xor
inc
or
push
pop
jo
in
jp
pusha
aaa
jnp
inc
cli
ret
clc
cmp
cltd
xchg
mov
jb
pop
adc
cmp
rorl
call
data16
adc
xchg
out
fnstcw
or
cmpsl
sub
loopne
cwtl
popa
out
imul
sub
mov
cmpsl
ret
call
mov
paddd
ds
jecxz
push
or
mov
cwtl
das
in
iret
dec
pop
das
int
jg
fdiv
dec
outsl
and
fdivrs
push
stos
add
movsb
or
repnz
fcmovu
mov
push
stos
push
lcall
ss
hlt
movsl
roll
add
insb
push
cltd
pushf
mov
add
mov
jecxz
dec
mov
fdivrs
inc
inc
aam
addb
sbb
ss
pop
jg
js
xchg
sbb
mov
es
push
push
xchg
mov
add
fistpl
inc
mov
movsl
dec
mov
scas
loop
mov
btc
repz
loope
lret
inc
xchg
xchg
rcll
dec
leave
adc
xchg
sbb
rorl
out
lahf
aaa
out
dec
rorl
and
sub
fsts
mov
mull
adc
inc
in
pop
mov
loopne
ljmp
rcll
lods
mov
testb
cmp
jl
xor
jp
jb
mov
push
mov
shlb
leave
es
sub
jno
xchg
push
lret
enter
push
ficoml
das
leave
out
lret
add
jmp
mov
je
lea
pop
pop
mov
lret
arpl
fs
shl
cmpsl
dec
fistpl
xor
lds
cmp
xchg
int
popl
or
std
adc
andb
les
mov
out
popl
fwait
sub
arpl
ljmp
jae
or
lods
les
mov
mov
cmc
push
add
mov
dec
mov
add
mov
fwait
arpl
jb
dec
jle
lods
cmpsl
cmp
mov
f2xm1
sbb
mov
das
int
xor
pop
jp
ret
cld
and
imul
popf
lcall
pop
adc
mov
insb
shll
xor
bound
ds
mov
cmp
adc
in
ret
stc
rcll
add
popa
ljmp
dec
ret
jl
movsl
cmp
sbb
imul
mov
xchg
jnp
icebp
dec
push
dec
psubd
or
sub
sti
fdivr
pop
in
movsb
dec
cmp
pop
lock
push
aaa
jmp
add
les
aam
jmp
sti
dec
in
cmpl
ljmp
les
mov
add
mov
test
cmpsb
xchg
cmp
dec
iret
mov
out
or
jle
jbe
push
addr16
aaa
sub
pusha
cmpsb
popf
cmp
mov
outsb
mov
fwait
cld
sub
jne
mov
cld
ret
mov
rcr
jmp
enter
xchg
sbb
pop
rcrl
mov
int3
mov
sub
mov
mov
dec
test
sub
sbb
push
inc
shrb
add
sub
mov
add
cs
cmpsb
scas
pusha
and
imul
mov
cltd
sub
bound
int
mov
fcmovbe
aad
out
xchg
dec
and
sub
sub
mov
push
das
mov
push
push
adc
jo
sbb
xor
div
xchg
out
dec
jle
jno
adc
xor
cmp
or
outsb
xchg
ret
int
push
pop
sbb
mov
sahf
pop
jge
sbb
cwtl
push
inc
popa
dec
push
fst
cmp
dec
xchg
pop
jbe
mov
stos
loop
sbb
adc
jecxz
cmp
xchg
sub
aam
pop
inc
mov
popa
cmpsb
das
jnp
adc
lret
hlt
push
sub
and
daa
cmp
loop
sbb
in
jg
inc
jnp
jnp
lahf
out
fadds
cmp
jmp
cmpsb
mov
les
icebp
fcos
push
aam
cs
sbb
shl
mov
sub
fldt
into
iret
adc
out
popf
add
pop
int3
gs
and
mulb
mov
rclb
push
adc
subl
dec
push
cmp
pop
stc
mov
dec
pop
or
push
enter
fmuls
push
test
xchg
adc
inc
loop
lds
mov
mov
mov
or
int
arpl
adc
ja
or
mov
ljmp
jecxz
push
stc
dec
mov
cs
movb
movsw
push
cld
das
mov
je
push
in
insb
in
jmp
repnz
add
lods
mov
and
xor
stos
sub
mov
popf
push
daa
out
mov
adc
or
sbb
test
subb
ss
popf
dec
mov
cmp
int3
mov
mov
out
leave
cltd
push
or
pop
loopne
push
push
je
cmc
pop
push
testl
lcall
sub
cs
dec
pop
sub
fstl
data16
into
cmc
sbb
lods
arpl
lods
repz
inc
loop
cmp
and
les
ret
jmp
nop
mov
mov
fwait
aam
pop
inc
mov
pop
inc
flds
xor
fistps
pop
sbb
popf
je
into
xchg
aad
cs
add
dec
xchg
pop
inc
stos
stos
js
dec
xchg
jne
lret
fs
push
aas
jle
sti
push
test
nop
dec
sub
ret
rol
sub
sub
decb
loop
sbb
fsubs
mov
cmp
test
push
mov
cwtl
das
cmpsb
arpl
jb
or
mov
xor
pinsrw
pop
mov
fimull
jns
jo
sub
ret
lcall
faddl
roll
push
jmp
jecxz
sti
jl
jne
flds
gs
mov
in
cmp
cmp
loop
sbb
push
push
fdivrl
sub
outsl
fdiv
and
or
push
mov
pushf
cli
notb
mov
mov
adc
push
mov
xor
jns
xchg
repz
mov
lock
pop
mov
shlb
arpl
mov
sbb
or
lret
stos
xchg
scas
sub
sub
int
sub
cmpsb
in
fsubrs
or
mov
dec
add
jle
hlt
bnd
push
sarb
or
or
cs
sub
addl
popf
inc
leave
dec
jecxz
out
mov
ljmp
xchg
push
cmp
or
jns
shll
repnz
jg
adc
in
or
andb
pop
mov
push
pushf
push
mov
jne
mov
push
inc
pop
dec
add
insb
push
pusha
cwtl
add
pop
push
and
pop
jae
sub
sub
imul
sub
jge
out
xor
push
ret
arpl
lods
int
dec
aad
dec
fcomi
xor
inc
and
jle
aad
ljmp
pop
leave
ja
push
or
mov
jecxz
jmp
jmp
stos
adc
mov
int
scas
lea
mov
cmp
push
jno
cmpsl
dec
rcrb
sbb
or
rcrl
sub
jno
pushf
jg
leave
aad
into
jmp
in
mov
adc
mov
lahf
call
push
jns
lcall
cmp
xor
mov
sub
mov
sahf
inc
stc
sbb
in
insl
insl
lea
mov
sbb
mov
int
je
push
jecxz
pop
ja
enter
fld
out
xchg
mov
mov
outsl
mov
dec
cmp
into
push
cltd
sahf
pop
mov
into
das
sbb
sbb
js
adcb
outsb
pop
push
repnz
das
movsl
lock
pminsw
and
pop
ljmp
xor
mov
mov
push
test
mov
pop
ds
sub
mov
frstor
insl
ljmp
leave
aam
movsl
and
js
cmp
lock
mov
repz
orl
adc
mov
mov
daa
fst
mov
ret
lret
dec
or
aad
movsb
loop
xchg
jl
cmp
mov
pushl
mov
xchg
pushf
mov
fsubl
insb
jge
aaa
or
or
loope
jo
lcall
addr16
test
xchg
jns
cmp
pop
outsb
push
imul
test
mov
xchg
imul
rcrb
push
mov
test
xchg
push
test
sbb
ret
push
push
cmpsl
fcompl
adc
and
stc
out
ljmp
sub
in
std
aam
mov
nop
imul
mov
push
lods
cld
inc
sahf
cmp
sbb
push
rcll
pop
push
jae
dec
ret
aaa
cmp
in
aad
loope
or
push
in
jl
xchg
fs
leave
cmp
in
lock
out
fs
pminub
add
dec
clc
stos
push
lret
fildl
mov
push
ud1
push
add
mov
xlat
call
xor
out
sub
movsb
mov
pop
cmp
add
loopne
pop
xchg
mov
adc
add
xor
add
adc
pop
rolb
sbb
icebp
jbe
push
cwtl
addr16
in
xchg
out
xor
aam
sbbb
pop
repz
inc
mov
fwait
and
xchg
movsb
and
xchg
js
xlat
sbb
push
cmc
cld
xor
movsl
hlt
js
outsl
mov
xchg
div
sbb
mov
adc
js
mov
mov
aad
in
add
lds
out
xchg
ret
adc
rcll
adc
ja
ljmp
psubsw
push
xor
aam
jmp
aad
shl
adc
aam
fidivrl
xchg
pushf
cmp
or
jbe
mov
pusha
bound
pop
dec
bound
jl
sbb
insb
push
xor
loope
mov
inc
dec
or
push
aad
pop
sbb
fistpll
lock
inc
mov
iret
mov
xchg
rcrl
mov
add
push
and
or
push
add
cmp
jp
sbb
cmp
dec
mov
loop
cmp
mov
aam
mov
inc
addl
addr16
sub
lret
loopne
flds
pop
inc
rorl
fildll
cmp
mov
sub
pop
mov
jno
test
cmp
adc
movsl
imulb
aam
dec
inc
push
jno
pop
gs
and
cltd
std
popa
push
mov
movsb
stc
mov
sub
push
movsb
or
inc
push
pop
scas
icebp
orb
imul
cmpsl
in
rorl
ret
sbb
into
or
ss
pushl
mov
mov
mov
push
fucomip
cs
inc
jmp
adc
add
or
pop
lret
loope
mov
mov
pop
mov
loope
mov
lret
repnz
adc
imul
jbe
fisubrs
daa
sub
inc
mov
lock
xor
dec
cmp
add
loope
test
mov
xchg
add
stos
jge
fs
xchg
in
lcall
les
cli
xor
sbb
fwait
enter
pop
mov
jg
xor
jg
cld
outsl
and
repz
andl
add
inc
jae
lods
hlt
pop
xchg
or
outsb
testl
nop
movsl
mov
add
jmp
cli
cmp
test
rol
jle
test
dec
adc
xchg
fsubrl
sub
inc
out
mov
jle
sub
cmp
mov
adc
lds
push
ljmp
lods
lahf
mov
sub
mov
cmpl
add
sbb
mov
and
ret
jno
dec
roll
mov
inc
mov
cmp
cmc
mov
ds
xchg
mov
push
pop
popf
clc
xor
cli
push
push
dec
xor
popa
inc
jae
sbb
mov
sbb
lods
mov
mov
mov
imul
scas
testb
dec
add
adc
pop
sub
jo
push
mov
mov
mov
in
aas
insb
add
cmp
clc
les
sarl
fldl2t
mov
xchg
int3
sbb
jne
sar
pop
cmp
sub
push
add
mov
and
mov
call
movsb
xchg
pop
or
jmp
in
or
mov
stos
and
xchg
jbe
das
dec
inc
ret
add
push
pop
push
fistpl
lds
push
jb
add
mov
push
mov
xchg
dec
stc
inc
or
test
mov
lods
inc
out
jno
xchg
cmp
xor
imul
shrl
jbe
test
mov
push
add
xor
fst
loop
sub
xor
fcoml
imul
jno
inc
adc
cwtl
in
push
xor
movsb
pop
lds
mov
cmpl
sbb
clc
or
outsl
cmp
cli
push
stc
mov
fiadds
lods
stc
cltd
xor
push
mov
xchg
xor
cmp
jns
stos
inc
sahf
scas
mov
ret
and
call
scas
mov
cmp
and
cmp
fwait
loopew
imul
sbb
and
mov
pop
mov
pop
cltd
pop
mov
pusha
mov
loop
test
icebp
in
out
enter
mov
cmpsb
inc
xchg
popa
or
fiadds
inc
sahf
mov
aas
lahf
sub
inc
test
xchg
pop
pop
sub
or
dec
mov
jne
aam
mov
popa
xchg
push
incl
and
jp
add
mov
push
pop
jnp
push
push
popa
add
ja
xchg
stc
pop
xchg
shlb
xor
pushf
adc
in
mov
sub
insl
dec
sar
xor
cld
lods
push
imulb
and
adc
insb
fsubl
mov
leave
lock
xchg
xchg
xchg
xchg
fldcw
inc
xor
inc
das
sbb
test
xchg
cli
jg
insb
mov
je
arpl
mov
xchg
iret
sbb
sbb
test
xchg
ds
aaa
cmc
data16
std
pop
sbb
aam
imul
in
vxorps
mov
repnz
mov
mov
mov
incb
sub
aas
adcb
faddl
jne
sub
jge
out
add
add
inc
adc
test
xlat
xor
jmp
fs
imul
cmp
sub
aas
add
adc
popf
add
jns
sub
fisubrs
and
cmp
aaa
push
mov
sbb
or
adc
add
je
repz
add
mov
subb
xor
push
xor
nop
into
mov
out
sbbb
xor
mov
jg
lds
push
pop
pushf
add
aas
and
faddp
and
loop
dec
and
pop
scas
cld
sub
je
hlt
mov
fs
pop
in
jg
sarl
add
in
test
adc
xlat
cmpsb
adc
test
cmp
les
imul
mov
mov
pop
test
cmpsl
mov
mov
push
test
xchg
add
stos
in
cmp
sarl
aaa
or
out
cmp
xor
shrb
cmp
xchg
adc
mov
sbb
push
call
orb
and
out
push
or
cmp
xchg
mov
fwait
push
bound
enter
add
pop
dec
dec
pusha
into
out
repz
icebp
mov
ss
mov
scas
arpl
fstpt
nop
sahf
jmp
add
xchg
bound
xchg
xorb
ljmp
repz
sbb
lds
stc
ret
pop
push
and
adc
jp
pop
cmp
mov
push
jl
shl
jns
push
mov
adc
cmp
stc
xchg
je
inc
add
push
cmp
jne
lret
popa
pushf
nop
dec
xor
jle
faddl
pop
inc
rcrl
mov
test
push
add
mov
sub
mov
and
fstps
mov
aad
addr16
or
insb
rclb
cwtl
add
jne
test
lods
mov
dec
and
test
sbb
popf
sub
jae
mov
jne
ret
jecxz
push
int
inc
repnz
dec
sub
mov
ss
das
add
loopne
mov
les
loope
sbb
aad
jae
inc
fdivs
push
in
lahf
fidivrs
in
mov
cmp
add
sub
test
aas
fbstp
int3
or
aaa
mov
mov
shrb
or
std
xor
push
jno
mov
nop
pop
idivl
lea
aaa
push
sbbb
push
sub
mov
out
leave
imul
or
inc
in
mov
hlt
push
mov
push
aad
cmp
jne
mov
rcll
clc
stos
bound
sarb
fbstp
xor
js
dec
aad
cmp
fdivs
cld
mov
jb
in
dec
jecxz
cmp
dec
cmc
lods
add
call
aaa
jns
sbb
mov
out
sub
iret
stos
inc
xchg
cmpsb
cmp
sub
mov
mov
das
or
adc
clc
cwtl
mov
bound
aam
inc
lahf
mov
imul
push
dec
or
xchg
cmp
repnz
pop
dec
sub
adcl
pop
pop
rcrb
cmpsl
cmpsl
adc
adc
inc
sub
adc
jno
fstl
adc
xor
les
cmp
mov
mov
adc
sahf
xchg
lock
jnp
inc
push
add
popa
dec
cmp
sbb
inc
outsl
and
or
xchg
mov
push
pop
adc
cmpsb
fs
inc
test
sbb
out
loope
mov
addr16
xchg
mov
jge
xchg
mov
or
jg
pusha
add
out
fwait
repnz
in
jbe
pop
call
dec
lds
iret
sahf
clc
and
stos
mov
xor
out
mov
cli
fwait
test
xchg
sbb
dec
sbbl
cmpl
and
adc
xor
jl
ss
pop
cmpsl
xchg
mov
pop
mov
lea
push
xor
fbstp
stc
jmp
pushf
inc
mov
lods
pop
sub
dec
or
cmpb
pop
and
inc
stc
popf
sarl
out
mov
add
out
mov
mov
or
movsb
subb
cmp
addr16
stos
and
call
dec
xor
fnstsw
cmp
add
icebp
call
pop
xchg
add
push
pop
inc
cmp
mov
loope
imul
repz
or
mov
lds
xor
out
movsb
fidivrs
fsubl
ficoms
cltd
enter
inc
mov
stos
mov
inc
nop
loop
outsb
push
insl
loop
add
cmc
fisubrl
mov
jl
mov
mov
lds
pop
sar
pop
out
cmp
rcll
cmpsb
in
lret
sub
fucomip
popf
add
pop
sub
aas
cmp
imul
push
cld
int
or
or
mov
js
int3
test
mov
jo
pop
adc
xor
in
cwtl
xlat
mov
mov
nop
or
push
out
in
ja
cmc
xchg
cmp
hlt
cmp
jmp
dec
sti
cmc
adc
adcl
imul
adc
jmp
cmp
inc
adc
mov
ficomps
jp
flds
dec
adc
pop
imul
in
fwait
into
in
roll
loope
mov
fs
adc
lock
dec
mov
jge
mov
stc
aaa
lods
ds
jbe
insb
div
int3
insb
dec
sbbb
sti
jmp
mov
jnp
sahf
or
sbbl
vpmulhuw
push
test
inc
pop
push
sub
stos
cmp
test
adc
and
es
push
subb
loope
sti
xor
inc
adc
pop
cmp
add
pop
data16
mov
mov
scas
pop
lret
xorl
mov
push
xchg
lods
fnsave
addr16
in
mov
add
iret
fimuls
test
mov
hlt
inc
adc
pop
xchg
stos
bound
faddl
dec
or
mov
sub
and
xchg
push
adc
and
push
incl
fdivs
and
add
sbb
xchg
aad
xor
iret
mov
sbb
les
dec
lret
pop
and
cwtl
stos
subb
xchg
fmuls
xlat
jae
inc
in
pop
leave
mov
add
test
xor
dec
mov
cli
xchg
xchg
arpl
call
push
pop
sub
mov
arpl
mov
mov
cmc
dec
mov
adc
addb
leave
jle
movsb
push
fidivl
lret
imul
lahf
aas
dec
data16
sbb
add
xchg
daa
fistpll
out
imulb
in
stos
out
jns
sub
stos
or
mov
pop
shll
sub
sbbl
jl
add
adc
jmp
mov
push
dec
pop
daa
imul
cmp
fisubl
push
faddp
rcrb
lds
mov
mov
arpl
pop
in
dec
xor
add
aad
push
fbstp
and
sbb
sete
popf
and
cmpsb
or
jmp
jb
xor
sbb
add
xchg
cld
mov
xchg
js
adc
cmp
notb
movsl
jb
cli
rolb
insb
sub
scas
pop
jmp
pop
ret
mov
and
and
jp
add
scas
arpl
imul
xchg
cmp
dec
jl
aaa
cwtl
sti
sub
popa
out
iretw
add
cmp
xchg
xlat
adc
xor
cmp
rcrb
push
sbb
mov
inc
mov
pop
cmpb
lret
cmpsb
nop
or
cmp
jg
xor
jnp
dec
push
aad
out
jge
bound
cmp
inc
int3
dec
xchg
mov
shrb
adc
fs
push
or
ret
sahf
mov
sbb
bound
out
das
pop
out
decb
loopne
stos
add
add
adcb
xchg
pop
insl
fidivl
clc
dec
xor
insl
stos
inc
cwtl
dec
xchg
jmp
add
adc
add
hlt
daa
push
adc
rcll
mov
loopne
jae
push
xor
pop
xchg
stos
or
sbb
lock
aad
imul
jg
outsb
gs
cmpsl
repnz
ret
cmpsl
or
scas
xchg
xchg
nop
or
jmp
out
out
test
mov
insl
outsb
ljmp
shrl
test
negl
or
jmp
or
pop
int
rclb
fwait
stos
mov
jne
mov
test
mov
movsl
sbb
sub
add
cmp
ret
das
fbstp
lret
inc
shll
scas
sub
fcmovnb
mov
in
das
jge
lods
addr16
iret
push
cmp
shl
or
cmp
add
mov
mov
cmpsl
dec
ret
push
outsl
insl
adc
outsl
loop
and
decl
push
icebp
fstpt
xchg
call
icebp
aas
mov
filds
mov
jb
cli
icebp
fnstsw
into
push
inc
mov
pop
outsl
fiadds
pop
pop
rcll
push
mov
shl
rcrb
inc
pusha
pop
xorl
add
xlat
mov
hlt
sbb
push
xchg
mov
imul
mov
loope
das
ds
jecxz
jmp
cmp
dec
inc
mov
sbb
jg
jmp
outsl
dec
out
xor
or
sbb
andb
test
sub
orl
lea
mov
push
mov
jl
push
pop
pop
imul
cmp
cmpsb
pop
out
aad
imul
movsb
fwait
cwtl
mov
adc
push
sbb
gs
and
sarl
aaa
in
cmpsl
and
or
pop
add
xchg
sbb
int3
inc
mov
lahf
xor
fwait
loopne
loop
int3
sbb
shrl
sub
push
ret
add
push
movsl
adc
adc
js
jmp
xlat
dec
adc
pop
popa
and
popf
mov
cmp
cwtl
outsb
mov
fnsave
fwait
add
lods
loopne
dec
test
dec
dec
and
mov
test
stos
push
in
mov
pop
daa
pop
icebp
insl
pop
sbb
icebp
sub
lods
inc
decl
sahf
inc
hlt
mov
leave
xchg
jmp
aaa
xchg
add
loop
push
push
jae
xor
add
or
xchg
out
or
pop
pop
sbb
cmp
or
mov
shll
dec
cmp
lcall
sub
mov
push
jle
push
les
jl
and
cmc
add
daa
push
xchg
std
add
xchg
xchg
push
cs
fcoml
jl
cmp
inc
mov
inc
imul
pop
dec
negl
inc
jmp
and
shlb
sbb
mov
sub
and
inc
push
sbb
push
jg
insl
fldcw
pusha
push
dec
xlat
add
push
mov
negl
cltd
sbb
push
sbb
push
mov
xchg
std
dec
dec
arpl
add
mov
adc
xor
cmp
inc
js
jle
sub
std
add
dec
xor
or
pop
push
xchg
popa
das
out
xor
jl
inc
fcoms
xor
lods
sbb
and
push
data16
stos
fimull
add
inc
aas
sbb
xor
mov
sahf
adc
add
jmp
or
loop
jbe
adc
push
gs
adc
pusha
push
xor
mov
es
enter
xchg
cmp
pushf
add
fstp
xchg
shll
xorb
jg
sti
cmp
add
loope
rcrl
dec
sbb
and
jns
add
outsb
daa
es
adc
daa
xor
mov
cld
pop
in
jecxz
jae
aad
push
fsub
jnp
sbb
sub
jmp
jmp
mov
aas
mov
push
fsubs
sbb
rcl
xchg
mov
outsb
in
in
cs
addl
pop
mov
das
movsl
lahf
push
inc
adc
sbb
sbb
stc
push
lock
cltd
push
stc
sahf
addr16
std
xor
aas
stos
gs
xchg
pop
int3
push
lods
insb
dec
mov
shr
cld
fwait
test
pop
bound
mov
fisttpll
xor
cmpsb
sub
cmp
mov
fcompl
mov
out
jl
mov
lods
jmp
xor
ror
cmp
out
dec
mov
inc
adc
add
mov
sbb
fsubrs
push
lret
and
xor
into
fnstcw
sbb
mov
ret
outsl
cmpsl
sub
sub
int3
cmp
inc
jnp
inc
push
popf
xorb
xchg
mov
add
push
mov
xchg
hlt
jnp
into
xchg
shlb
out
fisubrl
add
fistpll
adc
or
push
je
decb
or
daa
xchg
mov
hlt
or
pop
in
testb
dec
lahf
mov
xchg
push
push
pop
arpl
sub
pop
push
inc
out
shll
repnz
outsb
out
leave
aam
movsb
push
shlb
lret
xchg
stos
pop
inc
pusha
ret
dec
xor
sbb
loope
pop
mov
adc
ret
testb
aam
or
mov
mov
ret
test
jo
push
lds
lods
cmp
lret
mov
mov
fcmovu
shrl
test
sub
lahf
or
inc
sbb
clc
add
cld
in
pop
mov
jnp
push
jbe
sub
popf
pop
jecxz
ds
sbb
inc
fadd
adc
mov
dec
popf
fwait
cs
add
notl
adc
mov
call
jge
aam
sub
push
fistpll
cmp
stos
mov
sub
adcb
push
xor
and
xor
bound
inc
les
push
push
shlb
mov
outsl
sahf
dec
cmp
call
in
les
pop
mov
inc
add
dec
in
bound
subl
inc
iret
mov
fdivl
add
in
push
dec
lahf
pop
pop
pusha
fwait
ds
gs
jle
cmp
fdivrl
mov
movsb
nop
push
push
mov
inc
roll
ja
aas
fdivrs
xchg
cmpsl
jnp
add
aad
int3
or
mov
cwtl
in
mov
push
out
sub
stc
jo
jmp
mov
addb
bound
shll
test
out
lret
daa
in
sbb
test
mov
sub
mov
dec
rolb
xor
imulb
jae
xlat
push
loopne
inc
clc
bnd
cs
xor
pop
cmpsb
enter
mov
in
mov
or
mov
xor
and
jb
dec
push
sbb
test
and
loopne
cmp
lods
jno
daa
int
inc
cmpsb
aas
jb
icebp
and
mov
add
not
icebp
shll
jns
push
les
mov
mov
push
shll
dec
sub
sub
nop
lcall
xor
jg
mov
jecxz
fstl
daa
mov
aas
sti
ds
fmuls
add
aas
or
cmp
dec
mov
pop
sahf
rcrb
xchg
je
in
in
shl
sbb
adc
pop
xor
push
push
sub
clc
sub
mov
sub
mov
outsl
call
mov
push
inc
imul
icebp
shrl
push
test
in
movsl
inc
adc
cmpsb
ljmp
sub
jo
push
lock
cmp
out
out
jle
pusha
arpl
movsl
xor
inc
sub
aaa
sbb
out
jbe
sbb
and
mov
js
lock
cmp
push
cli
push
inc
cmp
jecxz
pusha
add
xchg
aad
imul
push
mov
adc
pop
out
cmpsb
or
pop
rcrb
and
lods
inc
cmp
xor
sbb
mov
pop
or
mov
loope
insl
mov
add
mov
test
adc
mov
mov
aas
push
and
lcall
add
clc
lods
sbb
cmc
pop
sbb
push
mov
loop
and
xchg
pop
cmp
xchg
inc
test
shr
jbe
std
pop
stos
arpl
pusha
or
stc
cmp
int3
je
rcrb
mov
dec
outsb
andl
push
push
mov
jmp
push
nop
and
mov
ljmp
faddl
inc
and
mov
push
and
add
dec
aam
sbb
pop
xor
icebp
shll
icebp
adc
jb
data16
push
mov
leave
jns
mov
adc
fwait
cmc
pop
ljmp
jb
mov
test
in
sbb
push
out
fsts
mov
push
jns
bound
push
jne
mov
and
out
jno
mov
les
lcall
repz
dec
jo
lea
pushf
sub
loopne
stc
cmp
loope
ret
inc
mov
and
loopne
out
into
iret
sbb
cmp
rorl
jo
add
ret
repz
xchg
addr16
adc
cmp
mov
sahf
mov
xor
or
adc
add
movsb
mov
leave
sbb
jnp
push
dec
enter
sub
aas
pop
aas
dec
push
mov
test
xchg
push
test
push
jae
lret
mov
xchg
xchg
mov
test
cmpl
adc
lahf
clc
dec
imul
movsb
mov
cltd
cmp
xor
dec
push
jae,pt
jp
dec
leave
xchg
sub
lcall
imul
sbbb
sub
dec
inc
daa
ljmp
data16
mov
push
push
dec
jno
mov
cmp
sbb
sbb
inc
xchg
icebp
pop
and
xchg
sbb
sub
loopne
xchg
pop
inc
cmp
sbb
dec
std
out
push
cmpsb
mov
add
js
pop
loope
int
in
insl
fs
dec
test
mov
leave
add
jmp
leave
data16
mov
xchg
repz
scas
sbb
pusha
inc
aam
mov
adc
scas
sbb
sub
cwtl
lods
arpl
push
push
jns
mov
int3
mov
pop
adc
pop
je
shl
mov
jp,pt
das
jno
imul
cmp
dec
pop
subl
das
pusha
xor
sub
xchg
in
fwait
or
testl
int
popa
push
add
sub
sub
jmp
les
outsl
ficoms
fiaddl
pusha
mov
sbb
cmp
cmpsb
cld
jmp
xor
sbb
xchg
pop
pop
movsl
push
push
jb
int3
mov
ljmp
add
repz
or
and
mul
lods
jle
mov
push
add
jae
push
sbb
je
imul
stos
call
int3
pusha
pop
adc
mov
inc
sub
subl
sub
or
inc
and
jae
andb
scas
adc
mov
dec
mov
ret
test
clc
stos
sbb
nop
jmp
fistl
push
popa
jns
xchg
push
or
dec
daa
enter
and
shll
aam
add
test
pop
mov
add
push
rcll
insb
scas
sbb
pop
and
lods
lods
enter
movsl
lds
arpl
push
dec
lret
imul
rol
rolb
or
mov
mov
jns
cmp
jne
test
ror
movl
jae
out
dec
mov
fs
loopne
ljmp
dec
or
dec
sub
inc
movsl
mov
or
hlt
jle
xor
jg
jge
popa
add
or
pop
sbb
bnd
call
inc
in
lds
mov
xchg
xchg
push
ljmp
push
push
add
cmpsl
and
push
cmp
xor
mov
jae
cmp
or
out
adc
pop
mov
cmp
dec
adc
stc
or
aas
adc
mov
lods
int
inc
jge
jp
enter
fiadds
jge
roll
add
or
lcall
std
push
xor
or
out
daa
dec
sbb
push
inc
fwait
aad
shl
sub
call
or
ja
pop
sti
add
jno
mov
lods
inc
pushf
lea
add
push
pop
push
pop
bound
mov
fdivs
sbb
xor
stc
cs
dec
and
pop
dec
sarb
jge
fmul
ja
xor
mov
outsl
loope
mov
mov
jne
lahf
nop
repz
sbb
jo
scas
jns
mov
ds
int3
jle
jp
insb
roll
push
loop
cmp
dec
shlb
xchg
clc
dec
jnp
or
inc
aad
loopne
cmc
mov
mov
push
sbb
push
add
out
jmp
enter
mov
cs
dec
out
ss
lret
popa
icebp
inc
fcmove
inc
sbb
test
mov
add
fsubr
mov
daa
dec
popa
push
pop
shrl
fstps
inc
out
shrb
xchg
push
fmuls
add
cld
push
mov
stos
clc
iret
orl
popf
mov
sub
pushl
sub
push
jg
mov
stc
repnz
cmp
into
stc
testl
jno
jae
xchg
add
jno
lcall
adc
test
addb
push
fistpl
aad
test
cmp
gs
or
int
sub
dec
shlb
sbb
shll
mov
xchg
push
sub
cli
nop
pop
add
fwait
dec
or
nopl
sbb
push
pop
xor
cmp
cmpsl
icebp
mov
or
mov
push
add
sbb
mov
int
pop
shlb
fucomp
movsb
iret
out
mov
xchg
int3
mov
mov
leave
cmp
int3
dec
ffreep
inc
inc
int3
dec
int
stos
dec
xor
pop
dec
je
repnz
stos
push
add
mov
add
mov
pop
jmp
in
aas
cmpsb
lock
daa
fdivl
pop
mov
nop
mov
cmp
je
or
aad
mov
fcompl
pop
cmc
push
and
pusha
scas
jecxz
sbb
push
int3
jg
push
adc
mov
jecxz
and
arpl
rorb
aam
faddl
repnz
mov
dec
mov
cs
sbb
push
subb
shrb
pusha
in
push
nop
adc
mov
shrl
movsl
inc
and
sbb
sahf
add
testl
sahf
xchg
dec
cmp
int3
inc
mov
pop
js
andb
xor
sbb
mov
subw
push
stos
jne
sbbb
or
scas
aad
daa
xchg
out
or
xor
and
lahf
add
jg
pop
dec
sub
jnp
pop
add
jp
fdivrs
insb
fisttps
in
xor
sub
pop
and
lret
popf
ret
es
add
sbb
lods
cmpsl
and
push
xchg
sub
pushf
dec
outsl
jmp
pop
dec
pusha
orl
repz
dec
icebp
enter
sbb
negl
xor
push
jae
mov
mov
mov
insb
pop
mov
mov
test
cld
outsb
in
and
inc
pop
cmpsb
jno
push
jno
paddd
jge
roll
mov
add
inc
icebp
lcall
leave
stos
das
pop
cmp
test
movsl
clc
lods
mov
repz
jns
ds
movb
mov
push
test
scas
pop
mov
jl
lret
push
fisubrs
inc
fsubrp
in
out
fs
int
mov
inc
jecxz
mov
and
cmpsb
inc
aad
sahf
notl
sbb
addr16
sub
lods
sti
call
sbb
jns
daa
xchg
lods
xchg
cmp
sbb
gs
pop
loopne
lcall
xor
jo
inc
leave
cs
out
adc
xor
push
or
jb
inc
mov
ss
addl
dec
lret
mov
and
jl
cwtl
fwait
mov
loop
inc
lods
aam
jb
push
xchg
mov
inc
shll
out
pop
rcl
mov
add
out
outsb
and
aas
inc
mov
mov
lea
iret
mov
xchg
repnz
in
jmp
pop
stos
pop
fninit
xchg
icebp
dec
inc
stc
pusha
out
mov
or
jle
insb
stos
push
test
xor
pop
inc
in
je
shlb
shlb
sub
in
popf
mov
lods
inc
push
push
lcall
inc
lret
out
pop
jb
jmp
inc
shlb
sub
xor
adc
dec
aam
pop
addr16
adc
pop
arpl
fisubrl
fs
test
hlt
inc
sbb
dec
arpl
in
or
popf
or
xchg
mov
mov
out
xor
ret
adc
jge
mov
dec
lds
or
out
sub
std
xor
jnp
addb
xchg
lret
fs
lret
fwait
xchg
lea
test
and
outsl
xor
jge
mov
mov
dec
dec
or
xor
orl
mov
and
shl
mov
lret
jae
movzwl
sbb
in
mov
aaa
mov
mov
jmp
ret
shr
push
jnp
lods
xchg
xor
xchg
mov
ret
insb
out
pop
out
loopne
push
addl
push
mov
jg,pn
cltd
jl
scas
fcomps
mov
add
add
test
mov
inc
inc
jle
mov
jne
sub
arpl
adcb
jne
stos
imul
mov
dec
push
pop
push
jno
lock
cmpsl
repnz
jl
lcall
mov
xor
xchg
add
ret
jle
jmp
or
or
jmp
test
testb
sub
push
pop
push
and
cmp
cmp
out
add
clc
xor
loopne
xor
and
lahf
jb
xchg
push
mov
cld
push
sbb
lret
lret
or
lods
push
aaa
cmp
push
jae
mov
test
xlat
pop
sbb
ret
inc
cmp
daa
aad
pusha
loop
mov
sbb
iret
cmp
shl
mov
int3
mov
fldenv
js
inc
mov
fstpl
pop
cs
lret
fistps
push
cmp
bound
mov
push
mov
loopne
subl
jno
pop
cmp
adc
add
add
pextrw
pop
pop
add
ds
pop
push
shr
jp
mov
scas
aam
mov
pop
mov
or
shl
sub
jp
xchg
sahf
inc
pushf
je
mov
push
mov
adc
dec
lods
std
adc
mov
push
in
jne
insl
shrl
das
mov
xrelease
int3
stos
loop
or
out
pop
das
sbb
mov
adcb
xchg
int3
lcall
in
filds
lea
push
ret
leave
mov
repnz
test
lods
push
into
xchg
cmpl
ret
in
mov
into
mov
test
fldl
sub
cltd
imul
push
iret
mov
jno
rcll
cli
fwait
inc
popa
adc
in
shl
es
dec
cli
ja
mov
pop
aam
cmpsb
sub
jns
mov
cltd
inc
inc
xor
in
pushl
mov
flds
adc
mov
aas
lahf
in
pop
rcr
and
popa
icebp
jle
mov
dec
in
push
sbb
inc
arpl
or
sbb
add
imul
sti
or
xchg
mov
les
mov
iret
sbb
xor
xchg
jmp
cmpsb
mov
xchg
dec
jmp
cld
add
mov
jns
scas
and
jne
imul
int3
jg
push
jne
sub
out
ljmp
out
loope
adc
aad
loopne
roll
das
add
xor
ret
adc
ss
mov
movsb
test
sub
sbb
call
lcall
incl
sbbb
test
out
xchg
clc
or
movsb
mov
hlt
pop
mov
sub
decl
sub
sub
in
jnp
jo
mov
or
ds
sbb
adc
dec
mov
stos
cmp
clc
mov
sbb
shlb
cmpsb
or
mov
shrb
cltd
mov
aaa
mov
xlat
int
mov
lock
pop
inc
std
sbb
imul
mov
and
jg
push
pop
xchg
xchg
gs
loop
cmp
dec
pcmpeqw
int3
sub
mov
add
pop
xor
dec
inc
pusha
jge
iret
sub
jns
andb
gs
xor
sahf
int3
stos
fucomip
arpl
stos
shr
adcl
sahf
jge
push
decl
jmp
leave
mov
or
push
jecxz
nop
cmp
icebp
loop
jbe
arpl
inc
mov
push
cmpsb
cli
loope
cwtl
mov
and
idiv
or
pushf
xchg
dec
fcmovnu
jg
adc
test
cli
ja
lcall
in
mov
and
jge
dec
clc
push
mov
dec
dec
clc
sub
in
pop
push
mov
mov
sahf
lcall
int
add
xchg
out
or
dec
push
xchg
shll
sub
sub
imul
inc
fidivs
daa
adc
pop
xchg
jge
mov
mov
sti
les
stos
les
xorl
outsl
clc
xor
pop
pop
ss
inc
dec
test
cmp
mov
mov
call
jae
add
repz
mov
mov
rorl
add
fbstp
cmpsb
addr16
mov
dec
sarl
arpl
add
les
jge
jb
stc
cmpsl
and
xchg
mov
addr16
mov
jge
stos
push
shlb
dec
in
jp
jns
and
adc
lcall
mov
inc
call
inc
mov
push
or
cltd
jns
push
es
dec
cmp
or
rcl
jmp
pop
js
ret
mov
jno
mov
sub
rcr
dec
or
fistps
subl
std
loopne
pop
jle
mov
loope
movhps
add
scas
fwait
xor
xchg
mov
es
leave
xchg
ja
sub
stc
xchg
adc
test
xor
inc
mov
aam
sub
jns
sti
sarl
adc
jl
fldt
push
push
scas
aad
dec
jg
xchg
sub
rolb
mov
pop
fwait
mov
add
xchg
sbb
pop
daa
imul
pop
cmp
cltd
sahf
sbb
fwait
xchg
stc
test
cmp
ljmp
xor
inc
pusha
xchg
fnstsw
negb
pop
jge
push
or
and
mov
clc
adc
mov
or
mov
jge
lret
shrb
data16
inc
adc
cmp
jp
insb
into
leave
cmc
leave
nop
mov
cltd
pop
mov
xchg
movsb
mov
mov
imul
inc
pop
cli
dec
jbe
loopne
push
cmp
or
cmp
add
ss
mov
outsb
inc
movsl
movsb
out
mov
mov
fdivrs
xchg
pop
and
mov
mov
cmp
cmp
lock
inc
jbe
imul
dec
stos
sbb
pop
dec
scas
out
scas
addr16
mov
and
cmp
scas
js
add
mov
xor
mov
daa
lock
ret
lret
repnz
push
push
imul
mov
jg
cltd
adc
push
or
mov
push
enter
jne
xchg
and
jae
out
inc
push
lock
mov
xor
int3
mov
and
dec
stos
lods
gs
pop
mov
jmp
out
push
dec
test
movsl
mov
dec
or
nop
je,pt
pop
mov
imul
mov
addb
add
fnsave
imul
adcb
popa
data16
push
sbb
mov
push
mov
enter
dec
das
shlb
add
jmp
loopne
popf
and
sbb
sbb
jo
fdivrp
mov
jo
rorb
or
jl
call
cs
jmp
pop
sub
stos
mov
mov
fwait
pop
mov
ds
iret
jle
mov
and
pop
and
jle
fcoms
rcl
jmp
arpl
mov
lret
notl
ret
dec
outsl
mov
push
out
xchg
mov
int3
loopne
or
pop
sbb
sbbb
sub
sub
andl
and
enter
cmc
cltd
cmp
fldt
aad
ss
sbb
lret
enter
xchg
dec
sbb
mov
inc
scas
cli
loop
dec
leave
lock
dec
pop
icebp
mov
add
add
bound
lods
push
cmp
ljmp
rclb
mov
inc
roll
sbbb
dec
rcll
repnz
add
xchg
pop
push
outsl
out
pop
pop
adc
push
pushf
jno
pushl
rcll
mov
sub
jl
pop
in
sub
shlb
add
in
or
int
call
inc
loope
and
mov
pop
pushf
leave
cmp
dec
je
mov
ljmp
pop
sbb
ljmp
dec
fistpl
mov
clc
ret
xchg
push
sub
ss
xor
decb
or
pop
nop
int
fisttpl
lock
fimuls
test
sbb
xor
outsl
fdivs
mov
xchg
lds
out
bound
aas
in
ftst
clc
mov
jmp
shr
sbb
das
mov
dec
pop
movsb
into
pusha
cmpsl
insb
pop
push
lfs
outsl
adc
jmp
xor
cmp
rolb
mov
xchg
mov
pop
mov
dec
divb
jg
fs
or
mov
add
fcmove
mov
dec
orb
sbb
inc
adc
sbb
mov
dec
jnp
icebp
cmp
repnz
scas
xchg
out
pop
adc
xchg
adc
inc
xchg
inc
add
xor
adc
lcall
jo
push
ljmp
xchg
shlb
mov
ret
mov
push
fsubr
sbb
pushf
pop
lcall
cmc
jg
adc
mov
popa
jp
cmpl
sbbl
add
aaa
or
lds
pushf
negl
leave
cmpsl
mov
push
repz
and
or
inc
addr16
ds
je
mov
frstor
repnz
adc
inc
dec
mov
mov
push
shrl
inc
andb
fsubp
repz
push
les
loopne
cs
dec
nop
fbld
push
imul
lea
sbb
into
mov
push
xchg
loope
dec
roll
into
adc
mov
push
jo
pop
fbld
mov
sbb
sbb
movzbl
xor
ret
mov
fcompl
clc
scas
sbb
mov
or
cmc
repz
mov
loope
jb
adc
xchg
cmp
cmpsl
jbe
jo
adcb
or
movsb
add
loopne
jne
mov
sbb
xor
shrl
mov
lret
cmp
xchg
shll
cltd
mov
ja
xchg
dec
jecxz
dec
mov
mov
and
cmpsl
xchg
fcoms
int
popf
pop
sbbb
dec
bnd
push
shlb
mov
loop
popa
inc
jecxz
inc
test
pop
imul
icebp
in
push
xchg
in
mov
clc
push
sub
mov
stos
les
mov
fimuls
cmp
xor
mov
add
test
adc
imul
cmp
movsl
pushf
cmp
adc
pusha
pop
sbb
clc
inc
in
and
mov
xchg
pop
sbb
jns
or
jle
sub
mov
mov
add
mov
add
insb
sbb
out
pop
addr16
push
aas
mov
bound
lea
push
fisubrl
and
ljmp
sub
jecxz
cltd
pop
mov
repnz
repz
cltd
dec
ss
mov
mov
sahf
repnz
shrb
dec
lods
fisttpl
pop
mov
mov
sti
movsb
loope
sub
ljmp
int
rcrb
jg
std
cmc
add
mov
jmp
in
cmpsl
pushl
ret
lea
enter
stos
jb
add
pop
mov
mov
push
xchg
lret
adc
pop
pop
or
repz
push
divl
data16
mov
lods
mov
or
in
lret
sub
add
test
outsl
fldt
es
sub
or
rcrl
ss
out
inc
dec
pop
ds
std
pop
sbb
fwait
xor
enter
jecxz
sbbl
sbb
adc
push
mov
push
push
sub
dec
push
test
pop
jp
fs
cs
sbb
mov
dec
xchg
xorb
in
cmp
dec
push
clc
mov
std
xor
cli
shrb
ds
mov
test
pusha
inc
xorb
jl
sbb
das
pushf
sbb
or
cmp
inc
xor
add
arpl
and
mov
mov
inc
lret
mov
roll
inc
cmp
jmp
lock
imul
mov
pushf
sbb
lret
je
add
sbb
bound
cmp
in
aad
and
mov
addl
popa
ss
pop
xchg
add
subl
push
dec
jl
add
pop
push
sbb
lret
sbb
cmp
in
imul
sahf
shlb
dec
jbe
es
mov
decl
dec
inc
mov
jo
icebp
cs
cmp
std
dec
cmpsb
movsb
pop
dec
push
push
das
or
test
std
sbb
mov
scas
pop
into
xor
add
sahf
sbb
and
sbb
fxch
aaa
es
push
fistps
int
and
xchg
ja
sbb
adc
mov
imul
push
std
push
adc
ret
repnz
mov
ds
push
imul
fidivs
fs
cmp
addb
fiadds
push
cmp
adc
cmp
jnp
pop
mov
fbld
xchg
sub
pop
fiaddl
loopne
dec
mov
and
shll
or
iret
sbb
ret
mov
dec
imull
pop
inc
jmp
mov
test
lahf
in
das
adc
push
cli
dec
jnp
add
cmp
scas
test
stos
cmpsb
dec
xchg
cltd
clc
adc
inc
xchg
cwtl
ret
mov
adc
inc
jo
test
or
and
mov
insb
out
xor
inc
test
aas
jns
jmp
sbb
sbbb
mov
imul
lds
inc
cmp
test
and
mov
jp
mov
sti
dec
inc
es
cmp
pop
jbe
jmp
and
fisttpll
xlat
jno
repz
hlt
push
scas
jge
cmp
inc
xchg
lock
stos
aas
mov
shll
stos
cmp
xor
iret
mov
xor
ss
sbb
ret
dec
add
pop
push
jmp
adc
inc
push
dec
mov
mov
rclb
inc
adc
and
fidivrl
lods
sub
add
mov
jbe
loopne
aad
mov
adc
shlb
adc
push
dec
mov
ds
mov
lds
dec
mulb
int3
add
jle
mov
mov
lcallw
insl
lods
jne
pusha
adc
pop
leave
pop
stos
test
mov
sbb
pop
test
fisubl
lahf
sub
fstps
into
xor
ret
imul
cmp
andl
fdivrs
pop
arpl
inc
mov
scas
adc
ss
jle
cmpsl
into
loope,pt
faddl
mov
xlat
adc
cmp
jno
adc
or
out
and
add
jg
cmp
sbb
iret
jo
and
add
push
cmpsb
mov
repnz
fmull
adc
dec
arpl
xchg
fnstsw
scas
dec
cmp
push
mov
or
insl
cltd
mov
jae
jle
and
adc
pop
das
out
mov
mov
imul
add
int3
jmp
aaa
aas
fs
pop
ds
imul
popa
jecxz
mov
in
fbstp
mov
inc
or
scas
mov
dec
repnz
sub
lahf
aaa
dec
push
lret
out
jae
rcll
ret
inc
or
loop
sub
dec
mov
pop
and
xchg
jnp
dec
popa
ja
push
out
or
and
std
and
int3
movsb
dec
lods
stos
add
adcl
or
jae
fistps
xlat
fxch
inc
jnp
icebp
ret
jge
lcall
mov
mov
popa
add
mov
jge
pop
dec
fisubrs
rclb
cltd
dec
mov
pop
push
mov
mov
adc
xchg
adc
stos
std
cwtl
fiadds
cli
adc
movsb
xor
dec
cmc
add
movsl
lcall
push
pop
jbe
push
sbb
sbb
jb
adc
jmp
push
or
or
subl
outsl
jp
sub
clc
push
inc
jmp
testb
fs
jbe
mov
jecxz
and
mov
or
lcall
ja
pop
or
sub
jmp
out
repz
sub
xchg
out
lods
out
cmp
sqrtps
insl
imul
ret
pop
pop
push
ja
popf
lods
add
cltd
insl
and
or
sub
inc
sub
push
sbb
inc
mov
jp
cwtl
cmpsb
popf
push
mov
loop
and
scas
dec
leave
inc
ja
test
mov
mov
sbb
outsl
hlt
push
clc
testb
iret
and
pop
mov
xor
or
lret
int3
pop
mov
enter
mov
rclb
jno
pop
je
pusha
or
stos
or
pop
addr16
or
test
pop
sbb
mov
enter
clc
adc
xor
push
idivb
into
push
aas
jo
dec
ds
and
clc
je
add
ljmp
inc
adcb
adc
mov
add
dec
fdivr
mov
test
cld
loopne
mov
scas
xor
lea
mov
fdiv
test
fnstsw
pop
or
inc
repz
sub
sub
lds
xorl
xlat
dec
xchg
lods
iret
sbb
in
mov
inc
es
xlat
daa
cmpsb
push
cmp
dec
mov
jle
rclb
push
fiadds
pop
incl
out
pop
cwtl
mov
shlb
xor
fdivl
sub
jno
push
sub
jp
loope
int
pop
sbb
or
xchg
bound
and
jae
test
inc
loopne
scas
mov
adc
ret
inc
fcmove
and
fdiv
cli
repnz
cmp
out
push
lret
mov
xlat
fs
dec
andb
mov
mov
leave
icebp
mov
adc
out
sub
or
iret
fsub
or
push
sub
mov
aad
or
jecxz
stc
jb
pop
jl
loopne
xchg
cld
pop
mov
cli
out
or
push
mov
aaa
pop
xor
pop
cmp
pop
sbb
dec
or
mov
xchg
add
pop
mov
cld
push
mov
insl
sub
pop
push
dec
bound
outsb
jmp
jb
xchg
inc
xlat
dec
add
mov
fldenv
push
or
push
sub
ljmp
push
push
push
inc
sbb
xor
pop
test
int3
push
inc
cwtl
int3
or
xchg
dec
xchg
sub
push
test
pop
inc
adc
lea
jmp
add
add
push
pop
push
xchg
jbe
mov
fs
je
mov
loopne
jmp
sbb
cltd
out
int
dec
ss
test
sub
call
jmp
pop
fsubs
add
sub
setg
sbb
out
lcall
sti
pop
mov
jecxz
stc
iret
jge
sbb
sbb
loop
xor
pop
int
lods
sbb
movsb
adc
int
or
loope
jbe
daa
shlb
inc
inc
lods
fisttpll
and
insl
mov
icebp
outsl
inc
cs
loop
mov
out
int
dec
or
or
mov
js
cmpsl
jnp
out
lret
pop
push
aaa
add
xchg
sti
push
fnstenv
cmp
cltd
je
sbb
xchg
add
sahf
cld
aas
push
popa
ja
mov
xchg
jo
dec
xchg
and
push
or
inc
sbb
pop
enter
cmpsl
xlat
loopne
lahf
sarb
sub
jmp
jmp
std
xchg
ret
sbbb
ret
daa
inc
or
jns
lock
xchg
jecxz
mul
xchg
pop
mov
orb
mov
repnz
sbb
fcoml
jno
lret
adc
push
cli
mov
pop
pop
mov
sub
test
loop
lahf
mov
pusha
aas
add
mov
xchg
popf
shrl
jle
jae
imul
cmc
mov
popf
lcall
jb
sub
pop
mov
xchg
add
cmp
and
lods
mov
pusha
mov
xor
push
inc
orb
inc
push
push
pop
mov
xor
dec
mov
in
repnz
bnd
call
clc
and
std
jg
test
pop
scas
and
push
push
aas
sub
rol
adc
fstpt
and
xor
mov
es
into
sub
and
xlat
and
mov
sub
lds
dec
lea
mov
or
test
scas
mull
xor
clc
jnp
jae
je
inc
negb
xor
mov
iret
out
test
mov
cmp
mov
sub
ss
cltd
lea
test
mov
sbb
xchg
and
jo
ffree
jb
iret
mov
inc
fwait
or
pop
xor
stos
sbb
push
decb
lcall
push
enter
cmpsl
mov
mov
or
test
xchg
dec
gs
je
sub
jns
adc
jo
inc
sti
mov
inc
lods
lods
sub
popf
stos
or
inc
mov
ja
xlat
cltd
nop
xchg
cmpsb
in
arpl
shrb
mov
mov
jo
lock
out
into
mov
push
or
flds
pop
fs
enter
fcoml
pusha
push
loopne
jmp
std
sbb
hlt
jnp
mov
push
sub
cmp
std
sub
inc
add
cmp
xor
dec
xchg
or
add
addr16
add
gs
int3
pop
nop
mov
lods
and
mov
ljmp
mov
in
test
dec
out
push
mov
roll
aad
jae
push
outsl
mov
mov
cmc
mov
movsl
icebp
xchg
out
int
dec
outsb
lea
lret
out
mov
mov
adc
add
repz
pop
mov
in
out
pop
sahf
jbe
jb
addb
ja
mov
jge
sti
jnp
mov
mov
imul
mov
lods
andb
inc
mov
lds
out
out
pop
out
cld
mov
or
sbb
ss
cmpsl
jl
xchg
push
cli
jmp
dec
packssdw
dec
jg
decb
ficoml
les
out
int
les
dec
inc
jb
mov
push
mov
out
std
enter
daa
inc
dec
or
pop
aas
xor
aam
ja
adc
lock
or
add
lcall
mov
scas
test
and
add
in
rorl
lods
pushf
xchg
cmp
inc
cmc
jno
sbb
cmpsb
cmpsb
jne
ss
dec
mov
in
mov
insb
stos
and
repnz
shl
mov
sahf
mov
jnp
mov
jg
mov
sub
inc
mov
movsb
enter
lret
pusha
addr16
sub
out
daa
adc
pop
xchg
mov
jo
andb
mov
gs
stos
xchg
jg
mov
pop
cmp
and
sbb
test
dec
ds
sub
xor
insl
and
add
cmp
dec
pop
hlt
outsb
popa
data16
pushf
jne
outsl
jge
xor
push
and
rcll
and
cmp
cmp
cmpl
leave
mov
imul
adc
leave
pop
mov
fidivs
adc
mov
sub
ljmp
jnp
aas
test
mov
xor
loop
insl
rorb
mov
mov
aam
fwait
xchg
imul
outsb
jle
test
xchg
popf
jns
jno
lds
jo
jmp
mov
push
jae
cmp
xchg
mov
sti
push
lods
adc
pcmpeqw
dec
push
cmpsl
icebp
adc
xchg
xchg
je
inc
loop
jne
jp
hlt
daa
rcll
and
mov
mov
test
mov
jbe
push
sbb
xchg
dec
pushf
add
sbb
incb
dec
xlat
inc
scas
xor
das
cmc
mov
sub
xlat
cmp
dec
leave
pusha
out
inc
mov
or
js
pop
sahf
dec
scas
out
push
in
cwtl
jne
xor
and
push
mov
dec
dec
mov
mov
xor
adc
faddl
sbb
ss
inc
and
pop
inc
mov
leave
pop
fldt
dec
dec
dec
dec
int
jae
mov
stos
add
loop
icebp
dec
cmp
insl
in
adc
fstpl
movsl
cwtl
add
jl
enter
fadd
mov
es
adc
and
push
stos
jno
popf
xchg
lret
pushl
test
adc
inc
ret
ss
mov
fisubl
adc
ja
andl
push
hlt
jns
aas
loop
cli
add
lcall
and
fisttpl
iret
or
jle
cmpl
add
dec
daa
stos
add
inc
xor
mov
add
push
cmp
pusha
cmpsl
push
sti
jecxz
xchg
cwtl
lsl
cltd
dec
adc
icebp
mov
testl
mov
add
mov
mov
and
pop
add
in
push
adc
pop
cmp
xor
rclb
or
iret
add
movsb
rorl
sub
pop
add
loope
cmp
movl
mov
sub
mov
mov
mov
jb
xchg
or
idivb
jge
mov
adc
mov
aam
cmc
pushf
mov
cwtl
ss
es
repnz
cmp
testb
fcoml
mov
enter
xchg
fdivr
push
sahf
inc
mov
dec
sbb
xchg
sbbl
cmp
ljmp
les
mov
dec
xor
pop
repz
push
iret
test
xor
dec
cld
icebp
icebp
cmp
test
shrl
mov
test
jo
jecxz
and
les
push
pop
xchg
lock
add
das
bound
mov
mov
mov
push
pop
add
int
dec
or
pop
rolb
cmp
push
mov
fs
jg
mov
jae
cmpsl
cmpsb
sub
pop
lret
xchg
loope
lret
stos
push
int3
jmp
rcrl
cltd
cmp
adc
and
sbb
mov
ret
mov
add
ficoms
jmp
mov
jo
faddl
movsb
test
cmp
pop
xchg
subl
dec
test
leave
jmp
mov
cs
sbb
mov
fbld
jne
insb
loopne
xchg
xchg
mov
push
icebp
mov
test
lods
repnz
mov
arpl
push
cmpsb
mov
dec
or
mov
call
mov
and
push
pop
notl
ret
xlat
lcall
mov
cmp
sbb
and
inc
cmp
aas
loope
cltd
cmp
inc
cld
repnz
cmp
movsl
dec
dec
mov
jg
pop
pushf
jg
sub
add
jns
add
xchg
xchg
cld
ss
add
cmpsb
or
int
rcll
fwait
cmpsb
jp
hlt
mov
cs
out
cmp
dec
jge
or
adc
test
mov
dec
loopne
mov
scas
cmp
mov
test
push
cmp
adc
loope
scas
mov
inc
inc
and
es
int3
ja
ss
jae
xchg
sti
repnz
sub
mov
mov
mov
jns
loopne
fdivrs
add
cltd
outsb
lods
out
in
sbb
mov
push
mov
in
add
mov
shll
fs
movsb
inc
fldt
dec
out
jmp
adc
lods
xchg
cmpsb
add
push
pop
les
mov
fwait
mov
cmp
iret
loopne
pop
pop
fsubrl
lcall
dec
mov
xchg
xchg
cld
lret
hlt
add
movsb
dec
pop
mov
lret
sub
and
jno
cli
addl
adc
push
mov
dec
fisubs
mov
or
or
test
xchg
jge
in
mov
sbb
mov
xchg
in
sub
add
fsubl
fstpt
jmp
mov
pop
or
leave
fcmovu
pop
scas
aad
jmp
jp
mov
lods
sti
mov
pop
aas
add
and
jno
dec
shll
mov
insl
pop
push
mov
sti
add
jg
push
jno
pop
jo
pop
pop
mov
in
mov
dec
xor
jae
hlt
lods
jne
pop
aam
jno
and
in
xchg
dec
in
or
or
outsl
test
add
movsl
jo
or
adc
or
mov
dec
pop
jne
out
call
push
mov
push
daa
and
adc
push
das
es
dec
push
sbb
jmp
sar
ficoms
mov
icebp
pop
jae
push
sub
xchg
popa
pop
cmp
xor
jecxz
or
stc
jl
jnp
xor
xchg
cli
test
std
imul
jl
dec
popa
test
or
jae
popl
cld
and
fwait
in
pop
xor
pushf
inc
xor
pop
rclb
ds
cmp
je
inc
out
repnz
xor
int
or
bound
and
jge
inc
cmp
mov
or
sbb
adc
hlt
and
jmp
adc
cmp
rcl
cmpsl
add
sub
cmp
lock
mov
cmp
and
fildll
insl
adc
mov
mov
pop
adc
adc
push
insl
das
int
inc
nop
cmpsl
sbb
or
js
mov
sti
lods
incb
sub
lret
popa
cmp
cli
xchg
ss
mov
ljmp
push
cmc
jb
mov
pusha
add
mov
mov
call
mov
test
cmc
adcl
stc
pop
repz
arpl
sbb
imul
iret
scas
addl
jno
or
mov
inc
in
cmpsl
lcall
loop
testb
jmp
jno
test
mov
in
gs
dec
mov
push
push
pop
cmpsl
insb
push
push
outsb
or
movsb
jge
in
scas
add
xor
adc
negb
rclb
subl
cld
inc
add
or
add
xchg
ljmp
cmc
addr16
cmp
shl
aam
jbe
xchg
dec
and
mov
xchg
xchg
stos
aad
adcb
sub
inc
scas
cmp
lea
mov
popa
and
fdivr
pop
adc
pop
mov
mov
push
push
mov
test
cld
xchg
push
into
pop
stos
sbb
stc
xchg
cmp
popf
mov
pop
in
popf
or
test
add
mov
push
je
lahf
notb
xor
push
xchg
inc
sbbb
mov
and
pushf
outsl
sub
or
mov
dec
movsl
aaa
push
mov
mov
int
mov
lret
ret
jg
pop
rep
iret
popa
addb
push
xlat
inc
and
xchg
imul
mov
push
adc
out
int
sub
mov
mov
mov
push
jne
sub
mov
faddl
push
add
push
mov
outsl
icebp
mov
sbb
sti
mov
jb
movsb
dec
add
insl
xchg
or
or
fninit
jae
mov
das
ja
fwait
jge
jmp
lods
bnd
push
shll
shlb
mov
dec
jns
dec
or
add
lock
jecxz
and
cmc
cmc
jo
sahf
inc
inc
sbb
add
and
push
dec
jp
cmpsl
xchg
adc
lds
push
mov
xchg
idiv
sahf
pop
mov
mov
mov
pop
cltd
lea
ljmp
and
aad
mov
push
inc
les
insl
mov
test
lock
xorb
sbb
or
jp
mov
or
pop
sub
pop
sub
cwtl
sub
lds
mov
mov
repz
adc
je
fcmovne
push
jb
lret
jns
add
aam
fildll
sahf
in
fmuls
push
mov
push
mov
ret
push
or
cmc
pop
adc
fnstcw
repnz
clflush
xchg
popa
arpl
jg
adc
das
sub
cmp
and
mov
xor
cwtl
xchg
jle
js
sub
mov
lahf
mov
adc
jno
mov
fadd
mov
jmp
cwtl
test
sbb
jb
cmp
loope
mov
or
cmp
and
pop
xchg
lahf
lock
nop
mov
xchg
and
test
inc
sbb
in
cmp
fwait
dec
sbb
adc
push
std
les
fsubrs
pop
add
mov
xor
fwait
clc
call
lret
mov
into
icebp
fs
scas
imul
xchg
in
mov
mov
movsb
ja
leave
lcall
and
cmp
mov
sbb
jmp
imull
xchg
inc
pop
push
lcall
jno
sbb
mov
data16
jbe
dec
hlt
je
xchg
jne
les
inc
iret
mov
repz
and
mov
sub
idivb
jns
dec
cmc
fcoms
outsb
repnz
idivl
and
into
aas
fld1
test
icebp
aad
sub
xchg
movsl
movsb
ljmp
mov
xchg
pop
xchg
xor
out
dec
and
jo
cmp
mov
sub
jle
stc
lock
rcrl
jmp
and
mov
mov
jge
dec
mov
icebp
enter
dec
mov
in
lds
jae
das
mov
mov
data16
inc
and
iret
pop
test
jnp
inc
jle
sbb
mov
sub
repnz
in
pop
jne
cmpsl
jl
xchg
es
jg
les
cli
xlat
cmpsl
mov
mov
and
adc
js
fs
sbb
mov
test
or
into
in
jecxz
loop
lcall
push
cltd
push
jle
cmpsb
xchg
sub
xchg
inc
mov
enter
ljmp
fcompl
inc
push
and
imul
sar
mov
add
inc
movsb
mov
mov
lret
mov
test
lods
dec
hlt
dec
imul
xchg
movsl
imul
sbb
sahf
mov
stos
mov
mov
lret
ret
jbe
std
pop
adc
cmc
das
xchg
push
fcompl
jbe
shlb
pusha
cmp
push
out
test
push
cmpsl
ficompl
xchg
pop
lds
jnp
and
jl
push
push
mov
enter
mov
inc
jns
rcr
dec
add
dec
arpl
jg
insl
jecxz
push
into
adc
sbb
adc
test
loopne
push
add
addr16
es
cmp
cmpsl
dec
outsl
ds
and
aad
xor
gs
push
gs
or
popa
mov
lds
dec
loopew
fidivl
mov
in
add
fistpll
loop
adc
inc
pop
sub
push
jmp
in
mov
imul
or
les
pop
loope
mov
sbb
mov
xor
xchg
shll
fsubrp
push
push
inc
push
js
daa
das
sti
dec
les
adc
sub
icebp
and
ret
popa
mov
cld
xorb
xlat
sbb
stc
xchg
je
or
pop
jno
push
push
mov
jo
fld
and
or
inc
jmp
sahf
hlt
ss
jl
pop
addl
lret
cli
push
push
daa
mov
jg
xor
pop
shll
pop
xor
loopne
stos
stos
fisttpll
leave
notb
jns
xor
icebp
mov
divb
les
dec
scas
mov
outsb
shr
setnp
pop
inc
pop
imul
mov
ret
test
movsl
sub
sub
les
mov
in
add
jne
xor
cmp
dec
add
sbb
ljmp
pop
or
mov
insl
adc
sar
inc
cmpsb
and
inc
fdivrs
jl
mov
dec
insl
rcrl
jae
fdivl
dec
mov
xor
mov
fistpll
popf
mov
shll
xchg
cmp
sbbb
inc
mov
jne
jo
roll
bound
mov
js
and
lds
inc
xrelease
shrl
push
jne
testl
and
in
clc
jg
stos
or
ret
xor
lock
mov
std
aam
sbb
movsb
jl
jb
ljmp
into
xchg
add
xchg
dec
mov
pop
xchg
push
aaa
aaa
dec
aam
push
arpl
in
push
and
andb
cmp
sbbb
lcall
out
pop
xchg
arpl
aas
fcompl
lahf
lds
mov
shr
xor
push
or
sbb
fisttpll
cmp
sub
mov
mov
pop
sarl
and
stc
or
sub
mov
iret
ss
lahf
sub
cmc
jle
xchg
test
loopne
adc
add
xchg
lret
and
inc
mov
lahf
repnz
push
dec
mov
aaa
in
sbb
xor
call
out
movsl
stc
iret
mov
cmp
inc
mov
ljmp
dec
push
jb
pop
fs
insl
mov
xor
lods
imul
mov
mov
cltd
dec
imul
xchg
call
add
mov
dec
cltd
xor
dec
leave
ds
lret
mov
cmp
shll
lds
out
pop
mov
mov
ja
div
dec
jmp
dec
test
mov
mov
xchg
dec
dec
xchg
loopne
mov
in
iret
lret
and
mov
jnp
les
cmp
push
sub
xor
push
pop
int
lods
ret
int
inc
inc
mov
gs
mov
repz
and
daa
mov
stc
fwait
push
xchg
icebp
nop
mov
mov
jg
push
and
sbb
clc
push
and
mov
lock
out
adc
fwait
out
sar
clc
push
cmp
push
or
mov
jne
mov
fiadds
adc
xchg
xor
cmp
ret
inc
lcall
lods
lret
addl
pop
cld
mov
xor
mov
xor
notb
jmp
out
jne
mov
or
mov
popa
mov
xor
pusha
jl
xor
lahf
xchg
leave
inc
or
inc
jge
les
jnp
int
addr16
ljmp
sub
push
mov
inc
popa
push
mov
xchg
xor
movl
inc
cmpb
lds
lock
clc
shrl
into
xor
jecxz
in
xlat
inc
repz
jbe
fcmovbe
xchg
add
fsubs
mov
xchg
cmp
test
sbb
and
push
pusha
dec
repz
js
lock
mov
sbb
jle
inc
inc
dec
dec
mov
repz
lods
addr16
pop
in
ret
movl
outsb
ret
cmp
jne
and
pop
xchg
jb,pn
test
mov
dec
sbb
out
xor
dec
dec
push
pop
and
vmovhps
fldenv
cmpsb
loopne
fistpll
aam
sbb
mov
jge
sub
xor
mov
mov
ja
add
cmp
lock
mov
mov
add
and
jle
and
sub
lret
push
mov
mov
mov
icebp
test
xchg
in
or
and
cmpsl
sbb
lds
shll
and
or
push
gs
push
mov
xchg
xor
jns
sbbb
xchg
arpl
js
mov
loope
sub
mov
jb
lahf
cmp
hlt
push
dec
in
sbb
push
imul
rcr
in
gs
out
mov
pushf
lods
fnsave
lret
xrelease
mov
iret
inc
repnz
mov
pop
call
push
dec
dec
ds
sub
fsub
out
pushf
sbb
push
or
push
push
mov
rcll
out
outsl
jp
push
sub
sbb
cmp
sbbl
xchg
in
and
mov
fmulp
cli
pusha
inc
add
dec
push
mov
test
mov
jg
mov
jecxz
arpl
xchg
ret
mov
out
lret
dec
mov
sbb
daa
std
aam
inc
push
mov
push
incb
mov
dec
add
mov
dec
lea
nop
aaa
popf
mov
adc
mov
inc
sbb
clc
jb
mov
daa
xor
pop
pop
ds
sahf
in
and
pop
ja
and
insl
sub
addr16
mov
cli
js
xor
test
xor
sbb
in
sbb
test
into
mov
aad
jmp
cld
mov
and
mov
inc
push
xor
push
push
pop
sbb
mov
jbe
jg
mov
pop
jo
std
cmp
xchg
sti
fimull
add
mov
mov
sti
add
mov
cmp
outsb
lea
int3
outsl
adc
mov
and
push
insl
inc
rcrl
out
cmpsb
dec
clc
jns
dec
add
decb
std
or
test
xor
xor
cli
int3
adc
mov
and
mov
ja
or
sub
insb
je
stos
pinsrw
daa
imul
mov
push
mov
test
sbb
inc
inc
jns
inc
sbb
test
sahf
mov
xor
cmp
lret
dec
cwtl
ret
mov
test
xlat
mov
mov
add
rcrb
cli
mov
arpl
push
mov
movsb
pusha
and
add
sbbl
pusha
aaa
jo
cmp
popf
rclb
pop
add
xor
and
dec
insl
aad
arpl
pop
into
loope
jns
sbb
sbb
jbe
insb
mov
cltd
fdivl
xchg
mov
lods
sbb
and
mov
cmp
lds
push
push
adc
xor
jle
adc
sub
pop
loop
mov
fistpl
sbb
xchg
fadds
nop
in
loop
sti
ficoms
imull
repnz
movsl
xor
xchg
shrb
aam
pminub
mov
mov
daa
mov
dec
sahf
dec
fsubs
and
mov
and
hlt
xor
out
adc
lret
mov
pop
loopne
loopne
cmpsl
out
test
fdivr
add
inc
mov
dec
or
push
xlat
bnd
test
adc
jo
sbb
add
mov
mov
imul
clc
fistl
cmp
test
mov
mov
out
push
in
mov
adc
sbb
outsb
loopne
dec
jmp
std
inc
imul
or
sub
mov
les
cmp
lcall
jmp
sub
js
add
mov
push
xchg
adc
add
fnstsw
sbb
cmp
pop
push
mov
out
sbb
cmp
mull
dec
popf
dec
aaa
arpl
and
popf
cmp
cmp
insl
dec
cmpsb
fldl
repnz
lcall
adc
je
cmp
negb
and
or
lds
hlt
cmp
stos
push
cmp
xchg
cs
popa
inc
je
mov
or
sub
lea
cmp
mov
xchg
mov
xor
xchg
sub
leave
jns
inc
in
popf
xchg
stc
fnsave
test
cmp
lahf
into
in
daa
push
mov
ljmp
shll
mov
and
hlt
pop
dec
sarl
pop
stos
or
xlat
cmp
je
outsb
jo
mov
iret
and
imul
push
push
sbb
dec
es
icebp
pop
mov
imul
sbbl
inc
dec
std
xor
mov
shl
ds
icebp
sub
and
mov
gs
cmc
lods
pop
mov
test
jmp
cmpsl
or
xchg
cmp
in
shl
and
into
lcall
shl
fs
mov
jnp
sbb
test
movsl
and
push
in
pop
jmp
dec
bound
inc
jl
xor
mov
clc
mov
dec
lcall
ret
or
sub
jbe
cwtl
pop
xor
mov
inc
jb
dec
mov
idivb
xchg
and
add
cwtl
jp
mov
dec
test
dec
into
sbb
inc
mov
mov
inc
add
pcmpeqb
xor
mov
addr16
mov
xor
movb
jne
daa
mov
dec
fnstcw
sub
je
push
xchg
fdivr
mov
ss
pop
mov
sbb
cltd
inc
push
pushf
scas
xlat
fstl
dec
popf
mov
jg
ret
xchg
shrb
lods
je
cwtl
outsl
mov
cmp
aaa
outsb
push
lock
rcrb
test
sbb
mov
insl
repz
push
jbe
jecxz
jecxz
rcrb
mov
cltd
pop
arpl
aas
rcrb
mov
lcall
pop
and
fucom
cs
xor
frstor
push
cmpsb
push
sub
mov
fstp
pop
scas
test
mov
sbb
mov
out
sub
push
inc
mov
int
test
inc
int3
lret
fiaddl
hlt
xor
dec
das
decl
aaa
adc
pop
enter
cmp
push
pushf
mov
inc
ret
mov
ret
xchg
xchg
add
aaa
adc
fwait
add
dec
int3
and
in
and
lret
add
ja
cmp
xchg
mov
push
jb
pop
pop
xor
xchg
popa
stc
mov
aad
jle
push
cld
shlb
push
dec
push
push
xchg
loopne
arpl
mov
pusha
or
sub
inc
xchg
cld
and
pop
push
leave
rclb
inc
pop
les
enter
hlt
cmpsb
into
add
or
lcall
mov
mov
test
lods
push
cmp
add
push
push
in
lret
jo
cwtl
cmpsl
loop
lods
sbb
ljmp
jnp
mov
mov
icebp
out
mov
loopne
inc
inc
jecxz
push
je
mov
stc
shlb
mov
inc
xchg
cmpsb
imul
call
adc
andb
out
adc
imul
xchg
jnp
pop
pop
addr16
idiv
jmp
imul
sub
jecxz
add
aaa
sbb
pop
rcll
xchg
aam
shrl
or
testb
fldt
mov
std
pop
iret
data16
lds
hlt
or
push
dec
ds
push
cmp
xor
lods
add
insl
fldcw
jl
ficoms
test
push
sbb
pop
popa
xor
jbe
ror
push
imul
sub
and
dec
mov
lret
lcall
addb
jns
idiv
add
sub
fnsave
movsl
push
cmp
cmp
or
test
outsl
jnp
jns
push
pop
stos
aad
mov
mov
pusha
rorl
cmp
inc
jl
es
pusha
xchg
mov
imulb
xorl
add
lcall
pop
ja
int3
pop
or
aas
roll
inc
hlt
out
xchg
inc
pop
inc
movsb
sbb
test
shrl
pop
mov
sti
sub
dec
mov
jb
cmp
fsts
ret
and
dec
out
push
adc
aad
cltd
stc
jbe
pop
test
jge
or
shrl
mov
fwait
shlb
jae
xor
dec
lock
pushf
mov
inc
fstps
addw
fbld
inc
popa
into
mov
xlat
inc
mov
and
lret
fisubs
test
jbe
push
push
or
into
fdivrs
divl
fsubrl
fisttpll
adc
xchg
cmp
mulb
and
pop
movsb
test
inc
mov
push
adc
or
xchg
cmpsb
mov
pop
mul
mov
jno
icebp
roll
jo
popf
pushf
clc
out
xor
rorb
imul
popa
dec
jp
cmp
lret
cmp
in
sub
push
inc
loop
sbb
xor
faddp
jl
jae
push
insb
out
es
lds
mov
je
mov
icebp
mov
jae
pushf
or
sub
mov
popa
in
roll
popa
pop
flds
push
mov
into
or
or
fisubs
sbb
or
std
aam
aam
and
js
into
fcmovnu
fwait
push
mov
cs
popa
aam
adc
pop
mov
sub
sar
or
call
adc
cld
in
test
bound
xchg
scas
sub
insb
data16
sahf
sub
out
mov
dec
movsb
imul
xchg
cmp
inc
mov
push
mov
pop
push
xor
push
push
mov
mov
fdivrs
fdivs
add
sub
inc
insl
out
rcrb
daa
or
mov
jae
inc
fcomp
in
and
popf
fsubrl
mov
fwait
pop
fisubl
xchg
repnz
or
sbb
sti
jb
mov
and
inc
test
xor
sbb
data16
call
bound
inc
popf
push
fsub
push
mov
adc
cmp
inc
in
test
xchg
pop
stc
xlat
vpaddusw
cld
hlt
aas
cmp
cmp
out
ljmp
xor
mov
fadd
dec
adc
pop
mov
scas
sbb
ljmp
jo
pop
dec
mov
cwtl
mov
pushl
ds
jne
sbb
adc
pop
cli
sub
aam
push
jns
inc
inc
inc
pop
jb
push
xchg
xchg
mov
adc
sub
add
mov
jnp
lds
shl
into
dec
mov
gs
adc
shll
int
jo
sbb
loop
push
mov
out
dec
lcall
sub
daa
sub
push
test
xor
subl
xor
mov
int
out
jle
fiaddl
shl
std
repz
ja
xor
lods
add
inc
mov
mov
mov
hlt
addr16
popf
lods
mov
jg
adc
sbb
mov
sub
cmp
out
adc
lock
pop
ret
outsl
mov
jns
jne
jnp
cmpsb
out
adc
xlat
dec
fildl
jnp
xchg
or
jne
jmp
rolb
push
or
pop
rcr
int
dec
inc
sti
jmp
push
paddb
jp
mov
adc
bound
mov
push
or
mov
push
push
pop
jb
add
inc
imul
dec
addb
out
inc
sti
lret
mov
pop
out
sub
outsl
dec
test
out
xor
stos
lds
popa
cmp
push
lret
sbbb
and
add
pop
mov
outsb
jge
loop
stos
xchg
push
mov
pop
or
or
inc
sub
push
ret
mov
push
popa
out
sahf
in
ficoms
add
fmulp
je
cltd
rclb
jne
pusha
int
jbe
loop
jecxz
test
ret
leave
in
pop
dec
je
cld
std
rolb
popf
fs
dec
dec
loope
scas
add
je
out
add
jle
sbb
aas
pop
jbe
clc
cwtl
inc
scas
inc
add
icebp
sbb
test
lahf
das
mov
push
sbb
hlt
sbbl
clc
pusha
jecxz
cmc
js
aaa
test
jns
mov
push
mov
add
and
cmpsl
les
push
nop
add
std
mov
sbb
loope
ljmp
enter
and
push
aam
inc
inc
fcomps
cld
mov
xchg
pop
mov
push
popf
js
xor
fwait
ret
stos
push
xchg
inc
mov
fdivr
xchg
int3
cmp
aam
test
push
push
arpl
push
lahf
cs
xchg
fmul
lods
xorl
adc
lret
push
out
test
adcb
and
jp
lret
insb
icebp
loope
add
jecxz
xchg
cs
gs
fldl
clc
frstor
pop
jg
loope
lods
sti
testb
or
or
or
sbb
ficoms
xchg
mov
fdivrs
mov
mov
call
jmp
sbb
mov
xchg
pop
ret
cmpsl
iret
push
add
cmp
xor
xchg
mov
insb
inc
por
push
push
pop
loopne
fildl
pop
daa
fisubrs
inc
jno
fsub
push
jno
xchg
popf
fisttps
stc
push
xor
insl
push
and
leave
push
mov
mov
cmp
jbe
daa
push
pushf
nop
in
cmp
sti
xor
fidivl
cld
jg
lret
int3
mov
test
sti
movsl
mov
sbb
sbb
and
xchg
iret
arpl
lock
daa
lcall
push
cs
dec
mov
xchg
sub
jb
loopne
out
dec
push
fcomps
insl
jle
cmp
scas
push
xor
into
gs
orl
and
cmpsb
xchg
xorl
mov
cld
jo
lret
or
pop
in
insl
stos
sub
cltd
inc
fists
jae
jle
mov
lods
cs
sbb
lock
cmp
loope
inc
mov
xlat
data16
fs
adc
lcall
aas
xchg
dec
loop
out
call
and
loop
sub
ret
push
dec
jb
aas
ja
call
dec
int
cmp
jbe
mov
mov
addr16
jno
xchg
notb
xor
rcr
mov
out
ds
filds
inc
pop
sbb
daa
cmpsl
push
ljmp
push
pop
xlat
mov
repnz
hlt
sbbl
rcrl
gs
mov
icebp
popa
push
pop
pop
or
stos
cld
in
leave
or
or
push
lret
push
pusha
push
fwait
add
pop
call
sbb
sub
inc
aaa
scas
dec
popf
push
fisttps
cwtl
xor
pop
xor
hlt
hlt
pop
loopne
stos
mov
lods
jecxz
iret
js
adc
orb
and
lcall
fisttpl
xchg
in
mov
add
enter
test
aam
jae
xor
fcoml
mov
mov
dec
clc
xchg
dec
mov
pushf
lahf
jae
xchg
mov
aad
aas
sar
hlt
icebp
std
xchg
negb
and
dec
mov
popf
jmp
add
popf
insl
std
in
repz
adc
stc
push
int3
mov
sub
mov
and
imul
aas
int
ss
sarl
shrb
xor
cltd
inc
dec
cmpsb
pop
adc
push
in
xor
sbb
mov
cmp
cs
lret
sahf
adc
rcrl
adc
icebp
fimuls
pop
adc
bound
mov
imul
push
xchg
ret
xchg
sub
nop
jnp
sub
icebp
mov
cmp
xor
scas
mov
pusha
aas
scas
mov
lret
mov
repz
cmp
jmp
out
push
icebp
ja
mov
pop
loope
and
pop
and
sub
sbb
std
lret
push
pop
data16
cs
outsl
insl
outsl
or
mov
insb
popf
inc
or
add
insb
push
mov
in
shll
jmp
or
and
cmp
inc
add
mov
sub
jp
mov
cwtl
sub
lods
mov
or
incl
push
mov
nop
mov
std
std
rclb
pusha
pop
shrb
push
jl
mov
shlb
cmpsl
inc
arpl
mov
leave
adc
popf
cmp
sbb
loope
stc
cld
jo
loope
test
xlat
add
xchg
stc
imul
andl
or
adc
inc
lahf
ds
sub
inc
pushf
lods
mov
cmp
or
mov
push
jl
stos
iret
leave
push
daa
mov
sbb
out
ljmp
sti
cs
arpl
sub
iret
lcall
xor
adc
lea
aad
hlt
push
lds
xor
xorb
xchg
fnstenv
push
hlt
cmc
mov
sbb
fidivrl
sub
ljmp
xor
inc
outsl
jae
outsl
je
sub
nop
pop
dec
lods
sarb
dec
ds
mov
xchg
test
in
outsl
iret
cli
mov
sahf
ficoml
jle
outsl
cmc
xorl
xlat
test
xchg
loopne
int3
mov
xchg
mov
lea
loop
pushl
push
negl
mov
adc
xlat
mov
mov
jns
cmp
dec
stos
jbe
in
xchg
push
xchg
jle
out
mov
popa
lea
or
jge
stos
and
adc
inc
faddl
adc
shl
ss
xchg
and
pushf
sbb
and
in
xor
stc
cs
xchg
dec
outsb
pop
xlat
push
loopne
inc
xchg
popf
ss
in
pop
cmpsl
fdivrs
repnz
mov
and
sbb
push
imul
insl
sbb
sbb
cld
in
xchg
lods
and
mov
movsl
test
jb
iret
movsl
adc
pop
cmp
mov
push
es
icebp
and
faddl
test
cmp
pushf
jl
push
jge
xchg
sub
pop
ss
ret
pusha
adc
roll
pop
pop
inc
jg
mov
sti
dec
dec
nop
adc
lds
das
pop
xor
jns
mov
jb
jno
sub
or
inc
rorl
dec
xchg
xorl
in
call
popf
cmp
fnstcw
movsl
sbbl
dec
movsb
lods
dec
shr
xchg
data16
mov
addr16
ss
mov
cld
inc
cmp
dec
test
mov
dec
or
shl
nop
push
daa
std
jmp
and
dec
jmp
mov
push
aas
daa
pop
xchg
and
inc
xchg
mov
push
push
and
add
ljmp
adc
mov
or
dec
testb
mov
jmp
inc
call
leave
movsb
push
adc
pushf
mov
jg
xor
cltd
js
adc
lea
xchg
hlt
pop
inc
pop
sbb
cmp
push
lret
movsl
push
ljmp
ja
inc
push
inc
mov
jo
icebp
mov
or
mov
jecxz
xor
loope
pop
in
xor
dec
and
scas
std
push
sbb
psubb
call
and
xchg
fdivl
adc
out
and
fldt
arpl
sbb
jg
pop
mov
stos
push
repnz
dec
jmp
pop
cmp
adc
rolb
sbb
sub
mov
sarl
loope
stos
js
sub
mov
sub
push
cld
jno
movsl
xchg
mov
cwtl
subl
sbb
hlt
and
pop
jb
lret
add
push
mov
decl
sub
js
mov
lret
daa
xchg
lcall
jnp
outsb
adc
inc
cmp
sub
scas
xchg
and
xchg
movsl
inc
push
mov
xchg
adc
arpl
mov
jne
call
mov
cmc
lds
push
js
rclb
int
jp
nop
add
cmp
scas
xor
int3
ficomps
jns
lcall
pop
stos
pop
arpl
pop
mov
ss
xchg
pop
int3
fists
push
leave
adc
jg
rcll
cmp
mov
mov
pushf
mov
leave
clc
jmp
out
add
rorl
inc
sub
pop
mov
popa
je
pop
mov
dec
push
mov
mov
out
adcl
sub
inc
pop
or
repz
mov
mov
fldl
push
cmp
leave
rolb
jge
lods
loopne
popf
pusha
cmp
outsl
out
aad
arpl
xor
loope
xlat
fs
dec
inc
xchg
sub
popa
lods
in
or
fwait
push
dec
subl
push
and
dec
push
cmp
int
mov
mov
and
cld
cmp
clc
push
jmp
test
pop
adc
cmpsl
pop
test
lahf
rcll
rorb
mov
aaa
adc
daa
repz
das
rolb
cmp
sbb
add
or
popa
jno
jp
inc
xor
dec
pop
imul
mov
dec
inc
sysret
nop
fcmovnu
pop
inc
test
mov
fistpl
or
ljmp
lea
bnd
inc
inc
pop
out
jne
mov
xorb
mov
push
ficompl
test
mov
and
mov
dec
rcll
ret
inc
dec
mov
jo
test
arpl
stos
sbb
popf
jmp
or
xor
icebp
in
inc
jle
cltd
pop
leave
insb
mov
test
in
sbb
leave
push
push
mov
je
sub
or
fmull
insb
in
push
mov
icebp
lods
xchg
pushf
lods
cmp
mov
loop
pinsrw
cmp
and
int3
or
jo
xchg
daa
or
ljmp
outsl
cld
data16
js
js
xchg
pop
jp
shlb
jl
sahf
mov
or
rcl
sub
insl
jge
sub
leave
add
push
lcall
lret
xchg
and
shl
and
xchg
lret
jmp
scas
or
push
mov
jmp
out
lods
shlb
std
cmp
outsb
scas
nop
jo
ljmp
xchg
jne
mov
pop
out
int3
pushl
cmpsb
test
sbb
xor
and
jge
adc
int
out
test
pop
icebp
int
sub
out
sbb
repz
cmp
fbstp
addr16
or
out
add
repz
add
jmp
cmp
sub
jecxz
fcmovne
out
push
incl
add
scas
mov
hlt
je
subl
in
inc
inc
jecxz
nop
push
jmp
mov
das
icebp
mov
xor
les
iret
ss
mov
std
nop
mov
aad
push
ja
fiadds
lods
xchg
out
sub
adc
stc
scas
push
sbb
or
xchg
cmc
cltd
enter
mov
mov
sub
and
fucomi
popf
jle
dec
mov
rcl
jo
cmp
imul
xor
lret
push
insb
test
invd
xchg
repz
pop
jb
or
mov
pop
mov
cwtl
loop
out
xchg
jne
add
es
cmp
rcl
repnz
mov
and
pslld
leave
mov
out
iret
add
fnstsw
mov
mov
push
inc
es
xchg
int
hlt
testb
xlat
arpl
idivl
pop
mov
es
add
out
push
xchg
icebp
aad
in
imul
nop
push
imulb
ret
mov
lea
cmc
add
pop
jnp
cltd
pop
push
inc
out
pop
fidivrl
iret
xchg
push
int3
mov
mov
enter
jnp
add
fsts
adc
mov
sbb
sub
cmpsl
aaa
or
add
out
cmp
enter
fnstcw
cmp
pop
mov
mov
clc
jg
ds
jb
or
and
inc
sub
icebp
inc
inc
mov
pop
xor
fs
jmp
aam
and
xor
push
jo
mov
fadd
push
popf
cli
scas
cmc
lcall
cld
lahf
movb
add
sbb
sub
cli
rcrb
or
cmpsb
pushf
dec
mov
push
std
push
xchg
push
aam
mov
xor
cmp
imul
sbb
pop
jo
aad
dec
mov
jp
pushf
sub
push
jne
repz
push
add
lret
rcll
adc
mov
sub
push
mov
scas
push
cwtl
pop
dec
cltd
test
adc
test
jb
push
popl
pop
je
dec
and
out
rcll
dec
leave
xchg
add
xlat
scas
add
fmul
test
adc
push
lret
bts
xor
cmc
sub
cs
sub
lods
push
push
enter
dec
push
les
jae
mov
xchg
cld
jmp
cs
flds
pop
mov
jecxz
mov
lock
test
jmp
pop
xor
sub
xchg
xlat
mulb
mov
push
mov
movsb
xchg
sarl
sbb
cltd
js
iret
mov
xor
cmp
loope
xor
jb
inc
pop
sub
test
mov
lret
jb
and
popa
push
int3
mov
cmp
lret
mov
es
xor
jno
insb
clc
cli
add
push
pushf
cli
je
xchg
push
push
mov
aad
jo
test
jg
inc
repnz
xchg
lods
in
sub
fldt
fcomps
js
mov
test
sbb
jg
mov
leave
xor
aas
mov
xchg
fs
aad
loop
sahf
jl
inc
test
lods
popf
xchg
and
icebp
scas
sbb
mov
lret
and
mov
test
fimull
movsb
xchg
add
scas
cwtl
loopne
imul
cltd
rcr
adc
pusha
or
and
pop
mov
mov
mov
add
loope
ljmp
mov
cmp
xor
pop
sti
aam
jno
cmpsl
ret
pop
xor
repz
stc
push
repnz
pop
cli
and
jle
jmp
mov
iret
imul
mov
xchg
or
insl
xchg
inc
data16
outsl
in
sbb
ret
or
sub
push
cmc
addr16
pusha
mov
push
fidivrl
divb
scas
adc
insl
cwtl
mov
int3
push
hlt
ficompl
xchg
jbe
dec
sbbb
cli
arpl
fcmove
cmp
fcmovnb
cwtl
add
or
jnp
fisubrs
dec
jae
lahf
test
hlt
add
pop
mov
movsb
pop
mov
cmpsl
cltd
dec
sahf
lret
rolb
lret
adc
xor
inc
mov
xor
les
cmpsb
sti
clc
ja
scas
push
std
cs
addb
rorl
test
aam
jg
xchg
jo
jne
lds
aas
fimuls
rcrl
xor
sbb
das
and
mov
dec
jmp
xchg
mov
pushf
adc
adc
aam
jle
cmp
sub
sub
inc
inc
mov
fcompl
cmpsb
pop
fistpl
push
mov
lahf
cld
aad
mov
push
shl
fisttps
or
jno
dec
jo
fldenv
sub
pop
inc
cmp
in
add
xchg
in
ret
or
sarb
int
jecxz
insl
push
rorb
fldcw
and
add
lret
in
sub
adc
negl
out
lret
rcr
popf
std
inc
pop
xchg
in
ret
scas
cmp
push
xchg
lret
push
lods
mov
movb
dec
hlt
push
lods
xchg
fs
xlat
scas
jae
add
mov
xor
cwtl
and
jbe
popl
or
mov
pop
inc
or
xor
sub
insb
jl
pusha
push
jp
pop
and
fsubp
jmp
iret
cmc
pop
dec
fs
or
mov
ds
mov
ud1
sti
and
adc
les
jne
mov
jne
cmpsb
add
cmp
mov
pop
mov
jns
dec
cmp
mov
repz
into
popf
ret
xor
outsl
mov
xchg
out
arpl
sbb
ret
sub
mov
fs
inc
sub
xor
insb
fstps
mov
jecxz
imul
ds
dec
inc
dec
je
rclb
adc
inc
aaa
xor
mov
bound
pop
out
push
call
jae
pop
repz
dec
mov
pop
pop
jbe
cmp
outsb
mov
leave
loop
push
repnz
mov
mov
notb
push
xor
imul
cmp
subb
loop
and
in
xchg
mov
xchg
cltd
sarl
nop
push
iret
mov
sbb
imul
adc
jo
jnp
ret
mov
pop
or
and
and
out
push
nop
fcmovnb
popa
int3
xchg
mov
xor
pop
jge
jnp
pop
mov
xlat
mov
fsubrl
lock
xchg
test
mov
jmp
and
fwait
xchg
mov
pop
movsl
icebp
xchg
xor
cld
lcall
test
or
lret
daa
mov
mov
mov
mov
nop
sti
addr16
pop
leave
jge
ss
dec
out
mov
jl
push
adc
lea
aaa
insl
push
das
or
imul
add
out
jge
and
cmp
aad
test
cmpsb
aam
inc
into
jecxz
loopne
cltd
mov
jbe
sbb
xlat
nop
xchg
aad
sbb
sbb
adcb
lahf
popf
add
mov
or
jno
or
dec
je
dec
jno
movsb
fimull
xchg
adc
sbb
inc
push
mov
cmc
cmp
arpl
and
shlb
push
push
mov
test
xor
jl
jge
shrl
out
icebp
imul
dec
push
pop
cmp
xor
pop
dec
mov
mov
mov
jno
stos
in
mov
cmp
xchg
fcomps
lret
rclb
outsb
in
pop
push
and
pop
sub
fistpll
xchg
shlb
es
test
adc
jo
loopne
je
aaa
xor
push
mov
pop
int3
cmc
and
pop
jp
xchg
inc
dec
js
mov
pop
rorl
divl
outsb
mov
mov
lock
sbbb
mov
xchg
fiadds
jnp
mov
push
repnz
pusha
rcrl
sbb
sbb
fsubr
rorl
jl
imulb
cs
vmread
cmp
mov
fdivl
cs
sub
nop
sbb
mov
in
push
jl
mov
ja
inc
cli
outsl
jmp
sub
adc
push
mov
arpl
or
out
jo
out
xchg
xchg
xchg
or
out
dec
mov
stos
dec
sarb
jp
mov
pop
mov
cmp
ficompl
rcll
mov
jae
aas
mov
outsb
pop
call
stos
push
test
aaa
mov
fiadds
aam
cmpsl
cltd
int
jp
sahf
mov
insb
inc
jge
jae
daa
std
andb
int
rcll
insb
adc
lock
rolb
add
daa
movsb
icebp
test
jle
cmp
jne
imul
or
jbe
mov
sbb
je
add
aaa
leave
inc
js
xor
sbb
mov
and
cmp
and
jo
or
push
pusha
mov
mov
mov
jne
xchg
cs
jge
pushw
jo
rcrl
jno
mov
orl
or
push
addr16
lcall
test
pop
pop
cmp
jno
cmpsl
loop
mov
mov
inc
sarl
leave
mov
leave
je
fwait
and
pop
mov
into
loope
jbe
lahf
loope
add
jo
sbb
mov
aaa
push
push
dec
pop
push
push
ljmp
push
mov
inc
sahf
cmp
mov
test
movsb
fildl
and
inc
insb
repz
gs
pop
jmp
mov
popa
jmp
push
pop
push
pop
or
sub
jp
loopne
test
adc
mov
mov
xchg
repnz
inc
jge
pop
add
pop
mov
jo
int3
sub
test
dec
scas
out
cmp
jb
out
mov
cmpsb
dec
cmp
xchg
into
push
out
scas
xchg
push
and
push
fildl
jp
xor
cmp
jb
or
mov
pusha
mov
lds
jg
in
mov
sub
faddl
movsl
and
fisttps
js
icebp
and
in
xchg
int3
mov
push
xchg
pop
xor
lods
cmp
lods
int
mov
mov
jno
fadds
sub
divb
andb
enter
push
add
mov
cmp
jge
jns
sub
sbb
push
pop
xor
jb
and
or
ror
sbb
sbb
ret
pop
popa
push
les
push
arpl
push
lahf
xchg
aaa
jp
sub
hlt
jnp
loop
mov
mov
mov
jb
test
data16
les
sbb
stc
mov
negl
mov
push
sahf
push
xchg
test
adc
aaa
shll
xchg
dec
inc
insl
pop
or
loopne
cmp
test
fld1
cmp
mov
inc
xchg
push
dec
mov
mov
mov
arpl
dec
or
ror
lret
xchg
shll
add
or
fimull
pop
addr16
xchg
int
in
cld
inc
xchg
lds
push
cmpsb
cli
jecxz
mov
push
sahf
pop
popa
ljmp
inc
stos
ror
out
aaa
stos
jp
adc
push
cmp
inc
mov
test
dec
mov
outsl
dec
ss
xor
aam
xchg
cltd
mov
xchg
gs
pop
lret
mov
je
scas
mov
fstl
dec
js
mov
push
repnz
mov
arpl
dec
mov
pop
sti
mov
int
push
repnz
pusha
mov
mov
pop
enter
inc
and
mov
mov
push
cmp
mov
xchg
push
add
mov
mov
scas
mov
dec
mov
cltd
sbb
int3
inc
cmc
jb
rorl
clc
push
push
lods
add
jne
test
jl
movsl
push
insb
and
stos
adc
call
jnp
adc
jge
out
mov
std
inc
ja
hlt
loop
nop
jnp
or
test
mov
jl
xor
mov
jge
jle
pop
push
mov
cmpsl
mov
dec
test
hlt
aad
into
lods
lret
outsl
mov
push
dec
xchg
jnp
pop
les
imull
dec
and
cmp
xchg
xchg
mov
gs
adc
mov
pop
xchg
aam
lock
les
sbb
pushf
cmp
nopl
sub
mov
lret
bound
sub
xchg
in
jp
add
sbb
xchg
jl
popa
ja
push
lods
and
push
pop
jmp
adc
inc
sbb
push
sbb
repz
push
push
jbe
or
fidivs
mov
not
cmpsb
into
aam
jbe
iret
in
sarb
ror
mov
mov
ljmp
jb
in
add
xor
imul
pushf
bound
ret
loopne
in
mov
in
orl
mov
loopne
subl
mov
jle
leave
cwtl
pop
jl
aas
lock
mov
sub
pushf
bound
or
mov
cld
sbb
mov
fwait
shlb
pop
xor
test
gs
lea
sub
mov
imul
lahf
pop
loopne
jne
aaa
mov
inc
int3
bound
mov
or
loope
jge
dec
jns
ret
cmp
dec
mov
and
xor
hlt
ljmp
int3
adc
xor
mov
int
xchg
lret
push
ret
cmp
xor
add
jg
loope
push
cmp
call
out
and
mov
sbb
into
inc
int3
add
mov
cmp
lods
and
xchg
pop
inc
mov
xchg
jb
decb
mov
das
popf
xor
bound
testl
movb
ljmp
adc
jne
push
mov
es
insb
jae
or
lahf
jmp
xchg
int3
mov
adc
push
cmp
shl
or
mov
imul
push
outsb
dec
movsb
or
and
xlat
push
push
cltd
cmc
mov
inc
out
pop
xchg
sbb
decb
pop
adc
mov
jl
lods
insb
std
std
rcrb
xor
mov
sbb
or
mov
andb
fs
gs
jl
xchg
adc
outsl
pop
jns
loop
rolb
dec
cmc
pop
pop
clc
cmp
lds
add
mov
add
inc
mov
mov
push
cld
gs
sub
adc
pop
out
outsb
cmp
cwtl
arpl
outsl
jmp
movsl
faddl
push
mov
rcrb
xchg
or
push
push
mov
inc
adc
adcl
test
adc
scas
addl
pop
imul
es
imul
repnz
sarl
sbb
or
xchg
rol
hlt
inc
stos
xchg
in
insb
xchg
jp
push
sarb
pusha
lds
cmp
add
dec
addr16
dec
pop
add
cmp
aas
lds
push
shrb
jmp
inc
or
pop
std
mov
int
xchg
xchg
outsb
mov
xchg
clc
and
loopne
pushf
fsub
mov
xchg
pop
pop
in
adc
ret
ljmp
push
shlb
ds
fadd
adc
jge
pop
dec
sbb
stos
imul
jmp
addr16
xchg
push
in
and
jb
mov
push
pop
in
jecxz
mov
sub
pop
mov
popf
mov
es
inc
fnsave
sub
insb
sub
fwait
mov
int
std
faddl
inc
ret
jecxz
pushf
pop
jg
mov
add
pop
sub
jmp
in
xchg
or
dec
adc
stos
mov
and
mov
push
notb
lcall
push
adc
daa
ficomps
int
sbb
mov
sti
insl
mov
push
data16
xchg
out
xchg
int3
mov
and
test
orl
or
pop
fnsave
std
dec
cmp
jmp
add
adc
fbld
jns
dec
jae
arpl
jle
setle
jae
int3
daa
stos
add
jmp
inc
loop
mov
add
adc
popl
mov
cvtps2pd
xchg
scas
idivb
jp
xchg
pop
push
orl
mov
icebp
das
pop
jnp
test
mov
push
dec
jg
sub
cld
sahf
paddusb
and
test
sub
bound
fidivrl
jb
faddp
pop
sahf
mov
mov
push
negb
jecxz
sub
mov
dec
inc
outsl
mov
xor
jne
jno
xor
fs
test
push
mov
and
adcb
bound
mov
adc
jno
stos
pop
shlb
stos
mov
and
in
arpl
clc
out
lahf
pushf
inc
lock
pop
and
mov
lcall
repz
sub
repz
std
mov
shlb
pop
enter
push
jl
push
int
addr16
fucomi
in
mov
in
es
out
xchg
loopne
inc
jg
mov
adc
icebp
add
pusha
in
sbbl
dec
xor
lods
adc
cmp
add
mov
sub
into
sbb
cmp
add
xchg
hlt
aas
sub
pop
adc
sarb
repnz
data16
repnz
sahf
arpl
test
push
loop
jbe
jp
mov
add
xor
push
pop
shrb
imul
xor
testl
or
pusha
aad
mov
into
xor
sbb
mov
sbb
xchg
adc
les
adc
mov
push
xor
push
xchg
jno
js
es
daa
push
cli
xchg
std
fdivrp
pop
cmpsb
hlt
xchg
adc
mov
out
mov
aaa
jecxz
push
out
add
mov
test
xor
jle
sbbb
ja
icebp
mov
frstor
leave
or
xorl
fcomps
mov
add
dec
push
fildl
push
add
push
daa
stos
cmp
sub
and
mov
pop
movsb
cmp
mov
cmpsl
pop
shlb
inc
sub
fs
mov
nop
movsb
je
test
enter
dec
mov
shll
cli
fstl
movl
mov
cmp
aas
push
gs
fstps
lock
sub
adc
mov
out
int3
popf
cmp
clc
popa
lcall
in
push
lret
add
xor
fcmovnu
jne
std
mov
das
or
decl
imul
nop
repz
lds
adc
loopne
pop
dec
mov
lds
or
sbb
xchg
push
arpl
push
sbb
jne
scas
fcoml
lret
mov
and
dec
xchg
cmp
imull
jge
add
adc
repnz
aaa
mov
xchg
jno
cmp
int3
sbbl
jno
lock
ljmp
setle
sahf
lods
sbb
test
sbb
fisttpll
enter
sahf
lods
xor
cmp
fwait
sub
inc
xlat
inc
popf
aas
sub
jnp
sub
fstps
and
push
jmp
xchg
les
shrb
leave
mov
xor
or
leave
sub
das
lock
into
inc
inc
jp
inc
jecxz
mov
std
push
cltd
mov
push
sti
fbld
add
cs
in
shlb
cwtl
jne
les
xor
jnp
mov
jns,pn
and
jae
and
lds
pop
rol
popf
inc
dec
js
push
or
xchg
out
mov
mov
aaa
cmp
sub
jecxz
push
dec
movsb
jecxz
cmp
int
mov
scas
push
push
mov
into
fists
add
dec
mov
rcll
adc
or
je
test
leave
shrb
fstps
mov
xchg
nop
cmp
mov
fbstp
enter
and
or
pop
mov
fisubl
js
leave
xchg
xlat
mov
lret
jbe
dec
sub
ret
imul
bound
out
js
sbb
inc
inc
and
rorb
movlps
adc
sahf
pop
sarb
out
jns
inc
sbb
aas
test
pop
clc
loop
cmc
ss
je
add
clc
aaa
rcll
test
mov
in
or
add
repnz
xor
jae
inc
hlt
pop
clc
mov
inc
jecxz
pop
add
cmp
aad
std
pop
ja
sbb
mov
sbb
rcll
inc
pushl
pop
mov
mov
jno
addb
mov
adcb
jp
jnp
cld
add
push
xchg
movzwl
pusha
mov
pop
push
inc
outsl
je
jl
jmp
inc
mov
icebp
fcmovb
mov
iret
out
and
pop
cmp
jge
fdivr
das
push
fiadds
shll
pusha
cmp
movsl
out
or
inc
pop
dec
mov
mov
xchg
cmp
cmp
dec
scas
lods
out
sub
insb
cltd
add
sbb
xor
inc
push
movsl
shlb
je
mov
mov
jmp
cld
imul
pop
inc
sbb
jno
scas
mov
mov
sub
dec
xor
dec
jecxz
mov
cli
lea
mov
imul
push
xchg
add
jns
and
xchg
mov
pop
rolb
rcr
mov
sbb
fs
xchg
mov
ss
in
das
repnz
in
out
sub
arpl
iret
mov
jo
cmp
fcmovnbe
scas
xchg
cmp
and
lea
xchg
jbe
xor
push
sub
jbe
les
sub
cld
jb
aam
pushf
popa
jb
mov
test
sbb
mov
sub
sbb
test
mov
stc
or
stc
shl
sub
mov
leave
mov
je
out
dec
mov
inc
imul
jns
jecxz
add
call
fnstenv
insb
cmp
jne
pop
mov
xchg
xor
mov
xchg
inc
ss
pop
jmp
repnz
jne
pop
aaa
div
ds
push
pop
sub
inc
mov
push
arpl
pop
sti
pushf
scas
shlb
inc
dec
adc
sti
push
sbb
lock
push
pop
pop
push
cs
cltd
lock
int
decl
in
push
jmp
dec
stos
out
gs
outsb
mov
lcall
out
add
bound
ljmp
xor
xor
push
movsl
in
shlb
scas
addr16
sbb
adc
into
mov
in
jge
enter
mov
and
and
icebp
mov
icebp
mov
outsl
pop
sbb
gs
cli
mov
mov
das
rorl
mov
push
sbb
mov
sbbl
sbb
pop
cmp
inc
push
and
add
jo
in
dec
sub
cwtl
sub
aas
push
in
lea
jno
test
jle
and
jmp
stos
test
cli
mov
cmp
adc
inc
in
pop
cmp
or
aad
es
jns
movsl
adc
mov
stc
mov
pop
push
mov
ret
and
dec
das
out
cwtl
pop
fdivl
bound
lods
inc
mov
rclb
mov
and
int3
imul
les
adc
ret
sub
push
pop
sbb
or
or
jns
aam
out
sbb
fildl
xchg
dec
add
in
out
das
xchg
popf
sub
xchg
cs
and
dec
sbb
push
push
int3
or
insl
jnp
mov
push
ja
pushl
xchg
cmpsl
popa
bound
jno
leave
push
ljmp
xchg
jmp
mov
fisttpll
sbb
sub
jle
stos
scas
jb
cmc
or
popf
sbbl
adc
jmp
fsub
in
scas
mov
call
dec
jge
out
cmp
xchg
lea
sub
mov
xlat
mov
mov
popf
sub
daa
sub
test
shl
dec
js
inc
xchg
test
into
into
ficoml
dec
jbe
scas
dec
or
xor
cltd
cmp
sub
jno
inc
mov
push
dec
repnz
les
rcll
sbb
ss
mov
lahf
les
ds
xchg
lahf
cwtl
cld
insl
enter
bound
pop
js
fprem
je
ljmp
mov
or
repz
das
punpckhdq
gs
std
ret
cmp
popa
aaa
pop
mov
xor
mov
lods
mov
outsb
ds
vpaddusw
stos
out
cmp
sbb
mov
enter
hlt
jecxz
mov
ljmp
mov
mov
in
and
pushw
and
subl
mov
push
out
mov
cmpsl
cmpsb
dec
or
cmc
sub
xchg
mov
bound
inc
loopne
xchg
sub
gs
inc
and
xor
movsl
jle
gs
jae
xorb
pop
test
sub
pop
pop
lds
in
in
pop
and
xor
das
mov
dec
loopne
adc
adcb
add
mov
add
push
sbb
into
andb
fmull
jp
cmpsl
aad
pop
sub
sub
mov
xor
push
xlat
sub
loop
sbb
clc
jg
or
out
ds
fstpl
and
test
lcall
mov
xchg
loope
jge
or
subb
repnz
repz
inc
cld
pop
mov
nop
fbstp
fmull
stos
push
mov
mov
les
jne
jnp
in
and
in
dec
shll
cmpsb
sub
mov
xchg
hlt
je
pusha
push
cmpsl
in
sbb
pusha
in
not
jae
iret
fnsave
dec
sti
jmp
int
pop
mov
imul
cmp
test
inc
sub
movsl
ror
ds
jb
cltd
cld
inc
dec
sub
mov
push
shrb
adc
call
outsl
stos
mov
insb
test
imul
cmp
loope
mov
jge
bound
jecxz
in
mov
jne
mov
ret
inc
mov
je
add
pop
leave
sub
aam
jecxz
call
cmp
mov
add
mov
or
cmp
ret
sub
imul
aam
repnz
mov
adc
sti
xchg
sub
pop
jmp
sti
add
cmpsl
push
les
sub
jnp
fsubr
push
sub
pop
adcb
mov
mov
inc
mov
fs
adc
imul
jl
adc
dec
js
pop
mov
movsl
in
and
cmp
pop
push
pop
and
mov
into
stc
sahf
repnz
lret
adc
stc
add
imul
lods
xor
xchg
jno
dec
hlt
hlt
jle
jnp
ret
xor
test
jecxz
dec
loopne
cli
jne
mov
mov
or
jmp
xchg
test
rolb
push
mov
jo
lret
inc
push
mov
jecxz
insb
jne
lret
mov
call
stc
sub
pop
cmpsb
sti
sbb
movsb
div
jns
repnz
or
push
cmpsl
pop
iret
mov
movsl
jne
jo
arpl
adc
pop
movb
dec
sbb
pushf
fstps
rorl
jl
pusha
or
adc
div
scas
sub
dec
cmp
dec
sub
in
push
mov
cmp
cmp
sbb
or
xchg
jno
xchg
sbb
add
test
push
out
dec
xchg
pop
fcmovnbe
inc
adc
cltd
arpl
push
cmpsl
mov
iret
rcr
out
xor
push
adc
push
fstpl
fs
mov
dec
dec
adc
or
jo
adc
sub
in
scas
cmp
fs
arpl
rol
dec
jmp
push
add
aad
mov
ja
inc
fld
sub
inc
or
insl
rolb
dec
push
xchg
pushf
adc
mov
cmp
and
mov
insb
call
pusha
fld
mov
scas
add
movsb
out
imul
cmpsb
and
mov
lock
rclb
mov
sub
mov
addr16
dec
fisubrs
push
xor
je
lret
mov
pop
jle
jno
jmpw
jbe
mov
mov
cwtl
dec
jmp
clc
ret
xchg
sbb
cmp
into
cltd
mov
jp
xor
and
adc
sub
test
in
lds
sarl
or
jmp
aad
pushf
add
shl
enter
add
test
mov
xchg
arpl
push
or
test
sbb
cli
xchg
mov
mov
mov
adc
out
out
xlat
lds
mov
mov
mov
xchg
mov
sbb
das
or
and
sbb
into
pop
push
fs
jns
lds
ret
push
lods
rorb
sahf
cmp
out
mov
xchg
xchg
pop
push
fsubr
test
shll
cmp
cmp
dec
arpl
js
mov
fs
int3
xchg
aaa
daa
aaa
sbb
pushf
mov
cwtl
cld
mov
out
add
sahf
test
pop
mov
ds
inc
xchg
scas
and
sbb
and
push
lods
stos
fs
hlt
pop
jecxz
add
mov
inc
or
shll
sbb
xchg
mov
adc
mov
adc
mov
fimuls
test
adc
test
std
xchg
sub
pop
pusha
add
jbe
dec
push
mov
cwtl
sbb
or
adcb
frstor
lret
insl
inc
movsl
cld
mov
sarb
rolb
test
popf
mov
nop
and
fwait
mov
xchg
pop
jae
adc
cmp
mov
outsb
cmc
pop
in
jb
aas
xor
ljmp
fstpl
daa
dec
mov
cmp
repz
inc
cld
sahf
add
divl
ss
js
jbe
and
mov
repnz
cltd
lods
shl
es
outsb
mov
imul
cwtl
jne
mov
aad
popf
xchg
adc
push
fs
loop
cmpsl
xor
aam
jbe
sub
sti
xchg
jae
mov
movsl
je
jl
xchg
xor
pop
fisubl
test
cmp
in
xchg
pop
xchg
stc
lcall
stos
dec
jl,pn
push
add
imul
sbb
pop
or
push
gs
sub
push
and
sbb
pop
stc
cmp
scas
and
dec
dec
lods
in
cmpsb
push
pushf
imull
test
cmp
jl
jecxz
inc
dec
stos
mov
and
int3
add
add
daa
mov
push
jle
scas
cld
dec
iret
jmp
lods
and
jb
adc
push
mov
xor
sbb
add
mov
jae
mov
lock
outsl
sbb
lock
or
rcrb
mov
pop
shll
cmp
dec
lret
mov
test
in
xor
mov
jmp
xor
add
cmpsl
xchg
lret
mov
and
sahf
and
mov
inc
push
lcall
aam
jno
sbb
sub
roll
mov
js
pop
adc
cmp
daa
cwtl
add
aad
rclb
sub
loop
inc
and
mov
jmp
fnstenv
mov
leave
pop
mov
jg
lds
mov
mov
iret
xchg
cmp
cli
je
imul
cmp
mov
icebp
mov
ficoms
add
ss
and
xchg
fstl
xchg
dec
sbb
mov
stos
inc
in
shll
fisubs
in
pop
mov
ss
lods
jl
sahf
sub
mov
add
cmp
or
fidivrl
add
enter
jns
inc
call
mov
cmp
mov
movsl
jg
mov
sbb
cmpsb
adc
jo
leave
cld
out
xchg
mov
daa
sbb
ficomps
test
adc
out
and
enter
and
js
and
sbb
lods
push
add
ja
jno
push
xlat
int
lds
pop
pop
inc
pushf
pop
scas
andl
and
loop
sti
outsb
test
fcom
out
mov
pop
rcll
inc
mov
xchg
jo
loopne
je
stos
push
je
xchg
push
sbb
add
push
and
mov
xchg
icebp
test
pop
insb
dec
mov
loope
mov
jae
xchg
outsb
xor
sbb
xchg
jg
imul
pop
dec
repz
hlt
mov
push
push
jge
nop
and
jno
push
push
pusha
pusha
shll
out
test
mov
aam
sahf
sar
into
sbb
cmp
mov
dec
mov
inc
movsl
lock
adc
ss
push
arpl
addr16
mov
push
pop
test
push
jle
outsl
sahf
out
xor
push
les
push
jb
es
out
adc
xchg
sub
mov
jg
mov
iret
inc
arpl
and
push
repnz
cmp
adc
xchg
repz
push
movsb
inc
imul
mov
cmpb
mov
arpl
push
mov
pop
rorb
rcll
out
and
or
push
add
sub
push
mov
stos
xor
pushl
push
loope
int
repnz
adc
dec
pop
cmp
outsl
imul
cltd
mov
xor
adc
insl
in
push
jb
popl
data16
std
test
pop
je
stos
jl
and
data16
test
pushf
jns
cmp
hlt
rcll
nop
push
lret
mov
data16
add
pop
inc
sbb
sub
iret
jne
ret
add
lret
mov
fisubs
dec
aam
xor
in
adc
xchg
inc
out
gs
ja
scas
cmp
push
xor
lods
sbb
mov
out
jmp
or
and
popa
fnsave
imul
pop
rorl
cmpsb
cltd
or
gs
je
sbb
aam
sub
cmpsl
stc
mov
or
dec
pop
int
mov
push
fbstp
subl
shr
stos
pushfw
fistpl
mov
sub
shll
push
bnd
int
add
or
fistl
aas
dec
test
outsb
inc
in
out
push
xor
xchg
repnz
in
fdivrs
in
push
mov
in
je
cmp
divl
stc
imul
cmp
sub
je
sbb
push
out
ljmp
ljmp
cmp
in
fsincos
xorl
insb
rolb
scas
cmpsb
jmp
cwtl
sub
sbb
cmpsb
mov
out
pop
ja
ret
cmp
in
nop
dec
jno
sub
test
hlt
stos
jge
push
inc
add
lea
pop
cmpsb
sub
movsl
dec
lss
lret
js
mov
sarl
rcrb
and
lret
rcrb
mov
cmp
add
cmp
das
mov
xchg
jns
call
aaa
into
cmp
cmp
stos
lea
pop
imul
mov
fiaddl
rcrb
xchg
pop
jno
mov
mov
fstps
jb
xor
mov
ficoms
mov
popl
pop
nop
daa
pcmpeqb
fwait
push
ljmp
fcomp
push
rolb
lcall
jmp
jp
aaa
dec
addr16
inc
inc
sub
sub
mov
stc
pop
cmp
enter
pop
in
and
xchg
cmp
arpl
xor
xchg
inc
or
sub
rcr
mov
jl
xchg
mov
adc
loopne
jge
inc
lods
push
mov
pop
mov
popa
push
into
sub
lret
scas
shrb
sbb
addl
fistl
adc
hlt
imull
or
jbe
inc
push
xor
cmp
cmp
adc
push
sbb
or
xor
lahf
popa
mov
popf
inc
sahf
mov
and
sahf
mov
inc
inc
fdivp
jns
push
xor
lret
gs
dec
sbb
jb
cs
scas
ret
cmpsb
lods
lcall
and
addb
scas
sar
loopne
insb
aas
mov
jnp
inc
scas
mov
xchg
sbb
mov
lcall
sub
jmp
scas
lret
ret
addr16
rcrl
outsl
dec
mov
xor
sbb
mov
sbb
imul
sbb
dec
and
xor
sarl
push
ficoml
shlb
nop
mov
pop
and
cltd
jmp
loop
mov
cld
inc
cmp
out
cmp
add
jmp
inc
lods
dec
push
pop
ljmp
pushl
scas
adc
inc
rcrb
mov
lret
imul
sbb
sub
jns
mov
enter
inc
add
loope
cmova
push
pushw
mov
cmp
das
xchg
test
dec
xchg
adc
dec
std
repnz
and
cmp
mov
mov
sub
mov
out
push
aam
add
jbe
call
std
and
mov
jle
dec
sub
outsl
push
scas
adc
cmpsl
call
push
sbb
dec
adc
and
repz
push
int
push
movsl
fwait
dec
jae
aaa
sub
dec
bound
rcrb
rolb
inc
sub
pushf
inc
xchg
cld
sbb
outsb
popa
aam
inc
cmpsl
push
fdivrs
push
jbe
xchg
jecxz
pop
cltd
es
sbb
rcrl
sti
mov
into
xor
sub
lods
and
test
dec
pusha
xor
in
sbb
jns
outsb
shrb
lret
adc
pop
nop
test
pop
jns
popa
in
aam
jg
or
insw
jl
bound
movsb
shr
jne
push
mov
outsb
pop
test
mov
imul
fisubrl
inc
pop
xor
and
les
xchg
movb
mov
sub
dec
test
mov
dec
fistpll
adc
mov
xor
sbb
jecxz
or
push
xchg
nop
aas
cmp
pop
sbb
pushfw
ds
mov
mov
mov
or
mov
pop
cmp
inc
mov
and
sub
mull
das
adc
movsl
and
roll
call
or
inc
adc
in
cwtl
addr16
dec
mov
jg
or
dec
popf
and
cli
notl
int3
sbb
pusha
and
jne
pop
mov
cli
xchg
mov
int3
sbb
scas
loope
aam
pop
fbstp
arpl
mov
sbb
pop
js,pn
movsb
sbb
out
mov
pusha
es
xchg
pop
in
aad
sbb
call
pushf
test
cmp
cltd
nop
jne
or
sbb
add
lods
inc
adc
inc
dec
outsl
out
mov
pushf
popl
jle
or
dec
lea
out
into
mov
pop
lock
repnz
dec
lret
test
inc
add
sbb
test
mov
movsb
jnp
xor
inc
ret
pop
push
cld
in
pop
testb
inc
inc
mov
in
fisubl
pop
cltd
scas
pop
mov
sahf
in
add
mov
scas
or
mov
sbb
adc
lret
test
jg
icebp
adc
sub
out
xlat
lods
decb
cmp
movsl
pop
sbb
mov
lahf
mov
add
or
add
pop
sub
iret
nop
leave
sbb
push
adc
sbb
push
cmp
repz
push
adc
push
dec
jmp
xor
jae
aaa
lret
pop
cmp
pop
xchg
add
mov
cmp
fxch
and
and
test
jnp
rorl
cmp
cld
shlb
or
or
fdivrl
iret
ljmp
test
adc
jae
cmp
mov
das
cli
add
cmpsl
js
lods
dec
adc
lods
call
mov
sar
es
cs
addl
scas
xchg
xor
jae
and
cmc
clc
sbb
stc
sbb
cmpl
xor
add
mov
add
cmp
ret
cltd
fildl
and
prefetch
test
movsl
loopne
sbb
out
into
or
arpl
pop
and
push
push
and
mov
ss
lcall
push
cld
lods
cmp
incl
in
sbb
push
sbb
xchg
sub
sub
jl
in
jp
jbe
jno
ret
and
lods
incl
notl
lods
and
adc
xor
and
aas
adc
mov
jle
aad
lods
inc
fcompl
test
daa
fwait
mov
insb
mov
inc
bound
fisttpll
pop
xchg
xor
das
inc
mov
fists
mov
out
ss
and
clc
leave
xor
mov
push
lods
xchg
add
dec
call
and
in
push
dec
sarb
mulb
cmc
jle
sbb
jp
jae
rcll
ljmp
js
aad
push
int3
fcom
out
add
mov
inc
mov
sbb
push
ret
test
and
push
pop
xor
cmc
das
arpl
jg
mov
test
das
lret
adc
ret
cmp
xchg
push
insl
pop
in
inc
cmp
pop
and
je
sbbl
loopne
jbe
ret
dec
sahf
mov
push
psubusw
push
jg
pop
push
js
and
or
pop
in
in
insb
icebp
sub
ret
xor
outsl
push
adc
add
jo
cmpsb
call
push
bound
popf
lds
xor
shl
icebp
xor
movsb
pop
cmpsl
dec
xchg
pusha
and
fwait
jle
mov
movb
test
rclb
sub
pop
mov
mov
test
push
gs
adc
add
mov
sub
int
push
addr16
and
push
cld
mov
cmp
add
pop
lea
push
fistpl
enter
mov
jp
mov
jle
sbb
cmp
nop
imul
dec
lahf
xchg
les
lahf
jle
and
pop
stc
xchg
adc
and
fistl
or
outsl
xor
mov
cmpsl
xchg
pop
xor
inc
mov
icebp
rcrb
or
xor
fsub
and
fstpl
push
daa
sub
fmull
int3
inc
sub
loop
fmuls
mov
fsub
fsubrl
cld
pop
fmuls
fisttpl
cmp
xchg
hlt
mov
sbb
mov
cmp
imul
jno
aad
pop
or
and
setge
inc
jnp
mov
mov
xchg
xor
imul
cltd
addr16
or
sbb
sahf
sbb
dec
mov
xchg
sbb
outsl
dec
mov
cmpsb
pop
in
push
xchg
aas
pop
dec
mov
fldcw
aas
in
daa
lea
loope
ficomps
aad
jl
out
fldl
in
mov
jnp
mov
shl
xor
into
aaa
cmp
dec
lret
insl
sarl
sbb
rorl
jb
inc
cmp
sub
je
in
in
and
mov
scas
jp
mov
sub
sbb
sub
aad
data16
jns
outsl
xchg
fwait
and
aas
mov
fildll
mov
test
ret
dec
mov
das
xchg
sub
sub
cmp
popf
out
mov
addb
aaa
jbe
adc
sar
sarl
cmpsl
and
test
jb
test
inc
sahf
cld
inc
sahf
nop
pop
mov
cli
and
xor
out
xchg
push
xchg
insb
imul
xchg
cmp
dec
inc
lea
leave
jne
xor
aas
lcall
mov
je
push
sub
sbb
int3
sub
repnz
xor
leave
or
outsl
jo
adc
mov
push
cwtl
sti
mov
outsl
jp
adc
sub
push
add
sbb
aad
lcall
shrb
mov
dec
jae
mov
cmp
outsl
decl
xor
xlat
mov
scas
mov
xor
negl
in
inc
cmp
ret
lret
dec
and
mov
notl
mov
test
mov
es
adc
repz
ror
add
sahf
call
test
mov
add
outsl
testb
fldcw
xchg
aas
nop
sbb
add
sub
fcmovb
stos
pop
dec
repz
push
cmp
or
shr
jp
jge,pt
xor
pusha
push
jmp
xchg
lods
repnz
add
xor
and
xchg
adcl
mov
xlat
das
jns
ds
lahf
adc
push
pop
repz
add
mov
rcl
scas
add
es
sub
pop
dec
hlt
pop
mov
enter
nop
jns
dec
xchg
add
lret
addr16
cltd
fsubl
jl
add
ret
notb
insl
std
cmpsl
sub
pushf
dec
jmp
repnz
xor
cmp
scas
push
jo
imul
loope
add
int
or
mov
bound
sti
jl
dec
pop
sbb
sti
lds
cmp
mov
cmpsl
inc
mov
mov
cmc
jno
add
insl
and
and
add
jns
cmp
inc
add
shlb
xor
mov
jge
loop
pop
out
fcompl
popf
lods
lds
sbbb
pop
inc
mov
add
stos
xor
xor
les
jb
shll
aas
jnp
or
cmpsl
xchg
cli
icebp
pop
imul
insb
aas
jne
insb
cmp
mov
jge
pop
dec
mov
in
in
sub
mov
movsl
mov
pop
mov
mov
pop
lahf
cmp
jo
popf
ret
or
pushf
iret
sub
sub
fnsetpm(287
jne
out
aaa
mov
sbb
mov
call
hlt
aam
cmp
cmp
sti
sbb
sbb
bound
mov
ljmp
sahf
mov
adc
ret
std
rcrb
push
adc
mov
ds
ds
fcmovb
push
sub
int
jbe
xchg
imul
clc
aaa
loopne
adc
jge
push
pop
xor
dec
loop
push
andl
or
sub
je
inc
xchg
das
add
fwait
add
push
in
das
fnstsw
push
xchg
outsl
push
mov
jg
sbb
mulb
pop
pop
and
mov
lods
dec
leave
adc
xlat
iret
outsb
pop
scas
out
std
dec
and
gs
addr16
mov
add
orl
sbb
popa
xor
dec
iret
arpl
cmp
inc
daa
das
dec
cmpsl
pushf
subb
pop
cmpb
jle
xchg
stos
dec
push
inc
push
ljmp
loop
out
sbb
dec
mov
mov
pop
pushf
in
push
mov
and
shrb
cmp
mov
cmp
in
xchg
fucomi
mov
xor
repz
fs
mov
adc
mov
in
es
imul
nop
dec
cmc
cmpsb
rcll
xor
pusha
cld
js
pop
cmp
ss
cmp
repz
pavgb
xor
pop
addl
sbb
xor
repnz
mov
mov
leavew
and
jmp
and
fwait
add
out
sti
and
out
rolb
repnz
stc
dec
push
jno
dec
stos
pop
pop
std
mov
arpl
adc
ds
inc
repnz
popw
mov
outsb
sbb
in
mov
add
push
fidivs
jne
aam
mov
shll
lea
pop
lds
je
dec
push
les
pop
popf
cltd
notl
cmc
js
or
aas
push
dec
inc
mov
or
fs
shlb
lcall
stos
xor
inc
test
inc
aam
xor
mov
mov
xor
adc
or
data16
lods
insl
ret
out
and
cmp
icebp
mov
and
mov
test
mov
mov
pop
std
daa
mov
push
shlb
fs
push
push
loope
hlt
mov
cwtl
loopne
aam
inc
add
dec
scas
dec
fldenv
loop
jnp
inc
jbe
or
or
mov
stos
mov
push
xchg
jmp
int
daa
adc
clc
dec
dec
xor
or
add
ret
dec
fisubl
push
push
inc
mov
arpl
mov
test
lcall
jo
out
xchg
cmpsb
aam
mov
movsb
insl
adc
push
mov
mov
fimull
ret
leave
js
sbb
rolb
mov
mov
fmul
jae
cltd
xorb
cmp
das
and
lds
mov
lods
nop
sub
sti
sub
mulb
out
jns
addb
sbb
mov
cwtl
outsl
inc
movsb
clc
mov
jnp
aas
mov
pop
or
pop
gs
mov
lods
mov
out
in
jp
mov
in
inc
dec
aad
cmp
jmp
dec
adc
fisubrs
mov
jp
aad
cmp
or
push
sti
or
lods
imul
pop
out
loopne
icebp
fidivl
inc
pop
mov
pop
mov
jmp
mov
jb
xchg
in
xor
ret
mov
shlb
insb
sarl
in
pop
out
lcall
dec
aad
mov
lahf
incb
into
cmp
xor
pop
imul
repnz
pop
lcall
aaa
ljmp
pop
adc
stos
cltd
movsl
fistps
ret
or
stc
pop
xchg
out
mov
or
ljmp
into
jo
inc
mov
gs
fsubr
addb
jmp
inc
xor
jnp
outsl
cmp
sarb
out
mov
orb
add
xchg
xor
inc
push
leave
sbb
out
aam
fnstenv
pop
sub
imul
stc
rorl
sahf
lret
and
outsb
fcmovne
sbb
repnz
scas
f2xm1
into
xchg
jl
insb
insl
insl
mov
jmp
enter
in
push
mov
aaa
jle
int
ljmp
and
xchg
adc
mov
notb
inc
mov
mov
ss
pop
fcompl
jbe
mov
ret
notb
mov
push
movsl
mov
imul
push
jle
jp
ficompl
cmpsl
cmpsl
push
add
cmp
std
arpl
push
inc
xchg
imul
or
mov
push
jle
leave
add
es
inc
movsb
daa
dec
enter
pop
fldenv
scas
movsb
sahf
xchg
pop
lea
adcb
imul
insl
add
jl
test
mov
pop
arpl
popa
cltd
sbb
addr16
mov
stc
inc
mov
leave
jmp
cmp
inc
cltd
jmp
jmp
ss
adc
pop
jno
and
hlt
pop
sbb
jnp
loopne
jbe
ror
pop
dec
jnp
cmpsb
das
or
jns
lock
sbb
cltd
movsb
loope
jo
push
jl
scas
test
jge
fdivr
jmp
dec
data16
inc
mov
mov
sbb
adc
subb
mov
enter
xlat
dec
xchg
pop
repnz
push
push
adc
out
cltd
push
lods
pop
cli
inc
loopne
jle
js
cltd
icebp
int
das
and
mov
cs
fdivp
jns
imul
pop
lea
cmp
sbb
pop
cmp
popa
arpl
push
sarb
test
xor
xchg
cmp
push
cld
movsl
loope
mov
inc
inc
xor
out
or
neg
mov
dec
jb
add
push
pop
cltd
lods
and
pop
nop
sub
int3
pop
mov
mov
cmp
push
jb
in
stos
jo
test
adc
cmc
mov
lahf
fmul
sahf
sbb
outsb
cli
xchg
and
aam
out
out
push
fwait
sbb
jb
movsl
and
sub
xchg
out
mov
lock
xchg
not
hlt
or
aas
mov
daa
xor
add
xchg
mov
bound
jae,pt
mov
jp
mov
aam
fcompl
inc
imul
lds
rclb
cs
rolb
fwait
outsl
bound
lea
cld
fisubs
lahf
pop
jb
pop
mov
sub
lock
xchg
inc
pop
mov
lods
fwait
mov
in
mov
xchg
or
shrl
test
subb
fidivrl
jle
out
or
rol
mov
scas
inc
mov
movsb
inc
sbb
or
lret
fistpl
aaa
shr
xacquire
into
mov
call
mov
jnp
and
and
sbb
ret
leave
and
mov
jne
push
sub
push
or
dec
mov
inc
fwait
das
ds
aaa
cltd
pusha
lret
fcoms
mov
push
mov
xor
adc
or
cmpsb
shll
jmp
xchg
sahf
add
into
fnstcw
loopne
insl
sbb
in
mov
std
xchg
xchg
call
add
into
shll
stc
test
shl
mov
testl
aaa
stc
scas
add
negb
out
mov
mov
jmp
data16
pop
fcmovbe
outsb
out
enter
push
pushf
imul
sbb
fistpll
dec
mov
js
xchg
mov
stos
inc
jne
inc
pop
mov
add
jbe
loopne
pusha
jle
mov
sub
jae
xchg
test
pop
xchg
popl
sahf
es
cmc
xchg
repz
xorb
in
or
cmp
inc
add
test
dec
jp
test
sbb
mov
add
fs
test
cmp
adc
xlat
ljmp
push
adc
cmpb
insl
dec
ret
pusha
fisubl
mov
add
enter
mov
sti
add
popf
out
and
repnz
sub
lods
or
hlt
jg
or
cs
dec
stc
or
frstpm(287
push
push
jp
fiaddl
pop
adc
stos
fs
jo
sbb
fistl
sub
arpl
mov
or
add
adcb
cmp
dec
mov
inc
mov
pop
lret
ja
orb
push
je
testb
inc
int
adcb
fdivp
subb
out
fs
mov
push
mov
push
sub
ss
int3
push
cmpsl
push
push
out
cmpb
sbb
push
into
repz
mov
pop
jl
fcmovu
jb
push
scas
fldenv
shll
aaa
into
stos
loop
jge
or
adc
jge
jne
popf
push
cmpsb
pop
sbb
std
adc
and
test
jo
fnsave
mov
adc
fcoml
push
xlat
sti
and
and
mov
neg
jg
cmovne
mov
inc
mov
inc
xchg
xchg
xchg
mov
int3
jg
loop
sub
adc
std
aaa
out
shrb
jns
mov
dec
sbbl
mov
lock
mov
insb
xchg
ret
xchg
subl
data16
nop
dec
in
xor
pop
jge
lahf
lods
popa
in
inc
fimuls
lret
push
or
adc
xor
mov
movsb
sbb
cwtl
inc
mov
cwtl
mov
icebp
ret
push
jmp
sbb
std
nop
movsb
dec
shrl
ret
out
stos
mov
imul
mov
rcrb
cld
sbb
imul
inc
mov
lcall
rcl
sub
and
call
pop
dec
jns
cltd
pop
jb
rcrb
sub
xchg
mov
sbb
jne
dec
xor
les
or
leave
loopne
sti
shll
xor
daa
jl
xor
addr16
pop
cmpsb
test
xchg
cmc
aas
mov
adc
or
dec
mov
jb
fistpll
pop
cmp
mov
add
xor
imul
jne
mov
imul
xchg
add
push
xor
lock
insb
jg
lods
push
fsubs
xlat
arpl
icebp
mov
shrb
idivb
and
push
inc
nop
int3
push
push
dec
int
lds
loop
add
push
test
sub
lret
xor
lea
dec
pop
pusha
push
in
xor
and
aam
orl
nop
cwtl
ret
lock
ds
insb
xorb
jnp
xchg
and
fcmovnbe
push
arpl
mov
mov
cwtl
out
roll
mov
data16
jecxz
call
push
fxch
insb
sbb
mov
pop
bnd
xchg
repz
arpl
inc
jecxz
adc
pushf
mov
testb
imul
inc
cmp
mov
jmp
xadd
push
push
lods
lods
aam
cmc
push
repnz
push
mov
and
xor
mov
adc
cmp
xor
jg
mov
adc
inc
in
mov
clc
in
cwtl
pushf
dec
mov
xchg
out
mov
mov
iret
out
jmp
dec
loopne
push
cmc
sbb
cltd
aaa
inc
sbb
inc
js
lret
inc
cs
xor
push
pop
mov
insl
jne
popa
pop
inc
test
aaa
nop
push
adc
xchg
push
mov
test
outsl
ficoms
stc
int
push
int3
add
popf
push
push
sub
pop
mov
inc
pop
and
ss
les
cli
xchg
adc
or
lock
adc
jle
xchg
pusha
jge
mov
rcl
popf
mov
jg
jo
mov
test
scas
lods
iret
lcall
stos
test
mov
in
dec
pop
sub
jge
pop
in
mov
cli
mov
pop
mov
mov
or
push
and
sub
scas
in
xchg
mov
adc
and
cmpl
outsb
push
pop
popa
repnz
mov
mov
insl
mov
fiaddl
js
dec
popf
outsb
or
sub
sub
or
xor
lahf
sub
sbb
sarb
lock
pop
mov
mov
mov
cwtl
js
test
mov
fnstenv
mov
movsb
stos
loope
pop
push
push
inc
jge
sub
in
movsl
push
push
push
bound
or
push
jecxz
nop
sbb
xor
add
in
test
cmp
loop
insb
lods
ret
fcompl
in
sbb
cmp
fs
cmpl
int3
adc
jno
push
inc
das
icebp
mov
fincstp
sub
inc
imull
cmp
pop
call
xchg
outsl
or
push
mov
stc
scas
xor
jbe
adc
dec
je
xchg
mov
or
mov
jecxz
js
ret
mov
lahf
and
add
xor
xor
mov
std
add
imul
repnz
mov
mov
in
adc
enter
aas
in
enter
rcrb
insb
xlat
rcll
cli
fisubs
pop
fbld
and
shll
hlt
push
push
ficoms
push
push
xchg
sub
xchg
das
jge
shl
push
mov
aas
dec
in
and
jbe
data16
mov
mov
je
repz
mov
push
es
iret
leave
xor
or
jne
test
xchg
clc
ficompl
jecxz
repnz
jp
popf
dec
jp
int3
push
sub
adc
cwtl
push
dec
jmp
iret
icebp
insb
add
cld
das
fdivs
sbb
cli
and
shlb
shrl
xchg
mul
adc
mov
lahf
in
arpl
cmpsb
ds
xor
sub
popa
or
je
sbb
adc
call
adc
notb
mov
lods
std
std
lahf
push
lods
rorl
mov
push
mov
pop
mov
dec
dec
mov
test
stc
adc
jbe
xchg
and
push
adcb
sub
lods
sbb
sub
cld
ret
inc
cwtl
mov
shr
xor
mov
pop
mov
and
fiaddl
push
pop
pusha
cmp
mov
mov
sarl
imull
push
test
and
lret
pop
out
and
push
and
repnz
push
cmp
mov
jno
loop
push
mov
int3
push
or
xor
inc
ljmp
cmp
andb
outsb
push
mov
mov
add
jg
mov
pop
add
loopne
std
popa
sahf
movsl
imul
out
movsb
or
sahf
fdivr
mov
xchg
lds
cli
andl
and
mov
out
dec
out
mov
lods
test
scas
pop
xchg
inc
mov
jae
popf
push
push
call
movsb
mov
pusha
cmpb
mov
aad
jno
aam
or
mov
cltd
push
mov
adc
sub
aas
pushf
cli
mov
adc
xor
sbb
lea
subl
in
jmp
jns
xor
xor
cmp
fcompp
xchg
je
call
inc
fs
inc
adc
dec
or
mov
mov
cmp
ret
cmp
jecxz
fsubrl
cmp
repnz
pop
nop
cmp
dec
pop
cltd
jnp
and
insb
stc
lcall
xchg
jecxz
pop
mov
pop
cmc
jae
insb
add
push
in
jns
aam
enter
mov
pop
mov
arpl
sbb
mov
out
pusha
andl
fdivl
sbb
add
sub
les
std
mov
fnsave
fwait
add
sbb
add
inc
out
inc
or
es
pop
dec
cltd
push
push
rclb
cmc
addr16
fimuls
adc
sub
or
jmp
cmp
push
jmp
das
testl
and
mov
adc
imul
or
add
mov
mov
pop
pop
iret
adc
in
shl
mov
outsb
orb
push
cmp
testl
xlat
pop
add
out
cmpb
cmc
movsb
add
fimull
xor
lea
xor
decb
stos
push
pop
imul
sbb
add
gs
ret
jb
test
jp
mov
cmpsl
int3
pop
and
jmp
mov
push
dec
nop
dec
fsubl
fnstcw
inc
lcall
aam
sbb
jle
pop
aam
bnd
cltd
xchg
xor
push
ret
repnz
dec
dec
shlb
xchg
js
rorb
mov
sub
xor
fwait
aam
xor
pusha
shr
xor
mov
mov
lcall
push
aas
int3
stos
jmp
inc
jns
mov
push
adc
sahf
xchg
push
loopne
adc
xor
adc
jns
sbb
fdivrs
add
gs
jg
mov
sbb
mov
mov
mov
jg
aam
addr16
dec
jle
aam
js
inc
inc
es
xor
and
shlb
call
lret
mov
jbe
cld
in
and
out
insl
jns
mov
adc
push
adc
cmpsl
pop
sbb
nop
scas
dec
adc
cmp
lods
mov
shl
mov
mov
arpl
mov
cmp
or
or
sub
mov
push
inc
fiadds
jecxz
aam
cmp
stos
inc
pushf
jl
sub
mov
or
and
iret
ficoml
xor
sbb
mov
push
adc
and
sub
mov
mov
cmp
lret
xor
das
nop
bound
pop
std
sti
ss
aas
adc
add
mov
decb
das
int
and
jmp
enter
cmpsb
sub
push
mov
dec
hlt
jecxz
in
arpl
loopne
mov
dec
es
mov
test
jno
or
aam
inc
push
lret
aas
mov
leave
adc
aaa
cs
xchg
rcll
xor
mov
fdiv
push
notb
lahf
add
loope
sub
jo
jmp
or
movsb
push
cs
sbb
rorb
mov
in
add
cmp
stos
std
frstor
stos
inc
add
iret
lds
push
mov
mov
mov
jmp
roll
loopne
pop
mov
push
mov
pop
pop
and
cmp
arpl
out
ret
test
push
lds
call
pop
jne
clc
fistpl
mov
or
test
lret
imul
or
xchg
mov
jg
inc
mov
push
loop
xchg
nop
enter
cmpsb
aad
scas
lahf
xor
sub
mov
xlat
pop
xor
lahf
sub
sub
push
lock
lock
enter
icebp
mov
sbb
ljmp
rorb
mov
jo
pusha
jbe
gs
fisttpll
fadd
and
and
jge
pop
sbbb
xor
movsb
fcoms
not
add
mov
push
arpl
not
test
es
and
sti
test
je
pop
jne
jmp
jecxz
mov
je
mov
push
xchg
pusha
jne
ja
inc
adc
es
scas
sbb
mov
fisubrs
mov
daa
push
mov
adc
sbb
mov
dec
pop
outsb
mov
jne
sub
or
fwait
icebp
cmpsb
cmp
mov
outsl
cmpsb
les
jb
daa
cmp
je
ss
test
cwtl
push
fiaddl
sub
inc
pop
or
xchg
cli
repz
mov
dec
lcall
ss
sbb
mov
sub
rclb
push
mov
fdivrl
pop
sub
out
pop
mov
mov
dec
roll
cmc
and
jecxz
sarl
fcomi
or
sbb
clc
aam
sub
and
cmp
inc
cmp
mov
jnp
scas
outsl
daa
movsl
cmp
or
dec
mov
cmpsl
sub
mov
push
fidivl
sbb
icebp
jmp
repz
bound
mov
ljmp
or
sahf
dec
xlat
sbb
pop
out
idivl
push
pop
test
xor
xchg
jns
fwait
adc
inc
or
push
dec
jo
add
fstpt
dec
sub
cmp
loope
sub
imul
int3
jmp
out
mov
xchg
adc
pop
cmpsb
popa
mov
mov
mov
mov
pop
mov
jnp
and
movsl
cli
hlt
mov
jge
push
jo
jle
pop
clc
xchg
in
sbb
push
add
orl
je
pop
fcomps
dec
sbb
filds
and
fcomip
inc
inc
mov
cmp
pop
in
push
jno
icebp
inc
push
std
shlb
mov
or
pop
and
into
xor
fldenv
sub
imul
xor
xchg
aad
movsl
das
je
and
push
mov
dec
push
mov
rclb
test
or
dec
test
andb
das
lea
xchg
decb
clc
adc
fadds
bound
xor
aad
lret
scas
lods
stos
shr
div
leave
mov
dec
jae
mov
add
add
out
jnp
les
fldl
xchg
out
in
sub
imul
out
push
cmp
adc
inc
loop
push
adcl
mov
adc
mov
outsb
xchg
add
adc
pop
in
mov
js
mov
ss
push
nop
lea
sbb
jo
cmp
clc
in
hlt
movsb
loop
stos
add
pop
jmp
push
out
xor
add
and
hlt
jbe
mov
outsb
in
cwtl
push
into
std
arpl
push
push
lock
mov
sbb
scas
and
or
mov
mov
loopne
jnp
xor
pusha
jnp
mov
lret
mov
mov
scas
ljmp
mov
sub
inc
and
xor
xchg
push
cmpsb
dec
ds
xor
ret
test
outsl
dec
xor
loopne
daa
fistps
cmp
mov
push
ja
rcr
cmp
out
ret
ret
dec
pop
fnstenv
dec
xchg
fyl2xp1
mov
fildll
in
pushf
lret
fdivrs
pop
mov
mov
sbb
aaa
dec
pop
popl
js
iret
add
pop
pop
lret
pusha
cmc
jecxz
in
pop
int3
pop
jns
shl
roll
lods
jle
pop
jle
sbb
adc
or
jge
fistps
jne
loope
inc
jnp
xchg
xchg
add
fdivr
je
stos
lret
mov
je
inc
ret
call
popa
sti
and
lds
loopne
jo
aam
push
jmp
sub
and
xor
fadds
ljmp
adc
aam
aam
jb
mov
push
mov
sub
leave
jb
sbb
mov
es
mov
cmp
pop
or
sahf
mov
push
and
jno
or
lahf
ficoms
push
mov
lds
ljmp
mov
rclb
lods
jmp
scas
idivl
stos
add
inc
in
aad
out
aas
in
inc
into
jl
sbb
push
cmp
std
xchg
out
or
das
xchg
jb
dec
xchg
imul
inc
int
or
xchg
adc
pop
pop
xor
inc
cmp
and
popa
xlat
mov
add
test
push
jno
pop
bound
push
aas
std
push
bound
sti
and
test
ljmp
ljmp
sub
repz
push
sub
jns
das
mov
add
push
cli
pop
inc
pop
jae
and
sbb
dec
push
cmp
xchg
stos
movsb
jae
mov
subl
aas
pop
mov
scas
ljmp
push
shr
lds
inc
mov
dec
push
xchg
mov
lret
xchg
sbb
sbb
mov
loope
repnz
push
cwtl
imul
dec
fdiv
sub
in
lds
shl
jns
stos
aaa
adc
sub
js
sub
adcl
push
int
mov
xchg
fnsave
push
dec
movsl
aas
pusha
push
shl
xlat
xor
fidivrs
jb
adc
pop
xor
push
pusha
adc
pop
or
xor
lret
out
mov
outsl
pop
push
xchg
lods
cmpsl
cld
xchg
add
idivb
jb
dec
movsb
jl
mov
cmp
sarb
in
sub
shll
cmpsb
adc
mov
into
inc
or
and
dec
lret
dec
lock
cmp
push
jecxz
jg
cmc
xchg
xchg
dec
in
icebp
mov
lret
mov
int
push
or
icebp
outsb
les
push
cltd
andb
shr
and
das
test
ljmp
xchg
ss
add
jb
sbb
pop
add
mov
sub
int
mov
je
sub
sub
xchg
test
sub
pop
inc
cld
jecxz
test
shll
cld
ss
push
jb
out
cld
pop
mov
dec
daa
fnsave
pop
push
add
je
mov
repz
push
cmp
cltd
sbb
mov
inc
xor
out
test
fwait
jae
cmpsl
in
es
testb
outsb
stc
jp
and
test
out
and
aad
or
stc
adc
outsb
mov
add
add
or
mov
pop
andl
aam
mov
ss
fsubr
dec
arpl
add
cld
pop
mov
pop
inc
jg
das
cmpsb
inc
dec
out
decl
pop
addr16
pop
pop
jecxz
inc
xor
call
ljmp
int3
xchg
xchg
xor
mov
cltd
popa
add
xchg
jb
dec
aad
jb
push
push
rorl
and
mov
mov
add
inc
mov
sub
mov
lea
clc
inc
jmp
ja
pop
inc
fucomp
mov
aad
into
pop
xor
outsb
rcrb
mov
dec
and
sub
jle
mov
push
pop
mov
test
cmp
mov
lea
adc
mov
insb
les
js
xchg
adc
dec
in
mov
test
push
jo
or
or
jp
gs
push
outsb
inc
sbb
jno
adc
add
cmp
sbb
call
inc
inc
test
jmp
out
shr
pop
sub
movsb
lods
fwait
test
push
xchg
inc
fstpt
or
xor
lcall
cmc
mov
scas
shrl
ljmp
gs
adc
aaa
lret
mov
out
dec
mov
add
mov
mov
mov
fmuls
jo
in
leave
daa
push
call
pop
adc
and
jb
cmp
lea
or
cmp
or
stos
pop
jle
aam
sub
test
fwait
jl
cmp
jb
mov
pop
cltd
jno
lds
cmp
mov
fstpl
push
addr16
leave
gs
inc
jo
imul
rcrb
add
testl
inc
out
stos
mov
aas
cs
mov
push
xchg
pop
push
imul
push
lods
ror
pop
out
call
mov
cltd
xor
stc
popa
pop
in
jne
int
icebp
pop
clc
push
les
pusha
shr
movsl
cwtl
js
jo
mov
mov
sbb
mov
loopne
orb
fs
sbb
lahf
mov
pop
ds
aad
jp
aaa
mov
into
rol
cld
clc
push
sub
lret
or
lcall
pusha
fucomip
mov
mov
sub
scas
hlt
xlat
sub
pop
and
sub
rclb
add
sbb
mov
lods
loopne
testb
push
jle
sbb
sbb
or
ret
adc
jp
testb
fisubrl
ret
and
push
lds
dec
fcmovb
xor
mov
or
sbb
push
cltd
gs
inc
std
sub
lds
ret
mov
jne
mov
imul
ds
leave
or
xchg
cmp
into
das
push
cmpsl
pop
mov
int3
jl
or
fiadds
aam
and
cmove
out
and
daa
fildl
cmp
push
mulb
jbe
lods
jnp
dec
idivb
inc
outsl
lock
aas
shld
jp
push
in
out
mov
insb
adc
push
dec
imull
push
jmp
add
aaa
pop
stc
xor
mov
int
xor
movsl
pop
shl
cmpsb
and
in
insb
stos
or
xchg
jge
fcoml
jge
sarb
adc
ss
rcll
mov
in
push
xchg
jnp
mov
lods
add
xchg
jge
xchg
fistps
scas
jbe
insb
xor
shll
push
das
movsb
xchg
enter
int
inc
inc
jmp
cmpsl
jbe
or
decl
jnp
xchg
xchg
subb
sbb
mov
push
dec
jns
dec
rclb
roll
out
inc
lods
mov
xchg
jecxz
xchg
dec
in
xor
jmp
pop
cs
pop
xchg
dec
sti
in
mov
sbb
add
mov
psllq
mov
loopne
jecxz
xchg
outsl
push
mov
jnp
inc
add
jge
sbb
inc
mov
sbb
jp
icebp
add
repnz
push
outsb
jg
inc
insb
jo
je
test
neg
imul
sahf
or
inc
adc
push
dec
ret
mov
jns
inc
divb
es
lea
sub
cmpsb
scas
cmp
lods
in
xchg
in
mov
loope
mov
xor
xor
lcall
cld
jb
aas
leave
rcrl
fldl
mov
cmpsl
or
je
pop
mov
pop
or
mov
outsl
adc
lea
lock
ds
gs
fistl
lock
cmp
pop
xorb
mov
jae
cmpsb
sub
das
cmpsb
ret
sub
clc
enter
and
mov
std
sti
outsb
cmp
mov
jb
loopne
repz
or
pop
push
popa
dec
and
push
dec
rclb
jb
jge
cmp
add
lods
lods
xchg
sbb
jp
xor
das
ret
ret
dec
jle
aas
hlt
scas
imul
iret
outsb
outsl
sbb
loopne
xchg
nop
mov
lret
sbb
scas
mov
stc
test
sbb
push
mov
sti
fwait
iret
jno
lods
xor
jnp
and
mov
xor
decl
aas
inc
mov
and
ret
pop
inc
imul
lret
jl
add
jo
and
mov
lcall
out
cmpsl
test
add
sub
sub
nop
cwtl
rcrl
cmp
daa
sbbl
shll
jmp
mov
jb
daa
mov
or
xchg
or
xor
test
or
enter
xchg
xchg
aaa
mov
xchg
je
test
loop
sub
xchg
daa
lock
lcall
ljmp
push
iret
pop
pop
out
mov
fwait
sahf
push
dec
aad
xchg
mov
dec
outsb
rep
mov
mov
fldcw
hlt
out
push
ja
clc
and
icebp
insb
pop
mov
sub
divl
and
ljmp
mov
addr16
push
jae
add
push
stc
ret
sbb
jle
adc
pop
xor
nop
inc
pop
mov
adc
dec
push
in
lods
jno
mov
pop
popa
jp
iret
or
jo
out
inc
cltd
iret
sub
add
pop
adc
adc
outsb
outsl
cli
mov
xchg
inc
add
push
inc
mov
movsl
insl
mov
aam
mov
in
mov
sbb
cmp
mov
mov
cmp
loope
xchg
and
psraw
insb
and
jecxz
add
mov
push
negl
movsl
loopne
xlat
add
lods
mov
dec
pop
mov
fsubrl
test
repz
push
mov
orl
and
aaa
decb
lea
jmp
and
adc
outsl
dec
ficomps
pop
daa
lods
leave
add
pusha
pop
mov
jg
mov
aad
fisubs
sub
pop
lods
out
pop
inc
cmp
mov
in
imul
pop
setle
fwait
inc
dec
jne
int
stc
push
dec
data16
sub
jno
arpl
sbbb
or
arpl
fidivrl
pop
jns
pop
inc
push
popf
in
xor
dec
sbb
hlt
sub
cmpsb
ljmp
push
push
outsl
stos
xchg
push
js
addr16
ja
jmp
shr
inc
fwait
add
cmp
jo
inc
xchg
sub
rcll
mov
outsl
in
sbb
push
sbb
movsb
in
andl
push
repnz
addb
jb
mov
cwtl
mov
shll
or
aad
push
cmp
mov
jmp
xchg
in
scas
jnp
cmp
xor
lods
xor
test
sbb
pushf
bound
addr16
xor
clc
xchg
jno
jp
mov
cmp
sahf
mov
inc
scas
jae
mov
sbb
fimuls
test
shlb
mov
leave
mov
adc
xchg
add
ficomps
adc
push
jnp
popa
lds
out
cwtl
xchg
jecxz
mov
sbbl
jno
cmp
aam
dec
pop
inc
push
stos
aaa
stos
mov
adc
cld
or
jge
orl
dec
shlb
inc
pop
icebp
ja
mov
cmp
jnp
in
jbe,pt
mov
dec
mov
loope
ds
scas
dec
mov
or
data16
scas
jle
jno
jle
in
mov
sub
nop
jmp
in
pop
test
dec
mov
cmpsl
jns
mov
pop
aam
push
inc
jg
add
inc
xchg
insl
icebp
les
daa
cmpl
aaa
cmp
mov
fimuls
movsl
pop
scas
mov
push
jle
mov
imul
sub
xchg
hlt
or
popa
fcomp
adc
dec
inc
ds
push
fbld
cmp
rcll
jmp
jecxz
dec
arpl
lret
test
mov
inc
inc
xlat
xchg
pop
jle
stc
mov
and
xlat
hlt
and
cwtl
test
jns
and
mov
js
sub
mov
gs
sub
xor
je
mov
xlat
sbb
dec
enter
mov
out
or
shrl
mov
sahf
jno
xchg
dec
cli
mov
mov
add
mov
gs
sub
cmc
out
test
xor
adc
lea
bts
rcll
push
xor
mov
or
or
and
sbb
dec
imul
ret
lea
popl
inc
inc
imul
xchg
cmp
add
lea
mov
popa
js
adcb
dec
inc
leave
cmp
loope
cmp
xor
popa
xchg
fadds
loopne
mov
fnstsw
pop
jp
mov
sub
movsl
fcomps
popa
scas
outsl
in
inc
movsb
pop
ljmp
lahf
sub
sub
out
adc
and
pop
inc
lea
adc
push
pop
dec
rorl
mov
clc
or
and
mov
xchg
sbb
test
addr16
test
sahf
outsb
mov
lods
arpl
lret
aad
or
and
out
mov
xor
add
jecxz
sahf
lahf
js
ret
jmp
and
repnz
cmp
js
sbb
cmp
loop
rcrb
mov
adc
xchg
cmc
pop
xorl
xlat
das
pop
popa
jno
imul
xchg
xchg
add
je
mov
sbb
jno
mov
fdivp
dec
in
adc
mov
vcmpsd
popf
push
cmp
jne
pop
test
arpl
inc
mov
jns
test
enter
mov
mov
adc
popf
push
sub
mov
aam
fcomp
jmp
jo
std
enter
loopne
cwtl
out
mov
fcmovbe
jb
mov
sbb
mov
or
lahf
fmuls
lock
filds
lds
das
test
pusha
clc
and
and
dec
pop
push
and
sarl
inc
sbb
mov
inc
jmp
mov
into
loope
js
push
lock
mov
pushf
jbe
inc
and
mov
add
out
shrb
pop
inc
jns
xchg
push
movsl
inc
sbb
and
jb
shrl
inc
stos
push
xchg
add
lcall
ret
mov
mov
mov
add
loopne
jnp
bswap
push
add
push
dec
push
pop
sbb
cmp
fstl
ror
movsl
inc
jmp
test
loop
ficomps
int3
dec
jmp
dec
sub
dec
rcrl
imulb
vshufps
sbb
and
cltd
insl
push
mov
sub
outsb
jle
orl
or
jns
repz
push
mov
loop
sbb
mov
imul
push
mov
xchg
ss
xchg
xchg
mov
mov
add
int3
lock
pushf
sub
addb
lods
testl
into
call
inc
jl
or
in
cmpb
sti
lock
mov
and
jno
push
lahf
mov
inc
pusha
jb
rorb
fimull
push
xlat
jle
adc
or
imul
es
rorl
je
push
das
mov
inc
in
in
cmp
xor
jne
inc
jo
sbb
push
lahf
clc
lret
fimull
sub
fsubrs
mov
stc
lods
call
or
mov
jge
shlb
ss
pusha
mov
xor
add
loopne
pushf
xor
mov
cmpsl
sub
mov
out
mov
into
dec
add
push
add
push
cs
jbe
xor
out
jne
shll
sbb
push
push
mov
cmp
js
es
fsubrl
push
out
pop
or
js
push
int3
push
movsl
stos
out
sbb
hlt
hlt
scas
or
roll
push
insb
mov
fimull
xor
out
dec
add
repz
leave
ss
and
out
mov
cs
push
add
shll
mov
int3
test
xchg
popa
xchg
sub
jg
add
repnz
test
mulb
adc
lods
push
addr16
enter
pop
jne
sbb
adc
int
popa
dec
dec
sub
fsubrl
push
insl
rcll
jle
stos
cmp
pop
stc
xchg
mov
mov
adc
add
sbbl
call
lods
inc
hlt
aad
inc
hlt
pop
mov
shlb
gs
idivb
xchg
rcll
and
imul
arpl
mov
lcall
mov
jmp
mov
shrb
imul
addr16
jo
call
mov
mov
loop
shrl
in
lds
mov
xorb
xchg
xor
mov
leave
incl
dec
inc
rcr
xlat
sub
mov
adc
mov
xorb
loopne
pusha
popa
add
cli
sub
xchg
or
aas
pop
pop
inc
sti
mov
loope
add
rep
fsts
shrl
and
jae
push
sbb
push
rsm
xchg
adc
flds
mov
xchg
loopne
mov
cmp
mov
mov
or
movsb
cmpb
gs
insl
push
inc
test
fwait
clc
leave
mov
fwait
rclb
pop
add
scas
inc
push
push
jb
mov
scas
pop
adc
jp
out
stc
fbld
mov
ret
xchg
loopne
add
sbb
ret
negb
mov
mov
jns
lret
daa
lock
jae
sbb
pop
ja
push
lret
mov
sbb
fucomp
cmp
jb
fnstcw
jne
push
mov
stc
add
cmpsb
jns
dec
inc
pusha
push
xchg
jo
in
in
in
xor
jnp
pop
decl
mov
insl
popf
mov
lods
call
cld
mov
in
adc
cmp
push
lea
xchg
push
push
ficompl
ds
pop
insb
jno
push
sahf
mov
sti
fstpl
ret
pop
imul
pusha
jnp
mov
xchg
xchg
mov
rcrl
cmp
mov
cmp
cmpsb
out
gs
dec
cld
add
in
jecxz
icebp
sbb
add
shrl
mov
cmp
loopne
xchg
sub
in
add
movsb
pop
or
sub
aas
sub
hlt
sbb
mov
fisubl
imul
push
jg
cld
stos
xchg
jno
or
imulb
pop
pop
mov
jbe
rcll
std
sarb
jmp
sbb
dec
pop
sbb
data16
aam
mov
aad
arpl
sbb
jbe
repnz
or
int
cmp
subl
popf
movsl
and
in
pop
sar
out
insb
std
movsl
pop
push
or
push
sbb
mov
cmp
push
and
xchg
lods
xchg
push
lods
mov
sub
or
pusha
add
test
stos
les
frstor
outsl
andl
pop
stc
mov
cmc
test
je
pop
les
rorl
xor
ljmp
in
cmp
mov
insl
je
lea
bound
sub
arpl
dec
sbb
or
sbb
addb
outsl
test
shlb
shll
mov
mov
cmp
cmpsl
loop
dec
int3
outsb
lret
ds
jge
and
iret
jno
jns
mov
adc
or
lcall
sbb
cmp
ficomps
mov
int3
popf
mov
negl
pop
cs
dec
and
jle
push
xor
sbb
inc
pop
frstor
fwait
cltd
mov
test
div
push
aad
adc
jl
jle
loopne
aaa
mov
sbb
fsubl
push
pop
mov
jno
aas
jne
leave
push
jno
aas
inc
imul
push
gs
push
sub
dec
loopne
sub
nop
lea
cmpsl
push
fisubl
iret
in
sub
test
push
sbb
jo
cmp
inc
inc
stos
cmp
shrl
shll
dec
xchg
mov
and
mov
fnstenv
ret
and
push
mov
jo
sub
mov
enter
lea
push
pusha
mov
mov
xor
mov
push
cmp
xor
xor
aam
mov
popa
dec
add
inc
dec
std
xchg
aaa
xchg
test
stos
int
es
lcall
ss
cmp
jnp
cmpsl
cwtl
mov
clc
sbb
addr16
sub
shlb
mov
in
insl
movsb
shll
aam
punpcklbw
rorl
rcrl
or
push
lods
push
mov
lret
sahf
inc
icebp
mov
cmc
xchg
enter
int
cmp
add
xchg
insb
clc
mov
sub
cmp
xor
and
xchg
idivl
dec
inc
and
adc
sbb
or
loope
icebp
sub
test
jns
fisubrl
pop
std
cltd
sbb
xchg
and
jnp
and
sarb
xor
and
shlb
movsb
dec
add
jmp
dec
sysenter
add
mov
aas
adc
cmpsl
xchg
fs
or
add
and
les
addb
sbb
and
pusha
fisttpl
xchg
dec
and
cmp
popf
in
mov
jbe
add
dec
call
loopne
scas
xchg
out
leave
add
jns
orb
ljmp
xlat
pop
mov
dec
sbb
push
sub
scas
mov
shrl
sbb
adcb
stos
test
inc
and
out
dec
loopne
and
lret
decl
cltd
cmp
popa
xchg
mov
int
shr
stos
or
sub
pop
pusha
jno
push
pop
dec
xor
scas
mov
mov
push
fisttpl
hlt
push
into
xchg
adc
aaa
jno
out
jbe
cli
add
push
movsb
sbb
insl
pop
cmp
popa
pop
jo
mov
sub
ja
in
push
aad
adc
loop
into
orb
and
pushf
outsb
or
stc
ret
andps
in
jg
test
dec
inc
inc
add
xor
fisubrl
insl
repz
add
push
cmp
and
pop
pop
je
test
mov
imul
movsl
dec
mov
xor
push
ds
mov
and
pop
fisttpl
insb
je
mov
js
lret
sub
in
sub
aam
in
xor
insl
pop
jbe
out
inc
mov
xlat
ret
inc
fidivrs
or
mov
dec
std
test
outsl
push
and
inc
aaa
scas
push
ss
std
cltd
pop
addr16
or
lret
xor
push
fildl
ret
lds
idivb
pop
and
es
add
test
insb
adc
dec
or
push
pop
out
jp
shlb
mov
ss
cwtl
fisttps
sbb
pop
mov
or
sub
repz
pop
popf
mov
mov
out
cmovb
and
lcall
mov
icebp
adc
lea
cmp
mov
dec
adc
pop
mov
hlt
arpl
xchg
pop
cmp
cmpsl
or
orb
pop
cwtl
sbb
icebp
ljmp
xchg
add
mov
cmpsb
je
push
jl
call
dec
mov
repnz
jmp
pop
scas
push
pop
fld
outsb
scas
orl
je
mov
jge
pushl
mov
mov
and
mov
repnz
out
jne
es
or
mov
imul
dec
add
in
stos
aam
xorb
imul
pop
dec
lcall
loopne
sbb
fwait
and
popa
sbb
outsb
ss
scas
mov
mov
jae
mov
mov
xchg
hlt
idiv
fdiv
insb
xor
lcall
lods
adc
inc
cmpl
stos
loope
call
jb
mov
jnp
test
test
in
inc
cmp
cmpb
sub
sti
and
fs
jno
dec
lret
dec
test
pop
sbb
inc
outsb
imull
pop
xchg
incl
and
cmp
fnstenv
aad
sti
and
mov
inc
out
call
ret
lds
dec
dec
les
push
inc
ficomps
aad
cltd
xchg
pop
push
lods
inc
js
push
out
lods
pop
adc
popa
fstpl
push
inc
xor
inc
stos
adc
fwait
mov
add
pushf
dec
adc
dec
adc
fsubp
repnz
gs
data16
repz
adc
sbb
in
mov
aaa
shl
pop
mov
jae
xor
js
hlt
outsl
lret
mov
add
ret
es
lret
jno
ret
icebp
jbe
dec
xchg
loopne
icebp
fs
and
xchg
cmp
xor
ja
pusha
in
mov
add
jmp
add
call
ja
fistpl
out
push
xchg
stos
push
outsl
scas
insl
lret
lods
cmp
dec
inc
mov
ds
or
pop
push
daa
cld
add
push
adc
frstpm(287
in
xchg
repz
and
push
mov
pop
and
orb
scas
std
decl
dec
push
add
dec
in
popa
xchg
mov
sahf
cmp
sahf
push
dec
ds
sub
int3
sahf
popf
rolb
insl
dec
and
xchg
mov
loop
mov
xor
test
js
xchg
rcll
aas
jns
fucom
lret
jp
push
push
jns
mov
mov
data16
ror
add
mov
in
adc
sub
ficoms
push
push
das
outsb
cmp
dec
push
jo
push
lret
data16
pop
cmp
mov
adc
jmp
daa
ja
jb
sub
xor
or
int
xor
xchg
jb
fldt
out
insl
xor
push
enter
or
lock
lock
and
mov
std
rol
cmp
push
pop
aam
or
lret
sub
repz
xor
jnp
inc
cmp
movsl
mov
and
push
into
outsb
pop
loop
mov
dec
add
sub
sub
jns
pop
xchg
jae
cltd
push
mov
push
test
jmp
cmp
pop
pop
xchg
or
lods
lock
dec
cmpsb
adc
or
cmp
cli
jne
mov
push
push
test
mov
lods
push
ds
cmp
std
and
mov
rcrl
inc
cli
int
xorb
pop
and
sahf
test
call
jae
out
xchg
and
pop
jge
js
shll
sarb
mov
jns
jge
out
fadd
mov
push
adc
repz
mov
cmpsb
push
push
pop
insb
sahf
pop
pop
mov
aad
mov
into
push
mov
repz
or
mov
add
into
lock
jno
mov
sbb
mov
sbb
xor
mov
push
and
imulb
out
cmp
loope
mov
sub
icebp
mov
not
popf
punpcklwd
cmpsl
fcompl
lods
outsb
sub
ror
not
loope
jb
sahf
int3
dec
addb
lret
aaa
sbb
inc
sbb
clc
xchg
sbb
movsl
mov
ljmp
cmp
lds
adc
push
and
je
cmc
and
shll
inc
push
jne
push
mov
test
inc
fstpt
mov
mov
sbb
mov
cmp
xor
ljmp
pop
leave
dec
out
pop
clc
xor
dec
xchg
sub
out
xor
mov
iret
in
dec
pop
pop
enter
xchg
lea
data16
das
xor
fistl
fs
test
mov
and
pop
adc
jg
push
aas
out
xchg
out
push
in
out
jl
cmp
sub
cwtl
pushf
mov
push
sarl
stos
mov
mov
jge
int3
je
out
pop
lahf
sti
sbb
cmp
pop
stos
or
xchg
loop
jae
test
pop
jmp
fcmove
test
addb
xchg
lock
les
push
add
test
mov
sbb
fisttpll
dec
pop
leave
jae
inc
sub
pushf
mov
mov
das
cmp
push
int3
rcl
arpl
enter
xor
decb
dec
shrb
testl
jae
jecxz
data16
test
in
add
nop
mov
cwtl
xor
and
inc
mov
out
xchg
ljmp
test
aad
clc
enter
lret
cmp
push
sbb
dec
sub
dec
jb
mov
mov
cltd
pop
rcrb
repnz
pop
mov
imul
dec
xchg
lcall
in
mov
mov
mov
insl
jne
push
inc
daa
lds
sbb
pop
pop
cmp
pop
sub
add
imul
loope
mov
pop
stc
mov
rcll
inc
xchg
stos
fmull
in
aaa
jae
arpl
cmp
jb
xor
inc
add
mov
pop
and
mov
xchg
sbb
jnp
pop
mov
xchg
sub
lcall
xchg
call
sub
icebp
cmc
cmp
loopw
mov
dec
in
loop
push
jnp
dec
sti
rorl
cmp
xorb
cmp
mov
inc
sbb
je
loopne
mulb
stos
mov
in
sbb
ljmp
cmc
andl
pusha
inc
test
dec
sbb
rclb
xlat
clc
pop
or
orl
xchg
cli
jns
xor
lret
sbb
fcompl
jp
popf
movsl
pop
lock
xchg
fistpl
data16
inc
jle
int3
push
push
aas
lods
add
fs
mov
roll
mov
xchg
ja
pop
decb
push
or
sbb
mov
lock
adc
xor
pop
mov
cmc
xchg
scas
jns
outsl
jnp
dec
jb
pusha
jno
cmpsb
iret
fsubrs
and
lods
mov
mov
fisubrl
xchg
xor
push
imul
dec
mov
int
stc
jno
idivb
std
fiadds
xor
sahf
push
xchg
jnp
lock
repnz
xchg
addb
pushf
sub
or
f2xm1
sub
notb
mov
orb
inc
inc
leave
ret
xlat
cmp
inc
cmc
push
stos
ja
jg
test
mov
sub
mov
leave
lea
ss
hlt
fnstsw
or
adc
sbb
lds
dec
loop
cs
in
stos
mov
sarl
sbb
mov
out
sbb
nop
pushf
lds
stos
testl
mov
mov
xlat
fisttpll
adc
pushf
push
aaa
xor
cmpsb
aam
pop
out
lods
add
lea
outsb
sub
rcrl
aaa
aad
shr
negb
sarl
in
pop
fisubrl
into
rolb
pop
sahf
stos
push
jb
sub
adc
call
mov
xchg
pusha
loopne
ret
and
sub
and
push
xchg
add
cmp
cmp
mov
sub
adcl
loope
and
cmp
mov
cmpsb
add
adc
pop
fstl
rolb
add
fcompl
mov
fnsave
dec
loope
inc
pop
and
lret
vmovaps
pop
pushf
stos
loope
mov
jno
adcl
xchg
aas
pop
arpl
or
pop
rorb
cmp
sub
adc
dec
push
cld
cwtl
bound
sub
sbb
push
int
or
or
adc
inc
cmp
sub
push
adc
fdivl
xor
jge
push
je
sbb
lret
lahf
add
jp
jnp
incb
lods
les
test
fistl
test
adc
scas
call
dec
xor
pop
sub
jmp
loopne
test
cmpsl
and
xor
push
cs
and
int3
mov
ret
dec
dec
fs
std
stos
ss
aam
in
mov
out
pop
sbb
jnp
imul
mov
loop
sub
pop
jbe
add
mov
clc
fnsave
sarl
ret
xchg
cmp
leave
lds
add
call
mov
adc
out
dec
pushw
adc
mov
jne
mov
or
and
and
inc
sub
loop
in
lcall
xchg
ljmp
mov
cmp
mov
movsl
sti
dec
mov
inc
jge
xchg
dec
xor
push
xor
inc
and
arpl
push
push
cmp
pop
scas
in
fbld
fst
or
mov
pop
jmp
xchg
gs
pop
cmp
xchg
hlt
aaa
mov
adc
mov
sub
loop
mov
add
mov
addl
scas
ds
mov
test
pop
mov
xor
js
sarl
popf
sbb
sbbb
fisubl
rcll
insb
std
cmp
jno
in
sub
sub
loope
jmp
mov
cmpsl
shlb
pop
inc
test
or
icebp
pushf
cmc
arpl
push
xor
mov
iret
std
lret
out
popf
out
imul
pusha
test
xor
hlt
jns
pop
cwtl
sbb
pusha
inc
shr
in
ljmp
popf
jns
ret
jno
dec
pushl
bound
cmp
dec
jecxz
or
cs
enter
test
mov
sbb
aad
icebp
jne
insb
fstpt
pop
sbb
adcb
mov
imul
in
mov
gs
adc
scas
fcoms
data16
sub
add
aad
stos
push
rcrl
aas
mov
stos
add
adc
jne
fldenv
sbb
or
add
lcall
test
dec
rolb
lcall
test
xor
sahf
push
add
pop
fisttpl
pusha
add
pusha
or
neg
pop
lret
jbe
std
xchg
pop
arpl
push
push
inc
sub
or
aad
pushf
mov
and
push
fisubl
insl
stos
xchg
mov
or
sub
push
jo
or
add
icebp
jg
pusha
sbb
or
stos
mov
das
lods
cld
lods
rol
fwait
repz
pop
cltd
or
movsl
loop
out
xchg
lods
loopne
mov
rcll
loop
ret
pop
ss
aam
cmp
xlat
xchg
into
adcl
in
fimull
and
pop
xchg
inc
jl
lock
pop
sbb
lahf
jo
mov
inc
pop
testb
xchg
cmpsl
sub
push
inc
hlt
fsubs
pop
or
cmpsb
test
jb
scas
jns
lds
mov
jg
jnp
ret
in
mov
test
jge
call
sbb
xchg
leave
xchg
pop
je
inc
cwtl
leave
loopne
or
jmp
enter
or
mov
jbe
decl
rorb
jno
in
ja
xchg
je
mov
mov
aaa
je
and
lds
clc
or
movsb
and
das
jcxz
mov
rorb
rclb
in
fnstcw
cld
scas
fwait
roll
or
mov
movsl
xchg
pop
repnz
mov
mov
jbe
fs
rclb
stos
cmpsb
js
jg
aas
flds
mov
jns
push
out
mov
push
jns
sub
fisttps
pop
popf
cmp
mov
lea
movsl
loopne
mov
fucomp
test
int3
pop
ja
loop
shll
inc
lahf
inc
pop
and
hlt
out
test
and
xor
xlat
shrl
sub
in
nop
mov
std
adc
or
cmc
xor
dec
mov
cmpsl
repz
push
mov
stc
sahf
and
xchg
push
icebp
lods
cmpsl
mov
sub
lret
int3
int3
fidivrl
adc
cltd
bswap
in
fwait
pop
mov
ds
ss
insl
pushf
es
xchg
pop
push
fistl
inc
jecxz
sub
adc
sub
xlat
cltd
jne
in
sbbl
mov
call
xchg
push
clc
ret
xor
xchg
stos
lock
push
test
lret
pop
mov
les
mov
or
outsl
sub
pop
jno
lahf
lret
push
xlat
insl
cmpl
pop
push
loopne
movb
arpl
pop
mov
js
mov
mov
push
data16
dec
add
dec
clc
adc
jbe
aas
add
adc
pop
push
loopne
lret
push
lods
int3
xchg
ljmp
mov
mov
ljmp
cltd
fnsave
adc
lods
cmp
add
out
xchg
test
or
popf
xchg
stos
cmp
fistps
cmp
xchg
pop
sub
cmp
lret
sarl
mov
mov
enter
cltd
imul
adc
in
pop
fldcw
mov
ds
and
fimuls
test
fcmovbe
mov
or
and
pop
ss
loop
inc
in
ret
add
loop
jno
and
inc
loop
mov
bound
cmp
adc
sbbb
xor
adc
lret
dec
pop
loopne
xor
adc
roll
js
cmp
dec
add
rolb
push
repnz
jbe
mov
and
ficoml
addr16
fnstsw
mov
jecxz
pop
rolb
iret
jo
cltd
mov
xor
dec
xchg
push
sbbb
idiv
push
pop
imul
jo
pop
jg
jo
or
push
sarb
dec
sub
jnp
fwait
push
aaa
jl
sub
sub
xchg
fsubl
call
pop
adc
bound
add
dec
add
push
cwtl
out
and
in
push
jge
xchg
xchg
aas
lock
cmpl
mov
or
dec
lahf
jge
mov
jecxz
out
adc
or
cmpsl
nop
mov
ss
or
daa
push
adc
inc
lods
mov
xchg
add
imul
inc
push
mov
imul
xchg
enter
dec
mov
jle
jae,pn
hlt
dec
sub
stc
mov
and
arpl
scas
adc
bnd
stos
aam
sub
loop
mov
stc
pop
pop
xchg
jno
sbb
xchg
ss
xchg
inc
pop
pop
mov
xchg
dec
push
sub
xchg
xchg
mov
adc
stc
mov
xchg
push
inc
lcall
add
daa
lods
sarb
pop
cmp
xlat
xchg
ljmp
shr
das
pop
pop
shlb
fcmovnb
xor
or
pop
rorl
push
pop
xor
outsl
pushf
mov
push
fwait
repnz
sub
fmull
mov
lret
xchg
mov
dec
fdivs
ficoml
mov
dec
adc
scas
cmp
pushf
fsts
lret
fdivr
arpl
daa
cltd
add
push
add
add
imul
rorb
cmp
test
push
xchg
pusha
ret
xchg
movl
pushf
dec
sub
movl
xchg
in
fidivl
pop
push
mov
jbe
inc
cltd
imul
les
add
mov
lahf
push
push
jmp
jle
mov
mov
in
and
pushf
jp
adc
sbb
sub
and
btc
cli
push
and
mov
movsl
sbb
xor
loope
insl
xchg
in
cpuid
shrb
fdivr
shll
inc
iret
push
daa
jne
popa
jge
push
int
lds
pushf
ja
movsl
xor
jbe
or
pop
sarb
clc
xchg
adcb
aas
xchg
push
jg
add
sti
test
fnsave
imul
jle
lods
mov
mov
xor
push
outsb
and
sbbl
sub
jecxz
fwait
push
stos
mov
xor
mov
dec
mov
scas
xchg
fsubrs
fidivl
xor
shr
not
xor
outsb
mov
fld1
in
aaa
div
inc
add
cmp
int3
repnz
testl
jbe
add
sbb
cwtl
lock
hlt
add
int3
add
cmpsl
xchg
inc
pop
dec
outsl
int
jg
hlt
andl
sti
ds
imul
mov
int3
jae
sub
addb
pop
xchg
jl
jle
lahf
and
cwtl
pop
aad
sub
fs
stos
sub
scas
lret
mov
leave
pop
mov
mov
push
mov
in
movsb
pop
sbb
bound
inc
mov
and
dec
cmp
push
lahf
mov
mov
and
rcll
test
pushf
cltd
jmp
test
rorb
pop
cmp
fs
mov
push
std
out
jns
mov
in
jns
mov
ret
push
sub
jbe
sahf
imul
cltd
into
sub
es
fsubs
xchg
mov
negl
cmpsl
rolb
repz
cmpsb
adc
inc
je
inc
out
mov
imul
or
and
dec
out
hlt
stos
xor
stc
cmp
dec
lahf
stos
das
negl
leave
ret
push
imul
repnz
mov
test
paddusb
aam
mov
push
sbb
loop
mov
arpl
adc
inc
pop
push
push
in
push
mov
lea
roll
mov
mov
sbb
lret
push
cmp
sub
cld
cs
inc
aas
xchg
push
sbb
dec
lods
lock
rol
fisubl
in
enter
ror
push
ljmp
lds
xchg
xchg
dec
lcall
pop
pop
mov
dec
ds
mov
cmp
insl
clc
xlat
rcll
jecxz
aas
cmpsl
stos
rorb
lcall
bound
divb
movsl
or
loope
cmp
les
xchg
sub
outsb
ret
pop
orl
insl
mov
fistpl
aas
psraw
cmp
test
scas
xor
cmpb
scas
in
in
cmp
fnsave
add
adc
push
jno
mov
or
push
push
mov
sti
cs
sub
cmpsb
stos
in
adc
mulb
jge
and
xlat
lahf
jnp
or
hlt
test
mov
cli
adc
into
sub
fs
mov
mov
mov
pushf
and
shufps
xlat
lea
push
loope
ss
sub
mov
add
cmp
sti
repnz
jnp
sub
push
mov
inc
stos
push
jge
cli
sbb
je
pop
lret
jle
ret
neg
sub
xchg
addb
fs
lret
mov
add
lock
fisttpl
pop
mov
test
mov
sbb
ss
mov
and
movsb
xchg
inc
push
or
mov
pusha
xor
fs
movsl
and
iret
pusha
sbb
lret
add
aaa
ret
cmp
call
shr
or
aad
addr16
xchg
push
testb
push
dec
fcmove
popf
or
pop
lods
in
aaa
lret
sbb
lods
dec
out
pmuludq
leave
sbb
mov
push
add
add
aad
out
xor
movsl
js
xor
xchg
pop
cmpsl
pop
in
aad
out
xor
into
mov
hlt
mov
jle
aam
scas
xor
pop
lar
aad
outsb
jno
test
stc
dec
adc
or
clc
xor
popf
ficomps
das
rorb
jne
fldpi
sub
dec
test
jmp
pop
js
sbb
and
inc
lret
outsb
jg
and
in
push
out
or
call
inc
cmpsb
mov
mov
cmp
rorb
mov
cmp
stc
or
mov
ret
es
jp
mov
sub
cmp
movsb
sbb
lods
psubusw
xor
dec
repz
cwtl
dec
in
popa
jg
enter
jae
mov
add
jnp
fldl2t
fs
adc
imul
decb
aam
test
addr16
out
add
pop
push
xchg
jp
mov
jo
popa
sub
icebp
xchg
add
add
add
sbb
cmp
js
push
mov
jb
add
dec
ja
lahf
loop
sub
lea
sti
xchg
push
rcll
sti
pop
jmp
ret
aad
inc
xchg
push
cmpsl
fwait
dec
inc
enter
and
mov
sub
mov
mov
shr
adc
push
je
js
mov
shlb
xorb
cwtl
inc
xorl
push
sub
push
fbstp
daa
je
test
out
outsl
into
fimuls
popa
movsb
shll
or
inc
dec
adc
std
and
fidivl
cmp
push
loop,pt
lret
push
jl
add
xchg
and
lcall
insl
push
sub
scas
adc
adc
mov
push
movsb
and
movsl
inc
cmpsb
jno
xchg
cli
rorl
sub
mov
bound
cmpsl
push
cmp
mov
mov
sbb
mov
sub
mov
dec
pop
and
push
push
mov
pop
fstpt
das
je
daa
mov
cltd
rcll
pop
scas
sbb
pusha
lea
dec
loop
cltd
add
inc
rcrl
push
clc
test
movsb
xlat
int3
int
mov
mov
imul
adcl
shrl
rclb
sbb
das
mov
jo
push
push
lea
mov
xor
xchg
outsl
pop
into
cmp
loopne
fadds
add
dec
popa
inc
jne
pop
int3
movsb
je
mov
or
pusha
jns
cli
adc
push
jb
xchg
pop
mov
movsb
mov
shll
and
test
pop
xor
sbb
lods
push
xor
jo
jecxz
xor
andb
xor
jg
mov
jnp
test
das
mov
pop
pop
mov
in
dec
jbe
dec
lcall
psllw
mov
lock
jp
sti
xchg
inc
xlat
inc
adc
xchg
int
dec
xchg
mov
daa
fadds
inc
pop
rcll
xor
cwtl
and
add
dec
jg
push
stos
fadds
clc
arpl
sarl
cmp
pushf
into
stos
test
or
add
pop
push
xchg
or
scas
cmc
mov
jo
add
test
cmc
inc
shrl
pop
xchg
hlt
add
and
std
mov
imul
mov
movsb
xor
cmpsb
dec
cmp
loopne
mov
js
mov
in
xor
adc
dec
ds
sbb
push
insb
pop
arpl
test
xor
sub
ja
xchg
ret
loope
lock
icebp
cmp
xlat
or
sarl
dec
jmp
pop
push
mov
lret
mov
test
mov
sbb
sbb
cwtl
mov
adc
das
mov
subl
pop
and
adc
xchg
incb
inc
pop
ss
loope
outsl
jg
cmp
std
fs
xchg
fistl
mov
stos
xor
xchg
mov
push
push
scas
inc
fstpl
stos
aaa
push
mov
mov
cmp
and
test
sbb
mov
cwtl
push
call
outsb
cmp
push
and
ss
mov
hlt
cwtl
cmp
sub
jnp
jp
inc
adc
add
jne
lods
pusha
in
mov
adc
sbb
sbb
mov
jle
or
imulb
les
adc
dec
aaa
inc
jecxz
sub
out
out
cmp
mov
fwait
or
movsb
push
adc
cwtl
aas
inc
xorb
aad
stos
mov
pop
dec
popf
je
mov
push
push
dec
pop
or
push
aad
loopne
fwait
int
fisubrs
mov
es
clc
pop
sbb
push
sbb
jo
sbb
mov
pop
hlt
dec
adc
lea
and
xchg
repz
push
inc
push
mov
stos
addr16
rorl
bound
push
mov
pop
adc
sbb
shlb
mov
stc
inc
jns
add
loope
mov
insb
dec
and
xor
pop
xor
lods
mov
inc
jp
nop
fwait
ret
and
mov
lret
jle
mov
xchg
out
jo
sti
andl
pop
loopne
stc
loopne
push
or
inc
push
std
fnstenv
movsl
rorb
dec
pop
or
stos
cmpsb
pop
fistps
or
sub
dec
mov
adc
cmp
aad
in
xchg
rolb
mov
sti
sbb
aad
mov
scas
xor
data16
mov
cmp
xor
int
in
loope
jno
leave
xchg
popa
pushf
fimull
sbb
or
adc
icebp
cmpsb
fmull
sub
out
mov
data16
sbb
push
adc
stos
xchg
sbb
outsl
pop
rolb
imul
mov
jo
fmul
nop
pop
lods
rcrb
xor
loope
mov
mov
movsb
shll
and
in
lds
pop
jae
pusha
mov
dec
enter
sub
mov
xchg
mov
sbb
movsb
sub
jp
push
je
adc
sbb
jae
lret
push
lret
push
pop
arpl
pop
loope
ret
or
movsl
xlat
mov
push
mov
xchg
or
ret
push
sbb
pop
inc
cld
mov
test
into
jne
sti
imul
or
jl
adc
jge
inc
test
dec
xchg
aad
jp
inc
mov
outsl
ret
into
les
andb
mov
pushf
or
stc
sub
js
mov
jnp
movsb
jae
fcompl
repz
fildll
dec
test
stos
sbb
and
aam
loopne
jecxz
rcrb
mov
ret
repnz
gs
or
imul
jge
mov
push
and
fimuls
jno
pop
popf
cmpsl
mov
lock
outsb
enter
mov
lret
mov
jl
jb
mov
sub
xor
xchg
mov
push
sbb
push
js
fstps
mov
dec
mov
mov
mov
xchg
scas
mov
popf
fsts
mov
dec
movsl
lock
jecxz
xchg
push
test
stc
sbbb
mov
movsl
jnp
int3
push
imul
adc
andl
jmp
sbb
cmovae
pushf
ja
rorl
stc
inc
sub
dec
pop
mov
jbe,pt
xchg
shlb
js
cmp
sbb
pop
fnstsw
fildl
repz
lahf
or
xor
testb
mov
and
push
aad
xor
cltd
rolb
cli
and
sub
popf
sarl
add
or
add
xchg
pop
test
mov
mov
std
lcall
xor
pop
iret
stos
push
imul
cli
sub
mov
pop
mov
ret
push
cmc
mov
adc
mov
jnp
and
ds
xor
insl
pop
outsb
call
dec
mull
cltd
mov
imul
sti
dec
repz
xchg
add
and
loopne
cmp
xchg
adc
imulb
mov
out
mov
push
test
mov
mov
inc
lret
dec
out
xor
imull
cwtl
adc
sti
gs
and
jbe
lods
out
inc
icebp
jecxz
jmp
adc
mov
jb
pushf
idivl
add
xchg
test
mov
cltd
xlat
xchg
aad
std
push
mov
inc
sbb
lods
mov
inc
cmp
inc
in
add
addr16
mov
xor
sub
sbb
inc
sbb
xchg
mov
sub
sbb
repnz
test
and
aaa
mov
xor
je
cmc
dec
jae
pop
insb
fwait
pop
movsb
xchg
in
xor
test
fs
rorl
lahf
inc
lds
cmc
pop
jg
xchg
push
and
fcom
pop
test
pop
jae
xor
mov
and
add
js
insb
mov
cs
sub
lods
xchg
jecxz
cmp
les
enter
lahf
cs
out
ss
adc
js
cmp
repz
xchg
stos
pop
inc
push
cmp
xor
ffreep
clc
into
push
mov
int3
jl
shll
mov
ret
pop
sub
mov
pop
push
loop
ror
xor
xor
xorl
xchg
xchg
pop
stc
ss
pop
fyl2xp1
push
sbb
cmp
aas
mov
and
adcb
mov
dec
faddl
mov
mov
das
mov
fincstp
ljmp
jg
xchg
lret
sbb
mov
cwtl
gs
popa
mov
cmp
test
fstpl
push
pop
mov
stos
test
leave
subb
push
movsl
punpcklwd
out
mov
dec
sub
in
pop
int3
aas
js
bound
sub
xor
push
outsb
xchg
push
sub
pop
mov
sarl
jns
sub
mov
ficoms
fidivs
dec
into
add
sub
xchg
popa
push
inc
xchg
jecxz
sub
les
movsb
scas
and
popa
test
test
sarb
push
cs
pusha
add
mov
sub
fcmovnu
stos
sbb
add
jne
jo
cmpsl
movsl
cmp
repz
stos
in
andl
inc
mov
mov
jb
sub
mov
mov
mov
rolb
and
or
xchg
pop
repz
hlt
dec
xor
icebp
mov
jp
loope
push
test
push
mov
jecxz
inc
test
mov
popa
xor
push
ljmp
pop
or
addb
test
sub
repnz
popf
sbb
loope
fidivs
shlb
imul
adcl
enter
push
data16
mov
in
bound
push
push
xor
sbbb
movsl
xor
dec
icebp
push
mov
incb
mov
mov
mov
dec
xchg
out
lock
stos
mov
cmp
loope
or
mov
cwtl
inc
sbb
mov
mov
adc
in
js
cmpsb
jno
cmpsl
test
inc
adc
stos
dec
int
mov
sbb
out
outsb
mov
dec
fldl
aam
lods
inc
xchg
jb
fildl
fildll
ret
pop
mov
add
in
push
aam
mov
ss
enter
mov
jge
push
or
add
inc
cmpsb
leave
in
out
hlt
loope
imul
jno
lcall
jb
rep
sbb
and
adc
in
addb
ds
neg
popa
inc
enter
loope
fstpt
test
aam
js
cmp
roll
test
xchg
add
mov
int3
xchg
loop
pusha
cmp
push
push
push
sti
push
jnp
mov
jl
popa
push
jb
adc
jnp
xchg
mov
xor
add
es
and
test
jge
sub
add
std
imul
mov
icebp
jb
dec
pop
orb
xchg
movsl
dec
ja
popa
push
les
jmp
mov
decl
adc
fstpt
adc
xor
mov
dec
add
data16
int3
cmpsl
outsl
icebp
mov
pusha
jno
mov
js
mov
mov
xlat
pushf
jge
fcmovbe
std
xor
pop
inc
pop
push
pusha
xchg
popf
mov
popf
pop
stc
mov
test
in
mov
andb
jbe
movsb
pop
popf
int
fists
pop
and
movsl
es
mov
jnp
cmp
ret
stos
push
aas
jno
adc
hlt
xor
sbbl
xchg
sbb
add
jp
inc
mov
cmpsb
int3
push
pop
int3
lods
adc
jo
lret
hlt
cwtl
cmpsl
in
jo
cmpsb
adc
repz
dec
jge
mov
mov
mov
hlt
cli
int
add
xchg
add
bound
hlt
lret
push
gs
dec
loopne
mov
sub
int
lods
jg
sub
lea
dec
mov
movl
mov
std
scas
stc
test
loopne
gs
test
mov
push
jbe,pt
insl
xor
sub
adc
sub
mov
cmp
adc
jg
jb
add
mov
addl
dec
jg,pt
data16
adc
ss
mov
aas
pop
das
sbb
pop
push
xor
cmpsl
imul
jp
outsl
rolb
mov
adc
shll
loopne
push
sub
add
pusha
popl
aam
in
inc
out
imul
and
sbb
ret
mov
mov
arpl
lds
int3
jge
cmp
mov
mov
std
sbb
dec
jno
push
jp
iret
dec
cmp
sbb
sbb
repz
into
jo
rclb
fs
loopne
gs
lret
loope
mov
xchg
aas
lcall
popf
pop
lds
cmp
ficoml
fsubr
dec
and
or
xor
stc
sbb
ficoml
ljmp
mov
je
repnz
add
mov
inc
and
call
insb
iret
mov
push
push
xchg
in
rcrl
ljmp
inc
sub
mov
jno
popa
ret
push
pop
into
pop
cltd
out
fisttpll
stos
jle
loopne
in
imul
jecxz
inc
nop
aad
sub
xor
add
jmp
pop
xchg
jmp
push
jno
aad
js
sahf
sbb
push
notb
mov
stos
xchg
icebp
add
ss
aam
into
mov
mov
sahf
mov
pop
repz
jecxz
push
stc
popf
js
movsl
enter
xor
sbb
out
jge
sub
adc
mov
xchg
rolb
lods
rclb
pop
xchg
jg
adc
xchg
jo
mov
out
cmp
icebp
push
adc
inc
sbb
adc
jg
and
lods
cmp
arpl
jecxz
adc
add
cmp
stos
jb
mov
and
iret
outsl
lea
sti
gs
sti
xor
cmp
das
mov
pusha
dec
fs
bound
pop
jmp
int3
and
hlt
out
sub
ret
cltd
pusha
push
pop
lea
inc
rcll
outsl
xlat
xchg
lock
mov
fisubl
out
rcrb
movsl
adc
jne
enter
ss
xor
jns
stos
pushf
jg
inc
cmp
push
jnp
lock
pop
sub
mov
pop
or
or
fidivrl
mov
push
and
mov
add
inc
adcb
adc
ret
push
dec
cmpsl
repnz
or
cmpl
out
dec
subb
sbb
into
inc
sub
xor
push
mov
mov
nop
lahf
in
outsl
jp
mov
inc
or
mov
mulps
add
or
and
dec
push
jb
lock
fimuls
mov
movsl
cmpsb
lahf
push
je
adc
aas
lcall
rclb
push
push
aas
cld
lods
pop
mov
div
or
lret
and
or
add
adc
call
jg
in
lahf
jno
cmp
pop
xchg
push
cmp
movsl
stos
in
aad
inc
sub
and
mov
inc
scas
pusha
push
mov
push
sbb
push
jl
inc
xor
sbb
lret
movsb
sahf
xchg
loope
jns
xlat
fwait
or
mov
xlat
sbbb
in
loop
divb
popf
mov
mov
aas
cmp
and
pusha
cld
idivl
lcall
and
pusha
addr16
stos
test
jo
les
es
inc
sub
dec
cmp
ret
mov
mov
xor
sbbl
aas
push
lods
push
jle
push
stos
pop
div
sbb
jecxz
addb
dec
in
scas
inc
daa
movsb
out
lea
inc
test
jle
push
stos
test
je
lret
nop
push
cmpsb
and
mov
ja
cltd
xorb
inc
or
xor
addr16
mov
stos
or
add
add
ror
fstl
pop
pop
fiaddl
pop
sbb
in
cmp
dec
and
mov
mov
add
iret
inc
mov
leave
mov
jo
push
test
lea
jns
ret
jbe
daa
inc
and
in
cmp
test
jae
fidivl
or
jae
mov
dec
sbb
mov
stos
imul
loop
lahf
mov
fisttpll
repz
add
mov
push
ljmp
in
inc
add
ret
mov
pop
sbb
or
xor
popa
inc
fbstp
repnz
push
push
mov
push
pop
pop
outsl
dec
add
das
push
fwait
sahf
iret
push
inc
out
enter
in
fcmovnu
repz
movsb
mov
mov
inc
cli
sarb
inc
xchg
int3
and
adc
int
in
jns
mov
xchg
mov
inc
xchg
in
icebp
pop
inc
rcrl
fstl
cmp
in
test
lret
inc
mov
lcall
div
jns
pop
pop
jae
push
out
gs
jecxz
inc
mov
dec
push
sti
sbb
dec
jp
stos
mov
insb
es
ret
xchg
scas
addb
movsb
fiadds
int
push
inc
out
add
mov
fwait
pop
push
xor
fmull
cs
fnstcw
jo,pn
jl
shll
and
mov
jne
aam
cmp
mov
sbb
ja
fmul
jl
cmp
in
test
je
and
sub
inc
jno
stos
lods
mov
jl
sbb
cmp
jns
nop
bound
orl
gs
pop
std
addl
inc
and
out
enter
cmc
clc
popa
jae
cld
sbb
or
xchg
lret
mov
dec
lods
jmp
ret
leave
stos
push
sbb
out
in
sti
push
int
cmpsl
arpl
xor
shrb
pop
jno
insl
shll
lods
jo
sub
mov
mov
push
jecxz
sub
fwait
ljmp
sub
daa
out
mov
jnp
mov
daa
mov
popf
testl
xor
mov
cmpl
add
xchg
add
xchg
fsubr
outsl
fsubrs
out
sub
gs
frstor
aam
add
popf
add
push
add
push
mov
popf
mov
push
pop
cmpsb
sbb
xor
and
sbb
es
push
xchg
js
les
fsubs
dec
xlat
addr16
jge
jp
push
xor
in
and
loope
lahf
fistpll
popl
sbb
jne
mov
loopne
or
dec
ret
jb
lahf
adc
movb
adc
add
jb
jp
stos
push
lds
je
enter
xor
xchg
xor
test
add
nop
sbb
xchg
pusha
int
pop
jns
xor
mov
addr16
jae
dec
js
sub
mov
lods
test
pop
imul
add
and
fs
lock
out
xlat
ja
jo
mov
mov
xchg
jge
sub
inc
les
add
cmp
adc
dec
loopne
loop
mov
cmp
inc
xor
or
pop
loop
fsub
mov
pop
mov
repz
ficoms
fdivl
lea
xchg
enter
loopne
pop
lcall
push
mov
test
cmp
aad
mov
clc
xor
dec
pop
pop
mov
mov
sbb
mov
jb
imul
sbb
xchg
insb
sti
lods
jns
sub
call
stc
in
jo
daa
repz
imul
out
hlt
sub
xchg
add
cmpsb
fildll
cmpl
movsl
insl
push
aad
add
orl
lret
jno
imul
push
icebp
leave
data16
fcmovu
daa
mov
add
dec
add
loope
pusha
ret
push
repz
adc
mov
or
popa
gs
call
insl
loop
add
mov
cld
push
xchg
xor
fwait
pop
cs
data16
push
ljmp
push
add
ss
imul
mov
aas
nop
dec
rcr
pop
mov
into
out
mov
aas
push
pop
add
mov
ljmp
mov
jbe
rcrl
or
cs
jnp
in
jno
pop
popa
cwtl
sub
or
and
test
push
call
push
ss
int3
adc
in
jmp
xor
jnp
mov
dec
ss
js
xlat
pop
test
add
dec
xchg
cmpb
cmpsb
inc
mov
xchg
or
xor
iret
inc
mov
fmuls
sub
popf
and
stc
out
or
dec
test
jo
clc
addr16
call
add
adc
jo
ret
addr16
ret
xchg
push
insl
mov
mov
dec
rol
cltd
ss
out
mov
aas
mov
sub
bswap
mov
xchg
pop
test
jae
aaa
adc
mov
cli
xor
sbb
xor
sub
fadds
xchg
fisubrs
lahf
or
inc
xchg
xchg
fisubl
mov
add
inc
stos
sbb
push
push
inc
and
jl
movsb
xchg
jecxz
into
mov
shl
jns
add
jecxz
or
shlb
adc
mov
dec
idiv
fs
mov
adcl
mov
leave
std
loopne
xorl
imul
cs
aaa
mov
jl
mov
repz
pop
pop
notl
aaa
pusha
xchg
daa
out
cs
pop
push
xchg
in
fists
adc
outsl
cmp
out
jae
mov
daa
lahf
psllw
jl
hlt
lahf
push
daa
or
adc
pop
push
aad
mov
or
pop
pop
into
pop
icebp
rorb
lret
add
push
add
sarl
inc
scas
popa
xor
cmp
stos
xchg
adc
inc
pop
mov
lahf
adc
cmp
xor
xor
mov
and
int
mov
dec
dec
lods
push
fidivs
mov
ljmp
xchg
ds
enter
mov
jb
out
pop
push
sbb
test
adc
pusha
and
dec
sub
outsl
dec
add
lock
add
cmp
mov
lds
xor
push
sti
push
test
lods
iret
add
inc
xchg
call
lods
mov
jge
pop
cmp
mov
sbb
adc
into
lcall
add
out
jne
stos
movsl
sbb
test
and
cs
cli
xchg
icebp
inc
or
popa
repz
cs
sar
adc
xchg
dec
jp
xor
scas
rolb
mov
sti
int
rcl
bound
mov
icebp
fistpll
imul
push
call
mov
inc
arpl
cmp
js
in
mov
xor
enter
cld
cltd
pminub
sbb
cmp
jno
pop
jae,pt
aam
cmpb
fwait
lods
adc
sarl
or
cltd
sarb
mov
push
xchg
push
sub
sarb
jmp
rcl
lods
mov
sbb
les
push
push
xchg
jno
cs
adc
sub
jge
cli
dec
add
imul
xchg
adc
adc
xor
xor
test
inc
mov
popa
cmpsl
push
adc
xchg
mov
call
outsl
xchg
shrd
or
inc
pusha
aas
push
data16
jnp
mov
rcll
push
mov
leave
repz
inc
xchg
adc
add
test
call
nop
cld
xchg
lods
jne
xor
out
mov
mov
int3
dec
loope
test
mov
sbb
dec
aad
xchg
xchg
out
xchg
fildll
cwtl
dec
enter
sub
inc
rcrb
pop
mov
cmpsl
cmp
out
pop
cwtl
jnp
sub
jecxz
les
pop
dec
xchg
mov
push
pop
nop
cli
or
in
mov
mov
jmp
mov
lods
fcoms
das
mov
mov
adc
xchg
adc
fnsave
xor
pop
mov
mov
add
scas
sub
insl
cld
push
cmp
ja
adc
je
xchg
push
add
leave
aad
scas
xor
push
jl
cmp
arpl
sbb
cmp
arpl
pop
lock
jo
xor
iret
inc
jle
mov
notb
cmp
icebp
sbb
arpl
ficoms
popl
xor
sahf
xchg
xor
push
mov
pop
cli
jle
cmpsl
mov
xlat
mov
xor
int3
addl
sbb
sub
mov
call
out
pop
sbb
mov
adc
jae
xchg
pop
call
xor
inc
data16
mov
test
cmp
mov
xor
jno
jns
add
test
inc
leave
sub
lret
push
and
push
xchg
call
imul
inc
dec
xchg
add
fsubrl
fidivrs
lahf
and
out
xor
loope
jno
or
daa
sub
fistps
sahf
mov
pop
dec
cmp
repnz
outsl
daa
xor
insb
repz
inc
sub
xor
rorb
jp
ret
aad
into
fnstcw
mov
in
fcmove
fs
mov
cld
test
xchg
cmp
jg
imull
mov
dec
and
out
popf
or
adc
xchg
roll
pop
xor
sub
dec
cmp
jmp
out
lods
jecxz
enter
mov
fistpl
mov
shlb
leave
push
xlat
je
clc
jecxz
mov
xor
sub
dec
sub
push
hlt
in
je
bound
lock
call
adc
roll
jmp
fadds
dec
dec
cmp
fists
add
adc
push
movsl
hlt
clc
jns
xor
rcrl
and
je
ds
mov
mov
jno
lret
nop
les
lea
cmp
add
in
rcl
lahf
mov
out
imulb
inc
popl
dec
add
outsb
cmp
lahf
aad
xor
scas
dec
insb
test
mov
dec
mov
fs
mov
inc
xchg
inc
jnp
movsl
add
lcall
daa
out
mov
jge
stos
dec
out
pop
aam
cmc
ret
xor
stc
inc
cmpsl
xchg
jo
icebp
xor
fsts
pop
push
pop
xor
mov
cmpsb
pop
aaa
jl
mov
loop
cmp
add
dec
jns
movsb
adc
inc
daa
movsb
or
pop
les
movl
aas
inc
pusha
and
out
and
push
mov
push
mov
inc
repnz
lea
out
mov
mov
dec
sbb
rcr
inc
dec
loope
bound
adc
loop
ja
cmc
stos
or
xchg
orb
rcll
fldl
xchg
mov
cs
std
add
mov
out
sub
xchg
pop
mov
sbb
push
xor
das
mov
fisttpll
stc
inc
xor
addl
pop
inc
insl
int3
sbb
push
jg
dec
ret
mov
xchg
lret
add
xchg
sbb
push
adc
jo
arpl
aaa
out
push
pop
sub
cmc
lahf
cmp
aam
jl
adc
sbb
sahf
das
and
or
in
je
adc
adc
outsb
pop
outsl
jno
outsl
jmp
cmp
cs
push
mov
sub
aas
cmc
in
jecxz
mov
test
sbb
lods
push
dec
mov
aam
jnp
pop
movsl
shll
dec
pop
or
pop
aas
xor
adc
push
pop
stc
cli
cld
pop
pushf
mov
pop
cmpsb
cs
xor
outsl
add
hlt
loop
popf
pop
cmp
sub
push
adc
mov
cli
push
sbb
test
adc
adc
cwtl
lea
pusha
ror
pushf
ds
outsb
dec
mov
test
aam
add
push
test
arpl
jg
fwait
mov
jne
and
frstor
xor
xor
lds
stos
shl
dec
pop
int
das
xchg
dec
stos
rcl
lret
pop
jno
push
std
cltd
push
dec
push
jecxz
dec
imul
sub
pop
push
data16
or
cmpsb
sbb
mov
jl
sub
mov
mov
jbe
imul
pop
into
adc
sbb
int
xor
ficompl
adc
jo
insl
int
cltd
sub
daa
xor
xor
xchg
adc
or
cld
push
jl
mov
cmp
std
sub
xchg
aas
adc
lea
mov
mov
adc
loope
mov
dec
ss
mov
dec
daa
jnp
push
mov
adc
fsts
sti
jecxz
jle
and
adc
sti
pop
dec
mov
inc
dec
icebp
and
test
and
mov
or
loopne
or
stc
and
aad
inc
mov
std
add
jecxz
lock
fdivr
push
ds
notb
movsl
insl
imul
loopne
cmp
fs
lea
aad
sbb
and
int3
in
test
icebp
std
mov
in
mov
cltd
mov
add
ret
mov
sub
xchg
dec
inc
pop
adc
ret
sahf
push
mov
icebp
popf
mov
jl
insl
inc
popa
push
cs
mov
mov
test
jmp
out
or
iret
push
nop
mov
mov
mov
inc
inc
mov
lahf
push
cmpsb
pop
sahf
sbb
pop
adc
inc
rclb
lahf
dec
jno
cmp
test
out
pop
insl
and
dec
mov
stc
jl
js
push
gs
aas
int3
ret
pop
sbb
imul
daa
ja
arpl
and
test
xchg
lock
pop
cs
mov
mov
mov
repz
nop
inc
fistpl
add
test
hlt
xchg
cwtl
lds
jg
popf
outsl
cmp
add
xor
iret
lahf
mov
out
pop
pusha
xor
fs
movsb
pop
jecxz
and
mov
fdivs
flds
pop
idiv
add
filds
and
mov
ficoml
cmp
dec
pop
jl
cmpsb
xor
ja
jg
enter
jo
push
xor
sbbl
hlt
mov
jo
xlat
push
add
movsb
xor
cmp
fidivl
pop
out
add
inc
mov
adc
sbb
jmp
push
adc
inc
subb
inc
pusha
daa
cs
sti
call
sbb
lock
fdivrl
outsb
add
jle
mov
jae
ret
push
jo
rol
sub
jp
ja
adc
out
xor
stos
addb
out
sbb
xchg
and
in
aad
and
bound
mov
cmp
call
adc
xchg
lahf
pop
cmp
adc
out
jecxz
dec
add
scas
mov
xchg
test
pop
inc
outsb
and
arpl
cmp
inc
xor
sub
add
insb
xchg
ficoms
sbb
out
add
xchg
repz
shl
add
rolb
jge
enter
push
ds
push
mov
adcl
shr
call
sub
sbb
clc
imul
jno
aad
mov
cmpsb
mov
and
int3
push
mov
movsl
scas
ret
lret
lcall
sbb
jb
dec
loope
std
cmpsb
pop
inc
mov
xchg
arpl
scas
sbb
mov
cmp
mov
movsl
cmc
dec
ds
mov
inc
roll
jnp
mov
mov
lock
out
inc
sub
iret
repnz
andl
cli
or
test
and
push
ds
jns
shll
inc
in
xor
cli
dec
xlat
mov
clc
in
dec
xor
lea
sbb
in
add
dec
sub
mov
xchg
push
icebp
insb
imul
pshufw
mov
mov
ljmp
pop
gs
pop
xor
testb
push
ja
ljmp
pop
jns
sbb
ja
andl
fisttpll
lcall
icebp
cltd
imul
gs
inc
adc
clc
or
and
pushf
add
mov
jle
in
insl
arpl
mov
js
mov
adc
imul
call
cltd
xchg
push
sti
xchg
and
stos
in
pop
mov
pop
dec
es
sub
daa
stos
adc
out
or
pop
ficomps
ss
push
xchg
jns
into
jg
gs
imul
mov
stos
cmpsl
sbb
sbbl
pop
adc
inc
pop
out
jle
xor
sarb
out
cmp
mov
pusha
orl
adc
repz
push
clc
push
fsts
cmp
test
imul
jne
pop
push
repz
test
mov
cs
leave
push
push
mov
jle
push
mov
dec
mov
cli
pop
ret
fwait
repnz
mov
test
test
push
pushf
lea
arpl
push
mov
add
ret
into
movsb
dec
mov
xchg
xor
test
lock
adc
push
jb
repnz
mov
imul
inc
inc
faddl
fldl
xchg
movsl
bound
fdivl
sbb
test
lds
push
pop
leave
sahf
mov
outsw
pop
sarl
pop
sub
and
xchg
ret
pop
cmp
ret
mov
insl
movsb
stc
cmp
mov
pushf
shl
mov
push
push
cwtl
pusha
and
jns
jl
xlat
in
stc
mov
lahf
aam
outsl
xor
mov
pop
xchg
sahf
pop
add
out
sub
cltd
cs
test
imul
or
fdivrs
mov
jno
inc
filds
int3
sbb
mov
cmp
sbb
fistps
jae
jae
addr16
pop
insb
fistps
out
es
pop
xor
cwtl
xor
add
sbb
cmp
sub
stos
inc
cmp
test
fisubs
cmp
std
xchg
scas
inc
rorl
enter
cmp
repz
add
pop
push
inc
jg,pt
mov
fcompp
push
cmp
inc
adc
loop
decb
std
out
test
fisubs
nopl
fcomp
aas
mov
out
in
mov
insl
xor
test
fistpll
adc
lahf
dec
cmpsb
lods
and
xchg
ffreep
xchg
mov
mov
outsb
mov
push
push
mov
scas
sbb
and
int
test
cmp
movsl
popa
pop
adc
dec
data16
int3
mov
and
int3
push
out
xor
xchg
inc
loop
add
pusha
xor
sub
cmpsb
jmp
sub
mov
aas
lret
test
cmp
bswap
je
pusha
popf
out
or
sbb
out
push
loope
mov
imul
int
pop
push
cmpb
data16
fucom
jo
xor
inc
xchg
sahf
cmp
adc
leave
dec
adc
jge
cmpsl
dec
pop
test
mov
fisttps
adc
mov
pop
xchg
adc
sub
lcall
or
push
xlat
push
in
iret
daa
jnp
sbb
add
mov
fs
or
add
mov
jbe
xchg
lods
mov
xor
xchg
fmuls
mov
jle
in
sub
jge
push
cld
mov
jno
dec
gs
es
jae
cmp
cmp
jno
pop
nop
mov
push
xchg
jb
inc
mov
or
push
mov
inc
rorl
sub
testl
in
fidivs
mov
sbb
scas
push
cmpsl
jmp
inc
sbb
inc
out
pop
rorl
bnd
pop
fwait
sub
xchg
test
rolb
mov
xor
cmpsb
psubd
sub
jae
jo
push
mov
daa
repz
rcrl
xchg
out
push
iret
fidivl
inc
popa
rcll
jnp
push
mov
xlat
sbbl
xor
pop
cmp
andl
adc
mov
cmpsl
aaa
cmpsb
out
fistpl
xor
iret
test
sub
ja
xchg
or
add
mov
aaa
outsl
jne
mov
push
pop
mov
mov
hlt
lods
jmp
jmp
movsl
and
stos
cmp
push
roll
or
dec
adc
imul
dec
pop
add
cwtl
cs
inc
rclb
pop
mov
int3
adc
cld
mov
jbe
shl
les
mov
rclb
fisttps
push
shrw
xchg
fstpt
repz
mov
fwait
lods
sbb
loope
mov
push
dec
movsb
enter
loope
sub
sbb
add
popf
pop
mov
xchg
or
je
dec
arpl
nop
ss
mov
repz
ror
push
lcall
sbb
sub
xor
mov
fwait
or
dec
xchg
jae
jp
adc
aaa
nop
and
inc
das
add
std
ds
lret
mov
inc
jecxz
in
nop
jne
jbe
adc
fnstcw
mov
mov
gs
add
inc
mov
add
push
fwait
adc
push
mov
subb
pop
dec
xor
sbb
das
pop
repnz
add
jbe
repnz
mov
sub
imul
hlt
inc
shrl
movsl
push
inc
sub
xor
inc
push
es
lods
pop
sub
pop
int
mov
xchg
int
cmc
pusha
add
adc
adc
adc
loop
cmp
or
pusha
sbb
push
ss
jp
jno
aas
mov
or
test
cmp
das
jns
or
inc
inc
in
cmpsl
rcr
incb
addr16
dec
mov
ret
xor
cmp
jae
pop
lock
imul
inc
cmp
sub
repz
inc
push
jnp
in
loopne
pop
push
shrb
cli
repz
pop
sub
fdivr
outsl
push
lahf
or
mov
dec
shrl
lock
mov
enter
lods
jmp
flds
arpl
adc
xor
mov
add
sub
xorb
mov
es
js,pt
mov
out
es
pop
and
test
dec
das
and
sub
lahf
cmp
push
test
adc
int
xor
dec
test
pop
imul
imulb
in
outsl
adc
jns
loop
sti
push
mov
mov
movsl
sahf
loope
insb
aam
xchg
cld
ja
adc
xchg
aas
add
ret
mov
insl
cmp
out
inc
aas
sbb
dec
push
jg
sbb
mov
imul
fildll
sub
iret
xor
cld
rcl
in
mov
not
adc
mull
shr
push
int
mov
xchg
movsl
jbe
into
push
sbb
mov
mov
xor
scas
ja
mov
and
fstpl
pop
mov
mov
loopne
add
aaa
mov
ss
xor
jae
cmp
xchg
pop
add
jle
outsl
jmp
daa
sbb
in
push
sbb
notl
mov
jno
lcall
les
cmpsb
xor
jbe
push
shl
popa
mov
pop
add
das
pop
sbbb
mov
pop
and
pop
pop
clc
dec
arpl
popf
testb
test
fimuls
jo
add
in
mov
stc
lods
pop
mov
leave
and
add
add
add
jge
repz
popf
xchg
or
scas
es
mov
ja
sarl
mov
sub
sub
jo
cwtl
std
cltd
add
add
adc
sbb
cmp
imul
xchg
divb
sbb
mov
fstpt
mov
push
rol
fsubrp
call
setae
test
pop
mov
scas
fisubs
fdiv
ficoml
rcll
jne
xchg
sarb
fcmovbe
xchg
shl
sbb
fsts
cmp
xor
mov
repnz
loopne
lds
iret
dec
mov
xor
fldenv
clc
mov
mov
cmp
push
in
out
bound
ds
faddp
push
sbb
xlat
gs
sub
xchg
sbb
lret
aam
push
in
push
cmpsl
and
jb
cld
dec
adc
pop
dec
push
data16
or
into
je
inc
mov
test
lret
push
lds
gs
xchg
aam
popa
xor
dec
pop
pop
inc
cmc
ret
orl
sbb
adc
pop
and
or
or
jne
out
pop
xchg
or
fsts
cltd
xchg
iret
mov
lret
or
into
mov
xchg
flds
ret
adc
push
enter
pop
cmp
fdivl
in
fcmovne
xchg
stos
push
fildll
jae
outsl
jmp
mov
scas
pop
out
pop
adc
cmpsl
loope
xchg
or
xchg
mov
push
or
cmp
test
inc
cmp
mov
das
jbe
lea
or
inc
sbb
leave
nop
cmpsb
mov
aam
jmp
push
divb
add
mov
shrb
fadd
or
adc
inc
mov
xlat
repz
xchg
xor
fnsave
push
pop
mov
test
addr16
add
shrb
pop
adc
lods
mov
out
in
jp
pop
mov
ljmpw
mov
sub
pop
fwait
shlb
mov
jmp
lret
das
xchg
cmpsb
cwtl
xchg
fadd
push
or
pusha
and
ja
mov
lret
daa
fwait
cmp
gs
jae
xor
xchg
arpl
cltd
outsb
jg
push
stos
add
inc
push
shr
adc
sub
dec
xor
push
out
das
mov
xor
test
mov
insb
inc
mov
mov
push
add
xchg
test
and
test
ret
stos
popa
adc
mov
test
inc
idiv
cli
pop
xor
pop
or
stos
xchg
xlat
movb
cmc
js
pop
cmp
mov
xchg
sti
or
mov
mov
js
mov
dec
push
adc
lock
and
or
lret
push
inc
and
and
int3
sub
xchg
xor
or
cmp
or
jae
pusha
and
lea
test
pop
or
movsb
aas
sbb
mov
scas
mov
inc
and
mov
push
sbb
idiv
mov
jmp
mov
leave
add
out
es
jo
loope
dec
fbld
imul
xor
cld
fldenv
lcall
inc
fdivl
xor
push
push
sub
bound
add
inc
movsb
std
pop
sub
or
shlb
fcmovnu
xchg
mov
cmc
xor
jmp
push
inc
xchg
add
xchg
clc
mov
nop
jge
mov
push
sbb
jnp
inc
and
les
sahf
out
jb
rolb
or
js
addb
mov
mov
push
jne
iret
adcl
mov
sahf
sbb
push
dec
and
jmp
rolb
call
mov
or
pop
inc
mov
lods
rclb
gs
or
leave
and
test
add
xchg
leave
push
push
test
cltd
mov
pop
cmp
scas
add
sbb
test
jecxz
je
mov
push
dec
lret
dec
fnsave
sbb
lods
mov
testb
jns
mov
sbb
mov
les
jmp
ror
push
sub
outsb
mov
xor
in
xor
xchg
push
test
nop
sub
sbb
dec
out
and
lahf
mov
pop
shl
int
rorl
out
and
xchg
cmp
lcall
or
shrb
inc
fcmovne
sbb
cmp
outsb
sarb
mov
add
cwtl
icebp
mov
mov
dec
mov
push
and
mov
jle
testb
sbb
cmp
dec
dec
insl
push
mov
je
xchg
lret
push
sub
and
lods
ret
or
pop
arpl
cld
into
cs
xor
rcrb
sub
jae
and
push
arpl
xchg
jl
rcrl
out
fsubl
xor
push
fsub
cli
mov
sahf
push
in
inc
or
ljmp
int
push
paddw
das
insb
out
mov
sahf
pop
mov
fstpt
push
ljmp
mov
push
or
dec
push
sub
mov
mov
add
dec
mov
pop
push
icebp
push
dec
cld
cwtl
xor
rcll
add
out
and
stos
movsb
cmpsb
sub
xor
enter
sbb
dec
inc
lea
hlt
insb
mov
fs
xor
mov
xor
push
jl
mov
mov
imul
inc
and
sti
sti
icebp
sar
mov
pop
sbb
stc
ffreep
cltd
outsb
cld
dec
adc
das
xchg
adcb
inc
inc
mov
mov
fs
in
mov
adc
shr
adc
mov
aam
mov
push
clc
in
jmp
push
xorb
ljmp
push
pop
push
lcall
sbb
ja
xchg
xor
mov
arpl
ja
sub
jle
loop
dec
fcmovu
in
inc
inc
aaa
insl
lret
cmpsb
add
jne
int3
cmp
unpckhps
stos
or
push
push
dec
cli
movsb
add
les
jmp
pop
inc
push
dec
int
push
or
fisubs
adc
sbb
and
pop
and
cmp
sbb
inc
jno
cltd
and
cmp
mov
loopne
rolb
nop
push
push
dec
xchg
incl
mov
jno
ret
push
jle
mov
daa
dec
add
cmp
out
fisubrl
in
adc
fldt
cld
push
pop
jg
mov
sbb
mov
cltd
or
leave
call
lcallw
jbe
xor
rcll
sti
ljmp
out
gs
adc
pop
ss
pusha
adc
mov
sub
fcom
pop
out
sbb
notb
addl
enter
jecxz
mov
sahf
outsb
iret
pop
scas
imul
lods
mov
xchg
xor
push
mov
sbb
mov
inc
jp
mov
or
mov
lret
xchg
mov
aaa
push
mov
mov
dec
jle
inc
mov
ljmp
filds
shl
jmp
es
push
psrld
adc
mov
sbb
sub
pop
out
jg
imul
or
shrl
mov
aad
les
test
sahf
and
fadd
xor
aaa
popa
adc
mov
cmp
lret
scas
push
jnp
out
pop
sahf
int3
pop
flds
add
push
std
sub
sti
outsl
imul
push
je
dec
add
fnstsw
loope
fdivrs
test
stc
push
outsb
lds
or
stc
and
subb
pop
push
mov
xchg
das
ret
icebp
pop
mov
xlat
jb
push
mov
ja
fimull
mov
dec
rcll
jo
pop
dec
in
and
sub
mov
gs
addb
sbb
jmp
clc
sub
mov
pop
sbb
aas
and
lahf
and
sub
dec
add
cmp
addr16
fnsave
or
jae
jo
out
out
test
adc
cmpsb
les
xor
ljmp
dec
sub
iret
mov
data16
shlb
mov
sub
test
leave
leave
flds
dec
inc
lcall
sbb
mov
mov
fsubrl
test
addb
jmp
pushf
adc
outsb
inc
ret
cwtl
jno
push
xchg
cli
popa
cltd
add
jbe
fdivl
adc
lret
out
jo
mov
test
sahf
lcall
es
mov
jle
das
decb
push
jno
inc
les
adc
loope
sbb
sub
pop
jbe
test
or
xor
insb
cmpl
adc
pop
mov
ret
mov
aad
xlat
mov
sub
aam
je
jg
mov
xchg
in
out
dec
adc
pop
mov
inc
into
add
push
push
std
or
inc
fidivs
pushf
jnp
cmp
sub
test
adc
xchg
repnz
jp
push
adc
mov
xchg
cltd
aas
cmc
xlat
and
test
mov
imul
rcrl
lds
push
fs
out
repz
cmc
outsl
lods
aas
add
test
inc
enter
das
je
cmp
mov
pop
sahf
adc
fisttpll
icebp
cmp
clc
mov
aad
or
pop
push
dec
xchg
lds
push
mov
es
mov
sub
dec
push
jecxz
xor
test
rcrl
or
jne
fcmovne
rcll
neg
gs
test
push
push
sbb
inc
mov
inc
int3
dec
dec
xchg
rcrb
fsub
pop
js
push
pusha
aaa
imul
xchg
xchg
cmpb
adc
xchg
add
sbb
jns
lahf
xchg
stos
bndldx
notl
push
dec
ss
int3
popf
adc
in
lods
fucomip
and
xlat
test
mov
mov
hlt
add
sub
pop
inc
mov
lock
sub
cmp
and
adc
lods
call
xchg
inc
mov
jns
or
subl
pop
adc
sahf
nop
insb
fisttpl
jmp
jae
xor
cmc
cwtl
insb
dec
jle
incl
mov
jmp
xchg
mov
and
and
daa
pushf
mov
adc
daa
sub
arpl
sub
dec
aad
loopne
ljmp
mov
inc
push
xchg
jp
push
lds
dec
push
cmc
addr16
rep
jg
popf
or
fbld
loope
out
jnp
imul
push
addb
icebp
leave
scas
ror
xchg
lahf
cli
add
movsl
push
push
sub
in
push
repz
adc
fdivrs
xchg
jno
dec
lods
adc
popa
testl
mov
push
pop
lods
mov
xor
imul
repnz
outsb
xchg
inc
fistl
add
cld
add
jecxz
push
or
stc
or
or
add
xchg
xchg
subb
cli
cmp
jns
adc
inc
insl
loop
push
sar
test
xor
je
push
mov
out
mov
cld
push
fistpll
repz
jo
jmp
pop
cmpsl
stos
sbb
repnz
shlb
lods
jnp
push
not
jle
data16
push
test
roll
sbb
push
shrl
ret
in
dec
cli
jg
xchg
sti
cmp
lcall
adc
into
mov
inc
or
jo
inc
pop
bound
jb
sub
shl
mov
sbb
inc
push
jno
push
adc
mov
lock
pop
mov
and
and
push
lret
xlat
mov
xchg
std
jecxz
notb
and
insb
je
sub
cld
shr
sub
or
bound
xorl
popa
cmp
xor
or
inc
dec
add
mov
imul
pop
mov
dec
outsl
sbb
cmpsb
nop
dec
fstpl
insb
mov
rcrl
subb
push
push
xor
xchg
decl
and
scas
lea
jge
aas
mov
sar
fneni(8087
sahf
sub
xchg
mov
iret
add
sub
int
rolb
insb
adc
mov
mov
lcall
shll
inc
testb
pop
sbb
sbb
pop
fsubs
adcb
je
sti
xchg
imul
jl
mov
add
cmpb
rorl
jns
xchg
call
push
mov
stc
jbe
daa
aas
ficomps
or
outsb
aad
les
push
aas
mov
inc
jnp
icebp
lods
out
sub
pop
cmp
mov
popf
push
sub
aaa
mov
jl
inc
jne
test
sbb
ficomps
push
inc
jl
out
mov
or
mov
adc
pop
int3
sub
nop
je
push
adcb
cli
aam
les
mov
add
rorb
daa
sub
mov
push
dec
pop
data16
dec
repnz
decl
sub
jl
lcall
test
add
out
in
jnp
xchg
fisttpl
cmp
aad
jl
test
cmp
rorb
and
lea
push
add
mov
fsubrp
das
popf
push
jl
mov
icebp
jecxz
xchg
call
imul
fmuls
out
pop
fs
pop
xchg
xor
xchg
or
call
dec
clc
loope
pop
add
and
adcb
adc
ss
stc
xchg
clc
loop
and
aad
and
cmc
xchg
pop
gs
loop
insb
stos
push
cmp
mov
data16
fistpl
in
lcall
jo
mov
fwait
xchg
jl
fistpl
leave
pop
pop
imul
scas
pop
shr
jne
add
inc
xchg
dec
mov
in
lds
inc
mov
lods
insb
inc
pusha
push
pop
cld
rclb
or
cmp
nop
pushf
aas
sub
or
dec
jae
idiv
stc
dec
clc
sbb
test
dec
popa
inc
popf
shll
call
pop
fidivrl
pop
xor
jge
test
cmp
setp
loope
ret
xchg
das
in
inc
or
add
fisubl
sbb
lods
clc
aad
push
ret
mov
or
shr
sbb
subl
pop
and
fwait
and
cmp
adc
out
xor
faddl
and
shlb
cmc
loope
sahf
out
rol
fmull
pushf
ss
or
cmp
iret
inc
movsb
xchg
test
mov
inc
inc
insb
inc
inc
movsb
dec
jne
sbb
icebp
xchg
inc
lock
jae
movsl
das
jp
xchg
psllw
les
ret
je
and
mov
mov
push
mov
add
sti
sbb
jle
aad
cmpsb
sub
aaa
scas
hlt
rolb
in
add
outsl
leave
adc
orb
sti
sub
mov
mov
imul
aad
adc
adcb
push
xchg
push
and
inc
js
jecxz
pop
mov
cld
or
dec
rcrl
lcall
aas
pop
pop
push
and
dec
scas
int
add
cmpsl
jmp
adc
push
loop
and
sti
cli
adc
pop
jp
or
or
and
fiaddl
insl
leave
mov
pop
sbb
stc
cmp
xor
stc
push
into
aaa
fld1
and
or
repnz
or
fcompl
cmpsb
lahf
push
or
jecxz
mov
mov
mov
jecxz
loope
xchg
sahf
xchg
jl
shrl
cmp
getsec
ret
mov
or
jp
mov
mov
xor
jp
repz
adc
pop
out
stc
jo
fdivr
pop
cmp
mov
insl
sti
xorl
jbe
pop
add
in
jae
jecxz
mov
cld
jns
mov
inc
mov
pop
std
fdivl
pop
jbe
pop
push
loopne
adc
aaa
adcl
das
adc
or
mov
jae
dec
fadds
sahf
in
mov
pusha
fdivrp
decb
xor
pop
push
add
loopne
xor
jp
pop
lret
mov
out
jg
movsl
inc
pop
mov
xlat
adc
pop
subb
jb
outsl
gs
jne
add
sub
inc
mov
jnp
mov
fldenv
mov
cld
cmp
or
orb
mov
stos
push
fucomip
sub
mov
cmp
mov
jo
nop
sub
aam
aas
fs
out
test
jp
test
xchg
daa
jne
dec
dec
ficomps
aas
cli
sbb
setns
jno,pt
movsl
sti
in
stc
push
cmp
push
sub
mov
push
cli
into
bound
inc
mov
inc
out
sbb
lret
mov
pop
std
sub
xor
cmp
icebp
push
jno
out
rol
xor
push
movsb
jno
mov
gs
sahf
inc
and
pop
pop
jp
xchg
or
pop
xor
out
adc
popf
jecxz
mov
xlat
sub
and
pmulhw
repz
sbb
ret
insl
cwtl
add
mov
movsb
push
movsl
add
add
xchg
mov
test
xor
push
sti
pop
flds
xor
mov
test
aaa
xlat
test
or
dec
fsubs
jns
or
push
jp
push
xor
inc
popf
inc
aas
cld
decl
loopne
adc
js
decb
add
in
sbb
pop
xlat
leave
inc
lahf
iret
jno
xchg
fimull
shlb
mov
push
sbb
mov
add
les
dec
push
daa
push
ljmp
gs
add
mov
out
cmpsl
adc
fld1
jae
sbb
inc
push
imul
mov
mov
sahf
add
int3
inc
je
fiaddl
mov
add
mov
dec
enter
mov
mov
push
mov
mov
rorb
mov
leave
fisubrs
and
mov
jae
aad
adc
data16
adc
xor
dec
sbb
in
mov
mov
lcall
xor
sub
push
sub
pop
mov
xchg
jns
add
int
inc
push
mov
cmpsb
pushf
les
pop
ret
rcl
add
repz
inc
cli
add
outsl
pop
js
push
mov
cmp
sbb
dec
pop
jp
shll
xor
test
ret
movsb
jp
sub
dec
cmp
aam
or
ljmp
inc
mov
and
shl
scas
pop
mov
lret
cwtl
jbe
push
cmp
sbb
in
stos
mov
or
stos
lods
push
add
lahf
pop
mov
data16
jg
pushf
scas
gs
sbb
pop
dec
inc
sub
or
dec
xchg
or
pop
dec
ret
push
frstor
imul
xchg
or
fadds
add
push
mov
lods
outsl
repz
stos
and
bound
cwtl
mov
loop
mov
sub
das
push
and
in
lds
sahf
inc
xorb
test
lcall
fstpl
adc
push
rclb
xlat
xor
xchg
stos
lcall
jnp
jl
mov
pushf
repz
inc
loopne
or
rcl
dec
outsb
mov
lea
add
add
mov
and
sbb
add
adc
ficoml
xchg
popa
jns
jo
ljmp
sbb
rcll
fwait
test
xor
pushf
xor
ret
cmc
pop
test
mov
pop
and
xchg
sbb
add
subb
jmp
sbb
sub
bound
cwtl
rorl
cmpl
popa
mov
das
aas
fsts
or
mov
push
andb
aad
push
fldl2e
mov
insb
imul
mov
addr16
sub
mov
out
cli
add
push
mov
sbb
fistps
jne
pop
lret
jge
mov
jns
shll
xlat
test
pop
xorb
mov
cmp
insb
push
mov
sbb
or
lea
mov
xchg
les
gs
loop
out
mov
mov
lods
shr
fildll
fsubrp
or
mov
jmp
sbb
sbb
outsl
fidivrl
push
push
inc
jbe
xchg
inc
out
mov
lret
stos
jo
sahf
or
aaa
cmp
adc
add
movsl
cmp
mov
mov
adc
or
push
push
mov
xor
xchg
inc
sbb
lcall
icebp
dec
mov
out
add
mov
mov
xchg
mov
jle
lret
add
sbb
inc
cmp
mov
imul
leave
adc
pop
push
hlt
lods
pusha
mov
loope
or
dec
jne
inc
cmp
enter
mov
in
iret
sarl
push
xor
ss
ds
jg
js
stos
std
loop
stc
ss
jecxz
mov
inc
adc
out
cltd
test
fnstenv
mov
jecxz
das
add
js
sti
aad
adc
mov
mov
pusha
dec
jge
rcrl
dec
and
or
jae
cltd
out
roll
fisttps
mov
jge
mov
xor
in
fwait
mov
loop
push
mov
sarb
outsb
sub
cs
loope
outsb
jae
mov
inc
pop
outsl
inc
inc
sub
push
mov
sbb
inc
adc
or
jne
in
inc
pusha
stc
scas
xchg
vphaddubw
xchg
aaa
sub
movsl
pop
movsl
les
adc
arpl
test
cmc
add
pushf
add
mov
test
sub
sbb
add
in
sbb
insb
lods
into
jl
nop
pop
cltd
fs
mov
mov
loope
add
lods
mov
scas
shlb
movsb
add
fdivrs
and
arpl
adc
mov
out
in
cli
mov
pop
mov
call
les
adc
mov
fdivr
daa
or
pop
test
bound
sub
jns
mov
lea
jb
mov
adc
push
xor
xor
mov
bound
repnz
or
pop
fs
add
pushl
scas
je
cs
mov
pop
mov
fiadds
popf
cs
sbb
xchg
push
cmpsb
dec
xor
out
repnz
loope
or
xchg
pop
repz
sbb
push
lods
add
lcall
push
xor
icebp
fisubrs
jge
xchg
pop
jno
lea
xlat
cmpsb
add
into
imul
inc
pop
push
mov
adc
sub
mov
arpl
int3
inc
in
out
or
es
push
movsl
cmp
js
lds
repnz
outsb
outsb
dec
rorb
cmpsb
cmpsl
fstpt
lret
daa
lds
lock
cmp
pushf
xor
push
out
xchg
shr
iret
push
sub
add
stos
ljmp
inc
arpl
mov
add
ss
or
jp
nop
insb
cmp
icebp
aad
xchg
jns
add
mov
test
add
sub
mov
js
push
dec
sub
popa
popf
dec
xchg
inc
outsl
and
push
outsl
mov
pop
mov
inc
cmp
mov
in
sti
mov
test
in
sbb
out
xor
cltd
dec
dec
outsl
dec
je
pop
je
xor
pop
mov
ljmp
test
pop
cli
inc
sbb
out
shrl
xor
shlb
insl
inc
bound
lods
jle
lcall
add
insl
xor
out
cmpsb
add
out
inc
and
sbb
adc
leave
mov
iret
pop
loop
push
sbb
ret
lods
add
mov
pushf
and
push
cltd
jl
dec
sti
push
xchg
push
sysenter
movsb
call
mov
adc
cmp
or
andb
jl
ficoml
jnp
dec
enter
imul
jb
mov
inc
sub
and
in
out
jae
into
push
mov
pop
jg
inc
sub
mov
cmp
jae
add
jp
insl
lea
shl
push
test
inc
jnp
cmp
std
jnp
and
dec
push
jg
add
clc
xchg
pop
in
movsl
pop
out
push
ja
push
test
je
adc
mov
sub
mov
add
das
cli
xor
inc
in
fnsave
sbb
stos
cmp
call
pushf
inc
jmp
jae
pop
and
push
nop
xor
js
mov
xor
aas
jge
cmp
scas
mov
or
imul
jg
call
test
adc
int
test
jno
adc
movsl
jb
push
mov
sub
inc
dec
mov
and
xchg
pop
ror
repnz
adcb
jmp
cld
jo
xor
bound
or
xor
int
sub
dec
or
mov
ret
inc
lods
adc
aam
pushf
test
je
jns
sbbl
fldt
lahf
adc
jb
movsl
add
addr16
arpl
ret
ja
sub
fxrstor
xor
pushf
in
inc
jmp
mov
jge
mov
or
cmp
cwtl
dec
repz
sub
push
outsl
aad
je
into
and
or
call
mov
fcomps
stc
sti
sbb
aam
xchg
xchg
adc
mov
int3
sarb
aas
or
fcomp
add
insb
iret
sub
fildll
sbb
xchg
mov
jmp
jle
lret
or
icebp
cli
sub
imul
inc
ss
add
cmpsl
xchg
and
les
daa
insl
enter
xor
dec
pop
mov
fs
aaa
push
test
mov
jmp
cmp
test
push
cmp
push
adc
popf
pop
fwait
mov
int3
loop
cmp
comiss
jle
imul
enter
push
mov
mov
add
jbe
xlat
inc
lahf
outsb
xlat
or
cs
xchg
sub
lods
clc
pushf
fildl
push
hlt
fidivl
mov
rclb
scas
mov
orb
in
sub
mov
sbb
jne
add
cmp
ficompl
sarb
inc
test
jl
jno
lahf
cmp
leave
dec
lods
je
imul
test
imul
stos
inc
sar
or
xchg
cmovbe
mov
mov
cltd
pop
rorl
xchg
and
xchg
test
std
fxch
stc
test
mov
mov
cmc
pushf
mov
lea
int
add
data16
arpl
jno
mov
push
mov
dec
cmp
sbb
test
out
pop
fs
dec
les
movl
xchg
push
xchg
xchg
pop
ret
cmp
xorb
add
jnp
mov
sub
sbb
aam
out
lds
rol
jle
jle
add
dec
outsl
lret
fsubrl
pop
movsl
adc
push
out
inc
mov
dec
mov
div
nop
inc
ss
insl
and
mov
push
jae
scas
addb
add
out
mov
inc
cli
add
cmp
push
shl
repz
outsb
fs
sub
rorb
and
aas
stos
mov
bound
mov
dec
xor
xchg
pop
out
orl
cmp
dec
fsubrs
icebp
mov
arpl
xchg
or
lods
xchg
negl
push
loopne
call
adc
pop
ficoms
subb
xor
lret
pop
mov
cld
mov
push
dec
ss
shll
ljmp
or
and
jnp
adc
push
subps
sub
xlat
test
aad
inc
mov
cwtl
push
aas
cwtl
sub
mov
in
pop
ficomps
xchg
cmovp
pop
dec
adc
arpl
pop
mov
mov
mov
xor
ja
loopne
leave
and
rclb
cmp
sub
sahf
mov
xor
sub
imul
aad
lret
enter
je
pusha
maxps
add
sbb
mov
in
ss
add
insl
xchg
bound
std
push
push
arpl
jo
repnz
xlat
out
fdiv
jp
mov
mov
rorb
ret
push
pop
aas
and
jmp
data16
lahf
stos
shll
sub
test
jl
mov
mov
dec
mov
hlt
lret
mov
fmuls
dec
and
mov
cmp
lock
push
pop
idivl
lahf
sbb
cmp
lahf
jecxz
push
adc
mov
leave
mov
imul
shlb
and
rcrl
sti
popa
dec
rcll
test
cltd
or
fimuls
ja
iret
arpl
out
cmp
sti
fmuls
mov
xor
mov
pop
pop
add
adc
push
sub
cmpsb
jle
scas
ret
repz
inc
xchg
inc
hlt
pop
inc
mov
iret
mov
rcll
mov
insb
aam
dec
mov
or
cmp
test
push
sbb
push
mov
outsb
dec
in
sbb
movsl
add
cmp
les
scas
adcb
push
std
jbe
mov
add
mov
pop
loope
pop
enter
or
sarb
lea
push
add
xchg
test
leave
icebp
lods
lods
xchg
shlb
int3
popa
adc
clc
push
movsb
sbb
ret
dec
jg
in
sub
jne
sarl
gs
es
push
sarb
js
dec
or
xor
pop
cmp
incb
fisubrl
add
test
ret
xchg
stos
pop
add
xor
popf
int
mov
adc
shlb
mov
ficompl
repz
push
sub
mov
in
mov
repz
and
mov
xor
mov
inc
jge
jae
in
dec
jo
fbld
shl
decb
sti
mov
xor
fcmovbe
imul
ljmp
cmp
mov
sbb
enter
das
xor
xor
inc
add
and
jge
push
movzbl
push
pusha
roll
adc
add
jg
adcl
jle
sbb
fbld
adc
bnd
fs
stos
mov
xchg
sub
lret
mov
ds
sbb
imul
out
and
dec
ret
outsb
enter
je
sub
addr16
inc
add
and
push
xchg
inc
push
xor
bound
push
mov
add
data16
cli
ret
add
ret
jge
sti
mov
cmp
push
push
mov
xor
mov
jecxz
nop
out
inc
sub
sti
sbb
adcl
add
pop
lods
ss
dec
sbb
mov
mov
push
add
cmp
mov
rcr
js
mov
push
mov
cmpl
lods
adc
xchg
jne
stos
push
ljmp
dec
sub
push
inc
jg
nop
gs
daa
repnz
test
fcompl
push
or
cmc
jnp
mov
insb
cmpsb
lret
fnstsw
add
inc
add
and
pop
sub
xchg
sub
insl
xchg
enter
jmp
jb
fprem1
dec
jmp
jmp
jae
dec
add
jae
mov
sti
loopne
out
push
scas
fucompp
mov
xchg
lods
adc
repnz
mov
imul
faddl
scas
insb
mov
dec
clc
inc
movsl
aas
jo
adc
movsl
sbb
mov
ror
add
in
dec
push
inc
adc
lds
jp
dec
stos
out
jge
insl
icebp
mov
test
sub
dec
mov
scas
js
es
pusha
push
jmp
push
int3
jmp
dec
mov
insl
andl
add
dec
scas
imul
push
pop
aas
push
leave
adc
push
inc
dec
sbb
movsl
mov
sub
xor
sub
cld
cmpsl
xchg
inc
arpl
fsubs
psubusw
lods
movsl
das
lcall
sti
add
ss
lds
mov
js
or
inc
ret
div
add
fs
sti
js
jl
cmp
adcl
pushl
in
je
mov
push
jnp
addl
test
sub
xchg
negb
out
jae
lock
fcomi
cmpsl
dec
test
xor
ret
xchg
add
xchg
sbb
add
and
inc
jecxz
in
mov
inc
cmc
sbb
fsts
add
cs
repnz
cs
sbb
lea
hlt
dec
movsb
and
cmc
dec
push
rolb
xchg
add
lret
jmp
das
jns
and
cmp
and
out
xor
xchg
cld
js
jl
and
sarl
in
scas
cmp
add
adc
sub
or
lods
fs
jno
and
into
lret
mov
imul
je
loop
std
ljmp
daa
int
ja
aam
shrl
xchg
dec
in
xchg
jne
iret
pop
inc
adc
xchg
idivb
jns
jb
sbb
push
negl
sbb
mov
mov
push
test
stos
xchg
jne
mov
mov
loope
mov
inc
aad
idivb
inc
fwait
jmp
std
aam
adc
xor
push
sbb
into
cli
imul
outsl
mov
and
lods
sbb
data16
sub
or
dec
in
rclb
movsb
movsb
jmp
in
into
mov
lea
xor
test
cmp
dec
movsl
xor
icebp
and
test
test
sti
cld
pop
out
sbb
test
out
repz
into
sbb
call
in
fcmovb
sbb
inc
arpl
je
jl
mov
fstp
pop
jbe
xchg
jp
jmp
push
cmc
xchg
pop
hlt
cmc
adc
iret
lods
and
aam
push
mov
pop
jle
popf
dec
push
and
push
cmpb
sbb
sub
inc
stc
rolb
ja
jae
or
or
sbb
in
fldenv
les
push
movsl
xchg
xchg
fstps
adc
mov
inc
push
test
xchg
push
movsb
mov
pop
out
mov
inc
jns
cmp
lcall
in
mov
sub
add
jo
dec
mov
push
cwtl
lcall
mov
into
out
test
lcall
push
paddsw
cmp
fmul
pop
xlat
pop
lods
push
xlat
cmpsb
ja
mov
idivb
and
xor
inc
imul
fmuls
or
in
adc
jns
jmp
mov
push
cmp
push
pop
fld
mov
sbb
xchg
call
pop
xor
pusha
push
inc
or
push
jne
int3
pop
add
arpl
pop
out
movsl
lcall
es
xlat
mov
call
int
mov
dec
icebp
and
in
sbb
js
mov
lret
mov
cmp
inc
sub
cld
mov
call
xchg
out
aas
push
mov
loope
push
mov
imul
lahf
in
and
aas
test
popa
push
and
adc
xchg
push
jnp
add
aaa
gs
clc
clc
cs
push
mov
dec
mov
mov
mov
addr16
jle
fwait
inc
outsl
mov
jb
dec
jge
xchg
xchg
ljmp
xor
sbbl
lock
aad
sbb
add
cmp
sub
dec
push
dec
inc
cmp
fildl
les
movsl
inc
cmp
sub
adc
push
push
push
add
xchg
sbb
outsb
sbb
and
rcrl
pop
jle
push
pop
mov
dec
ret
push
xchg
jecxz
push
cmpsl
mov
push
nop
add
and
hlt
mov
popa
in
mov
fwait
pop
dec
fbstp
mov
pop
shr
xchg
inc
adc
mov
movl
xchg
jge
and
jecxz
loop
clc
sbb
and
int
jns
clc
adc
mov
mov
cmc
jns
push
outsl
cmp
fstps
xor
aad
and
je
xor
xchg
mov
dec
outsl
jl
out
pusha
enter
pop
popf
inc
push
sbbl
hlt
cmp
or
stos
xchg
dec
inc
jo
mov
sub
and
fbld
cmp
dec
aad
push
test
add
push
dec
aam
inc
inc
lret
test
sub
jg
mov
roll
xchg
push
inc
dec
sbb
in
imul
add
add
jno
into
mov
lcall
lods
mov
imul
pop
add
cmp
jns
and
test
add
cs
adc
aaa
or
repz
mov
sbb
lods
cmp
jecxz
sbb
jecxz
mov
movsl
xchg
addb
mov
jo
lcall
jge
mov
fsubrl
pop
dec
scas
or
push
ficoml
mov
mov
inc
xchg
mov
pop
push
xchg
fsts
in
shlb
imul
dec
test
or
dec
addr16
sbb
nop
mov
sub
mov
mov
cmp
sbbl
into
test
inc
fpatan
push
ret
fists
scas
repnz
loope
xchg
xchg
test
fdivr
ret
cmp
xchg
fs
jnp
cmp
imul
adc
dec
cmc
pusha
or
cmpsb
xchg
into
jb
inc
xchg
rol
popf
jae
ret
push
cld
popf
mov
add
cmp
push
arpl
jns
pop
ret
mov
cmpsl
call
iretw
loope
cmpsb
pop
ja
movsb
xor
jle
jle
fmulp
push
fnstsw
pop
aad
je
inc
in
or
jnp
mov
xor
out
imul
jbe
xlat
jp
loopne
shrb
mov
movsb
dec
or
xor
xchg
dec
bound
and
push
push
iret
movsl
cmp
cltd
leave
cmp
jg
pop
push
data16
cld
out
push
mov
leave
rcrb
fcom
gs
xlat
test
dec
sar
adc
jo
mov
push
lret
inc
data16
mov
daa
sub
cmpsl
xchg
pop
movsb
xchg
adc
hlt
xor
mov
xchg
mov
push
mov
mov
xchg
mov
inc
mov
pop
lret
mov
add
mov
popa
mov
in
jle
mov
push
icebp
fstps
fmul
enter
lock
cmp
sbb
pop
push
lds
test
dec
repz
jb
and
adc
and
lret
or
xor
icebp
outsl
jo
repz
jne
dec
fmuls
fdivrs
sti
mov
lea
arpl
loope
insb
and
jecxz
push
subb
cmpsl
or
aad
es
add
push
fdivr
js
cmp
daa
push
sbb
push
insb
pop
add
xor
idiv
not
push
sbb
scas
movsb
add
push
add
jnp
push
mov
mov
add
cmpsl
in
test
xchg
mov
lahf
mov
cld
aad
mov
adc
stos
xor
xor
mov
in
rclb
mov
jmp
push
popa
popa
pop
loope
or
repz
jmp
sbb
sub
lahf
hlt
lds
jae
push
nop
ror
testl
jle
xor
adc
sub
fdiv
jo
cmp
loope
pop
push
sub
xor
inc
shlb
rcrb
mov
fwait
stos
cmp
outsb
mov
fmuls
push
dec
mov
repnz
dec
sbb
scas
pop
cli
in
insb
or
jbe
xchg
or
mov
jne
or
les
cmpsl
lods
cs
mov
sbb
xchg
pop
and
arpl
jp
repz
test
sbb
cmp
dec
or
mov
ret
repnz
or
mov
mov
mov
ljmp
jle
jbe
sbb
mov
imul
cltd
enter
out
aam
daa
repnz
std
jge
and
push
cmp
out
repnz
sub
and
mov
aad
push
mov
and
cmp
out
inc
popa
xchg
bound
movsb
test
les
xchg
pushf
jae
das
xor
in
mov
xchg
xchg
sbb
nop
mov
pop
testl
xor
ja
pop
test
xchg
cli
mov
mov
icebp
inc
movsl
bswap
and
xchg
mov
pop
fwait
fwait
loopne
jl
int
div
sbb
pop
outsb
ficoms
sahf
mov
or
fsubs
stc
push
in
js
pop
mov
repnz
shll
mov
out
sub
adc
push
pop
imul
aam
cmp
ret
dec
ficomps
out
xor
aas
mov
fneni(8087
js
les
xchg
js
lahf
sarl
mov
outsb
fistps
aaa
mov
or
and
sbb
sarl
jnp
orl
inc
lods
push
je
add
popa
xor
int
xorb
fists
and
iret
mov
fcmovbe
adc
push
inc
jo
icebp
lods
sub
inc
push
andb
outsb
ret
dec
adc
outsb
mov
pop
cmp
sub
and
cwtl
and
add
aas
inc
adc
pop
inc
imul
test
pop
leave
inc
pushf
adc
lret
pop
scas
mov
imul
jae
sahf
popa
aaa
dec
jb
scas
mov
adc
mov
push
xchg
fwait
ss
mov
lahf
sub
fildl
mov
cmp
std
adc
je
adc
subl
push
out
fisubrl
pop
insl
jns
cmp
stos
or
xor
mov
sbb
and
xor
adc
mov
pop
cs
and
mov
mov
pop
jecxz
fsts
push
shrl
push
ss
mov
mov
es
jle
iret
push
sarb
fistl
xchg
mov
fmull
bound
jns
cmpsb
push
lea
pop
mov
xchg
dec
aas
pop
pop
dec
popf
idivb
push
lcall
push
mov
std
fcmove
subl
push
int3
out
rorb
push
sbb
xor
inc
mov
lock
sbb
movsl
jmp
cmp
and
dec
mov
push
test
mov
arpl
test
int
push
push
and
lret
ret
pop
xor
pop
mov
pusha
or
xchg
mov
aad
jno
lock
addr16
movsb
lret
movsb
adc
loop
stc
mov
loopne
jg
rorb
pop
add
pop
int3
andb
xlat
inc
cs
add
aas
adc
addr16
and
imul
sub
jg
and
popf
dec
push
push
cld
cwtl
mov
call
mov
add
pop
mov
push
and
inc
sbb
pop
sub
ret
push
sub
add
push
xchg
les
in
xchg
fnstenv
gs
mov
xor
jbe
or
jg
add
loopne
or
fwait
sbb
inc
adc
mov
movsb
mov
test
inc
fbstp
aam
mov
xor
lcall
insb
and
les
data16
jle
mov
or
loope
in
xor
adc
cmp
loope
sbb
out
aam
add
or
pop
cmp
outsb
shrb
pop
adc
xchg
adc
test
inc
lock
jg
mov
pop
pushf
fadds
add
repz
setle
cmc
sti
push
pop
jae
inc
xor
mov
cmp
cmp
cld
pop
fcomps
or
mov
clc
push
mov
mov
jl
add
lods
stos
aad
int
sub
scas
jmp
and
cmp
jecxz
lret
push
add
mov
sahf
jge
popa
jno
aaa
jno
mov
loopne
imul
jecxz
data16
cmp
and
aam
fisubrs
xchg
stos
jmp
xor
negb
aas
dec
push
mov
inc
dec
jp
js
pop
dec
mov
mov
cmp
pop
xchg
adc
call
out
inc
xchg
sub
push
aaa
test
lahf
pop
cmp
test
mov
sahf
clc
loopne
dec
test
cmc
jecxz
stc
jo
jne
notb
wbinvd
sbb
lcall
jae
loop
and
sbb
lds
jb
aam
int3
mov
rcrb
stos
mov
stc
inc
pop
das
cli
cs
adcb
int3
aad
int3
mov
dec
inc
mov
xor
xchg
xchg
or
cmp
cmpb
mov
push
mov
xchg
or
lods
clc
sbb
dec
lret
mov
bound
add
fucomp
stos
jo
lea
lock
shll
add
movb
stc
sbb
mov
or
pusha
inc
lret
psubq
mov
cmpsb
push
test
cmc
jmp
add
aaa
stos
add
cmc
mov
dec
mov
xor
ja
mov
add
cmp
rcrb
xchg
fadd
pop
pop
push
ficomps
cltd
cmp
mov
out
mov
mov
pop
jg
inc
mov
es
dec
pop
shl
mov
loope
addr16
in
inc
leave
sbb
leave
mov
jmp
pop
test
cmp
add
mov
fdiv
out
xchg
cmp
pop
dec
rcrb
inc
inc
push
cmp
arpl
pop
mov
loopne
out
dec
xchg
push
daa
jno
out
mov
lds
cwtl
movsl
mov
shlb
or
or
std
scas
pop
add
add
mov
jb
lcall
in
rclb
int3
andl
pop
gs
into
xchg
dec
xchg
pop
or
adc
jmp
daa
push
cmpsb
add
repz
cmc
dec
ljmp
pop
sub
mov
xlat
and
pop
inc
adc
adc
mov
push
or
and
lea
mov
jne
rcll
imul
cmovg
inc
test
push
dec
add
repnz
push
data16
inc
popf
push
arpl
mov
cmc
stos
add
mov
cmp
inc
sbb
adc
inc
cmp
push
imul
xchg
es
push
jmp
sub
stos
out
repz
jmp
into
inc
flds
rorl
push
orb
pop
mov
dec
mov
popf
xor
mov
push
sti
add
cwtl
and
pushl
jo
xchg
pushl
push
shrl
test
in
repnz
xchg
mov
jmp
and
pop
fs
xchg
inc
pop
negl
mov
xchg
and
inc
nop
out
lcall
sbb
stc
ret
push
int
push
rcl
in
out
sarb
call
lock
fsubrs
dec
shrb
jns
inc
or
mov
mov
xor
mov
xor
add
cwtl
addl
loop
test
mov
orl
ss
scas
xchg
iret
inc
jb
xchg
js
inc
pop
lea
and
mov
rclb
push
xor
dec
call
clc
test
out
testb
mov
cmp
ja
in
mov
mov
sub
pop
and
sub
jae
in
mov
dec
movsl
les
jae
popa
mov
divb
scas
cmpsl
xchg
lgs
sub
mov
fld
adc
call
mov
bound
movsl
sbb
imul
shll
mov
bound
in
xchg
lods
or
shl
adc
or
es
or
roll
pop
mov
add
sbb
mov
and
xchg
rolb
xor
sub
shlb
xchg
iret
rclb
sahf
lahf
cwtl
insb
out
mov
outsb
mov
imul
add
call
push
xorl
mov
and
jecxz
add
data16
dec
pop
bnd
add
xlat
add
mov
rcrb
jecxz
cli
sub
mov
sub
insb
pop
push
and
test
adc
andl
add
mov
dec
push
xor
sub
out
cmc
imul
mov
jle
fdivp
mov
or
js
gs
aam
insb
add
nop
xchg
mov
mov
sub
icebp
dec
into
dec
call
fbld
jns
push
outsb
lret
mov
shll
inc
adc
pop
and
push
call
add
cmp
test
loopne
in
or
xchg
stc
aas
or
frstor
fwait
mov
stos
ja
mov
sub
add
lea
pop
movb
out
mov
push
sbb
hlt
xchg
jb
dec
or
in
cmp
adc
jae
adc
dec
pop
xor
cmovg
test
or
lcall
xchg
rol
sub
cld
ja
pop
ret
adc
cli
adc
inc
lods
push
roll
cmpl
inc
mov
push
sbb
mov
cld
mull
daa
lahf
sbb
or
ja
dec
or
and
mov
push
repnz
mov
sub
mov
stos
cmpsb
push
ss
dec
mov
popa
js
adc
xor
fldl
mov
xor
mov
fwait
sub
sahf
fidivl
mov
or
nop
in
ja
lahf
out
scas
mov
mov
mov
repz
jp
cmp
push
xor
inc
or
adc
or
js
mov
jb
pop
jp
cmovno
movsl
mov
cwtl
inc
es
leave
into
and
mov
test
push
jne
cwtl
xchg
mov
outsl
jb
repz
push
test
add
fisubl
push
xchg
xchg
aas
jo
cmpb
movsb
into
mov
cld
pushf
inc
pop
push
or
std
cld
repz
in
roll
sub
cmc
mov
pop
pushf
inc
push
aaa
jno
push
sub
outsb
int
jae
adc
ja
xor
insb
cmp
and
jbe
or
dec
dec
pop
outsb
aam
mov
add
frstor
js
leave
push
add
xchg
jb
add
out
sub
mov
adc
insb
cmc
push
or
lds
adc
pop
fwait
mov
loop
sti
jnp
push
mov
and
repz
push
pop
aas
pop
ds
adc
fnsave
xlat
xor
dec
popf
gs
xor
mul
xchg
cmp
adc
aad
push
addr16
pusha
aad
int
pop
out
fnstcw
lods
jecxz
push
pop
mov
pop
jnp
jb
cmp
mov
jmp
cltd
jne
inc
lea
in
cmp
pop
lret
sbb
xlat
mov
and
outsb
enter
dec
pushl
out
insl
ficompl
xchg
data16
loop
jnp
and
inc
mov
inc
push
inc
pop
pop
ljmp
cmpsl
mov
mov
sar
cwtl
or
push
dec
mov
pop
pop
pop
shrl
xor
iret
test
pushl
xor
jne
arpl
cmp
jne
outsb
xchg
andl
iret
fsubrs
int3
scas
sbb
fidivs
lods
adc
cmp
push
cmp
imul
popa
fsubrs
jae
fs
mov
inc
jge
cmpsl
ja
out
mov
mov
cmc
push
inc
ljmp
push
pop
sub
push
cmpsl
lret
in
and
xor
jl
mov
adcl
add
js
rorb
loop
sub
mov
xchg
insb
mov
pop
bound
push
xchg
addr16
or
sti
lock
cmpsl
les
jne
rorl
and
sbb
cltd
sti
adc
cli
mov
loopne
pushf
adc
loopne
les
and
add
xchg
push
pop
stc
cmp
mov
add
jecxz
and
fstpl
icebp
mov
add
pop
cmp
enter
outsb
fmuls
scas
repz
sbb
in
pusha
cmp
pop
mov
shl
fidivs
pop
fs
jecxz
pushl
dec
test
sub
push
das
inc
sub
sub
and
mov
ljmp
xchg
mov
inc
fimull
adc
mov
in
into
test
inc
adcl
mov
std
stos
movsb
xchg
imul
ljmp
lods
push
stos
jbe
andb
out
dec
cwtl
mov
cmpsl
jg
xchg
cli
lret
push
xor
fwait
cmc
movsl
cmp
nop
xor
adc
jb
test
add
push
call
jl
adc
jg
rcrb
inc
cmp
popf
cmp
push
dec
es
adc
inc
adc
pushf
mov
push
sbb
mov
scas
add
jmp
fistpl
das
call
stos
pop
lods
dec
jo
xlat
sub
pop
mov
xchg
sbb
xor
xor
and
jmp
adc
lods
fucomip
adc
lret
mov
das
int3
dec
repz
fmuls
sub
inc
test
ja
dec
lahf
pop
scas
pop
xor
sbb
cs
ljmp
fnsave
lcall
call
push
test
push
mov
and
and
mov
cs
inc
sub
push
imul
jle
jg
sub
fstps
add
cmp
mov
repnz
cmp
dec
andl
and
push
fsub
fisttps
cmp
imul
iret
test
xchg
repz
push
jns
flds
insb
enter
cmp
sbb
mov
mov
xlat
sbb
mov
pop
adc
leave
repz
test
movsb
xchg
mov
in
cmc
shr
insb
mov
fimuls
push
test
xchg
sbbl
sbb
imul
insb
je
lret
inc
nop
fldcw
or
dec
cmpsl
call
ret
push
fildl
jne
je
aaa
dec
stc
pop
in
jo
faddl
rcll
mov
js
out
outsb
jne
jb
test
or
daa
push
mov
nop
cmp
dec
xchg
es
imulb
or
int
adcb
mov
lea
jne
sbb
sub
cmpsl
cmpsl
sbb
dec
adc
xor
roll
jmp
subl
and
in
mov
sub
fcmovu
fdivrs
add
aas
dec
subb
xor
sbb
push
std
stos
adc
repnz
mov
xchg
jmp
inc
lods
out
scas
sbb
jno
xor
ret
shl
jnp
or
stos
inc
pop
xchg
or
insb
add
and
popf
or
lahf
out
mov
and
dec
sub
jecxz
repz
xchg
outsb
into
mov
and
fcoms
in
jbe
lods
in
dec
stc
pop
hlt
in
out
aas
mov
rcrl
cmp
aaa
pop
jmp
cli
xorb
jae
push
xor
inc
orl
pushf
jbe
xchg
rolb
sub
mov
jmp
popf
adc
push
enter
push
add
mov
pop
cmp
pusha
mov
jo
xor
mov
jmp
cwtl
jae
fbstp
sub
pop
divl
hlt
fbld
and
mov
xor
fwait
std
mov
xchg
scas
lahf
pop
ljmp
shl
imul
dec
jmp
sti
ljmp
into
fwait
jp
mov
xor
cmpsb
pop
mov
jmp
mov
inc
lahf
pop
in
add
sub
mov
mov
fwait
mov
mov
lcall
cmp
pop
out
ljmp
lahf
jae
enter
pop
sub
xchg
rol
aas
cmp
call
loop
sbb
pop
push
push
mov
cmp
jecxz
and
data16
stc
mull
js
and
stos
add
and
dec
lcall
cmp
jnp
fbstp
or
negl
out
pusha
out
add
xchg
mov
out
ljmp
out
push
mov
loopne
in
arpl
mov
mov
mov
aas
add
jb
mov
dec
outsb
xchg
out
stc
pusha
repz
insb
xchg
sub
fdivl
push
xchg
sub
sub
and
mov
imul
xchg
xchg
sub
and
or
fnsave
cmp
and
into
lcall
nop
lahf
xlat
enter
dec
cld
mov
rolb
xor
faddl
out
pop
mov
out
ljmp
mov
pop
mov
sbb
push
sub
inc
add
fdivrl
lds
out
lods
mov
xor
out
pusha
ret
ret
scas
or
sahf
mov
loop
mov
cld
sub
stc
cmp
xchg
push
cmp
xchg
int3
into
jns
scas
and
scas
mov
cmp
and
mov
test
xchg
into
mov
bound
dec
cld
rcl
push
lcall
jne
movsb
std
pop
inc
or
mov
pushf
and
sbb
or
das
sbb
ss
cmc
jle
push
scas
xorb
pop
ss
xor
and
jae
fsubrs
mov
inc
inc
enter
scas
push
jmp
mov
xchg
jae
shl
enter
in
inc
add
mov
fbld
add
pop
mov
in
mov
xchg
rorl
les
pop
jno
mov
push
ds
push
inc
addb
pop
push
mov
pop
pop
jno
push
dec
call
dec
sbb
or
je
test
push
mov
in
cmp
xor
cli
in
mulb
mov
fdivl
push
fsubs
and
sub
xor
jg
add
xchg
xchg
fidivl
jmp
sbbl
inc
mov
dec
mov
sub
push
int
xlat
cwtl
cmpsb
pop
push
jp
scas
xor
sbb
loop
xchg
scas
inc
jo
add
xor
adc
testb
mov
adcl
enter
mull
fs
or
mov
inc
test
xchg
push
sub
inc
fs
pushf
hlt
fiadds
pop
lahf
lret
loop
pusha
dec
jle
fidivs
lret
push
data16
jp
push
pop
push
hlt
xchg
fidivs
movsl
or
cmc
test
in
fwait
adc
ss
jle
adc
ss
jp
icebp
into
das
xor
mov
sub
notb
insl
adc
fstpt
fnsave
clc
adc
out
imul
mov
aam
add
mov
movsl
pop
lds
push
push
or
xchg
gs
jb
xchg
xor
iret
mov
orl
insl
aaa
add
dec
sbb
xor
pop
inc
or
cltd
mov
addr16
mov
outsb
sub
push
hlt
mov
push
inc
scas
sbb
dec
andb
push
adc
or
mov
lods
mov
negb
sub
jns
pop
sub
ret
inc
add
scas
sahf
pop
mov
int
or
loopne
cwtl
inc
aad
jo
mov
push
add
push
inc
sub
fnstsw
dec
mov
ret
addr16
insl
imul
adc
outsb
jl
out
and
iret
stos
mov
frstor
stos
mov
push
xchg
loope
or
xor
lea
icebp
inc
mov
cmc
and
popf
xchg
mov
xor
ja
ds
push
cwtl
mov
insb
pop
adc
mov
jg
call
in
inc
dec
mov
inc
mov
icebp
add
cmp
out
orb
hlt
cmc
jl
sbb
mov
cltd
popa
icebp
and
adc
xlat
cmpsb
les
rcll
out
xchg
movsl
push
ret
sbb
ds
fucom
jl
adc
movsb
xchg
lret
mov
jg
aam
nop
mov
pop
gs
pop
fsts
or
mov
mov
adc
cmp
rcl
test
cmp
adc
dec
repnz
cwtl
mov
loopne
mov
sti
mov
xchg
pop
xor
adc
xchg
add
and
jecxz
std
dec
pop
out
add
jnp
stos
pop
mov
jp
popf
sbb
mov
inc
mov
test
int3
xor
or
xor
cmp
jmp
sub
shl
repz
ret
inc
mov
add
xchg
xlat
in
fdivrl
decl
shll
and
mov
and
dec
cmc
test
sahf
fnstenv
ljmp
mov
scas
pop
adc
xor
lods
dec
xor
stc
dec
cli
stc
pop
pop
xchg
jp
fwait
cld
sar
inc
or
scas
rclb
jb
push
mov
rcrb
stos
and
jg
xlat
outsb
pop
fisubrl
jbe
push
or
push
enter
push
inc
mov
pop
mov
nop
cmp
int
sti
mov
xor
dec
mov
std
cmp
inc
inc
rolb
test
mov
and
out
jl
pop
test
mov
jecxz
mov
ret
pop
add
icebp
jp
adc
mov
js
and
adc
adc
jmp
in
add
jg
lret
cmp
faddl
fimull
in
xchg
dec
gs
and
int
fucom
mov
jp
test
cli
sbb
jecxz
loop
add
jae
push
aad
insl
test
dec
mov
jnp
cwtl
sub
test
mov
cltd
inc
add
pop
xlat
mov
or
inc
inc
movsl
xchg
js
sub
mov
xchg
lret
das
cmp
test
lahf
sub
adc
lock
push
iret
ret
push
add
incl
loopne
mov
add
int3
push
cmp
mov
and
aad
push
push
xchg
mov
mov
addr16
adc
lret
or
inc
fwait
mov
jo
in
lea
gs
jmp
push
add
inc
stos
and
hlt
mov
mov
hlt
or
sbb
sub
xchg
pop
in
lds
lods
mov
xlat
iret
lahf
cmp
jno
and
int3
mov
lods
pop
rcrl
enter
mov
sbb
adc
iret
or
push
ficompl
mov
or
adcl
in
lret
daa
xor
cmc
aaa
loope
push
cmpsb
mov
icebp
or
sub
adc
dec
push
or
push
xlat
sub
les
xchg
sub
dec
mov
test
jb
push
popf
cmp
fmuls
icebp
jmp
mov
das
xor
pushl
mov
out
cmpl
jmp
fdivp
fwait
outsb
or
lea
testb
fwait
mov
xchg
jmp
lret
pop
outsl
sahf
dec
xchg
out
aaa
fistpl
dec
out
jne
xor
and
xor
movsl
fistpll
negb
xor
arpl
mov
lds
mov
ds
push
icebp
pop
fucomip
dec
pop
sub
stc
jp
fildl
xlat
sarb
push
aad
jmp
jns
push
cmp
jns
pushw
cmp
mov
push
mov
pop
roll
jecxz
repnz
inc
in
add
mov
inc
push
xchg
jg
dec
loopne
add
adc
ret
lds
in
push
mov
fwait
xor
addr16
pusha
mov
les
mov
dec
stos
add
int3
xchg
in
mov
mov
jbe
fcomi
cmpsb
sbb
push
pop
icebp
fbstp
in
inc
in
pop
lods
data16
in
push
in
pop
int
cmpb
and
and
mov
sbb
xchg
jecxz
and
out
jne
iret
mov
lret
pop
popf
gs
and
or
and
jecxz
push
or
xor
sub
dec
imul
aas
mov
stc
cmpsb
inc
lret
subb
fdivrl
jb
movsb
outsl
push
fwait
dec
scas
lret
mov
mov
mov
or
push
ffreep
inc
filds
jno
jbe
or
fwait
push
or
jecxz
es
push
pop
sbb
mov
sti
xchg
add
push
rcll
dec
aad
daa
shlb
jg
sub
shl
jnp
xchg
and
hlt
sub
out
cltd
push
sbb
out
mov
mov
js
fstps
scas
in
adc
sub
lret
push
push
xchg
and
hlt
sub
or
inc
pop
flds
mov
cwtl
lods
movsb
sub
repz
and
add
int3
sub
xchg
jne
jns
push
orl
push
fldz
push
push
or
stos
cli
adcb
jmp
sbb
gs
push
xor
cmp
int3
je
and
test
sub
mov
push
cli
sbb
pop
sbb
xchg
mov
outsb
iret
cld
aam
mov
dec
in
mov
cmp
je
or
in
adc
arpl
outsl
lcall
inc
pop
xor
js
push
add
int
jg
orl
je
mov
push
inc
mov
hlt
popa
roll
cltd
sbb
xchg
sbb
jno
and
pusha
xchg
xchg
das
es
cmpsb
in
rorl
popa
adc
test
adc
inc
xlat
or
daa
pop
push
jbe
inc
leave
push
shrb
push
rorl
fidivl
xchg
insb
test
cmp
adc
cmp
insb
loope
enter
loopne
iret
pushf
xchg
std
cmp
ret
stos
or
add
ss
mov
hlt
sar
scas
fldenv
sub
mov
xor
popf
mov
jl
mov
ljmp
mov
lods
lods
push
dec
adc
das
push
stos
cltd
push
aad
loopne
push
mov
sbb
push
push
sahf
cmp
mov
jae
es
push
mov
add
pop
sbb
movsb
jb
mov
xchg
bound
sub
loopne
inc
jmp
loop
movsw
xchg
and
nop
sub
pop
xchg
cmp
shll
dec
test
adc
sub
dec
scas
ja
aam
cwtl
icebp
sbb
mov
add
mov
dec
js
nop
repz
arpl
imul
es
mov
add
pusha
add
std
push
jge
mov
push
mov
xchg
inc
inc
sahf
fisubrl
into
cmp
add
int
mov
mov
add
mov
mov
add
incb
push
adc
jnp
xchg
push
lods
xchg
es
adc
mov
lods
push
test
mov
pop
push
ds
ja
sbb
lock
push
in
jno
pop
es
mov
cmc
sbb
push
sub
shlb
aas
push
lret
xor
leave
test
xlat
adc
loopne
insb
call
repnz
int
ret
and
negb
xor
adc
push
add
xorb
jno
and
or
fisttpll
pop
movsb
pop
in
cmpsb
mov
dec
add
andb
into
aaa
lret
add
jne
xor
cld
lods
lods
outsl
pop
mov
push
sbb
jb
fwait
outsb
into
ret
movsb
mov
call
dec
inc
enter
and
xor
mov
jno
or
mov
push
jmp
sahf
fdivrl
pushf
sub
call
dec
clc
jb
xchg
stc
and
pusha
or
sbb
bound
xchg
pop
stc
lock
pop
int3
fisttps
jmp
mov
mov
push
loopne
dec
jp
or
lahf
sti
rorl
inc
jecxz
mov
push
pop
dec
mov
jecxz
or
and
iret
pop
lahf
xor
pop
fstl
sbb
xor
mov
pop
sbb
mov
sub
xor
xor
fimuls
xor
lds
mov
lods
ljmp
jno
dec
ss
adc
loope
cmc
xor
sub
stos
mov
idiv
fistpll
mov
and
addr16
cwtl
dec
pushf
pop
mov
mov
xchg
test
ds
mov
lea
xchg
mov
xor
mov
jno
jo
push
popf
or
call
incb
lcall
nop
icebp
lcall
addr16
jg
insl
cmp
bound
push
dec
push
lods
ss
addb
lret
mov
mov
repnz
int
out
cmpsl
mov
cmp
add
sub
cmp
gs
and
jp
int3
std
jg
in
dec
imul
outsl
ljmp
fwait
pop
xor
xchg
out
and
xlat
mov
ret
rorb
sbb
pop
rcr
and
sub
inc
std
call
cli
mov
jb
imul
mov
and
testb
mov
flds
fs
aad
out
jnp
sbb
push
mov
mov
dec
inc
mov
lock
fwait
pop
fisubs
inc
or
push
je
fstps
fwait
pushf
stos
dec
fsubrl
sti
repnz
aam
adcb
or
gs
xchg
mov
nop
addr16
test
fs
gs
cmpsb
jo
cmp
xchg
repz
sbb
or
add
jns
shlb
adc
add
push
aas
mov
hlt
and
fdivl
jne
out
push
outsl
pusha
cltd
pop
sub
cmp
lock
inc
and
adc
inc
dec
pop
jg
arpl
xchg
inc
pop
or
mov
adc
mov
cmp
jb
mov
lea
test
movsb
pop
adc
jbe
push
popf
sbb
xor
mov
pop
adcb
cmp
mov
fldcw
cmp
cld
std
lods
or
mov
push
in
or
sbb
lret
pop
fidivl
mov
xor
sar
cmp
jl
mov
xchg
dec
pop
adc
mov
cltd
inc
add
inc
pop
std
ljmp
push
lods
js
leave
and
cmp
out
dec
movsb
add
xor
mov
cmpsl
adc
sbbb
iret
pop
fwait
je
pop
bound
xor
mov
adc
enter
and
inc
popf
push
dec
sarl
ror
shl
setno
sbb
mov
cmpsb
out
notl
cwtd
and
cmpsl
imul
xor
sub
arpl
fildll
add
stc
popa
jbe
pop
mov
daa
pop
xchg
jl
test
in
inc
shll
jno
mov
xor
movb
es
lods
fnstenv
fcmovb
mov
cli
inc
pop
es
ljmp
dec
les
jp
lock
mov
pop
mov
or
insb
inc
or
sub
cmp
dec
vmovq
cs
and
fistpl
sbb
in
lret
loop
test
sub
mulb
adc
sub
xchg
jp
mov
push
xchg
mov
inc
aad
int3
mov
pop
inc
push
push
pop
enter
iret
shll
je
xor
or
dec
jb
mov
in
pusha
popf
xchg
pop
lds
iret
pcmpeqd
cmp
mov
xor
cmpb
cmpsl
and
ret
sbb
shll
xor
push
dec
sub
push
jp
outsl
addr16
subw
das
mov
and
sub
fbstp
dec
das
dec
xchg
icebp
popf
mov
mov
std
mov
and
aas
push
adc
and
stos
ja
dec
out
into
jo
jmp
es
xchg
in
idivb
clc
fsubr
movsb
in
push
mov
push
xor
test
lahf
mov
dec
lock
and
sub
lret
test
popa
sub
dec
sub
insb
xchg
insb
outsb
mov
bound
or
cmpsl
or
sub
dec
or
or
push
dec
das
or
pushf
mov
mov
stos
dec
adc
dec
mov
lods
jne
cmp
or
mov
in
mov
xor
add
sub
outsb
xor
sub
stos
lcall
arpl
insl
push
or
cs
jo
mov
jg
shlb
xchg
mov
popa
add
xor
loopne
or
stos
sub
sub
clc
divl
and
sahf
add
cld
test
xor
push
insb
stos
dec
sbb
xchg
pop
push
std
orl
pop
cld
call
rolb
jo
insb
push
call
sub
nop
adc
mov
test
in
rcl
aad
adc
decl
pop
xlat
mov
rclb
inc
jg
imul
inc
add
lahf
lahf
mov
lcall
cltd
dec
xchg
inc
jbe
addr16
clc
test
xor
rolb
mov
movb
adc
pop
ss
sbb
xor
imul
arpl
pop
push
xchg
daa
arpl
push
adc
sbb
outsl
jge
lock
add
mov
call
out
dec
lea
sub
in
mov
aad
cmc
pop
xchg
test
ror
lahf
push
ja
addl
sub
jno
cmp
or
jne
adc
lods
sti
adc
movsl
dec
inc
and
into
lret
sbb
aas
adc
xlat
adc
pop
push
insb
enter
mov
jbe
jns
sbb
imul
out
jno
xor
cld
cmp
push
or
add
loope
sub
or
repnz
mov
nop
out
cmp
add
fidivrs
sbb
jb
dec
imul
cwtl
or
mov
mov
add
andb
inc
dec
sahf
or
movsl
sbb
mov
aad
pop
mov
xor
icebp
dec
and
mov
adc
cmp
imul
jg
inc
xchg
enter
sub
ljmp
xchg
and
loopne
test
insl
inc
hlt
mov
test
jnp
cmpl
jo
loope
testl
or
fdivrl
mov
stos
pop
int3
cmp
subb
stos
fimull
pop
mov
jb
cltd
sbb
sbb
popa
loopne
sub
xchg
jno
std
sti
pop
jo
and
daa
scas
mov
in
jecxz
pop
and
push
test
xor
cmp
repnz
pop
cltd
inc
fnsetpm(287
in
cld
sahf
mov
loopne
jmp
cltd
xor
testl
idiv
rcl
inc
cmp
in
movsl
jge
mov
or
dec
rcl
xor
iret
pop
test
clc
sbb
lret
or
call
add
xor
pop
mov
mov
mov
dec
cmpl
mov
sbb
xchg
es
scas
filds
mov
cmp
pop
iret
pop
and
jg
cmc
xor
jp
shr
dec
mov
xchg
rorb
hlt
incl
mov
pop
loope
pop
addr16
jno
mov
mov
sub
jb
cmp
les
push
cmp
cmp
sbb
flds
jmp
sbb
jno
arpl
jp
mov
nop
sub
cmp
lock
xchg
sbbl
jmp
rcll
out
les
imul
jle
stos
mov
jg
push
xlat
imul
mov
push
sub
aas
pop
stos
pushf
jmp
jbe
and
xchg
ret
cltd
out
sub
loopne
lret
jl
pop
outsb
data16
or
lahf
pop
aam
mov
fcomps
gs
push
loope
mov
xor
dec
push
pop
call
lock
push
and
ficoml
negl
clc
cmp
xchg
in
stos
add
ja
mov
stos
fcoml
mov
dec
dec
jne
aas
mov
jbe
in
sbb
dec
fld1
popa
mov
imul
add
mov
aas
dec
xchg
pop
fimull
ffreep
aaa
cld
shr
jge
outsl
mov
dec
out
mov
push
std
leave
fidivrl
and
out
sub
xchg
pop
jmp
test
jmp
ds
out
and
inc
in
xor
sbb
mov
insl
dec
lahf
insb
fnstsw
insb
ss
mov
mov
add
push
pusha
lcall
or
mov
lea
jo
movsl
shl
popw
cwtl
jge
mov
xchg
push
std
stos
jne
push
sub
ds
out
sub
dec
xchg
out
cld
popf
push
negl
in
cld
sbb
inc
js
aaa
mov
cmp
lcall
mov
andb
pusha
andb
pop
xchg
popa
push
daa
and
mov
mov
cmp
mov
test
mov
and
or
xchg
movsl
call
rcrl
dec
mov
into
jle
sub
loop
sti
stos
inc
xor
cmp
pop
push
jg
mov
mov
ss
mov
xor
fisttps
xor
test
pop
ds
test
pop
aam
adc
and
mov
orb
fnsave
jge
add
inc
shrb
push
xchg
add
mov
adc
and
push
mov
cmp
stc
mov
sbb
cltd
fnstenv
mov
and
out
mov
cmp
loopne
shrl
js
inc
push
sub
inc
xchg
push
and
popa
xchg
cmc
inc
push
rclb
push
sub
lock
loop
and
test
incw
xchg
ljmp
cmpsl
mov
into
rolb
scas
mov
cmp
fnstsw
jo
mov
sub
inc
ljmp
test
shll
notl
iret
dec
jae
rorb
icebp
inc
adc
jmp
addr16
cwtl
add
nop
cmp
add
je
cltd
add
mov
pop
push
int
pop
lret
jp
dec
in
das
insl
xchg
into
or
xor
sub
fwait
pop
testb
mov
dec
je
sub
ret
lcall
dec
in
cltd
push
dec
popf
dec
mov
mov
pop
sbb
idivb
mov
ficoml
mov
lods
jmp
pop
idivl
mov
lods
push
data16
ret
ret
lea
inc
pop
andl
repnz
popf
sub
enter
cli
fisubrs
jl
add
test
in
ja
mov
pop
and
fidivrl
addr16
sbb
xor
cmp
out
fnstenv
movsb
out
ret
push
clc
out
xchg
inc
adc
add
inc
iret
lcall
call
loope
mov
cmp
sbb
push
add
push
stos
outsl
gs
pop
ja
arpl
jbe
gs
sub
jb
lea
xchg
leave
jbe
call
fiadds
nop
adcl
lahf
test
cmpsl
ja
enter
cmc
push
adc
loop
pop
ja
and
cwtl
int
add
sbb
cmp
push
enter
sbb
add
inc
arpl
dec
pop
add
pushf
xlat
stos
cltd
scas
cmp
mov
scas
or
movb
xor
push
mov
xlat
test
lods
mov
sub
out
pop
dec
inc
and
insl
into
jp
lea
sub
mov
repnz
jns
fistps
idiv
push
loope
je
sbb
in
pop
cmpsl
lods
mov
std
pushf
mov
pop
dec
mov
mov
punpckhwd
mov
inc
mov
push
mov
ljmp
sbb
insl
push
xchg
dec
fs
xor
sub
out
out
adc
movsl
sarb
imul
xor
in
sub
xor
test
cwtl
mov
cmpb
mov
out
or
and
aam
fcoml
jne
clc
sahf
mov
pop
pop
pop
add
test
cli
orb
or
mov
dec
int
stc
loopw
enter
js
xchg
loope
cmp
mov
jb
pop
test
and
add
fimuls
adc
mov
mov
jb
enter
sbb
push
push
cvtpi2ps
dec
pop
neg
mov
and
mov
xlat
addb
ret
lods
push
in
pusha
leave
xor
push
cs
shrb
cmovo
lahf
push
push
outsl
lods
leave
cwtl
or
jne
xchg
mov
mov
dec
mov
jne
adc
dec
xor
fdivrl
ss
mov
pop
jbe
lock
sbb
mov
inc
inc
fcompl
xorb
cmp
cmp
in
push
out
xlat
and
push
push
inc
push
mov
jae
xor
fs
pop
lds
push
inc
stos
xor
push
pop
cwtl
bound
insb
out
add
mov
pop
loop
and
inc
testl
or
or
inc
mov
popf
mov
mov
jae
dec
or
cmpsb
inc
jbe
mov
adc
xchg
ret
adc
mov
outsl
fs
mov
icebp
xchg
adc
les
pop
lcall
pop
cwtl
jmp
outsb
and
mov
push
sbb
enter
and
fidivs
cmp
in
or
insb
unpcklps
lret
int
jne
out
lahf
fmull
pop
add
cmp
lock
aam
aas
lods
jbe
dec
xchg
lods
insl
pop
aas
add
xchg
test
jo
sti
mov
call
pop
mov
ds
and
jmp
add
addr16
cmp
std
pushf
je
cmp
fs
inc
dec
pop
push
cmpsl
mov
nop
mov
add
push
lods
xchg
sbb
jp
scas
bound
gs
push
or
sbb
jg
dec
xchg
in
fildl
movsl
push
mov
movsb
out
cltd
push
fidivrs
lea
sub
jnp
add
sbb
add
fnstenv
lahf
iret
das
clc
add
enter
test
pusha
fs
adc
adc
out
fmull
inc
stos
ljmp
jmp
sub
cli
sub
repz
dec
cmp
xchg
ljmp
sbb
mov
mov
fadd
lcall
shrb
xchg
insl
hlt
js
popf
add
xor
mov
repnz
mov
sar
xchg
sbb
mov
incb
mov
dec
les
adc
pop
cmpsl
lea
fnstcw
stos
jl
aas
clc
mov
movsl
repnz
mov
cmp
add
fistpll
sarb
mov
sarl
pop
outsl
pop
mov
fldcw
add
jmp
jnp
sub
mov
aas
daa
enter
cltd
movsl
and
and
adc
es
xor
pop
adc
xchg
aaa
add
leave
in
outsl
sbb
mov
push
add
es
not
js
lock
inc
fadd
mov
push
cmp
rorb
fnstcw
ljmp
leave
sub
lds
sarl
sbb
andb
sbb
mov
pop
inc
mov
xchg
mov
sarb
fsubrl
jg
jne
dec
ds
or
and
dec
inc
mov
in
dec
mov
pop
xchg
fldenv
shlb
mov
ljmp
fidivrs
push
pusha
pop
imul
xlat
mov
push
mov
and
jl
movsb
push
inc
jle
adc
fiaddl
int
mov
jmp
and
shll
imul
test
testl
or
arpl
or
pand
fadds
or
int3
mov
sub
cmp
xchg
das
rol
or
inc
pop
loope
xchg
cmp
dec
mov
sbb
and
push
xchg
sub
aas
jbe
or
mov
cmp
xor
push
sub
jmp
dec
lea
mov
decb
jmp
test
stos
or
inc
push
mov
enter
xchg
dec
cmp
mov
adc
push
out
mov
push
arpl
mov
rorl
dec
rorb
sbbl
jns
aam
int3
jb
push
sbb
ret
es
fidivs
stc
dec
push
repz
loop
sub
fs
jp
roll
sete
repnz
mov
push
and
aas
stos
aad
insb
xlat
cmp
jl
add
fildl
pop
inc
mov
and
dec
ficoms
lods
icebp
push
sub
lods
inc
adc
push
fwait
or
loope
adc
data16
inc
xchg
sbb
into
xchg
xor
shll
fistps
and
sub
das
xchg
sbb
mov
mov
mov
adc
fucomip
cltd
cmp
xchg
repz
rcr
addr16
push
lret
std
mov
cmp
test
xchg
and
repz
cltd
in
mov
frstor
adc
dec
mov
mov
or
jbe
and
imul
sar
aas
xor
cld
imull
xchg
les
cmp
ret
scas
imul
dec
xchg
ret
enter
dec
and
je
inc
sub
mov
cmpsb
add
les
inc
jno
sti
faddl
sub
dec
and
mov
mov
and
mov
xchg
push
mov
mov
je
mov
inc
pop
insl
pop
xor
lret
in
and
mov
aad
xchg
mov
adcb
mov
icebp
sbb
mov
inc
fidivrl
xor
js
aam
dec
cmp
inc
xor
or
or
cmp
pop
sub
pop
and
movsl
mov
fistps
sbb
mov
push
mov
mov
cli
fwait
loop
mov
mov
and
inc
fcmovnbe
and
adcb
pushf
pop
xchg
popf
xorl
addr16
xchg
imul
xchg
in
shrl
and
sub
and
cmp
sbb
les
frstor
and
gs
addr16
jl
fidivl
icebp
imul
pop
sub
xchg
dec
aad
test
fwait
arpl
lcall
mov
push
push
push
sbb
rcrb
sub
xchg
jle
and
xor
or
or
xchg
fucomip
mov
xchg
lret
lahf
imul
jae
adc
and
out
mov
jns
aaa
jno
idiv
mov
lock
lret
imulb
push
jl
leave
sarl
sbb
cwtl
mov
pop
je
lock
mov
aam
push
add
mov
and
mov
lret
movb
dec
sbb
and
movsb
xchg
das
test
jl
xchg
test
xor
pop
mov
mov
xlat
and
pmuludq
scas
push
mov
outsb
inc
popf
popa
cmpsl
ror
hlt
iret
pop
mov
ja
jmp
ret
cmpsb
push
mov
int3
addr16
les
in
int3
test
jl
cltd
push
fsubs
ds
sub
mov
insl
data16
divb
xlat
mov
dec
inc
imul
mov
das
pop
les
sbb
and
jp
aas
pushf
and
push
mov
xchg
cmp
repnz
insb
je
and
push
jl
jnp
aad
enter
loopne
pop
dec
and
popa
push
pop
imul
xor
outsl
stos
lret
pop
add
test
mov
iret
lods
jne
movl
adc
insb
test
vpsadbw
mov
pop
in
jmp
iret
xchg
xchg
andb
jge
inc
xchg
in
leave
adc
ficoml
dec
pop
push
bound
mov
outsl
cmpsl
inc
adc
adcl
pop
fildll
ljmp
divl
iret
cmp
lahf
mov
xchg
fwait
cmp
xchg
push
cmp
sbb
es
pop
scas
movsb
mov
and
cmp
repz
out
in
pushf
mov
and
stos
add
in
xchg
push
inc
cmp
push
jecxz
and
stos
and
mov
test
es
xor
mov
mov
push
cmc
sbbb
xchg
cld
cmp
xor
and
adc
leave
add
dec
insl
ficoml
stc
mov
jmp
push
push
leave
mov
gs
inc
push
repnz
push
fildl
cld
test
int
mov
in
ds
and
jne
mov
mov
sbb
dec
cs
scas
imul
addr16
out
mov
push
push
and
and
daa
pop
int3
js
push
aad
mov
xchg
lds
add
push
adc
mov
loopne
insl
inc
fwait
das
addr16
and
xchg
inc
push
cvtps2pd
lods
fstl
aas
ret
push
fstp
mov
stos
lret
mov
rclb
dec
pop
imul
gs
call
pop
push
xor
dec
out
mov
xchg
insl
popa
mov
call
adc
subl
mov
das
hlt
add
push
rcrb
xor
mov
iret
mov
mov
enter
lds
jecxz
pop
daa
xor
cmc
lret
pop
fs
and
pop
cmp
mov
addl
adc
movsl
mov
and
test
movsb
popa
and
or
into
divps
or
lret
movsb
inc
pop
inc
loop
or
out
je
mov
jae
or
mov
dec
and
or
mov
sarb
sub
pushf
and
aas
data16
dec
fdivrs
xor
jle
in
push
ss
sbb
fwait
mov
adc
sbb
frstor
test
sbb
aam
mov
mov
paddd
add
cld
dec
popf
mov
pop
dec
ljmp
test
popf
lcall
ds
jge
sahf
inc
mov
fndisi(8087
pop
xor
loope
jno
loop
cwtl
inc
in
jmp
inc
push
add
outsb
xchg
repz
lahf
aas
xor
lock
xchg
pop
cmp
icebp
test
fcompl
mov
push
stc
out
call
push
or
cld
aaa
jecxz
xchg
adc
int3
je,pn
inc
jl
push
cwtl
xor
mov
sbb
mov
fsubl
push
and
ljmp
pop
jno
sub
ret
pop
icebp
mov
mov
enter
movsb
loop
enter
pop
in
xchg
cwtl
xchg
pop
push
and
add
inc
paddsb
lock
imul
test
add
dec
adc
out
inc
jns
jno
sbb
lock
jns
test
repz
aad
popf
dec
inc
xchg
gs
mov
nop
nop
fisttpll
jecxz
ja
push
xchg
repz
cmp
data16
sub
hlt
repnz
mov
sbb
mov
ja
dec
jne
xor
add
call
cmpsl
or
sarb
inc
adc
pop
adc
mov
fidivrs
add
add
in
lcall
enter
ljmp
xor
outsl
xor
mov
pop
call
aam
aam
xor
test
lock
in
movsl
jg
xor
xor
dec
xor
mov
lcall
cs
jge
hlt
xchg
in
movsb
jg
imul
mov
mov
sub
inc
jg
mov
add
orb
adc
adc
rolb
out
aad
sub
mov
jno
lods
test
lock
sahf
sbb
outsl
jl
sbb
arpl
ret
inc
repnz
hlt
or
add
dec
and
out
rcll
cmp
pop
xchg
in
mov
jnp
notb
jno
fbld
sub
insl
dec
add
lods
jo
in
mov
insl
sti
xor
shr
sbb
pusha
addr16
out
jo
and
jns
cli
xorb
insb
adc
push
jecxz
xchg
lret
std
jp
ret
and
fwait
lea
stos
adc
fcmovu
testb
lods
loop
lcall
dec
dec
and
jne
adc
ret
insl
push
sub
mov
and
test
pop
xor
xchg
adc
jmp
mov
mov
cmp
cmp
pop
dec
mov
in
aam
shrl
test
mov
icebp
mov
loope
in
leave
xor
lret
pop
jo
clc
mov
lock
addl
pop
add
das
dec
or
test
jp
inc
ret
insl
xor
arpl
adcl
loop
or
sub
loopne
xchg
insl
add
fwait
mov
jbe
cmp
dec
shlb
scas
mov
hlt
loopne
sub
mov
in
or
dec
mov
test
aas
dec
xor
or
imul
jmp
aam
orb
mov
pop
js
mov
aad
gs
sub
cmpl
js
sbb
push
xchg
dec
loopne
mov
faddl
stc
xor
out
insl
adc
xchg
dec
sbb
pop
or
push
jge
cmp
scas
or
cmpsb
fcomp
es
ret
fiaddl
push
xchg
dec
mov
jl
mov
out
xchg
daa
xor
jbe
lret
out
loop
in
cltd
fildll
cmp
mov
push
pop
or
mov
popa
adc
mov
out
mov
cmp
mov
stc
sub
jl
aas
pop
mov
pop
mov
jo
pop
adc
hlt
inc
out
xor
inc
cmpsl
push
mov
dec
loopne
sarl
or
lahf
sbb
div
jo
xor
incb
out
ja
sbb
stos
xchg
add
mov
shlb
xor
leave
frstor
sbb
mov
mov
js
mov
inc
mov
push
repz
and
adcb
adc
subb
negl
pop
adc
jle
leave
mov
fists
sbb
inc
dec
sub
lahf
out
push
sbb
mov
mov
add
ds
xor
and
fldenv
push
pop
les
sbb
mov
ret
add
push
enter
mov
loop
xchg
and
mov
adc
pop
xor
data16
jmp
iret
xchg
inc
mov
cltd
xchg
jae
scas
pop
rcrb
mov
fcomp
mov
sti
fxch
lcall
xchg
cmp
out
mov
mov
and
pop
sbb
cmp
call
popf
inc
out
mov
jmp
cmp
daa
mov
arpl
hlt
push
or
outsl
jmp
push
push
outsl
pop
out
mov
pop
aas
push
pop
rorl
sti
fistpl
mulb
scas
sarl
jo
jno
jae
enter
dec
and
mov
jecxz
and
lds
jne
nop
orl
scas
subb
aam
mov
mov
and
movsl
movsb
repnz
jno
out
sub
mov
ja
xchg
jmp
mov
mov
pop
out
sub
inc
scas
test
adc
push
or
les
loop
notl
loop
test
aas
fs
xor
out
jle
sub
fistl
in
xchg
jl
and
push
out
aad
and
lods
nop
add
cmp
pushf
mov
int
pop
andl
inc
jge
test
push
xor
mov
pop
ds
sbb
cmp
dec
test
pop
lods
ljmp
lahf
popf
inc
ret
mov
sbb
jne
sbbb
push
divb
imul
or
test
cwtl
stos
pushf
pusha
mov
xchg
push
repnz
ret
pop
mov
adc
insb
push
push
mov
add
aam
inc
aam
clc
dec
push
fildll
add
lea
stc
gs
adc
loopne
xchg
bound
or
sub
iret
xor
lret
mov
int
dec
imul
sbb
cld
cltd
adc
cs
sub
cs
daa
push
jmp
mov
mov
mov
sbb
adc
push
movsb
mov
iret
lcall
outsl
or
add
pop
dec
mov
adc
dec
or
cmpsb
and
adc
sub
cs
sbb
loop
cmc
js
scas
dec
stos
ja
mov
and
outsb
mov
lods
sbbl
dec
dec
jne
cmp
mov
ljmp
jns
outsl
fstpt
insb
insl
jecxz
mov
ret
dec
and
nop
iret
adc
xor
aam
ds
cmp
push
push
mov
xchg
xor
lcall
jg
les
jno,pn
cwtl
jne
mov
xchg
push
and
mov
adcl
and
mov
push
cmp
test
jl
shrl
push
pushf
pop
cmpsb
xlat
loope
rcrb
xchg
shl
push
and
aaa
sbb
push
adc
pop
imulb
xchg
sub
mov
adc
es
in
push
out
pop
iret
xorb
dec
push
mov
bound
adc
jg
adc
push
mov
xchg
rolb
sub
popf
fwait
std
shl
cltd
mov
pushf
dec
aam
test
pusha
shrl
sarl
pushf
stos
stos
jecxz
insb
jp
add
inc
addl
sub
pop
sub
imul
ret
cmp
mov
aaa
jne
pusha
xlat
cli
stos
scas
adc
arpl
cmp
jb
jge
jns
pop
ss
call
mov
repnz
inc
pop
push
ret
js
adc
or
mov
jg
jns
das
sbb
xor
test
clc
movsb
test
mov
push
enter
jge
push
add
in
sbb
add
bnd
int
sbb
sub
xor
jbe
test
in
jp
push
push
mov
out
push
mov
out
ljmp
shlb
lret
jae
stc
sar
xchg
or
jecxz
iret
adc
or
rcll
fisttpll
mov
test
insl
sbb
incb
insl
ss
push
lock
pop
xchg
sub
enter
pushf
lea
jbe
and
inc
sbb
inc
push
scas
mov
adc
or
push
dec
scas
outsb
add
es
or
and
test
std
cld
divb
or
cmp
push
jl
sbb
mov
cmp
cmp
ss
in
xor
add
fidivrs
lcall
imul
jae
test
jecxz
test
fildll
jg
incb
pop
jbe
out
insl
lea
lds
icebp
pop
mov
jne
inc
xlat
test
adc
mov
mov
scas
mov
dec
outsl
push
dec
insb
dec
stc
aas
movups
ss
sarl
movl
or
sub
out
outsl
rolb
fs
fistpl
and
gs
ret
pop
xchg
sub
rcl
jae
pop
adc
cmp
sbb
stos
ficoml
mov
mov
add
push
int3
sbb
test
fucomi
imul
cmp
iret
xor
call
ljmp
mov
mov
outsl
mov
cmp
fdivr
into
icebp
inc
cli
inc
jae
aas
cmp
dec
add
sbb
cltd
pop
lods
enter
gs
lcall
push
mov
insl
orl
stc
xchg
shr
cmp
les
cmp
mov
mov
adc
mov
inc
addr16
hlt
insb
outsb
int3
jmp
into
movsb
add
test
mov
push
inc
xor
subl
pop
in
aam
adc
dec
inc
adc
faddp
xorb
pop
movsl
sbb
ret
inc
push
mov
xor
add
or
or
pop
js
sub
jb
decl
dec
inc
push
push
mov
mov
mov
fdivs
xor
pop
sbb
icebp
dec
push
or
mov
mov
add
jo
out
movb
push
popf
cmp
repnz
push
leave
sahf
loopne
test
jbe
pop
fisubrs
inc
fmul
scas
ljmp
int
cmp
dec
sub
and
xchg
mov
mov
and
jp
push
mov
in
push
loope
mov
mov
pushf
adc
add
movsb
push
dec
out
mov
lock
or
sbb
jo
andb
or
sti
sti
cmp
or
xor
mov
test
stc
sbb
pop
pop
mov
xor
jl
int3
shlb
sbb
das
loop
push
sbb
aam
iret
mov
sub
dec
add
push
jbe
jns
jge
out
lea
rcrl
lcall
dec
mov
mov
aaa
sbb
dec
cmp
or
insb
lret
adc
div
mov
mov
push
dec
ret
lret
test
add
jecxz
mov
xor
cltd
mov
mov
loop
dec
jmp
xchg
in
push
aaa
mov
cmp
sbb
push
push
or
or
insb
push
lret
out
pop
jp
or
scas
push
je
fistps
push
in
inc
sti
mov
arpl
ds
inc
sbb
xchg
pop
jno
or
aad
mov
cmp
stc
xlat
mov
inc
enter
movsl
xchg
ss
lds
out
pushf
sbb
dec
testl
int3
je
xchg
in
inc
insb
jg
icebp
out
popa
lret
push
ffree
add
adc
mov
scas
cltd
jo
test
aad
xor
push
push
sbbb
sub
sub
jl
out
bound
push
sub
cmpsb
ror
xchg
adc
mov
mov
dec
flds
aaa
jo
add
xor
test
lods
dec
jge
mov
sbb
pop
aas
les
dec
push
dec
arpl
mov
jp
mov
loope
or
or
ret
or
dec
hlt
ret
cmpsl
push
jg,pn
mov
ljmp
aad
scas
jge
xchg
data16
fwait
out
andb
mov
mov
lock
adc
jg
icebp
push
or
sub
fimuls
fisubl
int3
sbb
enter
xor
push
pusha
jle
fistpl
insb
inc
xchg
or
dec
jmp
cmp
push
cmc
aas
or
outsl
ds
aas
cmpsb
pop
nop
xchg
loop
ds
mov
or
lds
xor
outsb
cmc
subl
sbb
mov
mov
nop
negl
fs
sub
mov
xorb
shll
push
mov
movsl
ret
loopne
jge
jle
pop
push
adc
sub
lods
add
stos
jne
adc
cld
jo
and
pop
inc
jg
sbb
or
stos
and
nop
or
out
stos
into
imul
out
loopne
cwtl
mov
inc
xchg
pushf
cmp
stos
repnz
test
pop
mov
or
sub
add
insl
inc
movsl
jge
out
mov
hlt
mov
les
addr16
dec
mov
jbe
out
nop
test
int
cmpl
inc
and
jecxz
mov
pop
mov
lret
ss
xchg
ljmp
add
mov
cmpsb
mov
add
test
push
das
in
testl
push
push
pop
mov
add
or
xor
lret
test
inc
xlat
mov
sub
inc
sbb
push
jmp
and
sbb
jbe
aad
sbb
cwtl
add
dec
loope
mov
jo
cmpsl
jge
sbb
mov
fnstenv
pop
mov
pop
sub
or
mov
sub
or
enter
mov
shl
and
sbb
jno
stos
dec
and
or
dec
add
call
jecxz
outsl
xor
cmp
cmp
ret
lahf
cmpsl
and
dec
mov
sti
icebp
ret
mov
stos
cmpsb
jnp
sub
pop
outsl
lock
je
inc
outsb
mov
mov
std
and
das
mov
ss
out
mov
call
shlb
adc
scas
xchg
mov
test
jmp
stos
std
bound
mov
das
cld
scas
xor
cmpl
pop
xchg
clc
mov
dec
and
test
fcmovb
scas
in
ljmp
aam
mov
jl
repz
lods
jge
cmp
mov
jp
fldt
sub
jbe
cmp
jnp
dec
test
inc
and
mov
scas
add
push
rolb
int
cmpsl
mov
lea
pop
imul
imul
sbb
negb
rclb
fscale
dec
enter
lret
rolb
cmp
adc
push
in
sahf
xlat
mov
or
jle
mov
or
lret
xchg
test
sub
push
outsl
xchg
fisttps
fnsave
push
lret
push
lea
push
pop
dec
sub
negb
jne
mov
sahf
int3
add
xchg
fstl
mov
xchg
divb
lea
xchg
xor
ret
js
jo
xchg
lods
jno
adc
or
pusha
insl
jl
popf
dec
pop
jmp
lcall
fsubs
add
pusha
pop
and
xor
and
add
lret
mov
sub
mov
cmc
jmp
push
lret
dec
mov
fcomp
pusha
adc
dec
loope
push
mov
stos
test
mov
cmp
stc
fcoml
stc
enter
inc
in
es
ss
int3
jecxz
bound
or
fmulp
and
jnp
or
addr16
popf
jnp
push
inc
aas
stos
inc
inc
divb
or
mov
or
dec
cltd
ja
mov
shrl
in
fstpl
pop
and
mov
in
dec
pop
lret
push
mov
in
add
xor
push
test
xor
dec
fcmove
jle
xor
dec
cmp
xchg
inc
pushf
sub
push
mov
or
call
mov
mov
jp
loope
lock
push
imul
fwait
jle
fisubrs
andl
ja
std
rcrl
mov
xor
push
shll
lret
sbb
mov
rcrb
rcl
mov
ss
loope
or
push
mov
mov
pop
test
insb
cli
jno
jmp
sub
xor
aaa
xor
lea
mov
stc
add
andb
mov
push
cmp
add
mov
aam
clc
pop
xor
add
mov
cmp
ret
test
data16
inc
push
repnz
push
cltd
rcr
sbb
sarb
daa
mov
dec
add
out
fldenv
cs
int
aad
inc
xchg
fsubr
xchg
sbb
rclb
inc
mov
adc
xor
in
movsb
jnp
orl
fsts
xor
mov
fidivl
mov
sub
mov
lret
cwtl
mov
int3
addl
mov
dec
xor
cmp
rcll
jp
ds
leave
mov
sahf
stos
xor
je
and
jo
pop
lret
addl
fwait
arpl
popa
dec
pop
or
mov
xchg
push
push
mov
into
fisttps
adc
jo
add
inc
scas
sarb
or
mov
js
ret
mov
adc
test
insb
sbb
adc
iret
dec
jb
xchg
shll
lahf
push
ror
cmpsb
add
insl
dec
cld
mov
push
add
mov
mov
mov
jle
and
leave
xchg
sub
ret
sahf
mov
mov
cmp
fildl
aas
sbb
pop
daa
testl
adc
pop
xchg
gs
shll
fs
xor
adc
pusha
imul
es
stos
es
cli
or
add
enter
scas
mov
xchg
mov
add
mov
outsb
ret
or
call
lcall
in
out
mov
std
and
dec
movsl
xor
mov
inc
lods
dec
pop
sti
jno
call
xchg
lret
mov
mov
mov
cmp
mov
or
jecxz
repz
mov
jnp
mov
popf
xchg
inc
insl
xlat
leave
mov
dec
xor
inc
ds
mov
stos
xchg
jmp
mov
iret
xorl
lcall
loopne
push
nop
cltd
test
mov
or
mov
inc
mov
in
xlat
aad
xchg
pop
pop
repnz
adc
mov
ret
rcrl
fimull
fisubs
jns
in
cld
pushf
leave
mov
ret
cmp
fmul
jae
je
cltd
icebp
sahf
sti
test
xchg
filds
gs
jne
adc
pop
sub
bound
inc
shll
pusha
cld
add
sub
jb
mov
mov
movsl
cmpsl
insl
in
fildl
sar
xchg
movsb
dec
xchg
push
test
es
stos
mov
rcrb
cmpsl
addr16
inc
pop
push
adc
dec
loopne
out
adc
or
hlt
out
fnstenv
ds
clc
adc
jo
shrl
rorl
jns
pop
lock
cmp
popa
call
js
adc
adc
lcall
xchg
lock
mov
adc
and
mov
cmc
imull
dec
mov
cs
pop
outsb
ror
dec
dec
sbb
lcall
push
and
stc
xchg
push
fnstenv
call
pop
push
xchg
cmp
add
addr16
push
sub
sub
xor
cltd
xchg
push
cli
scas
and
mov
xchg
add
test
ljmp
loop
lret
sub
scas
push
test
das
mul
cmc
sarl
ljmp
in
inc
add
jg
cmp
xor
add
xchg
push
test
or
int3
adc
fadds
int
inc
xchg
fs
arpl
inc
xor
cli
add
dec
test
daa
test
and
push
dec
add
mov
ja
pop
ljmp
xchg
adc
xlat
jmp
sub
sarb
pop
ja
sub
xor
lahf
pop
outsb
rcr
out
std
inc
cltd
dec
sub
int
sbb
addr16
in
notl
xor
adc
outsb
lea
sbb
rcl
mov
imul
inc
aad
fs
bound
loopne
in
aad
pop
sub
push
dec
subl
sub
fstps
jl
ret
sarl
mov
imul
out
scas
add
pushf
pop
into
xorl
pop
test
das
sar
cli
mov
in
push
frstor
inc
mov
ret
add
jbe
insl
push
or
push
in
dec
test
mov
subb
in
mov
std
or
push
or
pushf
xchg
mov
xor
push
adc
inc
rcl
xchg
jbe
dec
cmc
stc
xor
in
in
iret
sub
xor
shll
ret
adc
xor
mov
adc
dec
aaa
pushf
repz
pop
sahf
out
test
adc
sbb
jno
inc
mov
sbb
loope
xchg
mov
and
xor
scas
mov
ret
and
jge
jmp
cmp
add
imul
add
pop
pop
xchg
shrb
xor
mov
lcall
repz
xor
push
xor
in
jmp
cmp
test
pusha
pop
cmpsb
xor
leave
mov
sahf
rcr
jecxz
sbb
dec
in
sbb
and
ja
fstpl
jle
or
ljmp
or
fistps
rol
inc
add
fs
mov
pop
popa
test
push
ficompl
jecxz
xlat
ficompl
idivb
sbb
add
nop
popa
push
dec
cmpsb
add
cmpb
jecxz
cmp
arpl
jbe
sbb
std
and
mov
cld
ficoms
rcrl
adc
lea
mov
mov
jns
mov
testl
arpl
aaa
imul
jbe
xor
sub
dec
mov
fldenv
inc
das
push
mov
xchg
in
cli
dec
loope
xor
inc
sub
pusha
loop
fldenv
pop
jne
jns
hlt
insb
pop
push
mulb
pop
cld
and
xchg
xchg
inc
lods
inc
sub
add
imul
fimuls
ss
inc
ret
mov
cwtl
aad
cmpsb
loopne
jns
adc
xchg
push
xor
push
and
mov
or
sub
xchg
and
mov
mov
cmpsl
imul
movsb
aam
xchg
fistps
lea
or
jnp
shlb
je
in
jo
add
imul
mov
dec
cli
push
mov
pop
addr16
test
pop
ret
push
nop
mov
inc
movsl
and
clc
sub
popf
cmp
pop
xlat
std
das
fstpl
scas
pop
adc
cs
pop
sahf
getsec
jnp
cmp
xlat
lods
ret
lcall
test
push
xchg
jbe
iret
enter
test
lahf
adc
push
in
jns
mov
cli
inc
adc
arpl
mov
outsl
mov
jne
sub
fs
aam
divb
lret
push
or
push
and
insl
or
mov
adc
mov
decl
aad
je
sub
cmp
xor
add
sub
jmp
pop
mov
iret
jbe
push
dec
dec
dec
shll
or
mov
loope
std
mov
push
ds
jmp
insl
loopne
sbb
push
cmp
icebp
imul
sub
filds
sarl
cmpsb
jb
pop
mov
insl
ficoml
ljmp
bound
rcrb
mov
daa
cwtl
jge
mov
pop
mov
push
aas
imul
repz
pop
jne
inc
jb
sahf
mov
mov
iret
mov
or
ret
iret
pop
imul
sbb
aad
xor
out
or
or
cld
pop
dec
jp
call
lahf
lret
dec
mov
push
int
cmp
dec
xor
inc
push
mov
les
inc
int
jb
in
push
sub
mov
jecxz
jno
jne
xchg
movsb
inc
or
xchg
mov
std
jns
add
jmp
xchg
dec
pop
hlt
cmp
or
shl
sahf
sbb
mov
push
mov
out
hlt
adc
test
test
dec
cmp
jg
orl
mov
jp
add
fnstenv
fwait
loop
dec
outsl
aaa
rolb
add
dec
popa
and
add
mov
leave
push
mov
lock
adc
dec
imul
dec
mov
jbe
mov
cmc
daa
fisttpll
adc
pop
xlat
stc
hlt
mov
mov
loope
sbb
out
xlat
cmp
mov
inc
pop
out
xchg
repz
jb
mov
add
mov
sbb
test
aaa
mov
cmp
iret
xchg
push
loope
push
daa
insb
ret
test
jns
dec
sub
dec
adc
sub
cltd
aas
aaa
loope
jl
jbe
xchg
inc
push
les
movsl
ja
mov
push
sti
mov
mov
cld
mov
mov
jbe
data16
test
ret
decl
add
test
out
xchg
or
rorl
gs
mov
jbe
call
adc
adc
sbb
jge
repnz
adc
and
repz
cld
pop
mov
fs
pop
mov
in
cli
loope
pop
ja
inc
data16
ret
das
or
jne
out
mov
inc
ss
or
std
mov
jmp
dec
pop
add
xchg
xor
jo
mull
jle
pushf
loope
out
fs
sub
inc
sub
xchg
push
fildll
jnp
dec
lds
scas
test
fldcw
dec
jae
jne
mov
lods
jl
hlt
jge
cmp
mov
hlt
or
fsub
imul
iret
fnstcw
ljmp
mov
sbb
test
xor
push
aas
bound
iret
ljmp
push
insb
cmp
test
out
inc
xchg
mov
xlat
mov
add
out
mov
cmpsb
mov
mov
cmpsl
cmovge
push
lea
out
mov
adc
push
add
call
xor
mov
adc
inc
cmp
jnp
cmp
outsl
xchg
sbb
adc
jae
into
lock
cmp
lods
push
add
xchg
out
loopne
xor
pop
popf
icebp
stc
push
push
test
or
cmpsb
imul
mov
lret
shrl
pop
xchg
in
clc
test
push
jno
lahf
jecxz
mov
xor
pop
xor
cs
sub
outsl
sub
addr16
stos
mov
dec
push
stos
call
jp
jns
push
inc
jl
pop
mov
sbb
jo
cmp
rcrl
je
lods
lret
es
lea
aas
push
insb
push
das
or
dec
or
dec
inc
mov
adc
data16
test
gs
ret
add
inc
divb
clc
aam
dec
sbb
cwtl
test
push
mov
lea
cld
ret
and
push
aas
mov
adc
xchg
and
test
jns
sahf
out
lahf
repnz
mov
sub
pop
daa
push
orl
cmp
shll
ror
repz
dec
or
into
jmp
fimuls
add
mov
test
mov
adc
loopne
mov
inc
push
add
pop
loope
leave
adcl
xchg
mov
das
test
decl
data16
test
pushf
pop
sub
and
std
adc
sub
aaa
or
sub
or
pop
ja
sbb
jge
push
rorl
pop
mov
idivb
mov
push
pop
pop
sub
or
lods
leave
mov
adc
out
xchg
arpl
mov
mov
daa
ret
cmpl
or
stos
push
imul
cmpsb
cmp
add
push
inc
pop
cli
mov
sbb
popa
jmp
dec
mov
adc
outsb
in
js
push
icebp
stos
mov
jb
jle
int
shll
xchg
rcll
inc
stos
sbb
pop
lods
incb
sbb
sbb
cmp
sbbb
mov
and
xchg
insl
push
rolb
mov
cmp
fcomp
push
movsb
icebp
movsl
hlt
imul
push
lcall
into
sbb
add
outsb
adc
pop
mov
sbb
lods
sub
xchg
push
inc
js
mov
push
dec
or
push
stc
addr16
sbb
add
or
call
scas
xor
in
jb
pushf
nop
jle
or
call
dec
lods
cmp
xor
daa
mov
insl
adc
or
mov
lock
xchg
push
cmpsl
push
aaa
enter
pop
sbb
ja
mov
mov
nop
and
adc
or
nop
push
pop
mov
sbb
imul
inc
movsl
xor
daa
pushf
aad
fists
test
lret
push
mov
jmp
insl
jno
push
pusha
pop
add
dec
push
ficoms
pop
mov
sarl
fsubs
lret
arpl
jmp
scas
jbe
jle
cmpl
push
arpl
shlb
adc
loope
insb
xchg
mov
cmp
clc
or
std
or
xor
aad
fmull
pop
out
cld
mov
push
jmp
mov
imulb
pop
lock
jl
aad
leave
dec
fisubl
pop
dec
inc
fildll
mov
aam
add
adc
xchg
test
sbb
xor
nop
mov
fldenv
inc
jge
push
cwtl
adc
cmp
adc
dec
sbb
cmpsl
push
mov
push
stos
mov
xor
xor
out
cmp
cmp
loop
sti
mov
gs
out
and
xor
sub
pop
sbb
test
mov
gs
pop
or
js
push
mov
into
iret
push
sub
je
xchg
adc
mov
adc
cmp
push
pop
mov
adc
loopne
or
sub
add
ss
push
and
jle
xchg
outsl
add
adc
xchg
mov
test
mov
insb
pop
and
xchg
in
pop
sti
test
push
xor
cmp
xchg
jne
sub
pushf
das
inc
and
movl
inc
insl
ds
pop
jns
mov
fsubl
ja
add
test
std
and
loopne
call
pop
xchg
int
ret
mov
sub
sub
stos
fsub
sti
pusha
mov
pusha
mull
fildll
push
dec
fwait
adc
aas
outsb
jp
mov
mov
jg
or
out
iret
add
dec
aas
fistpl
in
scas
dec
pop
enter
push
sbb
inc
xlat
xorb
xchg
arpl
roll
repnz
or
sbb
out
add
xor
movsl
and
and
sub
pop
mov
dec
fisttps
cmp
mov
add
jl
mov
lcall
scas
movl
rclb
push
push
cmp
and
aam
push
rorb
jo
out
ja
jnp
movsb
or
push
pop
mov
test
xchg
mov
repz
sbb
enter
in
sbb
xor
sbb
jecxz
jne
mov
inc
in
push
sbb
mov
mov
aaa
and
lret
mov
mov
add
mov
repnz
clc
ss
jmp
outsl
xchg
adc
clc
push
out
xor
cmpsl
sbb
mov
iret
adc
hlt
pop
data16
data16
adc
cld
call
test
lea
mov
adc
and
adc
testl
stos
ja
and
es
ret
mov
cmpsb
lea
aas
fisubl
sub
fwait
inc
and
cwtl
test
xor
rol
sub
shll
popf
daa
jo
mov
fisubs
sti
orl
scas
test
push
or
adc
xchg
jnp
hlt
fcompl
xor
mov
nop
stos
dec
dec
lret
push
aad
add
sbb
scas
and
jmp
cltd
icebp
mov
or
fildll
mov
xlat
lods
push
aad
mov
and
lock
bound
jg
fisttpll
pop
cmp
adc
shll
cmp
adc
push
sbb
rcr
mov
ret
jl
fisubrl
mov
jmp
sub
dec
push
ja
push
idiv
cmp
xor
ja
cld
clc
push
idivb
inc
pop
inc
push
push
bound
mov
mov
enter
shl
mov
or
sbb
rorb
mov
jno
push
divb
adc
out
mov
adc
mov
ja
sub
mov
cmpsl
adc
jg
outsl
jecxz
enter
gs
mov
inc
cmp
bound
notl
add
inc
dec
sbb
jg
fwait
inc
jl
mov
sbb
out
je
inc
hlt
push
mov
cmp
ficoml
sub
cmp
mov
and
sub
fwait
jl
enter
fstps
hlt
movsb
je
arpl
mov
cli
jge
sub
arpl
mov
fdivp
insl
stos
pushf
fwait
or
sub
mov
inc
jp
sub
cli
adc
std
sbb
add
iret
js
lahf
aam
addr16
imul
loope
pop
inc
cmpsb
hlt
loopne
pop
mov
rolb
aad
adc
xor
or
lea
stos
loope
mov
adc
outsb
bnd
stos
int
pop
out
cmp
in
adc
shr
fisubrs
push
mov
adc
daa
ret
xor
popa
lock
cmp
mov
fstps
xor
movsb
int3
inc
sub
imul
ret
lret
std
jno
in
add
xlat
jno
pop
jo
lret
iret
lods
into
lahf
jg
cltd
out
inc
mov
ret
popf
push
add
inc
inc
mov
mov
and
and
jecxz
aas
cmpsb
pop
mov
movsb
push
push
dec
mov
jle
xor
cli
or
hlt
pop
pop
inc
dec
push
loop
jle
push
andl
cmpsl
test
testl
or
sub
push
test
jbe
mov
push
mov
push
fucomp
push
xchg
icebp
js
adc
sbb
andps
jmp
es
stos
in
pop
jmp
and
packsswb
mov
pop
push
xchg
scas
stc
shrl
cmp
push
push
add
cs
popf
jae
add
cs
fsubs
lret
fdivrs
lcall
dec
jmp
xor
pusha
mov
dec
adc
sbb
jmp
in
inc
subb
das
daa
enter
fisubrs
les
pop
add
jnp
stos
rclb
adc
jge
insb
sbb
or
sti
les
dec
xchg
xchg
dec
xor
xor
push
mov
mov
aam
xchg
and
xor
std
adc
pushf
jp
std
xchg
adc
mov
mov
outsl
lret
xlat
lods
out
sbb
movsb
mov
mov
push
divb
xchg
dec
dec
add
test
imul
pop
dec
sbb
test
mov
xchg
inc
repz
ret
cmp
out
mov
in
aas
xchg
iret
ljmp
xchg
adc
fucomi
into
pusha
aas
js
imul
gs
in
stos
jp
subb
out
push
inc
and
repz
pop
mov
outsb
add
add
mov
outsb
dec
das
cmp
mov
pusha
loop
cmpsl
out
or
rcrb
sbbb
sbb
inc
cmp
imul
inc
adc
jmp
cmp
imul
in
out
cmc
mov
or
std
add
stc
dec
push
fdivrs
adc
mov
mov
ds
cli
sub
mov
pop
or
lods
in
in
in
cli
add
jb
cs
inc
outsl
xlat
and
out
xchg
call
in
enter
insb
sub
mov
fsts
push
fisttpll
mov
jae
mov
push
jnp
push
mov
jo
add
les
insb
pop
mov
or
icebp
es
arpl
pop
ret
aad
sbb
xor
popf
jle
out
js
jp
pop
bound
xor
divb
gs
mov
or
push
jl
clc
mov
aaa
inc
sub
push
ljmp
inc
xlat
mov
mov
xor
in
and
icebp
mov
test
insb
fwait
testl
mov
jle
jbe
add
pop
sub
mov
lahf
out
cltd
cmpsl
mov
pushf
shrb
arpl
mov
popa
fnstcw
push
xchg
arpl
pushl
xchg
loop
jp
popa
mov
jne
sub
testl
loop
out
sub
and
adc
pop
or
jne
inc
jecxz
adc
jae
lea
icebp
test
xchg
jb
lahf
cmpsb
lret
ret
pop
into
mov
or
and
inc
fnstenv
cmc
and
das
push
stos
or
scas
loope
movsb
pushf
jo
into
movsl
sub
jmp
inc
xchg
inc
imull
int
aaa
push
and
leave
and
xor
andl
and
cld
inc
mov
sub
fisttps
int3
xor
mov
cmp
mov
sub
jne
loopne
lret
push
pop
sbbb
push
enter
dec
pushf
mov
cmpsb
push
push
aaa
addr16
or
inc
call
dec
or
xor
sub
ss
repz
mov
jne
test
adc
mov
push
cmp
xchg
mov
icebp
pusha
lcall
xchg
fists
xchg
loop
mov
add
xchg
lret
inc
sarb
clc
pop
add
cmpl
ret
mov
sahf
scas
rorl
loopne
sub
arpl
inc
dec
mov
push
repz
jnp
inc
outsb
add
push
and
sbb
addl
fisubs
ret
sub
cwtl
cltd
xchg
jmp
adc
dec
push
enter
xor
hlt
mov
push
push
xor
inc
jo
mov
cmovb
xchg
movsl
jae
icebp
stos
addb
dec
jp
mov
and
testl
mov
mov
mov
in
mov
jecxz
push
std
daa
sub
popf
xor
xchg
pop
mov
and
cmpsb
and
sti
xor
cmp
push
into
repnz
pop
lea
add
repnz
ret
test
dec
cli
or
mov
inc
ljmp
mov
cmp
incb
les
mov
cld
jp
movsl
pop
lcall
cwtl
push
adc
xchg
push
clc
add
mov
clc
adc
xor
aaa
in
fstps
es
push
inc
movsl
cltd
clc
in
pop
loop
cmp
cmp
xchg
push
cmp
pushf
dec
or
gs
adc
push
cmpsl
in
lret
fimull
inc
addr16
adc
pop
pop
hlt
adc
or
jle
jb
fnsave
sub
lret
and
movsl
adc
jl
mov
outsl
dec
sbb
lods
mov
dec
pusha
mov
cmp
or
clc
jo
add
daa
inc
out
orb
mov
push
jmp
mov
cwtl
lret
mov
xchg
xchg
jmp
negb
sub
out
mov
or
lds
sti
notl
jecxz
sbb
xchg
cmp
push
xor
jle
jnp
dec
adc
jmp
jb
testb
dec
pop
sbb
pop
andb
inc
xor
notl
xorl
inc
ljmp
inc
jge
push
dec
xor
and
fdivl
out
arpl
loopne
mov
pushf
stc
inc
scas
adc
cmp
push
add
mov
pop
loope
lock
ret
pop
aaa
xchg
mov
sub
cwtl
lds
push
movsl
xchg
xchg
or
in
roll
xor
aam
xlat
mov
jg
mov
mov
cmp
test
cmp
jmp
push
mov
clc
pop
cmp
ds
cmc
dec
les
inc
fisubrl
sub
push
fs
jo
jmp
int3
jbe
xchg
dec
and
fcmovne
xchg
mov
and
mov
lahf
jg
push
xchg
dec
clc
sbb
lds
cmp
xchg
xchg
cli
or
cmp
into
cmpb
js
dec
aaa
mov
int3
ljmp
je
dec
mov
arpl
and
in
or
push
or
ficomps
cmp
mov
push
sbb
insl
mov
mov
and
jnp
ds
cwtl
imul
push
mov
js
and
xor
sti
or
fistpl
pop
pop
lcall
adc
ljmp
ficoml
mov
and
in
and
clc
dec
imul
dec
fildl
or
jmp
popf
jmp
push
pop
mov
andb
xor
shll
popa
cmp
sbb
andb
rclb
aaa
xor
xchg
dec
addr16
jp
xchg
push
add
dec
cmpb
mov
cwtl
clc
mov
test
mov
or
push
pop
pop
fimull
imul
sti
fisubl
notb
xor
xchg
mov
cmpsl
push
jae
mov
jecxz
idivb
xchg
mov
in
adc
ja
or
mov
lock
push
xlat
ret
sub
lea
xor
or
dec
add
adcb
cmp
out
add
jb
das
xlat
dec
jb
push
cmp
xchg
push
jle
cmp
push
lods
push
inc
xchg
mov
xor
cmpl
fbld
mov
ss
adc
in
add
pop
and
aam
into
cmc
in
xor
and
aad
adc
loopne
inc
int
out
out
test
imul
or
lea
mov
mov
jb
cmc
scas
sti
loopne
repnz
mov
jb
cmpsb
mov
mov
sub
or
cmp
and
push
mov
push
enter
mov
daa
jbe
push
imul
daa
es
out
cmpsb
jb
ljmp
push
aad
dec
call
push
jmp
shlb
mov
push
test
or
xchg
mov
adc
sbb
pop
adc
lock
push
push
dec
stc
cmc
jl
mov
aaa
nop
adc
xor
lods
lret
xchg
pop
fxch
pop
pop
xor
negl
pop
sbb
movb
lret
adc
cmp
xchg
adc
and
mov
push
or
and
dec
push
pushf
mov
cmpsl
lds
cmp
xchg
fsub
adc
sbb
hlt
in
call
fwait
cwtl
cmp
mov
dec
movsb
mov
or
sub
mov
gs
in
test
push
ja
dec
sub
push
lds
fwait
movsb
lahf
pop
inc
test
jl
jmp
ds
dec
adc
jae
pop
loope
data16
ljmp
into
rorl
inc
lock
lock
out
loop
dec
push
cmpsb
frstor
inc
jge
xlat
rcrl
insb
or
or
outsl
inc
lahf
mov
or
cmp
lds
or
push
xchg
sbb
addr16
cld
in
imul
mov
fmul
lods
popl
push
js
andb
pop
loope
outsl
cmp
imul
cmp
add
pop
add
sti
mov
xorl
cmp
mov
xchg
mov
dec
dec
out
popf
pop
mov
mov
lea
aas
mov
sbb
fcoml
outsl
mov
push
adc
inc
mov
jg
push
xchg
or
inc
stc
lret
fdivrl
jns
or
loopne
sahf
cld
xor
mov
lock
shrb
jnp
push
call
lock
push
lea
or
or
mov
cmp
scas
out
cmpsl
push
pop
cmp
mov
or
loope
mov
or
jno
shll
xor
jmp
mov
cli
jg
clc
add
lods
adc
test
in
rcrb
xorb
pushl
pop
jo
mov
ficompl
or
push
ds
cmp
gs
rclb
jl
jbe
je
fwait
rorb
push
mov
adcl
fisubrs
lds
mov
jnp
push
dec
outsb
rcrb
in
mov
fxam
popf
pop
mov
push
pop
notl
adc
mov
stos
js
in
imul
mov
dec
popa
adc
jp
or
jmp
ja
lock
movsb
jbe
inc
andl
add
mov
lds
xor
push
jnp
xchg
dec
add
dec
cmpl
aas
mov
icebp
jbe
shll
jae
loopne
cmp
movsl
xchg
or
in
adc
xor
jecxz
jg
add
out
aam
ljmp
mov
and
xor
push
ds
jmp
jbe
xchg
aad
lods
mov
jp
in
and
dec
outsb
cmpb
in
mov
dec
lret
pop
clc
insb
adcb
js
jmp
fadds
xchg
mov
inc
sub
hlt
call
test
inc
fsubrs
xchg
insl
mov
lds
add
jb,pt
xchg
xor
push
subb
mov
pop
movsb
pop
xchg
sti
fiaddl
xchg
jo
scas
adcb
dec
sbb
jp
mov
sbb
int3
sti
hlt
out
sbb
dec
rcl
mov
cmp
xor
pop
je
aad
das
or
mov
fcomps
cmp
stos
sbb
out
popf
iret
fwait
push
push
dec
divl
sub
sub
inc
mov
jo
lret
loopne
sarl
test
mov
or
add
cmp
push
loop
sbb
std
mov
repz
movswl
mov
hlt
cmp
call
push
and
xchg
mov
push
mov
inc
negb
push
mov
test
insb
ret
lret
or
popa
sbb
pusha
jecxz
inc
xchg
aaa
jbe
or
pop
mov
mov
in
iret
pop
adc
lods
push
jnp
xchg
adc
repz
fcmovnu
icebp
fadds
adc
stos
cmp
lea
int3
cmpl
xchg
mov
cmp
adc
push
add
fcompl
mov
sub
or
repnz
mov
int3
push
out
jae
inc
je
call
iret
lds
or
ss
xor
out
dec
mov
das
xorl
retw
jg
or
aad
jbe
outsl
inc
mov
in
stos
xchg
inc
xlat
cltd
mov
dec
je
adc
sbb
push
and
xor
push
stos
pop
aad
loope
or
ds
movsl
lret
shll
or
fsubl
in
and
or
sub
mov
xchg
repz
mov
jns
add
inc
rcl
pop
xchg
daa
inc
int3
out
push
and
fs
test
aad
push
aam
jb
or
ret
mov
xchg
and
sti
xchg
push
movl
int3
in
sub
daa
jge
scas
mov
stc
out
ljmp
in
xor
pop
movsb
inc
xchg
in
inc
dec
mov
hlt
lock
out
jl
fisubrs
jl
clc
out
push
mov
add
fiaddl
fistps
dec
out
dec
mov
push
addr16
sub
stos
cmc
mov
clc
rol
mov
xor
pop
fists
and
xchg
stc
fcompl
adc
add
sti
pop
xor
outsb
pop
lret
sti
into
pushf
fisttpl
push
cmpsl
sub
in
mov
imul
cmp
scas
dec
lret
dec
mov
test
pop
mov
add
xchg
into
test
add
gs
sbb
inc
or
and
movsl
mov
ja
sub
shll
fildll
pop
enter
insl
shll
lcall
sub
xchg
hlt
mov
lea
lea
dec
enter
adcb
pop
enter
adc
lret
mov
jecxz
dec
dec
je
ret
ljmp
int
lcall
adc
xchg
and
filds
das
pop
sub
outsl
dec
adc
outsb
pop
cmp
push
mov
cmp
loope
decl
mov
jno
push
adc
in
cmpsb
roll
mov
lds
xchg
mov
dec
add
sbbb
or
fisubl
test
adc
jl
dec
enter
out
ja
mov
xchg
mov
ja
mov
xor
sub
scas
notb
jno
cmp
jae
jmp
andb
mov
addr16
cmp
lods
inc
mov
jae
daa
jle
xchg
mov
fs
and
xchg
cmp
push
icebp
shll
adc
xor
aam
lods
pop
mov
call
and
aam
pop
iret
negl
loope
push
shr
jg
ja
rorl
cmp
mov
mov
add
sti
mov
and
lret
lock
popf
les
shrb
aam
inc
mov
add
xor
stc
cmpb
in
add
xlat
sub
dec
sbb
andl
inc
fcompl
xor
jle
lcall
test
xchg
hlt
dec
in
mov
popa
pop
rorb
incb
in
mov
lret
cmp
arpl
in
push
pop
les
sub
xchg
dec
imul
pusha
enter
xor
adc
add
aam
jle
cmpsb
dec
adc
jl
xor
xchg
cmp
add
ret
push
pop
fcompl
xor
loopne
xchg
sti
or
or
push
cli
test
cmpsl
hlt
out
mov
and
dec
ja
xor
xchg
mov
andl
and
idiv
test
and
dec
loopne
xchg
or
cmp
cmpl
ja
mov
fimuls
mov
sbb
xlat
xchg
fwait
xor
test
mov
imull
inc
dec
std
xchg
mov
sbbl
cmp
jns
mov
xchg
aas
imul
xor
lods
fxch
cltd
xchg
sub
test
mov
std
sub
scas
cwtl
lea
add
aad
dec
andl
es
mov
leave
pop
xchg
jb
call
sahf
cmp
push
pop
mov
out
sbb
mov
fldcw
ss
fstps
movsb
cmp
xor
movsb
adc
push
clc
add
xchg
lods
cmp
mov
add
in
pop
sbb
es
pop
sub
sbb
adc
cmp
pop
out
scas
ss
into
ret
and
ds
push
xchg
outsl
inc
fildll
cs
pusha
and
add
les
xor
cli
xor
loope
aaa
jmp
add
mov
xor
mov
aad
outsb
and
sub
mov
add
jle
dec
sub
cmp
fxtract
mov
xchg
xchg
sub
and
add
out
mov
mov
mov
sarl
mov
or
rorl
loopne
popf
inc
pandn
xlat
and
xchg
pop
dec
pop
sbb
and
and
mov
mov
inc
and
and
pause
int
popf
mov
cwtl
pop
jnp
lret
adc
jne
sahf
out
push
cmp
pop
mov
inc
cmp
mov
fnstsw
loopne
ja
test
imul
aas
pop
sub
adc
jle
jg
mull
pop
pushf
xchg
xchg
inc
mov
and
or
flds
mov
inc
cmc
aas
outsl
movsl
mov
cltd
cmp
aam
call
xchg
pushf
dec
movsl
and
aas
add
dec
mov
pop
out
jnp
rcrl
inc
pop
icebp
cli
inc
or
addr16
sbb
xchg
pop
dec
xchg
push
cmp
in
orl
inc
int3
xchg
and
out
iret
jp
pop
fs
push
call
mov
insb
xor
sub
push
adc
stos
es
sub
into
sub
sbb
clc
jge
loopne
add
xchg
pusha
inc
negb
pop
flds
fsubrs
mov
aas
dec
push
in
dec
fildl
mov
xlat
mov
cmpsl
in
dec
add
jmp
mov
pop
stc
lock
push
fwait
bound
stos
jno
or
mov
shll
push
hlt
cmp
sbb
adc
lock
push
lods
repnz
lods
test
lds
scas
or
push
mov
mov
jb
insb
pop
mov
rolb
arpl
jmp
bnd
out
outsb
adc
sub
fdivl
mov
dec
in
push
idiv
shrl
jbe
sahf
icebp
inc
mov
mov
dec
pop
popf
out
jae
add
jne
ja
jmp
mov
sub
xor
push
and
stos
je
jbe
push
popf
std
data16
popa
lds
pop
adc
gs
push
fwait
lret
mov
mov
addr16
inc
enter
test
test
je
aas
loopne
mov
or
mov
gs
xchg
adc
ret
jnp
dec
aam
xor
out
int3
xchg
jmp
inc
test
adc
repnz
les
xchg
mov
lret
rclb
add
mov
cmpsl
mov
or
pop
xor
dec
cmp
cld
dec
and
insl
fdivs
insb
fldcw
jmp
sub
add
rcr
mov
in
ss
out
pop
sbb
cmpsb
iret
std
pusha
cmp
ja
sub
stos
cmp
adc
lret
out
ret
fxam
popa
mov
jg
inc
mov
cld
pop
cmp
adc
jno
aam
jge
mov
lock
xor
lds
cmp
bnd
add
das
pop
push
jge
test
sahf
cli
iret
fmuls
push
pop
scas
xor
popa
lods
iret
add
xor
and
xchg
sbb
pop
cmp
popf
push
cltd
gs
mov
pusha
xchg
rcl
cmp
notl
jecxz
outsl
outsb
xor
xor
test
push
mov
mov
cs
jg
mov
aaa
rorb
test
mov
sbbb
lds
in
jno
xchg
fbstp
dec
cli
aaa
xchg
iret
add
push
hlt
hlt
dec
or
xchg
aam
imul
mov
dec
dec
add
fiaddl
fcmovnu
cmc
xchg
jp
lods
add
mov
les
jae
push
or
mov
mov
mov
pushf
int
test
test
inc
lds
mov
xchg
or
hlt
inc
out
mov
pop
pop
add
inc
lahf
sub
pslld
gs
add
ss
data16
mov
adc
icebp
mov
outsl
fildl
fcompl
mov
or
mov
lret
sub
fwait
jbe
rcrb
ljmp
or
shl
insb
int
mov
cmpsb
xchg
sub
sbb
scas
cmc
mov
jno
sub
pop
aam
or
int
jns
neg
mov
mov
lret
or
push
pop
pushf
mov
iret
add
xchg
cmp
cltd
xor
pop
mov
into
into
pop
sti
cld
data16
or
outsl
adc
mov
cmpsl
shlb
inc
sub
fchs
rcrl
push
mov
sahf
and
push
fdiv
xchg
int3
mov
push
aas
movb
mov
fists
cmp
push
cmp
mov
jl
jge
push
daa
mov
dec
mov
add
addb
mov
lods
pop
sbb
jns
cmp
or
cmp
and
sub
sub
mov
inc
mov
jle
aam
mov
push
or
xlat
lret
inc
pusha
lret
mov
jnp
mov
mov
mov
cmpsb
mov
mov
push
aam
es
or
xchg
es
ret
mov
pop
int3
enter
adc
dec
mov
add
xchg
mov
sbb
push
mov
lret
jbe
cmp
sbb
lods
mov
je
dec
add
dec
or
xchg
sub
test
in
shl
dec
inc
cmp
popf
mov
insl
cmp
std
clts
sbb
imul
dec
mov
mov
out
popa
adc
sub
push
cmp
aas
negb
mull
sahf
sahf
ds
sub
adc
imul
movsb
daa
push
movsb
sahf
das
pop
xchg
in
xchg
xor
sub
push
es
pop
xchg
pop
in
pop
or
fbld
dec
jmp
out
push
mov
inc
jle
imul
sbb
popa
or
or
ss
outsl
jp
dec
or
subl
pop
movsb
push
and
pop
mov
addr16
jno
imul
aaa
sahf
mov
sub
sti
ret
adc
push
call
jae
or
pop
inc
lahf
sub
gs
pop
in
add
not
stos
inc
repz
jno
dec
je
pop
xor
push
jl
cmp
into
mov
into
and
or
insb
sti
test
add
popl
sbbb
in
int3
cwtl
pop
inc
daa
dec
xchg
mov
inc
addr16
add
ljmp
push
dec
cmp
fptan
xor
cld
mov
sub
xorb
push
adc
mov
sbb
pop
sub
int
bnd
push
in
and
cmp
pop
scas
lret
js
jbe
cltd
xsaveopt
jae
insl
ret
jnp
iret
sbb
dec
mov
mov
in
jle
adc
inc
and
xchg
addr16
fldl
and
inc
or
loop
int
cmpsl
pop
pop
sahf
dec
xchg
add
gs
lock
and
leave
mov
jno
dec
out
mov
call
popf
jp
loopne
mov
pop
sub
cmp
popf
xchg
sbb
je
xchg
sahf
movsl
daa
insb
cli
popf
test
shrl
loope
lret
xchg
xchg
mov
je
lock
rorl
jmp
inc
out
lcall
xchg
push
mov
insb
and
sbb
push
inc
and
movsl
loop
cwtl
dec
stos
decb
cmpl
add
dec
push
std
mov
int
das
in
mov
xor
imul
jmp
mov
dec
sub
roll
adc
ss
push
lea
ja
sub
push
dec
fcompl
and
rol
insb
push
outsl
mov
mov
inc
cmp
add
sub
es
or
xchg
jp
xchg
ds
mov
stos
bound
mov
fiadds
mov
xchg
pop
aam
cmpsb
adc
rol
enter
jg
gs
cmp
add
imul
sub
movlhps
cmpsl
mov
movb
adc
jl
ss
cli
sbb
jmp
xchg
xchg
addr16
push
dec
pusha
cmp
aaa
dec
xchg
jb
push
repz
lods
xchg
mov
or
or
jecxz
loopne
lcall
bound
sbb
sbb
cltd
mulb
daa
and
daa
and
inc
jae
pop
pop
int3
imul
mov
jnp
repz
xor
lods
filds
jecxz
scas
pop
cmpsb
dec
xchg
mov
or
push
rcrl
sub
jge
dec
lds
xor
sbb
inc
in
jmp
imul
xor
scas
mov
aas
dec
pop
arpl
ljmp
jle
inc
bound
movsb
aam
push
out
push
xchg
mov
and
jb
sbb
dec
mov
add
cmp
addr16
sub
push
in
xor
test
jae
ficoml
int3
add
and
push
inc
ret
test
je
push
and
jns
cmp
aad
xchg
pusha
mov
sahf
int3
subl
mov
and
fsubs
insl
dec
cli
xchg
mov
add
sub
adcb
rorl
decb
mov
mov
mov
and
das
enter
mov
pop
jb
xchg
pop
cld
orb
rcrb
fbstp
bnd
mov
mov
pop
insl
add
sub
jae
movsb
xchg
stc
mov
mov
test
rcrb
cmp
mov
mov
xor
or
inc
pop
out
adc
adcb
and
hlt
sahf
jmp
push
ja
popf
sbb
cmp
rorl
sar
std
mov
adc
and
fucomip
lcall
movsb
jnp
xlat
xchg
sub
nop
mov
into
int
stos
cmpl
mov
arpl
fisttpll
enter
or
stc
shr
ror
test
mov
xchg
jg
cmp
cmp
cmp
mov
test
mov
inc
push
shl
dec
mov
adc
psadbw
out
sbb
sbb
flds
adc
arpl
lea
jb
repnz
push
bound
pop
imul
lret
jne
ljmp
xorl
call
adc
sbb
cmc
hlt
les
dec
repnz
cmp
roll
out
or
push
jbe
push
mov
call
cmpsl
incb
lea
or
mov
dec
mov
mov
jle
pop
xchg
and
sub
mov
add
imul
xor
pushf
mov
orl
mov
sbb
dec
cli
testl
cmp
xor
xor
fnsave
add
cltd
repnz
mov
add
mov
mov
inc
cmp
mov
ss
imul
sub
imul
inc
and
mov
out
mov
push
fnstcw
add
xchg
fwait
and
cmp
xor
lods
fnstsw
je
out
push
movsl
jge
and
shl
stos
inc
js
lods
insb
addr16
cmovne
dec
inc
mov
mov
or
xor
clc
sub
push
mov
xchg
lret
push
inc
aaa
ss
mov
xchg
jno
mov
ja
push
gs
rclb
mov
jb
jo
fcompl
mov
fcoml
loop
mov
mov
in
mov
test
into
push
jg
pop
das
push
outsb
dec
test
pop
dec
and
xchg
xchg
pop
pop
push
cmp
mov
les
sti
pop
xchg
pop
test
fs
movl
pop
testb
add
push
inc
lahf
inc
inc
jp
push
subb
fistpl
test
cmp
jne
xor
xchg
repz
jmp
dec
push
les
enter
aam
or
pop
cs
test
dec
mov
movsl
dec
test
inc
pop
or
ficompl
rcrw
mov
pop
push
popf
xor
cmp
push
int
jmp
xchg
out
loop
push
xor
addr16
orb
in
lock
sbb
mov
fs
in
in
cmp
jmp
cld
or
adc
jecxz
rcl
into
ss
cmc
ja
out
cmpsl
inc
adc
push
orb
loop
add
add
mov
and
pop
out
jo
push
subb
int
xchg
pop
and
sub
arpl
inc
sub
jns
hlt
cmpsb
dec
dec
aam
rolb
sahf
adc
bound
arpl
fwait
and
neg
mov
cmp
pop
movsl
stos
inc
mov
mov
and
jle
cmp
sar
ss
mov
sub
cmp
pop
and
sti
int
mov
insl
lcall
cmpsl
out
lea
aas
jnp
xchg
mov
sbb
dec
scas
repnz
fdivrs
mov
fistl
dec
jnp
das
or
clc
dec
scas
stc
js
sbb
mov
and
lret
and
or
sbb
and
add
dec
mov
xchg
and
into
mov
pushf
cltd
mov
shrb
psrad
sbb
xchg
inc
cld
cmp
jg
clc
ret
es
dec
scas
jl
stos
ret
dec
movsb
push
repz
dec
adc
inc
xchg
out
shrl
mov
bound
and
mov
jae
inc
push
in
add
lretw
imul
mov
nop
jl
or
rcll
jmp
adc
out
fsubrl
push
test
cltd
or
in
nop
or
and
int3
mov
xchg
mov
sbb
loop
push
jmp
or
cmp
jne
xchg
xchg
push
inc
hlt
jno
leave
test
lods
in
sti
jae
add
mov
enter
fnsave
subb
pop
sub
into
jo
fmuls
jecxz
sub
and
mov
aaa
repnz
dec
mov
inc
rcrb
jne
fldenv
or
xor
or
sahf
daa
jp
fs
mov
mov
movsb
in
mov
test
xchg
sbb
adc
outsb
test
ja
mov
pop
mov
push
addr16
out
xchg
popa
fadds
jo
cmp
xchg
sub
rolb
cmc
addr16
popa
sahf
dec
jmp
xor
mov
rcl
sub
mov
and
lcall
sbb
lods
js
mov
xchg
xor
and
lods
outsl
cmp
jp
and
imul
push
fsubrl
mov
mov
cwtl
pop
dec
push
arpl
out
rcr
pusha
dec
mov
stc
push
inc
inc
cmc
ror
bound
inc
add
xor
rcll
out
add
and
in
jnp
pop
enter
cmp
push
andb
push
je
mul
or
ficoml
cmp
inc
xchg
out
mov
ds
pop
jno
jno
clc
and
movsl
cmc
cmp
mov
add
push
es
mov
sbb
dec
iret
jo
insl
mov
dec
push
cmp
pop
mov
int
sub
sbb
je
cmc
pop
adc
dec
dec
ret
xor
dec
sbb
ss
test
movsl
imul
sbb
in
mov
sbb
and
dec
out
sbb
add
mov
cmp
pusha
add
imul
mov
leave
sub
sbb
das
imul
testl
and
testl
xor
rclb
cmpl
inc
icebp
jge
mov
pop
sbb
pop
out
and
jo
jg
xchg
push
fwait
or
stc
cmc
flds
dec
jb
jo
xor
cmpsb
or
clc
push
mov
cmp
and
call
out
and
push
pop
mov
mull
aaa
leave
and
insb
fbld
sbb
lret
jmp
push
dec
sbb
out
xchg
ljmp
push
jl
nop
inc
shrl
sub
call
mov
or
add
jns
adc
int3
out
jg
inc
sbb
push
je
mov
dec
sub
sbb
xchg
sbb
jo
sti
fwait
imul
cs
jns
or
cmp
mov
sahf
pop
mov
push
jl
inc
fneni(8087
aas
stos
sub
mov
push
pusha
xor
push
pop
mov
lcall
inc
jmp
scas
mov
pop
ret
mov
add
inc
cmp
sbb
xor
mov
int3
mov
inc
sbb
mov
add
pop
and
lods
fisubl
xor
jmp
xor
out
fistl
mov
enter
pop
aad
cmp
push
push
leave
xor
int
les
cmpl
cli
in
sub
mov
rorb
sahf
outsl
jl
das
inc
cld
sbb
inc
jne
mov
movsl
leave
call
sbb
push
fistl
sarb
mov
cld
fimuls
dec
mov
sbb
jb,pn
sub
ds
lret
out
add
xchg
xchg
dec
sbb
inc
scas
sub
iret
fisubl
inc
inc
fld
dec
sbb
adc
or
push
cmpb
and
pusha
popa
ljmp
int
test
lea
dec
push
xchg
adc
std
or
and
and
in
in
test
gs
ss
ljmp
ljmp
xchg
stc
sbbl
clc
dec
inc
fsin
bound
mov
xchg
cs
lret
stos
out
push
fisubl
shlb
jg
scas
movl
dec
mov
or
sub
and
in
cmp
mov
fmuls
push
mov
dec
xchg
add
add
mov
jbe
into
gs
std
ja
lcall
push
sbb
sub
dec
mov
insl
scas
imulb
lret
and
stos
cmpl
push
and
aad
dec
add
and
pop
dec
out
or
pop
push
ret
cltd
jns
sub
sarl
out
cltd
jg
mov
jo
das
sbb
push
lahf
cltd
fisttpll
add
sbb
add
sti
xor
push
je
pop
mov
les
std
mov
dec
xor
out
test
inc
bound
gs
mov
or
pop
test
repnz
mov
dec
mov
rcrb
xchg
cmp
inc
popa
sti
jge
add
jmp
jle
test
ret
xchg
lret
xor
sbb
add
rorl
aad
in
pop
mov
insb
cwtl
mov
loop
pushf
fs
xchg
in
pop
lods
sbb
inc
adc
lods
and
loope
fisttpll
movsl
adc
cmpsl
dec
jae
jp
or
pop
xchg
movsl
and
xor
test
sti
pop
or
xor
mov
ljmp
xlat
arpl
or
adc
dec
mov
cmp
jo
in
add
xlat
push
xor
ret
ds
out
ss
mov
loope
or
enter
fiaddl
xor
movsb
imul
cmp
dec
push
aam
insb
xor
fldl
frstpm(287
inc
xchg
jo
stc
das
aam
ljmp
out
shr
pop
mov
faddl
jl
mov
push
cmp
cmc
call
std
mov
je
out
sbb
push
mov
xchg
add
cmp
mov
sbb
fidivrl
and
popa
pop
mov
test
jo
bound
pop
cmp
loop
sbb
ljmp
add
outsb
or
dec
mov
enter
pop
mov
repz
fstpt
test
lahf
push
adc
or
push
imul
sar
mov
cmp
es
out
jp
mov
addr16
adc
xchg
lret
movsl
ret
insl
inc
out
out
frstor
pop
sub
in
xor
sahf
add
filds
addl
rcrb
xchg
add
int3
mov
out
jp
add
lock
fwait
roll
fbstp
lcall
mov
popa
iret
and
cvttps2pi
imul
push
ror
and
or
mov
xchg
pop
push
mov
jle
xchg
repnz
cmp
and
aas
xchg
fwait
add
stos
cld
dec
dec
mov
mov
mov
jb
push
pop
dec
pop
and
imull
add
dec
push
imul
inc
xchg
push
and
sub
pop
in
scas
or
and
into
out
add
push
fwait
or
inc
mov
scas
add
cmp
sub
mov
icebp
fwait
imul
push
repz
insb
lahf
inc
lret
out
xor
scas
cld
or
adc
mov
rcrl
jo
repnz
cmpsb
jmp
sbb
jecxz
mov
and
sub
fmull
ljmp
pop
movsl
ss
jno
or
sti
mov
ret
ds
push
push
andl
sub
bound
repnz
mov
pop
sbbl
inc
outsl
add
jno
dec
or
push
test
rorb
aad
and
cmp
das
and
data16
sbb
cmp
pop
push
adc
repnz
mov
sub
inc
stc
push
jbe
mov
fistps
cmp
sub
dec
cmp
rcll
cmp
xor
mov
push
popa
or
dec
inc
sbb
jmp
mov
popf
xchg
push
inc
les
enter
je
mov
lret
adc
lds
xchg
jl
imul
xchg
imul
xor
fsubrp
inc
into
ret
fwait
and
jle
xor
aaa
mov
mov
sbb
loopne
xchg
push
dec
lock
xchg
fs
mov
enter
jnp
or
cwtl
pop
xchg
aas
inc
mov
xlat
pop
mov
push
lret
in
cmc
insl
test
cwtl
add
xchg
push
cmpsl
jge
mov
xchg
inc
cld
or
in
adc
sbb
jge
mov
inc
xor
lods
arpl
mov
jmp
and
daa
push
xor
cltd
lods
jns
or
dec
push
or
inc
mov
add
loope
in
push
cs
sbb
mov
ret
ds
enter
dec
cmp
jge
arpl
pop
mov
mov
movsb
jnp
sbb
in
pop
inc
std
cwtl
pop
fcoms
fbld
cltd
or
sub
faddl
push
push
dec
pop
stc
adc
jae
sahf
jae
push
xchg
test
pusha
push
test
jnp
sbb
push
sub
fimuls
mov
sbb
popa
xor
aam
add
push
mov
mov
stos
xchg
sarl
ret
jp
aaa
repz
cmc
cmp
mov
pop
jns
jmp
gs
mull
shrb
adc
sbb
outsl
mov
insl
dec
inc
rcrb
push
push
and
pop
subl
repnz
mov
cmpsl
sarl
jnp
outsb
inc
aaa
mov
popf
int
mov
scas
dec
mov
popa
jne
mov
into
xchg
arpl
jle
int3
repz
push
xchg
aaa
outsl
push
cli
pop
fwait
jo
and
pop
daa
out
adc
jo
mov
push
divl
addr16
jl
jae
push
aam
push
ret
mov
jg
adc
shl
les
jge
xchg
aas
dec
pop
lods
fstl
cltd
xchg
sbb
and
pushf
dec
cmp
adc
pop
pop
xchg
notl
movl
mov
pop
test
jno
fsubrl
mov
ret
sahf
notb
imul
repnz
lds
hlt
push
arpl
rcr
in
out
je
test
in
sub
loop
jno
lahf
push
push
in
xchg
daa
jl
or
cmc
cs
mov
sub
into
mov
into
xchg
pop
dec
add
cmc
leave
mov
xchg
inc
jbe
xor
enter
std
jns
je
out
leave
andb
dec
sbb
xor
or
fcmovnbe
xchg
mov
and
and
bound
mov
test
cmp
mov
and
jg
insb
mov
jp
xor
mov
mov
call
mov
jb
mov
sbb
out
jns
cmp
xor
rol
push
stc
clc
test
andnps
loope
pop
stc
stc
fmuls
add
dec
out
bound
jne
jno
jmp
xor
xor
inc
addr16
push
clc
mov
lock
xor
sbbl
arpl
xor
stos
push
rcl
xchg
hlt
out
and
js
xchg
xchg
mov
pop
mov
mov
xchg
or
lcall
push
jmp
mov
add
dec
insl
jne
fwait
popa
test
xchg
inc
test
mov
rorb
or
popa
rcrb
inc
cmp
gs
out
sti
mov
fsubs
xchg
push
xchg
mov
blcfill
ljmp
jmp
lock
mov
or
scas
ret
add
xchg
shll
lods
mov
mov
popl
ret
mov
sti
xchg
inc
jb
stos
cmp
jbe
popf
outsb
mov
sub
out
insb
jmp
xchg
cmc
push
into
lahf
mov
xor
xlat
dec
out
and
cmp
sti
pusha
mov
stos
imull
dec
outsl
out
test
xchg
jge
and
xor
jge
cltd
mov
pop
addb
lahf
imul
pop
aam
es
sbb
rcrb
push
xor
shr
dec
test
mov
addl
fcomi
into
lea
mov
cmp
js
add
jns
mov
dec
out
into
lock
cmpsl
popl
or
fisttpl
inc
fisubrs
loope
mov
out
loopne
xchg
fs
dec
jge
mov
scas
outsl
pop
out
cmp
lock
cmpsl
dec
std
push
movsb
aas
jp
jge
and
stos
incb
mov
test
sub
scas
cmc
int3
push
xor
jmp
ja
pop
dec
xchg
push
cmp
mov
add
aad
inc
adc
mov
sbb
and
and
mov
pop
gs
push
fiaddl
popf
and
xchg
sbb
and
fucomip
and
pop
outsl
sahf
cmp
stos
xchg
aad
jns
and
ja
fcomp
rorl
sub
sahf
in
dec
int
xchg
pop
sbb
nop
aaa
lds
ficoms
xor
add
mov
add
adc
pop
xchg
lret
fdivs
jbe
aaa
mov
push
pop
outsl
pop
scas
jbe
cwtl
in
push
xchg
push
lret
std
inc
fsubrl
leave
pop
push
lea
mov
dec
hlt
mov
int
mov
sub
stc
fisttpll
repnz
sbb
add
arpl
mov
inc
loopne
xor
cmp
xor
cmp
in
push
sub
lret
popf
push
dec
daa
push
cmpsl
into
mov
inc
xchg
in
ret
lcall
jb
jbe
jle
cli
xchg
aad
test
xor
lods
xchg
xchg
mov
fcoms
popf
sbb
repnz
xlat
add
es
push
mov
test
mov
sarl
xchg
mov
dec
push
dec
sti
cmp
pop
sbb
andb
mov
sbb
mov
xor
mov
inc
cmpsl
inc
or
insb
cwtl
inc
loopne
add
cltd
xor
or
out
xchg
lea
jl
jp
pop
mov
xor
mov
and
daa
inc
scas
in
inc
xchg
mov
mov
imul
mov
ret
push
gs
sub
dec
jo
push
in
add
bnd
in
imulb
bound
mov
mov
les
test
fstl
enter
push
dec
repz
xor
adc
rcrl
std
ficomps
push
ds
in
xchg
js
test
scas
out
outsl
addr16
movb
outsl
mov
pop
cld
mov
loopne
push
mov
adc
jno
out
sub
loopne
mov
stos
aad
dec
lods
mov
dec
loopne
pusha
cmp
mov
xchg
leave
enter
dec
jmp
xlat
das
and
cmpsl
mov
movsb
push
and
xchg
dec
sbb
jb
dec
das
xchg
xor
mov
cmpsl
cmp
xchg
scas
sti
jb
lds
stc
test
adc
out
icebp
into
xchg
adc
shl
sub
mov
xchg
test
clc
push
sub
lret
cltd
jno
je
adc
adcb
cwtl
mov
stc
icebp
lret
shlb
js
stos
ficompl
es
mov
xor
fwait
push
inc
mov
fs
negl
mov
cmp
pop
pop
mov
int
out
repz
and
sbb
sub
mov
stos
mov
lret
cwtl
mov
jg
loop
ss
xor
add
mov
mov
movsl
dec
push
les
popa
jae
ret
jb
adc
or
ja
add
aas
pushf
push
mov
dec
lret
lcall
fadd
in
mov
jge
and
cmpsb
cli
sub
ss
loop
fnstcw
dec
mov
out
pop
sub
adc
xchg
ja
mov
jg
sti
mov
fwait
pop
lahf
sub
mov
loop
mov
mull
sti
imul
pusha
rclb
mov
nop
nop
cltd
jae,pn
sub
sub
pop
or
xor
sbb
push
inc
test
lods
stos
push
mov
rorl
imul
je
imul
jo
xchg
lret
fnstcw
in
adc
insb
or
mov
mov
ds
jb
xchg
mov
and
push
push
cld
push
aas
fadds
dec
cmp
outsb
dec
mov
pop
and
sbb
xlat
imul
inc
xor
negb
sub
xchg
pop
push
and
mov
mov
das
dec
mov
pop
out
or
add
popf
jp
jle
test
hlt
negb
inc
mov
lret
xchg
jmp
in
nop
mov
push
ja
ss
jmp
scas
cld
add
mov
push
imul
adcb
jo
add
jo
test
jae
dec
ljmp
dec
jg
fbld
hlt
bound
inc
inc
out
mov
rcr
in
xchg
rclb
jb
sbb
jbe
and
push
mov
enter
xor
pop
mov
sbb
popf
fidivrs
push
sbb
loopne
aad
adc
das
movsl
inc
pop
ljmp
lods
ljmp
jns
outsb
push
testb
mov
iret
aas
subb
cmc
repz
inc
aam
ds
mov
cmp
test
dec
test
jne
in
sbb
jecxz
lock
pusha
inc
and
sbb
flds
pop
loope
fstpt
mov
inc
mov
push
cmpsb
ds
pop
or
lret
cmp
push
mov
xchg
fsubs
fldl
add
mov
or
hlt
mov
pop
in
mov
dec
mov
shr
mov
jge
insl
and
clc
mov
movsl
loopne
lea
mov
pop
rcll
daa
pop
jecxz
cmp
ja
stc
sub
dec
pop
mov
loopne
mov
and
push
jg
lcall
pop
pop
icebp
lahf
mov
push
sbb
out
push
mov
jmp
mov
in
mov
pop
push
inc
f2xm1
jp
pop
pop
fcompl
mov
enter
les
mov
incl
fisubrs
jnp
jmp
je
in
hlt
and
pop
jg
fbstp
pop
test
pusha
or
xchg
mov
dec
mov
inc
es
add
xor
mov
movsb
icebp
fs
mov
xlat
fiadds
and
jge
push
sub
adc
sub
mov
aas
push
cwtl
jecxz
repz
push
ja
mov
cmpsl
dec
xor
mov
dec
jmp
and
inc
pop
mov
pop
or
sar
test
mov
in
ja
dec
sahf
mov
imul
or
nop
call
sub
jl
aam
sub
xchg
cmp
gs
cmp
aad
xchg
or
mov
test
sbb
push
mov
hlt
jecxz
mov
push
sbb
mov
mov
scas
fdivl
out
les
lock
and
movsb
imul
sub
fldl2e
mov
fisubrs
enter
mov
cmp
dec
dec
iret
loopne
inc
sarb
add
sahf
into
pop
aam
push
cmp
xor
or
sti
mov
xor
fnop
das
out
adc
xor
push
push
cmp
mov
stos
inc
cs
dec
push
jns
test
repnz
aas
inc
aaa
xchg
scas
in
into
sub
in
jb
adc
pop
mov
and
dec
and
dec
lock
cmp
pop
jo
sbb
xor
test
cs
shrl
ret
rol
jbe
add
cmc
ss
outsb
movl
aas
xor
jmp
dec
jnp
fisubs
push
icebp
mov
mov
pop
sar
call
inc
fnstenv
clc
mov
sbb
cwtl
mov
xchg
ja
mov
movsl
and
jne
add
pop
push
fists
fs
lcall
mov
fwait
push
mov
fdivs
out
scas
adc
sahf
cltd
lds
test
xor
fnstsw
inc
sub
imul
pop
aaa
out
das
and
push
lds
frstor
cli
data16
dec
fidivrl
shrl
push
mov
push
dec
push
call
mov
ror
inc
in
jb
add
out
lcall
inc
js
repnz
push
popa
movsl
je
scas
in
adc
pop
pushf
iret
xchg
es
iret
xchg
sbb
in
loopne
pop
repz
jo
popf
jo
les
mov
bound
jle
and
loope
sub
lds
push
outsl
or
add
fisubrs
call
cmp
sbb
in
loop
pop
sbbb
push
inc
jecxz
jns
xor
ja
add
push
fldcw
pop
cmp
push
lods
lcall
fisttps
add
ljmp
sub
xchg
or
js
jl
test
pop
pushf
xchg
and
jne
scas
bound
xchg
outsl
scas
scas
out
cs
leave
xchg
shl
xchg
cmp
adc
mov
jg
mov
mov
mov
adc
cli
jp
es
cltd
shlb
mov
sbb
jg
ljmp
popl
jl
loope
mov
int
fildll
push
xchg
mov
dec
in
inc
dec
insl
cli
stos
lret
flds
xor
loope
mov
cmp
xor
sbb
mov
mov
sub
scas
lods
loop
mov
repz
leave
or
out
jns
push
mov
push
and
sahf
mov
jb
jb
push
pop
cmp
js
rcr
imul
xchg
sbb
out
and
dec
mov
jne
rclb
scas
ds
repz
add
adc
pop
jg
dec
ss
jle
adc
into
lods
dec
cmp
sub
and
pushf
sub
add
xlat
gs
popf
loopw
arpl
dec
cs
aam
aad
rcrl
cmc
divl
and
out
js
sbb
pop
mov
xor
xor
rclb
push
hlt
sbb
xchg
add
addb
aas
pop
sti
add
mov
clc
xor
popf
cmpsb
lret
mov
mov
notb
mov
xor
adc
xchg
sub
mov
jno
and
inc
leave
enter
push
jne
shlb
stos
push
fdivrs
popf
push
mov
xchg
adc
sbb
xor
mov
or
pushf
lea
repz
xchg
mov
mov
ds
addr16
je
in
adc
sbb
flds
stc
push
pop
mov
insl
hlt
nop
rcrb
insb
nop
rolb
mov
jnp
dec
flds
das
sahf
pop
icebp
ss
mov
push
scas
inc
paddd
inc
rclb
leave
idiv
orb
mov
mov
push
xchg
add
ficomps
sti
dec
push
xchg
pop
sub
pop
test
sub
loopne
push
imul
mov
dec
xor
add
lcall
in
xor
xchg
nop
sbb
pushw
cltd
mov
cli
sub
add
xchg
adc
fcmovbe
pushf
stos
in
inc
loopne
inc
jo
out
shll
push
cmp
xchg
cltd
adc
jge
arpl
pop
fistl
jbe
add
dec
int
push
mov
cmp
jp
xchg
push
inc
mov
xlat
jns
arpl
lea
xchg
jg
ret
and
out
lds
nop
out
bound
xchg
fs
or
enter
inc
aas
stc
sub
fwait
insb
inc
aad
rcrb
jno
push
sub
mov
cmp
jne
lcall
dec
sti
out
lret
xchg
fs
popa
std
xchg
jnp
clc
xchg
fbstp
mov
cmp
test
mov
leave
aad
out
addr16
pop
pop
push
sub
cli
into
and
push
dec
mov
and
movsb
pusha
loop
jl
jno
pop
lret
in
push
cli
mov
mov
sub
pop
bound
push
inc
xchg
mov
jg
cmp
or
out
push
mov
outsb
ljmp
addr16
xor
mov
lock
add
loop
icebp
cmp
or
js
fs
xor
or
cmp
arpl
fstpl
shll
gs
cmpsl
cmpl
ret
xchg
inc
stc
xchg
repnz
hlt
mov
jae
sub
pop
loop
jmp
cmpsb
sti
mov
mov
mov
xchg
mov
pusha
sbb
lret
mov
inc
out
fstl
pop
xchg
ds
sbb
fiaddl
scas
sbb
and
pop
sub
sbb
adc
aaa
lods
add
mov
sub
sar
mov
xchg
mov
cld
lahf
lret
cld
stc
mov
mov
fadds
subb
inc
rorb
sub
mov
jne
popa
push
mov
hlt
or
pop
mov
adc
lcall
lods
rorl
loope
out
dec
fs
mov
or
push
sub
jle
rol
es
cs
xchg
rcrb
and
aam
jg
into
fistpl
mov
jno
push
dec
ja
mov
or
and
std
fnsave
xchg
push
mov
shll
dec
shl
cmp
mov
mov
icebp
mov
enter
mov
lods
out
mov
gs
cmpsb
mov
hlt
test
xor
loopne
pop
aad
aaa
in
loop
push
pop
xchg
mov
push
inc
shl
cmp
mov
cli
negl
int
adc
mov
inc
inc
les
outsl
repz
lods
frstor
jmp
fld
out
subl
pusha
lret
repz
mov
fwait
push
test
aam
xchg
sbb
imul
outsl
adc
and
cmp
cmpsb
push
cmp
jo
aaa
out
shrb
imul
mov
jle
inc
xor
in
or
ret
jl
inc
push
dec
shr
sti
mov
and
addr16
lret
push
or
or
fdiv
or
bound
nop
addr16
out
hlt
shll
popf
cmp
inc
mov
push
shl
mov
xchg
jo
xlat
jbe
xlat
mov
in
rol
cmpsb
and
inc
enter
jmp
dec
into
inc
mov
sarb
jae
jno
jns
add
add
mov
cmpsb
pusha
or
push
pop
and
fidivrl
pushf
fsubs
cmpsb
subl
test
xchg
pop
pop
lock
xor
rolb
ss
fcompl
out
or
cwtl
xor
cmp
sub
cs
mov
js
mov
lea
pop
int
sbb
call
xchg
pop
cld
cltd
push
fwait
mov
ljmp
mov
jns
enter
lea
lea
shrb
fs
lods
inc
repz
cmp
cmp
inc
add
data16
movsl
stos
dec
outsb
and
add
xor
int3
test
in
repnz
cmp
mov
add
adc
push
sub
jle
insl
ret
inc
xchg
daa
and
clc
jnp
add
je
push
xor
cmp
add
fwait
mov
aam
repz
mov
sub
rorl
mov
push
xorl
sahf
mov
shll
add
pop
loope
push
add
cmpb
jecxz
jmp
divl
lret
lock
lock
jecxz
data16
mov
or
add
xor
cmp
sahf
pop
xchg
faddl
push
xlat
movsb
adc
mov
mov
cld
mov
dec
jb
leave
mov
and
aam
mov
shrb
cmp
clc
adc
lret
push
lret
xor
add
xor
rorb
repnz
call
mov
pusha
ds
fcmovnbe
insb
cmc
sub
mov
pop
sbb
hlt
inc
push
push
out
mov
std
loope
add
add
popa
test
decb
repz
pop
daa
sbb
ret
loope
lcall
cli
adc
lods
jae
repnz
gs
xor
mov
mov
dec
inc
mov
std
lods
ficomps
shrb
adc
adc
mov
and
mov
ss
mov
mov
loope
addb
inc
loope
cltd
sahf
aad
in
and
mov
fldt
iret
out
jns
int
aas
fmuls
push
inc
cmp
jmp
shld
sahf
mov
sbb
mov
cmp
or
mov
mov
sarl
xchg
mov
arpl
fwait
sbb
xchg
cmp
insb
xchg
adc
lret
xor
or
mov
bound
mov
xchg
adc
test
leave
inc
daa
push
clc
insb
pop
stc
and
sub
push
or
mov
bound
rcrb
sbb
leave
ds
pop
out
js
test
cmpsl
cmc
inc
jo
jl
cltd
adc
test
repnz
shl
call
inc
jp
mov
push
outsl
pop
mov
and
mov
stos
pushf
ljmp
loopne
pop
loop
xchg
mov
mov
mov
insl
jnp
cmpb
roll
adc
sub
push
jmp
mov
addl
mov
inc
dec
scas
test
fiaddl
bound
mov
jnp
es
cmpsb
aaa
int
jns
clc
jp
mov
pushf
les
push
xchg
push
mov
jmp
ja
arpl
shrl
loopne
or
bound
inc
mov
fwait
jb
out
adc
leave
inc
jnp
xor
mov
mov
mov
adc
mov
lahf
jl
movsb
stc
rcrl
loop
test
jae
adc
xor
add
sbb
iret
nop
jnp
mov
movsb
pop
add
pop
aas
test
jecxz
outsl
push
enter
stc
and
enter
mov
popa
pop
adc
out
inc
dec
out
xor
dec
push
out
inc
sub
push
pop
in
ds
jmp
and
sub
ja
pop
cli
hlt
cmp
into
jp
jb
in
jle
xchg
movsb
in
ljmp
inc
sbb
adc
adc
jge
leave
pop
mov
mov
je
in
jb
sub
das
loopew
push
stc
in
scas
stos
lcall
fmuls
sti
lock
es
cs
cmpsl
pop
popl
cmp
add
inc
push
mov
add
sbb
fcoml
dec
mov
jmp
dec
xchg
jmp
data16
push
dec
nop
push
cltd
popa
mov
fidivl
sbb
test
test
xchg
adc
and
cli
imul
lret
fcomps
mov
mulb
clc
mov
mov
mov
or
lea
decl
lea
sub
roll
ljmp
xchg
mov
dec
outsl
or
inc
jo
icebp
repnz
fists
or
insb
fwait
or
xchg
push
mov
std
loopne
rorb
jmp
push
shrb
fsub
mov
jmp
cltd
in
stos
out
cmp
sbb
enter
cmp
xchg
data16
push
ss
jne
in
popa
xor
in
mov
mov
sahf
push
mov
push
sbb
adc
dec
inc
jb
pop
fidivs
dec
xor
adc
inc
xlat
jl
test
dec
mulb
daa
cmp
addl
sar
out
push
pop
push
scas
lret
push
xlat
inc
jne
mov
push
subl
rcr
and
mov
sub
xorb
popa
rcll
jp
xor
jp
inc
dec
js
mov
jle
arpl
jno
loop
sub
cld
inc
jo
add
or
nop
mov
pop
sar
jns
jns
xor
or
leave
ficompl
inc
add
sub
xlat
cmp
inc
pop
je
cmp
movsb
rcr
in
push
test
pop
cmpsl
mov
push
or
and
jmp
adc
pop
repnz
sub
pop
pop
mov
xchg
lret
inc
pop
cmpsl
mov
int3
bound
jnp
ror
mov
dec
je
jnp
in
lret
mov
push
xchg
loopne
mov
icebp
cmovs
sahf
xchg
push
out
test
lret
mov
mov
stos
outsb
loop
es
loope
mov
mov
push
out
and
pusha
ljmp
loopne
testb
and
rclb
scas
lea
je
xchg
cmp
dec
leave
or
aam
ret
addb
push
aas
sbb
adc
inc
jae
ja
and
fcmovb
daa
incl
inc
pop
xchg
push
lcall
and
icebp
xchg
fsubrs
cmp
testl
daa
dec
cmp
xor
popf
lods
cmp
lods
and
cs
push
pop
cmp
inc
call
inc
xchg
sahf
les
add
inc
sbb
pop
inc
xchg
hlt
repz
stc
sti
sub
iret
pop
jge
xor
jl
sbb
sarl
fstl
jp
das
mov
xor
pop
imul
mov
imul
lds
popf
and
adc
jns
cmpsb
jecxz
add
inc
pop
mov
outsb
lods
out
dec
mov
mov
negl
lock
call
or
mov
and
pop
lcall
or
imul
cld
int3
loope
mov
iret
mov
pop
sub
add
mov
jmp
sub
mov
jg
dec
adc
jp
pop
jecxz
cmpsl
or
dec
popa
push
repnz
bound
sub
add
adc
roll
cmp
sahf
iret
pop
out
pop
jno
add
mov
lret
in
test
mov
insb
mov
jge
lods
iret
push
sbb
jmp
mov
hlt
xchg
and
cmp
inc
scas
cmp
mov
cmp
add
ds
subl
neg
cmpsl
or
js
cmc
in
add
ja
pop
add
jno
xlat
mov
inc
inc
push
sub
lods
push
test
movsl
outsl
cmc
fadd
xor
ret
mov
xchg
rcrl
mov
es
lods
sub
int
mov
jne
jbe
sti
adc
xchg
jl
shrb
sub
add
imul
lods
and
ja
push
jmp
test
mov
and
xchg
movsl
lsl
sti
addb
push
sbb
push
in
jge
scas
mov
sbb
popf
dec
out
push
insb
scas
adc
int
fbstp
pop
or
mov
aad
jecxz
jmp
cmp
int3
ljmp
or
jno
sbb
cmp
pop
lahf
bound
and
dec
dec
inc
fimull
push
add
arpl
push
xor
jp
addr16
popa
xchg
out
pop
xchg
gs
and
ds
loope
mov
clc
fcoml
aas
mov
xor
push
loope
mov
stc
pop
jmp
mov
jns
test
mov
xorb
ds
popa
lcall
xchg
push
pop
je
pop
push
mov
mov
sbb
pop
mov
mov
jmp
mov
and
push
arpl
das
and
aaa
mov
sahf
pop
and
hlt
insb
dec
rcrl
in
cmpsb
xchg
stos
lcall
cmp
inc
test
sahf
mov
dec
sub
ficoml
push
mov
adc
ss
mov
xor
sbb
mov
push
add
filds
pop
mov
iret
ja
mov
aad
sbb
scas
pop
iret
mov
aas
fcmovnbe
pop
pop
testl
or
loopne
xchg
push
fidivrs
addr16
loop
mov
jbe
sbb
adc
pop
dec
sbb
pop
int
stos
sub
loope
pushf
pop
add
fcoms
sbb
xor
dec
or
mov
cwtl
movq
lods
mov
inc
test
cmc
repz
es
jno
add
lock
aaa
nop
lahf
dec
xor
das
or
sub
lods
xchg
cmpsl
or
ror
mov
pop
aad
push
jne
cltd
stos
popa
dec
cwtl
cmp
ds
in
adc
dec
mov
mov
adc
ja
xchg
mov
addr16
lcall
mov
call
or
sahf
lahf
mov
push
shrw
mov
sahf
sub
pop
xor
or
inc
mov
int
adcb
ror
ret
mov
push
lea
mov
sub
cmpsb
addb
cmp
test
out
dec
sahf
inc
cwtl
lds
js
sub
pusha
or
xor
mov
adcb
pop
aad
or
mov
fs
dec
es
xchg
sbb
mov
adc
sub
lret
mov
icebp
ret
xchg
movsl
sahf
mov
in
clc
gs
movsb
in
sbb
lods
je
stos
mov
test
loop
fsub
add
je
push
loop
testl
push
andl
pusha
jg
ror
mov
xchg
addb
or
push
bnd
fidivrs
push
push
sub
lahf
jno
or
cmp
es
scas
mov
and
mov
jae
inc
inc
mov
fwait
loop
xchg
ljmp
mov
jle
and
leave
in
adc
pop
dec
or
stos
cmp
loope
push
aad
push
push
cmp
pop
dec
push
xchg
lods
cld
stos
pop
xchg
pusha
push
ss
insl
hlt
mov
and
and
mov
mov
fwait
mov
add
mov
daa
lahf
and
push
and
xchg
and
xor
mov
outsl
push
cmp
lods
dec
xchg
cld
dec
pop
mov
sbb
pop
or
adc
aad
mov
push
dec
jg
inc
mov
gs
addr16
orb
pop
es
fidivrl
pop
sub
out
jle
or
popf
popf
or
pop
mov
lods
cmp
jecxz
enter
call
sub
push
xchg
ds
sub
jmp
sub
mov
cmp
jne
and
sbb
hlt
loop
movsl
adc
shrl
cwtl
push
mov
aaa
fmull
pop
pusha
inc
sti
shrl
imul
xchg
scas
shlb
xor
iret
test
cld
and
das
lods
fwait
pop
jg
test
shld
je
mov
sti
aaa
mov
stos
jmp
mov
inc
jl
inc
pop
out
aas
push
jle
mov
sbb
js
fprem
imul
jmp
cltd
cmp
mov
mov
data16
fcoml
or
aam
pop
mov
iret
push
aaa
rorl
rcll
or
xchg
test
add
add
fwait
ret
test
fsub
add
or
xchg
repnz
into
fidivs
int3
jmp
lods
jmp
mul
clc
dec
jecxz
in
cli
jmp
fists
ljmp
jle
pop
sub
or
push
in
out
mov
mov
or
sub
cmp
pop
jne
hlt
or
ja
xchg
lret
push
push
push
jo
arpl
jb
shlb
aaa
mov
sbb
mov
roll
fs
push
aaa
cmp
sbb
mov
inc
les
and
popf
insb
lcall
ss
std
cmpsb
pop
pop
push
out
pop
mov
lahf
add
imul
scas
lods
dec
inc
mov
or
mov
test
push
xor
clc
movsl
and
leave
mov
das
dec
mov
xor
ljmp
lock
pop
outsl
inc
hlt
push
lods
icebp
mov
push
rcrb
pop
push
cld
hlt
aad
add
lds
lods
lds
ljmp
push
pusha
sbb
inc
sub
leave
das
scas
jo
or
push
cmpsl
fucomp
out
mov
sbb
sub
ljmp
sub
dec
cmpsb
cli
pop
mov
jne
adc
pop
adc
popf
mov
adc
pop
push
cmp
and
dec
out
fisubl
add
or
add
inc
jp
call
xchg
and
xor
repnz
pop
jne
stos
push
mov
and
outsl
cmp
gs
cmp
push
jecxz
ss
mov
mov
dec
mov
and
out
add
divl
ljmp
add
and
sarb
repz
xchg
ret
shlb
jns
dec
pop
out
in
pop
mov
out
int3
in
sub
cli
sub
pusha
pop
test
cmp
inc
es
je
adc
jp
adc
sahf
dec
mov
mov
push
rcll
notl
aad
push
sarl
mov
push
int3
lcall
out
lret
orb
mov
sahf
jbe
data16
mov
lret
add
mov
imul
sbbb
mov
popf
push
je
loope
sub
lea
call
int
or
and
fiaddl
imul
jae
sti
xor
icebp
xlat
sbb
and
in
test
inc
xor
add
cmpb
or
xor
push
sbb
jno
popl
ss
pop
mov
inc
jo
lcall
les
dec
stos
dec
cmpsl
dec
xor
xchg
aaa
sbb
and
rclb
je
test
jmp
mov
ds
mov
dec
dec
rcll
push
insl
lods
push
pop
ds
sub
mov
lret
sti
ret
ds
shlb
mov
pop
adcl
mov
shr
add
jge
add
or
es
or
push
push
lret
xchg
pushf
xor
mov
fdivrl
xchg
decl
adc
sarb
out
nop
jl
movsl
ret
fnstenv
idiv
sub
xchg
pop
fisubrl
aas
daa
dec
test
addr16
out
daa
arpl
in
test
mov
add
call
ja
ret
pop
fnstcw
sbb
pop
mov
push
xchg
sbb
pop
movsl
cs
test
add
cld
push
enter
loope
mov
out
jb
and
mov
sub
cmp
pusha
adc
insb
mov
cli
ret
dec
jle
shll
popl
lods
repz
movsl
into
jns
daa
in
shrb
nop
xchg
push
mov
test
push
pop
insl
add
pop
xor
mov
mov
cmpsl
mov
ficompl
xchg
rcr
mov
sbb
jl
jge
pushw
int
push
ss
testb
test
adc
ficompl
cmp
xchg
sarb
pushf
insb
sti
inc
fs
int
mov
shlb
sub
dec
int3
pop
mov
jne
xchg
insb
sub
mov
stos
xor
pop
adc
inc
cwtl
lock
push
rcr
xchg
cli
xor
cld
rolb
mov
and
fists
in
leave
inc
inc
sub
adc
push
and
xor
mov
mov
in
fcoms
push
mov
into
imul
xor
clc
pop
mov
cltd
or
mov
sub
sub
dec
sub
in
loope
add
les
sub
pop
sub
das
lock
sub
xor
fisttpl
imul
pop
mov
icebp
jecxz
pop
adc
fstl
mov
dec
popf
out
sbb
subb
cmc
dec
mov
outsb
pop
xor
out
xchg
outsl
mov
neg
in
xlat
repz
mov
roll
iret
adc
cltd
mov
xor
add
mov
je
pop
flds
fsub
push
sbb
fs
push
inc
push
mov
jo
ret
or
fld
mov
out
xchg
cmp
js
rclb
negb
mov
ja
adc
sbb
mov
mov
imul
and
andb
shlb
shll
lret
mov
aad
inc
jl
cli
incb
ja
aam
jnp
cli
ds
xor
clc
or
andl
pop
in
or
push
mov
dec
push
stc
or
sbb
pop
stc
pop
lea
adc
sub
push
test
inc
or
in
mov
pop
mov
inc
out
inc
out
sub
jne
pop
xchg
cmp
inc
sbb
fdivr
imul
imul
ror
rcrl
fdivp
les
ret
shlb
je
cld
add
jae
daa
dec
mov
sti
fsubrs
mov
repnz
ss
mov
jg
or
or
scas
jg
jmp
mov
sub
pop
leave
push
inc
repz
push
enter
add
pop
cmp
dec
sbb
popa
cld
push
or
dec
sbb
jns
std
movsb
aad
clc
test
pop
mov
mov
es
call
pop
or
in
add
ds
cwtl
pop
jmp
fwait
in
xor
nop
mov
dec
inc
icebp
cmp
dec
cmc
adc
sbb
loop
rclb
movsl
addb
out
lods
scas
xor
es
pop
lret
push
add
rcrb
rcrb
stc
xor
adc
jb
jb
cld
loop
sbb
test
data16
aad
jl
test
cmp
rorl
je
iret
test
push
movsb
dec
hlt
out
addr16
push
sahf
mov
frstor
adc
fwait
or
cmp
push
pop
adc
addl
out
scas
pop
cmp
xchg
or
dec
sub
bound
bnd
fcmovbe
insl
test
ds
test
jno
movsl
xor
or
aad
imul
sbb
stos
ret
repz
in
cmp
mov
sub
push
lods
adc
jne
fists
jnp
imul
ljmp
out
lahf
sub
pop
fs
or
cmp
popf
or
sub
sahf
leave
in
gs
mov
adc
dec
aad
test
lods
mov
loope
cmp
and
sbb
cmpsl
cmpsb
int3
lds
in
mov
or
insb
test
fsubrs
mov
mov
inc
jae
jmp
adc
lds
add
sub
or
not
test
sbb
nop
into
pop
leave
mov
insb
pusha
movsb
pushf
xor
adc
jae
sbb
jg
pop
push
add
subl
add
mov
addr16
inc
idivl
push
repnz
push
mov
jp
add
andl
hlt
lods
mov
cs
int3
jns
pop
addr16
stos
mov
and
push
movsb
inc
xor
or
xchg
cmp
cltd
pop
mov
inc
or
or
xor
repz
mov
stos
test
ds
das
and
inc
adc
bound
inc
mov
sbb
gs
xchg
and
mov
es
in
jle
shlb
cmp
pop
mov
pop
cmpsl
cld
inc
sub
cmpsl
mov
sub
xlat
shll
rol
sbb
ds
push
dec
shl
xlat
dec
push
movsl
push
ja
mov
nop
sub
jmp
adc
scas
cmp
xchg
and
ljmp
mov
cmp
sbb
jnp
add
insl
gs
fldl
xchg
jl
outsb
inc
add
je
les
clc
mov
mov
call
mov
jns
xchg
push
adc
imul
sub
in
fildl
inc
dec
jo
mov
jmp
iret
das
jecxz
subb
test
xchg
lcall
pop
aas
xchg
test
mov
imul
sbb
sbb
insl
adc
movsb
add
inc
sbb
jecxz
inc
fisubrl
jno
ret
and
daa
dec
xor
or
stos
fcmovb
fmul
push
and
rcrl
testb
jns
sahf
adc
jo
xor
movsb
push
push
jl
jg
shr
insl
outsb
movsl
dec
and
fidivrl
in
and
lods
mov
xchg
out
fwait
jb
fldcw
push
push
jne
fildl
mov
pop
into
jno
imul
out
add
int
inc
ret
adc
inc
out
lcall
and
ljmp
mov
popa
int
jns
int
rcll
loopne
xorb
movsb
xchg
xchg
mov
stos
es
aaa
ja
clc
adc
lcall
cmp
mov
shlb
in
rcrl
jecxz
pop
les
push
hlt
add
jne
call
out
cmp
jecxz
sub
hlt
jle
adc
loopne
mov
mov
add
xchg
inc
enter
xchg
cwtl
and
mov
xor
cmc
sahf
sub
sti
nop
push
into
sbb
pop
or
cmp
dec
xchg
mov
hlt
insb
stos
push
push
sbb
mov
daa
and
pop
cs
clc
mov
test
icebp
in
lds
test
ret
add
add
jp
lods
stos
into
daa
sub
xchg
or
insb
add
or
std
ja
xor
sti
push
das
scas
sub
push
mov
je
jp
cmp
push
stc
xchg
dec
cwtl
mov
outsl
mov
lods
fimuls
xlat
pop
adc
sarb
inc
xchg
mov
in
scas
adc
jl
and
imull
test
inc
and
shrl
mov
dec
repz
das
cmp
adc
loop
jne
sbb
ljmp
dec
sbb
adc
iret
xchg
js
mov
out
cmp
cmpsb
jno
push
jbe
mov
adc
sbb
aam
loop
inc
or
ret
mov
popa
push
popf
notb
sbb
push
jmp
rcrl
stc
jne
or
mov
out
mov
sahf
adc
fs
xchg
mov
lds
adc
clc
call
lea
jle
push
xlat
inc
pop
jo
pop
dec
add
outsb
ja
sub
dec
jmp
xor
inc
incl
xor
jl
iret
loop
andw
dec
inc
or
push
cmpsb
rol
aaa
sub
mov
push
iret
sub
dec
out
repz
adc
lods
adc
fsubrp
dec
movsb
call
push
aad
add
int3
lret
sub
adc
test
jecxz
xor
lahf
test
or
jl
scas
xchg
mov
xchg
cmpsb
out
xchg
imul
pop
or
ss
cld
fs
sbb
imul
xchg
ja
cmp
pop
subb
scas
lods
test
lret
inc
adc
inc
and
cmpsl
call
adc
test
test
pop
push
popf
mov
addr16
in
or
mov
cmp
inc
jns
les
je
push
call
sbb
inc
shlb
out
mov
mov
cmp
es
mov
ja
sub
pop
cwtl
aad
jp
cmp
pop
push
icebp
dec
mov
pop
test
push
lock
cmpsl
adc
jno
mov
ja
lfs
cld
pop
push
ds
pop
mov
outsb
bswap
cmc
sti
stos
mov
std
into
and
inc
and
test
dec
pusha
xchg
fs
inc
inc
add
push
imul
lock
mov
aas
jg
mov
leave
push
pop
out
pop
sub
or
push
scas
daa
cmpsb
movsb
jecxz
out
insl
jge
push
nop
sub
std
in
adc
inc
cmp
mov
std
push
out
dec
mov
into
cmpsl
push
fs
lahf
bound
add
sbb
insb
scas
xlat
cld
xorb
subb
jmp
mov
lret
popa
cmc
ret
sarl
mov
add
hlt
add
popa
pop
push
adc
stc
adc
cmc
xchg
inc
cmp
lea
pop
sub
pop
xchg
jmp
pop
push
lret
cmc
mov
fidivl
push
mov
xor
scas
jp
loope
outsl
shr
mov
daa
dec
mov
rcr
inc
data16
les
mov
or
push
mov
test
or
push
dec
jb
aaa
outsl
sub
xchg
insl
xor
sahf
adc
pop
rclb
lods
mov
test
sbb
cli
sub
adc
mov
into
jns
push
pop
mov
cmp
dec
movsl
lret
mov
xchg
hlt
sbb
push
push
fiadds
xor
into
mov
divl
dec
add
or
mov
ret
xchg
mov
pushf
rorb
fisttpll
outsl
xchg
enter
adc
lock
dec
sub
lret
cmp
minps
add
arpl
cmpsb
dec
or
mov
or
rcrl
push
mov
mov
or
call
jl
pop
jmp
ja
out
nop
enter
jl
or
jnp
push
call
xlat
cs
insb
scas
cmc
fucomi
xlat
fstpt
sahf
inc
and
shl
add
and
jge
neg
loopne
int3
jmp
mov
outsl
outsl
mov
ret
dec
inc
jns
in
mov
pop
stos
cmp
sub
dec
xor
xor
pusha
sbb
mov
shll
sbb
out
aam
push
movsl
mov
jge
stos
lds
lock
mov
sahf
xchg
ljmp
imul
stos
scas
and
leave
push
jmp
dec
in
or
mov
cmp
cwtl
test
mov
repnz
ret
jo
inc
aaa
stc
and
fbstp
or
roll
jne
xor
hlt
push
inc
xchg
popf
or
adc
hlt
in
sbb
adc
gs
push
gs
in
jl
js
pusha
jbe
movl
jp
or
or
dec
mov
inc
inc
xor
into
pop
xor
xor
mov
repnz
mov
cmp
aam
aas
mov
sbb
push
push
sbb
push
repnz
add
ret
negl
push
mov
fcoml
movsl
adc
mov
fdivrs
shll
enter
ljmp
inc
xchg
fwait
test
lods
push
mov
mov
ret
data16
fildll
xor
mov
outsl
mov
fcoms
cwtl
push
in
add
add
sbb
lret
movsb
push
lea
and
sahf
mov
mov
mov
imul
es
imul
sub
idivb
pop
movsb
inc
lds
test
jle
fdivrs
xchg
xchg
repz
loope
jg
lds
dec
push
sbb
adc
jg
shrb
in
js
sub
mov
cmovp
bound
ret
int
imul
test
add
jne
dec
mov
scas
mov
iret
mov
bound
xor
pop
xchg
sub
fwait
lahf
add
into
push
xlat
imul
mov
cmpsl
sbb
or
fisubl
fs
sbb
xlat
test
out
sub
cmpsb
push
mov
std
lds
scas
or
cwtl
aas
roll
and
or
negl
aaa
mov
fists
mov
lds
xchg
das
and
mov
jbe
xchg
and
cmp
nop
cli
xchg
jae
xchg
dec
xchg
js
arpl
repz
adc
scas
mov
fcmovbe
or
sub
xchg
push
lock
addr16
adc
mov
jb
sbb
test
outsl
pop
nop
inc
ret
sub
adc
xchg
aaa
repz
sub
js
pusha
mov
mov
into
pop
cmc
outsl
lods
mov
jle
clc
adc
add
aas
fucomi
mov
or
rol
push
cmp
mov
adc
mov
imul
pop
add
push
test
or
jo
fwait
push
add
orb
cmpsl
and
xchg
mov
pop
sbb
cmp
inc
mov
or
arpl
mov
jle
and
fwait
dec
scas
sbb
mov
ljmp
mov
and
xchg
xchg
or
sbb
add
and
rclb
add
ja
into
mov
out
je
mov
or
lods
out
push
test
push
mov
dec
or
loop
push
push
cld
push
out
mov
sub
mov
mov
lea
aaa
mov
mov
clc
or
imul
jge
sub
mov
pop
aad
cmp
aas
push
adc
lcall
leave
add
cs
pop
push
out
aaa
mov
mov
lea
lods
adc
in
fsubrp
cmc
ret
sbb
rcrb
cmp
andb
loopne
add
mov
mov
push
adc
repz
inc
mov
int
inc
jmp
inc
add
adc
scas
and
call
stos
lret
push
repz
push
stc
rcrl
cmpsb
rep
ljmp
or
xor
out
outsb
mov
rorb
in
int3
rclb
pop
xor
ror
rcrl
push
sti
sbb
ljmp
mov
and
push
out
loope
push
and
imul
pop
cwtl
std
inc
push
lock
aam
and
adc
mov
movsl
mov
shl
sbb
sub
fcmovne
fists
pusha
push
leave
or
xor
sub
mov
cmc
jp
fiadds
into
stc
or
add
es
repz
popa
and
hlt
dec
mov
imul
test
outsb
lret
inc
mov
mov
mov
arpl
test
ds
aad
xor
inc
lds
repz
add
pop
mov
mov
fwait
jne
in
jb
mov
push
in
sbb
leave
add
into
loope
cld
inc
xor
xor
and
test
mov
leave
aaa
cmp
jb
fisttpl
pop
jbe
pop
and
mov
lds
cmovnp
jne
cli
sbb
jns
mov
adc
xor
lea
push
jbe
rcrl
es
mov
jmp
dec
fld
out
inc
std
push
mov
scas
jmp
jae
inc
xorl
fisubrs
mov
inc
in
cmp
xchg
pusha
xor
inc
xor
popa
imul
sbb
mov
cmp
lds
negl
repz
mov
inc
pop
xlat
aad
lcall
ret
push
mov
stos
mov
push
push
nop
ret
mov
push
es
mov
xor
aaa
sbb
fcmovne
outsb
sahf
pop
jnp
push
test
sbb
and
mov
pop
not
int3
jl
add
movsl
jl
mov
out
adcl
gs
into
jb
mov
test
push
push
push
mov
jmp
shll
sub
mov
push
adc
inc
movsb
dec
mov
dec
push
add
negb
jge
mov
push
sti
inc
inc
cs
xor
repnz
lahf
xchg
xchg
and
decl
cwtl
cmp
dec
cltd
je
add
pop
pusha
test
inc
mov
test
daa
addb
mov
inc
or
out
leave
pop
and
bound
cmpb
movsb
loopne
inc
stc
xadd
ja
in
mov
iret
and
jp
xchg
cmp
add
out
mov
aas
jnp
xchg
push
mov
je
movsb
cmpsl
xchg
push
bound
mov
bound
out
lcall
mov
fstl
push
push
enter
dec
je
dec
aam
into
lea
xlat
es
cmpsl
in
jb
jno
shrb
aam
inc
push
gs
shrl
pop
inc
jle
int3
or
lahf
lds
adc
in
sti
jbe
dec
mov
shlb
int3
mov
fists
inc
pop
mov
pop
std
mov
pop
or
popf
test
mov
mov
mov
add
in
pop
dec
sub
popa
push
sahf
je
add
jbe
pop
mov
jae
mov
out
movsl
and
shrb
out
sub
mov
lret
outsb
stc
or
out
sti
js
rclb
pop
xor
jge
rorw
and
rorb
shlb
push
fadds
mov
jne
data16
pop
out
data16
push
movsl
mov
inc
repnz
adc
mov
cltd
cmp
ret
dec
or
insb
xchg
inc
inc
pop
cmc
out
mov
xor
jno
jp
addr16
int3
mov
adc
and
dec
mov
and
cmp
enter
jp
add
loop
jns
roll
enter
stc
cmpsb
push
cmc
imul
mov
insb
sbb
in
jle
adc
mov
cmp
add
xchg
popf
std
jo
mov
or
adc
cmp
roll
jns
xchg
outsl
xchg
cltd
bound
push
mov
mov
gs
rcr
in
fadd
movsb
mov
cmp
stos
push
dec
in
mov
mov
out
mov
sbbl
adc
xor
ja
jnp
incb
shl
lds
push
mov
mov
lods
sub
push
stos
fists
sub
cmc
xor
and
test
cmpsl
addb
and
sub
xor
data16
icebp
arpl
arpl
outsl
loope
fs
subl
test
sub
add
xchg
push
shlb
cld
add
loop
leave
xor
popw
repnz
inc
ret
pop
mov
stos
mov
je
cmpb
and
dec
adc
cli
lret
lcall
in
int3
les
sub
pop
cmp
jns
frstor
popl
pop
lret
in
jg
das
add
pop
aaa
js
test
jns
xchg
ret
mov
lods
or
bound
adc
xchg
stc
pop
xor
fmull
int
or
pop
dec
sarb
loop
mov
ret
in
bound
pushf
je
jne
lods
icebp
int
push
into
jg
xchg
in
cmp
add
cli
movsl
movsl
sbb
lea
sbb
lcall
clc
xchg
test
daa
mov
out
mov
or
xlat
mov
sbb
loope
push
scas
mov
rcr
orl
leave
mull
insl
pop
and
or
daa
into
sbb
jno
add
jecxz
repnz
scas
scas
cmpsl
jle
arpl
sbb
sbb
bswap
or
sahf
inc
nop
ljmp
adc
divb
mov
sbb
psubb
int
pusha
iret
pop
adc
cld
aas
dec
mov
stc
add
fistpl
loopne
test
int
pop
jbe
xor
lea
stc
push
out
xchg
mov
jns
pop
jae
jne
loop
dec
mov
pop
repnz
jp
icebp
push
rclb
fwait
mov
push
fxch
push
jg
or
insb
mov
jmp
repz
lock
scas
fs
fdivl
popf
inc
mul
loop
iret
dec
out
or
fldt
lods
sbbl
ret
or
pop
and
rcl
idivb
or
das
cmp
int
cmpsl
movd
inc
outsb
jecxz
dec
adc
mov
mov
or
out
aad
movsb
mov
sti
test
arpl
stc
jbe
jle
mov
xor
ds
jg
cmp
std
jmp
sbb
jl
sub
inc
jecxz
add
repnz
out
pop
add
movsb
push
nop
int3
mov
into
cmp
mov
or
fsubrs
mov
nop
int3
arpl
loopne
into
lods
testl
js
dec
stos
sbb
sahf
stos
mov
pop
pop
xchg
xlat
addr16
mov
repz
cmpsl
push
sbb
jnp
cmpsb
mov
cmp
ror
push
fnsave
adc
and
in
jbe
into
inc
gs
mov
std
imul
sub
clc
and
xor
shll
mov
cmp
lcall
add
dec
cld
cmp
mov
inc
jmp
and
es
es
sub
add
mov
cltd
fiadds
test
stc
xchg
adc
lret
inc
push
lods
outsb
jns
dec
cmpsl
outsb
movl
xor
in
mov
loopne
jbe
aad
inc
rcrl
sbb
mov
ret
lret
mov
xor
jbe
jae
adc
jo
push
sub
push
fldcw
cmc
test
add
and
lcall
movsl
and
cwtl
mov
mov
aad
sub
movhps
sbb
pop
xlat
pop
es
addr16
inc
leave
lea
lock
pop
aam
mov
cmp
pop
daa
fcoms
aad
lret
xchg
sbbl
mov
inc
push
hlt
jp
sub
mov
mov
jb
jle
stc
dec
and
adc
or
in
or
test
cli
adc
mov
push
or
add
pop
pop
mov
adc
or
sbb
push
or
aam
in
ss
adcl
mov
cmp
inc
jne
push
cmpxchg
add
mov
xchg
repnz
inc
push
jge
jle
das
inc
adcl
or
sbb
or
movsb
push
outsb
rol
cmpsl
rclb
sbbl
ret
inc
dec
sub
ds
mov
repz
loop
mov
cli
les
das
call
gs
call
outsb
jae
call
dec
pop
cmpsl
outsl
xchg
shll
push
xor
addr16
jb
xchg
mov
stc
daa
fcomps
mov
and
mov
xor
dec
adc
push
push
xor
aad
or
pop
pop
cltd
jb
sbb
jmp
int
fstp
sub
outsl
cmpsl
loop
jb
mov
fsubrp
loopne
inc
cld
push
cltd
cmp
shll
jp
jbe
push
push
add
dec
sarl
jae
jo
jmp
clc
inc
lea
dec
mov
mov
sbb
cmpsb
rcrl
clc
nop
xchg
mov
jecxz
pop
cltd
sti
jg
mov
mov
xor
pcmpgtb
scas
jns
inc
jmp
nop
jle
jae
sbb
gs
pop
rcrl
push
add
sbb
lret
test
pop
js
sbb
pop
lock
mov
test
in
pusha
push
or
rcrl
in
cltd
fistpl
push
lea
test
cmp
mov
js
mov
xor
mov
inc
out
je
jle
imul
sti
mov
je
ss
and
out
hlt
cmp
adcl
rorl
mov
push
fstpt
cltd
hlt
lcall
mov
jno
popf
testl
rol
lock
mov
in
je
cmpsl
sub
cmp
fwait
xchg
iret
inc
hlt
mov
mov
cmc
mov
aam
fisubs
xchg
test
rcrl
nop
daa
dec
jge
and
push
cld
sbb
dec
sbb
and
add
scas
push
lods
add
pusha
rcll
dec
add
shrb
mov
jge
sub
inc
das
out
sub
sbb
dec
push
clc
inc
psrlq
pop
das
sarb
shl
cs
daa
icebp
pop
pop
call
push
outsl
cmp
add
pop
sub
cld
stos
fisttpll
mov
xchg
dec
inc
cmp
push
loop
or
scas
push
xlat
adcb
sbb
mov
cmp
inc
lahf
lods
lea
or
or
mov
sub
fldenv
push
jl
jmp
hlt
es
mov
loop
jmp
cmpsl
cmp
loop
pop
imul
leave
fs
pushf
sahf
mov
fld
fnsave
cmc
cmp
inc
sbb
stos
sti
js
xchg
nop
in
push
jmp
sbb
sahf
repnz
jae
xlat
pop
ja
loope
test
cmp
rep
mov
nop
sbb
out
pop
jne
call
pop
inc
push
movsb
movsb
jle
cmpb
inc
push
dec
cmc
dec
in
cmpl
or
push
testl
notl
sbb
je
jg
call
cltd
mov
cmp
jnp
data16
cmp
test
or
les
fldt
add
xor
pop
outsl
loope
pushf
xor
cmp
xchg
push
sbb
clc
cmpsl
ss
mov
lcall
jge
into
add
jge
int3
mov
xor
or
outsb
and
cs
add
dec
loope
repz
icebp
cltd
dec
xor
insb
dec
gs
in
inc
pop
and
jbe
in
int3
jecxz
sahf
jno
xchg
pop
push
outsb
andl
adc
cmp
jae
sub
out
sbb
int
xor
cmpsb
shrd
sti
push
and
outsb
mov
sub
sbb
stos
jecxz
enter
cmp
loopne
test
test
fcomip
scas
adc
aaa
lea
mov
jnp
rorb
pop
lret
push
std
lods
lcall
mov
fistpl
or
mov
or
mov
iret
out
add
std
push
pushl
cli
mov
add
nop
aas
sets
fs
sub
and
mov
sub
xchg
mov
aas
push
and
sub
sbb
stos
inc
and
sbb
adc
cwtl
sbb
push
mov
jle
stos
std
test
mov
add
dec
jmp
cli
mov
mov
jae
cwtl
inc
aam
arpl
loop
or
jp
and
add
mov
mov
mov
push
insl
rcl
and
inc
insb
add
test
call
out
inc
fmuls
sti
xchg
es
sbb
dec
ret
sub
js
cld
sbb
ja
out
orb
push
andl
loop
adc
adc
and
sub
inc
mov
test
pop
or
inc
es
loop
and
dec
xchg
out
stos
ljmp
pop
fsts
sub
icebp
testl
enter
mov
mov
lahf
mov
jo
cld
xor
jno
int
or
mov
adc
fcompl
xor
push
cli
scas
ror
ret
mov
push
clc
pop
cltd
fs
pop
rcrb
and
xchg
ja
dec
arpl
jmp
mov
scas
xchg
cli
jbe
out
dec
stos
ds
in
mov
ret
rcrb
pop
in
dec
or
ds
dec
push
enter
cmp
mov
push
jne
push
fisubs
imul
loope
push
jns
xchg
mov
mov
pop
test
dec
fwait
or
jp
jb
xchg
pop
dec
xchg
sti
adc
xor
arpl
scas
mov
mov
ret
pusha
dec
xchg
mov
push
in
movsl
lods
cltd
or
insl
mov
cmp
push
call
negb
xchg
sub
cmpsl
lods
lock
iret
or
sub
call
xlat
add
dec
jb
les
sbb
cmpsb
pop
les
rdmsr
cltd
decl
xchg
dec
cmp
xor
addb
mov
push
aaa
xchg
movsb
mov
hlt
cmpsl
leave
jp
cmpsl
xor
mov
mov
inc
cmp
lret
jo
sti
xchg
jp
push
mov
push
ret
mov
pop
insl
xor
inc
ret
bnd
add
je
dec
add
jno
xchg
fcoms
test
movsl
xchg
cmpsb
sarl
mov
loop
dec
sub
pop
std
mov
mov
cmc
rorb
popa
sbb
in
jns
pop
sub
loopne
cmc
cld
push
push
cmpsl
inc
dec
pop
movsl
adc
inc
je
jno
in
lods
pusha
xchg
mov
mov
xor
mov
sbb
cltd
shll
sub
cli
hlt
push
fsubr
stos
es
out
movsl
insb
jecxz
xchg
stos
dec
cmpl
push
or
sub
pop
in
popa
lock
sarb
dec
sub
in
sub
push
inc
and
lret
adc
lea
repz
jg
mov
hlt
outsl
scas
pusha
jl
push
jecxz
pop
ret
ds
jns
xor
add
fidivl
xchg
scas
mov
cmpsb
jmp
inc
mov
pop
inc
sbb
fdivl
cwtl
cmp
movsl
and
sbb
mov
pop
xor
fbstp
xchg
gs
dec
hlt
pop
sub
pop
adc
mov
mov
add
loope
add
clc
rclb
popf
popa
aam
pop
mov
subb
sub
sarl
adc
fisubrl
sbb
repnz
ret
cli
fcoms
test
push
sub
jle
ljmp
mov
mov
in
test
inc
cld
inc
adcl
mov
sub
push
int3
mov
cwtl
out
ja
shrb
jg
pop
pop
adc
push
or
mov
and
push
je
add
mov
jne
push
ficompl
mov
insb
dec
pushf
pop
data16
lea
sub
out
mov
in
mov
or
addr16
pop
jae
dec
mov
jmp
lods
xor
pop
scas
aad
fsubrs
mov
nop
aad
fidivl
pop
cmpsb
das
out
das
jmp
test
loopne
repnz
inc
xor
sbb
dec
sub
bound
in
arpl
xchg
xchg
fstpl
int
das
jbe
jmp
add
pop
fsubl
cmpsb
jecxz
popf
ret
nop
mov
jl
jns
adc
movsb
js
mov
jecxz
mull
jb
push
fbstp
daa
xchg
dec
sahf
fiaddl
cmp
jae
inc
popf
hlt
push
push
sbb
dec
in
ret
test
and
cmpl
test
out
mov
adc
lret
das
dec
mov
adc
pop
xor
sarl
xor
mov
push
enter
cmp
mov
repz
mov
or
adc
adc
fldt
popa
pop
add
xor
cmp
inc
push
mov
cmpb
insl
shl
aam
sub
xchg
xchg
inc
shrb
xor
ss
int
lret
movsb
cld
pop
add
pop
shr
jae
fdivrs
into
xchg
mov
fisttpl
cld
pop
cli
jb
mov
jnp
mov
and
inc
jae
mov
adc
pop
stc
subb
lret
mov
jns
dec
inc
data16
dec
pop
jge
mov
shr
dec
jl
roll
mov
test
incb
xchg
lds
mov
cmp
add
imul
jle
mov
xor
mov
mov
push
scas
mov
dec
push
dec
pushf
movl
aas
or
cmp
xchg
andb
cld
or
lock
xchg
cmp
movsl
out
xor
mov
mov
sbb
push
icebp
loop
xchg
in
jae
or
gs
jno
xor
popf
fidivs
addb
rorl
pop
add
bound
add
push
cmp
clts
imul
jnp
pop
inc
int3
inc
xlat
scas
fsubl
lods
call
mov
fsub
clc
or
leave
sub
shl
sbb
lock
mov
clc
sbb
and
jmp
lret
in
outsl
or
lods
decb
test
add
pusha
or
inc
pop
ja
jmp
in
jmp
xor
enter
xor
xchg
lds
imul
mov
jnp
dec
adc
bswap
sbb
gs
cmpsl
cmp
ja
xor
adc
daa
pop
dec
cmc
fwait
xor
in
push
iret
pop
mov
pushl
mov
xchg
ja
aas
fs
out
aas
stc
sub
mov
dec
icebp
daa
and
xor
test
mov
int
leave
push
cmpsl
push
popl
dec
mov
es
push
push
push
cmp
pop
stos
insl
push
fistpll
or
out
xor
mov
mov
pop
ds
das
inc
fmul
cli
push
xor
sub
xchg
sbb
out
sub
adc
sahf
adc
xor
adc
pop
mov
out
fcomps
add
je
addr16
pop
mov
push
lock
repz
sbb
xchg
out
clc
dec
mov
adc
sahf
fists
mov
jmp
leave
or
iret
pop
cwtl
adc
mov
aaa
lret
cmp
shl
lods
aaa
bnd
out
enter
xchg
xor
mov
dec
mov
mov
cmp
in
data16
sub
je
push
jns
fidivs
mov
ljmp
inc
dec
jmp
inc
je
or
dec
sub
sbb
hlt
mov
xlat
popa
inc
and
lds
out
push
pop
mov
adcb
sub
jmp
push
add
adc
add
scas
push
pop
jge
ss
jecxz
xor
scas
scas
mov
dec
popa
add
gs
push
stc
cltd
mov
pop
in
add
xchg
icebp
mov
mov
inc
mov
xchg
mov
push
insl
pusha
div
rclb
mov
scas
jbe
push
dec
pop
cmp
push
fwait
les
add
popf
or
lock
push
and
lret
js
inc
inc
sub
jnp
ljmp
jmp
mov
and
mov
sti
popf
dec
ret
ljmp
sub
dec
mov
outsl
jp
adc
jle
lods
lcall
ret
xor
jmp
mov
push
sarl
inc
iret
xchg
xor
pop
jno
sub
loope
insl
idiv
push
xor
push
pop
add
or
jge
mov
adc
subb
fimuls
cmpsl
and
xchg
pusha
pushf
adc
loop
jp
push
out
pop
fisubs
lret
push
sbbl
mov
or
push
pop
mov
fisttpl
xchg
mov
pop
iret
js
cmp
stos
jp
pop
dec
jmp
mov
xchg
jge
out
outsl
pop
mov
leave
push
sbb
insb
gs
enter
lds
aam
sbb
les
pop
std
xchg
lahf
fiaddl
adc
call
xchg
xor
mov
pop
mov
pusha
outsl
jne
pop
adc
and
fsts
ret
xlat
or
mov
xchg
inc
test
adc
out
rolb
ret
push
stc
cmp
fldcw
rorl
xchg
out
sbb
dec
cli
pusha
xor
test
ja
es
mov
pop
out
jae
mov
push
xchg
loopne
xchg
mov
or
lcall
xchg
ja
lcall
inc
mov
pusha
push
sbb
sbb
dec
lret
adc
dec
cs
inc
scas
test
fcomps
mov
jnp
movsl
stc
in
mov
jmp
xchg
dec
add
test
ficoms
movsl
pop
mov
popf
imull
insl
ljmp
xor
and
icebp
xchg
insb
mov
pop
mov
data16
pop
mov
dec
pop
flds
and
cmp
sub
popa
dec
lock
inc
or
or
sahf
mov
pop
fisubrl
lcall
je
int3
sahf
sbb
lcall
xor
push
cmp
pop
fisubrl
mov
mov
pop
out
pop
cmp
push
pop
movsb
or
ja
cmc
lret
lcall
mov
mov
fdivrs
sub
or
push
mov
mov
fstpl
pushf
pushf
aas
inc
sbb
adc
pop
fsub
scas
in
cmc
dec
push
dec
ds
outsl
jle
fs
mov
adc
mov
addr16
mov
xor
lea
mov
je
test
jnp
xchg
cltd
rorl
pop
jg
loopne
pop
clc
jg
sub
loope
jo
jmp
sahf
adc
test
dec
or
xor
sbb
inc
jbe
sahf
add
push
in
movsl
xchg
les
shr
push
mov
push
shlb
stos
pop
dec
in
aaa
repz
cli
ret
jl
xor
mov
sbb
in
sahf
mov
xchg
push
lcall
imul
adc
mov
fs
mov
insb
fwait
sbb
add
dec
popf
insb
cltd
cmpl
inc
pop
fcmovnbe
push
lods
in
sahf
xlat
xlat
call
bound
shlb
test
push
jno
push
or
popl
inc
cmp
in
insb
mul
and
mov
cmpb
pop
inc
and
mov
xchg
aam
sti
sub
sbb
mov
push
cmp
daa
outsb
es
mov
stos
fcomps
sub
adc
out
aas
lret
mov
push
lcall
fidivl
lds
sbb
lods
cmc
fcomps
loope
dec
imul
push
lret
xor
jle
xchg
pusha
dec
ret
pop
sub
jge
imul
mov
dec
iret
pop
adc
ficomps
nop
dec
cld
ss
push
pop
inc
incb
sbb
pushf
mov
mov
mov
xchg
sub
mov
dec
dec
sub
idivb
mov
push
push
cmp
sbb
lock
mov
cmp
in
sbb
test
sub
ds
cltd
cwtl
pop
std
jae
inc
loopne
lahf
cs
mov
test
add
je
xor
inc
loop
or
xlat
inc
jl
inc
clc
insl
rcrb
out
bound
xchg
mov
pop
lea
mov
je
xchg
jne
popf
push
pop
out
std
div
or
popf
lds
js
mov
lods
addr16
lds
mov
dec
or
xchg
pop
addl
push
mov
lds
lock
daa
fisttpll
repz
adc
scas
nop
lods
mov
xchg
iret
out
icebp
inc
pop
nop
mov
dec
push
fdivp
push
pop
hlt
in
adc
push
cmpsl
cmp
out
lds
mov
cmpsb
lret
out
jne
gs
fdivl
xchg
lods
ss
mov
je
xchg
xchg
aas
fsubrp
je
push
rcrb
data16
bound
push
xor
nop
lcall
xor
repz
sub
in
js
xlat
jl
je
fdivr
fdivs
xchg
sub
push
or
aad
sub
aam
shll
int3
divb
add
ljmp
jns
and
arpl
or
or
nop
jno
popa
mov
sysret
mov
icebp
in
test
out
mov
out
popf
jns
test
movsl
fiaddl
pop
mov
mov
cmpsl
or
mov
and
sahf
pop
inc
popf
and
gs
jae
js
mov
dec
shll
and
jle
sub
or
jae
inc
cwtl
sbb
sti
movsb
adc
notl
cmp
adc
shrb
cld
fistpll
jnp
push
test
sbb
mov
mov
sbb
push
dec
in
mov
daa
inc
rcl
inc
popa
cmpsb
mov
aam
mov
cmp
mov
xchg
push
inc
xor
sub
in
mov
adc
negl
movsb
pusha
dec
in
sbb
loopne
xchg
sbb
push
fs
gs
mov
ds
mov
mov
mov
add
sbb
test
lahf
nop
in
xor
into
cmp
loopne
pop
mov
mov
jp
pop
mov
mov
pop
lahf
or
xchg
adc
imul
inc
mov
xlat
cli
mov
mov
inc
test
push
inc
stos
call
fisttpll
jne
push
cmpsb
adc
out
cwtl
mov
push
or
mov
je
sbb
mov
idivb
out
pop
addr16
sarl
js
and
lcall
rolb
xor
inc
mov
xor
hlt
into
fdivs
pop
pop
xor
dec
sub
or
fwait
popa
xchg
bound
loop
mov
psubd
inc
pop
adc
push
jae
je
ds
and
leave
gs
leave
mov
lods
xchg
jecxz
pop
pop
in
cwtl
addb
jmp
dec
mov
mov
jbe
outsb
mov
or
hlt
pop
fadds
out
fnstsw
jns
scas
xor
imul
int
jecxz
test
in
adc
imul
dec
adc
addr16
movsb
jecxz
lret
scas
out
sub
sbb
dec
arpl
and
and
sahf
sbb
fstpl
les
sbb
dec
dec
mov
add
xor
add
stos
sub
lret
xchg
fwait
or
mov
daa
sarl
mov
or
fists
jae
sub
add
push
push
mov
push
or
mov
sbb
stos
xchg
jae
and
rcrb
fstps
sbb
xchg
repnz
xchg
pop
ret
inc
xchg
stos
push
or
adc
mov
popw
jge
cmpl
stc
out
mov
dec
push
popf
mov
mov
xchg
mov
dec
movsl
lahf
faddl
cmpsl
pop
and
test
mov
add
jl
popf
add
mov
lds
adc
pop
jecxz
cmp
into
jb
adc
jb
pop
mov
xchg
push
push
enter
movsl
fdivrl
pusha
inc
and
and
fneni(8087
xor
dec
xor
iret
xchg
mov
lcall
int
xchg
pop
fwait
icebp
daa
jle
dec
sub
mov
stos
addr16
loopne
jo
xchg
cli
xchg
pop
mov
loop
jnp
or
inc
jle
popf
add
in
stos
push
mov
movsl
mov
mov
call
and
dec
pop
mov
pop
jl
in
adc
shlb
andl
rcrl
jge
pop
scas
jl
dec
add
or
push
lea
sbb
sub
imul
dec
sub
add
or
insl
sarb
mov
add
xchg
jbe
dec
cmp
dec
mov
push
das
cmp
lods
jbe
dec
repz
out
cwtl
cmp
das
fsub
subps
mov
lds
mov
and
movsb
into
jns
test
xchg
mov
xchg
sub
pop
std
fwait
jae
push
bound
les
mov
add
push
xor
sbb
movl
mov
jae
lods
jle
pop
jmp
mov
inc
addb
xchg
sti
add
cs
mov
push
cmp
movsl
rcrl
push
addb
cmp
adc
or
sub
cs
test
dec
imul
add
jmp
fnstsw
xchg
fwait
out
cltd
xchg
dec
fcomp
pushf
lahf
lea
xor
push
jbe
add
cmp
and
sub
push
dec
dec
xor
pop
mov
mov
out
and
das
into
out
ja
xor
sar
addr16
aad
loop
test
adc
mov
jge
mov
int3
out
lock
xor
or
sbb
xchg
pop
pop
sub
cltd
jno
int3
adc
mov
add
sub
filds
fiadds
dec
adc
xchg
daa
pop
xchg
nop
daa
xor
repz
int3
push
data16
cmpsb
or
jo
push
dec
push
movl
push
xor
call
pop
call
nop
std
mov
lock
mov
inc
and
imul
cmp
mov
movsl
and
loope
fdivrs
shrl
add
inc
pop
arpl
sbb
inc
mov
mov
mov
out
pop
lret
mov
int
pop
scas
jl
jl
icebp
pop
inc
cmpsb
xor
int3
inc
add
mov
scas
sub
test
xor
sahf
repnz
pushf
repz
or
leave
sbb
push
dec
jge
inc
pop
and
xchg
cmpsb
lock
into
out
lods
loope
shll
adc
and
inc
mov
xchg
fwait
movb
dec
pop
dec
insb
gs
testl
movsl
inc
call
push
sbb
mov
loope
adc
sarb
std
rolb
sbb
xor
inc
jno
insl
shrb
sbb
sbb
sbb
mov
popf
jecxz
push
idiv
add
mov
or
loop
sbb
fdivrs
push
repz
xor
and
cmp
cli
sub
insb
jle
ret
repnz
sbb
adc
lret
push
xor
into
rcrb
cs
sarl
mov
bound
movsl
nop
sbb
and
inc
das
inc
cmp
mov
cmp
jns
mov
cmpsb
inc
add
xchg
testb
dec
ret
test
push
mov
insl
fidivl
jno
pop
test
addr16
dec
jae
push
add
push
add
cmpsl
andl
js
rcrl
mov
bound
mov
mov
jmp
push
add
and
insl
in
loop
cmpsl
mov
andl
push
jmp
dec
add
cmpsb
popa
out
xlat
scas
lods
js
cmpsl
cmp
leave
adc
ret
mov
aaa
cmpl
frstor
lcall
shrl
adc
jns
pop
xor
inc
aam
cmp
cmc
loop
cmp
add
adc
or
push
js
jb
aad
xor
fldenv
fbstp
push
cmp
inc
or
ja
lods
je
mov
out
int
lret
mov
mov
and
cmovb
xchg
add
fcoms
out
stos
inc
xlat
adc
mov
jmp
cmpsl
sbb
push
push
iret
js
sub
add
or
jae
or
mov
jne
jecxz
popf
ret
in
ret
popf
fs
or
das
jecxz
mov
fisubrs
adc
sbb
mov
lahf
inc
mov
mov
movsl
jecxz
mov
loop
repnz
mov
xorb
fisubrs
pushf
and
leave
pushf
cmp
hlt
add
insl
mov
fisubs
and
jb
or
xor
fistps
jmp
cwtl
add
fnsave
sub
rcrb
inc
cmp
lock
leave
sbb
inc
cmp
mov
lods
and
and
jg
adc
mov
mov
stos
bound
or
dec
push
testb
and
loopne
pop
cmp
and
mov
fsubrs
adc
lret
ret
mov
mov
popf
adc
in
mov
push
dec
xchg
cmpsl
and
push
das
fisttpll
cmp
leave
mov
in
pushf
lock
xor
inc
mov
add
or
push
pop
bound
ja
aaa
out
ud1
ja
int
adc
xor
lret
dec
jb
and
mov
or
lahf
lds
rolb
fs
cmp
xchg
mov
lret
adc
cmp
mov
push
sub
imul
push
inc
fsub
imul
lds
mov
loope
sub
mov
cmp
in
bound
cmc
in
dec
and
sub
sub
mov
sbb
lock
js
xlat
paddusw
js
mov
fistpll
sub
push
arpl
adc
xchg
inc
sub
inc
outsb
sbb
xchg
pop
call
jg
push
fildl
push
int3
pop
add
jmp
jle
xorb
mov
lods
loop
mov
loope
and
mov
mov
add
xor
lret
testl
shlb
fwait
inc
sbb
sub
aad
xor
mov
and
mov
push
cmpsl
sub
and
or
into
mov
gs
test
push
lea
movsb
and
les
or
mov
and
mov
push
xchg
test
dec
inc
cmp
lea
dec
ljmp
cli
pop
mov
lcall
dec
xor
pusha
hlt
push
sbb
rorb
fxch
stos
pop
lea
push
clc
pop
fstps
stc
cwtl
jne
adc
or
or
or
mov
pop
lock
xchg
dec
jne
push
push
ret
lods
clc
in
lea
add
lds
jg
addr16
inc
mov
sbbl
pop
add
lock
cmpsb
fs
jns
out
adc
cmpl
sub
xchg
jmp
mov
cwtl
push
rcrl
stc
push
pushf
mov
ja
movsb
dec
sub
ds
fiadds
imul
jle
mov
jo
imul
repnz
cmp
pop
int
popf
and
push
dec
xor
xchg
lret
cmp
pop
mov
mov
int3
mov
enter
sub
or
mov
xor
stos
add
loopne
fbld
jmp
hlt
jp
jl
adcl
test
jle
cs
imul
xor
dec
mov
push
dec
pushf
inc
dec
sub
cmpsl
fdivrs
xor
jecxz
push
out
fiadds
cmp
jae
sub
dec
inc
nop
test
mov
fidivrl
mov
icebp
mov
popa
cmp
jne
pop
cmp
cmp
jle
jle
inc
pop
mov
cmp
outsl
popf
dec
add
mov
push
roll
and
or
arpl
fs
in
lret
imul
cwtl
cltd
and
xor
jae
add
jg
pop
jo
shrl
push
pop
fwait
aad
lea
mov
sbb
jae
mov
xchg
out
inc
fsubr
orb
loope
sub
lods
mov
popf
mov
fidivs
sub
loop
lods
mov
inc
jp
into
ja
lret
mov
loop
nop
stos
dec
mov
movsb
adc
jne
imul
jl
xchg
add
daa
mulb
cmc
jne
out
mov
mov
test
popf
xlat
and
dec
mov
sub
sti
inc
pop
pop
adc
ja
xchg
or
and
mov
xor
addr16
mov
push
push
jo
push
jo
jae
insl
je
sub
ret
mov
xchg
jnp
push
adcl
cld
sbb
imul
stos
push
xor
jp
xor
and
rorl
imul
jbe
jge
andb
out
add
push
rorb
into
rol
xlat
mov
stc
insb
cltd
and
mov
or
stos
fwait
xor
push
xchg
movsb
xor
repnz
loope
sub
fs
jne
mov
call
clc
sub
sar
gs
fidivl
fbstp
mov
ret
popf
jecxz
mov
push
push
loopne
test
mov
jae
rclb
push
xchg
dec
int
sbb
xlat
loop
inc
aad
popa
jbe
pop
mov
stos
decl
rorb
ss
xor
dec
bound
bound
add
cmp
stos
jnp
pop
jo
or
cmp
loopne
sbb
mov
push
push
xchg
outsl
and
lret
and
mov
repz
ljmp
sahf
xchg
lods
xchg
or
inc
mov
rorb
lock
std
pop
xor
mov
das
addr16
repnz
cli
lret
aas
jg
lret
clc
or
add
pop
icebp
jbe
push
stc
test
lods
sti
std
rorl
psubq
jnp
iret
mov
jecxz
pusha
cmp
lret
into
inc
sub
xor
inc
push
sbb
jae
mov
add
pop
in
shrl
es
flds
push
jb
mov
push
outsl
dec
leave
sbb
incl
mov
lahf
sub
add
rorb
orl
cs
out
stc
jae
push
mov
mov
sbb
or
dec
pop
psrld
dec
push
lea
enter
int
cli
sub
cmp
xorb
mov
gs
mov
mov
rol
rcrb
sar
shlb
push
aas
loop
jae
dec
dec
cmpsb
mov
mov
pop
jno
out
cwtl
divl
outsl
mov
call
mov
dec
mov
es
mov
xchg
fbstp
cmpsl
add
js
data16
sbb
adc
shrb
push
push
imul
xor
es
jbe
inc
aam
dec
loop
xchg
inc
ror
push
sbb
xchg
adc
mov
in
mov
or
int3
xchg
fsubl
adc
icebp
push
jge
jo
add
jns
es
shr
mov
leave
mov
push
push
jp
mov
push
xchg
hlt
aas
stos
dec
in
decl
roll
repnz
arpl
mov
clc
cmp
je
sub
push
lods
stc
ds
shlb
ja
mov
mov
add
inc
rcl
xor
test
jnp
cmpsl
lods
lret
cmp
es
lock
adc
xchg
and
push
mov
and
fdivrl
or
fildll
xchg
push
jns
iret
fldenv
cs
iret
and
repnz
dec
and
shl
ret
adc
mov
loop
jge
push
push
inc
inc
jnp
out
popa
mov
test
gs
xor
mov
xor
rcrl
fidivrl
cwtl
fidivl
sti
jl
cs
adc
in
stc
push
aaa
into
mov
mov
push
xchg
aam
call
mov
scas
pop
sub
dec
xchg
int
lret
fisttps
stos
cs
push
add
std
scas
jo
orl
pop
and
cmc
jp
sahf
aad
xlat
movb
mov
lea
sub
xchg
inc
sbb
add
mov
mov
in
inc
aas
fsubrl
mov
cltd
lret
add
sbb
mov
pop
shrl
mov
pushw
fdivl
cli
cli
jecxz
inc
jnp
cmp
sar
pushf
fscale
lock
push
mov
cmp
icebp
and
mov
sbb
mov
adc
sbb
adc
or
sbb
adc
mov
or
arpl
adc
xlat
in
lcall
adc
shlb
pop
push
out
inc
push
add
mov
sbb
mov
shr
dec
in
fnstenv
inc
pop
fmul
add
icebp
xor
es
sub
mov
sub
jp
es
xchg
sarb
fs
enter
std
sub
inc
sbb
push
mov
pop
add
push
lock
loopne
mov
xchg
pop
inc
cmp
cmp
mov
mov
xor
je
mov
fisubs
and
mov
pop
or
and
lret
leave
icebp
pop
divb
cmp
pop
jb
push
xor
ret
loop
mov
lds
std
clc
hlt
popa
in
in
icebp
es
push
xor
inc
xchg
mov
pop
dec
mov
scas
mov
repnz
and
push
fcompl
lahf
adc
mov
pop
std
cmp
out
mov
sbb
rclb
cmc
xchg
stos
mov
xor
sbb
sti
sbb
lret
sbb
mov
pop
mov
add
mov
dec
mov
loope
mov
pop
pop
pusha
pop
jbe
push
cli
inc
lods
or
push
into
and
adc
mov
das
stc
out
in
shr
sub
in
shlb
xchg
ret
ficoml
jmp
adc
aas
pop
call
aas
adc
out
jnp
into
jne
pop
mov
sub
push
js
mov
test
dec
out
push
repnz
push
jnp
movsl
imul
fsubs
mov
aam
es
lock
imul
mov
fisubrl
test
push
movsl
pop
popf
fcompl
into
xchg
lock
xchg
shlb
es
push
enter
sbb
mov
lahf
rorl
test
cmp
iret
or
mov
xchg
aaa
scas
jp
cmc
mov
xchg
xchg
idivl
sbb
das
xchg
inc
pop
push
xor
ja
jns
lods
or
or
dec
add
gs
mov
ret
scas
jae
adc
addr16
sub
inc
or
mov
mov
sahf
pop
shrl
test
outsb
ret
out
ljmp
das
pop
pop
push
shlw
inc
hlt
or
subl
in
arpl
inc
push
xchg
lret
lcall
bound
lret
add
lock
jns
ret
push
insb
pop
dec
stos
decl
fisttps
jecxz
adc
sub
ret
dec
xor
sub
cld
mov
mov
dec
cmp
mov
nop
xchg
push
sbb
getsec
xchg
xchg
adc
shrl
xor
add
add
sub
repz
and
cs
ds
addr16
xor
das
les
mov
sbb
xchg
sub
fdivr
dec
or
divb
lods
jns
int3
imul
xchg
movsb
rolb
xor
fstpt
fs
out
cmp
loopne
adc
jp
dec
pop
inc
outsb
leave
iret
pushf
inc
adc
in
arpl
pop
leave
ficompl
cmp
push
lret
mov
inc
jmp
pop
sbb
mov
shrb
pop
mov
in
std
push
or
mov
icebp
das
or
call
mov
insb
mov
cmc
repnz
mov
jl
lock
dec
xor
lcall
mov
cs
ja
and
push
add
mov
pop
icebp
lret
negl
nop
test
push
popa
mov
ret
and
movsl
mov
add
cmp
mov
add
ja
pop
add
je
push
dec
jg
arpl
xchg
cmp
rolb
inc
add
mov
adc
inc
cmp
lcall
sbb
jge
sarl
out
loop
loopne
loope
nop
outsb
xchg
add
lret
pop
xchg
xchg
shrb
popa
mov
imul
das
loop
mov
adc
dec
sbb
cmp
jnp
movsb
in
jno
push
test
sub
pushf
and
push
sub
sbb
sahf
hlt
xchg
cmp
out
xlat
clc
in
or
xor
lods
inc
sub
loop
xlat
cmp
bound
daa
jg
cltd
pop
pop
int3
aaa
fimull
mov
mov
dec
int3
sar
jg
in
or
inc
movsb
in
leave
push
stos
add
sub
data16
mov
stc
mov
fcomps
inc
test
and
push
je,pt
dec
imulb
mov
sbb
out
push
clc
dec
and
xchg
lret
mov
xchg
shlb
push
sbb
out
xchg
cli
enter
sbb
leave
call
test
popf
jbe
pushf
sti
jg
sbb
fnstenvs
addr16
dec
mov
arpl
rorl
inc
jae
sbb
fwait
out
jb
sbb
aad
pusha
xor
push
sub
inc
inc
xchg
loope
adc
mov
sub
imul
out
xchg
mov
je
push
mov
aam
fwait
iret
ljmp
jecxz
push
mull
cmp
out
fdivs
and
mov
jp
adc
add
or
jl
scas
test
cwtl
adc
dec
jno
adc
ja
sbb
push
test
mov
gs
stc
mov
mov
xchg
ljmp
inc
jg
push
mov
mov
mov
inc
sahf
pand
lea
loopne
dec
or
shl
enter
mov
pop
pop
aaa
sub
aad
xchg
inc
nop
mov
mov
and
xchg
loop
lret
dec
mov
cmp
int
movmskps
add
movl
inc
mov
push
fnstenv
xchg
and
rclb
rcrb
sub
loopne
push
aas
jnp
inc
icebp
rcl
fsubl
mov
ss
stos
rclb
sub
popa
cli
mov
pop
push
push
cld
jnp
and
xlat
dec
ds
lods
int
push
je
sbbb
incb
icebp
xor
js
ret
outsb
pop
out
lahf
fisttpll
dec
gs
xor
lret
cmp
pusha
xor
inc
int
xor
scas
cwtl
add
adc
adc
pop
loope
jno
lahf
enter
sub
xor
cmc
inc
test
cmp
pushf
mov
mov
jns
fistpll
in
repnz
leave
in
int3
scas
pop
arpl
lret
dec
xchg
add
mov
lock
filds
sarl
add
ljmp
outsb
xchg
inc
inc
xlat
xchg
aaa
mov
movsb
imul
loopne
sti
mov
push
inc
notl
push
pop
dec
sbb
fdivrp
xchg
adc
adc
gs
or
dec
xchg
lahf
fnstenv
jl
inc
inc
mov
xor
in
mov
dec
pusha
das
movb
sub
fists
cmp
insl
into
stos
pop
or
sbb
fistpll
and
cmp
mov
aad
out
popa
sub
iret
test
cmp
jae
int
dec
or
cmc
mov
in
cld
stos
and
sbb
lea
cmpsb
xchg
int
inc
bound
xor
mov
js
xor
cld
ret
int
push
inc
iret
inc
sahf
mov
fidivrs
insl
inc
xchg
jne
cmpb
arpl
loopne
or
sbb
scas
cmp
in
popa
xor
jecxz
repnz
loopne
cmp
in
lahf
adc
push
xor
push
mov
nop
jmp
aam
insb
pop
je
add
sti
loop
sub
dec
jmp
rclb
sti
mov
lds
push
aam
jo
imul
jns
sbb
inc
hlt
scas
mov
xor
lahf
push
repz
mov
push
mov
xchg
insb
std
pop
popa
adc
divb
push
stos
mov
adc
pop
xor
sahf
push
jge
lahf
nop
mov
gs
mov
data16
inc
mov
jg
aas
xlat
mov
ret
fstl
sub
add
aam
aam
xchg
pop
nop
mov
mov
out
das
adc
icebp
jb
js
sarl
ss
fdivrl
pop
xor
fistpl
pop
xlat
push
movl
gs
xchg
cmc
nop
js
mov
dec
popa
sbb
fcomp
xchg
mov
call
cmpsb
mov
imull
mov
into
dec
inc
cmp
xchg
dec
mov
dec
mov
inc
call
mov
aam
jbe
push
adc
hlt
repnz
inc
mov
fidivs
out
dec
movb
xor
out
or
addr16
stc
psrld
jae
xchg
test
add
add
add
mov
in
and
push
stos
inc
pop
fisubrs
iret
pop
sub
xchg
pop
icebp
sbb
cwtl
jl
sub
rcl
cmp
mov
stc
inc
xor
mov
sub
subl
repnz
pop
inc
mov
test
dec
pop
jnp
repnz
rolb
jle
loop
jl
mov
cmp
add
xor
inc
inc
roll
adc
rcrl
std
sub
cmp
sti
jge
insb
mov
xchg
je
rol
pushf
xchg
mov
pop
or
div
insl
push
pop
jbe
addb
sub
loopne
rcll
ljmp
aaa
xor
dec
inc
cwtl
fstps
es
iret
aaa
add
or
inc
loop
dec
cltd
aam
xchg
xchg
aam
xor
icebp
je
je
add
mov
cmp
call
movsb
pushf
int3
stc
int3
push
mov
bound
imul
ret
push
jle
mov
cmp
enter
mov
inc
imulb
mov
sbb
stc
add
xor
scas
mov
pop
das
cld
test
es
sbb
push
sti
sbb
aas
mov
mov
lcall
and
sub
push
test
xchg
mov
inc
sub
scas
inc
sbb
stos
or
or
xchg
js
imul
ja
sub
adcb
shrb
fcoms
sub
add
sub
les
push
inc
mov
lods
mov
mov
sub
jp
inc
sbb
daa
xor
xchg
fidivrs
imull
or
pop
sbb
hlt
push
jp
adc
adc
roll
xlat
sar
cmp
loope
mov
imul
bound
scas
add
xor
adc
mov
add
dec
jle
sub
sub
jbe
mov
xchg
or
mov
insl
xchg
loope
sbb
mov
scas
into
jp
xor
out
cwtl
loop
mov
mov
test
mov
mov
jns
push
aad
idivb
popf
cli
aas
sbb
test
or
outsl
add
loop
xchg
out
mov
cmpsl
insb
add
jo
fcomps
xchg
mov
enter
push
scas
mov
pop
sbb
test
pop
aam
fdivrs
sbb
push
pop
mov
ljmp
inc
sti
sahf
mov
mov
adc
mov
fwait
outsb
cltd
mov
insl
sbb
insb
cld
inc
xor
pop
pop
int
mov
mov
xor
cmp
movaps
js
mov
mov
mov
sar
pop
lds
inc
sub
push
jne
inc
xchg
add
push
xchg
dec
into
iret
xor
shl
out
cmpsl
les
lods
xor
jl
loopne
jle
data16
or
or
sbb
shll
sub
cwtl
test
add
das
dec
fisttpl
xchg
jne
cmp
or
mov
lret
arpl
push
xchg
sub
call
push
sub
mov
cmp
push
fnstenv
sahf
xor
leave
fstp
lock
enter
pop
push
jns
mov
xchg
xchg
and
test
mov
fptan
dec
addr16
push
insb
js
into
imul
cmpsl
pop
xchg
inc
sub
inc
arpl
adc
movsb
and
add
stc
dec
pop
lea
sub
mov
dec
or
decb
das
aam
xchg
aas
xchg
jb
out
mov
adc
outsl
subl
mov
push
aas
mov
divl
fwait
pop
ljmp
lods
mov
lds
inc
xchg
addps
xlat
cmpsb
jns
adc
push
sbbl
shrl
sub
sti
xor
mov
fldcw
daa
lods
dec
fstpl
inc
jae
and
jge
inc
pop
mov
mov
mov
pop
mov
das
out
mov
or
je
push
pop
rorb
pop
push
dec
mov
ljmp
pop
jne
test
push
push
inc
mov
je
push
sahf
xchg
les
int
test
jmp
lods
iretw
jle
pop
cmp
sbb
fdivrl
dec
and
ja
sti
sti
sbb
lea
push
xchg
cmc
dec
cld
jb
leave
xlat
pushf
cmpb
adc
lods
push
movsl
or
push
jo
jecxz
fiadds
and
jnp
xchg
and
cmp
add
test
cmp
js
xchg
dec
outsb
jge
xlat
jnp
push
sub
push
imul
loopne
and
mov
mov
cmpsb
adc
push
cmpsb
cmp
stos
js
mov
cmp
mov
dec
or
in
jne
sub
ja
sti
adc
mov
push
cwtl
inc
jb
iret
jg
test
mov
sbb
mov
mov
outsl
call
dec
aas
jnp
jno
daa
add
or
lret
cmp
cli
dec
mov
in
orb
jne
xlat
or
scas
or
testb
lods
pusha
das
xor
in
rcrb
lahf
aas
ljmp
add
adc
dec
pop
xor
xor
nop
push
cli
inc
fimuls
cli
into
jecxz
ret
repnz
push
faddl
stos
bound
in
mov
in
stc
inc
add
mov
in
xor
pop
fstpt
cmpsb
test
shl
nop
bound
cs
jle
lret
and
jmp
xchg
clc
sub
push
dec
push
cltd
xlat
jnp
jb
es
dec
mov
xchg
jp
jnp
xchg
scas
stos
cmc
adc
xor
pop
jo
gs
scas
pop
sbb
mov
stc
adc
add
add
cli
out
or
and
push
or
in
repnz
in
sar
or
test
out
cmp
push
add
test
insl
inc
jle
lods
lods
mov
es
cmc
ja
sub
punpckhdq
aaa
scas
sarb
les
bound
push
sub
loope
mov
out
outsb
lods
les
jns
sbb
mov
cltd
mov
rcll
or
sbb
add
rcll
xchg
xchg
mov
jne
mov
push
leave
push
clc
pop
push
adc
aad
mov
jb
clc
inc
iret
xor
rsqrtps
adc
in
bound
bound
xor
ja
jnp
or
mov
pop
cmp
lcall
cs
shll
les
roll
lock
mov
adc
jae
inc
stos
jmp
jne
data16
adc
mov
jne
testb
call
aad
movsl
bound
fcmovnu
or
test
in
mov
mov
xor
inc
sbb
lret
in
jmp
push
adc
out
aad
shlb
sub
out
mov
dec
std
xor
sub
pop
insb
sub
inc
rorb
adc
sub
push
dec
aaa
xchg
mov
sub
or
xchg
lret
mov
push
push
inc
andl
adc
popf
stos
fbld
and
ljmp
fdiv
sbb
cmpsb
dec
daa
div
cmpsl
ja
ret
pop
mov
push
or
insb
aaa
mov
inc
dec
push
ret
sub
aam
cmpsl
push
dec
pop
inc
sahf
pop
ror
stc
lret
mov
mov
sub
or
cmpsb
imul
pop
sub
xchg
push
aam
dec
cmp
mov
pop
sbb
lahf
cwtl
cmp
jmp
addr16
sbbb
add
push
leave
insl
or
iret
insb
mov
dec
incb
inc
and
pop
pop
dec
rcrl
dec
outsb
decb
adc
outsb
xchg
xchg
jne
call
fwait
popa
pop
mov
adc
ja
sub
loopne
and
shlb
mov
cld
lds
jg
mov
subb
dec
fistl
pop
bswap
cmp
cmpsl
dec
nop
pop
mov
ror
or
std
adc
daa
shll
sub
fistps
cltd
ds
call
and
cmp
and
pop
dec
scas
mov
dec
loope
push
xchg
divb
xchg
movsb
jecxz
arpl
and
pop
out
or
jo
or
and
test
push
push
je
dec
mov
lret
xor
pop
sarl
mov
dec
mov
or
fwait
add
mov
xchg
mov
or
jge
xchg
cmp
dec
sbbb
leave
addl
ds
sub
iret
pop
cli
mov
addr16
cmp
and
add
ja
out
lcall
imul
fists
add
sarb
inc
push
lds
sub
cmp
mov
sti
fwait
and
sahf
clc
sub
fbstp
insl
adc
cwtl
cmc
fisubs
sbb
xchg
push
xchg
jecxz
xor
std
jle
sub
dec
mov
dec
inc
push
dec
sbb
pop
mov
push
push
dec
test
ficoml
adc
sub
mov
rclw
jae
push
mov
testb
shrl
mov
pop
sub
int3
popa
cmpsl
pushf
dec
push
insb
ret
rcr
cltd
mov
mov
pusha
push
pop
add
dec
repz
lret
out
cld
and
pop
mov
pop
das
push
mov
fidivs
repz
and
xchg
test
cld
mov
pop
pop
andl
icebp
push
and
gs
push
insb
add
fimull
iret
leave
pop
js
inc
xor
sub
pop
inc
sub
mov
andb
push
mov
cltd
sub
dec
and
mov
leave
out
xchg
cmp
push
mov
test
push
adc
push
ret
sub
pop
rcrl
jo
jle
push
xchg
push
aad
xor
stos
cli
xchg
jle
mov
cmc
iret
pop
bound
cmpsl
xor
or
add
fmuls
cmpsb
add
sub
testb
ffree
add
dec
out
insl
clc
sub
pop
rcll
inc
popa
into
push
xchg
push
add
push
and
sti
dec
repz
and
jmp
scas
stos
daa
repnz
sbb
lret
data16
pop
es
aas
push
jmp
push
pop
cmc
adc
push
or
mov
and
das
ljmp
xor
das
xchg
push
rorb
jno
pop
mov
cs
nop
pop
mov
inc
cli
into
sub
addl
adc
lods
repnz
push
into
cmpsl
mov
xor
cltd
es
sub
or
jb
jp
shlb
fstps
packsswb
pop
mov
jl
mov
call
loop
ret
aaa
leave
mov
add
jo
stc
cmp
in
adc
test
dec
cmc
xchg
fwait
sub
inc
scas
pushw
dec
adc
lahf
cwtl
sub
test
xor
dec
xchg
push
ds
cmp
sub
sbb
add
int
jo
mov
xor
and
lods
adc
and
pop
mov
imul
lds
fwait
push
xchg
pushfw
out
mov
push
inc
ret
sub
add
cmc
sbb
test
pop
popf
je
cltd
test
shlb
and
test
mov
imul
jb
lock
fwait
xchg
xor
lods
xorl
jge
dec
int3
inc
movsl
test
pop
lret
sub
lods
jo
or
scas
fcoms
pop
fxch
jns
mov
and
and
pop
movsb
imul
movsl
mov
aad
adcb
pop
mov
sbb
jl
sarb
in
stos
or
jnp
adc
and
fadds
lock
mov
js,pt
lcall
out
hlt
hlt
lods
push
shrl
mov
fwait
jne
xchg
das
xchg
call
out
xor
ja
jae
cmp
add
mov
and
clc
aas
dec
les
xchg
cli
mov
insl
inc
dec
popf
inc
xchg
cli
aad
stos
dec
inc
mov
cli
push
mov
rcrl
push
loopne
rcrl
cmp
cmp
add
ljmp
scas
jecxz
xor
mov
icebp
sub
and
cmp
es
outsb
popl
pop
sbbl
mov
loop
leave
insb
lahf
dec
cmpl
and
xchg
mov
notb
add
and
pop
in
sahf
and
mov
add
add
dec
sar
stos
push
ss
lret
add
cwtl
loope
or
pop
inc
push
mov
mov
cmpsb
pop
fldt
add
mov
adc
xor
jmp
adc
addb
add
les
push
mov
mov
mov
xchg
adc
jl
stc
pushf
aas
ds
mov
scas
pushf
lret
fs
sub
enter
inc
xchg
dec
xchg
cli
push
insl
xchg
pushl
xchg
lock
xor
pop
adc
shl
out
fwait
movsl
xchg
xor
push
jb
mov
cmpsl
adc
lret
mov
cmpsb
dec
repz
add
lods
idivl
mov
aad
push
xchg
cmpsb
neg
dec
jbe
lods
lahf
push
lahf
pop
ljmp
fisubs
aad
neg
xor
or
or
insb
and
mov
popa
mov
jge
fs
das
jp
mov
bound
cmp
adc
outsb
ficoms
cld
mov
dec
mov
sahf
xchg
fstpl
out
sub
jle
xchg
sbb
xchg
cli
aaa
pop
fimull
and
aad
and
push
call
pop
pop
std
nop
mov
or
scas
jmp
ror
sub
push
add
into
shll
sub
jae
xchg
movd
rcrb
mov
aad
jle
adc
sub
popf
mov
cmpsl
mov
arpl
jae
call
fbld
push
sbb
dec
ss
push
dec
sbb
test
mov
mov
movsl
test
cwtl
add
xor
xchg
xchg
mov
daa
xchg
and
mov
xorb
test
push
xchg
cmp
jnp
enter
loope
sbb
sub
and
leave
inc
mov
std
push
mov
mov
das
lret
push
cmp
and
rolb
mov
dec
lods
mov
sub
popa
jbe
das
ret
sub
in
popa
or
mov
sarb
mov
mov
cmpsl
inc
sub
push
sbb
stos
and
sbb
popa
fcmovnu
loop
jmp
loop
test
imul
shr
shr
jo
roll
mov
pop
mov
xchg
int
arpl
pop
jle
pop
xchg
pusha
orb
xor
movb
xor
adc
jl
xor
pop
fwait
push
xchg
adcl
jno
loop
jecxz
push
xor
mov
dec
sbb
cmp
jae
push
jne
roll
popa
rol
mov
in
cld
and
arpl
dec
xor
sub
xchg
or
inc
sub
pop
or
xor
sar
mov
inc
xor
sbb
inc
dec
rorb
imul
mov
inc
cmp
mov
lea
add
in
pop
add
and
adc
scas
push
movsb
mov
push
sbb
mov
mov
adc
dec
or
xorb
es
push
loopne
and
repnz
xor
outsl
popa
fsubs
cmc
push
cmp
popa
cmc
test
outsb
icebp
xchg
sub
or
jle
jmp
or
leave
es
mov
aam
js
sbb
push
out
ret
mov
xor
jnp
cltd
daa
xor
adc
pop
pushf
lods
cmp
lret
idiv
and
dec
aad
push
xor
mov
je
xchg
mov
jne
inc
test
fistpl
inc
and
push
mov
mov
cmpsb
cmp
push
push
adc
fld
mov
push
mov
or
sbb
add
inc
push
add
les
pop
push
int
dec
or
stos
cmp
in
inc
pop
jp
mov
sub
movsl
rorl
add
arpl
mov
sub
sbb
and
add
cmpsl
daa
addr16
out
int3
cltd
xchg
pop
dec
outsb
inc
jg
iret
lahf
pop
aaa
xor
adc
leave
xchg
xchg
cs
std
xor
pop
data16
popa
push
sbb
fdivp
jo
dec
mov
popf
fidivl
push
or
divl
hlt
dec
loope
movsl
pop
pop
cmp
les
mov
mov
imul
push
add
xchg
enter
lahf
test
mov
cmp
cs
testl
out
inc
pop
mov
mov
cmp
cwtl
in
ret
mov
das
sbb
ret
adc
mov
push
fnstcw
loop
xor
loope
xchg
push
test
xor
sbb
and
jmp
push
shr
movl
jno
adc
pop
das
xchg
adc
push
sbb
adc
mov
in
lds
jne
lods
push
test
loope
jns
bound
xchg
mov
lret
add
jns
sbb
add
outsl
pop
js
xor
scas
add
rcl
fisubrl
inc
xor
jmp
jcxz
aad
sahf
push
jo
ds
sub
addb
add
and
hlt
dec
inc
mov
push
add
mov
cmc
dec
rorb
shrb
pop
fninit
cs
push
mov
xorl
in
cmp
sahf
mulb
int
lods
dec
insb
movsl
in
mov
aaa
int
add
test
mov
pop
push
ror
mov
dec
fnstcw
cmp
xchg
rolb
out
bswap
push
dec
jae
jg
jne
sub
or
incb
out
int
or
push
ret
shr
gs
dec
or
enter
cmp
scas
lret
or
fisttps
push
imul
mull
lcall
and
or
inc
leave
jne
push
inc
outsb
jb
push
mov
sbb
rclb
jae
outsl
push
popf
ljmp
hlt
dec
mov
out
fcmove
lcall
sbb
subb
fisubrs
inc
xchg
aad
fistps
ror
insl
orb
lret
sub
push
pop
sbb
dec
jae
in
jns
aaa
pushf
jecxz
out
dec
repnz
add
mov
xchg
in
jl
out
and
xchg
stc
jge
push
sub
mov
xchg
stos
xchg
xor
fwait
mov
mov
push
sbb
xorl
les
jb
adc
mov
pop
lcall
cmpsl
cld
arpl
outsb
add
mov
sbb
incb
mov
mov
mov
hlt
jns
adc
add
and
pop
orb
call
push
adc
xchg
mov
jl
in
cmpsl
jmp
mov
jmp
pushf
dec
out
es
push
sub
lcall
mov
push
dec
frstor
or
cmp
adc
adc
adc
cmpsl
jp
gs
mov
loopne
xchg
push
out
sub
into
jmp
pop
loopne
jns
rcll
pop
sbb
gs
fs
jecxz
icebp
movsb
jnp
sbb
mov
jno
out
jbe
incl
test
and
pop
and
pushf
sbb
popf
cmp
sub
stc
lods
out
ja
aaa
dec
loopne
mov
js
adc
lea
pop
sti
cmp
fimull
mov
test
addr16
mov
add
pop
cltd
inc
pop
fistps
daa
mov
movsl
aam
icebp
das
test
mov
pop
daa
mov
imul
dec
inc
cld
jl
push
movsb
inc
jns
hlt
hlt
js
mov
pop
sti
mov
xchg
test
es
popf
mov
out
adc
mov
lahf
add
popf
dec
test
divl
mov
mov
push
xor
add
xor
fidivrs
push
mov
outsb
data16
mov
fiaddl
out
testl
jecxz
mov
dec
jbe
outsb
cmp
popf
sbb
ret
pop
cmpsb
mov
fiadds
xchg
adc
icebp
leave
clc
sub
addr16
xchg
pusha
and
std
sub
cmp
pushf
cmp
lods
adc
sub
xchg
fildll
jns
cmpsl
mov
cmp
pop
mov
pop
rorb
pop
ret
inc
in
inc
cmp
xor
xor
test
xlat
hlt
fs
pop
rclb
pusha
or
daa
jb
fsubr
fwait
jge
add
addb
ret
xchg
jle
sbbb
cmpsl
push
shr
add
jmp
inc
test
jge
sub
mov
xor
add
xchg
or
loope
fcompl
sub
rclb
arpl
sub
xor
neg
dec
sub
pop
add
outsb
pop
fisubrl
xchg
and
ja
pop
std
xchg
mov
fidivs
pushf
das
out
in
cmpsb
stos
xchg
lcall
jle
adc
xor
add
or
jnp
dec
adc
rcll
pop
adc
int
inc
loope
and
aas
push
dec
call
push
popa
mov
and
cmpsl
stos
jg
cmpsb
popa
cmp
cmp
shr
mov
movsl
mov
pop
fsubrl
test
out
xor
mov
fisubs
push
aaa
movl
pusha
xlat
dec
cmpsb
dec
rcr
or
scas
inc
insb
or
aam
lds
cmp
sbb
scas
pop
fs
hlt
xchg
sbb
outsb
mov
sbb
sub
inc
cmp
negl
add
aam
and
imul
jne
aas
dec
mov
pop
adc
lcall
daa
lods
or
ljmp
dec
inc
sbb
popa
push
pop
inc
cmp
or
in
insb
push
mov
pop
sbb
pop
daa
inc
test
imul
stos
push
sahf
das
int3
pop
push
das
mov
dec
ja
or
outsb
out
mov
mov
roll
or
rcrl
adc
and
cld
pop
push
xor
or
in
xchg
inc
jg
cmp
pop
push
xor
lret
adc
inc
jbe
pusha
push
adc
insl
mov
les
dec
pushf
cs
loope
cmp
out
int
or
adc
adc
imul
ret
shrb
ds
mov
js
fbld
mov
mov
js
xchg
nop
push
sbb
dec
aas
outsl
xchg
adc
pushf
jne
cmpsl
stos
aas
pop
insb
mov
jg
pop
fsubr
stos
pop
aas
and
test
inc
rcll
mov
scas
adc
lea
gs
imul
loopne
xchg
push
jnp
pop
cmp
adc
scas
fimuls
add
jmp
pop
sbb
pop
outsl
xchg
in
lret
add
or
mov
inc
clc
insb
sub
mov
xor
fildl
xor
ss
mov
lea
adc
jmp
ret
mov
fwait
mov
dec
xchg
sti
jae
add
cmp
dec
fcmovnbe
jge
mov
fs
adc
push
dec
mov
push
mov
orb
adc
leave
inc
add
lret
jns
fadds
xchg
jmp
dec
mov
fwait
inc
mov
cmp
xlat
into
add
mov
leave
sub
push
inc
pop
insb
mov
les
add
mov
cmp
xor
test
ret
cli
inc
pop
ret
push
cltd
into
dec
xor
jg
out
ljmp
and
push
cmpsl
mov
lret
inc
add
cmp
icebp
shl
jmp
ret
mov
arpl
mov
lods
inc
push
mov
rcl
out
enter
popf
movsb
std
pop
xchg
mov
dec
ja
adc
pop
cmc
sub
pop
xlat
mov
mov
adc
xor
or
jle
add
lea
cmp
sahf
and
pushl
pop
fwait
mov
pop
sub
lahf
add
xchg
pushf
lret
fidivrl
fwait
push
stos
leave
repnz
loop
into
cmp
out
lds
push
shrl
pop
sbb
enter
jo
fisubl
jns
push
ja
out
sti
cwtl
enter
or
adc
or
dec
dec
mov
dec
mov
mov
ficomps
mov
push
loopne
cs
inc
jecxz
and
rolb
daa
in
mov
jae
mov
mov
pop
adc
push
xchg
inc
push
mov
orl
jmp
add
mov
xor
cwtl
lahf
cs
std
push
dec
push
xor
repz
jo,pn
sbb
daa
idivl
adc
popf
or
inc
call
hlt
sbb
ss
shl
xchg
adc
cwtl
shrb
rclb
insl
jg
sahf
cltd
repz
inc
fists
insl
cmc
adc
int3
sti
xor
jecxz
xor
jns
andl
sbb
cmp
shlb
jl
sub
out
pop
andl
push
vmovups
ds
add
sbb
pop
out
pop
gs
sbb
shr
cmp
dec
andl
test
lcall
hlt
out
lahf
mov
gs
cmp
lahf
push
and
dec
adc
pusha
in
in
repnz
adc
mov
mov
ds
stc
dec
andb
jbe
inc
scas
add
out
in
lds
push
dec
add
cwtl
xchg
shl
imul
pop
mov
sub
adc
sti
in
scas
daa
xchg
sbb
sbb
inc
or
push
and
dec
pop
and
repz
inc
push
push
add
das
out
xchg
cli
dec
mov
adc
add
lcall
xchg
mov
cltd
in
mov
cmpsb
mov
mov
dec
cmp
sbb
pop
rcl
adc
dec
mov
cwtl
push
and
pusha
mov
push
mov
fisubrl
addr16
sahf
rorl
cld
insl
jg
insb
rcrl
and
pop
out
jmp
pop
cwtl
ret
xor
mov
xrelease
arpl
xchg
aad
and
inc
stos
es
shrl
inc
or
jbe
sti
mov
mov
mov
js
inc
testl
adc
sub
mov
scas
sub
mov
cltd
pop
mov
rcrb
xor
mov
xor
ja
std
mov
test
mov
pop
xlat
pop
sarb
and
cmp
out
js
mov
hlt
shll
and
push
jl
xchg
push
jb
call
call
rcl
in
dec
jle
out
jecxz
nop
in
jmp
xlat
xchg
flds
int3
or
or
xchg
inc
std
xchg
stos
mov
sbb
dec
jecxz
mov
mov
jbe
xchg
pop
je
mov
push
pop
fildll
out
gs
lahf
iret
subb
mov
rorb
xchg
daa
cmp
xchg
push
pop
les
es
adc
shl
inc
imul
adc
fidivrs
xchg
jge
or
js
lds
mov
jae
int3
filds
xor
pop
ror
stos
fsubrl
out
sbb
dec
push
int3
cmp
mov
or
rclb
repnz
xchg
xorl
in
scas
loope
dec
jmp
mov
test
adc
jmp
jmp
out
out
add
xorb
into
loop
ljmp
andb
js
or
jg
push
and
loopne
pop
dec
jp
pop
jo
lods
lods
mov
lds
push
mov
mov
push
push
add
xor
sub
cs
js
mov
or
adcl
mov
stc
sbb
mov
sbb
mov
movlps
inc
mov
push
dec
or
dec
enter
ror
and
loop
dec
and
xchg
inc
lea
mov
addb
repnz
push
in
jo
mov
add
mov
xor
pop
mov
xor
push
xchg
sbb
cld
jne
ret
popf
sti
mov
mov
aas
jl
movsl
jns
sbb
dec
stos
pop
or
jmp
sub
jp
xchg
das
xchg
xchg
add
insb
sub
pushf
jno
lcall
setae
pop
sub
leave
mov
and
dec
sbb
adc
cmp
cmp
and
fiadds
movsb
dec
inc
data16
jmp
imul
ja
ret
dec
sub
xchg
out
lahf
andl
das
cmp
xorl
push
cltd
out
lods
sbb
pop
inc
add
das
lret
or
jg
mov
cld
mov
lcall
xchg
test
mov
dec
jne
fnstcw
pushf
inc
lods
mov
repnz
jno
xchg
imul
push
cmp
out
adc
cld
leave
and
roll
cltd
inc
popa
cmp
pop
imul
cmc
inc
or
leave
sub
out
lret
iret
mov
out
popf
jg
mov
sahf
add
jnp
aaa
pop
lds
mov
xchg
cmc
jo
cwtl
dec
jmp
cmp
fisttps
les
xor
jns
rcrb
cmp
and
push
dec
arpl
notl
scas
into
cmp
xchg
inc
outsl
adc
mov
pop
sti
add
enter
clc
loopne
pop
xor
xchg
icebp
shll
fcompl
daa
aaa
hlt
push
cmp
cmp
loop
fidivl
out
js
jo
stos
mov
pop
ds
sub
cmpsb
mov
inc
imul
pop
push
fcmovnbe
mov
push
mov
in
jg
pushf
in
sub
cmp
mov
aad
in
stos
movsl
out
xor
stos
cmp
mov
out
fisttps
sti
inc
mov
add
sub
aaa
or
and
pushl
cmp
test
mov
cmp
jnp
push
dec
mov
fldenv
addps
scas
cmp
test
mov
fwait
in
cltd
movsb
std
mov
test
daa
xchg
cmc
add
cmp
pop
scas
pushw
mov
pop
push
pusha
stc
or
fnsave
popf
mov
mov
pushf
dec
add
sub
xor
lock
cmp
mov
pushf
jno
sahf
add
add
test
push
mov
pop
fldcw
sub
sbb
push
jns
imul
test
sbb
mov
inc
insl
xor
hlt
or
jmp
cmp
push
pop
sub
js
cmp
add
loop
stos
pop
fadds
jnp
mov
fisttps
es
push
out
shll
sub
cmp
add
sbb
aam
fsubrs
lods
mov
shrl
les
test
int
cmp
aad
mov
lock
mov
int3
mov
fnstenv
mov
popa
cltd
adc
neg
icebp
or
ljmp
cltd
adc
add
movsl
lods
cmp
push
push
fadds
mov
insb
push
push
sub
or
addb
ret
out
pop
mov
and
leave
shrb
mov
outsl
xor
sti
js
fadd
pop
jno
enter
mov
hlt
sub
push
ja
cwtl
int
and
lahf
pop
or
push
inc
test
cmc
repz
inc
shlb
sbb
das
data16
mov
stc
xchg
mov
ss
jns
xor
jo
mov
out
or
pusha
and
xlat
push
fistpll
mov
sti
cmp
subb
shlb
cmp
xchg
lods
xor
push
xchg
gs
sbb
inc
cmpsl
ljmp
mov
add
cs
test
das
or
stos
xchg
loop
mov
jge
and
ficomps
mov
jbe
icebp
inc
es
lcall
push
jo
mov
pushf
flds
adc
das
enter
push
and
mov
test
ror
hlt
or
dec
push
lock
xor
std
and
imul
enter
push
push
rcll
bound
pop
pop
pop
cli
push
aas
cwtl
addr16
fdivrl
lock
aas
je
std
or
adc
int
pop
or
notb
add
out
cmp
aaa
sub
popf
push
push
jecxz
or
jno
mov
into
in
daa
pop
fwait
sub
push
mov
add
fs
mov
loope
jno
cmp
inc
inc
test
sbb
stos
idivb
xor
cmp
arpl
ret
cwtl
dec
popa
inc
pop
int
cmp
in
push
shrb
aaa
and
js
rcrl
xchg
xchg
or
mov
sbbb
xor
arpl
dec
enter
pop
lods
pop
add
add
or
fwait
loope
or
orb
push
lcall
jmp
popa
xor
adc
mov
clc
sbb
mov
sbb
aam
cltd
outsl
addr16
movsb
out
rcrb
subl
outsl
lock
out
dec
push
imul
std
shl
cmc
inc
push
cmp
shll
jecxz
out
mov
stos
lock
xor
xchg
in
add
dec
adc
pop
loopne
add
fsubr
push
jb
xchg
pusha
rclb
xchg
sbbb
ret
dec
movl
mov
and
fcmovu
mov
add
sbb
imul
lock
add
cmpsb
aas
dec
inc
push
gs
divl
and
add
idivb
subb
adcl
jmp
mov
sub
std
pop
in
push
insl
cmp
daa
jb
and
repnz
test
out
mov
dec
rcrb
mov
popa
fs
fdivr
in
mov
and
das
adc
fsubr
mov
pushf
jae
lods
fstpl
icebp
aaa
mov
outsb
and
dec
jl
es
xor
test
shll
insl
adc
fiaddl
mov
add
mov
aaa
and
inc
xchg
mov
push
or
sub
lods
stos
cmp
xorl
test
iret
mov
push
xchg
mov
cmp
or
dec
aam
mov
lea
pop
fstps
sar
xchg
sub
ss
mov
add
fldln2
out
lcall
xchg
out
aaa
jg
push
pop
sbb
pop
sub
clc
icebp
or
leave
fmul
xchg
xor
inc
ljmp
imul
add
je
ret
insl
in
dec
mov
data16
es
fldenv
test
jle
nop
push
js
cwtl
xchg
dec
inc
mov
add
out
push
aaa
iret
dec
jg
inc
lahf
pop
stos
jnp
out
or
stos
pop
sub
movsb
out
cmp
mov
pop
sub
dec
imul
mov
mov
cs
test
cmc
les
inc
mov
in
mov
dec
xchg
std
mov
int
test
popl
fwait
cmpb
sar
dec
mov
jp
jbe
push
xchg
and
shr
insb
push
mov
sub
inc
jo
xchg
mov
xlat
jmp
push
cld
loopne
xchg
nop
js
je
outsb
and
lock
popf
cmp
inc
stc
leave
mov
jns
dec
or
pop
cmp
add
xlat
xchg
mov
out
iret
outsl
mov
icebp
sbb
mov
or
in
jle
cmp
fcomps
in
mov
push
sub
sbb
dec
and
sub
andb
lods
ret
jnp
mov
mov
lods
mov
add
pop
dec
jg
fimull
fstpt
je
repnz
adc
mov
xchg
sbb
or
ja
idivl
negb
out
call
outsl
sar
xchg
xchg
ds
call
xlat
lods
mov
inc
aad
lret
inc
xchg
mov
out
je
and
push
les
and
scas
loopne
stc
fists
std
and
aas
ret
fs
sbb
jb
arpl
popa
and
mov
mov
push
pushf
cld
insb
in
adc
dec
jbe
jne
test
pusha
fldl2t
mov
popf
mov
insb
cmp
push
or
mov
xor
scas
mov
fldt
pop
jl
stos
xor
lcall
cmp
out
lods
dec
out
xchg
dec
mov
adc
fsub
call
cmp
out
mov
dec
orl
mov
mov
mov
inc
int3
or
mov
in
idiv
pop
cmpsl
insl
sbb
jnp
lcall
jle
add
jbe
jns
leave
fcoml
add
push
arpl
sti
movb
pop
out
pop
loopne
scas
and
ja
inc
cmc
in
pop
mov
lock
stos
push
cli
hlt
or
fwait
dec
addr16
out
jb
adc
divl
jecxz
fs
xchg
imul
cmp
jg
nop
inc
std
cmp
stc
inc
mov
jns
scas
outsb
xchg
out
xchg
jbe
dec
pop
jno
out
mov
outsl
mov
pop
loop
xchg
cld
movsb
subl
pop
fisttps
mov
push
pop
mov
mov
rorl
mov
clc
adc
pop
fwait
lds
adc
push
push
xchg
roll
into
add
mov
in
ret
push
xor
inc
fbstp
mov
ret
push
fwait
adc
into
add
cmpsl
cli
loope
stos
lods
inc
adc
outsl
out
mov
data16
dec
push
mov
fidivs
out
enter
and
inc
scas
cmp
fs
sub
xchg
inc
or
pinsrw
add
mov
ss
scas
bound
cs
sti
punpckhbw
stos
pop
jnp
push
xchg
movsl
psrlw
sbb
mov
shrl
test
xchg
mov
or
shll
int
repnz
push
shrl
ret
pop
inc
sub
js
daa
xchg
mov
cmpb
sar
xchg
xchg
pop
inc
paddusb
lock
lret
rclb
ss
inc
inc
add
imul
adc
pop
xchg
or
pop
ja
movl
hlt
sbb
adc
xlat
xor
int3
test
xor
mov
mov
scas
sub
lret
xchg
jmp
mov
cmp
cmc
xor
es
mov
daa
sbb
and
sbb
outsb
mov
daa
sti
imul
xchg
and
and
dec
jo
xor
shll
aas
subb
adc
push
pusha
hlt
inc
lock
fmuls
xchg
mov
in
pusha
imulb
xchg
filds
jbe
xchg
mov
fcomps
add
mov
loopne
cmpl
xchg
sbbl
jle
fiadds
push
orl
mov
int3
jno
pop
dec
mov
dec
sbb
mov
mov
sbb
aad
mov
pop
pop
inc
nop
hlt
jae
inc
ljmp
lods
cli
addr16
push
rolb
insl
or
lock
xlat
aas
je
jl
mov
std
jne
mov
stos
inc
push
or
fistpl
lods
xchg
in
shrl
jno
das
xchg
add
and
pusha
jl
lahf
mov
icebp
xor
fprem
pop
vpandnd
repz
dec
or
jmp
inc
shlb
xchg
jno
dec
int
cs
dec
dec
and
mov
jge
xchg
inc
push
adc
xchg
push
mov
cmp
jecxz
inc
aaa
les
inc
addr16
dec
or
push
sbb
and
movsl
and
adc
daa
adc
xchg
sbb
fmull
cmpsl
push
inc
sbb
or
es
test
inc
std
push
lock
xchg
jecxz
and
lods
or
fcoms
push
lret
jecxz
pop
cld
dec
ljmp
pop
shll
cld
lods
xlat
jb
and
jmp
mov
loopne
sbb
idivl
cmpsb
filds
std
or
dec
add
shll
cmp
xor
xchg
adc
add
adc
and
jecxz
jg
dec
mov
jne
sahf
out
ret
lcall
leave
adc
jb
xor
mov
sbb
mov
mov
jne
pop
sbb
out
sub
fists
test
mov
aad
push
stos
lock
pop
cmpsb
lahf
push
shrl
lods
cmp
dec
movsb
mov
mov
mov
lock
call
ja
mov
sub
repnz
iret
mov
data16
nop
lock
es
ss
or
in
add
sbb
shrl
and
shlb
mov
fsubrs
push
imul
shl
mov
out
inc
mov
das
hlt
jbe
sbb
cmp
imul
push
dec
mov
or
subl
sub
sbb
push
fnstenv
mov
pushf
sbb
add
inc
sub
push
repnz
xchg
lds
xchg
jge
rclb
cmp
sti
test
ljmp
inc
mov
mov
flds
repnz
cmp
xchg
jge
pop
cmpsl
xor
loop
jbe
pop
cwtl
dec
cmp
rcll
cmpsb
mov
xor
ja
lods
roll
loopne
xor
inc
adc
out
fdivr
cld
std
xor
mov
jmp
lods
mov
adc
push
sbbb
cwtl
jmp
pop
aad
add
or
xchg
inc
fists
xchg
scas
repz
xor
cmc
cmpb
xor
pop
popf
jl
aas
and
das
push
loope
cmpsl
ficoms
sub
mov
outsl
outsb
and
push
and
mov
test
add
mov
push
jns
inc
lods
mov
cs
sub
xlat
stos
sbb
rcrl
pop
mov
sub
push
sbb
xchg
lods
je
int
scas
scas
adc
bound
scas
fistpll
fldt
push
sbb
lsl
movsb
mov
mov
pop
sbb
lock
cs
rolb
adc
loope
nop
ret
or
aam
inc
mov
mov
add
inc
not
cmp
add
ljmp
test
rcr
sti
sbb
pop
outsl
xchg
out
lret
movsb
or
loopne
lfs
adc
xor
data16
adc
mov
imul
jle
xchg
push
mov
mov
pop
enter
xor
test
jecxz
scas
lods
mov
xchg
pop
mov
in
loope
pop
cmp
in
mov
xchg
pop
inc
mov
js
fucompp
mov
mov
xchg
fs
inc
ffreep
xorl
mov
cmp
lods
add
sti
sahf
dec
lds
scas
dec
stc
leave
mov
movsl
push
add
adc
in
fcmovnb
cli
xchg
fwait
jg
mov
mov
jg
loope
rcrl
mov
sub
aad
fwait
xor
mov
sub
jne
mov
test
into
outsl
std
mov
stos
negl
pushf
outsb
lret
inc
push
inc
mov
cmpsb
dec
cmp
daa
int3
xchg
push
stos
loop
lock
sbb
and
jge
push
movsb
push
jb
in
imul
pop
jne
fcoml
xor
jmp
and
xor
nop
test
roll
lds
xor
out
fistl
add
mov
push
inc
fs
sbb
push
js
negl
inc
pop
and
clc
jg
jae
rol
sbbb
or
idivb
arpl
mov
inc
xchg
loop
inc
lcall
jp
jecxz
jle
ret
dec
sub
dec
xchg
cmpsb
out
push
lea
dec
int3
jmp
addr16
mov
pushf
sbb
sub
inc
out
add
jecxz
inc
out
stos
imul
dec
js
inc
cmp
sbb
inc
jle
xor
dec
mov
push
jno
mov
sbb
rcrb
jbe
leave
orl
leave
js
xchg
add
xlat
mov
shr
enter
mov
or
mov
dec
mov
test
mov
ret
fninit
lahf
push
cs
aam
lds
ja
dec
insl
sarb
lock
test
pop
mov
ret
push
dec
jge
jl
lret
jecxz
mov
and
cmpsl
addr16
sar
in
jle
mov
fcmovnb
movsb
inc
stos
xor
lods
mov
jb
ss
rol
popf
imul
mov
fistl
sub
inc
sbb
jns
std
mov
jmp
pusha
jnp
mov
cmpsb
add
in
addr16
rcrb
mov
lret
lahf
aaa
inc
cmpsb
lret
pop
mov
push
xor
xor
in
int3
fmul
into
lcall
mov
sub
cli
cmpsb
int3
pop
inc
lahf
addr16
fimull
and
adc
mov
or
hlt
lret
imul
clc
icebp
dec
sub
enter
pop
xor
sbb
negb
inc
push
xor
cmp
in
xchg
pop
call
fadds
je
call
jg
dec
clc
les
hlt
test
mov
sbb
add
lds
out
dec
sub
rcl
lret
es
add
and
adc
inc
bndldx
push
shll
adc
xchg
sbb
test
add
push
ret
loopne
mov
cli
mov
in
dec
lahf
mov
stos
leave
and
out
add
sti
cmp
rcl
push
mov
sbb
fwait
push
stos
push
cwtl
and
sbb
fisubrl
ja
dec
jecxz
and
mov
jp
lret
fimull
insl
aaa
lret
shl
or
inc
push
and
mov
das
mov
fistpl
shlb
push
mov
jnp
movsb
out
push
rcrb
push
in
pop
rcrb
ret
ret
lds
cmp
inc
sbb
push
stos
ror
in
xchg
cltd
int3
in
mov
fbstp
mov
xlat
xchg
arpl
jae
test
ss
jmp
mov
sub
cmc
comiss
addr16
xchg
dec
and
xor
jl
cmpsb
gs
add
lcall
ja
xchg
jmp
jne
loop
sub
nopl
jno
cs
rcrl
jnp
xorl
in
out
jns
rcl
stos
jbe
cmp
hlt
push
mov
xor
cmp
lcall
lahf
cmp
daa
cmp
xchg
imul
sbb
mov
xorl
or
sbb
mov
in
stos
mov
iret
nop
sarb
jecxz
pop
imul
cmp
lods
mov
testl
push
adcl
xchg
adc
repz
ror
lock
push
jne
pop
dec
pmuludq
cs
rcrl
sahf
fwait
adc
ret
testl
data16
push
push
push
mov
adc
and
out
or
jmp
inc
pushf
xor
ja
insl
and
adc
roll
push
jne
in
add
out
popa
dec
add
int3
inc
add
lods
hlt
inc
sbb
pushf
and
jnp
ljmp
sub
xor
xchg
out
sbb
pop
dec
cmp
test
shrb
ret
aam
cmpsb
adc
pop
ret
jbe
inc
inc
add
mov
sub
xchg
loop
pushf
fistpl
rol
xchg
fsubs
je
aaa
lock
jo
and
fcmovbe
xchg
inc
insb
imul
or
mov
lret
push
mov
aas
dec
push
or
fstl
cmp
int3
les
sub
mov
xchg
dec
xchg
dec
cld
and
test
sub
sub
xchg
or
insl
add
in
adc
in
adc
and
jl
stos
test
push
lahf
pop
jle
fucom
pop
sbb
xor
cmpsb
mov
xchg
mov
in
and
sbb
leave
aad
mov
jnp
jo
sbb
adc
dec
bound
and
popf
fdivs
rcll
mov
lret
pop
movsb
or
mov
lahf
lcall
inc
dec
sub
mov
les
push
push
mov
fstpl
ss
add
push
fwait
xchg
push
lret
mov
dec
mov
xchg
mov
mov
inc
jnp
fsts
xchg
jb
xor
sub
test
lahf
idivb
mov
xor
fs
mov
arpl
cmp
loope
arpl
movsl
fisttps
imul
jl
and
movsb
mov
insb
das
rcrl
mov
dec
call
pop
fisubrl
xchg
cltd
inc
or
frstor
cmc
push
xchg
enter
add
mov
xchg
adc
dec
std
out
mov
mov
iret
sub
outsb
sub
jp
mov
add
pop
insl
sub
stos
fdivrl
adc
nop
adc
jnp
idivw
repz
jl
fisubrs
nop
repnz
out
mov
xchg
lea
and
jne
outsb
test
testl
in
pop
lret
into
xchg
lahf
outsl
test
rcl
pop
lock
mov
xchg
pop
mov
mov
or
lret
mov
push
adc
adc
clc
fcmovne
lock
inc
sub
in
int3
pusha
jo
pop
adc
inc
ficomps
or
fwait
jge
jge
xlat
fdivrl
out
lret
mov
jp
dec
mov
dec
pop
add
out
or
std
and
jo
mov
fisttps
in
push
mov
fistpl
adc
or
inc
dec
push
add
lahf
pop
or
sub
loop
and
push
or
add
iret
pushf
outsb
testl
mov
push
add
in
sub
lods
fwait
xchg
dec
mov
ret
rcr
shrl
sub
fisubl
lods
push
xorl
mov
movsb
pop
cld
jae
sub
lods
cld
je
out
xor
push
cs
mov
push
jbe
fwait
lds
jecxz
push
cmp
jecxz
es
addb
clc
dec
sbb
stos
cmpsb
pushf
shll
xchg
lock
sub
sub
and
fsts
es
adc
xchg
xchg
adc
jns
sub
sahf
cwtl
outsb
mov
pushf
fs
ror
push
xchg
iret
out
mov
fistl
inc
pause
das
xor
outsb
ss
add
aad
movsl
test
cli
icebp
push
sub
dec
cmp
sub
out
shrb
clc
imul
enter
sbbl
xchg
xchg
cmp
popf
in
xchg
loope
ret
push
inc
cmp
dec
ja
call
mov
mov
xchg
push
fisubrl
jge
adc
lret
cli
out
fldt
mov
rol
mov
sbb
mov
sub
push
inc
es
jmp
pushf
xor
cmp
jecxz
data16
inc
push
lods
cltd
or
xchg
sub
sarb
xchg
mov
loop
das
and
inc
mov
push
lret
shlb
out
xchg
insb
into
das
cmp
sahf
aaa
scas
movl
int3
icebp
stos
or
nop
xchg
ss
jp
rorb
cwtl
or
inc
fsubrs
and
sub
sbb
and
icebp
jb
shll
push
push
iret
leave
xchg
lock
sub
sbb
add
push
xor
mov
mov
push
shll
lahf
pop
xor
push
push
push
lret
sti
in
inc
push
mov
or
pop
xchg
mov
test
call
divb
call
inc
xor
push
adc
xor
sbb
fdivrs
mov
pushf
ss
stos
and
lcall
imul
scas
cs
jge
xchg
enter
and
sub
cmp
addr16
and
xchg
cmpb
sarl
jo
lock
inc
sub
inc
data16
stc
std
mov
mov
mov
mov
jne
xchg
add
int
push
cmpsl
sarl
or
lock
push
lcall
movsl
mov
enter
into
push
cmc
fwait
and
in
or
ljmp
mov
push
mov
inc
cmpsl
jb
in
out
cmp
in
pop
movsb
dec
incb
jb
movsl
jp,pn
xchg
or
mov
enter
out
scas
jp
sbb
repz
cmp
scas
pop
out
pop
aad
cmp
sub
cmp
push
mov
mov
mov
jb
or
dec
js
dec
aaa
xchg
sti
scas
scas
enter
dec
sub
mov
pop
jnp
dec
cmp
jb
lods
out
test
test
adc
add
add
imul
outsb
inc
and
jg
bound
insb
testb
sbb
scas
push
adc
xor
add
jecxz
stos
adc
mov
cwtl
lods
adc
xchg
lds
xchg
pop
xor
ja
hlt
gs
int
and
stos
scas
in
movl
inc
into
pop
gs
adc
sbb
nop
xchg
fwait
insl
push
or
ja
pop
aaa
xor
xchg
push
pop
lock
inc
inc
scas
and
jle
inc
inc
xor
rclb
scas
jne
lahf
fcmovne
xor
imul
or
aam
fcoml
cli
and
push
sub
push
xor
cmp
movsl
int3
mov
pop
pop
ja
pop
mov
add
pop
sti
test
and
and
lret
dec
popf
iret
add
addr16
roll
call
stc
xor
lods
inc
sbb
fdivrl
les
idivl
mov
adc
xchg
cld
add
jg
mul
lods
cltd
loop
negl
xchg
aam
mov
mov
xchg
mov
push
jg
popf
pop
ss
push
mov
pop
mov
jb
lods
xchg
fs
mov
mov
mov
lea
lods
push
mov
adc
or
xchg
and
dec
jmp
enter
xor
fs
xor
mov
lahf
xchg
lcall
mov
stos
and
push
aam
or
mov
xchg
dec
fcomps
bound
xorl
cmpsb
rcrl
sub
xchg
cmc
icebp
rol
pop
inc
ret
mov
stos
sub
dec
sbb
hlt
gs
mov
out
fnsave
fdivrs
in
subl
jmp
or
push
jge
or
lret
push
mov
and
out
dec
lods
push
addr16
inc
in
movsb
add
xchg
jbe
dec
adc
jg
pop
mov
cwtl
scas
je
ss
push
addr16
gs
inc
push
sbb
fimull
adc
mov
mov
push
push
xchg
shrb
mov
sub
inc
or
jle
jecxz
jns
xchg
lea
mov
xor
jp
dec
inc
pop
fdivr
int
ljmp
hlt
pop
mov
and
arpl
ret
push
and
cmovl
std
pop
mov
adc
sbb
ret
loope
sbb
inc
and
daa
cli
dec
les
inc
rolb
mov
rcrb
mov
pop
xor
lcall
dec
imul
inc
sub
fwait
mov
pusha
sbb
je
cwtl
nop
addr16
rcrl
rcll
jnp
repnz
mov
xor
mov
test
mov
mov
pop
ret
mov
or
lock
inc
dec
mov
adc
xchg
push
lock
cmp
jl
and
add
stc
push
or
xor
loop
dec
jg
outsb
mov
pop
sbb
jmp
xchg
mov
stos
jno
arpl
sbb
mov
jl
or
shll
jae
pop
cmp
shrl
push
jnp
sub
mov
push
popa
icebp
cmp
sbb
cmpsl
into
aam
pop
xchg
xchg
inc
cltd
lods
addr16
popa
lcall
xchg
fists
mov
xchg
std
pushl
xchg
and
or
jmp
mov
xor
stos
sub
add
sub
push
mov
jle
xor
push
cmp
lods
inc
mull
push
cmpsl
les
rcrl
xchg
add
push
sahf
enter
cltd
popf
jle
lods
dec
in
add
mov
outsb
inc
mov
mov
and
jg
mov
dec
test
cld
movsl
lods
jb
out
jbe
add
dec
aad
cmp
push
push
aam
popa
js
flds
shl
or
shrl
xchg
ret
mov
rolb
fcomps
or
test
aaa
ret
loop
lret
aaa
ds
xchg
lds
js
dec
pop
sub
shlb
sub
aaa
xor
aad
daa
inc
iret
lahf
and
jae
cmp
jg
push
int3
shl
cld
pop
inc
pop
sbb
or
push
fucomp
adc
nop
push
xor
outsb
iret
f2xm1
out
adc
and
fwait
into
jg
and
dec
scas
adc
push
cmp
adc
ja
leave
call
mov
movsl
add
push
es
add
stos
pop
outsb
mov
push
and
mov
and
cwtl
out
daa
xchg
lret
mov
jo
adc
xor
ret
adc
inc
mov
inc
hlt
and
pop
inc
jl
jmp
or
mov
or
dec
pop
mov
lds
cs
push
pop
mov
scas
or
stos
sub
inc
jge
adc
mov
mov
jg
leave
loopne
xor
or
lret
xchg
or
adc
aaa
loop
push
add
pop
outsb
and
mov
dec
fnstcw
outsb
mov
mulb
push
cmp
jnp
sbb
std
pushf
jne
mov
mov
inc
ficoms
cld
les
in
jp
cmp
pop
nop
inc
fbld
push
fdivr
or
fcoms
rcrl
fmuls
mov
loop
ja
lds
lods
inc
pop
push
sub
push
fwait
cli
mov
stc
adc
mov
dec
jge
inc
xor
fildll
js
or
push
or
add
mov
imul
dec
es
jmp
cmp
mov
lock
mov
out
pop
nop
rcrb
adcl
jg
lahf
lcall
shr
aam
and
lret
dec
sub
add
jl
adc
out
stos
ret
inc
mov
mov
dec
sbb
mov
sub
loopne
lcall
xchg
pop
hlt
cmp
mov
leave
mov
add
pop
cmp
pop
mov
addr16
or
pop
lods
loop
pushf
mov
int3
js
fcoms
out
jo
jp
cmpsl
lret
cmp
mov
lret
cli
call
mov
mov
std
cmp
or
adc
inc
mov
adc
ret
xor
cmp
ret
hlt
outsb
outsl
mov
sbb
inc
cmp
jno
jg
xchg
pop
call
push
xchg
hlt
pop
adc
mov
hlt
sbb
test
mov
neg
aam
push
jno
push
int
dec
and
nop
cmpsb
pop
out
scas
jmp
out
and
sub
xorl
and
push
xchg
xlat
mov
movsb
sub
subb
subl
insl
jnp
or
test
pop
aas
rclb
loope
imul
lcall
stos
or
rorb
aam
fsubl
fildl
inc
aaa
jmp
cwtl
aad
scas
pop
mov
loop
and
xchg
mov
mov
sarb
sbbl
rol
insl
fistpll
mov
idivl
cmp
jp
xchg
fucomip
orps
dec
inc
push
cltd
daa
dec
mov
fcomp
enter
xor
jne
and
push
jnp
and
adc
imul
lcall
jg
fists
xchg
repz
push
lock
jg
clc
cli
imul
out
sbb
sti
sbb
int
dec
das
sub
rolb
pop
int3
push
adc
sbb
pop
mov
sbb
mov
imul
movsl
mov
xor
mov
lahf
add
scas
xor
cmpsb
pusha
pop
or
xchg
divl
out
pop
push
dec
out
mov
data16
test
rolb
imul
loope
push
addr16
mov
push
sub
add
or
out
cli
add
sub
dec
mov
sahf
cld
daa
jl
sub
cmp
hlt
inc
push
push
jp
xor
sub
insb
pop
sbb
mul
or
enter
pusha
scas
dec
out
jnp
outsl
sub
bound
xchg
pop
imul
lcall
sbb
jbe
and
shll
add
push
sahf
mov
adc
mov
xor
mov
pusha
jp
rolb
xor
jae
cld
cs
cmpsl
insb
xchg
clc
popf
dec
push
arpl
dec
lods
mov
xor
push
sti
push
xchg
cmp
pusha
cmpsb
cmp
imul
mov
outsl
out
mov
out
js
shlb
popa
fistpl
xchg
mov
pushl
sub
jno
mov
daa
xorb
js
jae
adc
ds
adc
out
dec
add
subl
popf
shlb
mov
movl
aas
into
scas
loop
in
mov
inc
jmp
icebp
jae
mov
hlt
jecxz
jb
aam
adc
cwtl
add
fdiv
mov
jp
nop
xor
sub
and
icebp
mov
xor
les
push
dec
cmp
mov
jmp
or
in
pop
cmpsb
xchg
sbb
mov
sub
fsts
pop
ret
mov
push
xchg
rorl
jp
xchg
jmp
add
test
outsl
imulb
jg
insl
stos
sbb
or
dec
out
sub
push
mov
stc
xchg
out
jp
test
in
cmpsl
or
repnz
imul
and
mov
fistps
mov
mov
jl
sub
sti
lret
mov
movsl
pop
scas
imul
ror
push
repz
mov
mov
mov
sub
mov
add
and
adcl
mov
push
out
cmp
mov
mov
iret
dec
sahf
push
sarb
dec
or
sub
push
mov
cld
xor
dec
xchg
ret
jo
mov
or
test
aam
lods
mov
fs
add
mov
test
addb
add
inc
push
mov
and
jae
cltd
sarb
dec
xor
push
or
jnp
rorb
mov
push
test
xchg
out
bound
push
or
xchg
rorb
insl
mov
int
cmpsb
xor
xor
movsl
int
pop
sub
scas
xor
add
call
pop
sbb
fwait
mov
push
fwait
jne
scas
xor
pop
stc
arpl
inc
push
mov
adc
mov
adc
cmc
out
aaa
lret
adc
mov
lds
add
cmp
ret
gs
mulps
push
cwtl
in
sub
cmp
and
pop
shlb
sub
int3
push
pop
fidivrl
add
lret
pop
dec
xor
repnz
push
gs
or
push
dec
sbb
arpl
jmp
adc
mov
js
inc
daa
xor
xchg
mov
push
stc
std
cmp
rclb
xor
movsl
pop
orl
sub
lret
cmp
jb,pt
pop
imul
pop
fisttpl
jnp
js
std
jle
movsb
in
inc
in
arpl
fsub
out
pop
test
xlat
mov
movsb
andb
mov
xor
dec
inc
cmp
mov
subb
push
xchg
sub
xchg
das
in
push
lds
adc
pushf
pushf
jno
or
jge
ret
in
movb
aam
sub
idivl
xchg
daa
cmp
lds
add
push
jecxz
sub
mov
or
jecxz
sti
pushf
xchg
mov
testl
inc
pop
and
int3
aad
outsl
std
inc
pop
push
fstpl
xor
lea
add
loope
jo
orb
outsl
push
jle
xchg
push
jb
out
or
cmc
movsb
shl
jle
mov
lds
cld
jp
ret
push
sbb
push
mov
je
mov
out
adc
jb
aas
cmpsb
mov
mov
loopne
sub
out
add
outsl
std
xchg
faddp
iret
mov
and
inc
lods
in
sub
out
fcmovbe
dec
pop
dec
mov
int3
fnstenv
or
or
pop
and
fadds
xor
xchg
inc
mov
mov
sbb
and
es
movsb
test
loope
arpl
test
add
leave
clc
aaa
pop
addr16
add
pusha
adc
cmpsb
xchg
push
dec
movsl
ror
rcr
xor
mov
lahf
clc
fwait
push
inc
sub
jb
repnz
or
int
sub
pop
push
lcall
fidivrl
mov
out
cmp
nop
pop
int
das
xchg
dec
mov
test
mov
std
loope
ljmp
push
adc
or
dec
pop
push
test
mov
daa
lods
mov
or
xor
sbb
cld
mul
mov
mov
add
push
fdivrs
aam
or
call
lods
faddl
lds
cmp
and
fnsave
pop
mov
sub
aaa
decb
jmp
xchg
inc
mov
inc
jmp
jno
mov
mov
out
rclb
mov
xor
inc
or
xor
sbb
pushf
jp
js
je
jns
loop
sti
ss
movsl
cli
xchg
stos
add
ja
fidivrs
icebp
arpl
mov
inc
mov
mov
mov
mov
faddl
faddl
add
gs
pop
xchg
dec
addr16
jns
lds
in
dec
adc
cld
mov
xlat
mov
xor
insl
pop
mov
cmp
jno
adc
adc
pop
movsl
jmp
into
js
loop
ss
dec
dec
jae
sub
stos
add
fs
add
cmp
cmp
adc
movsb
fwait
push
popa
sbb
addl
jns
add
ss
ror
lahf
inc
xchg
xchg
xor
sti
xor
ret
mov
xchg
jns
push
cmp
mov
jns
push
cld
and
ds
xor
mov
int
lahf
dec
sub
ljmp
in
bound
mov
inc
nop
and
pop
push
call
sub
insb
xlat
int
xor
fwait
push
jo
stc
add
outsl
test
adc
jmp
in
push
in
pop
cmp
in
in
jmp
mov
mov
ret
movsl
stos
cli
ja
pop
sahf
or
test
pop
cwtl
push
ljmp
dec
ret
mov
or
std
adc
and
or
cwtl
mov
and
push
shlb
inc
add
sub
aad
or
xchg
mov
add
cmp
scas
add
or
mov
push
std
repz
pop
pop
les
pop
sub
jnp
jnp
adc
dec
pop
xchg
and
daa
enter
loopne
sub
mov
je
dec
push
jcxz
faddl
push
xor
lahf
sahf
push
jl
sub
es
shl
add
shll
jmp
pop
mov
push
lods
sub
lock
mov
inc
das
mov
jge
shr
mov
and
icebp
pop
pop
cmp
pop
xchg
sub
or
pop
jge
sti
inc
inc
call
add
mov
daa
or
shll
mov
jecxz
and
xchg
ficoml
subb
jnp
inc
mov
int
je
jo
xchg
sbb
repz
icebp
xchg
cltd
sub
push
pop
aaa
sti
fimull
xchg
xor
mov
mov
jb
je
hlt
aas
or
aaa
sub
sbb
bound
insb
push
test
imul
aad
cmp
lock
mov
insl
imul
and
bound
mov
inc
jmp
jge
inc
mov
rcl
lcall
aas
inc
inc
lds
jnp
jb
push
push
shll
mov
outsl
adc
call
sub
mov
orl
sbb
mov
mov
and
je
inc
leave
xor
inc
jmp
xor
arpl
lea
rorb
js
aad
inc
or
or
mov
xlat
out
sarb
int3
jo
inc
lods
xor
sti
add
loop
mov
fistl
lret
int3
push
sub
fcomi
inc
xchg
leave
push
push
sub
fisttpl
pop
fs
adc
lcall
lds
bound
jmp
inc
and
sbb
jbe
aaa
in
pop
xchg
pop
inc
inc
fisubs
in
mov
jns
sub
mov
cmc
mull
push
scas
jmp
mov
ficompl
and
scas
dec
out
add
scas
inc
mov
daa
xchg
mov
inc
cld
fwait
mov
rcrb
adc
bound
push
pop
pop
cs
mov
iret
enter
je
pop
or
loop
cs
add
int
mov
lock
int3
mov
nop
sti
pusha
xchg
pop
fbstp
cmp
inc
sub
repz
movsb
mov
int3
dec
fstpt
dec
mov
push
shlb
xchg
jne
ja
xor
xchg
add
pop
add
sbb
push
dec
popa
mov
dec
scas
adc
dec
adc
sahf
jbe
icebp
jne
ret
adc
sti
or
stc
js
outsb
mov
in
adc
pop
pop
leave
add
pop
test
test
push
sti
jecxz
inc
xchg
shll
scas
fsubp
pop
or
jmp
push
stc
push
dec
icebp
stos
xor
xchg
pop
in
mov
cmp
and
div
mov
outsb
lcall
sub
adc
or
sbb
daa
pop
and
fstl
psubq
sub
hlt
mov
add
test
mov
jge
xor
js
shlb
pop
or
adc
je,pn
mov
nop
pop
or
push
sub
jl
ss
outsb
mov
fimull
lret
adc
xor
in
sub
mov
push
loop
sub
hlt
dec
lods
mov
lret
mov
pop
pop
lock
dec
stos
inc
test
inc
lea
add
minps
add
xchg
adc
loope
lsl
and
xor
jae
jo
popf
inc
mov
mov
xchg
push
pop
nop
mov
pop
pop
dec
or
or
mov
data16
pop
loopne
addr16
lds
filds
js
mov
mov
orl
ss
aaa
outsl
mov
fabs
ds
pop
sub
loope
sub
mov
mov
dec
sub
push
pop
fistpl
int
xchg
push
sub
aam
pop
inc
icebp
jg
popa
ret
push
jp
js
dec
lret
es
dec
xor
mov
pop
ja
push
add
mov
cmp
jp
rclb
int
cli
or
es
push
sbb
test
xchg
push
andl
xor
push
dec
daa
mov
mov
mov
mov
cmpsb
jmp
in
or
inc
push
pop
addr16
negb
adc
cmp
cmpsb
add
dec
test
cmp
rcl
das
es
lret
cmpsb
jnp
mov
inc
pushf
sub
xchg
sub
int3
jge
jb
mov
adc
xchg
sub
incb
loopne
sarb
cli
cwtl
sub
iret
sub
push
jge
pushf
adc
fcmovnbe
cwtl
or
pop
push
outsl
hlt
mov
jmp
aad
sbb
jbe
dec
mov
into
pop
push
aas
imul
arpl
sti
fs
lea
xor
in
push
add
mov
out
rolb
xor
mul
scas
adc
rolb
sub
pop
jo
mov
xchg
cmp
arpl
add
mov
cmp
fnstenv
adc
xchg
xor
insl
push
xchg
sub
std
hlt
add
jcxz
mov
mov
cmpl
sbb
fwait
cltd
mov
rep
insl
mov
jl
je
outsb
nop
xor
in
iret
cltd
hlt
push
icebp
mov
out
xchg
mov
pushf
xor
les
or
cmp
mov
lds
ds
repz
mov
outsb
pop
popf
fiaddl
fmuls
inc
mov
int
je
je
sub
fbld
mov
adc
cmp
out
jg
into
jns
sbb
push
sbb
hlt
movsl
sbb
mov
dec
dec
daa
xchg
ja
jnp
jl
daa
pop
mov
mov
cs
jl
push
add
push
je
icebp
adc
push
data16
xchg
push
mov
adc
call
mov
and
add
fcmovbe
fisubs
dec
adc
aam
negb
imul
loope
dec
xor
fdivs
cltd
push
jbe
mov
icebp
xchg
sbb
and
cmp
outsl
sbb
pop
xchg
int3
lea
repz
shlb
rorb
pop
add
nop
or
jecxz
inc
dec
dec
jno
icebp
jne
and
jle
dec
imul
sbb
faddl
mov
scas
in
and
and
jecxz
or
mov
imul
movsl
iret
repnz
dec
xchg
sahf
es
in
sarl
mov
xchg
loope
cmp
dec
cltd
fwait
push
jg
mov
jmp
daa
fs
jl
mov
mov
stos
mov
gs
xlat
push
mov
mov
popf
add
movsb
das
ret
xchg
hlt
xor
int
aaa
sbb
shr
popf
js
push
dec
repz
mov
sub
scas
jp
fildll
jl
mov
cmp
rol
mov
inc
test
insb
in
mov
pop
fidivs
jmp
xchg
pop
mov
sub
xor
repz
xchg
mov
jne
clc
pop
mov
push
or
adc
sub
out
loop
ss
repz
push
into
add
or
sbb
xchg
pop
mov
mov
cmp
icebp
loope
jno
jl
sub
shl
dec
mov
lds
cmp
fadds
xchg
and
push
cmc
inc
xchg
shrb
dec
mov
add
rolb
test
movl
cs
mov
stc
incb
icebp
imul
sahf
movsl
xchg
mov
fisubl
cmpsb
jno
ffreep
mov
cmc
inc
cli
xchg
push
pop
cmp
loopne
shll
xchg
sub
mov
call
sahf
addr16
mov
dec
mov
sti
cmp
rorb
mov
nop
sbb
mov
inc
mov
out
hlt
jg
mov
push
insl
movl
push
call
inc
pop
aas
push
push
jbe
or
and
jmp
add
push
lods
mov
adc
imul
shl
push
jae
rclb
sub
mov
xorl
cmp
xchg
and
jbe
loopne
sbb
orl
pop
stc
xor
mov
sarl
dec
in
sar
cmpb
mov
inc
or
sahf
loop
in
lods
xchg
pop
popa
push
and
push
fisubrs
sbb
test
addr16
pusha
or
test
les
mov
cs
fwait
jg
push
std
imul
mov
and
icebp
mov
rcrb
sub
cli
mov
shlb
xchg
mov
fs
pop
mov
adc
inc
xchg
call
mov
int
jg
push
nop
adc
inc
shrl
dec
fildl
cwtl
leave
adc
mov
subb
stos
push
mov
xor
dec
adc
data16
xchg
add
fidivs
or
scas
add
sahf
int
mov
loopne
mov
call
int3
int3
pushw
dec
cmpsl
mov
xchg
push
mov
mov
mov
dec
jae
mov
push
pop
nop
and
push
adc
fdivl
inc
dec
cmpsl
jno
xor
loope
mov
xchg
lods
aam
push
and
fwait
pop
out
jb
lret
cmpsb
fstpl
out
jnp
adc
fcoms
xor
sahf
add
pushw
mov
les
pushw
pop
pusha
dec
les
mov
lret
fcompl
daa
xchg
test
std
mov
test
popf
jno
cmp
ficoms
mov
sbb
rclb
outsl
and
pop
push
loop
cmc
sbb
es
popa
addr16
stos
sbbl
inc
fldt
push
pushl
mov
aas
add
cmpsb
sub
fs
pop
cs
movsb
fldt
cwtl
jno
xor
sub
mov
and
enter
push
add
cwtl
push
std
cs
popa
add
rorb
out
push
fwait
shll
test
ljmp
test
je
mov
or
mull
icebp
xor
push
inc
push
sub
cmp
icebp
xchg
fildl
out
lret
in
shlb
aam
outsb
lret
rol
fdivrl
mov
xchg
stos
fisubs
mov
in
inc
test
mov
and
add
fstpl
out
mov
fsubrl
xor
pop
ljmp
rol
pop
push
aaa
lahf
add
mov
movsb
rol
push
nop
ret
dec
ds
pop
pop
mov
fistps
faddl
adc
dec
sub
sbbb
cwtl
pushf
in
push
test
loop
js
push
les
push
sti
out
popa
iret
dec
mov
cltd
ret
dec
xchg
fists
mov
xchg
nop
pusha
mov
cmp
sbb
andb
push
in
cld
jmp
inc
pop
adc
aad
push
out
in
popf
mov
jp
xchg
xchg
repnz
pusha
xor
je
pop
out
cltd
mov
mov
mulb
fs
jbe
adc
cltd
jnp
lds
loop
test
imul
jae
mov
stos
rorl
inc
data16
dec
add
mov
or
js
repnz
js
push
stos
push
cmc
pop
imul
mov
xchg
stos
daa
rorl
hlt
test
inc
add
add
lea
repz
jge
aas
fwait
and
jno,pt
mov
mov
jl
lea
push
sbb
adc
in
xor
repz
gs
test
cmp
jb
xchg
cmp
int
sbb
cmp
arpl
mov
sarb
adc
xor
cmp
push
or
add
mov
sbb
pop
or
or
in
ss
cwtl
adc
iret
leave
xlat
out
in
pop
mov
mov
addb
inc
or
out
sub
mov
dec
add
rorb
insb
push
pop
lret
jge
loope
in
lcall
mov
es
add
test
pop
out
dec
and
jbe
adc
jne
or
sbb
mov
inc
push
and
mov
jmp
mov
arpl
mov
nop
scas
lock
mov
add
ljmp
dec
fldt
pop
jecxz
or
lock
push
movsl
pop
daa
shrl
push
in
sub
or
ret
insb
hlt
fiadds
mov
inc
je
inc
sub
insl
movsb
jbe
pushf
pop
imul
or
jne
mov
icebp
js
mov
ljmp
jae
mov
adc
stc
and
jge
cli
leave
pop
test
nop
cs
or
lods
repnz
xchg
push
and
fdivs
mov
adc
adc
loop
push
mov
cmp
mov
cmp
add
popa
ret
adc
das
mov
and
or
mov
xchg
out
outsb
xor
cwtl
inc
shl
cs
imul
fcomip
xor
or
jl
pop
out
lock
jne
lahf
into
or
lds
lret
nop
jg
clc
add
fldcw
mov
jge
adcl
rcrl
mov
jmp
inc
add
xor
inc
imul
loopne
cs
dec
pushf
push
sti
clc
mov
dec
xor
xor
lds
loop
in
mov
push
push
mov
imul
dec
mov
pop
idivb
inc
sub
jp
jmp
stos
sahf
push
and
cmp
std
sbb
jp
push
adcb
adcb
cmpl
jnp
and
fwait
xchg
cmp
ror
lock
std
stc
repz
inc
ljmp
mov
aaa
mov
ds
sbb
inc
xchg
sbb
out
je
repz
fwait
adc
loope
cmpsl
mov
js
push
inc
sbb
ror
daa
mov
adcl
jno
push
jl
pushf
pop
shl
push
push
test
sub
push
cmpsb
stos
sbb
cmpl
pop
cmpsb
popf
icebp
mov
adc
inc
dec
fisubrs
xlat
cmp
cmp
jle
mov
jo
out
stc
rorl
mov
mov
jecxz
ret
push
sub
push
ds
ffreep
dec
clc
mov
adc
mov
jne
pusha
mov
mov
pop
mov
icebp
stos
add
incb
movsb
xchg
jnp
jmp
ret
adc
bswap
rcll
sbb
cld
cmpsb
jns
ret
into
inc
xor
push
lahf
in
icebp
sti
mov
in
je
aas
pop
xlat
mov
dec
add
in
add
cltd
mov
push
jp
xor
sub
cmp
sbb
jb
test
xchg
xor
lret
aam
jp
add
pop
mov
fimull
add
fwait
loope
aaa
loopne
addr16
inc
add
lret
xor
adc
lea
adc
mov
jb
test
or
and
sub
add
adc
xchg
mov
cmc
sbb
adc
fs
xor
cmp
jg
pop
outsb
repnz
xchg
add
out
pushf
stc
iret
xor
loopne
outsb
push
ret
jb
and
pop
xchg
fcomp
push
out
dec
movsb
pop
push
pop
jl
or
sub
pop
out
add
mov
sub
or
jp
xchg
dec
je
push
mov
mov
scas
cmc
mov
icebp
pushf
clc
or
aam
cmp
jp
lods
mov
aam
addr16
adcl
xchg
nop
push
movsl
xchg
btc
repnz
xor
mov
mov
xchg
rcr
leave
lea
push
std
movsb
dec
push
jo
and
xchg
rcr
iret
pop
mov
loop
mov
insl
sub
pop
sbb
outsb
or
mov
inc
jnp
out
movsb
mov
push
fmuls
xor
aas
push
cmp
adc
imul
pop
xor
add
and
push
push
mov
pop
scas
adc
jle
nop
xchg
mov
test
cs
inc
jo
cmp
or
mulb
mov
frstor
sbb
dec
lock
mov
xchg
xor
inc
xor
lahf
dec
pop
and
xor
dec
out
push
outsl
push
push
les
push
xchg
mov
mov
add
adc
fbstp
pop
fsts
xchg
jbe
cmp
xor
ficoms
out
inc
imul
and
jb
inc
insl
imul
or
lahf
test
das
cltd
stc
mov
mov
mov
push
imul
push
leave
jbe
cmp
cmp
int
xchg
imul
inc
mov
sub
leave
jp
fidivrl
cmpsl
and
js
fwait
sahf
jl
in
sub
sub
dec
out
sub
adc
mov
xlat
je
lods
push
xchg
lea
imul
lahf
or
cwtl
movsl
or
out
gs
mov
repz
fisttps
insl
jecxz
pop
mov
repnz
mov
lcall
add
mov
outsb
mov
or
pop
jl
cld
outsl
fnstcw
fwait
aaa
mov
ss
pop
xorl
lret
mov
popa
int
push
rcrb
mov
div
lds
dec
stos
out
mov
mov
ds
js
xchg
mov
mov
loop
inc
ljmp
ret
or
or
out
daa
push
mov
mov
cmpsl
mov
sbb
xchg
mov
cmpsb
add
scas
fucomp
xor
xchg
jg
xchg
dec
sahf
test
addl
in
cwtl
test
push
inc
leave
mov
jnp
popf
rorb
pop
xor
cwtl
push
dec
add
insb
sbb
int
lock
xor
xchg
cmp
xor
push
cmc
adc
sbb
ret
dec
jp
sbb
mov
test
mov
mov
aas
lret
jo
pinsrw
dec
sub
mov
mov
fcoml
sub
adc
leave
movsl
stos
popf
out
xor
xlat
sub
pop
pop
adc
test
xchg
jge
test
testl
add
in
pop
test
mov
pop
stc
ja
ret
jle
loop
mov
pop
das
test
stos
lcall
xchg
repz
dec
jb
pop
test
mov
ret
pop
insl
push
cwtl
imul
rorb
shlb
out
mov
pop
and
push
push
test
mov
inc
and
inc
mov
arpl
aam
enter
cmpsb
shll
out
add
or
push
fwait
xor
mov
mov
fnstenv
or
or
or
pop
or
mov
jmp
mov
dec
sbb
fbstp
cs
cvtdq2ps
inc
sti
jmp
inc
and
ljmp
sub
cmpsb
mov
and
pop
or
and
scas
rolb
sbb
mov
sub
mov
icebp
mov
adc
adc
daa
sbb
pop
fidivs
pop
enter
pop
xchg
mov
jne
in
leave
loop
arpl
jmp
push
nop
bound
arpl
das
inc
or
jbe
and
les
dec
xor
fistpl
adc
mov
mov
mov
dec
jl
mov
js
pop
inc
iret
jg
xchg
in
imul
inc
scas
sbb
gs
into
and
leave
mov
push
daa
and
rcrb
push
rcl
cli
test
sub
jno
xchg
lret
xor
jmp
imul
mov
insb
and
dec
loope
mov
jle
cli
and
adc
aas
cmp
ss
aad
call
cs
push
xchg
pop
shl
push
test
mov
and
xor
hlt
adc
mov
cmp
xchg
movsb
jge
xchg
and
push
data16
shrl
adc
fldcw
mov
nop
add
xchg
adc
rcr
mov
push
loop
or
xor
and
mov
sub
push
repnz
add
loopne
in
shl
cli
mov
rcrl
jae
fs
sbb
xchg
inc
leave
and
jle
mov
adc
int3
imul
inc
and
cmc
jo
sub
cmp
xchg
sbb
mov
mov
outsl
jb
mov
inc
pop
mov
mov
dec
addb
sbb
and
inc
add
pop
addr16
xor
sbb
addps
cmp
adc
adc
sub
jle
loopne
and
sub
mov
aad
jns
and
sbb
push
ja
aam
pusha
jbe
inc
and
stos
xor
lahf
js
add
aad
add
xchg
mul
mov
pop
mov
jbe
sbb
sub
aad
inc
enter
jle
arpl
cld
sahf
nop
imul
mov
xor
cmp
enter
inc
mov
aad
sub
mov
add
popa
mov
mov
aam
lods
test
push
lea
hlt
mov
nop
out
ljmp
imul
repnz
adc
lcall
add
sbb
mov
inc
shrb
sbb
cmp
pop
pushf
push
ja
mov
lds
dec
jo
fdivl
cmp
ja
cmp
sbb
lret
and
adc
push
mov
add
lock
hlt
lret
cmc
addl
fs
mov
imul
popf
jmp
shll
cmpsb
in
in
test
mov
mov
iret
jmp
mov
mov
imul
cld
or
addl
sbb
lret
cmp
add
ret
jnp
push
test
je
push
mov
imul
push
scas
sub
outsl
cmp
stc
fildl
mov
shr
jno
pop
outsb
outsb
loopne
mov
pop
leave
aaa
adc
mov
lock
dec
mov
cmpsl
cmc
aaa
push
mov
mov
movsl
jo
les
mov
mov
lds
xchg
enter
inc
add
dec
rclb
jecxz
and
test
and
in
or
adcb
or
push
push
xchg
cmp
loope
ficoms
fldenv
pop
sbb
sub
mov
xor
pop
loop
cli
aaa
xorl
lds
cmp
xchg
xor
mov
pop
inc
cmp
mov
jnp
into
sti
test
mov
popf
lods
and
adc
insb
mov
pushf
call
arpl
addr16
cmp
cltd
pop
das
repnz
push
cmp
push
mov
mov
push
and
dec
shll
mov
nop
sub
cmpl
aaa
enter
stos
cmc
xchg
iret
mov
jge
sbb
mov
jno
mov
adc
mov
clc
pop
xchg
incl
pop
dec
test
lret
shr
cwtl
cmc
shlb
mov
adc
pop
mov
mov
sub
lret
rcl
and
lods
xlat
ret
ja
xor
or
add
sti
loope
and
int3
jno
sub
lret
jecxz
lret
fistl
push
mov
and
push
and
sub
enter
stos
mov
testb
push
sub
xor
test
sub
fadds
shl
pop
sub
in
inc
andb
imull
adc
pop
notl
mov
repz
jo
lds
test
mov
outsl
xchg
loopne
dec
add
and
adc
lret
movsb
out
xor
sub
psubsb
mov
into
negl
pop
jne
jno
or
xchg
pop
icebp
push
cmp
je
stos
fidivrl
jg
push
sti
fucomp
arpl
xchg
in
adc
adc
sub
sub
fimull
scas
shrb
jecxz
sbb
mov
push
ret
test
mov
in
stos
jle
rcrl
adc
cmpsl
pushf
addb
shlb
iret
test
pop
mov
pop
jbe
loop
ficompl
data16
sbbb
testb
mov
fnsave
leave
xchg
mov
adc
scas
dec
xor
sub
and
and
fsubr
sar
loop
sbb
mov
or
push
sub
ja
pushf
pop
rolb
sbb
lret
sbb
bound
stos
fwait
lea
adc
enter
xchg
push
aaa
insl
or
clc
mov
aas
mov
pop
adc
faddl
mov
jp
adc
jne,pt
push
lret
out
stos
lock
out
xor
call
sub
push
xor
fwait
sbb
lret
cmpsl
lret
cmp
dec
repnz
cmp
push
inc
jg
dec
faddl
scas
sub
sbb
jge
sbb
pop
lods
or
cmp
push
sub
shrl
sahf
mov
mov
push
clc
es
xor
xchg
mull
sarl
pop
stos
cli
cmpsl
xor
aad
sub
mov
ja
jae
test
and
popa
xor
fs
ret
cli
add
xor
pop
and
pop
push
push
loope
mov
into
lret
xor
sub
rcrb
mov
mov
aaa
jb
sub
or
dec
out
lods
mov
dec
xchg
jl
inc
mov
stos
je
xor
inc
or
push
mov
testl
mov
test
lahf
ret
cs
arpl
fs
dec
inc
inc
push
lock
insb
inc
jp
jle
cld
cmpsb
mov
xlat
jno
popa
xor
arpl
pop
xchg
inc
rclb
notb
jnp
xlat
adc
hlt
mov
pop
insb
add
les
iret
mov
push
jns
sbb
add
push
fs
cmc
sbb
lods
xchg
mov
js
sub
das
fsubrl
jmp
mov
mov
test
and
out
jo
test
add
inc
repz
inc
xor
xchg
lea
pusha
in
lcall
push
dec
es
or
add
insb
add
sbb
mov
pop
jp
cwtl
cmp
adc
xchg
jp
jl
sub
jl
mov
aaa
mulb
or
and
sub
push
cs
jg
and
jmp
and
or
sub
int
mov
mov
and
dec
into
cs
ret
arpl
ret
jnp
add
pop
and
jbe
mov
fdivl
xor
or
lahf
mov
repz
shll
inc
sbbb
je
in
xor
sub
inc
xchg
jg
cmp
adc
lods
sahf
jb
scas
call
sahf
dec
pop
xor
cmpsb
mov
inc
adc
sub
push
notb
mov
xchg
jle
jnp
lcall
shrb
cld
push
xchg
mov
xchg
movsl
push
ss
pop
repnz
ljmp
mov
rcrl
loop
aas
adc
jge
dec
ljmp
loopne
ret
rcr
ljmp
fcmovnu
scas
dec
ja
or
shrl
das
cld
bnd
and
sub
loop
lock
mov
ss
push
push
iretw
cmc
and
add
sahf
xlat
dec
mov
adc
jge
jnp
push
sti
test
dec
xchg
and
pushf
cmpsb
das
vpsubw
or
cmp
bound
push
xor
lea
xlat
dec
jle
xchg
add
insl
dec
mov
mov
xchg
xorl
mov
pop
fimull
xchg
dec
insl
xchg
cltd
loopne
mov
test
out
mov
out
movsb
and
bnd
scas
or
cmp
sub
repz
cld
xor
xor
scas
adc
push
out
cmp
out
cmp
pop
jns
inc
jae
mov
adc
pop
and
mov
add
mov
dec
lret
iret
push
xor
sbb
mov
jge
stos
or
inc
js
fadd
xor
cld
fimuls
inc
push
push
pushf
jmp
sbb
cmpsl
add
call
rorb
sbb
ret
mov
aad
add
cs
ret
ja
mov
inc
and
jne
sbb
jne
incl
ret
movsb
int3
and
sub
clc
loop
fiaddl
sbb
pop
arpl
dec
aam
lea
mov
xor
sbb
mov
push
mov
je
icebp
add
xlat
xor
mov
adc
into
mov
push
divl
lods
cli
aas
stos
aad
aaa
xchg
notb
mov
xchg
pop
int
push
cmp
test
cmp
jno
rcpps
pop
inc
pop
jmp
jo
cmpsl
inc
adc
mov
loop,pn
les
les
fiaddl
scas
in
aaa
enter
test
mov
mov
add
aas
stos
test
movsb
push
dec
cmp
nop
jmp
push
pop
daa
aam
xor
push
sbbb
xor
sbb
shrb
inc
pop
or
fdivp
jge
test
pop
sub
or
dec
push
add
xchg
cmp
add
out
cmp
clc
aaa
lds
stc
cli
mov
test
rcrb
daa
call
shl
inc
cld
adcl
jno
ss
outsl
les
push
cmp
jg
rcrb
flds
cmpsb
cmp
fwait
nop
mov
jle
mov
add
add
push
cld
add
mov
es
cwtl
dec
jne
xor
clc
jecxz,pt
fmulp
mov
stos
mov
jg
mov
mov
fnstcw
sub
add
add
sub
fiadds
or
push
enter
mov
jno
lock
sbb
sbb
cmp
sub
scas
aaa
js
add
mov
icebp
inc
inc
repz
jp
out
fisttps
scas
addr16
sti
inc
lods
mov
arpl
sub
lret
push
mov
cmp
or
dec
outsl
aam
ss
lods
xor
orb
and
lods
mov
jg
nop
sti
ret
lds
cmc
push
jg
mov
lods
aam
sub
mov
jb
dec
add
and
fsubl
push
add
jbe
xchg
aam
cmp
sub
aaa
jecxz
shl
int3
repnz
arpl
cmp
xchg
mov
pop
pushf
add
orl
pop
daa
test
xchg
mov
ja
lret
outsl
int3
mov
push
subl
push
jne
adc
lea
cmp
inc
add
hlt
sbb
xor
xchg
rep
int
cli
xchg
ret
xor
repz
add
dec
movsb
jnp
orb
add
or
mov
jl
jo
js
test
push
movswl
push
and
shrb
enter
push
or
mov
es
shl
mov
pop
add
mov
adc
imul
xchg
xchg
xchg
sbb
inc
pop
enter
cmp
adc
dec
xchg
pop
stc
rcrl
cmp
pusha
xlat
mov
inc
sahf
xor
push
inc
fwait
sbb
sbb
mov
push
cmpsb
push
and
cmpb
sbb
push
aas
stos
sub
fwait
lahf
shlb
addb
cmpsl
adc
nop
mov
in
in
movsl
cmpsb
shrl
sti
xchg
inc
xchg
inc
adc
pop
xchg
cwtl
sbb
jne
mov
pushf
mov
adc
cmp
mov
sbb
insb
push
pop
movsb
call
les
lock
fildll
insb
add
jne
xor
xchg
sub
jnp
xchg
jo
xorb
push
and
iretw
clc
dec
addl
fucomi
pop
pop
jns
cltd
jnp
sub
mov
push
and
push
jl
jecxz
cs
nop
imul
jae
xchg
cmp
cwtl
dec
xchg
test
pusha
aad
jnp
aas
mov
mov
sub
and
sub
mov
rcll
roll
dec
das
mov
int3
pushf
inc
mov
mov
jae
jg
nop
sbb
mov
scas
movsb
in
lar
pop
xor
rorb
mov
iret
push
push
in
xchg
fnstcw
daa
icebp
push
ret
cmovb
add
rolb
dec
cltd
movsl
int
leave
push
std
negb
rol
mov
in
movsb
lcall
or
mov
push
fs
or
int
mov
fildl
jne
cmpsl
push
fdivrp
sub
test
imulb
xchg
movsb
push
cwtl
mov
das
cli
jne
mov
adc
mov
push
inc
xor
stos
imull
addr16
je
das
pop
sub
out
xor
sub
pop
es
sarb
xor
push
xchg
mov
cwtl
arpl
mov
fldenv
divb
movd
mov
dec
sbb
mov
movsl
jge
mov
or
mov
pop
dec
mov
inc
xchg
fisubs
test
pop
dec
sub
ret
sbb
jns
mov
in
push
sub
ret
add
cwtl
push
scas
push
pop
lods
sbb
pop
fs
fimuls
cmpsl
inc
or
fisubl
sbb
cmpsl
jno
adc
and
sbb
or
cld
xchg
inc
aas
mov
imul
pop
call
inc
adc
loope
outsl
cmp
sbb
xor
lret
into
mov
cmpsb
add
jmp
lods
or
data16
push
enter
repz
dec
out
inc
add
cs
es
push
jl
call
aas
cli
mov
rorb
aad
push
into
jp
sub
shlb
pop
mov
mov
sbb
xchg
in
lods
mov
mov
cmc
ret
pop
add
dec
into
and
scas
rcll
test
ja
sahf
test
mov
mov
stos
dec
mov
and
xchg
sub
test
dec
and
fdivs
fdivrl
xchg
jbe
mov
and
push
dec
mov
loopne
ss
mov
sbb
sbb
jmp
and
sub
out
icebp
pop
add
jne
cmp
add
jbe
xorb
fs
outsl
or
xchg
enter
scas
dec
inc
pop
push
int3
adc
cmp
add
lahf
xchg
adc
in
sub
push
out
into
test
ss
loopne
add
cltd
mov
sti
xor
lcall
rorl
push
pusha
pusha
negb
pusha
push
cld
xor
cmp
sbb
loop
mov
dec
mov
dec
popa
jnp
xor
sbb
xor
mov
mov
loope
test
sbb
test
dec
or
xchg
fadds
js
test
dec
inc
mov
mov
jo
fbstp
movsl
push
out
lret
es
loop
sub
cmp
aam
ret
jg
lcall
and
cs
andl
in
cmp
dec
popf
mov
and
jns
scas
scas
lock
add
lret
ret
scas
aas
ljmp
loopne
test
lahf
mov
js
mov
jp
cmp
sub
xor
jmp
or
dec
in
icebp
repz
adcl
shlb
inc
fsubrl
jae
imul
xchg
popa
insl
sub
test
ds
shrb
daa
xlat
mov
repnz
push
aas
pop
fnstsw
pop
outsl
aaa
cwtl
sub
aad
out
loope
sub
mov
es
in
jle
out
ja
shrl
aaa
cmp
mov
stc
pop
cmc
ljmp
out
dec
lahf
xchg
push
jae
jae
clc
bound
insb
in
mov
xchg
out
mov
ja
arpl
xlat
out
fstpl
xchg
in
pusha
jp
insb
rolb
cli
andl
mov
jmp
stc
cmp
jo
sub
lcall
dec
mov
sbb
push
dec
or
inc
jno
mov
popf
les
xlat
and
addr16
dec
popa
and
je
and
xchg
inc
inc
mov
inc
xor
xchg
bsr
out
jno
mov
cmpsl
js
shlb
lock
mov
adc
iret
push
stos
dec
cmp
js
lret
fnstcw
cmpsb
lahf
ret
push
add
or
fisttpll
sub
pop
sub
test
add
lock
or
inc
xor
test
and
jmp
movsl
incb
pusha
popa
out
daa
aas
inc
aam
or
xchg
pop
stos
xchg
push
jge
mov
in
xchg
pusha
sbbl
dec
inc
cmp
xor
ret
mov
or
sbb
pop
jns
sahf
aaa
pop
mov
cmp
addl
jns
fstpl
cmpsl
sub
push
jae
jge
lods
push
jb
shl
mov
mov
pusha
push
cwtl
inc
jge
fsub
les
pop
inc
cmc
repz
mov
adc
mov
andl
sarb
pop
inc
sub
sub
fnstsw
lods
cmp
in
mov
xor
pop
in
data16
imul
arpl
movsb
cmp
aaa
out
add
adc
cmp
mov
out
dec
aam
jmp
cmpsl
dec
adc
loope
sbb
mov
fucomi
fisubs
mov
test
sub
pusha
sbb
mov
insl
jmp
mov
xchg
movsl
xlat
sbb
sub
push
out
out
push
enter
pop
mov
push
je
lcall
sbb
les
rorl
dec
sub
jg
ret
jns
aad
fiadds
int3
mov
ret
cmp
sub
or
rclb
imul
sbb
out
jne
push
loope
stos
ss
sub
rcll
adc
pop
pop
scas
jnp
clc
lahf
pop
leave
loopne
add
addr16
cltd
dec
jge
rcrb
add
insl
out
mov
icebp
sbb
cli
shr
pop
das
mov
or
cmc
or
rol
jo
cmp
ret
daa
jmp
mov
xchg
je
fisubrl
pop
sbb
mov
adc
push
ret
fdivrp
xor
fisttpl
out
add
imul
icebp
mov
jp
or
jecxz
inc
loopne
push
sub
push
call
outsl
xchg
pop
subl
push
cmp
cmp
push
or
mov
jno
mov
std
mov
fwait
test
mov
test
push
lds
sub
jmp
imul
or
ss
mov
subl
les
lock
test
jge
mov
sub
fdiv
shl
push
popf
mov
inc
jp
imul
jle
xor
bound
shld
and
clc
and
lcall
xchg
pop
sbb
xchg
out
sbb
add
mov
or
negb
aam
cmp
div
mov
inc
loope
xor
repnz
jle
es
outsb
or
mov
hlt
xchg
orb
pop
push
outsb
sbb
push
cmc
pop
or
sub
daa
xor
int3
das
dec
fldcw
fbstp
jp
mov
sahf
inc
jge
lods
mov
out
enter
mov
pop
inc
mov
or
lods
cli
jno
imul
std
fimuls
psubsw
gs
out
fucomip
dec
push
xchg
popl
mov
std
add
xor
inc
mov
notb
sti
out
pushf
nop
pop
fmul
jge
push
arpl
jg
push
sti
cmp
dec
jae
mov
add
xor
or
mov
sub
sbb
aad
or
es
xchg
dec
lea
push
mov
xorb
xchg
mov
mov
dec
dec
cwtd
mov
dec
movsl
fdivp
jp
and
mov
mov
jle
insl
cs
movb
inc
mov
xchg
out
loopne
imul
enter
mov
outsb
cmpsl
incb
mov
repz
shlb
movsb
add
pop
mov
out
xor
mov
mov
test
int3
cs
sti
mov
loope
adc
icebp
adc
sti
pop
mov
aam
jecxz
jae
mov
rorl
or
sahf
jae
loope
sbb
add
lds
call
pop
or
push
das
dec
mov
mov
in
ljmp
jecxz
mov
daa
inc
fwait
adc
nop
and
ljmp
add
cmp
sbbb
jo
jae
loopne
push
push
mulb
cmp
mov
into
pop
aad
shll
xor
pop
lret
dec
dec
mov
leave
dec
xchg
xchg
xchg
xchg
dec
cmp
jb
in
inc
outsl
xor
dec
cld
mov
ja
mov
and
aam
std
xchg
add
cmp
inc
mov
std
cmpl
pop
sbb
hlt
sub
mov
sbb
fnstsw
stos
sbb
test
pusha
cmp
mov
shr
sbb
aam
mov
repz
in
out
mov
xchg
std
push
sbb
outsl
dec
or
and
les
inc
pop
dec
cltd
icebp
inc
jle,pn
xchg
imul
push
push
lods
jmp
outsb
arpl
xchg
cmp
sahf
je
xor
jp
push
fwait
bound
mov
dec
jbe
mov
xchg
mov
imul
rorb
mov
enter
test
sbb
xor
dec
movsl
xor
cmp
cwtl
ljmp
pop
sub
jns
push
ds
divb
fldcw
std
out
push
lds
and
mov
jb
dec
push
jno
fcmovne
adc
lods
popa
xchg
jne
das
sub
or
fwait
repz
sahf
in
aad
and
cld
pop
xchg
int3
cli
jo
xchg
cltd
pop
pop
mov
rcl
push
ficoms
dec
cmp
xchg
inc
inc
and
pop
xor
add
inc
dec
jno
lods
shlb
loop
sbb
fcoml
lea
mov
jle
addr16
fstl
mov
loopne
clc
mov
or
sbb
cmc
out
lock
int3
pop
push
inc
ret
leave
dec
test
out
cmc
cmp
mov
js
mov
sbb
mov
add
push
fistpl
jnp
mov
mov
sub
ret
sub
addb
xor
lods
fs
push
divl
jne
mov
pop
dec
cmpsl
leave
test
cmp
sahf
popf
sbb
ljmp
mov
fwait
add
jle
movsb
xchg
or
test
mov
mov
outsb
jp
icebp
fsts
add
mov
out
imul
subl
insl
inc
std
jge
repz
sub
jg
xchg
into
ud0
mov
push
in
and
xchg
andl
repnz
dec
or
xor
push
mov
lea
pusha
mov
add
sub
mov
jge
das
jbe
jno
mov
and
mov
dec
adc
sub
jne
inc
insb
and
sbb
stos
pop
xor
pop
scas
movsb
mov
or
jns
idiv
sar
and
mov
xor
in
call
mov
sub
mov
out
lret
mov
cmp
outsb
test
inc
xchg
leave
sub
pop
int3
sub
xor
mov
jmp
or
sbb
sub
sub
outsb
xchg
cmp
lcall
mov
gs
ds
shl
into
test
mov
cli
negb
push
or
adc
pop
mov
xlat
sbb
arpl
xor
fstps
fistpl
jb
push
cmp
lds
fbstp
inc
aas
pop
fdivl
data16
imul
xchg
and
mov
je
push
xchg
loopne
shrb
divl
or
dec
and
in
mov
jno
ja
xor
sbb
inc
mov
fcomi
int3
cmp
ret
dec
xlat
insl
or
add
repz
pop
sub
mov
push
inc
pop
out
ljmp
sarl
loopne
cmp
incl
mov
shrb
aaa
in
pop
cli
sub
jge
in
outsb
sbb
push
adc
aam
pop
sbb
sub
mov
xchg
adc
jmp
mov
ret
test
inc
inc
push
sub
inc
push
imul
iret
jecxz
pop
push
fstp
add
dec
xchg
xor
dec
jge
pop
int
aam
mov
xor
sahf
adc
icebp
push
dec
mov
hlt
out
xchg
lcall
je
in
or
add
scas
scas
adc
orl
fsubr
jge
pop
mov
pushf
push
in
add
sbb
fwait
xchg
or
pop
xor
pop
sub
repz
int
inc
data16
lods
lods
jne
ret
pushf
shlb
ret
shrb
movsb
pop
mov
push
xchg
ds
pop
cltd
xlat
loope
stos
in
leave
js
and
and
iret
push
test
add
jns
xor
xor
ficoml
lahf
mov
arpl
lret
pop
sub
inc
stos
fs
jl
pop
adc
or
inc
into
movl
jle
ja
sbb
cmp
es
jb
dec
arpl
adc
out
ret
aas
sub
mov
xor
aas
std
sbb
pop
jle
add
mov
scas
fnsave
insl
aas
out
ror
sbb
leave
cmp
and
rcrb
push
int3
hlt
mov
cwtl
sbb
aam
pop
sbb
sub
mov
lods
ret
enter
push
lods
sub
xchg
push
push
int3
sbb
and
div
repz
cmp
cli
lret
adc
popf
popl
incl
xor
cwtl
jg
mov
cmp
or
cwtl
iret
sbb
arpl
push
jns
daa
jge
inc
fildl
push
sub
stc
xchg
int
ljmp
ss
push
ffree
into
inc
jns
imul
clc
imul
pop
sub
mov
fdivs
fidivs
pusha
dec
or
dec
mov
leave
lcall
push
inc
pop
push
cmpsl
sbb
mov
imul
fmuls
shll
pop
mov
and
jnp
cmp
mov
out
addr16
push
neg
or
movsb
mov
or
xchg
inc
stos
in
push
push
push
addr16
cs
leave
fidivl
push
add
jle
and
pop
js
fs
inc
pop
ret
les
xor
inc
outsl
lods
dec
mov
and
push
enter
daa
hlt
sbb
xchg
movsb
pop
pop
nop
push
sbb
jno
mov
insb
ja
xchg
sub
mov
adc
sbb
jae
jl
or
and
out
or
mov
insb
pop
shlb
fsubrp
mov
adcb
in
fnstsw
out
push
add
and
shr
sbb
loope
push
fs
sysenter
lret
sub
cld
cld
fisttpl
ss
mov
clc
pop
mov
mov
std
shrb
in
push
push
arpl
pop
test
sub
dec
add
adcl
fsubr
jl
cltd
cltd
xchg
insb
aad
cwtl
xor
xchg
xchg
add
lods
mov
add
leave
adc
sub
negb
das
sbb
xchg
lret
aaa
and
fldt
cli
lea
inc
lcall
ljmp
sbb
and
jae
data16
repz
pushf
fdivs
mov
scas
and
insb
mov
pop
push
arpl
js
aas
imul
push
imul
or
rcr
or
test
add
jbe
cmp
scas
cli
cld
xchg
out
cmp
dec
jbe
aas
mov
and
pop
lret
fsubl
nop
loop
xor
lods
js
rcrb
arpl
mov
movsl
imul
adc
es
sub
movsb
cmpsl
int3
stc
adc
and
lods
sti
jb
scas
or
inc
jge
cltd
jno
add
imul
js
pop
rclb
xor
xchg
test
lcall
dec
mov
sbb
mov
mov
dec
mov
inc
adc
mov
outsb
pop
add
cmpsl
sub
aaa
lcall
mov
sub
dec
stc
scas
fsub
ja
xchg
lahf
mov
xchg
xor
cmp
cwtl
add
cli
insb
sahf
test
subb
pop
and
sbb
mov
les
mov
addl
or
xor
shrl
sub
lret
push
or
inc
mov
test
pop
ja
fisttps
ret
out
call
mov
push
xchg
push
push
jae
jae
push
sub
arpl
clc
loop
testb
sub
outsb
mov
mov
mov
aas
jmp
dec
pop
push
pop
dec
mov
and
mov
fs
aad
inc
xchg
out
add
fcomps
stos
fldl
cmp
lret
decl
in
pop
mov
push
rcrb
mov
insb
sbb
into
xlat
fwait
paddd
dec
or
leave
push
scas
addl
repnz
mov
push
cs
imul
rcrb
es
mov
add
mov
frstor
pop
dec
push
lods
mul
cld
popa
and
pop
int
jge
jo
add
nop
lock
cmp
sarl
adc
in
mov
jns
mov
cmp
inc
mov
mov
sub
xor
iret
aas
or
pop
test
sub
int
xchg
pop
aas
mov
mov
cmpsb
cmp
flds
push
mov
in
orb
out
je
aas
jnp
dec
xchg
lea
imul
jne
mov
mov
xchg
pop
fdiv
fadds
xor
in
push
push
into
fistl
shll
cwtl
push
xchg
out
outsb
or
pop
or
xor
lcall
inc
fidivrl
add
xchg
arpl
jnp
dec
xchg
aaa
out
aam
mov
int3
ss
and
cld
pop
mov
test
pushf
in
mov
pop
out
xor
in
roll
sbb
iret
imul
cmp
pop
out
or
scas
and
frstor
pop
stc
adcl
add
popf
mov
xor
mov
xchg
mov
mov
jns
or
insb
leave
sub
xorl
adc
test
or
out
jmp
iret
mov
dec
out
xor
jmp
mov
into
jne
jmp
pop
inc
in
xor
add
hlt
push
dec
sbb
jl
xlat
test
sub
scas
aad
mov
mov
mov
call
mov
pusha
xchg
lds
jle
sbb
xchg
iret
lcall
inc
scas
sbb
dec
and
jmp
push
xor
and
out
push
xorb
push
mov
pusha
scas
inc
lcall
inc
fstp
outsb
orl
movsl
je
and
xchg
dec
pop
dec
push
sbb
jmp
and
or
xchg
pop
ja
leave
rclb
sub
push
pop
jae
cmp
adc
popa
subb
ret
lds
dec
icebp
lds
and
stos
adc
scas
cli
mov
xchg
clc
xchg
inc
std
push
cwtl
rcrl
jecxz
out
popa
out
repnz
jae
add
stc
pop
fsts
outsb
fs
mov
in
jmp
out
out
addr16
cmp
adc
inc
mov
popa
inc
sti
pop
and
outsl
push
push
push
push
cs
push
mov
pop
pop
pop
outsw
sub
imul
cwtl
mov
dec
scas
loopne
sbb
sahf
jbe
inc
stos
in
movb
sbb
lds
adc
pusha
dec
add
shl
cmp
cmpsl
mov
dec
popf
pop
ror
xor
mull
push
imul
stos
push
int
push
push
mov
mov
loop
pop
push
int3
cmp
xchg
pop
fiaddl
stos
mov
add
mov
sbb
cmpsl
cmpsb
dec
adc
cmpsl
mov
cmpsl
dec
pop
out
jmp
iret
aas
lahf
inc
divb
push
mov
cwtl
outsl
pop
mov
jl
jl
out
fs
sahf
push
cmp
xchg
ss
rcrb
adc
mov
xor
in
aam
jbe
xchg
dec
cmpsb
sbbl
adc
out
imul
cmpsl
insl
xor
push
in
dec
and
shlb
lds
stc
stos
lea
xchg
sahf
cmp
loopne
push
cmp
in
add
fistpll
pop
dec
aas
xchg
jecxz
push
sub
pop
stc
rcrb
mov
inc
sti
cmp
insl
add
je
test
inc
clc
cmpl
mov
je
aam
push
aaa
ret
xchg
mov
nop
dec
mov
scas
fs
sbb
push
mov
pop
and
gs
sub
mov
cltd
mov
insl
bound
mov
mov
push
dec
push
mov
cmp
std
dec
sub
push
fidivl
repz
xchg
mov
hlt
push
inc
in
clc
andb
leave
leave
repz
enter
pusha
mov
fimull
xchg
mov
pushf
mov
sub
xor
xchg
ds
rcrl
imul
lea
inc
out
rcll
sbb
repz
icebp
cltd
scas
xchg
or
sti
jg
inc
and
push
fcoms
adc
push
adc
adc
dec
and
daa
mov
popf
dec
das
sbb
jp
cmpl
mov
mov
inc
sub
insl
or
sahf
mov
sbb
mov
bound
push
mov
test
mov
xchg
cltd
jp
gs
leave
and
jmp
push
dec
push
mov
sahf
lahf
cmp
pushfw
pop
add
pop
cmp
inc
cs
lret
or
lods
movsb
fnstcw
push
mov
cltd
jno
cli
adc
aaa
inc
xchg
das
mov
sbb
xor
mov
hlt
push
jo
iret
in
sbb
popa
das
add
add
clc
cmpsl
cmp
clc
stos
mov
and
push
mov
in
addr16
shlb
loope
pop
mov
enter
sahf
cmp
jmp
fisttpl
divl
ljmp
loop
roll
outsl
mov
int3
mov
cwtl
lock
rep
mov
fmull
dec
jo
pop
inc
jle
mov
arpl
lds
js
outsl
mov
sbb
adc
leave
push
sub
lea
mov
fidivrl
int3
mov
jb
lcall
sub
inc
dec
cld
movsb
or
mov
xchg
adc
dec
imul
push
and
dec
gs
imul
mull
mov
lods
iret
fcmovnu
call
push
out
pop
cmp
pop
loop
and
push
int
add
insl
sbb
inc
mov
loope
sub
pop
pop
jle
movsl
ja
pop
add
popf
or
subb
mov
jbe
loope
adcl
add
and
push
insl
pop
pushf
test
dec
mov
lds
mov
dec
cld
inc
pop
mov
add
decb
out
inc
arpl
mov
std
and
ret
leave
cld
icebp
mov
mov
sub
shrl
xorb
jge
adc
cmc
mov
pop
push
hlt
pop
test
mov
idivl
cld
loop
mov
xchg
lods
xchg
punpckhdq
mov
dec
and
fidivrl
xchg
xchg
mov
rorl
xchg
imull
es
lret
xor
mov
push
andl
push
cwtl
dec
xchg
enter
arpl
loopne
push
or
cmp
movsl
out
inc
aam
aas
aas
rcrb
movsb
fcomps
jge
test
addb
pop
dec
push
cmp
xchg
jmp
imull
push
pop
mov
mov
add
mov
out
inc
jno
das
inc
xchg
add
hlt
in
mov
pusha
lds
in
cwtl
shrl
xor
add
dec
lea
popa
repnz
ret
lcall
aas
sub
sub
fsubl
lods
scas
out
dec
or
ds
mov
jle
dec
xchg
subb
outsl
jnp
out
or
mov
dec
xor
mov
xchg
mov
sbb
add
and
aas
sbb
das
xor
fsubs
lret
inc
xor
pusha
ja
sbb
ljmp
cmp
mov
loop
imul
dec
fnsave
pop
and
or
adc
mov
lahf
pushf
addr16
dec
mov
jg
seta
push
lods
lock
sbb
cld
leave
movsb
aad
xor
mov
aaa
xor
fidivs
push
fcmovb
cmp
xor
push
leave
xor
lods
popf
imul
in
insb
aad
xor
xchg
pop
jnp
inc
sbb
mov
adc
sbb
lahf
and
loope
pop
lret
push
or
ret
adc
sbb
pop
loope
subb
cmp
sbb
ret
sub
sub
mov
loopne
push
outsb
das
jmp
cmp
inc
jmp
aaa
test
add
cmp
fs
pop
rcll
daa
xchg
outsl
mov
pop
imul
inc
dec
call
mov
push
loope
mov
insb
aas
std
je
and
imul
imul
shll
add
jmp
out
sub
mov
test
xchg
rcrl
test
xor
stos
lods
je
shll
mov
inc
shll
test
shrb
push
leave
mov
mov
or
nop
stos
fsts
mov
mov
inc
or
cmp
fdiv
inc
add
daa
jno
fnstcw
inc
add
icebp
test
jno
cmpb
mov
inc
pop
xor
int3
xchg
and
imul
xchg
clc
lock
or
cmp
outsl
daa
loopne
mov
push
aas
or
bound
mov
pop
jle
jl
testb
in
jo
ficomps
out
sub
pop
fstpl
scas
into
leave
fcomps
pop
fs
std
movsb
js
xor
dec
xor
stc
addb
push
mov
and
or
mov
dec
mov
jbe
xor
push
xchg
das
cmp
xchg
mov
aaa
fsubs
add
lods
outsl
adc
sahf
xchg
lret
add
dec
sarl
insb
negb
in
unpckhps
jp
aad
xchg
sub
sbb
jnp
inc
cli
xlat
mov
inc
push
ja
or
fcompl
addr16
adc
sbb
jae
in
xorl
out
sarl
fdivrl
sbb
xor
sbb
daa
ret
aaa
outsl
mov
sub
enter
add
mov
sub
ficoms
mov
cmp
or
stos
ss
sub
pushf
cmp
or
cli
ret
int
and
mov
mov
and
sub
outsb
mov
dec
dec
in
shrb
int3
setl
ret
jns
push
ja
ret
push
push
inc
in
test
push
xchg
mov
cmp
rcrb
lahf
lret
enter
movsl
int3
xchg
xchg
push
rcl
dec
or
cwtl
cltd
jmp
or
xchg
shrw
add
div
ss
inc
out
and
cltd
out
addr16
ljmp
js
push
push
mov
stos
sbb
es
mov
mov
fisubl
test
xchg
ss
xchg
out
sub
mov
inc
jbe
arpl
mov
push
sbb
mov
sti
xor
scas
cli
popf
leave
sbb
mov
leave
lock
fadds
cmp
mov
unpcklps
clc
outsl
push
inc
repnz
cld
test
adc
mov
sub
in
pusha
add
push
pop
inc
and
lea
fidivrs
int
mov
jle
shll
jnp
or
xchg
cs
pop
cmp
jle
sbb
fnstcw
mov
xor
sbb
push
icebp
sbb
and
pop
je
mov
xchg
js
cmp
xchg
jb
and
and
xchg
mov
ret
or
outsl
push
cmp
test
mov
sub
add
or
cmc
lock
inc
test
dec
and
mov
xchg
cld
push
sarb
xor
jo
ss
dec
push
inc
or
jecxz
das
jle
push
cld
gs
in
gs
push
pop
sti
lahf
cmp
mov
and
fnstsw
push
int
xchg
pop
jmp
dec
xchg
rcll
mov
cli
imul
sub
lret
xchg
jmp
lret
aas
sahf
icebp
fs
movsl
mov
jmp
jl
fildll
not
fisubl
and
jbe
inc
xor
jp
jbe
arpl
call
pop
mov
cmp
sti
and
jge
push
mov
sbb
cmp
daa
mov
jnp
push
cs
cmp
mov
mov
sti
addr16
int
fcmovnu
jae
movsl
add
dec
cmp
push
orl
or
pop
sub
xor
xor
lcall
movsl
cwtl
sbb
into
inc
movsb
or
mov
fs
jnp
and
sub
dec
mov
sti
push
mov
enter
xchg
sub
fwait
cmpsb
pop
cmp
cmc
sub
pop
pushf
mov
adc
inc
add
aam
xor
fstl
out
cmp
fst
xor
aad
sub
dec
sbb
mov
scas
xor
out
mov
lahf
call
mov
or
rep
cld
lods
stc
mov
xchg
mov
mov
fcoml
mov
adc
sbb
repz
inc
pop
mov
outsb
inc
fildll
push
and
clc
dec
pusha
sub
mov
pop
bound
test
lds
dec
jo
pop
nop
or
mov
jecxz
inc
jle
mov
push
adcl
jnp
loopne
test
andb
and
mov
mov
movsb
pop
xchg
push
xor
sub
loop
stos
pop
inc
das
inc
test
push
dec
push
sti
xor
test
bound
loop
fisubrs
mov
xchg
sti
adc
or
and
add
sub
jle
fldt
shrl
ja
dec
adcb
scas
mov
mov
outsl
ja
fucomi
sahf
push
xor
mov
cmc
jns
push
int3
ds
mov
pushf
mov
cs
jmp
cltd
or
aam
fsubs
mov
dec
or
pop
addb
jle
sub
xchg
mov
outsl
mov
xor
mov
shll
jo
int
xor
sub
lds
jmp
mov
jp
cmpsb
imul
in
es
adc
or
and
inc
inc
add
sub
pop
inc
insb
adc
mov
adc
lock
out
xchg
xchg
mov
dec
popa
adc
push
pop
enter
push
pop
inc
adc
or
cmp
or
shlb
xor
dec
mov
sahf
and
fwait
aam
jp
push
out
xor
jmp
mov
dec
sbb
jmp
xor
sbb
mov
adc
aas
mov
adc
test
shl
lea
pop
rorl
sti
push
adc
stos
insb
adc
loope
push
xchg
addr16
ss
cmpsb
imul
mov
das
sbb
add
lods
push
jnp
out
gs
les
stos
jmp
jbe
inc
pop
sbb
sub
fsubp
leave
rcrl
push
xlat
pop
cli
mov
loopne
jne
sbb
loopne
test
repnz
test
inc
pop
xor
push
pushf
movsl
sub
dec
int
in
cmpsl
cwtl
fidivrl
push
fcomps
mov
sbb
sahf
adc
mov
daa
inc
pop
mov
xor
mov
das
scas
cmp
dec
or
mov
repnz
xchg
xchg
push
ret
sub
push
xchg
and
test
call
ss
dec
add
adc
pop
cmp
stos
sbb
in
dec
mov
das
dec
adc
daa
cmp
addl
dec
sub
adc
fsts
bound
lods
jp
jnp
xchg
ret
push
fdiv
enter
pop
push
cltd
pop
loop
scas
loopne
dec
pusha
popa
imul
xor
es
nop
rorb
insl
cmp
inc
loopne
cs
jg,pt
mov
sbbl
jecxz
sbb
jo
in
push
fldt
pushl
add
daa
inc
jae
or
cwtl
dec
and
stc
into
scas
adc
sbb
adc
icebp
mov
repz
push
push
sbb
bound
outsb
xchg
popf
pop
popf
mov
adc
sbb
jmp
out
into
cmp
adc
mov
or
mov
repnz
cmp
loop
pop
cld
in
out
pop
addr16
mov
rcrb
mov
adcl
pop
push
sbb
or
or
nop
or
xor
ret
mov
ret
inc
sbb
loop
enter
out
adc
push
addl
pop
sahf
stos
jae
add
je
lahf
loope
aad
jae
and
jmp
adc
in
repnz
mov
int
pop
pop
mov
fbld
and
push
cmp
pop
out
mulb
mov
test
sub
mov
cmpsb
sbb
movsl
movsb
mov
xchg
jne
fwait
jne
fnstenv
mov
and
arpl
es
mov
xchg
adc
orb
sub
jmp
loopne
or
das
lahf
sti
inc
jl
inc
nop
ret
or
adc
out
mov
and
and
pushf
shl
cmp
mov
xorl
mov
nop
out
test
and
cmp
xor
mov
adc
push
xlat
aaa
lret
stos
adc
outsb
push
mov
pushf
mov
adc
adc
cmp
mov
push
cmc
lcall
mov
das
push
mov
mov
sbb
scas
adc
mov
cmp
in
mov
pop
cltd
loopne
xor
dec
enter
mov
sbb
mov
mov
negl
add
push
mov
outsl
int
sbb
inc
push
daa
mov
mov
sbb
dec
rorl
push
adc
push
push
mov
inc
adc
js
stc
lret
outsl
popa
cmp
inc
shlb
sahf
aas
dec
divl
xchg
push
dec
jmp
nop
test
fimuls
cmp
insb
inc
xchg
stc
pop
jae
imul
js
rep
insb
cltd
or
mov
call
sub
jae
in
xchg
ror
cmp
mov
adc
jp
dec
dec
cmpb
int3
push
stos
add
mov
adc
loop
jo
jno
add
or
jns
fistl
test
cmc
call
adc
pcmpeqw
adc
rcr
fiadds
mov
rclb
mov
xor
or
aam
lcall
pop
mov
hlt
mov
mov
cmp
pop
cmp
jl
addb
mov
pop
sub
xor
cwtl
inc
fsubr
pop
insb
js
sbb
adc
dec
xchg
andl
pop
mov
push
int
jae
in
cmpsb
nop
lods
ficoms
or
lret
clc
pop
test
cmpsl
mov
adc
xlat
ror
jo
sub
ljmp
into
cmp
sbb
mov
xor
sti
sub
or
in
or
mul
fcomps
or
mov
stc
lock
fists
pop
js
mov
negb
arpl
outsb
mov
cwtl
aad
mov
addl
jecxz
add
ror
ret
xchg
jg
es
inc
xchg
push
push
subl
js
sub
ljmp
rcrl
jns
aas
outsl
daa
scas
fldl
stos
ja
adc
test
or
inc
out
mov
push
push
cmpsb
fucompp
clc
pusha
mov
dec
or
inc
push
jne
pop
in
movsl
xchg
adc
xor
push
dec
adc
adc
lods
or
xor
dec
imul
icebp
ret
mov
jmp
inc
push
adc
frstor
aad
push
lods
adc
int3
inc
iret
mov
imul
scas
inc
xor
leave
ret
add
mov
aam
fldl
imul
mov
cmpsb
cmp
hlt
imul
mov
xchg
fstps
ficomps
repz
gs
andl
jge
ret
xchg
sti
pop
inc
and
or
jo
mov
mov
dec
rcrb
sbb
push
jmp
push
addr16
fcomp
jg
pop
fiadds
lret
ja
dec
cli
mov
cmp
ja
lock
lret
aad
sub
pop
popa
fwait
es
push
mov
sub
mov
ds
out
aad
std
mov
test
mov
sbb
out
movsb
divb
mov
add
mov
xor
fdivrl
jg
rorb
enter
lahf
cmp
popf
jge
dec
sub
jmp
or
sub
sub
in
jb
leave
leave
mov
lods
aas
jne
jno
xchg
push
mov
sbb
fcoms
lea
iret
pushf
mov
dec
in
out
repz
ficompl
dec
js
and
or
in
adc
dec
mov
sbb
loopne
pop
test
cmpsb
push
in
fcomi
mov
jg
sbb
inc
test
ret
cmp
jmp
mov
add
daa
mov
mov
mov
mov
xchg
cmp
orb
aam
mov
or
repz
imul
bound
cmp
inc
push
aam
add
or
push
cmp
xchg
mov
ds
iret
sbb
mov
rorl
ss
test
stc
arpl
cmp
js
shr
mov
sub
sub
test
out
es
lea
adc
out
ret
xchg
cltd
mov
leave
hlt
icebp
jge
loope
das
test
cmp
ljmp
test
add
fists
call
lods
iret
mov
push
mov
and
lea
aaa
popl
lret
inc
stos
mov
xchg
mov
dec
dec
push
push
imul
pushf
pop
testl
movsb
or
les
adc
adc
push
out
test
push
push
ljmp
adc
sbb
xor
sbb
adc
sahf
gs
jae
sbb
or
and
dec
in
jnp
lds
mov
and
sbb
adc
mov
xchg
mov
insl
fistl
sbb
mov
pop
int
sub
mov
fildll
add
adc
or
dec
lret
jg
ret
push
and
lea
sbb
pushf
rorb
or
out
xchg
imul
cmp
stos
test
mov
dec
cmp
jnp
fldenv
xor
shr
adc
lock
in
les
sbb
fsubl
pop
outsb
xchg
xor
das
pop
insl
or
rclb
stc
or
add
inc
pop
in
adc
mov
push
add
jnp
repz
enter
mov
loope
sbb
data16
ret
loope
iret
dec
idiv
ret
movb
sub
movsb
pop
ja
push
mov
test
stc
xchg
int
push
stc
adc
xorl
xchg
rclb
aad
fs
popa
jge
aas
jae
aam
xor
decb
lds
test
cs
sbb
lds
xchg
insl
icebp
add
enter
jmp
xchg
inc
sbb
and
add
std
xchg
icebp
cmp
xorl
sub
sti
cmp
loope
je
std
sbb
rcr
gs
mov
test
inc
scas
lret
fidivs
inc
ds
dec
push
aam
into
mov
xor
insb
jmp
rclb
pop
loop
xchg
mov
jnp,pt
mov
jae
xchg
int3
inc
hlt
jns
mov
sti
daa
movsb
ljmp
stc
pusha
xor
inc
inc
je
mov
js
pop
lock
fs
xchg
fsubs
xor
xchg
pop
mov
test
xor
adc
mov
in
xor
fisubrl
les
mov
dec
cs
lret
jecxz
enter
and
add
jbe
cld
ljmp
test
popf
mov
std
push
aam
or
push
sbb
or
mov
addr16
mov
aad
fld1
test
gs
scas
fs
cmp
sbb
sub
aaa
popa
shrl
cmp
xor
pop
je
inc
stos
jmp
jmp
cmpsl
fsub
or
sub
jl
stos
cltd
xor
mov
fnstcw
pop
pop
mov
jo
add
adc
js
shrb
outsl
jbe
movsl
out
jmp
fadds
sub
jge
mov
or
ret
mov
sub
push
movsl
fwait
or
sysenter
imul
nop
pop
dec
fucomip
clc
aas
jmp
xchg
pcmpeqw
in
sti
or
push
push
icebp
roll
stos
mov
push
test
xchg
stos
popa
les
push
mov
insl
enter
in
in
jb
sbb
jl
ret
add
ss
mov
sbb
loopne
push
xchg
cmp
sub
std
les
dec
fwait
xchg
outsb
in
pushw
fisubrs
lds
or
cmc
sbb
stos
sti
je
mov
loope
iret
test
test
xchg
pushf
mov
mov
pop
or
adc
nop
adc
add
mov
fiaddl
or
stc
into
lds
inc
loopne
sub
inc
daa
push
scas
cmp
mov
fildl
cmp
xchg
lea
inc
pop
movsb
or
jl
jno
cmp
aaa
clc
int
mov
fnstcw
test
mov
js
add
push
in
mov
xchg
pop
and
inc
mov
xchg
xchg
jb
je
in
dec
loop
mov
add
jle
adc
push
subb
push
push
je
sub
hlt
nop
leave
fsubl
in
pop
out
mov
pop
push
mov
loop
xor
and
cmp
ss
pop
loope
jge
push
frstor
bound
popa
push
movsl
pusha
mov
aaa
roll
cmp
push
mov
xor
scas
ret
cltd
xchg
cwtl
cmp
and
loop
mov
pop
into
jns
js
xor
icebp
push
stc
sbb
sub
arpl
mov
jbe
scas
fnstcw
cmpsb
lock
lock
scas
mov
xchg
pop
int
add
jnp
add
jo
pushf
cmpl
in
xchg
js
mov
add
into
cmp
insb
das
aad
pop
sti
xor
dec
cltd
sbb
flds
push
test
mov
scas
pop
mov
out
mov
push
loopne
fistpll
in
mov
addr16
lock
lock
outsb
push
data16
in
sti
stos
or
clc
push
mov
sbb
jp
cmpb
in
or
cmp
xchg
fdiv
sub
aaa
dec
ss
adc
and
pop
mov
rorb
lea
es
cli
fisubs
decl
jl
xchg
in
hlt
push
ss
sub
pop
repz
aas
push
nop
mov
pusha
mov
add
mov
test
subl
pop
fwait
jp
dec
push
sub
ljmp
push
insl
jmp
dec
pushl
out
stos
repnz
or
sub
or
add
into
call
fnsave
mov
outsl
lea
dec
xchg
mov
lods
movsl
xor
adc
movsb
adc
xchg
xor
xor
adc
xor
inc
addb
mov
cmc
cs
aam
inc
js
popf
aaa
out
lods
rorb
fs
cmp
or
pop
cmc
data16
jns
jbe
xchg
sub
movsb
rorb
movsl
sub
xchg
jae
push
or
es
cltd
xor
jno
inc
test
mov
std
into
mov
cmc
add
add
in
xchg
pusha
jl
jo
aad
scas
xor
loop
fwait
jns
std
addr16
xlat
adc
cmp
orl
ja
push
ret
jecxz
bound
repz
cmp
push
jge
inc
fmuls
rcrl
ds
cmp
sbb
inc
mov
stos
icebp
lcall
ds
popa
adc
mov
int3
iret
aaa
fs
xchg
lock
inc
pop
and
jbe
pop
ret
sub
sbb
in
xchg
jp
cmc
fwait
inc
pop
xor
mov
jne
inc
xchg
mov
stos
test
cmp
push
enter
scas
cmpsb
jae
cmp
outsb
arpl
ja
out
in
pusha
xlat
add
decl
cmp
pop
jl
dec
xchg
sbb
jne
cs
push
in
fldcw
dec
mov
iret
add
das
incl
aas
test
loop
outsl
inc
out
mov
shrl
inc
mov
add
repnz
int
cmp
and
xchg
add
and
adc
mov
adc
cld
stos
insl
scas
mov
outsl
mov
pushf
or
aad
jl
rclb
sbb
mov
ljmp
inc
mov
push
iret
mov
cmpb
enter
mov
mov
jecxz
inc
mov
and
adc
int
push
rcrb
ror
fsubs
and
mov
mov
test
xchg
and
xchg
repz
sbb
out
loop
int3
ret
mov
sub
repnz
pop
sub
sub
daa
jno
add
sbb
aaa
test
test
ret
sub
mov
idivl
adc
rcrb
mov
scas
std
sub
sbb
pop
push
sahf
test
adc
or
push
out
or
aad
hlt
push
das
lret
andb
mov
push
repnz
jge
pop
ss
loop
or
jmp
out
push
scas
fldt
mov
jbe
push
pop
push
mov
dec
int3
divl
add
fstps
ret
hlt
sahf
add
loope
cmpsb
outsb
or
aam
xchg
jmp
dec
xchg
fsubl
jmp
or
pop
cmc
out
cmp
sub
stc
xchg
add
sbb
and
fdivl
ja
push
and
mov
and
test
add
nop
dec
mov
inc
out
add
mov
xchg
inc
push
lret
fdivrs
mov
in
cmc
mov
nop
into
inc
subl
add
test
mov
mov
lretw
inc
loopne
sub
ret
jecxz
push
xorb
out
push
pop
pushf
mov
in
lea
testb
lcall
mov
mov
aas
mov
sub
xlat
ret
movsb
jnp
adc
sub
mov
ja
orl
shll
ja
push
sbb
pop
outsl
in
rolb
jl
inc
inc
jbe
loop
sbb
out
add
sbb
xchg
sahf
sbb
imul
mov
pop
add
push
cltd
sbb
mov
mov
jle
push
mov
cmp
push
adcl
incl
push
out
pop
jnp
ret
cmp
and
push
ror
ljmp
sbb
inc
shll
mov
in
movsb
out
clc
jl
pop
fisubl
sti
rcr
das
or
adc
rorb
nop
cs
jl
mov
fidivs
sarb
outsl
jae
loop
dec
pop
cmp
repz
cmpsl
xor
dec
jmp
dec
xor
fnstcw
hlt
shrl
data16
stos
int
add
aam
adcb
loopne
xchg
mov
xor
inc
push
pop
insl
cmpsl
lods
mov
add
xor
hlt
insb
fisubrl
insb
stc
addr16
xlat
lahf
or
loop
and
fidivl
arpl
sub
repnz
aas
and
push
fisubl
mov
xor
out
fdivs
cld
sbb
pop
jb
sbb
inc
call
stos
pusha
inc
adc
push
add
test
cmp
sub
pusha
cmpl
in
adcb
insl
sbb
adc
std
cmp
test
movsl
xchg
std
add
insb
xchg
pop
xlat
adc
push
push
data16
xor
inc
mov
shlb
xor
push
sbb
mov
jbe
push
jae
mov
adc
clc
xor
jae
push
lock
aad
and
ret
imul
bound
sbbl
inc
lods
lahf
and
sub
mov
orl
push
cmpl
and
test
sub
test
rorb
not
sub
test
repnz
dec
movl
jp
std
fimuls
and
or
out
andl
sbb
pop
rorl
shlb
sbb
outsl
xchg
adc
add
mov
mov
out
fsub
xacquire
lahf
push
inc
and
inc
popa
pop
or
mov
fisttpll
ja
mov
int3
mov
push
dec
mov
and
imul
out
arpl
call
cmp
mov
push
cltd
or
mov
mov
incl
aam
fiaddl
mov
mov
fisubl
push
ljmp
push
mov
or
mov
cmp
ja
cmp
sub
ret
in
loopne
scas
xchg
mov
pop
mov
xor
adcl
stos
pop
dec
lret
or
loope
xchg
jp
cli
insl
push
icebp
push
sbb
fs
inc
add
xchg
pushf
xor
xor
sub
cmp
adc
sub
call
push
xchg
pop
sahf
loopne
fisubrs
pop
dec
push
mov
addr16
mov
sub
or
aam
ret
popf
and
cmp
and
repz
loope
stos
jg
lds
sbbl
adc
cmp
mov
push
or
fimull
call
mov
xchg
push
jae
dec
cmpsl
neg
scas
out
jg
pop
cmp
sbb
mov
pop
cmpsl
push
fwait
movsl
mov
inc
push
lret
xchg
fwait
psubb
sarl
xchg
sub
sbb
mov
jno
add
lcall
or
xchg
cs
xchg
mov
cwtl
out
rorl
pushf
push
or
sbb
cmpsl
push
xchg
insl
daa
xorl
mov
lock
push
xchg
out
shl
dec
popf
shlb
inc
ja
imul
dec
xchg
cmp
test
das
jbe
mov
jne
cmp
pop
xor
mov
push
popf
mov
push
push
cmp
mov
cli
test
inc
movsl
adc
fdivl
fidivs
icebp
ja
sbb
pop
test
pop
sub
add
mov
dec
pop
xchg
push
mov
outsb
pop
js
lea
fldz
push
imul
sbb
lret
pop
mov
sub
lods
bound
sub
popa
xor
sbb
push
inc
mov
cld
cmp
ror
jmp
inc
mov
push
shrb
mov
ljmp
mov
lret
dec
sub
mov
decl
push
negb
mov
call
cmc
adc
or
xlat
les
and
popa
inc
jl
test
fildll
push
push
or
sub
mov
lahf
pop
cli
je
push
popf
xorl
out
dec
fwait
adc
mov
dec
mov
jb
lods
aas
mov
sub
or
aam
mov
jae
dec
cltd
test
sbb
sub
std
lcall
test
adc
pop
shll
ljmp
pop
mov
mov
push
shrb
test
shlb
jo
xchg
jo
movsb
outsl
mov
mov
scas
sbb
test
mov
mov
xor
mov
fwait
jb
xchg
flds
adc
aam
sbb
ret
cmp
pop
push
cmp
cmp
mov
sub
popf
mov
jle
cmc
push
sbb
popa
rcrl
cmpsb
jecxz
outsl
ja
add
ret
sbb
mov
clc
mov
add
mov
scas
jge
mov
rcll
pop
fdivrl
stc
aad
inc
and
pop
out
push
lret
stos
insb
ja
jle
or
jg
xchg
mov
mov
push
idivb
or
sahf
mov
nop
enter
pop
out
cmp
loop
pop
dec
lcall
push
mov
orb
lahf
xchg
or
arpl
es
xlat
push
lock
ret
sti
outsb
icebp
test
cwtl
sub
mov
jmp
mov
dec
mov
aaa
aam
push
mov
nop
ss
sub
aaa
mov
inc
pop
pop
dec
fcomps
into
in
out
sbb
js
ss
bound
push
xor
test
pop
dec
std
mov
loopne
loop
xor
xor
jmp
lods
or
sub
sbb
inc
ja
jmp
mov
dec
mov
jb
out
out
sub
aad
jle
adc
scas
or
mov
or
test
shll
rcl
stos
pop
add
arpl
dec
std
ljmp
and
int3
xchg
sub
js
xchg
notb
in
adcl
xor
rcll
movsb
inc
inc
into
movsl
cld
outsl
js
sub
pop
cli
mov
cmp
ret
arpl
mov
rclb
aam
jecxz
sub
fisubrs
iret
pop
mov
adc
in
out
xchg
or
sub
outsb
mov
into
repz
stc
mov
bnd
test
xlat
xchg
and
xchg
add
fnstcw
sbbb
test
or
dec
gs
add
inc
call
mov
xor
mov
xor
gs
movsb
negl
mov
inc
aas
cltd
and
push
jmp
data16
or
sub
fnsave
cs
ret
push
out
lret
in
and
lret
push
xchg
ds
cmp
adc
sbb
or
ljmp
mov
or
call
mov
add
xchg
push
add
and
notl
pop
mov
int
jmp
inc
inc
addb
pop
push
fistpll
out
xchg
fisttps
sbb
or
cld
ss
push
sbb
inc
lds
popf
lock
sbb
sbb
jle
inc
inc
test
jl
add
or
jns
das
sbb
xor
sub
pusha
add
mov
push
jle
mov
xor
insb
mov
ja
cs
and
imul
or
roll
test
sti
inc
aad
nop
hlt
push
pop
test
fistpl
sub
adc
push
jmp
sbb
aad
dec
mov
mov
lret
ffree
std
addb
popa
jge
ret
gs
adc
xor
mov
cmp
sub
mov
inc
pusha
pop
daa
add
xor
imul
pop
xchg
enter
inc
xchg
shll
and
mov
dec
fwait
pop
xchg
fwait
inc
or
leave
ds
insl
shrl
pushl
adc
js
ds
outsl
fbld
in
xchg
data16
mov
jge
jg
andb
int3
shlb
lods
lock
mov
or
gs
adc
inc
mov
add
repnz
sbb
ss
cmc
out
sub
or
jb
mov
sbb
jae
lods
in
sub
imul
lods
mov
test
push
sbb
push
or
sbb
xchg
or
test
sbb
pop
mov
clc
stos
inc
jae
push
popa
mov
ljmp
xor
sub
jmp
movsl
sbb
cmp
shrb
rorb
out
nop
scas
sbb
movsl
adcl
jno
pop
mov
sbb
cmp
mov
lods
lret
xlat
imul
mov
dec
pusha
bnd
sub
xchg
sub
jb
in
cmp
mov
outsl
mov
xchg
jo
inc
imul
loopne
mov
sbb
cmpsl
or
sti
clc
std
std
mov
in
ja
add
pop
stos
into
and
in
xlat
adc
scas
ss
addr16
jns
iret
add
aam
fcomps
insl
stc
call
xor
pop
imul
xor
jb
pop
sbb
or
jmp
sbb
mov
out
mov
mov
mov
adc
fdiv
sub
pop
sbb
jecxz
scas
cltd
addr16
jno
popa
movsl
sbb
shl
pop
sbb
jp
stos
test
mov
xor
ret
lock
cmp
pop
push
nop
and
std
or
add
das
outsl
dec
mov
jb
jle
rcrl
lret
cs
repnz
cmp
in
incl
jne
push
or
cld
out
xchg
iret
inc
jg
cmp
repz
js
popa
loopne
cli
imul
mov
lahf
fst
dec
out
ret
ds
or
in
add
push
cmp
mov
push
xchg
sbb
push
pop
sub
lock
adc
outsb
addr16
popf
adc
daa
out
inc
dec
or
std
sbb
std
js
sub
gs
or
push
outsl
add
lret
xor
out
lea
iret
lcall
or
inc
adcl
out
cmp
adc
pop
push
jno
pop
add
inc
pusha
imul
xchg
out
ficoml
inc
jg
repnz
movb
cmp
adc
sub
cwtl
xor
push
adc
outsl
jmp
mov
ficoms
jmp
xchg
xchg
dec
cmpl
mov
cmpsl
popf
or
loopne
jecxz
push
ret
in
jge
mov
sub
xchg
int
jbe
imul
jge
and
daa
dec
int3
dec
pop
jae
and
push
js
movsl
dec
sub
add
testb
add
jb
xchg
mov
pop
dec
xor
add
add
popa
push
cmc
xor
fcoml
jp
mov
lret
sbbl
push
bound
lods
dec
xor
add
cmpsb
push
jns
adc
xlat
repnz
adc
fldt
or
xchg
aam
pusha
test
jge
in
clc
sub
imul
fistpl
pushf
call
mov
xchg
xchg
sbb
movsl
dec
cmp
dec
inc
push
dec
ds
lret
test
xor
and
test
lret
push
cmp
mov
mov
xor
sbb
ja
vpaddsw
mov
lret
cmc
and
push
movd
out
push
pop
xor
and
jbe
mov
pop
and
je
loope
mov
in
xor
ficomps
insl
mov
les
fadds
jb
stc
stos
mov
pusha
dec
jmp
lcall
in
js
in
mov
inc
leave
mov
out
mov
mov
std
mov
push
mov
xlat
xor
shlb
sub
cmpsb
aam
ds
gs
shl
loop
hlt
outsb
test
mov
adc
je
sub
adc
loopne
or
stc
lods
push
loopne
sti
mov
jge
jle
jns
ja
bound
sbb
fidivs
sbb
fucom
xor
adcb
jp
dec
or
popa
pop
insl
setg
jnp
sti
mov
scas
outsb
mov
add
movsl
jle
xchg
call
lret
pop
jae
jmp
int3
or
out
jle
aaa
pop
mov
mov
adc
mov
lret
push
mov
outsl
nop
inc
out
pop
cmp
repnz
pop
sbb
xchg
inc
lret
jnp
loopne
fiadds
mov
pop
mov
push
lret
sub
fistl
xchg
mov
sbb
add
rolb
rcr
dec
cmpsl
in
fwait
jnp
fdivs
ficompl
mov
stos
icebp
xor
sub
sub
push
jge
outsl
shll
loopne
jg
sub
adc
xchg
jecxz
lock
adc
pop
cmpb
xor
xor
dec
mov
cmpsb
xor
aad
dec
mov
insw
dec
and
and
roll
dec
pop
icebp
dec
cmp
push
fldenv
xchg
insl
xor
not
dec
outsl
jmp
ret
add
or
or
xchg
loopne
pusha
jb
test
fisubrs
insl
dec
jbe
mov
pop
inc
jge
ds
mov
xchg
xchg
jae
dec
add
sub
pushf
jle
in
dec
dec
sub
cmp
jne
sarb
xchg
or
add
cvtps2pi
testb
pop
outsb
xlat
push
mov
test
jo
and
mov
in
mov
push
aas
fs
sub
les
fdivr
jecxz
scas
jg
mov
sub
fwait
test
in
fidivrl
daa
popa
mov
mov
fadds
test
ret
stos
adc
cli
daa
dec
inc
fisubl
push
jbe
ret
insb
pop
inc
mov
mov
loope
mov
cmpsb
fs
push
into
jle
jns
loope
cmp
sahf
xor
dec
jno
and
insl
sbb
or
ss
jo
aad
jbe
aaa
sub
sbb
xchg
xchg
cli
js
push
fcompl
and
sbb
dec
addr16
pop
sarl
mov
cmp
pop
test
in
sub
jmp
push
outsb
jbe
add
xchg
mov
lock
fwait
add
or
add
pop
cmpsb
dec
and
shl
hlt
movsl
popf
call
lods
add
adc
les
int
div
lahf
adc
mov
test
stos
or
mov
ret
cs
or
lcall
mov
loopne
test
test
and
fstl
lret
mov
test
fstps
mov
push
mov
fisttpll
dec
cmp
aaa
inc
lds
mov
hlt
inc
in
repz
jp
fildll
dec
dec
add
jae
add
outsl
dec
mov
sbb
mov
ss
or
inc
lods
movsb
jl
pop
dec
hlt
in
aas
daa
pop
sub
pop
dec
out
in
minps
push
loopne
jmp
inc
cmp
mov
dec
test
xchg
insb
cmp
std
push
icebp
sbb
mov
and
pop
dec
cwtl
movsb
in
xlat
fmulp
xlat
mov
roll
mov
mov
xor
hlt
and
je
jae
je
enter
mov
push
dec
popa
shlb
pop
pop
rclb
push
stc
lret
mov
fcmovb
mulb
aad
in
cld
dec
add
int
stos
mov
mov
cld
aaa
bound
cli
popa
sub
test
mov
imul
add
mov
jle
lea
pop
pushf
push
xchg
dec
popa
or
push
repnz
in
jl
roll
subl
cmpsb
fdivl
ljmp
gs
shlb
shl
jns
scas
xchg
ret
pop
stc
or
mov
clc
jno
jo
iret
mov
mov
cli
jl
jne
push
xchg
dec
mov
aad
push
notl
mov
shlb
sbb
pop
test
insl
iret
in
dec
fwait
or
int
cmp
es
pop
jmp
and
in
shlb
lds
adc
in
xor
lods
xchg
in
pusha
dec
testl
lcall
lcall
sub
cmpsb
lods
test
and
rol
pop
pop
and
mov
sahf
scas
hlt
push
lahf
push
test
mov
add
movsl
das
fists
xor
dec
and
dec
int
inc
popa
sbb
pop
xor
mov
xor
gs
adc
xor
mov
mov
je
mov
xchg
jge
sub
mov
jp
push
mov
cmc
ljmp
xchg
clc
sbb
mov
or
enter
lcall
inc
xor
cmpl
inc
jbe
dec
aad
sahf
pop
dec
mov
mov
fcomps
out
and
popf
and
leave
test
xor
pop
popa
jge
adc
out
pop
adc
push
out
xchg
push
dec
cwtl
sahf
call
movsb
mov
pop
cwtl
jle
sub
push
cmp
mov
outsl
inc
mov
dec
jle
lds
shlb
mov
imul
or
mov
xchg
loope
in
stc
sbbl
jl
hlt
loop
push
stos
in
jno
rorl
mov
mov
mov
xchg
adc
mov
or
push
outsl
and
xor
ret
je
xchg
data16
xchg
sub
mulb
inc
adc
inc
insb
aam
scas
push
mov
xchg
movsb
and
add
es
xor
jne
mov
mov
iret
fwait
dec
fdivrl
aaa
lock
add
mov
out
in
fs
pop
add
mov
ja
test
jecxz
lret
pop
jbe
mov
jl
adc
sbb
inc
mov
outsb
int3
jg
int
cwtl
rcll
cwtl
mov
mov
inc
adc
ret
mov
int
iret
cmpsb
mov
daa
stos
add
pop
shll
ds
in
xchg
sub
mov
lcall
dec
xchg
daa
sub
lcall
or
lea
dec
clc
cli
in
xlat
stos
ror
popa
lods
mov
fsubrl
std
out
lret
cmc
inc
cmp
or
repz
insl
pop
xchg
xor
push
pop
pop
stc
repnz
push
cs
mov
pop
fwait
xor
pop
or
or
divl
cmc
jecxz
or
and
ds
adc
fisubl
lds
sbb
iret
sbb
sub
sub
test
cwtl
lea
sbbl
cld
aaa
xchg
push
jecxz
mov
dec
pop
add
pusha
daa
push
mov
insl
xor
mov
mov
add
xlat
inc
pop
xor
loope
icebp
jg
test
movsb
std
xchg
mov
pop
hlt
or
sbb
mov
adc
mov
and
mov
into
mov
mov
xchg
jg
std
or
aas
push
jns
mov
pop
cltd
mov
pop
je
cmp
lret
fdivrl
clc
cwtl
int
fwait
cmp
fadds
xor
jb
stos
adc
xchg
aad
pop
leave
inc
adc
and
jne
addr16
faddl
fiaddl
sub
lock
pop
out
in
fsub
test
mov
xlat
lret
add
pop
out
movsb
cltd
pop
jne
mov
pop
or
call
jle
push
sar
shll
jl
loop
pop
push
push
push
into
test
mov
xchg
cmp
repz
out
ret
loope
aam
inc
pop
cs
xor
sub
mov
dec
mov
ret
inc
add
xchg
cltd
ret
cmp
sub
inc
pusha
adc
mov
mov
jge
scas
adc
push
mov
cmpsb
loop
add
adc
jns
call
mov
and
out
mov
ja
cmp
cmp
repz
sbb
js
pop
dec
insl
lods
jmp
shlb
adc
jle
pop
mov
jge
mov
fsubrs
movsl
pop
cmp
sub
movsb
mov
cmp
cmc
addb
mulb
xchg
lods
pop
xchg
cmpsb
pop
push
stc
mov
repz
xchg
insl
sbb
pop
movsl
dec
dec
xchg
mov
sub
inc
lret
mov
jnp
jb
jecxz
jmp
dec
inc
xchg
loopne
in
push
ljmp
mov
lret
jge
xor
inc
inc
fidivl
pop
cmp
cli
inc
je
push
loopne
jg
mov
int
pop
cmp
xor
addb
cmp
fdivr
outsb
aas
outsb
cmpb
popa
test
jns
cmpsl
pop
pop
or
xchg
pop
mov
inc
scas
stc
scas
fidivs
push
movsl
jno
adc
jb
mov
cli
daa
std
xor
and
adc
iret
and
adc
lea
cmc
pop
xchg
dec
mov
or
cli
les
dec
sarl
daa
aad
mov
mov
sti
icebp
ret
push
push
insb
or
xchg
inc
add
pop
jo
inc
cmp
push
fidivl
cmc
aad
sub
lcall
and
sub
cmp
push
shrl
cmp
inc
or
test
fmull
cwtl
sbbb
sbb
push
std
cmp
cld
jl
xor
mov
call
or
push
fidivs
in
pextrw
dec
scas
stos
push
jmp
jge
inc
dec
repz
push
add
jo
ds
outsb
sub
push
dec
cmp
jecxz
es
jne
rorl
and
sahf
mov
mov
push
or
ret
mov
scas
in
add
mov
fsubrl
mov
outsb
dec
test
fldt
sbb
mov
shlb
cs
push
iret
xor
push
xor
fidivrl
not
inc
sarl
adc
test
sti
sub
xchg
push
subb
lret
pop
mov
adc
ljmp
xchg
clc
cs
aaa
sarb
fdivl
and
scas
push
pushf
add
in
cmpsb
pop
xchg
cld
mov
sbb
in
mov
dec
test
jb
push
js
sti
dec
push
iret
inc
data16
mov
mov
jno
in
or
test
js
ret
into
in
xorl
rcrl
or
add
sub
mov
outsl
add
mov
and
fs
fcompl
test
push
push
cmp
mov
push
mov
and
imul
push
xor
std
and
cmp
push
xor
popa
mov
and
push
push
xor
add
pop
les
fdivl
test
or
xor
fistps
out
ror
ss
adc
jae
mov
cld
gs
jo
dec
loop
fwait
bound
and
out
test
in
sbb
leave
inc
loopne
into
repz
mov
pop
shll
lods
lods
iret
mov
pop
add
xlat
jb
ljmp
fsubr
cli
xchg
and
mov
out
adc
jg
or
fnstsw
xchg
popf
xchg
jmp
lds
icebp
mov
scas
cmp
mov
sarb
rorb
inc
jg
cmpsb
mov
lret
sahf
push
jb
adc
nop
insl
insb
push
stos
lods
adc
push
bnd
jbe
dec
mov
lds
jnp
pop
incb
lret
stos
jle
inc
adc
push
xchg
andb
sbb
add
sub
incb
cs
out
inc
dec
and
scas
dec
xchg
add
inc
cmp
cmp
sub
mov
sbb
cmp
dec
out
mov
loopne
push
cltd
cmp
pop
movq
pop
adc
mov
movsb
inc
cmp
mov
cmp
fst
sbb
aam
jp
mov
fwait
mov
cmp
add
push
add
or
xchg
cs
push
mov
mov
cwtl
lock
mov
jne
xor
push
sbb
inc
insl
lret
lret
xchg
inc
out
mov
jmp
xchg
pop
popf
mov
pop
push
pop
push
outsb
push
icebp
repnz
mov
out
mov
imul
dec
loope
adc
push
inc
sbb
rorb
pop
push
insl
sub
inc
inc
lea
inc
fs
xchg
mov
out
xor
or
pop
lods
push
cmp
les
push
fwait
xor
sub
or
es
outsl
cmp
cld
aaa
adc
jne
cmp
sub
and
lock
sbb
adc
cmp
fnstenv
test
out
stos
lods
ficomps
xchg
xor
movsl
sub
mov
fidivl
sub
mov
dec
enter
cmpsl
add
mov
mov
insl
push
popf
dec
insl
pushf
sbb
sti
out
hlt
daa
dec
sbb
dec
sbb
lret
lds
rclb
fwait
lahf
cli
xor
push
das
sbb
dec
cltd
xchg
sahf
jne,pn
xor
mov
sbb
rclb
lahf
sti
pop
dec
nop
dec
fldl
notb
out
pop
dec
pop
les
sub
dec
subl
bound
stc
insb
mov
movsl
leave
int
xchg
int
pop
stc
rorl
pop
push
push
xchg
sidtl
les
lock
les
mov
xlat
cmp
push
and
imul
push
fldl
add
jmp
mov
repz
icebp
sbb
sahf
shll
sbb
push
mov
xchg
mov
popl
push
push
jl
in
xor
mov
clc
ret
repnz
pushf
jge
mull
cmpsl
push
mov
ret
add
shll
cmp
or
mov
cmpsb
xor
mov
mov
xchg
call
pusha
loop
jb
fs
jnp
jmp
in
dec
test
jmp
sub
loope
pop
cmpsl
fcomi
daa
mov
mov
cld
sub
add
xchg
es
stos
scas
sti
sub
cmc
loope
scas
out
mov
mov
fldenv
inc
xchg
das
adc
xchg
mov
cmc
out
pop
or
call
leave
aam
xchg
out
test
mov
movsl
in
popf
es
pop
cmp
rorl
lret
mov
in
ret
xchg
int3
adc
repnz
inc
cmp
pop
mov
jmp
mov
and
mov
lcall
cs
repnz
mov
xchg
in
add
sbbl
mov
lea
movsl
inc
cs
idivb
fisubl
mov
aam
movsb
push
dec
pop
adc
insl
cwtl
mov
outsl
mov
jp
shrb
jp
fdivp
add
notl
cwtl
and
mov
push
sub
pop
xor
bound
int
popa
inc
inc
xor
xorb
or
lea
stc
shrl
pushf
adc
js
pop
rclb
dec
test
out
mov
push
sub
xor
iret
dec
ret
push
ret
lcall
loopne
in
iret
sub
jnp
pop
adc
adc
dec
pusha
in
cwtl
mov
jo
repz
inc
mov
jae
adc
sahf
movsl
inc
rcl
sbb
push
xor
jl
mov
clc
lds
rcr
hlt
repz
lods
out
push
cmpsl
pop
lea
mov
add
adc
dec
mov
pop
push
aas
and
xchg
hlt
cmp
adcb
xchg
fisubrl
cmp
sub
inc
mov
out
jno
jb
xor
adc
lret
out
adc
ds
jle
outsb
xor
inc
loope
mov
orl
mov
aas
scas
sub
pushl
or
scas
adc
push
fs
cs
dec
jmp
sub
and
lock
std
dec
mov
jne
ss
inc
add
jecxz
mov
dec
imul
add
xor
adc
xchg
aas
dec
scas
add
cmp
jae
iret
mov
out
push
lcall
sub
lds
imul
ret
in
sbbl
divb
insl
cmpsl
inc
popa
lods
pop
cmpsl
lds
imul
out
push
or
or
mov
jmp
xor
mov
xor
clc
cmp
cmpsb
fs
add
pop
push
repnz
mov
mov
jp
jns
loop
mov
mov
icebp
cmp
ljmp
int
mov
jns
mov
ficoms
or
push
push
dec
or
adc
jmp
stos
loop
test
mov
stos
loopne
popf
popf
inc
les
jmp
roll
dec
out
arpl
dec
add
xchg
iret
fldl
cs
xor
mov
imul
das
fiadds
roll
xlat
pusha
mov
mov
loopne
inc
or
mov
add
sub
pushf
mov
insb
nop
adcb
dec
mov
ljmp
jle
cmp
aad
mov
leave
xor
es
daa
mov
enter
int3
jle
jno
jnp
dec
imul
inc
test
jne
jmp
add
ds
pushf
es
add
nop
out
dec
pop
jp
repz
pop
fmul
cs
rcl
inc
mov
mov
pop
sbb
add
cmpsl
dec
or
int3
movsb
xlat
repz
pusha
xor
jno
xchg
mov
mov
sub
jl
stc
sti
mov
imul
dec
dec
xchg
jle
cmc
std
sbb
call
mov
stc
arpl
loop
push
jno
push
xchg
jae
push
stos
loop
lods
hlt
int3
rorb
in
lahf
outsb
icebp
push
shll
mov
sub
and
in
jecxz
jmp
sub
mov
add
inc
xor
popf
sub
leave
repnz
jl
rcrl
filds
fdivrs
ljmp
rolb
jnp
add
xchg
pop
aad
sbb
sub
pop
mov
iret
aad
jp
dec
xor
lods
and
fcomp
or
outsl
or
add
jne
jecxz
inc
xchg
inc
inc
arpl
rorl
jmp
mov
xor
sbb
aas
push
ja
or
and
push
incl
jmp
das
es
lock
xor
and
or
jp
stos
mov
xorb
adc
lock
mov
outsl
mov
test
insb
cld
sub
lods
mov
sbb
push
dec
ret
pop
adc
jle
xchg
dec
xchg
icebp
repz
push
cwtl
int3
mov
add
cmp
imul
test
sub
sub
mov
rclb
xor
and
mov
fcomps
mov
movsb
mov
or
mov
dec
std
mov
push
outsb
addr16
or
pop
or
cmp
movsb
push
xchg
mov
enter
andb
out
xlat
test
lock
adc
jnp
mov
push
mov
and
lods
and
push
fimull
xor
mov
and
push
imul
in
xchg
roll
dec
jle
xchg
inc
imul
int
and
jmp
xorl
shlb
and
or
push
mov
push
jb
test
sub
lcall
rcrb
out
fs
sub
addl
ljmp
fnstenv
aad
adc
xchg
pushf
pop
nop
outsb
jmp
in
les
test
dec
and
cmp
xor
push
cmpsl
push
or
shl
push
iret
sti
push
mov
lcall
add
ret
les
mov
int3
mov
and
inc
fistl
loopne
ret
repnz
mov
out
repnz
std
addr16
je
fwait
cmp
sub
les
aam
adc
stos
or
pop
frstor
mov
leave
pop
xor
lret
push
pusha
shr
dec
xchg
mov
adc
push
in
jb
dec
sub
and
sahf
cmp
iret
popf
sbb
sbb
rcrb
xor
add
je
mov
popl
push
mov
out
repnz
sub
int3
push
pop
fcoms
ss
jge
inc
and
iret
xor
jge
xchg
dec
lea
sub
fucomi
out
mov
outsl
ljmp
cli
inc
xchg
jl
enter
clc
and
xchg
pop
and
mov
pop
fsubr
fcomps
vprotw
jne
dec
pop
or
rol
and
pushf
gs
sbb
jns
mov
dec
dec
insb
test
xor
aas
bound
jae
jnp
pop
and
fcoml
pop
xorb
fs
mov
fcomps
dec
cwtl
mov
std
lods
loop
and
and
or
bound
arpl
bound
inc
fldcw
push
test
pop
jecxz
adc
jae
loop
in
jg
xor
mov
sbb
loop
push
lcall
popf
add
cltd
icebp
mov
sub
out
add
cmp
out
mov
push
imul
loop
lods
ss
outsb
mov
lcall
pop
cmpsl
mov
jbe
cmpsl
enter
mov
in
xor
cld
and
cld
cmp
xlat
lock
dec
in
push
insl
xchg
ljmp
sbbl
xor
push
cmpsb
mov
lock
mov
pop
mov
dec
push
xchg
xchg
ja
sub
fs
shl
imul
xchg
mov
jb
gs
push
into
pop
in
mov
cmp
insl
shlb
fmull
and
fidivs
mov
arpl
or
test
pop
es
cs
das
dec
shlb
mov
jnp
mov
xor
mov
mov
add
pop
call
aaa
out
out
xchg
jno
sbb
es
cmpsl
pushl
cmpsb
pusha
call
jmp
popf
cmp
jp
jle
fidivrl
test
sbb
mov
dec
lock
fmuls
xor
adc
je
mov
cmp
aas
test
iret
test
outsb
cmp
or
outsl
push
jnp
outsl
icebp
adcb
stc
aas
jcxz
shll
imul
sub
and
daa
fcompl
push
push
es
ljmp
xchg
push
out
stc
in
int3
ljmp
in
repz
pop
fprem1
test
mov
bnd
jb
mov
adc
ret
loope
and
lcall
test
xor
mov
dec
xchg
mov
in
pop
mov
jmp
gs
pusha
test
adc
inc
hlt
or
sub
inc
adcl
and
data16
testb
imul
sub
repnz
stc
ret
dec
jle
mov
pop
stc
cwtl
push
jae
fwait
mov
inc
xchg
add
push
lret
xchg
xor
int
shlb
movsl
andl
push
cmp
cld
dec
shll
fcoms
sbb
lret
mov
inc
in
dec
cmp
jge
iret
cmp
jecxz
lods
push
mov
outsl
push
mov
mov
je
leave
cld
xchg
pop
push
sbb
shlb
and
inc
xchg
cmp
into
in
jge
mov
sub
push
mov
faddl
mov
stos
mov
setle
cmpb
jne
sbb
or
out
out
lods
push
dec
mov
push
and
mov
pop
jecxz
cld
aas
lahf
adc
mov
cwtl
mov
ljmp
pusha
sbb
push
add
adc
xchg
xchg
cmp
sbbl
cmpsb
mov
in
mov
mov
add
mov
orb
sbb
insl
js
movsb
push
sbb
push
or
mov
sahf
cmpsb
cmpsb
mov
addr16
push
in
push
hlt
xchg
out
pop
and
sbb
sahf
mov
push
sub
dec
fnstsw
addb
ret
scas
xor
mov
lret
pop
leave
xchg
add
sarb
pop
sbb
push
imul
add
and
movsb
push
dec
xlat
in
leave
dec
mov
push
insl
jnp
sbb
push
mov
dec
jle
xchg
mov
divl
stos
inc
pop
cli
inc
adc
mov
push
jnp
mov
mov
cltd
xor
lds
mov
pop
cs
xor
pusha
or
out
movsl
dec
dec
dec
sub
testb
fs
stc
pop
pop
cltd
or
inc
fcomi
outsb
test
sbb
or
fs
inc
lret
push
ja
pushf
or
push
inc
ss
jecxz
cmp
or
mov
pop
sbb
dec
mov
sbb
push
into
xchg
enter
pusha
cs
cmp
or
add
xchg
daa
lret
push
cmpsb
decb
and
push
sbb
and
xchg
add
push
jmp
movsl
fadds
inc
mov
shlb
jno
aas
cs
ljmp
lock
push
scas
add
add
fldt
xchg
adc
add
fs
mov
sub
cmp
add
jo
xor
mov
ret
outsl
lea
xchg
xchg
aaa
repnz
xchg
dec
mov
dec
fisubs
pop
cmp
or
adc
inc
cli
xor
add
add
sbb
adc
mulb
push
adc
dec
addr16
add
mov
shl
xor
cld
into
stc
xor
push
cli
jnp
fsubr
dec
pop
push
sub
adc
xor
pop
xor
std
push
pop
adc
inc
cmpsl
loop
adc
fstpl
fwait
add
test
xor
int
dec
xchg
jnp
cmp
cmp
in
ljmp
jno
movsl
adc
outsl
aas
xor
push
out
imul
jge
cli
jle
sub
orl
in
inc
aam
fbstp
lds
inc
fldcw
adc
lcall
ss
les
pop
add
test
icebp
ds
call
dec
sub
or
dec
repz
jle
mov
push
adc
ja
mov
xchg
shlb
sub
movsb
pop
in
or
mov
adc
xchg
mov
aam
in
adc
into
ret
iret
fimull
and
inc
in
mov
dec
or
scas
jnp
dec
jb
popa
xchg
and
mov
pusha
adc
mov
pushf
pop
dec
dec
fdivrl
adc
xchg
insl
mov
pop
mov
push
cwtl
add
loop
push
pop
inc
add
inc
push
push
or
fisubrs
adc
push
lahf
leave
or
jb
jmp
cwtl
pop
leave
jne
push
js
mov
call
xor
ret
jmp
sti
dec
lahf
enter
cmpsb
mov
jmp
push
sbb
je
xlat
mov
loope
fmulp
push
das
cmp
lods
xor
adc
xor
fdivrl
ja
in
or
sahf
push
lods
inc
lahf
mov
mov
fnstsw
xor
push
ret
inc
stos
stc
mov
xchg
mov
aam
xchg
sub
fcmovnb
rclb
mov
pusha
cmp
ss
push
stc
pop
fmul
inc
adc
popa
sub
cs
jle
sbb
dec
test
sub
bound
lahf
dec
mov
sub
mov
test
arpl
mov
inc
jb
add
fiaddl
stc
mov
add
loope
xchg
push
call
jmp
mov
mov
cli
lods
movsb
mov
inc
in
in
xchg
cmp
adc
into
popf
ficomps
insl
sbb
inc
and
jl
dec
outsb
lret
ss
sub
jnp
push
addr16
inc
jp,pt
push
sbb
orb
repz
negb
adcl
stc
cwtl
out
xchg
add
xor
and
insb
adc
jmp
sbb
and
push
pushf
idivl
shl
mov
ds
out
loope
xchg
adc
mov
cmp
xchg
movsb
xchg
fwait
int
mov
in
rorb
push
xor
lcall
repnz
cs
dec
ja
testb
adc
mov
or
mov
lock
aaa
xor
cmc
sti
sbb
push
and
inc
lods
in
lock
jg
repnz
pop
out
mov
xchg
data16
push
ja
mov
stc
push
les
cld
clc
ss
inc
fisubrs
fwait
mov
cmp
mov
jle
jp
cmpsb
add
xor
daa
scas
ret
pop
cmp
or
test
icebp
push
adc
nop
inc
lods
sub
dec
scas
sub
jp
cmp
js
bnd
in
push
fsubrs
mov
rcll
inc
lcall
ljmp
adc
dec
out
pop
repnz
jne
xchg
and
and
pop
cli
fs
mov
push
or
pop
bound
sbb
or
push
jbe
inc
mov
lahf
fadds
js
jle
and
and
mov
adc
test
mov
sub
sti
les
repz
mov
mov
inc
or
mov
jle
and
lahf
cmpb
bound
test
pop
jge
repnz
push
and
mov
mov
xchg
dec
dec
adc
out
fsts
imul
sub
das
call
xor
mov
xchg
cld
icebp
loopne
data16
cld
sub
mov
outsb
in
std
and
mov
addr16
icebp
repnz
or
push
xor
and
add
lods
faddl
sbb
enter
loopne
xor
popf
cmpsl
push
outsb
in
adc
cmp
inc
leave
xchg
sub
clc
push
cmp
das
push
imul
fidivrl
repz
bound
sub
addr16
outsb
adc
sub
xchg
outsl
insl
sbb
xlat
add
mov
in
jne
iret
cltd
cmc
sub
mov
lahf
loop
pop
push
fisttpl
shr
hlt
jg
add
ficoml
insl
sbb
add
add
or
addr16
in
loope
test
sub
adc
fldl
movsb
scas
xorl
in
adc
dec
jns
and
push
loope
decl
sbb
adcb
jmp
pop
xchg
iret
push
sub
sbb
pop
cmp
and
mov
mov
fmul
dec
or
push
jns
cmp
pop
xchg
and
ret
cltd
popf
xchg
std
inc
les
xlat
in
lds
jnp
pop
das
jecxz
ret
fidivrs
mov
lock
pop
xor
out
mov
cli
mov
jg
and
jl
or
and
shrb
sti
iret
xor
add
sbb
push
xchg
cmp
jle
inc
or
mov
mov
cmp
push
add
scas
pop
inc
xchg
xchg
add
sub
and
xchg
sub
pop
ljmp
dec
inc
test
ficomps
addb
cmc
inc
shl
in
and
lods
and
push
or
pusha
loop
adc
rclb
aaa
nop
mov
mov
scas
cli
test
adc
mov
mov
in
jl
xchg
xchg
mov
and
mov
dec
or
sbb
fucom
mov
fwait
adc
int3
and
cltd
outsl
loopne
cmp
loopne
std
and
dec
out
xor
sub
jb
cmp
push
mov
dec
in
inc
fldcw
lods
cmp
cmp
jp
adc
movsb
in
inc
mov
and
sbb
mov
cmp
push
jns
or
cmp
shlb
imul
sub
sar
pop
mov
push
adc
jb
fcompl
and
rcrb
pushw
mov
lcall
pushl
leave
popf
stos
sbb
jl
sbb
mov
and
leave
jmp
daa
inc
je
andl
ret
jns
jg
mov
dec
clc
mov
jnp
lds
loope
icebp
into
popa
jl
jae
and
lea
fdivs
sub
stos
lods
mov
xor
dec
mov
and
xor
mov
lahf
loopne
bound
in
pusha
arpl
xor
xchg
push
jle
pop
dec
cli
inc
jne
sbb
sub
cmp
mov
jns
sarb
sub
mov
test
test
cmp
mov
ljmp
lock
mov
sti
sbb
popf
mov
push
into
mov
pop
sahf
mov
imul
inc
in
xchg
leave
dec
jp
ds
test
jl
add
jno
shlb
test
inc
cs
cwtl
sub
stos
insl
stos
pop
bnd
flds
out
rol
test
pop
hlt
cmpsb
xor
inc
das
xchg
iret
call
or
loope
jmp
mov
pusha
insb
ret
cld
in
lock
and
adc
mov
stos
repz
flds
cs
je
fnstsw
popa
lret
arpl
pop
jp
mov
cmpsb
and
sbb
test
hlt
pushf
iret
pop
lcall
jge
mov
sti
sub
adc
fs
std
xor
push
adc
adc
jno
arpl
pop
dec
pop
cli
dec
add
outsb
int3
sub
mov
or
cs
jns
xor
mov
push
scas
in
cmc
push
or
xchg
inc
sub
jo
xor
jns
aam
cld
out
pusha
sub
cmp
push
sbb
pusha
imul
js
sbb
pop
pop
pop
mov
out
out
fildll
rcll
iret
imul
adc
lds
mov
in
rolb
movsb
mulb
stc
sbb
mov
mov
mov
push
sub
jmp
cmp
movsl
movb
loop
sub
dec
inc
sub
fimuls
xorl
adc
pop
pushf
ret
sbb
imul
inc
push
pop
jnp
xlat
mov
ret
pop
cmpsb
popa
push
imul
sbb
dec
cmp
jle
push
subb
int3
cmpsb
out
fucomi
cmpsb
rolb
jp
pop
imul
mov
fldt
out
dec
into
mov
test
sarb
mov
in
out
push
shl
in
ljmp
stos
idivl
sub
xchg
jne
inc
jno
rorl
je
nop
out
and
mov
notl
shll
xchg
cmpsb
lahf
push
hlt
aam
sahf
arpl
mov
or
pop
adc
sahf
fwait
push
bound
jl
sahf
divb
mov
lcall
push
cmp
xor
test
popf
mov
scas
stos
fisubl
mov
lds
pop
incl
sbb
or
insl
pop
add
sbb
negl
inc
pop
xor
mov
rol
addl
push
fcom
les
sbb
iret
inc
loopne
push
add
std
shll
das
cmp
inc
mov
les
xor
mov
fsubrs
mov
mov
or
sahf
inc
int
mov
pop
lahf
mov
ret
pop
adc
outsb
mov
mov
or
mov
jg
movsl
stc
xchg
or
pop
sub
icebp
and
out
push
pushf
lret
scas
gs
sub
xchg
cli
shrb
mov
aam
or
popl
cltd
jp
sbb
fidivl
mov
std
lods
scas
pop
xchg
lret
jg
adc
fdiv
xor
cmp
adc
fimull
shl
and
sub
bound
lcall
test
xor
movsb
dec
xchg
sub
add
ds
xor
lret
push
dec
mov
push
out
cli
push
jnp
pop
xchg
mov
jecxz
xchg
sbb
leave
int
aad
pop
aas
add
inc
aad
xor
xor
das
or
mov
mov
rcll
cmp
lds
lret
cmp
xor
cltd
loope
xor
push
pop
loopne
cmp
pop
lods
jle
jecxz
or
or
dec
mov
jmp
dec
rcr
jecxz
insl
cs
cwtl
jge
aaa
add
data16
sbb
test
jp
movsl
jns
mov
subl
sahf
stc
dec
fbld
or
or
mov
xor
das
mov
scas
mov
out
je
lock
push
mov
xchg
jmp
mov
imul
dec
xor
int3
xor
lret
and
dec
imul
faddp
out
bound
sbb
push
test
in
orl
insl
push
loope
paddusw
fs
cmpl
sbb
fwait
daa
mov
and
mov
mov
xor
push
faddp
mov
dec
push
std
push
add
in
outsb
adc
lock
mov
fistpll
sbb
cmp
xor
int3
xor
push
xchg
inc
repnz
pop
popa
inc
fisttpl
pusha
mov
in
mov
cli
push
adc
imul
dec
fcmovnb
cmp
daa
or
mov
ret
add
xchg
mov
cmp
cmpsb
push
loopne
jmp
dec
pop
pop
mov
jecxz
xchg
xchg
sbb
rcrl
mov
inc
push
out
jno
in
jae
pop
mov
dec
push
fildl
push
stos
inc
fwait
xchg
push
add
add
adc
mov
mov
pushf
loope
lcall
mov
shl
dec
and
in
adc
fdivs
setbe
push
sbb
sub
addr16
clc
std
mov
out
test
daa
sbb
bound
fldt
push
ds
mov
movsl
insl
mov
mov
mov
mov
xchg
int3
xor
sub
mov
cwtl
jno
movsl
mov
lret
out
stos
mov
pop
or
lret
insb
push
add
pop
iret
iret
lock
and
inc
insl
wrmsr
or
repz
mov
pop
pop
jl
mov
test
and
pop
push
jnp
xlat
sub
aad
in
push
aad
cs
or
sarb
xor
add
add
sarl
xchg
in
jl
imul
sbb
pop
and
divb
adc
lret
lcall
jae
inc
lods
push
mov
shr
or
shl
xchg
dec
notb
nop
sti
push
dec
and
in
rorb
enter
and
fmull
jo
add
imul
loope
scas
cmp
push
inc
add
and
scas
jb
push
push
push
ss
adc
movsl
add
hlt
mov
and
add
inc
push
xorl
mov
adc
mov
mov
mov
xchg
movsb
aad
push
into
ljmp
inc
pop
adc
push
repnz
dec
push
mov
icebp
inc
jbe
add
mov
test
mov
outsb
mov
shlb
imul
mov
imul
or
dec
daa
fs
imul
push
scas
cmp
fcoml
movsl
scas
stc
test
sub
sbbb
and
daa
ss
adc
dec
ss
mov
add
hlt
cmp
loope
inc
mov
sbb
dec
xorb
stc
inc
cltd
cmc
ss
jbe
jge
mov
daa
mov
dec
fcoml
xchg
cld
pop
mov
mov
stos
mov
xor
pop
bound
lods
es
sub
adc
xchg
into
cmpsl
mov
jge
gs
push
ja
ss
fs
ds
outsl
xchg
aad
int3
mov
cmp
aas
push
fcompl
lahf
xchg
xor
mov
mov
scas
sti
cmc
cltd
add
stos
sub
das
mov
jnp
lods
inc
shl
jg
nop
dec
push
rcrl
fcoms
arpl
enter
xor
xor
arpl
sub
mov
repnz
sbb
push
je
das
movb
jmp
pop
inc
mov
in
and
inc
in
lods
scas
jo
jo
imul
mov
pop
mov
pushl
push
ret
divb
mov
lret
sbb
mov
xchg
imul
inc
jb
fidivrl
mov
scas
push
loopne
and
ret
lock
cmp
push
divb
jl
pop
sahf
jbe
mov
ds
shl
std
ja
movsb
adc
jmp
out
loop
dec
imul
sbb
cmp
push
push
push
ds
xchg
cmp
popf
je
mov
test
out
pop
jno
pop
mov
mov
popa
sub
shr
adc
inc
movl
mov
out
pop
sub
mov
incl
xor
lcall
out
dec
imul
xor
fadds
lock
mov
xor
ret
sub
ja
enter
loopne
stc
mov
jne
mov
mov
rorl
push
iret
xchg
enter
jp
pop
pop
pop
or
shlb
sar
lahf
lock
filds
adc
imul
repz
jb
inc
lcall
arpl
push
dec
and
adc
dec
push
push
add
mov
add
push
mov
pop
adc
cmp
jecxz
mov
fbstp
flds
iret
fdivs
aaa
jge
in
lea
cmpsl
stos
ficoms
repnz
jl
incl
xlat
sahf
aam
nop
jecxz
loopne
rcrl
push
sbbl
shl
xor
cmp
sarl
enter
inc
and
adc
ror
jb
lock
lds
xchg
push
das
sub
jo
fdiv
sbb
xor
push
test
pop
pop
es
mov
push
jb
dec
and
cwtl
movsl
mov
jne
aas
ss
and
jp
fimull
addr16
mov
inc
inc
fcomi
sub
test
push
fiadds
mov
xor
mov
jnp
push
scas
out
jecxz
mov
out
lret
mov
cmc
sub
jmp
shll
and
xor
pop
push
pop
aas
xor
mov
out
fbld
add
xchg
enter
stos
rorb
push
mov
int
in
jo
add
jge
scas
aaa
ret
mov
scas
inc
push
dec
cmp
lds
dec
jg
enter
inc
pop
outsl
mov
aaa
pop
cmp
dec
cs
mov
icebp
xor
dec
add
and
xchg
pusha
push
cmp
and
iret
ss
test
insb
push
lds
lods
xlat
mov
mov
mov
adc
mov
dec
testl
test
ror
jae
mov
jnp
loope
int
pusha
dec
inc
cmp
cld
insb
pop
adc
pop
imul
or
mov
lods
push
sub
mov
mov
rolb
and
cwtl
das
aad
or
adc
test
add
add
jns
mov
add
shll
int3
aam
dec
in
gs
arpl
adc
imul
xchg
push
inc
dec
int
push
gs
fistpll
cmpsl
sbb
rcll
mov
mov
fisubl
stos
cmp
std
or
std
lods
in
inc
xor
aaa
fidivs
jae
jmp
mov
movsl
lock
dec
fisubrs
mov
adc
or
addr16
ljmp
jo
sbb
sbb
push
js
jb
fimull
aas
inc
or
or
adc
and
xchg
pop
loope
adc
push
cmp
and
push
lret
push
cmp
test
inc
dec
jbe
inc
xchg
jae
movl
mov
je
inc
insb
jecxz
cmpsl
push
dec
sar
dec
push
inc
or
cmpsb
xchg
jb
push
pop
enter
hlt
mov
mov
insb
push
cmp
enter
or
pop
mov
sbb
sub
in
in
mov
mov
stos
rcr
shrb
call
jnp
sub
sti
adc
or
out
movsb
rcll
push
int3
iret
repz
mov
test
sbb
dec
sysexit
pop
adc
and
stos
stc
xor
ss
dec
cmp
jg,pt
pop
mov
fwait
xchg
cmp
dec
aad
adc
js
orb
push
enter
xor
in
push
insb
push
out
sub
incb
inc
xor
mov
push
cwtl
push
les
insl
jl
mov
dec
jl
shlb
push
jle
lret
in
arpl
and
dec
sbb
lds
mov
addr16
nop
js
pop
cmp
pop
out
or
mov
ja
push
cli
mov
dec
jmp
mov
leave
adc
addb
xor
lret
hlt
or
add
mov
aas
test
sub
frstor
shlb
dec
pop
add
ds
jp
jge
jbe
add
xchg
mov
or
leave
push
out
js
cmp
push
mov
cmp
out
xchg
cmpsb
insb
push
ret
or
lds
daa
mov
in
pop
je
or
cmp
insb
repnz
popf
push
js
cmp
jg
adc
xor
adc
or
dec
jge
sub
insl
mov
icebp
sbb
push
insl
outsb
and
ret
bnd
addl
mov
and
arpl
inc
adc
xchg
jne
xchg
xchg
xchg
mov
sbbl
les
inc
sub
outsl
mulb
imul
mov
inc
xlat
xor
das
leave
fsubl
inc
hlt
cmpsb
sbb
movsb
fisubrl
dec
dec
subb
popa
ror
and
mov
jmp
pop
add
jge
les
dec
aad
xor
push
adc
xor
mov
mov
ja
pusha
push
movsl
jmp
push
popa
bound
div
pop
mov
pop
xchg
mov
imul
dec
aaa
xor
pop
push
sbb
push
jae
stc
or
aad
mov
ss
rcr
fidivrl
jmp
pop
mov
mov
push
stos
push
mov
push
mov
aas
mov
out
inc
push
icebp
xchg
and
adc
daa
xchg
lea
adc
cld
or
rcrb
lret
mov
sbb
jo
adc
test
and
stos
pop
popa
movsb
cli
outsl
mov
push
inc
pop
and
add
mull
cmp
add
inc
xor
xor
mov
cmp
fbstp
xchg
sbb
push
stc
lods
push
push
fists
dec
jns
shlb
jno
into
mov
mov
sarb
or
shlb
pop
jl
shufps
adc
not
dec
jno
sahf
jnp
into
int3
xchg
mov
cmp
pop
add
aaa
push
dec
jae
bound
in
shrb
mov
add
inc
add
sbb
fdivrl
mov
and
pushl
shrb
movsl
bound
aas
jle
cld
xchg
push
jp
cltd
icebp
sbb
imul
push
in
std
daa
xchg
imul
adc
xor
jae
ljmp
cwtl
dec
xlat
popa
add
scas
ljmp
inc
mov
sbbl
lcall
inc
xchg
arpl
jns
pushf
icebp
cmp
lret
xchg
popl
setp
jnp
das
cwtl
rcll
push
ja
pop
mov
push
das
push
adc
or
rorl
jae
lcall
testb
cmp
scas
inc
jne
jb
out
je
inc
pop
clc
add
imul
out
xchg
jno
cmp
pop
jo
jl
mov
or
leave
outsb
sbb
loop
cmpsl
test
lods
imul
adc
sbb
cmp
pop
xor
push
outsb
jae
arpl
cmpsl
xchg
out
cli
leave
ret
ret
loop
cmp
fs
add
mov
jecxz
in
js
mov
cld
lret
mov
pop
inc
dec
gs
sub
std
hlt
jno
pop
into
call
nop
mov
out
stos
lds
mov
xchg
lahf
pushf
fisubs
jbe
sub
sarb
sbb
int3
xlat
icebp
sti
inc
outsl
xchg
repnz
repnz
push
dec
stos
lods
leave
aam
jle
push
adc
mov
fmul
adc
lods
xor
jo
add
pop
cmp
xchg
dec
pop
std
sub
fadd
sbb
mov
mov
dec
mov
xor
hlt
jmp
pop
push
inc
test
xchg
test
mov
or
inc
mov
fsubr
push
cmpsb
mov
nop
testl
mov
jno
mov
lcall
adc
dec
fistpll
xchg
rolb
and
popl
and
sahf
inc
and
dec
and
mov
fisubrl
data16
cmpsb
movsl
push
je
jecxz
fistpl
not
js
call
cmp
push
mov
and
mov
sbbb
cmp
ret
loopne
outsb
mov
repz
outsl
pop
sub
add
aam
cmp
ds
and
sar
adc
repz
pop
inc
fld
lret
ss
pop
hlt
fimull
or
movl
xchg
aaa
fnstcw
mov
out
and
xchg
loop
into
test
daa
insl
outsl
test
enter
inc
push
xor
adc
and
dec
fnsave
les
fcmovu
pop
sub
popw
mov
ret
fisttpll
xor
lret
mov
mov
jl
jnp,pt
repz
xor
xchg
and
and
in
jecxz
and
lods
mov
pop
dec
jnp
dec
mov
fs
inc
jmp
cmp
ds
fstps
sbb
push
xor
fdivrl
loopne
mov
mov
xchg
jb
setne
fwait
shlb
ja
or
iret
mov
jecxz
pop
hlt
js
adc
test
inc
fsubs
adc
rcl
out
pop
test
mov
mov
push
jmp
fidivs
xchg
xor
push
sbbl
ja
adc
push
jo
or
jg
imul
mov
mov
add
gs
mull
sbb
sub
add
pop
insb
jb
sbb
fisttpll
out
fbld
scas
xorb
enter
ljmp
push
xchg
cld
jne
inc
dec
pop
int3
out
jns
jb
mov
xchg
xchg
sbb
addr16
xchg
inc
add
or
icebp
dec
mov
roll
cld
add
loop
xor
lods
push
and
inc
xchg
aad
xchg
mov
sub
lahf
cwtl
push
fisubs
es
lcall
pop
pop
arpl
cmp
arpl
inc
fsubrl
push
outsb
movsl
sbb
mov
and
int3
mov
mov
pop
jno
jge
jb
cmp
mov
jp
and
icebp
out
xchg
int3
mov
gs
or
jno
in
bound
movl
andl
in
or
hlt
push
aad
sub
shl
push
inc
jae
sbb
fs
push
cmpsl
out
ret
adc
sarb
orl
adc
fldpi
inc
fbstp
mulb
mov
cmp
xor
cmp
ficoms
pop
mov
push
fbld
lds
ja
pop
push
mov
aam
loop
dec
sub
xlat
fucom
inc
sbb
test
fwait
imul
test
xchg
pusha
xchg
xchg
mov
sbb
repz
cltd
imul
jge
xor
loope
xchg
jge
ret
push
fdecstp
lahf
inc
out
jg
cmpsb
or
push
xor
jne
jmp
jnp
insb
xor
ds
dec
ds
add
ss
pop
pop
dec
hlt
gs
jnp
mov
push
shlb
mov
sbb
add
mov
inc
pop
jmp
sbb
aad
ret
ljmp
out
lods
into
add
popf
iret
or
ficomps
scas
stos
sar
hlt
xor
push
mov
mov
mov
adcb
xchg
cmp
push
adc
popa
inc
int
xchg
dec
dec
pop
mov
cmpsb
jle
enter
out
fbld
xorb
mov
dec
lret
add
mov
adc
ret
xlat
adc
add
xchg
aas
daa
push
leave
test
popa
jnp
mov
mov
jp
or
inc
mov
popa
cli
imul
les
adc
test
cmpsb
sbb
jae
add
or
scas
test
pusha
cmpsl
and
cmpsb
mov
pusha
pop
loop
test
jge
cwtl
out
push
jge
insb
iret
fwait
and
and
xor
clc
sub
jge
push
pusha
and
mov
pop
addb
mov
std
mov
in
xlat
mov
adc
cli
movsl
leave
jno
xlat
ret
xbegin
lcall
fadds
cmp
or
das
pop
and
jmp
outsb
jle
int3
xchg
imul
scas
int3
daa
pop
dec
mov
ret
pop
outsl
imul
inc
ret
mov
stc
movsb
push
sub
clc
xor
lea
push
xor
loop
loope
inc
cli
push
jb
push
fistpll
jmp
das
jae
adc
push
inc
int
mov
ljmp
inc
add
test
sbb
mov
mov
test
xor
icebp
lcall
popf
inc
int
ljmp
arpl
add
mov
jge
mov
jae
enter
sbb
mov
arpl
and
adc
push
bnd
or
sahf
lahf
ret
push
ds
mov
out
js
fidivs
xor
or
push
imul
mov
movsl
mov
add
push
jae
xor
in
mov
cltd
test
out
pop
outsl
enter
inc
xchg
mov
sbb
inc
push
testb
mov
xchg
jo
repnz
mov
pop
into
insb
push
orl
pop
pop
enter
jno
outsl
cmp
pop
loopne
mov
push
mov
push
pop
dec
xorb
jge
lret
sbb
add
loope
jg
fidivrs
jp
push
repz
scas
out
ficoml
push
mov
cmp
aas
push
push
fdivrl
or
mov
jecxz
xchg
mov
lret
xor
xchg
inc
lret
pop
dec
popf
xchg
mov
mov
fists
xor
or
int
ljmp
mov
outsl
jnp
pop
fsubr
mov
add
dec
mov
cld
shrl
dec
pop
xchg
push
mov
and
cmc
jmp
xchg
fbld
bound
inc
dec
outsl
dec
cmp
inc
rorl
in
shll
mov
repnz
mov
pop
pop
pop
or
and
nop
rcll
adc
and
mov
mov
movsl
in
sbb
inc
insl
cltd
clc
push
je
jle
sbb
mov
out
sbb
lret
cld
cmp
out
and
scas
dec
icebp
lret
outsl
jmp
xor
dec
jb
push
inc
notb
push
mov
mov
lahf
sub
and
pop
lahf
enter
les
mov
mov
popaw
push
mov
pop
shll
push
idivb
xchg
cmp
pop
mov
aas
call
or
test
incl
lea
sub
les
push
inc
mov
aas
faddl
ficompl
out
dec
or
pop
iret
imul
stc
je
test
lret
ss
jno
fsubrs
fidivl
idivb
ds
mov
push
sub
xlat
mov
dec
mov
push
or
enter
enter
bswap
xor
inc
cmpsb
lcall
outsl
out
push
call
dec
ret
lods
jecxz
pop
cltd
ljmp
ljmp
dec
sahf
and
ret
shrl
out
lea
mov
cwtl
cmp
jmp
cmp
insl
xchg
aaa
sbb
mov
mov
jb
ja
test
sbb
movsl
inc
clc
shr
insl
inc
imul
mov
adc
ja
cmp
cmp
int3
pop
sahf
cmp
mov
jge
xor
jge
pop
mov
sbbb
dec
pushf
shlb
or
loop
test
push
das
xor
das
mov
jmp
adc
js
and
cs
or
push
jae
mov
imul
movsb
out
push
mov
sbb
xchg
mov
enter
dec
ret
jp
xor
repnz
cmc
or
icebp
cmp
add
inc
xor
pop
inc
jecxz
daa
cmpsb
mov
out
nop
xchg
push
add
cwtl
sbb
jle
mov
jecxz
enter
mov
lds
dec
adc
cmpsl
imul
testl
inc
pop
mov
sbb
dec
push
dec
push
and
repnz
mov
jmp
lret
cs
sbb
and
pop
dec
nop
push
cmp
adc
ror
pop
xor
pop
shll
mov
in
frstor
mov
out
nop
outsb
jno
mov
jno
inc
sub
pop
adc
cmpsl
dec
jo
xchg
leave
fsts
adc
jmp
sbb
outsb
lahf
clc
mov
sub
in
dec
shl
movsb
cli
cwtl
mov
popf
xor
enter
jmp
xchg
and
es
je
mov
jmp
divl
push
jp
push
test
mov
xchg
ds
fldl
ja
dec
and
ret
inc
js
dec
dec
push
loopne
aad
jle
pop
add
imul
jle
imul
sbb
lock
mov
int
push
flds
std
mov
arpl
jl
and
test
xor
mov
das
lcall
out
inc
sbb
fwait
fwait
popf
lret
jae
xor
shll
push
popa
adcl
aam
and
sbb
push
inc
inc
lahf
lcall
push
icebp
movb
cmp
ret
fisttpll
call
xor
jecxz
push
cmp
add
mov
cmp
scas
inc
mov
pop
mov
and
push
mov
daa
push
mov
sbb
mov
xchg
sub
fcompp
and
aad
sbb
lcall
push
cmp
dec
imul
pop
adc
sahf
out
xchg
andb
lds
dec
ret
int
addr16
stos
je
jl
adc
gs
push
inc
mov
mov
std
push
dec
xor
cld
or
inc
cmp
sbb
adc
addr16
inc
aad
and
mov
jns
stc
rcll
jecxz
pop
mov
push
and
imul
push
stos
and
xchg
lret
push
dec
jg
jle
and
les
scas
dec
movsb
sbb
outsl
inc
push
lret
loope
es
sub
pushf
mov
xor
in
repz
pushf
xchg
jo
xor
adc
test
addr16
add
sub
push
mov
mov
mov
popl
push
add
jno
pushf
in
cmp
mov
mov
cmp
movsb
nop
inc
out
insb
rcrl
test
nop
stos
orl
mov
mov
pop
or
adc
sbb
movhps
and
scas
negb
inc
push
insl
pop
mov
push
dec
mov
insl
push
popf
jle
mov
daa
cmp
fimull
sub
xchg
test
xchg
out
mov
outsl
sbb
mov
pop
push
dec
mov
arpl
rcl
cmp
les
fstl
cmp
push
or
iret
dec
jae
ss
push
clc
mov
andb
notb
dec
ficoml
loope
or
insb
out
xchg
mov
xor
mov
push
push
push
cmpsb
xchg
test
pusha
addr16
out
ficomps
repz
shlb
movsl
add
adc
lret
and
cmp
ss
jno
add
mov
jo
adc
adc
mov
cmpsb
test
loop
xor
adc
push
mov
stos
push
fs
aad
bound
repnz
incb
pusha
sahf
call
adc
mov
lods
lret
imul
dec
mov
xchg
pushf
call
mov
and
jecxz
das
cmp
scas
jne
lret
and
pop
dec
or
out
movsb
and
daa
push
fdivl
mov
enter
iret
sbb
adc
jp
enter
rorb
imul
rclb
adc
lds
movsl
jp
in
xchg
and
cli
mov
add
cmp
xchg
adc
mov
int
das
hsubpd
sbb
dec
add
push
sub
fnstcw
push
mov
push
enter
movsl
aad
jle
push
mov
mov
repz
cmp
enter
insl
inc
test
sbb
call
xchg
daa
mov
push
js
xlat
negl
mov
ret
ss
negb
or
sbb
inc
jmp
mov
xor
outsl
dec
in
lea
mov
or
addr16
les
add
xchg
ljmp
lahf
das
xor
jl
mov
outsb
js
addr16
out
sbb
test
ror
js
aaa
pop
cwtl
int
mov
adc
loope
mov
xor
xchg
mov
mov
pop
dec
stc
out
ja
jmp
sbb
pop
aad
mov
cmpb
mov
add
xchg
dec
xchg
in
inc
push
inc
popa
mov
arpl
adc
or
push
cld
pop
mov
filds
sti
add
mov
mov
scas
mov
and
call
stos
enter
cmc
pop
inc
cli
mov
push
stos
mov
out
adc
lods
pop
insl
shll
shlb
adc
push
mov
mov
fdivrl
inc
mov
adc
xchg
sbb
xchg
sub
out
cli
cmpsl
scas
mov
inc
shlb
pop
cmp
push
outsb
inc
and
jnp
mov
xlat
mov
loope
sbb
insb
je
jmp
int
dec
push
adc
lods
mov
push
xchg
jg
xchg
ret
add
ficoml
push
cmpsl
or
jge
and
fsubl
ljmp
xor
mul
loope
inc
mov
sti
xchg
ljmp
out
js
enter
shrl
inc
sub
lods
mov
mov
xchg
cld
stos
sub
call
push
or
push
xor
outsl
cli
inc
lds
jp
adc
xchg
xor
loop
outsl
sahf
mov
sarl
inc
lods
adc
das
add
push
jp
movsb
stos
insb
data16
xor
xor
add
cmpsl
movsl
and
mov
inc
fdivl
test
gs
sub
test
inc
push
out
cmp
out
or
mov
adc
pop
stos
sbb
xchg
sub
pop
pushf
inc
ja
lea
jno
fcoms
loope
lods
adc
sbb
sub
and
pusha
ficomps
push
lods
movsb
mov
jmp
cltd
xchg
mov
cmc
adc
sbb
xor
xor
test
imul
shr
mov
push
xchg
les
pop
mov
mov
es
pop
gs
insl
push
sbb
add
loope
fdecstp
adc
lret
pop
out
stc
mov
xor
lock
pop
movl
jle
xchg
rep
mov
pop
add
loop
xor
sbb
add
in
sub
ficoms
inc
mulb
push
xchg
xchg
mov
mov
push
mov
aam
mov
xor
adc
pop
or
cmp
jp
das
shl
pop
test
stos
mov
sbb
adc
aas
aam
pop
dec
sub
pop
mov
je
jnp
sub
scas
cmp
pop
sbb
mov
inc
sub
push
prefetch
lock
xchg
mov
sti
not
mov
jne
cmc
inc
pop
cmc
data16
sbb
mov
fistl
or
mov
fucomi
mov
push
jmp
inc
negl
dec
mov
repz
xchg
mov
mov
out
fiadds
xor
shrl
and
out
sbb
mov
pop
or
leave
dec
sarl
pop
std
xchg
xorb
adcb
subl
loopne
rcll
je
inc
loopne
out
sahf
outsl
mov
xor
jae
jp
int
push
mov
pop
test
push
imul
sti
mov
jbe
jl
mov
add
loop
push
mov
xchg
and
mov
inc
orl
pop
mov
push
jmp
jge
sub
mov
jb
stos
push
jno
pop
adc
mov
stos
sub
jno
jbe
loopne
push
push
or
sbb
es
arpl
cmpsb
xor
mov
pop
stc
mov
cmp
dec
xchg
cltd
stc
test
inc
jg
pop
sbb
repz
lret
xchg
pop
fsubrs
cmc
mov
mov
lods
jb
pop
call
or
sub
scas
push
mov
clc
pop
ljmp
cmp
sbb
xorl
mov
fnsave
jmp
sbb
push
ljmp
adc
fs
test
es
pop
sarl
cs
or
sub
add
mov
ret
movsb
int3
mov
mov
xorb
lahf
push
out
repnz
adc
add
pop
sbb
loopne
mov
mov
xor
mov
xchg
mov
repnz
or
jp
add
mov
in
sti
pop
mov
cwtl
leave
jb
add
push
xor
sbb
jbe
mov
adc
or
nop
cmp
sbb
push
dec
jle
repnz
xchg
outsl
or
icebp
mov
fisttpl
mov
subb
das
push
xor
cwtl
in
xor
pop
aad
mov
cmc
cmpsl
lock
jae
push
jge
iret
jb
dec
pop
sub
insl
or
xchg
xchg
inc
test
movsl
mov
mov
loopne
inc
ja
add
int3
imul
cmp
scas
enter
lcall
in
adc
sbb
outsb
out
jmp
shll
sahf
add
adc
ds
xor
subb
xchg
xor
shr
xchg
outsb
push
push
sub
or
nop
mov
mov
push
out
mov
push
mov
fisubrl
pop
dec
jne
call
shll
cmpsl
dec
mov
insb
xor
xchg
inc
cmp
jmp
cmpsl
xor
jne
lret
cmp
addl
cmpb
repnz
testb
dec
xchg
mov
jecxz
ret
movsb
lretw
add
out
push
xchg
shl
mov
sbb
in
mov
ds
gs
push
mov
leavew
in
sub
push
lock
lods
lods
or
inc
mov
loope
mov
stos
cmp
add
sub
inc
mov
mov
xchg
pushf
lea
jle
ja
adc
adc
xor
in
out
jg
roll
cmp
sub
scas
or
call
push
sbb
cwtd
stos
mov
in
add
mov
push
ret
mov
loope
or
adc
mov
pop
faddl
mov
insl
sub
inc
xchg
lods
mov
and
jno
shrl
popa
aas
push
popf
loopne
lret
das
add
jb
aaa
lods
ss
loope
cld
sbb
cmp
fisubrs
cmc
xlat
mov
lods
mov
jns
jg
clc
ja
jbe
add
pop
lea
cmp
push
imul
daa
and
add
inc
das
adc
hlt
mov
mov
or
xchg
pop
mov
fmull
xorl
mov
xor
mov
rcl
jg
sbb
into
pop
cmp
outsb
loope
movl
loopne
push
push
insl
cmpsb
pusha
xor
mov
sahf
sbb
fstpt
sbb
pop
inc
push
es
mov
dec
mov
rcl
std
adcl
and
repnz
inc
mov
bound
cli
mov
fsubr
stos
enter
fcompl
insb
repnz
out
sub
movsl
lea
sbb
sub
mov
dec
pop
test
pop
ret
pop
cmp
lods
or
enter
or
and
cmp
pop
or
imul
dec
fbstp
lds
mov
outsb
push
iret
dec
in
loop
mov
add
xor
rcrb
in
inc
sub
fists
cmp
push
stos
ret
push
and
fstpl
mov
sbb
ja
inc
push
pop
adc
cmp
addr16
dec
fs
ljmp
mov
lret
out
jne
mov
add
or
lret
or
ja
cmp
fwait
popa
pop
pop
enter
mov
je
sub
adc
rolb
fildll
fnstcw
sahf
popa
lock
xlat
push
inc
jl
mov
cmpsb
push
cmp
and
sbb
sbb
aad
iret
dec
pop
fidivs
jnp
sahf
add
jae
cmp
int3
push
push
sahf
leave
dec
sarl
popa
lret
mov
lcall
lds
jb
mov
lock
scas
push
jne
enter
fdivl
push
aas
xchg
es
std
inc
daa
mov
in
call
mov
mov
cli
xchg
push
icebp
mov
dec
int
fidivs
loope
fnsave
std
arpl
inc
mov
sahf
mov
or
and
mov
mov
adc
cmpl
fsubrl
pop
mov
and
cmp
leave
and
std
xor
pusha
test
add
mov
push
mov
test
fidivrl
push
or
jnp
lea
testb
jp
je
jo
popa
jecxz
sbb
fisubrs
mov
aad
lahf
pop
fldenv
les
jecxz
ret
movsl
fmull
scas
fadds
mov
pop
push
xchg
popf
mov
sarb
sub
aas
loopne
ret
lds
ret
outsb
ucomiss
insb
inc
sbbl
shll
cli
mov
jp
in
addr16
iret
cs
add
sub
add
sti
push
rcrl
lahf
mov
xchg
ret
mov
sti
call
cli
jge
imul
mov
jl
repz
call
xchg
jnp
push
jmp
nop
into
inc
lret
lcall
mov
sub
sub
push
inc
out
ffree
pusha
mov
mov
test
aad
data16
mov
sub
clc
mov
into
mov
out
ret
bound
and
push
addr16
test
pushf
or
push
cmpsb
jg
mov
pop
push
pop
mov
inc
push
mov
sub
ret
push
dec
orl
jae
sarb
repz
lret
xchg
mov
mov
imul
jecxz
pop
in
adc
xor
cmpl
in
call
mov
xchg
nop
shrl
jp
xor
lods
movsb
inc
rcll
jp
mov
cmp
mov
dec
sbbb
sbb
xchg
mov
mov
add
hlt
pop
mov
scas
pusha
ret
loope
jb
add
cmp
push
mov
sub
cmpsl
or
scas
popf
mov
push
lock
std
loopne
push
js
mov
push
mov
add
mov
add
sub
add
int
xchg
xor
mov
call
mov
int3
xor
mov
adc
xchg
lret
rclb
xor
or
dec
mov
adc
rolb
ljmp
loope
movsb
push
daa
lods
imul
jle
clc
mov
jbe
shrl
jecxz
xchg
pop
movsbl
test
add
inc
sub
mov
mov
xchg
lret
setne
div
xchg
sbb
dec
test
sub
and
push
das
fucomi
sbb
test
icebp
push
scas
mov
fwait
test
cld
dec
cmp
test
and
xlat
mov
xchg
je
addr16
add
mov
int3
cli
mov
stos
dec
push
pop
push
pop
in
pop
fprem
sahf
dec
sub
sti
dec
idivl
mov
mov
insl
in
cmp
call
cmp
clc
pop
mov
push
icebp
jns
sub
rorb
fcomps
sub
js
jl
or
sub
mov
jmp
dec
mov
inc
xor
stc
in
aad
stos
push
cmpsb
repnz
outsb
cmp
jmp
scas
xchg
inc
leave
and
mov
or
imul
xchg
rcrl
clc
cmp
pop
divb
cmp
fwait
push
insb
aad
or
test
jo
cltd
or
push
push
add
ja
push
ds
adc
and
mov
mov
into
and
xchg
inc
aas
adc
rolb
push
repnz
out
or
cmpsl
stos
xchg
loopne
push
fs
and
jecxz
clc
fstpt
bound
inc
add
and
cmp
aam
std
sbb
add
push
fadds
scas
xor
stos
data16
stos
mulb
and
icebp
inc
mov
dec
call
and
prefetchwt1
mov
add
xlat
out
outsl
xor
bsf
jne
sub
inc
arpl
or
rorb
and
sub
out
les
lds
ret
mov
fcompl
mov
cmpb
insl
sub
cmp
mov
jb
stc
icebp
xor
sub
sub
mov
mov
adc
inc
mov
fcmovnbe
insb
or
hlt
ss
shrl
ss
fisubrl
xor
pushw
push
fcompl
mov
push
lahf
cmp
adcl
stos
test
sub
dec
mov
mov
loopne
mov
loop
aas
or
inc
icebp
inc
fbstp
cmp
mov
xchg
pop
mov
xchg
fchs
lret
mov
sbb
aam
pop
push
in
and
jnp
stc
dec
push
jnp
iret
clc
je
xor
inc
divb
ss
push
dec
xchg
outsl
jno
stc
mov
loope
push
repnz
xlat
jb
and
cmp
pushf
out
add
repz
popf
cmp
ds
clc
push
adc
jae
fs
mov
rol
ret
mov
adc
scas
test
hlt
jno
fsubl
sbb
test
or
xchg
pop
lcall
clc
inc
push
or
imul
arpl
ret
sbb
inc
insb
jp
push
and
mov
mov
push
xor
mov
add
adc
xchg
adcl
frstor
jo
dec
dec
outsl
outsb
inc
push
xchg
inc
xchg
arpl
cmp
jle
dec
jbe
mov
ficompl
dec
rcll
insl
jne
loop
shlb
leave
adc
mov
les
out
rcr
sbb
sub
push
dec
sbb
pop
out
xor
nop
push
lret
repnz
mov
mov
rcrb
inc
cltd
jecxz
int
sub
aam
flds
iret
sub
cmp
mov
pusha
adc
and
test
test
popf
popa
inc
jge
sub
lahf
mov
imul
stc
sbb
sbb
insb
imulb
sbb
and
push
and
mov
xchg
arpl
repnz
pusha
sub
lcall
in
xchg
cwtl
adc
sub
in
add
cmpsl
push
xor
cs
jp
fstps
hlt
sahf
enter
aam
repz
aad
dec
adc
jne
ja
mov
std
incb
ja
das
mov
mov
xor
icebp
add
repz
cmp
in
dec
int3
dec
cmp
and
jbe
stos
call
subb
lods
mov
mov
mov
inc
std
in
mov
push
pop
or
test
jmp
insl
inc
aad
mov
or
lods
xor
shl
in
imul
addr16
mov
xchg
cmp
jecxz
adc
je
ret
pop
jo
addl
js
mov
inc
jp
mov
call
sub
jp
cltd
movsl
push
lret
mov
adc
jge
nop
or
jmp
inc
clc
inc
rol
mov
int
sub
icebp
vrsqrtss
jg,pt
or
into
and
ljmp
xchg
push
pop
test
jno
icebp
xor
mov
and
ja
leave
push
subl
push
adc
sbbl
pop
sbb
push
roll
or
jne
and
add
ljmp
xchg
lahf
in
mov
lahf
adc
inc
mov
aaa
mov
add
inc
shlb
in
sysenter
mov
or
sbb
cmc
pushf
loope
mov
in
imull
arpl
jne
lock
cli
sub
fwait
lret
jb
ret
dec
push
aad
testb
xor
out
test
fistps
jbe
sahf
dec
jae
mov
pop
sbb
sbbl
lcall
inc
icebp
test
jo
int3
push
aaa
cwtl
pop
mov
mov
jmp
cmpsb
adc
xor
shrl
sbb
add
push
jbe
push
lds
mov
or
mov
inc
stc
es
lahf
lea
movsl
scas
cwtl
mov
inc
inc
fadds
lret
sbb
jp
fwait
xor
push
mul
clc
in
iret
stos
or
xchg
icebp
cmpsb
cltd
inc
rep
mov
lcall
mov
mov
inc
movsl
sti
outsb
out
sub
scas
sbb
cmp
daa
stc
push
loop
rorb
xchg
gs
xchg
xsha256
cmpsb
push
or
mov
js
adc
xchg
loope
and
mov
add
loope
cmp
leave
cltd
mov
jecxz
leave
aas
add
clc
xor
fmull
pop
cld
mov
mov
fnsave
adc
imul
mov
decb
push
cmp
gs
jg
rcll
mov
ss
mov
ja
sbb
jo
hlt
scas
int3
jbe
xor
cmp
in
loopne
adc
inc
mov
mov
rcrb
mov
jg
sbb
cmc
push
cs
iret
scas
sbb
outsl
xor
push
fucomip
xchg
nop
dec
and
jne
xlat
fscale
xchg
add
mov
xchg
sub
mov
fldl
stos
xor
sbb
mov
jbe
inc
or
adc
push
in
cmp
divl
mov
sti
movsb
jg
lahf
bound
add
xchg
addl
jmp
or
call
mov
jnp
dec
sarb
mov
xchg
jl
pop
mov
mov
loopne
pop
ds
icebp
xor
ret
test
outsl
orb
sbb
adc
inc
fs
int3
adc
xchg
fsubrl
fwait
mov
or
imull
xor
out
and
popa
daa
xchg
lods
fs
cmp
clc
iret
push
push
sahf
addr16
int3
cmpsb
das
mov
js
clc
addb
mov
cld
cmp
sbb
les
xor
mov
sub
loopne
sahf
movsb
pop
add
frstor
mov
in
adc
jg
outsl
ror
inc
mov
scas
sbb
adc
nop
jp
loopne
out
scas
in
mov
sub
and
aad
jbe
icebp
mov
pushf
pop
dec
mov
lods
aam
xchg
xor
pushf
pop
imul
mov
es
fldcw
fidivl
sbb
rorl
fs
pop
icebp
dec
fnstsw
mov
jp
mov
push
inc
loopne
sbb
adc
adc
sub
push
add
jge
dec
pop
inc
mov
lea
stos
les
cmovnp
fldt
into
cmp
aaa
mov
xor
daa
push
fnsave
xchg
lret
je
sbb
mov
lods
adc
leave
out
jmp
fidivrs
fs
dec
mov
or
add
push
test
or
mov
push
int3
xor
mov
push
fidivs
ficompl
adc
push
ficoms
ljmp
out
jmp
call
or
dec
in
xchg
dec
aam
and
adc
insl
or
mov
jns
sub
mov
nop
xchg
mov
jecxz
inc
jo
cmp
negb
mov
mov
in
push
inc
dec
or
ljmp
jnp
inc
insl
dec
or
stos
jno
jns
das
push
aam
mov
imul
or
cmpsb
mov
aas
in
sub
xchg
dec
fs
mov
cmp
or
fidivrs
outsl
cwtl
mov
out
xor
gs
cwtl
mov
ficoms
adc
test
or
and
shrl
xchg
enter
xor
jmp
mov
pop
sbb
adc
jb
imul
loop
lcall
out
jae
into
fcmovnb
mov
xchg
pop
mov
enter
jbe
cmpsl
cmp
arpl
icebp
inc
dec
mov
fucomp
mov
cs
mov
addr16
iret
and
add
xchg
sti
and
mov
cmp
jge
adc
cmp
pop
lret
adc
imul
loope
mov
sbb
dec
xchg
sbb
adcl
mov
iret
movsl
pop
mov
or
test
fstps
mov
pop
mov
shlb
fs
add
leave
cmp
stc
mov
xchg
imul
fimuls
dec
leave
es
imul
mov
stos
jp
inc
mov
sub
out
xchg
cs
sub
aam
enter
lods
jle
add
push
jp
daa
push
jb
mov
mov
cmpsb
popa
or
test
jb
icebp
sar
test
push
fcomps
mov
push
adc
sbb
jbe
dec
push
repz
add
sbb
xchg
jnp
push
sub
stos
or
cmp
pop
jbe
push
mov
and
dec
aaa
fwait
xor
and
or
cmp
mov
cmpb
or
cmpsl
or
inc
sub
sti
rorl
test
mov
call
repnz
cmp
add
xchg
jl
andb
divl
jecxz
es
out
mov
in
mov
mov
cmp
jae
adc
loopne
xor
pop
sahf
rorl
popa
les
mov
dec
lret
iret
out
lret
outsb
xor
push
cmpsl
popf
outsb
je
insb
mov
pop
cwtl
pop
mov
or
dec
xchg
cltd
addr16
adc
fistl
stc
and
xor
imul
mov
pop
mov
icebp
sbbb
rorl
cmp
clc
int
xlat
add
ja
mov
rol
jg
lret
push
adc
lea
mov
mov
mov
ficoml
mov
xchg
inc
sub
bound
popa
das
jg
das
scas
xchg
or
jmp
dec
lcall
popf
jecxz
test
je
out
pop
mov
in
pop
bound
cmc
add
shrl
pop
sahf
sub
bsr
jecxz
jg
lds
je
mov
adc
cs
inc
mov
mov
aam
scas
inc
cmp
mov
cmp
aaa
test
fildll
cmc
adc
sub
movsb
iret
xchg
inc
jl
insl
jo
inc
mov
aaa
loop
mov
notb
or
cmc
inc
or
sbb
add
add
jecxz
sbb
cld
fstpl
loope
mov
or
jns
add
jle
jne
ss
push
mov
es
repz
fldl
or
jecxz
orl
adc
xchg
call
push
cmc
sbb
pop
sbb
inc
aam
fadd
sbb
push
inc
mov
sbb
jle
mov
xor
lret
or
xor
stc
add
push
sub
and
push
pusha
mov
and
mov
adc
xor
push
sahf
mov
fsubrl
pop
add
adc
pop
mov
test
test
es
out
decl
fldt
pop
lods
cmpsb
push
mov
out
popf
aam
sbb
test
xlat
or
jp
adc
add
dec
mov
sbb
fstpl
call
mov
or
pop
push
and
icebp
and
mov
add
push
mov
rcrl
popf
push
mov
mov
xchg
pop
inc
sub
sub
orb
or
xchg
mov
add
cmp
jb
fxsave
mov
push
sahf
xchg
or
sub
ljmp
imul
mov
aad
inc
pop
inc
pusha
leave
fisttps
cmp
pop
shll
inc
mov
jbe
testb
adc
aaa
jns
pop
lahf
mov
xor
dec
cmpsb
imul
js
sbb
push
jo
jmp
loopne
les
insb
test
sahf
mov
call
jmp
ja
pop
lahf
push
leave
push
leave
mov
jecxz
xchg
fcmove
or
jmp
in
jp
inc
and
lea
pop
mov
icebp
jge
ds
ljmp
fnstenv
mov
push
jb
lea
sbbl
push
add
push
jno
xor
cmp
scas
sub
push
xor
and
and
xchg
jp
mov
xor
sbb
insl
xchg
mov
sbb
ja
je
divb
xor
bt
mov
and
xor
pop
icebp
xor
cmp
jo
dec
push
pop
rcrl
cmp
dec
pop
lahf
mov
mov
ds
jnp
out
mov
xchg
or
loopne
xchg
push
cmc
push
mov
sub
jmp
lods
and
jb
pushf
push
stos
xchg
into
mov
aam
or
test
xor
mov
stos
into
addr16
test
push
mov
divb
int3
xchg
adc
jo
lret
inc
inc
push
inc
mov
int3
adc
ret
cbtw
sbb
push
or
jae
fndisi(8087
lret
sub
fnstenv
mov
ss
faddl
jae
jbe
orl
push
mov
arpl
mov
idivl
dec
dec
repnz
cmpsl
movsl
fs
adc
push
mov
decl
cwtl
sbb
cwtl
call
sbb
aam
cmp
mov
loop
cmp
scas
dec
in
dec
adc
inc
cmpl
pop
mov
mov
jbe
pop
out
pop
and
je
xor
and
and
dec
mov
loope
mov
out
addb
mov
sub
int3
cli
push
mov
mov
pop
jns
mov
dec
insl
lea
into
hlt
and
stc
dec
and
xchg
cmc
xchg
testl
ljmp
xchg
cld
stc
pop
push
test
inc
xor
dec
aad
dec
into
mov
aam
aad
sub
xorl
and
xchg
cmc
out
dec
dec
inc
cmp
cmp
aad
and
hlt
scas
sbb
aad
fmull
push
daa
aam
xchg
jg
and
adc
xchg
mov
sub
mov
inc
add
dec
xor
pop
dec
in
sub
xor
sbb
mov
mov
adc
dec
fwait
mov
fs
fadd
sahf
mov
jecxz
sbb
bound
xchg
sti
mov
pop
sbb
add
mov
jbe
sbb
insl
or
push
call
sti
fsubp
and
pop
cld
push
jge
mov
sbb
jb
mov
fstpt
xlat
dec
hlt
aaa
mov
push
and
out
sub
inc
test
push
fs
xchg
xchg
fdivs
push
xchg
shlb
jmp
pop
push
mov
jl
fidivl
or
xchg
add
popa
xorl
mov
xchg
jmp
and
inc
adc
repz
inc
adcl
jecxz
sbb
cmp
jae
out
add
aaa
adc
std
jp
aaa
or
call
aas
imul
stos
mov
in
mov
pushf
lea
mov
aas
cmpsl
lret
sbb
adc
xchg
mov
push
and
push
jno
dec
xchg
mov
enter
aam
sbb
rcr
push
das
fs
imull
bound
pushf
and
ds
aaa
mov
inc
jbe
cmpsb
int3
daa
pop
clc
push
ja
out
push
and
stos
pop
repnz
mov
cltd
mov
or
fldcw
sub
xor
cmp
mov
into
mov
cli
fimull
adc
cli
ds
or
inc
mov
mov
clc
sbb
mov
jb
lods
cwtl
jle
pop
hlt
fidivl
shl
sub
movsb
ja
adc
gs
int3
cltd
cmc
adc
xor
out
adc
xchg
xchg
jmp
ret
call
xchg
mov
aas
jmp
fdivr
lock
aam
and
adc
cmc
cwtl
movl
fidivrl
adc
mov
aaa
icebp
lret
sub
nop
and
xor
xchg
inc
inc
sbb
xor
scas
clc
mov
and
jns
and
push
add
cltd
ds
cs
aaa
mov
popf
lea
call
cmc
cld
sub
pop
dec
cmc
dec
test
fimull
test
in
sbb
addl
dec
cwtl
jle
add
cltd
outsb
add
insl
je
pop
in
push
in
inc
mov
inc
push
lods
adcb
test
popf
sbb
cmp
and
sub
cli
cli
push
adc
pop
mov
push
inc
cmp
into
repnz
negb
mov
sbb
and
movsb
test
faddl
aam
cmp
shlb
sub
test
repnz
push
arpl
popa
fcom
out
loop
lret
or
push
test
imull
sbb
fwait
mov
sbb
jecxz
pop
push
ja
inc
sub
and
js
sbb
lret
dec
push
neg
outsl
out
bound
das
stos
sbb
test
lret
in
or
and
addb
aad
pop
sub
movsl
mov
out
jge
xchg
inc
imulb
jle
cmpsb
dec
pop
push
dec
inc
mov
clc
xor
pusha
push
pop
rcll
add
lahf
mov
jnp
into
sbb
jge
push
push
lea
sti
jge
add
lcall
push
xor
shlb
cli
xchg
in
or
push
cmp
xlat
int
insl
sti
mov
jg
jbe
push
adcb
imull
xchg
sbb
xchg
mov
mov
mov
lock
lods
insb
adc
push
inc
xchg
adc
inc
loopne,pt
test
fsts
leave
outsb
inc
xchg
cmpsb
inc
cld
test
imulb
test
notb
test
in
xchg
rclb
sub
pop
inc
gs
dec
scas
push
shl
test
xchg
xchg
icebp
xchg
in
lahf
loopne
out
in
inc
pop
push
jb
pop
mov
xor
or
push
shlb
mov
int3
inc
mov
scas
or
jmp
stos
mov
push
test
in
cli
adc
les
cmp
inc
fmul
sar
pop
mov
add
dec
push
push
xor
nop
and
fldt
pop
scas
int3
ss
loopne
insb
xchg
imul
xor
cwtl
rorl
jbe
mov
aas
das
in
jge
stos
out
out
adc
dec
jle
cmpb
outsl
xor
pop
aam
lods
in
outsl
movsb
pop
jo
test
hlt
sbb
jp
mov
dec
jl
hlt
sahf
cmp
sbb
pusha
out
pop
out
addl
inc
mov
mov
imul
and
or
pop
int
or
push
in
stc
xchg
leave
cmp
out
xchg
or
fbstp
sub
dec
xchg
xor
jge
jae
adc
sub
gs
xchg
int
sub
aaa
rcr
fsts
xor
adc
jecxz
insl
and
cmp
imul
stos
sub
jle
repnz
mov
faddp
cmp
insb
stos
dec
in
mov
mov
push
mov
icebp
and
mov
pop
xor
add
mov
jge
and
repz
test
cmpsl
stos
fsubl
neg
and
sub
loop
and
lea
jb
icebp
jle
adc
out
mov
repz
xchg
cmp
jecxz
lret
xor
sub
dec
pop
cmp
lret
mov
or
cmp
nop
mov
decl
pop
out
andb
arpl
mov
mov
mov
xchg
pop
xchg
mov
push
lds
mov
out
mov
call
xlat
mov
xchg
cmpsb
xlat
inc
adc
stc
or
test
jae
movsb
ja
filds
inc
aad
sbb
cmp
sbb
push
cltd
fwait
add
loope
dec
ds
mov
mov
add
or
inc
in
incl
jecxz
mov
imul
mov
sub
and
enter
jmp
cmp
cli
pop
mov
push
jo
lcall
mov
jl
dec
pop
sub
es
sub
and
lock
enter
fwait
dec
pop
sub
mov
in
mov
dec
mov
adc
stc
jecxz
clc
or
mov
clc
in
nop
popf
lcall
pop
addb
xor
pushf
fistps
in
aam
incl
subl
jae
mov
xlat
les
sub
hlt
ret
or
loop
je
rorb
mov
xchg
movsb
adc
jne
xchg
mov
sbb
adc
stc
mov
jl
push
fimull
ja
add
loope
fcompl
and
inc
sub
xor
aam
adc
stc
ret
push
bound
popf
add
les
fildll
sub
frstor
mov
mov
test
aad
push
shlb
or
sbb
imul
or
mov
hlt
pop
adc
jo
stc
daa
in
mov
xchg
xor
in
jecxz
mov
fcomi
add
lret
fs
adc
addr16
mov
ret
in
or
mov
clc
mov
inc
sub
or
outsb
addb
cmp
adc
pushf
pop
cld
aaa
ret
cwtl
jecxz
xchg
sub
lahf
xchg
roll
nop
lret
or
cmc
sub
mov
lcall
fs
inc
and
inc
sarb
xor
bound
dec
xchg
sbb
mov
popf
outsb
nop
adc
bound
shlb
sarb
and
addb
test
jmp
cli
inc
leave
dec
lods
mov
daa
and
repz
ja
mov
cltd
lods
mov
adc
fs
mov
test
stos
jp
ffree
xchg
scas
jb
mov
sti
hlt
aam
sahf
cmpsb
aad
imul
inc
xor
push
dec
aad
cmp
and
dec
push
mov
or
ret
cmc
ficoml
jg
cmpsl
xlat
sbb
add
and
in
mov
mov
mov
push
outsl
call
or
lock
lods
jbe
cli
je
scas
pop
lods
fwait
cmp
sub
mov
lock
sbb
dec
mov
mov
bound
arpl
adc
xchg
or
cmp
xchg
sahf
adc
loop
ret
xor
adc
pop
pop
ljmp
cmp
xor
push
sahf
adc
mov
or
insl
xchg
jp
aas
and
lcall
shrl
push
aam
cld
insl
ljmp
or
fisubl
ds
pop
pop
add
dec
outsb
enter
sahf
daa
shrl
fisubs
stc
xchg
xor
cwtl
mov
or
cmp
push
jge
push
stos
mov
mov
xchg
test
mov
out
pushf
lea
jmp
aaa
fildl
scas
popa
mov
dec
xchg
lcall
mov
sahf
jns
cs
repnz
dec
addl
cmp
arpl
lahf
lock
outsl
and
and
repnz
insb
mov
subl
arpl
mov
inc
mov
adc
jnp
push
scas
fadd
or
mov
adc
add
je
pushf
cmp
xchg
fwait
dec
xchg
xor
mov
loop
lret
shl
rclb
sbb
and
mov
ds
and
cmpsb
loopne
insl
cmp
inc
nop
pushf
and
jo
je
mov
insb
xor
push
mov
cli
jns
negl
adc
iret
inc
xchg
aaa
and
push
dec
popf
mov
ret
jp
adc
jmp
out
jo
add
mov
icebp
xchg
les
mov
outsl
mov
outsb
jge
in
jmp
jnp
mov
out
cmp
cwtl
push
stc
add
push
jb
mov
mov
lahf
push
pop
jnp
mov
bound
outsl
push
xchg
and
jmp
fldcw
mov
pop
stos
inc
js
xchg
jecxz
shld
ret
cmp
mov
dec
nop
pop
jecxz
aas
mov
pop
xchg
gs
rcr
scas
add
mov
jecxz
mov
dec
test
dec
ds
push
xorl
jecxz
inc
dec
mov
jl
aas
push
rcll
mov
or
int3
call
bound
mov
mov
js
shrl
jmp
and
push
mov
pop
adc
lods
test
jbe
fistps
cmp
fcomp
jmp
dec
popf
int
push
insl
call
lds
mov
add
sub
dec
int3
mov
push
test
in
and
sbb
xcrypt-ofb
cmpsl
jmp
movsb
arpl
pop
xchg
cmpsb
cmp
cli
orb
jg
fwait
js
sahf
bound
inc
testb
rcll
and
dec
and
imul
dec
xor
sub
test
insl
pop
and
sbbb
test
rorl
popa
in
xchg
pop
dec
inc
mov
xchg
out
cmpsl
popl
add
insl
lds
push
add
and
ljmp
mov
push
pop
adc
pop
mov
ja
loope
or
cld
sti
arpl
js
mov
aam
out
and
add
xchg
out
jne
out
jecxz
sbb
add
repz
adc
mov
test
clc
pop
or
pop
addr16
pop
inc
iret
aad
or
mov
push
fcmovbe
cmp
sub
sub
cmpsl
pop
jne
arpl
mov
out
sub
cmp
int3
push
dec
push
hlt
mov
jmp
xchg
pop
in
daa
mov
and
mov
outsb
mov
add
pop
sbb
sub
aam
mov
cwtl
shlb
mov
inc
adc
pop
je
sti
add
and
pop
pop
pop
arpl
xchg
ljmp
dec
adc
mov
mov
jmp
cmpb
jnp
sub
pop
dec
and
je
adc
mov
push
je
and
pop
repnz
arpl
pop
inc
cli
mov
aad
daa
movsl
sub
fwait
and
repz
out
inc
call
out
mov
gs
add
cs
mov
std
mov
adc
sbb
sub
sbbl
popa
push
inc
mov
mov
sbbb
enter
mov
xchg
adc
inc
cmp
in
test
test
dec
xor
push
je
mov
pop
cmp
dec
or
jns
mov
jno,pt
pop
aas
add
adc
rol
cmc
and
adc
jno
sub
out
jle
dec
andb
addb
or
jp
cld
sub
aam
out
lods
mov
pusha
push
sarb
std
sarb
out
loope
in
in
imul
push
ror
mov
test
push
sbb
out
aad
dec
mov
mov
push
mov
mov
pop
push
nop
and
jne
dec
lret
or
push
sbb
push
push
or
sbb
mov
mov
mov
outsl
mov
xor
paddq
sahf
and
or
lea
mov
add
rcrl
mov
scas
push
and
jne
jno
cwtl
loopne
ret
sub
std
pop
cmc
cmpsb
into
dec
lcall
sub
outsl
adc
sub
into
sub
enter
inc
jmp
cmp
or
push
inc
push
nop
fcmovb
adcb
cmp
lock
test
mov
aad
pop
xchg
mov
sarb
lahf
cmp
push
into
adc
add
push
mov
or
cld
test
mov
cld
inc
or
loop
sub
lea
sbb
fsubl
and
sub
addr16
push
mov
ljmp
or
mov
aad
in
aas
xchg
push
mov
dec
aas
jo
out
in
push
xchg
push
lcall
fcoms
out
lcall
stc
aaa
sub
pop
push
add
sbb
sbb
insb
pop
and
add
fwait
mov
jmp
fsubr
jns
xor
cli
shlb
imul
xor
cld
inc
imul
inc
xchg
repz
inc
aaa
cli
add
and
push
inc
cmp
sahf
inc
dec
xchg
out
out
xchg
xchg
cmpsb
or
jp
xlat
adc
xchg
xchg
fildll
sbb
mov
out
sub
mov
dec
fnstenv
and
xchg
xchg
aaa
pop
push
mov
outsl
fisttpl
dec
sti
jp
xchg
idivb
jns
rol
std
mov
or
add
std
fisubrl
loop
push
fists
stc
imul
test
fildl
ss
add
push
les
and
fs
inc
push
and
dec
mov
bnd
cmpsl
ds
pop
add
mov
mov
mov
ljmp
mov
adc
xor
push
jge
or
cld
pop
subl
cmp
rcrl
xchg
adc
inc
inc
lret
jbe
jns
push
pop
or
out
fidivrs
mov
fisubrs
stos
pop
push
aaa
hlt
cmp
insl
push
add
push
jp
lea
fdivs
stos
inc
xor
nop
dec
mov
lahf
xchg
push
jl
stos
inc
fdivrl
lcall
push
or
fwait
sbb
aam
cs
ret
inc
mov
mov
add
xchg
wbinvd
sbb
mov
movsl
out
jg
mov
dec
push
stos
xor
imul
dec
mov
lcall
xchg
xlat
adc
call
mov
cmp
pushf
dec
cmp
fbstp
test
dec
jnp
mov
shl
push
mov
xchg
scas
push
int
dec
mov
push
fxch
sub
lret
xchg
pop
mov
jmp
sub
jle
xchg
int3
xchg
mov
les
cmp
fisubrs
imul
je
je
addb
xor
cmp
pop
fldl
fwait
cmp
inc
xor
enter
sahf
jg
jno
roll
mov
dec
xchg
add
sub
xor
bound
imul
cmc
push
stc
push
cmp
mov
inc
shrl
xchg
sarb
adc
pop
mov
xchg
mov
mov
jge
lret
sub
inc
shlb
inc
or
or
in
fstl
push
inc
or
outsb
inc
and
xor
pop
xchg
cli
mov
jp
jl
fcmovu
and
jns
sarl
popf
push
cld
mov
dec
push
lock
out
insb
jno
xchg
mov
leave
in
pop
outsb
test
andb
hlt
mov
xchg
fildl
lods
ss
adc
testb
iret
lods
push
sub
fs
rcr
loopne
mov
jp
mov
leave
sbbb
push
outsl
pushf
dec
sbb
jg
shl
rep
loop
bound
ret
mov
mov
insl
mov
cmc
or
adc
jmp
ss
jl
jb
inc
mov
shll
das
in
out
mov
pushf
divb
jp
shll
scas
pushf
add
test
jp
loope
arpl
or
xchg
mov
dec
call
jge
ljmp
mov
into
not
push
fwait
mov
mov
add
adc
sbb
pop
fbstp
pop
repnz
jmp
push
leave
nop
cmpb
ss
idivl
cmp
aaa
lret
bound
stos
or
push
jo
into
pop
adc
xchg
jp
ljmp
idivb
inc
push
mov
mov
insl
cmpsb
jae
filds
sbb
pop
jecxz
mov
sbb
lock
cmpsl
cmp
stos
push
jno
add
mov
push
mov
aaa
dec
popl
jg
stc
xchg
push
jmp
inc
adc
mov
jg
inc
xchg
fisubrl
pop
aam
int
mov
inc
mov
enter
or
add
movapd
sahf
push
fildl
jg
outsb
pop
cmc
mov
movl
imul
xchg
sbb
test
fimuls
shrl
ret
mov
shll
and
fiaddl
inc
dec
mov
push
jge
cmp
fildll
in
xchg
cmp
int3
sub
rcrl
loop
stos
stc
pop
aad
push
xchg
nop
jne
xchg
inc
shll
add
pop
cmp
jg
enter
xchg
decb
addr16
stc
sbb
lea
jbe
ror
jp
xor
sti
std
mov
inc
mov
cwtl
sbb
xor
loope
push
mov
adc
mov
rol
bound
lcall
pop
mov
xlat
je
sbb
push
imul
mov
cmpsl
dec
cltd
push
and
pop
in
mov
sub
data16
mov
push
cmc
push
dec
clc
jge
nop
jge
and
mov
loopne
jge
mov
adc
mov
enter
les
mov
mov
adc
notl
sub
add
je
push
sub
mov
sti
jge
jne
xchg
lcall
je
add
push
cmovl
jecxz
xor
and
cwtl
push
mov
out
xchg
fsts
lea
lds
adc
pushl
mov
or
shll
das
in
push
inc
sbb
jl
in
and
int
sbb
pop
mov
ja
clc
push
stos
mov
mov
js,pn
fdivl
mov
mov
pop
test
shld
sbb
mov
cmpl
push
sbb
mov
xor
lock
sbb
pop
or
xlat
push
fisubs
mov
std
sahf
cmp
dec
mov
mov
jmp
xchg
sbb
out
js
shll
mov
aad
cmp
out
loop
or
inc
xchg
call
xor
leave
dec
and
sbb
loopne
jo
bound
inc
popa
scas
jb
cmp
xlat
gs
jmp
insb
mov
ljmp
sub
mov
call
inc
xor
push
mov
std
scas
mov
pop
pop
outsl
mov
in
out
jl
lods
in
ss
jle
inc
inc
test
cmp
aaa
sub
mov
jp
mov
inc
scas
mov
stc
call
popf
lret
jno
notl
pop
add
sbb
fcmove
comiss
pop
addr16
popf
cld
cmp
cld
out
filds
pop
cmp
sbb
jmp
sub
mov
xchg
jl
jp
push
scas
les
adc
and
dec
or
ja
in
cwtl
mov
mov
mov
jb
test
xchg
and
pop
mov
push
repz
sub
gs
mov
scas
int3
add
rcr
or
inc
aad
ljmp
jg
sub
or
xor
lods
adc
pushf
test
mov
jns
xchg
popa
inc
adc
mov
xor
sbb
adc
mov
pop
popf
push
bound
enter
mov
mov
cmp
push
imul
in
adc
cmc
xchg
lods
jge
into
ss
out
jbe
outsl
push
jnp
or
mov
arpl
sub
push
scas
dec
fs
add
pop
or
in
add
jne
iret
pushf
xor
xchg
mov
insl
mov
adc
xor
pop
xlat
mov
arpl
pop
lahf
loopne
jb
push
cmp
mov
out
cmp
scas
mov
xorb
pusha
fdivp
pop
adc
popa
adc
adc
dec
lret
sbb
inc
testl
push
push
addr16
mov
mov
sahf
rcll
movsl
repz
mov
add
adcl
in
mov
leave
and
pop
push
lock
adcl
mov
sbb
leave
xchg
cmpsl
xchg
call
mov
push
fisubs
repz
mov
lret
out
cltd
pop
inc
adc
push
mov
ja
aas
inc
jle
adc
sub
lahf
lcall
jns
adc
cmp
rcrl
ds
mov
ljmp
and
inc
mov
jnp
cmp
sbb
inc
out
sub
add
xchg
dec
mov
inc
cmp
dec
ficomps
push
aam
dec
fimull
addl
repz
pop
jo
jp
and
insl
ja
rorb
adc
fisttps
mov
lock
cltd
pop
subb
sbb
mov
gs
pop
xor
inc
test
xor
inc
mov
decl
push
daa
sub
fs
jecxz
outsb
mov
stos
mov
cli
lcall
aas
add
dec
lock
mov
lea
push
mov
mov
into
dec
cmp
stc
stc
xchg
clc
call
sub
push
pop
movsb
pusha
les
sarl
dec
sbb
or
cltd
xor
sub
ret
subl
cmp
dec
cli
arpl
sahf
in
mov
lea
ss
fstps
push
out
dec
popa
mov
xchg
sbb
pop
pop
cmp
inc
mov
fidivrl
sub
movsb
inc
addr16
sub
js
enter
lea
stos
add
lods
das
lret
adc
push
sbb
es
or
lcall
lods
sbb
or
call
inc
sub
test
adc
sub
repnz
gs
xchg
lcall
div
inc
nop
adc
stos
sbb
repz
mov
inc
mov
jp
sbb
out
mov
sub
fdivrl
daa
aad
xor
jle
dec
jg
jns
and
xchg
inc
mov
cmp
mov
les
mov
divl
sbb
jae
push
xchg
sbb
adc
jo
sbb
xchg
in
mov
and
and
andb
fdivrs
ja
popf
aam
in
loopne
testb
leave
data16
sub
pop
loop
xor
adc
ljmp
pop
pop
adc
pusha
adc
cmp
mov
daa
push
repz
jmp
cmp
fisubl
fcomps
adc
add
add
push
push
mov
xchg
and
mov
mov
sbb
xor
inc
push
js
sti
jns
in
or
shrl
push
dec
movsl
push
push
push
loop
das
add
mov
mov
jne
mov
fisttps
les
ret
data16
adc
das
or
push
repnz
getsec
mov
xchg
mov
in
xchg
and
shrb
test
ja
fisubl
mov
repz
shrl
xchg
add
add
jp
fnstcw
dec
sub
sub
inc
push
push
insl
or
rol
add
jno
mov
push
dec
aas
xor
cld
jnp
repnz
cmp
and
sbb
cmp
inc
pop
adc
cld
inc
call
jg
push
mov
xor
jecxz
inc
test
adc
mov
or
dec
pop
scas
stos
mov
mov
gs
mov
loopne
sbb
dec
in
jmp
sub
jns
push
in
dec
or
fimull
addb
push
mov
repnz
in
inc
push
lret
xchg
adc
ficoms
or
hlt
test
cld
push
mov
cs
lods
jg
test
dec
rcl
pop
dec
fstpt
adc
ss
push
xchg
stc
lahf
psrad
iret
sub
ss
cs
movsb
cmp
std
dec
lds
mov
daa
hlt
cmovg
das
sbb
fld
adc
and
lahf
add
stc
lret
push
ret
stos
stos
push
sub
js
out
daa
ljmp
mov
insb
clc
xor
fidivrs
cltd
mov
ljmp
push
fadd
mov
xchg
mov
and
add
add
jp
mov
mov
push
sbb
outsl
inc
pop
mov
fidivrs
lds
in
xlat
inc
mov
test
mov
push
add
add
orl
xor
scas
mov
je
jo
call
cmp
lret
sbb
xor
push
pop
pop
pushf
mov
jo
clc
mov
mov
sbb
mov
int3
gs
sahf
or
bound
insl
sbb
cmpsl
and
lock
cmc
push
ds
push
das
pop
sahf
jle
jnp
jmp
cmp
jecxz
push
loopne
xor
cmpxchg
sahf
adc
push
jecxz
cli
mov
push
movsb
push
std
insb
inc
testl
sbb
pop
or
and
mov
cmc
cmp
mov
sti
das
inc
jp
insb
or
mov
aad
lea
loop
pop
cmp
dec
adc
adc
lahf
jmp
nop
outsl
xchg
pop
mov
popf
into
mov
std
sbb
cmp
xlat
and
mov
aaa
mov
xor
push
and
out
loop
xor
hlt
jecxz
das
adc
or
sbbl
imul
xchg
jg
loopne
stos
test
lock
lahf
and
iret
mov
pop
mov
xchg
xchg
out
sub
cmp
std
cli
cwtl
push
cmp
jo
xchg
popa
shlb
mov
push
xchg
jge
pop
sahf
call
xor
lcall
push
push
sub
xchg
stc
push
ficomps
imul
sub
addr16
jno
bound
cmp
cmp
dec
push
je
aaa
les
xor
enter
js
sbb
lea
sti
nop
insl
and
jae
lods
mov
or
mov
ret
insb
xor
mov
push
fsubs
ret
mov
and
setae
bnd
js
in
mov
inc
iret
mov
hlt
shlb
pop
fdivs
enter
fcoms
jmp
cli
or
add
push
cmpsl
mov
cmp
cmp
fdivrs
jnp
jmp
sbb
push
fldt
loop
pop
cmp
pop
call
cmpsl
in
insl
es
inc
xchg
fsubl
jne
fmull
fists
sarb
ret
mov
push
fildll
or
dec
js
repnz
jae
or
push
mov
push
cmp
xor
out
adc
test
xchg
arpl
inc
fcompl
sbb
and
and
sub
addr16
sbb
sub
cmp
rclb
dec
mov
ret
adc
dec
mov
ret
pop
pop
xchg
rcrl
dec
aas
dec
dec
sahf
lcall
in
inc
fstl
xor
test
mov
pop
loop
sbb
ret
adc
in
xchg
addr16
inc
dec
cmp
and
and
cmpsb
ror
sarl
lea
rcrb
jge
xchg
loopne
ds
dec
xabort
icebp
xchg
add
mov
test
pop
xchg
mov
push
test
sbb
add
add
pop
dec
mov
xor
rclb
pop
mov
imul
int3
imul
jne
cmpsb
jns
xchg
nop
jbe
lcall
loope
add
das
xchg
mov
imul
mov
rorb
push
sub
or
test
jle
ss
push
or
sarl
ds
mov
push
adc
jge
les
pushf
mov
cmp
cmp
mov
lods
mov
adc
nop
cmp
or
or
popa
sbb
mov
sbb
pop
or
loope
inc
mov
ljmp
jg
sbb
je
jae
mov
jecxz
test
fisttps
test
sbb
loop
cmp
xchg
pop
decb
push
sahf
hlt
notl
sbb
sub
imul
xlat
fs
rcrl
pop
mov
mov
mov
outsb
idiv
jnp
sbb
mov
and
mov
call
push
jno
dec
mov
and
adc
add
movsl
xor
mov
imul
aas
add
clc
push
aam
jne
imul
push
jle
add
cmp
test
cmp
mov
out
adc
out
daa
push
mov
mov
in
in
xchg
ret
cli
jno
mov
mov
lods
push
fstpl
clts
scas
and
mov
les
scas
jp
out
cltd
or
push
rcrl
sub
imul
pop
mov
ja
popf
xor
adc
push
inc
test
inc
sub
mov
scas
aas
xorb
push
or
cmpsl
jne
addr16
or
lods
jg
push
stc
cmp
jle
mov
push
xchg
imul
cmp
add
mov
sub
jge
dec
mov
adc
fcmovnbe
and
cmc
lcall
xor
mov
loope
dec
filds
repz
push
roll
jae
je
inc
adc
mov
xchg
pushf
sti
cmp
xchg
jge
add
pop
lret
jecxz
dec
xor
dec
ljmp
mov
out
mov
push
mov
loopne
lds
add
jge
inc
rcr
jg
mov
and
xchg
dec
enter
ds
rorl
xchg
pop
adc
sub
cltd
ret
std
gs
rorl
cmc
testb
js
mov
aas
stc
push
push
movsl
inc
sbb
jae
inc
mov
push
repz
mov
mov
fdivrl
dec
pushf
pop
nop
subb
enter
pop
mov
sub
push
xchg
pop
imul
pushf
pop
mov
lods
gs
pop
cli
xor
cltd
pop
test
xor
mov
lcall
pusha
filds
dec
sub
push
mov
aaa
sbb
mov
lds
mov
pop
scas
test
pop
das
mov
lds
nop
jae
mov
ret
test
or
outsb
loop
test
mov
push
mov
cmp
sub
inc
cmpsb
xchg
je
cli
mov
loop
mov
xorl
ret
fdiv
fwait
ss
inc
mov
sbb
nop
lds
loop
jbe
xchg
repz
lock
testl
xchg
adc
js
xor
lods
mov
mov
lods
cmpsb
lea
xchg
xor
cmp
jecxz
popf
imul
mov
movl
in
xchg
jmp
mov
jl
mov
stos
aas
ret
adc
inc
or
xchg
cmp
add
mov
mov
sub
pop
aas
jl
cli
mov
xor
ret
mov
sub
arpl
and
mov
cwtl
lea
pop
push
pusha
add
test
sbb
ds
mov
or
popa
jl
sti
imul
cltd
rclb
fwait
pop
mov
pusha
or
push
div
push
dec
sbb
jl
pop
std
cmp
into
jns
fistpl
mov
xchg
fsubl
sub
push
xor
xchg
lahf
mov
ds
dec
adc
shr
xor
mov
pop
aaa
test
xchg
out
xchg
hlt
int
mov
dec
pushf
bound
and
mov
adc
xchg
jne
lods
push
jl
rclb
mov
lea
popa
sahf
adc
iret
sbb
jmp
insl
test
test
sarl
cmp
adcl
mov
sti
xchg
ja
jbe
lods
xchg
in
sbb
sub
leave
add
pop
fdivrl
aam
outsl
in
data16
xor
adc
popf
orb
sbb
add
add
pushf
xor
aaa
call
mov
dec
andl
sbb
das
push
xchg
mov
hlt
xor
and
dec
sbb
add
pushf
dec
jecxz
sbb
incb
mov
xor
inc
mov
and
popa
es
js
call
in
push
push
fwait
jl
fwait
popf
popf
sub
fsubl
mov
into
data16
jmp
call
xor
mov
mov
test
jl
jnp
js
fisubs
pop
cmp
shlb
dec
mov
dec
xchg
loopne
xchg
ficomps
sub
sbb
cmp
cmc
inc
lret
add
ja
push
gs
fldcw
pop
mov
cmp
inc
outsb
pshufw
push
aad
push
repnz
ret
mov
cmp
inc
adc
mov
roll
adc
inc
fnsave
sub
daa
mov
stc
fstl
mov
mov
iret
mov
jge
push
mov
jmp
add
bound
fnstcw
in
pop
lds
fisttpl
gs
fistl
push
pushf
mov
mov
jns
and
rclb
into
loope
dec
xor
mov
pop
or
inc
xchg
in
lods
enter
sub
in
lcall
xor
mov
scas
sbb
or
dec
into
into
lds
cltd
mov
xor
outsb
ljmp
cmp
testl
data16
aaa
inc
sbb
mov
mov
mov
in
js
loop
imul
mov
mov
fstl
addr16
mov
stos
pushf
mov
xchg
push
mov
out
flds
adc
adc
outsl
jnp
inc
jns
ds
push
popa
or
addl
scas
cli
xor
insb
xchg
xchg
add
in
lret
lds
in
mov
arpl
iret
and
mov
push
loope
add
cld
xchg
test
stos
cmp
test
lret
mov
dec
jecxz
repnz
pusha
aam
xlat
xchg
push
push
xchg
in
imul
pusha
dec
xchg
cmpsb
aam
mov
pop
in
fdivrl
loop
in
sub
add
add
mov
subl
movsl
adc
xor
mov
sub
add
jns
mov
or
cmp
arpl
imul
outsl
xchg
cld
sub
push
dec
or
adc
add
aam
mov
add
lcall
stos
adc
adc
jle
push
push
je
adc
daa
push
sub
les
aad
nop
ret
xchg
jecxz
sarb
mov
cmc
sub
mov
xchg
mov
sbb
jmp
dec
pop
xor
fcomps
fsubr
push
add
xchg
ror
or
add
mov
pop
out
pop
cwtl
cld
xlat
repnz
insb
mov
imul
pop
inc
inc
sti
shrl
icebp
lahf
stc
jae
dec
sbb
daa
mov
fbstp
xchg
out
dec
ljmp
pop
mov
xor
push
inc
jnp
or
icebp
lcall
inc
fldl
adc
ja
outsl
mov
das
mov
lds
in
lahf
pop
inc
lcall
xchg
inc
or
mov
cmp
xchg
or
out
xor
dec
dec
push
fdivs
lea
in
das
dec
repz
jo
addr16
cmpsl
ret
dec
fnstsw
pop
lret
and
jle
in
inc
push
popa
aad
mov
sbb
xchg
inc
cmp
push
push
cmp
jp
stos
dec
push
sub
mov
ljmp
jge
insl
jns
stos
fimull
popf
lret
pop
cs
gs
in
fldcw
dec
cmp
test
cmp
cmp
mov
cmp
jne
or
rcll
xchg
imull
add
test
xchg
xlat
in
lahf
movsl
je
int3
dec
sbb
or
pop
jae
lahf
hlt
ret
js
addr16
mov
shl
dec
rcl
mov
mov
andb
clc
ljmp
mov
pop
cmp
mov
jmp
mov
fidivs
pshufw
or
mov
cwtl
jmp
adc
adc
xor
std
jg
test
fincstp
mov
cmpsb
dec
cmc
dec
hlt
es
cmp
xor
ficomps
movsl
outsb
pushf
sbb
les
dec
sub
inc
mov
filds
or
movsl
inc
inc
xor
jl
shrb
int
mov
movl
push
mov
mov
fisubrl
mov
xor
push
mov
shlb
aad
inc
cli
lahf
leave
push
clc
jle
loope
fwait
daa
popw
push
or
push
xchg
mov
mov
aaa
test
xchg
cmp
cmp
mov
sub
sbb
subl
das
dec
clc
loope
hlt
mov
mov
lods
addr16
enter
cmc
fsubl
in
sub
mov
jns
sub
lds
sbb
ljmp
cmp
loope
ljmp
inc
es
movsb
push
lret
mov
out
sti
xchg
dec
lcall
adc
push
jle
insb
sahf
shl
xor
roll
icebp
inc
int
mov
fcmovnu
pop
leave
xor
inc
sub
pusha
loope
shll
dec
jbe
repz
les
pop
popa
sub
cmpsb
inc
mov
xchg
cmpsl
arpl
test
xchg
ljmp
push
mov
mov
mov
out
mov
or
out
sbb
ret
movsl
cs
xor
cmp
test
ret
dec
loopne
cmpb
jge
loope
cmp
lret
pop
or
or
shr
test
sbb
scas
ret
insl
fnstsw
popf
push
sub
cmp
jge
incb
xor
ds
mov
out
sbb
jle
sub
fs
xchg
cwtl
mov
add
pop
pop
test
aam
mov
push
js
pusha
sbb
decl
repz
mov
ss
shll
ret
mov
stos
popa
dec
shlb
mov
fsubr
scas
cmp
and
ficomps
leave
sub
repnz
out
outsl
fadd
sub
push
aaa
mov
rclb
jnp
cmp
clc
add
movsb
push
push
dec
or
lods
xchg
xchg
gs
adc
push
fs
jmp
pop
js
imul
push
popa
and
xchg
pop
mov
pop
fcomps
adc
test
stos
ja
and
idivb
imul
imul
rorl
pop
sub
dec
jmp
push
stc
mull
rorl
shrb
cli
loop
dec
push
adc
std
jmp
adc
add
lcall
adc
movsl
mov
inc
inc
roll
mov
pop
jle
lea
mov
out
into
add
cmp
xor
dec
fstl
movsb
inc
mov
jne
mov
sbb
add
mov
daa
sub
ret
mov
jecxz
fstps
callw
lahf
jb
adc
leave
dec
repz
popf
rolb
jnp
cltd
aam
rcrb
stos
inc
mov
pop
jb
adc
pop
orb
adc
xchg
push
fsts
inc
popa
test
xor
std
adc
pop
lret
ret
loope
ret
dec
insb
fwait
ret
or
dec
xchg
std
push
xchg
pop
cli
bound
sahf
mulb
popf
sbb
xchg
sahf
jne
cmp
shlb
mov
enter
cmp
pop
repnz
scas
mov
mov
mov
and
scas
into
push
mov
popa
sbb
stc
stc
push
jns
test
xlat
aaa
xor
mov
rorb
out
add
sbb
mov
dec
sti
sbb
pop
rcl
jb
shll
and
addr16
add
fcmovnbe
clc
or
inc
ja
loopne
dec
ja,pt
xchg
getsec
jne
icebp
in
dec
jnp
mov
jb
hlt
daa
push
mov
mov
push
lret
in
adc
inc
inc
cmp
push
je
mov
push
adc
xchg
cmp
mov
cmp
cmp
push
dec
aas
dec
cmp
ficomps
mov
jne
cmp
jns
push
add
dec
call
sbb
popf
sub
xlat
aam
mov
add
pop
rorl
lock
sahf
push
imul
sbb
jo
nop
add
cmpl
dec
pushf
cli
xor
push
dec
pop
xor
dec
dec
push
sti
cld
arpl
out
pushf
add
shrb
pop
jo
int3
and
ds
pop
xchg
popa
jne
mov
ljmp
adc
xor
cmpsl
paddsw
sub
adc
inc
xlat
sbbb
jno
daa
sub
and
in
cmp
jmp
push
push
add
mov
push
pop
xlat
xchg
fdivrl
xchg
in
roll
xor
cmc
das
xor
xor
xchg
xor
adc
imul
push
xchg
test
lds
pop
out
out
pop
bound
sbb
loopne
mov
xor
add
imul
and
cmp
enter
fucom
iret
sub
mov
scas
inc
pop
clc
jno
jmp
ror
mov
je
lea
push
cmp
in
rolb
mov
and
js
xchg
lea
cmp
addr16
xchg
flds
test
aaa
pushf
cmp
movsb
fnstcw
adc
rcl
adc
int
subb
sub
aaa
clc
stos
and
and
gs
or
push
push
es
sub
jl
xchg
cs
mov
mov
cmp
sahf
mov
adc
mulb
test
adc
popf
add
pop
pop
sub
loop
test
icebp
lock
rclb
jp
ja
stos
lret
movsl
cld
mov
sti
mov
inc
sbb
movsl
stos
mov
std
adcl
ja
mull
and
cli
push
arpl
mov
cmp
pop
cmp
icebp
and
les
sarb
adc
jo
cmp
adc
or
iret
outsb
inc
das
mov
stos
enter
insl
mov
hlt
mov
jb
ljmp
imul
out
loop
push
fdivl
mov
sbb
jae
icebp
test
lret
cld
and
inc
je
sti
cmpsl
or
pop
mov
gs
jmp
xchg
sub
movsb
movsl
arpl
addr16
pop
rcr
fnstcw
or
out
mov
add
clc
test
je
fldcw
dec
cld
lods
mov
fwait
repz
mov
mov
nop
adc
mov
nop
inc
mov
fcmovu
imul
std
inc
sub
mov
fldt
lahf
add
pusha
loope
sahf
dec
sub
fcmovne
xchg
test
xor
and
add
out
loope
data16
out
lcall
xchg
adc
mov
repnz
in
add
leave
or
pop
sbb
xor
cmc
sbb
mov
int3
cmp
imul
jb
out
jp
push
dec
sti
cmp
insb
addr16
sahf
sub
jne
out
push
push
dec
ffreep
push
xor
cmp
pop
push
or
ja
movsl
push
xchg
adc
enter
sub
fidivl
loope
dec
push
dec
add
popf
shrl
imul
arpl
sarb
xor
cli
dec
dec
stos
call
mov
and
and
inc
inc
xchg
lahf
loop
mov
lods
fidivrs
jle
mov
jno
push
les
sub
dec
push
add
xchg
lahf
push
mov
push
test
faddp
xchg
jbe
sbb
sbb
loopne
xor
aam
pop
dec
int
cli
mov
lods
sbb
adc
add
sbb
mov
jne
ret
addr16
xchg
xor
lcall
pop
push
xchg
jb
flds
and
mov
andb
js
lods
mov
mov
push
mov
push
ret
mulb
lock
inc
shll
sahf
xor
jno
xchg
lret
ss
push
loopne
lods
push
mov
push
addr16
cwtl
dec
cmp
data16
mov
or
imul
rclb
arpl
jle
cmp
and
xor
subl
jno
mov
scas
cmp
sbb
or
add
mov
adc
lods
addr16
cli
call
and
loope
sbb
push
fdivrs
test
iret
cmpsl
fbld
ret
shr
fxam
imul
push
imul
je
fucom
mov
ret
out
stos
mov
ds
sbb
mov
aaa
stos
iret
movl
lods
xor
data16
aad
out
lds
sub
pop
lret
lahf
fst
fisubrs
movb
adc
outsl
xor
fldenv
addr16
inc
and
sbb
jge
fstl
test
adc
sub
adc
outsl
aad
test
pop
mov
add
add
into
push
xor
sbb
mov
jge
movsl
mov
dec
leave
ds
mov
lret
mov
adc
insb
arpl
movsb
das
test
imul
sbb
pop
pop
mov
shll
pop
inc
xlat
outsb
push
rolb
mov
cmp
mov
movsl
xor
sub
dec
lahf
inc
ja
mov
lret
aaa
stos
test
mov
mov
mov
or
fwait
mov
push
call
dec
cmp
xchg
andl
mov
daa
cmp
imul
add
dec
lock
push
pop
and
mov
or
inc
sbb
push
sub
fs
jnp
push
jle
out
int
sub
push
loop
jl
or
lahf
roll
in
cmpsl
es
and
mov
popf
sub
nop
cmpsb
jecxz
inc
stos
and
arpl
movsl
in
cs
push
jne
iret
xor
repnz
outsb
pop
orb
adc
dec
fisttpl
xor
add
in
jle
enter
dec
or
push
rolb
out
inc
cmpsb
add
cmp
sahf
jecxz
push
xchg
fadd
xor
mov
sbb
sbb
testl
insl
pop
inc
lahf
test
mov
mov
fs
mov
dec
pop
or
push
ss
pop
jecxz
lret
and
orl
fcoml
add
pop
adc
addr16
jecxz
cwtl
pop
pushf
fsts
or
pop
mov
xchg
xlat
mov
cwtl
push
out
mov
popf
lods
cmp
mov
jbe
fidivrs
mov
repnz
inc
mov
adc
insl
inc
or
rcrb
inc
xchg
adc
in
mov
rol
cs
jo
mov
arpl
and
lahf
js
mov
ss
jmp
lds
xor
pushf
lahf
and
inc
cmpb
add
ftst
push
movsb
sub
test
cmp
mov
incb
push
ds
and
es
push
xor
in
mov
xchg
mov
iret
and
stos
inc
mov
xchg
sub
lock
pop
pop
sub
inc
in
jg
xchg
sbb
jmp
mov
test
cmp
iret
sarl
imul
fists
cli
cmp
xor
rorl
pusha
aas
aam
pop
pop
inc
ss
adc
shlb
mov
mov
push
leave
insb
das
test
es
icebp
mov
mov
lahf
cmp
loop
loope
arpl
addr16
stos
popf
fwait
mov
gs
pop
push
mov
xor
dec
stos
mov
mov
cmp
add
nop
aas
imul
jb
pop
mov
jae
es
xchg
mov
mov
dec
cmp
cmp
push
sbb
out
sub
sub
sarb
test
inc
dec
call
fldcw
fwait
adc
fnstcw
stc
dec
mov
inc
sub
outsb
lcallw
jmp
inc
outsb
xor
pop
sbb
lea
ret
or
orl
xchg
dec
ja
cmc
dec
test
addb
jo
xor
add
icebp
sbb
jns
cmp
out
lods
xor
mov
loope
lcall
sahf
adc
or
push
imul
adc
fdivrl
lahf
pushf
sahf
add
mov
sbb
dec
add
push
push
fildll
jle
xchg
pushf
sbb
sub
mov
xor
push
les
mov
ret
call
sbb
decb
mov
add
int3
outsb
lcall
clc
cmp
and
scas
mov
shrb
aam
fmull
movsl
or
sub
or
aam
mov
in
scas
add
pushf
mov
pop
xchg
mov
mov
lret
add
and
das
insl
and
xor
add
sarb
mov
mov
bnd
andl
sub
cmp
push
out
push
adc
aad
ret
sub
pushf
push
lods
pop
ret
sub
ret
xor
popa
cmpsl
cmp
xchg
fmuls
inc
dec
test
cmp
cmpsl
cmp
add
out
fisubs
rolb
xchg
sti
fs
jo
adc
add
pop
inc
pop
mov
pop
daa
xor
mov
mov
loop
push
out
sub
or
xchg
dec
xor
jno
cld
sub
mov
or
pop
nop
cmp
xchg
lcall
gs
and
jae
ljmp
jns
cld
je
aam
xor
mov
xor
pop
shrw
loop
cmp
jb
jmp
push
aas
insl
mov
push
pop
out
sbb
rorl
aam
negl
test
enter
adc
jnp
dec
js
rol
add
pop
cmpsl
adc
lret
fcmovne
mov
insl
mov
push
call
mov
inc
in
mov
jb
mov
cmp
and
push
shll
scas
les
pop
cmp
nop
clc
push
aas
fisttps
ss
repz
shrb
xchg
je
addr16
sub
ret
lahf
int
push
sbb
stos
or
pop
int3
or
subl
out
filds
enter
cmp
or
jp
mov
xor
inc
adc
jne
jmp
jl
sbb
push
out
ds
pusha
sub
push
xor
popf
jns
loope
add
mov
popa
aad
xor
push
fstl
mov
mov
pop
loop
add
push
mov
add
cs
push
jp,pt
test
icebp
sub
cmc
or
pushf
push
lock
inc
dec
mov
cmc
or
rol
outsb
movsb
loopne
ss
sbb
push
cmp
rcl
inc
adc
or
jnp
or
mov
enter
fisubrl
xchg
test
rol
popa
test
push
leave
jnp
mov
cli
sbb
inc
cmc
imul
insb
or
filds
xlat
test
arpl
cmp
outsb
xchg
ljmp
aaa
inc
push
fstpt
pop
inc
fimuls
ficomps
add
loopne
outsb
daa
fdivrl
xchg
das
cmp
mov
stos
fldl
mov
push
out
aam
popf
shll
adc
inc
stc
hlt
mov
nop
mov
repnz
test
push
test
cwtl
stc
adc
xchg
int
and
mov
fstpt
icebp
push
cs
out
mov
jmp
xlat
and
xor
mov
cmp
sbb
mov
vpshufd
mov
fildll
push
pop
lea
pushl
mov
daa
sbb
push
movsb
ret
inc
jo
lods
dec
iret
pop
inc
mov
dec
scas
arpl
inc
xchg
pop
xchg
es
jecxz
jp
jbe
mov
lahf
sbb
shrb
mov
adc
or
pop
inc
faddl
sub
jl
sbb
cli
xor
dec
pop
xor
sarl
cltd
pop
outsb
xchg
mov
das
adc
movsb
test
inc
mov
data16
add
pop
negb
stos
cwtl
jl
sbb
cmp
adc
fiaddl
push
fwait
pop
xchg
aaa
dec
test
into
daa
ficoms
imul
mov
stos
imul
scas
xchg
fdiv
leave
mov
loop
icebp
roll
insl
xchg
xchg
enter
fsts
test
mov
mov
and
aam
mov
sub
sarb
js
xor
sbb
xor
dec
pushf
insb
and
jns
mov
movsl
jae
pop
das
in
pop
pop
or
xchg
push
aaa
cld
push
in
jbe
mov
inc
fs
test
adc
mov
sbb
or
aad
aaa
in
sub
idivb
ret
dec
jo
cmp
gs
jmp
js
scas
mov
mov
in
test
mov
into
popa
push
out
incb
and
jns
scas
push
wrmsr
mov
or
sahf
sbb
mov
rcrl
dec
hlt
les
out
and
inc
aaa
scas
gs
lods
and
mov
sbb
add
ficoms
and
mov
mov
pop
or
jecxz
shlb
es
mov
inc
inc
mov
push
scas
sbb
aas
lcall
pop
adc
mov
push
pop
xor
sarl
sti
iret
sahf
in
xchg
xchg
mov
daa
jle
sbb
inc
movsb
adc
xchg
inc
cmpb
sub
mov
push
notb
push
sub
mov
fisubrs
sub
pop
pop
mov
add
add
xor
pop
pop
jno
stos
push
xor
xchg
movsb
daa
movsl
in
sub
push
cmpsb
sub
mov
push
repnz
out
push
or
mov
or
adc
mov
stos
mov
andl
or
test
mov
cwtl
sahf
insb
adc
adc
mov
in
int3
xchg
add
das
scas
js
jg
imul
and
xchg
mov
sbb
adc
repz
jge
inc
dec
pop
mov
push
mov
add
mov
lods
into
leave
xor
adc
stos
roll
xchg
mov
xchg
daa
fsts
test
fimuls
or
xor
ret
mov
imul
fldl
push
into
bound
cltd
push
test
inc
pop
shrb
xor
cmp
ljmp
out
xor
jns
pusha
xchg
outsb
imul
lret
ja
in
and
inc
or
push
cs
mov
cli
call
lret
or
sub
mov
xchg
sbb
fwait
and
push
cmp
cli
pop
xor
mov
scas
xchg
or
push
add
adc
inc
fnsave
cmp
cmp
mov
jp
push
jo
sbbb
fwait
xor
jns
aas
jge
pop
sub
xor
cmc
and
lock
xor
sub
pop
test
mov
aad
sbbl
mov
shll
enter
add
mov
iret
mov
sub
sub
fisubl
nop
mov
stos
fdivr
jecxz
das
call
fiadds
inc
repz
lretw
fidivrs
mov
imul
addb
sbb
lods
xor
dec
xor
pop
dec
rcl
test
mov
inc
out
mov
ret
mov
sbb
mov
lahf
mov
aaa
or
outsb
insl
das
push
mov
and
cmp
and
mov
pop
sub
insb
push
ror
jne
test
adc
pop
xchg
inc
pop
cmp
mov
out
and
fdiv
xor
mov
lock
test
fwait
push
dec
jg
loop
add
stc
xor
add
push
rorb
cmp
cmp
xor
xchg
mov
es
pushf
mov
xor
pop
imul
test
stos
sub
xor
xor
lods
sbb
pushf
jp
scas
repz
or
xchg
cmpsb
lods
test
idivl
outsl
dec
xor
cmpsb
cmp
ljmp
mov
xchg
or
inc
into
sub
sub
arpl
cs
dec
insl
sub
sbb
push
xor
pop
scas
push
jns
sbb
les
xlat
in
lcall
icebp
mov
lret
in
sub
leave
cld
loop
imul
mov
andb
aam
ja
jno
ret
nop
negb
or
insb
pop
int
add
movsl
imul
orb
pop
add
cli
les
cltd
stc
outsb
pusha
call
mov
and
loopne
test
or
mov
sbb
lcall
mov
pusha
adc
and
or
adc
lock
push
movsl
adc
mov
inc
xor
jl
adc
dec
fsubrl
sbb
add
movsb
loop
cld
mov
test
dec
xor
mov
push
push
jg
inc
lds
movsb
repnz
outsl
daa
and
aam
cmc
jne
mov
js
sub
mov
lods
pop
idivl
push
jnp
enter
out
les
cld
cld
gs
xlat
xchg
dec
sub
mov
add
jp
das
xor
mov
push
cmp
shll
test
push
xor
adc
xor
pop
shlb
add
adc
sbb
sub
clc
cli
and
pop
dec
dec
pop
inc
mov
test
subl
out
and
cmp
pushf
sarb
popf
repz
xor
movsl
sub
mov
mov
push
mov
and
push
jo
pop
std
jmp
lock
lahf
adc
addb
pop
sub
dec
lock
ja
sbb
aad
das
lock
js
or
dec
xor
outsb
cmp
jno
inc
andb
iret
iret
jg
sbb
xchg
xor
test
test
hlt
or
jb
scas
in
lcall
std
testl
jae
adc
push
xlat
js
dec
stos
out
pusha
je
push
in
or
loope
leave
comiss
icebp
cmp
push
pop
pushf
and
das
dec
leave
mov
shr
mov
pop
xchg
add
jge
pushf
lock
mov
xchg
es
pushf
pop
das
mov
stos
in
insl
pop
repnz
popf
push
mov
mov
adc
mov
push
bound
push
scas
cmp
cltd
sbb
cmpsb
jge
add
inc
mov
push
add
das
jmp
dec
lea
jge
sbb
mov
xor
imul
inc
fld
jecxz
ss
mov
cli
fisubs
adc
faddl
lods
sub
xor
mov
pop
sbb
xchg
or
xchg
mov
or
int3
mov
fsubrp
daa
inc
xchg
dec
mov
lahf
in
xchg
rcl
nop
aad
adc
jmp
fldt
fidivrl
xchg
fisubrs
xor
jno
add
xor
jp
mov
dec
sbb
sbb
fimuls
rcrb
repz
test
arpl
mov
add
sub
pop
adc
out
test
cwtl
pusha
icebp
cmp
scas
pop
clc
imul
test
lahf
or
scas
shrb
adc
jo
add
push
or
push
aas
cmp
sbb
repz
inc
movsl
popf
sahf
fucom
adc
dec
aas
jb
call
lods
fcomp
pop
int3
movsl
mov
loopne
movsb
mov
mov
or
xchg
movsb
mov
test
jecxz
sbb
cmp
dec
and
enter
jo
into
sub
mov
sbb
cs
cmp
pop
dec
or
lods
popa
cmpsb
shrb
mov
scas
roll
andb
inc
dec
maxps
pop
inc
and
leave
cli
add
aas
cmp
int
or
pop
lret
sbbl
or
aaa
fcoml
jmp
sub
and
stc
loopne
xlat
mov
sahf
out
xchg
movsl
test
push
jp
sub
mov
mov
in
not
jmp
sub
pop
insl
ret
dec
js
fadds
jb
jecxz
xor
nop
push
mov
fs
bound
sbbb
add
push
pop
pop
mov
aad
clc
imul
fsubrs
mov
pop
mov
adc
imull
adc
cmp
or
stos
shrl
lret
or
add
lods
sbb
dec
dec
cmp
mov
inc
inc
jle
out
test
push
sbb
and
xchg
sub
cwtl
lods
lea
addr16
repz
fucomi
xchg
cwtl
mov
xor
ljmp
ss
lahf
out
sbbl
outsl
jp
adc
push
cmc
in
adc
pusha
cmp
pop
push
into
adc
mov
jbe
xor
xchg
cmp
cwtl
icebp
clc
aad
sbb
or
loopne
mov
mov
sub
hlt
add
mov
or
fs
mov
int3
leave
pusha
jo
or
scas
dec
push
push
jns
inc
jl
pop
nop
cmp
loop
mov
js
pop
outsb
pusha
js
push
cmc
inc
jl
int3
inc
sub
xor
pop
fidivl
xchg
bextr
int
clc
std
je
push
xchg
stos
inc
ret
addr16
mov
repz
add
pusha
mov
mov
repnz
and
dec
inc
fisubrs
dec
dec
push
add
add
pushf
in
cli
or
les
push
cs
lea
push
and
or
push
insb
sahf
addr16
test
pop
flds
nop
repnz
jnp
mov
adc
hlt
out
jbe
add
fcompl
mov
hlt
repz
mov
or
mov
push
das
sub
ds
mov
sub
mov
loop
dec
bound
jle
stos
xchg
xchg
xchg
or
push
in
xchg
hlt
cmp
dec
jecxz
mov
xor
out
out
dec
daa
es
in
sti
pop
cltd
es
jp,pt
cmp
add
in
xchg
sbb
jnp
xchg
inc
inc
dec
mov
sbb
xor
mov
push
dec
xorps
push
adc
outsl
jae
lock
in
mov
inc
fadd
movsl
add
lret
jl
dec
cmp
xchg
xor
lcall
fs
pushf
mov
int3
adc
loopne
loopne
xchg
xor
mov
cltd
adc
popf
xor
sbb
je
jl
jmp
xchg
popf
filds
adc
mov
mov
jmp
and
icebp
bnd
add
add
mov
mov
dec
mov
adc
shlb
cmpsl
mov
je
negl
jg
nop
in
mov
xchg
aad
sub
testl
lods
jle
andb
loopne
push
push
or
or
inc
mov
and
jmp
loopne
adc
stc
pop
cmp
je
pop
inc
rcrl
cmp
add
outsb
cmpsl
outsb
add
dec
addb
xchg
adc
jmp
loopne
pop
int
sub
dec
jle
enter
arpl
cmp
sti
shrb
add
lret
repz
mov
xlat
int3
pusha
xchg
push
add
sahf
loopne
test
out
fwait
xlat
xchg
cld
in
mov
xor
inc
cs
mov
rcrb
push
loope
movsb
adc
push
cmp
loopne
hlt
xor
xchg
xchg
or
mul
jne
xchg
es
icebp
cmc
mov
push
lret
fistps
dec
push
neg
lret
mov
mov
jmp
push
jg
repz
aas
xor
movsb
adc
loop
or
mov
lea
jmp
jmp
scas
sub
rorl
jns
xor
cmpsb
mov
add
sbb
cmpsl
push
push
loopne
sub
out
repnz
out
cmp
xor
push
jecxz
stc
push
movsb
add
jo
jp
jmp
popa
fnop
mov
mov
aam
in
sub
lcall
cltd
rcrl
mov
stc
pop
stc
and
add
repnz
or
dec
pop
repz
adc
data16
jae
and
frstor
test
adc
mov
out
xchg
loopne
test
es
mov
jo
add
cmpsl
xchg
mov
out
push
pop
hlt
jmp
aad
nop
insb
jp
sti
in
iret
outsb
pushf
sbb
sbb
mov
pop
into
mov
xor
pop
cmpsb
mov
and
mov
out
call
mov
ret
jb
aad
rol
roll
xor
fsubl
test
pop
adc
fldl
jle
dec
jb
cmpsl
inc
push
dec
mov
xchg
dec
mov
arpl
clc
mov
sub
aaa
inc
je
push
cmp
dec
leave
out
in
sbb
js
sahf
insl
sbb
and
add
fisubrs
mov
call
pop
lret
or
sub
pop
jae
jl
movsl
int
imul
add
lahf
add
outsl
and
xchg
out
dec
push
add
iret
adc
jno
push
lods
addr16
outsb
inc
adc
in
push
cmpsb
or
xlat
xchg
aaa
daa
jno
aam
dec
mov
test
mov
pop
outsl
xchg
pusha
in
or
add
rclb
incl
ret
cmpsb
and
gs
cmp
adc
dec
rcll
jp
scas
xor
into
sbb
pop
mov
outsl
dec
cmp
pop
stos
add
into
stos
mov
fdivp
sbb
sbb
and
mov
mov
pop
mov
push
push
les
pushf
imul
mov
cmc
test
sti
data16
xor
xchg
xchg
bound
enter
inc
jno
inc
mov
push
cmp
sub
mov
or
mov
adc
mov
jecxz
cltd
jmp
dec
sbb
in
pop
in
xor
push
add
jo
addr16
popf
xor
or
sbb
mov
dec
aaa
jmp
ss
icebp
push
or
or
popa
je
xchg
cmp
mov
lret
shlb
pop
jge
xchg
lahf
sub
inc
xor
adc
sbb
xor
push
cli
pop
adc
imul
repnz
loop
nop
cmp
dec
in
adc
mov
dec
pop
jl
ja
push
loop
fidivs
xchg
stc
push
mov
test
add
ja
mov
ja
xchg
cwtl
call
fstpt
inc
int
flds
xchg
lds
imul
jns
mov
cs
cmpsl
mov
pop
dec
aad
jp
cmp
cs
movl
jne
inc
fstps
pop
inc
push
mov
ljmp
loopne
add
mov
adc
jno
jbe
movb
mov
mov
mov
mov
jae
mov
and
xchg
push
fistpl
or
push
sbb
dec
dec
sub
mov
or
and
arpl
add
dec
daa
xchg
jg
mov
shlb
jge
stos
xchg
jp
sbb
cs
gs
jbe
mov
add
cmp
shll
dec
hlt
cli
lock
fistps
dec
push
rcrl
cmp
js
xchg
ja
in
lea
lahf
int3
mov
sbb
xchg
inc
xchg
xor
arpl
nop
sub
sbb
pusha
pop
pop
jecxz
add
pop
xchg
out
inc
outsl
sti
roll
aam
jg
xchg
imulb
insl
mov
mov
mov
test
inc
jo
cltd
mov
and
dec
add
aaa
ret
push
cmp
push
adc
sbb
int3
pop
xchg
mov
shl
sti
xchg
jo
xor
xchg
jmp
sub
bound
out
and
dec
or
sbb
xor
push
pop
divb
push
arpl
xor
in
bnd
scas
xchg
xor
mov
fwait
in
aad
and
cmp
les
sbb
cmp
push
enter
imul
fmulp
pop
movsl
pop
out
pop
rcrl
mov
pop
into
add
xor
pusha
addb
mov
cmp
mov
dec
mov
dec
push
int3
dec
inc
fwait
or
sub
adc
mov
jns
js
stos
jbe
jg
xor
inc
jo
jnp
je
push
gs
jne
jno
orl
sbb
cmp
sbb
rcr
sbb
hlt
scas
or
jns
orb
jl
jle
sbb
or
mov
jmp
test
jno
inc
test
mov
and
pop
jecxz
ret
cmp
mov
in
xchg
mov
in
mov
and
dec
je
cwtl
add
xchg
dec
fsub
nop
jno
pop
mov
sbb
pop
inc
push
mov
ret
js
dec
fsubrl
mov
les
sub
dec
lods
fisubrs
addb
mov
cmp
sbb
sbb
jge
fwait
js
out
dec
xor
repz
inc
shlb
lds
mov
jne
push
addr16
mov
mov
bswap
rep
dec
sub
stos
push
fldt
or
mov
and
push
mov
add
cld
fdivs
adc
imul
mov
dec
in
mov
push
xchg
xor
lret
shl
in
daa
mov
enter
aam
mov
xor
das
repz
sub
movsl
popl
inc
lods
sbb
cmp
xchg
into
pop
js
in
push
adc
mov
mov
and
sbb
cmc
rcll
xor
dec
xchg
test
cmpsb
pop
ret
push
pop
mov
mov
jno
mov
mov
cmpsb
repnz
mov
lods
xor
jae
pop
push
lock
or
lds
mov
arpl
cmp
jecxz
notl
ds
mov
mov
and
jb
in
dec
imul
sbb
scas
fldenv
ss
insb
ljmp
xor
mov
out
push
sahf
mov
push
popa
and
vmaxss
lahf
push
cs
nop
jmp
sbb
xchg
adc
or
add
jp
and
jb
adc
dec
sub
aad
dec
cli
mov
aaa
sbb
inc
mov
in
or
mov
jb
push
lea
bound
fimuls
sbb
stos
adc
or
pop
aas
inc
lret
sub
jecxz
xchg
in
jl
xlat
xchg
test
mov
mov
inc
mov
out
es
pop
dec
mov
cmp
push
push
pop
out
jp
push
sub
mov
lret
inc
mov
mov
test
leave
mov
in
mov
in
add
and
lcall
add
pop
rorb
call
mov
pop
fiadds
adc
inc
push
pop
xorb
xor
ljmp
xor
mov
js
cld
xchg
or
dec
inc
sub
jae
aad
ror
out
sti
les
xchg
insb
lahf
arpl
into
mov
cli
jb
clts
adc
stc
push
xrelease
pop
in
lea
add
fbld
jmp
imul
mov
push
or
push
mov
bound
iret
and
iret
add
ss
ss
jl
cmc
mov
pop
les
xchg
mov
sbb
or
cmp
pop
dec
leave
pop
movsb
xor
add
sbb
cmp
add
int3
out
aam
iret
std
xlat
cmc
test
lahf
adc
scas
jnp
and
arpl
mov
xor
cmpb
in
jmp
loop
jne
cli
subb
sbb
inc
and
pop
push
ss
fldcw
decb
jl
stos
ret
out
rcll
cmpsb
mov
cmpsl
mov
nop
jmp
call
pop
pop
pop
scas
rorb
popa
mov
push
mov
or
sub
mov
scas
mov
cmp
mov
jns
cmp
ljmp
and
cs
dec
cltd
test
xchg
and
cld
dec
out
jae
lcall
testl
ds
dec
xorb
push
inc
mov
push
test
xchg
lret
int
aam
sbb
xchg
aas
push
in
rcl
adc
sbbb
movsb
lods
adc
xchg
je
sbb
popl
add
and
cli
fs
lea
sbb
and
stc
incl
arpl
sub
aam
and
mov
enter
shl
pop
testl
jmp
and
sub
mov
shlb
inc
lods
lods
movw
inc
xchg
mov
dec
sbb
dec
mov
sub
mov
xor
shl
jecxz
dec
or
jle,pn
pop
test
fistl
pop
fidivrs
dec
and
jmp
add
loope
imul
sub
pop
xchg
mov
call
movsb
jb
jbe
clc
gs
out
es
and
leave
int
mov
loop
addr16
mov
mov
pop
sahf
movsl
mov
pushf
sub
xor
in
lds
cmp
scas
addr16
nop
adc
xor
out
and
fsubrl
aas
pop
cmp
leave
out
pop
or
ss
push
decl
cmp
notl
daa
jne
mov
jge
cld
hlt
loopne
jl
mov
or
jp
sbb
sbb
divb
in
cmp
lret
fs
and
insb
jno
fwait
dec
add
bound
xor
jae
clc
jg
cmp
inc
sub
mov
jno
leave
lret
cmp
fbld
pushl
sub
das
inc
in
imul
adc
or
adc
pushf
cmpsb
into
adc
and
repz
mov
mov
sbb
sarb
sbb
push
xor
repz
xor
mov
imul
fsubl
push
add
mov
mov
shrl
xor
repnz
test
mov
sub
mov
ljmp
sub
adcb
in
dec
jno
sub
out
mov
outsl
hlt
add
lmsw
cmp
dec
mov
popa
clc
dec
add
xor
or
cmp
mov
pop
cmp
and
setge
xor
leave
mov
jecxz
xor
mov
jp
xchg
out
mov
push
lret
sbb
xlat
push
call
mov
pop
popa
enter
or
xchg
xor
lods
or
cmc
js
add
mov
arpl
jno
enter
out
mov
scas
imul
cs
stc
iret
xlat
test
fists
pop
push
out
jg
int
fdivrl
mov
sub
add
push
bound
jns
out
call
jne
fstpl
out
cld
test
je
hlt
stos
out
mov
sub
pushf
loop
xchg
or
out
xor
enter
or
test
rclb
dec
hlt
jmp
pop
xchg
fimuls
ret
pop
mov
stos
js
jmp
mov
das
sub
sbb
lahf
lds
je
xchg
das
lds
call
adc
loope
push
int3
pop
pop
cld
jp
mov
jo
test
out
in
xchg
add
cmpsl
stc
jle
jns
lret
dec
pusha
aaa
mov
jge
inc
pop
mov
jnp
jle
or
addr16
enter
xchg
fwait
cmp
mov
jns
imul
mov
xchg
mov
frstor
pop
fsts
mov
pop
cmc
mov
pop
or
sub
mov
fnstcw
and
mov
nop
fsubl
xor
push
into
jge
test
sbb
test
sbb
mov
pop
stos
xchg
es
pop
loop
outsb
cltd
cmp
loopne
sarb
stos
cmpsb
mov
outsl
pop
pushl
lret
cmp
mov
inc
stos
or
pop
xlat
push
push
adc
and
lret
mull
idiv
xor
insb
stos
add
cld
test
pusha
dec
xchg
stos
or
test
fwait
jae
sub
add
inc
pop
inc
dec
pop
enter
clc
xor
mov
imul
xor
into
mov
popf
cmp
loop
fnsaves
hlt
sbb
mov
adc
repz
dec
fdivl
or
icebp
lret
out
roll
xor
outsl
lahf
xor
mov
sub
sbb
push
push
ds
inc
sub
add
jae
sub
push
vmread
pushf
xor
cmc
ljmp
in
sbb
sub
sub
push
add
addl
lret
jle
and
mov
imul
test
xor
dec
jg
cmpl
mov
idivb
in
stos
or
in
ss
popa
mov
icebp
cmp
outsl
sbb
pop
xchg
cmp
pcmpgtb
loop
decb
add
ljmp
adc
adc
sub
in
pop
cmpsl
mov
adc
and
aaa
mov
adc
xor
xlat
fprem1
stc
jmp
in
xor
and
psllq
mov
jecxz
pop
jb
push
add
test
dec
das
sbb
lods
xorb
icebp
cmp
stos
es
push
mov
mov
setnp
pusha
insb
scas
decl
lret
cltd
jo
mov
inc
stos
popa
add
cmp
add
pop
outsl
xchg
out
rcrb
jecxz
je
push
ret
fwait
inc
push
stc
mov
xchg
sbb
pop
xor
call
fimull
mov
push
xor
fisubl
popa
lahf
xor
ss
jmp
repnz
shrb
sub
lea
add
jmp
mov
loopne
jb
cmp
push
jp
mov
xor
jnp
mov
ja
push
daa
pop
js
mull
fcos
bound
movsb
mov
xor
subl
rorb
lock
adc
pusha
and
pop
dec
xchg
mov
pop
in
inc
shrb
scas
pop
jno
stos
xlat
and
pop
dec
in
mov
popa
or
pop
mov
xor
mov
sub
pop
dec
mov
pop
or
test
cmp
mov
and
ret
out
int
je
jl
ja
xchg
inc
out
incl
pop
sarb
addr16
scas
adc
push
stos
add
mov
jmp
mov
pop
addr16
sbb
xchg
rorb
scas
cmp
addr16
add
cwtl
outsb
sti
mov
jg
push
cmpsl
loopne
lods
jle
je
aas
xlat
inc
inc
out
dec
les
addl
cltd
and
mov
jae
sbb
xchg
rcrb
fisubrl
hlt
jb
mov
push
cli
mov
mov
sbbl
dec
outsb
clc
faddl
icebp
incl
sarb
fwait
cmp
jl
push
roll
jg
icebp
and
add
push
nop
cli
test
adc
xor
mov
int
and
ret
or
lea
test
fs
popf
add
cli
xchg
mov
and
pop
mov
sub
ret
cld
mov
jecxz
test
mov
xchg
or
daa
stos
or
sbb
gs
adc
push
mov
cli
aas
push
push
pop
es
or
int
jns
movsb
lret
xchg
pop
movsb
mov
pop
repz
test
in
sti
sbb
data16
dec
jne
cmpsl
push
cmpsl
sbb
les
cmp
out
xorb
leave
push
enter
lods
mov
aas
repnz
push
add
lea
jg
xor
in
test
jnp
mov
popa
push
leave
lret
stc
shrl
cmp
divl
jl
sahf
jo
insl
xor
sub
jg
push
movsl
pop
jbe
fldl
cmc
push
shlb
push
jo
das
fwait
das
xchg
sub
add
mov
int
out
mov
mov
popa
inc
add
cwtl
mov
jno
push
ret
xchg
xor
adc
mov
dec
insb
mov
shlb
pop
insl
out
xchg
imul
xchg
movsb
bound
jg
orl
mov
test
clc
push
fs
ljmp
pop
jmp
xchg
mov
xchg
aad
cs
cmc
and
sub
and
xchg
pop
dec
sbb
test
hlt
mov
es
adc
bound
mov
sbb
dec
xchg
pusha
adc
inc
das
arpl
sbb
xor
cmp
push
pusha
hlt
rcl
aaa
and
int3
xor
test
aas
rcl
dec
in
dec
jp
out
fisttpll
add
push
jae
push
shl
popf
sub
push
scas
ljmp
push
subl
fucompp
cmc
pushf
shll
sub
stos
pop
loopne
and
mov
cld
fcomps
cli
fs
aam
mov
clc
xlat
xor
push
add
sbb
mov
shll
mov
movsb
movsb
cmc
out
inc
mov
ljmp
sub
rolb
mov
mov
scas
pop
stos
fidivl
dec
pop
out
mov
sbb
loopne
xlat
rcr
jne
mov
sub
xlat
inc
xchg
subl
and
sbb
cmp
jo
lds
mov
xlat
sub
mov
stc
mov
jp
xchg
in
mov
sub
data16
jne
fdivs
call
mov
sbb
and
jo
jb
lret
dec
pop
push
ljmp
lcall
gs
mov
xor
or
mov
das
loop
out
call
filds
std
insl
sbb
pop
jecxz
xchg
es
push
stos
add
mov
les
es
inc
jns
idivl
cmp
fs
mov
mov
inc
push
add
mov
push
fistps
mov
addb
dec
mov
cs
lds
adc
shr
rorb
sub
inc
mov
dec
scas
mov
add
adc
xlat
push
jmp
mov
mov
xchg
orb
rorb
enter
xchg
mov
inc
dec
cmp
add
lcall
js
repnz
lods
mov
mov
test
sbb
jno
mov
cmpsb
pushw
andl
repnz
mov
addb
inc
jmp
scas
adc
push
decb
mov
fnstenv
out
icebp
sbb
adc
inc
add
cmc
mov
jne
xlat
cmp
dec
outsl
xor
mov
push
scas
mov
dec
dec
ja
or
idiv
and
sbb
mov
xchg
shll
addr16
xchg
int3
ficoml
in
mov
in
cmp
mov
mov
sub
les
xlat
leave
pushf
in
daa
inc
leave
mov
mov
adc
lods
pop
dec
lock
rcrl
stc
js
test
dec
mov
popa
pop
xor
in
cld
push
dec
movsl
loop
ljmp
adc
dec
mov
dec
jmp
pop
push
xchg
jae
int3
out
jnp
push
mov
imul
cwtl
mov
stos
int3
or
xor
cltd
inc
fsubrl
jmp
fwait
inc
lahf
gs
mov
sub
loope
in
or
test
or
out
mov
jl
cmp
mull
cmpsb
xorl
dec
rcrl
test
popf
mov
cmc
xor
rorb
sbb
fcmovne
and
cs
cs
cmp
loop
lds
jno
rclb
xor
pop
sti
pop
std
sub
xor
mov
rorl
ret
fcmovbe
jmp
aas
paddsw
and
xchg
cmpb
xchg
add
mov
jns
push
xchg
pop
arpl
scas
sub
inc
mov
aam
cwtl
scas
mov
xor
jp
cmp
cmp
push
into
repz
adc
sub
out
ror
add
mov
sub
and
mov
js
push
mov
out
icebp
jg,pt
sub
push
pop
dec
sub
lods
sbb
mov
sbb
mov
jae
add
dec
and
iret
xor
push
push
fiadds
out
mov
out
orl
jp
and
jl
add
push
and
cmp
or
cmp
movsb
xchg
jge
std
fucomi
clc
test
ret
sub
mov
push
test
pop
insb
sbbb
dec
cmc
sub
sub
das
and
push
lcall
dec
pop
subb
jns
bnd
out
or
fcmovnbe
dec
mov
mov
mov
mov
fucomip
iret
or
push
ficoml
cmpsb
out
or
shlb
cmp
inc
xor
loopne
in
fcmovnb
into
xchg
fisubrs
xchg
mov
ja
pop
xchg
int
jbe
mov
inc
hlt
mov
pop
stc
movsb
stc
insl
xor
out
mov
xchg
mov
test
ss
mov
cwtl
jp
nop
sbb
call
mov
repnz
lods
push
popf
sbb
or
pusha
ret
fmul
sub
cmp
xchg
mov
dec
add
push
jae
mov
fs
pusha
adc
leave
adc
mov
in
inc
jmp
pop
lahf
adc
in
jne
iret
jp
out
push
dec
int
mov
mov
add
pop
ss
xor
int3
int3
leave
mov
stos
push
loop
sbb
fs
jg
adc
mov
adc
test
sbb
push
cmp
or
push
or
rclb
imul
std
xchg
ljmp
in
push
xchg
ds
sbb
test
stos
inc
test
pop
push
lea
sbb
ret
dec
push
orps
jecxz
xchg
mov
or
insl
sub
or
stos
out
adc
imulb
push
or
call
mov
pushf
cli
push
mov
xor
inc
fldenv
xchg
mov
enter
sub
dec
dec
push
sub
inc
inc
dec
repnz
out
out
das
inc
repnz
or
mov
cmpsl
cmp
adc
imul
inc
into
add
insb
shlb
shlb
add
fwait
jo
cmpsb
movsb
xor
push
sbb
sub
jae
inc
and
pop
movsb
jle
dec
aaa
xchg
mov
lock
loope
add
cwtl
mov
jge
mov
rcrl
das
mov
jecxz
sahf
je
stos
adc
pusha
fwait
loop
and
jne
cld
or
fnsave
dec
mov
das
or
lret
dec
leave
xorl
mov
dec
xor
test
xchg
push
mov
jo
adc
fidivrl
dec
xchg
push
repz
xlat
daa
mov
jecxz
mov
movsb
sub
or
jg
add
out
or
rcrb
and
enter
test
jle
add
loop
iret
jle
sub
sbb
sub
lds
out
push
jp
fdivrp
movsb
loop
push
mov
pop
sbb
push
jmp
jecxz
in
les
xlat
ljmp
cltd
mov
stos
outsl
hlt
mov
inc
ja
clc
in
vmwrite
lret
enter
jmp
xchg
imul
jp
insb
push
sub
sub
mov
out
mov
popf
test
ja
jno
xchg
lds
mov
mov
dec
pop
xchg
add
iret
mov
mov
sbb
sti
xchg
or
enter
shrl
scas
pop
dec
orl
mov
pop
push
push
fildll
stos
mov
mov
popf
lcall
mov
mov
nop
dec
rclb
jno
jecxz
lret
fisubrs
mov
jbe
sbb
cmc
lock
out
lods
mov
lret
cmp
inc
add
repz
cmp
adc
int3
aas
loop
in
idivl
ss
jle
pop
pop
lcall
jo
in
fildll
in
jg
test
cmp
repnz
inc
and
push
push
dec
test
xchg
push
mov
cmp
sbb
add
or
xor
mov
rcll
popa
lea
push
mov
loopne
movsb
mov
push
xor
xchg
shrb
shr
outsl
jb
jge
xor
cli
push
scas
mov
xchg
mov
push
clc
pop
orl
mov
inc
push
faddp
test
fstpl
imul
fstpl
or
aad
adc
jnp,pt
sti
outsb
pop
in
adc
enter
shr
xlat
fxch
xchg
imul
addr16
enter
inc
mov
push
pop
nop
repz
jle
popf
mov
aam
bnd
mov
stos
inc
jp
out
xchg
mov
ret
dec
adc
lods
mov
push
sub
in
lock
in
lret
xchg
add
jno
leave
enter
xor
lahf
push
dec
push
dec
add
repnz
out
fildll
dec
arpl
jb
sub
scas
mov
inc
push
push
pop
pop
pop
push
push
lret
out
push
cmpsb
pop
jb
nop
pop
cmp
mov
mov
rclb
xor
iret
out
jo
test
outsl
in
in
jp
dec
fsubr
outsb
in
xchg
cld
push
mov
mov
inc
mov
push
out
and
clc
lock
ret
push
dec
shl
jbe
pop
inc
lret
test
and
mov
pop
test
stos
and
and
pop
push
inc
push
imull
inc
testb
addr16
aas
sbb
test
inc
push
das
fwait
inc
outsb
dec
addr16
outsl
das
insl
push
mov
adc
lods
mov
ljmp
fwait
sub
dec
test
ficoms
or
adc
dec
je
mov
jp
dec
cmp
fs
or
sub
mov
dec
jg
xchg
pushf
cmp
inc
lods
mov
rcrb
push
adc
jmp
ficomps
icebp
push
mov
loop
out
xor
xchg
mov
pop
mov
or
call
idiv
push
mov
in
push
subl
daa
pop
cs
add
adc
jmp
dec
in
clc
or
js
sahf
out
mov
jge
xlat
int
push
or
inc
or
test
pop
repz
cmp
push
adc
out
fildll
fiaddl
ja
pushf
stos
pop
inc
jo,pt
lods
test
adc
mov
jnp
std
sbb
push
or
push
xchg
lcall
ss
xchg
jns
in
add
mov
pop
pop
loope
cmpsb
push
ret
in
sub
aas
cld
cmp
es
les
push
das
lea
shr
fisubrs
sahf
or
mov
jle
sub
or
xchg
jns
rcrl
in
jecxz
inc
adc
cwtl
xlat
enter
push
data16
lret
aaa
jmp
mov
imul
or
mov
fstpl
fcmovnb
std
push
push
pop
adc
push
mov
sub
shrl
lock
jecxz
jo
push
cwtl
push
inc
int
sbb
mov
js
xor
scas
mov
es
lret
test
mov
mov
js
cld
inc
arpl
add
test
pop
dec
pop
cmp
cmp
stos
test
fs
push
scas
mov
repnz
repnz
insl
imull
cld
cli
jne
push
nop
pop
add
div
sahf
and
jmp
adc
mull
outsb
adc
push
xlat
dec
add
dec
pop
add
dec
push
mov
sub
iret
repnz
xchg
mov
inc
sbbb
pop
lds
rorl
pop
mov
outsl
addb
jo
loope
push
lcall
hlt
into
jg
push
inc
jae
out
and
insl
into
into
dec
add
dec
div
xchg
rolb
mov
jne
flds
inc
stc
negb
push
rclb
xor
push
gs
fiadds
adc
adc
adc
rorb
adc
and
fildl
sarl
sbb
lret
imul
sbb
cwtl
scas
inc
pop
jle
xor
mov
push
arpl
dec
and
jo
and
imul
jle
add
ja
leavew
dec
scas
loop
aad
andl
stos
and
dec
push
leave
fwait
jge
mov
xor
movsl
cmp
stos
mov
stos
jl
mov
jmp
movsl
mov
xor
aaa
fcmove
mov
mov
mov
push
lock
dec
test
sbb
les
movsl
subb
xor
xor
insb
call
pop
pop
push
sub
mov
mov
ret
push
lea
and
sub
mov
dec
rol
sbb
fdivs
mov
cmp
xchg
shll
call
or
popa
xlat
cli
cs
ljmp
mov
push
clc
andb
sub
sub
movsb
push
popl
out
cmpsl
cli
adc
cmp
cmp
shlb
mov
or
bound
adc
adc
pusha
and
xchg
ficomps
inc
push
jne
and
add
aaa
shlb
xchg
mov
push
jl
outsl
mov
mov
out
int
adc
outsl
lods
cmpsl
shl
mov
mov
push
into
mov
cmpsb
cs
mov
push
inc
or
cld
movsb
or
xchg
sub
scas
adc
cmp
gs
in
clc
sub
xor
aad
lds
push
inc
std
dec
xchg
lret
fldcw
xchg
or
xor
cwtl
or
push
xchg
pop
jge
aaa
push
gs
inc
add
ja
mov
cmp
lock
jae
inc
clc
lahf
sub
inc
inc
fisttps
popa
jnp
rolb
add
lds
icebp
mov
jg
jnp
mov
add
pop
stc
cmp
movsl
push
pop
push
push
sbb
hlt
mov
mov
fdivs
xor
mov
sbb
xchg
gs
in
cli
mov
push
mov
jp
jns
inc
adc
xchg
cwtl
inc
inc
cmc
nop
jae
fbstp
xor
sub
movsl
mov
bound
iret
iret
jnp
jle
scas
mov
xchg
movsl
mov
jg
dec
shl
lahf
insl
enter
in
fnstsw
xor
xchg
adcb
cmpsl
lahf
cld
fnstcw
filds
push
sbb
or
inc
pop
or
shlb
sti
pusha
push
cltd
jne
jae
lea
mov
sbb
scas
out
push
data16
test
cmc
pop
shll
pop
jle
scas
outsb
pop
fisttpll
push
mov
jp
pop
sbb
test
xor
or
sbb
dec
mov
mov
ret
xchg
push
sub
xor
add
int
xchg
push
dec
cmpsb
pop
shrl
mov
fisttps
leave
jbe
in
xchg
lock
test
adc
cwtl
lret
push
cmpsl
movsl
lods
into
mov
insb
jbe
repz
dec
add
lock
stos
sub
test
mov
fsubrs
popf
sbb
dec
xor
pusha
push
loope
pop
or
mov
mov
push
adc
repnz
int3
xor
jno
ret
xor
cmp
cmpsb
insb
sub
mov
push
cld
mov
addr16
lea
lret
sbb
pop
pop
push
fistl
test
loopne
outsb
push
dec
ja
mov
sbb
fs
icebp
stos
stc
sti
inc
enter
mov
negl
push
lret
jb
mov
add
fwait
pop
clc
and
mov
fnsave
mov
scas
mov
mov
inc
xchg
pop
lahf
xor
push
stos
pop
jbe
test
jbe
jne
test
sbb
pop
mov
dec
mov
sbb
mov
mov
xor
pop
and
shlb
cmp
pop
sub
std
mov
outsl
das
pop
push
daa
mov
fucomp
push
inc
dec
mov
fdivl
push
sub
test
sbb
stos
daa
test
sahf
mov
lahf
std
test
enter
int3
push
aas
in
shlb
jb
movsl
in
mov
mov
bswap
dec
push
mov
lds
or
xor
imul
loope
stos
scas
mov
push
mov
fldt
adc
shrb
mov
ljmp
jbe
mov
cmp
push
fs
imul
cmp
outsb
out
lods
adc
push
imul
iret
rorb
jl
shrl
cld
xchg
sub
stc
dec
pop
das
mov
ss
push
sub
iret
jbe
push
sqrtps
loopne
pop
sbb
cwtl
xchg
inc
add
mov
mov
iret
hlt
sub
mov
pop
push
jge
dec
daa
lds
mov
mov
xor
push
push
push
inc
int
data16
in
mov
out
out
mov
jbe
mov
arpl
lds
lods
pop
xor
inc
rol
xor
mov
ret
test
out
xchg
push
and
sub
and
pop
cmpsb
lea
adc
std
dec
pop
dec
inc
stos
dec
mov
rcr
cmp
lcall
mov
cltd
mov
and
shlb
mov
inc
and
ss
repnz
lcall
push
jmp
int
mov
push
mov
xchg
ss
and
stos
insl
and
test
inc
dec
sub
cmpl
sahf
push
incl
nop
cli
inc
jns
cmpsl
add
rcrb
lods
lahf
mov
lock
lods
add
push
scas
or
mov
xor
mov
xchg
out
roll
xor
xchg
loopne
daa
jle
push
std
pop
pop
ficoml
push
loopne
cs
xchg
pusha
jle
sbb
cmp
push
out
mov
mov
stc
jne
lret
push
pop
mov
mov
adc
mov
faddl
inc
inc
inc
dec
shll
in
mov
leave
mov
xor
dec
push
pop
xchg
and
push
sub
and
movl
add
rol
out
push
inc
lods
add
add
out
push
ud0
mov
in
dec
push
out
add
xchg
mov
rcl
into
mov
mov
push
inc
jno
aaa
mov
loop
nop
inc
rclb
and
fmull
push
cmp
insb
sbb
xchg
push
ja
mov
and
mov
and
insb
popa
xor
fnstenv
outsl
xchg
mov
rcrl
cld
mov
in
mov
je
and
or
jnp
jmp
and
cmp
dec
cltd
or
cs
push
pushf
ret
sbb
sbb
test
shlb
aad
adc
sti
mov
pusha
daa
mov
in
adc
ja
cmovae
and
pop
jge
mov
push
out
aas
and
orl
lea
adc
sub
inc
sahf
sub
inc
rcrb
mov
lahf
in
ret
stos
add
or
sbb
jle
loopne
jge
xor
or
pop
rorb
pop
idiv
push
dec
xchg
sbb
imul
jecxz
sbb
lea
dec
mov
test
jp
push
das
jnp
js
add
fwait
xchg
fimuls
jg
cmp
arpl
repz
fisubs
jae
and
les
int
bound
and
lahf
sub
inc
les
out
in
loopne
cmp
add
je
jnp
icebp
adc
std
xor
push
mov
sbbb
adc
mov
out
or
sub
mov
int3
pusha
jg
cmp
ret
das
xor
xchg
or
mov
cmp
pushf
xchg
xor
jno
mov
add
sub
cwtl
test
fcoms
mov
xchg
mov
out
jnp
xor
and
and
xchg
loope
mov
push
inc
mov
in
ret
push
push
add
cmc
mov
mov
bound
cmp
lock
lods
push
dec
sub
lret
sub
pop
jl
xchg
jb
shrl
daa
mov
or
sbb
xchg
insl
push
in
xchg
mov
mov
jmp
lods
xchg
stos
jle
cmp
popf
mov
sub
cmpsl
adc
cmp
jne
in
stc
or
out
enter
loope
mov
sbb
and
dec
mov
adc
sub
scas
test
pop
add
test
sub
sbbl
xchg
stos
daa
jae
dec
sbb
or
fmulp
xchg
mov
lods
cmpsl
adc
test
dec
mov
sahf
jne
icebp
out
xor
and
insb
out
dec
out
cmp
test
mov
clc
das
insl
mov
cmpsl
dec
out
ds
adcb
addr16
jl
and
cs
sbb
daa
adc
fiaddl
adc
or
pop
adc
adc
inc
shll
xlat
push
cmpsb
xor
and
dec
scas
insl
xchg
and
fcomip
pop
push
pop
test
adcl
mov
enter
notb
pop
dec
stos
jae
xorl
inc
mov
loopne
jne
outsb
xor
sub
stos
sbb
into
in
mov
mov
cwtl
loopne
or
call
jb
scas
pop
out
test
mov
es
jl
add
in
xor
ss
inc
fcomps
pop
adc
dec
jmp
mov
addr16
jnp
push
std
ret
ficoms
arpl
mov
push
stos
dec
pop
jbe
and
pop
jmp
aam
loop
add
cmp
sbb
adc
gs
test
add
xchg
xchg
aad
mov
add
in
adc
rol
adc
add
push
adc
mov
fwait
icebp
pop
pop
adc
out
jle
dec
cmp
cmp
in
cmp
and
xor
daa
stos
fcoml
mov
flds
ret
clc
lea
out
push
xor
or
lea
pop
nop
enter
cmp
mov
roll
or
pushf
in
and
or
fidivl
aad
mov
xchg
lods
pop
dec
stos
adc
sbb
sub
inc
icebp
test
fwait
pop
imul
xor
xor
mov
sbb
sbb
rorl
jne
inc
or
int
add
push
mov
aas
mov
outsb
sahf
and
cld
mov
sarb
enter
xlat
iret
xlat
insb
in
sbb
inc
mov
add
and
dec
in
pop
or
movsb
jl
jae
push
lods
in
or
call
shlb
and
push
push
nop
cmpsl
testl
pop
cld
push
ret
lods
mov
icebp
lahf
rorb
add
fsubl
and
outsl
imul
ss
imul
popf
divb
das
mov
data16
xlat
pop
lock
addr16
mov
lods
mov
rorb
inc
push
pop
push
test
mov
add
icebp
outsb
imul
int
or
sub
sub
cmpl
pop
mov
pop
dec
cmp
sahf
sbbb
pop
xorl
int
mov
movsl
add
xchg
dec
loope
mov
arpl
fldcw
jb
mov
addl
jge
jae
push
addl
push
es
aad
push
dec
xchg
lret
gs
mov
cmp
or
or
loop
or
inc
xchg
pop
and
pusha
cmp
fnstenv
push
adc
shr
fwait
leave
pop
addr16
mov
int
out
jae
inc
or
ret
data16
leave
cmp
push
pop
scas
sub
bnd
dec
stc
sahf
lods
pop
lret
xchg
sbb
mov
xor
out
cmp
fs
xor
fs
pop
mov
mov
jge
sti
loopne
pop
cwtl
in
xchg
xor
lret
jae
js
push
and
and
cli
orb
or
add
pop
testl
sbb
not
ja
sbb
and
mov
in
test
mov
test
aaa
inc
ror
mov
js
call
pop
mov
sub
enter
test
es
mov
sbb
inc
and
stos
ret
adc
mov
inc
mov
dec
or
or
rsqrtps
fsubs
hlt
loope
xchg
paddsb
shlb
xchg
inc
mov
dec
mov
testl
neg
nop
and
mov
arpl
cli
mov
mov
xchg
push
fcoms
adc
imul
push
dec
shrb
dec
sti
iret
push
test
add
mov
cmp
mov
dec
insb
push
stos
scas
or
push
sub
mov
push
cmpsb
push
dec
fdivs
push
cmc
in
test
shrl
inc
inc
insb
dec
enter
popa
insb
ret
cwtl
or
jb
dec
jge
mov
fsubs
sti
nop
test
mov
or
imul
cmc
js
lret
jb
dec
xchg
or
icebp
push
mov
push
fbstp
mov
push
fstp
testl
addr16
inc
mov
mov
fwait
jp
gs
or
ror
push
sbb
sbb
add
push
push
sub
mov
dec
push
xchg
dec
ja
jne
shrl
icebp
and
xor
sarb
jmp
lahf
sbb
mov
les
in
js
fsubrp
push
and
sub
ljmp
into
pop
sbb
adc
mov
aas
cli
jnp
sub
lret
shr
dec
fldcw
mov
or
out
and
les
and
push
pop
aad
mov
jl
adc
push
cmp
pop
std
cld
lret
fildll
mov
lcall
adc
gs
andb
lret
idivl
ffree
or
mov
adc
les
or
sub
dec
push
test
sub
mov
in
and
and
inc
iret
int
mov
lods
enter
add
cmp
mov
cmp
jecxz
ljmp
nop
enter
adc
movsl
out
dec
in
data16
rclb
aaa
inc
pushf
xor
scas
cmpl
push
into
mov
sbb
sbb
fwait
insb
mov
mov
xchg
ret
jmp
insl
jp
test
iret
push
mov
fbstp
xlat
mov
lahf
pop
ja
xchg
scas
bound
jecxz
xchg
ret
arpl
or
sub
stos
mov
ds
jge
xor
roll
in
add
in
testl
mov
cmp
cmpb
aaa
pusha
cli
pop
jnp
test
cli
xor
ljmp
dec
iret
je
push
faddp
pop
pop
inc
sub
add
inc
mov
sub
ret
mov
in
loopne
int3
cld
fistpl
insl
dec
inc
sbb
aam
imul
sub
out
mov
ljmp
insl
fidivrs
enter
jmp
in
add
mov
adc
push
test
jp
pushl
jmp
push
ja
push
out
int3
clc
orl
jbe
jb
pop
in
jecxz
out
mov
cwtl
push
flds
fldcw
mov
xchg
int3
fcoms
jl
pusha
movsb
mov
jns
out
sbb
jo
sub
add
jmp
inc
inc
xor
cwtl
jmp
sbb
cmp
lret
mov
popf
pop
xchg
push
imul
xchg
push
cmpb
mov
sbbb
mov
lret
cwtl
sbb
frstor
test
sbb
outsl
mov
cmpsl
or
mov
mov
aad
mov
xlat
xor
xchg
imul
mov
xor
testl
add
test
inc
sub
add
lock
pop
lods
jo
mov
outsl
or
jle
aam
js
lea
iret
sub
adc
adc
mov
mov
sub
insb
test
xlat
sti
dec
dec
in
test
dec
fildl
xchg
stc
out
mov
jbe
ljmp
or
jnp
inc
imul
dec
lret
idivl
xor
mov
add
mov
mov
cwtl
and
daa
xor
ret
sub
xchg
add
sarb
mov
shl
push
or
mov
push
and
inc
mov
pop
adc
in
inc
repz
mov
aad
movsb
dec
mov
rorl
push
push
lcall
cmp
fidivs
adc
and
jge
daa
gs
outsl
fs
or
int
inc
inc
dec
pop
dec
mov
sbb
fdivrl
in
sbb
scas
dec
jmp
and
fimuls
daa
pop
insl
dec
push
fsubrp
mov
sub
push
ja
inc
testb
sub
or
pop
push
idivb
xchg
xchg
or
jbe
push
int3
mov
xchg
adc
jg
punpcklbw
ja
enter
dec
imul
sbb
mov
inc
fiadds
push
fcoml
lods
adc
push
mov
jmp
mov
out
push
into
and
insl
push
ret
or
lods
pop
and
pop
shll
mov
addl
outsl
test
mov
adc
mov
sub
inc
scas
cmp
push
xchg
and
jge
push
adc
mov
sbb
pop
cltd
mov
fld
add
test
xlat
pop
push
rol
out
push
xor
in
mov
mov
jnp
and
mov
jmp
iret
lret
loop
clc
mov
jbe
aas
movzbl
or
xor
jge
sar
jns
add
xchg
mov
lret
mov
and
jmp
outsl
inc
adc
mov
imul
ret
mov
js
xor
lock
or
mov
xchg
mov
push
inc
push
push
jl
jns
or
push
in
xchg
int3
nop
lea
hlt
cmpsl
call
ficoms
fwait
add
xor
pop
mov
adc
sbb
jg
fistpl
dec
out
mov
out
inc
push
lock
out
imul
test
xchg
jns
add
movl
inc
cwtl
or
fnstcw
movsl
mov
xchg
sub
in
inc
inc
and
adc
inc
fcmovb
in
inc
inc
or
push
fcoml
scas
shll
jl
pop
scas
rep
xchg
in
in
in
cld
cltd
jg
push
sub
int
ds
mov
add
adc
push
test
scas
std
cmc
loopne
sbb
or
mov
fstpt
test
and
or
sbb
icebp
lahf
pop
ljmp
xchg
cmp
addr16
or
lods
jb
xchg
add
cld
jp
insl
pushf
aam
adcb
cmpl
pop
mov
in
mov
sahf
lcall
jnp
movsb
in
test
les
lea
popa
rolb
adc
icebp
in
fwait
cmp
mov
out
inc
pop
scas
pop
mov
stos
jp
movsb
sbb
add
jnp
mov
imul
dec
fistpll
jle
mov
lods
or
in
les
and
adc
or
dec
enter
gs
xchg
les
xor
or
pop
outsb
fidivrl
sbb
aas
sub
push
loope
sub
jo
test
stc
js
cmp
and
enter
cmc
imul
cwtl
adc
popa
call
jns
ja
mov
or
dec
pushf
mov
mov
jmp
or
clc
jo
or
lret
add
lds
fwait
jmp
test
movsl
sbb
add
movsl
jb
cmp
dec
mov
sub
sbb
push
out
inc
push
xor
lret
cmp
mov
adc
jns
addr16
rorb
lcall
insb
pop
lret
mov
shrb
mov
jle
xchg
xchg
inc
jg
in
jo
bound
xlat
shrb
inc
ljmp
mov
sbb
daa
and
pusha
dec
movb
inc
dec
test
jnp
iret
and
mov
rolb
das
sahf
fs
xchg
jmp
mov
pop
rolb
dec
or
ja
xlat
in
daa
cmp
mov
or
shlb
or
mov
push
testb
push
jo,pn
jnp
pushf
int
cmc
nop
cmp
jno
addr16
cli
ja
test
mov
out
icebp
leave
mov
out
dec
and
xor
pusha
shr
push
add
nop
fldl
mov
sbb
xchg
xlat
ja
std
sarl
outsl
mov
push
or
out
lret
test
jl
cmp
mov
mov
sub
fisttpll
subl
aad
leave
xchg
test
ret
ds
mov
jge
shrl
pop
and
jg
dec
xor
mov
out
sub
adc
ds
insb
fimull
add
push
and
xor
sbbb
dec
jg
pop
pop
xor
cltd
and
mov
mov
and
idiv
cmp
pop
pop
and
rcll
jp
mov
add
outsb
sahf
push
add
jne
subl
in
cmp
jecxz
adc
jo
insl
jo
js
bnd
jne
aas
dec
out
dec
roll
in
jb
xor
insl
movb
test
add
addr16
dec
hlt
bound
mov
and
popf
imul
fsubp
fwait
int
out
sub
mov
xchg
xchg
sub
enter
in
xchg
cmp
nop
in
push
dec
add
imul
in
xchg
mov
mov
ljmp
xchg
dec
sub
mov
cmp
adc
pop
push
xor
iret
aaa
pushf
sub
inc
inc
push
stos
cld
add
xchg
xchg
pop
mov
fadd
mov
in
jno
pop
or
sahf
loopne
shll
mov
out
add
and
and
gs
cmp
les
mov
lock
lret
cwtl
jmp
jns
push
jo
cld
daa
fs
sub
icebp
and
xchg
jno
nop
sub
test
divb
repnz
addb
jno
rclb
inc
push
ds
jmp
ret
lcall
cs
xchg
mov
mov
dec
pop
cli
xor
push
and
pushl
lahf
jb
cmp
clc
dec
daa
sub
or
aaa
pop
sub
jmp
cmp
rcll
fxch
mov
nop
pusha
push
jmp
inc
and
and
sub
ffree
push
sub
ja
ja
lea
dec
rolb
add
lcall
out
pop
fidivl
adcb
aam
insb
rcr
xchg
mov
fidivl
cmc
pushf
mov
pop
fists
ret
loop
adc
sahf
sarb
adc
lret
mov
inc
mov
ret
lret
cmp
stos
jo
jmp
mov
push
mov
and
mov
and
test
mov
add
cs
ret
mov
in
fwait
jne
int
push
clc
and
or
loope
repz
loop
and
jecxz
sub
jl
pop
aad
cmp
fisubrs
add
int
movsl
dec
xchg
addl
or
jecxz
or
mov
and
negl
mov
mov
ja
and
lcall
mov
xchg
es
dec
xchg
mov
cmpsl
push
cmp
pushf
mov
pushf
and
jb
sbb
shr
push
sub
cmp
test
jbe
sub
xor
dec
mov
push
out
dec
leave
addr16
cld
ljmp
out
add
fiadds
into
jp
and
ds
sub
shll
out
cmpsl
mov
sbb
faddl
in
jns
imul
pop
sbb
cmpsb
or
movsl
subb
xchg
jne
mov
adc
jo
xor
add
repz
mov
xor
sub
lcall
sbb
enter
add
imul
loop
xchg
jg
repz
out
outsl
sbb
cmp
xchg
pop
xor
cltd
jbe
into
mov
push
jmp
pop
repnz
adc
cld
loopne
cld
adc
mov
dec
incl
sub
arpl
cli
xor
inc
mov
aam
pop
test
hlt
adc
lods
daa
out
adc
mov
push
movsl
insl
sbbb
jp
pop
incl
mov
insl
mov
cmp
mov
xor
aam
sub
push
test
movsb
sbb
jl
das
orl
rorl
push
call
sbb
dec
jnp
jge
test
cld
js
cmp
xchg
jmp
iret
lods
inc
sub
inc
jle
pop
adc
jp
ds
push
pushf
mov
scas
in
mov
mov
ja
xchg
xchg
cmp
push
xor
push
daa
enter
pop
cwtl
fldcw
out
dec
cmp
push
add
jecxz
and
scas
cli
sahf
loopne,pt
clc
fmuls
shlb
xchg
inc
and
filds
sub
mov
jle
subb
xor
adc
adc
icebp
imul
lret
inc
inc
popf
bound
sbb
jno
xchg
pop
xchg
mov
sub
jbe
pop
aad
mov
cltd
lret
mov
mov
push
or
sub
and
jb
outsb
push
and
pushf
rclb
mov
cld
lret
aad
ret
pop
jno
ljmp
add
or
test
or
lret
inc
fstpt
dec
shlb
cmc
clc
xchg
push
pop
jns
push
decb
or
mov
movsb
insl
in
pop
pop
cmc
ljmp
out
add
push
sbb
cmc
push
ss
dec
pushf
mov
into
lret
dec
addb
adc
inc
out
xlat
inc
sbb
push
xor
pop
add
dec
test
jl
xorb
jne
adc
adc
in
cld
cmp
push
lahf
mov
cmovne
push
shlb
jmp
sub
cmp
ror
mov
mov
sbb
jge
jl
jge
pushf
leave
pusha
or
stc
xchg
lods
mov
mov
rclb
xor
nop
lahf
mov
xor
jge
push
jne
inc
arpl
mov
cltd
dec
test
call
int3
sbb
jno
nop
imul
xor
cmc
mov
outsb
into
sub
xor
push
mov
por
mov
sub
outsl
lcall
add
out
mov
mov
int
ror
jbe
mov
sub
leave
out
mov
mov
pop
andl
out
lcall
packsswb
pop
mov
dec
jl
cld
test
fstpl
movsl
arpl
ret
and
pusha
in
test
jne
in
pop
addr16
jne
into
outsl
cmpb
test
sub
pusha
add
in
sub
add
int
adc
pushf
pop
push
inc
jns
pushf
ja
notb
nop
insb
imul
and
test
fwait
pop
add
xor
leave
xlat
pushf
scas
xor
fcomi
mov
mov
xor
dec
notb
imul
mov
ret
cltd
lods
sbb
mov
mov
adc
xor
in
ror
jg
mov
scas
test
lds
pop
pop
jmp
mov
dec
dec
mov
push
mov
pushf
xlat
pop
lret
out
jle
jg
mov
mov
scas
mov
xchg
sbb
mov
adc
fdiv
and
dec
loop
enter
clc
push
mov
fs
mov
mov
jle
arpl
sbb
call
imul
aaa
shrl
fwait
sbb
in
fsubr
daa
inc
rcrb
add
cmpsb
sbb
cli
push
mov
sbb
add
or
pop
data16
sbb
lds
cwtl
pop
scas
repz
movsl
push
inc
aad
dec
es
sbb
and
sti
mov
xor
xchg
adcb
stos
jno
mulb
jno
fbstp
test
push
bound
lock
sub
xor
cli
stc
and
mov
pop
xchg
dec
insb
inc
sbb
addr16
xor
mov
mov
mov
push
shll
mov
ja
lock
jno
out
loope
xchg
testb
popf
pop
and
in
stc
or
mov
loop
rclb
jg
dec
loop
cli
test
outsb
daa
sarb
dec
imul
mov
mov
lahf
movntq
or
ja
aad
xor
jmp
push
popf
bound
mov
bndldx
xchg
xor
push
sub
sub
pop
das
lahf
repnz
pop
rcrb
cmp
fists
push
gs
sbb
lods
fwait
sahf
sub
sub
sbb
sub
xor
fwait
enter
push
xchg
data16
mov
cmp
lea
push
aad
jecxz
lret
icebp
mov
dec
push
fsubrs
xchg
daa
add
xchg
in
in
pop
inc
loopne
jge
outsl
cmpl
pushf
out
push
jle
pop
pop
or
ja
cs
inc
sub
call
xor
cltd
inc
fnsave
arpl
insb
fstpl
or
or
cwtl
adcb
dec
xor
pop
ja
mov
mov
jnp
lret
shrl
int
test
adc
inc
add
insl
lahf
xchg
mov
popa
and
xor
nop
sbb
nop
orb
push
xchg
in
jmp
test
push
push
fsubl
fimuls
inc
cmc
cmp
movsb
push
dec
sbb
push
mov
or
fistps
lret
jne
pop
fsub
loopne
imul
fs
mov
lds
cmp
cmp
push
popa
jp
cmp
jb
pop
dec
out
std
jle
sbb
inc
cmp
mov
push
and
out
fs
lcall
ja
lods
stos
or
insl
jp
mov
inc
add
adc
ds
mov
outsl
fs
or
bnd
sbb
or
gs
jnp
push
and
rol
mov
in
lods
pop
insl
jae
xchg
lret
xchg
les
pop
sbb
sub
pop
in
fdivl
stc
in
push
test
adc
mov
mov
xorl
add
inc
cmp
xchg
dec
leave
test
into
fidivs
mov
xor
sbb
mov
shl
jns
rcll
shll
or
xlat
movsb
fstl
or
mov
and
mov
ds
addr16
aaa
fdiv
jge
fnstcw
ss
movsl
inc
fnstsw
test
stos
aam
clc
mov
mull
scas
cmp
sbb
imul
outsl
push
sub
insl
dec
xchg
out
sti
pop
stos
std
ret
loop
xor
andb
dec
int3
pop
inc
mov
pop
pusha
aam
pop
cli
std
and
xor
and
nop
or
xchg
mov
jno
rol
lcall
push
test
sub
mov
pop
add
xchg
ss
lcall
cmp
gs
fbstp
adc
aam
je
xchg
js
push
pop
sub
and
mov
adc
bound
bound
lds
mov
out
cmp
mov
sub
mov
adc
inc
mov
adc
ficompl
pop
push
pop
add
xchg
pop
movsb
xor
xor
enter
dec
shll
xchg
cmpsl
mov
xor
sbb
xchg
jns
lods
xor
cmc
lret
sub
seta
stos
adc
xor
in
fnsave
scas
shr
mov
enter
mov
jp
and
jle
and
mov
jbe
xor
dec
fcomip
adc
test
daa
jns
adc
fimuls
add
fmulp
jne
push
fcom
and
pop
addr16
inc
mov
mov
mov
mov
cmp
and
jo
sub
mov
pop
sub
jge
repz
mov
test
and
fmul
dec
test
or
inc
sub
aaa
sub
or
icebp
mov
test
out
addb
pop
adc
cmp
rorl
pop
add
ljmp
cmp
fs
imul
in
call
mov
fldl
movsl
push
call
push
ja
gs
outsb
imul
ret
pop
xchg
inc
xchg
dec
cmp
inc
nop
sbb
xchg
mov
adc
mov
add
sbb
in
pop
add
std
pop
daa
in
dec
lret
mov
outsl
push
mov
scas
clc
mov
inc
mov
enter
jp
pop
js
adc
aaa
mov
stos
hlt
xchg
mov
aas
movsb
repz
and
arpl
sub
pusha
aas
and
stos
insl
mov
nop
pop
inc
lods
stos
jmp
scas
rol
pushf
mov
xor
and
push
xor
aam
inc
mov
hlt
dec
call
push
repnz
cmc
dec
aas
mov
aaa
fdivrp
rorb
enter
stos
ret
mov
fistl
jl
call
mov
sbb
sbb
xchg
ret
ljmp
adc
or
ss
hlt
lods
pop
jge
imul
test
adc
test
inc
cwtl
cmp
lahf
inc
pop
xor
lock
ljmp
int3
das
cmpsb
call
lret
jge
xchg
add
or
inc
mul
hlt
stos
clc
loopne
in
je
orl
fstpl
sub
mov
aaa
adc
lock
imul
lea
nop
mov
lock
test
aaa
shl
fwait
jl
dec
sti
sahf
mov
xchg
xchg
dec
notl
add
jae
pop
mov
aad
cld
data16
adcl
cmp
xchg
sub
mov
gs
in
xor
sarl
call
movsl
push
sbb
outsb
popl
aad
jmp
ficoms
sbb
and
addr16
sar
sbb
xchg
js
repz
pop
test
lea
push
ja
fnclex
fadds
sbb
cmp
in
sar
je
repnz
jl
js
jle
mov
movsl
xor
lods
repnz
mov
jae
mov
in
jp
into
pop
test
xlat
loopne
icebp
inc
cltd
inc
gs
imul
lods
push
mov
inc
popa
inc
fstpl
fbstp
adc
ss
xchg
pop
push
sbb
popa
shlb
scas
lret
inc
inc
and
sti
ljmp
jle
jg
xor
push
adc
xchg
lods
push
insb
push
lret
dec
add
jnp
in
arpl
jmp
movsb
and
arpl
jp
outsl
xchg
mov
adc
stos
repnz
mov
fldt
mov
add
lods
nop
fdivrp
xchg
rcrl
cmp
test
fstl
push
loopne
cmp
sbb
fildll
aam
lock
leave
dec
decb
mov
sti
xchg
mov
and
and
ficomps
and
test
ror
push
out
mov
lret
push
mov
push
jg
mov
adc
aam
xor
fldcw
sbbb
push
sub
pusha
mov
por
fldl
inc
sub
add
shrl
jl
lea
adc
dec
mov
leave
negb
sub
repz
int
dec
in
cmp
push
daa
and
test
dec
in
cmp
fcoml
jl
clc
in
imul
or
mov
jns
test
pop
lods
add
test
cmp
and
sbb
out
push
leave
lret
je
dec
or
leave
sbb
sbb
fsubr
and
sbb
mov
fimuls
je
imul
fcoms
clc
pop
repz
adc
inc
fwait
mov
inc
adc
dec
fwait
rep
or
dec
mov
push
or
add
jae
xor
fisttpl
and
adc
sbb
sub
rcr
out
push
dec
pusha
ja
lcall
jg
cmp
mov
pavgb
xor
mov
bound
jmp
sbb
push
cltd
adc
sub
movl
jno
cmc
inc
in
xchg
jle
outsl
test
enter
adc
cmpxchg
xor
out
mov
jp
mov
or
repnz
shlb
jbe
inc
adc
pop
dec
mov
dec
scas
pop
cld
add
loope
popa
sbbb
pop
ljmp
push
and
popa
aam
orl
pushl
jg
cmpsb
cmpsb
jno
cwtl
movsl
lods
test
dec
push
pushl
cmp
cmpsb
loope
hlt
inc
repz
push
pop
dec
shrb
pop
mov
xor
ret
fwait
lds
or
rorl
imul
pminsw
jp
cmp
mov
push
aam
push
in
loop
and
jmp
mov
mov
stos
clc
sbb
sbb
mulb
notl
rolw
xchg
subl
inc
cmp
push
xor
push
push
sub
jl
orb
xor
movsl
mov
scas
cmp
mov
xor
ljmp
mov
xchg
mov
push
mov
mov
lock
push
popf
in
pushf
int3
inc
dec
add
mov
sbb
sub
loope
xchg
add
ffree
stos
shll
fsubl
adc
fsubr
lea
mov
ljmp
pop
dec
cld
imul
mov
repz
test
roll
pop
mov
sarl
cmp
mov
imul
lret
lds
es
in
and
test
push
in
sti
fwait
sub
mov
cld
mov
sahf
out
jb
adc
dec
movsb
shrb
out
mov
lods
mov
mov
cmpb
jp
jns
and
nop
and
sarl
push
out
dec
pop
ds
xor
xor
add
ss
out
inc
and
iret
push
fs
xlat
mov
or
in
ficoml
xor
movsb
mov
js
shll
push
jmp
fnstcw
and
cs
std
adc
aad
pop
adc
nop
and
xchg
lea
cmpsb
adc
dec
and
xor
fnstsw
loop
xor
test
mov
add
sarb
addl
inc
xchg
das
lea
xchg
xor
mov
dec
test
hlt
fsubs
outsb
push
cmc
xor
dec
or
int
and
std
or
lods
inc
and
jne
jns
jb
aad
inc
jo
gs
and
xchg
jne
inc
mov
xchg
and
or
add
dec
cmp
push
mov
mov
repnz
iret
int3
ljmp
ss
dec
rorl
out
push
sbb
xchg
jne
rep
fsubrs
clc
or
xchg
pushf
sub
int
xchg
push
add
xchg
fstl
repnz
push
dec
test
stos
mov
mov
ret
dec
xor
enter
arpl
ja
push
idivl
mov
lea
xor
pop
mov
and
enter
outsb
cmpsl
or
outsb
scas
xchg
movsb
aad
push
and
or
sub
push
pusha
popa
mov
aad
sbb
out
popa
stc
and
testl
sub
push
mov
test
jecxz
lcall
pop
jae
jp
rcll
sub
sub
jo
icebp
aaa
sahf
inc
loop
mov
cmp
cld
mov
push
add
cwtl
mov
mov
inc
mov
inc
outsb
xor
inc
or
ret
xchg
rclb
test
ja
sbb
mov
pusha
in
cli
fwait
lcall
shlb
fcoml
lret
stos
mov
and
and
pop
roll
mov
or
mov
adc
pushf
gs
fdivr
sub
mov
shlb
inc
mov
int3
outsl
aas
imul
lods
rcll
or
adc
movsl
test
imul
xlat
or
adc
add
lods
mov
jae
and
lock
jae
cmc
rolb
js
lcall
adc
sar
jne
jbe
cmp
lea
in
aam
push
sbb
and
jg
test
ss
lcall
push
int
xchg
lret
adc
movsb
sbb
dec
adc
fcoml
leave
movsl
xor
out
into
aam
sub
fisubrs
push
xlat
or
pop
sbb
cltd
dec
mov
sub
lock
inc
repnz
mov
lock
adc
dec
jmp
add
imul
pop
sub
sarl
pop
test
pop
inc
and
add
xchg
ss
adc
dec
lods
aad
jb
push
int
jl
pop
xor
scas
shlb
lods
adc
dec
or
sbb
je
roll
icebp
jg
push
push
call
pop
and
jmp
pusha
in
mov
loopne
fadd
cli
pop
lcall
jno
pop
icebp
cmp
lcall
xchg
lcall
movsb
ljmp
add
xor
loopne
je
push
push
xor
dec
cld
add
or
mov
mov
pop
in
out
push
pushf
fwait
push
push
or
mov
movsb
dec
push
iret
cmp
leave
mov
lock
mov
ja
lcall
inc
mov
sbb
repz
movsb
insl
fdivrs
popf
lock
cmp
addr16
stos
push
and
mov
sbb
pop
data16
jl
inc
push
lods
add
lret
ljmp
insb
pop
imul
das
pushw
dec
lds
jne
pop
mov
ds
outsl
dec
pop
inc
test
xchg
xchg
or
jae
popa
push
nop
imul
jge
ja
movsl
mov
shrb
mov
mov
jbe
adc
sbb
xchg
repnz
inc
mov
and
adc
mov
mov
pop
inc
aaa
xchg
mov
pop
cmp
rcrb
bound
ret
loope
in
cltd
pop
cmp
adc
mov
lea
push
push
hlt
pop
push
pop
ss
inc
das
sbb
test
adc
iret
loope
scas
loop
mov
mov
test
jg
cmp
mov
sub
adc
mov
icebp
in
mov
lea
stos
or
push
jbe
push
add
or
aas
enter
jl
mov
rolb
xor
mov
sbb
call
xchg
dec
jo
imul
dec
and
sbb
dec
push
inc
cmp
inc
or
push
xchg
decb
adc
sti
sub
mov
hlt
frstor
les
popa
loopne
jnp
daa
sub
push
or
jmp
pop
push
dec
dec
fldenv
jne
mov
clc
cwtl
ss
loop
pusha
cmp
dec
xor
inc
cmp
jo
add
ljmp
push
jne
scas
xchg
fmul
mov
jl
dec
dec
sbb
loope
mov
and
inc
movb
shll
in
xor
cmp
int
pop
add
fs
push
les
inc
mov
mov
push
data16
repz
in
fbstp
or
jno
adc
int
stos
out
xchg
scas
mov
cmp
jns
dec
popf
jle
inc
jne
sbb
mov
bound
mov
aam
subb
enter
js
sarl
dec
mov
add
jno
add
cmp
dec
xchg
stos
int3
xchg
mov
shll
les
and
jge
cmp
mov
mov
mov
es
test
loope
sbb
stos
xchg
mov
xchg
jl
ret
cmp
xchg
push
add
cmp
jno
into
pop
ficomps
gs
cld
sub
mov
rcrb
pop
ja
iret
movsl
lret
mov
add
sub
inc
add
and
sti
add
fstl
push
xchg
repnz
xchg
mov
lea
jle
add
loope
jno
xor
neg
mov
jg
sbb
jno
loop
xor
inc
daa
mov
mov
pop
add
mov
js
sbb
mov
fdivl
jno
lds
mov
cmp
outsl
add
xorb
jecxz
in
sbb
jg
add
adc
and
cmp
or
adc
or
loop
test
outsb
icebp
test
pop
mov
and
outsl
movsl
bound
add
mov
mov
xor
push
loopne
xchg
lahf
lods
ret
inc
ret
xor
outsl
in
xchg
or
dec
lcall
jmp
xor
or
adc
cmpsl
stc
movl
jg
xchg
out
outsb
push
shrb
mov
loop
test
cli
push
sub
inc
cwtl
call
bound
push
addr16
add
sbb
call
setl
lods
xor
jle
test
jb
jmp
insl
mov
sub
in
subb
fstp
push
add
loope
adc
mov
xchg
repnz
mov
xor
je
mov
sub
cmp
pop
scas
lea
mov
mov
sbb
lahf
out
cwtl
sub
mov
mov
and
pop
fcmovb
stos
incl
mov
fwait
adc
leave
jg
mov
test
insb
out
stos
neg
sub
cmp
sub
sti
mov
cs
xorb
into
out
adc
adc
or
or
test
pusha
je
call
sbb
mov
addr16
add
das
cmp
push
das
lahf
xor
movntps
movsl
loopne
mov
cmp
mov
mov
ret
fildll
sub
jecxz
ficompl
add
enter
mov
jnp
pusha
mov
sti
sti
mov
adc
test
sti
cmp
ljmp
aad
mov
mov
loopne
inc
sub
push
movsl
call
and
out
mov
mov
and
or
push
fsts
mov
mov
test
into
addl
cvttps2pi
js
in
dec
xchg
add
lea
hlt
sub
add
movsl
mov
fimuls
pop
adc
pusha
and
pop
cwtl
sarl
pop
pop
pop
mov
mov
and
iret
insb
mov
or
mov
movsb
push
jae
cmp
sub
xor
daa
loope
gs
xchg
ss
cmp
dec
cmc
sti
sub
cmpsl
sub
sbb
movsb
pushf
loopne
scas
and
jle
and
xor
shrb
lods
out
mov
insb
mov
cmp
xlat
repz
in
les
fimull
or
pop
xchg
xor
repnz
fcoml
xor
cmp
ljmp
cmpsb
movsb
cwtl
cmp
stos
shlb
push
mov
out
fiaddl
xchg
dec
inc
pushf
lret
lea
mov
sub
mov
mov
pop
scas
mov
loope
int3
cmc
fs
xchg
mov
ss
jns
mov
inc
sub
pop
mov
pop
sti
decl
dec
cmp
jmp
xchg
andb
fstpt
aaa
mov
aam
fmull
dec
xchg
out
and
test
gs
inc
jl
lods
mov
xchg
and
adc
adcl
repnz
or
sbb
out
cmp
and
push
jb
xchg
pop
sub
das
rolb
mov
jo
outsb
ljmp
sbb
pop
xchg
test
es
cmp
xchg
shlb
sbb
cmp
cld
fnop
inc
sbb
lods
inc
js
mov
lret
add
inc
imul
cmc
mov
fs
pop
mov
out
adc
fwait
push
nop
movsl
mov
movsl
sahf
test
testb
push
jbe
rcr
pop
sbb
sub
stos
sbb
mov
enter
xor
add
push
movsb
lcall
loope
sub
mov
int3
mov
xor
and
aas
icebp
sahf
mov
lret
pop
popf
and
pop
jno
jg
sub
movsl
icebp
xor
insb
lods
or
js
xor
fs
adc
cmp
xlat
popf
inc
addr16
xchg
jno
clc
insb
sbb
push
mov
lret
cmp
sbb
xor
iret
pop
xor
cwtl
nop
mov
testb
mov
jnp
je
mov
sub
jno
push
sub
popl
inc
mov
sub
sbb
pop
in
shlb
pushf
inc
xchg
jp
nop
lcall
dec
xchg
and
cmp
aas
daa
jbe
ret
in
sbb
fcoms
out
jns
repnz
leave
and
mov
push
adc
sbb
inc
push
lds
data16
pop
cmp
lock
gs
and
pop
cmpsb
incb
push
gs
mov
jne
fsubrs
jmp
fst
cltd
movsb
nop
push
test
loope
addr16
push
push
mov
jb
mulb
adc
inc
dec
leave
es
roll
mov
cli
stos
pop
lret
loop
push
mov
adc
and
inc
mov
push
and
or
jne
lea
inc
loope
push
dec
and
sub
aam
jge
inc
lods
pop
cmpsb
outsb
push
hlt
pop
push
daa
mov
hlt
das
dec
aad
jecxz
dec
or
xchg
div
call
scas
cmp
outsl
fwait
stos
fstp
push
ret
lret
lods
fwait
das
sub
sbb
cwtl
popf
mov
or
xor
aas
cmp
jecxz
push
push
std
bound
jmp
testl
inc
dec
mov
and
mov
imul
cmp
mov
jb
jb
jmp
mov
jl
jp
je
loop
or
fcoms
or
mov
ffree
fnsave
arpl
stos
jmp
xor
test
xchg
sub
lds
pusha
shrb
add
jmp
pop
div
pop
arpl
push
scas
subl
push
cli
push
fwait
jnp
or
push
mov
fisubrl
xor
mov
mov
orl
shrb
das
dec
cmp
insl
and
popf
mov
jae
js
dec
out
mov
aam
decb
rolb
add
subl
lods
xchg
mov
push
loopne
inc
repnz
xor
mov
popf
and
inc
enter
les
lods
ds
adc
popa
std
clc
dec
mov
cs
outsb
xor
cmpsb
ja
xchg
lahf
dec
sbbb
leave
xor
mov
repnz
pop
push
incb
add
enter
push
insb
pop
mov
test
dec
cwtl
inc
add
pop
cld
inc
jle
data16
test
sub
mov
icebp
xor
and
dec
sub
ja
or
sub
loope
fdivl
dec
mov
push
loop
mov
nop
mov
movsb
scas
jmp
dec
fidivl
adc
add
out
adc
push
leave
mov
mov
cmc
mov
xchg
test
cld
jg
adc
adcl
pop
mov
vcvtsi2ssl
ss
rcl
mov
popf
jp
inc
aas
out
jae
add
and
in
scas
aas
pop
cmp
dec
sub
xchg
lret
mov
pusha
or
test
loop
dec
xchg
loop
lea
ficoml
push
xor
cmc
mov
mov
clc
cltd
popf
mov
jns
xchg
roll
and
inc
jae
and
add
jmp
lock
movsl
push
aas
stos
loop
cmp
push
int3
movsb
js
or
inc
or
aaa
rcrl
incl
jecxz
lahf
cltd
mov
mov
push
jbe
jl
xor
adc
aaa
jl
dec
dec
push
aas
aam
or
mov
mov
mov
cmp
imul
xor
pop
mov
jno
out
jge
fs
adc
mov
or
scas
repz
leave
fwait
or
xor
xchg
push
adc
push
push
dec
inc
aas
xchg
mov
enter
sub
lahf
mov
push
xor
loope,pn
addr16
mov
nop
into
lods
sub
jmp
pop
pop
fsts
and
inc
add
jl
push
ret
push
iret
ss
sti
enter
fists
and
xchg
cmp
arpl
xor
mov
dec
lcall
xor
cmpsb
cmp
shll
inc
pop
test
lods
loope
or
fcompl
xchg
pusha
aas
dec
lods
jecxz
mov
jno
jne
pop
jg
jno
aaa
pop
xchg
lds
roll
fildl
mov
xchg
add
mov
pushf
inc
ljmp
test
inc
cmp
stos
mov
mov
enter
fisubl
cmp
daa
inc
movsb
js
ret
fyl2xp1
sti
xchg
add
iret
sarb
lock
loop
or
imul
dec
out
arpl
pop
shlb
cmp
or
repnz
and
cld
cmpsl
pop
or
adc
mov
leave
jb
fdiv
js
add
mov
nop
cmp
loopne
enter
dec
inc
out
outsl
sbb
imul
jo
sbb
loop
jle
dec
shrl
jl
sbb
sbb
mov
mov
inc
xchg
mov
int3
pop
mov
mov
jmp
pop
out
outsl
mov
sbb
fdivs
aad
ja
xor
outsb
jp
xlat
push
jo
add
pop
arpl
cmpb
sub
test
mov
cld
sbb
or
loope
out
sbb
in
shlb
mov
or
cltd
stos
stos
lods
and
xchg
xor
xadd
pop
mov
adc
hlt
scas
arpl
mov
cmp
lret
stos
sbb
add
adc
cld
inc
xchg
mov
fnsave
in
lock
xchg
cli
push
push
lds
cwtl
clc
push
mov
adc
jp
sarb
outsl
cmc
cmpsl
scas
sub
xor
aaa
sahf
test
pop
lea
pusha
mov
push
mov
push
jb
bound
stos
sub
and
lods
fistps
movsb
jne
std
les
daa
stc
test
icebp
fistpl
push
lcall
cmpsb
sbb
ds
es
std
dec
lods
ss
jg
jno
inc
adc
arpl
and
pop
add
insl
push
shlb
sbb
int3
jb
stos
dec
out
dec
out
sbb
mov
and
scas
push
mov
sbb
dec
or
loop
push
cld
mov
jl
orl
cwtl
xor
ss
sbb
or
arpl
pop
movsb
movsb
lret
push
mov
sub
inc
xchg
mov
mov
mov
test
in
pop
rorl
in
aas
xor
test
inc
addl
add
push
loop
fcompl
mov
adc
std
bound
mov
incl
je
sbb
sub
xor
cmc
addr16
cmp
sbb
xchg
xor
or
fstpt
cli
fisubl
repz
in
and
jp
sbb
inc
outsb
mov
imul
adc
hlt
push
hlt
dec
movsl
adc
adcb
lcall
push
adc
fistps
pop
hlt
stos
sbb
lret
inc
outsb
sahf
jmp
mov
insl
fiaddl
xor
push
shll
pop
lahf
loopne
scas
int
and
aad
mov
inc
mov
into
das
cs
jne
adc
icebp
outsl
gs
lock
pop
aaa
hlt
lret
lods
outsl
test
sbb
mulb
icebp
sarb
lods
js
pop
lahf
out
ret
in
adc
sbb
loope
or
jl
jne
mov
sbb
and
adc
out
fimull
stc
xlat
ljmp
or
cmp
xchg
lcall
mov
mov
cmpsl
push
das
pop
fcomp
cmp
popa
rcrb
mov
xchg
imulb
sbb
push
adc
sti
fwait
xchg
int
jge
cld
mov
cld
into
outsb
out
sahf
hlt
xchg
push
pop
mov
pusha
scas
test
cmpsl
outsl
or
pushf
sbbb
bound
pushf
adc
inc
clc
sbb
adc
decb
in
das
adc
icebp
ljmp
mov
jg
sbbb
push
sbb
mov
add
lock
popf
push
jnp
loope
push
pop
jmp
outsb
je
push
adc
dec
mov
fwait
or
cmp
xchg
and
jae
out
in
push
cwtl
daa
add
and
inc
xchg
mov
fistps
out
xor
inc
data16
add
push
std
pop
pusha
inc
dec
fstpt
fldenv
sub
cltd
mov
xor
inc
jg
sub
cli
jge
mov
push
add
lea
mov
test
add
test
xorl
xlat
mov
dec
lea
jle
popf
jae
mov
cmpsl
fnstsw
fstps
pop
xchg
cli
mov
jne
es
mov
sarl
xor
jo
push
shlb
outsb
push
leave
mov
idivb
movsb
loope
xchg
sbb
mov
jl
xchg
mov
push
out
pop
lods
xchg
enter
inc
std
sbb
push
inc
push
pop
je
mov
adc
or
mov
insl
aam
pop
or
and
mov
dec
jge
add
xor
daa
add
in
subb
inc
out
je
lock
jmp
xchg
fcmove
sub
in
fildl
xlat
loop
xlat
in
cmp
test
sbb
and
pop
sahf
cmp
in
jg
and
cmp
push
pop
insl
pop
mov
shl
dec
xchg
je
inc
jl
repz
lods
insl
dec
jno
inc
pop
dec
add
push
jns
jnp
cs
clc
inc
mov
xor
aaa
es
jecxz
loopne
sub
stos
mov
and
ss
cmp
dec
adc
and
movd
int
inc
test
bound
sarb
jno
add
inc
jmp
fsubrl
pop
cld
and
aad
sbb
mov
sbb
lea
add
aas
scas
jle
mov
mov
hlt
rcrl
sub
popa
inc
cmp
sti
rorb
lea
xor
or
mov
xlat
inc
js
hlt
mov
fdivp
mov
lret
push
xchg
push
inc
push
jbe
mov
shlb
cmc
dec
lcall
and
jge
rcrb
and
lock
jle
mov
mov
dec
push
in
insl
lahf
aad
mov
cmp
sbb
push
xor
lds
rorb
es
scas
rclb
ds
jns
add
lret
cwtl
fmul
push
mov
test
jl
gs
test
adc
xchg
push
push
pop
ret
stc
inc
xlat
sbb
pop
pop
jmp
into
pop
xor
mov
fdivrl
push
jns
out
cmc
pop
push
mov
insb
fisttps
clc
add
push
cwtl
les
ljmp
xor
popa
xchg
inc
ret
mov
cmp
mov
std
repz
lock
adc
adcl
sub
or
shl
adc
mov
inc
fstpl
stos
inc
lods
in
sbbl
adc
jne
pusha
insb
mov
subb
int3
adc
fcompl
dec
jecxz
outsl
lret
sbb
jge
xor
xlat
insb
xchg
adc
jg
dec
aad
cli
sub
outsb
adc
fbstp
xor
push
outsl
pop
jecxz
cwtl
inc
iret
xchg
out
sar
aaa
xor
mov
mov
test
aaa
xor
in
push
dec
ror
lret
inc
into
mov
push
rorl
jns
nop
push
push
ss
cmp
fcmovbe
push
push
mov
adc
ret
movsl
les
dec
enter
cmpb
cmp
xchg
imul
movl
test
sub
adc
pop
lret
pop
fnstsw
out
mov
lret
into
outsl
inc
mov
mov
or
cmc
stos
imul
arpl
aad
adc
mov
dec
mov
lds
fildl
test
xchg
sbb
push
outsl
js
imul
fadds
jb
xchg
outsl
aas
jecxz
aas
push
sub
mov
cmpsl
xchg
dec
push
nop
into
jbe
mov
add
jo
std
fdivrp
sub
aas
ss
loop
lods
jl
faddl
jbe
xchg
call
xchg
jno
xchg
sub
jle
fcoms
xchg
arpl
push
movsb
andb
clc
mov
xchg
dec
and
imul
sub
sbb
add
mov
ficompl
hlt
pop
fldl
hlt
imul
in
mov
divl
xchg
in
sub
sub
jp
cmpb
cs
pop
int
mov
inc
dec
imul
orb
mov
es
add
leave
sbb
int3
dec
xchg
and
add
push
inc
aaa
in
xchg
rorb
sbb
cld
cmpsl
sbb
jo
mov
rol
fsubrs
mov
mov
mov
dec
sbb
push
das
and
cmp
cmpb
and
daa
ss
xlat
sbb
inc
jo
mov
or
test
aaa
outsb
push
rclb
mov
adc
xchg
mov
dec
fwait
xchg
mov
js
inc
sub
out
xor
call
inc
fwait
test
xchg
add
sub
mov
test
shll
mov
jne
ss
lret
adc
inc
shll
lock
call
mov
add
add
mov
inc
sub
pushf
mov
dec
cmp
ljmp
bound
cwtl
jno
ss
aas
mov
data16
mov
jl
jbe
adc
popf
mov
inc
and
inc
xchg
dec
pusha
js
roll
xor
mov
lds
aas
subb
pop
fstpl
mov
or
sbb
insl
and
call
add
loope
enter
dec
cmp
rorb
ret
mov
enter
pop
and
lock
xchg
pop
cmp
xchg
lock
xchg
xchg
cmp
mov
xchg
lret
je
push
jp
jbe
ljmp
ret
add
pop
int3
mov
shlb
inc
push
clc
pop
mov
ja
aaa
push
fmuls
add
xor
jb
xor
sbb
imull
test
inc
xchg
sahf
les
mov
jge
sbb
jle
dec
int3
push
ret
sbb
out
gs
not
imul
ja
orl
cltd
mov
cmp
nop
adc
inc
aad
xchg
in
inc
mov
lea
loopne
ret
aas
cmpsb
jae
dec
loop
xchg
push
jle
in
cmpsl
or
or
or
xor
pusha
pop
fmull
jge
in
out
into
cmp
xchg
inc
mov
mov
loopne
out
or
dec
and
xor
or
dec
sub
in
out
push
jge
gs
gs
rorl
sbb
xor
daa
test
mov
push
ret
sti
ficompl
rcrl
xchg
jecxz
adc
push
pop
lods
into
daa
dec
filds
ret
in
daa
cltd
inc
cmp
lcall
lret
int3
jg
dec
test
mov
out
inc
mov
mov
ss
repz
sbb
aas
dec
lret
scas
jge
outsl
or
jle
mov
push
repz
cmp
cmp
sahf
or
testb
jp
aam
cmp
enter
paddusb
int3
int3
mov
nop
push
push
add
imul
push
repz
loop
ss
inc
mov
mov
test
push
pop
mov
scas
out
loop
sbb
add
push
mov
insl
push
push
mov
pusha
je
call
inc
iret
sahf
pop
cmp
xchg
mov
jae
mov
add
xchg
pop
add
out
adc
inc
mov
loope
jno
leave
sbb
jmp
xchg
dec
adc
out
mov
fnsave
insb
loopne
scas
mov
aas
push
ljmp
hlt
xor
push
pop
fcmovne
bound
lock
aam
loope
jbe
test
adc
cld
push
scas
jns
mov
lret
inc
xchg
outsl
int3
push
sbb
pop
test
dec
fwait
mov
dec
ret
rol
lods
out
nop
dec
jbe
sbb
stos
jmp
add
enter
adc
pop
xchg
cmp
xchg
out
fisubrl
scas
xor
sbb
inc
daa
mov
jl
xor
dec
jg
insl
ret
push
push
or
cltd
lret
inc
mov
and
sbb
mov
stos
inc
mov
xor
xchg
pop
test
lcall
adc
imul
aas
mov
sub
movsl
jge
jmp
aaa
push
xchg
lods
dec
fnstcw
push
dec
cmpsb
ja
pop
pop
imul
test
je
pop
jne
jbe
sarl
or
aas
or
dec
pop
daa
push
fwait
insl
add
jno
mov
pushf
sbb
fistpll
icebp
or
mov
out
jle
into
sub
mov
and
bound
stos
add
fildl
fucomi
push
rcrl
add
or
dec
mov
fsts
lods
mov
out
or
ja
adc
inc
inc
test
adc
mov
pop
mov
mov
push
fsubrs
inc
aad
mov
insb
jmp
cmp
insl
mov
or
mov
lcall
sub
cld
push
jne
sub
pop
push
lahf
dec
dec
movsl
mov
inc
mov
xchg
pusha
inc
inc
and
sbb
fs
in
xor
lcall
rcll
into
sbb
ffree
inc
xor
jmp
iret
lods
int3
inc
cmp
into
lcall
and
mov
mov
sbb
pop
hlt
pop
iret
and
pusha
out
and
insb
lahf
bound
std
int3
inc
mov
sbb
dec
ret
das
jp
stos
loopne
push
out
xchg
lcall
adcl
jp
ds
popa
sbb
test
pop
popf
cmp
push
jecxz
es
shll
test
int3
cmp
lods
ss
jb
push
mov
lock
sub
mov
dec
jg
cli
nop
sarb
sbb
repnz
jl
xor
dec
ret
imul
push
andl
insb
mov
mov
iret
cmpsl
lds
lock
adc
scas
jmp
or
rclb
insl
sub
push
jne
jae
pop
mov
movsb
jge
stc
push
subl
pop
inc
movsl
or
and
ja
notb
push
hlt
out
push
mov
xor
ffreep
scas
mov
xchg
push
mov
jmp
add
mov
jb
daa
fistps
xchg
pop
ljmp
lock
mov
sti
out
and
fiadds
repnz
sbb
test
add
sub
xchg
mov
or
dec
fcmove
or
mov
icebp
pop
push
enter
push
pop
in
cmpb
mov
inc
cli
jl
adc
ljmp
mov
repz
movsb
pop
mov
xchg
xorl
aas
add
pushf
or
aad
xor
inc
fdiv
clc
dec
loopnew
lods
data16
sub
jns
dec
sub
mov
inc
fsubl
and
mov
testb
ds
xchg
jb
xchg
sub
or
mov
scas
and
mov
aad
cmc
sti
inc
xchg
adc
mov
jl
fnstcw
fdivl
out
mov
sahf
imul
test
iret
cs
pushf
mov
adc
sub
iret
push
iret
jo
subb
or
sbb
lea
pop
movsl
mov
out
push
iret
sub
nop
xchg
nop
push
push
dec
push
dec
inc
xor
sub
call
sbb
rcrl
inc
jo
adc
sub
pop
cmp
sahf
test
dec
mov
lods
pop
jb
outsl
jb
shlb
inc
adc
mov
bound
push
daa
mov
inc
pop
mov
pop
rcrl
mov
xchg
imul
les
and
gs
mov
mov
jno
stos
or
xor
push
xchg
sbb
dec
sbb
mov
addl
into
pop
mov
xchg
inc
lret
cmp
cmpsl
repnz
push
xchg
pop
cmpsl
lcall
pop
and
pop
das
mov
sarl
jb
sbb
sbbl
popa
repnz
push
or
mull
mov
sarl
sub
adc
std
and
cmp
or
cli
xchg
and
fisttps
insb
dec
das
ss
cmp
aam
jne
add
in
cmp
fsubl
xchg
add
push
leave
test
pop
sbb
lods
imul
dec
jp
mov
mov
add
or
jp
pop
sub
adc
mov
clc
in
push
adc
inc
pop
add
sbb
out
ror
int3
inc
dec
pop
lret
shll
pushf
outsb
xchg
aam
push
jbe
popa
xor
add
lods
jnp
xor
aad
adc
jecxz
add
inc
fwait
mov
repz
cmp
sub
and
pop
and
loop
ljmp
cld
ret
mov
shrl
fsubp
cmp
lcall
mov
dec
mov
addl
sub
movsb
out
ret
movsl
pop
jnp
int3
xchg
sub
mov
imul
insb
sbb
or
enter
xchg
jae
mov
jns
cld
pop
inc
sub
dec
test
mov
je
lcall
mov
inc
cld
jge
out
lea
add
into
bnd
or
rcrb
dec
int
cmp
sbb
jns
pop
mov
sub
call
xlat
cmp
inc
sub
mov
jp
jl
movsl
xchg
shlb
jmp
jp
out
fisttps
repz
cwtl
jne
daa
stc
subl
add
sub
test
xor
sbb
mov
rcl
popa
pop
cmp
push
popf
das
test
add
rol
inc
xchg
roll
push
outsb
mov
xchg
sbbb
pop
ret
xor
mov
xchg
and
add
and
negl
in
fisubs
pop
xchg
mov
xchg
and
in
sbb
mov
lods
loop
cmp
std
testb
sbb
dec
enter
int
adc
in
xor
mov
scas
xchg
daa
mov
out
adc
dec
notb
ljmp
lret
sub
cwtl
xor
fildll
xlat
andl
mov
mul
dec
clc
pop
fistpll
dec
lods
cmp
and
xor
inc
adc
gs
enter
pop
cmc
int3
cld
mov
ds
imul
or
mov
push
cmp
test
test
jo
pop
jne
sbb
push
and
sub
shlb
popa
cmc
inc
mov
mov
stc
adc
xchg
mov
and
cmp
lea
push
cld
scas
cs
gs
lods
in
jo
push
adc
outsl
leave
lock
repz
test
scas
xor
sub
andl
fdivr
push
pusha
inc
or
and
sub
aaa
dec
inc
roll
sarl
jo
pop
dec
rorl
cld
ljmp
pop
fimull
pusha
movsl
sbb
add
lcall
cmp
lds
repnz
mov
sbb
sbbb
and
add
mov
push
cmp
mov
xor
mov
cmpsb
lods
push
test
mov
rorb
ret
lods
scas
cwtl
or
dec
xlat
fdivs
pushf
pop
jae
movsb
push
xchg
icebp
leave
int
xor
and
aas
or
dec
outsb
and
in
or
jbe
loope
and
les
fwait
mov
bound
sub
xchg
call
ljmp
sbb
repz
dec
out
outsb
jne
mov
mov
into
pusha
xor
cmp
je
xor
lods
test
ljmp
mov
shrb
cmpsl
push
repnz
sbb
mov
test
psrlq
decl
push
mov
popa
dec
mov
sbbb
cwtl
insl
sub
mov
std
cmp
and
or
in
xor
sub
rol
inc
addb
push
inc
lods
sbb
inc
xlat
inc
add
out
call
in
insl
mov
dec
outsl
divl
jb
jg
mov
outsl
das
xor
fwait
lret
stc
cmp
xchg
sub
dec
sub
adc
xchg
enter
adc
pop
add
out
jle
xor
adc
xchg
push
and
sbb
pop
pop
pop
mov
xor
adc
mov
xchg
add
fwait
outsb
mov
into
jp
es
rorl
push
daa
jp
xor
int
loop
rcll
jnp
movsb
mov
mov
pop
push
cmp
lock
mov
fsubrs
xchg
stc
icebp
xchg
arpl
xchg
aam
xor
out
push
cmp
int3
xchg
adc
rcrb
and
lods
push
xor
xchg
add
push
xchg
loope
je
jmp
inc
pop
adc
daa
mov
les
test
pop
sub
les
pop
repnz
jae
add
sub
out
push
lods
arpl
ds
add
push
mov
pop
xchg
cmpsl
lds
les
jno
scas
or
ret
test
subl
in
jo
mov
sub
out
xchg
xchg
ret
jl
fs
pop
sbb
std
cmpsl
dec
and
ds
jp
push
ss
outsl
and
test
sbb
pop
cli
aas
adc
sub
adc
insl
je
aas
push
fstl
xchg
jl
fidivrs
cmp
in
inc
leave
aas
push
icebp
les
out
add
xor
lds
lea
push
insb
pop
andb
sbb
jle
rorl
ret
adc
or
decb
mov
cmp
sub
cltd
or
fimuls
shlb
push
pop
stc
xchg
xchg
mov
inc
push
je
std
sub
out
adc
sbb
and
shll
xchg
push
lahf
icebp
fistpll
in
xor
cmp
adc
add
mov
dec
xor
iret
mov
addr16
lahf
daa
pusha
pop
sub
and
in
repnz
pop
inc
fsubs
fwait
mov
aam
cs
push
pushf
fsubs
test
je,pn
test
gs
out
push
xchg
push
jge
or
xor
adc
sbb
out
jge
pop
test
into
out
iret
in
mov
cmp
fldl
shl
xchg
pop
call
cmpsb
push
mov
mov
xchg
xchg
cmp
int
js
sub
das
dec
push
aaa
scas
insb
movsl
lcall
inc
mov
insl
ret
frstor
or
js
sti
push
mov
cwtl
push
push
leave
call
xchg
or
sbb
dec
sbb
mov
icebp
and
outsb
cs
int
pushf
int3
insl
mov
nop
jns
enter
push
mov
imul
push
xor
pop
xor
repz
lcall
xor
mov
or
xchg
sbb
adcb
mov
lods
icebp
mov
ss
mov
mov
inc
shrb
incb
popf
mov
mov
push
xlat
and
aas
sbb
lret
fcoms
xor
jns
jp
imul
fdivrp
push
mull
lods
sbb
aaa
std
mov
insb
fcoms
or
fadds
addr16
adc
jns
cmp
and
mov
daa
rorb
sub
dec
scas
enter
pop
repnz
pop
jp,pt
push
cltd
repz
leave
bound
push
out
idivl
lock
pop
das
fwait
xchg
mov
popa
dec
cmp
mov
xchg
imul
popf
ret
fsubrl
mov
and
stos
ja
mov
or
xchg
mov
cmpsb
out
movsl
lods
fdivl
xlat
sbb
flds
add
dec
scas
gs
xor
dec
pop
call
fisubrs
imul
inc
lds
mov
outsl
or
int3
add
mov
push
out
and
mov
jne
cmp
or
pop
push
jecxz
jns
aaa
push
jecxz
or
aam
cmp
dec
cmp
xor
inc
mov
sbb
lret
pop
hlt
idivb
sub
lods
lock
mov
mov
inc
int
sub
sbb
sub
movsl
loopne
mov
pop
mull
shll
clc
fdivrl
cmp
aaa
iret
mov
insl
mov
sub
inc
pop
int3
mov
icebp
notb
es
lock
xchg
clc
shl
mov
jg
jo
mov
sub
shl
scas
test
sub
jb
xor
sbb
imul
jge
xor
push
fmull
jecxz
sbb
xchg
test
and
jge
dec
divb
xchg
js
pushf
mov
shll
mov
cmc
fistpll
test
lcall
loopne
rcr
stos
mov
sub
and
sbb
lods
xchg
aam
movsl
sbb
into
jno
bound
aam
jmp
out
jne
aaa
movsb
cmc
stos
hlt
je
aaa
out
or
mov
cmp
dec
or
xchg
aad
movsb
mov
inc
and
dec
es
inc
sub
iret
push
jge
mov
xor
adc
ret
and
jae
cs
adc
add
loope
loop
stc
pushw
jne
aas
jmp
gs
gs
jl
xor
iret
lcall
pop
stc
mov
adc
and
fmul
fstl
xor
shll
adc
loope
dec
enter
lock
mov
add
xchg
sub
jmp
cmp
jle
push
push
xor
or
insb
es
aas
mov
add
adc
cmp
adc
lods
mov
and
pushf
popl
mov
push
fsubrl
or
pminsw
sub
push
jge
xor
adc
test
test
xor
cmp
cmp
es
pop
sub
jge
out
out
or
hlt
dec
sbb
adc
xor
gs
push
shlb
cmp
adc
add
pop
shlb
or
push
loop
adc
fildll
out
push
or
and
adc
call
sub
mov
notl
adc
mov
add
pop
sbb
sub
out
pop
mov
pusha
jo
sbb
push
frstor
mov
cld
xor
inc
cmpsb
add
push
mov
inc
leave
shlb
mov
and
pop
aam
xchg
push
add
cmp
gs
scas
push
jl
pop
cmp
daa
and
loop
pop
push
push
jg
push
cld
adc
mov
and
mov
push
push
gs
flds
and
outsb
pop
shll
xorl
mov
scas
call
out
pop
or
dec
xor
xchg
lock
cli
pop
xlat
call
dec
cli
fwait
pop
jmp
andb
insb
jecxz
popa
jno
inc
mov
push
scas
shll
xor
loope
out
faddl
repnz
add
sbbb
mov
aad
xchg
mov
jge
in
pop
push
dec
lcall
mov
scas
inc
inc
rcr
leave
mov
std
btc
lret
pop
sti
pop
sbb
out
out
in
mov
cmp
push
insl
test
or
fs
arpl
mov
or
xchg
out
or
fiaddl
xchg
jnp
pop
jns
xor
lret
aaa
loopne
mov
dec
sub
cmpsl
or
dec
or
bound
lcall
and
test
mov
inc
out
into
pop
adc
clc
cwtl
test
stos
loop
and
int
xchg
sbb
jmp
pop
add
test
mov
or
lods
fisttpll
jmp
addr16
inc
add
adc
mov
jecxz
and
push
jbe
push
adc
jnp
xchg
pop
or
xor
outsb
pop
mov
in
test
pushf
adc
sub
dec
dec
mov
push
xchg
lahf
push
cmp
pop
adc
divb
sbb
push
push
decl
cmc
push
push
push
xlat
rcl
xchg
int3
daa
dec
clc
loope
outsl
or
in
adc
mov
jl
jp
xor
mov
and
rorl
sbb
inc
fisubs
jg
pop
sarb
push
int3
aaa
sub
mov
loope
cld
pop
adc
cs
adc
inc
pop
jbe
xor
adc
pop
lret
cs
dec
and
jmp
jnp
dec
je
insb
cmp
rolb
mov
icebp
push
xor
or
rolb
jl
push
pusha
push
shl
push
pop
mov
cld
and
mov
jbe
mov
pop
sub
lahf
jb
pushf
addb
mov
out
iretw
xor
jo
xchg
mov
arpl
mov
inc
push
pushf
dec
jb
mov
fnstenv
cmp
cmpsb
cmp
jb
lds
sbbb
ret
out
movsb
mov
into
mov
mov
add
xchg
stos
scas
sub
mov
iret
std
fiadds
jp
sub
ret
imul
in
ret
jnp
mov
pop
cld
push
insl
or
inc
sub
mov
xchg
mov
mov
lahf
or
or
cmp
cmovp
out
inc
ds
out
and
lea
pop
movsb
addr16
inc
lods
push
jnp
out
mov
adc
bound
xchg
lcall
lahf
or
into
mov
inc
mov
pop
mov
movsl
pop
cmp
xor
mov
cmpsb
pop
gs
jmp
repnz
sub
add
test
lea
sbb
mov
xor
lcall
test
mov
push
cli
in
cmp
inc
sub
movsl
outsb
cmpsb
adc
pop
ljmp
inc
repz
xor
lods
pop
loope
add
mov
loop
jl
outsl
arpl
imul
test
bound
add
inc
loopne
ret
test
insl
lods
cltd
loop
fs
mov
pop
ljmp
jecxz
jno
pop
mov
aaa
cmp
addr16
aas
push
dec
gs
pop
sub
js
cld
inc
jl
lret
mov
push
jnp
mov
imul
out
fisttpl
stos
jbe
test
aaa
push
cmc
popa
sbb
ljmp
fdivrl
bound
lds
mov
addl
push
fsubrs
jmp
push
mov
jge
jbe
mov
test
in
sub
cli
mov
and
adc
lea
jns
pop
fildl
movsl
dec
cmp
push
xchg
cli
out
aad
jp
jecxz
or
xchg
cmp
fstl
pop
lods
mov
aad
dec
jecxz
xor
jno
jmp
cmp
pop
lret
or
fdivrp
dec
xchg
sbb
fwait
adc
mov
add
or
jmp
daa
xchg
lret
cmpsl
jae
push
mov
js
or
in
push
out
iret
and
or
mov
out
push
fxch
push
sarb
mov
lcall
sbbb
arpl
subl
and
pop
ret
cmp
push
and
out
js
fcompl
sub
popa
xchg
lds
and
sub
or
jmp
mov
fdiv
pop
call
mov
push
mov
or
push
push
mov
mov
idivb
jae
dec
imull
inc
cs
loopne
into
push
sbb
mov
stos
js
mov
cmp
pusha
mov
addl
fstpl
pop
in
jp
push
sub
dec
aas
incb
int
xchg
mov
xor
add
mov
adc
mov
or
cmc
sub
rorb
scas
jno
stos
inc
sub
mov
call
adc
adc
clc
fdivl
add
cmp
stc
pop
out
lret
nop
mov
xor
mov
xor
xchg
xorl
push
repnz
imul
and
int
sub
sahf
ror
mov
dec
rcrl
in
jns
outsl
lcall
or
aas
in
ljmp
mov
ljmp
xchg
mov
or
sahf
jmp
inc
fdivrl
sbb
add
pop
mov
rolb
inc
or
sbb
sbb
int
jo
pushf
and
dec
add
subb
mov
adc
xlat
dec
in
adc
adcb
stos
inc
jno
in
into
mov
mov
pop
xor
xor
pushf
in
adc
jecxz
std
adc
push
add
iret
push
shll
bnd
ds
sbb
inc
cmp
and
push
rcll
adc
test
popf
pop
add
sub
mov
add
rcll
imul
mov
cmp
in
sbbb
je
test
add
popa
or
test
xchg
mov
dec
xor
fucom
inc
jnp
jmp
aam
and
mov
cmc
push
and
push
ss
or
sbbl
jg
mov
push
sti
push
push
sub
jg
aas
and
into
test
cltd
xor
mov
sbb
push
or
xorb
adc
sub
mov
mov
jno
or
lret
and
xchg
mov
lret
cmp
ffreep
lea
test
sub
clc
inc
sub
out
shll
ffree
daa
sbb
ror
lret
cs
mov
inc
inc
mov
sahf
fdivp
arpl
jb
pop
jl
add
pop
arpl
cli
cmp
shl
lret
or
and
push
xor
shrb
fs
mov
pop
inc
xor
and
in
stos
sbb
adc
mov
push
ljmp
icebp
btr
sbb
scas
cmpsb
xor
popf
push
mov
add
sub
xchg
push
xor
jbe
cmp
das
cmp
push
push
add
inc
clc
test
xchg
lds
cld
insb
call
mov
push
sbb
inc
es
inc
fcompl
jecxz
push
movsb
pop
mov
loop
mov
rorl
or
das
rcr
inc
sti
repz
in
pop
les
enter
insb
stc
cltd
cmp
mov
mov
mov
sarl
in
sbb
enter
lret
add
cmc
into
sbb
cld
inc
cmc
cmp
and
lcall
dec
jp
sub
push
jg
mov
enter
mov
adc
pop
mov
jb
jp
push
shlb
fistps
sti
jnp
divl
sub
jl
fcoms
ja
fstl
das
push
and
push
dec
adc
xchg
adc
lcall
jmp
insl
cltd
out
pop
inc
cmpb
stc
cmp
mov
es
rcrb
hlt
dec
sbb
mov
repz
sub
cmp
cmp
adc
stc
icebp
jo
sahf
sbb
xor
sub
mov
ficomps
push
leave
bound
das
dec
dec
jb
jne
es
into
push
pop
mov
jg
push
fcoml
mov
cmp
or
or
scas
scas
xchg
popa
sub
fwait
mov
es
cmpsb
out
sub
pop
sub
js
rcrb
xchg
cmc
imul
movsl
xor
xchg
push
pop
iret
pop
and
mov
rcll
jne
movsb
sub
mov
loopne
or
or
sub
stos
movsb
adc
ja
inc
loop
inc
cmp
mov
je
loope
push
ret
scas
fcmovnbe
int
orl
add
pop
and
inc
out
add
jo
ret
pushf
and
fcoml
pop
ds
rol
maskmovq
negl
mov
xchg
jns
sarl
mov
push
sub
in
jl
push
cmpsb
or
in
in
mov
inc
gs
cli
test
pop
je
lods
mov
stc
imul
stos
push
outsl
sub
push
fcomps
stos
cwtl
bound
push
xor
movb
mov
adcl
idivl
push
and
popf
sbb
cmp
insl
inc
rorl
insb
pop
test
cmp
cmpsb
insl
sbb
mov
pop
hlt
lea
inc
dec
shlb
cld
shrb
add
cmp
mov
jge
int3
out
sarl
mov
jp
mov
fidivrl
push
pop
lds
sbb
mov
adc
jae
xchg
and
shlb
gs
mov
cli
sub
inc
pop
sbb
mov
xor
jmp
mov
mov
mov
insb
sub
mov
jbe
aas
jp
or
fwait
xor
mov
adc
push
les
add
jo
xchg
jne
data16
stc
cmp
sbb
idivl
inc
nop
mov
xchg
xor
fnstcw
mov
mov
sub
nop
cmpsl
xor
add
adc
sbb
stc
cmpsl
scas
sbb
iret
xor
mov
ret
xor
mov
jmp
das
outsb
pop
loopne
rclb
xor
rcl
push
sub
cld
jl
cmp
mov
sbb
push
cmpsb
pop
hlt
lahf
ret
jle
fildl
out
push
fsubs
mov
xor
orb
fidivs
pop
xchg
rorb
or
sahf
call
ret
stos
idiv
lods
outsl
lret
and
jg
stc
xlat
push
cld
sbb
inc
aad
int
in
jge
pmuludq
cmp
icebp
sub
pop
push
ds
mov
in
cmp
insb
out
xor
xchg
inc
mov
ss
loope
ss
lea
test
mov
or
ljmp
lods
cmc
inc
pop
mov
scas
xor
pop
icebp
getsec
add
stos
adc
in
sub
mov
inc
enter
and
xchg
sub
dec
cmc
lret
cmc
mov
in
xchg
adc
fwait
sub
fdivp
repz
xchg
stc
push
push
dec
icebp
push
dec
or
sar
jle
mov
mov
dec
sub
out
push
xor
pushf
loope
cmpsl
jno
movsl
sub
push
xchg
aaa
fcompl
in
lahf
fs
cld
cmpb
jge
iret
xor
and
fcomps
outsl
mov
adc
pushf
scas
cmpsl
scas
push
xlat
imulb
and
pop
ret
add
icebp
shlb
nop
xchg
cmc
xchg
mov
lods
imul
jno
jge
in
jg
xchg
adc
int3
aaa
std
lret
in
mov
sbb
jae
inc
xchg
xchg
mov
test
lahf
notl
and
pop
imul
int
mov
push
ds
mov
mov
mov
mov
add
out
jnp
hlt
cmp
in
mov
push
rcrb
nop
test
lahf
std
jle
xchg
mov
and
add
sub
or
or
popf
stos
xor
out
mov
movsl
dec
or
mov
testl
xor
std
xchg
add
es
cmp
cmp
icebp
sub
xchg
mov
mov
mov
inc
sbb
nop
jne
and
loop
test
pop
ljmp
mov
ficomps
je
arpl
test
test
fisttpl
int
dec
jb
es
insb
xor
lret
movsb
push
pop
pop
sarb
rolb
mov
dec
mov
mov
out
hlt
test
inc
dec
mov
mov
out
jp
push
iret
out
test
sbb
popf
daa
call
sbb
adc
notl
scas
mov
xchg
int3
sub
fdivl
fldt
fwait
mov
mov
mov
lds
cltd
pop
ret
mov
dec
repz
divb
sub
aad
fisubs
stos
dec
icebp
pop
xor
out
and
mull
inc
mov
outsl
dec
in
lods
rcrl
addl
mov
jle
int3
cmc
adc
xchg
add
fsubrl
cmp
cltd
push
loop
dec
iret
lea
xor
and
ja
cmp
jecxz
or
loopne
pusha
imul
push
call
cmp
lret
sahf
fldl
jmp
xchg
adc
sub
sbb
inc
jle
dec
mov
mov
jo
mov
cmp
or
adc
call
xchg
cli
cwtl
dec
lock
sub
lcall
push
inc
xor
dec
stc
nop
adc
xchg
ljmp
adc
push
mov
jp
mov
xchg
dec
xchg
loopne
leave
sbb
incl
scas
dec
mov
xor
and
mov
scas
leave
scas
pop
mov
push
das
sbb
sub
dec
shrb
in
es
movsl
pop
insl
lods
les
sbb
xor
into
stc
int
lahf
xchg
cmp
pop
lahf
rol
mov
or
jecxz
cmp
bound
xor
push
jle
sahf
jno
sub
push
test
pop
shll
cmp
addb
or
test
fisttpll
mov
jl
aas
lds
inc
mov
aaa
adc
movsl
cmpsb
std
mov
out
xor
clc
mov
enter
je
mov
sbb
mov
mov
xor
pop
sarb
push
xchg
das
add
xlat
out
push
dec
xchg
xorl
cmp
mov
bound
out
std
sbbb
adc
push
das
jb
popa
mov
rcrb
push
test
jmp
adc
adc
test
pop
bound
int
lods
and
not
mov
aas
movl
stos
cmp
out
ss
or
ss
clc
subb
inc
jbe
pop
dec
jo
pop
add
popf
loopne
enter
inc
outsb
push
jp
adc
stc
daa
xchg
cmp
jge
jno
shlb
ds
arpl
cmpsb
movsb
sub
add
ja
xchg
outsb
mov
or
mov
je
mov
cmp
repz
sub
and
adc
cmp
jmp
push
jb
jp
jg
pop
imul
scas
sbb
push
hlt
out
out
mov
sub
mov
dec
jnp
nopl
add
add
loopne
inc
cmpsl
or
call
test
les
sbb
gs
pop
inc
push
xabort
lret
aas
and
rol
pop
push
mov
mov
idivl
cmp
mov
int3
sub
leave
sub
adc
jl
pop
frstor
xorb
push
adc
int3
mov
push
popf
cmp
sub
hlt
shl
inc
jmp
sub
jecxz
jmp
inc
aaa
and
xor
loope
out
jne
jae
fsts
ret
pop
cmp
and
jo
aad
jnp
inc
jmp
divl
mov
xor
adc
jge
add
add
sub
lcall
dec
test
xor
lock
out
imul
add
rclb
stos
in
jp
inc
pop
jl
imul
sbb
repz
lcall
push
cmp
icebp
stc
sub
inc
push
mov
inc
mov
stc
cld
mov
xor
cwtl
cwtl
xor
adc
test
adc
push
aad
inc
hlt
or
dec
jle
enter
lret
adc
xor
inc
mov
ss
push
aam
scas
mov
daa
push
sbb
mov
or
fisubrs
and
inc
pop
add
and
test
fwait
sbb
add
mov
mov
xchg
out
mov
and
jmp
arpl
jg
dec
rcrb
xor
sub
mov
into
ds
mov
loopne
les
ficompl
int3
adc
call
add
sbb
scas
cmpsl
xor
xchg
sbb
aam
arpl
xor
and
iret
je
mov
jnp
insl
mov
jmp
pop
stc
imul
push
adc
mov
lea
cld
xor
push
xor
jno
sbb
adc
std
or
jne
fs
mov
and
cmp
ja
jg
fcom
les
aas
pop
in
mov
lret
mov
push
scas
mov
pop
jg
xor
mov
cld
lea
and
lret
in
push
cmp
movsb
fstp
push
test
lret
push
aas
inc
cmp
mov
and
fidivl
mov
rolb
inc
mov
ss
sbb
dec
std
xchg
push
pop
sub
push
ret
jb
dec
inc
mov
xor
and
repz
mov
push
and
mov
test
sbb
jb
push
insb
or
clc
int
pop
and
sub
adc
push
loopne
cmp
jne
lret
push
js
hlt
dec
fsubrl
mov
push
cld
push
ss
stos
mov
xchg
inc
dec
jne
pop
xor
push
data16
repz
fldl
das
xchg
mov
push
xchg
add
hlt
insl
sub
dec
xchg
dec
adc
daa
xchg
or
aam
je
cmpsl
lcall
jmp
rclb
stc
add
or
sbbb
fisubrs
sbb
enter
pop
cs
aaa
shlb
and
pop
int3
add
push
stc
enter
stos
xchg
scas
push
call
mov
das
lods
jge
sbbl
dec
stos
jo
pop
inc
cmpsb
jo
xchg
mov
sub
scas
jbe
jl
jbe
loop
insb
imul
lret
sub
and
xchg
mov
scas
dec
pop
sbb
mov
jp
in
mov
popa
xchg
imul
imul
push
rcrl
mov
or
push
ja
and
mov
push
imul
mov
mov
pusha
xrelease
pop
mov
inc
xchg
sti
and
gs
cwtl
inc
sbbl
adc
xor
fnstsw
mov
into
mov
xchg
stos
xor
repz
idivl
push
test
cmp
push
mov
jg
repnz
outsl
fcomip
mov
xchg
xchg
sub
int
neg
int3
notl
jle
ja
add
int3
cmp
cmp
push
xlat
leave
ret
arpl
dec
cmp
xlat
fstl
adc
fidivrl
movsl
fdivs
test
fisttpl
ljmp
int3
icebp
mov
jge
in
ss
lret
loope
cwtl
or
scas
out
cld
jo
jmp
push
mov
repnz
lds
push
add
dec
lds
jecxz
pop
test
cmp
add
sub
ret
je
out
jb
fstpt
push
jno
cmpsb
inc
mov
rol
stos
sub
clc
push
fwait
in
es
add
mov
pop
out
push
iret
jbe
daa
lods
adc
js
fstpl
pop
pop
repnz
int3
in
pop
cli
fidivs
ds
inc
pop
je
fstpt
xchg
xchg
cmp
jmp
stc
loope
xor
adcb
cmp
pop
push
scas
dec
rol
and
or
mov
je
sub
adc
mov
lret
dec
xchg
rdtsc
xchg
imul
fwait
jecxz
push
lcall
and
rorb
xor
xchg
daa
lcall
in
add
add
fs
jbe
xchg
sbb
pop
or
sub
xchg
dec
jl
xchg
inc
jnp
sbb
push
mov
add
ljmp
dec
pop
fistpl
push
lahf
push
mov
aad
cmp
xchg
jns
sub
or
loop
add
rorb
mov
push
pop
nopl
les
mov
mov
xor
fsubs
lods
push
mov
ja
jmp
cmpsb
xchg
push
lret
ja
jp
xchg
and
mov
insb
sbb
push
add
adc
sub
test
xor
add
sub
push
dec
mov
or
pop
daa
dec
add
out
fs
push
stc
pop
pop
inc
inc
in
cmp
iret
aaa
push
lods
push
stos
adc
push
pop
lahf
cmpsb
popa
mov
gs
xchg
dec
and
cmp
loop
mov
fs
andl
lock
jle
lret
mov
mov
in
jg
jg
nop
insb
push
jae
pushf
add
adc
push
jo
mov
pop
push
sbb
in
fwait
and
in
xchg
sbb
int
add
outsb
mov
push
xchg
in
dec
sti
jne
insl
adcl
mov
insb
cltd
clc
addr16
push
xchg
add
imul
rcrl
out
add
pop
sub
inc
sub
js
dec
aam
stc
jecxz
pop
xchg
sti
add
pop
or
push
mov
dec
or
pop
addb
mov
pushf
cmpsl
test
cmp
iret
mov
xchg
add
xor
aaa
out
jecxz
call
js
movsl
or
push
iret
outsl
sub
and
faddl
pop
xorl
enter
mov
mov
pop
xorl
add
and
push
mov
push
cmp
jns
ljmp
enter
mov
out
or
lcall
loop
push
pushf
aaa
test
fcmove
xor
rcr
pop
jmp
sbb
pop
cmpsl
and
xchg
dec
or
mov
xchg
cmp
movsl
rcrb
and
test
jge
xchg
imulb
sub
adc
xor
xchg
mov
imul
mov
mov
fstp
repz
or
adc
pop
xor
lock
cmpl
push
clc
jbe
mov
pusha
repz
aam
inc
arpl
inc
and
aad
loop
stos
dec
mov
mov
mov
cmp
lods
pop
call
push
mov
dec
sbb
shlb
mov
cmp
mov
test
addr16
push
sahf
mov
pop
mov
push
mov
lahf
insl
cltd
cltd
in
std
mov
mov
imul
add
jns
push
movsb
ret
add
pop
jb
jge
out
mov
iret
push
or
or
dec
loope
subl
in
jne
lods
cmovae
mov
loop
and
fwait
pop
push
and
test
cmovp
lock
dec
imul
mov
jo
inc
pop
xor
hlt
mov
sbb
aaa
fcmovb
pop
roll
jle
push
rcr
xchg
pop
cmpl
xchg
push
sahf
inc
jecxz
or
mov
aam
pop
mov
mov
push
cmc
test
test
popf
cmc
enter
aas
fbld
mov
or
pop
jns
notl
xchg
cltd
cmp
cmp
repz
int3
dec
lcall
sub
jo
rol
xchg
js
lret
xchg
sub
and
mov
out
loope
jmp
jno
cmp
xchg
or
inc
and
add
lcall
int3
inc
rol
lods
xchg
and
sub
mov
loopw
mov
daa
mov
adc
push
mov
mov
or
scas
cmp
mov
cs
or
cmp
pop
sbb
ret
lods
push
mov
or
inc
add
jl
test
std
jo
or
pop
sbb
lcall
jb
lods
subl
or
push
pop
inc
je
mov
adc
fstl
ret
mov
or
outsb
shl
mov
in
ret
mov
cmpsl
push
cld
test
enter
sbb
ret
mov
lds
icebp
shll
or
loopne
push
xchg
sbb
cmpsb
out
xchg
sub
ret
loopne
out
mov
push
ds
push
faddl
movsl
icebp
jae
gs
mov
or
xor
popa
insl
xor
imulb
inc
push
and
sub
inc
hlt
jns
sti
popf
nop
sbb
push
stos
cmc
jg
jge
daa
fcomip
adc
mov
add
shrl
div
mov
loope
inc
cmpsl
xor
test
inc
int3
cmp
mov
mov
xor
mov
loop
adcl
stos
inc
in
push
mov
outsb
movsl
sbb
pop
cmpsl
push
xchg
inc
sbb
scas
inc
out
push
jmp
pop
push
fwait
inc
and
outsb
fwait
mov
sbb
cs
or
cwtl
aas
call
add
inc
iret
repnz
popa
fildl
sub
dec
add
dec
push
push
or
fstps
push
mov
sbb
xor
in
xor
xchg
push
and
inc
mov
pop
lods
fs
xor
vsqrtss
sbb
leave
dec
push
addr16
addr16
lahf
in
in
pop
mov
inc
cld
das
add
mov
fidivs
push
and
sbb
or
xor
add
shr
mov
aas
into
adc
addr16
jle
fwait
mov
addr16
mov
int
pop
fs
out
xchg
gs
jge
imul
fadds
addr16
push
in
mov
idivl
cmp
cmpb
xchg
into
push
and
xor
lret
mov
add
dec
int3
out
push
adc
repnz
mov
sbb
add
cmp
fdivs
clc
std
add
shll
roll
fildll
dec
je
cld
ja
flds
leave
xor
inc
mov
hlt
gs
mov
fmulp
cmc
push
pop
cmp
jns
adc
or
pop
cmpsb
leave
adc
fsubs
fs
and
jbe
pop
push
jno
dec
enter
fstpl
test
and
sti
dec
ficomps
enter
xor
dec
push
sbb
cwtl
mov
std
sarl
je
mov
nop
adc
mov
rcll
jne
je
iret
test
std
ret
mov
fnsave
pop
mov
mov
push
pop
movsb
call
inc
sbb
or
dec
out
setae
dec
fldl
xor
add
mov
and
popa
insb
mov
adc
or
or
les
add
xor
jle
jno
dec
cltd
jecxz
xchg
push
scas
fisubrs
into
dec
jle
dec
and
fcmove
call
cltd
movsb
ljmp
aam
and
mov
jge
int3
or
inc
pop
jnp
sbb
jns
js
pusha
inc
cmp
push
xor
out
testb
jg
pop
dec
inc
aam
push
add
push
sahf
cmp
cs
inc
stos
pusha
push
add
aas
aam
outsb
rorl
pusha
insl
or
xor
pop
cmp
movsl
adc
add
mov
scas
fwait
mov
push
nop
inc
mov
inc
movsb
sub
into
or
movsb
int
stc
cs
scas
out
lea
and
movsb
pusha
imul
mov
lcall
imul
rcrl
ret
aas
adc
sub
jno
adc
lret
mov
sahf
add
lock
adc
faddl
and
loope
ds
mov
mov
adc
aam
mov
push
rorb
xchg
fmuls
cmpsl
dec
inc
inc
pop
jne
enter
hlt
int3
push
mov
mov
push
fbstp
pop
mov
loop
enter
lock
push
dec
sub
pushf
scas
repnz
pop
push
insl
pop
aam
imul
fwait
inc
pushf
or
lcall
mov
or
dec
fsubr
jb
xlat
mov
lds
lahf
jo
xor
shll
lock
and
js
mov
dec
imul
push
push
jp,pt
test
sahf
xchg
mov
dec
orb
mov
mov
lret
dec
cmp
aas
inc
mov
test
push
inc
das
out
sub
push
push
cmp
repnz
sub
xchg
data16
lods
insb
or
daa
iret
adc
sub
mov
pusha
mov
jnp
fsubrl
mov
inc
sub
imul
stc
icebp
and
push
fldt
dec
out
rcrl
mov
aam
cmp
or
add
adc
adc
pop
sahf
iret
jecxz
out
xchg
push
sbb
adc
sub
mov
or
mov
fcomps
and
xor
adc
push
xchg
std
jg
clc
shrl
sbb
mov
adc
add
pop
mov
loopne
inc
fdiv
mov
xlat
fldl
push
jp
pop
fistpll
imul
mov
jle
call
jnp
mov
inc
cmpsb
mov
sbb
inc
pop
pop
hlt
xchg
rorl
imul
mov
gs
jae
cmp
add
in
push
xor
mov
cmpsl
int
leave
test
add
push
mov
inc
popf
fcoml
xor
addr16
sbb
pop
pop
mov
aaa
mov
std
xor
mov
cmp
stos
pop
or
sub
dec
je
movsb
push
orb
enter
jle
inc
shl
adc
dec
jne
mov
mov
xchg
ret
fldt
or
filds
scas
mov
push
mov
push
add
push
and
xor
xchg
imul
mov
daa
xchg
loop
sub
dec
out
adc
jg
fistps
jp
das
mov
mov
adcl
dec
jecxz
lds
push
loop
adc
add
and
ss
out
inc
jnp
cli
or
xchg
out
jno
cmp
and
cltd
std
jns
push
lods
loopne
mov
sub
dec
and
addr16
sbb
lret
adc
repz
jle
rcll
out
stos
rcrb
out
fwait
mov
xchg
jbe
loope
sub
fcoms
les
arpl
sbb
add
mov
in
sub
mov
cmp
lret
mov
mov
pop
mov
xlat
push
pop
sahf
pop
pop
and
dec
sbb
jns
inc
jecxz
or
scas
xorb
jo
xor
and
lret
mov
adc
xor
je
sarl
stos
jne
fnstsw
push
addb
addl
into
loopne
inc
xor
test
mov
mov
lcall
or
negb
sbb
hlt
cmp
and
enter
cs
dec
sub
pop
push
pop
xchg
dec
insb
test
jp
add
jl
in
pop
inc
out
insb
push
dec
or
cmp
rclb
jge
cmp
xchg
push
cmp
enter
sbb
push
dec
adcl
xchg
mov
subl
sbb
cmpsb
pop
mov
mov
fistpll
and
mov
cmp
aas
in
movb
out
std
push
fists
addw
jns
pop
loop
jmp
ret
jecxz
enter
inc
dec
lret
hlt
insl
test
cmpb
add
dec
dec
movsb
int
leave
sahf
pop
xchg
sbb
cmc
icebp
inc
sbb
xchg
imul
sysenter
and
or
cli
inc
and
fsubrl
adc
cmp
pop
or
mov
sbb
cmpsl
and
and
push
add
scas
jge
xor
iret
cmp
mov
mov
pop
fbstp
pusha
imul
mov
mul
dec
cs
in
jg
sbb
mov
daa
hlt
nop
iret
pushf
jle
ret
leave
int
adc
jle
cmp
add
mov
movsl
addr16
pusha
xor
cmp
jp
andb
push
dec
xchg
aam
jmp
cwtl
stos
imul
outsb
test
ds
jecxz
push
lcall
stos
ret
sbb
pop
dec
cmp
jnp
push
mov
shlb
mov
push
jl
mov
cmp
xchg
cs
lahf
lods
sarl
lret
fildl
roll
nop
movsb
flds
mov
scas
cmp
scas
push
sub
shll
pushf
out
pop
mov
and
sahf
xor
mov
pop
xchg
adc
fildl
jle
icebp
movlps
sbb
dec
push
push
in
fucompp
lods
jmp
test
inc
pop
pop
ror
sbb
inc
mov
decl
stos
sub
outsl
scas
aad
shll
mov
outsl
mov
xchg
mov
jg
outsl
jl
jge
mov
into
or
pop
xchg
lods
inc
andb
add
cmp
or
arpl
push
addr16
or
imul
dec
pop
mov
push
jge
adcl
cs
lret
sub
negl
adc
lret
lods
xor
out
aad
outsb
aam
adc
repz
xchg
imul
mov
lods
dec
xchg
aaa
jae
je
in
or
les
call
pop
aas
insl
adc
loop
js
push
lds
xor
stos
clc
adc
pop
jno
arpl
repz
fimuls
pop
sbb
test
ret
nop
outsl
iret
fisttpl
out
out
inc
push
jne
jp
and
movsl
rcr
faddl
jns
pop
cltd
inc
dec
testl
pop
xor
fadd
test
sbb
xor
inc
daa
in
xor
add
into
jle
push
jp
loopne
lock
sub
push
popf
push
mov
adc
inc
xor
das
lret
pop
subb
fmull
iret
and
int
fisubs
cli
mov
inc
sti
cmp
mov
push
mov
jb
sbb
cmp
out
subb
lock
and
dec
je
xchg
movl
xor
in
imul
xor
shll
mov
repnz
mov
jmp
cmpsb
fsubr
xchg
fidivrs
jl
or
sti
popf
or
js
sbb
xchg
pop
stc
add
cltd
and
inc
nop
mov
sbb
pop
xchg
fstl
test
push
xor
mov
movsl
sbbb
rcrb
movsl
cmp
cmp
cmp
stc
dec
lret
sub
loop
cmp
icebp
fisubs
stos
mov
popa
sub
add
repnz
sbb
dec
fs
and
popa
sub
std
pop
xor
pushf
xchg
cmpsb
inc
cmp
lret
fsubs
inc
add
ret
mov
pop
xchg
divb
mov
push
sub
and
loope
pop
mov
cmp
jae
cmp
adc
dec
cmp
or
or
sbbb
and
in
daa
dec
dec
sub
or
dec
add
mov
lea
clc
push
std
sbb
push
mov
sbb
lock
cs
ds
sub
pop
cli
push
test
int
jae
push
adc
sub
lods
popa
lds
cmpb
inc
int3
sub
cmpl
popf
push
inc
into
dec
sti
mov
orb
cs
mov
jnp
fstps
dec
adc
sub
pop
cmpsb
jmp
aas
les
sbb
pop
and
sbb
and
mov
ljmp
pop
sub
mov
test
xor
repz
mov
scas
mov
test
sbb
rorl
cltd
aas
aas
sub
lret
xchg
fnsave
cmp
sti
lret
add
shll
mov
les
test
out
or
iret
stc
jno
call
or
pushf
adc
fldenv
pop
test
mov
or
xchg
and
pop
sub
sub
pusha
lea
mov
andl
nop
cmc
sub
add
mov
sub
sub
sbb
ss
pop
ffree
cmpsb
or
loopne
into
xchg
or
adc
sbb
push
mov
sbb
mov
jg
mov
loopne
js
aas
mov
and
pop
mov
bsr
cmpsb
fwait
stc
testl
mov
inc
iret
push
lahf
pop
addb
xchg
lods
jg
cmp
jns
adc
mov
jle
icebp
rcl
leave
pop
xchg
jmp
mov
sub
stc
test
lods
fcomp
mov
mov
outsb
div
sbb
xor
mull
stc
add
lock
orl
xchg
dec
pusha
pop
and
cmp
inc
mov
test
and
sahf
fiaddl
cmp
sbb
cmpsb
push
sub
enter
dec
jle
mov
pop
stos
insl
mov
in
mov
sub
mov
data16
lcall
xlat
lea
mov
cmpsb
gs
pop
test
push
scas
fstps
jmp
aaa
aas
pop
inc
add
cmpsl
push
fsubrl
cmp
sbb
cs
adc
in
inc
cmp
je
popf
movsb
inc
mov
out
lcall
jo
mov
test
clc
dec
add
xor
loopne
inc
pop
cmpsl
cmpsb
and
rol
pop
add
test
adcl
dec
jg
adcb
lock
mov
bnd
dec
inc
daa
shlb
movsb
mov
mov
je
adc
push
movsb
cmpsl
fbstp
mov
mov
insb
loope
cmp
inc
push
cmpsl
enter
in
push
xor
sub
inc
inc
aad
jmp
mov
or
sahf
out
out
lods
mov
bound
xchg
inc
mov
add
mov
mov
ret
push
xchg
mulb
call
dec
in
lods
aas
cmp
ds
xchg
mov
out
cmp
lds
cmp
adc
mov
pop
out
adc
push
inc
icebp
shll
fstpt
push
push
popf
mov
xchg
pop
outsb
adc
mov
fildll
test
inc
add
loope
dec
pop
xor
aad
jnp
or
pop
hlt
and
in
push
mov
movsl
test
adc
push
or
or
sbb
enter
push
add
jl
dec
cmp
or
push
loope
fldenv
sti
mov
icebp
repz
push
popa
repz
out
ja
xor
dec
xor
bound
cmpsl
mov
jo
cmpsb
stos
xchg
jnp
mov
stos
jnp
in
lock
daa
stos
inc
fisttpl
mov
scas
std
pop
push
lahf
xchg
test
out
pop
inc
sub
cmp
sub
sahf
xchg
ds
data16
or
sub
scas
jmp
test
inc
call
pop
cltd
mov
mov
icebp
or
inc
shll
das
loope
xchg
mov
rorb
out
pop
push
fstps
lods
pop
add
loop
pop
lcall
out
ret
gs
ljmp
das
mov
xor
pop
leave
inc
lret
or
leave
mov
inc
out
sbb
and
loopne
insb
xchg
aaa
or
adcl
dec
lcall
popf
push
loope
mov
test
inc
cmp
jae
loopne
dec
insl
push
cmp
es
cli
inc
mov
xchg
ret
mov
test
mov
addr16
adc
or
out
insl
sbb
popa
jmp
push
sub
adc
mov
push
subb
pop
xchg
scas
movsl
push
and
aam
cmp
leave
loopne
mov
pop
dec
xor
popa
mov
test
adcb
dec
insl
mov
into
and
dec
mov
and
enter
mov
cmpl
fs
fisubl
cmp
rcrb
rorl
movsl
mov
mov
aad
mov
xchg
dec
sub
adc
mov
push
dec
stc
fisttpl
aaa
rcrl
pop
fwait
xchg
pop
sub
cmp
mov
int
mov
in
xchg
mov
je
push
jle
xorl
jmp
mull
outsb
cmc
shrb
subb
mov
jns
dec
inc
mov
push
shlb
ret
push
icebp
aad
push
jnp
imul
mov
pop
sub
adc
jmp
adc
sub
rcl
xchg
addb
fdiv
mov
pop
in
cmpsb
jbe
aam
and
repz
add
xor
mov
aas
ficoml
cmp
aam
push
mov
ss
lea
and
test
icebp
fmuls
pop
insb
cmp
cmc
icebp
sub
fisubrl
fimuls
fdivrs
fimuls
loope
into
roll
adcl
sub
testb
xorl
xchg
fwait
sti
ljmp
jle
mov
ljmp
cmp
lret
out
out
test
ret
mov
inc
cmpsb
fisubs
jg
or
repz
push
push
aas
pop
ja
ds
adc
les
inc
dec
sub
jmp
sahf
jns,pt
mov
and
mov
adc
fwait
imul
pop
ret
daa
sub
dec
dec
cmp
pop
popa
sub
xchg
pop
pop
cmp
and
inc
push
iret
and
repnz
test
test
add
dec
mov
pop
fildll
nop
mov
sar
inc
pop
rcrb
out
aaa
test
inc
xchg
pop
push
popf
xorl
and
or
sbb
jae
xchg
lock
mov
push
sbb
sub
aas
and
int3
dec
jo
in
aad
adc
dec
movsb
pop
es
mov
test
bound
into
pop
adc
xchg
xchg
or
jo
jb
aas
js
sub
jge
in
iret
jge
pop
pop
xor
xor
imul
outsl
jmp
mov
add
ret
cli
jbe
jnp
mov
movsb
shl
sub
xchg
xor
jmp
add
mov
adc
or
push
add
adc
loopew
add
jl
inc
rcrl
sbb
leave
pop
xor
push
clc
sti
jmp
sarl
pop
addr16
or
lahf
repz
mov
xchg
add
jns
push
jbe
stc
mov
out
mov
cmp
inc
mov
mov
add
daa
mov
arpl
or
jecxz
aas
cmp
lret
loop
push
mov
mov
andb
int
mov
or
mov
arpl
push
cmpb
adc
lods
push
call
and
dec
into
sahf
pop
inc
jl
pusha
mov
pop
cmp
jmp
or
dec
insb
int
mov
push
call
or
aas
ja
mov
adc
bnd
insl
in
in
add
mov
pop
xor
mov
mov
xchg
xor
jge
and
out
fadd
cltd
mov
push
loop
jmp
fdivrs
lcall
inc
mov
xchg
jnp
push
outsl
pop
loopne
dec
push
mov
popa
aas
sub
lock
mov
sbb
out
sbb
movsb
inc
inc
arpl
test
imul
jbe
add
int3
in
or
mov
lcall
jmp
cmc
xchg
mov
and
xor
jnp
sub
sbb
ja
inc
pop
xchg
shll
ret
xchg
sub
jle
ret
jl
sub
pop
and
bound
in
jbe
and
pop
in
xchg
pop
adc
mov
test
mov
fwait
push
test
xchg
jbe
mov
pushf
xor
enter
cmp
jmp
cli
xchg
daa
jecxz
out
popf
xorb
xchg
in
xor
add
or
inc
xorb
mov
xor
sbb
dec
jne
loop
mov
sub
cld
add
out
sub
lock
inc
lds
adc
xchg
std
mov
hlt
sub
or
add
movsb
iret
adc
sbb
jl
nop
push
mov
imul
xchg
pop
xchg
outsl
insl
sbb
mov
shl
xor
mov
mov
xor
xor
rcr
idiv
and
push
push
dec
pop
mov
xchg
sub
pusha
push
icebp
cmp
mov
lret
movsb
or
lcall
and
push
mov
and
js
xchg
lcall
push
imul
sarb
loopne
mov
xchg
sub
call
jns
jnp
jbe
loop
rorb
sbb
lcall
dec
pop
sti
fs
adc
xchg
shrb
ffreep
cmc
adc
outsb
or
clc
outsl
mov
shr
pop
jge
cmpb
jge
das
into
stos
jp
loop
xchg
int3
cwtl
pop
jle
fs
cmp
stos
or
arpl
movsb
mov
xchg
pop
in
insl
mov
repz
mov
jo
ret
stc
stos
cmpsl
inc
call
ss
pusha
cld
les
stos
stos
jp
cmp
mov
push
xchg
xor
hlt
shll
rorb
popa
add
mov
and
test
add
std
in
and
cltd
jle
mov
mov
push
lods
fsubrl
fwait
mov
add
stos
push
aaa
insl
loopne
inc
xchg
fwait
add
adc
xchg
lds
xchg
loopne
inc
sbb
sbb
or
cmp
pop
add
mov
repnz
addr16
push
jb
sub
xchg
out
dec
insl
cwtl
ret
xor
dec
sub
mov
adc
es
sbb
mov
iret
sahf
out
mov
push
cld
xor
sti
inc
enter
mov
push
jne
in
cli
loopne
add
push
cli
mov
push
scas
int3
aaa
mov
rcrl
inc
sahf
xchg
aad
pop
mov
in
push
jp
movsl
lret
dec
jl
cs
aam
mov
loopne
jne
adc
sbb
jo
daa
xchg
popa
jno
jmp
insl
sbb
mov
sub
xor
test
fsubs
cmp
jo
sbb
mov
popa
push
jle
mov
push
cs
adc
and
mov
stc
xor
lret
mov
mov
repz
int
mov
jo
or
out
mov
repz
les
jo
jae
ror
push
sub
inc
jle
mov
lods
mov
pop
mov
xchg
xor
int
mov
mov
inc
mov
incb
cli
fwait
lret
sbb
iret
imul
cld
scas
xor
and
cmp
repnz
or
test
inc
xchg
sbb
out
inc
and
arpl
push
push
pop
xchg
into
rorl
test
int3
mov
dec
or
push
pop
push
sti
mov
push
out
inc
test
add
lds
sub
adc
mov
pop
xor
enter
xlat
call
cs
push
movsl
cmp
push
xchg
jp
add
push
cmp
jp
imul
xor
adc
mov
xchg
fstps
in
popa
shll
ljmp
jmp
rolb
xor
fisubrs
loop
das
std
pop
mov
lahf
or
jb
ja
cmp
fisttps
add
cld
add
dec
xchg
push
adc
shll
inc
or
cmp
push
insb
jecxz
add
xchg
add
sub
pop
push
ljmp
es
inc
push
jge
and
add
add
fwait
out
add
jl
mov
jne
jns
mov
pusha
sub
dec
jmp
mov
cmp
mov
xchg
fimuls
jp
sbb
in
sub
insl
pop
pushf
xor
outsb
outsl
push
push
ja
dec
xor
popf
mov
jb
sub
cmp
or
jo
out
add
push
inc
scas
es
push
mov
fucomip
jae
pop
int3
pop
mov
sub
sbb
adc
es
jp
testb
ret
xchg
pop
clc
inc
insl
cwtl
xor
dec
mov
imul
sbb
outsb
fwait
es
cmp
jb
dec
repz
mov
fmulp
rorl
jl
dec
scas
mov
sub
mov
jnp
sbb
push
stc
into
outsb
icebp
and
repnz
nop
jl
adc
mov
jo
push
addr16
sarb
lret
cmp
adc
cmp
or
sbb
fldenv
repnz
icebp
daa
in
fdivl
lcall
ret
jo
jo
cmp
mov
pop
xor
adc
clc
dec
sbb
push
mov
sbb
sbb
adc
sbb
inc
push
mov
dec
mov
cli
aad
xchg
repnz
aaa
mov
ljmp
jle
lds
cmp
lahf
inc
mov
repnz
rorl
icebp
int3
and
add
add
test
movsb
loopne
test
sarb
std
fmuls
pop
xchg
fstpt
jae
addr16
test
push
xchg
roll
lcall
out
push
jne
inc
push
or
or
das
adc
pop
outsl
aaa
add
inc
adc
inc
dec
pop
push
jl
cmp
push
call
xor
lea
push
outsl
pop
les
mov
out
add
movsl
aas
mov
inc
int
jae
arpl
pop
and
xor
cmp
into
leave
xor
ds
and
add
test
jp
inc
jp
or
stos
mov
jmp
mov
push
or
dec
js
mul
mov
xor
enter
movsl
mov
push
xor
imul
in
aam
out
or
cmc
pushf
inc
lahf
sub
xor
aaa
cmp
clc
push
mov
and
fadd
push
jbe
idivl
sub
cmpsl
mov
data16
lret
dec
pop
iret
mov
jecxz
lock
lret
push
add
ljmp
pop
leave
xchg
aaa
or
add
inc
cmp
lret
cmp
ret
add
dec
insl
mov
enter
xor
add
add
arpl
ds
out
cmp
fnstcw
daa
rol
jg
cli
xor
addr16
insl
idiv
ja
mov
out
push
push
aad
hlt
out
xchg
and
pop
fcomi
pop
jl
dec
jg
lret
and
xlat
push
mov
sub
xchg
ret
pusha
inc
mov
push
mov
inc
push
xchg
xchg
jne
xor
jle
cltd
daa
adc
sub
mov
jbe
adc
jnp
sbb
ss
call
fdivrl
adc
mov
das
push
push
movsb
aam
rcrl
pop
sbb
sub
daa
lea
add
push
aad
stc
rcrl
fistps
cmpsl
movsl
scas
movsb
cmpsb
mov
mov
out
dec
out
mov
sub
mov
and
je
adc
pop
push
lea
ljmp
ss
lods
lea
clc
mov
dec
cmp
pop
outsl
repnz
cmp
shl
stos
cld
mov
xchg
jae
xchg
inc
sbb
pop
mov
mov
adc
out
jmp
xchg
lahf
add
inc
jecxz
imul
shlb
cmp
scas
xchg
or
ds
jp
push
inc
ret
lock
movsl
mov
sbb
outsb
jbe
push
jmp
sub
es
fwait
push
xor
push
mov
loope
dec
std
icebp
fidivl
mov
dec
add
sbb
adc
adc
lds
dec
scas
addr16
ret
xchg
fsub
push
out
pop
repz
imul
push
dec
push
out
mov
int3
xor
pop
lret
jb
test
mov
push
push
cwtl
mulb
xor
into
cwtl
repnz
ficoml
filds
gs
je
push
int
loop
ljmp
jecxz
mov
stc
scas
shll
mov
fadds
in
xchg
pop
rclb
add
cs
jnp
xchg
loope
jp
pop
test
leave
aad
or
shlb
sbb
or
mov
into
std
push
xor
aam
lea
dec
ret
into
jo
jecxz
or
fldt
fsubrp
stos
xor
mov
into
push
popf
rclb
cmp
imul
jmp
pop
xchg
mov
jle
jmp
lahf
loope
mov
cmpsb
es
enter
or
rcl
mov
lahf
test
aas
fdiv
xchg
pop
xchg
jp
or
repnz
mov
xchg
jnp
aaa
jne
addb
pushf
mov
call
lret
push
pop
mov
loope
out
mov
pop
out
mov
xchg
push
stos
adc
sbb
jb
pop
and
push
lret
cmc
sbb
mov
adc
mov
push
mov
dec
dec
sub
inc
mov
dec
jmp
fdivrl
sub
jbe
adc
push
xor
jg
idivb
push
jmp
movsb
mov
jbe
fisubs
cld
pop
sbb
or
mov
mov
mov
xorb
filds
pusha
movd
fildll
dec
xchg
inc
loopne
jb
into
cld
cmpsl
iret
leave
addr16
sbb
cmpsl
in
fs
out
loop
fidivrs
insb
or
xor
jl
fcoml
mov
rolb
fstpt
je
shll
xor
pop
mov
jle
ds
shl
repz
xchg
xor
pop
loop
lods
cmp
xor
xor
fnstenv
adc
movl
lea
stos
ret
sbb
int3
cwtl
int3
fld
adc
sti
lret
jne
data16
jp
sbb
and
add
ror
iret
jl
mov
movsb
pop
jp
push
sti
or
arpl
pop
pop
or
fldt
ljmp
mov
sbb
les
ljmp
lods
icebp
int3
mov
mov
aaa
stc
jae
xchg
stc
inc
out
inc
mov
out
jmp
ror
insb
fdivrl
jecxz
cmp
push
pop
in
sbb
mov
pop
add
into
ret
add
adc
ret
mov
ret
enter
push
dec
inc
jp
loopne
ja
lods
xor
pop
lahf
jbe
or
jecxz
add
xor
adc
movsl
fimull
jne
outsb
push
and
adc
xchg
clc
xor
sub
or
stc
mov
daa
xor
dec
sub
sub
mov
xchg
xorl
inc
sub
stc
lea
dec
aam
call
sub
test
or
cs
dec
mull
inc
bound
shll
jg,pt
xlat
jo
jbe
call
dec
sbb
xchg
mov
jnp
jb
mov
add
inc
shll
mov
xor
rorb
push
adc
push
add
js
into
pop
or
out
mov
mov
aaa
sbb
and
mov
pushf
iret
adc
out
and
and
enter
xor
sub
jns
push
xchg
jne
les
ficomps
sbb
push
add
test
insb
or
sbb
jo
or
in
out
bnd
dec
inc
xchg
push
inc
in
int3
shlb
pushf
ljmp
mov
add
arpl
lret
inc
xchg
xor
cli
popf
roll
gs
or
pop
push
scas
jp
jecxz
pop
xor
jo
jb
je
pusha
sti
sbb
pop
cmp
ljmp
bound
fs
imul
adc
sbb
int
test
in
rcrb
sub
cld
and
lret
jg
or
aam
test
cli
sbb
jne
pushf
jae
pop
add
in
or
pop
imulb
sub
cmp
aaa
mov
insl
test
pop
sub
xchg
push
aad
dec
dec
push
lock
insl
sahf
loopne
out
dec
mov
push
xor
lret
jbe
mov
addb
push
jns
shlb
xchg
mov
lret
add
fs
sub
dec
out
pop
xor
push
sbb
ja
mov
or
roll
loopne
mov
fildll
test
out
stos
push
sbb
aam
sbb
dec
xchg
stos
call
push
mulb
aad
dec
jl
or
hlt
mov
mov
gs
push
jmp
scas
aaa
addb
mov
pop
and
adcb
das
je
push
sub
xchg
mov
ds
dec
cmc
test
cmpsl
and
pop
add
cmpsl
jae
cld
popa
ss
cmpb
mov
sub
int3
adc
shr
mov
cwtl
bound
sbb
push
or
jle
test
add
dec
dec
xchg
cmc
xchg
jo
je
popa
ret
iret
lcall
icebp
lret
mov
push
sbb
je
inc
popf
mov
sbb
insb
pop
scas
and
stos
sbb
jl
mov
imul
aaa
add
cmpsl
jl
das
arpl
es
xor
xchg
addb
cmc
addr16
sbb
into
outsb
mov
jmp
popf
push
imul
lods
inc
movsl
adc
inc
cs
push
gs
pop
clc
in
ret
popa
xor
jl
inc
jmp
cmp
sbb
test
inc
inc
pop
sbb
les
cmp
repz
push
into
cltd
dec
jg
shll
pop
repz
pop
fimull
adc
hlt
into
mov
push
imulb
sub
jp
in
xchg
leave
iret
and
mov
stos
mov
std
cmpsl
mov
push
loopne
sar
pop
imul
mov
pop
pushf
dec
jno
push
and
xor
jbe
push
aaa
jle
mov
rcrb
jnp
lea
and
lods
mov
dec
pop
lods
stos
jle
add
fwait
push
adc
cmpsb
or
sbb
xchg
xor
adc
and
xchg
lods
push
mov
lret
aad
sub
cmpl
xor
dec
jg
pop
fwait
pop
lods
sarb
fnsaves
adc
out
pop
jg
lock
test
jne
in
fcoml
pop
aaa
adc
jmp
aas
jns
adc
xchg
dec
loope
loop
flds
pop
push
test
fldenv
jno
insb
jecxz,pn
imul
sbb
push
mov
outsb
outsl
mov
fdivrs
mov
in
add
pushl
inc
ret
aas
es
push
les
inc
dec
lahf
xlat
dec
in
nop
ss
test
iret
jbe
cmpsb
lock
add
sub
mov
jecxz
jl
filds
sar
mov
push
xchg
pop
loopne
pop
or
fisubrs
fs
daa
sbb
daa
add
jo
sti
push
rorb
xor
xchg
pop
mov
scas
in
jbe
push
xchg
and
or
aas
into
push
aas
clc
push
jp
lret
imul
cmc
pushf
lock
pop
movsl
shll
imul
insl
sub
xchg
push
cmpsl
mov
xor
xchg
iret
jle
daa
test
mov
andb
fisubs
push
dec
adc
pop
call
movsb
outsl
mov
push
push
jge
inc
out
and
inc
rclb
gs
mov
push
lods
adc
jbe
lock
mov
and
and
and
xchg
aam
arpl
lock
adc
inc
outsl
and
sub
mov
xchg
pushf
and
pop
push
mov
sub
lods
mov
cmp
test
adcl
mov
arpl
mov
and
add
clc
or
into
movl
mov
sub
stos
pop
aaa
pop
iret
nop
and
jo
and
mov
pop
xor
mov
pop
repz
in
ss
push
mov
test
push
cmp
sbb
jb
xlat
push
mov
sub
cld
jge
jne
movsb
leave
fcoms
lods
pop
xor
push
jnp
pop
ds
and
adc
pop
scas
iret
in
fidivrl
lds
push
or
xor
adc
icebp
clc
out
dec
mov
and
adc
fwait
push
sbb
das
cli
cvtss2sd
add
jnp
fidivrl
xchg
fcompp
bound
push
jmp
adc
pop
leave
out
inc
and
aam
dec
xor
inc
leave
cld
rcl
sti
push
mov
sbb
xor
xchg
ss
icebp
mov
mov
cmp
stc
roll
push
mov
in
jmp
mov
mov
jg
aad
fpatan
lret
xor
and
gs
mov
pop
pop
fldenv
jge
push
mov
stos
mov
push
push
lret
repz
mov
or
aam
mov
cmp
shrl
mov
mov
xor
aaa
jle
subl
adc
test
int
mov
pop
and
jb
js
cmp
dec
push
push
or
loope
out
push
add
addr16
stos
cmovno
add
xor
mov
adc
movsb
sub
iret
cmp
test
push
adcl
adc
inc
mov
cs
and
jne
iret
or
add
jno
fiadds
aad
jl
arpl
and
icebp
push
cmp
test
shl
push
add
cmpsb
sbb
mov
adc
lods
std
mov
cmpsb
and
xchg
loop
mov
push
mov
push
pusha
call
pop
sub
push
jo
jge
and
push
cmp
jg
push
leave
dec
jecxz
xlat
rclb
pop
sbb
out
stc
ljmp
in
mov
mov
jp
stos
sti
rcrl
dec
out
cmp
jecxz
inc
pop
test
frstor
insb
mov
mov
subl
sbb
inc
iret
mov
rolb
add
cmpsl
cmp
pop
push
and
in
loop
mov
push
push
pop
mov
xchg
ret
pop
push
aas
aas
inc
cmp
cld
jb
or
int3
fmull
shrl
jecxz
mov
xchg
rcrl
fbstp
pop
mov
jge
fwait
ja
sub
sbb
push
rolb
cld
add
rcll
dec
ror
xchg
aas
jo
sub
std
mov
sbb
ss
inc
cmp
pusha
cli
and
cmpsb
jns
mov
inc
frstor
xorl
fisttps
daa
inc
das
pop
pop
loopne
push
fstps
mov
aad
les
stc
fnsave
dec
jno
mov
repnz
fcomps
mov
imul
out
add
mov
dec
cltd
adc
mov
iret
fsubrs
mov
jnp
mov
mov
pop
stc
mov
addr16
out
dec
dec
lret
or
bound
popf
lds
decb
dec
dec
and
jne
in
or
inc
repz
nop
test
push
cmp
mov
stos
hlt
xchg
push
scas
shrl
sub
aad
jp
cli
in
cmp
mull
pop
jl
bound
jo
repz
inc
pop
lds
dec
xor
push
jns
xor
mov
add
aaa
ss
add
pop
stos
sub
in
mov
xchg
and
iret
fstpt
jl
loop
mov
dec
sti
dec
push
loopne
xchg
inc
dec
jo
loope
dec
and
sar
mov
aaa
aam
mov
pushf
add
xchg
push
fs
pop
std
cmc
push
sbb
xchg
sbb
lret
add
repnz
lcall
mov
sub
icebp
sub
arpl
in
sbb
pop
mov
lods
adc
jne
mov
ret
aaa
adc
nop
and
push
pop
or
sbb
dec
jp
ja
cmp
fistps
ljmp
cmp
push
mov
std
inc
pop
jno
adc
loopne
cli
push
xchg
jnp
and
into
movsl
push
inc
es
sar
jecxz
fs
dec
pusha
test
in
jno
nop
fstpt
cltd
inc
adc
xchg
xor
cli
add
aam
push
popf
shrb
inc
add
enter
mov
test
push
call
adc
sbb
dec
jo
cltd
shlb
ds
arpl
arpl
movb
push
aaa
inc
or
mov
sbb
ss
ljmp
movb
jmp
push
out
mov
aam
mov
sbb
adc
xchg
jg
mov
mov
mov
hlt
not
lret
jns
sbb
jecxz
imul
sarl
stc
test
int
mov
mov
xor
mov
push
imul
ds
jns
inc
sub
inc
mov
and
pop
gs
add
stos
dec
pusha
pop
insb
xlat
mov
jmp
mov
jae
imulb
add
ret
jns
stc
js
rcrb
push
nop
jp
jmp
xor
push
in
jmp
jmp
mov
mov
jae
lods
stos
and
dec
push
add
fistl
sahf
sub
pop
or
xlat
idivb
sub
leave
sub
fprem
mull
sbb
lea
int3
rorb
pop
cld
mov
aas
sbb
sub
aaa
shlb
pmuludq
pop
insb
dec
fsubl
enter
adc
push
jnp
cmpsl
lahf
pop
xor
ror
sbb
xlat
nop
test
xor
xor
loope
sub
sbb
icebp
lock
xchg
or
loop
cmpb
je,pn
push
jae
decb
xor
lods
cli
out
jl
lret
cmp
stos
mov
mov
inc
imul
dec
xor
out
popf
pop
fstps
ja
cmp
cmp
mov
addl
mov
pop
stos
jp
fsub
fildll
mov
xor
gs
and
sbb
fsts
push
xchg
clc
mov
hlt
nop
loop
jns
inc
mov
cmpsb
insl
test
cmp
pushf
lock
push
sbb
dec
cli
jne
adc
add
fnsave
pop
repz
adcl
pop
jge
stc
movsb
cmp
addb
xchg
sub
outsl
dec
xchg
sbb
cmpsl
test
cs
int
enter
nop
cmp
mov
js
jb
jg
pusha
mov
repnz
loopne
adc
out
scas
xorl
rolb
imul
jnp
in
mov
mov
push
js
or
and
mov
xchg
mov
jno
cmp
repnz
push
je
and
mov
fcomip
pop
cmp
fnstcw
mov
push
sahf
das
imul
adc
jbe
push
iret
xor
jg
clc
test
sti
addl
outsb
jnp
mov
out
cltd
jp
pop
push
jmp
sbb
data16
test
cld
sub
mov
imul
adc
add
mov
data16
popa
scas
scas
js
or
push
jno
sbb
jo
jb
mov
dec
int
pusha
add
xchg
jg
outsb
outsb
lods
fidivrl
mov
jg
mov
jnp
and
lahf
dec
mov
push
pop
lds
fdivrp
mov
xor
push
push
enter
mov
mov
call
ss
sbb
stc
sbb
xor
lds
es
nop
cmp
mov
cmc
in
js
pop
push
inc
push
xchg
repz
les
mov
xchg
mov
shll
cltd
les
dec
clc
push
mov
ljmp
or
and
sub
je
jl
sbb
xor
fwait
std
in
mov
neg
jae
imul
loope
cmpsl
jo
repz
cmpsb
push
pop
xor
das
cmpsl
mov
loopne
mov
test
std
mov
or
push
push
push
mov
adc
mov
pop
shll
flds
adc
pop
mul
out
inc
push
push
sahf
jno
loop
scas
inc
int
cmc
and
sub
xor
das
cs
adc
or
pop
pop
call
xchg
jno
popa
cmpsb
out
dec
jge
mov
jge
and
push
add
sub
cmp
xchg
pop
enter
ss
sbb
adc
adc
sbb
inc
sub
mov
dec
or
aaa
je
int3
mov
dec
or
xor
inc
pop
fucomi
mov
or
xchg
jns
dec
enter
in
jecxz
inc
stos
mov
sarb
ljmp
or
and
mov
jb
inc
cmp
jge
fmuls
adc
sub
sbb
pop
ss
adc
ret
aad
into
daa
mov
and
ds
cmp
xor
jmp
mov
lods
cmp
inc
pop
sbb
test
das
jg
iret
adc
outsl
lret
out
jno
test
adc
insl
les
jne
jmp
mov
pop
popf
cmp
cwtl
pusha
call
js
sbb
push
lods
subb
pop
je
cmc
xchg
subl
out
je
jb
add
fistpll
mov
iret
sub
insb
cmpsl
push
mov
and
fmuls
mov
mov
cmpsb
lods
fistpll
sar
mov
aam
xchg
dec
inc
lock
jge
out
lock
xchg
ficoml
push
pop
mov
pop
xchg
jge
jne
sub
add
imul
inc
bswap
jmp
xchg
xchg
cmp
mov
fbstp
mov
inc
scas
sbb
or
or
jl
push
or
or
xor
out
movsl
leave
mov
push
rol
mov
sti
fistpll
movsb
xlat
jbe
sub
and
into
pop
je
lock
int
cltd
dec
filds
pop
ds
pop
inc
xor
mov
or
mov
icebp
mov
rolb
jle
mov
aaa
dec
or
fcomp
cwtl
dec
movsb
insl
jmp
loopne
push
push
sub
xor
mov
arpl
sub
popf
scas
lea
movsl
movsb
mov
inc
outsb
or
repnz
dec
in
mov
ficompl
insl
aam
inc
push
fbstp
aas
xchg
mov
je
pop
cwtl
add
push
jl
inc
lea
push
add
fcmovnbe
gs
dec
push
fiadds
sub
ret
repz
lea
push
pinsrw
movb
lret
jp
jnp
cmpl
das
jmp
mov
lret
shlb
mov
inc
mov
pop
and
int
add
cmpl
and
pusha
inc
cmp
sahf
cmp
cli
xchg
cltd
add
into
rol
sub
sub
out
test
movb
pop
adc
mov
out
mov
lock
fiaddl
inc
jp
stos
scas
outsb
in
test
mov
lahf
les
int
jne
inc
daa
add
push
jo
add
add
mov
stc
dec
in
dec
or
scas
jmp
iret
int3
push
jecxz
in
jle
jnp
movsb
jbe
mov
scas
and
and
add
pop
mov
or
rcll
sbb
mov
lret
xor
iret
adc
adc
mov
jno
and
push
and
adc
fnstcw
fidivl
sbb
xor
cs
push
mov
and
and
mov
std
in
test
mov
fsubrs
and
lods
mov
lret
daa
ljmp
jae
xchg
jmp
sub
and
ret
insl
mov
call
incl
popa
das
mov
sub
mov
jg
repz
ret
sbb
ret
icebp
mov
dec
repz
outsb
dec
add
adc
sub
negb
and
mov
imul
lcall
lds
dec
test
or
mov
adc
push
cmpsl
push
rclb
stos
add
or
cs
mov
stc
int3
stos
clc
and
dec
pushf
jae
and
shlb
mov
adc
movsl
in
dec
in
je
xchg
cmpsb
fldl2e
js
lret
stos
popa
push
cltd
leave
cmp
jb
push
inc
xchg
leave
outsb
call
pop
adc
in
pop
adc
xchg
mov
sub
testl
jb
or
push
pop
push
sub
fucomp
hlt
jmp
push
cmp
jb
cwtl
ss
adc
cmpsl
leave
mov
xor
sub
lock
lahf
dec
ja,pn
push
ja
mov
cmp
sbb
pop
and
dec
push
nop
arpl
xlat
add
sub
xor
stos
test
xchg
fidivl
xor
divl
pop
ret
inc
xchg
mov
inc
sub
adc
clc
int
add
pop
mov
outsb
cmpsl
nop
push
add
push
out
cmp
pop
popf
test
aam
xor
xchg
shrb
arpl
inc
test
dec
fstps
lock
jbe
mov
dec
je
inc
xchg
loopne
movsb
mov
test
testl
lret
inc
xchg
xor
mov
add
dec
push
out
stc
adc
and
and
movsl
sbb
dec
pushf
cmp
loopne
ss
outsb
adc
pop
push
sub
add
pop
xorl
xchg
cmpsl
push
push
pop
mov
mov
imul
aaa
mov
xchg
fwait
movsl
fiaddl
lock
pop
repnz
mov
xchg
xchg
insl
out
clc
sbbb
push
lods
lock
adc
pop
popf
in
scas
mov
cmc
inc
outsb
les
push
jg
divb
cmpsb
aas
repz
inc
fistl
fisttpll
pushf
repnz
push
in
aas
rcrl
stos
push
fdivr
nop
stos
je
push
jbe
xchg
push
jb
inc
or
sbb
loope
cmp
out
or
jmp
out
popf
sub
cmp
sahf
pop
xlat
dec
in
nop
test
sbb
jl
outsl
cmp
outsb
rorb
mov
and
inc
or
sarb
dec
test
jnp
jnp
add
adc
icebp
push
xchg
syscall
inc
les
fildll
rcll
xchg
mov
cmpsb
mull
sub
dec
jle
add
and
repz
mov
ret
sub
mov
rorb
mov
pop
ds
inc
xchg
mov
inc
lret
mov
nopl
xchg
cmpsb
mov
push
lahf
adc
repnz
cs
pop
mov
cwtl
in
data16
pop
push
adcb
pop
test
jmp
push
inc
aad
or
mov
push
lods
pop
lea
es
push
data16
sbb
dec
ret
adc
pop
in
addb
out
sub
jae
outsl
in
dec
inc
js
inc
mov
dec
or
xchg
data16
test
pop
push
or
and
jns
in
xchg
into
dec
imul
lods
mov
sar
and
xchg
ja
xchg
shl
das
push
ret
or
dec
lds
pop
imul
inc
xchg
adc
fdivrs
lss
add
xchg
movsl
rorb
inc
dec
lret
mov
dec
lea
iret
sbbb
adc
or
jl
pop
jnp
nop
stc
dec
roll
add
pusha
mov
mov
stc
or
ja
and
shll
mov
push
sbb
repnz
mov
sbb
je
in
push
or
sub
mov
fcompl
mov
mov
or
mov
mov
mov
pop
loopne
push
jae
sub
push
mov
jns
dec
popa
icebp
adc
scas
push
adc
stc
fstps
leave
call
sbb
daa
lahf
push
push
or
hlt
fistps
jbe
inc
adc
or
lods
sbb
sbb
aaa
aaa
add
or
pop
or
les
shll
inc
arpl
mov
jge
inc
rcrl
jne
add
xchg
fdiv
mov
cmp
sbb
pop
add
movsl
jle
pusha
movsb
in
repnz
in
out
movsb
mov
adc
mov
repnz
push
jl
inc
gs
mov
jecxz
inc
stos
outsb
pop
or
mov
xchg
pop
add
scas
lock
test
fistl
clc
rolb
sbb
push
sub
mov
jecxz
push
lahf
add
mov
loop
mov
das
xlat
mov
iret
arpl
or
mov
sbb
pop
in
pop
ret
aas
and
lods
mov
clc
mov
inc
cs
xchg
imul
arpl
ljmp
aam
adc
and
cmp
movsl
jle
push
hlt
add
push
mov
xchg
sarb
lret
in
lahf
jbe
xlat
addb
push
rep
lret
ja
lahf
dec
inc
loope
and
add
jecxz
clc
hlt
andl
cmpsl
mov
and
dec
scas
xchg
shlb
outsl
xor
sub
lcall
xor
pop
mov
inc
add
icebp
mov
mov
fisttps
shlb
jnp
cmp
sahf
dec
loop
outsl
mov
pushf
sbb
roll
pop
inc
xchg
cmp
inc
jo
fs
stc
push
movsl
aaa
push
push
ror
js
icebp
clc
lcall
rorb
jecxz
popf
xchg
mov
cmp
shrb
mov
ret
push
mov
xchg
push
push
push
xor
hlt
pop
sarb
push
pop
mov
jne
and
mov
sbb
out
outsb
mov
adc
rorl
inc
jg
adc
jle
popa
das
adc
mov
aaa
ret
pop
mov
shrb
sbb
adc
lock
push
outsb
mov
repz
jne
sub
ljmp
mov
add
xor
shl
xor
mov
ret
jge
fnsave
cmp
sub
pop
dec
mov
out
scas
adc
xchg
repz
jmp
and
mov
cld
data16
pop
sbb
into
leave
jmp
stc
dec
scas
out
mov
fnstenv
add
push
jecxz
mov
ds
jecxz
sarb
insb
pushf
push
inc
xor
add
mov
push
xor
ljmp
add
cmp
pop
andb
bswap
das
inc
gs
es
mov
pop
adc
jnp
inc
or
sub
cli
dec
jns
push
stos
xlat
adc
add
fcmovne
add
adc
insb
mov
inc
push
lock
dec
loopne
cs
add
pop
adc
xchg
call
or
sub
jne
sub
add
cmp
adc
insb
ljmp
jnp
jae
mov
dec
shll
mov
mov
aas
push
inc
push
repz
xchg
adc
fstpt
pop
add
sub
stos
mov
lods
shlb
std
pop
adc
aas
sub
add
push
xchg
mov
jg
addr16
and
roll
ja
sti
es
cld
inc
mov
and
movsb
add
pop
mov
cs
adc
cmp
xchg
fwait
push
je
inc
shlb
lock
aaa
or
shl
mov
cmp
push
push
ss
inc
mov
int3
sbb
adc
imul
jmp
jbe
jmp
add
movsb
icebp
subb
jae
fcompl
into
enter
out
mov
test
stos
jge
subl
ja
sbb
mov
mov
in
jns
lea
xchg
xchg
scas
or
and
sbb
iret
pop
mov
addl
mov
xchg
xchg
push
mov
sti
test
pop
xchg
dec
jns
xor
sub
aad
pop
inc
xlat
mov
ljmp
ficompl
fcos
mov
out
mov
cli
xchg
mov
lcall
mov
testl
jge
push
add
out
push
cmp
or
mov
adc
iret
aad
push
dec
xlat
and
mov
dec
sbb
or
xor
inc
imul
push
std
xchg
jg
sub
test
shll
scas
nop
notl
into
pop
xchg
fstpt
pop
cmc
in
ja
dec
out
mov
add
bound
jne
lods
fistpl
in
cmpsb
adc
inc
push
js
push
aaa
aaa
sarl
ss
mov
stc
mov
cli
out
push
repz
rolb
in
mov
mov
adc
inc
push
sbb
jecxz
sub
cmp
push
sub
jmp
mov
inc
shr
in
sbb
enter
mov
popa
and
js
pop
push
scas
int
mov
loopne
dec
push
dec
mov
push
lahf
push
and
fdivrl
adc
das
adc
mov
pop
xor
xchg
insb
es
push
xchg
aam
into
js
nop
into
mov
mov
fnsave
popf
es
pop
xor
ret
add
push
nop
add
lahf
std
adc
mov
in
jne
push
je,pn
lods
hlt
aas
data16
jp
mov
test
das
mov
test
cld
loope
adc
aad
adc
cmpsb
je
lock
push
and
pusha
jge
mov
and
sbb
add
data16
loop
bound
cli
outsb
push
jno
sbb
sub
mov
cmpsb
jmp
pop
xor
fs
daa
in
push
fcompl
int3
dec
mov
mov
inc
xor
aam
xor
jmp
cmp
dec
jle
jae
rclb
dec
inc
xchg
jg
sbb
es
icebp
lret
lret
insl
xchg
cmp
cmp
cltd
divb
ficoms
lahf
loop
and
mov
shr
stos
sbb
je
xchg
call
outsl
mov
jmp
cld
nop
int
enter
div
and
or
sti
fpatan
inc
cmp
sub
je
adc
xchg
push
inc
mov
shr
or
cmp
pop
adc
repnz
and
cmp
addl
insl
scas
sbb
xor
cs
xchg
jbe
cli
mov
push
cmc
jmp
mov
xor
sbbb
aam
and
mov
mov
pop
dec
dec
mov
add
xor
cmp
sub
pushf
jp
jmp
xchg
enter
and
adc
insl
fbld
pop
sbb
xchg
jmp
outsb
cs
in
jns
in
jle
sbb
std
nop
scas
push
and
xor
imul
ret
mov
sarb
movl
lock
mov
add
mov
insb
lods
cmpsb
data16
or
cmp
in
fldcw
mov
shl
jne
xlat
xchg
xlat
cmp
pop
test
xchg
pop
stos
out
ss
aas
enter
loop,pn
arpl
xchg
mov
pop
lret
fbld
mov
add
stos
and
jns
add
iret
xlat
in
addl
ss
lods
xor
add
pusha
add
cmp
push
inc
leave
js
test
stc
push
xchg
fcmovb
mov
xor
dec
insb
mov
pop
jge
adc
or
inc
fwait
and
dec
mov
aas
bound
pop
test
mov
add
pop
mov
test
shlb
daa
int
pop
cli
rolb
in
cld
dec
fimuls
test
and
mov
mov
daa
aaa
aas
scas
scas
mov
or
or
push
or
inc
cmp
adc
sbb
inc
sbb
icebp
mov
push
rcrl
cmp
loop
int3
adc
mov
mov
iret
inc
lcall
push
xor
pop
aam
shlb
mov
mov
push
popf
insb
push
movsl
in
aas
pushf
loop
in
aas
jl
out
fcoml
push
xor
sub
jnp
cld
aad
sbb
ficomps
cltd
std
mov
in
push
lret
mov
shrl
adc
lcall
lea
rol
pop
or
mov
lock
cld
mov
add
and
pop
stos
pop
inc
lahf
xlat
lods
mov
test
mov
cmp
negl
mov
lea
mov
jb
mov
lea
fnsave
sub
mov
add
pop
push
add
lods
jp
jbe
push
dec
push
pop
ret
mov
jae
pop
adc
ljmp
fcmovbe
mov
lods
or
inc
inc
test
or
jae
je
lret
pop
and
scas
fdivs
add
rcll
fs
fidivrl
jmp
addl
xlat
cltd
sub
cmp
jo
outsb
iret
imul
ret
sbbb
lcall
mov
pusha
push
stos
inc
add
sbb
mov
mov
mov
and
fistps
mov
pop
xchg
dec
adc
pop
pushf
adcb
dec
cmp
outsb
adc
aad
xchg
shrb
insb
dec
pop
sub
in
ret
push
cmp
or
mov
dec
daa
gs
aad
mov
xchg
push
dec
sbb
out
xchg
loopne
fldt
lea
enter
out
outsl
out
cmp
push
or
les
mov
cmp
mov
lods
aam
cmp
inc
mov
cmp
and
xchg
jp
jb
adc
scas
jg
call
sub
imul
out
jle
push
sub
test
push
shr
add
cli
imul
jge
jmp
mov
pop
inc
xchg
out
addr16
xchg
pusha
adc
lock
sbb
out
js
outsl
loop
push
mov
mov
xchg
mov
xchg
and
push
ret
jae
outsl
sbb
std
das
and
mov
mov
fwait
cmc
std
jns
xor
rorb
ljmp
imul
push
sub
sbb
ss
je
nop
jns
mov
sti
mov
sahf
negb
mov
inc
sbb
mov
jecxz
pop
cmpsl
movsb
jl
push
repz
ret
test
es
hlt
xchg
loop
fucomp
dec
sti
test
mov
in
pop
dec
ret
sbb
paddq
outsb
cs
std
mov
xor
xor
pusha
je
cmp
shll
dec
addr16
or
fs
pop
dec
fwait
push
mov
push
push
and
cmc
ret
jle
sti
aad
mov
sub
cmp
scas
mov
xlat
punpckldq
pushf
insb
mov
add
jns
shl
rcr
das
xchg
test
shll
cmpsb
mov
xchg
or
jbe
and
mov
loop
inc
in
cmp
cmp
sbb
shlb
cwtl
pushf
sbb
push
dec
inc
pop
push
jbe
dec
sbb
mov
loop
sbb
xchg
xchg
pop
lcall
inc
and
rorl
ljmp
fbld
add
inc
data16
inc
shrl
div
mov
mov
jne
notl
inc
icebp
jg
test
shll
fimuls
in
push
jno
mov
les
pushl
jne
mov
xchg
xor
in
pop
mov
cmpsl
mov
cmp
xor
xor
mov
lcall
mov
lcall
aad
inc
cli
leave
negl
fildll
inc
jge
pushf
aaa
sbbb
mov
add
popa
jmp
jb
leave
cmp
lahf
jmp
and
in
add
and
jne
aas
fwait
push
pop
popa
mov
or
mov
cmp
jne
push
push
sbb
stos
out
dec
roll
out
and
imul
inc
lods
xchg
fstps
insb
std
call
movsb
mov
aam
test
test
roll
mov
ret
hlt
mov
subl
out
mov
repnz
and
add
fsubs
scas
cmp
scas
test
xchg
cmp
or
pushf
out
mov
sbb
in
loope
gs
ret
inc
jo
out
push
shr
jge
bound
jno
mov
shl
jns
adc
fwait
pop
or
test
push
adc
mov
pmullw
inc
fsubr
jl
add
enter
nop
inc
pmullw
and
mov
loope
lret
mov
mov
dec
fdiv
add
inc
loop
lcall
das
pop
jbe
insb
bnd
test
pop
push
not
rclb
cmpsb
loope
sub
sub
in
sub
pop
fdivl
jle
out
scas
fucompp
imul
xchg
int
cmp
mov
mov
push
stc
inc
lahf
dec
orb
jns
filds
jbe
cmp
xor
fst
fildll
out
data16
or
popf
stos
popf
subb
js
jmp
inc
into
je
push
mov
out
xchg
les
popa
mov
pop
rcrb
jns
mov
and
jns
push
pop
jo
push
add
lret
or
mov
adc
mov
ficoms
adc
sub
mov
pop
xchg
repz
xchg
dec
inc
push
mov
push
fidivl
in
pop
cmp
aad
decb
cmp
pop
fucom
in
push
sbb
push
je
sahf
xchg
cs
outsl
xchg
push
insb
dec
cmpl
adc
push
sti
xor
stos
or
sbb
mov
adc
insb
pop
dec
mov
int3
cmp
testb
xlat
mov
inc
sub
rcr
jecxz
icebp
shrl
mov
cmp
xchg
insb
das
mov
xchg
cltd
xor
pushf
pop
sbb
dec
xor
inc
mov
lods
je
pop
leave
and
inc
push
arpl
cmp
aad
cld
inc
and
push
imul
adc
push
or
ljmp
mov
push
push
inc
daa
push
call
cmp
ss
push
pop
ja
cwtl
fisttpll
mov
arpl
inc
loop
ljmp
repnz
outsb
fs
jne
xor
mov
cmp
shlb
out
and
sbb
mov
dec
loope
mov
sbb
jmp
leave
incl
mov
mov
aad
cmc
shlb
divb
sbb
mov
cmpsl
xor
fdivl
enter
add
or
mov
add
test
lods
arpl
mov
movsl
ss
mov
cmp
mulb
cmp
mov
pop
jl
mov
adc
mov
cmpsb
mov
stc
xchg
test
sbb
daa
jno
fcoms
popf
out
xorl
cmpb
pop
mov
cmpsl
std
push
mov
sarl
sub
sbb
insl
jnp
mov
scas
dec
lods
sbb
sub
mov
lds
in
pop
rolb
and
subb
loopne
dec
adc
mov
mov
cmpsl
push
mov
test
adc
fistpl
xor
stc
loope
adc
cs
iret
sbb
push
data16
mov
jl
in
iret
mov
test
cmpsl
imul
out
sarl
mov
fcmovb
icebp
clc
inc
mov
dec
aad
push
jns
adc
out
loope
mov
push
incl
into
cltd
pushf
and
insl
cmc
adc
push
dec
xor
testl
dec
sbb
addl
dec
inc
hlt
mov
mov
inc
sbb
imul
xchg
imul
cmpsl
shl
bound
adc
mov
cmp
enter
mov
pusha
push
pop
xlat
loop
pop
push
orb
dec
stc
sbb
movsl
inc
dec
ss
add
push
lcall
call
cltd
and
clc
clc
jge
cmp
enter
sub
or
nop
inc
rorb
cmp
dec
cmp
jnp
pop
sbb
jg
dec
popa
std
movsb
cmp
xorb
sub
fidivs
les
lods
cltd
mov
nop
pop
in
dec
pop
pop
loope
mov
add
lahf
imul
sbb
insb
cmp
xchg
iret
arpl
mov
dec
frstor
mov
imul
jle
rorb
fsubr
adc
jg
scas
clc
pop
idivl
mov
out
lcall
cwtl
inc
insl
icebp
shl
js
mov
mov
jmp
pop
addr16
mov
jno
pop
mov
insb
adc
inc
pop
push
mov
add
or
xchg
xchg
push
stos
push
icebp
pop
cltd
fmull
push
stos
int3
sarl
popf
icebp
dec
push
jae
clc
push
push
lods
push
cmp
pop
xchg
add
or
cs
loop
repz
sub
ret
std
mov
adc
inc
sar
mov
jle
jae
hlt
cli
jo
loop
shlb
pop
inc
loop
je
repz
sbb
and
pop
rcrb
xor
fidivs
add
lea
jo
and
nop
mov
mov
cmp
leave
out
mov
push
and
dec
cmp
aam
cmp
xchg
cmp
push
xlat
pushf
inc
rclb
inc
dec
ljmp
mov
or
mov
inc
pop
cltd
add
xchg
pushaw
adc
push
mov
cltd
xchg
dec
loope
inc
sub
mov
hlt
lcall
jmp
jp
push
jns
imul
scas
rcr
xor
shl
sub
cmp
inc
fadds
pop
dec
int
decb
jecxz
stos
xchg
out
shlb
cmp
sbb
hlt
data16
dec
xchg
stos
jl
insb
aam
rclb
jmp
jmp
mov
or
rol
push
jbe
cltd
scas
and
push
or
int3
sar
xor
iret
pop
stos
fucom
mov
mov
lods
cli
mov
inc
lretw
leave
pop
stc
stos
in
fcoms
mov
leave
dec
push
lods
dec
xor
leave
les
jmp
data16
add
cmc
lock
daa
enter
sub
lea
sahf
psubd
cmp
inc
dec
xchg
or
mov
lret
je
sub
sbb
xor
mov
adc
arpl
ret
imul
cmp
pop
pop
cmpsl
dec
and
and
mov
cmp
pushf
jno
or
push
cmpsb
push
ret
inc
ficoml
or
sub
adc
lret
jbe
inc
mov
imul
stos
xchg
inc
jmp
sbb
pop
aam
in
lahf
ds
cmc
lahf
sbb
mull
and
push
bound
inc
dec
lds
mov
jnp
sub
push
movsl
inc
dec
mov
repnz
insl
jno
push
sub
mov
and
les
mov
xor
adc
iret
push
add
inc
cltd
ret
cltd
sub
popf
jp
jge
and
mov
movsb
icebp
xor
inc
xlat
jns
inc
push
adc
arpl
xchg
fidivrl
cmpsl
lcall
in
in
test
pop
iret
jae
lods
jb
ljmp
jne
aas
fstp
lods
jae
add
xor
mov
repnz
adc
sub
inc
ret
filds
aad
pop
and
test
loope
jg
xor
cmp
cmovs
sub
incl
inc
nop
sbb
inc
pop
std
and
daa
xorl
xchg
push
aam
push
dec
jns
dec
lock
and
mov
mov
jl
sub
leave
rclb
imul
or
imul
outsl
icebp
stc
pop
incb
orb
pusha
add
cltd
jp
subb
movswl
insl
mov
das
int3
sbb
in
adc
mov
dec
cmp
out
das
xchg
test
aam
in
pop
xchg
out
fildl
add
inc
daa
or
adc
add
pop
sub
bound
sbb
xor
shl
sub
int3
xlat
repz
jbe
mov
push
mov
shl
fistpll
add
push
rorb
cmp
movsl
ret
hlt
jne
xchg
mov
testl
sti
add
sub
test
test
popf
jns
jle
int
add
cmpsb
push
into
and
push
out
sbb
dec
mov
and
movsl
xchg
xor
adc
out
loop
inc
pop
sub
cmp
pop
jmp
je
enter
xor
out
dec
sub
add
rcll
stos
adc
mov
cwtl
lds
inc
xor
sbb
add
test
dec
and
sbb
dec
aad
xor
fs
push
mov
and
ds
dec
in
jae
mov
adc
xor
push
jge
push
out
sbb
inc
xchg
cmc
gs
test
sub
xlat
lods
xor
jae
sub
pop
cwtl
iret
cmpsl
lret
inc
int3
cmpsl
add
bound
lcall
mov
xorl
popa
cmc
or
mov
xchg
outsb
xchg
fbld
test
xor
pop
mov
ljmp
fs
scas
fldl
jns
sbb
mov
mov
shlb
int
jp
cli
insb
dec
out
and
xchg
loop
adc
call
and
xchg
aad
das
in
cmc
and
mov
scas
sbb
inc
mov
clc
jle
divl
cmc
fidivrs
movsl
adc
cmc
jl
or
shlb
adc
out
dec
pop
or
push
lcall
dec
hlt
jge
repnz
xor
xchg
sub
add
jbe
aaa
xor
aad
ja
pop
xchg
cmpsb
mov
dec
test
rol
or
aas
and
push
call
mov
call
mov
imul
mov
fdivl
clc
add
cwtl
mov
jg
push
sbb
jg
sub
popf
lock
insl
rorb
jp
mov
or
sbb
inc
mov
dec
dec
push
pop
sub
negb
push
add
inc
mov
cmp
or
xor
loopne
out
mov
mov
adc
or
insb
es
jb
push
or
out
shlb
add
icebp
cmp
test
inc
xor
and
mov
or
or
fstpt
push
adc
sub
xor
stos
jmp
loopne
pop
adc
or
addr16
fldenv
faddl
mov
out
inc
je
xchg
movsb
xchg
push
sub
in
sub
dec
cmp
push
dec
dec
outsl
incl
enter
outsl
lods
add
pop
pop
rcl
mov
xchg
sub
fldcw
inc
popa
mov
cld
fs
cmc
jge
bound
mov
in
in
push
push
movsl
ljmp
negl
add
cld
dec
pusha
push
add
adc
inc
in
insb
arpl
dec
idiv
stc
clc
push
jne
or
jae
imul
stos
dec
divb
cwtl
pop
outsl
aad
je
add
cmp
pop
pop
mov
fidivrs
icebp
stc
or
test
popf
or
fldcw
aam
scas
iret
and
and
lods
cmpsl
cmpsb
sbb
pop
pop
cmp
into
or
jmp
xor
in
sub
test
lds
addr16
fcomip
and
dec
and
loop
dec
sbb
aam
mov
ljmp
pop
sbb
push
roll
jns
into
adc
xchg
movsl
imul
inc
fcompl
in
std
push
in
xchg
aaa
mov
ljmp
pop
cltd
data16
cltd
mov
add
cmp
inc
enter
inc
loop
lods
add
out
in
pop
jmp
jmp
mov
loopne
dec
adc
mov
mov
cmp
push
shl
pop
aad
add
ss
push
mov
cli
add
mov
push
mov
test
jg
es
push
pop
pop
mov
fisubrl
or
popa
or
or
xchg
loop
push
pop
ljmp
cmp
fcom
into
popa
sbb
into
xchg
popa
sbbl
sub
arpl
iret
fdivl
cmp
out
jmp
xor
mov
rclb
lock
mov
push
mov
lods
lahf
es
mov
push
adcb
cmp
mov
mov
mov
mov
mov
sbb
out
dec
mov
ljmp
xchg
jmp
loope
and
in
test
cli
pushf
jg
nop/reserved
add
fld
cmp
sbb
and
xchg
push
rolb
mov
mov
jg
mov
sbb
push
inc
es
cwtl
xchg
repnz
or
call
aad
aam
fiadds
dec
insb
inc
lret
int3
ja
mov
shr
xor
push
lock
ret
cli
cld
xlat
sbb
out
dec
arpl
mov
add
and
out
jg
dec
lds
mov
xchg
data16
xlat
pop
sbb
in
popa
mov
push
sbb
or
mov
pop
xlat
imul
out
pop
leave
xchg
push
mov
mov
leave
push
movsb
int3
add
pushf
or
sbb
jp
sarb
cld
or
cmp
sub
jl
out
xchg
lahf
and
nop
cli
jbe
pop
add
mov
mov
sbb
arpl
mov
sub
sbb
add
xchg
push
jnp
in
hlt
pop
adc
mov
movsb
aaa
rcrl
sub
enter
cmp
inc
mov
imul
or
cmp
pop
lret
in
sub
mov
mov
lret
or
mov
ret
ss
inc
push
testb
daa
add
jb
movsl
lmsw
push
repnz
cmp
js
mov
ljmp
xchg
daa
mov
outsb
out
push
inc
jle
jl
sub
inc
aas
lcall
mov
add
push
cmp
jb
inc
xor
inc
cmp
sbb
fildll
lods
pop
sub
fmuls
in
daa
jg
out
dec
sbb
out
pop
pop
std
lahf
jmp
mov
imulb
frstor
mov
cmpl
fidivl
sahf
lods
aad
sbb
pushf
dec
jne
cmp
sti
dec
cmpsb
mov
cmp
daa
inc
push
daa
pop
int
xor
jmp
out
cs
in
dec
push
movsl
fnsave
rcll
iret
cmpb
popa
mov
cmp
jle
rclb
mov
or
adc
cli
and
dec
and
popa
xchg
cld
mov
int3
sub
repz
mov
out
repz
cmp
sbb
inc
es
mov
cmpsl
andb
xor
hlt
xchg
pop
popa
push
sarl
lcall
or
mov
cli
insl
xor
or
cmp
cmp
fwait
adc
sub
xchg
dec
jbe
dec
mov
xchg
ffreep
into
outsb
adc
cmp
loopne
dec
and
add
push
fldt
pop
fcoml
push
imul
shll
inc
xchg
pop
sub
mov
nopl
outsl
data16
outsb
jae
sbb
cmpsb
shll
xor
sub
pop
xchg
pop
orl
hlt
push
int
mov
cmp
fldl
sub
jg
mov
shrb
sbb
mov
pop
cmp
es
lea
outsl
pusha
daa
out
inc
call
mov
xchg
decb
dec
mov
sub
push
iret
loopne
movsl
jecxz
xchg
mov
mov
je
xchg
jmp
adc
lods
in
outsl
lods
pop
imull
lret
out
adc
xchg
xor
sub
and
xchg
jmp
scas
or
stos
lcall
dec
mov
sbb
add
or
sbb
push
xchg
mov
jle
mov
and
out
cltd
scas
js
xchg
mov
gs
int3
and
gs
or
jbe
js
cmpsl
xchg
or
scas
call
sub
insl
pop
js
push
inc
imul
sub
xor
xor
nop
or
inc
mul
xor
jb
es
jno
cmp
lahf
push
rcr
inc
shl
mov
stos
or
outsl
sub
pusha
fmulp
mov
inc
push
dec
popa
mov
or
pop
ret
int
mov
push
outsl
mov
and
lret
std
sti
sbb
xor
dec
in
stos
mov
add
mov
add
fiadds
fiadds
js
sbb
aas
data16
xor
dec
repz
dec
push
or
int3
out
mov
js
imul
out
mov
nop
adc
mov
push
xor
fcoml
mov
cmp
mov
mov
repz
test
mov
or
outsl
inc
shrb
test
addl
adc
adc
add
insl
xor
xchg
ljmp
sbb
or
push
loopne
push
lret
pop
mov
inc
shll
mov
aas
stos
sbb
cmc
jmp
mov
rolb
jge
inc
inc
pop
add
repnz
or
jg
mov
lds
pop
cmc
test
sti
mov
pop
insb
sahf
or
cmp
movsb
out
test
dec
sub
lods
pop
and
jle
mov
arpl
mul
ret
xor
pop
aam
cmc
pusha
xor
or
xlat
loop
mov
xchg
push
fs
xchg
outsb
mov
fstp
adc
daa
insl
jno
leave
fdivl
mov
mov
insl
mov
fdivl
jb
sarb
enter
xor
adc
inc
lahf
sbb
notl
aas
dec
cs
stos
lahf
push
subl
jle
push
fstp
rolb
pop
cmpl
cli
jo
gs
adc
add
pop
stos
or
stos
fisubl
adc
sbb
aaa
jae
xchg
and
push
dec
aad
mov
loopne
add
fs
movsb
mov
xor
cmc
loope
imul
and
sti
mov
fisubl
stos
mov
push
inc
repnz
repnz
sub
xchg
fists
popa
ljmp
data16
mov
sbb
outsb
dec
lods
inc
adcb
cmp
add
aas
dec
xor
nop
imul
mov
push
in
adc
outsb
mov
adc
jmp
push
pushf
cmp
inc
cld
imul
xchg
std
and
js
cld
out
xchg
xchg
adc
and
popf
pushf
in
push
push
mov
inc
push
adc
out
or
cmp
jmp
pop
out
sahf
into
jno
jo
xchg
xchg
cmp
insb
pop
mov
mov
popf
xchg
mov
shrl
and
and
add
sbb
fsubl
sub
movsb
scas
and
leave
push
cwtl
jae
lret
xchg
lret
jno
mov
out
xor
pop
std
xor
lcall
inc
mov
dec
sub
add
sahf
xchg
sub
cld
lods
inc
fistpl
pop
mov
in
cli
sbb
xchg
testb
mov
in
cli
mov
push
jl
cltd
xlat
jo
sbb
cs
add
inc
adc
popl
push
xor
shl
decl
dec
push
lahf
xchg
jnp
sub
addr16
push
pop
pop
jb
mov
xchg
lahf
sub
mov
mov
fldl
adc
pop
xchg
pop
rolb
movsl
nop
push
adc
xchg
push
inc
jo
decl
push
hlt
aam
sbb
cli
cmp
or
cmpsl
dec
popa
mov
dec
sarb
push
mov
fimuls
out
adc
loop
xchg
mov
xchg
xlat
loope
pushf
jp
jb
int
cmp
lock
lcall
test
ret
inc
jb
loopne
nop
sub
mov
enter
in
lock
push
or
sbb
push
push
movsb
sbb
adcl
mov
test
out
mov
out
gs
dec
adc
icebp
scas
adc
cmp
rcr
or
movsl
das
insl
je
lods
add
push
adc
sbb
stc
stos
sub
push
repz
jns
mov
push
mov
cmp
mov
add
xchg
lods
sub
fisubl
fwait
xor
lret
xor
pop
in
inc
popaw
leavew
cmc
fidivrl
filds
jnp
sub
sbb
pop
cwtl
sbb
pop
loopne
jle
rcr
or
aam
dec
jbe
daa
pop
lock
dec
inc
mov
test
ficompl
pop
jae
out
clc
cmpsl
and
dec
outsl
repnz
dec
xor
and
lahf
and
mov
cmp
mov
xchg
push
subl
out
lds
xlat
sbb
dec
xor
add
xchg
or
sahf
aam
bound
clc
mov
inc
and
les
cmpsl
outsb
xor
and
push
aam
jb
jbe
inc
mov
push
les
mov
xchg
mov
popa
rcr
push
add
pusha
les
sti
std
xchg
sahf
push
testl
xor
and
mov
inc
inc
iret
mov
mov
jle
pop
or
rclb
mov
insb
cwtl
pop
mov
mov
dec
outsl
jecxz
in
or
cwtl
lret
or
jge
pop
mov
jp
jbe
fists
pop
popa
push
xchg
repnz
stc
push
add
mov
adc
xchg
icebp
adc
xchg
adc
insl
or
cmp
or
add
mov
pop
popf
pop
out
cmc
jp
nop
iret
or
pop
push
and
aam
cltd
pop
shlb
sbb
sahf
or
stos
imul
dec
mov
imul
sub
add
push
fwait
popa
insl
pop
inc
popf
out
fisubl
xor
fwait
pop
insb
dec
sbb
fidivs
sbb
ret
notl
imulb
gs
in
pusha
push
popf
lret
push
push
xor
outsb
push
push
xchg
dec
bound
mov
lret
and
push
out
add
jp
daa
lea
jmp
mov
push
or
lcall
arpl
jl
hlt
repnz
in
pop
push
add
daa
push
and
jle
cmc
xchg
test
inc
jecxz
ret
push
sbb
xor
lret
push
mov
ret
call
dec
inc
mov
ja
loopne
jmp
repnz
and
push
in
jecxz
movsl
sub
push
into
fcompl
xchg
cmp
inc
shlb
jmp
cmpsl
and
xor
aad
mov
mov
cs
mov
mov
mov
cmpsl
cld
mov
xchg
sub
test
mov
mov
xchg
js
adc
inc
fnstenv
push
les
sbb
xor
shrb
repz
inc
in
into
sbb
mov
xchg
cld
cmpsl
int
push
mov
xchg
dec
inc
lods
repnz
aas
outsb
dec
rolb
pop
or
jnp
test
pop
fmull
add
xor
clc
push
and
mov
rcrb
inc
mov
nop
movsb
and
rcr
mov
push
lret
cvtps2pd
and
mov
cmp
in
or
mov
stos
xchg
das
loop
stos
test
and
pop
mov
xor
adc
fstpt
xor
jns
xchg
loopnew
outsb
adc
add
mov
stos
sbb
cs
xor
fidivrs
sbb
cli
mov
cli
sbb
push
and
ss
or
into
jo
into
pushf
push
sbb
mov
and
adc
mov
andl
and
arpl
test
jae
icebp
jle
rorb
mov
mov
pushf
popf
lods
mov
jns
sti
popf
test
sbb
fdivrl
jmp
shl
pop
daa
adc
shlb
cmp
icebp
outsl
pop
jb
pop
xchg
inc
xchg
sti
andb
and
lret
add
pop
std
mov
and
push
sbb
add
lods
mov
clc
cmpsl
jmp
sahf
push
push
adc
inc
cmp
shll
out
repz
mov
lods
dec
shll
in
in
mov
lcall
xor
or
sbb
jge
adc
int3
movsl
xchg
xlat
aam
push
jo
xor
and
aaa
insl
pop
xchg
xor
add
xchg
sbb
inc
js
shl
cli
and
stos
lock
lcall
inc
popa
sbb
pop
rcll
push
mov
mov
mov
add
subb
js
push
jecxz
out
add
sub
ds
xchg
insb
cmp
movsb
out
dec
jnp
daa
inc
xchg
xchg
pop
data16
in
andb
test
and
daa
aaa
jle
loop
or
sub
jne
and
fwait
orb
cmp
icebp
lcall
das
stos
dec
out
dec
jmp
push
std
mov
xor
call
addr16
or
out
mov
loopne
fwait
leave
cmp
cmp
mov
mov
xor
ja
push
add
sbb
cmp
dec
outsl
lods
inc
dec
sti
sub
dec
sysenter
push
insl
cwtl
gs
mov
clc
divb
hlt
add
jne
lods
xlat
lcall
outsl
mov
xchg
xchg
cmp
adc
mov
xor
and
in
outsl
fwait
mov
ds
push
out
mov
lahf
out
out
and
aam
popf
loopne
adc
shl
jns
xchg
vunpckhps
mov
push
inc
jl
shlb
test
inc
dec
or
pop
nop
ret
jle
lret
cmp
loopne
ljmp
mov
pop
pop
inc
jg
int3
int
iret
jl
pop
cmp
dec
lods
inc
xchg
call
testb
ljmp
outsb
outsl
jno
popf
icebp
mov
inc
xchg
or
push
loope
decl
adc
or
test
sbb
pop
xchg
push
stc
mov
cltd
repz
push
lds
sbb
jge
cmpsl
maxps
test
mov
arpl
movsl
in
jl
inc
jno
push
fsubp
pop
inc
cld
jle
popa
nop
lock
jbe
push
mov
sub
mov
dec
push
inc
jnp
jg
push
clc
lds
xor
ds
pop
add
pop
mov
loop
bound
daa
out
fidivl
cmpsb
gs
push
into
mov
jb
cltd
ja
aas
push
add
imul
cld
cmp
mov
mov
std
push
rcl
ret
loope
loopne
cltd
push
inc
pushf
sub
inc
les
lret
in
push
mov
mov
mov
push
mov
or
hlt
das
and
jno
push
xor
loope
cmp
rol
pop
scas
sbb
fs
or
data16
imul
divb
or
js
cmp
repnz
adc
or
sbb
aaa
xchg
in
jnp
icebp
aas
mov
into
push
mov
cmp
fsub
inc
in
mov
vmread
fs
les
lea
out
cld
rcll
je
xchg
fisubl
imul
int3
clc
adcl
push
inc
lret
outsl
xorb
cmp
mov
sbb
cmpsb
adc
sbb
or
inc
inc
adc
sub
xchg
push
cmc
xchg
ficoml
fxch
sahf
xchg
sub
dec
jb
mov
jg
int3
mov
fidivrl
aam
push
jle
lret
pop
dec
push
mov
lcall
test
lock
cli
sbb
and
test
iret
pop
dec
aad
fists
mov
mov
ljmp
mov
push
cld
icebp
cmpsl
mov
jo
inc
jge
inc
ret
std
addr16
fdiv
xor
imulb
or
cmp
pop
mov
ds
or
int3
dec
adc
leave
sbb
jle
mov
aaa
cmpsb
or
daa
stc
and
fistpll
loope
sbb
push
add
adc
inc
cmpsb
insb
cmp
shll
lcall
cmp
xchg
mov
in
push
dec
mov
xchg
imul
movsl
hlt
xchg
dec
neg
xchg
sbb
lock
jg
xchg
out
sbb
popa
out
icebp
add
sbb
xchg
or
mov
aaa
sbb
dec
or
pop
outsb
fimuls
sbb
out
fs
inc
sahf
in
outsl
sahf
scas
add
xchg
fldcw
into
lods
pop
xchg
fstps
sub
mov
hlt
push
xchg
into
cmpb
les
int3
dec
sahf
push
cmp
sub
dec
sub
xlat
mov
enter
sbb
xchg
push
sub
dec
cmovge
cmpsb
mov
sbb
in
lcall
mov
rorb
ljmp
pop
cmp
inc
push
cmpsl
mov
ja
jl
sub
or
jg
outsl
dec
adc
outsl
mov
fucomi
loop
push
jo
cltd
or
in
out
xchg
push
test
scas
imul
mov
push
add
dec
stc
notl
rcrl
cvtps2pd
push
xchg
imul
dec
dec
dec
xchg
rcrb
pusha
adcl
cmp
fisubrl
nop
pop
in
iret
jbe
shr
fistps
out
and
inc
fnstcw
jns
leave
aaa
mov
ret
sub
cmc
jge
aad
push
inc
xor
pop
lcall
cmc
xchg
aaa
faddl
movsb
mov
jecxz
lock
shlb
mov
mov
ss
cmp
mov
push
dec
shld
pop
test
inc
dec
cs
stos
rcr
es
xchg
imul
sbb
add
and
aas
insb
and
jno
incb
and
or
add
lcall
stos
arpl
xchg
andl
cmp
out
pop
add
pop
or
xor
mov
add
aas
das
xchg
leave
xchg
xor
testl
sbb
addr16
push
jne
loopne
push
lahf
rcrl
adc
jmp
cld
cmp
xor
int3
fs
adc
sarb
and
mov
cmp
shll
xchg
sahf
fstpt
and
imul
sub
dec
jae
bound
push
out
or
mov
mov
inc
push
loop
push
xor
dec
mov
mov
shrl
aaa
lods
repz
in
lcall
inc
icebp
inc
movsl
out
pop
xor
adc
orb
cmp
pop
or
xchg
mov
js
jge
fildl
std
inc
lret
in
es
sbb
sbb
push
stos
jb
mov
cs
cmp
push
out
cmp
sbb
insb
sbb
inc
imul
xchg
andl
push
pop
xlat
mov
fnstcw
lret
mov
xor
aam
aam
rcll
pop
mov
pop
fdivr
dec
sub
stc
mov
push
sahf
lods
mov
in
mov
mov
sbb
fmulp
jo
call
cmpsl
cld
and
xor
dec
clc
cmp
out
mov
pop
ret
clc
ds
xchg
xor
pop
out
ja
rorb
test
lcall
sbb
push
push
cmc
cmpsb
or
sub
nop
rcrb
pop
pop
fstl
dec
or
sbb
add
inc
fcomps
adc
inc
out
subb
ret
mov
int3
movsl
pop
mov
loopne
std
and
cmp
repz
in
pop
hlt
fsubl
mov
sub
inc
into
push
test
mov
shrl
fidivs
popa
ret
xlat
idivb
add
xor
sbb
test
sub
aas
inc
movsb
loopne
test
inc
ss
mov
stos
push
cwtl
dec
pop
rcll
or
pop
and
mov
out
rcll
in
adc
jecxz
les
movd
add
xchg
rorb
jo
mov
aas
jg
js
jge
movsb
ficoml
xchg
cld
mov
shrb
nop
mov
pop
in
xchg
and
popa
pop
mov
push
loop
enter
pop
leave
lahf
in
pop
cmp
in
bound
out
add
push
enter
xlat
loop
aaa
xchg
xor
pop
sbb
int3
inc
pusha
ljmp
pop
jae
shlb
ljmp
outsl
pusha
mov
mov
call
cld
hlt
mov
test
rcrl
xor
add
sub
push
mov
and
sbb
stos
inc
mov
neg
test
lds
cmpsl
loop
andb
mov
mov
out
addr16
lods
repz
pop
loope
sub
jo
scas
mov
xchg
jae
jns
or
cmc
push
outsb
mov
sahf
add
gs
cmp
clc
test
pop
jp
add
jge
xchg
xchg
loope
sahf
icebp
push
xchg
mov
popa
inc
mov
fsubs
stc
pop
inc
sub
enter
test
insl
in
loope
mov
pop
in
movsl
jb
sti
sbb
mov
lcall
sub
dec
jmp
mov
in
push
jae
sbb
jne
inc
stos
testl
xchg
or
add
hlt
movsl
std
push
jmp
add
sub
test
jae
jmp
cmp
movsl
mov
aam
rcrb
xchg
push
or
push
aas
add
adcb
jecxz
pop
mov
mov
aas
mov
repz
xchg
sub
or
test
enter
or
fidivrs
rclb
inc
lods
clc
mov
ja
cli
cmp
and
sub
fildl
jnp
mov
jbe,pt
mov
sbb
std
dec
cmpsl
mov
mov
scas
xor
dec
test
push
jns
popa
mov
ja
xorl
pop
sti
sbb
mov
add
jne
imul
loope
mov
mov
lahf
xor
int
or
mov
cmpsl
pop
lea
ja
pop
lds
cmp
xchg
lock
sub
mov
xor
xor
dec
ret
adc
adc
push
cmpsl
gs
outsl
pop
mov
jp
push
xor
or
adc
cmc
or
inc
ds
adc
or
shr
lea
subb
out
jno
xchg
xor
inc
mov
out
jb
mov
mov
xchg
imul
sbbl
push
and
xchg
cmp
testl
repnz
popa
sub
cmp
xor
cmc
xchg
pop
lret
lds
pop
in
ljmp
cmp
or
jb
cmpsl
fcmovbe
cmp
lcall
jne
sub
xchg
ljmp
push
insl
dec
mov
add
ret
repz
cli
xor
ss
push
xchg
push
inc
mul
push
and
mov
out
xchg
cwtl
inc
lds
inc
dec
aam
out
xor
les
leave
pop
push
icebp
mov
push
xchg
mov
jp
mov
jle
mov
inc
les
xchg
inc
cltd
push
adc
inc
test
repnz
adc
es
cwtl
pusha
mov
out
sub
inc
cmp
mov
shll
ret
outsl
int3
pop
cmp
xchg
test
cmc
fldcw
dec
add
movb
xor
sbb
repnz
adc
cli
ds
push
fistl
mov
in
jbe
mov
and
mov
jne
jmp
and
mov
add
dec
sub
push
xor
out
stc
or
test
mov
in
sbb
pop
repz
and
dec
jle
jbe
mov
push
and
jnp
call
ja
xor
mov
pop
jno
mov
in
cmp
mov
and
lret
dec
mov
pop
loop
mov
adc
and
subb
sub
add
sbb
sbb
shlb
clc
lahf
cmpsl
xor
enter
cmp
fimull
or
into
aam
mov
nop
in
adc
xchg
movsb
sub
mov
sar
rcrb
mov
lods
add
cmpsb
sbb
xchg
or
or
mov
jne
xor
leave
push
out
enter
mov
xor
add
inc
js
je
lret
pop
push
pop
or
out
mov
pop
push
dec
std
lcall
cwtl
inc
add
fsubrl
and
sbb
jno
nop
or
stos
movsb
jge
inc
xor
add
sbb
je
cmp
xor
pop
addr16
jl
fisttpll
mov
mov
into
sti
popa
inc
arpl
jae
xor
jb
adc
inc
fisttpl
jns
scas
repz
adc
sbb
push
inc
in
test
aam
pushf
adc
add
js
or
icebp
loopne
push
add
adc
stos
and
mov
jle
test
mov
or
mov
addb
insb
sbb
out
pop
xchg
mov
or
jp
shl
jbe
push
es
sub
sbb
movsl
insl
out
cmp
mov
xor
loopne
xlat
jo
scas
inc
xchg
aas
mov
xchg
xlat
cmp
lahf
aas
push
ffreep
and
jp
js
adc
and
movsb
call
push
in
lret
gs
popa
in
mov
shlb
inc
push
jmp
xchg
sbb
xchg
pop
lods
mov
add
sbb
mov
ficoms
out
mov
pop
mov
mov
cltd
cmpsb
lret
loop
cmp
or
fdivp
outsl
sti
sbb
dec
fimull
and
mov
mov
inc
dec
sahf
rorl
aaa
jns
jl
jmp
dec
mov
aad
sub
call
inc
aad
stos
inc
fs
xchg
inc
sbb
fwait
mov
inc
enter
xor
jno
pop
sub
in
sub
or
imul
jae
test
stos
jge
pop
sbb
sub
add
add
test
js
outsb
jns
push
sub
stos
cli
jp
inc
jne
cmp
mov
aas
stos
adc
int3
push
adc
mov
xchg
jle
rorb
and
loop
mov
dec
es
mov
inc
dec
mov
or
push
mov
aaa
pop
xor
test
fimuls
mov
xchg
mov
jb
adc
push
sbb
jmp
mov
inc
test
add
jp
mov
jg
jmp
cltd
xor
fcomps
or
lock
push
sbb
test
xchg
rcrl
jne
lcall
cwtl
mov
idivl
add
test
icebp
out
je
xor
mov
stos
xor
push
mov
iret
call
aaa
fbld
pop
test
xor
add
cmpsl
addl
into
jnp
pop
rcll
std
xor
mov
ss
adcb
pop
cli
and
jg
xlat
in
mov
in
or
js
rsqrtps
test
mov
popf
cmpsb
rcr
dec
test
inc
fcmove
xor
imull
loop
dec
xor
scas
xor
gs
clc
push
mov
mov
xor
fdivl
fldenv
mov
xorl
pop
loopne
cwtl
fsts
fldt
out
pop
addl
xchg
clc
inc
mov
fwait
push
inc
mov
inc
cwtl
inc
pop
cmp
xchg
shr
pushf
mov
mov
in
lds
sbbb
adc
adc
shrl
inc
xor
ja
jae
push
jno
push
sub
dec
into
mov
enter
test
xchg
lret
aaa
cmpl
daa
std
clc
sub
and
cmp
ficompl
pop
push
daa
push
jmp
push
imul
test
mov
sbb
sar
add
push
mov
sbb
mov
sti
mov
arpl
daa
mov
jnp
clc
ds
mov
jg
adc
imul
repnz
aaa
loop
fisubrl
addb
mov
cltd
popf
inc
push
dec
push
mov
lods
jns
push
inc
nop
movsl
fidivs
arpl
sbb
push
pop
jbe
jle
test
fs
mov
loope
jp
es
push
outsb
sbb
jno
adc
fwait
inc
fs
cmp
sbb
repnz
sub
dec
cmpsl
push
mov
ja
lret
jmp
fdivp
ret
mov
or
ss
test
xor
sahf
sbb
mov
orl
sub
add
mov
in
pop
add
jbe
hlt
divl
inc
lahf
jb
xor
mov
push
adc
or
mov
add
mov
mov
sub
add
xchg
add
push
jmp
cmp
sub
add
cmp
inc
mov
leave
and
mov
scas
xchg
jle
inc
xorl
push
hlt
lods
add
push
push
ljmp
ret
mov
push
aam
outsb
xlat
pop
push
mov
pop
lock
lret
jbe
cmpsb
inc
pop
in
mov
or
aas
jnp
mov
add
mov
xchg
imulb
lds
pop
ss
rorb
ds
movsl
daa
leave
je
mov
vpinsrw
mov
push
push
inc
xchg
lret
lret
pop
push
mov
pop
cmpsb
sbb
inc
cmp
cmp
cmpsl
dec
ljmp
pop
sub
test
cmp
xor
mov
inc
mov
dec
bnd
ret
aad
xchg
and
jp
or
aad
jp
pusha
repnz
adc
jns
add
sahf
push
inc
adc
or
mov
stc
out
push
shlb
cmp
stos
test
mov
jne
stos
in
xchg
loop
pop
and
sar
pop
jae
xor
stos
aaa
add
stos
adc
adc
ss
xor
add
stos
int3
ret
je
rorb
mov
push
popf
sub
mov
and
lock
inc
hlt
push
sub
dec
cmc
fptan
orb
hlt
pop
repnz
ret
pop
jnp
adc
xchg
adc
push
arpl
xor
adc
pop
cmp
fiadds
mov
movsl
cmc
dec
enter
outsb
mov
popf
call
cmp
add
mov
sub
in
adc
rol
clc
jae
mov
mov
add
sarb
movsl
sbb
imul
sub
pusha
orb
push
les
and
cltd
fdivrs
pop
gs
ljmp
cld
sbb
insb
rcrl
xchg
jnp
xchg
xchg
cmp
cwtl
dec
and
xchg
jecxz
out
sbb
mov
sahf
aam
push
pop
ss
mov
and
or
adc
popa
test
ljmp
fwait
imul
or
jne
sub
iret
std
xchg
inc
mov
xorl
mov
xlat
js
jns
mov
inc
xor
cmp
xchg
fs
mov
lods
dec
mov
mov
aas
sub
cmpsb
mov
leave
pop
rclb
push
dec
into
add
jo
inc
sub
ljmp
int3
rorb
cmp
xor
mov
pop
push
imul
or
adc
enter
mov
pop
scas
rolb
cs
das
sti
pop
into
inc
fisttps
mov
mov
ficompl
and
ret
sbb
outsb
push
ljmp
sbb
mov
aad
pop
shl
mov
adc
mov
mov
cmpsl
jbe
fucomi
lods
pop
xchg
push
and
jecxz
fsubr
loope
push
dec
lret
mov
pop
in
jns
and
pop
rorl
daa
pusha
jg
jmp
and
pusha
popf
outsb
xor
jg
add
and
int3
stos
add
loope
cmp
xchg
pop
sub
fidivrl
inc
dec
cmp
cs
bound
rorb
pop
push
rcrb
popa
pop
ja
aam
and
cmp
sbb
cli
dec
inc
jle
ror
out
mov
jecxz
leave
sti
xchg
xor
dec
addr16
adc
aad
movsb
cmp
or
xchg
shll
cwtl
sbbb
jo
add
and
stc
inc
adc
out
movsb
lret
insb
dec
dec
mov
int3
push
bound
cs
xchg
xor
repz
mov
pop
jns
lahf
shrb
aaa
mov
fwait
add
jge
mov
and
sub
xor
shlb
inc
xchg
mulb
push
mov
or
mov
jl
lcall
shll
lahf
not
icebp
test
xchg
jg
cmp
add
mov
in
or
xchg
gs
fnsave
mov
push
cmp
hlt
push
add
in
fwait
js
js
jo
pushf
mov
xor
add
add
mov
or
mov
dec
push
mov
int3
cmp
in
cli
clc
or
call
je
into
inc
movsl
lret
outsl
roll
popa
sti
jle
dec
sbb
in
int
cmpsb
sub
loope
or
pushf
dec
jbe
sbb
orl
loopne
jnp
out
xor
and
adc
stc
push
inc
call
xchg
sahf
pop
int3
mov
insl
or
or
repz
sahf
aaa
xchg
jb
ret
adc
shrl
pop
inc
inc
add
add
out
ror
mov
shlb
loope
pop
stos
cmp
push
mov
sub
movsb
xchg
addl
or
fdivrs
movsl
xchg
jb
jp
sahf
pop
cltd
adc
push
hlt
xchg
mov
daa
mov
nop
xchg
xor
pop
enter
sub
int
or
mov
push
sbb
insb
push
mov
inc
add
imul
cltd
sbb
jl
mov
xor
ficomps
sub
cld
sub
ds
inc
fisttpl
or
daa
addr16
outsb
pop
movsl
lea
sub
les
mov
mov
imul
push
lret
movsl
push
dec
dec
xchg
adc
jnp
into
mov
je
or
loop
dec
pop
pusha
cmpsb
xchg
lea
outsb
aad
mov
jo
xor
mov
pop
test
dec
jae
test
jge
jge
fdivrs
scas
stos
pop
lahf
outsl
mov
out
sbb
cmp
jo
xlat
pop
jo
mov
inc
and
das
fists
sub
das
pop
pop
cltd
jnp
arpl
cmpsl
pusha
out
push
cmp
mov
push
mov
loope
sub
xchg
out
push
out
inc
fadds
dec
xchg
in
sub
insl
pop
mov
adc
mov
or
dec
mov
ljmp
inc
stos
es
icebp
scas
or
lret
sub
rclb
mov
mov
sbb
insl
mov
add
xchg
jmp
jb
xor
das
jecxz
fldt
and
popa
shlb
sub
pop
clc
pop
test
dec
inc
inc
cmp
xchg
adcl
inc
cmp
test
inc
inc
xchg
sub
sbb
ja
pushf
sub
sub
lods
mov
xchg
je
inc
push
lods
cmp
xchg
cmpb
sbbb
sbbl
cmp
dec
in
sbb
divb
xorb
xchg
popa
std
test
insl
adc
mov
ret
and
insl
adc
sahf
pushf
popf
aad
imul
jns
fmuls
fs
cli
dec
pop
fdivr
xor
sub
scas
movsb
jle
das
insb
push
test
clc
dec
outsb
inc
loop
sbb
mov
add
or
mov
fisttps
ja
mov
out
popf
dec
das
incl
mov
sbb
cmpsl
xchg
adc
loopne
je
xor
sti
aas
jne
ja
test
dec
movsb
test
pop
loop
enter
icebp
incb
popf
and
int
cwtl
push
jg
xchg
or
adc
and
nop
inc
cli
mov
adc
cmpsb
adc
inc
es
lahf
cmc
xlat
xor
in
adc
xor
test
popf
jo
cmpsl
jnp
dec
xchg
push
ds
pop
xor
sbb
push
sub
sbb
adc
bound
es
push
push
js
dec
sub
inc
cmp
rcr
add
fst
cmp
lret
jb
mov
cli
adc
lea
mov
std
push
sbb
lahf
fidivs
jb
cmp
test
cmp
insl
cltd
and
push
fsubl
fisttps
mov
mov
int
inc
cmpsl
addr16
pop
or
cmpsl
jle
cmpb
and
cmp
jg
add
mov
push
jns
scas
xor
sbb
stc
jl
sub
pop
out
pop
push
inc
test
inc
sub
sub
push
mov
loopne
xor
pop
shll
xchg
gs
jb
xlat
je
push
xlat
jg
outsl
stos
stc
xchg
lahf
fsubrs
shr
sbb
sbbl
loopne
jmp
xchg
aam
pop
cmp
adc
pop
and
add
ds
lock
iret
dec
std
stc
out
cmpsl
dec
ds
dec
or
xlat
fs
jecxz
sub
jne
inc
cmp
pop
xor
sti
inc
and
sub
stc
fs
mov
pushf
push
lods
insb
sub
pop
test
mov
or
pop
into
pushf
mov
sbb
sub
aas
push
fnstenv
ficoms
xchg
mov
sti
dec
out
push
xor
and
pop
imul
test
cmp
pushf
mov
scas
stos
frstor
daa
push
pushl
loop
bound
mov
popa
repnz
dec
pop
add
push
xchg
adc
push
mov
cld
mov
test
aad
nop
push
xchg
pop
lcall
popa
and
sbb
add
cmp
rolb
xchg
add
push
inc
jl
sub
jne
xchg
outsl
xor
and
or
cld
pop
lock
sti
out
test
mov
jae
ja
adc
popf
mov
fadds
mov
add
fidivrs
js
jne
push
lret
mov
mov
push
imul
subl
sub
and
inc
pop
adc
push
lds
repz
hlt
iret
lea
pop
adc
jmp
rcl
add
outsl
lods
aam
sbb
loope
stos
fldl
push
lods
jecxz
and
mov
adcb
mov
inc
addr16
dec
insb
outsb
xchg
or
out
in
mov
pop
je
or
mull
shrl
inc
xchg
call
xchg
jp
mov
stos
pop
int3
and
int3
inc
jle
pop
popf
mov
dec
testb
xchg
dec
xor
add
adc
movsl
push
mov
insb
gs
test
rcrl
leave
add
push
xor
arpl
subl
ret
cmp
jns
or
loope
pop
adc
je
movsb
xchg
test
clc
ljmp
lcall
bound
and
mov
push
mov
aad
jo
inc
and
decb
adc
push
fists
in
jae
push
xorl
shl
cmc
and
ljmp
je
inc
pop
ret
pop
xor
cltd
mov
sub
dec
xlat
jns
pop
stc
in
mov
movsl
rorl
and
mov
shl
inc
movsl
add
cmp
jmp
pop
sub
inc
scas
xchg
inc
dec
lret
jmp
mov
xlat
repz
xchg
pop
jmp
jo
insl
push
aam
push
fnstsw
stos
cmp
jl
and
stos
xor
sbb
das
push
fucom
jle
pop
push
stos
roll
jmp
mov
fbld
jne
and
test
cmc
sbb
ja
xlat
loopne
in
test
leave
xor
adc
decb
jl
mov
and
inc
sub
mov
fisubl
fs
fisubrs
pop
xchg
pop
or
push
mov
das
lods
lahf
jae
or
mov
mov
jnp
js
push
into
mov
cmc
cmp
out
testb
inc
es
lds
sbb
lock
mov
popf
push
dec
mov
push
insb
dec
mov
iret
or
testl
movsb
mov
addr16
add
negb
mov
ss
mov
das
outsb
lods
scas
jle
jmp
std
stos
xor
nop
shr
nop
cmp
mov
sub
jp
cmp
mov
mov
xchg
adc
dec
arpl
in
dec
call
jp
sub
je
les
inc
or
xor
xor
in
ret
data16
mov
mov
jne
jle
fwait
testb
jno
mov
aaa
inc
adc
jmp
movsl
test
jb
sbb
jl
sbb
sbb
sub
ret
insl
mov
xor
ficoms
adc
jns
pushf
adc
push
rorl
movsl
add
scas
dec
add
cli
push
jae
mov
je
adc
hlt
jbe
mov
pusha
mov
pop
popf
inc
jo
inc
or
sahf
enter
jne
cmpsl
cwtl
loopne
out
mov
jnp
and
out
in
movsl
push
mov
mov
mov
lret
repz
mov
stos
mov
cmp
or
xor
mov
sbb
mov
inc
xchg
mov
xchg
sbb
mov
pop
mov
cmp
and
cmp
jae
cwtl
xor
hlt
push
into
icebp
push
stos
lods
je
bound
dec
cmp
fdivl
jne
jle
sub
pop
pop
sbb
jns
sub
scas
mov
cmp
add
popa
xor
mov
rol
repnz
pop
fistps
jmp
cbtw
push
pusha
mov
push
dec
xchg
fists
in
dec
rcrl
bound
test
push
cmc
lret
mov
pusha
adc
lahf
mov
outsl
fidivl
test
imul
jge
xor
xchg
mov
in
divb
sbb
inc
xchg
test
insb
mov
xchg
push
pop
test
inc
mov
stos
cmpsl
daa
push
jae
lock
lahf
out
sar
mov
dec
imul
insb
sarb
mov
nop
inc
or
mov
mov
fsts
mov
cmpsl
pop
add
cmp
in
negb
clc
jns
cs
push
imul
sub
dec
inc
sbb
mov
aaa
stos
into
push
jb
insb
pushf
jmp
pop
movsl
jle
mov
and
and
arpl
outsb
fisttps
add
dec
mov
notb
mov
jg
and
xchg
mov
sbb
jge
aaa
inc
dec
xchg
in
dec
data16
dec
lds
pop
in
xor
sbb
movsb
bound
out
pop
je
test
pushl
mov
push
in
pusha
ds
imul
pushf
jno
bound
sub
xchg
scas
bound
push
pop
loop
sbb
cmp
push
popa
aaa
into
jmp
imull
pop
das
lods
lds
or
push
sub
inc
mov
cltd
aaa
loope
push
or
inc
sti
fildll
insl
xchg
shll
xchg
pusha
mov
push
adc
xor
shrl
dec
sbb
sahf
jg
or
push
hlt
xchg
loopne
fucomp
addr16
pop
rol
dec
ds
psubq
jne
jge
pop
mov
ret
pop
jb
pop
mov
mov
testb
push
mov
ja
inc
xor
movsl
fwait
mov
lahf
enter
jnp
add
push
sub
outsl
outsb
sbb
fcomip
cmp
daa
out
jo
and
cli
push
sbb
mov
jg
rcll
sbb
ds
out
dec
subb
jmp
mov
and
sbb
fadds
xchg
push
nop
shr
xchg
inc
das
out
inc
mov
icebp
jae
adcb
jle
jl
cli
jmp
mov
mov
jns
loopew
add
ss
add
arpl
in
enter
repz
insl
in
sbb
cmp
nop
adc
adc
xchg
sub
imul
test
mov
xor
fdivrl
jns
mov
popf
pop
cmc
repnz
rcrb
lds
sbb
lcall
inc
out
cmp
pop
pushf
mov
arpl
sub
jecxz
daa
mov
rcll
adcb
jne
sub
jmp
or
dec
loopne
pop
xchg
mov
sahf
stos
mov
jl
adc
enter
outsb
outsl
leave
test
mov
sbb
lcall
inc
fldenv
sub
mov
pusha
imul
push
xor
dec
mov
xchg
mov
sbb
xchg
mov
in
test
das
sbb
cli
mov
mov
ret
adc
push
xchg
add
push
loopne
and
mov
iret
movsb
out
push
shll
push
lahf
outsb
lahf
or
stos
inc
cmpl
lahf
push
mov
mov
js
sub
hlt
or
sub
scas
cmp
fisubrl
inc
inc
xor
xchg
push
loope
cmpsb
ret
ja
sub
mov
add
in
dec
out
xlat
xchg
cmp
imull
jo
sbb
loope
popf
addb
pop
mov
add
and
in
dec
sti
jle
bound
fcoml
lea
out
lods
mov
push
jge
lret
fs
dec
or
dec
test
or
xor
sti
adc
sub
fsubr
inc
bound
pop
and
negl
stos
mov
shlb
cmp
stc
iret
lea
ds
sahf
jo
aaa
sbbb
dec
dec
adc
xchg
sub
and
aas
or
or
rorl
test
cmp
pop
dec
mov
lds
rorb
cmpsl
mov
outsb
dec
loop
jae
jl
pushf
cli
ljmp
push
and
in
add
ljmp
outsl
lods
jns
dec
cmc
cmpsb
pop
sbb
ret
dec
icebp
inc
mov
inc
std
ds
dec
mov
ss
cmpsl
out
sti
lea
sub
pop
pop
mov
fdivp
inc
jl
xchg
add
xor
lods
test
push
mov
xor
jl
repz
es
les
ret
mov
scas
cmp
sti
clc
pop
sbb
mov
ds
stc
mov
in
xor
insl
ss
jecxz
push
std
mov
pop
push
cltd
jo
popa
pop
sub
mov
xor
pop
and
lock
bound
add
cmp
xchg
sub
icebp
xchg
imul
xchg
sub
xor
xchg
ficoms
jno
adc
jns
xlat
fldl
adc
adc
out
push
stc
jne
test
sub
mov
push
lods
mov
xchg
les
push
mov
dec
movsl
das
pop
mov
xor
std
mov
xchg
mov
iret
sub
aam
push
das
push
ds
movsl
lcall
cmp
nop
xchg
adcb
lahf
add
jnp
mov
mov
and
std
adc
push
rolb
mov
xchg
lds
jno
pop
or
cmc
sbb
cmpsb
pop
add
mov
roll
out
mov
adcl
cltd
pop
cmp
sub
lret
mov
scas
sub
sbb
xor
add
cmp
leave
push
rorb
add
pop
jbe
aad
insl
pop
add
push
movsl
adc
bound
jbe
sbb
add
fdivl
daa
xor
xchg
push
stc
cwtl
int3
xor
dec
push
xchg
lret
cmp
pop
pop
outsb
jecxz
sbb
cmp
mov
decl
popa
mov
int
dec
lods
data16
call
popa
sub
jmp
cmp
repnz
xchg
cmp
cmp
sub
fcomps
xchg
xor
movsl
dec
cld
jae
stc
sub
fmul
jne
pop
cmpsb
jge
out
xor
jg
outsl
xchg
je
xlat
test
fidivs
pop
adc
mov
inc
je
push
lock
push
or
rorl
sbb
push
std
arpl
in
popf
mov
mov
mov
hlt
push
fsubs
sub
dec
sbb
or
ss
push
je
jmp
xchg
jb
push
add
adc
or
sub
and
dec
mov
icebp
cmpl
mov
andb
and
jg
pop
add
cld
outsb
and
cld
push
push
pop
movsb
xchg
xor
lcall
lea
push
jbe
and
and
movsl
test
xor
fildl
adc
js
cwtl
mov
xor
repz
mov
push
or
imul
sti
jecxz
sbb
pusha
das
sbb
call
repnz
inc
push
fcoms
cmpsl
mov
push
out
pop
dec
push
loopne
aad
jp
mov
adc
push
fistl
xor
scas
pop
popf
in
pop
adc
and
xor
jge
addr16
shlb
adc
xchg
lahf
mov
loop
les
pop
add
jo
ret
cmp
lcall
hlt
jno
stc
add
aaa
dec
inc
ficoml
test
loopne
test
mov
push
inc
fdivrs
pop
push
fwait
aaa
cmp
into
add
lods
xor
mov
cmp
xchg
bound
incb
add
mov
xchg
inc
iret
mov
mov
pop
and
out
lods
dec
sti
int3
or
mov
int3
lods
mov
xchg
cmpsb
bound
add
xchg
fiaddl
inc
xlat
mov
sbb
insl
sbb
pop
add
movsl
add
mov
lods
test
xchg
fimull
mov
cltd
cmp
add
movsb
rorl
inc
leave
nop
pop
lcall
call
cmpsb
cmp
xchg
adc
push
push
in
stc
dec
or
rcl
push
lcall
mov
ljmp
rol
inc
outsb
cmp
add
lcall
fcmove
stos
lods
es
sbb
outsb
cli
xchg
xchg
ds
movsl
jbe
or
lods
jmp
aad
sub
es
mov
pop
mov
out
enter
shll
push
jnp
add
inc
out
jg
lea
fbstp
int3
jb
outsb
lock
sub
lods
mov
dec
int3
fcompl
pop
lock
out
xorb
rcll
sub
les
mov
pushf
pop
test
or
or
icebp
add
push
add
sbb
fmull
dec
rorb
xor
inc
scas
mov
daa
sbb
sub
push
out
adc
ss
js
ja
aad
mov
ss
cmp
test
ss
sub
mov
mov
loop
in
cltd
lds
lea
xchg
mov
es
lret
out
shlb
xor
pop
popa
jecxz
jb
mov
loopne
ljmp
push
cmpsb
add
jnp
insb
and
std
mov
in
iret
xchg
ja
loope
jle
sahf
or
xchg
sbb
or
out
lds
outsl
mov
mov
hlt
repz
xor
add
xor
ja
int3
sbb
mov
jl
out
mov
mov
cltd
cmp
mov
shr
add
movsb
xchg
dec
fcomip
adc
push
push
stos
dec
mov
fistpl
jmp
pop
mov
jmp
mov
sbb
mov
jb
cmp
jne
jnp
cltd
jle
add
dec
gs
aaa
adc
push
and
outsb
pop
sahf
dec
lret
ret
aam
sub
arpl
and
sahf
xchg
dec
fucomip
pushf
jmp
add
and
jne
js
push
movsb
ljmp
jo
in
scas
inc
and
xchg
mov
rolb
sbb
int3
js
imull
jb
xchg
sub
mov
adc
push
or
hlt
imull
cmp
mov
hlt
aad
inc
jmp
sahf
xchg
and
inc
fs
and
adc
loop
fisubl
pcmpeqb
or
push
cs
mov
jmp
adc
add
mov
fstpl
inc
mov
dec
sub
shlb
leave
xlat
pop
xor
mov
cli
insb
push
aas
jns
sub
jl
cmpsb
and
hlt
int
dec
or
pop
add
xchg
lods
sub
lret
dec
movsl
jecxz
pop
adc
in
mov
in
sub
cli
jmp
mov
imul
mov
popa
insl
xchg
mov
pop
mov
add
push
sub
xrelease
lods
or
out
ret
cltd
fisubs
dec
idivl
fs
ret
rorl
ljmp
outsl
or
aam
dec
mov
jae
or
and
adc
push
aad
xor
mov
mov
div
les
cld
ja
pop
push
adc
pop
push
mov
add
xchg
loopne
mov
jae
in
mov
or
pusha
dec
push
stos
leave
aad
push
mov
pop
adc
insl
dec
shl
int
sbb
jle
or
xchg
sub
and
adc
pop
sub
das
mov
mov
push
cmpb
cmpsb
cmp
scas
dec
push
sub
sbb
xor
xchg
jo
sbb
jecxz
jae
mov
das
cmp
pop
mov
sub
xchg
call
fldcw
jle
mov
data16
mov
lret
jp
mov
stc
xchg
lods
mov
sbb
xchg
sti
jo
inc
push
adc
repnz
mov
xchg
sub
addr16
pop
scas
idivb
xchg
mov
or
rcrb
pop
sub
or
adc
mov
sub
and
inc
lahf
sbb
push
add
in
add
lock
xor
jecxz
push
das
pushf
xlat
shrb
fsubr
ja
mov
push
xchg
aaa
ds
scas
adc
subb
call
inc
cmp
sub
into
arpl
sbb
jnp
push
mov
jp
cmpsb
sbb
icebp
rcl
xor
daa
pop
xchg
cltd
clc
pop
outsb
ds
inc
or
les
xchg
stos
lock
mov
and
stos
xchg
sbbb
ljmp
mov
add
lcall
mov
js
repz
movsb
mov
sbb
fnstcw
dec
pusha
test
sub
push
push
mov
repz
movsl
sub
jne
and
movsb
xchg
fsubs
aad
mov
push
sbb
xchg
loopne
adc
lahf
xor
jecxz
insl
mov
inc
into
lret
pop
sub
js
cmp
jg
ret
inc
cmc
cmp
adcb
das
and
mov
nop
not
xchg
pop
xor
mov
xchg
nop
mov
ljmp
clc
sbb
xchg
inc
and
or
add
mov
jbe
add
mov
dec
jnp
aaa
cmp
sub
imul
pop
lock
cmp
xor
loop
jmp
xor
sbb
pop
data16
push
dec
leave
adc
fs
xor
cmp
gs
jle
push
mov
dec
inc
push
push
mov
lods
push
jg
je
jl
pop
sahf
adc
mov
xchg
roll
jns
dec
push
mov
daa
lea
pop
dec
popf
pop
shrl
dec
test
sub
mov
sbb
test
lcall
sbbb
imul
mov
mov
rclb
movsb
out
and
pop
xor
movsl
stos
mov
jp
pop
lret
lds
jmp
cmp
adc
sahf
adc
mov
push
mov
dec
add
mov
add
icebp
insb
sti
test
mov
cld
adc
pop
cld
rorl
pop
movsb
inc
adc
adc
adc
insb
std
lock
in
outsb
ror
and
nop
in
adc
cmp
jle
lcall
mov
jo
mov
sbb
pop
dec
dec
clc
sub
add
sub
jecxz
sarb
jnp
shrb
push
mov
mov
push
sbbl
inc
adc
jg
test
jne
adc
xor
sbb
or
mov
inc
cmp
mov
repz
push
test
pop
jbe
push
scas
or
ret
inc
sbb
iret
hlt
inc
aas
push
movsb
sahf
adcb
jg
cmpsl
adc
clc
aaa
scas
loope
jl
dec
fisubrs
leave
mov
fisttps
scas
dec
data16
and
jno
sbb
jb
push
adc
outsl
cmp
les
inc
shrb
adc
pop
dec
push
jecxz
gs
adcb
aad
les
sbb
ss
lret
xchg
std
loope
cmp
fsts
std
dec
fldenv
push
shrl
outsl
xchg
stos
shrl
mov
push
in
pop
push
or
lds
out
clc
cmp
jnp
sbb
into
test
cmpsl
aam
fisttpll
inc
dec
dec
call
je
loop
push
mov
sbbl
aaa
aas
and
xchg
arpl
inc
in
es
mov
fstl
add
pop
push
cli
xor
mov
jg,pt
scas
sbb
mov
sbb
mov
loopne
adc
insl
adc
mov
mov
dec
pop
sbb
ja
jl
xchg
aaa
inc
jge
pop
mov
adc
mov
aaa
scas
out
sbb
xchg
stc
addr16
fldt
jo
jne
add
mov
mov
sbb
sub
mov
pop
or
shr
outsb
push
xchg
xor
daa
test
mov
and
fst
les
sti
addl
fs
jae
mov
lcall
mov
xchg
xchg
sbb
iret
adc
inc
xchg
inc
cmpsb
push
xor
cli
outsb
sbb
scas
popl
adc
pushf
add
push
or
pusha
ljmp
lcall
push
bnd
fsubr
mov
sbb
sub
popa
xor
sbb
adc
dec
sbb
pop
inc
sub
testl
repz
sub
mov
lock
pop
imul
inc
sbb
insl
jp
mov
lods
sbb
pop
xchg
fstl
xor
mov
sub
ret
push
subb
and
sbb
sub
movsb
xor
sbb
push
xchg
enter
std
test
shlb
mov
fldl
out
cmpsb
cmc
pop
mov
push
icebp
lcall
out
push
aam
cltd
and
std
lods
ss
or
mov
insl
pop
mov
or
mov
xchg
repz
pop
sub
ffreep
out
imull
aaa
cmpsl
mov
add
ljmp
mov
push
jne
sbb
int
hlt
dec
adc
xchg
pop
dec
sahf
hlt
inc
bound
xchg
movsl
inc
outsb
insl
outsl
xchg
insb
rcr
add
mov
pop
enter
mov
jmp
aad
mov
xor
data16
out
sbb
adc
insb
push
xchg
aas
xor
or
mov
fucomi
hlt
dec
cmp
into
push
mov
jmp
lahf
mov
outsb
aas
jne
mov
es
stos
aad
cs
sbb
in
jle
or
mov
push
popa
add
dec
lods
imul
dec
icebp
out
out
nop
int3
movsb
xchg
sbb
out
sub
adc
dec
inc
cmp
xlat
xor
lcall
jle
mov
push
mov
call
inc
lret
lea
mov
pop
inc
dec
adc
xchg
iret
negb
and
jno
or
in
cmp
cld
enter
pop
pop
fs
pop
add
xor
jmp
in
popf
out
adc
push
push
bound
movsl
inc
scas
mov
arpl
adc
iret
dec
pushf
push
repnz
iret
dec
push
outsl
clc
mov
lret
xchg
scas
pop
xcrypt-cfb
cmpsl
bound
pusha
mov
pop
notl
test
add
cmp
cli
flds
dec
out
mov
or
mov
add
movsb
mov
repz
xchg
jmp
push
add
adc
lods
jns
cmp
fwait
aad
sub
jg
jbe
xor
aaa
xor
pop
test
xchg
xchg
xor
jae
ret
dec
push
mov
dec
mov
inc
pop
ja
sti
add
repz
pop
sbb
clc
sbb
cmp
mov
mov
lcall
adc
jmp
dec
cld
jmp
sti
or
stc
cmc
sti
loopne
pop
cmc
out
imul
rol
movsl
cli
dec
roll
out
out
dec
inc
push
cmp
inc
int3
adc
enter
es
mov
lock
test
js
sbbb
mov
inc
test
andl
jg
pop
push
fwait
shl
outsb
inc
int3
push
mov
ja
ss
mov
add
iret
push
and
jmp
ds
fdivr
jb
ljmp
mov
aad
int
es
and
lret
dec
and
sub
adc
dec
dec
cmp
adc
pushf
xor
clc
xchg
das
iret
jns
mov
adc
push
rcll
fcomps
lret
adc
lret
nop
mov
sbb
fcmovb
adc
inc
pop
int3
jb
out
arpl
stc
lret
xchg
xchg
dec
jmp
push
mov
mov
xor
inc
stos
aaa
push
add
xchg
mov
mov
test
push
movsl
sub
or
leave
sbb
xor
jecxz
cli
add
adc
outsb
dec
xor
xchg
fstpl
stos
inc
test
out
ljmp
mov
mov
inc
pushl
push
add
sbb
sbb
pop
out
test
mov
dec
push
test
push
xchg
cmpsb
pop
mov
imul
js
int3
lock
sbb
js
rolb
xor
adc
data16
xlat
add
jecxz
cli
call
mov
and
mov
es
adc
dec
cltd
fs
jl
sub
jne
xchg
cmp
xor
mov
jb
das
add
add
sbb
cld
mov
jae
stc
cmp
cltd
mov
cs
popa
mov
cltd
dec
stc
push
pop
repnz
insb
adc
sub
leave
or
idiv
jg
and
cmp
cmp
jg
movsb
enter
xchg
nop
dec
inc
inc
scas
shlb
ja
out
mov
in
ljmp
jp
push
xchg
push
xor
cmp
rorl
das
jno
cli
adc
lret
add
ret
and
shrb
jne
pop
push
orl
sbb
xchg
mov
lcall
lret
xchg
jae
repnz
mov
pushf
aas
sbb
sar
in
push
sub
nop
in
mov
or
xor
pop
hlt
test
jmp
mov
push
jg
inc
mov
loopne
inc
mov
into
cltd
repz
loope
repz
push
cmc
and
pushf
jae
jb
push
lret
mov
or
cmp
dec
sti
in
lea
mov
int3
in
sarb
cmc
cmpsl
xor
jne
dec
cwtl
icebp
adc
out
cwtl
jae
mov
addb
daa
lcall
outsb
in
add
jge
shll
imul
adc
cmp
rcll
dec
dec
mov
arpl
hlt
cltd
arpl
xor
dec
push
lds
cli
shr
pusha
pop
stos
inc
add
mov
std
ret
add
xchg
xchg
insl
mov
arpl
icebp
fistpl
les
pop
int3
ret
jmp
mov
sub
imulb
out
dec
or
adc
jns
jae
push
push
lea
outsb
cmpl
loopne
iret
addl
cmp
xor
xchg
or
jl
pop
push
and
ja
pop
mov
xor
aas
out
enter
mov
sbb
in
dec
cmp
dec
add
or
movsl
imulb
dec
pop
std
pop
lcall
aad
das
push
fstpl
xchg
test
cli
iret
pop
cmove
aad
shlb
cs
jb
shl
dec
je
fwait
loop
ds
clc
xchg
and
sbb
lods
push
jmp
test
jg
and
lahf
mov
pusha
jae
mov
insl
int3
into
and
mov
cmp
decl
shrd
mov
add
push
outsl
xchg
sub
filds
pop
or
jp
repz
enter
adc
inc
shrb
scas
loope
inc
in
mov
loope
adc
rorb
xchg
iret
push
lcall
or
cmpsb
iret
and
xchg
push
mov
shlb
sub
sbb
and
enter
xchg
push
fcoml
insl
cmc
push
cmpsl
xor
mov
outsl
incb
mov
ds
shlb
mov
mov
push
jle
ljmp
bound
fdecstp
xchg
push
ret
lret
shrl
loop
movsb
cld
daa
test
dec
or
fwait
ret
outsb
stos
arpl
idiv
std
cld
lcall
xchg
jp
bound
push
push
or
adc
xor
mov
lds
or
les
xchg
sub
dec
orb
iret
sbb
fbstp
jecxz
lock
or
cmp
mov
popa
ja
mov
push
xchg
jecxz
loopne
mov
leave
cmc
xchg
or
pusha
xor
lods
jns
imul
fistpll
incb
dec
sbb
mov
bound
xor
mov
leave
idivb
cmp
push
push
inc
jno
mov
cs
flds
sub
in
negl
leave
dec
sbb
sbb
push
push
aam
mov
pop
int
cmp
sub
std
popf
fs
mov
imul
mov
rep
and
cs
lret
int
test
into
mov
out
cltd
addr16
inc
std
ja
mov
dec
imul
fcmovnb
loopne
or
movsb
fldcw
inc
ljmp
lret
push
sbb
dec
movsl
mov
mov
and
scas
ret
mov
scas
imul
mov
pushf
cmp
frstor
add
xlat
sbb
or
addr16
push
xchg
cmpsb
test
mov
dec
add
inc
pushf
ret
xchg
inc
inc
sub
cwtl
daa
xor
or
loope
pop
sahf
out
or
dec
fistps
cmp
lcall
test
pop
shlb
je
ss
popf
loopne
sub
js
stos
dec
lcall
pop
in
jbe
sub
out
jae
in
adc
jg
jb
dec
sub
pop
cmp
jmp
and
jns
dec
sbb
push
xchg
push
int
imul
adc
dec
cwtl
inc
add
outsl
into
outsb
or
jle
mov
dec
fstl
sub
hlt
fdivp
xchg
mov
std
or
popa
lock
add
lock
pop
stos
add
loop
and
pop
jns
scas
mov
jo
mov
sub
jb
mov
filds
das
testb
test
stos
int3
inc
inc
adc
xchg
clc
aaa
rcll
mov
out
pop
inc
mov
push
mov
repz
cs
dec
lret
iret
jae
jnp
stc
pop
xor
or
cmp
and
pop
jns
push
and
and
or
xchg
inc
push
mov
add
out
div
fcmovbe
dec
or
mov
cmp
mov
mov
mov
xchg
inc
movsb
adc
push
sbb
ja
adc
cmp
xor
mov
adc
shr
es
aaa
and
pop
add
enter
mov
lods
sub
push
loopne
inc
add
mov
aaa
fisubs
ret
int3
sub
subl
insb
xchg
push
sub
cmc
add
add
cmp
jb
cmp
lret
pop
adcl
popa
inc
rorl
lea
sbb
xor
xor
mov
lods
xchg
mov
pop
and
in
cmp
loopne
and
pop
mov
sub
out
xor
out
push
lds
popf
out
xchg
xor
stc
icebp
inc
xlat
xchg
aas
decb
movsl
sbb
into
lahf
rcll
inc
fidivrs
push
dec
mov
cs
in
into
movsl
push
popa
mov
cmp
inc
jecxz
aaa
lcall
jb
cli
xchg
loop
sub
push
jle
dec
dec
xchg
icebp
aas
xor
push
stc
add
and
and
pop
push
out
adc
les
imul
adc
lock
cwtl
mov
pop
jmp
sub
add
rcrb
cmpsb
mov
std
xchg
cwtl
outsl
outsl
inc
mov
sub
mov
int
outsb
jecxz
dec
mov
pop
das
popa
cmc
push
mov
pusha
daa
xor
xchg
call
shll
mov
sub
sbb
iret
dec
shl
dec
mov
stc
stc
mov
shl
inc
mov
outsb
ret
inc
push
adc
fwait
aam
xchg
sti
mov
push
cmp
sub
mov
shl
lea
fucomi
fnstenv
aad
mov
push
rorl
cmp
cltd
xchg
stc
xchg
nop
add
mov
jl
or
cmp
jno
xlat
and
push
xor
out
push
pop
mov
test
scas
adc
sbb
jl
pop
push
jae
movsl
dec
fcomp
cmp
push
push
inc
cmp
iret
cli
mov
cmpb
pop
outsb
mov
cld
sbb
inc
inc
xchg
dec
pop
xor
faddl
sub
pusha
nop
xor
fmull
fildll
aaa
push
int3
push
ss
sbb
fwait
jmp
aaa
push
movsl
ror
shrb
inc
xchg
arpl
hlt
mov
jge
hlt
int
das
lret
or
or
jp
dec
pop
push
fdiv
fstpl
adc
rclb
lret
sub
mov
push
jb
sbb
add
ds
outsb
js
cmp
xchg
bound
mov
push
loop
sahf
mov
mov
scas
js
push
push
repz
jmp
fcomps
pop
es
fstp
xlat
or
into
jmp
adc
dec
addl
mov
fnsave
or
or
and
lcall
int3
mov
fstp
or
int
call
repz
mov
aam
lcall
xor
cmp
popf
adc
ljmp
add
mov
leave
cli
inc
sub
test
scas
pop
jle
js
mov
mov
sub
scas
mov
mov
lret
sub
outsl
icebp
push
jg
adc
inc
mov
add
cmp
mov
cmp
fs
adc
adc
pop
push
inc
inc
cli
mov
imul
adc
ror
inc
pop
je
dec
add
mov
push
shlb
jmp
je
sbb
stc
in
mov
addr16
jo
test
mov
lock
cwtl
scas
lret
or
mov
jl
rcl
xchg
ss
imul
or
cli
mov
jmp
mov
mov
mov
sahf
movsb
lock
rcrb
mov
and
outsb
je
test
jae
out
mov
aad
cmpsb
aas
lcall
mov
repnz
rorb
pop
push
sbb
and
incl
jns
fidivrl
adc
inc
push
out
pop
int3
in
push
or
add
jb
inc
mov
imul
mov
or
sbb
sbb
mov
inc
lds
subb
ja
into
and
xorl
mov
mov
outsb
ss
insb
inc
fisubrl
stos
subl
jmp
mov
sub
lock
sub
daa
mov
test
hlt
stos
or
mov
popf
jp
lds
xchg
cmpsl
aaa
pop
inc
push
das
mov
clc
stos
loop
and
mov
pop
sar
out
call
cli
push
push
and
mov
test
cmp
ret
int
leave
or
sbb
leave
out
xchg
shl
stos
jg
add
sbb
adcl
fcmovbe
or
aaa
sbb
mov
mov
fcompl
aaa
lods
iret
arpl
xchg
dec
sahf
cli
sahf
adc
iret
sub
lds
insl
jns
arpl
daa
adc
out
push
pop
movsb
and
or
das
cmp
mov
repz
mov
lret
xor
pop
mov
and
dec
scas
mov
jb
js
mov
into
pop
mov
icebp
inc
dec
cmc
cmp
rol
mov
stos
hlt
shll
enter
inc
imul
jg
movsl
xchg
and
mov
out
dec
push
sub
inc
jne
sahf
xor
pop
inc
add
js
insl
popa
dec
shlb
jmp
lea
lods
lcall
loope,pt
fwait
cmp
out
cmc
pusha
inc
sbb
or
jl
aad
push
sti
insb
mov
inc
and
addr16
cli
mov
or
xor
sahf
out
fs
mov
fmuls
lahf
cmp
sub
popa
xor
mov
fdiv
ret
sti
clc
ret
sub
loopne,pt
daa
mov
sub
mov
fidivs
pop
das
pushf
mov
jbe
imul
inc
xor
gs
lahf
jmp
add
jae
sbb
into
lods
mov
in
jno
or
or
insb
lea
and
xchg
mov
adc
mov
clc
daa
scas
push
mov
cmp
inc
push
xchg
inc
enter
into
jo
test
fistpll
mov
flds
push
decl
sti
into
inc
mov
sbb
push
out
cltd
adc
inc
pop
dec
xchg
pop
loope
iret
cmp
jmp
nop
lcall
scas
lods
xchg
pop
dec
mov
andb
arpl
insl
jle
insl
dec
mov
jbe
sbb
jmp
jmp
cmp
inc
sub
das
sbb
sbb
cmp
inc
nop
and
sub
cld
lahf
fistpll
sahf
insb
arpl
lea
incb
sub
mov
sti
fsubrs
sbb
xor
icebp
loope
pop
in
orb
jne
mov
and
mov
dec
xchg
pop
outsl
lahf
mov
mov
sarb
faddl
frstor
lret
shll
fwait
mov
scas
pop
aaa
mov
push
pop
arpl
mov
inc
in
mov
insl
sub
mov
rorl
jecxz
subl
jae
or
call
dec
stos
mov
jae
add
shlb
fadds
fidivl
pop
xchg
js
jmp
imul
aad
fcmovnb
lret
xchg
in
popa
int
jge
jp
hlt
int
xchg
sbb
pop
into
pop
hlt
js
repz
movsb
test
int
pop
das
push
std
std
xor
pop
and
jmp
stos
lahf
stos
outsb
cmc
add
test
shrb
sbb
addr16
sub
repz
mov
pop
dec
xor
lret
cmp
fisttps
inc
ret
xchg
popf
inc
or
lods
or
xor
movsb
mov
sahf
or
lock
jl
xchg
jo
sbb
jg
lods
negb
xorl
push
sub
cmp
or
or
jp
xor
lods
push
idiv
jne
jmp
test
dec
or
in
pop
sti
inc
mov
add
cmpl
in
sbb
mov
pop
jmp
pop
dec
movsb
pop
call
out
aam
adc
adc
xchg
and
icebp
arpl
sbb
loope
sbb
mov
imul
inc
mov
xor
out
fwait
push
add
ror
imul
cwtl
aad
xchg
jnp
adc
leave
mov
mov
pop
adc
cltd
sub
lea
ret
insb
mov
pusha
or
rcrb
fnstenv
jp
cmpsl
in
repz
nop
fstp
mov
movsb
repnz
loop
fistl
sub
xchg
fmuls
and
loop
lods
pop
arpl
mov
icebp
addr16
mov
xor
mov
sbb
lods
push
loop
int3
add
jae
faddl
imul
fwait
and
test
enter
mov
daa
mov
mov
dec
mov
push
mov
inc
lds
and
je
mov
mov
dec
fisubrs
cmp
dec
add
popl
push
out
pop
shrl
aaa
add
fwait
pop
aas
sbb
xchg
scas
dec
jg
gs
sbb
xlat
mov
inc
mov
push
data16
mov
movsb
push
push
fimull
es
inc
outsb
dec
push
ret
pusha
mov
sub
xor
nop
sbbl
fsub
cmp
es
sbb
inc
mov
int3
mov
insb
addr16
mov
cmp
lods
shrl
push
test
dec
pop
es
push
daa
popf
jb
mov
jmp
mov
in
sub
test
mov
fwait
xchg
rolb
shll
out
stc
sub
cmp
push
mov
stos
test
stc
fldl
sub
cwtl
jle
sub
imul
imul
sbb
dec
dec
xchg
inc
and
push
pop
nop
mov
inc
adc
cmp
out
or
dec
inc
sub
xchg
xchg
ret
andl
mov
xlat
ljmp
imul
mov
mov
loope
mov
lods
jb
aam
repnz
adc
movsl
cli
cmp
shr
xchg
pop
push
movsb
adc
jl
shl
into
add
mov
aas
jg
test
pop
xchg
leave
xchg
and
aad
ljmp
jno,pn
loopne
jge
xchg
popa
or
int3
sub
xchg
jmp
test
pop
pop
inc
jmp
aaa
fcmovnbe
push
dec
in
aam
push
sub
into
adc
mov
xor
dec
inc
aas
into
ret
xchg
adc
xchg
sub
mov
mov
push
lret
je
and
adc
push
test
push
out
test
pop
clc
les
mov
aad
aas
push
push
sub
in
imul
mov
mov
aam
sub
sub
mov
xchg
aas
push
push
cmc
mov
and
xchg
pop
cmp
test
sub
sbb
push
fstpt
mov
in
lahf
mov
lret
mov
mov
outsb
push
ret
sbb
sub
mov
ret
pop
inc
jns
insl
pop
ret
mov
stos
clc
xchg
and
lods
dec
addr16
cmp
insb
cmp
cmc
pop
cmp
and
insb
jecxz
hlt
jle
cli
xchg
dec
in
jmp
inc
insb
cmpsb
mov
sti
cld
decb
push
and
pop
test
jg
mov
xchg
enter
clc
test
push
mov
in
xlat
add
fs
in
add
cltd
inc
mov
jae
dec
test
jle
mov
xchg
inc
sbb
iret
xor
jae
or
ret
pop
pop
adcb
xor
xchg
or
sub
in
sub
int
in
mov
js
push
gs
in
jle
push
mov
test
ret
mov
mov
xchg
dec
add
push
mov
pop
lret
loope
cmp
nop
mov
repz
loopne
sarb
add
lods
mov
sbb
inc
gs
jecxz
mov
movsl
lahf
int3
pextrw
jg
sub
lahf
sarb
dec
arpl
je
and
jp
inc
add
cmp
pushf
ret
daa
sbb
inc
sub
xor
push
push
imul
or
popa
gs
loopne
cltd
and
jg
lcallw
cs
aaa
mov
arpl
fdivr
xchg
mov
neg
mov
xchg
pop
xor
mov
or
cmp
aaa
mov
sbb
bound
sbb
das
outsl
sub
push
and
add
sub
fmull
mov
aaa
xchg
leave
icebp
test
dec
popa
scas
push
in
mov
mov
jg
lock
ret
inc
push
xchg
cmp
outsb
pop
popa
xchg
xchg
clc
lea
popf
mov
ljmp
adc
jb
repz
fxtract
sbb
push
dec
aaa
cmpsb
push
cli
jb
mov
loop
popf
test
adc
pop
xor
fildl
add
pushf
fs
ds
pop
pop
addl
addr16
movsb
xchg
insb
or
test
pop
xchg
mov
pop
rcrl
adc
mov
in
xchg
pop
or
test
push
int3
xchg
xorl
out
clc
nop
xchg
pop
std
imul
fmull
into
sub
fnstcw
mov
roll
pop
add
cmp
cmp
pop
mov
sbb
or
and
mov
in
test
mov
cs
dec
push
mov
add
fdiv
mov
jmp
inc
push
aaa
mov
sub
aam
adc
inc
lretw
pop
sbb
fcomps
dec
cmpsb
inc
pop
inc
sub
test
cs
sbb
mov
mov
test
ret
fcoml
leave
mov
dec
mov
fistl
es
add
sub
dec
jge
mov
sbb
stc
inc
shr
sahf
dec
or
push
lahf
sub
test
js
and
rcl
and
adc
pushf
andb
nop
js
mov
dec
cmp
cmpsl
mov
ret
addr16
cli
fwait
je
mov
mov
std
imul
pop
pusha
rolb
jmp
xor
adc
insb
adc
sub
mov
shll
or
push
sti
imul
push
adc
rolb
cmp
jb
fiadds
sub
pop
mov
jp
and
jle
add
push
arpl
outsb
fildll
xor
aad
sub
or
jno
inc
push
jno
fldl
pop
jns
cmp
jb
mov
hlt
pop
dec
add
or
out
int
lret
fnstenv
push
es
xor
inc
sarb
or
push
out
outsl
test
cmp
repnz
bound
clc
in
cmp
test
push
adc
cld
mov
aam
daa
rorl
sbb
adc
shll
inc
jl
dec
aaa
arpl
add
sub
outsb
or
shrl
xor
inc
pop
movsb
test
or
sub
ret
inc
push
mov
push
mov
xor
pop
pop
mov
jae
fimull
dec
lods
iret
sub
mov
inc
ss
push
push
lahf
push
loope
out
sub
movsl
and
or
popa
xor
loope
xor
push
xor
pop
iret
xor
adc
cld
cmc
popf
iret
fisttps
fcmove
push
sbb
xor
push
jp
lods
mov
xlat
add
mov
bound
pop
popf
test
addr16
push
into
sub
and
fidivrl
loop
lcall
cld
jecxz
cmp
mov
jmp
hlt
popa
gs
mov
fsub
push
xchg
sahf
jnp
and
mov
push
cmp
xchg
pusha
insb
xchg
pshufw
add
mov
sub
dec
sbb
cmp
fdivp
mov
push
scas
xchg
xchg
cwtl
dec
lret
repnz
jg
outsl
cld
mov
rol
add
cmp
jae
or
imull
mov
inc
sbb
add
ret
mov
bound
jp
pop
and
add
icebp
loop
and
sbb
out
dec
xchg
dec
in
nop
adc
lahf
mov
imul
mov
cmpsl
shlb
iret
repz
jae
leave
cmp
fstps
pop
xor
vmptrld
add
mov
mov
rolb
and
insb
lahf
push
sub
pop
outsb
subl
pop
into
mov
scas
mov
push
aad
ljmp
fiaddl
mov
lahf
lods
mov
xchg
mov
xor
in
clc
or
jmp
jae
lret
mov
xchg
push
inc
insl
sahf
pop
fs
jg
loop
sti
shrb
jl
inc
sub
into
cld
mov
ret
jmp
sbb
adc
jg
movsb
ss
test
mov
cmp
cmpsl
movsl
mov
rol
ja
xchg
loop
je
cmp
pop
mov
movl
cs
adc
push
xchg
dec
out
lret
iret
push
pop
shl
out
xlat
call
and
loope
mov
lret
push
repz
cmp
mov
add
adc
inc
out
sub
idivb
mov
fistpl
cli
jl
xor
sub
cmp
sti
jp
cwtl
inc
pushf
push
and
pop
lds
adcl
mov
push
adc
ljmp
push
mov
mov
test
dec
es
ja
jp
mov
lods
push
dec
fists
sub
cmpsl
or
or
inc
lock
cli
bnd
xchg
sti
xor
int3
clc
ret
jecxz
jl
out
jg
mov
mov
xor
sbb
mov
xchg
dec
pop
ret
into
js
pop
sub
mov
cwtl
outsb
jp
nop
outsl
stos
rcrl
xor
mov
out
sub
js
add
cmc
push
repnz
imul
push
daa
mov
inc
scas
daa
sahf
sub
push
lods
sub
andb
and
jmp
ud2
popf
call
xchg
dec
mov
scas
cmpsl
sub
fcoms
shrl
dec
sub
pop
mov
and
jmp
dec
sti
jns
and
push
inc
xchg
pop
push
pop
mov
jns
xlat
add
pop
out
movsl
repnz
mov
std
incl
ljmp
mov
push
pop
fsubrp
sahf
pop
sbbl
dec
shrl
and
jnp
sub
fbstp
cmp
jo
pop
repz
sbb
xor
out
jbe
inc
xchg
cld
cvtpi2ps
inc
lret
fcmovb
or
loope
and
jno
xlat
sahf
jle
icebp
mov
or
loop
sbb
mov
insl
dec
das
mov
fstl
pop
movsb
aaa
push
mov
stos
les
add
es
pop
shl
mov
mov
mov
into
aam
jg
je
jnp
push
iret
sbb
inc
pop
cmc
imul
mov
pop
imul
loope
in
push
mov
aas
outsb
js
clc
xchg
pop
iret
add
cld
jmp
mov
sbb
lds
pushf
xor
jmp
fcoml
add
jns
call
repnz
jae
hlt
sahf
jecxz
push
cwtl
lret
cmpsl
stos
ja
pop
mov
xor
fwait
pop
fnstcw
mov
add
hlt
inc
push
cld
pop
sahf
xchg
sub
imul
stos
movsl
js
repz
mov
lds
sbbl
add
mov
pop
adc
mov
sub
test
aaa
xchg
insl
mov
mov
push
dec
push
adc
sahf
xchg
add
cld
mov
xchg
iret
jmp
push
leave
dec
arpl
xchg
mov
pop
add
mov
rcr
roll
sub
es
dec
mov
add
sub
pushf
jle
andl
js
mov
jne
xchg
pop
jge
and
xor
or
jge
add
jo
in
mov
addr16
sub
push
inc
or
jmp
bound
pusha
imul
stos
push
add
cmp
jg
dec
pushf
insl
cmpsb
imul
adc
adc
jns
mov
call
ret
cmp
inc
in
bound
pop
arpl
pop
jns
sbb
jns
js
or
loope
cmp
das
hlt
insl
lcall
pop
fisubl
cwtl
loop
adc
add
int3
je
jmp
sahf
shll
add
and
cmp
enter
int
imul
insb
cmp
repz
mov
lea
push
mov
lea
mov
jae
insw
mov
sbb
dec
cwtl
addr16
dec
inc
cmp
jns
cwtl
cmp
push
mov
aas
sbb
scas
sbb
andl
jl
add
scas
mov
mov
jnp
jne
cmpsl
mov
cmc
mov
insl
enter
aas
mov
arpl
test
mov
push
daa
pop
imull
jmp
lods
add
xchg
inc
imul
adc
testb
sub
shrl
push
mov
test
adc
push
cs
neg
cwtl
loope
inc
call
push
outsb
mov
xchg
pop
sub
push
mov
int3
and
mov
test
sbb
xchg
in
into
das
enter
in
js
out
dec
js
mov
or
sarb
or
pushf
pop
addr16
inc
insl
xchg
mov
xchg
lcall
stc
stos
into
push
lret
pop
adc
mov
pop
in
ljmp
sbb
mov
pop
data16
loopne
mov
dec
xor
mov
stc
fistpl
out
or
mov
clc
int3
xchg
inc
inc
xor
mov
xor
movsb
mov
xchg
push
pop
fsubl
and
xchg
sahf
xchg
mov
ja
int3
mov
push
ja
cmpb
in
cmp
xchg
call
in
inc
dec
bnd
ret
sbb
sub
mov
or
data16
in
xor
mov
inc
idivl
sbb
xor
xlat
mov
sub
xlat
inc
lret
push
xchg
iret
inc
ret
sbb
cmpsl
cli
es
scas
and
inc
pop
push
dec
add
lret
xchg
mov
inc
mov
xchg
push
mov
add
cltd
cwtl
sbb
jecxz
sub
fwait
or
dec
jnp
scas
xchg
sbb
xchg
pop
sbb
push
xchg
xchg
jmp
les
or
aad
or
dec
push
imulb
add
repnz
jle
push
in
mov
xchg
cmp
sub
or
sub
cltd
iret
push
in
jmp
inc
mov
std
inc
and
loopne
xchg
sub
mov
mov
mov
insb
stos
mov
push
test
ja
test
cmp
mov
mov
or
jns
xchg
add
out
in
fsubrl
jg
jne
loopne
lret
aam
cwtl
outsl
mov
insb
dec
xchg
inc
push
mov
mov
and
sbb
sarb
loop
rolb
hlt
lea
cmp
aaa
push
mov
loop
test
mov
les
test
std
push
test
push
mov
dec
sbb
jbe
inc
lds
fwait
ja
mov
pushf
cmp
xor
int
das
inc
xchg
sub
sub
fcoms
sbb
mov
pop
adc
pop
rcll
lea
or
push
mov
pop
jmp
gs
in
adc
out
flds
adc
pop
sub
out
add
sub
lret
xchg
ficompl
dec
out
jle
inc
sub
loope
jb
cmovae
popf
test
rclb
sub
cli
add
cmp
inc
ss
in
dec
xor
aaa
xchg
mov
out
inc
xor
cs
mov
lods
push
es
mov
sub
mov
jne
ret
inc
std
fidivrl
mov
repnz
aam
cwtl
xor
mov
or
sub
cs
or
out
iret
sarl
pop
cmp
leave
pop
mov
incb
jg
sub
iret
dec
or
sbbl
fcomp
iret
mov
ret
adc
mov
imul
ds
sbb
push
sbb
ret
movsl
sub
insw
int3
pop
xchg
or
das
nop
xchg
cld
lock
stos
dec
dec
jnp
nop
data16
outsb
fistl
or
insl
jnp
sub
or
fcoms
jo
and
inc
lahf
test
xor
loope
and
pusha
mov
pop
mov
and
dec
test
stc
jno
jmp
xchg
cli
movsb
push
and
insb
int
cmpsl
xchg
xlat
lret
dec
fstpl
inc
xchg
jp
fildll
mov
or
cld
loop
andl
mov
xchg
arpl
pop
int3
cmpsl
imul
pop
inc
xchg
xlat
inc
sbb
add
enter
popf
outsb
add
mov
cmp
sahf
mov
cmpsl
imul
lahf
sti
negl
sbb
lret
je
fbld
push
cmovl
lds
dec
adc
fisttps
mov
imul
sub
or
stos
pop
push
cltd
mov
dec
mov
or
pop
mov
xor
mov
in
mov
or
mov
lcall
daa
pop
imul
mov
lods
or
inc
dec
ficoms
aaa
imul
jno
fstps
pop
pop
sbb
jno
sbb
hlt
sbb
xor
sub
xchg
mov
andb
adc
and
adc
add
pusha
shlb
movsb
sub
movsl
or
mov
jno
push
loopne
adc
cmovle
in
and
call
and
xchg
fdivrs
adc
cwtl
cs
popa
out
je
in
mov
push
dec
or
leave
xor
mov
js
out
mov
pusha
pop
xchg
loopne
and
xlat
dec
ja
aad
imul
mov
movsl
cmpsl
test
in
push
pushf
stos
mov
sarl
in
and
inc
inc
idiv
adc
sub
push
mov
jecxz
cmp
mov
shl
mov
cmpsb
cmpsb
outsl
clc
mov
dec
scas
fs
adc
fcom
shl
sbb
sti
mov
mov
das
cmpl
add
stos
popf
cmp
enter
mov
in
sub
push
or
pop
and
xor
sbb
stos
out
xor
xchg
xor
mov
mov
lock
mov
call
adc
xchg
nop
test
cmp
push
jno
into
dec
nop
and
notb
lods
sub
repnz
arpl
pop
mov
aad
cmp
rolb
cwtl
arpl
mov
xchg
adc
xor
add
cmpsb
and
mov
xchg
sbb
insb
movsl
fisubrl
shrl
cmp
adc
jmp
addr16
jp
push
pop
pop
inc
je
dec
push
sbb
adc
adc
cld
xor
aas
add
outsb
jp
icebp
loopne
sub
inc
je
add
gs
sbb
dec
rcrl
imul
dec
add
sahf
add
mov
scas
mov
dec
test
into
leave
int
mov
es
cmp
jle
inc
push
mov
or
xor
pop
outsl
pop
pop
ret
add
sbb
test
xchg
out
xor
mov
int
aaa
es
jg
fisttps
cs
push
iret
out
pop
sbb
adc
cmp
notl
out
lret
mov
outsl
mov
xchg
insb
ret
orb
cmp
rorb
mov
cwtl
ret
xor
sbb
fisubs
loop
mov
fs
or
mov
cwtl
push
jne
xlat
cmp
bound
popa
cld
movsl
pushf
psubsb
test
loopne
mov
cmc
xchg
mov
add
repnz
mov
add
fbld
xor
rcrl
paddusw
shll
pop
jmp
jecxz,pt
movb
dec
jbe
xchg
stos
fwait
stos
mov
push
movsb
push
xlat
push
sbb
sarb
movsl
addr16
das
pop
subb
cmpsl
es
sar
int3
inc
adc
lock
mov
mov
lahf
cmp
xchg
adc
xchg
mov
xlat
fwait
shll
jbe
mov
adc
sbb
aam
sub
inc
or
cld
enter
lret
dec
mov
pop
cwtl
cwtl
xchg
jl
sbb
push
outsb
in
fists
dec
cmp
movsl
xchg
imul
fwait
push
cmp
dec
mov
pop
add
dec
fdivrs
lods
leave
xchg
jg
xor
cmp
add
rorl
call
cwtl
lahf
pop
or
adc
ja
adc
xor
cmp
cmp
xor
lahf
mov
and
addr16
int
call
ret
enter
xchg
xchg
sub
int
cmp
ja
pop
in
int3
lret
mov
lcall
test
sbb
je
adc
sahf
ret
cmpsb
adc
and
les
cmpsl
xchg
push
outsb
adc
scas
loope
xchg
imul
pop
incb
imul
repz
pop
xchg
pop
mov
out
in
fs
inc
pop
out
dec
jmp
dec
jae
mov
test
test
cmpsl
cmc
mov
and
xor
xorl
lods
ret
nop
imul
xchg
lods
sbb
inc
adc
vmovupd
mov
leave
filds
and
mov
cs
xchg
in
mov
jae
mov
clc
xor
jb
inc
dec
and
push
mov
int
cmp
es
push
sbb
xlat
or
testb
ds
stc
icebp
lcall
out
test
mov
repnz
divl
pop
out
xchg
addr16
enter
sti
data16
mov
cli
shlb
insb
mov
inc
adc
or
jne
mov
xor
dec
xor
ret
pop
mov
jns
mov
mov
lds
pop
jns
adc
dec
and
cmpsl
add
adc
scas
sbbl
xchg
sub
mov
pusha
fsts
adc
insl
adc
scas
xor
dec
pop
fxch
or
mov
sbb
mov
nop
xchg
push
jno
sub
ret
je
cmp
hlt
mov
rorb
mov
out
test
dec
pop
ja
sub
andl
divb
rolb
enter
test
repnz
test
sbb
push
fmuls
nop
cmp
cld
fxch
cli
xor
xor
into
push
add
stc
pop
xchg
adc
test
and
cmp
pushf
mov
push
or
dec
or
mov
fstps
xor
mov
lock
lcall
jbe
jne
sti
cmp
cmp
ss
push
sbb
add
dec
scas
mov
cli
jns
jbe
inc
push
ljmp
xor
dec
mov
shl
dec
lret
mov
mov
in
jne
inc
lahf
push
neg
imul
push
sbb
loopne
pop
mov
or
aam
adcb
lds
xor
loopne
and
push
xchg
nop
imul
test
jae
mov
pop
pop
push
adc
pop
outsb
fs
push
in
pop
mov
fcmovbe
aaa
push
lock
stc
lock
jecxz
lret
and
mov
lea
sbb
cmp
inc
mov
nop
xor
mov
sti
xchg
movsl
inc
test
rcrb
loopne
cmp
cmp
push
mov
pop
cmp
cmc
jl
inc
shr
fdivs
sti
flds
cmp
enter
mov
pop
sub
dec
cmp
clc
mov
js
cmpl
jb
jmp
rcr
and
ja
std
push
add
lods
orl
shll
call
bound
aad
mov
mov
out
sub
mov
jns
cmp
nop
sbb
rorl
jl
push
dec
mov
sahf
xchg
xchg
xor
out
push
pop
gs
arpl
pop
in
stos
jmp
push
pop
adc
outsb
add
jge
inc
inc
inc
lea
stc
sbb
cmp
cwtl
pop
pushf
cmp
daa
aas
xchg
cli
xor
repnz
dec
dec
div
inc
mov
test
mov
fbstp
add
inc
push
insl
cmc
sub
ja
int
mov
pop
imul
lret
xchg
jmp
or
in
sub
inc
loopne
add
xor
ljmp
adc
pop
dec
in
sbb
jno
scas
mulb
jnp
xor
jno
das
test
loope
cmp
jle
xchg
gs
mov
cld
popf
and
mov
int3
inc
stos
fmuls
xchg
cmp
push
call
xor
dec
cmp
sbb
jno
ds
jg
push
xchg
in
nop
outsb
pop
in
xor
mov
xor
gs
inc
dec
ficompl
shrl
inc
dec
add
out
or
mov
sub
fistps
inc
sub
in
mov
mov
loop
out
pop
iret
cli
mov
movsl
jbe
xor
lret
xorb
inc
sbb
sbbb
rcrb
xor
jns,pn
sbb
mov
mov
out
mov
in
jo
pop
je
icebp
cmp
mov
cmp
mov
cmp
xlat
sbb
mov
jno
push
fsubl
jb
push
mov
mov
bound
lods
mov
stos
add
out
ljmp
mov
clc
ss
out
lds
out
jecxz
pushf
out
push
aas
stos
add
and
add
sbb
inc
loopne
xlat
ljmp
imul
push
scas
pushf
or
dec
test
test
ljmp
xchg
cmp
mov
in
lret
add
stc
push
xchg
pop
push
mov
rolb
orl
dec
sbb
lods
push
mov
mov
adc
pushf
adc
push
rcll
adc
loop
pushf
movsl
scas
mov
adc
lahf
mov
add
cmp
xor
ret
pop
dec
jg
push
push
mov
adc
gs
dec
test
and
lea
std
daa
add
and
mov
xchg
ficoms
out
fnstsw
or
mov
scas
loope
outsl
mov
jp
std
cwtl
scas
loope
xlat
sahf
fdivl
in
aad
mov
push
xor
insb
fimuls
out
jno
cmp
xchg
mov
into
mov
stos
pusha
call
push
and
shrd
jnp
jae
sbb
fcomi
mov
stos
jne
test
enter
fidivrs
lahf
sub
jle
xchg
bound
pop
cltd
push
push
xor
mov
xchg
dec
in
mov
push
insl
aas
xor
fidivrs
sub
mov
test
cmp
mov
pop
dec
outsl
inc
push
mov
mov
insb
xchg
fistpl
inc
stc
orl
mov
sbb
jmp
add
daa
fstl
xchg
mov
lret
ret
push
mov
lahf
push
jmp
push
cmp
and
mov
out
push
jmp
pop
out
fildll
cs
inc
xor
in
lcall
insl
bound
or
and
outsb
out
sbb
fbld
push
add
ljmp
sbb
add
mov
xchg
pop
push
push
push
stc
out
jmp
jmp
pop
cmp
movsb
xchg
int3
sbb
in
push
stos
adc
cmpsl
pop
aad
enter
cmp
in
sub
push
cmp
xchg
das
daa
mov
xchg
sbb
scas
in
cmc
pop
std
jge
dec
stos
shlb
add
pop
jbe
inc
sub
inc
out
push
addr16
mov
loopne
arpl
out
xchg
cmp
sub
jne
mov
sbb
ret
pop
jne
adc
imul
mov
inc
test
das
mov
cmpsb
cmp
sbb
jb
std
subb
pop
rolb
test
xor
push
sti
pop
add
nop
inc
popa
sub
push
cmp
fnstcw
mov
arpl
lods
xchg
xor
add
pop
js
xor
lods
sti
sbb
fildl
stos
shll
cld
test
bnd
cmp
shlb
push
dec
and
pop
fisubs
mov
mov
cltd
insl
imul
xchg
or
push
xor
push
lods
fwait
and
xor
outsl
std
sarl
ret
ljmp
inc
jne
mov
push
lods
dec
jne
and
pop
xor
ss
mov
xchg
sub
rcl
jne
mov
pop
xor
xor
sub
mov
in
xchg
popf
jbe
lcall
jne
and
xchg
adc
scas
xchg
imul
ret
test
adc
cmp
scas
lret
testl
hlt
insl
fcom
std
addr16
and
add
sbb
pop
push
rol
add
push
cmp
insl
je
inc
lods
pusha
les
inc
subl
aaa
movsb
daa
xor
mov
cmp
mov
lret
mov
dec
movsb
mov
clc
push
ret
insl
xchg
pop
add
cmp
add
daa
leave
mov
outsb
push
adc
test
lret
add
je
mov
push
adc
hlt
jae
insl
inc
in
cmp
mov
push
scas
test
arpl
mov
jno
xchg
lahf
fistpl
mov
add
cwtl
xor
cmpsl
or
cmc
shlb
mov
and
cmp
dec
mov
fnsave
cmp
inc
je
dec
push
pop
movsl
adc
pusha
movsb
scas
ret
repz
jecxz
fimuls
fwait
ror
mov
out
aas
adc
xchg
pop
outsb
jge
movsl
popf
push
jne
iret
dec
and
xor
repnz
mov
shrl
ja
insl
cs
and
rorl
mov
or
add
int
xchg
or
pop
in
insb
mov
or
xchg
mov
sub
in
test
test
fcompl
cmp
adc
aaa
sti
idiv
cmp
ljmp
dec
sbb
leave
mov
imul
lock
jbe
pop
jge
pop
cld
inc
pop
sar
shll
xchg
repnz
pop
or
push
xor
and
sahf
push
xchg
clc
cmp
cmp
mov
lock
jle
rorl
jge
lods
ss
out
inc
push
lds
jo
cmpsl
cmp
cmp
cwtl
adc
mov
daa
js
roll
popf
enter
repnz
pop
cmp
jb
mov
mov
sbb
mov
sub
mov
xchg
cli
test
jecxz
sbb
aad
idiv
data16
dec
jle
sti
dec
mov
push
xor
mov
push
add
pop
data16
cmc
push
pop
xchg
xchg
jno
inc
jno
mov
push
pop
enter
sbb
mov
es
cmp
icebp
rol
cmpsl
imul
int
add
add
push
mov
and
add
cmp
pop
scas
inc
out
push
or
cmp
fs
insb
mov
call
test
aad
ja
cld
xchg
sub
loopne
cmpsl
je
mov
dec
gs
aam
sti
sbb
dec
cli
cld
ficoml
fiadds
jno
enter
cld
outsb
aam
aam
pop
stc
inc
adc
das
inc
jmp
orl
sub
xchg
push
xor
cmc
ljmp
cmp
ljmp
aam
enter
test
sub
jo
xor
loopne
cmpsb
fldcw
fsubs
out
mov
push
jmp
inc
aaa
cwtl
movl
mov
push
mov
add
hlt
mov
aam
dec
jo
mov
add
push
sahf
inc
add
insl
bound
dec
cmpsb
pop
xlat
insb
lret
loope
xor
incb
test
ljmp
jns
push
push
stos
pop
movsb
stos
and
ds
xlat
clc
nop
movsb
add
sbb
popa
adc
mov
call
in
sub
cmpl
decl
or
inc
pop
mov
xor
pop
mov
xchg
mov
inc
aam
push
outsb
icebp
call
frstor
pop
push
cltd
in
xor
push
out
into
adc
call
mov
stc
dec
xor
cmp
loope
daa
jno
and
scas
push
lret
mov
dec
test
sbb
sub
test
xchg
cmp
and
sub
pop
inc
add
push
push
shr
jae
pop
mov
push
xor
jl
cmp
js
mov
xor
inc
jge
cli
ljmp
cmp
imul
push
push
cmp
or
lock
push
push
lcall
mov
mov
mov
mov
sub
or
popa
inc
xorps
jb
in
sbb
push
ljmp
push
outsl
push
lahf
and
out
adc
jmp
repnz
mov
sub
mov
psrlq
pusha
gs
mov
mov
jl
scas
add
and
test
movsb
pop
fwait
cld
in
incl
lcall
pop
pop
stos
pusha
arpl
or
mov
leave
sarb
les
jge
pushf
mov
pop
pushf
adc
insb
dec
imul
xchg
lds
outsl
icebp
hlt
aam
sub
ficompl
lret
fsubs
mov
jecxz
xchg
jne
cmp
sub
test
dec
out
shrb
or
mov
add
cmp
fwait
xor
mov
jecxz
mov
xor
push
cmp
jno
adc
cmp
push
add
jp
ret
je
mov
daa
dec
mov
jb
mov
xchg
aam
xor
pushl
in
sbb
inc
sbb
mov
jo,pn
orb
mov
or
sbb
jg
out
sbb
xchg
xchg
xchg
jle
clc
fstl
lret
jmp
push
ds
mov
jno
xchg
dec
xor
loop
mov
mov
shl
fcmovnu
fistl
mov
into
lock
jno
mov
sarb
cs
jno
cmp
shrl
mov
cmp
add
sbb
mov
jl
stos
movsb
orb
js
mov
add
sbb
bound
mov
shr
adc
inc
jae,pt
or
sub
xchg
arpl
xchg
loop
mov
add
xchg
jbe
je
xchg
push
and
cmpsl
cmp
inc
inc
push
les
rclb
sbb
dec
out
or
and
imul
nop
pop
popa
les
inc
mov
addb
inc
jg
sub
xor
mov
mov
stos
mov
adc
or
cltd
push
and
jbe
dec
sarb
jg
lret
sbb
xor
cmp
cwtl
jb
lods
popf
mov
push
jp,pn
lods
les
or
sahf
mov
jns
push
sub
cmp
mov
push
mov
xchg
push
push
add
icebp
sub
xchg
cld
andl
ss
dec
xorl
bound
aad
test
lret
jp
movsb
xor
mov
mov
xlat
add
scas
fdivs
test
pop
dec
leave
fdivrs
pop
push
add
inc
adc
sub
dec
test
xor
movsl
xchg
loop
and
mov
imull
out
push
sbb
push
vhaddpd
enter
jne
orb
dec
xchg
mov
das
xor
xchg
daa
icebp
lds
das
loopne
xor
push
sbb
out
js
ljmp
lcall
andl
mov
sbb
popf
scas
mov
sarl
lods
lds
xlat
or
sbb
testb
push
xchg
inc
gs
out
rcll
and
js
faddl
shlb
mov
popa
mul
add
shll
add
adc
jmp
in
sarl
or
pop
dec
adc
jns
cltd
jg
outsb
add
mov
adc
xchg
cmpsb
mov
add
setge
sbbb
xchg
mov
xchg
sub
cmpsb
adc
adc
mov
mov
pop
ss
mov
cmp
outsl
ljmp
and
push
add
jle
popf
lds
cltd
adcl
stos
dec
jb
cli
mov
inc
mov
mov
push
mov
lock
ja
inc
xchg
fs
call
nop
ja
in
in
xchg
arpl
cmp
cmp
imul
inc
rclb
dec
icebp
inc
lret
xchg
jge
adc
dec
push
dec
iret
inc
aam
insl
int
sbb
ret
mov
jle
adc
sahf
sub
insb
popf
jge
lea
imul
cmpsl
movsl
pushf
daa
ja
fstpl
fldcw
mov
pushf
ja
pushf
addl
sbb
mov
jo
inc
lret
xchg
xchg
push
pushl
cmpb
push
rcrl
push
lret
shrb
lea
iret
ret
outsb
lea
pushf
inc
mov
xchg
jae
cmp
sbb
jne
je
mov
sahf
jbe
lds
dec
in
cltd
lret
push
pop
bound
stc
xchg
imul
adc
inc
mov
pop
push
and
call
mov
int3
sub
cmpb
jge
ja
push
xor
fs
sbb
adc
fists
fs
je
cmp
xchg
push
xor
js
mov
sbb
and
jecxz
negl
jecxz
sbb
xor
sub
sbb
adc
dec
adc
rcr
push
lods
xchg
rorb
adc
cmp
mov
adc
mov
int
fbstp
dec
pusha
rclb
mov
inc
sub
or
les
mov
cmp
lcall
lods
in
push
add
push
pop
adc
mov
outsl
jl
dec
ja
xchg
aam
jle
aas
cmp
xchg
push
js
dec
adc
pushf
shrb
popf
xchg
mov
mov
movsl
fwait
pop
push
dec
inc
inc
inc
aas
decb
aas
push
rcl
inc
shlb
and
xor
insb
add
cmp
pushf
adc
mov
scas
gs
std
hlt
inc
cmp
jo
mov
and
loop
ret
cmp
mov
out
push
xchg
jmp
sti
jmp
jg
sbb
or
lods
pop
arpl
push
negb
bound
xchg
jno
cmp
sarb
dec
add
dec
pusha
in
in
or
sbb
push
push
dec
adc
test
mov
iret
cmp
ljmp
or
call
rorl
pushf
or
jg
xchg
ret
addb
sub
mov
mov
jg
test
xrelease
lods
jae
push
dec
mov
xor
insb
mov
inc
adc
das
and
pop
jg
pop
adc
adc
inc
daa
cmp
stos
xchg
xchg
cmc
add
js
mov
shlb
pop
mov
push
xor
xchg
dec
test
inc
les
lahf
pop
add
push
fs
orb
mov
addr16
add
or
test
mul
outsl
ja
repz
cmp
or
stc
stos
hlt
fdivrs
bound
fimull
ljmp
sbb
mov
sti
mov
cmp
jmp
cmp
mov
cld
add
das
push
inc
push
cmc
push
mov
dec
aaa
rorb
scas
ficompl
shld
mov
and
xchg
negb
stos
mov
cltd
in
insb
insl
shlb
adc
int3
loopne
push
cmpsl
ja
movsb
cmp
or
test
aad
push
cmpl
inc
sbb
ret
cmp
mov
mov
fisubs
and
xchg
or
mov
mov
add
mov
xor
scas
int
out
cmp
pushf
flds
and
xchg
add
iret
inc
add
or
mov
movsb
es
xor
punpckhwd
pop
in
and
mov
xchg
or
xor
push
add
push
insl
idivl
insl
lcall
cmpb
popa
pop
sub
jns
pop
ret
test
add
xchg
inc
xchg
lock
xor
data16
mov
xchg
mov
xor
xor
stc
jne
sbb
dec
call
sbb
repz
mov
dec
and
fldl
xchg
jne
in
loopne
xor
repz
enter
or
addr16
cld
mov
clc
fistpl
push
pop
push
add
repz
jne
lods
jecxz
sarb
loop
fadds
and
sbb
push
lahf
push
shrb
scas
or
xchg
jle
test
int
test
and
roll
mov
lea
cmp
cwtl
mov
mov
xchg
insb
xorb
cmp
outsb
popa
dec
xchg
xor
adc
xchg
es
gs
aam
or
fldenv
cmp
shlb
popaw
les
aam
cmp
gs
push
sub
dec
out
cwtl
call
sbb
call
xor
cmp
sub
jge
test
xor
ljmp
loop
data16
bound
or
push
rcl
push
lods
push
push
inc
inc
cwtl
test
mov
insl
cmp
es
nop
dec
and
pop
js
lcall
add
lds
pusha
je
sub
ja
test
jecxz
loop
and
and
xor
inc
jg
lea
mov
test
inc
lock
sti
bnd
add
lds
mov
sub
je
rcrl
adc
cli
hlt
mov
out
inc
lcall
bound
addr16
mov
jbe
push
testl
xchg
mov
lahf
push
in
xor
cli
js
pusha
jl
sub
popf
mov
inc
fwait
cmc
sub
rcr
xchg
pusha
inc
mov
mov
mov
and
xchg
push
cmp
cmp
mov
mov
sub
xor
popf
test
outsb
mov
mov
stos
stos
mov
lods
mov
xor
fwait
int3
int
and
popa
adc
adc
ds
aad
xor
int
push
loopne
mov
cmpsb
insl
addr16
mov
jno
movsb
in
call
and
lds
sub
sub
sub
xchg
cmp
ja
out
pop
loope
repz
ret
or
fucomp
adc
xor
movsb
push
pop
mov
shlb
and
iret
pop
add
in
mov
dec
inc
std
in
push
xor
movsl
dec
out
bound
inc
pop
arpl
add
dec
jbe
sub
mov
lahf
push
push
aad
and
and
lea
call
jns
mov
es
dec
data16
fisubrl
and
push
int
test
into
popa
rcrl
sbb
push
imul
or
xchg
outsl
dec
shrb
aad
cmp
xor
or
movsb
inc
loopne
or
andb
pop
jge
pop
call
push
dec
test
fdivl
mov
or
insl
outsl
jnp
enter
xor
pusha
pop
mov
mov
insb
and
pop
iret
lods
stos
mov
adc
mov
jne
xchg
sub
in
stos
push
fidivrl
fdivrl
nop
jg
addr16
sbb
ljmp
mov
sti
mov
sub
fistpl
pop
mov
mov
aad
fucomi
fstps
xor
mov
fnstsw
mov
rep
or
loop
popf
inc
mov
outsb
imul
and
and
leave
adc
shll
inc
push
lret
icebp
js
add
mov
xchg
fnstsw
mov
lahf
sub
lret
push
cs
push
enter
sub
testl
inc
mov
lods
fs
ljmp
pop
lds
cld
cmpsb
and
pop
xchg
je
mov
dec
test
dec
add
scas
fucomip
mov
adc
aaa
push
add
divl
loope
fs
add
adc
mov
xor
into
rcrb
pop
jp
jnp
leave
cmpsl
dec
shr
imul
out
es
mov
sbbb
xchg
fnstcw
mov
mull
call
add
pop
cmpsl
pop
in
fiaddl
adc
cltd
xor
mov
imul
push
cwtl
imulb
dec
call
outsb
add
xchg
icebp
stos
in
pop
insl
sbb
mov
pusha
js
and
mov
dec
fmuls
cltd
adc
adc
mov
test
mov
mov
or
push
cld
daa
mov
xor
cltd
add
xor
cmp
jno
aad
movsl
data16
push
sbb
xchg
jb
jb
popa
mov
inc
popa
inc
add
cmc
ror
lods
fs
jmp
and
hlt
add
pusha
push
mov
in
gs
test
dec
mov
movsl
push
das
roll
ja
pop
adc
push
pusha
pusha
pop
sub
adc
movsb
pop
outsl
mov
fsubrs
jne
adc
pop
je
push
jge
add
shl
mov
ret
hlt
sub
pusha
dec
pop
push
inc
ja
xor
pop
xchg
adc
int
movsl
push
cmp
negl
fistpll
xor
adc
add
pop
rcll
insb
aas
push
dec
mov
adc
xchg
shlb
mov
xor
push
imul
fcmovb
xor
or
movsl
xchg
xchg
sub
mov
push
adc
cmp
dec
jne
push
or
push
mov
cmp
stos
xchg
xchg
popa
in
mov
inc
mov
out
cs
jnp
push
cltd
dec
out
and
cmpxchg
xor
jns
push
sbb
imul
add
aaa
and
imul
cmpsl
dec
sbb
jle
andb
dec
sbb
js
or
dec
mov
mov
in
pop
inc
daa
cmp
push
ficoms
daa
xchg
int
add
adc
cltd
pop
std
pop
xchg
cmpsl
push
push
cmc
out
dec
sti
inc
sub
out
mov
ret
dec
push
xor
jb
mull
rcr
jl
scas
or
xor
lret
loopne
xor
dec
inc
xchg
or
pop
jno
fimuls
jo
mov
jb
dec
pop
adc
pop
loope
div
adc
or
pop
jb
inc
shl
cwtl
pushf
test
sub
cmpsl
xor
xchg
mov
jge
mov
mov
data16
and
cmpsb
es
rcll
aam
push
jbe
xchg
fdivrs
repz
iret
xor
sbb
mov
jl
mov
push
cmp
mov
ret
std
or
mov
mov
cmp
ljmp
rcrb
jns
xor
jae
jo
cli
push
sbb
mov
movzbl
cmp
push
mov
jl
repnz
inc
mov
dec
sti
and
pop
sbb
lret
mov
push
mov
fwait
stc
imul
mov
and
push
pop
fnstsw
and
and
mov
push
xor
popa
lock
or
clc
nop
dec
cltd
jo
cltd
fnstsw
movsl
test
jo
clc
jmp
cs
mov
data16
leave
mov
mov
mov
ljmp
inc
mov
jns
inc
pop
adc
cmpsb
aas
mov
inc
inc
mov
scas
mov
pop
outsl
movsl
rcrl
mov
sub
cmp
aad
cmpsl
not
lods
aam
subb
outsl
idivl
mov
cmpb
pop
leave
fs
mov
push
xchg
inc
inc
aaa
mull
inc
mov
mov
inc
mov
or
dec
fistpl
sarb
cmpsb
mov
sbb
add
push
dec
or
mov
sub
leave
bound
ja
into
sub
les
pop
mov
jp
mov
jp
mov
push
loop
dec
xor
inc
lods
lahf
and
push
jecxz
sbb
jo
ficompl
jecxz
jmp
push
jnp
ret
xor
into
inc
push
fsubl
cmp
call
cmp
pop
sub
outsb
repnz
add
add
pop
mov
fs
dec
pop
fsubrl
mov
xchg
inc
inc
je
cs
enter
adc
rclb
mov
or
jmp
jle
sbb
shlb
pop
push
leave
and
inc
cmp
push
cmp
pop
insb
scas
xor
cmpsl
fildll
es
jbe
jb
adc
sub
mov
sahf
sbb
mov
mov
add
pop
fldl
and
cmovl
adc
stos
pop
inc
mov
jno
inc
sbb
int3
inc
fcompl
xchg
popa
cltd
push
xlat
cmc
test
je
cld
pop
inc
loopne
ror
in
dec
push
imul
push
cmpsl
das
or
pop
pop
std
sub
lods
sub
lods
dec
jns
xlat
add
out
xlat
mov
orb
js
sub
loopne
inc
or
mov
in
add
xchg
push
mov
adc
sbb
jbe
dec
loop
mov
inc
dec
pop
cmp
hlt
mov
sub
popf
or
xchg
add
or
pop
mov
mov
jb
push
add
xchg
ss
xchg
aas
mov
inc
loope
pop
inc
adc
xlat
or
or
fcmovb
xor
fwait
push
in
repnz
loop
or
add
xchg
adc
repz
inc
mov
outsb
int
xchg
sbb
sub
jecxz
xchg
pushf
xchg
leave
dec
shlb
sub
adc
and
jb
mov
aas
push
fbstp
inc
mov
mov
js
shl
mov
ja
in
jp
es
ja
pop
test
pushf
push
jne
call
jb
jb
into
mov
mov
push
scas
pusha
mov
adc
fldt
shrl
es
push
jg
pop
push
sbb
pop
loopne
and
inc
pop
int
push
xchg
leave
loope
mov
in
pop
call
cmp
idivl
loope
inc
setl
ficomps
or
cmp
mov
and
rolb
sub
bound
pusha
xor
mov
xchg
loope
jne
and
iret
and
xchg
mov
pop
cmp
or
std
stc
out
outsl
sbbl
andl
jle
mov
sbb
jnp
sbb
cmp
cwtl
int3
mov
imul
and
pop
cmp
xchg
cwtl
enter
ss
push
ljmp
imul
jne
add
inc
add
loope
aaa
jle
sub
cmc
inc
jmp
sbb
xor
pop
xchg
pop
stos
inc
xchg
aaa
test
mov
testb
xor
adc
push
dec
out
movaps
je
dec
cli
sbb
push
dec
cs
sbbb
outsb
test
jecxz
les
sub
shlb
mov
mov
inc
in
js
add
and
icebp
pop
cli
push
arpl
out
cmpsb
js
ja
into
mov
push
cmpsb
jno
push
or
sub
inc
xorl
cmp
xor
sti
insb
sub
pushf
mov
add
rclb
repz
mov
sbb
adc
mov
rorb
cmp
and
rolb
shl
jp
and
jae
outsb
jp
cmp
and
cwtl
pop
outsb
loop
sub
cli
mov
test
fisttps
lahf
mov
adc
in
mov
xor
push
popf
lret
insl
jmp
add
cs
mov
or
push
mov
pop
stos
or
pusha
or
out
jo
les
sbb
and
jp
jae
mov
sbb
mov
out
lahf
out
lds
ss
add
pop
add
jnp
xchg
jge
mov
mov
sub
sbb
dec
std
jbe
push
pop
arpl
andb
add
ss
dec
movsb
out
std
inc
in
cld
adc
add
rcrl
in
push
pusha
sub
jb
xchg
mov
stos
adc
mov
mov
xlat
mov
sahf
icebp
add
bound
scas
add
add
test
sbb
enter
and
sbb
mov
outsl
push
sti
xchg
xchg
idivb
stc
stos
out
fadds
push
jmp
fs
mov
mov
mov
iret
add
divb
push
xor
fimuls
in
mov
int3
sub
imul
and
add
dec
inc
fwait
push
insb
test
test
stos
pushf
bswap
dec
mov
jns
fdivl
adc
inc
aam
addr16
cmc
repz
inc
push
mov
xlat
sbb
mov
inc
in
out
jns
cwtl
ss
rorl
and
popf
inc
xor
stc
xor
fnstenv
jae
xor
adc
inc
push
rcll
scas
mov
scas
stos
cld
hlt
nop
aas
sbb
mov
push
mov
les
out
lret
jo
jle
pop
mov
outsb
sub
push
loopne
out
test
shlb
in
mov
sbbb
inc
fstpl
xchg
pop
hlt
hlt
or
shr
mov
mov
lcall
sub
pop
push
in
aas
fcomp
mov
push
mov
pop
and
aas
mov
or
call
dec
std
jg
aam
les
bts
decb
dec
out
inc
sbb
ja
cmp
inc
xorl
notl
fdivs
sub
cmc
add
mov
cmp
mov
jmp
imul
das
and
repnz
lock
das
inc
mov
out
icebp
inc
rcrl
xor
cmp
add
mov
mov
add
push
enter
push
out
lret
popf
cmp
mov
ret
icebp
pop
sub
fnstcw
xor
pop
and
jne
loopne
inc
test
cmp
jns
lock
imul
mov
pop
add
push
les
inc
xchg
xchg
or
mov
dec
icebp
and
dec
aaa
sbb
shlb
push
arpl
divl
test
arpl
dec
push
and
out
or
js
push
leave
std
adc
pop
add
mov
xor
rol
mov
push
outsl
imul
int
mov
add
or
int
mov
imul
pop
mov
mov
scas
idivl
mov
sti
daa
jecxz
mov
das
mov
lods
pop
ja
push
imul
dec
jmp
inc
out
outsl
xorb
jo
mov
std
ds
clc
clc
xchg
push
adc
cmp
dec
sahf
push
rcrb
ret
adc
jnp
icebp
cmc
cmp
jecxz
pop
xchg
xchg
mov
dec
ja
scas
sti
bound
pushf
pop
or
sub
mov
int
in
fistpl
aaa
dec
in
out
push
mov
fsubr
aad
mov
jnp
push
adc
mov
pop
ljmp
jg
in
decb
mov
jg
add
push
mov
pop
or
fwait
cld
andl
out
pop
mov
out
add
push
ret
arpl
clc
push
roll
ljmp
cli
xlat
insl
mov
jnp
fwait
jle
inc
mov
pusha
out
lods
mov
jecxz
cmp
push
jbe
pop
bswap
or
sarl
ja
xchg
repz
out
xor
xchg
add
testb
sbb
icebp
jp
pop
fidivrs
mov
pop
or
inc
fmul
insb
lock
cmp
push
mov
inc
sbb
fcmovbe
ss
aaa
push
iret
inc
jp
mov
mov
std
ret
movsl
cli
pop
fisttpl
subb
mov
out
lds
sbb
xchg
pop
push
cli
dec
gs
cs
ss
and
and
adc
repz
sbb
pushf
ja
fistl
push
mov
dec
mov
jne
cmovb
sahf
mov
push
clc
popf
ljmp
incb
xlat
push
fistpl
insb
div
rcl
jns
jbe
inc
push
add
int
pop
adc
sbb
vpcmpeqd
paddd
mov
xor
mov
repz
jne
xor
xor
or
xor
lcall
inc
jne
xchg
mov
test
nop
inc
cmpl
sub
jae
sbb
std
out
jl
adc
rolb
nop
sti
jo
push
xchg
jmp
dec
or
push
mov
xchg
scas
dec
repnz
xor
pop
xlat
lea
dec
xchg
icebp
adc
push
add
jnp
dec
adc
sbb
aas
insb
loop
xorl
mov
scas
mov
cmc
test
out
xor
pop
jns
aaa
jb
imul
xor
mov
xor
jnp
push
fsubr
cmp
pop
std
mov
lea
filds
lds
roll
jp
mov
and
and
fcomps
adc
pop
xor
sub
movb
loope
gs
mov
lock
imul
and
inc
lods
sahf
fdiv
mov
or
ja
dec
ljmp
sbb
lcall
jmp
xchg
cwtl
mov
aas
stos
adcl
lods
adc
xor
sbb
call
cmc
cmp
sub
sub
ljmp
and
pop
sub
or
adcl
adc
les
or
sub
pop
inc
inc
repnz
data16
add
sbb
rcrl
add
mov
mov
adc
jle
adc
mov
inc
add
mov
jbe
and
out
rclb
push
and
addb
sbb
orl
sub
jb
or
ret
pop
popf
lret
fiaddl
rolb
daa
lcall
hlt
lret
xor
iret
test
add
add
ss
cmc
fimull
mov
cmpsl
cmp
fnstenv
ret
xchg
adc
arpl
cmp
imulb
ljmp
clc
add
sarb
mov
into
mul
lahf
dec
js
sbb
add
add
mov
shll
mov
scas
aas
lcall
imul
pop
mov
sar
jg
mov
xor
clc
xchg
into
dec
aad
xor
sbb
negb
dec
pop
nop
or
fmul
push
aam
adc
jne
push
sbb
or
repz
dec
push
scas
lods
add
lahf
into
dec
pop
mov
adc
or
xor
xlat
and
sub
dec
cmp
pop
repz
lret
xchg
in
in
cltd
fprem1
cmp
lock
or
mov
and
or
gs
sbb
lods
mov
fsubl
xchg
xchg
mov
mov
dec
add
cld
xor
mov
or
xchg
xchg
sub
and
xchg
mov
mov
mov
jecxz
fcompl
imul
inc
cmpsl
popl
push
fstpl
mov
jnp
or
push
clc
inc
jmp
or
mov
pushf
cli
mov
pop
and
lods
mov
cmp
aad
add
mov
inc
mov
push
mul
bound
cli
jg
xor
nop
xor
and
mov
push
sub
sbb
dec
sub
add
pop
cmpxchg
mov
les
mov
loopne
cwtl
ffreep
add
imul
int3
and
xor
xchg
fldln2
lock
lea
xor
jae
stos
fnstenv
pusha
ret
cmp
movb
cmp
pop
aam
fwait
and
ljmp
fldt
xor
jo
pushw
sub
jo
pop
imul
and
fcompl
jne
inc
pop
fstpl
sti
sub
xorb
pop
mov
jl
dec
and
inc
cmc
cmp
cli
push
insb
cli
insl
imull
stc
cs
push
sbb
idivb
call
dec
push
mov
xchg
add
adc
pop
imul
jge
int
xchg
cltd
pop
xor
das
mov
es
and
loope
inc
into
lods
movsb
scas
fistps
and
push
push
jno
cs
adc
add
imul
xchg
ds
and
in
and
jbe
orl
shl
mov
cmp
cwtl
sbb
lods
testl
jl
mov
clc
jp
orb
and
imul
jle
clc
aad
inc
pop
push
fwait
cltd
int3
mov
inc
iret
and
mov
ljmp
sbb
dec
xor
mov
vphaddubw
sbb
push
xor
aas
stos
in
cmpsb
les
loop
jb
sub
out
pop
loop
sub
xor
flds
aas
sub
mov
addb
ret
jecxz
outsb
aaa
ljmp
mov
dec
cmp
movsb
popa
mov
mov
push
xchg
inc
lcall
out
in
lret
lods
repz
jl
cmp
shrl
pop
dec
scas
jle
pop
fistpl
lods
mov
out
push
imul
and
adcl
mov
sub
shl
adc
inc
out
ss
jbe
or
ret
and
leave
mov
jb
mov
jp
mov
jmp
jnp
aaa
cld
popf
mov
jmp
cmpsb
out
jb
cmp
push
and
cli
insb
pop
in
adc
jno
sarl
stc
jge
push
push
pushf
lods
ss
jbe
jae
lock
ds
inc
push
jne
mov
and
jae
ret
fdiv
add
rolb
cs
sbb
cmp
ret
test
mov
ja
xchg
dec
gs
sub
dec
mov
pop
sub
xor
es
xor
add
add
mov
push
in
mov
and
lcall
push
dec
aaa
mov
insb
pop
imul
cld
jnp
mov
cmp
sbb
icebp
mov
mov
cmp
popa
cli
fs
or
xchg
scas
sbb
lahf
in
mov
sbb
push
ljmp
mov
popf
push
repz
mov
cmc
inc
mov
sarb
push
xchg
insb
mov
cs
push
insl
push
idivb
fisubl
xlat
outsb
fnstcw
loope
inc
xchg
mov
seto
lock
popf
aas
mov
inc
jl
mov
lods
cli
xlat
popf
pop
insb
adc
cld
jmp
mov
lds
bound
xchg
fimull
testl
jmp
adc
fistl
sbb
repz
aam
jmp
sub
lods
push
and
mov
ss
pop
pop
arpl
xorb
addr16
mov
fnsave
ja
sbbl
jne
push
add
shr
push
shll
int
adc
jg
push
inc
cmp
inc
stos
mov
ja
fimuls
js
dec
enter
pushfw
sbb
sbb
ja
iret
mov
cli
mov
rcrb
bound
test
inc
push
nop
out
test
idiv
cmp
out
flds
fs
mov
loopne
lods
mov
in
or
xor
dec
mov
sti
jl
xor
imul
inc
int
mov
and
xor
insb
es
dec
ja
mov
popa
lds
xor
call
lret
lods
push
ja
jo
pusha
repz
mov
mov
popf
fs
movsb
cld
pop
add
movsl
cli
loop
fs
xor
sbb
arpl
gs
movsb
cli
test
inc
lcall
mov
add
adc
repnz
out
pop
fbstp
cmp
mov
negl
and
jbe
sarl
cwtl
cmp
out
cmp
fisubl
sub
pop
clc
cmp
notl
aad
add
add
rcll
arpl
mov
mov
sub
int3
jecxz
testb
test
popa
and
cmp
cmp
sbb
sbb
lds
scas
js
shl
push
push
inc
stos
imulb
subl
mov
dec
test
xchg
inc
mov
xor
and
std
mov
xlat
pop
imull
jmp
push
cmc
inc
imul
xor
mov
cs
cmp
lahf
arpl
xor
lods
and
xchg
ss
outsb
pop
pop
sar
and
out
cmc
pop
jecxz
clc
stos
lret
divl
cmp
int3
and
scas
subb
mov
mov
repnz
popa
mov
and
add
push
fwait
nop
ds
jns
push
sbb
jbe
mov
sbb
mov
insl
dec
pop
jp
pop
clc
mull
test
sbb
dec
sbb
rclb
repnz
add
lds
sti
sbb
enter
sbb
dec
cwtl
bound
fsubr
les
cli
roll
inc
repz
adc
push
lcall
pop
xor
movsl
insb
jno
mov
sub
mov
jecxz
adc
xchg
ret
stos
jbe
adc
dec
lods
popf
xchg
or
jmp
pop
scas
fbstp
dec
pop
and
jmp
adc
lock
sbb
or
xor
negl
popf
cs
jnp
cmp
stc
pop
std
cmc
xchg
int
mov
xlat
add
xor
jb
and
pop
adc
sbb
icebp
jecxz
pop
ret
inc
jp
addr16
mov
movsb
aad
rcrl
test
sub
pop
std
sbb
test
push
lcall
inc
fadds
pop
je
loopne
sti
and
sahf
sbb
mov
push
movsb
dec
mov
inc
cmp
xchg
sub
std
xor
out
jle
mov
stos
into
mov
sahf
add
dec
xor
cmp
add
push
adc
cmp
inc
sbb
adc
xor
in
addr16
mov
xor
mov
cltd
in
data16
inc
dec
lret
jnp
and
pop
ljmp
mov
adc
pushf
lds
ljmp
push
mov
out
inc
outsl
push
sbb
ret
pop
lds
outsb
mov
mov
jmp
mov
imul
fcmovb
lea
push
pop
cmpsl
add
fwait
pop
ja
jae
cmpb
adc
test
xchg
jb
push
push
shl
mov
sbb
adc
inc
clc
sbb
lock
fs
push
xor
dec
push
ljmp
lret
insb
push
dec
lret
in
push
mov
xor
mov
push
sub
mov
mov
inc
jbe
cld
outsl
mov
mov
je
lahf
outsb
fabs
jb
and
in
xchg
movsb
pop
repz
dec
xchg
sub
fisubrs
jb
sbb
ljmp
outsb
enter
mov
ds
mov
aaa
xor
dec
imul
sbb
pop
lcall
jge
popf
or
cmp
jns
dec
pop
dec
cmpb
aam
mov
push
xor
es
mov
popa
shll
std
int
inc
mov
dec
and
int3
repnz
iret
pop
xchg
lret
sbb
lods
cmp
sbb
jbe
notl
dec
and
stos
popf
mov
ss
add
pusha
mov
je
mov
pop
sti
sub
and
cmpsb
mov
or
adc
pop
stc
inc
loope
stos
mov
popf
movsb
add
add
jmp
xchg
cli
adc
sbb
or
int3
rorl
inc
bound
mov
shl
and
das
xor
stos
adc
lret
scas
lret
cwtl
sbb
add
dec
pop
aam
add
into
dec
mov
add
hlt
les
sub
orl
dec
call
lcall
imul
inc
xchg
pop
fsubp
sbb
clc
in
ljmp
cmp
mov
xor
scas
jns
std
arpl
mov
cmp
mov
movsl
lock
shll
mov
decl
aaa
cmp
sti
jo
and
rcrb
mov
xchg
xor
fmulp
sahf
leave
xchg
int3
jp
mov
call
std
add
jae
test
lods
popa
fwait
xchg
push
setae
rcr
mov
xchg
rclb
sbb
mov
jecxz
mov
in
push
popa
xchg
cmc
xchg
insb
jp
xchg
push
pop
mov
inc
test
loope
push
inc
iret
or
leave
push
jecxz
jnp
out
push
cli
pop
stos
add
pop
pushf
and
adc
cwtl
and
rcrl
test
movsb
add
add
sbb
pop
scas
scas
scas
xchg
and
int
cmp
movsb
or
or
cli
pop
pop
ljmp
and
jae
adc
inc
xchg
jp
pop
or
pop
cmpb
xor
cmp
test
mov
lahf
push
addl
lods
xor
dec
jnp
in
push
mov
sbb
bound
stos
imul
push
out
mov
jg
imul
sar
push
sbb
add
xchg
mov
xchg
sub
insl
cld
sbb
pop
jae
sti
popa
nop
and
add
adc
add
out
mov
test
cmp
roll
aad
dec
aas
jmp
and
icebp
adc
ss
pop
fcoms
jmp
add
into
frndint
mov
add
sbb
lods
mov
cmp
push
cmpsb
push
pop
insl
xlat
cmp
mov
movsb
pop
mov
test
imul
mov
leave
or
sub
out
dec
les
out
fcompl
clc
imul
mov
or
nop
rorb
addr16
sarl
dec
faddl
push
es
and
xchg
inc
sar
sbb
jae
in
mov
dec
movsb
jns
sahf
jmp
cmpsb
lea
loop
js
aad
loope
cwtl
inc
xor
pop
pop
cmp
mov
cli
dec
cmpsl
xchg
lea
pop
mov
xchg
cltd
popa
fcomps
pusha
ja
mov
add
shl
shlb
cmp
mov
adc
sub
lret
mov
or
push
call
insl
int
inc
scas
push
pop
int3
mov
or
jno
dec
into
inc
sahf
nop
mov
push
int3
shrb
js
cwtl
and
subl
shlb
loopne
mov
xchg
out
and
push
adc
xor
scas
cmpsl
cmp
pop
lcall
adc
mov
aad
mov
push
jae
mov
ret
ret
clc
push
push
ljmp
clc
jno
imull
jne
inc
push
mov
ss
int
gs
andl
and
fsub
pop
inc
pushf
inc
and
add
addb
jl
rolb
jno
or
stc
add
lcall
jns
add
ljmp
imul
stos
test
mov
cmpsb
gs
add
sbb
shlb
mov
mov
sub
pop
dec
scas
cmp
jge
lods
loopne
dec
jge
scas
or
adc
shrb
enter
in
and
popf
imul
mov
mov
rcrb
inc
cmpsl
dec
addr16
lcall
sbb
pop
shll
popa
addr16
jo
mov
shlb
jne
rcr
shll
shlb
pop
inc
loopne
pop
jmp
in
jl
xchg
in
mov
add
cmp
ljmp
inc
insl
roll
fsts
push
in
sub
push
gs
out
add
hlt
dec
repnz
roll
fs
repnz
sub
push
pushf
or
or
mov
fsubs
stos
in
inc
or
cmpsb
int3
pop
lods
mov
pusha
fistl
popa
repnz
repnz
mov
add
lds
pop
push
push
lret
movsb
outsb
push
mov
lret
popf
sbb
clc
jl
imul
filds
pushl
cmp
test
in
lretw
xchg
test
sahf
jp
jae
pop
iret
mov
lret
lock
or
fwait
cli
aaa
and
push
mov
ljmp
out
cmpsl
fcompl
jae
fiaddl
cmpb
enterw
sbb
jb
mov
and
mov
push
iret
xor
leave
mov
ret
xor
bound
popa
ss
sbb
push
out
push
pusha
mov
push
test
mov
rolb
das
aas
cmp
add
imulb
mov
mov
and
gs
sti
lea
movl
or
xlat
jg
pushf
pop
pushf
add
push
movl
mov
jge
call
xchg
push
and
jle
or
subl
sbb
push
pop
cwtl
aaa
adc
pop
or
mov
seta
adc
sbb
daa
sbb
inc
jb
adc
andb
adc
mov
fs
and
add
testb
xor
and
jno
jmp
nop
mov
popf
adc
sub
cmp
mov
push
insl
adc
mov
fidivs
and
into
loop
mov
pop
lock
cmp
int
outsb
add
shl
xchg
out
shll
push
sarl
sbb
into
mov
sub
add
xchg
sub
and
push
ret
adc
xchg
mov
out
orb
in
push
sub
xchg
inc
sbbl
cmpsb
cmp
push
shrb
lods
out
pop
add
es
xlat
das
push
lret
loope
out
stos
add
or
pusha
cmc
lock
inc
lret
loop
add
pop
push
jo
imull
mov
or
lea
stc
rcr
push
sub
xor
mov
pushf
and
inc
in
xor
push
inc
into
push
adc
adc
ret
notl
pushf
jns
out
cltd
jo
ljmp
sub
jecxz
sbb
xor
xlat
lods
in
rorb
test
jmp
xchg
xor
push
pop
loop
ret
xchg
adc
fwait
inc
fdivl
and
out
loop
stos
xchg
adc
push
sti
out
adc
jns
inc
jns
xchg
push
lahf
push
mov
jge
jb
jbe
jae
inc
mov
adc
rcll
mov
leave
dec
pop
jge
daa
pop
pop
push
repnz
jo,pt
es
loopne
sbb
into
ds
pop
pandn
dec
sub
or
bound
sub
nop
push
rorl
pop
sbb
insb
inc
call
aam
cwtl
je
cmpsl
movsl
insb
sbb
clc
pop
sbb
in
sub
arpl
pop
or
mov
loopne
fisttps
mov
into
adc
sbb
mov
movsl
jno
arpl
das
jle
aam
mov
rcll
lcall
hlt
cmpsl
pop
cmp
jp
sub
mov
les
jmp
mov
adc
push
pop
inc
or
xchg
xor
je
bound
inc
sbb
test
stos
adc
pusha
mov
out
pop
adc
xor
out
mov
in
pusha
jb
jne
mov
pop
add
dec
aas
sub
adc
in
mov
sahf
loop
sub
pop
xlat
xor
jg
rcrb
mov
add
in
test
lds
movsl
movsb
jmp
or
fstps
call
pop
movsb
out
hlt
into
jbe
insb
in
enter
sbb
mov
repz
adc
mov
arpl
incl
push
stc
add
push
sbb
js
fadds
mulb
pop
or
adc
mov
xchg
cltd
push
dec
addr16
mov
gs
stos
leave
jno
add
mov
ja
daa
dec
ret
inc
orb
dec
and
js
jmp
in
add
or
dec
sarb
dec
add
insb
xchg
inc
pop
fcmovnb
cli
sbb
jno
aaa
in
ret
pop
cmpsl
mov
adc
or
lret
das
jno
cmp
push
adc
outsl
lds
not
mov
mov
fisubs
xchg
xor
leave
in
cs
inc
fidivl
push
sub
cmp
leave
cs
adc
jbe
jle
push
rcll
movl
push
add
cld
pop
xchg
ret
jecxz
or
push
lods
add
push
test
ret
inc
push
dec
fstpl
sbb
mov
out
push
hlt
fwait
jns
addr16
out
pushf
or
sbb
test
mov
xchg
pop
test
inc
imul
mov
sub
mov
sbbb
jb
jo
mov
adc
idivl
repz
cltd
xor
pop
sub
testb
addb
mov
inc
jge
pop
pop
stos
pop
push
inc
call
test
lock
cmp
test
scas
imul
notl
mov
lds
jb
ja
aas
pop
jl
fsubs
bound
jae
lods
mov
leave
inc
jae
xchg
jno
nop
push
lods
gs
cld
pop
jge
scas
jo
dec
rcrb
in
and
test
lret
out
enter
adcb
dec
and
stos
adc
outsb
jecxz
in
cmp
adc
sti
adc
lds
cmpsl
sbb
cmpsl
jmp
jge
and
nop
lods
sub
out
movb
add
adc
pusha
mov
or
ret
test
mov
std
and
push
mov
nop
pop
push
ja
xchg
dec
mov
adcl
push
pop
xor
mov
jnp
leave
subb
stos
push
or
cmp
int
pop
push
pop
leave
pusha
xor
clc
icebp
rcrb
xor
cvtps2pd
push
ja
adc
dec
inc
hlt
arpl
jnp
nop
mov
ja
xchg
add
lock
pushf
cmp
add
mov
adc
xchg
insb
push
lcall
pop
inc
and
aas
push
sub
or
mov
mov
addr16
adc
icebp
sbb
dec
scas
xchg
dec
xor
in
imul
rcll
sub
cltd
sub
int3
cs
lcall
mov
xchg
insl
ss
sarl
scas
lods
pop
add
into
adc
add
jge
popf
test
or
test
imul
cld
pop
mov
or
xor
leave
inc
shlb
fwait
add
fwait
pop
inc
ret
nop
lret
cmp
test
cmp
int
mov
sub
repz
rcrl
pop
dec
test
fucomi
lret
lcall
sar
bound
mov
mov
loope
flds
adc
xchg
aam
mov
scas
in
push
bound
jle
fcmovnbe
cmp
adc
mov
int3
les
or
inc
in
shrb
dec
pop
sub
ret
pop
stc
movsl
fs
rcrb
lret
scas
dec
sahf
lret
cmp
mov
enter
pop
lcall
ljmp
cmp
lods
lea
push
int3
adc
sahf
fldl
mov
loope
xorl
jmp
pop
inc
pop
push
cmc
fnstenv
jecxz
xchg
inc
push
or
dec
jb
adc
add
je
xchg
out
inc
mov
inc
sbb
sbb
gs
scas
pop
test
sub
ja
jle
popf
pop
mov
ror
mov
shlb
jge
inc
dec
clc
xchg
xor
mov
loop
inc
sarb
dec
mov
adc
sub
lret
std
sub
pusha
push
pop
jg
cli
mov
out
int
repnz
xchg
es
xor
sub
mov
in
test
and
jno
shrb
jle
mov
push
lea
aaa
das
addr16
xor
ret
xchg
mov
sbb
enter
aaa
ja
sub
inc
imul
pop
mov
test
jge
xor
loop
rol
sub
cs
add
fwait
rorl
jno
ror
jmp
repz
rclb
stos
mov
xor
xor
xor
jl
lahf
enter
mov
das
outsb
or
mov
xchg
test
adc
cwtl
nop
sbb
push
jns
cmp
jecxz
jno
pushf
inc
xchg
inc
aam
sbb
cmpb
and
scas
fisttpll
dec
sub
pop
push
lahf
arpl
push
mov
daa
jb
cmpsl
push
pop
shlb
dec
pusha
dec
cwtl
stos
mov
jno
push
shl
icebp
dec
xor
sbb
mov
or
dec
arpl
sti
dec
xchg
cmpsl
cli
popa
jl
dec
jge
adc
jbe
lods
jmp
das
push
mov
fiadds
xor
addr16
in
cmp
adc
pop
mov
mov
iret
jo
pop
repnz
xchg
mov
iret
jo
movsb
pop
cld
mov
adc
cmpsb
lret
jbe
loop
insl
mov
sbb
outsl
repnz
bound
dec
imul
sbbb
add
clc
fdivr
addb
jecxz
sbb
shll
ljmp
push
call
and
in
neg
or
je
inc
mov
mov
lret
or
sub
jecxz
cmpsb
lret
pop
jae
divb
sbb
jecxz
inc
lcall
outsl
jl
lods
xor
vpsubb
or
out
insl
jge
cmp
pop
shlb
cmp
adc
test
lret
ljmp
je
push
xor
aaa
mov
int
push
rcl
hlt
int3
andb
dec
mov
je
and
fmul
pop
sbb
inc
insl
cli
jb
aas
and
adc
xlat
mov
repz
pop
in
xor
pushf
xchg
sbb
fiaddl
and
xor
xchg
mov
ret
inc
shll
in
jge
push
sbb
push
aam
rorl
sar
adc
inc
cmp
lcall
in
outsb
aad
xchg
xor
and
xchg
cmp
mov
out
nop
cmc
cltd
incl
mov
inc
jg
xor
push
inc
jmp
mov
jecxz
ficompl
cmp
lret
pop
add
jbe
mov
jnp
test
mov
out
shll
add
rorl
ret
enter
jne
mov
fcoms
lods
dec
repz
out
cwtl
mov
mov
push
js
push
push
das
jo
cmp
jmp
insb
fwait
lds
out
xor
sti
jg
mov
xchg
ds
int
ret
push
sub
jmp
push
mov
cwtl
mov
mov
daa
or
xor
or
int3
or
adc
movb
dec
fstps
xchg
mov
sti
add
mov
hlt
mov
xlat
fnstenv
es
rorb
pop
xor
adc
sbb
pop
and
jbe
lret
mov
or
loope
push
adc
ret
jbe
stos
rcll
xor
arpl
pop
pusha
in
cmp
or
pop
outsb
push
jbe
test
jge
xchg
pop
hlt
sbb
push
pop
in
popf
inc
or
adc
push
iret
inc
cmp
and
aaa
push
int
mov
lahf
xchg
call
icebp
cli
shrb
cwtl
push
sub
xor
es
sub
push
mov
jae
movsl
and
pop
daa
pop
adc
ret
jecxz
mov
filds
xchg
xor
cmpsl
scas
jg
rcrl
fwait
xchg
sub
mov
push
push
shrb
lcall
cltd
mov
and
arpl
stos
mov
rcr
movsl
shlb
das
lea
jnp
dec
mov
mov
xor
mov
fscale
fwait
jecxz
mov
mov
mov
push
cmc
sub
das
sbb
and
inc
movsl
jl
pop
pop
sahf
popa
call
dec
bswap
mov
xchg
daa
push
jecxz
dec
inc
popl
xchg
lods
out
pop
lahf
sahf
iret
adc
popf
cmc
cltd
arpl
out
movsb
stc
dec
inc
orb
xor
pop
scas
bound
orb
sbb
xchg
ret
rcrl
ret
addr16
push
jns
adc
xlat
mov
nop
pop
xchg
popa
cld
cltd
cmpsb
std
sub
mov
cmp
out
mov
inc
ljmp
mov
test
xchg
mov
ffreep
inc
and
sub
sti
xorb
hlt
fwait
scas
ret
jecxz
mov
xor
repz
imul
adc
push
movsb
jne
inc
lds
pop
cld
jg
inc
xor
dec
cltd
mov
xor
ficomps
pop
xor
es
mov
rcrl
mov
jp
mov
mov
and
jnp
repnz
mov
adc
cmc
inc
pushf
jnp
cmp
or
mov
sbb
xchg
jnp
sbbl
xchg
push
xor
jnp
inc
test
mov
jg
lret
jg
fsub
sub
xchg
lahf
xor
pop
and
sub
jg
and
and
xor
cld
dec
lcall
int
push
xor
or
mov
dec
into
pushf
daa
ret
xor
adc
ss
jns
sub
sbb
adc
unpcklps
dec
add
xchg
enter
jnp
jns
out
push
jb
sub
cmp
ffreep
mov
ror
test
mov
leave
std
pushf
pop
push
mov
pop
daa
inc
cmp
inc
jmp
sbb
mov
in
and
or
cmpsb
or
lahf
aaa
and
lods
jmp
inc
sbb
xchg
insb
adc
or
inc
push
addb
pop
cmp
xchg
push
inc
test
lahf
dec
adc
out
sbb
das
jnp
sbb
mov
cmp
ss
dec
dec
lret
and
test
jb
cmp
lods
loop
cmc
sahf
incl
pop
stos
lret
pop
xchg
push
dec
cmpsb
cmp
ss
fwait
mov
notl
iret
inc
in
mov
ja
stos
xor
dec
mov
fsubrs
mov
cmp
out
and
xchg
in
lods
leave
cmp
loopne
cmc
sub
enter
mov
add
mov
ljmp
punpcklwd
cmp
sub
ljmp
std
push
push
mov
push
or
jge
mov
stos
add
call
jne
push
jb
ljmp
xchg
push
out
add
jb
subl
imul
push
sbb
xchg
out
xor
repz
scas
test
insl
mov
mov
into
mov
cmc
dec
inc
fwait
into
es
xchg
ja
and
leave
dec
and
insb
lret
jp
push
jl
pop
adc
jne
loop
gs
cmp
push
xor
mov
mov
mov
push
pop
out
out
and
fcompl
push
sbb
inc
nop
pop
adc
dec
loopne
mov
inc
repz
lahf
call
out
mov
mov
repz
jecxz
adc
insb
lods
lds
iret
hlt
sti
scas
mov
inc
clc
mov
dec
inc
inc
loop
test
mov
scas
sbb
popa
adc
mov
fcmovnu
dec
push
cmpsl
in
idiv
int
cmpsb
xor
and
test
neg
fcmovnbe
int
xchg
imul
xchg
movsl
enter
outsb
sbb
sbbb
test
repnz
push
ljmp
jnp
jnp
push
xor
rcll
mov
pop
out
shr
pop
insl
push
out
je
stos
js
cmp
push
mov
dec
loop
loope
dec
sbb
into
out
cmp
inc
push
jns
mov
fisubrl
jg
lcall
je
test
adcb
mov
scas
sub
xor
rorb
iret
cmpsb
jbe
cmc
sbb
sarb
xor
lock
clc
push
inc
add
adc
outsb
mov
xchg
sbb
jge
sub
out
ljmp
imul
or
xor
push
mov
mov
int3
cltd
xor
add
and
mov
into
loopne
push
cmpsl
int3
push
add
push
jmp
mov
xchg
shll
sub
and
pushf
in
add
ds
out
dec
jnp
popf
imul
dec
popa
jecxz
outsb
insl
ja
jbe
mov
add
dec
xchg
add
test
into
mov
mov
movsl
xor
mov
outsb
mov
nop
aad
mov
sub
pop
adc
xor
das
ds
es
cmc
jno
jp
lds
mov
mov
out
mov
lds
add
in
xor
into
adc
push
nop
out
mov
movsb
adc
add
xchg
cmp
clc
adc
push
test
jle
sahf
cmpsl
cmp
cmove
sahf
fsubrs
test
and
pop
mull
push
cs
imul
mov
shl
andl
jge
adc
int
cmp
mov
mov
push
ss
lods
mov
push
xchg
inc
sbbl
daa
test
adc
xor
scas
mov
mov
dec
cli
jmp
inc
add
imul
xor
add
inc
insl
cli
cmp
cmpsb
fmuls
jns
fnstenv
movb
fs
mov
mov
ror
daa
mov
add
rcrb
fisttpl
xchg
sahf
jl
mov
imul
sbb
icebp
cmpsb
lods
inc
pop
adc
popf
mov
daa
pop
arpl
stos
jae
mov
out
adc
mov
mov
mov
inc
mov
aam
xor
mov
dec
xorl
dec
lock
add
inc
jecxz
cmpb
mov
pop
outsl
cmpsw
sti
xlat
loopne
cmp
xor
sbb
rcrl
aaa
xor
xor
mov
jne
test
das
iret
loopne
xchg
adc
push
lahf
ljmp
lea
push
inc
in
or
mov
stos
pusha
pop
int3
loope
cmpsb
add
sub
clc
sub
fwait
dec
and
xchg
ds
ret
mov
test
adc
stc
push
sbb
xchg
rol
add
xchg
lods
mov
jl
add
xchg
cmp
enter
and
shl
mov
insb
sbbb
shl
sarb
rol
shll
pop
aam
std
test
scas
pusha
lods
dec
sar
test
or
or
add
aas
stos
xchg
cmp
insb
mov
mov
ljmp
push
and
fdivrl
test
mov
cmp
in
enter
jge
xor
pop
outsb
or
arpl
adc
or
cmp
imul
jno
add
mov
in
xchg
cli
push
jno
cmpl
outsl
xchg
fcomps
xchg
enter
sub
jmp
andl
dec
testl
test
int
lret
cmpsl
dec
loopne
fdivl
orb
hlt
adc
cmp
aad
cwtl
nop
stos
jo
or
mov
mov
jnp
xchg
jmp
sub
xlat
fwait
dec
sbb
addr16
mov
mov
stos
scas
add
enter
xor
dec
adc
out
push
inc
mov
jle
orb
ljmp
or
js
mov
gs
inc
ret
cmp
add
mov
aam
faddl
sub
xor
inc
jecxz
push
jae
fs
mov
xor
xor
mov
rcll
fsts
pop
test
xchg
repz
sbb
jmp
xchg
lcall
cmpsb
xor
push
lret
aam
ret
ja
dec
jge,pn
add
test
cltd
stos
inc
adc
test
jb
mov
xchg
notb
faddl
lods
jnp
push
rcrl
pop
push
mov
js
xlat
sub
pop
pushf
mov
fwait
sbb
jnp
fwait
pop
dec
mov
add
xchg
sbb
int
fdiv
divb
xchg
mov
xchg
stc
mov
mov
sbb
dec
clc
add
outsl
dec
mov
popf
mov
push
dec
xchg
fimull
popf
imul
push
mov
add
push
clc
add
insb
lahf
mov
xor
jae
dec
add
cli
cmp
nop
arpl
sbb
pusha
inc
loop
pop
lcall
cmp
jne
push
daa
shrl
sbb
fwait
imul
adcl
pop
adc
mov
bound
or
dec
jg
mov
loope
sub
sbb
pop
or
mov
sub
mov
shlb
and
clc
inc
mov
in
inc
xor
mov
mov
int
xor
or
cmp
sbb
loopne
mov
jg
popf
mov
out
cmp
ss
in
testl
dec
or
mov
add
mov
adc
insb
stos
pusha
sub
rcrb
xchg
icebp
dec
inc
sbb
dec
adc
xor
in
mov
rorl
int
pushw
fistl
inc
mov
mov
mov
add
rcll
or
sbb
mov
lahf
add
faddl
jmp
loope
push
adc
push
scas
sub
adc
sahf
loopne,pn
push
fldt
rcrb
mov
sarl
xchg
mov
dec
ret
mov
jno
mov
imul
jb
mov
or
mov
int
enter
pusha
leave
add
mov
sub
aaa
or
test
stos
aas
in
sbb
xchg
mov
jge
es
or
stc
jo
pop
cmp
fldl
cmpsl
xchg
add
loopne
icebp
sbb
call
shlb
ja
sarb
xchg
dec
inc
pop
je
jmp
sti
insl
cwtl
loopne
add
mov
sbb
jmp
inc
push
mov
arpl
stos
inc
mov
and
cmc
jle
sbb
sbb
movsb
popa
sbb
hlt
mov
mov
jge
sbb
sub
into
jmp
xchg
xor
test
jl
pop
in
xchg
mov
pop
sub
fdivrs
ljmp
lret
cltd
mov
mov
push
test
sub
std
cmp
jp
mov
pop
out
pop
lds
or
ljmp
outsb
pushf
xor
jno
add
cli
pop
jmp
insb
mov
std
nop
sarb
cmpb
hlt
cmc
lea
pop
in
fwait
sbbl
cmpsb
test
or
xlat
sub
dec
fistl
test
xor
aas
add
mov
dec
mov
rorl
dec
mov
sbb
lods
in
mov
push
jmp
shlb
xchg
add
dec
and
xchg
stos
fst
ljmp
pop
call
cld
push
popa
popf
out
or
push
mov
xor
push
jb
in
mov
cmp
fdivrs
fidivrl
pop
repnz
lret
push
insb
sbb
sbb
mov
into
sbb
xchg
outsl
test
lock
xchg
lods
and
rcll
mov
inc
cmp
mov
in
andb
mov
cmp
pop
fs
add
mov
test
push
sti
mov
mov
outsb
xor
mov
jge
xor
jno
rcrl
jl
cmp
in
stos
shll
sub
and
fistpll
pop
xor
leave
jmp
ret
jle
xchg
out
or
jo
push
fnstsw
rorb
push
iret
cmpsb
jbe
mov
cwtl
mov
mov
cmp
insl
ja
pop
inc
lods
jmp
jmp
rcl
mov
add
mov
frstor
rclb
mov
adc
fdivrs
inc
mov
cmp
aam
push
sbb
in
cwtl
lods
loopne
jae
lret
iret
seto
sbb
lcall
lahf
jecxz
xchg
lea
jmp
dec
inc
push
fimull
movsb
clc
jle
mov
out
rolb
jb
dec
outsb
scas
dec
cmpsb
ds
ss
xchg
call
pusha
adc
mov
hlt
fisttpl
out
lret
sarb
push
cmp
mov
mov
jnp
sbb
ret
test
mov
and
cmp
fs
sbb
push
mov
inc
inc
jb
adc
or
ror
cmp
xor
fisubrl
xchg
fisubrl
and
shll
pop
add
je
mov
push
mov
scas
xchg
xlat
mov
jb
cmpsb
adc
es
nop
xorb
scas
jns
daa
fsubp
adc
jne
add
sub
in
ficomps
jne
repnz
and
mov
sub
stos
sbb
sbb
mov
in
insl
or
call
ljmp
in
pop
adc
popf
adc
cmc
arpl
leave
adc
mov
ss
add
cmpsb
mov
aas
shl
popa
add
in
pop
rcr
sub
dec
xor
test
das
inc
out
or
adc
sar
cld
lea
stos
lds
mov
adc
popa
adc
xacquire
jns
sarb
sbb
xor
out
lods
stos
and
sub
push
cwtl
dec
and
and
imul
mov
sbb
xor
push
sbb
mov
mov
jecxz
jmp
cmc
cmp
mov
nop
jne
jae
repz
push
sub
inc
inc
je
or
dec
or
xchg
cld
jmp
aaa
fldt
xor
push
pop
fdivs
pop
push
sbb
cmp
xchg
mov
jno
jecxz
or
jns
lret
stc
and
stos
data16
jb
aas
dec
jno
stos
push
push
jbe
pop
icebp
cmpsl
sub
xor
xchg
mov
inc
dec
fiadds
fs
sbb
xchg
jg
ds
fdivrs
flds
mov
cmp
lret
negb
xor
fists
push
mov
into
xchg
and
push
cmp
mov
pop
pop
and
mov
cld
inc
sbb
sub
mov
sbb
push
mov
nop
adc
jnp
sub
dec
mov
cmp
lods
scas
add
inc
imul
xchg
lock
push
xchg
dec
imul
add
cmp
xchg
mov
mov
daa
hlt
sub
popa
shll
jo
sbb
repz
jge
inc
mov
scas
aam
xchg
inc
inc
pop
jmp
rorb
mov
xchg
stc
bound
pxor
test
cltd
pop
jl
sub
pop
int
sbb
shll
xlat
pop
dec
cli
sbb
lahf
inc
sub
jno
add
inc
nop
mov
ljmp
aaa
jecxz
mov
movsl
testl
push
xorb
jge
out
les
pop
sbb
pop
repnz
out
loop
popf
or
lret
add
jl
pop
repnz
jb
cmp
test
xor
in
mov
or
int3
cwtl
and
inc
mov
movsl
mov
pop
push
jae
cmp
adc
xchg
movsl
push
pop
or
in
movsb
adc
repz
pop
addr16
mov
jge
adc
cmp
mov
or
daa
decb
pop
sub
stc
cld
inc
cmp
aaa
dec
jno
mov
clc
cmp
cs
je
das
push
stos
or
fwait
loopne
imul
leave
mov
cld
xor
inc
icebp
xchg
sahf
dec
fwait
mov
aas
lods
rcrb
out
mov
in
shl
mov
dec
divl
jno,pt
rorl
jge
sbb
packuswb
leave
outsb
dec
sbb
mov
pop
push
lcall
xchg
outsb
push
shll
add
pushf
sub
mov
mov
popf
xchg
mov
mov
mov
flds
imul
push
xchg
push
mov
rclb
push
cmp
sarl
xor
repnz
xchg
fdivr
scas
js
ret
or
ret
aaa
test
sbb
cmc
adc
xchg
or
mov
std
imul
xor
add
lahf
pop
mov
push
cmp
or
repnz
push
ja
jle
stc
dec
jne
xor
adc
movsb
popf
or
pop
jg
cld
pop
ds
xor
in
fnstenv
or
movsb
xchg
into
sub
sbb
aam
sbb
dec
push
or
push
mov
mov
push
repz
jb
adc
jl
mov
pop
lahf
adc
push
dec
clc
fwait
xor
jae
in
cmpsl
cmp
lret
dec
or
xor
mov
xor
mov
and
mov
mov
cmp
push
daa
dec
jge
daa
sahf
jnp
pop
fcmovne
jno
mov
jge
push
movsl
rolb
jo
leave
cs
pop
jle
shll
pop
imul
mov
clc
lret
inc
add
sub
mov
sub
mov
inc
lret
mov
movsl
push
mov
inc
add
pop
mov
les
je
add
sbb
xor
lret
push
rolb
in
fsubrp
fsubrl
mov
arpl
cmpsb
sbb
lods
aaa
dec
ljmp
push
cmp
pop
sub
rorl
mov
clc
pusha
cwtl
arpl
insl
sbb
lock
lcall
push
hlt
push
sub
test
add
mov
mov
and
or
inc
mov
sub
jmp
dec
aad
shll
outsb
lret
fistps
or
enter
rorl
icebp
repz
aaa
fst
loope
enter
es
fstpl
or
arpl
fs
mov
fisubrs
jo
push
add
sbb
add
test
cmc
mov
ret
rorl
mov
add
jo
cli
sbb
scas
cmp
cmp
fisubrl
xchg
sub
mov
pop
jb
push
js
ret
ds
xor
xorl
in
dec
add
pop
sub
enter
adc
mov
push
incl
add
ret
lods
cmpsb
out
or
cmp
scas
sbb
mov
movsb
pop
lcall
popa
cmp
sbb
mov
sti
mov
push
dec
mov
sub
inc
test
mov
mov
out
sub
xor
lcall
lret
xchg
jae
mov
imul
add
ret
in
push
jmp
cwtl
in
mov
arpl
ficomps
push
gs
xchg
jmp
stc
mov
movsb
sub
mov
push
cmp
lds
je
jns
mov
insl
mov
stos
mov
stc
push
jp
insb
popa
or
sbb
dec
pop
cld
cmp
cs
lea
shll
sub
nop
addr16
pop
xchg
dec
cmp
cmp
mov
mov
jne
out
dec
xor
cmpsb
jl
xchg
aaa
pop
hlt
jnp
mov
pop
sti
cmp
roll
jno
movsl
pop
adc
adc
std
push
repz
push
lods
testb
cmp
mov
imulb
or
ret
cwtl
and
push
xlat
fsts
sbb
push
pusha
loope
ds
out
sub
fwait
aad
cs
mov
mov
scas
fwait
sub
jns
push
push
mov
mov
test
push
cli
push
imul
pusha
out
and
push
push
fwait
jns
inc
shlb
ljmp
lcall
xor
xchg
out
mov
aad
push
rorl
jbe
call
mov
ja
lds
inc
pushl
or
lods
arpl
mov
ret
xchg
xchg
shlb
shlb
push
pop
cmp
jl
push
push
push
jge
cmp
dec
jl
popf
mov
scas
push
addr16
repnz
fldt
cs
out
stos
sti
outsl
mov
sbb
mov
adc
inc
adc
in
adc
push
mov
add
mov
movsb
in
push
rclb
inc
mov
mov
in
roll
pop
aas
mov
cmp
mov
mov
dec
pop
out
jne
pushf
mov
arpl
pop
jmp
sub
fwait
bound
addl
imul
jno
cmp
mov
or
inc
adc
mov
ja
bound
adc
loopne
test
adc
push
bound
stos
ret
add
lahf
sub
inc
cmp
jb
inc
mov
out
dec
mov
inc
sti
les
movsb
pop
add
ds
into
or
pop
stc
in
xor
pushf
stc
push
repnz
call
push
add
fldt
mov
fmull
out
popf
mov
mov
mov
movsl
shrb
cltd
int3
adc
sub
mov
or
or
es
in
lcall
ljmp
sub
pop
not
loope
or
cld
imull
xor
xor
fwait
rorb
cmp
dec
sar
in
int3
mov
xor
or
test
lods
jns
dec
mov
mov
push
jmp
xchg
call
mov
xchg
fisubrl
cmp
iret
ds
and
xchg
pop
xor
add
xchg
push
sbb
xchg
sbb
notb
es
int3
fsubrp
mov
cmp
pop
sub
movsl
pop
sahf
pop
test
cltd
inc
mov
inc
jl
iret
mov
lds
les
sub
fsubs
adc
mov
mov
dec
mov
lahf
insl
fistpl
mov
pop
les
pop
add
cmpsl
mov
popf
xchg
mov
cmp
cmp
scas
fldcw
add
pop
mov
add
aas
mov
xchg
fsubr
insl
mov
adc
mov
jbe
push
push
fistpl
andb
in
push
push
ss
jg
dec
mov
test
loopne
loopne
and
mov
pop
fwait
xchg
test
add
test
nop
xchg
out
int
dec
jle
repz
ret
xchg
insl
sub
sahf
jg
mov
nop
dec
and
mov
jp
fldl
jo
fisttpl
dec
sbb
mov
ds
mov
ret
popf
dec
ret
xchg
jb
out
mov
mov
inc
fmuls
dec
je
mov
or
lcall
push
push
flds
bound
xor
mov
and
test
push
lods
or
out
data16
in
mov
and
call
mov
out
or
inc
pop
push
add
std
mov
xchg
mov
adc
mov
ficomps
fs
aas
test
negb
mov
xor
popf
mov
push
gs
push
das
sub
loopne
sbb
dec
or
sbb
push
hlt
inc
psraw
mov
push
loopne
push
dec
repz
pop
mov
stos
pushl
sarl
ja
xchg
scas
pop
add
and
popa
inc
push
and
scas
or
lret
adc
push
stos
roll
xor
sub
xchg
in
jle
push
ret
jp
lahf
add
adc
xor
lock
dec
insb
mov
loop
push
test
or
jl
shlb
sbb
rolb
mov
xchg
mov
pop
jb
mov
stc
dec
pop
movsb
mov
decl
bound
pop
pushl
add
icebp
lds
xor
fisubl
mov
xchg
sti
cmp
lahf
dec
add
xor
and
call
das
pop
jo
dec
sarl
sub
mov
movb
xchg
mov
push
scas
xor
fldl2e
addb
ds
xor
cmp
inc
leave
bound
cmp
les
mov
addl
in
subb
nop
dec
xchg
pop
sub
or
or
repz
imul
jne
adc
cli
push
inc
xchg
test
push
mov
repnz
in
int3
cmp
pop
and
cmc
int
adc
lods
aam
rcrl
js
es
jnp
jge
pop
xchg
or
push
mov
xchg
test
xchg
cmc
mov
cmpsl
or
fmull
sbb
pusha
cld
mov
add
jne
mov
push
xchg
inc
data16
cmpl
mov
repz
imull
jb
arpl
sbb
shl
stos
je
cmpsb
jmp
pavgb
sahf
adc
adc
jae
sarb
jge
popa
mov
or
stos
sub
add
stc
pop
scas
aas
daa
inc
push
lret
dec
cmp
sti
testl
in
sbb
push
incl
outsl
push
jns
pop
test
mov
fwait
divb
je
dec
mov
aas
dec
xchg
decl
ds
mov
push
dec
imul
dec
mov
push
sbb
or
pop
or
and
je
mov
cmp
or
repnz
xor
daa
es
cmpsl
and
clc
xor
adc
mov
into
in
movsl
or
mov
or
pop
dec
push
add
out
mov
cmpb
push
jmp
add
std
mov
hlt
imul
sbb
cmp
sbbb
adc
test
cld
insb
in
pusha
pop
add
lods
pop
icebp
jno
movsb
int
add
divl
push
add
ss
lret
daa
sbb
fistpll
xchg
sbb
xorl
add
cmp
push
mov
xchg
lret
mov
fwait
pop
jge
mov
xchg
cld
shll
mov
jbe
hlt
mov
shll
shrb
inc
sahf
push
lods
sti
cmp
push
or
cmpb
sub
cmp
sbb
adc
xchg
clc
dec
ljmp
ret
add
adcb
mov
mov
loope
jno
mov
out
push
aad
xchg
and
stos
and
mov
sets
repz
imul
push
sub
or
insb
inc
in
in
push
push
sbb
in
sbb
jle,pt
inc
jmp
pushf
lods
mov
ss
in
cld
adc
subb
pop
loop
sbb
lret
lock
add
cltd
cmp
jmp
pushl
adc
lret
out
pop
jg
jb
push
jge
shlb
stos
mov
or
das
loopne
xor
xchg
push
and
xchg
scas
jne
scas
mov
sbb
push
dec
lods
ds
inc
cli
inc
dec
xor
xor
jp
xchg
fisttpll
lea
and
push
out
popf
rclb
mov
inc
push
stos
push
rclb
xorb
outsb
xchg
inc
lcall
pop
iret
inc
mov
or
int3
mov
jmp
rolb
out
cs
out
gs
fwait
test
lock
jl
dec
mov
ja
outsl
aam
jnp
gs
incw
inc
je
sbb
repz
pop
xor
add
sub
adc
arpl
rclb
push
jno
xchg
mov
sbb
aaa
frstor
test
movsb
out
insb
inc
cmc
pusha
and
pusha
es
lock
stc
lcall
mov
loop
sbbl
sahf
mov
bound
cmp
rcrl
mov
xor
inc
bound
jne
jl
dec
mov
pop
push
popf
lds
jno
mov
fwait
loope
ficomps
adc
cmpsb
xor
arpl
sbb
pop
movzbl
sahf
data16
divb
ja
loop
test
jecxz
push
dec
pop
enter
push
add
mov
push
push
call
sbb
push
push
xor
rclb
push
fisttpl
test
aas
sub
out
test
addb
jl
arpl
xor
lret
out
ret
dec
inc
hlt
cmp
subl
add
mov
cmp
xor
outsl
pop
add
pushf
pusha
ficomps
movsb
jg
notb
mov
dec
push
repz
lds
inc
jp
push
mov
cmp
push
aas
sub
mov
mov
xchg
pop
mov
cmpsl
jmp
or
mov
cmp
hlt
call
mov
mov
dec
jge
and
xor
sub
ret
cmc
and
add
and
dec
inc
stos
es
insb
dec
divb
mov
shlb
inc
int
xchg
bound
push
add
std
dec
es
mov
or
push
cli
ret
pop
rep
stc
mov
or
lods
int3
mov
les
repnz
jg
push
data16
xor
mov
xchg
sbb
insl
mov
lahf
sbb
out
dec
mov
cwtl
call
rorl
cmpsl
rorb
fldenv
cs
mov
lods
in
outsl
fisubl
xchg
jecxz
sbb
popa
outsb
xchg
xchg
jno
dec
in
push
adc
arpl
icebp
or
imul
mov
or
clc
clc
scas
jno
rorl
xchg
lods
push
in
pop
hlt
aam
cmp
popa
std
popf
es
insl
addr16
outsb
aaa
aas
or
lahf
or
call
leave
mov
call
cmp
mov
or
pop
xor
pop
fbld
popa
add
mov
sbb
sbb
shlb
and
bnd
lret
inc
rol
sub
jle
ret
inc
outsb
outsl
jns
xchg
std
push
outsl
andnps
scas
sbb
push
fnstcw
mov
push
sbb
test
cmp
pusha
cld
out
stos
or
movsb
pop
and
jbe
pop
xchg
fs
rcr
jge
push
mov
sbb
sar
rcrb
and
inc
loope
mov
mov
mov
add
clc
daa
popf
xchg
imulb
inc
cmp
repnz
mov
and
adc
dec
enter
mov
mov
imul
pop
out
dec
arpl
xchg
mov
mov
mov
and
out
insl
popf
ljmp
mov
imul
ds
repnz
es
leave
fmuls
outsl
mov
mov
out
inc
addr16
insb
mov
into
cmpsb
xlat
stc
icebp
mov
rcpps
xchg
pop
push
or
cmp
pop
cmpl
sub
je
sub
lods
jmp
cwtl
mov
xchg
xor
outsb
inc
lock
inc
add
inc
cmp
cmp
dec
scas
mov
imul
out
jne
sbb
push
xchg
mov
xchg
mov
or
cltd
daa
jecxz
xchg
inc
lcall
inc
test
mov
daa
addb
rol
add
sbb
das
and
sub
inc
loop
mov
fldt
xor
cmp
push
jnp
shlb
repnz
std
mov
dec
pop
add
dec
xor
loop
sbb
iret
pop
in
pop
cmp
push
push
out
cld
dec
pop
cmp
and
ja
ljmp
pop
setne
xchg
and
push
insb
fsubs
arpl
jle
mov
mov
mov
or
xor
cld
cmp
out
or
insb
fnsave
jmp
push
negb
shll
fmuls
and
jns
sbb
mov
icebp
mov
in
inc
in
sahf
pop
popf
aaa
lret
mov
cld
in
or
adc
fstpl
js
xchg
mov
push
dec
xchg
icebp
stos
clc
and
dec
xchg
push
sub
cmpsb
test
out
adc
lock
adc
cld
add
jne
jmp
mov
fnstcw
lcall
adc
movsb
jp,pt
xor
jnp
push
orl
and
push
movsb
pop
rcrb
aas
jne
andb
popf
sbb
adc
repnz
in
insl
mov
cmp
xchg
dec
into
clc
enter
dec
inc
adc
lea
test
xchg
hlt
clc
out
aas
add
mov
bound
aam
xorl
or
sbb
mov
xchg
or
mov
out
dec
and
inc
push
dec
xchg
repz
pop
dec
push
adc
cmc
xchg
xchg
in
dec
push
lods
aam
jno
leave
inc
push
jp
imulb
adc
shll
stos
dec
jge
mov
inc
imul
dec
testl
sbb
xchg
data16
cmpsl
mov
adc
dec
stc
adc
adc
push
out
xchg
or
cmp
insb
pop
mov
jmp
divl
movsb
shl
sbb
xchg
outsl
cli
add
sbb
adc
cwtl
xchg
outsb
and
xchg
adc
pop
cmpsb
jmp
subb
fsts
loop
xchg
leave
and
mov
sahf
jb
inc
mov
mov
add
int
loope
jle
out
sbb
cmpsl
pop
aad
std
xor
stc
and
push
xchg
cmp
dec
into
mov
int
nop
sub
hlt
adc
hlt
xor
cmpsl
push
pop
arpl
cmp
push
mov
sbb
adc
rolb
aaa
orl
jecxz
push
sub
gs
xchg
mov
std
dec
imul
mov
fcomps
pop
push
pop
ret
nop
loopne
nop
inc
dec
mulb
pop
test
data16
mov
test
lds
pop
aam
jle
lret
mov
in
cmpsl
xchg
sub
jmp
arpl
add
and
mov
in
pushf
popl
add
adc
dec
xchg
outsl
push
or
jge
xlat
adc
es
insb
cmp
ret
sbb
fistl
bound
ficoms
out
add
cmp
shlb
xchg
ret
mov
insb
stos
add
pop
gs
inc
frstor
rorl
xor
pop
call
dec
mov
and
cmc
and
jno
dec
dec
lods
mov
les
xor
movl
fldcw
lret
dec
mov
iret
stos
pop
movsl
cmp
add
mov
fadd
pop
into
loope
insb
jbe
fstps
xchg
sbb
xchg
mov
sub
mov
or
jle
xlat
rol
js
aam
insb
inc
jl
push
jle
dec
pop
rorl
fsubrl
mov
dec
mov
ret
scas
pop
jns
gs
loope
sub
jg
or
jmp
roll
sub
idivl
loop
and
sub
movsb
andl
add
div
arpl
in
and
arpl
and
mov
xor
aad
sti
loopne
mov
mov
pop
cmpsb
jge
dec
inc
es
loop
daa
push
cltd
imulb
rcl
adc
xchg
xchg
fcmovnbe
or
adc
rol
mov
in
mov
mov
cmpb
nop
inc
push
js
fs
mov
mov
imul
roll
enter
ret
push
jl
shrl
es
movsb
cltd
mov
cmp
fsubr
scas
inc
sub
repz
cli
js
sbb
test
jl
push
adc
jecxz
pop
mov
scas
xchg
jl
dec
mov
sbb
and
jg
adc
inc
sbb
orl
push
pop
dec
add
cmp
imul
xor
adc
addr16
sahf
icebp
adc
icebp
add
outsl
lods
addb
fists
cmp
adc
sbb
imul
test
imul
out
int3
test
sub
clc
jb
ljmp
call
or
imul
add
outsl
movsb
xchg
jno
xor
or
lock
clc
dec
mov
pop
cmp
push
shl
negb
mov
sbb
jns
xor
sub
jl
pop
push
lahf
xchg
stc
and
fsub
lea
inc
repnz
addl
mov
mov
xchg
push
xchg
sbb
pusha
in
fimuls
adc
fcomps
clc
jbe
or
or
dec
push
adc
xor
push
icebp
mov
rcll
xor
xor
popa
out
push
pop
sbb
daa
ret
fcom
bound
sub
xchg
pop
out
lret
add
loope
inc
push
jae
int3
xchg
xchg
movl
out
add
jb
mov
movsl
push
das
or
xchg
dec
adc
adc
int
clc
pop
or
xor
test
mov
out
push
adc
or
test
leave
push
hlt
push
data16
imull
inc
cmp
enter
xlat
jnp
inc
test
imul
test
pop
int
insl
dec
dec
xlat
xchg
xor
movsb
mov
jne
fimull
rorl
and
add
or
stos
push
inc
rorb
xchg
cmpsl
xchg
lods
aas
mov
lret
adc
clc
shl
jno
popf
int
inc
add
xchg
inc
and
cs
popw
xchg
mov
pop
enter
adc
push
in
cmp
int3
sbb
cli
xchg
ja
mov
mov
adc
cli
test
mov
pop
jnp
loop
ss
int
cmp
mov
mov
add
pop
out
into
sbb
inc
lods
mov
mov
sbb
jg
xchg
into
sub
js
ud2
push
rolb
sarl
pop
loop
xchg
mov
int3
aas
scas
add
fcompl
fwait
sarb
rolb
test
add
mov
dec
sbb
xchg
cmp
dec
fimull
clc
cmp
or
add
pop
push
sub
push
ret
add
pop
sahf
adc
lret
mov
xchg
jb
negl
push
pop
imul
daa
inc
adc
push
push
adc
add
pop
pop
in
xor
loopne
jecxz
inc
fldenv
bound
std
test
jecxz
aad
mov
jle
iret
movsb
je
jae
jg
sahf
pop
in
insb
inc
cmpsb
mov
adcb
adcb
mov
icebp
fdivrs
add
mov
adcb
xor
fistpll
xchg
lea
push
in
nop
mov
int3
sbb
adc
adc
cmpl
adc
jge
aam
sahf
addb
cs
mov
jbe
stc
xchg
inc
or
sbb
jmp
or
insb
fnstcw
xlat
cwtl
jge
out
sbbl
push
lock
mov
xchg
dec
arpl
adc
cmp
rorl
fisttpll
nop
jno
mov
push
sbbb
add
mov
jle
adc
nop
xchg
out
dec
repnz
sbb
dec
xor
and
es
mov
xchg
cmpsl
jg
push
std
out
dec
jecxz
push
fs
sbb
sbb
aaa
cmp
insb
inc
in
sbb
mov
aaa
and
pop
cmp
mov
cmc
fidivl
js
es
stos
movsb
pop
jno
mov
loopne
dec
jecxz
out
das
pop
dec
adc
add
fnsave
xchg
mov
xlat
cmp
pop
rcl
cld
push
mov
push
imull
cmp
dec
jg
lock
insl
in
sbb
xlat
push
loopne
shrl
add
fsts
clc
rolb
sub
and
jge
js
icebp
out
push
arpl
out
add
and
sbb
or
mov
lock
adc
dec
stos
in
or
pop
loop
adc
inc
int3
xor
lods
lcall
mov
xor
pop
and
xchg
inc
push
or
mov
jne
push
fistpll
cli
and
and
and
jge
lods
insl
xor
aad
mov
inc
xor
sbb
add
popa
mov
shl
daa
xchg
xchg
nop
cmp
inc
out
lret
xchg
xchg
add
cmp
in
loopne
sub
aad
push
stos
mov
push
push
inc
adc
push
repz
or
xorl
jo
out
int3
aam
aam
stos
jb
mov
add
test
into
mov
mov
fstpl
lods
mov
sub
add
inc
inc
jecxz
jne
xor
imul
and
cwtl
shl
outsl
roll
mov
sub
inc
push
dec
loopne
daa
jl
aam
stos
ja
pop
fmull
or
inc
inc
xchg
popf
xor
daa
push
jl
stc
and
loope
pop
flds
repnz
mov
roll
push
and
int3
data16
mov
xor
aas
scas
cmp
jne
jnp
inc
push
sbb
mov
mov
cmp
lretw
dec
movsl
sahf
or
sbb
xchg
mov
pop
insl
xchg
sub
xchg
ljmp
clc
pop
jns
fsts
or
jae
cmpsb
je
push
fstpl
mov
xlat
xor
shll
fsubr
lods
push
cld
push
cwtl
imul
aad
add
mov
jo
mov
jns
sub
movsb
in
add
dec
cmp
les
mov
popa
test
and
insl
imull
stos
data16
fidivrs
push
aam
fldl
or
pop
out
outsb
std
movsl
add
pop
decb
add
jg
push
and
pop
adc
mov
aad
fcompp
clc
jp
dec
push
leave
lahf
jle
insl
cmp
std
jl
fstpl
repnz
push
lret
sbb
mov
fwait
mov
sbb
lahf
std
lret
jne
mov
dec
sti
lcall
testl
lahf
int3
cmpsb
insb
pop
push
jnp
stos
mov
adcl
lret
int3
dec
mov
lahf
add
mov
mov
fisttps
jno
xchg
jp
push
mov
pop
xor
jmp
dec
popf
inc
popa
aad
iret
addr16
xor
cwtl
mov
or
andb
repz
dec
sarb
mov
and
mov
push
out
sub
pushf
xchg
orb
scas
adc
fdivs
or
jl
xchg
sub
push
push
inc
add
cmc
inc
or
dec
cs
mov
std
movsl
popf
out
enter
fdivl
test
push
jecxz
es
aam
jno
in
sti
scas
mov
mov
xor
nop
mov
aaa
pop
xchg
pop
lock
es
xchg
icebp
shrl
js
jg
js
add
jb
lret
mov
mov
mov
outsb
jo
xchg
xchg
stos
shrb
jp
or
jae
mov
iret
jne
cld
pop
xor
fadds
pop
jnp
loop
dec
xlat
test
lds
enter
ljmp
arpl
ss
or
lret
mov
sub
hlt
pop
popl
xchg
and
mov
fstl
push
into
jb
or
adc
fwait
cmovae
fs
add
ja
inc
jno
mov
pop
cli
sub
mov
movsb
adc
add
popf
add
mov
es
sub
dec
aas
mov
dec
mov
movsb
movsb
mov
jne
mov
cmc
xchg
arpl
mov
mov
repz
xchg
cmp
aas
adc
fwait
push
gs
push
pusha
dec
push
in
mov
xlat
cwtl
or
cs
push
jg
xchg
pop
arpl
sbb
pop
mov
in
dec
ret
inc
out
jge
ljmp
adc
mov
loopne
cmpsb
lods
or
shll
lock
pop
bound
mov
int
and
inc
js
sbb
gs
or
sbb
aaa
orb
out
inc
nop
pop
andl
and
push
or
rorb
xchg
jge
pushf
adc
mov
lret
adc
jmp
aaa
fsubrl
xorb
jmp
jnp
sti
pop
and
lea
mov
add
stos
inc
js
pop
dec
in
jbe
adc
mov
pop
adc
test
pop
cmp
jnp
mov
dec
ja
and
outsb
outsl
pop
jmp
es
mov
fsubs
inc
or
push
push
push
je
pop
subb
rolb
add
jne
gs
xor
mov
inc
push
mov
push
add
pop
int
xor
pop
dec
loopne
mov
cld
in
rdpmc
and
or
ss
push
inc
adc
out
stos
out
fwait
aam
ret
sbb
and
lds
pop
ja
push
xor
sahf
shl
int
lcall
negl
pop
out
fldl
sahf
pushf
stc
or
shl
stos
sub
push
xchg
icebp
xchg
fisttpll
ret
mov
cmp
pop
fwait
mov
mov
xorb
mov
addr16
mov
movsl
mov
daa
arpl
pop
xlat
inc
ja
test
nop
aaa
mov
out
and
push
stos
lods
fcompl
in
pop
mov
and
cwtl
movsl
adc
data16
xchg
lfs
jo
jae
mov
fdivs
push
lret
aad
mov
movsl
cs
sbb
push
ljmp
rcr
xchg
mov
mov
out
jb
xchg
xchg
inc
jmp
pop
outsb
fiadds
nop
pop
dec
or
push
and
aam
into
negl
test
cmp
test
scas
cmp
js
mov
mov
cmpsb
xor
mov
sub
xchg
or
fdivp
fdivs
jmp
aam
sbb
popf
add
cltd
jne
mov
and
hlt
dec
sub
arpl
lret
xor
xchg
jecxz
adc
daa
rorb
mov
push
add
mov
mov
jmp
mov
loop
jb
xchg
fsub
cmc
or
xlat
arpl
out
add
ja
cmp
inc
stos
jae
sarl
sbb
fs
xor
mov
pop
xor
popa
jecxz
ljmp
and
data16
rclb
inc
add
push
cmpb
stos
les
les
movsl
aad
fs
jge,pt
sahf
or
div
pop
sub
and
ret
rcll
and
imul
jb
sbb
sbb
mov
xlat
outsl
ljmp
xchg
cmp
cld
xchg
icebp
xor
arpl
push
push
imul
pusha
mov
fwait
add
cmp
xchg
jmp
cmp
movl
mov
shlb
or
mov
leave
fldt
sbb
jne
lock
insb
adc
xchg
dec
stc
aad
cs
das
push
cwtl
xor
mov
xor
pop
lea
xlat
adc
cmc
cmp
push
dec
in
cltd
cli
jno
scas
mov
out
mov
imul
ja
pop
adc
mov
adc
and
ret
std
cltd
sub
and
rcr
into
fs
pushf
outsl
adc
mov
dec
inc
sbb
dec
xor
andb
mov
push
mov
andb
popf
mov
mov
lds
pop
fcoms
sar
add
shrl
inc
pop
icebp
add
or
inc
test
je
loop
repz
and
ja
cltd
nop
mov
mov
ja
inc
aas
fdivp
cmpsb
fwait
jae
and
pop
idivl
and
cmpsl
arpl
mov
decl
fs
pop
mov
lods
sbb
jb
cmc
sbb
mov
lock
sub
jb
xor
sbb
inc
mov
rcrb
in
push
pop
xor
out
sub
jmp
mov
jne
xchg
xchg
sub
shlb
shlb
loop
inc
inc
test
pop
xor
pop
lods
xchg
stc
test
cmp
xchg
cmp
psubb
in
imul
add
mov
mov
or
dec
cmpsl
mov
loope
dec
repnz
loopne
mov
filds
ret
jo
sub
popl
pop
jl
nop
inc
outsl
lods
jle
fwait
mov
xchg
dec
sub
in
sbb
mov
test
aas
push
jge
mov
mov
mov
mov
jmp
test
loopne
loop
fimull
add
in
sub
pushf
sub
stos
add
imul
push
fldcw
ficoms
stc
popf
out
bound
xchg
xchg
cmpsb
out
xor
int3
jp
sti
mov
xchg
sub
xor
loop
xchg
inc
into
push
xchg
or
jge
cmp
inc
mov
iret
add
ja
insl
icebp
cli
add
dec
sbb
test
add
mov
cmpsb
stc
dec
inc
push
xor
cmpsl
jp
out
xor
jbe
mov
popf
pop
adc
rcl
mov
mov
repz
inc
jno
lahf
pop
pop
shl
sub
loopne
jmp
adcl
cmp
mov
rclb
dec
inc
hlt
and
out
test
cmp
mov
dec
fs
xchg
or
inc
sbbl
sub
orl
or
push
add
je
int3
mov
je
ss
cs
fnstenv
fwait
sbb
fs
mov
in
bound
mov
pop
and
mov
adc
adc
jge
ret
cmp
mov
add
call
rol
xchg
xchg
mov
jnp
loopne
inc
insl
jne
out
cld
cmp
xchg
inc
xor
dec
cmp
cwtl
orl
pop
test
fmuls
aam
leave
out
les
xor
popf
mul
sbb
repz
adc
nop
enter
mov
pop
mov
std
enter
cmp
add
mov
mov
add
jns
das
xchg
ja
xchg
cmpsb
mov
xchg
cli
fwait
scas
jnp
cmp
cltd
imulb
sub
rclb
push
mov
push
pusha
add
adc
icebp
pop
xor
pop
cmpxchg
sbb
xor
scas
cmp
fiadds
inc
pop
ret
mov
push
sbb
arpl
outsb
flds
xor
xchg
cmp
pop
inc
mov
into
lcall
std
int
adc
cmp
cmpsl
sbb
cmp
daa
xor
addb
dec
jmp
cmp
mov
xchg
movsb
cmpb
lcall
popa
sub
or
add
imul
push
adc
test
mov
pop
roll
jnp
cmovno
mov
scas
mov
je
sbb
movsb
int
stos
in
rolb
imul
add
adc
mov
inc
icebp
leave
data16
and
cvttps2pi
addl
mov
lock
lds
xor
jg
subl
clc
sbb
jl
xor
test
sub
mov
movsb
and
adc
pop
cmp
testl
ds
test
in
pop
enter
in
loopne
hlt
into
testl
jle
mov
stos
ljmp
mov
sbb
test
or
jo
or
hlt
mov
out
xchg
inc
push
add
adc
adc
push
stos
sbbb
in
cmp
mov
add
testl
into
mov
inc
fwait
mov
xchg
lds
cmp
insb
loope
mov
cmp
jae
scas
mov
into
xchg
int3
jae
gs
lahf
inc
jbe
push
test
test
mov
std
or
data16
int3
or
pushl
add
push
hlt
jmp
mov
mov
movsl
add
repnz
gs
sbb
xor
sub
mov
inc
arpl
cltd
ljmp
lret
std
in
lea
mov
dec
sahf
xor
cmp
jmp
insb
mov
adc
and
push
inc
clc
xor
lahf
cltd
cmp
push
das
lds
mov
sbb
mov
add
jo
lcall
scas
inc
push
xor
jp
fstps
pop
xchg
fcmovne
jg
mov
test
enter
cmp
xchg
sub
scas
sub
popf
pop
out
popa
filds
frstor
cmpsb
std
mov
mov
mulb
lods
mov
int3
xor
mov
dec
ss
sub
notb
pop
std
inc
int
pop
push
pop
pop
cs
dec
jg
dec
idiv
add
addr16
jl
push
jmp
cmp
jnp
sahf
add
pusha
jns
dec
jb
cwtl
fwait
pop
aam
insl
stc
test
cmp
aam
cmp
mov
in
lock
jmp
dec
repnz
or
push
and
sbb
lcall
lahf
mov
xchg
xchg
push
dec
mov
lcall
and
jns
leave
sbb
nop
pop
sbb
lcall
and
mov
mov
fcom
mov
jb
nop
sbb
jmp
test
mov
das
iret
in
mov
push
cltd
fnsave
subl
sahf
mov
sbb
sub
mov
and
mov
outsb
jb
dec
test
jge
push
sbb
jae
jno
inc
data16
jp
adc
xor
fdivl
push
adc
add
aas
out
cmc
mov
lret
dec
in
pop
xor
movsl
mov
or
add
stc
push
lods
int3
mov
add
mov
adc
jp
push
div
pop
inc
ffree
ret
push
pop
push
ss
fbld
sub
or
insb
xchg
ret
pushl
push
ja
test
inc
push
pop
pop
pop
push
pusha
mov
scas
daa
mov
mov
aad
shlb
sahf
hlt
jmp
repz
repnz
js
and
jl
rcrl
push
je
and
lods
test
dec
daa
mov
rorb
sub
test
dec
dec
sahf
pop
sub
es
dec
out
hlt
jg
jae
jge
xchg
sub
pop
inc
mov
jnp
inc
shl
push
sarb
and
or
inc
ja
mov
dec
push
xchg
js
xchg
sub
lods
mov
enter
or
leave
scas
lock
xchg
dec
frstor
push
scas
test
stc
mov
cmpsb
sarb
mov
cltd
cmp
mov
xchg
addr16
scas
xor
mov
sub
shlb
adc
jne
mov
es
mov
sbb
add
roll
jmp
jbe
pop
jmp
mov
push
inc
stos
ret
popa
fistpl
mov
ljmp
mov
jle
leave
ffreep
pmaxsw
sub
dec
pop
jle
pop
or
dec
imul
test
mov
adc
push
dec
add
mov
jl
into
cs
mov
gs
sub
sub
inc
inc
notb
mov
mov
or
nop
rcl
lods
inc
pop
stc
push
cmpsl
xor
add
and
sbb
sbb
stos
mov
lahf
sub
sbb
or
dec
dec
or
ljmp
lods
and
push
pop
ss
adc
mov
andl
dec
jb
jle
lahf
cs
aad
mov
scas
jecxz
mov
scas
sahf
push
dec
sub
mov
mul
sbb
fists
stc
leave
dec
aam
xchg
sti
lock
and
scas
jecxz
xchg
mov
mov
dec
insl
aas
test
gs
or
hlt
aad
ficomps
add
or
or
inc
call
das
and
aam
mov
test
mov
jmp
xchg
mov
jge
jo
jns
sbb
mov
cmp
jp
and
popf
andl
shll
pop
in
sbb
adc
loopw
cmp
inc
dec
sbb
subl
and
inc
cs
mov
and
divl
and
out
testb
mov
add
add
repz
aam
cmp
out
mov
push
jo
mov
jecxz
xor
push
or
stos
outsl
mov
adc
jecxz
loopne
int3
sarl
movsl
ret
js
jle
adc
adc
mov
in
sub
sub
jge
stc
leave
pop
ret
insb
xor
lret
inc
mov
stos
shrl
shll
das
dec
pop
and
aad
enter
ret
insb
scas
fiaddl
push
popf
push
mov
test
sub
xor
imul
gs
test
gs
mov
out
adc
leave
in
cmp
loopne
add
cmp
xchg
and
popf
mov
nop
std
lahf
or
dec
or
je
int
jp
cmpsl
das
je
nop
xor
pop
faddp
inc
je
mov
movsl
lcall
cmp
cli
and
lret
xchg
push
test
fsubrl
subb
push
inc
inc
sub
pop
pop
ffree
or
inc
add
cmp
dec
div
sbb
negb
scas
fistps
sbb
mov
fs
push
pushf
cmp
xor
test
shlb
mov
in
mov
cmpsl
call
imul
sub
ja
fisttpll
sub
xchg
test
pop
js
aad
cmp
xor
call
mov
fiaddl
pop
lcall
es
xor
fucomp
movsl
mov
cwtl
cmp
leave
cwtl
cwtl
sahf
iret
int
inc
out
outsb
testb
call
push
subl
out
lock
scas
fisubl
test
lods
pop
mov
std
mov
mov
pop
jns
lcall
addb
mov
adc
loopne
mov
cmp
mov
push
test
das
push
jne
or
and
adc
sub
xchg
mul
jmp
in
les
jns
dec
cmp
fcompl
enter
push
into
je
xor
mov
adc
sub
pop
xorl
mov
adc
ss
or
inc
add
mov
sti
scas
mov
xor
std
dec
jb
cmc
sbb
ds
fwait
and
fsubl
ret
mov
ret
sbb
sub
adc
xor
sub
sti
pop
pop
sub
test
lods
inc
aaa
sbbb
jg
push
cwtl
inc
mov
ljmp
fld
sub
jns
mov
arpl
jmp
xor
jnp
jg
test
mov
mov
loope
insl
dec
sar
sbb
xor
daa
repnz
mov
aas
das
push
push
or
iret
movsb
test
mov
incb
xchg
mov
mov
lea
aad
mov
orl
jmp
cld
cmpl
data16
push
jb
hlt
inc
out
jl
push
push
int3
adc
lock
lods
adc
push
cmp
dec
dec
xchg
cmp
inc
xlat
xchg
mov
push
scas
push
lock
dec
dec
gs
in
push
insl
stos
xor
adc
addr16
clc
cmp
fmull
sbb
xchg
ljmp
and
pop
aam
mov
and
add
int3
sbb
jns
test
test
adc
mov
int3
mov
jbe
mov
dec
hlt
mov
xchg
mov
push
push
adc
movsl
dec
mov
or
fnstenv
mov
adc
mov
lock
mov
sahf
jbe
xchg
bound
je
lds
push
or
cld
push
or
lds
sti
je
subb
hlt
addr16
mov
jae
push
jae
jo
lcall
subl
rorl
pop
inc
aam
add
mov
lret
mov
push
outsb
ds
cmp
sub
andl
call
jb
xchg
test
adc
pop
nop
lahf
jg
jo
in
fidivs
sub
adc
sbb
cmpsl
cli
lret
cmc
cmp
add
push
dec
popa
je
add
daa
daa
sub
mov
lret
pop
dec
or
pop
rcrb
xor
mov
in
out
cmp
hlt
push
ljmp
fnstenv
mov
push
jae
dec
mov
or
mov
fisubl
sub
and
add
add
jecxz
outsb
dec
and
sub
adc
jbe
test
clc
and
inc
cltd
push
adc
pop
xor
dec
sbb
pop
push
outsb
cmc
fmuls
inc
gs
insl
mov
jmp
stc
mov
shll
inc
lcall
push
aaa
jl
sub
outsl
cltd
dec
sbb
loope
test
fisubrl
mov
add
sbb
xchg
nop
jns
push
repz
lcall
ja
std
stos
test
inc
jge
scas
sbb
lods
fwait
subl
in
lds
push
push
jle
clc
mov
xor
xchg
sbb
mov
aam
mov
pusha
sub
aam
mov
int
xor
push
bound
cmp
dec
xor
jmp
jge
push
mov
adc
adc
dec
mov
sahf
dec
js
pop
add
add
pop
jbe
jb
mov
dec
cmp
pop
xor
pop
or
rcll
add
mov
dec
cmp
jb
cmp
sbb
push
in
xchg
jo
dec
push
push
aad
pushf
mov
add
gs
dec
pop
arpl
movsb
aam
mov
push
andw
xchg
sub
ljmp
sbb
dec
rorb
or
pop
lock
leave
andb
sahf
je
jb
addr16
ja
jge
mov
rcr
jmp
addb
or
in
jbe
in
les
and
xor
mov
test
or
popf
ljmp
xchg
push
shrb
xlat
cltd
push
loopne
push
mov
add
lret
mov
sub
aaa
notb
mov
xchg
ss
mov
mov
pop
mov
push
pop
mov
addr16
mov
inc
rcl
jg
pop
mov
add
notl
imul
iret
ds
movsl
and
loop
test
shrb
cmp
cmp
and
mov
repz
call
dec
nop
lcall
and
std
in
sub
std
loope
cli
ret
int3
movsl
rcll
cmp
mov
xlat
mov
mov
fsubl
pop
sti
shlb
sarb
xor
dec
in
pop
aad
dec
pop
dec
pop
ret
icebp
rol
or
add
mov
cmp
xlat
pop
xchg
xchg
add
int3
ja
loope
or
jge
sbb
aaa
cmpsb
push
jmp
and
cmpl
mov
sbbl
mov
push
das
dec
and
into
mov
lahf
pushf
int
fsts
cld
push
mov
adc
in
dec
int
jno
loop
lret
jp
mov
xchg
dec
cwtl
inc
fucomip
mov
movsl
dec
in
mov
and
mov
aaa
std
ficoml
fildll
aad
xor
aaa
movsb
mov
fiadds
mov
aad
adcb
inc
add
std
xchg
sahf
enter
pusha
ss
cmp
mov
pop
cmp
ljmp
aad
add
out
xchg
xchg
and
stc
test
leave
cmpsb
outsb
sahf
mov
xchg
adcb
dec
lock
mov
lods
int3
sub
dec
js
jle
push
dec
movsl
inc
cmp
xchg
call
cld
lds
push
sub
test
push
ds
pop
cmpsb
je
xor
jo
add
ds
lock
jp
inc
and
scas
bound
icebp
sbb
sar
mov
and
cmp
mov
shlb
sbb
mov
lods
lock
dec
pusha
iret
xor
sbb
mov
imulb
scas
mov
xor
cmp
fmull
mov
inc
inc
push
mov
cltd
movsl
call
add
jp
outsl
jns
cmp
mov
sub
mov
xor
ljmp
pop
shrb
int
lahf
add
faddp
in
sub
pop
cwtl
sahf
push
call
sub
inc
cmpsl
jo
lods
aam
xchg
hlt
add
xor
pop
adc
jns
mov
xchg
ja
pop
lea
add
pop
cs
sbb
sub
hlt
mov
out
and
aas
aas
in
out
jns
cmp
gs
addb
mov
mov
mov
pushf
mov
jl
lea
test
test
subl
ja
sub
fidivrs
mov
fwait
jb
dec
xchg
push
fcomi
dec
cmp
aam
rcl
pop
in
dec
mov
xlat
inc
mov
and
push
mov
fcoml
and
inc
insl
outsl
arpl
nop
xchg
xor
mov
sbb
fwait
out
insb
mov
sub
addr16
push
int3
imul
fcmovbe
mov
ror
shlb
and
pop
adc
jg
fs
cld
adc
loope
cwtl
dec
sub
mov
mov
aad
inc
inc
jl
adc
mov
bound
movsl
cmp
jbe
insb
or
mov
ret
cltd
adc
mov
leave
xchg
inc
mov
ja
js
call
imull
jg
pusha
ljmp
sub
rol
pop
or
jecxz
ret
or
jge
ret
jne
jmp
fwait
push
pusha
xchg
inc
fldl
sbb
decl
mov
push
sbb
sbb
adc
push
jb
and
lahf
lea
cmc
or
inc
pop
fwait
mov
push
leave
ja
daa
mov
adc
hlt
inc
mov
insl
icebp
mov
js
icebp
cmpsb
lods
xchg
aaa
push
xor
xor
sbb
and
out
pop
cwtl
imul
mov
stos
ds
mov
cld
xchg
loop
ja
mov
stc
xchg
jns
pop
cmp
stc
pushf
dec
pop
lds
dec
mov
movups
inc
adc
push
test
jg
mov
lahf
dec
sbb
shlb
iret
push
sbb
mov
int3
out
lea
int
mov
test
pop
fisttpl
sar
addr16
bound
roll
and
cltd
outsl
in
and
pop
inc
jne
push
clc
insl
xchg
fadds
dec
xor
xchg
sbbb
mov
cmpsl
insb
push
stos
loop
scas
sahf
and
insb
push
repnz
push
jae
sarb
or
xorl
push
out
dec
add
jmp
pop
je
popf
in
add
or
push
scas
in
and
rcll
mov
xchg
mov
nop
cmp
pop
shlb
jl
dec
jp
sub
sbb
xchg
jp
enter
xchg
mov
or
jg
add
mov
dec
or
and
cmp
cmp
in
ja
pushf
lcall
xor
mov
loopne
cwtl
out
add
xchg
push
orl
repnz
sbb
popa
push
jnp
push
cmp
dec
fs
mov
stos
call
lock
dec
and
lds
pushf
pop
in
and
add
in
popf
leave
add
aaa
outsl
movsl
lret
ret
int
ds
data16
insl
es
loope
push
shrb
lds
fsubp
push
push
adc
sti
adc
mov
lds
mov
call
dec
mov
dec
cmp
imul
pop
jge
jae
maskmovq
push
cmp
inc
cmc
nop
cltd
xchg
mov
jl
mov
ds
into
pushf
div
scas
adc
jl
loopne
mov
hlt
xchg
add
jp
rorl
and
subl
pop
add
cld
addb
push
jg
roll
lods
and
dec
cmc
movsb
xchg
mov
sub
ljmp
mov
jp
push
jge
mov
cli
and
dec
mov
cmp
jne
adc
inc
dec
sti
pop
out
add
mov
call
out
iret
rcr
rcrb
adc
adc
fwait
stos
in
cli
in
xor
mov
enter
int3
out
mov
pop
push
add
sbb
in
sbb
jnp
xor
pop
cwtl
pop
push
push
fidivl
sbb
and
vpunpcklbw
lret
or
cmpsb
pop
lock
mov
adc
imulb
mov
fsubs
ficoms
out
nop
xchg
in
dec
stos
mov
std
sar
mov
dec
or
push
sub
cmpsb
inc
test
jl
lock
jne
popf
ret
inc
adc
in
sbb
pop
int3
cmp
aad
sub
fimuls
mov
ret
out
je
mov
nop
stos
add
jns
mov
add
lret
icebp
rcl
ds
popa
mov
mov
fnsave
push
pushf
xchg
sbb
jne
lcall
test
push
dec
les
fs
adc
cmp
mov
mov
pushf
xor
xchg
dec
loope
fbstp
out
shll
and
repz
notw
pop
or
shl
cmp
js
pop
ljmp
rorb
popa
sub
or
xor
dec
lret
dec
testb
lret
int3
inc
call
movb
insb
ret
mov
push
shlb
fstpl
push
lods
std
push
sbb
test
dec
mov
or
jmp
or
or
adc
pop
xchg
into
mov
xchg
jbe
push
sbbl
jmp
test
xor
jns
shlb
mov
sbb
xor
movl
jnp
daa
and
push
inc
pop
add
jns
or
out
fisttpl
push
imul
sbb
lds
mull
mov
adc
sbb
lds
dec
xor
dec
fs
mov
mov
and
push
and
push
sbb
xchg
sti
pop
add
cli
xorl
mov
mov
loope
jae
mov
jle
ljmp
mov
mov
jae
sbb
aaa
jle
mov
add
pusha
das
mov
testl
or
std
lods
arpl
push
test
and
js
test
pop
push
and
xchg
cmc
into
pop
and
mov
hlt
cmpsl
daa
push
out
pop
mov
sbb
test
cmp
out
dec
xchg
xchg
das
mov
pop
dec
mov
gs
out
repz
lds
inc
outsl
icebp
lods
cwtl
in
clc
mov
test
add
jbe
lea
pop
inc
push
cmp
cmc
add
cs
imul
sub
adc
jge
xor
hlt
inc
shll
test
cmp
xchg
xchg
test
and
xchg
bound
aad
xor
mov
loop
or
mov
inc
int3
pop
pop
movsl
pushf
pop
push
jns
lea
hlt
mov
xchg
inc
movsl
rcll
xchg
lret
cmp
std
pop
nop
in
daa
cltd
cwtl
mov
pop
mov
stc
cli
mov
mov
add
and
jb
loop
in
mov
mov
lcall
mov
adc
adc
loopne
rcll
scas
fwait
or
hlt
ja
mov
pop
loopne
inc
loopne
jmp
scas
popa
in
arpl
movsb
fs
push
cs
std
icebp
push
fbld
pop
pop
lock
xchg
call
hlt
int
jb
sbb
stc
mov
dec
pop
xchg
inc
shlb
jno
lods
dec
mov
pushf
fcompl
iret
xchg
movsb
push
xor
or
add
inc
jecxz
pop
daa
lahf
test
mov
icebp
test
jae
xchg
je
pop
pop
pop
jecxz
cld
divb
mov
sbb
inc
push
xchg
mov
inc
rcl
repnz
ja
testl
jne
lock
fs
dec
sbb
popf
mov
push
roll
push
lcall
mov
inc
mov
repnz
arpl
jae
in
notrack
mov
mov
sub
mov
fstpl
mov
lret
arpl
add
sub
cmp
adcb
outsb
adc
mov
lea
jns
into
push
sub
xor
push
mov
stos
imull
and
imul
add
movsl
icebp
mov
mov
sub
mov
adc
push
pop
xlat
inc
sub
movsl
xlat
or
sbb
js
xchg
aas
push
lcall
fwait
rcll
cli
lea
mulb
inc
xchg
movsl
xor
push
mov
das
inc
arpl
daa
addb
dec
fidivrl
push
cmc
jns
clc
adc
adc
repz
dec
sbb
lcall
mov
rolb
push
add
pop
mov
mov
inc
and
and
cld
hlt
inc
xchg
inc
sbb
cmp
and
pop
outsl
push
shr
mov
imul
cld
add
xchg
add
aaa
out
jb
lahf
es
adcb
out
xlat
cmp
push
and
insb
pop
inc
sahf
sbb
int3
popf
shll
sub
dec
in
cmp
mov
cwtl
fs
lods
xor
mov
sub
outsl
cltd
dec
notb
pop
inc
push
jmp
mov
adc
push
inc
scas
jp
imul
sahf
fs
addr16
push
adc
xchg
sub
jl
and
xor
mov
pop
out
test
push
mov
adc
pop
out
les
xlat
jo
arpl
add
mov
xor
fcomps
imul
cmp
mov
std
sbb
repz
fucomip
sub
lods
into
sbb
mov
cmp
or
pop
jp
cmp
shll
loopne
lcall
subb
aad
sbb
inc
push
test
gs
dec
rorb
and
sbb
lods
xchg
leave
movsl
lods
add
lret
mov
ror
or
mov
inc
mov
mov
negb
test
adc
arpl
mov
mov
lcall
ja
xchg
mov
out
imul
repz
hlt
jno
dec
movsl
fnstenv
jbe
in
mov
ret
dec
mov
mov
xchg
out
fisttpll
mov
out
sbb
pop
dec
adc
imul
not
dec
and
add
jmp
sub
push
push
mov
rcr
imul
xchg
inc
in
cmp
popf
cmp
xor
inc
loopne
std
jge
pop
lret
lea
mov
loop
pop
jge
das
decl
dec
clc
cs
decl
cmpsl
mov
out
cmp
jp
mov
cmpsb
push
mov
sub
pushf
push
or
xorb
insl
add
clc
adc
les
repnz
and
sub
xchg
lahf
arpl
cmpsb
lock
outsb
in
aam
ljmp
push
sbbl
or
xchg
push
mov
add
sub
mov
jo
sbb
or
mov
pop
aas
test
int
movsl
mov
scas
dec
cltd
lock
rcr
sub
in
inc
adc
mov
inc
push
mov
repnz
loope
cmc
int
pop
cmp
ret
shlb
orb
aam
loopne
adc
gs
gs
xchg
mov
sarl
lret
or
adc
mov
cmpsb
jge
push
dec
inc
test
js
adc
std
leave
pop
cmp
cwtl
sub
lea
int
cmp
out
pushf
inc
dec
xchg
mov
pop
mov
clc
sarb
into
jg
mov
or
inc
pop
mov
inc
pop
outsb
jnp
nop
inc
xchg
test
mov
adc
fdivr
mov
lret
shlb
lea
jnp
cmp
movsb
push
enter
in
fwait
cltd
push
add
pop
adc
lret
xchg
lock
and
out
lret
fmull
icebp
outsb
mov
daa
in
or
xlat
push
mov
iret
scas
pop
cmpsb
lds
cmp
test
jnp
jl
stc
mov
cltd
in
icebp
mov
out
popa
sbb
test
pop
fnstsw
jmp
lds
xor
stos
mov
xchg
pushf
mov
pop
sbb
mov
scas
loopne
mov
xor
pop
sub
jmp
cmpsl
bound
lret
add
lea
jle
mov
push
stos
sub
outsl
jno
fs
adc
mov
adc
jl
xor
and
aaa
sub
loop
shlb
push
pusha
or
imul
inc
mov
pop
pop
xchg
dec
mov
cmp
cltd
das
fimuls
loopne
movl
imul
pusha
mov
ds
inc
pop
push
negb
xchg
cs
fsubrp
stos
jno
cltd
fwait
mov
sbb
dec
subb
test
in
aas
insl
xor
stos
sti
insl
int3
andb
int
push
pop
pop
add
jns
rcrb
mov
cs
push
pop
stc
jp
les
pop
jns
push
and
push
cwtl
or
ss
xchg
and
add
insl
or
pusha
xchg
int
inc
xchg
ja
leave
pop
icebp
daa
inc
cmp
in
push
cli
push
jae
test
xchg
inc
sarl
ja
orl
loop
sbb
outsl
pop
jo
xchg
ja
call
sbb
dec
sbb
cltd
lea
dec
mov
mov
push
lahf
lret
rdpmc
mov
std
aad
mov
subb
jge
mov
push
inc
stos
lcall
push
repz
nop
mov
xor
frstor
shr
loop
nop
faddp
and
pop
movb
int
sub
xchg
out
cld
push
adcl
lea
call
pop
cmp
jmp
in
in
add
lds
sub
push
pop
jle
adc
in
lret
dec
xor
stos
add
ljmp
fiadds
cmp
dec
enter
jno
pop
stos
gs
fs
ja
inc
pusha
add
xor
jnp
mulb
xchg
icebp
mov
imull
test
and
push
int
lds
sub
adc
ljmp
sbb
addr16
dec
pop
cmpsb
sbb
fisubrs
xchg
fstpt
ljmp
fcmovnu
adc
cmp
pop
cwtl
stos
dec
xor
in
inc
call
and
cmp
sbb
jb
pop
adc
lds
add
fwait
pop
cmc
repnz
cmpsl
cmp
rcr
out
iret
bound
aam
dec
sub
cmpsb
mov
pop
sarb
lods
in
daa
jne
jnp
mov
rcrb
jbe
mov
adc
nop
xor
add
pop
push
repnz
adc
jl
mov
popf
mov
out
outsb
rclb
xchg
jbe
enter
mov
jge
mov
pop
cld
bnd
push
push
and
sbb
cmp
xchg
fists
sbb
in
mov
addr16
push
dec
in
bswap
inc
call
outsb
mov
test
xor
scas
mov
std
cmp
lds
and
aas
push
cwtl
mov
jl
or
add
aam
jbe
adc
add
movsl
push
or
pop
xor
mov
test
adcl
roll
rcr
adc
cmpsb
lret
lods
pop
lcall
outsb
mov
hlt
fwait
xor
outsl
aad
mov
xor
out
arpl
pop
nop
jmp
mov
xchg
dec
or
fcoml
dec
xchg
cmc
dec
scas
jne
inc
imul
mov
cs
pop
test
int
cmp
or
mov
pop
je
aad
adc
or
add
ljmp
adc
mov
mov
mov
push
int
inc
pusha
mov
adc
fists
dec
out
lock
mov
xor
and
or
jp
adc
sahf
mov
mov
jmp
pop
fidivrs
push
out
sbb
lea
mov
pop
lods
xor
pop
fwait
add
fcoml
and
iret
mov
dec
push
or
bound
lcall
rcll
pop
ret
xor
xor
shrb
sub
add
mov
dec
sub
xlat
fs
mov
pop
jle
and
outsb
insb
mov
cwtl
cmp
fs
lds
mov
sub
pop
test
mov
xchg
add
adcl
inc
dec
mov
jg
xor
or
adc
mov
add
into
fistps
loop
sbb
pop
dec
cltd
mov
and
adc
test
xor
in
push
cwtl
or
mov
fistpl
rcrb
sub
jl
and
xchg
lds
leave
lods
in
xor
stos
add
and
add
cmp
movsb
push
cmp
insb
shr
mov
xor
cmp
push
into
popa
pop
sub
sub
dec
pop
lcall
sbb
outsb
out
or
je
ret
and
out
pop
shll
cmc
mov
fildll
lcall
lods
inc
mov
sbb
cld
cwtl
imul
xchg
lcall
push
mov
sub
lahf
test
arpl
sub
mov
icebp
mov
and
xor
in
mov
movsb
sbb
cmp
add
and
pop
icebp
sub
adc
sbb
mov
push
push
test
pop
xchg
ss
or
inc
icebp
mov
jnp
jg
mov
xchg
adc
movb
cmpsb
pop
lret
popa
cmpsb
call
lret
rorb
pop
cmp
dec
xchg
sti
ds
movl
mov
scas
push
push
push
sub
xchg
dec
fbstp
adc
data16
nop
out
push
sbb
addb
and
adc
out
mov
mov
popl
push
rcrl
stc
add
mov
mov
push
adc
pop
xchg
cmp
or
test
add
pop
or
and
sbb
dec
ret
ja
mov
mov
dec
ljmp
add
testl
push
loopne
cmp
and
cmp
inc
gs
sub
int3
adc
cmpsl
xorl
testb
addb
sahf
mov
int
rolb
bound
sub
cwtl
shlb
ficomps
or
movsb
sbb
cwtl
mov
cmp
mov
iret
mov
inc
aad
icebp
pushf
loope
lret
je
cmp
in
cmp
scas
je
lret
inc
daa
in
lds
lds
mov
jae
ret
add
lock
imull
sub
xchg
ret
pop
ret
out
jecxz
inc
add
adc
int
faddp
xchg
xchg
ret
out
test
dec
imul
jns
les
outsl
jno
push
pop
push
pop
or
sbb
dec
sahf
dec
loopne
mov
add
inc
stc
cmp
mov
pop
mov
sub
xchg
mov
lahf
xchg
orl
mov
push
add
popf
cmc
jnp
cld
pop
gs
sahf
xchg
in
or
popf
mov
mov
scas
rcrl
addl
sbb
mov
xchg
sbb
ljmpw
mov
pop
mov
xor
pop
mov
movsl
incb
pop
adc
shrb
mov
jl
pop
shll
call
int
push
push
jmp
push
xor
add
mov
xchg
push
out
repnz
mov
add
arpl
mov
adc
add
test
push
iret
lea
aam
call
out
and
popf
xor
out
sub
rcrb
inc
push
scas
js
xor
popl
mov
pop
shlb
or
idivb
mov
cli
add
iret
data16
lods
andb
test
mov
pop
ret
or
mov
loopne
mov
fsts
cmp
and
add
daa
ja
gs
xor
shl
adc
or
and
test
test
mov
or
mov
les
mov
xor
out
xor
in
inc
fsubrl
xchg
lret
subb
jp
mov
dec
rcll
mov
pop
xlat
pop
mov
pop
loop
or
cmp
xchg
lahf
stc
add
outsb
inc
push
add
aad
clc
inc
std
jns
adc
fsubs
int3
or
cmpsb
rcrl
std
mov
movsl
mov
sbb
adcb
inc
ja
addl
xchg
push
mov
jb
inc
xchg
es
je
inc
add
sub
inc
cmpsl
cmc
xchg
popl
and
ljmp
jne
add
inc
inc
pop
mov
dec
mov
das
subb
scas
in
scas
scas
lea
shll
mov
pop
data16
std
xchg
in
movb
cmpsb
ja
pop
lea
sahf
popl
mov
inc
out
and
ret
or
mov
jo
adc
or
mov
divl
leave
jg
push
shll
mov
xor
ss
test
stos
sub
lcall
jo
pop
stos
push
pop
ljmp
call
pop
sbb
push
insb
push
inc
sbb
mov
xor
adc
jl
fnstcw
mov
icebp
outsb
movsb
imul
cmp
mov
inc
je
leave
jo
movsb
cltd
scas
xor
sbb
es
xchg
and
jmp
inc
and
icebp
insl
mov
loopne
cwtl
and
fildl
insl
pop
inc
mov
scas
mov
sub
jno
mov
orl
gs
dec
stc
push
add
lods
sbb
fnstenv
fwait
pusha
out
aas
icebp
pushf
push
and
aaa
xor
dec
pop
mov
xchg
xor
dec
clc
jo
in
sbb
mov
push
xor
dec
sahf
push
test
shll
and
lods
mov
dec
xchg
rorb
xchg
popa
pop
xchg
loop
inc
mull
imul
in
dec
inc
lret
push
loopne
cwtl
pop
into
int3
pop
cmp
je
mov
dec
push
xchg
fnstcw
sbbl
sub
cwtl
dec
jecxz
push
shl
ss
inc
inc
xchg
push
mov
sub
aad
in
das
iret
pushf
and
adc
cmp
cmp
adc
call
lahf
adc
inc
push
and
insl
or
adcl
out
xchg
jg
jg
fistps
fldenv
pop
fsubrl
mov
fiadds
xchg
add
fidivs
lret
dec
sub
sub
cmp
cmpsb
and
lcall
cmpsb
arpl
xor
pop
mov
push
fs
xchg
repz
sti
mov
enter
sbb
lahf
out
jno
movsl
insl
aaa
movsl
add
or
dec
das
in
push
je
sbb
jp
mov
xor
lods
es
lods
addr16
xor
aad
js
mov
dec
ss
pop
adc
mov
lea
cmp
mov
sub
stos
orl
jp
mov
push
add
daa
cmp
cmc
out
mov
dec
test
sti
pusha
rcll
sub
mov
push
ret
push
lock
repz
out
je
xchg
dec
inc
out
pop
int
and
sbb
mov
jnp
out
mov
sub
sbb
and
lcall
inc
jae
add
negb
inc
pop
xchg
jb
rcrl
shl
lret
cmpsl
mov
mov
lock
mov
pop
ss
inc
scas
fldt
or
cmpsb
pop
cmp
outsl
subl
inc
xchg
cs
fadds
and
inc
sbb
movsb
inc
mov
sbb
add
push
push
push
imull
cwtl
or
aad
pop
mov
jb
xor
lret
fwait
cmp
ret
nop
popa
rolb
push
xor
sub
mov
pop
dec
mov
cmp
and
mov
inc
in
pop
sub
sahf
enter
adc
jns
pop
pop
jae
adc
popf
dec
sahf
in
dec
rcrb
inc
xlat
mov
movsl
dec
adc
inc
dec
add
clc
cltd
outsb
repz
out
lret
cmp
and
mov
and
into
cwtl
jne
xchg
fisubrs
pop
add
sti
bnd
push
or
lods
push
cmp
xor
sbb
lret
popf
cs
push
movb
popf
pop
and
ja
test
sar
mov
lock
in
lret
inc
iret
sbb
jge
enter
clc
or
test
es
sti
add
outsb
stos
cmc
xor
push
inc
pop
mov
mov
inc
sub
lret
cmp
push
jle
clc
mov
test
xor
test
sub
ret
jecxz
adc
push
add
add
sbb
dec
and
dec
dec
rclb
shlb
mov
dec
mov
ret
jne
stos
imul
icebp
das
push
mov
xchg
xor
insl
xchg
leave
pop
movsb
push
daa
mov
xchg
cmc
scas
mov
out
or
cld
mov
mov
jns
and
sub
mov
jae
sub
lahf
jp
insb
xorb
xor
push
sub
add
lret
or
outsb
cmp
ja
rorb
ret
iret
aam
sti
sbb
xchg
mov
fldl
pop
sbb
cmove
push
add
inc
add
mov
mov
cmpsb
clc
pop
or
fidivs
out
add
std
stos
mov
push
lds
mov
cmpsl
adc
xor
loopne
test
mov
jbe
nop
mov
and
push
scas
jp
std
into
push
push
sub
xchg
add
dec
inc
fdivl
sub
cmp
push
repz
dec
aaa
xchg
adc
lock
jae
rcrl
inc
gs
shlb
test
sarl
imul
adc
jge
cld
mov
xchg
sahf
aaa
sub
jmp
ds
dec
insl
push
pop
cs
mov
mov
xchg
outsl
adc
aam
mov
and
ds
sbb
daa
mov
jnp
mov
jl
lcall
cmpsl
jl
adc
loope
cmc
rcrl
out
lock
popf
cmpb
push
xchg
pop
sub
mov
push
decl
mov
inc
dec
lock
pop
push
cmc
adc
aam
pop
dec
pusha
push
daa
cltd
mov
jae
lds
pop
arpl
cmp
pop
aaa
imul
nop
jl
enter
pushf
lods
cwtl
push
enter
jae
xchg
pop
scas
into
mov
clc
test
jg
cld
xchg
stc
and
faddl
adc
mov
sbb
in
insb
es
cmp
xchg
cmpsl
inc
add
sbb
push
shll
lds
stos
imul
mov
pop
scas
adcl
mov
adc
fprem
loope
outsl
mov
dec
xor
mov
movsb
xchg
sbb
loopne
and
popa
jb
bound
adc
mov
ja
inc
mov
jp
push
arpl
outsb
lcall
sub
mov
sti
pop
xchg
or
xor
sub
jno
xchg
les
div
dec
fistps
cltd
int
inc
fwait
xlat
test
movsl
arpl
pop
xchg
adc
adc
mov
mov
das
ret
mov
sub
inc
dec
out
mov
arpl
xor
popa
lcall
cmp
aam
lea
jp
jmp
es
aas
in
mov
mov
xor
xor
inc
out
out
push
fsts
xorps
out
mov
aaa
mov
aam
push
scas
insl
jbe
mov
popf
mov
fidivl
shll
mov
enter
cmpsb
outsb
inc
dec
mov
idivb
popf
mov
fdivrs
jl
pushf
aas
orb
adc
jp
mulb
stc
push
test
pop
jmp
pop
push
push
push
cmp
pushl
fdivrs
xchg
leave
cmp
arpl
je
or
cltd
mov
gs
popa
sub
fwait
movsb
jae
jmp
pop
in
push
inc
orl
xchg
xchg
or
test
and
imul
pop
jnp
pusha
dec
rcrb
rclb
jno
test
pop
enter
sub
inc
sbb
adc
out
es
fisttps
pop
push
lock
lds
dec
or
pop
cmp
imulb
adc
and
out
pop
imulb
in
jns
jbe
subl
ret
fcomps
dec
add
int
adc
or
and
iret
or
ficoms
xor
and
adc
inc
pop
xchg
pop
in
insb
or
call
jno
adc
pushl
sbb
pushaw
cmc
data16
or
xor
xorl
xchg
and
pop
jae
popf
hlt
xor
leave
sahf
xchg
pop
int3
mov
nop
lock
push
or
popf
subb
dec
jg
je
mov
jae
cmc
mov
and
xchg
scas
jp
or
cmp
dec
movsl
inc
sbb
and
lock
push
xor
lods
sub
and
mov
xor
xlat
jmp
mov
jb
lods
sub
je
icebp
adc
cmp
cmpsl
idiv
jl
flds
fisubrl
in
xchg
in
mov
adc
decb
inc
dec
les
cld
mov
pushf
push
mov
fmull
jnp
stc
enter
pop
fbstp
movsb
xchg
inc
xor
xchg
loope
nop
iret
and
mov
sbbl
sub
mov
xlat
mov
jb
test
or
mov
and
fstl
dec
mov
pop
nop
jecxz
or
fistpll
daa
inc
cmpsl
icebp
jo
movsl
shl
xor
add
std
cmp
mov
xchg
bound
movsb
fcmovnu
jl
sahf
dec
xor
xor
mov
movsl
aas
cmp
push
or
pop
cld
lods
push
cli
inc
lret
pop
mov
mov
nop
xchg
arpl
lret
sub
inc
lahf
jne
adc
pop
mov
lea
mov
sub
shlb
xchg
es
adc
mov
add
in
sti
iret
pop
or
jbe
fcmovu
ja
in
sub
push
clc
push
jns
xchg
xchg
test
add
mov
mov
adc
adc
or
sub
shll
mov
out
xor
sahf
xor
jecxz
push
add
pop
sbb
mov
mov
or
popf
push
jecxz
popa
jecxz
ds
xchg
call
cmp
int3
iret
in
roll
cmpl
pop
ja
sbb
in
add
lds
mov
inc
cld
jmp
pop
fimuls
in
out
xor
push
xor
sub
gs
and
push
and
repz
or
dec
cmp
push
call
testb
pop
in
jo
mov
clc
jns
dec
rcrb
inc
pop
in
sbb
and
sbb
pop
inc
stos
pop
and
iret
fisubl
clc
into
adc
pop
int3
and
loop
cmpsb
ja
adc
enter
mov
inc
xlat
xchg
repz
sbb
pop
jae
ret
les
inc
push
fsubs
aas
mov
int3
mov
je
fcoml
fwait
jbe
aas
xor
sub
shrb
test
xchg
rclb
lods
add
std
je
fwait
sub
loop
pop
fcmovne
popf
pop
shlb
add
mov
movb
pop
pop
jecxz
mov
movsb
dec
aaa
or
data16
inc
mov
sahf
repz
adc
inc
cmp
cltd
hlt
movsl
lds
push
mov
fcomp
cli
shll
or
fimuls
xchg
out
loopne
mov
ret
dec
push
and
inc
mov
inc
push
sahf
jg
jns
out
add
stc
mov
cld
and
test
fadds
inc
and
pop
jbe
inc
dec
sahf
outsl
xor
movsl
jne
xor
jle
mov
jmp
test
jle
ds
aad
lea
push
stos
xchg
sahf
xlat
test
jecxz
adc
out
stos
cmp
bound
out
mov
mov
les
cmpsb
fnstcw
testl
out
or
insl
pusha
add
jns
js
mov
jne
pop
adc
fstl
jge
out
loope
ja
int
dec
adc
in
push
dec
scas
mov
mov
mov
movsb
lahf
mov
mov
shlb
inc
cmpps
pop
cmpsl
mov
pop
push
fbstp
dec
push
pop
enter
scas
xor
mov
and
mov
xchg
jbe
imul
xchg
mov
xor
sti
or
aas
xchg
mov
sbb
push
pushf
aas
dec
jle
and
lods
mov
xor
dec
or
stos
sbb
xchg
pop
add
xchg
hlt
stos
mov
sahf
jns
mov
ds
dec
jecxz
dec
js
sbb
iret
sbb
imul
jg
lock
ljmp
push
and
or
dec
rolb
adcb
popf
les
push
pop
inc
xchg
add
jle
sub
and
pop
mov
daa
jne
pusha
stc
arpl
push
cld
dec
imul
scas
mov
mov
fwait
mov
inc
cmp
jne
or
movsb
add
lret
mov
push
sbb
sub
mov
into
mov
jle
test
inc
jne
int3
scas
adc
mov
inc
icebp
rol
mov
xor
les
xlat
out
add
fbstp
jae
sub
mov
rcll
mov
outsb
aas
in
cli
and
inc
arpl
fmul
cmp
xchg
mov
mov
orl
mov
std
sbb
insb
jne
outsl
test
jmp
dec
stc
data16
insb
pop
cld
mov
aam
mov
or
pop
mov
add
and
idivl
aaa
xchg
xor
pusha
bound
push
inc
cmpb
jae
pop
leave
adc
iret
lock
filds
jge
pop
jo
ds
push
add
call
out
jne
cs
xor
mov
loopne
adc
mov
push
xchg
movsb
mov
pop
xchg
loope
addr16
dec
dec
loopne
mov
shr
mov
xor
dec
mov
repz
test
lods
je
jo
jecxz
outsb
inc
push
mov
sbb
fcoms
daa
mov
imul
out
adc
hlt
lahf
mov
adc
sti
in
jl
in
inc
ret
mov
out
xchg
pop
pop
cmpsl
cs
cmp
out
fildll
lods
sbb
jns
or
fisttpll
cmp
les
or
fs
xor
daa
pushf
lahf
xchg
subb
or
negb
sub
popf
aam
fisubs
adc
cmc
jl
sub
mov
mov
fcomip
fisttpll
cmpsl
cmp
in
loop
js
sbb
mov
sbb
repz
push
loopne
or
inc
mov
fcompl
daa
in
popa
pop
jno
popa
cmpsb
mov
scas
push
xor
out
and
test
ret
mov
fnsave
lret
mov
ret
inc
jo
pop
outsl
dec
push
jmp
rorb
fstpl
cmpsb
pop
sub
mov
fs
sahf
int
mov
or
lea
xor
xchg
dec
pop
xor
mov
xor
push
jnp
adcb
sbb
lea
shlb
sbb
pop
je
das
test
or
push
fimuls
pusha
cmp
sbb
ds
ljmp
cwtl
mov
mov
cs
inc
mov
movsl
fcmovu
mov
adc
fxrstor
pop
out
and
sbbl
subb
pop
out
lret
dec
sub
xor
adc
push
add
mov
mov
inc
mov
mov
notl
xor
jp
mov
dec
hlt
cs
outsl
pop
mov
add
or
jno
test
stos
and
stos
sbb
ret
jle
cmpsb
hlt
loop
dec
mov
pop
out
cli
dec
insl
lods
jae
pop
mov
sbb
push
aas
lcall
fnstsw
jbe
fnsave
lods
push
addb
scas
mov
es
jno
adc
or
push
out
mov
out
sarl
cltd
out
data16
mov
cmp
imul
loope
pusha
fiadds
jns
adc
fmul
push
xor
sar
lods
mov
clc
sbb
daa
sbb
xor
ret
xchg
lds
cmp
sbbb
fsubl
flds
add
ret
shrb
stos
mov
pushf
out
sti
cmc
xchg
pop
xor
and
lret
jge
imul
out
scas
inc
scas
clc
jns
mov
fisttps
jae
popf
ds
inc
ret
mov
xor
sub
inc
insb
fstl
inc
mov
add
lret
cli
sti
cmpsb
jmp
adc
cmp
or
pop
scas
add
inc
xchg
sbb
jle
jecxz
pusha
sub
fildl
sub
or
inc
div
in
inc
add
and
into
or
jns
pushf
idivb
inc
test
xchg
mov
mov
mov
sub
dec
inc
sub
mov
out
lods
arpl
in
lret
or
xchg
push
push
icebp
push
in
aad
mov
lods
test
cmpsl
lea
stos
cltd
insl
and
sbb
lret
mov
int3
aaa
jbe
fildl
adc
cli
add
addr16
fs
ss
push
lret
and
das
add
adc
mov
jp
sub
neg
pushf
mov
push
popf
testb
aam
mov
aad
sbb
jo
mov
daa
lds
adc
mov
pusha
out
bswap
cmpsl
cld
pop
xor
and
sub
test
fwait
scas
insw
iret
sti
mov
lret
cmp
cmp
mov
idivl
sarl
loop
inc
pop
mov
or
insb
xor
ja
inc
enter
movsl
sar
adc
into
orl
xchg
mov
sarb
pop
dec
ss
icebp
sbb
cld
ljmp
in
xchg
rolb
fs
sbb
test
in
inc
xchg
aam
out
xlat
fisubrl
rclb
insl
test
push
into
inc
xor
movsl
push
aaa
or
lods
inc
jno
shlb
jl
sti
out
leave
lods
enter
cmpsl
mov
rcl
insb
jp
jns
stc
dec
jbe
xchg
add
xchg
mov
mov
inc
ret
in
test
sarb
dec
cmp
sub
xchg
mov
arpl
sbb
in
sbb
mov
inc
jmp
and
add
push
repnz
jle
mov
mov
imul
mov
push
or
push
scas
push
fimull
imul
xchg
dec
jns
and
sub
mov
hlt
xchg
mov
dec
fsqrt
leave
imul
jp
hlt
roll
mov
mov
xor
xchg
stc
pop
enter
cmc
bound
inc
out
arpl
or
fistpll
arpl
mov
pop
push
push
test
mov
pop
repz
mov
add
subl
fmuls
icebp
push
popa
dec
xchg
stos
out
adc
clc
adc
sub
adc
in
pop
test
xchg
mov
in
repnz
movsb
mov
and
out
push
inc
fisubrs
and
mov
lcall
xor
idivl
test
es
lcall
popa
repz
add
outsb
mov
pop
mov
jae
test
stc
test
imul
or
push
ficoms
xor
mov
pop
pop
arpl
jmp
lcall
lds
adc
mov
sbb
cli
rclb
testl
subb
and
pusha
cmp
pop
mov
mov
pushl
stos
addb
mov
in
pop
sahf
icebp
cltd
cltd
xor
ds
sub
mov
scas
ss
popa
mov
mov
and
push
loope
insb
imul
pop
mov
cli
lgs
mov
or
cmp
mov
out
pop
dec
lods
sbb
fmull
xorb
dec
xchg
lods
adc
loope
pop
mov
mov
loope
push
or
pop
mov
fdivl
cmp
sub
jnp
cmpb
xchg
out
dec
cltd
push
subl
out
icebp
and
pop
sub
imul
or
mov
mov
sub
sbb
fsubrs
popa
add
addl
ret
cmp
push
imul
xchg
jo
inc
lcall
sub
cmp
dec
popf
jmp
push
or
jmp
inc
test
cmp
ja
cmpsb
fcmovu
int3
pop
jge
enter
cltd
out
xlat
pop
les
std
jae
dec
dec
hlt
enter
sti
push
test
push
call
stos
test
jne
fisubrs
pop
stos
mov
jg
push
mov
cmp
adc
repnz
push
fisubrs
stos
scas
scas
jbe
test
xchg
js
leave
inc
or
mov
lcall
sahf
psllq
insl
arpl
popf
in
adc
cli
adc
sub
xchg
ljmp
cmp
push
cli
pop
scas
mov
js
jns
fnstsw
dec
insb
ret
jae
push
ret
packsswb
divps
lahf
push
cmp
push
jbe
je
pop
aas
js
and
sub
pop
sub
lcall
aam
jno
sbb
adc
std
mov
inc
jne
bnd
lds
or
pop
add
fs
sub
cmp
sbb
inc
inc
popf
inc
dec
sbb
cmp
cmpsb
add
and
out
scas
notb
pushl
jmp
push
adc
icebp
fistl
mov
cwtl
lods
nop
lea
int3
pop
dec
aad
pop
rclb
fisubl
roll
pop
fmull
jmp
sub
in
xor
cmp
ret
mov
loopne
mov
mov
mov
mov
movsb
aas
add
rcl
inc
push
dec
mov
scas
mov
xchg
test
movsl
scas
cwtl
arpl
ljmp
push
xchg
push
cmp
cli
addr16
aam
fdivrl
sti
mov
xor
les
add
inc
loope
loop
pop
cmp
and
sbb
mov
xchg
lods
or
sbb
fildl
int3
push
mov
sub
cs
sbb
shl
outsb
mulb
out
in
sub
pop
adcl
mov
rcrb
pop
mov
add
mov
das
test
popf
jg
es
mov
sahf
fisttpl
aad
stc
enter
bound
ret
in
jae
insl
push
or
stc
mov
addr16
push
push
scas
in
dec
xor
mov
mov
dec
test
rcl
in
hlt
fcompl
ljmp
cmpb
adc
cmp
jge
xchg
es
push
mov
sbb
sub
enter
lea
dec
adc
popa
adc
and
add
pop
dec
enter
ljmp
adc
lock
add
popa
pop
jg
xor
adc
pop
fadd
sbb
sbb
or
mov
lcall
scas
popf
sub
fnstsw
mov
xlat
js,pn
xchg
or
pop
jbe
xor
cmp
xor
adc
cmpsb
mov
aaa
cmp
leave
pop
xchg
ljmp
pop
add
sti
or
jle
mov
icebp
push
push
push
fildl
mov
popl
outsb
into
movsl
add
xor
test
aad
outsl
mov
xchg
enter
lcall
mov
test
dec
in
outsb
cmp
lock
add
ret
out
loopne
pop
lea
dec
repz
xchg
pop
ret
inc
mov
xlat
cltd
or
nop
xchg
mov
test
loopne
push
adc
xchg
sbb
lea
ret
mov
mov
mov
sahf
dec
in
cs
mov
jl
int3
scas
rorb
and
cmp
inc
xchg
clc
incb
or
cmpb
pop
mov
lods
test
jecxz
jno
mov
fwait
jmp
cwtl
fistps
dec
sysret
mov
xchg
push
fnstenv
addl
mov
push
xchg
jecxz
and
xor
jb
insb
scas
loop
icebp
shl
addl
jns
rclb
lods
negl
add
idivl
jne
test
push
scas
loop
dec
mov
mov
mov
and
fs
jbe
or
lret
or
out
add
in
inc
push
or
pop
pop
mov
mov
mov
gs
out
mov
jecxz
push
add
add
cmp
idivl
insb
jne
pop
mov
aad
aas
call
out
mov
inc
imul
cmpsw
mov
adc
xor
sub
scas
ljmp
and
xchg
lods
std
in
adc
adc
mov
push
icebp
cli
add
pop
or
mov
cmp
loopne
pop
sbb
add
popa
push
push
jo
jae
cli
hlt
leave
ja
sbb
jp
jb
scas
in
negb
inc
push
sahf
adc
in
cmp
popa
mov
mov
ds
loope
sub
shlb
mov
dec
jno
ficomps
and
jne
scas
ljmp
cltd
test
mov
and
xchg
orl
lret
arpl
test
and
mov
aaa
sub
in
in
jle
out
sub
int
popf
cmp
pop
mov
adc
xor
stos
lods
dec
jne
fwait
out
fadds
mov
fcmovb
pop
in
arpl
pop
jns
mov
icebp
or
mov
cmp
inc
mov
or
or
jecxz
push
jb
in
inc
fstps
in
jg
int3
or
arpl
pop
cwtl
jge
pop
icebp
std
repz
pop
loope
ret
cmp
sbb
outsl
xor
jbe
push
shll
hlt
pushf
enter
sbb
xchg
add
fsubs
cmp
jbe
push
lds
jbe
das
cmp
stos
jae
cmp
fisttps
jbe
cmpb
jg
push
insb
xor
push
or
jl
adc
xchg
pop
inc
lcall
cli
dec
cld
movsl
push
inc
fldl
adc
imull
cmp
pop
sub
clc
dec
out
cmc
add
pop
fwait
sbb
inc
xchg
popf
fcompl
outsl
or
mov
jb
pop
mov
xchg
jne
add
xor
xor
in
mov
dec
xor
loopne
call
push
cmc
adc
leave
pop
jns
dec
jbe
jle
xor
push
push
sbb
inc
pusha
fdivrs
not
inc
repnz
and
loop
in
sbb
inc
xchg
and
cmp
pop
dec
out
push
and
mov
push
xchg
xchg
cmp
dec
adc
mov
fcomip
mov
mov
mov
push
push
scas
cmp
dec
sbb
cmp
cmp
loope
dec
lret
rolb
cld
fwait
adc
cmc
and
sbb
mov
je
clc
lds
fwait
jle
or
sbb
popa
popl
mov
aad
push
xchg
jl
sub
ljmpw
cli
mov
jp
loope,pn
cmp
cwtl
adc
pop
jge
xchg
push
dec
lods
jb
lods
cmp
push
addl
xor
lret
jmp
pusha
push
test
lcall
nop
mov
xchg
movsl
out
lods
mov
mov
pop
bound
inc
cwtl
mov
enter
data16
fs
std
push
jmp
adc
jle
xchg
inc
stos
adc
ret
adc
icebp
and
push
fsubl
mov
fwait
repz
push
movsb
shlb
inc
sub
int3
or
push
rol
in
std
and
xor
jns
sub
jb
subb
cmc
xor
inc
fstl
pop
loopne
jnp
stc
mov
rcr
add
icebp
xlat
dec
mov
imul
sub
xor
sbb
imul
xchg
and
test
into
jno
fstl
test
enter
enter
popa
sbb
xor
insl
gs
popl
or
xor
inc
push
cmp
mov
cmp
jno
jp
mov
xchg
lret
push
dec
negl
push
xchg
and
ljmp
aas
and
and
pop
shrl
push
cmp
out
sbb
push
cmp
arpl
push
aas
cwtl
inc
hlt
cs
dec
call
mov
jo
inc
roll
loopne
jle
sub
fwait
repz
repz
into
cmp
fwait
xchg
ds
repz
adcl
ret
inc
out
lret
xor
push
jle
sbb
lahf
mov
jne
add
or
xchg
dec
sbb
mov
js
or
cmp
push
lock
push
push
mov
mov
xor
lahf
imul
adc
mov
adc
pop
bound
mov
push
sub
mov
or
inc
mov
cltd
jmp
call
push
pop
rolb
dec
push
sbb
idivl
jae
divps
pop
inc
sbb
mov
incl
xchg
fld
push
mov
jb
mov
pop
out
stos
call
push
xchg
sub
nop
inc
adc
push
jl
jge
mov
lods
mov
mov
je
inc
movsl
pop
in
stc
xchg
mov
pop
dec
push
into
loopne
loop
mov
adc
andl
and
ret
mov
sbb
cmp
or
xor
movb
dec
cmp
les
cmp
xchg
popf
fisubrs
mov
aad
sub
sar
imul
das
addr16
dec
mov
inc
mov
push
cmp
xchg
inc
mov
shrb
push
push
je
jecxz
inc
imul
or
lahf
cs
pusha
xchg
outsl
cmpsb
cmp
or
mov
and
jns,pt
pusha
pop
sub
sub
add
arpl
xchg
popa
add
test
sbb
mov
jmp
addr16
jnp
add
push
dec
mov
gs
mov
or
icebp
or
sbb
jb
adc
cld
outsb
xchg
ja
add
test
rolb
inc
ds
mov
dec
ret
adc
sbb
adc
hlt
pop
lods
dec
hlt
or
lods
xchg
xchg
and
mov
add
add
lea
pushf
lahf
clc
push
or
insl
xchg
or
popa
fidivs
xor
imul
xlat
or
ret
notl
or
popa
xlat
mov
stos
addr16
fiadds
repz
adc
stos
mov
lahf
jl
jnp
les
pop
sbb
mov
clc
lock
into
pop
jmp
std
xchg
pop
clc
repnz
sbb
mov
jne
dec
ss
push
loope
js
mov
cmpl
insl
dec
inc
pushf
dec
scas
ja
sbb
push
or
cs
xchg
es
jbe
rolb
mov
jg
enter
jns
mov
pop
jae
out
push
rcll
and
lods
ss
push
dec
decl
sahf
xor
xor
stos
ljmp
adc
loopne
cmp
loope
mov
mov
out
jl
dec
xchg
mov
jns
or
adc
mov
lret
cmc
and
paddusw
mov
push
loop
cmp
cmp
pop
aad
cltd
add
mov
ret
add
imul
inc
shll
fnop
cmpsb
mov
and
or
repz
imul
imul
push
dec
daa
inc
push
test
ds
fs
sbb
jb
mov
xchg
mov
dec
mov
cltd
adc
ja
adc
cmp
mov
xor
mov
inc
fdivr
or
mov
ja
repz
repz
fdivs
mov
fdivrs
sub
sub
sbb
adc
mov
xor
pop
xchg
cmp
movsl
aas
test
fisubl
mov
mov
xchg
stos
int3
push
out
push
push
mov
scas
or
or
dec
hlt
jg
adcb
js
jbe
ficoms
shlb
pop
into
inc
test
jecxz
sbb
mov
or
out
mov
jl
loopne
push
add
jl
mov
insl
xchg
js
cmc
sub
pop
add
sub
testb
lods
rclb
fcoml
rolb
aas
in
scas
jb
shll
pop
jb
push
xor
jl
cld
push
icebp
xchg
popa
dec
fistps
mov
mov
mov
xor
test
jp
pop
add
mov
jl
inc
and
xor
or
jmp
hlt
xchg
stos
jl
dec
fimuls
jbe
imul
fbstp
addr16
out
inc
notl
mov
sbb
xor
pop
adc
or
xor
lods
fcmovb
jns
push
pop
sbb
xorb
outsl
mov
sub
mov
adc
dec
lcall
std
or
stc
arpl
movsb
push
js
nop
push
fimull
cmpsl
push
inc
addr16
fdivrl
inc
lahf
popa
sarl
fs
xchg
mov
jns
in
mov
fs
ficomps
xchg
les
sub
adc
xor
add
popl
xor
scas
inc
push
out
andb
lahf
push
push
sbb
push
mov
inc
mov
xchg
std
cmp
mov
mov
testl
lock
xor
popf
sub
cmp
fwait
lcall
xchg
icebp
cmpsb
mov
out
das
popa
test
jne
fwait
pop
iret
adc
repnz
out
inc
pusha
scas
add
mov
xor
insl
pop
fs
mov
cmp
leave
cmpsl
cmp
jno
les
pop
dec
xor
insb
mov
inc
insb
mov
mov
pushf
sbb
in
int3
adc
shrb
cmp
push
rol
into
cltd
xlat
pop
push
js
pop
jle
push
xor
loop
mov
cmp
mov
mov
fmulp
xchg
je
mov
imul
nop
outsl
jo
pop
xchg
lods
lcall
arpl
cmpsl
dec
fldcw
in
mov
mov
cmp
aaa
or
cmp
out
dec
pop
push
mov
cmp
shl
gs
clc
jnp
cmpsb
mov
int3
mov
and
out
mov
sbb
imul
cmp
or
cmp
fs
repz
je
xor
xor
arpl
push
in
mov
call
adc
aad
sub
add
popf
inc
pushf
jge
xor
inc
rolb
dec
push
outsb
gs
lahf
push
aad
xchg
andl
ds
dec
fs
pop
or
fnstcw
xchg
mov
inc
jp
js
jbe
fidivrs
add
and
addr16
mov
and
nop
dec
mov
imul
jo
push
inc
test
dec
subb
pop
sbb
scas
pushf
ja
jle
mov
clc
sub
fldcw
cmp
xchg
jbe,pt
or
scas
or
cmp
inc
lret
in
mov
popl
loope
data16
fistps
adc
xor
daa
mov
je
mov
mov
aaa
fidivs
dec
mov
inc
jne
adc
sub
jae
add
test
data16
gs
das
cmp
sub
shlb
jnp
jmp
xor
ret
jle
push
mov
js
fprem
push
add
fdivr
add
and
adc
mov
jne
int3
int3
daa
sbb
stos
cmp
leave
in
xor
fdiv
clc
rcrb
xor
lock
cwtl
std
mov
inc
dec
or
cmpb
repz
jo
es
hlt
les
xor
es
in
out
sbb
inc
roll
lods
aad
shll
sub
out
pushf
push
xor
mov
test
mov
out
shlb
sub
xchg
xlat
push
jno
and
dec
test
nop
xchg
stos
xchg
mov
xchg
mov
push
dec
ljmp
lcall
and
inc
ret
ds
mov
mov
adc
ja
sub
test
dec
cmp
pop
lahf
and
or
lea
sub
rorb
fiadds
sub
jbe
push
xchg
or
movsl
jno
aaa
add
sbb
mov
fcmovbe
loopne
pop
add
aaa
enter
dec
cmpsb
sahf
popf
arpl
fadds
lds
cmp
scas
mov
cli
repz
or
pop
addr16
sub
je
lds
dec
int3
mov
dec
popf
jb
jmp
js
cmpsb
inc
xor
cmp
sbb
out
or
mov
jp
insb
fisubs
test
mov
xor
jge
jbe
pop
jge
xchg
jno
aad
cltd
pop
jb
pusha
push
and
sbb
and
cmpsl
jg
dec
test
psubb
inc
nop
pop
push
jns
pop
push
popf
lods
fcmovnbe
or
fdivrl
xchg
inc
jmp
gs
fsubs
jns
repnz
icebp
or
mov
out
fisubrs
outsb
push
dec
daa
in
jbe
push
es
mov
les
data16
fidivrl
loop
dec
imul
adc
mov
bound
xchg
shll
int3
test
fmuls
insb
jnp
inc
pop
outsl
mov
mov
push
stc
xor
and
fsubs
mov
sbb
push
stos
push
dec
xchg
xchg
pop
sbb
sub
cmpl
xchg
xchg
inc
adc
mov
into
je
sub
push
in
rcr
jmp
inc
jno
aad
test
lret
jecxz
xor
mov
sub
or
ljmp
loope
pop
and
lahf
mov
aam
cmp
ret
into
sub
cld
inc
sti
test
and
dec
pusha
loop
push
push
jecxz
add
adc
nop
cmc
ret
xor
sub
insl
clc
fcmove
jno
imul
ret
sarb
int3
mov
imul
xchg
gs
jb
mov
xor
sub
lods
cmp
or
mov
sti
movsb
and
in
push
dec
rdmsr
clc
insl
fbstp
pop
int3
ficoms
mov
cmc
imul
stos
inc
push
cmp
adc
gs
sbb
mov
pop
mov
repz
ret
pop
mov
xchg
pop
push
sbb
shrl
sub
mov
dec
imul
cmc
pop
test
jb
and
mov
out
fcmovb
aam
pop
mov
into
jo
aaa
fcmovne
stc
es
inc
dec
inc
les
roll
adc
add
mov
incb
testl
pop
or
xor
pop
mov
inc
push
jns
sub
mov
das
mov
popa
sub
pop
pop
jg
lea
ret
dec
int
push
pop
jmp
dec
xor
aam
jnp
sbb
daa
inc
sub
xor
xor
pop
inc
test
pop
pop
daa
leave
cmp
jbe
pop
mov
dec
jl
lock
das
adc
mov
xchg
dec
scas
movsb
and
jl
and
mov
xchg
arpl
and
or
and
mov
xchg
lret
add
ljmp
mov
ljmp
dec
lods
pop
loopne
jp
daa
mov
shl
out
push
lret
pop
call
push
adc
frstor
movsb
fidivrl
or
inc
sbb
jb
dec
xchg
aad
and
add
push
push
out
rcll
dec
cli
xor
sbb
jmp
pop
iret
cwtl
xchg
mov
test
fs
ja
adc
sbb
pop
jb
push
cmpl
arpl
js
mov
and
outsl
fdivrs
cmp
mov
addb
popa
pop
mov
or
cs
pop
sbbb
sub
divl
xor
mov
fdivrl
scas
int3
dec
mov
add
call
or
cli
adc
pop
and
fldcw
or
lock
leave
popa
int
xor
jle
das
int
push
jmp
popl
shl
std
cmp
add
inc
jecxz
fcmovnb
pushf
and
addb
jbe
mov
enter
mull
sub
add
sbb
mov
cmp
jge
adc
and
xor
mov
push
pop
xchg
test
xchg
xchg
inc
push
stc
int
xor
insb
roll
and
sahf
mov
cmp
sbb
mov
dec
es
xchg
mov
sub
xor
iret
or
dec
stc
and
bound
dec
sahf
xchg
pop
jge
mov
and
cmp
xchg
arpl
mov
insb
movsb
out
mov
clc
outsl
scas
jge
add
test
sti
push
mov
aam
mov
daa
push
push
fs
sarl
imull
test
mov
test
pushf
cmpsb
xor
mov
mov
popa
mov
adc
cmpsb
sbb
lahf
adcl
addr16
inc
and
and
rol
mov
arpl
lret
cmp
xor
push
or
mov
popf
mov
xchg
adcl
push
out
mov
stc
clc
mov
arpl
shlb
and
ds
out
shrl
jp
push
mov
push
xor
ret
cmp
mov
mov
les
mov
dec
and
add
hlt
popa
push
addl
clc
push
cld
cmp
out
sbb
fdivr
out
cli
mov
sti
call
inc
rol
sub
loop
sbb
sub
sti
xor
mov
xor
dec
jno
dec
cmpsl
add
mov
mov
mov
xchg
cli
jmp
sbb
and
in
fldl
enter
jp
inc
cmp
jo
xor
in
cld
inc
pop
mov
repz
or
js
mov
std
sbb
pop
mov
iret
in
ss
jno
push
loope
aaa
jbe
fdivl
dec
test
popa
cmp
jp
mov
mov
lea
cmp
xchg
scas
repz
arpl
or
ljmp
sti
mov
mul
pushf
into
xor
into
popl
jl
sub
mov
pusha
pop
push
test
cld
sbb
xor
xor
hlt
das
test
xchg
xchg
add
xor
or
push
ret
shrb
jnp
xlat
loope
push
sub
ss
push
hlt
test
stos
lret
sbb
jmp
roll
out
shrl
xchg
insl
sub
fcmovnu
repnz
cmpb
mov
insl
mov
mov
aaa
mov
xor
sahf
add
jb
out
cli
sahf
scas
sbb
lahf
jl
shr
pusha
aas
xchg
xchg
int3
out
jns
cmp
les
fnsave
sub
es
ret
outsb
mov
mov
out
movsl
aaa
and
lret
mov
inc
inc
outsb
sub
sbb
pop
adc
cmp
add
sahf
adc
lahf
movsl
sti
inc
mov
jp
out
rorb
loop
push
ljmp
or
fists
jb
sub
jge
push
xchg
inc
out
xchg
and
cmpsl
mov
xchg
mov
push
adc
ret
sub
sub
xchg
inc
sub
in
push
call
pop
xlat
pop
xchg
ret
dec
mov
adc
shll
cltd
jae
xlat
inc
ljmp
rclb
fnstcw
jno
or
out
or
adc
sub
cmp
js
mov
inc
push
or
stos
inc
or
inc
mov
out
xchg
mov
testl
adc
daa
and
mov
dec
jb
inc
fcoml
movb
mov
out
push
or
add
ds
mov
jmp
jbe
lods
adc
sahf
rclb
cmpsb
test
imul
or
mov
add
inc
pop
icebp
fs
mov
cmp
and
dec
daa
loopne
into
mov
mov
icebp
inc
push
sub
mov
and
sti
cmpsl
outsb
iret
jl
rolb
sbb
pop
mov
sub
int3
cltd
test
cwtl
and
cmpsl
push
or
jnp
jge
imul
call
mov
xor
jecxz
mov
xor
fbstp
popa
stos
inc
insb
mov
adc
inc
and
sbb
data16
push
adc
ds
rcll
ja
pop
movb
cmp
push
mov
das
es
pop
cmp
xor
imul
scas
pop
adc
les
cmpsl
insl
or
xor
sbb
clc
popf
mov
xor
aas
cmc
cmc
add
clc
aad
jno
sarb
jns
pop
sub
mov
mov
jecxz
jbe,pn
cmp
jge
push
add
cld
push
and
xor
and
movsb
mov
sub
or
push
sub
xchg
mov
push
dec
sar
sahf
lods
in
cmp
mov
inc
adc
cmpl
dec
out
negb
mov
mov
pop
out
cmpsb
pop
fcmovnb
addl
sbb
cwtl
jmp
push
inc
in
and
fistpll
xchg
outsl
repz
movsb
jo
iret
xchg
data16
adc
aam
int3
les
lods
pop
mov
lret
mov
push
lods
mov
leave
adc
clc
inc
aam
mov
xchg
sbb
mov
mov
fwait
sub
aam
inc
sub
xchg
mov
cmpsl
dec
and
insb
outsb
mov
out
sbb
push
mov
ret
dec
jb
or
lahf
popf
dec
sbb
or
mov
and
or
loop
push
lea
jmp
sbb
loop
mulb
jg
cmp
cltd
cld
in
push
lret
mov
add
add
fidivs
mov
mov
cmp
aad
sti
js
jbe,pt
adc
push
add
xchg
hlt
xor
cmp
ja
or
fdivl
in
pusha
inc
insl
mov
aas
mov
sub
mov
mov
inc
dec
mul
mov
xchg
adc
pop
or
ja
fadd
mov
fs
sbb
flds
pop
mov
dec
enter
pop
sahf
push
imul
lcall
pop
xchg
adc
mov
jge
xor
jno
pop
repnz
dec
aam
cmp
jmp
mov
adc
popa
in
push
jmp
and
ret
fadd
dec
scas
mov
aaa
cmp
cmpsl
dec
bnd
push
test
jnp
adc
stc
xchg
shl
jle
sahf
shufps
arpl
sarb
mov
mov
into
addr16
in
js
mov
xor
jg
adc
pop
ret
jne
jnp
lock
ss
lret
insl
add
cmp
dec
cmc
xor
pusha
pop
cld
ja
pop
sbb
fcoms
push
lds
jbe
mov
scas
movsl
bound
ret
loope
xchg
mov
inc
jae
mov
pop
mov
lods
or
adc
imul
mov
int
movsl
or
lret
mov
pop
ja
dec
xor
sub
xchg
repnz
mov
cmpsl
push
mov
fists
lods
jp
push
xchg
sbb
imul
loop
inc
rep
ret
popf
adc
outsl
imul
aaa
shrl
xchg
mov
aaa
add
pushf
and
test
pop
pop
xchg
jg
xchg
pop
mov
xchg
dec
mov
fidivl
insb
adc
add
negb
ja
or
iret
ficomps
push
pop
addr16
orb
cmp
push
dec
jns
inc
icebp
popf
imul
mov
ret
cmp
push
fnstenv
mov
jne
jnp
add
sub
mov
daa
push
arpl
sub
fwait
idivb
mov
sub
sbb
fmuls
daa
insb
mov
popa
idivb
test
push
hlt
idivw
xchg
xchg
inc
ja
mov
jecxz
pop
in
sti
and
out
les
sub
rcl
ret
mov
lret
xchg
nop
mov
jl
cmpsl
push
cli
cmp
adc
pop
push
cmp
xchg
push
shl
inc
mov
aas
les
mov
ss
mov
scas
jbe
push
lcall
push
das
xor
sub
or
test
ljmp
rcrl
xchg
bound
out
into
bound
push
and
inc
test
xor
sub
dec
jmp
adc
cmp
xor
in
sbb
bound
mov
sub
stos
inc
jae
lods
mov
pop
daa
xorl
pop
push
pop
cmc
sar
sbb
jg
lcall
aad
mov
sub
adc
cs
aam
sbb
xchg
jnp
cld
inc
inc
dec
addb
push
mov
xor
ret
jae
mov
xor
dec
inc
push
cld
push
ljmp
rcr
pop
movsl
mov
mov
sti
sub
mov
shll
xchg
leave
mov
lea
stos
stos
cs
out
fistps
sub
xor
jns
mov
fcompl
popa
stos
nop
and
movsb
hlt
adc
and
push
arpl
outsl
xor
loope
sahf
filds
cmp
iret
and
in
pop
mov
xchg
sarb
ds
sub
and
icebp
movsl
aam
cld
movl
xchg
and
jecxz
cli
lret
rcll
dec
or
scas
es
cli
ret
xchg
adc
jno
push
dec
add
sar
mov
or
ror
mov
xor
jbe
and
adc
imul
xchg
cmp
arpl
jae
and
push
inc
test
lds
gs
adc
popa
mov
xchg
xchg
rorl
jmp
sub
ss
xor
loop
mov
jp
ss
fdivs
fsubrs
jo
dec
loopne
call
xor
jge
movsb
xor
push
sbb
icebp
jne
jns
fs
inc
add
push
jle
sbb
cwtl
daa
mov
lret
inc
push
jmp
or
lcall
jo
ret
jae
mov
xchg
clc
and
mov
and
jp
inc
std
push
test
rcr
lahf
movsb
push
add
sub
jnp
cmp
sub
mov
xchg
jecxz
jae
fidivs
add
dec
lret
pop
xchg
dec
outsl
fiaddl
jns
or
mov
sti
pop
popf
into
jne
pushf
cwtl
mov
out
inc
out
mov
inc
jno
stos
lret
mov
mov
shlb
repz
pop
shll
adc
or
push
and
inc
lret
jb
dec
jnp
in
jbe
mov
push
jp
inc
xchg
push
aam
cmc
add
inc
or
pop
cmc
jmp
imul
and
pop
call
inc
jno
push
inc
and
pop
xchg
mov
sti
add
cmp
sbb
gs
adc
jg
stos
sahf
adc
jmp
cmp
in
jmp
push
jge
cmp
or
mov
iret
movsb
adc
pop
dec
push
inc
mov
dec
push
xchg
clc
orps
idivb
add
gs
push
mov
push
cmp
and
insb
fidivs
cmpsb
test
pcmpeqd
shll
ljmp
test
pop
xor
xor
push
addr16
and
scas
in
adc
mov
fnstcw
xchg
js
dec
mov
shrb
adcl
dec
je
mov
xor
es
fnstcw
fistpl
xor
pop
inc
mov
adc
mov
sub
mov
add
mov
aas
cmp
or
add
ds
addr16
ds
pop
rol
enter
in
data16
cmp
sub
push
lods
sti
adc
cmp
pop
cmc
lcall
jae
mov
aad
subb
in
leave
mov
mov
bound
movsl
fisttpll
repz
xor
push
rcl
data16
mov
out
divl
mov
jl
jle
fcoml
xor
add
sub
adc
pop
xchg
cmpsb
or
xor
aam
mov
clc
add
inc
loop
rcrl
or
add
outsb
call
adc
imul
mov
mov
pcmpeqd
or
repnz
nop
cmpsb
sub
pop
fisttpl
pushf
stc
add
subl
or
enter
cld
faddl
enter
mov
xor
mov
enter
cmp
mov
js
mov
std
inc
dec
sub
mov
pop
and
popl
adc
cmovns
dec
ja
das
loopne
ret
jle
adc
pop
jb
fs
lock
push
insb
loop
cmp
addr16
out
dec
push
je
mov
inc
xchg
pusha
adc
lods
sub
cwtl
adc
sub
xor
inc
jae
sbb
daa
sub
aas
sbb
mov
jo
sbb
stc
xor
xchg
insb
push
or
cmp
gs
add
push
movsl
mov
shr
xor
pop
add
push
insb
mov
imulb
fiaddl
aas
sbb
es
dec
repz
push
mov
pop
ds
loope
fsubrl
lds
lods
fld
sub
movsb
test
nop
add
lea
push
out
cmp
push
loop
mov
pop
int
mov
test
iret
lahf
sarl
stc
fnstcw
out
add
pop
outsb
inc
faddl
arpl
jp
outsl
test
mov
icebp
mov
ja
cli
mov
push
cwtl
inc
aad
les
sbb
cmp
push
cmpsl
mov
test
jmp
mov
pushf
xor
push
and
shrb
lahf
ss
cmp
xorl
push
push
sbb
iret
popa
mov
and
mov
add
xor
ret
call
jle
pop
jecxz
xor
int3
mov
pushl
jp
out
outsl
jge
inc
inc
adc
xor
test
sub
fstpt
out
adc
inc
or
mov
int
pop
jp
out
je
pop
test
imul
xor
sub
lods
push
pop
and
es
mov
add
add
bound
scas
cmp
mov
lar
jecxz
push
xchg
jmp
or
loopne
arpl
or
das
out
xchg
aad
mov
loopne
movsl
leave
sbbb
testb
sub
xor
jmp
add
test
jmp
or
pop
call
hlt
repnz
ret
xor
stos
out
dec
iret
cmp
ss
push
add
in
pop
inc
lret
fsubrl
inc
xchg
mov
fistl
mov
mov
test
jb
aas
sarb
jns
push
cmp
pop
arpl
test
jne
test
add
popf
dec
std
push
cli
or
jne
repnz
int3
dec
push
loope
ds
imull
xor
push
inc
loope
mov
push
cmp
ss
pop
loope
sub
add
nop
pop
out
cld
out
sub
sbb
loope
arpl
roll
cmpsb
out
fsubrs
or
mov
fstps
push
in
add
mov
es
hlt
dec
pop
inc
push
fdivrs
xor
add
push
push
arpl
or
nop
cli
xchg
outsb
stc
mov
mov
hlt
adc
adc
je
ret
daa
cmp
jmp
out
mov
std
icebp
jnp
in
repz
mov
fistpll
sub
jo
aad
les
lods
mov
into
jg
fsubr
and
sub
je
in
pop
add
cs
push
xor
je
frstor
fcomps
push
jne
test
lahf
lds
fbld
dec
mov
dec
int3
cltd
jecxz
xchg
xor
inc
sbb
fstl
mov
sub
xlat
inc
inc
mov
mov
sub
dec
je
xor
addl
mov
es
scas
mov
and
mov
sub
fcmovnb
in
loopne
xor
sbb
dec
lret
enter
mov
fs
pop
adc
cmpsb
lea
pop
arpl
bound
add
mov
ret
out
add
pop
in
xchg
mov
push
and
sbb
xor
lret
stc
fcmovnb
out
mov
cwtl
or
push
mov
inc
xchg
int3
add
sbb
jl
push
sarb
outsb
loope
sarl
repnz
pushf
sti
inc
push
xchg
mov
mov
inc
rorb
mov
sbb
jb
mov
out
hlt
push
add
cmpl
in
lcall
xchg
hlt
fnstsw
push
xchg
lea
out
pop
iret
hlt
push
pushf
jg
or
pop
cmp
push
dec
inc
adc
lods
mov
addr16
push
or
mov
inc
xchg
pop
pop
js
jge
push
mov
cmp
sbb
cli
aad
dec
inc
lock
fdivl
lret
mov
mov
mov
outsl
add
add
push
les
fadds
adc
mov
in
std
adc
daa
pusha
xlat
sub
lahf
xchg
mov
aaa
push
bound
lds
xchg
jle
arpl
test
xchg
mov
mov
enter
insb
dec
adc
cld
pop
roll
adc
sahf
jb
sar
ret
push
int
and
ss
movsb
or
mov
int
sbb
in
outsb
lcall
decl
sbb
pop
xchg
mov
loope
sub
push
push
xchg
aas
sub
add
and
push
mov
in
and
iret
daa
mov
lret
add
cmpsb
cmp
es
push
fcomip
out
addl
jnp
out
push
test
jmp
jmp
ljmp
mov
push
call
loopne
sbb
push
mov
xor
add
imul
insl
test
fs
jle
push
decl
cmpsl
mov
cli
mov
pusha
mov
mov
push
test
xor
and
inc
lret
insl
inc
add
push
in
sub
dec
jp
inc
cs
sub
int
jmp
cmpsb
lret
shlb
mov
fcoms
cmp
adc
stos
cmpsb
or
scas
sub
push
repz
pop
lahf
aaa
clc
push
fcmovbe
mov
ret
dec
es
xchg
out
sbb
xor
mov
movsb
xor
inc
roll
adc
lods
jp
or
xchg
shll
xorl
mov
or
mov
leave
imul
std
xchg
adc
dec
pop
xor
ljmp
rol
mov
dec
sbbb
mov
dec
inc
push
sbb
lock
jno
mov
clc
and
scas
imul
fwait
dec
mov
inc
gs
iret
mov
sbb
cmpsl
mov
inc
fistps
jbe
negb
jp
sti
out
and
jle
daa
and
xchg
fcoms
scas
ret
and
mov
mov
enter
es
mov
stos
mov
out
or
xchg
xor
pusha
or
xlat
xorl
fdivrs
pop
fcoms
cmp
int3
mov
or
lahf
and
mov
ds
test
loop
mov
or
test
cmpsb
jl
mov
mov
pop
mov
stos
movsb
stc
mov
dec
lret
ds
mov
fcomps
pop
lahf
mov
push
jno
aaa
xchg
adc
hlt
call
mov
sub
pmulhw
sbb
mov
arpl
cmc
fcoml
es
out
outsl
pop
inc
add
mov
lods
stos
cmp
aam
xor
std
es
adc
jbe
repnz
xchg
xchg
mov
mov
mov
adc
ret
daa
sbb
mov
aaa
pop
repz
push
scas
ffreep
and
sub
stos
push
call
and
pushf
jle
in
adc
outsb
out
xor
rorb
sahf
pusha
xchg
loopne
fcoml
pop
lret
sbb
jno
xchg
sub
push
or
pop
scas
mov
shr
or
pop
add
movsl
call
aad
jmp
add
fldenv
stos
shlb
mov
pop
out
cld
xor
scas
sub
or
ret
sub
cwtl
subb
and
enter
inc
dec
insb
mov
leave
ret
and
mov
imul
or
imul
mov
cmc
icebp
incb
add
jmp
push
mov
push
xchg
add
cmp
in
nop
lock
xchg
push
nop
push
mov
test
int3
sub
shrb
data16
xor
lcall
out
sahf
hlt
add
fwait
mov
test
addl
and
dec
pop
int
test
mov
or
pop
and
mov
add
xchg
push
mov
in
dec
mov
fiaddl
xchg
sub
fldcw
in
fwait
push
jle
pop
int3
cmp
xchg
int
pop
shrb
mov
rcr
lea
leave
and
repz
nop
pop
add
les
stc
movsl
mov
mov
sbb
nop
cmc
in
test
push
loop
and
cli
test
sub
or
xchg
pop
pop
push
jge
lock
and
stos
jo
sbb
je
shl
adc
pop
repz
mov
fwait
mov
aam
dec
xchg
aaa
push
or
jbe
in
cmc
or
dec
jge
js
test
out
xchg
mov
sbb
xor
add
mov
sbb
ss
push
sbb
jbe
pop
int3
aam
into
aad
push
repnz
mov
into
xorl
adc
into
jbe
scas
mov
icebp
or
mov
mov
loopne
mov
push
bnd
outsl
inc
outsb
cwtl
gs
add
leave
jno
push
fbstp
aas
loope
fisubl
inc
jns
in
pushf
and
mov
or
loop
lahf
adc
sub
fld
out
xchg
outsb
loope
enter
lods
test
shrb
data16
xchg
mov
out
xchg
mov
sub
fists
cmp
or
pop
loopne
adc
call
test
push
mov
shll
rcrl
inc
pop
ss
and
pop
std
mov
jmp
ljmp
inc
xchg
mov
or
pop
adc
aaa
lahf
iret
pop
jae
xor
sti
das
mov
adc
cmc
pop
mov
mov
in
aaa
mulb
inc
adc
popa
aad
pop
sti
cmp
scas
push
aaa
stc
pop
movsb
mov
dec
xchg
jo
sbb
mov
ret
aaa
push
pop
dec
shlb
inc
mov
inc
ja
mov
pop
hlt
pop
push
jnp
fldl
enter
fnstenv
mov
out
add
xchg
in
cmpsl
sub
cmp
in
pusha
mov
pop
jmp
das
add
call
sbb
or
aad
and
testl
outsb
shll
and
ljmp
and
sbb
jg
jnp
pop
and
mov
xor
inc
aam
mov
fs
clc
dec
aaa
loopne
test
in
sub
cmp
ss
inc
lahf
fldenv
jns
or
dec
cmp
fcomps
inc
popf
jbe
mov
lret
dec
lahf
mov
insb
mov
ret
icebp
negb
fstpl
xor
adcb
stos
xchg
iret
jb
mov
xchg
jb
pusha
push
jns
sarl
int
pop
fwait
nop
out
jl
icebp
leave
pop
loope
and
fcompl
xor
push
mov
jp
add
fstl
aas
repz
rorb
and
sbb
insl
cmp
push
jnp
movsb
popa
cmp
sbb
add
lret
out
subl
bound
sbbl
aam
inc
sub
idivb
add
sahf
jge
inc
and
lock
icebp
sahf
sbb
inc
mov
add
cmpsl
leave
pusha
popf
mov
outsb
rcr
loop
shlb
aaa
mov
jbe
xchg
jae
rcll
mov
lahf
cmp
out
div
sub
xor
fwait
push
ss
mov
jb
outsb
lret
jbe
cltd
dec
cmp
mov
loop
popa
in
inc
movsl
or
out
test
es
je
mov
push
mov
leave
or
das
stos
mov
outsl
aad
or
jg
inc
enter
stc
shlb
add
lock
pushf
rcrl
lret
jg
iret
pop
fnstcw
mov
and
je
jmp
mov
jmp
fistpl
int
decb
adc
ss
mov
test
clc
sbb
movsb
sub
xchg
enter
jbe
push
or
inc
sub
adc
jl
pop
ds
hlt
sub
adc
rcr
push
inc
movsb
jne
popf
inc
push
cmp
aaa
fadds
adc
nop
popa
cmp
mov
cmp
scas
in
daa
adc
mov
xchg
push
call
cmp
push
mov
dec
popa
jnp
les
mov
imul
xor
cmp
add
inc
lds
mov
xabort
clc
mov
pop
ret
repz
sub
inc
add
and
sahf
push
and
jle
xchg
imul
xor
into
and
inc
mov
out
ret
out
mov
mov
lods
jg
push
adc
mov
xor
fwait
jo
sub
in
inc
inc
cmpsb
and
scas
je
sbb
mov
xchg
cmp
cmpb
mov
push
adc
lahf
arpl
outsl
xchg
pop
xchg
cmpsl
pop
out
frstor
stos
push
insl
adc
out
mov
inc
adc
outsb
das
xchg
or
mov
mov
cmpsb
xchg
push
mov
arpl
mov
rorb
jbe
xlat
pop
dec
pop
mov
jmp
test
dec
xchg
pop
lds
out
cmp
cmpsb
and
sub
push
xor
or
push
pop
cmc
inc
pop
sbb
leave
mov
or
int3
push
inc
cmp
pop
orl
out
popa
sub
lret
test
rol
cltd
sub
insl
xchg
data16
lret
pop
xchg
cmp
jge
pslld
xchg
cmp
pop
ljmp
inc
outsl
pop
adc
mull
fcmovnbe
sbb
jne
inc
push
sarl
in
bound
xor
addl
inc
add
lds
inc
xchg
inc
mov
xor
xor
mov
mov
lods
andl
in
test
mov
push
test
add
cmpsb
dec
cmp
cmc
xchg
push
push
pop
jne
scas
mov
pop
cs
sub
mov
mov
mov
add
js
mov
sbb
sub
pop
push
std
and
in
cmp
push
shl
pop
addl
push
lods
andl
adc
lock
imul
inc
imul
jno
mov
decb
pop
in
push
lret
push
daa
push
ljmp
out
dec
insl
dec
mov
dec
pop
push
xchg
cltd
xor
push
push
pop
sub
jbe
pop
leave
jecxz
sbb
sti
mov
jae
unpcklps
cs
mov
pop
pushf
lods
cmovp
nop
sbb
push
sbb
lds
sub
mov
outsb
jp
into
lock
and
test
xbegin
lahf
mov
mov
sub
aaa
and
movsb
rcrl
sbb
in
imul
into
mov
dec
aam
or
pop
leave
push
dec
insb
dec
in
cmp
inc
mov
xlat
andl
clc
dec
fiaddl
mov
push
testb
push
fsubr
stc
shr
daa
pop
pop
cmpsb
mov
xorl
ds
jnp
xor
fdivl
jnp
push
sbb
test
lahf
jle
mov
inc
adc
xor
fwait
xor
shr
mov
outsb
lcall
gs
rcrb
xchg
imul
sbb
xor
test
int3
lds
mov
jmp
std
into
addb
jb
stc
xchg
sub
outsl
orl
push
cmp
cmp
js
imul
test
shlb
scas
insb
fcmovu
lock
mov
or
iret
stos
adc
repnz
cmp
push
mov
rclb
leave
std
push
push
lahf
mov
mov
loop
nop
insl
push
imul
pusha
into
push
mov
jae
lods
xchg
mov
adc
ret
and
mov
mov
ret
aam
mov
popa
jmp
inc
cmp
sahf
add
jp
testl
subl
shr
inc
and
mov
mov
shlb
test
in
push
mov
inc
mov
mov
punpckhbw
sbbl
jp
hlt
iret
pusha
adc
sub
jns
push
adc
mov
aam
mov
loopne
jnp
stos
int3
mov
cmp
cmp
sidtl
rorb
xor
in
fsubs
movsb
lds
stc
fisubrl
insl
hlt
andb
ret
orb
jecxz
stc
push
or
pop
and
mov
ss
dec
cld
xchg
pop
hlt
pop
stos
push
lahf
jne
inc
into
mov
std
dec
xor
dec
insl
add
dec
cmp
out
int
sahf
sub
negb
dec
inc
inc
mov
cmp
pop
daa
ret
repz
shlb
fidivrl
inc
mov
or
mov
inc
movsl
ret
int
mov
pop
add
es
outsb
or
hlt
mov
jns
shr
sti
pop
fmuls
out
arpl
hlt
pop
adc
pop
insb
cmp
push
mov
jae
mov
sub
les
xor
iret
stos
sti
dec
add
out
ljmp
popf
les
iret
scas
lods
xlat
adc
adc
ljmp
cwtl
mov
inc
andb
repz
shl
jge
rcrb
ss
nop
jp
data16
inc
xor
std
inc
test
mov
fwait
leave
cmp
adcb
loop
aam
lods
inc
sbb
dec
push
fcomi
test
cli
icebp
cld
fsubrl
cmp
push
cmc
outsl
loopne
jge
lret
inc
adc
cltd
orb
xchg
orl
ficomps
ret
sub
mov
sbbb
inc
or
sub
lods
ds
fisubrs
lock
cmp
mov
or
mov
xchg
loopne
rol
mov
cmp
fists
sarl
adc
das
or
stc
daa
rclb
daa
lea
xchg
inc
nop
ror
jns
imull
sub
jne
pop
inc
test
sti
stos
push
popa
cmp
jg
inc
sbb
push
insb
pop
outsb
fs
pop
ljmp
jp
jnp
popf
xor
mov
xchg
mov
jle
pop
cmp
mov
sub
nop
and
mov
add
and
out
jne
mov
clc
xchg
mov
cmpsl
inc
into
cs
jnp
and
and
adc
hlt
and
lods
pushf
xchg
inc
loop
cmp
stc
es
cmpsl
sub
shll
or
sbbl
pop
stc
pop
cmp
jns
sub
cmpsl
adc
in
lret
in
pushf
in
lods
fcoml
mov
jg
push
lcall
in
mul
stos
cs
and
inc
jae
add
mov
cs
xchg
jp
outsb
shll
mov
outsb
mov
and
pusha
rorl
jmp
push
in
aad
mov
mov
je
cmpsl
pop
sbb
pop
cwtl
les
push
add
push
push
filds
add
xchg
lea
cmc
cmp
fwait
jg
inc
aam
pop
sbb
cmp
add
leave
out
dec
imul
cmp
fdivl
xor
sbb
mov
dec
xchg
xchg
pusha
push
repnz
jg
enter
cmpsl
rcrb
scas
pop
cmp
and
push
out
dec
add
push
mov
out
out
fwait
mul
inc
push
mov
test
or
mov
sbb
imul
outsl
adc
push
cmp
jl
fcomip
sbb
xor
add
addb
arpl
call
xchg
int
dec
xchg
mov
loop
xor
fwait
add
decb
sbb
insl
cld
ret
gs
and
mov
dec
adc
xor
push
lcall
fiadds
cmp
mov
mov
cli
addr16
aas
loop
sahf
stos
mov
lock
jle
mov
in
adc
dec
sub
xorl
lret
jae,pn
cmc
jle
es
mov
or
cmpsl
or
stc
lahf
and
or
adc
outsb
popa
and
fsubrs
loopne
xchg
loopne
push
imul
sub
ja
pop
adc
mov
cmp
sbb
cmpsb
cmpsb
and
pop
je
insl
jns
test
cmp
sbb
xchg
bound
fwait
stos
in
mov
fcoms
mov
dec
push
and
dec
es
imul
and
cmp
fsubl
lods
push
addb
jmp
inc
jae
lds
fwait
sub
cltd
fldenv
sti
xor
inc
adc
nopl
std
sbbb
repnz
pop
aaa
cmp
test
fsubl
loope
cmc
sahf
xchg
negl
inc
orb
or
rep
mov
jmp
sbb
inc
and
mov
js
add
mov
inc
lahf
mov
push
jb
divb
pop
repnz
add
inc
mov
hlt
notb
lods
mov
lret
jle
fwait
btsl
pcmpeqd
fs
into
mov
ss
ds
and
mov
adc
popf
push
mov
add
sub
xor
mov
mov
inc
and
mov
inc
mov
fistps
jae
jmp
mov
mov
repz
cmc
ljmp
dec
sti
sbb
hlt
jne
add
dec
push
jne
push
popa
push
lea
xchg
mov
std
push
scas
leave
mov
int3
xor
daa
dec
jno
pop
sbb
iret
mov
jp
shlb
sub
push
outsl
scas
mov
mov
sahf
stos
mov
je
cmpsb
xor
ja
hlt
xlat
jge
je
ljmp
aad
mov
xor
jnp
dec
into
imul
adc
push
sub
sbb
and
jl
inc
leave
leave
cmp
jmp
mov
jae
push
lret
call
hlt
cmp
sti
xor
inc
sahf
xor
xorb
sub
in
adc
stos
pop
and
push
lods
cmpb
xor
testl
mov
sti
imul
aaa
cmp
push
std
cmp
inc
and
movsl
push
call
lods
jno
xor
cmp
or
daa
mov
cmp
scas
add
ret
mov
mov
lcall
push
push
mov
shrl
inc
inc
jo
cmp
mov
test
and
cmp
popf
mov
pop
dec
mov
jmp
inc
push
fldpi
in
mov
add
or
pop
add
int
or
sub
fbld
or
jl
out
xor
sti
sub
in
cmpsb
xchg
push
xchg
out
lods
insl
cvtpi2ps
mov
jae
andl
add
jl
in
lock
mov
out
xchg
dec
cmc
or
xchg
icebp
inc
aaa
pop
add
xor
sub
mov
or
aad
lahf
xchg
imul
inc
lcall
adc
or
or
lret
mov
sub
leave
inc
mov
xor
pop
insl
push
inc
or
mov
pusha
es
int
aam
and
push
les
dec
and
sbb
add
inc
call
loop
popf
pop
js
out
movb
mov
push
sbb
and
mov
xor
pushw
add
fimull
dec
jae
out
leave
cmp
out
mov
push
dec
scas
push
mov
shlb
or
shrb
sub
xchg
inc
movsl
push
or
xchg
add
xor
lods
icebp
pop
mov
fsubrp
enter
jnp
daa
sahf
loopne
sbb
jne
pop
rcl
add
arpl
fsubrl
pop
test
fsts
pop
iret
mov
push
xor
pop
inc
dec
add
popl
push
push
push
push
jnp
sbb
test
movsb
fisttps
into
in
adc
or
dec
pop
mov
xchg
and
mov
jle
sub
cmp
fsubl
xor
sub
and
insl
out
xor
or
insl
outsb
ja
add
imul
iret
xor
xchg
jnp
sub
push
jg
arpl
inc
sbb
ret
cmovle
jne
cmp
loop
call
and
mov
inc
js
pop
ret
pushf
lea
or
in
mov
fsubrl
jge
sub
cltd
mov
and
popa
rclb
mov
cli
push
and
decb
jne
arpl
popa
adc
jae
loop
and
sub
mov
xchg
xchg
les
test
sub
push
and
daa
pop
inc
daa
add
pusha
arpl
cwtl
lret
aas
enter
dec
outsb
mov
push
daa
jmp
mov
add
xlat
adc
mov
sti
imul
inc
stos
cmp
aam
out
mov
test
mov
push
ret
sbb
fdivrl
adc
inc
pop
fwait
popa
dec
mov
fimull
dec
sbb
out
ror
movsb
adcl
outsl
and
lock
lods
pusha
push
lods
mov
xchg
sbb
xchg
repz
nop
rorb
dec
stos
std
mov
insb
jae
mov
push
das
xchg
aam
lds
call
popa
popa
mov
and
bound
or
mov
rclb
cli
mov
std
lock
loope
adc
cmpb
mov
movlps
add
lods
shlb
mov
divb
in
mov
and
sbb
mov
dec
loope
mov
mov
sub
mov
mov
push
dec
xchg
cmpsl
mov
pop
dec
ret
nop
bound
nop
faddp
and
subb
pop
pop
in
test
xchg
ds
xor
jae
jp
jbe
call
sbb
mov
xor
sbb
and
aaa
inc
cltd
jl
fcomi
inc
cmp
adc
add
sub
xor
sarb
cwtl
pop
adc
dec
jp
and
push
pop
mov
jnp
jnp
fsubrl
cwtl
rcll
call
mulb
sub
and
cli
setb
call
jnp
mov
xchg
insl
pop
shrb
adc
fisubs
mov
aas
lret
pop
push
js
in
add
cmc
fists
xor
ljmp
ret
mov
in
jl
dec
xchg
dec
mov
add
int
jle
xor
rolb
cs
shrb
lods
sbb
pop
add
das
dec
mov
out
faddl
push
mov
into
mov
lahf
lea
cltd
lods
fdivl
pop
sbb
mov
adc
add
adc
dec
aas
scas
mov
int
mov
cmp
xchg
cltd
add
push
ds
adc
out
testb
cmp
and
jno
or
mov
rcrl
push
push
add
lret
dec
and
nop
sarw
add
fimuls
dec
stos
cmp
sub
lret
add
idivb
dec
stc
dec
and
mov
rcrl
mov
dec
out
faddl
enter
mov
in
dec
and
adc
daa
add
pop
es
pushf
cmp
daa
cld
idivb
sbb
jae
repnz
xchg
adc
xchg
in
int
cmp
test
pusha
mov
call
inc
adc
mov
addr16
sub
jo
jne
addr16
jle
cmc
sbb
imul
cmc
fcompl
popf
push
dec
mov
xor
cmc
jmp
push
mov
icebp
xor
loop
cld
js
cmp
mov
and
repz
movsb
filds
lds
out
mov
lods
stc
fldl
pop
ds
xor
pop
and
mov
pop
inc
lods
fldenv
pop
pop
jl
inc
push
pusha
push
cs
push
mov
dec
add
mov
test
aad
hlt
inc
out
clc
inc
adc
pop
adc
cld
repz
jnp
nop
push
and
cmc
ljmp
pop
aas
jbe
and
and
add
xchg
sahf
add
xchg
xor
lock
mov
pop
mov
sbb
rolb
js
fnstenv
movsl
into
std
mov
mov
hlt
jno
xchg
xchg
and
out
movsb
xchg
xor
mov
sub
inc
mov
mov
aam
js
fistps
inc
mov
out
push
sub
inc
sbb
and
lock
scas
scas
pop
icebp
sahf
sbb
cmp
mov
dec
addb
pop
inc
cmpsb
arpl
insl
cld
and
sbb
test
cmp
scas
scas
cmpsl
mov
inc
aam
jecxz
aaa
jge
jmp
pusha
es
mov
sahf
cwtl
stc
pop
fs
inc
dec
loopne
cmpsb
push
and
adc
xchg
add
xor
das
clc
stc
mov
jle
cltd
and
adc
pushf
lahf
call
out
incb
fcompl
test
pop
rol
sahf
adcb
rol
outsb
lahf
test
daa
fcoml
cmc
out
je
lret
xor
gs
or
sub
pop
push
or
add
jmp
xchg
push
push
stos
out
insb
sbb
inc
fwait
mov
pop
cmp
call
pop
hlt
inc
sbb
test
fdivrs
mov
dec
xor
in
loopne
jl
lock
rorb
rcrl
loope
gs
dec
push
outsl
into
push
mov
mov
add
shrb
dec
ljmp
inc
jo
mov
ret
sbb
call
enter
jp
adcl
mov
or
pusha
scas
test
pop
lods
out
adc
cmp
in
sbb
stos
sbb
cmpsl
adc
inc
negb
call
aam
les
les
lret
push
add
insl
int
vphsubbw
mov
cwtl
xchg
sbb
adc
out
push
or
mov
pop
fsubl
inc
hlt
insl
jo
sub
push
aaa
xchg
loope
int
jo
sbb
sbb
mov
sub
pop
fmul
lahf
fsubl
mov
xchg
dec
movsb
mov
jae
adc
aad
fnsave
mov
push
mov
imul
lret
or
jl
sub
fsubr
pop
popf
js
push
add
xor
or
nop
jb
mov
jge
notl
mov
and
jb
adc
sti
sbb
xchg
dec
lds
and
pop
scas
int
aam
push
lds
pop
sub
out
das
les
push
nop
andl
cmp
adc
pop
push
out
jp
jns
call
sahf
call
cmp
mov
scas
inc
or
and
pop
fwait
add
push
in
jg
hlt
jg
ret
mov
fsubs
mov
outsw
aam
mov
mov
cwtl
loope
in
cwtl
xor
out
push
loop
fsts
adc
repz
test
cmc
mov
outsl
lods
imull
lret
cmpsb
inc
imul
mov
outsl
mov
cltd
add
sub
lret
xchg
aam
inc
aad
cmp
push
push
icebp
dec
fs
xor
out
sbb
or
cld
sbb
pop
push
inc
push
lea
jle
std
fdivrs
das
sbb
mov
scas
sbb
sahf
cld
iret
mov
mov
or
push
xchg
cwtl
icebp
gs
lret
paddq
mov
jne
lods
mov
mov
ret
pop
cmpsl
xor
test
mov
push
ja
push
adc
and
out
rcl
jg
add
rcrb
movsl
ss
lea
stos
lret
sbb
std
push
cmp
pop
mov
and
in
aaa
loope
cwtl
imul
and
push
insb
into
or
mov
pop
mov
icebp
stos
add
cmpsb
mov
xchg
xchg
ljmp
pop
mov
jge
dec
mov
ss
in
cwtl
std
leave
inc
adc
push
scas
push
add
sub
jnp
lock
outsb
or
aas
ficompl
ds
int3
mov
and
data16
lds
rolb
in
into
popa
sub
scas
sbb
hlt
mov
xchg
fdiv
dec
sbb
addr16
ss
je
mov
dec
xchg
adc
and
cmp
repz
mov
push
repz
mov
lds
scas
scas
lods
int3
cmp
lret
das
movsb
fcomps
pop
aam
and
pop
popa
idivl
sarl
sub
inc
inc
cs
ret
push
push
pop
sbb
das
push
fcmovnbe
xchg
std
lea
inc
das
xor
sbb
pop
push
xchg
pop
fdivl
insb
fists
imul
sbbb
dec
bound
xchg
insb
lds
or
sahf
loop
fdivl
and
jbe
cmpl
sub
dec
fprem1
pop
lods
rcll
pop
inc
inc
pop
mov
dec
fwait
sahf
sar
out
mov
ficoms
adc
jnp
in
xor
xlat
xor
inc
aam
test
pop
ror
mull
lret
nop
insb
sahf
add
jns
xchg
lahf
imul
inc
je
adc
scas
fsubr
hlt
mov
std
hlt
dec
mov
int
push
or
mov
inc
clc
xchg
testb
scas
scas
lds
lock
adc
sub
cmp
shll
stc
xor
push
mov
inc
gs
xor
ss
sub
mov
cmpsb
push
mov
nopl
in
push
xchg
lods
rol
inc
mov
out
mov
add
push
lods
es
sub
lea
int
sarb
sahf
js
and
add
or
dec
dec
out
in
pop
push
lds
out
arpl
pop
icebp
or
pop
cmpsl
ret
ret
cld
imul
js
ror
scas
movsb
dec
cmc
imul
in
adc
stc
jno
leave
xor
xor
insl
ja
rol
sbb
ljmp
pop
or
fmuls
pop
cmc
faddl
mov
sbb
icebp
imul
aas
or
sub
fmull
scas
dec
popf
mov
push
popf
cmpsb
movsb
mov
xchg
stos
cmp
test
fildll
pop
adc
call
lock
popa
push
movsb
test
aaa
inc
inc
int
pushf
pusha
das
mov
mov
sbb
pop
shlb
mov
push
add
test
push
clc
js
lcall
push
sub
mov
inc
jo
jns
in
out
stc
jno
xor
cmpsl
add
leave
std
mov
inc
sbb
in
das
test
and
mov
ret
lret
inc
rcll
sub
sti
sahf
ja
insl
in
pushf
in
cwtl
pop
loope
inc
mov
cmpsb
loope
dec
lds
mov
mov
and
arpl
push
jae
mov
bswap
xlat
ja
repz
sti
lahf
rolb
push
add
pop
jl
ljmp
push
adc
pop
push
mov
pop
jle
ret
movl
fimull
out
push
rcr
mov
pop
add
ljmp
add
push
cwtl
dec
gs
or
xchg
loop
imul
sub
arpl
dec
sub
mov
push
les
push
mov
pusha
call
xor
and
sbbb
es
jmp
push
or
pop
les
push
mull
xchg
pop
inc
ror
xorb
frstor
imul
adc
je
fcomp
stos
scas
push
addb
xchg
push
and
sti
in
les
add
into
into
aas
jl
mov
sub
dec
dec
jnp
jp
repz
pusha
mov
movsb
mov
xchg
call
int
fcom
adc
gs
outsl
insl
insl
add
ds
push
jg
pop
or
mov
jmp
pop
adc
inc
pop
xchg
adc
sub
inc
into
cmc
pop
in
mov
pop
mov
or
inc
mov
inc
inc
mov
mov
call
inc
aaa
push
sbb
rcll
sbb
sbb
mov
dec
addr16
nop
cmp
mov
push
out
xor
mov
dec
mov
mov
add
fmulp
xlat
cmc
and
mov
inc
sbb
adc
mov
dec
lock
sahf
es
xchg
cmpsl
mov
mov
push
xchg
sub
and
lea
les
xor
test
ficomps
bound
mov
adc
ret
xchg
jns
push
cli
shrb
test
add
mov
pop
cli
fstpl
push
xchg
ror
shlb
xor
add
sbb
or
sbb
movsb
pop
sarb
xchg
or
cld
je
ljmp
sbb
fwait
adc
out
iret
mov
mov
aaa
dec
fsubs
in
jns
sbb
sbb
dec
sub
or
jp
popl
shrl
repz
mov
push
pop
lahf
sarb
insb
gs
cmc
stos
rorb
pop
pop
cld
add
jnp
shrl
push
xlat
or
repz
jnp
pusha
mov
adc
scas
insl
fwait
lcall
stos
movaps
lods
jo
movsb
dec
dec
ret
mov
sbb
mov
sub
es
push
sub
xor
std
jg
out
or
lcall
jge
sub
insb
stc
ret
test
bound
pop
add
mov
jle
push
movsl
mov
adc
push
fptan
inc
mov
mov
adcl
data16
imul
scas
lds
mov
add
pusha
sbb
int
mov
push
mov
dec
mov
or
mov
fucomip
add
cmc
sub
movb
mov
dec
cmp
xchg
mov
push
shrl
hlt
xchg
sti
fildll
icebp
pop
mov
mov
cld
add
adc
ljmp
push
aam
inc
jno
daa
adc
stos
and
or
bound
inc
scas
outsb
loop
pop
ljmp
ja
js
or
xchg
enter
inc
inc
les
sub
cmp
dec
pop
pop
cld
pop
adc
xor
lea
mov
pop
mov
add
or
push
loopne
sub
insl
je
test
mov
xchg
dec
js
popf
and
sbb
das
out
cmp
push
jmp
dec
and
mov
bnd
push
loope
xchg
hlt
loope
inc
enter
jmp
clc
add
jg
pop
or
xor
test
outsb
jbe
ret
ret
mov
jmp
xor
and
push
jno
ret
mov
add
or
push
pop
loope
or
mov
nop
into
push
dec
mov
scas
pop
cmpsl
rcll
fistpll
cmp
and
adc
loopne
jns
mov
mov
mov
pop
js
mov
sbb
iret
aaa
ds
popf
aas
dec
cli
jle
mov
in
jae
jo
push
inc
stos
call
ljmp
ret
test
jg
xchg
mov
loop
push
ret
arpl
mov
cltd
aaa
add
call
fidivs
rclb
mov
scas
adc
clc
cwtl
stos
aam
push
mov
mov
movsb
mov
cmp
xchg
add
mov
or
in
aas
sahf
dec
loop
push
in
cwtl
or
cmp
mov
sub
arpl
je
cs
mov
add
mov
mov
stos
xor
cmc
mov
add
aad
out
ret
pop
sbb
mov
pop
jne
push
mov
push
sti
mov
xchg
xor
mov
dec
shld
mov
mov
cwtl
jo
test
hlt
jmp
lret
jbe
push
mov
int3
cwtl
loopne
outsl
and
cmp
push
or
fwait
mov
call
mov
rcrb
into
pushf
test
scas
addb
sbb
sbb
int
or
jbe
jg
sbb
mov
dec
xchg
and
fs
outsb
jmp
icebp
popl
jmp
icebp
dec
push
jge
shll
sahf
pushf
movsb
repnz
mov
popf
pop
ja
mov
popa
ss
sbb
in
fnstenv
mov
popa
ds
dec
bound
rcpps
scas
cmp
fwait
mov
inc
or
stos
sub
or
add
int3
sub
lods
xchg
call
dec
jne
lock
inc
mov
les
mov
or
bound
stc
dec
jmp
test
pop
js
cmpl
aam
fcom
cmp
mov
mov
sti
rolb
cmp
cmc
notl
clc
jb
jnp
clc
shll
ja
out
cmc
daa
hlt
dec
mov
jl
fdiv
push
mov
xor
dec
cmpl
fcom
ss
pop
mov
jns
jmp
jl
leave
adc
imul
pop
gs
pop
int3
mov
dec
cs
jae
nop
mov
and
add
decb
mov
insl
mov
inc
fsubrs
int3
dec
insl
lret
je
cmpsl
mov
push
xor
add
or
cwtl
bound
xchg
loop
push
out
insb
leave
sbb
lcall
mov
and
mov
fnstsw
data16
jne
repnz
div
ret
jb
sub
call
dec
lock
enter
cmpsb
sti
fsts
and
aaa
push
rcr
inc
fdivp
cld
mov
out
ds
add
mov
aad
mov
push
cmpb
or
ja
dec
rcrb
push
imul
aaa
mov
push
lock
nop
ljmp
dec
pop
loopne
stos
jg
push
data16
and
inc
sbb
lods
jae
or
xor
pop
enter
mov
ret
jmp
sahf
outsl
imul
push
orl
int3
out
sbb
inc
sub
lods
add
mov
jp
mov
adc
or
pop
adc
jne
fwait
or
cmp
mov
adc
jbe
in
les
cmp
cltd
and
out
test
in
int
ret
xchg
ds
out
jge
idivb
insb
popa
xchg
cmp
or
xorl
movsl
int
sub
inc
aas
cli
enter
mov
fs
loop
rclb
fldenv
mov
aam
mov
xchg
cwtl
jecxz
jbe
dec
mov
jge
out
adc
jmp
sbb
pop
js
push
rorb
push
stc
sub
adc
les
push
jg
mov
or
es
cli
loopne
test
leave
push
and
mov
scas
stos
adc
mov
pop
jmp
fimull
lock
ror
pop
and
shll
shlb
das
pop
and
mov
mov
dec
dec
mov
mov
xor
gs
std
push
cmp
mov
mov
sbb
sar
pop
jbe
mov
repnz
aad
mov
pop
mov
stc
je
add
and
mov
cld
gs
push
aas
mov
adc
adc
pop
adc
and
jb
and
push
lahf
setnp
scas
mov
popa
ljmp
movsb
out
outsb
push
in
fdivs
ss
in
repnz
jns
pop
mov
mov
test
daa
xchg
jnp
push
sahf
clc
dec
in
pop
sbbb
dec
pushf
xor
inc
xchg
pop
imul
jmp
cs
cmp
push
add
mov
jl
mov
test
and
lahf
fdivs
xor
cmc
sub
push
mov
push
xchg
add
inc
mov
jnp
int3
lahf
dec
mov
mov
jne
adc
test
adc
inc
and
call
mov
outsl
int3
rorl
pop
push
stos
or
xor
je
fwait
cmpsl
sbb
dec
pop
and
ja
mov
sub
inc
aam
xchg
into
dec
sbb
sub
nop
leave
mov
movsb
rcrl
fistpl
xor
insl
cltd
movsl
or
xchg
sar
daa
movsl
and
mov
lahf
fcoms
xchg
and
rcrb
jnp
cltd
push
jp
lret
outsb
xor
inc
roll
arpl
fcoml
fimull
pop
out
imul
mov
push
popa
cmpsb
gs
ret
inc
movsl
add
jo
xchg
and
pop
fcoms
jae
pop
or
sbb
arpl
pushf
sub
imul
inc
dec
mov
inc
fbld
xor
cld
les
addr16
daa
in
jg
int
adcb
mov
inc
ret
enter
jl
and
stc
lods
push
adc
sti
mov
mov
pop
mov
adc
std
je
jbe
and
sbb
push
xor
lcall
std
fcoms
inc
add
inc
cwtl
sub
push
loope
cmp
imul
jl
or
filds
sub
imul
data16
fisttpll
lods
xor
mov
adc
incb
and
add
jmp
xchg
xchg
in
leave
or
xor
inc
in
cmp
aad
push
int3
scas
in
nop
cwtl
iret
mov
outsb
lret
or
and
sub
scas
add
sbb
mov
cmp
xchg
stos
xor
cld
test
roll
fmull
outsl
jg
scas
sbb
scas
repnz
outsb
adc
pop
inc
push
xchg
mov
xor
fdivl
push
fdivrp
mov
push
adc
shll
mov
jp,pt
jb
icebp
insb
shlb
cmp
int3
adc
pusha
testb
pop
pop
mov
jo
stos
push
das
push
mov
push
rclb
fsub
repz
ret
add
adc
lahf
adc
fimuls
or
and
js
sub
loop
cmpsb
jne
xor
sub
mov
pop
fmul
mov
jecxz
lea
and
sub
aam
imul
fbstp
movsl
mov
pop
pop
mov
dec
shll
loopne
jecxz
cmpb
movsl
mov
sbb
jae
jge
lret
mov
call
aam
call
lahf
imul
mov
in
pop
aaa
lods
int3
jmp
pushf
xchg
jge
push
inc
popa
mov
jb
cmp
das
inc
enter
cmp
hlt
cmp
mov
xchg
shl
dec
imul
jl
cmpsl
mov
mov
pushf
push
or
xchg
lds
notb
ret
and
add
xchg
scas
fildl
xchg
lock
mov
inc
xlat
xlat
icebp
clc
int3
daa
mov
pop
inc
movsl
mov
shr
icebp
mov
ficoms
pop
or
into
sbb
lret
inc
adc
sbb
jno
aas
xchg
aad
lock
int
in
pop
leave
jg
insl
lods
jg
fucom
cmp
pop
test
std
idiv
sbbb
adcb
adc
fdivrp
repnz
mov
inc
fidivrs
into
adc
rcl
out
pop
mov
ds
jb
push
push
jge
xchg
lcall
lcall
mov
cmc
and
in
inc
sbb
dec
stos
jle
push
mov
xchg
sbb
pop
cltd
test
sarl
jle
sbb
cmp
mov
test
mov
pop
fwait
mov
push
xor
loope
xor
in
aad
imulb
mov
shlb
jne
inc
jo
stc
stc
gs
and
sub
mov
dec
into
lds
iret
rol
add
dec
pop
sub
loopne
std
pop
pop
pusha
outsl
lahf
xlat
xor
sbb
or
daa
call
pusha
leave
out
fists
stos
lcall
or
mov
imul
icebp
imul
mov
inc
or
test
jne
or
insl
inc
popl
lea
jb
pop
pop
int3
testl
in
stos
movsl
add
test
and
xor
jno
ss
fistpll
xor
stc
add
cmp
pop
xchg
or
sub
pop
and
in
stc
dec
clc
repz
scas
loopne
int3
mov
sbb
xchg
sbb
sbb
cld
sarl
mov
mov
in
dec
mov
push
cltd
leave
mov
lock
sub
add
faddp
inc
inc
push
out
scas
lea
adc
jb
or
aaa
subl
inc
add
ja
cmc
stos
push
imul
mov
and
icebp
xchg
and
shrb
popf
lahf
lret
fldt
pop
xchg
pop
push
mov
mov
data16
adc
shll
fsts
cmp
shl
cmp
cmp
mov
sbb
adc
jb
xchg
ds
mov
je
sarl
mov
rcl
or
pop
loop
bound
adc
les
sarl
ret
sub
loop
push
inc
leave
icebp
scas
scas
outsl
mov
in
xlat
inc
inc
daa
pop
dec
cmp
gs
cmpsl
insl
and
xchg
add
mov
sub
or
inc
fsubr
fcom
add
push
aad
pop
dec
inc
aaa
test
jae
push
gs
test
in
sarl
cmpsb
loop
int
sub
push
out
sub
testl
xchg
sbb
std
stos
mov
xchg
sbb
dec
add
push
sbb
push
mov
dec
aas
lcall
subl
xor
push
out
jp
mov
or
push
in
push
jle
shll
adc
punpcklwd
in
loope
sub
mov
loopne
push
int3
test
inc
jns
mov
addl
fucompp
jbe
cmp
sub
xor
jb
and
mov
push
out
dec
dec
push
in
sub
sbb
push
mov
mov
push
addb
inc
fisubl
add
xchg
mov
or
popa
fabs
les
dec
hlt
adc
pop
mov
adc
mov
mov
adcl
addr16
push
movsl
mov
cmp
out
in
rcrl
xchg
mov
repnz
mov
fisubrs
mov
xor
lcall
and
sub
xchg
inc
inc
add
data16
jp
or
lahf
jae
nop
add
xor
mov
mull
mov
jb
xor
fcmovnbe
ror
mov
inc
pop
push
mov
pop
aad
push
mov
dec
loop
sub
cmp
lea
ficoms
bound
cmp
movsl
loop
and
or
pop
divl
xor
divb
mov
jge
jnp
sub
lret
sbb
jmp
xchg
aas
femms
lds
mov
iret
inc
pop
int
cmc
sub
jp
loop
in
ret
orb
dec
mov
push
mov
add
loopne
mov
and
mov
fimull
mov
sub
loope
fdivr
dec
push
mov
add
xor
jnp
aad
sbb
mov
popa
addl
jns
sub
cli
sub
mov
dec
sbb
loope
loop
cmpb
addl
xchg
sub
jne
sub
aam
leave
dec
and
cmp
jecxz
std
lock
fbstp
xor
inc
pop
pop
pop
int3
stos
repz
pop
dec
dec
subb
ljmp
sub
loope
lea
ret
daa
adc
insl
arpl
dec
lahf
fs
mov
push
cmc
repz
adc
sti
lods
adc
fwait
add
sarb
sub
xor
test
cmc
and
aam
idivl
or
push
mov
insb
in
insb
pushf
lret
sbb
scas
mov
push
int3
dec
mov
mov
inc
call
jbe
or
mov
inc
mov
movsl
fadd
arpl
cmp
cmp
push
adc
int3
xchg
mov
add
or
dec
push
jg
loopne
inc
mov
pop
pop
pop
sub
xchg
adc
stc
fldenv
insb
xor
repnz
push
push
les
int
or
lcall
and
xlat
push
lahf
into
jbe
mov
dec
clc
jnp
lock
lock
stos
jno
inc
pop
sbb
daa
push
xor
pushf
mov
das
xor
out
cltd
mov
mov
clc
and
cld
adc
data16
or
jbe
xlat
mov
and
std
sbb
ljmp
push
or
pop
jl
jns
loopne
gs
daa
dec
js
imull
mov
fucomip
sahf
xlat
push
in
lcall
dec
mov
cmpsb
imul
jmp
xor
sub
xchg
fstps
nop
push
mov
pop
sub
aas
cltd
cmc
mov
in
adc
hlt
mov
push
stos
aad
lds
add
mov
mov
sti
das
add
imul
shll
leave
cmp
mov
daa
popf
push
dec
add
dec
jp
outsl
hlt
cltd
std
mov
xchg
int
and
rcrl
lock
stos
ds
push
or
xchg
pop
mov
cmp
jmp
imul
mov
aad
ja
popf
inc
lea
dec
sub
dec
mov
push
xor
inc
dec
ds
mov
sbb
pop
imul
push
or
shl
mov
mov
in
dec
ljmp
sbb
mov
push
lret
jle
jnp
ret
push
test
rol
or
mov
dec
gs
icebp
jo
in
inc
cmp
inc
mov
pop
loopne
notl
pushf
loop
mov
jecxz
push
sbb
jge
fdivrs
and
sub
enter
sub
xlat
fimuls
outsl
test
jmp
hlt
repz
inc
fwait
mov
adc
or
int
sbb
out
js
nop
xchg
sbb
mov
mov
jae
in
dec
pop
call
jmp
int3
xchg
in
outsl
xchg
xchg
add
jbe
mov
jns
xchg
add
jo
lea
mov
ds
pusha
incl
jo
aad
shrb
or
pop
popl
cmp
jecxz
or
mov
loop
inc
test
xor
inc
add
inc
push
mov
add
mov
xchg
loope
xchg
and
or
cmp
adc
xor
xchg
mov
pop
les
add
sbb
dec
sbb
imul
popw
fdivl
adc
add
fwait
mov
ret
adc
cli
ja
inc
jno
leave
scas
test
mov
inc
js
pop
dec
mov
push
fidivl
les
sbb
add
rclb
nop
mov
pop
fsts
sbb
jns
mov
or
arpl
jg
sbb
into
out
stc
ffree
scas
xchg
pslld
mulb
ja
or
mov
mov
cltd
movd
and
cld
divl
dec
outsl
ja
test
test
jg
mov
mov
dec
cli
or
sub
mov
pop
lcall
les
lret
or
loop
xchg
xor
xor
or
xlat
sbb
or
xchg
adc
dec
mov
sbb
mov
mov
out
sub
push
test
test
adc
idivb
aad
xchg
hlt
push
push
clc
test
dec
adc
cmp
lock
cmp
inc
mov
sbb
sbb
mov
sub
push
std
lods
xchg
adc
jmp
es
sub
ja
sbb
lahf
lahf
out
out
or
push
in
mov
xor
mov
out
xlat
add
inc
js
or
adc
filds
jmp
fadds
sahf
inc
jnp
nop
push
dec
jl
ja
outsb
or
repz
inc
stc
mov
and
addr16
mov
leave
in
ret
cmp
push
in
or
lahf
dec
mov
mov
mov
outsb
add
daa
sbb
push
sbb
and
push
sub
xlat
push
jb
dec
mov
bnd
adc
fiadds
js
rol
mov
faddl
cmpb
cmpb
pop
outsb
mov
pop
es
push
jno
inc
dec
incb
arpl
nop
xor
out
jnp
and
test
movsl
test
movd
xchg
iret
sarb
mov
stos
out
out
inc
xor
sti
fsubrs
sarb
add
push
and
dec
loop
mov
cli
cmpsl
pop
scas
cmpsb
js
out
push
sub
imul
icebp
add
dec
xchg
xorl
jp
cli
adc
jns
cmp
inc
adc
xor
adc
sbb
sub
clc
jae,pn
adc
ror
lods
stc
icebp
addb
scas
add
js
lods
push
repz
outsb
sbb
pusha
sbb
mov
stos
push
xor
jnp
mov
add
data16
out
and
popa
scas
out
xchg
pushf
add
out
sub
sbb
push
leave
cli
ret
in
fisubl
cli
jbe
stc
add
bound
ret
push
fildl
pop
or
inc
and
lret
fsubrl
push
imul
or
ljmp
neg
pop
lds
xchg
jl
fadds
lock
sbb
lcall
lahf
xorb
das
sub
jo
pop
je
out
test
mov
int
hlt
push
sbb
in
andb
xchg
mov
cmp
outsl
dec
loope
mov
dec
or
cmp
mov
iret
dec
jno
out
push
ds
dec
nop
inc
jle
in
stc
int
push
sub
popa
add
insb
stos
xchg
dec
push
and
xchg
std
mov
pop
sub
xchg
shl
lret
into
popf
add
push
in
sahf
and
imul
idiv
push
xor
mov
hlt
lahf
into
cmp
push
inc
hlt
cli
fstpl
push
dec
js
cmp
push
xchg
rorb
push
xor
dec
pop
push
call
lods
cltd
xor
test
and
inc
push
inc
xchg
test
dec
dec
and
fmull
jp
add
loope
push
mov
add
stos
rorl
dec
adc
fisubl
add
sbb
xor
rorl
and
fildl
add
fwait
ret
or
sbb
mov
je
mov
adc
out
xchg
and
jg
ja
jno
pop
sbb
fidivrl
mov
jecxz
stos
jg
lcall
or
mov
pop
push
loope
int
cs
subl
lcall
rcrl
sub
xor
mov
cmp
push
inc
or
rcl
pop
mov
and
ret
mov
xchg
mov
jns
cmp
insw
bound
adc
xor
push
testb
xor
push
mov
jle
cld
xchg
shl
inc
inc
inc
in
data16
sub
lods
in
test
sbb
pop
movsb
inc
out
jg
sub
pop
or
xchg
mov
xchg
daa
mov
jne
xor
inc
cmp
arpl
enter
pop
int
inc
out
sbb
sbb
cmpsb
xor
mulb
mov
in
and
sbb
repnz
lcallw
cmp
fcmovnb
cwtl
mov
xlat
lret
dec
sbb
js
cmp
cli
jo
cmpsl
pop
lds
iret
roll
int
inc
adc
xor
cmp
pop
in
scas
shlb
int3
mov
call
jle
clc
xchg
andb
xor
mov
fadd
cmc
mov
ds
ds
ss
jle
popa
add
stc
lcall
out
pop
jge
inc
aad
jns
adc
pop
int3
sbb
pop
fisubs
sbb
sbb
in
mov
fs
sti
cld
repnz
dec
xor
call
jbe
dec
or
je
movsb
fldl
pushf
mov
and
xor
dec
add
mov
or
adc
nop
xlat
nop
push
iret
adc
xchg
push
lret
bound
jp
sbb
popa
imul
mov
xor
test
push
les
xor
lock
jns
ret
in
in
mov
xchg
cmp
cld
push
rol
pop
mov
xor
xchg
int3
or
push
int
mov
mov
fimuls
adc
mov
fdiv
leave
add
mov
push
imul
cs
movsl
sbbb
lret
bound
cmp
and
or
sbb
shrl
add
mov
stos
pop
push
jns
cmpsb
in
push
mov
daa
cwtl
imul
fistps
dec
addb
lea
xchg
aad
push
push
popa
in
data16
lahf
xlat
loope
mov
push
into
call
ss
xchg
int
cmpsl
cmp
push
shlb
mov
jno
inc
and
lock
jo
lret
ret
dec
call
add
popa
dec
push
add
xlat
aam
fs
lret
aad
daa
xchg
cmpsl
dec
inc
pop
mov
int
pop
outsb
xchg
cmp
jmp
js
movsb
in
add
push
cmpsb
sbbb
sbb
add
cmp
mov
jbe
dec
or
fidivrl
mov
mov
push
xor
insb
lea
ror
dec
call
in
es
movsl
cmpsl
scas
cltd
movsl
xchg
inc
jecxz
les
sub
xorb
jge
jg
sahf
mov
cli
aam
mov
sub
ljmp
mov
sbb
inc
pusha
sbb
xor
add
mov
inc
cmc
pop
sbb
std
add
nop
sti
pop
popfw
cmp
sub
fisubrl
mov
mov
mov
jge
and
pop
sti
clc
seto
xor
xchg
stc
sub
movsb
hlt
dec
xchg
sbb
or
push
pop
mov
jbe
mov
xchg
mov
add
jbe
jg
adc
cmp
xchg
adc
push
ret
loop
jl
mov
jmp
mov
mov
add
and
push
push
push
fisubrl
call
jg
leave
mov
cmp
push
adc
push
push
out
test
popf
test
or
push
pop
test
mov
add
arpl
cmp
sbb
ss
mov
xchg
sbb
mov
mov
nop
pop
and
ljmp
lds
ljmp
xchg
addr16
push
fsts
lds
mov
or
sbb
scas
xor
das
fld
leave
cmpsl
cmp
jmp
das
adc
adc
nop
test
sub
jle
sub
test
mov
inc
ftst
daa
push
sub
jnp
movsb
sub
lock
mov
mov
loopne
add
jb
loopne
jle
adc
xchg
fldt
mov
jle
insb
fistpl
and
sahf
int3
adc
xchg
orl
xor
and
jo
mov
adc
shrb
arpl
jno
fwait
cltd
mov
mov
insl
test
adc
cmp
sub
icebp
mov
lret
or
cli
cltd
xor
dec
and
or
pushf
inc
and
andl
pop
and
pop
stos
pop
xchg
mov
and
fsubl
arpl
adc
xchg
dec
test
cs
rorb
movsl
push
cltd
or
jl
leave
mov
jo
pop
inc
fldenv
and
jmp
add
cli
adc
sbb
sub
jne
jge
shlb
sbb
add
inc
xchg
pop
imul
xchg
adc
pop
xor
fxch
inc
jecxz
aas
fdivrl
dec
xchg
push
das
sub
pop
xchg
mov
ja
ret
nop
mov
das
sbb
sub
arpl
xor
xor
inc
cmp
aas
jp
imul
sbb
leave
stc
pushf
cmp
dec
mov
imul
mov
xchg
sub
hlt
imul
loop
inc
arpl
test
aaa
push
xor
dec
cmp
and
out
aad
sub
mov
and
sub
cli
xor
xchg
out
mov
xor
data16
cs
pop
pop
sbb
adc
enter
insb
xchg
dec
mov
shlb
xchg
stos
jae
jo
sar
push
adc
pop
dec
or
sub
in
mov
xchg
mov
cmp
subb
lret
fwait
adc
dec
rcll
xchg
jmp
add
gs
mov
xor
add
xor
mov
mov
jnp
sub
mov
mov
sbb
add
movsl
pop
pop
push
call
movsb
xchg
dec
jb
sbb
push
push
cs
fwait
sti
lret
xchg
repnz
test
jmp
inc
cmpsl
loope
push
mov
and
lea
fbstp
and
shrb
in
inc
popf
pusha
sbb
mov
movsb
test
push
xor
mov
jno
sbb
push
mov
jo
sahf
leave
fsubl
cmpsl
ljmp
xchg
lds
sbb
mov
xchg
inc
out
jb
xchg
lea
pop
sbb
lret
lcall
bound
mov
xor
roll
test
mov
bound
or
lods
jo
mov
out
inc
shr
sbb
push
shl
xchg
fimuls
aas
mov
lret
xor
cmp
pop
jecxz
outsl
stos
sbb
cmp
sbb
pusha
in
jbe
sbb
das
add
negl
dec
push
testl
and
cmp
dec
sub
jae
pop
pop
push
shrb
xchg
clc
fmuls
pop
stos
pop
test
cs
cmpsb
lcall
cs
adc
push
lds
int
flds
sbb
xchg
pop
inc
dec
adc
pushf
xlat
pop
out
cltd
add
push
jno
in
mov
movsl
leave
test
aaa
arpl
loope
xchg
inc
movsl
xor
inc
iret
cs
jmp
mov
dec
add
dec
jns
dec
xchg
xchg
lock
in
xor
xor
arpl
mov
sub
into
arpl
js
je
push
push
xchg
orl
andb
xchg
lret
fmull
in
pushf
insb
pushf
xlat
imul
int3
adc
or
mov
sti
xchg
int3
stos
push
pop
mov
pushf
lods
xor
loope
xchg
popf
sbb
cltd
arpl
add
mov
xchg
adc
push
mov
inc
jns
mov
aas
mov
sbb
add
mov
sub
sbb
add
mov
xchg
in
dec
jnp
out
dec
cmp
repnz
xor
ficompl
xchg
sbb
movsb
std
pop
iret
or
cmp
fcomp
dec
pop
inc
ja
lret
daa
push
int3
dec
jbe
addr16
and
imul
mov
push
inc
shll
cmp
fsubrl
pop
arpl
enter
test
lret
mov
jne
adc
mov
je
bound
dec
in
ss
lret
xor
dec
leave
pop
lds
jg
into
push
dec
and
pop
clc
sub
cli
pusha
mov
inc
addl
shrb
dec
or
movlps
nop
ds
shll
mov
and
mov
out
lret
icebp
cwtl
aad
mov
mov
decl
push
jmp
add
es
mov
outsl
or
push
xchg
popa
pushf
ret
mov
xchg
fiaddl
test
and
cmc
mov
mov
idivl
outsb
mov
lock
adc
dec
sub
sub
ret
sbb
pop
loopne
mov
mov
lahf
add
movsb
cmpsl
bound
xchg
cmpsl
lcall
jecxz
ss
mov
xor
clc
sub
pusha
les
mov
cltd
push
addr16
daa
shrb
cmpsb
ret
bnd
jg
mov
fucomp
rcll
sbb
scas
pop
hlt
dec
inc
movsb
lock
mov
cld
jne
jbe
in
mov
mov
fdivrs
push
sub
push
push
inc
add
dec
mov
lock
inc
gs
outsb
xchg
inc
mov
mov
sbb
push
cmp
inc
cmp
movsb
mov
or
push
imul
xchg
out
jno
lret
push
cwtl
ja
xor
jnp
movsb
mov
aam
mov
mov
les
mov
sbb
ljmp
dec
test
aas
pop
xor
add
xor
mov
xor
testb
pop
iret
push
xchg
adc
pop
loope
out
sbb
sbb
addr16
lcall
jbe
addr16
pusha
push
jne
out
xor
xchg
rol
int3
xchg
sub
fmull
mov
cltd
fdiv
sarb
lahf
es
cmp
push
mov
mov
mov
mov
or
xchg
es
ror
call
jle
fistpl
out
icebp
xchg
push
sbb
jo
mov
popa
les
insl
mov
lcall
test
outsb
xlat
lcall
lahf
sbb
dec
leave
in
ja
mov
mov
insb
dec
sahf
lahf
add
mov
adc
cmp
incb
adc
loope
lcall
jp
mov
loopne
jns
mov
adc
lret
cmp
mov
dec
mov
pop
out
add
xchg
rol
popf
or
xchg
and
std
js
dec
pop
xchg
cmp
insl
in
sub
dec
int
aam
mov
sahf
clc
adc
inc
mov
xchg
pop
adc
pushf
out
mov
mul
xchg
mov
push
sub
adc
mov
mov
mov
sub
filds
xchg
ljmp
daa
add
cmp
pop
mov
out
mov
pushf
sbb
inc
outsl
pop
and
mov
pop
in
xor
lods
std
sub
out
dec
cwtl
cmp
adc
mov
sub
cmp
int
jle
mov
fsubrs
push
mov
addr16
fistl
push
jle
test
cmpsl
xchg
inc
mov
in
aas
mov
sub
bound
mov
mov
test
or
dec
add
xor
ret
mov
mov
xlat
sbb
push
adc
xchg
dec
jo
iret
xlat
xchg
lret
dec
dec
movsw
or
push
or
movsb
ja
inc
mov
inc
cmp
mov
and
or
repz
add
cld
xor
mov
sti
inc
adc
daa
or
cmpsl
sbbb
mov
push
out
mov
inc
inc
adc
outsb
dec
sub
add
pop
mov
es
cli
xchg
xchg
cmp
mov
ljmp
xchg
cmc
mov
mov
shrb
and
lret
test
arpl
jecxz
xorb
loopne
dec
test
xorl
gs
ljmp
adc
or
cmp
scas
push
mov
cmp
in
xchg
lds
and
loopne
lods
aam
jg
iret
and
push
imul
jp
xor
loop
inc
push
inc
pop
adc
jne
add
ds
sbb
or
arpl
js
aas
lret
lds
movsb
js
fwait
pushf
dec
into
loop
fsubrs
daa
int
mov
cmpsl
dec
adc
inc
xor
cmp
pop
sbb
outsl
push
add
sub
and
xchg
mov
testl
faddl
dec
and
jmp
or
add
movsb
cmp
xlat
mov
inc
mov
dec
fists
jnp
enter
dec
add
push
push
dec
ret
shrb
pop
jae
sub
push
sub
pushf
mov
push
arpl
xchg
lds
adc
js
sbb
push
mov
in
dec
lods
mov
pop
or
pop
adc
outsl
je
mov
lahf
xor
movsl
cmp
dec
nop
ret
and
fwait
dec
or
adc
pushf
sub
dec
pop
lods
push
jo
and
mov
inc
cmp
loope
test
jb
mov
ja
outsb
mov
xor
jno
jge
das
outsb
mov
daa
sub
mov
das
fistpll
jo
cmp
pop
int
xchg
mov
inc
int3
out
jnp
sbb
fdivrs
sbb
fcomip
lret
insl
popa
insb
cli
roll
mov
adc
dec
dec
pop
andb
adc
mov
mov
outsl
cmp
sub
lea
cmc
jmp
arpl
add
adc
jecxz
pop
and
cmp
fisttpll
mov
dec
insb
mov
sbb
mov
push
jo
pop
mov
mov
xlat
aaa
jg
add
sbb
lcall
push
xor
mov
push
dec
cltd
fs
xlat
push
push
loopne
ret
imul
lods
sbb
or
loop
add
add
shrl
push
loop
xchg
jno
jne
pushf
stos
mov
push
lods
pop
mov
dec
pop
dec
or
leave
mov
xchg
fisubrs
icebp
inc
xrelease
mov
addr16
in
mov
pop
mull
jmp
jns
dec
lcall
ja
les
or
xchg
xchg
call
into
push
jb
mov
mov
mov
stos
daa
mov
mov
pop
lret
inc
ljmp
or
int
in
and
std
sti
test
jle
xchg
jo
mov
jl
scas
xor
repz
jl
addr16
inc
adc
push
and
sahf
push
cltd
mov
loopne
fucomip
aas
lods
mov
pop
xor
cmp
stc
adc
xor
push
jle
cmp
roll
lret
pop
push
cmp
les
mov
lds
mov
mulb
iret
sti
ret
sbb
mov
push
dec
jbe
adc
shll
add
fcmovu
popa
dec
lds
pusha
imul
sub
lods
inc
push
pop
xorb
pop
jp
fwait
les
aaa
fdivrl
inc
pushf
add
sti
lock
mov
roll
xor
mov
inc
xor
xor
and
mov
pop
mov
aas
je
mov
adc
int
movsb
pop
loope
das
mov
cld
jge
mov
mov
cmc
test
add
or
lods
sar
jae
in
imul
push
je
inc
int3
mov
int3
or
pusha
ss
inc
mov
lret
adc
mov
mov
xor
xchg
pop
into
or
push
cld
jnp
loope
mov
pop
addl
push
jnp
mov
lcall
mov
cli
dec
mov
ljmp
hlt
push
lds
xor
imul
push
and
cltd
sub
push
rclb
jnp
mov
repz
stos
xchg
aam
out
pop
cmp
cmc
inc
test
in
xchg
mov
dec
sbb
aad
push
shlb
push
jge
jb
jp
das
push
and
outsl
and
cmc
add
aam
or
out
test
mov
loopne
daa
jle
pop
push
xchg
add
sub
sub
mov
hlt
in
popa
mov
lea
mov
rorb
sub
mov
dec
push
mov
in
dec
in
sub
outsb
loop
outsl
sub
dec
xor
or
into
ret
shl
fbstp
testb
aaa
mov
in
jb
lcall
leave
dec
aam
and
sbb
nop
test
inc
adc
jo
push
out
inc
and
cmp
cwtl
sbb
dec
fadds
push
mov
sub
mov
jo
jp
aad
ret
cli
fnstenv
sub
pop
ds
lods
and
xlat
cmp
mov
dec
icebp
rcl
insl
sub
mov
sbbl
aas
jle
add
sbb
add
fst
stos
mov
adc
lret
xchg
outsl
dec
or
pop
xchg
popa
insb
jmp
inc
adc
inc
and
daa
scas
add
fwait
sub
outsb
mov
dec
outsl
jns
cmp
stos
sbb
xchg
xchg
mov
addb
jle
mov
push
ljmp
test
call
adc
js
mov
mov
pop
mov
jo
dec
xchg
arpl
test
pop
or
and
xchg
ljmp
clc
sahf
sti
lcall
xlat
gs
out
cmp
sbb
stc
fcmovne
dec
jg
loopne
dec
imul
test
xor
sub
stos
insl
mov
pushf
and
lret
pop
sub
dec
or
lock
sub
out
dec
jae
cwtl
cmp
stos
inc
adc
cmc
mov
ffreep
jge
cmp
cmp
shrb
mov
xchg
push
push
out
inc
xchg
push
stos
shll
and
and
subb
ja
jge
mov
data16
pop
aad
inc
sub
rorl
sbb
mov
jnp
xchg
fcompl
lcall
xor
add
jnp
enter
or
add
mov
sub
inc
add
mov
jae
lods
and
inc
insl
sub
and
repnz
in
icebp
mov
jo
aas
shl
aaa
mov
adc
adc
test
in
popa
insb
dec
or
pop
mov
aad
loop
gs
add
jge
in
lret
test
xor
xchg
dec
add
pop
test
mov
push
push
iret
pop
test
fbstp
push
sbb
rorb
sbb
fstl
fsubs
and
add
pushf
mov
aam
add
dec
push
add
out
cmc
mov
dec
outsl
adc
sub
cli
imul
pop
repz
push
cmp
clc
lock
inc
das
pop
in
dec
add
xor
aad
fnsave
pushf
aas
clc
sub
mov
pop
mov
cmp
xor
mov
sbb
sbb
out
sbb
xorb
push
pop
xchg
xlat
jbe
xlat
dec
aaa
xchg
aas
inc
xor
inc
pop
iret
pusha
ret
dec
pop
push
and
idiv
in
mov
hlt
mov
test
cld
push
mov
jnp
and
loopne
ror
jg
or
clc
jmp
cmp
xchg
in
inc
mov
int3
leave
pop
jmp
or
sbb
or
push
lods
sarl
shr
inc
aaa
insl
push
jecxz
fwait
ja
pop
fistps
cmc
add
and
dec
arpl
cmp
popf
sub
and
jl
dec
pop
in
pop
xor
cmp
addb
adc
addl
add
jbe
mov
and
inc
outsl
dec
jnp
jp
sbb
arpl
icebp
cmp
fs
outsl
imul
cmc
ja
mov
sbb
mov
ljmp
int
xor
xor
je
repnz
les
rolb
mov
sub
sbb
inc
xlat
dec
rol
mov
pop
dec
fcoms
shrb
negb
lds
insl
cmc
pop
sbb
xor
xor
nop
pop
scas
imul
add
aad
sti
push
cmp
shrl
cld
dec
movsl
jecxz
movsb
test
iret
inc
aas
ret
push
orl
xchg
cmp
sti
inc
pop
fistps
jne
xchg
inc
push
incb
cmp
enter
addr16
push
pop
xor
sbbb
addr16
shll
imul
mov
push
inc
xor
jecxz
pushf
cmpsl
push
xor
or
xor
inc
dec
push
xor
sub
sbb
stos
cli
fidivrs
out
inc
jmp
mov
mov
mov
mov
pop
inc
leave
cmp
ds
imul
sub
mov
aam
shll
push
hlt
clc
jmp
push
or
jae
testb
out
into
push
jge
je
data16
loopne
add
cmpsl
dec
mov
pop
cmpb
mov
out
je
pop
out
shrl
sti
cs
fistpll
mov
push
mov
pop
pushl
pop
insb
fisubl
fstpt
mov
rolb
sbb
sbb
mov
test
loope
xchg
jb
cvtps2pd
ja
and
mull
dec
or
sub
add
jb
mov
leave
mov
lea
xchg
jno
sbb
xchg
cmp
mov
or
pop
sbb
pop
mov
sub
adc
inc
pusha
shll
out
jl
std
push
mov
mov
sub
sub
push
fwait
jmp
push
insb
lock
shlb
mov
dec
lret
ja
in
cltd
mov
fbstp
add
jg
cmp
fisubl
or
lods
icebp
sub
push
pop
push
stos
cmp
aas
cli
adc
fdivrs
out
xor
lods
mov
adc
aaa
jle
addr16
mov
andb
sbb
xor
aam
xor
xchg
dec
jle
and
or
enter
loope
cmp
cmpsb
push
inc
fidivrs
mov
fistps
push
dec
loop
scas
flds
lret
sbbl
dec
jnp
in
xchg
cltd
adcl
ds
pop
fucomp
in
pop
dec
xchg
int
mov
add
js
inc
inc
stos
lods
rcll
int3
fists
mov
test
or
out
gs
test
sub
rorl
push
sub
sysenter
scas
gs
ficompl
dec
add
cs
or
scas
push
sahf
pop
leave
popa
add
insb
test
xlat
add
call
cmc
mov
dec
xor
add
lock
mov
dec
fiadds
add
adc
xor
fsubrs
decb
icebp
jne
and
mov
dec
push
sub
aas
hlt
mov
push
jl
xor
xchg
mov
jg
les
hlt
stos
cmp
imul
inc
daa
aas
jne
cmp
and
jae
aaa
mov
push
xor
dec
fmulp
and
popa
inc
pop
adc
xchg
movsb
mov
pop
jg
or
into
aaa
jecxz
stos
fwait
enter
adc
pop
in
movsb
daa
insb
push
cmpsl
ret
fdivrl
ret
add
push
int
movq
or
inc
lods
fs
cwtl
mov
aam
cmc
cmp
adc
rcl
xor
push
fcompl
mov
shll
sub
lods
sub
dec
pop
sarl
aas
enter
xor
fdivrl
pandn
les
lret
mov
jae
push
scas
aas
pop
pop
mov
inc
inc
divb
dec
incb
mov
ret
adc
inc
ljmp
rcr
sbb
sarl
shrb
or
sub
scas
pop
loope
das
jg
ss
mov
fstpl
call
in
shl
gs
jne
mov
jg
pusha
inc
mov
gs
xchg
lods
test
dec
cmp
and
adc
adc
jmp
cli
cmp
daa
dec
ja
jb
mov
jl
xor
es
mov
push
cmp
inc
xor
fucomi
roll
iret
adc
xchg
int3
inc
aaa
lock
add
jne
fxch
ja
mov
movsl
mov
mov
and
pop
arpl
cvtps2pi
arpl
test
dec
ficomps
enter
fadds
or
mov
cli
outsb
sub
jge
xchg
test
and
mov
sbb
popa
insb
xchg
mov
push
inc
push
shlb
idivb
insb
stc
xchg
push
dec
inc
icebp
insl
cmp
and
adc
xchg
cmpsl
mov
mov
push
dec
mov
sbb
bound
jg
sbb
pushf
inc
aaa
or
mov
pop
pop
jg
pop
call
inc
fildl
inc
sub
or
insl
pop
les
fidivrs
movsb
mov
lods
mov
out
dec
cwtl
stos
popf
shrl
adc
mov
es
push
out
call
adc
sub
sub
push
push
lock
mull
inc
xor
add
loop
pop
mov
out
bnd
cld
push
gs
sbb
fwait
adc
lds
add
jp
nop
inc
ja
repz
mov
pusha
pop
sti
jno
sahf
xchg
mov
insl
mov
div
mov
repnz
push
ror
push
adc
fisttpll
jle
mov
lock
js
xor
or
rorb
enter
cmp
pusha
fdiv
into
mov
ficoms
rolb
mov
lea
push
adc
imul
mov
testb
lahf
or
stc
xchg
cld
jl
cli
push
pop
jnp
adc
xchg
inc
mov
pop
test
pop
shlb
dec
or
or
adc
lock
adc
inc
cmp
dec
push
je
xchg
gs
lods
sbb
mov
mov
adc
sub
and
xor
out
and
inc
loop
mov
icebp
push
sbb
sub
stos
inc
jl
pop
cmpsl
sahf
insb
mov
sub
push
xchg
pop
shrl
cltd
std
or
xchg
adc
jns
inc
loope
out
fs
mov
push
fwait
adc
mov
sub
cmc
pop
fisttps
mov
pop
adc
outsb
add
adc
push
js
lock
jge
cmpsl
aas
mov
mov
jb
stc
clc
std
pusha
jge
add
sub
dec
pop
mov
lcall
mov
push
aaa
call
imul
cmp
or
sti
push
aaa
inc
cli
addr16
iret
ret
movsl
data16
in
in
jns
gs
jbe
lahf
icebp
popf
xchg
and
add
mov
aam
pop
fst
dec
pusha
add
xor
mov
popf
arpl
popa
mov
sub
test
xchg
cmpsl
push
std
jecxz
es
mov
cmp
xor
outsl
mov
push
std
movsl
movsl
push
test
lcall
repz
dec
add
and
lcall
mov
mov
test
in
sahf
xchg
scas
pop
das
and
sub
pop
adc
pop
mov
aad
sbb
or
cmp
pop
fidivrl
inc
movsb
pop
push
dec
inc
push
popa
sbb
pop
adc
push
je
sarl
ret
cmp
sub
cwtl
push
cmpsl
add
imul
xchg
mov
loope
xor
xorb
bound
jl
inc
push
jp
jb
lods
stos
sti
ret
jne
nop
mov
out
mov
sti
push
and
lcall
mov
call
out
fnsave
jo,pn
out
push
dec
push
mov
add
push
and
cltd
or
and
and
shrb
dec
adc
adc
mov
out
jae
dec
sub
daa
mov
jg
cmp
or
xchg
leave
dec
xor
pop
lock
in
les
pop
leave
dec
ret
ds
mov
test
and
ds
ret
icebp
adc
call
cmc
ja
mov
inc
mov
faddl
arpl
fstpt
scas
inc
or
lahf
in
mov
jmp
mov
mov
push
fmull
or
sysexit
jle
sbb
dec
mov
adc
cmc
xor
xchg
stc
adc
mov
mov
cmpsb
lods
enter
mov
mov
lods
push
daa
jl
ja
mov
fildl
call
rcr
push
push
xor
mov
mov
xchg
dec
int
imul
xlat
fucom
jnp
or
cld
pop
test
out
mov
add
pop
dec
jecxz
mov
cmp
pop
jb
pop
ds
hlt
fildll
subl
aaa
outsl
ds
pop
out
push
push
es
xor
mov
stc
sub
nop
inc
enter
xor
jnp
inc
mov
ret
push
sub
jle
or
ss
push
pushf
fwait
loop
push
push
orl
js
int3
imul
mov
testb
jns
out
adc
sahf
addr16
jp
jns
insb
fnsave
sub
ja
nop
push
adc
lret
inc
adc
mov
int
adc
pushl
movsb
pop
lds
jmp
je
push
cld
xor
sbb
lods
inc
lret
mov
pop
xor
nop
sbb
mov
jno
rcr
xchg
pusha
scas
add
and
dec
cmp
ds
add
adcl
jmp
out
push
add
cmpsb
stos
inc
vmptrst
xor
mov
dec
popf
fisubs
fcmovbe
sbb
adcl
data16
jmp
jl
iret
lds
xchg
aad
adc
xchg
push
aas
push
push
ja
clc
fildll
add
outsl
push
or
in
arpl
cld
and
shll
xor
imull
mov
mov
mov
out
jl
xchg
adc
and
mov
cs
push
sbb
jg
mov
cmpsb
mov
aaa
cli
push
adc
shlb
sub
xchg
inc
ljmp
popa
cltd
xchg
mov
sbb
mov
add
push
scas
mov
ret
repz
inc
sbb
mov
test
repz
aas
gs
fwait
jb
xchg
xchg
dec
mov
xchg
jge
stos
cmp
js
sub
push
out
mov
rcrl
jo
aaa
pop
jnp
add
fstpt
nop
dec
cld
jg
nop
popl
sti
inc
mov
sbb
cmpsb
lock
ficoml
test
out
xlat
das
pop
cltd
mov
hlt
sti
push
lods
xchg
in
aam
out
and
rcrb
lahf
pop
imul
shrb
inc
call
addb
push
cltd
xlat
das
daa
inc
fcoml
mov
cmpsl
frstor
mov
sub
push
adcl
push
inc
sbb
lret
int
in
icebp
jp
inc
pop
jl
xlat
lret
inc
jnp
mov
adc
adc
inc
sub
inc
jmp
icebp
adc
dec
push
movsb
mov
mov
jnp
push
pop
imul
ja
mov
jle
inc
hlt
mov
push
dec
jmp
scas
movsb
xor
pop
mov
aaa
add
mov
xor
insl
je
mov
outsb
in
sub
xchg
jl
in
mov
jl
xchg
stos
mov
cmp
mov
loopne
ret
fcoms
in
push
andb
jo
pop
lock
repz
xlat
xchg
out
inc
lret
dec
xor
lea
push
in
shlb
lds
jo
int3
das
inc
out
push
adcl
mov
cmp
cmpsl
test
js
mov
repnz
pop
pop
in
lcall
insb
push
jle
lds
xor
imul
sbb
push
or
mov
sub
cmp
pop
pop
loope
mov
push
pop
and
jae
jl
in
xor
pop
int3
mov
int3
sbb
jo
lret
add
incl
icebp
xchg
add
lods
jge
std
mov
and
movsl
fcomps
dec
sbb
stos
movsl
pop
cmp
mov
mov
push
jp
test
dec
xchg
hlt
lcall
sahf
pop
push
xor
loopne
push
mov
jp
mov
pop
xchg
cwtl
negb
fstl
push
or
mov
mov
sbb
and
cwtl
push
int3
inc
int3
xor
sub
mov
xchg
mov
out
adc
mov
or
lods
lret
test
and
dec
lahf
xor
les
jge
data16
xor
test
je
sub
push
roll
adc
mov
add
icebp
push
fisubl
and
and
lret
mov
jl
push
dec
popf
outsb
mov
shrl
aad
dec
inc
enter
xchg
pusha
lret
push
inc
add
jbe
cli
jle
pop
in
push
into
cltd
cmpsl
xor
es
xchg
sub
jge
outsl
and
and
and
mov
inc
dec
lds
js
lods
mov
lods
push
in
movsb
push
xchg
orb
int3
xchg
or
out
mov
and
in
sub
pop
pusha
mov
shlb
cmp
cmpsb
add
add
pop
fildll
mov
jbe
mov
sarl
jl
scas
mov
repz
mov
or
mov
pop
mov
jne
pop
or
mov
fcomp
cmc
out
addb
decl
mov
adc
xchg
imul
or
cmpsl
fwait
inc
adc
jnp
sahf
mov
test
fdivs
sbbb
clc
push
mov
faddl
mov
add
or
roll
icebp
mov
sahf
test
mov
pushf
leave
mov
sbb
das
pop
leave
call
cwtl
sbb
mov
mov
mov
in
lods
sahf
rcr
push
sti
adc
cmp
add
jg
add
pop
lock
pop
sbb
int3
es
jecxz
pop
push
fiaddl
xor
jmp
pop
das
sarl
movsl
cmpsb
outsl
jge
add
jmp
xor
cmp
adc
test
pop
aad
stos
push
adc
cltd
or
cltd
aad
sbb
pop
pop
and
fdivp
cltd
and
mov
vandnpd
cmpsb
push
xchg
stos
mov
push
out
clc
xchg
mov
pushf
mov
ficoms
aad
xor
outsb
divb
or
push
push
in
xchg
sub
mov
fidivs
daa
xor
lahf
jo
scas
push
movsb
fisttpll
add
add
js
add
sahf
in
lock
sub
negb
sbb
lret
sub
jno
dec
lods
lahf
pop
in
pop
mov
sbbl
shll
jae
mov
cli
mov
xchg
inc
mov
mov
cmp
mov
jne
lret
cwtl
fcoms
xlat
loopne
sub
push
arpl
cmpsb
mov
pop
stos
lods
fwait
mov
leave
jbe
ss
out
rolw
aaa
gs
rclb
std
jne
mov
in
push
push
outsl
test
dec
movl
mov
xor
repnz
adc
and
jmp
imul
push
mov
mov
mov
fsubrl
mov
repz
xor
dec
mov
pop
in
andl
mov
loop
add
fwait
shll
add
cmp
sti
push
mov
fs
nop
mov
sub
cmp
mov
int3
lds
mov
scas
out
xorl
in
xchg
ret
push
dec
adc
pop
xlat
add
imul
jecxz
xlat
inc
fs
in
mov
repnz
add
ret
outsl
imul
fisttpl
pop
jge
and
cmc
cmp
lret
and
adc
inc
push
ret
cli
rorl
push
lock
or
and
cwtl
mov
stos
psubsb
jmp
ret
adc
out
repz
mov
inc
pushf
test
aam
xor
mov
push
xor
adc
cmp
or
mov
jne
test
imul
lret
cmova
in
cmpsl
test
adc
lock
mov
sub
sbb
xor
sbb
cli
and
xchg
lds
aam
out
cwtl
sub
rcll
or
enter
inc
xlat
cmp
js
fists
add
test
and
fidivrs
sbb
adcb
nop
inc
xchg
pop
and
lock
push
push
pop
fdivs
insb
gs
mov
xor
pop
lret
scas
xchg
push
mov
cmpsb
insl
outsb
xor
pop
and
xor
dec
mov
add
arpl
push
adc
jp
test
imul
inc
fiaddl
jbe
mov
or
and
aad
cmp
and
rcrb
fstpl
icebp
xchg
inc
imul
test
in
movsl
lret
mov
mov
xor
mov
in
push
std
mov
data16
or
lret
mov
push
mov
pop
cmp
inc
lods
fwait
repz
mov
push
jb
rorb
fldt
fldcw
push
adc
xor
jg
jg
insl
push
mov
mov
mov
lea
cld
add
lds
fwait
arpl
stos
sbb
inc
enter
mov
dec
imul
hlt
add
push
jg
insb
es
mov
or
push
xor
mov
mov
aaa
push
test
dec
outsb
jne
pushf
mov
fstps
pop
lock
lcall
xchg
fistpl
sbb
ds
inc
ret
je
fucom
gs
inc
fbld
stos
mov
dec
icebp
adc
jb
nop
loop
lea
jl
movsb
stos
loopne
or
lret
scas
mov
mov
pop
xor
mov
push
pop
mov
cmp
xor
repnz
and
cmp
push
cmp
mov
je
sar
lods
dec
xor
das
pop
pop
inc
cwtl
pop
sub
ja
mov
jg
stc
arpl
lds
pop
fldcw
test
dec
mov
jo
mov
stos
add
add
xchg
movsb
fisubrs
mov
mov
shrb
mov
stos
adc
cmc
pop
mov
add
mov
loopne
decb
daa
test
mov
fnstenv
out
pop
pop
jns
test
jbe
push
lcall
mov
loopne
ss
xchg
hlt
dec
dec
cs
sti
sbb
mov
dec
xchg
sahf
repnz
insb
fists
add
jmp
xor
pop
adc
lods
ds
notl
sbb
clc
fistpl
daa
mov
dec
outsb
mov
lret
fidivs
pop
sahf
add
sub
push
or
sbb
xor
inc
clc
stc
cmp
adcb
mov
dec
add
cli
test
and
pop
cltd
jecxz
lea
sbb
lahf
and
sti
stc
mov
mov
ja
arpl
xchg
mov
loopne
cmpsl
inc
jnp
xor
jmp
xorb
lcall
and
mov
push
rcrb
iret
fucomip
or
xor
dec
mov
aam
inc
incl
dec
jp
repnz
fcmovnu
and
adc
or
or
push
adc
sar
jnp
mov
jns
cwtl
mov
push
jle
mov
adc
sbb
mov
inc
pop
push
xchg
jmp
pop
adc
mov
add
cli
mov
sub
loope
mov
inc
stos
or
ss
pop
sub
fdivr
push
xchg
jbe
int
jecxz
pop
lcall
or
xchg
repz
stos
hlt
cmp
xor
xorl
insb
dec
xchg
roll
stc
cmc
out
adc
imul
sub
mov
stos
and
pop
sub
das
jecxz
xchg
and
lret
loop
shll
add
or
jecxz
aas
pop
rolb
dec
imul
jle
dec
xchg
pop
lods
jne
imul
and
mov
test
pop
xor
lret
push
or
inc
loope
in
mov
sti
or
fwait
add
add
out
xchg
xor
cld
push
les
jecxz
into
push
push
inc
icebp
das
iret
in
mov
lahf
das
push
push
inc
test
push
lods
clc
push
stos
xchg
test
dec
pop
loop
movb
mov
mov
aad
notl
sbb
jb
and
push
jne
xchg
and
dec
xlat
lds
cmpsb
xchg
inc
out
nop
loop
adc
and
push
jle
addr16
aaa
jae
data16
jle
bound
sti
mov
in
bound
inc
ss
ja
inc
shl
xchg
push
aas
xor
inc
mov
add
add
lods
cs
cmp
dec
add
mov
outsl
arpl
int
or
xchg
cmpl
xchg
out
repnz
rcr
or
das
dec
cli
mov
fld
or
jnp
lcall
arpl
jecxz
stos
ss
dec
out
xor
imul
js
pusha
mov
cwtl
andl
jmp
mov
mov
fistl
bnd
shrb
int
popf
sbb
xor
pop
or
push
test
aam
neg
outsb
xor
cmp
xchg
lahf
int3
adc
mov
cmp
pop
push
mov
mov
ret
lods
outsl
hlt
push
in
in
enter
xchg
iret
mov
xchg
xchg
test
out
sbb
enter
mov
pusha
nop
cmp
ljmp
sbb
sbb
or
enter
sarb
pop
mov
cld
popf
xchg
sti
adc
pop
ret
cmpsl
dec
mov
add
inc
popa
ficoms
sbb
and
push
jecxz
cmp
cmpsb
inc
xchg
push
xor
mov
cmp
push
imul
sbb
call
rol
xchg
xchg
jb
lret
xor
in
sub
cmp
repz
inc
aad
xchg
and
mov
not
movsl
std
pop
xchg
lcall
mov
mov
mov
jne
pop
movsb
cltd
test
loopne
jle
fucomi
inc
xchg
inc
repnz
mov
cmp
popa
inc
add
or
imul
pop
xchg
scas
fidivs
popa
mov
adc
lods
push
out
xor
mov
xchg
xchg
sbb
dec
out
imul
dec
movups
mov
pop
pop
cltd
sbb
sub
mov
les
mov
adcl
addb
mov
or
test
jp
cmp
cmp
stos
pop
mov
push
stos
shrl
xchg
sbb
push
call
xor
je
xor
lret
or
pop
mov
pop
cmp
mov
jecxz
dec
pop
out
rorl
push
sbb
sti
sub
add
cltd
sti
into
loop
gs
lcall
outsl
pop
movsl
shr
pop
cmp
mov
xor
int
in
aad
add
dec
pop
lds
inc
loop
jge
mov
xchg
aaa
jecxz
cs
fmull
popa
fsubs
mov
mov
negb
xor
jmp
dec
roll
pop
out
jns
push
stos
es
mov
outsl
iret
ret
adc
mov
fsubr
jne
dec
arpl
push
mov
ret
stos
sbb
jnp
and
sahf
mov
test
mov
cmovs
cli
out
es
mov
sub
sub
mov
fs
das
data16
loopne
arpl
das
jo
xchg
or
lret
pop
test
adc
mov
cli
push
push
xchg
pop
popa
dec
imul
mov
mov
loopne
mov
and
arpl
push
xchg
gs
push
mov
mov
out
push
or
add
push
daa
adc
mov
sbb
xchg
fwait
out
push
in
mov
add
push
out
sbb
stc
jge
sbb
in
pop
pop
sarb
xor
rcll
lock
dec
roll
int3
lret
popa
mov
test
lods
or
cmp
add
loope
or
push
fwait
gs
stos
loope
xchg
int
adc
mov
inc
dec
adc
ja
jmp
xchg
arpl
sbb
or
lock
dec
imul
mov
rol
jecxz
call
pop
pop
inc
or
hlt
cld
in
mov
ds
and
pushf
sbb
or
pop
dec
gs
pop
pop
in
stc
repnz
jecxz
jg
cmpsl
push
gs
icebp
fidivs
gs
ret
mov
sbb
mov
adc
inc
pop
gs
loop
pop
or
xor
sarb
dec
and
push
shlb
bound
in
push
cmp
pop
popf
mov
inc
add
or
rclb
add
lahf
stc
fs
hlt
lods
pop
loop
mov
insb
test
pop
test
cmp
mov
les
cmp
push
mov
lret
mov
data16
xchg
clc
std
adc
int
jbe
push
in
adc
xor
jl
loope
mov
aaa
fcmovbe
inc
cld
in
adc
cmpsl
or
pushf
xchg
aam
pop
fistpll
xchg
dec
icebp
push
stos
sub
ret
stos
popa
adc
xor
jl
xchg
inc
insb
jp
and
cmc
rclb
jno
sar
imul
mov
cmp
sub
divl
jecxz
add
lcall
iret
icebp
cmpsl
fsubrp
mov
push
fcomps
cltd
xchg
pop
lahf
jmp
and
jecxz
and
out
jbe
add
aaa
inc
or
pop
es
cmp
inc
mulb
mov
and
lret
mov
jg
hlt
jne
inc
aaa
dec
in
sbb
out
out
jl
mov
jp
dec
pushf
pop
mov
ss
pop
rcrl
aaa
int
test
enterw
popf
js
mov
jge
mov
xor
jmp
imul
loope
inc
fidivl
shll
out
mov
mov
add
hlt
and
xchg
xchg
fs
test
xchg
imulb
loopne
xchg
lods
das
fildl
arpl
cmp
mov
enter
cld
incl
pop
jae
push
cli
fstl
sbb
test
enter
ret
cmp
orb
pop
add
push
daa
cs
jle
dec
je
jmp
mov
iret
movhlps
push
out
inc
mov
loopne
imul
ds
jle
cmp
enter
inc
fistps
mov
pop
enter
aad
in
js
sub
addr16
cmp
mov
sahf
inc
pop
fsub
xchg
in
mov
out
mov
outsl
dec
fstpt
out
lods
clc
movb
mov
hlt
xchg
hlt
jmp
in
out
xchg
mov
jmp
popa
lock
xor
xor
cltd
in
mov
adc
xchg
jns
popf
sub
nop
pop
out
pop
jo
lret
scas
mov
jo
fwait
int
pop
cltd
popa
cli
and
cmpsb
sahf
add
fiaddl
les
cmp
fsubrl
sti
push
push
testl
lcall
inc
insb
subl
cmp
mov
test
pop
cs
lcall
test
out
dec
push
and
dec
jo
cwtl
int3
mov
mov
mov
mov
xchg
sarl
xchg
jecxz
jmp
popa
in
daa
jp
jo
in
cmp
enter
repz
lcall
roll
or
mov
leave
aam
add
xor
pop
ret
outsb
push
pop
sbb
push
loope
mov
xchg
or
mov
outsb
mov
insb
or
push
std
ror
lea
fs
call
jb
mov
push
lods
movsb
xor
or
dec
aaa
jmp
sub
repz
dec
xor
cmp
dec
pop
or
int
into
imul
xor
cmp
mov
fiadds
fistps
push
fidivl
test
shlb
das
cmp
cmp
jno
jae
or
lahf
mov
add
dec
in
repz
mov
outsb
lds
jg
in
mov
or
ss
push
or
adc
push
pop
jp
jl
lods
sub
out
insb
push
call
aad
stos
jle
dec
addr16
popf
sbb
mov
test
jnp
jg
ficompl
push
aam
mov
aas
stc
pop
sbb
arpl
pop
clc
mov
xchg
test
push
adc
mov
jecxz
fildl
sbb
mov
sbb
js
cmp
aas
scas
add
insl
daa
push
sbb
jle
add
shlb
stos
xchg
or
push
or
pop
push
xor
int
sahf
stos
or
scas
add
fmul
fstl
faddl
ss
inc
pop
jae
mov
std
aad
lods
daa
or
cld
jae
ds
jo
or
adcl
xchg
imul
xlat
jg
aam
int
loop
out
hlt
pop
je
out
cltd
sbb
enter
dec
pop
loop
push
mov
mov
insl
dec
das
cs
cmpb
jne
rol
fldenv
sub
dec
push
pop
push
mov
push
cli
add
iret
fstpt
add
fwait
repz
sbb
sbb
test
enter
out
add
sub
and
mov
lods
dec
test
fs
lcall
xchg
iret
pop
pusha
and
dec
cmp
adc
pop
bound
sub
mull
stos
mov
mov
psrlq
std
int3
push
lea
jb
sub
out
xor
jno
jo
push
sbb
dec
push
xlat
lods
xchg
cmp
jne
push
fmull
cmc
fldt
stos
lret
mov
mov
fisubrl
lahf
xchg
bound
lret
neg
stc
xor
popa
xor
call
stc
jns
fidivrs
pop
out
ljmp
out
frstor
jl
adc
pop
popf
adc
cmpb
in
out
jmp
repnz
pop
scas
adc
xor
fidivrs
and
push
cwtl
mov
movsl
inc
mov
xchg
xor
test
adc
loope
stos
mov
push
adc
adc
mov
jl
adc
sti
pop
pusha
pop
adc
stos
enter
dec
add
inc
push
sub
push
cld
inc
jno
setbe
shlb
mov
mov
dec
fwait
xorb
adc
dec
or
jecxz
or
or
sarb
data16
loope
pop
in
cwtl
sbb
add
and
xchg
rcll
mov
xchg
mov
rol
or
xchg
ss
xor
mov
pop
aam
sbb
lods
jb
outsb
sub
les
pop
outsl
xor
and
cmp
xchg
not
movsl
cmpsl
shlb
sarb
jmp
out
mov
std
mov
or
mov
es
stos
pushf
outsb
sbb
or
mov
pop
in
les
cmp
dec
jo
in
lods
inc
mov
call
icebp
mov
or
cmp
gs
jl
int
ret
inc
es
cs
push
xchg
leave
movsb
aaa
mov
xchg
scas
shl
jns
jmp
cmp
sub
add
adc
or
push
push
inc
mov
push
outsb
xchg
adc
push
cmc
pop
out
ficomps
mov
mov
add
aad
or
sbb
pop
dec
jmp
repnz
subb
lret
js
mov
xchg
mov
adc
xchg
or
aaa
dec
movsb
xchg
push
inc
xor
jns
cmpsl
int
sub
xor
ss
mov
push
outsb
jne
add
inc
cld
scas
jmp
popa
mov
add
adc
sbb
pop
cli
in
movsl
ret
decl
mov
lcall
adc
fcmovnb
test
jae
rorb
or
sbb
iret
lret
es
je
adc
out
fnstsw
jge
incl
movsb
or
cs
inc
mov
stc
cmp
add
sub
xor
xchg
cmc
push
pushl
adc
mov
mov
mov
sub
push
fcomi
xor
cld
aad
mov
adc
and
mov
lock
xor
movsb
testl
out
lods
ds
cmp
mov
lds
lods
xor
xor
pop
cmp
loope
jle
daa
cmp
sub
fcoml
out
sbb
loope
out
xor
fists
mov
outsl
and
out
rcl
call
sbb
push
jno
fdivrl
insl
rcll
and
int3
out
mov
mov
pop
ss
rclb
add
and
iret
push
rcll
lret
scas
mov
sbbl
sbb
mov
jmp
or
inc
out
fcmovbe
fwait
outsb
fnstcw
pop
mov
jbe
sub
sub
xor
sbb
sub
or
mov
pop
out
out
pop
cmp
mov
add
xor
ret
dec
sbb
jns
jae
dec
ja
dec
das
mov
mov
jge
xchg
xlat
subb
dec
inc
stos
push
push
pop
data16
sahf
out
mov
jp
leave
js
or
rorb
push
data16
and
cmp
sti
cmp
pop
mov
pop
mov
into
loop
dec
ds
and
out
jo
fwait
or
sti
push
xlat
outsb
xchg
or
cmpsl
into
inc
dec
push
mov
ret
sub
subl
jp
xchg
fdiv
jno
and
fldcw
xchg
xchg
dec
push
orl
pop
xor
cmpsl
fldenv
pop
mov
leave
fs
mov
insl
int
setbe
and
push
sub
xchg
repnz
das
loop
stos
mov
xchg
mov
lret
dec
addr16
in
push
jmp
fistps
out
jle
add
pop
xchg
push
lahf
adc
movsb
jns
adc
or
sbb
cmp
leave
dec
rcrl
sub
push
dec
out
mov
dec
xchg
adc
nop
out
cmpsl
addr16
hlt
mov
imul
xor
out
push
out
xchg
sbb
sub
jno
insb
or
fwait
outsl
lea
gs
loop
imul
rorb
fdivrl
cmp
movsl
mov
xchg
mov
test
inc
dec
jne
test
das
cmpsl
out
out
mov
cmp
sbb
movsl
aad
ds
xchg
inc
push
shll
dec
xchg
xlat
dec
cmc
out
mov
xor
shll
cltd
dec
xlat
std
loope
rorb
in
dec
adc
or
inc
mov
cld
mulb
jno
mov
sbb
das
and
sbb
jecxz
ds
aam
or
pusha
mov
push
jle
pop
dec
pusha
rcrb
sub
mov
xor
cmpsb
movups
testb
pop
shrb
loop
enter
mov
and
and
cli
mov
leave
cmp
inc
lahf
pop
pusha
add
rcrb
pop
jbe
pushl
mov
and
popf
hlt
out
jns
sbb
vcvtsi2sdl
mov
cmp
jne
mov
or
add
or
cmp
ds
pop
push
adc
loop
mov
mov
inc
cmp
call
xor
in
loope
jp
stc
daa
mov
sbb
lods
mov
popf
sti
aam
popf
add
in
jae
sub
lret
push
adc
dec
stc
arpl
add
negl
ja
and
fs
or
or
sarb
mov
in
cmpsl
lret
idivb
push
mov
pushf
push
mov
xchg
je
rcr
and
mov
mov
nop
lock
adc
ret
mov
push
xor
aad
movsl
arpl
push
out
jnp
jg
xor
adc
jecxz
in
imul
mov
ljmp
rcl
out
clc
xor
outsb
js
addr16
jb
pop
iret
and
sbb
inc
lahf
pop
notb
push
arpl
pop
pop
ss
xchg
mov
out
push
pop
call
daa
xor
jbe
out
lret
scas
cmp
fsubrs
mov
in
push
jge
dec
movl
adc
jbe
xchg
pop
add
sub
fistpl
daa
xor
pop
mov
cmpsl
js
sub
stos
jle
in
pop
sub
leave
sub
push
ljmp
stos
push
mov
mov
cmp
bound
cs
sahf
mov
inc
mov
stos
aaa
xchg
js
jge
addb
pusha
std
jo
in
sbb
in
fsubs
push
mov
fmuls
flds
popa
sbb
push
xchg
sub
test
lods
xchg
ja
into
inc
dec
mov
push
adc
push
add
mov
fistl
loopne
cmpsl
xor
fisubrl
movsb
scas
push
jne
int
xchg
gs
sarl
dec
and
sbb
cmp
sahf
cmpsl
push
dec
cld
adcl
stos
mov
fcmovbe
xor
call
jmp
fldl
or
push
imul
stos
aad
sbb
enter
outsb
scas
xchg
jbe
mov
js
imul
out
dec
stos
lahf
cmpsb
clc
fldenv
sub
inc
jbe
sahf
inc
and
cmp
inc
mov
sub
imul
xor
shll
shl
or
fs
pop
xchg
pop
mov
insb
sub
sbb
mov
movsb
jae
cmp
mov
outsl
cmp
push
ret
scas
ret
bound
push
mov
sub
mov
orl
ret
inc
jecxz
pop
lret
int3
sub
dec
pop
mov
jo
cmp
inc
jae
jl
mov
test
cltd
hlt
mov
or
sahf
xor
pop
xchg
jp
mov
xor
xchg
lds
jecxz
test
rorl
int
lcall
mov
cmpsl
dec
ljmp
push
mov
flds
pop
enter
fisubs
test
xor
xor
cwtl
mov
push
mov
sub
mov
inc
sbb
rcrl
icebp
lret
pop
in
add
ljmp
stos
push
cld
cmpsl
jne
cmp
adc
mov
jl
mov
dec
aas
cld
push
sbb
jge
mov
fldcw
cmp
xchg
mov
test
mov
je
and
adc
daa
adc
aas
push
pop
jecxz
dec
pop
add
or
fistpll
scas
rcrl
out
jg
enter
ret
rcll
push
decb
int3
iret
jp
inc
xchg
nop
ficoms
faddl
and
imul
imul
bound
xchg
lcall
daa
jns
idivb
xor
xchg
out
xchg
rorb
xchg
push
mov
mov
push
loope
fistpll
fildl
cmp
cld
sbb
push
rolb
sub
lret
push
sub
aad
mov
dec
mov
sbb
dec
sub
sub
mov
pmulhuw
push
xchg
mov
adc
sbb
push
iret
test
movups
jle
ss
adc
mov
pop
mov
push
sub
ret
gs
je
popf
push
out
xchg
jg
and
es
push
popa
push
sub
xchg
nop
push
mov
mov
jb
insl
dec
js
fldenv
jbe
bound
push
push
dec
jmp
or
jo
mov
call
imul
and
loope
scas
aad
cwtl
leave
pop
pushf
xor
es
idivl
xor
adc
outsb
dec
std
aad
lcall
or
dec
negl
push
decb
fsubs
push
cld
sub
pop
mov
icebp
inc
int3
cltd
or
dec
fildll
inc
and
jge
mov
adc
repnz
push
movsb
sbb
ljmp
mov
dec
push
lea
shrb
cmc
xchg
mov
adc
shrb
push
aam
jb
orl
cwtl
insl
xor
shlb
push
je
adc
imul
mov
jne
ja
xchg
daa
mov
daa
xchg
mulb
outsl
pop
dec
sbbl
mov
push
sub
jae
pop
adc
shlb
mov
inc
cmp
sub
inc
sub
in
inc
mov
mov
cmpsl
int
add
adc
or
imul
xchg
icebp
xchg
mov
fsetpm(287
out
adc
cmp
pop
dec
jle
mov
dec
test
xchg
jnp
sub
xchg
sbb
pop
lods
sbb
popf
mov
mov
push
loopne
cmp
rolb
inc
cmp
mov
cs
add
cltd
shrl
or
std
movsl
lret
mov
scas
xchg
call
push
movsl
popf
xor
fsubs
jge
sub
cmc
repnz
sub
mov
movsl
pop
or
es
stc
int3
ja
dec
mov
movups
out
jne
xchg
data16
je
adc
inc
decb
pop
scas
jb
xchg
jns
cld
iret
sbb
ds
push
lahf
sarl
sbb
cmpsl
or
inc
xor
insb
daa
and
xor
sub
dec
jns
xor
cmp
pop
push
adcl
repnz
xchg
or
lcall
or
shrl
and
jns
adc
pop
pop
movsl
adc
lret
inc
in
testb
mov
adc
fwait
jg
adc
outsl
mov
cld
test
adc
ja
inc
inc
and
pop
pop
cmc
aad
jp
pushf
ficoml
add
insl
test
lret
shl
mov
pshufw
mov
cwtl
adc
stos
adc
mov
pop
mov
mov
add
dec
cwtl
ret
xchg
sub
es
ret
fdivl
fs
imul
test
and
lods
shll
scas
adc
jbe
xchg
xchg
jno
leave
inc
mov
add
mov
in
std
xchg
loopne
add
bound
cmpsb
or
mov
stc
mov
cmp
pop
xor
dec
adc
mov
andl
mov
sub
lret
mov
or
cmp
fnstenv
push
xchg
xchg
out
jnp
ljmp
sbb
lahf
dec
hlt
fisttpll
xor
loop
stc
mov
js
mov
in
pop
nop
fldt
flds
jno
xchg
lahf
push
leave
das
xrelease
rorb
sbb
push
xor
xchg
mov
out
inc
ret
lahf
sbbl
jae
xor
push
pusha
dec
dec
mov
gs
sbb
stc
push
pop
lcall
add
cs
push
fisttpl
addl
mov
fbld
fsubl
and
out
adc
data16
push
xchg
cmp
dec
in
and
mov
dec
cwtl
in
in
in
xchg
push
movsl
pop
push
scas
sbb
lods
imul
or
loopne
scas
mov
lahf
repz
ds
or
dec
mov
xchg
cmp
stc
test
rolb
adc
jae
inc
dec
stos
mov
inc
cmc
mov
adc
jno
sub
push
imul
jle
lods
icebp
inc
sbb
mov
push
mov
daa
inc
pop
das
dec
cltd
cmpsb
dec
out
jne
pop
js
xchg
xchg
popf
shll
fisttpl
test
jp
stos
divb
cs
lret
lds
xchg
nop
sbb
dec
and
pop
xor
adc
out
lahf
and
jno
cmpl
pop
call
insl
ret
add
pop
cmpsl
mov
les
push
mov
push
iret
pop
mov
in
mov
xchg
cmpsl
das
adc
mov
rcrl
or
pop
out
jle
adc
ret
mov
das
pop
add
sbb
pop
stos
inc
mov
mov
mov
xor
bound
xchg
mov
les
loop
jle
mov
pop
fs
push
test
mov
cmp
push
stos
mov
dec
xor
sbb
cld
insb
scas
rclb
adc
dec
nop
repnz
mov
rcll
and
jg
in
rdmsr
fiaddl
mov
lahf
push
pop
jae
dec
stos
lods
push
push
lret
pop
testb
mov
lods
mov
cli
pop
ret
push
sahf
fs
mov
or
cli
jo
movsl
hlt
push
sub
fsts
mov
sbb
gs
inc
push
xchg
icebp
lods
outsb
inc
out
jbe
into
mov
inc
sti
insb
lods
out
pop
dec
dec
iret
push
rclb
outsb
inc
pop
mov
in
scas
cmp
mov
lock
fcomps
push
mov
aas
sahf
add
bound
into
out
and
stos
xchg
nop
repnz
inc
mov
mov
add
mov
mov
arpl
xchg
inc
dec
cld
jnp
rcr
sbb
cmp
aaa
sahf
pop
or
scas
loope
imulb
or
mov
int3
adc
cmc
mov
and
jno
adc
notb
jl
iret
popa
insb
loope
jae
mov
subb
mull
popa
loopne
mov
icebp
les
push
out
jge
das
roll
adc
xchg
mov
ret
addr16
sbb
push
fstpt
ret
cmp
inc
out
loope
push
test
xor
pop
pop
and
int
xor
arpl
adc
test
pop
xor
xor
sub
sub
js
aaa
pop
loope
jecxz
fidivrs
mov
loop
xor
ret
mov
xchg
push
test
push
and
into
nop
call
pop
mov
add
cli
outsl
add
mov
dec
push
jmp
test
push
pop
xor
cmp
ja
add
xor
mov
add
cmp
movsl
imul
ja
xchg
sti
out
push
iret
pop
adc
or
flds
push
repnz
dec
sbbl
outsl
mov
pop
pop
sbb
push
or
pusha
flds
pop
or
mov
jae
ja
mov
stc
and
push
dec
sbb
adc
lock
push
jno
mov
lcall
rolb
jbe
jnp
into
mov
mov
scas
pop
jno
enter
cmpsl
lds
out
pop
push
mov
mov
nop
andb
xchg
xrelease
sbb
xlat
and
imulb
xchg
repnz
js
and
les
mov
inc
add
jb
cltd
test
pusha
test
push
repnz
jo
mov
mov
je
lahf
inc
pop
pop
inc
insb
mov
pop
or
cmp
out
and
add
mov
aas
and
lds
mov
or
dec
rcrb
mov
fimuls
je
cmpsb
out
lods
iret
xorb
movsl
js
das
hlt
add
shr
inc
cmp
jno
fwait
out
jb
push
scas
sbb
enter
mov
test
jmp
aad
push
lret
test
frstor
in
sbbl
jnp
cli
cmc
pop
rcrb
ja
out
clc
imul
cli
add
cmc
nop
pop
mov
cmc
sbb
jmp
aad
sbb
shll
dec
jp
mov
leave
sbb
aam
int
stos
aas
sti
mov
add
mov
loop
lds
xor
mov
mov
cmc
push
scas
or
pop
stc
cmp
pop
cmp
mov
push
xchg
loop
mov
les
and
add
dec
cmpsb
add
lods
leave
inc
or
lahf
lcall
or
arpl
shl
and
sarb
mov
add
mov
xor
mov
pop
ss
inc
push
loope
fcoml
scas
mov
mov
test
cli
inc
push
cmc
lock
dec
jo,pt
cld
add
mov
leave
sbb
das
cmpsb
jae
aad
ficoms
dec
sbb
lret
sbb
pop
sbb
mov
loopne
push
int3
dec
jns
aad
jb
adc
mov
jno
pop
cmc
fwait
rcrl
call
and
cld
cs
add
movb
inc
adc
jg
in
ret
cmp
testb
mov
dec
pop
jne
sbb
iret
sbb
inc
mov
push
mov
cmpsb
mov
jmp
pop
dec
outsl
sbb
push
jno
out
add
inc
sub
fnsave
lret
mov
outsl
pop
xor
push
mov
aad
jbe
xchg
gs
inc
cmp
ret
pop
jae
mov
push
daa
fisubrl
inc
cmp
jp
mov
scas
data16
cltd
push
arpl
scas
sub
test
add
repnz
ja
leave
push
pop
rcl
out
sub
stos
pop
add
mov
inc
fdivl
pop
fbstp
mov
or
inc
gs
jecxz
sub
xchg
lds
scas
negb
aaa
inc
sarb
gs
jmp
add
sti
adc
js
pushl
mov
je
in
mov
stos
jp
xchg
stos
push
push
mov
mov
sbb
or
test
arpl
loope
into
sahf
js
mov
aas
sarb
in
clc
mov
push
das
ja
adc
xchg
into
inc
pop
jp
or
mov
imul
rorl
push
sbb
cmpsl
imul
cmpsb
sti
push
insb
xchg
dec
repz
cmp
cltd
cltd
dec
dec
pop
add
ss
pop
arpl
lock
cs
dec
mov
test
mov
push
pushf
pop
icebp
jmp
mov
sbb
jnp
stos
nop
mov
shll
mov
mov
rclb
inc
push
add
js
inc
push
mov
scas
push
cmpsb
pop
jb
lea
daa
lock
mov
or
jle
jmp
lea
cmp
jge
divb
cmc
neg
add
imul
addr16
aam
jns
inc
cmp
pop
cmp
dec
xchg
data16
arpl
fistpl
nop
mov
aas
fdivl
jg
insb
fs
cs
out
xlat
mov
test
lahf
adc
lods
xlat
push
repnz
sbb
std
mov
adc
add
adc
aam
xor
push
sbb
sahf
in
ds
cs
outsb
push
and
adc
inc
insb
movsl
in
add
pushl
jbe
xchg
mov
fstps
int
push
or
enter
fmuls
movsl
push
mov
vandps
lods
repz
enter
cmc
mov
jg
lcall
lret
mov
sbbl
cmp
sub
pop
and
lret
mov
xchg
sbb
pop
dec
sbb
nop
sti
out
xor
loopne
mov
popa
mov
in
aad
adc
imul
adc
mov
xchg
sbb
mov
push
in
aaa
jne
adc
pop
xchg
or
sbb
or
mov
clc
sub
test
jbe
sub
stos
mov
loop
jns
setl
xchg
addr16
inc
xor
mov
xchg
ret
jae
ljmp
sbb
test
mov
jp
jno
stc
sub
jns
push
in
xor
jp
cltd
jmp
mov
mov
mov
cmp
sahf
jge
dec
nop
jae
es
sbb
sub
mov
int3
push
test
mov
lods
dec
iret
fucomi
hlt
bound
mov
iret
pop
and
mov
out
cmp
mov
sub
out
int
jl
inc
inc
mov
dec
and
mov
adc
or
jp
mov
cwtl
adc
psrlq
ret
sub
je
lret
sub
add
loop
adcb
push
sub
arpl
xchg
pop
mov
sti
insl
loop
cmp
sti
cmp
push
ja
jmp
rorb
xchg
jns
fdivrl
fbld
push
push
and
jecxz
das
aad
push
icebp
cli
aad
inc
scas
gs
and
push
and
pusha
push
xchg
loopne
cs
lea
mov
jge
cmp
mov
inc
subl
or
mov
adc
fdivr
shlb
push
loope
ds
pop
das
aad
pop
or
shlb
xor
repz
dec
dec
pop
lahf
jp
xor
pop
gs
and
int3
xchg
or
or
repz
push
repz
xchg
xor
call
bound
lea
sub
and
shll
jne
enter
add
mov
add
pushl
jecxz
lahf
push
add
cmp
daa
push
or
fwait
bound
lods
dec
push
jle
shlb
mov
lock
jg
mov
or
adc
outsl
cmpsl
mov
sub
in
mov
loope
out
scas
cmp
in
mov
rorl
add
push
cli
popa
scas
frstor
nop
in
sub
dec
addr16
mov
or
shlb
mov
xor
in
into
jno
and
sahf
repz
roll
sbb
dec
mov
push
mov
adc
adc
xchg
pop
rolb
xchg
ret
movsb
mov
sti
test
sub
jbe
sahf
xor
sub
mov
mov
mov
lock
jg
inc
xchg
xchg
adc
xor
xchg
lea
dec
mulb
cmc
adc
out
inc
cli
xlat
aaa
and
pop
es
lods
sbb
ss
in
xchg
xor
push
hlt
rcrb
dec
push
lods
or
push
jb
inc
xor
mov
xchg
outsb
ror
mov
sbb
cmp
or
out
scas
sbb
add
xchg
mov
push
cmpsl
ljmp
inc
int
xlat
das
pop
mov
cmp
pop
cmpsb
stos
neg
mov
outsl
in
fidivs
das
arpl
shrl
cmpsl
mov
out
loopne
jl
scas
jmp
pop
sub
outsl
clc
and
in
rcll
aad
or
shll
out
sbb
ret
cmp
movsb
cmc
pop
dec
insl
lret
xor
fs
scas
and
sub
jmp
gs
jg
xorb
aas
rclb
mov
ret
mov
mov
enter
cwtl
lds
cmp
add
rorb
mov
movsb
xor
mov
xchg
sbbb
push
mov
cltd
outsl
inc
insl
fprem
test
and
or
aad
xchg
jns
push
sbb
or
fwait
push
or
loop
andb
and
fs
loopne
pop
dec
iret
jmp
aaa
stos
and
js
mov
cmpsl
pusha
shrl
push
jle
test
sbb
js
xor
pop
jmp
cmovns
fiadds
cltd
dec
push
jb
add
mov
xorl
es
lahf
or
xchg
out
scas
xor
xlat
ljmp
inc
jae
inc
sbb
fcoml
pop
add
mov
insb
mul
xor
add
cmpb
fcmovnb
add
xchg
mov
jecxz
decb
xor
mov
es
xchg
loope
and
lret
sub
movsl
adcb
rorb
outsl
xor
xchg
test
mov
in
sbb
out
inc
sub
mov
sbb
xchg
adc
dec
fidivrl
sub
dec
repnz
test
push
mov
jmp
cmp
sbb
push
push
mov
imul
sbb
lea
push
mov
xor
repz
stc
mul
rcr
stos
ja
or
std
inc
push
mov
jae
loop
pop
int
addr16
je
sub
iret
lea
dec
pop
insl
add
and
test
inc
add
xchg
pop
xchg
inc
jns
imul
inc
jae
fists
inc
testb
shrl
xor
mov
stc
je
xchg
scas
push
lret
adc
mov
dec
jl
shll
adcb
sbb
mov
cmp
out
and
lcall
outsl
push
dec
sbb
add
and
lods
ret
mov
mov
cmc
inc
cmpsb
lock
cmp
pop
add
mov
dec
inc
add
js
lea
dec
push
out
clc
xchg
subb
push
and
add
in
add
pop
jle
in
inc
and
fwait
je
adc
iret
cltd
xchg
out
out
sahf
pushf
mov
vfrczps
inc
xacquire
push
sub
loope
jbe
cmpsb
iret
pop
sbbb
arpl
and
cmpsl
out
sbb
add
nop
sbb
inc
pop
and
xchg
mov
adc
mov
push
int3
add
daa
push
out
pusha
cmp
fdivrl
movsl
lea
mov
dec
je
mov
ret
pop
xchg
adc
add
dec
sbb
in
jge
loop
xor
jecxz
jb
sahf
adc
cmp
ret
bound
cmp
repz
icebp
orb
in
cmp
in
repnz
push
repz
or
inc
inc
jae
sbb
or
movsl
jp
inc
jo
adc
stos
xor
stos
ds
pop
fdivs
mov
icebp
lret
aad
adc
push
mov
add
lods
jne
pop
icebp
inc
es
test
addr16
loope
adc
lods
push
mov
lods
imul
adc
loop
add
dec
inc
into
mov
lret
dec
adc
add
insl
clc
inc
ja
lahf
push
push
pop
mov
cmp
push
fidivl
sbb
pop
xchg
orl
hlt
sahf
lods
aas
repz
push
test
or
loopne
pop
jl
cmp
fiaddl
jo
fnsave
mov
mov
pusha
mov
mov
fstps
aam
mov
aas
cli
sbb
push
divb
jns
mov
jg
test
cli
out
shll
int3
data16
fs
sbb
cmp
adcb
lods
test
mov
mov
dec
rclb
insb
imul
enter
test
push
pusha
mov
pop
xchg
cs
mov
decb
lds
ret
std
xchg
push
int3
mov
clc
dec
insl
xor
add
leave
pop
lds
fnstenv
out
mov
adc
aam
andl
pop
xchg
mov
pop
mov
pop
data16
and
push
add
push
push
shrl
rorb
add
notb
arpl
adc
sub
pop
jnp
cmp
sub
mov
test
insb
adc
cmpsb
repz
sti
cmpl
repnz
fwait
ror
and
shl
adc
and
mov
mov
mov
es
pop
xchg
mov
cmp
xor
sahf
test
sub
inc
inc
je
add
in
aam
jmp
xchg
cmp
jno
xor
add
mov
es
fstpl
repnz
mov
pop
dec
pusha
ss
xchg
cltd
mov
jb
pop
repnz
add
leave
add
test
notb
pop
push
pop
mulb
loopne
scas
push
push
or
or
xchg
enter
adc
les
test
lcall
subb
dec
cmp
adc
ss
push
jne
mov
jno
mov
pop
mov
adc
fnsave
inc
fsubrp
andl
or
adc
ja
clc
inc
and
sub
fisubs
push
mov
cmp
into
xchg
popa
pop
pop
jmp
push
add
add
pushf
adc
push
xor
in
outsl
jecxz
sbb
sbb
jmp
clc
cmp
pop
cmp
daa
jno
imul
push
fstpt
mov
nop
test
stos
rolb
dec
pushf
cmp
les
sbbl
mov
fsubp
stos
pop
cli
cli
add
ljmp
mov
in
insl
loopne
lahf
pop
adc
mov
add
out
push
jae
mov
movsb
mov
sbb
repnz
push
push
sub
pop
popa
and
incl
movsl
pop
and
jnp
mov
stc
out
inc
jmp
pop
push
push
add
cmp
cmp
movsl
cld
scas
nop
std
in
test
mov
stos
insl
daa
imul
imulb
jge
loop
mov
pop
xchg
insl
xchg
call
nop
pusha
cmp
out
out
pop
jg
inc
add
inc
orl
xchg
test
testl
jae
movsb
shr
shll
or
xchg
xorl
lock
fistpll
lds
ljmp
test
mov
gs
jne
aad
mov
pop
mov
add
jno
dec
orl
pop
xor
fbld
fiadds
pop
pop
xlat
cmp
inc
shlb
in
sub
and
and
popf
notl
lret
outsl
xor
negl
stc
dec
aad
and
imul
rcll
das
cmpsb
adc
inc
mov
mov
push
test
out
int3
lcall
and
and
add
push
dec
dec
es
sub
mov
sbb
xor
aad
test
inc
mov
mov
inc
je
pop
test
icebp
inc
adc
xchg
dec
mov
push
cs
and
loope
out
call
push
stos
ljmp
xchg
in
sub
jl
or
jne
adcl
mov
cld
lods
mov
sbb
sub
or
icebp
pop
mov
and
rcrb
push
stc
into
dec
cmpb
xor
lret
sbb
add
addr16
decl
int3
xchg
test
cmc
ret
insb
out
sbb
daa
jge
insl
mov
lcall
ficompl
mov
sarb
lds
cmc
and
les
xor
pop
test
jb
shll
sarb
sub
fists
mov
mov
and
mov
fdivrp
fmuls
dec
jb
icebp
sbb
push
test
cmp
negb
xor
and
push
cld
mov
sub
fbld
dec
loop
xor
add
lahf
pushf
outsb
cltd
rcrl
and
push
popa
cld
leave
jne
add
and
jne
cmp
fwait
sub
shl
out
movsl
mov
aad
mov
pop
sub
lock
dec
xlat
cmpl
mov
cmp
enter
pop
jns
test
sub
mov
ljmp
sbb
lret
ss
shll
stos
push
dec
and
xor
mov
xchg
sub
inc
cmp
pop
xchg
clc
lcall
push
addr16
mov
push
sbb
in
pop
lea
out
stc
sub
int3
ret
jnp
sub
stos
push
and
enter
push
in
jnp
jp
xchg
sbb
and
push
ficoms
pop
je
sub
or
mov
js
adc
jge
xchg
aad
in
inc
scas
js
call
call
sub
iret
das
push
push
sbb
jo
xor
sub
add
sbb
jmp
sahf
out
push
push
jne
dec
xchg
incb
inc
aad
clc
mov
ret
xlat
fcomi
rol
xchg
xlat
cli
je
enter
aas
insl
jns
ljmp
xor
pop
loopne
imul
add
lock
xchg
repz
call
inc
imul
and
je
jecxz
xchg
mov
xor
inc
lcall
push
outsb
push
xchg
lea
jno
addr16
mov
cwtl
inc
aad
push
in
in
mov
sub
mov
jnp
fidivrs
sbb
imul
cmpsb
dec
enter
int3
pop
dec
xor
iret
mov
bound
das
std
mov
icebp
sarb
jbe
outsb
pop
lahf
cmpsb
sbb
push
cmp
push
fdiv
mov
inc
xor
jo
orl
pop
sti
rcr
jmp
add
and
and
std
xchg
repnz
cwtl
das
xor
cwtl
aaa
in
into
push
pop
imul
mov
hlt
xchg
inc
int
mov
mov
pop
or
cltd
lods
insl
fidivrl
cmp
ss
xor
cmp
lret
out
dec
push
mov
js
imul
ror
push
jb
jl
cmp
mov
rorb
das
inc
jns
insb
out
movl
sbb
xchg
adc
das
mov
adcl
daa
in
sub
xor
push
pop
test
inc
xor
addb
and
jge
lods
inc
add
cli
pop
scas
mov
pop
leave
jle
aad
rolb
inc
mov
cli
mov
mov
in
imul
inc
cmpsl
int
add
jp
out
cmp
lcall
shrb
sub
pop
lret
mov
movsb
mov
jae
mov
arpl
inc
jb
or
hlt
out
ds
pop
cli
cmpsl
inc
pop
enter
ljmp
inc
adc
arpl
out
dec
aad
adc
xor
push
ds
orb
sahf
shrl
adc
lock
into
mov
loope
fwait
dec
sbb
movsl
cmp
adc
sbb
dec
pusha
lods
scas
into
leave
push
sub
in
xor
imul
xchg
sub
imull
daa
fcomip
mov
mov
test
aam
fnstcw
mov
imul
jecxz
popf
into
mov
test
stc
pop
lods
sbb
popa
ja
and
adc
pop
pop
jnp
adcl
imul
pop
or
das
popf
sub
hlt
inc
mov
loope
outsl
push
add
inc
push
cmp
test
stos
xchg
push
scas
mov
js
inc
mov
xor
cwtl
sbb
fildll
cmp
xchg
dec
shrl
push
lcall
inc
in
sub
rclb
sub
inc
lcall
jne
mov
mov
add
mov
int3
xchg
lea
pop
stos
add
fimuls
sbb
dec
adc
jae
mov
lcall
xchg
and
jp
test
cmp
xchg
in
es
xchg
add
mov
fdivrl
in
mov
out
call
xor
enter
cli
cmpsb
je
mov
mov
scas
mov
push
lret
popl
push
cmp
dec
mov
inc
sbb
ret
and
pop
call
push
sub
xor
pop
pop
jmp
iret
pop
add
push
andb
mov
jl
int
cs
add
out
mov
add
fdivrl
push
fcompl
push
jbe
jle
sbb
fimuls
mov
add
pop
or
rcpps
sub
mov
in
sub
inc
xor
push
repnz
mov
push
int
scas
rorl
pop
dec
push
inc
aas
push
or
out
out
cwtl
fdivrl
inc
movsl
popf
shlb
push
aas
push
movsb
lds
or
aam
xchg
xor
push
mov
lods
ja
loopne
mov
sbb
sub
out
adc
push
jecxz
popf
add
push
gs
mov
xchg
fstl
sub
in
sbb
int
les
sbb
mov
inc
and
pop
or
cli
adc
mov
pop
inc
xchg
dec
repz
lret
ja
leave
mov
add
stc
fdivl
and
add
loopne
xor
dec
cmp
sbb
pop
sbb
pop
sbb
or
aad
add
bound
iret
jb
sbb
lahf
inc
ss
scas
and
fildl
imul
gs
loop
push
add
clc
adc
out
ds
repz
jp
stos
dec
lods
push
xlat
mov
aas
pop
arpl
push
or
outsb
pop
and
dec
fs
sbb
mov
out
scas
mov
adc
ret
jne
adc
add
ds
sub
and
insl
js
les
inc
mov
jp
or
pop
lods
inc
cmp
add
push
xchg
aad
xchg
psrlw
pop
lret
cmp
loope
pop
out
dec
filds
jb
inc
pushl
cmpb
or
dec
adc
pop
adc
add
andb
xchg
adc
lods
xlat
inc
mov
add
add
loopne
fdivrp
jecxz
gs
adc
jo
xor
fs
and
insl
in
ljmp
inc
push
int
daa
cltd
iret
in
sub
fisttps
dec
je
xchg
rclb
push
jbe
jp
das
and
xor
xorb
rclb
insb
push
shll
fsubrp
dec
in
jmp
inc
lcall
dec
iret
hlt
data16
push
pop
xor
out
pusha
pop
es
inc
jns
mov
inc
fwait
in
lret
scas
ljmp
mov
fsub
dec
mov
push
inc
shrl
mov
lret
inc
pop
movsl
and
push
xchg
loop
out
in
fimull
xchg
ja
push
sub
cli
mov
subl
aad
aad
xchg
push
cwtl
scas
ja
push
ret
pop
loop
dec
jmp
jns
sbb
pushf
pop
ret
mov
popa
pop
pop
adcb
cld
mov
test
ds
xor
popf
sbb
and
or
out
popf
outsb
push
adc
mov
outsb
ljmp
icebp
xlat
xchg
movb
mov
daa
jno
push
shl
and
loop
sbb
mov
rcrl
xchg
pop
int
mov
sbb
push
cwtl
xor
mov
fwait
push
push
jne
sbb
dec
xchg
pop
mov
inc
lret
pop
test
cltd
or
nop
das
jecxz
mov
js
jno
xor
ljmp
dec
mov
test
movsb
sub
inc
push
mov
add
lret
shlb
and
les
in
push
addb
faddl
enter
mov
push
lret
sahf
lret
jo
sbb
es
movsl
dec
mov
push
sbb
mov
mov
inc
into
loopne
scas
pop
push
push
xabort
movsb
sub
in
adc
aas
adc
push
cld
dec
cmp
aad
in
jl
pop
pop
or
dec
or
sbb
dec
rolb
push
jp
insl
sbb
int
mov
ja
sub
lret
jno
push
add
mov
ljmp
xchg
mov
gs
shlb
loopne
pop
adc
int3
cltd
je
pop
enter
ret
cmp
adc
mov
loope
inc
adc
jnp
xchg
cmpsl
jp
cmp
inc
mov
fwait
sub
sbb
je
mov
test
push
push
stos
outsb
cs
adc
adc
ja
idiv
roll
push
mov
push
out
ljmp
xor
stos
or
jecxz
mov
jl
mov
pusha
and
cmp
push
pop
out
jle
sub
and
aad
dec
mov
jb
push
lret
clc
mov
loope
das
scas
aas
icebp
pusha
sbb
push
mov
out
pop
sbb
fwait
pop
lret
jb
jmp
push
das
and
in
push
pop
xchg
dec
hlt
lahf
scas
lods
mov
cmc
scas
cli
lcall
or
adc
sbb
arpl
iret
mov
and
adc
es
dec
xchg
pop
popf
dec
mov
push
mov
mov
or
push
add
push
mov
jo
mov
les
or
das
push
sbb
xchg
jae
cmp
xchg
imul
inc
push
lret
mov
aam
mov
and
movsb
fxch
push
xor
fstpl
jnp
add
jo
add
jae
popl
sbb
test
cld
xorb
sarb
push
jmp
fisubs
dec
out
mov
push
sarl
imul
dec
inc
mov
sbb
lods
dec
or
hlt
mov
inc
or
push
nop
or
and
mov
adc
xor
outsb
cli
and
je
mov
xchg
pushf
cmp
movsb
cs
cld
sbb
insl
ret
mov
inc
cli
and
out
push
mov
jle
adc
into
rolb
pusha
jb
push
pop
pop
xchg
sbb
dec
mov
pop
mov
mov
movsl
sahf
cli
pop
out
dec
pop
out
pushf
mov
add
sbb
std
mov
push
in
leave
xor
push
int3
mov
fdivrl
push
lcall
je,pt
or
sbb
mov
add
dec
cld
repz
stc
dec
push
cs
or
je
loop
ds
lahf
aas
or
rolb
ds
mov
popf
test
cmp
jg
scas
pop
or
mov
adc
out
iret
mov
mov
mov
hlt
outsb
lahf
loopne
clc
loope
adc
jmp
aaa
popf
in
cmpb
rorb
ficoms
and
sub
in
repnz
push
subb
fidivs
ja
clc
dec
mov
shr
mov
in
incl
repz
popa
cs
in
bound
lods
je
jp
inc
mov
cmp
int
adc
outsl
ljmp
add
bound
pop
pop
stc
jle
jo
dec
stc
lret
cmpl
pushf
scas
out
sbb
lret
lods
lock
push
xchg
popl
pop
or
dec
add
jle
flds
mov
sbb
mov
shll
test
pop
sub
mov
xchg
jmp
in
jmp
or
adc
insb
or
shrb
lds
adc
loopne
or
lods
mov
push
xchg
aad
roll
lds
insb
in
mov
fbld
fcompl
sbb
cmp
xchg
xchg
std
dec
orl
lret
cs
pop
decb
sub
adc
and
mov
test
nop
cltd
repz
mov
addr16
movsb
push
call
fdivl
adc
mov
xor
push
pop
popf
jl
adc
add
cmpsb
jae
in
lock
int3
push
loop
push
in
jnp
inc
imul
imul
sbb
iret
mov
mov
xchg
mov
mov
sbb
leave
or
fnstsw
cmc
push
dec
repz
jb
fcmovnbe
call
fwait
pop
pop
cmp
and
cmpb
xchg
repz
scas
jecxz
mov
mov
cmp
and
mov
dec
inc
push
mov
into
pushf
adc
jns
mov
arpl
int
push
leave
popa
jno
or
pushf
mov
fnsave
jno
xchg
in
out
jns
push
inc
xchg
cltd
dec
cmp
xchg
xchg
fs
cmp
push
bnd
fsubrl
test
aaa
mov
xchg
and
xor
in
add
xor
xchg
lods
and
mov
dec
sbb
nop
cli
inc
adc
mov
and
aam
cmp
arpl
and
xchg
jnp
sbb
enter
imulb
push
adc
mov
clc
push
pop
js
movsl
push
loope
mov
ret
jae
push
mov
xor
push
dec
fsubr
ljmp
cmp
sbb
ja,pn
sysenter
inc
xlat
lahf
popl
jle
ja
mov
mov
ret
mov
lock
fcmovnb
js
lock
lods
adc
pop
or
dec
mov
add
nop
mov
inc
rclb
xchg
push
std
dec
mov
loop
repnz
testb
fdivl
insl
dec
mov
mov
in
cltd
je
sub
add
adc
push
out
sbb
cltd
dec
add
sbb
sub
sbb
cmp
xchg
inc
std
out
sbb
icebp
jmp
lahf
jns
sbb
popa
push
jmp
mov
jnp
je
jp
xchg
aas
sbbb
cmpsl
jecxz
daa
xchg
sub
negb
cli
mov
pop
icebp
imull
or
adc
adc
mull
lock
cmp
xchg
add
call
lea
inc
lcall
xchg
cwtl
cmp
mov
and
fld1
outsl
xorl
in
imull
mov
dec
sbb
push
pop
inc
dec
dec
in
sub
mov
icebp
sbb
mov
addr16
jge
or
and
jo
sti
push
fisubrl
or
andb
nopl
mov
or
sub
adc
icebp
rcll
or
es
inc
mov
sub
dec
dec
bound
int
movsl
or
sbb
push
out
push
test
xlat
xor
sbb
in
loope
or
lahf
icebp
inc
andb
mov
fldt
lock
and
xor
inc
test
ljmp
add
ss
or
je
add
xor
in
mov
int
arpl
cmpsl
inc
bound
and
aas
push
test
cmp
push
cmp
sahf
fisubrl
xchg
fistl
loope
sbb
push
loop
cltd
out
push
pop
pop
adc
jp
jb
loopne
xor
or
in
leave
xor
sahf
and
mov
sbb
push
idivb
ret
mov
mov
mov
fsubl
and
jl
fneni(8087
and
cmc
pop
pusha
lret
inc
int
cmpsl
sub
jo
jo
jp
aad
mov
mov
nop
jns
inc
mov
rol
in
xchg
movsb
jmp
lds
pop
mov
sarl
outsl
add
jg
ret
ret
pop
sbb
lcall
and
pop
insl
push
cmp
ljmp
movsl
cmpsl
inc
sub
jge
lods
cmp
cltd
jmp
inc
jno
dec
mov
sbb
pop
xchg
inc
cmp
insb
iret
aas
mov
ja
or
testb
cli
std
out
sub
mov
test
pop
scas
jne
xchg
add
and
cmp
stos
movsb
xchg
and
roll
ret
sbb
or
enter
lcall
lods
push
inc
and
adc
popa
fldt
addr16
mov
lcall
pop
int
mov
sti
or
xchg
sub
mov
nopl
dec
icebp
ret
test
jae
outsl
fidivrs
gs
lods
jb
dec
jns
incb
sbb
jb
cmp
cmp
add
or
xchg
je
sbb
cli
cld
adc
inc
mov
je
bnd
shl
push
jmp
mov
subl
dec
pop
mov
mov
adc
into
ret
and
inc
mov
negb
addr16
xchg
jb
aaa
sub
aas
cmpsl
lods
lahf
pushf
jg
adc
xchg
cmp
or
subl
pop
dec
test
mov
das
lea
mov
sbbb
stos
mov
adc
enter
adcl
faddl
mov
ljmp
xor
cld
pushf
sti
rclb
dec
jmp
shll
mov
mov
decb
sbb
hlt
fwait
jbe
addr16
pop
pop
ja
subb
rcr
in
divl
out
mov
add
loopne
mov
popl
in
dec
pop
cmp
and
pushf
fiaddl
dec
inc
inc
xor
int3
test
inc
jmp
inc
outsb
fisubs
adc
or
adc
inc
fdiv
or
adc
shl
lds
and
jg
and
or
add
ja
adc
test
outsb
push
cmp
dec
mov
test
movsb
in
pop
aaa
shl
xchg
dec
xchg
adc
xchg
push
fcmovne
jmp
pop
pop
mov
les
cwtl
pop
jmp
mov
cli
mov
test
movsl
sub
rcrl
or
xor
leave
push
mov
sbb
adc
mov
sub
in
add
stc
cwtl
ret
push
addr16
gs
cmpsb
add
xor
push
adc
dec
xor
sbb
ret
enter
jns
fucompp
lahf
and
ret
lcall
pop
js
mov
adc
sub
mov
leave
int
xchg
mov
jmp
fs
lret
pop
sub
int
test
adc
test
add
nop
add
repz
xor
pop
or
mov
jne
sub
les
outsl
outsb
xlat
xchg
es
daa
loopne
aam
cmp
mov
int3
into
push
mov
mov
xor
inc
xor
dec
fsts
imul
xchg
push
std
xor
xlat
xor
sbb
jne
add
pop
rcrl
pop
cmpsb
mov
xor
jns
mov
test
dec
stos
mov
int3
outsb
mov
sub
loop
dec
lret
jnp
nop
popa
lahf
jae
bound
in
sub
rcrl
sbbb
movsb
leave
mov
ja
pop
flds
adc
pop
adc
in
and
sub
and
mov
loop
cmp
fsubr
hlt
mulb
add
fs
enter
rorb
cld
sub
mov
shlb
dec
lea
push
cli
mov
negl
dec
push
lock
push
mov
lret
xchg
add
shr
xchg
test
or
pop
sbb
xor
mov
repz
je
fsubl
addr16
sbb
mov
sub
mov
in
loop
jae
inc
mov
xchg
jb
notb
jns
sbb
addb
fiaddl
pop
and
mov
adc
jo
xor
ljmp
ds
jg
xchg
mov
stos
lahf
adc
cli
jmp
mov
rorb
dec
outsb
mov
fwait
out
or
mov
jg
aad
add
jle
jecxz
push
mov
mov
leave
cwtl
lods
push
out
aaa
ja
int
push
push
jbe
mov
push
sbb
pop
pop
mov
lock
ja
inc
push
xor
ficoml
jge
test
pushl
xchg
jge
and
shrb
xor
insl
insb
jb
xor
cwtl
pop
pop
pop
clc
dec
push
lcall
dec
ja
lds
push
out
xchg
push
pop
xchg
lods
mov
push
push
add
cmp
dec
inc
add
lcall
lcall
jmp
cmp
jne
mov
mov
sub
mov
test
mov
and
fsubs
out
lret
dec
sahf
dec
mov
mov
xorb
neg
mov
jo
xchg
add
cmpsb
xor
mov
test
test
mov
xchg
inc
in
xor
jns
xchg
pop
lahf
xchg
mov
popf
enter
push
xchg
scas
dec
fimuls
mov
jge
insl
jecxz
mov
inc
mov
lcall
pushf
sub
insl
in
andl
xchg
xchg
iret
or
stos
xor
and
call
lret
add
lret
mov
xchg
stos
sahf
int
adc
sbb
lahf
adc
int3
and
jae
push
push
loope
lcall
jne
and
mov
out
dec
adc
dec
xor
xchg
mov
sarb
lea
mov
jmp
stos
into
mov
cltd
shrl
pop
int3
imul
pop
add
nop
lahf
call
cmp
daa
enter
sahf
lahf
and
pop
cmp
sbbl
mov
mov
mov
push
mov
push
les
cmp
mov
or
mov
jg
pop
and
lcall
adc
xchg
enter
into
adc
add
out
popf
lds
jbe
xchg
pop
or
fmuls
sbb
cli
push
mov
adc
jge
clc
push
add
adc
jcxz
cli
inc
sub
cmp
push
lods
pop
lret
pop
pop
mov
jae
and
xor
xor
out
push
test
shll
mov
fwait
mov
cmp
mov
sub
inc
cld
or
mov
icebp
or
ret
lret
add
out
dec
pop
ljmp
cmpsb
mov
cmp
lds
add
clc
jge
jbe
xchg
fwait
mov
mov
and
inc
or
cs
or
xchg
adc
mov
push
push
cld
rcll
sub
je
shrl
out
xchg
mov
mov
fadds
push
movl
pusha
sub
cmp
scas
push
xchg
fisttpll
dec
jle
or
mov
jecxz
mov
xor
repz
ret
cmpsl
stos
jmp
stc
jo
aaa
data16
sti
push
outsl
and
cwtl
or
and
xchg
xor
push
mov
xor
hlt
jg
repnz
pop
cmp
les
bound
mov
push
scas
test
into
lret
pop
push
pop
jecxz
mov
mov
mov
repnz
mov
push
sti
lods
in
scas
cmp
cld
shr
jecxz
lahf
loop
or
loopne
cmpsb
cmc
mov
pusha
or
jb
dec
dec
push
les
jae
or
imul
cmp
mov
icebp
shlb
stos
add
mov
dec
insl
iret
loop
addr16
jns
ror
rclb
arpl
inc
addb
sti
mov
imul
add
popf
bound
fidivrl
mov
fsts
push
popf
cmc
ljmp
dec
sbb
inc
push
sub
mov
inc
sub
push
sbb
rcrb
xchg
mov
sti
imul
orb
jp
rcll
cmp
xchg
cmpsl
imul
rcrb
mov
add
mov
aam
push
test
enter
clc
xchg
imul
pop
dec
fcompl
mov
mov
shrb
stc
in
sub
ret
adc
mov
lods
nop
inc
sub
pop
inc
jae
scas
adc
xchg
ljmp
aaa
lea
cmpb
or
insl
cmpsl
cmpsb
xorl
lock
outsl
outsb
addr16
insl
add
mov
push
push
sbb
cli
jb
xchg
push
and
in
sti
stos
mov
lea
add
scas
imul
add
out
ljmp
adc
outsl
loop
loopne
fldl
popf
add
xor
cmp
ds
pop
dec
popa
or
mov
ret
inc
cmp
outsl
test
push
mov
inc
aaa
push
fistpll
cmp
sti
adc
push
jb
ljmp
mov
clc
test
je
out
sbbb
pop
loop
jbe
arpl
sarb
arpl
out
mov
sbb
sar
push
pop
outsb
cmp
pop
int
repnz
inc
rcrb
aaa
js
ljmp
push
or
das
je
int3
jge
jmp
mov
push
lret
in
mov
jge
aam
adcl
xor
sub
imul
and
mov
imul
mov
iret
push
repz
and
lock
les
pop
xadd
mov
sahf
pop
subb
ficoms
cmp
cmpsb
repz
cld
mov
imulb
aad
cli
pop
fimull
ds
sub
sbb
cmp
orl
rcrl
push
xchg
pop
into
sahf
xor
pop
pop
pushf
pop
or
insb
int3
adc
add
adc
in
add
lock
adc
mov
mov
out
stc
addl
icebp
sahf
pop
lds
inc
stc
or
js
mov
leave
lahf
pop
roll
je
cmp
mov
test
push
mov
cmpsb
mov
and
pusha
ljmp
sub
fstps
jb
in
dec
aaa
sbb
dec
pop
pop
pop
aas
js
loop
pop
ja
out
dec
inc
mov
xchg
pop
repnz
adc
vcvttss2si
mov
fiadds
inc
mov
lea
mov
or
sarb
jb
andl
mov
negb
xor
push
cmp
xor
inc
frstor
mov
inc
jnp
loope
mov
mov
addr16
and
icebp
adc
xor
divb
mov
xor
jmp
mov
adc
in
xchg
incl
jl
scas
stos
mov
aad
in
mov
pop
dec
xchg
ficoml
xor
lods
imul
iret
cmp
nop
pop
fsubp
or
bound
stos
cmpsb
imul
xchg
adcb
std
imulb
xchg
sub
mov
push
or
dec
shll
add
jne
or
or
pop
test
cmp
mov
pop
pusha
pop
xchg
les
sbb
ja
outsb
jbe
or
xor
lock
scas
stos
ficoms
adc
jnp
femms
cmp
fs
dec
xlat
std
push
out
test
xor
jns
sbb
flds
xchg
jno
popa
in
xor
sbb
fistl
jbe
mov
rcl
test
sub
shrb
or
xchg
fdiv
gs
nop
add
pop
int3
fisubs
sub
push
jge
repnz
test
jnp
dec
dec
fidivs
sub
cmc
inc
shll
mov
mov
in
jne
aaa
call
mov
xor
mov
rcl
iret
call
mov
jbe
andb
mov
roll
lcall
gs
pop
movsb
and
aad
push
adc
cs
cmp
or
shll
js
push
fs
adc
mov
inc
loope
movsl
jl
arpl
test
pop
iret
pusha
push
das
jnp
jecxz
jbe
insl
add
inc
xor
scas
arpl
or
popf
aaa
dec
and
mov
les
imul
cmp
cmpb
pushf
adc
call
cmpsl
je
scas
loop
push
adc
push
pop
cmp
cmpsl
cmpsl
push
lret
jb
js
add
lret
rcrb
test
sub
pushf
into
iret
sti
mov
cmpsl
mov
cmp
mov
lret
mov
lods
dec
sub
imul
bound
push
ror
and
inc
movsb
sbb
ss
lret
dec
inc
gs
cmpsb
fists
lods
pop
divl
sub
mov
mov
pusha
mov
leave
in
add
pop
and
shll
mov
aam
adc
jg
daa
cmpsl
adc
sbb
xor
dec
sbb
ret
mov
psllq
or
dec
cwtl
mov
cmc
out
mov
xchg
mov
aam
ja
leave
cmp
test
and
aaa
loop
pusha
test
jl
xchg
adc
adc
mov
jns
in
cld
cmc
jo
pop
fbstp
adc
mov
nop
call
or
inc
sub
jbe
adc
xchg
lcall
or
aad
mov
js
fwait
push
add
or
icebp
in
stos
mov
dec
rcrb
mov
push
mov
push
pop
pop
sub
pop
aas
outsl
lret
cmp
js
les
mov
xchg
mov
inc
insl
es
sub
xor
lahf
loopne
jnp
loop
out
pop
jecxz
dec
xchg
fimuls
ja
mov
jnp
fbld
adc
lret
dec
subb
test
loopne
push
adc
aas
push
dec
fidivl
inc
lret
sub
insb
inc
jnp
xchg
cmp
mov
inc
arpl
adc
scas
jg
dec
inc
jecxz
enter
insb
xor
jecxz
mov
int
push
add
and
arpl
imul
jno
call
xlat
fidivrl
sbb
repnz
mov
call
xchg
mov
cmp
icebp
jne
or
inc
adc
mov
dec
lea
cmp
mov
and
jl
or
inc
test
jecxz
aam
cmp
dec
adc
aad
push
jo
push
adc
jmp
lret
adc
hlt
inc
adc
jbe
xor
test
mov
pop
push
loope
adcl
dec
idiv
cld
push
xor
gs
ja
push
sub
leave
dec
fisubrs
push
loop
insl
sub
divb
out
mov
fidivrl
jae
test
sbb
mov
sti
inc
movsb
cmpsb
mov
adc
call
adc
dec
xchg
iret
int3
cli
in
inc
fiadds
inc
lahf
dec
jns
cmp
in
dec
test
ljmp
adc
shl
loopne
or
fwait
gs
pushf
das
xor
testl
int3
or
cld
mov
repz
loop
ss
test
mov
repnz
mov
or
or
out
mov
and
push
dec
test
push
loop
or
popf
mov
inc
mov
int
inc
lock
push
pop
inc
adc
ja
je
fisubrs
sbb
xor
mov
ficoml
dec
xchg
inc
pop
pusha
and
jnp
arpl
pop
dec
into
mov
call
push
dec
das
mov
cwtl
popf
mov
xlat
out
mov
stos
jo
das
cld
rcrb
add
call
fsubrp
adc
rcrb
inc
jns
js
cmp
test
jp
nop
das
mov
mov
adc
mov
fsubrl
rcr
sbb
fistl
jle
addl
out
out
and
add
into
bound
sub
mov
aaa
push
test
xor
jp
cwtl
outsb
mov
or
push
push
push
mov
les
pop
mov
ret
add
xchg
adc
jbe
imul
dec
mov
dec
test
lahf
push
aam
insl
jae
mov
in
orb
lods
scas
inc
jle
popa
in
mov
aaa
in
dec
mov
insl
popf
dec
xor
or
jge
insb
sbb
adc
inc
mov
shrl
dec
xor
jnp
dec
jge
repz
adc
movsl
popa
sub
xchg
push
test
dec
jge
fadd
pushf
ret
cmc
and
cmp
or
ljmp
popa
push
std
jne
and
add
aam
push
xchg
adc
cmpl
xor
cmp
ret
jnp
and
leave
pop
jo
mov
icebp
stos
xchg
jecxz
xor
adc
pusha
aaa
out
nop
je
in
clc
xor
sbbb
fcmovnbe
sti
test
dec
imul
movsb
repnz
xor
mov
pop
push
test
into
jp
pusha
cmp
cmp
adc
fistl
inc
or
addb
lea
xchg
jbe
push
int
jg
aad
mov
add
pop
adc
lea
dec
mov
jne
jle
xchg
mov
clc
test
aaa
jp
divl
xchg
xor
fimuls
cli
push
loop
aam
jne
aaa
in
push
sbb
pop
push
popf
repz
pop
into
ret
push
add
xlat
xor
or
ret
andl
adc
push
loopne
adc
jo
lods
push
push
pop
adc
mov
and
push
leave
jmp
in
jne
setae
xchg
mov
dec
and
mov
shl
repnz
cltd
xchg
and
jnp
call
jg
test
scas
xchg
ss
xchg
cmp
inc
xchg
out
push
add
mov
imul
in
mov
mov
push
lods
mov
and
lods
dec
mov
and
arpl
jge
lods
rorl
and
inc
scas
dec
mov
xchg
sbb
out
mov
xchg
dec
cmpsb
fidivrl
xor
xor
mov
dec
push
add
xor
xchg
cmpsb
movb
or
clc
add
movsb
rorb
sar
jge
or
fidivs
jle
scas
imul
call
sbb
std
jae
cmpsl
popf
lds
and
sub
outsb
add
nop
fpatan
loopne
sbb
xor
xchg
inc
push
imul
ja
xchg
mov
sub
in
dec
jae
arpl
mov
in
mov
repz
icebp
lahf
xchg
adc
mov
sub
dec
popa
cltd
jbe
cmpb
js
xchg
aas
test
imul
push
lock
mov
mov
sub
sbb
and
movb
dec
jmp
loope
shrl
popa
cmpsl
maskmovq
divl
mov
pop
popa
push
loopne
int3
mov
xor
mov
lea
pop
and
pop
mov
xor
test
cs
jae
dec
xchg
into
test
and
cmp
test
jae
sti
scas
pusha
fiadds
pop
jge
and
hlt
cmp
dec
dec
jg
xor
jp
sbb
and
adc
mov
jo
dec
lcall
movsl
add
push
cmpsl
cmpsb
mull
inc
add
out
dec
xor
rcrl
in
rcrl
sbb
and
aas
mov
jle
add
pop
lahf
dec
mov
xchg
jns
xchg
push
mov
out
sbb
lret
sbb
pop
jp
sbb
shl
push
and
js
sti
in
sarb
adc
test
xlat
mov
jmp
pop
nop
je
xchg
pop
and
inc
cltd
mov
hlt
mov
sbb
adc
pop
outsb
sbb
add
das
adc
add
mov
gs
fdivl
loopne
jmp
aam
pushf
sti
adc
out
pop
jmp
xchg
sahf
sub
inc
rcr
arpl
cmp
aam
push
divl
adc
pop
mov
pushf
or
sti
adc
out
ss
out
sbb
test
inc
cmp
sahf
push
fcoml
fiadds
jp
cwtl
test
pop
rcll
mov
aad
lods
dec
sub
scas
add
mov
inc
xchg
lret
mov
js
jno
cmp
popf
jmp
ss
pop
jns
in
inc
stos
dec
pop
mov
or
xor
stos
imul
mov
pop
lods
daa
mov
xor
mov
incl
fistl
mov
or
stos
fnstsw
push
or
movsb
sarl
and
add
das
cmpsl
int
cli
scas
xor
mov
addl
lcall
mov
push
adc
mov
pusha
addl
icebp
xlat
pop
into
stos
in
test
dec
repz
jp
jge
pop
std
sub
imulb
pop
mov
insb
sbb
test
mov
icebp
add
dec
les
push
or
inc
and
pop
add
push
iret
rorl
repnz
icebp
shll
jno
stos
cltd
mov
pop
ja
out
aam
pushf
mov
sbb
test
mov
and
fwait
xor
inc
and
gs
test
dec
or
mov
inc
icebp
addr16
or
xor
jge
xchg
mov
popa
mov
call
mov
jecxz
and
stos
out
in
pop
insb
pop
pop
mov
cmp
std
mov
mov
fdivl
dec
fmuls
les
lret
xor
dec
cld
pop
jne
pop
mull
push
xchg
inc
test
pop
sbb
xchg
sbb
jl
or
jmp
sub
iret
gs
js
push
sahf
mov
aaa
outsl
mov
mov
cmp
cmp
adc
adc
loop
je
cs
dec
jg
in
sub
in
sub
fs
pop
in
mov
inc
mov
xchg
sub
xor
dec
loopne
jle
pop
dec
jg
dec
mov
push
mov
sbb
sub
add
pop
loope
js
mov
sbb
cmp
clc
lds
jle
pop
pop
or
cmp
sub
or
les
or
push
fwait
pop
fdivp
lods
sbb
lock
fwait
mov
cmp
dec
popf
cmp
sub
mov
push
inc
push
xor
outsl
stos
jmp
test
jae
dec
addr16
push
mov
daa
or
mov
push
popa
fistpl
and
sbb
mov
xchg
push
sbbl
aas
inc
add
insl
mov
xor
out
push
add
les
out
test
repnz
clc
aam
push
xchg
rcrb
stc
xchg
xor
aas
push
adc
loop
aam
sub
in
insb
dec
mov
cwtl
dec
add
push
inc
call
loop
rolb
fnstsw
dec
mov
loopne
xor
cmpsb
int3
test
sti
xchg
clc
xor
fiaddl
xchg
arpl
push
les
lret
and
ljmp
mov
daa
mov
xchg
repnz
adc
lahf
cmc
adc
lret
rol
arpl
minps
cmp
rorl
popf
mov
dec
pop
push
jo
cmp
fwait
inc
sub
push
aaa
psrlw
in
add
xchg
xchg
cwtl
pushf
jne
stos
fdivrl
sub
addr16
cmp
mov
sbb
push
mov
test
lahf
xor
add
call
aas
enter
mov
mov
mov
fs
aas
fbld
fldcw
sbb
sahf
sub
xor
and
repnz
inc
pusha
loopne
loope
in
js
push
xchg
lea
push
cli
gs
jnp
sub
mov
dec
lahf
shl
daa
add
jl
fnstenv
repz
imul
outsl
xor
cmp
jmp
adc
notl
inc
dec
push
and
and
insb
push
and
sbb
mov
jnp
scas
pop
test
ja
jnp
add
adc
fwait
mov
or
iret
xor
ret
iret
lret
andl
insb
mov
je
xchg
pop
add
das
scas
adc
idivl
mov
mov
mov
push
fisubs
pop
imul
sub
or
push
lcall
cmp
dec
sub
dec
subl
xchg
dec
in
xor
cmc
jbe
sub
loop
sbb
inc
mov
std
test
sbb
rcrl
pop
dec
stc
ljmp
xchg
and
call
call
mov
jp
in
mov
sub
cli
jnp
daa
jbe
fldcw
jno
xchg
gs
mov
pushf
stos
adc
testl
fwait
sub
mov
int3
sbb
lock
stos
data16
out
xor
mov
int3
jno
add
push
fildll
push
jge
popf
shlb
inc
sahf
add
xchg
leave
lret
mov
es
mov
pop
in
pop
jbe
xchg
mov
sub
inc
mov
sti
mov
popf
aaa
stc
popf
faddl
in
lock
xchg
in
adc
pop
dec
push
out
pop
push
ficoml
je
mov
xor
popa
pop
and
loop
arpl
sbb
pop
xor
in
mov
test
pop
roll
or
and
loope
cmpl
push
fsubl
jmp
and
mov
xor
push
fsts
enter
and
shr
mov
ljmp
leave
adc
sub
dec
cmp
xchg
aam
adc
inc
daa
lret
cli
in
jl
push
cmpsb
mov
sar
inc
clc
fs
cmp
pop
cli
push
testl
push
sbb
jo
je
cs
mov
mov
sti
lahf
cmp
pop
call
xchg
push
and
mov
jg
pop
stos
scas
jl
and
mov
push
mov
inc
icebp
sub
cli
push
mov
ret
mov
mov
mov
aad
dec
pop
add
adc
jo
lea
sbb
xchg
cwtl
dec
inc
and
scas
outsl
int3
adc
cld
add
nop
mov
inc
mov
addr16
pop
jp
out
push
mov
sbb
jae
mov
dec
das
or
inc
into
push
sub
jge
cmpsl
in
test
push
shlb
out
dec
popa
cmp
es
mov
dec
and
lods
pop
cmp
fnstenv
and
aas
lcall
jmp
mov
jnp
fldcw
insl
jl
mov
xchg
stos
insl
scas
fnsave
mov
and
cvttps2pi
cs
in
sbb
std
test
inc
sub
call
mov
sbb
imul
ljmp
xchg
lahf
movsb
push
xchg
push
fnstcw
out
xchg
pushf
pushf
mov
add
sbb
pushf
push
clc
shrb
aaa
pop
test
push
jp
in
scas
nop
mov
cmp
cli
adc
add
cmp
or
push
or
push
fcompl
mov
jne
add
xor
xor
stos
out
imul
dec
sub
or
mov
sti
fwait
sbb
ret
cli
aas
push
mov
inc
push
add
push
shlb
std
and
pop
movsb
push
xor
icebp
fcomps
inc
cmpsl
cmp
dec
mov
add
lods
xlat
outsl
sub
and
enter
shrb
push
shll
add
cmpl
adc
push
aad
sbb
sbb
ja
cwtl
mov
loopne
lahf
or
add
xchg
add
inc
sub
fildl
je
sub
and
divl
adc
inc
jl
mov
aaa
out
xchg
inc
out
dec
fsub
push
aas
xor
call
push
dec
je
inc
aad
sub
mov
aas
and
mov
sub
divb
stos
push
pop
fisubs
lcall
cmp
daa
cmpsl
scas
jle
loopne
call
gs
dec
ljmp
dec
in
fadds
in
sbb
and
pop
cmpsb
icebp
sub
pop
pop
mov
push
imul
cmp
in
sub
mov
or
mov
mov
in
fidivrl
pop
jnp
leave
jecxz
andb
cs
pop
mov
int
bnd
cmpsl
or
imul
sbb
push
xor
dec
push
rcll
xchg
dec
inc
mov
xchg
ud2
push
push
mov
jge,pt
testl
test
sarb
subl
leave
xor
add
loop
push
sbb
push
pop
sub
jmp
aam
cmp
mov
in
and
inc
inc
std
addl
and
call
mov
push
in
outsb
imul
lea
add
mov
cmp
mov
addr16
nop
cwtl
lret
fs
aam
sub
fs
xor
xorb
and
mov
fiaddl
jb
sbb
cmp
sahf
xchg
mov
jge
insl
cmpsl
push
data16
lahf
jb
std
pushf
mov
cmp
aas
mov
decb
add
mov
sbb
or
sbbb
cld
negl
adc
shll
dec
ljmp
pop
lea
xchg
fidivrs
das
stos
push
xchg
push
dec
subb
mov
subb
scas
pushf
mov
psubusw
xor
pop
dec
fcmovnbe
jp
sbbl
xlat
popa
xchg
insb
adc
jo
mov
pop
fstp
or
fldt
push
sbb
dec
xchg
loope
jns
lds
inc
and
push
and
lea
and
in
imul
cmpsb
push
dec
les
sbb
ret
in
test
ljmp
push
jo
and
jle
enter
inc
mov
push
push
stos
inc
mov
push
adc
pop
mov
filds
pop
stos
movsl
mov
jo
sbb
dec
inc
or
arpl
adc
mov
lcall
inc
dec
pop
test
cmc
xchg
cmp
xchg
test
adc
push
in
add
int
or
lock
in
rcl
or
mov
scas
into
popf
cmc
add
sub
fs
pop
dec
ja
in
mov
imul
xlat
mov
data16
lret
xchg
fisubrs
pop
pop
hlt
add
stc
cld
je
out
loop
adc
mov
sub
mov
jns
rorl
ja
pop
dec
mov
cmp
sti
add
xchg
pop
mov
fistl
cmp
mov
negb
jmp
mov
daa
jae
jmp
pop
push
gs
fnsave
mov
mov
mov
xchg
xchg
lods
xor
ret
fwait
mov
xor
cwtl
flds
icebp
ret
pop
fistl
jg
stos
cmpsb
mov
mov
outsl
inc
mov
inc
lock
ret
sti
sahf
mov
and
xlat
adc
scas
cmc
or
jmp
inc
idivb
cmp
test
jp
and
push
ffree
or
xor
mov
push
ret
push
movsb
mov
pop
arpl
in
stos
xorb
pop
inc
das
dec
fnsave
xor
imul
cld
and
pop
loop
int
add
sahf
jnp
enter
mov
xchg
jp
mov
mov
sub
mov
aaa
roll
into
nop
sbb
push
std
imul
pushf
mov
xchg
xlat
js
push
inc
aaa
mov
insb
sub
jmp
dec
insl
rolb
adc
jno
lret
test
ficompl
or
pop
adc
out
stos
divl
pop
xor
cmp
mov
hlt
cmp
in
xchg
test
lods
push
push
aad
je
arpl
in
push
cmc
rorl
imul
repz
pop
mov
xchg
mov
cs
cmp
sbb
sub
outsl
or
inc
xchg
mov
push
pop
mov
testb
pop
leave
stc
ss
sub
out
inc
jo
jbe
dec
mov
pushf
jne
rorl
mov
shll
mov
cmp
test
jmp
test
mov
sub
cld
pop
rolb
repnz
push
sbb
cli
xchg
pop
into
fadds
in
je
xchg
aaa
inc
insb
or
cmpsl
add
jbe
dec
enter
rorb
insl
mov
cli
cltd
cmp
and
mov
xchg
outsl
adc
mov
inc
push
mov
movsb
jge
mov
add
mov
aam
test
xor
cli
sahf
push
add
xchg
push
cmc
pop
sbbl
loop
lods
fimull
enter
fmuls
mov
aas
jge
mov
cwtl
jg
fmuls
in
mov
fstcw
jne
jns
imul
sub
sbb
cwtl
in
out
adc
dec
xor
add
in
ja
jne
daa
adc
pusha
cld
sub
cmp
pop
xchg
mov
mov
rcll
add
pop
xor
out
in
cmpsl
xchg
iret
in
arpl
xchg
xor
mov
stos
call
mov
into
xchg
ret
sti
push
leave
fisttps
pushf
sbb
jp
test
pop
cli
and
fs
or
ds
sub
mov
pop
loope
jnp
subl
pop
data16
sar
adc
dec
stc
enter
jae
ja
les
dec
ja
xchg
popa
les
pop
jge
les
add
out
mov
cwtl
jg
pop
pandn
xchg
movsl
dec
sub
jns
add
push
sub
mov
push
repz
ja
push
or
repnz
das
inc
dec
sti
les
lea
mov
fisubs
aam
cli
ja
jnp
xor
mov
roll
rcrb
les
stc
push
push
loope
sahf
pop
adc
repz
sub
inc
mov
fists
mov
fnstcw
xor
sub
mov
out
sar
inc
jnp
inc
fstpl
push
xchg
mov
outsb
stos
sahf
mov
add
in
movsl
push
addl
cltd
fcomp
xchg
push
xchg
rcrl
fwait
leave
push
int3
inc
push
push
out
add
enter
xlat
xor
lds
outsb
gs
xchg
inc
sbb
adc
or
dec
in
xchg
icebp
lods
aad
rcr
and
leave
adc
adc
pushl
jno
xor
inc
aad
lea
cmp
sbb
adc
pop
add
xchg
sbb
popf
or
insb
pop
fldt
leave
scas
icebp
cmpps
fnstenv
insl
fmulp
sub
stos
mov
sub
or
enter
dec
dec
mov
stos
lea
insb
icebp
mov
add
scas
call
ret
push
ljmp
lret
cmp
fisttps
xchg
sbb
sub
jge
mov
lret
dec
rorb
stc
adc
cltd
push
rcrb
xor
int3
dec
mov
add
xor
jo
push
popf
add
in
inc
pop
das
pop
push
sub
aad
xchg
push
mov
adc
sbb
aas
insb
jecxz
jo
mov
xor
cld
scas
mov
fistpl
es
fs
sbb
dec
and
imul
xchg
jb
xor
loope
add
pop
inc
xlat
cmp
jle
imul
add
and
xchg
add
or
das
add
pop
xlat
mov
mov
or
push
lods
and
or
inc
in
sti
jo
jne
cli
jo
das
push
sti
cmp
inc
cs
pop
outsb
jmp
dec
jnp
leave
or
pushf
adc
add
stos
mov
sub
dec
test
push
fbstp
push
fwait
iret
lahf
jns
std
loopne
or
mov
push
jg
inc
cmp
insl
ljmp
stos
inc
aam
aaa
movsl
xor
jno
dec
cmp
mov
stc
repz
mov
xchg
cmp
inc
nop
mov
movsl
pop
cld
adcl
loop
or
call
testb
or
xlat
pop
or
rol
xchg
jp
test
ss
push
fldt
pop
in
pop
dec
xchg
mov
or
jmp
lcall
pop
push
cmp
sub
adc
mov
and
lds
movsl
cmp
fcoms
dec
xchg
mov
into
jecxz
fildll
fildl
add
mov
dec
cmpsl
dec
fsubs
adc
sub
loop
cli
push
push
frstor
sbb
push
orb
fidivs
sbb
repnz
jmp
dec
stos
ja
sub
xchg
push
dec
pushf
pop
and
shlb
pop
xchg
out
push
fstl
pop
pop
stc
add
dec
fstps
or
in
pop
movsl
mov
cli
mov
into
xchg
sub
adc
and
int
imul
dec
movb
outsb
xor
add
ljmp
pop
push
out
rclb
inc
sbbb
data16
inc
sbb
sub
jae
faddl
cmp
int
mov
push
loopne
cmp
mov
or
dec
popa
and
push
fsubrs
mov
mov
fstl
mov
inc
mov
cwtl
dec
mov
xor
jnp
scas
xor
out
jmp
paddusw
dec
push
inc
out
pop
and
push
jne
push
sub
pushf
cmpl
or
sahf
cmp
push
or
cmp
cltd
sbb
inc
out
jae
scas
cmpsl
addr16
aaa
pop
fldt
adc
inc
out
mov
lds
xchg
xor
subl
mov
mov
call
and
xchg
adc
wrmsr
xchg
dec
test
into
or
hlt
add
and
clc
bound
xchg
call
xlat
dec
cwtl
mov
mov
push
sub
push
movb
sub
and
jge
push
mov
dec
xor
in
inc
pop
mov
outsl
addr16
push
mov
cmpsb
inc
pop
pop
pop
dec
scas
sub
cmp
xchg
cmpsl
pop
adc
aad
cmp
adc
sbb
loope
inc
dec
fwait
push
sahf
mov
pop
in
test
mov
push
je
insb
data16
scas
sub
test
cmp
movsl
mov
fwait
jne
and
and
or
fisttpl
das
lods
ss
mov
xchg
into
stc
jnp
mov
ja
loope
dec
sub
cwtl
and
incl
fstpl
pop
repnz
les
mov
sbb
insb
std
lds
xchg
xchg
sbb
into
arpl
arpl
inc
push
into
out
arpl
repnz
cltd
fcmovnb
lods
dec
xchg
mov
std
lcall
scas
mov
es
or
shlb
int3
pop
sub
or
mov
sbb
cs
test
mov
mov
add
push
lret
and
ljmp
fadds
rcl
or
jae
in
mov
adc
lods
or
lret
inc
add
jp
push
fdivs
dec
pop
cmp
fisttpll
loop
test
push
cmp
pop
cmp
xchg
cmp
repz
lods
inc
mov
mov
adc
lret
mov
hlt
int3
fldcw
jecxz
and
insb
or
xlat
pop
scas
push
pop
fs
pop
movsl
aad
sahf
push
ja
movsl
xchg
scas
mov
rcrb
push
aas
ds
sahf
movsb
lea
sti
js
pop
jnp
cmp
scas
call
cld
enter
and
lds
cmp
fdivp
cmc
xchg
aas
adc
adc
add
in
lret
psubd
adc
and
daa
pop
data16
adc
mov
nop
mov
in
testb
fwait
mov
shll
enter
fmull
cli
jl
mov
mov
lcall
daa
insb
push
stos
mov
pop
jo
add
mov
mov
in
cwtl
enter
push
ficoms
imul
repz
xor
mov
dec
inc
sub
inc
or
sahf
int3
push
in
fcompl
cmp
push
pop
js
faddl
cmp
js
fcmovu
mov
jne
mov
push
pop
xchg
or
movsb
inc
mov
xchg
test
subb
mov
sbb
stos
pop
push
sahf
out
xor
leave
fsubp
mov
push
inc
fwait
or
pop
scas
inc
inc
outsl
fwait
push
mov
inc
movsl
out
add
mov
xor
push
dec
mov
push
enter
jmp
xchg
scas
push
lahf
leave
shll
cmp
hlt
movsl
and
dec
jle
call
stos
daa
pop
insb
xchg
test
cs
add
mov
scas
mov
icebp
xchg
ret
ds
jnp
or
jnp
and
mov
hlt
sbb
mov
out
inc
fcomp
mov
repz
test
pushf
pop
adc
lds
xchg
cli
add
loop
sub
cmpsl
sbb
cmp
mov
xor
jmp
mov
ja
roll
js
mov
test
sub
insb
mov
push
pop
repz
jecxz
fwait
cli
sahf
pop
jnp
add
xlat
fistpll
xor
and
shlb
sarl
mov
xor
sub
xor
xchg
mov
ret
pop
and
xchg
jge
ret
xchg
cmpsb
imul
pop
test
sub
lods
js
sti
jbe
in
fwait
insb
inc
enter
xchg
fdivs
movsl
pop
fisubrs
xchg
das
or
jnp
jg
insb
add
sub
ljmp
xor
int3
js
jp
xor
pop
xor
mov
and
repz
fwait
and
pop
mov
div
insb
je
sub
add
pop
loope
out
loop
push
lds
dec
mov
cmp
jp
sti
pop
lds
loopne
dec
cmp
test
mov
and
and
fs
mov
xor
xchg
popf
xor
add
adc
mov
outsb
cmp
xchg
fcoms
sahf
mov
or
dec
leave
xchg
mov
pop
test
sub
scas
sbb
ss
cltd
xchg
and
int3
adc
sub
sbb
imul
movsb
test
add
and
push
sub
cmp
mov
xor
add
dec
inc
add
xor
pop
and
lcall
dec
pop
sub
fldenv
mov
arpl
xchg
sub
jo
call
jne
addr16
mov
fsub
rcl
lods
sbbb
imul
xchg
mov
mov
jle
sbb
dec
repz
mov
into
cmp
inc
xchg
mov
ret
jl
dec
ret
popf
mov
add
clc
xor
arpl
leave
push
sub
xor
bound
fmull
jl
test
jl
cmc
hlt
cmp
xor
popa
testb
shl
mov
lcall
add
xlat
enter
sub
inc
in
dec
cmp
lret
mov
notb
jo
shrl
jne
jl
fs
mov
pushf
lret
movsb
sub
lods
xor
cmc
enter
adc
and
icebp
popa
dec
push
repnz
out
popa
mull
sbb
int
repz
sbb
xchg
pop
xchg
cli
xchg
hlt
adcl
xchg
mov
adc
mov
push
in
ljmp
int
push
mov
pop
rol
dec
clc
or
filds
imul
xchg
aas
jne
aam
aaa
enter
push
push
dec
in
xor
pop
sbb
mov
push
imul
stc
stc
lret
push
jnp
lcall
or
cwtl
sub
sub
inc
mov
sub
and
push
push
fs
fbld
jl
inc
loopne
sarl
adc
decl
call
xor
movsl
adc
xlat
push
pop
mov
dec
cmp
inc
test
push
fildll
ja
mov
and
pop
cs
inc
shlb
dec
or
dec
ds
xor
push
into
jnp
push
test
std
pop
shlb
out
dec
push
mov
push
fwait
inc
lock
ret
xor
outsb
ljmp
cmpsb
ds
sub
sub
subl
sub
jle
sbb
aas
xlat
sbb
dec
jecxz
pop
fisubs
sbb
lods
and
cmpb
ret
clc
and
dec
pop
and
push
fstp
add
mov
or
pop
out
incl
loop
mov
jle
jmp
lret
inc
push
xchg
insl
and
cmp
jne
inc
jno
xchg
xchg
adc
dec
dec
xchg
add
push
scas
mov
xlat
ja
mov
ret
aam
shlb
mov
jnp
dec
push
jp
lcall
ficoms
fsub
fdivrl
stos
xchg
inc
xchg
dec
push
fdiv
nop
xchg
pop
into
daa
mov
cmp
adc
pop
dec
ret
outsb
mov
cmpsb
cmc
les
fsts
cmp
inc
xchg
mov
sbb
fxch
inc
sbb
loope
outsl
adc
repnz
jl
jno
or
sbb
push
repz
push
cmc
test
push
xchg
inc
and
sub
cld
in
into
add
mov
inc
mov
fcompl
adcl
into
sub
aas
js
push
aam
icebp
jp
loop
daa
leave
call
lcall
movsb
mov
jmp
jmp
push
lret
pop
add
xor
dec
lgs
pop
mov
mov
mov
subb
jnp
lret
mov
aaa
ds
idivl
jo
addr16
push
jae,pt
dec
jns
lea
gs
test
push
js
sahf
jnp
aaa
test
lods
shrl
pop
subb
arpl
iret
jo
in
jle
sbb
pop
inc
push
cltd
fisubl
adc
adc
loope
mov
es
lock
pop
dec
xor
adc
mov
lds
lock
mov
jnp
cs
push
sbb
in
and
dec
push
popl
mov
fadds
addr16
aam
out
ljmp
out
jg
sub
popf
inc
daa
imul
jnp
push
cmp
sub
xor
adc
inc
lods
in
js
cmp
push
dec
sbb
divl
rcr
stc
or
lods
in
sub
fldl
testl
call
loop
jo
add
and
js
outsl
jle
sbb
add
xor
jp
mov
test
lods
addr16
repz
cmp
testl
pop
cmpsl
loope
test
jnp
mov
addr16
loop
es
fisttpll
in
add
nop
loop
xor
adc
gs
add
dec
jle
pop
test
jmp
adc
cmpl
out
dec
sub
jnp
pop
outsb
cmp
add
push
ds
mov
aam
pop
fistl
jne
or
sahf
lahf
inc
dec
leave
push
lock
mov
mov
push
sarb
xchg
xchg
scas
inc
fs
iret
sbb
loop
fadds
fisubrs
lods
lahf
icebp
xor
jmp
jo
mov
jo
adc
adc
loope
out
fs
daa
lods
push
in
push
aaa
ret
out
inc
adc
rolb
inc
mov
lcall
test
sar
mov
jle
out
in
pop
cli
cwtl
pop
inc
lods
mov
lods
test
popf
addr16
cli
cmp
lods
iret
mov
cmovnp
dec
inc
pop
cmp
sub
aad
scas
daa
lret
icebp
sbb
push
inc
xchg
and
or
xor
jg
pop
jne
test
dec
and
les
dec
dec
mov
push
or
int
lret
sub
mov
lds
scas
pop
mov
jnp
sbb
add
je
ficompl
jbe
adc
inc
dec
add
mov
out
jl
fdiv
cmpsl
fdivp
jno
out
sub
jmp
lea
movsb
pop
adc
jns
cli
sub
sub
push
ret
dec
dec
rcl
lods
mov
cmp
inc
stos
rorl
fsts
mov
inc
dec
cmpsl
cmpsl
mov
int3
sbb
push
decl
mov
lret
sbb
add
sar
sbb
pop
fwait
jmp
mov
sbb
ficoms
cmp
cmp
lahf
push
pop
outsl
mov
mov
mov
in
aad
das
scas
scas
sub
xchg
jmp
push
jmp
stos
mov
xor
adc
rcll
gs
cwtl
push
push
pushf
mov
sbb
dec
scas
mov
sbbb
pop
or
dec
lea
mov
leave
mov
int3
cs
lret
enter
int
xchg
xchg
mov
andl
jge
dec
lret
sub
mov
cmpsb
xor
pop
push
in
and
sbb
jnp
push
push
mov
fnstcw
rcrl
das
jmp
inc
cmp
mov
pop
add
sub
add
inc
xchg
sub
sbb
mov
lcall
xor
mov
and
pop
inc
mov
jg
or
xchg
cmpsl
sbb
fwait
mov
inc
xchg
pop
ret
adc
in
cmpl
sqrtps
lret
sarl
insl
imul
push
std
inc
inc
cmpsl
mov
adc
and
fcomps
inc
setns
mov
adc
rolb
push
push
fnstsw
pop
int3
addr16
aas
outsl
dec
mov
xorl
jmp
ljmp
sti
insb
call
sbb
loopne
sbb
popa
and
and
ror
or
add
into
lods
and
stc
push
sub
movsl
data16
popa
aam
mov
cmp
cmp
mov
xchg
adc
and
and
dec
push
push
xor
jno
mov
jae
cmpsl
movups
cmpsb
ffreep
leave
mov
dec
in
add
fdivp
mov
dec
es
push
push
mov
in
sbb
xor
imul
adc
pop
add
punpckldq
and
jno
push
xor
shrb
xchg
xor
push
or
push
jbe
scas
loop
inc
call
imul
scas
lret
pop
push
sbb
mov
push
xor
sarb
mov
inc
sub
sbb
adcl
mov
shll
fcmovnu
cmpsb
pop
sbb
scas
mov
jbe
inc
jge
xchg
pusha
andb
nop
out
dec
jno
in
fadds
push
test
jecxz
sub
dec
adc
dec
rcrb
cmp
or
addr16
mov
mov
mov
aaa
or
cs
xchg
sub
pop
mov
fstpl
push
fstps
js
test
lret
sbb
xchg
scas
scas
jp
rcrl
iret
xor
mov
sub
jmp
testl
clc
or
stos
add
lcall
sbb
jns
decb
add
inc
mov
sub
mov
mov
adc
mov
add
cmc
push
adc
dec
aam
cmp
mov
mov
iret
xchg
aad
out
push
frndint
cmp
fidivrs
sarl
mov
pop
lret
aam
lfs
stos
xor
inc
out
push
ds
movsb
movsb
fisubs
and
cld
cwtl
xchg
lods
and
sub
sub
mov
data16
addr16
jne
das
das
jg
pop
es
pop
xor
sub
xor
adcl
pop
add
and
lea
sbb
add
aaa
sbb
push
sub
jmp
mov
adcb
push
outsb
push
sti
mov
lea
dec
xchg
pop
out
call
add
xchg
cmp
nop
cwtl
sub
lea
jbe
push
mov
sub
inc
jne
inc
cltd
jmp
mov
jae
sbbl
add
clc
cwtl
jnp
dec
adc
inc
int
push
loopne
xchg
dec
sbb
fdivrs
pop
popf
out
lcall
scas
clc
lods
push
cmp
or
popa
dec
out
mov
mov
jb
in
mov
push
add
aam
mov
cmp
or
add
pop
mov
ret
xor
cmpsl
aam
push
mov
cmpsb
xchg
fs
cmp
push
test
cmp
xchg
aaa
pushf
inc
xor
dec
inc
inc
mov
scas
inc
cwtl
mov
int3
or
mov
mov
fiaddl
daa
mov
inc
stos
cmp
inc
inc
xchg
cmp
inc
pxor
mov
jns
mov
jp
mov
pop
and
rcl
mov
add
sbb
sub
adc
pop
loopne
daa
out
js
aaa
into
loopne
mov
rcll
adcb
and
pop
push
out
cmp
push
test
mov
add
scas
out
cmp
mull
xor
adc
adc
add
cmpl
repz
cmp
leave
into
inc
or
push
push
cmc
add
test
fwait
into
add
xor
jno
and
or
fsubrp
ja
repnz
mov
adc
mov
fisttpl
adc
mov
in
xor
aad
cltd
push
jno
scas
pop
imul
in
xor
push
stc
cmp
mov
icebp
mov
mov
push
and
mov
pop
cmp
sbb
mov
lahf
int3
pop
je
cld
and
and
and
cmpsb
add
mov
mov
adc
in
dec
push
lds
cltd
cmp
push
jb
sbb
xchg
dec
fidivs
gs
inc
adc
ss
out
adc
mov
adc
sahf
cltd
mov
stos
add
sub
mov
pop
clc
mov
ljmp
jle
cltd
sahf
sbb
sbb
push
pop
and
pop
clc
mov
orb
sub
shlb
sub
ret
mov
jle
adc
scas
shrb
imul
mov
dec
shlb
dec
and
test
insl
push
ja
push
ljmp
xchg
sahf
dec
lret
call
retw
mov
je
cmp
or
add
bound
decl
xchg
daa
pop
jmp
imul
inc
ljmp
adc
cmc
jl
pop
out
push
das
cmp
jmp
cmpsl
pop
xchg
ret
xchg
adc
ja
lods
and
or
fcomps
nop
ljmp
and
out
push
pop
popf
jmp
mov
pop
nop
hlt
into
mov
jno
shll
stos
stc
aas
sbb
fnstenv
outsb
adc
loope
fimuls
movsl
add
movsb
mov
pop
mov
cld
sub
popa
mov
cmpsl
imul
push
std
insl
movsl
stos
adc
xchg
imul
xor
loope
push
in
push
mov
lcall
xor
fistpl
pop
mov
out
je
sbb
adc
mov
jp
push
test
daa
adc
adc
push
icebp
inc
repz
xlat
mov
in
popf
sub
je
adc
or
and
xchg
pop
sub
jmp
jne
pushf
sub
push
andl
insl
pushl
push
fildll
push
mov
cmpsl
into
adc
insl
xchg
sub
pop
xor
scas
or
lods
xor
jmp
pop
hlt
cmpsl
mov
xchg
inc
xor
mov
add
lahf
loop
or
cmpsl
aad
loop
xchg
dec
movsb
dec
adc
xchg
leave
lcall
adc
lock
pusha
mov
test
sub
imul
into
ja
inc
shll
push
fs
xor
push
popl
dec
shrl
dec
mov
int
movsb
test
jbe
and
out
jge
inc
mov
mov
lods
pop
mov
xchg
iret
aaa
mov
imul
bnd
pop
or
jmp
leave
pop
iret
push
stc
xchg
pusha
stos
sbb
adc
push
mov
push
out
pop
inc
and
mov
xchg
imul
pop
pop
nop
and
jmp
mov
clc
ficomps
imul
call
mov
xor
sub
sub
bound
mov
push
les
das
cmpsl
pop
cmpsl
push
jmp
add
push
aad
push
jp
push
out
push
and
lcall
insb
push
adc
or
cmp
jle
in
push
mov
xor
mov
sbb
outsb
es
xorl
pop
xchg
add
adc
nop
jae
inc
sbb
xor
cli
movsl
xchg
js
mov
xchg
aaa
pushf
sbb
cmp
sbbl
ss
icebp
or
jg
call
sub
push
std
data16
or
cmp
xchg
lock
aaa
sbb
lcall
mov
stc
cmp
and
dec
or
adc
push
push
ds
and
iret
pop
add
pop
fldl
sbb
imul
mov
je
mov
mov
and
mul
jmp
mull
arpl
push
sahf
inc
sub
bound
daa
data16
cmp
sbb
sahf
imul
xor
push
add
push
pop
sub
test
mov
sbb
sahf
mov
ret
mov
xchg
inc
rorb
sets
loopne
pop
les
and
mov
fwait
mov
push
scas
fwait
inc
in
cmp
push
xor
dec
insl
mov
sbb
push
or
dec
iret
xchg
and
lds
into
fisubrl
add
mov
sbb
or
std
xor
pop
pop
mov
adc
addr16
mov
out
mov
xchg
mov
test
and
rcll
test
iret
push
stos
or
cmp
xlat
adcb
scas
jne
in
das
pop
dec
jb
mov
lods
outsb
jae
mov
and
push
and
xchg
fbstp
xchg
xchg
adcl
jae
shll
dec
cmp
mov
in
stc
ljmp
nop
xchg
sub
mov
cmc
jns
test
inc
mov
loope
sub
adc
jb
cmp
cmpsl
add
cmpsl
pop
pop
fmul
cmc
sub
add
fbstp
jbe
ja
cltd
in
loopne
pusha
cli
fimull
or
fists
loopne
cmp
rcrl
lret
jae
inc
cli
mov
mov
scas
loop
jb
stc
add
mov
sbb
inc
mov
bound
pop
push
jecxz
ljmp
bsf
cmp
or
push
inc
sub
pushf
mov
sub
xor
xchg
lahf
cmc
int3
shll
or
movsb
enter
mov
fildl
test
dec
fistl
ffreep
ret
and
notl
xchg
mov
dec
movb
popa
jp
dec
and
or
pop
xor
push
arpl
test
cs
or
out
jg
xchg
scas
xchg
es
jmp
mov
imul
les
std
mov
push
mov
add
mov
stos
es
or
pop
sarb
push
test
sarl
mov
cmp
paddb
incl
mov
pop
xchg
lea
and
das
notb
xchg
jp
pop
mov
sbb
push
cld
les
call
jecxz
or
insb
lods
inc
fbstp
xchg
cltd
inc
roll
sar
int
mov
sbb
fdivr
fnstenv
leave
jnp
jecxz
adc
dec
and
mov
cmp
push
mov
out
push
mov
push
mov
imul
push
dec
pop
inc
jp
popl
inc
lods
pop
push
xchg
rolb
push
xchg
adc
imul
in
push
movl
sahf
add
xlat
sub
test
aam
push
les
jns
push
insl
mov
stos
mov
out
pop
cmp
mov
sub
add
and
aam
ret
mov
adc
jmp
das
fnstsw
out
cmp
jno
inc
sub
mov
scas
jl
lods
sbb
scas
mov
out
enter
xchg
mov
bndldx
dec
mov
pop
mov
lret
aam
jno
sub
loopne
adc
or
ds
mov
mov
jp
subl
pop
or
lds
call
xchg
xchg
in
or
adc
ljmp
mov
dec
leave
adc
sbb
cmp
repz
sub
scas
das
xchg
inc
aaa
notb
jle
jmp
jnp
push
mov
mov
adc
pop
inc
in
mov
das
adc
scas
sbb
push
leave
push
xor
lock
rolb
mov
push
mov
cmp
inc
ds
mov
ret
imul
or
scas
enter
fs
cwtl
and
push
imul
and
fsubl
add
shll
loop
dec
sub
mov
subl
sub
test
adc
xchg
push
nop
sti
and
gs
mov
push
inc
jmp
out
mov
dec
jg
push
sub
cmp
out
mov
or
mov
cmp
mov
mov
xor
cmp
adc
push
mov
cmp
sub
push
leave
mov
loopne
and
add
sub
jmp
scas
aas
imul
out
dec
add
ds
arpl
out
jb
adcb
movnti
test
lret
std
cmpsb
es
mov
gs
ret
mov
adc
xchg
das
int
insl
jb
or
pop
ret
cs
rcl
ds
test
push
xchg
and
xchg
xchg
call
addr16
mov
lcall
mov
rorb
icebp
mov
jae
std
pop
adc
fists
cmp
jecxz
popf
lret
fsubrs
dec
iret
loop
movsl
xor
dec
loope
or
dec
test
push
cmove
jnp
sub
jl
stos
testb
jbe
mov
ss
cltd
lret
inc
push
inc
mov
insb
loopne
icebp
testb
aad
ds
frstor
int3
and
jl
hlt
pop
and
xchg
adc
sahf
adc
and
add
cmp
pop
lds
cmp
cli
popf
or
xchg
mov
lods
mov
adc
mov
push
int
jae
pop
es
rol
jnp
test
jb
sbb
sahf
sub
pop
mov
mov
xchg
out
push
outsl
roll
pop
dec
in
les
mov
push
sub
lds
data16
stos
push
repz
arpl
cwtl
cmpsl
dec
sub
push
cli
repz
cld
stos
add
and
outsl
mov
mov
iret
pop
mov
add
jg
or
addr16
fwait
lret
int3
xchg
sub
or
add
push
test
jmp
mov
jae
jo
sbb
cmp
ret
cmp
cli
push
push
sbb
fidivrs
mov
mov
jl
addb
inc
mull
and
cmp
shrb
outsl
xchg
cmp
push
xchg
jle
inc
dec
mov
push
cwtl
push
adc
stc
sbb
mov
adc
test
or
xor
outsb
mov
xor
push
dec
mov
rcll
mov
addr16
sub
sarb
pusha
cmp
mov
ja
xchg
sbb
aad
lahf
or
scas
dec
sub
push
imul
inc
ds
jl
out
push
xor
call
cmpsl
pop
inc
mov
stos
adc
dec
xchg
out
xchg
pop
mov
popa
repnz
add
push
jp
pop
add
mov
lea
cmp
jl
jle
faddl
idiv
adc
leave
dec
mov
sub
pop
mov
add
mov
and
into
pop
mov
jno
jo
mov
imul
xchg
and
xor
pop
or
xor
push
pop
cmpsb
arpl
adc
ret
les
sbb
xor
rcl
pushl
es
loope
sbb
push
fistl
daa
adc
jmp
inc
mov
cmpsb
or
flds
add
inc
and
nop
add
test
cmc
sti
push
jb
cbtw
rcrb
adc
jl
xchg
cmp
cmc
pop
dec
lds
jle
loop
add
addr16
lret
rcrl
inc
hlt
inc
stos
cmc
and
test
es
pop
sub
cmpb
jnp
mov
mov
test
add
mov
push
gs
push
push
in
pop
jo
lcall
pop
mov
sahf
inc
inc
jmp
dec
scas
pop
mov
jno
fs
push
push
sub
jmp
xor
inc
repnz
loopne
push
xchg
pusha
je
leave
es
fwait
lea
test
iret
jnp
shlb
jns
adc
fists
fwait
mov
clc
and
jmp
imul
sar
ror
dec
push
sbb
rorl
sub
insb
pop
and
mov
xchg
jge
lea
xchg
or
jne
and
push
mov
jmp
sub
xchg
sar
push
gs
fwait
mov
iret
std
loop
leave
ss
pop
iret
cld
xchg
xchg
xchg
adc
adc
pop
inc
xchg
je
clc
out
sbb
xchg
popf
mov
rorl
and
loopne
sbb
xchg
cmp
jbe
add
mov
pop
rcrb
inc
xor
pop
icebp
inc
adcb
lret
push
fwait
mov
push
push
inc
pop
cmp
ror
fadd
ficoms
mov
jno
imul
mov
popa
push
adc
mov
enter
cwtl
xchg
mov
sub
xchg
repnz
insl
fs
scas
add
imull
std
or
mov
imul
push
push
push
mov
or
add
leave
xor
or
jo
jp
cmp
pop
sbb
pop
lret
nop
int
test
or
mov
movsl
sub
arpl
mov
jne
mov
and
in
adc
sbbl
aam
jne
in
pop
rorl
repnz
jns
xchg
mov
popa
pop
xor
mov
sub
fistl
les
cmpsb
xor
stos
xlat
mov
daa
inc
mov
jle
sti
push
dec
mov
sbb
xor
pusha
cmp
int3
push
pop
xor
mov
mov
das
or
pop
jmp
xchg
inc
xor
ficompl
mov
push
inc
fldl
add
in
xchg
addl
aaa
mov
mov
push
add
outsl
lods
and
fdivrl
mov
stos
ret
jns
jg
mov
das
out
inc
test
int3
scas
push
xchg
adcl
xchg
or
xchg
in
addb
daa
add
cmp
out
jmp
push
testl
pushf
imul
dec
arpl
insl
sub
mov
sbb
pop
jle
adc
das
adc
push
fs
jmp
das
push
mov
in
sahf
into
in
sub
mov
pop
ret
stos
dec
sarb
mov
cs
sbb
ds
mov
mov
imul
and
dec
or
in
or
mov
adc
push
fs
sub
xchg
or
into
inc
bound
pushf
inc
js,pt
xchg
pop
or
repnz
loope
adc
sti
test
rclb
sub
mov
fs
sbb
xchg
pavgw
popf
in
lret
mov
xchg
icebp
pop
out
sbb
mov
mov
insl
sbb
daa
inc
pop
je
shlb
into
jg
jnp
mov
fimull
jb
sbb
xor
or
push
je
or
sub
add
sbb
pop
ja
adc
rcrl
push
fcompl
inc
shll
mov
test
int
jl
arpl
mov
jno
test
mov
mov
popf
test
ret
jnp
jle
jne
inc
sbb
insb
jns
sbb
mov
movsl
sbb
sub
jbe
mov
jno
fmul
mov
pushf
dec
aam
clc
pop
dec
in
out
jb
mov
push
xor
push
ja
mov
inc
cwtl
jbe
mov
movzwl
pop
add
jb
push
add
cmpl
loop
push
stos
dec
das
jns
in
int
push
scas
movsl
cmovno
inc
fcomps
cs
mov
aaa
fisubrs
push
sub
iret
and
sub
lods
pop
out
mov
dec
int3
or
xchg
iret
movsb
iret
dec
cmp
cmp
shll
add
cmc
push
dec
xchg
xor
enter
movsb
cmp
in
sub
jo
and
dec
cmp
xchg
sub
sbb
cmpsl
mov
inc
adc
bound
aam
call
pop
sarb
mov
sahf
bound
push
jne
mov
sub
and
or
xchg
jg
shlb
mov
mov
out
xchg
pop
cmp
push
push
or
clc
xor
les
mov
rcl
mov
in
mov
jge
outsb
cmp
hlt
mov
movsb
inc
mov
mov
pop
or
in
lahf
fldenv
test
jb
sbb
or
mov
cmp
adc
movsb
sub
jle
das
stos
or
insl
loopne
and
sub
xchg
xlat
push
movsb
jne
int
cmpsb
sbb
mov
push
push
add
hlt
sub
sahf
or
int
push
mov
test
jae
stc
add
es
xor
add
ret
lock
mov
adc
jo
pop
in
adc
add
mov
pushf
je
mov
fstps
xchg
imul
dec
inc
les
cld
pop
je
lds
vorps
mov
loopne
jnp
mov
mov
movsb
clc
xchg
push
add
sbb
fdivr
xor
xchg
outsb
pop
leave
pop
xchg
movsb
xor
and
or
xor
es
pop
int3
pushf
xchg
jge
stos
and
rol
inc
mov
xlat
mov
push
nop
icebp
jno
pop
inc
rorb
xor
iret
jns
add
leave
jnp
filds
std
pop
imul
je
cmp
rcrb
sbb
jl
pop
cmc
scas
je
jns
daa
les
adc
fidivl
push
mov
insl
xor
sbb
clc
push
movsl
scas
outsb
push
hlt
push
cli
pop
pop
mov
test
inc
stos
dec
addr16
and
add
lods
adc
pop
xchg
push
jp
js
xchg
xchg
jne
cmp
pop
xchg
outsl
outsb
pop
jmp
repz
imul
pusha
mov
cwtl
mov
mov
xchg
xor
sub
call
xor
xchg
daa
scas
test
or
subl
fbstp
inc
jbe
loop
shrb
iret
mov
ret
pop
aas
mov
out
clc
scas
ljmp
test
popf
mov
imul
or
xchg
or
and
cs
jb
nop
outsb
dec
sub
imul
mov
lds
sub
cltd
aaa
out
push
and
dec
add
xchg
add
ja
fsubrs
xor
jg
cmp
aam
ljmp
xlat
mov
sbb
inc
insb
dec
xor
nop
test
mov
fsubs
jle
pmulhw
xor
push
test
mov
shrb
rolb
sbb
in
and
mov
mov
pusha
les
lock
sub
jbe
adc
fmul
into
sti
push
xor
mov
std
xchg
cmc
shrl
pop
dec
sub
xor
inc
es
and
lahf
inc
mov
lock
inc
jl
pusha
int
outsb
pop
movsl
clc
push
jns
pushf
in
iret
push
xchg
jl
rcll
pop
mov
lock
fsubs
sub
mov
movsl
test
fcoms
les
pusha
pusha
or
xchg
inc
jle
sbb
insb
insl
mov
ljmp
loope
sub
je
inc
mov
movsb
cmp
icebp
cmc
push
push
push
scas
fsubrs
mov
jp
loope
xor
lret
cs
mov
sbb
dec
mov
loop
lcall
arpl
in
sahf
push
cpuid
data16
adc
and
fnstenv
fnstsw
hlt
aad
std
or
mov
mov
bound
jg,pn
inc
xor
ret
aam
mov
clc
mov
pop
pop
psadbw
push
ds
or
xor
add
nop
push
das
or
mov
dec
scas
sub
popl
push
int3
jne
dec
mov
lds
std
mov
lods
add
and
ss
jbe
mov
cwtl
insb
imul
inc
lods
testb
pop
xchg
mov
jnp
imul
or
cmp
repz
fs
aaa
or
pop
rclb
or
xor
shlb
add
jns
scas
add
add
inc
mov
hlt
and
and
jg
adc
loope
cmc
lods
and
out
pop
add
pop
scas
fldt
sbbl
lock
mov
out
mov
into
or
fcoml
dec
cmc
and
aam
cmpsl
xlat
cmp
sbb
push
pop
mov
cmp
fadd
and
sbb
cmpsl
iret
push
dec
loopne
test
lea
fcompl
pusha
cmp
insl
cmp
jge
cwtl
test
mov
cwtl
out
mov
jmp
rolb
aad
jg
push
sbb
filds
add
and
xor
add
dec
mov
sub
and
imul
add
mov
movsl
jecxz
cmc
sub
fdivl
sub
sub
sbb
ss
sarb
mov
mov
mov
add
pop
lea
sahf
test
aam
decb
sub
jns
cmp
lret
notl
int
or
dec
ficomps
mov
stos
imull
not
jmp
sti
cli
scas
push
subl
cmovae
adc
jnp
dec
sub
lcall
into
add
les
in
sbb
imul
sub
fistpl
icebp
pop
aam
pop
adc
jo
and
mov
mov
clc
mov
or
sub
clc
lret
mov
xchg
jo
dec
pop
and
cmp
push
fsubl
out
cmp
mov
mov
or
fbstp
stos
cmpsl
rcll
sbb
xchg
arpl
testb
jae
mov
lds
out
dec
lcall
push
cmpsl
jnp
insl
push
imul
cmpsl
jno
push
mov
ficomps
push
jle
out
adc
int
outsl
push
adc
mov
stos
ss
shrl
cmp
imul
sbb
xor
cwtl
sub
pushf
adc
cs
sub
movsb
dec
sbb
mov
mov
div
jns
xchg
gs
mov
hlt
inc
scas
insb
push
out
mov
xchg
ljmp
jno
inc
ja
add
mov
icebp
int3
test
jge
lahf
xchg
rorb
fwait
cwtl
je
outsb
fwait
pop
fs
gs
jge
inc
fnstsw
mov
lcall
fstpt
call
inc
xchg
adc
andb
mov
jns
sti
js
cmp
aad
lock
std
fucomip
scas
aad
cwtl
mov
mov
or
sub
jg
xchg
bound
pop
aad
pusha
scas
push
imul
cmp
int3
xchg
push
push
dec
mov
mov
js
sub
add
sarl
mov
push
xchg
jnp
loopne
jb
jmp
mov
mov
push
in
daa
fdivl
insb
rolb
pop
rorb
or
es
cmpsl
adc
add
sbb
fnsave
add
xchg
dec
mov
dec
mov
je
mov
inc
adc
push
or
inc
add
fistl
aaa
cwtl
mov
and
stc
shr
mov
and
or
sbb
insl
in
sahf
cs
or
inc
repnz
je
out
pop
ret
test
xchg
cmp
hlt
decb
mov
and
push
je
test
jne
notb
movsl
jns
cmpsb
loopne
imul
inc
pop
add
mov
scas
imul
push
ljmpw
jns
sub
xchg
out
std
mov
mov
lods
stos
add
shlb
test
and
sbb
inc
fisubs
outsb
sbb
or
out
in
movsb
popf
lahf
xchg
ficoml
sbb
xchg
fwait
pop
outsl
or
out
push
push
mov
xlat
and
and
or
and
xchg
jge
mov
fistpl
xchg
rol
add
jbe
sbb
lea
jp
addr16
mov
cli
stc
pop
lea
cwtl
fistpl
stos
clc
push
loope
push
and
icebp
cmp
and
inc
pop
fdivl
xchg
or
icebp
pop
and
out
and
adc
push
inc
arpl
jp
push
pushf
mov
repz
ss
js
mov
gs
jns
mov
shlb
or
outsb
add
std
call
inc
jne
sbb
sub
sub
mov
aaa
pushf
mov
sub
sbb
ja
int
adc
push
pop
inc
aad
dec
rcrl
jl
cld
shlb
call
push
cld
sub
pop
mov
mov
add
push
out
scas
fistpl
and
mov
or
jl
jecxz
mov
adc
sub
mov
dec
xor
sub
out
mov
js
addl
pop
mov
lods
pop
inc
xor
xchg
xor
mov
fidivl
adc
jnp
inc
adc
mov
xor
xchg
mov
ret
shl
movsb
nop
sub
mov
cmpsb
pop
pop
popa
pop
pop
pop
or
dec
sub
sub
pop
jle
push
mov
jne
xor
fldt
iret
mov
loope
adc
ds
dec
xor
ljmp
add
pop
jge
dec
arpl
pop
in
dec
or
fs
add
xchg
cli
cs
repnz
cli
pop
lret
xchg
mov
mov
inc
and
or
and
mov
sbb
add
inc
pop
aas
mov
pusha
jo
subb
stos
arpl
outsl
cmp
mov
sub
js
mov
les
jge
xchg
jbe
cmp
sar
scas
adc
gs
sub
cld
and
jb
push
add
pop
adc
add
sub
and
aaa
mov
pop
jne
pop
sarl
push
push
inc
xchg
sbb
das
sbb
in
dec
in
andb
hlt
sub
sbb
cwtl
mov
das
hlt
xchg
mov
sbb
and
addl
xchg
mov
push
push
fiaddl
rclb
fidivs
jg
jno
popf
sbb
test
jg
lods
out
ja
mov
sub
mov
jnp
sbb
jae
add
mov
rclb
jne
add
xchg
mov
cmp
sub
dec
add
cmovle
push
frstor
xchg
dec
push
ja
sub
lret
test
cld
cwtl
push
push
and
jno
imul
cmp
nop
lret
in
fcmovnbe
daa
lea
xor
fsubr
fidivrs
push
cltd
je
fmul
mov
dec
xor
out
andb
lret
lods
xchg
addb
andb
mov
jbe
inc
push
pop
stos
cld
push
out
dec
movl
je
jecxz
js
dec
js
out
cmp
or
lock
cmp
mov
xor
cwtl
dec
test
cmp
jbe
jns
sti
cmpsl
adc
fcompl
std
cmp
loop
dec
sbb
xorb
jecxz
xchg
dec
add
inc
and
fdivl
push
sub
std
ljmp
inc
mov
add
cli
int
mov
cmp
cs
pop
ret
nop
loopne
pushf
femms
lods
xor
fisttps
mov
push
dec
leave
mov
mov
mov
popa
or
icebp
imul
hlt
push
dec
mov
cli
imul
or
movsb
dec
pop
or
jp
lock
and
lea
adc
inc
mov
ret
sahf
xor
push
cmp
sub
in
jecxz
out
xchg
aam
pop
xchg
mov
nop
xchg
sub
sub
insb
adc
lret
mov
outsb
add
pop
and
mov
cwtl
mov
aas
xchg
mov
pop
jae
xchg
into
xacquire
pop
push
lahf
insb
aad
sub
lods
stc
out
jl
adc
dec
popf
jb
das
fs
hlt
aas
xor
popa
testb
pop
jnp
mov
mov
aaa
or
pop
or
ss
sbb
outsb
xchg
xlat
pop
adc
lds
and
mov
mov
insb
mov
test
push
push
pop
aas
imul
lods
cmp
call
outsl
cmpsl
and
sbb
gs
popa
out
mov
push
sub
int
addb
push
xor
je
mov
push
push
lods
dec
or
mov
push
rorb
sub
lahf
push
xchg
pop
stc
dec
mov
or
pop
popa
loop
xor
mov
adc
orb
sub
pop
repz
fxch
push
push
mov
inc
inc
jno
sahf
mov
push
movsl
lahf
inc
fs
xchg
mov
xchg
cli
je
mov
add
ficoml
inc
pop
pop
cltd
xchg
insl
mov
mov
or
sarl
jb
lds
add
xchg
sar
sbb
pop
push
push
test
mov
iret
and
and
lcall
xor
fdivrl
add
insl
or
push
arpl
xchg
jge
push
jb
das
cltd
rorb
or
jnp
cmp
popl
fwait
addr16
pshufw
lcall
cld
push
je
in
jae
insb
adc
nop
dec
inc
ret
pop
jae
roll
pop
into
mov
xchg
ljmp
test
jl
std
cs
pop
and
gs
sbb
clc
jmp
insb
sti
lods
jmp
sbb
fimuls
rorl
int
adc
mov
pop
fiaddl
cmp
daa
hlt
ret
cmc
mov
jmp
or
mov
sub
int
inc
std
sbb
sub
jne
or
push
add
push
dec
pop
xor
js
sub
ret
inc
mov
push
sbb
rcrb
jp
xor
ja
and
jae
out
shrb
ret
sbb
in
xor
jge
cmpsb
cmp
sbb
xor
or
mov
cmp
movsb
mov
xchg
jns
gs
mov
dec
scas
sar
or
rolb
das
cmp
dec
push
mov
gs
sbb
mov
sti
fidivl
imul
push
pop
add
and
out
mov
fadd
mov
inc
fwait
icebp
out
int
ficompl
pop
lea
jne
cld
inc
stos
aaa
out
out
add
ja
mov
cmpsl
loope
pop
sbb
pop
xchg
sub
fcompl
mov
xchg
pop
shll
or
lret
jns
push
outsb
and
cvtps2pi
push
cli
xchg
scas
xchg
cmp
or
push
test
jae
lods
push
xchg
jo
inc
call
adc
mov
or
push
pop
mov
dec
mov
rorl
sbb
sbb
ja
jle
mov
sub
out
or
xor
in
fists
cld
jle
mov
xlat
dec
push
pusha
sub
dec
int
adc
inc
in
jne
cltd
cs
cmp
mov
cmpsl
inc
lcall
in
out
cli
dec
enter
xchg
mov
in
pop
xchg
in
rcr
fwait
push
jl
push
pop
push
shlb
pop
cmpl
inc
jbe
pop
adc
and
inc
lret
jb
mov
sub
stos
mov
xor
mov
stos
rclb
xor
dec
iret
pop
mov
aaa
and
aad
cmovl
insb
and
mov
xchg
sub
test
pop
mov
pop
addl
xor
lds
in
jge
mov
mov
incb
cmp
std
push
shrb
cmp
rcr
insb
xor
push
mov
and
adc
jg
push
mov
pop
out
xor
cmp
icebp
push
movsb
leave
repnz
pop
adc
arpl
or
jle
dec
mov
pop
sub
sbb
inc
cs
and
insl
xchg
shll
test
mov
sub
jecxz
and
dec
mov
and
out
sbb
clc
cs
pushf
sbb
outsb
pop
xor
xchg
xlat
push
out
sbb
cltd
cmp
pushf
shl
roll
lods
rorb
aam
iret
fwait
addr16
or
int3
xchg
mov
shlb
dec
mov
pop
sbb
jnp
stos
addr16
rcl
cmp
cmpsl
std
out
and
sbb
clc
or
sub
fcompl
lock
adc
mov
call
mov
jae
into
incb
inc
cld
out
arpl
std
sub
mov
lods
aas
movsl
lods
dec
push
xchg
leave
lret
xor
push
and
repz
inc
sarb
dec
and
aam
in
push
lahf
movsb
jmp
aam
jecxz
mov
ret
lea
push
mov
lret
in
xchg
inc
outsl
std
mov
out
add
adc
mov
decl
inc
setno
push
and
sbb
xchg
xor
rolb
or
xchg
into
sub
push
mov
js
ret
cmp
xor
pop
cmp
ds
rcrb
xor
enter
xchg
jp
inc
cmp
lds
push
add
cmp
xchg
and
adc
jae
mov
lock
lret
ja
jge
sub
and
loopne
cld
sbb
cmp
push
pop
ds
pop
adc
nop
hlt
mov
call
jnp
or
ret
jne
add
out
pop
inc
dec
xchg
sti
fimuls
into
mov
test
mov
and
xchg
xchg
call
jno
xorl
mov
mov
or
or
dec
sbb
in
xchg
add
subb
pop
sarb
cld
sub
or
sub
add
rcrl
xchg
push
in
je
adc
xchg
mov
scas
repnz
adc
adc
push
incb
mov
add
pop
xchg
dec
insb
push
mov
jns
push
test
jmp
std
mov
dec
les
shlb
aas
flds
loope
aam
cmp
jae
xlat
ja
jle
out
aad
mov
inc
outsb
rclb
inc
inc
data16
sub
fsts
hlt
nop
cld
inc
mov
inc
dec
and
aas
and
rorl
mov
or
les
or
jge
xor
int
sbb
int
roll
negl
lahf
xchg
dec
and
push
xor
jg
jae
insb
lods
pop
ret
mov
mov
add
fcmovb
std
lahf
inc
lret
sub
in
or
aas
in
xchg
mov
lret
test
push
pop
adc
dec
add
in
int3
je
push
test
icebp
or
rcrl
cld
jle
jg
pop
add
jne
nop
ret
push
cmp
xor
mov
and
insl
into
dec
gs
inc
and
test
mov
aam
lret
xorb
and
ljmp
loopne
adc
mov
js
jo
lcall
test
cmp
in
bound
enter
and
adc
dec
icebp
mov
and
xchg
push
push
loop
movsl
xchg
movsb
xlat
add
xchg
mov
test
push
xchg
decl
dec
push
jo
mov
add
adc
jecxz
pop
mov
loope
and
aam
pop
enter
pop
test
mov
popf
ret
mov
xor
pop
test
lds
mov
mov
sbb
adc
aas
iret
insl
cli
pop
ljmp
pop
aaa
mov
test
cs
adc
lret
out
push
mov
out
arpl
lods
pop
lret
shrl
rorl
sub
gs
dec
xor
test
out
sub
aaa
push
and
stos
xchg
mov
sbb
sub
dec
aad
sbbb
fists
cmp
dec
sahf
pop
call
in
dec
repnz
cmpsl
lahf
aad
pushf
dec
loope
ja
daa
sub
out
cltd
addr16
xchg
frstor
lea
ljmp
sub
stos
cmp
icebp
xorl
addl
adc
mov
fistpl
dec
xor
jne
ja
dec
jne
xchg
xchg
enter
add
inc
pop
cmp
sbb
jmp
xchg
jnp
mov
jb
es
xor
ret
cli
add
loope
imul
jl
pavgw
orl
cmpsl
aas
clc
ljmp
out
out
test
stc
xor
fdivp
scas
scas
mov
es
push
xchg
sahf
rcll
lods
cmp
shll
jmp
gs
ss
xchg
or
mov
inc
jne
dec
mov
insb
inc
int3
cwtl
mov
mov
bound
pop
bound
idiv
xorb
out
sahf
fstl
bound
xlat
mov
mov
push
imul
push
ficomps
sub
das
sbb
push
out
mov
and
sbb
fidivrl
out
jne
insl
loop
lahf
sbb
imul
bound
xchg
add
push
pop
push
fisttpl
mov
aad
cmc
mov
jp
sub
mov
xchg
xor
push
adc
xor
pop
xchg
jae
mov
imul
sbb
insl
shrl
xchg
jnp
cli
xor
call
dec
test
jecxz
lds
sub
xor
bound
int
dec
mulb
push
add
cwtl
stos
cld
gs
add
pop
cwtl
adc
jge
imul
sub
xchg
outsb
push
aam
popa
aad
enter
push
std
sub
or
mov
pop
fadd
push
push
int3
push
sahf
es
jb
ret
lahf
out
jg
sbb
js
hlt
scas
adc
jmp
insb
pop
aas
stc
test
test
mov
in
jae
js
pushf
stc
js
xor
pop
or
push
sub
clc
mov
fsubr
cmp
icebp
and
cmpsl
mov
lahf
and
aas
or
dec
out
push
test
push
add
adc
pop
adc
lret
cmpsl
dec
mov
dec
and
push
test
mov
add
sbb
addr16
outsw
mov
insb
nop
pop
js
xchg
arpl
pop
push
ja
std
nop
cmc
xchg
jmp
or
xor
dec
sysenter
jns
adc
icebp
out
aaa
mov
lcall
mov
fimuls
decl
popl
std
pop
xor
ret
popf
mov
cltd
test
scas
pop
lock
and
gs
push
sbb
pop
lret
push
mov
je
shl
inc
movsb
add
data16
in
cmp
push
scas
loope
cmc
push
push
mov
cmc
xor
loopne
dec
xchg
pop
jbe
int3
mov
mov
mov
sub
stos
out
pushf
movsb
cld
or
inc
pop
iret
sub
dec
dec
xor
xchg
push
add
sub
addr16
inc
jnp
daa
or
mov
adc
rcpps
jecxz
fcmovne
xchg
daa
enter
xchg
pop
out
push
xchg
sub
xchg
dec
jno
test
jo
sub
mov
cmp
xchg
mov
adcl
lods
pushf
add
jge
jae
lret
fstl
dec
fildl
adc
pop
sbb
push
enter
jmp
pop
in
inc
mov
shrb
pop
scas
fsubrs
iret
addr16
dec
add
rcr
push
in
add
jg
loope
fiaddl
aas
xor
push
sbb
sahf
lahf
cli
mov
leave
push
in
push
test
repnz
into
in
mov
inc
push
das
aas
js
insb
stos
and
lcall
pop
adcl
pop
out
push
push
jmp
out
test
int
push
cmpsl
lret
xchg
ljmp
xchg
adc
jl
repz
out
and
sbb
pop
sbb
xchg
jo
pop
sub
ds
sub
popl
orb
ss
fildl
ja
mov
fsubs
xor
insl
aam
mov
sarb
mov
cmpsl
lahf
leave
or
xor
test
fld
ror
out
pop
xchg
add
icebp
pop
fwait
inc
mov
push
insl
stos
bound
std
lods
sahf
fsubs
push
xchg
add
stos
xor
pop
pop
stc
jmp
pop
sbb
out
mov
pop
add
inc
jno
lock
push
icebp
push
push
outsb
negl
imul
or
jb
pop
push
xor
loop
lahf
jnp
mov
jge
add
pusha
pop
imul
mov
mov
scas
sbb
jmp
xchg
add
mov
and
in
int
iret
sub
jle
xor
mov
jmp
adc
out
arpl
je
lret
bound
jp
imul
jb
inc
into
gs
shr
ret
xchg
jae
shlb
leave
push
mov
sub
fisttpl
jle
mov
xchg
mov
pop
imul
into
push
cld
shlb
leave
jnp
test
adc
imul
iret
icebp
js
and
mov
data16
lcall
fisttpl
out
popf
cmp
fisttpll
push
movsb
xchg
js
cmp
mov
push
jle
mov
lret
sub
in
push
jbe
ja
mov
cmp
imul
fwait
lahf
pop
scas
xchg
lods
xor
nop
push
mov
popa
mov
jge
in
jmp
clc
sub
mov
scas
lret
aaa
cmp
push
sub
ss
push
dec
jns
inc
add
daa
loopne
sub
push
push
jle
gs
pop
push
movl
dec
push
imul
enter
pop
xchg
nop
adc
jae
adc
sbb
stos
mov
add
and
xor
xchg
jmp
jno
insl
sbb
pop
fbld
pop
imul
and
in
in
lcall
pop
sarb
mov
aaa
mov
bound
js
mov
push
lds
xchg
mov
and
cmp
inc
and
andl
addl
xchg
lcall
pop
das
and
mov
popf
xchg
jno
inc
and
repz
arpl
cmp
das
int3
addr16
or
sbb
mov
push
add
cmpsl
lahf
cmp
mov
add
clc
xchg
xor
out
dec
stos
lock
mov
in
sahf
sbb
popa
stc
push
or
arpl
adc
pop
mov
xor
adc
push
pop
xchg
fcoml
push
in
add
inc
mov
dec
ficoms
std
jns
lds
sub
mov
sarl
int3
mov
movb
int3
adc
mov
push
call
gs
icebp
subl
ja
pushf
sbb
jns
xor
or
scas
movsb
stos
jge
jg
xchg
sub
xchg
push
sub
shrl
inc
and
pop
sbb
sub
shl
in
call
inc
add
jl
leave
jmp
sub
sub
and
roll
orb
pop
fldcw
xor
pusha
imull
push
arpl
fs
xchg
add
jp
cmp
insb
lret
mov
out
aas
sub
pop
loope
lret
clc
mov
out
or
imul
mov
out
jg
int3
std
mov
add
xchg
jae
mov
push
inc
insb
fadd
sbb
filds
or
dec
clc
pop
cmpsb
jb
fists
adc
and
and
out
mov
jns
rorl
es
mov
lret
adc
xor
jno
lahf
cmp
jns
mov
les
push
xor
ds
jp
pop
xor
mov
sbb
mov
mov
int
arpl
mov
sbb
xchg
sarl
mull
push
fistpll
outsl
adc
aas
outsl
test
mov
das
cld
aad
fimull
or
lea
push
sub
jb
int
mov
adc
stos
mov
pop
jl
fwait
push
les
xchg
movsb
les
sub
out
stos
test
sti
mov
push
and
cmp
push
mov
les
xchg
cld
sbb
mov
mov
mov
test
movsb
ljmp
xor
jmp
cmc
mov
pop
push
mov
inc
loope
cltd
inc
in
xchg
imul
decb
xchg
or
std
movsl
cmp
sbb
movsl
cli
sub
les
bound
push
push
sbb
mulb
inc
leave
sbb
pop
xor
adc
jb
and
cmc
test
jne
push
inc
lahf
fistpll
jg
negl
je
or
inc
dec
push
dec
jmp
push
jmp
push
cmp
mov
push
lea
sub
xchg
cmp
push
dec
xor
xchg
bound
add
iret
popa
insl
lock
sbb
add
xchg
cmp
pop
insb
es
cmp
and
xchg
adc
or
xor
aas
mov
mov
in
inc
dec
addr16
lea
outsl
idivb
and
cmpsb
mov
movb
outsb
clc
inc
inc
pop
sub
jl
or
mov
dec
out
mov
es
jmp
lcall
cmp
dec
sub
cmp
or
aam
jo
and
jb
xchg
popf
adcl
xor
leave
pop
or
cmp
adc
pop
push
xlat
scas
mov
xchg
push
into
shrb
mov
jle
fstpl
jno
adcl
jne
fldt
fistpll
andl
out
sub
cmp
and
test
adc
jo
idivl
xlat
jne
push
into
outsl
pop
cli
xor
cmp
cmp
dec
arpl
rolb
jmp
push
mov
or
adc
or
cld
pusha
jnp
in
pop
ljmp
fildll
lds
outsl
addb
jg
dec
inc
hlt
inc
mov
mov
into
scas
jmp
mov
js
pop
loopne
push
lds
mov
push
or
mov
push
cwtl
fsubrl
push
test
cwtl
iret
lock
pop
push
pop
aaa
push
sub
push
out
ret
dec
out
pop
pop
push
sti
pop
outsb
jo
xchg
lods
push
pop
aaa
nop
dec
test
adc
jno
fisttpll
sub
sbb
pushl
inc
push
xor
push
cmc
pop
sbb
jmp
mov
stc
loope
push
sbb
ret
mov
gs
es
mov
out
lds
jg
cmp
push
jbe
imul
and
mov
sarl
dec
cmpsb
and
es
cmp
xchg
mov
pop
mov
mov
dec
mov
loope
mov
push
xchg
mov
fidivl
int
lock
lcall
pop
decb
mov
mov
dec
sub
inc
scas
inc
cmpsb
lret
pop
popf
add
jp
imul
repz
cmp
or
fnstcw
and
rcrl
mov
inc
jno
inc
lret
cmp
movsb
pop
test
fmull
dec
sahf
jl
xor
cmpsl
lock
fidivrl
push
inc
repz
in
sbb
dec
cwtl
cld
cmp
inc
mov
insb
pop
sbb
mov
stos
pop
pop
sahf
repnz
pop
pop
jns
ds
popf
sahf
sbb
adc
loope
xchg
mov
hlt
fistpll
push
xchg
pop
jnp
sbb
aam
mov
add
cmpsl
cmc
in
sub
daa
cwtl
jo
cmp
xchg
mov
sti
push
dec
mov
mov
add
mov
lock
jnp
or
call
inc
xchg
imul
gs
imul
pop
jne
mov
jecxz,pt
dec
jmp
inc
sbbb
ja,pt
inc
mov
inc
mov
daa
fisttps
jmp
mov
out
inc
stc
out
mov
clc
push
mov
orb
fistps
xor
insl
cmp
neg
push
add
and
out
lea
sbb
cmp
in
jmp
jl
push
cmp
mov
mov
outsl
or
push
mov
outsl
jno
pop
in
les
xchg
dec
dec
or
mov
cmp
mov
sub
clc
iret
adc
repz
push
jns
imul
mov
and
adc
in
filds
mov
sub
cwtl
lea
mov
xchg
ja
loop
gs
add
add
mov
sub
shll
xchg
mov
loope
rolb
loope
push
xor
push
movsb
mov
inc
sar
loop
push
pushl
sbb
and
in
cwtl
jecxz
pop
xor
adc
imul
cld
pop
xor
sub
mov
mov
cltd
ret
out
notl
xor
push
loop
mov
jp
xor
clc
mov
je
call
test
mov
negb
outsl
bnd
dec
movsl
test
add
fisttps
xor
das
push
cltd
mov
pushf
rorl
mov
fldt
mov
ss
in
xor
fstpt
rcrl
popl
orb
inc
inc
lea
mov
int3
xchg
sub
out
dec
sbb
loope
pop
loopne
scas
pop
add
adc
movsl
cmp
cmc
stc
xor
mov
cmp
movsb
insb
out
mov
mov
bound
test
jmp
push
inc
aaa
mov
nop
adc
mov
icebp
lock
dec
pushf
arpl
adc
pop
scas
sub
sbb
mov
test
or
sarl
call
inc
mov
nop
into
jnp
lods
inc
hlt
aad
les
lret
jae
or
push
std
mov
dec
jge
pushf
jle
sahf
out
inc
clc
into
outsl
pop
mov
adc
and
and
jmp
loopne
cmc
jecxz
and
lds
cli
nop
test
mov
mov
or
repnz
bound
das
scas
xchg
push
mov
subl
loopne
add
ss
mov
inc
pop
jp
outsb
je
data16
jp
fisttps
lahf
jle
sbb
jl
cmpsb
or
jno
xchg
icebp
adc
mov
data16
sbb
shl
fld
lret
outsl
xchg
fdivs
cmc
mov
daa
and
stos
cwtl
test
mov
ja
and
sbb
test
pusha
cmp
jne
in
je
mov
or
sarl
add
fsubr
pop
iret
cmpsb
leave
popf
cmpsb
cmp
cltd
pop
add
ret
push
push
pop
xchg
and
cmpsl
jbe
cmp
and
cli
pop
xor
inc
lea
das
out
fwait
xor
movsl
sarb
faddl
cmp
test
outsb
sti
sbb
lret
sub
dec
mov
sub
in
cmp
out
cmp
arpl
xorb
xor
or
ret
addr16
clc
xorb
cs
sub
jnp
jg
popl
mov
adcb
enter
rclb
arpl
fs
aas
and
js
fisubrs
mov
dec
dec
cmp
je
xlat
cmpsl
nop
shl
push
gs
lahf
or
stos
cmp
push
lret
or
push
adc
or
mov
xor
push
data16
pushl
test
cld
mov
js
gs
psubsb
and
jo
lcall
lock
jecxz
add
cli
sub
adc
imul
cmp
inc
idivb
lock
dec
fcoml
mov
dec
daa
push
test
test
orl
cmp
xor
stos
xchg
pop
xor
dec
shll
mov
and
fst
adc
push
repnz
mov
mov
fdivrp
or
lds
pop
fwait
pop
test
xor
stos
pop
push
repz
aad
loop
cltd
shrb
gs
dec
fwait
push
and
aaa
out
push
pop
dec
mov
push
mov
js
cwtl
cmp
testb
cmp
repnz
push
and
add
sub
fldcw
into
xchg
inc
inc
jbe
cld
sbb
outsl
out
xchg
push
popf
scas
push
clc
xor
outsb
dec
lods
xchg
sub
je
rcrl
xor
push
push
pop
sub
repz
nop
jno
pop
pop
cmpl
sbb
testl
cli
inc
jp
cmp
pop
outsb
sub
or
gs
mov
icebp
cmp
mov
inc
lret
mov
inc
nop
mov
cmpsb
leave
pusha
pop
loope
cs
mov
gs
std
aad
cltd
xor
or
lcall
jb
and
imul
in
inc
xor
in
sub
cmp
lahf
push
push
les
subl
cmp
xchg
rcrl
xor
dec
sub
inc
mov
dec
xor
cli
dec
loopne
test
fsts
loopne
popf
inc
jge
cmpsb
mov
shl
sub
inc
push
inc
aas
aas
mov
mov
sub
nop
or
out
nop
jp
adc
or
jnp
mov
idivb
xor
hlt
dec
inc
mov
xor
xor
xlat
mov
push
cwtl
je
test
cmp
jecxz
mov
je
fcoml
mull
mov
cmp
and
mov
sub
sbb
jecxz
fcom
mov
push
xchg
lcall
out
test
inc
pop
mov
push
xchg
cltd
push
mov
adc
jns
sub
xchg
jnp
enter
cmp
inc
dec
addb
xor
movsb
jp
fnstenv
cld
lahf
xlat
dec
jbe
xchg
daa
inc
test
cli
ljmp
mov
mov
insl
pushf
aaa
lahf
scas
ljmp
data16
jb
popf
cmpsl
in
gs
jle
dec
sbb
sub
sub
inc
dec
cwtl
cltd
jg
out
daa
inc
dec
cli
rorl
or
add
jmp
cmp
or
push
sbb
mov
and
fnstcw
inc
aam
push
fbstp
pop
repz
lret
add
or
mov
push
mov
and
pop
inc
pop
jle
or
repnz
mov
out
into
in
scas
add
into
and
addr16
push
or
sbb
add
aas
pop
in
and
stc
lods
out
into
hlt
xchg
scas
ffree
call
rclb
call
add
push
sub
adc
mov
movsb
push
add
xchg
hlt
loope
mov
sbb
addr16
mov
addr16
clc
incb
lahf
sub
mov
sub
xchg
das
std
enter
pop
push
xchg
or
xor
adc
aam
divl
sub
push
inc
push
and
fcomip
in
lea
hlt
xchg
xchg
in
movl
jbe
lcall
shll
and
lret
inc
lods
jne
mov
cld
jo
jae
pushf
into
lods
enter
sarl
imul
popa
lret
xchg
lea
xor
shrb
gs
mov
jo
pop
xor
push
inc
loope
sub
mov
lret
cld
je
lock
out
push
stos
inc
jns
enterw
scas
jge
xchg
call
push
xor
sub
loop
push
test
inc
adc
dec
mov
push
or
ss
xor
mov
mov
adcb
scas
into
repnz
push
cli
adc
mov
daa
add
jmp
and
in
jnp
lcall
or
jno
and
dec
gs
jp
pop
imul
loop
pop
loope
insb
sbb
test
mov
mov
jns
ss
or
scas
xchg
adc
xchg
rolb
hlt
push
popa
inc
push
addr16
xchg
dec
fadd
cmp
addr16
dec
inc
fdivrl
jecxz
or
data16
jecxz
icebp
jb
push
loop
jae
and
sub
xlat
in
faddp
hlt
xor
dec
mov
pop
mov
xchg
aad
jmp
dec
in
xor
and
dec
repz
stc
arpl
xchg
iret
xor
out
xor
mov
add
inc
rcll
pop
andl
jns
out
mov
scas
xor
inc
xchg
sbb
add
xchg
mov
ljmp
dec
sub
lock
dec
add
or
add
jns
push
fnstsw
mov
imul
inc
or
mov
xor
mov
andb
inc
in
jno,pt
and
lret
jne
imul
and
cmp
or
sbb
fidivrl
or
unpckhps
sarl
outsl
adc
pop
cmp
nop
in
js
jne
adc
jno
pop
adc
dec
mov
sbb
popa
lcall
xchg
addb
inc
aas
xchg
fs
adc
scas
stc
popf
mov
arpl
and
popa
jns
cwtl
lret
push
or
sub
jp
jmp
pop
sbb
and
pop
add
sub
out
out
inc
xchg
xor
insb
pop
xchg
inc
dec
cmovns
fwait
imul
push
outsl
add
mov
dec
cmp
push
loope
sarb
pop
cmpsl
lret
pusha
push
mov
push
dec
pop
jle
jo
mov
shl
rorl
xor
push
imul
push
ret
mov
jne
loop
loope
cmc
jnp
and
jmp
jp
jmp
or
es
push
inc
js
push
pushf
sub
stc
mov
jns
jle
cmp
pop
or
mov
iret
cli
jmp
jno
mov
aaa
mov
mov
cmc
cmp
orl
or
hlt
or
adc
daa
loop
into
in
mov
jp
cvtps2pd
mov
dec
or
dec
arpl
cld
aas
inc
push
adc
loop
inc
arpl
sbb
test
inc
in
pop
push
mov
xchg
inc
jnp
and
mov
pop
outsl
lea
jg
pop
scas
call
jno
xor
ja
jecxz
out
xchg
lahf
xchg
xorl
lea
scas
or
hlt
jl
lock
pop
sbb
out
or
dec
mov
int
push
lret
scas
sbb
and
iret
and
fwait
lods
bound
stos
xchg
aaa
xchg
mov
xchg
and
aad
and
dec
aas
jge
fwait
scas
cmp
enter
mov
mov
out
sbb
adc
push
js
mov
scas
jnp
jns
push
repnz
jb
xchg
xchg
mov
jl
orl
sub
pusha
pop
sbb
scas
stos
addb
cmpsl
dec
shl
push
mov
jne
das
xchg
fmull
inc
push
adc
dec
stos
nop
cmovae
fsubrl
mov
ficoml
pmuludq
mov
outsl
add
push
cltd
mov
arpl
repz
inc
sub
fnstenv
sahf
lcall
push
mov
xchg
adc
dec
cs
jle
adc
pop
push
jb
fdivl
nop
jnp
outsl
xor
sub
jle
push
int
mov
jecxz
icebp
mov
sbb
mov
pop
cs
add
rolb
or
inc
mov
fs
movsl
jmp
call
inc
jmp
hlt
or
fmuls
mov
loopne
jmp
sbb
mov
mov
repz
pop
cmc
enter
xor
or
sub
into
inc
cltd
popa
fisubrl
test
sbb
addr16
mov
ret
fstps
iret
pop
aam
pusha
mov
lea
inc
mov
mov
push
lcall
inc
fidivrl
dec
repz
mov
ds
xchg
inc
xor
orl
inc
inc
std
dec
das
stc
daa
inc
lcall
repz
jne
xchg
bound
adc
repnz
aam
aaa
into
out
sbb
je
sar
dec
or
dec
fnstsw
cmpsb
jecxz
sbb
call
lea
jle
sub
enter
scas
in
cltd
sbb
es
mul
fs
loope
add
sbb
push
loope
or
xchg
sub
fcomip
push
lods
ficompl
add
arpl
cmp
adc
jb
rorb
outsb
push
xorl
in
fnsave
pop
jmp
jne
fcomi
sub
mov
xor
pop
push
jb
mov
push
aad
push
in
lods
out
sti
add
ret
mov
mov
insb
xchg
push
jmp
ljmp
jnp
xor
dec
outsb
xchg
cwtl
fimuls
push
jg
sbb
clc
jg
adcl
cmp
outsb
pop
sbb
xchg
out
dec
gs
adc
aam
add
lret
xor
pop
call
and
jbe
push
adc
push
sub
or
inc
dec
mov
fcompl
cltd
dec
sbb
scas
outsb
nop
add
ss
outsb
add
xchg
mov
mov
and
pop
pop
adc
out
mov
fsubp
inc
and
out
adc
shl
adcb
in
insb
aas
mov
or
mov
pop
dec
std
fsubrs
xor
inc
push
out
fidivl
lcall
nop
inc
leave
mov
incl
inc
inc
push
icebp
adc
insb
sub
add
push
icebp
pop
daa
pop
mov
xor
xchg
and
ficomps
outsb
ud1
cmp
daa
and
xor
mov
test
fwait
sbbb
mov
mov
dec
inc
imul
xchg
mov
lcall
aad
push
lds
inc
ja
mov
cwtl
shrl
jo
jle
mov
jp
pop
ss
js
mov
iret
inc
sub
add
dec
xchg
in
push
jae
int
push
or
jne
sub
lock
inc
cs
data16
out
sti
push
sarl
adc
lret
mov
sarb
call
sbb
mov
incl
inc
mov
mov
scas
lds
dec
pop
imul
inc
xchg
and
mov
loop
jg
mov
mov
xchg
insb
fidivrs
mov
jmp
sub
xchg
pop
movsl
fldcw
xorb
iret
ds
mov
mov
inc
outsb
fcoml
bound
dec
test
aad
shll
sbb
push
pop
add
daa
push
inc
ja
fwait
xor
xchg
stos
sar
mov
icebp
fcmovnbe
dec
inc
push
sbb
mov
adc
int3
mov
out
jle
sahf
mov
sarl
jb
or
jnp
gs
ja
aaa
stos
push
cmp
stos
rcrb
lahf
or
fdivs
mov
sub
in
and
mov
fs
push
mov
outsb
xor
add
dec
xchg
ljmp
inc
jbe
loope
daa
clc
in
pop
add
mov
jae
movsb
stc
and
clc
stos
mov
in
arpl
mov
and
shll
dec
or
out
imul
pop
cmpsb
data16
pop
sarb
sti
fs
ja
mov
mov
call
push
popf
cmp
mov
orb
mov
out
or
ds
mov
mov
push
loopne
jg
mov
xchg
xlat
rcrl
scas
test
es
or
mov
adc
nop
aad
fisubl
inc
xchg
notl
lret
out
push
es
in
shll
jo
es
xchg
dec
xor
cmc
cmpsb
dec
outsb
fidivl
outsb
popl
fucomip
scas
clc
stc
jmp
or
xchg
lds
jl
xor
clc
stc
ret
pushf
sub
xor
rorb
scas
repnz
push
pop
or
mov
insb
mov
xor
incb
out
je
stos
aad
cli
inc
cwtl
fs
cltd
lcall
imul
dec
jp
insb
movsl
sbb
or
into
xor
aas
test
mov
cmp
xor
and
and
push
sahf
icebp
push
jb
fidivl
or
xchg
enter
jg
lret
loop
daa
loop
aas
mov
inc
adc
pop
add
and
jnp
jbe
idiv
das
adc
fsubrp
mov
mov
inc
mov
insl
into
and
push
fsts
mov
stos
push
rep
jl
lock
loopne
dec
and
fistps
add
shrl
pop
and
xchg
mov
repnz
jne
xchg
jbe
scas
mov
mov
pop
sub
mov
dec
jne
mov
imul
lahf
xlat
or
mov
popf
lock
cmpsl
mov
adc
aam
arpl
sbb
out
pop
pop
lret
cmc
loopne
test
mov
lock
into
in
shrl
xchg
xor
cltd
lock
mov
sti
je
test
jle
xor
mov
mov
fisttpll
pop
arpl
sbb
push
movsb
mov
loopne
xlat
xchg
pop
scas
lea
test
notb
mov
fldl
out
add
cmp
sahf
cmp
insb
stc
mov
loopne
test
jmp
popa
xor
mov
sti
mov
gs
scas
imul
xchg
pop
lahf
pop
incl
call
mov
pop
addr16
imul
es
dec
enter
dec
pop
stc
jae
xor
aas
mov
pop
push
sbb
xchg
dec
bound
and
sub
aad
lret
loopne,pt
loopne
lcall
daa
outsl
pushf
cmp
clc
imul
and
cmp
or
and
mov
inc
cmc
imul
and
cmpsb
xor
pop
or
js
nop
aad
aaa
enter
fmull
rcrl
and
dec
and
out
jae
dec
imul
icebp
int
pushf
dec
sbb
test
lods
es
add
lret
stos
mov
push
adc
cmpsl
movsb
cld
push
xchg
inc
fcmovnb
mov
adc
lcall
xorb
adcb
and
or
or
lods
mov
cmp
xchg
and
leave
pop
int
incl
or
test
jnp
cmp
lcall
xchg
or
mov
mov
lods
sahf
lea
jmp
mov
or
addl
sbb
mov
add
sbb
cwtl
jno
out
xchg
clc
std
inc
jnp
popf
mov
mov
mov
repnz
push
rcll
lea
xlat
ss
popa
and
nop
call
adc
push
idivb
adc
aad
das
movsb
dec
sti
negb
mov
push
rorl
sbb
divb
mov
lods
into
call
aam
fnstsw
test
inc
js
mov
or
mov
push
pushf
dec
push
loop
and
movsl
sub
mov
push
adc
enter
orl
lock
push
loop
sbb
adc
pop
aaa
movl
mov
dec
cwtl
xor
scas
add
lds
or
shlb
enter
dec
aas
lcall
xlat
sti
insl
mov
les
inc
adc
fsubrp
adc
dec
jns
mov
or
mov
insl
mov
pop
idivb
testl
xor
movsl
jecxz
lods
arpl
dec
and
cmc
sub
jbe
ss
fnstenv
mov
jb
lret
scas
lret
xchg
push
lock
jecxz
add
mov
data16
pop
mov
std
cmp
cmp
sbb
adcl
subps
cli
fs
adc
push
inc
mov
testb
imul
adc
fistl
rclb
jns
popa
sub
out
push
stc
aad
mov
sub
sbb
enter
pop
lds
cltd
xchg
movsl
sbb
shll
push
or
cmp
sub
leave
jmp
negl
test
icebp
lods
xlat
and
jmp
mov
mov
daa
jl
loope
in
xor
adc
dec
leave
inc
aaa
mov
jmp
jmp
loopne
loopne
push
shrl
ds
mov
fcompl
mov
jle
fsts
push
inc
shl
mov
or
mov
xor
push
dec
ljmp
mov
fisubrs
mov
popa
daa
fwait
ljmp
lods
jecxz
ja
cmp
push
jnp
pop
or
pop
mov
cmc
xchg
push
cmp
cmp
sub
mov
jp
aad
out
into
mov
add
mov
divb
and
dec
out
movb
inc
or
sbb
sbb
inc
out
fdivrl
or
clc
and
insb
and
sahf
mov
in
dec
xorl
push
jne
push
pop
int
mov
xchg
dec
jle
call
sbb
and
xchg
lods
cmp
loope
ljmp
pop
hlt
ret
mov
push
es
xor
lds
mov
xchg
shr
push
or
sub
fcoml
ret
or
mov
stc
in
adc
jmp
dec
xchg
cmp
mov
daa
cmpsb
dec
pop
lods
push
andb
mov
aaa
ret
pop
dec
mov
test
mov
adc
push
jo
jne
out
arpl
jge
push
pop
test
std
or
and
xchg
cwtl
xchg
orl
mov
sbb
fdivrl
add
push
inc
jns
pop
and
mov
push
jo
fs
repnz
jae
xchg
outsb
movl
xchg
dec
bound
mov
jmp
ja
xor
hlt
jle
adc
stos
cmpsl
jb
sub
ret
jl
call
mov
lret
mov
imul
sbb
ret
clc
mov
jp
mov
test
pop
sbb
pop
mov
jle
push
xlat
sbb
in
sbb
loop
lods
push
into
les
lea
cwtl
mov
adc
push
mov
sbb
test
xchg
call
insl
daa
bound
jbe
and
inc
inc
sar
sbb
push
iret
pop
movsl
into
mov
sbb
inc
dec
in
pushf
int
mov
and
pop
lods
pop
decl
sbb
fcmovbe
cli
mov
in
mov
xlat
cmp
aas
lods
push
lods
push
inc
jp
mov
jl
and
daa
rcrl
xchg
rorb
mov
inc
fs
enter
test
aaa
insl
cmc
cmpsl
adc
pop
mov
push
pop
jl
add
stos
cmp
sar
lcall
adc
add
mov
dec
and
add
cmp
lea
add
push
sub
sub
fwait
mov
sbb
jo
jbe
mov
mov
and
adc
mov
cmpsl
aad
fnsave
imul
das
xchg
push
fwait
int
imul
dec
inc
sub
jo
inc
shr
cmpsb
fistpl
dec
pop
cmc
cmp
add
xor
cltd
fsts
xchg
xlat
sub
cltd
enter
test
sub
addr16
icebp
mov
cld
mov
lcall
push
fbstp
jg
lea
adc
scas
fst
mov
sub
ss
push
andb
mov
mov
cmpsb
mov
aad
pop
sbb
adc
fbstp
mov
ret
sub
jb
xor
cld
sbb
and
fucomi
aaa
push
fimull
loopne
mov
jbe
add
mov
addr16
lods
push
out
jg
loopne
call
nop
xchg
imul
repz
test
mov
ficomps
push
inc
adc
and
sbb
jb
and
dec
sub
aad
popf
fstpl
mov
mov
sbb
push
or
stos
add
rolb
xchg
movsb
fcoml
out
jae
xchg
pushf
lods
idiv
dec
xor
inc
mov
sahf
xchg
inc
mov
fistpl
adc
xchg
xor
pop
jmp
lcall
cmp
sbbl
cmpsl
dec
lea
lods
xchg
lret
call
pop
pop
loope
xor
out
lret
leave
fdivr
mov
xor
xchg
sub
in
scas
mull
jge
loopne
pop
mov
imul
xchg
divl
lret
inc
addr16
pop
mov
mov
ret
jg
xor
cmp
pop
cmp
push
lahf
adc
push
push
or
popa
scas
or
ljmp
jle
add
test
push
fs
cs
cmp
xchg
pop
test
pop
adc
pop
test
sub
idivb
cli
pop
fadd
cs
cmpsb
sub
or
into
scas
jnp
addr16
scas
out
lcall
daa
lods
cmp
daa
xchg
nop
jo
in
jmp
and
rcrl
aad
adc
es
pop
add
jl
mov
xor
sub
dec
jmp
cltd
push
lock
stc
sti
arpl
stc
iret
mov
and
inc
or
cmp
ljmp
and
cmp
cmp
mov
lods
xor
jb
sub
or
sub
mov
mov
push
dec
scas
sub
add
sbbb
xchg
push
iret
push
mov
mov
stc
lret
repnz
fwait
jbe
xchg
xor
loopne
jne
call
fmulp
push
cmc
inc
sahf
mov
and
mov
mov
and
fldenv
jle
subl
subb
cmpl
ja
mov
outsl
lcall
mov
sahf
mov
lahf
fdivrl
mov
jbe
pop
mov
xchg
mov
stos
ljmp
lcall
test
mov
leave
pushf
xchg
push
rorl
jmp
add
pop
cmc
je
int
out
adc
popf
cmp
pop
in
mov
pop
xchg
mov
addb
rcrl
rcrb
lods
out
mov
mov
add
insb
xchg
dec
fs
mov
sbb
rcll
pushf
jb
insb
or
or
fdivrl
fisubs
mov
add
sahf
xchg
or
xchg
sub
xchg
or
pop
push
cli
xor
jo
mov
cmpsb
js
shlb
push
push
mov
xchg
or
push
ret
orl
sbb
mov
aad
jecxz
jb
push
sbbb
shll
enter
lods
movsl
call
shrb
fs
or
shrb
or
sub
push
les
in
push
arpl
bound
aam
jle
frstor
call
repz
out
and
and
pop
std
imull
push
pop
aad
mov
cld
loope
jle
cmpsb
fimull
push
cmpsb
sub
mov
cmp
sub
fcompl
adc
and
cmp
mov
mov
push
ljmp
adc
add
mov
test
cltd
pop
pop
jp
pop
sub
xchg
leave
aaa
cmp
ret
inc
xchg
jo
dec
xlat
jnp
mov
jle
push
inc
aaa
push
sahf
std
inc
int
sub
mov
adc
or
pop
lds
xor
ficompl
xor
xor
mov
mov
mov
add
push
xor
cmpsb
clc
push
mov
jb
jo
push
sub
xlat
lret
lret
ja
dec
or
stc
sbb
imul
xchg
call
scas
stos
pop
in
loopne
xchg
push
loope
ret
mov
dec
mov
xchg
jns,pn
fcmove
nop
and
adc
mov
jg
jle
push
cld
and
push
dec
cmpb
xchg
pop
jae
imul
js
scas
or
or
out
mov
and
adc
mov
sbb
push
push
test
insb
pop
pop
jnp
incb
xor
enter
out
xor
push
pop
in
push
xchg
stc
jbe
mov
cmp
push
dec
sahf
cmp
inc
xchg
sub
lods
inc
cmp
mov
insl
call
fmull
aas
icebp
cmp
xchg
mov
les
neg
pop
loopne
adc
ret
out
cwtl
mov
or
inc
imul
inc
jbe,pt
gs
pusha
jg
add
add
pop
sti
lds
in
pop
out
sub
xor
testb
clc
adc
lret
sbb
cmc
add
add
rorb
int
ja
pop
testb
lds
xor
and
imul
repz
xor
leave
xchg
xchg
mov
call
add
fcmovnbe
popa
rolb
insb
ret
test
aad
add
test
aaa
sbb
inc
je
lahf
jmp
inc
idivb
lds
xchg
jl
mov
mov
cmp
sub
movsb
mov
shll
std
jmp
out
dec
fisttpl
xchg
push
stc
pop
test
mov
sub
gs
fs
sbbb
cmpb
aas
jge
mov
dec
shr
push
pushf
mov
sbb
or
mov
add
push
cmp
bound
pusha
shlb
not
aam
std
mov
mov
ret
xchg
cmc
or
cmp
push
jmp
cmp
insb
mov
mov
xchg
mov
loopne
cwtl
and
push
leave
nop
cmpsl
ret
mov
sub
int3
out
cmp
mov
mov
lds
sbb
adc
mov
xchg
ja
das
mov
shll
lds
or
push
imul
push
cld
daa
pop
cmp
fisubrs
push
mov
sub
sbb
mov
dec
mov
cmpsb
in
or
xchg
push
arpl
movsl
pop
cmp
mov
roll
add
inc
jecxz
jle
ret
aas
les
xor
out
iret
or
ficompl
jbe
xchg
or
into
mov
loope
pusha
push
inc
jl
lods
pop
fistl
mov
cmp
and
mov
inc
sbb
adc
iret
cmp
jne
pop
test
xor
xchg
mov
sbb
dec
xor
int
cmp
xchg
jecxz
jno
popf
icebp
push
daa
rcrl
add
sub
leave
mov
ljmp
addr16
and
sbb
repnz
push
mov
xor
aad
arpl
fldcw
clc
cmpsl
hlt
xor
dec
pop
arpl
cmp
lret
push
mov
pop
push
dec
cltd
push
inc
and
out
inc
push
jg
rcl
idivb
xor
dec
in
loopne
xchg
add
push
xchg
insb
and
mov
xor
lock
jne
and
lods
leave
mov
sub
aas
push
dec
aaa
test
rol
mov
jle
pop
mov
pop
pop
adc
sarb
scas
insl
icebp
mov
or
dec
adc
loope
hlt
outsl
test
push
xchg
daa
jae
fisttpl
dec
xor
xchg
int
leave
cmp
jae
sub
mov
cmp
push
and
and
xor
sub
xchg
sbb
lods
cmc
lds
xchg
insl
jne
dec
in
gs
lods
xchg
lea
mov
aam
push
inc
sbb
cmpsb
xchg
mov
push
and
xchg
dec
cltd
adc
ljmp
cmpl
add
adc
cmp
dec
push
sub
mov
fildl
out
outsl
in
testl
or
xchg
sub
fstps
cltd
aaa
xchg
shll
fwait
gs
test
xor
pop
push
sbb
cmc
jmp
les
lcall
test
int
insb
push
sbb
dec
mov
lock
insb
mov
cmp
or
stc
mov
ret
cs
stc
jb
jb
push
movsl
std
sahf
dec
cmpsl
std
or
ja
add
xor
out
les
js
mov
add
gs
mov
push
mov
dec
cld
out
ret
xchg
inc
add
clc
xlat
or
stc
movl
sbb
enter
inc
dec
sbb
mov
jno
fcomps
js
jne
jge
adc
rcrb
sbb
out
jae
or
stos
jbe
imul
or
clc
in
fsub
mov
ret
push
loop
push
adc
add
loope
xchg
mov
push
pop
adc
ljmp
adc
push
lods
jmp
mov
or
cli
test
imul
push
lods
push
jne
xlat
inc
or
in
push
push
addr16
push
fbld
inc
jae
outsl
fidivrs
rolb
sbb
movsl
outsb
inc
stos
scas
adc
in
add
adc
mov
pop
jecxz
cltd
xchg
repnz
mov
mov
ret
ret
xchg
inc
das
movsb
fwait
adc
fisttps
jmp
insl
insb
incl
test
lahf
add
xchg
repz
loop
lds
mov
mov
push
mov
jae
jmp
cltd
repz
popa
fstl
pop
xor
sbb
lods
push
stc
cmp
cmp
push
inc
je
and
and
or
lods
mov
xor
rcr
sti
sbb
stos
and
scas
arpl
outsl
repnz
das
sub
test
leave
lods
or
dec
mov
mov
test
ret
fcomps
pop
inc
fwait
xchg
divb
aas
mov
sub
lds
outsb
scas
push
rol
es
jle
xor
inc
enter
pop
and
mov
sub
sub
imul
leave
jge
cs
sbb
or
xorl
adc
fisubrl
dec
xchg
stos
mov
shl
pop
mov
push
xchg
dec
add
dec
ror
dec
fsubp
mov
inc
jne
dec
sub
dec
data16
mov
movsl
push
sub
xor
jg
std
mov
clc
insb
mov
je
cmp
jp
dec
dec
cld
jne
mov
fdivrs
adc
jge
je
lret
stos
fists
lret
pop
lea
xorl
into
push
stos
scas
push
test
push
popa
xor
call
test
rolb
lds
mov
pop
pushf
test
xor
pushf
add
add
cld
pop
push
dec
sahf
mov
or
pop
adc
mov
rcrl
xchg
push
xchg
out
insb
xor
cmp
pop
aaa
roll
xchg
mov
lret
dec
jecxz
or
int3
push
pop
imul
pop
cld
lods
jo
sbb
das
cmp
icebp
dec
outsb
dec
sbb
in
adc
icebp
xor
in
addl
sti
xchg
lds
pop
jnp
lds
fnstsw
out
dec
movsb
adc
ret
xor
sbb
or
or
popa
and
cmp
cmc
nop
sbb
test
cmp
xchg
call
js
outsb
push
repnz
mov
out
push
jl
pop
pop
icebp
shl
loop
or
movsb
add
inc
adc
idivl
or
cmp
mov
rcrl
lock
dec
inc
lahf
inc
outsb
dec
das
aad
or
inc
mov
xlat
jb
outsl
xor
push
mov
gs
stc
cmp
push
into
jecxz
mov
push
loopne
sarl
repz
insb
in
push
pop
in
idivl
fildl
js
ret
inc
push
jmp
testl
hlt
and
push
cld
jl
pusha
or
leave
outsl
inc
push
scas
nop
out
mov
call
dec
jmp
sbb
loope
xor
pushf
and
sahf
insl
mov
pushf
stc
push
push
out
test
push
jne
mov
into
insb
cmp
ret
jae
inc
arpl
pop
out
and
adc
testl
inc
jne
sub
fsts
test
sub
push
arpl
add
ret
push
xchg
scas
incl
dec
fwait
adc
sar
hlt
icebp
xchg
mov
stc
sti
or
xchg
and
sbb
lahf
cmp
mov
ret
push
lahf
add
jl
jnp
xchg
xlat
fidivrs
cmp
cmp
je
das
nop
or
push
adc
jo
es
dec
cmpb
inc
sbbb
sbb
and
inc
out
and
jae
loop
nop
sbb
inc
clc
ljmp
adc
lahf
xlat
add
jae
hlt
mov
sub
push
adc
cmpsl
mov
out
add
add
mov
fisttps
mov
xchg
fildl
cmp
jns
nop
fildll
adcl
xchg
xchg
and
stos
lods
jmp
mov
dec
aad
jge
pop
ret
bound
dec
rorl
repnz
pusha
jne
xchg
xchg
test
dec
aas
push
cli
pop
mov
push
bound
sub
jmp
mov
int3
int3
jo
popa
pop
xchg
dec
stc
popa
mov
inc
dec
cmp
xchg
rcr
call
stc
mov
lds
or
add
lahf
push
sub
imul
lock
ficoml
push
mov
cld
out
jnp
or
pusha
aad
jbe
mov
or
inc
imul
xchg
jle
cwtl
pusha
dec
rolb
xchg
push
xchg
and
jns
push
cs
xchg
fsub
repz
fucomip
aad
pop
stc
mov
lods
inc
fcomip
sbb
jecxz
add
fisubl
and
jg
popa
negl
inc
xchg
fstpt
dec
int
loop
data16
into
popf
sarl
lret
fisubl
fdivs
mov
inc
or
cmp
dec
out
shll
and
es
movsb
icebp
sub
mov
daa
stc
imul
push
imul
xor
or
outsl
lret
rcl
fcoms
arpl
cltd
sub
xor
pop
jo
cmpsb
jbe
push
jecxz
push
mov
aas
push
movsb
cmc
jge
mov
mov
std
sub
lcall
adc
std
movsb
pop
jbe
ud1
push
fiaddl
pop
add
negb
sbb
imul
xchg
mov
inc
in
testb
dec
outsb
lods
iret
cmp
decb
ja
pop
int
hlt
repz
int
test
jb
fstpt
sbb
mov
cld
jbe
mov
cli
addr16
inc
xchg
cmpl
sbb
clc
push
jbe
adc
xchg
mov
mov
xchg
push
add
inc
ja
mov
and
icebp
sbb
jmp
es
fistpll
push
sarl
dec
repz
shr
adc
mov
dec
pop
into
lret
test
and
dec
sahf
jns
movsl
cmc
test
cmp
mov
cmpsl
push
shrl
fsts
fwait
xlat
dec
aam
pop
imul
fisubrs
repz
das
test
xchg
sti
mov
dec
adc
icebp
xor
ljmp
mov
xchg
lods
imul
sbb
iret
out
push
test
lea
loope
sbb
mov
jns
addr16
je
jno
and
add
sub
shrb
jl
aam
cld
aad
popf
addr16
adc
sarl
fcom
mov
fmulp
pop
or
adc
addr16
push
mov
push
ret
mov
or
jns
loopne
outsl
imul
repz
lcall
jmp
sub
add
lods
pusha
out
into
push
or
xchg
daa
inc
mov
sub
xchg
lock
sbbl
push
inc
ss
pop
dec
dec
les
mov
ja
jp
xchg
stos
sbb
xor
push
or
adc
das
cmp
xchg
sub
xchg
cltd
ficoml
sub
iret
in
or
les
mov
add
gs
std
sti
sub
addr16
mov
ss
stc
imul
stos
or
roll
pop
fcoms
outsl
inc
push
sub
mov
and
xchg
fildll
outsb
lahf
xor
xor
or
andb
fwait
aaa
xor
int3
enter
jecxz
sub
stc
test
and
iret
repnz
cmp
mov
cltd
mov
gs
jno
lret
scas
cmp
and
outsl
adc
bnd
mov
mov
lcall
sub
lahf
jne
xchg
stos
pop
out
testl
lods
push
cmp
sub
mov
pop
pop
mov
xchg
leave
inc
mov
out
sbb
mov
into
scas
inc
imul
imul
or
test
mov
pushf
out
cmp
lods
inc
jmp
sti
fptan
mov
mov
cwtl
cmp
pop
and
sbb
or
lahf
popa
repz
jne
daa
dec
dec
jl
fisttpl
xor
jmp
xor
or
push
fadds
mov
imul
sahf
mov
xchg
pusha
or
pop
push
stos
cld
inc
adc
sahf
in
ds
xchg
lret
lahf
sub
cmp
adc
jl
inc
icebp
mov
fs
aas
dec
test
mov
data16
shl
fmulp
loopne
xor
add
cmp
enter
and
xlat
lahf
adc
sti
movsb
jecxz
inc
push
imul
and
cs
into
add
lret
mov
mov
mov
addl
add
or
pop
in
add
lahf
jle
in
add
and
orb
sbb
push
xor
fsts
and
sbb
mov
lods
pusha
stc
lret
ja
jno
and
insb
dec
add
dec
cmp
sbb
cmp
cld
and
fdivrs
mov
mov
mov
movsb
xor
cmc
orb
test
int
ds
inc
imul
jmp
cmp
jne
xor
mov
lret
out
repz
mov
sub
pop
ret
roll
xor
popf
jbe
inc
data16
shrb
fsubl
stc
xchg
ss
pop
lcall
pusha
ja
sub
or
into
decb
int
xor
fistl
leave
mov
ljmp
mov
push
dec
movsb
inc
clc
push
add
sbb
call
sbb
xorl
rorb
pop
mov
aas
loope
out
xor
sub
enter
addr16
lea
dec
aaa
divl
cltd
dec
push
mov
inc
and
push
sub
mov
adc
dec
sbb
push
stos
inc
sti
and
xchg
nop
mov
xchg
lret
fisubs
sbb
in
or
fnstcw
popa
dec
mov
or
mov
fs
and
mov
pop
fimuls
push
rolb
pop
xor
inc
cmovnp
inc
shll
jb
mov
ja
mov
ljmp
popa
sbb
cld
inc
xchg
in
ljmp
sbb
popf
dec
fucom
bound
xchg
push
cld
cmp
fcoml
cmp
insl
lock
push
ljmp
data16
mov
mov
or
mov
xor
xchg
adc
and
xor
dec
stos
add
fldl
rolb
sub
add
pop
mov
mov
insb
cmpsl
xchg
leave
jmp
xchg
jmp
inc
fisttpl
lea
data16
push
popf
shlb
sub
lods
iret
shll
and
int
xchg
jg
sbb
mov
or
sub
lods
xor
icebp
push
cmp
inc
andb
scas
call
mov
nop
pop
lock
mov
mov
fstpt
dec
out
aad
xor
push
inc
movsl
push
mov
jle
repnz
xchg
cltd
ret
lahf
xchg
or
add
and
xchg
xor
addb
stos
mov
in
repnz
push
loopne
clc
dec
jge
add
pop
in
or
xor
sub
test
or
sub
push
cmpsb
jmp
lret
cs
fwait
mov
push
rcrb
mov
mov
lods
dec
xorl
or
mov
or
loopne
xor
out
lods
cmp
aad
lcall
sahf
push
or
insl
cli
pop
jae
or
or
imul
push
dec
cmp
ret
stc
or
test
adc
test
lods
fiadds
push
stos
stos
cmp
pop
sbb
cmp
cmpb
jae
inc
lret
mulb
rol
and
mov
leave
push
add
jne
jge
pushf
into
hlt
hlt
mov
fstps
addr16
incb
sub
in
jb
push
test
jne
das
lea
cli
sbb
imul
aam
push
cmp
in
adc
test
jae
mov
imul
and
lock
sbb
dec
fdivrl
cmp
out
fbstp
ficompl
and
push
shl
dec
movsb
push
push
fwait
lcall
sbb
sbb
mov
mov
sub
push
add
hlt
jmp
xor
imul
and
shll
cmp
lret
mov
dec
addb
pop
jge
pop
rcrl
mov
inc
push
clc
lcall
mov
mov
inc
push
inc
jbe
xlat
imul
ss
repz
daa
jnp
outsb
lods
sbb
ljmp
cltd
aad
loopne
test
mov
xor
jnp
jb
sbb
hlt
mov
pop
cmp
cmp
jne
pop
add
dec
inc
sub
ret
fistl
call
cmp
orb
repz
jno
ja
insb
je
sub
cmp
ret
inc
repnz
sub
xor
mov
cltd
push
imul
adc
xchg
fcomi
dec
psubusw
mov
xor
movsb
push
into
xchg
sub
out
out
insl
sbb
ss
mov
dec
fwait
add
pop
inc
jae
rclb
add
mov
hlt
mov
add
jmp
xchg
icebp
dec
and
sub
bndstx
push
leave
sub
mov
in
lods
mov
sbb
sti
mov
lret
test
repnz
outsb
push
ss
inc
fistps
iret
cmp
outsb
and
adc
xor
ds
stc
sub
pop
les
in
stc
xchg
cmp
mov
cwtl
and
mov
mov
sti
or
sbb
mov
ret
roll
push
add
out
loope
imull
pop
gs
pop
in
jge
mov
jno
out
jae
lock
or
push
data16
mov
add
decb
jecxz
out
cmp
cmc
rcll
loope
jnp
adc
test
es
cmp
ret
sub
cmp
mov
pop
mov
mov
enter
ljmp
je
out
jo
mov
add
pop
or
adc
and
lret
ljmp
sbb
sbb
push
in
test
pop
inc
push
inc
bound
rcrb
lea
fwait
leavew
xlat
outsl
rolb
lcall
jne
xor
pop
mov
clc
or
jbe
adcl
cld
lcall
std
xchg
data16
cmp
out
mov
cmpsl
mov
push
and
mov
fiadds
hlt
repnz
sbb
pusha
sub
mov
jge
mov
adc
fwait
sbb
adc
int
inc
leave
les
cmp
idivb
or
les
insb
ret
pop
sub
mov
mov
andb
inc
xchg
pop
sbb
movsl
sub
out
fisubl
push
add
adc
mov
add
xchg
pop
gs
push
and
into
add
pop
rorb
mov
clc
push
dec
sub
push
add
cltd
aam
lahf
test
js,pn
jmp
ss
lds
icebp
stos
pop
push
push
mov
test
outsl
jmp
push
dec
mov
cmp
lret
testb
jl
pop
xor
out
push
xchg
int3
mov
dec
loopne
in
sbb
cltd
or
sub
sub
xor
movsb
pop
jnp
adc
add
push
fwait
push
xor
sub
bound
notb
xchg
mov
test
dec
dec
clc
xchg
out
cmp
shr
mov
adc
fs
lahf
nop
sbb
mov
hlt
fadd
inc
push
repz
xchg
adc
mov
inc
mov
or
and
sub
or
jle
repnz
lret
test
icebp
fcmovnu
xchg
push
sub
inc
dec
daa
test
add
out
add
rcrl
mov
mov
sti
mov
int
in
fs
add
sbb
fadds
fwait
dec
aaa
test
mov
add
ret
dec
mov
xchg
sbb
addr16
inc
lds
shll
insb
loope
shll
jecxz
es
add
xor
jns
adc
inc
dec
xchg
popa
aas
lcall
inc
in
lcall
imul
dec
or
mov
outsb
sbb
mov
jne
bswap
pop
cwtl
inc
fldt
gs
test
mov
lret
jae
test
and
and
push
cmp
pop
test
test
push
pushf
dec
dec
fstp
cmp
cmpsb
jmp
mul
aam
jo
arpl
pop
sbb
cwtl
gs
addr16
jnp,pn
mov
or
lea
jnp
lahf
test
xor
fidivrs
mov
sub
add
dec
jmp
mov
and
into
pop
and
in
and
mov
push
inc
repnz
bound
cltd
stc
xor
adc
xchg
xchg
sub
sbb
cwtl
push
lahf
pop
mov
call
push
pop
movsl
push
sarl
movsb
inc
mov
lcall
outsb
adc
dec
mov
cmp
adc
xlat
insb
arpl
xor
mov
cmpsl
cmp
or
jb
shl
mov
inc
fcomp
or
in
aad
out
xor
int3
mov
js
cwtl
push
or
fcmovu
or
fcomps
iret
jbe
mov
and
lods
dec
imul
dec
fdivrp
pop
and
bound
mov
in
xor
adc
adc
inc
push
jmp
jle
hlt
jle
xor
jns
in
and
insb
jnp
in
shll
sbb
and
lret
or
xor
pushf
push
and
flds
das
insl
shl
lret
ret
in
cmp
mov
in
or
mulb
xor
test
or
loop
aam
insb
inc
pop
sbb
xchg
test
out
inc
fisubrl
mov
loope
test
mov
add
mov
mov
adc
xchg
sub
mov
xchg
xor
dec
jno
roll
cmp
xchg
and
jne
scas
mov
jnp
jecxz
aas
pop
int
je
rcl
push
dec
stos
fwait
jge
jecxz
fwait
dec
mov
das
rorl
mov
jp
and
mov
mov
push
mov
filds
hlt
adc
xor
fnstcw
and
mov
fnstsw
inc
cs
in
and
imul
fs
jbe
jbe
jecxz
fiadds
mov
xor
dec
inc
test
stc
mov
aaa
or
mov
lret
pop
dec
and
mov
jl
into
outsb
and
test
push
and
add
clc
cmc
fldl
push
xchg
out
pop
fstpl
lea
je
sbb
aas
pop
je
sahf
es
scas
xor
mov
xlat
sahf
mov
jp
cs
xchg
rol
mov
imul
lahf
mov
add
lret
jb
movsb
mov
test
cmp
in
ret
inc
sub
push
fsubl
jecxz
add
fwait
mov
jo
add
outsl
jecxz
push
jg
jbe
inc
rdmsr
or
les
icebp
cltd
add
out
jge
inc
leave
stos
ficoml
jle
xlat
pop
lea
stos
out
jle
aaa
pop
outsl
fstl
dec
cs
pop
jecxz
mov
rorl
dec
ljmp
cld
mov
rorb
mov
xor
in
divb
push
adc
push
ljmp
sbb
pop
popf
inc
pop
cmp
push
iret
sti
aad
repz
inc
mov
jmp
faddl
dec
cmp
popa
pusha
lods
xchg
jnp
test
mov
repnz
or
sti
cmpsb
xor
gs
push
ret
sahf
sbb
pop
fsubs
inc
aas
jmp
add
cmpl
jp
in
sub
shlb
jecxz
pop
fstl
jmp
push
fstpl
out
lock
or
xor
mov
sub
lahf
xchg
mov
cmc
test
lret
and
add
repz
dec
xor
repnz
push
outsb
cmpsb
xlat
cltd
pop
cltd
aad
aad
sti
insb
scas
mov
scas
and
add
xchg
lods
mov
jmp
push
and
ret
cvttps2pi
push
ljmp
repnz
or
popa
movsl
ret
jp
fisubs
push
nop
lret
push
adc
xchg
in
pop
mov
jmp
inc
mov
hlt
ja
fcomip
sub
and
jae
into
or
jne
cmpl
cs
pop
push
inc
pushl
or
sbb
stos
std
xchg
xor
js
fistpll
aaa
fs
dec
fcmovb
popf
adc
push
pop
loopne
loop
call
mov
mov
ss
scas
fimuls
fs
rorb
mov
icebp
jne
movsl
inc
mov
cmpl
sbb
add
insb
out
test
int
jno
jle
cmpsb
lock
insb
mov
insb
and
and
sub
xchg
in
test
and
jl
imul
sbb
add
mov
sbb
pop
lret
push
imul
cmp
jmp
jle
ljmp
jl
mov
fildl
ficomps
jp
es
inc
sub
mov
js
movsb
enter
imul
outsb
pop
notl
gs
cld
and
out
shll
sub
mov
aad
js
xchg
cs
mov
out
add
push
es
outsb
in
dec
test
push
jl
and
mov
add
shl
enter
xchg
dec
mov
lret
cmp
mov
test
xor
orl
sbb
push
cmp
arpl
out
dec
insb
fistpl
inc
jmp
daa
enter
mov
dec
add
les
insl
jecxz
into
out
ficoml
fs
fcoml
test
addr16
mov
mov
cmp
mov
call
or
adc
std
mov
cld
fwait
gs
jno
xor
popf
or
insl
repnz
xor
idivb
int
into
pop
mov
jns
pushl
out
jmp
ljmp
int
fdivrp
ss
sti
addr16
add
pop
fwait
cmpsb
xor
or
sub
xchg
sbb
insl
pop
jae
out
sti
pop
int3
int
aam
popa
popa
and
stc
dec
sbb
sub
add
pop
movsl
push
sub
insl
test
sub
dec
stos
fs
cltd
pop
adc
inc
jl
aad
imul
in
test
mov
in
les
xor
pop
xchg
push
sub
mov
out
daa
shlb
or
aad
in
andb
sub
cli
xchg
clc
pop
cwtl
push
mov
cmp
insb
cwtl
cli
sbb
cmpsl
fsts
mov
xchg
in
fs
pop
idivb
push
loopne
add
ret
push
lahf
pop
pop
push
mov
lcall
fsubl
cld
adc
xlat
call
sub
cmp
stos
je
addr16
pusha
cmp
inc
jae
xor
push
pop
in
outsb
and
xchg
add
imul
jg
out
and
add
inc
or
xchg
push
fneni(8087
mov
pop
ret
insl
cmp
jne
dec
pushf
add
shlb
scas
pusha
xchg
cmp
in
loop
adcl
aas
imul
mov
test
out
sub
out
xchg
jl
adc
add
xor
mov
loope
xchg
mull
adc
mov
and
add
adc
dec
lods
leave
jge
xor
inc
adc
test
ret
push
mov
in
lret
xlat
fstps
cmp
out
clc
and
jo
jp
mov
cli
sarl
into
aas
jns
leave
or
cmp
jae
les
lret
add
inc
and
cmc
add
mov
and
fnsave
cmpb
inc
xchg
lods
pusha
inc
mov
rorb
in
pop
fwait
dec
mov
lods
jp
xchg
xor
into
xchg
es
cmpsb
into
popa
orl
mov
mov
sahf
jno
and
testb
nop
in
mov
fwait
xchg
jae
iret
adc
test
pop
push
xlat
out
repnz
imul
ror
cmp
jae
outsb
in
mov
in
addl
loope
sub
fwait
rolb
lahf
leave
mull
mov
push
jnp
dec
ffree
out
cmp
mov
sbb
pusha
mov
pop
je
push
out
dec
jae
and
sbb
leave
rcll
and
xlat
xchg
mov
icebp
cmc
push
testl
push
stos
push
sbb
idivb
lahf
push
mov
in
sub
pop
mov
fdivp
test
test
sbb
std
sub
shll
test
mov
mov
ljmp
pop
xchg
shlb
fistpl
lahf
cmp
js,pt
divl
jbe
mov
xchg
shll
mov
push
dec
testl
sub
jg
outsl
sub
outsl
pop
fwait
int3
xchg
cmp
int
mov
push
mov
shlb
mov
pop
test
fbstp
cmp
aaa
xorb
scas
cmp
push
daa
mov
lods
cmp
mov
icebp
mov
aas
dec
cmp
das
sub
cld
ljmp
in
adc
sti
mov
sub
mov
xchg
movsl
leave
rclb
sbb
push
adc
mov
decb
into
dec
sub
or
xor
lcall
decl
ret
dec
mov
push
test
lret
mov
xchg
cmp
mov
sahf
jnp
or
xor
lods
and
stos
lahf
shll
inc
sub
add
or
mov
inc
dec
dec
aaa
lret
aaa
into
cmp
and
rol
mov
add
pusha
ret
or
push
mov
test
shll
pushf
xlat
pop
insl
pushf
aam
mov
sbb
in
cs
in
cmp
jb
lea
adc
js
cmp
or
mov
cmp
push
jno
jge
hlt
popa
lahf
add
jp
adc
int
testb
cmpsb
fildl
aad
stc
js
pop
cmp
jne
sub
inc
xchg
aas
mov
dec
jb
push
add
decb
push
int
test
das
stos
push
push
pop
ds
out
mov
jb
lcall
movsl
nop
and
and
sbb
lds
sbb
cs
int3
pop
push
xchg
out
fmuls
cltd
push
mov
jge
jp
push
xchg
out
adc
movsb
dec
add
frstor
push
mov
fcomps
insl
inc
fcoml
jecxz
cmp
mulb
ljmp
ja
jne
jge
sbb
test
enter
jmp
mov
rcrb
sbb
testb
jmp
pusha
mov
idivb
stos
in
push
push
xchg
sub
setae
jge
add
mov
cmp
jbe
cmpsb
xchg
cmp
xor
mov
push
cmpsb
sbb
insb
cwtl
fisubrs
movsl
gs
cmp
loope
movsb
test
stc
push
pop
or
into
xor
add
aaa
or
sti
testb
int3
sbb
outsb
iret
sbb
add
add
xchg
mov
add
pop
xor
or
dec
jmp
frstor
mov
sbb
int
lret
cmpsl
inc
test
xor
fdivs
stos
and
imul
imul
sbb
jno
aas
cli
pop
stos
inc
jo
fcomps
ret
xor
enter
sub
gs
cmpsb
out
pop
aam
sub
icebp
lock
mov
cmc
push
mov
stos
pop
fildl
cmp
cli
hlt
mov
mov
in
inc
pop
mov
outsl
es
sub
adc
mov
pop
jmp
dec
adc
imul
gs
add
in
dec
jo
jmp
mov
add
jp
nop
fildll
cmp
xor
push
mov
pushf
lahf
xor
es
pop
orl
fnstsw
mov
xor
call
mov
mov
dec
mov
mov
lea
push
pushf
fwait
ret
push
push
test
push
fldt
mov
cmp
or
sarl
sahf
ret
push
pop
jge
or
jg
xchg
out
xchg
or
stos
and
dec
xor
jp
mov
xlat
dec
adc
or
bound
jle
pop
mov
mov
repnz
sbb
pop
mov
subb
dec
sub
jns
in
jg
jle
mov
fmuls
pop
lahf
pop
sub
mov
jle
xor
fistpl
ss
mov
inc
xor
add
or
cwtl
shrb
jns
jecxz
mov
outsb
cmp
sub
insl
das
mov
xor
imul
insb
lahf
loope
js
lock
std
sbb
pop
out
int
cmp
pop
pop
loop
lcall
inc
inc
xor
mov
push
add
push
sub
mov
or
push
or
lret
xchg
inc
xchg
jbe
dec
adc
inc
xor
fisttps
sbb
shrb
orb
fisubrs
sbb
inc
out
cmp
cmp
inc
pop
cmp
lahf
pop
inc
fcmovnbe
in
lods
cmp
pop
cmpl
sbb
popa
pushl
push
pushf
adc
or
mov
cmp
xor
push
mulb
sbb
test
pop
repz
movsb
lods
stos
inc
shlb
mov
aas
add
adc
adc
dec
pop
push
adc
inc
xor
popa
repnz
push
dec
js
push
xor
mov
sahf
sub
rcrl
pushw
push
or
dec
insl
add
inc
xor
cmp
push
ret
add
imul
jle
mov
pusha
and
cmovnp
jo
adc
jge
pop
subl
psadbw
dec
add
xor
imul
push
jmp
stos
enter
add
xor
aaa
pop
lahf
adc
pop
ror
scas
or
sub
in
cs
add
test
imul
in
and
hlt
add
pop
lret
inc
test
fidivl
fdivr
daa
ficoml
jmp
push
jbe
outsb
jecxz
sahf
stos
mov
xor
test
int
push
xchg
das
xchg
pushf
and
dec
ret
aaa
lods
int3
push
inc
sub
mov
cmc
mov
mov
daa
out
test
pop
jp
fimull
in
data16
inc
xchg
repz
aas
jbe
aaa
dec
ljmp
lret
inc
dec
hlt
inc
sti
scas
mov
xchg
dec
or
fstps
popf
bnd
pop
mov
lods
jne
das
cmp
mov
inc
cmp
sahf
push
cli
mov
movsb
je
loopne
mov
push
dec
js
jp
stos
or
adc
jmp
xchg
xchg
js
incl
pushf
lods
adc
fbstp
cld
cmp
testb
adc
stos
jg
stos
mov
jl
int
call
iret
add
xchg
xchg
ret
popa
fisubrs
imul
sbb
and
scas
sbb
pop
sbb
hlt
insl
test
cmp
xor
sub
les
xchg
dec
xchg
push
cmp
push
shll
jae
lock
pop
jo
into
mov
sbb
pop
mov
mov
mov
adc
jl
in
test
stos
rorl
and
outsb
nop
inc
pop
cmp
rcrl
mov
imul
out
cmp
xchg
jne
imull
cltd
adc
push
fdivs
push
dec
out
fstp
mov
sahf
pushf
pushf
mov
or
movsl
mov
call
xchg
hlt
adc
cs
xlat
jnp
push
adc
ds
cwtl
cld
inc
insb
xchg
jmp
sub
int3
adc
dec
sbb
fnsave
and
fcompl
les
inc
sbb
stc
sbb
jb
or
imul
movsb
and
cmc
jp
leave
jl
test
or
pop
push
and
dec
cmp
lods
in
mov
outsl
mov
int3
inc
cli
or
lods
shll
pop
nop
rcl
or
ret
out
xchg
push
mov
inc
gs
popa
sbb
push
repz
mov
clc
push
adc
aad
mov
mov
mov
mov
and
les
fdivrp
scas
outsl
leave
sub
or
xchg
loopne
mov
cli
cmp
mov
mov
jp
push
jae
int
divb
mov
std
mov
into
xchg
fildl
xchg
lcall
cmp
inc
int
mov
adc
popf
das
and
bound
adcb
mov
jmp
push
dec
lock
insl
sbb
mov
mov
mov
mov
push
aas
push
sub
push
shrb
push
pop
mov
or
movsl
call
cli
mov
xchg
sub
aas
loope
xor
push
dec
mov
jbe
scas
outsb
jo
pusha
mov
pop
mov
inc
sbb
imul
cmc
int3
scas
sbb
push
out
adc
xchg
loop
sbb
fcomp
outsb
push
div
cmpsb
inc
sub
js
mov
pop
xchg
pop
cmp
int3
in
bswap
and
fldl
adc
lock
in
cmp
lods
insb
push
stos
push
jp
push
mov
mov
adc
pop
inc
sbb
cmpsb
inc
popf
mov
mov
ljmp
fldl
inc
inc
es
cli
filds
cmp
cs
jg
fs
pushf
imul
mov
xchg
push
setb
fnstsw
mov
bound
dec
sub
sbb
push
insl
aas
lret
leave
sahf
push
dec
mov
stc
xchg
test
ja
pop
data16
mov
add
jge
ret
ss
dec
dec
jge
out
xchg
add
mull
test
push
sbb
mov
sub
sub
xchg
push
fcmovnbe
jge
push
cmp
stos
push
pop
clc
jle
sbb
push
rcll
inc
and
ret
dec
pop
daa
mov
mov
pushf
mov
ret
sub
jp
adc
aaa
pop
andb
ficoml
add
mov
mov
scas
ja
adc
fdivrl
push
push
rcl
pop
test
sub
xor
sbb
loope
shrl
push
pop
aam
test
in
ja
sbb
add
mov
sbb
mov
ljmp
xor
leave
adc
insb
jno
ds
das
push
call
add
iret
fsubs
dec
int3
xor
test
push
mov
xchg
sub
pop
fidivrl
cmc
cmpsb
andl
xchg
into
inc
xor
arpl
jns
repz
outsb
lahf
inc
jbe
push
mov
mov
pop
xor
add
mov
fstpt
jne
add
mov
outsl
inc
aad
add
add
fimuls
sbb
mov
mov
jge
jp
xchg
ljmp
push
notb
jne
lods
clc
in
push
jne
movsl
xor
mov
cmp
nop
into
es
fcmovu
jae
mov
pushf
hlt
in
out
mov
les
insb
loope
xor
nop
jecxz
jmp
push
jb
xor
inc
mov
out
imul
mov
cmp
inc
add
cmp
xor
clts
es
sbb
mov
pop
into
sti
inc
test
push
jl
mov
decb
add
aam
jns
repnz
fs
adc
or
or
cwtl
hlt
push
aam
pop
lret
sarl
sbb
mov
call
sbb
dec
sbb
adc
inc
lods
mov
std
mov
out
mov
lret
imul
cwtl
sub
ja
lock
mov
clc
ds
sub
or
and
sbb
cli
jg
ror
addr16
loope
add
rorb
sbb
cmc
cmpsl
mov
xor
in
dec
stc
push
out
dec
fisttpll
lahf
jge
or
outsb
sti
daa
dec
jg
insl
lock
fwait
in
mov
push
mov
dec
int3
pushf
leave
push
sub
add
pop
addr16
ds
sarb
jbe
fsts
sub
mov
clc
push
ds
pop
aam
push
scas
sub
add
inc
jbe
ret
push
and
adc
loop
lahf
lahf
loopne
lret
popf
in
pop
jo
mov
and
ljmp
jo
gs
sbb
ss
xchg
and
mov
add
sub
jp
pushl
pop
lods
push
or
test
push
movsl
mov
mov
mov
outsl
loop
xchg
popf
int3
xchg
pop
lods
add
push
pop
inc
cmp
or
pop
lret
out
loopne
add
xlat
or
mov
aam
nop
jge
js
lock
data16
repz
imul
shlb
in
loope
pop
lock
jle
mov
mov
fisubs
fsubrl
aad
ja
inc
xchg
inc
enterw
fistps
inc
pop
cmp
scas
fwait
ljmp
xlat
push
or
imul
mov
pop
test
mov
mov
clc
mov
test
pop
push
in
inc
push
sub
jo
and
psllq
inc
nop
push
scas
xchg
push
lock
cli
sub
icebp
sub
hlt
mov
mov
dec
insb
sahf
or
cmp
cld
mov
cwtl
leave
fsubrs
jb
data16
mov
push
and
cmp
xlat
xchg
push
in
add
mov
fldl
loope
mov
insl
sub
jg
and
aas
js
dec
leave
mov
movsl
inc
loopne
movsb
aas
xchg
nop
mov
dec
jns
lcall
loope
mov
rcr
mov
stc
xor
scas
sbb
leave
popa
xlat
sti
movl
inc
lea
cwtl
iret
xlat
loop
cmp
outsl
shlb
xorl
pop
dec
pushf
cmp
mov
or
cmp
mov
jmp
stos
fcoms
push
xchg
in
into
push
les
jl
dec
cmp
push
divb
das
xchg
lahf
scas
sub
adc
adc
call
fsubrl
insl
pusha
shr
rcrb
ss
sbb
jns
xchg
push
xchg
out
dec
out
sahf
ficompl
mov
adc
jbe
mov
xchg
scas
mov
jo
ljmp
lcall
adc
test
mov
mov
ljmp
adcb
mov
mov
jle
scas
add
cwtl
jb
rolb
sub
imul
aam
out
mov
or
in
pshufw
insb
sub
sbb
and
cmc
mov
sbb
and
les
add
lods
clc
mov
jns
jne
clc
call
aaa
ja
pusha
xchg
lcall
out
out
mov
jge
notl
pusha
jecxz
push
dec
mov
in
cmpsl
in
mov
fcmovu
pop
lea
mov
ficomps
push
mov
push
imull
sbb
imul
mov
mov
aad
mov
pusha
xor
call
enter
add
es
push
adc
push
cmc
das
scas
shrb
fsubrs
mov
movsb
shlb
das
stc
mov
pop
test
pop
inc
sbb
cmpsl
jge
repz
mov
pop
cmp
aas
mov
test
out
pop
in
cmpsb
xorb
in
ljmp
leave
mov
sbb
jne
dec
pop
mov
sbb
cli
lds
xlat
lds
and
xor
icebp
xor
iret
shlb
fs
cld
dec
push
out
enter
mov
push
xchg
jnp
jb
imul
scas
add
dec
filds
dec
jecxz
push
jno
js
repz
dec
data16
ljmp
jle
addr16
ljmp
cmp
rcr
jp
imul
outsb
push
cmp
sbbl
or
mov
mov
or
and
or
dec
adc
popa
mov
cs
sbbl
rolb
sbbl
sub
xchg
adc
xchg
lea
cmp
add
dec
scas
jl
sarl
aam
outsl
and
rorb
enter
or
push
int3
out
push
sub
repnz
push
or
js
cs
imul
aaa
rclb
jno
jne
add
sub
dec
cmp
into
mov
pop
sbb
dec
mov
inc
stc
jo
pop
fimull
jg
mov
insl
cmp
cmpl
sbb
push
add
pop
cmpl
xchg
insl
and
sarb
inc
iret
cmpl
jmp
sub
or
jmp
cmp
loope
mov
out
in
cwtl
loope
das
mov
add
pop
ficoml
addb
adcl
lcall
enter
add
push
adc
cltd
inc
xchg
cmp
jo
push
mov
sbb
dec
gs
ret
cltd
lcall
js
sub
iret
lods
jnp
add
je
sbb
rcr
dec
decb
lods
xorl
outsb
sbb
das
mov
add
in
and
popf
inc
xor
dec
xor
stos
adcl
inc
loop
xchg
leave
pop
xchg
sub
faddp
cmp
xor
dec
dec
pop
jnp
in
lret
in
push
adc
inc
dec
pushf
mov
pop
mov
gs
xorb
pop
arpl
std
mov
push
adc
inc
push
xlat
push
rcrb
dec
arpl
mov
xchg
rorb
movsb
lods
movsb
notb
add
dec
sbb
adc
inc
popf
lods
popa
cmp
push
cmp
xor
cmpb
jns
dec
inc
sub
mov
push
push
pop
pop
scas
loope
or
push
repz
sbb
mov
cmpsb
push
or
sub
add
mov
je
rcr
add
dec
jmp
sbb
stos
cmpl
jns
subb
es
mov
fsubrs
lds
push
push
hlt
pushl
ret
stos
cltd
cmpsl
jae
push
loope
lret
scas
aam
cmp
jo
ja
xor
leave
push
xchg
cmp
adc
fisttpl
pop
add
outsl
sub
mov
sbb
into
dec
jnp
and
inc
lcall
lock
push
sbb
jbe
ret
xor
adc
mov
and
push
shl
jecxz
jne
js
inc
and
sub
jno
inc
outsb
mov
loopne
mov
into
xchg
fisubrs
lock
dec
mov
xlat
stos
and
hlt
pop
mov
jp
cltd
int
xorl
dec
jns
or
std
xor
cmp
ret
sti
mov
xor
jno
xor
hlt
andb
pop
jecxz
lret
jo
cmpsl
adcl
lea
call
inc
fdivrs
xchg
andb
lock
mov
movsl
jmp
mov
push
dec
out
pop
and
enter
pusha
xchg
test
pop
dec
xorl
dec
out
xor
xchg
aas
jns
and
nop
adc
push
sbb
movsb
frstor
cltd
pop
and
mov
lret
test
hlt
sbb
xchg
lcall
aam
xchg
xchg
xor
mov
dec
call
xor
cmpsl
repz
out
sub
ljmp
roll
call
push
nop
ds
icebp
cmpsl
cmp
mov
fists
enter
fstpt
xor
mov
loopne
adc
sbb
add
daa
mov
outsl
subb
lret
jmp
jmp
lea
repz
jns
sbb
push
fnstsw
stc
sub
fdivr
jge
lcall
jmp
xchg
repnz
adc
out
daa
jmp
loopne
adc
lds
sub
adc
pop
mov
enter
xor
or
mov
imul
mov
sub
in
movsl
add
test
jmp
les
imull
jb
and
xchg
ljmp
bound
leave
mov
adcl
jb
push
in
movsl
adc
rorl
sbb
inc
push
cwtl
shlb
pop
push
lods
jo
or
or
les
pop
ja,pn
aas
xchg
and
add
dec
rcll
mov
in
or
pop
mov
out
push
cmpsl
mov
scas
push
lods
repz
sub
adc
mov
loope
cmp
jle
inc
fcos
daa
sub
push
lock
adc
jge
pop
sub
lock
pop
or
sahf
sub
sti
xlat
push
adc
push
mov
jmp
or
add
xchg
or
jmp
movsl
filds
arpl
int
dec
inc
cmp
mov
push
xchg
ja
cmp
das
adc
leave
inc
nop
mov
into
sub
xchg
xchg
mov
sbb
push
xchg
xor
xor
cmp
jle
add
gs
out
lahf
xchg
test
cmp
call
jne
mov
ljmp
add
insb
pop
fidivrs
aaa
fldl
dec
outsb
in
push
push
mov
xor
sbb
inc
stc
outsl
pusha
cmpsb
leave
adc
jo
out
aas
and
rcrl
adcb
xchg
out
int
cli
sbb
outsb
jg
or
mov
mov
jg
and
imul
in
or
movsb
adc
dec
iret
lea
cltd
add
push
fnstsw
pop
test
sub
cmp
cli
sub
shll
insl
push
out
cmp
push
adc
xchg
xor
int3
sbb
or
xchg
xchg
mov
insb
xchg
or
and
xor
int
lret
out
mov
mov
sbb
adc
dec
mov
dec
or
nop
fidivs
call
mov
vcvtsd2ss
pop
sarl
adc
daa
dec
jp
cmp
sti
push
pop
mov
or
dec
xchg
ret
sbb
pop
icebp
push
sbb
xor
lret
rcr
inc
pop
push
lods
imul
loopne
pop
xchg
inc
xchg
sarl
scas
fwait
mov
mov
or
fstpt
jmp
lds
mov
in
pop
add
loopne
jno
jae
or
dec
loopne
lcall
jp
ljmp
mov
popa
jnp
cmp
mov
pop
xlat
fsubrl
cmpsl
mov
out
test
mov
xchg
daa
aam
mov
mov
ffree
fists
xor
inc
jecxz
pop
loope
jbe
sti
and
pop
cmp
sub
and
lods
out
rcll
push
mov
iret
push
repnz
cmc
loope
xrelease
mov
daa
shlb
sub
mov
ret
loop
push
xchg
fwait
pop
xchg
xchg
je
mov
cmp
lret
ret
scas
jae
std
cmc
sahf
clc
lcall
imul
fstp
and
repz
xchg
mov
mov
xchg
aaa
cmp
jp
js
icebp
mov
inc
in
cmp
sbb
cli
inc
adc
mov
das
xorb
je
mov
inc
call
or
sbb
pop
add
insb
xchg
xchg
cmp
pop
loope
push
dec
test
pop
shr
test
or
xor
pop
jo
cmp
push
pop
mov
push
push
repnz
mov
and
and
cmp
push
test
pop
lods
mov
outsb
add
cwtl
inc
inc
inc
imul
or
negb
aad
adcb
xor
pop
mov
pop
sahf
sub
xchg
fwait
bound
lret
insb
lahf
adc
jb
pop
jmp
inc
mov
aaa
aad
call
and
add
test
inc
rol
aad
mov
jb
cli
lds
add
gs
xchg
outsb
enter
ds
xchg
xchg
imul
and
aam
mov
pop
xor
or
push
test
enter
repnz
inc
dec
sbb
into
hlt
push
ret
aas
movsb
loope
or
push
add
and
dec
push
mov
bound
dec
adc
pushf
pushf
and
push
xor
mov
insb
cmpsl
aas
mov
push
loop
mov
xchg
aaa
sahf
mov
pushf
cmp
test
mov
jnp
mov
sub
mov
js
pop
dec
pushw
and
mov
movl
sbb
fidivrl
fnstenv
jnp
adc
add
sub
insl
push
adc
imul
in
mov
loope
pop
pop
daa
sub
jne
and
push
aam
mov
fcmovne
jns
popf
test
fsubp
outsl
subb
xchg
movsb
jp
and
dec
mov
testl
lods
push
jge
loopne
inc
xchg
and
iret
dec
and
mov
pop
les
clc
ljmp
lahf
add
mov
cwtl
ret
jecxz
test
or
ror
shll
movsb
sar
push
fwait
dec
adc
test
hlt
sub
loopne
dec
xor
jbe
ja
bound
pop
pusha
or
xchg
and
pusha
daa
cmp
ss
mov
lds
xchg
pop
pop
int
adc
cmp
mov
leave
jb
sub
inc
xchg
cmp
pushw
shrb
cmp
xlat
mov
lret
pop
lods
sarl
stos
loop,pt
mov
lods
mov
subl
xor
fwait
cli
iret
mov
mov
mov
data16
pop
movsb
mov
cmp
push
xorb
sub
addl
ret
sarl
and
cmp
mov
xorl
mov
in
xlat
bound
shl
or
and
pop
rclb
movsl
pop
fistl
dec
push
adc
nop
xor
mov
out
lock
jns
cmp
test
push
loopne
mov
inc
gs
dec
aam
ljmp
or
pop
jge
loope
jp
test
test
push
mov
or
in
cmpb
scas
aaa
in
shlb
fildl
into
sbb
cmp
lock
fwait
sti
stc
pop
mov
setge
pop
jae
jg
ss
push
cmpsb
cmc
loopne
loopne
push
cmpsb
ss
and
shlb
jb
mov
inc
dec
pop
stos
stc
out
jne
sub
cmc
fistps
insl
adc
lret
cmp
mov
push
shlb
cmpsl
pop
pop
sub
stos
pop
adc
adc
cs
icebp
aas
xchg
jns
adc
int3
adc
xchg
mov
xchg
data16
push
js
jecxz
popa
add
lods
ds
cmp
lods
or
xchg
adc
gs
inc
adc
mov
fistpll
mov
jle
xchg
es
divl
loopne
mov
imul
push
inc
push
jg
xor
push
jge
lods
addr16
jne
decb
scas
int3
push
mov
imul
fs
jle
rcrb
or
lods
lret
pop
insl
xor
jns
mov
mov
aas
addr16
popf
sahf
push
mov
aam
stos
mov
mov
xor
xchg
pop
add
cmpsl
js
ret
test
movsb
popf
jp
out
push
outsl
push
jb
mov
jmp
mov
sbb
inc
lds
mov
cltd
jno
lret
mov
test
fdivrs
sti
jg
pop
mov
jae
addb
adc
loop
add
xor
xor
add
pop
pop
jecxz
xor
mov
pop
ficomps
pop
movsl
dec
scas
call
jb
add
xchg
pop
dec
pop
inc
je
jmp
mov
mov
shrl
fidivrs
leave
leave
and
push
jle
push
repnz
js
push
fnstsw
or
dec
insl
mov
add
fwait
mov
inc
mov
xorl
leave
push
push
into
loope
test
dec
fucomip
mov
enter
push
inc
lret
mov
sub
push
mov
mov
in
sahf
sub
lods
jb
push
call
inc
in
iret
fsubl
inc
jne
add
movsl
ss
mov
pop
xor
sbb
push
enter
or
popa
in
cmp
fists
stc
xor
push
dec
stos
dec
dec
xor
sti
mov
mov
pop
shr
imul
in
outsb
in
orl
inc
cwtl
daa
leave
loop
in
ljmp
mov
lret
or
jmp
jno
imul
dec
cmp
data16
push
jo
fdivrs
inc
lahf
lcall
sub
sub
loope
mov
test
imul
inc
sbb
popa
ret
and
js
scas
xor
xchg
fwait
cmp
push
into
mov
mov
fmull
xchg
stc
and
js
repnz
cmpsl
into
lock
adc
scas
mov
mov
aam
inc
gs
jo
movsl
cmp
pop
out
ss
xchg
aas
push
and
aam
lret
js
add
icebp
es
div
sbb
inc
jl
stos
outsl
sub
ja
cmp
fadds
fcoml
ret
jns
hlt
mov
sbb
aad
stos
inc
dec
arpl
adc
iret
rcr
pusha
daa
mov
lods
inc
cmp
ss
test
mov
jl
arpl
or
push
cmpsb
inc
pop
repz
out
cmpsb
or
sti
jns
sahf
xchg
pushf
push
lahf
std
in
and
mov
push
stos
xor
gs
add
test
mov
imulb
leave
lods
cwtl
mov
loop
mov
or
jecxz
imul
cmp
mov
rcrb
mov
or
stos
mov
lret
icebp
notb
mov
pop
mov
inc
jge
imul
testb
pop
inc
xor
sbb
ja,pn
test
mov
xchg
ljmp
add
dec
mov
inc
ret
mulb
and
daa
inc
pop
sarl
lea
sbb
push
xchg
xchg
int
jo
aam
cltd
mov
outsb
dec
addl
lahf
xor
pop
xor
xor
jmp
aam
add
js
shlb
testb
scas
add
movsl
insb
cmp
insl
out
xchg
push
pop
ret
mov
jge
mov
popf
add
cmp
push
sbb
cli
xchg
cmp
adc
pusha
jp
sbb
test
test
xchg
or
lods
filds
dec
mov
es
and
sbbl
hlt
pop
mov
mov
fs
and
lods
dec
sbb
and
cs
adc
xchg
fistpl
scas
add
enter
cmp
or
jecxz
insb
push
inc
lret
pop
push
loope
add
out
mov
sub
cmp
mov
adc
pop
je
shlb
ss
fs
out
or
out
dec
inc
cs
or
adc
xor
pop
mov
lret
sbb
mov
inc
out
sbb
jmp
adc
loop
out
cld
cltd
pop
scas
pop
jnp
mov
jns
inc
jnp
mov
jno
outsb
mov
les
popf
lods
mov
lret
lock
test
sub
pop
gs
sub
mov
push
insl
in
and
and
out
xchg
lods
sbb
push
int3
dec
pop
pop
sub
icebp
jge
sahf
shll
and
xchg
add
aam
dec
dec
inc
bound
mov
mov
mov
xor
int
js
or
lret
arpl
pop
push
loope
dec
imul
push
or
fcmovbe
push
fs
cs
je
nop
lret
xchg
cli
dec
pop
lcall
mov
xchg
adc
fstpt
sbb
mov
loopne
sbbl
inc
out
loope
shrb
clc
sub
adc
dec
clc
loope
push
loop
scas
nop
xchg
fldl
cmp
and
jp
xchg
jecxz
mov
jmp
xor
adc
push
rcrb
es
outsl
mov
sbb
xchg
push
movb
cmpb
xchg
es
jecxz
aaa
ja
int3
test
jne
fucom
fwait
idivb
scas
iret
outsb
xor
pop
inc
or
gs
daa
push
addr16
cld
leave
inc
fisubl
or
cmp
das
jb
dec
pop
xor
pop
js
lock
xchg
push
aad
adc
jno
nop
and
lock
pop
sbb
dec
bound
sbb
stc
sbb
add
lods
jl
aam
in
mov
int
push
in
lcallw
xchg
xchg
pop
mov
sub
inc
cmp
adc
dec
fildl
aaa
adc
sbb
push
in
aam
leave
cwtl
out
pop
insb
xchg
call
jns
pop
pop
lahf
out
sub
js
shrb
js
insb
pop
dec
lods
lret
sarl
sahf
dec
mov
call
jne
jmp
jo
mov
mov
sub
mov
mov
jns
mov
push
adc
mov
add
jp
push
jne
push
jecxz
aad
ja
sub
das
lahf
aaa
jae
dec
aas
jo
jns
cmp
push
mov
mov
ret
add
into
imul
push
or
pop
enter
sub
jnp
clc
mov
push
movsl
inc
test
jae
or
fcmovnb
mov
jmp
loopne
outsb
xchg
enter
or
sbb
into
xlat
iret
push
xchg
jo
add
xchg
dec
cmp
push
and
xchg
lods
test
sbb
into
dec
mov
jns
inc
add
push
lahf
out
pushf
pop
sbb
hlt
jb
inc
fsubrp
bnd
adc
out
jns
mov
cltd
lcall
jmp
mov
fcom
jns
out
lret
popa
lods
push
or
xlat
in
xchg
ds
and
xchg
test
jg
repnz
mov
cld
loopne
and
test
and
out
cli
stc
inc
fisubl
cli
mov
pop
xchg
or
orl
mov
mov
loope
test
and
cmp
sub
cmpsl
sub
or
cmc
mov
in
lcall
enter
mov
repnz
ds
imul
loope
pop
push
cs
fiadds
mov
dec
out
lds
arpl
xor
pop
fistl
or
push
jb
sub
xchg
inc
jno
bnd
jo
jnp
and
je
mov
out
ja
test
cld
in
gs
jo
jecxz
sub
push
xorb
mov
je
mov
xchg
inc
loop
sti
xor
jne
scas
cmp
dec
addr16
in
in
ja
mov
fisubrl
and
popa
cvtps2pi
push
push
lea
push
cmpsl
shlb
sub
dec
int
jmp
popa
jl
and
jmp
sbb
inc
pop
xor
push
lcall
mov
sahf
sub
popa
jns
dec
sarl
xlat
xchg
popa
sbb
sub
cmp
out
mov
dec
out
aaa
adc
cld
fdivp
scas
leave
and
cmp
push
clc
add
mov
xor
push
dec
lahf
mov
inc
push
sbb
negb
mov
sar
xorl
es
add
inc
lret
lods
dec
aas
popf
out
in
mov
sub
fmull
or
xchg
div
sbb
xchg
lods
scas
enter
inc
push
xor
out
rcrl
add
push
aad
ljmp
adc
xchg
dec
jns
test
sub
pop
sub
sub
pop
mov
das
jnp
push
clc
adc
imul
mov
arpl
iret
mov
ja
and
repz
pushf
cs
mov
inc
and
and
pushf
add
mov
mov
cmovnp
xor
scas
xor
iret
dec
sub
pop
xor
inc
and
xchg
mov
shl
aas
cmp
dec
inc
sub
lock
fsubrl
andl
sbb
sbbb
xchg
fmull
fldt
clc
lcall
xchg
stos
arpl
adc
jne
out
int3
add
sbb
mov
outsb
jb
pushf
data16
gs
mov
fcoml
lea
xchg
in
push
dec
outsl
mov
out
mov
adc
xor
add
dec
push
and
sbb
movsb
push
stc
idivl
dec
and
sbb
icebp
in
bnd
sbbl
adc
out
ja
or
icebp
mov
or
xchg
loopne
sti
ja
lret
adc
push
mov
xchg
les
dec
pop
mov
nop
jmp
mov
repnz
cmp
out
mov
hlt
or
cmp
jbe
outsb
push
test
outsl
lods
pop
add
jne
jmp
add
in
in
xchg
ret
or
mov
aaa
call
fists
or
pop
xchg
mov
outsb
arpl
stc
mov
mov
push
push
sub
pop
call
stos
sbb
inc
lret
lods
movsl
push
addr16
shrb
jae
jmp
sbb
roll
mov
mov
xor
add
ss
mov
jmp
push
mov
mov
push
xor
ret
dec
imul
adc
mov
jle
imul
rcrl
jle
xor
sbb
xor
imul
insl
jmp
repnz
rclb
mov
ljmp
adc
sbb
sarb
push
popf
outsl
xchg
or
mov
ljmp
mov
pop
dec
popf
clc
into
andb
leave
xchg
shlb
or
ret
js
and
jo
outsb
pop
push
dec
jmp
sahf
out
or
or
data16
stos
sub
lret
inc
clc
adc
push
ds
add
or
or
xor
outsb
adc
pop
jecxz
mov
sub
fdiv
mov
ret
enter
ret
mov
loop
je
outsb
in
jbe
xchg
push
jae
and
das
adc
lret
dec
stos
sbb
xchg
jecxz
sbb
mov
mov
cmp
pushf
sbb
lahf
fs
jp
repz
insl
fisttpl
xchg
lea
push
fwait
stos
sbbb
xor
or
fdivrs
ss
test
aas
cs
imul
loop
jl
insb
and
iret
leavew
ret
xchg
loop
mov
popa
cld
fucomip
mov
jbe
int3
cmp
mov
movsl
xchg
addr16
insb
jo
adc
mov
mov
adc
in
or
jmp
cmpsl
dec
call
jb
mov
icebp
pushl
mov
fisttpll
pop
push
fldenv
or
dec
aam
pop
push
pop
aaa
mov
sbb
jle
pop
jge
pop
sub
popa
loop
and
sbb
das
rorl
jb
add
push
add
mov
cld
mov
test
stos
adc
sbb
jmp
push
xchg
test
xor
cwtl
iret
movsb
xor
daa
je
jl
fwait
or
mulb
mov
or
mov
push
outsl
fldenv
arpl
inc
loop
push
jecxz
cmp
mov
fstps
pop
add
pop
mov
xchg
mov
cmpsl
inc
lds
sarl
mov
lods
push
lods
dec
sbb
mov
mov
sarl
push
es
or
je
mov
scas
mov
out
xchg
mov
test
mov
stos
mov
popf
ficoms
pop
lahf
adc
adc
push
mov
sbb
test
push
rclb
fcmove
mov
pop
cltd
stos
shlb
xchg
push
lret
sbbb
sbb
pop
inc
inc
mov
enter
stos
jl
push
push
rcrb
in
in
cmp
nop
push
inc
cmp
cltd
lds
call
addr16
cltd
jp
inc
dec
or
adc
mov
mov
dec
cmp
loope
push
xor
test
subl
pop
test
sti
mov
dec
in
cmp
xor
test
test
iret
cltd
rcll
and
adc
jg
mov
ds
pushf
jnp
dec
inc
mov
fldenv
data16
lret
and
or
mov
lea
mov
and
enter
fcoml
fcmovu
jne
sbb
mov
rclb
sub
inc
ss
mov
push
andb
aam
xchg
ds
fstps
lods
rcl
rep
jne
sbb
push
pop
mov
mov
mov
mov
push
sarl
sbb
xor
loope
insl
in
ss
mov
das
sub
jbe
xlat
cmc
sarb
cmp
or
or
pop
push
sbb
aaa
cwtl
sbb
cmp
shll
prefetch
or
pop
sbbl
dec
sbb
xchg
sub
clc
adc
adc
inc
mov
sub
mov
jbe
cmp
mov
push
daa
ss
mov
les
push
repz
adc
adc
mov
insl
gs
cmp
lahf
mov
or
cmp
mov
inc
jg
xor
ret
popa
out
das
sub
add
daa
dec
sbb
test
lock
cwtl
xchg
add
aad
test
sub
femms
mov
and
cmp
std
mov
xlat
xchg
pop
insl
xor
out
sbb
mov
mov
pop
stc
mov
iret
test
lcall
sbb
fisubrs
mov
rol
push
ja
or
cmp
mov
push
or
ror
xchg
movsb
and
into
icebp
pushf
dec
adc
imul
movsl
fidivs
lret
push
lods
hlt
xchg
xor
std
xor
xor
sbb
jmp
pop
jbe
or
or
test
xchg
movsb
xchg
loope
fstpt
hlt
sarb
les
gs
rclb
ds
ja
lods
mov
inc
enter
je
ret
xchg
int3
insl
fisubrs
lock
jo
leave
mov
pop
push
adc
xchg
jl
adc
mov
mov
jns
fs
xor
mov
pop
dec
lea
xchg
lds
cmpsl
xchg
inc
xchg
inc
push
add
rcrl
cmp
pop
adc
leave
inc
and
sub
fistl
xorb
mov
out
xor
les
mov
negb
scas
arpl
push
repnz
scas
gs
outsl
cmpsl
daa
pop
jns
into
icebp
xchg
mov
mov
cmpsb
cmpsl
or
lods
int
in
mov
sub
or
and
stos
mov
cmp
js
mov
xchg
ret
dec
dec
std
in
shrl
and
movsl
mov
sti
scas
xor
xchg
mov
push
jmp
jle
cltd
push
add
shrl
push
or
push
fs
into
pop
test
lret
cli
mov
inc
sbb
mov
sbbl
and
sbb
sbbl
out
icebp
sub
xor
adc
push
inc
cmp
jnp
dec
ja
cld
std
inc
stos
cwtl
xchg
jns
andl
in
insb
int
icebp
jle
jnp
std
stos
sti
xchg
sbb
rorl
pop
xorb
push
sbb
call
enter
mov
shr
mov
cmp
lahf
jl
in
dec
or
pop
das
shl
ret
clc
pop
mov
add
dec
xchg
or
inc
mov
fadd
arpl
xchg
jle
in
dec
push
pop
mov
and
add
int
rorl
aas
scas
leave
loop
je
sub
std
jb
dec
imul
les
and
addb
sub
pop
fcompl
jnp
sbb
xor
data16
xor
popa
adc
shr
and
scas
lods
xor
dec
push
ljmp
orl
push
push
jl
or
fidivrl
int3
and
add
negb
ret
pop
or
lods
out
mov
cltd
cmpps
xor
xorb
fwait
push
lock
out
fildll
mov
cmpsl
lret
sarb
xchg
cmpsb
mov
icebp
jb
add
sahf
and
ja
mov
fs
sbb
loopne
mov
and
int
push
cmp
sbb
icebp
xor
fimuls
xlat
pop
fnstsw
push
insl
aad
daa
shll
cmp
push
jp
or
pop
inc
call
pop
cmpsl
int3
inc
push
xchg
jl
mov
xchg
int
sub
shll
mov
ret
loop
pop
or
scas
icebp
cmp
xor
ss
pop
rclb
jns
pop
sub
adc
xchg
xchg
rep
jae
popa
ror
jae
int3
or
adc
mov
lea
dec
jo
mov
sub
pop
fmull
xlat
int3
lret
dec
xchg
pusha
jnp
je
js
rolb
xlat
push
mov
test
sub
shll
cmp
sahf
lods
sbb
jns
dec
fdivs
jns
mov
and
pop
mov
cmp
mov
add
jecxz
pop
outsb
lods
or
mov
mov
fsts
mov
sub
mov
fdiv
ror
fcomps
pop
push
scas
sar
add
jbe
adc
std
cld
stos
in
cmp
xchg
add
or
adc
pop
outsl
pop
icebp
bound
fnsave
adc
out
adc
inc
imul
mov
outsl
pop
jmp
push
mov
cmp
sbb
mov
outsl
add
loope
and
jb
movsb
add
pop
xor
cwtl
lock
clc
outsl
imul
cmp
and
push
rolb
inc
inc
dec
cmp
ret
aam
pop
das
dec
insb
cld
call
add
enter
pop
outsl
pop
cmp
xchg
aaa
add
fstpl
imul
sub
mov
sub
push
sti
xchg
xchg
push
adc
jns
mov
push
push
clc
xor
add
fldl
pushf
hlt
cmp
mov
sti
jmp
dec
sti
cmove
notl
push
cmp
cmp
fistps
add
xchg
push
inc
repnz
mov
outsb
and
jno
stos
stos
jo
mov
sbb
dec
repz
jb
hlt
icebp
loopne
mov
pop
arpl
xor
mov
gs
mov
inc
dec
xlat
les
xchg
in
das
aad
sbb
dec
iret
insl
cmp
cmp
inc
sahf
pusha
cmp
pop
xchg
std
es
push
lea
dec
std
mov
mov
enter
mov
cmp
jmp
int
addr16
pusha
mov
dec
adc
mov
test
jl
je
xchg
jmp
pop
push
xchg
aaa
or
mov
andps
nop
shl
or
push
lods
in
aad
js
scas
cmc
inc
outsl
iret
cwtl
mov
icebp
adc
push
mov
out
repnz
push
xor
popf
mov
xchg
xchg
js
or
and
ret
push
out
sub
jb
stos
int3
xor
cwtl
shlb
inc
iret
aaa
jnp
in
shrb
dec
jge
int3
frstor
adc
in
hlt
fwait
xchg
dec
andl
or
jg
mov
adc
xchg
inc
clc
adc
sub
xchg
sbb
pop
mov
adc
or
xor
jg
fs
inc
sbb
inc
dec
test
mov
arpl
movsl
fmull
push
clc
ljmp
mov
push
std
lret
pop
jns
movsb
jno
out
push
jecxz
inc
mov
out
lods
icebp
enter
lahf
mov
dec
cmp
cs
shl
jnp
das
adc
jbe
gs
icebp
pop
mov
je
loopne
mov
jle
adc
or
jbe
test
rcrb
xchg
pop
out
sbb
or
mov
scas
jmp
dec
jno
stos
pop
push
testb
inc
mov
xor
shrl
gs
bound
jb
dec
or
dec
mov
mov
push
in
loopne
nop
adc
push
cmp
sub
test
leave
sbb
sub
inc
and
inc
push
sub
inc
repnz
into
cmpsb
movsb
cli
jno
jp
dec
or
arpl
xor
cmp
js
sahf
into
das
das
xchg
loope
pusha
movsl
add
xchg
and
in
je
sbb
jb
adc
jne
pop
sti
icebp
aaa
mov
ror
rcrb
xor
cs
out
jl
pop
xchg
fidivs
pop
sub
or
sub
xor
movsl
xor
push
or
test
dec
push
xor
xchg
lahf
mov
mov
in
lcall
leave
movsl
pusha
fisubrs
aad
scas
xchg
mov
lcall
mov
mov
jno
push
shrl
js
out
adc
enter
lcall
lret
ljmp
cwtl
add
out
pop
lods
clc
mov
inc
mov
sbb
xchg
test
dec
in
mov
sub
je
inc
xor
cwtl
gs
and
mov
push
adc
cltd
jecxz
xlat
cmpsl
cmp
lcall
hlt
sub
cmp
popa
xor
jp
cmp
mull
adc
mov
xor
aas
das
rol
mov
push
add
shlb
mov
div
push
add
jnp
lock
test
faddl
pop
add
pop
mov
and
fs
sbb
rcrb
rol
add
negb
inc
icebp
test
popf
inc
xchg
push
ss
jmp
and
mov
push
scas
sti
pop
into
into
push
lret
dec
notb
cmp
sbb
cli
stc
mov
cmp
sub
cmpsb
mov
mov
inc
cmp
xor
cwtl
push
test
imul
mov
mov
push
dec
add
jbe
mov
dec
cmp
mov
xchg
lea
lds
jecxz
or
out
stos
dec
sub
negl
adc
loopne
jne
jno
pop
lods
cwtl
sbb
add
sahf
push
loopne
mov
jl
iret
jne
test
out
jecxz
sbb
stc
loopne
adc
dec
pop
outsl
ljmp
icebp
mov
shlb
loopne
add
repz
shlb
adcl
mov
scas
sbb
lcall
int3
mov
sub
sub
movsb
in
enter
jbe
dec
pop
mov
lods
jmp
lret
cmpsl
jg
push
add
mov
sbb
dec
sarl
cmp
sahf
jl
pop
mov
fstps
es
cmp
dec
sub
sarl
xor
mov
inc
int
pop
mov
fisttpll
adc
imul
in
mov
inc
gs
xor
or
and
xchg
jbe
push
fcmovb
int3
jp
pop
int3
add
jg
stos
iret
add
in
mov
and
out
imul
loope
jo
mov
xor
and
ds
sahf
mov
or
jns
rol
in
repz
sub
fcomp
stos
pop
cmc
dec
pusha
cmc
cwtl
sub
sahf
cmp
and
lds
cmp
dec
imul
roll
adc
mov
gs
jb
xor
push
add
insb
jle
scas
sbb
xor
aas
pop
xor
cwtl
jae
inc
sub
cmc
jo
or
and
sub
mov
mov
mov
sbb
sbb
jmp
inc
nop
jns
clc
mov
movsb
out
cltd
call
ret
xchg
mov
inc
mov
repz
sbb
daa
jg
gs
jnp
sbb
lods
sbb
push
mov
fbld
outsb
data16
mov
sub
mov
pop
dec
imull
mov
pop
lock
mov
lcall
xchg
out
popa
daa
xor
cmp
lahf
into
xchg
repnz
frndint
ret
add
out
mov
fdivrl
addl
test
insb
daa
pop
or
mov
lock
sbb
shll
xor
daa
leave
mov
and
lahf
test
stc
push
pop
stc
orl
push
pop
in
cwtl
mov
cltd
jne
xchg
les
fcmovu
int3
dec
pmaxub
inc
jo
dec
inc
push
xchg
xchg
and
movb
push
fstps
dec
pop
push
xchg
xchg
loope
test
mov
xlat
test
lds
lods
pop
add
es
push
jns
mov
jge
jae
sti
clc
mov
push
pop
lret
leave
pop
push
das
pop
xchg
and
ret
cmp
test
fsubr
mov
adc
lret
xchg
xchg
jg
pop
iret
frstor
iret
fs
mov
fisttps
or
pop
mov
sub
stc
jg
pop
nop
jle
and
jecxz
fstpt
repnz
jl
repz
push
pop
aam
adc
xor
sbb
stc
shlb
lods
or
or
jne
daa
cli
mov
ljmp
sbb
push
xor
jno
adc
xor
cmp
inc
mov
mov
lock
push
mov
sub
rol
arpl
or
out
mov
sbb
ret
mov
fdivr
push
push
notb
cmc
sub
cmp
push
inc
mov
adc
bound
cmp
or
cmp
dec
int
mov
mov
icebp
jnp
das
pop
pop
and
in
adc
mov
push
fwait
push
pop
inc
xchg
mov
scas
dec
push
pop
or
adc
inc
sbb
and
mov
and
dec
xlat
dec
leave
sahf
inc
lret
popa
pusha
mov
and
mov
and
add
pop
xchg
add
dec
repz
loopne
aad
lahf
lret
jecxz
les
rcll
adc
inc
adc
sub
scas
sbb
jae
call
push
xchg
mov
mov
push
adc
xor
ds
std
dec
cmpsl
lods
repnz
xor
cmp
mov
leave
pusha
pop
mov
rcrl
pop
sub
outsl
dec
mov
movsl
add
or
mov
in
or
imul
lcall
out
mov
inc
or
mov
jnp
inc
ja
push
dec
pop
ret
inc
sub
mov
shrl
bound
xchg
outsl
aad
sub
or
rorb
mov
push
sbb
stos
push
in
pop
mov
idivl
pop
loope
fadds
push
adc
cwtl
ret
cmp
pavgw
aas
not
lock
aas
aaa
cs
or
or
int3
push
dec
mov
aam
push
out
or
leave
dec
rclb
dec
hlt
jne
inc
jbe
sti
hlt
in
sbb
add
insl
hlt
jg
xchg
in
fwait
add
ljmp
jle
mov
insl
je
push
add
out
stc
scas
leave
rcrl
add
push
jno
in
push
andl
fwait
pop
in
mov
icebp
cld
lcall
mov
dec
loope
cmpsl
ss
jb
imul
mov
jns
dec
jge
mov
mov
push
mov
lret
insl
or
out
arpl
xchg
jle
shll
in
jnp
lret
lcall
push
and
push
push
test
std
dec
and
rcr
cld
add
out
adc
pop
outsl
in
rolb
adcb
fidivl
subb
dec
test
add
popf
lahf
mov
lret
idiv
aaa
pop
add
orl
or
inc
je
iret
call
and
push
sbb
push
lods
es
out
jle
cmc
sbbl
mov
or
or
mov
mov
movsb
xor
int3
shrb
mov
xchg
pop
ret
or
fcompl
lahf
cmpsl
aad
stos
test
or
xchg
lock
aam
xor
dec
inc
in
pop
pop
js
mov
jecxz
jae
cltd
cmp
leave
loope
xorb
jle
adc
push
aad
push
fst
mov
testl
sbb
jo
and
das
loop
or
mov
pop
add
jecxz
pop
cmp
xchg
les
push
mov
and
call
and
xchg
cmc
out
cmp
pop
loop
enter
nop
mov
test
test
ss
jecxz
push
sbbl
inc
mov
mov
aas
adc
fnstenv
sbb
pop
call
adc
outsb
push
in
pop
rorb
mov
mov
cs
hlt
mov
movb
cmpsb
push
bound
mov
cld
and
jns
pop
outsb
test
pop
imull
inc
jp
sbb
and
mov
dec
pop
pop
daa
ds
cmp
int
cmp
int3
push
aas
cmc
xchg
aad
xchg
inc
jno
popf
mov
lea
sahf
sub
out
dec
cmpsb
mov
pusha
in
xchg
sbb
int3
mov
push
rcl
cltd
ljmp
xchg
mov
fidivs
or
insl
add
icebp
pop
mov
sar
ss
lods
cwtl
cmp
sub
or
bnd
jb
xor
fsubr
fldcw
and
test
xor
or
add
rcrl
mov
sub
dec
ljmp
inc
mov
loope
mov
add
shll
jle
popl
fsubs
out
repnz
sbb
addr16
dec
ja
ret
mov
aad
or
push
mov
ja
mov
sbb
xchg
cli
mov
scas
jnp
in
arpl
cmp
pop
outsb
cmp
mov
pop
xchg
std
and
pop
mov
push
lret
push
ret
inc
xchg
xor
adc
scas
fisubl
xchg
push
div
mov
dec
outsl
jnp
mov
hlt
movsl
push
aaa
jae
push
addl
pavgw
int3
push
jp
jecxz
xorb
mov
nop
push
push
sbb
outsl
inc
pop
pop
or
mov
ljmp
or
fnstenv
mov
mov
push
inc
arpl
jl
xchg
dec
xchg
fwait
xchg
cmpsb
inc
push
sti
lods
mov
pop
vmwrite
fstps
sbb
pop
and
addr16
mov
repz
pop
xchg
pusha
xchg
lds
arpl
pop
not
mov
enter
sti
xchg
dec
repz
cmp
xchg
into
ret
push
mov
jp
loopne
push
jge
hlt
cli
mov
frstor
push
sahf
and
mov
dec
jo
push
fwait
mov
pop
lcall
xchg
xchg
or
loope
stc
lods
mov
inc
dec
jge
mov
lods
pop
loopne
leave
lcall
sahf
scas
adc
jns
inc
lcall
mov
cmp
ds
call
neg
ficoml
orb
out
in
leave
cmp
decl
jle
pop
jae
push
in
push
xchg
dec
jne
testb
mov
sbb
lahf
sbb
cli
inc
xlat
sub
pop
pop
lea
aas
les
iret
ja
mov
loope
jb
xchg
popf
bound
subl
adc
packuswb
je
sbb
cld
jmp
xlat
jno
mov
imul
xor
inc
sahf
test
stos
lret
cmpb
push
cwtl
into
loope
cmc
dec
push
lret
push
neg
sbb
add
cltd
int3
push
mul
test
mov
lea
and
pop
push
fwait
rorb
mov
sub
sti
scas
pop
adc
dec
fistpl
je
push
pop
imul
mov
std
ret
sub
push
ja
push
jp
add
xchg
in
filds
divps
lds
daa
or
js
inc
imul
sbb
xchg
outsl
in
jae
dec
fucomi
add
es
mov
mov
out
jo
inc
and
notl
decl
mov
into
cld
in
data16
test
inc
cmp
insb
fildll
mov
les
mov
and
xchg
in
jle
adc
xchg
jge
hlt
sub
insl
or
add
jle
pop
ss
ret
repz
aad
sbb
inc
insl
xor
jo
test
push
and
jmp
xchg
sbb
lcall
cli
sahf
scas
fstpl
inc
jbe
das
adc
adc
and
popa
jg
mov
xlat
jmp
jecxz
pusha
pop
les
das
add
fbstp
sbb
in
imul
mov
loop
fsubl
inc
add
std
popa
adc
mov
mov
mov
mov
loop
jne
out
sbb
jnp
lahf
cli
adc
sub
adc
pushf
icebp
add
das
jns
mov
sahf
adc
sbb
std
xchg
popf
dec
or
xchg
loopnew
psrlw
sub
clc
orb
mov
push
push
or
cltd
cmp
mov
aam
pop
int
das
dec
jge
test
inc
out
arpl
and
cmp
mov
popa
js
push
jg
pop
lea
mov
cmc
adc
mov
arpl
jno
inc
jo
popa
cmp
or
mov
adc
sub
xchg
stc
mov
mov
or
dec
test
dec
xchg
testl
repz
sbb
cs
lcall
nop
xchg
js
ja
xor
adc
add
ljmp
jg
push
gs
xor
imul
cltd
test
popl
sub
je
in
cltd
mov
jecxz
cltd
pop
jge
inc
inc
dec
cld
add
sbb
mov
cmp
test
shlb
nop
ja
aam
pop
push
dec
xor
hlt
std
addr16
xchg
mov
js
sbb
inc
je
in
jbe
push
subl
addr16
es
push
jne
mov
sbb
fwait
xchg
jbe
mov
orl
enter
inc
mov
dec
xchg
adc
inc
dec
push
test
icebp
sti
sbb
dec
mov
imul
jmp
add
mov
xchg
adc
out
into
scas
push
das
xchg
repnz
adc
or
add
in
dec
aaa
loope
pop
pop
jo
data16
sbb
pop
cltd
and
nop
in
sub
mov
adc
xlat
inc
sarl
ljmp
jae
sbb
loopne
insl
sub
add
cli
mov
fbstp
mov
mov
fmul
cmp
cmp
movsb
xchg
mov
repnz
jecxz
jo
sub
cmc
mov
ds
pop
idivb
fidivl
cld
adc
mov
fsubr
test
out
xchg
or
out
push
addr16
in
pop
clc
cld
cmp
mov
cltd
insb
js
incb
sbb
out
lds
in
or
imul
cmc
std
sub
shll
push
repnz
in
mov
mov
popf
fldenv
and
jbe
xchg
ss
and
popf
pop
jl
movsl
ja
orl
mov
test
subl
rorl
rol
div
inc
frstor
mov
and
push
repz
test
outsb
mov
pop
mov
sbb
or
scas
mov
shrl
mov
mov
push
mov
cmp
cmpsl
xor
push
test
test
sbb
movsl
hlt
cmp
inc
pop
mov
inc
cmp
adc
bound
bound
mov
in
mov
push
movsl
dec
mov
ja
jle
adc
pusha
or
add
roll
mov
dec
lret
shll
push
pop
aaa
sub
jge
scas
xchg
mov
ljmp
scas
mov
or
cmpsl
mov
rcrb
sub
jecxz
scas
shll
xchg
and
mov
or
into
add
je
ss
ds
push
scas
fcompl
ret
dec
sub
leave
mov
dec
push
jb
cmp
in
out
mov
mov
cmc
notl
jmp
jp
nop
inc
fucom
jmp
pop
push
sub
fs
call
xchg
movsl
push
mov
stc
gs
inc
mov
push
adc
inc
fistpll
inc
lods
lea
mov
or
and
in
sarl
int
daa
fwait
fwait
xor
or
pop
cmp
inc
test
and
stc
stos
arpl
movsb
in
inc
add
adc
xchg
or
in
insl
inc
les
add
pcmpeqd
negb
je
adc
push
or
xlat
mov
adc
fldcw
xchg
popf
mov
pop
stos
test
jb
xorb
mov
test
test
decl
xchg
mov
push
test
ja
pop
lret
in
hlt
in
mov
adc
sub
jne
fs
movsl
aaa
dec
icebp
sti
fisubrl
add
loopne
into
inc
rorb
mov
and
or
inc
jo
dec
jo
jl
pop
leave
push
out
jae
mov
les
mov
mov
insl
mov
loopne
add
mov
xor
das
inc
outsl
enter
xchg
and
mov
and
jge
pop
mov
pushf
or
jl
xor
lret
jecxz
mov
bound
add
push
dec
add
sti
and
fistpll
aad
outsb
pop
cmp
cmpb
arpl
mov
hlt
mov
js
imul
push
lret
push
inc
sahf
rcl
jns
roll
jecxz
mulb
js
das
les
shlb
dec
sub
sbb
icebp
sub
mov
xor
test
hlt
jg
xchg
add
sbb
jg
inc
mov
stos
js
pop
sub
js
leave
incb
loope
inc
es
mov
and
xor
pop
mov
jae
iret
add
pop
cmp
cmc
ret
test
jmp
mov
inc
icebp
insl
lods
enter
add
popa
aam
mov
sbb
loope
stc
xchg
enter
es
rorl
mov
lock
decl
scas
popa
push
popf
shl
xchg
inc
adc
sub
shll
xor
loope
fisttpl
jne
push
cmp
bound
mov
repz
mov
mull
lods
sub
dec
xorb
cli
loop
and
outsl
sbbl
out
jns
mov
pop
arpl
sbb
scas
xor
in
push
stc
push
ror
jne
ds
fisttps
mov
pop
pop
in
sub
mov
ds
cmovge
movsb
ret
stos
pop
adc
inc
adc
filds
xor
les
mov
rcll
aam
sti
lea
jmp
mov
es
out
call
sub
adc
outsb
fcompl
and
push
shll
es
cli
xchg
dec
sbb
xchg
add
pop
aad
stos
add
scas
mov
shll
adc
jbe
outsl
or
shrb
pop
jge
bound
fs
mov
repz
enter
mov
cmc
in
es
dec
mov
mov
lods
adc
les
inc
cmp
test
adcb
inc
lock
mov
lods
sti
fiadds
arpl
scas
mov
fildll
sbb
pushf
imul
jae
xor
sbb
xor
stos
mov
shr
pop
jnp
adc
xchg
je
insl
xchg
mov
push
adc
inc
mov
inc
test
scas
mov
out
aam
lods
cld
inc
mov
in
mov
testb
setno
mov
pop
nop
add
lds
add
fimuls
pop
inc
fwait
xadd
lods
push
cmp
push
pop
hlt
loopne
out
je
outsl
cmpsb
ret
jmp
pop
push
popf
sub
sub
fdivrl
mov
fcmovne
sub
scas
sarl
sub
sbb
ss
mov
and
dec
and
push
mov
into
in
ja
in
sbb
or
dec
push
cmp
or
jl
lods
les
jbe
mov
stc
inc
fisttpll
lds
inc
fstpt
ss
sbbb
sbb
sub
push
fbstp
pop
test
xchg
dec
dec
aad
add
pop
gs
mov
xchg
mov
push
xchg
fs
mov
dec
and
sub
adc
shlb
inc
into
cs
cwtl
sti
sbb
bnd
cmp
push
enter
sahf
in
adc
jmp
out
inc
cmp
imul
rcrb
dec
sbb
pushl
or
add
aaa
or
push
sub
push
adc
xchg
lret
das
inc
mov
mov
inc
int3
pop
mov
ficoms
outsl
ficoml
inc
mov
outsl
push
mov
jb
daa
mov
pop
mov
xchg
or
es
imul
fs
ss
cmp
bound
div
ja
push
icebp
mov
dec
sbb
out
test
adc
jl
dec
or
nop
jle
xchg
fdivrl
add
shrl
xchg
mov
and
sarb
leave
sahf
in
mov
or
sbb
dec
lahf
rolb
jns
jns
loope
rolb
jg
push
cmc
and
incl
pop
lea
pop
xor
aam
pusha
xchg
out
dec
in
mov
xlat
adc
xchg
or
jp
add
jae
setbe
push
sub
mov
or
dec
cmp
sub
or
mov
xlat
xchg
add
sbb
hlt
insl
and
cli
data16
sbb
nop
add
lea
pusha
mov
leave
shr
push
push
pop
cmp
loope
xchg
scas
sub
mov
pop
call
fdivl
jecxz
push
cld
ds
js
and
inc
jp
mov
es
xor
xor
push
loop
cmpsl
cld
test
or
sahf
in
loope
mov
fildll
cmc
add
adc
inc
cltd
mov
and
int
mov
inc
jno
push
rclb
scas
clc
sub
sbb
push
mov
js
jg
xor
lock
push
xor
pop
testl
in
pop
rclb
imul
dec
mov
gs
cmp
push
xchg
movsb
adc
mov
outsl
and
lret
pop
ljmp
in
inc
sbb
jp
pusha
xor
in
adcb
enter
xchg
push
adc
or
cmp
imul
lods
dec
lea
test
stos
dec
arpl
xchg
out
mov
test
xchg
cs
pop
ljmp
jge
or
pusha
adc
adc
test
fmuls
je
insl
ljmp
push
test
in
push
stc
fnstenv
jmp
jecxz
test
mov
lret
mov
jp
adc
sbb
jle
inc
xchg
out
aaa
push
mov
inc
jle
jmp
or
sub
movsb
jo
test
dec
dec
std
sbb
repz
or
and
inc
lea
stos
pop
aam
stc
insb
outsl
mov
jnp
fcmovb
shlb
outsb
jae
xchg
sbb
pop
dec
mov
fbstp
jnp
xor
popf
pop
sub
xlat
sub
mov
in
in
cmpl
adc
test
adc
add
rolb
scas
shlb
hlt
jo
cmpsl
jb
add
sbb
dec
in
enter
out
pop
dec
test
sub
sub
xor
shr
pop
xchg
mov
lods
sbb
sar
or
pusha
inc
test
shl
xchg
bound
push
pop
or
out
sti
aas
int3
sbb
pop
outsb
stos
hlt
iret
sbb
mov
aam
adc
nop
pop
movsb
je
stos
fldl
xchg
xor
icebp
sub
or
call
sbb
pop
add
pop
scas
std
xchg
sti
cpuid
sbb
xchg
or
andb
xor
dec
jge
sbb
in
call
add
add
test
loope
insb
cltd
pop
xor
out
out
lods
mov
and
popf
notb
out
insl
or
cmp
and
iret
push
ss
popa
loop
cmp
pop
movsl
fists
imul
clc
inc
sbb
jns
int
imul
pop
xor
cmc
add
movsb
push
addl
ret
or
ljmp
push
sub
adc
jo
testl
negb
call
mov
popf
jecxz
out
cltd
in
sbb
mov
push
or
test
cmp
movsb
imul
fnstenv
ret
pushf
sub
or
int3
push
pop
pop
and
and
add
jle
and
adc
rclb
out
ds
ds
mov
mov
jae
xlat
inc
sub
push
pop
popa
cmc
pusha
xchg
xlat
adc
add
mov
sbb
test
cld
popl
dec
ljmp
sub
mov
xchg
push
dec
inc
repnz
fimuls
adc
clc
push
cmp
and
jge
sbb
and
jp
cmp
mov
jne
add
mov
movsb
and
lods
push
fisubs
and
xchg
cmc
icebp
cmc
push
outsb
inc
xchg
jp
testl
clc
sarl
sbb
xchg
dec
rorb
inc
jbe
cmp
inc
pop
cmp
jno
xor
push
dec
mov
dec
lods
xor
call
dec
dec
es
loope
dec
lret
mov
mov
mov
mov
fs
dec
xor
sub
outsb
fcoml
adc
int3
add
sarl
shrb
mov
mov
adc
mov
or
jl
cmp
cmp
mov
push
popf
mov
mov
pop
xchg
cld
mov
inc
mov
xchg
iret
movsl
pop
add
in
cmp
and
pop
lods
mov
scas
mov
ret
adc
data16
mov
cmp
cmp
inc
pop
in
test
movsb
jmp
push
mov
pop
stos
xchg
xchg
xchg
lahf
lock
xchg
cwtl
loopne
dec
inc
mov
insb
sub
gs
fistl
jae
mov
inc
cmp
pushl
fisttps
mov
xor
dec
add
jmp
fsts
jg
jl
push
xchg
leave
mov
xor
or
cwtl
hlt
dec
stos
out
sub
mov
xchg
jp
fs
and
dec
jmp
cld
or
xchg
loopne
cltd
inc
lds
inc
fwait
xor
or
xchg
push
push
xchg
mov
xor
jge
in
cmpl
scas
mov
or
lods
xchg
repz
mov
inc
out
and
mov
cld
push
and
popa
jmp
cmp
test
cmp
xor
sub
aas
iret
out
rorl
loope
lds
jb
decl
mov
dec
rorl
ss
call
popf
daa
jnp
jbe
faddl
sbb
sbb
out
mov
xlat
notl
sbb
pop
lret
ja
int3
mov
jbe
cmp
jns
repz
adc
addl
dec
test
lcall
mov
or
leave
pop
ljmp
and
xchg
outsl
cwtl
xchg
sbb
cwtl
dec
test
in
ja
outsl
rcll
daa
or
fadds
lods
popf
mov
inc
xchg
push
cli
loope
cld
lahf
addr16
pop
cmpsl
xchg
mov
xchg
gs
sbb
hlt
sti
mov
push
push
xlat
or
jp
sbb
clc
ficoms
jmp
jmp
xor
push
lcall
sbb
nop
mov
mov
pop
lods
rcrl
movsb
cmpsl
or
mov
mov
imul
bound
xchg
enter
cmp
cmpsb
scas
push
inc
test
movsl
dec
pop
cmpsb
push
add
and
mov
mov
cmpsb
inc
xor
adc
stc
xchg
xchg
adc
popf
adc
push
into
stos
clc
fcoms
or
stc
hlt
ror
stc
sti
cmp
pop
testl
inc
popa
jns
lahf
add
sbb
repnz
shr
repnz
jns
xchg
rorl
mov
or
push
mov
dec
les
in
imul
add
mov
and
push
shl
out
lcall
daa
shr
or
dec
dec
cmc
mov
scas
in
stos
sub
and
mov
mov
xchg
lcall
or
pop
decb
fs
push
test
test
in
jg
inc
cmpsb
push
cmpsb
call
dec
sti
ds
xor
jecxz
pop
cmpsb
xor
mov
sbb
xor
mov
aad
mov
pop
je
push
iret
arpl
mov
add
jbe
add
out
icebp
jae
shl
outsl
dec
add
sti
pusha
push
mov
jno
shlb
pop
clc
mov
fstl
add
popa
dec
movsb
mov
lock
pushf
sahf
xor
movsl
ret
and
mov
lcall
jl
xlat
inc
inc
les
bound
push
jmp
int
fidivrl
fnstcw
cmp
add
mov
dec
mov
dec
aas
arpl
fldcw
jl
icebp
adcb
inc
cmp
daa
incb
out
mov
add
cmc
fs
or
mov
ss
dec
adc
pop
fildl
ficomps
cli
xchg
shll
adc
fcmovnb
xlat
or
jl
in
aam
push
sti
js
pop
push
ljmp
xchg
xchg
ror
jecxz
cmpsb
cmp
fwait
shlb
adc
rclb
pop
pop
xchg
cltd
neg
xchg
ljmp
in
push
je
mov
shlb
clc
sub
ds
inc
xchg
insb
mov
sahf
lret
clc
dec
and
dec
movsl
sahf
jnp
cli
pushf
les
pushf
fcomps
andl
and
mov
mov
mov
and
mov
or
cmp
jecxz
inc
ljmp
stos
aad
sub
sti
jns
nop
add
sbb
mov
je
fdivrl
movsl
mov
cwtl
adc
iret
mov
mov
cmp
aad
mov
sbb
xchg
testb
gs
je
xlat
inc
xchg
sub
and
lcall
cmp
pop
xor
loop
mov
sub
xchg
add
je
pop
pop
jnp
test
lret
mov
aad
jg
sub
mov
cwtl
inc
in
stos
movsl
lods
repnz
daa
cmc
out
pusha
leave
test
mov
movl
icebp
jg
xor
push
sti
addr16
mov
dec
movsb
or
inc
rol
pop
cmp
loop
jae
cmp
out
cmp
xchg
push
jle
jmp
mov
cld
dec
fsubs
mov
sar
into
ret
xchg
popf
insb
stos
dec
lods
pushf
test
dec
rorl
or
sbb
out
ljmp
push
xchg
or
and
dec
out
sub
dec
scas
jae
adc
ja
push
xor
enter
aaa
and
inc
pop
mov
rorl
mov
in
mov
mov
js
and
insl
push
dec
push
push
mov
jae
jp
push
xor
ja
lcall
jg
outsl
pushf
xor
cmp
arpl
les
or
xlat
cmp
arpl
xlat
ss
fisubs
jg
sub
shrb
pop
sbb
sti
inc
dec
cmp
out
jae
or
adc
dec
push
loop
mov
lret
jge
stos
mov
ret
iret
mov
nop
jns
mov
jnp
push
ret
add
push
xchg
addr16
je
cmp
mov
cltd
pushf
pop
or
lea
lahf
ret
jns
shrl
lcall
xor
mov
lock
sub
std
setae
push
jo
in
into
jb
std
aam
imul
into
arpl
pop
xor
lods
sbb
pop
and
lret
stc
inc
inc
call
mov
dec
push
xchg
aad
inc
mov
and
test
sub
insl
or
and
sbb
push
out
adc
das
push
jle
add
push
scas
fs
subb
dec
nop
insb
xchg
or
movsb
repnz
xlat
xchg
xchg
mov
push
andl
insl
lahf
mov
es
out
jmp
ss
jnp
mov
or
outsl
lea
popa
sbb
mov
xor
push
sahf
daa
cli
lock
mov
dec
dec
pop
fiaddl
push
jb
sub
pop
filds
xchg
sub
or
lahf
das
mov
nop
orl
lret
scas
clc
add
loop
lahf
push
nop
mov
movsb
pop
ja
dec
ljmp
and
stos
or
cld
jmp
pop
imul
xlat
ret
or
xchg
test
adc
xchg
mov
sub
and
mov
dec
jnp
push
iret
xor
xchg
jl
jecxz
lret
dec
inc
sub
std
out
jae
pop
out
inc
notb
call
xor
popf
insl
jno
mov
addb
cmpsb
add
xor
sub
shufps
dec
xor
pushf
loope
cli
mov
movsb
push
xor
mov
daa
adc
jge
repz
les
into
jne
das
lock
and
dec
dec
outsb
mov
jbe
ret
arpl
jbe
daa
add
xchg
repnz
pop
or
pop
sbb
pop
clc
push
mov
and
pushf
or
in
mov
aad
pop
lods
dec
or
mov
jle
mov
push
jo
push
repnz
sti
jo
lahf
scas
std
cmp
pop
insb
jo
nop
xor
orl
push
aas
pop
sub
out
sub
push
mov
enter
fs
call
push
outsb
xchg
pop
mov
jno
es
push
out
push
jo
sub
or
movsb
mov
rcl
stos
pop
xor
sub
mov
xlat
add
psubsw
fldlg2
pushf
imul
ret
mov
les
xchg
ficomps
roll
fwait
xor
push
loope
or
add
sub
cs
sub
xor
out
fisttpl
jp
jne
aad
xchg
adc
jle
data16
adc
lcall
push
mov
cmc
rolb
jle
inc
ds
lods
add
sbb
sbb
sbbl
jnp
fisubrs
outsb
and
xor
stos
jecxz
cltd
dec
call
pop
mov
jo
nop
or
stc
mov
and
hlt
out
add
repnz
loop
jmp
dec
pop
lock
pop
push
jo
or
or
vmwrite
je
dec
rorw
jmp
mov
mov
subb
pop
mov
or
adc
adc
fidivs
mov
mov
adc
or
pop
test
les
and
rorb
and
xlat
pop
push
push
or
cmpl
into
mov
sbb
push
push
mov
pusha
mov
sbb
sbb
ja
add
jmp
cmp
imul
fwait
stos
push
nop
scas
xchg
bound
dec
push
sub
pushf
sub
xchg
xorl
add
call
int3
jnp
xor
xchg
sub
scas
and
loopne
cwtl
pop
or
pop
aam
fbld
inc
adc
cmp
scas
inc
pop
jmp
or
imul
hlt
mov
pushf
inc
xchg
sbb
les
pop
cmp
lret
insl
sub
cmpb
mov
xchg
mov
fs
sti
xchg
xchg
pop
xor
adc
int
push
std
cltd
jne
gs
cmpsb
leave
cld
adc
rorb
jge
sbb
loopne
pop
stos
jle
in
sarb
clc
and
ficomps
gs
pop
inc
adc
jns
cmp
or
push
sbb
bound
movsl
jnp
sub
leave
adc
sbb
or
in
in
pop
cmp
int3
ja
cwtl
pushf
dec
sub
movsb
sbb
movsl
jno
mov
mov
add
repz
pop
fadds
mov
loope
out
xchg
and
dec
call
mov
scas
mov
xchg
lcall
fisttps
insb
cmp
mov
fiadds
es
push
cmc
stos
push
mov
cmc
jle
adc
in
adc
fldt
clc
lret
sbb
pop
cmpsl
lods
xchg
idivb
ja
in
pop
mov
inc
adc
mov
push
xor
push
push
rcrl
push
pop
dec
jo
cmpsb
pop
add
or
aas
adc
ja
push
sbb
sbb
add
cli
cmp
add
and
mov
pop
mov
sub
dec
stc
int
fincstp
int3
test
movsl
pop
sbb
and
fs
ret
mov
jmp
es
mov
jle
ss
jnp
jno
push
int
leave
and
stos
outsl
hlt
mov
stc
cmp
test
xchg
mov
or
arpl
jle
xchg
sbb
imul
xchg
mov
fs
sub
xchg
mov
xchg
cmp
outsb
jo
lret
sbb
repz
sub
dec
popf
into
mov
mov
cmp
xor
fdivrs
lret
mov
ljmp
inc
ljmp
stos
rcrl
push
inc
cmp
roll
sbb
push
pop
flds
push
push
out
pop
push
adc
mov
mov
scas
jmp
out
add
pop
cld
xlat
enter
lcall
lahf
fcoml
mov
add
popf
mov
mov
aas
pushf
hlt
xor
shlb
adc
jne,pn
sbb
test
iret
add
inc
mov
stos
pop
pop
lods
pusha
inc
adc
jge
fnstcw
fimull
lock
push
sbb
out
addr16
push
aam
mov
xchg
das
addb
gs
pop
xchg
idivl
inc
jp
dec
loop
mov
xchg
lds
cwtl
push
bound
sbb
pop
push
cwtl
mov
xchg
loope
or
loop
lock
sub
adc
leave
mov
push
cltd
ljmp
cmp
int
subb
dec
test
add
inc
and
sub
sub
popa
push
jg
cmp
pop
mov
adc
xlat
mov
inc
cmp
add
sub
jns
and
pop
adc
mov
daa
lret
iret
sub
scas
sti
push
sbb
mov
icebp
xchg
pop
mov
dec
negl
xchg
inc
sbb
or
push
lock
test
and
out
pop
sarb
cli
fs
or
test
mov
pop
jle
jb
mov
ds
out
cmpsl
push
xorb
xchg
adc
add
inc
cmp
in
cwtl
imulb
lret
arpl
in
sub
xlat
lret
xorps
shl
jns
or
mov
int3
jg
xor
js
addr16
mov
add
add
hlt
sub
rclb
and
mov
shrd
addr16
push
sti
ja
inc
in
fxch
add
rcll
mov
in
pop
dec
xchg
stos
jno
ret
xchg
mov
shrb
xchg
adcl
or
fsubs
leave
stc
sub
inc
loop
test
jo
dec
repnz
cld
test
test
adc
add
add
ljmp
enter
sbb
ljmp
lcall
jg
pop
jae
repz
pop
push
mov
adc
dec
jae
push
fnstenv
xchg
cmp
inc
shll
dec
mov
jecxz
popa
pop
fists
out
xchg
jle
lods
add
nop
dec
in
imul
or
dec
fisubrl
jne
push
pop
clc
xor
cwtl
shrb
sub
adcb
mov
out
outsb
mov
xchg
lcall
xchg
push
inc
mov
cs
in
jecxz
xor
mov
out
jo
inc
cltd
or
stos
mov
push
mov
push
arpl
clc
dec
test
xchg
fldcw
out
or
ret
sub
aam
sbb
xchg
jnp
mov
cmp
push
das
lret
lea
push
dec
fs
cltd
out
out
pmaxsw
rorl
cltd
jne
adc
xchg
sbb
adc
mov
fcompl
pop
jp
sub
adc
push
icebp
and
icebp
jl
add
popf
xor
es
ficoml
sub
inc
shl
push
movsl
js
inc
cs
mov
pop
inc
sbb
mov
xchg
lds
cmpsl
test
or
add
cmp
ds
xchg
mov
out
mov
adc
pop
jl
cld
push
sub
cmp
mov
inc
nop
mov
cmpsb
fcomp
icebp
jns
adc
push
mov
mov
subb
jns
adc
in
lock
outsl
mov
push
mov
pop
stc
adcb
rcrl
and
loopne
cwtl
pop
imul
xchg
cltd
ret
mov
test
push
pop
lret
add
jne
ljmp
bt
mov
and
lcall
pop
inc
scas
jnp
cli
fisubrl
adcl
out
inc
in
add
pop
lods
test
push
mov
cmp
cmc
hlt
push
and
rcl
fadd
xor
gs
cmp
clc
fwait
insl
dec
jb
jns
adc
aaa
and
sbb
push
mov
jl
clc
pop
orl
push
xor
add
lods
jbe
insl
mov
mov
sbb
cltd
hlt
xor
push
ss
jns
adc
imul
dec
push
jecxz
dec
adc
jl
add
fistpl
fildl
arpl
sub
lods
fisubs
jl
mov
sbb
mov
sub
ficompl
test
fsubrl
or
and
push
repz
call
mov
push
mov
pop
scas
cmc
jb
mov
push
pop
in
scas
fildl
fistps
add
inc
jle
mov
or
xor
aas
jl
pop
stos
push
mov
ds
arpl
or
push
outsl
push
push
test
nop
dec
iret
lods
cmp
addr16
jmp
sbb
dec
inc
ret
xchg
add
jl
daa
je
mov
adc
out
push
add
push
mov
pushf
mov
outsb
fucomip
dec
sub
jnp
loope
sti
mov
out
movsl
and
lea
movsl
sub
test
fstps
cmp
inc
xchg
scas
fmuls
pushf
in
fistpll
out
and
push
addl
lahf
adc
fstp
pop
fisubrl
xchg
lock
xlat
sahf
arpl
aam
adc
or
xor
mov
add
and
jmp
pushf
xchg
leave
mov
lcall
cmc
sbb
pop
test
cmpb
sub
clc
mov
add
mulb
jnp
pop
cwtl
movsb
mov
movsl
add
repnz
jne
cmc
jnp
aad
outsl
insl
dec
out
popf
xor
out
push
sbb
hlt
cmp
out
mov
popf
jge
or
outsl
jl
sbb
dec
pop
das
mov
out
and
push
and
test
js
sbbb
fs
sub
mov
insb
jbe
out
or
and
pop
mov
stc
dec
movsl
mov
sub
xor
adc
or
cmpsl
push
in
into
push
cmc
jns
repz
pop
jg
fiadds
mov
outsl
repnz
in
mov
jb
push
addl
bound
pop
push
rcl
movsb
daa
cmp
cltd
fidivrs
cs
cld
je
jne
dec
pop
jmp
out
sub
repnz
xor
dec
push
mov
sbb
xor
push
xchg
inc
test
int3
or
insb
sarl
cld
and
adc
and
ds
nop
xchg
das
lods
mov
or
test
and
repnz
xchg
adc
inc
test
loopne
sbb
pusha
popa
into
mov
movsl
shlb
in
push
subb
pop
es
inc
push
mov
add
or
sub
cmp
out
mov
imul
jl
enter
stc
sbb
mov
add
mov
in
rcl
add
mov
jmp
outsl
mov
test
sub
ljmp
xor
push
int3
mov
cwtl
mov
movsb
jb
jns
outsl
dec
add
xor
jecxz
pop
sti
fisubl
hlt
test
and
adc
pushf
stos
mov
xor
push
cli
cmp
jnp
sbb
xchg
push
inc
ds
inc
mov
icebp
cmp
adc
bound
xlat
jne
cmp
jo
inc
mov
or
fiadds
insl
int3
pushf
mov
adc
mov
or
fnstenv
sub
push
xor
push
loope
fsts
inc
xchg
lds
popa
push
push
hlt
sub
dec
pop
mov
out
jle
hlt
jl
xchg
push
inc
mov
add
popf
mulb
inc
dec
cltd
and
popa
fistl
nop
shll
shll
mov
or
xchg
inc
jl,pn
pop
xor
dec
adc
and
mov
mov
scas
test
sub
nop
test
push
fnstcw
lods
rcrb
fcomip
ret
sahf
dec
nop
es
gs
in
rcrb
popf
mov
rcrl
sbb
ud0
pop
jg
enter
std
repnz
pop
pop
in
mov
dec
imull
xor
ja
imull
mov
pop
pop
pop
xchg
andl
add
addb
lods
sbb
and
push
and
testb
or
sub
xchg
cmpsl
fs
je
stos
andb
int
push
lods
jns
lret
push
cmp
adc
jo
mov
lock
ss
loop
xchg
insl
dec
out
cmp
pop
lods
or
mov
cmpsl
inc
fidivrs
cmpsl
jle
test
std
add
dec
add
cwtl
mov
sub
ret
ds
xor
jge
cmp
rorl
sbb
outsb
add
xchg
ljmp
test
xor
push
pop
test
repnz
scas
orb
fiaddl
cmp
adc
sub
pop
in
mov
jp
xchg
adc
ret
jl
or
std
pop
leave
mov
clc
clc
sahf
out
aaa
sbb
cmp
adc
fadds
rcr
lea
iret
jbe
cwtl
outsb
push
es
out
decl
popa
mov
dec
in
inc
adc
ss
bound
ljmp
dec
dec
xor
shl
in
jecxz
or
jecxz
insl
ficoms
out
movsl
pusha
mov
inc
mov
ja
test
push
fsubs
inc
jp
mov
loope
add
mov
addr16
add
or
jbe
daa
mov
scas
dec
sbb
push
mov
ljmp
popa
pop
aam
and
cmp
fmuls
dec
gs
lret
cmpsb
outsl
push
jle
insl
lock
inc
aaa
or
ss
lahf
or
movsb
jmp
std
push
push
fbld
xchg
outsl
popa
arpl
xchg
aaa
xchg
mov
ss
push
loop
ja
movsb
adc
gs
xor
stos
lret
jne
jae
es
imul
test
pop
mov
and
subl
aaa
jne
push
mov
xchg
mov
jg
jge
in
shlb
cmp
test
hlt
insl
mov
shrl
or
mov
insb
js
push
cltd
push
cwtl
stos
movsb
mov
xchg
mov
loop
jns
cld
sbb
adc
pop
mov
mov
std
outsl
mov
xor
dec
stc
fstpl
and
mov
lret
pop
dec
int
fdivrp
lods
leave
xor
jp
mov
jnp
cltd
outsb
je
jno
ja
inc
pop
int3
ror
mov
dec
test
push
movsl
adc
sub
addr16
insb
mov
shlb
pop
sub
sbb
add
mov
ja
adc
imulb
xorl
pop
imul
push
mov
lcall
scas
jp
in
aaa
mov
pop
pop
hlt
inc
pop
aam
push
js
roll
test
cmp
mov
inc
pushf
xchg
movsl
adc
movsb
lea
shl
arpl
xchg
jle
add
jbe
pop
arpl
fldt
mov
inc
jg
xor
std
fwait
sahf
in
add
pop
push
and
mov
cmpsl
aam
dec
or
adc
cmp
ljmp
test
lock
pop
stc
add
cld
sbb
mov
test
mov
fwait
mov
push
mov
mov
sbb
out
xor
fwait
in
or
aas
push
jno
dec
int
mov
cmp
les
in
mov
shlb
sbb
fsubrp
arpl
add
adc
pop
andb
xchg
js
and
aam
push
pop
daa
mov
push
inc
rcll
cltd
inc
outsl
movsb
fiaddl
jg
lret
dec
leave
and
xchg
mov
jge
mov
inc
sbb
fisubrs
mov
subl
or
adc
mov
sbb
das
lret
mov
loopne
inc
jl
mov
icebp
pop
adc
xchg
stos
subl
ret
sub
dec
mov
dec
inc
test
pop
mov
daa
add
orl
out
into
popf
sbb
xchg
test
stos
outsl
jo
cli
sub
adc
sub
pop
pop
lds
xchg
in
out
mov
push
jmp
dec
cmp
iret
push
inc
je
xchg
imul
inc
loopne
jo
iret
into
fldt
xor
cmpsl
scas
add
mov
xchg
icebp
inc
lret
cld
lahf
add
inc
int
mov
pusha
mov
inc
pop
push
lcall
xchg
jp
sbb
add
mov
xchg
and
cwtl
pop
or
jg
and
lcall
dec
cld
inc
jbe
jne
int
cmp
pop
mov
and
xchg
into
inc
clc
dec
sub
pop
jnp
or
sbb
push
jmp
pushl
call
outsb
and
cmp
repnz
inc
fdivrl
hlt
js
pop
mov
jl
xchg
icebp
push
test
lds
inc
add
pop
dec
and
adc
scas
stos
in
cmc
ss
in
into
pop
push
popf
and
hlt
in
mov
xor
fdivs
enter
repz
pop
cli
lret
ljmp
int3
insb
loope
mov
jg
and
mov
sub
arpl
mov
sbb
push
stos
dec
add
sbb
push
pushf
xor
lea
and
mov
sbb
scas
inc
push
arpl
pushf
in
mov
jnp
mov
inc
cmp
push
out
xchg
inc
test
inc
jne
push
data16
icebp
sub
cld
push
push
fnstsw
cmp
dec
sbb
mov
mov
rcrb
mov
fisubrl
dec
out
dec
mov
push
dec
jno
insl
inc
push
iret
cmp
cs
jns
sub
mov
in
sub
cmp
and
push
out
mov
das
jecxz
aam
imull
call
ret
sub
loopne
and
gs
lds
mov
cwtl
jmp
adc
xchg
hlt
arpl
xor
hlt
push
add
xchg
loop
push
pop
ja
lea
loope
inc
and
jge
mov
mov
adc
xor
stc
push
cmp
ja
mov
mov
out
insl
scas
fisttpll
mov
shll
xchg
jo
mov
insl
clc
push
es
push
ds
sub
and
dec
data16
xchg
nop
test
sbb
cmp
out
mov
sub
lret
fcoml
imull
or
cmp
inc
loope
xchg
mov
pop
in
lret
dec
xor
sahf
push
inc
daa
mov
ret
adc
fdivrs
adc
aaa
xchg
in
xor
cmp
das
gs
xchg
pop
cmp
scas
cmc
hlt
push
push
in
inc
jmp
hlt
adc
mov
sub
gs
mov
idivl
mov
aam
insl
jnp
repz
push
aad
sbb
jl
dec
or
mov
popa
iret
push
fisubrl
loopne
lret
jae
mov
xor
mov
out
lahf
mov
jge
sub
inc
cmp
and
daa
push
sar
test
adc
mov
cld
or
lock
lret
xlat
ficompl
cmp
out
fwait
inc
adc
push
mov
popf
fistl
add
mov
push
xor
jle
daa
cmpl
call
hlt
mov
and
fldt
lock
inc
and
pop
and
adc
adc
inc
jg
insl
ret
push
insb
pop
fldt
push
inc
push
test
arpl
adc
xchg
push
lret
add
inc
movsl
xlat
and
lcall
add
test
dec
ljmp
lret
out
vandnps
pop
cmpsl
pop
dec
or
jo
mov
daa
dec
jno
mov
roll
sbb
fsubs
pop
shlb
jle
xchg
fdivs
jl
mov
int3
mov
add
cmp
xchg
repz
cmpsb
clc
push
inc
sar
jne
imul
test
lret
jb
push
or
inc
cmpsb
push
stos
enter
stos
or
loopne
pop
fisttpll
popa
mov
xor
test
mov
lods
cmp
mov
sub
andl
test
test
sbb
inc
inc
mov
xor
popf
push
inc
jne
ret
test
cmp
jmp
mov
dec
mov
or
mov
call
sbb
pandn
movsb
out
sbb
sbb
lds
ss
cwtl
fbld
ficomps
and
dec
inc
add
fwait
outsl
mov
loopne
dec
xchg
push
cmpsb
mov
lahf
jns
int
mov
sbb
sub
sbb
dec
dec
pop
out
ret
outsb
scas
lret
int
jb
cmp
inc
inc
xchg
adc
mov
mov
int
ret
and
inc
dec
dec
and
jmp
or
or
xchg
sbb
lods
pop
movsb
filds
hlt
push
cli
andl
aaa
xchg
push
mov
negl
mov
pop
cmp
pop
cltd
ret
add
sbb
out
repz
mov
rorb
nop
cmp
inc
and
pop
mov
or
cwtl
sti
push
lret
out
daa
sbb
push
cmp
lret
jp
xlat
inc
ds
xchg
or
push
mov
popl
inc
jp
lock
adc
dec
sub
jnp
in
cli
mov
cs
std
test
sti
int
mov
jno
out
xor
add
fcmove
sbb
cmpsl
fildll
jae
mov
imul
sti
mov
mov
push
ror
repz
inc
pop
jo
and
rcl
cli
sub
push
mov
addr16
mov
sbb
cltd
adc
mov
sub
test
cli
inc
and
mov
aaa
add
sbb
inc
movsb
adc
adc
adc
sbb
push
push
test
mov
jg
xchg
sbb
and
pop
fstpl
inc
test
in
mov
pop
ret
jns
leave
cmp
icebp
xchg
and
jnp
sahf
mov
shlb
cmp
dec
fcmovnu
or
pop
add
push
jg
out
cmp
lahf
rcll
cmp
mov
mov
mov
cmpsb
push
push
cmp
loope
pop
xchg
lods
cli
mov
sti
mov
dec
repz
mov
cli
int
lods
into
or
icebp
cs
inc
or
cmp
mov
in
lahf
enter
and
cli
stc
ljmp
pushf
mov
add
adc
mov
lahf
adc
les
daa
add
outsl
push
xlat
fs
lcall
fs
fcoml
mov
rcl
sub
push
cld
jge
fimuls
dec
mov
inc
shll
data16
cli
call
sub
fldln2
cmp
loope
sub
pushf
jle
rolb
xlat
lahf
orb
xor
push
jg
mov
mov
xlat
add
xchg
xor
into
add
xchg
fistps
xchg
xor
pop
shlb
andb
sbb
xor
daa
push
xor
out
divl
cmp
loopne
mov
les
mov
cmpsb
xchg
pop
fld
fcoml
dec
mov
mov
outsl
cmp
jle
jbe
into
ja
fisttpll
aaa
xor
repnz
stos
insl
popa
dec
jecxz
sub
int3
or
pop
pop
lahf
inc
mov
scas
add
adc
shlb
push
push
lock
jmp
popf
cmp
roll
cmp
mov
shlb
jecxz
xchg
add
cmpsl
movb
arpl
cmp
es
dec
xlat
pop
ja
lods
out
movsl
int3
rolb
and
fidivs
pop
xchg
fsubr
push
and
mov
mov
aad
out
cmp
lahf
lret
jb
xchg
push
and
mul
and
mov
sbb
stos
mov
sti
fs
leave
mov
popf
rorb
fdivrs
jno
imul
enter
fsubs
sub
mov
mov
pop
cs
mov
cwtl
arpl
mov
lds
xchg
outsb
ja
push
and
stos
and
fsub
jns
jl
lods
ret
sub
push
aaa
lods
pop
lods
mov
mov
jge
sub
mov
push
movsb
jb
adc
enter
out
test
mov
mov
sbb
xchg
out
dec
scas
out
mov
mov
adc
pop
xchg
sub
outsl
mov
pop
cmp
dec
push
xchg
jg
xor
inc
xor
stc
shll
jge
or
repnz
scas
pop
out
xchg
jge
push
test
pop
inc
dec
add
in
mov
adc
outsb
out
mov
sub
outsl
lahf
mov
enter
scas
dec
push
push
jp
stos
incb
mov
sub
leave
scas
cmp
fmuls
inc
cmp
cwtl
leave
stc
rcll
xchg
add
push
mov
jmp
icebp
cmpsb
shr
cwtl
ret
mov
jp
enter
pop
test
and
iret
imul
inc
inc
inc
out
sub
repnz
push
or
jmp
pop
adc
adc
pop
jg
aam
cwtl
push
daa
bound
xor
mov
cmp
imul
dec
pop
es
loopne
mov
das
push
lea
and
pushf
pinsrw
pop
sbb
mov
lahf
arpl
xor
ljmp
xchg
sub
xchg
fldt
mov
cmpb
arpl
ret
outsl
xchg
xchg
xor
fbld
sub
sbb
push
out
addb
mov
pmuludq
jb
xchg
sub
out
insl
or
andl
xor
test
dec
out
mov
inc
pop
js
mov
ja
mov
mov
shrl
jne
sahf
and
pop
pop
push
inc
add
jle
out
ret
jge
cmp
loopne
adc
les
sti
mov
es
jmp
inc
cmc
jge
hlt
push
push
aad
fisttps
arpl
push
mov
lods
cmpxchg
adc
out
jmp
sbb
cs
pop
lahf
lock
mov
dec
test
sahf
insl
sti
mov
cmp
cwtl
inc
lea
pop
mov
cmp
dec
iret
shll
bound
mov
dec
or
sbb
out
xchg
xchg
jle
xor
test
adc
push
adc
inc
lcall
inc
stos
xor
fisttpll
leave
adc
jne
out
hlt
lods
testb
mov
cmp
inc
add
adc
fcmovne
ret
rorl
call
dec
arpl
mov
mov
cld
xor
js
loop
mov
clc
fsubr
daa
fists
cmpsl
mov
imul
lret
push
pusha
push
call
mov
cmp
out
mov
push
xchg
and
insl
sbb
outsb
inc
dec
les
dec
rcl
loopne
pushf
das
out
shrb
push
sbb
push
negl
or
sub
pmaxub
sub
mov
pop
jo
or
and
push
inc
cmp
shll
test
cmpsl
pop
add
xchg
sub
cld
mov
les
add
pop
pop
xor
push
movsl
mov
popf
lods
jb
xchg
jle
mov
or
push
add
jmp
add
rolb
pushf
push
rcr
mov
hlt
hlt
cwtl
aaa
outsb
and
xchg
cmp
pop
mov
cld
test
push
add
repz
sbb
jae
dec
fidivrs
fwait
mov
mov
ja
scas
imul
pop
sti
stos
icebp
push
insl
dec
cmp
dec
jmp
sbb
xchg
add
adc
mov
add
mov
ret
lahf
in
pop
loope
or
xor
push
pop
dec
test
pop
imul
push
sti
cmp
cmc
or
fidivs
lea
loopne
mov
inc
mov
jp
jecxz
add
bound
cs
dec
inc
and
push
jbe
sti
fsubl
dec
fwait
mov
int3
rolb
lret
xchg
dec
cmp
cli
inc
jne
clc
test
idivl
rorl
movsb
out
mov
mov
cs
cmp
inc
pop
xchg
or
adc
repz
inc
popf
clc
sub
ficoml
cmp
inc
cmp
lock
fwait
push
stos
daa
sti
insb
test
fdivl
add
inc
mov
jle
jnp
enter
pop
pushl
data16
push
adc
pop
inc
in
mov
jb
cmp
out
sbb
into
shll
xchg
jbe
fs
je
sub
mov
pop
xor
push
jmp
sti
shlb
sti
add
xor
in
ljmp
push
jns
lret
in
pop
fsubl
fbld
loop
cmp
mov
mov
adc
shrb
xor
cld
inc
test
xor
push
aas
jecxz
jno
pop
push
jne
jmp
test
push
movsl
and
cmp
add
xchg
adc
pop
popa
std
jne
lock
mov
sahf
lret
mov
sub
arpl
inc
mov
insb
aad
mov
pop
iret
pop
jmp
mov
sub
shl
into
pop
lods
scas
ljmp
ffreep
jbe
lods
lcall
cmp
int
mov
sub
jge
jnp
addr16
xor
incl
pop
mov
mov
nop
push
nop
rcll
stos
xchg
mov
ds
fmuls
bswap
andb
inc
add
shlb
inc
pop
xchg
loop
push
jmp
xchg
roll
ret
roll
outsb
aaa
xchg
daa
sub
inc
ret
gs
jae
repz
adc
adc
jns
cltd
stos
inc
xor
movb
ror
sub
pop
xchg
sbb
dec
fs
mov
outsb
cmp
jp
or
icebp
mov
jl
lods
loope
pop
sub
movsb
out
outsl
xor
jb
mov
jae
call
icebp
mov
mov
aad
repz
and
sbb
lock
jbe
push
inc
adc
pop
test
dec
repnz
sbb
push
jle
in
xchg
cmp
pop
dec
pop
cltd
bnd
mov
sbb
mov
dec
mov
insl
lret
push
fwait
xor
dec
mov
mov
inc
mov
xchg
out
dec
dec
cmp
xchg
enter
fcompl
xchg
push
sbb
mov
into
int
cmpsl
mov
cltd
imul
push
xlat
mov
mov
arpl
push
pop
xor
out
dec
hlt
inc
fcomp
ljmp
xchg
xchg
out
or
pop
dec
cmpsb
jmp
sbb
dec
icebp
cmp
inc
jp
into
jno
inc
es
xchg
xchg
ljmp
jecxz
add
xor
cmpsb
mov
or
cmc
xor
nop
pop
mov
into
and
lahf
and
sti
test
pop
orl
or
stos
lock
mov
sbb
sbb
adc
mov
ss
sub
push
stos
insb
mov
xor
mov
push
jae
and
les
cmp
jge
push
sbb
and
sti
je
jne
mov
jp
push
fstps
cwtl
push
and
addr16
movsl
cmc
cli
loope
clc
test
jno
iret
or
adc
add
rcrl
mov
jae
push
jo
adc
mov
lret
popf
mov
push
sbb
mov
xchg
sub
sub
adc
dec
fnstcw
pushf
mov
add
aad
jmp
inc
icebp
bound
inc
pop
xchg
cmc
test
repnz
or
mov
test
jl
push
ljmp
dec
stos
mov
repnz
dec
adc
jbe
lcall
pop
adc
jle
mov
xor
cmpsl
pop
sub
inc
leave
cmp
pop
std
imul
or
mov
out
mov
leave
or
insb
push
jl
lock
or
int3
nop
out
inc
add
jge
std
inc
and
lock
movsl
je
test
aaa
mov
int
leave
dec
cmpsl
fucomip
insb
les
ret
loope
lods
into
cld
adc
cli
ss
jo
jge
hlt
lods
pop
out
pusha
sub
xchg
dec
dec
insl
call
aas
adc
in
jmp
add
dec
or
divb
push
cmp
mulb
test
sbb
inc
push
test
cmpsl
aas
sbb
push
or
fldt
pushf
repnz
out
mov
xchg
arpl
imul
inc
push
pusha
or
test
mov
mov
lock
inc
js
imul
sbb
ret
movsl
push
cmpsb
loopne
test
in
movsb
xchg
test
or
xchg
lock
outsl
or
dec
pop
ret
mov
jne
and
out
and
lahf
mov
xchg
pop
js
mov
mov
jnp
and
pop
mov
add
mov
daa
and
jns
xchg
pushf
aaa
jo
push
or
dec
xor
jp
aaa
mov
testb
cmp
ss
fstpl
out
cmp
jae
test
arpl
and
dec
das
loop
inc
push
cld
sbb
lea
or
ljmp
cmp
pop
add
test
cmp
inc
dec
loopne
adc
sbb
push
fimull
fcomi
sti
push
rorb
mov
dec
subb
adc
js
adc
popf
mov
cmp
mov
add
mov
mov
cltd
fldt
cmpsb
jmp
and
repnz
sub
adc
add
cmpsl
scas
mov
or
in
fbld
out
test
xor
mov
cmp
mov
inc
and
sub
adc
out
or
xor
fs
mov
outsl
mov
jle
cmpsl
cli
push
mov
dec
mov
adcb
jp
or
addl
test
insl
mov
mov
dec
fimull
ret
fcomps
das
mov
adc
int
lret
push
scas
xchg
and
pop
xor
and
mov
xor
pusha
cmp
mov
ret
ss
cmp
push
mov
adc
shll
lahf
sbb
dec
aaa
xor
cmp
enter
inc
loope
jecxz
inc
movsb
divb
sarl
adc
sub
jmp
mov
dec
xor
xlat
xchg
shlb
fisubl
mov
cmpsb
inc
inc
bound
test
xor
or
mov
push
or
add
cmc
sahf
and
jge
aaa
sahf
movl
dec
add
rcrl
dec
pop
repnz
imul
icebp
icebp
dec
shrb
pop
push
in
mov
sub
jmp
jo
mov
fistps
movsl
sub
inc
mov
rcrl
in
std
jnp
icebp
pop
jne
sub
shlb
pop
in
sbb
cmp
lret
fadds
add
sbbl
push
testb
call
es
sub
cmp
mov
mov
test
or
mull
ja
add
cmp
inc
xor
bound
xor
mov
or
rorl
mov
in
xchg
lods
sbb
adc
or
mov
test
push
jp
loopne
je
movsb
sarb
repnz
xor
loopne
mov
repz
movl
hlt
lods
xor
xchg
xor
inc
push
bound
cmp
cwtl
mov
push
cmp
push
sti
ds
repnz
jae
xlat
sbb
mov
mov
in
iret
cmpsl
xor
clc
std
inc
ret
mov
jae
xchg
movsb
arpl
iret
inc
xchg
lcall
dec
jle
xchg
sarb
mov
clc
push
push
push
xchg
adc
punpckldq
pop
insb
sub
enter
enter
das
push
inc
dec
int
orb
pusha
loope
xor
pop
sbb
mov
adc
dec
pushf
mov
ljmp
test
pop
jo
mov
aad
jae
mov
xchg
or
cmp
dec
lcall
cmp
push
lods
out
ja
mov
data16
sub
xchg
fcmovnu
lret
pop
mov
sti
sub
and
push
jle
add
jnp
lret
std
cmovge
cwtl
push
mov
and
dec
shll
cs
addr16
push
leave
jno
cld
and
ror
sub
dec
pushf
jmp
je
cmpsl
negl
or
mov
clc
push
sbb
inc
pop
inc
mov
inc
scas
add
pop
jecxz
shrb
in
shll
and
pop
inc
stos
and
repnz
mov
sbb
inc
add
dec
cmp
sbb
addr16
cmp
mov
ja
repz
jbe
imul
aad
dec
or
bound
dec
sbb
or
stos
outsb
push
imul
loope
fdivs
cli
or
jge
repnz
cmp
lods
sti
addr16
xchg
mov
mov
fiadds
aas
jp
and
push
repz
fdivrl
mov
test
fildll
dec
mov
ficompl
out
fcompl
adc
ret
xor
lods
and
dec
jmp
js
or
mov
lods
icebp
sbb
lods
sbb
data16
scas
mov
mov
ljmp
jecxz
mov
cmp
loop
test
pusha
ficoms
xor
and
cltd
mov
add
fistpll
lret
pusha
xor
aad
std
repnz
in
sub
inc
sub
lods
dec
adc
test
push
loop
into
push
xchg
stos
and
js
sbb
imul
adc
scas
cmc
mov
lret
lret
fwait
out
jle
lds
and
es
adc
fldt
out
aad
and
jg
mov
pop
lock
or
or
mov
shrb
rol
pop
outsb
out
outsl
ficompl
jg
out
add
mov
nop
jecxz
popf
jl
jecxz
sahf
js
xchg
outsb
pop
out
mov
mov
aaa
jmp
scas
adc
mov
sbb
push
mov
sub
std
int3
aaa
pop
add
xchg
ftst
decb
clc
sub
push
pop
cmp
sub
pop
dec
or
adc
mov
add
les
push
mov
sti
cmpb
cmp
sarb
clc
push
or
mov
mov
aad
adc
cmpsb
es
lea
sub
push
pop
frstor
xchg
add
pop
das
stos
scas
fnstcw
pop
mov
sub
push
or
out
mov
adc
outsl
mov
out
rclb
push
test
and
lods
stos
ret
ljmp
sub
dec
lcall
fisttpll
xlat
push
push
cmpsl
iret
arpl
sub
test
hlt
scas
shr
jp
sub
cli
push
scas
decb
adcb
push
rclb
and
xchg
pop
divl
test
push
pop
stc
push
jecxz
cs
jl
out
mov
sub
and
in
insl
cmp
sti
jecxz
pop
xchg
jno
cmc
scas
in
push
imul
and
sbb
xor
out
imul
mov
stos
mov
xchg
sub
lock
push
cmp
loop
fnsave
outsl
dec
outsb
mov
loope
xchg
jecxz
mov
push
pop
add
movsl
mov
mov
dec
inc
mov
or
fwait
and
and
mov
iret
mov
push
dec
or
push
push
or
pop
mov
jb
in
rorb
movsl
mov
sub
shll
popl
das
mov
xchg
movups
mov
cwtl
mov
or
mov
mov
dec
fistl
pusha
jmp
add
push
lea
xlat
addl
inc
js
jo
ds
test
and
ret
cmp
add
mov
enter
or
pop
mov
push
test
or
call
xchg
push
sbb
push
fsubl
mov
or
ret
out
sti
test
mov
nop
cltd
fldenv
jg
jge
je
movsl
xor
inc
xchg
sbb
fldenv
adc
aad
jbe
and
idivb
pop
mov
rcr
adc
and
repnz
add
jle
rcrb
mov
push
shll
mov
cltd
cmp
lea
push
daa
and
rolb
cmpsl
faddl
clc
mov
test
pushf
je
jl
js
pop
xlat
or
adc
imul
push
sub
push
gs
into
dec
mov
ret
imul
sub
out
cli
jnp
cli
and
xchg
leave
mov
lidtl
inc
cmp
jo
repz
into
mov
lcall
sub
mov
adc
lods
cli
and
xchg
xchg
add
or
push
scas
insb
test
repz
pushf
je
adc
pop
fimuls
jp
notb
stos
pop
jl
sti
and
sub
lea
xchg
inc
mov
mov
jp
test
jmp
push
aam
pop
lods
jp
cltd
popa
clc
mov
fwait
pop
xchg
sub
das
pop
mov
or
push
mov
adc
sbb
mov
leave
hlt
xchg
sub
bound
mov
pop
xchg
jb
rol
ret
stos
andb
or
mov
mov
mov
mov
mov
cltd
cli
rorl
mov
pop
sub
ljmp
add
sbb
ss
leave
add
scas
mov
mov
movsl
lods
scas
xchg
or
insl
mov
jecxz
out
in
dec
int
iret
sbb
in
lret
sbb
lret
push
mov
fnstsw
lods
add
ds
lods
imul
push
mov
inc
xchg
mov
add
fxch
jnp
push
add
aad
popa
insb
ds
in
inc
into
xchg
pop
and
in
aad
arpl
mov
mov
cmp
cmp
repnz
addl
xchg
repz
add
pusha
cmpsl
push
hlt
out
out
inc
insl
or
fsubs
outsl
daa
sub
mov
pop
in
repnz
jp
test
daa
pop
sub
or
andb
add
sbb
mov
inc
mov
out
in
aad
sub
rcrl
adc
mov
lock
add
cmc
add
imul
mov
stc
int
lret
in
sbb
pop
cmp
add
pop
xor
daa
ja
sub
insb
xor
lds
lcall
dec
pop
push
stos
or
jno
inc
pop
sbb
lret
out
xor
add
subb
popf
lahf
enter
scas
pop
test
dec
or
repz
scas
mov
addr16
in
lret
sbb
ja
repz
xchg
pusha
jno
cs
push
cmp
mov
inc
jmp
and
hlt
add
test
lods
inc
push
mov
or
cld
fsubrl
test
cmc
movsl
add
test
gs
int
and
lds
ss
push
imul
jae
lock
xor
push
mov
push
push
pop
sub
adc
and
lahf
mul
in
repz
cmc
push
sbb
arpl
xor
xchg
shlb
adc
xchg
mov
adc
test
sbb
cmp
jns
or
dec
pop
dec
add
jge
popa
push
jae
dec
sbb
shl
sar
and
and
fistps
push
dec
ret
sbb
sub
lret
sub
addb
out
cmp
pop
pop
sahf
sbb
adc
pop
fwait
stos
mov
pop
loopne
movq
lds
sbb
ret
lods
repz
out
insl
inc
xchg
or
jno
int
jno
movsb
push
stos
lret
lret
and
stos
add
test
and
jmp
sbb
out
arpl
pop
cmp
ficompl
xchg
fndisi(8087
and
dec
stc
mul
shll
pop
xchg
pop
sbb
push
jns
icebp
cmp
and
adc
dec
aas
inc
xchg
sbb
xchg
push
pusha
fmuls
add
mov
mov
sub
mov
xchg
inc
sti
daa
xchg
jns
xor
sbb
adc
lahf
mov
xor
sub
xchg
mov
jne
dec
movsl
mov
mov
cwtl
sub
sbb
sti
popf
fdiv
jge
dec
pop
test
add
mov
aad
fadds
jl
shl
push
xchg
mov
push
int
sbbl
insl
xor
add
jmp
insb
aas
or
add
test
mov
cmpsb
or
gs
loop
aam
shrl
jmp
jne
jmp
mov
and
dec
cli
scas
scas
push
mov
fildll
fstps
jle
jl
int
insl
mov
and
add
sarl
std
push
sbbb
or
addl
dec
pop
pop
mov
cmp
push
dec
test
adc
outsb
dec
cld
sub
pop
int3
lea
mov
das
pusha
pop
push
cld
pop
loopne
xor
or
decb
lock
ja
inc
push
fsubr
insb
jecxz
pop
and
or
pop
test
pop
cmpsl
lea
mov
xchg
pop
mov
imul
pop
mov
pop
loope
sub
jecxz
pop
xchg
mov
icebp
mov
repz
mov
jae
pop
outsl
push
dec
sub
cmp
sbb
out
ficompl
rorb
inc
mov
sub
cmc
stos
push
je
xchg
pop
je
xor
call
int
sub
gs
mov
xor
jo
jle
push
loop
mov
mov
ja
dec
xchg
or
out
mov
out
faddl
icebp
fildll
xchg
xchg
ds
das
inc
testb
jmp
jae
pop
pop
push
mov
ss
icebp
gs
adc
dec
movsb
sbb
add
shll
cwtl
inc
leave
repz
imul
rcrl
and
xchg
fs
push
sub
pop
pop
lahf
test
stos
lahf
arpl
popa
add
add
push
xchg
mov
popa
or
ret
pop
iret
in
fsubr
ss
imul
scas
imul
dec
add
das
outsl
jnp
pop
pop
adc
je
mov
bound
sbb
xchg
int3
add
jge
add
movsl
mov
sub
dec
int
dec
sub
fcmovnu
incl
and
ret
xchg
stos
frstor
xchg
xor
xchg
push
adc
iret
xor
stos
inc
decb
into
test
fwait
mov
cmp
sub
and
jecxz
push
repnz
mov
hlt
and
dec
out
sbb
out
mov
push
mov
add
fldpi
cli
xor
xor
cmp
and
mov
fs
pop
mov
xor
outsb
ljmp
in
xlat
aad
les
add
scas
cmp
lds
pop
mov
add
lods
cmp
jnp
js
push
lods
jns
mov
aam
ret
push
push
xor
mov
and
lret
inc
pop
mov
mov
xchg
ficompl
add
lea
iret
leave
push
adc
cld
inc
push
sbb
pop
aad
mov
divb
ss
mov
xor
popf
mov
div
les
sbb
clc
outsl
inc
fstpt
fnstenv
mulb
sti
adc
movsb
int3
out
aad
test
loopne
mov
xchg
xchg
rorb
repnz
or
out
fidivrs
lods
xchg
fsubrs
mov
sbb
testl
pop
inc
imul
stos
or
daa
mov
xor
outsb
sub
rcll
push
test
shlb
cld
sub
jp
and
xchg
sbb
xor
mov
lahf
aad
jp
xor
jg
pop
pushf
int3
cmp
cmp
sub
je
add
ret
inc
xor
repz
jno
js
mov
pop
jl
mov
push
dec
test
sub
dec
jl
fstps
in
bound
sahf
xchg
test
pushf
dec
int3
inc
fwait
inc
mov
lcall
movsl
addl
mov
inc
out
iret
push
mov
daa
jo
pop
cmc
add
cs
push
call
jge
dec
arpl
std
fs
fsubl
and
dec
sub
mov
aaa
adc
sub
cltd
lds
fwait
adc
dec
fsubrs
adc
xor
jns
ret
stos
loopne
inc
cmovae
out
in
mov
lods
adc
push
pop
jbe
cmp
out
roll
addr16
subl
inc
adc
push
mov
mov
jnp
push
les
sbb
pop
je
xchg
ret
sbb
mov
in
mov
sahf
jb
test
std
dec
xor
mov
outsb
xchg
shlb
add
mov
loope
push
imul
lock
mov
lahf
push
cmp
sti
pop
add
jo
ja
fists
shlb
push
sbb
shrl
mov
popa
movsb
insb
add
outsb
adc
call
out
cmp
mov
adc
arpl
sub
cmp
add
mov
insl
lock
stos
cltd
adc
sbb
sar
ret
cmc
insl
rcrb
jg
inc
sahf
lahf
std
or
mov
and
ret
sahf
cmpsb
mov
pop
adc
rcll
pop
es
aad
xchg
push
fxam
repnz
cmp
xor
or
xlat
push
mov
adc
fimuls
rcrb
mov
inc
push
arpl
push
sub
push
dec
movsb
sahf
loop
xchg
jbe
lret
xchg
push
mov
lret
cmpsl
sbb
fadds
out
jg
lods
cmp
loopne
jne
cs
xor
cwtl
mov
int3
les
jecxz
or
add
xchg
aas
push
lea
add
lahf
stc
push
pop
in
or
fcmove
cmpsb
fldt
adc
scas
in
push
out
pop
push
test
lret
and
jmp
jno
push
sbb
cs
inc
push
inc
pushf
cltd
enter
sub
mov
jge
inc
jg
mov
cltd
outsb
add
and
mov
mov
lahf
leave
fidivrl
subb
insb
cwtl
mov
hlt
xchg
nop
mov
movsl
fcoms
add
add
dec
cmp
dec
or
cld
jae
test
sbb
sub
in
call
push
sbb
xchg
testl
test
test
mov
in
inc
sahf
inc
or
jb
jbe
rolb
sub
loope
push
test
xor
dec
in
fnsave
call
xchg
push
pop
arpl
cmp
inc
xor
mov
jle
addb
ss
push
inc
es
dec
popf
shlb
scas
loop
outsl
fidivrs
movsl
loope
divb
cmp
mov
xchg
dec
push
mov
or
ja
fdivr
add
jae
and
clc
lcall
xchg
sbb
repz
cmpl
inc
dec
or
hlt
aas
mov
xlat
pop
icebp
pushf
adc
test
mov
andb
add
mov
pop
dec
int
add
xchg
lret
add
cmp
xchg
sarb
xor
push
repnz
fcomip
mov
push
push
push
out
mov
push
cli
in
mov
mov
jne
outsb
xchg
dec
sbb
add
cwtl
inc
data16
jl
pusha
push
int3
imull
std
mov
hlt
call
jecxz
in
sbb
pop
xor
loope
loope
add
xchg
xchg
cmp
scas
addr16
repz
dec
xchg
ret
into
pop
cmp
xor
mov
sub
and
adc
fwait
mov
cmp
sub
aad
push
push
push
mov
into
popf
scas
outsb
mov
cmp
test
imul
push
cmpsl
add
xchg
insl
fsubrs
fcmovne
mov
and
roll
jmp
dec
mov
inc
lods
movsb
sbbl
sub
int3
sbb
enter
add
inc
dec
insb
bound
pop
dec
mov
dec
fstpt
add
lret
fistl
in
outsl
cmp
data16
cmpsl
dec
cmp
and
std
and
sbb
les
jge
scas
out
cltd
popa
xorb
push
fcompl
test
in
jns
sbbb
es
cmp
cmpsb
adc
mov
ret
pop
sub
inc
sbb
add
rcrb
popf
and
mov
push
jae
pop
js
arpl
xor
sbb
add
jge
out
mov
sti
mov
xchg
fwait
imul
mov
and
lcall
sub
aaa
rcl
out
adc
test
push
sar
sub
dec
xchg
das
repnz
outsl
cli
shll
push
sub
pop
add
push
lds
xchg
out
outsb
mov
loopne
outsl
les
int3
cmp
sub
push
shrb
out
test
mov
out
in
add
stos
sub
out
sbb
push
fiaddl
jecxz
jae
or
loop
mov
mov
loopne
xor
sub
ljmp
in
and
push
fs
mov
pushl
add
inc
lock
outsl
and
or
cmp
jg
hlt
ret
lods
add
daa
push
in
inc
add
sti
xchg
in
int
mov
pop
les
lret
ja
lret
adc
fisubrl
push
lock
adc
jne
shl
mov
ja
inc
inc
sub
push
add
daa
xor
test
inc
out
test
sub
out
sbb
call
push
xor
lret
out
int
dec
stos
stc
mov
push
add
daa
xchg
jecxz
mov
scas
push
pop
insb
cmp
fwait
aam
test
and
mov
adc
imul
andb
or
test
cmp
jge
or
sahf
sbb
inc
repz
in
cli
push
pop
shl
clc
push
mov
pop
mov
ss
fwait
sub
push
js
in
xchg
mov
shrb
and
loope
fwait
popf
sbb
scas
inc
lods
jmp
out
loopne
js
int3
mov
int3
cmpsl
das
mov
pop
movsl
jmp
jmp
imul
sub
test
add
mov
adc
iret
rclb
mov
nop
and
test
sbb
ja
fisttpl
mov
dec
ss
xor
nop
xchg
push
test
sbb
jae
cmc
xchg
outsb
xchg
and
and
bnd
rep
dec
pop
mov
cli
jae
jge
mov
fst
pop
xor
das
cmp
ljmp
sub
icebp
mov
and
sti
movsl
arpl
adc
dec
jo
mov
out
divl
pop
mov
xchg
cmc
jns
loop
dec
stos
mov
or
into
inc
aaa
jmp
call
jl
mov
mov
popf
rcrb
gs
inc
xchg
popa
jge
dec
cmpsl
sti
cld
push
movd
mov
xchg
mov
frstpm(287
mov
inc
xchg
fisttps
jb
fbstp
jmp
ret
xor
arpl
bound
push
jg
or
and
jne
outsb
mov
repnz
pop
lret
cmpsb
mov
loope
movsl
sub
add
into
xchg
in
shl
push
pop
sbb
inc
insb
iret
inc
mov
popfw
pop
jg
das
pop
jg
cli
jno
push
xor
stos
out
sub
stos
enter
dec
xor
jno
sbb
repz
pop
sbb
imul
jecxz
mov
adc
dec
or
jge
jb
xchg
push
jno
dec
aad
push
hlt
xchg
inc
lods
adc
rorb
xchg
hlt
pop
repz
add
mov
inc
cmpsl
jge
popf
add
sbb
sti
push
push
mov
std
sbb
and
add
adc
cmc
lea
xor
xchg
cmp
mov
cmp
je
pusha
add
inc
jnp
lods
cmp
lock
sbb
orb
jbe
or
loope
sahf
cmp
adcl
pushf
mov
xchg
xor
hlt
ret
mov
mov
xor
sbb
shlb
das
xor
iret
hlt
mov
clc
push
mov
xor
inc
mov
or
out
sub
jns
popa
aas
loop
insl
mov
call
popa
daa
inc
add
xlat
jp
pop
in
xchg
dec
mov
call
jb
pop
loopne
sbb
adc
adc
push
fs
xor
lea
jb
mov
ja
sub
mov
push
ret
push
imul
mov
lock
adc
popa
cmp
std
mov
pop
push
inc
xchg
mov
aam
jge
iret
mov
fists
das
test
inc
lea
sub
test
push
adc
cltd
enter
cmp
xor
addr16
sbb
int
dec
movsl
add
push
mov
divb
enter
mov
mov
aam
test
je
aaa
mov
es
enter
adc
jge
aad
out
pop
std
mov
in
fldl
jle
or
xchg
xchg
pop
dec
je
push
ret
incb
jnp
adc
dec
cli
cltd
insl
mov
or
mov
cmc
sbb
push
sbb
add
pop
faddl
and
sbb
mov
cmp
pop
sbb
mov
cmpsb
inc
subb
stc
outsb
gs
in
outsl
in
add
fldl
xor
or
insb
mov
lahf
xchg
in
fistl
sub
das
das
sub
dec
loope
inc
fbld
scas
add
rorl
xor
and
ficoml
push
in
and
add
stos
gs
pop
outsl
mov
in
inc
aam
push
imul
or
cmp
cltd
xchg
jmp
pop
icebp
cwtl
aaa
pop
stc
enter
out
push
fdivrp
cmp
pop
push
clc
sbb
outsb
and
pop
mov
mov
gs
mov
or
movsl
and
xor
sarb
pop
mov
or
sub
push
push
out
add
mov
mov
jno
or
ror
dec
dec
xchg
xlat
push
ret
into
testl
nop
dec
lock
and
sbb
test
dec
xor
cwtl
or
into
xlat
or
xlat
rolb
in
pop
sar
sbb
push
mov
ficoml
push
cmpsl
add
and
jge
sub
push
pusha
pusha
rorl
daa
loopne
das
sti
into
xlat
cwtl
sti
in
ss
add
loop
je
sub
or
mov
cmp
iret
xchg
push
pop
insb
jo
mov
out
mov
call
inc
movsb
mov
data16
pushf
xor
sahf
xlat
lahf
cltd
mov
das
iret
movsl
scas
mov
adc
popf
xor
cwtl
adc
stos
xor
pop
cmp
cs
pop
adc
lahf
fadds
or
xchg
mov
or
inc
js
stos
popa
xor
adc
sub
mov
adc
mov
popl
clc
pop
adc
jbe
testl
cmpb
mov
pop
mov
ss
loop
lret
mov
sbb
sbb
fidivrs
xor
adc
push
test
ds
xchg
movsb
sbb
outsb
ret
mov
mov
sub
sbb
jg
xchg
jg
cmpsb
sub
mov
dec
call
adc
stos
lds
dec
push
test
mov
cmpsl
and
ficompl
or
xor
out
into
xchg
fdivl
into
lcall
mov
mov
and
out
ljmp
fs
xlat
or
add
test
les
cmp
sub
std
sub
mov
cli
push
xor
cmpl
lock
push
xchg
mov
sbb
sub
lahf
mov
cmp
roll
jge
dec
fisubrl
fcomi
insl
xor
mov
jne
pop
mov
xor
push
fucomp
and
icebp
or
push
jb
sub
pop
pop
jo
cmp
inc
dec
mov
subl
das
rorl
loope
dec
scas
imul
add
fsubs
or
sub
fcompl
iret
or
xchg
pop
fcomip
iret
cs
mov
lcall
imul
add
xor
dec
mov
sbb
push
cmc
sarl
stc
sbb
jbe
xor
loop
pop
cmc
lods
rcrl
gs
push
add
out
xchg
pop
sbb
mov
movd
add
cltd
jns
lret
fidivrs
ja
and
stos
fcomps
dec
imul
inc
and
jne
mov
push
sahf
mov
std
or
push
pop
call
cmp
in
add
cmpsb
clc
add
decb
mov
cmpl
xor
mov
mov
jl
jo
or
mov
push
xlat
lods
cwtl
jbe
pop
in
xchg
mov
xchg
dec
frstor
dec
cwtl
insl
adc
add
jnp
int
icebp
lds
push
ds
push
adc
ret
or
xchg
or
inc
jg
out
cld
sahf
in
cmp
dec
cmc
and
cwtl
jge
mov
mov
push
lret
or
adc
sub
std
enter
out
sbb
add
in
ficoml
mov
pop
fistpll
mov
ds
push
mov
mov
inc
sahf
lock
dec
mov
lahf
and
lret
xchg
xor
inc
add
and
dec
sbbb
pop
js
in
lods
pop
dec
shl
ds
daa
push
scas
mov
rorl
pusha
xor
bound
test
cli
aam
sub
xor
sub
pop
xlat
in
sub
mov
cmp
inc
push
push
sbb
sahf
lret
int3
frstor
shll
stos
inc
add
pcmpgtb
jl
lret
bound
test
inc
pop
pusha
daa
lods
push
pop
in
rcll
outsl
jmp
mov
pop
push
fadds
pop
mov
push
dec
rcrb
jnp
insb
movups
sub
sub
mov
lcall
sbb
cli
push
mov
mov
shr
mov
sti
insb
inc
sahf
sbb
adc
fmulp
push
mov
dec
sahf
mov
mov
and
fs
mov
scas
sarb
add
inc
pop
movsl
sahf
cli
not
jl
ja
bound
xor
mov
fimuls
movsl
lds
mov
mov
adc
sahf
pop
cmp
enter
add
xchg
lock
mov
iret
cli
jbe
jb
subl
push
scas
movsl
fwait
inc
adc
push
mov
pop
push
rol
pop
push
das
enter
or
addr16
ret
pop
or
mov
fidivs
mov
rcrl
iret
add
mov
add
dec
aas
mov
jp
addl
test
pop
xchg
out
dec
xchg
out
mov
inc
bound
mov
pop
aad
push
push
cli
jmp
aad
mov
js
movsl
mov
shrb
jecxz
fwait
lds
mov
je
sbb
sub
out
push
or
scas
dec
push
shrl
in
outsb
lock
jmp
jp
out
lods
decb
pushf
mov
inc
ja
jbe
jns
push
xchg
imul
and
fcoml
mov
mov
out
stc
dec
inc
sbb
mov
js
ret
imul
inc
xor
and
add
cmp
and
idivl
push
stos
aas
movsb
push
jno
out
pop
lds
pop
mov
inc
pop
jmp
sbb
imul
stos
ret
scas
jecxz
adc
jp
xchg
stos
push
mov
fnsave
mov
les
add
cwtl
jp
mov
push
icebp
push
sahf
add
stc
sub
sbb
pop
ja
xor
in
jge
out
or
add
xchg
icebp
dec
or
lcall
cmp
imul
push
adc
mov
jl
stc
rolb
in
jmp
or
push
pop
cltd
sbb
jo
jle
or
mov
xchg
push
mov
dec
testl
ss
into
lahf
lahf
push
fistpl
mov
int
inc
fcom
fidivrl
push
add
aad
pop
loopne
je
in
cs
xor
xchg
mov
sub
dec
or
rorb
pop
paddsw
or
es
repz
cmp
inc
sbb
loopne
jecxz
cmpsl
xchg
outsl
mov
and
sbb
sahf
gs
adcb
sbb
aas
push
sbb
adc
js
or
cmpb
add
push
xchg
pmaxsw
xor
pop
popf
pusha
ret
sub
adc
inc
mov
push
test
inc
cltd
dec
mov
mov
sbb
mov
loopne
in
je
jmp
stc
cmpl
idiv
test
test
and
add
and
jl
icebp
inc
adc
and
or
lea
push
mov
inc
fwait
jae
fwait
push
pop
dec
pop
adc
popa
fldenv
pop
fxch
rcll
cmp
adc
scas
dec
add
mov
and
lods
pop
in
pop
cmp
and
sbb
adc
or
add
rolb
add
push
pop
mov
lcall
sub
inc
fistpl
scas
xlat
and
test
lds
repnz
stos
subb
rol
xor
inc
mov
sbb
icebp
lds
cmc
xchg
lods
jbe
xor
adc
shl
outsl
movsl
fcmovne
fldt
clc
cmpsl
mov
in
and
add
mov
int3
lds
mov
inc
aaa
shlb
loopw
and
and
int
push
out
sahf
orl
ss
aam
inc
or
jbe
push
cli
inc
jb
loopne
popa
insb
ret
imul
out
dec
dec
popf
repnz
roll
xchg
movsl
cmp
jo
pop
lcall
cmpsb
out
testl
add
adc
lcall
dec
mov
xchg
dec
push
mov
fidivrl
hlt
mov
ret
or
clc
sbb
das
add
lret
jne
into
mov
stos
addr16
out
inc
std
in
mov
aam
fistpll
repnz
sahf
inc
outsb
les
das
mov
mov
dec
int3
add
int3
in
mov
test
dec
cmp
xchg
mov
mov
jle
mov
incl
add
and
enter
jg
dec
out
jmp
inc
sub
push
pop
dec
pop
or
imul
xchg
jb
inc
clc
nop
out
push
adc
push
sar
xchg
sub
xchg
iret
aad
push
popf
sub
mov
xchg
push
adc
testb
mov
xchg
rorl
dec
xor
cmpsb
fwait
xchg
int3
repz
xlat
cmc
in
stos
icebp
mov
sti
pop
rcll
lahf
mov
dec
dec
decl
cmp
jbe
ss
insb
jmp
flds
aaa
lds
leave
xchg
test
and
jb
es
xor
cmp
loop
jmp
cmp
lds
shl
xchg
ja
mov
arpl
mov
xchg
mov
daa
repnz
add
mov
sub
ret
xor
dec
mov
sarl
test
dec
fisubs
add
shlb
inc
testl
xlat
jno
lods
scas
lahf
insb
outsl
sahf
pop
gs
loope
jl
jae
loope
push
movsb
subb
shr
test
push
sbb
outsl
sahf
popf
adc
xor
sbb
mov
jecxz
pop
xor
ret
shrl
adc
loopne
les
rorb
pop
pop
jb
sbb
andl
dec
fwait
sbb
sbb
jmp
sti
pop
jno
call
ret
pop
ja
inc
xchg
stos
int3
inc
push
pusha
cmc
filds
jo
add
shlb
push
in
aas
lock
jg
divb
pop
jne
sti
sub
jmp
fwait
jmp
add
iret
jo
mov
add
cmc
pop
sub
adc
testb
jae
in
mull
and
pop
adc
sbb
sbb
jb
fwait
jns
inc
ficomps
loop
stos
cmpb
popf
dec
popa
mov
bound
dec
popl
jge
test
scas
mov
cmpsb
in
xchg
pop
inc
iret
in
sbb
fdivl
sbb
sbb
jns
fimull
mov
stos
or
pop
inc
pop
xchg
sahf
stos
and
imul
add
jbe
mov
sub
add
imul
or
out
push
xor
cltd
out
xor
sub
rolb
movsb
adc
xor
pop
xchg
sahf
jle
je
xchg
fs
jbe
mov
subl
jb
adc
xor
aad
gs
shl
out
aas
pop
cld
in
pop
imulb
cltd
xor
lcall
dec
mov
cmp
cmp
push
fwait
rclb
mov
push
sbb
pop
loop
cwtl
inc
xor
leave
lea
int3
dec
aas
cltd
push
aaa
rcrl
pop
data16
in
adc
add
movsb
mov
pop
cmp
iret
push
sbb
mov
or
or
mov
enter
in
mov
rcll
jle
int3
xor
add
or
mov
adc
mov
mov
sub
lods
sub
add
sbb
je
sub
sbb
sti
sbb
outsl
add
or
jae
pop
jmp
xchg
test
mov
das
fimull
or
xchg
sub
push
xor
loopne
push
mov
inc
mov
lods
and
test
xor
out
fdivs
std
xor
dec
dec
mov
sub
aas
das
xor
xor
jl
adcl
jge
into
push
mov
fists
xor
cli
dec
or
rcrl
jns
lret
scas
shlb
inc
adc
dec
pop
push
mov
insl
dec
fists
sbb
shll
lahf
js
fcmove
sbb
sarb
cmp
pushf
push
fwait
jb
out
dec
cmp
and
and
mov
or
push
rcrl
aaa
aaa
leave
adcb
test
xor
and
lret
scas
rorl
dec
push
jnp
push
cmp
xor
decb
iret
int
jle
stos
insb
popf
pop
dec
scas
and
push
dec
std
jle
pop
mov
shlb
jecxz
cmp
dec
cmpl
mov
test
mov
imul
xchg
and
lret
dec
adc
cmpsb
adc
ret
ret
sub
sub
mov
add
dec
ljmp
sbb
testb
add
mov
add
insl
ret
mov
ljmp
mov
push
cmp
insl
dec
xchg
pushf
fnstcw
cmc
inc
addr16
cmpsl
arpl
and
dec
xchg
repz
inc
adc
jno
jmp
mov
xlat
test
mov
xchg
imul
jo
nop
mov
cltd
mov
in
dec
call
sub
ret
mov
inc
bound
jbe
xchg
and
mov
push
inc
stos
les
ret
adcb
add
pushf
xor
gs
scas
cmp
test
inc
int3
add
xchg
xchg
decb
roll
xorb
or
imul
sbb
arpl
cmp
cmp
test
pushf
adc
ds
in
mov
adc
ret
repz
lcall
push
aad
and
fcoml
dec
out
inc
jb
mov
insb
or
pusha
out
pusha
shlb
xor
mov
jae
lods
xlat
adc
jae
out
xchg
or
shlb
sbb
jle
push
jle
dec
mov
out
mov
and
adc
xor
fsubrl
decl
negb
xor
xchg
mov
push
js
bound
fadds
add
pop
pop
std
out
or
test
xchg
inc
xchg
mov
das
insl
dec
mov
js
sbb
outsb
add
rcrb
lea
sub
cmc
out
push
xor
es
xor
sbb
in
aam
mov
jbe
xchg
cmp
lret
outsl
jne
cmp
mov
add
ljmp
dec
push
shlb
ss
mov
inc
push
faddl
inc
mov
enter
mov
icebp
in
dec
in
mov
sbb
jp
out
jecxz
sbbl
sarl
lret
lahf
add
jno
pop
notl
pop
jbe
xor
or
lcall
sti
mov
int3
xchg
dec
and
adc
xchg
xor
stos
iret
mov
ljmp
inc
fwait
sub
pop
adc
sbb
sub
dec
mov
enter
xchg
aam
das
and
cltd
dec
push
sahf
mov
lcall
loopne
stc
sbb
andb
jmp
subb
push
aas
leave
pop
or
cmp
adc
xor
dec
pop
xchg
or
in
stc
add
decb
xlat
mov
cmp
mov
mov
sub
cli
loop
cwtl
pop
inc
loope
jb
sub
xchg
inc
cmp
int
mov
xchg
xchg
mov
dec
testb
aam
loope
std
into
jge
push
mov
adc
rorb
dec
fistps
mov
adc
outsl
mov
movsl
cld
into
pop
lock
or
mov
mov
sbb
ret
jecxz
xchg
sub
dec
dec
jmp
or
lods
xchg
stos
adc
fdivrs
cli
sbb
jbe
mov
call
daa
mov
mov
lret
je
fsub
pop
sar
test
dec
sar
push
push
xor
dec
mov
ja
sbb
test
or
cmp
ss
into
das
inc
std
sub
xchg
inc
rcrb
push
ret
insl
jnp
das
fcoml
int
cmp
jae
jecxz
icebp
inc
gs
shl
mov
xchg
pop
gs
in
dec
xor
sbb
xchg
scas
mov
mov
enter
push
push
outsb
xchg
xchg
data16
sbb
add
clc
mov
sbb
aam
add
push
mov
inc
mov
rcll
cmp
lods
or
xchg
shll
scas
xlat
call
cwtl
ret
cmc
aad
mov
adc
incl
sbb
out
push
xchg
bnd
hlt
mov
int
mov
sub
push
aas
popf
scas
aam
pop
push
mov
mov
pushf
orb
in
and
loop
mov
xor
ja
cli
les
mov
and
gs
or
cmpsl
and
fistpl
ljmp
adc
stos
shlb
pop
mov
js
and
test
pop
ds
xor
inc
pop
lods
pop
xorl
stos
out
push
lds
das
push
je
movsl
nop
lds
mov
movsl
outsl
mov
push
imul
mov
ret
cmpsb
push
adc
into
pop
out
rcrb
dec
xor
xchg
add
inc
movl
add
pop
and
push
mov
in
aam
xor
repnz
sahf
xchg
inc
jg
std
clc
jns
js
dec
enter
mov
lea
sti
and
mov
sub
sub
pusha
int3
xchg
subl
mov
movsb
test
jbe
sbb
in
aam
clc
adc
mov
mov
mov
es
sti
pop
inc
sbb
fsubrp
lret
ja
popa
ds
pop
push
xor
sbb
cmp
js
test
cld
lock
jnp
cmp
sub
aaa
sbb
xor
popf
sub
fisubl
movsb
mov
mov
stos
stos
pushf
notb
push
lret
andb
clc
shll
dec
cmpsl
inc
ret
inc
mov
jle
call
outsb
js
mov
pop
lds
pop
mov
adc
mov
push
pusha
or
out
repnz
add
rcrb
pop
fwait
shl
mov
fsubrl
inc
dec
aas
mov
icebp
adc
add
je
shrl
mov
push
mov
daa
icebp
jb
test
in
or
jb
cmp
push
and
js
negl
out
mov
dec
jnp
sbbb
push
mov
cltd
jge
dec
jo
sbb
movsl
mov
ror
neg
fstpl
cmp
pop
cmpsb
pusha
test
std
sub
adc
mov
xor
stos
movl
ds
jne
jns
xor
clc
or
xchg
pop
jecxz
divl
push
add
jge
inc
insl
cmp
add
imul
cmpsl
pop
jno
push
jle
ss
iret
push
sbb
ljmp
adc
shll
incl
pop
cmp
jmp
fldenv
cmpsl
sub
int
sub
or
inc
inc
les
push
int3
mov
sbb
test
dec
ljmp
adc
xor
and
lahf
add
es
mov
xor
fcmovu
pop
popl
lods
ret
out
gs
pusha
dec
popa
out
jb
out
pop
and
sahf
and
stos
shr
jg
jb
pusha
mov
mov
pop
lods
subw
int
lea
cmp
data16
jnp
pushf
imul
andl
sti
cmpsb
adc
and
fstl
rcrb
clc
pop
xchg
cmp
pop
xor
aam
shrb
les
cwtl
call
lock
cmpsb
inc
push
pop
cmp
fimuls
or
aad
mov
imul
mov
in
inc
pop
cld
or
mov
cmp
pop
sub
add
or
arpl
vpmulhuw
in
ret
gs
movsb
dec
add
push
xor
divl
ret
imul
adc
in
outsb
jo
sub
mov
imul
test
and
lret
subl
inc
int3
dec
mov
daa
push
jnp
aam
sbb
pusha
xor
mov
inc
fcomp
std
ja
int3
add
call
fsts
or
ret
mov
jp
adc
sub
jb
pop
lcall
popf
fisttpl
std
fistpl
xchg
jae
loope
xor
pop
mov
mov
cmp
decb
sub
push
sbb
lret
out
pop
inc
gs
pop
cmp
cmp
outsl
add
insb
fmuls
sub
das
push
popf
jb,pt
daa
jns
data16
fstps
stos
imul
pop
xlat
jb
stos
inc
and
jne
dec
cmpsl
dec
push
ret
mov
mov
popa
aaa
stc
fwait
pop
iret
push
testl
lds
xor
xchg
mov
pop
dec
outsb
pop
push
xchg
ja
cmp
mov
or
decl
pop
adc
push
adc
popa
je
dec
add
les
stos
ja
sti
xchg
mov
sbb
fcom
xchg
push
sbb
iret
outsb
or
mov
push
and
dec
aam
mov
add
in
push
testl
push
fs
loop
inc
push
in
lea
mov
mov
outsl
push
push
test
cmp
outsl
cmp
hlt
mov
bound
mov
mov
push
mov
stos
sub
ret
dec
mov
outsl
outsl
mov
dec
sbb
dec
push
cs
aas
fs
dec
repnz
sbb
je
adc
shrl
push
inc
cmpsb
jno
orb
push
mov
int
aas
popa
push
xor
hlt
jg
mov
fnsave
or
lods
cmpl
sbb
push
out
cmp
push
shll
cmp
or
xor
and
es
cmp
dec
pop
movsb
jg
add
test
push
stos
push
adc
xchg
stos
push
cld
not
insl
js
cmp
inc
or
leave
mov
sub
jecxz
sub
cmp
push
and
pop
mov
mov
inc
mov
insl
sub
movl
push
mov
pusha
jp
aad
sub
out
cmp
stc
mov
clc
nop
pushf
addb
lock
dec
fsubs
ja
or
sub
scas
es
cmpsl
adc
in
push
cmp
jp
mov
jnp
add
lret
bound
std
jg
pop
imul
sarl
or
mull
jg
jb
mov
mov
or
bound
sbb
nop
mov
xchg
ljmp
das
bound
jns
lret
ja
div
or
mov
scas
inc
mov
pop
dec
insb
pop
add
mov
xchg
or
mov
lret
gs
push
cmc
test
fistpll
xorb
insb
in
ret
jae
and
sub
dec
les
jle
std
or
cwtl
pop
xor
pushf
aad
dec
push
sub
or
sahf
jmp
adc
pop
sbb
es
inc
aaa
arpl
xchg
and
sub
ss
push
cmp
cltd
lds
xor
adc
into
and
inc
adc
xchg
faddl
push
das
les
push
mov
cs
push
xor
fildl
lds
xchg
mov
aad
cmc
pop
bound
gs
loop
imul
push
fdivs
jg
jnp
jg
mov
push
mov
iret
incb
dec
mov
jge
and
pop
rcl
xor
test
repnz
call
jle
inc
repnz
notb
int
sbb
das
hlt
sbb
add
ja
xchg
pop
lea
add
imul
sarb
fcompl
stc
outsl
dec
movb
push
and
mov
mov
mov
ljmp
dec
adc
fwait
repnz
jg
add
aas
pop
mov
ja
aad
or
xor
inc
dec
push
add
inc
je
pusha
fsubr
jmp
pop
inc
xchg
in
or
bound
or
mov
es
aad
sub
enter
mov
cmpsl
loope
cmp
adc
dec
ret
stos
mov
mov
dec
xor
xor
xchg
dec
and
fimull
dec
fidivrl
mov
shr
out
pop
push
pop
mov
sbb
je
rcrb
mov
data16
test
stos
out
roll
mov
jno
scas
push
stc
jno
or
addl
lods
mov
jmp
push
outsl
loope
out
mov
add
into
dec
mov
adc
in
push
arpl
adc
sbb
in
jg
fsubl
roll
push
insb
mov
xchg
in
sub
jge
and
push
xchg
sbb
sti
test
adcb
jo
xchg
fdivs
lcall
push
sub
pusha
xor
inc
sbbl
icebp
or
mov
mov
add
and
stos
xor
mov
neg
and
sbb
mov
mov
xor
mov
adc
xor
or
jb
cmp
imul
addr16
sub
fldlg2
add
or
push
and
js
push
addr16
les
mov
adc
dec
gs
push
mov
mov
pushf
andl
xchg
in
jae
ljmp
dec
ficompl
out
mov
xor
mov
cmpsb
dec
mov
aad
sub
jns
std
adc
xchg
leave
mov
lods
pushl
icebp
fs
add
jb
loopne
mov
xor
cmp
push
pop
and
dec
and
ja
jns
pushf
aad
push
jns
or
jbe
jno
stos
mov
add
das
in
adc
xor
inc
mov
sar
scas
pushf
repnz
inc
and
int3
lds
mov
mov
repnz
jl
popf
gs
iret
xchg
xor
and
mov
sahf
lcall
es
out
popa
sub
mov
or
lea
idivb
sub
neg
adc
push
mov
and
mov
pop
test
cmp
pop
xchg
aaa
ret
add
xor
and
mov
stc
and
fsubrl
clc
xor
sub
call
cmc
mov
mov
mov
fisttpl
dec
push
push
cmpb
fstp
jne
mov
pop
mov
pop
test
imul
mov
push
pop
push
cmpsl
out
push
jle
movsb
cltd
mov
pop
lcall
inc
mov
fwait
xor
lock
jle
jg
in
mov
mov
push
subl
cmp
push
mov
mov
pop
movsb
cli
add
lods
jno
scas
inc
mov
pop
aad
out
outsb
push
loop
add
rep
pop
add
fsub
cwtl
push
xor
xchg
push
dec
scas
push
dec
cmc
lret
and
sahf
inc
jmp
repnz
and
jg
mov
sub
and
dec
cmpsl
int3
ljmp
lock
shlb
imul
mov
jno
lret
push
mov
mov
mov
fisubl
out
add
es
int3
sbb
xchg
das
mov
xchg
mov
and
pop
pusha
push
dec
ds
xchg
pop
cmp
shll
js
sarb
push
pop
test
mulb
adc
mov
ds
dec
addb
out
rclb
jge
dec
xchg
or
pop
insl
jge
andl
mov
xor
mov
frstor
stc
lmsw
and
ljmp
jno
jns
sti
rorb
in
sahf
mov
xchg
enter
test
js
int
push
sub
push
imul
inc
xchg
test
into
sub
int3
jmp
jae
movsb
mov
mov
fwait
lret
mov
shr
jecxz
gs
je
mov
stos
insb
xor
push
pop
sarl
enter
and
fstpl
clc
mov
fstpt
leave
loop
xorl
xchg
jmp
sbb
in
imul
out
sahf
hlt
sbb
sbb
adc
das
or
and
scas
and
xchg
xchg
pop
cmp
data16
mov
inc
ftst
pushf
mov
es
mov
pop
or
and
mov
xchg
push
ret
dec
in
enter
push
cwtl
xchg
and
push
jmp
dec
leave
mov
inc
popf
sub
pop
repz
jb
outsl
rcrb
pop
adc
xlat
jge
repz
xor
adc
loop
lret
mul
mov
add
ret
jl
test
sub
dec
aaa
add
jecxz
or
push
mov
sub
clc
mov
mov
daa
sbb
lret
icebp
daa
cmpsb
lods
adc
sbb
ss
add
mov
hlt
add
sbb
popa
cld
lahf
push
repnz
movsl
inc
xchg
push
mov
push
jg
sub
pop
xchg
xor
scas
xor
mov
sahf
and
push
push
or
xchg
data16
in
stos
test
xorb
lret
dec
xchg
xchg
test
in
in
testl
mov
jno
dec
shll
push
push
push
inc
jmp
cmp
mov
mov
inc
lods
inc
mov
pop
int
scas
pop
pop
sbb
push
test
sbb
fidivrl
scas
jmp
cmpb
pushl
mov
lret
adc
jae
in
out
cld
jnp
test
sub
dec
in
lret
lret
jb
mov
loope,pt
fldcw
pop
lock
lret
inc
or
sbb
movsb
inc
cmp
lahf
push
jb
push
cli
aaa
xchg
test
movsl
push
pusha
mov
push
enter
push
add
cld
sahf
adc
aam
pop
int
cmp
mov
sbb
push
adc
outsl
mov
movsl
pop
enter
iret
push
decl
js
xchg
data16
adc
inc
ja
scas
or
cmp
pop
shl
pushf
inc
dec
jmp
push
inc
lret
cmp
jae
push
je
es
mov
adc
mov
lcall
rolb
stos
dec
and
and
popa
clc
hlt
mull
mov
pop
jbe
and
into
sbb
mov
repz
xadd
shll
adc
lock
mov
lods
sbb
xchg
sbb
xlat
clc
mov
in
inc
ja
push
push
mov
mov
sub
jge
or
sub
jg
mov
adc
je
rcrb
fwait
pop
mov
loopne
cltd
mov
xor
daa
mov
xor
andb
cmp
jle
inc
sbb
test
call
sub
push
rolb
cmp
fs
xchg
andb
adc
mov
dec
sti
dec
and
pop
jp
int
cli
jge
arpl
test
mov
dec
xor
jbe
ret
mov
xchg
pushf
lret
lret
shrl
push
lods
mov
cmp
inc
test
out
push
xchg
fcmovnb
cmc
mov
into
mov
arpl
mov
or
jbe
std
adc
fcomps
ficomps
or
mov
xor
test
js
lcall
pop
push
jne
stc
sbb
adc
call
xchg
mov
jnp
pop
arpl
ror
mov
xchg
mov
inc
imul
mov
and
xor
push
jl
jnp
cmp
loope
lret
push
rcr
mov
mov
cwtl
xchg
mov
inc
sub
aad
sbb
push
nop
jecxz
imul
sub
lret
add
gs
cmc
or
dec
and
clc
out
inc
xchg
test
call
shll
inc
dec
test
sub
gs
cmp
sbb
lcall
adc
aam
add
fisubrs
movsb
das
je
inc
jnp
and
fwait
jmp
iret
imul
mov
mov
ljmp
jg
push
xor
adc
xchg
daa
push
cmpl
adc
orl
xchg
or
in
or
enter
pop
insb
or
inc
pushf
lock
jp
sub
insb
dec
xchg
and
sti
push
ret
xchg
cmp
pop
sarl
les
daa
lahf
push
cmp
or
pop
in
mov
repz
sub
push
xor
pop
inc
mov
cltd
inc
mov
xor
test
cs
add
fcoml
and
scas
inc
cs
lds
ficoml
jmp
cld
jnp
pusha
inc
add
dec
sti
dec
loop
add
out
mulb
inc
add
sahf
jns
mov
cwtl
xchg
mov
cmp
shrb
push
mov
push
add
nop
inc
out
rolb
fiadds
js
sub
cmp
nop
lret
fimuls
dec
fldl
sub
push
rolb
jno
inc
cmp
fadd
sub
std
test
stos
xorl
push
add
lea
and
mov
mov
adc
pop
das
lock
test
outsl
xchg
mov
cmpl
js
fdivrl
mov
hlt
push
sbb
sub
mov
es
test
dec
shl
mov
inc
mov
nop
sti
ss
pop
xlat
inc
sub
ret
add
push
inc
push
sub
cmpsl
outsl
sbb
pop
pushf
pop
imul
test
mov
jmp
movsl
call
lcall
aas
pop
mov
add
jge
push
mov
jne
daa
rcrb
call
xor
insb
push
and
pop
out
jecxz
cli
inc
mov
inc
push
popf
data16
sbb
push
dec
cltd
cmp
test
sub
push
dec
xor
lret
mov
pop
adc
xor
and
js
into
rcll
mov
fsubl
outsl
inc
adc
call
movsb
sub
pushf
scas
aaa
jl
outsb
cmpsb
subl
pop
dec
or
inc
pop
sub
fistps
xchg
fld
test
bound
into
test
push
mov
dec
in
pop
rorl
jbe
stos
insb
mov
cld
xor
or
adc
push
std
daa
jle
xor
xchg
insb
ud1
sbb
and
pusha
adc
push
xor
int3
pop
jbe
int
xor
or
adcb
xor
inc
xchg
and
dec
xchg
adc
mov
cmpsb
jb
add
fdivrs
xchg
and
icebp
jmp
push
cli
addr16
dec
pop
cmp
add
jbe
sub
sti
movsb
jne
inc
sti
push
mov
movsl
inc
sbb
cli
test
xlat
mov
sub
nop
cmpsb
clc
subb
sub
cwtl
and
adc
xor
pushl
xchg
addr16
js
or
add
jg
fs
cmp
imul
fsubrs
and
sar
mov
jp,pn
imul
lcall
sub
sub
hlt
fwait
movsl
stos
pop
push
pand
rolb
fsubl
sarb
adc
inc
sbb
or
cli
hlt
sub
mov
jno
jae
xchg
xchg
rcll
xchg
dec
sarb
mov
add
scas
repnz
lods
add
adc
inc
out
mull
aad
and
fcoml
mov
les
and
cmp
lret
call
push
mov
mov
cltd
in
or
insl
jnp
in
jb
sub
sbb
sti
mov
sbb
call
pop
push
lret
lock
sbb
test
xchg
lahf
inc
and
xorl
hlt
popf
adc
repnz
mov
push
cwtl
lret
out
pusha
dec
test
test
and
mov
imul
jnp
or
mov
outsl
fdivp
add
fwait
pop
mov
jns
lds
idivb
push
sub
fisubl
pop
mov
orl
stos
testb
xor
mov
imull
out
sbb
adc
mov
int3
test
das
ss
cmp
in
mov
mov
mov
jmp
fcomps
in
aas
call
shrl
dec
and
scas
push
xchg
mov
xchg
mov
inc
sbb
push
xchg
call
les
cmp
jmp
stos
jle
iret
inc
adc
inc
pop
cltd
cwtl
inc
scas
aas
pushf
push
std
outsl
lds
pop
adc
cltd
adc
mov
call
gs
loope
loopne
testb
xlat
popa
fcomps
dec
adc
pop
ret
fadd
or
and
clc
mov
xor
xchg
sahf
cmp
imul
fnsave
lods
mov
inc
or
call
inc
or
fadd
and
adc
stc
dec
push
testb
jle
shll
add
mov
dec
adc
mov
push
outsb
rorl
mov
daa
mov
ror
ja
push
mov
in
jae
fidivl
push
cmp
xchg
lret
aad
cmp
lock
shr
or
jge
in
cld
icebp
mov
cmp
sahf
shlb
xchg
mull
xchg
repz
insl
ret
mov
pop
divb
jl
repnz
movsb
movsl
xor
cmp
lods
dec
lret
cs
imull
sahf
test
stos
mov
das
sub
cmp
shr
out
mov
add
mov
dec
jecxz
icebp
test
lret
xchg
jb
out
add
and
dec
rcll
push
or
test
lcall
push
sbb
or
loop
cmp
mov
call
shll
pop
pop
jmp
das
xchg
notl
sahf
lds
mov
jecxz
shll
fnstenv
cld
jae
aas
mov
sub
push
fwait
dec
mov
fdivrl
repnz
out
jg
jo
loope
adc
mov
lahf
mov
sarl
mov
rorl
js
pop
pop
xor
adc
test
cld
cli
nop
es
push
inc
push
cmp
popf
in
add
stos
xor
jmp
popf
jo
lea
addb
push
lcall
fbld
jle
emms
or
mov
xor
and
cld
xchg
aas
insl
add
mov
add
sub
outsb
dec
mov
std
add
fmull
lcall
or
xchg
fsubrl
jle
dec
sbb
adc
nop
rcr
aas
pop
shll
ljmp
and
ficompl
je
dec
lods
xchg
push
xor
mov
in
rcr
mov
repz
cmp
dec
dec
je
ds
iret
sti
inc
xchg
imul
mov
push
ret
xchg
add
imul
xor
lret
and
xor
cwtl
add
movsl
not
xchg
stos
mov
es
or
loopne
and
or
xchg
pop
or
rcl
xlat
iret
push
orl
jne
or
subb
push
inc
lret
arpl
ret
push
dec
pop
inc
push
mov
cs
mov
imul
popf
push
mov
lods
vpmacsww
rcll
ja
cs
sbb
fsubrl
lods
in
jae
push
sbb
pop
dec
adc
dec
mov
mov
mov
mov
jl
and
pop
pop
out
daa
rcll
mov
stc
sbb
stos
push
test
add
movsb
fwait
cmp
mov
pop
mov
or
sti
push
xchg
push
dec
adcl
add
add
mov
dec
out
stos
xor
imul
mov
into
les
add
push
push
mov
out
addl
cld
sub
stos
repnz
idivl
fs
rorb
jmp
inc
xor
sub
cmpsl
pop
aas
les
std
xchg
int
push
mov
aas
flds
jge
jl
ret
aaa
data16
data16
popf
ljmp
loopne
rorl
into
inc
cmpsb
cmp
popf
shr
loope
xor
pop
inc
leave
scas
cmp
cmp
jl
mov
insl
adc
cmp
ss
or
xchg
mov
gs
aaa
xchg
cmp
enter
push
push
and
jb
lock
ret
pop
in
adc
sub
jb
xchg
aaa
mov
cmc
sti
test
loope
cwtl
into
add
sbb
push
lcall
add
lods
fucomp
mov
pop
cwtl
and
andb
pushf
pop
sti
sbb
mov
xor
out
aaa
sub
dec
jle
cmp
not
aam
mov
mov
lahf
xor
mov
add
and
cmp
das
pushl
dec
xchg
xchg
pop
cmp
xor
mov
adc
out
inc
cld
int3
ret
aam
lock
xor
mov
pop
pop
xor
pop
movsl
cmc
int
mov
xor
mov
sahf
jne
lock
add
xchg
fwait
iret
jb
mov
adc
and
xchg
pop
or
mov
fdivrl
jbe
dec
mov
call
call
lea
push
pop
loop
aas
push
and
xlat
fisubrs
daa
mov
xor
mov
movb
push
mov
cmp
mov
cmpsb
sbb
les
scas
mov
in
pop
stos
add
outsl
ja
fidivl
ror
fld
addb
lea
push
jo
dec
mov
fsts
xor
pusha
inc
cmp
adc
mov
fnsave
lret
ret
inc
pop
pop
rclb
rclb
add
lods
cmpsb
mov
arpl
xchg
test
outsl
popf
int3
scas
dec
xor
inc
ljmp
jp
in
outsb
sbb
adc
cmc
sarl
cltd
pop
lret
shl
mov
shl
out
pop
movsb
rolb
in
pop
aam
adc
xor
call
hlt
sbb
pop
rcrb
adc
pushf
mov
or
mov
movsl
inc
enter
into
dec
loope
lcall
xchg
fbld
fisttpll
fisttpl
mov
leave
and
mov
add
mov
xor
push
add
les
movsl
cmp
aam
lock
xchg
lock
xchg
mov
scas
lock
mov
addr16
lret
mov
in
popf
pop
lods
add
or
sub
hlt
sub
mov
jo
outsb
mov
data16
dec
sub
leave
push
test
sub
bound
pop
cmc
xchg
mov
shll
lods
push
xchg
adc
aam
scas
jmp
mov
push
mov
add
test
cli
xchg
lret
jo
out
fs
xor
and
or
or
or
pop
loope
loopne
insl
lcall
adc
mov
sbb
jl
sub
or
cmp
nop
fldt
pop
out
aas
push
in
lods
inc
cmp
mov
mov
inc
sbb
xchg
mov
or
or
jecxz
loope,pn
inc
cld
inc
rclb
jb
fdivs
mov
stos
in
adc
mov
mov
fsubs
insb
sub
dec
sahf
and
or
aam
out
mov
xlat
aad
jae
popf
outsb
sub
andb
lahf
sub
mov
fs
lahf
out
enter
jge
xchg
inc
or
lock
test
mov
adc
das
ret
xchg
xchg
pop
fistl
dec
insl
and
and
cmc
jp
fistps
in
outsl
pop
cs
sbb
cmp
xchg
pop
pusha
dec
mov
outsl
jbe
aad
adc
dec
hlt
push
sub
add
ret
adc
test
sbbl
arpl
das
inc
fwait
insb
adc
xor
cmp
lret
shll
dec
sub
xchg
mov
lea
xlat
fiadds
inc
les
cmp
ss
fisubl
arpl
stos
imul
pop
push
sub
gs
xor
xor
outsl
jp
jae
pop
jns
out
xchg
pop
push
fsubrs
jg
lds
jno
jmp
rcrl
fwait
xchg
addr16
in
not
sbb
fisttpll
mov
icebp
inc
scas
inc
std
push
neg
mov
jl
sbb
mov
fwait
or
popl
jne
jne
sub
mov
sub
jns
stos
mov
and
dec
test
loopne
lds
test
mov
sub
stc
add
xor
mov
fisubs
lods
gs
lock
in
lods
push
adc
push
icebp
jne
into
mov
pop
int
lock
outsb
xchg
sahf
int3
cmpsb
scas
mov
sbb
sbb
aaa
out
fcomps
pop
lea
lahf
sub
icebp
or
xchg
andb
fcomi
push
lcall
xor
mov
je
mov
mov
ljmp
pusha
or
sbb
cmp
sti
lds
lahf
push
sahf
xor
fisubs
les
ja
cmp
int3
scas
xchg
fwait
mov
push
mov
rorb
sub
jl
jns
call
rorb
loop
jo
sbb
mov
sbb
xchg
pop
mov
sbb
ficoms
and
sbb
jne
out
out
call
push
mov
int3
adcl
adc
add
in
scas
pop
push
mov
jno
stos
out
mov
xor
jp
data16
bound
imul
int
dec
cmpsb
jl
mov
jl
fnstcw
nop
lret
aaa
inc
ret
lock
loopne
mov
pop
test
mov
xor
or
lahf
jg
mov
ss
insl
aad
mov
push
adc
sahf
in
repz
outsb
aas
fistl
out
cmc
cmc
mov
hlt
sbb
icebp
test
sub
xchg
es
orb
stos
lret
arpl
mov
arpl
test
jo
or
lock
nop
jne
aaa
or
mov
lcall
sahf
or
pop
jmp
das
test
inc
inc
jne
into
movsb
push
mov
repnz
jo
adc
out
sub
mov
fcomip
mov
iret
les
xor
sub
insb
test
mov
mov
pop
iret
add
icebp
add
nop
daa
lret
hlt
pop
inc
push
sbb
cmp
xchg
scas
aam
jl
mov
xchg
into
xchg
sub
in
gs
pop
lahf
daa
push
xchg
jb
out
cs
mov
push
cmp
dec
out
cmpsl
xchg
ljmp
lret
fidivs
jno
shlb
push
adc
cmp
gs
xchg
stos
or
mov
mov
mov
inc
mov
xor
dec
xlat
inc
cwtl
mov
mov
in
xchg
push
xabort
out
sub
add
lret
xchg
fimuls
scas
jmp
sub
and
mov
fadds
outsb
inc
es
and
andb
stc
and
mov
jno
orl
lahf
add
std
dec
stos
imul
mov
mov
ss
mov
gs
fs
js
mov
test
mov
pushf
cmp
mov
lods
xchg
aas
mov
inc
lods
cld
lock
inc
mov
mov
sbb
std
inc
sti
call
xor
inc
xchg
cld
pop
or
and
pop
mov
xor
out
lahf
shrb
cmpsl
test
ficoms
js
mov
and
jnp
stos
push
fistps
fidivs
je
push
xor
outsl
gs
ss
iret
mov
pop
test
inc
das
loopne
dec
pop
leave
xchg
cltd
xor
jp
adc
pop
pop
ret
mov
test
in
xchg
ds
aad
push
sarb
fildll
mov
pop
jmp
xor
sub
or
and
cmp
pop
jo
jle
fwait
mov
lcall
popf
pop
pop
imul
xchg
push
push
cwtl
subl
outsl
lods
pop
xor
sbb
inc
push
je
shll
cs
loopne
jle
sub
dec
cltd
sbb
inc
mov
mov
push
xchg
mov
outsb
inc
push
sub
lock
test
dec
jo
gs
xor
xor
imul
rclb
mov
dec
movsl
mov
mov
mov
sarl
int
sub
fxch
cmpsb
push
fninit
out
pop
mov
fnstcw
cmp
mov
jo
int
sub
sub
cmp
push
shll
insb
stos
or
std
lods
imul
and
jl
pavgw
xchg
adc
xchg
daa
daa
outsb
test
pop
nop
fwait
sar
iret
mov
stos
into
or
pop
xor
das
leave
iret
test
adcl
xor
out
cli
sti
mov
pop
es
ret
sub
pop
nop
movsl
cwtl
adc
sbb
pop
mov
jl
out
int3
icebp
lea
add
popf
ja
popl
sub
cli
sub
xor
dec
sbb
testl
std
pusha
adcb
add
stc
data16
enter
data16
pop
dec
mov
fs
js
sub
test
dec
out
push
cmp
mov
mov
jmp
jb
in
in
ficompl
je
pop
sbb
rcll
shll
aaa
je
add
fstpl
add
xorb
scas
imul
into
mov
cmp
inc
stc
cmpl
repz
cmp
dec
in
jle
movsl
inc
xor
mov
xor
jae
mov
xchg
mov
push
enter
pop
bound
pop
mov
cmc
sarl
popf
in
mov
inc
outsl
or
mov
or
xchg
sti
loope
lea
push
ficoml
dec
mov
xor
gs
adc
cwtl
xchg
mov
rcrl
xchg
shrb
pusha
ret
jb
pop
mov
leave
xchg
push
int
mov
sbb
lods
add
push
fimuls
fcmovnu
jae
lods
pop
cmc
sahf
test
jp
call
push
test
cmp
fs
push
xchg
scas
pop
add
push
pop
add
or
aas
outsb
push
cli
inc
ds
cmpb
or
pop
push
sbb
mov
sbb
mov
aad
pop
mov
inc
fcmovb
mov
jecxz
stos
out
repz
sub
aas
roll
mov
adc
dec
lods
xchg
xchg
bound
or
xor
sub
pop
adc
mov
or
xchg
cmp
or
subl
rol
pop
add
imul
aam
inc
push
out
fwait
test
sbb
add
lcall
cwtl
pop
cltd
or
mov
fstpl
xchg
pop
out
pusha
insl
shll
mov
add
mov
scas
mov
xor
sti
xorl
sbb
sar
mov
xchg
xchg
daa
nop
les
out
mov
sub
data16
inc
mov
push
jg
ljmp
arpl
fs
pop
sub
add
push
dec
outsl
xchg
sbb
adc
jle
and
mov
pop
adc
jno
adc
inc
add
push
cmpl
mov
push
cmp
imul
in
int3
jg
out
sbb
dec
neg
jmp
xchg
stc
push
repz
lock
fimull
or
aad
and
push
inc
add
lea
add
push
sbb
sahf
dec
popa
mov
cmp
repnz
add
jle
push
into
lcall
mov
inc
mov
pop
or
or
test
adc
rorb
xchg
xor
ret
xchg
push
xchg
xchg
leave
subl
push
pop
repz
sti
clts
rorl
insb
mov
shlb
push
inc
enter
add
pop
aas
out
int3
lock
mov
loop
pushf
movsl
adcb
push
aad
add
sbb
out
mov
movq
mov
push
jbe
add
push
dec
int3
push
sub
mov
in
inc
xchg
jle
sub
dec
mov
lods
push
and
in
stos
daa
mov
mov
loopne
cmp
adc
sbb
mov
mov
xchg
adc
add
mov
sbb
nop
xchg
jg
ljmp
mov
test
xor
das
cli
push
arpl
pusha
inc
xchg
rorb
cltd
ds
adc
xchg
adc
icebp
out
xchg
mov
mov
cmp
push
sahf
dec
in
mov
jae
stos
mov
dec
xor
or
sub
jns
in
push
sarb
divb
icebp
and
sub
cmc
push
adc
stc
jb
inc
xor
and
push
jge
adc
ficomps
adc
jge
icebp
mov
popf
clc
pop
xchg
ret
xchg
mov
hlt
rcll
out
inc
call
push
or
jge
pushf
or
adc
fcmovbe
jne
and
jg
popf
adc
les
push
jne
aam
das
push
xlat
int3
test
jl
mov
mov
xor
inc
popaw
fsts
pop
cwtl
inc
or
push
pop
cld
mov
in
xchg
mov
dec
scas
subb
add
push
ja
stos
loope
mov
test
or
pop
sbb
and
and
add
pop
cmp
mov
mov
xchg
jb
mov
mov
dec
rolb
push
sub
push
arpl
push
aam
in
push
fwait
mov
bound
sarb
push
mov
loop
hlt
test
stc
bound
loop
mov
xchg
fildl
or
ds
lret
ss
jmp
adc
mov
pop
and
sub
inc
cld
cltd
loop
daa
push
aad
cmp
loop
mov
xor
xor
and
xor
aad
subb
pop
dec
pop
shlb
and
test
push
mov
push
jb
scas
repnz
aam
sub
lcall
rcrb
and
sbb
pop
dec
dec
adc
mov
pop
xchg
sar
push
repnz
repnz
call
mov
cs
nop
mov
cmp
cmpl
loopne
fidivrs
sbb
mov
cmp
rcr
imul
push
imul
fidivrs
pop
mov
in
xorl
sahf
xor
push
outsl
lds
or
cmp
add
ss
xchg
dec
and
jge
nop
in
das
movsb
jp
mov
loopne
and
xchg
add
test
sarl
mov
sbb
add
lods
jg
dec
shl
cmp
xchg
xchg
xchg
and
sub
outsb
mov
xchg
ret
sti
cmp
xchg
gs
pop
insb
lea
outsl
mov
adc
sub
ss
dec
test
add
clc
xchg
ret
jp
sub
into
in
cmpsl
fwait
into
pop
out
xor
scas
out
mov
push
push
cmovs
push
push
mul
xor
mov
and
or
pop
cli
sbb
into
ret
mov
aad
and
mov
jne
jp
mov
outsl
sub
lret
mov
fwait
iret
jg
or
xlat
pushf
mov
jns
ljmp
xchg
adc
loop
xchg
push
mov
adc
sbb
xorl
ret
mov
lds
ror
scas
xchg
ret
cmp
mov
jle
sbb
rorb
je
cs
ret
lcall
xor
es
cmc
stos
sub
lcall
jne
jae
sub
sbb
adc
xchg
fstpl
cmp
mov
add
xor
cmp
xor
adc
xor
or
bound
pushf
subl
out
and
call
mov
test
test
xchg
mov
fucomp
mov
daa
je
push
out
int
rolb
pop
insl
std
push
xor
pop
idivl
push
adc
xor
lret
movsb
nop
fwait
in
popf
sub
test
xchg
fcmovnb
xchg
or
xchg
icebp
les
and
lahf
xchg
lods
push
xlat
shl
mov
movsl
xchg
mov
xor
mov
divb
push
repz
fisubs
adc
ljmp
and
in
loopne
push
scas
fwait
aaa
mov
sahf
and
xor
pop
and
sahf
mov
jg
aam
and
insb
inc
cmp
popf
cld
push
dec
ljmp
mov
jb
inc
inc
lock
lret
add
cmp
jo
push
das
arpl
and
nop
push
xchg
out
iret
test
pop
lods
mov
lcall
push
xorl
cmpsl
and
xchg
icebp
xchg
out
in
sbb
inc
dec
rcll
es
or
lock
mov
js
pusha
push
addr16
enter
and
mov
ds
mov
aaa
add
in
mov
daa
lahf
mov
mov
mov
inc
push
mov
fwait
fs
add
insb
int
popf
fstps
or
sbb
add
mov
mov
adc
add
jae
jmp
sub
hlt
subb
cld
dec
lret
jl
test
pop
imul
negb
jnp
test
add
in
sbb
mov
fisubrs
mov
test
xchg
lret
push
cmp
outsb
ds
sbb
jge
scas
pop
pop
movsl
lahf
rcr
or
sbb
fistl
mov
dec
xchg
jnp
pop
mov
mov
in
es
mov
movsl
data16
cmpsb
fsubs
jo
mov
add
loopne
pusha
scas
dec
pop
outsl
inc
adc
lock
out
pop
pop
test
das
shr
mov
scas
fcoms
cmp
shl
cs
insl
aad
mov
stos
out
addr16
aam
les
and
das
xchg
sarb
xorl
jbe
pop
in
pop
mov
movsb
lea
orl
rorl
mov
ror
outsb
pushl
xor
stos
mov
xchg
dec
mov
inc
mov
pop
lret
out
movsl
movups
pusha
and
push
inc
add
push
push
and
fldenv
adc
add
shr
or
loope
movsb
loopne
and
dec
sbb
or
rcrl
lcall
aam
jmp
movsb
add
and
push
fisttpl
dec
pop
cmp
mov
inc
jo
es
into
push
xchg
mov
enter
loop
movsl
aaa
inc
mov
test
rcl
shll
fistpll
aad
cmpsl
enter
daa
add
xor
int
xor
daa
test
cmpsl
scas
test
and
clc
inc
sub
xor
mov
push
xchg
mov
jbe
push
out
out
jae
icebp
xor
enter
out
movsb
sub
xchg
push
push
cmp
mov
add
sub
lret
lahf
xor
sbb
xchg
xchg
lahf
pop
into
loope
in
mov
pop
stos
cs
into
movsb
push
mov
sbb
pushf
jnp
rclb
push
cmpsl
xchg
sarl
jecxz
and
shll
inc
inc
pop
cmc
and
pushf
jns
xor
loopne
call
dec
dec
test
push
push
add
fdivrl
fnstsw
icebp
or
jbe
sbb
sub
ret
stos
cld
gs
enter
stc
testb
mov
inc
pop
into
sub
imul
je
dec
pop
add
sbb
aas
push
xchg
mov
stos
in
add
insb
dec
and
xor
fstpl
fwait
add
pop
filds
out
push
xlat
push
pop
jbe
push
les
movsl
lods
mov
and
xchg
icebp
add
inc
stc
int3
bound
addr16
xchg
or
in
jl
push
out
cwtl
xor
inc
std
lret
inc
lds
add
add
push
sub
stos
adc
in
pop
inc
notl
push
test
lea
lds
sub
insl
push
xchg
push
sbb
and
add
inc
insl
xor
cmc
vmovntps
pop
pop
sub
cld
add
cmp
shl
pop
add
loope
xor
mov
add
jae
movsl
int3
incb
hlt
fcomps
add
pop
cmpsl
int3
pop
movsl
int3
fs
jmp
iret
sbb
pop
mov
sub
movsb
mov
ret
roll
int3
cmp
fwait
test
jl
out
jnp
sbb
xorl
sbb
pop
dec
in
adc
jecxz
mov
pusha
mov
insb
imul
gs
sbb
aad
out
pop
fimull
andl
mov
inc
mov
cld
pop
divl
das
cmp
sub
popa
cld
cli
lahf
iret
inc
stos
push
popa
mov
scas
popf
mov
ret
xlat
imul
lock
aaa
pop
cmp
in
xor
jbe
in
jmp
sbbb
addr16
loopne
movsb
iret
cli
outsl
inc
aaa
xchg
outsb
scas
mov
push
sarl
in
rolb
pop
adc
mov
and
nop
subl
scas
add
iret
je
cwtl
sbb
xchg
outsb
pusha
xchg
pop
mov
dec
push
loope
cmp
rcr
aaa
shrl
cmp
in
sbb
xor
dec
add
ret
mov
mov
sbb
sub
mov
mov
inc
jb
push
inc
push
mov
and
add
mov
inc
sbb
dec
xchg
and
pop
and
and
aad
jl
movsb
gs
cmp
or
jo
aaa
add
cmpsl
dec
ljmp
into
ret
or
les
aad
pop
cli
insb
ret
insb
sub
lods
call
insl
pop
iret
sbb
nop
in
mov
mov
adc
test
adc
scas
dec
and
jns
arpl
es
dec
imul
mov
ret
fcoml
aad
test
adc
mov
mov
add
inc
push
push
inc
out
xor
shll
sub
pop
aad
sbb
and
leave
xchg
sbb
xor
xchg
adc
mov
xor
xchg
ret
dec
and
aaa
arpl
push
mov
js
xchg
adc
xor
adc
aas
mov
test
mov
pop
into
pop
aad
scas
mov
sub
add
insb
in
jecxz
xchg
rcl
cmp
std
fnstenv
xor
add
mov
and
and
mov
pop
xchg
push
shr
enter
insl
cltd
or
test
fisubl
xor
cmpsb
lahf
add
stc
dec
inc
add
neg
cli
js
xor
jb
and
mov
test
xchg
icebp
jbe
jns
cmpsl
stos
adc
or
adc
insb
adc
int3
add
je
cmc
sbb
jbe
movsl
cmpl
jne
xor
orl
cmpsl
jo
pop
cwtl
nop
fmuls
pop
dec
cli
push
sbb
xchg
out
loop
ret
mov
pushf
pop
aad
or
push
sub
lea
adc
mov
jg
in
cmp
dec
popa
idivb
xchg
loop
cmp
dec
loope
adc
ss
cmp
enter
xor
jg
repnz
jle
dec
inc
addb
repnz
xchg
xchg
test
stos
notb
or
pop
xchg
sbb
xchg
rcl
test
push
adc
leave
cld
call
call
out
loope
mov
add
mov
mov
dec
pop
scas
fimull
and
sarb
inc
dec
push
jecxz
dec
or
push
xchg
xchg
fimull
xchg
xchg
and
ja
fsubs
adc
inc
aaa
popf
andb
push
testl
add
into
ljmp
add
xchg
sbb
sbb
mov
cwtl
sub
mov
inc
ret
aaa
xchg
je
or
push
gs
jecxz
lcall
mov
or
daa
ja
movsl
imul
xor
insb
jnp
add
and
iret
pop
mov
lahf
negb
insl
sarl
mov
mov
les
push
push
mov
fadd
or
add
cmp
stos
xor
mov
in
cmp
jge
or
mov
mov
pop
mov
out
sub
or
and
push
aam
cs
jp
and
xchg
into
dec
testl
or
mov
int
movsl
add
movsb
or
inc
out
neg
add
add
adc
dec
cmp
xor
out
test
shrb
add
arpl
cmp
mov
xchg
mov
in
xor
ret
dec
mov
arpl
inc
inc
loopne
cld
pop
xchg
faddl
sti
cmp
and
adc
sub
repz
cli
dec
push
cmp
loopne
xorb
cmpsl
sub
jmp
imulb
mov
call
je
inc
push
das
mov
pop
fstl
test
mov
and
movsb
outsl
xchg
lret
push
in
sbb
popf
fdivs
pushf
push
inc
lcall
add
fistps
adc
fidivl
dec
sub
xchg
jle
dec
inc
lea
mov
lock
jno
enter
ljmp
mov
xor
sbb
xor
nop
aaa
aaa
jecxz
std
mov
dec
add
in
into
xlat
jmp
pushl
mov
pop
faddp
cs
lds
pop
mov
xchg
push
shlb
sbb
inc
testl
dec
xchg
loope
sbb
or
mov
adcb
sti
xchg
pop
sub
into
inc
imul
pushf
pop
imul
out
sbb
shll
cmpsl
mov
cvtps2pi
push
test
or
jno
cmp
gs
mov
mov
int
arpl
push
inc
in
xlat
xchg
xor
dec
nop
adc
inc
jo
popf
push
jae
or
mov
sub
aam
rorb
std
jae
es
scas
xor
cmp
clc
or
subb
mov
push
orl
xor
and
sbbl
cli
mov
cmp
dec
aaa
fwait
cmp
adc
and
aam
mulb
mov
pop
enter
test
or
sub
or
add
daa
adc
and
imul
ljmp
pop
das
jecxz
cmp
mov
sub
inc
push
xchg
sub
pop
jge
cmp
jne
stos
in
std
mov
daa
sahf
aad
dec
mov
sti
rcl
jp
lds
inc
ficomps
inc
inc
mov
adc
lea
xlat
popa
enter
sub
xchg
cmp
or
fisttpl
loopne
lds
pop
mov
in
arpl
push
mov
sbb
arpl
imulb
lock
sti
rolb
inc
aad
cmp
jge
adc
xchg
mov
cwtl
std
pop
aas
mov
xor
sbb
xchg
lods
or
cld
clc
in
inc
out
das
push
dec
pop
adc
push
jne
test
push
cmp
stos
aad
filds
shll
cmc
add
addb
cld
xchg
cltd
dec
push
js
stos
mov
adc
aad
push
dec
and
in
xor
test
scas
jno
in
outsb
enter
je
xor
add
jbe
cmpl
xor
je
sbb
and
scas
adc
xchg
dec
scas
add
inc
xchg
add
mov
cmpsl
dec
add
loope
add
and
or
aaa
out
cmp
rolb
jno
xor
popl
jmp
ss
xor
push
push
test
frstpm(287
mov
mov
jmp
inc
and
scas
out
add
push
lret
xchg
std
cmpsb
bound
cmp
adc
int3
movsl
cmp
add
mull
int
mov
mov
inc
ss
aad
addl
jo
sbb
mov
rcl
ljmp
cmp
pop
inc
ds
xor
rolb
dec
mov
out
test
mov
sbb
pop
repnz
jle,pt
push
jo
push
cmp
scas
pop
outsl
lds
mov
inc
inc
xchg
pop
and
xchg
jbe
hlt
icebp
pop
mov
mov
inc
lret
xchg
cmc
fisubl
sahf
dec
inc
add
or
adc
jg
push
mov
popa
imul
repnz
cmp
inc
xchg
mov
adc
adc
adc
cmp
in
lret
xor
pop
sub
ljmp
int
add
lock
mov
ficoms
mov
clc
aas
xchg
pop
lds
subb
push
ret
xchg
push
xor
mov
rorl
aam
lahf
sbb
stos
and
and
inc
stos
fnstenv
mov
jb
out
add
scas
pop
xor
cld
jb
push
dec
rcl
testl
mov
sbb
add
xchg
fldcw
cwtl
sbb
add
std
pop
out
push
xchg
fldl
out
dec
fsubl
mov
hlt
cmp
lds
sub
xor
fldenv
jmp
fsubrs
xor
sub
mov
xchg
jg
mov
inc
shlw
outsb
mov
push
dec
stos
cmp
ret
push
ljmp
inc
test
sub
jnp
mov
loope
out
jecxz
pop
gs
sbb
enter
sbb
xchg
into
sbbb
cmp
scas
cwtl
dec
hlt
xor
push
jbe
pop
push
xchg
push
xchg
ljmp
xor
pop
imul
popa
jge
daa
mov
push
add
mov
aaa
inc
mov
fiadds
cwtl
mov
jp
mov
sbb
xor
sub
dec
adc
sbb
add
dec
xchg
std
xor
pop
incb
mov
loope
jnp
mov
decl
add
sub
dec
subl
leave
xchg
sub
and
and
sbb
pop
sub
shll
inc
frstor
stos
incl
nop
or
and
dec
and
inc
push
ffreep
sahf
sbb
adc
cmp
test
and
stos
cmc
stc
xchg
xchg
inc
dec
cltd
jno
lret
lods
mov
dec
pop
scas
std
fsubl
jbe
push
add
mov
pop
inc
fsubrs
or
shr
jmp
adc
cmp
imul
mov
aam
cmp
gs
mov
push
jmp
inc
xchg
jl
insb
ret
and
push
sbbb
ljmp
push
jns
js
dec
inc
roll
sub
add
add
lock
lahf
pop
mov
or
imul
cmp
enter
mov
jne
mov
lret
push
mov
in
dec
shr
pushf
dec
dec
into
mov
add
sbb
jl
stos
daa
cmp
into
jge
or
cmp
cmpsl
fbld
mov
pop
sbb
sub
mov
out
jge
clc
xor
jmp
push
arpl
cmc
and
push
int
outsb
adc
push
fiadds
push
out
popa
add
pop
aas
push
mov
addr16
in
mov
nop
lret
xchg
imul
jbe
dec
inc
xchg
data16
mov
lods
test
daa
xor
or
xchg
nop
jle
sbb
lret
outsl
mov
pop
outsl
inc
cli
jo
adc
xor
push
mov
out
iret
mov
cmp
test
testb
ljmp
outsb
mov
fdivs
test
or
mov
imul
fs
out
or
fxch
cli
mov
dec
pop
cmp
adc
cmp
inc
mov
mov
mov
pusha
aaa
add
mov
xchg
sahf
fld
loope
dec
in
mov
in
sbb
dec
outsb
lds
test
jae
in
daa
insl
cmc
insl
lcall
outsl
dec
add
inc
lods
sbb
fnstsw
fisubrl
sub
clc
mov
and
cmp
stc
cld
fdivrl
in
loop
popf
les
shl
xchg
cwtl
dec
cmc
inc
xor
test
push
hlt
cld
imul
lea
mov
ror
add
popf
dec
adcl
cmp
xor
imul
mov
popf
repz
jecxz
push
lret
pop
pop
push
repz
cli
and
xchg
jp
lret
and
xchg
cs
xchg
add
dec
loopne
lret
call
ljmp
std
insl
scas
out
cli
fyl2xp1
push
stos
pop
sub
xchg
jo
adc
lahf
xchg
mov
enter
test
fs
dec
xchg
mov
insl
dec
adc
xorb
int3
testl
fnsetpm(287
jno
push
sbb
dec
cli
xor
xor
dec
jb
cmp
push
jmp
push
out
push
dec
mov
mov
test
test
adcl
mov
xor
mov
rcll
adc
mov
cmp
xchg
out
test
and
leave
lods
pop
xor
dec
and
std
jecxz
in
lds
test
jo
lds
repnz
test
or
sub
or
or
loopne
xor
mov
add
hlt
jl
xor
xchg
stc
xchg
mov
int3
pop
and
out
shlb
rol
or
es
mov
popa
mov
mov
inc
inc
std
clc
insl
adc
imul
aad
add
je
dec
sarb
sti
lea
mov
in
adc
std
inc
in
ret
aad
xchg
sub
pop
in
mov
inc
sub
xlat
clc
ret
ss
sti
dec
mov
out
stc
js
mov
clc
mov
lcall
movsl
push
pop
addps
adc
xor
jg
cmpsb
je
cmp
or
push
add
and
enter
outsb
cltd
add
and
sbb
push
test
mov
cmp
or
popa
rcrl
cmpsl
xor
outsl
or
mov
mov
int3
xchg
lods
mov
and
adc
sub
jae
mov
fiaddl
mov
jge
outsl
icebp
xchg
rclb
push
out
les
xchg
iret
scas
aad
lock
daa
xchg
ret
cwtl
push
jne
jne
xorb
lods
xchg
push
ucomiss
daa
add
aam
lret
xchg
rorl
test
xchg
mov
negb
stc
push
ret
roll
or
dec
cld
mov
mov
roll
ja
ljmp
pop
xchg
mov
add
jg
sbb
in
and
inc
ror
movsb
push
insb
scas
bound
jbe
out
stos
insb
sbb
push
nop
adc
add
ljmp
dec
mov
out
dec
fld1
or
cmp
jecxz
test
jne
cmp
pop
lods
pushf
std
iret
pusha
mov
leave
vmovntpd
scas
and
inc
pop
out
jg
movsl
and
in
and
jno
jge
cmp
xor
fmuls
out
fisttps
mov
or
cmpsl
and
stos
and
or
in
cmpl
mov
negl
pop
sti
fsts
out
cmpsl
and
lock
in
xchg
dec
shlb
xor
icebp
int
xchg
push
dec
loopne
loopne
mov
inc
pop
sbb
inc
xchg
shl
shll
mov
or
enter
mov
inc
cmp
outsb
enter
inc
fnstsw
cmp
or
pusha
pop
fisubs
add
enter
fs
aas
add
add
sub
jno
jae
idivl
pop
popf
out
jbe
xchg
jnp
pushf
sbb
popa
mov
aam
or
adcb
repnz
out
sbb
out
mov
or
push
inc
shrb
inc
push
rorl
scas
push
cmp
orl
in
stos
push
or
push
mov
imul
and
out
adc
push
or
xchg
data16
bound
es
popa
outsb
test
cmp
ljmp
or
jl
out
sub
or
cwtl
push
and
rcll
dec
push
jo
movsl
xor
fistl
test
mov
push
fiaddl
dec
sar
clc
stc
mov
cli
jl
mov
xchg
push
aaa
pop
jge
das
lods
out
in
or
iret
clc
pop
jbe
test
sti
cmpb
sub
sub
mov
cwtl
popa
xlat
comiss
xor
out
imul
loope
push
mov
push
test
mov
cli
nop
adc
dec
int3
lea
test
rol
pop
fs
pushf
sti
lret
and
inc
out
sbb
insl
rolb
mov
jle
xchg
mov
jb
push
adc
and
das
insl
mov
sahf
sahf
pop
test
mov
popaw
inc
daa
addl
and
ljmp
dec
arpl
insl
sub
lea
adcl
shlb
nop
lcall
add
pop
jl
sahf
fnstenv
jno
lods
sub
andl
xchg
jle
adc
cwtl
cli
jne
sub
add
sahf
test
xor
mov
orl
push
jle
xchg
out
rolb
mov
adc
insb
jne,pn
sbb
fisubs
mov
cmp
or
in
test
loopne
sub
cmp
out
clc
test
and
inc
pop
in
js
or
pushf
sbb
push
xchg
mov
pop
outsb
arpl
jl
pop
stc
lret
push
dec
mov
aad
pusha
aad
repnz
iret
push
push
push
ds
wbinvd
jns
or
fildll
mov
std
pop
add
int
sahf
fs
in
lret
dec
push
xchg
cmpsl
mov
push
loope
mov
sbb
pop
cs
xchg
pop
ret
pop
pop
inc
movsl
jmp
or
hlt
cld
mov
mov
or
mov
rcl
jmp
pop
fisubrl
push
mov
sub
data16
divb
mov
push
mov
jmp
jbe
inc
outsb
adc
xchg
rorb
push
mov
pop
mov
iret
lods
push
popf
sbb
paddd
xchg
pop
or
lods
call
fcmovnbe
in
sbb
inc
cli
lret
xor
mov
adc
imul
push
xor
push
xor
and
movsl
xor
data16
addr16
jb
push
ret
cmc
dec
pushf
jno
mov
shll
dec
aad
cmp
ljmp
mov
dec
subl
push
dec
inc
mov
sub
and
push
or
mov
xor
dec
jo
push
arpl
mov
fsts
leave
dec
cli
lret
or
int
outsl
or
pusha
xchg
iret
jbe
sbb
sub
push
xor
mov
idiv
je
inc
loopne
leave
icebp
xchg
jne
sub
dec
mov
ja
divb
outsb
insb
cli
push
je
repnz
lds
add
cmpsl
fucomip
loope
jns
in
fwait
gs
loopne
sbb
insl
pop
scas
int3
int3
aad
xor
mov
iret
rorb
jbe
faddl
add
xchg
ret
dec
xlat
movsl
cmp
cli
or
jecxz
dec
dec
lods
je
aas
inc
dec
push
pop
mov
pop
mov
orl
mov
pop
rcrb
and
inc
xor
jg
cltd
test
mov
jo
push
outsb
push
mov
push
pop
sbb
xchg
xchg
jno
and
mov
sub
fwait
jae
xor
ret
out
adc
inc
xor
ss
imul
push
out
subb
in
in
loopne
mov
inc
out
sub
xor
sub
add
cmp
fistpll
movsl
and
in
popf
lahf
push
mov
jle
inc
js
imul
imulb
adc
imul
and
in
jp
xlat
out
cwtl
in
cli
popf
jmp
jnp
aas
out
jmp
rolb
iret
jp
aam
xor
movsl
pop
mov
test
movsb
cmpl
jae
or
push
rorb
adc
push
sbb
pop
aad
insl
xor
pop
mov
xor
jle
popa
pop
lods
mov
xor
and
xchg
jmp
sbb
insl
rcl
pop
or
push
out
dec
jg
mov
shrl
fstps
push
push
push
ss
rol
and
std
subb
dec
jg
stos
flds
fcmovnu
shrd
sahf
enter
dec
adc
out
icebp
aas
or
xlat
cmpl
fidivl
int3
xchg
ljmp
int
inc
add
in
mov
mov
test
xchg
sti
mov
imul
xchg
fidivrl
stos
pusha
cld
out
jbe
add
test
jo
es
fistpll
call
adc
push
mov
ljmp
cmp
adc
mov
sbb
dec
fdivrs
test
jle
xlat
std
mov
xchg
lods
int3
xor
cmpsl
sbb
clc
lret
sarb
push
pop
push
push
icebp
std
bound
scas
pop
enter
ret
or
dec
push
push
jnp
adc
cmc
sub
imul
cwtl
xchg
lods
fcomps
cwtl
fisubs
das
inc
loope
mov
fwait
outsb
mov
scas
cli
out
mov
add
lret
mov
movsl
insl
jno
nop
jge
jl
mov
dec
out
pop
aad
es
mov
mov
mov
js
push
mov
add
lret
test
mov
xchg
imulb
mov
ficoml
pop
clc
shrb
sub
aas
xchg
cmp
sub
fisttps
and
fwait
cmp
mov
test
jecxz
push
push
fs
call
xchg
push
jmp
lret
int
mov
pop
enter
lahf
das
shlb
jo,pn
imul
mov
cmp
in
lcall
lcall
xchg
stos
fidivl
dec
into
inc
fistl
jmp
xor
or
add
push
imul
mov
pop
cmp
aaa
sbbl
arpl
test
insb
mov
test
dec
dec
xchg
push
clc
fdivl
aaa
fbld
jg
imul
pop
add
sub
ja
arpl
shld
dec
mov
mov
push
add
xor
pop
add
dec
jo
xchg
xor
push
jl
jo
lret
cmp
iret
out
lods
jae
shlb
jmp
lret
mov
add
push
addr16
inc
pop
es
stos
testl
pusha
cmc
sbb
push
push
mov
flds
jle
cltd
stos
push
into
mov
xor
sub
ljmp
and
in
pop
adc
hlt
pop
pop
mov
adc
inc
aam
adc
mov
cmp
fisubrl
pop
cmp
repnz
and
in
mov
sbb
in
xchg
add
roll
dec
mov
in
sub
iret
subl
cmpsb
sbb
adc
xchg
lds
jg
loopne
or
xchg
pop
jecxz
mov
jp
mov
nop
mov
lods
sti
cltd
int
outsl
cmp
stos
cwtl
mov
fmuls
lcall
or
imul
inc
dec
jecxz
rol
push
sti
xor
fwait
out
pop
int3
inc
mov
jmp
hlt
adc
lcall
scas
jb
adc
mov
ja
jne
inc
test
inc
mov
mov
bound
or
movsl
pop
inc
daa
mov
pop
push
cld
ljmp
je
pop
xor
cmpsl
aad
fmuls
and
test
mov
pop
cltd
pop
cmpsl
lea
mov
sub
jbe
lds
cmp
or
les
inc
push
push
icebp
lahf
sub
test
jecxz
jmp
in
pushf
mov
daa
xlat
push
shlb
mov
mov
push
ret
ljmp
sahf
lret
cmc
add
or
and
test
pop
push
jb
xor
cltd
sub
scas
lods
lock
and
push
out
xchg
sbb
add
lock
sbbl
notb
push
cmp
lahf
push
sub
inc
dec
js
or
insb
jle
stc
into
stc
sub
sub
sbbl
dec
dec
ret
cmp
push
int
jg
cmp
jmp
add
xlat
inc
jne
jns,pn
inc
sbb
pop
xchg
mov
sbb
enter
cmpsb
sub
inc
scas
sub
jmp
mov
and
dec
sub
mov
ljmp
pmullw
adcb
push
adc
loope
mov
and
ja
fdecstp
xor
sahf
in
leave
movsb
testl
push
inc
inc
adc
cld
icebp
xor
adcl
test
cmp
test
loop
std
jbe
or
dec
cmp
jp
sub
mov
adc
shrb
push
popa
rcrb
xor
outsl
fadds
es
out
aaa
dec
push
lods
add
rolb
shlb
jno
lods
stc
mov
jbe
jnp
stos
xchg
lods
jns
add
or
jp
or
rolb
sub
push
pop
sbb
cmpsl
or
or
sbb
pop
jnp
lret
sub
fisubl
xchg
push
jp
jge
mov
mov
push
xor
cld
cmp
aaa
and
xchg
popf
dec
jns
ljmp
jecxz
xor
out
cmp
ljmp
mov
and
loop
in
cmp
outsl
pop
add
add
inc
add
and
xchg
fmul
mov
mov
jp
inc
mov
sti
pushf
cld
das
adc
dec
stos
cli
xor
popa
int3
movsb
pop
loop
sbb
call
push
jmp
fs
pop
das
xchg
xor
xor
mov
je
out
cmp
out
mov
adc
cmp
jnp
int
lcall
mov
loop
sbbb
adc
cmpb
jmp
test
dec
adc
mov
les
sahf
jnp
sbb
jle
push
cli
or
mov
pop
and
cmp
mov
xor
jno
or
pop
sub
test
mov
or
add
pop
cmp
dec
hlt
imul
cmpsb
and
in
mov
adc
push
jns
mov
xchg
out
cmp
mov
loope
jbe
push
jno
jecxz
ja
stos
inc
clc
mov
or
and
aad
aad
fcoms
jae
in
movsl
push
xchg
jb
sbb
jns
cltd
xor
xchg
out
lea
xor
gs
nop
push
dec
out
sbb
lret
pop
shlb
or
lea
gs
pop
cmp
inc
lods
dec
mov
mov
pop
cmpsb
inc
cmpl
nop
es
div
pop
mov
addb
fcom
int3
xchg
pop
pop
lahf
mov
xchg
sub
add
test
fimuls
push
dec
sub
cmp
fcomi
cltd
fstps
or
loop
jae
pusha
inc
xor
xor
cmp
xor
push
dec
cld
mov
dec
movb
push
insb
push
dec
xchg
push
xchg
imul
xor
cmp
in
jmp
jno
insl
lcall
clc
inc
sub
mov
iret
mov
sbb
addr16
jmp
push
sub
jg
lods
xor
mov
mov
xchg
sub
mov
jo
mov
in
mov
int
mov
push
ljmp
decl
xor
mov
rcrb
cmp
dec
mov
add
mov
cltd
in
stos
mov
sahf
or
jge
or
or
add
cmp
dec
mov
ljmp
adc
xchg
cltd
mov
cs
lcall
cmp
lcall
sti
insl
insb
or
in
pop
in
sub
rcr
xor
bound
shlb
hlt
jnp
sbb
sbb
or
cmp
pop
andb
pop
sar
mov
push
mov
in
inc
mov
push
or
in
adc
cmc
into
ss
xor
icebp
add
jl
ss
mov
insl
frndint
sub
mov
add
xor
es
mov
or
inc
shll
sahf
outsl
sbb
inc
mov
mov
leave
inc
pop
jo
mov
in
sbb
and
adc
outsb
mov
jge
dec
fwait
imull
push
in
xchg
mov
gs
push
aas
mov
sub
inc
lret
in
xor
jo
pop
mov
sbb
jnp
pusha
cmp
push
hlt
dec
idivl
dec
in
xchg
jnp
icebp
xchg
call
dec
test
lret
mov
mov
dec
aas
test
je
push
pop
pop
xor
ret
xlat
ds
mov
sbb
outsl
int
adc
xor
adc
lret
arpl
pusha
and
mov
dec
in
jge
cmp
ss
test
test
jl
psadbw
loopne
xchg
add
cmp
js
js
mov
jge
push
sti
fidivrs
loope
adc
xchg
and
stos
sub
movsb
daa
sbb
nop
xchg
cltd
xchg
adc
repz
js
fimuls
insb
ja
mov
js,pn
and
lock
mov
push
pop
xchg
stos
mov
lods
jg
insb
subl
dec
and
dec
xchg
xchg
sbb
lods
push
lock
jns
mov
ds
or
cmp
sub
jno
cmpb
les
fsincos
movsl
call
test
or
cmp
pop
dec
lock
push
js
sti
lcallw
ds
das
xchg
mov
lret
jnp
js
loopne
shll
pop
cmc
addl
mull
xor
sahf
push
mov
daa
dec
shll
imul
mov
rclb
aaa
push
jmp
push
sahf
xlat
jbe
sahf
mov
jnp
test
jge
xchg
negl
cmp
clc
inc
push
push
loopne
fistl
movsl
push
jbe
leave
sub
mov
mov
repz
loop
fxch
adc
cmpsb
mov
idivl
stc
subb
cmpsl
jnp
test
sbb
push
push
mov
test
jmp
push
mov
scas
sbb
xlat
or
lahf
in
gs
or
cmp
cltd
push
nop
jecxz
les
andb
or
or
mov
inc
mov
pop
imul
jno
ret
mov
jmp
movsb
cwtl
movsb
jmp
fiadds
pop
push
popa
pop
pop
adc
add
and
pushf
test
jg
mov
jmp
ja
cwtl
ret
mov
cmc
les
lcall
mov
cmpsb
push
mov
outsl
insb
out
cmpsb
fldenv
add
ss
and
sbb
push
jne
mov
loop
xchg
sarb
mov
xchg
insb
fwait
add
or
popa
out
data16
pusha
mov
mov
scas
bound
fidivrs
sarl
imul
xchg
fcompl
ja
push
sbb
mov
push
xchg
jo
xor
push
jbe
popf
mov
stc
add
loop
cmc
xlat
xor
inc
fxch
xlat
lret
sti
mov
push
repz
jbe
jge
dec
jne
jbe
ret
insl
in
imul
loope
ret
add
fs
popf
xor
fstpt
mov
test
dec
call
rorl
push
mov
xor
cmp
add
repnz
cmc
jae
sbb
out
movsl
mov
adc
xchg
xchg
mov
or
mov
xchg
sub
adc
cmc
xchg
lea
in
pop
sarb
adc
and
mov
push
or
daa
loope
dec
cmc
xchg
sbb
ret
push
jmp
lcall
jb
std
lahf
stc
in
fsubrl
jns
lods
pop
rcrl
or
mov
int
sar
cmp
test
imul
inc
adc
movsl
in
pop
inc
das
cmpsb
mov
test
xor
push
adc
adc
sub
pusha
jl
push
jp
pop
jmp
sahf
hlt
jae
fsts
jno
imul
jno
mov
push
idiv
rcrl
mov
xor
cmpsb
gs
fdivrs
nop
push
mov
sbbl
mov
and
lret
sub
jmp
mov
xor
or
mov
xlat
cwtl
movsb
adc
sbb
out
fnstenv
call
dec
jmp
outsb
sahf
sbb
packsswb
rcr
jnp,pt
outsb
dec
lahf
add
movb
xchg
add
pop
pop
fcmovne
fildll
xor
xorl
lret
sahf
out
sub
lret
shlb
loope
add
cwtl
cmpsl
mov
add
push
sub
xlat
popa
xchg
mov
xchg
inc
fimuls
pop
scas
lods
mov
aaa
int3
outsw
in
pop
lret
fdivrl
pop
movswl
into
mov
in
push
and
cmc
jbe
daa
push
stc
sahf
loope
add
push
jmp
sahf
cltd
sti
and
or
or
aas
jno
lock
pop
adc
call
in
pop
xor
or
lret
enter
dec
mov
aas
and
stos
cmpsl
in
mov
pop
add
shlb
stc
das
orl
call
aam
mov
insl
push
jg
gs
cmp
adc
shlb
mov
fs
pop
and
popa
ds
jmp
aad
or
sti
jle
in
enter
mov
or
fdiv
hlt
pop
adc
loop
test
movsb
or
adc
int
xchg
xchg
test
out
jmp
mov
sub
jb
jp
cmpsb
and
pop
lock
stos
enter
cmp
adc
jmp
mov
rorl
fisubl
movsb
mov
or
mov
cmp
xchg
es
insb
push
bound
dec
ljmp
inc
lret
sub
push
test
add
sub
dec
sub
xchg
mov
add
fisttpll
es
inc
subb
sti
adcl
fwait
outsb
bound
push
imul
dec
xor
sbb
add
test
pop
hlt
ret
cmc
cltd
les
adc
loopne
out
xor
fsubrl
jmp
ljmp
add
repnz
rorl
pusha
adc
repz
fadds
clc
mov
mov
lock
adc
add
push
repz
enter
stc
adc
nop
fsubrs
xchg
out
jno
cld
jmp
jecxz
mov
mov
imul
adc
push
cli
sub
imul
push
sahf
and
scas
sbb
hlt
rorl
and
mov
negb
mov
nop
mull
add
leave
push
ret
in
ret
lods
pop
mov
psrlq
scas
inc
cmp
or
fwait
sahf
dec
pop
shlb
jns
aad
popa
inc
jnp
xor
mov
mov
ja
js
xchg
fbld
push
dec
nop
or
xor
test
clc
inc
mov
ds
lahf
cmp
mov
and
lahf
mov
cwtl
andl
add
lds
push
xlat
xorl
add
nop
and
test
fs
inc
jns
shll
xchg
cmp
mov
xor
jae
aaa
scas
in
and
into
push
jp
ljmp
sarb
daa
adc
mov
and
mov
or
xchg
idivl
rcr
add
pop
mov
xchg
inc
jae
mov
xchg
pop
fsubrs
bound
sub
and
imul
sbb
gs
lods
push
or
aam
cmc
jnp
mov
dec
shrl
lds
mov
push
std
pusha
rcrb
ret
add
ljmp
sub
jb
sub
shll
pop
out
xor
cld
std
xor
in
lods
push
jmp
mov
in
inc
xchg
pop
insl
call
ja
je
pop
daa
push
dec
insb
sub
xchg
imul
lahf
sub
mov
inc
mov
mov
jnp
stc
mov
push
hlt
lret
cmpsl
mov
repz
repz
test
push
ljmp
data16
mov
dec
sbb
add
jmp
lret
xlat
or
lret
aas
sbb
mov
jno
popa
int3
aam
pusha
sarb
fdivr
aad
fcmovne
sub
xor
push
negb
pop
xor
pop
sbb
int
adc
test
daa
out
test
dec
sti
cmp
in
shll
lahf
inc
aam
mov
movsb
pop
arpl
or
mov
push
xor
pop
test
xor
pushf
sub
push
adc
lock
insl
imul
popf
dec
lods
and
mov
cmpsl
mov
dec
das
inc
popf
xorb
std
orb
cmp
dec
mov
sub
gs
push
insb
add
adc
sahf
dec
pop
daa
pushf
jmp
push
hlt
pop
ss
cmp
push
sbb
das
push
mov
pop
popf
shr
and
cmp
mov
xchg
mov
in
dec
leave
popf
xchg
mov
push
jno
cwtl
in
push
add
jne
add
jns
imul
cwtl
cs
shr
je
dec
xchg
loop
enter
jns
add
mov
sub
adc
and
fistl
sbb
rcll
daa
roll
negl
jns
jno
aaa
cmp
mov
jl
xchg
pop
out
arpl
jns
popf
sub
js
enter
fcmovne
gs
shlb
sbb
lods
sbb
in
outsb
subl
cmp
repnz
cmp
js
int
xor
mov
sbbb
int
dec
inc
jo
es
and
or
pop
xchg
iret
flds
jmp
andl
data16
mov
push
dec
jl
push
sub
or
out
andb
dec
ds
es
test
fwait
cld
sbb
dec
bound
or
adc
lods
ret
imul
mov
je
test
jnp
imul
sub
xor
insl
lcall
movsb
fcom
push
aaa
add
test
pop
rol
int3
inc
sarl
mov
push
dec
and
inc
aad
dec
jnp
xchg
cltd
insl
mov
fwait
jmp
mov
xchg
lret
stos
push
loop
in
in
lahf
fadd
jno
mov
fildl
fcoms
fsubr
das
je
movl
fadds
jg
repz
add
push
xor
jbe
cmp
mov
mov
or
outsl
add
pop
int
jbe
push
push
push
stos
jno
push
mov
popa
aas
xor
popf
inc
cltd
mov
daa
pop
rcr
nop
lock
jae
jl
inc
sbb
test
aaa
pop
sar
xor
inc
mov
dec
xor
int
inc
ret
cltd
mov
scas
cwtl
mov
dec
jecxz
mov
and
cmp
pop
pushf
push
repz
jmp
je
mov
cmpl
xchg
fists
xchg
test
stos
sub
test
pop
ss
pop
insl
dec
ss
fwait
cmp
lea
cmp
idivb
mov
pop
leave
fsts
add
test
ljmp
faddl
cltd
stc
aas
daa
and
sub
pop
inc
inc
lock
test
jmp
and
pop
std
mov
dec
repnz
xchg
and
mov
mov
or
and
leave
in
into
inc
push
xchg
and
cmp
pop
dec
jns
cmp
test
iret
mov
dec
inc
adc
push
mov
hlt
mov
mov
xor
sub
mov
fnsave
lret
mov
fisttps
and
rorb
out
push
mov
jl
push
sub
sub
sub
and
les
pop
pop
dec
ja
sub
mov
adc
sbb
stos
dec
xchg
pop
mov
and
aaa
test
or
xor
lods
ljmp
cld
and
xchg
inc
cmpsl
and
pop
pop
xchg
adc
loopne
jge
pop
cmc
sbb
movb
cltd
xlat
mov
pop
inc
fsub
fnstsw
dec
insb
jne
aad
hlt
jmp
mov
ljmp
dec
mov
rcll
jle
mov
shlb
sub
adc
aad
gs
push
xor
mov
or
mov
rcll
xchg
out
outsb
xor
stc
inc
lea
out
jge
pop
jbe
dec
das
inc
push
inc
xor
add
mov
push
sbb
jecxz
repz
and
push
cmp
imul
icebp
outsb
cwtl
and
scas
cmovb
jnp
dec
loop
pop
and
mov
and
mov
leave
xchg
push
andnps
xchg
imul
popf
xor
dec
ret
in
popa
stos
sub
xchg
aam
mov
dec
lods
mov
mov
sbb
clc
mov
push
xor
pop
cmp
add
push
lods
pop
jg
or
or
out
insb
xor
ja
cmp
sub
int
sbb
in
jmp
adc
push
or
pop
sbb
fwait
test
mov
stos
add
insl
imul
popa
cmc
popf
in
mov
jg
jge
andnps
sahf
dec
out
add
test
or
sub
adc
sub
or
out
jbe
shll
mov
mov
mul
add
fistpll
imul
testb
jp
fisttps
add
lods
int
out
orb
adc
icebp
mov
jp
push
xor
jnp
insl
sbb
cld
jecxz
pop
sub
inc
pop
lret
xchg
int
shlb
out
dec
mov
adc
add
icebp
push
imul
fsubp
fmuls
pop
imul
push
xchg
mov
imul
cmpsl
push
pop
or
sub
aas
jne
incb
decb
adc
dec
popa
imul
push
push
xor
andl
lahf
stc
scas
fstl
push
adc
dec
in
jae
mov
xchg
aas
inc
pop
fstl
test
or
orl
jmp
iret
hlt
pop
std
push
mov
or
popf
cltd
enter
insb
in
int3
fimuls
js
xchg
ss
mov
xchg
in
push
xchg
jmp
stos
jmp
jg
jno
mov
adc
sahf
inc
pop
and
les
cmpsb
aaa
dec
mov
test
mov
aam
sarw
mov
mov
jle
sarl
lea
add
arpl
add
adc
and
loop
or
mov
insl
sbb
mov
jo
mov
jnp
or
adc
xchg
pop
aaa
add
cwtl
dec
shrl
lret
xchg
mov
push
push
and
stos
js
jae
fs
fwait
pop
insl
int
gs
outsb
push
jmp
iret
loop
pop
xchg
pop
dec
mov
mov
sbb
pushf
push
shlb
pusha
leave
fucomp
adc
push
cld
ss
inc
repnz
inc
xchg
mov
in
test
sbb
cwtl
lock
fcoml
pop
dec
loopne
pop
scas
popa
mov
mov
cmpsb
sti
out
add
int
cmp
xor
mov
arpl
test
in
fisubrs
clc
pop
sarb
paddusw
out
mov
jo
pop
mov
jae
je
rclb
push
pop
cmp
andl
xor
sub
je
xchg
pop
add
daa
or
jecxz
inc
stos
cwtl
xchg
lds
mov
outsl
xor
in
cs
scas
lods
cmp
xor
adc
arpl
lret
or
cmp
outsl
push
inc
in
pop
dec
out
out
mov
mov
or
mov
dec
lods
push
lret
adc
push
lret
push
cld
inc
ret
pop
jbe
xor
stos
adc
and
mov
ljmp
fldl
mov
pop
out
arpl
xchg
or
jecxz
add
stos
test
mov
fmul
jnp
jmp
mov
push
dec
mov
cmpsb
pop
pop
lds
sti
cli
pop
jmp
stos
fdiv
orl
xchg
jo
inc
int
fnsave
inc
loopne
or
test
push
lret
sbb
pop
xchg
mov
adc
popf
or
cmp
in
data16
pop
pusha
push
testl
mov
cmc
in
ror
dec
jg
adcb
imul
dec
mov
xchg
in
sub
sub
imul
jg
mov
scas
xor
scas
fbld
rorl
ja
inc
or
inc
nop
xorl
push
lret
sti
daa
loope
imul
out
imul
xlat
and
out
mov
mov
dec
adc
insb
psubw
jp
inc
pushf
sbb
mov
mov
mov
ret
inc
sbb
lret
inc
subb
cmp
mov
arpl
jge
mov
adc
push
pop
push
and
imul
or
aam
imul
jl
mov
push
and
add
inc
cs
push
sti
add
fcomps
sub
stos
das
xchg
divb
mov
addr16
dec
das
idivb
inc
arpl
mov
jmp
pop
loope
adc
pop
push
aad
pop
fwait
test
scas
mov
adc
sahf
das
ds
adc
mov
lock
xchg
mov
scas
mov
jl
imul
es
mov
inc
xor
iret
pop
jge
xchg
lds
jo
mov
cs
in
mov
dec
xchg
ja
jae
pop
cmp
dec
adc
scas
int
mov
dec
sti
dec
out
enter
insl
inc
mov
lods
inc
cld
nop
jnp
into
jl
xrstor
hlt
xchg
arpl
push
rcll
nop
test
xor
rolb
test
mov
jp
push
pop
mov
mov
stos
faddl
mov
dec
jbe
jmp
icebp
mov
ret
mov
roll
scas
cmp
jno
mov
leave
adc
push
loop
sbbb
shll
repnz
jnp
ja
jmp
dec
mov
pop
icebp
cltd
mov
jb
pop
mov
sub
dec
mov
lds
ljmp
push
mov
xchg
and
fsubp
loop
popf
mov
cmp
xchg
cmp
and
int
xchg
test
enter
jmp
dec
and
mov
cmp
push
push
sub
push
subb
cmp
pop
loop
int3
shll
out
pop
cmc
mov
sbb
xchg
xchg
push
pop
pushf
pop
cs
sub
jmp
leave
xlat
inc
jecxz
or
jp
sbb
stos
jb
inc
insl
inc
mov
out
cmc
adc
adc
stos
ror
lods
xchg
out
or
mov
cmpsb
into
movsb
stc
dec
test
data16
lea
cltd
gs
icebp
xchg
testl
pop
ss
xchg
lcall
bound
pop
inc
and
adc
pop
lds
jge
cmc
out
cmp
cwtl
and
hlt
mov
inc
mov
mov
fsts
shrl
cmp
test
cmp
out
out
mov
in
fadds
fidivrl
push
lcall
mov
mov
dec
push
adc
mov
add
shlb
add
fs
mov
dec
xchg
sbb
mov
dec
lret
adc
imul
push
inc
icebp
lahf
int3
je
inc
and
mov
in
push
test
and
jnp
aaa
cmpl
jge
mov
mov
mov
sahf
push
dec
popl
mov
lods
fstl
and
jp
pop
lcall
pop
test
sub
data16
sbb
test
or
mov
inc
cmp
enter
inc
int3
sbb
push
inc
pop
adc
dec
cmpsl
jno
jns
xchg
in
adc
cmp
test
and
xchg
mov
or
jle
or
mov
lahf
rcrb
mov
inc
imul
lahf
enter
sub
outsb
mov
and
cmp
flds
mov
inc
add
scas
gs
inc
push
cmpsb
adc
push
gs
mov
hlt
stos
inc
lret
popf
or
xlat
bound
loope
int3
push
mov
pop
fiaddl
cmp
or
mov
int3
jae
out
sti
inc
jl
jecxz
sbb
lods
add
sub
cwtl
das
push
mov
cltd
push
mov
enter
sub
sub
in
and
dec
jg
mov
insb
arpl
or
pusha
pop
adc
arpl
jecxz
jge
testb
lock
shrb
rorb
or
push
leave
fiadds
or
popf
scas
fidivs
push
aas
test
test
xchg
std
addr16
in
inc
or
jno
jl
insl
sub
popf
push
sub
sub
dec
aaa
sahf
rcrb
iret
mov
jmp
push
cmp
andl
cs
push
or
xor
jnp
push
cmp
stos
mov
stos
sbb
mov
mov
sub
mov
pop
pop
das
arpl
xchg
in
jo
mov
mov
inc
and
sbb
xor
lahf
pop
jle
sub
sbb
test
jno
fisubrs
jge
mov
dec
inc
fistl
lret
decl
cmp
das
gs
inc
xor
mov
stos
cmc
sbb
xchg
cmp
dec
add
les
popf
inc
lods
rolb
gs
pop
mov
pop
aam
fmulp
dec
add
test
call
sbb
mov
mov
add
pop
sub
cmp
add
stos
and
inc
aam
aad
mov
or
push
inc
out
mov
cmp
xor
outsb
gs
out
or
dec
and
stc
aad
add
mov
imul
popa
rol
dec
xor
flds
jmp
sbb
pop
xor
sar
dec
clc
cld
les
inc
inc
loopne
mov
xchg
outsl
scas
jge
sbb
xchg
sub
ss
lock
test
mov
daa
jns
pop
mov
adcb
ds
bound
xchg
loope
stos
in
cmp
enter
icebp
daa
ficompl
scas
push
out
out
aam
mov
adc
push
xchg
push
scas
cmp
repz
dec
out
aad
xor
arpl
cmpsl
jecxz
mov
fnsave
cltd
nop
fistl
jns
dec
cmc
lods
sahf
add
push
and
and
aam
dec
test
mov
scas
xlat
mov
movsb
and
and
pop
pushl
frstor
xchg
xor
jecxz
mov
les
jg
and
inc
out
jecxz
push
mov
mov
mov
lds
aam
lcall
dec
dec
cmpxchg
fisubrl
xchg
cltd
push
sbb
inc
shlb
or
out
lahf
repnz
orb
cmp
fidivrs
or
add
das
shrb
notb
arpl
hlt
pop
ret
cli
decb
inc
xor
or
mov
add
jns
popa
mov
in
sbb
clc
and
stc
push
pop
push
cmc
in
jecxz
flds
insl
icebp
jno
stos
sahf
sbb
xor
in
loopne
cmp
das
jbe
popa
int
xor
lds
dec
xor
mov
pop
jno
rcr
push
push
inc
clc
sub
fists
lret
mov
add
push
fadd
cmpsl
lds
pop
jmp
dec
nop
xor
push
rclb
loop
mov
mov
clc
into
lahf
fwait
mov
xor
in
jl
into
fadds
inc
cmpsl
iret
pop
arpl
andb
nop
incl
inc
dec
flds
push
xor
clc
pop
clc
loop
xchg
fdivrp
loope
mov
push
pop
inc
loop
js
aam
mov
and
aam
jmp
cmp
cmp
imul
pop
scas
cli
into
mov
test
pop
adc
pop
mov
lds
jno
sbb
mov
push
cld
push
cltd
adc
jle
aad
push
orb
fwait
xor
std
pop
pop
out
loopne
xchg
xor
pop
mov
inc
inc
loop
aaa
pop
cmp
mov
test
test
out
xchg
pushf
imul
pop
popa
fwait
cli
cmp
fimuls
outsb
jge
sub
adc
repz
sub
jmp
hlt
adc
les
outsb
and
adc
cmp
clc
imul
out
jnp
xchg
cmpsl
or
cmpsb
push
arpl
mov
cmc
mov
mov
adc
xchg
arpl
mov
in
pop
and
push
cli
ljmp
inc
orb
jecxz
loopne
inc
sub
arpl
push
inc
add
sbb
mov
add
and
lea
inc
adc
ret
push
addb
aam
or
xchg
lods
or
sar
fnstcw
les
and
jb
icebp
mov
cmp
jns
andps
sbb
add
lock
ret
mov
jns
cmp
into
mov
xchg
jb
icebp
mov
loopne
pusha
int3
movsb
fimuls
into
add
jae
faddl
add
scas
jg
lds
mov
cmc
mov
sbb
ret
lret
xor
pop
pop
popa
mov
xchg
movsl
jns
xchg
ret
popa
cld
rcl
fsubr
inc
repz
cwtl
fstl
dec
adc
jne
cmp
shll
mov
mov
das
jns
mov
cmp
stos
push
mov
mov
jns
inc
daa
add
sahf
outsl
js
repnz
and
lea
push
jle
adc
insb
mov
add
jne
xchg
aad
popf
mov
mov
jg
lret
xorb
sub
pusha
stos
inc
cmp
test
je
xchg
pop
into
aam
rorb
mov
xchg
add
fistl
pop
or
pop
test
imul
cmp
enter
xchg
fs
test
movsb
leave
xor
jge
jle
jne,pt
pop
int
fst
stos
xorb
lahf
test
sub
dec
add
xor
jecxz
test
pusha
xchg
pop
dec
fwait
sbb
repz
sub
loopne
jne
clc
out
push
xchg
scas
pushf
nop
in
shl
out
cmp
and
lods
mov
jecxz
sub
shrd
outsb
lods
xchg
ds
push
push
or
pop
inc
rcrb
add
mov
xchg
cld
sub
dec
leave
push
out
out
daa
pop
inc
ret
dec
addr16
addr16
xor
cmc
sbb
push
aas
xlat
arpl
jo
aaa
sub
shr
or
adc
sbb
incl
ret
jmp
sbb
in
mov
mov
hlt
xchg
sub
push
mov
ret
adc
fs
mov
or
call
cmp
jo
lcall
cltd
dec
cmp
inc
cmp
pop
pop
jbe
ffree
jbe
fstp
pop
dec
xlat
push
rcl
mov
pop
in
adc
xlat
push
popf
shrl
inc
fwait
and
xchg
in
call
test
pop
pop
imul
iret
lock
sti
mov
push
xor
lahf
add
stc
es
lret
xchg
cwtl
in
adc
ss
push
jnp
or
add
ja
cmpsl
cmp
ss
pop
rcrl
xchg
scas
sbb
xor
scas
fldenv
nop
sub
mov
ffreep
in
das
notl
adcb
pushf
cltd
sbb
inc
dec
cmp
push
dec
mov
test
jne
jg
adc
lcall
jp
add
pop
mov
out
testl
sbb
xchg
aaa
xchg
int3
pop
pop
jbe
push
and
inc
movsl
sub
rcr
sbb
mov
ds
pusha
push
cmpsl
push
in
pop
test
repnz
jg
sub
and
or
jmp
pop
lcall
push
test
test
dec
das
cld
in
cmp
push
daa
cmpb
cmpsb
popa
xor
sbb
mov
cmp
cmp
in
imul
and
and
sbb
add
dec
testl
mov
mov
mov
fdivrl
ss
push
push
in
dec
xor
mov
daa
in
xor
push
es
jmp
xor
or
push
push
lahf
pop
lret
adc
les
xor
shll
cmp
rcrb
pop
repz
nop
xchg
cmc
push
add
sub
call
adc
pop
adc
sub
push
sahf
mov
cs
adc
call
imul
mov
and
mov
lret
adc
or
int
or
sti
and
or
pop
mov
jp
fisubs
rclb
pushf
gs
xor
movsl
mov
stos
dec
mov
popa
insb
xchg
adcl
mov
adc
mov
stos
pop
scas
adc
aam
fsts
push
and
or
push
xchg
xor
out
jge
push
addr16
shrb
mov
lea
fs
cld
dec
push
cli
xchg
dec
pop
mov
iret
sbb
rcrl
mov
lock
cli
movsb
jns
fwait
pop
in
leave
add
and
jmp
mov
sub
ds
push
dec
call
push
ror
pop
cmpsb
pushf
dec
push
imul
mov
push
jle
xor
movsl
inc
sahf
dec
sbb
pop
js
mov
pop
or
pop
loope
nop
push
xor
adc
mov
into
bound
sbb
rol
lock
loop
push
rcrl
popf
int
shll
mov
cmp
jle
sub
jmp
sbb
pop
or
or
scas
jecxz
sti
sub
lahf
jp
jae
mov
stos
cmp
rorl
lea
xchg
scas
inc
mov
dec
mov
lds
adc
mov
xor
jle
push
xor
and
and
sub
rcll
clc
shrb
mov
xor
stos
imulb
je
cmp
mov
sub
sub
push
aad
xor
add
movsl
add
sysexit
push
mov
push
jb
aas
xor
fsubrs
xor
es
push
cmpsl
mov
clc
call
sub
in
inc
in
in
test
pop
sbb
cmpsb
fcomp
cmp
fimull
pushf
xor
outsb
adc
je
cmpl
jle
les
push
xchg
xlat
data16
repnz
pushf
aad
orl
data16
int3
sub
aas
sarb
js
cmp
fisubs
hlt
scas
gs
sbb
iret
sarl
mov
ss
daa
push
mov
xor
test
or
insb
negb
push
pop
jmp
cmpb
or
sbb
jae
arpl
test
or
pop
cli
popf
or
jge
adcl
into
or
jg
dec
hlt
or
ret
mov
in
lret
mov
sub
hlt
scas
push
cwtl
adc
cmpsb
lret
dec
dec
mov
and
and
and
mov
roll
mov
ljmp
aad
push
out
loopne
add
xor
repz
bound
sarl
mov
mov
add
mov
je
pusha
xor
cmp
popf
fsubrs
test
push
lods
xchg
enter
push
pop
inc
pop
cmp
add
aas
pop
imul
es
cmpsl
jb
adc
mov
jb
ds
xchg
inc
xor
lret
inc
and
test
test
add
jg
call
jno
dec
enter
out
or
xor
cmp
bound
insl
fcoms
mov
dec
mov
sub
js
inc
ficoms
xor
shr
aas
xor
fs
add
cld
inc
sub
lods
ret
jns
negb
negb
rcll
mov
mov
negb
aad
or
xchg
mov
cltd
or
movsl
pop
jbe
inc
adc
shll
jle
scas
ss
or
mov
repnz
hlt
inc
mov
cmpl
mov
mov
push
mov
negb
xor
push
mov
test
adc
cmp
pop
pop
mov
ja
sub
jno
sub
mov
out
mov
scas
pop
jo
cwtl
rcl
inc
dec
pop
icebp
in
cld
stos
push
dec
in
mov
xchg
jl
pushl
pop
add
pop
mov
adc
les
out
int
lods
push
add
shll
inc
repz
sbb
xor
or
push
mov
adc
adc
adc
dec
and
mov
and
add
jmp
fisubl
push
out
and
push
pushf
rcrb
das
xor
cmp
in
mov
cmp
cmp
cmp
mov
inc
ljmp
lods
cmp
in
dec
test
push
ja
sbbb
out
iret
or
aas
enter
fwait
call
in
out
fwait
cmpsl
scas
sbb
push
cmpsb
or
insb
popa
std
mov
cld
mov
dec
lock
cli
inc
sub
sahf
cmp
test
dec
ror
clc
aaa
lods
nop
cmp
in
mov
jae
mov
jp
lods
pop
and
lea
pop
adc
cld
hlt
or
and
push
xchg
aad
cwtl
lret
sub
or
push
xchg
mov
jo
push
mov
imul
pop
andl
sbb
mov
imul
dec
lcall
shrb
xor
xchg
cs
cmp
les
xor
push
fisttps
cli
mov
bound
imul
add
inc
std
xchg
loope
cmp
adc
and
and
icebp
ljmp
mov
cmpsb
jb
aas
mov
nop
cmp
cld
mov
iret
pusha
sub
lret
lret
xchg
sub
adc
rcrb
iret
mov
test
repnz
mov
test
nop
leave
out
mov
adc
jae
pop
cwtl
mov
push
pop
ret
jbe
dec
and
xor
call
add
pushf
jae
insb
sbb
out
lea
fdivs
jge
inc
repnz
or
mov
cmp
adc
jecxz
ja
adc
test
stc
dec
xchg
ficoml
ljmp
xchg
lds
and
mov
inc
dec
repz
lds
push
inc
ja
enter
push
sub
out
mov
out
popf
bound
adc
test
add
xchg
cld
xchg
pop
cmp
stos
cmp
push
pop
mov
push
push
jecxz
in
lea
sbb
jns
test
daa
xlat
mov
mov
insl
or
jne
or
cmc
imul
int3
subb
mov
pop
decb
shlb
pop
pop
push
pop
stos
mov
lcall
test
adc
bnd
mov
fwait
cmpsl
pop
mov
movl
inc
rclb
xchg
lcall
push
xchg
rorl
cmpsb
aas
pop
pop
rcll
push
mov
xor
iret
push
jg
ja
xchg
adc
out
imul
jne
test
adc
adc
stc
adc
add
mov
mov
jb
jo
data16
xlat
mov
add
call
int
out
inc
inc
cmc
bound
adc
mov
fdivl
or
push
or
movsb
jg
cmpsb
xchg
add
es
jge
rol
push
repnz
xchg
leave
xchg
or
imul
cmp
inc
mov
and
add
mov
leave
mov
sub
inc
push
scas
imul
add
cli
xchg
sub
push
and
mov
insb
cli
fistps
cmpsl
push
inc
lcall
inc
neg
int3
cltd
inc
jmp
pop
ret
mov
adc
sub
rorb
cmp
lret
mov
fdivl
scas
in
mov
jb
mov
inc
aad
scas
aas
neg
jecxz
jp
outsb
cltd
cwtl
adc
stos
xchg
jo
sbb
push
idivl
loope
and
jno
adc
in
repz
xor
inc
rcl
cmp
dec
pop
hlt
jg
popf
das
mov
rorl
mov
pop
fdivl
fimuls
int3
mov
popf
mov
inc
aaa
enter
repnz
cltd
fiadds
jmp
dec
clc
xchg
fldl
mov
mov
add
lcall
inc
dec
cmc
pop
jne
repz
mov
idiv
inc
jl
in
sbb
fnstenv
test
data16
ror
dec
jl
pop
jne
das
xchg
sbb
dec
jmp
fildll
je
adc
xlat
xchg
sbb
out
mov
clc
andl
iret
push
test
cmpsl
xchg
inc
mov
xorb
shr
cld
ret
inc
mov
and
repz
aas
mov
adc
unpcklps
sahf
movsb
xor
xor
dec
aad
and
imul
in
jmp
cwtl
in
pop
sub
cmp
mov
jp
imul
xor
push
cs
icebp
cltd
pop
xchg
rcl
js
fnstcw
leave
cltd
lret
dec
fisttpll
sub
stos
pop
movsl
pop
out
stos
and
add
nop
ljmp
mov
adc
sbb
mov
cltd
adc
xchg
sub
stos
lret
sti
addr16
mov
jmp
loop
xchg
and
lret
es
mov
stos
adc
fists
es
xor
cli
cmp
push
ficomps
repz
stos
out
and
sub
pop
or
or
mov
jmp
ja
cli
pop
in
daa
cmp
adc
add
bound
out
mov
adc
mov
cmp
mull
divl
xchg
mov
cli
mov
fstps
inc
and
iret
jg
jle
fadd
mov
loopne
cmpsb
loopne
xor
add
adc
or
call
cmp
dec
fiaddl
ficoms
or
inc
dec
es
cmp
into
mov
divb
cli
add
pop
jecxz
imul
sub
pop
mov
enter
jb
sti
iret
adcb
cmpsb
out
mov
xor
jnp
aam
or
xchg
mov
movsl
push
push
add
and
and
dec
xlat
cmpl
pop
and
testb
mov
pushf
scas
ficoml
in
mov
pop
je
inc
test
sbb
shlb
outsb
arpl
mov
lcall
sbb
pop
pop
push
xchg
outsb
mov
cmpb
mov
stos
js
sbb
jo
mov
in
pop
icebp
lods
dec
xchg
in
dec
add
ja
sbb
adc
jp
gs
push
stos
cmp
ffreep
cmpsb
add
push
shlb
pusha
nop
mov
insb
xchg
sbb
cmc
add
xchg
jno
cld
jns
jl
push
fstps
loope
pop
cmc
and
stos
mov
stc
mov
push
xchg
pop
adc
jp
sub
mov
fnstenv
mov
and
mov
mov
out
stc
xchg
repz
xchg
mov
aaa
outsl
ret
push
int3
test
movsl
xor
aas
mov
fadds
fcmovbe
pop
cmpsb
out
xchg
mov
dec
mov
inc
scas
test
fildll
adc
in
outsb
aad
push
pop
dec
sub
xor
push
inc
je
aad
push
xor
iret
mov
mov
mov
mov
test
push
xor
pop
cmp
xchg
xor
cwtl
loop
inc
add
cli
aam
das
aas
test
push
imul
femms
dec
ret
add
cs
adcb
or
pop
xor
inc
movsb
adc
cmp
scas
push
loopne
sarl
std
test
sbb
sbb
scas
out
mov
sbb
adc
cld
push
sbb
test
mov
loopne
lcall
fsubrl
rcl
ret
divb
scas
mov
jge
xlat
cmc
pop
add
cmp
aad
cmp
aaa
xchg
mov
mov
cs
xor
push
mov
push
aam
pop
out
cmc
jecxz
imulb
aam
jp
pop
fists
or
cmpl
mov
xchg
pusha
pop
adc
in
mov
pushf
fiaddl
mov
cmp
inc
es
ret
daa
cmpsb
sbb
push
int3
push
cmp
out
in
push
imul
sbb
or
aaa
mov
mov
xor
add
mov
xchg
or
int3
xchg
mov
sub
inc
inc
out
out
js
daa
mov
lcall
test
gs
pop
cmp
ja
add
adc
xor
mov
push
imul
xchg
xchg
clc
jnp
ret
f2xm1
and
ds
cmpsl
cmp
mov
push
xor
mov
and
mov
push
sub
cmpsb
jmp
cld
lea
add
cmp
js
jecxz
lret
sbb
fisubrl
subb
pop
xchg
fists
mov
std
fidivrs
jo
jne
das
dec
in
mov
mov
imul
push
aaa
mov
lock
xor
and
test
outsb
push
or
outsl
imul
test
mov
fdivrs
and
arpl
push
fisttpl
mov
mov
cltd
sub
pop
adc
adc
decb
popf
repz
in
fs
sbb
jg
adc
fwait
fwait
cld
dec
jb
mov
mov
aaa
or
push
icebp
ret
or
movl
je
shl
mov
push
popf
pusha
mov
outsb
mov
insb
jg
js
dec
mov
xor
rorl
movsb
out
std
adc
dec
push
mov
icebp
pop
mov
lods
pop
sbb
mov
cmpsl
ret
push
fsts
dec
repz
decb
cmp
cs
prefetch
or
inc
xchg
dec
jnp
mov
pop
lea
mov
outsl
hlt
add
pmovmskb
std
pop
dec
jnp,pt
sub
fildll
jns
xchg
les
aad
inc
inc
nop
mov
pop
sub
lods
cmp
xchg
cmp
push
fisubrl
cltd
insb
inc
lret
out
lock
mov
daa
mov
loopne
ljmp
cltd
ret
or
fidivrl
pop
aaa
aaa
sub
sbbb
repz
sub
adcl
cwtl
repnz
cmpb
nop
add
pop
add
mov
fsubrl
sub
jnp
inc
xchg
and
shll
pop
aas
addr16
out
xchg
push
sub
xlat
jmp
leave
xchg
inc
lcall
add
xchg
or
push
mov
ljmp
pushf
xchg
aad
in
cmc
int
mov
data16
data16
pop
adc
cltd
lcall
push
jl
push
sbb
adc
cmp
fimuls
mov
hlt
sti
in
scas
xchg
jle
notl
das
nop
lret
jecxz
dec
aas
popa
pushf
ret
popf
add
insb
in
sub
sbb
lods
das
xor
incb
mov
jg
dec
insb
cmp
repnz
mov
and
mov
sbb
ss
jno
add
or
mov
scas
push
ljmp
jne
mov
inc
js
cmp
mov
or
xchg
xchg
push
jns,pt
jl
ss
orb
dec
xor
mov
jno
sub
xchg
mov
lret
jb
inc
ds
imul
mulb
sub
jbe
xchg
pop
les
iret
movsl
and
sbb
mov
sbb
xor
scas
pop
cli
movsl
fistpll
rcr
cs
mov
clc
mov
xchg
or
sbb
pop
test
dec
add
mov
dec
sbb
cpuid
negb
mov
mov
jmp
aaa
daa
out
mov
loopne
out
cmp
pusha
cmpsl
sbb
cli
mov
xor
in
pop
out
xor
ds
hlt
unpckhps
lods
mov
jne
pop
jle
and
adc
push
push
cmc
jnp
jnp
mov
adc
inc
pushf
sbb
sub
mov
xor
movsb
add
push
xor
je
jl
and
add
add
jg
sbb
in
or
and
adcl
sti
loope
adc
jb
or
dec
loop
lds
ja
push
cld
xor
mov
test
xchg
jne
cmp
xor
adc
mov
dec
test
mov
fsubr
rolb
inc
jns
mov
mov
xor
cmp
push
and
inc
cltd
cli
sub
nopl
sbb
outsl
cs
stc
pop
jo
adc
scas
fs
jmp
cmp
push
cmp
cmc
stc
push
mov
dec
and
insl
loopne
idivl
lcall
push
call
mov
sti
repnz
push
pop
pop
jo
inc
jge
data16
cs
sbb
and
xchg
push
jno
mov
in
xchg
dec
inc
pop
or
addr16
out
test
push
out
inc
jns
inc
bound
push
int
inc
xchg
pop
sub
loope
js
mov
push
cld
scas
xchg
inc
fsts
lret
test
test
into
popf
xchg
jbe
pop
mov
in
mov
out
out
jmp
pop
jge
dec
sub
inc
pushf
leave
repnz
shrl
xchg
pop
jo
nop
call
dec
add
xor
mov
pop
movsb
pop
inc
xchg
scas
dec
cmpsl
std
pop
aaa
push
ja
mov
sub
xchg
inc
pushf
xor
sbb
cs
pop
rolb
jle
jb
repz
fcoms
cmp
inc
hlt
inc
leave
xchg
lret
cmp
adc
jne
pop
sbb
stos
and
and
fnop
pop
mov
xor
jmp
stos
or
mov
mov
fidivl
bound
repz
fcomps
cmp
dec
mov
movsl
sub
add
inc
mov
stc
push
and
and
out
pushf
lea
pop
cmp
pusha
gs
push
cmp
cmc
leave
pop
std
cmp
fcmovnu
mov
outsb
push
mov
and
ljmp
mov
or
das
mov
inc
shrb
ja
push
bound
mulb
sahf
fisttpl
mov
clc
insb
negl
notl
xchg
mov
rcrl
or
sbb
addr16
int3
sbb
jbe
xchg
cld
dec
jb
ss
cmpsl
push
push
lods
xor
push
fmulp
ficoml
cmpsb
mov
dec
test
pop
movsb
jmp
pop
fs
cmpsl
push
or
pop
jae
add
ss
pushf
ja
inc
mov
stos
xor
mov
or
mov
mov
inc
pop
fisttps
sarb
daa
jb
pop
addr16
jns
shrl
dec
loope
stos
repnz
mov
inc
rcll
arpl
insb
mov
mov
hlt
push
or
repnz
mov
push
adc
fs
sub
in
push
xchg
int3
jmp
dec
dec
add
je
insb
sub
sub
inc
add
pop
je
popf
adc
testl
sub
dec
lret
add
shrb
jg
cmp
ja
push
push
lahf
clc
cmp
dec
lret
push
cli
mov
pop
clc
xchg
fwait
adc
adc
je
sub
testb
xor
cld
jo
jno
push
ljmp
inc
cld
add
aam
mov
rcrb
xor
aad
inc
daa
lods
lock
mov
out
movsb
mov
inc
incl
fdivs
mov
nopl
pop
push
pop
dec
or
outsl
adc
inc
push
imul
sti
aad
sub
xor
add
or
push
jnp
out
jb
push
push
mov
mov
xor
add
cli
movsb
rcll
push
fisttps
mov
jp
dec
movsb
rcr
mov
jp
roll
repz
ret
inc
subb
sbb
insl
push
xor
push
mov
ret
movsb
dec
icebp
mov
imul
fdivrl
fnsave
push
fidivl
mov
xor
or
lret
cmp
out
adc
pop
pop
and
cwtl
adc
mov
or
idiv
adc
scas
add
xor
cmp
mov
ss
in
in
fdivrl
xchg
sti
and
iret
loopne
jecxz
dec
outsl
and
out
xor
push
or
push
inc
jno
push
cmpsb
es
or
sbb
pop
cmp
data16
sbb
int
or
jmp
in
shl
mov
inc
sbbb
rol
mov
je
or
out
jmp
push
lock
and
or
jae
daa
mov
cld
mov
popa
pop
imul
push
mov
es
jnp
arpl
outsl
rol
dec
iret
std
rclb
mov
outsb
bound
cmp
es
ret
mov
mov
add
jge
sarl
xor
adc
sahf
xor
adc
cmp
lds
nop
adc
hlt
pop
xlat
out
push
pop
push
and
jp
jo
das
xchg
inc
pushf
testb
jns
fildl
push
dec
mov
sub
pop
pop
dec
int
or
jb
loop
push
fcomp
in
in
adc
out
clc
cwtl
scas
xchg
inc
mov
movsl
adc
pushf
nop
call
inc
mov
pop
jp
mov
sub
jl
int
aaa
pop
sub
or
insb
daa
je
jae
clc
pop
mov
shrb
lods
xchg
es
lods
push
or
in
jns
ret
xchg
mov
cmp
push
push
xor
xchg
loop
or
jecxz
cmc
enter
invd
sub
mov
inc
mov
add
mov
push
jg
dec
mov
and
pushf
sub
mov
push
leave
add
mov
sbb
sti
dec
cmpl
xchg
jge
int3
mov
ret
mov
and
js
jbe
sbb
dec
xchg
sbb
mov
je
je
dec
jo
mov
pop
mov
pop
sahf
imul
mov
dec
adc
cmpsl
or
sbb
mov
xchg
jecxz
rol
mov
push
mov
add
push
jp
sub
lret
pop
shlb
arpl
fildll
out
xor
out
xchg
ret
push
or
dec
or
xchg
sahf
sbb
out
cmpsl
mov
push
dec
mov
mov
movsb
xchg
add
mov
je
pop
ljmp
xchg
arpl
adc
sub
and
or
ss
mov
aas
jbe
pop
dec
clc
push
lahf
inc
and
scas
je
out
loope
and
je
push
sbb
stos
cmpb
mov
jg
cli
js
inc
ret
daa
cli
sub
or
xchg
or
arpl
push
scas
popa
xlat
push
jb
lcall
clc
inc
into
mov
and
and
add
lock
xchg
movsl
sub
xchg
sarl
movsl
xor
lea
add
call
pusha
adc
aaa
add
jle
cmp
outsl
fdivp
mov
add
mov
int
pushf
popf
hlt
and
inc
sbbb
hlt
inc
sub
sub
and
mov
sti
add
mov
jmp
dec
and
aaa
jnp
stc
ficoms
daa
pop
pop
xor
dec
sub
jecxz
pop
in
pusha
and
cmpb
sub
inc
push
mov
pop
iret
fcompl
shrb
add
mov
jmp
arpl
jg
mov
stos
cmp
pop
das
fcmove
mov
cmc
test
rcrb
std
xchg
push
xchg
and
je
inc
xchg
pop
daa
pop
xor
jmp
lret
jns
xor
repnz
stc
mov
ret
daa
cmp
sbb
cmp
mov
mov
imul
into
out
mov
and
push
or
xchg
loope
mov
popa
movsl
rcr
hlt
or
adc
sbb
xorl
push
pop
jno
jl
gs
xor
pop
cmc
mov
cmp
jnp
movq
nop
outsb
test
inc
lods
insb
je
adc
enter
push
pop
xlat
arpl
lds
fwait
push
aas
push
push
test
ret
mov
out
rcrb
sbb
push
orl
jg
pop
cmp
adc
mov
popa
mov
pop
fisubrs
pop
mov
inc
sbb
jmp
and
je
iret
mov
aas
xchg
movsl
and
mov
pushf
inc
push
sbb
dec
loope
stc
inc
push
jne
loop
pusha
xchg
movsb
or
mov
adc
lret
sub
ss
mov
sub
mov
int3
and
mov
xor
pop
and
ss
jg
xor
sbb
lods
xor
add
mov
dec
js
mov
and
jmp
test
push
push
xor
fidivrs
jb
mov
xchg
clc
inc
jmp
sub
xchg
sub
call
iret
mov
mov
add
add
sarb
sahf
adc
and
mov
xchg
imul
xchg
mov
aam
stc
inc
stc
push
and
out
add
or
cmc
cltd
repz
out
cwtl
pop
pop
in
repz
mov
pop
mov
test
dec
lcall
cmp
fs
movb
jae
sarl
fcomp
jbe
dec
xchg
addl
and
rorb
cmp
mov
cmp
push
jge
test
xlat
sahf
jp
cmpsb
xchg
arpl
dec
push
insl
pop
jg
test
inc
out
or
ja
scas
popa
xor
inc
mov
scas
inc
mov
push
loope
scas
dec
ja
jle
insb
xchg
xchg
and
push
and
fs
jae
xchg
dec
insl
xchg
lret
out
xchg
ror
mov
xchg
imul
xchg
xchg
aam
or
int
mov
fisubs
aaa
sbbl
clc
mov
outsb
loope
leave
add
mov
and
outsb
pop
adc
test
out
jmp
shll
js
ja
dec
and
cmp
rolb
push
push
inc
lods
cmp
lds
sahf
les
mov
and
das
in
add
adc
mov
mov
sbb
aam
es
aas
je
xor
jno
scas
pop
mov
jl
mov
push
mov
xor
pop
mov
xchg
adc
in
aam
rclb
rcrb
out
fisubrs
mov
enter
push
out
gs
sti
lret
mov
and
jb
sbb
insb
mov
xor
mov
or
cwtl
xchg
ljmp
std
dec
clc
in
testb
sub
xchg
shrb
jg
push
dec
mov
loope
sbb
mov
shll
add
mov
cmp
and
repz
daa
adc
ds
sub
int3
arpl
xchg
jno
jmp
push
mov
movsl
sub
popf
jp
or
movsb
cmp
flds
cli
sub
xor
int3
fnstenv
mov
sahf
int
cmc
loope
data16
inc
adc
shlb
or
sbbl
xchg
loopne
nop
lods
rol
and
cmc
sub
scas
sub
mov
lret
into
xchg
mov
push
ljmp
fwait
xor
stos
in
pop
sbb
xlat
les
mov
mov
push
xor
inc
jno
and
inc
mov
mov
outsl
dec
push
call
mov
sar
clc
loope
mov
int
push
mov
sub
mov
fadds
xlat
std
stos
xchg
mov
shr
jne
repnz
pop
or
cltd
mov
test
jg
sbb
push
lret
mov
dec
mov
sub
nop
std
jp
jle
adc
fisubrs
mov
cmp
xchg
lds
pop
add
mov
and
cmp
iret
adc
push
mov
aad
movsl
adc
cli
out
pushf
inc
and
rolb
dec
jp
mov
insl
push
cltd
push
sub
inc
nop
int
daa
add
clc
xlat
in
xchg
xor
mov
or
push
nop
int3
inc
call
iret
fnstsw
pop
test
stos
daa
add
jns
xor
or
decb
xchg
dec
stc
fwait
das
inc
stos
dec
out
fxch
mov
cmp
iret
jo
jmp
outsl
clc
fwait
aaa
aam
scas
fcoms
mov
insb
mov
dec
add
dec
cld
mov
fbstp
push
sub
mov
dec
lods
sbb
inc
inc
imul
sti
test
repz
sbb
push
mulb
inc
cld
jbe
rolb
roll
jl
or
cltd
mov
push
mov
cmp
shrb
and
iret
dec
cmpsl
jbe
into
dec
cmp
pop
es
rclb
bound
cmp
test
or
leave
or
cmpsl
dec
xor
dec
scas
sbb
fsubl
adc
cwtl
pop
jl
mov
jg
pop
outsl
mov
lea
and
xor
jmp
stc
scas
sbb
jge
mov
sub
stos
dec
sahf
repnz
cmp
mov
cmc
lret
adc
lds
fdivs
add
out
popf
popa
and
xchg
inc
push
fmul
sbb
pop
dec
mov
aas
nop
mov
add
sub
testl
dec
xor
mov
sub
push
out
cwtl
mov
xor
dec
cmp
and
cmpsl
pop
push
xor
movsl
and
outsb
icebp
ja
test
inc
daa
call
cmp
pop
scas
popa
dec
out
pop
cmp
add
add
mov
test
and
outsl
pop
push
out
xor
sbb
imul
je
push
mov
ja
fcoms
inc
stc
aad
mov
adc
jo
fildll
sbb
rcl
data16
inc
aaa
mov
xor
push
adc
mov
int3
or
stos
cmpsl
mov
cmpl
lods
shrl
push
dec
hlt
xor
fidivl
mov
cmpl
loopne
arpl
push
dec
xchg
mov
bound
mov
adc
in
test
mov
jb
out
mov
adc
test
pusha
nop
cltd
sub
fninit
push
adc
xor
lods
dec
pop
inc
aas
dec
cmp
jo
pop
aaa
pop
mov
rcrb
imul
add
enter
insb
xor
mov
fwait
arpl
stos
jg
jae
mov
push
lods
das
mov
lock
enter
fiadds
outsl
addr16
aas
loope
vcvttpd2dqy
gs
push
mov
cmpsl
les
clc
adc
or
test
std
ret
cmp
xchg
pop
xchg
loopne
fs
test
cmp
in
xor
mov
sbb
jae
fstp
flds
stos
incl
in
fisttpl
stc
mov
js,pt
test
xchg
lcall
negl
or
outsl
mov
pop
mov
dec
or
jae,pn
sbb
xchg
inc
push
lods
push
out
dec
bound
mov
pop
jns
jnp
pusha
sub
dec
leave
cs
lds
into
ja
sbb
filds
mov
mov
mov
push
push
jnp
rorb
shlb
inc
cmpb
or
mov
jb
hlt
les
jo
shl
pop
or
sub
ss
push
hlt
jp
lahf
mov
mov
out
xchg
jbe
mov
sub
xor
add
lds
inc
push
out
scas
mov
js
dec
push
push
mov
cs
test
hlt
mov
inc
aas
loope
lods
pusha
pop
mov
and
and
or
icebp
test
push
push
jb
cwtl
sbb
dec
jg
and
xchg
fneni(8087
aas
out
jnp
inc
insl
jg
push
and
pop
mov
icebp
lret
push
loopne
bnd
aaa
lods
rcll
mov
and
mov
xor
hlt
repnz
scas
aad
mov
clc
push
xchg
outsb
ja
fdivs
fs
rcrb
shrb
jg
inc
jg
mov
push
push
pop
sub
ret
jae
rorl
mov
dec
lret
mov
or
lods
sub
jp
adcl
or
cmpsb
outsb
cs
and
cmpsb
inc
mov
push
ret
ficompl
cmp
adc
or
pop
adcb
int3
xor
adc
mov
mov
pop
lcall
cmpb
mov
sbb
test
xchg
fcmovnb
loope
xlat
popf
fisubl
fistl
nop
add
js
sbb
push
repz
cmp
fimull
outsb
pop
pop
lcall
popf
xor
pop
adc
mov
jns
in
aam
push
sbb
sar
cmp
sbb
and
and
cmpsb
movb
mov
sbb
fdivrs
int
lcall
mov
call
hlt
and
ljmp
push
push
jb
add
les
push
shlb
jb
push
les
pop
or
ret
jnp
aad
int
movsb
jbe
dec
pop
push
clc
jle
test
inc
add
sub
add
adc
inc
and
fimull
jo
scas
rcrl
sub
movhps
or
cmc
aaa
loope
movsb
rorb
inc
mov
addr16
cmp
mov
and
pop
jo
jl
mov
dec
xor
dec
add
pop
xchg
je
les
jns
aad
movsb
ret
mull
hlt
adc
je
jb
pusha
call
xchg
cmp
addr16
int
stos
jae
in
sahf
hlt
jo
cmp
mov
pop
push
fcomps
xchg
and
push
stos
adc
add
mov
mov
call
ss
inc
mov
mov
cmp
bnd
aam
xchg
addr16
dec
jbe
xchg
in
mov
lods
lods
mov
cmpsb
add
inc
push
stc
in
scas
add
adc
lahf
add
fists
xchg
xchg
scas
das
stc
std
cmp
repz
ror
pop
adc
xchg
aas
in
test
out
movsb
xchg
enter
dec
add
sub
in
mov
leave
push
and
xlat
dec
aaa
xchg
mov
fiadds
cmp
inc
ss
sbb
out
pop
daa
inc
or
mov
bnd
mov
pusha
or
push
sub
mov
mov
data16
sub
movsb
sub
test
outsb
mov
xchg
loop
mov
roll
push
ds
sar
mov
sbb
jno
inc
or
jbe
mov
out
sbb
cmp
cmp
pop
jno
loopne
push
pushf
adc
mov
outsb
cmp
and
push
mov
pop
loopne
push
push
int3
pop
inc
jmp
dec
push
mov
clc
inc
lods
pop
lcall
adcb
cmp
sub
sbb
mov
lea
bound
jg
jmp
xchg
dec
call
loop
outsb
inc
push
or
adc
jno
cmp
pushf
dec
js
fdivrp
jbe
shll
cltd
out
call
mov
cmp
ret
adc
movsb
repz
loope
repz
outsb
inc
push
push
push
cwtl
xlat
mov
int
pop
call
add
mov
sub
int
leave
mov
push
aam
push
jnp
imul
les
fstpt
cmpsl
or
outsl
dec
mov
hlt
fimull
sbb
mov
pop
inc
sub
add
sbb
fxam
jmp
adc
jg
add
adc
xor
js
mov
mov
mov
or
adc
dec
ret
imul
es
in
loope
push
add
fsubs
and
xchg
add
cwtl
fcmovb
pop
or
pop
movsl
movsl
test
mov
or
int3
cmp
stos
push
push
aam
add
movsb
adc
push
cld
scas
cmpsb
xchg
daa
out
xorb
cmpsl
and
cmp
adc
push
imul
and
cmp
mov
jne
loope
hlt
gs
hlt
aad
mov
lods
pop
adc
ss
loop
test
aaa
cmpsl
jns
xor
mov
stos
fwait
cmp
jmp
repnz
sahf
mov
push
out
mov
cmp
cmpsb
idivl
pop
or
xlat
shrb
cmp
xor
sub
pop
xor
pop
fistl
out
imul
mov
adc
and
xchg
jo
or
popa
xor
push
cmc
cmp
adc
dec
fldl
inc
out
scas
movsb
mov
insb
inc
jbe
rcrl
rcrl
inc
ja
xor
outsb
inc
lods
mov
lahf
jp
pusha
insl
adc
repnz
loope
push
xor
pop
cmp
insl
pop
lock
lret
dec
jb
mov
jne
xchg
js
aaa
je
mov
fstpt
fldt
add
leave
leave
mov
xor
cmp
adc
jge
push
je
scas
jne
roll
imul
lods
cli
push
and
cmp
outsb
andl
nop
scas
inc
in
fildll
aad
test
lcall
pop
pop
out
push
dec
popl
cmp
pop
cwtl
or
fs
and
test
test
out
lea
adc
push
or
sub
adc
mov
xchg
or
arpl
fsubrl
stos
jmp
xchg
pop
fistpl
pusha
sbb
ret
pusha
rorl
push
mov
dec
xchg
push
stc
or
into
int
xchg
data16
mov
test
mov
outsl
or
cs
leave
add
push
sarl
push
outsl
inc
outsl
sar
in
inc
jne
mov
out
ficoml
or
ret
add
adc
das
ret
sbb
xor
loopne
cmpsb
mov
out
lock
xchg
inc
sub
pop
xor
lods
out
mov
inc
push
cmp
scas
test
orb
divb
push
mov
lret
jbe
mov
enter
aad
enter
rorl
pushf
cmc
push
sub
out
pop
xchg
push
cmc
fimull
xor
divl
insb
shrb
lea
test
ficoms
hlt
fisubrs
cmp
and
inc
push
jle
cmp
or
jo
push
lret
jae
cmp
and
ficompl
fildll
dec
mov
ret
mov
inc
aam
push
mov
out
sbbb
and
jns
mov
pushf
stc
cmpl
adc
repz
ret
cmpsl
sbb
imul
sbb
jl
inc
mov
mov
stos
popf
mov
sub
nop
add
ds
push
outsl
imull
sbb
ds
mov
mov
js
adc
inc
pop
pop
movsl
mov
and
aad
lret
sti
out
xchg
jle
adc
add
xchg
ja
lods
pop
call
into
add
push
xchg
in
or
cltd
adc
cmp
sub
xor
add
fnstcw
dec
lods
popa
fucomp
or
xor
sub
insb
nop
montmul
cmpsb
roll
jg
iret
sub
addr16
jno
xchg
cli
scas
mov
cs
dec
jnp
in
push
dec
fwait
scas
repz
dec
les
push
cs
loop
dec
lods
rorl
outsl
int
mov
lcall
roll
cmp
mov
xlat
call
jg
push
lock
outsb
push
ds
dec
pop
and
cld
mov
jno
popa
nop
cs
test
add
xchg
mov
xchg
pop
mov
testl
push
pop
xor
xor
mov
test
popf
pop
je
and
orl
shll
push
aaa
ret
fcomi
cmpsl
adc
adc
cmp
cmp
insb
out
dec
nopl
jl
xor
add
stos
mov
push
outsl
jl
mov
add
inc
push
adc
cli
fcoms
adc
das
xor
mov
aad
popl
add
and
out
scas
inc
into
lea
lock
je
cmpsl
and
in
sbb
scas
xor
in
lret
pop
int3
mov
clc
ds
outsb
test
and
popa
xor
push
jbe
ja
int
mov
stos
jecxz
data16
jno
and
and
xchg
jle
ja
add
loope
push
sarl
mov
lahf
repnz
sar
pop
add
pop
dec
jne
les
sbb
cmp
dec
jne
pop
pop
les
inc
xor
inc
dec
mov
sbb
ds
mov
mov
in
xchg
push
add
mov
dec
push
inc
fdivs
jno
mov
add
dec
icebp
lods
cmpsb
dec
ja
inc
in
lods
xor
push
clc
in
rcrb
mov
lcall
nop
scas
or
mov
inc
das
cmp
add
aam
push
mov
mov
mov
fs
imul
inc
push
mov
mov
jl
add
push
xor
aam
lahf
mov
ljmp
xchg
inc
ret
pop
outsl
enter
je
push
popf
add
sbb
aad
je
pop
addr16
pop
mov
mov
or
pop
cmpsb
bound
inc
pusha
aas
cmp
xorb
or
push
mov
test
dec
je
into
xor
jp
cmp
lods
pop
out
movsl
cltd
aaa
js
cs
rorl
movsl
sub
inc
mov
pop
push
dec
and
test
jle
or
rorb
inc
sti
scas
inc
int3
pushf
dec
clc
imull
sbb
dec
outsb
sbb
push
mov
notl
and
fs
insb
push
sbbb
lock
mov
test
xchg
jmp
cmp
mov
int
jae
push
insl
add
les
stos
mov
jg
ljmp
loopne
mov
mov
pop
js
add
sub
lret
adc
jle
xchg
or
fdivrl
bound
out
sub
mov
das
ds
jp
jo
hlt
outsb
into
enter
mov
daa
fstpt
movsl
mov
jns
rolb
stos
add
pop
and
rcl
jne
xchg
hlt
adc
dec
dec
or
pusha
mov
xchg
cltd
in
push
subl
fidivrs
jg
pop
sti
in
jae
cmp
jl
mov
ds
out
inc
rolb
fwait
pop
adc
xlat
sbb
add
xchg
pop
fmuls
sbb
scas
add
int
jp
add
sub
mov
push
lock
mov
dec
mov
aas
pop
xchg
mov
jmp
int
mov
in
out
movsb
mov
mov
mov
imul
pop
mov
pop
inc
es
inc
rorb
sub
push
and
mov
lcall
les
sahf
mov
ret
pop
test
mov
pop
std
push
lret
negl
dec
xor
xor
lahf
call
push
negb
sub
scas
cmp
ror
mov
dec
mov
push
ds
pop
clc
stc
fcomps
dec
cmp
loopne
shl
xchg
mov
xor
fsubrp
fs
cmpsl
dec
in
xchg
push
stos
cmp
xchg
xchg
xchg
fidivrs
js
xlat
sar
int3
shlb
inc
mov
pop
clc
inc
negl
jmp
jecxz
mov
jbe
clc
sti
cmp
jmp
in
pushf
iret
nop
xorl
jb
in
dec
dec
out
fadds
adc
decl
dec
push
mov
add
or
jo
pop
enter
lods
ja
pushl
xor
decl
inc
jp
mov
sti
dec
test
xor
in
and
adc
jge
dec
push
xchg
cmpsb
enter
in
fidivrl
add
scas
mov
lret
adcl
push
add
dec
push
ret
inc
hlt
cmc
add
pusha
xor
dec
leave
movsl
sub
dec
aaa
insb
dec
mov
pop
into
mov
mov
mov
lret
or
negl
jmp
lods
xchg
sub
sbb
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
fistpll
jg
xor
imul
mov
cmp
xor
mov
xchg
push
pop
xor
xor
sti
xor
sbb
sahf
out
stc
jo
mov
cmc
adc
pop
mov
or
test
inc
in
outsl
dec
pop
xchg
std
stos
dec
fs
xor
or
xor
inc
arpl
push
pop
jp
decb
fstl
adc
jnp
fisubrl
into
pusha
sahf
dec
mov
add
dec
or
dec
sbb
or
push
or
lcall
std
repz
xchg
arpl
push
rclb
mov
imul
jmp
es
or
inc
popa
push
push
movl
lea
bound
mov
shrl
lret
or
shl
clc
mov
loop
mov
test
xor
pop
add
ja
lds
aad
xor
push
ds
les
cmp
and
jbe,pt
or
out
adc
lret
add
jmp
xchg
sahf
and
popa
push
mov
or
xor
jae
cwtl
or
inc
mov
adcl
or
sbbl
popa
mov
jne
xchg
repz
outsb
insl
push
sbb
xchg
pop
xorl
mov
or
mov
add
push
sbb
cmc
cmp
sbb
adc
or
xor
inc
inc
add
mov
mov
jge
sbb
fwait
and
ja
call
jns
jp
insb
jno
pop
ljmp
and
out
xchg
mov
lahf
es
popa
scas
inc
mov
lahf
cmpsl
sub
cli
loopne
aad
fwait
mov
pop
test
cli
mov
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
mov
