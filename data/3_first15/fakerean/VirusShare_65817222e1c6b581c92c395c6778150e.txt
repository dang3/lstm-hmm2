sbb
add
mov
xchg
dec
cmp
xchg
jg
inc
fisttpl
movsl
test
rcll
call
pop
add
push
pop
loope
cmovnp
mov
and
leave
es
sbb
dec
lea
add
iret
mov
mov
cmpsb
or
cli
arpl
icebp
mov
lret
leave
xchg
lcall
rorl
outsl
cli
ffreep
inc
dec
leave
ret
adc
movsb
mov
daa
cmp
ljmp
jl
dec
jo
pop
mov
jmp
xchg
dec
adc
js
cmp
das
stos
push
push
xlat
rclb
dec
movsb
or
lcall
push
ret
push
hlt
jo
out
jne
ficompl
push
push
sub
les
sbb
cmp
jecxz
jge
ljmp
insl
mov
je
in
lea
mov
insl
iret
es
arpl
pop
pop
sbb
out
out
mov
into
out
inc
inc
aaa
test
imul
push
mov
loop
push
cmp
movsl
fiaddl
ljmp
jg
pop
ficoms
movsb
push
push
mov
jecxz
ficoml
arpl
add
ss
fstpl
jno
pop
adc
scas
push
adc
jbe
scas
lret
mov
int
aad
fsubr
repnz
dec
jbe
ja
lds
jp
cli
jno
and
out
repz
mov
sti
pop
mov
cwtl
aas
gs
mov
inc
pop
cmpsb
sbb
push
stos
int3
or
es
insb
insb
dec
and
mov
adc
lods
push
cwtl
insl
das
jns
repz
sbb
roll
inc
sub
es
mov
sbb
fstl
in
xchg
iret
and
adcl
mov
pop
test
bound
dec
xorl
gs
or
xor
xlat
sbb
cmp
or
lret
loopne
push
mov
shll
sbb
dec
gs
dec
and
xor
cmp
loop
repnz
ret
cmp
dec
pop
jo
adc
jno
lret
sbb
int3
aad
adc
jnp
imul
mov
ss
mov
cmpsl
outsl
insb
xor
ds
xchg
les
iret
div
cmp
ret
mov
sub
stos
dec
dec
or
movsl
jmp
jo,pn
cwtl
sbb
xor
push
lret
test
outsb
cli
sti
enter
xchg
loope
jne
arpl
test
aas
adc
imul
adc
decb
add
std
cltd
push
jnp
into
mov
xchg
andb
pop
cwtl
mov
add
xor
xchg
test
mov
or
cmpsl
scas
fcmovnbe
test
dec
sqrtps
dec
jmp
cmpsb
mov
push
imul
sub
and
sbb
test
push
sbb
in
shlb
test
jge
cli
sub
inc
or
push
sbbl
aaa
popa
test
or
test
dec
loopne
adc
sub
insl
in
mov
lret
pusha
dec
pop
pusha
sti
orl
divb
adcl
cli
xlat
lahf
stos
sbb
push
scas
add
adc
xchg
adc
pusha
mov
imull
lds
xchg
inc
adc
sub
ret
push
or
pop
add
bound
sbb
mov
pop
jne
movsb
push
pop
jb
mov
dec
or
sub
xor
mov
int
pop
xchg
pop
sub
sti
es
cbtw
jnp
sbb
int
jge
iret
pop
out
inc
adc
fcomps
bound
les
or
xor
sbb
ja
mov
push
xor
add
orb
loope
adc
sub
dec
add
xchg
sbb
movsb
mov
xor
movsb
and
fsub
jge
inc
sub
mov
lds
pushf
xchg
ss
push
add
add
jle
rclb
mov
sub
out
icebp
std
xlat
call
sub
and
push
mov
xchg
jae
or
or
fs
push
insb
fdivp
inc
insb
cmc
and
lods
iret
jmp
push
pop
inc
push
xchg
in
movb
jbe
xor
fdivl
push
and
push
rcrb
push
rolb
mov
add
fstpt
push
mov
pop
in
imul
popf
daa
enter
push
shll
pop
mov
sub
xchg
rorl
push
inc
jns
or
inc
adc
and
clc
addr16
sarb
lods
stc
sbb
mov
fdivs
aas
jle
shll
push
cmp
xor
lea
ss
pop
loop
scas
jnp
cmp
popa
pop
callw
les
aaa
xchg
scas
mov
cwtl
push
push
pop
pop
mov
fisttpll
out
shlb
inc
ret
jg
decb
jp,pn
jle
mov
jbe
cltd
mov
cwtl
xchg
ret
enter
push
pop
lock
add
ss
mov
jp
dec
jmp
add
movsl
cmp
xchg
pop
out
mov
adc
bound
fsts
andl
lea
in
into
addl
arpl
sbb
sti
push
sub
das
bound
xchg
adc
stc
jp
jl
cmpsl
mov
xlat
jecxz
shl
adc
pushf
sub
cmp
push
xchg
fistpl
in
enter
pop
sbb
mov
jb
cmp
addl
rcll
insl
movsb
sub
push
je
jl
push
add
out
iret
rcrl
cmp
add
rcrb
and
pop
adc
xor
adc
fwait
repz
xor
in
push
pop
push
xchg
push
clc
mov
ret
loop
jge
incl
ficoml
jg
popf
jne
ljmp
ret
icebp
push
outsb
pop
sbb
pop
out
call
dec
lods
arpl
inc
cld
js
imul
inc
mov
mov
cmc
rolb
adc
out
mov
xchg
jnp
inc
cmpsl
ljmp
jecxz
jecxz
rcrl
add
cltd
jg
loopne
push
rorl
mov
ret
xchg
jp
lret
lods
sarl
xor
sub
mov
xor
fsts
mov
aad
outsl
mov
inc
loope
dec
ds
movsl
jbe
out
jne
xor
jle
lods
xchg
sti
int3
js
clc
pop
ffree
cmp
jecxz
lret
loop
repz
jnp
adc
mov
fcmovnbe
add
xor
pop
out
xchg
mov
push
stos
cmp
jle
call
pop
adc
fdivr
jns
fnsave
test
xchg
or
in
inc
orb
loopne
jae
loop
xchg
hlt
mov
add
inc
movsl
loopne
clc
xchg
cli
aas
push
ja
adc
inc
je
jne
push
call
mov
jg
js
js
arpl
fildl
adc
or
icebp
mov
and
inc
or
clc
outsb
xor
outsl
gs
xchg
jl
daa
mov
bound
test
push
mov
pop
dec
xlat
mov
lock
rcr
ljmp
mov
hlt
popf
data16
push
jp
lahf
inc
mov
mov
xchg
mov
cmp
dec
fldpi
lods
add
daa
fldl
in
sbb
repnz
xor
lock
dec
xchg
sarb
or
pop
addr16
lods
pop
test
sub
mov
pop
cmp
cwtl
ficoms
cmpl
xchg
aad
jmp
mov
adc
dec
xchg
in
pop
out
jge
jnp
pushf
mov
imul
adc
add
rcrl
lret
cmp
xchg
inc
lods
testb
int
cli
mov
add
addl
fadd
andl
rclb
mov
jle
fs
jno
cmpsb
mov
mov
out
daa
mov
and
test
test
adc
out
orb
fucomip
xchg
push
mov
xchg
jmp
xchg
push
gs
jnp
cwtl
call
jo
add
pop
loop
pop
mov
scas
mov
xchg
push
xchg
imul
xchg
insb
cmp
xor
aaa
mov
lret
aam
adc
jns
pushl
push
sbb
cmp
cmp
cmp
xchg
jbe
push
mov
dec
int3
das
xor
adc
negb
cli
jne
xorb
and
cmp
dec
and
testl
add
pusha
mov
rolb
sbb
lods
sbb
cmpsl
xchg
inc
push
adcl
dec
int
mov
in
bnd
xchg
notl
mov
inc
dec
and
ds
mov
test
xor
push
aaa
or
inc
sahf
dec
or
adc
add
adc
sbb
adc
dec
push
pop
daa
and
pop
cld
mov
inc
inc
sub
xor
test
pop
add
sbb
sbb
adc
mov
test
out
sub
rorl
pop
mov
mov
stos
fcoml
pcmpeqw
jb
dec
leave
cmpsb
add
hlt
shlb
out
xor
xlat
stos
sarb
push
cmp
pop
ja
jg
aas
std
test
jns
mov
inc
push
lods
push
and
test
and
mov
cli
ret
ret
mov
xchg
stc
sub
test
pop
xor
popa
out
dec
pop
cmp
mov
xor
ja
or
cmp
cmp
and
jns,pt
mov
stc
ja
inc
aas
jmp
add
xlat
mov
insb
pusha
jbe
dec
imul
xchg
sbbb
and
mov
fcoms
ja
lahf
xchg
dec
in
and
inc
jge
lods
push
insb
jns
cmpsl
addb
lea
adc
fs
repnz
ret
test
xor
dec
mov
fcompl
sub
or
mov
pop
testl
sbb
outsb
fs
xor
and
mov
mov
mov
sahf
xor
jb
cld
xchg
arpl
inc
pop
lock
loop
test
mov
popf
fists
sub
mov
and
pop
divl
loope
movsl
adc
imul
add
xor
aad
in
dec
xchg
repz
daa
xor
repz
inc
daa
and
inc
cmp
scas
stos
pop
in
subl
mov
xchg
jmp
pop
imul
push
cmpsl
rolb
std
rorb
rolb
push
imul
push
fiaddl
movsl
push
inc
dec
mov
or
movsb
aam
orb
mov
lods
push
push
add
mov
xchg
jae
aam
add
hlt
xlat
lret
mov
es
sbb
mov
and
or
mov
outsb
sbb
std
add
jp
mov
add
pop
pop
mov
mov
gs
and
repz
popf
mov
fdivrl
orb
loop,pt
and
adc
mov
jae
jb
mov
push
in
idivb
arpl
fsubs
pop
iret
mov
shrb
out
insb
cmp
inc
fwait
xor
test
add
add
lds
ljmp
scas
mov
out
mov
and
insb
and
sti
iret
sbb
fidivs
xchg
jo
add
mov
outsl
bound
cmp
and
popa
movsl
test
sub
sbb
testl
lds
je
dec
stos
aam
sbb
add
add
or
push
jg
jne
pop
adc
lcall
out
mov
ret
xchg
fsts
icebp
jge
jns
fwait
add
push
xchg
sti
xchg
ror
xor
cmp
arpl
inc
jb
mov
dec
mov
and
in
mov
push
ja
pop
inc
les
mov
nop
jno
in
aas
lods
dec
inc
call
mov
sbb
push
jne
lock
mov
fwait
xor
pop
popa
cmpl
xor
loop
outsl
leave
push
in
cmp
add
aad
pusha
jb
and
clc
mov
lcall
ds
xchg
and
testl
shl
lcall
jne
inc
das
push
pop
scas
out
ficoms
cmpl
fiaddl
movsl
stos
pop
mov
push
js
mov
jb
lea
ljmp
jg
pop
sbb
gs
pop
ss
sub
push
sarb
sub
lahf
push
or
xor
jg
ficomps
leave
into
push
jb
ljmp
adc
push
xlat
dec
ss
aaa
sub
in
pop
in
daa
and
xor
sbb
mov
loopew
mov
shll
or
dec
addb
pop
in
shl
ljmp
hlt
add
mov
mov
and
out
repz
or
pop
dec
add
clc
aas
cmp
push
xchg
cld
iret
scas
jns
mov
lods
hlt
mov
aas
scas
xor
add
mull
fst
sbb
fcomps
push
sbb
aaa
cmc
pop
mov
mov
mov
add
loope
push
xchg
daa
mov
loop
jle
in
in
jb
adcb
push
jnp
aam
mov
xchg
loop
mov
push
or
mov
ds
lds
xchg
cmp
mov
jns
cmp
mov
inc
push
jo
enter
add
test
lcall
std
or
pop
cmpsb
ss
add
es
int3
test
je
je
test
xchg
pop
call
push
push
mov
or
dec
jg
js
data16
fcoml
clc
jecxz
cmp
mov
cmp
aam
add
stc
xchg
lds
or
xchg
fildl
divb
push
and
cmp
fwait
not
dec
in
pop
inc
or
xor
mov
loop
sbb
in
mov
push
out
andnps
sub
mov
jae
idivl
jl
mov
jns
mov
clc
insl
repz
pop
xchg
adc
or
pusha
jno
pop
adc
arpl
mov
and
cmp
bnd
pop
outsb
pop
mov
ds
test
add
adc
mov
pusha
loopne
adc
das
xchg
fidivs
push
pop
mov
jecxz
add
mov
cmpsb
outsb
aad
stc
or
popf
movsl
imul
add
xor
sbb
movsl
and
adc
jno
xor
inc
mov
movsb
pop
test
push
add
loope
or
mov
sub
outsl
loopne
and
insl
or
sbb
ljmp
jo
push
in
cmp
cmp
jle
add
sar
pusha
push
pusha
insl
test
cmpsb
punpckhdq
pusha
dec
testb
sbb
dec
sub
ficompl
xor
mov
xor
xor
add
jns
nop
jbe
jg
fisubrl
mov
fmul
push
cwtl
sbb
iret
xor
sbb
pop
pusha
scas
int3
daa
mov
add
sub
jp
xor
adc
adc
or
into
call
bound
sahf
inc
lret
fsubrs
pop
xchg
sahf
and
lds
mov
ret
and
bound
dec
shrl
jl
rclb
mov
movsl
sbb
int
fisubs
ja
cmp
out
lret
popf
dec
jge
add
jbe
cld
mov
xor
dec
scas
inc
or
push
shll
dec
pusha
hlt
xor
insb
or
in
xchg
cmpsl
ljmp
jo
ret
adc
mov
pop
lcall
xor
sbb
lock
push
push
bound
inc
fwait
sub
pop
xchg
rsm
aas
pop
jne
test
mov
and
imul
cltd
std
or
test
adc
scas
mov
lods
popa
stc
outsl
bound
mov
nop
data16
pop
or
rclb
dec
rcrb
std
mov
mov
add
inc
ret
aad
cmp
movsb
cmovl
scas
repz
inc
mov
pop
push
dec
je
loopne
mov
movsl
jle
dec
and
mov
mov
sbb
cmpsb
orb
int3
iret
fdecstp
dec
cmp
out
les
insb
mov
insl
push
xlat
and
sub
cmp
mov
movsl
bndldx
cmp
loope
in
popa
sub
xor
pusha
sbb
dec
mov
icebp
push
lods
sub
push
inc
repz
adc
vpcmpeqb
adc
stos
mov
pop
cwtl
pop
push
cwtl
adc
pop
idivl
add
push
mov
push
stc
ret
psubd
stos
and
fildl
shl
jns
ljmp
pop
and
or
push
aas
out
mov
lock
sub
cmp
pop
cmc
jmp
sti
dec
xchg
jbe
lods
aad
adc
sbb
test
push
aad
cmpsl
sti
aad
push
cld
ret
jmp
popa
lods
mov
mov
xchg
push
shll
sub
gs
jbe
je
jl
add
int3
das
lods
adc
aas
sarl
std
adc
mov
insb
and
in
mov
call
mov
aaa
fbstp
gs
xchg
rcrl
sbb
jl
cmp
inc
xor
dec
mov
mov
clc
shl
outsb
sub
jb
and
sub
movsl
pop
xchg
sbb
add
std
je
add
in
lock
push
lds
inc
add
jle
fxam
pop
mov
jb
fsubl
nop
aas
fst
out
mov
into
sbb
imul
sbb
out
adc
xchg
sub
out
ds
pop
sbb
cmp
or
sti
sbb
inc
std
xchg
jl
pop
pop
xchg
int3
dec
scas
popf
sbb
mov
fiadds
push
outsl
pop
mov
std
fists
dec
sbb
mov
push
pop
jle
in
jnp
xchg
mov
and
addr16
cmp
mov
lret
push
pop
pop
pushf
mov
xchg
fistl
jne
xor
sub
push
int3
or
xor
mov
add
jecxz
mov
dec
sti
dec
mov
lock
into
fsubrl
mov
cmpl
dec
pop
push
xor
mov
pusha
mov
incl
icebp
pop
cwtl
scas
in
pop
mov
xchg
sar
ror
adc
dec
shr
gs
sbb
and
cmpsb
mov
adc
push
inc
cld
inc
in
ja
std
sbb
and
cmp
dec
push
test
retw
jp
cmp
sub
jl
xchg
into
sub
jecxz
dec
aas
adc
into
imul
xor
daa
push
repnz
shl
pop
xor
pop
jmp
aad
ljmp
or
push
xchg
lock
jp
xor
xor
push
push
subb
sub
and
out
mov
xor
sarb
scas
dec
xchg
pop
js
mov
movsb
incl
les
adc
not
hlt
into
or
fildl
add
loopne
lds
fbld
stc
or
jg
call
and
shll
xchg
xor
fxch
cmp
mov
out
jno
add
test
push
or
push
pop
jecxz
aas
out
dec
stc
cmpsb
inc
push
sbb
popa
mov
mov
xchg
xor
ret
pop
adc
sarb
push
jae
je
xlat
in
mov
inc
in
jecxz
mov
lods
xor
inc
lret
mov
loope
mov
lock
adc
pusha
movl
cmp
mov
push
inc
and
aad
or
repz
xchg
sbb
xchg
fwait
jbe
nop
insb
mov
ror
mov
adc
cs
inc
dec
in
in
fisttps
push
jmp
ss
mull
insl
push
sub
fidivrl
in
push
decb
movsl
mov
clc
aad
test
pop
jmp
add
cmp
dec
mov
aam
jmp
roll
iret
cmpsb
aaa
and
outsb
shll
repz
test
sub
jbe
lret
int
arpl
lea
dec
cmp
jmp
xor
in
outsb
cld
call
xchg
mov
mov
cmp
stc
loop
push
or
xchg
sub
cmp
out
mov
lahf
leave
push
or
jl
repz
lahf
mov
jnp
sbb
xchg
shlb
jmp
mov
adc
or
mov
adc
outsl
mov
cltd
pushf
cli
sub
cmp
int3
inc
mov
pushf
mov
mov
jb
xlat
ja
enter
inc
cmp
ss
jno
pop
test
test
jns
add
cmp
sbb
and
jo
hlt
add
cmp
stc
outsb
outsl
pop
jmp
cmp
sub
and
xchg
xor
adc
xchg
jecxz
jne
repz
mov
mov
pop
sti
lret
mov
icebp
bound
pop
sub
fsts
mov
push
inc
and
adc
fnstenv
repz
dec
aad
xchg
pusha
xchg
out
lahf
in
push
loope
add
pop
push
mov
test
inc
jnp
mov
push
push
push
sarb
fsub
and
in
int
out
fwait
divb
lret
into
mov
cmpb
lods
stos
imull
sub
cmp
push
outsb
shll
mov
divl
insb
xor
aas
roll
cltd
fisubrl
cli
push
add
enter
ret
sbb
enter
das
ljmp
add
mov
test
jg
cltd
scas
xor
cmpsl
mov
loop
xor
jno
mov
ret
add
jge
fadds
shlb
mov
cmp
fcmovnb
rolb
dec
pop
pop
rcl
push
cli
fmul
and
push
cmp
cli
iret
pop
xchg
add
push
sbb
or
shlb
stc
mov
andl
sbb
jns
push
pop
test
movlps
pop
sti
push
dec
ret
push
add
in
cmp
cmp
add
nop
inc
fwait
cltd
fidivrl
xchg
jg
xchg
fistl
adc
flds
sbb
mov
pushf
xchg
ljmp
pop
in
push
inc
push
sub
sbb
mov
imul
cmp
stc
mov
insb
push
cmp
pop
divb
test
cmc
xor
pusha
jmp
mov
jge
jae
cmp
mov
pop
xchg
adc
into
pop
addr16
ret
out
xchg
aad
test
inc
xor
inc
pop
push
fdivrp
fcompl
jmp
dec
test
inc
dec
mov
adc
js
mov
mov
gs
std
fldl
mov
mov
jns
xor
push
rclb
sbb
inc
in
sub
adc
xchg
or
xor
ss
jmp
dec
imul
les
daa
lock
out
and
sub
adc
dec
sub
sbb
sarl
idivl
jge
outsl
pop
test
test
jmp
inc
push
loopne
xorl
mov
ljmp
mov
mov
jge
pop
sbb
je
xchg
mov
add
mov
lcall
xchg
cs
lods
outsb
iret
ret
add
repz
lret
cs
cmc
xor
mov
jae
adc
jno
adc
sub
pop
aam
popf
std
mov
add
popf
jo
mov
rol
std
jo
dec
aad
jl
shll
jg
cmp
mov
dec
loop
cltd
outsb
wbinvd
or
xchg
add
mov
mov
add
dec
and
fsubs
xor
push
cli
xchg
sbb
jns
fninit
sti
xchg
mov
push
les
mov
dec
adc
push
arpl
inc
fs
setl
fisttpll
xor
and
test
add
xor
pop
adc
idivl
mov
dec
cmp
sbb
test
sbb
adc
sub
cmp
and
pushf
mov
fnstenv
ret
pushf
mov
in
inc
pop
cmpsb
test
mov
pop
sbb
mov
cmpsb
inc
test
in
mov
sub
pusha
mov
cmp
add
mov
mov
mov
into
jb
xchg
cltd
jmp
test
jnp
call
or
movl
sbb
aas
inc
inc
lea
xor
jno
test
pop
movsl
negl
dec
cmp
and
jae
add
cld
push
in
insl
and
or
imul
sar
enter
and
push
stos
sbb
aas
mov
push
fwait
or
mov
fisttpl
jmp
adc
inc
or
ficoml
sbb
lea
fcomp
arpl
mulb
mov
stos
mov
ficompl
mov
ja
push
mov
dec
insb
adc
pop
mov
jnp
addr16
inc
es
ljmp
mov
or
repnz
std
fwait
push
cld
jle
cmp
sahf
imul
dec
dec
pop
sub
aam
ficoml
in
sbb
fs
rcl
mov
data16
out
cmpsl
in
lods
pop
stc
push
leave
loop
stc
cmp
sbb
add
test
jl
setnp
jb
mov
incb
jp
jle
mov
test
mov
dec
inc
xor
jns
cmp
lds
popf
push
in
mov
lock
bound
icebp
shrb
fstpl
stc
call
add
fdivl
xor
lret
lock
push
xor
dec
ljmp
andb
mov
mov
stc
inc
push
aaa
lahf
outsl
mov
fdivl
cmp
inc
shrl
push
mov
push
xchg
mov
repnz
sahf
inc
fisubrl
push
pop
dec
jle
dec
sub
stos
sub
xor
add
in
stos
icebp
jg
mov
addr16
cmp
daa
pushl
arpl
stc
ds
xchg
cmc
inc
mov
in
fstps
pop
pushf
and
push
mov
jbe
ljmp
insb
movsl
cmpsl
test
rcll
mov
or
pop
xchg
push
xchg
pusha
lcall
aad
jbe
push
es
ror
sub
mov
adc
add
sub
je
ds
and
xchg
pop
insb
fsubr
lret
loopne
imul
std
addr16
and
adc
enter
dec
push
lahf
lock
add
push
movsb
mov
icebp
in
call
nop
out
cmp
pushf
and
test
sub
stos
mov
xchg
mov
push
rol
xchg
out
lcall
and
sub
repz
cld
xchg
lahf
and
into
or
pushf
and
into
pop
xchg
push
jnp
pop
mov
lods
fs
popf
mov
adc
out
hlt
lcall
add
cmp
das
sarl
loop
pop
jno
jmp
ret
inc
rcrb
or
dec
test
mov
cld
sub
insl
add
jl
cmp
push
negb
and
mov
inc
aas
fildl
or
test
or
dec
shll
sbb
pop
jecxz
cld
xchg
dec
shrb
inc
mov
and
sbbl
mov
xchg
fidivrl
arpl
jnp
rcrb
movsl
out
and
jns
jl
xchg
sbb
dec
mov
xchg
or
and
pop
pop
and
mov
rorl
lock
push
fsubs
and
jmp
dec
push
rcrb
adc
scas
test
xlat
aaa
mov
jecxz
mov
add
or
lods
repnz
stos
movsl
fisubs
lret
pop
insb
inc
lds
add
movsl
adc
and
fiaddl
jns
rclb
pop
nop
push
scas
sbb
inc
js
inc
push
gs
mov
push
push
fcmove
adc
inc
jmp
cmp
sarb
add
inc
xchg
cmp
mov
in
mov
and
loope
jmp
ss
push
dec
sahf
mov
xorl
rclb
mov
or
sub
stc
push
xchg
mov
cld
xchg
jo
rol
pusha
push
and
xchg
and
push
xor
decb
xor
xchg
repz
pop
push
inc
mov
jne
mov
paddb
iret
arpl
xchg
or
push
adc
in
or
out
xchg
push
hlt
mov
push
adc
mov
cmc
inc
mov
xchg
sbb
cmp
xchg
inc
sbb
adc
in
aam
mov
sub
in
xor
sbb
mov
dec
out
mov
sub
jmp
xchg
mov
loope
jmp
aad
inc
mov
popf
adc
ret
cmpsb
mov
mov
mov
rorb
lea
lea
cmp
cwtl
sti
add
ss
out
mov
shrb
out
jl
shlb
or
xor
fsubr
rolb
xchg
xorl
ljmp
push
and
mov
jmp
lret
and
xchg
adc
sbb
sub
popl
inc
mov
enter
push
sbb
inc
fmull
push
pushf
dec
push
adc
and
push
leave
loope,pn
repnz
sbb
pop
insb
pusha
xor
lahf
sbb
or
sbb
adc
mov
stos
imul
add
push
addr16
jg
push
call
bound
pop
js
mov
int3
out
cs
out
lret
sbb
push
mov
xchg
adc
sub
dec
out
cld
jge
stos
es
jno
testb
pop
addl
cs
cmp
rcrl
xchg
addr16
cli
mov
mov
inc
rcll
ljmp
ficompl
push
pop
das
lods
jae
adc
sti
dec
and
int3
add
add
lret
sbb
sarb
out
aaa
or
int
or
pop
mov
test
ret
inc
inc
popf
sbb
scas
test
outsb
xor
adc
aam
fldcw
aam
sahf
mov
jae
out
or
test
xchg
mov
mov
add
pushf
mov
xchg
in
out
push
out
xor
mov
push
jns
loop
mov
cmp
hlt
dec
push
lods
std
ret
sbb
push
and
dec
outsb
sbb
mov
cmp
mov
xorb
cli
and
jp
fcom
sbb
mov
test
shlb
push
jle
add
scas
push
or
inc
outsb
int3
dec
loope
adc
dec
xchg
test
push
ds
cmp
mov
mov
cld
sub
jmp
scas
adc
mov
push
ficomps
aas
mov
jl
les
shrl
jmp
enter
inc
and
lret
loopne
nop
mov
shlb
gs
and
stc
or
adc
pop
rcrl
stc
sbbb
dec
out
popf
sarl
stos
push
cmp
fnsave
loopne
stos
cltd
and
dec
into
cwtl
xchg
add
ret
xor
divb
movsl
sub
enter
out
enter
push
jno
mov
jne
sti
aas
clc
cld
mov
sub
into
stos
imul
mov
ror
mov
arpl
xchg
cmpsb
xor
lcall
test
test
outsl
mov
aad
pop
fstl
stos
xchg
mov
loop
dec
add
push
sub
scas
les
hlt
fidivs
lret
seto
push
mov
aaa
jnp
lcall
push
shrb
inc
filds
jp
fmul
fs
inc
lods
push
push
xor
push
and
lods
enter
lods
push
cmp
mov
xor
mov
pop
imul
pop
dec
jns
xchg
sarl
xchg
sahf
fcoms
aas
lods
jecxz
pop
or
and
lods
adc
sbb
imul
icebp
fbstp
push
test
xlat
pusha
lds
inc
jle
data16
popw
enter
adc
lahf
ds
outsb
sbb
ret
adc
shrb
sbb
pop
es
fs
push
into
jns
add
sbb
mov
in
mov
xor
fmull
push
movsl
jg
cli
int
test
xor
nop
test
sub
sub
stos
aas
scas
xchg
xor
imul
adc
pusha
xchg
pushf
pop
icebp
mov
fsubr
sbb
or
outsl
mov
dec
imul
dec
mov
inc
lahf
mov
pop
mov
cmpsb
aam
pop
and
test
jmp
cmp
jmp
and
add
imul
jnp
cld
push
out
js
mov
pop
ss
jmp
lock
and
and
daa
jns
cmp
or
mov
cmp
pop
inc
push
xchg
movsl
mov
ss
lds
sub
repnz
js
out
mov
and
add
movsl
and
inc
loopne
mov
mov
pop
adc
mov
aaa
pusha
sbb
dec
data16
test
add
out
add
ficoml
cld
pop
and
repz
bound
xlat
and
dec
push
jmp
int3
jecxz
xor
mov
test
jno
cmp
sahf
or
mov
lock
mov
jmp
sbb
das
rol
fnstcw
subb
xchg
repz
push
or
inc
lahf
dec
pop
sub
mov
jge
es
mov
enter
repnz
xchg
fstp
gs
jecxz
aad
fsub
stos
mov
cmpsb
addr16
mov
scas
mov
ret
fcomip
lods
or
push
fiadds
xchg
dec
loop
sti
add
xchg
jno
jae
ja
xchg
sbb
and
loopne
mov
mov
xor
sbb
sahf
shll
fnstenv
pop
daa
lret
adc
les
sbb
mov
loop
jmp
popf
push
pop
adc
iret
outsl
jo
pop
or
mov
aaa
or
jns
jbe
lret
test
jno
cmpsl
add
jno
sub
sahf
sti
pop
imul
pop
pusha
nop
in
sbb
in
std
lahf
push
or
push
pop
decb
pop
in
dec
movsb
jl
daa
jno
mov
mov
pop
mov
xor
xor
arpl
lret
in
daa
sbb
jl
dec
mov
xor
adc
pop
lock
inc
imul
lods
repnz
iret
sub
lds
inc
lret
mov
mov
cld
fmuls
pop
scas
cmp
aaa
fs
push
and
mov
fisubrl
push
mov
lahf
add
cli
test
fs
push
push
loop
mov
pop
and
xchg
mov
cmp
add
je
dec
ret
leave
and
sbbl
pop
mov
scas
fs
rol
xor
dec
push
push
sub
das
jmp
mov
inc
or
das
mov
in
aaa
loope
test
jge
ljmp
into
lret
lcall
fs
in
mov
orb
push
lret
imul
pop
lods
enter
enter
mov
sub
shlb
sbb
xor
mov
and
jge
shll
sub
xchg
push
mov
add
dec
adc
es
jmp
inc
sti
fnstcw
push
lock
inc
mov
push
sub
sbb
mov
add
jge
dec
out
ret
out
mov
push
jmp
ja
popf
mov
ret
sti
jno
hlt
mov
outsb
pop
repz
rcr
dec
push
pop
dec
pop
mov
loope
xor
ds
ljmp
cli
fcmove
insb
jmp
jge
mov
call
mov
cld
push
mov
pushf
lock
sbb
mov
inc
xchg
sub
push
sbb
insl
pop
adc
bound
in
mov
push
data16
mov
push
push
inc
mov
in
inc
mov
call
push
mov
sbb
sbb
push
aas
scas
fcomps
and
aas
dec
add
bnd
sbb
dec
push
add
inc
push
addl
push
notb
aad
pop
mov
aas
clc
push
dec
leave
leave
leave
xchg
or
pop
das
test
test
ja
jge
loope
pop
xchg
push
xchg
test
cmp
lcall
jae
bound
jmp
and
sbb
add
sbb
sub
loop
loopne
jne
lods
push
arpl
xorb
add
push
nop
pop
adc
in
and
mov
fwait
xchg
mov
loop
cmp
xchg
inc
inc
scas
cmp
pop
movsb
cltd
lcall
fcomi
adc
mov
cmp
inc
testb
inc
xchg
stc
insl
sbb
clc
mov
sbb
cmpb
or
and
and
mov
arpl
icebp
cmp
aaa
int
push
pop
pop
push
test
jns
clc
in
pop
cmp
mov
push
jmp
mov
mov
jo,pn
push
mov
pop
add
cmp
in
repz
leave
mov
ficoms
and
add
jno
mov
or
lret
ljmp
cmp
scas
clc
in
mov
movsb
arpl
or
stos
xchg
es
push
push
cli
stc
lods
lcall
movsl
jg
or
cmp
adc
xchg
out
sbb
push
icebp
mov
aaa
sti
mov
mov
pop
cmp
mov
mov
cmp
push
jge
jno
into
in
clc
push
pushf
negb
sbb
xchg
mov
dec
add
and
js
data16
in
stos
fsts
jg
popa
ds
inc
push
nop
in
and
inc
and
mov
call
cmp
jle
aas
inc
lods
jl
push
jl
ljmp
int3
fisubrs
xchg
and
push
mov
cmp
insb
enter
jno
movsb
sub
inc
rcrl
aad
dec
add
lea
sti
inc
js
test
xchg
or
insl
stos
scas
fidivrl
fcompl
aaa
cmc
dec
lock
mov
push
or
dec
fcomp
icebp
push
inc
pushf
add
or
xor
out
fucomip
iret
cmp
popf
dec
sbb
jmp
adc
mov
pop
push
push
lods
rorb
fcmovbe
fucomip
pop
jmp
div
fucomip
aad
int3
xlat
rol
insl
es
inc
jno
lods
andb
adc
sub
jo
sbb
xchg
push
cmp
ret
inc
xchg
and
pop
cli
or
sbb
ss
xchg
jg
jae
inc
in
jo
leave
fisubs
or
mov
cmpsl
jnp
addr16
mov
dec
orl
mov
sbb
dec
sub
inc
mov
lret
push
pop
lods
mov
pop
jle
mov
pop
bound
sbb
addb
cmc
aaa
fs
mov
into
add
jmp
adc
jl
fstps
fildl
mov
pop
push
mov
sub
sub
jo
inc
psrlw
rorb
sarl
xor
into
mov
mov
jbe
lods
sub
pop
push
mov
mov
scas
or
test
inc
sub
dec
mov
push
movsb
adc
jne
cli
cmp
xchg
rorb
dec
rcrl
xlat
js,pn
and
mov
inc
orb
lds
mov
cmpl
add
mov
inc
jno
mov
xchg
js
ficompl
ret
scas
jp
sbb
push
aam
adc
jl
fsubrl
pop
push
scas
ss
pop
es
push
inc
mov
mov
jb
inc
lret
test
shr
and
xor
xor
stos
cli
in
lods
mov
cmpsl
add
adc
dec
shll
iret
and
jo
imul
add
daa
int
cwtl
xchg
adcb
test
popf
mov
cli
mov
pop
cmp
sub
push
and
push
pop
pop
and
mov
xor
or
mov
sbb
mov
mov
ret
inc
jbe
pusha
cwtl
mov
xor
fldl
fisubl
das
mov
nop
fnstsw
movsl
cld
dec
ja
inc
cmc
lods
aam
or
in
inc
mov
add
cmpsl
fnstcw
jbe
xchg
mov
imul
adc
lds
push
repz
fistl
or
or
stos
mov
pop
cmp
dec
outsl
cmp
stos
lock
cmp
inc
xor
das
jge
test
push
adc
stc
xor
lret
push
loope
adc
push
mov
test
negl
icebp
dec
add
fwait
mov
js
ss
push
fildll
test
or
pop
push
jecxz
repz
cmpl
and
hlt
clc
out
sub
cmc
sub
sti
jge
cmpsb
add
jg
fstl
subb
pusha
addr16
mov
andb
xor
push
sbb
jnp
aad
xchg
in
es
xlat
lea
orl
imul
scas
inc
mov
xchg
xchg
stos
lret
sub
aad
mov
pop
cmp
inc
repz
inc
sar
push
push
inc
mov
cs
and
dec
mov
mov
divb
sub
ljmp
xchg
adc
push
inc
call
lahf
lea
push
arpl
dec
inc
cmp
out
mov
pushf
rcr
jecxz
cmp
push
enter
cmpsb
in
fnsave
inc
adc
pop
xchg
sbb
push
lret
push
and
adc
fdivl
add
jae
out
insl
pop
ljmp
cmp
ds
and
js
sbbb
push
mov
mov
ja
ficoms
xor
rcrl
push
popf
stc
jl
jp
test
ss
adc
mov
lahf
push
scas
outsb
fsubl
mov
cmp
jmp
mov
mov
sti
push
or
arpl
mov
mov
scas
movsb
call
pop
mov
cmp
jmp
pop
cmp
cmp
mov
jmp
dec
push
cmp
mov
rolb
out
test
adc
test
addr16
ret
dec
outsb
mov
test
out
dec
cmp
jecxz
idivb
cmp
xor
scas
and
push
mov
fsubrs
push
jmp
mov
mov
cmovno
rorb
lahf
inc
push
imul
sub
or
lcall
ds
cmp
fsubrl
pusha
fcmovnbe
movsb
push
jbe
neg
or
mov
and
stos
or
iret
das
lods
ja
popa
in
xor
or
lret
sub
fisubs
subb
and
adc
test
or
jmp
enter
movsb
das
sbb
xor
cwtl
maxps
dec
or
mov
test
push
xor
mov
or
mov
lahf
int
push
test
push
in
aad
cmpsl
loopne
fwait
outsb
bound
and
sbb
dec
sub
lods
mov
xlat
jb
in
mov
and
sbb
push
jae
std
pushf
xchg
xor
decb
mov
imul
sub
fsubr
dec
jmp
jae
adcl
into
xor
xor
push
test
mov
arpl
int3
push
popa
sti
and
push
cltd
mov
cs
stc
pushf
mov
lods
add
inc
fcompl
es
sbb
lds
push
add
ds
fimull
popf
lret
dec
cmp
cli
and
mov
hlt
push
sbb
lcall
rcl
inc
loope
loop
and
adc
stc
and
jae
mov
lret
div
dec
xlat
lcall
insl
ds
adc
movsl
rdtsc
cmp
adc
xlat
ss
mov
xor
pop
pop
xlat
cmp
jp
out
xchg
cmpsl
js
and
and
xchg
test
movl
sti
aaa
sbbb
fistps
push
aam
mov
xchg
xchg
out
jmp
les
sbb
jle
jge
inc
add
lods
sbb
lods
ficompl
ja
pop
fsts
sbb
xchg
stos
mov
fisttpll
adc
xor
bound
sahf
jmp
and
notl
mov
pop
pop
loopne
mov
sub
jo
pop
pop
cld
xchg
or
xor
jge
pop
ss
mov
add
popa
mov
mov
adc
mov
pop
pop
mov
fldt
insb
xlat
hlt
cmc
jbe
mov
push
mov
adcb
inc
out
cmpsb
jb
stos
adc
fwait
xor
xchg
xor
jge
icebp
pop
sbb
and
add
imul
fcompp
pop
or
push
inc
lret
aam
outsl
ret
push
xchg
push
stos
or
hlt
xor
xchg
xchg
mulb
mov
and
icebp
pop
mov
add
fdivrl
xor
or
push
add
int
pop
jb
incb
add
xor
outsw
xchg
mov
les
pop
jo
fdivrp
cmpsl
fadds
xchg
insl
mov
aas
loopne
cld
push
push
ret
sbb
aam
insb
test
aad
mov
imul
xor
sbb
sbb
ficoms
ss
xlat
fimuls
out
inc
and
xchg
inc
mov
sahf
adc
in
shrl
shll
mov
mov
push
mov
push
fimuls
add
sub
cwtl
lret
pop
pop
ds
int
loope
je
and
add
icebp
test
jle
mov
sub
push
notl
iret
hlt
jle
xchg
cld
sti
adc
iret
sbb
sub
lds
lcall
in
mov
hlt
mov
ret
cmp
inc
pop
sbb
add
sub
pop
das
mov
sub
sbb
in
bound
icebp
pop
cmpsl
push
mov
loopne
sbb
std
fcompl
sbb
add
or
mov
repnz
sbb
fsts
data16
sbb
mov
jge
mov
push
and
adc
sub
inc
sarb
mov
add
and
fcomp
cld
sbb
adc
aam
mov
cli
test
jle
add
and
jbe
sbb
mov
in
or
pop
cli
out
xor
xor
cmp
addr16
andb
mov
hlt
movsl
fsubl
xor
add
nop
notb
adc
and
jns
or
jl
mov
faddl
enter
jmp
xchg
xchg
hlt
dec
lds
pop
mov
xor
jne
scas
push
ret
mov
out
pushf
mov
into
push
rcrb
xor
pop
mov
mov
sarb
call
cmp
ss
mov
ror
movsb
xchg
mov
sbb
add
ds
test
sbb
adc
fmuls
loopne
mov
mov
out
fwait
push
shlb
icebp
and
out
jge
aam
fldl
int
test
add
ljmp
jnp
psadbw
jmp
subb
cmc
xor
sub
lahf
cmpsb
mov
push
scas
lret
xchg
jp
hlt
aam
jno
popa
icebp
pop
cmp
mov
inc
and
mov
pop
pop
adc
fwait
add
pop
shlb
shrb
push
inc
xchg
dec
xor
sahf
push
xor
movsb
mull
jo
push
fstps
dec
insb
sub
xchg
xchg
push
ret
ja
dec
xchg
fucomp
stos
dec
push
std
push
xorl
jmp
xchg
and
mov
sbb
js
loop
fadds
outsb
clc
popf
mov
pop
roll
data16
mov
ja
inc
aam
test
push
jp
mov
mov
xchg
inc
std
jae
and
andb
fwait
mov
pop
mov
and
mov
cmp
shr
xchg
ljmp
add
loope
lea
inc
and
mov
scas
or
pusha
sbb
daa
cli
adc
frstor
in
mov
and
mov
cmp
or
sbb
adc
sbb
cwtl
push
adc
push
dec
dec
add
xchg
or
or
lret
and
stos
daa
xor
add
xchg
mov
cmpsb
push
cmp
arpl
jecxz
mov
sbb
sbb
xor
lahf
je
jmp
adc
inc
ficomps
es
mov
add
dec
push
mov
cmp
push
fmull
xchg
adc
enter
inc
nop
add
movsl
out
loop
mov
sub
cmp
push
pop
adc
dec
mov
jle
fs
push
push
loop
dec
stos
insb
cmpsb
fcom
cmp
xchg
mov
cwtl
xor
iret
cmp
jbe
inc
dec
inc
test
movdqa
repnz
ret
jmp
push
fwait
repz
push
stos
mov
or
aas
int3
and
inc
cmp
xor
jns
adc
outsb
pop
push
inc
mov
pop
ret
xor
fisubs
mov
nop
mov
int
bound
icebp
fistpl
mov
scas
test
push
shrl
mov
dec
pusha
push
push
idivb
jl
movsl
dec
sbb
test
lret
push
add
mov
ds
inc
fstl
mov
test
jne
dec
mov
repnz
nop
call
mov
int3
insb
xchg
cmpb
push
sbb
mov
xchg
and
push
push
push
jno
test
divb
test
or
xchg
mov
loope
xchg
lcall
mov
ret
xchg
roll
test
or
pop
and
loope
in
sbb
sbbl
inc
sbb
inc
ljmp
add
dec
test
lods
mov
lcall
je
mov
test
dec
or
push
and
mov
rclb
cmpsl
outsb
mov
or
or
push
sbb
enter
xchg
inc
arpl
daa
test
test
add
dec
inc
adc
xchg
jmp
xchg
subb
cmp
dec
insl
pop
in
test
sti
and
push
neg
addr16
dec
cwtl
sti
popa
jp
fs
xlat
stos
out
das
out
es
mov
in
jb
push
xchg
lods
mov
xor
lds
cmp
dec
testl
pop
mov
pop
xchg
jne
loopne
call
popf
sbb
imul
outsl
pop
pusha
mov
mulb
jb
xchg
pop
pop
push
subl
jns
test
loope
fsubs
outsl
aas
dec
int
clc
mov
notb
jb
jle
cli
cmp
js
roll
mov
fdivrs
xchg
in
aas
xchg
int3
aad
xor
outsl
js
repz
push
stos
fs
outsl
ret
or
mov
pop
mov
repnz
out
and
leave
enter
xlat
sub
push
and
rolb
and
cmc
inc
fwait
adc
inc
xor
xor
mov
insb
daa
dec
ss
mov
fwait
int3
push
mov
push
lods
mov
pop
loop
xchg
mov
loopne
adc
cmpsl
xor
cltd
xchg
jo
mov
in
mov
or
ja
pop
stos
push
daa
std
add
fisttpll
xchg
lret
call
jae
push
idivl
das
dec
shlb
jl
xor
mov
xchg
sub
jp
jne
int3
lret
or
pop
mov
or
xchg
push
sarl
jb
lds
scas
sub
jbe
cld
insl
inc
rcl
cmc
aad
xchg
icebp
lret
nop
or
pusha
adc
movsl
je
icebp
adc
mov
push
rcll
mov
ret
mov
lcall
or
xchg
jne,pt
or
adc
jecxz
fstpl
dec
mov
je
adc
jno
sub
ret
imul
sbb
cmp
ds
inc
popf
mov
lds
ret
jns
out
jmp
test
sti
lret
add
in
sqrtps
push
loope
jp
xchg
lds
in
sbb
mov
cmpl
push
int3
push
enter
repnz
sahf
inc
popa
ja
mov
cld
shlb
sbb
lret
lahf
jnp
loope
push
or
repz
shll
pusha
sub
adc
and
movswl
sarb
or
inc
insb
cmpsl
inc
outsl
pop
xchg
cmp
adc
push
sub
cmp
mov
leave
iret
xor
inc
scas
push
loope
jecxz
and
sub
or
js
and
pop
xchg
fdivrp
sub
push
mov
shr
xchg
addr16
outsl
mov
push
sub
hlt
jbe
jge
sti
push
push
sarl
cli
ja
es
sbb
pusha
push
mov
aas
sub
cs
into
rolb
jne
mov
int3
outsl
add
push
mov
pop
mov
int3
or
cwtl
popa
in
mov
mov
rorl
out
ljmp
dec
push
int3
add
push
ljmp
ret
addr16
xchg
sub
and
jmp
aas
inc
mov
testl
jno
mov
out
push
pusha
push
sbb
pop
in
or
cmp
adc
ficoml
mov
pop
sub
cmp
jmp
jo
dec
push
fsubl
mov
repz
adc
pop
mov
xor
push
fldenv
add
xchg
cs
inc
cltd
jns
imul
or
push
repnz
mov
cmp
mov
je
adc
pop
out
subl
xor
mov
xchg
iret
jo
mov
push
mov
rclb
ficoml
push
xor
xchg
lods
mov
mov
scas
inc
push
hlt
mov
pop
es
mov
xchg
jmp
rclb
mov
dec
cmp
rcll
jo
dec
jo
in
push
daa
push
push
push
out
xor
or
inc
jbe
int
in
ret
jo
push
xor
cmp
loop
jb
fwait
jecxz
mov
mov
ljmp
inc
xor
xor
cwtl
push
bound
ljmp
ret
fadds
dec
mov
out
scas
les
in
fsub
bound
jl
mov
mov
add
push
orl
cmp
cmp
mov
push
cld
faddp
cltd
mov
fisttpl
mov
loopne
out
imul
int
mov
mov
rorb
insb
lret
fdivl
mov
lahf
shrl
mov
pop
or
movsb
push
or
push
mov
imul
icebp
pusha
je
jne
popa
sub
and
mul
pushl
ljmp
inc
mov
push
leave
mov
dec
dec
pop
mov
sub
adcb
imul
add
mov
pop
dec
jmp
inc
pop
enter
sub
add
jge
pop
jp
add
aad
xchg
test
and
xchg
inc
mov
xchg
mov
cmp
out
push
dec
cmp
hlt
mov
std
mov
xchg
lds
push
lock
mov
mov
movsl
fdivs
cmp
test
addr16
inc
adc
push
rorb
hlt
ds
fldl
push
incb
pop
or
sub
pushf
aas
insb
loope
out
cmp
pop
fnsave
sub
jmp
mov
imul
ja
icebp
stos
or
je
jbe
sub
out
xor
push
mov
out
stos
pop
dec
repnz
lods
mov
sbb
jns
adc
inc
xor
cmp
jmp
jmp
xor
push
inc
or
lahf
imul
dec
imul
les
adc
dec
jge
push
aas
mov
decb
outsb
out
pcmpgtd
mov
mov
inc
jnp
cli
mov
adc
xchg
clc
aad
out
mov
sbb
pop
adc
int
insl
cli
push
adc
adc
mov
test
mov
daa
dec
shr
loop
loopne
test
push
push
rcr
addr16
inc
fdivrl
jmp
sbbl
je
imul
dec
sbb
popf
jmp
mov
push
sarb
ljmp
sub
or
fdivs
hlt
insb
dec
es
or
mov
push
xchg
pop
mov
xor
lock
je
cltd
ja
stos
sbb
sub
pop
scas
and
pop
jbe
addb
mov
cmpsb
dec
ja
jo
adc
loopne
les
cmp
fldl
push
movl
stos
sbb
xor
dec
sub
lea
popf
testl
cmpsb
jne
inc
jo
adc
push
push
jle
movsl
loope
shll
xchg
nop
add
imul
movsb
push
xchg
cmpsl
pop
xor
das
cwtl
mov
int
lret
sti
out
mov
es
enter
jg
pop
outsb
cmp
in
out
inc
and
pop
mov
iret
mov
jno,pn
not
aaa
mov
popf
jnp
addr16
notl
cmp
pop
sbb
xchg
not
lahf
push
popa
inc
in
out
mov
outsb
hlt
idivl
xor
jbe
outsl
adc
jns
push
xor
fwait
mov
jno
test
xchg
push
push
fisttpl
rcll
push
call
mov
lock
ljmp
cmp
dec
push
enter
cltd
adc
jno
popf
pushf
sbb
lret
imulb
test
popa
ret
outsl
dec
std
shlb
sub
cwtl
or
cltd
sahf
xchg
add
add
push
ss
cmc
dec
inc
sarl
mov
pushl
push
push
adc
push
dec
leave
cmc
pop
fisubs
push
bound
repz
mov
scas
xor
pop
push
jne
or
divl
fistl
inc
pop
dec
imul
cmpsb
cld
xchg
xor
xchg
call
imul
adc
mov
pop
dec
xor
xor
mov
js
pushl
mov
call
lods
push
in
jp
jo
sahf
inc
jo
out
mov
cmp
mov
xlat
inc
sbb
inc
xchg
push
jecxz
fwait
jg
stc
mov
rol
movb
stos
jno
push
aas
out
mov
sbb
retw
scas
insb
xchg
stos
xchg
mov
fmul
xor
xchg
pop
fstpl
or
mov
pavgw
sub
int3
cs
mov
movsb
adc
ret
mov
or
push
test
push
mov
adc
adc
fwait
test
test
int3
fs
mov
ss
mov
pop
cmpb
and
xor
sub
mov
les
rolb
inc
xchg
das
movsb
addr16
add
cmp
fdivrp
loop
jnp
or
insb
pop
nop
insb
mov
ror
dec
pop
jno
bound
in
imul
push
mov
push
jo
enter
inc
sbb
test
ja
enter
mov
js
nop
roll
fildl
fidivrs
mov
clc
push
fcomp
imul
inc
in
cmp
pop
mov
lret
bound
push
adc
in
test
popw
repz
push
pop
mov
push
add
adc
fwait
lods
mov
add
fdivl
popf
adc
mov
and
mov
aam
jbe
push
pusha
mov
dec
or
and
imul
sub
inc
sbb
xor
push
mov
test
add
dec
sbb
push
shl
mov
stc
pop
clc
mov
insb
xor
mov
rcll
fwait
xor
hlt
mov
pop
js
insb
push
fcoms
mov
in
shrb
mov
sbb
aas
jno
mov
outsl
or
insb
data16
das
loopne
ss
movsl
ss
ljmp
arpl
push
fcom
pop
or
es
orb
insl
outsl
stos
pop
and
or
cmp
ret
aaa
xchg
pop
pop
subl
inc
mov
cmp
and
fs
arpl
fs
cmp
test
insl
data16
loopne
dec
repz
fcomi
fs
adc
ds
sub
rcl
adc
rcl
xor
xor
imul
aas
xchg
xchg
mov
cwtl
jb
dec
jg
adc
nop
push
test
xor
stos
mov
pop
and
dec
dec
and
add
jno
dec
int
adc
adc
test
cmp
nop
dec
pop
icebp
test
lods
ljmp
scas
rcl
push
and
pop
int3
clc
in
sub
int
inc
nop
jo
pop
sub
test
push
pushw
aaa
lret
push
jns
sbb
fidivs
sbb
outsb
sbb
das
test
push
shr
xchg
pop
jne
mov
bnd
jne
and
popf
xchg
gs
push
in
mov
and
js
aaa
ss
pop
loop
adc
outsl
int3
sarb
sbb
insb
inc
mov
pop
xor
fptan
sti
mov
cmp
lock
scas
sbb
into
inc
int3
mov
outsb
insl
or
fucom
jae
and
mov
in
out
cld
sbb
sbb
or
lods
int
pop
sub
mov
and
cld
or
je
xchg
dec
ds
imul
call
sti
mov
mov
adc
call
sbb
je
test
pop
outsl
cmp
stos
add
repnz
mov
out
repnz
popa
mov
repz
and
add
xchg
jmp
mov
xor
add
xor
outsl
bound
in
xchg
and
shr
scas
push
jno
nop
adc
sbb
xor
add
divl
push
xchg
aas
sub
or
mov
test
fldcw
jl
sbb
flds
inc
test
mov
inc
adc
inc
scas
push
iret
push
dec
pop
sti
xchg
movsb
push
sbb
adc
xor
adc
ret
psrlw
jae
push
mov
out
out
sub
sbb
xchg
mov
jmp
fwait
enter
jg
push
sub
xlat
sahf
jns
dec
sbb
scas
xchg
cmpsb
idivb
lea
cs
sbb
mov
stc
jb
fcoml
repnz
jbe
jne
stc
lods
adc
push
push
jp
ret
jl
fcomi
add
mov
bnd
jge
sbb
mov
adc
shr
adc
ret
or
sahf
push
mov
mov
loopne
jl
jg
pop
push
mov
test
mov
nop
add
pushf
pop
jo
and
mov
lret
stos
sbb
xchg
lock
adc
add
xchg
lret
cmpb
push
mov
xor
ret
cmp
xchg
sub
jns
lods
mov
test
hlt
mov
lods
jnp
arpl
push
add
xchg
int
pop
adc
movsl
xorl
stos
fs
cmp
push
imul
in
jecxz
jns
jle
test
scas
cmc
mov
inc
cwtl
pop
scas
inc
mov
xor
inc
cmp
sub
mov
add
jae
add
mov
pop
in
in
out
cwtl
or
mov
imul
sbb
repnz
movb
loope
in
jb
jl
push
push
inc
cmp
add
pusha
out
push
out
bound
fwait
and
cmpsb
mov
sub
push
pop
mov
dec
sub
sahf
fucomip
scas
les
nop
dec
jp
cs
push
mov
stc
xchg
and
jmp
mov
mov
lahf
cmovne
push
scas
xor
addb
adc
fistpll
xchg
cltd
lock
push
push
jne
daa
xor
xchg
popf
shlb
fnstsw
roll
icebp
stos
cmpl
testl
aam
xchg
sub
nop
dec
jb
pusha
fwait
lret
mov
cmpsb
add
imul
jmp
push
add
loop
pop
xchg
pop
adc
xor
andb
inc
cmp
jp
out
xchg
mov
les
imul
sarl
scas
pop
hlt
addps
addr16
icebp
fs
ss
int3
dec
loope
out
paddb
push
jecxz
pop
pusha
std
ds
lods
sub
icebp
iret
data16
mov
or
fcoms
mov
pop
dec
mov
sub
pop
in
adc
adcl
mov
pusha
pop
inc
or
cwtl
sbb
daa
and
movsb
inc
out
into
and
xchg
and
cmp
push
jmp
xor
pop
fs
addr16
xchg
sub
pop
push
jae
jae
sub
adc
jbe
fnstsw
cmp
xor
jg
pop
int
std
fsubl
cmp
sub
or
pusha
xchg
stos
sub
andb
loopne
nop/reserved
lods
mov
push
aaa
mov
sbb
notb
ds
and
add
xchg
jmp
push
pop
xchg
orb
test
mov
jno
sbb
movsb
dec
aaa
loop
mov
pop
repnz
repnz
add
ficoml
pop
int
add
jns
mov
xchg
dec
xchg
ficoms
leave
mov
lret
sub
addl
inc
mov
inc
fnstsw
and
aas
popa
lea
dec
add
xlat
call
addr16
movsb
or
push
stos
int3
jp
fiaddl
adc
rolb
jnp
dec
popf
test
and
cmp
data16
inc
cld
push
fwait
lea
je
jae
popf
mov
add
xor
ja
mov
or
test
bound
push
xor
adc
jbe
inc
int
ljmp
or
lds
xchg
in
sbb
cmpsl
fists
iret
add
adc
insb
xchg
arpl
inc
add
cli
or
stos
icebp
decl
adc
mov
jecxz
jge
fnstcw
pop
fwait
xor
in
mov
mov
out
fcmovbe
mov
push
scas
ljmp
sbb
jmp
pop
xor
and
add
ret
sub
cs
popf
mov
mov
aaa
fdivl
aas
xchg
adc
sbb
lods
cltd
inc
std
sahf
sbb
sbb
xor
pop
pop
jecxz
push
dec
mov
test
jnp
ss
inc
imul
pop
sbb
inc
push
pop
stos
ffree
fmuls
inc
cmp
pop
sub
in
cmpl
adcb
xchg
pop
xor
xchg
int3
xor
dec
cwtl
mov
dec
inc
add
cltd
out
loop,pn
inc
sbb
push
xchg
popa
jno
pop
inc
cwtl
inc
mov
imull
fstpl
jns
push
sbb
jbe
push
xor
jns
mov
adc
int3
cmp
xchg
sbb
and
ret
xor
js
testb
cmp
add
jecxz
in
cld
cmp
push
jbe
lods
or
call
sbb
scas
scas
shlb
and
lods
sarb
or
cmp
dec
dec
jo
loope
std
int3
jnp
xchg
sahf
or
mov
outsl
push
jp
or
push
insb
push
dec
mov
jno
or
mov
cld
dec
in
and
shr
out
pop
mulb
push
jb
and
or
stc
and
pop
pop
ljmp
dec
jns
push
or
in
out
cmp
jmp
jg
loopne
jle
inc
dec
ret
rclb
or
sbb
test
divl
loopne
sbb
or
out
insb
imul
push
out
int3
ret
dec
cmp
in
mov
mov
lahf
cltd
repz
mov
lea
outsl
aam
dec
roll
xor
cmp
int3
inc
arpl
jge
out
cmpsl
shrl
lock
mov
pop
fcompl
or
fnstenv
xchg
and
xor
mov
jae
mov
mov
je
imul
lret
lahf
mov
xor
adc
out
outsl
sub
aad
mov
out
cmpb
fcomip
pushf
bound
aas
or
mov
das
mov
ret
xchg
stos
or
mov
xchg
mov
fnsave
pop
out
fistpl
rolb
dec
lods
xchg
rol
mov
mov
mov
gs
mov
pop
or
fucom
out
adc
xchg
xchg
insb
sub
rolb
hlt
sub
sub
jnp
xchg
sahf
bnd
mov
lock
sar
push
push
push
xchg
fs
xchg
incb
scas
inc
jb
and
es
fwait
insl
cmpsb
pop
fisubl
adc
add
jo
pop
ror
shl
xchg
mov
faddl
cmp
jecxz
das
push
fcoml
stos
inc
xor
jno
push
icebp
cmpb
mov
sub
push
mov
push
fsubr
push
xchg
cs
test
sbb
push
mov
add
shl
test
jno
and
in
pusha
jb
leave
inc
pop
jmp
mov
stos
sub
scas
sub
adc
sbb
sub
dec
add
sbb
push
mov
cmp
pop
repnz
xor
pop
test
jmp
mov
test
in
clc
add
jg
cmpsl
jns
mov
idiv
ret
hlt
push
mov
dec
cmp
int
into
jnp
push
inc
mov
mov
jns
inc
xlat
test
jnp
fs
into
in
fs
mov
cmp
scas
je
sbb
cltd
adc
cmp
cmpb
mov
jno
movsl
ficoms
pop
pop
sub
dec
jl
repz
cmp
hlt
and
and
push
sti
or
cmpsl
cli
mov
out
outsb
xor
mov
pop
popf
push
aad
inc
in
add
sub
std
movsb
fwait
nop
sbb
jne
mov
xchg
mov
enter
and
repnz
xor
dec
mulb
xchg
sub
and
mov
orl
insb
inc
and
leave
cmp
fldt
jl
adc
add
scas
xchg
or
and
pop
std
push
jae
xchg
ljmp
xor
stc
mov
pop
pop
repz
adc
inc
jne
rcl
test
fwait
jl
or
push
leave
mov
jns
mov
leave
push
cmp
rclb
push
push
popa
sub
add
iret
jnp
fdiv
in
or
fs
push
outsb
adc
test
mov
dec
ret
inc
in
jl
mov
les
add
cmc
fs
imul
mov
mov
pusha
mov
icebp
sub
dec
cmp
inc
adc
push
xchg
lret
pushl
repz
ret
push
cld
pop
mov
and
jmp
enter
or
int
addr16
lock
mov
or
outsl
in
inc
jbe
comiss
rcrl
mov
scas
pop
imul
jg
push
out
ret
and
das
sbb
or
xchg
lock
jb
lds
adc
fwait
lods
test
repz
mov
lods
add
fxch
push
dec
bnd
outsl
in
fidivrl
xchg
bound
outsb
mulb
testb
adc
pop
cmp
jp
xchg
shl
rcrb
jns
cmp
out
das
push
cs
cmp
test
rolb
xchg
stc
stos
stc
mov
es
mov
or
shrl
repz
push
nop
cmp
ror
nop
loopne
and
shll
xor
jecxz
push
repnz
mov
cmp
iret
cld
mov
sahf
xor
push
je
inc
lcall
ficompl
dec
xor
clc
mov
movsb
xor
aas
dec
push
mov
test
inc
and
ret
sub
out
cmp
cmpsl
mov
int
lcall
and
pop
je
mov
aas
or
mov
dec
dec
or
mov
rclb
mov
gs
les
cmp
fcoms
fsub
xor
rcl
pushf
movsl
das
test
mov
cmpsl
pop
or
das
xchg
cmpl
ja
or
fcompl
or
in
or
imul
ret
loope
xchg
xor
daa
idivl
jnp
nop
sbb
aas
mov
popf
popf
test
sub
int3
jnp
inc
push
insb
hlt
rcll
mov
fcmovnbe
xchg
cmp
pop
push
arpl
sbb
insb
jge
jne
adc
xchg
lock
jp
idiv
cmpsl
nop
leave
pop
notl
test
out
pop
es
pop
clc
es
push
lcall
nop
push
sub
scas
outsb
jb
fsubl
jb
test
cwtl
push
inc
scas
ror
scas
aam
cmp
ss
cli
pop
scas
cwtl
fisubl
scas
sub
mov
adc
roll
repz
jle
mov
or
jno
loope
mov
mov
and
xchg
lods
jg
dec
dec
push
mov
mov
outsl
inc
lock
adc
movd
scas
jne
cli
or
add
or
mov
jecxz
push
mov
and
dec
jge
xchg
sub
add
mov
repnz
adc
decb
lock
jnp
adc
xor
add
push
dec
cwtl
xor
outsb
pop
xchg
mov
pusha
cmp
fstp
or
sti
sbb
pop
dec
jo
bound
adc
jae
popf
ret
in
dec
push
lock
push
adc
leave
call
mov
mov
or
fucomip
mov
inc
int3
cmp
repnz
loope
xor
subl
mov
sub
sbb
iret
mov
mov
pop
sbbl
jl
fidivs
mov
dec
enter
js
clc
in
xor
inc
punpckldq
jle
adc
movsl
dec
cltd
lods
in
xor
cmc
sub
pop
fstpt
mov
clc
aam
stos
dec
xor
popl
mov
shll
jle
push
jg
mov
movsb
cmpsl
shrb
xor
jnp
dec
in
xor
jp
pushl
out
xor
shll
imul
loope
inc
xchg
rol
mov
mov
js
sbb
push
push
test
mov
stos
xchg
fwait
mov
cmpsb
fwait
xor
and
lret
sub
es
jmp
mov
adc
lods
es
fcomps
int3
push
mov
and
sbb
mov
pop
mov
sub
push
push
mov
cmp
mov
dec
clc
xchg
loope
movsb
mov
in
cltd
mov
adc
stos
jmp
test
cld
cli
dec
lock
inc
pusha
xor
rorb
adc
mov
jo
mov
and
cmp
lret
mov
out
into
lock
mov
loope
test
mov
out
push
adc
and
push
push
pusha
shl
jle
mov
test
imulb
int
sbb
rcrb
xchg
xlat
xor
cmpsl
into
fnstcw
jp
push
dec
xor
js
push
je
outsl
cld
fcmovnu
xchg
je
bound
ljmp
loopne
lcall
loop
cs
es
scas
std
push
mov
mov
pop
pop
jmp
aam
lcall
cmp
cmpl
cld
fdiv
les
mov
negb
mov
jnp
aas
mov
mov
shl
bound
in
jae
dec
mov
sahf
mov
xor
loope
scas
daa
and
add
arpl
lret
xchg
outsb
cltd
jb
lret
cli
jbe
mov
xor
add
xor
inc
popf
jmp
add
mov
adc
stos
mov
cmp
mov
xchg
mov
xchg
pop
out
outsl
or
pop
jo
je
in
xchg
push
dec
pop
xchg
cwtl
inc
call
imull
loopne
out
push
mov
jl
jnp
jae
inc
ds
jnp
aam
inc
in
mov
lock
cmpsb
dec
aas
or
or
add
push
cmpsb
jg
and
je
mov
mov
adc
call
lods
adc
in
rcrl
pop
xor
and
sub
clc
and
mov
cmp
inc
sub
int3
cmp
push
shlb
mov
rclb
aas
xlat
fsubs
mov
jnp
push
dec
jl
cmp
out
loope
pop
ljmp
clc
cwtl
loope
insl
xlat
push
xor
sub
xor
dec
orl
stc
xchg
sbb
add
ljmp
pop
sbb
clc
xchg
int
xor
add
jnp
xor
aas
in
popa
or
and
or
jmp
push
bnd
mov
ds
fdivp
mov
and
pop
imul
repnz
jno
fsubs
or
inc
jb
jl
out
shlb
adc
mov
jmp
ljmp
adcb
push
mov
sbb
repz
loopne
xor
out
call
aam
in
or
popf
test
push
addr16
pop
cmpsb
fs
fsubrl
enter
aad
cwtl
sbb
outsb
sub
lret
mov
movsb
sub
enter
cmc
dec
cmp
fcompl
push
pop
rolb
jmp
lcall
push
push
or
cmp
daa
mov
fwait
das
sbb
sbb
jnp
repz
jnp
cmp
mov
popa
mov
adc
inc
xor
ret
mov
fisttpll
or
ljmp
hlt
mov
jl
mov
push
andb
dec
push
jge
adc
mov
ror
jg
ds
loope
mov
aas
lods
dec
xchg
inc
insl
gs
cmc
data16
mov
and
dec
ror
push
dec
std
or
rorl
shl
xchg
mov
int
inc
inc
jmp
add
or
std
pop
movsb
add
lods
inc
or
push
inc
hlt
outsl
addr16
notl
pop
push
jne
push
adc
in
test
xchg
cs
imul
mov
gs
inc
jno
pop
dec
scas
fisubrl
in
sbb
mulb
push
mov
clc
test
pop
jae
inc
subb
ja
test
add
lods
push
and
pop
adc
push
jbe
fstl
outsb
popf
and
fistpl
in
out
and
jp
mov
fucom
arpl
aad
nop
int3
inc
sbb
clc
arpl
push
mov
flds
mov
dec
inc
cmc
out
mov
pop
cmpsb
pop
in
mov
xchg
push
ret
lds
dec
dec
jle
jp
js
scas
cmp
push
loop
repz
int
push
fdivl
fs
mov
es
das
dec
add
lods
daa
int
xchg
adc
pop
and
inc
fnstenv
fistps
mov
xchg
jecxz
jno
fwait
aas
out
add
mov
icebp
in
stos
pop
mov
mov
pop
mov
out
add
xchg
out
mov
and
orb
mov
fidivs
cmp
jmp
lock
roll
sahf
cmpsl
fstpt
cmc
jl
pop
mov
lahf
cli
adc
mov
mov
mov
push
mov
or
cs
push
dec
or
testl
or
mov
subl
dec
pusha
loop
dec
mov
lds
mov
pop
aas
xlat
inc
xchg
insb
insb
cmovle
leave
gs
movsb
cmpl
mov
or
add
call
and
outsl
xor
sbb
loopne
clc
xor
push
or
xchg
xchg
add
sbb
push
outsb
in
and
dec
or
lods
xor
mov
jae
push
fxch
je
push
pop
add
cmp
fucomip
das
jnp
cmp
popf
mov
jnp
dec
push
icebp
mov
jg
shl
cmp
jmp
mov
cmp
pusha
mov
jae
xor
jns
xor
and
push
das
or
mov
xor
add
cltd
xchg
pop
pop
pop
test
jg
shlb
movsb
insl
xorl
ss
dec
out
bound
mov
inc
movsl
stc
mov
sub
pusha
xchg
jnp
or
inc
cld
mov
in
xor
mov
daa
pop
or
add
mov
and
pop
dec
rcrb
add
dec
outsb
xchg
push
es
call
fwait
pop
xchg
sub
dec
adc
pop
pop
inc
ds
jns
jns
in
xor
sub
and
sub
cmp
xchg
das
inc
jae
jp
iret
sti
pop
add
stos
xor
fisubl
push
adc
or
lcall
mov
pop
pop
xor
cmp
pop
mov
inc
add
arpl
test
int
aad
inc
mov
cmp
cwtl
push
lock
es
or
sub
adc
and
pop
sahf
lods
bswap
push
xor
fsts
fdivrl
test
push
sahf
pusha
or
adc
lods
idivb
jo
mov
mov
jge
and
or
mov
je
dec
aad
notb
xchg
cltd
xchg
fldl
jns
rclb
pusha
fsub
dec
push
dec
inc
mov
int3
pop
and
inc
xchg
pop
arpl
mov
fs
les
xor
push
arpl
pop
xor
insl
loopne
gs
outsl
outsl
mov
out
bound
cmp
push
sub
adc
lret
mov
jb
xchg
mov
lcall
xchg
fidivrl
adc
test
dec
popf
stos
fs
jo
xor
ffree
js
mov
inc
mov
sub
inc
ret
lahf
xor
adc
filds
out
outsb
bound
xchg
inc
inc
mov
test
jl
mov
comiss
inc
std
lods
dec
in
or
pop
fists
aaa
aaa
fdiv
fmull
sbb
sub
shrl
dec
mov
minps
xchg
clc
pop
mov
cwtl
sahf
push
sbb
clc
mov
jmp
lock
adc
and
in
lret
je
aad
xchg
dec
in
xchg
cs
scas
sbbl
jmp
test
cmp
arpl
aad
and
call
lret
push
jbe
xchg
dec
arpl
lcall
pushl
sbb
aam
call
cmc
xchg
add
ds
pop
pushf
xor
loope
dec
sub
dec
push
lods
sub
or
fnsetpm(287
add
xor
xchg
xlat
in
lret
fs
into
adc
xchg
jb
outsl
push
adc
fcmovnbe
out
test
aam
int
dec
mov
cmpsl
inc
and
pop
add
rcrb
iret
push
stc
xlat
insb
sub
mov
pop
outsl
cld
mov
clc
push
dec
add
iret
and
and
mov
jo
add
sub
ljmp
test
xor
js
stos
mov
or
pop
cwtl
dec
xchg
and
jge
popa
aad
or
in
adc
and
sub
push
loopne
jp
in
xchg
adc
xor
lock
enter
sub
sar
sbb
mov
je
xchg
mov
test
inc
fsubr
push
ja
push
cmp
jnp
dec
and
pop
loopne
push
push
ds
nop
inc
jmp
ret
xchg
add
fisubrs
xchg
stos
loop
and
push
dec
outsb
mov
jbe
aas
xor
mov
mov
push
loopne
call
xor
sarb
cmp
ret
sub
pop
das
add
in
insl
xchg
divl
sbb
ds
cmp
sti
ss
adc
mov
das
int3
cltd
sbbl
je
push
add
sti
icebp
divb
jmp
int3
imul
adc
in
jl
xchg
jge
xor
iret
pushf
mov
sbb
pushl
daa
out
lcall
jbe
mov
ss
loop
test
inc
jl
cld
inc
xor
addl
in
sbb
dec
push
es
pop
add
stos
loopne
nop
pop
cld
mov
cltd
clc
jle
in
jne
mov
pop
pop
test
mov
loope
dec
out
jge
adc
or
mov
call
sbb
sub
rorl
movsb
addl
xchg
or
mov
sti
or
cmp
mov
out
cmp
loope
inc
mov
jp
add
and
push
ret
loope
mov
popa
xchg
pop
js
and
or
mov
jb
jecxz
test
lea
adc
jecxz
sbb
xchg
mov
cmp
xchg
lock
push
jle
mov
jne
sti
aaa
jp
rclb
or
adc
xchg
sub
ja
out
icebp
cmp
andb
and
mov
xlat
push
jle
and
push
shll
std
cmp
push
sub
cmp
mov
rcll
sar
mov
mov
cmp
shl
push
xor
xchg
adc
push
push
sub
cwtl
das
cmp
imul
mov
cmp
int
cs
stos
fdivrs
test
subb
inc
out
cmp
mov
mov
rclb
fidivrs
mov
mov
push
cld
fdivrs
dec
orb
xchg
xchg
adc
and
push
inc
jle
arpl
insb
xchg
mov
loop
cmp
adc
cmp
sub
outsb
adc
andl
xchg
push
inc
lock
jge
repz
clc
cltd
mov
mov
movsl
int3
or
fst
jb
imul
jb
shlb
dec
inc
arpl
test
arpl
popf
mov
add
mov
jmp
push
xor
aaa
fwait
jmp
or
mov
xor
adc
pop
adc
inc
test
movsb
mov
fsubs
and
scas
es
frstor
adc
mov
call
mov
push
add
or
pusha
dec
sarb
aam
push
mov
adc
pop
mov
clc
cwtl
inc
fmull
pop
jge
inc
out
sti
dec
inc
push
in
push
stc
jne
imul
cmp
clc
sbb
lods
cmp
insb
adc
mov
xchg
aaa
sub
push
hlt
repnz
bound
jmp
test
xlat
dec
addb
mov
cld
pop
lahf
push
ret
push
pop
jecxz
jno
mov
mov
adc
dec
mov
adc
mov
int
sbb
inc
xor
xchg
rcll
pop
xchg
sub
xchg
and
call
insl
cli
scas
movlhps
pop
mov
mov
ficoml
mov
mov
adcl
outsb
js
out
pusha
adc
gs
je
das
add
iret
addr16
outsl
int
cld
lret
pop
jnp
ljmp
cmp
dec
js
mov
xchg
cmp
repz
mov
lahf
pop
mov
shlb
add
out
push
dec
cltd
push
push
push
dec
out
int3
inc
mov
pop
mov
lea
jecxz
adc
mov
popf
sub
inc
mov
mov
mov
mov
ds
leave
pop
dec
call
mov
xor
or
shll
movsb
subb
fisubrs
xchg
adc
test
fs
mov
xchg
mov
popa
das
movsl
gs
jb
push
mov
daa
call
sbb
mov
in
mov
popf
xor
scas
shlb
lahf
dec
ss
out
fwait
sub
add
dec
int
add
xor
push
call
mov
int
mov
sub
cltd
and
mov
fwait
sbb
fwait
sbb
mov
jmp
jmp
sub
xor
shrl
mov
out
popa
ss
addl
shll
xchg
mov
pushf
mov
repnz
iret
sub
or
xchg
lods
idivl
jo
gs
cmp
rcr
les
notb
fucomi
call
xor
xchg
mov
scas
inc
dec
xor
test
mov
inc
hlt
or
or
gs
stos
cmp
xchg
fidivrl
aam
push
out
push
jl
cmp
xor
jg
xor
out
aas
cmc
xchg
xchg
out
adc
and
and
lods
stos
cli
or
push
push
mov
sub
dec
adc
daa
es
xchg
ror
jo
insb
adc
in
ret
adc
mov
sbb
and
or
and
add
cli
lds
mov
ja
ljmp
push
push
in
fwait
dec
or
xchg
jmp
shll
xchg
fwait
push
inc
dec
int3
test
mov
push
shlb
and
add
mov
rcr
data16
mov
push
dec
add
les
sti
in
ds
cmc
sbb
xchg
jo
gs
cmp
mov
jns
add
lcall
adc
call
fwait
and
xchg
jbe
adc
mov
xor
xchg
ret
push
cmpsb
add
or
test
mov
jnp
xor
jo
jge
sub
mov
xor
push
jae
mov
ds
pop
adc
popa
mov
sbb
arpl
xor
mov
movsl
mov
jecxz
push
pusha
arpl
push
outsb
cmp
or
adc
movsb
mov
jmp
pusha
mov
xchg
add
push
cmp
pop
xchg
mov
addr16
lea
and
repz
mov
fisttpll
sbb
and
jne
in
push
xor
arpl
inc
loopne
cltd
insb
or
push
mov
jp
mov
add
inc
mov
pop
push
cmp
mov
nop
push
add
dec
cmc
and
icebp
movsl
or
ja
sbb
movsl
xor
and
mov
hlt
rorb
sub
pusha
jo
in
daa
pop
mulb
mov
xor
xor
mov
or
aam
jbe
or
mov
or
addr16
mov
repnz
sub
test
cmp
add
adc
fucomp
xchg
jbe
je
fldl
adc
mov
pop
sahf
lock
and
add
ljmp
sti
xor
movsb
jmp
mov
jnp
push
jno
push
add
sub
push
and
inc
pushf
inc
fs
cmp
into
in
out
cmpsb
ljmp
cli
fiadds
cmc
out
sub
out
imul
mov
pop
inc
xor
movsl
test
mov
int
rorl
lahf
mov
inc
iret
push
jb
test
push
enter
push
mov
int3
sti
and
mov
inc
ds
pusha
stos
mov
lcall
adc
inc
mov
and
add
loopne
cwtl
lea
ljmp
js
xlat
stc
xchg
ret
inc
xchg
push
ja
hlt
adc
ficomps
jmp
push
jg
mov
fsub
and
mov
mov
sbb
std
xchg
pop
popa
test
out
jnp
pushf
adc
out
int3
in
int
icebp
inc
xor
cwtl
pop
mov
lahf
mov
jp
call
int
dec
pop
sbb
mov
inc
inc
nop
pusha
adc
add
mov
mov
cmp
int
fs
and
mov
int
inc
cltd
pop
adc
outsl
pop
push
testl
cmp
adc
pusha
popf
jo
cs
stos
cltd
and
inc
test
push
and
notb
cli
subl
movsl
cwtl
cs
or
dec
sbb
mov
mov
sbb
push
repnz
inc
mov
aad
mov
rcrl
push
push
clc
test
mov
xchg
ret
xor
lds
stc
inc
out
mov
mov
sub
add
add
into
sbb
or
sub
or
sbb
in
cltd
xchg
das
and
clc
jne
into
les
dec
cld
insb
jmp
clc
cli
mov
jb
add
lahf
push
xchg
mov
jp
flds
outsb
ljmp
adcl
in
sbb
mov
fcoml
ficomps
mov
movsl
aaa
dec
lods
sbb
inc
mov
sbb
or
or
xchg
sub
add
lods
movsl
stos
inc
adc
xlat
sarb
sub
cmpsl
pop
in
rcrl
inc
or
sbb
adc
mov
mov
les
mov
or
lret
inc
aas
sub
fwait
mov
xchg
ror
jbe
lahf
sahf
or
push
lds
pop
and
loopne
pop
adcb
jle
mov
inc
out
xlat
xchg
test
jns
int
paddsb
fwait
out
out
movsl
ljmp
add
sahf
sbb
icebp
jge
adc
insb
inc
repz
fists
and
stos
ret
mov
and
jnp
rcl
adc
lods
inc
xchg
push
cmp
mull
or
stos
xor
in
mov
imul
inc
cmpb
push
push
or
lods
fs
lods
js
mov
xchg
inc
cmpsl
push
fnstsw
push
jns
jbe
fidivs
andl
and
les
data16
dec
mov
dec
sbb
mov
sbb
add
lret
mov
mov
test
adc
jge
and
lds
push
xor
orb
mov
aam
sbb
adc
imul
sbb
add
dec
ret
cmp
xor
xchg
outsb
loop
adc
in
adc
pop
cs
push
sub
imul
xor
pop
int
lock
rorb
push
or
in
lods
test
pop
ficomps
mov
cld
stos
mov
test
push
fsubrl
insl
stos
and
out
pop
push
sbb
dec
hlt
sub
imul
push
xor
push
dec
sti
scas
or
cmpsb
xchg
pop
push
jl
enter
icebp
jb
fisubrs
jnp
mov
push
scas
jns
into
data16
adcl
cli
jmp
mov
xchg
imul
sub
icebp
cld
jno
pop
push
jle
push
ret
ret
mov
or
inc
fiaddl
xor
push
jns
mov
or
dec
imul
sbb
orb
call
ss
add
dec
sbb
pusha
jo
insb
jo
inc
or
loope
and
addr16
xchg
les
ds
jecxz
add
mov
sub
hlt
imul
push
mov
jg
in
fnclex
pop
dec
xor
icebp
push
push
and
dec
mov
cmp
sbb
les
push
test
ficomps
jo
cmpsl
xor
cmpsl
movsl
stos
or
in
pop
ljmp
jbe
mov
push
mov
pop
push
or
and
adc
dec
fdivl
pop
inc
adc
ja
cmp
push
fdivp
in
and
outsl
enter
and
mov
xchg
mov
add
pop
test
in
cmp
dec
mov
mov
mov
xor
add
mov
pop
push
jmp
xor
sub
aas
aaa
push
hlt
jae
mov
test
mov
xor
loopne
out
sub
repnz
dec
inc
je
xchg
into
mov
sub
push
out
mov
ja
repnz
daa
sti
js
xchg
js
sbb
mov
cmp
int
ret
lahf
pop
mov
inc
push
mov
add
ret
mov
or
mov
rcr
clc
pop
mov
and
ss
jb
int
sub
add
jae
test
cmpsb
add
mov
out
les
fmul
mov
stos
lds
lods
andl
je
cmpsl
mov
shlb
pop
adc
push
fidivl
xor
sbb
mov
lock
stos
movsb
mov
loop
mov
subb
push
test
lods
xchg
jp
xor
jp
xchg
mov
sbb
pop
and
fildll
leave
pop
dec
xchg
movsb
inc
ds
dec
jp
scas
fstl
clc
jae
insb
xchg
sbb
sub
inc
pop
icebp
stos
jnp
mov
hlt
fisubl
aaa
loope
int3
adc
es
mov
scas
pop
push
inc
xor
lock
pop
test
sub
test
fs
sbb
leave
outsb
jmp
jo
mov
imul
fists
loop
inc
lahf
push
outsl
adc
sahf
fmuls
pop
clc
out
xor
add
out
xchg
mov
fs
pop
movsb
inc
into
xchg
cli
fimull
in
je
jnp
repz
pop
in
sbb
adc
stos
ljmp
sti
fbld
scas
rcr
pop
or
insb
push
adc
cli
movsb
out
push
sbb
movsl
fs
add
xlat
xchg
arpl
jo
dec
dec
xchg
arpl
subb
imul
cs
lahf
outsb
mov
mov
xrelease
xchg
in
and
addb
sti
push
sub
test
aas
xor
dec
arpl
fwait
lds
inc
lret
lcall
jle
lret
inc
push
loop
cli
cmp
fiadds
cmp
dec
lods
gs
pop
icebp
dec
and
sub
bound
fistpl
pusha
sbb
sub
push
fldenv
jle
pop
jne
pop
mov
mov
sbbl
mov
xor
jmp
es
or
es
or
mov
out
dec
lock
sbb
or
add
pushf
ljmp
or
jb
add
jle
scas
jns
xor
push
pop
outsl
dec
popf
sub
jnp
mov
jae
shlb
push
jle
out
inc
in
cmp
jnp
mov
cmp
imul
shll
prefetch
push
pop
rclb
rclb
out
repz
jecxz
pop
jb
outsb
push
in
addl
nop
sbb
inc
imul
aas
pop
into
pop
aaa
aam
pusha
ss
fldt
clc
fsubs
inc
int
sub
pop
cmp
xchg
clc
fwait
mov
das
lea
andb
pop
push
subl
ds
sbb
lea
lods
fs
pop
jl
mov
xor
addr16
inc
je
or
sbb
xchg
test
and
lahf
cwtl
mov
add
lret
cwtl
xchg
mov
mov
scas
push
or
lea
cltd
test
xchg
pop
mov
mov
cmp
aam
repz
push
inc
and
push
mov
adc
loopne
dec
cmp
aam
mov
popa
imul
divl
adc
mov
fsubrl
nop
sti
or
arpl
int3
xchg
pop
fldcw
stc
fildl
scas
xchg
mov
pop
cs
test
sub
insb
jb
loop
repnz
lahf
cltd
lsl
xor
dec
xor
xor
sbb
jg
jmp
xor
mov
arpl
cmp
popf
xchg
mov
jno
notb
lret
adc
cmp
das
aas
add
fistpl
xlat
lods
negb
es
adc
bound
cwtl
pop
xchg
repz
test
negb
and
or
push
pop
ss
inc
adc
push
loop
test
inc
xor
push
push
sti
jp
push
mov
sbb
dec
int
sub
dec
xchg
sub
push
inc
xchg
push
xor
cmc
popf
pop
mov
pop
dec
push
aaa
fptan
stc
mov
inc
jae
sbb
je
adc
aaa
daa
pop
pop
test
inc
jge
mov
xchg
adc
stos
push
arpl
movsl
jp
fildll
fidivl
lock
fldl
mov
jmp
mov
pcmpeqb
shll
sbb
stc
pop
mov
cld
imul
xor
mov
jno
movsl
repz
sub
pop
mov
jle
add
adc
and
ja
mov
or
lret
fisubrl
jle
mov
push
adc
xchg
inc
or
cld
repnz
xor
dec
mov
jmp
cwtl
int3
adc
mov
rcl
cld
lods
ja
inc
or
addr16
imul
andl
mov
fldcw
sbb
outsb
cmpsb
pop
movsl
addr16
lds
aad
add
and
xchg
out
add
adc
adc
dec
pop
test
inc
pop
ljmp
std
or
mov
push
mov
mov
rolb
stos
loopne
sbb
and
pop
push
add
inc
lcall
push
in
mov
lret
cmp
mov
push
or
sbb
xor
push
and
filds
ficoms
push
push
pop
sub
jae
push
xlat
cmp
jge
and
push
jns
fisubs
fldcw
les
test
add
lods
or
outsb
fs
and
insb
addr16
or
cltd
mov
ds
loopne
jge
sub
inc
push
xchg
sti
in
sub
cmpl
xchg
mov
sahf
dec
mov
pop
cld
mov
call
nop
mov
mov
inc
jp
in
iret
inc
aaa
cli
sbb
fwait
jecxz
cmp
mov
inc
jge
dec
pusha
lods
xor
jle
push
mov
ljmp
in
sbb
jbe
mov
mov
int
cmp
lods
fisttpll
in
in
xchg
jg
xchg
push
lret
mov
push
cli
mov
pop
jecxz
mov
outsl
or
xchg
lock
jle
in
ret
lea
cltd
inc
push
and
push
ret
add
xchg
and
or
test
clc
outsb
andl
xor
jecxz
stos
sbb
sbb
or
mov
xchg
enter
jg
xchg
inc
ret
jns
js
pushf
jns
inc
push
dec
sbb
std
scas
repz
int
mov
or
or
or
inc
pusha
std
push
fistl
sbb
mulb
subb
jle
insb
pop
and
adc
data16
mov
mov
mov
outsb
jl
repz
fwait
mov
das
int3
rcrb
bound
enter
xorb
pop
dec
in
cmpsl
lock
or
fnstsw
mov
sahf
cli
cmp
sbb
mov
iret
jb
inc
jnp
inc
nop
add
daa
adc
movsb
and
add
push
mov
or
dec
in
xor
pusha
mov
xor
mov
mov
scas
mov
lods
dec
push
dec
or
pop
aas
and
push
mov
xlat
add
sbb
mov
pop
test
aaa
les
add
mov
pop
mov
mov
lods
hlt
sbb
aam
mov
inc
lods
cld
stc
lret
xchg
dec
xchg
mov
sub
int3
push
inc
call
inc
adc
dec
pop
fnstenv
xlat
sahf
cli
imul
mov
mov
shlb
inc
pop
popf
jl
outsl
and
sub
inc
dec
adc
cmc
jne
int
inc
inc
xchg
or
shl
pop
je
push
aaa
pop
or
and
dec
inc
push
fcoms
lret
movl
jecxz
or
mov
call
sub
mov
xchg
js
inc
push
icebp
cmp
mov
popa
push
add
jle
jne
icebp
insb
xorb
sbb
ds
dec
mulb
in
inc
ds
je
adc
and
pop
mov
mov
mov
dec
mov
sbb
out
stc
push
enter
test
out
loop
ljmp
pushf
lods
shrb
shrl
sub
nop
pop
enter
sub
adcb
xor
push
cwtl
cmp
cli
mov
testb
shrb
lret
shlb
or
jo
pcmpeqb
inc
movsl
xchg
xchg
or
nop
movb
add
cld
iret
jo
ds
and
into
andb
lods
pop
gs
mov
inc
xorb
jp
shr
pushf
cmp
mov
push
js
scas
jmp
dec
lret
sti
xchg
jnp
sbb
stos
lock
repnz
int3
das
and
inc
or
xor
mul
xchg
adc
inc
dec
or
mov
jbe
and
popf
sbb
xor
and
leave
cld
mov
loopne
ja
push
sbb
cld
sbb
mov
adc
shlb
outsl
fdivrl
mov
lods
bound
xor
nop
fs
or
insl
das
push
lcall
gs
dec
int3
popa
dec
sbb
xor
ret
sarb
push
jae
stc
lods
xor
lods
cmp
xchg
mov
push
cwtl
int3
out
pushf
mov
xor
insb
lret
pop
hlt
sbb
dec
scas
inc
movsb
out
je
mov
aas
push
sub
pop
ficompl
jbe
mov
lret
push
push
adc
add
cltd
fnstenv
lcall
incb
sbb
roll
mov
shll
pop
loope,pt
movsl
mov
iret
inc
sbb
inc
inc
fimull
xor
sub
jae
jg
add
mov
adc
mov
push
test
sti
sarl
loope
scas
insb
fnstenv
outsb
test
sub
sub
in
ror
das
adc
sub
xchg
mov
or
inc
bound
xchg
insl
add
cmpsl
xchg
mov
pop
pop
pop
push
scas
mov
push
stos
cmp
cmpb
cmpsl
lock
outsl
jno
mov
or
jp
js
mov
xchg
outsl
imul
lret
nop
push
cmpsl
xchg
leave
aam
call
xchg
xor
jne
ljmp
add
orb
ret
push
xchg
push
xor
lahf
mov
and
mov
jmp
or
cmpsb
stos
sub
mov
sti
xchg
adc
mov
inc
jp
repz
loop
loop
test
dec
icebp
lods
xor
call
jecxz
enter
inc
dec
sub
les
adc
push
and
sarl
mov
push
adc
sahf
inc
add
mov
test
inc
imul
mov
add
stos
loop
mov
je
aam
pushf
sub
into
push
movsb
out
add
into
push
loope
add
sarb
lock
lds
push
loop
pop
dec
add
jmp
or
loopne
mov
dec
inc
xchg
negb
mov
cwtl
cmp
popf
les
stos
add
cmovb
ds
andb
cs
xor
fimuls
mov
out
sbb
mov
push
aas
add
daa
outsb
test
jecxz
and
call
iret
mov
push
cmp
scas
adc
mov
cmp
ljmp
mov
aaa
add
aas
sub
mov
rcll
out
jo
cli
xor
mov
xchg
pop
cmpsb
xchg
test
pop
into
push
negl
xor
and
sub
push
rclb
jecxz
aad
pushf
cmc
out
or
sub
jl
mov
nop
fistpl
or
in
pop
pop
mov
xor
outsb
and
rcll
jnp
jp
enter
test
cmp
inc
dec
lea
popf
notl
out
stos
or
mov
add
jnp
xchg
cmp
cli
lcall
mov
mov
pusha
sbb
xchg
mov
xchg
in
or
repnz
pop
stc
xchg
inc
ret
jo
push
test
mov
sub
push
jnp
inc
push
pop
push
mov
mov
dec
and
or
movsb
mov
std
lea
add
fcoms
roll
aaa
fbld
xor
sub
add
xchg
imul
mov
jno
xor
sub
add
jle
dec
nop
cvttps2pi
jecxz
mov
enter
out
add
adc
sbb
xchg
adc
mov
push
inc
mov
ficoms
mov
es
into
mov
dec
aad
pusha
mov
out
sti
addr16
fsubl
jns
mov
lahf
into
mov
or
sub
fdivs
jbe
dec
mov
mov
inc
imul
pop
push
lock
test
loopne
lods
jbe
clc
adc
xor
sub
mov
or
int
fdivs
add
imul
fdiv
jns
jp
sub
imul
inc
cltd
not
testb
xor
or
cmp
jmp
outsl
pop
mov
or
xor
jnp
jnp
mov
and
je
outsl
mov
repz
ret
ds
dec
out
shlb
test
aaa
faddl
arpl
add
das
jle
iret
xor
outsb
ljmp
lahf
fsubr
pop
test
jg
in
xchg
ret
rorb
and
aam
mov
pushf
lds
ljmp
int
insl
adc
or
inc
rcll
xor
fisubrl
test
xchg
mov
and
je
xchg
in
push
add
inc
jg
movl
into
mov
lods
call
adc
aas
ja
push
popf
imul
mov
sub
dec
out
mov
jbe
mov
testb
lret
lock
addr16
xchg
dec
pop
jne
leave
sarb
mov
mov
imul
cmp
dec
in
addr16
pusha
jl
sbbb
insl
cmpsl
fcomps
je
mov
jge
inc
or
outsl
ss
scas
inc
xchg
pop
mov
pop
clc
out
and
pop
cmpsb
pop
cli
add
push
fisubs
cwtl
test
fiaddl
mov
cwtl
cli
out
fnclex
mov
jb
lret
aaa
bswap
or
lds
jmp
icebp
xchg
shll
fimuls
lds
pop
xchg
divb
mov
lret
shlb
in
addr16
es
sbb
rorl
sub
out
jl
popa
pop
cli
adc
cli
out
jge
shrb
cmp
in
jg
or
rcr
pop
jecxz
les
je
scas
sbb
inc
or
sti
sar
mov
in
jb
push
ror
or
mov
mov
cmp
sub
cmp
loopne
mov
loope
sbb
pusha
mov
mov
sub
or
push
lods
in
sub
andnps
push
xchg
fwait
mov
mov
scas
adc
enter
mov
mov
cmpsb
push
mov
adc
mov
ljmp
rcrb
jp
insl
add
fnstsw
xor
je
int3
push
jnp
cli
loope
push
rolb
repnz
stos
in
aas
into
sbb
cmc
pop
add
mov
inc
leave
jnp
or
xor
ret
and
sub
adc
mov
push
jb
inc
dec
adc
adc
sti
mov
xorl
mov
xchg
ret
fisubrs
xlat
sub
inc
sbb
lret
jl
ds
jmp
inc
and
lret
cmovp
mov
ds
mov
jno
lods
addr16
and
call
cmp
and
sbb
pop
jmp
sahf
mov
mov
cs
pop
imul
dec
jns
xchg
lock
adc
mov
cmp
mov
cmpsl
add
add
clc
pop
pusha
push
insb
dec
cmp
ret
add
faddl
xchg
cmp
filds
jno
mov
incb
leave
shrl
mov
ja
hlt
jge
push
cmp
fsubrp
aas
mov
add
ja
pop
cmp
dec
xchg
fiaddl
dec
sbb
pop
mov
sub
in
in
mov
ret
or
jg
fsubrl
pop
xchg
sahf
sbb
sub
outsb
enter
mov
outsb
mov
xor
cs
sar
rclb
and
imul
adc
pop
shlb
adc
adc
je
jle
xlat
rolb
sti
ret
xchg
xor
dec
ror
or
cwtl
outsl
jg
jns
sbb
dec
adc
fwait
mov
jae
out
push
cltd
stos
popf
mov
int
mov
and
lods
subb
rcl
int
mov
push
sarb
push
jno
xor
nop
inc
cmc
mov
cmp
loop
and
xchg
inc
int3
xor
and
fcomps
int
pop
aam
inc
push
mov
in
stos
cmp
int
fs
xorb
add
cltd
lahf
adc
hlt
addr16
outsb
cwtl
mov
in
sub
ss
sahf
dec
out
sbb
pop
jle
xchg
and
nop
and
push
jno
pop
add
inc
sbb
xchg
ja
scas
ss
cmp
insl
loope
push
insb
leave
loop
dec
stc
outsl
mov
push
pop
es
sub
shlb
std
movl
arpl
pop
cs
out
mov
inc
pop
mov
test
dec
lods
or
cmpsl
sbb
push
incl
pop
dec
pop
mov
jae
adc
ja
mov
mov
leave
arpl
xchg
dec
fwait
out
test
leave
xchg
xchg
das
test
in
movb
in
sub
bound
divb
mov
in
adcb
mov
fadds
mov
loopne
cmpsb
inc
cmp
jne
mov
push
adc
mov
out
cmp
add
int
out
in
cltd
call
mov
jecxz
sbb
adc
stc
in
aas
test
insb
or
aad
xor
xor
gs
or
jo
pop
jmp
pop
lea
sub
imul
inc
adc
push
clc
bnd
pop
ja
pop
lret
sti
ss
push
ljmp
sub
cwtl
push
das
ja
mov
nop
adc
repz
adc
push
sarl
add
test
push
pop
adc
push
push
sub
adc
cmc
sbb
lahf
xor
into
jno
mov
xor
and
lods
xchg
jne
dec
sbb
lods
push
mov
sub
adc
cmpsb
or
or
jae
shrl
decl
xchg
adc
loope
mov
call
inc
dec
insb
pop
and
das
lea
mov
or
repnz
lret
cmp
popa
xchg
push
bound
cmp
push
ds
mov
adc
xchg
jmp
jmp
fimull
xorl
dec
dec
mov
or
stc
pop
lahf
imul
mov
pop
cmp
pusha
mov
rorb
mov
mov
outsl
pop
mov
nop
jmp
xor
xor
inc
fldcw
scas
mov
js
bound
dec
push
icebp
test
jne
es
aam
and
xor
test
add
jmp
or
adc
mov
in
test
xchg
adcl
sbb
adc
sub
lret
aam
xor
je
ret
movsb
adc
test
push
pop
enter
insb
or
in
cwtl
fisubs
cld
mov
pusha
xchg
cmp
and
out
cmp
nop
out
xchg
or
or
and
out
das
out
dec
push
mov
ficoms
sahf
xor
xchg
jmp
lock
loope
dec
dec
mov
mov
sub
rcl
add
mov
pop
xlat
mov
mov
push
sbb
add
pop
pop
pop
in
outsl
cmp
mov
pop
xchg
in
les
in
add
cmc
insb
subb
mov
into
pop
daa
mov
and
mov
mov
inc
push
das
call
ljmp
jns
jbe
sub
inc
scas
add
lret
jge
aad
sbb
push
icebp
sbb
clc
push
sbb
add
push
xchg
aad
adc
adc
cmpsb
adc
fwait
add
adc
daa
sub
or
jb
sub
int3
insb
aas
testb
lds
mov
lret
xchg
mov
in
rclb
add
fnstenv
in
mov
sub
pop
clc
push
jne
sbb
mov
sub
pop
in
scas
cwtl
lret
pop
fldenv
insl
imul
popf
stc
icebp
or
leave
ret
mov
inc
test
repnz
dec
adc
shlb
aaa
ds
or
mov
out
stos
scas
adc
xchg
jnp
xchg
sbb
sarl
pop
jb
outsl
pop
stos
fcmovb
leave
bound
sbb
lret
adc
push
out
mov
push
lock
andl
add
lds
mov
jle
ret
outsb
push
inc
jo
ljmp
xchg
fucomip
jo
je
push
sub
add
lahf
scas
rcl
ds
arpl
sti
push
es
xor
jle
out
in
lods
xor
cmp
push
jae
arpl
out
mov
adc
and
aas
sub
icebp
cmpb
out
shll
shrb
jecxz
add
and
add
and
lds
inc
sahf
dec
xlat
cmp
lahf
adc
insl
repnz
mov
and
push
pop
adc
lret
jge
out
lds
fstpl
stos
loope
mov
and
pop
aas
mov
jb
or
pusha
sbb
insl
popf
push
sub
lret
scas
xchg
es
jno
mov
cmpsb
mov
xchg
lea
ljmp
or
cmpsl
sub
jle
xchg
adc
jle
pushf
ja
or
jo
aad
lret
int
lock
cmpsb
xlat
pop
mov
mov
cmp
lahf
sub
ja
ja
push
fldcw
cmp
subl
sub
aas
movsb
jp
inc
adc
rclb
hlt
jno
add
or
fwait
sbb
dec
pop
pop
mov
jae
ja
add
aam
das
or
mov
popaw
jne
lods
adc
xchg
inc
xchg
aaa
insb
sub
insl
decl
mov
ja
into
cmp
sub
sub
inc
mov
fsubrs
mov
mov
adc
sbb
ljmp
repz
xchg
and
js
cmp
cmp
out
adc
add
aas
stos
pop
xchg
xor
pop
loope
xor
add
int
out
std
std
sub
dec
add
std
or
adc
in
push
shrb
add
and
pop
cmpsl
add
dec
fwait
pop
add
dec
inc
cmpsb
jecxz
test
xor
or
and
inc
pop
mov
aaa
mov
push
cmpl
sub
ret
jb
jae
xchg
popf
add
ror
or
fbstp
mov
rcr
in
ficompl
std
or
inc
push
adc
mov
cmpsl
mov
es
repz
lock
outsb
ljmp
scas
pop
jb
xchg
adc
mov
jl
add
push
xor
shll
lcall
lret
inc
xor
enter
lods
jae
imulb
xor
ja
xchg
mov
bound
adcl
sbb
and
ret
adc
sahf
sbb
push
pop
fwait
or
das
gs
das
mov
test
clc
aaa
xchg
jp
sub
leave
or
loop
cmp
inc
hlt
aas
cmp
pop
popl
iret
pop
insl
bound
inc
xchg
fidivrs
xor
inc
mov
push
or
add
fs
or
push
jecxz
js
pop
je
xchg
cmp
sti
cwtl
mov
inc
div
cmpsl
repnz
cmp
mov
in
bound
stos
hlt
sub
insl
xlat
cmp
push
or
cmp
cmpsb
add
mov
xor
cmp
bound
cmp
pop
gs
dec
mov
pop
pop
sub
add
pop
or
out
mov
inc
or
xchg
lods
sbb
sbb
in
inc
rorl
in
outsl
sarb
insb
int
xor
jmp
cmp
mov
fcoml
sbbl
or
xor
mov
adc
cmc
mov
add
sub
dec
fsubrs
test
add
inc
out
hlt
xchg
sbbb
ret
push
jg
mov
or
lret
cli
jge
pop
push
add
lcall
push
loop
or
or
mov
sub
mov
pop
add
xchg
scas
das
and
xchg
test
fdivrl
mov
popa
notl
addr16
jne
xor
pop
mov
fidivrs
js
push
scas
out
push
call
inc
data16
out
in
mov
popa
xor
xchg
or
aam
mov
or
pop
outsb
jmp
and
addr16
sbb
std
adc
loop
jbe
pop
add
pop
pop
addr16
adc
out
cmp
mov
xchg
mov
sbb
ficoms
sub
pusha
insb
clc
rorb
cmpsl
stc
repnz
mov
call
adcb
jnp
jae
dec
and
sahf
xor
mov
jg
int
cld
xor
sub
lcall
jb
cld
gs
ja
cmc
les
sbb
jl
push
test
jo
cli
outsb
inc
pop
add
rcll
and
shrl
jmp
popa
add
xchg
and
mov
incb
pop
sahf
sbb
out
mov
mov
pop
and
call
inc
adc
icebp
xchg
xchg
mov
movsb
push
dec
in
loope
in
lret
sarl
imul
xchg
push
mov
loope
out
lods
inc
fldl
cltd
fnstenv
in
shl
test
lea
inc
push
lahf
decl
xchg
fimuls
lods
repnz
push
popf
nop
repnz
js
xor
imul
push
cmc
ret
nop
aam
lret
push
jge
into
imul
cmpsl
jg
icebp
out
push
push
clc
push
mov
push
mov
pop
xchg
push
ret
sbb
pop
mull
push
push
mov
push
cmp
loop
inc
mov
add
mov
leave
push
mov
sbb
jae
arpl
cmpl
pop
movsb
roll
les
mov
push
sub
dec
nop
aad
pop
pushf
jno
add
in
mov
cmp
movl
add
dec
pop
stos
jo
popf
mov
push
sbb
popf
sbb
std
ljmp
pop
xchg
shrb
xor
mov
push
pmullw
ja
ret
fs
inc
packsswb
dec
fstpl
dec
fisttps
das
add
mov
gs
in
pushf
ret
lea
mov
sbb
and
frstor
arpl
push
in
xchg
xchg
mov
push
mov
jo
add
out
add
pusha
xchg
mov
lret
push
push
fildll
cld
jbe
mov
dec
out
mov
mov
jmp
adc
aam
lods
sbb
cmp
loope
notl
fidivs
mov
pop
divl
pop
fsub
sub
pushf
inc
adc
and
aam
adcl
push
jmp
push
cmp
das
mov
push
lods
cmpsl
les
shll
mov
xchg
push
imul
filds
jne
js
in
leave
xchg
xor
push
inc
cmpsb
mov
inc
adc
jo
sbb
xchg
loopne
mov
mov
ljmp
les
addl
pop
inc
dec
cmpsb
and
popf
aam
cltd
aam
repnz
cmp
jns
cmp
and
sub
xor
aam
fstpt
adc
push
xlat
xor
inc
jecxz
dec
sbb
xor
out
in
jmp
sub
jno
cmp
jge
sub
and
fisubrs
ljmp
repnz
fwait
test
inc
dec
xor
dec
test
sub
inc
inc
sub
outsl
push
int
pop
jg
xchg
es
sbb
test
add
pop
out
adc
mov
repz
sbb
aam
mov
cwtl
jae
insb
mov
pop
andl
dec
xchg
cmpsl
mov
div
push
cmp
inc
in
or
adc
ret
xchg
test
cmp
xchg
xchg
cmp
or
mov
cmp
pop
xchg
and
add
pop
inc
jge
addb
sbb
leave
out
dec
imul
and
mov
inc
test
jb
loopne
aaa
mov
loop
daa
and
pop
arpl
jbe
enter
adc
xor
std
xor
sub
das
push
mov
add
cmp
int3
out
add
iret
sbb
or
inc
mov
pop
or
push
roll
cwtl
xor
ja
add
xor
pop
inc
pop
push
imul
or
dec
or
xchg
sahf
nop
lcall
out
jmp
jmp
repnz
popa
push
and
jge
jae
sbbb
mov
pop
es
mov
repz
xchg
or
jo
stc
jl
jnp
scas
push
or
jl
enter
shrb
push
popf
mov
test
xchg
push
pop
popf
sbb
xorl
into
aad
insl
or
adc
cmp
daa
xchg
pop
mov
mov
cli
mov
dec
stos
push
push
cmc
and
lock
scas
test
mov
add
cs
adc
jo
popf
int3
cmpsl
add
cmp
push
ds
pop
xchg
jno
cmp
push
data16
roll
push
inc
inc
daa
xor
or
xchg
lods
xlat
jae
aad
jmp
int3
dec
or
fstpl
dec
or
popa
push
aad
adc
xchg
mov
arpl
pop
data16
fidivs
push
or
imul
push
cltd
adc
rolb
mov
dec
add
mov
insl
rcrl
mov
lret
sbb
mov
sbb
jl
jno
cmpsl
xor
push
or
mov
fadds
xchg
inc
sub
jle
mov
jne
mov
mov
lret
xor
mov
sub
mov
ljmp
push
int3
and
inc
jo
int3
aam
stc
jmp
gs
xorl
frstor
imul
xchg
xlat
rolb
icebp
xchg
lods
repz
aad
inc
sbb
xlat
sbb
mov
sub
fprem
jno
xchg
or
cltd
mov
lcall
mov
mov
das
pop
push
push
inc
and
jo,pt
or
mov
cmpsl
mov
addl
push
in
sub
jg
and
mov
out
mov
mov
cmp
pop
loop
and
sbb
aad
and
std
push
sti
pusha
mov
repnz
push
xchg
pushf
loopne
pop
lret
jmp
mov
sub
bound
fxch
scas
mov
mov
out
mov
push
lcall
aaa
scas
jle
aam
call
xchg
rorb
loope
jo
mov
mov
push
pop
mov
xchg
pop
inc
sahf
es
adc
fdivrs
pop
ss
add
popa
pop
sub
xor
sub
sub
mov
or
daa
jecxz
fdivrs
jmp
inc
sbb
hlt
mov
pop
pop
ja
idivb
cs
xchg
jnp
pop
aad
mov
and
mov
jae
loope
dec
das
xchg
shlb
xchg
test
repnz
loop
subl
cmp
int
lret
xor
dec
mov
iret
xor
mov
push
adc
pop
cmp
cmp
pushw
mov
inc
mov
ja
leave
xchg
hlt
jae
cld
mov
imul
fstpt
mov
add
nop
rorb
pop
test
incl
sti
lock
in
push
std
cmp
inc
or
xchg
rcr
fimuls
aas
xchg
aam
jb
or
cmp
sbb
out
js
test
jb
incb
and
cwtl
jns
andl
faddl
or
add
dec
aad
leave
inc
or
rclb
push
mov
sub
xchg
cmp
out
imulb
and
xchg
test
cmpsb
rclb
insl
sub
hlt
mov
pop
xchg
jbe
jbe
and
movsb
ds
xchg
mov
xor
dec
incb
lds
repz
cld
xchg
jle
loope
sub
add
cwtl
imul
sub
lret
xchg
cltd
inc
sahf
inc
push
xchg
mov
xchg
mov
jle
pop
jge
les
lret
les
mov
mov
les
enter
sbb
test
ja
adc
xor
push
aam
shrl
out
andl
pusha
stos
fldcw
or
sub
movsl
loope
divl
pop
out
lea
jnp
inc
leave
nop
adc
dec
sbb
and
aad
dec
jb
in
daa
pop
xchg
ljmp
dec
out
xchg
xor
pushl
sbb
pop
inc
scas
insb
pop
jo
cmp
jmp
lods
or
sti
repnz
xchg
das
aas
icebp
cs
mov
inc
fcompl
xchg
out
xchg
xchg
repnz
xor
adc
cmp
pop
pop
mov
cwtl
or
sub
inc
pop
out
ss
movsb
push
mov
or
fs
rolb
stos
lahf
aam
cmp
mov
lcall
xchg
mov
xor
in
dec
mov
cmc
psrad
arpl
xchg
jle
mov
push
mov
add
in
dec
xchg
nop
pop
out
test
outsl
add
mov
xchg
dec
push
adc
and
enter
loope
cmp
iret
sub
push
xchg
dec
xorl
in
and
inc
or
in
push
inc
iret
and
int
test
aaa
or
ret
inc
fndisi(8087
or
or
sub
ljmp
rorl
shl
sub
pop
jne
stos
push
sbb
ret
test
add
mov
cmp
aaa
xchg
fstl
and
imul
mov
mov
scas
add
stc
rcl
dec
sub
lea
cmpb
or
jno
jae
xor
in
mov
pop
jns
in
addr16
sbb
stc
mov
out
ficompl
jno
dec
loope
ljmp
xor
adc
les
cmp
sub
sahf
mov
repz
mov
mov
and
jno
andps
xchg
aaa
in
loope
mov
iret
and
pop
int3
lret
jbe
lods
pop
popa
cmpsb
xchg
data16
xchg
pop
gs
jne
mov
adc
jb
mov
outsl
sti
xchg
and
jle
sub
jmp
imul
xchg
mov
xlat
je
and
mov
ror
cmpsb
movsl
sub
ret
iret
or
subl
icebp
and
or
xlat
movsb
push
and
adc
fists
inc
popa
push
into
mov
subb
sti
sub
incb
in
stc
push
adc
or
push
dec
sbb
les
push
js,pt
lahf
jae
xor
movsb
fs
sbb
daa
pop
or
mov
cmc
cmpsl
subl
sti
popa
or
or
pushl
fldl
mov
adc
xlat
orb
outsb
std
cmc
mov
push
mov
fcomp
add
ficompl
xchg
or
cltd
jns
pop
dec
out
ret
aaa
ret
jge
repz
ljmp
and
pusha
test
xchg
xor
stc
adcb
dec
adc
add
pop
andl
fiadds
insb
xlat
mov
lock
lea
mov
stos
sub
xrelease
sbb
push
lds
aaa
pop
jp
inc
xchg
add
outsb
sbb
in
daa
or
mov
xor
rorl
in
stos
push
gs
jno
inc
pop
mov
mov
xlat
mov
out
aam
adc
rcrb
popa
pushf
sahf
cltd
out
lods
push
call
into
ljmp
add
mov
sub
lock
push
mov
xchg
mov
call
mov
sub
cmp
dec
inc
mov
out
cmpsb
popl
cmc
cmp
adc
cmp
fcompl
push
or
cli
je
aam
pop
adc
sbb
sbb
mov
insb
push
aaa
pop
fldcw
ja
addb
dec
sub
sbb
sub
sbb
adc
ljmp
insb
jae
xor
xchg
int3
xchg
cmp
push
xadd
adc
dec
mov
or
xchg
in
in
andb
mov
fisttps
imul
add
and
xchg
divl
cmp
cmpsb
lret
lret
pop
out
pop
inc
in
jmp
push
lea
push
popf
mov
loope
std
xor
mov
fwait
dec
addr16
cmp
jns
cwtl
add
jg
push
or
repz
data16
test
mov
iret
sbb
fmull
in
xchg
arpl
fdivrs
fisttps
xchg
add
cli
inc
ljmp
jnp
sbb
dec
loope
mov
and
jmp
xor
sub
notb
popf
cli
imul
mov
xchg
stc
fcomip
aaa
add
dec
adc
mov
push
push
xor
or
xchg
push
ds
movsl
ret
mov
cmp
pusha
push
test
adc
repnz
aas
icebp
sub
mov
dec
rorl
jmp
loope
cwtl
dec
sub
xchg
leave
scas
adc
sbb
sub
add
inc
push
xadd
dec
mov
jno
dec
test
mov
add
or
pop
push
mov
fbld
ss
and
in
ds
sub
sbb
pop
sbb
sbb
push
fwait
xlat
nop
sbb
jecxz
cmp
inc
xor
fistpl
or
icebp
sbbl
jo
sbb
push
adc
movsb
aas
imul
xor
incb
outsb
sub
lea
jg
addr16
orb
das
lds
cmp
test
mov
jo
cmpsl
xchg
rorl
in
dec
in
sbb
in
cmp
mov
stc
push
sahf
mov
scas
cs
ljmp
dec
xor
and
out
adc
pop
and
lahf
popf
fs
jecxz
pop
mov
fnstenv
pop
and
cmp
mov
ret
cld
and
out
add
rcrl
outsb
stos
xchg
and
outsl
or
hlt
cmc
adc
xor
jae
das
cmp
sub
divb
insl
pop
ret
inc
inc
xor
pop
adc
inc
enter
addr16
xchg
xchg
mov
mov
cmp
mov
insl
scas
popa
es
jae
addb
leave
mov
sti
insb
in
ss
out
inc
xor
inc
xchg
xchg
movzwl
gs
imul
lock
sti
dec
int3
data16
mov
sbb
lock
adc
pop
orl
ja
stc
stos
mov
or
jg
or
cmp
les
aas
pop
or
cmp
jecxz
cli
scas
xchg
bound
int
jecxz
loope
dec
mov
jnp
xchg
imulb
pop
jl
or
insl
xlat
lea
imul
js
stos
out
cwtl
shll
in
sub
iret
add
cmc
xor
pop
testb
mov
insl
test
test
xchg
xchg
dec
inc
and
pop
sbb
fs
jl
ja
mov
in
xchg
pop
jne
mov
inc
popa
lea
stos
jno
cmpb
outsl
sti
push
lods
scas
pop
mov
sbb
aad
xchg
xor
push
sbb
js
pop
dec
in
or
or
jmp
sub
mov
mov
mov
pop
fisubl
sbb
xor
adc
leave
sbb
cwtl
lock
das
or
out
repz
xchg
jmp
lods
lret
imul
scas
sub
stc
bnd
ljmp
sahf
adc
cld
xor
mov
jge
inc
adc
mov
ret
cwtl
sub
pushl
and
and
xchg
mov
xchg
aad
aas
idiv
ret
xchg
sbb
pop
jnp
mov
je
sbb
pop
push
mov
outsb
add
adc
rorb
lret
hlt
dec
scas
dec
jp
adc
outsb
push
mov
mov
xor
mov
mov
outsl
pop
out
or
adc
bnd
out
xchg
and
cld
push
fildll
popa
pop
stos
xchg
or
movsb
pop
mov
push
sbb
ret
push
fnsave
push
adc
xchg
dec
mov
xor
aad
adc
mov
flds
outsl
push
test
ljmp
add
fmull
das
nop
int3
mov
cs
add
sbb
mov
mov
inc
mov
addr16
lea
lahf
repz
cmpsl
jae
xchg
jge
dec
lsl
adc
aas
js
popa
cld
dec
lcall
ljmp
push
push
dec
push
add
xchg
or
sti
testb
std
dec
mov
popa
lcall
mov
push
jbe
and
mov
in
pop
scas
push
xchg
cmp
ss
cli
sbb
cmpsb
xchg
arpl
int3
iret
roll
nop
flds
push
scas
adc
insb
inc
scas
adc
jecxz
clc
cmp
cmp
mov
push
cs
cmpsb
jp
jne
jle
lahf
add
fdiv
test
and
ret
mov
int3
xor
xor
dec
jbe
ds
jno
loope
dec
xorl
js
or
jle
adc
fstpt
mov
jp
shrl
sbb
add
add
movsl
lds
loope
dec
lea
je
arpl
mov
jg
add
xor
sarl
loopne
pop
cmp
pop
pop
pop
mov
pop
lock
jg
adc
stos
add
push
loop
cmp
and
dec
push
pop
test
ficoms
sub
adc
fs
xchg
outsl
idivb
push
jmp
fs
push
sahf
xchg
mov
and
lock
mov
cmpsb
pop
jbe
pop
out
xchg
xchg
add
cmpsl
jmp
add
aam
mov
push
notl
insb
loop
cmpsl
jp
cmp
mov
push
pop
adc
movsb
int3
jp
mov
cmc
fs
xabort
aad
mov
insb
pop
in
stos
jecxz
pop
sbb
push
inc
push
cwtl
inc
out
or
xchg
jp
dec
jge
mov
mov
jnp
adc
rorl
scas
inc
pop
int
push
in
dec
addr16
testb
fistps
pop
sbbb
pop
aaa
mov
mov
xor
xor
mov
test
pop
mov
div
push
push
ret
xlat
test
mov
inc
mov
mov
sarb
jb
int
mov
add
stos
or
mov
pop
ja
lret
out
aaa
and
fcmovnbe
add
lods
xchg
stc
movsl
push
add
lret
ror
cltd
mov
mov
push
repz
flds
cmp
or
popf
bound
inc
sbb
add
push
mov
xchg
loope
mov
outsb
dec
cmpsb
or
mov
jmp
fdivrl
xor
lret
dec
pop
or
jne
lret
cmp
scas
pop
jbe
jg
jg
add
jge
adc
push
outsb
loop
in
ljmp
push
jno
lock
cltd
aad
mov
inc
and
mov
adc
testb
in
test
jne
add
dec
sbb
pop
mov
rolb
insb
xor
mov
mov
mov
stos
push
in
xchg
push
call
add
adc
scas
pop
in
testl
cs
rcl
mov
pop
notb
mov
mov
aaa
sub
movsb
mov
int
movsb
push
jl
gs
inc
lret
cmp
mov
cld
in
xchg
stc
insb
inc
adc
mov
inc
jl
mov
stc
inc
stos
jbe
out
hlt
iret
and
loope
mov
jg
jle
or
gs
and
outsl
je
mull
mov
push
mov
out
or
sub
xchg
push
xchg
scas
into
nop
outsl
mov
clc
inc
pop
mov
jae
lret
mov
or
adc
mov
add
data16
sub
cld
out
orl
out
sub
and
push
xor
roll
jb
cmp
push
nop
cltd
xchg
fadds
clc
and
les
loope
cmp
cmp
iret
sub
out
and
sub
xor
push
and
mov
js
jle
xor
pusha
sub
cmp
leave
jnp
movsl
test
test
xor
leave
rclb
cmp
popf
cmp
sbb
xchg
mov
ja
inc
mov
sub
sub
xchg
jne
dec
fidivrs
dec
sbb
notl
and
gs
pop
mov
and
repnz
je
pop
mov
mov
pop
mov
pop
ljmp
xor
push
inc
test
mov
fisttpl
jnp
int3
ds
insl
mov
aaa
dec
bound
dec
test
mov
and
in
xchg
xchg
movsl
and
cmp
mov
data16
xchg
mov
test
test
and
mov
test
cli
push
jae
push
outsl
adc
pusha
les
push
clc
call
in
cmp
imul
repnz
aaa
shl
xchg
push
add
or
mov
mov
call
popa
cmpsl
lods
loop
out
divl
lods
int
stos
ja
nop
and
jp
xchg
mov
into
sahf
pop
cwtl
xchg
sub
or
mov
inc
mov
fldcw
sub
jle
xor
std
xchg
test
out
lret
fs
mov
dec
dec
cltd
cmp
dec
sbb
enter
sbb
mov
mov
xlat
movb
push
repz
stos
sub
dec
es
mov
cld
mov
lea
aaa
add
pop
loope
leave
jo
jle
loop
push
cmpsl
lret
ret
repnz
in
pop
cmp
jbe
cltd
fstpl
push
pop
mov
jl
shl
aas
push
loope
adc
jo
insl
xchg
enter
cmp
add
cltd
gs
fidivs
aad
aas
pop
mov
repnz
mov
adc
or
not
cli
mov
sub
hlt
adc
dec
or
push
cld
or
shrl
and
shr
dec
imul
clc
aaa
mov
mov
xor
ret
pop
xchg
data16
cld
inc
and
lahf
and
push
mov
rolb
mov
pop
rorl
or
fmull
or
mov
jle
dec
cmp
cmp
mov
scas
xorl
popf
rcr
addr16
jbe
jle
ror
bnd
insl
pop
ljmp
fnstcw
inc
rcl
inc
sar
cmpsl
pop
jg
icebp
push
adc
bound
mov
dec
dec
mov
inc
mov
xchg
cs
add
add
or
subb
andl
add
push
test
fs
out
nop
mov
mov
dec
jne
lds
pop
sti
stos
fs
lock
xchg
jle
cmp
cmpsb
outsl
outsb
jae
std
loope
test
inc
cmp
jne
xlat
jle
adc
ja,pt
faddl
mov
cltd
test
or
add
scas
sarl
xor
pusha
jno
fwait
stos
mov
lods
lds
xchg
mov
int3
stos
jle
adc
and
scas
pop
mov
pop
stc
xor
adc
leave
rcr
test
mov
jle
out
call
sub
cli
jae
xor
loop
mov
or
sub
pop
mov
dec
adc
add
cltd
adc
adc
ljmp
imul
xchg
jo
lret
pop
or
lret
int3
mov
mov
stos
adc
andb
xchg
fbstp
movsl
push
mov
std
and
stos
sub
popf
andl
push
ds
outsl
lock
pushf
push
test
mov
repnz
aam
outsb
push
jecxz
sarb
mov
and
andl
pop
sbb
outsb
or
sahf
dec
add
ds
adc
es
inc
push
shll
cltd
push
cmp
pushf
int
or
xchg
cmp
adc
jo
clc
adcl
iret
mov
mov
sub
push
mov
scas
enter
es
mov
jno
test
add
sti
in
insb
dec
mov
lahf
lret
movsl
cli
jge
lcall
mov
mov
pop
mov
mov
adc
cmp
inc
sahf
insb
dec
push
or
insl
decb
push
in
fisttpl
sub
jp
inc
les
cmp
aaa
xor
rorb
stos
sub
mov
mov
popl
addl
jl
sarl
adc
dec
filds
imulb
add
scas
cmp
pushf
inc
shrl
adc
xchg
pop
aad
xchg
clc
enter
aaa
cmp
sbb
cmpsl
test
or
std
repnz
dec
sub
in
lahf
inc
lock
mov
iret
mov
test
mov
call
aam
xor
xlat
stos
sub
ret
fdivp
and
inc
loop
jp
lret
movsl
popa
xor
addr16
inc
sub
lret
and
stos
lcall
jp
add
cmp
fisubs
or
push
out
fbstp
dec
xchg
aam
or
cmpl
or
sahf
sbb
insb
mov
adc
mov
push
xlat
imul
popa
in
xchg
add
pop
cwtl
bound
pop
jge
sbb
testl
in
mov
push
and
mov
shll
mov
sbb
negb
mov
adc
push
mov
leave
cli
adc
jbe
mov
es
lds
insb
push
aad
inc
punpckhdq
lret
push
loopne
clc
std
mov
xchg
es
sub
pop
push
inc
popl
sub
lahf
movsl
push
jle
pusha
adc
or
jl
fdivl
sbb
cwtl
mov
shlb
nop
jmp
in
repnz
cmp
je
pop
movsl
lret
sti
dec
inc
push
test
shlb
xchg
lcall
popa
jmp
adc
dec
cwtl
mov
mov
pop
sbb
jmp
lds
pop
in
xor
cmp
inc
inc
jge
push
add
mov
into
loope
cmp
inc
adc
jb
xor
es
inc
subb
xor
push
dec
xchg
push
imul
mov
push
lock
mov
sbbl
shrb
fwait
mov
add
int3
and
stos
enter
popf
leave
adc
negl
push
jae
cmp
mov
and
or
fdivp
cmp
dec
je
aam
dec
je
or
cltd
mov
in
mov
cs
xchg
arpl
push
mov
push
mov
or
lock
bound
push
push
mov
sahf
outsb
lds
push
sbb
shrl
fmuls
mov
int3
push
push
clc
mov
xor
dec
push
xor
mov
mov
lret
xchg
sub
push
fdiv
in
cmp
out
fwait
cmpsl
addb
sub
mov
sub
pop
prefetchwt1
shr
rorb
adc
pushf
hlt
popf
mov
push
xor
xchg
dec
mov
sbb
enter
cld
inc
repnz
dec
fsubr
imul
loope,pn
and
into
dec
mov
push
jnp
and
mov
sar
adc
add
cmp
nop
imul
dec
or
imul
lret
pop
dec
cmp
mov
xchg
sub
stos
stos
cmpb
xchg
xchg
das
inc
or
enter
cmp
fcomp
sbb
sub
gs
pop
je
cmpb
add
sbb
adc
aas
ficompl
mov
pop
pop
adc
mov
in
mov
ret
jo
lret
sbb
fiadds
stos
je
orb
rcrl
or
sbb
dec
pop
xor
cmpsl
into
xchg
cmp
pop
sub
push
pop
arpl
lods
jmp
sub
fisttps
iret
in
or
sbb
mov
push
cld
iret
scas
notl
inc
out
insl
sarl
mov
xchg
pop
ret
ja
loop
push
xor
or
mov
add
pop
dec
mov
mov
ss
cmp
test
clc
cmp
inc
pop
repnz
test
push
pop
ja
hlt
leave
outsb
jo
scas
hlt
sar
mov
cli
les
scas
add
sub
mov
inc
js
les
and
jecxz
pop
xchg
data16
jne
ja
loopne
gs
inc
inc
jle
sbb
outsl
inc
cld
jae
jne
stc
lret
fwait
add
mov
idivl
sub
test
aad
cmpsb
mull
js
cltd
add
mov
pop
add
fadd
dec
mov
mov
dec
les
in
inc
test
lcall
push
push
icebp
mov
push
jb
push
int3
mov
cmpsl
add
add
lock
das
jg
bound
es
subl
cmp
cli
sub
xor
xor
mov
sub
dec
shrb
movsl
pop
jne
ficompl
popa
shrb
mov
xchg
mov
test
inc
mov
pop
inc
out
and
fdivs
jl
in
outsb
cmp
mov
daa
hlt
insl
mov
dec
inc
cmp
movsb
mov
sti
aam
fcompl
push
idiv
push
push
sbb
xchg
mov
das
lret
pop
adc
inc
imul
aam
fsave
xor
lret
ss
nop
push
out
imul
std
or
xor
adc
xor
mov
dec
push
setge
xor
inc
lcall
shl
xor
cmp
les
inc
push
pusha
inc
popf
pop
sub
adc
lret
add
in
std
fisubrs
cltd
inc
pop
xchg
iret
mov
rolb
xor
push
ds
jno
fstl
lahf
inc
fbstp
adc
jns
sarl
pop
outsl
dec
mov
outsl
add
mov
int
dec
xchg
inc
pop
mov
std
out
jl
sub
xlat
imul
fsubrs
fimuls
jge
out
divl
sub
adc
movsl
subb
sub
in
jp
sub
xchg
mov
sysret
lret
xchg
cli
fs
lret
mov
jbe
icebp
push
divl
pop
xchg
pop
mov
adc
jno
addr16
sbb
mov
ret
mov
in
nop
rcrl
ja
push
rcrb
shrl
je
jp
mov
mov
pop
psubw
fucom
adc
jnp
cmp
roll
stos
scas
sahf
adc
arpl
fidivrs
invd
cmpsb
push
shr
orl
hlt
shll
enter
stos
in
pop
test
fst
xchg
push
sub
shl
js
cmpsb
inc
loope
xor
mov
lret
cmc
xchg
xor
test
shlb
popf
rorl
push
jmp
xchg
cmp
in
and
and
ljmp
mov
cmp
inc
mov
add
cmpsl
xchg
xchg
addr16
rcrb
xor
scas
cmp
sbb
mov
dec
aaa
jnp
inc
lock
ret
push
aam
int3
aas
add
or
push
adc
mov
mov
mov
adc
cltd
es
shr
popa
fwait
cmc
icebp
push
cld
popf
push
jge
clc
mov
cwtl
dec
lock
inc
aad
cmp
or
mov
fdivrs
sbb
daa
sbbl
adc
pop
push
xchg
xlat
cmp
mov
pop
cmp
dec
jge
in
mov
mov
divb
xor
in
pushf
and
fwait
and
int3
jg
push
push
lods
mov
sbb
mov
lods
add
pop
and
sbb
inc
and
mov
xor
jp
int
cmp
add
mov
inc
mov
push
and
pop
or
mov
fwait
jecxz
wbinvd
enter
cwtl
fstl
mov
lods
les
push
popf
jle
insb
add
and
mov
push
jp
fistl
in
jge
pop
and
jbe
xor
dec
in
cld
mov
test
xor
push
movsb
push
loopne
sub
inc
xor
jbe
fbstp
std
aam
arpl
loope
lods
cmpsb
xchg
xor
adc
cmp
and
jb
pop
out
cwtl
adc
cmovnp
or
add
int
xor
lds
mov
ja
sahf
xchg
cmp
imul
in
ret
xchg
rolb
dec
enter
test
les
popf
in
ljmp
xor
stos
sub
push
sbb
sbb
into
or
xchg
daa
push
out
ret
lahf
mov
sti
divl
jno
fistl
xchg
outsb
fstps
nop
ljmp
loop
mov
mov
mov
dec
cmp
xor
testl
das
stos
pushf
lods
popa
pop
jmp
mov
jp
movsl
jmp
addb
mov
pop
add
insl
clc
sub
push
mulb
cmpsb
mov
add
jge
loope
in
call
adc
add
inc
dec
gs
daa
loope
std
adc
mov
fsubs
in
jo
div
xchg
sbb
jno
lea
lds
or
mov
stc
sub
jecxz
mov
ljmp
nop
adc
xor
sub
push
push
sbb
movsl
std
aam
and
pop
mov
lret
and
mov
jle
in
rorl
rol
gs
sub
jl
xchg
icebp
rcrl
and
pushf
ja
int3
repnz
iret
sub
jns
lods
add
ljmp
sti
bound
mov
cmp
sub
dec
lret
push
arpl
test
cmp
push
cmp
xor
inc
inc
ss
jne
sub
lods
mov
push
pop
pop
push
add
fimull
or
js
mov
push
sbb
adc
adc
dec
adc
js
mov
sahf
stc
imul
sar
inc
pop
push
outsb
out
lea
pop
pop
and
clc
loop
movsb
mov
leave
enter
test
sub
mov
add
xchg
sahf
mov
ror
jno
xor
push
aad
mov
and
nop
hlt
std
dec
scas
pop
cmp
jo
mov
ret
insb
ffreep
sub
pop
inc
aas
xchg
mov
fsubrs
add
rcll
leave
out
out
mov
sbb
cmpsl
push
and
getsec
aaa
iret
sti
aaa
push
push
cmp
stc
int3
insb
test
movsl
sti
sbb
fucom
push
daa
je
adc
xchg
mov
cmp
loopne
loope
cs
pushl
xor
adc
sbb
xor
push
insb
mov
stc
testb
and
data16
in
push
test
mov
add
mov
ljmp
pop
lea
mov
imull
cmovge
push
les
xor
push
mov
jno
lcall
sbb
or
mov
mov
mov
mov
fdivrl
imul
outsl
lods
or
xchg
mov
xlat
xor
lahf
fimull
mov
xor
lret
lret
fistl
pushf
aas
insl
sub
push
fs
push
push
add
int
xlat
mov
sahf
push
or
lret
or
ret
inc
sahf
push
jno
lock
nop
or
cld
out
aas
dec
xor
pop
xchg
fidivrs
pop
out
sbbl
ja
push
and
xor
dec
and
out
xor
bound
out
xorb
xlat
cs
outsb
rcl
sub
cltd
sub
ds
mov
in
in
fs
jbe
xor
lret
inc
lds
stc
fdivl
loop
sbbb
ljmp
scas
in
call
test
orb
mov
mov
add
cmpsb
sub
dec
test
xchg
cld
daa
sbb
and
bound
mov
mov
xor
stos
pop
xchg
jno
mov
scas
dec
mov
and
cmp
or
adc
cltd
jecxz
cmp
sub
out
lods
movsl
hlt
inc
shrl
xor
cmp
dec
inc
or
test
in
pop
aas
lods
mov
inc
loope
scas
jg
mov
stos
or
xor
xor
ja
int
sub
cmp
xor
adc
dec
fiadds
xchg
mov
xlat
arpl
std
je
add
cmp
xchg
mov
fadd
dec
jo
add
sub
mov
test
push
lret
dec
clc
fldenv
sub
xchg
xlat
sub
fmul
adc
jnp
fsub
ret
int3
adc
add
mov
fdivl
ljmp
push
lea
cltd
pop
sbb
push
pop
icebp
mov
pop
scas
inc
inc
mov
jg
pop
mov
lcall
lret
mov
lahf
call
lret
aaa
xchg
mov
clc
les
jmp
lea
rclb
iret
ss
stos
push
and
inc
jne
or
mov
sbb
or
lret
aaa
lds
sbb
pop
clc
out
scas
mov
dec
sub
fisttps
ret
call
ret
aam
adcl
cmp
push
scas
jl
mov
add
cmp
fldt
aad
ja
js
imul
enter
jne
call
mov
rorb
inc
add
lret
fs
mov
dec
fiaddl
mov
shl
or
sar
inc
push
cmovge
add
js
stc
inc
int
push
call
push
sbb
ss
std
lods
mov
add
fisttpl
mov
divl
push
and
mov
insb
inc
sbb
movsb
add
fiadds
mov
cmp
fwait
decb
movsb
dec
mov
or
test
adc
pop
je
xlat
test
adc
stc
push
into
ret
cld
jne
mov
ljmp
nop
dec
ljmp
cmpsb
test
xchg
loopne
or
adc
adc
jbe
fstl
push
fsubl
pop
outsb
les
sti
test
or
cltd
lcall
mov
push
fwait
sub
pop
into
test
rorl
sub
and
and
and
jle
push
cmp
test
addr16
jns
ret
cmpsl
push
popa
iret
rcrl
xchg
mov
outsl
xor
movsb
jnp
mov
xchg
jmp
pop
repz
xchg
jg
in
imul
inc
push
in
loop
xchg
mov
sbbb
push
mov
push
mov
data16
sub
adc
jno
repz
and
cmp
shlb
adc
xchg
rcl
call
or
dec
mov
xchg
xor
push
mov
xor
leave
mov
inc
add
or
xor
pop
jb
orb
add
adc
dec
xchg
lods
ss
arpl
mov
and
inc
fdivs
xor
cmp
dec
aad
iret
out
add
mov
mov
xchg
push
sub
mov
outsl
add
mov
orb
adc
jle
push
jge
cmp
sub
test
lods
aad
stc
mov
sbbl
sbb
cwtl
push
in
adc
sub
push
movsl
mov
loope
add
shll
or
repz
xchg
out
and
adc
or
aaa
or
and
mov
lret
and
and
cmpsb
xor
pop
lea
sbb
and
inc
out
sbbl
cli
jbe
cmpsl
cld
mov
lock
xchg
mov
std
mov
popf
shrl
jns
jg
mov
sub
arpl
rol
and
mov
pop
push
pop
lahf
add
es
bound
xchg
cmc
sbb
hlt
jle
test
jmp
xor
inc
push
pop
mov
negl
push
adc
pop
add
xchg
divl
xchg
xchg
xchg
inc
inc
enter
sbb
inc
icebp
mov
int
mov
sbb
push
add
cmp
mov
enter
sbb
clc
loopne
mov
sbb
push
sbb
sub
shll
in
mov
js
push
aas
cmp
push
jae
outsl
xchg
addr16
jp
xor
lock
dec
sbb
or
mov
adc
mov
xchg
dec
cmp
stc
arpl
into
stos
pop
xlat
dec
aam
lds
das
fistpl
in
sbb
and
outsb
popf
jl
rorb
xchg
and
push
sbb
fsts
adc
xchg
xor
push
push
xor
jae
jecxz
popa
mov
sbb
mov
rclb
fiadds
adc
sbb
push
inc
daa
fcoml
jle
jae
xlat
ret
jmp
or
mov
cltd
dec
fs
push
daa
mov
mov
into
shl
jg
pop
xchg
xor
in
leave
inc
imul
cmpsl
add
push
xlat
jle
loop
cmpsl
xchg
scas
imul
clc
cs
sahf
xor
test
bound
push
pop
dec
fistps
xchg
test
adc
js
test
sub
xchg
repz
mov
sub
int
dec
xor
xor
jmp
jle
pop
ud2
inc
mov
addl
sbb
icebp
or
pop
lcall
lds
in
addr16
jmp
jo
lcall
cmp
push
cmpsl
xchg
and
lods
push
shlb
fwait
testb
das
pop
int
sti
xchg
nop
loop
jge
xchg
mov
test
test
sbb
pop
scas
xchg
fisubrl
sub
fcoml
enter
stc
fldl
addr16
and
js
xor
add
sub
mov
add
int3
or
rclb
jbe
fwait
jecxz
sbb
sbb
xchg
fiaddl
clc
pushf
aaa
pop
stos
pop
test
dec
xor
push
aaa
sbb
xchg
fiadds
push
mov
inc
push
shl
fs
sbb
enter
xchg
rcrb
in
cwtl
dec
jecxz
test
negb
push
mov
and
lock
outsb
cmp
pop
jb
nop
jmp
enter
dec
imul
sub
out
or
out
cmp
out
testl
ror
add
xchg
push
popf
cli
jno
jle
dec
cmp
mov
mov
outsb
addr16
shll
push
mov
mov
mov
rcll
xchg
adc
test
bound
mov
add
xchg
ficomps
out
pop
xor
xor
rcrb
notl
orb
pop
cld
add
push
dec
cmp
test
std
cmc
add
pushf
ljmp
mov
les
insb
nop
cmpsl
cwtl
dec
nop
int
xor
stos
jl
push
mov
inc
mov
movsl
sub
mov
repz
dec
jbe
mov
int
and
clc
repnz
push
lcall
push
icebp
add
aas
dec
fwait
dec
lret
xor
xchg
mov
jbe
test
nop
subb
sub
xchg
sub
mov
enter
mov
adc
push
icebp
arpl
fs
or
and
xlat
xchg
mov
xor
xchg
jmp
jae
bound
idivb
ret
std
outsb
mov
fsubrl
and
fs
test
cmp
jno
imulb
imul
sahf
or
fisttpll
or
or
and
nop
cld
mov
jl
add
mov
and
popf
push
andl
or
mov
mov
dec
packsswb
xor
incl
lods
aas
stos
jl
dec
popf
in
and
dec
and
cli
pop
or
ljmp
push
or
xchg
lods
push
pop
mov
shr
jno
rcrb
mov
in
or
js
jl
test
or
push
loopne
mov
adc
jmp
mov
mov
xor
cwtl
jge
in
movl
fisttpl
push
or
sti
data16
jne
fsubrl
lcall
inc
push
cmp
and
rolb
je
or
sbbb
inc
pop
and
imul
out
stos
stc
or
arpl
ja
dec
pushf
or
cmp
hlt
sti
xor
inc
mov
add
repz
dec
subb
int3
fmull
movb
in
fisttpll
jmp
mov
adc
mov
decb
or
and
das
sbb
xchg
jbe
xor
xor
sbb
cli
xchg
push
mov
sbb
stc
stos
push
jnp
cmp
and
mov
sarl
cltd
sub
fs
je
push
mov
scas
mov
push
inc
or
loope
lahf
push
aaa
add
incl
sahf
test
xchg
jnp
xor
in
ljmp
movsl
xor
aam
fbstp
je
lds
jecxz
das
xchg
ror
lock
clc
jp
mov
and
cmp
mov
adc
jno
data16
sahf
xor
and
push
add
and
fcomps
lahf
sbb
mov
and
pop
lcall
aaa
into
mov
addr16
sbb
xor
push
dec
out
stos
sbb
adc
xchg
insb
popa
push
sti
jbe
pop
or
xor
sbb
cmpsl
imul
les
push
fcompl
jbe
add
insl
fstl
int3
leave
dec
pop
dec
push
int
sub
cli
add
pop
pop
jg
in
push
jns
xor
cwtl
cmp
mov
mov
neg
bound
iret
xor
outsl
out
push
fidivrl
or
gs
sbb
push
mov
addl
je
push
adc
cmp
pop
mov
mov
jle
lds
dec
loop
adc
adc
pop
xorl
push
icebp
leave
mov
add
dec
xchg
ficompl
test
insl
sub
rcr
out
loop
movb
call
out
xchg
push
sti
pop
mov
xor
mov
sti
mov
into
add
lret
push
dec
loopne
je
aam
xor
adc
jp
cmp
jl
out
test
in
jge
xchg
sbb
cmp
lea
mov
jg
mov
push
dec
cltd
lds
mov
adc
mov
clc
sub
flds
shll
push
jl
test
pop
mov
push
mov
pop
pop
cmpl
jg
dec
pop
popf
xchg
insl
insl
aad
popf
stc
dec
sbb
pop
cmp
cltd
iret
xor
cwtl
das
enter
fadds
les
push
aaa
jno
pop
fadds
and
movsl
xlat
inc
aam
sahf
arpl
mov
aaa
insb
cmpsl
add
insl
fcmovbe
jno
outsb
mov
fcom
cmp
cmp
ret
dec
push
sub
sbb
sahf
push
aas
jno
test
or
sub
mov
cmp
stos
or
movsb
xchg
or
subl
pop
fwait
pusha
inc
jne
arpl
mov
mov
cmp
je
xor
push
jbe
mov
andb
loopne
xor
jmp
mov
in
inc
inc
pop
xor
aad
sti
and
inc
orb
sbb
mov
jbe
pushf
imul
rcrb
xchg
fs
arpl
push
leave
push
inc
insl
sarl
inc
xlat
stos
fstpl
mov
or
pop
ds
hlt
mov
sub
adc
inc
pop
aam
xor
out
inc
fdiv
pop
outsl
and
push
loop
dec
test
cmp
popa
pop
adc
test
push
cmp
pop
push
out
push
pop
mov
bound
and
in
ljmp
subl
iret
dec
mov
dec
mov
frstor
rcrb
mov
fdivl
testb
and
adc
hlt
lods
sti
into
pop
aas
movsl
mov
repnz
and
cmp
mov
mov
ret
mov
cmpl
rorb
scas
add
ljmpw
or
or
pop
stc
pop
push
fldcw
push
pusha
fbld
in
in
inc
sbb
repnz
or
xor
push
and
lods
test
xor
jns
sbb
xlat
enter
jb
ss
jae
jp
mov
mov
sbb
pop
jo
push
sub
dec
xor
xchg
or
push
xor
ret
ret
cmp
xor
mov
push
adc
pop
sbb
sub
mov
dec
mov
icebp
repnz
jns
cmovg
add
push
jmp
ds
adc
mov
lahf
rcl
insl
push
jno
and
incb
sub
scas
stos
sbb
mov
jge
mov
std
test
pop
cmpsb
aaa
mov
sub
cmp
dec
push
icebp
lret
cld
lock
add
sahf
je
lahf
out
inc
adc
xchg
mov
out
orl
cmp
sbb
cwtl
or
lahf
push
adc
cmp
sub
imul
or
stos
add
call
or
jmp
ss
les
loope
ss
push
xchg
aad
push
fcmovu
gs
gs
cmp
cmp
cmp
stos
push
xor
inc
leave
mov
jno
aad
out
inc
lds
shll
or
jmp
mov
mov
out
mov
js
lahf
es
mov
mov
ficoms
cmpsl
jae
jp
cmc
hlt
or
fldl2t
sti
jne
test
mov
clc
movsb
in
call
add
jecxz
dec
aad
lahf
mov
nop
mov
jp
pop
notl
add
pusha
int
and
scas
loope
in
inc
mov
mov
mov
xchg
js
lret
pop
jae
dec
jno
or
mov
in
out
dec
test
fdivl
jbe
cmc
jo
ljmp
roll
push
mov
flds
cmp
push
inc
movsb
push
in
jecxz
cmpsl
ss
xchg
in
xor
aam
mov
inc
mov
pop
insb
inc
fnstenv
movsl
xchg
or
xchg
popf
ja
adc
inc
and
clc
lock
pop
cwtl
jmp
mov
xchg
inc
add
xor
outsb
jp
les
pop
sti
xor
sub
inc
xchg
dec
cmp
push
or
pop
and
int3
cmpsb
stos
adc
jns
sub
dec
loopne
arpl
or
pop
ljmp
dec
ret
das
pop
sbb
add
push
jg
out
jp
jae
notb
addb
jb
cmp
push
pop
pushf
dec
and
lock
rol
jge
lret
ljmp
in
dec
pop
clc
add
sbb
fdivl
jmp
aam
pcmpgtw
inc
mov
push
int
mov
inc
sub
sub
cld
push
aad
out
cmp
sbb
add
pop
imul
add
aas
and
icebp
mov
subb
ljmp
mov
adcb
gs
stos
mov
fs
mov
xchg
into
bound
icebp
push
dec
idivb
lret
test
in
mov
sti
add
in
rorl
mov
inc
in
adc
loop
and
pusha
jno
iret
push
jnp
inc
or
jmp
lods
neg
fwait
cmp
fwait
push
mov
xlat
fsts
push
or
mov
mov
sbb
fisttpll
xlat
mov
clc
cltd
dec
mov
push
or
push
jg
aaa
ret
push
adc
sub
xor
je
stos
inc
int
jbe
and
lods
dec
negl
popa
xchg
popa
std
movsb
in
or
pop
mov
sub
xchg
push
sbb
lods
and
fsubl
adc
push
sub
jge
mov
orl
cli
jp
jns
jo
jbe
loope
mov
loop
jl
fwait
pop
pop
push
or
shlb
es
fildl
insl
jg
inc
into
je
push
or
test
jle
push
inc
pushf
nop
test
mov
mov
cmpsb
fwait
push
stos
adc
out
cmc
add
cli
dec
aad
loop,pn
fdivrl
fsubr
add
and
jbe
fnstsw
test
cmp
jbe
inc
adc
sbb
mov
mov
mov
lret
lock
adc
mov
push
mov
out
push
inc
lock
scas
imul
jge
adc
popa
cwtl
sarl
mov
add
push
adc
inc
cmpsl
mov
inc
nop
mov
cltd
cmp
and
mov
lcall
pop
popf
pop
test
xor
sub
repnz
push
loop
fwait
adc
callw
leave
dec
loope
loope
push
push
ret
adc
stos
hlt
std
sub
sub
jmp
cld
xor
lea
popf
fucomip
add
stc
orl
and
sbb
ds
test
xchg
add
imulb
jb
fsubr
push
sub
insb
or
leave
lahf
leave
adc
rcrb
push
jmp
mov
dec
and
stos
mov
xchg
inc
jp
stos
sub
and
loop
or
aad
push
sti
xorl
loope
push
insb
jno
add
inc
cs
sarb
xchg
xor
in
xor
push
pushf
shrl
xor
test
imull
icebp
into
test
adc
push
inc
xlat
es
in
es
dec
mov
xor
insl
xor
cmpsb
lds
jp
out
rorb
xor
lret
lret
loope
jecxz
inc
out
loope
test
lock
cmpsb
pop
xchg
dec
repnz
fwait
sbb
lods
pop
ljmp
mov
inc
push
fs
jo
je
push
ljmp
fstpl
sbb
test
sbb
pop
dec
push
dec
jnp
mov
scas
ja
jp
push
dec
cmp
or
fimull
mov
leave
movsb
in
xchg
fcompl
scas
fnsave
add
mov
fimull
dec
add
sub
cmp
cmp
shl
pop
in
add
pusha
jno
in
mov
or
ficoms
mov
roll
xlat
mov
mov
lock
fsubrp
rorl
jl
lcall
cmp
push
movsl
pushf
aam
jp
shrl
xor
mov
sub
repz
leave
push
dec
xorb
cmp
test
adc
in
test
cld
loop
inc
shll
xchg
bound
jnp
cmpsb
dec
movsb
out
ret
lret
dec
lods
stos
in
cmp
push
xchg
test
jae
cld
mov
sub
movsl
pop
mov
out
inc
cmp
jl
jge
daa
ficomps
xchg
sub
cwtl
out
jae
cmp
loopne
mov
rcll
cmp
divl
pop
push
hlt
rol
cltd
jge
out
jno
cld
leave
jg
dec
ss
fildl
lods
icebp
loopne
cmp
dec
sub
adc
mov
adc
cmove
or
repz
add
daa
icebp
outsl
dec
jg
jb
lods
dec
cmp
cmp
pop
sbb
xor
or
aam
lock
fistps
shlb
xor
mov
repz
mov
call
pop
loope
stos
shl
and
div
inc
mov
push
dec
bound
xchg
pop
push
or
inc
test
jno
lcall
out
clc
pop
cmp
fdivs
sti
sub
js
arpl
fwait
insb
sbb
jmp
sub
int
out
mov
setge
sti
jne
test
adc
mov
mov
inc
shll
mov
mov
negb
mov
loop
push
outsb
adc
xchg
in
test
cld
jge
adc
inc
mov
lcall
gs
frstor
addr16
in
sub
add
movsl
add
mov
mov
jne
cmp
jns
sahf
jno
mov
inc
sbb
rorl
or
pop
call
dec
fwait
xchg
fldenv
add
sbb
aaa
in
ret
scas
test
mov
pop
jo
iret
mov
test
stos
into
lea
pop
pop
jo
in
cs
rorl
and
aas
pop
out
jp
cmp
js
testl
jmp
jb
add
xor
adc
ret
xlat
int3
into
add
xchg
cmp
mov
cli
pop
and
sahf
in
jle
push
adc
mov
mov
or
shrb
pop
dec
mov
aam
push
lock
movsb
scas
movsw
sbb
inc
repnz
shr
scas
and
adc
arpl
fsubrs
sbb
sarb
in
jge
xchg
mov
notb
xor
fiadds
add
mov
xor
lock
mov
dec
mov
fidivrs
add
imul
int3
test
out
xor
sub
add
or
pop
sbb
shr
push
movsl
scas
dec
lea
xchg
jae
cs
lea
mov
push
popa
dec
sub
add
mov
mov
test
sub
popa
lcall
scas
or
les
push
fsubrl
mov
out
xchg
adc
push
movsb
xor
fstpl
jno
push
cltd
inc
lahf
push
stos
ss
jmp
int
or
repnz
dec
dec
std
addl
sub
jo
jnp
shl
cld
cld
fwait
push
out
loope
dec
xor
repz
cmpsl
scas
imul
jge
lret
lcall
dec
mov
push
push
dec
pop
mov
shrb
jae
addr16
int3
jbe
notl
loope
aad
xlat
jns
pop
mov
rclb
test
shl
lcall
push
and
mov
xchg
jne
lods
sub
sti
sub
aad
std
lods
inc
stc
xchg
sbb
ljmp
iret
mov
cmp
adc
imul
pusha
or
or
mov
dec
inc
pop
xor
adc
arpl
pop
fwait
xchg
icebp
pop
jo
adc
pop
movsb
cli
iret
enter
iret
jmp
lods
ret
test
cmpsb
mov
mov
xlat
mov
mov
jge
push
and
sub
insb
sub
testb
repnz
outsb
call
stos
xchg
lods
and
mov
popf
dec
fidivrl
and
daa
mov
jno
inc
ror
in
aas
aad
push
mov
or
movsb
rclb
test
mov
jae
sub
mov
movsb
imul
jno
je
imul
pop
xchg
lds
cmpsb
push
or
arpl
jge
push
xchg
sub
and
jns
pop
ficoml
pop
idivl
jae
loope
cld
sbb
sbb
in
jle
test
pop
cmpsb
mov
leave
mov
sub
xor
jo
cld
shlb
jb
cmp
fnstenv
js
push
pop
push
jl
xchg
cli
sbb
xchg
mov
fildl
ficomps
scas
cltd
cwtl
jbe
add
dec
dec
test
pushf
out
es
pop
add
mov
inc
shrb
out
jns
sbb
dec
mov
push
insb
inc
mov
xchg
call
cmp
xlat
mov
or
sahf
fisttpl
mov
ffreep
cmp
aaa
mov
fs
jo
xchg
pop
adc
xorl
inc
gs
mov
lahf
add
and
leave
test
arpl
adc
mov
jle
cmp
rcl
ljmp
sub
and
jne
aas
repz
fcomi
jae
sbb
jnp
dec
dec
aaa
hlt
outsl
xchg
adc
jl
adc
xor
ret
sbb
mov
jo
mov
push
jae
leave
aas
loope
insl
sub
push
inc
pop
xchg
mov
rol
push
sbb
setno
inc
push
cwtl
jns
sbb
mov
pop
mov
add
mov
adc
imul
xchg
mov
scas
sub
aam
sub
cmp
sarl
bound
rcll
or
rol
scas
fwait
lods
mov
inc
push
sahf
jb
lea
leave
pop
mov
testb
or
jb
ficompl
bswap
lret
cltd
jp,pn
xchg
push
push
fisttps
lock
mov
test
push
mov
out
je
aas
es
sub
lret
add
jecxz
lahf
mov
push
xchg
push
inc
loopne
popf
push
pop
movsb
jbe
fidivrl
adc
inc
scas
mov
and
cltd
adc
dec
enter
ss
dec
xor
mov
sbb
dec
aaa
jae
xor
imul
xchg
push
in
js
aas
or
nop
jle
out
sub
mov
mov
cmp
hlt
loop
or
and
popa
xor
jge
and
pushf
sub
or
push
ds
inc
inc
inc
leave
mov
clc
lret
pop
and
dec
sbb
out
aaa
lock
in
inc
rcr
mov
movsb
xor
fucomip
push
cwtl
jbe
cmp
add
sub
aas
cmpsb
cs
jno
jb
jg
bound
imul
in
sub
lcall
dec
xchg
movsl
adc
das
pop
add
test
outsb
ret
sub
or
daa
jno
and
mulb
movl
enter
mov
in
je
jmp
mov
pop
lahf
ljmp
dec
mov
fisubl
xor
pop
mov
jb
mov
lock
sub
jmp
mov
sbb
shrl
inc
pop
xor
xchg
push
faddl
daa
mov
jge
roll
xchg
or
mov
mov
cmp
push
push
mov
mov
cld
xchg
lahf
mov
adc
scas
negl
jns
mov
inc
fldl
sub
mov
mov
dec
mov
jmp
testl
mov
xor
xor
out
dec
mov
cmpsl
lahf
sbb
test
cs
mov
cmpsl
loope
jne
pop
adc
adc
pop
stc
call
ds
cmc
out
push
and
in
push
sub
pushf
inc
fisttpl
mov
cmp
out
int3
push
push
cmp
sbb
iret
cmp
push
mov
dec
jecxz
mov
repnz
mov
scas
push
mov
dec
mov
adc
cmp
psrlw
out
push
movsb
jae
xchg
test
inc
rorl
orl
lock
mov
mov
cmp
mov
adc
in
pop
mov
xlat
lret
fidivrs
stos
push
pop
aaa
rcrb
pop
xchg
xchg
hlt
fwait
mov
sti
xor
dec
inc
in
jno
stc
lret
xchg
mov
dec
icebp
cld
outsb
cmc
inc
xchg
inc
cmp
rorb
xor
mov
in
xchg
mov
pop
jmp
mov
in
or
xor
popf
ja
pop
xor
pop
ficompl
into
add
mov
jl
sti
dec
pop
mov
xchg
mov
and
xchg
xor
leave
pop
mov
adc
adc
aaa
jne
mov
out
fsubl
push
rcl
rclb
inc
mov
std
push
clc
lock
cmp
cmpsl
mov
lds
adc
jno,pt
cld
les
out
aad
dec
jecxz
shl
pop
rorl
std
jl
dec
out
dec
mov
mov
pop
mov
or
ror
fidivl
cmp
add
movsb
mov
aad
push
loopne
addr16
or
mov
adc
insl
out
iret
subb
pushw
icebp
divb
shrl
mov
jmp
es
add
dec
pop
stos
dec
mov
movsb
xchg
popa
or
rcll
stc
sub
mov
loopne
icebp
fisubrl
jge
jo
xchg
push
mov
je
call
lods
xor
outsl
les
test
popa
inc
idivl
sbb
push
aas
sbb
cmpsl
sbbb
cmp
or
xchg
or
testl
mov
mov
insl
mov
and
pop
ljmp
idiv
std
sbb
cmp
add
push
cmp
xchg
out
movsb
andl
in
ds
xchg
xor
and
push
mov
call
rorl
push
std
cwtl
arpl
jp
dec
inc
xor
mov
mov
add
mov
or
mov
js
loop
cmp
repnz
orb
lods
dec
or
aas
mov
fcmovnbe
pop
jmp
push
fnstenv
stos
jo
movaps
cmp
mov
jle
and
dec
inc
sbb
je
fmull
aaa
cmp
lock
fldenv
sbb
cmp
xor
xor
or
jge
stc
sbb
aam
push
mov
pop
push
in
add
push
push
mov
addr16
and
bound
add
out
out
insl
mov
mov
mov
mov
lds
aas
xor
sbb
dec
mov
xlat
push
pop
mov
or
mov
cs
xor
pop
out
pop
jl
mov
cmp
emms
pop
sub
inc
js
mov
mov
movsl
in
push
and
fcmovbe
xchg
inc
sub
add
sbb
rcr
outsl
inc
mov
pop
aaa
adc
daa
ret
mov
push
iret
inc
cltd
clc
and
inc
js
dec
pop
das
mov
xorw
dec
js
shlb
and
push
pop
call
or
imul
cwtl
mov
xor
aad
pop
repz
fistl
xchg
mov
aad
or
push
pop
mov
push
iret
mov
hlt
fdivrp
sbb
ret
enter
repz
adc
dec
mov
rorl
cmpsb
xchg
push
cmp
push
or
dec
sub
adc
sub
push
pop
pop
sbb
mov
mov
add
cmp
imul
les
mov
push
nop
push
push
mov
ss
jne
xchg
in
mov
push
rcrl
add
orb
sahf
xchg
dec
movsl
jle
call
pop
cmc
mov
ret
sub
mov
or
push
jmp
jne
adc
call
add
rcrl
out
lea
leave
sbb
mov
sbb
or
gs
outsl
out
mov
dec
push
adc
or
push
out
inc
mov
or
push
inc
adc
scas
inc
movsb
xor
xor
jns
hlt
mov
bound
pop
sahf
shlb
gs
xchg
mov
frstor
mov
push
dec
into
add
pusha
mov
pop
fistl
andl
jmp
in
dec
std
addr16
ret
imul
push
jge
stos
loopne
xor
aam
pop
es
xchg
pop
movsb
popa
gs
repnz
jns
iret
outsb
ret
and
rcrl
pop
int
jl
mov
mov
mov
adc
pop
scas
mov
or
and
insb
scas
push
push
dec
sbb
xchg
mov
or
in
xchg
dec
in
push
imul
dec
outsl
or
mov
jmp
lcall
and
ds
mov
mov
fisttpll
mov
xchg
outsb
rolb
rol
hlt
fbld
mov
add
xchg
dec
stos
add
pop
inc
cmpsl
fisubs
sub
mov
sbb
pop
push
pop
int3
popf
dec
hlt
sub
repnz
pop
popa
inc
xchg
sbb
mov
pop
xchg
push
les
cmc
adc
mulb
mov
sarb
or
mov
lds
lahf
dec
mov
mov
inc
popf
jno
int3
mov
lods
sbb
sub
shlb
sahf
fildll
xor
push
xchg
xchg
mov
pushf
xchg
mov
js
dec
std
stc
mov
or
data16
jmp
or
jmp
dec
sahf
sbb
in
xchg
and
push
xchg
aaa
cmc
shll
sbb
xchg
pop
inc
inc
jns
mov
in
add
push
inc
sbbb
pop
cmp
inc
ret
enter
and
sbb
mov
xlat
rep
sub
push
pop
out
xlat
sub
inc
out
sub
sbb
sbb
pop
xchg
push
aaa
into
add
sbb
xchg
test
jg
sbb
loop
mov
push
dec
imul
or
push
out
or
xchg
mov
outsb
and
mov
lock
jmp
xchg
or
notrack
lods
xchg
testb
stc
push
xchg
out
lahf
adc
cmp
push
jmp
xor
leave
lcall
psraw
shlb
lock
cmpsb
push
lock
or
and
push
cmp
movsl
add
ficompl
jge
ret
mov
inc
adc
jmp
cmp
inc
adc
imul
loopne
jge
mov
mov
pop
mov
mov
jbe
sahf
cmp
push
mov
jbe
mov
add
cmp
mov
xchg
xor
out
test
sbb
fistpll
adc
xchg
scas
fwait
adc
in
das
jbe
dec
fimull
add
gs
into
cltd
push
fwait
lea
imull
jae
rorb
shll
xor
shl
adc
gs
addb
pushf
mov
repnz
dec
les
mov
ror
cltd
dec
enter
scas
je
out
inc
pop
inc
repnz
call
ret
mov
add
mov
push
mov
and
xchg
pop
gs
jg
sti
stos
clc
or
pop
xor
cltd
aas
push
jge
sbb
mov
addb
test
push
cmp
call
fnstenv
data16
pop
pop
ret
push
cmp
int3
test
gs
xchg
fstpl
sub
lock
mov
std
mov
loopne
push
xchg
fwait
lods
lock
pop
fs
repz
incb
pop
test
cwtl
cmp
divb
jmp
sub
cmp
sbb
cli
jp
das
ret
inc
lock
mov
adc
lods
outsl
lcall
jbe
mov
push
and
xor
rcrb
or
lock
je
dec
in
adc
sbb
jno
add
repnz
lods
jae
pop
xchg
jecxz
mov
sbb
and
out
cmp
ficoms
xchg
or
pop
dec
inc
mov
sbb
rorb
je
adc
orb
cmp
adc
stc
sti
inc
cmc
lahf
insl
or
jno
lea
push
push
jb
mov
in
add
xchg
jle
mov
out
add
jp
dec
cmp
ljmp
out
cmc
inc
jae
mov
cld
add
xchg
addr16
hlt
cld
dec
xchg
nop
lahf
pop
pop
xchg
xchg
call
pop
adc
jecxz
adc
negl
jge
subb
pushf
dec
mov
jae
inc
iret
aaa
sbb
pop
cli
mov
cmp
push
jg
int3
push
jo
arpl
es
and
mov
push
fcoms
mov
jecxz
jg
dec
sub
jne
jb
jno
negl
xadd
mov
adc
cmp
xor
loopne
inc
cld
jb
xor
push
loopne
fld
shl
mov
dec
mov
stos
aad
mov
mov
iret
inc
pop
xchg
bound
mov
repz
filds
pop
sti
adc
ljmp
sbb
sbb
rcl
pushf
sbb
xchg
mov
jo
xchg
xchg
pop
out
data16
mov
push
jg
mov
pop
imul
data16
pusha
xor
loope
push
popf
les
nop
decb
das
fildll
repnz
sbb
sub
pop
and
fs
cmpsb
aam
popf
xlat
repnz
xor
sbbl
pop
decb
push
mov
fdiv
das
xor
xchg
sub
push
pushf
mov
jbe
mov
popf
xor
xlat
xchg
negl
pushf
hlt
lock
xchg
xorl
and
mov
add
stc
lods
mov
sub
imul
add
push
or
and
inc
fnstenv
test
mov
cmc
inc
cmpsb
xor
dec
fwait
call
stos
ss
pop
cli
insb
enter
or
push
push
dec
push
cs
lret
iret
rclb
js
adc
ss
inc
or
les
ss
dec
faddl
lahf
mov
mov
sbb
mov
ret
adc
mov
cs
jmp
add
cmp
cmpsl
shl
push
ds
inc
sbb
inc
sti
adc
test
mov
fwait
mov
or
xor
ret
jns
xor
inc
repnz
mov
push
imul
jno
cmpsb
and
mov
loop
sbb
stos
and
dec
mov
pop
outsb
adc
lock
movsb
or
xor
cld
movsl
xchg
test
add
rcrl
cmc
cmpsl
and
int3
insl
out
inc
or
sub
rclb
dec
mov
orl
add
sti
cmp
fildll
inc
and
sbb
outsb
mov
cs
dec
imul
js
das
ret
push
push
and
sub
int3
mov
xlat
enter
stc
lock
enter
adcb
les
ret
push
lahf
stc
and
pop
jp
rclb
lahf
jne
add
xchg
mov
pop
lds
xchg
test
mov
cmp
pop
clc
sub
andb
xchg
sbb
mov
stc
inc
xor
cmp
cmp
xchg
iret
into
dec
cmp
mov
push
imul
push
xchg
movsl
mov
mov
xchg
cltd
sbb
movsb
push
testb
sahf
fisubrl
mov
outsl
test
inc
int
imul
loopne
sti
pop
push
add
pusha
repz
movsb
push
das
jo
lret
and
add
insb
shlb
in
icebp
push
xor
cld
xchg
dec
insb
aad
fwait
mov
mov
test
mov
stos
inc
adc
out
test
sbb
js
push
and
das
aad
in
out
scas
xchg
pop
stc
pop
and
icebp
xchg
jg
xor
sbb
dec
xlat
sbb
xor
jbe
sbb
mov
mov
jo
in
pop
repnz
mov
inc
xor
bound
mov
rclb
push
sub
loop,pt
jno
mov
or
into
sub
mov
pushf
mov
jb
stos
pop
inc
add
xor
xor
pop
add
aad
adc
hlt
jno
pop
repnz
je
sti
push
clc
or
dec
lret
sti
cwtl
push
subb
pop
mov
push
mov
jno
insb
sbb
out
mov
and
jle
and
ret
js
loopne
movsl
aad
lods
add
outsb
in
dec
call
push
test
aad
or
in
mov
push
dec
fnstsw
aad
xor
sub
out
push
subb
mov
or
lcall
mov
mov
pop
lods
pop
adc
and
out
hlt
xchg
cmp
insb
push
rcrb
push
popf
ret
mov
ja
sbbl
scas
das
imul
inc
push
aad
push
inc
clc
shll
dec
mov
xchg
sbb
daa
or
push
xor
and
xor
cs
mov
add
adc
imul
cld
pop
pop
or
jns
fildl
push
popf
adc
cmp
iret
dec
jo
jne
bound
shrl
movsb
daa
sub
popa
dec
dec
pop
aam
orb
into
mov
scas
xchg
insl
mov
ljmp
nop
clc
aaa
jecxz
sarb
pushf
data16
dec
in
ljmp
outsl
xchg
pop
fnsave
and
ret
call
mov
inc
scas
stos
stos
jb
out
shrb
mov
inc
mov
dec
jg
fistps
aas
xchg
sbb
insl
in
rol
inc
xlat
jns
and
jl
dec
xchg
dec
or
push
pop
sahf
pop
out
adc
cmp
test
imull
fnstcw
adc
xchg
push
jmp
pop
ja
adc
lahf
push
sbb
ds
lcall
stc
in
test
popf
mov
sbb
and
push
push
adc
xor
cli
dec
sub
inc
shlb
cwtl
aad
daa
mov
into
stos
add
mov
sbb
mov
dec
fadd
push
inc
aaa
xchg
xlat
repz
mov
ret
xor
in
jbe
add
xor
mov
in
xor
rcl
xchg
jb
adc
inc
lds
push
je
in
xchg
loop
xchg
xchg
xor
push
cmc
lods
out
xchg
mov
xchg
test
dec
mov
dec
adc
je
mov
sub
ljmp
and
mov
jp
or
jb
stc
movb
pushf
push
aad
call
inc
xchg
sbb
scas
scas
mov
mov
repnz
mov
xor
loopne
into
test
xchg
add
jae
int
mov
adc
sbb
pop
notb
inc
jg
push
sti
bound
dec
mov
jp
dec
inc
pop
sbb
push
in
add
adc
mov
cmp
and
mov
mov
push
push
adc
mov
int
and
mov
lret
inc
cmp
or
cld
mov
xchg
call
std
push
mov
cli
add
or
in
icebp
fldl
nop
lret
pop
lds
push
in
adc
icebp
imul
sub
sub
popf
push
push
js
popf
adc
popf
jl
sti
out
sbb
popa
mov
insl
add
or
mov
lds
fisttps
jnp
mov
cmp
test
cmp
xlat
add
xor
jb
sbb
push
xchg
mov
dec
pop
stos
scas
adc
sub
shrl
xchg
xor
lcall
ja
adc
adc
push
cmp
push
subl
adc
push
cmp
inc
arpl
es
push
ds
xor
bound
rclb
or
xchg
dec
push
arpl
dec
daa
mov
lret
repz
mov
mov
movsl
mov
and
imul
xchg
jge
sub
scas
lret
cmp
cld
and
jl
aas
lock
xchg
ljmp
sbb
jp
jbe
inc
add
arpl
cmc
das
insb
test
adc
mov
cmp
xorb
xchg
push
jl
popa
jae
push
sbb
adc
cmc
push
xor
push
pop
sbb
test
cmp
adc
lds
xlat
les
dec
xor
mov
sbb
filds
filds
mov
inc
cltd
fwait
popf
loop
sbbl
fwait
cltd
jnp
cmp
ljmp
das
mov
sbb
mov
add
mov
mov
pop
cli
dec
stos
mov
dec
pop
daa
pop
test
shlb
movsb
insl
ja
in
cs
testl
dec
je
subb
aad
jo
xor
jg
pop
inc
lock
jne
sub
mov
in
rcrb
les
dec
cli
jmp
dec
cmpsl
das
popf
sub
xchg
outsl
ret
cmpsl
stos
mov
int
inc
mov
out
xchg
addr16
xchg
adc
add
ljmp
mov
in
fnstenv
outsl
cmc
enter
jo
and
gs
mov
mov
push
in
or
daa
jb
or
daa
sub
negb
jmp
jl
fildll
mov
sti
mov
popw
lods
xor
loope
jge
icebp
mov
inc
mov
xrelease
orb
negb
cli
mov
or
movsb
cmpsl
jmp
fdivrl
add
and
rcr
mov
sbb
jae
sbb
push
jae
add
lods
iret
push
inc
and
jp
or
or
cmp
mov
inc
dec
lock
dec
inc
and
std
jb
out
pop
or
enter
scas
test
enter
adc
xchg
or
mov
enter
add
lret
mov
test
sahf
sub
scas
push
push
lahf
mov
add
pop
setnp
les
popf
xor
cmp
ja
mov
cmp
inc
aad
xchg
stc
mov
shl
out
lahf
push
ret
std
outsl
xchg
icebp
int
jne
mov
gs
js
add
cmp
jne
sub
fldl
int
shll
shlb
cwtl
shlb
pop
mov
iret
scas
out
fsts
in
test
xor
push
push
pop
mov
push
fsts
loop
and
cwtl
movsb
cmp
dec
sub
sbb
test
sub
aas
outsb
sbb
cwtl
out
cmp
mov
pushf
jp
jbe
outsb
fistpl
int
ds
xor
dec
mov
adc
or
test
subb
sti
add
lods
mov
and
iret
jnp
xor
sub
clc
push
arpl
repnz
popa
arpl
cmp
sub
lret
mov
inc
cmp
outsl
shl
mov
je
lret
lods
xchg
add
xorb
lock
data16
aaa
adc
ret
aam
int
stc
mov
jno
xchg
rorb
adc
lods
cmp
mov
inc
inc
dec
int3
aad
push
push
push
add
nop
cmc
pop
cmp
div
sti
mov
and
mov
jg
adc
lret
jp
in
pop
testb
mov
movsl
repz
mov
jle
dec
add
inc
daa
and
push
sbb
mov
xchg
inc
and
mov
sti
push
inc
pop
lds
addl
sub
ret
in
dec
sub
cmpsb
xor
iret
xchg
out
pop
in
push
ljmp
pop
ds
xchg
jp
nop
cmp
sbb
out
jp
mov
rcll
sub
push
push
xor
cltd
leave
lock
dec
icebp
jg
xchg
mov
ret
xchg
xchg
adc
cmp
jne
inc
mov
sub
fsubrs
hlt
pop
clc
add
mov
out
mov
into
insb
mov
imul
stos
cmp
inc
dec
add
test
mov
fldln2
pop
repnz
add
xchg
aas
aad
sbb
imul
sbb
push
cmp
cmp
leave
rcr
add
ret
shlb
test
xlat
pop
and
pop
std
xchg
iret
hlt
sbb
push
lods
daa
push
in
in
arpl
imul
nop
ja
pop
add
or
cli
inc
insl
mov
mov
lea
push
adcb
add
and
pop
jmp
outsl
push
sub
push
mov
outsb
lock
fdivrp
cmp
lret
jnp
cmp
stos
and
push
outsl
rolb
ret
insl
aad
cs
adc
inc
push
mov
jle
xchg
mov
fnstenv
rcr
mov
shrl
scas
sub
inc
cmp
ss
cmpsl
repnz
dec
in
inc
adc
sub
add
mov
xchg
lds
stc
mull
aas
lret
xlat
push
xchg
cltd
inc
jbe
flds
inc
xor
insl
xchg
mov
in
cmpsl
xchg
fstpl
mov
jne
pop
add
jnp
stc
sti
repz
jle
in
and
xor
jnp
test
jecxz
inc
xchg
and
inc
sbb
mov
ficomps
mov
icebp
or
out
pop
adc
int3
movl
les
fdiv
repz
sbb
adc
call
movb
data16
incb
add
xchg
in
sbb
aam
push
and
cld
cmp
sbb
push
and
sbb
nop
adc
gs
xchg
movsb
cmp
ss
push
xor
pop
sar
insb
xchg
scas
int3
in
imul
pop
mov
repnz
mov
addr16
aaa
sbb
xchg
pop
mov
dec
mov
xchg
lret
imul
notb
lret
mov
dec
mov
cltd
dec
andl
cmpb
cmp
sbb
inc
pushf
inc
ljmp
jo
pop
into
and
bound
mov
mov
jp
test
loopne
test
jae
test
or
das
jl
test
or
leave
imul
inc
orb
imulb
call
xchg
ret
sub
push
pusha
out
mov
je
sbb
cmp
shrb
cld
in
mov
fadds
shll
ja
jl
mul
fwait
test
mov
sbb
mov
dec
add
push
mov
push
push
cli
int3
daa
sbb
stos
mov
sub
mov
stos
dec
add
add
les
mov
or
loop
xchg
pop
mov
enter
fcompl
cmp
mov
int3
shl
jp
hlt
xor
aam
xlat
dec
aam
sub
jae
or
test
xchg
lahf
repnz
es
in
dec
sahf
cmp
push
cmp
mov
pop
inc
inc
or
cmp
or
rorb
es
push
xchg
int
ret
ret
aam
test
popa
dec
cvttps2pi
jne
and
enter
gs
xchg
insb
hlt
sbb
rcl
pusha
inc
cwtl
imul
adc
cmpb
or
jne
pop
sbb
mov
fistps
aam
ret
xchg
mov
and
lods
outsb
xchg
outsl
add
push
ss
es
shl
push
sbb
sbb
out
mov
stos
xchg
push
xchg
je
mov
imul
add
jo
out
push
add
xor
mov
inc
cmp
add
sbb
insb
adcl
lret
sti
test
mov
cmpsl
sbb
add
jl
mov
lods
jp
mov
inc
add
mov
push
push
or
pop
scas
jo
movsl
iret
cmp
test
sahf
out
gs
aam
outsb
push
adc
js
dec
add
jns
idivb
outsl
sbb
push
adc
jbe
subb
xor
aas
test
addr16
rorl
and
xchg
pop
xor
mov
mov
xor
arpl
dec
test
pop
xor
cmpsb
inc
sub
sub
mov
jb
push
stos
dec
adc
out
sub
fistl
mov
jecxz
push
cmp
lret
lods
jb
cmp
hlt
shl
inc
xchg
xchg
jecxz
cmpsl
in
mov
loopne
mov
adc
stos
jmp
dec
cmp
arpl
icebp
cmpsl
leave
mov
jmp
add
jbe
sbb
and
jecxz
mov
sbb
pop
dec
mov
imul
jo
xor
test
stos
stc
add
fldt
and
sub
test
iret
xor
mov
xchg
dec
mov
rcrl
in
push
out
loop
jbe
xchg
xchg
xchg
or
adc
dec
lods
push
push
xchg
sahf
lahf
sbb
insl
jbe
jno
and
stos
int
addr16
sub
xchg
js
sarl
mov
incb
jg
cmp
ret
jns
popf
mov
ja
pop
mov
test
mov
mov
imul
imul
ss
popa
jmp
cmc
sbb
mov
inc
jne
add
push
adc
add
popa
mov
orl
mov
insl
pop
scas
push
lods
jg
out
mov
ljmp
mov
jp
and
xchg
lcall
xchg
cmp
or
cltd
push
xor
repnz
mov
or
mull
mov
out
mov
adc
mov
or
das
mov
push
xor
pop
or
int
adc
pop
gs
ffreep
in
stos
jb
pushf
fildl
das
or
stos
daa
inc
data16
call
mov
pop
lcall
imulb
hlt
and
arpl
adc
push
adc
mov
mov
jo
add
out
imul
mov
push
push
mov
fcmovnb
jecxz
sub
rcrb
imul
sbb
add
ret
mov
fadd
bound
outsl
jg
mov
sbbb
cwtl
ds
popl
std
loopne
rorl
imul
jmp
jge
and
out
fadds
jae,pt
jae
xor
jp
dec
xor
mov
imul
js,pn
sub
sub
mov
imul
mov
imul
hlt
inc
or
fdivr
or
dec
push
lea
clc
leave
nop
stos
cmp
ljmp
loop
xchg
aas
test
cmp
dec
cmp
scas
stos
sti
dec
popa
dec
and
add
sbb
addl
stos
dec
aad
lea
mov
sub
ljmp
xchg
dec
sbb
add
jmp
inc
jns
bound
adc
stos
mov
loopne
push
push
dec
sub
add
pop
in
hlt
cmp
jnp
sbb
mov
mov
cltd
add
call
xchg
test
aad
insb
mov
repnz
repz
and
sbb
xlat
daa
push
in
pop
mov
scas
les
in
dec
cwtl
into
fdivs
push
and
jmp
jmp
inc
dec
fmull
movsb
or
cmp
loope
xor
dec
sub
je
inc
push
imul
sbb
inc
mov
cmp
cmp
aas
dec
push
ret
icebp
push
jns
inc
outsl
pop
sbb
cmovno
jecxz
sub
ret
stos
xchg
jbe
div
cld
movsl
pop
push
movsb
aad
or
cli
mov
cmc
cmpl
into
dec
mov
in
cmp
arpl
das
cwtl
or
jg
aaa
cmp
repnz
push
fisubs
cmpsl
push
xchg
loopne
dec
imul
fmul
xlat
push
les
jae
fwait
ljmp
xor
jg
test
mov
fsqrt
jb
sbbl
nop
ret
adc
rcr
cmpsb
mov
pop
cs
dec
cmpsb
fldenv
jg
lock
mov
fmul
stos
lret
pop
dec
mov
add
pop
test
xor
or
push
sub
mov
stc
sub
adc
and
pop
add
jns
add
cmc
xchg
fmuls
fwait
cmc
add
rcrb
jmp
adc
push
popa
in
hlt
scas
xchg
mov
stos
ss
xor
lods
xchg
xor
mov
xor
xor
sub
and
sub
sbb
lods
dec
xor
mov
jle
xor
xchg
sub
lods
push
inc
popa
lcall
mov
call
cmc
push
mov
dec
data16
iret
sbb
cwtl
push
dec
sbb
xchg
or
idivl
jb
scas
mov
in
xchg
mov
sub
int
inc
stos
dec
cmp
pop
nop
adc
je
popf
leave
testb
jns
jo
repnz
inc
bound
mov
cmp
out
xlat
adc
inc
xchg
repnz
push
cmp
pop
cmc
je
mov
in
mov
jne
das
gs
lcall
xchg
shrb
and
inc
cli
out
mov
sbb
loop
xchg
pop
xchg
ds
and
arpl
or
push
test
loope
in
adc
lahf
push
jle
ret
arpl
xchg
or
and
push
fs
loopne
push
lock
fcompl
ret
lock
mov
mov
or
pop
bnd
mov
rclb
out
je
test
test
out
dec
hlt
jo
mov
lret
subb
adc
xchg
or
daa
inc
mov
cmp
imul
orb
lahf
mov
fidivrl
pop
xchg
fistl
sahf
jns
les
imul
xchg
incb
dec
aaa
xchg
inc
cwtl
jmp
adc
cltd
dec
daa
pop
in
bound
push
xor
xor
add
bound
ljmp
imul
mov
dec
adc
mov
mov
adc
push
mov
jg
insb
cmc
sub
xchg
inc
pop
jbe
clc
push
cmp
cmp
push
test
gs
cmp
mov
loopne
cmp
insl
inc
pop
das
ds
andb
shll
imul
mov
jg
in
inc
repnz
test
fistpl
push
data16
adc
stos
xlat
sti
jne
push
fcoms
pushf
mov
pushf
sahf
lahf
imull
fs
ja
sub
incb
mov
mov
pop
pop
or
ds
cli
inc
inc
jnp
add
mov
dec
or
pop
sub
xorl
sbb
inc
movsb
lods
mov
sbb
cmpsb
daa
mov
and
sbb
mov
dec
das
arpl
dec
mov
pushf
insb
jb
and
notb
les
or
lea
inc
and
dec
inc
jmp
push
xchg
sub
adc
jno
mov
cmpb
ds
inc
mov
stc
mov
stos
cmp
pop
push
jecxz
mov
scas
pop
sub
cltd
xchg
xchg
mov
loop
push
mov
xchg
and
pop
das
fucomp
outsb
hlt
mov
dec
inc
jp
mov
mov
lahf
in
inc
pxor
pushf
dec
jge
lret
or
push
fucomi
fdivrl
je
sbb
mov
in
xchg
lock
cwtl
add
int
add
gs
out
adc
mov
inc
mov
mov
dec
sub
pmaxub
inc
adc
dec
subb
scas
int3
aas
sbb
jmp
sbb
mov
push
dec
xor
dec
lods
lods
or
mov
inc
xchg
loope
pop
rorl
mov
int3
les
cmp
jmp
sarl
adc
add
mov
int
inc
inc
xchg
out
test
push
lahf
out
fiaddl
cmpsb
lods
push
shrl
cmp
data16
rorb
rcll
in
iret
popa
psubusb
mov
cmp
push
loop
or
rcrb
xor
je
cmp
push
jb
inc
jecxz
sub
repnz
jmp
popf
inc
cmp
xchg
sub
mov
rolb
jae
add
je
repnz
imul
dec
dec
xlat
cmp
shlb
mov
mov
fyl2xp1
int
or
das
call
mov
mov
jno
test
out
cmp
adc
fdivl
aam
adcb
lret
movsb
scas
xor
ror
add
xchg
je
loop
jnp
push
mov
push
call
clc
roll
xchg
jg
push
cmp
cs
jmp
and
mov
fdivrs
cmp
ljmp
xor
cltd
addb
or
push
fs
cwtl
aas
aaa
es
imul
jecxz
push
xchg
cltd
sbb
xchg
imul
int
mov
jne
xchg
mov
dec
lds
cmp
dec
dec
push
push
xor
cmp
dec
lds
mov
mov
movsb
mov
dec
mov
add
jmp
lds
fistps
rcl
xchg
adc
std
xchg
add
cmp
dec
repz
xor
popf
movsl
popf
jnp
lret
or
orb
adc
arpl
jecxz
les
sbb
push
mov
loop
jge
sub
jecxz
pop
ds
mov
cld
fdivr
add
cmpsl
lcall
sub
xor
std
xchg
call
mov
cmp
xor
push
jecxz
mov
and
jb
cmp
ret
repz
mov
lret
xor
jecxz
jmp
jnp
adc
adc
test
cmp
inc
rclb
out
cld
das
push
and
adc
std
sti
jo
leave
mov
adcl
pop
and
stos
mov
loopne
fiaddl
test
mov
jae
fists
xchg
jge
call
popf
xchg
movsl
jecxz
mov
fs
cmp
push
pushf
or
cltd
ret
daa
mov
hlt
mov
cmpsb
lahf
pop
in
aas
test
jmp
add
xor
repnz
mov
inc
jl
jl
pop
popa
mov
orl
inc
pop
fwait
mov
push
adc
cs
jl
addr16
inc
cmp
out
lcall
nop
insb
test
jecxz
mov
push
xchg
jg
bound
cmp
fwait
xchg
inc
out
jb
scas
int
icebp
mov
fisttpl
mov
sahf
and
lret
ja
lcall
daa
inc
daa
stc
sub
and
push
inc
cmp
arpl
mov
lds
nop
jns
jl
outsl
sahf
popa
cld
pop
push
xchg
cmp
mov
or
popf
call
pop
mov
int
arpl
xor
jnp
and
lret
inc
or
push
jnp
pop
pop
push
and
xor
cmc
outsl
and
xlat
outsl
push
mov
xor
push
mov
in
cmp
lods
insl
cmpb
pop
es
xor
out
mov
cs
adc
out
cmpsl
lcall
int
jo
out
aaa
jns
mov
scas
adc
inc
test
inc
jno
mov
xchg
or
js
cmp
cli
pop
icebp
rol
mov
dec
push
leave
cltd
xchg
popf
push
in
and
sbb
jmp
jecxz
sarl
and
inc
mov
nop
test
cmp
jno,pn
xor
jl
cli
out
test
loop
add
sbb
adcl
mov
jo
jo
les
xor
xchg
test
or
jne
dec
jg
insl
insb
push
mov
data16
stos
sub
or
mov
mov
or
push
xchg
std
sbbb
cltd
fwait
adc
mov
fdivl
test
loopne
clc
bound
mov
out
ficoml
fldl
out
inc
xchg
rolb
mov
mov
xor
cwtl
jl
cld
std
arpl
xchg
scas
lods
ja
popf
scas
lds
pop
jno
xor
decl
adc
xor
dec
inc
imul
or
mov
imul
lahf
adc
xchg
sbb
mov
dec
push
mov
or
dec
lods
out
xchg
cmc
cs
xor
push
loopne
divl
ja
lcall
test
sbb
imul
cmp
jge,pn
mov
mov
pop
ds
mov
aam
sub
mov
cmpsl
xchg
push
jnp
movsl
dec
pop
ljmp
movl
out
in
inc
ss
in
mov
loopne
adc
scas
adcb
mov
lcall
dec
inc
push
xchg
loope
pusha
cli
mov
xor
out
lea
addr16
mov
dec
inc
sub
imul
or
xchg
rcrb
in
bound
adc
mov
push
mov
adc
out
stc
cmp
aam
fdivr
cmc
xchg
sub
jg
leave
sbb
pop
fdivr
idivb
imul
cmpsl
cs
or
pop
mov
push
fcoml
push
ss
sub
rolb
cmpsl
fdivp
orb
add
adc
shl
inc
cmp
mov
xor
mov
sti
mov
shr
ret
faddl
fs
mov
push
jnp
sub
incl
dec
mov
jmp
test
jle
gs
shrl
clc
cmp
sbb
mov
enter
insl
movsb
push
cld
cs
inc
push
rolb
cmpsb
bound
lcall
in
mov
stc
jo
into
inc
lret
jmp
mov
lds
icebp
inc
pushf
inc
xor
push
or
aad
mov
fdivl
stos
push
mov
rep
insb
add
test
add
mov
mov
rorl
jecxz
repz
inc
rcrb
call
dec
jbe
repnz
cltd
fs
add
repz
push
repz
push
xlat
arpl
sbb
xchg
push
lea
mov
add
and
dec
jecxz
mov
and
mov
push
or
mov
xor
imul
lods
pop
or
push
loopne
fsubl
out
or
leave
sbb
pop
jo
inc
xor
inc
cmp
jnp
sub
aaa
std
inc
xchg
push
jb
mov
sti
xchg
or
inc
mov
roll
adc
jnp
adc
push
add
jbe
dec
sub
int3
das
or
dec
add
mov
sbb
test
push
in
lcall
in
and
sub
loope
mull
push
dec
rorb
mov
dec
pop
push
in
push
sbb
xchg
xor
mov
sub
scas
push
cwtl
and
out
add
loope
mov
adc
loope
jl
subl
fdivr
stos
mov
sub
sbbl
out
push
inc
mov
in
sbb
rol
xor
ret
xor
xor
sub
nop
xlat
mov
popf
push
add
pop
loope
cmpsb
aaa
sbb
jp
les
mov
sbb
movb
xor
xchg
ret
mov
jmp
dec
dec
shlb
imull
push
out
dec
cmp
push
sbb
or
fldt
add
cli
push
loop
xchg
push
push
lahf
in
lock
pop
es
in
ja
enter
dec
adc
push
popl
jmp
pusha
jno
pop
mov
ljmp
mov
sarl
xchg
pop
mov
icebp
push
push
in
and
push
mov
sbb
testl
mov
das
addl
xorb
cmp
adc
xchg
iret
insl
fldl
in
cld
fnstenv
flds
jmp
lds
mov
outsl
rcll
outsb
jo
cwtl
movsb
into
shl
subb
test
in
push
xchg
outsl
stos
add
xchg
dec
cmp
pusha
sti
aad
and
dec
fcos
cmpsb
imul
lods
lods
packssdw
jno
int
or
xchg
lea
gs
shl
jne
add
inc
mov
jnp
cmc
into
hlt
fdivrl
pop
push
gs
hlt
out
push
ror
lahf
test
ja
jg
sahf
push
pop
and
bound
pop
imul
push
dec
into
mov
aam
aad
push
jge
into
dec
xchg
mov
inc
xor
lods
cmpsb
je
mov
mov
mov
leave
popf
push
insb
xor
das
add
into
fs
mov
cmp
sarb
out
stos
shr
mov
movsl
xchg
lcall
out
cmc
sub
jbe
push
lock
pop
popl
imul
jae
cwtl
jmp
mov
pop
add
sbb
nop
loop
mov
jg
adc
add
dec
dec
pop
jb
add
dec
dec
out
sub
cltd
ss
cmpsb
cli
jno
sub
push
mov
adc
mov
in
stc
cld
fiadds
xor
mov
movsl
jns
cmp
data16
fiaddl
cmpl
sbb
popa
mov
loope
or
xchg
icebp
lods
cmpsb
fldlg2
mov
jnp
dec
jg
fstpt
ret
in
xchg
shrb
sub
or
push
mov
shrb
add
je
push
out
dec
sub
mov
sub
ds
rcll
inc
int
mov
add
pop
cmp
into
pusha
mov
fdivrl
push
add
adc
mov
push
xchg
lods
and
xor
loop
inc
ss
adc
pusha
mov
sub
dec
lret
xlat
aas
mov
into
mov
jg
push
aas
int3
pop
mov
cmp
in
fcompl
cmp
loope
das
inc
shl
pusha
int
mov
movsl
inc
mov
adc
insb
fdivrs
jp
add
pcmpgtd
ficomps
xchg
xchg
or
movsb
jne
in
test
sbb
nop
repz
push
cmp
imul
lcall
call
mov
shlb
cltd
sbb
or
dec
push
loop
leave
fisubl
scas
or
ret
call
lahf
js
shll
scas
test
ret
sbb
das
outsl
fisubs
ret
sub
dec
sub
aad
jp
lds
cltd
cmpsb
adc
inc
mov
lret
mov
sbb
push
or
sub
mov
imul
cs
push
sub
out
lret
jecxz
adc
cld
xor
out
pop
or
ss
idiv
dec
aam
divl
add
or
and
js
mov
repz
lret
insl
cmp
stos
push
gs
call
pop
outsb
addr16
repz
hlt
mov
repz
mov
xor
xorb
ret
inc
repz
xor
fldcw
sub
das
adc
aas
inc
int3
or
popf
lea
insb
mov
xchg
divl
pop
into
clc
movsb
dec
jg
fidivl
movl
fisttpl
jbe
iret
push
sbbb
ret
addr16
mov
push
mov
push
dec
rcrl
jbe
lea
fs
adc
adc
cmp
sti
into
popa
iret
je
ffreep
dec
mov
add
mov
cmp
add
sub
sbb
sub
mov
mov
popl
jb
mull
cltd
sub
pop
ss
push
loope
mov
arpl
inc
jne
inc
outsb
pusha
xchg
repnz
mov
loop
dec
cmp
xor
repnz
scas
in
repz
out
in
fistpl
popf
and
push
out
inc
dec
or
dec
cmp
pop
lahf
mulb
inc
cmp
and
bound
ja
cmc
sahf
and
push
orl
mov
loop
mov
inc
stc
and
cmp
and
test
mov
repz
in
scas
fnsave
in
pop
or
add
mov
lock
imul
xor
sub
sub
lds
fstps
std
adc
sbb
jmp
cmc
mov
mov
outsl
loopne
sbb
sub
lea
es
jae
js,pt
fs
lret
fdivrl
test
sbbl
jo
fidivs
es
clc
std
fdivrl
push
add
dec
or
and
fistpll
pop
cs
inc
mov
stc
dec
add
nop
pop
dec
push
daa
int3
mov
pop
push
adc
pop
iret
jne
sahf
fwait
push
loope
std
test
xor
or
int3
in
iret
scas
pop
mov
push
add
xchg
push
movsl
hlt
jmp
pusha
lcall
xor
push
adc
add
sahf
je
pop
push
sahf
add
dec
mov
pushf
cli
xchg
ror
js
mov
mov
in
push
lcall
out
jno
sbb
mov
outsl
int3
test
movsb
xlat
sub
psubsb
inc
addr16
jnp
mov
mov
push
outsb
das
daa
adc
sub
not
ret
add
arpl
shr
cmp
or
movsb
mov
mov
jecxz
into
jle
cmp
imul
dec
pop
mov
xchg
pop
imul
mov
and
ret
push
lret
lea
push
push
xchg
mov
out
mov
sbb
and
xchg
pop
leave
mov
insb
outsl
dec
inc
push
mov
aaa
add
jg
inc
jns
out
mov
shlb
fistpl
ficomps
jbe
lods
jp
jns
pop
jae
sbb
lods
repz
mov
outsb
fiadds
mov
fistl
in
add
lea
es
movsl
outsl
loope
push
dec
movsb
and
adc
dec
repnz
jp
xchg
add
mov
jno
push
xor
dec
dec
mov
lret
push
mov
push
push
pop
cwtl
repz
arpl
bound
dec
and
xchg
jne
pop
xor
sbb
sbb
aaa
ret
xchg
inc
xlat
fcoms
jne
dec
xchg
cmp
fstpt
cmc
xchg
cmp
cmp
pop
popf
ret
xor
out
int
xor
adc
hlt
xor
cwtl
test
mov
pop
inc
add
vpmacssww
dec
aas
or
fs
insl
mov
fisubs
mov
sbb
int
inc
pop
inc
dec
int
imul
imul
dec
mov
and
pop
sub
repnz
jo
mov
pop
aas
cmp
xchg
sub
arpl
cmpsl
aaa
lcall
repnz
adc
imul
inc
addr16
movsb
stos
cmpsb
jp
out
ljmp
and
inc
rcl
lahf
arpl
clc
imull
jno
pop
inc
pop
sbbl
pop
jecxz
inc
pop
rcr
mov
repz
push
std
scas
mov
ds
push
mov
cmp
jp
pop
ja
pushf
stos
sub
ret
imul
cmp
je
in
push
cli
inc
cmp
mov
dec
outsb
sahf
pop
push
pop
arpl
stc
nop
sbb
mov
enter
jb
sbb
fisubs
add
push
sbb
mov
push
lods
scas
addb
orl
mov
mov
add
jae
mov
add
je
inc
xor
xchg
and
ficoml
cmpsl
inc
sub
iret
mov
jmp
jp
int3
jg
je
fidivrl
mov
cmp
pop
scas
xchg
imul
sbb
fcoms
mov
sbb
mov
push
je
dec
mov
sbb
cmp
cmpb
hlt
xchg
je
inc
mov
xchg
add
outsb
lret
sub
pop
addr16
out
inc
sub
das
test
mov
vcomiss
mov
aas
mov
fcoml
xchg
aaa
mov
pop
inc
xor
test
js
jne
mov
add
sub
les
ja
xlat
insl
fwait
pop
mov
rorb
pop
xchg
aaa
pop
cmpsl
ds
inc
push
cmp
dec
mov
scas
xchg
bound
movsl
lock
ret
mov
mov
mov
xchg
pop
cmp
addr16
jns
and
and
outsl
gs
push
jp
dec
clc
insl
inc
nop
add
jmp
sti
sbb
push
sbb
adc
xor
subb
das
les
mov
scas
imulb
inc
and
aam
jmp
jae
pushl
mov
ja
dec
add
fs
mov
fsubl
xlat
lcall
mov
push
stc
xchg
cmpsl
test
dec
mov
push
ret
sarl
inc
pop
push
ja
nop
bound
mov
repnz
and
xchg
jno
xchg
jae
sti
push
cltd
mov
sbb
jl
out
popf
adc
pop
cmp
imul
dec
mov
push
lock
xchg
ret
push
pushf
jae
loope
out
lea
movsb
xchg
sahf
jecxz
mov
sub
pushf
out
js
addr16
fisttpll
lds
push
arpl
xchg
out
pop
iret
fmuls
test
pusha
out
test
mov
cmp
enter
mov
jb
dec
shrl
cmp
out
jno
ss
shrb
jg
sub
popw
mov
jge
mov
pusha
jbe
jae
orl
mov
inc
or
addl
pop
add
cmp
in
cltd
or
jne
xchg
and
leave
jo
xor
cmp
data16
push
fidivl
rolb
aad
ljmp
inc
pusha
push
enter
bound
repnz
mov
ret
arpl
pop
add
or
andl
mov
cwtl
sbb
das
xchg
call
sbb
leave
jo
popf
iret
sub
pop
pushf
xchg
movb
xchg
push
test
aad
pop
dec
jns
div
sub
int3
xchg
jg
mov
push
out
mov
in
sbb
cli
std
inc
push
fmulp
cmp
cmp
test
shrb
es
pushf
in
into
dec
xor
xchg
gs
mov
je
jnp
fnstenv
inc
int3
jnp
push
sub
sbb
scas
jl
pop
add
mov
lds
sbb
xchg
adc
sti
out
xlat
imul
cltd
xor
mov
jno
test
pop
test
int3
pop
test
pop
and
lcall
ja
inc
sbb
mov
pop
add
insl
mov
mov
sbb
mov
lahf
and
jo
cmp
sub
addb
jg
aam
in
std
imul
push
scas
cli
xchg
mov
icebp
std
stos
xor
inc
add
xchg
xchg
repnz
add
add
mov
sbb
xlat
setnp
aad
fcmovnu
dec
lret
jmp
aam
jecxz
pop
mov
add
sbb
out
stc
jmp
dec
add
inc
pushf
rclb
pop
loopne
out
dec
push
rclb
pop
mov
add
jns
sbb
fnstsw
inc
rcrb
cmp
shrb
enter
mov
fdivl
pusha
fxch
mov
loopne
jg
hlt
adc
add
xlat
loop
jmp
lods
push
pop
in
into
mov
inc
inc
sbb
pusha
sbb
frstor
or
pop
lods
data16
xlat
mov
leave
fists
test
mov
mov
js
push
xchg
pop
or
mov
lret
sbb
ret
in
cmpsl
pop
mov
fldcw
push
and
dec
mov
inc
fsts
xchg
xchg
mov
push
in
xor
add
iret
dec
sub
or
sahf
aas
push
into
cmp
add
fdivrs
lcall
subps
cmp
lret
shll
mov
decb
inc
jmp
aaa
push
fs
push
lods
push
movl
stc
adc
lock
xor
ds
mov
sub
popf
nop
lea
mov
decb
adc
pusha
mov
mov
pop
xor
mov
sub
or
out
push
pop
jecxz
jae
sbb
test
nop
sub
cld
inc
cmpsl
imul
shlb
jle
movsl
aam
pop
outsb
pop
and
jge
lock
outsl
test
and
enter
xchg
mov
pop
mov
mov
mov
out
jo
pop
dec
test
mov
fbstp
push
fwait
adc
icebp
lds
jg
inc
ja
addr16
xchg
in
cmc
sub
dec
in
inc
xchg
enter
push
in
fsts
andl
fwait
push
rcl
call
push
add
push
fidivrs
fcomp
call
push
mov
push
mov
in
fists
pop
stos
pusha
adcb
stos
insb
mov
loopne
push
pop
es
shlb
ss
testl
jge
mov
mov
add
jecxz
rolb
mov
push
iret
dec
pop
fildl
add
dec
xchg
add
test
mov
loop
mov
xor
xor
dec
loope
cmc
adcb
das
int
aaa
and
lock
add
jbe
nop
adc
add
call
jp
out
push
pop
lods
pop
mov
test
dec
cmp
jne
jg
mov
sarl
int3
jbe
inc
pop
mov
add
and
popa
jno
in
stc
les
test
dec
sarl
sbbl
jae
xor
cmp
inc
jae
ficompl
movhps
inc
xchg
add
fdivs
aam
jg
mov
in
xor
xor
adc
and
mov
outsb
sbb
jle
ret
mov
and
mov
inc
sub
mov
in
jae
sbb
mov
lock
out
cmp
in
dec
jmp
int
push
cmpsb
adc
push
pop
mov
dec
push
fsubrl
sbb
pop
out
pop
sbb
dec
cbtw
sti
and
int
test
std
fistpl
cld
xchg
cs
xchg
push
push
shll
push
cmp
sub
xor
xchg
mov
mov
jae
pop
into
int
gs
pusha
cmc
cmp
mov
cmp
pop
mov
cmp
scas
push
xchg
ret
sti
lock
cmp
push
addr16
mov
jp
in
push
cmp
fldl2t
push
and
pop
cmp
fs
add
xlat
ret
pop
mulb
rcrl
aas
adc
enter
sbb
mov
movsl
rcrl
sbbb
mov
in
sbb
bnd
mov
mov
sub
imul
pop
dec
cld
xchg
js
jb
dec
neg
cwtl
inc
scas
or
fs
mov
cmpsl
imul
js
mov
mov
and
jno
sub
push
push
push
pushf
pop
clc
repz
push
xchg
ret
fs
ljmp
cli
inc
test
mov
cli
sub
and
lods
dec
sti
hlt
mov
stc
ja
in
or
xchg
test
cmp
xchg
jbe
int
fnstsw
insb
jns
fnstcw
jmp
inc
out
push
ficoml
xor
mov
pushf
mov
fistpl
xchg
mov
push
xchg
sarb
lahf
dec
icebp
dec
aaa
movsb
ret
into
test
std
and
cltd
lods
push
xor
and
pop
and
jae
lret
push
bound
mov
out
cld
xchg
or
xchg
xchg
jbe
mov
dec
fidivrl
cs
add
xor
icebp
ret
mov
lock
aaa
mov
dec
test
rcrl
xchg
or
xor
adc
int
pushf
faddl
or
int3
dec
pop
aaa
xlat
jl
adc
jb,pn
out
out
clc
add
shlb
inc
pushfw
sbb
mov
sub
xchg
repz
jecxz
rcl
sbb
loope
in
inc
inc
dec
xchg
mov
sub
aad
sub
ljmp
mov
sbb
or
sbb
inc
cmp
in
cmp
xchg
cmp
mov
fistps
mov
leave
jecxz
mov
test
lods
push
cmpsl
dec
add
je
ret
jecxz
int
sub
jg
ds
adc
mov
inc
out
pop
xchg
loop
jns
ret
sub
lods
push
dec
inc
push
jmp
scas
push
mov
and
push
stos
push
loop
push
and
push
jbe
rclb
lahf
inc
fildll
adc
cli
clc
mov
sub
hlt
pop
and
or
adc
add
imul
orb
out
aad
mov
or
daa
push
repz
jo
adc
pop
sub
sahf
cmp
shll
sbb
dec
inc
pop
push
orl
lahf
jns
in
jo
mov
std
or
popf
hlt
clc
faddp
xor
out
clc
push
fmull
pop
subb
mov
inc
cli
arpl
les
popa
inc
adc
and
mov
cmp
pusha
enter
add
lea
mov
mov
sub
cs
cs
fwait
sbb
pop
sbb
mov
mov
mul
mov
lcall
call
mov
mov
ret
data16
add
pop
repz
mov
dec
fcomps
ja
jge
and
dec
jmp
mov
mov
cmp
jp
fistpl
xchg
adc
mov
insb
mov
fsubs
push
xor
mov
mov
loope
jecxz
jno
test
out
fwait
lret
and
adc
push
sub
pusha
mov
roll
pop
xor
sbb
jle
aas
sub
push
mov
mov
int
je
mov
mov
mov
mov
sub
xor
ret
jne
jl
sub
pop
jns
push
and
cmp
adc
cmpsb
enter
stc
movsl
int3
jle
xchg
adc
push
add
es
mov
test
movsl
clc
adc
iret
stos
pop
les
je
push
and
imul
in
shlb
dec
sub
and
push
enter
xchg
daa
sub
sub
inc
pop
inc
xchg
add
jnp
test
dec
cmp
mov
lds
subl
xor
add
jae
sbb
cltd
jns
in
movsb
cld
mov
aaa
or
in
std
mov
pop
sub
movsl
jnp
test
push
out
adc
sti
sbb
rorl
pop
test
hlt
lock
lock
outsb
imul
or
test
cmp
addr16
mov
pushf
fadds
lcall
xchg
cmp
aaa
enter
push
pop
das
out
adc
outsb
xlat
bswap
xchg
test
daa
fidivl
add
push
dec
sub
dec
int
pusha
lock
mov
mov
jno
int3
mov
mov
dec
ret
shl
adcb
insb
push
xchg
xchg
sub
test
cwtl
mov
ss
sub
lock
loope
out
sbb
rcrb
in
sbb
dec
jns
push
out
sub
or
inc
mov
aad
popa
cmpsl
dec
sahf
add
push
filds
and
push
pop
aam
add
ficompl
mov
or
addr16
inc
mov
dec
lods
mov
xor
lret
inc
ret
aad
popa
stos
or
add
jns
aaa
pop
pop
add
xchg
out
fsubl
pop
shll
rcr
mov
sub
adc
cmp
sbb
dec
mov
and
xor
repz
orl
cmp
xchg
dec
sbbb
sub
in
fiaddl
mov
mov
cwtl
push
jmp
pop
push
jnp
int
xchg
lret
dec
fsubrl
adc
movsb
in
jmp
dec
cld
push
lahf
xchg
out
mov
mov
cmpl
loop
ret
xchg
rorl
movsb
inc
xor
stos
add
test
cld
jne
pop
or
xor
xchg
xor
jl
lock
jns
enter
cmp
in
pop
ss
stc
adc
xchg
pop
in
mov
test
roll
xchg
jnp
aaa
push
addr16
subl
cltd
sbbb
lret
ficomps
pop
mov
icebp
sti
xchg
out
xorb
jecxz
out
outsl
xchg
dec
xlat
lahf
in
outsb
inc
leave
enter
pop
xor
loope
sbb
enter
sahf
cwtl
icebp
outsb
xor
jle
xchg
outsl
push
jge
ds
and
adc
fnstenv
jne
movsl
int3
jne
xchg
xchg
xor
loop,pt
adc
hlt
inc
jb
mov
mov
jbe
aaa
pop
into
mulb
sbb
xchg
popf
sub
test
mov
push
loop
push
xor
mov
jmp
leave
ret
ror
xchg
jmp
mov
cmp
in
mov
insl
mov
daa
imul
ja
loop
std
call
xchg
hlt
gs
lret
movl
stc
sub
xor
cmpsl
lods
xchg
or
mov
ja
std
pop
push
in
mov
jge
mov
js
mov
push
mov
jmp
sbb
sub
inc
out
sahf
sarb
es
fwait
das
jle
adc
push
add
das
lods
cmp
cmp
hlt
divb
jl
mov
hlt
int
add
hlt
scas
pop
test
xchg
test
inc
jp
mov
iret
xchg
idivl
aas
mov
fwait
sbb
mov
xchg
jae
icebp
fucomip
adc
fdivrl
pop
lret
out
fwait
add
data16
aaa
enter
mov
mov
dec
es
pop
lcall
jge
sbb
movsb
js
lea
out
mov
mov
cmp
mov
mov
push
pop
ret
pop
sub
cld
jl
testl
stos
dec
and
mov
testl
ror
lcall
test
cltd
jecxz
mov
ret
jmp
xchg
mov
hlt
xor
lahf
adc
nop
mov
cmpsb
mov
jo
stc
loop
cmp
push
outsl
adc
pop
push
xor
insb
dec
movsb
add
cltd
sub
imul
movsl
jle
xorl
push
arpl
jcxz
ja
push
jns
cltd
xor
leave
jns
ss
inc
clc
cmp
aam
sub
insb
jmp
std
inc
mov
cs
fldcw
pop
dec
std
mov
mov
push
push
jl
mov
cli
or
sahf
mov
imul
movsl
aad
xor
or
outsl
repz
fcomps
lcall
imul
and
pop
inc
cli
cmp
outsb
add
sarb
cmpsb
push
movsl
cmp
cld
std
mov
cmp
enter
roll
xor
xchg
std
jae
sub
cmpsb
stos
ffree
fwait
jge
add
inc
bound
pop
sahf
insb
mov
inc
xor
imul
push
cmp
sub
xor
popa
arpl
mov
pop
pop
iret
adc
inc
mov
xor
in
mov
sub
and
sahf
and
pop
sub
jecxz
mov
and
popa
mov
nop
add
or
mov
mov
lds
cmpsl
jae
movsb
popa
divl
and
mov
add
pop
fbstp
adc
data16
jno
sub
jbe
negb
aam
das
xor
push
addr16
jge
pop
push
scas
sub
adc
sub
loop
scas
addr16
pop
cwtl
dec
ret
push
aad
test
pop
jbe
pop
add
and
lds
lret
dec
sub
test
jno
push
cmc
std
push
call
dec
not
or
jmp
mov
movsl
jne
xor
jne
repz
pop
ljmp
mov
shll
mov
sbb
add
sub
rorl
std
jns
cld
enter
and
add
bound
push
fbld
mov
xlat
data16
cmc
or
lods
jbe
or
mov
lods
imul
testb
cmp
dec
and
or
inc
mov
pop
xor
push
fs
in
clc
sub
push
out
sbb
add
inc
das
imul
inc
and
clc
sbb
addb
fistps
inc
popa
fiadds
lods
into
cmp
mov
cmp
cmp
push
jae
inc
mov
popa
xor
fstps
xchg
or
add
adc
adc
repz
in
adc
insb
xor
cmp
sub
dec
insb
out
cmp
xlat
cli
hlt
sub
test
testl
mov
push
mov
inc
pop
lahf
in
mov
xor
enter
jbe
fdivs
jge
xchg
add
lret
popf
jl
movsl
xlat
filds
adc
lea
push
testl
xlat
jne
adc
lods
test
addr16
cmpsl
cwtl
movsb
inc
das
jns
loop
mov
pop
pop
outsl
cmp
gs
jecxz
inc
sarb
dec
fsubr
cmpsl
xlat
mov
dec
xchg
je
aas
test
pop
add
mov
imul
addb
pop
nop
clc
lcall
popa
mov
iret
popa
int
daa
iret
es
clc
adc
loopne
mov
std
nop
push
ret
das
push
fs
jl
adc
leave
or
sarl
or
cmp
incb
popf
pop
or
push
movsb
popf
mov
cmp
xchg
sub
add
xchg
fcomi
in
dec
xchg
fdivs
cmp
sub
iret
mov
test
mov
adc
dec
jne
xlat
cmpsb
and
mov
fdiv
cmpsl
insl
inc
inc
jae
xchg
ljmp
insb
lods
add
inc
mov
jae
dec
dec
jp
ja
xor
cltd
mov
mov
jb
mov
negl
jle
add
pusha
popa
mov
sti
xchg
fisttpll
mov
add
inc
xchg
and
jae
fadd
xchg
pop
sarl
inc
int3
xor
fcmovnb
push
loopnew
icebp
push
es
cmc
add
rcll
les
push
sbb
repz
insb
test
addl
idiv
fadds
into
lods
mov
cli
or
push
xchg
fsubl
xor
test
sahf
mov
insl
test
jmp
sbbl
lahf
xchg
fidivrs
mov
movsb
dec
jb
or
lock
xor
xchg
testl
push
adcb
and
xchg
stos
mov
fnstsw
xor
jmp
data16
push
sub
and
and
mov
add
int3
jl
ds
add
push
xchg
enter
shll
popf
pop
cmp
mov
xchg
inc
adc
bound
dec
jmp
cmp
outsl
or
push
inc
or
push
lret
push
mov
mov
pop
add
aam
sub
push
mov
cli
push
sbb
sti
mov
push
rcrb
push
divb
pusha
outsb
rolb
push
mov
xchg
pop
fstpt
pusha
dec
cmp
dec
push
push
adc
js
fldl
jge
push
fdivr
ljmp
loope
dec
pop
pop
fbstp
decl
sbb
adc
sub
jns
jp
sub
pop
jb
xchg
bnd
cmc
ss
push
or
xlat
sbb
les
sub
push
mov
inc
jbe
push
cmp
pop
insb
std
into
push
push
sub
mov
inc
xchg
lods
es
push
into
jae
or
popa
icebp
scas
xchg
push
cli
and
fbld
ret
ret
mov
mov
filds
popa
or
pop
push
or
call
aas
sbb
in
pop
jge
iret
iret
pop
sbb
sbbb
cmpsb
ja,pt
inc
cmc
int
dec
mov
icebp
les
stos
das
bound
add
sub
push
lret
cmpsb
ljmp
adc
mov
sti
setno
jge
fistps
xor
xor
xchg
ffreep
jge
lret
test
test
iret
pushw
rclb
outsl
std
outsl
sbbb
inc
test
in
push
xorl
cmp
jmp
adc
shrl
ret
dec
outsl
mov
jmp
push
in
in
mov
mov
push
sub
xchg
pusha
lret
rolb
cmpsb
add
in
sub
test
push
popf
lret
aad
arpl
mov
lock
scas
sub
xchg
jg
sbb
pop
inc
push
mov
sarl
add
lahf
fwait
jecxz
iret
movsl
aaa
dec
jae
fs
mov
sahf
push
cltd
sbb
insl
inc
fwait
test
sbb
mov
push
jo
sub
xor
cld
lock
and
out
push
mov
divps
into
xchg
ret
in
out
xor
cmp
inc
cmp
push
push
int
mov
push
shlb
jb
sub
iret
pop
iret
andb
push
scas
repz
and
adc
pushf
xorl
sbb
xchg
fcoml
and
lret
pop
rcll
ljmp
add
push
stos
aaa
repnz
mov
mov
in
bound
xor
xchg
push
mov
enter
sub
ja
shrl
scas
xchg
push
arpl
int3
jbe
gs
repnz
xlat
leave
cmp
xchg
mov
push
hlt
push
add
cld
jl
sub
adc
lret
xlat
adc
lods
in
or
mov
shr
sahf
pop
jp
cwtl
push
out
pop
mov
pushf
fldl2t
mov
cmp
sub
mov
or
aam
ja
cld
sbb
sbb
mov
jge
clc
cmpsb
fmuls
inc
mov
popf
fmuls
stos
int3
push
scas
cmpsb
cmp
int3
ljmp
jne
and
xor
repnz
mov
lods
jp
push
shll
andl
into
xchg
mov
outsb
mov
mov
js
mov
pop
xchg
jb
leave
std
inc
cld
ss
lea
gs
or
mov
mov
andb
aam
in
inc
or
dec
lock
cltd
adc
addr16
adc
jno
cmp
fimuls
das
ss
adc
dec
lock
clc
pop
add
cwtl
jae
insl
jns
push
add
test
push
pop
jne
push
jne
outsb
jle
xchg
mov
xchg
mov
sub
sub
mov
lret
jle
in
out
dec
gs
imul
shlb
inc
push
sbb
mov
push
shlb
push
dec
frstor
mov
mov
mov
popa
aad
cli
inc
rclb
jns
unpcklps
sti
add
out
xor
mov
mov
mov
pop
outsl
adc
adc
mov
outsl
pop
sbb
add
orb
fimuls
cmc
insb
mov
sub
mov
lea
decb
inc
add
hlt
cmc
imul
pusha
addr16
add
sub
push
jb
lea
fmulp
sub
jp
inc
inc
mov
mov
push
cwtl
inc
call
popl
loopne
scas
jae
inc
je
movsb
loop
mov
jno
jle
into
ja
das
mov
lea
push
xchg
icebp
jl
pop
cmpsl
mov
cltd
and
mov
mov
add
mov
mov
fnstsw
mov
cmp
inc
popf
xchg
ret
push
test
ljmp
cld
outsl
jle
and
sbb
or
sahf
cltd
fisubrs
inc
pop
cli
cmp
jo
mov
inc
xor
mov
lods
aaa
or
xchg
loope
jno
popf
les
cltd
pusha
adc
and
repnz
push
xchg
add
pop
gs
test
cmp
leave
imul
push
aad
dec
test
push
cwtl
adc
mov
sub
call
cmp
movsb
jmp
mov
xchg
adc
sbb
data16
test
and
outsb
pushf
aad
mov
nop
ret
add
out
or
push
lcall
mov
or
xchg
int
std
fwait
into
sbb
lods
cmp
cmp
mov
add
pop
out
mov
ljmp
mov
inc
mov
jnp
cmp
xchg
xchg
xchg
push
or
mov
pushf
push
mov
ljmp
xchg
lods
adc
loope
js
ja
hlt
imul
mov
add
idivl
mov
ja
push
cmp
mov
repz
add
add
or
sub
cmpsb
lock
fnstcw
mov
inc
pop
int3
int
pop
cmp
cmc
xchg
dec
add
popf
sbb
lcall
sub
test
pop
push
orps
roll
aad
arpl
mov
or
ljmp
out
les
mov
mov
cmp
dec
sbb
fucomp
test
mov
in
mov
inc
mov
ret
es
or
push
or
dec
sub
cmpsl
in
cmpsl
xchg
sbb
inc
push
pusha
sub
mov
lcall
push
jl
cmp
xor
xchg
or
mov
out
jg
mov
push
in
or
jne,pt
adc
imul
into
loopne
inc
pop
cmp
dec
stos
push
negl
cmc
cmp
lcall
adc
ja
inc
xchg
mov
pop
sahf
mov
aas
out
pop
mov
testl
shl
movsb
rol
scas
pusha
aaa
lods
in
ss
pop
xchg
xchg
shlb
in
test
cmp
cld
out
int3
movsb
xor
xchg
inc
inc
mov
mov
or
push
mov
jb
cmp
or
cmp
ja
add
mov
cld
int
dec
movsl
aaa
mov
popa
je
xor
movsl
pop
mov
xor
push
mov
mov
cmp
out
stc
push
mov
ret
add
mov
clc
enter
xlat
xchg
and
cmc
cmpsl
mov
mov
addl
js
mov
lret
test
inc
out
dec
lret
iret
push
mov
lock
scas
xchg
lret
sahf
std
mov
std
aam
fistpll
dec
inc
add
xor
movsl
cld
mov
data16
xchg
in
add
push
jp
sub
negb
insl
push
in
cmp
in
pop
cltd
add
dec
jle
pop
outsl
pop
push
scas
add
leave
and
mov
in
jg
iret
bound
aas
dec
into
imul
add
cmpb
das
in
xchg
mov
imul
stos
pop
roll
adc
std
cmpsb
pushf
and
ret
iret
mov
adc
jno
in
mov
sub
in
popf
movsb
lret
lods
jge
cwtl
sub
mov
or
pushf
cmpsb
jp
inc
inc
fsubs
lcall
sub
dec
int3
add
mov
pop
xor
sbb
sub
fadd
xor
jb
imul
rcr
sbb
push
jnp
nop
mov
into
sub
or
and
call
push
mov
arpl
push
push
pop
or
jg
sbb
and
push
lock
lahf
xor
in
sbb
in
rcrl
test
adc
or
gs
arpl
pusha
ret
adc
push
adc
fwait
std
xlat
jl
inc
es
pop
sbbl
push
or
inc
movsl
inc
imul
and
and
mov
or
push
sub
jl,pn
jge
pop
sub
or
sbb
scas
in
es
rclb
jae
das
vmovss
arpl
add
repz
mov
push
xchg
adc
scas
pop
jle
pop
lock
xor
push
cmpl
lock
outsl
inc
adc
insl
scas
enter
imulb
outsb
jne
clc
pop
mov
pop
movsb
pop
dec
mov
cmp
dec
add
jno
xchg
cwtl
or
in
mov
push
cmp
rorb
and
cwtl
lcall
push
jae
aaa
dec
es
in
popf
outsb
add
cmp
adc
push
hlt
xor
mov
bound
ficompl
arpl
jge
pop
inc
sbb
and
mov
pop
jns
mov
mov
or
repnz
jbe
jg
outsb
cmpsl
jbe
push
dec
xor
mov
or
mov
jne
fistpll
push
jecxz
out
pop
sub
mov
arpl
mulb
xor
cmp
jb
aam
mov
inc
xchg
xor
sbb
pop
kandw
enter
stc
lds
outsb
subl
mov
xor
jge
and
imul
xchg
fdivl
jns
je
sahf
fcompl
inc
loop
rorb
loop
fdiv
and
insl
ret
or
call
cld
xor
les
lods
inc
inc
jmp
fldcw
insb
jno
in
cld
add
sbb
testb
test
outsb
and
adc
jo
jecxz
imull
hlt
add
enter
out
add
arpl
and
gs
mov
push
adc
cld
xchg
ljmp
adc
jp
scas
outsl
ds
add
pop
ja
mov
jecxz
int3
jge
test
mov
orb
pop
mov
mov
xor
or
sub
lods
loopne
mov
sbb
fsubs
cmpsb
push
sti
shl
mov
loop
repz
cmp
das
inc
mov
mov
insb
jno
pop
xchg
shl
mov
divb
sub
or
lea
xchg
aad
jg
adc
jge
stc
mov
pop
mov
test
dec
jns
out
add
icebp
push
leave
sbb
xchg
ja
daa
pop
mov
inc
add
shll
inc
mov
pushf
aaa
xchg
jp
and
mov
cmp
popa
cmpsl
dec
inc
repnz
stc
mov
add
out
jle
add
cltd
mov
inc
jmp
test
adc
fidivrl
cmp
insl
cmp
ds
repz
arpl
cmc
add
xor
sub
aaa
push
cmp
xchg
rol
inc
scas
jo
mov
mov
adc
hlt
cld
repz
jge
in
sti
xor
ret
lret
inc
outsb
mov
testb
ds
mov
cmc
and
push
daa
pop
sbbb
sbb
repnz
rcrb
lea
icebp
cmp
test
add
testl
jge
bound
push
push
xchg
fwait
cwtl
pop
xchg
pop
mov
outsl
test
outsb
arpl
push
sahf
xchg
clc
pop
inc
push
sub
and
xor
test
imul
jp
dec
js
inc
test
pop
inc
push
pushf
jmp
dec
call
or
scas
loop
ja
mov
sbb
xchg
mulb
sub
movsl
mov
push
mov
sub
jne
pop
icebp
sbb
xor
inc
pushf
stos
outsl
in
and
mov
dec
outsb
leave
fnstcw
rcrl
es
int3
call
sbb
mov
js
mov
call
push
jne
push
adc
and
out
test
enter
mov
cmp
inc
xor
into
jno
ret
shll
int
mov
mov
add
dec
je
sbbb
fdivrl
mov
inc
adcl
stos
addr16
loop
pop
sbb
scas
mov
clc
cmp
and
enter
sub
cld
or
push
lock
aad
enter
imul
mov
cs
loope
fisttps
dec
jge
jbe
mov
mov
movsb
hlt
cmp
rcrb
in
call
outsb
fcoms
lahf
test
pop
out
rclb
add
and
ja
in
cs
xchg
ljmp
sti
mov
jno
ss
jns
jno
lods
push
shll
jno
lock
mov
lods
scas
cmp
jp
movsb
inc
dec
xchg
mov
out
ljmp
push
pop
jle
cwtl
pop
xor
xchg
outsl
jp
mov
and
insl
rcl
jle
into
pop
les
push
dec
imul
sub
sti
out
pop
sbb
das
add
xor
mov
fcoms
out
dec
sahf
cltd
shrl
inc
mov
jmp
mov
mov
cmp
jecxz
pop
data16
mov
xor
jbe
inc
aam
enter
dec
repnz
push
hlt
inc
mov
cmp
out
in
lcall
pop
daa
int
popa
mov
sar
dec
mov
push
pusha
bound
push
and
stos
mov
pop
push
dec
icebp
pop
stc
ret
in
mov
das
ret
cmp
jno
fs
sub
clc
xor
mov
lahf
lds
adc
cmc
mov
shll
ss
out
in
xor
cwtl
dec
push
adcl
shll
sub
pop
jnp
sub
jb
in
int
sub
iret
sahf
jae
cmp
mov
add
add
mov
mov
lret
test
out
loop
jnp
cs
pop
xchg
push
icebp
adc
aad
rolb
and
cmc
aaa
lods
fcmovb
stc
xorl
cmc
sub
lock
daa
sub
inc
adc
stc
stc
sbb
jle
pop
adc
sti
cmp
aam
int3
stos
xchg
stc
jg
pop
jmp
or
push
fsubrl
adc
mov
pop
push
sbbb
sub
fwait
dec
or
decb
mov
jecxz
cs
repnz
testb
jbe
loop
arpl
ja
mov
sbb
xchg
add
or
icebp
subps
push
dec
pop
outsb
mov
shlb
test
push
cmp
add
call
pop
or
push
adc
xlat
jne
lret
or
and
xchg
or
sbb
fsts
push
arpl
cmp
in
jbe
mov
test
lods
pop
dec
xchg
mov
inc
xchg
jmp
and
lret
jnp
cltd
stc
pusha
lcall
fstps
popa
cld
clc
jbe
or
pop
sub
pop
aam
ljmp
call
cmovs
jnp
push
mov
pop
add
adc
inc
fs
sbb
aam
mov
hlt
mov
mov
or
rorb
mov
clc
ljmp
jnp
test
jl
shr
in
sub
stos
dec
ljmp
icebp
fmulp
push
xor
lea
outsb
pause
jbe
aad
mov
out
cmp
and
mov
and
hlt
pop
jns
dec
shlb
shll
test
in
rorl
inc
jp
sti
adc
imul
adc
movsb
and
push
leave
pop
sbb
cld
in
stc
and
repz
pop
mov
xchg
mov
jbe
lods
pushf
cltd
or
dec
or
cmp
scas
jb
stos
outsl
xor
xorb
xchg
dec
lods
repz
dec
bsf
push
cmpsb
lret
ret
cs
add
mov
mov
push
mov
pop
add
outsl
out
cmp
mov
mov
test
pop
dec
sub
ret
ljmp
test
jbe
push
loop
shrw
mov
addr16
and
mov
repz
mov
cmp
test
xchg
stc
aaa
inc
dec
dec
sbb
lret
sub
push
sub
push
cmc
sub
push
jmp
push
imull
inc
and
lods
mov
jno
mov
lock
fxch
fnstenv
sti
cli
xlat
inc
out
scas
xlat
cwtl
or
dec
push
sbb
cmp
fwait
movsl
push
xor
push
sbb
xor
ret
les
into
je
bound
ret
xchg
out
outsb
out
pop
int3
arpl
mov
imul
in
adc
and
xor
mov
rorb
fsubrl
adc
scas
sub
mov
push
inc
popa
jp
xor
mov
mov
sub
daa
sub
fwait
test
sub
insb
mov
add
and
clc
xlat
adc
orl
lods
lock
inc
jno
pop
mov
lods
popl
int
xor
es
leave
xchg
pop
rclb
lcall
test
test
xor
mov
inc
scas
adc
cli
xor
addr16
in
or
hlt
mov
and
iret
mov
inc
popf
out
adc
mov
dec
add
loope
fsubs
lock
mov
dec
bound
push
ret
jno
mov
push
ret
jo
gs
loopne
pop
dec
mov
jmp
stos
fwait
icebp
push
out
and
insb
pop
daa
insb
mov
and
inc
xchg
fcoms
leave
jne
mov
xchg
inc
add
jno
aam
and
mov
inc
or
rorl
das
pop
addr16
scas
xchg
jg
mov
mov
pop
popa
xchg
fst
xchg
mov
lea
sbb
daa
mov
push
faddl
sub
js
jno
das
imul
out
shrl
out
test
scas
arpl
mov
inc
outsl
sbb
iret
jp
xchg
pop
int
jne
dec
or
leave
cmp
dec
and
and
or
nop
jg
cmpsb
dec
inc
add
add
lods
mov
js
push
leave
mov
sub
int
push
or
imul
bound
push
sbb
cli
pop
xor
cmpsl
std
push
push
pushf
jbe
and
sub
mov
pop
pop
adc
jge
or
xchg
push
mov
sahf
and
xor
mov
mov
and
push
fmull
push
dec
inc
mov
fbstp
ljmp
int
scas
stc
sub
inc
cmpsb
push
xchg
or
leave
out
cmp
clc
sbb
dec
pusha
mov
inc
dec
mov
ss
add
addl
sbb
nop
mov
cwtl
jp
sbb
xchg
test
out
push
stos
inc
out
dec
pop
mov
popa
icebp
jne
insl
pop
out
inc
fidivrs
lcall
dec
mov
je
xchg
mov
add
iret
jl
sbb
lock
fsubrl
mov
mov
lods
mov
int
xor
and
xorb
jmp
hlt
out
inc
std
movsb
jae
flds
ja
add
cmp
pusha
inc
push
adc
ds
jp
jg
repnz
push
int
adc
test
out
inc
adc
jecxz
mov
aam
dec
ret
cmpb
rorl
sbbl
das
rorb
testl
sub
mov
pusha
test
sbb
mov
je
xchg
dec
test
xchg
stos
mov
loopne
cmp
faddl
scas
mov
aad
cmpsb
in
jns
mov
aad
in
bound
push
andb
popa
push
fs
xchg
add
pop
aam
inc
sbb
or
or
push
nop
adc
shlb
pusha
and
or
movsb
push
inc
add
bound
xchg
push
mov
inc
cmpsl
sti
out
cmpsb
add
in
xor
pop
cmp
movsb
nop
scas
jge
push
mov
xor
rorl
addl
mov
lds
gs
xor
mov
push
inc
aad
mulb
adc
and
add
dec
dec
dec
lods
push
das
jbe
dec
sbb
leave
lock
jo
pop
pop
popa
pushf
jmp
repnz
mov
ffree
aas
and
pop
aam
push
dec
loop
sub
stos
sbb
pop
jg
xchg
mov
lea
jp
pop
stos
jl
pop
or
mov
xor
or
les
jle
fisttpl
inc
sahf
stc
jmp
imul
sub
or
dec
scas
mov
mov
stos
cs
mov
jmp
shrl
lret
les
mov
pop
adc
popf
fcoml
stos
cmpsl
outsl
cmpsl
jle
xchg
loope
sti
or
or
loope
xchg
stc
jmp
add
lods
in
mov
out
xchg
push
rcll
loopne
adc
cvtps2pd
or
add
push
orb
cld
mov
in
cmp
mov
push
ljmp
ja
data16
int
out
add
pop
stos
call
mov
imul
adc
fiadds
xchg
inc
hlt
xor
bsr
sbb
jle
fadds
pop
pop
fiadds
icebp
sbb
dec
inc
aad
cmp
inc
xor
xor
incl
lods
scas
jo
inc
xchg
mov
pop
jmp
push
pusha
ret
pop
daa
fsubr
mov
pop
pop
fdivrp
dec
push
jmp
pop
lahf
jns
cmp
les
sti
jecxz
insl
jmp
adc
lock
cmp
test
mov
lods
push
lea
mov
arpl
call
aas
xchg
pop
adc
or
repz
or
daa
jns
lret
pushf
jmp
lods
sarl
mov
sahf
jae
movnti
mov
add
scas
pop
or
dec
imul
add
jle
xor
or
gs
outsb
sbb
dec
adc
and
lock
dec
push
std
scas
dec
das
out
inc
cmp
inc
adc
adc
dec
hlt
jge
shl
or
dec
push
cmp
mov
sbb
xor
das
xchg
mov
outsl
std
mov
dec
or
popl
or
bound
mov
add
cmpsb
xchg
testl
cmpl
in
rcrb
pop
pop
jo
adc
add
mov
faddl
scas
clc
jne
cli
cmp
hlt
cmp
mov
sub
clc
pusha
push
outsl
sbb
in
fcoms
push
lcall
movb
mov
push
cmpsb
jne
rorb
xchg
in
adcb
mov
shll
and
sbb
shl
adc
or
mov
cs
lock
push
insw
gs
xchg
push
divb
pop
dec
shlb
shll
inc
cli
sub
mov
jb
lret
js
jo
adc
lret
adc
shlb
imul
lds
xor
dec
or
ret
or
jl
neg
aad
adc
add
movsl
push
xchg
sbb
rorl
das
mov
mov
dec
test
xchg
ss
jae
push
xchg
lret
test
add
pop
insb
ret
roll
xor
int3
jbe
out
xor
cmpsb
fdivp
jo
add
negl
add
mov
iret
pop
bound
push
pop
pop
out
pop
mov
cmc
rcll
lahf
outsl
mov
xchg
pop
push
shlb
and
insb
xchg
sbbb
inc
sub
push
xlat
test
divl
sbb
adc
int3
xchg
pop
inc
aas
scas
push
or
mov
xor
jbe
lret
fmuls
xchg
out
hlt
stc
sub
addr16
out
pop
stc
loopne
mov
add
js
fmull
test
inc
ret
div
cmp
int3
jae
dec
bound
lret
ret
mov
inc
add
fs
leave
ss
inc
filds
inc
add
xor
dec
negl
arpl
hlt
push
test
dec
mov
ss
jl
mov
add
mov
sub
push
aam
in
add
cli
mov
movsl
in
or
pop
arpl
icebp
add
add
ret
ret
push
cmp
shll
mov
or
sbb
cmp
mov
lock
stos
int
ffree
in
or
das
and
rcrl
pop
jle
fiadds
testb
das
test
sbb
mov
aaa
dec
jmp
fs
fildll
xlat
pop
or
cmp
mov
add
push
mov
xor
scas
mov
lods
rorl
adc
js
adc
bswap
imul
adc
jno
jmp
sbb
pop
std
notb
adc
ret
xlat
in
sub
cld
repz
sarb
mov
fldl2e
aas
icebp
or
jo
imul
push
ljmp
jne
roll
push
and
pop
lods
cmp
mov
int
fcoml
scas
fucom
iret
xchg
jecxz
ds
movsl
mov
sbb
dec
out
cmp
pop
cli
jge
sti
fisttps
leave
and
insb
lods
aaa
jle
outsb
jne
jns
jg
movb
dec
out
xor
outsl
js
xchg
scas
jmp
pop
lret
lret
int
jp
ljmp
fcomps
outsl
sti
push
pusha
add
lods
cmpsb
stos
xchg
fmulp
fabs
adc
sub
jo
xchg
or
inc
push
enter
test
insl
lret
push
mov
push
dec
pop
cmpsl
add
testb
shll
mov
hlt
dec
mov
bound
in
push
rol
sbb
adc
inc
push
pop
out
push
popa
pop
pop
sub
lahf
insl
or
lock
mov
jo
add
xlat
fldl
inc
cli
dec
dec
jge
mov
leave
push
mov
nop
jb
adc
lret
cmp
adc
push
test
fcom
out
inc
mov
or
fstl
mov
in
jl
xor
inc
ret
cli
mov
loope
cmp
out
in
out
mov
loopne
call
outsb
jecxz,pn
mov
pop
mov
adc
or
cmc
int
adc
fistpll
ficompl
xor
js
pop
sbb
jmp
and
push
dec
sbb
leave
mov
mov
xor
and
lock
leave
int
inc
add
lret
cmp
dec
inc
outsb
addb
mov
pop
push
lret
inc
daa
int3
push
mov
aad
pop
xor
das
adc
lods
mov
push
mov
ret
cmc
dec
mov
add
cmp
sbb
lahf
outsl
sub
lret
mov
clc
and
pop
adc
aad
and
lret
mov
xor
sub
dec
popf
and
outsb
cmp
lods
data16
add
and
add
mov
loopne
jb
and
enter
out
decl
inc
bound
xor
out
popf
and
sub
mov
pop
inc
hlt
insl
mov
aas
outsb
adc
movsb
imul
mov
push
imul
in
pusha
sbb
orb
jbe
mov
mov
fcompl
les
int3
add
lea
adc
pusha
sub
aam
cmp
push
push
jne
mov
stc
addb
push
cmpsb
cmp
dec
scas
fincstp
push
sub
data16
and
mov
out
or
jnp
stos
add
jb
test
jno
cmp
xor
shr
stc
int3
jbe
xchg
stc
insl
mov
sahf
nop
jae
mov
inc
adc
cltd
cmpsl
repz
sti
movsl
or
gs
mov
push
xor
xor
mov
or
shrb
pop
push
dec
inc
mov
and
mov
mov
shl
arpl
fbstp
pop
cld
mov
push
cs
inc
movsl
inc
adc
mov
mov
lret
mulb
fisubl
pop
adc
xor
repz
xchg
inc
dec
ret
lea
or
inc
jbe
scas
hlt
jmp
repz
inc
stc
add
sub
pop
imul
adc
dec
je
sub
outsb
inc
xor
and
fcomps
add
lret
movups
mov
xchg
imul
mov
ret
jle
lahf
idivb
in
add
scas
jecxz
add
adc
xchg
mov
mov
insl
movsl
sub
jecxz
xor
mov
mov
hlt
push
sbb
repnz
jp
insb
cmp
xor
mov
pop
cmp
inc
dec
jg
andb
inc
mov
xor
sahf
mov
ret
std
cmp
jge
or
xchg
xor
daa
sub
aas
js
lods
ds
scas
jo
fidivrs
je
fcmovbe
add
xor
pushf
loopne
pop
dec
inc
pop
jo
inc
cs
ljmp
rcrb
in
push
jmp
negl
repnz
sahf
cs
shl
mov
xchg
cmp
decb
sub
js
cmp
movsb
test
push
mov
push
pop
repz
fs
movsb
shl
sub
cld
mov
leave
repz
add
test
aad
sub
aam
cld
popf
dec
adc
roll
xor
xchg
cmpsl
ret
in
js
pop
jae
mov
ret
sub
fnsave
or
mov
sub
mov
lods
lret
sub
aad
mov
nop
or
jne
in
fs
xchg
mov
add
mov
pusha
testb
push
gs
mov
pop
push
or
insl
inc
adcb
sbb
and
popa
ret
mov
sbb
fs
sbb
scas
lds
pop
cmp
scas
push
xlat
lods
jmp
cmp
sbb
je
cmp
aam
test
ds
stos
cli
jno
xor
or
inc
push
shll
in
mov
inc
push
mov
mov
xor
sbb
mov
inc
test
mov
adc
pop
dec
shrl
adc
fwait
sub
rcl
jle
imulb
xchg
add
ljmp
jnp
mov
ss
dec
mov
mov
xlat
xorl
sub
mov
decl
xchg
push
rcr
push
scas
xchg
nop
iretw
dec
push
ret
lcall
jne
imul
sub
jl
shlb
in
xchg
add
fcmovbe
shll
in
jg
xchg
in
call
out
test
jl
mov
insb
jge
sub
js
in
dec
or
pop
mov
xchg
add
mull
fwait
push
fidivl
cmc
cmp
add
das
loope
xorb
aaa
xchg
xor
pop
in
shll
or
nop
mov
scas
stos
inc
movsl
push
push
imul
jns
lret
or
jb
fs
repnz
inc
ss
sub
xchg
lret
ret
cltd
out
inc
std
jne
sub
cmp
and
mov
into
dec
sahf
and
mov
das
pushf
mov
pop
mov
data16
inc
cmpsb
je
mov
mov
add
dec
mov
cmpb
iret
leave
jmp
lods
or
lcall
je
movsl
sub
lcall
stos
cmpsl
das
push
pusha
mov
fninit
cmp
xchg
and
inc
sub
xchg
dec
mov
mov
movsl
insl
jle
mov
xor
fbld
std
lea
bound
je
mov
inc
jne
ss
push
hlt
imul
bound
nop
stos
jbe
xor
push
jp
sarb
into
jmp
pushf
inc
lods
cmp
mov
fdivrs
dec
mov
jecxz
mov
jb
fisubs
inc
inc
pop
loop
lret
rolb
enter
dec
stos
pop
and
scas
int
sub
test
sbbl
mov
in
das
add
pop
dec
inc
mov
rcrl
clc
mov
sbb
callw
fs
dec
push
outsb
add
or
push
mov
ds
pop
jne
jmp
pop
mov
scas
sbb
loopne
dec
cld
adc
mov
lahf
bound
mov
dec
inc
dec
or
xchg
mov
mov
dec
fstpt
and
pop
mov
nop
ss
and
sarb
cld
loop
mov
inc
out
sub
mov
sahf
xchg
pop
jge
ret
sub
and
add
out
push
pop
aas
cltd
aas
xchg
mov
outsl
imul
jbe
or
scas
enter
ds
xchg
adc
les
loope
or
lds
inc
leave
xchg
and
imul
sti
and
xor
scas
fs
or
and
cli
jo
sub
and
clc
in
pop
lds
mov
fstpt
sbb
push
add
sbb
cmp
pusha
pop
orb
in
pusha
cld
adc
dec
movsl
pop
ficoms
bswap
insb
out
shl
inc
xor
scas
stos
lcall
loop
cwtl
mov
push
sbb
in
mov
data16
arpl
fcompl
lahf
xor
mov
adc
bnd
inc
iret
dec
lods
inc
adc
daa
inc
std
sub
fbld
in
lea
push
inc
fmull
pop
cwtl
xor
out
sub
jnp
xchg
loope
and
add
mov
push
jae
sbb
xchg
lret
add
fs
iret
xor
adcb
sbb
pop
mov
test
add
add
xchg
mov
jecxz
push
adc
cmc
mov
pop
sbb
cwtl
jb
or
pop
sbb
lcall
test
rorl
jp
lret
mov
arpl
or
cmpsl
add
dec
dec
add
icebp
jae
out
xor
adc
mov
xor
adcb
jae
std
xor
push
iret
inc
push
dec
cmp
pop
iret
xlat
pop
hlt
or
mov
and
inc
in
sub
outsb
and
push
rcrl
lea
and
imul
lods
add
adc
popf
adc
inc
sbb
mov
fldl
loopne
xlat
jbe
imul
mov
dec
enter
jecxz
sub
in
and
add
nop
adc
and
out
pushf
lea
lcall
xor
mov
mov
aas
cmp
loopne
std
mov
dec
std
cmp
fcoml
sti
push
xor
test
fwait
mov
xor
js
pop
jnp
movsb
imul
inc
cmp
test
mov
inc
xor
cld
jnp
pop
rclb
out
lea
test
loope
aas
fwait
fs
jp
sub
adc
push
scas
sbb
icebp
xor
add
hlt
inc
inc
mov
icebp
adc
das
jne
pusha
dec
xlat
xor
mov
cld
jge
es
pop
dec
cmp
push
inc
imul
sbb
jle
cmp
add
fnstcw
mov
gs
sbb
rorb
jle
dec
push
mov
std
jecxz
mov
cmpsb
movsb
or
push
nop
push
dec
icebp
das
cmp
or
jmp
push
cwtl
bound
or
lods
aad
frstor
ds
ret
push
push
add
inc
clc
dec
in
add
cmp
xchg
inc
pusha
mov
mov
xor
shl
pop
mov
mov
fwait
pop
sar
loope
push
cmpsb
mov
inc
jo
ds
and
fsubrl
mov
cmp
pop
xor
orb
push
movsb
push
out
jge
data16
aaa
add
rorb
push
pop
popf
pushl
add
sbb
xchg
bound
push
cmp
jbe
adc
pop
jg
repz
ja
ds
cmpsb
rclb
sub
fnsaves
mov
lret
dec
push
das
xor
fdiv
movsb
addr16
pop
jle
stos
ja
mov
outsb
or
jmp
insb
scas
push
push
movsl
cmp
mov
mov
insb
dec
cmc
lahf
loopne
ror
fistl
dec
push
rcrl
ficomps
add
lock
adc
push
jns
cld
loope
xor
dec
push
jle
test
push
pop
in
mov
cmp
fisttps
add
repz
xchg
add
jns
inc
movsb
test
pop
int
out
sbb
incb
mov
mov
jp
imul
js
cmpsl
mov
syscall
test
xchg
sub
sub
cli
nop
jne
mov
pop
clc
mov
pop
mov
add
test
lds
stos
pop
pop
jge
stos
mov
xchg
loop
push
add
fstpl
out
or
pop
inc
mov
mov
movsb
inc
incl
xchg
mov
aas
stc
pop
jb
cmp
mov
addl
pushf
mov
sbb
in
inc
sbb
hlt
js
fimull
inc
sbb
ffree
xchg
jo
jmp
cwtl
push
jl
loop
sbb
das
fldt
pop
mov
xor
or
clc
pop
sub
cmp
es
pop
xor
cs
xchg
xor
add
jnp
stc
in
icebp
scas
int
sub
sub
loope
roll
push
pop
pop
sub
dec
fmulp
inc
sahf
push
jno
cmpsb
pop
out
dec
push
adc
in
pop
js
iret
add
sub
sbbl
int
int
clc
test
or
js
aas
jne
sub
jp
daa
enter
add
adc
movsb
dec
sahf
bound
test
jmp
and
std
aam
add
adc
pop
lods
dec
push
push
test
jbe
imulb
aad
imul
fidivrs
jg
bound
xchg
mov
sbb
add
adc
jg
iret
xor
dec
jecxz
lock
xor
pop
pop
jle
cld
in
lods
jnp
push
push
pop
cmp
mov
push
adc
test
imul
push
ljmp
adc
lret
insb
add
cmp
fwait
int3
decb
dec
mov
ljmp
cmpsb
or
push
push
xchg
mov
testb
cmc
aaa
movsl
insl
mov
aas
psrld
aad
testl
jb
lcall
push
shlb
mov
fildl
adc
cmp
test
insl
lds
outsl
lds
jnp
stos
sbb
call
sti
test
into
add
add
dec
xchg
fldt
inc
js
loop
push
pop
cwtl
ret
daa
or
repnz
pop
pop
inc
ja
sahf
jp
movb
pushf
push
xor
cmpsl
dec
pushf
stc
in
xor
xor
push
sarb
add
pop
in
push
cmp
sub
adc
test
movsl
cld
loopne
pusha
lret
inc
cs
push
aas
notl
outsl
lock
ljmp
out
mov
add
push
outsb
push
rcr
jne
inc
ja
movsl
insb
sbb
sar
inc
add
mov
pop
loope
aas
adc
mov
data16
adc
adc
mov
pop
inc
div
imul
pop
fbstp
data16
sub
cmove
pop
fisttps
bts
iret
rolb
movsl
adc
mov
popf
add
mov
xlat
imul
push
cmp
in
lods
dec
loopne
lret
mov
mov
push
out
dec
popa
cmpsb
or
pop
pop
adc
pop
adc
push
fadds
lcall
xchg
stc
mov
inc
xchg
repz
fldt
sub
xchg
and
rorb
jg
stos
push
sbb
inc
mov
push
cmp
stos
jl
loop
inc
add
cld
clc
xorl
add
mov
mov
push
mov
jns
mov
and
adc
and
ret
hlt
cwtl
jbe
popa
cmpsb
mov
aam
xor
jge
adc
and
jecxz
mov
mov
testb
shrl
sub
ds
lea
faddl
mov
push
jno
push
mov
sbb
add
cmc
loop
xor
in
pop
jbe
push
or
cmpsl
mov
out
sub
sbb
jnp
scas
pop
mov
dec
inc
dec
imul
jle
mov
rol
dec
add
shl
cmp
enter
lock
insl
cmp
jo
ud2
outsl
call
sbb
or
cmpsl
mov
cmpl
xchg
pop
mov
movsb
dec
adc
adc
jbe
cmp
cmp
xor
mov
xchg
lahf
mov
in
and
pop
or
pop
push
leave
pop
and
pop
mov
loopne
jnp
cltd
xchg
jg
dec
pop
movsl
das
aam
fstpl
ret
sbb
inc
push
fs
das
cmp
jle
mov
subl
lahf
xchg
loope
aad
mov
push
cmp
mov
pop
insb
nop
push
inc
test
cmp
fmull
pop
and
movsb
les
jecxz
pop
jle
mov
call
shl
or
pop
cmp
mov
int3
cmp
push
mov
in
cld
ljmp
sbb
pop
inc
adc
stos
addr16
push
shll
out
sub
sar
adc
lahf
inc
icebp
fs
mov
push
repnz
jle
daa
rcll
inc
test
test
int
out
test
sub
or
push
movsb
jnp
push
rclb
jecxz
lods
icebp
and
sbb
stos
inc
jmp
inc
xor
cmp
jp
pop
cmp
add
lret
ljmp
int
lock
jnp
dec
mov
and
xor
js
jnp
mov
hlt
or
push
movsl
test
cmp
mov
pop
stos
std
cli
aas
jb
test
mov
fstps
movlps
dec
cmp
in
popl
inc
or
jl
pop
and
mov
leave
rcrb
aad
cltd
dec
inc
out
ja
mov
push
jo
fsts
or
lahf
xor
mov
pop
je
xchg
pop
lret
cld
jg
sbb
das
mov
lcall
aas
loope
pop
mov
push
inc
add
dec
jmp
xchg
in
push
mov
in
in
std
ror
dec
fadds
and
inc
push
aam
popa
push
mov
test
je
shl
cwtl
pop
sbb
adc
dec
jo
jle
imul
std
inc
adc
lods
sahf
rclb
pop
das
push
xchg
jbe
cmpsb
sub
xor
loopne
jns
stc
notb
in
jns
push
pop
stc
movntq
hlt
jb
clc
mov
and
aas
lds
loope
movsl
imul
add
test
adc
dec
jl
aad
loopne
daa
xor
test
jbe
jb
icebp
pop
mov
xchg
pop
aad
mov
addr16
xor
sti
mov
fwait
js
inc
xchg
adc
ret
fistpl
xor
xor
out
xchg
mov
sbb
pop
jb
pop
insl
pushf
ret
push
jl
mov
and
mov
icebp
mov
incb
inc
es
test
adc
jle
out
mov
mov
mov
bound
adc
or
jl
inc
inc
in
cmc
pusha
cld
adc
mul
mov
inc
sub
out
sahf
inc
pop
xchg
mov
ja
call
mov
ficompl
xchg
or
insb
mov
enter
pop
adc
or
sub
hlt
add
add
daa
adc
hlt
mov
stc
and
jae
out
sub
into
and
mov
dec
lock
mov
inc
adc
negb
fbld
inc
xrelease
movsb
add
shrb
loope
test
icebp
pop
lock
inc
leave
ficomps
xchg
dec
and
sbb
mov
lds
aaa
sbb
rol
fldl
cmc
xor
das
sub
jns
sub
dec
shl
aas
stos
xor
and
lret
xor
push
scas
in
or
jle
out
jl
idiv
mov
xchg
push
or
imul
mov
add
dec
jae
fnop
inc
cmpl
das
rcrb
mov
lds
adc
xchg
pop
call
mov
jnp
out
mulb
mov
mov
ret
sahf
xchg
and
adc
or
mov
adc
ja
cmc
push
sbbl
inc
inc
jno
icebp
xor
insl
push
lds
sub
push
jns
jo
push
push
fnstcw
inc
xchg
mov
and
clc
shr
add
adc
mull
push
adcb
pop
push
mov
pop
xchg
pop
stos
mov
inc
xchg
pop
and
jne
pusha
imul
and
jg
ret
jns
sti
xchg
xor
enter
les
ljmp
mov
call
lds
movsb
jp
repnz
enter
adc
dec
mov
xchg
jp
test
push
insl
sbb
popa
adc
jbe
mov
jne
mov
imul
stos
and
fsts
movsl
mov
inc
push
dec
ss
adc
xchg
cmp
mov
sub
dec
xlat
cmp
mov
mov
jmp
adc
jb
into
nop
mov
aas
jle
push
subb
mov
jno
ret
lock
test
std
fwait
push
push
adc
mov
scas
out
and
sarl
adc
fsub
fwait
or
pop
mov
xor
stos
scas
vandnps
mov
or
add
jnp
xchg
loopne
call
and
subb
movsb
lahf
test
pop
xor
pop
xchg
ja
push
mov
int
mov
std
cwtl
mov
aad
jo
inc
aas
xor
mov
fcmovbe
imul
pop
pop
add
pop
jp
xor
call
inc
pusha
fimull
jp
inc
mov
mov
jbe
push
cmp
cld
mov
mov
xchg
add
push
adc
mov
sbb
push
in
mul
xchg
and
inc
pushf
hlt
sbb
cmp
out
mov
data16
push
xchg
push
mov
outsb
pop
push
aas
iret
jg
scas
movsl
jne
inc
aad
fucomp
cmp
pusha
lds
pop
insl
dec
ret
rcr
push
lahf
inc
aad
je
lods
loop
sub
fcmovnu
sahf
lds
test
out
mov
aas
mov
pop
sbb
pop
addr16
dec
dec
aam
out
stos
adc
jb
cmp
push
lcall
insb
gs
stc
scas
cli
adc
xchg
loope
mov
movsb
add
adcb
mov
cwtl
dec
xor
mov
out
mov
repz
add
icebp
or
adc
inc
mov
push
mov
add
push
pop
div
mov
jno
ds
lahf
xchg
daa
mov
stos
push
ror
add
sub
jmp
cmp
push
or
divb
sub
sub
mov
jle
loop
lods
lods
arpl
lcall
in
and
add
inc
fdivrl
xlat
not
inc
inc
sahf
cmp
adc
mov
mov
dec
icebp
nop
adc
sub
mov
fs
icebp
sub
imul
lret
adc
int
cmc
dec
sbb
aaa
ret
mov
sub
jb
imul
std
cltd
mov
sub
or
aam
push
mov
xor
mov
sbb
mov
adc
jae
popf
jmp
ror
or
sbb
stc
cmp
inc
add
gs
ret
push
pop
cwtl
aad
addr16
loopne
lods
xor
insb
addb
dec
mov
inc
cli
adc
pushl
cwtl
inc
adc
in
int3
push
dec
outsb
addr16
sub
inc
push
into
fisubrs
decl
and
or
popa
jp
mov
mov
adc
and
jno
cmp
pop
add
add
mov
fwait
loopne
jmp
pushf
add
xor
jns
push
inc
xchg
outsb
adc
repz
clc
add
lock
sub
inc
fisubs
mov
andb
in
popa
xchg
clc
sbb
lahf
mov
sbb
jle
mov
je
cs
inc
lock
or
push
arpl
and
leave
loop
xor
mov
xchg
in
add
xchg
jno
repz
mov
iret
rcr
cwtl
ret
sub
or
hlt
push
addb
jp
loopne
and
jae
xchg
xchg
cld
mov
mov
out
fsubrs
pop
push
xor
test
stc
mov
in
and
push
inc
or
add
dec
sub
mov
int
add
aad
jb
push
mov
add
sub
cld
les
das
fcompl
call
iret
or
sbb
xchg
cmp
repnz
inc
test
dec
lret
inc
pop
popa
lahf
scas
jg
dec
mov
fs
dec
movsl
mov
pop
sub
outsb
es
mov
adc
outsb
lods
icebp
repnz
push
arpl
out
cld
adc
pushf
pusha
mov
gs
inc
arpl
mov
insb
sahf
sbb
es
mov
fs
dec
movsl
fstpt
pop
adc
xor
sti
aad
in
aam
jno
pop
or
and
or
out
and
pop
push
xchg
sbb
jmp
shrl
into
adc
jbe
xor
adcb
dec
mov
jno
fs
in
add
idivb
xorl
or
test
out
lock
loope
cmpsl
ret
dec
stos
addr16
enter
lea
pop
movups
inc
and
mov
cmp
xor
lea
add
sbb
ret
das
and
outsl
mov
outsl
cmp
call
leave
pop
mov
push
shrl
inc
stos
and
sub
mov
loope
test
imull
insl
inc
ja
mov
lcall
adc
or
adc
imul
into
int
jns
xchg
enter
jl
scas
and
adc
scas
scas
shrl
test
out
mov
add
std
scas
inc
lret
lcall
js
dec
enter
or
pop
mov
ss
sub
not
inc
aaa
out
lret
xlat
lods
adc
mov
popa
adc
xchg
xchg
push
data16
hlt
mov
out
add
fstpl
mov
add
cmp
xor
mov
xchg
bound
aas
mov
shll
fimull
mov
jge
adc
push
jmp
fwait
sub
fidivs
shll
sar
sbb
inc
mov
and
inc
test
fs
idivb
push
jbe
sub
mov
mov
mov
mov
movb
push
mov
cmp
or
nop
std
outsl
cli
cwtl
int3
push
inc
xchg
push
insb
in
out
inc
xchg
push
call
rorb
popf
xchg
dec
int
mov
out
ljmp
inc
call
pushl
sti
mov
pop
inc
jmp
adc
jle
lods
fmull
data16
cwtl
xchg
orb
jl
clc
lds
mov
mov
push
fistps
mov
pop
ds
imul
ret
inc
mov
push
inc
sbb
mov
or
inc
fs
xchg
rcrl
addr16
dec
loope
nop
cld
push
or
mov
push
arpl
je,pt
insl
mov
lret
icebp
enter
pop
lret
and
fidivs
cmp
inc
out
and
sub
mov
mov
fisubrl
xchg
divl
mov
cs
idivl
pop
sbb
imul
out
xor
and
lcall
adc
mov
xchg
bound
sbb
idivb
mov
pop
add
lods
inc
pop
loope
rclb
cmp
add
repnz
outsb
sbb
mov
imull
mov
mov
or
stos
xchg
and
inc
cmp
subb
or
xchg
repnz
js
fdivrs
decb
fmuls
test
jno
popf
and
lret
mov
or
sar
sti
js
mov
cmpsl
fcoml
jp
cmpsl
daa
ret
arpl
and
aas
insl
sbb
cmc
sahf
icebp
xor
lds
pop
outsl
int3
or
es
inc
dec
push
lods
ja
jle
cltd
or
sbb
fidivl
int
jge
sbb
jle
push
stos
jecxz
subl
mov
and
das
stos
adc
incl
addr16
pop
adc
pushf
mov
decl
cmp
mov
xor
jnp
sub
add
mov
jp
xor
jae
sub
in
pop
fs
pop
mov
sub
xchg
fidivrs
lcall
mov
sub
lcall
ret
cmc
cli
pop
repnz
stos
pop
push
data16
cs
loope
mov
mov
mov
les
dec
add
jp
pop
and
pushf
push
xor
iret
je
mov
jmp
addr16
test
andl
add
add
clc
sub
pop
popa
push
call
ret
sub
lock
sub
sbb
jo
lahf
xor
or
xchg
push
imul
mov
jmp
jl
jmp
mov
adc
or
js
or
xchg
pushf
cwtl
jmp
inc
sub
adc
pop
aaa
xlat
or
cmp
add
jb
dec
pushaw
xchg
mov
outsl
cmp
fldcw
inc
and
mov
in
bound
stc
pop
stc
stos
ss
fs
inc
iret
sub
sbb
sbb
pop
pop
and
and
jne
aaa
outsb
arpl
inc
outsl
mov
imul
pop
mov
adc
or
imul
push
cmp
gs
daa
rcrl
arpl
fmul
incb
ja
pop
popf
fmul
or
and
jb
test
cmpsl
push
daa
lock
mov
ret
ss
and
sub
cmp
mov
in
dec
adc
sub
and
mov
cwtl
mov
pop
stos
adc
sbb
mov
icebp
mov
loopne
mov
push
scas
shlb
xorl
js
mov
ds
loope
push
addl
xchg
loope
cmc
dec
add
scas
iret
popf
sub
or
xchg
insb
sub
pop
mov
push
ffree
fs
xchg
test
out
mov
jne
fwait
sbb
fwait
xchg
aas
add
sbb
cs
xlat
lock
push
sub
or
push
sub
dec
repnz
sub
movsl
loope
xlat
fimull
adc
or
insl
nop
sub
push
jae
in
pop
inc
repz
shlb
cmp
sub
pop
jecxz
sbb
outsb
xor
aad
mov
xor
jl
stos
push
push
push
daa
or
or
xor
sbb
pushl
callw
loopne,pt
pop
jbe
cli
fadds
or
or
jl
sbb
stos
lock
or
repnz
ja
fisttpl
adc
cltd
mov
repnz
jae
xor
pop
sub
or
add
fistpll
enter
adc
loopne
mov
fisubl
es
gs
in
or
mov
div
xchg
or
xchg
stos
mov
pusha
or
call
and
add
leave
ja
test
push
xor
notl
or
nop
pop
lods
mov
mov
add
cmc
daa
sahf
lods
out
sub
xchg
outsl
and
mov
ret
adc
jp
es
sub
push
lock
imul
mov
pop
cmp
out
add
sbb
inc
test
and
mov
cmp
xor
test
lods
pop
cli
add
inc
lods
arpl
ds
mov
arpl
fstpl
jg
pusha
leave
mov
add
jmp
jmp
scas
mov
pop
jne
loope
sti
les
xor
popf
push
das
sahf
fmull
outsb
in
or
cmp
or
in
sub
sbb
and
cmp
aaa
xor
inc
idivb
dec
and
xchg
fdivs
fimuls
adc
jge
addr16
out
ljmp
or
cmp
xchg
dec
mov
and
adc
push
test
dec
in
mov
mov
mov
dec
sbb
push
and
or
bound
add
leave
out
pop
push
or
inc
jg
movsl
mov
cmc
ljmp
shl
jecxz
ljmp
mov
in
sbb
cmp
negl
add
cmp
out
inc
add
ret
or
jb
xor
xchg
int3
mov
in
mov
sub
mov
out
aaa
shlb
xor
fsubl
fmuls
xchg
clc
adc
mov
push
test
mov
bound
fsubp
jmp
loopne
cmp
or
aaa
inc
test
xchg
int
mov
scas
mov
jbe
push
test
mov
scas
test
xchg
push
jle
and
bound
lds
mov
mov
sub
or
mov
ljmp
das
out
add
sti
lret
pusha
loope
push
xchg
mov
push
outsb
cs
cmp
fidivl
push
and
pop
lods
push
inc
stos
jecxz
cmp
stos
loopne
adcb
call
sbb
int
inc
inc
cmp
sahf
or
std
je
cltd
xorl
sbb
mov
outsl
or
cs
scas
or
cmpsb
jg
fadd
aam
mov
cwtl
testl
add
rcr
nop
jl
dec
das
lcall
in
and
pop
ja
jb
dec
mov
shlb
mov
pop
iret
outsb
cmp
mov
lods
mov
fidivs
ret
push
cmpsb
movsl
aad
pop
mov
mov
mov
pop
and
pushf
xchg
mov
cmp
insl
shl
sbb
int
mov
notb
push
arpl
call
or
jae
repnz
adc
call
and
xchg
sahf
xor
out
mov
mov
pop
iret
cld
jne
out
shlb
pusha
rclb
decb
inc
xor
or
iret
cltd
movsb
icebp
push
aas
or
or
adcl
scas
mov
insl
jl
lcall
mov
cmpl
imul
cmpsl
and
fwait
inc
orl
xor
inc
adc
xor
pop
imul
mov
push
mov
pop
cmp
push
mov
scas
add
stos
test
iret
mov
xor
pop
ds
shll
and
sub
pop
mov
in
xor
rcl
test
mov
fildl
scas
inc
mov
pop
or
scas
orb
insb
inc
lock
inc
pop
inc
adc
inc
mov
sbb
dec
mov
sbb
push
dec
je
or
cltd
fisttps
or
xchg
mov
outsl
fmuls
imul
jo
cmp
xor
xor
in
jne
dec
cmp
popf
fistl
add
mov
add
subb
imul
mov
loope
add
adc
mov
enter
xor
psrad
xchg
and
ss
fiadds
test
sub
jb
rolb
jmp
ret
mov
popa
imul
mov
imul
sahf
aam
mov
into
pusha
mov
xchg
pop
jmp
dec
dec
xchg
fwait
add
cmp
arpl
sarb
mov
mov
xchg
lods
jle
ret
or
push
dec
pop
push
sub
dec
les
or
movsl
imul
lea
movsb
push
and
out
bound
imul
lret
loope
pop
sub
in
test
push
dec
lcall
icebp
cmpsl
jp
push
mov
out
jmp
sub
or
es
inc
cltd
int3
cmpsb
lds
inc
or
decl
fdivr
test
out
xor
ret
cwtl
je
mov
scas
lret
pop
cmpsl
nop
flds
xchg
lahf
fcmovbe
jge
lds
and
orl
out
mov
adc
adc
cld
imul
lcall
fldl2t
sub
and
push
insb
mov
push
mov
gs
add
cltd
push
jge
mov
and
dec
push
sub
movl
mov
fwait
idivb
adc
mov
xchg
rclb
inc
test
pushf
adc
push
add
enter
mov
mov
cmc
xchg
iret
data16
pop
call
xor
sti
pop
mov
fdivrl
pop
mov
sub
inc
dec
and
or
ja
xor
push
dec
rclb
iret
mov
sbb
test
push
adcb
jmp
lret
push
dec
cmp
lock
pop
es
jl
ror
push
std
dec
push
adc
jge
xlat
lods
lods
dec
xor
xor
cmp
dec
inc
adc
xchg
xor
hlt
repz
cli
dec
bound
sub
out
stc
in
fdivrs
or
imul
push
pusha
imul
add
xor
adc
sbb
insl
stc
xor
fstps
lea
push
js
sbb
push
adc
out
add
mov
add
outsl
out
pop
add
out
cmc
cmp
sbb
fidivl
mov
pop
cmc
push
aam
jns
cmp
mov
mov
push
bnd
sbb
jge
mov
jns
sbb
aam
push
mov
out
adc
leave
aas
sub
test
arpl
cmp
mov
mov
jmp
push
fisttpl
divb
or
pop
dec
adc
dec
inc
push
fmuls
cwtl
nop
push
lds
adc
xlat
or
adc
cmp
xchg
add
test
push
push
mov
cmp
mov
int3
or
rcll
lods
hlt
pop
pop
fwait
repnz
mov
mov
cmp
adc
mov
add
inc
enter
xchg
sarl
add
sub
ret
mov
push
fiadds
sahf
dec
push
mov
mov
aaa
icebp
pusha
mov
jo
repnz
adc
js
dec
mov
popa
aas
and
mov
add
cmp
es
pop
aam
cld
jmp
inc
mov
mov
push
movsb
clc
cmp
in
mov
jne
ja
repnz
mov
mov
mull
inc
xchg
fidivl
hlt
inc
or
fmul
sbb
or
jg
movsb
leave
lret
std
clc
mov
or
pusha
pop
sub
adc
jmp
inc
jp
stos
fisubl
adc
jbe
out
lock
icebp
dec
mov
inc
int
xor
std
sub
cs
mov
js
in
lcall
pop
and
add
pop
test
daa
out
cltd
push
jmp
mov
xchg
sti
lock
xor
loopne
jbe
lret
mov
add
call
js
into
mov
cmp
repz
lods
leave
sbbb
push
cmc
push
out
jg
cmc
adc
test
call
or
aad
push
sbb
les
pop
xchg
lods
push
ret
popa
mov
push
nop
sub
mov
movsl
dec
addr16
mov
imul
call
sbb
and
jo
enter
pop
cs
call
cmc
mov
popf
loopne
popf
mov
mov
xchg
xlat
or
and
dec
sbb
xchg
std
sahf
outsl
ss
shld
jmp
adc
cmp
clc
xchg
dec
shlb
test
sbb
cmp
push
inc
lret
jns
xchg
and
and
xor
xchg
out
push
and
inc
sbb
ret
in
aaa
inc
xor
ss
and
pop
pop
aaa
sub
push
ret
dec
sti
ficompl
mov
sbb
fildl
mov
cwtl
lea
test
cld
jb
dec
test
jmp
xchg
sub
inc
lds
inc
pushf
xchg
daa
mov
sub
add
imul
and
xchg
in
adc
cwtl
mov
sub
popf
les
xor
push
mov
leave
and
jb
sub
mov
shlb
rcr
jbe
push
loopne
fstps
pop
lcall
shlb
sub
add
insl
mov
out
outsb
mov
push
pop
pushf
rcr
iret
pop
cmpsl
ret
mov
scas
push
subb
push
mov
pop
sub
jle
mov
mov
jbe
sbb
scas
cmp
xlat
sub
inc
movsb
cmpsl
jne
pop
add
or
sti
lcall
in
xchg
out
dec
adc
in
mov
test
or
insl
rcrl
pushf
js
cmp
jle
aas
lods
pop
fs
bound
popa
mov
mov
test
pusha
cmp
xchg
lret
lahf
adc
sub
fisttps
std
test
inc
dec
jmp
jmp
cmp
aaa
mov
push
aas
fucom
pop
adc
jmp
sub
mov
push
cmp
ja
xor
repnz
scas
inc
push
fdivrl
sarb
and
std
push
sub
hlt
or
divb
push
in
shl
mov
mov
pushf
insb
xor
fidivrl
jg
ja
data16
jnp
add
mov
cmp
jo
pop
inc
jnp
xor
jp
cmp
pop
hlt
and
rcr
xchg
pop
pop
scas
mov
cmp
or
jo
dec
jl
addr16
mov
jae
cmc
aam
jne
xchg
jb
xchg
push
lods
mov
fisubl
push
dec
or
scas
inc
mov
jecxz
fistl
or
jnp
mov
hlt
push
es
bound
roll
and
dec
push
adc
fcomip
push
shrb
cs
xchg
sbb
mov
jg
mov
cs
bound
lret
icebp
in
loop
out
addr16
sub
je
fiaddl
lcall
mov
rcrl
out
and
outsb
shll
pop
jno
fstl
inc
jl
push
mov
cmp
jae
adc
out
mov
mov
test
movsb
push
and
pop
push
xlat
js
daa
push
jbe
stos
xchg
daa
mov
xchg
cmpsl
pusha
push
jge
mov
adc
mov
pop
shll
out
adc
add
cmpsw
adc
je
and
cmp
pushf
cmpsl
cmpsl
ret
mov
cs
mov
xchg
sbb
in
aam
in
dec
dec
lret
test
jbe
jp
lcall
popa
push
jne
mov
push
fcomip
adc
pop
xlat
fcoml
jmp
dec
lret
mov
xchg
mov
cs
mull
cld
mov
movsb
fwait
ljmp
decl
imul
shrl
aaa
sub
push
add
stc
stc
lret
jne
mov
arpl
movsl
dec
sti
jae
rol
dec
fstpt
mov
movsl
xor
iret
popa
insl
in
adc
add
pop
test
dec
fsubl
nop
shll
xchg
popf
mov
and
pop
xchg
mov
xchg
inc
icebp
push
add
lds
inc
leave
xchg
push
bsr
adc
rclb
lds
jbe
cltd
sbb
or
fistpl
int
orb
mov
dec
inc
in
stc
ret
movsl
out
xchg
dec
std
cmp
into
sbb
int3
mov
jecxz
mov
aam
pop
or
sbb
iret
jmp
negl
rcrb
xchg
lahf
fsubrs
arpl
push
mov
out
dec
mov
jb
iret
popl
mov
call
jecxz
or
inc
fisttpl
push
jecxz
push
jae
std
repz
jge
ss
out
jbe
cs
cmp
or
mov
xor
xchg
xchg
xor
mov
xor
enter
cmp
insl
cmpsb
jmp
test
fs
mov
sbb
and
cmp
call
or
mov
mov
mov
flds
stos
fwait
or
mov
ss
sarb
je
jge
ret
jp
call
into
addr16
aad
pushf
jns
fdecstp
lock
rcrb
pop
in
daa
out
int
pop
jg
dec
cwtl
sbb
aad
pop
cmp
jl
and
mov
ret
scas
mov
add
shrl
push
dec
lret
adc
push
mov
mov
or
icebp
rolb
cmpsb
mov
add
cmp
cvttps2pi
mov
jecxz
fidivrl
and
inc
lods
mov
cmp
lret
in
xchg
loope
add
inc
dec
out
loopne
addr16
in
mov
xor
leave
push
and
ficoms
mov
jae
test
movsl
iret
push
sti
push
push
hlt
jp
dec
cmp
cmpb
xchg
lret
ss
pushf
rcrb
enter
das
push
mov
in
mov
mov
pushf
mov
mov
std
xlat
cmp
push
mov
push
pop
jecxz
movsl
push
rcrb
icebp
aad
repnz
jb
jecxz
sub
and
jbe
fistps
sub
faddl
jmp
sub
push
adc
sub
add
push
jp
inc
xchg
out
outsb
push
xor
lods
mov
imul
sbb
cmp
sub
rcll
andb
aad
mov
mov
mov
test
aad
lcall
pusha
insb
add
pop
dec
xchg
pop
test
jle
pop
aaa
jns
push
mov
pop
inc
mov
push
jo
ficoml
lcall
jmp
push
test
repnz
cmpsl
push
aad
jp
xor
dec
sbb
imul
push
cmp
add
pop
mov
mov
test
iret
fistl
and
out
mov
cwtl
cld
add
cltd
inc
inc
push
sub
jae
dec
aaa
es
sbb
pop
push
mov
and
pusha
jle
cmp
mov
mov
pushf
xchg
push
popl
push
daa
inc
jge
rolb
sbb
lods
dec
inc
cmp
gs
lret
out
dec
rolb
add
mov
xchg
push
mov
cmpsb
lods
mov
pop
int
ret
call
adc
or
xor
negl
xchg
mov
icebp
xchg
je
int
mov
mov
outsb
cmp
sbb
jne
out
stos
cltd
mov
and
adcl
fisubl
xlat
stc
mov
inc
xchg
lret
imul
les
xor
mov
or
jmp
adc
mov
sub
iret
cltd
xlat
sbb
das
fnstenv
xor
scas
sub
mov
or
ret
dec
addr16
inc
and
jg
outsb
rorb
imul
fsts
enter
popa
jp
mov
ret
gs
xor
movsb
dec
push
add
prefetch
mov
and
aad
ljmp
outsl
scas
sub
pusha
test
or
stos
jp
jl
jb
cmp
jae
imul
neg
sub
iret
loop
test
fildl
sub
ljmp
pinsrw
cmp
sbb
adc
loope
ds
shlb
cmc
pop
cmp
movsl
lds
test
out
cmc
sub
sbb
addl
jae
pop
mov
outsl
sbb
rcr
insb
shrb
or
in
test
or
or
pop
filds
icebp
pop
fwait
inc
jae
in
sti
push
out
jns
daa
es
leave
enter
sub
mov
mov
xchg
cmp
or
adc
jg
pop
lock
rolb
shlb
push
pop
or
adc
cmpsl
into
loope
jnp
aad
sbb
fiadds
add
repnz
leave
pusha
ljmp
stc
inc
in
daa
sbb
xchg
xor
xor
test
bound
clc
or
lea
inc
test
jecxz
mov
aaa
sub
xchg
lcall
or
push
add
or
addb
adc
lods
pop
lret
add
into
dec
jne
dec
cmc
mov
cmp
lret
push
xor
push
lods
mov
push
loopne
out
inc
nop
or
and
and
insl
test
pop
pop
and
jns
sub
xlat
loop
dec
adc
mov
xchg
inc
or
je
adc
xchg
add
adc
xor
sub
jb
stos
mov
hlt
filds
insl
xchg
adc
push
cmp
movsl
inc
push
and
sarl
into
les
lods
add
mov
mov
loop
notl
cmp
mov
push
cmp
push
or
mov
cwtl
inc
in
nop
sahf
lret
push
stos
xchg
fmuls
test
aam
cmpsl
rorb
mov
mov
aas
je
aas
inc
je
mov
les
addr16
xchg
movsl
jecxz
fadd
mov
fs
inc
test
cltd
clc
ds
mov
jmp
adc
inc
inc
jns
movsb
insl
pextrw
lea
stos
add
outsb
inc
jbe
movsb
int3
test
lahf
jmp
push
cmp
xor
int3
es
dec
adc
scas
add
fcoms
cmp
cmpsl
out
mov
out
jg
rolb
outsb
fcoml
inc
xchg
insl
fdivrl
dec
lods
or
xchg
inc
add
add
cli
test
test
gs
mov
addb
jle
or
sbb
sbb
inc
cmc
lods
inc
xor
jp
sti
out
mov
xor
mov
push
xchg
mov
mov
adc
repz
mov
in
ss
jecxz
mov
pushf
mov
and
jge
jmp
inc
test
ror
cmp
out
jnp
nop
mov
ficomps
push
fcomi
sbb
lea
add
push
xor
popf
add
out
xchg
mov
scas
mov
and
inc
ucomiss
sbb
ljmp
jle
mov
mov
xchg
ja
jnp
mov
sbb
insb
mov
mov
sbb
sbb
cld
hlt
dec
outsl
xchg
inc
fsubrl
mov
jmp
out
scas
imul
dec
cmp
mov
jae
out
ret
std
cmp
test
add
and
push
out
mov
mov
lds
mov
ljmp
leave
imul
sub
pop
fucomp
add
iret
ja
ss
xor
mov
and
push
push
aaa
jns
movsl
dec
push
out
iret
icebp
and
pop
push
xchg
jecxz
scas
and
cmp
jge
adc
jge
or
ror
clc
push
add
xor
cmp
lds
sbb
js
inc
add
bnd
pop
out
inc
mov
cs
sbbb
rcl
adc
and
pop
subl
xchg
mov
xchg
push
ja
mov
or
xchg
fdivl
mov
cmp
or
in
les
leave
fcmovu
fimuls
sub
mov
cmp
andl
mov
and
aaa
dec
pushf
popf
pop
dec
lret
xchg
inc
xchg
bswap
jecxz
jno
inc
fwait
js
pushf
lock
adcl
cmp
jg
dec
sbb
push
xlat
and
out
mov
push
adc
popa
movsl
dec
mov
icebp
loope
loopne
in
adc
int3
enter
pop
lret
jmp
ljmp
popa
pop
adc
push
dec
jl
icebp
adc
in
xchg
mov
cmpsb
jge
xchg
mov
dec
push
pop
xchg
mov
xor
sbb
add
out
hlt
loop
cltd
mov
sbb
pop
movsl
and
ja
out
stos
es
scas
out
sub
in
push
loopne
pop
cmp
addr16
xchg
outsl
xor
fsubl
hlt
mov
push
cmp
add
dec
pop
lcall
call
mov
icebp
lcall
mov
out
sbb
into
add
jnp
xor
mov
pop
lds
ja
mov
test
or
loope
push
and
roll
mov
ficoml
and
push
ja
into
data16
aam
scas
xor
cs
hlt
mov
pop
lret
stos
add
movl
adc
cli
adc
mov
jp
pop
in
aad
mov
aam
mov
mov
enter
insl
dec
jge
xchg
cmpsl
xchg
les
leave
cmc
cmp
rorl
insl
xchg
add
xor
sbb
repz
jmp
dec
adc
bound
add
push
cmp
frstor
push
leave
push
ds
mov
mov
mov
gs
or
sarl
stos
pop
pop
adc
add
das
pop
jg
leave
pushf
leave
lcall
xor
jae
imul
mov
jae
aas
xor
stc
push
loop
or
inc
icebp
mov
xor
out
add
int
or
pushf
push
gs
fnsave
jbe
into
pop
push
stc
sbb
xchg
push
ss
cli
mov
je
notl
mov
popa
dec
add
fs
fldt
pop
sub
insb
mov
lret
stos
out
sub
push
cmpsl
jle
xor
mov
in
loop
jl
jno
pushf
push
and
cmp
outsl
mov
ret
shrd
mov
scas
pop
and
dec
mov
pop
cwtl
xchg
inc
test
and
jno
xor
mov
or
xor
lods
pusha
fldcw
cmp
shrl
xor
test
adc
arpl
lret
sbb
cmp
out
call
or
xchg
mov
scas
fcmovnu
dec
and
call
mov
sbb
xchg
xchg
in
or
out
mov
pop
sahf
aad
xor
outsl
mov
or
jae
add
int3
andl
add
test
out
ljmp
mov
sub
cmp
xor
int3
or
mov
lods
lea
out
cltd
push
sti
scas
pushf
cmp
out
cld
sub
movsl
scas
jmp
cmp
lock
repnz
sahf
lods
mov
mov
out
sti
fidivl
sub
adc
movsb
out
sbbb
negl
adc
mov
inc
fs
icebp
jb
pop
xchg
add
sbb
jns
cmp
mov
sets
cmpl
push
mov
and
addb
pop
add
mov
dec
jo
push
sub
scas
iret
shlb
cmpsb
orl
mov
loopne
ret
repnz
pop
or
mov
outsb
fcomp
mov
push
ljmp
inc
sbb
test
pop
mov
test
or
cmp
pop
test
push
or
es
pop
fucomp
dec
sbb
js
ret
add
enter
jp
sbb
pusha
faddp
test
and
and
sarl
xchg
cltd
push
cmp
jmp
loopne
lret
dec
xor
stc
fwait
add
rolb
dec
jno
push
dec
push
cmp
mov
lods
ficoml
add
xor
dec
mov
dec
xchg
aas
icebp
bound
push
fists
xchg
fidivrs
or
jl
popf
fadd
add
ret
pusha
cli
mov
sub
jge
ljmp
xchg
xor
pop
out
shrl
and
or
xor
sub
inc
fidivl
in
xor
rolb
sub
mov
xchg
stos
movsl
inc
cmp
popa
cmp
gs
xchg
fwait
push
and
faddl
xor
push
and
stos
push
call
xorl
lcall
push
add
es
movsb
mov
or
fdivrl
fwait
push
xchg
push
push
jbe
adc
imul
insb
xchg
cmp
hlt
xor
popf
imul
xchg
mov
test
mov
xchg
movsl
andl
xchg
dec
fdivrl
outsb
in
shll
test
xlat
push
push
fchs
pop
lea
imul
ret
shrl
jge
jnp
inc
loop
aas
in
ret
daa
push
pop
mov
icebp
push
push
cli
rclb
stc
pop
pop
xchg
add
mov
or
xor
jge
aam
lods
jb
inc
pop
xchg
lods
and
jmp
and
scas
push
add
daa
stc
ret
xor
neg
arpl
pop
pushf
dec
cld
and
ss
push
inc
adc
push
nop
mov
cwtl
pushf
add
lcall
rolb
and
lods
add
adc
or
cli
in
pop
add
fmull
add
nopl
sbb
push
dec
inc
cmp
and
fidivrl
add
sub
je
cltd
ss
mov
insb
cli
pop
mov
int3
sbb
pop
mov
pusha
loope
aas
out
xchg
mov
pusha
inc
aaa
std
in
push
ss
pop
out
std
jmp
cmp
cmp
js
xorl
inc
jg
mov
inc
js
mov
into
adc
mov
rcrb
mov
ja
push
cmc
cwtl
les
pop
xchg
sbb
add
or
pop
push
jle
test
xchg
inc
xchg
test
cmpsl
lds
sti
gs
mov
sbb
fstl
dec
pop
lods
dec
cltd
lods
fistl
mov
aam
sub
mov
adc
xor
mov
ss
inc
jae
cmpsb
dec
mov
enter
cmp
jae
push
xor
jl
cmpsb
inc
pop
ret
and
push
or
ficoms
rcll
clc
mov
fcmove
mov
fwait
xchg
add
cmp
push
ss
pop
pop
pop
loopne
test
lahf
lds
mov
cmpsb
aas
std
mov
sub
ja
fcompl
addl
cld
shrb
dec
jmp
push
jle
jle
repnz
sub
mov
sbb
test
inc
cwtl
sub
xchg
scas
sahf
loop
stos
or
xor
adcb
cmp
adc
sbb
add
inc
push
pop
cmp
scas
dec
shl
hlt
add
jmp
add
mov
inc
xchg
jp
jmp
in
cmp
or
or
mov
inc
cld
ficomps
sub
dec
adc
sub
stos
cmpsb
stc
stos
lock
scas
mov
aaa
adc
mov
fmuls
xchg
das
fwait
mov
jno
out
outsl
ret
mov
lods
je
fcomp
outsl
dec
and
iret
sub
movsb
cmp
jne
or
outsl
dec
nop
stc
and
fstl
arpl
iret
outsb
jp
jge
add
push
mov
and
loope
sahf
cmp
inc
sarl
popa
and
out
cmp
mov
test
dec
dec
mov
fwait
adc
dec
cmpl
flds
push
popf
out
mov
add
cmp
or
inc
nop
ja
stos
xor
je
es
mov
add
fsubrl
jle
fistpl
jg
ficomps
xchg
aaa
icebp
sahf
sub
sub
rcrb
aaa
stos
push
mov
idivb
adc
loopne
ficoml
push
loopne
dec
cmp
mov
push
add
jg
adcb
addb
mov
out
pop
push
stos
jmp
mov
mov
inc
xchg
pushf
icebp
je
jne
or
stos
xchg
repnz
push
inc
lods
cmpl
jo
mov
xor
cwtl
push
jg
rorl
popf
pop
int
fs
int3
push
jae
cmc
push
cmpsb
dec
xchg
les
cmp
xchg
ret
jmp
daa
enter
movsl
pop
outsl
or
jecxz
and
pop
mov
loope
push
inc
in
sbb
cs
inc
push
shll
pop
pop
mov
outsl
mov
test
mov
fdivr
pop
cld
lods
and
sbb
out
pop
cmpsb
test
ds
cmp
or
xor
xchg
in
cmpsl
stc
fbld
ret
pop
push
or
xor
and
dec
out
mov
fucomip
aaa
mov
xchg
xchg
ja
cwtl
xorb
in
push
mov
pop
mov
jg
insl
mov
push
add
popa
fsts
mov
out
mov
cmpsl
pop
jmp
adc
add
or
sbb
icebp
out
inc
jmp
ljmp
xor
mov
mov
fiadds
sbb
mov
clc
pop
push
push
faddl
in
fbld
in
icebp
in
dec
inc
in
xor
cmpsb
js
push
cltd
dec
fwait
push
test
sahf
jge
rorl
push
xor
popf
mov
rol
lret
mov
int
push
lcall
mov
or
pop
les
stos
xchg
lahf
mov
stos
js
and
jmp
lret
outsb
mov
or
cmc
test
stc
shlb
rcl
sbb
rcr
cltd
cmpl
pop
cld
fisttpl
cld
jl
mov
dec
mov
ret
jmp
imul
daa
loopne
negb
dec
and
xor
or
pop
jne
mov
dec
out
ret
lret
xchg
icebp
and
sub
test
bound
pop
dec
dec
jg
or
mov
mov
adc
aam
bound
jbe
sbb
jns
inc
push
dec
arpl
push
mov
ds
mov
stos
pop
add
imul
lahf
add
add
lret
shll
in
jb
int3
mov
dec
scas
jo
pusha
shl
or
mov
fnsave
mov
push
inc
mov
data16
jb
xchg
push
adc
mov
ror
popf
rorl
pop
lea
xchg
sub
loope
test
xchg
cmp
ror
pop
lcall
cmp
and
push
push
cmp
and
push
push
sub
push
push
sbb
int
aas
dec
and
mov
inc
movsb
and
int
arpl
ret
lds
mov
mov
shll
push
jb
cmp
dec
fcoml
arpl
out
push
out
test
xchg
sub
ret
lahf
dec
or
movsb
push
ljmp
push
cmp
mov
push
jnp
mov
mov
push
xor
mov
loop
jbe
or
jne
xor
loopne
cmc
pushf
cmpsl
mov
popl
sbb
in
mov
cmp
aad
mov
mov
mov
cmp
bound
leave
mov
mov
or
ds
and
nop
xor
add
dec
push
mov
mov
imul
enter
pop
push
jns
jno
mov
dec
inc
jmp
int
pop
jno
xor
inc
das
daa
movsl
sub
data16
scas
imul
repz
cwtl
aas
out
cld
repnz
daa
mov
in
jecxz
lahf
int3
pop
xchg
push
adc
lds
clc
shrl
negl
inc
cltd
sti
stos
sahf
call
lods
dec
sbb
and
icebp
jmp
sbb
jg
pushf
in
test
in
mov
push
sbb
out
jge
sti
xor
dec
push
jnp
scas
jae
adc
adc
fiadds
clc
push
mov
stc
and
sbb
mov
sub
mov
jbe
jge
shll
in
in
dec
cmp
sbb
xchg
lea
adc
mov
fcmovnbe
cmpsl
les
lret
jge
mov
sub
pop
add
test
cltd
inc
stc
out
xor
sarl
cmpl
int
cltd
rcrl
aas
sbb
in
fnstsw
cmc
sbb
int
pop
lahf
stos
or
push
imul
mov
negl
js
inc
dec
mov
jo
sub
out
movl
mov
add
pop
sbb
mov
out
push
fst
adc
loope
xlat
push
mov
mov
aas
push
push
cmp
pop
gs
fwait
add
xor
inc
ret
jmp
jno
adc
scas
pushf
xorl
pop
into
in
jl
inc
jnp,pn
and
outsb
outsb
pop
cwtl
inc
orl
fists
dec
adc
outsb
ja
jecxz
pop
stc
adcb
repnz
pop
fst
xlat
loope
xorb
outsl
inc
faddl
mov
sub
jmp
inc
sub
dec
xchg
cli
ljmp
dec
xchg
pop
add
pop
aad
stos
rcrb
xchg
sbb
and
imul
arpl
cmp
push
cli
hlt
stos
xchg
test
out
dec
loope
mov
lahf
popa
jl
popa
lahf
pusha
out
jbe
int3
fs
xor
mov
add
cmp
lock
push
adc
les
sti
loop
jp
ds
outsl
daa
xor
ret
xor
mov
jae
sbbl
sarb
sbb
movsl
out
mov
es
loopne
add
adc
sbb
dec
cmpl
dec
or
xchg
jp
sub
movsb
cltd
lea
mov
popf
lock
add
xor
mov
lret
sub
mov
int3
aam
loopne
lea
aam
mov
sarb
mov
icebp
xchg
in
sub
mov
pop
idivl
shll
out
in
aam
loopne
aas
rolb
push
ss
movsl
and
pusha
xchg
imul
jge
iret
call
cld
dec
dec
in
sbb
mov
cwtl
mov
in
add
mov
sbb
call
mov
inc
mov
push
out
xchg
pop
pop
adc
cmp
int3
and
jecxz
cmp
into
fs
ljmp
mov
js
inc
mov
daa
lahf
nop
inc
mov
xchg
lods
cmp
xchg
fistps
sbb
mov
push
enter
xor
cli
stos
clc
hlt
cwtl
sti
push
int
movsb
mov
lahf
or
xchg
mov
or
fcmovne
cmp
mov
ret
lods
adc
mov
mov
or
pop
or
cmc
es
xor
adc
sbb
call
int
insb
daa
jmp
xchg
add
les
add
dec
xlat
out
add
fnsave
lcall
movsb
je
mov
inc
sub
mov
xchg
out
sub
dec
pop
int
clc
call
xchg
mov
insb
push
mov
xor
jle
fwait
dec
pop
mov
xchg
mov
jl
out
ja
push
popa
call
or
lock
push
jmp
mov
adc
fcomps
xor
scas
bound
push
xor
sahf
popf
xchg
cmp
ja
cli
test
lret
xor
jmp
inc
int3
or
or
mov
mov
sbb
jns
pop
scas
pop
or
cs
add
jp,pn
pop
in
leave
mov
sbb
adc
mov
loopne
push
or
and
rorl
xchg
or
push
mov
inc
cmp
mov
jo
data16
push
jmp
inc
lea
or
rorl
in
adc
pop
lahf
xchg
xor
test
push
call
loopne
decb
jne
ja
or
fsubrl
lahf
push
push
cmc
sbb
dec
xor
rcrb
inc
js
lcall
stc
jne
loop
sti
jl
cmp
and
dec
and
mov
aad
sbb
inc
insb
lea
jp
or
mov
push
ja
imul
mov
jo
pop
mov
jl
cmp
xor
cmp
mov
mov
ljmp
cmpsb
and
aas
inc
jbe
push
lds
pop
push
xor
xchg
adc
addr16
lcall
push
jae
orb
out
add
push
jp
fistl
insb
pop
push
sub
mov
dec
repz
aas
sub
mov
ss
adc
add
jbe
add
and
loopne
adc
push
adc
mov
dec
push
add
sub
adc
in
mov
gs
cmp
movsl
mov
or
cli
pop
or
in
sbb
dec
loopne
add
notl
pusha
leave
std
jg
out
dec
mov
outsb
pop
mov
cmp
mov
pop
pop
fisubrs
push
adcl
jg
std
fldenv
iret
push
sub
mov
decb
sub
push
ror
popa
mov
in
xchg
lcall
push
jecxz
nop
and
cld
cld
js
js
div
inc
dec
and
mov
je
pop
xchg
cmc
sbb
mov
ss
cmp
pop
push
gs
inc
inc
or
loop
push
bound
mov
scas
out
roll
jb
lea
flds
subb
jns
icebp
loope
lods
sub
mov
scas
pop
in
hlt
push
cmpsl
mov
add
jp
or
pop
das
push
inc
mov
xchg
push
popf
sbb
fistl
aaa
out
aas
fnstenv
mov
aas
mov
push
jge
mov
test
mov
cmp
dec
add
test
pop
fildll
inc
sbb
mov
push
sbb
push
sub
and
xchg
mov
sbb
vpcmpeqb
push
sbb
jmp
xor
outsl
loopne
mov
add
and
into
movsb
sub
movsb
aam
pushw
mov
and
popaw
xorb
xchg
xchg
xor
jbe
mov
ds
mov
scas
das
jp
inc
adc
jecxz
and
mov
leave
cmc
cli
aam
rorl
scas
fiadds
mov
mov
lods
insb
psllw
js
jecxz
sub
push
mov
xchg
mov
int
dec
outsb
add
adc
ret
dec
mov
or
insb
insl
ret
orb
or
add
adc
movb
jg
test
jg
popf
adc
pop
jp
mov
xchg
ja
mov
cmpsl
pop
lods
mov
add
and
lahf
add
fildll
icebp
push
xchg
fstpl
stos
leave
out
add
push
cmpb
mov
xor
stc
aaa
add
mov
jno
jg
cmp
push
xchg
inc
loop
xchg
sub
dec
jp
je
mov
jns
pop
mov
adc
leave
pop
inc
xor
xchg
nop
lahf
and
mov
repz
xchg
push
repnz
outsb
mov
xor
jmp
cmc
cwtl
mov
add
in
push
and
pusha
js
mov
loop
scas
scas
jnp
adc
push
andb
test
pushf
call
sbb
sbb
lea
adc
mov
mov
mov
add
mov
pop
dec
push
test
imul
lret
adc
enter
fisubl
cmp
push
cld
rcll
popf
jecxz
sub
jno
inc
xchg
jmp
mov
cs
int
jecxz
iret
push
mov
fabs
lds
dec
shlb
adc
loop
push
les
adc
loopne
sbb
pop
xor
nop
aam
pop
repnz
jle
fnstsw
cmpl
pop
jecxz
subb
mov
and
inc
sahf
scas
mov
popa
and
stc
mov
cltd
loopne
lock
jmp
add
dec
test
out
and
push
dec
adc
fwait
jg
sub
sub
fwait
jge
divb
jne
data16
movsl
mov
mov
dec
pop
xlat
ficompl
sbb
dec
out
bound
mov
loop
sub
mov
js
jmp
push
lds
lret
test
ss
mov
mov
imul
xchg
pushf
xchg
rcr
popf
in
in
add
jno
outsl
lods
jo
sub
sbb
in
scas
push
jne
xor
lahf
xchg
sbb
cwtl
jp
mov
or
iret
jg
sbb
in
mov
ret
incb
cwtl
xchg
pushf
inc
ds
jno
xchg
sbb
mov
xchg
inc
mov
cmp
mov
adc
or
clc
fbstp
ljmp
push
cmp
js
push
adc
dec
push
movsb
in
addr16
frstor
cmp
adc
cmp
sahf
jb
xchg
adc
stos
pop
xchg
lods
dec
movsl
sub
int
fwait
xchg
push
fcmovbe
in
xchg
loope
pushf
aad
into
cmp
pop
inc
jne
hlt
repz
mov
adc
xor
sahf
loope
mov
sub
lock
pop
sbb
jns
sbb
jp
loope
xchg
mov
test
ja
insb
mov
sbb
adc
cmpsb
jae
jg
push
lahf
pop
dec
cmp
mov
push
sbb
jae
pop
inc
lea
sub
mov
mov
mov
daa
or
mov
rorl
sub
dec
nop
or
or
push
xchg
rcll
mov
mov
aaa
in
dec
sub
cmpl
cmc
mov
pmulhuw
push
popa
sub
test
mulb
cwtl
sbb
cwtd
mov
or
pop
popf
dec
mov
inc
sbb
jbe
pop
mov
cmp
in
add
outsl
mov
mov
icebp
sbb
jmp
and
sbb
mov
mov
add
push
ja
pop
fcoml
xchg
mov
mov
mov
inc
in
and
xor
mov
filds
hlt
lret
jg
ret
sbb
sbb
mov
lods
divl
mov
lds
sub
pop
xor
movsl
or
nop
cmpsb
cli
mov
adc
dec
adc
pop
add
cmp
mov
fwait
loope
clc
test
nop
pop
hlt
bound
mov
aas
or
and
loope
into
ret
hlt
stos
fldt
popa
add
inc
push
inc
repnz
roll
cmp
mov
dec
cwtl
sub
adc
add
cmc
pusha
lret
aam
inc
fs
cmp
mov
cmp
and
and
rclb
gs
cmp
mov
fsubrp
xchg
or
adc
into
cmovne
mov
cwtl
fnsave
adc
cli
and
push
xlat
push
mov
and
xchg
movsb
and
and
inc
xor
mov
cbtw
mov
jp
hlt
in
jns
loopne
leave
ror
dec
in
jbe
movsb
and
xor
or
pop
jecxz
push
test
lock
das
insb
mov
sub
repnz
sub
jge
outsb
test
inc
push
inc
pop
pop
test
xor
imul
arpl
in
add
pusha
int
pop
inc
mov
test
add
dec
in
mov
loopne
add
sbb
jg
adc
jo
mov
das
mov
add
push
inc
adc
es
mov
rclb
and
sub
pop
repz
dec
outsl
lret
mov
or
inc
and
inc
scas
mov
or
pushf
mov
push
test
pop
lock
and
cmc
fwait
cs
scas
and
push
stc
jle
or
sbb
cmpsl
dec
fcoml
fists
and
in
cmp
enter
pop
ret
cmp
int
cmpsb
cmp
sbb
dec
xor
rcr
dec
div
subl
sub
sbbb
imul
movsb
mov
mov
bsr
mov
insb
lods
cmpsb
cmpsl
and
pushf
mov
popf
lods
jp
lods
add
add
test
dec
mov
push
je
lds
es
mov
dec
pop
insl
je
fstpt
jmp
sub
or
sbbb
cld
dec
push
fisubl
adc
push
shlb
mov
adc
cmp
mov
jae
and
jo
cmp
mov
fidivrl
std
pop
fstl
sub
arpl
pop
jo
aam
into
stos
leave
repnz
test
jle
out
cltd
rclb
aam
adc
push
or
jno
aas
leave
out
addr16
call
rcll
ss
sbb
xchg
sti
fcomps
xlat
push
pop
aam
mov
xor
cmpsl
dec
mov
fsubl
jg
and
jl
push
jp
outsb
scas
popa
ffree
stc
cmp
into
pop
mov
cmp
neg
scas
ret
xchg
inc
lea
out
and
pushf
mov
cwtl
xorb
ror
sahf
test
lahf
mov
adc
std
mov
sub
cmp
andl
cs
testb
inc
inc
xchg
push
out
rorl
in
aas
roll
mov
daa
inc
xchg
mov
es
push
push
and
daa
addr16
cmc
jl
repz
in
icebp
js
ss
mov
repz
or
cmc
cld
lcall
das
and
add
or
and
push
push
jp
and
ficomps
aad
pusha
mov
jns
and
std
adc
or
add
jg
pop
sbb
or
mov
out
addr16
pushf
or
fwait
xchg
jne
mov
je
or
jne
call
dec
mov
xchg
pop
sahf
mov
out
cmpsb
push
pop
mov
bound
sbb
int
xchg
into
mov
dec
imul
cwtl
test
inc
sbb
xor
dec
mov
and
jbe
dec
inc
dec
decb
mov
jae
jmp
repnz
repz
ror
fldt
xchg
pop
xchg
mov
fs
cld
bound
or
mov
ss
test
in
push
lds
cltd
or
adc
inc
aad
pop
cld
inc
mov
xor
jge
xor
fld
mov
lcall
cmp
rorl
pusha
lret
jp
inc
dec
pushf
mov
cs
je
inc
jbe
dec
mov
mov
stc
scas
pop
stos
sub
push
dec
popa
xor
fnclex
leave
and
xchg
sbb
or
adc
jl
mov
jne
and
jns
or
int3
mov
in
dec
ljmp
cmp
cmp
mov
sbb
xor
fcomi
out
mov
stos
js
je
mov
mov
pop
cmc
mov
push
sub
pop
popf
inc
movsb
jae
adc
jl
xchg
xchg
jae
loope
filds
cmp
pop
jp
dec
loopne
fsubl
stc
fildll
shl
roll
cs
and
sbb
inc
aad
inc
jmp
pop
mov
mov
pop
inc
xor
fcomps
xchg
mov
lahf
xor
rorl
aad
mov
add
cmc
jl
and
jle
les
mov
loop
out
sti
cmc
rcrb
mov
jmp
adc
push
loopne
aas
sub
dec
mov
lret
xor
push
test
dec
mov
cwtl
ljmp
cmp
enter
cltd
sub
mov
ret
mov
cld
jns
push
rolb
or
movd
test
cmp
push
xor
mov
sub
dec
in
xchg
jp
mov
adc
fstp
stos
std
and
xchg
push
sbb
fisubs
cmc
cmp
xor
ljmp
outsb
sahf
mov
enter
outsb
or
sbbb
sbb
das
or
cwtl
push
fisttpll
xchg
adc
fldl
jl
cli
mov
inc
test
xchg
jmp
xchg
jmp
dec
pushf
pop
int3
int
lods
mov
popa
push
repnz
lahf
xor
in
hlt
cmp
or
pop
test
aad
xlat
jbe
mov
xor
xchg
or
pop
push
jle
mov
clc
pop
insb
pop
sub
js
pop
mov
push
aas
cmp
andl
fldt
add
imul
adc
xor
or
jl
shlb
xchg
push
icebp
fcmovne
fwait
fwait
lods
repnz
into
push
imul
gs
sbb
xor
cli
add
or
test
sub
js
and
sbb
or
bound
je
stos
lods
inc
int3
ja
jl
inc
insb
xchg
push
insb
mov
xchg
inc
push
adc
iret
sti
or
pop
repz
cltd
jae
adc
cli
hlt
mov
lds
out
push
add
push
sub
pop
lock
stc
sub
divb
fwait
ret
pop
subl
pop
cmpsl
stos
or
insb
add
adc
mov
mov
movsb
sub
jecxz
xchg
mov
lcall
loope
and
std
loopne
out
xor
or
mov
push
or
jno
adcb
cmp
mov
dec
loope
lods
mov
or
cli
sub
fs
ljmp
ret
and
jle
lods
jle
sbb
testb
push
inc
es
clc
adc
xchg
dec
adc
and
pop
orb
in
mov
rcrl
adc
aam
mov
pop
addr16
xlat
fwait
cmpsl
xor
cmp
test
cmp
push
xor
enter
jno
dec
movsb
push
stos
mov
dec
ja
lcall
jnp
inc
mov
aas
cmp
fwait
xor
cwtl
pushw
sub
rcrl
adc
retw
mov
popf
cli
mov
imul
ljmp
inc
aad
pop
test
lods
pop
dec
hlt
cltd
or
xchg
mov
mov
outsb
xorb
push
sti
and
xchg
loopne
mov
push
adc
adc
out
xor
xor
mov
or
insb
dec
xchg
sbb
mov
fnstsw
nop
dec
call
fcoml
insl
sub
sub
mov
fs
addb
inc
cmc
mov
ret
mov
and
sti
pop
inc
add
fcmovnbe
xor
sub
adc
aam
push
fdivr
call
push
loop
dec
dec
sub
xchg
mov
xchg
inc
cwtl
or
mov
out
adc
cmp
lods
adc
in
add
sub
cmp
dec
push
sbb
rcrb
imul
ret
sbb
xorl
push
or
out
out
btrl
hlt
pop
dec
ljmp
mov
stos
rolb
call
mov
jb
jbe
shlw
or
dec
ror
add
add
outsb
jo
fldt
xchg
dec
add
sbb
xlat
sub
xchg
push
fdivrl
out
insl
xchg
add
xchg
leave
jmp
out
fisubrs
mov
lret
movsl
rcrb
sbb
and
mov
dec
cld
mov
sub
outsb
bswap
pushf
or
lret
xchg
fistpl
jg
xchg
leave
je
stc
pop
jne
adc
movsl
int3
add
sbb
rclb
or
rcll
lahf
adc
cmp
dec
ret
and
fchs
mov
out
jnp
and
mov
pop
cmp
inc
into
jno
or
out
outsl
out
mov
mov
jo
popa
in
push
sub
stos
inc
xor
js
push
lods
out
scas
ret
dec
xor
xor
pushl
shlb
jmp
sbb
jl
lods
sub
jmp
leave
in
and
hlt
daa
push
es
pop
push
xor
movsb
movsl
popf
or
fwait
or
inc
sub
mov
test
aad
dec
shlb
mov
and
mov
nop
scas
jecxz
add
out
jl
push
loopne
test
psubsb
cmp
popf
pop
push
cmp
or
sbb
lahf
add
inc
add
enter
and
mov
stos
pop
je
mov
es
mov
shll
lods
or
jl
aad
mov
add
shrl
enter
hlt
lret
dec
outsl
adc
ljmp
lret
loopne
mov
int3
lea
dec
cli
pop
sub
add
sbb
insl
adc
xchg
adc
push
call
cli
push
pop
adc
mov
loop
movsb
sbb
xchg
and
repnz
inc
pop
add
push
add
in
data16
dec
xor
movsb
call
repz
pop
inc
lcall
pop
dec
in
arpl
and
lret
cld
in
insl
repnz
adc
repz
inc
loop
aad
xchg
push
push
push
mov
pop
sbb
push
js
repnz
repnz
jae
dec
mov
pusha
decl
in
repnz
lods
mov
and
inc
lods
or
add
test
imul
push
and
shrb
call
cmpsb
sub
lods
jae
cmp
dec
movb
lret
fs
jbe
int3
xchg
cld
xchg
push
loopne
stc
popa
xor
insb
cld
popa
gs
xchg
or
cmp
lods
or
add
or
mov
movsb
adc
sahf
lock
in
mov
adc
jno
dec
mov
subl
mov
xor
loop
ljmp
test
push
shll
cmp
roll
cmovo
inc
mov
hlt
mov
add
push
or
push
or
push
sub
or
jp
icebp
sahf
scas
jne
leave
mov
sbb
xchg
in
dec
cli
hlt
sub
stc
mov
pop
sbb
int
dec
push
scas
ja
xor
adc
and
dec
std
fwait
cmp
ljmp
add
or
xchg
repnz
sub
mov
cmp
out
fstpt
add
frstor
pop
inc
inc
ffreep
daa
std
or
and
or
adc
jbe
fists
jbe
jbe
jl
sub
xchg
ds
mov
mov
cmp
mov
dec
cmp
outsb
sbb
xchg
dec
int
jne
adc
nop
int
je
test
or
test
int3
cltd
sbb
sub
push
add
add
fs
inc
std
mov
call
sub
scas
mov
leave
cmp
and
rorb
data16
push
dec
or
movsb
cmp
das
std
push
lock
movsb
xchg
repz
pop
cmp
sbb
and
lahf
sbb
test
and
fldenv
outsl
repz
sbb
fdecstp
in
sub
mov
nop
rcll
add
xor
adc
test
stc
jno
mov
lods
arpl
sbb
adc
xor
sub
pop
insl
dec
mov
dec
sub
les
and
icebp
inc
push
add
cmp
xor
sbb
mov
inc
fldt
jmp
stos
and
filds
or
jns
je
push
push
shr
out
lcall
outsb
push
jmp
sbb
pop
cmpsl
mov
mov
mov
mov
mov
popf
fs
ret
ss
das
jno
xor
in
daa
pusha
or
aam
ja
cmp
ret
xor
inc
pop
adc
dec
mov
xchg
sub
aam
push
sahf
pop
cmp
inc
aad
push
jo
pop
adc
or
dec
mov
and
stc
pop
clc
faddp
enter
outsb
xchg
add
add
add
push
mov
cld
jle
test
push
cmp
xor
call
outsl
pop
sahf
fdivs
pop
jb
mov
cli
mov
shrb
add
mov
movsl
and
cwtl
fisttpl
mov
push
mov
xor
rolb
cmp
daa
sub
or
xor
ljmp
fistpll
out
incb
lret
imul
test
mov
and
inc
sub
xor
fcmovu
or
dec
dec
lds
mov
jge
xchg
fcomps
or
pop
sbb
movsb
xor
out
popf
push
sbbl
or
inc
push
push
push
or
in
push
add
das
fs
leave
lahf
jge
call
pop
scas
cltd
shr
scas
mov
in
ret
loope
out
cmpsl
and
sbb
in
mov
and
cmp
aaa
aas
cltd
movsb
add
or
pop
in
out
scas
sbb
arpl
push
mov
movsb
andl
push
in
sub
les
stos
mov
pop
mov
pop
inc
or
insb
or
mov
adc
or
inc
lcall
mov
jo
xor
pusha
add
aaa
das
clc
js
xchg
cltd
je
push
pop
mov
enter
push
lea
into
scas
add
ret
clc
je
fisubs
jle
loop
mov
shll
std
jnp
xchg
jnp
or
aam
push
pop
jl
inc
cltd
movsb
out
cld
sbb
push
shrl
cwtl
inc
mov
xchg
jnp
jmp
mov
push
int
mov
adc
pop
push
push
xchg
push
xor
mov
push
cmp
push
push
ret
pop
push
jae
mov
add
dec
sub
aaa
push
out
icebp
mov
scas
pop
int3
jmp
push
xor
jo,pn
jnp
mov
loopne
dec
dec
pop
or
cmp
aas
cmp
icebp
inc
pop
shlb
int3
push
fidivl
or
and
stos
lea
fcmovnu
das
aad
add
popf
orps
pop
push
fisttpl
mov
outsl
stos
mov
fsubrl
cmp
jle
mov
cwtl
pop
or
maskmovq
notl
pop
cmpsb
inc
shrl
sbb
or
push
imul
daa
xlat
xor
push
insb
imul
neg
ret
scas
imull
and
dec
fisubl
dec
test
mov
dec
jae
push
arpl
adc
sbb
cmp
inc
push
or
mov
pop
xchg
ljmp
jl
lea
sub
rorl
fistpll
je
xchg
lea
add
jno
or
scas
daa
mov
pop
sbb
lds
add
aaa
push
push
in
aam
loope
cwtl
addr16
dec
xchg
inc
insl
mov
les
mov
mov
in
cmp
sahf
pop
loop
lret
sub
jle
sub
and
xchg
inc
std
add
mov
repnz
out
jbe
adc
ds
jp
mov
adc
xor
push
ljmp
xchg
jg
pop
jmp
push
js
jmp
aad
loop
shll
pop
or
in
pop
xchg
mov
pop
push
dec
adc
xchg
mov
inc
sbb
or
cmp
jl
or
popa
ficoml
push
jle
mov
in
cmp
mov
xor
jle
jg
jne
cli
xor
xchg
nop
ja
cmp
xor
sub
add
movsb
sbb
inc
scas
xchg
sub
pushf
daa
enter
aaa
dec
out
xor
fadds
adc
ljmp
pop
adc
push
movsl
push
sbb
jns
out
mov
add
popa
pusha
inc
into
rcrb
mov
jl
pop
or
mov
testl
jae
or
inc
xor
mov
test
cmpsb
aam
inc
pushl
jecxz
cwtl
or
pop
xor
dec
mov
xchg
mov
pop
xchg
orl
cs
sub
pop
and
mov
dec
or
leave
out
lret
insb
cs
test
sahf
sbb
setge
xchg
and
inc
and
and
fldt
cmp
out
adc
sub
clc
fisttps
xchg
adc
mov
ret
jl
lods
push
adc
jmp
leave
call
pop
outsb
fisubl
cwtl
popf
mov
out
mov
or
inc
mov
ficompl
stos
stos
sbb
popf
jp
xor
sub
jmp
sbb
push
jge
in
xor
add
xor
lret
and
repnz
xchg
xor
pop
inc
pop
outsb
and
add
aas
pop
xchg
test
hlt
pop
push
test
lods
aaa
or
and
push
inc
and
out
mov
dec
mov
insb
test
scas
fstp
test
or
loop
in
xchg
lds
bound
ljmp
enter
mov
repz
mov
and
jae
jp
xchg
js
adc
mov
dec
lahf
jecxz
mov
cs
cmpsl
adc
and
jp
dec
xor
pop
push
push
loopne
std
pop
int3
push
sarl
aad
frstor
aaa
xor
and
mov
inc
push
push
jnp
push
mov
test
cmc
pop
out
insb
sar
popa
cmp
xchg
push
sbb
sbb
mov
rcr
lods
outsl
stos
xchg
pushf
arpl
int
jb
enter
push
sub
shll
pusha
in
stos
pop
sbb
push
adc
lds
push
mov
mov
insb
add
or
std
rol
mov
mov
out
add
push
cwtl
add
xor
iret
out
bound
je
test
sbb
xchg
mulb
lds
adc
movsb
std
fstpl
and
fnop
cmp
jle
or
mov
mov
push
int
push
test
mov
rcrb
xor
leave
mov
imul
gs
loopne
mov
push
mov
inc
adc
lcall
pop
mov
xor
mov
add
js
mov
into
jecxz
jecxz
xor
outsl
hlt
sub
outsb
xorl
gs
bound
push
or
int
out
and
pop
jmp
es
mov
stc
sbb
call
and
pop
push
lea
popf
push
inc
outsl
mov
mov
out
insl
pop
xor
mov
mov
sbb
jmp
cmp
scas
in
mov
fisttpl
les
imul
outsb
mov
push
mov
mov
and
xor
loope
adc
jl
sbb
insl
popf
sub
jne
lds
pop
mov
adc
or
jge
push
jp
addr16
push
push
ds
movsl
jo
mov
cmp
stos
jne
call
xchg
xorb
or
test
scas
sbb
push
push
jmp
movsl
pop
jo
addl
ds
add
jp
pushw
popf
lods
mov
dec
outsl
xchg
cmp
lods
movsl
xchg
inc
das
into
xor
or
xor
daa
rcrb
lods
ja
adc
cmp
out
jno
pop
push
xor
mov
xor
cmp
movsl
cmc
add
sbb
or
call
jne
test
rorb
call
push
jecxz
leave
fscale
xor
inc
insb
mov
dec
and
lea
cltd
inc
orb
xlat
pusha
mov
in
or
pop
mov
mov
out
mov
cwtl
xor
or
mov
push
mov
adc
hlt
enter
lods
lock
jp
addr16
push
int
xchg
cmp
pop
loop
sbbl
sub
aad
add
sbb
pop
bsr
popf
dec
in
mov
xor
gs
call
or
popa
in
mov
cmpsb
jg
cmpsb
jmp
fs
call
inc
in
lcall
mov
cmpsb
in
pop
insb
ss
insb
pushf
popa
sbb
jb
stos
mov
and
cmp
mov
faddl
xor
loopne
insl
xor
fs
adc
xchg
clc
movsb
cld
rcrl
repz
fnstsw
adc
pop
push
adc
dec
and
sbb
jl
xor
lea
mov
rcll
gs
xchg
pop
in
mov
scas
add
mov
push
lods
sbb
in
xchg
xor
nop
notl
cmp
pop
outsb
mov
fs
in
add
icebp
mov
mov
sub
aaa
and
dec
ljmp
sahf
mov
mov
dec
popa
insb
push
fstl
xor
mov
dec
jecxz
lods
inc
lcall
xor
sbb
addb
xchg
sbb
jmp
and
jg
leave
pushf
dec
dec
push
test
xchg
mov
add
repnz
pop
adc
outsl
insb
in
sahf
cmc
fcomi
push
adc
push
lret
insb
sbb
mov
jb
dec
cmpsb
in
lea
pushl
in
mov
icebp
imul
push
inc
push
and
cmp
hlt
fstpl
mov
xor
pop
stos
or
mov
mov
mov
cmp
xor
ret
cmp
int3
test
scas
int
add
arpl
add
push
xchg
scas
jp
cmpsb
mov
in
cmp
in
daa
stos
xchg
cmc
imul
jmp
shrb
test
jo
adc
lods
jmp
inc
insl
loopne
inc
out
add
movsl
cld
adcb
inc
mov
ljmp
outsb
ret
jl
push
pop
popa
cmp
mov
lods
jo
stos
pop
mov
icebp
pop
ret
jne
inc
pop
imul
dec
leave
xor
mov
jge
movsl
pop
cmp
inc
popa
jns
les
outsl
and
jnp
call
lods
cmpb
out
xor
mov
fldl
jae
fs
add
test
add
frstor
lods
cmp
adc
jl
insb
mov
jae
aad
add
sahf
stos
jnp
dec
mov
into
mov
aas
and
aas
push
movsl
sbb
xorl
add
das
jo
orb
out
xchg
popf
adc
add
and
in
push
idiv
ret
push
ret
repnz
popa
mov
xchg
outsl
and
into
or
call
out
int3
cli
leave
fistps
sub
divb
bound
dec
inc
addr16
mov
xor
cmp
jnp
jne
outsb
ss
movsb
dec
cmp
mov
pop
scas
sub
lods
xor
push
js
cli
iret
inc
pop
xchg
lcall
jg
shrl
push
test
adc
aas
inc
xchg
mov
jne
cmp
pop
and
call
inc
adc
pusha
lock
pop
cmp
cld
inc
dec
xor
xor
xorl
mov
insl
mov
es
jecxz
sub
hlt
xchg
mov
xchg
out
dec
out
sbb
test
adc
sbb
and
mov
xchg
inc
lock
fs
xchg
jg
test
and
xorb
into
fbld
mov
fs
sbb
jl
aaa
pop
add
in
sbbb
fcoml
arpl
stc
xor
stc
sahf
lahf
cmp
lods
xor
mov
and
adc
sub
cmpsl
fstps
out
mov
xchg
incb
mov
sbb
orl
leave
adc
adc
jne
sub
or
and
inc
xchg
pop
pop
push
dec
fwait
les
sub
jg
pop
lret
xchg
rcr
into
and
sahf
movl
mov
repz
cmpsb
xlat
mov
pushf
xchg
pop
test
jecxz
pop
sti
mov
lods
insl
add
inc
xchg
js
mov
adc
and
mov
fs
and
jmp
out
adc
shrl
cmc
outsb
popa
dec
pop
push
ret
ljmp
mov
lahf
mov
and
bound
sti
je
out
ret
or
jge
xchg
mov
and
mov
cltd
js
mov
clc
jbe
and
stc
hlt
stc
sahf
and
jecxz
mov
mov
cmp
mov
ret
xchg
mov
xlat
pusha
divb
scas
lock
mov
mov
add
adc
fimull
jne
bound
jae
mov
addb
testl
and
lods
ret
cmp
leave
sti
adc
mov
jnp
jmp
jmp
xchg
add
xor
xchg
lods
rorl
shll
jne
xor
and
mov
sub
popa
push
cltd
sub
lea
jo
mov
mov
repz
in
insb
out
xchg
or
mov
add
scas
adc
dec
insl
xrelease
leave
sbb
jmp
lods
aam
popa
sub
add
lods
xchg
int
pop
jae
adc
notl
cmp
xchg
cld
sahf
shlb
sub
notb
test
adc
or
jb
cmpl
faddl
pop
cltd
sub
sti
mov
pop
sub
mov
sbb
dec
gs
insb
ret
cmc
mov
loop
mov
hlt
mov
xlat
imul
adc
loopne
cmp
lea
in
js
cmc
cltd
subb
cmp
or
mov
aad
mov
repnz
lret
dec
je
lret
test
or
test
mov
scas
outsl
add
mov
test
sub
mov
enter
gs
ss
mov
or
data16
scas
fimull
mov
and
shrb
lahf
adcl
mov
test
jg
cmp
in
cs
xchg
aas
popf
sbb
stos
popf
lods
mov
inc
cmpsb
mov
dec
lret
mov
mov
lcall
enter
bound
data16
sub
fldcw
stos
pop
push
jo
ljmp
and
pop
outsb
cmp
rep
aas
push
fcomps
lods
jecxz,pn
mov
repnz
inc
mov
cmp
push
sub
pushf
outsl
fstps
jne
xor
add
ret
cmp
xchg
xor
ret
cld
mov
and
and
loope
stos
ret
outsl
mov
fsubrl
jle
pop
ds
stc
xchg
cld
xchg
xchg
icebp
xor
or
test
adc
inc
fiadds
addl
jae
mov
cmp
cmp
push
dec
xchg
sub
push
aaa
lds
jae
add
mov
pop
insl
test
stos
mov
lea
fsubs
add
loop
ja
mov
jnp
cmpsb
ret
mov
push
leave
test
xchg
mov
add
fsubl
mov
iret
sub
lock
dec
dec
mov
mov
sti
mov
add
rolb
push
test
mov
mov
and
cmp
test
stos
push
adc
push
push
sub
mov
enter
or
jl
push
xor
notb
cmp
or
mov
out
test
scas
mov
and
inc
and
cmp
test
sarb
imul
mov
or
pop
inc
push
mov
jne
gs
xchg
call
xor
cwtl
add
ret
cmp
mov
ss
jnp
xchg
icebp
mov
outsb
cmpsb
test
ret
in
and
sbb
xchg
push
repnz
or
jns
loop
clc
sar
push
test
mov
mov
outsb
pop
int3
pop
scas
ss
test
mov
mov
cmp
out
xchg
mov
xchg
ljmp
popf
mov
sub
int
push
jne
inc
test
adc
fwait
out
clc
push
in
shl
cmp
lret
xor
std
rcll
dec
fisttps
cli
jge
roll
out
jo
dec
fisttpll
mov
cmpsb
scas
or
mov
mov
sbb
mov
sbb
clc
add
and
gs
int
xor
jl
pusha
fldcw
add
cmc
push
and
pop
repnz
aad
jl
out
fs
shll
imul
or
dec
xchg
loopne
cltd
stos
pop
and
push
dec
sbb
test
jno
cli
dec
inc
pushf
unpckhps
push
ds
out
sbb
cmc
mov
stos
mov
or
push
inc
push
adcl
jbe
cld
sbb
cmc
aad
mov
mov
sbb
inc
mov
dec
adc
popa
mov
rorl
add
in
das
imul
add
test
pop
loopne
ss
in
dec
mov
mov
cmc
mov
xchg
inc
cmp
push
je
mov
out
mov
stc
jle
aad
xlat
movsl
push
dec
jo
and
int
lcall
fadds
je
arpl
rclb
dec
mov
jns
mov
push
ret
into
rcll
scas
push
out
popf
inc
je
shlb
cmp
fldl
dec
cwtl
adc
out
mov
addr16
sub
lret
gs
xlat
fildll
add
mov
or
mov
int
pop
push
test
ret
cmp
test
loopne
jb
jbe
ja
mov
inc
push
out
sti
jno
sarl
insb
out
add
cmp
ljmp
adc
mov
daa
dec
lods
or
adc
enter
gs
bound
mov
adc
sar
mov
test
std
pop
and
inc
mov
add
mov
sar
mov
and
add
imul
in
adc
inc
sub
popa
jecxz
inc
testb
mov
sbb
aas
inc
push
fs
out
das
mov
pop
cmp
xchg
mov
mov
pop
cmp
mov
add
xor
xor
stos
fmull
or
push
stc
xor
test
inc
and
lods
out
mov
inc
fs
jb
sti
pop
push
js
sbb
cltd
add
outsl
sbb
mov
pop
inc
enter
xchg
xchg
andl
cltd
push
lock
orl
or
add
mov
jb
and
cwtl
inc
std
pushw
idiv
push
shrl
pop
xor
push
sbb
movsl
ret
mov
adc
and
xchg
gs
sub
orb
popa
adc
es
mov
subb
scas
mov
pop
fidivrl
xchg
out
mov
pop
mov
inc
out
mov
push
adc
popa
icebp
xchg
ja
add
aaa
inc
jo
or
addr16
test
dec
int
test
lcall
into
push
jmp
pop
es
rcrl
dec
addr16
jb
xchg
pop
ja
shrb
jae
stc
outsl
dec
fldcw
mov
cmp
inc
cmp
mov
rorb
mov
dec
int
mov
xchg
cmpsb
test
outsl
lret
les
lret
pusha
pop
imul
loopne
mov
cmp
in
push
push
mov
fisttps
mov
xor
lock
xchg
sub
lock
mov
rclb
std
ja
or
jmp
sahf
mov
sbb
lock
mov
icebp
stc
jecxz
add
out
add
in
std
adc
addl
mov
addb
inc
ret
mov
push
pusha
into
sbb
dec
mov
xchg
daa
mov
and
loope
jno
mov
sub
push
cmp
cli
fdivrl
and
dec
xchg
insl
sbb
insl
push
mov
and
add
iret
subl
dec
lahf
xor
lret
popf
sbb
std
cmp
xor
icebp
testb
fnstenv
inc
cld
stc
stc
pmulhw
lods
pusha
dec
inc
in
cmp
pusha
mov
shlb
shl
inc
adc
dec
pop
lahf
and
xchg
rol
xor
lea
mov
mov
or
mov
adc
lret
push
sarl
repnz
mov
in
fcom
fstpl
xchg
pop
inc
pop
arpl
push
add
jecxz
xor
movaps
mov
leave
push
std
cli
lret
dec
xor
in
ljmp
sbb
xor
cmp
loope
fdivs
ja
out
cmp
fwait
adc
cmp
scas
pop
mov
sbb
cmc
xor
inc
xchg
sbb
gs
icebp
cmc
scas
sbb
adc
jo
pusha
push
repnz
mov
es
into
inc
shl
rcll
inc
mov
pop
mov
push
inc
mov
jae
insl
jg
aad
dec
in
in
int
sub
fldt
push
xchg
testb
ljmp
adc
iret
call
push
cmpsb
out
xor
int3
in
xchg
stos
jmp
or
push
int3
and
in
lods
jl
repz
jne
int
stos
mov
push
pop
hlt
pop
mov
cwtl
loop
xor
test
aas
mov
pop
jp
shll
mov
loop
mov
jnp
jl
mov
pop
sub
cmp
push
rclb
sti
loope
dec
ret
jmp
xorb
test
mov
sahf
push
into
mov
inc
mov
fisttpll
out
into
push
cmpsb
xor
mov
stos
decb
push
sub
je
xorb
push
lods
fadds
mov
add
cwtl
push
nop
mov
repz
fs
repz
hlt
push
nop
mov
insl
in
cmp
mov
push
push
push
aaa
aas
lret
lahf
test
mov
imul
lcall
inc
ror
fsubrs
adc
or
and
mov
popf
jmp
dec
xor
xor
jge
in
mov
in
push
popf
cld
mov
mov
inc
ss
rol
popf
mov
push
rorl
mov
es
outsb
cmc
lods
test
jmp
pop
mov
xorb
mov
add
dec
push
icebp
gs
int
pop
sbb
out
dec
fsubr
or
fistpl
les
cwtl
cld
shl
mov
dec
xor
or
movb
push
xchg
outsb
mov
rcl
ret
xlat
or
cmp
inc
add
jp
mov
movsl
push
xchg
xchg
adc
enter
sub
fmuls
pop
push
into
int3
ret
xor
xor
adc
mov
in
fdivr
jl
mov
out
lret
mov
push
mov
ljmp
lods
mov
xor
ljmp
adc
inc
andl
cmp
inc
cld
mov
cli
adc
loop
or
outsl
mov
outsb
and
jo
imulb
scas
out
inc
add
imul
mov
pop
mov
mov
stos
in
sub
mov
arpl
scas
mov
mov
jecxz
addb
out
cwtl
imul
js
arpl
add
cld
push
and
in
mov
adc
pop
mov
and
inc
mov
pop
incl
ss
arpl
imul
adcb
mov
ret
pushf
arpl
mov
and
aam
xchg
insl
pop
mov
sbb
fidivrl
lea
cld
push
inc
mov
insl
fs
out
jmp
jb
push
bound
xor
jae
dec
pop
xor
push
jecxz
sub
inc
icebp
clc
pop
and
test
or
out
scas
repnz
fdiv
insb
arpl
push
dec
mov
test
aaa
mov
jnp
jbe
popa
mov
mov
js
add
jg
addr16
adc
test
jle
int3
jae
fstpl
repz
mov
sbb
lcall
loope
add
jno
pop
mov
sbb
mov
movsl
xlat
mov
push
pushl
push
ret
out
ljmp
push
scas
call
rcrl
out
clc
je
mov
jae
xchg
stos
movsl
push
jp
jg
mov
hlt
cmp
fisttps
test
out
lods
lods
fwait
xor
pop
push
jmp
movsl
rolb
xor
cwtl
fsub
inc
or
push
insb
push
mov
mov
and
or
je
loop
or
cmp
daa
cmp
int
dec
push
sub
sub
ss
push
lods
mov
test
fsubs
in
xchg
pop
pop
jno
std
pushf
sti
mov
rcll
imul
mov
aaa
xchg
out
out
je
add
jle
cmc
test
pop
popf
mov
fldcw
cmp
push
shll
sbbb
pop
leave
out
push
stos
nop
orl
ja
fildl
sub
cltd
incl
adc
adcl
lret
mov
iret
and
adcl
dec
dec
xor
in
flds
jp
mov
push
iret
loope
int
xor
pop
xchg
jg
jmp
add
inc
push
jae
mov
fcom
daa
mov
mov
in
fisttpl
sbb
adc
mov
mov
nop
and
jbe
xor
sbb
push
jmp
int
sub
sbb
pop
or
sahf
push
inc
cmp
cmp
jg
sarb
pusha
leave
lahf
hlt
movsl
jp
inc
insb
xchg
jle
cmpsb
lret
jne
inc
or
mov
push
mov
aam
adc
add
fisubrl
jbe
aaa
mov
pop
dec
in
pushf
pop
sbb
inc
mov
add
daa
out
jmp
xchg
movsb
pusha
adc
mov
test
ja
test
push
loop
xchg
xchg
ret
lret
inc
sub
pop
push
dec
loop
test
sub
iret
fidivl
cwtl
xchg
adc
jo
testl
mov
rolb
push
ret
popa
jge
mov
lret
dec
ret
mov
or
xchg
push
or
mov
mov
seta
testl
mov
jb
and
push
push
insl
ror
xor
sbb
adc
sub
mov
aas
adc
xor
cld
or
mov
push
sarb
xor
clc
scas
pop
je
mov
loope
pop
mov
push
push
addr16
icebp
insl
fidivs
popf
popf
jno
fdiv
rol
push
pop
mov
pop
in
mov
push
inc
mov
xchg
pop
sub
push
mov
rorl
jge
in
aas
les
adc
scas
aas
jecxz
sahf
push
cld
mov
xchg
call
popl
mov
pop
xchg
xchg
fdivs
mov
outsb
movb
mov
cli
pushf
add
push
inc
loopne
xchg
cmc
sbb
or
push
outsl
addb
mov
push
pop
jmp
in
repz
push
aaa
adc
lods
leave
cmp
fists
fcmovb
sub
cs
jmp
maxps
mov
rcrb
imul
mov
xchg
push
sahf
mov
pop
movsb
fsubl
dec
inc
jnp
jns
pusha
jle
cmc
cs
or
dec
test
and
ret
mov
insb
jge
inc
mov
shlb
sbb
mov
and
in
out
test
mov
shll
fistpl
or
lret
cmp
push
out
popa
jle
mov
mov
lahf
xchg
fdiv
out
xchg
xor
mov
mul
mov
sbb
sub
dec
push
or
scas
sub
push
mov
inc
wrmsr
cli
fidivl
cltd
xchg
je
jecxz
adc
loope
in
std
jbe
jp
fldt
sub
cmp
or
cmc
ss
xchg
lret
orl
ret
scas
jbe
adc
jle
ljmp
test
and
out
ret
adc
test
jbe
movhlps
loop
aad
push
jbe
ret
mov
pop
cmovb
dec
gs
sbb
jge
push
cli
pushf
xchg
dec
cmpsl
add
mov
pop
jbe
orb
pop
subb
cmp
or
out
jne
inc
inc
fs
mov
push
xchg
dec
xchg
out
cmpsb
movsb
cmp
addl
adc
ss
stc
jmp
adc
sub
dec
lods
jbe
xchg
xchg
fisubs
adc
mov
mov
enter
je
push
pusha
insb
and
cs
mov
push
mov
cmc
jbe
mov
xorb
push
rcrl
jbe
aad
into
pop
xchg
hlt
lcall
dec
fildl
sbbb
enter
push
cld
push
jne
pop
jl
fstpl
fisubs
push
lods
jne
mov
jmp
and
jo
jp
jmp
hlt
ds
pop
push
mov
cmp
add
in
lds
dec
cli
push
mov
xchg
hlt
mov
out
cmp
dec
rorl
pusha
fsubs
mov
xchg
adc
mov
sub
cld
arpl
lret
call
xchg
mov
sub
jmp
ficomps
aaa
fdivs
iret
movsb
in
fcom
int3
shl
fldl
lret
nop
and
pop
fs
lods
pusha
sub
xchg
sub
aas
or
ja
push
test
sub
sbb
pop
mov
ss
ret
mov
aas
pop
test
sti
sub
jae
aaa
nop
popf
mov
insb
dec
and
notl
es
imul
enter
mov
daa
arpl
stos
outsl
cmp
mov
movsl
out
popf
sbb
xorl
cmp
jmp
xchg
xor
popa
pop
jg
push
adcb
jo
sbb
cmp
rorl
add
lods
insl
dec
cmpsl
or
add
stc
data16
adc
imul
mov
ret
add
cmp
jae
sub
cmp
push
pop
xchg
std
sbb
cld
and
xor
jns
es
mov
nop
pop
xor
scas
loop
xor
inc
lcall
test
xchg
addr16
cwtl
enter
enter
out
int
mov
incl
clc
jl
xchg
and
lods
addb
mov
mov
push
imul
int
inc
jb
stos
inc
sub
dec
ficomps
imul
cwtl
mov
pop
outsb
and
push
scas
mov
add
test
imul
pop
xchg
sub
scas
jb
jnp
arpl
push
inc
lea
lods
aam
xor
lds
mov
xchg
cmpsl
out
adc
jp
in
das
rorb
vandpd
gs
das
push
inc
xor
push
or
mov
or
stos
mov
aas
inc
mov
xor
sbb
jge
xchg
or
test
xchg
pop
iret
adc
mov
adc
adc
repnz
cmp
repnz
mov
loope
nop
lock
test
arpl
sub
pop
jmp
xlat
ret
cld
xor
or
push
dec
pop
je
data16
and
daa
movl
dec
inc
les
loope
mov
lds
cmp
cli
lret
rorb
xchg
mov
xchg
stos
roll
jno
cmp
sbb
cld
push
cltd
xchg
sbb
fmull
mov
sbb
jns
pusha
loope
pushf
addb
sbb
insb
lret
cwtl
andb
ljmp
add
dec
lds
mov
pop
pop
pop
fcoms
je,pn
or
fwait
jno
mov
add
ja
frstor
xchg
hlt
push
int3
repnz
inc
sbb
mov
mov
mov
cs
or
push
sbb
adc
loope
in
jb
jecxz
add
dec
data16
test
mov
bound
mov
mov
mov
adc
and
mov
aaa
fidivl
mov
jmp
mov
aaa
int3
mov
adc
sbb
scas
pop
lock
pop
daa
gs
xchg
or
and
je
cld
jno
inc
test
add
xor
push
mov
jns
lock
mov
inc
xlat
lods
adc
adc
sti
inc
cmc
mov
and
jbe
xor
mov
lcall
inc
mov
dec
lods
xchg
addr16
fists
insl
pushl
xorl
and
inc
cld
shlb
mov
cmpl
call
push
dec
pushf
adc
jp
mov
add
rorb
xrelease
mov
fdivrl
movsb
sbbw
jne
in
into
cmp
add
sub
jmp
jbe
scas
inc
fcmovu
mov
jl
sub
inc
rcrb
cwtl
cwtl
es
mov
pandn
sbb
sub
push
int
mov
pop
aam
jmp
popa
mov
repz
loop
push
lret
mov
mov
loop
cmp
sti
daa
clc
inc
in
fistps
mov
inc
divb
xchg
lods
fnstenv
lcall
aam
jb
mov
adc
push
jle
mov
and
push
in
jge
lock
jae
sbb
imulb
out
andl
push
mov
iret
cld
fimuls
icebp
mov
xor
and
xor
push
adc
psubsb
add
mov
mov
aam
lcall
xor
push
clc
filds
stos
movsb
cmpsb
je
lds
fldln2
aam
mov
mov
cld
jle
sbb
mov
imulb
push
push
test
stos
icebp
xchg
sbb
add
loopne
mov
inc
or
ljmp
fwait
insb
sbb
xchg
xor
andl
jno
pop
cmp
mov
adc
mov
xor
cs
mov
mov
xor
fidivs
mov
and
fildll
stc
add
icebp
mov
dec
inc
movsl
mov
and
push
xchg
js
sbb
sbb
loop
and
sbbl
roll
mov
mov
dec
dec
fnstcw
adc
ljmp
pop
dec
or
sub
jb
adc
aaa
ret
sarb
fwait
shll
lock
stc
add
mov
aaa
ds
inc
shlb
outsl
arpl
scas
mov
xchg
jle
clc
cmc
dec
pop
push
mov
inc
pop
xor
mov
xor
sub
ljmp
mov
aas
ja
xor
clc
cmp
lock
out
das
lret
mov
xchg
mov
push
jg
fnstenv
inc
add
jns
int
loop
loopne
add
movsl
add
out
outsb
movsl
cwtl
ljmp
jle
andl
lret
mov
dec
xchg
xchg
test
pusha
jg
rol
inc
clc
xrelease
and
shlb
xchg
in
mov
or
or
and
sahf
into
or
hlt
pop
enter
outsl
lcall
dec
ret
gs
ror
push
lea
sub
stc
and
loope
lcall
mov
xchg
push
jecxz
xchg
out
adc
cmp
repz
mov
mov
int3
push
and
int3
and
inc
sahf
imul
dec
fdivs
bound
out
js
cli
xchg
jae
add
out
xchg
mov
daa
pop
testb
sub
pop
inc
daa
test
xchg
mov
dec
mov
stos
sbb
pop
mov
aaa
xchg
stos
faddl
xor
lahf
dec
cmp
and
jnp
andps
test
imul
lods
xchg
mov
adc
mov
sbb
scas
add
arpl
icebp
cmp
test
rorb
iret
xchg
jns
outsb
subb
test
cltd
in
rolb
push
and
or
insb
repnz
adcl
jecxz
mov
push
fcmovbe
xchg
jp
cmc
ss
cmp
pop
movsb
fstpt
iret
add
icebp
pop
daa
nop
dec
and
movsl
outsl
inc
std
sub
mov
leave
inc
or
inc
pop
sub
jmp
outsl
test
inc
test
cmc
ljmp
paddd
scas
aaa
negl
les
aad
dec
outsl
testl
sbb
dec
sub
ffree
jno
dec
adc
shlb
pop
pop
rcl
push
frstor
cs
add
jle
stos
fs
arpl
out
cwtl
outsb
or
xor
in
mov
movsb
dec
fimuls
les
in
into
mov
stos
mov
push
test
outsb
repnz
add
xor
aaa
aad
mov
mov
aad
sub
or
dec
gs
jmp
dec
xchg
dec
dec
scas
aaa
cmp
stos
lock
enter
orl
mov
in
mov
mov
xchg
shlb
xchg
lock
in
pop
pusha
jg
cld
in
pop
push
mov
inc
nop
icebp
cmp
fnsave
fdivrs
lock
jae
mov
add
ljmp
cmp
xchg
testb
pop
push
push
imul
daa
dec
hlt
ja
xchg
mov
sbb
push
or
jle
std
push
xchg
xlat
adc
cmp
jns
mov
push
sub
pop
inc
sub
repnz
xchg
jnp
cltd
test
incl
jp
add
add
sbb
pushf
mov
jle
add
push
into
insl
movsb
das
cmp
cmp
and
enter
icebp
xor
jl
fldenv
cmp
inc
andl
popf
mov
add
mov
add
xchg
sarl
les
lock
pop
rcrb
and
ds
dec
in
inc
stos
int
and
jo
mov
mov
mov
pop
lret
ret
add
and
mov
iret
jp
mov
lahf
jl
bound
jmp
aaa
ljmp
sbb
iret
lods
xchg
cmp
lcall
out
pusha
lods
in
push
cld
shll
jnp
dec
mov
push
aas
jecxz
idivl
inc
stos
dec
aad
xchg
mov
sbb
adc
movsb
mov
pop
pushf
mov
push
popl
mov
push
mov
sub
jge
cmp
push
jnp
ficompl
push
paddusb
jecxz
sti
sub
adc
in
lods
insl
mov
jbe
sbb
out
inc
add
sub
in
into
adc
and
jp
cmp
push
pop
or
and
add
aad
fistpll
addr16
push
cmp
loope
test
xchg
push
ret
dec
xchg
sbb
add
es
or
icebp
inc
cmp
adc
ficomps
dec
xchg
jbe
outsl
mov
jge
lock
gs
ret
lcall
and
push
dec
push
xor
cli
xchg
mov
fcmovbe
jne
pop
pop
sbb
cld
adc
pop
cmp
mov
or
pushf
sub
cli
mov
inc
cmp
pop
sbb
cmp
xchg
mov
lret
xor
jle
je
xor
mov
mov
ret
mov
mov
stos
out
mov
cmp
xchg
andl
aas
test
mov
fs
xorb
mov
xchg
inc
jp
xor
rcrl
les
add
push
and
add
and
daa
cwtl
leave
mov
pop
xchg
enter
add
sahf
sbbb
nop
fxch
test
dec
jbe
push
or
jl
scas
aad
lock
loope
cmpsb
test
pop
and
cmp
or
ljmp
mov
int3
das
lods
xchg
inc
icebp
sbb
adc
sarb
mov
lret
push
sub
pusha
repz
jmp
fcmovne
in
adc
data16
jmp
mov
loope
inc
repz
xchg
lret
adc
pop
jecxz
loope
arpl
rcrl
outsb
repz
cmp
lret
pop
dec
mov
arpl
push
jb
ds
lret
dec
fwait
je
pushl
adc
jne
sbbb
popf
mov
add
out
lret
mov
jp
xchg
push
mov
fdivrl
out
sbb
or
or
popf
mov
lea
mov
inc
mov
xlat
and
and
sub
xchg
dec
push
inc
data16
mov
insl
jb
out
xor
sbb
shlb
das
scas
imul
in
cli
test
loop
daa
aaa
ljmp
mov
bound
mov
xchg
mov
fisubs
mov
add
sbb
or
clc
fmull
cmp
sbb
push
fs
outsl
sbb
repz
lret
ret
lds
xor
in
push
push
push
scas
mov
imul
fstp
clc
fistl
imul
je
jp
in
out
or
mov
mov
stos
jns
clc
stos
add
mov
cmpl
aas
insl
fstpt
xchg
notl
add
sub
jo
out
xchg
insb
inc
popa
subb
icebp
lock
test
mov
pusha
mov
and
inc
mov
mov
mov
daa
push
hlt
aas
faddp
mov
sub
das
lock
lock
lahf
jmp
jl
movsl
jge
dec
cli
jp
insl
xchg
pop
xchg
mov
int
dec
fcoms
and
pop
jno
fwait
mov
imul
jle
fidivrl
adc
xchg
jmp
mov
lahf
jo
rep
test
fistl
jge
std
inc
push
cmp
xlat
dec
add
arpl
dec
lds
pop
std
sbb
loop
in
mov
sub
push
add
nop
and
sbb
xchg
dec
outsl
mov
mov
jns
das
push
and
sbb
dec
push
lahf
xor
cmp
pop
test
data16
push
push
push
mov
mov
mov
out
jo
xor
push
jg
or
loopne
push
out
mov
pusha
shll
test
cwtl
sub
test
stc
loop
xchg
cmpsb
pop
fdivrs
cmpsb
cmp
cli
jbe
insb
mov
pop
out
pop
or
mov
cld
clc
in
enter
inc
xchg
fwait
cld
xchg
sbb
cltd
rcrl
lret
imul
xchg
popa
dec
xchg
or
loope
pushf
mov
mov
lcall
jp
repnz
cmp
hlt
or
imul
adc
cmp
xchg
mov
xchg
cld
push
mov
sbb
movsb
std
out
mov
mov
stos
clc
call
pop
or
inc
xlat
insl
mov
fs
xchg
mov
decb
jmp
mov
cmp
in
ffree
mov
mov
push
enter
rclb
push
leave
jmp
ror
add
mov
push
dec
into
into
sub
push
out
add
xor
sub
cltd
xchg
dec
imul
mov
ss
jmp
je
out
fadd
fs
jl
and
adc
sub
jecxz
push
jnp
loopne
push
daa
adc
jbe
jp
fsts
xchg
insb
jmp
lcall
je
mov
mov
int
mov
outsl
inc
lret
adc
or
mov
dec
mov
out
inc
fisttpll
dec
jge
jge
cmp
popa
mul
fcomps
lret
jecxz
adc
cmc
movsl
aam
stc
data16
fisubrl
mov
scas
je
lds
icebp
xor
add
mov
xchg
jl
jnp
rorl
adc
lret
mov
cmp
mov
not
jp
out
sbb
mov
dec
clc
ss
jnp
stos
fbld
nop
dec
or
add
out
inc
push
pushf
outsb
pop
outsb
mov
xor
out
fcoml
dec
xchg
and
xor
es
lea
pusha
jp
pop
or
adc
inc
int
test
out
aaa
adc
xchg
imul
sti
divl
pop
inc
outsb
lods
aas
scas
es
pop
xchg
jo
fwait
mov
movsb
mov
dec
lock
dec
xchg
test
jmp
dec
pop
cmpb
mov
jmp
movsb
sbb
orb
stos
stos
fs
pop
adc
push
test
jl
rorb
stc
test
nop
int3
int3
inc
add
adc
hlt
mov
jecxz
loop
and
push
jns
dec
imul
ror
ficompl
rcll
int
lods
in
scas
xchg
adc
in
imul
sub
mov
pop
pop
jg
push
add
shll
fisubrs
inc
push
sbb
repz
push
ds
pop
pop
aam
inc
sub
xchg
cmp
cmpsb
faddl
xchg
mov
xchg
fs
movsl
arpl
cs
out
jmp
outsl
sahf
fld
xor
sub
cmp
sub
mov
inc
xchg
sarb
int3
or
adc
repnz
jp
loop
xlat
add
les
stos
push
xchg
incl
icebp
jecxz
mov
sar
xorl
lods
xchg
mov
ljmp
out
mov
or
inc
push
mov
imul
sti
fldl
xchg
mov
adc
sub
int3
fisubs
push
xor
out
push
shlb
or
push
in
mov
mov
cmp
cs
mov
push
test
and
and
jge
pushf
mov
sti
insb
push
mov
stos
loope
enter
pop
and
ds
repnz
jb
lods
xchg
test
xor
test
movsl
sbb
jmp
pop
cmp
shrb
mov
jbe
add
inc
push
sbb
or
push
cmp
out
insl
jp
push
jne
add
int3
jp
jbe
pop
scas
incl
bound
xchg
repnz
mov
aad
mov
shll
push
enter
adc
scas
lods
mov
mul
rcll
je
pop
jp
in
pusha
in
mov
lcall
jnp
add
cmpsl
clc
lret
jecxz
push
mov
jo
lea
dec
cmp
inc
ljmp
jbe
sbb
mov
xor
fnsave
es
dec
jae
fistps
sub
sti
sarb
test
cmp
dec
push
mov
je
imul
jg
aad
bound
ss
jge
fwait
mov
cmpsl
push
push
mov
sub
pop
jae
cs
sbb
lea
sbb
mov
shlb
inc
pop
add
enter
xchg
lds
arpl
mov
icebp
xor
mov
jge
jg
nop
arpl
push
push
fidivrl
fs
inc
pop
sbb
aam
into
sub
rorl
cltd
or
inc
dec
xor
cmpsl
cmc
xchg
cmpsb
loope
arpl
add
shll
jnp
mov
fidivrs
mov
stos
sti
xor
gs
ret
js
add
mov
adc
outsl
jo
sahf
stc
in
rolb
xor
pop
loopne
mov
push
loop
pushf
fidivrl
jno
cmpsb
fyl2xp1
or
adc
icebp
cmp
sbb
pop
add
or
hlt
xor
nop
inc
jns
cmp
jae
xchg
lret
jle
xlat
pop
dec
adc
aam
daa
mov
aas
sbb
mov
xchg
and
cmp
dec
adc
loope
xchg
jae
lods
fs
out
sbb
test
cld
ret
std
sub
xor
fildl
pop
subb
int
push
mov
decl
sbb
mov
fwait
outsl
das
xor
inc
psrlw
push
adc
shll
pop
enter
push
mov
adc
call
or
xchg
add
fiadds
mov
xorl
jp
xchg
mov
leave
or
outsl
pop
push
das
notl
lods
and
or
cmp
cli
lahf
cmpsl
or
std
in
es
inc
fwait
and
insl
xchg
mov
lret
mov
jns
cmp
data16
lods
cmp
fwait
adc
mov
and
mov
push
sti
dec
dec
std
xlat
rcrl
loopne
fwait
imul
clc
pop
les
ffree
add
leave
pop
inc
dec
and
subl
dec
add
arpl
dec
mov
popf
mov
mov
mov
xor
mov
leave
fistl
nop
cld
iret
jle
push
and
lret
pop
sub
fistpll
xor
pop
test
jno
sub
inc
call
imul
pusha
shrb
sub
inc
leave
dec
mov
je
adc
push
out
int
xor
and
push
sub
lods
int3
mov
outsl
xorl
lods
idiv
stos
pushf
adc
mov
movsb
sbb
mov
cld
out
sub
mov
jl
aam
test
xchg
jg
test
mov
jecxz
xchg
cwtl
cmp
scas
xor
jae
orb
insl
iret
pop
pop
daa
sbb
mov
pushf
das
call
in
sarl
mov
pop
data16
mov
ret
add
jmp
int3
imul
dec
out
and
adc
inc
push
ret
leave
dec
mov
adc
icebp
xor
test
movq
lret
jmp
push
cmpsl
mov
mov
stos
mov
loopne
fimull
jg
lcall
aaa
int
data16
xchg
and
shrl
mov
jg
cmp
and
mov
lret
cli
mov
rcl
lock
push
lods
aaa
and
pop
aam
cmpsb
inc
scas
or
adc
jb
dec
call
insl
adcb
dec
mov
cmp
sub
pusha
dec
or
jg
aaa
add
xor
push
sbb
out
call
xchg
in
inc
jp
pop
pushf
inc
xor
jp
mov
mov
les
cmp
call
out
in
jno
mov
daa
wbinvd
cmpsl
jge
add
dec
push
fiadds
mov
cmp
push
arpl
insb
ret
xchg
push
or
sahf
in
dec
insb
pop
pop
pop
pop
outsb
cmovg
push
cmp
mov
das
mov
xor
adc
sbb
addr16
gs
inc
push
adc
leave
jmp
test
sub
pop
or
out
es
in
les
cwtl
lret
and
sub
cwtl
addr16
out
pop
sarl
clc
inc
adc
inc
lock
pop
repnz
sub
shl
std
or
mov
into
mov
fwait
add
popa
lret
pop
stos
cmp
mov
xor
xor
adc
je
sub
xchg
in
jmp
jo
mov
in
bound
xlat
scas
das
cs
loop
mov
sbb
pop
pop
orl
adc
dec
movsb
icebp
mov
jne
xor
ljmp
test
jge
mov
push
daa
int3
pop
mov
jo
mov
adc
push
xor
adc
mov
sub
in
lcall
pop
jmp
xchg
dec
lods
add
mov
or
add
incb
lret
setg
add
out
adc
jno
mov
ljmp
dec
jge
les
xchg
out
mov
dec
sub
mov
imul
add
dec
sub
stc
mov
adc
jl
dec
insl
addr16
mov
cmp
fisubl
push
aam
aas
sbb
inc
jo
push
sahf
sbb
pop
enter
daa
or
sti
push
xchg
fstps
sbb
jge
repnz
sbb
xchg
pop
imul
arpl
ja
in
pop
pop
jecxz
mov
lods
mov
lods
cld
dec
bound
lcall
test
add
mov
jne
movsb
add
and
and
fbstp
lret
dec
sub
and
packssdw
pop
cld
push
xchg
jmp
pop
dec
mov
pop
adc
jg
cmp
jmp
pop
ficompl
movsb
lret
in
aam
popa
ficoml
ficoml
cmp
adc
je
std
cmp
repz
dec
and
cmp
je
jl
lcall
mov
movsl
jbe
jle
sub
out
xor
int
outsl
mov
jecxz
dec
cmp
or
push
cmpsl
add
sub
imul
mov
add
adc
mov
repnz
jne
push
or
mov
cwtl
mov
fnstsw
dec
xchg
fcoms
outsb
push
pop
fsubl
cmp
xchg
add
out
sahf
in
mov
dec
mov
jmp
lahf
ret
adc
out
push
and
fstpl
popf
jbe
pop
xor
idivl
out
pop
fsubl
mov
xchg
jb
ja
sbb
dec
sub
inc
lock
mov
mov
mov
aaa
repz
arpl
jge
mov
bound
jns
and
imulb
xor
mov
adc
mov
ret
idivl
mov
sub
out
dec
dec
and
int
jmp
pop
or
leave
sub
mov
in
add
or
add
and
or
mov
outsb
mov
out
lds
loope
into
dec
in
notl
mov
jbe
lods
mov
fdivrs
repz
xlat
insb
dec
xchg
ljmp
push
pop
inc
arpl
pop
test
repnz
daa
xchg
pop
aam
push
cmpsl
push
or
js
test
loopne
pop
xchg
push
insb
mov
adc
dec
ljmp
dec
outsb
ret
add
inc
mov
iret
jb
aam
and
test
mov
mov
mov
dec
mov
hlt
imul
add
adc
mov
negb
aaa
test
pop
pushf
mov
into
or
mov
xchg
incb
in
shll
sub
imul
gs
adc
ja
nop
mov
and
stc
dec
ficompl
ficomps
dec
push
outsl
leave
cmp
icebp
loopne
jnp
dec
xor
ret
movsl
icebp
lcall
fisubs
loop
sbb
jne
sbb
xchg
xor
or
xorb
xchg
cmp
rcll
sarb
movsb
mov
sub
mov
pop
lds
xchg
adc
jmp
shrl
xchg
and
popf
psraw
scas
cli
xor
out
fnsave
mov
inc
jne
nop
jbe
int3
fdivrs
bound
das
fstp
je
ljmp
faddl
xchg
push
adc
mov
add
add
clc
lret
loopne
hlt
pop
push
adc
add
repnz
xor
cmpsl
inc
pushf
cmpsl
repz
mov
add
mov
mov
pop
jo
mov
movsl
add
mov
lret
pusha
add
pop
test
mov
pop
and
sub
push
loop
inc
sub
fidivl
xchg
and
lods
xor
cmp
push
mov
ja
inc
out
fs
mov
lock
mov
lret
test
adc
int3
movsb
add
mov
cmpsl
and
js
fdiv
cmpsl
pop
sahf
jo,pn
mov
pop
add
push
insb
and
pop
outsb
das
je
jnp
cmpsb
mov
icebp
push
sub
pop
insb
cmpsl
pop
mov
inc
leave
lcall
aaa
stc
ljmp
shlb
sbb
inc
mov
cmp
lcall
fsubrs
xchg
and
adc
add
mov
or
mov
in
stos
fldcw
xor
push
mov
popf
dec
das
mov
stos
pop
or
stc
idiv
ljmp
and
push
into
out
out
and
mov
pop
cmpsl
mov
adc
ja
insb
sub
xchg
inc
fsubl
divl
mov
xchg
sbb
decb
mov
jb
mov
call
and
jo
mov
push
xchg
mov
jecxz
es
and
lds
out
shlb
mov
jne
out
push
and
insb
mov
sbb
xor
in
mov
pusha
roll
xchg
test
jno
xor
xchg
movsl
scas
in
push
sbb
repnz
adc
shrb
jae
notb
push
xor
and
mov
cmp
cmpsl
repnz
lret
ss
push
jmp
mov
sbb
jmp
lahf
mov
inc
fmul
cmp
mov
inc
cmp
into
subb
jo
loop
cmpsl
mov
aaa
and
addr16
cs
adcl
mov
stos
mov
lret
das
lea
dec
lcall
fsubs
sbb
outsl
data16
pop
subl
inc
jo
pusha
jmp
mov
lgs
addr16
cmc
mov
int
add
jge
inc
cmp
ret
test
push
ror
gs
les
sub
stc
pop
pop
xchg
sbb
xchg
mov
leave
mov
inc
ret
sahf
pop
mov
pop
adc
jg
or
fcompl
and
loop
mov
lret
mov
movsl
in
add
sub
pop
and
jnp
jns
mov
adc
and
icebp
xchg
movsb
mov
sub
or
testb
mov
out
loope
mov
mov
xor
test
xor
ret
jns
cmc
jg
mov
mov
fstpl
or
fsubp
int3
stc
jge
lods
ret
inc
cmp
mov
dec
push
repz
adc
and
xchg
test
mov
popa
testb
iret
push
orl
into
sub
sbb
cmp
hlt
jle
sub
cmc
xchg
lds
pop
insl
sbb
sti
mov
mov
stos
fstl
sbb
inc
rclb
sbb
mov
sub
in
xchg
adc
push
aaa
push
mov
out
pop
jbe
test
mul
push
lret
add
jl
inc
mov
test
stos
ss
jecxz
jecxz
jne
pop
into
xchg
push
xchg
add
adc
mov
leave
xchg
mov
inc
pop
leave
adc
or
out
popa
shl
dec
mov
mov
xchg
imul
notb
mov
sub
data16
dec
push
mov
xchg
jge
cmpsl
pop
into
dec
jp
subl
data16
mov
ja
sti
add
std
pop
icebp
jmp
mov
movsl
lods
mov
push
and
mov
cmp
bound
clc
std
es
add
jnp
and
jp
sbb
mov
pop
inc
or
cmp
lcall
int
imul
pop
sbb
add
xchg
cld
mov
popa
test
imul
inc
clc
jno
pop
and
ret
and
jns
outsl
mov
sbb
scas
int3
pushf
movsb
mov
or
inc
cmp
inc
mov
jnp
gs
aas
pop
pop
add
sti
adc
mov
sub
mov
mov
jo
mov
jp
or
and
mov
das
stos
or
pop
xor
add
es
sar
mov
push
jmp
push
loope
jae
xchg
mov
or
add
jmp
test
push
inc
pop
test
jl
sub
fwait
mov
inc
lret
cmpb
lret
xor
jb
iret
sub
jmp
popa
repnz
adc
sub
cmpsb
leave
imul
pop
daa
dec
dec
and
pop
or
push
loop
inc
jl
mov
popl
mov
push
fwait
ss
inc
and
test
jno
scas
loop
dec
ficompl
shll
movsb
or
or
cmp
mov
test
scas
add
pop
movsl
inc
in
in
sbb
bnd
or
push
mov
add
outsb
stc
adc
lcall
xchg
es
ret
cmp
jle
movsb
roll
stos
mov
loope
push
xorl
adc
push
dec
mov
repnz
and
es
test
cs
ljmp
sub
mov
arpl
push
fxch
fmull
movsl
ret
bound
pinsrw
in
lret
popf
push
mov
mov
mov
jns
sahf
stos
xor
outsl
add
out
das
sub
inc
call
arpl
ficoml
sub
pop
xchg
mov
sub
aas
cli
pop
out
sbb
mov
outsl
fwait
cmp
mov
mov
aas
and
mov
jle
shll
sti
and
popl
dec
insl
cmp
cmp
or
mov
les
addr16
fst
roll
addb
cmp
pop
lret
lea
nop
out
sbbl
dec
add
addr16
stos
xor
adc
rolb
xor
ljmp
es
and
sti
fdivs
dec
or
hlt
stc
rol
add
add
pop
gs
pop
test
add
daa
and
popf
inc
aas
mov
les
test
xlat
mov
jne
push
stc
add
push
dec
ljmp
mov
jnp
int3
fnstenv
es
clc
bound
inc
add
sbb
and
imul
shlb
js
out
cmp
notl
pop
insb
sub
push
and
jp
negb
mov
addr16
ss
mov
xor
jbe
call
mov
lahf
mov
add
lea
jmp
mov
adcl
incb
sub
inc
sub
inc
pop
and
in
lock
xchg
or
shl
xor
cmpsl
cs
xor
push
popf
scas
icebp
lds
mov
ret
arpl
push
adc
out
jnp
or
push
idivl
mov
ljmp
scas
jo
arpl
adcl
mov
jnp
lds
jg
ret
imul
fsubrs
punpckhwd
pop
lret
ret
xor
movsb
aad
jb
movsb
sbb
xor
aaa
and
sbb
and
fcomip
dec
push
push
lret
dec
mov
scas
xchg
inc
push
mov
je
call
pop
jne
loopne
inc
addl
test
inc
dec
and
sbb
jae
dec
test
call
dec
imull
add
ljmp
shll
std
dec
inc
pop
outsl
scas
out
and
mov
adc
cmp
hlt
test
aad
dec
addl
mov
mov
xchg
int3
inc
sub
loop
mov
pop
in
es
pop
add
sub
js
push
xor
jbe
orb
inc
xchg
ja
add
mov
push
cmp
and
or
push
out
lock
pop
cwtl
out
lods
lea
in
cmp
mov
rol
clc
mov
cmpsb
cli
xchg
jge
mov
and
inc
mov
sub
insb
push
sbb
pop
pop
dec
sub
aas
aas
test
clc
push
in
sbb
push
jg
jne
or
sub
cmp
stos
mov
adc
movsb
test
jecxz
shlb
or
aad
xchg
mov
xor
xchg
xor
jne
inc
testb
jl
xchg
dec
fisubl
cmpsb
jns
out
jb
inc
rcrb
jmp
pop
cmpsl
push
or
mov
sbb
shlb
and
and
adc
and
scas
adc
dec
push
push
pop
or
xlat
nop
xchg
cmp
repz
push
pop
cwtl
jno
adcb
and
mov
stos
jae
inc
add
nop
in
jae,pn
ljmp
dec
stos
adc
clc
xor
cmpsb
rorl
aas
fwait
xlat
fisubs
lcall
imul
mov
cmpsb
cmp
jp
mov
jmp
cmp
test
or
jg
mov
push
add
movsl
jecxz
lods
test
test
or
push
push
and
sarb
icebp
mov
cltd
out
test
arpl
pusha
inc
pop
mov
imul
lods
cmpb
loop
lock
clc
dec
pop
into
pop
and
je
arpl
sbb
xor
mov
sub
xchg
mov
insl
js
mov
imulb
lret
popa
shr
in
bound
in
cmp
fwait
and
sbb
enter
stos
in
ss
mov
jb
sbb
xor
aaa
test
mov
and
ja
outsb
jg
pop
dec
pop
cs
and
imul
in
inc
mov
inc
mov
std
or
adc
push
dec
and
pop
add
repnz
rcrb
push
inc
rcrb
cmp
sbb
ds
jl
add
and
test
jmp
jecxz
out
es
push
adc
lret
dec
or
push
movsl
into
shr
lea
out
call
push
mov
arpl
jnp
sub
gs
pop
stc
mov
xor
test
es
test
int
and
xchg
sub
pop
cmp
in
lret
idivl
add
pop
cmp
push
mov
mov
nop
mov
imul
mov
or
xor
enter
xchg
xor
jmp
insl
pop
pop
jae
jecxz
imul
nop
jecxz
sub
lret
adc
cmp
jle
mov
push
inc
std
sahf
shlb
lret
data16
ss
push
lock
sub
fidivrs
pusha
rolb
cmp
fsubl
in
push
inc
add
and
xor
std
insb
and
pop
insb
xchg
inc
shrl
jl
je
lock
shlb
leave
xchg
inc
jae
dec
and
jmp
int3
daa
mov
leavew
repnz
mov
xchg
outsl
fwait
add
jne
push
adc
inc
xchg
and
adc
and
mov
dec
pop
dec
sbb
inc
in
push
sbbb
orb
popa
sub
test
out
les
mov
inc
cmp
adc
adc
shll
jne
xchg
jne
or
mov
movsl
cli
movsb
adc
das
mov
sbb
in
jl
ret
mull
mov
mov
mov
lret
jl
aaa
stos
inc
ror
jl
sub
out
pop
mov
nop
jb
andb
cmp
mov
pop
enter
add
dec
dec
test
out
pop
hlt
xchg
out
popf
iret
xchg
imul
adc
mov
pop
inc
lahf
adc
mov
test
popf
in
fwait
sbb
pop
jp
xchg
pop
add
out
sub
mov
lods
xor
stos
mov
imul
sub
xor
cld
inc
adc
mov
mov
loopne
in
and
orb
mov
icebp
aad
push
pop
pushl
popf
cmp
cmpsl
jg
push
mov
out
lock
popf
jne
xchg
dec
shll
ffree
roll
jne
dec
cmpsb
adc
xchg
dec
sub
or
mov
stc
idiv
fisttps
dec
mov
pushf
in
in
fsubs
mov
fwait
pop
repz
mov
adc
fisubrs
outsb
mov
pop
adc
jle
gs
xchg
sub
iret
xlat
mov
mov
enter
repz
data16
xor
adc
dec
fildl
mov
out
insl
lcall
lock
cltd
jo
mov
dec
push
mov
jl
dec
dec
data16
scas
movsl
push
push
xchg
xchg
pusha
sbb
adcl
sbb
adc
pop
adc
ds
jg
stos
fdivl
imul
xchg
pop
mov
push
jmp
mov
es
out
cmp
xor
mov
add
pop
jnp
jae
mov
imul
xor
cmp
mov
pop
shlb
ljmp
adc
adc
xchg
iret
fcomps
xchg
dec
sbb
int3
test
stos
xchg
test
call
aam
push
xchg
sbb
icebp
dec
sub
jl
lods
jb
adc
sbbl
pop
jbe
pop
mov
push
cmp
ljmp
mov
dec
stc
orb
in
out
adc
cmp
ret
or
orb
std
idiv
xor
adc
add
sbb
mov
add
and
gs
mov
mov
jno
cmp
mov
test
xchg
addl
adcb
lds
stos
pop
xchg
test
adc
imul
imul
and
or
mov
jmp
mov
jmp
push
mov
add
mov
int
repz
fwait
dec
ret
cmp
shlb
push
sbb
lret
mov
jbe
push
or
enter
fwait
adc
lds
sbb
pop
ss
inc
or
lods
call
movsl
dec
jecxz
cmpsb
jns,pt
inc
sbb
mov
aas
add
xchg
cmp
adc
mov
test
mov
jbe
incl
push
jns
cmpsl
stc
sub
add
shr
mov
sub
mov
loop
jae
fiadds
outsb
inc
loop
inc
rcrb
adc
lock
jb
insb
mov
or
gs
dec
leave
push
insl
mov
popa
jle
sub
cmp
xlat
mov
jg
test
test
pop
sub
inc
in
mov
add
notb
add
inc
push
jp
sbb
add
loopne
and
and
adcb
jg
popf
ljmp
ret
sub
sub
popl
in
push
icebp
inc
and
xchg
jg
insb
push
repz
xchg
in
mov
test
ffree
mov
add
fs
fmulp
add
cmp
insl
push
mov
mov
mov
cmpsl
clc
cld
nop
imul
cmp
pop
xor
lock
adc
and
dec
cmc
push
jne
mov
mov
js
adc
orl
int3
xchg
pop
jle
imul
xor
mov
nop
js
mov
clc
mov
clc
jp
lock
sub
fs
jno
movl
jecxz
sbb
adc
rcrl
imul
pop
mov
pop
cwtl
adc
adcl
mov
sti
lock
or
add
xchg
push
adc
adc
jae
cwtl
push
or
mov
mov
lds
xchg
hlt
jae
into
idivl
jb
shr
or
ljmp
loope
jns
leave
push
movsb
fs
xchg
mov
mov
lods
pushf
movsb
jle
hlt
lock
push
out
xchg
dec
jmp
iret
sbb
sbb
lods
mov
lret
sbb
jmp
std
std
cmp
pushl
repnz
push
push
in
rcll
imul
insl
jmp
jns
je
shll
sbb
sbb
mov
dec
mov
arpl
dec
adc
clc
out
out
mov
inc
adc
xchg
popf
inc
addr16
rolb
mov
xchg
cltd
add
outsb
stos
bound
dec
or
imul
push
push
pop
rcrb
cmp
dec
or
sarb
xchg
fsubs
hlt
mov
push
adc
jecxz
xchg
and
xchg
push
and
jle
mov
jne
dec
sbb
icebp
xor
pop
mov
dec
sbb
sbb
pushf
push
nop
ret
loopne
test
mov
pop
enter
jb
add
lret
pusha
xor
in
out
cmp
jl
mulb
cmpl
mov
push
jmp
test
adc
push
inc
pushf
stos
data16
adc
stc
mov
xchg
out
jg
ret
cmp
stos
out
icebp
xor
fsts
adc
rorl
inc
sub
and
ja
jne
aad
out
pop
pop
pop
clc
fdivrs
xor
cmp
in
or
push
movsb
out
icebp
add
xor
sub
in
pop
mov
repnz
push
jno
dec
enter
je
test
enter
aas
ljmp
add
pop
mov
neg
out
or
or
dec
ljmp
into
shlb
sbb
mov
xchg
sbb
es
or
mov
add
mov
push
and
push
fs
fmuls
sbb
lods
jb
test
add
add
jp
fnsave
gs
sbb
push
ljmp
jg
jnp
push
fcmovnu
push
mov
cltd
xchg
dec
and
push
js
push
loopne
fmulp
cmp
and
mov
jae
xor
jns
fstps
fldcw
std
mov
dec
out
xchg
xchg
cs
or
lahf
sub
push
sahf
jno
cmc
pop
int
stos
mov
fistpll
out
adc
push
fwait
jle
dec
and
jnp
test
push
fdivrl
push
inc
cmp
sbb
mov
sbb
jmp
in
rclb
jae
inc
dec
pop
cmp
lret
insb
mov
arpl
sbb
in
movsl
sbbl
idivb
pop
negl
out
aam
inc
mov
test
mov
and
in
jmp
xchg
aaa
inc
leave
jno
mov
arpl
sahf
adc
xor
call
into
push
popf
aam
mov
lret
movl
ret
cmpsl
mov
call
sarl
mov
pop
xor
and
or
testl
pop
gs
push
xchg
mov
icebp
call
out
mov
inc
mov
rcrb
ss
cmc
sub
jl
sbb
dec
jecxz
and
popf
lcall
adc
stos
icebp
add
shr
pop
xor
inc
inc
test
movsl
pusha
hlt
mov
lds
push
cltd
cmp
cmp
xor
repz
sbb
movsl
idivl
rcrb
jmp
or
xor
push
fcoml
daa
enter
lret
mov
and
push
sti
ret
adc
ljmp
in
into
xor
popf
push
rorl
cmpsb
fwait
ja
fiadds
inc
jmp
inc
adc
dec
sub
call
push
sub
or
xor
call
pop
sub
fidivrs
sub
inc
iret
dec
mov
fxch
imul
dec
dec
mov
ret
es
sti
mov
icebp
xchg
xor
xchg
ret
mov
call
and
inc
cli
fildll
mov
out
out
adc
push
lahf
mov
mov
mov
dec
sub
shl
fbld
dec
fiadds
xor
mov
xor
sub
lock
repz
loopne
ja
mov
outsb
sub
lret
cli
inc
adc
sar
sbb
rorb
push
mov
dec
test
aaa
or
repz
push
or
jge
or
in
fs
push
inc
mov
adc
mov
xor
push
call
daa
pop
fmul
aam
es
xor
pop
pop
xlat
and
fildl
ljmp
cmp
add
outsl
sbb
dec
inc
out
sub
sarb
lea
and
movswl
xchg
repnz
aaa
stos
ds
xchg
loope
or
ret
sub
adc
std
int3
lods
cli
outsb
pop
push
nop
imull
dec
pop
dec
ds
xor
adc
sub
cwtl
inc
adc
mov
call
push
jae
mov
push
or
or
adc
scas
or
add
dec
daa
or
cmp
lock
dec
movsl
popa
mov
rclb
insl
dec
xor
rcl
xor
xlat
pop
mov
sahf
inc
pop
in
aaa
js
push
mov
cs
and
jge
ret
cwtl
jle
xor
inc
inc
ficompl
cmp
jmp
jmp
jae
mov
ljmp
push
nop
sbb
inc
daa
cltd
jo
icebp
jle
sahf
sub
dec
jo
ljmp
cmp
mov
cmc
dec
data16
sarb
leave
jge
adc
mov
daa
sub
mov
xor
into
sbb
mov
movsl
jl
mov
xlat
push
pop
ss
xchg
jl
hlt
jmp
sub
pop
movsb
in
fisttpll
push
das
sbb
ret
lret
mov
ret
repnz
stos
fsubrl
sti
mov
ja
push
cltd
mov
lahf
mov
pop
test
mov
add
lock
out
subl
xchg
aas
xor
push
add
fldl
rolb
pop
gs
ss
popf
data16
shrb
shrb
popf
int
jge
sub
mov
pop
sub
scas
leave
rorb
push
das
aad
shl
and
pushf
cmpsb
arpl
mov
popf
push
push
mov
jae
cli
xor
xchg
xchg
data16
cmp
in
popa
dec
std
arpl
testb
aad
ljmp
cli
ret
cmp
cwtl
pop
adc
sub
hlt
out
push
mov
ret
dec
mov
push
or
out
mov
mov
or
mov
xchg
dec
rcll
dec
call
roll
and
sbb
mov
jge
jb
shlb
ljmp
mov
or
mov
ljmp
popf
push
mov
dec
fadd
lret
mov
jge
cltd
sbb
dec
or
sahf
stc
fildl
mov
xor
xor
push
jg
mov
inc
mov
ljmp
pop
ret
and
mov
cmpl
je
jp
dec
xchg
lret
js
stc
arpl
cld
adc
mov
movsb
test
inc
out
sahf
fs
out
pop
in
in
cmp
rcr
cmpsb
popa
cmp
in
int
in
faddp
fsubl
sbb
add
add
jecxz
cmpsb
push
cwtl
jne
adcb
or
fiaddl
lcall
gs
out
lods
push
sbb
mov
add
jecxz
test
xor
daa
push
mov
fisttps
push
cld
and
xchg
mov
aam
aaa
xor
mov
orl
cmpsl
mov
xorb
stos
cmpsl
or
iret
adc
add
fmuls
imul
push
inc
sbb
rcrl
call
push
bound
test
add
lcall
xor
enter
sub
xchg
or
in
daa
and
inc
in
xchg
out
pop
lods
ficompl
xchg
mov
push
rcr
push
jecxz
mov
mov
shl
sub
fs
cltd
adc
insl
out
out
add
lea
jnp
sbb
test
or
sbb
dec
das
pushf
cmp
clc
out
mov
loopne
jo
into
mov
jnp
mov
or
add
std
ss
mov
and
xorb
push
push
xor
or
dec
xchg
push
loopne
sub
pop
push
jbe
sahf
or
andl
push
daa
aas
frstor
jle
loop
clc
daa
adc
jmp
pop
or
outsb
sbb
das
mov
negl
test
xchg
sub
and
cmc
inc
mov
das
or
sti
stos
shll
mov
enter
pop
out
pop
pop
fldl2e
xchg
xchg
test
cmp
in
push
fisubs
jnp
mov
inc
xor
inc
mov
mov
jl
push
ljmp
sub
into
push
popf
xchg
loop
or
insl
or
ljmp
pusha
pop
roll
xchg
shll
int
adc
xchg
jecxz
int
in
mov
add
and
arpl
mov
or
pushf
inc
inc
outsl
addr16
int
xor
add
mov
pop
or
inc
sub
dec
xor
ficoms
sbb
mov
pop
mov
push
leave
negl
push
aaa
or
je
pop
std
out
ret
lock
movsb
loopne
xchg
test
outsl
int
add
jmp
jmp
fnstenv
cmp
cmc
mov
loopne
pop
and
adc
outsl
aam
or
movb
mov
outsb
cwtl
cmc
aaa
lods
rcl
dec
loop
mov
sbb
xor
rcll
andl
adc
pop
sub
sub
shlb
in
xchg
loope
adc
mov
pushf
stos
fdivrs
mov
xchg
and
insb
stc
loope
mov
inc
inc
pushf
shl
sbb
roll
sub
or
int3
jb
xchg
js
xchg
or
sub
cli
outsb
xchg
xchg
push
fstps
ja
sbb
mov
add
inc
cmp
repnz
pop
pop
push
push
insb
jne
mov
push
xor
das
outsb
mov
xchg
fnstenv
push
clc
das
stc
adc
jae
scas
jbe
xlat
cmp
or
out
out
push
or
rcl
lock
es
adc
ds
inc
and
stos
inc
je
dec
test
lahf
rorl
push
jae
push
lods
jmp
sbb
dec
jne
and
cwtl
pop
mov
into
xchg
inc
xor
xor
aaa
xor
mov
mov
gs
or
inc
mov
pop
ret
pop
ja
inc
sbb
jl
pop
lret
xchg
mov
iret
ljmp
loop
push
addr16
add
sub
xor
les
imul
sub
call
cmp
sub
or
jp
sahf
pop
dec
sub
or
pop
xor
xchg
imul
divl
pop
mov
iret
repz
sub
clc
popf
hlt
stos
mov
insl
mov
movsb
push
push
or
push
test
insl
shl
fdivr
adc
xchg
fwait
out
mov
cwtl
inc
mov
pop
xor
jne
shrb
inc
stos
lds
popf
mov
dec
mov
enter
push
data16
mov
pop
adc
insl
aas
std
lret
call
sbb
lcall
cmpsb
dec
pextrw
mov
hlt
shlb
sub
test
xchg
mov
ss
mov
test
xchg
imul
inc
adc
pop
in
imul
mov
sbbl
out
xchg
jo
outsb
addl
cmp
xlat
fstl
jg
xor
sub
pop
sbb
xchg
mov
into
pop
jmp
shrl
xchg
shlb
cli
shlb
jnp
inc
inc
xchg
aaa
sbb
xorb
lcall
pop
fstps
fbld
repz
dec
and
out
mov
ficomps
add
bound
push
fcomi
mov
inc
ljmp
cld
cs
inc
in
jl
dec
push
enter
mov
les
hlt
or
or
arpl
mov
ficoml
int3
mov
jne
pop
out
push
popa
in
jp
fldcw
adc
pushl
cmp
into
popa
daa
add
lods
lds
scas
pop
jae
rolb
loop
shrb
ss
fisttpll
mov
fwait
outsl
roll
mov
jae
ss
test
mov
push
adc
scas
int3
lahf
aaa
inc
jb
adc
lcall
xchg
andl
lea
xor
add
cmp
clc
jecxz
push
and
and
pop
lahf
sbb
insb
in
mov
pop
sub
adc
ja
daa
loopne
push
dec
pop
pushf
xlat
xchg
dec
mov
repz
divb
ljmp
sarb
aam
cmpsl
jno
inc
jge
scas
pop
das
sti
aad
fisttps
adc
pop
call
mov
cmp
mov
int3
cmp
scas
xor
dec
stc
cmp
mov
mov
aaa
dec
cmpsb
sub
cmpsl
cmc
inc
addr16
sub
mov
loop
cld
cmp
aaa
cli
cwtl
jmp
pop
xor
and
in
in
gs
fld
mov
ret
jb
fs
xchg
aaa
inc
bound
push
jnp
mov
repz
xor
in
or
cs
clc
jno
mov
notl
mov
or
fwait
iret
push
test
pop
test
out
adc
xlat
js
sbb
xchg
add
dec
js
adc
xchg
push
insb
dec
stos
in
inc
jge
jnp
adc
subl
aas
rcr
les
xchg
lcall
inc
or
out
push
loopne
sbb
dec
sub
lcall
clc
setnp
loope
hlt
imul
xchg
xchg
dec
jmp
push
inc
jl
jl
or
xorb
enter
mov
cwtl
adc
lods
imul
pop
lret
das
inc
xor
in
test
mov
fsubs
jecxz
adc
fwait
push
xor
das
jnp
adc
stc
bound
fnclex
out
stos
jne
stos
or
fisttpll
ret
cmp
xor
dec
stos
sahf
shrl
pop
daa
xchg
sbb
add
dec
ja
pminsw
outsl
lahf
movb
stc
xor
jmp
jno
xchg
jmp
push
fs
mov
dec
xchg
add
dec
pushf
dec
cbtw
int3
push
arpl
pop
add
xchg
inc
xchg
push
stos
xlat
stos
sub
add
push
testl
dec
lds
ficoms
sbb
aam
jbe
or
mov
push
flds
adc
xor
adc
ja
fcompl
ja
stc
pop
lds
mov
mov
rol
push
pop
nop
inc
cmp
clc
adc
lcall
xor
scas
dec
in
jno
push
push
js
jecxz
push
mov
sub
test
add
mov
inc
sbb
stos
pop
adc
jg
mov
stos
out
out
or
loope
fsubrl
inc
mov
shlb
shlb
mov
adc
mov
dec
pop
push
mov
push
sbb
push
dec
es
and
or
mov
lcall
pop
lcall
sbb
loope
lret
xor
mov
ss
enter
mov
push
or
fadds
sub
ret
int3
xor
or
adc
loop
outsl
je
sub
adc
or
outsl
xchg
xor
not
and
or
fisubrl
inc
insb
push
imul
jecxz
lock
mov
leave
orb
in
lret
push
popa
popf
jnp
popf
test
mov
insl
enter
jae
icebp
jg
mov
push
mov
mov
cs
dec
jbe
push
jbe
push
jl
add
sub
cwtl
addr16
jge
imul
push
rcll
or
pop
sbb
xor
push
and
rclb
aad
ss
push
clc
andl
mov
push
dec
xor
cmp
cmp
jmp
fisttpl
pop
xchg
sti
mov
test
inc
nop
dec
sub
inc
xchg
jne
jo
push
xor
popf
push
sbb
rolb
push
adc
xchg
pop
hlt
das
mov
add
stos
jle
shll
test
and
sub
or
loopne
data16
xchg
or
movsl
push
or
and
add
addr16
inc
fnstenv
pusha
call
or
jge
nop
mov
fcoms
pop
jmp
test
inc
dec
mov
lret
mov
outsl
mov
push
js
mulb
push
out
cmp
sub
push
pushf
pop
rorl
lods
cmp
mov
and
je
gs
mov
adc
and
jl
pop
fnstsw
lock
mov
pop
popa
js
xchg
or
clc
rorl
adc
les
popf
mov
pop
adc
jbe
mov
loope
add
mov
xchg
daa
arpl
js
dec
adc
pop
xchg
es
mov
add
test
repnz
aad
inc
js
lea
push
jl
ja
in
mov
ror
loop
adc
mov
sbb
or
jp
add
fiaddl
andl
es
out
js
test
sbb
pop
jp
imul
inc
or
cmp
mov
dec
push
je
jmp
xchg
pop
arpl
adc
lret
hlt
iret
mov
shl
xchg
sub
cmp
inc
add
add
jb
imul
cmc
pop
mov
xor
and
mov
leave
fdivl
lods
lea
push
shrl
in
dec
in
fldpi
iret
shr
sbbb
nop
out
lods
movsl
jne
or
sbb
xchg
les
adc
test
mov
push
xchg
dec
aam
lock
aas
mov
shl
add
aam
add
push
flds
clc
sub
cmp
enter
test
out
das
mov
orb
or
call
dec
jg
popa
mov
scas
mov
xor
fists
test
cmp
lea
loopne
in
cmpsl
bound
push
push
jle
jno
mov
ds
adc
cmp
or
imul
fmuls
test
jl
sub
inc
jae
mov
scas
fdivp
xchg
addr16
aaa
movsl
or
rol
shll
mov
aas
mov
mov
int3
mov
test
popf
xchg
adc
jne
dec
sub
pop
es
nop
sbb
xchg
pop
and
into
mov
cmp
sub
dec
enter
adc
or
add
push
jne
icebp
clc
mov
and
test
cld
fcmovne
popa
mov
pusha
addr16
dec
mov
inc
lods
lds
addr16
push
jae
or
xchg
mov
ds
fstpl
and
sbb
lret
inc
es
jns
sub
repz
xchg
sbb
scas
in
and
add
xchg
fidivrs
lods
hlt
ret
das
adc
jp
sub
out
fstl
in
sub
mov
iret
mov
data16
mov
sbb
int
push
cmp
shlb
fwait
or
xor
mov
enter
inc
in
mov
ja
push
sbb
pop
loop
jae
scas
mov
xor
pop
pop
jnp
xchg
rorb
ficoml
mov
push
mov
fwait
inc
jge
jno
call
sti
mov
ss
sbb
mov
pop
add
scas
pop
aad
cmpsb
lock
das
testb
xchg
dec
pop
pop
cli
pop
sub
std
sbb
push
mov
add
push
ret
sbb
mov
out
lds
xchg
jmp
fisttpll
mov
test
dec
xchg
js
cmp
inc
leave
call
xor
faddl
or
inc
popf
loopne
mov
or
cmp
out
and
add
pop
push
xchg
mov
cwtl
idivl
shrl
pop
arpl
add
inc
aad
dec
xor
incl
add
xchg
popa
inc
xor
mov
jo
fbld
sub
push
fadd
cmp
int
xor
xor
pushf
shlb
or
inc
xchg
jae
mov
mov
es
js
arpl
and
inc
cmpsb
scas
xchg
xchg
hlt
pop
test
sahf
test
js
fcmovb
dec
add
in
aas
dec
adc
sbb
pop
and
clc
lret
adc
or
pop
mov
scas
stos
hlt
inc
outsl
mov
ret
sub
daa
inc
or
inc
sub
mov
outsl
shlb
or
push
stos
aam
mov
leave
aad
dec
subl
xchg
fists
adc
jnp
pop
mov
jae
loope
stos
stos
xchg
cmp
lret
jl
div
mov
sub
out
dec
shr
mov
push
bound
jecxz
jge
push
in
outsl
push
xchg
insl
mov
pop
roll
out
hlt
mov
lods
sbb
sbb
scas
dec
shl
fdivrl
lock
mov
pop
cmp
push
stos
jbe
or
mov
subb
dec
adc
stos
mov
sub
mov
imul
mov
mov
xchg
inc
in
lds
mov
mov
daa
pop
ret
mov
cltd
mov
push
xor
lods
mov
push
cmc
pop
jp
mov
pop
repnz
cmp
mov
pop
and
dec
adcl
sub
adc
mov
divb
push
cmc
sbb
sub
add
rclb
loope
mov
ret
loop
iret
imul
cmc
cmpsb
dec
sub
sbb
ja
mov
out
sub
mov
jge
mov
jp
pop
adc
or
and
xchg
fdivr
out
rcrl
popa
inc
test
movsb
inc
fstpl
xor
sbb
xchg
mov
adc
es
sub
loope
cmp
sub
dec
scas
fnstcw
mov
or
sbbl
dec
inc
rcr
mov
daa
rorl
dec
gs
lea
xchg
and
out
fdivs
adc
push
dec
inc
inc
or
push
gs
jae
subb
mov
outsb
dec
jge
nop
xor
or
adc
sbb
movsb
fidivs
xlat
stos
pop
mov
sub
jno
and
pop
movsl
frstor
idivl
hlt
movsb
mov
sub
xchg
mov
popa
insb
das
sub
push
jns
shll
mov
adc
sti
sub
sub
mov
iret
loope
leave
rcrb
and
lods
lahf
sbb
xor
or
or
sub
jnp,pn
icebp
out
mov
aad
push
push
aad
ds
xchg
push
mov
fmul
repnz
cmp
loop
jmp
mov
sahf
loop
or
mov
lock
js
or
mov
add
adc
repz
jge
xchg
mov
cmp
mov
mov
jns
fadd
mov
jns
leave
push
sub
jecxz
add
repnz
cmp
pop
aaa
clc
lock
ljmp
xchg
iret
ja
shrb
mov
dec
cmp
imul
or
and
inc
pop
push
movb
lea
popf
and
lret
pop
and
fidivl
sahf
int
inc
pop
stc
mov
dec
sbb
xchg
punpckhwd
loop
push
sub
cltd
cmp
inc
ret
push
sarl
pop
pushf
sub
outsl
inc
in
and
jns
xchg
fwait
sub
lock
adc
and
sti
rol
add
jns
mov
sbb
stos
test
push
xchg
pushf
mov
mov
xchg
xor
loope
icebp
dec
je
ds
rorb
xchg
and
jns
mov
or
arpl
mov
adc
or
dec
inc
scas
cmpsl
push
pop
xchg
sub
pop
pop
sbb
cltd
push
loope
ljmp
fists
pop
sbb
add
in
xchg
aaa
test
fimull
cmc
sbb
loope
jecxz
cmp
push
push
lods
jns
cmp
cmc
lds
movsb
imul
xor
pop
loope
les
cmpsl
and
rclb
xchg
dec
test
adc
inc
aaa
xor
loope
test
cmp
fwait
push
repnz
push
jo
insl
es
dec
mov
sbb
enter
jge
xor
lock
cmp
add
loop
add
inc
and
xchg
dec
dec
movsl
mov
jbe
sub
pop
arpl
push
into
cwtl
dec
mov
jge
jbe
lret
in
ret
pop
xchg
scas
push
sbb
dec
testl
adc
lret
aad
aaa
mov
fdiv
and
stc
fistl
sub
arpl
push
sbb
imul
dec
movsb
shrl
hlt
adc
shlb
ret
movsl
inc
outsb
inc
icebp
ret
jbe
clc
push
lock
jb
fsubrs
pop
cwtl
dec
ret
addl
add
inc
sub
gs
mov
pop
xchg
shrl
pop
lahf
insb
aam
popa
cli
and
imul
xchg
dec
sub
push
cld
sub
je
outsb
xor
cmp
popl
push
mov
inc
inc
push
mov
push
and
ds
dec
mov
dec
push
xchg
and
scas
lahf
div
pop
mov
mov
popa
push
mov
imul
sub
push
mov
insb
adc
mov
xchg
bnd
or
lods
pop
fidivrl
sub
and
cmpl
mov
dec
push
mov
out
ror
sub
push
xchg
in
repz
xchg
jno
icebp
or
neg
arpl
jo
adc
out
enter
jno
sbb
loopew
addb
dec
fcoml
lds
jno
movsb
inc
mov
add
sub
mov
mov
nopl
or
pushf
ds
push
cmp
clc
popa
es
lret
shl
push
lods
or
lea
popa
cmpsb
pop
and
rcr
addr16
arpl
aas
mov
cmp
xor
xchg
test
shrb
stc
xor
sbb
out
popw
push
insl
mov
mov
xchg
call
outsw
cmp
sub
add
andb
arpl
repnz
loope
ret
repnz
mov
in
and
inc
inc
clc
in
add
xlat
mov
xor
adc
xchg
in
xorb
xor
js
push
and
mov
ret
cmp
cwtl
pop
iret
sbb
and
mov
dec
inc
push
cmp
xchg
aas
push
lcall
cmp
fisttps
xchg
push
loope
pop
data16
test
mov
inc
test
xchg
testb
rolb
andb
nop
pop
clc
ja
sbb
cld
push
clc
xchg
dec
jno
popa
psllw
fists
xchg
lods
stos
cli
das
insl
xor
imul
add
jne
lods
into
arpl
cmp
out
adc
loope
dec
jae
out
and
fldenv
dec
frstor
sub
pop
lret
sar
pop
dec
xchg
in
lods
in
cmp
iret
fs
aaa
push
fcmovu
stos
inc
repnz
fidivrl
adc
xchg
sub
sbb
dec
or
in
mov
mov
dec
dec
inc
and
popl
insb
inc
cs
int3
jl
mov
mov
movsl
aaa
pop
adc
or
int3
and
hlt
cmp
cltd
mov
or
jnp
add
cwtl
out
push
fnsave
das
push
test
inc
mov
or
les
xchg
push
pop
jbe
pop
into
jge
dec
mov
or
arpl
jno
add
ljmp
cmc
mov
dec
pop
cld
shrb
push
add
cmpsb
lcall
fisttpll
sbb
out
in
sub
in
and
call
popa
mov
fldt
pop
repz
in
insb
adc
imul
das
or
in
mov
cli
nop
inc
cltd
pop
iret
insb
ja
pop
fcompl
insl
inc
repz
cs
cs
fisttpl
ficomps
or
inc
push
leave
xchg
enter
lea
lods
hlt
xor
or
icebp
fists
xchg
popa
mov
pop
in
jb
fsts
fists
jb
je
add
imul
mov
inc
cmp
and
aam
aas
adc
es
in
hlt
lea
sbb
addr16
cmp
and
cwtl
addl
sbb
jg
mov
jle
test
stos
add
xor
mov
loopne
sarl
es
insb
aad
push
dec
jno
lods
popf
mov
fs
int3
cwtl
ds
or
jecxz
scas
xor
dec
dec
mov
fucomi
push
inc
fstpl
and
pop
push
imul
shlb
leave
xchg
and
addr16
mov
adc
inc
pushf
pop
mov
xor
pop
shll
and
loope
lock
dec
or
daa
lods
bound
push
or
movl
dec
xchg
inc
or
int
and
xchg
movsl
or
push
ds
popl
arpl
push
test
js
fldl
shl
insl
pop
ljmp
jb
cmpsb
das
xchg
or
jb
addr16
repz
shlb
mov
or
lcall
in
adc
iret
int3
and
test
rcrl
fcompl
int
mov
jbe
mov
nop
scas
test
jbe
gs
pusha
out
push
pop
data16
ss
jb
or
adc
add
xorb
popa
inc
repnz
dec
fimull
push
divb
push
sbb
mov
lahf
andl
pop
cltd
stos
xor
adc
cmpsb
or
lret
sbb
or
xchg
pop
add
mov
add
mov
hlt
push
aam
xchg
inc
mov
das
hlt
and
stc
jle
push
scas
hlt
xchg
mov
mov
mov
loopne
push
popa
aaa
idiv
lret
jmp
mov
out
or
addr16
jmp
add
pusha
sub
outsb
jmp
add
pop
das
cwtl
ljmp
or
add
sahf
pop
or
add
push
mov
and
daa
cmp
xor
fldcw
push
ror
dec
dec
aas
imul
pop
inc
mov
xchg
neg
cmp
lea
jecxz
sub
mov
push
or
add
xchg
and
push
pushf
rcr
stc
leave
pop
fisttps
mov
adc
and
mov
jno
mov
lock
jecxz
js
xlat
cmp
mov
std
pop
cmp
ja
inc
or
inc
inc
and
dec
outsl
out
sti
mov
lds
adc
rolb
jp
nop
sbb
cltd
mov
clc
cmp
inc
daa
mov
lret
add
test
mov
insl
in
xor
push
jle
insb
mov
mov
mov
aad
mov
js
lret
pop
test
shrb
mov
loop
mov
fcomps
adc
jne,pn
adc
jb
push
data16
jecxz
dec
stc
daa
out
mov
sub
fs
xchg
andl
jecxz
cmp
inc
mov
lahf
fildl
sbb
push
cmp
inc
arpl
fsincos
jp
pushf
and
iret
lret
stc
in
push
ds
add
scas
popf
adc
lods
xchg
icebp
pop
or
loope
pop
adc
mov
stos
push
pop
inc
fcomp
xorb
jae
daa
dec
sub
jg
roll
addr16
loop
push
mov
les
jns
insl
lock
sbbl
out
outsl
fistl
jae
sbb
hlt
lds
fadds
pusha
addr16
xchg
sahf
aaa
xor
gs
in
dec
rcrl
sub
addb
sub
mov
jle
jmp
call
push
inc
pop
insb
push
hlt
aaa
rorb
cmp
mov
stc
add
imul
mov
ja
lods
or
adc
and
xlat
fsubrs
sbb
rcl
in
push
out
cwtl
mov
imul
pushf
call
add
pop
test
leave
adc
jp
adcl
bound
pop
fstpl
icebp
fchs
jmp
inc
inc
sbb
push
faddp
cmp
cmp
push
popf
sbbl
cmp
mov
fdivp
dec
jnp
pop
cmpsb
leave
pop
sub
int
in
shll
in
out
push
adc
xchg
mov
push
outsl
cwtl
mov
sti
enter
addr16
add
pushf
cmp
push
sub
add
lret
sub
stc
lds
jle
dec
fwait
or
stos
into
sub
test
cmp
int3
dec
cmp
inc
lret
stc
push
jg
ret
pop
cmp
xchg
shrb
lret
cltd
fsubr
or
xor
mov
push
out
in
lcall
outsb
push
dec
xchg
adcl
cld
out
pop
xor
inc
mov
aam
out
xor
sub
xor
stc
sub
arpl
scas
adc
or
fbld
jne
lahf
adc
ret
jne
cmp
sub
or
es
xchg
sub
js
mov
rcll
rcll
test
adc
cwtl
cltd
loop
mov
adc
adc
ss
negl
js
inc
into
xchg
shll
mov
push
sbb
push
xor
jl
jmp
pop
mov
das
adc
aas
loopne
loopne
clc
int
ja
xchg
ficoms
subb
push
mov
push
es
lret
jne
fwait
leave
mov
inc
inc
xor
mov
jecxz
stos
outsl
imul
jnp
negb
inc
outsb
scas
fs
lock
mov
sbb
pop
pop
out
sbb
popf
push
sbb
sbbl
cmpsl
pop
gs
test
negb
xor
push
sti
push
rorl
sub
aaa
jp
mov
lock
push
scas
sub
inc
adc
test
cmp
dec
xchg
loope
pop
insl
cmovb
out
add
test
adc
dec
mov
mov
les
aad
mov
sbbl
mov
inc
imul
or
imul
ret
xchg
mov
adc
push
cmp
mov
jo
dec
pop
lock
insb
sbb
cmp
pusha
sarl
xor
cmc
cld
aas
ffree
sti
out
mov
xchg
loop
repnz
lods
sub
adc
int
sbb
sub
sub
mov
mov
gs
adc
add
xchg
push
pop
mov
ds
mov
mov
mov
sbb
insb
testl
in
pusha
outsb
insb
xchg
inc
mov
adc
rorb
sub
je
out
adc
and
push
rcr
repz
lret
mov
test
jecxz
xchg
out
int3
pushf
jp
pop
or
inc
repnz
cmpsb
inc
mov
inc
xchg
fbstp
xchg
cltd
je
mov
adc
push
xor
push
pop
std
pop
mov
daa
js
push
mov
aam
jbe
sub
or
jmp
pop
enter
cmpsb
cmc
imul
ret
dec
stos
mov
xchg
jno
push
inc
loope
in
sub
pop
xor
notb
cli
sub
lds
mov
leave
lods
dec
mov
insb
ret
aas
mov
and
mov
jb
pop
add
cltd
sub
sub
lods
adc
fisttpl
pop
xor
nop
push
push
jl
push
sub
lret
into
push
aaa
and
fnstsw
xchg
push
out
outsb
fstl
loope
inc
jg
imul
dec
or
js
push
jecxz
popa
dec
lea
jl
mov
mov
mov
pop
mov
pop
mov
ja
icebp
aam
pop
xchg
outsl
mov
int3
shlb
lods
nop
test
mov
icebp
stc
sub
popa
jmp
je
xchg
pop
ljmp
imul
sub
loope
pop
inc
gs
std
int3
aas
sub
dec
xor
loope
int
jle
ss
mov
in
test
adc
dec
outsl
sub
test
cmc
xor
mov
lods
addr16
xchg
psubusb
pop
pop
lods
and
jae
mulb
dec
ljmp
ja
dec
test
push
jno
mov
test
jg
add
rolb
mulb
rclb
dec
jne
fucompp
add
test
add
sub
mov
loopne
and
sbb
and
mov
pop
push
clc
pop
movsb
fdivs
cmp
leave
ss
lock
sub
fcomps
ja
jnp
loope
lock
sub
int3
jge
or
pop
or
dec
mov
jmp
test
js
cmp
scas
adc
imul
fwait
jnp
jo
adc
add
jge
mov
pop
jge
and
lods
jge
xor
data16
cli
adc
ret
into
cwtl
lret
test
pop
or
mov
enter
mov
test
sbb
enter
mov
ljmp
std
jecxz
mov
mov
mov
jmp
pushf
mov
or
push
outsl
xchg
xor
or
cld
nop
sti
in
neg
xchg
in
add
negb
add
or
dec
push
icebp
cmpb
stos
push
fwait
cmc
xchg
rclb
sub
lret
repz
jno
fs
out
addl
into
jge
movsl
jo
iret
cmp
xchg
jge
sub
and
popf
xchg
cld
pop
fwait
jb
fists
sub
inc
out
jecxz
xor
movsb
inc
and
into
mov
xchg
out
out
xor
in
in
cmpl
ss
lahf
jle
notl
clc
adc
mov
addb
jmp
push
arpl
out
sbb
cmc
ja
scas
icebp
shll
cld
loope
add
xchg
mov
shl
mov
sub
cmpsb
sub
xchg
or
stc
mov
xor
lret
loop
sub
xchg
xchg
push
add
xchg
jge
jge
and
mov
leave
push
jge
dec
push
iret
sti
je
xorb
xor
ficompl
scas
jmp
arpl
repz
lock
mov
mov
dec
imul
add
sbb
ds
in
movsl
push
test
bound
push
fadd
daa
std
outsl
sbb
lret
add
fidivrs
or
sbb
sbb
dec
inc
inc
aas
fisubrl
cmp
cmpsb
bnd
cmpsl
cld
pop
mov
add
add
jecxz
inc
mov
rcll
into
dec
dec
or
dec
push
mov
jnp
inc
in
mov
fwait
and
andl
fmuls
pop
mov
adc
aam
jmp
jne
cmp
das
mov
test
pusha
daa
ljmp
adc
jno
imul
mov
sbb
jle
xor
cmc
ds
inc
xor
xor
sti
out
inc
pop
fsubl
mov
lods
fs
sbb
xchg
out
ds
sbb
imul
xchg
sbb
movsb
fs
pop
push
scas
dec
mov
xorl
mov
xchg
inc
pop
inc
dec
lret
or
scas
xchg
mov
sti
jnp
shr
xchg
inc
lea
jae
ret
inc
lods
mov
jg
xchg
pop
xchg
push
insl
or
xor
xlat
pop
popf
cltd
jbe
rcl
sub
in
lahf
shll
adc
xor
fwait
push
das
imul
mov
push
call
sahf
sbb
jmp
hlt
mov
pusha
dec
mov
pop
add
add
sub
repz
cmp
adc
sahf
in
sbb
ss
pop
int
jmp
aad
lds
or
scas
sbb
jg
mov
inc
xor
gs
cmpb
arpl
xor
xlat
lock
xor
sbb
int3
adc
mov
dec
in
rorl
mov
or
xchg
sbb
add
add
dec
in
mov
mov
and
mov
js
sbb
mov
xchg
mov
mov
dec
dec
cmp
mov
sub
xorl
fistl
test
or
pop
sub
dec
imul
adc
xor
xor
or
add
gs
xchg
loopne
cs
lock
xor
fnstcw
mov
inc
adc
mov
push
andb
repz
lret
fisubl
or
bound
pop
imul
cli
ss
pushf
xor
jmp
inc
add
std
jne
cltd
cld
pop
jns
fimull
imul
xor
xlat
ret
daa
pop
xchg
mov
lahf
or
sbb
sbb
sbb
or
xor
lea
outsb
cwtl
jno
mov
push
xchg
aaa
cmp
sbb
mov
test
dec
or
push
pop
lahf
sbb
fistpl
cmpsl
sahf
jge
and
mov
mov
mov
sbb
in
test
lods
lods
test
popa
mov
ja
xchg
lods
sbbl
add
dec
aad
inc
mov
push
sbb
mov
jp
mov
es
xor
out
mov
repz
jmp
inc
arpl
and
push
sub
xor
stos
pop
ret
jbe
bound
adc
dec
loop
mov
jp
jae
sub
push
loop
rcl
push
adc
ljmp
sti
mov
mov
inc
lods
adc
cld
insl
scas
jb
shll
ja
sbb
cmpsb
repz
in
aam
rolb
movsb
daa
cmp
xchg
out
jmp
sbb
jne
dec
mov
imul
or
pusha
lods
repnz
jne
in
lahf
or
jle
adcl
ficoms
pop
pop
adcb
push
push
pop
cmpb
inc
or
mov
insb
adc
cmpsl
arpl
lahf
mov
sbb
jo
or
cmpsb
pushf
mov
push
in
push
ds
xor
add
cmp
stc
inc
ja
in
sub
adcb
jb
je
lcall
mov
sub
push
loop
and
or
jg
sbb
std
mov
jnp
and
aam
mov
lret
push
mov
push
fistpl
lds
mov
jne
fcmovb
dec
sub
fwait
dec
mov
xchg
inc
mov
call
inc
lret
jecxz
mov
jge
nop
pop
hlt
leave
hlt
pop
mov
or
icebp
loopne
adc
hlt
sub
notb
inc
cmp
ret
push
mov
gs
call
leave
push
xor
scas
out
fbld
std
out
or
repz
xchg
dec
loop
push
es
lods
outsb
int
or
jne
out
ret
insl
int3
aas
and
loope
mov
mov
test
cmp
es
or
or
mov
and
test
dec
mov
aam
sub
lock
shrb
jmp
dec
and
adc
imul
in
aad
stc
aaa
xor
or
rclb
xor
ss
addl
fstpl
ret
and
cmpsl
mov
sbb
push
pop
ja
adc
add
xchg
sub
jp
add
int
sbb
adc
xchg
clc
sub
lods
mov
xchg
sti
pop
sub
inc
sub
and
cmp
cmpsl
stos
filds
aaa
jne
stos
mov
insl
jmp
int
add
cli
cmpsl
repnz
sub
hlt
lods
inc
test
aaa
std
mov
dec
push
jp
stos
shrl
insl
jo
mov
add
movsb
test
mov
sub
cmp
int
vmovlps
mov
add
sbb
mov
xor
fcoml
sbb
scas
push
loop
push
iret
lret
mov
sbb
cli
into
shl
repnz
sub
je
jbe
imul
jle
dec
test
sbb
aam
aam
insb
adc
fs
sbb
dec
inc
popa
int
lea
mov
xchg
dec
lock
gs
push
es
cli
sub
test
cmp
out
mov
out
mov
mov
mov
dec
inc
pop
inc
dec
lahf
jo
sub
jae
das
push
inc
shl
and
mov
pushw
sub
outsb
inc
xchg
jg
inc
hlt
lcall
daa
adcb
les
xor
lds
loope
push
cmpsb
mov
xchg
jno
fnstsw
sub
dec
dec
inc
or
mov
push
mov
inc
mov
in
dec
test
pushf
xchg
add
pop
je
mov
mov
fcmovnbe
pop
mov
cmp
xchg
cmp
shlb
ja
popf
sbb
dec
dec
insl
push
sbb
mov
and
xor
inc
push
js
pushf
jns
mov
cs
lods
aad
pop
or
leave
inc
mov
add
mov
jne
pop
mov
add
dec
ss
add
inc
lea
cmp
mov
push
popa
ja
pop
cltd
sarb
int3
out
fdivl
push
out
add
sbb
mov
adc
adc
gs
std
cmpb
push
repz
add
mov
das
pushw
dec
out
push
push
xchg
inc
testl
inc
rcl
lds
ds
fldl
or
movsb
fwait
adc
add
rolb
mov
mov
push
insl
mov
cs
bound
mov
movsl
sub
xor
lcall
cmp
out
jo
inc
push
dec
stc
fadds
dec
xchg
aas
jns
jmp
and
adc
gs
pop
mov
icebp
stos
std
lods
jae
pop
inc
popf
push
push
and
mov
cld
out
fptan
shrb
into
inc
mov
popf
add
popa
pop
dec
cmpsl
jge
sub
andl
fdivp
jl
test
movsb
iret
cmpsb
std
pop
xchg
popf
pop
or
pop
or
jae
lahf
pop
cs
xchg
push
xchg
pop
insb
popf
out
shll
xchg
imul
lret
lcall
xchg
dec
sarb
and
shrl
in
mov
push
hlt
or
jecxz
jo
inc
ja
adc
xor
cs
icebp
push
pop
rcrb
test
push
int3
push
jno
insl
lock
dec
pop
xor
arpl
and
mov
test
lcall
outsl
and
popa
pop
sahf
mov
pop
sub
dec
xchg
pop
mov
out
pop
push
fs
in
xor
out
add
popa
lods
ror
push
jmp
xlat
popa
dec
mov
ret
push
loop
icebp
sub
pop
inc
je
in
mov
and
pop
xchg
push
pop
jp
test
movsl
idiv
xchg
jecxz
sub
jae
rolb
mov
sar
adc
mov
sub
jl
addr16
mov
adc
scas
movsb
or
dec
add
cwtl
stos
ja
add
shll
test
jle
xor
pop
mov
mov
sub
aad
adc
out
int
sbb
inc
arpl
sbb
sahf
fidivs
lcall
jle
aam
mov
mov
add
fdivrs
shl
sbb
xchg
jb
jb
mov
xor
fstpt
in
mov
add
es
pop
cmp
jl
lods
loopne
cmpl
or
add
jmp
negb
push
adc
and
xchg
mov
jge
notl
jecxz
out
pop
adcl
mov
enter
sub
mov
shlb
sbb
xchg
cmp
mov
push
repnz
andl
in
aaa
stc
loopne
dec
jo
outsb
daa
neg
mov
pop
aas
fwait
ds
add
inc
jns
rorl
mov
outsl
hlt
ret
sub
sbbb
jnp
fnclex
sub
pusha
scas
cmp
sbb
rorl
sub
std
and
xor
fstl
xchg
sub
inc
rolb
sbb
xor
loopne
lods
rorl
push
js
nop
cmp
fld
jge
mov
jg
inc
cld
mov
call
jno
daa
bound
je
addr16
cmp
stc
jmp
fwait
mov
adc
xor
sbb
jle
mov
ds
test
adc
fwait
mov
inc
rclb
and
stc
sbb
or
xor
xchg
jo
jmp
loopne
clc
mov
cmp
dec
sbb
jb
lods
push
aaa
aad
ja
es
filds
sbb
fxch
sahf
sub
pop
mov
les
mov
inc
iret
push
cmp
sub
sub
lret
jle
in
movl
mov
int3
push
adc
out
leave
xchg
fnstcw
fldcw
bound
loop
push
int3
divl
cmp
sbb
pop
movsb
sub
les
mov
ljmp
cwtl
pop
fucomip
into
ficomps
lcall
test
lahf
lock
xor
mov
add
xchg
dec
jne
mov
mov
iret
mov
std
insb
test
leave
adc
cmpsl
push
cmc
iret
cmp
ror
shrb
ds
push
ljmp
into
mov
adc
pop
add
out
bound
mov
sti
and
dec
lahf
xor
cmp
dec
mov
call
sub
push
orl
adc
mov
fnstenv
jmp
in
fwait
lds
cmp
cmp
ds
fwait
xor
fwait
mov
addr16
mov
cmp
mov
inc
imul
outsl
movsl
xchg
add
sbb
pop
aam
xor
cmpsb
es
insl
xor
fildll
and
lods
cli
stos
dec
iret
dec
loopnew
movsl
fsubl
stc
adc
aas
or
repz
in
fs
test
dec
test
mov
fisubrl
mov
pusha
sarb
mov
cmp
insb
mov
xchg
rorb
in
mov
testb
loop
scas
or
je
icebp
jle
push
dec
cmp
ds
out
jp
pop
mov
in
mov
cmpsb
mov
cmpsl
or
xor
lods
add
loopne
aad
outsb
jae
xor
add
pop
inc
pusha
sarl
mov
fisttpl
mov
iret
or
xor
push
test
outsl
packuswb
lods
es
scas
mov
mov
and
pusha
pop
pop
lds
and
movsl
dec
decb
sub
mov
xchg
or
fwait
imull
add
adc
fs
jecxz
loope
add
inc
pop
jmp
lds
pop
js
movsl
into
mov
outsb
xchg
mov
mov
fmuls
mov
imul
cmp
dec
jne
sbb
ret
xor
push
into
out
fwait
loope
ljmp
shrb
test
sbb
mov
xchg
pusha
test
test
ds
addl
mov
push
or
ret
push
out
jnp
xchg
lods
mov
ljmp
and
push
aas
ror
push
inc
iret
test
push
pushf
js
and
pop
xchg
clc
or
mov
cmpsl
fisttps
pop
aad
xchg
inc
loopne
test
sbb
repz
iret
addr16
leave
bound
pop
aas
popa
popw
sub
xor
sub
dec
shlb
ja
mov
adc
lahf
stc
fsubr
lods
cli
cltd
insl
das
sub
lcall
xor
jl
scas
cmc
sbb
xchg
mov
or
adc
pop
pop
out
mov
je
cmp
cli
icebp
sbb
mov
add
je
loopne
add
jp
in
in
fisubs
pop
adc
int3
add
test
mov
cmp
repnz
jb
sub
ljmp
dec
dec
loopne
push
inc
mov
or
fldpi
fadd
cmp
nop
inc
add
mov
es
and
aam
in
daa
and
fwait
lock
push
xlat
pop
incl
lods
jns
sbb
scas
fsts
aam
mov
xor
mov
hlt
xor
arpl
outsl
stos
jecxz
cmp
mov
adc
jmp
fmull
jno
pusha
aam
push
add
std
into
mov
jns
pushf
jns
repz
hlt
push
ss
adc
mov
jae
mov
mov
lcall
jo
aad
push
sub
rorl
sbb
outsb
mov
or
out
cld
xor
pop
stc
mov
jbe
xchg
add
leave
jo
repz
scas
loop
sbb
rclb
inc
shlb
push
fwait
out
and
ss
add
cmpsb
or
into
insl
repnz
mov
xor
lret
xor
push
mov
adcb
pop
stc
mov
fstps
arpl
xchg
xchg
push
sbb
dec
loop
dec
inc
test
jne
iret
push
addr16
push
in
sub
mov
xchg
test
sbb
or
inc
fdivrl
notb
pop
or
mov
cmp
movsb
int3
mov
repnz
cmpsb
push
imul
leave
cmp
xchg
lock
mov
xchg
aaa
inc
jg
repz
int3
loopne
push
xor
push
pop
sbb
sbb
aaa
hlt
push
daa
bound
shlb
mov
dec
ret
jle
mov
mov
gs
in
ja
scas
sub
push
xchg
cmc
loop
inc
ret
mov
sub
xchg
lods
jp
je
in
mov
popa
lods
sahf
cmpsb
dec
mov
fwait
lret
dec
leave
shlb
add
add
and
pop
sahf
push
nop
sub
mov
sbb
ror
outsb
inc
repnz
mov
daa
ja
out
cwtl
mov
ret
sbb
xor
scas
push
jb
and
sti
jno
lods
movsb
add
sub
cltd
movsb
je
add
fcmovnu
scas
mov
inc
mov
pop
test
fwait
xchg
sub
loop
les
jne
in
xchg
mov
and
lcall
or
ret
add
and
add
and
aaa
lods
iret
xor
xlat
add
mov
fldenv
and
mov
enter
ret
fmuls
and
dec
push
addb
add
mov
push
mov
jg
and
dec
dec
scas
sub
gs
mov
jns
arpl
gs
mov
pop
xchg
cmp
sub
jnp
inc
mov
adc
xchg
push
movsb
addr16
insb
shl
pop
jnp
in
sbb
lea
xchg
and
jmp
das
gs
mov
jno
in
pop
sbb
loope
or
addr16
jp
lea
cmp
insb
aam
push
sarb
out
scas
fisttpl
mov
sbb
inc
pop
cmp
fwait
std
mov
sbb
xor
xor
outsb
mov
push
sub
sar
adc
jecxz
cmc
jecxz
jp
xor
push
mov
inc
bound
cmp
push
xor
jmp
sbb
sub
jb
jns
mov
pop
shr
in
dec
xchg
and
enter
pop
add
rcll
out
rcl
cltd
mov
jmp
cmp
lahf
adc
aad
mov
in
sti
std
shll
push
and
fisttpl
mov
imul
pop
shll
xor
gs
mov
xchg
mov
push
leave
movsb
and
mov
xlat
out
scas
jbe
xor
lds
jl
fistps
cmp
xor
lahf
pop
sub
lods
rcll
push
pop
outsb
cli
jl
cmp
mov
cwtl
pop
imul
int3
dec
gs
sbb
or
xchg
pop
movl
cmpsl
and
pop
adc
loop
stc
sbb
mov
pop
push
das
popa
data16
aam
cltd
jne
sahf
iret
xchg
shr
dec
push
clc
push
dec
movsb
push
cmp
pusha
inc
andb
js
jl
mov
xchg
clc
shll
xor
jae
cs
or
add
pushf
out
stos
into
xchg
pop
pop
scas
jnp
iret
push
in
dec
or
push
fcoml
stos
add
repz
mov
mov
or
jmp
scas
imul
imul
bound
push
mov
daa
jl,pn
call
mov
inc
push
mov
leave
lods
pushf
push
mov
mov
mov
stos
xchg
and
stc
fidivl
inc
mov
add
movsb
ret
jle
pop
mov
mov
dec
or
or
or
push
jae
cmp
inc
fst
pop
add
cmp
dec
dec
push
stc
mov
jle
in
mov
push
add
xchg
xchg
cs
stos
mov
clc
fsubr
arpl
cmpsb
shrd
stos
fs
add
pop
repz
cwtl
sbb
push
mov
mov
insb
add
mov
or
jae
and
stos
cmp
imul
lods
cs
push
insb
sub
repz
pop
jo
xchg
pop
ret
out
out
ss
jo
subb
mov
pop
adc
cld
mov
int
stos
fnstcw
mov
xor
mov
hlt
inc
jbe
stc
pusha
stc
xorl
sbb
aas
or
mov
jmp
jmp
ret
fisubs
incb
jne
and
sub
les
ret
fcoms
aas
into
mov
stos
fsubrs
ret
mov
sar
lods
addr16
test
daa
and
mov
xchg
xchg
js
pop
inc
pop
sbb
mov
lahf
jno
xchg
push
lock
in
adc
pop
aad
ss
ds
mov
or
outsl
push
out
mov
insl
call
rorl
fistps
xor
sbb
arpl
jl
and
mov
sbb
ucomiss
shlw
les
leave
adc
mull
xchg
mov
add
orb
lret
mov
dec
jmp
ret
jb
sbb
js
mov
dec
mov
pop
adc
fistpll
jmp
aad
int3
cmp
addb
sub
cs
cmpsl
add
shlb
imul
sub
mov
jae
into
outsl
outsl
adc
aam
lods
mov
sub
cli
das
xor
push
into
lcall
mov
mov
lea
lea
sbb
mov
mov
pop
xchg
aad
xor
mov
add
cmp
in
adc
adc
lock
jnp
imul
mov
mov
into
add
cltd
cmp
sahf
adc
arpl
push
popf
mov
sub
jbe
push
jno
pop
dec
inc
cmp
addl
push
and
sbb
jne
es
mov
mov
int
sub
pushf
iret
jo
inc
outsl
push
andb
scas
orl
adc
jae
scas
jnp
out
push
xchg
push
les
fisubl
test
cmpsb
pop
fdivr
fistl
mov
mov
push
mov
push
nop
int
ret
xor
clc
and
cs
fadd
pushf
js
jo
lods
mov
jnp
sbb
sbb
fisttps
jbe
mov
shl
add
pop
inc
shrl
pop
lea
fs
cmpsb
mov
cmp
aad
cmp
test
mov
fst
cmp
pop
xchg
sub
adc
jle
cld
cmp
or
hlt
xchg
mov
or
int3
inc
clc
and
and
push
mov
jnp
sbb
add
lea
imul
out
aaa
sub
xor
out
pop
pop
mov
mov
dec
clc
lods
pop
jecxz
sti
sbb
sbb
jnp
and
out
sub
mov
dec
ds
fisubrl
pop
mov
ss
into
leave
lods
divb
mov
test
aam
daa
aaa
and
insb
xchg
mov
rorl
enter
sub
mov
pop
adc
shrb
ret
or
xorl
mov
icebp
lahf
xor
and
std
insb
mov
jecxz
hlt
cmpsb
pushf
sub
dec
pop
inc
pop
xor
repz
lcall
loopne
aaa
inc
inc
lods
scas
in
gs
movsb
inc
xor
pushf
dec
arpl
or
test
add
xor
and
inc
or
lret
in
popa
testl
inc
scas
mov
jnp
or
mov
and
sub
les
cmc
mov
and
int3
ds
cmpl
fcom
outsb
add
ret
lret
push
pop
iret
sarb
add
mov
das
mov
xor
rorl
flds
test
outsb
jb
adc
adc
sub
mov
sahf
push
pop
jb
gs
or
mov
movsl
mov
jae
into
loopne
addr16
nop
fsubp
mov
daa
mov
test
or
adc
adc
push
mov
xchg
pop
fadds
jns
fisttps
sbb
add
test
aaa
jb,pt
cltd
das
mov
push
cwtl
in
fs
lahf
lock
std
stos
cmp
or
adc
xor
jns
fcoms
cmc
xorb
pop
add
subl
or
mov
pop
mov
ja
xchg
insl
call
push
adc
jae
leave
bound
dec
xchg
fisttps
cli
mov
jnp
mov
sbb
xor
mov
ret
popf
xor
mov
in
sahf
adc
adc
push
movsb
popa
aad
pop
mov
stc
lret
sub
mov
xor
push
add
sahf
loop
sub
adc
in
mov
adc
scas
insb
mov
repnz
adc
mov
aaa
call
dec
loopne
jbe
mov
ja
mov
nop
or
mov
mov
xor
pop
shrw
jmp
mov
sti
out
cmp
daa
cltd
shrb
ja
and
clc
dec
sub
mov
push
add
popa
jo
mov
xor
lret
sub
xlat
cmp
inc
pop
cmp
pusha
mov
cltd
outsl
neg
cs
fsubr
pop
andl
rorl
lods
xchg
stos
insb
dec
test
roll
mov
jg
jmp
or
or
sti
shlb
das
inc
out
cmc
pcmpeqw
lcall
jge
mov
mov
fdivs
push
sub
sbb
and
xor
adc
bnd
jae
cmp
jecxz
test
mov
inc
xchg
jb
aaa
call
hlt
xchg
mov
je
loope
ret
shr
mov
insl
pop
in
in
and
imul
and
lcall
pmaxsw
cmp
xchg
shrl
dec
int3
add
fwait
or
mov
sbb
xchg
int
les
popa
outsb
lock
pushl
and
les
dec
or
pop
adcl
add
xchg
mov
add
cld
lahf
xchg
push
cmp
shlb
outsl
icebp
jae
cwtl
les
mov
dec
push
jmp
sbb
or
mulb
pushf
mov
fnstcw
scas
aad
es
xchg
mov
push
pop
clc
lock
cmp
pop
and
stc
fldcw
or
pop
jle
out
orl
sbb
jp
and
jns
or
push
aad
mov
mov
iret
pop
mov
sub
in
ss
ds
mov
mov
stos
mov
out
jg
cmp
adc
cwtl
cmp
mov
fs
gs
stc
sub
outsl
sarl
inc
or
mov
and
cmp
xor
ss
rclb
pop
sahf
jns
sbb
adc
or
cmp
rolb
test
jl
jmp
scas
or
mov
in
pop
pop
pusha
aad
test
mov
jae
sub
and
xchg
mov
xor
push
jmp
loope
inc
xor
xor
stc
int
pop
adc
leave
xor
stos
aad
rcrb
out
arpl
mov
push
sahf
push
js
pop
cmp
and
xor
jo
nop
jl
pusha
xor
and
sbb
add
fists
mov
push
xchg
xor
xlat
push
ljmp
dec
movsl
cld
sti
mov
les
sarb
cmpsl
dec
cmp
shrl
dec
mov
xchg
ret
movsl
lret
out
xchg
fiaddl
dec
jnp
daa
cmpsb
and
js
cmpsb
and
aas
xchg
imul
sub
ds
fistl
loope
push
cmp
test
dec
mov
cmp
cmp
sarl
insl
pop
in
cmp
xor
jo
jmp
push
std
ret
push
pop
data16
lahf
jne
daa
testl
xchg
mov
in
or
test
iret
imul
xlat
in
mov
insb
subb
mov
repnz
fadd
mov
or
xchg
adcb
lods
ja
ja
push
inc
sti
mov
into
hlt
pop
sub
jge
test
out
pop
rcl
dec
push
insl
pop
mull
push
add
bound
inc
divb
pop
xchg
jne
call
mov
push
hlt
scas
xlat
gs
cld
out
into
ja
cmp
shr
dec
out
data16
pop
xor
inc
iret
addb
mov
adc
iret
scas
jb
sbb
sarb
cmp
shll
sti
addr16
adc
aam
fisubrl
popa
push
inc
sbb
stc
inc
lret
test
scas
daa
leave
xchg
dec
faddp
jb
test
in
lahf
popa
xorl
xchg
mov
pushf
psadbw
jg
jbe
dec
or
push
mov
dec
cmp
dec
xor
adc
add
xor
pop
aaa
in
lds
sbb
test
cld
cltd
dec
pop
push
insb
push
push
xchg
popa
in
push
test
mov
cmp
leave
cltd
decl
lods
xchg
or
lods
mov
out
add
std
xor
cmpps
into
insb
inc
mov
mov
pop
aas
pop
jmp
mov
mov
imul
jbe
mov
add
gs
push
test
mov
arpl
and
mov
sbb
inc
cmpl
loopne
pop
mov
mov
pop
lahf
int3
mov
cld
adc
push
fnstsw
inc
lea
icebp
movsb
jbe
sub
sahf
xor
mov
push
ret
push
cli
mov
cmc
lret
jmp
imul
lcall
repz
sub
lret
incb
aad
pop
mov
push
mov
outsb
cmp
fildl
xchg
movsl
jp
jo
add
inc
push
ljmp
xor
jg
ss
lds
xor
push
pop
push
and
mov
addl
in
push
enter
out
ds
lahf
sarl
inc
cmp
mov
pop
jmp
insl
jge
je
xor
daa
in
pop
call
out
push
dec
jle
inc
jbe
xor
xchg
lods
push
jmp
mov
jmp
add
dec
pop
add
ljmp
push
ljmp
ja
aaa
xor
cs
movsb
or
xor
pop
mov
add
mov
cmp
outsl
sbb
loop
outsb
jg
lret
daa
pusha
aad
imul
mov
iret
dec
lds
aas
int3
movsb
insl
cmp
pop
jae
fadds
in
nop
and
and
shl
mov
test
pop
arpl
lret
adc
jmp
adc
daa
sbb
aaa
and
jl
mov
out
adc
mov
fbld
fs
pop
gs
mov
pop
sbb
les
test
sub
scas
jle
mov
insl
and
dec
not
std
jae
inc
mov
into
add
xchg
sbb
lahf
shlb
push
ss
in
test
jge
add
movsb
mov
hlt
xor
sub
fwait
mov
mov
pop
sahf
ja
addr16
xchg
cltd
mov
xor
das
cs
mov
jae
cs
fdivrs
sub
addr16
add
cwtl
sub
cmp
sub
arpl
pop
add
aaa
aas
adc
cltd
inc
rol
xor
sub
popf
add
and
mov
pushf
lods
xor
add
negl
mov
cs
or
mov
aas
cmp
pushf
popa
mov
mov
mov
cmc
popl
pop
mov
jmp
xor
or
push
je
ljmp
jns
sti
outsl
jno,pt
scas
imul
test
daa
mov
test
fists
out
lcall
sbb
adc
sbb
je
push
jnp
pusha
fdivrs
ficomps
pop
es
jnp
sub
jle
cld
mov
and
es
fwait
xor
jmp
jp
pusha
mov
dec
je
std
mov
and
sub
fistps
jne
popa
dec
inc
daa
sysenter
sbb
test
mov
dec
xchg
sbb
pushf
je
add
push
loop
pop
jo
mov
jne
orl
sahf
cmp
push
mov
or
sub
shrb
inc
shrb
fcoml
rorl
js
xchg
sub
pop
aad
into
add
dec
lea
js
test
mov
fcompl
sti
and
out
jb
xor
jg
mov
xchg
lahf
jns
int
mov
int
cmp
mov
jge
bound
ret
mov
pop
lock
adc
xchg
in
inc
dec
push
loopne
in
leave
stos
dec
adc
loope
repnz
enter
xchg
jnp
xchg
or
adc
or
add
arpl
jge
add
cmp
jge
mov
movb
fwait
clc
xchg
test
shlb
in
leave
data16
inc
sbb
jns
inc
clc
sbb
push
add
ljmp
cmp
push
fiaddl
daa
cmpb
cmp
fmul
pop
pop
idivl
pop
xor
push
add
fisubrs
sbb
sbb
sub
test
lods
mov
ljmp
cltd
inc
push
icebp
test
adc
cmc
pop
mov
push
push
int3
or
push
mov
mov
nop
lea
dec
adc
ret
call
mov
insl
in
mov
cmp
lcall
aad
add
xchg
sbbl
push
lret
jnp
cli
in
aas
push
fcom
sub
daa
ja
cld
inc
roll
jge
jl
jecxz
jns
pop
jl
xor
inc
andb
fldt
mov
mov
and
push
lea
or
sbb
xchg
mov
push
clc
cld
adc
jmp
dec
popa
cli
ret
lret
xchg
fs
pop
or
or
or
jl
pop
xchg
inc
dec
outsb
lsl
and
les
loopne
stos
aad
sub
sti
repnz
cmp
ja
in
outsl
push
dec
fdivs
xlat
xor
int
xchg
iret
xchg
loope
xchg
xlat
aad
stos
xlat
into
add
ja
cwtl
or
nop
je
icebp
test
sub
sbb
mov
cs
fs
or
push
jge
xchg
add
iret
paddusw
sbb
push
decb
sahf
sub
jae
cmpsb
movsl
in
les
mov
inc
mov
lods
jnp
in
dec
sub
sub
cmpsb
or
lret
push
add
icebp
xorb
nop
mov
push
sbb
lock
int3
xchg
dec
xchg
imul
inc
add
push
dec
sahf
fldcw
xor
div
jle
out
daa
lods
push
pop
sbb
in
xor
dec
jb
mov
sahf
ja
lret
push
insb
out
lret
int3
div
lods
xor
cld
cmp
lock
mov
addr16
fidivrs
cmpsl
or
sbbl
dec
clc
sub
xchg
inc
sub
mov
ret
testb
cli
and
insb
enter
jge
pop
jp
push
loope
cwtl
pusha
mov
leave
adc
dec
dec
ds
pop
pop
aad
sbb
add
inc
movsb
xor
and
pop
jb
jb
or
dec
add
lock
cltd
aad
ds
lcall
movsl
sub
sbb
or
cli
test
sbb
sbb
lods
in
rcll
cmpsb
sarb
mov
jno
dec
hlt
or
stc
mov
pop
loop
xchg
sbb
dec
xchg
xlat
ret
aad
jmp
mov
popf
add
mov
leave
movsb
push
popf
data16
mov
lods
outsb
clc
lods
add
pop
mov
mov
bound
ret
xchg
adcl
fcoms
sub
mov
adc
mov
pushf
jp
mov
mov
sbb
xor
dec
ja
fdiv
xchg
push
adc
xor
iret
ficoms
mov
mov
int3
hlt
push
mov
mov
or
pop
aaa
jo
mov
pop
mov
pusha
dec
or
cs
andb
mov
fcmovnbe
sub
inc
push
roll
cmp
pop
jbe
js
sub
push
lahf
iret
add
jp
push
mov
gs
aad
iret
push
adc
ljmp
pop
push
mov
mov
or
loopne
loop
pop
mov
xor
xorl
jnp
addr16
xchg
stc
mov
xor
mov
out
into
cmp
sti
xchg
mov
clc
fsubs
lret
adc
hlt
fstpl
in
and
out
xor
jne
or
repnz
pop
mov
mov
pop
mov
lret
stos
fstpt
les
sbb
cli
cmp
lds
inc
mov
jbe
jle
test
icebp
hlt
adc
cmpsb
pop
ror
mov
jns
or
out
mov
insb
mov
mov
lret
stos
lcall
jg
jg
xor
cmc
sbb
shr
xchg
pop
ficoml
lea
xlat
ret
out
add
dec
xchg
add
out
add
ss
test
orl
add
or
cmp
xor
jp
push
cmp
mov
xchg
bound
push
lcall
and
orb
stc
xchg
fstpt
push
add
cld
dec
inc
add
call
cld
cmp
daa
les
mov
cmp
or
dec
dec
jmp
sub
inc
pushf
dec
ret
dec
pop
xchg
int
dec
push
test
cmp
or
pop
les
mov
fistl
or
sbbl
andl
add
adc
xchg
sarb
inc
mov
pop
arpl
cmp
int3
sahf
mov
cmovp
lods
imul
jb
popf
fildl
push
sub
sar
or
hlt
mov
dec
mov
or
daa
js
mov
xor
movsb
and
mov
sti
jns
outsb
add
leave
mov
pop
sub
mov
pusha
gs
outsl
dec
pushf
sbb
sub
or
fwait
adc
push
sbb
in
and
ret
jnp
call
fisubs
shl
inc
jle
test
rorb
adc
jno
lock
out
int
daa
adc
cmpsb
dec
idivb
push
jmp
push
in
xchg
negb
cmpsb
cmc
in
fistl
add
iret
cli
and
loope
push
shr
push
dec
push
jns
push
push
mulb
mov
rol
clc
cmp
add
ja
mov
mov
mov
pop
jl
aaa
adc
cmp
lcall
fcoml
mov
fsub
and
popf
insb
mov
nop
dec
dec
rol
or
dec
dec
js
mov
dec
sahf
pop
repnz
push
scas
icebp
gs
mov
mov
jecxz
dec
fmull
mov
in
sub
stc
pop
mov
mov
mov
bnd
xchg
in
push
ljmp
in
xchg
test
icebp
imul
cli
jecxz
cmp
and
xor
push
pusha
les
lods
pop
scas
jb
and
es
scas
jle
pop
arpl
pusha
movsl
lea
lcall
ds
or
add
dec
mov
sahf
in
es
push
lds
fstpl
sahf
rcrl
cmp
and
inc
mov
push
inc
xlat
cs
fildll
adc
aad
xor
jns
test
shlb
push
mov
out
stos
cmp
jmp
inc
cmp
push
shrb
movsb
cmp
cmovo
cmp
rcr
outsb
in
lds
lcall
inc
idivb
or
popf
mov
pop
jne
fisttpll
loop
jg
pop
mov
jmp
xchg
jle
jbe
insl
sbb
fistpll
cmpsb
lods
jb
mov
cmp
dec
dec
mov
sub
push
mov
aas
test
test
test
dec
in
insb
out
scas
aad
pop
insl
sar
aaa
repnz
in
mov
sarb
sub
or
in
pop
data16
mov
lahf
and
push
idivb
push
mov
out
dec
sbb
js
dec
jne
lods
xchg
iret
xchg
dec
out
insb
lea
out
adc
call
push
or
xchg
cli
push
stos
xor
cmp
cmp
xchg
pop
aam
pop
xchg
push
jl
or
cwtl
sbb
aaa
push
stc
inc
cmc
mov
loopne
adc
push
dec
lods
mov
inc
subb
movsl
push
mov
in
aas
dec
out
and
mov
inc
adc
out
lods
push
inc
cmpl
push
jmp
ret
xor
icebp
sub
mov
xchg
mov
mov
mov
sbb
in
int3
out
les
leave
add
cwtl
insl
xor
cmp
dec
sub
adc
xchg
xchg
jp
ljmp
or
shl
jge
mov
dec
cmovg
enter
je
xchg
fldcw
sbb
pop
notl
mov
dec
lea
pop
xchg
inc
mov
jl
in
das
mov
add
ljmp
cltd
call
icebp
pop
sbb
pop
fisubs
xor
lods
cmpb
lods
arpl
sbb
inc
out
movsl
bound
out
sbb
jbe
repnz
xchg
rolb
inc
mov
cmp
loop
xor
mov
adc
sbb
jp
and
inc
pavgb
cmp
pop
mov
pop
push
mov
jmp
lods
jge
or
sub
subb
pop
xchg
sahf
push
jmp
mov
ss
lea
mov
sti
pop
pop
pop
dec
mov
iret
fisubl
movsb
lret
or
iret
pop
pop
aam
testb
mov
mov
negb
cmp
add
dec
mov
enter
inc
repz
negb
sti
sub
cmp
incl
iret
shrb
movsb
adc
out
dec
cmp
and
jecxz
gs
gs
lahf
push
sti
jle
jmp
loopne
and
out
std
mov
popf
sahf
and
jmp
or
cmpsb
jno
jecxz
in
pushf
mov
scas
movsb
jb
ljmp
pop
push
mov
mov
into
test
ret
int3
ret
in
mov
xchg
scas
repz
mov
pop
cmp
xor
in
xchg
insb
daa
cli
lods
jl
in
inc
fs
mov
add
in
fidivs
lods
xor
adc
loopne
aad
shlb
and
or
leave
in
mov
dec
pop
adc
jle
fldenv
les
div
or
les
out
push
push
mov
ret
xchg
fs
ds
sbb
orb
jno
inc
shlb
sub
pushf
pop
xchg
push
ss
rolb
subl
fwait
and
stos
sub
push
scas
pop
cmp
lods
jns
shll
fwait
pop
mov
std
push
bound
in
fstpl
imul
jp
outsl
mov
loopne
cltd
sbb
sbb
jbe,pt
sarb
sub
push
jle,pt
push
sbb
xchg
not
jmp
and
jbe
mov
push
mov
pop
xor
mov
notb
jmp
cmp
xor
mov
push
fwait
add
aam
mov
scas
and
dec
sysenter
xchg
push
loopne
loope
in
lods
push
ja
dec
sub
idivl
fidivrl
mov
push
popa
fwait
add
or
mov
out
push
lret
adc
or
or
and
and
jne
fsubl
aam
imul
pop
and
scas
int3
cli
or
cmpsl
icebp
fs
outsb
push
lock
sbb
out
jae
cmovle
dec
or
idivl
jge
add
scas
sbb
ficoml
out
cmp
push
mov
push
scas
loopne
mov
pop
jne
scas
mov
lret
pop
push
repnz
adc
push
push
out
push
cmp
cmp
fbld
lret
lock
rorb
jae
mov
sarb
mov
or
incb
imul
insl
scas
or
or
lock
in
rcrb
loopne,pn
orl
xchg
or
mov
push
scas
iret
dec
cmp
mov
mov
mov
jb
pop
repz
xchg
and
je
mov
mov
or
adc
push
ds
xor
jo
xor
lds
nop
je
xor
cli
push
shlb
repz
and
out
inc
mov
pop
cmp
mov
xchg
enter
inc
mov
push
mov
mov
mov
pusha
or
cli
std
lea
cmp
sbb
das
inc
pop
xor
jns
sub
mov
je
or
filds
cmp
xchg
lea
int3
sti
mov
cwtl
fsubrp
stos
lock
mov
jne
test
lret
addr16
mov
pop
popf
jle
movb
push
out
fisttpll
mov
gs
adc
fidivrs
push
test
ss
push
ret
push
lea
adc
cmp
push
sub
fs
xor
or
adc
bound
into
test
sub
xchg
mov
sbb
sub
mov
adc
fmull
frstor
arpl
pop
lock
orl
or
sbb
in
movsb
jl
sbb
repz
je
dec
out
repz
lock
cli
test
aam
xor
je
jg
jp
mov
mov
dec
pop
add
jg
fildl
lds
ds
pop
fists
and
enter
adc
cwtl
push
jl
ret
xor
out
jecxz
pop
rclb
outsb
sbb
xchg
jmp
dec
pushf
ds
mov
xchg
xor
mov
add
sub
std
mov
cmpsb
out
cld
andl
mov
pop
test
sbb
pop
jecxz
ljmp
mov
fs
into
adc
push
push
fisttps
adc
pop
dec
mov
adc
xor
fildll
test
imul
daa
out
or
xor
or
adc
movsb
enter
ss
inc
cld
and
fsubrl
mov
add
add
mov
test
lret
hlt
pop
cmpsb
jmp
test
insl
test
sbb
aaa
enter
jle
les
or
out
sbb
rcl
lock
mov
xor
pop
inc
mov
lods
xor
add
inc
dec
cmpsb
add
mov
add
mov
push
and
int3
popf
jmp
movsl
push
inc
mov
sbb
fs
lds
cmpsb
dec
aaa
jp
sub
sbb
movsb
ret
pop
js
jmp
xor
pusha
sarl
jg
fs
movl
mov
dec
addr16
mov
lahf
scas
pop
and
stc
andl
jle
sti
ds
inc
adc
sahf
pushf
test
dec
cwtl
jg
or
sahf
lods
jno
rolb
dec
arpl
cmp
push
pop
mov
int3
mov
dec
or
push
adc
push
rcll
testb
les
mov
adc
ror
in
jne
cmpl
mov
sub
dec
cmc
xor
outsb
mov
jle
ljmp
add
push
pop
cwtl
push
and
jmp
add
sbb
adc
push
sbb
sahf
test
add
mov
pop
test
xchg
inc
fwait
sbb
xchg
xchg
adc
mov
fucom
test
sub
arpl
xor
xor
pop
icebp
daa
ret
adc
arpl
xchg
out
cmpb
push
fsubrl
xchg
insl
mov
sub
dec
push
fs
loopne
ss
dec
movsl
in
outsb
xchg
xchg
repz
xlat
lret
cld
mov
loopne
pushf
mov
inc
out
xor
mov
dec
popa
mov
push
mov
shrl
jecxz
mov
push
dec
push
gs
jmp
shll
stos
adc
mov
jge
sbb
int
xchg
test
add
rcll
sbb
sbb
mov
out
xor
ja
mov
inc
lcall
mov
rol
mov
dec
mov
cmp
xlat
push
enter
cmp
jle
mov
jmp
fs
and
addb
mov
inc
loopne
pop
push
jmp
call
xor
lret
push
xorl
jo
pop
and
dec
ret
mov
in
push
mov
push
xor
mov
das
ss
lcall
push
mov
test
call
cld
adc
mov
lds
xchg
push
pushf
imull
jbe
sarl
sub
pop
sub
mov
sbb
shll
pop
push
adc
fdivrs
lods
xor
adc
dec
push
add
xor
inc
pop
inc
mov
inc
in
xlat
stos
stos
mov
lods
or
repnz
xchg
or
sub
xchg
push
jl
test
fmull
data16
inc
lods
dec
sahf
pop
cmp
dec
call
insl
mov
movsl
jo
fs
scas
inc
and
inc
mov
push
pop
pushf
scas
adc
ds
push
pushaw
lods
int
ret
dec
sbb
fcoms
xor
dec
in
jbe
mov
xchg
addb
xchg
xchg
or
adc
pop
scas
dec
nop
fwait
sub
push
pop
and
outsb
mov
xchg
or
and
adc
xchg
sarl
or
jmp
arpl
stc
aam
push
movsl
sar
repnz
mov
mov
adc
fucomip
adc
outsb
pop
mov
inc
cmp
xchg
mov
jne
mov
sub
gs
pop
dec
sti
mov
bound
sub
dec
xor
xchg
out
sub
xchg
and
pop
pushf
jae
add
cmp
and
das
ss
sub
test
mov
and
leave
shrb
push
sbb
rorl
pop
mov
out
ja
movsb
in
je
mov
test
xor
dec
orl
jbe
loopne
mov
fs
push
pop
aaa
sarl
pop
pop
cmp
push
mov
enter
push
cmpsl
jmp
hlt
ss
mov
mov
outsb
dec
push
rorb
push
bswap
insl
inc
xorb
mov
adc
daa
push
mov
jb
push
mov
push
leave
es
cmp
jl
cld
mov
push
jecxz
subb
arpl
aas
test
add
mov
addr16
cltd
push
sub
mov
pop
gs
shll
orb
enter
mov
and
shrb
sub
mov
iret
sub
movsb
xchg
jp
ret
movsb
sub
imul
jae
push
cmp
cmp
adc
push
lds
sbb
repz
test
mov
mov
sbb
js
mov
mov
push
mov
lock
cmp
jb
mov
and
xchg
mov
sub
sarb
cmpsl
xor
clc
mov
xchg
add
push
mov
mov
add
xchg
push
rcl
push
mov
out
fildl
cmp
ss
add
mov
stos
pop
out
add
push
xchg
or
jmp
jl
cwtl
or
sub
mov
popa
aaa
mov
pop
xchg
jl
repnz
push
push
pop
fstps
xor
inc
mov
push
dec
sub
test
sub
cmp
mov
rcrl
sbb
loope
jecxz
push
jmp
xchg
dec
mov
shlb
mov
pop
shll
sbb
jge
sbb
jmp
push
scas
xlat
cwtd
and
or
pop
jbe
mov
sub
enter
scas
lods
add
cmp
push
shll
jg
sub
rcl
cld
in
jae
mov
sbb
aaa
jmp
adc
test
pushf
fdivrl
dec
mov
pop
adcl
gs
mov
aad
inc
mov
jnp
inc
and
out
jo
ljmp
outsl
xor
pop
movsb
add
sub
inc
pop
mov
jg
sti
jb
mov
adc
xchg
fsubs
repnz
xchg
popf
loope
sbb
and
lds
ja
test
lret
and
push
iret
ja
movb
cmc
xchg
out
mov
sub
push
dec
adc
in
mov
lods
push
xor
sbb
push
jo
aam
das
sbb
mov
jle
rorb
mov
es
enter
inc
enter
dec
mov
or
dec
sub
movsl
push
cmpsb
or
xor
pop
rcll
cmp
sbb
popf
imul
mov
dec
movsb
rorb
int3
dec
dec
in
shrl
bound
or
sbb
ret
xchg
call
jb
lret
fwait
stos
aaa
or
fists
out
xor
cltd
mov
ret
adc
daa
scas
inc
fbld
leave
call
mov
popf
nop
mov
cmp
lods
push
adc
cmp
mov
mov
fdivrs
call
push
repz
dec
inc
in
outsb
jnp
jno
xchg
movsb
cli
xorl
jbe
jl
xchg
das
fbld
ja
mov
pop
or
mov
xor
test
scas
push
jbe
sbbl
mov
ss
test
mov
hlt
fs
ficoms
out
fprem
add
mov
xor
cmp
clc
push
add
lock
push
inc
mov
and
lcall
xor
iret
mov
imul
cmp
or
sbb
int
movsb
mov
ja
mov
dec
movsl
stc
outsb
hlt
test
adc
arpl
adc
add
dec
loope
mov
lcall
xor
ja
sub
add
sbb
add
jecxz
cld
mov
xchg
or
jne
inc
ja
add
pop
shrl
cld
push
fs
hlt
jg
mov
cmp
repnz
add
xor
testb
popa
add
fcmovnu
xor
or
pop
push
and
cmpsl
xchg
insl
test
daa
push
jnp
xor
lods
test
out
inc
jl
js
adcl
cmp
daa
inc
mov
inc
subl
sub
out
lds
fwait
lods
jno
je
inc
pop
sbb
sbb
push
not
dec
ret
inc
adc
insl
xor
ljmp
mov
cmp
int3
jge
cmp
cwtl
jmp
int3
jl
xor
ret
inc
ret
jp
pop
cmp
jae
imulb
mov
sahf
add
repnz
xchg
popa
sarb
iret
lcall
out
pop
subl
das
add
test
movsb
jmp
gs
scas
push
mov
cmc
or
imul
outsb
divb
cmp
es
dec
cli
push
ret
iret
and
inc
or
xchg
int
xchg
dec
add
inc
jnp
ljmp
push
aam
stos
stos
push
mov
mov
push
adc
pop
dec
pop
daa
xchg
dec
repnz
out
jle
cmp
mov
sti
mov
dec
pop
sbb
cli
sbb
mov
sub
pop
jae
data16
jg
or
and
mov
dec
cmp
fnsave
push
mov
sub
sub
in
adc
dec
sbb
pushl
sub
out
cmp
push
xor
push
pop
faddp
fwait
ret
mov
and
pop
mov
sub
xor
mov
lcall
sub
stos
cmc
fstpt
pop
mov
pop
or
aas
fildl
or
push
cmp
xchg
inc
xor
mov
or
mov
fs
je
dec
add
add
mov
adc
mov
jl
push
mov
jne
inc
test
insb
sub
mov
shlb
inc
iret
push
clc
mov
cld
rcr
mov
mov
add
inc
mov
push
repnz
stos
push
push
mov
inc
push
lods
push
mov
outsb
in
scas
out
dec
insb
testb
je
out
xor
xor
inc
add
sub
and
shrl
jl
rcr
mov
testl
xor
mov
xor
pop
sub
mov
jmp
pop
in
adc
pop
vunpckhps
ljmp
ret
pop
push
hlt
stc
fdivrs
and
push
add
push
mov
mov
adc
jns
or
aas
fnstenv
loope
outsl
scas
jbe
in
inc
mov
push
push
cli
fldcw
nop
xchg
or
pushf
jle
xor
or
fcmovne
dec
cmp
popa
lds
mov
jo
or
sbb
ret
notb
adc
minps
fcompl
cmpsb
ffreep
aas
jmp
push
push
dec
test
mov
add
fwait
fwait
add
adc
js
xorl
fsubrs
push
aas
aam
popa
inc
lods
notl
push
jg
inc
int3
add
add
pop
das
xchg
adc
ja
dec
aad
xchg
push
mov
push
fwait
aas
add
mov
push
cwtl
repz
or
sub
and
cmpl
mov
mov
cld
mov
ret
mov
mov
jle
push
js
popa
adc
mov
mov
sub
out
cs
add
stos
cmpsb
jl
adc
sbb
xlat
loope
in
leave
xor
inc
xchg
aam
jl
sbb
adc
rolb
cmp
out
or
jg
jge
fistl
mov
jns
lock
jae
into
shrl
xor
in
out
jb
add
fstl
fcomps
cmpsl
aam
das
scas
fists
fcomps
inc
cmpl
mov
hlt
add
icebp
xor
push
mov
sub
fmulp
dec
dec
inc
sahf
xchg
pop
and
enter
dec
pop
xchg
imulb
pop
inc
out
cmp
je
inc
ret
jbe
pusha
movsl
jg
outsb
lret
mov
sbb
mov
pop
cmp
sahf
dec
dec
in
xor
dec
push
add
sub
cltd
int3
lret
sbb
fistpll
jnp
sbb
xor
jns
dec
cmp
pusha
insb
out
xchg
or
test
cmpsl
in
mov
xor
jl
mov
outsl
ss
push
out
pushf
push
pop
push
xchg
in
pop
lea
aaa
jmp
jb
sbbb
jl
xlat
loopne
addr16
adc
dec
addr16
out
add
daa
test
or
adc
pop
push
jl
inc
enter
push
xchg
loope
inc
cmpsl
and
pop
dec
shll
inc
ret
push
stos
jge
xchg
mov
jno
leave
repnz
push
lret
dec
adc
inc
mov
dec
pusha
xchg
aas
lock
xchg
movups
imul
add
fadd
ss
lea
pop
into
ret
aam
add
outsl
mov
lds
std
cmc
inc
push
cld
std
cmp
inc
sbb
and
mov
pop
pop
loopne
push
mov
mov
xlat
in
push
jb
jmp
movsl
ret
xor
push
sbb
or
mov
jecxz
movsl
lret
out
addl
jnp
data16
xchg
test
push
inc
fnsave
xchg
test
dec
xor
mov
cmc
and
loop
jae
mov
dec
cmp
stc
gs
faddl
outsb
aas
sahf
mov
loopne
and
in
mov
ja
lea
sarl
cwtl
cmp
pop
stos
push
mov
adc
jbe
aam
dec
mov
or
mov
dec
and
mov
icebp
lods
or
clc
push
dec
out
xchg
mov
jo
pusha
je
ljmp
xchg
jl
cmp
jle
pusha
cmp
sbb
das
or
pop
iret
push
cmp
int
aaa
mov
out
imul
loopne
push
jg
loope
sbb
arpl
aad
jno
shll
enter
and
pop
fwait
test
jnp
push
cmp
mov
outsl
jecxz
ss
inc
xor
push
adc
call
jecxz
xchg
dec
mov
movsb
xor
inc
scas
jp
out
rorw
shlb
and
jns
stc
add
mov
test
lea
movsl
leave
rcll
repnz
inc
in
lcall
fidivs
fcoml
les
test
or
pop
push
xlat
fcomp
insb
sbb
out
push
push
hlt
add
insl
mov
dec
fwait
inc
adc
mov
inc
adc
or
sub
add
fscale
dec
dec
fsubr
xchg
adc
aam
jle
pop
lahf
add
sub
decb
leave
out
loopne
add
movsb
mov
push
sub
push
sbb
and
aas
dec
mov
pcmpeqb
push
fcom
sub
add
pop
sub
movsb
mov
arpl
mov
cmpsl
adc
cmp
ja
into
cmp
je
test
lret
add
xchg
movsl
sahf
or
addl
push
in
enter
mov
push
decl
es
adc
ss
and
xor
mov
stos
mov
jge
ja
fiaddl
pop
inc
xchg
jns
pop
rclb
xchg
and
jg
xchg
xor
aaa
aad
and
movsl
push
push
das
aaa
test
stos
add
popa
jecxz
cmp
ljmp
dec
mov
cld
aas
xchg
add
cli
fs
push
inc
in
jne
xchg
clc
pop
or
xor
fiaddl
incb
mov
int
cs
outsb
push
test
lods
mov
dec
xchg
loope
pushf
cmp
xchg
les
sub
sti
loop
mov
xchg
mov
outsl
jne
add
js
orl
faddl
add
in
out
fiadds
inc
push
mov
out
popa
dec
loop
into
iret
or
jmp
xlat
sub
pop
out
dec
jne
xor
dec
outsb
in
inc
sub
dec
insl
cmp
mov
loopne
in
xchg
inc
jae
mov
pusha
push
jae
add
xor
dec
lret
bound
jbe
je
in
addr16
xor
pop
mov
fidivrl
test
adc
sbb
popa
test
jne
jmp
jmp
repz
rcrb
mov
loope
scas
aad
fidivs
fimull
push
fdivs
sbb
push
or
pop
negb
mov
push
jmp
mov
js
jp
ret
jnp
pop
sub
out
aam
cmp
repnz
int3
xor
inc
mov
jno
sub
sub
xchg
mov
mov
mov
dec
mov
mov
sti
jne
in
fmull
lock
pop
lds
and
pop
sbb
pop
push
sub
inc
xchg
sub
pop
or
adc
sub
xchg
test
push
fnstcw
ds
pop
adc
xor
mov
test
jecxz
mov
jmp
adc
sbb
test
ds
pusha
roll
mov
mov
in
in
ljmp
sbbl
scas
and
add
jg
das
push
and
mov
das
push
pop
xchg
sti
stos
pop
out
xor
shll
popa
cmp
movsl
jae
jno
xchg
scas
jle
jae
ret
mov
sbb
int3
cmp
shr
cmp
nop
mov
mov
movsb
jmp
mov
js
jp
dec
test
pusha
fs
fwait
mov
sbb
push
pop
mov
sub
xor
pop
fs
pop
sbbb
inc
stos
cltd
daa
adc
out
push
or
add
imul
pop
xchg
cmp
mov
lods
jp
mov
xchg
fisubrl
push
sti
xchg
test
adc
mov
pop
add
sub
push
xor
sub
aam
fldt
fstl
xlat
sbb
cmp
push
ds
popa
mov
clc
pop
iret
adc
aaa
pop
push
daa
mov
aas
rol
adc
inc
mov
test
dec
xchg
inc
add
dec
mov
mov
sbb
stos
mov
jo
scas
neg
addr16
jl
out
inc
adc
hlt
mov
mov
and
lcall
outsb
andb
fimuls
nop
shlb
repnz
xchg
test
inc
or
jae
jle
sbb
je
pop
ret
out
lret
pop
jno
pop
stos
adc
mov
adc
out
push
ss
sbb
or
sahf
rcr
mov
and
dec
cmpsb
mov
cmp
mov
dec
push
sbb
addr16
rorb
push
mov
push
data16
dec
cmp
shrb
xchg
fwait
les
rcrl
mov
stos
scas
sahf
xchg
ljmp
xchg
aam
scas
pop
roll
and
push
pop
push
test
pop
xlat
pop
mov
movsl
pop
fistpl
mov
mov
xchg
sbb
adc
dec
cli
iret
cmp
xchg
icebp
stc
test
mov
mov
aas
pop
dec
sbb
cmp
cltd
out
outsb
or
data16
inc
sbb
cli
nop
sub
lret
push
push
arpl
out
outsb
cmp
xorb
cmp
cmp
jae
mov
lahf
sub
out
nop
pop
sbb
leave
jns
popa
pop
mov
test
cld
xchg
mov
push
rcr
mov
rol
mov
ret
inc
inc
add
in
sti
jle
into
sub
jae
into
inc
cmpsb
out
pop
xchg
sbb
in
mov
in
dec
orb
les
pop
xchg
stos
cmp
xchg
jl
dec
aaa
xchg
xchg
dec
imul
xor
dec
mov
mov
rclb
or
dec
out
cwtl
in
into
mov
jb
or
mov
notb
mov
loop
fninit
xchg
aad
xchg
xlat
adc
iret
or
sbbb
pop
or
scas
cmp
cmc
jno
push
std
dec
pop
fadds
test
decb
mov
icebp
iret
cmp
lods
push
icebp
xlat
imul
inc
test
fwait
rcl
repz
xor
stc
jg
pushf
mov
mov
jb
lret
fildll
sbb
cmc
push
fwait
mov
or
lar
int
aam
mov
nop
xor
xchg
pop
xchg
add
outsl
pop
lods
mov
ja
mov
out
pop
sahf
aad
fbld
jns
pop
lea
adc
out
add
push
pop
mov
imull
or
loope
data16
dec
pop
in
sbbb
cmp
cltd
sub
adc
insb
arpl
cmp
sahf
data16
ljmp
jge
push
push
in
subl
popf
loope
inc
sti
lods
cmp
cmpxchg
mov
xlat
popa
lea
xor
pop
and
mov
inc
inc
std
shlb
sbb
cwtl
sbb
fiadds
mov
lods
push
push
pop
mov
or
pop
mov
icebp
enter
or
iret
lea
insl
cmp
adcl
mov
mov
and
and
js
dec
cmpsl
jp
mov
cmpsl
out
sub
inc
jb
pop
loope
jp
inc
dec
fbld
flds
out
xor
repnz
andb
inc
addr16
cmp
dec
lods
in
jo
pop
mov
pop
inc
jae
sbb
jbe
add
test
add
dec
xchg
dec
and
ss
aad
mov
pop
xor
inc
inc
add
xor
sbb
outsl
dec
dec
pop
stc
cmc
jecxz
insl
sti
mov
and
nop
mov
fnstsw
sahf
in
lods
inc
subl
dec
daa
fimuls
out
test
cmc
leave
xchg
arpl
push
pop
enter
negb
es
jl
shl
movsl
xchg
jbe
out
imull
xor
icebp
fisubrl
adc
xchg
outsl
add
sub
xor
sahf
in
nop
fistpl
int
sti
cmp
stc
add
mov
sub
fisttpl
lods
repnz
xchg
xor
cli
mov
out
dec
or
pop
mov
lcall
cmp
dec
sbb
and
and
jmp
in
js
cmpsl
pop
orb
rolb
jmp
sti
mov
data16
sub
call
cltd
push
inc
clc
pop
pop
sarl
push
dec
sahf
aas
add
add
pop
mov
adc
push
mov
clc
fdivrs
lret
outsb
aas
pop
ret
mov
push
ret
dec
hlt
dec
xor
sahf
xchg
xor
popf
mov
add
mov
xor
ss
loopne
movsl
arpl
xor
or
xchg
mov
out
mov
jae
sbb
negb
in
lods
adcb
lret
mov
outsb
and
xchg
shlb
xor
push
inc
inc
loop
xor
shlb
ja
or
dec
imul
insb
sub
jb
cmp
pop
inc
or
test
jno
and
push
dec
fucomp
aas
outsl
mov
jns
bound
sti
mov
adc
push
addl
fisubl
repz
mov
hlt
xor
lea
hlt
ret
or
aam
scas
sub
xchg
rcr
xchg
lods
xor
mov
xchg
sbb
fsubrl
scas
add
sbb
mov
fldenv
mov
jmp
mov
xchg
push
popf
adc
xor
xchg
outsl
xchg
test
lret
mov
movsb
mov
jg
push
sahf
fnstenv
cli
sbb
xchg
adc
xchg
dec
shr
inc
push
mov
xchg
shll
adc
aad
out
pop
xchg
movb
inc
add
stos
push
add
xor
cmp
test
xchg
sti
pusha
mov
push
add
cwtl
xchg
pop
nop
mov
adc
cli
scas
sub
les
popf
pop
add
mov
jbe
xchg
mov
lret
and
in
loope
les
xor
scas
cwtl
or
gs
out
in
xchg
pop
inc
iret
imul
sbb
xor
bound
xor
and
lea
andl
pop
xor
je
dec
fsubs
inc
jp
fldz
fdivrp
fisttpl
adc
jg
fcomip
xchg
xor
pop
js
push
xor
cmp
loopne
popa
ret
cmp
shr
cmp
xchg
js
lea
ds
movsb
adc
test
cmp
lret
fs
xchg
mov
mov
es
mov
dec
pop
repz
xor
adc
mov
jle
mov
decb
jge
mov
andl
jecxz
fisubs
adc
inc
pop
mov
cmp
inc
jne
push
and
cmp
mov
dec
mov
jns
out
pop
inc
jl
dec
fsubrs
cld
jp
insb
xchg
mov
test
outsl
add
jae
pusha
daa
lods
jae
ret
lea
in
push
popa
dec
xchg
out
aaa
mov
jae
lret
aad
or
inc
sub
fwait
xchg
inc
cwtl
mov
movsl
js
mov
lods
in
lds
jl
jnp
dec
xlat
out
mov
adc
mov
mov
mov
xchg
test
loop
cmp
shlb
sub
fst
mov
popa
mov
scas
mov
xchg
dec
jae
outsl
loop
addl
pop
aas
insb
cmp
mov
fnstsw
push
scas
xchg
fwait
or
les
dec
cmp
mov
mov
inc
mov
xlat
test
arpl
mov
fst
mov
bound
shll
adc
dec
dec
cmp
mov
lods
outsb
les
lods
pop
push
lods
int3
fldl
sub
jl
xor
pop
push
test
call
jb
repnz
cmc
dec
cmpsb
jecxz
cmovbe
decl
jle
dec
mov
imul
repnz
jl
xchg
pop
cli
bound
les
mov
adc
xlat
jns
push
loop
or
push
xchg
push
pop
mov
xchg
xchg
lea
nop
mov
lcall
fwait
jl
aad
jecxz
inc
mov
hlt
dec
ljmp
xor
pop
sbb
pop
out
enter
xchg
inc
jne
mov
aam
sub
pusha
sahf
xor
in
fistps
push
mov
jbe
add
pop
cmp
arpl
xchg
mov
fwait
add
mov
stos
shlb
loopne
jl
mov
cltd
pop
sahf
mov
inc
adc
adc
and
pop
jmp
add
nop
orl
inc
rorb
out
cmp
scas
add
jae
jne
outsl
andl
aad
xor
or
pop
pop
ret
test
jecxz
fisttpl
rcll
rorl
mov
and
dec
xchg
or
add
imul
push
in
dec
pop
punpckldq
loope
xor
int3
pop
adc
cmp
sahf
cmp
scas
push
push
sbb
xchg
or
out
pop
xchg
icebp
cmpsl
shll
call
mov
pop
push
je
lret
cmp
movsb
cltd
lret
pop
int
push
ret
inc
mov
jne,pt
outsb
and
lods
pop
xchg
sbb
imul
mov
inc
xor
gs
in
inc
or
stos
jp
inc
push
aas
lret
aas
clc
xchg
insb
mov
xlat
lds
xchg
cwtl
int3
xchg
add
out
ret
sarb
enter
or
ja
push
insb
jmp
xor
push
stos
jmp
dec
les
jg
inc
lods
fs
jne
mov
adc
lret
add
js
adc
enter
jb
enter
clc
jnp
aad
mov
push
add
push
test
jb
pop
cmp
xlat
mov
add
stos
sub
mov
lahf
nop
dec
enter
sbb
rorl
xchg
clc
push
out
pop
xor
push
mov
xor
addr16
loopne
iret
sahf
outsb
loope
mov
cmp
mov
add
adc
scas
pop
xchg
dec
mov
decl
inc
js
sub
sub
jno
mov
repnz
or
mov
xchg
jo
and
in
pop
pop
in
out
xchg
pusha
lock
stos
sarb
ja
or
test
sbb
cmc
scas
pop
pop
outsl
mov
insb
xchg
icebp
fdivrs
out
mov
inc
xorl
std
jle
fstps
xchg
out
fucomip
push
mov
jns
insl
cmpsl
jne
out
inc
xorl
out
cmpsl
loop
mov
test
arpl
dec
push
cltd
adc
imul
sbb
or
push
stos
jg
leave
mov
testl
ss
fs
pop
adc
xor
jecxz
js
mov
lahf
jne
mov
lock
jne
out
es
cli
fdivrp
outsl
mov
pop
ret
in
les
xchg
sub
and
imul
adc
es
lock
nop
push
scas
push
mov
enter
ficomps
or
add
dec
inc
stos
into
jnp
lret
shlb
and
or
mov
adcb
std
xchg
call
clc
insb
xor
push
arpl
ss
pop
push
push
cmp
pop
mov
mov
inc
mov
pop
scas
mov
cmp
fisubrl
test
xor
push
into
out
sahf
ja
sahf
movsl
daa
adc
sub
mov
xor
scas
fst
cmp
push
xorl
adc
lret
pop
xor
sbb
rorb
iret
sub
adc
xchg
and
mov
mov
imulb
sub
jo
rcl
mov
sbb
fwait
push
xchg
ja
leave
xchg
inc
mov
loopne
int3
or
popw
filds
gs
xor
addr16
xchg
inc
inc
in
out
cs
fsubl
add
fsubrl
lea
icebp
cmpsb
inc
or
xchg
cmp
inc
inc
sub
mov
push
js
inc
xchg
filds
mov
shr
in
js
push
loopne
popf
clc
rcrb
cmovl
pop
pushf
outsb
cltd
pop
push
adc
negb
popa
adc
mov
mov
leave
gs
lahf
mov
or
call
push
fbstp
pop
dec
mov
pand
sahf
jno
imul
shll
sahf
out
fldcw
or
add
js
imul
adc
adc
lock
adc
pop
out
mov
std
inc
fbld
sbb
loop
sahf
mov
add
xor
stos
and
js
mov
ss
pop
push
mov
fs
clc
fstpl
jle
div
dec
cmp
or
lea
dec
fldenv
clc
in
and
lcall
mov
pop
stos
dec
cmc
nop
pop
add
add
pop
cmp
orl
mov
in
adc
cmp
or
stc
movsl
xor
sbbl
add
mov
push
xor
cmp
nop
mov
mov
in
loope
dec
outsl
sub
leave
push
jnp
shrl
lret
pop
lcall
push
ljmp
or
mov
sarb
pop
jae
or
and
imul
push
or
mov
fadd
jp
sub
and
xor
push
sub
xchg
fs
xchg
out
and
xor
fldl
lcall
jb
cli
mov
out
fidivs
dec
push
sarl
dec
xchg
loope
add
lcall
and
loope
ja
inc
mov
lds
mov
loopne
into
outsb
mov
aam
std
mov
lds
xchg
into
rorl
pop
fs
out
cmp
ret
movsl
push
jmp
lods
xchg
xchg
insb
cmc
cmp
xchg
pop
cmp
fisubs
imul
lea
push
sbbl
mov
insb
mov
sahf
lahf
out
push
pop
push
ss
es
loop
jmp
cltd
bound
push
cltd
xor
and
cwtl
cld
push
loop
pop
mov
adc
add
lock
inc
sub
jg
psllq
cmp
fistl
jmp
adc
xor
add
jle
jg
lret
dec
inc
lcall
sti
mov
std
mov
addl
pop
adc
xchg
out
inc
icebp
dec
sbb
stc
cmpsb
add
push
loopne
adc
sub
jp
pusha
iret
xchg
loope
mov
cwtl
sub
push
and
push
inc
push
mov
push
std
pop
test
adc
pop
in
mov
leave
or
or
xchg
pop
fdivrl
push
ss
repz
and
sbb
fildl
aam
push
fiadds
cwtl
js
cmp
cmp
xor
add
pop
add
lock
in
test
scas
rorl
orl
fsubs
push
mov
in
inc
xor
add
rorb
push
add
rol
je
cs
cltd
outsl
mov
adc
sub
mov
mov
es
cld
dec
jno
cmpl
scas
inc
pop
xchg
mov
mov
in
das
jo
mov
shlb
outsb
out
and
adc
leave
adc
mov
mov
test
jns
subb
js
imul
dec
repz
push
fisubrs
in
cmp
inc
inc
jb
imul
jae
adcb
sbb
hlt
out
int3
mov
and
push
adc
mov
add
test
popa
in
push
pop
cmp
xchg
fwait
pop
jnp
adc
insl
in
mov
sub
xor
stos
cmp
ljmp
jp
xor
mov
bnd
out
mov
push
mov
jg
lret
aad
iret
fsubs
push
pop
scas
into
jo
mov
hlt
mov
mov
mul
pop
or
rep
loop
hlt
leave
adc
sub
sarl
movsb
jge
popf
dec
ss
cmp
lock
push
das
jle
sbb
dec
or
leave
out
inc
mov
leave
sub
sahf
dec
sti
and
test
push
xlat
clc
inc
pop
ss
inc
roll
xor
push
xchg
pop
iret
out
mov
addr16
sahf
xchg
out
fs
xchg
ljmp
inc
xor
fistl
pop
in
dec
jecxz
mov
jle
js
movsl
leave
inc
dec
lods
push
mov
in
fisttpll
aam
hlt
jge
movsb
xchg
jmp
out
add
dec
cmp
sub
pop
das
push
sbb
lods
aas
mov
mov
jge
xor
and
mov
push
sbb
push
pushf
fdiv
mov
mov
pop
fcompl
inc
into
out
popf
push
xor
xchg
xor
push
insb
les
lret
mov
lcall
dec
test
lods
push
sub
fimuls
fcoml
ficoml
cld
mov
add
pop
int
mov
jae
add
mov
push
inc
or
scas
popf
push
movd
fldlg2
popa
out
cli
mov
orl
sub
lods
ljmp
stc
mov
lds
xlat
mov
and
cmp
jl
cmp
loopne
xchg
jle
push
push
jmp
xor
jno
jmp
xor
cld
scas
push
lods
mov
and
cmpsb
ficoml
fdivr
jne
mov
cmpsb
mov
inc
ret
pop
fdivl
or
and
xor
pop
dec
jg
in
cmc
sbbl
cltd
jge
ret
std
push
push
push
lahf
mov
mov
ds
inc
ljmp
pop
sub
arpl
imul
je
mov
jns
in
xchg
pop
and
xchg
loop
sahf
sub
jge
lcall
fdiv
out
push
jb
mov
push
shll
sbb
test
repnz
mov
dec
or
sarb
adc
cli
pop
jns
mov
inc
cwtl
pop
mov
imul
cmp
in
je
rclb
sub
and
mov
mov
out
out
icebp
sub
insb
xor
dec
sub
cmpsb
inc
push
jae
sub
notl
dec
xor
jp
cmpsb
inc
mov
add
dec
xchg
dec
add
fisttpl
xor
test
xchg
adc
jl
fs
inc
fbstp
push
repnz
popa
shll
test
or
outsl
pop
mov
dec
xchg
add
xchg
mov
les
xchg
dec
sub
out
sub
test
push
adc
xlat
repz
imul
mov
fbld
push
std
cs
cmp
mov
iret
or
mov
pop
aas
and
aam
rcrb
addr16
mov
sub
jle
subb
sbb
jmp
leave
fcmovu
mov
out
sbb
jg
or
imul
xor
shrl
ret
push
or
mov
add
jno
in
sbb
aaa
loop
xor
insl
orl
inc
jge
xor
int
sbb
mov
cmpsl
dec
mov
xchg
lea
cld
enter
adcb
dec
inc
ds
jo
adc
gs
push
imul
pop
mov
aas
dec
sbb
inc
add
jnp
inc
into
repnz
add
inc
or
push
xchg
les
mov
sti
jmp
dec
mov
aad
push
sbb
in
rcll
pop
sti
push
jge
es
inc
and
fsubp
cltd
sub
or
fistps
and
dec
jae
cmp
push
xor
add
mov
lods
mov
xchg
adc
and
sbb
outsl
clc
push
mov
cmpsb
repnz
fsubrs
fnstsw
test
lahf
jo
jne
testb
movsb
mov
or
mov
sbb
mov
pop
sbb
icebp
push
mov
dec
adc
mov
pusha
rorb
scas
mov
mov
mov
mov
outsb
aad
insb
sahf
sbb
mov
push
and
repz
lcall
cmp
out
or
fwait
cld
jecxz
push
lcall
push
movsb
mov
inc
fnstcw
jb
sub
cmpsl
push
in
add
sbb
xor
ljmp
lahf
adc
sti
into
mov
hlt
test
rorb
aaa
aas
xor
mov
rcll
mov
or
mov
fstpt
popf
sub
jnp
add
imul
dec
adc
pop
lods
sub
lods
push
shll
std
lea
mov
lret
fwait
movsb
sub
fsub
inc
sbbl
enter
lds
cmp
cmp
mov
cli
mov
xor
lret
lods
sahf
pop
mov
in
xor
clc
mov
sarb
ret
push
jl
ret
and
nop
stc
repnz
sbb
jne
add
and
adc
mov
jnp
popa
je
inc
popa
gs
xchg
roll
xchg
xchg
sub
mov
fildl
sub
xchg
scas
or
add
test
addr16
xorl
adc
stc
and
mov
xor
lret
test
addb
or
cmc
mov
pop
pop
mov
cmp
cmp
jge
popf
inc
les
test
subl
sbb
cmpsl
sbb
les
lret
movsb
js
xor
sbb
outsl
andb
out
push
test
repz
cld
mov
pop
jo
and
mov
das
sbb
shll
push
and
push
out
je
lahf
and
scas
add
into
testl
jg
imul
or
mov
xchg
fbstp
loop
adc
jg
addr16
cmp
and
data16
je
daa
jecxz
data16
and
xchg
cmc
sub
cmc
pusha
sub
cmpb
jl
nop
push
sub
and
cmp
movsb
and
cmp
mov
mov
push
inc
push
notl
adc
sti
scas
popf
push
out
repnz
xchg
xchg
cmp
dec
lock
stc
fisubl
jge
sbb
fidivrs
inc
pop
pushf
push
jns
repnz
mov
sarb
pop
sbb
add
cmc
or
test
cmp
mov
pop
sbb
xlat
mov
aam
popa
mov
mov
addr16
arpl
adc
mov
mov
add
mov
inc
cmpsl
xor
lods
insb
cmp
pushf
mov
out
push
sahf
or
mov
pop
movsb
sbb
or
xlat
cmpl
fistps
mov
or
test
pop
add
xor
je
mov
repnz
mov
lea
ljmp
sti
mov
push
mov
jne
addr16
jo
cmpsb
sub
pop
mov
das
cmp
daa
rorl
pusha
stos
imul
mov
rorl
dec
sbb
pop
addr16
push
in
pop
je
aaa
pop
mull
out
mov
cld
test
sbb
into
jbe
push
sub
mov
push
pop
mov
cmc
mov
pop
push
sbb
movsl
mov
adc
push
or
pop
cltd
mov
cld
cmpsb
sub
sti
fwait
pop
insl
xchg
ret
loop
dec
cmp
mov
mov
lods
test
insl
mov
dec
lret
lret
cmp
dec
in
jb
sbb
scas
out
addr16
mov
imul
lcall
mov
call
add
popf
gs
dec
pop
jb
in
mov
mov
loop
push
jnp
mov
cld
xchg
lret
pop
adc
ret
pop
daa
xchg
call
adc
ja
divl
test
sub
inc
insb
sbb
inc
mov
lock
jl
ficoml
nop
push
inc
inc
movsl
dec
std
sub
inc
out
cmp
in
jnp
sahf
pop
jl
scas
fsub
inc
lods
hlt
nop
fprem
insl
mov
pop
and
xchg
test
mov
xlat
mov
or
int3
add
addr16
iret
lods
sub
icebp
pop
cld
ret
fimuls
dec
xor
int3
ficoml
lds
cmpsl
pop
in
ret
sahf
sbb
cmp
movsl
insl
orb
test
add
inc
dec
addb
add
mov
push
sbb
and
sbb
out
mov
push
ret
in
push
pop
adc
stos
xchg
cld
xchg
add
mov
out
xchg
leave
jle
fcoml
std
push
fdivl
add
pop
dec
add
popa
sbbl
mov
insb
jnp
jns
and
ds
xor
jne
push
sub
popa
or
and
lock
mov
rcll
cmp
mov
xchg
inc
lods
rcll
idivb
lods
add
push
bound
cltd
lods
mov
push
int
mov
jle
sti
outsb
mov
mov
adc
pop
pushf
add
push
sub
imul
neg
jmp
jo
adc
ljmp
jbe
sub
sbb
adc
xor
xchg
bound
ljmp
jno
dec
mov
or
lock
out
outsl
cmp
loop
add
jo
adc
dec
shr
cld
mov
sbb
fwait
mov
or
testb
loop
jl
sbb
xlat
pop
xchg
cltd
sub
repnz
fstps
jmp
jle
inc
sbb
adc
jle
fists
sbb
sub
mov
pusha
stc
mov
mov
jno
jns
sub
dec
inc
sub
mov
push
dec
pop
repz
movb
cmp
repnz
outsb
sbb
add
repnz
pop
push
xor
dec
or
ret
mov
jle
sahf
adc
scas
jl
or
iret
fistps
js
in
lds
je
aas
cmp
add
push
pop
test
adc
pop
sub
out
js
aad
push
jae
sti
and
test
or
adc
sub
mov
cmp
add
push
and
popa
repnz
rclb
mov
fcmove
lods
cmpsl
mov
fsts
add
out
stc
or
and
test
xor
mov
cmp
lret
sbb
xchg
gs
pushf
inc
jns
imul
jb
test
mov
fldenv
add
dec
xchg
cwtl
dec
sub
shrb
movsb
mov
adc
add
fidivl
pop
testl
jle
jle
sub
sub
popf
push
fmul
adcb
xlat
pop
add
add
fsts
out
jle
push
xor
test
leave
adc
add
shlb
rcll
mov
mov
call
mov
test
mov
pop
xchg
jne
lret
xorl
insb
add
xor
shlb
cltd
inc
sahf
xor
dec
insb
imul
and
push
inc
or
in
mov
stos
dec
shl
jb
add
mov
popa
add
fildl
mov
js
cmp
sti
lds
mov
lods
pinsrw
and
pop
das
lds
cmp
sub
imul
and
adc
xchg
jp
xor
lahf
fwait
xchg
stc
mov
xor
les
inc
push
jmp
pop
mov
cmpsl
jl
adcl
stc
xor
adc
fwait
cmc
jb
mov
pop
or
dec
ja
xchg
fwait
jns
xchg
stos
addr16
push
movsl
dec
pop
inc
ljmp
rolb
xor
or
lods
jne
arpl
inc
inc
ds
dec
inc
lret
dec
add
push
mov
lea
mov
sbb
sbb
and
jp
mov
xchg
mov
jbe
cld
xchg
imul
cmp
add
push
push
std
lods
in
adc
mov
shl
insl
movsl
xchg
jp
scas
loopne
movsb
jnp
push
in
push
outsl
xchg
inc
sbbl
sbb
add
sti
js
xor
cwtl
mov
jge
fidivrs
push
fcompl
add
push
out
pusha
jg
pop
sub
sbbb
cmp
pop
cs
addr16
rorl
cld
fwait
or
fwait
xchg
xor
lods
ss
int3
je
orb
dec
inc
xchg
cmp
andb
outsl
pop
or
outsl
gs
sbb
jno
xor
pop
sub
or
cmp
gs
push
lcall
test
aad
leave
scas
cmpsb
shll
xchg
iret
mov
jp
fdivp
cmp
adc
mov
dec
jmp
mov
arpl
and
pusha
inc
ja
rolb
jp
jns
shlb
adc
loope
nop
xchg
std
mov
inc
xchg
xor
insb
dec
cmpsb
rcr
loope
push
data16
fwait
xchg
je
imul
push
inc
clc
mov
sub
add
pop
in
in
stos
lret
mov
mov
into
or
inc
and
dec
aas
cli
lret
cmp
sahf
jo
lret
xchg
hlt
dec
cmp
and
mov
andl
jecxz
push
adc
in
stos
pop
xchg
enter
popf
and
mov
push
adc
jo
fisubl
ss
mov
arpl
jne
push
xor
add
inc
shll
bts
jae
jl
das
mov
mov
pop
das
and
jb
inc
into
sub
out
ja
mov
out
jl
dec
cmp
jns
cs
or
mov
bound
cmpsl
out
dec
push
lcall
mov
out
jo
test
leave
sti
dec
cmpsb
loop
neg
mov
unpcklps
cwtl
push
mov
out
pop
leave
das
pop
pop
sub
xor
out
in
push
xchg
fiadds
and
scas
stos
aas
lret
in
subl
ficoms
sub
lret
xchg
xor
in
mov
adc
push
fs
inc
and
sbb
push
xchg
shrb
ds
mov
repz
pop
dec
cmpsl
mov
out
mov
pop
cld
subb
popf
ret
nop
jle
push
xchg
jae
adcb
and
lret
or
and
sti
leave
les
jge
inc
jno
push
movsb
jnp
cmp
cltd
pop
bound
popa
cltd
in
in
mov
getsec
jbe
mov
push
sti
sub
and
out
sti
lea
mov
xor
rcl
into
lock
hlt
sarl
or
xlat
and
mov
ficomps
push
es
repz
jl
sbb
int
ss
inc
cmc
fdivrl
mov
cltd
mov
mov
out
gs
js
negb
in
jb
jnp
and
add
pop
push
pop
into
and
pusha
ret
or
scas
lods
aas
mov
dec
iret
into
das
ret
push
add
hlt
sarl
in
sar
je
pop
jge
push
mov
push
lock
mov
clc
outsb
cmp
shlb
sti
inc
les
push
and
mov
mov
mov
push
outsl
ss
and
lods
std
or
lock
addl
dec
sbb
test
sbb
daa
push
mov
xor
jmp
clc
xor
cmp
push
pop
sub
sbb
mov
xchg
mov
adc
lcall
in
pop
adc
mov
jle
idivb
daa
push
lret
cmp
gs
lock
dec
popa
mov
push
push
pushf
int3
push
shrl
fildl
fadds
cmp
or
xor
sbb
repz
out
int3
xor
ja
or
and
xchg
push
and
fs
or
inc
enter
fildl
lahf
dec
mov
inc
xor
add
pop
and
mov
stos
sub
or
leave
cmp
stos
push
cli
mov
xchg
hlt
add
adc
imull
push
push
sub
clc
xlat
daa
pop
adc
aam
add
cmp
fs
into
add
repz
jge
mov
iret
wbinvd
xchg
shrb
fnstenv
sub
xchg
jno
adc
loope
xor
mov
shll
nop
lods
pop
into
sub
dec
out
cmp
aas
push
lods
xchg
mov
sub
adc
xchg
fwait
popa
cmpsb
popa
shrl
jg
out
in
cmp
pop
mov
and
ja
and
mov
in
sub
addb
insl
jle
testb
in
mov
aad
pusha
push
xor
jg
ljmp
dec
jne
and
jecxz
test
cmp
cmc
xchg
push
sub
push
xlat
xor
fstps
xor
push
das
push
mov
cltd
stc
ret
movsl
pushl
sub
xor
ds
push
cld
fucomp
fstl
in
into
push
mov
pop
lods
lcall
xchg
or
jl
data16
add
jo
inc
int3
cmp
negl
cmpsl
aaa
xchg
jae
dec
mov
add
xchg
adc
push
fidivrl
and
mov
movsbl
push
js
xor
cld
pop
or
mov
and
movsl
xchg
fistpll
lods
xor
fs
jmp
cli
add
jae
rep
mov
int3
jb
pop
mov
lods
mov
pop
enter
jns
xchg
pushf
ds
repz
jge
outsb
inc
or
sub
jg
mov
js
jecxz
sub
add
inc
je
inc
std
stos
xchg
leave
xchg
scas
push
jge
ret
pop
in
outsl
push
js
push
jle
call
or
xchg
or
cmc
mov
push
arpl
sahf
lock
push
int
inc
out
jne
into
incb
stc
jb
adc
mov
in
inc
loop
iret
daa
rcrb
hlt
mov
outsl
xchg
sarb
lods
call
lcall
ljmp
int
fwait
outsb
dec
popa
pop
aaa
sbb
aad
push
pop
jg
push
iret
sbb
cwtl
xor
xchg
mov
fxch
leave
push
sub
xor
aas
xchg
out
aam
out
out
jp
andb
xlat
fldt
mov
mov
je
push
cld
pop
xchg
subl
in
adc
testb
rorb
ss
fidivl
ret
or
push
addr16
pop
jmp
xchg
out
pop
or
jge
ret
scas
loopne
xlat
push
incl
int3
je
arpl
rolb
dec
mov
push
hlt
adc
xchg
sahf
ds
movsb
or
pop
or
push
cld
out
fbld
adc
mov
mov
push
iret
mov
adc
dec
or
test
out
jp
pop
addb
fisttps
fmull
cmpsl
lcall
ss
cmpsb
and
or
leave
rclb
or
sub
call
clc
and
stos
sarl
lret
adc
or
jb
xor
test
loopne
mov
lock
andl
lcall
add
hlt
sub
test
addr16
pop
scas
sbb
jae
mov
pusha
pop
jae
in
xchg
movsb
arpl
adc
jl
lds
inc
and
fstpt
out
xchg
aaa
pop
test
lcall
mov
and
inc
in
sbb
pop
mov
movsl
mov
mov
das
loopne
hlt
pop
rorl
lods
jmp
test
in
sbb
bound
sarl
popa
push
mov
movsl
filds
mov
jmp
dec
adc
mov
ja
scas
sub
int3
aad
scas
push
dec
mov
jmp
xchg
xlat
jbe
mov
rcll
push
shrl
jp
lods
xchg
ljmp
jns
xchg
pop
mov
fisttpl
pop
int3
aaa
add
push
adc
xlat
or
mov
dec
movsb
test
dec
sbb
and
adc
ss
jns
dec
inc
mov
pop
mov
neg
or
sub
andl
testl
mov
loopne
ss
sbb
in
or
or
adc
dec
outsb
sub
stc
fcompl
dec
mov
outsb
ja
pop
stc
pop
inc
ljmp
xorb
xor
mov
xchg
aaa
push
mov
and
cmpsb
xchg
bndldx
push
add
sbb
push
cmpb
lds
xchg
sbb
ja
fucomp
pop
or
push
cmp
xor
add
dec
outsb
scas
loop
popf
cmp
mov
cmp
sbb
push
pop
pushf
sub
lods
push
adc
aam
andl
test
sub
subl
xor
adc
mov
rcll
xor
fidivs
jno
add
cmp
xor
cmc
rorl
jg
out
mov
inc
or
and
pushf
cmp
femms
fcmovnb
pop
push
lret
mov
js
iret
jnp
ret
movsb
mov
mov
mov
pop
cmp
mov
xchg
out
xchg
scas
sub
lds
add
jmp
dec
xor
stos
loope
push
pop
adc
mov
adc
rcrl
push
dec
pop
jns
lret
jecxz
cs
out
inc
and
test
mov
pusha
loop
cmpsb
cmp
xor
and
xchg
ds
arpl
cmp
push
shl
lods
jnp
dec
icebp
pop
fnstenv
in
jecxz
pop
xlat
inc
mov
iret
jb
clc
outsl
popa
mov
adc
cmp
test
mov
leave
jns
stos
adc
cltd
test
xchg
add
mov
imul
xchg
mov
adc
xchg
insb
stos
adc
fidivs
insb
pop
into
es
mov
jno
aad
test
push
add
jl
clc
stos
andb
sbb
mov
mov
sub
adc
ret
pushf
inc
jne
mov
jae
dec
ja
jge
dec
dec
addr16
je
cmpsl
dec
call
int
int3
cmpsl
push
dec
cmpb
jle
dec
jno
dec
adcb
jno
int
or
pop
xchg
xchg
xchg
adc
js
mov
lock
cltd
push
stos
add
cmp
mov
js
sahf
cld
mov
mov
lock
push
push
lods
mov
es
ret
in
lcall
push
mov
mov
inc
mov
pop
imul
pop
push
inc
in
lds
shrl
or
xchg
repnz
pop
or
bndldx
dec
jge
xchg
imul
mov
lret
jb
stos
subb
repnz
dec
rcrb
cmpsl
inc
cmp
or
aad
mov
int
mov
jno
mov
or
lods
mov
lock
outsb
xor
es
or
dec
sbb
dec
dec
push
add
inc
sbb
stos
jmp
add
aas
jp
xor
xor
inc
adc
and
mov
push
das
int
mov
pop
mov
mov
frstor
loope
push
clc
cmp
xlat
or
fdivs
cmpsl
roll
push
dec
pop
in
jo
sub
jbe
testb
outsl
push
sub
pop
ja
test
test
icebp
inc
arpl
adc
jb
lcall
mov
test
mov
rolb
sbb
insl
pop
sbb
inc
popf
pushf
sub
outsl
int
stos
push
cmp
insb
mov
test
inc
cld
mov
pop
int3
cmpsl
xchg
push
out
movsl
push
mulb
shlb
rorb
jp
cwtl
and
sbb
jg
jns
jecxz
or
pop
dec
xchg
leave
add
stos
mov
mov
mov
test
pop
mov
insl
xor
imul
mov
test
or
lds
imul
mov
leave
int3
test
ds
pusha
loope
lea
outsb
mov
jns
fabs
call
repnz
shr
add
js
rcr
fcmovnbe
xor
fsubrl
cmp
xchg
xor
mov
test
out
out
leave
ja
inc
int
jno
pop
test
xchg
test
xchg
lds
rclb
adc
cmp
push
sub
dec
lahf
mov
cmpsl
daa
xlat
push
inc
xor
sbb
jne
sub
imul
cmp
jnp
mov
adc
je
mov
outsb
clc
cmpsl
js
xor
sbb
je
testb
mov
sarl
out
into
dec
inc
pop
jge
jne
mov
mov
inc
jo
outsb
add
inc
loop
stos
push
shll
jg
pop
in
movsb
push
jnp
ret
jne
and
inc
insl
gs
clc
push
rclb
dec
mov
jge
imul
hlt
mov
mov
in
jns
xchg
cs
add
dec
jae
aas
fimuls
in
pop
int
inc
rcrl
inc
dec
fmull
pop
jp
scas
mov
sub
pop
out
jp
pop
cmpl
adc
jge
add
stos
popa
mov
data16
idivl
je
ret
test
push
aaa
inc
rorb
insl
cmpsl
push
xchg
add
push
mov
andb
xor
rolb
stos
cmp
mov
fs
push
addl
cmp
mov
add
mov
mov
pop
loopne
jo
subb
ret
hlt
adc
mov
inc
jb
cwtl
cmp
sub
mov
cld
mov
jle
in
les
xor
mov
imul
mov
xor
loop
shlb
and
sbb
sub
jne
xor
imul
test
pop
dec
or
add
mov
or
mov
or
xorb
mov
lcall
test
lahf
xchg
test
repnz
arpl
fildll
mov
adc
outsb
fisttpl
cmc
xlat
push
pop
enter
mov
mov
pop
jle
icebp
ret
les
test
sarb
mov
mov
pusha
cld
aam
and
lret
out
enter
add
jns
ljmp
mov
cmpsb
push
scas
cld
and
and
test
mov
sbb
call
mov
cmp
mov
jo
ljmp
js
fcmovu
outsl
jecxz
mov
and
test
sub
mov
test
push
pusha
repnz
jp
gs
outsl
insl
mov
sbb
test
test
shlb
sbb
scas
mov
xchg
sarl
inc
fisttps
inc
or
cmc
sub
xchg
sub
loop
pop
or
jp
ret
fwait
fwait
xor
test
hlt
andb
ljmp
push
ret
pop
rcrb
outsb
jo
inc
daa
rcr
or
adc
ja
lcall
pusha
mov
faddl
andb
int3
inc
cltd
jnp
cltd
fs
rcl
popf
push
cmp
and
mov
iret
mov
mov
jecxz
fmull
hlt
and
out
xabort
pop
jg
enter
jbe
cmp
adcb
fimuls
mov
repz
es
cmp
sub
mov
mov
cwtl
cmpl
push
scas
mov
jg
push
pop
jecxz
pop
movsl
and
out
sub
in
mov
jl
mov
inc
shlb
ss
stc
jle
rorb
iret
andb
or
or
jmp
ljmp
jge
cmp
or
ret
add
or
push
adc
add
mov
sub
xor
dec
xchg
fstpl
jp
fimull
lahf
repnz
add
fildll
ss
push
lahf
fucomi
aas
mov
into
in
test
rcl
inc
loope
cmpsl
in
cld
jbe
test
dec
push
mov
add
jb
jmp
inc
add
cmp
mov
pop
mov
mov
insb
push
out
add
or
arpl
xor
inc
shll
outsb
out
adc
pop
aaa
mov
cli
fstpl
popa
ret
sbb
fisubs
cmp
cs
mov
pop
call
ja
cld
cmp
xchg
mov
inc
inc
mov
cmpsl
loope
sbb
pop
jmp
pop
mov
xchg
cmp
jg
pop
add
pop
dec
call
pop
ljmp
int
push
cs
push
sub
push
in
inc
addl
cmp
in
xor
mov
push
add
mov
pop
pop
push
int
mov
mov
mov
enter
inc
call
js
push
test
clc
call
xor
xchg
pop
pop
mov
fs
xchg
ret
mov
jg
push
pop
imul
push
sbb
add
inc
mov
outsb
cs
cmp
xorb
js
out
mov
mov
cmpsl
fld
leave
iret
mov
jns
cwtl
pop
das
fs
js
aam
cmpsb
test
sub
aas
repz
mov
lock
lret
in
add
cltd
adc
inc
adc
mov
inc
js
int
ret
popa
into
sahf
xor
iret
xor
aam
xchg
mov
fimuls
xchg
mov
fisubs
in
dec
mov
fimull
stos
sub
sbb
push
pop
data16
fmuls
xchg
je
sub
sub
iret
lods
je
lret
mov
inc
xchg
imul
pop
xchg
pop
loop
add
in
xchg
ret
push
push
lock
mov
sub
or
imul
or
pop
xor
dec
ss
js
add
adc
shrl
cs
fld
pusha
repz
mov
jb
pop
test
inc
fistpll
shll
and
cmp
aad
sbbb
sar
dec
xor
pop
lcall
mov
pextrw
jg
mov
lea
mov
push
mov
and
add
push
mov
inc
pushl
and
xchg
cwtl
dec
je
aaa
cmp
add
pushf
fwait
inc
lcall
mov
add
loope
push
cmp
lret
gs
xchg
out
fs
lock
jno
mov
bt
shr
mov
lock
cmp
pop
or
in
out
mov
scas
push
stos
loop
cmp
push
pop
push
cmp
adc
sbb
fcoms
imul
ss
mov
xchg
nop
aam
add
xor
out
stos
inc
xchg
jle
in
pushf
out
fmuls
and
clc
cs
out
pusha
int3
movsb
mov
int
orl
inc
jo
adc
outsb
loopne
xor
sub
xchg
inc
sbb
xchg
xchg
add
out
ret
inc
pusha
inc
push
ret
into
sbb
mov
subb
xor
pop
sbb
test
lock
cltd
lret
mov
or
movsb
sub
inc
add
lods
push
cmp
imul
pop
loope
sbb
repz
mov
or
mov
pop
cld
sar
test
orl
xlat
mov
std
mov
ds
and
xchg
dec
push
dec
loop
cltd
push
mov
jmp
fsub
das
mov
pop
jno
jge
ret
fisttpll
clc
fbld
call
mov
push
xchg
push
ljmp
ret
pop
lea
loope
fiaddl
and
sbb
xchg
test
or
inc
rcrb
dec
mov
aaa
push
hlt
test
and
sub
dec
stos
add
sub
or
ret
sahf
adc
inc
out
pushf
mov
mov
sbb
add
mov
inc
icebp
mov
cmp
mov
and
lods
in
adc
or
mov
faddl
fsubl
scas
jne
int
pop
ja
in
mov
sti
ljmp
cmp
dec
fisubs
test
orl
das
mov
lret
fists
push
sbb
xor
fsubs
push
sti
sti
push
xchg
fcompl
ds
adc
nop
xor
sbb
cmp
cmc
shl
pi2fw
cmp
add
dec
ret
data16
sbb
fcmovnu
sbbb
sub
out
dec
dec
loopne
jge
leave
inc
repnz
pop
repnz
das
push
pop
adcl
sti
inc
jecxz
xor
adc
stos
jl
push
daa
test
out
mov
xor
lods
popf
or
out
enter
pop
and
js
cmp
stc
or
sub
loope
jecxz
cmp
pop
xchg
cltd
stc
xor
xchg
and
adc
outsl
je
mov
jns
scas
mov
hlt
adc
mov
das
call
cmp
xchg
fs
mov
or
mov
fsubrl
mov
pop
lods
fwait
and
mov
jns
jp
cmpsb
stos
dec
insb
push
sahf
test
ficompl
mov
xor
xor
pop
into
jbe
cld
std
push
xor
inc
mov
fidivrl
scas
sbb
movsl
dec
mov
xor
insb
sub
sub
test
or
push
inc
mov
dec
dec
xor
dec
insb
pop
lods
adcl
jg
pop
orb
pushf
dec
notl
mov
daa
lods
sbb
popl
arpl
or
inc
mov
xchg
or
mov
xor
pop
mov
std
inc
sti
dec
and
mov
cs
inc
aas
insb
mov
and
sbb
adc
aas
or
add
xor
std
ret
dec
adc
orl
mov
jns
xchg
push
loop
jmp
xchg
inc
lahf
std
cmp
dec
push
xor
cmp
pop
loopne
push
sub
push
xchg
inc
pop
inc
fs
or
in
adc
into
pop
xchg
mov
sub
imul
mov
pop
rorb
lcall
dec
and
or
divb
xchg
xchg
mov
out
ret
xchg
sub
jecxz
xchg
jp
movsl
adc
cmp
dec
xor
loopne
in
mov
jb
jae
dec
int
fiaddl
jns
lret
call
jno
out
cmp
sbb
xor
addr16
adc
cltd
sti
ss
jg
gs
xchg
aaa
lahf
repz
in
dec
lret
push
data16
sub
pop
test
dec
fcomps
mov
arpl
les
js
insl
xchg
adc
push
jmp
add
ret
push
dec
lea
adc
dec
sub
jae
pop
cli
das
adc
sarl
pop
adc
stos
sub
jp
sbb
je
in
or
pop
test
push
push
push
xchg
mov
push
and
ja
loope
mov
push
xchg
xchg
mov
ljmp
xor
push
scas
cmp
jp
mov
mov
sbb
sub
dec
xchg
mov
sub
jle
stos
add
mov
jle,pt
and
cwtl
xchg
xor
mov
mov
push
in
call
stos
mov
adc
fistl
push
push
fwait
inc
mov
notb
popf
xchg
repnz
fs
mov
pusha
bound
adc
scas
lods
sub
mov
fdivrl
cmp
ja
fsub
mov
xor
dec
iret
dec
mov
mov
mov
call
xchg
or
mov
clc
or
jne
fcompl
inc
es
out
stos
mov
lcall
outsb
mov
dec
xchg
scas
fistpll
mov
jmp
mov
mov
rcll
shlb
test
xchg
cmp
and
adc
in
es
cmp
push
cmp
cmpsl
jne
shrb
rolb
mov
insl
pop
das
dec
jns
mov
inc
lcall
hlt
outsb
pop
push
inc
fiaddl
inc
imul
mov
pushl
das
adc
in
mov
out
testb
es
pop
mov
repnz
mov
pop
xchg
nop
mov
jmp
fcompl
mov
aam
xor
pslld
add
inc
push
pop
iret
dec
mulb
std
lret
push
dec
sbb
int3
dec
stos
test
orb
iret
xor
sarl
stos
mov
xor
push
mov
jle
loope
imulb
or
and
shlb
ss
mov
iret
dec
and
dec
ja
mov
inc
into
dec
arpl
xchg
in
ljmp
outsw
xchg
jnp
xchg
xor
jns
or
cmp
sarb
out
mov
out
xor
daa
or
and
inc
hlt
pop
imul
test
arpl
lahf
ficomps
daa
in
int
std
mov
into
add
or
loopne
fsubs
xor
dec
dec
stc
sti
or
divps
rclb
dec
mov
data16
cmp
sbb
scas
stos
fnstsw
mov
pop
jg
int
repnz
and
inc
or
insb
add
cmp
int
adc
xchg
popf
inc
in
push
arpl
loop
stos
fsts
lods
adc
mov
orb
sbbb
mov
stos
push
pop
jno
das
out
mov
gs
jne
repz
and
out
sbb
lods
mov
add
jo
mov
data16
repnz
mov
add
mov
pop
sub
cwtl
lock
or
mov
adcl
sbb
int3
mov
stos
js
mov
sbb
xchg
sub
push
hlt
pop
fdivs
sti
push
mov
mov
sbb
fmull
gs
mov
in
pop
xchg
adcb
popa
fidivrs
imul
xchg
dec
sbb
stos
xchg
push
push
iret
rcr
outsb
sarl
and
enter
lods
out
cld
jb
lods
jbe
mov
and
ror
fbld
push
and
icebp
mov
jp
add
and
mov
std
in
clc
sbb
out
cmp
and
test
int
jns
push
sbbl
or
pushf
iret
in
pop
popf
sbb
or
mov
das
cs
hlt
or
mov
mov
push
stc
xchg
pop
stc
mov
xorb
sbb
xchg
in
stos
inc
faddl
out
lret
mov
xchg
rcll
lds
add
pop
sub
mov
pop
push
rorl
add
cmc
xor
cmpb
push
lds
pop
rcr
pop
andl
out
pop
pop
cs
mov
aad
and
add
inc
bound
imul
mov
add
sbb
je
psrlq
cmp
ja
xchg
inc
or
lret
jp
inc
xchg
xor
push
xor
mov
mov
mov
in
or
arpl
repnz
aas
and
add
insb
mov
cs
sub
ja
pop
mov
negl
mov
fsub
test
sarl
jno
insl
es
dec
aad
lods
cmp
cmc
dec
add
sbbl
xor
stc
xchg
lea
sub
gs
in
jmp
pop
jle
test
mov
je
xor
or
lds
cltd
call
out
pushf
and
sahf
leave
adc
and
pushf
mov
subb
xchg
lea
sbb
imulb
add
sub
sub
inc
js
inc
cmpsl
mov
fistps
adc
ljmp
adc
lea
sub
xor
in
pop
xchg
int
inc
stos
jno
and
pop
inc
push
popa
lahf
push
repnz
les
in
mov
mov
add
into
ret
push
sub
pop
add
xlat
adc
in
xchg
cmp
rcl
mov
div
inc
outsb
push
dec
cmc
pusha
pop
jge
outsl
fidivrl
add
cmp
mov
cmp
add
push
xorb
fsubrl
pop
mov
lcall
pushf
leave
pushw
dec
mov
and
sub
ja
loop
sbb
xor
rcr
jg
sub
loopne
push
push
dec
hlt
jbe
test
mov
dec
and
add
add
sub
into
dec
call
data16
dec
or
dec
aad
sbb
adc
icebp
jecxz
or
cs
push
mov
sbb
jnp
xchg
icebp
test
jne
imul
into
test
xchg
fnsave
fiadds
call
arpl
in
cmc
stos
or
jne
mov
mov
xchg
nop
fndisi(8087
icebp
fcmovb
jae
sub
leave
jae
mov
jmp
imul
add
sbb
loop
nop
xchg
cmpsl
lds
shlb
mov
xlat
aad
sbb
pop
xor
jo
std
gs
fbld
jmp
sbb
aad
mov
cwtl
ja
scas
scas
xor
xor
dec
mov
bound
cmpsl
adc
test
xchg
lcall
stos
pushf
mov
push
lret
xchg
repnz
out
outsl
dec
int3
sub
or
jbe
movb
std
fs
rorl
lcall
jle
sub
insl
adc
or
mov
sub
inc
mov
shll
icebp
push
cltd
mov
xchg
in
sub
sbb
add
test
es
rolb
sbb
int3
lods
lock
sti
mov
int
jmp
push
daa
shr
or
jg
or
decl
add
jge
sub
fldl
inc
dec
stc
ds
sbb
and
xor
lcall
mov
ficoml
fdiv
stc
adc
push
in
cmp
jno
daa
jle
jecxz
jecxz
push
aam
add
lret
cmpsb
push
fistl
xor
rorb
repz
pop
ljmp
int3
gs
pop
sbb
cwtl
test
jle
pop
out
lds
out
outsb
mov
fdivs
jle
stos
outsl
xchg
pop
jl
push
cmp
loopne
in
sub
cld
ret
xchg
xor
sub
mov
sar
pop
dec
adc
push
fisubrl
mov
icebp
push
xchg
scas
jle
jno,pt
dec
adc
add
cmp
enter
jb
xchg
and
or
mov
xor
out
cmp
push
push
testb
cmpsb
sub
ret
cmp
test
mov
outsl
in
mov
fwait
dec
pushf
imul
shlb
pop
insb
push
cmp
sub
sbb
idivb
add
in
js
inc
into
orb
or
mov
in
dec
call
in
out
ss
outsb
in
jae
dec
mov
xor
mov
in
lcall
add
xor
iret
pop
cli
test
shll
jbe
jmp
jns
lds
xchg
jbe
test
nop
out
jg
lea
rcrl
subl
mov
mov
cmc
cmc
lods
push
lock
push
or
mov
or
and
ret
and
jnp
pop
les
sbb
loopne
jno
cli
outsb
xchg
jae
loop
out
cld
mov
mov
pusha
jl
lds
xorb
roll
mov
mov
jmp
push
std
and
gs
ja
subb
loop
pop
or
bound
popa
xorl
into
xchg
jnp
mov
loop
divl
and
push
xor
xlat
xlat
mov
movsl
cmp
std
or
fwait
icebp
jae
jle
into
jmp
imull
or
movsl
add
ja
scas
jno
mov
xorl
xlat
mov
rorb
jns
int
fidivrl
xor
pop
lahf
push
push
ljmp
jl
mov
aad
imul
adc
jg
orb
xchg
rorl
mov
jae
data16
insl
add
push
shrl
push
mov
cmpsl
fisubrl
and
ret
icebp
cmp
pushf
xor
je
push
inc
shll
lock
mov
aaa
xchg
cmpsl
mov
iret
xchg
out
adc
cwtl
mov
ds
decl
and
cmp
xor
cmp
sbb
pop
push
mov
loopne
ss
je
test
or
sti
fmuls
dec
xor
pop
dec
imul
or
mov
dec
mov
pop
jmp
xchg
icebp
mov
pop
aaa
push
or
pop
gs
cld
or
pushf
jmp
out
sub
xchg
aas
lock
repnz
rcr
jp
in
xor
loopne
inc
cld
ss
dec
arpl
mov
shl
xor
dec
jbe
sbb
mov
in
or
pop
hlt
out
add
bound
jbe
movsl
mov
mov
push
pop
jmp
sbb
mov
and
adc
push
dec
push
pop
lea
add
stc
cld
jle
sarb
pop
mov
jecxz
push
and
iret
sti
mov
push
loopne
pop
mov
out
in
imul
in
xchg
rolb
test
repz
rolb
scas
sarl
ror
test
cmp
sub
mov
adc
push
mov
xchg
in
sbb
in
xchg
xchg
imul
xchg
push
addr16
sub
test
scas
adc
xchg
and
or
in
pop
xchg
shl
push
mov
mov
push
scas
lret
mov
mov
shlb
sub
push
inc
ds
mov
gs
shlb
dec
ficomps
jle
fbld
mov
pop
jns
or
xor
push
xorb
adcl
adc
aas
sbb
repnz
aad
rorl
inc
out
mov
ljmp
test
push
mov
fcoml
push
rorb
mov
pop
aaa
sbb
stc
repnz
out
ret
imul
mov
inc
jle
sub
pop
sahf
les
push
and
cmpsl
sub
push
fcmovb
int
int3
cmp
pop
in
mov
fnstenv
aam
pop
jns
rorb
jno
fistps
mov
or
lods
aaa
push
jmp
ficomps
fcomp
xor
cmc
push
js
in
insb
adc
xchg
std
jne
add
jo
adc
mov
sub
cmp
or
or
inc
adc
mov
sbb
addr16
scas
loope
nop
sahf
cmpxchg
je
fcoms
xor
stos
add
lods
push
pop
dec
add
hlt
and
sbb
push
int
das
shlb
push
arpl
add
sbb
popl
mov
aam
sub
dec
dec
push
stos
dec
mov
jmp
lahf
adc
sar
mov
int3
and
out
pop
mov
xor
shll
lret
mov
sub
dec
out
fs
push
jmp
add
inc
rolb
sub
push
out
add
ja
aad
push
in
add
repz
pushl
mov
in
xor
add
mov
jbe
out
mov
mov
mov
push
enter
xlat
data16
dec
into
adcb
mov
sbb
xor
sub
dec
and
aaa
jge
adc
pop
jmp
cmp
jmp
sub
mull
cltd
xchg
adc
rorl
xchg
push
cmpsl
stos
gs
scas
jne
xor
bound
je
hlt
fstl
lds
outsb
sub
gs
pop
cmc
mov
dec
or
subl
xchg
std
mov
pop
insl
imul
test
cmpsb
push
fdivl
pop
mov
xchg
aas
popa
out
rorl
ret
iret
cltd
out
adc
sbb
push
xlat
push
orb
push
iret
mov
adc
aam
lret
in
sub
pop
fnstcw
mov
inc
add
inc
mov
std
pop
inc
jne
sti
call
lods
xor
dec
mov
mov
sbb
in
pop
call
mov
lds
int
mov
cli
pop
inc
subb
jge
xchg
test
jp
imul
pop
dec
arpl
mov
shll
iret
out
sub
inc
mov
mov
or
cld
hlt
jle
iret
dec
stos
jne
cmpsb
inc
mov
ds
js
push
es
ljmp
stos
add
daa
notb
push
lahf
loope
jmp
repnz
shll
in
mov
adc
mov
push
lock
repz
xchg
dec
pop
push
jmp
pop
vmovntpd
pop
es
adc
dec
popa
ljmp
mov
mov
out
ljmp
mov
ljmp
push
leave
fbld
xchg
aas
push
add
dec
out
adc
dec
sub
xor
out
out
mov
fdivp
add
push
enter
rcr
cld
sub
shl
add
dec
fcomi
sub
xchg
into
push
es
jecxz
mov
mov
outsb
ret
or
lock
pop
cmpsl
cmc
scas
incb
jns
jmp
enter
mov
rol
loop
fists
lcall
dec
aaa
popa
lahf
jg
ljmp
outsl
aas
das
mov
enter
loope
bound
in
xchg
push
out
xor
ja
jg
ret
xchg
and
ficoms
xor
loop
mov
push
outsb
aas
sbb
fiaddl
or
leave
test
popf
mov
cmp
sahf
inc
sub
mov
out
rcrb
mov
jge
mov
cmpsl
xchg
and
cltd
ljmp
dec
mov
jp
mov
mov
jmp
lods
ficoms
inc
jp
or
enter
negl
shrl
stos
mov
stc
sbb
and
xor
xchg
add
adc
sbb
sbb
mov
mov
or
push
cli
sahf
inc
sbb
sbb
mov
cmc
aam
or
cltd
cmp
repz
lret
loopne
sbb
adc
xor
push
cli
mov
lock
mov
outsb
pop
cmp
xor
sbb
and
push
xchg
inc
xchg
push
lcall
jp
jecxz
pop
jle
or
mov
push
cmp
xchg
std
nop
dec
pop
mov
outsl
icebp
cmp
dec
sub
out
mov
inc
es
fs
addr16
lds
cmp
push
lods
push
jno
xor
jmp
jae
mov
fcomip
mov
aad
jl
push
pop
pop
jmp
inc
sub
jno
adc
out
aas
inc
inc
or
verw
rcl
cmpl
lcall
insl
and
bound
sub
sub
cmp
jmp
ss
clc
lahf
xchg
mov
jecxz
dec
pushf
or
popa
ds
mov
rcll
mov
fildll
add
pop
mov
add
xor
arpl
lcall
sub
out
ja
sbb
mov
not
icebp
nop
ret
sti
inc
sbb
and
xor
sub
mov
add
jnp
inc
lock
shr
fmul
stos
shrb
push
push
xchg
pop
inc
imul
bound
push
loop
imul
add
inc
into
xchg
xorl
flds
sbb
cmpsb
test
test
jb
xchg
fistpl
inc
je
xchg
inc
mov
popa
sub
or
xchg
sub
stos
arpl
adc
and
fadds
lods
lock
sub
xchg
cs
lds
xor
mov
cmc
aaa
lret
xor
dec
pminsw
fmul
jle
xlat
inc
jne
cmpsb
sbb
pop
ljmp
mov
inc
mov
out
das
jg
add
aam
cwtl
xchg
and
add
loop
je
js
xlat
add
or
pop
cmpsl
fs
jl
aad
dec
lea
or
xor
cmp
dec
sub
push
jmp
ja
xchg
xlat
push
xor
cmp
daa
mov
push
fs
faddp
mov
das
add
jg
fisttpl
mov
jl
mov
sbb
sub
bound
in
and
hlt
inc
cmc
sbb
and
stc
scas
xchg
adc
sbb
jbe
sbb
stos
das
stc
sub
loop
mov
repz
imul
in
test
int
ret
pop
jge
jbe
test
sub
or
pop
into
mov
cmp
sbb
ds
ljmp
dec
lods
mov
mov
sahf
cltd
dec
sbb
ja
cs
mov
in
hlt
pop
sub
icebp
sbb
jns
in
inc
lea
stos
cmpsl
sbb
jg
pushf
lods
psubb
jb
push
cwtl
mov
iret
loope
int3
std
xchg
popf
sahf
repnz
js
ja
jo
out
or
fistpl
adc
and
and
xor
mov
add
mov
pop
cmp
repnz
arpl
in
pop
xchg
setge
sub
mov
sti
cmp
int3
fsubs
sub
je
lret
inc
scas
xor
fistl
adc
pop
push
clc
ret
js
push
pop
imul
sti
cltd
iret
mov
je
fcmovnu
pop
sbb
divb
sub
or
in
inc
xchg
jnp
inc
push
inc
cmp
sub
lahf
in
dec
jl
push
lods
mov
push
stc
dec
arpl
jnp
add
xchg
mov
in
rcll
test
xchg
xchg
cmp
mov
icebp
add
and
popa
mov
push
rcrl
int
lea
sbb
lock
pop
fmul
pop
data16
in
push
cmp
insl
mov
push
add
sbb
mov
jp
loope
les
cli
jb
roll
mov
lea
dec
aam
subb
cli
dec
jmp
add
push
xchg
cli
mull
push
enter
es
hlt
js
dec
call
xor
call
lcall
dec
inc
dec
fcoms
sbb
adc
aam
push
sbb
mov
xchg
lret
cmp
inc
aaa
sbb
add
idivl
pop
jbe
push
in
and
add
addr16
jmp
inc
mov
mov
add
xor
xor
add
mov
scas
aaa
lahf
push
lds
pop
cmpsl
nop
jnp
mov
ror
fistl
mov
xlat
outsl
insb
rorl
scas
and
add
push
or
lods
mov
dec
out
add
xchg
inc
in
xchg
mov
cltd
repnz
das
fwait
out
mov
pop
fisttps
int
rcrl
or
pop
xlat
dec
lods
xor
inc
call
and
or
pop
xor
aad
xor
rorl
imulb
loopne
push
fucomip
sti
test
mov
jb
mov
pop
outsb
in
dec
fwait
clc
clc
xchg
popf
adc
xor
jo
dec
mov
pop
dec
jne
in
out
add
cmp
andl
lds
cmp
push
fcomp
ds
in
inc
roll
jae
jecxz
mov
pop
sbb
cmp
mov
ficompl
ficompl
push
ss
stc
and
mov
mov
test
out
insl
sbbb
sbb
mov
sub
movsl
pushf
in
mov
rolb
jns
xor
xchg
inc
xchg
push
std
ret
jge
inc
cwtl
loop
cmp
adc
mov
test
pop
test
sub
int3
mov
ja
mov
jno
add
sbb
sub
ljmp
push
test
mov
jae
inc
mov
out
adc
pop
out
insl
dec
xor
jecxz
sbb
sahf
stos
add
pop
pop
mov
test
int
daa
and
ficoms
fcoms
adc
adc
sbb
aas
push
add
cltd
loopne
push
stos
jae
dec
ss
jmp
and
mov
gs
mov
or
out
stos
push
mov
loope
mov
lahf
mov
call
rcrb
dec
xor
mov
sbb
shll
pop
mov
dec
fiaddl
imul
test
arpl
sbb
push
pop
hlt
adc
orb
cmp
or
jae
test
nop
test
sti
mov
loopne
nop
fidivs
mov
mov
es
outsb
adc
aas
stos
mov
add
cmpsl
xchg
or
js
xor
lods
inc
adc
fimull
pusha
mov
pop
and
outsb
mov
test
daa
push
rolb
rclb
or
xor
or
xchg
rcl
inc
out
and
xchg
pop
pop
xchg
outsb
sbb
add
cmpsb
scas
loope
mov
jmp
xor
mov
int3
push
clc
and
test
pop
outsl
add
xor
xchg
jmp
xchg
xlat
stc
lock
int
push
push
mov
repnz
notb
and
test
mov
out
addl
adcb
in
rcl
les
jns
jno
cmp
push
xor
push
insb
add
jno
jecxz
xchg
idiv
insl
fs
insl
test
aas
xchg
jmp
jb
xor
push
mov
into
pop
cld
fildl
dec
aad
or
mov
in
pop
out
xchg
lcall
cmp
push
mov
mov
out
dec
data16
pop
rol
push
xor
aad
test
gs
jo
add
adc
push
in
lods
daa
sub
sbb
mov
push
mov
sub
cmp
call
fmul
fstpl
push
stc
adc
fidivrs
adc
cmp
mov
arpl
ss
sbb
scas
scas
aaa
cld
sti
dec
adc
out
lcall
repz
test
mov
fwait
rclb
lock
movsb
pushf
sub
pop
inc
nopl
pop
dec
bound
fdivl
in
push
xchg
leave
and
pop
insl
xor
xor
loopne
dec
push
popf
xor
test
jne
insb
xchg
mov
repnz
lret
mov
roll
push
sbb
mov
popa
imul
mov
sub
cmp
adc
push
orb
inc
pop
mov
cmp
adc
cmp
stos
mov
push
enter
add
pop
xchg
mov
leave
xor
dec
loop
outsl
mov
pop
push
and
sarl
sub
scas
jge
sub
movsl
dec
sub
sub
fcoms
pop
fwait
mov
and
push
pop
jecxz
lods
pushf
and
dec
mov
test
adc
pop
fistps
push
mov
jl
jae
scas
mov
je
sbb
pop
adc
xor
aam
mov
add
sti
pop
cs
test
mov
push
ja
daa
scas
cmp
xchg
std
cmp
cmp
cld
lods
mov
mov
sub
loope
test
mov
add
mov
push
xor
out
imul
mov
inc
inc
fwait
std
test
jne
jmp
cs
sbb
xor
xchg
dec
scas
xchg
pop
cwtl
ja
cld
div
jns
jg
add
je
mov
inc
mov
int
xchg
jbe
cmpsb
xchg
lcall
adcl
rol
repnz
xor
dec
inc
jg
mov
mov
test
movsb
cmpsl
jo
ss
ss
ds
cmpsl
push
test
xor
pop
in
movsb
push
imul
jl
sbbb
jg
or
sub
ja
adc
int
jg
adc
inc
adc
ds
ljmp
mov
mov
sbb
and
jp
cmc
testl
push
push
inc
mov
into
and
xchg
subl
push
and
xorb
mov
test
jmp
cmpsb
fists
xor
in
in
cltd
push
mov
pop
add
mov
sub
cmp
mov
mov
mov
pop
pushf
ficompl
rol
mov
jmp
out
push
sub
cmpsb
mov
cmp
fisubs
pop
xor
les
pop
lret
mov
jmp
mov
jo
sub
loope
pcmpgtd
cmc
aam
mov
sbb
push
mov
movsb
add
jle
sbb
in
mov
push
and
je
jb
and
inc
lret
cmp
fdiv
xor
adc
lcall
push
sti
fs
sarl
out
cmp
test
add
imul
fnsave
cmc
or
push
or
int
fisubrl
xor
es
cli
pop
or
mov
dec
xor
gs
in
sub
stos
mov
mov
aaa
jecxz
push
roll
mov
jl
pop
into
and
shlb
enter
mov
jne
mov
stos
sar
add
jle
aam
popa
es
lret
xchg
dec
mov
popa
loopne
test
push
sbb
mov
inc
insl
xchg
xchg
inc
pop
jae
cmp
ret
out
dec
pop
cmp
cld
sarl
pop
test
jne
shl
inc
jnp
les
stc
mov
jae
fists
push
dec
popa
lock
stos
iret
shlb
mov
mov
add
add
f2xm1
and
mov
loope
sub
push
pop
jo
fwait
pop
cmp
lds
push
stos
imulb
xchg
xor
int3
sbb
add
dec
push
sbb
ss
out
xchg
push
in
add
xlat
xchg
adc
push
push
mov
outsl
mov
xor
test
les
int3
in
mov
fst
in
mov
jnp
mov
insb
xchg
js
sbb
and
push
insl
arpl
jns
std
add
bound
dec
adc
sub
pop
pop
add
push
dec
mov
mov
dec
sbb
cs
push
fsubl
sub
inc
xchg
out
out
iret
jmp
or
add
insb
test
clc
cwtl
hlt
push
ret
adc
addb
cmp
aas
dec
mov
mov
cmp
jnp
sti
cli
jnp
and
sti
out
mov
dec
push
les
sbb
jnp
mov
mov
pop
scas
lock
add
outsl
addr16
mov
xor
mov
sub
sbb
in
scas
mov
xorb
fdiv
adc
shr
sub
ss
add
fwait
in
mov
adc
mov
lock
aad
sub
mov
insl
pand
add
cmp
sub
loopne
popf
inc
hlt
loopne
jecxz
lahf
sbb
fidivl
sbb
or
rcrl
mov
loopne
sti
filds
and
aad
push
cmp
xor
xor
adcl
jge,pn
mov
test
pop
jmp
cmpsb
xchg
jge
or
outsl
stc
shll
daa
pop
xor
lcall
pusha
clc
push
outsl
fidivrs
jmp
les
shl
movsl
rcrl
xchg
inc
pushf
fidivrl
popa
xchg
fists
cmp
jno
pminub
mov
pop
int3
fsubp
dec
fwait
cld
sub
out
stc
mov
push
mov
pop
std
xchg
or
xchg
mov
push
in
loop
add
mov
and
jnp
push
push
movsb
xlat
push
arpl
xor
repnz
inc
sbb
lds
add
std
jg
popf
ret
inc
fwait
jno
xchg
jl
mov
aam
psrld
dec
add
jl
push
push
lcall
std
out
jbe
sarb
dec
lahf
jno
lods
fninit
dec
leave
and
rcr
mov
or
fdivrl
fs
cmp
push
mov
mov
test
push
aam
mov
mov
ret
test
repnz
mov
cmp
jb
xchg
sahf
push
pop
test
jns
or
adcl
xor
xor
in
shr
into
std
sub
dec
ficomps
fcomps
add
pop
sbb
jbe
jle
xor
repz
cwtl
jns
mov
daa
jne
inc
xlat
mov
sub
xchg
fists
cmpl
mov
inc
mov
xor
repz
pop
aad
paddusw
test
popf
aaa
mov
fisubrs
push
push
test
mov
in
xchg
cmp
add
shll
cmp
jmp
push
adc
push
jbe
xor
xor
call
cmp
faddp
out
out
mov
rclb
cltd
pop
push
js
or
out
jb
ds
jmp
lods
inc
sub
jnp
je
sbb
pop
inc
movb
xchg
sub
insl
adc
ja
fimull
sbb
dec
fisubrs
push
nop
insb
arpl
sub
mov
fisubrs
imull
pop
fisttpll
pop
into
popf
pop
and
int
and
cmp
mov
or
add
pushf
mov
scas
xor
sbb
ficompl
into
push
push
add
stos
js
shlb
and
xchg
bound
sti
jle
dec
gs
daa
movsl
arpl
cmpsl
add
jg
fisttpl
jle
dec
into
fcomps
fidivl
pop
dec
cmp
pop
leave
ja
imul
mov
in
std
pop
fbstp
in
xchg
push
xchg
adc
fdivs
pop
lret
repnz
or
adc
and
and
jbe
adc
mov
adc
lods
test
inc
lahf
sub
rclb
sub
ss
scas
xchg
push
or
cmp
scas
jo
jg
shll
adcl
ret
adc
inc
or
int3
add
mov
dec
test
lds
xchg
mov
mov
std
mov
mov
pop
jbe
out
rorb
cmpsl
outsl
xor
jp
xlat
inc
xchg
insb
cmc
jmp
loope
xchg
mov
pop
inc
aad
and
jmp
jo
mov
test
inc
mov
sarb
mov
popf
stos
add
pop
int3
push
jp
sbb
mov
pop
fbstp
jecxz
icebp
dec
fidivl
sti
mov
add
hlt
adc
aaa
inc
push
cmp
inc
js
lret
add
pop
je
enter
pop
cmpsl
jmp
xor
lods
orl
mov
xor
hlt
jmp
xor
nop
jg
test
push
daa
add
outsb
ror
inc
sbb
daa
sub
fptan
cli
mov
sub
pop
fwait
and
and
push
icebp
cld
pusha
loope
pop
popf
xlat
cli
loop
jo
cwtl
lds
loop
pusha
add
xchg
xchg
das
loope
outsb
add
faddl
jg
sub
pop
sbb
sbb
jnp
mov
mov
frstor
das
pushf
aad
in
loope
lret
and
xchg
loope
cmc
xor
pop
je
cli
shrl
imul
cld
and
xchg
jno
jbe
adc
jb
cmpsl
ficomps
and
out
setg
pop
jmp
pop
scas
fmulp
mov
cmp
mov
sahf
daa
mov
dec
das
inc
xor
or
mov
dec
dec
aam
push
mov
jnp
pop
aad
fs
jne
xor
inc
mov
in
push
test
push
push
mov
int3
jo
inc
add
outsb
aas
dec
and
dec
adc
pop
enter
daa
and
cmp
mov
rcr
popf
jne
divb
mov
and
movsb
jecxz
jne
push
test
xor
jl
flds
ret
in
aam
scas
pop
push
cli
cmpsb
inc
outsb
pop
mov
in
mov
and
andl
jmp
sbb
ss
es
imul
imul
jmp
mov
cld
jbe
test
xchg
pop
adc
sub
add
out
ud1
lods
in
add
inc
jmp
repnz
fidivl
inc
mov
fistpl
jae
ljmp
xchg
sub
pop
ss
xchg
cltd
addl
push
mov
sbb
xchg
and
in
adc
fs
sub
movsb
sub
imul
inc
sahf
fdivs
mov
outsl
jecxz
xchg
std
ljmp
sub
cmp
cmpb
shrd
orb
addr16
adc
mov
xchg
add
pop
insb
pop
mov
mov
stos
sbb
add
push
or
insb
aas
stos
aaa
mov
popf
orb
into
push
in
sarl
outsl
loop
sahf
push
mov
add
jae
das
cmp
fsubp
loop
xor
xchg
push
repnz
cmp
das
add
inc
and
rcll
repnz
sub
cmpsl
lret
test
leave
mov
inc
mov
outsb
scas
jne
into
negb
push
jle
pop
repnz
jbe
mov
mov
pusha
mov
inc
stos
ss
stos
mov
test
xlat
nop
push
dec
pop
das
xlat
mov
sbb
out
push
pop
xor
push
xchg
subb
push
lds
enter
push
push
cmpsl
dec
jge
sarb
sub
pusha
jb
xor
xchg
dec
lcall
mov
iret
sbb
jecxz
xchg
xlat
stc
loop
cmpsb
add
mov
neg
add
out
push
daa
dec
or
je
push
inc
mov
inc
and
xor
stos
test
addb
xor
shll
sbb
jnp
shrl
or
lods
cs
jae
fwait
aad
shl
inc
popf
cmpsl
xchg
dec
lods
sub
xchg
addr16
dec
fldt
icebp
cltd
daa
or
xchg
outsb
mov
adc
lcall
push
mov
lea
je
into
aaa
and
or
in
popf
addl
mov
push
leave
jne
pop
add
sub
and
sub
sbb
ljmp
pop
dec
push
std
jne
adc
adc
pop
mov
clc
jbe
add
dec
mov
movsb
cmp
push
and
inc
push
sub
sarl
pusha
add
popa
jno
mov
call
push
push
mov
movsl
xorl
aad
out
inc
clc
mov
mov
cmp
push
aad
stos
das
sub
in
cld
push
call
cmpsb
pop
popf
xor
outsb
jecxz
xor
cmp
xor
test
xchg
jae
inc
scas
and
sub
ljmp
pop
add
or
push
sub
push
in
xor
aam
pop
xchg
ret
cltd
es
je
adc
pop
orl
adc
dec
repz
cmc
jge
and
xor
scas
mov
mov
mov
fwait
roll
sbb
sub
mov
int3
js
inc
pop
sbb
sbb
mov
fbstp
in
hlt
in
cmp
cld
sbb
cmp
cld
repnz
je
mov
lcall
cltd
jmp
sbb
jno
imul
leave
inc
lods
ror
dec
cmp
cli
xchg
ret
lock
scas
imul
in
or
xchg
je
lock
mov
lods
and
dec
mov
mov
das
addb
out
test
xor
scas
add
std
xor
pop
jg
xor
fs
dec
fs
cmpsb
fs
adc
in
xchg
mov
sub
xchg
jae
les
pop
cmp
cmp
mov
loopne
add
push
pop
test
mov
mov
insl
or
xchg
cwtl
push
pop
sti
push
cmp
lret
in
mov
lock
mov
jmp
inc
popf
adc
out
push
test
lods
aaa
sub
repz
mov
mov
orl
iret
adc
mov
mov
dec
aaa
lahf
jae
and
or
subb
rolb
orb
xchg
mov
iret
and
add
lock
mov
into
test
leave
bound
adc
mov
and
inc
ljmp
mov
iret
sbb
dec
xor
lock
inc
std
sub
sbb
es
mov
cmp
cs
adc
sti
mov
mov
and
int
gs
cs
hlt
fs
shll
pop
fisubs
or
xchg
into
or
stos
inc
test
pop
dec
xor
push
push
push
dec
and
dec
ss
pusha
test
shl
out
insl
lea
push
lds
sti
fnstsw
bound
mov
pop
addr16
or
or
sbb
dec
scas
inc
push
imul
jb
mov
rcrl
push
nop
add
jge
jo
xor
ljmp
imul
outsb
imul
arpl
jne
std
push
mov
test
mov
test
mov
inc
mov
aad
divb
add
rorl
test
ret
and
hlt
mov
test
mov
adcl
loope
adc
pop
icebp
jl
pop
push
jae
cmc
negl
popf
sub
push
cmp
push
int3
jae
jg
mov
lahf
fwait
pusha
and
jmp
add
lock
mov
aam
loopne
inc
cmp
dec
cmpsl
orb
mov
xchg
lret
xor
insb
fs
pop
mov
arpl
jns
jae
xor
xor
das
adc
test
xchg
adc
and
add
fwait
xchg
adc
xchg
cli
ficoms
mov
xchg
lcall
push
xchg
lcall
adc
imul
testb
pop
mov
clc
jne
sub
in
pusha
sahf
lds
xor
mov
stos
sbb
inc
clc
arpl
dec
imul
mov
jb
or
xor
out
fistps
dec
xor
xchg
in
in
sub
popf
int
lods
mov
rolb
aas
fistps
xlat
je
jns
lds
push
in
add
arpl
inc
sub
push
push
sub
sbb
add
aam
inc
fstpl
cld
ja
xchg
gs
ljmp
inc
popf
arpl
test
in
mov
push
or
jno
add
and
inc
jae
ds
or
jle
sar
daa
stc
xor
xor
and
pop
mov
xchg
scas
push
dec
sub
sub
mov
inc
mov
dec
shll
mov
and
test
movsl
adc
test
pop
addr16
in
sbbl
push
lret
mov
repz
adc
jle
xor
es
xchg
dec
pop
add
shlb
mov
das
jb
in
sub
inc
xchg
test
sub
adc
pmullw
dec
inc
adc
push
xor
mov
cmpb
stos
gs
mov
xchg
sbbb
sti
xchg
test
xor
icebp
test
outsl
jge
test
xor
aam
dec
ret
lods
xchg
fstps
repz
xor
mov
mov
cld
fwait
xchg
dec
aad
dec
imul
add
sub
adc
out
je
mov
inc
shll
xor
mov
pop
pop
andl
inc
push
into
pcmpgtd
ss
mov
imul
xchg
adc
shrb
jp
inc
jmp
popf
repnz
jge
mov
fstpt
pop
inc
mov
inc
les
fldenv
popa
bound
je
mov
xor
and
jbe
mov
push
adc
aas
stc
loop
clc
add
pop
dec
aam
xlat
xchg
cmpsb
lods
pop
outsb
lret
pop
imul
mov
mov
xchg
jb
jne
int3
jecxz
mov
inc
cmp
dec
and
sub
xchg
and
inc
fdivl
or
call
jg
adc
xchg
cmp
sti
jns
jl
inc
and
je
add
std
or
in
gs
pop
jno
pop
fmul
push
jecxz
lods
adc
loopne
push
in
jecxz
cmp
into
ljmp
mov
push
inc
js
shlb
push
sbb
lret
adc
imul
pop
adc
popa
icebp
insl
loop
sub
dec
adcb
jbe
jle
data16
je
negl
lods
jecxz
push
out
pop
clc
dec
repnz
repnz
ljmp
adc
fucom
cmp
dec
fwait
or
dec
add
cmp
test
into
cwtl
sbb
cmp
mov
cli
jmp
xchg
pop
dec
inc
popa
push
movsl
jnp
jg
push
mov
pop
std
scas
cmp
ss
cmp
or
incl
hlt
jns
sub
or
adc
xchg
push
cmc
lds
push
adc
and
cld
stos
cmpsb
aaa
test
iret
cli
lock
rcr
lock
sub
add
es
insl
push
cltd
mov
pop
push
and
testb
ret
ss
test
dec
lock
push
push
and
dec
jne
mov
lds
out
test
push
or
mov
fucomip
and
inc
bound
dec
adc
push
add
nop
dec
aas
call
pop
mov
arpl
add
pop
or
inc
pop
push
xor
pop
dec
mov
popf
mov
dec
dec
ja
add
inc
lods
in
dec
push
imul
mov
push
cli
in
and
mov
popa
fildll
cmp
mov
lcall
imul
pop
inc
rorb
andl
int3
pop
xchg
int3
or
fdivrs
pop
jnp
insl
dec
mov
mov
cmp
test
and
push
aaa
jns
jo
mov
mov
dec
sti
add
sub
cmpsb
into
or
push
push
cmp
cmpsl
xchg
pop
mov
mov
mov
mov
xor
push
inc
cmp
cmpsb
inc
and
int3
jae
test
jp
imulb
and
add
pop
push
aam
mov
push
outsl
xchg
or
fs
jo
or
ljmp
lock
in
fisttpl
add
aas
push
fwait
add
xchg
lcall
sarl
or
cmp
dec
adc
adc
xchg
mov
add
sbb
mov
imul
sbb
mov
lods
lcall
xchg
jge
pop
sbbl
movsl
std
int
push
cltd
in
add
data16
or
shl
mov
mov
cmp
cs
pop
cmpsb
stc
push
cmp
cmp
cltd
mov
mov
jne
loope
mov
dec
mov
test
adc
fisttpl
or
jl
jnp
inc
cmp
fisubs
ja
jle
test
out
call
pop
sub
stc
ljmp
je
or
out
test
fimull
mov
lods
mov
adc
ds
popa
arpl
ret
fimuls
lods
add
cmpsl
addr16
popf
mov
dec
sub
jle
imul
adc
ljmp
jns
ss
jecxz
add
stc
sub
int3
test
or
dec
imul
push
jmp
xor
xor
scas
xlat
shlb
mov
shlb
push
jns
iret
xchg
push
dec
and
lock
inc
ljmp
push
adc
jl
pop
cmpsl
int
cmpsb
scas
call
adc
insl
add
cmp
mov
adc
xchg
dec
or
jbe
loope
mov
pop
addl
xorl
mov
cmc
scas
cmp
mov
lcall
sar
ret
xor
adc
js
mov
mov
rcrl
mov
dec
cld
xchg
bound
aam
lcall
shrb
cmc
mov
das
cli
add
jbe
inc
pop
xchg
stc
sbb
lret
scas
aas
pop
sub
sbb
xchg
and
push
cltd
jmp
scas
mov
lret
mov
jns
fwait
addr16
das
sbb
pushf
leave
inc
or
pop
fisttpl
sbb
ret
divl
ds
nop
sbb
pop
mov
and
call
cmpsb
mov
add
inc
stos
adc
insb
jbe
mov
fbld
lea
mov
imul
mov
xor
sub
mov
push
cmpsl
sbb
je
imul
jmp
nop
mov
jle
add
pop
xor
repz
cmp
loope
jg
jns
inc
ret
adc
cli
push
inc
add
add
xor
out
pop
push
adc
ljmp
stos
inc
in
addb
mov
adc
sahf
sbb
cwtl
inc
daa
movsl
pop
mov
js
ficomps
mov
mov
push
outsb
loopne
movsb
stos
les
push
outsl
adc
cmova
inc
shlb
rcrl
mov
sti
out
sub
sbb
push
dec
test
bound
inc
add
sbb
jecxz
cwtl
mov
add
push
dec
clc
mov
adc
push
popf
pushf
pop
cltd
int3
jnp
xchg
adc
fmul
xchg
jp
sub
xor
stos
push
mov
popa
pop
pop
sub
mov
mov
loope
js
leave
xchg
ljmp
mov
das
inc
leave
push
gs
pop
loop
xor
mov
out
sub
popf
add
int3
outsb
xchg
ret
imul
movsl
movsb
repnz
inc
push
xlat
pop
xchg
insl
dec
xlat
divb
std
adc
decb
scas
movsl
scas
xor
lods
int
loope
lcall
xchg
cmp
jns
pop
xchg
bound
sahf
shrl
andl
inc
adc
adc
sbb
stc
call
or
fmuls
aaa
dec
sbb
fldl
xchg
dec
mov
insl
push
inc
jno
mov
repnz
pop
in
aad
popf
push
adc
add
leave
inc
mov
bound
jno
jae
lods
test
push
mov
aam
pusha
loope
xchg
insb
jbe
or
or
inc
jge
in
push
jg
xor
pop
cmp
je
xchg
sbb
lahf
lahf
fisubrl
push
subb
xor
mov
add
or
shlb
cld
jg
jecxz
xor
adcl
loope
in
fs
pop
dec
add
sti
fisttpll
or
jno
jecxz
jge
in
pop
ds
testb
inc
push
mov
jns
test
inc
aaa
pop
cmp
mov
fstps
jnp
cli
inc
or
rol
fistpll
popa
loope
dec
xor
xor
push
imul
jbe
push
xor
and
test
jb
dec
cwtl
mov
fsts
mov
cmpsl
dec
mov
pop
pop
es
jbe
cld
loope
aad
and
leave
add
enter
in
mov
loopne
add
sub
cmp
cmc
test
pop
dec
ja
xor
fists
testb
outsb
sti
clc
sbb
test
push
and
pop
scas
les
fadds
lret
push
xorl
enter
ss
cmpsl
imull
fwait
imul
add
inc
int
cmp
jmp
cmpl
loop
cs
ret
push
lock
sahf
imul
ret
fisubrl
sbb
cmpsl
movsl
cli
loopne
cwtl
loopne
mov
andb
jge
push
orb
sub
cltd
and
mov
add
mov
xchg
outsb
mov
xchg
loop
xchg
mov
xor
push
inc
mov
in
dec
mov
mov
repz
mov
fwait
nop
mov
hlt
sbb
add
xlat
outsb
fldenv
mov
push
aad
adc
mov
mov
cli
mov
mov
addr16
jb
mov
jp
arpl
pop
mov
xor
shrb
sbb
mov
mov
jmp
cmp
bnd
iret
insl
mov
scas
and
addr16
adc
pop
adc
xor
xchg
negb
mov
xchg
jnp
inc
push
mov
jmp
clc
leave
notb
or
and
pop
pop
popf
pop
push
xchg
test
addr16
cwtl
or
clc
cld
lock
js
sub
xchg
pushf
xor
jo
mov
sub
adc
jbe
inc
add
xchg
inc
movsb
cli
inc
pop
lods
jecxz
inc
push
leave
cld
imul
and
bswap
lods
fs
mov
lds
sub
xor
xor
sarl
inc
cld
dec
and
and
fiadds
rcl
js
lahf
rclb
adc
push
test
cmp
mov
push
filds
stos
sub
xor
sbb
call
sbb
shl
mov
mov
or
scas
xlat
sbb
sti
stos
dec
ja
std
insl
xchg
inc
in
mov
or
push
sti
cmp
sub
insl
cmp
jp
adc
rcl
pop
pop
jo
das
andb
pop
push
push
or
inc
mov
into
je
jle
xchg
mov
pop
out
push
clc
jne
pop
mov
pop
dec
int3
jae
cltd
dec
push
clc
push
lds
mov
adc
stc
jl
daa
jle
ficoms
andb
loope
xchg
je
jle
testl
das
push
ret
add
xor
adc
cmp
loope
insb
aaa
pop
dec
pop
into
lea
or
mov
movsb
mov
mov
fimuls
and
xlat
pop
lahf
dec
cmp
pop
mov
js
stos
xor
push
adcb
sub
stc
les
inc
lret
lock
sub
mov
sbb
lahf
jno
call
gs
mov
dec
hlt
dec
shrb
sub
aaa
fstpl
pop
jnp
pop
lods
scas
icebp
loopne
divl
mov
push
mov
pop
imul
xchg
inc
xor
push
mov
das
mov
xchg
sbb
dec
lcall
mov
mov
ret
xchg
mov
mov
fiaddl
mov
inc
data16
iret
adcb
cli
and
pop
mov
adc
test
mov
stos
icebp
or
addr16
pop
imul
add
dec
cmp
rcrl
imul
lea
mov
push
dec
or
popl
mov
mov
adc
pusha
pusha
fwait
mov
sbb
xchg
mov
sub
mov
cwtl
xor
and
hlt
out
adc
mov
dec
mov
adc
into
pop
mov
lret
outsb
fldl
cmp
mov
aaa
iret
jns
jge,pt
call
sbb
dec
jmp
xor
push
cmpsb
fstpl
mov
adc
loope
ja
ds
mov
cmp
insb
mov
push
adc
dec
mov
mov
lahf
aaa
jl
les
sbb
xor
into
aaa
arpl
cmpsb
icebp
lahf
fnstcw
andb
jne
sti
mov
push
adc
xchg
fdivrs
adc
pop
in
sahf
pop
fwait
sbb
sbb
add
xchg
pop
mov
sbb
push
adc
mov
fidivrs
pop
shll
mov
sti
xorb
je
or
arpl
add
cwtl
and
aad
sbb
lahf
pop
jle
fsubl
sbb
lds
jo
pmaddwd
shl
xlat
subl
shlb
jo
mov
xor
arpl
dec
cmp
outsb
daa
push
mov
jnp
push
xchg
xchg
sbb
sarb
dec
and
xor
loopne
ss
iret
imul
xchg
mov
stc
push
xlat
mov
outsb
mov
lret
pop
pusha
aaa
adc
fsubl
jae
mov
push
repnz
imul
and
cld
cmp
lods
pushf
imul
mov
loop
jae
mov
xor
cltd
lret
ret
mov
sbb
cmp
pop
or
cmp
add
add
lds
sahf
fcomps
pop
adc
xlat
push
lret
mov
mov
enter
jl
ss
push
adc
cltd
rcrl
fistpl
push
or
outsb
inc
dec
push
push
and
cli
mov
in
leave
es
push
mov
and
pusha
or
sbb
xchg
aam
mov
movsl
in
leave
push
push
lret
test
add
jecxz
lcall
enter
pop
rcr
popa
aas
bound
sbb
pop
stos
push
loope
inc
xor
aas
pop
cli
js
mov
fisttpl
aaa
mov
inc
inc
addr16
scas
pop
adc
xor
adc
mull
dec
push
sub
std
bnd
out
xchg
and
stos
scas
call
sarb
xchg
jle
lods
iret
jns
aam
clc
or
mov
jmp
int3
sub
mov
cmc
daa
mov
je
sarb
sbb
cmp
mov
int
mov
int
out
out
sbb
cmpsb
xchg
mov
pop
dec
jae
neg
aad
mov
push
inc
cld
rcr
push
mov
pop
pop
sub
xor
dec
icebp
adc
pushf
leave
add
adc
imul
push
cmp
ror
rorl
sbb
jecxz
fcompl
arpl
cmp
repz
add
jmp
jmp
popf
or
test
push
adc
pop
inc
inc
cli
jle
popf
and
push
xor
sbb
add
decb
adc
in
xchg
push
push
lds
ud1
in
sub
push
data16
lret
lcall
out
pusha
loope
cmp
cmp
push
cmp
xor
sub
jae
adc
ljmp
mov
jmp
or
cltd
mov
mov
fisubrs
push
imul
dec
shl
mov
rcll
mov
nop
or
repz
pop
stos
pop
je
cmpb
enter
and
mov
test
push
cltd
subb
test
lods
xchg
xlat
inc
fucomp
cmp
jg
mov
xchg
mov
int
pop
xchg
imull
xor
das
inc
loopne
xor
dec
stos
mov
scas
mov
test
mov
fwait
jno
mov
loop
dec
popa
and
decl
testb
sbb
jns
les
dec
sub
mov
ret
mov
push
adc
mov
imul
jno
hlt
test
push
sti
mov
imul
daa
loope
not
jne
jne
lea
mov
dec
pop
icebp
and
popa
imul
gs
cmp
adc
mov
cwtl
hlt
call
cmpsb
adc
fildll
adc
sub
push
or
std
je
lods
xchg
mov
mov
jl
aaa
xchg
cmpsl
arpl
stos
pop
out
sahf
insl
loope
sub
jecxz
xor
push
pop
or
pop
mov
in
popa
int
frstor
movsl
std
xlat
mov
adc
pop
xor
pop
icebp
aam
add
cmc
in
sbb
int3
arpl
out
ret
in
pop
inc
jl
mov
stc
sub
add
daa
ja
pop
inc
fcom
and
mov
stos
add
stos
jne
hlt
imul
add
or
movsl
mov
dec
sbb
in
nop
fdivp
lock
sub
shl
xor
rcr
daa
inc
rcll
xor
aas
sbb
mov
jl
cmp
inc
fnstcw
cltd
pmullw
dec
dec
pushf
out
out
pop
int
test
jl
sbb
and
in
mov
jge
popf
aam
enter
inc
adc
ljmp
sbb
xor
iret
aam
mov
mov
mov
and
fwait
sub
mov
nop
movsb
fwait
add
xchg
addr16
cld
xor
xchg
mov
xchg
xchg
in
sub
int
pop
dec
mov
cmpsb
add
push
and
adc
pop
cmp
stos
push
lret
cmpsl
mov
sbb
ret
and
lret
cmp
add
enter
add
imul
mov
xorb
and
xchg
shl
fwait
and
jne
xor
ja
in
add
or
sbb
xchg
lret
je
jne
inc
icebp
push
hlt
in
fsubr
enter
pop
or
push
adc
ret
rorb
xchg
jecxz
push
cmp
xor
or
push
mov
repnz
dec
into
xor
sahf
jl
insl
cmp
loopne
fcom
stos
or
and
or
loope
pop
aam
mov
push
ljmp
or
out
dec
and
lock
xor
arpl
mov
cmp
cmp
and
mov
repnz
lea
arpl
into
leave
rorb
fs
and
sbb
into
shl
fdivrp
mov
inc
xchg
xchg
push
les
addr16
flds
mov
inc
movb
jae
dec
pop
lret
push
int
sbbl
into
movsb
mov
xor
lahf
mov
scas
pop
cwtl
xchg
stos
add
out
or
adc
jp
in
xchg
rcrl
xchg
xor
popf
dec
sbbb
test
add
xor
mov
ss
push
dec
ja
push
push
fwait
push
lock
lds
xchg
push
imul
repz
out
sbb
lods
stos
pop
xchg
mov
push
mov
ficoml
loope
data16
mov
adc
cltd
inc
out
aas
mov
mov
ja
or
xlat
adcl
rcll
and
clc
jmp
push
jecxz
inc
popf
mov
inc
into
inc
popf
pop
xchg
mov
sub
aaa
loop
rcl
mov
pop
enter
ja
push
or
imul
push
test
das
inc
xor
sahf
push
lcall
pop
jl
mov
leave
lock
popf
and
das
add
insl
gs
ljmp
jmp
outsb
movsb
mov
insl
inc
je
xchg
push
or
adc
cmp
rolb
dec
in
mov
imul
add
jb
test
iret
ret
pop
test
les
and
sti
xchg
mov
xlat
ja
jp
andb
push
pop
sbb
iret
cmpsl
sbb
call
xlat
mov
xor
jo
mov
and
fcoml
inc
inc
add
pop
pop
jnp
icebp
push
mov
pop
cmp
gs
xor
notb
mov
push
ja
outsl
ss
inc
adc
and
xlat
cmp
add
stos
mov
cvtdq2ps
dec
mov
sbbl
mov
test
mov
add
cmp
in
cmp
push
cmp
xchg
push
insb
jecxz
push
test
or
add
cmpsb
adc
pop
mov
mov
sbb
pop
mov
jne
ret
sbb
outsl
pop
pop
mov
mov
dec
mov
cltd
adc
pop
cmc
es
inc
inc
out
fisubrl
mov
adc
insb
jo
ret
iret
test
adc
mov
ret
sarl
inc
push
cli
mov
pop
adc
ds
jge
cwtl
jg
cwtl
add
push
cmp
mov
loope
ds
jo
jecxz
fdivs
xchg
and
push
and
sub
loopne
fcomps
dec
call
mov
mov
and
mov
sub
imul
jle
popf
leave
sbb
jae
jmp
add
cmpsb
ficompl
lret
jecxz
and
or
push
out
andb
dec
or
push
dec
jae
or
mov
mov
movsl
in
or
or
jnp
adc
adc
pop
scas
shrb
xchg
xorps
fs
loop
lods
out
add
push
cmpsl
out
dec
pop
xor
dec
mov
in
jb
outsb
nop
sahf
pop
dec
subl
mov
insl
pushf
mov
mov
dec
test
xchg
out
sbb
mov
sub
movsb
xchg
adcl
mov
dec
arpl
data16
mov
js
pop
fidivrl
jb
pop
mov
mov
mov
adc
loopne
insl
cmpsl
cmp
out
and
aam
cmp
jge
adc
mull
mov
jmp
movsl
mov
stc
push
stc
test
mov
mov
inc
push
loopne
mov
or
push
add
xor
mov
loope
addr16
mov
adc
and
cmpb
mov
pop
inc
jge
roll
push
imul
sub
xchg
jns
jle
xor
into
pop
mov
mov
jge
aam
rorl
adc
mov
loop
jne
mov
pop
loop
repz
out
dec
je
adc
clc
ss
jl
repz
out
aam
and
or
gs
mov
aaa
adc
sbb
fdivl
cmp
mov
int3
cmc
movsl
inc
mov
adc
fwait
cs
mov
or
data16
call
xlat
into
sub
xor
push
and
int
or
adc
dec
inc
scas
das
dec
fimuls
lds
pop
out
jmp
movsb
bound
mov
push
mov
lret
lods
ss
loopne
pop
pushf
lahf
iret
xor
shll
cmp
clc
sbb
xorl
rol
aas
inc
xchg
push
jno
inc
gs
nop
ss
adc
bound
test
or
jp
push
pop
scas
sbb
cmp
jns
bound
inc
sub
dec
push
test
xor
scas
adc
push
add
mov
push
in
xor
dec
pop
push
sahf
jno
push
jne
stos
adc
ret
cli
or
sub
xor
addr16
rclb
jp
dec
pusha
mov
xor
xchg
leave
fsubrl
sarl
and
sbb
xor
add
mov
popa
pop
rcll
lcall
mov
ljmp
jo
push
mov
cmpsb
mov
sbb
int
sbbl
dec
jmp
mov
nop
mov
orl
hlt
push
sbb
cmpsl
push
lcall
jge
pop
xor
dec
jecxz
cs
mov
push
fdivl
dec
dec
out
add
mov
dec
or
fdiv
add
sub
inc
rol
xchg
ret
aam
cmp
dec
push
sub
mov
mov
cli
in
xchg
jp
push
xchg
iret
xchg
jl
sar
xchg
inc
cmp
jno
add
je
jae
addb
dec
out
imul
call
jno
pop
lcall
movsl
int3
je
add
es
xchg
mov
push
loop
adc
sarl
or
sbb
and
addl
jle
mov
nop
inc
pop
jno
xchg
mov
scas
cli
sub
dec
arpl
outsl
xchg
add
adc
push
pop
fsubrl
inc
aad
or
icebp
mov
dec
inc
jmp
repnz
cmpsl
ret
sub
cli
daa
dec
fdivs
pop
icebp
popl
sub
inc
xchg
mov
mov
sub
xor
sti
inc
ss
adc
imul
mov
mov
push
cwtl
jns
push
test
jl
or
cmp
scas
insb
insb
in
xor
in
out
fmull
pop
addb
sub
repz
push
xchg
popf
fs
iret
lret
jle
loop
or
dec
scas
mov
addr16
loopne
jge
in
in
stos
push
andl
out
fwait
lret
mov
add
fwait
les
sti
xor
mov
into
dec
mov
sub
fdivs
call
sbb
test
in
sarl
aas
in
xchg
inc
xor
jnp
adc
dec
int
mov
inc
push
outsb
lods
lcall
incb
cmp
mov
mov
mov
enter
xchg
pop
inc
cmp
mov
push
nop
mov
mov
mov
push
dec
pop
inc
leave
lret
test
sahf
and
pop
cmpb
mov
sub
cld
insb
lret
leave
hlt
sub
mov
daa
cmp
or
out
out
mov
inc
xchg
insl
orl
pop
nop
or
sbb
cmp
arpl
pop
jmp
das
and
sub
popa
popf
pop
inc
jbe
call
cmp
js
ljmp
cmpsl
je
dec
adc
roll
dec
int
shlb
sub
outsl
cmp
jge
outsl
aaa
cld
pop
pop
gs
pop
push
or
jmp
subb
pop
sub
pop
mov
cmp
das
stc
repz
xchg
xchg
adc
xchg
outsb
pop
movsb
fsubr
sub
push
push
xchg
jmp
add
jnp
cmp
out
jo
movsb
in
and
fldenv
adc
cs
dec
push
movsb
xor
cmp
xchg
or
xor
push
jo
cmc
xchg
pop
jo
cmpsb
mov
mov
xor
mov
aam
cmc
push
sahf
mov
add
test
rclb
cmp
mov
ret
mov
and
cmp
mov
mov
inc
ljmp
xchg
push
fwait
cmp
xchg
sbb
jp
mov
loopne
rolb
xor
scas
pop
pop
fimuls
fstpt
fnstsw
sbb
cmc
and
sub
sub
faddl
mov
sub
dec
jp
rcll
cmpsl
fs
adc
in
sbb
icebp
sub
sub
lds
jb
mov
aaa
pmuludq
das
sbb
movsb
pusha
aas
xor
sub
out
cwtl
xchg
push
aas
aam
lock
shlb
mov
inc
mov
mov
mov
shl
hlt
repnz
shlb
push
xor
jb
inc
jno
movsb
loope
mov
or
and
pop
loopne
adc
or
dec
adcl
push
imul
or
stos
aas
mov
fucompp
dec
outsb
sub
sub
jecxz
adc
adcl
leave
xchg
mov
add
mov
add
data16
test
aas
adc
cwtl
lahf
insl
ljmp
jle
push
rcll
sbb
add
xor
xlat
or
ret
ljmp
sub
xchg
in
movlps
cmp
sarb
inc
push
pop
lcall
mov
or
jns
adc
pop
fwait
mov
mov
mov
xchg
jb
push
and
lock
jg
pop
sub
fisubl
sbb
sbb
and
movsb
pop
cwtl
xchg
jecxz
and
mov
xchg
fcmovb
pop
mov
sbb
mov
push
mov
mov
xchg
das
rorl
jne
cs
push
xchg
test
pop
mov
nop
int
into
jp
add
loopne
arpl
push
inc
pop
mov
ret
jns
lods
test
adc
mov
pop
cli
addps
notb
mov
js
push
mov
xchg
mov
or
cmp
sti
daa
loope
aaa
je
out
js
movsb
adc
mov
int3
jnp
pop
cli
inc
sub
mov
aad
in
je
loop
ficomps
mov
jne
out
xchg
sbb
filds
dec
lods
adc
cmpsb
or
inc
idivl
outsl
push
clc
arpl
cmpsb
fisubl
sbb
scas
sbb
dec
dec
or
rol
mov
xlat
pop
mov
insl
daa
adc
popf
xchg
jmp
loop
pop
and
fcmovnbe
insb
and
insl
sub
je
sbb
xchg
sub
jl
aas
jno
aam
mov
add
js
mov
or
loope
dec
push
or
or
xor
pop
and
or
push
mov
xor
add
jp
adc
aas
lahf
mov
or
idivl
mov
das
or
fnstcw
xor
mov
in
mov
mov
lahf
or
jb
inc
iret
pop
mov
stos
mov
je
mov
push
shrb
data16
pushf
int3
sub
add
adcb
aaa
pop
cwtl
mov
rcll
inc
and
ret
inc
mov
dec
shlb
dec
stos
sub
inc
pop
mov
mov
jb
sbb
dec
mov
inc
addl
cmp
or
adc
out
push
test
mov
jecxz
je
inc
lods
mov
inc
xchg
test
mov
sbb
sahf
repnz
push
mov
add
pop
mov
sub
icebp
dec
in
mov
jp
push
sbb
jge
sub
cwtl
xor
shrb
push
nop
sub
jmp
lret
mov
bnd
and
jb
ds
out
arpl
mov
mov
repz
sub
movsb
jbe
pusha
into
int
stos
mov
fldenv
inc
xchg
cmpsl
test
and
xchg
sbbl
xchg
dec
jne
fistps
cmp
xor
add
mov
leave
and
loope
add
or
sub
loope
insb
in
fsubl
xorl
add
lret
push
mov
xchg
sub
popa
sbb
leave
cmc
inc
xchg
dec
push
add
add
outsb
rorb
orb
sbbl
jno
push
inc
add
push
mov
or
cmpsl
pop
loop
and
outsl
call
leave
gs
push
add
into
fwait
mov
outsl
jle
push
pop
xchg
ljmp
es
sti
scas
mov
ror
push
xchg
adc
mov
inc
mov
call
int3
push
xorl
inc
pop
push
cmpl
jmp
dec
xor
or
cmp
push
stos
loopne
cwtl
xchg
orb
cwtl
mov
mov
push
push
aas
cmp
ljmp
out
pusha
push
cmp
cmp
and
mov
aas
jge
icebp
jmp
push
loopne
jno
cmpsb
xchg
shll
lock
popa
xor
xor
data16
mov
mov
lock
sbb
inc
shl
add
adc
sbb
push
pandn
add
inc
scas
mov
or
scas
fimuls
jbe
mov
cmp
ja
int3
adcl
testb
sbb
cmp
cltd
mov
push
and
loopne
movsb
hlt
adc
add
das
cwtl
shll
pop
shll
push
xchg
mov
clc
cltd
jbe
adc
pop
cmp
mov
pop
out
fnstenv
jecxz
push
inc
stc
xor
jge
out
cmp
into
or
out
cmp
cmp
rcrl
lock
adc
jno
push
hlt
iret
jbe
sbb
xchg
ljmp
jae
cmpb
pusha
bound
not
add
int
xor
jp
and
mov
xor
fs
lret
adc
imul
push
jns
xchg
jns
out
scas
roll
mov
dec
add
test
out
add
sbb
xchg
sahf
fs
push
inc
int
pusha
mov
pop
pop
dec
xchg
arpl
adc
into
cli
fwait
fwait
add
sub
pop
inc
fidivl
push
dec
xchg
jecxz
mov
sub
pop
lcall
jmp
je
out
cld
idivb
push
movsb
repz
sbb
xor
int3
inc
cmp
pop
imul
xchg
xchg
fldlg2
jmp
pop
dec
addr16
sbb
jp
arpl
sub
aaa
mov
and
stos
lea
jae
dec
outsb
es
jne
jne
xor
adc
stc
inc
dec
dec
xor
clc
add
rorl
popf
xor
stc
sti
add
out
out
mov
mov
ljmp
popa
or
add
stc
sti
mov
paddusw
xor
std
loopne
adc
lds
mov
movsb
call
jno
mov
scas
je
sub
jl
sti
jnp
add
loope
clc
cmp
sub
jecxz
lods
lcall
notb
ljmp
stos
push
leave
jp
adc
jns
adc
std
inc
sub
mov
jb
cs
mov
sub
lods
out
adc
adc
mov
cli
ljmp
dec
aad
cmp
test
sahf
in
and
cwtl
mov
push
mulb
dec
mov
inc
pop
divl
xchg
int
and
adc
push
push
mov
mov
enter
shll
mov
cmp
clc
add
or
push
bound
das
lods
ljmp
mov
xchg
cmpsb
popa
xchg
adc
add
clc
inc
frndint
mov
pop
add
mov
lret
inc
fsubs
jle
scas
cmp
aad
cmpsb
jl
in
adc
cld
adc
or
push
out
mov
sub
push
add
adc
cmp
js
and
outsl
dec
sbb
jmp
or
sub
or
mov
adcb
aam
dec
imull
xchg
mov
mov
mov
or
out
loopne
cs
jp
sub
mov
into
pusha
and
jb
xchg
sub
lret
push
lcall
pop
outsb
xlat
xor
xor
cwtl
movb
inc
mov
mov
jle
cmpsl
call
xor
ja
inc
pop
outsb
outsl
lret
jmp
jmp
popf
cmp
lods
addb
test
mov
popa
mulb
enter
in
ss
cli
and
mov
push
hlt
jne
rcrb
lods
pusha
inc
hlt
xchg
sbb
enter
mov
and
mov
arpl
xchg
adc
mov
outsb
inc
push
adc
push
xchg
arpl
lahf
test
xorl
mov
enter
xor
cmp
imulb
lret
outsl
mov
stos
pop
leave
jmp
add
roll
mov
cmp
lret
sbb
add
call
loope
fimull
shrb
loopne
loop
loop
jne
mov
rcrl
shlb
inc
or
inc
jne
xchg
xchg
sbbb
xlat
sub
cmpsl
outsb
xor
add
mov
cwtl
pop
aas
enter
les
js
xor
inc
mov
arpl
inc
test
bound
xchg
mov
add
dec
ds
cli
add
stos
mov
std
ja
dec
rcl
inc
dec
xor
das
jnp
push
outsb
insb
call
jno
daa
out
in
pop
cmp
insb
mov
test
aaa
imul
or
push
xor
inc
jg
sbb
pop
out
aaa
xor
movsb
mov
pop
jns
push
int3
inc
daa
push
shll
scas
mov
ja,pn
jp
adc
xor
inc
fwait
dec
int
push
lods
mov
outsl
push
push
out
mov
push
fwait
jmp
les
sbb
jo
or
jge
cmpsb
cmp
push
lcall
fidivrl
and
dec
sahf
adc
fwait
pop
pop
daa
xor
jecxz
jp
jns
adc
adc
imul
rcll
dec
in
popa
jo
negl
push
mov
or
push
inc
test
xchg
add
out
xchg
ja
xchg
mov
stos
cs
xchg
int
add
shlb
sub
push
add
into
sub
push
mov
jne
lret
clc
adcb
daa
int
movb
and
sbb
pop
mov
test
mov
add
negb
pop
sbb
mov
inc
lods
mov
loop
adc
push
ret
andl
lock
loop
movsb
imul
xchg
sbb
cs
add
push
cmp
add
loopne
das
lcall
cmpsl
jp
lcall
test
lods
popa
or
hlt
mov
daa
pop
hlt
stc
dec
or
jmp
cmc
bound
ficomps
jno
dec
adcb
xchg
jl
fadd
jl
inc
mov
xor
xchg
jg
popf
iret
jg
jae
loopne
dec
fst
add
push
arpl
xchg
pushf
and
mov
and
je
mov
and
pop
fs
mov
js
push
mov
sub
stos
cmp
loope
push
mov
lea
shll
adc
lds
mov
pop
leave
pop
cmc
push
push
pop
lahf
mov
xchg
mov
enter
shlb
xchg
and
mov
push
push
iret
stos
adc
mov
mov
jmp
idivl
imul
cwtl
lret
push
idivl
jns
mov
pop
adc
jecxz
stos
jl
jl
jl
xchg
aas
aas
mov
adc
xchg
or
call
xor
jb
sub
arpl
push
ja
into
sarl
loop
pop
mov
imul
xor
scas
insl
mov
fwait
mov
sahf
cltd
lock
fucomip
xor
dec
push
xchg
xor
cli
out
lock
in
mov
jmp
add
out
aam
into
dec
notb
jecxz
xchg
jb
jp
mov
ja
sahf
imul
add
inc
jnp
ljmp
das
lock
cmp
dec
push
inc
repnz
mov
xchg
lods
sub
rcr
int3
sti
loop
test
xor
clc
xor
xchg
inc
add
mov
divps
enter
jge
mov
notl
out
xchg
push
pop
pusha
stos
xchg
in
sbb
or
gs
into
mov
pusha
popa
mov
call
leave
mov
scas
test
and
xchg
inc
imul
outsl
xchg
mov
test
aam
jbe
dec
add
mov
inc
mov
pop
out
mov
jl
xchg
inc
mov
inc
movsb
repnz
pop
inc
mov
dec
push
xadd
mov
jno
xchg
push
iret
jnp
pop
fidivl
popf
addl
movd
mov
adcb
cli
mov
les
and
mov
daa
mov
je
cmc
into
idivl
sbb
inc
incl
xor
cltd
stc
test
jl
lret
jg
mov
mull
dec
mov
sub
mov
and
adc
add
and
adc
fidivrl
jmp
lock
sub
cmp
xchg
add
int3
cmp
dec
cmp
dec
sbb
ja
adc
jno
mov
femms
push
pop
jnp
and
roll
inc
inc
lds
jecxz
xchg
cmp
das
push
lds
xchg
test
xor
mov
cmp
sbb
jno
dec
mov
mov
gs
sarb
pop
dec
xlat
or
jnp
cmc
sub
push
dec
add
jnp
imul
xor
pusha
mov
cmpsb
repnz
jno
sub
pop
clc
xchg
sbb
jae
adc
addr16
icebp
mov
or
jl
inc
negb
shlb
mov
inc
das
lahf
and
ffreep
lret
pop
icebp
dec
notb
push
je
hlt
mov
rcll
mov
lds
or
fidivl
jp
mov
loope
lds
dec
or
mov
xchg
sub
inc
shl
xchg
ret
mov
add
cmp
aas
mov
movb
mov
inc
add
das
fisubrs
mov
xor
or
jns
nop
fstl
outsb
jns
push
repnz
fsubs
movsb
loopne
je
mov
popf
mov
dec
mov
and
sub
test
cmp
dec
pop
xchg
cmp
outsb
ret
adc
icebp
add
mov
mov
test
push
mov
lcall
push
enter
hlt
mov
jl
push
mov
jno
fadd
mov
lods
fisttps
shrl
or
test
lods
dec
and
cmpxchg
data16
gs
inc
adc
or
aad
add
xchg
dec
mov
adc
and
scas
imul
xchg
sbb
mov
xlat
jg
push
cmc
sbb
outsl
mov
inc
mov
fsubr
mov
pop
or
and
mov
movsb
mov
xchg
imul
bound
mov
pop
inc
cli
mov
mov
jnp
int
sub
inc
loop
fimuls
sub
pop
in
pop
addr16
lcall
add
xchg
mov
xchg
push
mov
and
push
ja
jbe
pop
pushf
cli
inc
aaa
and
notb
fdivrl
adc
push
push
mov
add
xor
nop
pop
enter
mov
popf
lret
lods
out
daa
aad
xchg
dec
ficomps
shrb
in
or
mov
jns
mov
mov
into
imul
xor
fistpl
dec
notb
in
outsb
cmpb
jbe
cmc
jmp
pushf
mov
xchg
lea
mov
sahf
pop
shl
push
imull
mov
js
cwtl
dec
push
movsb
nop
outsb
jle
pusha
xchg
dec
lods
je
testb
lods
lret
push
bound
add
fldt
add
push
push
test
push
in
les
cli
and
add
xor
mov
data16
push
in
stc
inc
pop
repz
dec
mov
cmpsl
push
fsubs
jb
xchg
dec
and
icebp
sub
pop
clc
xchg
jno
lahf
push
or
xor
xchg
clc
mov
mov
movl
jne
jbe
in
cmp
movb
cmp
dec
ljmp
repz
jo
test
mov
xchg
dec
dec
pop
push
fistpl
bnd
int3
push
xor
pop
xchg
and
or
enter
fidivrs
clc
sub
rol
fildl
dec
xor
stos
sbb
dec
adc
rcll
and
insb
and
pop
int3
lahf
cmp
jnp
fisubs
hlt
std
js
sbb
div
pop
push
rcr
aad
jne
aam
mov
inc
pusha
cmp
or
in
out
mov
cltd
rcrb
adc
adc
int3
push
push
mov
into
sub
adc
push
xor
cmp
ljmp
and
mov
and
aaa
mov
out
pop
inc
sar
mov
cld
push
inc
into
fwait
jg
les
pop
and
repnz
out
test
out
push
jmp
inc
mov
fadds
dec
out
cmp
mov
mov
in
pop
mov
jb
cld
out
push
jbe
popf
sub
sbb
pop
push
daa
or
inc
test
mov
stos
ja
iret
mov
popf
mov
sarl
sti
or
lods
xchg
lret
adc
clc
inc
gs
mov
add
adc
aas
and
jl
into
push
xchg
cltd
into
adc
lcall
sahf
outsl
inc
fnstcw
nop
xchg
fcoms
mov
jns
and
add
mov
xor
push
ja
pop
mov
mov
insl
or
test
mov
push
cmp
pop
sti
sbb
cld
mov
daa
in
inc
cmp
xlat
pop
or
sbb
adc
mov
int
test
push
dec
leave
ficoms
and
pusha
lahf
ja
sub
add
jmp
dec
das
pusha
sub
and
cmpsl
add
imul
sahf
cwtl
sub
fidivrs
fidivl
test
fdiv
dec
sbb
test
mov
shll
pop
repz
in
sbb
lock
push
jge
mov
push
cs
jne
jne
push
sbb
das
fs
dec
test
fistpll
xchg
outsb
mov
arpl
sbb
inc
jne
sbb
in
inc
inc
aaa
push
dec
xchg
stc
dec
dec
and
and
sbb
dec
inc
scas
aaa
iret
push
pop
movsb
loop
mov
and
sub
mov
in
stos
mov
scas
or
aad
mov
mov
out
push
aaa
adc
pop
inc
jl
imul
adc
mov
pop
push
shll
lods
iret
insb
mov
cltd
sbb
sbb
inc
xchg
sahf
decl
test
xor
pusha
cmp
cmp
sub
shrb
loopne
mov
push
popf
or
or
filds
mov
jle
fptan
mov
mov
inc
jns
mov
xchg
adc
out
fdivl
test
cmp
mov
sbb
leave
sbbb
int
inc
jne
mov
fucomip
je
push
jns
inc
and
test
add
pop
ljmp
cli
cmpsl
add
jle
data16
lods
cmpsb
rol
push
cmpl
je
loopne
jge
cmp
sub
cmp
fs
test
sahf
cmp
pop
fistpl
sub
cmp
call
cmp
push
jp
neg
jae
fld
dec
scas
and
mov
sarl
dec
lahf
negb
ret
ljmp
xor
push
out
sti
mov
mull
pop
inc
xchg
sub
jge
loopne
push
lahf
jo
repz
push
pop
xchg
shrl
dec
test
mov
lcall
movsl
dec
sarb
add
sbb
push
or
sbb
cmpsl
cli
mov
sbb
test
mov
push
rcrb
leave
mov
or
lods
fistps
add
jno
lahf
and
adcl
sahf
mov
xor
xor
add
and
adc
popa
jbe
out
dec
rcrl
or
xchg
mov
lds
aam
scas
mov
or
movsb
xlat
loopne
ja
xchg
jbe
dec
sub
push
scas
out
outsb
adc
icebp
cmp
cmp
mov
jnp
cli
movsb
mov
imul
sbb
adc
or
xchg
repnz
pusha
mov
add
push
sbb
imul
mov
sbb
stc
mov
lret
pop
idiv
cwtl
cltd
inc
jg
push
in
xor
push
xchg
mov
push
xchg
jg
test
xor
dec
or
icebp
xor
xchg
and
out
mov
adc
jbe
aaa
or
jne
icebp
jae
jge
loope
test
mov
mov
and
scas
aam
or
mov
lret
dec
stos
jle
xchg
mov
scas
in
loopne
or
pushf
scas
rolb
jmp
sub
stos
mov
and
or
xchg
mov
inc
faddl
or
scas
xchg
inc
mov
push
arpl
xchg
cwtl
push
gs
push
lods
scas
out
mov
mov
int3
loope
test
dec
mov
push
add
jne
lcall
lcall
lahf
out
rorb
jbe
es
dec
or
cld
cmpb
popf
fistl
or
mov
js
and
test
or
jmp
scas
cmpb
adcl
es
mov
movsb
sub
jmp
clc
push
mov
jo
in
pop
gs
push
mov
mov
testb
inc
adc
imul
arpl
jo
sub
push
push
test
sub
shrb
sub
nop
in
dec
mov
inc
pop
test
inc
pop
out
ss
xchg
imul
mov
fmull
enter
loopne
push
in
movsl
mov
dec
std
pop
mov
in
fistps
push
sbb
mov
insb
mov
sub
mov
loop
xchg
xlat
mov
push
sub
cmp
hlt
mov
lea
jmp
mov
rcrb
pop
adc
cmpsl
pop
test
icebp
pop
pop
jp
jns
pop
sub
push
dec
mov
lods
ficomps
pop
jb
xor
ja
add
leave
cwtl
sbb
xchg
jae
in
cmp
fldt
fildl
inc
mov
sub
int
inc
outsl
and
loop
in
mov
cmp
push
imul
pop
adc
scas
cmpsl
loop
repnz
mov
lret
sti
stos
cwtl
outsb
xchg
mov
cmp
sbb
sbb
movsb
push
inc
dec
out
in
push
call
loope
cli
in
sub
dec
jo
pop
stc
arpl
inc
mov
ret
jns
test
in
lahf
pop
jnp
mov
push
xor
je
mov
cmpsl
and
daa
sbb
jo
insb
pop
in
stos
leave
cli
inc
cmpl
ror
fisubl
push
fistpll
call
and
js
or
sub
lds
cmpsb
add
pop
test
adc
pushf
test
addr16
imul
stos
loope
mov
jbe
movsl
xchg
pop
xchg
loopne
sbb
lock
dec
shlb
inc
pop
mov
pop
cmp
shll
lahf
mov
stos
xor
flds
jl
inc
mov
or
mov
cwtl
shll
std
xlat
ja
in
shlb
xchg
dec
cltd
pushf
int3
decb
push
mov
and
jle
mov
mov
jge
cmp
or
xchg
popf
inc
sbb
mov
mov
scas
jbe
and
mov
push
dec
xor
aaa
out
mov
cld
popa
jp
pusha
test
fists
pop
aas
pop
sbb
in
xchg
imul
push
mov
ret
inc
fsts
sahf
popa
sbb
ret
cs
cmp
sbb
mov
cmc
jmp
lret
cs
push
inc
pop
mov
dec
mov
sub
int
lret
sbbl
movsb
popa
jo
in
xlat
outsb
loope
jle
and
push
sub
and
and
add
sub
pop
arpl
xor
out
fists
std
inc
outsb
scas
js
pop
test
call
data16
inc
mov
push
fistpll
dec
cmp
fsubrs
jmp
xor
popl
adc
fstps
rcr
mov
insb
xchg
xor
jbe
xchg
dec
shrb
or
pop
jbe
cmp
cli
lret
ss
sti
aam
push
popa
mov
popf
ja
dec
mov
stos
and
pushf
adc
pop
mov
enter
es
lahf
adc
fwait
scas
mov
bound
push
nop
push
test
jg
insb
in
and
pop
fs
mov
rcrb
outsb
lods
popf
pop
mov
lds
loope
push
push
int3
or
adc
mov
mov
lahf
mov
cmp
mov
hlt
ljmp
jle
div
add
push
lds
mov
or
out
lahf
iret
mov
test
dec
sub
arpl
pop
inc
cmp
rorb
or
jbe
xor
daa
push
add
pop
nop
dec
into
jle
push
add
xchg
arpl
mov
sub
inc
out
mov
push
sysexit
scas
sub
mov
js
daa
sbb
push
ljmp
shlb
lret
out
sub
dec
outsl
scas
inc
insl
xor
das
mov
lods
sub
pop
adc
int3
in
stos
cmp
fmull
test
iret
jecxz
ffree
xchg
mov
fnsave
pop
movsl
adc
sub
cmc
fiadds
loop
cmc
imul
jnp
inc
sub
sbb
fcoml
ret
push
repz
sbb
adc
lods
lahf
push
cwtl
mov
jnp
mov
into
sbbb
aad
clc
test
sbb
out
fidivrs
lds
or
lret
movsl
sbbl
fucomi
sub
lock
fsubl
lods
outsl
sub
push
loop
insl
adc
loop
imulb
or
add
and
jecxz
xchg
mov
imul
and
jge
notb
mov
ret
lcall
jne
jb
pop
test
mov
imul
mov
aaa
inc
mov
andb
sub
aad
ds
cmp
jge
cltd
sub
inc
lahf
daa
movsb
sbb
imul
insb
cld
xor
int3
push
jle
push
xchg
repz
aad
sub
flds
adc
out
cmp
mov
and
or
mov
movsl
ret
ret
adc
push
stos
sahf
inc
xchg
loopne
push
or
push
fs
ret
pop
stos
and
test
adc
inc
jo
lock
or
icebp
addr16
out
mov
push
rcll
sbb
out
mov
fadds
xchg
pop
xchg
int3
mov
fs
loop
jg
mov
cmc
sbb
add
in
push
mov
loop
in
in
mov
sbb
les
or
ret
in
ficoml
pop
lret
in
dec
xlat
jge
or
cmp
or
insb
nopl
orl
xor
xor
add
add
divb
push
adcl
in
cmp
pop
jne
fstpt
cwtl
xchg
dec
lock
out
fld
in
pop
adc
push
dec
stos
loope
rcrb
xor
pop
xchg
fs
inc
lods
xchg
lods
into
outsl
testl
in
push
push
cmpsl
or
adc
add
xchg
adc
loopne
in
jnp
jo
pop
mov
jl
cmp
loope
inc
and
pop
push
xor
shll
jae
lcall
roll
push
push
mov
nop
xchg
jmp
cld
popf
inc
sub
jp
addr16
push
in
adc
add
pop
xor
jge
mov
sub
cld
push
rcrl
add
test
fnstsw
sbb
pop
es
scas
and
inc
and
cmp
push
adc
arpl
pop
and
mov
fwait
push
sub
adc
jg
mov
inc
cmp
add
xor
jno
sub
int
jge
sahf
repz
mov
add
adc
mov
mov
add
test
pop
jp
fsubs
mov
mov
pop
lock
lock
lods
shlb
sbb
pop
lock
subl
adc
sbb
jne
push
mov
inc
push
movsb
adc
mov
outsb
into
or
and
cmp
push
ljmp
je
aam
cli
fwait
add
out
and
enter
addr16
shlb
mov
test
mov
jmp
push
rorb
ljmp
mov
add
pop
xorb
xor
mov
xchg
cmpsb
ret
push
or
pop
lret
push
add
pop
cmpsb
inc
addr16
shr
ja
jmp
jge
lds
mov
or
outsb
lea
cmp
add
in
lahf
rorl
stos
cmp
mov
sub
into
mov
or
lahf
adc
scas
daa
pushl
cltd
outsl
fdivl
add
cmp
inc
pop
and
fwait
cmp
in
xchg
pop
pop
inc
lcall
sbb
rol
in
dec
int
dec
es
mov
xchg
jne
pop
xor
add
xchg
add
test
data16
mov
xchg
or
lods
and
ror
sar
rcl
inc
lock
ret
stos
or
mov
div
adcb
ja
dec
pop
ja
loop
and
fiaddl
sub
in
cmpsb
mov
push
push
mov
cmpsb
fsubrs
pusha
jbe
mov
sbb
xor
pop
or
cmp
test
stc
push
popf
sbb
add
jecxz
sbb
and
xchg
xchg
test
push
pop
enter
mov
adc
push
push
or
jo
add
fisttpll
mov
test
jmp
and
sar
push
jb
test
test
inc
inc
clc
jae
call
int3
xor
shl
cld
dec
nop
xchg
sub
push
mov
jns
aas
icebp
stc
pop
adc
xchg
into
in
xchg
sbb
mov
pop
push
fwait
mov
pop
inc
dec
ljmp
pop
ds
mov
ret
mov
xchg
push
add
fidivl
sti
sub
imul
jge
sbbl
mov
outsl
lret
bound
aad
push
mov
lods
or
xchg
pop
addr16
inc
fiaddl
call
xchg
lret
das
cs
aaa
jl
out
mov
push
out
xchg
mov
xchg
mov
lahf
jbe
push
lock
enter
fwait
dec
push
and
dec
fadds
pop
mov
inc
mov
lret
fs
jle
add
cmp
push
in
test
movsl
inc
pop
or
inc
push
fadd
cld
ds
push
xorb
push
inc
outsl
aad
cmc
iret
push
int
lods
fs
cmpsb
adc
mov
xor
andl
js
scas
xor
scas
out
out
mov
ljmp
imul
int3
or
gs
sbb
mov
out
test
int3
out
inc
sub
adc
mov
int3
frstor
or
sbb
pop
pop
arpl
adc
mov
add
mov
movsl
popf
mov
fcompl
js
xor
mov
adc
jbe
jns
and
leave
cmpsl
int
inc
sbb
xlat
aaa
in
imul
dec
mov
push
dec
push
jle
and
in
xchg
cmpsb
pushf
add
rcll
ficompl
xchg
jae
sbb
cmp
push
outsb
testb
jg
dec
mov
roll
mov
loope
lret
aaa
mov
aas
mov
addr16
inc
dec
add
popf
or
jo
sub
cmp
jo
loopne
ljmp
jbe
xor
shr
and
or
loope
add
xchg
push
lcall
outsb
aam
pop
jnp
push
in
aad
je
loop
pop
outsb
in
andb
loopne
xlat
pop
out
aam
mov
cmpsb
je
or
adc
sbb
hlt
xchg
dec
push
xchg
xor
mov
cmp
pop
loop
mov
clc
jb
mov
jg
cmp
xor
mov
mov
jae
rclb
push
and
push
ret
cli
dec
out
icebp
or
loop
jecxz
cmp
jb
aad
rorl
or
jp
outsb
push
gs
mov
pop
sbb
insl
jge
xor
std
orb
ftst
loop
iret
inc
adc
pop
jecxz
jmp
cmc
not
push
and
outsl
out
inc
ljmp
add
xchg
jno
sbb
add
stos
stc
out
mov
je
addr16
sub
push
and
testb
sbb
push
out
nop
rorb
movq
in
mov
ja
jg
mov
inc
cs
dec
cmp
xor
mov
xlat
movsb
push
outsb
hlt
aam
idivb
inc
or
insb
jl
push
sbb
scas
mov
jne
mov
gs
or
inc
mov
cltd
xchg
mov
mov
adc
pusha
push
and
inc
lock
insl
jns
dec
xor
xchg
arpl
rol
fwait
sub
aad
fwait
mov
jno
or
add
jae
dec
xchg
gs
popa
xchg
daa
fmulp
sbb
aas
in
incl
arpl
and
int
shlb
scas
arpl
mov
dec
testl
cmp
adc
js
in
je
push
push
cld
leave
loopne
add
and
xchg
mov
nop
xor
outsl
fwait
imul
movsl
pop
rcll
mov
shlb
jl
neg
lahf
push
jbe
pop
push
cli
aas
xor
mov
popa
neg
rcr
mov
dec
dec
or
movb
les
outsb
cmc
setp
mov
xchg
enter
shrb
fsubr
jno
test
cli
divl
pop
inc
mov
jp
xor
pop
mov
jecxz
loop
icebp
push
shll
cs
lret
mov
cmp
pushf
enter
shlb
or
orb
mov
scas
jae
out
popf
call
cmp
jns
mov
mov
pop
inc
inc
gs
ret
in
adc
imul
add
hlt
out
pop
cli
adc
push
jmp
xor
jb
ds
dec
mov
insb
lahf
add
outsb
fstp
pop
insb
mov
cmp
into
or
shll
je
sti
mov
mov
dec
in
inc
push
xchg
xchg
xor
fldenv
lret
shlb
pop
adc
jp
push
mov
mov
jp
xchg
xchg
fcoml
daa
popa
sub
pop
jle
stos
xchg
pop
lds
outsl
and
or
adc
sti
xchg
out
xor
or
adcb
and
sarb
xchg
hlt
iret
mov
inc
adc
movsl
fimuls
adc
add
add
sub
push
int3
pop
push
cmpl
adc
push
mov
mov
cld
pop
ret
cmp
fs
ds
fisttpll
mov
inc
stc
cmp
push
inc
push
iret
sbb
pushf
movsb
data16
cmp
repz
dec
repnz
aad
popl
lret
sbb
test
inc
es
nop
dec
sbb
dec
rolb
add
lret
jne
adc
lahf
and
lods
fimull
ss
push
mov
in
lea
adc
out
bnd
inc
adc
jne
inc
or
and
and
xchg
movsl
ljmp
cmp
andl
pop
es
xor
sti
push
subb
inc
addr16
inc
dec
aam
mov
push
push
push
mov
add
mov
subb
push
lea
and
stc
aam
gs
loope
lahf
xchg
inc
push
out
ret
rcl
rolb
mov
jno
mov
lea
mov
repnz
mov
aad
je
inc
add
ds
int3
call
jne
push
clc
xor
clc
sahf
ja
aad
inc
jle
lret
ret
adc
mov
mov
and
hlt
cmp
test
mov
sbbl
xchg
dec
repz
cld
popa
scas
insl
or
or
hlt
stc
push
out
test
imul
lds
cmp
push
mov
scas
aam
jns
pop
cs
hlt
movsl
jbe
loope
shl
sub
inc
push
out
push
test
mov
enter
push
or
adcb
hlt
mov
adc
std
adc
and
gs
pop
add
mov
js
int
xchg
xor
sub
fwait
test
inc
je
and
mov
lods
jne
int
and
xchg
ljmp
push
fs
std
test
das
add
arpl
fnsave
mov
fsincos
cmp
fsubp
dec
sti
adc
pop
test
and
jge
std
sbb
adc
js
pop
jge
or
or
test
dec
mov
arpl
dec
outsl
xor
sbb
ljmp
cmpsb
aaa
ss
cld
lcall
sub
jle
inc
int
hlt
sti
incb
mul
jle
cmpsl
movsl
pop
fdivrp
roll
fwait
add
rep
cltd
repz
pop
int
mov
pop
ss
or
call
mov
jge
je
push
push
and
inc
jae
jmp
jae
or
cmc
pop
or
xor
mov
add
inc
jbe
icebp
xor
adc
leave
mov
pop
adc
cmpl
sbb
xchg
pop
sahf
je
mov
push
xor
ret
cmp
ret
xchg
call
lea
cltd
ret
add
jmp
jbe
cmp
bound
clc
mov
push
push
adc
popf
imul
push
ss
jb
cs
stos
jb
jo
sbb
xor
push
lahf
jmp
mov
rol
jge
in
mov
mov
lcall
test
jnp
pop
in
push
sbb
pop
scas
xchg
sarl
xor
push
sbb
mov
cs
mov
push
push
jne
cmpsl
fisubrs
add
sti
sarl
push
sti
and
inc
mov
aad
int
es
arpl
xchg
rorb
cmp
jge
cwtl
nop
and
roll
inc
lahf
aad
sbb
loop
dec
insb
into
sbb
and
movsb
jne
jnp
adc
jo
xorb
inc
rorb
cmpsb
stos
scas
pop
popa
out
push
call
faddl
pushw
pop
pop
incb
mov
insb
push
add
fld1
mov
hlt
pop
movsl
out
popf
dec
cmp
xchg
iret
or
stos
jle
inc
pop
addl
pusha
mov
adc
xchg
arpl
mov
mov
jae
or
mov
out
push
idivl
ljmp
adc
sub
adc
mov
xor
and
xor
fidivrl
mov
daa
jl
dec
shll
dec
in
and
aam
es
mov
clc
mov
add
mov
ds
and
in
negb
inc
out
es
jge
enter
jne
aas
xor
stc
push
test
mov
and
hlt
mov
ret
pop
sub
adc
aas
pop
pop
lcall
jmp
jg
lods
or
mov
in
inc
stc
and
out
clc
jns
into
repz
negb
cmp
pop
push
hlt
mov
cmp
dec
dec
sub
inc
or
xchg
cmp
push
push
addr16
or
cld
mov
loop
sbb
xor
sbb
ja
push
mov
out
sub
push
push
push
push
xor
push
int3
and
cwtl
xchg
cwtl
stos
jne
popf
imul
mov
inc
out
xor
xchg
in
test
in
push
out
jns
addb
or
add
mov
jns
sub
mov
jno
fwait
cmp
frstor
push
push
daa
inc
dec
xor
test
sbb
xchg
push
mov
adc
jno
cmp
lds
push
cmp
hlt
cmpsl
inc
or
mov
test
push
into
push
inc
test
test
mov
mov
mov
xor
cltd
sub
mov
in
int3
jp
ds
or
and
incb
mov
je
add
retw
int
test
scas
mov
cmp
cmp
cmpb
mov
mov
mov
jnp
pushf
and
lds
cltd
mov
jo
or
idivl
pop
jcxz
push
int
and
adc
rcll
cmp
movsl
lcall
mov
mov
enter
jle
ljmp
shl
iret
jae
jne
cmpsl
clc
out
popa
inc
divl
enter
outsl
adc
fstl
dec
mov
fwait
imul
decb
out
lahf
pusha
lds
and
mov
shrl
xchg
mov
mov
call
call
push
call
adc
pop
test
insb
pop
data16
out
addr16
mov
mov
imul
add
fcmovnbe
clc
xchg
arpl
in
lods
lea
shld
mov
jmp
push
mov
mov
ds
icebp
mov
repz
pop
jecxz
xor
adc
int
cmp
xor
enter
fisttpl
inc
mov
cs
mov
cmp
movsb
pushf
or
mov
pop
inc
xlat
inc
iret
xchg
mov
adc
inc
sub
xlat
int3
arpl
hlt
pop
add
sbb
dec
adc
data16
dec
pop
jmp
cmp
data16
popf
sbb
sbb
jo
mov
pop
jecxz
mov
and
sti
cmpb
add
and
jno,pn
lea
mov
mov
mov
mov
dec
ljmp
in
roll
xlat
in
push
sub
xorl
xor
in
xchg
subl
loopne
jns,pn
loope
add
aam
cmp
pop
testb
and
and
add
mov
call
jb
mov
mov
daa
mov
pop
mov
xchg
ret
lret
mov
sar
sub
ss
ss
out
xchg
mov
or
shll
cld
mov
cmp
imul
cmp
jl
mov
in
lea
adc
sbb
jmp
mov
cld
xchg
lock
push
mov
jmp
pushf
jo
dec
mull
pop
rcrl
loope
cmp
ret
in
test
mov
inc
add
jns
test
push
adc
ja
xchg
xor
icebp
xor
div
sbb
and
orb
jl
es
scas
js
push
ficoms
cld
mov
inc
cmc
mov
ds
repz
lea
add
pop
stos
add
lea
pop
and
mov
cwtl
sbb
in
sti
push
fldcw
pop
pop
dec
fdivrl
movsl
jnp
mov
daa
mov
popa
stos
mov
add
and
loope
cwtl
mov
dec
inc
aas
outsb
pop
ds
orb
push
std
adc
bound
loop
xor
jo
xchg
lret
mov
shlb
mov
rcll
add
cmp
in
and
xor
sbb
mov
jmp
inc
jmp
push
pop
into
pop
dec
pushl
push
xchg
pop
jno
mov
sub
inc
test
stos
pop
dec
push
js
fsubrs
mov
dec
push
in
push
sti
xchg
enter
mov
icebp
rorb
cld
mov
push
ds
pop
or
rcll
and
and
add
aam
cmpsl
sub
cmp
mov
xchg
movsl
sub
add
outsl
pop
jle
xchg
stos
mov
push
dec
cltd
jno
mov
jb
jge
sbb
iret
inc
cmp
adc
loop
dec
fbld
lods
jns
dec
lcall
sbb
dec
mov
jb
jge
pop
sub
das
xchg
jecxz
rcr
xchg
repz
lods
rclb
out
jns
sarl
gs
fidivl
cmp
xchg
xorb
leave
fisubrl
cmpsl
aas
and
inc
mov
bound
xor
xor
aas
test
es
mov
and
lcall
icebp
clc
mov
xchg
pop
ja
pop
cmp
mov
int
lret
mov
adc
nop
stc
inc
lods
hlt
lret
push
jl
mov
jp
mov
setl
xchg
in
and
pop
test
and
outsl
inc
sub
push
in
out
or
ja
imul
mov
push
cltd
in
add
add
cli
add
push
mov
jns
popa
cmc
pop
inc
loopne
dec
xchg
sub
mov
emms
scas
add
addr16
int3
lods
lret
mov
push
adc
cmc
mov
in
subl
test
fsub
or
stos
cmp
sub
dec
int
sbb
add
bound
push
xor
aaa
jp
loopne
fwait
xor
push
aaa
arpl
cld
add
mov
stos
cli
icebp
jge
jg
push
shlb
pop
jbe
test
xchg
movsl
cld
mov
sahf
js
cltd
test
jae
fadd
not
popf
mov
ja
ret
jnp
and
mov
and
insb
insl
xchg
cmpsl
jmp
cmpsb
sub
dec
push
ljmp
jle
icebp
test
rcl
push
fsts
mov
sbb
and
lret
sub
or
dec
cs
stos
push
out
pop
add
shrb
mov
stc
sub
scas
pop
push
movb
lcall
jle
mov
xchg
call
push
sbb
xor
add
push
sub
xor
adc
insl
jg
ljmp
icebp
sbb
mov
jmp
pop
sbb
adc
sub
das
decb
outsl
mov
or
cli
xchg
adc
test
mov
xchg
mov
jne
fisttpll
lahf
dec
xchg
movsb
add
pop
xchg
pop
imul
adc
mov
bound
fcompl
test
cmp
mov
in
test
sti
mov
mov
pop
push
rclb
icebp
stos
ljmp
cmp
mov
out
shlb
rcl
or
push
pop
xchg
jmp
inc
inc
std
push
or
inc
sbb
ljmp
cld
clc
or
jg
nop
fcoms
pop
jb
pop
mov
stc
fs
mov
pop
push
mov
mov
cli
jg
rcl
in
daa
js
or
mov
sub
imul
sbb
push
fwait
jnp
add
call
sub
jle
lds
pushf
cmp
cld
inc
or
jo
cld
fistl
xchg
pause
js
inc
xchg
cmp
mov
insb
cmpb
ds
subb
call
cltd
mov
mov
into
mov
mov
mov
xchg
cli
jbe
fldenv
jle
hlt
pop
aam
mov
lods
fld
daa
and
scas
sbb
jae
mov
mov
dec
sub
pusha
pop
dec
es
outsl
dec
cmpsb
je
inc
cs
xchg
es
sub
push
imul
adc
dec
or
push
mov
sahf
in
jecxz
adc
fiadds
movsb
inc
mov
jmp
into
inc
sub
pop
cs
imul
xchg
ja
push
int
fs
cmpsb
adcb
in
fwait
sub
sbb
aas
in
fldenv
adc
inc
mov
fisubl
out
icebp
sbb
sub
xchg
add
or
inc
sbbb
cmpsl
movsl
not
cs
jl
mov
int
repz
dec
add
fld
cs
adc
subl
jo
nop
stos
mov
mov
mov
sbbb
lret
insb
jnp
or
jne
into
xchg
xor
jl
popf
test
pop
imul
adc
dec
sub
or
nop
or
cmc
sti
xor
fs
mov
es
pop
xor
jle
test
mov
sub
sbb
call
outsb
clc
pop
push
inc
jb
movsb
inc
cmpsb
pop
mov
js
clc
inc
int3
mov
test
lcall
test
cmc
mov
in
loope
pop
testb
pop
pusha
sbb
inc
mov
ja
cwtl
pusha
mov
stos
adc
mov
imulb
inc
outsl
or
inc
and
clc
out
repnz
andl
mov
test
enter
or
imul
movswl
and
lds
movsl
lock
push
sbb
mov
or
jmp
add
jne
sub
pop
dec
fwait
xlat
jecxz
xchg
shlb
push
call
lret
mov
mov
dec
sub
lock
pop
popf
push
jg
jl
pop
add
cmp
sub
add
movsb
jmp
fimuls
or
fcoml
arpl
pop
cs
xchg
cmp
aaa
loop
pushf
test
fistpll
push
sub
mov
add
nop
sti
sub
sbb
fimuls
mov
repnz
pop
ja
lret
sub
test
repz
mov
jbe
xchg
mov
insl
jns,pn
cmp
adc
pop
push
imul
aam
cmp
mov
clc
test
mov
into
mov
andl
and
mov
rcll
push
lds
sbb
adc
cmp
mov
sbb
call
pushf
out
loope
push
aaa
dec
mov
jmp
dec
ret
leave
rcrb
or
clc
outsl
xlat
sbb
leave
fistpl
cmp
out
push
orl
inc
sbb
or
gs
mov
sbb
addr16
dec
and
xor
daa
cmpsb
mov
and
dec
orb
scas
insb
in
mov
movsb
inc
rclb
in
sti
repnz
scas
ret
xchg
shrl
pop
je
pop
inc
scas
sbb
fiaddl
sub
imul
int
paddw
std
popf
lcall
mov
sbb
bound
jecxz
adc
je
jo
icebp
orl
xor
std
inc
enter
je
mov
lret
int
pop
prefetcht0
sub
and
lock
test
in
rcrl
lcall
xchg
pop
cmpsb
in
jae
daa
mov
mov
pcmpgtw
dec
outsl
jg
dec
or
xor
push
pop
scas
out
and
lds
adc
stos
mov
pop
inc
pop
rcrb
out
push
jmp
repz
add
movsl
mov
popa
sub
sub
in
xchg
dec
xchg
outsl
into
or
lock
or
push
mov
and
xor
sub
xor
call
mov
jecxz
push
xchg
adc
or
shrb
adc
stc
dec
or
pextrw
jne
adc
or
dec
jge
fnstenv
sbb
or
add
daa
adc
lea
add
mov
cmpsl
pop
mov
rcll
int3
jns
ret
add
test
xor
mov
lock
aam
cmpsl
push
sbb
std
fnstsw
mov
jp
or
jb
sub
xorb
sub
insl
jns
test
xchg
ss
outsb
mov
jo
push
clc
or
lahf
push
xlat
testb
pop
cmpsl
lds
cld
push
or
adc
imul
push
jle
repz
add
adc
jmp
sub
nop
add
stos
cmp
aam
sbb
int3
push
jmp
mov
cmp
lock
test
test
pop
and
sub
lock
das
scas
decb
mov
cmp
lock
fstl
ja
jp
adc
popa
pop
imul
cmpsl
jae
sub
movsl
in
xor
adc
xchg
mov
sub
or
cmp
and
mov
sub
ret
shll
push
push
jne
leave
sub
and
jle,pn
outsl
fadds
scas
add
cs
ficoml
xchg
inc
push
mov
mov
mov
fisubs
es
mov
jnp
icebp
stos
shlb
inc
out
push
clc
adc
xchg
mov
in
pop
test
mov
push
xchg
pop
fstps
inc
adc
mov
jne
imul
outsl
ficoms
mov
sub
dec
mov
adc
loope
cltd
sbb
inc
out
push
gs
pop
repz
lret
push
rorl
lods
gs
xor
inc
loopne
xor
adc
icebp
or
sbb
fcomp
movsl
jne
fcompl
push
scas
hlt
xchg
mov
xchg
fwait
sub
add
stc
inc
adc
outsl
stc
addl
fistl
pop
fidivrl
cmp
mov
xlat
cmp
dec
pop
outsl
jmp
mov
dec
cmp
ss
outsl
lcall
dec
out
adc
cmp
and
jns
imul
push
cmp
jecxz
jae
sbb
rcl
jecxz
pop
cmp
jne
out
test
test
dec
das
or
cmpl
lock
icebp
lds
pop
nop
sub
pop
lahf
xchg
movsl
add
jmp
mov
mov
adc
arpl
call
test
mov
mov
cmpsl
mov
fidivl
fisttps
ret
dec
add
push
fwait
xchg
lods
ffree
adc
and
enter
popf
push
leave
add
xor
pop
int3
shll
push
imul
fdiv
mov
cmpsl
jne
jns
aaa
mov
mov
arpl
mov
cltd
mov
and
fmul
add
cmp
and
push
xchg
lret
xchg
push
out
cli
ds
sbb
pop
push
or
scas
sub
push
mov
or
jae
mov
mov
jmp
mov
icebp
ret
sbb
popa
cmp
jnp
test
shrb
outsl
mov
xor
test
or
sbb
test
sahf
mov
or
mov
roll
sub
addr16
cmp
test
mov
add
scas
aam
test
mov
jle
mov
orl
repz
push
mov
in
or
fs
out
imul
in
sub
out
pop
cmc
cmpsl
mov
mov
icebp
jne
int
jle
adc
pusha
popa
sbb
mov
and
xchg
xor
repnz
mov
psubsw
and
es
rorl
rcrb
cld
ljmp
pop
mov
jno
add
xor
xchg
lcall
sub
add
arpl
icebp
stc
mov
out
mov
jo
jbe
inc
mov
sub
shl
inc
pop
sti
fisttps
mov
jle
or
jnp
jmp
gs
test
xchg
jge
loopne
push
movsl
mov
pop
dec
cld
aaa
or
call
ss
addl
loop
sti
stc
cwtl
mov
xchg
shlb
xchg
lods
std
pop
xchg
mov
clc
mov
mov
int3
sbb
lods
jno
or
xchg
loopne
or
aad
xchg
xchg
jg
test
mov
push
fcomip
icebp
inc
xchg
sbb
or
dec
lcall
dec
mov
adc
sbb
mov
xchg
xchg
mov
imul
xchg
or
mov
pop
push
mov
movsl
fnstenv
repnz
jl
stc
fcmovnb
mov
in
loopne
lea
dec
and
addr16
push
pop
inc
mov
sbb
xchg
jecxz
mov
adc
iret
mov
adc
adc
cmp
lret
add
sbb
mov
or
cmp
addb
add
cwtl
jo
lahf
aaa
dec
loope
imul
push
push
ret
jp
out
and
idivb
dec
pushf
jne
repz
push
jecxz
push
adc
hlt
repz
and
xor
mov
mov
flds
and
mov
nop
jecxz
aaa
movsl
ss
xchg
lret
shrb
pushf
mov
aad
cli
mov
push
adc
mov
test
mov
das
stos
jnp
xchg
push
pop
cmp
aaa
insb
cmp
mov
sbb
add
int3
outsl
and
fisttpll
xlat
imul
dec
movsl
scas
pop
inc
loopne
jg
or
add
scas
push
dec
add
add
lds
scas
cmp
es
adc
test
shll
mov
push
into
inc
loopne
sbb
mov
xchg
jb
pop
leave
adc
pop
fcomps
mov
jg
lcall
sub
es
push
ret
fmull
ljmp
ljmp
outsl
sub
dec
push
and
std
sbb
js
cmp
clc
cmc
cs
movsl
jbe
adc
icebp
gs
or
push
mov
cli
cld
je
ds
stc
ja
fxtract
adc
mov
mov
mov
cmp
stos
leave
int3
mov
sbb
leave
sahf
popf
orb
xor
push
xchg
pop
add
test
ljmp
je
dec
subb
jae
add
and
pop
xchg
int
hlt
xchg
add
dec
popa
std
mul
out
fdivrl
sbb
jo
icebp
xchg
inc
stos
cli
cmp
adc
lret
push
or
dec
lods
cmp
sbb
aam
loope
mov
lock
lods
cmp
cmp
xchg
dec
xchg
pushf
inc
je
xchg
xchg
or
arpl
mov
out
lahf
pop
or
iret
mov
mov
loop
stos
enter
mov
sbb
and
adc
ret
sbbl
incl
ret
push
adc
inc
pop
sub
add
test
cmp
adc
mov
mov
ret
lahf
mov
adc
or
inc
adc
xor
les
jl
and
loop
pop
pusha
pop
mov
xor
iret
daa
mov
adc
repz
or
jge
xchg
cltd
rorl
adc
cmpl
cmc
imul
add
int
sti
cmp
cmp
dec
imul
or
lods
movsl
dec
mov
jp
jge
jae
nopl
loopne
sub
das
fwait
dec
scas
int3
iret
gs
out
inc
mov
lcall
jg
pop
push
mov
fucomip
in
or
andl
sub
xor
xchg
mov
lds
rcr
shll
pop
movsb
push
adc
mov
add
sub
cmp
sub
stc
mov
mov
pop
scas
int3
pop
push
jmp
dec
pop
adc
scas
push
jb
push
clc
clc
mov
imul
and
lea
sbb
lods
int3
ljmp
insb
dec
sahf
and
aad
sbb
in
into
mov
mov
mov
or
dec
or
and
icebp
int3
dec
or
cltd
and
jle
add
and
jae
cmp
out
jle
test
mov
test
and
pop
in
xchg
add
mov
pop
add
lcall
int3
adc
imul
int
cli
scas
scas
je
clc
mov
leave
xchg
xor
ret
and
xchg
or
mov
inc
popa
mov
orb
add
mov
leave
mov
adc
add
pop
sub
pop
push
push
or
rorl
sub
and
testb
mull
icebp
xchg
push
xor
outsb
adc
ds
cmpsl
adc
mov
mov
sti
and
inc
mov
js
or
pop
and
mov
cmpsb
xchg
adc
adc
aas
in
outsl
dec
dec
mov
cmpsb
add
mov
ja
or
inc
das
rolb
jg
jne
mov
pop
push
cli
std
lahf
mov
push
fistps
xchg
mov
and
add
dec
repz
fwait
mov
or
and
mov
xchg
jae
adc
addr16
popf
cmp
mov
adc
je
xlat
adc
and
leave
xor
popf
dec
inc
push
jg
repnz
ret
cli
mov
sbb
dec
sbb
pop
rclb
push
fs
mov
cmp
add
test
pop
and
orl
push
push
jne
mov
xchg
inc
xchg
push
pusha
pop
shl
cmpsb
test
xor
dec
fsubr
fildll
fwait
ja
imul
arpl
xchg
cli
mov
fisubrl
sub
mov
inc
mov
fisttpll
cmpl
mov
push
jl
xchg
ljmp
mov
orl
adc
adc
nop
decl
movsl
aam
sub
cmp
clc
add
dec
in
fldl
mov
xchg
push
mov
divl
scas
shl
adc
andl
mov
gs
sar
sbb
mov
pop
lods
test
je
dec
jmp
jp
movsl
hlt
leave
sbb
or
lcall
mov
dec
cmpsb
jecxz
int
or
in
lret
bound
adc
pop
cli
sbb
dec
add
icebp
xor
outsl
jg
int3
out
sbb
divl
adc
sub
lret
sbb
sub
lret
cmp
and
movsl
sbb
push
inc
add
ja
scas
lds
gs
cmp
sub
xchg
bound
push
lahf
rcll
mov
xor
push
add
adc
test
and
and
aam
push
add
adc
jno
mov
sbb
aas
lds
fildll
rorl
sbb
mov
psubw
lods
das
pop
in
sbb
ror
pop
es
push
in
jge
push
add
movsb
sbb
push
movsb
repz
pusha
and
das
lea
dec
fs
jge
inc
mov
jo
clc
aaa
dec
ret
inc
pop
rorb
es
popa
dec
push
mov
add
dec
es
rcrb
lcall
ss
pop
xchg
popf
sti
xor
fnstcw
jae
je
mov
pop
inc
xchg
mov
jg
sti
aad
fiadds
fmuls
je
aad
push
scas
add
je
pop
ret
sahf
and
mov
outsb
out
inc
fstl
mov
popf
daa
popf
test
mov
cmpsl
mov
xchg
outsl
push
or
imul
stos
andb
sbb
movsb
jb
lahf
fld
lock
mov
push
das
jne
mov
push
mov
pop
inc
push
sti
mov
pop
dec
jb
xchg
push
dec
imul
and
gs
cld
add
test
shlb
das
addb
or
xor
and
cmp
jns
inc
pop
lea
iret
mov
in
lret
and
push
mov
scas
mov
fst
sbb
loope
pushf
xchg
jge
int
adc
push
stos
sub
push
out
outsb
jne
movsl
dec
imul
pop
xchg
rorl
add
pop
inc
mov
xor
ret
cmp
int3
sbb
jbe
data16
cld
sub
lods
imul
popa
pop
pushf
pop
std
movsl
aaa
lods
test
popa
shl
out
rclb
movsb
es
xor
enter
psubw
sub
jnp
imul
pop
cmp
into
inc
js
js
mov
data16
mov
es
lock
ds
sbb
andb
out
std
std
call
enter
sbb
loop
mov
pop
jg
popa
fs
mov
cwtl
lcall
iret
and
dec
xor
bound
test
mov
mov
sbb
int
cltd
xor
jg
fidivrl
ret
jecxz
or
fwait
sub
sti
cmp
mov
mov
out
int3
jge
fcmovb
xor
mov
js
push
scas
pushf
inc
mov
mov
imul
dec
cmp
adc
shlb
gs
movsb
out
daa
stos
inc
pop
pushf
xorb
pop
loope
ljmp
test
mov
xchg
or
push
or
imul
mov
rcrl
sub
jae
insl
sub
adc
push
ds
mov
pop
sbb
xor
bound
outsb
mov
and
es
outsl
mov
jecxz
pusha
cld
aaa
enter
mov
cmpsl
push
xorl
loope
dec
and
test
dec
or
pop
mov
or
xchg
mov
or
jae
cmp
test
call
adc
inc
mov
gs
jecxz
sbb
xchg
pop
loop
or
xor
jp
adc
jle
loope
push
xor
fdivr
mov
loop
or
mov
pop
and
insb
cmp
sub
aas
jp
mov
adc
popf
sub
xor
jbe
clc
xchg
pop
xchg
cwtl
push
sub
inc
test
xchg
mov
lds
xor
dec
mov
mov
pop
mov
push
int
mov
insl
popa
adc
mov
scas
es
imul
add
jb
bound
movsb
pop
lock
ja
adc
xchg
addr16
xchg
xchg
adc
push
inc
nop
test
sbb
int
add
xor
mov
jne
scas
push
xor
cmpsl
test
push
test
sbb
and
rcl
xor
lcall
aad
xchg
mov
movsb
push
xlat
cmpsl
jbe
sbb
std
and
inc
mov
mov
ja
lods
fisttpl
push
aas
popf
jl
ret
adc
or
inc
mov
in
adc
leave
push
dec
lods
fwait
shlb
mov
dec
lret
sub
and
fdivrl
dec
xchg
and
aad
xchg
mov
shll
sbb
add
pop
sbb
aad
in
xor
mov
mov
lret
inc
nop
lahf
divb
push
xor
in
test
xor
mov
mov
mov
jl
xchg
sbb
xchg
test
mov
fwait
cmp
mov
mov
dec
es
mov
mov
jae
inc
lods
das
fstl
mov
lds
sbb
sub
and
fistl
xchg
adc
loop
scas
mov
mov
cmpl
loope
and
and
ja
mov
inc
pop
enter
jg
test
mov
mov
arpl
lods
cmp
mov
mov
icebp
fs
dec
aam
icebp
cmpb
das
movsl
adc
nop
cli
push
cmpsl
xor
inc
dec
cmpsb
xchg
stos
inc
jmp
andl
test
lret
das
and
test
mov
mov
test
xor
int
mov
data16
xchg
fwait
mov
lea
cmp
dec
push
ss
nop
mov
movsl
aas
sbb
rcl
div
cmp
stos
in
cmc
push
je
push
jmp
stc
add
sahf
aaa
xor
test
test
arpl
mov
mov
scas
lods
jns
cmpsl
ljmp
pop
mov
xor
or
mov
jmp
in
or
in
lahf
std
hlt
or
pop
jle
pop
popa
int
loop
xor
mov
clc
mov
int3
ljmp
mov
rclb
xchg
mov
pop
xor
xchg
xchg
call
inc
hlt
cli
add
push
out
inc
push
subl
out
adc
and
mov
pop
arpl
mov
aam
cmc
sbbb
add
arpl
mov
cld
add
adc
or
sub
xchg
cmc
jmp
jl
jge
inc
dec
pusha
mov
pushf
std
dec
push
fcompl
leave
pop
cmpsl
sbb
fadds
xchg
jb
and
aaa
xor
test
and
xor
pop
das
dec
outsl
and
and
push
jp
xor
jle
loopne
fs
mov
sbb
push
insl
mov
loop
mov
test
jle
and
jl
xlat
inc
and
aam
xchg
inc
pop
mov
ret
jbe
loope
lahf
pop
jg
out
dec
push
dec
add
pop
dec
adc
nop
inc
fstpt
sbb
lds
lea
sarl
add
insb
repz
xchg
mov
and
pop
lods
sub
mov
rorl
push
daa
xor
mov
popa
jae
push
rorl
jp
ds
fs
xlat
shlb
jbe
cmp
arpl
in
fisttpll
outsl
and
iret
sub
add
aam
dec
aam
and
mov
add
mov
cld
xchg
add
cmpsl
jl
aad
test
cmp
dec
cmp
mov
loopne
das
pop
xor
rorl
dec
xchg
adc
cwtl
sahf
push
stos
fisubs
mov
push
dec
jns
popa
aaa
inc
scas
mov
push
clc
jge,pt
scas
punpckldq
enter
pop
xor
daa
xor
or
jmp
xor
pop
push
mov
cmpsb
mov
idivl
mov
or
lret
adc
lahf
push
pop
mov
pop
fwait
gs
js
xor
push
movsl
lcall
ss
outsb
cli
cmp
rcrl
and
and
mov
sub
push
jmp
fstps
xchg
mov
mov
pop
jg
push
sbb
mov
ja
and
fs
imul
pushl
rcll
icebp
or
inc
je
cmpsb
cld
jp
mov
mov
jo
bound
and
mov
adc
mov
jmp
repnz
mov
jnp
pop
out
mov
enter
dec
adc
cli
fnstenv
pop
aad
and
sbb
xchg
js,pn
dec
addb
sub
imul
inc
call
mov
add
movsb
xlat
mov
inc
outsb
mov
add
push
repnz
mov
sti
aam
dec
mov
lret
or
dec
add
mov
movsl
and
jbe
jl
mov
pop
mov
int3
int
es
mov
mov
sbb
add
xchg
rclb
roll
fsubrp
push
ret
ja
inc
popf
xchg
movsb
jmp
sbb
or
je
xchg
enter
popa
test
bound
into
push
stos
imul
cs
and
push
jmp
jmp
aam
or
insb
xchg
cmp
iret
cmp
mov
insl
inc
and
pop
xchg
push
lds
lea
int3
repnz
shrb
popa
ret
mov
les
rclb
jns
daa
add
insb
dec
es
cmc
sbb
fs
xchg
outsb
pushf
fbld
pop
mov
mov
push
aaa
loop
pushf
or
movsl
je
add
outsb
icebp
dec
and
mov
loopne
mov
or
lea
and
popa
sbb
jmp
dec
mov
mov
mov
shrb
pop
xor
sbb
rcrl
insl
mov
test
xchg
and
test
dec
dec
cmp
mov
popa
insl
xor
jno
adc
and
adc
ds
test
jae
pop
hlt
pop
dec
or
push
repz
pop
inc
addl
sbb
or
popf
xor
adc
sub
add
pop
lahf
dec
in
cmp
or
sbb
jecxz
sbb
es
push
or
insl
movsb
mov
je
dec
xchg
call
xorb
std
scas
cmp
cld
jns
mov
mov
sub
add
cwtl
ja
jl
lahf
aad
sub
or
mov
xchg
jge
nop
mov
cltd
dec
push
rcrb
in
lods
dec
jmp
lcall
cmpsb
gs
lock
cs
out
xor
cmp
jmp
loopne
mov
push
mov
or
inc
xchg
xor
adc
ljmp
hlt
cs
stos
dec
ror
add
aad
aad
shlb
push
push
out
add
in
push
int
add
ret
or
jnp
repz
push
and
mov
jo
push
jecxz
jns
mov
add
or
outsb
xor
imul
pop
sub
test
cmc
inc
leave
leave
push
xor
popf
out
mov
out
popf
popa
popf
in
ret
push
scas
fs
dec
push
in
cmpsl
add
cltd
or
xor
ljmp
out
xchg
loope
cmpsl
xor
mov
fbstp
out
stc
shrb
jg
add
jb
sarl
cmc
mov
fwait
dec
xor
inc
pop
movsl
push
insl
lret
loopne
insl
out
inc
adc
aam
leave
pop
xchg
fidivrl
xchg
insb
push
sbb
sbb
sub
into
jmp
shrl
push
cmc
cwtl
push
lock
cmpsl
xchg
sub
mov
dec
or
add
inc
and
or
xorb
addr16
cmp
xchg
cmc
dec
or
sbb
mov
fildl
sub
mov
jmp
mov
sub
adc
add
jns
pop
inc
mov
inc
daa
mov
int
or
rcrb
push
imul
push
cmpb
into
mov
jns
sub
insl
add
fistps
rcrl
std
mov
cmp
ret
push
xchg
movsb
cltd
dec
aas
sbb
ljmp
xchg
test
popf
lea
add
jno
mov
loop
outsl
cmp
std
jo
jbe
cmpl
push
gs
gs
clc
mov
jns
mov
movsb
movups
je
shll
inc
mov
aad
inc
outsb
mov
out
push
sbb
fisttps
inc
icebp
in
pusha
cmp
movsl
lods
mov
lret
ds
cwtl
push
ficoms
pop
subl
cld
fbstp
mov
sub
mov
mov
sar
idivl
mov
shll
jb
pop
cwtl
push
ret
adc
adc
mov
pop
fidivl
mov
mov
dec
leave
cmp
lods
push
xchg
sbb
push
out
dec
sub
cmp
pusha
popf
out
push
dec
mov
cltd
jae
cmp
xchg
push
imulb
jl
cmp
mov
js
shlb
movsb
lds
addl
jne
inc
pusha
adc
push
test
mov
aam
or
or
lahf
mov
add
jne
dec
push
sbb
sbb
push
xchg
dec
push
mov
ret
sbb
fidivs
cltd
cwtl
sbbl
jmp
jl
mov
popf
push
outsb
cmpsb
add
pop
ds
ja
ss
test
and
out
xchg
loopne
mov
dec
adc
inc
xchg
into
jl
aaa
jo
and
cmp
test
add
add
sbb
enter
lods
sbb
or
cs
cmp
jnp
cmp
inc
iret
sub
sub
xor
xor
xor
leave
and
aas
stc
out
pop
fisubs
test
pusha
loop
pop
add
lea
dec
cmpsl
push
rolb
xchg
cmc
aad
mov
inc
jmp
sub
mov
repnz
test
sbb
xchg
in
push
aam
jecxz
ja
dec
lcall
and
mov
neg
daa
mov
test
mov
std
rorb
push
inc
cmp
movsb
pop
xchg
push
mov
jl
mov
cmpb
push
clc
pop
add
and
xchg
sbb
jle
xor
jmp
pop
rolb
jp
call
sbbl
dec
cwtl
repz
xor
sar
pushf
inc
stos
mov
icebp
pop
ja
cld
adc
mov
lret
lods
mov
fnstsw
dec
sarb
xchg
lds
jp
ds
iret
mov
into
cli
mov
das
dec
fisttps
dec
pop
pop
sbb
xlat
push
aam
xor
fnsave
mov
pop
add
lcall
jecxz
jnp
xor
sbb
pop
outsl
in
loope
je
loopne
dec
shlb
push
ss
js
xchg
sub
ret
sub
cmp
out
push
icebp
mov
mov
xor
mov
aam
stc
pop
lods
lods
or
dec
xorb
cwtl
sbb
push
pushf
sub
test
fistpll
rcrb
sub
subb
jle
inc
adc
inc
stc
pushf
mov
loope
xorb
mov
popf
mov
loopne
add
adc
faddl
js
aam
xchg
jg
rolb
pop
test
out
sahf
daa
mov
int
inc
mov
push
movsl
pop
mov
ljmp
arpl
lret
fsubr
fsts
sub
ret
out
das
cmpl
int
push
in
jnp
pop
shlb
cmp
sub
mov
pushf
test
dec
test
cmpsb
stos
mov
lds
and
push
lret
xchg
pop
cmp
jns
scas
xchg
push
or
lds
xorl
mov
xor
cmpsl
add
stc
popf
cmc
aad
xor
push
dec
lret
cmp
pop
sar
push
sbb
xor
arpl
pushf
mov
aas
imul
les
fiaddl
ficoms
xor
push
jge
in
adc
jbe
cmp
roll
lahf
je
lock
fisubs
jecxz
push
sbb
out
aaa
or
mov
outsl
jno
stos
xchg
sbb
and
jg
mov
xor
dec
sub
or
cmp
daa
cmp
xor
pop
int
shll
adcl
aam
ret
xchg
lret
dec
out
loopne
xor
call
clc
test
enter
cmpsb
and
les
inc
mov
test
add
push
inc
xor
cmp
inc
and
inc
push
shll
ljmp
jb
insb
out
sub
cmp
lcall
sbb
push
jl
cmc
rcrl
shr
outsl
push
jecxz
jne
mov
lret
jl
push
adc
xor
push
aas
idiv
ret
shl
shlb
push
jbe
sbb
or
movsl
das
in
xorb
fisttpll
movsl
mov
bound
ds
aam
push
mov
cmp
pop
pop
gs
out
mov
das
adc
cmpsb
cmp
fs
cwtl
outsl
xchg
cmc
mov
push
and
popf
cli
inc
fcoml
mov
stc
imul
loopne
bound
mov
cli
xchg
outsl
pusha
push
test
jo
sbb
or
pop
andb
jae
adc
jp
mov
xor
inc
loope
icebp
inc
xchg
stos
lea
push
insl
mov
jge
dec
lea
arpl
xor
stc
add
xor
addr16
fmull
xchg
jo
cli
scas
js
pop
or
shrl
or
outsl
shl
push
xchg
stos
je
clc
repz
iret
mov
adcl
aaa
js
pop
sub
shll
bound
daa
mov
stos
and
push
push
ficoms
pushf
loope
lahf
rcrl
int3
or
or
xchg
mov
and
stc
lock
test
inc
sbb
in
es
sub
cmp
xor
dec
and
cmpsw
and
add
and
dec
stc
push
push
mov
adc
mov
pop
xorl
inc
jae
xor
call
cs
gs
inc
lret
jl
mov
add
push
jecxz
inc
mov
jns
xlat
dec
xchg
arpl
push
jmp
sbb
into
add
push
jae
add
jo
pop
or
popl
or
hlt
test
pop
sti
push
sbb
xor
xchg
mov
fidivrl
jmp
int
addr16
xor
xchg
loopne
movsb
add
fistps
mov
ret
lods
push
mov
cmp
in
aad
fwait
pusha
push
stos
mov
mov
in
in
das
jb
repz
cmc
mov
dec
cmpsl
adc
jecxz
cli
jb
push
ljmp
cmpsl
data16
mov
les
and
and
or
inc
repnz
test
aas
push
stos
inc
cmp
or
rorl
sarb
jnp
gs
cmp
ficoms
add
dec
jnp
test
dec
dec
out
cmp
addr16
dec
jae
cmpsb
jb
add
lret
imul
int
jno
divb
xchg
adc
inc
mov
sbb
movsl
insl
pop
cli
ja
xchg
and
movsl
lock
xchg
sub
dec
xor
jbe
lahf
jg
out
xchg
shr
adc
cmpsl
mov
cmpsl
lret
stos
jmp
xchg
cmp
pop
leave
or
leave
or
gs
insb
push
cmp
aad
mov
xor
test
pop
ret
mov
scas
data16
add
div
mov
jg
scas
pop
fnstcw
adc
sbb
shll
mov
mov
or
mov
arpl
cmp
inc
inc
xor
mov
sbb
nop
or
push
daa
rcrl
jno
cmp
add
add
ffreep
std
or
jle
push
inc
and
rorb
push
repz
fsubrl
push
adc
inc
xchg
add
mov
ljmp
xchg
push
jecxz
mov
outsb
or
sub
repz
fildl
or
test
xchg
adc
xor
add
rolb
cli
xchg
xlat
lcall
mov
cltd
out
mov
lret
loop
pusha
pop
data16
hlt
jne
jmp
mov
push
lods
fcmovnbe
pop
add
dec
push
cwtl
pop
mov
fcmovb
lcall
adc
ja
dec
insertq
jns
dec
dec
xchg
sub
dec
test
inc
sahf
xlat
les
push
mov
mov
negl
xchg
mov
push
push
rcll
jmp
push
mov
cmp
daa
pop
inc
push
and
lret
test
jecxz
aas
fdecstp
pushf
mull
shrb
insl
cmp
loope
shl
jnp
cmp
scas
xchg
pop
ficoms
das
shl
aam
sub
call
xchg
mov
add
pop
sarb
or
add
andl
and
pcmpeqw
aaa
xchg
subb
pushf
ss
inc
lock
mov
test
mov
add
and
rcrl
adc
lea
dec
stc
jecxz
mov
fisttpll
pop
jge
adcb
fs
shr
pushf
repz
dec
lods
jns
pop
jbe
rorb
and
mov
mov
aaa
testb
sub
sbb
test
fmuls
jb
cld
mov
mov
daa
jb
nop
sub
jp
mov
pop
mov
jecxz
fisttps
xlat
les
dec
mov
push
aam
aas
dec
pop
xor
imul
jnp
xchg
mov
inc
jo
test
push
movsl
sbbl
add
stos
adc
loop
push
xchg
cmp
ret
icebp
sti
inc
inc
jmp
test
push
mov
shrl
cmp
mov
add
scas
add
mov
fists
into
mov
fidivl
insl
adc
dec
or
dec
xchg
pop
mov
lea
std
jne
lret
push
or
mov
jbe
icebp
jbe
enter
test
and
cmp
pop
mov
mov
sub
in
cmp
lret
loop
xchg
xchg
adc
sbb
cmp
out
lods
adc
je
cmp
mov
xor
arpl
inc
xor
bound
ret
mov
inc
les
jle
jns
lahf
leave
scas
push
pop
cmp
shl
add
popa
jecxz
and
cmp
pop
sbbl
mov
outsl
iret
insb
xor
shr
fisubrl
je
cld
jle
mov
cmp
incb
stos
dec
ss
outsb
mov
sbb
lods
lret
cmp
xor
inc
mov
push
addl
ja
xor
ret
js
push
negl
in
push
addb
add
xchg
sarl
jp
sub
loop
inc
mov
and
jmp
sbb
adc
ds
jge
dec
mov
pop
adc
fdivr
mov
mov
push
xor
cwtl
and
xchg
sbb
popf
and
das
into
dec
xlat
sub
jbe
push
dec
lahf
add
dec
outsb
cmp
push
jno
insl
xor
add
inc
cld
cmp
xor
bnd
pop
lcall
sub
imul
xchg
sub
insl
add
mov
jno
or
mov
xchg
sub
aas
inc
movsl
loopne
xor
cmp
jb
and
mov
lret
out
cld
fdivs
xchg
mov
aad
sub
mov
mov
inc
inc
loope
bound
out
js
inc
out
xchg
jae
sub
into
cmpb
lcall
xchg
push
test
or
inc
pushf
adc
dec
xchg
push
daa
jns
or
mov
push
adc
ljmp
jecxz
movsb
mov
roll
xor
push
push
jnp
fstl
mov
lds
pop
das
scas
dec
jne
adc
cmpsl
loopne
xor
xchg
sti
icebp
lcall
cmp
scas
inc
sar
push
andb
loopne
or
mov
cmpsl
in
test
push
shrl
mov
mov
push
mov
lea
pop
mov
cltd
fwait
push
sub
outsb
xchg
shll
pop
pop
repnz
loope
xchg
mov
inc
jmp
and
pushf
mov
inc
ret
cmp
sub
and
mov
mov
imul
cld
xor
in
fisubrl
xchg
ret
xchg
test
stc
pop
and
mov
daa
jecxz
pop
jno
aaa
dec
xlat
adc
or
arpl
adc
cmp
loopne
mov
xchg
shlb
jge
xlat
xor
jmp
sub
pop
add
out
and
xchg
in
lcall
std
insb
jo
adc
rcr
dec
jge
popa
sub
inc
inc
into
idivl
xchg
inc
popa
loope
repnz
mov
ss
or
pop
xor
xor
or
xlat
inc
sbb
xor
xor
out
or
mov
cmp
sbb
popf
subl
mov
sbb
cltd
in
ds
les
pop
movsb
sahf
xlat
shlb
or
fdivrl
icebp
fdivl
jne
mov
clc
fsubrp
jl
pop
outsl
dec
js
adc
cmp
sub
jecxz
jnp
stos
aaa
scas
pusha
xchg
mov
mov
imul
insb
loop
mov
add
add
jle
pop
bound
push
psrlq
test
mov
xlat
add
fdiv
jne
rcll
mov
enter
testb
icebp
std
or
sub
push
sub
mov
aas
mov
jg
mov
and
fcom
cmp
mov
aaa
fdivrl
sub
notb
sbb
dec
cmp
cmpsb
movsl
cmpsb
dec
push
adc
xlat
adc
sub
pop
or
push
inc
xor
xor
push
add
cmp
mov
cld
aad
shrl
aam
add
clc
dec
cmp
dec
cmp
rclb
mov
jl
js
xor
jae
mov
in
pop
rcl
jle
xchg
cmc
lea
cmp
lea
jb
addr16
test
jmp
pushf
shrb
clc
je
sahf
das
pushf
fidivrl
outsb
test
loopne
ror
jecxz
mov
in
sub
dec
aaa
xor
insl
ffree
movmskps
mov
out
iret
cli
xor
cmpsb
test
aad
inc
push
lcall
mov
and
jge
and
sub
movsl
jns
aas
hlt
fadd
cmpsb
outsb
jbe
pop
cltd
sub
cli
pop
aam
out
dec
xor
cwtl
pop
movsb
les
call
push
loopew
jne
data16
fiadds
mov
xchg
aas
mov
test
xchg
loopne
mov
cmpsl
pop
daa
pop
shr
neg
insl
mov
mov
in
andl
mov
adc
jge
ds
ds
in
cltd
push
xchg
and
out
xor
xor
jge
mov
loopne
cmpsl
push
imul
jbe
in
add
fldenv
fiadds
or
sub
dec
and
test
testb
gs
or
lods
ss
sbb
movsl
out
out
mov
or
sbb
rcl
xchg
cwtl
pop
xor
sbb
dec
mov
add
imul
sbb
xor
sti
and
shrl
ljmp
dec
inc
imul
lret
cmc
mov
jle
popf
addb
cltd
cmc
cmp
cmp
mov
fiaddl
je
xchg
inc
mov
popa
fmul
sbbb
push
jbe
or
enter
test
pop
adc
xchg
cmp
movsl
cmc
fisubl
hlt
arpl
into
mov
cwtl
cmp
das
xchg
dec
and
in
add
push
dec
daa
sarb
inc
xor
add
and
mov
cli
sahf
cltd
out
cmp
gs
cmp
adc
in
jl
cmp
pop
jmp
cmp
mov
fsincos
jne
jge
ja
mov
mov
lcall
mov
cmp
mov
xchg
dec
push
mov
stos
lcall
and
les
adc
adc
sub
mov
adc
nop
bound
out
mov
in
rolb
sub
filds
ja
push
test
jnp
inc
or
cmc
shll
out
jo
pop
xchg
mov
dec
xor
out
fiaddl
scas
es
jg
out
out
cmp
cmp
inc
sbb
inc
enter
lret
xor
inc
hlt
rorl
jbe
pop
mov
ljmp
loopne
enter
jl
shll
movsl
stos
popa
gs
push
push
mov
cli
nop
cmp
cmpsl
hlt
ds
xor
xchg
dec
sub
mov
cld
repz
negb
xor
repz
and
ss
xchg
jae
scas
ljmp
inc
mov
inc
cmp
sbb
sbb
rorl
data16
in
nop
pop
test
aad
shl
xchg
sbb
in
add
int3
adc
insb
out
daa
inc
scas
lcall
hlt
repz
cmp
fisttps
stos
scas
mov
mov
fisttpl
pop
aaa
mov
dec
lea
pop
int3
flds
sti
ret
dec
dec
jle
outsb
mov
cmp
mov
orl
inc
mov
stc
push
push
xor
popf
mov
xchg
xchg
xor
sbb
ss
insb
in
out
sub
jo
rclb
arpl
pop
mov
mov
push
xchg
jle
jl
scas
cld
popw
inc
cmp
mov
mov
mov
jmp
cmp
cmpsl
loope
jno
jbe
adc
push
or
xchg
bound
push
das
gs
dec
adc
xor
clc
cmc
and
shlb
mov
add
sbb
das
ss
inc
out
adc
pop
cmp
sbb
loope
jbe
xlat
xlat
push
adc
xchg
xchg
fbstp
es
insb
xchg
sub
add
sbb
lahf
imul
iret
and
fucomp
mov
or
push
mov
mov
lcall
mov
push
repz
movsb
inc
push
js
mov
sub
or
pop
jl
jmp
test
popa
xchg
shll
loop
sub
add
ret
jbe
jl
xchg
fisubs
dec
inc
xor
icebp
jecxz
mov
cmp
jp
call
cmp
aas
mov
jb
mov
inc
dec
jnp
cmp
add
out
and
push
pop
inc
stos
pop
mov
ss
pop
xchg
nop
fldenv
xor
mov
xchg
fdivp
fwait
jo
add
or
add
iret
xchg
push
test
push
cmp
push
adc
lods
jnp
adc
sahf
repnz
push
into
call
pop
shl
test
loopne
shll
push
imul
jns
sbb
xlat
cmp
imul
aam
aas
xor
adc
loopne
mov
leave
dec
shlb
mov
ljmp
movsb
scas
jne
xchg
fistpl
mov
sarl
mov
icebp
push
shl
jo
or
ror
add
test
adcl
popf
mov
clc
fistps
add
dec
cmp
lock
enter
push
insb
dec
andb
mov
and
movsb
dec
jmp
mov
imul
inc
pop
dec
sbb
push
push
pop
std
iret
push
pop
sbb
nop
push
ss
dec
ljmp
bound
nop
sbb
mov
shrb
inc
test
mov
mov
test
jp
mov
clc
pusha
ret
and
mov
inc
enter
aaa
in
cld
push
sub
or
inc
sbb
fcom
popa
addl
mov
ljmp
rorb
leave
adcl
repz
fdivr
cmp
mov
sti
sti
loop
ljmp
cmp
inc
add
call
mov
dec
pushf
je
out
or
add
xor
cwtl
cmp
in
dec
insl
addr16
icebp
dec
and
lods
cwtl
push
pop
int
cmpsb
pop
std
adc
dec
mov
mov
jnp
mov
cli
ds
mov
xor
jmp
add
inc
sub
test
out
dec
mov
inc
int
inc
xor
add
adc
sub
jne
add
iret
cli
sbb
inc
orl
jns
call
out
jae
and
inc
jnp
pmullw
inc
cmp
add
out
shrb
inc
sbb
mov
xor
xchg
test
ret
mov
push
push
fwait
mov
cwtl
xor
pop
and
add
test
mov
jmp
insl
pop
push
out
ficomps
mov
aad
push
out
movsl
sub
and
xor
pop
enter
mov
sub
xchg
jae
loopne
ret
add
add
inc
cmp
xchg
iret
stc
ss
push
pusha
in
roll
cld
jo
mov
pop
inc
sar
jo
movsl
cmp
aaa
push
clc
addb
push
stos
stos
aam
xchg
incb
mov
in
lds
and
mov
arpl
cwtl
dec
out
pushf
mov
or
clc
out
test
iret
push
loope
mov
fwait
lods
xor
sbb
arpl
jns
xor
or
bound
loop
cmp
pop
inc
inc
pop
xchg
xchg
add
pop
and
ret
jns
add
fcmovbe
dec
js
or
and
in
test
xchg
shrl
movsb
inc
fsubrs
jl
adc
jbe
add
shrb
insb
cmp
mov
fsubs
sbb
test
int
dec
mov
xchg
push
pop
push
mov
in
mov
xor
out
outsl
jg
xchg
adc
sub
jecxz
mov
pop
fildll
movsb
fstps
clc
or
xor
mov
test
dec
out
leave
test
or
iret
adc
mov
int3
jmp
pop
rclb
lahf
mov
sbb
das
mov
in
inc
stc
mov
mov
rcrl
and
sarb
dec
nop
leave
jl
add
xchg
inc
xchg
pop
loop
popa
testl
lret
jp
mov
push
mov
xchg
stos
scas
jl
mov
xor
ficomps
in
popa
jb
fmull
mov
fmull
loop
mov
iret
mov
bound
mov
mov
addr16
or
lret
call
test
imul
subb
push
gs
mov
les
or
insb
cmp
dec
cltd
inc
push
jnp
insb
or
xor
or
pusha
inc
and
arpl
in
lds
inc
mov
fs
daa
rolb
sub
dec
mov
push
xor
mov
adc
inc
pop
fsts
fsubs
outsl
out
dec
icebp
clc
sbb
imul
xchg
cmpsb
xor
gs
cltd
mov
xlat
outsb
ss
ficoml
sbb
mov
push
push
push
mov
hlt
push
mov
int3
mov
cltd
sbb
inc
and
jnp
les
lret
in
sub
pop
rcrl
adcl
cmp
or
xchg
add
shl
loop
jns
insb
scas
pop
jo
out
cltd
adc
lods
mov
pop
mov
icebp
pop
pop
ret
mov
movsl
inc
addl
lea
pusha
cmp
sub
outsl
cwtl
push
popa
push
mull
addr16
mov
mov
push
ljmp
mov
push
push
outsl
jno
pop
popa
aaa
inc
mov
ja
and
lods
jo
inc
xchg
inc
inc
jmp
imul
sbb
cs
xchg
aam
inc
add
mov
sub
cmp
es
adc
icebp
movsb
ljmp
in
addr16
popa
mov
scas
lods
in
xor
data16
jl
push
test
inc
mov
aad
int
call
imul
addb
int3
push
pop
je
cwtl
or
pop
add
std
jb
jno
push
shll
and
out
aaa
lea
pop
in
mov
js
jno
pop
scas
adc
inc
cmp
adc
outsb
cmpsl
movsb
xor
sub
mov
jne
nop
nop
xor
xchg
addr16
jnp
pop
lcall
repnz
jb
mov
push
mov
and
add
xchg
leave
pop
inc
adc
adc
dec
xchg
mov
ficompl
mov
pop
andb
xor
cwtl
out
inc
je
loopne
xchg
scas
pop
aam
xor
test
ljmp
pop
movsb
cmpb
sahf
push
mov
inc
push
sbb
pop
dec
jns
sub
fmuls
mov
add
lahf
pop
cmpsl
cmp
shlb
cmc
and
cwtl
jge
jmp
jbe
xchg
adc
rorl
insb
cmp
push
lret
ucomiss
pop
inc
lods
loop
xchg
push
xchg
adc
scas
sbb
sahf
and
adcb
push
aas
add
ret
nop
rcll
sbb
mov
mov
inc
xchg
jno
mov
sbb
push
sub
repz
imul
and
ljmp
icebp
inc
out
fsubrs
sub
ljmp
and
inc
ficoms
nop
mov
mov
xchg
mov
jecxz
or
jle
push
pop
fwait
mov
mov
scas
fwait
push
add
ret
cmp
test
ja
xchg
mov
xorl
pop
dec
addr16
aas
sbb
sbb
es
inc
jnp
mov
mov
ja
mov
call
and
inc
inc
sbb
add
mov
addr16
xchg
cmc
push
push
mov
subl
popa
inc
xor
repz
out
movsb
fisubrl
push
ffree
rclb
adc
jecxz
test
xchg
xchg
insb
aad
fisubrl
out
cs
shlb
dec
xchg
divl
int
sbb
rcrb
pop
jne
sbb
mov
lret
in
mov
jbe
jecxz
xor
cmp
inc
mov
cmp
lahf
mov
jmp
sub
leave
xchg
das
lods
imul
jg
fsts
xchg
dec
sub
roll
pop
add
popf
push
int
sub
push
in
inc
mov
lods
out
and
lea
gs
sahf
or
mov
imul
bound
add
and
mov
mov
mov
es
or
cmp
adc
xor
dec
pop
call
jl
psllw
loope
sub
add
adc
cwtl
and
dec
mov
bound
cmp
and
push
jne
mov
mov
dec
repz
or
push
mov
jl
pop
popa
lcall
imul
mov
ffree
mov
mov
sti
jg
fdivrs
data16
out
pushf
fldl
mov
cli
or
xor
and
test
negb
movsl
adc
dec
sbb
adc
sub
push
popf
mov
test
lcall
sbb
mov
inc
xor
pop
adc
push
or
fcompl
jo
ret
inc
popa
je
stc
dec
xor
pop
inc
nop
pop
fbstp
rorb
fisttpll
inc
addr16
push
xchg
stos
test
in
jb
sub
outsb
push
xchg
push
pop
mov
push
pop
jae
add
dec
cld
push
sbb
dec
jmp
bnd
loope
mov
idivl
jecxz
adc
insl
sub
ret
cli
icebp
lds
in
pushf
jne
jo
lret
lods
jbe
sub
pop
in
mov
int
xor
ljmp
sbb
cmp
adc
std
cli
mov
fsubrl
addr16
cld
pop
jo
adc
cs
and
cmpsl
in
into
mov
pop
hlt
or
sub
mov
or
sahf
and
bndstx
pop
mov
inc
sbb
inc
or
mov
frstor
shr
dec
xor
xor
push
lods
out
add
or
sbb
or
mov
pop
mov
sbb
nop
or
push
addr16
out
rorl
add
cli
add
mov
cmp
mov
mov
sub
enter
push
adc
jmp
popf
lds
les
rorb
rcrl
ja
fsubl
jp
outsb
test
sub
and
sbb
push
es
ljmp
xor
sbb
push
shlb
xchg
stc
cltd
pop
in
stos
pop
inc
or
xchg
sub
push
rolb
cmpsb
jne
movsb
mov
jno
insl
add
mov
movsb
ljmp
test
xchg
mov
pushf
dec
mov
andl
push
cmc
push
mov
fdivs
inc
mov
xchg
pop
andl
mov
lahf
adc
hlt
xchg
inc
pop
repnz
and
jo
add
xchg
jmp
out
mov
sub
xor
adc
stc
out
adcb
dec
xchg
in
lahf
dec
cmp
hlt
test
and
inc
test
jl
lds
and
sub
mov
and
sbb
lret
cmpb
repnz
xor
stos
xor
xor
mov
xchg
scas
outsl
or
sbb
push
addr16
mov
outsl
jmp
test
sub
pop
int3
sub
mov
jge
or
dec
xchg
std
mov
fidivrs
in
xor
xor
cwtl
sbb
adc
xchg
inc
push
pusha
out
push
push
mov
xchg
nop
pop
addr16
shrb
bound
aam
cmp
imul
and
stos
loopne
push
inc
dec
out
daa
xchg
sahf
and
fidivrl
sbb
push
lret
jne
add
je
outsl
push
or
je
mov
mov
and
ds
pushf
sarb
cmp
cmp
inc
cmc
je
sub
insl
dec
out
in
lret
dec
push
cwtl
pushf
mov
scas
cltd
or
sbb
rorl
xor
pop
bound
fwait
cmp
ffree
lret
inc
movsl
in
mov
sarl
jl
into
push
incb
lods
rol
lds
push
neg
adc
sub
cmpsl
imul
xor
push
fildl
cmp
jmp
and
xor
lods
jecxz
hlt
orb
pop
or
jb
mov
icebp
mov
repz
add
mov
or
push
push
pop
arpl
sub
pop
es
test
movsb
and
sbb
cmpb
mov
sbbl
mov
pop
xor
mov
lahf
cmp
add
mov
and
shlb
pop
mov
repz
enter
push
iret
testb
jo
lods
movd
insb
testl
inc
xor
pop
mov
mov
daa
int
aam
inc
fdivrp
hlt
push
outsb
imul
or
fiadds
cwtl
call
dec
adc
jge
fsubs
mov
jns
add
adc
mov
jbe
cmp
cld
push
push
cmp
sub
shl
aad
push
out
dec
adc
movsl
btrl
sbb
push
movsb
rcrl
dec
pushf
imul
es
roll
jo
jge
loope
xor
in
hlt
mov
and
and
mov
mov
sahf
sbb
nop
js
push
in
clc
outsl
xchg
adc
jae
jle
push
popa
addb
in
pusha
nop
mov
and
data16
popf
inc
mov
nop
or
xchg
cs
gs
pop
mov
enter
jecxz
out
pop
iret
sarb
out
mov
dec
adc
loopne
aaa
inc
or
pop
mov
mov
pop
mov
push
stos
push
mov
mov
das
mov
insb
dec
stos
sub
callw
test
int3
int
mov
aam
inc
xchg
pop
in
mov
and
adc
jp
pop
and
and
add
cwtl
pop
push
int
int
jge
repz
shll
stos
mov
jo
outsl
movsb
inc
mov
addr16
add
pop
sbb
das
mov
and
int3
add
dec
addl
sbb
push
inc
and
mov
or
sbb
cmp
dec
mov
scas
sbbl
jecxz
test
test
shll
mov
shr
xchg
sub
dec
jmp
mov
add
movsb
mov
loop
inc
inc
push
ss
scas
mov
mov
dec
int3
and
or
jbe
mov
lods
pop
mov
mov
sbb
icebp
dec
shlb
push
xor
xor
push
sub
ret
pop
mov
mov
inc
xor
daa
sti
ficompl
ljmp
in
mov
and
enter
pop
enter
iret
fidivs
sbb
arpl
sub
push
mov
xor
dec
andl
cmpsb
xchg
push
mov
add
xchg
mov
jecxz
xor
dec
pop
lock
lret
push
sar
lods
daa
out
lcall
xchg
dec
imul
ficoms
scas
fdivrl
inc
sub
cmp
and
repnz
cmp
mov
outsb
les
sub
dec
das
cmp
lcall
fisubl
sbb
xlat
mov
cmpsb
fldt
sarl
rcrb
test
ljmp
sbb
pusha
mov
mov
je
jmp
mov
fisubrl
jae
mov
cmc
push
inc
dec
repnz
push
movsb
popa
test
jne
out
mov
push
dec
outsl
sub
mov
repnz
pop
pop
or
mov
sub
add
je
fbstp
push
mov
jp
push
movsl
enter
push
xor
insb
jecxz
and
into
or
jne
xor
mov
sarb
in
jecxz
pushf
in
inc
mov
dec
scas
mov
mov
ret
in
add
cmp
jg
xchg
push
pop
push
or
push
lea
or
push
shlb
imul
pop
mov
pop
iret
push
js
jbe
mov
pusha
adc
jge
and
jl
push
rcll
jbe
into
and
lock
jecxz
adc
pop
ss
push
jp
aaa
fs
call
dec
mov
fsubrp
xchg
xchg
es
push
add
je
xor
nop
jge
not
xchg
push
inc
mov
xchg
push
jmp
outsb
jns
imul
stc
and
outsb
div
int
pop
xor
push
and
xorb
push
cmovns
iret
cmp
add
add
mov
xchg
and
repz
ja
filds
push
cmp
cmpsb
stc
cmp
das
mov
mov
stos
imul
call
inc
popf
popa
outsl
lods
push
or
push
and
aas
mov
add
push
pop
jl
push
das
xor
push
lock
mov
jae
jns
push
shll
mov
in
and
rolb
mov
mov
in
mov
das
enter
lret
leave
and
or
dec
jecxz
sub
js
pop
mov
fs
lods
mov
inc
push
pop
lock
and
pop
nop
sbb
push
sub
cmc
pop
dec
hlt
movsl
jne
gs
icebp
inc
mov
hlt
mov
cmp
push
add
shl
imul
add
jb
dec
lret
cmp
sub
xor
dec
out
xor
and
punpckldq
xchg
cltd
mov
icebp
push
loopne
popf
lock
xchg
mov
mov
cmp
push
dec
arpl
jno
pop
test
subps
xor
lods
add
pop
jo
out
shl
push
push
pushf
pop
lret
pop
dec
subl
inc
sti
mov
dec
adc
mov
inc
loope
dec
push
jbe
mov
in
inc
pop
es
push
jno
hlt
jo
cmpsl
sbb
cmp
jb
lahf
std
and
es
and
popa
or
ljmp
lret
stos
mov
in
fisubrl
lret
iret
in
das
imul
cltd
fbstp
mov
stc
jp
ror
jecxz
xchg
dec
jno
dec
loopne
cltd
mov
dec
icebp
repz
xor
int3
push
movsb
pop
mov
dec
adc
pusha
cmpsb
dec
test
in
pop
mov
mov
push
mov
xor
vmovapd
shll
pop
in
cmpsb
hlt
jb
xchg
pop
pusha
imul
stc
lret
cmp
daa
clc
testl
cmc
in
addl
outsb
movsl
pop
xlat
xor
sub
cmp
sbb
push
jp
cmc
orl
int
cmpsb
ss
pop
push
stc
sub
mov
ret
in
mov
jmp
iret
mov
dec
xor
loop
stc
movsb
rol
test
mov
jp
pop
std
clc
outsl
lds
std
pop
and
ljmp
dec
inc
mov
aas
mov
bound
pop
pop
mov
arpl
test
out
stos
lds
xor
and
or
inc
or
xor
mov
mov
arpl
sahf
pusha
or
sub
mov
pop
fbstp
icebp
mov
fsub
stc
mov
js
inc
cmpsb
cmp
lahf
dec
idivl
inc
mov
gs
mov
mov
jae
fld
jecxz
xchg
loop
mov
fsubr
xor
xorl
subb
nop
cmp
adc
fdivrl
movsl
cmpb
mov
xor
sbb
and
push
or
cld
ret
or
lods
cmp
cmc
es
push
ljmp
aad
adc
shlb
dec
mov
add
inc
cs
inc
repz
test
push
enter
add
add
and
bound
cltd
push
rclb
mov
ret
pushf
outsb
stc
sarl
sbb
ljmp
in
js
xchg
mov
out
mov
pop
jge
cwtl
and
pop
jb
cmpsb
arpl
outsl
js
mov
xchg
jno
je
inc
xchg
lahf
mov
inc
push
pop
add
test
gs
shlb
rcrl
aam
pop
xchg
pop
cmpsl
add
cmp
xchg
xchg
xchg
mov
fwait
loop
mov
cmp
fstpl
pop
xor
mulb
aam
lret
push
adc
es
pop
cltd
repz
jo
xorl
lahf
fwait
enter
sbb
popf
stc
adc
push
cli
mov
xor
mov
ficoml
int
cld
and
push
mov
xor
loop
cmp
xor
mov
push
pop
imul
mov
adc
mov
mov
sti
cmp
lret
mov
jno
in
or
push
aam
push
cmc
pop
cmp
xchg
xor
into
mov
cmp
sub
pop
mov
mov
inc
or
movsb
loopne
rol
loop
lods
xchg
pop
punpcklwd
mov
pop
lret
cmp
mov
dec
cmp
sbb
pusha
iret
fmuls
sub
lcall
test
divl
mov
and
add
xchg
lahf
in
adc
jg
popa
push
jne
shl
xchg
fcompl
adc
daa
addb
pop
lods
in
and
jl
cli
add
insl
xor
or
xlat
and
xchg
mov
dec
mov
fcoms
lea
xor
imul
dec
jnp
push
xchg
shll
dec
push
sahf
xor
addr16
popf
scas
popf
cmp
in
aad
mov
fsubl
push
lods
dec
mov
sub
loopne
lock
add
insl
pop
jnp
mov
pop
lods
call
mov
push
aam
mov
and
loope
fcmove
faddl
push
and
mov
jg
push
push
leave
into
neg
mov
pop
je
cmp
inc
mov
daa
rcrl
cmp
imul
fnstsw
or
cmp
adc
subb
scas
mov
enter
xor
cmp
or
adc
fidivs
mov
pop
sbb
test
loope
ret
inc
push
in
add
mov
adc
pop
sbb
cli
add
push
sahf
jmp
adc
popa
sbb
mov
mov
push
dec
pop
sbb
mov
rorl
sahf
jo
lret
prefetcht2
lods
pop
out
bound
pushf
out
jae
outsb
push
cmp
outsl
ss
into
aam
sub
add
or
xchg
mov
fnstsw
sbb
sub
sbb
fcomps
out
push
repz
or
or
mov
stos
pop
stos
pusha
pop
pop
xchg
mov
mov
ljmp
lea
cs
and
ljmp
addb
dec
pop
mull
fs
cmp
cli
jae
daa
or
scas
dec
sub
cmc
xchg
lret
in
aaa
jb
inc
sti
out
xchg
cmpsb
mov
adc
cmp
aad
mov
loopne
push
jno
lods
jmp
add
pop
test
jno
jo
xchg
scas
mov
ljmp
in
scas
cmp
cmp
lock
cmp
cmp
pop
jmp
js
sbb
shrl
mov
test
mov
mov
mov
cmp
in
std
clc
movsl
mov
ss
into
testl
pushw
add
add
js
sbb
stos
sbb
stc
jecxz
icebp
push
loope
adc
out
cmpsb
lahf
popf
xchg
sbb
pop
pop
rcrl
in
int
aaa
cmp
scas
mov
test
lds
insl
cmp
mov
xlat
stc
repz
pusha
mov
in
push
pusha
jl
nop
mov
std
mov
mov
lret
xor
dec
out
lods
test
mov
sub
adc
adc
pop
fninit
gs
pop
cmc
pop
fistpl
mov
setae
xchg
decb
in
shl
sub
and
loopne
int
lahf
sbb
push
ss
pop
sub
jg
xor
mov
xchg
sahf
cmp
enter
setns
sub
push
les
sti
in
push
mov
sti
ror
aaa
xchg
or
sub
jne
mov
push
sbb
push
jbe
hlt
and
push
jecxz
add
fs
cmp
cmp
sub
mov
dec
pusha
inc
hlt
or
cmp
int3
jae
xor
cmp
push
repnz
push
mov
xchg
sub
adc
outsb
movsl
shlb
or
fisttps
in
test
lock
ret
aas
iret
dec
lds
out
lods
int3
xor
pop
stc
inc
mov
leave
rcl
pushf
and
fdivr
mov
js
jmp
cwtl
aam
xor
pop
cmc
imul
sahf
cmp
notl
cmp
xlat
mov
pminub
ret
lret
inc
cli
ja
outsl
and
jl
mov
sbb
arpl
and
adc
pop
mov
rep
or
inc
xchg
dec
mov
shll
push
mov
mov
dec
inc
mov
lods
jns
mov
pushf
sub
xor
psadbw
push
faddl
and
mov
inc
and
adc
out
or
stc
and
jnp
mov
adc
movsl
seta
insl
inc
fs
popa
dec
hlt
mov
adc
inc
lret
loope
jbe
cmpsl
push
cmc
loopne
cwtl
popw
mov
fcomp
add
and
jge
dec
lock
mov
test
mov
pop
xor
xchg
mov
stos
adc
xorb
pushfw
ljmp
xlat
hlt
lret
vphsubdq
pop
mov
outsb
and
notl
hlt
push
stos
sti
sti
roll
mov
push
xchg
into
scas
stos
data16
aaa
cltd
outsl
and
push
shlb
scas
sub
push
xchg
xor
inc
dec
js
inc
push
mov
loopne
mov
rclb
dec
xor
push
scas
jno
das
out
iret
les
adc
fldenv
pop
popa
or
or
sahf
scas
fcomi
popf
add
subl
stc
push
sbb
add
dec
mov
mov
out
scas
push
jl
xchg
gs
bound
and
xchg
loopne
jp
lret
add
inc
xchg
cld
or
das
inc
pop
cmp
out
pop
ss
inc
test
cld
mov
xlat
adc
inc
loop
jnp
outsl
or
push
cmp
jmp
xlat
pop
mov
sub
loopne
dec
cltd
cwtl
aam
in
jg
and
test
imul
cmp
or
mov
pop
xor
xchg
mov
xor
mov
lock
stos
add
xor
jne
incl
pop
popa
jae
inc
fildl
mov
jl
int
add
inc
adc
fcoml
ja
es
sti
test
push
icebp
mov
mov
push
dec
mov
imul
jge
add
dec
daa
sub
mov
mov
movl
stc
mov
sbb
mov
and
xor
enter
and
jo
add
cmc
vpminsw
outsb
and
rcll
mov
ja
mov
jb
aam
xchg
js
nop
mov
mov
aaa
ljmp
sti
sbb
shrb
inc
or
cs
dec
negb
cld
or
cmpsb
sub
push
into
cli
xchg
and
add
out
jmp
lahf
iret
push
in
addr16
jns
pop
or
mov
add
push
or
popa
pop
imull
enter
iret
orl
and
int
ja
lds
out
push
xor
cwtl
adc
jnp
mov
add
leave
shlb
testb
xor
test
xchg
out
jbe
add
inc
jo
cli
hlt
mov
lahf
outsb
insb
out
out
leave
cmpsb
jge
or
add
push
rorb
mov
sti
fstpl
sbb
addr16
or
and
push
hlt
aad
jle
fs
pusha
sub
enter
insl
cmp
jns
inc
pop
pop
mov
out
fiaddl
push
cmp
nop
push
push
inc
leave
inc
or
out
cld
shr
enter
mov
outsl
adc
loope
pop
pop
cmp
push
fsubp
and
jne
gs
mov
xchg
pop
cmp
jnp
xchg
jbe
adc
ret
jle
mov
pop
mov
jns
sahf
xorb
adcl
pextrw
xor
push
jbe
mov
add
int3
out
dec
jecxz
in
lods
jbe
or
mov
les
fmulp
inc
cmpsb
xchg
xor
enter
insb
pop
cmp
int3
test
mov
js,pn
mov
push
stos
sbb
popa
fstps
fsubrp
mov
lcall
test
loope
out
mov
mov
push
es
jbe
inc
push
hlt
test
leave
adc
push
inc
jae
jl
popf
movsb
jno
sbb
pop
or
mov
jmp
fidivs
xchg
cltd
ret
pop
dec
scas
or
and
sub
jmp
fiadds
lods
sbb
xor
pop
in
add
push
mov
les
ret
add
dec
stos
cltd
sti
cmc
fstps
push
popf
pop
sbb
dec
mov
cmpb
dec
cmp
push
loopne
notl
jge
inc
jmp
arpl
dec
rcl
aas
jb
negb
push
dec
repz
xchg
pop
pop
adc
push
or
xchg
jp
mov
dec
dec
mov
add
xchg
mov
xor
nop
pop
pop
mov
cmp
outsb
xor
dec
out
inc
inc
repnz
cmp
mov
imul
lcall
movsl
sbb
push
jmp
insb
push
inc
push
call
pop
add
mov
adc
dec
mov
and
cmp
sahf
divps
in
xchg
in
push
fisubs
sti
dec
test
mov
adc
cmpsb
lds
test
mov
xor
icebp
cmc
dec
mov
cmp
dec
clc
and
lret
sahf
add
mov
aad
adc
mov
xchg
mov
je
add
mov
xor
adc
addl
xor
dec
xor
pop
mov
roll
ret
fbstp
imul
es
jb
sbbl
adc
or
cmp
test
ret
mov
repnz
adc
mov
mov
push
sti
mov
ret
loope
push
shlb
int
psadbw
and
xor
mov
inc
iret
dec
sahf
ljmp
test
in
mov
or
lods
insb
arpl
pop
bound
sahf
sub
mov
pop
or
fs
popa
pop
shll
dec
imul
call
dec
in
loopne
and
lret
enter
loope
cmp
mov
das
mov
mov
pop
ds
je
orb
shlb
test
mov
pop
fs
add
cmp
dec
clc
mov
or
fmull
jl
sbb
cltd
test
xchg
jg
stos
adc
les
je
flds
or
rclb
scas
jmp
jo
in
stos
repz
jo
jne
cmp
arpl
mov
fildll
mov
aaa
icebp
jge
xchg
jne
cli
hlt
or
xor
jmp
add
in
or
popa
or
adcl
punpckldq
loope
sub
cs
dec
lods
xor
cmpb
imul
mov
outsb
or
nop
ret
arpl
push
cmpsb
adc
push
push
and
pop
gs
xchg
or
mov
mov
xchg
or
inc
mov
mov
jne
xchg
push
push
and
shll
inc
dec
mov
and
movsl
gs
xorl
dec
sbb
std
out
inc
fisubrs
fs
xor
iret
in
mov
jns
push
orl
and
push
or
loope
lcall
iret
and
jmp
or
std
mov
mov
fdivrl
cmp
or
push
adc
pushf
sbb
sbb
bound
lods
out
aas
pop
mov
jns
cmp
lahf
mov
and
mov
mov
jge
sbb
push
push
insb
ljmp
add
adc
and
jp
lret
test
mov
inc
test
mov
les
fwait
lods
scas
psubw
mov
jp
fstpl
les
add
insb
xchg
jns
out
jno
ja
das
nop
in
fisttpll
lock
xlat
lds
and
push
out
stos
jle
sub
cmpsb
xchg
in
in
or
push
jg
cmp
inc
xchg
dec
pop
data16
fwait
mov
push
lret
mov
enter
jne
call
adc
mov
jp
mov
add
lock
jae
add
and
ss
pop
rcll
insb
daa
adc
test
ds
fsts
fdivr
sbb
pop
sub
pop
enter
sahf
pop
dec
cmp
lret
ja
cmp
lods
decl
mov
push
inc
push
out
mov
pop
in
cmp
aaa
out
dec
enter
xchg
mov
jne
lods
and
scas
movsl
jmp
jne
outsb
shrl
or
inc
cli
lods
ret
or
push
loopne
repnz
mov
xor
add
sti
mov
sbb
xchg
sbb
cs
out
fnstenv
lock
sub
jne
xchg
cmp
inc
push
push
decl
pushf
adc
xchg
inc
loop
mov
jnp
pop
roll
dec
fbld
lods
jo
push
inc
lds
mov
lcall
jl
pushf
or
mov
pusha
movsl
mov
pushf
or
lods
xchg
push
test
pop
mov
and
inc
cwtl
fdivrp
scas
adc
hlt
popf
cltd
dec
iret
add
js
sbb
and
cmc
pop
pop
dec
mov
test
xor
mov
xchg
out
mov
or
divl
ret
sbbb
dec
pop
and
adc
faddl
pop
nop
cmpsb
jg
sbb
repz
ds
fidivrl
out
xchg
outsl
xor
loop
gs
daa
sbb
inc
ljmp
sub
adc
gs
aam
pushl
out
std
mov
sar
movups
mov
inc
mov
xor
push
inc
xchg
jp
lret
cli
mov
jno
pop
addr16
adc
and
popf
out
por
pusha
nop
mov
push
push
scas
cmp
jge
add
adc
jp
ret
imul
cmp
xchg
test
out
scas
mov
dec
incl
sub
sti
pop
pop
loopne
dec
push
xchg
test
push
ds
sti
push
mov
mov
ss
ror
fisubrl
dec
into
aam
ja
adc
mov
mov
test
mov
or
sbb
es
aaa
sti
lods
and
lret
insb
cmp
xchg
and
daa
jo
jne
adc
out
mov
mov
adc
inc
mov
xor
pop
dec
out
jb
fsubs
testb
pop
jge
xchg
xchg
jo
cli
or
fcomps
insb
xchg
xchg
inc
mov
adcb
cmp
dec
and
jmp
mov
dec
repnz
rclb
mov
out
mov
cltd
clc
sub
mov
movsw
jecxz
jge
and
adc
mov
out
sbb
jge
cmp
das
jb
inc
ficomps
jg
pushf
add
or
hlt
push
ficompl
fcoml
pop
pop
aaa
dec
jmp
mov
jo
aas
mov
popf
test
ja
pop
lods
cwtl
pop
mov
aam
mov
add
inc
std
xor
pop
push
adc
or
lret
sub
int3
push
sub
inc
imull
frstor
xor
in
and
add
dec
push
add
pop
or
mov
shll
or
imul
push
js
mov
xchg
pop
mov
arpl
aas
cmp
pop
mov
mov
mov
dec
je
aaa
mov
or
pop
loop
lods
mov
cmp
ljmp
fldl
jo
jnp
add
push
mov
mov
mov
xlat
std
repnz
loop
pop
adc
insb
cmp
mov
jnp
dec
mov
xorps
mov
mov
lods
ljmp
and
jl
dec
sahf
stos
adc
or
into
ljmp
xor
pop
adc
jmp
mov
fcmovu
lahf
fmuls
mov
loope
add
pop
test
adc
stos
push
mov
pop
xor
les
test
iret
xor
lret
sbb
mov
mov
sbb
nop
lcall
adc
jbe
sub
ds
push
or
stos
test
pop
mov
int
mov
cmp
cld
lahf
jo
mov
mov
pop
mov
nop
adcb
xchg
lret
dec
inc
mov
sbb
jmp
sbb
dec
sbb
data16
addr16
xchg
jo
cmc
jge
add
cmp
cmp
xchg
std
mov
daa
pop
mov
jnp
xchg
loope
ret
fidivs
pop
imul
pop
jecxz
sbb
shll
mov
mov
popf
xchg
pop
lock
push
sbb
jns
sahf
inc
add
jb
negb
jo
punpcklbw
dec
xchg
mov
add
inc
fwait
popa
iret
popf
roll
aaa
xchg
daa
xor
mov
loop
and
shlb
fldl
mov
pop
add
push
jno
jl
insb
push
xor
aas
xor
xchg
adcl
mov
mov
repz
mov
sti
inc
lret
jae
or
loop
mov
sbb
or
push
adc
lods
jmp
enter
pushf
outsb
jmp
lret
cmp
adc
push
jmp
push
fstps
out
cltd
pushf
repnz
mov
fwait
xchg
pusha
aaa
sbb
sahf
add
add
adc
into
sti
stos
orb
push
adc
out
adc
inc
hlt
jo
std
pop
adc
sub
push
es
fs
push
push
adc
inc
mov
enter
es
lcall
stos
iret
lock
jmp
inc
and
daa
push
mov
test
xchg
rcr
imul
pop
xchg
addr16
push
mov
in
mov
mov
int
pop
sbb
int3
loopne
mov
fimull
loope
push
repnz
clc
out
out
pop
cmp
xchg
add
push
scas
push
mov
add
mov
push
inc
mov
incb
in
and
push
adc
or
pop
and
pop
push
pop
jg
cmp
mov
loope
daa
dec
inc
rcll
jg
mov
cwtl
gs
shll
dec
repz
outsl
xor
add
in
push
daa
sti
cmpsl
cmpsb
dec
int
out
sahf
fwait
fwait
in
iret
aad
lock
and
push
pushf
xor
out
cmp
fs
ds
insb
inc
cmp
mov
cltd
or
outsl
xchg
dec
in
insb
inc
sahf
xor
lret
pop
sub
mov
inc
in
adc
xchg
push
popa
mov
push
les
push
fistpll
ljmp
push
sub
bound
and
dec
or
daa
inc
jmp
push
push
fbstp
leave
pop
dec
push
loopne
repnz
stos
fmuls
sub
mov
pusha
leave
mov
lea
pushf
dec
inc
lods
jae
rcrl
adc
outsb
aad
add
xchg
mov
xor
jns
and
or
jae
stos
add
mov
int3
sub
lods
cltd
adc
mov
pushf
push
out
mov
daa
fwait
push
mov
or
sbb
cld
ud2
pusha
jo
inc
fstl
popa
loop
lret
ss
cmp
cwtl
roll
mov
jmp
loop
clc
loop
repz
nop
jl
inc
pop
add
inc
loopne
into
sti
bound
ficoml
divl
jb
sahf
mov
pop
sbb
mov
imul
pop
mov
mov
mov
xor
cmp
shrl
sar
roll
mov
dec
pop
jbe
inc
outsl
stos
sahf
mov
shlb
imul
test
push
mov
xor
ljmp
jne
pop
dec
into
lcall
insl
mov
imul
hlt
mov
adc
dec
adc
jae
mov
nop
mov
sti
jne
arpl
add
inc
int3
fisubrl
mov
cmpsb
push
mov
xchg
loop
sbb
out
outsl
in
mov
mov
add
xchg
mov
push
mov
sarl
mov
lds
aad
pushf
inc
inc
mov
push
mov
pop
adc
xor
fnstenv
in
add
jecxz
jecxz
imul
nop
movsb
xchg
inc
not
fldt
xor
out
addb
sub
xchg
xchg
popf
popa
in
adc
mov
sbb
adc
popf
sub
inc
in
push
movsb
loopne
ret
or
mov
inc
imul
pop
xor
adc
in
pushf
mov
xchg
int3
xor
fs
push
cmpsl
push
movsl
inc
lcall
or
fs
cmc
mov
shrb
adc
pop
push
scas
jno
add
pop
movsb
in
inc
mov
dec
mov
jne
jno
inc
or
push
jbe
pop
xlat
pop
scas
sbb
mov
inc
push
xchg
or
in
and
inc
repnz
xchg
repnz
sbb
add
pop
sbb
loope
jmp
mov
cmp
leave
stos
aas
jbe
rorb
cld
adc
jl
das
dec
dec
mov
ljmp
les
imul
mov
pop
movsb
pop
push
add
push
arpl
mov
dec
stos
lods
lods
xor
xor
fsubl
sbb
lcall
sarl
gs
xchg
jle
or
push
jp
sub
sti
stc
divl
adc
or
fiaddl
jb
out
test
sti
sbb
xchg
and
sub
out
pop
mov
out
dec
stos
loope
adc
cmp
pop
mov
or
xchg
ficompl
cmpl
sub
roll
mov
pusha
push
sbb
ret
movsb
jp
pop
or
pop
shr
pushf
inc
mov
mov
test
incb
ret
lock
adc
pop
xor
lcall
rcl
addr16
add
xchg
xor
cwtl
subb
ljmp
clc
dec
fsubrs
xor
push
jp
sub
inc
loop
mov
pcmpgtd
rcrl
lret
adc
pop
pop
outsb
or
and
mov
push
mov
push
lahf
stos
dec
insl
jne
xor
mov
add
in
adc
dec
fsubs
push
lds
out
cmc
adc
cmp
mov
psraw
popa
jbe
lcall
enter
jnp
xchg
push
mov
fstpt
outsl
into
push
jg
pop
sub
xorb
scas
jmp
and
sbb
loope
dec
adcl
add
push
mov
xor
insl
lods
loope
orb
les
sar
incb
dec
imull
jo
sub
enter
pop
fists
lock
or
dec
inc
or
push
lods
dec
clc
mov
and
or
xor
addr16
or
pushf
cmp
and
mov
jno
sub
add
fwait
sarl
or
out
inc
cmpsb
mov
scas
imul
push
shlb
push
or
sub
aad
cs
cmp
das
sti
dec
adc
cmpsl
out
inc
cwtl
ret
pop
pop
cmpsl
outsb
xchg
mov
sbb
jp
in
mov
jo
out
addr16
lcall
cmc
mov
leave
dec
jp
lcall
and
mov
jns
test
fsubrp
add
in
clc
fldt
cmp
aam
aad
mov
lahf
pushf
imul
sti
xchg
push
add
xorb
xor
arpl
sub
int3
int
mov
es
aas
cmp
lcall
mov
mov
jmp
dec
repz
mov
cmp
cli
or
movsb
loop
pop
fldl
std
out
mov
shlb
dec
sar
stc
add
inc
push
dec
fisubrl
or
cld
cmpsl
cwtl
out
in
pop
inc
push
push
insl
xchg
scas
xchg
imul
in
arpl
arpl
jecxz
fstpt
jmp
das
jecxz
mov
lods
add
daa
rcll
cmc
rcrl
stos
pop
mov
add
lds
jecxz
mov
pop
jbe
jbe
std
jg
xor
jmp
cmp
les
xchg
out
cmpsl
imul
xchg
cmpsl
je
adc
adc
sbb
in
push
test
notb
pop
imul
jno
sti
ret
and
enterw
repnz
aad
iret
out
addr16
js
nop
neg
pop
mov
push
pop
inc
jb
mov
lcall
insl
movsb
cmp
mov
mov
xor
xchg
pop
push
cmp
out
pop
inc
aad
or
clc
popf
add
sub
cmpsb
mov
ret
xchg
mov
inc
xor
inc
cmp
pusha
push
mov
mov
pusha
adc
mov
or
js
cmp
inc
xchg
into
aad
dec
mov
sub
out
int3
mov
ljmp
and
rclb
xlat
test
aad
loop
inc
pop
xchg
dec
pushf
pop
subb
sub
sbb
fdivrl
rcrl
push
aam
lret
inc
fcomps
call
push
cmp
enter
sbb
adc
mov
ljmp
add
sti
sbb
push
pushl
and
movsl
loop
scas
je
mov
pop
xlat
shlb
rclb
push
cld
enter
add
add
scas
xlat
and
xchg
ss
sub
push
jne
cmc
jle
xchg
xchg
cmp
or
mov
leave
fistpl
lods
icebp
sbb
outsl
mov
mov
cmp
scas
ja
mov
shlb
adc
sub
push
jge
sbb
shrb
push
and
in
cmp
jo
cmp
hlt
mov
cmp
in
std
inc
push
and
sbb
sahf
xlat
add
iret
mov
test
popf
sub
sbb
sbb
outsb
mov
inc
push
adc
cli
sub
inc
repz
call
ja
fbld
push
and
sub
sub
mov
out
sbb
jl
lcall
mov
push
mov
mov
mov
sub
mov
enter
jge
or
dec
sti
adc
xchg
pinsrw
in
push
mov
fisttpl
dec
leave
adcl
pop
and
pop
cmp
fldenv
push
rsm
inc
subb
ja
mov
xchg
stc
aad
mov
addr16
sub
fldl
adc
inc
push
add
adc
inc
adc
mov
adc
inc
and
mov
jno
jg
insb
in
fcmovne
jae
js
popf
stos
lret
dec
cmp
fwait
or
sub
inc
lds
out
sub
call
shll
cmp
movsb
lods
test
loop
sub
xchg
sub
jns
push
push
outsb
or
mov
jl
pop
lahf
xor
add
insl
mov
add
icebp
mov
mov
jno
xchg
cmpsl
leave
clc
mov
nop
inc
enter
rclb
or
outsb
adc
mov
sub
and
xor
loope
mov
iret
js
mov
jle
leave
cwtl
leave
push
or
jecxz
mov
loop
aad
repnz
rcrl
cmc
pop
pop
mov
movsl
jecxz
imul
jnp
nop
movsb
lock
in
or
cmc
enter
add
inc
pusha
xchg
mov
jae
mov
int3
sbb
mov
mulb
mov
add
lret
xor
inc
mov
sub
lock
sub
xor
xchg
push
inc
rcr
cmc
test
pop
jmp
dec
pop
jmp
jmp
jno
dec
lock
in
fsubl
out
xchg
outsl
lock
out
hlt
pop
pusha
insl
ds
mov
xor
or
cmp
in
repz
xbegin
xchg
mov
std
push
sbb
push
pop
push
inc
jnp
es
fdivrl
lock
mov
sub
fiadds
sbb
fcmovnb
pop
or
jnp
push
aad
push
dec
or
enter
mov
sbb
push
xor
sti
xchg
jle
mov
clc
leave
pop
mov
add
xlat
sub
sub
mov
or
mov
arpl
pop
pusha
shl
push
push
bnd
push
jo
inc
sub
dec
xchg
loop
jmp
dec
push
test
std
jecxz
sbb
or
insl
inc
cmp
int3
std
adc
xor
push
sub
lods
xor
pop
cmc
push
mov
push
leave
sbb
icebp
push
movsl
jmp
inc
idivl
mov
fnsave
fs
cmp
add
imull
cmp
or
xor
mov
inc
push
mov
pop
and
adc
pop
jg
xchg
pop
xor
mov
cmp
inc
imul
sub
insl
mov
xor
adc
pop
insb
fnstsw
inc
adc
jb
mov
push
and
es
xor
push
insl
and
sarl
xchg
das
add
mov
dec
mov
dec
ds
cmp
or
idivl
inc
dec
or
and
mov
push
rclb
das
arpl
orl
stc
jecxz
test
cmp
or
bswap
push
ss
loop
mov
out
xor
incl
out
add
push
mov
in
mov
fpatan
jg
frstor
adc
ret
rolb
xchg
jl
insb
stos
xchg
xchg
fnstenv
cltd
sub
mov
mov
pushf
jo
jno,pn
daa
data16
mov
in
mov
mov
pop
shlb
inc
add
mov
aas
les
rcll
xor
mov
pushf
mov
lods
pusha
movsl
cmp
jno
mov
xchg
cmpsl
pop
fidivs
push
mov
inc
jmp
fisubrs
xor
and
bound
cmovo
test
pop
ror
scas
sub
jo
sbb
sbb
divl
mov
adc
dec
lock
adc
stos
lock
pop
ficoml
and
loope
jae
das
pop
aam
cmpl
jb
cld
pusha
daa
mov
inc
mov
out
inc
fnsave
sbb
ja
daa
es
test
iret
jnp
rclb
outsl
je
xchg
je
push
adc
mov
in
or
popl
divb
mov
mov
pop
ss
sbb
cmp
push
fs
push
xor
sbb
xchg
or
sahf
jbe
inc
arpl
enter
rdmsr
lods
pop
lret
push
in
std
stc
push
stc
pop
mov
cmp
or
std
cmpsl
in
inc
xchg
loopne
xchg
pop
cmc
cmpsl
pop
push
stos
mov
and
aaa
pop
outsb
inc
cmp
dec
push
cmc
and
add
push
adc
sbb
jmp
outsb
rcrl
adc
and
push
inc
add
shrb
cmpsl
aam
sub
mov
mov
cld
shrb
cmpsb
add
aaa
xchg
xchg
lods
mov
jo
arpl
insl
adc
xlat
pusha
leave
in
or
ljmp
push
jge
and
inc
dec
stos
cmpsb
jns
iret
shlb
push
lcall
sbb
xor
int
xor
add
pop
in
movsl
je
pop
bound
fbstp
shll
or
out
inc
and
adc
sub
popa
xor
pop
push
mov
flds
jnp
ds
jmp
xor
std
mov
out
movsl
mov
mov
fwait
lahf
lcall
pop
cs
in
ficoml
stos
adc
rcrb
lret
push
mov
sub
pop
movl
xchg
clc
dec
xchg
in
ret
shll
mov
xor
fs
mov
jmp
pop
std
sahf
pop
inc
jno
adc
add
inc
or
mov
cvtps2pd
scas
sbb
sahf
test
jnp
xchg
ds
iret
movsb
rorb
cwtd
cmp
inc
jl
add
jb
out
xchg
cmp
movsl
xor
out
insb
aaa
pop
cmc
repz
xchg
gs
divb
add
or
pop
inc
mov
cld
jmp
push
mov
cmp
dec
jae
mov
stos
mov
in
dec
dec
inc
test
mulb
mov
jne
loope
mov
and
call
mov
sub
or
out
mov
fdivs
mov
and
fs
in
out
mov
sub
cltd
outsl
sbb
cmpsb
sub
stos
mov
aam
inc
sub
imul
push
enter
push
inc
push
fwait
push
jnp
pop
or
push
aad
stos
add
movsb
mov
ret
mov
xor
jl
out
xor
cmc
out
cmp
enter
xor
pop
lock
orb
mov
shlb
mov
mov
test
scas
pushf
aad
dec
sub
push
dec
push
hlt
aam
cmp
cmp
xor
scas
cli
shl
push
out
in
scas
ret
add
mov
inc
mov
push
push
movsl
sahf
psubq
adc
cwtl
fistps
xor
inc
or
push
adc
sbb
jmp
mov
clc
hlt
xor
std
jb
in
ficoml
popf
clc
mov
adc
test
dec
ja
xlat
cmpsl
push
dec
stc
test
popf
mov
adc
sub
adc
in
xor
lock
movsb
test
test
fadds
push
outsl
int3
push
push
dec
popf
add
ret
mov
std
and
adc
xchg
mov
test
mov
jle
lds
sbb
pop
pop
cltd
adc
mov
test
mov
mov
insl
js
sub
xchg
stos
mov
xchg
or
push
addr16
lahf
cmp
xchg
pop
mov
dec
jno
mov
out
int
inc
dec
mov
imul
add
ror
aam
push
icebp
enter
outsl
mov
or
xchg
xlat
push
pop
loop
xlat
sarl
sahf
enter
ds
jmp
cmc
leave
paddq
outsb
imul
lret
dec
ja
inc
jcxz
lock
mov
mov
sbb
imul
fmul
ret
mov
and
inc
jne
out
sbb
add
dec
clc
out
fsubl
pop
xchg
cs
add
push
outsb
call
adc
mov
test
pop
cmp
pop
pop
jmp
loope
stos
or
mov
filds
imul
xchg
dec
jo
adc
mov
cwtl
or
xchg
cmp
push
jb
out
cmc
jbe
inc
jne
imul
adc
mov
dec
test
sub
jecxz
pop
push
sub
jmp
xor
addr16
pop
push
sub
dec
pushf
add
lods
xchg
mov
in
or
jae
sti
pop
outsl
inc
fiaddl
xor
push
faddl
shrd
cmc
xor
fsubl
jl
les
lahf
popa
seta
push
xorl
xor
xchg
loopne
inc
dec
shll
xor
lcall
lock
adc
into
cmpsb
add
test
sbb
xchg
xor
cld
sahf
in
dec
dec
imul
ret
out
je
jge
fmulp
push
addb
jg
pop
arpl
jge
jns
jno
inc
imul
inc
push
std
push
fstpl
dec
test
cmpsl
sbb
sub
imul
int
imul
pop
cs
dec
fbstp
mov
in
and
pop
insb
pusha
paddb
mov
pop
pop
shll
pop
fcomps
or
into
flds
stos
cld
pushl
inc
pop
sub
and
or
in
test
wbinvd
push
jmp
cmp
dec
mov
or
push
movsl
mov
rorl
pop
out
sbb
inc
ficoms
cld
lret
inc
shlb
rorl
jg
dec
or
or
xor
xchg
pop
cmp
out
xor
pop
outsl
fs
mov
xchg
cmpsl
scas
mov
ja,pt
mov
pop
jnp
and
xchg
add
testb
inc
dec
jb
adc
shufps
xchg
dec
adc
arpl
or
sbb
imul
in
div
sbb
fmull
jbe
hlt
add
jecxz
outsb
in
test
add
or
pop
inc
nop
fiaddl
sahf
ret
jae
gs
or
shrl
adc
int
xorl
xorb
xchg
jmp
or
lcall
mov
mov
in
and
andl
push
dec
insl
into
fwait
mov
lea
mov
notb
stc
cmpsb
in
je
iret
fwait
scas
je
or
xchg
mov
inc
hlt
or
push
sub
or
gs
bound
adc
mov
hlt
lea
mov
arpl
sti
ret
into
push
ret
loop
push
pop
and
inc
jp
xor
xlat
xchg
in
loop
cmp
fsubr
lcall
bound
sbb
out
ljmp
mov
and
mov
jge
das
adc
movsb
movsl
ja
rcrl
mov
add
inc
dec
adc
inc
mov
xor
or
sub
or
hlt
mov
lcall
mov
test
mov
mov
or
mov
test
mov
push
adc
imul
pop
jmp
and
rcrl
sbb
inc
test
add
aas
int
adc
cmp
inc
rolb
shl
inc
jp
mov
out
and
mull
ret
mov
pop
mov
sbb
leave
pop
fcmovnbe
fstl
out
and
imul
pop
xor
cld
mov
mov
fstps
clc
sti
scas
test
mov
cmp
repnz
and
call
int
cmp
add
lea
adc
sarb
sahf
in
popa
into
xchg
lahf
adc
stos
adc
push
subl
addr16
xorl
shr
cmp
and
mov
and
push
loopne
cmp
popa
in
std
int3
and
pushf
test
out
rorb
icebp
mov
pop
cmc
loop
inc
loop
outsb
dec
push
inc
movsl
fisttpll
test
xacquire
scas
adc
popa
add
cmp
dec
mov
decl
ret
aad
pop
push
mov
mov
xor
xor
mov
outsl
loope
shr
sub
xor
jnp
stc
dec
nop
je
jmp
in
dec
add
jnp
or
addl
js
add
add
cmpsl
aad
xchg
test
je
xor
add
and
mov
out
loop
sub
pop
hlt
cmp
push
sbb
push
lods
es
add
fdiv
xchg
mov
orl
gs
push
ja
mov
es
pop
jg
jecxz
into
or
and
jne
lods
dec
mov
add
inc
xchg
std
add
stos
push
xor
ffreep
out
mov
les
pop
test
mov
rep
test
aad
ljmp
mov
sbb
subl
mov
fcmove
add
jbe
lret
inc
aaa
jp
mov
movsl
and
sbb
lret
int
xor
int3
push
fimuls
pop
add
push
xor
sbb
fsts
fsubl
dec
xchg
pop
mov
out
add
scas
inc
and
pop
or
shll
stos
in
mov
or
mov
jb
aad
sub
add
pop
mov
xchg
and
mov
out
sub
jno
stos
xchg
fisubrs
fnsave
ja
mov
add
sarb
inc
test
sbb
movsb
and
mov
in
mov
pop
movsl
pushf
fwait
in
cwtl
movsl
lret
repz
or
dec
out
mov
inc
fcoml
or
mov
mov
gs
test
sub
imul
cs
cltd
add
dec
mov
in
ret
shl
cld
cmp
js
fsub
repnz
mov
lcall
mov
jae
jbe
movsl
sahf
push
xchg
lods
push
sbb
notb
in
dec
mov
jg
mov
lds
inc
fildl
xchg
lahf
movsl
iret
cmp
rorb
mov
fs
inc
pop
in
xor
fimuls
je
mov
jle
loop
lods
mov
ja
cmp
aam
aad
stos
jno
push
pop
xchg
jle
bound
icebp
bound
adc
ss
clc
ret
and
nop
ja
in
and
pop
out
fmuls
rcrb
jae
mov
push
mov
sub
and
sub
mov
inc
pop
cs
pop
adc
lahf
pop
lret
add
mov
mov
dec
ds
fxch
push
andb
xor
sub
adc
mov
into
fcmovu
pusha
sub
lahf
sbb
mov
cmp
mov
mov
enter
int
mov
dec
adc
pop
repnz
loopne
dec
or
iret
insl
pop
cmpsb
into
imul
sbb
fs
xor
fdiv
imul
jb
cmp
mov
repnz
push
sbb
mov
xor
dec
in
cmp
jns
stc
jp
iret
shll
xchg
xor
mov
sbb
mov
xor
mov
pop
in
mov
movb
jb
int3
scas
push
pushf
xor
xchg
testl
lea
inc
xlat
testb
jo
and
hlt
cmp
mov
aam
push
and
dec
or
dec
loop
mov
xchg
aad
or
popf
adc
aaa
adc
add
fnstenv
dec
es
mulb
cmc
xchg
in
mov
mov
inc
insb
out
pop
xor
stc
add
jecxz
js
lret
in
fs
push
lret
mov
cmpsl
jno
aas
pop
pop
sbb
sub
scas
jle
jae
xchg
or
jge
add
scas
out
add
cmp
cltd
add
add
js
jno
fisubs
and
pop
sbb
sbb
sbb
pop
repz
xlat
out
sahf
and
scas
sti
popl
pop
mov
jns
jae
notl
stc
adcb
data16
mov
mov
pusha
dec
mov
dec
mov
sub
adc
mov
pop
orb
jo
out
xor
iret
jp
mov
int3
repz
mov
scas
arpl
arpl
loope
loop
das
aas
lods
insl
jo
cwtl
cmpsl
test
lcall
fistps
in
inc
out
bound
mov
inc
cli
fstpt
out
jecxz
js
mov
sbb
in
mov
sub
xchg
scas
repnz
inc
jno
mov
int
xchg
xchg
push
lcall
out
jp
out
int3
test
push
lock
pusha
push
cmp
shr
cmp
and
inc
xchg
jge
orl
mov
fiaddl
lods
xchg
bound
push
sarb
push
jecxz
mov
cli
popa
fsubrl
adc
inc
jnp
or
fimuls
gs
stc
negl
repnz
cmp
fbstp
mov
ret
shr
test
cwtl
enter
push
in
jmp
leave
enter
sbb
push
je
sub
inc
sub
test
and
cmp
pop
ret
xchg
jmp
pop
shrb
ja
lret
loop
xchg
and
int3
int3
fs
stos
pusha
ret
jns
fidivl
movsb
fwait
outsl
xlat
pop
scas
adc
fisubrs
shlb
cltd
dec
pop
jp
sahf
shlb
lock
pop
rorl
pushf
bound
cmp
xchg
push
jns
pop
or
jbe
pop
or
mov
movsl
testb
imul
adc
sub
sbb
and
into
pop
loop
push
push
pop
out
je
callw
std
add
inc
in
outsl
arpl
cmc
adc
mov
pop
push
pop
test
in
push
leave
and
fdivs
xor
test
test
xchg
push
jae
leave
add
sub
aam
mov
jg
pop
pop
jno
xchg
shlb
data16
mov
fcom
cltd
pop
fwait
and
sbb
shl
jmp
lret
add
div
xchg
lret
xchg
dec
outsl
sub
add
pop
out
pop
push
inc
xchg
push
adc
and
dec
movsb
adc
leave
roll
jns
sub
cwtl
movsl
arpl
or
mov
sahf
push
or
dec
mov
int3
push
daa
cmc
clc
inc
jge
dec
ljmp
cmp
cmp
insb
inc
and
ficoml
adc
mov
aas
sub
sbb
xor
or
fwait
mov
or
push
popf
nop
push
popf
fsts
in
and
add
push
sbb
es
push
mov
jl
jp
cltd
mov
lcall
jb
or
inc
xor
sub
lea
popa
mov
dec
cmp
mov
jge
pop
cmp
imul
jbe
sbb
cwtl
inc
out
inc
push
and
leave
cltd
bound
inc
int
loope
pop
data16
aaa
xchg
in
test
dec
dec
jno
mov
mov
ss
test
ljmp
dec
insb
mov
je
push
fidivrs
std
shll
test
scas
cmp
inc
cmc
aad
adc
dec
aam
push
mov
jns,pt
dec
out
or
cmpsl
pop
daa
xor
xchg
pop
push
mov
jb
movb
mov
jb
pop
fnstcw
fwait
or
add
rcll
mov
mov
sbb
ficomps
bound
pop
cmp
xor
lcall
out
fcmovu
aas
fwait
mov
push
pop
push
mov
inc
jp
and
iret
fldt
int3
hlt
jnp
cmp
push
push
pop
jecxz
mov
push
xchg
dec
popf
xchg
jae
dec
push
push
sbb
pop
fsubl
mov
testb
out
xchg
jp
xor
xchg
cli
test
add
je
mov
sub
hlt
lods
pop
fbld
into
cli
dec
mov
rorl
push
enter
xor
fsubl
push
fwait
mov
pop
test
clc
jne
xchg
mov
outsl
out
mov
loop
imul
sub
rorl
dec
pop
inc
cmpsb
out
cld
fnsave
mov
and
in
pop
lret
dec
insl
insl
mov
xchg
mov
pop
pop
outsl
or
jnp
mov
and
cmp
or
mov
pop
rcl
inc
hlt
sub
push
sbb
mov
dec
gs
push
cmp
stos
mov
jecxz
out
cmpsl
aam
mov
subb
jecxz
mov
aam
xchg
or
dec
and
adc
bound
fiaddl
push
pop
cmp
cmp
xchg
mov
inc
insb
in
std
faddl
inc
ss
ret
xor
or
fwait
ja
je
movsb
shll
jmp
fbld
sub
or
leave
inc
cs
cmp
inc
mov
insl
ds
jbe
adc
mulb
andb
idivb
adc
movsb
into
rcll
xchg
mov
ret
cmp
push
loop
fsts
pop
inc
loopne
repnz
pop
xor
pop
js
mov
push
sub
test
je
mov
or
mov
daa
lods
mov
inc
xchg
mov
xor
cli
test
mov
stc
or
xchg
mov
mov
ds
in
jae
push
shr
aam
filds
xchg
or
jmp
adc
pop
arpl
lret
ss
lea
sbb
popf
and
push
mov
popa
jecxz
bound
pop
fsubl
mov
into
aas
scas
imul
push
jmp
push
cli
and
loop
push
hlt
das
test
push
js
ja
xchg
lods
push
pop
jns
loopne
inc
fstl
mov
loope
lahf
mov
daa
mov
cld
jg
adc
enter
cli
test
lds
int
mov
inc
out
lcall
loop
xchg
adc
fwait
mov
and
push
andl
iret
xchg
dec
out
adc
inc
pop
js
rol
cli
rcr
or
xchg
testl
lds
aad
lahf
xor
add
ss
popf
dec
xorb
sub
xchg
outsl
xlat
jne
repz
f2xm1
mov
int3
mov
push
outsl
mov
arpl
jns
pop
cs
cmp
sub
cmpb
add
das
and
in
cld
loopne
movsb
jo
inc
mov
ds
or
cmp
scas
cmc
stc
jnp
lods
mov
lods
jo
pop
pusha
lods
stos
test
in
sub
nop
test
xchg
jb
mov
fistl
xor
out
xor
cli
and
xor
js
inc
mov
fdivs
mov
jge
jbe
mov
add
repnz
push
into
dec
addr16
mov
mov
mov
in
das
push
inc
ja
dec
fwait
and
fisubrs
cli
inc
jmp
rorl
incl
imul
or
or
dec
arpl
pop
cmc
cmp
sti
movsb
lock
out
addb
fsubrs
std
lahf
mov
loop
les
lods
push
in
test
mov
xchg
mov
stos
sub
sahf
das
clc
cmp
adcb
sarl
leave
loope
mov
ss
cmp
test
cmp
dec
sbb
xor
cmc
sbb
fucomip
xor
call
inc
ljmp
lea
stc
push
mov
jg
testl
cwtl
inc
jns
xchg
push
cs
lea
lods
pop
aas
mov
arpl
jle
shl
testb
leave
les
les
mov
loope
sarl
jns
mov
mov
test
push
cmpsl
mov
addr16
add
mov
cmp
xor
stos
lock
in
bnd
loop
in
cmp
hlt
jb
dec
mov
out
mov
push
or
push
sbb
int
dec
lods
mulb
mov
hlt
xor
sub
or
rcl
aaa
push
sbb
jecxz
and
test
adc
test
loop
insb
mov
sub
cli
cmp
xorl
jg
lret
or
call
mov
lret
fcoml
jno
cltd
mov
push
pop
xor
das
lods
mov
add
push
lods
arpl
ja
lcall
lret
enter
and
cld
repnz
std
cwtl
popa
imul
minps
es
inc
adc
jns
cmpsb
cld
shll
loopne
inc
shrb
sarl
mov
pop
push
ds
into
mov
hlt
xor
int3
in
mov
inc
or
daa
pushf
in
cmp
stos
and
cmpsb
pop
test
hlt
cmpsl
int3
pop
sub
inc
int3
mov
mov
in
push
add
mov
or
sub
lods
sti
jb
sbb
out
rcr
jle
or
sub
xor
adc
outsl
pop
out
cmp
pop
push
pop
inc
movsb
test
inc
dec
fisubs
pop
je
or
xor
inc
mov
push
mov
div
lahf
nop
movsl
sbb
cli
dec
mov
cltd
cmpsl
and
dec
dec
mov
loope
scas
arpl
rorb
fcmove
sbb
nop
adc
in
mov
push
lret
insb
pop
fwait
iret
mov
repz
aaa
inc
fdivrp
and
jne
repnz
xor
mov
inc
pop
test
sti
push
mov
enter
sahf
subb
shrl
test
fmul
fimull
inc
stc
aam
push
inc
xchg
sub
jb
dec
lock
jbe
movl
lods
and
lret
repz
sub
mov
mov
sbb
sub
std
mov
mov
push
xlat
into
mov
push
lock
jbe
xor
scas
popa
std
pop
dec
sbb
cmpsl
lret
pop
mov
test
loope
in
roll
xor
scas
lret
jnp
sbb
fimull
inc
add
cmp
aaa
inc
inc
out
mov
lcall
int
sub
or
and
mov
inc
data16
xchg
mov
test
push
ds
outsl
dec
push
sbb
sti
das
jb
or
ljmp
punpckhwd
pop
push
arpl
mov
lret
pop
mov
xor
fsubr
push
push
bound
ss
pop
push
xlat
loope
movsl
cwtl
jg
pop
dec
inc
and
push
push
xchg
xchg
test
push
hlt
repnz
dec
or
iret
out
sbb
jbe
pop
xlat
add
imul
jg
test
add
mov
popa
xor
loopne
push
mov
jae
sub
rorb
mov
sub
or
xchg
push
hlt
popf
pop
xchg
pop
sub
sbbb
inc
jns
pop
adc
cmp
jae
daa
xor
jno
lret
jbe
or
mov
arpl
xchg
popf
test
fldt
push
xchg
popl
repnz
mov
inc
xchg
jle
jmp
cmp
xchg
jno
enter
fadds
fs
mov
mov
pop
inc
push
stos
sbb
orl
pop
jmp
mov
ds
xchg
adc
stos
sbb
cmpsl
mov
arpl
jnp
mov
lods
cmp
sbb
out
mov
imul
push
test
mov
xor
mov
mov
scas
hlt
jmp
fimuls
ljmp
mov
jg
jnp
fsts
mov
in
addr16
mov
or
repz
cwtl
push
xor
push
mov
mov
inc
jle
mov
jl
push
repz
fsubs
dec
push
and
test
shrl
jno
pop
and
leave
scas
push
sub
aad
mov
dec
iret
mov
test
mov
mov
xchg
fldenv
lods
imul
push
mov
push
inc
pop
pop
fmul
test
sbb
mov
mov
or
dec
pop
push
ss
inc
and
xor
out
xor
je
psllq
and
mov
cmpsb
xor
push
jmp
mov
jnp
ja
fsubrl
inc
lds
cli
cld
leave
stc
lea
add
pop
vhsubpd
dec
pop
fimull
or
jbe
push
cltd
out
pop
negb
push
mov
mov
pop
mov
sub
div
push
jnp
mov
mov
push
ljmp
or
scas
test
jo
push
sti
popf
and
mov
jbe
testb
xchg
movb
scas
mov
pop
int
cltd
xor
sub
dec
jne
ja
push
sahf
mov
jae
ja
cwtl
adc
aas
xchg
jno
or
xchg
test
imul
mov
in
imul
divb
xlat
pop
push
jno
call
dec
ljmp
lcall
ljmp
inc
cs
mov
xor
insb
jnp
jecxz
insb
fwait
sahf
aas
push
inc
ds
or
pop
or
aad
into
and
mov
and
das
dec
movsb
jmp
or
or
mov
btr
push
cmp
dec
jne
or
mov
or
enter
add
mov
shlb
sub
shl
pop
shrl
cmp
loop
test
xchg
popa
sbb
enter
stc
xor
loope
ret
out
pop
clc
jg
js
inc
stos
lds
fidivrs
mov
nop
scas
dec
jp
add
mov
jbe
mov
bound
movb
jae
cmovae
xchg
xchg
inc
loopne
cmc
xchg
dec
in
or
outsb
ss
mov
jo
pop
movb
scas
adc
pop
mov
xchg
sbb
and
fdivl
push
lcall
sub
mov
cwtl
adc
or
xchg
imul
push
inc
lahf
cmp
or
push
cmc
sbb
xor
dec
mov
movhps
sub
int
rcrl
aam
xchg
dec
xor
into
in
xor
add
inc
adc
repz
lea
add
ficompl
dec
in
sub
leave
clc
jno
aam
cmp
shll
adc
sbb
mov
dec
dec
loop,pt
pushf
mov
ss
in
adc
mov
jle
arpl
inc
mov
flds
push
daa
xor
or
out
insb
inc
mov
push
pop
dec
fnstsw
ret
mov
aad
testb
lock
dec
mov
test
or
xlat
rorl
add
mov
out
call
sbb
jb
fldenv
test
fidivl
jo
xchg
scas
mov
xor
leave
sub
jge
fmull
mov
in
mul
cmpsb
insl
std
mov
ss
mov
mov
sub
and
shr
fcmove
mov
mov
xchg
or
jmp
inc
test
data16
arpl
jp
cmpsl
mov
jg
inc
loopne
cmp
lds
sbb
push
inc
xchg
xlat
sub
scas
mov
in
pop
lret
push
inc
jmp
lea
in
cmp
jne
daa
outsb
adc
sub
mov
test
fdivr
xor
sbb
inc
sti
push
pop
and
pop
fdiv
push
iret
and
jo
mov
mov
jae
pop
out
cmp
fdiv
subb
mov
aam
push
xor
dec
mov
clc
pop
lret
pop
pop
mov
sahf
data16
or
rcl
mov
inc
iret
dec
hlt
mov
xlat
ljmp
pop
nop
out
imul
mov
jae
mov
je
cmpsb
lahf
scas
lea
sbb
xor
cwtl
lea
jle
xchg
lret
out
lods
xor
popa
dec
push
clc
sub
cmpsb
and
ss
sub
stc
loope
push
popa
mov
inc
cmpl
sar
pop
fisubrs
pop
inc
jbe
cli
pop
lock
imul
in
cmp
and
or
adcb
sub
dec
pop
popa
pop
xchg
pop
fwait
enter
stc
cltd
mov
nop
sub
inc
mov
mov
sbb
lcall
inc
icebp
or
and
sbb
xchg
sub
sarl
cmp
push
dec
loope
mov
mov
mov
stos
add
mul
mov
rcll
mov
fistps
xor
push
es
shl
pop
mov
sbb
mov
pop
fldcw
xchg
jo
lret
loope
inc
sbb
loop
lods
add
jb
int
sbb
pop
negb
jl
mov
inc
rcrb
sbbb
ljmp
or
ljmp
jns
mov
adc
mov
ds
cld
sub
pop
add
ret
xchg
xchg
sbb
mov
in
imul
push
shr
icebp
std
add
mov
xor
aad
xor
inc
adc
sub
cs
jle
rcl
cmc
xor
add
cmc
stc
xlat
pop
sbb
clc
pop
flds
xchg
sub
or
mov
popa
lods
stos
mov
pop
pop
shlb
cli
addl
fcom
test
sbb
mov
aam
or
mov
repz
std
mov
sbb
sahf
lahf
lret
xchg
out
cli
add
jle
aad
ud1
mov
mov
inc
mov
jae
cmp
movsl
sbb
into
int3
outsl
jg
fsubl
mov
movsb
pop
imul
lods
or
fdivrs
dec
int
adc
rolb
xor
mov
cmp
mov
add
adc
cltd
xchg
nop
dec
scas
testl
cmp
cli
cmp
xor
or
int3
incl
loope
xchg
je
arpl
inc
out
and
cmp
sbb
imul
and
sahf
mov
xchg
les
dec
rcl
mov
add
pop
mov
jnp
dec
pop
sub
aaa
jle
add
sahf
fisttpl
add
xlat
rcrb
or
push
dec
in
and
aaa
shl
sub
jns
ret
jmp
test
ljmp
cmp
and
sbb
xchg
jae
push
cmpsb
pop
cmpsl
icebp
cmp
xchg
popa
xor
test
mov
sar
xorb
push
aas
sub
test
test
mov
std
sbb
pusha
and
cltd
inc
mov
adc
cmpsl
clc
stos
mov
mov
pop
dec
aad
jp
inc
aad
les
jne
lret
jge
inc
push
rol
outsl
test
data16
add
xacquire
sub
stos
mov
lds
outsb
mov
mov
sbb
push
cmp
adc
mov
lcall
fwait
mov
sub
adc
cmpl
aaa
incb
dec
aaa
jne
and
mov
test
fwait
repnz
jp
cmp
pop
lods
sub
fs
ret
test
fsubr
jl
fisubl
mov
loop
fcoms
fstpl
pop
dec
mov
outsl
push
xchg
aad
out
out
stc
int
cmp
mov
stc
es
inc
mov
dec
loopne
sub
adc
ja
orb
cmp
sub
xor
add
pmuludq
loopne
pop
sbb
mov
dec
in
hlt
jle
cld
pusha
mov
jmp
enter
cli
jg
jnp
mov
and
mov
out
test
sti
sub
mov
js
and
adc
lret
arpl
into
mov
xor
aad
inc
mov
daa
pop
pop
xor
addb
mov
pop
sti
cld
mov
mov
and
mov
push
test
mov
sub
rcl
cwtl
jl
cwtl
scas
xlat
sub
xor
jb
fbld
daa
aam
in
loope
into
lods
push
mov
add
sub
fwait
mov
mov
int3
test
mov
mov
repz
adc
sti
clc
mov
dec
mov
mov
or
and
pop
shr
pop
jae
leave
fcmovbe
popl
test
in
arpl
add
pop
jecxz
mov
mov
push
xchg
xor
jl
daa
jns
sub
jmp
xchg
jo
or
ds
mov
scas
insl
push
out
and
mov
lock
in
and
daa
push
fldpi
ret
bound
popa
mov
insb
inc
js
xchg
ja
xor
lods
jg
std
aam
cmp
lret
dec
pusha
pop
adc
jmp
xlat
push
jmp
jle
movsb
dec
inc
inc
outsl
scas
in
enter
mov
jmp
xor
mov
or
add
icebp
addr16
inc
mov
sub
call
stos
icebp
iret
outsb
mov
inc
lods
ret
iret
out
jecxz
sar
add
lcall
fwait
movsl
xchg
into
in
cmp
mov
sti
jbe
sbb
mov
lds
psrad
add
xor
sbb
es
ds
ljmp
cwtl
or
popa
adc
call
js
popf
lods
mov
inc
mov
lds
dec
stos
mov
aas
pop
jecxz
jno
adc
rcll
repz
inc
gs
sub
div
lret
or
outsl
fnstsw
adc
outsl
je
dec
mov
sbb
add
rclb
in
mov
or
sbb
pop
xchg
add
pop
mov
jne
cmpsb
out
testl
clc
data16
dec
and
leave
mov
inc
pop
cmp
jbe
pop
lret
adc
mov
ret
push
xor
inc
sbb
push
insb
sub
das
add
out
cmp
hlt
sub
jae
xor
and
inc
sbb
sarl
das
mov
dec
notb
aaa
in
notb
sub
fsts
les
stos
lods
jmp
mov
adc
jge
xor
fadds
sahf
sbb
add
inc
jecxz
xchg
xchg
dec
mov
xchg
cmp
inc
jmp
lret
dec
ljmp
test
test
fisubs
adc
shr
inc
xor
xor
data16
inc
xchg
inc
cmp
insl
add
ds
inc
sahf
xor
jle
lods
cmpsb
lcall
rcll
std
shl
imul
stos
movl
in
incl
fwait
insl
cmpsb
sbb
push
cmp
stos
xor
sub
addr16
push
lds
inc
inc
jl
aas
add
inc
cld
sar
daa
rcr
sub
inc
mov
push
push
ficoms
mov
rcrb
lods
test
aad
push
je
in
in
mov
lock
push
mov
nop
sub
mov
cmc
pop
sub
xor
or
shlb
sahf
ja
loopne
and
pop
xlat
mov
aas
xor
pop
sub
and
inc
jp
jbe
ror
movsb
cmc
test
xchg
les
or
scas
sub
mov
hlt
pop
pop
daa
fwait
arpl
sbb
xor
das
data16
adc
cs
jo
inc
gs
push
out
add
in
jbe
arpl
jge
lcall
sbb
out
xchg
push
hlt
mov
or
mov
push
pop
icebp
sbb
xor
sub
imul
out
iret
stc
mov
mov
mov
hlt
fwait
sub
movsb
sub
sarl
mov
xorb
in
cmpsb
xchg
push
mov
add
pop
add
cmpsb
jg
in
iret
xchg
inc
mov
sub
xchg
or
xchg
daa
xchg
ss
jecxz
mov
inc
jno
mov
push
rep
push
inc
idivl
roll
sbb
or
adc
adc
push
add
sub
add
cld
int
rep
mov
loope
push
flds
sub
icebp
pop
fwait
sahf
loop
stos
insb
nop
xchg
mov
xor
sub
jmp
xorb
arpl
mov
pop
or
xor
or
dec
xchg
mov
out
mov
dec
popf
andb
cmp
ja
pop
enter
mov
std
testl
jl
mov
hlt
add
daa
fldenv
adcb
add
dec
push
inc
jg
jns
add
and
fnstenv
icebp
cmp
jmp
add
or
gs
mov
xchg
outsb
repnz
pop
fcoms
lods
outsl
hlt
sub
in
sbb
int
lcall
mov
nop
push
fidivl
cmpsl
subl
sub
pop
test
mov
sbb
fwait
or
aaa
mov
fldt
lock
adc
faddl
push
cmp
sahf
iret
cmp
add
mov
xchg
in
in
xor
and
outsl
jle
inc
sbb
fistpll
ja
fistpl
lret
cmpsb
pusha
stos
jbe
xchg
mov
dec
or
and
lea
cltd
jnp
outsb
in
loopne
and
sbb
je
jae
fdivl
xchg
jp
push
sbb
fdivl
mov
shrl
cmp
jno
les
jg
daa
cwtl
jns
stc
orl
push
adc
es
pop
fldl
xchg
insl
stos
mov
or
mov
or
scas
fwait
out
cmpsb
jb
mov
mov
cltd
cmp
aam
mov
insb
lret
dec
hlt
outsb
xchg
test
push
sbb
out
cmp
stos
cmpsb
dec
pop
fsts
sbb
lret
and
dec
lock
lds
xor
inc
stos
movzwl
dec
fwait
dec
hlt
jnp
pop
sub
ss
hlt
add
int
xor
pop
loop
push
out
fistl
mov
add
or
into
cmp
shlb
cmc
lods
or
scas
push
scas
mov
lcall
lods
adcb
sbb
stos
sub
repnz
mov
pop
fldenv
pop
push
pop
xchg
mov
add
sub
and
test
add
xor
ffree
mov
es
mov
imul
xchg
mov
mov
mov
push
fnstsw
loop
int
mov
pop
jge
inc
jnp
sbb
push
push
push
mov
decb
bound
lahf
xor
adc
arpl
out
call
fnstenv
and
pop
cmc
jecxz
xchg
mov
push
cmc
int
sbb
add
fiaddl
xor
mov
push
daa
and
sbb
push
mov
xor
mov
cmp
imul
scas
inc
xor
rolb
jae
xchg
xchg
or
mov
jns
call
dec
addr16
in
rcrl
lods
lcall
push
cmp
pusha
aam
aam
bound
dec
movsl
add
popa
imul
mov
xor
int3
dec
cmp
mov
in
mov
cmc
loop
std
push
js
mov
call
or
mov
push
adc
jae
outsl
ljmp
loope
sub
push
xchg
imul
frstor
int3
fpatan
dec
xor
rcr
jl
imul
jp
inc
push
push
sbb
xor
xrelease
and
dec
stos
sti
mov
or
xchg
xchg
xchg
push
test
mov
push
jmp
pop
dec
fdivr
scas
adc
mov
loop
mov
bound
fsts
imulb
pop
add
add
scas
in
push
std
mul
and
ljmp
sahf
xlat
push
into
imul
inc
inc
dec
sub
inc
icebp
sti
adc
popf
mov
shlb
sbb
sahf
aad
push
or
sahf
jmp
mov
fcmovb
inc
in
jae
fisttpll
test
inc
inc
insb
mov
pusha
addr16
pop
mov
adc
push
jae
movsl
and
xchg
push
mov
out
cli
enter
dec
movsb
in
in
mov
xchg
xchg
incl
js
sbb
push
sub
adc
roll
cmpsl
test
push
cmp
adc
add
xor
aaa
mov
in
rcll
ret
xchg
or
pop
shll
pop
adc
insl
es
int3
repz
mov
mov
in
mov
mov
xchg
mov
cmpsl
inc
aaa
xchg
lret
sbb
int
enter
stc
sbb
mov
aas
push
insl
cmc
push
shll
mov
les
repnz
pop
pop
pop
mov
jb
loop
jae
bswap
xchg
iret
clc
test
cs
or
into
out
iret
add
test
outsb
shlb
mov
adc
dec
fbstp
jae
js
repz
jle
mov
aas
mov
pop
sbb
mov
hlt
jecxz
out
xchg
adc
pusha
mov
jbe
and
xchg
leave
in
xchg
xor
pop
push
sub
ds
pop
mov
icebp
in
adc
loop
ss
cmpsb
lds
and
rcrb
testb
mov
add
testl
les
pop
push
jl
xor
idivl
dec
mov
lret
cmp
dec
dec
mov
dec
mov
sbb
jbe
jb
out
pushf
adc
jno
inc
stos
xchg
stc
dec
clc
and
dec
push
shrb
and
scas
in
pop
jno
adc
or
in
push
js
jmp
lret
sbb
lret
dec
cmp
in
popf
add
jns
push
cmpsb
insb
jl
nop
xor
pushf
pop
fbld
ja
test
adc
dec
cmp
inc
push
adc
or
mov
and
mov
popa
testl
in
ret
insl
sbbb
jmp
repz
cli
xchg
movsb
push
in
inc
sarb
mov
inc
sub
stc
inc
movsl
sub
rorl
xchg
inc
xchg
fistpl
clc
fidivs
lret
je
or
inc
xchg
xchg
insl
mov
imul
fsubs
xor
fsubp
dec
xchg
sahf
and
dec
mov
or
mov
pushf
or
stos
pop
dec
cmp
sub
mov
mov
push
cmp
sbb
adc
fadd
faddl
xchg
cwtl
mov
sub
adc
imul
lcall
xor
enter
pusha
lcall
out
in
dec
fwait
push
ja
xchg
cltd
adc
in
std
rcrb
adc
les
femms
push
mov
mov
or
jecxz
scas
repnz
dec
xor
fstps
jg
movsl
push
mov
cmp
mov
pop
cmp
push
push
xchg
inc
scas
pop
rorb
test
movsb
xor
es
in
pop
jle
int
repz
inc
mov
jbe
sub
cld
divb
lds
xchg
pop
mov
pop
sbb
xor
dec
mov
push
mov
jl
cmp
add
xchg
mov
adc
add
fstp
int3
sub
and
loop
sbb
roll
sbb
sub
push
aas
dec
nop
out
fsubrs
les
fldl
pop
fdivr
lcall
mov
xchg
adc
daa
mov
adc
lds
inc
cmp
pop
out
cmpb
sbb
xor
jp
mov
push
loop
sbb
mov
loope
outsb
mov
mov
repnz
pusha
xchg
jg
cld
int
sub
mov
loope
lret
dec
mov
pop
mov
data16
loop
pop
movaps
sbb
mov
pushf
popf
mull
pop
aad
push
loopw
and
xchg
test
mov
rolb
filds
test
inc
add
outsl
in
sbb
loope
lahf
into
icebp
in
adcl
push
les
mov
das
pop
cmpsb
loop
push
push
sub
xor
adc
xchg
adc
mov
xor
inc
shlb
jg
lahf
dec
xor
lea
rcrl
sub
call
mov
sbb
loope
mov
aas
mov
outsb
push
or
jne
jo
mov
inc
out
sar
sbb
sbb
pop
dec
jno
cwtl
dec
loop
sbb
push
cwtl
push
sahf
jns
xchg
ja
sbbb
lods
ret
pop
cs
test
jns
xlat
push
sbbl
or
setl
and
and
packuswb
adc
and
pop
cmpsl
mov
aad
inc
repnz
or
inc
mov
inc
or
outsl
adc
idivl
cmpsl
dec
js
popf
out
aaa
into
pop
push
cmp
inc
stc
fmuls
fsubp
or
loope
test
dec
sub
mov
cmp
insl
inc
dec
lock
dec
in
xor
out
lods
lea
mov
xor
inc
pushw
imul
cmp
add
addr16
jb
inc
and
and
jns
cmp
sbb
js
popf
scas
shlb
out
jno
test
cmp
loopne
jge
dec
popl
js
notb
cltd
sbb
push
filds
mov
jbe
sbb
add
sbb
mov
or
outsb
popf
jecxz
inc
jne
in
jp
int
fstpt
lock
mov
adc
lods
rorb
out
sahf
mov
dec
cmp
and
lcall
sti
aaa
popf
es
and
xchg
xor
test
add
dec
pop
test
push
inc
push
test
sub
ret
mov
inc
or
push
inc
jne
inc
test
pop
pop
sbb
test
mov
add
je
adc
hlt
mov
pop
enter
ja
scas
ljmp
call
ljmp
js
xchg
inc
push
push
jae
add
aad
test
xlat
cmpsb
insb
jbe
mov
push
popa
js
int3
fwait
mov
aam
shrl
mov
or
das
xchg
push
sbb
pop
cmc
stos
cmp
dec
rclb
fisubs
outsb
repz
adcb
push
mov
sbb
xor
bound
popa
add
enter
gs
jo
sahf
enter
shl
dec
repz
or
inc
mov
and
daa
and
adc
jbe
lea
cmp
imul
or
xlat
icebp
mov
push
daa
loopne
fistl
adc
in
lods
sub
je
mov
or
push
add
xor
loopne
ljmp
mov
inc
fstl
mov
mov
or
movsb
mov
loope
xor
cmp
add
mov
cmpl
mov
hlt
add
ret
push
test
stos
cmpsl
inc
xor
push
push
cmpsl
xchg
into
cmc
jno
roll
push
jge
sub
lods
add
inc
dec
lods
aas
arpl
jb
loope
adcb
fstps
cs
mov
hlt
ja
js
test
adc
sbbb
jbe
icebp
repnz
pop
pop
stc
vandps
andb
mov
push
adc
addr16
leave
adc
mov
cmp
sub
in
or
mov
hlt
andl
ja
add
pusha
xor
xchg
xchg
rclb
sahf
inc
or
xor
mov
pop
inc
aad
mov
jno
jmp
ret
push
lods
call
testl
adc
aas
jp
dec
loop
imul
xchg
pushf
xchg
add
push
mov
push
dec
mov
hlt
or
mov
adc
popf
add
mov
jbe
and
andl
stos
add
test
outsl
pop
mov
inc
pop
or
cmpsl
jmp
pusha
push
or
out
jno
insb
lret
imul
lcall
xchg
push
add
push
lret
sahf
push
mov
adc
mov
ljmp
jmp
push
dec
fiadds
mov
pop
je
pop
loopne
add
inc
mov
nop
sbb
push
cmpsl
xchg
addb
lds
sbb
shlb
mov
add
in
mov
bound
jge
xor
cmp
cmp
aam
inc
sti
add
lret
sbb
xchg
pop
sub
jnp
xchg
cmpsb
faddl
mov
js
jae
mov
pop
shrb
mov
test
fildl
in
fstpl
fwait
test
leave
stc
push
icebp
xlat
insb
inc
cltd
xchg
test
addr16
sbb
dec
cmp
dec
xchg
pop
mov
cmp
push
insb
jge
pop
aam
mov
xor
and
mov
mov
adc
sbb
xor
push
mov
addl
sub
repz
xor
pop
sahf
mov
mov
inc
mov
shr
inc
fwait
cmp
pop
or
push
lahf
aad
or
push
sbb
dec
mov
leave
push
sub
sub
mov
mov
mov
aaa
insb
repz
lret
add
mull
mov
mov
dec
mov
pop
cli
fbstp
mov
sbb
mov
mov
mov
fs
imull
into
data16
pop
movsl
stos
cmp
jl
dec
loop
push
mov
jge
fistpl
push
in
pushf
push
push
mov
cld
cltd
and
dec
adc
lret
imul
stc
lea
pop
test
or
add
fidivs
lock
arpl
outsb
adc
push
mov
iret
loop
cmp
adc
movsb
pop
rol
cmp
arpl
js
jg
cmp
in
shrb
stc
adc
xchg
adcb
movsb
je
pop
push
jp
mov
rcrb
lea
dec
and
aaa
aad
cmp
mov
decb
jecxz
mov
std
add
adc
sbb
adc
xlat
in
mov
or
mov
dec
cmp
xor
jne
mov
inc
movsl
add
loop
xlat
imul
insl
and
mov
inc
cld
les
cmc
movsl
mov
and
sbb
mov
ja
mov
das
mov
pop
scas
xor
out
dec
scas
inc
sti
das
roll
cmp
dec
mov
sahf
xchg
loopne
pop
std
add
std
inc
test
inc
and
mov
inc
test
jp
fsubl
ljmp
cmpsb
sarb
imul
cmc
pop
pusha
xchg
mov
inc
cltd
push
mov
addr16
adc
fisttpl
or
adc
jecxz
or
imulb
fsubs
ret
jle
push
imul
inc
insl
cmp
dec
orb
push
shlb
shrl
add
push
mov
repnz
inc
jo
shll
std
jge
das
push
movsb
cmc
aaa
inc
mov
testl
divps
out
lret
out
jno
int
fnstenv
in
cli
sahf
movsb
test
shll
or
or
mov
inc
inc
xor
fcompp
push
fnstenv
ror
mov
dec
push
push
pop
jb
and
inc
lret
lds
jg
inc
jb
dec
bnd
aaa
imul
jae
inc
aad
mov
add
inc
imul
lahf
and
stc
mov
lea
gs
test
mov
addr16
jmp
cmp
cmp
addl
sti
or
add
push
pusha
cld
fistl
sti
inc
punpckhdq
sbb
inc
cld
adc
fnsave
xlat
xlat
js
sub
insl
adc
decl
and
dec
sbb
test
fdivrs
jmp
sub
and
data16
and
paddb
hlt
notl
dec
lock
nop
lret
add
or
ljmp
mov
lret
fsts
rcrb
pop
add
loopne
fistps
je
iret
xchg
or
stos
mov
arpl
mov
loope
jg
psrlq
push
pop
jge
int
sbb
sbbb
in
nop
sti
jno
mov
jae
in
in
ret
in
aad
stc
add
jl
push
mov
je
sub
push
test
sarb
mov
in
mov
imul
lock
or
xchg
test
leave
sbb
sarl
imul
xor
xchg
add
mov
outsb
sub
fstpl
sbb
in
push
pop
mov
and
push
sbb
push
jle
mov
pop
cltd
pop
push
clc
addr16
mov
mov
jbe
mov
push
adc
icebp
jecxz
push
add
stos
push
mov
dec
mov
fildll
cmpsb
mov
aam
push
cmp
les
push
outsl
test
fistpll
add
test
pop
fs
ret
mov
inc
inc
sub
jne
adc
call
push
dec
jne,pn
sbb
andb
xorb
push
lods
and
add
add
jnp
pop
je
andl
std
adc
xchg
stos
pop
movsb
push
daa
insb
dec
mov
rolb
pminub
sbb
shl
in
test
push
sub
push
mov
adc
mov
sbbb
inc
mov
popf
stos
adc
pop
pop
add
js
add
adc
ljmp
sbb
mov
bound
sub
cld
xor
repnz
sub
out
sahf
jnp
out
lret
sub
or
add
or
add
push
test
daa
clc
insl
mov
sbb
mov
addr16
arpl
in
or
mov
push
xlat
push
push
cltd
addb
out
push
int
pop
out
mov
lret
fildll
ret
imul
jecxz
and
shll
cmc
sbb
xor
hlt
std
mov
jae
and
cmpsl
add
xchg
inc
jb
pop
or
jl
test
xor
adc
insb
into
repnz
sbb
or
mov
adc
inc
daa
int
repnz
gs
shrl
das
testl
mov
dec
add
mov
bound
pop
test
fstpl
mov
loope
in
adc
xchg
out
addr16
mov
clc
add
fildl
and
insb
jge
pop
loop
mov
or
mov
add
out
sub
lret
cwtl
push
aad
dec
inc
int
inc
jmp
add
outsl
mov
test
stos
add
dec
add
add
cmp
scas
add
sbb
or
pop
test
in
fisttpll
aaa
test
cmc
sub
or
xchg
mov
push
rcr
mov
je
arpl
mov
sbb
mov
shl
test
or
adc
cmpsb
mov
pop
add
jae
daa
mov
int
xchg
push
das
lock
orl
jp
inc
cld
pop
mov
jl
jnp
jl
lds
xorl
jmp
pusha
repnz
jp
gs
jl
in
shrl
xrelease
in
pop
xor
push
inc
mov
loop
lcall
pop
pop
cs
push
ds
sar
pusha
cli
xor
mov
call
stos
enter
mov
shr
dec
bound
add
popf
mov
sub
xor
mov
push
mov
mov
pushf
lods
xor
daa
mov
xlat
jge
lods
mov
aam
mov
sbb
jbe
jmp
mov
shll
out
test
cmp
pop
xchg
or
fstpt
or
scas
push
out
push
fsts
and
pusha
outsb
inc
int
sub
ret
sub
ss
pop
sbbl
push
lock
dec
adc
gs
rclb
subl
test
shlb
clc
loope
sub
sub
icebp
add
sub
loope
mov
xchg
xchg
cli
cmpsb
dec
dec
adc
dec
jne
jp
dec
shl
jecxz
or
rorb
pop
lock
adc
cmp
or
sbb
fcmovne
xchg
icebp
idiv
insb
pop
dec
in
les
jae
jns
insl
and
xor
aaa
insl
cmpsl
mov
cmp
pusha
pop
mov
dec
cmpsb
pop
jo
xor
push
inc
inc
loop
push
push
fsub
add
pop
orb
xchg
push
sub
adc
out
push
pusha
dec
and
or
add
pop
insb
pop
xor
rcll
mov
movsb
aam
or
in
pop
push
dec
mov
aaa
out
imul
push
mov
dec
xchg
jg
jmp
cmp
cmp
sub
mov
pop
fwait
dec
mov
push
fldl
fwait
lock
sub
orl
pop
inc
pop
and
das
test
jbe,pn
inc
leave
xor
dec
mov
dec
inc
inc
cltd
clc
loopne
rcrl
sbb
mov
xor
es
xchg
rcrb
xchg
test
cmp
ljmp
and
xchg
mov
insl
insl
add
inc
sub
sti
imul
cwtl
dec
imul
filds
jbe
adc
es
shlb
jle
mov
inc
les
jb
mov
hlt
or
sbb
or
xchg
jbe
jns
jo
mov
and
in
test
fxam
aad
inc
fs
xchg
popa
mov
ds
imul
scas
icebp
out
pop
dec
mov
xchg
jl
push
bound
popa
fdivrs
repnz
test
ds
mov
aas
push
lret
add
dec
xchg
mov
lea
je
popa
loopne
add
stos
xchg
sub
xchg
ja
fucom
adc
sub
js
mov
scas
rcll
popa
int3
pmulhw
jae
out
inc
fs
fs
jbe
inc
mov
push
xchg
pop
cltd
sub
pusha
dec
cmc
mov
movb
mov
lret
lock
rclb
sub
imul
in
in
rcll
lahf
or
jmp
sbb
fwait
push
mov
mov
aas
and
popa
fs
xchg
leave
aas
lods
and
std
push
rclb
jbe
push
add
imul
lods
or
adc
cmp
mov
sbb
cmp
push
mov
fcomps
mov
call
cld
call
popf
mov
insb
in
nop
fs
pop
sahf
rcll
hlt
push
mov
sar
sbb
push
pop
mov
lret
add
pop
xchg
mov
fisubl
sbb
sbb
nop
movsl
scas
and
mov
dec
xor
mov
mov
mov
mov
jmp
fcomps
pop
sbb
mov
les
pop
sti
movsl
mov
mov
pop
loopne
mov
fildl
fsubs
hlt
push
mov
cmc
lcall
cmp
adc
and
in
xchg
pop
cmpsb
int3
ret
enter
aam
sti
ljmp
sbbl
and
divb
sarb
pop
and
insl
push
xchg
jns
in
and
lcall
int
mov
ret
or
xchg
sbb
pop
pop
or
in
xchg
inc
sbb
or
pop
aam
add
test
jg
mov
mov
ret
jbe
adc
rorb
push
frstor
push
inc
xor
and
mov
mov
xchg
xchg
dec
mov
bound
popa
xchg
xor
xchg
and
inc
pushf
inc
or
cmp
add
and
add
pop
push
loopne
sbb
leave
shl
sbb
nop
jl
pop
fdivl
inc
dec
lret
iret
mov
mov
mov
mov
mov
sti
in
fiadds
add
fidivl
clc
lahf
inc
mov
shrl
hlt
mov
test
lret
repnz
jmp
aaa
push
xchg
stos
scas
and
addr16
dec
pushf
xor
inc
dec
and
mov
imul
or
stos
aad
add
xchg
cmp
test
arpl
push
dec
pushf
gs
out
mov
xor
xor
fisubs
pop
repnz
out
cltd
add
gs
fisubs
push
mov
sbbl
sub
shl
scas
mov
xor
pop
test
adcl
call
xchg
or
lcall
in
stos
mov
lea
pop
stos
out
inc
adc
sub
mov
jl
and
dec
mov
ss
sbb
orb
jo
adc
or
addr16
pandn
pushf
iret
cmc
mov
bound
pop
outsb
pop
movsl
cmp
fs
int3
pop
sbb
repnz
cld
aas
pop
pop
pop
mov
scas
int3
add
shrl
mov
and
and
pusha
rcrl
mov
push
xor
loope
shlb
out
mov
outsl
push
insb
pop
daa
mov
test
rep
mov
fs
cmc
test
cmpsb
adc
and
mov
les
pop
fucomip
push
xchg
mov
add
sub
or
fndisi(8087
fisttpll
cmp
pop
lret
cmpsl
or
xor
jmp
sub
jp
loopne
mov
fcmovnb
xor
jae
in
leave
xchg
shll
mov
push
jecxz
fimuls
add
jb
mov
pop
call
mov
pop
adc
sbb
movsl
fdivrs
and
or
jmp
mov
pop
adc
mov
fdivr
jmp
in
add
daa
test
les
dec
xchg
xor
pop
cltd
dec
fwait
sbb
push
gs
lock
push
sub
stos
mov
dec
sub
add
repz
cmp
pusha
jne
lret
push
test
xor
call
nop
out
push
jge
leave
mov
cmc
shrl
cmp
xchg
pushf
xchg
cmpsb
jmp
stos
xor
or
mov
push
fisubrs
pop
dec
lcall
ffreep
push
sbb
jp
cwtl
cwtl
push
mov
sub
pop
lods
test
xchg
fisttps
fadds
or
out
sub
movsl
pusha
sbbb
jb
movsl
fsts
clc
push
mov
lahf
xchg
lcall
mov
cltd
int
loope
cmpsb
jne
pop
or
out
push
push
cs
in
xor
cs
inc
push
or
cmpsb
test
xor
mov
imul
push
xorb
aas
jo
stc
push
xor
adc
dec
push
in
or
shlb
push
cmpsl
sbb
leave
call
js
test
jmp
shr
pop
jno
fcmovb
and
in
stos
idiv
stos
imul
or
jnp
dec
jge
or
or
scas
cmp
mov
lcall
enter
fnsave
dec
fs
scas
fldl2t
lret
fisubrl
sarb
pop
test
adc
orb
inc
rorb
xor
subb
int
lret
xchg
inc
decl
mov
and
and
das
cmp
stos
xchg
or
add
push
imul
xor
mov
lret
mov
sbb
negl
stos
mov
add
or
push
cmp
add
jns
inc
pop
cmc
and
cmp
leave
dec
and
fsubs
repnz
std
data16
add
fcoml
fsubrs
sbb
sbb
mov
jecxz
fwait
idivl
inc
stos
pop
in
loope
loope
decl
cmp
ror
stos
cmp
roll
and
jecxz
cli
jae
or
dec
fmuls
push
lret
fisubl
mov
ljmp
pop
sbb
xor
mov
aam
adc
add
in
sbb
lret
jmp
testl
out
or
gs
fwait
add
scas
inc
mov
jmp
sbb
sbbb
enter
push
in
push
cmpsl
and
sti
push
jns
sbbl
add
cmpsl
dec
xchg
jp
sub
mov
mov
adc
in
mov
rclb
sub
hlt
cmp
fisubl
mov
jno
xchg
dec
je
add
jle
dec
mov
and
inc
js
inc
das
les
push
daa
pop
clc
es
pop
inc
mov
insl
mov
into
stos
incb
pop
and
imull
das
shl
jo
arpl
xor
shll
mov
ljmp
jge
flds
mov
dec
mov
rcrl
lods
repnz
stc
inc
aaa
pop
js
xchg
fs
jne
je
rcrb
outsb
das
nop
iret
cmpsl
movb
xchg
mov
add
mov
and
hlt
adc
repnz
rclb
push
mov
outsl
pop
xchg
mov
xor
ret
in
add
xor
sbbl
sbb
inc
clc
icebp
lcall
fcmovnb
push
icebp
ror
inc
dec
cs
xor
into
sub
sub
pop
jg
pop
leavew
add
icebp
add
jl
ret
pop
pop
and
mov
jge
movsb
ficoms
out
call
in
orb
popa
push
mov
mov
mov
jmp
dec
les
add
mov
mov
push
push
dec
inc
ret
adc
in
out
pop
std
and
testl
lods
jge
addr16
fs
push
fisubrl
mov
cs
loope
sbb
xor
lods
loop
inc
lock
or
and
fimuls
fcoms
dec
push
adc
and
push
lret
in
addr16
lahf
outsl
fimuls
ficoml
pushf
dec
or
jne
loop
inc
push
mov
ja
dec
jp
cli
jge
mov
in
mov
xchg
ret
pop
adc
pushf
insl
mov
lock
fs
addr16
cmpsl
je
jecxz
ja
sub
fdivl
jle
jmp
jle
push
lds
es
xor
lahf
rcrb
push
pop
pop
mov
xor
shrl
cs
mov
inc
sub
lods
ds
lcall
or
push
popa
adc
loope
ss
sbb
orl
stos
jmp
adc
jp
ret
push
sbb
xchg
dec
push
test
jge
imul
jmp
es
insb
push
xchg
jno
cld
and
dec
push
sti
add
insl
sbb
das
add
sub
mov
into
inc
int3
cli
and
adc
call
xchg
sti
push
push
and
push
jmp
mov
movsl
in
or
push
pop
xchg
pop
nop
in
movsl
pop
int3
in
sbb
pop
pop
xor
mov
ret
jge
mov
pop
pop
add
fwait
pop
adc
push
inc
je
adc
mov
pop
mov
cmp
fcoml
inc
mov
rolb
ss
sti
add
mov
mov
shlb
test
mov
lret
aam
adc
xor
cs
sbb
mov
in
fwait
and
dec
arpl
dec
jno
repnz
mov
sahf
push
int3
in
or
mov
scas
lcall
cli
cmp
sbb
mov
push
pop
mov
add
mov
frstor
pop
xchg
pop
divps
test
cmpsb
nop
push
jg
aaa
mov
inc
fimuls
inc
cmp
icebp
subb
sbb
rcrl
add
mov
test
and
test
loope
inc
jnp
nop
jge
idivb
repnz
jg
inc
pop
into
push
add
insb
cmp
test
jle
loopne
fsts
sub
mov
clc
insl
loope
ss
movsb
sarb
adc
cwtd
cld
cmp
out
jno
pop
jnp
popf
jmp
mov
adc
out
mov
subb
cmp
test
fistl
cli
dec
mov
inc
call
adc
gs
cmp
stos
pop
mov
stos
and
add
inc
xor
jno
lahf
adc
fisubs
add
xor
pop
jmp
ljmp
aad
mov
inc
inc
push
jnp
mov
add
pop
pop
leave
iret
ret
sbb
outsb
sub
xchg
fs
jecxz
inc
mov
push
divl
mov
ret
out
movsl
repnz
mov
movsb
out
std
cmpsl
addl
cmpsb
xchg
mov
cwtl
push
xor
push
mov
into
loopne
xchg
xlat
add
jge
lret
jg
jns
or
xlat
out
push
pop
lock
in
sub
mov
cld
idivl
out
or
test
dec
stc
aaa
adc
ret
fnstsw
imul
lea
push
xchg
rolb
dec
icebp
das
lret
inc
fwait
jecxz
hlt
jbe
clc
cwtl
push
in
shrb
jmp
neg
das
pop
cltd
repnz
nop
fdivrp
or
test
cmpsl
mov
mov
inc
mov
mov
jl
fimull
into
xchg
or
mov
jmp
jmp
xor
xlat
hlt
cmpsl
cmp
cmp
dec
cwtl
adc
adc
mov
cmp
stos
cmp
push
into
aam
pop
in
sub
push
sti
xchg
xchg
pop
loopne
mov
adc
cltd
xchg
jmp
adc
sbb
cld
xchg
cwtl
mov
outsl
jno
mov
push
mov
jl
cmp
dec
pop
fsubrl
stc
test
fcoml
loope
jecxz
js
push
push
add
js
xchg
rolb
push
dec
xchg
mov
test
inc
insl
add
scas
sbb
or
test
enter
mov
push
push
inc
fidivrs
pop
xchg
subl
lods
ret
test
xor
aas
xor
pop
push
leave
es
xor
rcrl
push
cmpsl
and
xchg
add
xchg
in
push
push
and
pop
xor
lods
mov
push
sbbb
lods
out
sahf
stc
lret
mov
mov
out
ljmp
or
in
clc
ret
orb
shr
fiadds
loope
jnp
sahf
lods
mov
bound
inc
aad
or
fs
mov
mov
repz
xchg
pop
into
mov
jns
cmpsb
mov
pop
jl
pop
xchg
icebp
sub
adc
push
sbbl
push
jecxz
mov
dec
dec
add
pand
and
mov
rclb
cmp
stc
sbb
xchg
stos
xor
fldl
nop
add
xchg
aaa
mov
lahf
xchg
outsb
pop
nop
stc
enter
add
sbb
sahf
imul
scas
ret
adc
leave
movsb
jns
lcallw
or
sub
ficompl
sbb
push
add
fbld
add
les
xor
aas
xor
cld
mov
pop
fcmovnb
cltd
loopne
sbb
scas
mov
adc
sbb
sar
xor
aas
arpl
sbb
arpl
ret
cltd
sub
icebp
and
cld
cld
pop
roll
jg
call
mov
push
sub
das
mov
and
inc
jecxz
jnp
jle
jne
and
dec
pop
or
inc
or
xor
ret
ret
cmpsb
push
repnz
xor
int3
sub
push
mov
test
js
push
and
subb
xchg
subb
ret
ds
and
jne
mov
out
jmp
mov
lcall
add
mov
fwait
js
push
mov
popa
cmp
jle
pushf
in
xor
mov
mov
mov
divb
and
stos
xchg
sub
lds
cmp
dec
jecxz
js
jns
mov
add
add
lret
insl
or
leave
imul
cmp
and
mov
add
scas
stc
inc
aam
andl
jle
jnp
orb
pusha
dec
js
xchg
adc
and
shlb
push
xchg
pop
inc
pop
stos
and
dec
cltd
mov
imul
push
enter
mov
xchg
test
fdiv
mov
fucomi
data16
repz
xchg
sub
das
aad
pop
clc
mov
and
and
loope
leave
sub
loope
je
sar
sub
into
adc
and
leave
xchg
pop
jle
and
and
jne
pop
pop
mov
ss
xor
je
sub
clc
mov
rorb
xchg
jns
jg
sbbb
fadds
mov
fsubp
aam
mov
sub
aam
pop
sti
and
add
push
pushf
or
fbld
pop
mov
cmpsb
push
inc
sub
xchg
xor
sbbl
rolb
sti
aam
imul
add
cltd
push
hlt
das
loope
add
aad
mov
fstp
inc
cwtl
repz
out
cmp
mov
dec
les
xor
inc
fcomps
adc
lcall
fwait
call
call
push
xlat
ds
dec
cmp
shlb
fsqrt
adc
mov
mov
jbe
incl
leave
dec
jne
ret
lahf
int3
push
imul
jle
xorl
or
add
jne
xor
ret
scas
aas
cmpl
xchg
pop
pop
dec
inc
inc
or
aas
aam
mov
rcrl
popf
pop
jo
inc
and
mov
mov
loopne
xchg
shrb
test
out
pusha
bound
popf
mov
insb
inc
pop
push
ret
ss
imul
sbb
mov
rcll
mov
and
jp
lahf
xor
inc
out
sub
arpl
dec
sub
mov
das
hlt
aas
adc
into
push
mov
mov
aas
hlt
or
xchg
jge
lret
adc
mov
dec
sbb
cld
shl
xchg
insb
pop
lret
std
cwtl
pop
mov
push
fisubrs
push
pop
pop
rcrl
mov
adc
gs
dec
in
and
cmp
inc
mov
hlt
sub
and
or
sub
xor
push
sub
loopne
pop
movsl
mov
jle
and
daa
or
cltd
lcall
pmaxsw
outsb
and
int
jle
lods
cli
xor
movsl
lods
add
addb
cli
add
lock
mov
mov
add
pop
inc
ds
sbbb
lret
sbb
mov
or
jle
repz
movsb
fstpt
ds
loopne
dec
xchg
cmp
sub
imul
mov
xchg
outsl
xchg
pop
xchg
aad
mov
ret
in
dec
xacquire
popa
xor
mov
in
push
aas
lcall
add
inc
xor
outsl
and
nop
dec
sub
enter
out
mov
fwait
scas
sahf
xchg
gs
push
das
lods
and
add
and
sbb
adc
dec
xor
ror
aam
cmpsb
push
sub
sub
mov
je
sub
cmc
dec
pop
nop
xchg
pop
in
push
fistpll
out
and
push
fmuls
movq
sub
lcall
out
mov
sbb
pop
inc
push
jb
aad
mov
pop
dec
cli
stos
jg
add
jecxz
testb
movsl
scas
cmpsl
add
scas
ret
lahf
adc
mov
mov
xor
and
mov
aaa
sub
xchg
addr16
mov
mov
addr16
push
mov
js
iret
js
ds
loope
xor
push
or
mov
mov
and
leave
xchg
sbb
add
fcom
daa
adc
xlat
pop
xchg
inc
pop
jle
bound
shlb
roll
jmp
dec
cmc
jge
test
mov
mov
mov
ret
in
fisttpll
push
inc
push
xorps
push
jl
push
jge
mov
cld
sub
push
repnz
mov
repz
jno
sbb
dec
adc
mov
cmp
jle
xchg
lcall
pop
loopne
pusha
lahf
cltd
push
pop
pop
dec
scas
dec
dec
jnp
xor
inc
ja
pop
cmp
mov
xor
bound
stc
fxch
movsb
ds
ljmp
insb
sbb
mov
xchg
xchg
jae
add
jle
mov
add
loope
pop
push
xchg
cmc
fisttpl
sub
clc
xor
mov
pop
or
out
shrb
adc
add
adc
mov
jno
mov
jg
shrb
repnz
fcmovnbe
outsb
sub
out
push
mov
xor
add
pop
sub
push
shl
test
call
call
cmp
int
xchg
mov
inc
mov
cwtl
rorl
add
pop
dec
out
ds
jb
aaa
dec
cmp
pop
inc
imul
adc
sub
mov
stos
xor
mov
scas
sbb
in
sbb
lds
shlb
or
mov
sbb
out
cmp
cmp
push
and
mov
or
adcl
adc
lahf
pop
push
pop
leave
ret
fldcw
lcall
fstl
stc
pop
lea
decl
inc
dec
xchg
sub
pop
adc
enter
cmc
mov
std
cli
lea
inc
inc
sti
xchg
ficoms
idivb
in
filds
into
sbb
hlt
xchg
mov
shlb
clc
add
cld
adc
mov
sbb
cmp
push
mov
dec
and
push
sar
lods
mov
imul
jmp
xchg
inc
jo
push
mov
mov
jg
cmc
or
popf
pop
xchg
enter
out
roll
ja
jecxz
mov
outsl
test
hlt
cmpsb
mov
sub
pop
out
lea
dec
sub
push
mov
es
jecxz
aam
mov
lods
lds
cmp
psubsw
ret
pusha
mov
lods
lahf
inc
ss
fs
dec
cmp
xchg
pop
ret
in
out
pop
cmpsl
arpl
aaa
ja
cs
sub
stos
push
insb
lea
push
nop
or
jne
jne
mov
mov
pop
incl
std
sbb
repz
aad
mov
mov
fildll
adc
aaa
subl
stos
push
mov
pop
das
aad
xchg
cmovns
gs
mov
xor
out
mov
je
in
mov
lahf
stc
mov
jne
loopne
repz
lea
add
pop
cmp
mov
mov
dec
inc
out
sbb
gs
test
and
jno
or
mov
insl
faddl
dec
jl
pop
mov
push
imul
and
xchg
inc
stc
test
out
xor
daa
hlt
mov
push
fldl
jmp
clc
mov
pop
and
lret
lcall
mov
cmp
lcall
mov
iret
in
pop
sbb
jle
mov
xchg
cmpsb
jmp
and
adc
insl
stc
and
scas
hlt
cmp
popa
loopne
call
jle
out
fisubrl
jae
push
ja
in
iret
xchg
push
xorb
pushf
sub
xchg
jno
pop
pop
leave
shlb
sub
movsl
mov
sahf
dec
adc
cmp
shl
jbe
js
adc
shlb
aam
or
pushf
inc
adcb
pop
cmp
pop
jne
cmp
in
fsubrs
xrelease
mov
push
dec
jns
mov
mov
daa
aas
repz
outsl
cmp
fldt
mov
inc
sbb
dec
loope
stc
loopne
and
das
add
lret
xchg
les
sub
or
repnz
pop
cmp
and
jp
addr16
cmp
xor
push
js
cmc
popl
jae
jns
shlb
xchg
dec
jle
and
mov
or
nop
pop
rorb
cwtl
loope
cli
int
sbb
cwtl
sbb
cwtl
imul
hlt
cs
movsb
fiadds
push
in
out
bnd
cmp
fprem
push
in
cmp
les
loopne
adc
push
push
icebp
mov
sahf
fdivrl
scas
push
outsb
rolb
xchg
jno
or
into
jns
mov
pop
test
repnz
insl
push
ror
ljmp
cwtl
push
into
adc
push
ja
iret
lret
mov
mov
mov
add
cmpsb
lock
mov
push
lret
out
mov
inc
pop
popf
mov
addr16
hlt
dec
lods
jge
ds
cmc
lea
pop
fcmovnb
scas
in
or
mov
mov
leave
jg
and
mov
mov
push
sub
and
xor
jp
test
lahf
push
call
mov
in
out
jne
dec
lods
mov
add
cmp
hlt
inc
xor
out
push
sbbb
jb
adc
stc
cmp
xchg
insb
fxch
lahf
pop
ljmp
pop
jg
iret
push
and
stos
out
lock
sbb
and
iret
push
jmp
sub
sub
and
dec
lods
dec
test
sbb
push
imul
cmp
in
xchg
fiadds
cmc
pop
push
test
pusha
into
pop
out
inc
sub
sbb
stos
jmp
in
adc
dec
lret
les
ss
sub
xor
or
dec
int3
mov
inc
cmp
rcll
call
clc
jno
pop
test
cs
movsb
das
and
jg
es
adc
and
mov
repz
loope
push
mov
inc
decl
test
inc
fistpll
or
pop
lret
adc
push
insl
add
cwtl
int3
mov
je
and
lock
jns
dec
into
les
int
inc
and
pop
mov
pop
popa
inc
pop
icebp
lods
mov
push
dec
lahf
loope
clc
mov
cmp
xchg
fs
fmuls
rolb
adc
lods
insl
inc
call
movsb
dec
ror
mov
or
leave
aas
test
dec
repz
mov
dec
adc
push
mov
stos
jb
xchg
iret
ljmp
dec
insl
cs
fsubrs
mov
clc
or
test
jp
cmovo
int
pop
cli
xchg
pop
push
push
mov
mov
shrl
xor
sub
cmp
imul
test
cld
arpl
out
ficompl
pop
cmp
std
lea
pushf
outsb
enter
lahf
mov
sub
sub
call
and
xchg
pop
xchg
inc
and
arpl
enter
arpl
roll
inc
imul
mov
outsl
testl
and
mov
mov
cmp
jl
jns
mov
cmpsl
enter
ret
cmc
adc
xchg
arpl
cmp
cmp
sbb
jbe
addr16
cmpsl
xor
imul
imul
and
sahf
push
xor
jo
push
pop
fsubr
inc
mov
add
test
mov
outsb
out
xchg
leave
dec
inc
repnz
push
mov
xor
pop
and
lahf
inc
nop
cmpsb
mov
roll
js
loop
xchg
xor
fstpl
popf
imul
jae
sbb
iret
fwait
dec
mov
add
pop
sub
loopne
ffree
xor
xchg
mov
lret
fsubs
jb
cmp
int
rol
mov
jbe
cmpsb
mov
inc
data16
jg
jl
inc
out
mov
push
mov
scas
sti
adc
add
lea
mov
jae
cs
aaa
jg
daa
mov
cmp
pop
pushf
jp
sub
repnz
cmp
stc
enter
inc
icebp
nop
lret
inc
das
out
push
imul
pop
ja
insb
mov
mov
push
call
inc
movsb
sub
aam
or
cmp
dec
xor
repnz
push
and
cwtl
mov
push
out
testb
cmp
xchg
jp
sbb
stos
sub
xchg
out
adc
mov
dec
or
cmp
sub
inc
mov
adc
fcoml
ja
mov
cmp
fdiv
lods
pop
sbb
push
add
mov
push
add
sarl
xchg
fidivrs
adc
stc
or
sbb
inc
out
sbb
mov
ret
mov
fisttpl
jo
fdivl
fisubs
in
jecxz
push
cmpsb
cmp
and
or
clc
mov
mov
xchg
mov
cwtl
adc
test
ja
dec
xor
roll
jmp
cmp
out
push
insl
inc
cmp
dec
dec
in
or
sbb
cmpsl
xor
faddl
lahf
pop
and
adc
arpl
lea
stos
pushf
pop
lea
mov
inc
ss
addr16
mov
lds
std
bound
xchg
ljmp
lods
xor
sbb
adc
xor
idivb
push
push
clc
into
fcmovnb
pop
or
xchg
xor
cmp
pop
mov
fsubr
pusha
sbb
xchg
adc
dec
pop
mov
ljmp
les
pop
or
scas
ds
fstl
xor
mov
lret
hlt
popa
out
xchg
sub
sbb
dec
sub
pop
shl
and
fcmovu
or
mov
lods
cmpsb
mov
out
test
out
jl
cld
jl
mov
popa
adc
add
pushl
ret
push
stos
ds
xor
repz
push
sbb
sub
xchg
xor
pop
xchg
loop
mov
push
arpl
mov
mov
dec
test
add
iret
xchg
nop
mov
out
cmc
clc
push
cmpsb
pop
xchg
stos
ljmp
cmpl
sbb
and
xor
xchg
mov
jg
and
out
cltd
ret
push
push
and
iret
sub
fucompp
sbb
ss
dec
data16
mull
dec
out
fwait
js
dec
mov
aad
or
jns
addr16
fs
push
lahf
lret
daa
jmp
jge
mov
adc
sarl
push
mov
push
add
sbb
imul
fmuls
xlat
stos
xchg
scas
jnp
je
popa
sbb
pop
sub
mov
popl
push
add
cmc
lds
inc
mov
sbbl
adc
loope
fs
andl
sbb
xor
jl
sub
cmp
sub
mov
clc
stc
mov
sub
and
gs
and
rorl
cwtl
ret
in
sub
sub
bound
xlat
xlat
addb
rcl
je
pushf
jge
lds
cwtl
mov
jnp
add
cmp
push
pop
leave
jb
pushf
xchg
testb
stos
fiadds
or
fwait
sbb
test
sub
push
pop
mov
adc
jbe
xor
imul
arpl
mov
loopne
xor
inc
stos
sbb
sub
rcrb
adcb
mov
mov
xor
decl
hlt
and
jno
dec
filds
pop
sub
push
xor
lods
cmp
push
mov
mov
sub
imul
or
inc
cmc
nop
dec
fidivrs
push
call
in
fmuls
mov
test
pop
cmp
jnp
inc
ficomps
xor
inc
dec
dec
push
add
imul
pusha
jo
lahf
jmp
notb
lock
loopne
pop
imul
fidivrl
jo
add
in
inc
aam
rcrl
push
pop
lods
xor
mov
pop
add
enter
divb
pop
sbb
flds
push
outsl
out
dec
in
jne
test
movsb
dec
pop
rolb
icebp
insb
cmp
adc
clc
mov
or
repz
cmp
popf
cli
xchg
jmp
inc
or
pusha
leave
int3
movsl
ss
sub
ret
arpl
lock
int
push
push
jb
sub
out
leave
cmpsb
push
add
addr16
add
out
into
pop
dec
cmpsb
gs
scas
jb
lds
or
in
loop
sbb
dec
call
mov
fldl2e
inc
jge
cmp
mov
xlat
mov
push
inc
in
shrb
jbe
xchg
icebp
adc
das
sub
and
loop
add
and
scas
adcb
jl
adc
roll
imul
icebp
or
ss
shll
mov
lret
jnp
aas
ja
jmp
mov
or
movsl
loop
xor
sub
xchg
xorb
mov
jle
scas
sahf
mov
outsl
or
mov
pop
sbb
add
sbb
cwtl
pop
jae
mov
insb
stos
js
insl
fdivs
adc
sub
imul
sahf
stc
fistps
push
push
inc
sub
das
sbb
test
mov
ret
xor
jecxz
jo
push
aas
inc
leave
xor
mov
in
sub
movb
push
iret
in
pop
jp
ja
int3
dec
pop
sbb
or
mov
adc
aam
sub
stos
jg
inc
add
arpl
cltd
jle
psadbw
test
sbb
pop
add
jbe
cltd
pop
fs
test
test
cltd
jb
mov
or
decb
idivb
pop
cmp
and
fdivl
test
fdivrp
repnz
mov
clc
push
or
jmp
jnp
fs
cmp
xorb
movsl
fbstp
and
outsb
adc
jecxz
ror
rorl
rorb
js
push
call
dec
sub
jns
les
mov
fdivrl
inc
hlt
push
fistpl
inc
std
insb
or
xchg
dec
test
in
lock
dec
xchg
dec
in
push
dec
test
pop
pop
and
lds
push
sub
or
repnz
es
dec
and
push
lock
jnp
or
loop
icebp
sub
inc
ret
sub
outsl
cmp
and
jae
push
mov
inc
mov
cmpsl
and
jb
ror
pop
mov
and
loopne
cvtps2pd
jge
jecxz
lret
dec
xchg
aas
add
lahf
adc
cmp
push
sbb
cmp
lret
jl
xchg
and
mov
lcall
ret
movsb
sub
push
mov
xor
dec
fwait
fwait
or
adc
mov
fdiv
mov
insl
cmp
push
mov
cli
push
pop
and
test
inc
nop
add
inc
push
pop
pop
bound
imul
jbe
ficoml
fs
ljmp
mov
jp
xchg
int3
or
mov
out
mov
push
sbb
and
insl
loop
push
lock
inc
pusha
xor
clc
mov
lret
pop
sbb
in
stos
sub
cld
pop
lea
mov
les
out
test
dec
pop
orl
daa
cltd
sti
fistps
call
outsl
add
adc
sbb
jge
push
mov
imul
movsl
scas
mov
cltd
scas
ds
adcl
cmp
mov
cli
jge
stos
dec
dec
push
mov
sub
mov
mov
daa
adc
rcl
xor
movsl
sbb
xchg
movsb
test
push
cmp
sbb
int3
sti
inc
into
dec
jo
pop
pop
add
mov
push
repz
and
dec
and
shlb
es
adc
cld
pusha
gs
inc
clc
lods
vmptrld
lea
mov
lock
iret
pop
mov
scas
dec
dec
inc
gs
int3
dec
mov
jmp
xor
fcomps
aas
outsl
iret
in
ljmp
mov
pop
test
loope
rorl
jmp
cmp
mov
lods
jne
cmc
loop
xchg
movsb
xchg
pop
adc
je
and
clc
cmp
sub
imul
xchg
test
imul
mov
jmp
sub
xchg
nop
lahf
jp
mov
mov
mov
out
mov
test
andl
sub
scas
lods
mov
movsl
cmpsl
cmp
pop
clc
stos
mov
xchg
lret
test
outsb
lahf
pop
in
sub
push
and
jae
cltd
mov
daa
sbb
roll
mov
adc
shlb
dec
arpl
enter
test
loopne
sub
ret
push
mov
jg
imul
xchg
and
dec
js
sub
cli
adc
pushf
cmpsb
mov
montmul
cmpsb
add
ds
push
xor
ficoml
mov
test
dec
sub
fwait
push
xchg
out
add
stos
lret
iret
mov
pop
ret
add
into
jbe,pt
or
mov
jl
pushf
das
movsb
mov
popa
test
out
dec
mov
mov
pop
lcall
adc
loope
cmp
jb
push
fisubl
int3
adc
adc
dec
inc
arpl
insl
fcoms
ds
push
adc
call
mov
adc
repz
inc
clc
aaa
add
test
cs
mov
dec
pop
xchg
jb
push
repz
lea
out
mov
int3
jl
clc
lret
shlb
mov
jno
or
cmpsl
call
out
aaa
mov
jl
mov
jmp
stos
inc
mov
arpl
movsb
mov
pop
xor
ljmp
and
mov
popa
mov
cmp
in
lret
xchg
xlat
jns
adc
pop
sub
or
mov
gs
rcll
ss
divl
daa
pop
mov
mov
jno
adc
les
jg
aas
or
xor
repz
es
xchg
inc
iret
scas
jbe
popa
inc
lds
js
add
jmp
mov
mov
decb
add
jl
sar
test
adc
jecxz
add
mov
je
push
adc
in
jmp
rcll
cwtl
xchg
cmpsb
dec
inc
sbb
lret
stos
sbb
mov
adc
popa
pop
adc
jg
add
and
jo
xchg
cltd
test
inc
pop
fldcw
test
fs
sbb
sbb
push
and
dec
xchg
sub
cmpsl
imul
xor
repz
dec
ss
outsl
inc
orl
sub
incl
dec
test
mov
cmpsb
ds
ja
fdiv
mov
cs
adc
inc
aas
or
lahf
enter
lock
jne
or
icebp
loopne
call
jb
cmp
mov
inc
int3
mov
jmp
jo
std
mov
pop
push
lahf
adc
jge
scas
push
or
inc
test
cli
rolb
dec
cmpsb
popf
mov
push
cmp
xchg
jmp
bound
mov
andl
fidivrl
test
adc
mov
repz
push
mov
pop
and
insl
imul
nop
xchg
fmulp
enter
loop
inc
jecxz
aam
xor
pop
rcr
xchg
fiadds
in
nop
mov
loopne
ud0
jmp
ror
ja
jbe
jge
xchg
push
movsb
movsl
gs
jmp
jnp
pop
push
dec
xchg
test
mov
sbb
add
and
dec
repnz
in
fs
mov
scas
repz
push
sbb
fistpll
adc
mov
out
mov
push
sti
in
push
dec
daa
ret
sbb
movsl
push
notb
testl
xlat
rcll
pop
iretw
out
ror
in
aaa
inc
data16
sub
and
dec
dec
std
fwait
jmp
cmpsb
clc
es
pop
std
mov
ljmp
shr
loop
or
enter
ficomps
adc
fdivrl
mov
lock
cmc
dec
out
xor
lret
ljmp
hlt
push
xchg
cmpsl
lret
inc
imul
stos
jns
in
mov
in
push
cld
add
js
lds
fidivl
lock
in
xor
sbb
and
popa
and
and
mov
out
loopne
xor
mov
data16
inc
lds
out
xchg
jg
sbb
movsl
mov
xor
pop
in
or
outsb
es
fadds
insl
push
jp
push
and
call
dec
push
mov
mov
adc
mov
push
aaa
mov
aad
repz
sahf
xchg
repz
ljmp
lret
cwtl
cld
fs
cmp
clc
int3
scas
xor
mov
in
das
movsb
inc
mov
int3
cmpsb
rcl
cmp
je
adc
adc
movsl
lds
shrb
aam
mov
push
aaa
cmc
int
stos
into
jmp
add
mov
ficomps
mov
enter
xlat
out
mov
jmp
sbb
adc
push
test
mov
mov
aas
loopne
in
dec
scas
jae
mov
movsb
repnz
loope
loopne
pop
and
icebp
adc
mov
stos
or
mov
idiv
adc
or
hlt
stos
xor
or
mov
aad
orl
and
xchg
arpl
adc
arpl
jl
sbb
pop
cmp
hlt
or
xchg
testb
int3
int
and
aaa
sub
call
in
movsb
xchg
adc
dec
xchg
pop
or
adc
testb
add
aaa
or
in
push
xchg
mov
mov
jge
lret
jbe
xor
fisttps
pop
push
inc
lret
es
mov
fistps
in
mov
outsl
repnz
mov
es
aam
stos
test
xor
mov
or
imul
inc
std
push
insb
xor
stos
jae
and
ja
movsb
or
aad
xchg
popf
nop
mov
out
aaa
push
mov
push
mov
lock
and
inc
test
test
add
mov
inc
jns
cmp
push
xor
cmp
and
lret
push
dec
inc
setle
outsl
subl
icebp
icebp
stos
data16
out
js
push
data16
adc
cmp
aas
sbb
add
jp
ret
je
push
sub
pop
cmp
sti
arpl
lds
sbb
js
lret
es
shll
sbb
mov
and
or
pop
push
ja
add
cmp
add
mov
cmpsl
in
in
daa
mov
or
pop
lods
mov
push
enter
stos
sub
movb
insb
push
push
call
mov
pop
dec
xchg
fisttpll
aaa
cmp
sbb
add
mov
daa
loope
sbb
pop
ss
stos
js
xchg
xchg
mov
adc
pop
ds
adc
adc
shll
jle
push
ret
shrl
xor
sub
pop
and
pop
in
insb
lds
inc
lret
loope
inc
fucomp
cld
add
pusha
stos
iret
xor
int3
sbb
mov
xor
int
push
xor
jb
add
fisubrs
xor
and
sub
js
test
adc
jmp
mov
out
sub
jo
insb
hlt
mov
rcrl
adc
mov
enter
jns
pop
adc
test
pop
sbb
jne
fldt
ret
xor
mov
add
dec
pusha
cmp
das
push
shrb
addr16
sbb
in
aas
and
xchg
xchg
daa
sbb
pop
aas
lahf
mov
push
es
xchg
push
idivb
rorl
mov
push
daa
mov
push
rcr
repnz
js
rorl
dec
sub
call
cld
cmova
pop
xchg
sub
lds
fs
pop
cmp
cmp
ret
mov
jle
repnz
sbb
mov
pop
loop
dec
ds
xchg
leave
xor
pop
add
xchg
sbbb
xchg
cmp
cld
imul
add
mov
xlat
stc
mov
jmp
ret
push
ret
cwtl
xor
loope
sbb
sahf
gs
es
pop
cmp
mov
sub
push
leave
pop
out
in
push
pop
xor
outsb
ljmp
and
add
push
jno
jg
lret
mov
push
addb
es
mov
lret
inc
and
ficoms
xor
jl
dec
add
sbb
das
shrb
adc
mov
out
in
mov
gs
shll
push
jo
gs
pusha
insb
ret
pop
scas
lahf
dec
stc
out
adc
sub
jne
outsl
cmp
ljmp
lods
shrl
push
inc
sbb
mov
fdivrs
push
lret
testl
mov
pop
sbb
mov
mov
mov
dec
mov
cs
mov
repnz
jle
or
add
inc
pop
mov
xchg
cmpsl
insb
clc
and
sbb
js
fdivrl
ficoml
sti
mov
sbb
mov
sbb
inc
rclb
sub
mov
inc
icebp
xchg
sbbl
aaa
push
sbbl
and
jno
jge
sbb
adc
sub
lods
int
xchg
or
jp
push
stc
jmp
xor
arpl
xchg
cmp
js
jg
pushf
adc
adc
mov
adc
lock
xchg
outsl
and
and
or
mov
lock
mov
cmpsb
pop
xor
pop
into
add
cmpsb
mov
pop
mov
pushf
outsl
cld
push
lock
mov
lret
mov
popa
notl
into
pushf
lock
out
scas
or
nop
xor
aam
loopne
mov
xchg
mov
stos
pop
xchg
mov
icebp
aaa
data16
cmp
movsl
iret
cld
mov
inc
pushf
jnp
cli
pushf
shll
pop
pop
sub
jle
inc
mov
xchg
mov
push
mov
pusha
out
mov
or
sbb
out
rclb
orb
jl
jne
cwtl
xor
jae
jne
icebp
lahf
rclb
repnz
outsb
orb
jmp
add
sub
jne
add
popf
testb
mov
aam
je
xchg
or
int
cmp
push
test
fnstsw
dec
pusha
mov
jmp
push
rorl
and
xchg
outsl
ss
push
jnp
out
mov
inc
inc
negb
popa
add
ss
lods
adc
pop
lret
mov
aas
data16
sahf
test
out
mov
mov
lret
jae
xchg
adc
pushf
ret
mov
and
dec
jae
push
lea
push
and
and
inc
fnstsw
lock
dec
popf
cli
dec
fwait
lret
sbb
jns
fists
adc
sub
mov
push
dec
repnz
adc
insb
jae
push
lock
enter
gs
lods
add
mov
mov
mov
mov
push
sub
icebp
cmp
dec
dec
daa
pop
jnp
testb
lret
shll
add
sbb
xchg
arpl
dec
xor
or
cmpsb
xlat
xchg
pause
adc
mov
popa
test
out
jp
cmp
add
sub
leave
sub
mov
jno
mov
push
je
fistps
out
das
fwait
xlat
in
mov
fcompl
xchg
test
lods
push
dec
inc
inc
cmp
movsb
cmpsb
push
jecxz
shrl
inc
cli
mov
iret
jl
mov
mov
xor
pop
aam
movsb
push
mov
and
mov
sub
iret
sub
jns
inc
pop
les
stos
cmpb
scas
ss
jnp
jnp
jecxz
push
sub
stos
add
data16
xor
xchg
jg
pop
pop
adc
pop
std
push
outsb
pop
push
aad
mov
je
sbb
std
mov
lds
les
jp
mov
sub
in
dec
xchg
call
aaa
push
insb
fbstp
jae
shll
lods
imul
dec
sahf
rcll
xor
rorb
or
xchg
popf
mov
sub
sbb
fsubrs
sub
mov
in
inc
aaa
add
jns
xchg
loop
mov
push
mov
sbb
das
sbb
enter
mov
sarl
fisubs
sbb
lea
xchg
push
mov
les
movsb
xchg
aaa
subl
ja
jae
jecxz
es
jb
je
fwait
xor
push
out
ss
gs
push
cwtl
fsub
pop
andl
or
xor
push
sti
ss
mov
call
jnp
je,pt
mov
sbb
add
xor
in
scas
jb
scas
in
js
or
add
sub
int
adc
adc
xlat
inc
mov
or
push
rorl
clc
imul
jmp
icebp
insl
in
mov
stos
xchg
xchg
loope
dec
add
nop
jb
jp
lret
clc
outsl
rcrb
mov
and
call
data16
xchg
adc
rcll
sarl
addr16
imul
inc
imul
adc
push
mov
pop
cmpsb
xchg
fnstsw
mov
fmul
adc
and
sbb
test
or
mov
mov
add
out
scas
sbb
or
sbb
cltd
cmpsl
pushl
xlat
loopne
lods
fs
jle
cli
xor
outsl
cmp
mov
cmpsb
f2xm1
subl
pop
inc
pusha
jmp
enter
les
push
pop
sbb
mov
lds
and
dec
loope
scas
or
adc
enter
cmpsb
outsb
xor
sar
pop
scas
ljmp
clc
aad
xchg
out
pop
ret
xlat
call
mov
xchg
out
lahf
call
dec
outsb
mov
jl
fcmovb
mov
sti
out
cmpsb
in
lea
push
or
inc
aaa
sub
not
dec
ds
movsb
xor
push
out
sub
jbe
sub
stos
add
add
push
add
mov
stos
pop
popf
in
sti
cltd
jmp
and
push
lods
push
data16
loop
cld
test
arpl
incb
pop
in
pusha
stos
adc
mov
lods
mov
pop
or
test
mov
or
xchg
dec
push
pop
cltd
pop
bnd
scas
movsb
jno
fisubrl
bound
bound
inc
lods
jl
test
inc
sbb
mov
and
xlat
mov
or
jns
out
and
jmp
cmp
sub
adc
sbb
in
imul
jae
sar
ret
test
fdivrs
cs
inc
fsubp
data16
add
ljmp
movsl
xchg
mov
mov
mov
ds
aam
and
data16
scas
jae
gs
ret
mov
fmuls
fsubrs
out
lods
int3
lods
push
lds
or
mov
nop
and
mov
dec
movsb
push
mov
adc
fwait
add
aad
repnz
into
mov
add
inc
insb
pop
push
xor
adc
and
push
rcl
lods
paddusb
mov
sbb
mov
push
insb
shrl
sub
mov
aaa
jae
mov
in
add
je
lea
xor
jmp
popf
xor
and
jnp
mov
xchg
rolb
or
mov
adc
pop
jecxz,pn
addl
out
dec
fidivrs
pop
mov
xchg
cwtl
notb
fs
push
divb
rcr
sbb
aaa
jne
lods
inc
lods
jle
and
add
ficoml
int
inc
fs
jle
inc
pop
xchg
and
imul
out
jl
add
sbb
orb
addl
out
inc
fsubp
hlt
inc
dec
and
mov
or
lods
jecxz
inc
in
repz
or
pop
add
mov
cmp
lea
push
lods
bound
aam
aas
shlb
jno
xlat
mov
shll
dec
jp
jno
pop
mov
sbb
jb
es
or
and
sbbl
mov
mov
popa
div
xor
js
or
stc
push
inc
test
fisubl
mov
pop
push
cmp
stos
ljmp
lea
xchg
cmp
and
cmp
sbb
cs
jecxz
xchg
mov
mov
or
and
pop
ret
fs
jae
mov
add
adc
xchg
jmp
push
movsb
adc
xor
cmpsb
dec
jp
cmpsb
mov
push
pushf
aam
loopne
jge
sahf
jl
and
add
dec
cmp
mov
xchg
inc
test
mov
sub
pop
adc
lea
sbb
inc
jecxz
mov
shlb
movsb
xor
xor
rorl
mov
loope
xchg
mov
lcall
add
lock
push
fwait
sti
fsubrs
dec
mov
inc
xor
jns
inc
inc
fs
daa
loope
shrl
jns
aad
out
and
or
xchg
cli
idivb
mov
jns
cmp
sub
dec
dec
imul
sbb
cwtl
call
fcomi
jns
hlt
test
movsb
cltd
nop
es
mov
ljmp
xchg
leave
sbb
xchg
sbb
loop
cwtl
aaa
call
lahf
jne
lret
sub
lods
cmc
loopne,pt
mov
popa
mov
push
dec
and
jge
mov
rorl
jb
and
xor
and
cmp
cld
mov
jmp
clc
xchg
aas
inc
mov
cs
mov
bound
enter
mov
out
inc
sahf
push
lock
cmpb
icebp
or
pop
push
jns
lcall
loop
cmpsb
mov
ds
popa
push
xchg
lret
inc
frstpm(287
sub
icebp
mov
icebp
jmp
push
sub
add
js
in
int
sti
and
insb
insb
sub
clc
mov
xchg
out
jmp
mov
ficoms
adc
xorl
fists
cmp
xchg
mov
cltd
and
fisttpll
xchg
clc
xchg
xchg
cmp
sbb
dec
or
movsb
or
xchg
inc
insb
rolb
movsb
adc
add
loopnew
les
jae
jo
or
push
xchg
adc
inc
push
push
stos
lods
mov
imul
xchg
xchg
mov
or
rorb
movsb
mov
cltd
push
cmp
fcomps
test
sub
xor
pop
repz
lcall
mov
out
sbb
adc
push
sub
or
cmp
rol
xor
ja
ret
dec
lcall
xchg
inc
cmpsl
mov
popa
adcb
js
insb
loopne
mov
lret
lds
add
add
sti
push
mov
addb
cmp
les
dec
pop
ja
xor
or
or
adc
lea
jp
divb
or
bound
dec
pop
shrb
ret
fcompl
inc
and
xchg
sti
icebp
sbb
iret
and
into
push
xchg
out
lods
push
dec
and
jo
in
hlt
inc
or
add
and
mov
mov
push
in
cmp
test
sbb
mov
push
xchg
lret
mov
or
imul
pop
fs
fldcw
push
das
push
xchg
loop
add
mov
cld
test
dec
adc
xchg
jo
ja
div
loop
lods
xchg
insl
dec
mov
int3
pop
arpl
lahf
jbe
fdivrl
fdivrl
int
bound
sbb
dec
push
fsubs
imul
fwait
pop
nop
test
inc
fs
lea
sbb
loopne
mov
inc
clc
inc
or
test
push
es
iret
or
sub
gs
xor
clc
mov
sahf
je
sbb
jno
test
out
jl
testb
lcall
cmpl
insb
call
xor
fnsetpm(287
rolb
fstpl
das
movsb
cmp
sub
add
xchg
pop
sub
adc
lret
cli
sbb
loope
iret
aas
adc
and
lahf
jl
adc
jno
dec
xchg
mov
cmovs
cmp
add
mov
mov
xchg
inc
push
mov
dec
fistpll
popf
adc
cmpsl
sbb
cmp
scas
pop
test
jo
xchg
pop
mov
pop
sub
jbe
xchg
jl
stc
bnd
push
in
sbb
fbld
dec
clc
mov
fcoml
xchg
xor
pop
nop
jb
outsl
mov
insb
adc
sub
cmp
repz
bound
nop
cmp
ret
push
cmpsb
insb
or
sub
jle
aad
mov
cmp
addr16
insl
xor
sbb
rcll
xor
pop
ret
out
sbb
dec
jg
sbb
lcall
jns
pushf
and
mov
out
fwait
jmp
jecxz
sub
vpunpcklqdq
movsl
cld
aam
cmp
bnd
push
mov
insb
dec
adc
int
jle
xchg
data16
lods
daa
adcb
pushf
xlat
dec
fxch
jns
sbb
and
xlat
aas
lea
outsl
mov
push
mov
ja
test
cmp
lahf
sub
repnz
popa
push
add
adc
fs
xchg
inc
lods
scas
scas
mov
mov
sbb
inc
add
int
cmp
xor
adc
pop
fmull
test
fnsave
dec
push
or
movsl
sbb
cmp
movsl
jae
mov
add
data16
rorl
push
das
data16
ret
add
sbb
mov
shl
pop
js
std
inc
arpl
psubw
add
pop
rcl
mov
add
lret
push
js
js
cmp
cltd
xor
jae
icebp
mov
mov
movsl
adc
popf
insl
cs
mov
fistl
sub
adc
dec
int3
push
dec
cmpsl
jmp
jle
icebp
mov
xchg
lds
imul
or
pop
and
cmp
pop
add
mov
xlat
int3
or
mov
call
sbb
fisttpll
dec
out
dec
and
push
ss
mov
and
jge
pop
mov
mov
mov
add
lcall
mov
jae
xchg
adc
cmp
scas
rcl
mov
dec
lcall
movsb
jmp
lock
pusha
call
sbb
movsb
out
clc
adc
push
jle
pop
test
sbb
jl
imul
out
bound
jg
push
inc
sbb
inc
add
lahf
addr16
mov
fiadds
jb
and
xchg
pop
rolb
in
push
cmp
cmpsb
push
out
lea
xor
push
int
aad
cmpsb
cmp
loope
iretw
loope
pop
or
notb
les
stos
lock
xor
pmaddwd
lret
fdivrs
mov
jmp
repz
scas
into
pusha
pop
cmpsl
add
js
arpl
mov
dec
xor
push
and
rcrb
orl
push
pop
nop
imul
ret
lods
mov
ds
sbb
les
sbb
hlt
loop
fdivl
pop
shlb
sub
fchs
dec
sub
cmp
aaa
xchg
aad
adc
nop
jle
sti
pop
xchg
lcall
cld
imul
sbbl
es
dec
test
sarl
imul
mov
and
sbb
sbb
pusha
jae
lock
inc
out
sbb
outsb
inc
jg
lods
xchg
orl
sbb
cmp
lea
shl
xchg
jle
pop
testb
inc
outsl
repz
fcmovnbe
mov
mov
add
dec
mov
sbb
je
shl
and
pop
fdivrl
stos
movsl
rol
mov
das
xlat
insb
ljmp
faddl
sbb
cltd
fdivrs
ss
outsl
ds
addr16
fwait
push
sbb
push
xlat
mov
and
inc
cs
and
rolb
jl
adc
mov
lret
je
clc
mov
lea
dec
ljmp
mov
cmc
popa
ja
gs
sub
lcall
insb
aad
jnp
xchg
sub
pop
jge
lock
rorb
popa
fistpll
leave
lret
sub
jae
sbb
xor
test
daa
add
xchg
inc
popf
jmp
in
aas
repnz
and
movsb
lea
mov
jg
cwtl
icebp
orl
das
mov
test
out
aaa
sarl
stc
push
lea
sub
push
ss
mov
negb
roll
mov
insl
add
daa
shll
roll
xor
mov
es
jmp
cld
and
pop
sbb
cmp
inc
pushf
insb
xor
fbld
pusha
repnz
popf
arpl
aam
stos
outsl
in
add
dec
cmp
jo
insl
sbbl
xchg
test
pusha
ja
xchg
mulps
mov
sbb
and
fsubp
mov
jg,pt
les
dec
in
in
bound
and
mov
out
push
xchg
pop
fldenv
mov
gs
push
popa
mov
imul
lds
pop
inc
pusha
repz
fs
or
mov
test
fidivrs
sbb
ficoms
mov
jnp
inc
mov
xor
scas
inc
cmp
add
mov
mov
dec
cmp
push
adc
lcall
xor
lds
arpl
add
es
repz
adc
daa
int3
cmpsl
into
dec
xchg
dec
loopne
mov
js
incb
mov
push
sbb
pop
dec
call
fdiv
jmp
mov
movsb
jne
mov
and
push
add
xchg
lods
sbb
push
pusha
lret
xchg
and
es
movsb
gs
sub
cwtl
repnz
es
lret
lahf
xchg
imul
scas
push
stos
lret
out
cmpsl
imul
sub
jmp
cmpsl
std
sbb
sub
cmc
cwtl
out
pop
push
testl
rolb
jb
mov
subl
insb
mov
gs
aam
jle
inc
jne
popf
sub
add
jmp
pop
jnp
adc
int
mov
popa
pop
jne
cmp
dec
sbbb
setl
cmp
out
sarb
in
fnstenv
ljmp
cmp
hlt
addr16
sahf
shrb
int
out
dec
push
loopne
mov
enter
lahf
jns
out
rolb
adc
bound
cmp
ljmp
push
dec
dec
stos
push
shrl
rorb
pusha
jo
lea
sti
lods
les
mov
mov
mov
int
jmp
xchg
shll
push
repnz
push
int
and
sbb
insl
cmpsl
mov
fwait
mov
vmovsd
xor
or
xor
or
and
jge
and
imul
enter
jge
inc
mov
mov
push
addr16
and
imul
sub
movsl
and
cmpsb
test
lods
cmpsb
push
scas
stc
ret
loop
sbb
enter
push
jno
daa
mov
adc
pop
enter
mov
mov
cltd
fmuls
sub
xchg
sbb
pusha
jmp
cld
mov
mov
xchg
sbbb
add
imul
jno
das
mov
dec
stos
addr16
or
outsl
rclb
cli
loope
adc
scas
jle
cltd
or
mov
xchg
xchg
lret
dec
sub
mov
mov
je
mov
test
insl
jae
mov
dec
jge
repnz
jno
sub
add
decl
sbb
sti
xchg
xor
fisttpll
jbe
bound
outsb
test
mov
sbb
jbe
cmc
or
mov
je
shrl
dec
jnp
jle
mov
xor
jbe
xchg
sbb
mov
or
fists
lahf
or
inc
adc
adc
sub
jb
lcall
ljmp
pop
loope
or
sub
xor
cld
xor
adc
push
or
jg
arpl
pop
inc
push
sbb
lea
xchg
mov
out
xorl
mov
mov
sub
icebp
pushl
fmulp
stos
sub
xor
fs
sbb
adc
icebp
pop
repnz
mov
sub
lcall
pop
insb
pop
push
imul
roll
xor
mov
xchg
lods
pop
inc
clc
cmpsl
outsl
pop
push
rcll
insb
sbb
sarl
pop
cmp
sub
pop
dec
orb
cmp
cmp
adc
ret
cld
shrl
dec
or
outsw
stos
jmp
inc
jo
sbb
das
mov
and
icebp
jne
lret
sbb
cld
cmc
add
cmpsb
pushf
adc
int
pusha
fs
cs
xchg
and
outsl
mull
imul
outsb
pop
cltd
jns
inc
jp
push
test
and
popf
sti
jg
xlat
ljmp
inc
fprem1
xor
bound
sahf
fisttps
rcr
aas
jae
ficoml
adc
negb
push
xchg
ss
xor
inc
mull
adc
jp
nop
rcrb
pusha
dec
sub
fwait
movsl
and
fbstp
andl
xchg
push
sub
dec
add
arpl
and
hlt
lret
mov
xor
jo
loop
imul
sarb
inc
fwait
dec
lds
or
jl
sbb
pop
or
scas
sub
push
lock
mov
and
push
out
cmp
xchg
mov
loope
jmp
leave
pushf
adc
xchg
sahf
lods
nop
xchg
scas
mov
clc
xchg
xor
xchg
lods
mov
inc
xor
mov
inc
stc
pushf
cmp
mov
test
xchg
mov
dec
xchg
jbe
pop
cli
add
aaa
xchg
inc
jp
cmp
faddl
sbb
mov
addr16
hlt
scas
add
sub
sbb
or
sahf
insb
and
dec
xchg
mov
in
scas
mov
and
or
mov
mov
mov
clc
mov
stos
andb
dec
enter
mov
adc
mov
mov
test
jae
dec
pop
mov
mov
mov
add
repnz
int
stos
je
jmp
cmp
in
ficoml
xor
aas
mov
mov
xor
mov
jle
inc
jmp
inc
movsl
jns
sbb
mov
xor
add
stos
scas
and
fdivrs
sti
ja
adc
ljmp
loop
fistl
dec
sbb
insb
cltd
js
ret
mov
mov
mov
aam
out
mov
pop
outsl
test
sar
int3
sbb
cwtl
pusha
shlb
pop
xchg
adc
sbb
leave
jle
dec
push
in
jge
xchg
in
movsl
inc
gs
xchg
clc
mov
fnstenv
cmp
inc
sub
push
xchg
popa
rcll
mov
jmp
rcrb
outsb
mov
popa
dec
mov
add
push
cmp
notb
xabort
mov
ret
xchg
ret
mov
lods
lock
jns
jno
mov
repz
mov
pop
push
scas
std
out
loope,pt
pop
bound
stc
mov
test
mov
out
aaa
lods
add
idivb
leave
out
sbb
pop
loop
mov
test
mov
test
push
imul
cmp
pop
mov
mov
loope
add
xchg
fsubrs
iret
mov
inc
fmuls
loop
sub
cmc
and
in
fnstsw
jecxz
mov
ja
fcoml
jg
xor
daa
aas
stos
subl
and
pop
push
loop
xor
aas
lret
cmp
jns
jne
call
mov
stos
in
xchg
fwait
lods
test
pushf
xor
leave
out
mov
mov
add
daa
jbe
sbb
xchg
pop
jne
jne
inc
dec
mov
cltd
addl
add
inc
and
cmpsb
out
jno
pusha
mov
push
jle
out
ds
sbb
cmp
inc
sub
ljmp
int3
mov
ss
mov
cmp
inc
mov
inc
or
mov
add
hlt
mov
mov
push
pop
or
jle
cmpsl
xchg
test
add
dec
jle
pop
decb
add
cwtl
call
mov
adc
cmpsl
inc
lcall
loopne
and
jmp
cmp
xor
jge
sub
jl
push
mov
mov
outsl
mov
pop
push
pop
xor
loopne
pop
cmp
inc
addl
insb
mov
subl
jne
push
xorb
stos
pop
les
test
mov
jl
lea
iret
fcomps
andl
mov
out
mov
cmp
andl
fs
fists
notl
vfrczpd
sub
dec
gs
lods
mov
data16
adc
jecxz
xor
cmp
shll
pusha
push
lock
leave
movb
jl
inc
lds
pop
and
lcall
or
jmp
sub
add
fsubrl
xchg
cmp
bound
xor
adc
xchg
dec
xor
jecxz
int3
aas
jae
mov
call
cmp
cmp
fcmovb
xchg
mov
outsl
jb
or
stc
mov
popa
sbbb
jns
faddl
faddp
arpl
mov
mov
sbb
cmp
sub
mov
cmpsb
out
out
and
fs
xor
test
jg
popa
outsb
imul
pop
mov
dec
sub
rcrb
mov
mov
inc
push
cmp
daa
or
jns
ret
mov
imul
jecxz
pop
push
add
sbb
es
inc
lock
lods
outsb
push
fcmovnbe
push
fildl
scas
push
dec
loopne
inc
in
lods
shl
into
mov
cmp
lock
ficoms
roll
ja
out
call
adc
mov
xlat
imul
push
sbb
mov
sti
nop
and
aas
addr16
icebp
shr
enter
and
testl
stos
mov
negl
inc
pop
mov
outsb
mov
pop
cmc
xchg
add
xor
lods
sbb
inc
leave
movsb
pop
sbb
shl
sub
jns
push
and
mov
pop
fnsave
addl
mov
jmp
jne
pop
aaa
dec
insl
sub
movsl
cmp
jmp
into
aad
cmpsl
rorb
adc
inc
push
xchg
dec
mov
sbbl
rcll
popa
in
sahf
stos
mov
cmp
icebp
and
jge
xchg
int
cmpxchg
jne
push
enter
ror
or
daa
cmc
cld
xlat
xchg
add
iret
jmp
incb
icebp
in
pop
das
and
arpl
in
mov
sub
movsb
xchg
cmp
jmp
mov
mov
fidivrl
adc
mov
call
push
in
aas
fnstenv
mov
or
pop
inc
rolb
clc
mov
cmpsb
cli
pushl
in
dec
out
push
in
jo
popf
adc
dec
mov
inc
push
shll
in
jbe
int
jl
dec
aas
clc
lods
adc
or
pusha
add
orl
test
sub
dec
cs
ljmp
aaa
sbb
mov
notb
cmpsb
daa
lcall
jmp
and
push
jecxz
pop
add
roll
xor
scas
inc
divb
sbbb
cmc
movl
das
xor
in
mov
mov
out
xchg
rcrl
jp
scas
inc
adc
mov
arpl
repnz
ss
cmp
jle
cli
xlat
aam
into
push
xor
movsl
out
adc
push
lcall
sbb
push
adc
test
test
cli
or
jl
jo
mov
clc
je
lcall
xor
jb
cld
out
xchg
cmp
push
aas
pop
popf
pop
and
stos
pop
mov
scas
pop
outsb
dec
pop
es
add
leave
dec
leave
ds
mov
and
stos
test
ficoms
or
pushl
daa
pop
jbe
xchg
push
add
out
jge
testb
lret
mov
rorb
pop
imul
lea
pop
push
pop
pop
inc
pushl
inc
add
in
push
push
cli
mov
mov
push
int3
lods
mov
das
xor
lods
push
xor
loopne
fmull
push
ret
and
loopne
jmp
mov
outsb
movsl
pop
xchg
mov
xchg
stos
cmp
scas
xchg
inc
push
jno
mov
inc
push
cld
xor
push
pop
push
cmc
adc
mov
xor
push
pop
in
mov
lahf
add
mov
adc
cmpsb
adc
or
shl
or
pop
addb
pop
cli
bnd
or
aad
jmp
push
xorl
push
adc
cmpsl
pop
sbb
pop
add
mov
adc
in
popa
lcall
cmpb
sbb
push
mov
or
cmpsl
ficomps
pop
xchg
and
dec
mov
dec
insb
mov
mov
enter
ss
xor
jl
clc
xchg
shll
push
pop
pop
adc
lcall
mov
bswap
xchg
leave
das
imul
inc
scas
adc
inc
lret
arpl
mov
dec
cmp
sarb
cmc
jno
adc
icebp
add
dec
and
rcrl
lods
or
jle
cltd
mov
pop
movsb
pop
cmp
mov
dec
test
imul
mov
mov
lods
shll
pusha
iret
adc
mov
das
dec
xlat
lds
mov
pop
scas
cmpb
sbb
cwtl
dec
dec
enter
sub
xchg
push
pop
fdivs
cltd
rolb
xchg
in
std
pop
imul
pop
aam
sahf
and
mov
add
sti
jns,pt
loopne
cmp
jo
add
cmpsl
adc
sarb
mov
into
mov
xor
and
xchg
or
push
out
sub
pop
lds
lock
stos
pushf
aam
and
mov
xchg
xor
push
adc
sbb
or
insl
adc
xchg
movsb
inc
lea
jns
into
jne
mov
xchg
scas
stos
insl
adc
popf
cmp
lea
mov
cmpsb
call
jp
push
push
and
adc
enter
cmp
in
fnsave
mov
loop
xor
mov
fwait
bound
lcall
mov
arpl
and
push
loop
in
mov
enterw
hlt
ret
sub
and
mov
jbe
xchg
xlat
cmp
jnp
cmp
and
mov
out
inc
push
mov
jbe
mov
scas
adc
enter
cmp
inc
inc
pop
or
in
cmp
jp
pop
cld
sbb
dec
cmp
mov
dec
xlat
test
outsb
aas
mov
fistps
pusha
xchg
xchg
movsb
and
or
mov
add
je
fs
nop
pop
aam
add
mov
outsb
jno
sbb
pop
mov
lret
lods
mov
bnd
cmc
lea
push
mov
and
lret
and
repz
xor
fistps
adc
and
ret
or
inc
ja
cmpb
xchg
out
mov
jp
mov
mov
xor
and
pop
sub
fldt
iret
add
mov
push
and
jns
into
rcl
dec
xor
xchg
mov
je
std
lea
push
lret
xchg
inc
mov
es
pusha
add
lds
loopne
in
fistl
test
fscale
vunpcklps
xor
fcomps
out
and
stos
paddusb
lret
out
loope
and
std
loopne
rcll
jg
jge
lahf
sti
xchg
adc
test
ljmp
xchg
xor
jnp,pt
mov
imul
pop
jge
and
fnstcw
int3
or
sub
stc
int3
pop
dec
daa
test
inc
dec
scas
ret
test
pop
xor
jbe
out
mov
or
sbb
adc
pop
shrb
xor
int
or
cmp
js
mov
loope
pop
dec
bound
dec
cld
fnstsw
and
jge
fcompl
inc
and
cli
scas
push
imul
pop
or
and
scas
and
add
int3
dec
or
mov
jae
push
add
pop
xchg
mov
leave
and
jb
cmpsl
mov
clc
push
xlat
and
ss
push
mov
ret
out
into
mov
cwtl
xor
pop
dec
jo
loopne
in
mov
inc
out
rep
fs
cmpsb
dec
stc
jl
int
cs
mov
rolb
cmpb
out
out
lds
sti
mov
jae
inc
xor
cmpsb
repz
fs
dec
push
enter
std
stc
push
arpl
xor
xor
jo
lds
mov
push
popf
pop
push
lret
and
enter
stc
ss
xor
fwait
cltd
adc
mov
push
decl
add
add
fs
push
xorl
in
pop
jge
push
repnz
jg
nop
pop
push
jno
imul
fwait
cmp
rcrl
inc
dec
stc
sub
mov
and
jns
insl
mov
mov
out
or
lret
and
xor
sarb
cmpsb
jge
leave
flds
fildll
test
cltd
leave
das
or
rcl
rcl
fwait
imul
int
js
mov
mov
fmuls
loope
jg
outsb
cmp
fwait
loop
xor
adc
stos
addr16
dec
rcrl
xchg
or
adc
push
cli
and
ficomps
jmp
js
push
inc
or
imul
loopne
jns
sub
pop
cs
sbb
xchg
aad
rcr
int
push
arpl
jbe
xchg
mov
cmpsl
xchg
aas
jb
inc
push
sub
adc
bound
or
fsubp
mov
pop
pop
fsubrs
sub
sbb
leave
or
jg
sti
cmp
mov
ja
movsb
pop
test
sbb
cs
aas
mov
add
inc
das
out
int3
or
mov
cmp
jp
mov
lret
push
ja
jno
add
xchg
push
pop
jle
jno
push
aad
lahf
cmp
shrb
addl
mov
lods
xchg
cli
add
jecxz
or
or
and
mov
inc
je
rcrl
xchg
mov
or
ja
inc
out
add
adc
scas
inc
pusha
mov
pop
lahf
outsb
inc
addl
popf
fs
add
fmuls
call
adc
in
and
adc
insl
push
xorps
cmp
or
push
cli
movsl
xor
sub
ds
fdivrs
push
cltd
outsl
or
sub
test
das
testb
mov
mov
mov
in
mov
push
inc
pop
imul
mov
cli
aas
adc
inc
mov
fiadds
xor
adc
popa
dec
aad
dec
or
add
orb
aaa
inc
insl
xchg
int3
lods
std
jge
adc
xchg
addr16
enter
mov
adcl
ljmp
sub
xchg
cmp
in
push
adc
jae
fmul
addb
mov
add
xor
or
cmp
stos
add
xor
add
incb
daa
xchg
mov
sbb
clc
pop
pushf
out
pop
addb
xchg
xchg
fimuls
mov
lods
adc
push
cli
jp
push
fmull
sbb
loop
shrb
out
loopne
mov
stc
das
jl
mov
arpl
xchg
and
inc
loopne
and
imul
lcall
std
cmpsb
sub
add
xor
sub
inc
ja
sub
leave
dec
movsl
and
xor
jns
dec
fwait
mov
cmpsb
mov
mov
xchg
xchg
push
fidivrl
inc
xor
dec
cmp
xor
sub
rcrl
push
lods
cld
adc
or
jge
into
jle
add
mov
inc
push
mov
stc
cmp
int3
lock
in
clc
and
roll
xor
pop
out
shrb
push
into
or
sbb
jbe
mov
ljmp
jecxz
ror
subb
sar
dec
lret
xor
icebp
xchg
inc
push
sbb
push
adc
mov
popa
jb
insl
push
fistpll
pop
outsb
jg
pop
repnz
inc
push
inc
mov
cmp
mov
and
insl
jnp
in
movsb
fisubrl
mov
adc
in
in
aad
push
cmp
shll
je
xor
fisttpll
jb
or
mov
push
inc
xchg
testl
bound
mov
cmp
imul
push
and
imul
jne
aam
and
fcomps
enter
jb
movsl
vsqrtsd
das
nop
dec
xor
or
call
loopne
pushf
push
or
jge
add
imul
gs
mov
test
mov
imul
pushf
xchg
ds
jmp
pop
cmp
and
adc
lahf
arpl
sub
movsl
iret
xchg
fisttpll
dec
or
insl
movsl
jg
add
aaa
cld
lret
and
scas
sbb
push
std
lcall
jae
or
xchg
orb
bound
dec
push
cmp
call
add
shll
pop
sbb
fsubl
xor
sbb
mov
cwtl
add
cmp
out
pop
mov
into
pop
iret
jmp
inc
jbe
inc
loop
mov
ret
sub
add
cltd
jle
int
out
scas
mov
daa
and
sub
add
inc
mov
aas
repz
outsb
test
adc
push
aad
add
fcoml
add
movsb
lods
sub
xchg
pop
and
mov
xor
mov
mov
lret
push
cmp
mov
enter
cmp
adc
cmp
inc
cmp
dec
fildll
jb
dec
cmp
shll
jno
shlb
in
fwait
lcall
cmp
icebp
cmpxchg
xchg
fistpll
test
pop
and
jmp
xor
fnstsw
clc
rcrl
aas
mov
addr16
and
aad
sbb
mov
dec
dec
or
add
dec
mov
inc
xchg
and
adc
or
popl
out
enter
lret
mov
push
sub
add
pop
enter
mov
enter
lcall
mov
rolb
rol
jl
jno
lahf
cmp
inc
int3
fsubl
and
adc
xchg
ss
cmp
jno
lcall
mov
stos
loopne
in
aaa
loope
xchg
jnp
ret
push
test
add
js
mov
cmovae
xor
fldcw
sbb
loop
js
cli
lahf
sub
mov
stc
push
mov
ss
pop
test
es
pop
mov
aam
sbb
call
xor
sub
adc
cmpsl
sarb
cli
loop
dec
into
cld
mov
pop
lea
pcmpeqb
mov
mov
add
nop
jge
pop
adc
jp
ss
push
in
in
es
xchg
xchg
mov
and
xchg
fistpl
in
and
pop
inc
decb
cmp
repz
sahf
test
sbb
out
stos
or
enter
insl
jg
jecxz
adc
fsubr
pop
cs
and
aam
dec
addr16
sahf
and
or
insl
sbb
leave
subb
nop
popa
rcr
popf
ja
dec
int
stos
fnsave
mov
jmp
sub
cmp
iret
xchg
inc
hlt
ljmp
add
cmc
pop
sbb
sbb
jp
leave
loop
mov
sbb
push
and
js
out
mov
movsl
inc
or
jl
push
aas
inc
mov
adc
mov
daa
mov
cli
std
outsl
dec
mov
popa
add
testl
mov
jg
mov
fidivl
scas
pop
sbb
call
adc
rolb
push
enter
loope
sub
push
jae
and
ds
out
and
pop
mov
lahf
cmp
outsl
lods
mov
push
test
push
pop
icebp
inc
sbbb
pop
sub
ficoml
and
mov
mov
mov
inc
sbb
xor
dec
movsl
loopne
loopne
push
xor
ljmp
std
arpl
loopne
rcrb
xchg
nop
mov
or
jmp
sbb
cld
cmp
shll
iret
test
sbb
lds
popa
je
cmc
xchg
xchg
test
or
pop
cvtdq2ps
sbb
lahf
mov
add
fists
inc
mov
push
xorb
xchg
add
or
inc
inc
mov
lods
out
out
sbb
gs
xlat
pop
lods
cmpsl
je
mov
push
pop
les
cmp
movsl
add
test
aaa
mov
inc
sbbl
sub
mov
cmp
outsb
sbb
dec
push
or
sahf
arpl
dec
or
lds
scas
aad
push
mov
shrb
mov
test
jbe
and
ret
shll
aaa
adc
shlb
mov
xor
lods
push
imul
adc
fwait
data16
mov
ret
cvtps2pd
mov
cmp
aad
xor
push
fnsave
dec
in
mov
cmp
mov
and
popf
sti
adc
movsl
dec
push
and
xor
std
rol
in
int3
push
inc
cwtl
idivb
std
sub
add
test
xor
rep
aas
cld
fsubr
push
and
dec
scas
mov
stc
push
icebp
outsl
aad
lods
inc
push
stc
mov
cmp
divb
push
and
cmp
mov
addr16
adc
cmc
iret
es
into
mov
sub
out
dec
cmp
std
add
adc
popa
mov
nop
scas
movsb
pop
xchg
adc
jge
in
pop
xor
pushf
cmp
in
pusha
push
dec
movsl
stos
gs
lods
fstpt
xchg
cmp
gs
or
mov
je
cmp
out
inc
jnp
fwait
aaa
andb
mov
ret
pop
xchg
loope
sub
cmp
jg
fstpt
clc
push
pushf
and
jbe
popa
lds
xor
jp
ds
fiaddl
outsl
and
enter
push
les
inc
push
xor
sbbl
xchg
inc
push
jnp
jp
lds
stos
out
iretw
jno
loop
shll
ss
sub
imul
and
sub
insl
mov
pushf
jecxz
push
mov
dec
lret
pop
int
jle
xor
mov
adc
js
popf
xor
mov
lcall
fcompl
push
ss
dec
lock
jl
jl
inc
adc
mov
dec
and
movsb
xchg
sub
outsl
mov
push
data16
pop
cmp
test
ja
cmp
add
inc
ret
sbb
add
add
iret
or
sbb
pushf
dec
or
jnp
dec
sarl
leave
sub
sahf
sub
daa
js
lds
and
pop
mov
pushf
push
jnp
inc
push
fsubrl
push
pop
stc
push
or
enter
sbb
or
icebp
mov
inc
lret
jae
es
xor
mov
pop
pusha
mov
sbb
dec
or
sti
flds
mov
add
add
and
push
jno
pop
fdivs
imul
in
loop
sahf
sti
and
fimull
push
iret
movsl
inc
xchg
jge
sub
jmp
loopne
push
adc
lock
stos
in
dec
or
fpatan
sbb
in
xor
pop
mov
add
lock
mov
into
movsb
cwtl
mov
movsb
jo
and
cwtl
bound
test
inc
movsb
xor
xchg
xorl
iret
sub
jecxz
lock
subb
add
xchg
pop
scas
shlb
ljmp
hlt
ficompl
or
pop
ds
dec
pop
int
mov
xor
adc
out
pop
sbb
add
mov
pop
xchg
jbe
cs
lret
xchg
cmp
addr16
mov
lds
sub
jno
jae
or
push
jnp
lods
enter
dec
and
jno
divl
inc
jecxz
dec
jo
lea
fistpl
call
insb
int3
jns
push
adc
fstpl
test
sbb
test
imul
sbb
popa
push
dec
shlb
mov
lea
and
jmp
lret
clc
insb
mov
loop
jmp
call
mov
aad
js
mov
cltd
iret
pop
jl
fistpll
mov
sbb
nop
testb
loop
scas
in
in
xor
pop
enter
scas
jl
sub
and
push
lods
sarb
aad
adc
pop
in
test
insl
cmp
imul
or
dec
adc
lods
add
das
sub
imul
pop
sahf
dec
scas
push
leave
xchg
pop
or
cld
rclb
adc
and
scas
bound
mov
mov
daa
mov
pushf
aaa
cmpsl
push
adc
outsl
push
test
stos
sbb
push
cld
and
or
popf
movsb
sub
mov
jp
pop
sbb
aas
mov
adc
adc
aad
stos
addr16
xor
sbb
mov
les
dec
jge
fsubrs
xor
gs
test
push
addr16
aam
add
xchg
sbb
adc
insb
mov
adc
les
dec
jecxz
mov
cli
je
push
cmp
pop
lds
pop
xchg
mov
in
mov
pop
dec
repnz
rolb
adc
fs
out
adc
into
insl
cmp
jne
lahf
add
sbb
dec
decl
aas
jbe
jnp
icebp
insb
mov
dec
fimuls
imul
std
mov
add
jbe
sbb
add
add
inc
mov
lahf
fldl
test
lods
in
loopne
aas
mov
add
sbb
push
cs
fidivrs
aam
outsl
mov
xchg
xor
add
call
and
imul
xchg
add
xchg
jns
stos
sub
jae
scas
push
jmp
and
push
ja
jo
es
std
fsubrl
push
push
push
imul
hlt
imul
xorl
mov
sub
or
push
mov
int3
add
sarb
repz
and
test
in
and
cs
insb
pushl
leave
adc
test
adc
inc
std
dec
jnp
hlt
mov
cmp
cld
mov
repnz
or
adc
test
icebp
outsb
push
nop
push
or
push
dec
inc
aad
xor
imul
ja
pop
ss
inc
ja
stos
sub
mov
cmp
pusha
cmp
push
and
outsb
lret
jmp
test
xchg
lds
jl
or
iret
add
cmp
repz
out
mov
dec
mov
lret
add
lcall
and
ret
mov
pop
sahf
sbb
inc
sub
push
xchg
in
jno
ret
mov
add
mov
xchg
sbb
pusha
fcomip
xor
addr16
stc
pop
mov
and
sbb
shll
pop
int
cmpsb
sbb
xlat
imul
shrb
and
mov
ficompl
cmp
mov
ds
aas
cmp
push
pop
aas
sbb
pop
lea
add
adc
out
push
test
in
cld
sbb
bound
cmp
mov
jge
adc
pusha
cs
mov
fwait
mov
lock
inc
mov
rorl
lds
insl
insl
shl
cmc
jne
dec
scas
popf
inc
clc
ficoml
cwtl
add
pop
jo
xchg
mov
mov
add
out
div
lcall
dec
inc
sbb
add
cmp
pusha
push
xor
push
mov
sub
cmp
cmc
subb
pusha
rolb
daa
and
js
jl
fbld
int3
sbb
inc
or
dec
sarl
ljmp
imul
mov
jle
inc
pop
adc
mov
sbb
push
rcrl
push
add
dec
call
lahf
xadd
rclb
jg
das
ret
cmp
cmc
notb
jbe
jg
mov
out
daa
call
outsl
push
cmp
in
lds
dec
jecxz
aam
fistl
ja
xchg
inc
add
jno
xchg
mov
add
sub
mov
mov
add
sti
jecxz
sub
shll
pop
add
adc
outsl
cmpsb
or
xchg
mov
clc
cmp
pop
fnstenv
pop
addr16
mov
xor
jl
rcrb
push
pop
scas
push
mov
dec
jbe
scas
insl
es
dec
in
dec
push
push
dec
mov
add
dec
sbb
enter
xchg
popf
mov
clc
pop
xchg
xchg
dec
outsb
in
sub
xchg
mov
add
dec
sbb
daa
and
out
loopne
dec
inc
sbb
ret
lods
shr
inc
cmpsl
jmp
and
push
ret
outsb
data16
ficoml
loope
les
pop
mov
jbe
test
xor
sbb
push
and
sbb
hlt
mov
xor
rcrb
stc
jle
ret
inc
sahf
xchg
dec
jne
and
inc
cmp
adc
inc
lcall
mov
adc
pop
sbb
push
xchg
movsb
mov
imul
test
leave
lahf
dec
out
dec
sbb
outsl
fwait
outsl
sbb
and
lret
dec
mov
or
into
hlt
das
mov
xchg
mov
mov
mov
addb
shrb
pop
xor
and
dec
addr16
fwait
rcrb
sub
int3
lahf
pop
pop
mov
mulb
xor
into
push
sub
add
push
mov
mov
mov
mov
ret
adc
dec
ffree
jb
cld
lock
inc
add
stos
jno
and
fsubrs
ja
mov
inc
sbb
mov
es
lods
xchg
xchg
jge
push
fmuls
push
sbb
rcll
in
les
pslld
lea
xor
jge
jmp
push
outsb
push
lds
add
sub
imull
mov
sarl
mov
push
cmc
fwait
dec
int
clc
and
adc
mov
ljmp
notb
xor
mov
xchg
jns
jp
mov
cltd
in
jp
negl
xchg
and
popa
and
inc
das
imul
mov
mov
xlat
loope
sbb
shrb
pusha
cmp
cmp
sahf
loop
insb
mov
adc
dec
ret
sahf
pushf
shlb
repnz
jb
dec
shll
mov
fisubrl
xorl
push
imulb
cmpsb
rcr
dec
aas
mov
repnz
popa
fst
inc
cmp
and
mov
xchg
cmp
ljmp
and
jb
fiadds
shlb
hlt
cmp
sbb
lock
inc
jge
jl
insb
imul
xchg
xchg
xor
mov
ret
push
push
shlb
rcr
jbe
stc
xor
cs
xor
iret
pop
pop
sub
inc
repz
iret
sbbl
lahf
sub
sub
jp
pop
out
pop
fs
mov
in
mov
jge
test
xor
ss
adc
inc
aam
adc
mov
mov
xchg
add
mov
xchg
popf
pop
pop
or
adc
mov
jns
popa
test
fsubs
aad
imul
data16
test
pushf
leave
inc
das
ret
js
scas
jbe
mov
pop
bnd
push
shr
xor
cmp
and
aam
mov
xchg
adc
jno
add
fyl2xp1
fisttpl
nopl
test
push
mov
sub
mov
pop
insl
cwtl
mov
lcall
nop/reserved
fcmovne
dec
adc
ljmp
sbb
shll
add
mov
pop
add
fld
lock
in
adc
push
pop
mov
fsubr
xchg
mov
mov
adc
sbb
das
or
pop
lea
mov
in
lcall
sbb
es
pushf
cmpsb
outsb
leave
outsb
xchg
mov
aas
pop
aam
xchg
mov
roll
sbb
push
ds
in
icebp
lea
mov
pop
daa
in
xor
jp
icebp
push
stos
test
fs
mov
jns
lahf
jae
scas
push
pushf
mov
stc
lds
cmp
pop
negl
jecxz
ljmp
and
push
push
mull
pop
enter
adc
movsb
or
pushf
movsb
jnp
jnp
xor
inc
mov
repnz
pop
shrl
pop
out
mov
cli
shll
mov
and
lcall
into
pop
sbb
cli
mov
pop
mov
mov
xor
out
mov
fcmovbe
sti
dec
cmp
or
dec
push
sarb
pushf
es
xlat
outsl
aad
push
add
mov
int
jno
add
and
popa
mov
push
fwait
jbe
aam
and
gs
or
hlt
xchg
push
sbb
adc
sbb
stos
jl
out
sub
in
xor
dec
dec
adc
addr16
pop
cwtl
popa
clc
and
mov
pusha
add
imul
add
add
push
jl
movsl
or
es
js
lods
and
rorb
movsb
cmp
insl
in
jnp
mov
xchg
and
or
aaa
insl
lods
pop
xor
imul
cmp
lret
pushf
clc
and
cmp
sahf
xchg
insl
cmc
xor
insl
out
lods
aas
xor
and
lock
cmp
addb
aad
out
test
mov
stos
cmp
push
and
sbb
inc
les
mov
jge
jns
xchg
outsb
xchg
mov
mov
pushf
inc
pop
cmp
add
inc
xor
jl
sti
cmp
fcomps
mov
add
pushf
aaa
mov
jle
inc
xchg
mov
movsl
cmp
lret
ja
xchg
cmp
fiadds
mov
pop
lret
jae
push
and
cmc
jmp
popf
adc
iret
mov
mov
pop
jmp
cmp
dec
pop
enter
or
push
cmpsb
loope
addr16
fistpl
pop
jns
adc
lcall
pop
mov
xor
mov
mov
shl
addr16
iret
cmpsl
or
rolb
dec
je
fdivs
sub
dec
loope
bound
add
test
xchg
cmpsb
popf
fadds
mov
enter
ret
sbb
scas
cwtl
push
and
push
push
hlt
loopne
mov
cs
enter
lea
movsb
dec
adc
mov
mov
hlt
data16
inc
adc
and
adc
in
sbb
out
imul
cwtl
xor
cmp
pop
aaa
xor
loope
cmc
dec
aas
xlat
pop
rcrl
enter
adc
out
sub
pop
cltd
push
sbb
ss
cmp
mov
movsb
popa
ja
or
pop
or
cli
inc
cli
ret
cmp
aam
lret
add
push
inc
shrb
adc
pop
xlat
mov
icebp
jo
imul
dec
shrl
outsl
inc
xchg
mov
ja
xchg
sub
mov
mov
int
scas
inc
mov
inc
mov
and
shll
and
bound
test
dec
mov
fimuls
push
xchg
outsb
mov
test
jo
ror
sbb
fidivs
push
jno
les
lret
jbe
das
les
jg
mov
cmpsl
adc
roll
pop
adc
push
mov
loope
xlat
sub
mov
push
sbb
pop
mov
shlb
cli
ret
cmpsl
adc
cld
mov
leave
mov
dec
adc
out
push
cmpsl
dec
push
leave
or
das
adc
shrl
mov
ficoml
out
push
cmp
in
push
arpl
sbb
xchg
test
jb
cli
jb
cmc
divl
and
xchg
fdivs
shrb
fs
sahf
add
addr16
sbb
orb
daa
pop
push
pop
xchg
dec
cltd
push
and
movsl
sbb
fdivs
cmp
inc
push
dec
in
xchg
ret
cs
imul
push
pop
jle
xchg
adc
ror
cld
dec
add
testb
xchg
and
jae
xor
push
stos
add
lods
outsl
arpl
cld
es
push
sub
adc
dec
aas
sar
lods
sbb
stc
fcmovbe
clc
fwait
in
sbb
lret
xchg
repz
sub
mov
push
mov
cld
loope
js
enter
pushf
dec
push
lcall
and
or
or
pop
inc
loopne
out
fiadds
mov
test
inc
sbb
daa
pop
push
jb
dec
test
outsl
jmp
adc
pushf
out
jecxz
inc
out
insl
cmp
xchg
into
push
pop
ss
cmpsl
in
sub
cmp
mov
les
lret
sub
stos
jo
je
and
adc
ret
adc
int3
add
sbb
push
cltd
pop
fstpt
das
pop
cmp
xlat
inc
pop
cs
sbb
orl
jno
jne
add
sbb
iret
and
pop
or
lods
inc
mov
push
inc
xchg
xorb
pop
js
and
scas
std
mov
jge
cmpsl
cmp
ja
rol
jmp
aas
inc
ret
jg
shlb
orb
ja
cmc
popf
clc
fsub
sub
jg
cmc
pop
ds
mov
xorl
pop
push
push
cld
movsb
xchg
repnz
add
xchg
mov
in
pop
adc
mov
add
push
jo
or
sbbb
mov
jb
xchg
push
cmp
js
mov
mov
jecxz
xor
das
mov
fbstp
jle
jnp
aas
xchg
adcl
jecxz
push
adc
stos
dec
sub
ret
cld
loopne
mov
cltd
cmp
or
xlat
xor
or
pop
mov
dec
lds
popf
and
outsb
mov
xor
add
or
push
mov
pop
push
ret
loopne
arpl
inc
adc
iret
pop
int3
pop
insb
mov
adc
dec
mov
cmc
cmp
int3
roll
out
xor
push
outsl
fistps
mov
call
insl
sub
fistpll
adc
mov
sbb
push
adc
inc
mov
mov
jp
in
sbb
or
cmc
inc
dec
stos
sbb
mov
cmp
shlb
dec
xor
testb
cmp
mov
mov
ficomps
rorl
out
or
xchg
dec
cmpsl
dec
test
inc
pushf
lea
leave
clc
adc
sti
adc
mov
fcmovbe
cwtl
adc
add
xchg
mov
iret
out
inc
mov
scas
pop
adc
fs
outsl
jmp
mov
shl
std
xor
push
or
inc
gs
shlb
nop
inc
jg
sub
test
push
pop
sbb
dec
or
add
add
inc
cmp
das
aas
mov
mov
icebp
out
in
mov
js
adc
mov
outsb
xchg
adc
xlat
inc
cmc
popa
cmp
mov
push
and
hlt
popf
dec
xchg
bound
xchg
test
mov
pop
mov
or
aad
xchg
jno
cmp
lods
nop
mov
ret
aas
andb
and
push
add
inc
xor
cmp
sbbl
dec
imul
sbb
push
sbb
cmpsb
or
int3
shll
jl
mov
popf
xchg
cs
shrl
ja
push
int
xchg
iret
push
test
sbb
movsl
lds
out
mov
and
ja
mov
sbb
imul
push
add
push
loope
mov
cli
out
je
pop
orb
ja
sbb
stos
jb
dec
cmp
inc
fisttps
adc
xchg
sbb
ja
sub
xor
adcb
test
or
pop
mov
in
pop
fwait
aam
loop
ja
sahf
jnp
test
in
loopne
repz
ret
xor
mov
push
cmp
nop
sti
rcll
mov
sbb
dec
add
cmp
sub
dec
xchg
imul
or
aaa
push
int3
lret
push
cmp
dec
in
aam
adc
insl
pop
cmp
and
push
fnclex
pop
adc
jb
cli
test
and
cwtl
mov
aad
cld
fdivrs
sub
pusha
dec
decl
xor
sub
rcrl
dec
sbb
gs
push
sub
dec
and
sbb
inc
shl
arpl
mov
cmp
fisubl
jo
push
cmp
pop
addr16
ds
cmp
lret
lds
pop
movsb
dec
orl
pop
js
xchg
sbbl
push
ret
cmp
fwait
xchg
sub
outsl
pusha
pop
pusha
and
xchg
mov
test
arpl
movl
ds
and
lret
lret
cli
mov
dec
dec
cmc
daa
jno
xchg
mov
scas
sub
aas
sub
mov
xor
into
dec
out
cmp
jo
insb
mov
pop
push
adc
push
xor
lea
aaa
dec
fwait
cmp
outsl
push
mov
jo
jno
dec
imul
push
out
insb
lock
outsb
bound
mov
pop
inc
int3
push
mov
stos
mov
and
test
repz
inc
mov
insb
push
mov
inc
pop
adc
mov
scas
repz
into
repnz
loope
lret
aas
jle
mov
xor
jmp
cli
pop
mov
shlb
fxch
mov
jg
mov
mov
pusha
xchg
scas
sub
lret
or
notl
fnstcw
adc
mov
xor
mov
mov
dec
jae
pop
and
out
xchg
ret
sub
fisttps
sahf
pop
push
lcall
sbb
movb
mov
mov
xor
sti
popw
sbb
inc
repz
pop
outsl
mov
add
xchg
xchg
xor
shll
rcrb
cmpsl
dec
sbb
inc
loopne
sub
and
pusha
out
movl
cmp
movsb
mov
mov
push
js
inc
ljmp
and
rolb
dec
cltd
mov
add
mov
sub
shrl
cwtl
push
xchg
sarl
fs
mov
insl
pop
mov
dec
cmpl
ljmp
mov
fildll
jno
data16
inc
mov
lock
call
cmp
pushf
push
sbb
movsl
jecxz
fadd
xor
in
pusha
movb
mov
sbb
cmp
pop
push
ficoml
addb
cmpsb
lret
dec
adc
mov
addb
mov
inc
icebp
lret
outsb
mov
roll
xchg
sti
xchg
movsl
mov
loopne
dec
loop
pop
push
into
sbb
outsl
sahf
repz
clc
push
lahf
add
imul
sbb
mov
jle
movb
jb
mov
gs
jg
popa
ret
cmp
lahf
mov
pop
pop
cmp
repz
dec
push
sub
cwtl
cvtps2pd
jle
loopne
std
sahf
popa
mov
cmp
and
out
ret
add
lea
data16
movb
push
test
pop
pop
js
adc
push
sbb
add
dec
aaa
mov
in
ja
inc
outsl
xchg
fsubl
enter
jbe
dec
pushf
in
mov
fsubr
sbbl
xchg
addl
pop
sbb
aas
movsl
loope
add
mov
fstl
mov
in
push
js
adc
cmp
arpl
and
sbb
lds
push
inc
xor
sbb
mov
out
xchg
inc
pop
test
jno
loope
in
and
jnp
or
iret
mov
pop
or
lods
shr
lea
lock
stos
mov
clc
je
cmpsb
push
hlt
pushf
in
xor
daa
or
mov
stos
fwait
xchg
sbb
or
hlt
popa
cmp
xor
add
jae
pop
cltd
lods
cmp
push
add
push
out
inc
cmpsb
in
xchg
sub
mov
rcl
mov
je,pt
push
das
insl
xchg
div
jmp
stos
fdivrl
push
and
outsl
daa
sub
jae
jbe
lcall
sub
lret
pop
clc
in
xchg
jmp
je
stos
dec
inc
ja
ret
adc
adc
push
inc
pop
es
push
das
stos
inc
daa
fimuls
pusha
push
push
inc
repz
pop
cld
aam
cmpsl
pop
decl
scas
jae
ret
or
sarb
leave
loopne
and
sub
cmp
xor
fldt
mov
leave
pop
outsb
adc
xchg
xchg
push
ds
xchg
iret
jmp
inc
cmp
movsb
xlat
mov
repnz
lock
std
outsb
pop
cmp
push
adc
inc
rclb
mov
sti
cmpsb
or
bound
sbb
mov
aad
cwtl
shrb
mov
test
je
or
mov
not
mov
test
jg,pn
into
movsb
ficoml
test
adc
pop
sub
push
jle
lods
cmp
in
pop
test
test
arpl
sbb
insl
out
int3
lea
mov
clc
inc
inc
lahf
xor
sbb
mov
jge
aaa
aam
gs
cld
out
pop
ss
les
jmp
mov
repz
push
sti
mov
std
nop
push
xchg
dec
pop
in
aad
xor
jbe
jle
and
mov
jl
popa
test
leave
sbb
or
mov
loop
xor
shlb
mov
mov
dec
in
pop
sub
sub
pop
cmp
out
fbstp
shll
cs
mov
fcomps
inc
js
and
repnz
jl
mov
test
mov
enter
in
jae
fs
dec
xchg
loopne
dec
fidivrl
bound
nop
fcoml
mov
lods
test
dec
push
jae
movsl
subl
call
ficoml
inc
test
and
fsubrs
adc
loope
jge
mov
jle
icebp
mov
add
cmpsl
sbbb
out
adcb
nop
mov
sbb
jb
and
jbe
sub
push
sarb
mov
dec
imul
or
push
lcall
dec
popf
out
push
jge
mov
out
cwtl
test
daa
fldcw
xor
xchg
insl
fisttpll
mov
adcb
xchg
lods
pusha
dec
addr16
aad
push
mov
lcall
xor
or
movsl
pop
sub
mov
or
pop
cmp
icebp
repz
pop
popa
stc
or
data16
cmp
ror
mov
or
xchg
xor
jp
js
xor
pmulhuw
mov
sti
mov
popl
cmp
mov
mov
sbb
ret
add
sti
out
mov
and
and
dec
and
rcrb
cmp
push
mov
or
and
sub
mov
into
negl
aam
not
cwtl
cmp
xchg
xor
outsl
cwtl
ljmp
adc
adc
sbb
or
push
out
or
ffree
popa
leave
pushf
sbb
add
jo
mov
xorb
mov
adc
cmp
xor
ss
pop
mov
mov
cmpsl
cmpsb
lahf
xorb
inc
fistpll
ret
inc
mov
add
mov
lahf
pop
xchg
rcrb
cmp
sub
cmpsb
jbe
mov
inc
aas
mov
rcrl
xchg
scas
cmpsl
sbb
div
mov
inc
push
imul
pop
xor
mov
bound
push
mov
cmp
pop
pop
mov
popa
cmp
imul
mov
jmp
les
add
cld
pop
and
cmp
dec
cmc
aad
and
pop
scas
push
fs
fadd
and
inc
push
hlt
mov
jmp
push
dec
or
adc
jg
pop
pusha
and
scas
and
test
xchg
sti
aaa
cmp
inc
and
or
mov
mov
mov
or
sbb
adc
int3
xchg
add
mov
dec
lods
cmp
in
lahf
lods
sub
pusha
lahf
test
xchg
psubd
arpl
loope
mov
and
lcall
cltd
filds
pop
and
xor
push
add
stos
mov
mov
push
imul
inc
adc
mov
aaa
cmpsb
lds
or
or
in
push
sbb
stos
aad
arpl
rorl
test
push
ret
xchg
jno
xchg
into
mov
xchg
or
mov
icebp
mov
into
xor
push
mov
adc
cmp
loope
out
cmpb
in
jne
daa
mov
pop
add
into
lcall
popa
jo
mov
stc
add
add
sub
or
int
xchg
ljmp
sbb
or
xlat
scas
and
test
stos
mov
and
dec
xchg
inc
stos
or
test
cmc
jb
sbb
jecxz
mov
outsb
xchg
sbb
xchg
mov
pop
in
jnp
scas
mov
push
push
data16
xchg
fbstp
mov
fsubr
mov
adc
add
lds
cs
leave
jmp
mov
sub
pop
push
fsubrs
jl
shrl
cs
test
aam
ljmp
outsb
or
das
adc
dec
cmpsb
and
mov
cmpsb
into
fiadds
dec
int3
mov
sahf
push
mov
repnz
jge
fcoml
jecxz
fidivrl
cmp
push
in
mov
jns
adc
outsl
xor
ret
xlat
pop
nop
mov
lret
and
xor
xor
dec
push
mov
adcl
push
sbb
push
es
testl
sbb
or
push
je
mov
es
jecxz
int3
cmpsl
scas
inc
sub
jg
xchg
add
xchg
call
repz
pop
scas
and
pusha
mov
outsb
int3
push
js
add
or
xchg
aam
sti
dec
inc
sti
cmp
stos
adc
mov
and
and
je
rcll
add
xor
test
pop
sbb
cmp
stc
sub
push
sub
mov
xchg
jns
adcb
filds
dec
test
pop
addl
lret
aad
mov
cwtl
shll
int
sub
dec
sahf
adc
jo
arpl
sub
or
in
outsb
mov
stc
cmpsl
add
sahf
sbbl
add
nop
lods
add
xchg
mov
loope
out
sub
and
ret
push
cltd
sub
adc
cmp
call
mov
cmc
mov
xchg
push
mov
dec
pop
movsl
test
icebp
hlt
adc
aam
ret
mov
mov
mov
sbb
rclb
jbe
mov
not
shlb
xor
push
outsb
testl
push
sbb
sub
jmp
adc
cmp
pusha
dec
insl
test
mov
stc
lea
pop
mov
scas
pop
out
in
call
jp
fdivs
push
test
aam
addb
int
pop
lea
sub
addr16
loop
outsl
scas
loopne
jecxz
inc
sbb
cmp
outsl
jg
sbb
leave
test
sbb
sub
mov
jle
popf
xor
dec
scas
pop
std
xchg
add
mov
mov
pop
shrb
add
inc
push
fidivl
aas
mov
gs
addr16
test
data16
jg
mov
mov
and
call
mov
data16
adc
mov
popa
stos
out
in
sti
sbb
stos
mov
hlt
push
and
hlt
dec
dec
imul
fimull
loope
push
fsubl
xchg
pusha
sarl
fs
add
and
aam
sbb
addr16
xchg
outsl
cmp
inc
negb
or
sub
jecxz
cmc
or
imul
into
pop
jae
lahf
cmc
ret
pop
pusha
pop
decl
bound
call
jo
mov
popf
mov
mov
mov
sbb
add
shrl
adc
jle
mov
insb
aas
mov
mov
cmp
mov
call
sub
jo
push
cli
icebp
sarb
stos
mov
push
lods
xor
lds
sbb
sub
mov
mov
mov
jb
lea
cltd
and
mov
daa
repz
pop
pop
xchg
or
inc
jno
push
pop
inc
andl
or
pop
das
adc
incl
les
xchg
call
mov
mov
pushf
push
add
mov
push
pop
mov
jno
adc
cmpsb
sahf
lcall
test
cmp
fmuls
dec
push
mov
push
in
or
pop
sbb
cltd
jge
jb
mov
loope
push
pop
pop
pop
push
push
xor
insb
dec
stc
jg
gs
fistpl
aas
aam
adcb
outsb
dec
xor
rcl
pop
mov
cmp
jle
xor
pop
out
test
cmp
mov
jae
or
dec
fidivl
pop
ficoms
adc
mov
test
das
push
lods
mov
and
inc
mov
movsl
fwait
cmpsb
dec
jmp
repnz
push
pop
dec
push
sub
sti
icebp
loopne
les
jp
fbstp
xlat
in
mov
pop
xchg
xor
cltd
repnz
xchg
loope
fmull
sub
lods
scas
mov
repz
push
clc
lods
gs
mov
add
dec
loopne
leave
add
and
jnp
outsb
sahf
xchg
testl
jnp
or
or
sbb
add
jmp
sub
gs
sbb
add
loope
sarl
mov
aad
out
xchg
xchg
fisttpl
adc
js
mov
sub
bound
pop
lds
jmp
iret
je
out
mov
pop
adc
or
cltd
sub
and
ret
lock
mulb
xchg
mov
inc
into
orps
sbb
pop
add
cld
sub
mov
push
cmp
jo
and
daa
fwait
jmp
dec
pop
call
pop
xor
fidivrs
adc
jmp
mov
cmc
sbb
lods
push
add
push
cmpsl
add
clc
jns
mov
cmpb
leave
add
sbb
sar
into
xchg
push
jle
sub
adc
out
inc
scas
into
push
cmp
fadds
add
xor
stc
pop
test
push
fcmovnu
mov
push
xor
lret
outsb
mov
pop
mov
fiaddl
mov
lcall
mov
sarl
jp
xchg
pusha
or
xchg
xchg
mov
and
insl
mov
adc
mov
dec
mov
iret
cld
arpl
add
pop
fcmovnu
adc
mov
movsl
xchg
push
jg
jle
sbb
mov
jg
mov
mov
ret
stos
jb
movsb
push
jp
pop
pop
cmp
cmpb
fs
xchg
inc
xorl
cmp
lcall
in
and
add
push
pusha
aad
lock
addr16
mov
pop
fstp
ret
jbe
dec
out
in
adc
int3
mov
and
adc
popa
add
aaa
cld
cmp
mov
sbb
ret
sbb
dec
dec
mov
arpl
pop
push
test
testb
cmpsb
push
jge
jmp
xchg
push
lds
mov
or
cmp
jge
popf
mov
jl
push
push
inc
mov
adc
repnz
ds
and
pop
pop
push
push
and
lods
imul
mov
sub
aas
loopne
xchg
sbb
out
mov
cmp
shll
mov
sub
or
icebp
filds
pop
out
aad
mov
cs
add
lea
xchg
repz
cmpsl
fwait
ds
lods
mov
adc
ficomps
xlat
jl
test
add
stc
cmpl
inc
aad
add
scas
pop
sarb
fdivrs
sbb
mov
xchg
mov
inc
addl
jae
mov
loopne
ds
cmp
jb
sbb
clc
popa
pop
pusha
pop
out
pushf
sbb
cwtl
sub
adc
rorl
sbb
jp
fisttpll
mov
cmp
in
adc
push
lahf
push
sahf
cmpb
mov
push
pushf
les
aad
and
adc
jno
repnz
push
push
test
lahf
mov
nop
adc
fmuls
add
inc
imul
sub
movsb
adc
icebp
pusha
lock
push
fldl
outsl
jno
xchg
in
insb
icebp
mov
add
or
xchg
inc
jle
xor
dec
roll
jo
cmp
ds
add
cmovae
outsb
cmp
xchg
out
lods
fwait
mov
or
xor
adc
outsb
pop
aas
push
add
out
mov
repnz
or
push
mov
sbb
cmc
std
imul
push
scas
sub
lahf
leave
add
push
jp
es
pop
or
test
jl
add
xor
mov
sbb
jne
push
or
cmpsl
lahf
es
jb
add
pop
push
cwtl
add
sbbb
sbb
dec
fldl
lahf
pop
cs
mov
popa
cmp
xorb
xchg
addl
hlt
mov
fisubl
mov
inc
sub
loope
push
cmp
push
mov
jmp
lods
stos
mov
clc
mov
insl
ret
or
out
xchg
sub
inc
push
rorb
xchg
call
mov
push
push
outsb
pop
dec
xor
cmp
in
jo
push
pop
or
fsubrs
rcrb
call
mov
aam
rcl
xor
rorl
lcall
mov
mov
cs
loop
movsl
xchg
xchg
lret
jno
dec
or
jmp
icebp
inc
jmp
xchg
in
call
arpl
add
mov
add
lock
out
add
lds
pop
inc
push
fsub
pushf
insb
cmp
inc
dec
jmp
mov
lods
cmpsb
xchg
imul
ds
or
fidivrl
daa
outsl
lods
and
out
mov
aaa
lret
pop
std
mov
mov
mov
pop
bound
or
xor
mov
mov
add
das
clc
xlat
loop
pop
ds
jbe
stc
adc
pop
jl
orl
lahf
ficompl
ret
movsl
mov
mov
sbb
fldenv
in
or
sbbl
mov
inc
xchg
sub
dec
mov
lcall
cmp
cmpsl
dec
mov
xchg
push
test
dec
sti
add
int
sbb
push
xchg
xor
mov
pop
sub
cmp
fdivp
and
adc
andl
daa
cs
jle
pop
test
mov
jno
ret
mov
mov
movb
subl
fwait
daa
lock
stc
pop
mov
add
push
loop
mov
mov
cmp
fdivr
xchg
sbb
cmp
outsb
sbb
loop
mov
mov
out
and
lds
xchg
sahf
pop
pushf
jge
cli
add
pop
js
dec
push
lret
into
jmp
sbbb
movsl
and
subb
inc
xchg
inc
std
dec
xor
aas
loop
insl
jmp
loope
dec
add
xchg
cmp
dec
ja
pop
jecxz
rcl
mov
push
pushf
orb
jg
pop
test
jg
xlat
and
mov
sbb
mov
ss
es
aam
push
lock
popa
lahf
movsb
sbb
jbe
in
lds
ss
mov
call
ljmp
xchg
cmp
pop
and
push
mov
rcr
es
pusha
cld
jno
xchg
add
pushf
je
add
std
push
inc
shlb
es
sahf
inc
adc
inc
lret
pop
and
jl
outsb
cltd
shll
insl
add
in
mov
cli
fptan
enter
sar
jle
jb
cld
cli
test
fldz
lret
jmp
lret
imul
fisubl
insl
fldl
mov
xchg
scas
in
dec
aaa
inc
push
sahf
push
sub
pop
xchg
fprem
ficompl
mov
adc
push
imul
xor
iret
mov
xorb
push
dec
mov
cli
adc
das
or
add
aas
scas
aad
xor
dec
adc
lahf
fwait
in
adc
ja
xchg
notl
mov
cmp
xchg
movsl
pop
frstor
fldt
xlat
and
jns
stos
adc
adc
out
xor
xchg
push
shrb
sbb
scas
icebp
out
mov
inc
jle
popf
adc
adc
div
sub
cmp
pop
mov
loopne
push
roll
jmp
into
fiadds
inc
mov
int3
pop
aaa
dec
test
shl
jo
insb
ret
popf
cmp
jp
xor
sbb
mov
leave
insl
test
mov
xchg
rcrl
jbe
cmp
movsl
negb
dec
adc
out
sbb
hlt
outsb
xchg
xor
jge
sbb
xchg
loope
jnp
pushf
aam
repz
xchg
dec
jmp
addr16
mov
paddsb
cmpsl
outsb
push
ror
fs
mov
mov
and
jo
cmp
jae
jo
test
push
lods
mov
dec
jmp
adc
xchg
imul
pushf
and
fstps
std
lods
inc
jno
sub
movsb
xchg
push
les
xchg
and
movsl
imul
inc
stos
aaa
or
lods
pop
xchg
sub
in
or
sbb
or
outsb
loope
aaa
sbb
push
jg
pop
jg
inc
sahf
sbb
dec
pop
stc
add
sbb
cld
cs
cmp
iret
lret
roll
xchg
add
mov
cmova
or
rorl
ljmp
orl
xchg
and
out
lods
xchg
jns
imul
js
jl
std
data16
jmp
stos
jmp
push
and
imul
push
lods
aam
loop
je
jp
dec
jg
sub
xor
jns
sub
mov
insb
add
pop
test
mov
popf
push
pushf
push
stos
inc
sarl
sti
xchg
and
sub
cmpsb
popa
xchg
frstor
push
dec
adc
ror
push
leave
inc
and
and
adc
mov
sahf
int3
outsb
lcall
je
lods
aaa
inc
xor
xchg
push
lahf
ret
pop
adc
push
fsubs
cli
add
xchg
xorl
jns
lods
fmuls
mov
repz
xchg
in
xlat
dec
xchg
jl
call
ss
daa
leave
mov
inc
mov
pop
arpl
and
cmp
push
rol
lret
dec
adc
stc
add
dec
daa
into
into
sub
mov
in
mov
adc
into
xchg
js
xchg
ret
shl
ficoms
inc
test
fisubs
out
xor
mov
or
add
mov
add
mov
imul
lods
jo
pop
pop
mov
mov
jne
jle
xchg
out
fwait
lock
xchg
enter
ret
dec
jbe
xor
push
bound
aam
mov
jb
add
xchg
cli
out
push
out
mov
lret
push
dec
data16
xor
or
in
cld
imul
fstl
inc
xchg
iret
fcmovne
lahf
popa
pop
pop
mov
mov
xor
in
stos
cmpsw
inc
loopne
std
enter
adc
mov
loop
ja
mov
test
xchg
add
mov
dec
imul
inc
arpl
jp
idivl
hlt
pop
add
popf
pusha
aad
nop
mov
pop
push
mov
out
xchg
sub
ds
push
fdivs
fadd
pusha
aad
stos
push
inc
push
pop
ret
test
sbb
leave
sbb
sbbl
clc
cmp
cmpsb
push
repnz
hlt
mov
test
movsb
inc
push
lods
repz
mov
mov
pop
xor
inc
mov
cmp
mov
mov
insb
outsb
sbb
add
inc
pop
xor
ja
adc
adc
dec
lcall
imul
cwtl
ret
and
stos
rcl
repz
rcll
mov
or
xlat
jmp
mov
mov
mov
outsb
nop
cmp
and
popf
fs
jo
leave
loopne
sub
xorl
mov
dec
pushf
mov
je
notb
add
and
and
std
mov
cpuid
iret
dec
xchg
in
lahf
fidivl
sub
lahf
push
test
xor
mov
xchg
and
inc
pop
sbb
cmp
imul
loope
outsl
mov
add
mov
aam
out
dec
push
aad
push
mov
js
jne
int3
sbb
pop
daa
push
xchg
pop
test
dec
lock
mov
push
ja
icebp
mov
pop
call
icebp
mov
loop
cmp
out
lcall
inc
xor
nop
cmp
aad
mov
pop
mov
ja
pop
push
jb
imul
aad
mov
popa
cld
int3
push
jle
cmp
inc
stos
cmp
xchg
inc
cmp
mov
mov
mov
xchg
aam
or
iret
push
cmc
xchg
pop
sbbb
xor
mov
insl
sbb
jmp
jle
xorl
int3
pusha
in
and
ficoms
outsl
fnstcw
in
mov
or
scas
imul
push
int3
stos
add
rolb
movsl
inc
aad
pop
hlt
or
pop
mov
mov
push
sti
push
or
inc
inc
and
aas
incb
pop
movsb
clc
mov
push
adc
and
fmul
shll
jno
xor
xchg
mov
pop
cmp
dec
mov
sti
push
or
pop
xor
test
mov
add
fsub
jle
int
lret
rorl
mov
pop
aam
push
sub
jbe
std
lods
and
jle
fwait
jnp
xor
fidivs
pop
and
ljmp
jae
and
lock
icebp
out
test
repz
ja
cltd
hlt
or
push
xchg
movsb
or
arpl
call
ror
aam
jp
inc
jb
lret
jmp
mov
adc
dec
xlat
mov
push
aaa
out
xchg
pop
cmp
push
adc
sbb
in
insb
push
dec
dec
fimull
sbb
fmulp
pop
sbb
cwtl
shll
sub
add
fcmovu
adc
lret
scas
ss
adc
lods
sbb
insl
mov
hlt
jne
jle
cmpsb
iret
push
jmp
pop
lea
cli
ljmp
xchg
mov
add
mov
outsb
out
ds
mov
leave
test
das
shll
fdivl
dec
cmpsb
inc
mov
pop
stc
movsb
addb
ficomps
lods
jb
aad
imul
xlat
xor
cmp
sar
pop
addl
rcr
push
jbe
push
cmpsb
scas
imul
jle
push
dec
movl
dec
rol
inc
xchg
pop
mov
das
or
jbe
fistpll
cmp
pop
cltd
jnp
fwait
cmp
pushf
pop
jge
mov
or
insl
and
lods
mov
inc
mov
cmp
cmp
outsb
repnz
shrl
insb
repnz
jecxz
mov
jb
mov
inc
push
xor
rol
and
jmp
adc
mov
push
jnp
pop
sbbl
test
pushf
fildll
jns
insl
jmp
inc
mov
mov
dec
xchg
dec
pop
pop
aas
das
sbb
insl
repnz
push
call
push
call
pop
cmpsb
rclw
jae
pop
nop
inc
mov
addl
dec
pop
push
sti
sbb
and
xchg
inc
mov
aad
gs
das
mov
push
cmpsb
movsl
mov
or
dec
pop
mov
mov
or
js
enter
pop
lret
pop
out
mov
mov
push
daa
xchg
scas
insl
mov
sbb
sti
xchg
and
add
ds
sub
rorb
scas
repnz
loopne
stos
mov
inc
imul
xacquire
mov
push
sbb
cld
fmulp
int3
mov
int3
popa
or
inc
mov
inc
dec
stc
mov
adc
add
inc
jmp
into
les
or
pop
and
inc
sbb
inc
sbb
call
jne
mov
mov
xor
repnz
push
dec
call
scas
inc
outsl
iret
sub
out
inc
mov
mov
fsubrl
jae
js
pop
and
mov
push
inc
mov
shrb
sbb
and
pop
and
enter
sub
adc
dec
mov
mov
adc
lahf
xor
mov
lea
push
icebp
mov
sahf
cmp
dec
lock
test
xchg
les
add
or
pop
dec
enter
or
adc
or
pop
out
addl
mov
into
inc
dec
push
lret
xchg
imul
mov
cmp
aad
sub
out
mov
jecxz
mov
divps
xchg
xchg
je
push
in
inc
push
sub
fiaddl
and
in
rcll
mov
jae
dec
xchg
dec
and
cltd
push
mov
jo
mov
sub
mov
mov
repz
adc
int
rorb
dec
in
mov
leave
add
add
pop
fcomi
loopne
out
das
push
in
testl
push
sub
dec
das
pop
hlt
stc
adc
fwait
ljmp
aaa
or
adc
popa
into
sub
dec
adc
ja
jo
xor
and
cmpsb
sahf
and
inc
roll
icebp
in
mov
mov
lret
jle
iret
mov
sub
push
push
jns
xchg
inc
ret
xor
dec
xchg
inc
xchg
stc
test
ret
mov
push
ret
cmpsb
leave
in
mov
pop
dec
pop
bound
push
jl
mov
inc
pop
or
or
adc
pushf
pop
sar
insb
lock
insb
in
mov
xchg
pop
sbb
addr16
push
push
andw
xor
pop
xchg
fwait
xchg
repnz
ss
rol
scas
ret
add
les
fldcw
test
mov
lods
xchg
aad
xchg
jge
xchg
mov
xchg
out
outsl
sbb
dec
inc
jp
jle
in
dec
in
test
or
xlat
fs
es
imul
push
inc
shl
xchg
pop
cmp
push
adcb
aas
sbb
adc
jp
clc
nop
push
idivl
jp
inc
dec
mov
shrl
call
fimull
test
push
mov
sbb
cmpsb
dec
push
push
dec
inc
imul
out
push
sbb
orb
sub
jae
pop
in
fstps
sbb
in
pop
fcoms
cld
or
mov
fsubs
sbb
pop
loop
bound
sbb
movsb
test
dec
or
imul
jae
mov
sbb
in
mov
jl
pop
out
call
adc
repz
out
mov
dec
jno
cs
pop
mov
sahf
xorl
nop
cmp
add
fildl
inc
fwait
lock
jmp
lock
add
test
inc
add
stc
push
jb
sahf
jge
pop
cmc
lds
lcall
adc
push
cmp
cld
adc
cmp
mov
mov
pop
mov
das
cmp
mov
xor
mov
lahf
adc
int
cwtl
mov
mov
loopne
jne
cli
loopne
call
push
insb
mov
fildl
inc
jg
and
pop
push
fnstcw
xchg
add
jo
in
idivb
aam
and
pop
outsb
scas
mov
mov
mov
es
push
xchg
xorl
sub
mov
and
arpl
cmc
xchg
xor
mov
clts
mov
shlb
xchg
mov
mov
and
sahf
les
int3
bound
aam
popf
inc
add
nop
sub
repz
pop
fcompl
sbb
icebp
imul
or
xchg
loop
mov
xorb
jecxz
push
xor
xchg
les
push
mov
addr16
mov
mov
sbb
adc
ret
or
aad
daa
jmp
sub
insl
jae
shrb
loop
jae
sub
and
pop
add
xor
jo
xor
adc
shlb
rorl
fwait
loope
sbb
inc
sbb
inc
and
incb
inc
cld
js
out
ds
jg
incl
mov
loop
sbb
sbb
ucomiss
int3
hlt
sub
int3
push
aas
ret
ss
inc
pop
mov
fs
push
mov
mov
fiaddl
and
arpl
aam
dec
sub
push
fldt
pop
sti
lock
pop
clc
mov
scas
pushf
popf
pop
xor
inc
call
rolb
inc
test
pop
aam
mov
inc
aam
push
or
adc
adc
cmp
pusha
and
dec
test
pop
jp
imul
adc
push
movsw
mov
fwait
mov
mov
pop
cld
pop
and
xchg
mov
add
popf
ss
data16
mov
push
inc
xchg
out
lds
in
mov
or
fiadds
xchg
add
xlat
jmp
pop
out
arpl
push
cmp
roll
xchg
xchg
mov
movsl
call
mov
or
pop
lods
sbbl
push
jbe
js
xlat
sbb
mov
aas
in
fadds
insl
mov
mov
lret
and
mov
insl
iret
mov
fldenv
insl
jmp
xchg
out
jb
clc
imul
inc
dec
bound
hlt
lds
imul
xchg
shlb
pop
sbb
out
sub
ja
push
movsl
shr
mov
push
push
xchg
mov
adc
mov
fists
xlat
inc
in
hlt
push
loope
js
adc
or
repnz
pop
enter
test
cmp
push
pop
stos
in
insl
jbe
filds
mov
ljmp
fsubrp
push
pushf
jp
sahf
sbb
nop
jp
hlt
dec
lea
int3
cwtl
push
mov
loopne
push
sub
dec
push
ret
fsubrs
adc
test
js
gs
decb
lods
mov
fistl
shr
nop
testb
cld
jno
insl
sti
movl
ficoms
dec
and
pop
popf
cltd
scas
push
mov
inc
dec
jnp
aaa
cli
jae
pop
shrl
lcall
popf
jbe
test
loope
fldenv
jmp
stos
jns
jno
faddl
aaa
lds
icebp
call
sbb
cmc
pushf
xchg
mov
inc
adc
fcmovb
sbb
lcall
out
jl
add
imul
mov
push
daa
mov
and
mov
out
out
dec
out
sbb
xor
pop
imul
jmp
mov
sti
dec
test
jecxz
inc
mov
int
lods
rclb
lcall
les
outsl
add
fdivrl
adc
inc
shrb
sbb
jle
in
mov
jnp,pt
xor
pop
cmp
in
fsts
add
out
rcl
cmp
stos
mov
jmp
adc
test
lahf
in
mov
dec
cmp
test
ja
xor
pusha
inc
pushf
xor
pop
xchg
cmp
dec
jg
stc
std
or
sbb
cmp
add
idivl
aas
addl
xor
push
inc
int3
loopew
seta
insl
lcall
push
fdivl
push
mov
cmp
sbbb
fsubr
inc
pop
das
fistps
fsubl
jns
cmpsb
loop
sub
js
pop
inc
jne
jmp
pop
dec
icebp
aam
ljmp
les
or
movsb
loop
mov
mov
shlb
fmuls
adc
add
sar
hlt
push
mov
sbb
pop
push
jmp
lret
and
push
push
push
pushf
push
or
xchg
mov
jbe
inc
stos
sub
sar
inc
inc
movsb
aaa
outsl
test
out
push
dec
push
xlat
mov
outsb
pushl
clc
jmp
call
aas
rclb
aaa
ret
cs
mov
shrb
add
sbb
dec
pop
or
sub
inc
or
or
cmp
sbb
aas
sbb
aam
jmp
xor
add
stc
shrb
push
jbe
add
scas
push
in
pusha
jmp
adc
loopne
add
subb
dec
daa
xorl
repz
mov
insb
daa
out
and
push
ret
sbb
push
xchg
sub
call
sub
cmp
jne
into
rcr
cmc
faddl
mov
xchg
push
xchg
test
mov
ja
sbb
push
mov
in
popa
insl
adcb
xchg
cmc
lret
dec
popf
divl
xchg
and
lds
xchg
mov
jno
out
sub
pop
rclb
insb
mov
lods
inc
ficomps
cli
dec
in
icebp
mov
jle
push
sti
jae
add
adc
stos
jmp
and
or
addr16
mov
inc
fcom
bound
fwait
cli
push
xchg
xor
lret
cmpsl
out
xchg
out
or
outsb
out
sbb
mov
int3
insl
mov
mov
mov
fldt
pop
stos
xchg
cmp
clc
pop
and
xor
nop
fs
pop
loopne
and
test
add
iret
lock
xchg
mov
rcl
adc
jge
cmc
add
adc
dec
roll
mov
push
or
inc
loop
inc
xchg
es
int
scas
mov
out
jmp
int3
shrb
cli
xchg
cmp
or
mov
adc
into
jae
ret
push
cmpsl
push
ja
and
arpl
in
flds
aad
outsl
jne
orb
mov
adc
ja
pop
lret
fistps
xchg
push
or
inc
insb
orb
sub
xchg
rclb
ljmp
or
es
jle
push
lcall
and
out
insl
pop
push
adc
jl
bnd
loopne
cltd
rorb
lcall
mov
sub
push
xlat
sbb
jns
jb
outsb
ds
fsubrl
pusha
pusha
jb
notl
pop
mov
fwait
mov
cmpsb
xchg
call
jnp
leave
stos
jmp
cmp
ja
test
dec
ljmp
xchg
xlat
mulb
cmc
dec
sti
cld
push
out
lahf
pushf
mov
adc
lods
add
push
in
push
xor
lret
mov
pop
pop
leave
sbb
imul
mov
jecxz
xchg
add
ret
mov
mov
pop
test
xchg
jmp
repnz
test
nop
cmp
iret
aad
sbb
mov
jle
outsl
sbb
mov
sub
enter
shl
mov
sub
mov
inc
loope
jae
jecxz
dec
shrb
pop
inc
xchg
push
arpl
sub
mov
xchg
sbb
push
scas
mov
sub
nop
jb
mov
loopne
arpl
scas
les
jecxz
and
mov
das
loope
mov
xor
lock
in
fldt
sub
outsb
and
fstps
or
leave
mov
call
das
imul
movsb
push
fs
movsb
pop
jns
or
orb
cmp
xor
inc
std
mov
xchg
mov
xchg
dec
stos
pop
scas
inc
repz
mov
clc
sub
cwtl
pushf
in
sbbl
std
xchg
mov
and
xor
adc
out
out
or
pop
mov
mov
or
ficoml
gs
adc
inc
stc
pop
pop
popa
jmp
and
cmp
lock
sti
sbb
and
or
mov
in
je
in
js
push
mov
or
mov
and
or
mov
jno
mov
adc
jmp
sbb
xor
imul
sub
les
int
pusha
xlat
icebp
push
sub
in
and
mov
fwait
mov
insl
fmuls
hlt
pushf
in
outsb
stos
cmp
inc
mov
cmpsb
jmp
mov
std
lcall
mov
mov
push
invlpga
mov
outsb
addb
and
loope
sub
mov
mov
sarl
imul
pop
fs
add
hlt
mov
hlt
out
mov
ret
xchg
out
adc
and
and
jbe
loopne
dec
mov
dec
ds
mov
imul
movsb
dec
and
rolb
and
outsb
ret
out
lret
dec
mov
xor
ljmp
hlt
rcl
shlb
das
mov
leave
cmp
gs
push
mov
adc
xchg
lea
je
pop
mov
enter
bound
leave
xor
add
jl
adc
repz
adc
fisubl
cli
stos
jle
aad
sti
testb
fs
mov
pop
sub
xchg
and
iret
jecxz
and
pop
incb
sbb
and
sbb
push
inc
sub
pop
lcall
dec
mov
push
insl
sbb
or
mov
xor
cs
push
ds
or
int
lds
jno
test
adc
das
sbb
inc
mov
push
gs
dec
adc
cmp
pop
xchg
xor
pop
mov
xchg
icebp
cmp
out
mov
aad
dec
cmp
jbe
es
xorb
cltd
mov
lret
lahf
xor
stos
push
jl
mov
lahf
dec
fdivp
std
push
push
arpl
das
push
xor
and
or
inc
or
mov
std
jno
add
xor
out
dec
dec
sbb
je
inc
or
int
aad
sbb
pusha
lods
test
sbb
sub
mov
jb
clc
maskmovq
divl
inc
iret
mov
mov
xor
cmc
mov
mov
mov
or
adc
sbb
jmp
adc
xor
scas
fcom
push
push
loope
insl
pop
and
and
add
rorb
std
xchg
and
int
fisttps
shrb
sub
in
sbb
pop
jns
rolb
jno
iret
sub
adc
pop
pop
sahf
cs
adc
inc
xchg
ljmp
out
insb
or
xchg
pop
lret
in
mov
insb
gs
shl
xor
out
mov
pusha
sbb
neg
lds
pop
shlb
jecxz
dec
fcoml
hlt
aad
sarl
push
iretw
fimull
fcoms
pusha
scas
jg
or
mov
sahf
mov
add
fdivs
mov
mov
repz
push
ljmp
sbb
lret
add
aaa
or
push
out
pop
mov
ja
stc
xchg
cli
movsl
stos
adc
xchg
sub
or
pop
test
in
jae
mov
sub
jne
add
data16
js
cltd
addb
int
inc
and
icebp
out
jne
dec
pop
test
jle
divl
push
shrl
lds
in
fisubs
data16
cmp
inc
pop
stos
insl
and
xchg
lock
mov
xchg
or
mov
push
push
cwtl
ret
insb
inc
inc
sub
je
sub
repnz
xchg
pop
xchg
jne
daa
mov
cmpsw
jg
push
fwait
pop
rol
mov
sub
push
add
xchg
push
mov
push
movsl
shll
jne
xor
nop
data16
jmp
jne
and
push
addl
shl
adc
mov
xchg
xlat
cmp
popf
ss
jno
sub
lds
repnz
jecxz
fwait
ds
mov
int3
out
repnz
mov
cwtl
push
xor
jnp
ds
ret
jne
pop
scas
push
xchg
hlt
inc
scas
pusha
xor
repz
mov
sarb
jmp
mov
mov
and
push
xchg
mov
popf
stos
or
push
jb
pop
sub
mov
sub
mov
adc
xchg
xchg
pusha
sub
shll
mov
mov
lcall
lock
loop
cltd
popf
fwait
aas
in
jmp
daa
jne
lods
inc
call
xchg
jb
rcrw
repz
sub
pop
lods
pop
fwait
int
pop
and
mov
jo
xchg
in
sbb
adc
sbb
xchg
ss
sub
cmpsl
in
out
lahf
lcall
lods
mov
arpl
push
fiaddl
in
outsb
shr
mov
sub
pop
leave
shlb
cltd
repz
fstpt
mov
sub
mov
jmp
jp
das
arpl
lods
sbb
pandn
adc
push
sbb
push
xor
mov
lds
je
stc
js
ffreep
lods
leave
xchg
ret
jmp
aad
pop
cmp
add
jae
add
push
incl
inc
lods
mov
add
inc
mov
mov
jno
test
mov
cltd
outsb
mov
mov
and
sbb
lods
daa
aaa
or
rcll
mov
push
aaa
xchg
sbb
loope
mov
shl
fstpt
out
dec
jg
mov
dec
add
mov
in
inc
fstpt
mov
or
les
iret
jne
imul
sub
int
mov
into
mov
fldt
add
call
shlb
scas
hlt
lock
mov
and
fisubrs
daa
fcomps
jne
push
push
xor
fcmovu
push
sbbl
pusha
lock
inc
or
lea
fs
shlb
or
lds
shlb
adc
mov
je
mov
push
cmp
push
loop
push
ffree
daa
xor
add
aad
dec
jne
mov
int3
test
cltd
stos
loop
push
repz
sbb
xchg
dec
movsb
jb
jo
lret
jnp
and
rcrl
pop
mov
cmpsb
lods
rorl
nop
sbb
repnz
sarl
daa
popa
xchg
rolb
in
popl
gs
ljmp
dec
lds
cmc
and
int3
mov
mov
mov
xchg
pushf
cltd
jg
scas
sub
insb
mov
mov
lahf
psllw
scas
repnz
scas
mov
sbb
pop
mov
jmp
js
fwait
jp
jg
clc
cmp
dec
fsubrs
and
or
inc
pop
ja
lds
xor
dec
sub
sbb
int
out
outsl
cwtl
mov
loopne
and
int
fwait
les
ret
das
inc
dec
lcall
pop
mov
xor
stos
pop
xchg
sub
sbb
mov
or
jmp
in
sbb
xor
in
lds
add
and
cmp
fs
sti
sbb
xchg
sub
push
bound
jg
dec
insb
jne
subl
push
into
jnp
dec
mov
mov
adc
ja
clc
lret
dec
pop
fsubrl
cld
pop
xor
mov
and
sbb
cmp
out
je
lods
pop
fwait
xchg
pop
pop
lret
ret
inc
inc
fisttps
mov
pushf
mov
inc
popa
test
movzbl
mov
mov
cmpsl
ljmp
dec
cmpsl
adc
mov
fidivl
movsl
sbb
or
pushf
jge
adc
adc
sub
dec
lock
dec
dec
push
or
loopne
out
loope
loope
add
cltd
lret
mull
add
mov
divl
push
mov
stc
jle
sub
sub
mov
cmc
adc
fs
mov
shrb
adc
mov
or
push
mov
xor
js
das
fidivs
ficoml
adcb
fidivl
mov
in
fsubs
scas
push
repnz
cmp
cmp
enter
lahf
pop
jecxz
fwait
inc
subb
push
testl
mov
jle
xchg
popa
xchg
xor
jecxz
jns
les
xchg
mov
frstor
add
test
in
mov
jb
mov
mov
cmc
cmpsl
adc
scas
inc
adc
lahf
shll
lds
jge
dec
cmp
je
push
lret
out
cld
into
dec
and
cmp
mov
and
push
mov
bound
cmp
stos
popa
xor
mov
jne
xorb
push
cltd
mov
hlt
lret
add
cld
popa
pop
rol
mov
fwait
push
or
fnstsw
jl
dec
jmp
jae
cmp
dec
dec
adc
mov
dec
jecxz
je
xchg
aas
rclb
sub
in
fwait
mov
jp
frstor
enter
mov
stos
or
mov
ret
ds
push
sti
pop
mov
push
add
bound
jp
cmp
xor
cmpsb
and
ret
mov
js
push
xchg
aas
aaa
jge
lds
imul
adc
jns
jmp
fcomip
sti
jmp
lea
scas
cmc
push
int3
test
mov
mov
push
push
outsl
mov
mov
mov
std
mov
add
incl
lods
sarb
sub
stos
push
dec
dec
cmp
aad
lcall
rcl
pop
scas
jno
je
push
ret
jne
push
shlb
std
dec
mov
cli
sub
lea
pop
inc
pop
pop
xchg
pop
jg
cwtl
sti
push
mov
incb
jmp
mov
shrl
test
test
mov
mov
inc
push
ret
fmull
cld
and
lds
aam
stos
jecxz
mov
repz
inc
adc
jbe
paddsw
imul
popf
cmc
stos
pushf
testl
adc
lock
out
insb
shll
push
sbb
in
cmc
jae
imul
ss
xchg
pop
or
push
jbe
jb
xor
or
push
cmp
mov
xchg
jno
dec
test
out
cwtl
int3
dec
jns
sbb
out
rcrl
adc
leave
inc
jns
pop
sahf
xchg
pop
nop
sbb
es
sti
js
aas
ss
mov
jg
loopne
pop
and
out
sbb
xchg
popl
insb
push
sbb
cmp
nop
pop
cmp
cwtl
pop
test
pop
pop
testb
outsb
fnstcw
subb
inc
lds
iret
out
test
sbbb
idivb
movsb
call
iret
lea
mov
inc
xchg
scas
xchg
mov
ror
into
mov
je
test
xchg
imul
dec
sbb
jp
push
xchg
int
jl
add
push
adc
clc
or
xchg
push
fcmovnb
pushf
push
cwtl
jne
mov
movsb
jns
inc
repz
xchg
cld
xchg
std
jo
mov
sbb
cmp
xlat
aas
fisubl
icebp
mov
ljmp
cmp
loop
mov
mov
test
aaa
sahf
mov
xchg
push
sub
and
mov
scas
rorb
fucom
jns
insb
test
push
jmp
adc
scas
imul
jns
mov
jecxz
inc
xchg
sbb
adc
mov
js
fcomps
orb
pushf
jae
lods
jb
lds
push
mov
sti
subl
dec
push
scas
jmp
jnp
stos
mov
cmpsb
sub
mov
fisttpl
and
subl
mov
jo
and
repnz
shr
shrl
out
lret
pop
iret
jg
fwait
jnp
pop
sub
test
jmp
mov
fsts
push
cmpsb
mov
or
xor
dec
or
jno
rolb
sbb
dec
fnstsw
sub
stc
daa
cltd
lahf
jae
test
sti
push
andb
sbb
push
jns
loopne
rcll
mov
adc
cltd
sub
push
push
bound
call
mov
in
outsb
mov
mov
fisubs
sub
dec
test
xchg
lret
lock
mov
add
fstps
mov
pop
call
sahf
cli
xor
in
cmp
push
xchg
call
cmp
js
and
std
push
bnd
fimuls
addr16
adc
pop
ds
xchg
mov
rcrb
jmp
jl
js
ss
addr16
sarl
and
es
cmp
sbb
filds
mov
lods
xchg
div
scas
add
insl
mov
push
xor
dec
push
pop
outsl
leave
call
cltd
mov
dec
rorl
sub
pop
inc
enter
pop
lcall
fwait
and
sbb
and
pop
aad
ds
adc
cmp
jbe
shlb
inc
mov
movsb
xchg
addr16
incb
push
in
loope
pop
ficomps
es
push
dec
mov
sub
je
repnz
jg
push
orl
clc
mov
adc
xor
jno
mov
insl
icebp
lods
movsl
fisttpll
mov
cmpsl
incl
cmc
or
cld
xchg
ja
lret
pop
cmpsb
add
aaa
addr16
pop
inc
mov
in
xchg
fmuls
and
xchg
mov
hlt
and
or
in
lcall
pop
push
jg
scas
jae
ds
arpl
mov
fstl
cwtl
lock
mov
and
into
sbb
sbb
fstpt
out
adc
xchg
inc
pop
arpl
cmp
sahf
std
pushf
inc
xchg
adc
jecxz
sub
mov
dec
mov
daa
andb
or
outsl
cwtl
dec
jg
adc
ret
mov
sbb
in
jle
arpl
push
fistpl
sub
lods
sbb
stos
iret
cmp
mov
or
faddl
jbe
xorl
rcll
push
imul
inc
or
jecxz
inc
insb
pop
nop
dec
lods
and
cmp
inc
xchg
ljmp
cmp
adc
stc
mov
mov
pop
sbb
testl
std
xor
cld
cmp
roll
es
stc
sub
push
jg
jo
xorl
iret
int3
mov
pop
jne
iret
jbe
adc
pop
mov
cmpsb
jle
loop
cmp
insb
or
mov
fidivrs
xor
cmp
ss
ret
dec
rcrb
insb
push
int3
jb
inc
mov
lret
ja
repnz
push
adc
jnp
mov
and
add
shlb
jbe
pop
jecxz
cmpb
mov
mov
or
clc
cli
mov
lea
and
mov
std
jp
data16
enter
inc
arpl
inc
add
inc
dec
insb
js
and
cltd
and
movsl
lods
cmp
rol
sbb
adc
adc
xchg
pop
cmp
push
hlt
xor
inc
stos
mov
or
popf
out
lahf
add
xor
out
into
test
in
mov
aas
or
in
stos
push
hlt
jge
nop
dec
mov
dec
or
call
dec
pop
andb
jmp
and
pop
cmp
insl
mov
add
test
loope
mov
inc
faddl
cmpb
and
pop
test
add
outsb
rolb
push
aaa
lret
add
xor
pop
pop
mov
insl
xor
pop
movsl
mov
jmp
xor
add
dec
xchg
ljmp
mov
xchg
lods
shrl
leave
scas
repz
adc
xchg
fcmove
aad
inc
inc
push
mov
sbb
stos
repz
fisubl
mov
xor
xchg
add
sbb
pushf
dec
add
iret
clc
add
movsl
jle
mov
mov
push
dec
pop
or
cld
out
aad
cmc
pop
and
ljmp
adc
or
jno
mov
loop
pop
push
cwtl
cmp
lret
jg
jp
mov
rcrb
push
xor
dec
mov
sub
scas
xor
mov
hlt
nop
xchg
pop
pop
icebp
rolb
lret
pop
ficompl
sbb
ror
push
imul
std
add
lea
lea
lcall
outsb
inc
daa
mov
test
adc
xor
fdivl
imul
imull
pop
cwtl
jge
dec
cltd
sahf
shll
in
adc
vmovdqa
adc
and
mov
nop
inc
leave
inc
les
iret
add
mov
jge
jnp
insb
and
hlt
jg
fdivs
cmp
jecxz
insb
and
sub
jnp
dec
ret
cmp
insl
test
call
xchg
lea
lds
push
mov
push
cwtl
or
pop
mov
rorl
mov
out
and
movsb
cmp
or
inc
pop
popa
out
jno
push
loope
and
fucom
cmpsb
test
cmp
shrl
roll
int
pushf
test
mov
sarl
xchg
data16
pop
jb
fmul
jns
orb
inc
mov
das
and
cmpsl
popa
std
sbb
jne
push
in
adc
loope
push
scas
shlb
dec
in
lods
repnz
dec
lahf
sub
fwait
xchg
push
mov
jnp
mov
aad
out
push
call
sbb
push
inc
test
xchg
loopne
jae
out
fsubrs
fnstsw
mov
int3
addb
xor
test
fdiv
int3
adc
nop
flds
or
adc
int3
imul
sbb
in
fldcw
pop
lret
imul
negb
or
jecxz
adc
push
jb
int3
fs
mov
pop
call
loope
aas
adc
je
sbb
nop
pop
add
pop
pop
add
xchg
or
out
push
push
inc
fisttpll
add
xor
push
xchg
fisubl
loope
orb
sub
push
outsb
or
sub
sub
push
xor
and
and
mov
pop
mov
push
jne
ret
cmp
sbb
ret
mov
and
and
aaa
mov
push
cltd
ficompl
fbld
repz
sahf
mov
imul
sti
sbb
outsb
mov
dec
jo
je
xor
cmp
hlt
push
jecxz
jle
repz
xchg
repz
mov
outsb
jl
lds
fcoms
in
inc
jns
out
mov
inc
jns
adc
bound
inc
and
rolb
pop
subl
int
xchg
pop
add
jp
mov
jmp
orb
enter
dec
rolb
and
mov
dec
clc
lahf
jl
sbb
rcrb
cwtl
and
clc
or
sub
add
xcrypt-ofb
cmpsl
push
dec
stos
faddl
cmpsl
inc
mov
mov
and
ds
adc
insl
leave
es
gs
sub
shll
ret
into
mov
adc
and
int3
mov
int
dec
dec
cmp
fstpl
mov
xchg
or
ret
ss
js
in
sub
iret
push
inc
and
and
movsb
or
push
inc
lret
adc
pusha
push
pushf
test
lods
and
add
rorb
fbstp
test
lahf
lret
sbb
pop
add
jmp
inc
mov
add
daa
js
fwait
and
add
fimull
into
mov
pop
inc
adc
js
sbb
push
into
sbb
pop
push
adc
ja
push
gs
sbb
cs
xchg
or
int
fnstcw
dec
sub
pop
popa
adc
jo
or
icebp
fwait
xor
outsb
out
jne
dec
push
dec
shlb
mov
sub
jg
es
sbb
add
shll
dec
pop
mov
loope
mov
fisubs
dec
outsb
cmp
in
push
fisttps
pushf
roll
stos
jmp
movsb
std
push
xor
into
mov
sub
jp
imul
int3
sbb
push
and
bound
xor
mov
xor
pop
xlat
lcall
test
pushf
pop
mov
pop
mov
push
leave
jne
xor
and
adc
mov
mov
inc
call
fdivrs
jge
mov
sub
scas
sbb
and
loopne
lret
xchg
sarb
aaa
out
mov
add
lock
fs
sbb
stos
insl
shll
daa
repnz
out
adc
sbb
mov
in
or
jle
mov
call
aas
mov
jo
nop
push
sub
push
in
pop
fabs
pop
add
jbe
sarl
das
popa
push
push
add
or
insl
sub
xor
cmp
push
pop
insb
ffree
mov
out
push
faddp
fsub
cltd
out
mov
dec
pop
js
mov
adc
adc
int
mov
rcl
mov
push
mov
mov
cmp
sahf
out
in
pop
push
ja
sub
jne
fwait
sub
lcall
sbb
adc
mov
jb
fwait
dec
jbe
sub
cmp
out
xor
push
mov
and
add
mov
fstps
ljmp
add
mov
xchg
sub
xor
mov
cmpl
push
add
ss
xor
decb
lods
dec
mov
cmp
cmc
mov
fistpl
lea
aad
dec
test
fmull
push
mov
adc
add
sbb
mov
imul
addr16
cmpps
mov
test
xchg
enter
jbe
add
rol
sub
decl
ret
push
xor
int
enter
movsl
xchg
sub
popa
pop
xlat
cmc
jp
lds
mov
jmp
icebp
xchg
xor
jns
js
mov
lahf
icebp
jb
sbb
or
cli
bound
icebp
dec
js
aad
pop
mov
add
add
outsl
cmp
cld
and
aaa
aad
js
cld
sbb
dec
xchg
push
and
push
cmp
mov
sahf
dec
arpl
lret
pop
mov
jae
xor
cmpb
cld
jo
lahf
pop
mov
imulb
xor
inc
loope
fisubrs
jns
xor
adc
fstpl
xchg
inc
addb
jno
scas
push
add
das
aad
dec
pop
fdivrp
xlat
cwtl
mov
shl
movb
fisubrl
dec
sbb
pop
push
loope
fists
jb
or
sbb
jno
sbb
mov
testb
loope
mov
mov
jo
iret
das
loop
je
js
mov
icebp
fdivs
sar
cmp
inc
outsl
xchg
lods
lds
cs
pushw
lea
rolb
test
sbb
push
call
xor
cmpb
jb
fdivl
or
pop
rorl
lea
fldcw
cmpsl
into
sbb
sbb
mov
test
fidivs
stos
fisubs
orb
mov
push
pop
out
lods
mov
mov
call
movsl
inc
and
sbb
in
adc
mov
adc
mov
mov
aaa
or
mov
add
xchg
into
dec
mov
sbb
mov
dec
fwait
cmp
vmread
in
rcll
mov
movl
movsl
lret
clc
stc
insb
mov
mov
xor
mov
jns
hlt
rclb
je
data16
shll
icebp
jecxz
cmp
loop
mov
push
inc
fld
shlb
pop
mov
iret
inc
mov
out
jmp
jp
das
outsl
mov
xchg
dec
lret
dec
pop
stos
das
test
outsb
xorb
cmc
lea
scas
das
insb
int
add
rcr
icebp
aas
push
sub
mov
test
std
das
or
inc
or
negb
xchg
iret
aam
adc
xor
stos
xrelease
jge
fnstenv
fmuls
xchg
js
bound
call
and
mov
in
orl
push
mov
xchg
in
cmpsl
cmpsb
movsl
test
jle
sub
push
int3
push
je
lds
pop
push
loopne
mov
or
fidivs
mov
stos
mov
pushf
push
out
push
iret
popa
in
aam
jns
sbb
mov
dec
arpl
xor
dec
add
fisttpl
sti
andb
lods
ja
sbb
or
idivb
fisttpll
xchg
pushf
push
xor
adc
pop
mov
inc
jnp
inc
clc
pop
sub
call
in
dec
orb
dec
or
movl
ljmp
repz
lret
cmpl
daa
fnsave
pop
inc
jb
cmpsl
add
outsl
out
inc
inc
push
orb
int3
stos
jae
arpl
inc
lret
mov
adc
inc
pop
jae
xlat
pop
pop
mov
pushf
add
push
popa
shll
xor
mov
sub
inc
cmp
fists
lds
push
jmp
xor
pop
push
sub
cli
and
test
shl
mov
sub
jne
cmc
insl
movsb
cmpsl
cmp
xor
sbb
ret
test
pushf
sar
jg
aam
fsubs
pop
scas
not
jo
outsb
inc
pop
jmp
clc
lock
mov
andl
jae
jne
and
mov
mov
pop
jno
pop
andb
sbb
gs
add
lods
add
dec
ret
ja
lods
pop
rclb
jns
jge
int
push
mov
and
fcompl
dec
sub
mov
cwtl
popf
orl
push
clc
xor
fwait
repnz
mov
or
jbe
ja
dec
pop
push
cwtl
mov
jl
xlat
or
push
sub
xchg
cmp
push
jo
addb
xor
test
cmc
pop
jg
jmp
cmp
mov
aam
les
lods
mov
les
xorb
mov
outsb
mov
xchg
sub
in
xor
sbb
shr
in
pop
push
andb
stc
and
lods
mull
and
sub
dec
nop
ljmp
test
mov
test
mov
adc
inc
jo
popl
and
arpl
insb
pop
mov
lcall
fdivrl
cwtl
add
push
fwait
jae
sti
popf
jne
sub
xor
stos
call
pop
xor
js
aad
aad
sub
jne
addr16
outsb
insb
jge
pop
les
ss
ljmp
std
lahf
mov
pop
std
enter
popa
and
lahf
mov
scas
sbb
and
add
add
clc
lret
pop
bound
add
adc
mov
nop
sub
ljmp
mov
pop
push
das
pop
xor
push
sarl
and
sbb
adc
aad
inc
ret
roll
scas
sub
mov
hlt
sub
lahf
dec
lds
mov
xor
ljmp
inc
fisubrl
add
gs
rorb
cmp
cmp
sub
mov
pop
sub
hlt
hlt
cs
scas
aas
fmull
gs
xor
fistps
leave
and
mov
aaa
jno
add
cmp
add
pop
add
xchg
lret
adc
out
jne
adc
mov
idiv
and
rcl
repz
dec
cmp
mov
mov
add
in
or
or
out
mov
leave
lock
fucomp
add
or
fistl
jmp
ljmp
out
jmp
lea
pop
jnp
sbb
aaa
jb
push
mov
inc
lret
or
xchg
adc
and
ja
xchg
shl
adc
fnstcw
lcall
aas
add
rcll
xchg
pop
or
mov
and
dec
mov
or
sub
test
xor
inc
adc
add
add
cmpsb
stos
dec
sbb
inc
sbb
pop
aaa
jmp
addr16
loop
ljmp
push
mov
orb
ds
push
out
jg
cmpl
dec
sub
lock
cmp
pop
jecxz
xchg
lea
lods
cmp
sahf
jl
jecxz
dec
jp
sbb
int
inc
cmp
stos
and
jecxz
imul
sub
fistps
xchg
inc
insb
in
push
test
insl
inc
cltd
sub
xorb
call
or
icebp
mov
dec
push
push
stos
cmc
pop
mov
xlat
hlt
push
mov
jae
push
adc
push
sub
cmp
aam
inc
push
dec
add
or
rorl
pushf
sarl
jg
cmp
cmp
xor
icebp
outsl
cli
xchg
mov
jnp
sbb
dec
cmp
lods
dec
mov
inc
sub
adc
ds
dec
sub
mov
pop
inc
cmp
push
inc
pop
aaa
or
xor
and
jecxz
cltd
jp
cld
fcmovbe
aaa
dec
and
sbb
data16
inc
push
fsubrs
movq
bound
fs
jecxz
dec
aam
icebp
xchg
jg
mov
call
out
jg
out
sub
sarb
adc
adc
and
cs
mov
mov
pop
cld
jae
into
cmpb
dec
pop
dec
ss
outsl
ds
shlb
mov
pop
jp
push
test
test
stos
dec
shlb
pop
cmp
jp
cmp
push
xchg
inc
push
push
repz
outsl
leave
sub
stos
push
ss
and
out
and
pop
insb
scas
stc
jp
lcall
addr16
pop
lahf
adc
icebp
mov
dec
inc
jle
mov
dec
in
imul
mov
push
mov
push
scas
pop
mov
pop
js
mov
cmpsb
mov
sub
xor
xchg
subb
shlb
pop
inc
insl
cmpxchg
les
mov
loopne
jne
xlat
dec
pop
inc
ror
xchg
xchg
xor
mov
xchg
jb
sti
jb
and
outsb
cmc
inc
xor
mov
dec
xchg
pop
push
xor
int
into
adc
cwtl
mov
pop
xchg
adc
ds
lret
das
subl
scas
inc
aaa
mov
adc
stos
mov
jg
daa
lods
lods
and
imul
xor
cmp
bound
repz
idiv
test
test
cmp
insb
loop
fstpt
mov
cltd
lock
clc
pop
addr16
dec
scas
sub
push
je
ds
std
div
aad
ret
inc
mov
add
std
inc
mov
aam
mov
sbb
sbb
ds
cli
and
notb
mov
pop
mov
stos
andb
mov
mov
sub
mulb
mov
pop
mov
mov
int
mov
mov
sbb
pop
aas
enter
cmpsb
and
lahf
inc
adc
mov
jnp
mov
mov
push
lcall
and
sub
or
or
lahf
lds
mov
adc
data16
es
int
dec
pop
cmp
cmp
subb
fidivs
movsb
ja
cli
lcall
xor
jp
pop
andb
pop
repnz
mov
fistl
imul
dec
lods
add
jb
lods
mov
sbb
push
and
mov
xor
mov
adc
xchg
lea
arpl
mov
mov
stos
popf
cli
jecxz
xor
mov
dec
jecxz
inc
sub
push
leave
cld
data16
and
pop
push
mov
and
adc
sub
push
es
outsb
xor
inc
out
hlt
mov
xor
mov
das
mov
lahf
outsl
jbe
mov
int3
out
stos
push
pop
in
imul
push
add
jge
inc
lods
push
lods
jl
outsb
jno
add
sub
mov
es
push
lret
aam
ds
pop
ds
push
jp
push
mov
mov
mov
xchg
mov
add
jg
pop
mov
notb
out
jns
repnz
sbb
sub
into
mov
mov
jns
xchg
xor
mov
push
dec
into
push
es
imul
mov
adcl
and
jle
leave
push
xchg
mov
mov
push
popa
and
adc
push
sbb
das
loope
jp
bound
inc
sub
xchg
mov
mov
push
sub
sbb
xchg
adc
shlb
xchg
mov
mov
inc
and
cmp
outsb
decb
test
hlt
adc
outsl
fstps
bound
sar
mov
ficoml
mov
fisubrl
insl
jl
dec
std
repz
mov
xor
inc
xor
pop
xchg
ret
dec
stos
dec
push
rorb
sub
clc
test
mov
inc
inc
in
ljmp
dec
scas
push
adc
scas
cmp
sahf
bound
test
cmp
pop
inc
mov
sub
clc
push
ds
xor
xor
fistpll
cmp
cwtl
mov
sbb
mov
inc
xor
icebp
jmp
mov
xchg
daa
pusha
xor
xchg
fiaddl
das
outsb
fsub
jg
xchg
ds
xchg
push
les
mov
call
push
or
push
cltd
ret
mov
lods
pop
stos
pop
push
mov
sahf
cs
mov
cmc
sahf
pop
mov
dec
jne
leave
into
jnp
sub
ds
inc
adc
aaa
addr16
popa
inc
inc
iret
dec
xchg
aad
push
mov
es
pop
adc
mov
add
jp
jp
push
lahf
movsb
sub
mov
es
cs
mov
jecxz
test
icebp
jle
mov
sahf
or
dec
sahf
or
jnp
out
mov
les
push
fs
int
movsl
mov
bound
pop
sti
and
or
bound
rcl
sub
adc
imul
andb
daa
enter
push
les
shrb
pop
jb
xchg
jle
pusha
xchg
mov
hlt
popf
push
sahf
xor
pop
sti
and
pushf
sar
pop
and
lahf
cmp
lods
arpl
push
adc
movsb
jb
rolb
pop
shrb
push
jmp
push
xchg
mov
popf
fsts
push
lods
int
sub
cmp
mov
repnz
cmpsl
ds
ds
and
fmull
jle
popf
sti
nop
mov
jb
in
test
int3
dec
aaa
adcl
push
pop
ret
add
ss
int
and
mov
mov
mov
cld
jb
jno
push
lock
inc
test
out
sub
inc
mov
outsb
gs
cmp
pop
jl
push
enter
pop
inc
leave
enter
inc
mov
push
add
imul
and
mov
sub
mov
aaa
ss
lret
into
adc
ret
xor
xor
xchg
sbb
inc
fistl
test
je
sub
dec
xchg
adc
and
dec
js
push
and
fcoms
pop
mov
pop
adc
cwtl
jecxz
hlt
pop
std
pop
xchg
sti
addr16
cmp
pusha
mov
add
pop
repnz
stos
stos
sbb
cmp
inc
negl
add
outsl
cs
fdivs
cltd
fcmovnb
and
rcrl
push
icebp
cltd
adc
hlt
out
xor
mov
xchg
push
jnp
rcl
jecxz
imul
leave
mov
jmp
mov
stc
jmp
test
fsubs
pushf
inc
xor
mov
cld
add
in
inc
movsb
push
int3
sbb
inc
xor
sbb
test
loop
mov
inc
mov
out
jg
iret
mov
mov
cmp
mov
jl
add
mov
mov
nop
mov
xchg
fimuls
lret
bound
lea
dec
out
xchg
inc
mov
xchg
repnz
pop
insb
sub
jbe
fisubrl
lcall
lret
push
lock
lea
xchg
add
mov
sbb
sbb
push
cmp
xor
lret
int3
into
pop
add
cmp
sbb
pop
lods
push
jbe
in
fs
fwait
jns
jo
andl
shrb
dec
mov
or
add
int3
decl
pop
subl
mov
jns
pop
cmp
ds
mov
mov
mov
ljmp
lret
mov
mov
stos
test
add
adc
xlat
push
pop
and
adc
add
mov
daa
cmpsl
inc
cmp
notl
idivb
adc
pushf
js
lock
mov
or
or
sub
sbb
add
clc
sbb
pop
aam
lods
subb
xchg
pop
lahf
insb
pusha
mov
xchg
out
mov
loopne
adc
push
mov
add
jle
das
push
test
outsl
pop
cld
cmp
mov
outsl
loop
cmp
mov
dec
out
and
fidivrl
sub
mov
popf
leave
xchg
push
mov
xor
std
mov
lods
fcoms
xor
loope
or
leave
cmp
imul
jmp
or
lock
cmp
in
inc
mov
cmc
adc
movsb
jp
pop
in
rorb
in
aam
mov
adc
fsubs
sub
int
dec
sti
cmpsl
mov
mov
jmp
pusha
xor
int3
xlat
push
xchg
shlb
test
addl
xor
push
and
sbb
sbb
cmp
xchg
jmp
jg
psrlw
xor
inc
add
mov
out
dec
add
loopne
insl
insb
sub
ss
in
cmp
scas
adc
mov
or
or
mov
mov
inc
daa
mov
insl
cwtl
mov
jle
stos
jnp
outsl
inc
shll
lock
jns
xchg
pop
add
ret
call
icebp
pusha
mov
test
insb
xorl
cltd
jns,pn
repnz
dec
or
mov
inc
sub
aam
pop
clc
das
iret
pop
scas
outsl
sar
inc
add
pop
inc
outsl
mov
jmp
aaa
sbb
insl
push
outsb
out
aaa
aaa
loopne
mov
outsb
pop
in
rorb
inc
adc
add
pop
ds
pop
jno
ds
jbe
adc
ret
mov
sub
sub
mov
or
imul
mov
push
cmp
xlat
test
fdivl
or
clc
out
les
stc
sub
mov
int3
sbb
mov
sbb
dec
sbb
lret
mov
les
je
sti
mov
or
in
push
jp
leave
cmp
and
scas
popl
xchg
stos
popf
mov
inc
adc
cmp
adc
mov
es
js
mov
in
and
fwait
push
xchg
jo
inc
mov
dec
out
cmp
in
cmpsb
test
movsb
jo
int
push
mov
mov
repz
lea
jns
das
lods
mov
or
in
pushf
testl
scas
movsl
pop
movsl
es
sub
and
icebp
mov
pop
int3
mov
push
mov
pushf
sbb
fsubl
xchg
gs
add
sar
sbb
int
ja
sub
test
mov
pushf
enter
push
enter
mov
lret
sbb
sbb
fisubl
xchg
movsb
in
insl
push
push
mov
pop
mov
add
jmp
dec
orb
jp
imul
mov
sahf
mov
fwait
sahf
loop
or
push
scas
ret
movsb
push
flds
sysexit
mov
lods
pop
pusha
aaa
popl
movsl
inc
mov
push
mov
movaps
pop
sbb
xor
dec
push
fistpll
and
push
cmp
popf
pushf
jo
and
cmp
movsl
xor
sub
push
test
cmp
mov
fdivrs
jle
imul
add
aad
cmc
add
xor
daa
mov
pop
orl
lret
psrlw
insb
cmp
rorl
xor
push
xchg
mov
lcall
popf
adc
shlb
mov
mull
fs
pushf
fistpll
cmp
jmp
das
inc
das
xchg
in
jo
mov
mov
xor
das
xchg
cmp
in
js
fcmove
aad
pop
adc
mov
inc
jb
pop
jge
adcb
adc
aaa
aam
cmp
add
fwait
dec
mov
pop
mov
shrl
jno
js
mov
push
popf
dec
jne
mov
push
sbb
add
ljmp
imul
xlat
xor
mov
add
je
adc
xchg
mov
adc
adc
jo
shlb
adcl
sub
out
inc
les
pop
jae
xor
dec
jae
jae
add
gs
and
fiadds
xchg
jo
daa
es
pop
sub
mov
inc
mov
add
adc
fmull
in
in
cmp
in
lret
insb
hlt
mov
xor
or
or
lds
es
das
cmpsb
xorb
shrb
jns
xchg
jae
std
cltd
or
cmc
push
xlat
cmp
ret
das
pushaw
sub
enter
xchg
jp
mov
test
lret
cmp
mov
filds
fsin
dec
adc
and
sbb
jp
xchg
jnp
mov
movsb
test
mov
lds
icebp
rorl
ret
xor
mov
add
aad
push
enter
xchg
lods
leave
mov
into
xchg
dec
and
enter
mov
mov
loopne
push
pop
aad
mov
out
mov
outsl
jg
mov
fdivl
push
stos
lock
mov
andl
js
lods
xlat
ficoms
aas
mov
mov
mov
out
fcomp
cmpsl
push
out
lods
mov
push
int
scas
pop
test
push
call
lock
jle
push
inc
and
inc
addr16
and
xchg
insb
ds
out
push
push
mov
push
stos
xchg
xchg
int3
and
shll
and
push
push
iret
test
or
outsl
xchg
mov
xchg
adc
push
pop
sbb
ja
add
inc
and
pop
imul
idiv
mov
scas
loop
lahf
mov
lret
xorb
push
test
xchg
xor
adc
xor
and
xchg
gs
inc
jae
sub
push
sysexit
mov
es
mov
mov
addr16
xor
jmp
mov
shll
lcall
and
adc
pop
out
xchg
pushf
pushf
push
outsb
sbb
inc
out
aam
xchg
or
int3
frstor
ficoms
js
mov
out
and
pushl
scas
repnz
les
out
mov
clc
xchg
xchg
jae
inc
mov
sub
xchg
lcall
out
pop
aaa
xchg
push
inc
xor
xor
push
add
lret
push
pop
filds
pop
fwait
cld
daa
mov
mov
xlat
in
xchg
mov
or
shl
leave
test
sub
or
jmp
inc
jns
or
scas
or
and
xchg
pop
cmpsb
mov
test
cs
fisubs
push
subb
mov
pop
aam
sbb
sti
sti
ss
movsl
add
fildll
pop
aad
addb
xchg
imul
pop
rorb
xchg
aad
es
test
xchg
or
sbb
aaa
cs
cmovge
sbb
mov
fnstsw
mov
test
shll
or
es
mov
jl
mov
sti
sub
xor
in
lds
adc
add
pushf
push
cmp
ret
sub
fistpl
sar
sbb
enter
or
sbb
mov
in
ss
sbb
jb
pop
xchg
sbb
shrl
dec
bound
enter
mov
shrl
insb
ljmp
adc
pusha
scas
xchg
dec
aam
mov
out
cld
pop
stos
loopne
subb
mov
fnstsw
popa
mov
sub
jnp
mov
pop
sbb
xor
loop
fcmovnb
cmp
jb
mov
sub
arpl
push
mov
sbb
xchg
call
push
sarl
les
jno
and
sbb
xchg
lds
sbb
jnp
repnz
imul
shl
loope
test
aad
sbb
stc
xchg
xchg
mov
imul
aas
inc
fcmovnbe
mov
bound
lret
push
orb
in
jmp
in
pop
pop
xchg
repnz
scas
lock
xor
outsb
call
dec
add
or
imul
sar
stos
and
insb
jb
rcll
rcll
pop
out
jbe
mov
std
mov
lcall
gs
lods
push
repnz
dec
jns
xchg
popa
testb
jp
dec
sub
jg
cwtl
ss
popf
popa
rcll
int3
jg
mov
xchg
bound
jae
scas
outsl
shrb
outsl
in
shll
out
and
lds
popf
arpl
cltd
ret
mov
push
mov
mov
xor
dec
push
push
mov
loop
scas
cmp
and
adc
add
mov
mov
aaa
out
xor
mov
and
sarb
mov
push
mov
cltd
testl
addr16
mov
jg
jbe
ds
out
cmpsl
jo
in
iret
imull
repnz
pop
aad
imul
sub
adcb
sub
jecxz
push
ja
icebp
data16
push
ss
pop
arpl
inc
aad
shl
or
clc
xor
pop
inc
or
mov
aas
shll
cmp
mov
pop
mov
test
sub
sbb
and
xchg
mov
pop
neg
xchg
mov
scas
lret
movb
mov
xor
pop
push
fimull
xchg
push
aam
jo
pop
bts
inc
push
inc
dec
and
dec
sub
in
jnp
test
scas
and
ss
xor
sub
mov
push
movsb
jo
sbb
das
sub
add
stos
test
cmp
lret
adc
aam
sub
gs
out
sbb
mov
ss
xchg
push
mov
lock
add
sub
xchg
sbb
jge
cvtpi2ps
sub
lcall
add
lret
sahf
or
fistpl
subl
adc
mov
pop
jbe
ss
mov
imul
jae
addl
out
jno
ljmp
add
mull
push
ljmp
xor
stos
xchg
push
ja
sbb
and
shl
outsl
inc
jae
xchg
cs
movsl
test
sub
mov
clc
pop
mov
xlat
adc
add
scas
divb
outsb
jnp
xor
incb
sbb
lods
add
in
xor
xlat
ja
sbb
jne
jg
hlt
out
in
mov
out
orl
sbb
int3
adc
xchg
push
xchg
fisubs
jp
popa
lcall
sub
sub
scas
or
lahf
and
into
adc
mov
jnp
or
push
nop
test
sti
add
mov
jge
imul
sub
leave
adc
sbb
out
das
add
xor
insb
cmp
cmp
loopne
jecxz
cmp
jae
ljmp
mov
add
add
sub
dec
push
stos
popa
nop
jl
xor
jecxz
xchg
loopne
subb
or
jl
sub
out
sub
xchg
lock
and
out
mov
adc
insl
lcall
test
xlat
sti
addr16
jbe
icebp
je
mov
pop
pop
mov
mov
in
xchg
xor
stos
arpl
daa
mov
scas
stos
and
mov
mov
dec
cli
cmc
inc
add
add
test
movsl
decb
or
data16
fwait
lret
clc
lcall
pop
sbb
mov
or
clc
popa
ss
jo
xor
sbb
mov
sahf
insb
or
imul
fldt
pop
xchg
pop
in
mov
adc
cmpsb
xchg
mov
test
inc
mov
mov
rcr
shrl
daa
rcrb
ret
sbb
dec
xor
test
cmpsl
push
cs
pop
je
push
mov
nop
loope
loop
and
scas
push
out
ficoml
pop
push
in
lcall
inc
push
adc
pop
mov
cmpb
jle
in
dec
push
popa
sbb
lods
sbb
mov
mov
adcb
adc
ss
icebp
jp
es
cmp
pop
or
shrl
jmp
push
mov
hlt
inc
xchg
sbb
insb
fistpl
jne
cltd
dec
cld
cld
pop
push
lahf
mov
aam
loopne
xchg
dec
add
popf
leave
sub
out
arpl
inc
es
int
mov
popf
sbb
xchg
fcompl
das
mov
lock
dec
insb
das
dec
repnz
call
sbb
icebp
mov
mov
push
loope
cmp
and
or
test
push
jo
and
cmc
cli
into
pop
dec
push
add
fcomp
sub
shlb
push
jnp
movsl
out
push
jmp
push
das
dec
in
addb
cmp
cmpsb
sbb
xchg
pusha
lret
xor
inc
push
push
xlat
out
lret
mov
pop
jbe
and
sbb
dec
icebp
dec
push
shll
popa
sbb
lods
adc
xchg
stos
push
stos
je
int3
push
movsl
pop
rcr
int3
flds
incl
inc
adc
outsb
pusha
pop
jmp
test
jl
insb
adc
inc
xchg
andb
lret
mov
cmp
mov
into
jp
pop
js
mov
aam
es
xor
push
xchg
sub
in
mov
div
lret
push
adcb
or
andb
mov
bound
xchg
movsb
leave
inc
mov
out
pop
pop
mull
pop
or
jg
add
lods
rolb
and
outsl
sti
sbb
arpl
ja
jp
mov
andl
mov
es
vpsllq
inc
mov
pop
movsl
dec
push
adc
inc
and
xchg
test
lret
nop
outsb
dec
fdivs
mov
jle
hlt
lds
repnz
adc
mov
dec
lret
mov
sti
daa
popl
fsub
adc
push
lea
dec
push
repz
fcmovnb
adc
add
popa
xchg
outsb
sub
loop
cld
outsb
icebp
dec
jbe
adc
or
in
fisubrs
stc
aad
pop
les
fsubrp
mov
out
test
scas
mov
xchg
jno
addr16
mov
sub
mov
mov
jle
xchg
and
out
mov
gs
in
mov
cmp
jg
insb
push
pop
jge
test
cmp
mov
cmpsl
lret
xchg
mulb
shll
sbb
mov
inc
in
pop
and
dec
sub
inc
andb
add
test
mov
scas
jns
and
push
pop
cmpsb
in
pcmpgtd
std
jns
xchg
mov
push
and
sbb
stos
mov
sbb
mov
mov
fisubrs
and
adc
fsubs
repz
inc
mov
adc
push
js
pop
add
es
test
pop
ret
mov
fcmovbe
cltd
jo
shrl
dec
adc
and
adc
or
xchg
outsb
jge
xchg
adc
cld
xor
mov
ljmp
xchg
fs
js
add
fmuls
pusha
repnz
pop
cmp
hlt
push
fmull
cmp
mov
sbb
mov
or
pop
inc
dec
clc
loop
bnd
lods
push
inc
stos
gs
into
fs
sti
pop
mov
mov
mov
push
out
push
inc
jne
add
pop
add
ds
dec
and
or
jecxz
mov
out
in
std
jmp
mov
rcrl
xor
or
in
test
sbb
jb
pop
fadds
cli
add
or
adc
inc
dec
test
adc
xchg
pusha
fldt
mov
ret
sbb
mov
mov
inc
mov
mov
out
adc
test
and
je
out
and
sbb
insb
fistpl
sbbl
pop
js
push
xchg
in
inc
cs
mov
int
mov
push
lahf
sbb
fcmovne
cmp
movsb
cwtl
xchg
ret
repnz
cmp
mov
xorl
xchg
sarb
dec
adc
shlb
dec
fwait
in
test
and
popl
mov
hlt
mov
jp
push
stos
lret
mov
push
xchg
leave
mov
or
test
pop
les
lods
ds
test
cmp
jbe
clc
inc
fxch
shlb
stos
inc
mov
mull
jo
sub
std
and
pop
sbb
incb
fs
rcrl
xchg
repnz
xor
test
mov
cmp
mov
dec
add
dec
clc
xchg
mov
scas
cmc
in
and
lret
push
and
movsl
or
and
std
jp
add
jnp
add
xor
add
out
push
adc
out
xor
cmp
pop
mov
jno
dec
outsl
mov
push
sbbb
test
pop
dec
es
mov
mov
wbinvd
lret
das
fcmovnbe
dec
inc
das
sub
imul
movsb
inc
push
sti
jo
imul
scas
test
int3
xor
jae
repz
test
and
loop
jle
cmp
or
in
call
mov
ret
pop
or
scas
aam
out
out
dec
or
inc
movsl
es
pop
leave
insl
or
add
jne
jmp
in
inc
mov
xor
cmpl
incl
pop
push
mov
mov
mov
mov
pushf
cwtl
daa
movsb
xor
jb
das
ljmp
scas
mov
push
fnstsw
xchg
aaa
inc
mov
mov
dec
leave
pop
or
aad
ss
push
mov
ss
lcall
and
aaa
stos
out
adc
or
jge
push
xchg
jmp
in
iret
fmuls
mov
or
insl
pop
pop
dec
jmp
lret
dec
cwtl
pusha
mov
nop
int
fsubs
and
sbb
push
pcmpgtd
lock
inc
xor
pop
insb
idivl
pop
or
push
inc
push
mov
mov
xlat
into
jae
sub
sti
jecxz
inc
push
testl
iret
inc
fildll
rorb
mov
adc
pusha
pop
sbbl
enter
mov
in
stos
jne
adc
daa
push
loopne
cld
cmp
or
in
and
out
sub
pop
arpl
test
rorl
pop
dec
or
inc
and
xchg
pop
and
xor
mov
mov
mov
push
inc
ss
and
or
hlt
push
sbb
test
cmp
sub
mov
and
fst
cwtl
leave
jne
xor
mov
lods
lret
xor
mov
push
sbb
xor
aas
mov
xchg
jg
sarb
sub
jle
mov
mov
rorl
lret
push
mov
imul
cld
repnz
rcl
nop
fcomi
imul
jmp
int3
call
and
jmp
mov
cmpsb
inc
push
fnstcw
inc
data16
xor
adc
lea
sbb
mov
lds
js
mov
std
dec
popa
lods
rclb
jb
xor
and
in
or
push
adc
mov
pop
cli
popf
lcall
cmp
dec
add
fidivs
adc
and
mov
fsubp
test
or
aaa
mov
cmpsl
adc
aam
insb
pop
mov
into
and
xor
jns
adc
je
movsb
and
icebp
les
bound
jb
cmpsl
shlb
testl
xchg
sbb
jp
fisttpll
jg
mov
xor
pop
push
mov
stos
adc
sub
loope
mov
adcl
inc
imul
sbb
or
dec
int
and
psubd
xlat
pushf
addl
das
jg
xchg
or
fs
add
fists
pop
pop
sbb
fwait
mov
cmp
push
push
je
rorb
shlb
mov
push
int3
jge
cli
imul
cmp
jp
ds
das
cmp
movsb
movsl
mov
or
sub
mov
lret
jp
js
add
or
loop
adc
pop
sar
pop
jns
or
pop
xor
sbb
xchg
inc
pusha
es
add
cmp
lcall
cmp
adc
stos
xor
add
cmp
inc
aas
xchg
mov
pop
jo
lock
test
dec
xchg
mov
pop
sbbl
std
call
sub
pop
iret
or
add
ljmp
sub
jb
cmpsb
push
mov
or
mov
xchg
jge
cmp
imul
mov
mov
adc
test
pushf
jns
mov
cltd
dec
pop
movsl
in
adc
mov
gs
sbb
call
inc
push
sub
shrl
adc
or
mov
xor
clc
push
dec
inc
push
sub
and
sub
fstpl
and
mov
push
js
call
stos
add
cwtl
push
or
xlat
fwait
pop
mov
or
mov
mov
fcmovne
sbb
mov
lahf
les
fldenv
jo
jno
adc
or
adcl
shrb
fwait
push
jno
pop
jne
mov
aas
mov
ds
and
hlt
mov
inc
andb
adc
sub
jb
divl
jmp
sub
mov
jnp
adc
ret
insl
inc
cld
inc
cmp
enter
mov
push
push
mov
daa
outsl
sbb
or
std
or
shrl
movsb
outsb
xchg
stc
je
add
push
inc
repnz
mov
sahf
mov
or
mov
popf
cmp
adc
add
pop
call
in
sub
add
mov
xchg
fldcw
sbb
xor
ret
aad
mov
inc
or
pop
sbbb
mov
push
or
notl
push
cli
mov
inc
into
dec
pop
shll
test
sbb
mov
xor
cli
push
call
sub
xchg
mov
out
arpl
push
lret
aam
jns
jo
adcb
mov
dec
xor
adc
add
push
bnd
or
les
stc
rcrb
in
jns
and
mov
shll
scas
or
outsl
add
in
xor
aad
sbbb
out
es
ss
addr16
xchg
sub
add
adc
dec
std
add
out
lcall
xor
or
adc
push
jbe
data16
sbb
test
sub
mov
sbb
fcoms
lcall
adc
xchg
clc
sti
jo
pop
push
mov
mov
adc
leave
xchg
adc
dec
mov
jnp
pop
xor
add
add
sub
mov
mov
dec
xor
sti
mov
insl
pop
movsl
push
xor
mov
and
dec
mov
mov
push
lcall
sub
mov
adc
fisubs
faddl
filds
cwtl
sub
pop
roll
jbe
jnp
or
dec
aas
fs
loopne
es
sarb
sbb
insb
or
cmp
or
push
mov
shlb
movsb
jo
out
leave
mov
jp
outsl
cmp
dec
jl
ja
fdivs
lahf
push
push
xchg
aas
mov
test
ds
loop
mov
mov
popa
ja
xlat
and
and
nop
ficomps
inc
push
lcall
loop
cmp
out
mov
out
inc
in
out
push
inc
jno
jb
mov
push
xor
stos
xlat
stos
sub
xor
ffreep
inc
jmp
popa
mov
or
xchg
shlb
push
adc
adc
dec
lea
mov
clc
add
ficomps
dec
push
mov
inc
push
in
jne
dec
out
fistps
fsubs
loopne
loope
js
pop
and
ja
aas
test
mov
push
xor
imul
mov
xchg
fimuls
hlt
mov
jecxz
cmpl
jg
and
jmp
xchg
adc
fcmovu
mov
pop
fdivl
sub
adc
xor
sub
add
inc
or
xchg
cs
into
lret
popa
sub
push
push
push
mov
out
cli
mov
jne
mov
adc
pop
icebp
fld1
pop
rcll
jmp
dec
inc
or
dec
cmp
out
inc
inc
sbb
sti
leave
or
imul
sub
fstl
push
sub
mov
stos
and
js
lods
test
shlb
pusha
and
adc
jge
mov
xor
mov
bound
mov
repz
pop
out
lds
daa
rorb
sub
dec
test
pop
push
cmp
xchg
jbe
rcr
cmp
jge
iret
loop
mov
cmc
mov
xchg
lret
pop
jnp
add
pop
and
int
sbb
xlat
xchg
adcb
stc
cmc
fcmovbe
cmp
sbb
daa
dec
loope
inc
mov
mov
fdivl
nop
pop
imul
dec
sbbb
adc
adc
mov
mov
jmp
xor
xor
ljmp
mov
pop
cmpsl
into
shll
cli
mov
out
ljmp
dec
sub
jmp
sub
nop
dec
cmp
imul
orl
inc
push
scas
pop
mov
sbb
test
pop
push
push
mov
push
imul
xor
xor
or
sbb
adc
mov
insb
mov
aad
repnz
jns
fs
repz
ficoml
adc
and
mov
repnz
add
sbb
out
dec
enter
jl
fmull
mov
and
iret
add
mov
imul
inc
xlat
stos
repz
lock
pop
repnz
jbe
je
daa
fcoms
push
sti
out
xor
sbb
pop
sbb
int3
cmp
je
aas
loopne
mov
test
arpl
cld
subl
repnz
or
jge
cmp
and
push
fdivrl
sahf
push
repz
sub
wbinvd
into
pop
test
mov
push
stos
call
push
dec
jns
inc
stc
mov
and
lock
jmp
in
mov
repz
mov
sub
mov
mov
mov
int
fwait
cmpsl
or
subl
std
mov
or
subl
ljmp
add
mov
in
scas
cltd
inc
mov
push
in
fsubrs
and
repz
shrl
imull
es
mov
test
and
jo
repnz
stc
je
out
push
in
bound
mov
xor
push
dec
hlt
jle
loope
addb
inc
loopne
xchg
pop
leave
daa
fidivs
outsb
inc
sarb
xorb
add
sub
fisubl
add
mov
xor
test
push
pop
cmc
popf
push
test
cmp
lock
xor
cli
vaddsubpd
lea
mov
and
pop
fwait
pop
xor
in
push
ljmp
pop
lahf
lods
and
cld
enter
aam
lods
pop
or
out
jp
xor
mov
dec
clc
pop
orl
movsl
leave
out
mov
ret
sub
sub
mov
pop
int
and
ret
int3
xorl
scas
sub
jl
aas
pop
push
sbb
jge
stos
mov
mov
test
mov
dec
loop
adc
lcall
test
aad
cltd
cmp
ss
pop
xchg
xchg
and
mov
gs
imul
test
rcl
mul
dec
jp
xchg
fwait
mov
dec
xor
ja
push
int3
xlat
mov
movsb
out
leave
int3
insb
stos
mov
sahf
lahf
mov
in
mov
push
lret
int3
cmp
push
jmp
js
pop
dec
mov
push
adc
cmp
adc
sub
sti
cmp
xchg
test
dec
loope
dec
mov
shll
inc
mov
fsubl
imul
jns
sbb
push
nop
aaa
mov
jae
fwait
ds
call
cmp
cld
sbb
movsb
dec
add
mov
mov
sub
and
cmp
sub
jns
jo
shlb
punpckhwd
ja
xor
stc
sbb
xor
fmul
push
popf
daa
sbb
pop
call
icebp
hlt
sub
dec
mov
rcrb
movsl
cld
xor
int3
out
mov
inc
data16
pop
loopne
push
jge
inc
pop
adc
sbb
add
inc
pop
sub
ja
mov
fiadds
jp
sbb
add
push
pop
dec
fcmovnb
out
cmpsb
cmpsb
jnp
jne
mov
test
aaa
push
pushf
dec
call
mov
rcll
xchg
lea
mov
cmp
movsb
cmp
daa
rcrb
fnstsw
stos
mov
cmp
insb
addr16
cmp
dec
cmpsl
fmul
xlat
lret
xchg
jnp
daa
out
lgdtl
sbb
in
jbe
mov
jmp
imul
cmp
popf
mov
subl
cmp
popf
xchg
repnz
fwait
sbb
jne
rorl
cmp
add
add
cltd
cmp
push
sti
popf
lock
pop
dec
or
dec
lock
adc
push
dec
ret
and
dec
scas
pop
adc
xchg
test
pop
fldcw
jns
daa
popa
lret
movsb
in
xchg
or
imul
pushf
ds
mov
cmp
ss
dec
inc
shr
mov
inc
incb
xorb
xor
aam
pop
sbb
rorl
xor
std
scas
mov
pop
mov
mov
cmp
sarl
mov
jno
ss
cmp
mov
fwait
test
jmp
mov
push
repz
test
repz
ss
imul
mov
inc
mov
aad
mov
enter
notb
mov
hlt
rcrl
pop
rcl
mov
das
xchg
int
jmp
xchg
call
inc
cmp
or
push
popf
inc
lcall
imul
or
dec
and
mov
mov
push
into
sbb
int
inc
push
sub
idivb
das
pop
imul
aad
cmp
or
cs
mov
loop
arpl
shl
mov
aaa
mov
insl
jnp
bound
xor
gs
mov
out
popa
or
out
out
push
jmp
fdivs
test
repz
sbb
pop
sbb
movsl
mov
sbb
pop
sub
cmpsl
xor
test
cmp
iret
inc
inc
dec
cmpsb
jmp
shlb
daa
mov
loop
add
shlb
dec
push
aad
in
std
leave
stc
xor
lods
stos
mov
inc
push
fsts
jbe
sbb
xchg
xchg
loope
and
pop
aas
test
jae
pop
or
enter
dec
mov
lods
mov
fwait
insb
sbb
aaa
xor
ljmp
mov
rorl
outsl
icebp
jb
push
lods
sub
call
pushf
dec
mov
ljmp
sub
ret
gs
pushf
xlat
inc
out
call
mov
mov
sahf
inc
mov
xchg
cmpsl
adc
pop
xor
sub
call
add
cli
adcb
pop
pop
xchg
adcl
mov
sub
push
imul
dec
push
push
adc
ljmp
push
cld
or
iret
divb
leave
leave
je
dec
sub
daa
sbb
cmp
aad
jns
cs
push
push
inc
stos
leavew
pop
inc
jl
rolb
jb
mov
cmp
xchg
add
mov
cmp
sti
pop
cmp
ficoml
sti
and
lods
adc
xchg
enter
decl
or
sti
pop
jecxz
xor
sbb
pop
daa
adc
in
ds
mov
adc
and
mov
xchg
outsl
mov
scas
inc
push
cmp
mov
lock
mov
out
lret
xor
in
aam
je
jns
ja
or
and
test
stos
inc
dec
push
out
lock
or
sti
jg
ljmp
idivl
pop
loop
inc
pushf
in
into
popa
pop
dec
push
mov
fcmove
imul
addr16
icebp
jle
cmp
mov
test
in
adc
xor
xor
cmp
pop
imul
sar
leave
imul
pushf
jbe
mov
and
or
xchg
sbb
aas
aaa
cmpsb
sub
shrl
add
and
cltd
int3
xchg
lahf
popa
icebp
aaa
lahf
into
xor
xor
sbb
cmc
clc
repz
mov
sti
and
mov
adc
inc
push
mov
rolb
rcrl
push
rol
sbb
xor
inc
push
addr16
mov
lcall
add
dec
cmp
sbb
mov
lret
mov
mov
sbb
push
lods
xchg
aas
test
jl
cmp
add
adc
lds
xorl
xor
inc
ret
mov
jge
movl
loopne
mov
sbb
or
dec
jbe
pop
fisubs
sub
mov
push
jo
add
into
addl
leave
xlat
xor
mov
in
jmp
push
imul
and
jmp
jecxz
addr16
shlb
int
out
dec
sub
lods
sbb
inc
xchg
fdivs
aaa
pop
xlat
shrb
or
or
mov
sbb
ds
mov
lds
cs
or
gs
insl
decb
shl
jnp
lock
inc
sub
lahf
xchg
nop
rcr
lcall
lods
leave
dec
aaa
cwtl
fbld
aam
inc
xor
into
test
in
jns
mov
mov
mov
pusha
inc
or
iret
loop
addb
cs
scas
arpl
mov
mov
sub
and
cmp
jge
orb
adc
repz
sbb
rolb
fimull
lds
loopne
mov
sahf
sbb
and
call
outsb
hlt
data16
cld
enter
stos
addl
icebp
xor
push
cmp
mov
test
out
aaa
aas
or
sub
mov
cld
ja
stos
repz
mov
sti
lods
jl
maskmovq
idivl
jno
scas
inc
dec
jnp
shrb
push
loope
or
or
and
sar
bound
jl
and
das
mov
movsb
mov
popa
fldcw
shlb
negb
jp
sbb
addl
cld
loop
lret
push
mov
jb
test
mov
add
shll
xchg
test
xchg
icebp
repnz
xor
stos
inc
mov
out
xchg
jnp
sbb
out
clc
inc
fnstenv
popa
sarb
call
icebp
add
sub
push
inc
int
inc
push
stos
nop
repnz
test
inc
pusha
push
idivl
es
cli
movsl
fs
xorb
es
jl
pop
pop
je
call
popa
aam
sahf
mov
stos
sub
push
mov
cwtl
sub
sub
adc
jae
sbb
xchg
jg
add
test
push
pusha
fnstenv
mov
loope
jno
xchg
cmp
cs
hlt
mov
movsb
popf
and
lcall
xor
and
rcrb
out
push
or
pop
push
sbb
adc
xor
jle
push
sahf
sti
jge
je
shll
call
outsb
xorl
cmpl
dec
mov
push
sbbb
and
je
es
or
lret
insl
mov
cmp
rcll
mov
icebp
mov
cmp
cwtl
pop
jge
cltd
xchg
mov
in
mov
ljmp
dec
js
add
add
mov
shlb
xlat
test
stos
jb
or
es
mov
in
mov
test
rclb
cld
fldcw
xor
cwtl
or
loope
xchg
jl
xchg
in
sbb
gs
out
in
in
aaa
dec
fcoml
cs
cmp
outsb
dec
or
aad
mov
xchg
popa
cmp
add
mov
loope
ret
in
cli
ljmp
das
in
enter
or
cmp
stc
push
and
xchg
adc
negb
jmp
test
cmp
sarb
inc
adc
testb
jbe
test
adc
es
and
mov
jle
jbe
mov
mov
outsl
std
adc
lock
mov
lahf
adc
jg
pmulhuw
xor
cmp
outsb
jmp
jnp
icebp
mov
cmp
mov
fwait
insb
mov
xchg
pop
jo
inc
mov
aas
popf
arpl
sub
dec
add
sbb
inc
scas
test
cmp
dec
mov
pop
lret
pop
loopne
mov
pop
jo
into
cmp
testb
dec
mov
icebp
push
movsl
cmp
inc
jmp
mov
fwait
mov
fstpt
or
or
push
mov
shl
jg
xchg
pop
das
aas
xlat
pop
sub
sub
test
iret
lods
loopne
inc
jnp
add
shlb
in
jge
mov
jg
dec
outsb
outsb
dec
iret
sub
lcall
testb
cs
dec
push
out
lret
xor
cld
imul
dec
into
leave
subb
push
aam
sbb
mov
xor
and
inc
ret
scas
mov
sub
loope
pop
punpckhwd
stc
les
sbb
test
popf
mov
mov
test
xor
cmc
push
or
adcl
push
sbb
arpl
jecxz
sub
jg
sub
out
jns
stos
xor
dec
cmp
cltd
aas
xlat
mov
lcall
cmp
hlt
bound
inc
nop
sbb
int3
add
mov
aaa
sahf
push
push
add
data16
xchg
cltd
inc
push
sbb
bound
mov
and
into
in
in
in
adc
lea
inc
enter
mov
cwtl
xchg
jge,pt
mov
inc
mov
das
pop
fs
aaa
push
pop
shrb
jmpw
mov
aad
pusha
and
xchg
ss
cli
push
jecxz
clc
sbb
jmp
ja
push
jbe
sbb
inc
fwait
xchg
int3
or
mov
loope
add
cmp
mov
and
popf
icebp
in
adc
fwait
and
xchg
and
stc
js
inc
xchg
pop
js
sub
xor
mov
pusha
out
je
cmp
jl
or
mov
and
sub
test
ss
movsl
or
pop
cld
or
push
arpl
adc
pop
lods
adc
jae
jge
stos
test
fistl
repnz
mov
std
push
lods
int3
subb
test
stos
repnz
push
xchg
push
mov
dec
fisubs
mov
dec
sub
movsl
enter
into
jb
pop
dec
adc
mov
adc
imul
mov
test
and
jmp
xor
aaa
lods
fwait
mov
mov
nop
xor
jmp
xor
in
adc
xor
dec
pop
fwait
mov
add
lcall
sbb
je
cmp
fidivl
std
push
daa
lahf
xchg
shl
rcll
sub
mov
out
jg
jmp
ljmp
xlat
insl
andb
mov
negb
lcall
ljmp
arpl
push
sbb
cltd
mov
sub
les
shlb
cmp
inc
in
mov
loope
daa
mov
mov
mov
sbb
sbb
fcoml
jne
aas
rorl
lahf
pop
cmp
cmp
inc
cmpsb
mov
inc
movsl
enter
cmp
scas
sub
or
push
pop
call
pop
push
mov
sbb
ja
jb
jge
mov
xchg
mov
add
inc
push
or
cmp
stos
jp
jmp
repz
xchg
jecxz
pusha
xor
int
dec
sahf
sti
push
lea
sub
js
bound
inc
lret
insl
cmp
leave
outsb
pop
and
jge
mov
push
add
sbb
sub
jp
addr16
cmpsb
pop
sbb
jp
repnz
and
shl
out
push
loopne
popf
nop
cltd
cld
out
xchg
mov
mov
inc
lcall
arpl
xchg
outsl
and
outsl
lret
rcl
lods
inc
scas
jg
jg
xchg
filds
dec
xor
sub
dec
xchg
mov
ret
stos
fsubrs
pop
iret
insl
push
ret
or
cmp
call
mov
or
or
add
inc
aaa
test
ret
xor
aam
inc
or
je
aad
mov
fbld
xchg
stos
inc
jae
jmp
and
lcall
into
xchg
arpl
mov
shlb
lock
repnz
inc
cmpsl
adc
jno
loope
push
adc
push
repz
or
test
xchg
test
jnp
idivl
jne
mov
mov
push
pop
aaa
and
sbb
mov
push
cli
pushf
xlat
test
icebp
xchg
ret
push
cmp
les
cmpsb
mov
lods
mov
cmp
cmpsl
movsb
mov
movsl
movsl
jmp
addr16
xchg
gs
adc
dec
inc
dec
rcrl
jl
lods
push
inc
loope
push
jge
fs
xlat
push
cmp
inc
daa
lahf
jno
ret
inc
inc
jg
dec
sti
bnd
cmp
mov
imul
pop
push
shr
dec
dec
jo
movsl
mov
adc
pop
jbe
lods
ret
mov
shlb
ds
cmp
fs
or
xchg
dec
add
aas
daa
add
jg
and
pop
ljmp
out
jecxz
inc
jns
push
xorb
mov
jp
adc
xchg
mov
mov
stos
lahf
psubq
inc
ret
das
cmp
mov
rep
rcll
in
add
insb
mov
popf
fs
xor
std
ljmp
inc
cmpsl
hlt
or
rcrb
pop
mov
fmull
pop
jnp
adc
jg
mov
ficoms
dec
ja
xchg
in
push
lods
orl
lea
push
jno
sbb
popf
xor
outsb
xor
pop
arpl
mov
adc
dec
jmp
cltd
iret
inc
sbb
xor
push
aad
jl
sbb
test
adc
xor
cmpsl
inc
out
iret
les
adc
add
je
int
scas
hlt
xor
add
mov
aas
je
outsb
mov
call
lret
popf
ja
loopne
into
push
lods
mov
imul
sbb
add
dec
adc
shr
push
sub
adc
lods
dec
lret
or
sbb
inc
ret
cmp
aad
aad
cld
pop
loope
jg
mov
jbe
cmp
nop
mov
cmp
imul
daa
mov
idivl
xchg
xchg
push
cmpsl
addl
xorb
in
aas
lods
out
cld
mov
jns
xchg
arpl
pop
hlt
mov
mov
lret
push
jo
aad
xchg
dec
jo
mov
inc
loopne
enter
pushf
mov
xchg
jns
and
dec
xchg
or
sbb
notl
mov
test
data16
mov
push
lea
sbb
cwtl
push
mov
or
push
push
pop
mov
hlt
dec
xor
cmp
pushf
loop
enter
jne
jg
mov
mov
mov
popf
gs
cmpsl
xlat
rep
bound
lahf
jb
lahf
sti
lea
pop
fidivs
push
icebp
fldl
push
pop
rolb
ret
pop
or
lret
xor
out
pop
pop
jne
imul
push
jle
xchg
fisubl
sub
dec
sub
pop
cmpsb
stc
pushf
pop
xchg
nop
or
test
inc
xor
inc
or
idivl
jg
cwtl
test
into
jbe
mov
add
inc
sbb
pusha
popf
lret
xchg
or
jne
dec
enter
arpl
stc
gs
rep
enter
clc
dec
data16
mov
mov
jb
cmpsl
add
pop
mov
into
mov
cmp
and
inc
popf
mov
movsb
pushf
test
sbb
nop
int3
pop
add
das
ja
es
js
ss
je
mov
call
sbb
mov
jmp
xor
push
outsl
mov
push
adc
pop
jle
pusha
mov
adc
xchg
pop
xor
xchg
xchg
insl
cmpsb
sub
divb
dec
pop
push
hlt
adc
sub
insb
xchg
stos
test
jl
rclb
scas
je
loopne
test
add
jp
imul
rcrl
mov
call
lock
sbb
push
ds
inc
or
cmp
sbb
lret
lcall
jns
sbb
adc
pop
out
jle
mov
dec
popa
setae
shl
or
fs
outsl
nopl
cmpsl
jae
inc
sub
loop
test
je
repz
or
xchg
out
pusha
inc
xor
adc
or
jmp
mov
imul
pusha
xchg
xchg
pop
fisubs
fnstenv
and
and
mov
ret
shll
mov
int3
insl
fnsave
dec
daa
scas
dec
and
icebp
jl
inc
lock
mov
mov
cli
pop
inc
ljmp
pop
lock
in
test
insl
lods
mov
inc
imul
fistpl
dec
les
mov
sbb
xor
lcall
pop
mov
push
push
rol
sub
loop
pop
dec
stos
fdivrs
dec
mov
push
inc
lds
push
sbb
mov
in
and
test
daa
idivl
test
shl
adc
aaa
xor
clc
cmpsb
push
es
out
jmp
mov
insb
push
nop
inc
addb
add
and
cli
mov
negb
mov
shll
in
cs
mul
mov
lods
repnz
add
jge
dec
xchg
cmp
mov
add
adc
addr16
xchg
sub
xchg
jmp
mov
dec
push
inc
sub
push
adc
sbb
or
lret
fmull
clc
fbld
and
lock
ret
jmp
pop
dec
lods
adc
cmp
stc
push
test
popl
sbb
xchg
push
test
negl
mov
loop
mov
xchg
bswap
dec
cwtl
insl
jae
fidivs
push
popa
push
mov
mov
pop
push
adcl
pop
in
hlt
in
mov
push
loopne
sub
pop
xor
cmp
cmp
stos
cs
mov
pushf
xor
mov
mov
jb
movsbl
pop
lds
dec
ja
les
clc
jecxz
push
mov
sub
pop
stc
pop
push
mov
aad
mov
cwtl
xor
lock
inc
xchg
xchg
out
imul
inc
pop
dec
mulb
sbb
mov
sub
mov
data16
pop
jo
popa
add
stc
int
mov
xor
je
sahf
test
push
and
xor
insb
mov
loopne
sarl
inc
dec
movsb
icebp
shl
xlat
pop
adc
mov
or
fcomip
mov
scas
add
xchg
push
mov
jp
dec
lock
decl
mov
in
jle
push
scas
cmc
fsubl
jmp
das
movsb
mov
sti
mov
test
xchg
icebp
rorl
cmp
iret
jge
jo
or
inc
enter
nop
jbe
iret
faddl
cwtl
cmp
mov
lods
xchg
sub
movsl
das
push
sub
loop
pop
in
lock
nop
inc
mov
or
mov
leave
fcmovne
dec
hlt
lret
nop
or
pushl
mov
repnz
add
ret
mov
mov
push
push
ss
gs
sti
push
jae
insb
out
stos
jp
cmp
xor
and
movsb
inc
in
fdivs
push
mov
dec
in
xchg
outsl
xor
loope
icebp
cmpsb
push
pop
dec
ret
jb
pop
mov
fnstenv
jl
jge
push
pusha
jg
sbb
mov
push
pop
insl
push
mov
repz
sub
push
cs
jnp,pt
pushf
sub
xorl
mov
imul
cltd
push
xchg
mov
arpl
ret
sbbl
cmpsl
rcr
sub
add
mov
and
push
hlt
xor
pop
call
sbb
cs
in
pop
aas
fimuls
mov
mov
xor
les
mov
ds
test
mov
popa
sbb
aam
imul
ret
ljmp
push
ret
dec
int3
call
inc
daa
pop
loope
out
sbb
lds
push
mov
jmp
mov
and
adc
xorl
jg
jb
and
sub
or
sub
cmp
lahf
mov
sahf
adc
push
adc
jo
mov
or
rorb
ficoms
xor
cmc
jnp
xchg
mov
in
out
push
xor
cmpsl
xchg
mov
inc
int3
mov
mov
sahf
sub
aad
mov
testl
inc
dec
scas
cmpb
pop
mov
add
cltd
repz
les
lcall
aad
xor
mov
dec
repnz
dec
xchg
out
jmpw
fmuls
adc
ffreep
xchg
lret
lds
jmp
mov
fcmovb
mov
ret
mov
and
in
mov
call
pop
push
aas
or
data16
pop
cmc
sub
inc
outsl
mov
lahf
dec
cmp
pusha
mov
outsl
test
cmp
pop
adc
mov
and
out
fadd
ds
mov
dec
lret
popl
add
cmp
cmp
cmp
movsl
sub
in
rol
xchg
xchg
cmp
pusha
jecxz
mov
les
test
call
sbb
add
lods
js
cmp
add
xchg
dec
aas
mov
xor
mov
mov
aaa
sahf
enter
xchg
hlt
rcrl
push
int3
in
jno
mov
cmp
punpcklwd
pop
fistps
cmp
scas
insb
ljmp
sarl
jecxz
je
adc
jo
lock
sbb
dec
leave
pushf
sbb
jno
mov
add
xor
fs
test
into
dec
xchg
insl
inc
xorl
fisubrl
sti
xchg
push
xchg
lea
mov
aaa
stc
aam
mov
data16
fxam
nop
xchg
jb
fs
aad
xchg
hlt
pop
adc
add
xor
adc
inc
cmp
or
or
sti
ss
pop
sarl
test
or
pop
insl
and
sbb
sbb
out
insl
jg
hlt
cmp
mov
lds
call
clc
xor
mov
xchg
xlat
jle
ss
cs
mov
jecxz
dec
cmc
cmp
xor
gs
jg
adc
pop
cmp
mov
mov
pop
incl
lock
add
loop
jno
adc
call
sub
movsb
pop
imul
out
mov
hlt
sub
repnz
loope
lea
or
lret
pusha
add
jg
pop
mov
jle
clc
into
push
mov
jbe
shll
pop
push
dec
js,pn
or
mov
in
xchg
sub
popa
pop
nop
mov
add
xchg
xchg
dec
or
inc
out
cwtl
jecxz
ret
fcoml
or
or
mov
add
cld
aaa
xlat
loop
jmp
cmpsl
xchg
add
sbb
lahf
mov
movsb
test
jge
fidivl
into
dec
js
sbb
loope
mulb
xor
sbb
popa
dec
inc
jmp
push
stos
test
js
jmp
and
addl
cmp
dec
outsl
test
and
sub
mov
cwtl
inc
cltd
sbb
or
sub
push
xlat
xor
pop
pushf
call
into
es
lds
push
jnp
dec
xorb
mov
cmp
add
cli
add
mov
jge
sarl
dec
or
add
push
nop
popa
push
rclb
cld
cmp
outsl
out
pusha
add
in
cmp
xchg
push
andb
stos
add
mov
shr
pop
pop
lods
mov
shlw
xchg
rol
xchg
mov
and
enter
movsb
arpl
pop
stos
ret
int
imul
jmp
fsts
movsb
xor
inc
sub
jo
out
mov
sbb
inc
lret
xchg
or
nop
jecxz
pop
push
in
xchg
test
pop
cmpsb
sar
aas
negb
jo
frstor
and
mov
lds
lcall
adc
push
insb
andb
lahf
mov
xlat
pop
jmp
xchg
jo
dec
addr16
aam
inc
icebp
hlt
ret
push
int3
inc
push
xor
push
gs
iret
out
dec
mov
dec
cmp
imul
jl
mov
scas
ja
mov
adc
pop
push
cmp
pop
insb
and
iret
and
mov
sbb
bound
push
fisttpll
jbe
adc
cmp
scas
scas
xchg
into
or
insb
mov
outsb
cmp
test
rorb
sbb
cli
push
dec
pop
ror
mov
add
fistpl
xchg
inc
in
mov
xchg
inc
sub
cmpsl
divb
arpl
stc
xchg
xchg
insb
xor
ret
mov
inc
data16
mov
pushf
mov
sbb
add
cmp
arpl
cmpsl
xchg
das
push
outsl
push
pop
ret
jg
mov
sub
dec
sbb
push
mov
push
ret
sbb
roll
or
sbb
call
ss
push
push
gs
daa
fcoms
sub
adc
xchg
addr16
mov
and
int
lahf
mov
aas
pop
ds
mov
adc
mov
sbb
and
adc
call
mov
loop
pop
pop
dec
inc
add
xor
pop
icebp
cld
stos
and
or
or
inc
clc
jae
fildl
insb
sbb
sbb
popa
lock
push
mov
and
cwtl
fadd
addr16
dec
push
int3
mov
icebp
lock
push
ljmp
mov
iret
push
inc
add
inc
inc
scas
cmpsb
add
sbb
mov
mov
icebp
inc
sbb
lahf
and
out
fcoml
xor
xor
cmpsl
stos
mov
sbb
add
in
xchg
pop
push
inc
lock
pop
test
das
jge
jmp
adc
dec
mov
iret
xchg
jecxz
icebp
pop
dec
jno
pop
jae
xor
or
dec
xor
push
mov
test
aam
mov
push
pusha
xchg
out
je
fdivr
cmp
in
mov
mov
push
push
adc
frstor
cmp
movsl
notl
out
fwait
adc
sbb
dec
sub
lods
xor
mov
mov
adc
cltd
or
pop
dec
fdivp
scas
jecxz
dec
xchg
cmp
imul
neg
sbb
push
out
or
loope
lahf
js
aas
aas
sbb
push
cli
scas
stos
mov
mov
xor
pop
xor
div
cmp
push
lock
mov
pushl
aam
lcall
mov
outsl
inc
pushf
stc
stos
pop
into
cmp
dec
gs
hlt
xchg
lods
leave
lcall
roll
scas
push
add
and
mov
and
int3
lcall
test
push
pop
sbb
inc
inc
clc
es
push
fs
jle
xor
shrb
mov
bound
loop
adc
push
imul
and
push
inc
lods
inc
das
cs
fdivs
pop
sbb
aas
int3
and
cmp
jae
mov
orb
sbb
loope
movsb
arpl
dec
addb
add
push
inc
scas
fcoml
cld
or
pop
mov
sbb
mov
push
xor
cmpsl
ljmp
mov
lods
jp
in
mov
imul
jl
cwtl
mov
jmp
std
and
pop
push
inc
lea
imul
pop
fidivrl
cmp
sub
push
sbb
sbb
iret
fdivs
xchg
mov
add
mov
stc
inc
insb
sbb
jbe
in
xchg
mov
xchg
xor
cmp
sbbb
mov
shlb
popa
ror
out
into
jno
in
push
and
cmp
inc
push
pop
dec
xor
popa
orb
int
push
imul
mov
in
xor
push
stos
jb
jp
cli
ja
add
jecxz
mov
pop
les
hlt
pop
mov
jbe
and
adc
pop
arpl
jb
dec
and
xor
repz
inc
sti
push
in
stos
into
jb
out
sub
lret
push
enter
addr16
or
je
dec
roll
push
fldt
xor
push
mov
les
lcall
ss
push
mov
vmovmskpd
push
ds
adc
movsb
pop
cltd
push
adc
pop
xchg
sbb
aam
loope
fs
jnp
aas
sbb
pop
lret
popf
mov
mov
or
sarl
scas
ret
clc
ret
ret
pop
push
hlt
test
sar
mov
mov
sbb
sub
pushf
loopne
dec
repnz
movsb
inc
mov
fildll
repz
sub
mov
pusha
into
insb
jo
clc
jp
testb
daa
daa
mov
sub
push
add
inc
sub
dec
xchg
cmp
je
and
or
mov
adc
inc
add
xor
or
aas
mov
dec
out
mov
leave
xor
jl
iret
sub
in
push
mov
shll
mov
xchg
in
cmp
xor
jmp
aas
or
decb
in
pop
cmp
xlat
mov
pop
inc
dec
inc
mov
lods
mov
dec
outsb
add
sbb
dec
push
jp
or
xchg
pop
push
cmp
jae
test
in
and
inc
xor
ja
in
mov
test
inc
stos
bound
ficoms
sub
hlt
shl
lahf
negl
mov
jp
mov
imul
jb
stos
rolb
dec
dec
pop
insl
std
lods
cmp
xor
push
cmp
stos
push
fcomps
notl
xor
adc
mov
fsubr
sbb
movsl
test
cmpsl
sbb
fcoml
cltd
lock
xor
inc
insl
and
int
mov
dec
xchg
incb
cmpsb
pop
cwtl
inc
cmpsl
xchg
adc
ret
rcl
ss
pop
inc
into
loopne
jle
xchg
mov
dec
push
fs
mov
int
cltd
cltd
jne
adc
or
and
popf
mov
dec
fs
mov
cmpb
dec
sub
mov
in
pop
push
push
mov
scas
cld
mov
test
cmp
div
xchg
sub
push
xchg
or
sbbl
xchg
pop
lods
aaa
sbb
rcll
sub
pusha
xorl
jecxz
rorb
push
lds
ss
clac
lods
in
jmp
sbb
leave
aas
jp
inc
std
cmp
xchg
jbe
gs
lfs
adc
xchg
pushf
jle
gs
mov
mov
cmc
xchg
lret
pop
sub
mov
not
push
push
or
scas
jg
xor
or
xorb
push
adc
dec
adc
out
lds
icebp
dec
std
imul
jmp
xor
fists
ret
popf
sub
cs
sbb
and
push
xchg
jecxz
in
sub
popf
mov
call
popf
hlt
movsb
or
pop
lret
inc
dec
pushf
jno
addl
test
iret
pop
sarb
push
in
or
adc
mov
faddl
lret
xchg
ret
nop
fistpll
fs
call
adc
mov
out
push
rcll
loopne
add
imul
cmp
xor
pop
pop
sbb
adcb
jmp
mov
lret
test
or
lds
rclb
push
int3
jb
lea
mov
out
mov
mov
mov
push
jmp
shll
mov
adcl
mov
enter
and
push
mov
mov
jb
add
add
shl
cmp
outsl
pop
add
mov
sbb
int3
sbb
jno
arpl
das
adc
xor
jno
xor
fldt
in
out
idivb
ret
dec
in
mov
push
fwait
lods
insb
mov
cmp
or
inc
mov
mov
aaa
push
hlt
leave
sbb
ss
repz
inc
mov
mov
and
in
jne
jmp
scas
call
in
popf
xchg
mov
dec
mov
jmp
mov
mov
aaa
imul
rolb
sahf
loopne
inc
lds
aad
sbb
hlt
iret
ret
imul
add
ja
int3
xor
xchg
mov
ss
out
cmp
subl
sahf
leave
dec
xor
into
mov
xchg
jnp
shlb
rol
xor
sub
clc
jg
dec
lcall
ja
sbb
dec
je
test
mov
shlb
sti
add
fcmovne
jle
push
mov
jmp
cmc
sbb
hlt
xor
adc
mov
dec
push
cmpsb
fs
mov
pop
call
dec
fadds
scas
int
cli
test
pop
inc
inc
xchg
pop
mov
icebp
repnz
inc
insl
sahf
add
lods
cmp
outsb
pop
xchg
mov
sub
sub
rol
jnp
nop
xor
push
cwtl
scas
push
cmp
and
lret
stc
pop
sbb
cs
gs
rorb
push
jl
lods
sahf
add
xlat
cli
add
sbb
sbb
add
pop
jnp
mov
mov
adc
int
mov
fstpt
and
lea
clc
pop
test
out
cmp
push
aad
fmuls
in
aam
gs
hlt
sar
adc
fdivs
mov
xorb
arpl
jbe
fbld
push
dec
or
aas
inc
movsb
add
popf
fisubl
int3
push
ljmp
and
cmc
fwait
popa
mov
js
adc
dec
gs
inc
pushf
push
popa
xor
jg
inc
jb
fabs
mov
in
mov
pop
cld
pop
popf
imul
std
nop
in
cwtl
subb
stos
xor
inc
inc
ja
jmp
out
mov
imul
adc
dec
sbb
inc
cmp
xor
add
mov
adcb
call
imul
test
sarl
add
fisubrl
addb
mov
adc
imul
xor
mov
shl
filds
mov
icebp
sbb
pusha
mov
cld
shll
xchg
adcb
daa
dec
loop
push
dec
xchg
inc
lock
pop
sub
inc
sti
jp
push
icebp
inc
iret
dec
sbb
push
jmp
test
xchg
add
xor
je
and
mov
or
rcll
jbe
scas
shr
dec
nop
stos
and
insl
mov
daa
xchg
jae
inc
inc
push
ds
sbb
sbb
stc
jmp
out
int
addr16
in
addl
mov
into
fidivrs
fistpl
insb
lea
mov
adc
imul
shlb
popf
call
test
adc
and
xor
rorl
lods
or
mov
mov
mov
push
adc
das
jmp
enter
adc
jb
stc
and
push
pusha
bound
push
cmp
cmpsb
out
fs
into
test
xor
ret
cmp
mov
loop
fstp
sbb
bound
fisttps
popf
imul
inc
adc
shrb
sub
dec
ret
jecxz
out
mov
dec
imul
jecxz
sub
mov
imulb
shr
xor
test
sub
call
lret
jle
or
leave
incb
int3
push
mov
sub
mov
mov
or
es
rolb
xchg
stc
cmpsl
mov
push
push
inc
test
lods
out
jbe
mov
inc
int
and
insb
adcb
jb
mov
out
sub
sub
dec
inc
fstpl
test
cmp
sbb
mov
dec
dec
mov
sub
idivl
cmp
das
push
leave
aad
in
jnp
shrl
ljmp
lods
ds
mov
stos
bound
roll
and
jbe
lods
rcl
daa
adc
inc
aad
ret
int3
mov
dec
je
add
xchg
hlt
push
cmp
mov
sub
push
jp
fucom
dec
frstor
inc
enter
mov
insb
jg
push
or
in
xchg
addl
sbb
data16
pop
push
push
shr
push
clc
mov
lods
enter
int3
xchg
inc
adc
push
xchg
adc
inc
ret
adc
add
hlt
sbb
out
mov
jl
jo
jmp
sbb
jo
mov
sub
mov
sahf
mov
enter
js
ret
sarl
push
mov
push
xchg
out
or
ficomps
inc
push
data16
scas
imul
sbb
test
ds
addr16
loop
add
in
or
jo
test
dec
inc
daa
mov
inc
je
fcompl
or
xchg
jge
cs
push
lds
or
sbb
pop
out
inc
int
jecxz
dec
inc
lock
outsl
xchg
movsb
mov
xor
push
inc
leave
out
dec
adc
ds
jae
or
data16
sub
inc
push
jp
push
mov
mov
js
cmp
sub
mov
xor
pusha
pop
aam
and
pop
xchg
cmc
or
jge
jecxz
cmp
loopne
loope
mov
in
mov
xchg
xchg
xchg
or
pop
mov
jb
and
cmp
sbb
addr16
faddp
xor
sub
sbb
jo
in
xchg
test
roll
movsb
cmp
rcpps
outsb
xor
and
clc
ss
adc
jle
shr
or
mov
mov
std
mov
mov
sub
mov
mov
jb
mov
hlt
ret
in
inc
dec
out
xchg
jbe
dec
push
cmpsb
cmpsl
lcall
jae
sti
fwait
jne
push
xor
jp
outsb
adc
rcrb
addl
or
fisttpl
jge
pop
dec
inc
and
mov
pop
cld
mov
addr16
rcll
mov
test
push
sbb
lcall
push
lcall
sti
ss
or
popf
cmpsb
jo,pn
shlb
add
jecxz
push
add
sub
jecxz
arpl
test
ret
mov
push
data16
push
outsb
mov
dec
lret
sub
adc
decl
das
mov
movsl
mov
cmp
fmull
mov
sbb
fmuls
rcrl
dec
dec
cmp
lock
mov
or
idivb
mov
les
addb
pop
cwtl
in
mov
mov
nop
outsb
leave
jbe
mov
push
xor
and
jno
pop
shlb
pushf
push
idivb
in
js
ljmp
andb
stos
jp
push
jnp
xchg
add
inc
test
dec
out
cltd
or
enter
add
mov
popf
mov
cltd
movsb
push
xor
insb
cmpsb
inc
lret
in
outsl
dec
inc
loope
ss
pop
sub
fdivrl
sbb
mov
mov
fcoms
mov
enter
or
sub
fidivs
adc
aam
gs
inc
mov
sahf
mov
cs
or
cld
and
push
adc
or
mov
enter
push
mov
xor
sbb
xchg
cld
xor
cmp
sub
loopne
xor
push
cs
inc
xchg
clc
fdivrl
fisubs
cmpsl
dec
jle
sub
or
sub
rcl
xlat
repz
pop
nop
in
inc
mov
jge
jp
cmpsl
stc
dec
add
popf
ret
push
xchg
mov
xchg
das
add
data16
pop
std
jns
pusha
cmpsb
repnz
pop
fnsave
stc
js
cmp
pop
mov
cmp
or
pushf
fiadds
ror
insl
leave
adc
mov
fcmove
sbb
loopne
cmp
gs
out
adc
or
cmp
hlt
xchg
pop
ret
outsb
inc
stos
dec
js
mov
shrl
sub
loope
adc
dec
push
adc
movsb
dec
xchg
hlt
and
mov
cmp
es
sti
fcmovnu
or
sub
mov
sub
es
add
rorb
push
inc
inc
sbb
and
sar
push
call
jl
cltd
dec
mov
add
cmp
frndint
add
enter
xchg
test
out
sti
sbb
jg
js
jbe
xor
pop
and
in
mov
pop
fmuls
mov
insb
stos
stos
stos
cmpsl
mov
int
jae
orl
inc
mov
xchg
imul
push
popf
fsubrl
mov
push
scas
dec
lods
jnp
xchg
cmp
notl
mov
inc
fisubs
loope
fdivrs
shll
sub
mov
subb
mov
rorb
enter
mov
inc
mov
insb
jmp
mov
mov
pop
nop
popf
sarb
cmp
and
fwait
sar
add
scas
mov
lock
cmpl
and
aam
scas
push
dec
es
or
mov
fistpl
ja
mov
mov
or
xchg
jbe
push
pushf
jg
xor
shl
ret
dec
mov
les
mov
jae
cmp
std
jge
mov
lcall
out
pop
cwtl
lahf
jp
xor
in
inc
add
xlat
xlat
xor
ret
notl
test
add
inc
movsl
mov
fwait
popf
push
and
cmpsb
sbb
out
xchg
pop
jle
popf
mov
pop
mov
fs
or
loope
add
cmp
cltd
add
rorl
aas
sbbl
sbbl
and
inc
into
sahf
or
les
cmpsb
cmp
lcall
and
lds
insl
in
xchg
adc
dec
in
fldt
cli
sti
cltd
and
and
jo
frstor
mov
dec
rolb
pop
sub
jle
iret
imul
xor
mov
push
cli
movsb
scas
fxtract
insb
notb
sbb
jo
loopne
sarl
xchg
inc
cli
arpl
jnp
call
fisttps
jbe
or
and
cmp
testb
cmc
sub
xor
mov
dec
mov
sahf
cmpsb
orl
lods
aad
inc
mov
lcall
sub
xor
adc
mov
jl
push
bnd
test
mov
lret
dec
sahf
xlat
lds
xchg
sub
stc
sub
push
jne
jmp
les
aam
mov
repz
nop
xor
es
outsb
jae
shr
mov
adc
enter
testb
addr16
pop
mov
icebp
inc
aad
pop
or
shl
cltd
push
scas
and
inc
push
sub
aas
dec
xchg
mov
aas
push
insb
push
sbb
mov
shll
test
outsb
ljmp
jnp
adc
hlt
adcb
ja
mov
jmp
test
jnp
ret
cmp
mov
shr
add
ja
mov
sbb
push
and
fwait
add
repnz
cli
loop
xchg
ljmp
andb
mov
movsb
add
mov
es
mov
lock
sub
sti
adc
push
or
fnsave
in
mov
stc
aam
cmpsl
mov
mov
inc
cli
sbb
enter
push
mov
add
mov
hlt
ret
and
je
xchg
leave
inc
js
in
xchg
fs
lcall
cmp
fwait
in
pop
shll
fstps
fisubl
sbb
adc
cmp
mov
imul
and
mov
xchg
sbb
mov
or
hlt
and
and
xchg
jnp
mov
movl
fucomi
add
lcall
fstps
xchg
cltd
call
sarl
xchg
adc
mov
scas
gs
test
mov
gs
push
jg
int
mov
scas
push
mov
add
fisttps
fstl
mov
mov
outsl
out
iret
ja
sti
sub
fisttpl
lods
outsb
test
pushf
push
sbb
push
cmp
outsl
jle
adc
enter
pop
test
cmpsb
ret
shll
sub
dec
fsubp
mov
pushf
sbb
fistps
push
cmpsl
idiv
dec
jb
mov
inc
mov
mov
sarb
test
test
fs
daa
and
jp
cmp
mov
xor
scas
cltd
sbb
call
loop
stos
ja
or
and
xchg
pop
jae
pop
mov
mov
mov
inc
aas
lret
fistpl
ret
cmpb
ja
push
and
add
cmc
iret
xchg
gs
adc
test
dec
les
mov
scas
and
dec
mov
lret
inc
hlt
aas
mov
out
std
ja
ljmp
dec
ljmp
lret
mov
cwtl
mov
sub
out
adc
add
inc
insl
rclb
xchg
adc
test
in
sub
sub
sbb
arpl
cmovae
xchg
cmpsw
sbb
notl
std
dec
cmp
pop
fisubrs
adc
mull
lods
mov
aad
notl
sbb
jecxz
inc
addr16
aam
push
add
aad
adc
sbbb
scas
sub
sbb
jmp
jg
es
imul
xchg
repnz
outsb
pop
pop
mov
sbb
jnp
enter
fs
jbe
ds
std
bound
repnz
mov
call
pop
sub
xor
loop
lock
push
loopne
int3
or
int3
out
xchg
sub
cli
out
fidivl
or
rorl
cmc
or
xchg
mov
lds
mov
aaa
daa
xchg
inc
mov
out
mov
jnp
jecxz
cmpsb
jbe
lret
insb
sbb
mov
in
out
in
and
ret
ljmp
cmp
int
sbb
xchg
hlt
inc
add
mov
nop
movsb
jnp
mov
fsubr
jo
icebp
mov
stos
or
adc
stos
cmpl
sub
in
add
cmpsl
push
mov
fwait
jae
jae
mov
mov
cmp
hlt
xchg
mov
pop
jae
lea
call
and
js
xchg
jmp
fbld
and
cmp
jecxz
stos
daa
push
insb
inc
mov
jl
mov
ja
mov
imul
and
xchg
inc
add
mov
jb
decl
mov
mov
adc
dec
inc
cmpsl
cltd
imul
push
popa
push
dec
mov
cmp
add
ficoml
cld
cld
sti
daa
pushf
sti
xor
mov
pop
scas
in
jns
mov
idiv
jl
pusha
xor
cmp
mov
xchg
mov
ss
sub
mov
jg
lret
push
loopne
mov
add
shlb
xchg
fdivr
mov
mov
inc
stos
mov
xor
dec
adc
lahf
mov
pop
mov
sarl
sbb
push
sbb
scas
push
pop
std
fisubs
into
mov
js
mov
ljmp
jae
dec
pop
mov
rcll
pushl
xchg
or
mov
movsl
lahf
inc
int3
add
lock
sbb
cmp
int3
mov
jne
xchg
lods
push
test
pop
pop
jo,pn
pop
sbb
xor
xor
cs
in
add
xlat
cwtl
jge
jmp
dec
mov
mov
cmp
test
lcall
dec
fadds
rcrl
sbbb
imul
pop
jno
call
mov
ja
out
push
and
out
cltd
shrl
cmc
jge
push
cltd
dec
out
stos
adc
int
mov
repnz
sub
mov
gs
mov
cmp
loopw
pop
dec
inc
pop
dec
test
jl
pop
inc
cmc
aas
mov
es
dec
push
push
imul
insl
mov
enter
pop
hlt
sbb
xor
mov
mov
xlat
mov
mov
or
in
pop
rorl
cmp
data16
shlb
xchg
pop
mov
add
sub
les
and
rorb
or
push
push
cmp
ds
add
cmc
push
sbb
cmpsb
adc
and
and
push
idivb
jne
in
cmp
dec
jb
or
jg
adc
add
out
mov
ljmp
call
clc
lahf
hlt
fs
dec
xchg
cli
mov
hlt
dec
mov
and
and
inc
add
mov
scas
adc
jg
xchg
fstps
repnz
cmp
fcomps
mov
sub
cli
sub
sub
cmpsb
dec
test
in
push
out
jmp
mov
cmp
data16
and
add
js
out
jge
fwait
cmpsl
cmp
xchg
and
pop
pop
jg
pop
iret
push
fbld
shlb
or
out
xlat
add
mov
sub
rcll
pop
lcall
dec
lahf
into
push
mov
or
xchg
outsb
dec
inc
push
cmp
xor
movsl
das
push
call
aaa
repnz
push
cmc
repz
lea
std
pop
sbb
dec
int
mov
ret
sbb
jmp
dec
inc
mov
mov
out
lret
stos
ret
xchg
insl
sbb
jno
xchg
mov
xorl
xor
fsts
fwait
xor
sahf
movsl
das
stos
les
mov
int3
pop
jmp
scas
gs
ja
enter
fcmovnb
les
cmp
dec
and
sbb
lods
sbb
out
scas
prefetch
or
shl
cltd
fsubrs
adcl
mov
in
push
lcall
sub
xor
sbb
pop
pop
mul
test
and
fists
cmp
sbb
inc
and
out
sbb
add
outsl
cmc
cs
or
lret
mov
adc
sub
repnz
stos
mov
lock
cmp
aam
xor
dec
sbb
call
sbb
pop
insb
stc
inc
pop
mov
jo
add
mov
mov
jae
loop
dec
ja
xor
xlat
lret
fs
add
adc
test
cmpsb
pop
push
adc
add
orl
jl
loope
and
arpl
lcall
insb
int3
mov
mov
add
mov
lcall
ljmp
xor
push
adc
jns
fistpll
inc
xchg
sti
mov
push
cmp
mov
xchg
cmp
sbb
pop
sub
scas
divl
cltd
into
out
fstl
push
divl
or
clc
dec
out
push
clc
or
sub
xchg
mov
push
xor
pushf
inc
fs
aam
xor
fnstsw
jne
sub
cmp
xchg
mov
cwtl
lahf
cmp
mov
and
ljmp
push
movsb
adc
out
sub
jle
pop
pusha
repnz
push
add
xor
lcall
insl
imul
jo
rol
jo
idiv
js
cmp
lret
dec
jecxz
and
sti
sub
dec
mov
mov
add
ss
ljmp
aad
shrb
call
jne
aaa
jp
add
test
xor
jae
cmp
ret
dec
push
fwait
lods
sbbb
push
push
xchg
in
mov
xchg
jl
aas
jns
mov
mov
adc
mov
into
ja
lds
pop
cmp
in
mov
sub
stos
fldenv
mov
repz
pop
std
fnstcw
idivl
aad
cmp
adc
ffree
lret
xlat
jp
xchg
shlb
cltd
dec
sub
adc
push
fiaddl
sahf
hlt
mov
loope
xchg
ja
outsb
sbb
push
jmp
stos
in
push
ja
pop
test
and
mov
add
sub
clc
pop
push
xor
lds
pop
xchg
lret
sbb
ret
mov
cli
xlat
lods
sub
pop
add
je
pop
add
xor
fwait
aas
ret
fnstsw
jp
mov
adc
mov
in
jnp
xchg
in
ss
sub
imul
mov
mov
add
rorb
and
retw
jecxz
and
or
push
jl
mov
sbb
push
sti
dec
pop
in
shrb
mov
mov
mov
jecxz
mov
inc
add
fisttps
xchg
or
sub
cmp
mov
xchg
bound
push
inc
jmp
push
xchg
jp
xor
push
cld
stc
adc
push
jp
adc
mov
aam
or
jbe
into
push
mov
shrb
aaa
sbb
das
shrl
mov
into
in
sbb
mov
outsb
pop
test
xor
sbb
mov
imulb
and
je
js
dec
test
inc
gs
scas
fistpl
inc
or
and
ret
and
mov
sub
inc
lahf
xlat
push
jns
outsl
inc
pop
mov
ss
mov
in
xchg
jno
inc
inc
pop
paddw
xchg
lahf
or
jbe
shr
mov
repz
push
inc
sbb
pop
imul
insb
inc
iret
mov
push
les
mov
sub
pop
pop
push
inc
int
add
or
in
cmp
or
lock
push
daa
ss
lods
cmc
cld
scas
push
rcr
mov
mov
ficompl
mov
daa
inc
lea
xor
mov
mov
push
mov
es
cwtl
xchg
add
loope
test
jbe
cmp
cs
icebp
sbb
and
es
xor
jne
cmp
mov
lock
sub
lret
out
fs
dec
add
or
and
mov
or
cmpl
xchg
outsl
xor
cli
sub
icebp
sub
aas
lahf
lods
sub
out
iret
pop
sub
rcl
mov
jns
lea
push
ret
stos
pop
push
or
jmp
pushf
or
mov
clc
xchg
aam
repz
and
inc
outsl
or
push
mov
nop
inc
jl
out
imul
movb
pop
daa
cmp
push
rcll
fldl
inc
popf
cmp
pushf
lock
lret
jge
jmp
or
cmp
clc
addr16
nop
clc
inc
repnz
out
std
push
in
and
mov
jp
stos
jo
dec
fisubrs
xorb
popf
mov
pop
pop
push
aad
jg
je
mov
cld
dec
sbb
sahf
push
and
pop
inc
stc
cmp
xchg
mov
pushf
in
sarb
pop
cmp
and
or
xor
das
add
cmpsl
dec
push
mov
or
sub
sahf
test
xchg
add
pop
sbb
nop
jno
adcb
or
fdivs
pop
fidivrs
nop
or
mov
mov
lds
adc
aad
xor
aam
insb
jbe
gs
loope
in
loope
inc
or
sub
movsl
cmpl
adc
idiv
enter
push
or
movsl
xchg
add
mov
pusha
xchg
adc
shll
or
nop
mov
cmpsb
dec
std
sub
cmpsl
pop
and
or
sbb
in
test
pop
call
sbb
sbb
stc
jle
add
push
adc
sbb
loope
testl
mov
or
insb
imul
addr16
idivl
int
and
sub
rcrl
aam
je
add
mov
dec
pop
push
outsl
push
mov
stos
leave
xchg
icebp
mov
xchg
add
xor
and
lds
pop
mov
push
mov
sub
lcall
sub
sbb
pop
fimull
push
inc
shrb
mov
or
sbb
sbb
bnd
adc
and
gs
cmc
and
es
mov
ljmp
outsb
push
xlat
or
aas
jl
cmpsb
iret
sbb
lods
lret
jno
xchg
dec
cmp
aas
ret
mov
sbb
in
cmp
add
outsl
bound
mov
and
xchg
shlb
js
das
lcall
pop
in
sti
dec
xlat
pop
push
std
xchg
mov
imul
cmp
xor
push
sbb
inc
mov
xor
mov
test
dec
xor
test
int3
mov
cltd
iret
and
add
int3
iret
loope
sub
aam
pop
pop
sub
outsb
add
inc
mov
fdivrs
fucomip
sbb
iret
aas
mov
mov
jb
icebp
cmp
inc
pop
ljmp
pusha
push
and
xchg
push
or
xor
in
loopne
add
cld
ret
outsb
add
push
fsubrp
insl
fs
push
fidivs
lahf
shr
or
sti
sbb
mov
es
xor
add
xchg
mov
ds
dec
cmc
fcomps
inc
out
cmc
add
xchg
data16
imull
jno
rol
xor
shll
push
add
mov
pusha
fcompl
cmp
pop
xchg
push
movsl
gs
stc
sbb
data16
addr16
pop
pop
fildl
int3
lock
or
dec
sti
stc
add
out
xor
inc
bound
pushf
mov
or
mov
in
mull
push
pop
inc
jg
jo
mov
inc
in
pop
into
inc
adc
repz
mov
adc
rcll
and
rcll
pusha
xorb
push
cmp
cmpsl
mov
mov
pop
inc
mov
jmp
adc
xlat
bound
xor
push
cmp
js
les
jg
gs
push
loope
call
push
add
mov
nop
add
outsb
imul
aad
int3
leave
pop
dec
arpl
roll
adc
icebp
bound
movsl
push
movq
dec
adc
ret
sub
lds
mov
xor
call
fs
jmp
adc
popa
mov
dec
adc
ret
mov
and
mov
movsb
add
or
inc
pop
test
fistps
test
dec
mov
mov
mov
repnz
filds
ficompl
xchg
out
pop
jge
aam
dec
mov
inc
xchg
push
fisttps
test
pop
pop
pop
jg
mov
or
cld
jbe
pop
push
jecxz
inc
jp
mov
into
mov
fdivrl
pop
xchg
movsl
xor
push
out
cld
aam
adc
loopne
fcmovne
pop
enter
or
repz
mov
cltd
mov
add
jbe
jne
test
out
movsb
cmp
mov
incl
mov
out
out
mov
lret
mov
sbb
xor
mov
out
lret
push
jg
xchg
sub
sbb
inc
imul
pop
pop
fimuls
sbb
pop
pop
or
sahf
jg
jb
mov
dec
mov
pop
add
or
inc
icebp
dec
inc
insl
pushw
clc
fildl
adc
xchg
in
cmp
xor
outsl
ss
push
ss
jp
jl
rcll
fnsave
test
xchg
xchg
push
jg
inc
pushf
addb
push
sbbl
testb
pop
mov
jae
mov
sbb
pop
lock
scas
sti
and
sub
fmuls
or
gs
fwait
arpl
out
and
repnz
mov
add
pop
movsb
iret
out
inc
xchg
pusha
sub
nop
xchg
adc
xacquire
aaa
add
decl
lock
bound
xchg
mov
mov
divl
mov
add
repnz
in
aad
aad
mov
inc
cmp
mov
dec
inc
in
loopne
test
add
hlt
imul
test
jne
or
gs
cs
add
dec
idivb
jl
notb
or
mov
pop
divb
ss
push
lds
pusha
cmpsb
scas
cmp
stc
mov
or
and
fildl
mov
sbb
inc
or
aad
sbb
mov
adc
pushl
pop
dec
rcl
add
mov
xchg
aam
popf
fcomps
icebp
lret
and
ljmp
ss
in
scas
jle
iret
xchg
jecxz
jnp
mov
movsb
sbb
insl
or
cmp
fucomi
adc
lcall
lret
pop
sub
test
lods
in
fiaddl
xor
xchg
clc
daa
int3
xorb
fsin
addr16
xchg
mov
add
adc
dec
or
lods
inc
mov
sub
mov
cmp
in
mov
lock
test
pop
ret
or
add
faddp
or
jp
jle
aas
jno
and
testl
mov
and
mov
insl
jl
loop
pop
xchg
or
jb
iret
sbb
sub
or
xchg
in
xchg
and
mov
ficoms
roll
cmp
pusha
stos
rcrl
icebp
sub
data16
cmp
dec
outsb
lock
outsb
cld
mov
mov
adc
mov
and
imul
and
mov
fucomp
mov
sub
fs
sub
pop
adc
aam
pop
sbbb
jb
push
adc
xor
cwtl
pop
aad
les
mov
pop
enter
sbb
mov
ja
jne
int3
aam
push
imul
ret
decb
lret
int
icebp
mov
out
sbb
test
adc
cmp
dec
sub
cwtl
cli
dec
ss
nop
push
aas
mov
addr16
lcall
inc
hlt
and
fcoml
imul
xor
loopne
cmp
lods
addl
mov
and
insb
jl
loopne
push
mov
sub
jmp
dec
clc
enter
mov
inc
jl
jmp
sub
enter
ljmp
jle
dec
jo
testl
xchg
sub
cmp
pop
pop
mov
out
sbb
lahf
and
icebp
nop
lret
jecxz
push
cmp
into
test
mov
pop
std
inc
push
mov
stos
dec
jae
ds
mov
fcmovnbe
mov
std
push
pop
test
push
inc
out
mov
mov
mov
xlat
repz
into
pop
outsb
jae
out
shrb
arpl
out
sub
cmpsl
in
addr16
movsb
loopne
std
pop
movsb
or
dec
dec
movsb
in
add
inc
lods
jb
push
pop
in
dec
out
fnstenv
push
icebp
push
cwtl
xor
push
mov
sub
sbb
leave
sbb
jb
xchg
je
loope
sti
out
fisubs
fwait
es
mov
fists
mov
sysexit
call
fcomps
mov
mov
lock
mov
or
xchg
mov
icebp
outsl
add
push
cmpb
inc
sbb
ss
out
je
mov
push
xlat
stos
in
jle
jae
test
mov
jo
subb
sub
sub
xchg
gs
cmp
cs
in
pop
pop
notb
xor
xchg
loope
xchg
ror
push
pop
js
xchg
lret
pop
xor
jne
mov
and
mov
les
icebp
fwait
add
xor
and
pop
adc
adc
fsubrs
dec
iret
jb
jo
stos
pop
in
aam
push
scas
aas
jmp
ret
adc
jb
jmp
shll
lea
push
rorl
add
lret
pop
icebp
lea
mov
aaa
test
inc
and
or
adc
mov
fsubs
inc
lea
mov
or
sbb
inc
outsl
sub
xchg
push
test
stos
lret
sub
jle
mov
cmp
adc
add
rolb
fisttpl
xchg
aas
cmpsl
pop
sub
repnz
push
lcall
jo
mov
mov
cmp
jnp
data16
into
popf
loopne
sbb
mov
int3
enter
loop
sub
jbe,pt
test
jmp
setge
cs
mov
sub
rol
inc
sbb
add
cmp
test
jmp
xor
pushf
jecxz
cs
dec
shlb
cmp
fildll
imul
jecxz
rcrl
cmp
sbb
ja
mov
inc
in
sub
pop
cmp
fdivrl
std
loopne
push
inc
enter
xchg
inc
mov
xor
pop
ss
jecxz
push
imul
adc
mov
rcrl
ret
hlt
cmp
out
fdiv
and
adc
push
sub
int3
xchg
mov
inc
xor
test
dec
fucom
sub
out
jnp
lds
loope
subl
mov
fsts
mov
jne
pop
lds
mov
jle
test
mov
jo
cli
cmc
mov
daa
movsl
scas
shlb
cs
das
sbb
adc
int3
add
add
loop
sub
stc
mov
lret
pop
int
add
sub
sub
inc
loope
adc
push
fistl
mov
sub
fcomps
jbe
pop
cmp
sub
pop
add
scas
jmp
pop
jmp
cmp
adc
push
fcmovb
inc
scas
sbb
daa
fistpll
shlb
jg
idiv
mov
addr16
mov
jb
js
les
dec
mov
and
notl
lods
cmpsb
out
mov
test
test
insl
inc
and
jge
dec
cli
daa
dec
xchg
shl
cmpsb
jmp
pop
cli
push
pop
mov
mov
mov
mov
dec
xchg
dec
aaa
sbb
push
stc
sti
shl
out
pop
or
outsb
xchg
fmul
xchg
xorb
jno
or
dec
inc
pop
loop
sub
cmpsl
ljmp
cmp
adc
pop
out
cmp
adc
stos
jne
aas
jl
insb
push
je
mov
dec
pop
push
and
or
sbb
xor
mov
mov
push
push
cmc
jnp
imul
int
cs
in
je
jae
pop
adc
or
push
sbb
in
xchg
pop
fcomps
jnp
movsl
jnp
xchg
clc
sbb
mov
mov
mov
ja
cmc
bnd
leave
jns
jmp
and
xor
fbld
push
jno
out
ret
xchg
cmp
cmp
mov
movsb
mov
pusha
push
lods
in
mov
nop
into
cmp
sbb
in
pop
mov
inc
xchg
pushf
jns
mov
dec
cmp
or
lret
out
in
rol
xor
ljmp
scas
in
inc
xor
ret
adc
push
mov
cmp
enter
sub
cmpsb
and
adc
push
sahf
lea
push
imul
lds
incl
mov
scas
faddp
cmp
cmp
test
xor
adc
inc
jge
in
out
ss
xor
dec
jmp
fldenv
xchg
push
rorb
lret
mov
xchg
fbld
mov
xchg
push
test
les
lahf
aad
lock
pop
pop
mov
adc
jg
mov
call
aam
lock
notl
stos
push
jo
add
sbb
jns
mov
sub
test
outsl
mov
and
dec
loop
leave
add
clc
testb
inc
mov
rcrb
dec
les
mov
aaa
das
lods
add
or
adc
ss
sub
js
nop
adc
push
aam
arpl
cltd
bound
lret
xchg
and
cmp
sbb
and
cmp
out
and
jl
int
pop
shrl
out
and
jmp
and
mov
test
mov
or
mov
mov
add
push
or
stos
xchg
test
test
pusha
sbb
push
dec
adc
fadd
inc
hlt
lret
out
loopne
insl
cmpsb
imul
or
xchg
cmpsb
mov
enter
es
xor
cmpsl
push
js
jecxz,pn
inc
sbb
sbb
xchg
in
cmp
outsl
or
mov
pop
iret
mov
out
jae
daa
dec
mov
mov
mov
mov
push
fimuls
cmp
mov
cmp
lods
repnz
and
adc
xchg
loopne
pop
mov
leave
popf
add
ss
inc
mov
ret
jp
pop
push
in
outsl
fidivrs
push
pop
add
in
cmpsl
xchg
or
out
mov
mov
lcall
inc
subl
sub
pop
adc
cvtdq2ps
mov
cmp
cwtl
ss
rcl
nop
dec
movsl
mov
push
sbb
mov
mov
je
jne
test
and
pop
push
jns
imul
mov
lds
loope
mov
pmaddwd
iret
mov
aad
loopne
dec
pop
stc
dec
mulb
dec
mov
mov
std
mov
les
cmpl
out
pop
loop
sub
stos
add
jb
icebp
mov
dec
add
push
push
movl
je
mov
mov
fistpl
stos
inc
pop
shl
lods
inc
xor
push
aas
jbe
xor
jp
faddl
add
add
xor
les
inc
in
mov
xor
pop
jge
mov
lods
add
fldl
sbb
mov
adc
and
stos
mov
js
xorl
cmc
lcall
cmp
fs
adc
pop
mov
jo
xorb
adc
cmp
inc
dec
addr16
cwtl
jbe
sbb
push
pop
call
sub
stos
dec
addr16
xor
shr
lahf
push
pop
cmp
gs
sub
rorb
jbe
xor
sub
mov
fxch
mov
dec
repnz
or
cmp
cmpsl
lcall
sahf
fisubs
sarb
cmpsl
ss
push
mov
xor
pop
addr16
cmc
cmp
push
outsl
jp
xchg
fs
add
mov
cmp
test
out
inc
sub
mov
mov
adc
mov
adc
iret
jp
ss
in
sub
int3
fwait
or
imul
mov
push
xor
or
clc
lret
xchg
push
jge
mov
xchg
stos
iret
sub
mov
dec
ds
mov
into
sub
test
clc
mov
aas
mov
pop
nop
pop
adc
mov
popf
cmpsb
ljmp
enter
mov
les
lds
pop
jg
fsubs
jns
mov
pop
adc
cmpsb
mov
mov
mov
popa
add
xchg
pop
js
cmpsb
pusha
mov
aam
push
in
inc
fwait
lret
push
dec
sub
out
std
add
xor
sbb
xlat
ja
mov
adc
repnz
adc
mov
jb
cmc
push
lds
loop
pop
lcall
dec
int
stc
addl
icebp
push
lods
stc
adc
ficoml
lahf
testb
addr16
xor
mov
pushf
movsb
dec
and
mov
lods
mov
add
lea
faddl
xor
loope
xchg
mov
int
or
push
mov
inc
insl
flds
int3
and
dec
or
aas
dec
jmp
pop
icebp
jno
inc
push
or
and
mov
fsubrp
repnz
add
test
mov
inc
add
adc
sbbb
call
cmpsl
lods
rolb
cmp
push
or
cmpsb
dec
daa
mov
jb
jmp
xchg
and
aas
mov
je
cli
into
xchg
pop
stos
xchg
mov
push
das
or
in
mov
jb
sub
mov
lods
jmp
sub
or
outsb
sbbb
jecxz
push
mov
movsb
mov
rorl
scas
popf
insb
bound
out
fadd
test
jg
pop
sbb
or
shlb
lahf
adc
sbb
adc
shll
mov
js
ret
sbb
dec
push
jb
inc
aaa
mov
fs
rclb
push
adc
pop
cld
fwait
rcrb
mov
jp
push
lea
sbb
push
mov
add
add
ds
mov
sub
sbb
mov
fwait
push
imul
popa
cmpsl
mov
jo
mov
into
mov
lods
outsl
mov
out
mov
push
cs
sub
fiaddl
adc
mov
ss
mov
out
jo
je
xor
pop
xchg
pop
inc
clc
add
stos
in
sub
cltd
aam
cli
jl
jae
jecxz
inc
hlt
cmpsl
dec
mov
enter
push
inc
andl
pop
mov
movsb
subb
rorl
into
add
mov
dec
mov
fisubl
mov
shr
test
fs
push
mov
lcall
push
xchg
mov
push
shrl
das
xchg
adc
std
call
cmp
fcomps
cwtl
call
in
negl
in
stc
inc
push
cmp
jmp
or
push
cmp
xchg
imul
jno
sbb
adc
ja
cmp
xchg
sub
aas
sub
cwtl
mov
arpl
jecxz
mov
pushf
or
addr16
push
xchg
mov
push
out
repz
shl
xor
addl
rol
loope
enter
sub
fldz
cmp
shlb
sbb
aaa
mov
jne
jno
inc
push
ds
lcall
mov
mov
sub
test
stos
pushf
add
inc
jge
arpl
dec
clc
hlt
push
cmp
fbstp
push
js
sub
fsubl
dec
adc
inc
lahf
dec
std
sbb
and
adc
js
das
jne
decb
sub
push
shll
fs
out
hlt
dec
fxch
sarl
in
inc
mov
ss
mov
mov
adc
enter
in
ficompl
repnz
push
fwait
or
cs
mov
push
mov
jge
aam
adc
push
in
sub
fucomp
imul
cld
mov
cmp
fisttpl
roll
and
repnz
scas
aas
sub
mov
cmp
push
rep
aaa
and
jp
icebp
dec
sbb
mov
xchg
xor
add
repz
lods
push
dec
xchg
scas
push
sub
adc
xchg
out
enter
xchg
rorl
adc
scas
jle
add
cmp
dec
or
inc
mov
imul
out
jle
xor
or
cli
in
pop
leave
rorl
in
sbb
mov
jecxz
pop
push
jnp
mov
xor
add
pop
shl
std
mov
pusha
or
jge
mov
add
mov
add
xlat
adc
push
jmp
and
mov
or
test
bound
pop
xor
push
das
mov
pop
test
inc
sahf
cmc
in
push
decb
adc
movl
cwtl
fisubrl
popa
arpl
push
push
enter
sub
push
xor
test
fimull
pop
lret
leave
int
ja
je
adc
jne
and
mov
pop
sub
mov
mov
sar
aas
popf
xchg
lret
js
test
movsb
inc
add
out
out
sub
fcompl
xorb
test
jne
pop
js
aad
mov
lods
addr16
mov
mov
test
repnz
and
loop
adc
mov
in
cmp
mov
sub
test
fisubl
add
cli
mov
je
sbb
inc
mov
fidivrl
pop
hlt
jmp
daa
sub
pop
mov
and
arpl
jb
bound
and
popf
push
adc
xchg
cmp
push
je
cmp
mov
js
xchg
inc
sti
cwtl
pushf
mov
cltd
jb
jb
and
lods
outsl
ss
lcall
ljmp
cli
pop
movsl
xorl
or
adc
imulb
jns
push
xor
andl
jae
pushf
push
mov
xlat
mov
lret
cmp
cmpsl
arpl
xor
jge
shrb
out
xchg
mov
mull
jmp
cmp
mov
lret
loop
mov
cmpsl
push
test
xchg
movb
in
mov
call
lea
sbb
pop
test
xor
xchg
ss
repnz
out
dec
es
dec
mov
clc
sub
mov
mov
push
lahf
or
sbb
aaa
loop
add
les
das
shl
loop
and
mov
daa
idivb
test
outsb
cmp
stos
jecxz
xchg
scas
xchg
movsl
imul
xchg
cmp
inc
mov
adc
hlt
repz
sub
xor
fwait
lea
mov
sbb
dec
dec
mov
repnz
dec
out
dec
pop
xchg
insl
and
test
ja
pop
pop
shll
popa
mov
int3
xor
push
lods
movb
jno
dec
adc
mov
push
rorb
js
cmc
mov
xlat
ret
and
mov
push
inc
aas
outsl
pop
cmp
pop
sbb
je
clc
adc
mov
inc
xor
or
dec
pop
jo
ret
sub
inc
fimull
mov
aam
loope
pop
lods
lret
push
repnz
cmp
jbe
icebp
jge
inc
mov
test
andb
rorl
mov
or
hlt
cmp
inc
and
mov
cmp
loopne
cmc
scas
sub
pop
aam
in
or
mov
and
push
cmp
filds
loopne
add
xor
sbb
sub
mov
ret
push
jb
xor
pop
jae
outsb
test
dec
inc
dec
push
or
mov
fwait
enter
jmp
push
ljmp
xor
dec
jno
add
in
ret
lret
cwtl
mov
movsl
nop
lahf
add
repz
and
xor
push
xchg
cmp
jge
in
movsb
das
push
out
push
add
in
sub
out
daa
nop
out
lds
mov
aas
lock
xchg
jl
dec
lods
mov
push
in
data16
mov
lcall
lret
push
adc
pop
fwait
mov
aam
sbb
ficoms
or
and
in
shll
out
movsl
xor
out
pop
fwait
jne
out
pop
pop
cmp
pop
sub
pop
fucomip
loopne
push
js
fsub
sbb
outsb
fsubrs
mov
sub
aam
jo
mov
push
sub
and
js
add
mov
xchg
mov
xor
sub
idivb
push
dec
outsl
sub
push
or
or
jecxz
clc
mov
or
lcall
lods
sub
add
jbe
sbb
pop
in
mov
jnp
push
lds
aaa
loopne
jns
je
aam
fidivl
add
in
xchg
mov
push
cmpsl
adc
movsl
jb
adc
cmp
jno
pop
je
les
popa
adc
shl
or
jne
jge
push
mov
or
aaa
mov
adc
scas
jl
push
leave
mov
or
xchg
jmp
inc
xchg
pop
add
mov
mov
adc
fdivp
in
gs
pop
repz
pop
out
scas
jge
mov
adcb
pop
lods
jns
jp
sysexit
pop
cmp
rcll
test
bound
std
cwtl
add
fcomps
xlat
and
xchg
aaa
cs
cmpsl
bnd
jae
xchg
stos
cmp
dec
outsl
imul
pop
jnp
adc
movsl
les
mov
repnz
and
lods
cmp
leave
ja
or
or
mov
pop
or
add
test
inc
pop
pusha
outsl
addr16
nop
rcrl
leave
pop
ja
mov
add
fcompl
xor
scas
mov
jne
and
jns
sub
add
out
and
adc
outsl
stos
mov
pop
mov
es
jl
dec
jns
adc
mov
repz
cmpl
test
cmp
pop
mov
test
xchg
cltd
rclb
fwait
xchg
outsl
out
rorl
sti
lret
mov
movsl
lret
aas
test
lea
add
sub
cmp
test
push
add
leave
fsub
xchg
int
insb
jmp
inc
and
pop
clc
sbb
inc
mov
andb
mov
xchg
jmp
arpl
out
rorl
sbb
test
sbb
addl
sbb
dec
xchg
xchg
pop
hlt
ret
popf
push
and
xchg
xor
add
dec
loope
cmpsb
pop
fnsave
pcmpgtw
xor
push
xchg
mov
sub
lcall
fnstenv
and
arpl
jge
lret
xchg
aaa
loopne
or
out
notl
add
inc
pop
scas
push
imul
icebp
mov
addr16
mov
mov
mov
xchg
xor
mov
sub
jp
data16
mov
cmc
or
inc
dec
lds
jl
hlt
push
add
test
or
inc
rclb
in
sti
mov
dec
inc
add
jb
xlat
pop
ljmp
adc
loop
sti
out
xor
fwait
in
loope
and
xorl
add
mov
jecxz
mov
pop
push
sahf
xlat
popa
sahf
nop
sbb
jnp
adc
icebp
hlt
int
add
xorb
data16
or
and
les
sbb
jo
push
jo
adc
xor
jmp
lahf
jmp
fwait
imul
ret
inc
and
mov
popa
in
pop
dec
push
or
loope
inc
xchg
mov
in
xchg
bound
inc
push
xor
stc
mov
sub
mov
pcmpgtd
aaa
xor
iret
scas
ret
scas
sahf
xor
in
cmp
jb
push
sbb
outsb
scas
dec
shl
jg
cld
push
repnz
jp
lods
add
adc
daa
lret
fisubrs
adc
xor
ljmp
jmp
fnstcw
jbe
ret
clc
and
out
repnz
lahf
in
sbb
outsb
xchg
mov
xor
jl
aas
cmp
pop
pop
fwait
lds
mov
xor
and
cs
aaa
out
insl
inc
jp
aad
movsl
pushf
sti
and
cs
ds
sbb
or
je
mov
lock
xor
xor
pop
or
imul
and
rorl
or
and
es
jmp
dec
aaa
inc
jl
adc
dec
out
jl
mov
loopne
leave
mov
inc
mov
fiaddl
mov
mov
pop
loopne
inc
out
out
jmp
mov
repnz
loopne
fldt
pop
jae
and
ret
mov
push
add
xor
jns
sub
cld
movsb
mov
out
mov
push
arpl
xchg
sbb
hlt
subb
dec
cmp
dec
out
testb
push
andb
dec
leave
xor
mov
mov
mov
loopne
mov
xchg
mov
fcomps
and
stos
push
inc
fdivl
cmpsb
into
or
subb
ja
shll
push
pop
dec
ja
or
lret
add
inc
push
out
cmp
mov
and
xor
lcall
mov
in
mov
xor
jg
mov
and
stos
je
aas
out
dec
add
inc
repnz
repnz
in
mov
push
mov
mov
ffreep
fiadds
into
pop
pusha
add
push
dec
adc
push
pop
cmp
fsubl
sbb
or
add
imul
and
pop
xor
xchg
shlb
xor
xor
test
push
mov
mov
pop
jg
xor
idivb
aas
or
inc
add
pop
out
cmpsb
jle
out
popf
jmp
ficomps
cmp
out
jno
into
xor
sbb
or
mov
dec
push
imul
test
in
daa
pop
dec
mov
lahf
mov
xchg
fildl
mov
xor
inc
push
adc
lahf
lds
mov
ljmp
ror
jo
fs
aam
scas
fmulp
lods
notl
mov
mov
add
test
lds
imul
mov
adcl
sub
pop
mov
jo
lea
mov
adc
mov
int
fcomip
add
inc
jecxz
popf
dec
rcll
arpl
push
and
or
push
sahf
lock
cmc
dec
jns
dec
loope
movsb
rcll
dec
jns
gs
std
scas
adc
jnp
fs
insb
imul
cli
je
aas
out
addr16
xor
mov
xchg
mov
pop
mov
ljmp
loope
pusha
jp
shl
int
inc
lods
mov
pop
lods
cmpsb
pop
test
loop
mov
fwait
je
dec
push
sbb
fstl
fbstp
push
sbb
or
mov
xchg
xchg
scas
xchg
push
jge
lret
add
mov
cltd
mov
rcr
push
test
shlb
pop
cli
stos
fcoms
arpl
push
fcmovu
mov
xor
call
mov
inc
push
stos
xor
lea
inc
gs
lds
cwtl
dec
push
pop
jge
push
stc
add
push
jle
mov
mov
mov
adc
in
inc
cltd
dec
inc
inc
loope
push
dec
or
data16
rcll
and
das
jb
xchg
mov
imul
fisttps
dec
pusha
gs
ror
daa
orb
std
outsl
daa
jo
sbb
jmp
adc
jmp
push
push
loopne
insb
mov
loopne
out
mov
jg
xor
rorl
iret
scas
lcall
andb
or
jns
xchg
iret
cmpb
scas
movsb
mov
pop
leave
fsubrl
sarl
xchg
pushf
sub
sbb
jne
mov
sub
fdivr
adc
testb
sub
loopne
or
dec
arpl
push
movsb
sub
xchg
sbb
jbe
xor
sbb
lahf
cld
mov
test
pop
leave
cwtl
sbb
sbb
les
xchg
inc
lea
or
outsb
js
pop
xchg
sbb
mov
cmpsl
push
out
mov
lret
test
ficoms
push
cmp
or
das
pop
dec
fadds
aam
add
shll
add
xlat
int3
out
mov
lahf
or
push
mov
in
push
imul
out
iret
in
sub
inc
inc
shr
cmpsl
outsl
mov
in
lret
std
dec
data16
inc
je
adc
aam
xchg
lods
fcoms
movl
mov
mov
hlt
movsb
fmuls
push
fxch
jns
sub
sub
adc
imul
inc
push
call
mov
fstpt
outsb
mov
add
decl
enter
xor
and
sub
in
cmp
rolb
cwtl
daa
lods
fnstenv
adc
mov
lock
add
ljmp
push
sbb
je
cmpsl
push
pop
stc
daa
cmp
movsl
arpl
or
mov
dec
or
dec
les
inc
and
jmp
mov
dec
scas
mov
fdivr
test
mov
sbb
int3
rorl
mov
jge
pop
lret
int
stc
xchg
xor
jle
ds
jg
cmp
into
mov
pop
inc
jne
jmp
push
inc
cltd
stos
or
jne
add
clc
in
sub
les
nop
es
inc
mov
dec
adc
or
in
js
into
neg
xchg
pop
not
scas
pop
jno
inc
sbb
xor
scas
inc
subb
pop
ljmp
stos
cs
in
xchg
xchg
lods
push
stos
pminub
xor
inc
cs
mov
out
mov
push
outsb
ret
or
stc
pop
mov
adcl
loopne
inc
jg
stos
ret
out
popa
xchg
adc
pop
stos
cmpl
movsl
out
dec
cmp
rorl
adc
fstps
outsb
insb
std
push
adc
xchg
adc
rcll
dec
push
sbb
mov
ss
loope
das
sbb
into
icebp
lcall
decl
shll
aaa
push
adc
test
loope
and
xchg
mov
notb
inc
cmc
das
lahf
cmpsl
mov
ljmp
shll
in
inc
pusha
out
lcall
xor
dec
jo
cmc
fldt
mov
push
sub
pop
or
pop
mov
xor
aaa
sti
cmp
into
adc
adc
sbb
cmp
xor
adc
xchg
mov
arpl
dec
fmul
inc
or
loope
inc
or
leave
pop
test
fmul
cmp
cmp
xchg
push
cmp
xchg
and
rcll
mov
and
fbld
or
nop
test
mov
testl
int3
mov
scas
jmp
test
cmc
cmp
pop
stos
pop
lret
xchg
cmp
mov
aam
xchg
js
leave
das
mov
inc
repnz
lods
pop
popa
inc
inc
out
add
outsb
int3
push
inc
decl
les
inc
test
dec
inc
lds
dec
scas
lock
cld
and
sahf
inc
es
repnz
mov
out
mov
addl
or
inc
nop
sbb
call
push
cli
mov
scas
pop
jno
loopne
xchg
sub
lods
sub
arpl
push
push
loopne
stos
into
in
push
add
rolb
xor
ds
clc
les
mov
dec
push
int3
imul
out
loope
xchg
test
sbb
or
or
pop
mov
cwtl
lds
mov
pop
imul
test
mov
sub
jmp
pop
xchg
aam
lds
test
inc
push
cmp
in
adc
adc
jb
xchg
insb
inc
pop
mov
shl
cmp
je
decl
out
cmp
adc
jb
mov
stos
push
fbld
jno
mov
sbb
dec
vandps
push
popf
pushf
xchg
cmp
in
lods
sub
mov
nop
adc
movsl
call
daa
lods
aam
mov
push
mov
mov
lcall
and
push
sub
sarl
repz
jbe
rcll
jno
sbb
lret
or
xor
sbb
repz
mov
stos
sahf
mov
mov
je
inc
mov
mov
fiaddl
hlt
sbb
lret
into
in
and
adc
push
xor
push
jge
aas
push
lods
sti
filds
fldenv
pop
sahf
ret
mov
ss
lret
sbb
cs
out
sbb
testb
jne
inc
or
addb
and
aam
cmp
es
push
xor
arpl
push
dec
popf
insl
push
in
stos
mov
leave
imul
xchg
rol
sbb
add
or
xchg
test
das
test
jge
xchg
sti
pop
aad
xlat
iret
xlat
popf
lcall
cli
aaa
adc
ljmp
cmp
or
call
push
imul
test
pop
and
ss
int3
pop
pusha
xorl
testb
lds
xchg
hlt
cmp
pop
les
outsb
int
push
stos
ja
mov
xor
dec
seta
cmp
push
repz
test
xor
fnstcw
push
dec
and
dec
cmpsb
popa
test
dec
ljmp
cmp
jle
adc
add
sbbb
ret
mov
add
cmc
movsl
mov
mov
out
xchg
lahf
xchg
adc
and
mulb
adc
push
pusha
bndstx
mov
sbb
mov
mov
aam
add
pop
mov
cmp
jl
pop
test
ficoms
push
jb
pushf
cmp
fimuls
das
pop
int
adc
arpl
shrb
mov
sbb
lret
mov
cld
sub
aam
cmp
cmp
inc
outsl
sti
mov
inc
jae
insb
lret
andl
mov
cmp
insb
and
cmp
and
ljmp
femms
test
jle
and
lea
jae
enter
mov
xor
fiadds
sbb
imul
add
out
xchg
pop
int
pop
insl
aam
xlat
mov
fildl
and
aad
dec
aas
imul
sahf
stc
mov
xor
insl
mov
fdivrl
mov
xor
and
mov
xor
jmp
in
cli
sub
pop
jno
invd
shlb
out
lods
add
xor
movsb
out
push
aam
notb
mov
pop
icebp
sub
xchg
movsb
xor
sbb
xor
int
out
xor
rcrb
mov
add
mov
sahf
stos
mov
mov
and
fisttpll
mov
mov
mov
lahf
and
mov
lret
stos
subb
push
inc
nop
xchg
pop
test
mov
mov
repz
jo
adc
and
sub
repnz
mov
jmp
xor
mov
push
adc
shlb
and
in
mov
out
sub
sub
loop
adc
es
inc
dec
xor
ljmp
mov
push
mov
dec
jns
rcrl
in
mov
outsb
add
sub
les
inc
xchg
mov
inc
xchg
adc
adcl
dec
xlat
out
stos
mov
test
addps
ret
roll
decb
push
xchg
adc
fnsave
dec
xchg
pop
pop
mov
sahf
xor
in
je
inc
push
pop
clc
pop
stc
sub
add
dec
mov
mov
push
lcall
push
test
dec
push
jg
je
jecxz
sbb
ret
add
int
ss
sub
cmpsb
jg
adc
inc
popa
das
mov
fidivl
mov
out
mov
fidivrl
aaa
xor
dec
scas
ljmp
mov
xchg
adc
jns
xchg
ss
xchg
cmp
and
addr16
pop
or
xchg
jo
hlt
pop
sbb
add
std
shlb
push
dec
jmp
ret
inc
daa
mov
cmp
int3
push
mov
aas
addr16
push
popf
clc
repnz
loope
addr16
int
sbb
data16
xor
std
inc
call
and
ret
aam
xchg
add
daa
scas
ficoms
mov
loopne
inc
and
subl
aaa
add
cmc
and
enter
mov
mov
stc
mov
and
mov
in
mov
iret
push
xor
ret
dec
enter
mov
out
scas
sub
add
jne
sub
jg
and
mov
mov
cmovle
or
push
fdivrl
and
or
std
clc
sub
out
and
in
mov
andl
pop
mov
fildll
inc
loop
pop
mov
iret
ret
mov
inc
fidivrl
pusha
mov
sbb
mov
movups
pop
pop
ja
mov
sub
loop
xchg
and
or
test
or
push
cmp
faddp
cmpsb
cli
lock
jge
fisubrs
out
loop
pop
aad
hlt
mov
pop
sbb
bound
popf
fucomip
xchg
and
lods
or
sub
arpl
jns
addr16
mov
jns
dec
movsb
mov
fmull
pushf
ret
test
mov
xor
cmpb
jns
sbb
dec
sub
dec
ret
push
popf
rclb
mov
mov
adc
in
fdiv
mov
sahf
push
lock
add
lea
jae
mov
xor
or
test
mov
sub
add
mov
xchg
xchg
pop
les
push
jo
rolb
fiaddl
dec
cmp
stos
aas
sub
js
mov
aas
iret
shll
pushf
or
xlat
xchg
je
mov
es
outsb
cmpsb
daa
mov
lcall
clc
or
sub
jns
push
pop
test
dec
add
or
repz
cmp
mov
inc
lret
idivb
lahf
js
outsb
push
out
leave
ficoms
pop
hlt
sbb
lahf
daa
scas
mov
fsubs
mov
xor
jno
inc
shrb
inc
out
adc
pop
scas
ffree
inc
mov
out
jae
das
int
lret
movsb
mov
orb
dec
mov
xlat
pop
out
js
popf
dec
push
enter
push
push
xchg
loop
cld
cwtl
dec
outsb
loop
mov
bound
fnstcw
mov
stos
aaa
sub
das
bound
jae
fisubrs
je
jns
dec
or
hlt
out
lock
aad
xor
sbbb
ret
push
sub
popf
in
xchg
movups
jo
jae
adcb
sub
push
dec
inc
scas
insl
pop
inc
lock
cli
iret
int3
jmp
cmp
sub
jl
sarl
out
dec
pushf
push
sub
push
arpl
or
and
push
scas
cmp
stc
xor
xchg
iret
cld
sbb
pop
mov
xchg
push
mov
dec
push
scas
cmp
push
push
test
xorl
cmpsb
loope
nop
js
std
adc
jl
mov
push
pop
lods
xor
jnp
out
mov
cmp
mov
fstl
dec
in
imul
mov
add
call
dec
aam
sbb
sub
je
subb
jae
push
hlt
or
xor
xchg
sbb
jne
push
shlb
rol
fnsave
cmpsl
xor
push
addr16
cmp
out
or
fs
je
into
sub
jno
push
mov
outsl
adc
xor
lret
dec
adc
stos
leave
inc
jl
bound
repz
rolb
xchg
sti
loope
je
inc
ret
fstpl
pop
push
addr16
xor
stos
cmpsl
outsb
jmp
dec
popa
xchg
mov
test
mov
mov
bound
addb
mov
rcr
mov
xchg
dec
mov
js
outsb
inc
xor
fdivrs
stos
aad
inc
ja
mov
dec
lods
mov
xchg
push
xchg
lret
adc
push
mov
test
dec
mov
ja
mov
mov
push
data16
adc
shlb
push
pop
cmp
jno
leave
aam
mov
fstl
and
test
add
icebp
aad
ja
or
imul
cmp
inc
fcoms
pop
adc
mov
lds
inc
push
add
jno
adc
mov
mov
xor
fistps
loopne
lods
cmp
pop
rcll
jbe
js
cmpsl
mov
dec
or
or
mov
push
ss
test
rolb
fildl
lods
lods
and
xor
inc
inc
mov
fimull
iret
xor
clc
mov
pop
and
or
cld
outsl
sbb
shrl
jp
xchg
das
pop
sub
cmp
in
fisttpll
pushf
add
xchg
je
mov
icebp
jae
ss
and
repnz
xchg
add
pop
les
push
xchg
das
insl
ret
add
cmpsb
rorl
cwtl
inc
dec
lahf
mov
sti
dec
jmp
cmp
mov
mov
inc
ljmp
mov
adc
pop
das
data16
sahf
xlat
xor
xchg
lcall
push
cmp
mov
fwait
adc
fdivrl
movsb
pop
imul
insb
xchg
ljmp
mov
xrelease
jno
cwtl
mov
repnz
add
scas
fwait
push
push
add
decl
notb
mov
add
adc
pop
repz
inc
xor
out
jno
iret
and
pusha
aaa
adc
in
fwait
ret
cmp
out
xchg
jecxz
aam
xchg
outsb
lret
enter
dec
pop
in
and
jecxz
mov
sub
mov
inc
and
popf
je
pusha
mov
adc
shl
test
mov
sbbb
xor
je
mov
pusha
test
inc
xor
out
xor
dec
inc
in
jg
shl
mov
push
sbb
je
arpl
jae
dec
jnp
popa
mov
lock
idivl
sub
jo
and
dec
repnz
sub
addr16
mov
daa
call
adc
repz
xor
sbb
xor
xchg
sub
loope
aaa
or
mov
adc
and
sbb
ljmp
arpl
out
sahf
pop
int
ret
push
mov
xor
sbb
arpl
push
add
xor
js
mov
sbb
in
push
adc
xchg
insl
xor
adc
push
dec
adcb
imul
xor
clc
subb
outsb
addr16
fcoml
mov
subb
ret
cwtl
das
push
cmp
in
test
dec
test
and
movsb
mov
out
jmp
fdivrs
cmp
aam
arpl
test
pop
jge
or
or
loopne
push
mov
pop
scas
add
and
xchg
js
jno
mov
loopew
jg
call
jno
xlat
dec
mov
aad
sbb
lahf
jl
jae
fnstsw
push
aaa
xor
sub
and
dec
dec
mov
mov
stos
ss
mov
imul
add
or
pop
mov
mov
mov
aaa
shrl
mov
and
cmpsl
ror
leave
addr16
mov
adc
nop
testb
out
cli
and
pop
dec
jle
inc
inc
shlb
scas
loop
and
mov
xchg
xor
aaa
movsl
inc
icebp
jns
gs
pop
xchg
orl
cmp
lret
adc
outsl
sbb
mov
xor
das
mov
leave
mov
ud1
sbb
mov
push
jecxz
nop
ret
add
mov
jg
js,pt
ss
in
add
setb
in
mov
cltd
sub
dec
fs
mov
push
sbbb
in
outsb
pop
dec
outsb
xor
repz
loopne,pn
mov
adc
mov
scas
dec
mov
and
andb
adc
mov
pop
ds
fcmovnbe
sub
lock
push
pop
lret
aad
fwait
cmc
push
call
cmp
in
mov
xlat
fsubrl
bound
pop
adc
mov
std
adc
gs
mov
jb
repnz
mov
ret
and
jp
inc
fdivrs
dec
push
in
or
popa
push
aam
push
push
lds
mov
test
sub
add
movsb
test
rolb
xor
test
enter
fistl
push
int
movsb
pop
xor
sarb
out
xchg
jmp
outsb
adc
push
and
sbb
stc
mov
push
mov
test
dec
sbb
push
xchg
jp
call
wrmsr
cmp
imul
sub
call
add
enter
dec
test
cld
je
mov
cmpb
and
hlt
fptan
xchg
les
stos
lahf
jnp
pop
movsb
stos
fisubrs
adc
aad
pop
push
sbb
push
push
push
jle
xorl
adc
jne
xchg
and
pop
gs
cwtl
jp
cmp
rcrl
inc
movsl
xor
mov
stc
addl
jne
outsb
mov
sahf
test
dec
cwtl
xor
mov
lods
and
push
and
hlt
pop
jg
jmp
sub
mov
jbe
push
mov
pop
xor
lret
lea
shl
xchg
imul
inc
pop
outsb
inc
push
pop
jo
sbb
lret
das
mov
sub
pop
inc
repz
sbb
and
pop
cmp
inc
sti
call
and
inc
cs
pop
push
dec
call
repz
in
xchg
cli
sbbl
dec
out
inc
mov
push
jbe
cli
jne
mov
movsl
fidivrs
jg
movsl
sbb
rcrb
bound
cmpsl
jecxz
sub
add
fs
adc
and
adc
sub
and
pop
dec
and
sbb
addl
mov
mov
mov
pop
adc
data16
mov
cli
cmpsb
outsl
jmp
mov
mov
out
fs
pop
mov
sub
xchg
xor
aad
inc
stos
xchg
add
and
enter
aad
pop
ret
mov
loope
sbb
dec
jecxz
nop
sub
sahf
rcrl
adc
outsb
lods
lret
hlt
inc
xchg
fiadds
sahf
xchg
sbb
and
jnp
insb
les
arpl
decl
xlat
test
cld
xchg
fadds
add
inc
sub
mov
sbb
test
int3
inc
imul
incb
push
and
in
or
lods
mov
pop
push
ds
dec
push
jno
add
sbb
fmull
out
or
lock
scas
out
sbb
or
adc
cmp
hlt
pushf
xor
dec
mov
ja
inc
fstpt
push
out
sbb
sar
cwtl
leave
mov
mov
cmp
stos
jmp
cld
push
sbb
sbb
xadd
mov
sbb
cmc
rolb
lds
in
dec
stc
add
test
cli
movsb
mov
xchg
mov
sbb
fstp
inc
sahf
lret
push
pop
mov
insl
fmull
inc
fwait
push
push
dec
adc
ja
cmc
repz
ss
dec
jbe
or
out
loopne
push
popa
or
jbe
cmp
bswap
pushl
xchg
xchg
insl
ss
aas
imull
add
adc
cmpsl
lds
fisubrs
imul
mov
lea
iret
jecxz
sub
mov
cmp
outsl
xlat
inc
mov
fidivrs
lret
in
movsb
xor
popa
dec
mov
sar
scas
loop
orl
xlat
jno
cmp
jns,pn
jo
cs
arpl
sti
es
xor
xchg
jg
pop
dec
pop
jb
and
aaa
push
jbe
shrb
lret
xchg
mov
sub
rorb
jp
cltd
mov
xor
scas
dec
and
inc
test
les
adc
mov
mov
xor
loope
movsb
cmpsl
mov
cmpsl
test
or
push
and
out
je
stos
jnp
loope
insb
xor
and
mov
and
rcrl
in
push
mov
add
notl
jmp
mov
lods
lahf
fcmovbe
jmp
stos
ja
sbb
cwtl
cmp
jae
repz
sbb
in
and
jp
std
mov
jns
sbb
aad
insb
inc
jno
adc
xlat
scas
jmp
outsl
pop
shll
lcall
jmp
mov
popf
sbb
fildl
pop
call
mov
jne
out
test
cmp
xor
push
push
lods
adc
popa
pop
les
add
push
andl
mov
ljmp
cmp
in
out
andl
xchg
out
inc
inc
xchg
and
out
mov
ja
fidivrs
pushl
inc
jg
mov
scas
test
mov
mull
cmp
xor
lahf
cmp
sbb
sub
popa
mov
xor
add
jae
fprem1
dec
adc
test
mov
pop
gs
jp
test
fwait
in
loopne
enter
mov
cld
arpl
xorl
int3
mov
shr
sbb
mov
lahf
in
xchg
xor
push
mov
mov
cmc
pop
xor
mov
out
or
lret
jb
add
shr
ss
aad
lock
inc
cmc
outsb
lahf
sbb
push
push
mov
xor
dec
cmpl
mov
loopne
test
movsl
loopne
arpl
inc
inc
cmpsl
dec
sarb
mov
dec
ljmp
push
push
or
push
loope
pop
cmp
test
mov
cmp
jbe
inc
adc
clc
mov
pop
imul
test
mov
mov
ds
aad
push
pop
xchg
lock
out
sbb
sbb
push
scas
mov
gs
in
push
dec
cmp
push
sub
jecxz
dec
loope
push
mov
cmovns
fdivp
fcomps
shll
ret
mov
sbb
push
xchg
cmp
fldenv
iret
les
add
mov
loopne
mov
dec
jmp
jb
jne
xchg
jnp
sbb
mov
cmp
cs
in
sub
rcll
pop
xchg
insb
gs
ficoml
or
mov
inc
mov
ja
mov
sbb
daa
fdivr
imulb
dec
icebp
mov
mov
inc
mov
push
cltd
iret
mov
test
sbb
arpl
push
lods
pop
aam
out
and
sub
or
in
fmuls
mov
das
rolb
fnstenv
sti
popf
mov
or
out
imul
cpuid
cmp
js
mov
cmpb
loope
and
jg
jae
aas
mov
aaa
mov
scas
adc
push
mov
inc
loop
mov
adc
out
in
fstps
or
sbb
das
inc
lock
sbb
cli
dec
fs
mov
jl
mov
loopne
sbb
push
xor
inc
sub
jmp
push
sbb
cmp
gs
xor
xchg
lret
inc
xchg
fcmovu
imul
lds
and
mov
cmp
add
fsubr
xchg
inc
loope
adc
mov
aam
repnz
push
aad
sahf
outsb
push
xlat
cmpsb
mov
jle
rolb
les
cmp
pusha
pop
mov
test
jne
loopne
inc
sub
mov
xchg
add
scas
mov
test
cmpsb
iret
adc
sarb
cli
push
imul
xor
add
or
xchg
imul
das
or
rorb
inc
rclb
loopne
and
aaa
repz
mulb
push
inc
in
adc
or
sbb
daa
std
pop
insb
lahf
mov
and
inc
mov
lods
jb
insl
bound
mov
adc
and
pop
or
inc
dec
mulb
out
or
dec
sub
cmp
or
in
cmpsl
leave
dec
fildl
add
mov
nop
adc
mov
addr16
lds
jge
jp
out
cltd
and
mov
call
jg
je
inc
call
in
xchg
mov
push
sbb
push
xlat
inc
decb
ds
arpl
dec
js
lcall
xchg
out
mov
and
iret
mov
out
pop
cwtl
hlt
inc
pop
fbld
push
xchg
aam
push
xchg
push
stos
in
xchg
mov
int3
aad
stc
pop
cmp
stos
mov
cltd
mov
int3
popf
clc
mov
pop
cmpsl
stc
stos
pushf
stc
mov
shlb
dec
mov
stos
in
in
punpckldq
mov
ds
bound
outsl
into
or
jb
cltd
enter
test
cmp
fimull
movsl
cmpsl
pop
sbb
sbb
pop
push
push
call
inc
and
hlt
incb
fdivr
add
mov
bound
xchg
jge
loop
ss
dec
adc
ja
and
jbe
imul
ja
notl
insl
inc
cld
pushf
imul
xor
shll
lcall
inc
scas
push
push
dec
call
addb
pop
mov
out
adc
ret
lods
outsb
and
or
mov
sbb
and
loope
ss
test
std
adc
pop
fwait
lds
out
dec
xchg
sub
push
sbb
or
sti
add
xlat
jmp
loop
out
push
mov
cltd
lcall
testl
nop
sbb
xchg
inc
push
in
adc
and
jnp
push
dec
cli
cmp
adc
popf
incl
ds
pop
jo
mov
xchg
adc
add
sub
push
in
or
fisttpl
adc
fnstenv
sub
xor
jmp
cmp
aam
push
cmpb
pop
jmp
hlt
mov
xchg
sbb
lds
subb
movsb
add
outsl
repnz
xchg
jnp
sti
test
iret
lock
add
rol
pop
dec
mov
adc
pop
add
pop
jmp
stc
inc
add
outsb
fs
xor
out
test
pop
das
push
mov
xor
mov
sub
lds
mov
adc
lock
pop
sub
cmpsl
enter
inc
mov
fwait
in
pusha
test
mov
mov
rclb
into
sbb
hlt
mull
pop
imul
lds
push
sbb
push
xchg
iret
in
cld
pusha
dec
jg
popa
pop
addb
sub
sahf
pop
jg
mov
adc
pop
loopne
jb
xchg
mov
sbb
movsb
sbb
enter
icebp
mov
pop
pop
and
insl
pushf
negb
fxch
testb
gs
pop
aad
pop
mov
add
xchg
push
xor
sub
or
mov
cld
and
adc
and
jne
les
fstpl
pop
dec
adcb
stos
icebp
call
idivb
dec
sub
cmp
shl
lock
mov
in
fisttps
fiadds
sbb
sub
cmpsl
add
lret
and
jb
xor
jmp
call
sub
fcmovu
movsl
xchg
lods
and
lea
add
lds
adc
pop
sub
aaa
dec
adc
fistl
dec
cs
fdivrs
enter
int3
adc
push
rcrl
mov
es
xor
cmp
sarb
movsl
mov
fxsave
jns
stos
sub
dec
xchg
mov
frstor
cmp
cs
fldenv
inc
decl
popa
dec
lret
lret
mov
dec
or
pop
clc
movsl
sbb
mov
imul
outsb
push
xchg
and
cld
push
popa
or
xor
aas
hlt
mov
jo
and
cmp
jo
adc
pusha
jmp
push
stos
leave
adc
std
adc
mov
lahf
data16
ja
cmp
in
push
adc
jle
pop
xor
pushf
ss
ds
inc
and
ror
cmp
mov
dec
decb
mov
iret
adc
lret
xor
out
mov
push
jl
or
jle
xor
mov
test
std
sbb
mov
mov
jecxz
mov
insl
out
jge
out
out
pop
xor
pop
arpl
fildl
push
sbb
sub
scas
mov
test
lret
movsb
fcmovu
cli
pop
jo
cmp
test
push
stc
push
cmp
cs
jp
mov
movsb
push
jns
idivl
sbb
xchg
std
dec
sub
push
jmp
xchg
pusha
inc
insb
into
inc
loop
inc
mov
sti
sti
or
mov
adc
popf
cs
leave
incl
inc
fsub
jle
inc
dec
pop
in
add
movsl
addb
jns
dec
mov
push
and
enter
push
and
mov
mov
jecxz
xchg
mov
test
test
fnstenv
dec
pmulhuw
push
mov
or
fstl
add
xchg
push
dec
push
xchg
xor
pushf
out
stos
call
jmp
add
mov
data16
dec
cld
fs
test
jle
push
mov
xchg
fidivrl
aad
pop
inc
lea
inc
aam
neg
mov
mov
lods
scas
xchg
pop
mov
cmp
data16
das
mov
outsb
test
or
push
mov
out
xchg
add
xor
repz
out
push
pusha
in
aas
test
inc
je
sub
dec
das
das
sbb
pop
daa
pop
fs
jecxz
xlat
shrb
nop
sbb
loop
push
shrl
xor
xlat
clc
jecxz
fadds
jo
push
push
mov
push
cmc
and
push
mov
or
sub
shl
dec
filds
xorb
jae
push
ret
call
lods
iret
test
xor
xor
arpl
sbb
add
mov
inc
test
jno
pop
jp
loopne
jecxz
int3
fcompl
xchg
jae
arpl
mov
sub
enter
xchg
or
jp
mov
dec
pop
lret
aas
fistps
jbe,pt
leave
sub
pop
loopne
fcomp
sub
and
out
mov
shlb
jns
fs
sbb
inc
insl
subl
repz
sbb
sbb
data16
pop
mov
je
test
stc
stos
push
sahf
sbb
and
aad
adc
push
fwait
jb
inc
into
fisubs
cmp
push
xor
adc
clc
fsubrl
jo
push
out
lods
jle
jecxz
test
adc
shlb
pop
lods
and
loope
in
mov
fcmovu
mov
or
imul
lcall
mov
stos
lret
lea
stos
sub
lds
lret
jp
cmp
lock
push
sbb
or
rcr
mov
imul
sbb
jmp
push
and
mov
and
cmp
repnz
add
out
pop
dec
sti
scas
int
fs
idiv
arpl
call
icebp
fnsave
mov
pop
or
stos
stc
cmp
add
sbb
daa
push
push
jge
push
cmpb
add
jge
cli
jnp
in
and
lret
pop
push
rorl
mov
add
dec
cmc
sub
push
loop
lods
repz
ja
out
gs
lret
dec
shrb
xchg
rcl
adc
pop
adc
pop
mov
and
outsb
js
fiadds
leave
rolb
and
cld
mov
outsb
jns
orl
and
mov
xchg
pop
mov
cmpsl
mov
xchg
ret
mov
mov
inc
sub
sbb
cmp
xchg
mov
or
mov
adc
push
push
push
xor
test
add
lods
in
jp,pn
movsl
adc
ds
lods
mov
push
dec
clc
xor
dec
cmp
push
loop
enter
pop
scas
aad
stc
test
push
xchg
jns
adc
cmp
in
outsl
xor
adc
mov
pop
push
add
inc
ret
and
hlt
jmp
mov
mov
push
xor
sbb
pop
lahf
je
in
div
js
xlat
push
jmp
in
andl
inc
jecxz
aas
enter
rclb
push
xchg
dec
add
out
jo
sbb
pop
rol
leave
arpl
mov
test
inc
loope
sbb
sbb
flds
sbb
pop
aad
repnz
add
call
orb
pop
add
add
add
push
jle
lahf
out
push
movsb
adc
cmc
push
js
push
jbe
lock
pop
mov
lea
in
daa
in
cmp
jmp
outsb
lcall
or
inc
xchg
ucomiss
outsl
fcmovb
je
testl
fcomip
fsubrs
idivl
sbb
mov
arpl
jnp
fdivr
dec
add
sub
jmp
jle
xchg
test
xchg
cwtl
jecxz
and
sbb
arpl
sub
inc
adc
xor
mov
push
push
lcall
sti
in
outsb
adc
les
cmp
xor
sahf
jmp
das
leave
sbb
mov
inc
dec
out
and
test
inc
imul
mov
and
loop
into
mov
or
iret
test
xchg
ds
pop
cmp
adc
xchg
or
and
rorl
std
decb
shll
and
adc
cmp
mov
xchg
mov
xor
vdivpd
es
add
loope
cmp
dec
xchg
popf
or
mov
fsubrl
outsl
xchg
test
stos
jbe
sahf
jbe
mov
loop
inc
mov
mov
imul
shl
imul
mov
pop
jo
movsb
fisubl
fisubrs
push
loopne
in
and
or
out
xlat
sarb
inc
cmp
sub
sub
dec
pop
das
aas
or
dec
xor
rcll
ret
mov
fdivl
mov
and
jbe
pop
push
clc
sti
or
popa
gs
movaps
ss
int
adc
mov
fdivl
test
cmp
push
dec
pop
rcll
test
jg
pop
add
ljmp
jno
adc
lahf
mov
cmpl
xor
repnz
scas
stc
xor
sbb
mov
addb
add
mov
les
cmp
mov
cld
jle
push
mov
sbb
cmp
cmp
pop
lahf
movsl
mov
lcall
lcall
sbb
adc
rclb
sub
inc
xor
out
mov
iret
xchg
lods
lahf
ljmp
mov
push
push
imull
inc
es
jecxz
pop
stc
push
call
and
mov
or
enter
loope
std
pop
fmuls
fstl
pop
jnp
sub
cmpsb
push
loopne
sbb
divl
insl
xchg
jge
ja
addr16
bound
repnz
mov
push
loope
pop
test
insb
movsb
fsts
push
add
pop
jb
pop
push
out
lods
xchg
xchg
sub
adc
dec
je
cs
mov
hlt
lcall
sbb
int3
mov
mov
aad
mov
imul
add
jnp
in
int
outsl
push
fwait
cmp
mov
sbb
dec
negl
lcall
cmp
jnp
xchg
imul
xor
sub
lret
push
sub
test
hlt
sub
add
mov
xor
hlt
mov
into
jbe
inc
pop
std
mov
pop
clc
nop
inc
mov
xor
push
dec
and
int
imulb
aam
fbld
jbe
mov
jg
sub
pop
mov
fmul
push
mov
je
cmpb
or
xor
xchg
add
add
xchg
mov
xor
mov
outsb
repnz
xchg
xor
and
inc
mov
scas
xlat
jl
add
lock
in
dec
popf
leave
and
jge
xchg
shlb
xor
jnp
add
mov
mov
outsb
rorl
adc
shll
insb
xchg
mov
mov
sub
rol
movsb
inc
shl
dec
out
or
out
stos
pop
push
mov
mov
iret
das
cmp
lret
or
jp
mov
into
lcall
or
in
cmp
pop
sub
pop
or
push
pop
in
repnz
jle
cmp
push
rol
out
sbb
xor
or
clc
arpl
or
adc
add
fistpll
in
loope
dec
int3
jbe
rorl
in
cmp
daa
pop
or
sub
sub
dec
fs
inc
cmp
std
xchg
xchg
mov
pop
jge
jl
loop
add
inc
loope
jmp
cmp
cmpsb
inc
ffreep
pushf
fwait
sub
pusha
je
jb
and
and
mov
imul
pop
dec
xor
lock
jmp
xor
push
rcll
sub
in
cmp
popa
cltd
arpl
pop
adc
add
xor
push
pop
pushf
mov
popf
and
stc
lock
lds
aas
mov
int
mov
cmpsb
js
xchg
cwtl
push
lods
das
add
lcall
sub
xchg
subb
push
push
xchg
or
push
mov
faddp
aam
fnstsw
in
ret
adc
cwtl
push
outsb
push
pop
dec
or
inc
mov
pop
mov
lret
shll
cmpsb
cs
sbb
adc
in
fstp
aas
sbb
rdpmc
fimuls
pop
fs
sbb
jl
push
fnstcw
stos
repz
or
cmp
xchg
add
add
cmpsl
inc
adcb
mov
cmp
out
into
ret
push
cmp
jmp
push
shrb
jmp
or
sbb
add
icebp
sarl
call
cltd
mov
or
mov
das
adc
orb
imul
mov
xor
push
xor
test
xchg
lret
inc
push
ret
add
jnp
and
cld
cmpsb
mov
jns
aas
add
push
div
xchg
mov
in
sbb
and
sbb
add
add
movsl
jno
call
push
and
xchg
and
or
mov
sbb
fs
jno
xor
ds
subl
test
aas
sub
repz
mov
inc
inc
pop
lds
dec
aad
mov
pop
xor
pop
scas
inc
loopne
inc
faddl
sbb
out
les
jnp
stc
cmp
sbb
lea
pop
nop/reserved
mov
cmpsl
and
jo
adc
lods
aam
pushf
lret
imul
mov
pop
pop
dec
dec
insl
fwait
push
sub
jne,pt
cmp
or
mov
sbb
je
js
jmp
pop
les
push
je
sub
insb
xchg
sub
jg
repz
stos
sub
scas
stos
popa
adc
mov
cli
cmp
sbb
adc
sbb
push
jnp
or
std
xchg
push
out
jecxz
xor
outsl
int3
pop
or
jl
adc
aaa
or
or
cmp
xchg
push
mov
ret
test
cmp
repnz
orl
in
and
ret
orb
and
mov
push
shrl
lret
imul
or
cmc
jmp
decl
fwait
xor
mov
xor
or
xchg
add
mov
aas
pushf
into
inc
push
lods
cmp
push
aam
jge
sbb
imul
push
inc
mov
imul
lret
fs
cld
xlat
mov
mov
or
adcb
mov
mov
push
push
pop
iret
add
pop
scas
in
mov
outsb
or
mov
mov
ret
xor
shl
mov
fcmovu
pushf
jae
rol
mov
test
scas
and
ret
in
xor
push
push
inc
repnz
test
enter
das
jmp
push
jno
mov
gs
out
mov
and
mov
lods
pop
xchg
icebp
ja
aam
xchg
sbb
stos
jge
out
jle
and
mov
test
mov
std
shrb
adcl
dec
dec
inc
fadds
std
insb
jno
lds
xor
and
push
mov
inc
cli
dec
add
mov
cmp
adc
sahf
cmpsb
xchg
push
xlat
in
dec
test
adcb
jae
cmp
mov
mov
insb
cmp
push
pushf
mov
loop
mov
push
sti
daa
cld
pop
pop
icebp
stc
sbb
sbb
mov
or
or
cmp
mov
mov
sub
pop
rorb
or
cmp
sti
orl
and
clc
fwait
xor
inc
out
insb
mov
pop
pop
jl
addr16
test
add
push
outsl
js
in
int
or
scas
shlb
lcall
aad
xchg
lret
fst
fstl
pop
xor
pop
add
push
sub
pop
ret
push
pop
rorb
rcrl
popa
dec
xchg
mov
mov
add
lcall
mov
xor
xchg
inc
shll
arpl
sbb
hlt
cmp
and
and
dec
fadds
dec
leave
lea
je
lret
mul
cmp
arpl
push
push
imul
jb
lret
add
jno
imul
pop
pop
cltd
cs
dec
mov
sti
arpl
scas
cmp
daa
jle
outsb
cmc
pop
rolb
inc
jg
mov
dec
in
imul
scas
cmpsb
test
cmpsl
cmp
jmp
jns
inc
outsb
test
ret
pop
fsubl
dec
push
in
lret
loop
stc
adc
repnz
dec
mov
cmpsl
dec
and
cli
subps
inc
pop
pop
cwtl
pop
rcrl
and
les
or
test
mov
imul
sbb
cli
js
sub
and
fwait
pop
xchg
cmpsl
mov
push
aas
lock
shrl
xorl
es
rcrb
push
sub
mov
mov
jb
lods
hlt
and
out
std
in
insb
mov
push
bound
fsubrs
mov
xor
out
imul
cld
das
or
js
test
jg
and
iret
or
adc
dec
sar
jmp
mov
mov
xor
pop
jae
inc
cmp
shr
adc
and
imulb
and
mov
jbe
dec
repz
mov
pop
and
or
cmp
lds
cld
divb
mov
adc
dec
add
jno
add
push
icebp
arpl
shl
mov
lret
pop
cmp
andb
inc
das
inc
ror
data16
call
push
pushf
pop
fbld
mov
mov
pushf
dec
cmp
xchg
scas
addb
into
sbb
icebp
pop
imul
mov
cld
sar
popf
fwait
in
lret
fmull
sub
jnp
loop
mov
sub
leave
jne
notb
jge
push
or
ss
iret
addr16
jmp
ret
push
test
mov
loope
mov
sub
push
nop
dec
movsl
addr16
insl
cwtl
pop
pusha
fnclex
sub
adc
cmp
cltd
jle
inc
testb
js
lea
es
jmp
cmp
or
inc
add
test
and
add
incb
inc
pop
jge
in
sbb
adc
sub
loopne
xlat
inc
lcall
sahf
imul
clc
sub
jg
outsb
jno
std
iret
dec
cmp
dec
or
inc
pushf
fsts
sbbb
jae
aaa
pop
fs
push
daa
insl
jae
push
jb
in
push
and
push
ljmp
lea
daa
adc
iret
cmp
clc
cwtl
ret
dec
test
ret
in
xchg
imul
mulb
fs
cs
cmpsb
and
jns
cld
inc
arpl
loope
inc
test
adc
pop
pusha
adc
xor
mov
mov
push
inc
repz
int3
bound
lock
mov
insb
or
push
mov
xchg
and
cld
cmpsb
loop
out
xchg
int3
push
icebp
cmpsl
shl
jnp
xor
mov
aaa
ja
mov
or
popf
inc
aad
imul
mov
aaa
mov
or
shll
repz
pop
dec
out
or
jbe
push
lahf
test
insl
into
mov
shrl
push
mov
mulb
push
in
xchg
popf
sbb
jge
push
xchg
pop
inc
repz
in
daa
nop
add
leave
adc
cltd
inc
mov
call
jecxz
add
push
std
pushf
stc
push
sbb
leave
mov
lcall
push
scas
ss
adc
sysenter
fs
fldenv
jo
cmpsb
out
lret
ret
std
rorb
jbe
mov
test
cwtl
push
adc
sub
dec
mov
inc
popf
mov
mov
imul
or
stc
xor
push
adc
cld
jge
rclb
movsl
int3
pop
push
stc
ljmp
aad
sub
fmull
aad
cmpsb
xor
xchg
fimuls
fs
insl
shlb
jl
mov
sub
or
in
lds
sub
add
pop
adc
xchg
stc
out
mov
movsl
loope
jae
jp
inc
imul
mov
dec
aad
dec
jp
adc
icebp
push
push
jmp
pop
movsl
stos
and
mov
int3
dec
pop
fmuls
jbe
sarl
mov
outsb
jae
popf
xor
sub
and
ret
test
push
rorl
test
vmovss
iret
incb
fisubrl
dec
mov
leave
addr16
mov
pop
adc
mov
outsb
insb
jbe
sub
cmp
sub
outsb
negb
insl
test
mull
cs
mov
mov
arpl
cld
or
movsb
sub
outsb
imul
xchg
cmc
out
mov
out
jl
dec
out
movsb
rcll
enter
daa
lret
add
jo
push
add
sbb
mov
pusha
fwait
inc
in
ret
out
ja
ret
fisubs
add
leave
lods
clc
loope
scas
insl
xor
setno
mov
pushf
add
cmc
add
popf
cld
push
insl
mov
jl
push
mov
sub
ss
ds
dec
sbb
xchg
daa
shl
icebp
mov
jg
xlat
fs
data16
cs
jno
push
scas
iret
add
mov
lods
repz
cmp
leave
xor
cmpsb
fstl
test
fldl
test
insb
jle
sub
sub
mov
mov
xor
imul
fildll
jb
sub
adc
sub
cmc
movsl
inc
inc
and
fnstcw
pusha
or
lods
mov
out
add
ljmp
mov
xchg
jmp
jle
nop
lret
xchg
inc
dec
fsubl
loop
sub
int
movsb
test
push
mov
enter
ds
out
dec
rcll
das
sub
mov
lock
xchg
dec
cmpsb
jmp
xchg
cs
push
pop
shll
xchg
inc
outsl
in
rorl
dec
and
mov
enter
pop
in
lods
xchg
daa
or
insl
push
pop
insl
sbb
fnsave
pop
xchg
fwait
mov
loop
mov
mov
scas
sbb
insl
mov
jb
insl
xchg
jb
in
jg
nop
sbb
enter
loop
ret
out
and
sbbb
sarb
stc
mov
mov
bound
pusha
xchg
and
mov
xchg
iret
mov
jl
mov
sbb
test
xorl
xor
idiv
movsb
into
shll
lods
adc
fsubr
mov
popa
jne
inc
mov
mov
stos
out
test
std
notb
test
test
adc
dec
and
jnp
clc
roll
push
or
enter
pushf
or
dec
pushf
out
cmpsl
out
xor
pop
add
pop
movsb
xchg
fdivl
add
fs
aaa
mov
jo
adc
cli
xor
jns
pusha
out
cmp
ss
js
mov
dec
pop
repnz
cmp
sub
mov
add
xchg
sub
jmp
push
mov
dec
push
adc
rcrl
mov
pop
sub
orl
notl
std
fsts
sbb
cwtl
dec
aad
sub
je
adc
jmp
gs
movsb
js
rolb
lret
lret
push
adc
fwait
loopne
dec
cmp
rsm
lock
pop
pop
lds
lock
pop
push
or
ds
push
xor
jp
push
xchg
lods
cmp
sub
out
fs
lahf
jb
sbb
fidivrl
pop
lret
pop
jg
adc
and
mov
rorl
aaa
xchg
test
out
mov
mov
lcall
fsubl
push
cmp
in
pop
or
add
lods
daa
negb
adc
test
jg
jecxz
xor
cmp
mov
push
jo
cli
inc
pop
jmp
in
or
cs
add
movsl
lret
pop
and
subb
movsb
push
js
shll
xor
adc
fisubrl
inc
movb
fistl
addr16
xchg
dec
xor
pop
pop
cld
mov
and
cmp
mov
fstps
nop
jmp
dec
rcrb
mov
std
push
cmp
lahf
xchg
sbb
push
mov
mov
fs
mov
sub
popf
inc
fsubrs
inc
jnp
dec
cmpb
sub
lods
inc
aad
popf
mov
jle
leave
dec
push
clc
jg
pushf
nop
pushf
jl
shlb
shrb
mov
adc
cwtl
add
push
popf
sbb
out
lret
jns
xor
mov
in
stos
js
mov
adc
xchg
push
lret
insl
ficomps
mov
jmp
sahf
sbb
push
stos
shlb
imul
and
mov
mov
add
dec
add
inc
sub
xor
xlat
rcl
rorl
insb
pop
add
jg
mov
shlb
mov
aas
sub
clc
jecxz
ss
loopne
sarb
leave
dec
rolb
inc
test
cs
mov
cmp
fdivrl
or
out
jl,pt
test
jne
mov
jecxz,pn
push
jne
cmp
inc
arpl
ss
outsl
jo
pushf
data16
bound
dec
xor
test
mov
sbb
jne
jns
jle
inc
rorb
popf
lahf
push
cli
imul
ja
std
cs
fneni(8087
push
imul
pop
push
aaa
ja
js
lds
mov
setae
fisttps
loopne
test
inc
fdivs
mov
cmp
lret
bound
enter
push
cmp
cmc
jae
push
mov
rorl
xchg
adc
lea
pusha
push
sarb
rorb
fwait
cmp
xchg
stos
imul
lcall
jb
jbe
mov
les
lock
loop
push
stos
in
cmc
mov
jp
pop
xchg
dec
mov
jge
push
test
inc
popf
mov
mov
scas
xchg
add
fisubl
adc
inc
push
fwait
hlt
les
dec
dec
mov
pop
push
repz
sub
and
jmp
popa
lods
repnz
popf
ror
adc
mov
frstor
pop
fistpll
inc
jne
mov
imul
push
inc
cmp
jo
lcall
adc
push
mov
leave
jmp
adc
and
mov
inc
pop
repnz
cld
jle
mov
faddp
inc
mov
ljmp
add
dec
cmp
adc
cmp
and
stos
loope
inc
or
enter
idivl
cld
gs
fldcw
add
imul
out
rcl
jnp
and
test
mov
add
push
mov
jne
sub
push
imul
nop
fxch
int3
rorl
xor
les
insb
push
pop
cmp
in
cmp
add
mov
xchg
lret
xor
xchg
lahf
sbb
and
nop
insl
cmp
pop
rep
inc
and
add
lea
pop
out
and
xor
xlat
movsl
roll
leave
subl
adc
and
fistpll
and
lea
and
mov
mov
popa
lahf
add
js
jecxz
testl
sbb
adc
jno
stos
or
movsb
gs
adc
pop
test
sbb
jne
xchg
pop
inc
push
clc
dec
adc
lcall
daa
sbb
mov
push
call
test
andb
adc
cmc
aam
dec
push
add
fidivrs
sti
daa
ret
mov
mov
xor
lods
sbb
dec
xor
lds
dec
sti
test
xchg
lahf
pop
adc
int3
sbb
fidivrl
xchg
ljmp
mov
cmp
and
push
mov
fistpl
pop
cmp
out
pop
xor
stc
mov
inc
add
adc
mov
push
call
mov
or
movsl
sbb
sub
sub
inc
sub
stos
mov
stos
mov
pop
cli
jns
jmp
mov
push
fcmovu
mov
test
popa
notb
iret
stos
std
and
cwtl
xchg
ja
xchg
aaa
jb
jl
fwait
out
insb
cmp
cmp
ja
outsb
and
or
mov
test
or
pushf
sbb
push
or
iret
mov
clc
int
xor
cmp
adc
nop
loopne
adc
mov
pop
pop
pop
fs
jne
hlt
stos
mov
dec
and
dec
into
mov
push
add
mov
dec
outsl
or
fdivrl
stos
in
push
or
loope
aad
mov
lods
jmpw
mov
xchg
mov
sub
jge
ds
mov
jne
pop
leave
xor
hlt
test
mov
les
ljmp
sbb
adcb
lahf
jae
inc
mov
mov
addr16
iret
ret
xchg
shl
mov
sub
jl
lock
scas
cmp
jne
loop
loope
ja
inc
ss
das
test
xchg
aaa
pop
enter
xor
sbb
ret
push
in
cmp
stos
dec
pop
add
leave
mov
sbb
wbinvd
bound
ret
sub
mov
push
loopne
ljmp
mov
aaa
js
jmp
inc
mov
fistpll
or
or
xor
std
xchg
shl
inc
and
xor
mov
xor
sbb
loop
lods
push
loopne
pop
stos
sti
cmc
sahf
inc
xor
cmp
mov
addr16
stc
jno
mov
and
mov
jl
xchg
xor
mov
xchg
outsb
cs
or
into
mov
mov
lcall
inc
mov
ret
adc
mov
shll
loop
repnz
sbb
fwait
lods
mov
or
pop
pop
mov
push
hlt
mov
pop
mov
xchg
xchg
jo
cmp
cmp
cmp
fnstenv
outsb
hlt
push
sub
fildl
cmpxchg
ljmp
fsubrs
test
lods
fdivl
or
mov
adc
rolb
cmp
adc
cmp
inc
vpaddsw
pop
ja
jnp
xor
jl
sub
jbe
repz
dec
xchg
xor
das
or
fistps
sub
mov
shll
sbb
addr16
pop
dec
popf
lret
mov
mov
and
stc
cmp
sahf
lcall
or
fnsetpm(287
hlt
mov
in
lds
pop
mov
test
inc
add
cmpsl
idivb
jge
adc
addb
push
mov
pusha
dec
pavgb
bound
and
sarl
add
or
pop
push
imul
loopne
sbb
push
out
push
dec
in
cmp
mov
push
jns
pop
jbe
add
movsb
cli
push
aaa
mov
dec
push
dec
mov
push
fucom
stos
xchg
aad
push
jle
lea
adc
cmp
sbb
or
test
mov
mov
roll
pop
insl
das
xor
ret
jmp
les
dec
cmpsl
pushf
adcl
cwtl
fstpl
in
xchg
push
dec
je
seto
push
cmpsb
and
int
in
pop
cmpsb
mov
scas
repnz
dec
test
shll
repz
cld
add
xlat
aaa
frndint
mov
sbb
ret
mov
push
rolb
push
addr16
rorb
xchg
inc
add
jae
aas
fwait
xlat
sub
pop
xchg
in
xor
aam
xchg
sub
pop
decl
test
scas
outsb
sti
pop
push
popa
or
push
inc
icebp
xor
pop
ja
jno
bound
fsubrl
pop
pop
out
push
xchg
jmp
cld
pop
xchg
pushf
jb
dec
add
lea
xorb
mov
aam
lcall
pop
jno
loope
stos
mov
out
cmpxchg
mov
cmpsl
fnstcw
leave
jne
ret
xchg
push
adc
imul
inc
in
loopne
or
sub
in
push
adcl
push
ds
call
int3
mov
std
dec
mov
lahf
loope
sub
pop
nop
movsl
jae
rcrl
lods
or
jmp
into
push
pop
sbb
push
clc
sub
inc
loopne
xlat
inc
mov
mov
cmp
int3
mov
or
inc
je
xorb
mov
int
push
lret
inc
mov
mov
xchg
mov
data16
ret
addr16
faddl
jg
or
imull
pop
cmp
mov
cmp
bnd
ljmp
mov
pop
sbb
cmc
movsl
and
mov
popfw
jno
movsb
cltd
loop
mov
inc
out
popf
loope
sbb
out
lea
sar
cmpsl
sub
mov
bound
jne
aam
dec
adcb
pop
out
fadd
std
inc
pop
sub
mov
scas
fs
je
jle
data16
ljmp
roll
inc
xor
clc
stos
mov
fisubs
ss
dec
test
std
es
loop
or
mov
and
cli
mov
je
mov
fs
xor
mov
aas
jg
add
cmc
fidivrl
mov
dec
mov
lock
jp
adc
adc
xor
movl
mov
push
enter
xchg
int
dec
pop
pop
sahf
ret
adc
ljmp
jp
sarl
or
cmp
test
adc
hlt
fildl
std
in
add
dec
mov
adc
das
into
mov
out
sti
fldenv
mov
std
repnz
push
inc
repz
js
sbb
push
fsub
outsb
adc
incl
out
ljmp
cs
xchg
stos
outsb
cmp
in
cmc
clc
loopne
sbb
loopne
and
out
push
inc
imul
pop
add
jnp
imul
repz
lcall
icebp
mov
faddl
cmpsb
lea
push
mov
push
rol
lods
adcl
pop
cmp
pusha
xchg
int
jecxz
xor
mov
mov
mov
jp
fcomps
daa
int
test
xor
dec
lcall
rcrl
mov
insl
sub
cmp
js
xor
and
inc
movsl
xorl
xor
inc
dec
imul
icebp
in
out
shrb
int
mov
or
xchg
je
sbb
cmpsb
jnp
xchg
lock
lcall
mov
xchg
mov
sub
jmp
inc
mov
out
sbb
decb
fiaddl
mov
int
loopne
xchg
mov
in
fwait
mov
lahf
movsl
mov
rcll
inc
je
xor
mov
sub
and
daa
xchg
mov
mov
clc
loopne
and
ljmp
int
dec
icebp
shll
popa
xchg
dec
inc
out
cmp
stos
fnstcw
mov
xchg
lret
pop
or
pop
adc
mov
push
add
aad
faddl
add
dec
mov
and
sar
dec
mov
xor
xor
adc
adc
mov
or
jecxz
or
dec
pop
out
dec
add
mov
testb
and
jnp
rclb
cltd
stos
popf
fxch
add
push
sbb
cld
out
insl
test
sarl
pop
sub
jecxz
lods
jp,pt
jne
xchg
stos
jb
and
push
mov
push
mov
lret
in
push
add
mov
cmpsb
leave
movsb
sbb
insl
cmpsl
fwait
movlps
test
in
sbb
fldpi
cmpsb
mov
inc
mov
insl
fisttpll
adc
lea
icebp
loope
sub
test
lahf
jo
icebp
and
lods
cmpsl
jbe
das
mov
fcoml
xrelease
mov
sbb
lahf
lds
add
and
mov
fnstsw
mov
lds
frstor
stc
cmp
xchg
pusha
add
js
push
pop
cmp
dec
push
repz
fs
xchg
jb
mov
scas
mov
sbb
mov
pop
mov
mov
bound
dec
leave
push
pop
xchg
sub
mov
mov
jge
mov
push
imul
jg
fimuls
or
movsb
lds
popf
mov
cltd
sub
pushf
add
mov
movsb
cmp
shrb
jb
mov
lds
cmp
push
sbbb
icebp
fnstcw
ds
xchg
mov
fistpll
imul
mov
ss
push
mov
es
pop
bound
xchg
ss
push
and
mov
inc
mov
push
cmp
dec
or
mov
pushf
mov
call
popl
mov
inc
mov
and
jo
test
daa
push
int
jge
inc
imul
push
fdivrp
or
sbb
movsb
xchg
inc
cld
mov
lds
pop
in
loope
jmp
or
ja
push
ljmp
stos
cld
sbb
adc
repz
and
ja
ficompl
rorl
mov
fwait
outsl
inc
xchg
ja
sbb
add
jno
stc
jns
add
push
pushf
ja
mov
push
or
dec
mov
lret
adc
xlat
jne
push
cli
hlt
cmc
sahf
dec
mov
fisttps
add
xor
pop
cmc
pushf
fsts
rclb
imul
pusha
mov
adc
icebp
loopne
ret
push
pusha
lret
inc
jmp
push
or
xchg
mov
scas
and
ja
xchg
movsb
jge
fucom
add
push
sahf
out
fstps
push
cmp
cs
leave
cmp
push
pop
sarb
pop
negb
adcl
xchg
mov
inc
xchg
lea
shll
cmp
mov
xor
and
std
pushf
xchg
sub
sti
xor
pop
push
jp
dec
cmpsl
dec
cmc
mov
cmpsl
inc
leave
shrb
jmp
or
pop
das
xor
pop
add
xchg
stos
pop
not
call
lret
push
movd
movsl
inc
xchg
ja
jecxz
xchg
jae
or
push
cmpsl
int3
test
cmp
test
xchg
dec
icebp
jg
pop
pop
es
cmp
adc
addl
and
mov
xchg
test
scas
aaa
mov
pop
dec
scas
xlat
add
inc
xor
push
xor
sub
push
in
ret
rcrb
popa
arpl
aaa
ljmp
out
jns
dec
sbb
mov
and
fnstcw
out
inc
dec
rorl
test
int3
inc
aaa
inc
jmp
push
xchg
jle
sbb
stos
pop
mov
adc
or
insb
out
jno
rcll
cmp
push
scas
sarl
shlb
xchg
jge
mov
cld
and
xorb
mov
mov
dec
sti
mov
sbb
pop
cmc
mov
daa
sub
jmp
fucomi
mov
call
aad
lds
pusha
ds
pop
les
xchg
shrb
ds
clc
aaa
fiaddl
inc
jmp
sbb
imul
push
and
pop
cmpsl
or
jae
into
adc
mov
in
scas
push
adc
pop
pop
add
hlt
test
xor
scas
sbb
mov
sbb
insb
pop
inc
scas
jmp
insb
cmp
in
outsl
xor
jp
movsb
or
int
enter
push
lods
ss
xor
std
mov
lds
mov
cmp
div
adc
sbb
xchg
sub
scas
pop
test
dec
sub
dec
jnp
push
jmp
aas
lock
push
frstpm(287
scas
in
dec
orb
in
pop
call
loope
fldenv
mov
repz
mov
xchg
inc
xchg
std
lret
shrl
movb
adc
cmp
lea
dec
add
outsb
pop
xor
pop
cmp
dec
pusha
out
jmp
divl
push
icebp
negl
xor
xlat
jl
fnstcw
out
jl
sub
rorb
push
adc
pop
inc
outsl
dec
sbbl
push
nop
sub
xor
dec
loope
test
or
mov
je
cmp
movsb
adc
test
ret
addr16
out
mov
mov
lcall
cltd
roll
ja
dec
xchg
xlat
lret
stos
imul
test
lcall
mull
aaa
fs
push
in
movsl
xchg
cs
sub
and
jl
dec
mov
outsb
mov
sub
mov
stos
jge
cmpsl
mov
pop
push
arpl
dec
jge
jmp
push
cmpl
daa
and
hlt
mov
and
inc
xchg
dec
sar
jecxz
pop
fwait
xchg
std
scas
xor
push
fmull
repz
aas
xchg
mov
shll
in
pop
or
stc
jae
movsl
test
aam
fisttpll
hlt
js
idivl
add
sub
xor
xorb
xchg
cmp
sbb
aaa
rclb
mov
and
mov
lret
and
xor
popa
shlb
xor
js
cmpsb
mov
mov
hlt
outsb
pusha
sti
dec
sub
lds
dec
push
sarl
pop
push
in
mov
and
test
insl
cmpsb
in
outsl
sbb
movsb
adc
loop
shlb
lock
fimuls
xor
pop
jno
dec
mov
cmp
lahf
or
lds
pop
jno
in
push
jecxz
sbb
xor
test
pop
mov
sub
ror
mov
adc
xor
ss
mov
and
les
pop
or
fsubs
jp
dec
outsb
leave
repz
push
xor
xchg
push
mov
push
push
push
mov
jge
adc
lcall
je
lds
int3
dec
subb
pop
rcll
inc
rcrb
movaps
dec
lock
popa
dec
mov
pop
clc
cmpsb
jnp
movsl
pop
pop
jmp
aas
imull
sub
jbe
filds
in
js
mov
push
and
mov
jge
lods
jl
es
inc
mov
ret
sbb
jae
jecxz
and
js
out
and
out
sub
leave
sbb
dec
dec
sti
les
and
repz
mov
mov
xor
xchg
fwait
pop
shl
aad
sbb
lret
popa
dec
jno
and
pmaxub
je
nop
sti
mov
add
inc
mov
jno
sbb
test
mov
shll
gs
inc
fsubrs
lock
movsl
cwtl
sahf
mov
std
xor
outsb
fwait
enter
sub
lahf
jo
cld
fbld
mov
call
add
mov
pop
sbb
add
int3
xchg
xlat
movsl
jnp
or
pop
mov
pop
jbe
sub
lods
and
mov
adc
inc
add
mov
pop
jne
enter
xor
lret
sbb
test
or
lds
flds
pushf
in
test
addl
pop
dec
jbe
fadds
scas
sub
pop
fistpl
xchg
xchg
mov
sti
stc
in
add
jle
das
movsb
fsubr
sbb
add
mov
int3
mov
outsb
sti
dec
lret
pop
leave
mov
sbb
cmpl
inc
and
lret
popa
loope
lcall
dec
jge
out
int
mov
mov
mov
jmp
add
scas
push
mov
cwtl
inc
aas
pusha
int
push
push
pop
ds
data16
test
rcll
ret
lock
insb
nop
mov
das
int3
mov
lods
fadd
cmc
out
cmc
dec
fldenv
or
xchg
lcall
pop
jno
xor
push
sub
fsubl
int3
and
mov
scas
mov
dec
mov
or
aam
fisubl
into
jns
push
jno
icebp
out
jno
jg
stos
int3
insb
sbb
jns
add
jno
test
xchg
fs
xor
mov
test
nop
push
outsl
je
das
mov
push
jns
mov
lock
xor
add
adc
xor
mov
fidivs
mov
aas
pop
pushf
pop
push
push
cmc
test
cmp
inc
and
pusha
inc
sahf
divb
fwait
in
out
sub
inc
mov
mov
rcll
xchg
mov
pusha
push
out
lock
das
mov
ror
lea
in
adcl
mov
stos
xorb
test
sbb
jnp
cmp
loope
popf
fisttpl
inc
movsl
and
cmp
ror
inc
in
jne
sahf
or
imul
sbb
js
scas
out
mov
fsubrl
daa
and
es
pop
push
xchg
ds
cmp
int
or
movsl
mov
dec
jb
repz
les
sahf
push
pusha
insb
insb
cmp
mov
ds
fldenv
mov
pop
pop
pop
cmp
lods
mov
add
pushw
dec
and
scas
bound
xor
jge
and
adc
icebp
pop
inc
rorl
mov
in
lea
xchg
enter
jl
push
pop
cs
and
sbb
cmpsl
push
mov
fnsave
test
jge
add
mov
push
jg
xor
xchg
aaa
aas
or
add
test
aas
inc
flds
lea
out
addr16
hlt
xor
jecxz
ret
mov
sbb
pop
sahf
scas
mov
inc
jne
ljmp
xchg
ret
cmp
aam
out
cmp
out
cwtl
out
or
add
mov
in
sti
sub
mov
xor
daa
out
outsl
cltd
outsl
xor
mov
andb
sti
icebp
pop
xor
enter
or
pop
test
add
lods
pusha
in
sar
test
sub
mov
pusha
jae
in
adc
xchg
jb
mulb
pop
and
mov
scas
and
xor
cmp
cmpsb
fcos
cmp
out
pop
push
fwait
cli
ss
fucomp
fstpt
add
js
or
mov
test
xlat
mov
clc
std
mov
nop
out
pop
mov
sub
jp
push
js
inc
inc
lret
mov
enter
cmpsl
dec
sbb
xchg
in
pop
and
cmpb
pop
loopne
inc
fmuls
imul
adc
and
dec
sbb
aam
std
jle
jne
jg
dec
mov
ret
xchg
mov
push
add
incl
imul
and
cwtl
insb
shrb
xchg
or
les
ret
nop
mov
scas
or
mov
sub
insb
inc
push
int3
aad
imul
dec
fldcw
ret
push
jns
pop
xchg
out
push
xorb
sbb
pop
cmp
mov
jae
pop
add
mov
xchg
cmp
out
mov
int
xlat
in
adc
cmp
xor
rcll
dec
xchg
add
add
pop
cli
push
mov
cs
mov
dec
jnp
loop
shlb
mov
das
insl
xchg
andl
subb
pop
sub
xlat
add
aaa
rol
add
test
xchg
je
cli
je
dec
jl
mov
rorb
test
mov
lahf
das
cmp
andb
loop
push
dec
aam
dec
jno
lods
stos
test
lods
out
sbb
clc
xor
inc
mov
loope
push
mov
jl
dec
adc
and
mov
sub
pop
pop
and
cmp
addr16
imul
jb
jnp
inc
das
and
dec
je
inc
cmp
jl
out
sbb
dec
xchg
jmp
push
mov
jne
fs
adc
cmpsl
xlat
pop
xor
leave
sub
fisubrs
xchg
sub
lock
stos
sarl
cmpsb
movsb
add
and
cmp
pop
in
sti
sbb
and
je
xchg
cmp
adc
es
mov
inc
add
loope
xor
mov
mov
in
sub
inc
adc
ret
movsl
rorb
stos
pusha
xchg
in
je
icebp
xlat
addb
lahf
ss
jnp
sub
mov
fldl
xchg
imul
stos
cld
iret
repnz
paddusb
js
cltd
jg
fwait
xchg
pusha
cmpsb
dec
push
adcl
mov
or
es
imul
sbb
movl
outsl
inc
push
inc
inc
mov
bound
push
sbb
mov
sub
lock
cmp
insl
xchg
mov
cmp
test
imul
roll
in
testb
adc
and
int
xor
push
es
jmp
sar
jge
dec
pop
and
push
lock
xchg
repz
int
mov
jae
xchg
add
scas
or
xor
mov
mov
xchg
mov
andl
mov
cmp
add
movsb
out
jge
dec
ficompl
ror
inc
push
mov
or
cwtl
int
push
mov
and
mov
dec
push
lods
jl
mov
out
or
cmp
push
add
test
sbb
jle
push
inc
pop
push
loop
shlb
iret
test
repnz
sti
adc
and
divl
xlat
mov
push
hlt
adc
mov
pop
or
jp
int
mov
adc
aam
mov
pop
xlat
orl
mov
or
pushf
push
leave
es
adc
std
and
mov
fwait
lahf
jge
retw
adcb
mov
cli
sbb
jae
data16
xchg
sbb
push
pushf
push
arpl
xor
jbe
add
cwtl
popf
adc
gs
xchg
mov
das
clc
xor
mov
je
aam
js
incl
xor
fistpl
movsb
adc
ret
pop
into
shr
int
lods
inc
dec
shlb
push
scas
and
pushf
out
xchg
mov
aam
cwtl
lods
add
mov
or
jae
ss
cmp
and
test
ret
ficoms
fistpl
movsb
mov
icebp
pop
lea
push
jecxz
inc
fcmove
mov
and
ja
ret
cmp
das
adc
bndldx
repz
ljmp
int
push
mov
jo
imul
pop
or
fisubrs
and
daa
stc
addr16
js
icebp
jmp
faddl
sub
mov
dec
mov
and
cmpsl
jle
and
roll
nop
sbb
push
jmp
xchg
call
mov
pop
push
inc
outsl
jecxz
or
das
rcl
lahf
pop
rcll
outsl
lret
iret
sbb
mov
push
fcomip
xlat
mov
pushf
adc
scas
sub
movsb
cmp
call
jge
mov
sub
pop
fcoms
adc
mov
imul
inc
roll
std
jae
or
int
mov
pop
mulb
out
icebp
ja
in
adc
test
scas
in
dec
jo
mov
inc
inc
mov
sub
ret
inc
xor
in
adc
popa
inc
je,pt
push
lods
mov
leave
iret
sub
inc
and
add
fimuls
lds
jb
scas
jmp
inc
xor
stos
insl
xchg
xor
cmp
lods
cmp
sbb
call
xchg
dec
andl
xor
sbb
call
mov
loop
cmp
into
cmp
inc
adc
push
add
cwtl
clc
jo
repnz
int
fdivrs
push
es
pop
sub
clc
imul
call
add
mov
shll
out
jae
and
pop
inc
sarl
inc
rcrl
pop
mov
lea
test
les
dec
xor
push
js
ja
sub
mov
or
enter
out
cmp
push
gs
pop
jo
lea
push
mov
inc
ljmp
jns
test
xor
lret
inc
stos
jmp
popf
and
aam
scas
inc
loope
add
popf
jae
add
cmp
push
fwait
lcall
ret
mov
pop
cmp
jno
pushf
fisubl
adc
lods
push
ja
in
and
xor
movsb
sub
sub
mov
jae
pop
sub
pop
subb
mov
ds
xor
inc
je
push
dec
xlat
fsubrl
pmulhuw
and
pop
sbb
mov
push
mov
sbb
inc
xchg
popa
pop
nop
jecxz
add
mov
mov
or
sbb
rcl
mov
leave
pop
cmp
loopne
jecxz
sub
iret
mov
xchg
lods
insb
popa
fidivrs
bound
jl
pop
test
shl
shll
into
in
pop
adc
mov
ret
or
lds
movsl
popf
enter
sub
mov
pop
add
inc
inc
lods
lods
ror
ljmp
adc
dec
fcomps
push
xchg
sub
movsl
jne
mov
sub
mov
adc
pop
or
cltd
cmpsb
inc
dec
mov
repz
lret
dec
and
lret
push
cli
or
xor
ret
sbb
xchg
rcll
push
xchg
lods
xchg
dec
mov
sub
add
push
pop
cmp
lock
jmp
icebp
jecxz,pt
fwait
js
test
je
mov
mov
outsb
inc
mov
stos
and
sub
cwtl
pusha
cmp
out
aaa
or
add
add
xchg
test
sbb
scas
mov
push
daa
adc
and
int3
mov
jecxz
std
and
ja
pop
imulb
inc
inc
imul
push
scas
loopne
jmp
cs
mov
jae
in
nop
or
sbb
or
push
in
inc
xor
and
jl
mov
xor
movsl
mov
or
rolb
inc
aas
cmp
xchg
adc
nop
mov
jno
mov
sbb
and
imul
les
iret
sub
sub
jo
sarl
in
push
out
mov
mov
pop
addr16
sub
popa
push
add
push
test
ja
xor
inc
rcl
jbe
fsubs
xor
cmp
dec
pop
sbb
call
xor
aad
jno
jg
fiadds
mov
add
mov
jecxz
fs
xor
inc
cmp
int
cmpsb
mov
call
xchg
jbe
in
and
mov
inc
inc
mov
mov
pop
lcall
test
jl
add
xchg
jl
mov
aaa
jl
shl
outsl
int3
lahf
mov
fsts
mov
fs
push
xor
gs
sbb
mov
mov
popf
sbb
pop
and
insb
sub
jmp
jmp
mov
inc
loope
scas
stos
leave
jp
cmpsb
shlb
mov
mov
inc
mov
aaa
jge
xchg
pop
in
xor
mov
jmp
das
aaa
aad
xchg
ss
lret
pop
or
sub
cmp
int3
pushf
cltd
push
sub
test
push
sbb
and
mov
enter
mov
movsl
push
test
pop
popa
push
out
dec
or
lret
mov
repz
xor
adc
jns
in
mov
xchg
js
mov
add
mov
pop
in
xchg
in
cwtl
movsb
call
push
idivl
out
ret
push
fstp
inc
push
out
inc
and
sub
xor
pop
in
pop
and
and
push
in
jp
sar
mov
cmp
repz
shlb
adc
jns
in
xchg
cli
lahf
cld
jecxz
out
xchg
in
mov
adcl
sar
mov
and
iret
das
cmp
push
push
rcl
push
xchg
movsb
scas
cwtl
or
mov
cmp
or
add
enter
sbb
xchg
repz
movsb
or
xchg
jno
dec
adc
jnp
nop
aas
mov
jns
lods
sahf
jmp
push
std
sbb
jnp
sti
sbb
loop
sbb
fcoms
mov
fdivrs
fcmovnbe
xchg
cmp
and
lret
movsb
aam
dec
xchg
mov
and
mov
and
clts
inc
sahf
not
cmp
jg
shll
lds
out
div
popf
repnz
test
xor
in
mov
push
pop
fdivrl
pop
std
or
pop
out
mov
push
out
out
sub
mov
je
mov
mov
sub
lret
push
roll
pop
ja
orb
mov
mov
cmp
fs
loope
movsb
push
or
jne
add
jl
adc
insl
cmc
imul
imul
xor
mov
dec
loop
jbe
insb
sub
jne
std
mov
aas
cmpsl
loop
lret
mov
pop
daa
jo
mov
sbb
mov
xor
push
mov
xchg
bound
ret
inc
add
popl
sub
push
es
or
jle
jnp
xchg
hlt
push
fildl
push
ds
out
subb
movsb
mov
pop
xor
cli
inc
push
xor
mov
daa
iret
cmp
push
sbb
inc
push
add
mov
push
loope
fldl
dec
daa
sahf
sti
push
xchg
aad
rclb
jl
movsl
mov
fisubl
movsl
push
or
or
sub
pusha
out
mov
negb
and
mov
in
jne
hlt
mov
pop
or
lret
and
jno
xchg
int3
nop
inc
jae
mov
in
jl
int3
in
icebp
mov
insl
cltd
pop
jae
lcall
orl
mov
add
mov
insb
dec
jns
mov
shlb
jp
add
cltd
ss
imull
das
pop
push
jecxz
pushf
mov
out
out
add
ds
pop
test
cmc
push
rcl
outsl
dec
stc
pop
rorl
push
mov
mov
dec
dec
aas
pop
loop
jl
mov
data16
call
nop
mov
xchg
loope
add
cmc
mov
loope
iret
scas
mov
inc
sbb
iret
mov
shlb
jo
xchg
std
outsl
outsb
roll
xor
and
xchg
mov
stos
out
scas
xchg
ss
cli
out
add
cmp
dec
dec
out
test
mov
sub
scas
add
inc
cli
jnp
sub
fadds
clc
mov
sub
rcrl
imul
loope
rcrl
adc
xor
pop
es
lahf
loop
out
out
fistps
popa
rolb
mov
outsb
cld
xlat
cmp
sar
and
es
cmp
adc
pop
pop
pop
popa
jle
cmp
incb
cli
sarb
sbb
mov
dec
lcall
insb
aad
addl
jmp
bound
les
fdiv
fnstsw
xlat
mov
lock
imulb
and
lahf
mov
mov
pop
fisubs
insl
cmovnp
add
xchg
mov
nop
add
mov
xchg
sbbb
xchg
lahf
pop
sbb
mov
push
es
inc
lahf
les
mov
mov
push
jl
jb
fs
data16
arpl
ss
mulb
and
das
mov
sbbl
in
dec
clc
out
popa
js
mov
idivb
aaa
stc
xchg
mov
test
nop
paddd
pop
dec
push
int
mov
adc
rcrl
ret
arpl
out
cltd
add
push
test
cmp
rep
imul
sub
out
aam
jmp
nop
jo
imul
popf
xorb
loopne
add
or
int
mov
gs
mov
pusha
int3
fbstp
cmc
mov
dec
mov
int3
mov
mov
test
sub
out
mov
jb
ja
call
lea
mov
aaa
jnp
adc
das
sahf
sub
unpckhps
movsl
or
lock
addr16
jg
xor
lret
sub
xlat
mov
jbe
cmp
and
outsb
or
pop
pop
sar
les
loope
lret
jb
sub
ja
sub
mov
in
imul
out
dec
and
fs
add
xor
xchg
xchg
fwait
push
adc
inc
push
xor
rep
mov
jmp
mov
sbb
sbb
adc
je
push
dec
sbb
gs
pop
cld
test
push
sbb
dec
mov
fidivs
pusha
lods
jno
push
cltd
xor
call
js
pushf
mov
popa
pop
mov
popa
ljmp
sbb
repz
adcl
les
out
jo
sti
aaa
call
xor
and
addr16
mov
adc
xchg
push
pop
arpl
aaa
mov
pop
or
inc
fwait
pop
xor
adc
pushf
fcoml
nop
mov
push
xor
test
and
push
and
or
test
div
movsl
jo
adc
scas
mov
inc
or
imul
sbb
xlat
push
xchg
sarb
ret
mov
imull
jnp
loop
sbb
dec
or
pop
mov
inc
outsb
push
sub
jbe
adc
or
and
push
add
pop
js
jp
pop
add
fiaddl
cs
mov
push
test
je
movl
jae
insl
int
push
sbb
xor
push
leave
in
dec
inc
dec
test
fiaddl
sbb
jns
shll
repnz
cmp
dec
movsb
adc
jp
and
mov
xor
int3
daa
adc
mov
push
cmpsl
lods
pop
xor
fs
outsb
sbb
pushf
mov
orl
mov
aam
lahf
psubd
cli
sub
gs
sub
cmp
cmp
in
xor
sar
mov
cmp
or
pop
push
in
cmp
faddp
xchg
adc
cmp
xor
les
rcll
pop
idivb
test
into
push
lods
jecxz
icebp
js
push
nop
jecxz
in
int
ss
mov
mov
lcall
loopne
adc
jb
push
lea
mov
add
popa
das
shrl
dec
or
sbb
push
aam
enter
inc
dec
test
push
xchg
sbb
lret
int3
cmp
adc
jp
pop
jmp
fildll
pop
push
lock
push
das
imul
call
cmp
test
and
out
iret
sub
fsubrl
sub
xor
ret
dec
push
dec
outsb
jno
inc
xor
adc
push
mov
addl
subb
pop
stc
push
call
push
idivl
dec
and
or
pop
cmpl
or
incl
pop
push
ljmp
pop
xchg
push
shll
dec
pop
push
test
call
insb
bound
jbe
std
jns
lock
dec
and
inc
and
ljmp
push
rcr
aas
push
sbb
jno
shlb
mov
test
bound
push
adc
loope
mov
ljmp
sbb
int
inc
add
leave
xchg
jge
fcompl
mov
and
repnz
lret
fmull
jge
fildl
pop
mov
ret
mov
int
inc
and
xchg
cli
cmp
stc
pop
push
test
mov
scas
inc
mov
inc
inc
lea
daa
push
xor
popf
jmp
stos
shll
and
lock
jecxz
loope
fwait
jg
roll
ror
clc
pop
xor
dec
daa
aaa
dec
sub
inc
jnp
inc
add
jno
xchg
push
adc
jae
pop
jl
and
add
sbb
add
cmp
mov
pushw
dec
ret
dec
imul
scas
pop
mov
cmp
push
add
ljmp
pop
mov
cmpsb
sub
sbb
xor
mov
xor
jno
stos
stc
jb
or
pop
ret
pusha
xchg
lds
sbb
adc
pop
jns
stc
inc
das
mov
mov
das
jo
adcl
cmpsl
clc
xor
inc
cmp
xor
in
repnz
andl
pop
aas
out
lret
push
pushf
add
push
xchg
sbb
xchg
insl
xor
jno
insb
out
test
sbb
mov
mov
dec
arpl
dec
mov
cmp
sbb
mov
cmp
fcoml
xchg
cmpsl
mov
mov
out
or
mov
nop
inc
sbb
pop
test
scas
jg
add
les
enter
cmp
lock
mov
ja
pop
out
roll
jno
test
xor
shrb
data16
push
data16
je
jo
mov
push
xchg
xchg
int3
imulb
mov
sbb
ret
mov
cmp
xor
std
das
scas
or
add
mov
lret
mov
mov
add
fwait
test
out
jl
fs
mov
dec
jo
pop
out
mov
mull
mov
or
rolb
cmp
cmc
mov
iret
push
jns
imul
jno
sub
inc
mov
xchg
roll
cmpsb
dec
mov
mov
pusha
aad
sbb
movsl
fs
mov
ret
fsubl
sti
lea
pusha
pop
sub
fbstp
xchg
pushf
push
ljmp
scas
pop
cmp
add
inc
mov
cmp
loopne
xor
repz
mov
sub
mov
lods
push
ljmp
int3
xlat
test
mov
xlat
lret
loop
cmp
push
mov
jecxz
in
pop
andl
adc
popf
outsb
insb
inc
cmp
fs
mov
icebp
inc
cwtl
and
cmc
mov
movsl
sub
jmp
fildll
or
subl
dec
mov
push
stc
xor
clc
rclb
jae
jo
cmpb
inc
js
sbb
xchg
or
adc
dec
xor
lods
push
movsb
push
inc
xchg
lcall
aas
push
iret
pop
lock
ss
mov
jno
in
mov
mov
and
sub
shrl
popf
lods
lock
lea
mov
repz
jnp
loopne
mov
loopne
dec
mov
lock
push
push
fxtract
jl
add
push
sbb
xlat
pop
lods
and
adcb
cmpsb
gs
push
pop
ret
pop
add
pop
xchg
push
lret
inc
jge,pt
xor
sbb
in
gs
mov
push
out
cmp
arpl
lcall
lcall
push
sbb
fs
xchg
jns
stos
xor
test
loopne
shl
fcmove
ret
stos
incl
roll
cmp
push
int3
adc
jno
cmp
sub
in
jg
push
sti
ret
dec
lea
inc
add
fcmovb
icebp
mov
dec
xor
xchg
cld
and
lods
push
push
push
dec
mov
in
inc
jnp
ljmp
imul
cltd
fld
push
js
jns
stos
jecxz
pop
aaa
inc
frstor
ss
repz
xchg
lret
sbb
add
ljmp
in
lods
cmp
dec
lods
push
sbb
add
jbe
xchg
sbb
xchg
repnz
xchg
cmovb
imul
in
adc
jb
jle
adc
dec
mov
rorl
pop
mov
jle
pop
out
mov
push
test
xorb
scas
and
push
push
mov
popa
aas
rcrl
dec
push
xor
fnstenv
fimull
shrb
push
xor
xor
std
cs
aaa
cmp
cmp
fmull
insb
jno
scas
lahf
or
jo
push
into
pop
adc
add
mov
dec
add
imul
in
repz
in
das
cltd
cmc
xlat
cs
je
dec
in
xchg
es
cmp
push
mov
cli
push
shll
outsb
pop
fistpl
adc
std
pop
jae
mov
push
pusha
bound
cwtl
inc
jno
shll
iret
nop
sub
pushf
pop
or
imul
mov
push
pusha
cmc
loope
imul
push
sub
mov
xlat
jp
sub
loop
popa
rolb
sbb
test
pop
iret
cmp
imul
pushf
pop
sahf
mov
outsb
add
fdivrl
and
in
out
ret
mov
cmc
imul
loopne
mov
out
shl
or
mov
pop
mov
dec
cmp
add
cmpl
mov
pop
xchg
neg
adc
jo
jecxz
pop
mov
xchg
mov
cld
sti
and
negb
sahf
dec
adc
fwait
jle
fistpl
pop
mov
push
fdiv
xor
imul
jp
mov
stc
sbb
xor
nop
test
mov
inc
push
inc
pop
nop
out
mov
rcrb
call
cs
jl
ja
out
stc
jge
jno
shlb
add
mov
stc
mov
in
movsl
jb
jl
fisttpl
xchg
nop
rorl
sti
enter
or
sahf
pop
idivl
mov
loope
push
pop
jo
cmp
push
lods
push
imul
cmp
add
insb
imul
stos
mov
lea
xchg
nop
jg
lea
ficompl
leave
pushl
mov
adc
mov
xchg
push
dec
mov
push
ss
add
testb
cltd
cltd
jae
lods
fstpt
int3
loopne
adc
shlb
orb
ficompl
es
or
inc
scas
testl
push
and
mov
xchg
pop
lret
lock
lret
jns
movsl
imulb
mov
cmc
mov
scas
inc
adc
out
fdivr
xchg
insl
xchg
inc
sahf
out
dec
and
and
in
add
mov
outsb
mov
pop
stos
jnp
mov
xchg
sbb
or
xor
xor
cmc
out
leave
mov
push
inc
lret
adc
mov
pop
pop
mov
inc
mov
adc
mov
xlat
cmp
sub
sbb
lods
sets
xor
fstl
aas
popf
cmpl
movsb
mov
or
arpl
fisubrs
lret
aam
cmp
lock
mov
sub
and
sub
xchg
lcall
and
inc
gs
out
stos
mov
dec
stos
jp
mov
mov
sbb
shll
shrb
aad
dec
dec
aas
mulb
xchg
iret
fistpl
ficoml
int3
test
adc
pop
call
or
xchg
jns
cmc
pop
mov
push
lahf
scas
adc
insl
lcall
shl
push
addr16
mov
out
and
cs
roll
dec
xor
push
addr16
mov
sub
xchg
fisubrs
and
negl
push
xchg
add
dec
prefetchwt1
jnp
add
cs
or
sahf
loope
push
mov
out
mov
leave
shl
lahf
test
sahf
lds
or
cltd
and
and
push
sbb
xchg
xchg
jl
fisubrs
data16
fisttpl
stc
inc
fiadds
pop
std
mov
in
push
sbb
push
add
imul
cmp
ja
inc
pushf
push
mov
movsb
nop
sbb
sub
call
push
cld
and
stc
mov
xor
lahf
mov
inc
jbe
xor
fmul
daa
das
push
jns
push
or
push
push
sub
and
adc
fwait
dec
pop
out
mov
lds
jecxz
push
dec
pop
lock
adc
mov
lds
jne
testb
fnclex
out
inc
std
les
test
and
ja
mov
xchg
imul
stc
adc
cmp
xchg
mov
cli
xor
push
lret
aas
sbb
sub
mov
sbb
cli
cmp
in
sahf
push
ret
insl
repz
sbb
adcb
cwtl
mov
stos
mov
outsl
je
jae
lret
xchg
mov
in
cli
je
mov
in
add
pop
fidivrs
bound
sub
stos
push
repz
sub
je
push
enter
sub
dec
add
outsl
sbb
jo
or
inc
not
push
aad
icebp
push
add
and
ret
adc
repz
pop
cmpsb
lods
mov
sbb
gs
xor
inc
sub
xor
rcrb
and
inc
fmul
cmp
mov
in
mov
mov
scas
in
fwait
sub
popf
or
jne
rorb
jecxz
mov
push
lret
test
sub
mov
cmp
xor
mov
mov
mov
xchg
sbb
cmpsl
pop
push
popf
jg
jno
push
outsb
ja
sarl
fld
inc
repnz
pusha
sub
push
popa
sahf
cwtl
in
push
cld
jb
sar
outsl
daa
xchg
and
es
push
mov
add
push
imul
push
and
repnz
sbb
sarb
shr
add
ret
ljmp
jle
sahf
jle
inc
jns
test
xchg
xor
sub
mov
clc
xchg
jg
adc
dec
push
and
mov
xchg
ja
cmp
xor
push
mov
fldenv
cmp
cmp
lcall
and
push
rclb
cmp
cli
outsb
mov
mov
nop
jne
jnp
notl
jbe
imul
stc
es
aam
pop
fidivrs
xchg
int
add
loope
xchg
enter
inc
mov
xlat
sub
fsubrp
mov
jmp
out
xor
cmpsb
les
fdivs
nop
jnp
sub
jmp
add
jb
movsb
das
add
mov
iret
push
cmp
mov
adc
in
pusha
fistps
pop
jg
movsl
scas
dec
lahf
arpl
icebp
ja
inc
xor
out
mov
fidivl
sub
xor
iret
sahf
mov
push
scas
lret
in
lea
nop
add
sti
jnp
in
pop
fsub
outsl
pop
ljmp
addl
add
sub
jns
popa
cmp
clc
mov
push
xor
push
outsb
lahf
dec
mov
push
dec
adc
dec
loop
loope
addl
flds
out
lds
int
adc
movsb
data16
scas
sub
outsl
jnp
cmp
push
xor
sbb
sbb
and
aas
xchg
mov
xchg
or
pop
jo
in
ljmp
pop
clc
xchg
cmpl
fdivrl
push
mov
out
stos
out
daa
jle
roll
pusha
push
aaa
fcmovnbe
ljmp
sub
int3
cld
arpl
call
sbb
pop
adc
aaa
iret
cli
int
jb
outsb
cmc
adc
sub
fildl
ds
jbe
pop
mov
jle
sbb
and
cmpb
pop
out
add
adc
xchg
add
mov
int
sbb
cmc
fs
and
xor
add
dec
fsubl
in
pop
enter
push
mov
enter
fwait
lock
ljmp
lret
pop
inc
push
add
sub
pushf
jmp
adc
in
pushf
mov
push
dec
sub
dec
push
jl
dec
pop
inc
add
pop
outsl
mov
mov
mov
mov
aas
aad
es
push
rolb
adc
std
ja
sub
mov
call
in
and
adc
cmp
mov
ficoml
or
lcall
and
lock
rcl
lcall
push
adc
sbb
sbb
sbb
mov
ret
bound
sbb
sub
cmpsl
inc
repnz
data16
jmp
rcll
shrl
jle
inc
sti
ljmp
les
arpl
sti
cmp
lods
arpl
cmpsl
in
bnd
add
and
mov
out
pop
jae
adc
mov
cli
sbb
dec
inc
pop
and
pop
push
out
inc
push
dec
rolb
scas
mov
xchg
xchg
aaa
arpl
push
add
outsb
mov
mov
test
jo
cs
sbb
arpl
push
fwait
stos
jbe
pop
into
push
lods
sbb
xor
sub
sbb
popf
in
sbb
fldl2e
xchg
push
fdiv
or
or
pop
sti
xchg
inc
and
mov
mov
xor
adc
inc
popa
jo
das
popa
adc
push
or
pop
mov
xor
je
les
sbb
in
xchg
fcoml
and
in
xchg
dec
ds
shrb
jae
xchg
ret
pop
fs
fwait
repnz
lcall
outsb
sub
mov
cltd
or
je
push
sub
jmp
rcrb
dec
xchg
pcmpgtb
and
and
stos
or
add
pop
das
lcall
aam
pop
fstps
test
push
or
mov
inc
or
or
mov
fs
ss
fcmovu
add
dec
adcb
js
cmpsl
jecxz
cmc
fldt
push
cs
xor
push
lds
dec
loope
int
test
push
jnp
movsl
push
and
into
inc
pop
dec
int
insb
clc
movsb
fldcw
int
lds
fsubs
add
outsb
pop
inc
popf
cwtl
movsl
adc
sbb
xor
push
push
cli
fcmovnbe
ljmp
negl
mov
or
mov
inc
mov
test
push
js
mov
sbb
xchg
lods
shlb
jg
cli
cmp
cmp
cmc
ljmp
sti
std
add
icebp
shrl
xorb
mov
lcall
inc
sahf
aas
sub
imul
xchg
xchg
cwtl
xchg
mov
scas
insb
xchg
jmp
std
mov
das
mov
rclb
mov
pusha
repz
orl
adc
add
lahf
mov
jl
jmp
pop
mov
fs
dec
adc
adc
xchg
repnz
in
mov
or
xchg
sbb
or
xchg
push
xchg
inc
sbb
mov
cmpl
mov
sbb
or
lahf
sub
dec
mov
push
cmp
mov
hlt
std
mov
inc
iret
pop
fmull
cmp
scas
pop
add
mov
dec
mov
xchg
push
pop
dec
pop
sub
inc
jno
push
jo
icebp
xchg
push
loop
mov
enter
mov
lock
je
dec
mov
insb
lock
test
movq
lcall
and
fadd
mov
jmp
arpl
adc
push
mov
dec
ds
inc
jge
sbb
mov
sub
ss
jno
push
xor
pusha
jp
ss
fnstsw
push
lods
cmp
pop
cmp
add
ficomps
mov
ret
bound
jae
mov
sub
push
sbb
and
pushf
mov
mov
movsl
cmp
cmc
out
lods
ror
jo
inc
push
push
push
and
fmuls
adc
adc
jae
mov
in
fwait
jbe
add
adc
shrl
test
js
pop
lods
jg
push
cmp
rolb
fyl2x
test
jbe
int3
push
mov
jecxz
sub
cmp
daa
sbb
push
mov
inc
outsl
inc
xor
or
xchg
mov
popa
push
push
std
ret
fadds
pushf
xchg
and
push
xchg
and
int3
push
push
xchg
mov
lea
pushf
sub
inc
jo
adc
and
mov
ret
xchg
jmp
sti
jno
cmc
jecxz
fcmovnbe
or
or
xor
xor
push
push
in
jl
adc
xor
mov
jmp
sbb
in
push
movsl
test
mov
adc
jl
fsubrs
aas
pop
sbb
aaa
mov
nop
lcall
cld
popf
add
es
lret
jbe
sbb
fldl
mov
mov
mov
imul
or
fs
jg
cmp
pushl
hlt
outsl
xchg
insb
jle
int3
or
push
in
mov
dec
call
add
pop
in
inc
testl
add
jge
scas
or
fnsave
xor
or
and
push
add
mov
xchg
inc
xor
les
inc
push
dec
jle
stos
inc
packuswb
fs
in
arpl
cmpsb
pop
inc
mov
mov
dec
dec
shll
int3
scas
int3
fwait
insl
adc
ficomps
or
xchg
pusha
cmp
lods
push
data16
in
xchg
add
jnp
jo
add
les
xor
push
rcr
xchg
dec
enter
sbb
mov
add
mov
push
ljmp
outsl
or
sahf
cmp
lcall
and
ror
pusha
jbe
push
add
ret
or
jbe
leave
xor
add
or
push
mov
out
insb
cld
push
out
dec
ja
cmp
push
xor
mov
push
xor
jecxz
mov
sbb
or
dec
lock
gs
mov
adc
inc
mov
loopne
popa
lcall
sub
out
xchg
enter
mov
push
gs
inc
loopne
mov
sub
xchg
and
mov
insl
dec
int
pop
int
jl
mov
xchg
cli
mov
into
add
cmpsl
pop
jge
mov
xor
add
cli
ja
in
imul
imul
inc
imul
sub
lret
jae
xor
mov
hlt
sahf
cmpsb
ljmp
push
mov
jns
dec
sbb
or
push
xor
pop
rorl
lahf
xchg
inc
and
lods
ja
adc
pop
dec
sar
pusha
clc
jae
mov
out
pop
xchg
test
repnz
icebp
in
movq
jecxz
push
sbb
ljmp
fs
aam
gs
push
mov
stc
dec
or
mov
out
push
mov
cmp
inc
mov
lock
and
or
stc
out
pop
and
push
out
sub
test
inc
lret
mov
ret
adc
ficoml
xchg
add
jnp
popa
scas
push
mov
in
jno
not
jecxz
xchg
jmp
sarb
mov
sbb
js
scas
decb
fs
or
or
ljmp
jmp
mov
inc
ffreep
sbb
lahf
lods
ds
push
push
in
mov
out
insb
xchg
orb
sub
sti
mov
inc
stos
sub
or
test
dec
mov
mov
in
jne
dec
mov
lds
clc
sbb
and
jmp
pushf
xchg
xchg
xchg
in
sbb
imul
dec
xor
xchg
add
ja
lds
test
xor
and
jb
and
jo
sub
xchg
mov
mov
cmp
push
daa
fucomi
loope
ret
adc
adc
out
jo
sbb
mov
sbb
pop
pop
mov
imul
aas
popa
inc
mov
mov
icebp
or
aas
mov
clc
sti
mov
cmc
xchg
aaa
and
xchg
scas
jae
dec
xor
out
cwtl
xchg
and
sbb
ficoms
inc
nop
push
sti
xor
adc
jmp
push
inc
mov
lret
sbb
decl
mov
iret
or
clc
lea
mov
popl
cwtl
aaa
xlat
mov
ret
insl
daa
icebp
add
or
xchg
movsb
inc
mov
sbb
ret
loopne
fisubrs
out
out
lods
dec
mov
push
jbe
repnz
dec
cli
dec
adc
scas
in
data16
popf
aam
and
add
in
stos
ds
dec
pushl
movsl
ret
fldenv
mov
ljmp
in
or
addr16
vshufpd
test
clc
out
lret
daa
xor
lds
ret
lret
push
clc
lahf
add
dec
xchg
mov
sbb
lcall
lods
and
mov
fsubl
ss
stos
cmp
sbb
inc
sbb
add
adc
xor
imul
push
xchg
fnstenv
pop
xlat
xchg
leave
dec
jo
pop
hlt
loopne
sub
sahf
mov
ja
dec
or
push
sahf
pop
xor
negl
sub
cltd
stos
data16
xlat
mov
test
ljmp
int
dec
jg
shrb
out
mov
cmp
sub
push
push
dec
push
fstpl
cli
cmpsl
lock
push
add
movsb
mov
or
stos
inc
lret
sbb
cvttps2pi
iret
stc
call
addr16
jmp
popf
add
rclb
int
les
mov
mov
cltd
mov
push
fwait
xchg
call
leave
in
das
xchg
scas
rolb
jae
lcall
shlb
jns
test
je
mov
int
shlb
icebp
xchg
push
jecxz
or
xor
outsb
mov
xchg
fadds
mov
shl
stc
inc
xchg
sub
insb
cltd
cmp
sbb
nop
or
mov
inc
dec
xchg
lods
sbb
les
loopne
into
push
mov
lcall
push
mov
sub
sbb
mov
fbld
pop
psubd
sub
aam
pop
sbb
flds
or
fucomp
hlt
adc
shll
push
cmp
nop
add
movsb
and
imul
mov
or
insb
mov
stc
les
popf
es
outsb
pop
mov
add
inc
mov
decl
lods
inc
out
push
into
icebp
jb
pushf
xor
out
xchg
push
test
lcall
outsb
ja
test
in
mov
ljmp
pushf
sarb
dec
or
sbb
mov
cmovae
inc
sbb
or
pusha
mov
shll
or
add
sbb
or
jno
push
cmp
hlt
mov
xchg
idivb
fimuls
sbb
sbb
lea
aam
pop
cmp
dec
push
movsb
ljmp
add
dec
push
push
rorl
xor
test
jnp
jl
test
inc
mov
cltd
out
or
push
data16
cmp
xor
test
sti
push
xor
xchg
mov
cmp
pop
lret
pop
sti
dec
sti
xor
xchg
sysenter
or
ss
sti
out
push
negb
rorl
aad
stos
mov
lahf
inc
pop
cmp
dec
cwtl
adc
adc
dec
xchg
pushf
mov
dec
loope
add
xchg
aaa
hlt
push
cs
outsb
nop
mov
sbb
mov
sbb
cmp
mov
push
sub
dec
popa
jp
rolb
fwait
cmpsl
cli
xchg
push
add
mov
mov
inc
imul
pop
or
shlb
repnz
add
adc
stos
cmp
test
adc
mov
icebp
dec
sub
sti
add
xchg
popa
jnp
insb
leave
jp
inc
push
cmc
xor
xchg
sbb
jge
jg
cld
lret
cmpsl
aas
mov
add
xchg
loop,pt
cmpsl
clc
or
pop
dec
insl
subb
or
adc
pop
out
test
stos
or
jne
jge
adc
cmpsb
push
ret
mov
or
cmp
loopne
mov
dec
fildl
in
fsubrs
out
test
std
stos
and
pop
les
jmp
insb
xchg
mov
idivl
lahf
sti
cmp
lret
test
dec
sti
mov
ljmp
ds
push
subb
push
dec
or
leave
pusha
xchg
mov
mov
movl
push
mov
push
movsl
mov
jno
mov
inc
fdivrs
mov
popa
leave
ret
cmp
xor
sub
aas
lret
addl
mov
int
les
pushf
add
dec
arpl
inc
shll
in
pop
dec
push
cmc
mov
jl
pop
push
movsb
outsl
jbe
sbb
inc
cwtl
inc
add
lcall
pushf
xchg
mov
jbe
push
lods
xchg
movl
testl
loope
aaa
lcall
lods
add
pusha
inc
pop
dec
push
lods
div
mov
cmpsl
push
inc
fnstsw
sub
push
idivb
in
lods
mov
jb
cmpsb
dec
addb
lahf
fwait
cmp
cmp
movsl
xor
push
or
cwtl
cmp
enter
xorb
push
ss
push
xchg
xchg
movsb
dec
jg
push
ss
or
push
and
ja
cmp
jmp
cmp
fsts
repz
adc
mov
jae
push
and
adc
pop
arpl
in
mov
iret
test
in
xor
mov
data16
movsl
in
fsubs
pushf
scas
mov
daa
push
jne
mov
lds
or
clc
sub
cmp
xchg
loopne
fimuls
mov
outsl
icebp
inc
jecxz
push
mov
dec
dec
push
cmp
jl
cmpsl
dec
dec
cwtl
into
lret
jecxz
je
sti
adc
and
dec
not
push
push
xchg
cmp
cltd
leave
xchg
adc
mov
mov
mov
cmp
insl
aam
mov
jae
pusha
pop
mov
insb
jecxz
scas
sbb
push
sbb
fptan
cltd
fists
sti
lcall
enter
pop
xchg
sub
lea
or
ret
sub
add
cmpsl
xor
push
push
inc
pop
call
cmp
decb
out
cli
add
pop
jnp
insl
dec
daa
bound
jecxz
iret
adc
fcmovnu
push
inc
stos
fistps
fsubr
js
xor
dec
push
out
mov
aad
in
pop
cltd
push
icebp
and
sbb
pop
test
hlt
xor
adc
jg
mov
push
ret
mov
add
nop
divl
pop
inc
jmp
xor
ss
mov
xchg
int3
aad
and
jnp
test
je
arpl
mov
jnp
cmp
aad
fs
pop
shl
pop
cmp
mov
sub
jb
fdivl
jg
imul
fucomip
pop
push
mov
xor
stc
jecxz
sub
mov
add
lods
pop
fisubl
test
cmp
jnp
mov
or
fdivl
xchg
das
add
cmp
ja
lods
jne
xchg
dec
xchg
adc
lahf
out
ret
adc
les
jmp
xchg
or
call
cmpsb
stc
rcr
jbe
push
out
cld
dec
push
inc
int3
jle
test
je
loope
idivb
dec
in
and
outsl
push
hlt
push
pusha
xor
xor
rcl
insl
aaa
pop
aas
and
outsl
push
insl
mov
test
roll
cmp
xor
mov
movsl
out
dec
pop
mov
scas
dec
out
mov
imul
inc
jae
mov
pop
cmp
lea
sbb
adc
adc
pop
mov
bnd
enter
stos
fnclex
in
dec
in
add
sub
mov
call
test
mov
mov
inc
es
and
lret
pop
cmp
fnstenv
std
push
adc
pop
je
in
xchg
mov
inc
jmp
mov
pushf
arpl
mov
in
lods
pop
lcall
ret
pusha
or
jg
out
cmp
leave
xchg
testl
xchg
jmp
sub
dec
leave
adc
push
gs
jmp
movsb
add
push
and
add
je
pop
pop
pop
sbb
mov
gs
xor
movsl
out
lea
xor
daa
pop
daa
sub
fmul
icebp
aam
xorb
aas
pop
xor
lock
sbb
das
mov
mov
sub
ja
lea
cli
sbb
jp
out
inc
xchg
push
bound
jecxz
jns
mov
xor
sahf
cld
dec
push
fucompp
jle
mov
adc
mov
mov
pop
call
cs
push
call
xchg
pop
stc
test
xchg
rorb
jmp
and
in
inc
mov
movsb
arpl
lret
pop
orb
and
mov
dec
inc
jle
xor
sbb
mov
inc
and
or
hlt
mov
sub
inc
sub
int3
mov
lret
data16
or
stc
or
test
ljmp
fwait
mov
in
xlat
out
and
repnz
jnp
and
in
aad
iret
aas
stos
cmp
xchg
je
sbb
adc
icebp
sub
dec
cmp
lret
int
out
or
ret
xchg
repnz
mov
test
mov
fs
fistpll
or
push
sbb
cmp
mov
jno
sbb
pop
fmull
sbb
cwtl
dec
sbb
call
stos
push
sub
dec
sbb
mov
push
adc
aad
inc
cltd
mov
pop
je
dec
cld
ja
xor
jg
fdivrs
jne
dec
pop
jo
add
sarb
jle
rorb
je
inc
inc
push
mov
jne
out
rorb
fnstsw
cs
loopne
mov
out
popf
jl
cli
cmp
fstpl
pushf
negb
push
test
inc
in
mov
stos
and
into
dec
mov
add
fwait
cmp
sbb
pop
int
lods
push
mov
xor
repnz
add
dec
sub
jecxz
ljmp
inc
cmp
addl
jg
and
cwtl
es
cmp
stos
cld
xchg
adc
push
pop
jle
je
out
xchg
adc
sbb
xor
out
mov
inc
jecxz
push
jnp
or
mov
xchg
shll
xor
xabort
dec
pushl
ss
adc
ss
pop
ret
push
inc
sbb
sbb
push
test
mov
insl
fildll
mov
mov
cmp
add
into
lds
fildl
in
xchg
pop
jmp
aaa
inc
xor
xor
sbb
push
push
out
test
push
imulb
xor
dec
out
aad
js
add
aad
fbstp
xor
pop
jo
xchg
mov
and
cld
mov
movsb
das
outsb
bound
lods
aaa
xchg
in
sahf
int
mov
and
or
in
xchg
lahf
iret
jbe
imul
push
add
dec
shrl
aam
out
cmc
pop
pop
xor
pop
adc
cmpl
xchg
repnz
sub
je
cmpsb
in
sub
jbe
insl
in
push
and
movsl
gs
ja
or
sbb
sbb
pop
dec
xchg
jo
mov
pop
ret
xchg
test
adc
mov
jbe
and
push
shlb
mov
jno
mov
iret
cltd
cmpsb
test
pop
andb
popa
adc
shl
cmpl
sbb
adc
jmp
xchg
lods
lock
movsb
les
cs
cli
loop
xor
loop
pop
mov
mov
mov
mov
sub
fwait
dec
jmp
popf
push
cmp
cwtd
mov
dec
pop
and
jns
push
jno
xor
popa
push
fistpl
push
xor
sbb
cli
push
mov
push
test
fsubrp
and
lea
sbb
mov
leave
rclb
sahf
sbb
sbbb
cmpb
int
sar
xchg
clc
xorb
imul
mov
shrb
cmpsb
mov
push
clc
xchg
jno
test
and
pop
xchg
add
sti
shl
mov
sti
lods
iret
push
pop
push
mov
sbb
sti
add
cmp
adc
enter
push
call
aaa
leave
xchg
add
push
jl
mov
int
fstpl
xor
mov
rorb
adc
push
add
ret
stos
in
adc
lret
mov
xor
psubb
test
sahf
decl
out
mov
pop
cmp
xchg
rorb
mov
mov
jg
sbb
push
push
hlt
fs
mov
sub
mov
fwait
pop
mov
sahf
cmpsl
call
dec
cs
cli
aad
repnz
imul
mov
je
jg
popa
fmuls
mov
das
or
fcmovnb
lods
add
enter
add
mov
mov
fwait
push
sub
mov
mov
pop
inc
jbe
rep
fwait
rcrb
mov
inc
add
js
xchg
shl
mov
sbb
imul
push
dec
outsb
loopew
sbb
adc
jge
movsb
ret
push
imul
inc
fnsave
cmp
mov
ret
repnz
pop
inc
adc
leave
insl
shll
and
jb
insb
xchg
cmp
xchg
rolb
int3
xchg
push
mov
mov
in
xor
es
sbb
mov
sarb
jecxz
in
in
mov
out
scas
xchg
inc
xor
mov
mov
cs
jne
insb
mov
or
mov
mov
pop
dec
out
sbb
dec
sbb
push
dec
es
int3
sub
aad
cmc
es
test
leave
sbb
xchg
adc
loop
popf
insb
test
ljmp
push
xor
adc
mov
add
sbb
mov
dec
adc
jecxz
jg
or
sub
adc
mov
sub
mov
dec
gs
cmpsb
outsl
ds
pop
pop
lret
jne
ds
cld
and
jno
stc
lcall
or
dec
dec
pop
sbb
incl
or
int3
pop
sarl
sbb
adc
push
inc
sti
pop
in
and
pop
push
sub
lods
pusha
mov
negl
int
pop
pop
out
xor
add
mov
sbb
rorl
cmp
mov
sbb
adc
repz
daa
fldenv
dec
mov
add
clc
dec
int3
leave
pop
shlb
aam
pop
adc
ficoml
jge
mov
out
lret
adc
mull
shrl
xchg
and
jp
mov
adc
or
sahf
dec
loopne
jbe
orb
popa
dec
filds
mov
xchg
imul
test
push
jo
repnz
test
jne
leave
sbb
mov
js
jno
mov
lds
push
pop
xor
cli
ret
cmp
lahf
out
mov
mov
jns
xchg
bound
imul
adc
or
jg
in
outsl
xchg
outsb
call
jl
cmp
dec
xor
cmp
pop
xchg
int3
ljmp
cmpsb
movsb
roll
mov
les
addb
imul
inc
push
repz
decl
jbe
repnz
xor
idivb
scas
and
jp
call
push
sub
sub
fldl
xor
movsb
ss
cmp
loop
mov
mov
ljmp
sub
std
fwait
testb
mov
arpl
mov
in
sub
imul
lahf
inc
lods
or
aas
sub
mov
cmp
xor
out
lahf
bound
pop
bound
xchg
xchg
cs
mov
out
rcll
outsb
xlat
sbb
push
lods
cli
cmp
or
or
movsl
adc
and
test
push
incb
ret
ret
out
ss
push
test
xchg
mov
push
jo
xchg
scas
iret
push
outsb
push
aaa
sahf
loop
mov
scas
stos
cmp
roll
movsb
sub
mov
mov
cltd
dec
out
mov
mov
inc
push
cmp
mov
push
jmp
mov
test
int
mov
dec
iret
fmull
pop
jns
out
imul
inc
cmp
addr16
adc
bnd
xchg
stc
lock
into
test
pop
push
pusha
sub
sti
add
repz
jge
insl
pop
push
in
sbb
dec
sbb
fbstp
sbb
sarl
mov
mov
call
hlt
test
pop
mov
jne
cmp
cmp
jne
testl
int3
adc
push
pop
xchg
dec
and
lock
ss
ficomps
mov
leave
jae
and
jne
jo
insl
cmp
jne
and
push
leave
inc
sarl
cwtl
lret
jecxz
pushf
xchg
sub
mov
mov
roll
inc
cld
adcb
pop
aas
jl
cmp
and
push
dec
sbb
jne
sub
inc
es
and
fwait
push
popa
imul
aas
movsl
or
test
or
nop
data16
lahf
test
in
push
sbb
mov
push
leave
jmp
sub
iret
cwtl
es
test
jnp
inc
inc
cs
adc
bnd
jae
sahf
sub
lods
stos
pushf
aam
pop
or
xor
js
test
xchg
in
aad
add
jecxz
aas
sbb
mov
and
ret
jae
movsb
js
jg
adc
lds
stos
aam
jmp
imul
test
popf
cwtl
add
cmp
pop
daa
jns
cwtl
or
xor
mov
lds
push
lods
sub
sub
and
push
in
cmp
in
shlb
jae
mov
adc
xchg
test
mov
cmpsl
add
push
mov
cltd
jno
je
call
into
aad
add
and
and
xor
xchg
pop
out
cwtl
mov
enter
ljmp
inc
sub
pop
and
pop
xor
mov
test
dec
mov
je
cli
ljmp
daa
mov
not
and
shll
dec
stos
mov
inc
and
aad
addr16
mov
push
cmp
lahf
fisubs
pushf
filds
cmpsb
add
pop
add
dec
sbb
mov
add
jl
sbb
inc
inc
mov
pusha
jns
add
pop
cld
sub
sub
mov
adc
xchg
jecxz
mov
mov
xor
mov
data16
frstor
jnp
jne
jnp
je
fadd
sbb
mov
mov
mov
test
cltd
add
pop
mov
movsb
and
std
mov
xor
xor
pop
in
ja
cwtl
mov
and
aam
mov
mov
cmp
in
mov
scas
push
and
mov
lret
lcall
and
dec
adc
aad
pusha
lods
mov
pop
dec
mov
leave
xchg
adc
cmp
mov
sbb
sub
push
fwait
and
or
maskmovq
mull
cld
push
mov
add
jo
mov
stos
xor
sub
gs
sbb
loop
or
mov
out
addr16
mov
in
jge
mov
popf
jne
xlat
cld
fldt
and
cmp
repz
jecxz
mov
insb
mov
stos
test
jp
inc
cmp
popa
ret
lods
insb
and
mul
ret
sbb
sub
shlb
lret
push
mov
std
add
fistpll
stos
pop
pop
cmpsl
lods
mov
jl
shrb
loope
dec
cltd
cld
outsl
cmc
jnp
fbld
mov
or
mov
xchg
jg
aaa
pop
mov
or
js
push
cltd
sarb
leave
fcmovbe
mov
cwtl
dec
imul
mov
mov
mov
movswl
or
mov
mov
leave
push
ret
gs
ja
int
icebp
in
lds
dec
fldt
cmpb
or
jns
or
ja
xorb
inc
aam
dec
cwtl
adc
loop
rcrl
leave
dec
pop
popa
pop
repnz
push
ret
dec
cmp
rorb
xchg
mov
sub
xor
repz
mov
sub
lods
mov
cmp
or
daa
pop
lods
or
push
sbb
rol
jge
fsubrl
in
sbb
cmp
adc
pop
sarb
int
jbe
test
sbb
jg
or
cmp
sub
int3
ret
fstpl
push
xor
in
mov
sub
jne
and
call
cmp
shll
imul
jno
mov
sahf
lock
add
sahf
jp
add
mov
sahf
push
adc
out
pop
jae
aas
jbe,pt
xchg
rcll
test
ljmp
ja
sub
xchg
popl
cli
or
mov
out
in
cmp
out
jge
mov
arpl
inc
push
fcmove
aas
jmp
and
push
xchg
loopne
in
lods
push
xor
mov
pop
jl
jbe
mov
dec
iret
xchg
or
cltd
loopne
and
aas
jb
sub
sub
cli
sub
fiaddl
mov
xchg
stos
not
pushf
or
mov
dec
les
push
mov
and
fidivs
out
mov
add
repz
loope
adc
testl
dec
mov
inc
mov
loop
loope
jle
push
sbb
mov
push
sub
aas
cmp
adc
mov
mov
push
scas
xchg
inc
sub
mov
pop
aam
sbb
mov
dec
push
fstp
dec
jge
outsl
out
mov
add
jns
jl
mov
add
nop
add
lods
fstpl
push
incb
inc
mov
cmpsl
test
imul
add
jle
pop
or
or
mov
and
sub
stc
push
cs
loopne
lret
jbe
scas
sub
ds
xor
xchg
test
xor
sbb
enter
daa
and
std
scas
mov
aam
mov
xorl
pop
sub
and
aaa
jecxz
aaa
insb
sti
jle
loopne
dec
rclb
stc
into
loopne
dec
add
shrl
inc
shll
mov
addr16
xchg
dec
inc
lods
rorl
or
fcomip
push
das
in
rcr
fs
ss
xchg
je
in
shlb
stos
iret
daa
jb
xchg
shrl
and
pop
adc
fs
out
dec
sub
mov
and
jecxz
adc
or
fcomp
mov
mov
cld
dec
daa
and
inc
xchg
cld
movsb
loope
insb
add
ss
daa
mov
pop
cmpsb
jg
cmc
fwait
test
rorl
mulb
push
jp
mov
mov
xchg
subl
pop
aad
xchg
dec
dec
imul
in
cmp
ds
or
lahf
orl
sbb
rcr
jmp
xchg
add
ror
cmpb
imul
dec
inc
into
mov
sarb
cltd
mov
cmp
inc
sub
adc
xchg
nop
idivl
out
pop
adc
cmp
loop
pop
fwait
aad
dec
xchg
aas
adc
shll
pop
popa
adc
xchg
xchg
mov
movsl
call
push
or
les
sbb
mov
mov
aaa
mov
xor
ftst
test
cltd
pop
cli
orl
and
pusha
cmp
mov
jne
fbstp
jo
jp
cltd
jns
pop
and
rcl
in
and
jge
lods
popa
pushf
cmpsb
int
ja
dec
lds
rcrb
shrl
bswap
outsl
std
mov
lahf
mov
loope
in
cmpsb
mov
fnstsw
out
cwtl
in
sub
stos
mov
inc
inc
xor
lods
bound
sbb
orl
lret
loop
loop
dec
in
fdivp
inc
aam
out
adc
add
outsl
xor
ficomps
inc
add
ja
dec
mov
dec
push
stos
xor
mov
push
out
and
test
pop
pop
popa
and
xchg
mov
jno
mov
decl
sti
pushf
lahf
test
mov
dec
sarl
cs
jae
lock
xor
pop
add
ljmp
or
shlb
outsl
mov
push
or
jno
jmp
repnz
gs
mov
mov
push
jge
aad
call
ljmp
xchg
nop
imul
cmp
lret
aas
dec
in
xor
xor
insl
adc
mov
into
jo
andb
mov
test
test
sub
fdivr
push
imul
and
xor
jmp
lods
outsl
xchg
arpl
cwtl
mov
push
das
push
das
int
jle
xchg
xchg
int
jle
stc
mov
mov
push
imul
fistpl
xor
xor
pushf
scas
pop
stc
jp
push
xchg
into
jp
test
or
mov
mov
xorb
add
pusha
loope
iret
or
outsl
fwait
adcb
push
and
rclb
push
add
stos
or
push
stos
insl
xor
push
out
daa
inc
jle
push
jmp
or
lret
mov
mov
jnp
daa
mov
ds
out
repz
or
mov
cltd
rol
xchg
cmp
and
jge
std
addr16
adc
jge
mov
pop
clc
lods
jle
mov
add
sti
out
cmp
jne
sti
rol
add
and
in
xchg
mov
fisubrs
mov
or
and
mov
lret
std
fisubrs
mov
rcr
das
xchg
fwait
push
dec
in
fcoms
cmpl
dec
xor
and
mov
jae
rcrl
xchg
sbb
xchg
pop
adc
ficomps
mov
pusha
and
pop
js
pushf
jo
mov
mov
imul
int3
call
in
push
repz
xchg
xchg
fbstp
cmp
outsb
cs
push
out
or
jge
into
pop
cmpsb
lods
in
sbb
xchg
jmp
lods
mov
dec
push
or
inc
jge
loop
sti
xchg
inc
std
rcrl
xor
or
icebp
mov
dec
movsl
xchg
sbb
or
pop
or
push
not
out
or
or
stos
scas
popa
push
xor
fdivrl
cmp
mov
jo
cmpsb
fidivrs
loopne
pop
test
outsb
mov
notb
xchg
dec
jl
pop
pop
pop
inc
sti
mov
ret
or
outsb
sarl
push
push
xor
dec
shl
loopne
add
sbb
jo
cmc
xchg
xchg
in
xchg
xchg
daa
inc
addl
pop
pop
jp
inc
and
pusha
jmp
xor
lock
xlat
in
xlat
pop
mov
in
icebp
addr16
jg
punpckldq
or
push
into
inc
repz
pop
repnz
adc
xchg
mov
or
and
in
or
xor
mov
xor
icebp
push
es
in
repnz
fdivrp
pusha
cmp
add
shll
pop
in
lods
sbb
hlt
cmp
xchg
inc
pop
or
sbbb
pop
sub
aam
test
lods
mov
cmp
shrl
cld
pop
popf
fisubl
into
out
negl
in
add
shll
into
test
xchg
shlb
stos
or
test
cmpsl
aas
es
dec
adc
leave
pop
scas
enter
jge
pusha
inc
jmp
fdivp
std
sbb
dec
xchg
into
ja
jne
cmc
add
xor
add
stc
scas
sti
in
les
in
out
xchg
notb
and
bound
out
push
mov
or
gs
fildll
hlt
in
fnsave
xor
cs
push
xor
mov
outsb
mov
js
lock
loopne
rcrl
jbe
add
seta
sbb
jecxz
adc
or
mov
adc
into
mov
pop
lds
sbb
leave
jns
or
xor
adc
pop
cli
idivl
imul
les
add
loope
pop
insb
in
jecxz
cmp
ficomps
or
sub
insl
int
mov
sbb
lea
imul
pop
xor
cmp
push
ss
fnstcw
iret
addb
pushf
xor
xchg
test
dec
jo
rcll
in
sbb
out
inc
adc
dec
wbinvd
jnp
pop
push
adc
push
lret
icebp
xor
test
bound
or
sbb
ret
sbb
push
std
fidivl
jg
hlt
imul
stos
dec
mov
jne
sub
cmc
jbe
es
jecxz
ret
cwtl
scas
cltd
sub
sbb
add
loope
pop
inc
add
sub
or
lods
out
mov
mov
pusha
out
mov
fdivrl
jae
sub
xchg
xchg
mov
ljmp
stos
sbbb
outsb
rcrl
sbb
int3
jns
inc
xchg
mov
outsl
das
xchg
imul
cmpsl
pushf
xor
outsb
adc
jg
fistps
mov
xchg
mov
cli
mov
xchg
jp
pop
cmpsl
sbb
fs
jns
sbb
mov
push
jl
xchg
stc
hlt
add
and
push
fisubrl
mov
loop
aam
mov
inc
inc
pop
cmp
push
xor
cmp
add
aad
cwtl
mov
sbb
adc
aad
jecxz
sti
ret
test
lea
xchg
jnp
pop
ret
lods
xorl
lcall
mov
ljmp
push
je
pop
pop
icebp
mov
cmp
hlt
mov
mov
sbbl
inc
sub
mov
stos
loopne
ret
pop
repz
jns
ret
icebp
mulb
cmp
adc
xorb
clc
mov
mov
orl
movsl
outsl
cmpsb
push
adc
pushf
inc
fnstenv
aaa
push
push
push
in
add
hlt
out
xchg
loop
sub
call
adc
insb
mov
mov
mov
jecxz
lea
jmp
push
or
outsl
jecxz
xchg
ret
adc
movsb
add
jge
int3
arpl
dec
imul
adc
and
cmp
jecxz
pop
shll
pop
jb
push
int
sbb
adc
cmpsl
xor
mov
insb
and
dec
addr16
jp
scas
mov
push
push
inc
xor
mov
mov
mov
outsl
nop
pop
push
adc
push
jp
sub
addr16
test
dec
lcall
mov
ret
mov
xor
xor
cltd
lods
pop
pop
sbb
and
mov
ss
sahf
push
cmp
pop
outsl
lods
inc
mov
add
imul
scas
and
data16
pop
hlt
scas
call
addr16
push
ret
insb
jmp
in
mulb
pop
js
incl
hlt
mov
xlat
mov
adc
testl
test
mov
clc
rcl
and
cmp
std
and
notl
cli
and
repz
roll
adc
cmp
mov
movsl
ds
clc
or
adc
jne
fsubrs
add
adc
jmp
fsubrl
icebp
mov
fwait
cltd
jne
ljmp
mov
pushf
test
xchg
aas
mov
es
loope
jae
dec
dec
ss
sbb
xor
out
dec
push
or
loop
jp
xor
add
pop
pop
add
sahf
imul
xchg
bound
insb
cwtl
pushf
les
dec
mov
or
push
test
sub
dec
mov
mov
jl
inc
add
pop
pop
aad
xlat
inc
incb
jno
repz
push
popf
in
mov
mov
test
pop
adc
cmp
mov
daa
xor
push
addr16
push
mov
inc
rorb
mov
inc
add
stos
or
dec
cmp
or
repnz
sbb
xchg
mov
or
faddl
je
in
inc
shlb
mov
int3
mov
test
jle
dec
push
xor
gs
pop
lods
mov
adc
insb
sti
jno
sbb
movsb
ret
cltd
dec
lahf
in
add
or
icebp
cmc
gs
xchg
scas
test
dec
push
aaa
cwtl
int
xchg
mov
shll
in
arpl
sub
nop
fsubrl
mov
addl
mov
mov
push
es
or
das
clc
test
cs
cmp
frstor
push
push
mov
pop
imul
scas
daa
shrl
xchg
mov
cmp
stc
jbe
sbb
stos
aam
cmp
stc
lahf
daa
inc
fisubs
push
into
and
aam
shl
outsl
testl
jbe,pt
scas
fwait
cwtl
mov
fistpl
xlat
sbb
cld
decl
jbe
jmp
movsb
imul
xchg
cmp
inc
and
mov
adc
sbb
mov
sbb
sub
fs
xor
imul
mov
ret
inc
je
xor
mov
cli
int3
mov
xchg
frstpm(287
jmp
mov
or
push
aad
fs
jge
or
inc
dec
test
push
repz
mov
cmp
push
sbb
xchg
call
incl
or
rcr
mov
jns
mov
testb
adc
repz
and
ficomps
pop
les
push
data16
out
test
and
mov
add
sbb
pusha
add
lea
or
mov
xchg
test
xchg
outsl
fdivrs
popa
adc
js
pop
jl
hlt
cs
scas
movsl
and
xchg
lea
outsl
mov
lret
sbb
jbe
cmp
push
mov
shlb
int3
add
ret
jle
dec
rcl
lods
in
in
jbe
pop
sub
sarl
leave
mov
pop
xchg
jo
repz
xor
repnz
lock
adcl
mov
dec
add
movsl
mov
mov
lock
in
rorl
cmpsl
aam
sbb
add
aas
fs
fdivr
test
adc
jg
mov
sub
jae
aam
mov
loope
cmp
ja
cmpsl
jmp
push
iret
adc
rol
sbb
jns
pop
js
dec
push
and
aas
outsb
xor
jecxz
and
shl
xor
inc
fiaddl
jecxz
cs
test
push
popf
adc
jnp
jecxz
shl
sub
fsubl
push
pop
lahf
lcall
xchg
sub
lds
and
stc
sbb
sbb
popa
aaa
mov
pusha
pusha
jae
dec
pusha
add
aad
dec
addb
push
mov
mov
inc
test
imul
orb
dec
pop
jae
fimull
repz
dec
fimull
jg
sub
sbb
xchg
push
inc
push
or
int
pop
mov
jae
push
sbb
add
pop
rorl
lcall
adc
test
rolb
adc
shr
push
leavew
jg
xor
and
sub
push
and
push
mov
or
sbb
pushf
add
hlt
xorb
daa
and
add
dec
mov
cmp
cmp
cld
inc
jno
mov
pop
hlt
fwait
aam
cli
adc
mov
pop
cmpsl
mov
iret
sub
xor
fwait
std
scas
and
xchg
aaa
inc
push
mov
into
dec
inc
paddw
in
mov
daa
aaa
push
ja
scas
out
mov
test
pop
fwait
push
push
pop
out
adc
mov
jae
outsl
sbb
push
jns
inc
jnp
jecxz
or
pop
data16
repnz
movsl
iret
or
aam
test
test
cmpb
sbb
jp
gs
sahf
cs
mov
jmp
sbb
add
push
lret
test
cmp
in
loope
mov
sbb
out
insl
data16
sub
lahf
mov
mov
push
jno
inc
pop
mov
xchg
scas
popf
fwait
inc
jmp
lods
ss
adc
cmp
jno
and
xchg
xchg
cmp
cmp
ljmp
out
cmp
stos
fcomps
lcall
sarb
hlt
cmpsl
sar
ja
test
or
scas
daa
addb
xor
dec
adc
filds
mov
xchg
dec
and
lret
fmuls
faddl
lahf
xchg
sar
inc
loope
lahf
and
jle
aam
xlat
mov
jg
mov
insl
sub
addr16
jno
or
or
xchg
cmc
ficoml
xor
aam
push
sahf
xchg
hlt
das
jmp
pop
sti
push
sbb
push
pop
and
mov
jbe
fisttpl
jae
aas
jnp
arpl
lcall
mov
data16
dec
pop
xchg
aaa
xchg
inc
push
aaa
ja
inc
call
push
or
mov
leave
cmp
scas
cltd
scas
in
or
push
inc
xchg
push
pop
cld
inc
fs
xor
adc
sbb
push
ja
mov
fldcw
aad
flds
ret
jns
xchg
mov
pop
insl
xor
imul
push
paddw
loope
pop
pop
std
pop
stos
iret
dec
adc
ds
mov
icebp
mov
fsubrs
mov
mov
pop
int
enter
sbb
add
or
outsl
jnp
pop
cwtl
dec
les
mov
cs
aas
in
push
mov
and
pop
xchg
js
rclb
scas
pop
sub
nop
pop
repnz
jmp
adc
lret
rcrl
jg
mov
stc
idivb
push
mov
pop
faddl
cmpsb
pop
inc
into
inc
fwait
mov
scas
cmp
cmpsl
and
mov
fucomip
es
xor
lods
dec
inc
cld
pop
lods
shlb
add
push
or
fwait
out
std
roll
mov
push
scas
addr16
ficomps
and
clc
pop
mov
cmp
jmp
adc
sub
dec
cmp
test
pop
mov
leave
xor
cs
inc
or
mov
push
ja
jg
jb
or
js
cltd
and
lock
push
ds
mov
xchg
jl
sbb
aam
outsl
popf
fucom
stos
pop
daa
frstor
cwtl
mov
jne
lea
adc
imul
sbb
cmp
out
add
xor
sahf
add
icebp
add
popa
in
add
xchg
pop
test
jge
xor
add
insl
fcompl
xor
in
scas
imul
pop
xchg
or
inc
dec
mov
out
inc
xor
test
sbb
dec
scas
inc
pop
ljmp
clc
mov
mov
roll
lcall
lcall
fwait
popf
mov
add
jnp
inc
and
pop
xchg
xor
mov
aam
pop
push
sbb
shl
mov
rorl
ret
sub
sub
arpl
subl
add
mov
xchg
xor
add
pop
push
push
adc
int
cmp
pop
fmull
lods
ja
in
sarl
xlat
in
mov
xchg
in
enter
jnp
into
sub
mov
dec
aaa
das
or
mov
xchg
sahf
jae
shlb
xor
pop
jne
push
jle
popf
daa
in
mov
xchg
push
mov
js
jge
fildll
dec
mov
dec
lret
imul
mov
dec
jae
fnstsw
mov
add
xlat
mov
mov
jns
mov
jle
lea
cmp
jmp
pop
push
xchg
daa
mov
hlt
hlt
test
test
pop
ds
sarb
jns
mov
sbb
jp
push
add
ljmp
rclb
xchg
rcl
mov
pop
dec
stos
mov
xor
rolb
jl
pop
test
dec
cmpsb
push
push
fidivl
cli
pop
es
fsubs
jne
movsb
dec
jne
or
inc
pop
movsb
and
icebp
cmpsl
xchg
pop
mov
mov
jb
xor
movsb
mov
in
xor
je
add
or
mov
sub
call
mov
mov
idivb
shrl
mov
aaa
add
mov
cmp
jne
test
mov
xchg
arpl
jle
lret
jns
or
movb
inc
mov
std
gs
xchg
pop
aad
leave
dec
inc
cltd
shlb
out
jae
sub
lock
movsb
dec
mov
popf
movsl
sti
inc
jo
test
outsl
jno
adcb
fstp
mov
std
pop
ret
gs
test
pop
test
leave
cmc
cmc
icebp
pop
cwtl
fisttpl
push
testb
pusha
add
mov
daa
out
hlt
rclb
cmpsl
or
or
mov
test
lahf
jmp
and
inc
push
out
or
int3
or
icebp
mov
jg
pop
mov
ret
cmc
fs
sbb
out
cwtl
lods
inc
cmc
bound
xor
xchg
std
shlb
cmpsb
fwait
hlt
mov
test
mov
or
dec
jae
test
xchg
adc
add
mov
in
daa
push
scas
scas
lods
mov
jl
loop
enter
pop
sub
fisubrl
cmc
add
je
fbld
in
fisttps
cmp
dec
test
jnp
xchg
xchg
cwtl
xor
hlt
mov
add
std
jae
inc
push
stos
xchg
cmp
shlb
jb
fldl
and
dec
add
lock
jp
dec
jno
mov
adc
stos
mov
js
test
bound
pop
mov
jnp
and
ds
int3
push
adc
inc
dec
fsubr
mov
out
mov
test
jg
movsb
popf
xor
xchg
push
mov
aas
stos
pop
fidivs
addr16
icebp
mov
std
xchg
add
data16
fcomi
shlb
aaa
scas
lds
xchg
mov
mov
add
jbe
xchg
scas
fsts
cs
out
xchg
sub
push
pop
enter
bound
push
aam
cmp
mov
add
js
mov
push
cmp
int
jae
sahf
outsb
mov
shlb
outsl
sbb
notb
sbb
out
xchg
mov
push
js
pusha
xor
pop
loope
cmc
imul
or
sti
jae
xchg
adc
add
lods
jb
stos
incl
mov
add
fistps
movsb
mov
pusha
and
mov
repnz
fldl
dec
lahf
inc
out
jmp
scas
pop
scas
fnsave
stos
xchg
lds
lcall
mov
aad
push
jo
int3
in
mov
mov
jo
fs
aaa
sti
rol
js
scas
push
mov
xor
pop
outsb
out
or
xor
push
in
dec
fsubp
adc
dec
sub
clc
mov
add
and
ja
pop
xor
mov
addr16
daa
inc
sub
add
popa
inc
sub
std
add
test
mov
jnp
pop
rorb
out
sbb
ror
iret
push
ror
xchg
mov
daa
mov
xlat
ret
in
icebp
int
mov
jl
lcall
cmc
jns
cmp
fcompl
sar
push
ss
fadd
sub
fisttps
push
iret
adc
imul
mov
xchg
xchg
or
adc
stos
cwtl
dec
dec
insb
lock
push
fprem1
or
popf
push
clc
and
mov
lret
inc
decl
ja
mov
imul
mov
movsl
nop
xor
ds
cmp
dec
mov
in
or
mulb
xlat
jbe
cmp
pop
add
xchg
repnz
movb
shll
js
sbb
cmp
mov
xorb
shlb
mov
xchg
loopne
enter
and
pop
imul
cltd
mov
rcr
aaa
add
bound
pop
roll
pop
jl
pop
sbb
daa
mov
sub
and
xor
inc
lret
add
push
movsb
sbb
xlat
fs
test
mov
outsl
add
push
hlt
sub
addr16
hlt
push
inc
pop
stos
loop
out
pop
scas
jns
xchg
xchg
fists
push
fwait
orl
pop
mov
dec
cld
adc
ret
sbb
dec
pushl
movsb
sbb
ret
jl
mov
adc
mov
xchg
jb
fnstenv
and
int
mov
nop
mov
aad
arpl
mov
jae
int
imul
jp
cmc
sahf
fadds
sti
dec
inc
mov
xchg
adc
pop
jl
push
xchg
jge
ret
enter
and
in
hlt
push
lahf
push
cmp
jnp
push
fldl
mov
addr16
sahf
push
call
cmpsb
test
ja
arpl
sub
mov
leave
xchg
out
sub
enter
pushf
jb
xlat
dec
imul
push
sti
jg
test
xor
jnp,pn
mov
outsl
mov
inc
inc
into
mov
mov
or
xcrypt-ecb
cmpsl
or
das
rorl
push
sahf
xchg
and
sbb
jb
std
inc
fcmovbe
add
loopne
sub
test
aam
jb
sbb
std
push
xor
mov
lods
mov
movsb
rolb
mov
push
test
cmp
inc
sar
push
cmc
or
ja
xor
mov
xor
push
xor
cmp
mov
bound
hlt
push
rolb
in
dec
jnp
sub
fbstp
jp
dec
test
bound
lea
ja
repz
jne
push
gs
cwtl
mov
jge
mov
or
aaa
pop
push
pop
adc
loopne
adc
aas
mov
test
push
pop
adc
dec
sbb
mov
pop
jns
out
or
ficomps
and
lret
sarb
pop
push
cmp
rcrl
movsl
loopne
sub
pushf
gs
add
sbb
movl
rol
test
mov
mov
sbb
xlat
mov
dec
ret
push
fs
pop
scas
xchg
xchg
push
mov
ljmp
mov
sub
rcl
add
sub
stc
push
and
jnp
aaa
cli
sbb
lods
call
fs
sbb
push
dec
movsl
cli
sbb
push
and
xchg
in
lods
in
push
and
mull
imul
cmp
jl
cmp
lret
stc
fsubr
in
lock
mov
lock
icebp
mov
insb
jg
out
sarb
pop
movsb
pop
imul
scas
outsb
dec
movsb
popf
mov
mov
insl
add
out
push
xor
sahf
jbe
imul
inc
push
cs
mov
call
mov
jnp
add
dec
imul
xor
jno
shrb
inc
pop
repz
adc
push
push
in
adc
popa
dec
jl
sti
and
dec
fadds
addr16
incl
sub
andb
jno
jmp
sahf
and
mov
add
dec
pop
cmpsb
movsl
into
daa
sbbl
xor
jecxz
out
cmc
mov
sbb
xchg
jmp
aad
aaa
adc
mov
and
add
in
scas
scas
push
push
and
sbb
ja
shrb
cmp
decl
out
jle
insl
jmp
mov
int
mov
lods
or
popf
test
and
cmc
clc
lret
sbb
loopne
fisttps
lret
iret
aas
jmp
sbb
inc
dec
aaa
fwait
mov
cmc
int3
cmp
cmpsl
adcw
pop
inc
es
enter
pop
mov
jecxz
push
pop
xchg
test
and
das
fistps
jmp
shlb
arpl
sub
sbb
sbb
aad
and
xlat
lcall
stc
leave
aaa
xchg
mov
push
clc
xor
fidivrl
sbb
dec
cmc
ja
inc
daa
add
addr16
testb
movsb
sbb
leave
mov
push
jb
cmp
mov
sbb
les
es
stos
or
push
lcall
stc
jmp
cmp
leave
sub
cwtl
xor
nop
inc
mov
jne
js
mov
data16
mov
add
call
ljmp
jmp
cs
test
out
mov
lret
leave
das
in
rcr
mov
popa
out
inc
jbe
push
jo
test
stos
mov
or
mov
add
xor
push
jbe
adcl
outsl
add
rcrl
daa
rclb
popf
inc
in
cmc
shll
cmp
adc
dec
and
pop
cwtl
sbb
push
imul
jge
movsl
and
mov
aas
mov
adc
cmp
int
nop
jnp
or
pop
sub
cltd
push
xlat
popa
xor
in
popa
sahf
pop
cld
add
or
fildll
pop
or
jle
test
insl
test
les
popa
dec
lcall
pop
popf
and
jg
push
jb
adc
cmp
sbb
rcrl
outsl
sub
lock
ret
and
fs
sub
xchg
scas
les
cmp
ds
sub
testb
pop
les
imul
mov
ficomps
push
xor
test
add
push
rcll
xchg
xchg
pop
test
dec
inc
sbb
and
incl
cmp
push
jl
jno
insb
cmpsl
xchg
pop
test
sbb
cmp
inc
fldenv
fisubs
push
pop
mov
pop
pop
inc
jp
pop
movsb
repnz
xchg
ja
mov
decb
test
movsl
lods
ljmp
iret
jno
xchg
test
push
and
outsl
pop
arpl
into
stc
push
hlt
mov
pop
sub
in
out
adc
jo
in
push
pop
jmp
aaa
jle
cmpsb
icebp
ljmp
out
inc
test
cmpsb
cmp
mov
loopne
lret
stos
mov
jge
mov
sub
popaw
js
shrl
dec
xor
scas
adc
pop
fsubl
push
sub
cli
pop
andb
ja
sub
test
jb
pop
sub
nop
int3
repz
leave
addr16
pop
xor
jp
popf
push
out
push
sbb
add
popf
and
dec
movsl
xchg
mov
jge
icebp
mov
pop
addr16
mov
sbb
lcall
pushf
mov
leave
pop
fsubrl
fdivrl
jo
icebp
cld
lret
sbb
mov
inc
sbb
xchg
mov
sub
cmp
pop
sub
out
jp
mov
jl
and
push
nop
jge
inc
fcmovnu
sbb
nop
mov
cli
out
inc
fildll
orb
mov
or
es
sub
jge
fistpl
ljmp
cmpsb
hlt
mov
es
push
jl
xor
push
mulb
das
movsb
add
xor
fidivrs
cmp
mov
fisttps
adc
push
and
mov
jmp
push
loopne
sbb
or
imul
inc
adc
stc
movsb
pushf
mov
jne
mov
loop
test
fstl
ljmp
movsl
repnz
pusha
mov
pop
sub
test
rclb
sub
andb
dec
jg
loope
leave
enter
push
sub
in
fld
outsl
cld
insl
in
cwtl
lahf
xchg
mov
hlt
dec
push
add
dec
jle
dec
pop
dec
lret
mov
fs
out
inc
and
bound
and
in
cli
push
in
movsl
lock
xchg
pop
xor
and
cmc
push
dec
add
fwait
pop
daa
in
or
repz
call
add
daa
inc
dec
arpl
jae
imul
or
xchg
inc
cmpsl
jp
push
inc
mov
es
sub
ss
dec
or
push
xchg
andl
sbb
pop
push
pop
lret
icebp
repz
jae
pop
pop
sub
fwait
xchg
cmpsl
cltd
push
addb
sub
xorl
mov
call
push
lods
push
xchg
jge
aas
cmp
dec
andb
orl
ret
cmpsb
xor
sub
cmc
push
lret
mov
xchg
pop
cmc
push
push
icebp
les
sub
outsb
fnstcw
dec
push
jmp
cli
out
adc
jecxz
sub
insb
pop
sbb
out
dec
jg
pusha
in
insl
shrb
out
out
fstps
mov
negl
push
arpl
aaa
mov
cmpsb
xchg
pop
cmp
test
mov
sub
push
rcr
pop
cmp
or
ds
aam
shrb
sub
mov
scas
mov
mov
add
dec
jl
cmp
lock
mov
dec
cmpsb
jbe
sub
push
dec
dec
outsl
shll
jns
sub
mov
jno
mov
test
push
scas
dec
mov
sbb
jmp
fcoms
sti
dec
push
mov
hlt
lret
inc
jnp
add
adc
or
add
xlat
xchg
imul
sub
scas
fisttpll
loopne
lret
test
adc
mov
hlt
mov
rorl
lret
and
outsl
inc
dec
sbbb
dec
out
mov
sub
sbb
insl
sub
push
pushf
jp
fdivrs
out
jmp
dec
pop
imul
mov
insb
and
out
test
sahf
lock
sub
int3
call
xchg
xchg
inc
cmp
xchg
inc
test
fmuls
cmp
scas
dec
in
test
mov
pop
or
adc
sub
mov
mov
add
cwtl
adc
rclb
pop
jmp
sub
ljmp
xchg
mov
and
es
mov
push
shrl
cmp
sbb
push
iret
pop
paddusb
jne
dec
lods
hlt
addr16
ja
fadd
push
xchg
lret
dec
pop
sti
icebp
push
lock
cmp
jbe
push
pop
cmpsl
movsl
dec
jo
adc
loop
adc
clc
add
inc
mov
jge
mov
pop
pusha
jecxz
gs
jns
or
frstor
inc
add
cmp
push
sub
pop
jmp
mov
xchg
mov
push
xchg
pop
mov
cmc
adc
xchg
test
js
fistpll
dec
in
test
adc
or
and
or
jae
ja
adc
addr16
clc
mov
fsubl
adcb
shl
xchg
mov
shl
jmp
adc
inc
mov
cwtl
addr16
sub
shrb
pushf
test
sub
arpl
jno
mov
mov
ja
mov
pop
filds
jg
cmp
mov
out
pop
sbb
divl
subl
pop
jmp
push
hlt
pop
sub
dec
popf
cmp
roll
adc
or
xchg
dec
shl
pop
inc
stos
das
xor
xchg
lret
jns
ja
sbb
adcb
ret
xchg
xchg
clc
or
cwtl
dec
xor
xchg
sub
adc
mov
push
cmp
aam
jg
mov
popa
push
fwait
jl
ljmp
or
jbe
or
loope
dec
mov
stos
insl
test
cmp
addr16
jge
lret
cmp
mov
ficoml
push
movsl
dec
jae
addb
mov
mov
mov
pop
jnp
push
lods
adc
and
or
sbb
popf
push
subl
mov
push
out
jno
dec
out
mov
in
aas
mov
movsl
xor
inc
movsl
lods
sbb
jbe
call
mov
es
mov
mov
xchg
movsb
jno
faddp
fcomi
add
add
add
xchg
pop
shrb
cmc
jg
jecxz
and
pop
pushf
sbb
mov
lock
fistpll
or
jb
ljmp
sbb
mov
lock
dec
sahf
push
inc
mov
loopne
aas
out
sysexit
loope
dec
mov
adc
out
inc
arpl
into
mov
or
pop
sahf
cld
push
js
inc
enter
adcb
push
out
jecxz
mov
push
dec
inc
sub
int
mov
cwtl
insb
pop
jbe
sahf
push
mov
pop
add
pop
mov
dec
jbe
loope
nop
popa
inc
in
mov
xor
add
inc
mov
icebp
mov
stos
cmc
fadd
mov
mov
fcmovnb
xor
dec
xchg
popa
pop
int
add
cltd
inc
sub
cmp
mov
loope
push
or
mov
jnp
dec
add
dec
sbb
xor
mov
stos
sahf
inc
popf
out
test
push
mov
cmp
test
lret
mov
stos
scas
xor
les
jnp
xor
popa
js
dec
adc
inc
xor
fstl
jecxz
cmpsb
adc
test
loopne
xchg
pop
daa
fistpl
and
and
pop
mov
mov
out
sub
arpl
xchg
fdivrl
xor
dec
loopne
inc
pop
sbb
orl
js
adc
leave
and
and
pop
pop
jecxz
rclb
call
scas
cmp
and
mov
lcall
dec
inc
push
imul
fldl
in
lds
adc
cmp
fiaddl
push
daa
xor
mov
movsb
mov
call
jns
jo
inc
sti
pop
scas
xchg
inc
add
insb
cmpsb
scas
aam
loope
mov
and
dec
lock
gs
mov
xchg
add
or
cltd
stos
jbe
fisubl
in
jge
pop
pop
es
inc
push
push
daa
mov
sbb
lods
fists
jae
add
jl
scas
push
cmp
shll
js
inc
sbb
dec
xchg
stc
arpl
fbstp
or
and
adc
lock
fcmove
fnstenv
xchg
ret
dec
jle
inc
or
sbb
push
ret
add
or
xor
ficomps
test
cli
rcr
mov
push
call
sbb
adc
or
jno
and
mov
lcall
popf
shrb
mov
dec
xchg
inc
rorl
sub
jae
lds
in
adc
add
push
or
stc
js
cwtl
mov
sub
sub
pop
hlt
push
dec
out
cmc
test
add
push
dec
scas
insb
fdiv
mov
and
repz
inc
pop
xorb
pop
dec
dec
out
sbb
loopne
adc
mov
adc
imul
sub
add
test
jae
push
neg
inc
mov
out
jno
and
jmp
mov
mov
fdivl
pop
scas
mov
push
cltd
inc
lea
lods
mov
std
pop
push
pop
cmpsb
add
sbb
adc
push
int3
xchg
mov
push
cwtl
sbb
or
fidivl
ds
into
bound
fsubrl
insw
mov
aas
mov
or
xchg
mov
daa
lahf
leave
inc
rorb
arpl
push
mov
or
insl
mov
je
inc
mov
paddusw
mov
push
mov
sbb
jge
loopne
lret
jno
adc
mov
mov
ffree
adc
setl
test
dec
lret
aam
mov
in
xor
in
imul
dec
aas
pop
dec
scas
inc
cs
mov
scas
hlt
pop
adc
inc
in
sbb
shrl
popf
mov
mov
iret
mov
cmp
into
cmp
loop
mov
sti
bound
pop
mov
or
std
std
daa
xor
jp
in
js
lcall
mov
fists
pop
mov
and
out
adc
jo
push
in
mov
mov
xor
inc
mov
mov
pop
rcll
sbb
ret
jb
sbb
in
fisubrs
pushf
aas
cld
cld
inc
cmp
jo
out
xor
aam
cltd
pop
pop
xchg
in
push
outsb
fdivl
adc
mov
jl
outsl
shll
popf
es
and
sbb
mov
ret
jp
nop
int3
das
in
jne
add
addr16
jae
mov
bound
xor
aam
std
aad
decb
mov
cmp
adc
xorl
jl
or
jmp
xor
cmp
scas
rcrl
lcall
push
adc
cmp
mov
setne
jbe
pop
lea
ficoms
jae
pop
gs
xor
icebp
pop
lret
daa
pop
fwait
and
push
dec
out
incl
dec
cmpsb
sub
imul
daa
repz
pushf
insb
out
dec
fwait
push
sahf
int
xchg
popf
inc
push
jp
mov
adc
push
into
loop
les
xchg
sbb
mov
cmpsl
cmpsl
jle
jb
test
push
push
shll
jmp
jecxz
xor
push
or
fsubrp
and
aam
mov
nop
ljmp
sahf
in
inc
sub
xor
call
ret
icebp
test
cmp
test
popf
jo
inc
pop
ret
pop
jns
inc
ljmp
icebp
aas
push
out
addps
inc
or
push
aaa
adcb
mov
sbb
mov
jo
mov
out
mov
aad
insb
xor
mov
add
mov
cmpsb
out
push
out
outsl
push
push
xorl
loop
xchg
push
loop
jg
rcrl
gs
idiv
lods
ret
or
fcmovbe
mov
leave
adc
into
jbe
and
jo
pop
es
aaa
aam
es
xchg
or
add
sbb
std
sti
inc
int3
sbb
sbb
adc
inc
mov
fistl
nop
test
mov
movsl
add
push
stos
mov
sub
push
rcrb
mov
cld
xor
cld
aas
fldenv
mov
push
add
pop
and
or
xor
xlat
adc
popa
sahf
sar
push
inc
cmp
xchg
xchg
push
push
pop
loope
sub
push
jno
test
sub
and
call
rcr
sbb
pop
data16
imul
out
and
push
and
test
xor
sbb
inc
cmpsl
and
cmpsl
push
decl
xchg
push
loop
rolb
scas
mov
cld
cmpsl
into
aam
in
mov
scas
pcmpgtd
in
stos
test
push
testl
imul
pop
push
popf
sbb
add
icebp
stos
aaa
push
and
adc
mov
movsb
cmp
xor
cltd
push
out
push
test
leave
add
sahf
adc
mov
sti
xor
and
push
xor
scas
sub
out
adc
inc
fimull
push
mov
repz
out
mov
mov
testb
xchg
lret
xchg
sub
fsubrs
ret
lret
jo
dec
in
bsf
shlb
add
loopne
and
jb
and
gs
rcrl
shrb
in
xchg
data16
frstor
jle
mov
fdiv
gs
jmp
or
outsb
sub
inc
out
sub
out
push
das
add
mov
loopne
jbe
add
xchg
dec
sub
mov
sub
pmaddwd
xchg
mov
jl
sti
or
into
inc
push
xchg
or
xchg
mov
int
loope
imul
lea
testl
ret
sarb
push
into
jge
shr
mov
xchg
mov
lock
push
cmp
lea
jnp
jnp
lret
dec
cld
add
bound
add
lods
dec
stos
and
icebp
cmpsb
add
gs
aaa
push
xor
xchg
fstl
pop
and
dec
jecxz
push
shr
testb
inc
inc
xlat
dec
out
mov
mov
mov
mov
mov
mov
jge
push
pushf
xchg
pop
mov
insb
inc
das
mov
ljmp
dec
ljmp
sbb
pushf
xchg
pop
add
jecxz
fwait
jo
sub
cs
xor
out
push
sahf
mov
dec
mov
hlt
jne
pop
jne
ljmp
shl
mov
lahf
addl
dec
fdivrl
mov
outsb
inc
faddl
mov
jmp
jl
pop
xor
add
movsl
add
leave
push
adc
pop
fiaddl
mov
jb
adc
mov
ss
shrb
xor
test
fwait
sarl
ficoml
dec
outsl
mov
mov
into
and
xchg
xor
mov
sub
jmp
int3
repz
push
sub
rol
jne
pop
sbb
cmove
and
fwait
mov
sbb
inc
test
xchg
fs
adc
cmp
das
jns
rorb
xchg
xor
jb
pusha
lahf
jecxz
outsl
flds
ret
int3
lret
push
mov
dec
int
sub
xor
jg
sbb
inc
in
xor
add
rcrl
outsb
push
std
shrb
bound
fisubrs
mov
jg
iret
add
pop
loop
or
xor
icebp
cltd
mov
ljmp
mov
popa
mov
pop
cld
sub
mov
cmpsb
loop
lret
or
fnstcw
lcall
rcrl
cmc
xchg
imul
aas
sub
jns
mov
sub
subps
lods
ret
in
lret
jg
jns
inc
jle
sbb
in
xor
mov
mov
mov
cmp
xchg
ljmp
stos
pop
jne
cmp
rcr
sub
mov
xchg
data16
inc
mov
cbtw
mov
scas
jge
cmp
popf
add
andl
jbe
or
pop
xlat
insb
sbb
adc
xchg
push
cmp
push
add
out
pop
sbb
pop
repz
lods
inc
push
stos
mov
shlb
mov
sbb
mov
and
xchg
jne
push
fnstcw
loop
daa
testb
mov
xchg
fdivs
fmuls
xor
sbb
jb
sti
add
pop
rorb
pop
add
lret
std
lret
in
shl
mov
sbb
mov
leave
outsl
push
ret
push
pop
adc
add
pop
out
repz
subb
pushf
in
lock
cld
dec
xchg
cmp
push
push
pushf
sbb
jns
les
pop
sti
lods
out
adc
xor
int3
sbb
test
in
xchg
xchg
imul
jecxz
jno
divl
jns
jb
out
adc
out
icebp
dec
mov
sbb
mov
pop
xchg
adc
loopne
ret
push
pop
fistl
xor
out
push
pop
sbbl
inc
test
scas
je
rolb
repnz
cld
xchg
push
sti
stc
jg
inc
in
xor
mov
bound
xor
adc
iret
imul
add
mov
mov
push
out
push
cwtl
mov
push
ljmp
jbe
and
sub
outsl
sarb
ffree
rolb
push
sti
rcrl
movsl
jno
cmp
inc
mov
cmp
pop
in
cs
jp
mov
lods
bound
mov
icebp
sub
sbb
imul
test
mov
in
ret
and
mov
inc
insl
add
push
inc
cld
dec
fcoml
sub
ss
mov
lods
arpl
push
das
sbb
fs
ret
fmul
test
loop
cmpsb
into
push
mov
adc
dec
insl
movsl
pop
sahf
add
push
and
or
cmpsl
push
insb
stos
shll
mov
or
js
aam
cmp
xchg
add
mov
data16
ret
xor
movsb
xchg
aaa
sbb
movsl
cmc
ja
inc
inc
test
jnp
stc
out
ss
push
cmp
ds
pop
test
lds
push
ljmp
out
rcl
test
push
sahf
out
xchg
rcrb
and
mov
into
cmc
outsb
and
push
push
mov
jmp
xchg
hlt
push
mov
inc
and
daa
or
adc
mov
aaa
jmp
in
xchg
dec
pop
mov
stos
push
ss
test
add
xchg
adc
arpl
int3
inc
or
insl
imul
and
in
pop
or
pop
gs
jno
lahf
add
and
rclb
jecxz
xlat
test
inc
mov
mov
insb
xchg
emms
inc
into
add
cmp
bound
jns
mov
xchg
aaa
jl
imul
xlat
or
rclb
lret
pop
sbb
sub
fsubrs
notl
mov
mov
arpl
loope
cmp
in
pop
test
ret
lea
mov
sbb
in
xchg
xchg
fcmovu
gs
jns
dec
sbb
enter
enter
scas
ret
nop
cmpsl
sti
dec
hlt
mov
in
testl
test
rorb
or
xor
mov
rcll
jmp
lcall
lods
push
out
xchg
cmp
pop
loopne
cld
mov
in
out
or
pop
pop
int
xor
imull
aad
pop
cli
cmp
dec
push
or
sub
sub
mov
cmp
lds
and
popf
lret
dec
inc
fsubrl
push
sbb
inc
scas
mov
pop
adc
push
mov
cmc
je
push
xchg
jnp
fisubrs
jb
outsb
mov
fstpl
mov
sbb
out
fmull
int3
sub
mov
jge
lea
and
xchg
add
inc
push
popf
sti
and
ds
addr16
mov
sti
stc
adc
test
movsl
mov
inc
mov
mov
mov
xor
pop
lea
xor
fsubrs
or
xor
bswap
mov
fbld
sub
enter
pop
addr16
pop
arpl
inc
out
sbb
mov
mov
je
int
cltd
gs
int
popf
stos
jno
pusha
out
es
es
pop
out
btr
aas
xor
push
inc
cmpsl
loop
inc
mov
mov
mov
stc
jns
pusha
fnstcw
push
in
jnp
testl
jnp
xor
dec
lods
out
cmp
daa
mov
cmovge
and
add
push
dec
stos
mov
push
fisubrs
xchg
dec
or
movsl
pop
ret
je
inc
mov
jo
movsb
pop
push
xor
inc
repz
cmp
jno
repnz
push
sub
enter
test
push
sbb
out
adc
mov
and
fsubr
in
inc
mov
test
shrb
shrl
mov
xor
call
and
mov
je
inc
jp
loop
add
push
or
sahf
das
sub
arpl
test
adc
mov
xchg
mov
sbb
fs
outsb
xor
orb
subl
sub
sub
push
insb
in
test
sub
jo
push
jecxz
adc
mov
fs
dec
call
in
dec
pop
dec
push
sub
mov
mov
das
mov
sarb
les
enter
mov
mov
add
sub
test
sahf
sbb
cld
xchg
push
mov
fidivl
fcompl
insl
and
sub
fistpll
enter
xchg
jle
imul
sbb
pusha
popa
xchg
xor
jge
lcall
xor
inc
ja
cmpsl
std
jns
jmp
fcmovbe
pop
out
pop
test
int3
or
mov
data16
ljmp
flds
lahf
lea
rolb
mov
in
xor
pop
test
jge
int
mov
fs
xlat
loope
add
cmp
outsl
out
xor
xchg
mov
xchg
mov
test
xchg
sti
cmpsb
notb
push
or
inc
jecxz
xchg
leave
fisubrl
in
cwtl
or
push
add
fcmovnbe
or
or
inc
push
or
adcb
outsl
dec
iret
xor
sbb
pop
call
pop
hlt
jmp
mov
inc
mov
adc
hlt
push
mov
adc
mov
mov
mov
shl
pop
pushf
adc
insl
lret
notb
je
adc
mov
imul
or
and
adc
icebp
fcoml
and
popa
imul
cmp
insb
fs
sub
test
fistpl
hlt
addb
xchg
or
gs
rclb
jns
mov
mov
aam
popa
mov
lods
arpl
ret
mov
mov
fisubl
sub
loop
cmp
xchg
pop
jecxz
cmpsl
jae
mov
cmpb
pop
pusha
mov
fmull
pmaxsw
xor
je
fisubl
push
push
jle
insl
les
inc
sbb
nop
pusha
sahf
sub
dec
rorl
std
iret
adc
scas
out
outsb
sbb
out
out
inc
mov
cmp
push
test
adc
xchg
bound
iret
stos
sub
or
adc
fsubrp
mov
mov
js
push
mov
mov
push
cld
mov
mov
lret
xchg
xchg
xor
outsl
xor
clc
test
jle
out
adc
push
push
and
jno
mulb
mov
or
pop
and
iret
shlb
jo
into
mov
fistl
mov
aad
cli
lahf
and
mov
xchg
or
filds
cltd
add
dec
in
fidivrs
repnz
mov
or
xor
cmpsb
aad
add
orb
pop
insb
aaa
cli
sub
gs
repz
ljmp
mov
add
hlt
into
clc
insb
adc
mov
ret
jmp
lds
jnp
popa
xchg
mov
rcrl
sbb
or
push
mov
adc
jbe
cmp
xchg
mov
ret
enter
dec
cmp
adcb
neg
jecxz
xchg
inc
mov
jae
pop
pop
nop
mov
fiadds
xchg
and
sub
or
adc
sub
lret
call
aad
dec
scas
and
fbstp
sbb
mov
clc
jecxz
push
mov
xchg
jecxz
push
jnp
cmp
stc
or
je
imul
xor
jnp
jo
pushf
xlat
cmpsb
leave
rol
and
pop
inc
xchg
xchg
xchg
rol
pop
sahf
sub
jg
mov
and
or
or
xchg
inc
mov
mov
cld
ret
or
sbb
fists
out
out
or
dec
gs
imul
sbb
push
sub
add
pop
xchg
cmp
fucomp
jmp
in
jne
cmc
dec
xor
push
and
enter
fcomps
mov
push
mov
cmp
adc
and
mov
test
add
lods
xchg
lock
mov
pop
adc
dec
jo
out
jae
lahf
ret
pop
and
repz
jp
outsl
sbbb
loopne
stos
shr
pmovmskb
or
cmpsl
mov
xor
stc
inc
aaa
mov
sub
repz
and
fs
push
stos
sbb
sbb
loopne
int3
inc
daa
es
pusha
xor
repz
les
leave
dec
push
enter
ja
and
inc
push
nopl
xor
lods
jne
sub
jb
or
and
sub
jecxz
fwait
sbb
add
xor
xlat
mov
jecxz
dec
ror
or
call
int
mov
jge
and
das
fstl
aam
arpl
xor
out
mov
push
icebp
and
ja
mov
xchg
data16
xor
aas
fwait
es
push
mov
stos
jnp
sbb
push
cmp
xchg
xlat
ret
mov
push
xchg
ret
push
mov
int3
cmp
lcall
into
int
pop
push
rcrb
pop
push
bound
push
sub
pop
xor
lods
mov
ja
sub
and
movsl
sbb
xchg
shrl
inc
arpl
fadds
ds
add
scas
orl
or
pop
xchg
shlb
sbb
loop
jbe
xor
dec
or
sub
ret
mov
inc
sbb
xchg
jg
lret
aaa
je
mov
mov
adc
shlb
shll
out
int3
xlat
addr16
fcompl
fwait
mov
je
sbb
aad
aas
cmp
ret
mov
adc
std
mov
test
push
loop
in
lret
ja
cld
sub
adc
sbb
mov
cs
mov
xor
pop
mov
mov
adc
idiv
pusha
jmp
orb
ja
rcrl
jmp
push
mov
xor
pop
lods
test
negb
fists
cmp
addr16
out
sub
mov
loop
and
mov
or
add
push
xchg
pusha
push
mov
std
push
jle
xchg
mov
dec
ficomps
push
sbb
cmpsb
subb
aas
aam
dec
cmpsb
cmp
sbb
mov
sub
xchg
arpl
enter
cli
jne
pop
sub
xor
mov
xchg
cmp
and
push
enter
add
fcomps
jmp
sub
push
jg
mov
xor
out
jae
mov
jp
popf
pop
inc
out
xchg
jno
adc
jmp
testb
jae
dec
je
lock
dec
cmp
pop
mov
je
fildll
cmp
jg
imul
dec
iret
loope
pop
mov
jnp
ja
ficompl
fildl
lret
jecxz
push
cs
pusha
sti
sbb
mov
shll
inc
sbbb
les
call
cli
fwait
inc
aad
xchg
push
insb
int3
xchg
int3
mov
jns
test
xchg
adc
and
mov
scas
push
push
push
clc
push
xor
pusha
ljmp
aas
pop
lret
icebp
sbb
lret
push
aad
add
outsl
bts
adcl
mov
pop
xchg
sbb
adc
adc
mov
pushf
outsb
dec
mov
mov
vcvtdq2ps
jno
mov
adc
jne
mov
xor
enter
mov
jb
or
or
xor
test
jns
out
test
out
sub
scas
xlat
lods
inc
add
mov
add
rcll
mov
ljmp
pop
add
inc
xorb
mov
push
js
lods
test
sub
arpl
push
dec
sti
test
stos
movsb
push
inc
imul
data16
pop
enter
dec
xchg
or
ds
adc
scas
and
and
sbb
cmpsb
dec
and
mov
repnz
jnp
cld
aad
or
mov
or
in
pusha
xchg
xchg
sbb
lret
mov
lods
cmp
out
sti
cmpsl
push
sbb
mov
leave
pop
mov
rcrl
pop
cmpsl
lods
iret
pushf
fidivl
test
test
sbb
aam
jns
clc
mov
lcall
push
aas
sbb
adc
mov
stos
adc
test
out
sub
mov
lods
add
mov
call
cli
fdivrs
ret
mov
sahf
addl
xchg
mov
cmp
repnz
jbe
mov
pop
sub
push
adc
jmp
push
mov
jnp
ss
in
sbb
icebp
pop
add
xchg
inc
int3
xor
or
lods
test
aas
les
popf
enter
aam
jge
mov
mov
mov
outsb
mov
cmp
dec
mov
testb
divl
xor
sti
out
das
mov
pushf
and
mov
jge
fbld
enter
imul
lret
sbb
xor
and
sub
xor
into
fldenv
pop
ss
fwait
std
push
push
fmulp
cltd
and
pop
add
xchg
inc
int
cmc
clc
adc
jle
in
sub
and
xchg
insl
mov
mov
cmp
push
test
arpl
xchg
insb
out
nop
cwtl
dec
in
jne
mov
sbb
push
jne
pop
inc
and
cmp
jg
leave
jne
mov
push
jmp
cmpsl
xlat
push
jb
pop
jno
dec
and
inc
and
aas
or
mov
jp
dec
daa
push
ret
push
add
shrb
cmp
js
add
dec
mov
jp
or
xchg
mov
rcr
push
adc
in
sti
lcall
out
sub
adc
loope
lock
les
movsl
aam
sub
hlt
sbb
push
jno
fwait
cmp
ret
push
dec
xchg
mov
scas
xor
jne
lahf
or
daa
fimull
pop
in
jecxz
and
push
js
xorb
lods
sbb
repz
sub
push
ret
jmp
lahf
gs
mov
inc
jne
cli
xchg
mov
cmp
dec
ret
mov
subl
cli
lret
pop
mov
mov
push
add
push
incb
xchg
cmp
push
fdiv
and
jmp
ffree
push
jg
outsb
aam
and
pop
mov
xchg
push
sarb
add
insl
stc
inc
jnp
loopne
or
cmc
sub
aam
arpl
jg
icebp
adc
jecxz
in
sub
xlat
subb
inc
decl
cld
clc
punpcklwd
imul
sub
fs
fucom
aad
clc
mov
lods
add
mov
lock
xlat
add
loop
fucom
cmp
mov
mov
or
push
inc
popa
clc
adc
pushf
into
jg
test
aam
xchg
mov
mov
bound
ret
inc
repz
in
mov
jb
adc
xchg
jg
lds
test
xchg
pop
push
lock
xchg
ja
jae
lock
jnp
hlt
or
and
jmp
imul
mov
mov
push
pushf
cmpsb
inc
movb
repz
addr16
arpl
adc
or
add
aaa
mov
dec
in
push
and
mov
xor
xor
es
rolb
mov
rcl
gs
xor
lea
mov
adc
pushf
ficomps
in
cwtl
cli
mov
jmp
jne
dec
jp
ljmp
push
jmp
mov
incl
aaa
lds
pop
add
add
jo
je
mov
cltd
jecxz
stos
jo
push
adc
xor
arpl
cwtl
pop
pop
dec
ja
je
mov
adc
pop
jl
popa
mov
dec
test
or
mov
bnd
pop
push
dec
insl
adc
sbb
xlat
shlb
pop
lods
push
ja
inc
xlat
jno,pn
pushf
dec
sub
pop
arpl
pop
out
bound
push
cs
jne
push
or
fdivs
xchg
jecxz
sub
lods
cli
fistpl
sbb
adcb
outsl
popa
push
push
dec
jb
adc
or
cmp
jmp
mov
inc
inc
cmc
inc
mov
jns
in
lahf
dec
shll
mov
jnp
idivl
loopne
cltd
push
jae
xor
data16
repnz
inc
sbb
test
les
fs
adc
cmp
push
dec
sub
ds
cmpsl
insl
notl
add
and
mov
pusha
cmp
lods
movsl
add
jp
out
adc
fsubr
jnp
mov
sbbb
fpatan
sbb
and
outsl
adc
mov
adcb
mov
pop
xchg
mov
adc
or
cld
lods
adc
dec
cmp
inc
outsb
pop
xor
pop
sub
imul
pop
xchg
xchg
repnz
add
lahf
stos
imul
jo
push
int3
out
add
iret
decl
insl
mov
iret
popa
and
popa
ljmp
cmpl
lock
inc
pusha
fnstcw
jge
or
xor
into
into
fldcw
pushf
cmp
jno
es
jmp
cs
fnstsw
mov
mov
jp
push
movsl
xlat
sbb
xchg
push
xlat
mov
out
and
or
mov
in
imul
cltd
cmp
mov
push
cmp
mov
cwtl
xchg
dec
testb
xchg
push
cltd
pop
dec
or
push
xchg
mov
add
add
push
xchg
iret
cmp
push
inc
and
hlt
push
stos
fiaddl
xor
aaa
cmp
repz
test
fwait
roll
push
dec
int3
push
inc
jbe
fcompl
xlat
shll
dec
cmp
and
cmpb
inc
cmp
jle
fistpll
cwtl
mov
les
jno
icebp
mov
enter
or
jns
in
fidivs
nop
les
push
add
in
xchg
aaa
inc
jno
add
inc
ja
lea
lret
lret
xchg
cmp
push
xlat
push
mov
xor
outsl
mov
sbb
loop
push
out
shll
mov
fs
ss
push
leave
adc
fildl
adc
inc
ficomps
sub
mov
add
mov
jge
or
loopne
sbb
shl
cmp
lods
sar
movsb
sub
push
cmp
les
sub
stc
cmp
jbe
cmp
mov
adc
and
fisubrl
sbb
nop
pusha
int
in
push
loope
aas
aam
enter
or
cmp
ss
add
cmp
incb
test
pop
iret
or
inc
jnp
xor
hlt
xor
xchg
mov
loopne
dec
shl
inc
mov
icebp
inc
out
or
add
imul
add
arpl
gs
cmp
pop
jne
add
cmp
push
xorl
sub
shlb
sbb
xchg
fcmovbe
push
add
icebp
stos
push
adc
and
fistps
out
daa
mov
push
test
shll
mov
push
add
xchg
js
dec
dec
mov
fiaddl
mov
mov
movl
jnp
in
jge
out
aam
pop
cmpsb
stos
nop
lods
pop
test
lea
test
cs
mov
popl
pusha
mov
xor
sub
sti
iret
or
sbb
std
out
ljmp
lds
xchg
cli
roll
sbb
loop
ror
loope
insl
or
ljmp
insl
mov
or
pop
aas
loop
scas
xchg
mov
mov
gs
add
xchg
pop
dec
mov
out
jo
stc
xor
aaa
jne
dec
ds
lock
mov
out
stos
dec
add
bound
xchg
outsb
popf
inc
xchg
jecxz
icebp
fnstsw
and
shrl
push
xor
fidivrs
movsb
les
gs
aaa
or
mov
ret
jb
movsl
mov
mov
andl
dec
test
mov
lcall
xlat
or
faddl
out
inc
insl
or
dec
push
push
les
out
fs
mov
mov
mov
sub
lahf
pop
sub
nop
cwtl
cli
fadds
lock
js
add
lret
repz
jp
outsl
outsb
push
cld
addr16
xchg
out
aam
or
clc
imul
loop
out
jmp
push
push
icebp
arpl
add
inc
push
out
insl
stc
stc
cmp
lret
jae
dec
fmuls
push
shr
es
cmpsb
mov
ret
xchg
outsl
inc
fiaddl
jno
xchg
fcomps
cltd
lcall
sub
or
ss
cmp
jne
aaa
pop
stos
xchg
xchg
mov
pushf
bound
in
mov
es
cmc
gs
push
arpl
and
jne
cs
inc
xchg
cmpsb
sahf
arpl
mov
test
sbb
mov
aad
je
mov
sub
arpl
mov
inc
ret
sub
xor
sbb
lea
sbb
adcb
aad
cmc
mov
imul
mov
ret
jp
mov
or
nop
jl
dec
out
mov
lods
sbb
mov
fwait
test
pop
lcall
scas
icebp
inc
inc
enter
les
data16
or
or
insl
lods
arpl
and
sbb
lret
dec
iret
gs
pop
ss
out
dec
ss
pop
or
mov
mov
test
movl
fidivrl
pop
cmc
fisttps
arpl
mov
stos
shlb
lcall
add
mov
outsb
xor
outsl
mov
adcb
loopne
rclb
adc
jl
adc
pop
mov
adc
mov
pop
ds
cmc
xchg
sub
adc
fists
or
test
and
push
mov
jle
rorl
neg
shll
pusha
pop
cmpb
mull
adc
mov
popa
or
mov
sbb
cmpl
gs
sbb
jbe
sbb
cmp
call
movsb
fmulp
shrl
stos
daa
sub
mov
leave
adc
rolb
test
jp
mov
popf
xchg
popa
std
adc
out
inc
inc
mov
inc
jp
fsts
pusha
push
ljmp
mov
mov
cmp
cmpb
xchg
cmpsb
loopne
sti
dec
aam
bnd
lret
mov
mov
push
cmp
mov
cmp
out
scas
jp
cwtl
push
fcomip
inc
ds
push
mov
cmc
stc
xor
int
push
dec
push
push
sti
push
stos
je
sbb
sbb
dec
call
jne
inc
adc
in
andl
fwait
int
dec
js
gs
cmpsb
inc
rolb
add
and
hlt
imul
aam
sbb
xchg
jp
arpl
jnp
rol
pusha
loopne
and
pop
push
xchg
push
xchg
icebp
mov
mov
rclb
push
lods
jecxz
imul
or
and
scas
dec
mov
loope
mov
leave
out
rcl
dec
js
mov
cwtl
xor
xor
lock
movsl
add
and
adc
jmp
mov
mov
jno
movsl
int3
push
jmp
outsl
pop
pop
xchg
cmp
dec
test
loopne
mov
push
mov
enter
sbb
mov
nop
dec
jne
adc
das
mov
mov
in
sub
xor
jl
int
jne
inc
stos
sbb
mov
mov
icebp
or
popa
sub
xlat
dec
in
adc
pop
subl
lds
jp
insl
push
cmp
test
fbstp
clc
frstor
inc
sub
adc
stos
ret
xchg
in
andl
fistpll
in
and
push
push
sub
pushf
and
lahf
or
out
xor
daa
cld
das
xor
xchg
shr
or
fwait
nop
insl
mov
mov
lahf
xchg
mov
repz
push
add
in
pop
js
enter
and
cmp
les
hlt
rcr
pop
jp
jnp
xchg
and
pop
or
popa
lea
push
xchg
xchg
cmc
jge
and
cmc
add
cmp
int3
jg
std
std
mov
pminub
lods
pop
or
cmpsb
sub
xchg
sub
sub
nop
push
out
lret
cmp
insb
insl
add
sbb
call
mov
jl
sbb
test
xchg
mov
xor
or
xchg
test
jg
loopne
pop
jnp
lret
insb
nop
loopne
xchg
or
push
push
addb
push
gs
pop
inc
xor
pusha
jge
push
je
icebp
jb
push
dec
jo
jle
cmp
pushl
lret
inc
push
movsl
cld
push
gs
sbb
mov
or
sahf
jae
pop
xchg
cli
mov
push
shl
out
dec
lret
arpl
mov
sar
inc
in
inc
cmp
jecxz
xchg
mov
mov
scas
test
hlt
push
cmp
fcomps
lcall
int3
mull
pop
test
shl
lea
xchg
call
push
push
fwait
rorl
push
scas
add
mov
lock
xchg
or
push
popf
mov
icebp
clc
xor
jmp
adc
sbb
cmp
aad
dec
pop
mov
cmp
stos
cltd
inc
lea
push
pop
dec
mov
push
mov
filds
mov
adc
std
or
cld
fadds
aaa
addr16
and
mov
loopne
in
lret
cmp
xchg
xchg
loopne
iret
mov
nop
shlb
fdivr
jle
pop
xchg
loopw
mov
add
push
add
cmp
add
pop
mov
xchg
icebp
cltd
mov
xchg
inc
movsl
dec
mov
pop
xor
jmp
lods
ret
fstpl
jmp
pop
das
and
adc
jo
imul
stos
lea
inc
cmc
and
in
push
data16
loopne
lret
mov
add
aaa
clc
mov
test
xchg
push
xorb
mov
inc
push
loope
inc
push
jb
mov
pop
jp
mov
xchg
or
test
stos
and
sub
dec
clc
ljmp
sbb
fiadds
jb
das
fwait
bound
xor
stos
aad
enter
cs
test
or
inc
adc
roll
mov
faddp
and
aas
mov
jg
arpl
in
sub
nop
ret
in
lea
int3
push
fdiv
adc
imull
arpl
push
ficoml
fisubs
push
add
xchg
inc
stos
imul
inc
call
and
xchg
daa
clc
and
scas
mov
fisttps
outsb
dec
test
push
scas
push
in
leave
sti
je
sbb
scas
mov
adc
mov
cmp
leave
pushl
cmp
pushf
in
cmp
pop
push
mov
jnp
xchg
sar
aaa
and
ja
in
les
jl
or
push
mov
jecxz
add
add
je
and
pop
inc
or
jmp
sub
jl
stos
sub
pop
sbb
enter
fidivs
xchg
fsts
mov
subb
notl
adc
jmp
add
sbb
mov
adc
cli
nop
bound
pop
mov
mov
decl
push
push
cmp
jl
repz
repnz
xor
pop
arpl
sahf
cmc
xor
pop
fiaddl
in
push
mov
adc
lcall
adc
mov
out
jns
cs
mov
std
fistps
pop
es
sub
cwtl
aad
and
sbb
pop
fdivrl
mov
stos
pushf
in
jp
mov
sbb
mov
jecxz
xchg
repz
xchg
and
in
imul
push
cld
jecxz
sub
sub
rclb
pop
mov
in
xchg
call
pushf
test
inc
push
cwtl
sub
pop
fldl
sub
mov
xchg
mov
or
add
pusha
push
pop
mov
mov
jne
cli
jmp
mov
nop
leave
push
inc
repnz
or
mov
in
sub
mov
cmp
lods
rcr
jns
pop
jo
push
sub
sarl
push
jecxz
sub
add
sub
push
sbb
mov
push
int
jle
mov
add
outsl
mov
lods
in
mov
jmp
and
push
or
iret
ds
jecxz
mov
add
xor
sub
ljmp
and
mull
fcomps
sbb
xor
dec
xchg
cmp
mov
add
or
fstpt
popa
pop
pop
ljmp
aam
ret
cltd
leave
or
enter
xor
ljmp
cmp
mov
add
mov
mov
mov
push
dec
insb
imul
jge
ljmp
or
mov
in
ret
cli
or
jmp
sbb
mov
pop
outsb
cmp
and
dec
cld
push
cmc
adc
andl
lock
insb
mov
inc
xchg
daa
jno
test
ret
repz
or
inc
cwtl
ret
lret
popa
stos
mov
xchg
mov
jne
add
xchg
rcrb
cmpsl
mov
int3
nop
cmpsb
fs
data16
cmp
mov
js
scas
test
cltd
loope
nop
jecxz
test
shll
dec
adc
xor
stc
cmp
nop
lcall
imul
mov
push
ret
dec
les
jbe
dec
addr16
jne
in
test
add
cwtl
cmpsb
add
sub
xchg
cmp
aaa
fdivl
inc
hlt
stos
mov
sub
movsl
into
cld
lock
sar
mov
push
fcmovnb
and
and
inc
add
add
insl
pop
push
jbe
push
push
call
rorb
out
mov
add
jmp
push
lock
adc
in
xor
adc
movsb
sbb
rorb
dec
mov
mov
pop
lahf
das
push
test
mov
mov
xlat
xlat
ljmp
into
hlt
and
iret
push
loopne
mov
mov
adc
mov
mov
add
in
fidivl
test
fimuls
movsb
es
xorl
in
adc
xchg
or
pop
lret
pop
lods
call
push
jmp
cli
xchg
adc
insb
lock
fisubrl
and
hlt
sub
pushf
gs
sub
adc
popf
pushf
je
jecxz
xchg
in
push
and
push
movsl
gs
int3
push
movsl
ljmp
movsl
mov
inc
inc
mov
scas
add
leave
add
imul
inc
test
mov
sti
mov
sub
aaa
out
cmp
sarb
dec
movd
sub
in
scas
rcrb
jp
or
in
and
mov
stos
scas
xor
rolb
imul
xchg
jl
insb
loop
mov
jne
push
jecxz
aam
mov
popa
mov
jbe
insl
clc
xchg
aam
pop
mov
cli
push
cmpsl
into
scas
or
inc
xchg
cmp
pop
xor
out
mov
xchg
xchg
lds
pop
fsubs
mov
test
jne
xor
enter
xor
adc
and
shl
add
pop
jp
fwait
arpl
pop
in
dec
ret
shl
or
cmp
fbstp
bnd
int3
andb
pop
sub
cmpsl
shrb
cmc
ror
iret
push
jne
push
pop
div
aaa
push
mov
add
jno
dec
mov
loopne
jo
mov
stos
ss
das
outsb
int3
or
xchg
ja
xchg
cmp
sbb
or
cmp
gs
inc
push
dec
adc
and
sahf
lret
add
pop
pusha
mov
mov
data16
out
repz
mov
incb
std
jmp
aaa
mov
movsb
gs
aam
inc
aad
sbb
mov
xchg
dec
add
jge
test
icebp
cli
inc
mov
mov
test
xchg
xchg
pop
and
inc
fs
testl
dec
loopne
jnp
sub
lds
mov
stos
mov
loope
iret
xlat
xchg
dec
stos
xor
test
push
ljmp
add
rclb
lea
xchg
inc
popf
ds
push
lods
icebp
mov
jmp
int
inc
outsb
rolb
sub
flds
nop
movsl
jne
push
rol
add
sbb
or
jge
in
xor
adc
jl
addr16
fimuls
clc
jg
rorl
push
ja
dec
xchg
fistl
xchg
fucomip
movsb
or
cwtl
ljmp
aas
test
dec
imul
pop
dec
cmp
fmul
out
jmp
loop
dec
mov
mov
add
pop
loop
pop
and
add
pop
test
test
andl
inc
push
sub
loopne
imul
push
testl
xor
fimuls
sbb
mov
lods
mov
sbb
sub
or
mov
repnz
arpl
scas
outsb
and
pop
idivl
inc
inc
clc
sbb
lds
jne
sub
mov
icebp
loope
sub
cmp
call
sbb
ret
and
divb
xchg
pop
adc
cwtl
int
call
aas
mov
lret
xor
cli
orl
mov
lahf
sbb
fwait
pop
mov
mov
addl
pop
leave
movsb
icebp
and
xorl
ss
adc
sub
rcl
out
and
add
pop
xor
xchg
dec
ljmp
decl
iret
mov
mov
pushl
jo
adc
cmp
inc
sbb
cmpsb
mov
lds
in
inc
xchg
dec
dec
es
mov
loopne
and
cmp
cltd
ret
or
pushf
pop
dec
jno
ret
inc
call
push
sahf
decb
movsl
je
in
xlat
cs
lods
int3
lret
sub
mov
jmp
outsb
scas
xchg
or
dec
fldenv
dec
xchg
mov
popf
ja
aad
sbb
and
xor
aas
mov
cld
adc
loope
adc
rcr
nop
xchg
je
adc
and
push
jle
adc
cmp
sbb
jae
jle
and
enter
fistpl
dec
jo
ja
push
push
and
enter
lahf
in
sbb
xchg
test
in
fwait
std
test
cmpsb
jmp
or
xchg
cmp
icebp
push
test
scas
and
mov
aas
inc
cmpsl
pop
sbb
shrb
xor
je
cmpsb
sar
lret
andl
mov
adc
push
cmc
fsubl
sub
pop
pop
bnd
sub
lea
mov
sbb
movsl
add
sub
inc
inc
pop
jns
xorl
setns
add
inc
addr16
xchg
call
add
pop
xor
push
adc
mov
jmp
jmp
icebp
pop
cld
and
pop
dec
pusha
cmp
rcrl
xchg
dec
add
cli
jp
repz
test
addl
sbb
push
adc
in
sar
and
add
sub
into
mov
sub
jp
nop
jmp
leave
fidivs
test
xor
cli
mov
jge
pop
arpl
lods
lcall
lds
das
inc
int
pop
jb
mov
dec
inc
sbb
insl
jbe
imul
popf
cmp
das
sbb
cmp
dec
sbb
cmp
adc
data16
pop
sti
xchg
lea
mov
inc
or
out
outsl
sub
sbb
in
fcompl
jl
pop
and
rcll
mov
je
jle
mov
inc
xchg
jnp
sbb
xchg
fsts
jo,pn
aas
push
ret
pushf
push
js
xchg
jbe
popf
into
inc
jecxz
mov
xor
aad
xor
pushf
dec
lods
cmpsb
or
loop
or
stos
pop
jle
inc
add
pop
pusha
push
push
mov
arpl
out
cmp
scas
sbb
hlt
dec
lods
mov
lcall
movsl
mov
push
into
sbb
xor
inc
rolb
movsl
sbb
inc
mov
cmp
hlt
lcall
lock
movsb
dec
movsb
aam
sub
addb
scas
xchg
or
inc
cwtl
mov
mov
rcrb
sbb
mov
lcall
adc
mov
jl
fimull
ret
cmp
xor
push
insl
xor
sbb
pop
and
push
or
arpl
mov
jl
lret
mov
popf
into
das
add
mov
sub
ret
and
xchg
sahf
enter
repz
xor
aad
aaa
xor
pusha
fildl
mov
mov
cmp
shl
daa
fdivrl
sub
mov
sbbb
cli
sub
push
mov
sub
shl
cmp
ret
mov
iret
inc
cmp
jg
mov
cmp
push
sti
iret
rolb
incb
jne
cmc
aas
aas
add
xor
jg
mov
adc
fwait
stos
xor
stc
in
outsb
aam
dec
add
orps
pop
fs
popa
sbb
mov
jb
xor
inc
icebp
jno
aad
xchg
xchg
inc
lret
loopne
push
inc
jle
test
pop
and
jecxz
jmp
fists
add
call
dec
shl
mov
mov
sub
iret
pop
mov
jl
xorl
sbb
movsl
jno
movsb
roll
xlat
sub
iret
push
pop
test
jno
addr16
mov
mov
nop
jns
jecxz
adc
mov
mov
ja
inc
push
lret
pop
fs
icebp
push
pop
mov
outsb
dec
iret
decl
jl
jno
test
cli
out
enter
test
and
in
rcrb
or
insb
dec
mov
dec
jno
sarb
and
mov
jmp
dec
scas
jnp
stos
sbb
fistpl
sbb
cmp
xorb
and
adc
xor
add
push
mov
pusha
push
addr16
sbb
push
js
dec
cwtl
popf
movsb
out
mov
pop
aaa
inc
je
push
cmc
pushf
cmp
inc
push
popf
inc
sbb
hlt
jmp
cmp
sub
inc
loop
shlb
stos
gs
cmpsb
js
jb
lcall
nop
fisttpl
div
fists
xor
inc
loop
lret
and
mov
or
adc
fstl
stos
cmp
jno
std
cli
pop
push
push
pop
xchg
imul
ss
or
inc
push
aam
cli
push
inc
int3
test
gs
icebp
sbb
xor
jmp
push
pop
push
push
rcr
ja
dec
mov
repz
adc
in
test
mov
lock
stc
ret
imul
cmp
pop
nop
into
mov
sysret
outsl
ficoms
xchg
xchg
push
jmp
lds
push
into
pop
ret
pop
jae
push
or
fldt
adc
cmp
xor
or
and
cmp
fs
addl
in
or
scas
jnp
ds
cltd
xchg
mov
sub
loopne
sub
mov
xor
push
mov
lock
lods
adc
mov
and
xor
enter
test
aam
aad
or
clts
xor
sbb
das
push
loop
or
pop
push
stos
pop
sub
mov
insb
pop
pop
pop
jae
sti
in
lcall
xchg
mov
enter
sbb
pop
popw
das
in
push
cwtl
call
inc
sub
jl
fs
push
dec
aad
dec
mov
test
and
lods
push
push
xchg
or
adc
jl
stos
lret
or
fiaddl
stos
sahf
cli
ret
clc
lea
inc
sti
dec
mov
loop
xor
fstpt
lahf
ror
arpl
pop
sub
xor
jae
cmp
in
sar
out
push
or
push
mov
insl
out
mov
mov
or
xor
cmpb
aaa
fmul
cmp
jg
repz
repnz
stos
ljmp
mov
xorl
lods
call
inc
dec
fisubrs
xor
xor
fcmovnb
loopne
fcomps
dec
add
insb
sub
lea
push
sbb
bound
dec
in
mov
xchg
data16
sbb
movsbl
push
mov
sub
insb
cwtl
pop
aaa
xchg
and
xor
std
movsb
int
shr
aaa
out
lods
sub
mov
movsl
popa
call
repz
add
rolb
adc
hlt
movsb
mov
aas
cld
cmc
test
ret
jg
xchg
sbb
loop
mov
add
sbb
xor
sbb
dec
hlt
out
or
xchg
sub
out
out
add
bound
fwait
and
pushf
test
xor
adc
addb
push
jb
cmp
lahf
mov
incl
xor
adc
insb
int
cmpsb
sbb
jns
cltd
insl
sahf
adc
add
cmp
jo
dec
inc
aaa
hlt
mov
inc
js
mov
mov
cmp
xchg
lock
mov
or
std
hlt
loopne
sub
pop
mov
inc
scas
int3
or
add
xchg
xor
out
mulb
cmp
lahf
inc
jne
cltd
aad
test
inc
cmpsl
cmp
adc
sub
inc
jo
pop
mov
addb
sub
sbb
fadds
jmp
sbb
add
loopne
popa
sub
jne
lock
dec
inc
adc
mov
adc
mov
push
rcrb
clc
shl
gs
stc
fwait
xchg
lret
or
mov
jle
cltd
xchg
fldenv
sub
jmp
or
mov
fisubrl
jo
in
ljmp
lret
dec
xchg
rcrl
jae
mov
mov
faddl
jae
out
and
or
xchg
and
pop
fwait
addl
leave
pop
sti
xor
insb
mov
sub
mov
pop
add
add
repnz
add
testb
cmc
jp
addr16
push
push
adc
and
sbb
pushl
fs
call
ficoml
jecxz
and
inc
xor
ret
xchg
dec
mov
mov
mov
js
pop
and
jl
pop
push
dec
sub
sub
mov
ja
nop
dec
xlat
hlt
insl
shll
jne
imul
lahf
pop
arpl
mov
bnd
sbb
test
ret
jp
xchg
mov
in
dec
push
pop
mov
aad
clc
push
cmp
insb
dec
sahf
scas
scas
add
add
pop
cltd
push
lcall
push
push
mov
cmovg
jnp
loopne
mov
jge
sub
fwait
cld
xchg
mov
sub
dec
cmpsb
dec
adc
and
mov
mov
cmp
jp
data16
lds
hlt
test
xchg
dec
xchg
xchg
out
cmp
jo
adc
sub
ret
mov
ret
and
and
cmp
push
adc
push
push
add
iret
adc
hlt
frstor
mov
fstpt
mov
adc
cmp
lock
mov
push
xchg
inc
adc
repz
sahf
lds
jnp
sub
data16
push
nop
push
sarb
mov
jmp
pop
ds
add
push
in
xchg
ss
pop
jne
push
jge
pop
lahf
stc
orb
push
xor
pop
cmpsb
popa
pop
icebp
std
push
imul
cmp
or
push
cmpsl
xlat
mov
jge
jnp
pop
fcoml
sub
das
pop
cwtl
fwait
loopne
imul
fcom
aam
and
stos
cmp
mov
inc
xchg
dec
jns
jle
fmul
add
fists
std
sub
or
in
push
cltd
xor
stc
mov
pop
negl
in
dec
or
fldenv
inc
stc
fidivrs
pop
mov
push
dec
shrb
nop
fldcw
call
clc
movsb
in
stc
sbb
in
sub
icebp
insl
sub
and
sub
sub
loop
sti
cmp
arpl
push
push
mov
int3
mov
outsb
aam
cltd
push
leave
cmp
imulb
ljmp
test
dec
pop
jl
dec
sub
icebp
clc
hlt
test
sbb
cmpsl
lcall
cmp
fdivp
cmp
fsubrs
int
inc
test
push
push
inc
ficoml
jae
sbb
xchg
adc
jb
frstor
outsl
mov
xor
popf
jb
xor
stc
mov
stos
add
sbb
out
ficoms
jb
cld
mov
aad
xchg
mov
mov
out
out
sub
or
cmp
dec
xlat
scas
repz
mov
add
cmp
cli
and
jg
mov
mov
loope
enter
xor
and
jo
ror
int3
lds
shlb
movb
jle
jmp
dec
shlb
pop
push
popa
out
js
and
test
pop
mov
mov
hlt
std
cmp
stos
pop
dec
dec
xor
pop
dec
cld
xchg
scas
fidivrl
mov
lock
aad
sbb
out
loop
aas
jno
xchg
push
xor
fmuls
gs
shrl
sti
lods
cwtl
mov
cmp
mov
das
jg
pop
xchg
or
adc
sahf
jecxz
imul
add
loop
mov
mov
ret
cmpsl
out
call
ret
lahf
outsb
jg
jmp
and
mov
add
mov
or
mov
or
jne
mov
aad
dec
cmp
xchg
mov
testl
dec
ffreep
jnp
sub
jl
fistl
dec
ret
add
dec
or
test
popa
push
les
enter
dec
push
push
stos
mov
fstpl
loopne
sub
cmp
pop
lcall
int3
sub
jl
sub
mov
jecxz
mov
cmp
jb
mov
cld
dec
mov
in
data16
jg
adc
sub
outsb
or
jp
mov
mov
les
adc
push
sbb
sub
aas
push
repz
add
inc
mov
mov
ljmp
mov
roll
fdivl
dec
loop
xchg
sbb
in
jmp
xor
pushf
les
sbb
xchg
ret
add
mov
and
addr16
cmp
shll
js
es
xchg
push
movsb
shrb
jnp
push
push
data16
dec
ret
mov
call
inc
in
mov
mov
mov
leave
inc
sub
mov
mov
xchg
jle
mov
fcmovne
sbb
aaa
cmp
shll
pop
psubw
cmp
adc
ret
mov
popa
sbb
or
loopne
mov
loope
adc
push
inc
inc
popf
mov
xchg
es
fs
pushf
pop
mov
xchg
adc
xlat
add
testl
add
inc
shr
jp
scas
ja
loop
push
leave
xchg
cmpsb
negb
outsl
xor
pop
add
mov
dec
jmp
mov
popa
rorb
or
jp
imul
inc
push
mov
dec
or
push
icebp
cmpsb
mov
cmp
inc
lret
lods
movsb
in
jns
aas
push
jno
ret
inc
mov
jmp
mov
dec
icebp
pop
aas
jnp
pop
imul
stos
or
push
dec
cmp
pop
stos
loope
dec
sbb
bnd
pusha
fnsave
mov
sbb
or
mov
das
mulb
jb
outsl
push
or
pop
mov
push
std
faddl
sbb
test
cmpsl
cmc
loope
push
mov
mov
fistl
int
sub
or
std
lock
xchg
mov
mov
and
pusha
xor
fidivs
jne
adc
sub
sbbb
imul
insl
cld
push
xor
xor
or
imul
mov
std
lret
icebp
add
shr
adc
inc
or
or
xchg
xor
inc
movsb
sti
and
insb
mov
fstpl
mov
les
dec
imul
lahf
mov
dec
ret
and
lahf
aaa
sub
loopne
sub
dec
xlat
mov
pop
pop
inc
scas
shll
push
inc
xor
sahf
in
xchg
stos
fbld
pop
das
dec
aas
subb
xor
fld1
arpl
cmp
ds
pop
push
dec
in
ss
fdivrl
mov
push
insb
mov
insl
sbb
in
xor
es
repz
aad
pop
fwait
xor
mov
dec
jle
adc
pop
addr16
imul
sbb
push
mov
cltd
pop
push
add
shrl
test
sbb
cmp
and
dec
loopne
inc
mov
imul
adc
sub
ror
sbbl
sahf
and
adc
or
stc
pop
jp
dec
out
cmp
or
pop
fcmovnbe
fucomip
pop
cmp
stc
cmp
jns
stos
scas
sub
fisttps
mov
jp
pushl
mul
divb
and
and
dec
cmpsb
setle
divb
or
lea
sub
es
or
inc
pop
subl
fsubr
mov
outsl
dec
nop
scas
mov
fistl
pushf
jo
mov
dec
js
cmp
ffreep
jl
das
mov
cmp
inc
aam
lcall
das
sbb
jp
jne
sub
adc
mov
xor
lahf
jp
lods
sbb
gs
mov
push
adc
mov
and
adc
dec
pcmpgtb
xlat
stos
sbb
mov
fs
in
in
sbb
xor
xchg
ret
push
shlb
ja
mov
lea
aam
and
jmp
leave
pop
jp
mov
lds
mov
jge
fs
or
rcll
mov
cs
shrb
dec
pushf
shl
repnz
lahf
add
testl
test
cmp
stos
ret
jbe
cltd
xchg
xor
mov
adc
fstps
adc
dec
fidivs
and
sbb
add
cld
push
cmpb
es
js
mov
jle
hlt
sbb
ret
adc
insb
xchg
inc
push
aam
mov
mov
idivl
sarb
xchg
aaa
les
aas
mov
mov
sti
sbb
out
out
into
lret
insl
iret
mov
popa
stos
push
jl
push
inc
pop
jle
pop
cmc
xchg
or
cmp
mov
mov
cmc
xchg
push
lahf
and
push
ret
jmp
mov
dec
adc
push
mov
xchg
outsb
fldt
fbstp
cli
xor
scas
shll
cmp
push
imul
inc
sub
je
call
dec
ret
sahf
adc
and
sti
notl
jns
push
mov
push
aaa
adc
sub
in
lahf
jle
rclb
idivl
pop
lret
xor
enter
dec
shrb
test
icebp
mov
ljmp
stos
xchg
mov
call
push
mov
ss
xlat
mov
xchg
sbb
sbb
jmp
pop
adc
insb
and
insb
lret
sub
pop
push
filds
pusha
inc
sbb
aam
inc
inc
push
sub
dec
gs
xor
nop
mov
orl
cld
rolb
movsl
add
shll
sbb
rorl
rcr
or
adc
and
std
jns
mov
add
sub
and
out
stc
pop
push
cs
push
push
jle
shll
xchg
and
insb
movsl
push
ja
and
sbb
mov
xchg
jbe
mov
mov
sub
lods
mov
jecxz
jmp
xchg
mov
rol
enter
dec
stc
ljmp
cmp
inc
pop
cmpsb
push
jmp
mov
xchg
inc
pop
and
fcmovbe
lock
loop
call
adc
scas
mov
cltd
pushf
sub
mov
push
fisubs
out
lods
push
repz
push
ret
inc
mov
testl
xchg
in
push
add
cmp
rcrl
add
or
test
outsb
xchg
cmp
pop
ljmp
out
push
dec
insb
pushf
clc
mov
cld
adc
adcb
out
out
cmp
ja
xchg
push
cmp
pop
les
push
adc
mov
sbb
add
loopne
push
test
iret
rcrb
aaa
pop
push
dec
scas
das
lret
cli
std
lahf
mov
dec
mov
les
in
xchg
mov
aam
jg
movsl
stos
pop
and
inc
outsb
lods
int3
clc
mov
scas
sbb
inc
lret
xchg
movsl
lods
daa
mov
repnz
jecxz
cld
or
shrl
orb
icebp
xor
sub
or
mov
and
pusha
insl
aaa
cmpl
pop
shlb
jge
pop
mov
sub
cmc
inc
lods
arpl
fwait
js
pop
add
push
xchg
divb
xchg
push
pop
into
push
scas
and
xchg
mov
pop
mov
iret
daa
std
arpl
faddl
adc
mov
mov
sub
jns
push
adc
add
push
loope,pn
or
rcrl
int3
adc
sbbl
push
sarl
adc
push
test
repnz
pop
dec
sbbl
mov
cmp
in
add
push
mov
cmp
insb
mov
pop
pmaddwd
pushl
adc
fistpl
popa
pop
inc
call
cmpsb
das
pop
mov
jl
push
repz
cmp
adc
mov
pop
or
in
xchg
jo
aaa
inc
dec
out
les
lahf
fimull
scas
ljmp
mov
pop
ret
outsl
mov
add
mov
movsl
call
stos
jl
into
cmp
lds
jbe
pop
cmp
and
ror
mov
dec
jge
icebp
scas
scas
sub
cs
stc
mov
cwtl
inc
cmp
adc
rcll
stos
aas
sbb
adc
mov
in
mov
xlat
inc
cmc
cmp
fwait
mov
addb
dec
jl
xor
push
movsl
jecxz
and
push
or
jo
jge
dec
push
adc
fstp
pusha
inc
push
inc
jle
ss
push
and
jg
xor
test
test
push
push
lods
dec
mov
iret
push
cmp
cwtl
stc
test
jae
in
cli
pushf
push
jge
sbbl
lea
pop
shlb
int3
out
scas
hlt
stos
nop
cwtl
dec
sbb
xchg
jns
push
les
cmpsb
xor
adc
lcall
push
jae
pop
dec
stos
sbb
adc
pusha
add
xchg
push
jb
inc
cmp
int
loopne
mov
iret
mov
arpl
add
mov
xor
loope
cmp
cmp
cs
xor
fisubrl
ret
mov
pushf
xchg
es
mov
dec
cmp
cmc
stc
and
cmpl
lcall
xor
pop
sti
adc
fwait
cmc
mov
jmp
sbb
fs
inc
scas
sbb
xor
dec
xor
adc
pop
xchg
xchg
dec
es
add
sub
xchg
push
out
xor
sti
popf
xchg
sbb
inc
loopne
cmp
out
fs
cmp
and
cs
jb
pop
inc
add
loopne
icebp
adc
daa
mov
sti
mov
sub
xlat
in
fcoms
sub
xor
popa
xor
sub
sbb
inc
aad
scas
xor
ljmp
fcompl
pop
movsb
data16
pop
pop
pushf
inc
sbb
jb
sub
mov
xlat
sbb
inc
lcall
or
sbb
and
xchg
adc
sub
lcall
jmp
adc
fimull
shrb
mov
lret
outsl
pop
xchg
xor
cwtl
cmp
sub
movlps
pop
xchg
inc
jge
xor
outsb
mov
fdivr
add
int
xchg
inc
mov
inc
outsb
xor
es
idiv
jae
mov
xchg
cmp
fdivrl
mov
mov
mov
test
pop
loope
jmp
push
loop
arpl
mov
jmp
insl
ljmp
pusha
stc
je
inc
int
negl
test
fwait
lods
dec
sub
jp
xorl
dec
pop
notb
dec
add
popf
lahf
sbb
enter
mov
fnstenv
cmp
in
test
mov
imul
jmp
cld
push
and
fdivr
push
rcrl
push
jo
pop
push
into
mov
adc
js
cmp
jo
mov
sbb
inc
xlat
addr16
shl
pop
pop
or
lret
jecxz
out
jb
outsb
adc
insb
pop
out
lds
movsb
cwtl
int
push
test
je
sarl
xchg
mov
aam
sub
push
pop
xchg
and
mov
add
flds
xor
pop
in
xor
sub
jecxz
and
jmp
repz
notl
clc
sahf
sub
repnz
pop
loop
push
mov
inc
dec
cmp
xchg
push
cs
or
pop
sbb
xchg
mov
into
jge
inc
lods
aaa
inc
jne
leave
mov
mov
scas
jge
adc
xchg
push
or
cmp
pop
jns
mov
hlt
adc
dec
adc
lods
adc
xor
and
ds
sub
paddw
shr
aas
mov
mov
stos
orb
divb
pop
push
mov
lods
loop
test
rclb
loopne
sahf
mov
jecxz
or
ljmp
or
xchg
mov
test
mov
sbb
inc
jae
lods
mov
jg
in
jae
sti
mov
or
sbb
inc
add
js
lea
mov
iret
shlb
xor
lret
shrl
lret
dec
jge
and
pop
or
loop
xchg
test
pop
adcl
fimull
in
jo
jae
in
out
mov
dec
add
lahf
mov
inc
aam
xor
mov
jb
mov
pushf
sub
bnd
sbb
loopne
xchg
fadd
push
lret
outsb
jg
mov
and
ret
pusha
repz
sub
std
xorb
lahf
out
inc
sub
rolb
mov
stos
jp
sbb
jmp
xor
sub
pop
stc
fcom
mov
ss
push
or
dec
pop
inc
arpl
dec
sub
les
jo
dec
out
shrl
mov
cwtl
xchg
inc
dec
movsl
adc
push
ret
mov
imul
cli
dec
xor
mov
popf
jns
push
push
addl
inc
adc
mov
fwait
shlb
mov
mov
and
inc
cmp
jmp
js
cmp
sub
adc
pop
js
xlat
popf
xchg
push
lock
xor
in
ja
push
negb
mov
mov
loopne
cmp
jae
sbbl
adc
clc
mov
loop
scas
add
daa
call
dec
es
adc
aaa
jp
push
andb
popf
fbstp
mov
push
addb
lahf
pop
xor
cld
jle
fsubr
mov
fldl
aad
sub
xor
gs
jno
xor
out
scas
jo
mov
imul
jne
out
fdivr
add
fldenv
lahf
cmp
sbb
mov
inc
sub
sbb
or
inc
outsl
sub
dec
dec
divb
lods
std
push
aad
push
cmp
xchg
enter
sbb
mov
push
mov
xor
int3
and
addl
jmp
jne
je
pop
ljmp
fsubs
inc
sbb
push
mov
lret
repnz
pop
mov
fcmovnbe
repnz
insl
jle
jle
push
test
cmp
sbb
cltd
ljmp
adcb
jmp
fs
adc
cmc
cmp
in
mov
imul
lods
mov
stc
in
and
xor
sbb
xchg
scas
lods
clc
or
adc
lods
mov
loope
call
xchg
mov
jbe
dec
dec
inc
add
aad
mov
lods
jle
imul
xor
sbb
insl
loope
jbe
sbb
xchg
stos
imul
les
pop
setae
inc
sbbl
repnz
inc
cmp
jl
pop
mov
and
dec
inc
xchg
ljmp
shrl
xchg
sub
cmp
jnp
rclb
jmp
and
mov
mov
push
mov
ljmp
sahf
shlb
into
movsb
cld
aaa
rorb
adc
or
mov
pushf
imul
or
adc
pop
lock
adc
cmp
xchg
push
testb
scas
out
dec
call
incl
pop
or
ds
inc
hlt
or
xor
pushf
sub
icebp
pop
sub
jns
out
jae
shlb
fcoml
jb
aaa
cmp
push
and
add
cmp
adc
fsubrl
sbb
lcall
adc
clc
jne
jmp
lcall
mov
or
pop
mov
ds
and
jl
push
test
pop
sub
push
cmp
pushf
push
sub
mov
inc
push
jb
xlat
mov
pop
mov
mov
std
cltd
les
mov
xor
ljmp
fstps
push
bound
int
lret
scas
mov
adc
inc
mov
xchg
xchg
jo
in
push
jmp
ja
loopne
sub
pop
push
jmp
mov
lock
xchg
dec
shl
jg
cmpsb
dec
jb
out
push
cmp
sbb
xor
push
js
outsb
cmp
push
cmp
adc
xchg
push
push
aas
cmp
sti
ljmp
jg
test
clc
xchg
popa
push
and
sub
mov
insb
outsl
push
call
jl
rcrl
mov
mov
fsts
or
adcb
cmp
cmc
mov
dec
jecxz
inc
test
mov
fisubs
cld
mov
int3
mov
xchg
xbegin
daa
das
cmp
sbbl
dec
sbb
lds
shl
xor
mov
pop
xor
cs
insl
dec
mov
sub
mov
std
mov
imul
movsb
add
loop
lods
popa
ljmp
cmp
ljmp
rcrl
add
das
stc
mov
sub
jbe
dec
mov
lea
xor
ljmp
cmp
mov
stos
xchg
cmpsl
mov
push
popa
movsl
in
mov
pop
xchg
ja
adc
das
movsl
sbb
add
aas
inc
aad
lods
push
loop
sbb
xchg
pop
or
sub
push
jns
xor
dec
mov
lods
and
mov
push
dec
sbb
mov
inc
mov
pop
xchg
rorb
add
cmc
xchg
lds
in
inc
and
add
adc
push
xlat
jmp
and
mov
dec
and
pop
sbb
mov
jns
mov
fmul
jae
xlat
pusha
cmp
fistl
ss
stc
and
cmpsb
fiadds
pop
dec
inc
lcall
add
pop
push
in
cmc
pushl
mov
xor
imul
sbb
les
cmpsb
or
ss
in
adc
fcompl
push
ja
inc
sub
cli
cwtl
mov
or
popa
je
popf
add
add
cmp
mov
push
pop
lea
push
pushf
pop
or
mov
dec
in
and
fcomps
lahf
lods
int3
rcll
sub
adc
das
jp
test
inc
jbe
insb
ljmp
push
ljmp
ljmp
xchg
xchg
add
fs
inc
sub
les
pop
scas
in
sub
imul
pop
repnz
xchg
pop
and
fwait
add
lock
ds
sbb
ds
out
movsl
mov
and
push
mov
ret
orb
xor
daa
push
xchg
mov
cmp
push
roll
inc
cmpsb
dec
jo
push
mov
std
test
or
inc
dec
int
push
add
xor
fsubr
cmp
cld
sbb
pusha
jp
mov
ret
cmp
cmp
xchg
int
push
mov
fs
jle
arpl
adc
jmp
outsb
sub
and
out
xchg
and
in
mov
movb
nop
mov
cld
xchg
mov
sbb
cmc
mov
fnstsw
dec
dec
mull
cmp
cmpsl
adc
ljmp
xchg
push
mov
xchg
mov
xor
adc
mov
sbb
lods
xor
rorb
stos
inc
jbe
push
mov
xchg
ror
lcall
leave
sub
lods
pop
ja
enter
in
mov
push
decb
sti
incl
add
mov
or
fistpl
cmp
jp
shrl
int3
je
jle
dec
mov
ret
or
fs
push
jge
pop
testb
mov
cmc
je
sub
inc
cmp
adc
sahf
fbstp
push
pop
add
imul
daa
mov
out
dec
pop
dec
jae
jmp
mov
xchg
push
insb
dec
es
or
rcrl
lret
push
inc
mov
sub
mov
leave
push
or
lcall
roll
xchg
xor
push
inc
inc
sbb
dec
rorb
mov
daa
adc
push
pop
std
mov
andb
repnz
out
jb
xlat
sub
test
and
mov
mov
movsb
int
or
jg
in
fdivl
pushf
daa
cmp
inc
and
dec
xor
rorl
dec
and
inc
and
mov
push
shlb
test
xchg
sbb
jb
mov
pop
inc
rcrl
cmp
jl
xchg
cmp
inc
mov
lret
and
pop
ss
scas
cmp
pusha
sbbl
jnp
jle
ror
jp
xchg
inc
jecxz
fs
cmpsl
pop
repz
mov
mov
mov
in
subb
mov
aas
cmp
dec
outsb
out
adc
push
jmp
push
sub
pop
clc
dec
std
mov
jns
je
sub
sahf
push
mov
cmp
out
push
shrb
stc
and
sbb
lods
mov
adc
ljmp
jb
testb
mov
jbe
pop
je
xchg
mov
int
and
ds
mov
rcll
cmp
mov
arpl
ret
xchg
jge
sbb
push
cmp
push
push
enter
mov
add
scas
pop
xchg
repz
sbb
loop
pop
dec
adc
cmp
or
cmp
outsl
jle
sbb
push
and
jmp
jb
fistpll
or
mov
xor
xor
imul
xor
aaa
cmpsb
push
jmp
ret
ret
stc
and
sti
mov
jg
int3
jnp
aam
test
push
sub
mov
push
leave
sarl
das
scas
and
mov
pop
std
push
jno
int3
and
das
popa
dec
mov
jae
jb
add
popf
mov
cmc
and
movsb
push
mov
xor
mov
pop
loop
sub
int3
or
mov
mov
pop
out
adc
testb
sar
ficoml
dec
push
nop
xor
xor
inc
nop
cli
hlt
mov
mov
adc
icebp
outsb
hlt
mov
lea
jmp
lret
insb
dec
outsb
cmp
or
popa
lahf
jnp
mov
adc
subl
fsubrl
pop
stc
sub
xor
jns
mulb
xor
movsl
loop
lret
adc
sbb
cltd
push
push
add
icebp
sub
sub
test
xor
mov
mov
mov
les
call
jnp
pop
mov
pop
test
inc
in
push
loop
xor
jb
mov
paddq
adc
int3
xor
and
test
enter
pop
es
cmc
sub
gs
stos
mov
or
inc
cmp
out
shlb
es
cltd
dec
adc
icebp
scas
dec
mov
adc
cmpb
and
mov
dec
lds
data16
and
sub
addr16
cmpsl
test
mov
inc
cmp
repz
arpl
int3
or
orl
lret
fnstcw
cmp
and
push
xchg
loopne
jle
jle
fnstsw
push
aam
mov
out
sbb
subl
mov
popf
out
aaa
aas
pusha
cmc
xchg
mov
clc
jne
dec
mov
clc
test
dec
and
sbb
aaa
and
mov
cs
repz
xor
stc
ret
xchg
in
out
mov
push
push
in
pop
push
xorl
cld
mov
in
mov
mov
sbb
cmp
loopne
aas
aad
mov
out
jecxz
cs
inc
js
sbb
sub
and
cmp
mov
xor
xchg
adc
and
imul
cmpsl
sbb
or
insl
or
pop
nop
movsb
dec
add
inc
sti
cld
enter
sbb
popf
outsl
ficompl
in
or
inc
xor
dec
popl
decb
cmp
fdivp
pop
in
mov
jge
or
test
cli
xchg
lret
and
xchg
iret
fldt
stos
test
ret
and
std
inc
cmp
xor
test
bound
sbb
cmpsb
in
aaa
lock
ljmp
dec
cmp
sbb
pusha
xlat
loope
xor
popf
gs
or
xchg
sbb
cmp
rclb
sar
dec
shll
or
shrl
test
pop
lods
or
nop
sahf
sub
lea
mov
jb
mov
cli
lea
inc
sub
adc
mov
mov
cs
sarb
mov
subl
adc
sbb
jp
nop
pop
rcr
or
cmpsl
jbe
and
jecxz
or
or
push
aad
push
mov
shrl
in
cld
loope
xchg
outsb
shll
insl
bound
xorl
push
dec
dec
repz
xchg
rcl
inc
jl
ja
int3
dec
pop
push
in
shll
je
mov
sub
testb
add
lea
push
out
jo
xchg
push
test
lea
jg
jge
add
cmpsb
dec
jecxz
and
call
imul
daa
pop
mov
dec
cmp
jno
sbb
cmpsl
push
out
in
jne
sub
out
push
call
lcall
jg
mov
xlat
lret
and
pop
repz
ja
adc
sbb
xchg
jmp
scas
and
push
xor
movsb
sbb
mov
push
pop
test
sbb
push
inc
test
inc
outsl
test
mov
imul
pop
xchg
xchg
mov
fldcw
adc
mov
cmp
mov
fwait
push
stos
fistpll
loopne,pn
sub
mov
mov
clc
fs
ljmp
mov
adc
jnp
out
jae
mov
clc
pop
idivl
mov
dec
cmp
jge
jns
fcomps
ljmp
mul
pop
in
fld
popa
inc
bound
push
jb
call
icebp
push
ja
mov
push
icebp
shrl
adc
jb
pop
ret
and
out
dec
add
mov
adc
ljmp
jb
sub
and
bound
xor
or
mov
aad
arpl
js
jecxz
dec
lret
push
fimull
scas
push
mov
add
cmpsb
aam
mov
sub
fsub
je
aad
sbb
jg
xor
cmp
xchg
icebp
or
mov
or
add
imul
pop
in
pop
jl
jo
and
cmp
sub
push
cmpl
shll
js
fnstsw
shrl
fistl
or
inc
lock
fucomi
test
xchg
cmpsl
and
mov
adc
push
push
cmp
outsl
enter
icebp
xor
or
mov
xchg
aaa
iret
bound
loop
imul
mov
mov
popf
ljmp
lret
pop
pop
cld
inc
in
sub
xor
add
notb
imul
and
andl
push
mov
pop
add
adc
sub
xchg
ds
sbb
test
add
pop
push
dec
into
daa
insb
ds
int
mov
lahf
lret
lods
xlat
idiv
stc
adc
push
out
push
loop
add
push
cmpsl
insl
dec
and
add
cltd
inc
xchg
in
pop
inc
sub
jb
jl
mov
fstl
popf
xlat
jle
adc
adc
icebp
xor
and
ss
fldcw
jecxz
out
ret
in
loop
movsb
xchg
mov
mov
cmpsl
jge
mov
enter
pop
inc
neg
and
fcomps
lcall
daa
mov
mov
dec
shrl
cmp
inc
or
popa
aad
xchg
ss
xor
aaa
inc
xchg
xchg
es
nop
xchg
aad
push
jno
mov
mov
test
inc
inc
movsb
mov
sbb
push
cmp
push
jmp
push
xlat
jp
scas
sti
mov
adc
xor
xchg
movsb
mov
shlb
pop
lret
jnp
popf
aas
ret
outsl
gs
push
je
cli
out
test
mov
push
xchg
rcll
pop
sbb
jne
das
push
sub
shl
sub
dec
popf
mov
insb
test
into
lds
push
roll
mov
cmpb
inc
ja
sbb
fbstp
push
arpl
sub
arpl
addr16
ja
ljmp
loop
mov
mov
and
jne
fisttpll
idivl
mov
and
syscall
jb
rclb
leave
cmp
pop
lret
mov
in
pop
push
repz
leave
in
adc
bound
xlat
mov
xor
and
push
cmpsl
or
dec
cltd
icebp
outsl
movsl
or
cmc
addr16
out
sbb
cmpl
adc
pop
xor
sub
rcrb
pop
flds
nop
mov
gs
jl
mov
mov
xchg
sti
cmp
xchg
insb
jle
or
pop
push
xchg
adc
xlat
out
mov
push
das
test
xchg
jg
pop
adc
js
out
push
and
mov
push
cli
mov
iret
xor
testb
stc
je
or
pop
movlps
sarl
andl
int
sbb
xor
pop
movsb
mov
outsb
sbb
xor
xor
addr16
movsl
lret
push
mov
ficomps
imul
dec
bound
adc
push
fdiv
addr16
into
jmp
inc
ja
dec
repnz
adc
and
pop
add
stc
nop
mov
mov
imul
inc
push
inc
hlt
mov
mov
mov
in
lods
outsb
jle
cmpsl
xor
add
imul
cmp
pop
adc
shlb
cmp
mov
pop
popa
sbb
or
lea
or
adc
ss
pop
adc
adc
mov
add
sub
outsl
jp
nop
add
fmuls
hlt
stos
adc
jmp
movsl
dec
int3
scas
cmp
xchg
lret
push
daa
daa
mov
xlat
imul
pop
dec
scas
daa
cmp
and
add
and
mov
cmc
xlat
adc
push
and
push
aam
jb
mov
test
into
sub
mov
pop
and
cmc
add
lds
push
das
pushf
fsubl
push
mov
sub
and
pushf
ds
mov
dec
jne
enter
mov
sbb
nop
inc
mov
movsl
int
add
pop
or
fimuls
cmpsl
pop
fmull
ret
aam
and
jnp
sti
dec
xlat
fcoml
mov
mov
or
les
mov
popl
jno
cmp
js
cmp
enter
and
cmp
adc
jle
testb
cmpl
or
imul
add
jne
push
adc
push
insl
dec
mov
inc
or
mov
jno
push
xor
pop
push
xorb
fiadds
gs
xor
leave
or
pushf
test
push
out
test
mov
repz
test
mov
aad
push
push
int3
add
sub
mov
insl
adc
pop
pop
dec
arpl
stos
inc
push
and
jb
loop
ds
sbb
fisubrs
ljmp
mov
mov
shll
adc
mov
xor
xchg
add
dec
inc
test
cli
mov
and
fdivs
sub
xchg
fstps
cltd
add
call
push
jl
clc
in
cld
std
sub
in
hlt
orb
adc
jge
and
sbb
or
pusha
sbb
enter
addb
andb
jb
cmpl
push
fbstp
xor
jbe
je
add
or
fsqrt
mov
mov
ja
mov
mov
mov
shl
inc
mov
std
inc
imul
loop
out
adc
pop
addb
out
scas
jl
daa
and
mov
cmc
les
jg
insl
int3
xchg
shll
sub
cwtl
dec
dec
cmp
jo
mov
fsubrp
mov
decb
test
loope
lods
stos
leave
dec
stos
xor
or
jp
fldenv
and
sbb
sub
in
fistpll
popf
push
cmp
ds
dec
add
fdivrs
xorb
int
jecxz
subb
jle
xchg
out
push
xor
fwait
test
mov
mov
push
in
jb
repnz
or
mov
cmp
es
pop
sub
jge
push
frstor
pop
mov
je
jno
jb
fs
fwait
mov
js
push
mov
int
add
cmp
dec
mov
jl
andl
pushf
sbb
addr16
pop
cmp
in
xchg
out
insl
int
sub
inc
adc
imul
and
fs
jge
or
inc
sub
mov
int
add
or
and
add
or
sbb
fsubr
adc
and
cs
adc
lods
test
push
rorb
fisttps
push
inc
cs
cmpsl
jae
pop
or
mov
or
and
orl
push
dec
cmp
shrl
and
jns
and
ljmp
jp
inc
mov
pushf
inc
lea
pop
movsb
push
in
cmp
sbb
enter
ds
fildl
push
movsb
rorl
ror
jae
cld
mov
mov
xchg
inc
xchg
mov
ret
lods
decl
and
data16
inc
dec
add
mov
pop
ds
cmpsl
pop
ja
cld
cmp
fdivs
jnp
cmp
push
pop
xchg
push
jo
mov
outsb
mov
sbb
stc
mov
adc
add
call
mov
loopne
popa
rcll
leave
mov
fnsetpm(287
jl
pusha
lret
jg
outsl
or
pop
testl
loope
data16
or
xacquire
in
lds
pop
dec
lcall
mov
hlt
out
bound
int3
ds
and
cld
stc
pop
adc
pop
dec
out
sub
inc
cwtl
push
es
mov
das
pop
xor
jge
lods
push
add
popa
sbb
ret
popf
pop
pop
inc
out
mov
jg
test
dec
lea
dec
xor
pop
loopne
dec
lock
push
push
movsl
ljmp
bnd
imul
or
dec
clc
ljmp
adc
fdivrs
hlt
xchg
mov
aad
sub
push
and
add
push
inc
sarl
adc
cmp
and
and
pop
aas
test
or
fadds
add
repz
inc
lods
push
jle
pop
or
aas
stos
insl
jno
add
test
je
cmpsl
in
aad
insb
inc
ficompl
bound
mov
gs
enter
adc
jae
xlat
jo
dec
mov
push
pop
jae
mov
aam
xchg
sahf
and
repnz
sbb
pop
cltd
stc
ret
cmp
cwtl
ja
movsl
jle
xor
imul
orb
in
jle
stc
jmp
cs
sti
sub
cwtl
pusha
mov
in
ja
mov
daa
pop
out
pop
jno
jp
rcll
sub
jle
rcll
sub
dec
add
pop
and
sarl
rorl
push
jne
jns
xchg
cwtl
pop
or
in
inc
aam
decb
jp
pop
pop
lahf
cmp
xchg
add
inc
jmp
or
xchg
sarb
sub
mov
out
push
mov
jno
out
mov
out
cwtl
adc
sti
xor
push
lret
sbb
outsb
mov
mov
lret
lock
scas
push
mov
bound
jbe
add
mov
mov
inc
dec
data16
jp
aas
orb
dec
adc
rorl
aaa
leave
test
clc
cli
in
in
jne
or
out
xchg
jg
adc
into
pop
mov
test
imul
and
jmp
sub
pop
cli
ja
nop
push
icebp
test
mov
std
inc
inc
dec
ret
dec
xor
xlat
fcomi
or
and
pop
xchg
mov
mov
movsl
cwtl
loope
jno
mov
jae
cmp
arpl
cwtl
loop
jne
ret
pusha
fisttpl
orl
fisubl
pop
fistpll
mov
mov
xchg
push
shl
or
nop
or
cmp
icebp
inc
dec
xchg
jnp
push
xlat
mull
pushf
sbb
mov
add
mov
mov
jle
add
mov
inc
out
xlat
js
adc
aaa
inc
inc
negl
loopne
cmpsl
adc
movsl
xchg
cmp
addl
mov
push
or
lds
dec
gs
xchg
cli
cmp
mov
sbb
iret
pop
push
jecxz
imul
cmp
mov
and
sbb
or
add
fwait
iret
xchg
xchg
iret
add
add
es
pusha
data16
fidivrs
cltd
in
stos
jg
lock
lds
push
ss
leave
push
shl
inc
icebp
fcomip
test
out
and
sbb
mov
or
js
adc
in
push
test
stos
and
int3
call
popf
push
mov
jge
es
sbb
iret
xchg
imull
or
jecxz
cmpl
cmp
repz
jno
sbb
jl
rcl
cmp
jle
dec
inc
repnz
adc
pop
sub
cmp
push
out
insb
and
stos
mov
addr16
fcoml
mov
cmc
int
lcall
or
mov
jge
adc
dec
push
xor
pop
outsl
inc
and
sub
pop
jecxz
imul
scas
xchg
pusha
sahf
add
out
inc
movsl
mov
out
dec
in
or
xlat
pop
dec
jb
fcoms
insb
aam
stos
xchg
and
jle
or
mov
mov
mov
xlat
andb
out
pop
fildl
out
add
pop
inc
psubw
sub
sbb
enter
xor
mov
xchg
inc
jno
lods
xor
jbe
stos
add
mov
inc
inc
daa
inc
out
mov
cwtl
stc
xchg
dec
xlat
fadd
cmp
sub
xor
popa
cmpsb
xchg
rclb
xchg
lcall
ljmp
dec
dec
test
add
int
gs
gs
dec
push
arpl
out
hlt
mov
xchg
cmc
sahf
or
jns
cld
mov
and
out
movsl
divl
aam
add
xchg
cmp
insl
jmp
out
test
push
leave
inc
adc
mov
cmp
push
sub
pop
mov
jno
lea
cltd
mov
mov
outsb
in
cmp
adc
mov
mov
int3
push
bound
repnz
int
sbb
xchg
or
stos
pusha
fucomi
not
ja
cs
shlb
loop
test
pop
xorl
popf
and
inc
xchg
sti
dec
outsl
xor
fcomps
js
dec
outsb
test
or
notb
movsb
sub
xor
leave
daa
loope
jmp
fimuls
fnstcw
adc
add
in
mov
sbb
xor
mov
xor
push
fstl
mov
jnp
out
pop
or
dec
mov
inc
sti
add
add
pop
mov
xchg
and
sub
stos
or
cmpl
push
repnz
mov
icebp
cmp
movsl
jae
div
push
out
call
pop
mov
jmp
std
jg
mov
lret
sbb
mov
in
xchg
rcrl
scas
pushf
sbb
js
sbb
icebp
add
cmp
insb
test
jb
sbb
jg
insl
mov
jo
jnp
adc
insl
sub
adc
add
or
cmp
lods
sbb
xchg
test
dec
pop
mov
dec
fs
inc
fisubl
add
or
xchg
jl
dec
insl
loopne
out
adc
lcall
jo
cmp
test
lods
xor
aad
mov
fcoml
xchg
add
mov
mov
adc
ljmp
mov
clc
cmp
cld
adc
inc
xor
fsubrs
mov
std
cwtl
std
sub
adc
idivb
jecxz
sti
loopne,pt
scas
test
hlt
test
push
std
jnp
mov
xlat
repz
aad
cli
fisubl
adc
xchg
mov
shlb
and
rolb
xchg
xlat
sub
in
lods
mov
les
mov
cld
das
out
ljmp
adc
adc
das
insb
scas
ret
xchg
push
mov
mov
jge
or
xor
cmp
addr16
mov
std
jmp
cmp
sub
push
testb
leave
jg
xchg
add
ljmp
mov
and
imul
xlat
and
mov
cld
xor
fs
lods
mov
push
in
ds
addr16
mov
lods
jle
sbb
sti
jnp
test
adc
push
and
jbe
xchg
out
and
out
push
je
test
adc
scas
jge
sub
pop
jo
adc
sbb
xor
popf
aam
push
jp
or
or
adc
and
inc
dec
or
xchg
jae
and
mov
fdivrl
insl
or
xor
xchg
xor
push
pop
cld
pop
int
lods
pop
movsb
xor
mov
sbb
xlat
or
push
sahf
imul
mov
mov
adc
rcrw
setge
dec
data16
and
cmpsl
jle
cmp
mov
icebp
out
sub
lods
leave
dec
out
cli
bnd
adc
pushf
inc
mov
and
mov
xchg
leave
cmp
push
push
mov
cmp
stos
mov
arpl
jge
filds
das
inc
lds
push
jmp
test
pop
inc
outsb
rcl
cld
sub
fadds
out
sbb
out
in
pushf
fldenv
enter
or
fwait
ss
or
int
push
shr
xor
call
inc
inc
outsl
movsl
push
push
clc
outsb
push
push
xor
mov
xlat
dec
push
or
inc
and
fld1
xor
in
sbb
fdivrp
cli
mov
push
adc
mov
sbb
fisttpll
and
or
popf
mov
xchg
xchg
mov
mov
sti
es
pop
push
cmp
fmull
lret
adc
dec
and
cli
xchg
shlb
lods
xor
push
pop
negl
jge
test
and
sahf
dec
jnp
cltd
fisubrs
pop
call
dec
inc
icebp
jmp
lahf
add
insl
cmp
hlt
ret
data16
pop
aam
loope
dec
decl
pop
daa
mov
inc
cld
out
inc
push
push
cs
icebp
dec
enter
jg
sub
lret
stc
lock
add
fwait
clc
das
jecxz
cmp
mov
data16
arpl
adc
and
dec
jecxz
sub
xchg
loope
mov
pop
xchg
pop
xor
xor
sub
mov
dec
mov
fidivrl
movsb
sbb
sub
loope
ret
mov
xor
jae
cmp
into
pop
xchg
sti
pop
mov
jl
xor
xchg
mov
or
xor
fldl
fists
jl
pop
out
icebp
int
lcall
repnz
fadd
cmp
aad
movsb
stc
adc
lahf
incl
inc
and
adc
fidivs
outsl
out
out
xor
inc
outsl
bound
xor
xchg
sti
sbb
jecxz
popa
cmc
aaa
push
or
leave
adc
cmp
sbb
les
test
test
pop
dec
pushf
out
adc
popa
int
and
jl
and
push
gs
rorl
or
sub
sub
xchg
aad
int3
imul
aas
lret
jne
int
cmp
mov
cs
shlb
or
jecxz
jne
xor
test
sti
pushf
cmp
inc
es
ret
sahf
sbb
cld
lahf
ljmp
xchg
repz
push
outsl
inc
push
and
ror
sbb
cwtl
or
imul
cltd
rol
neg
negl
out
xor
inc
cs
adc
in
and
xor
add
not
cwtl
push
test
ss
xchg
aas
in
roll
repz
or
daa
lods
add
lahf
lds
sbb
sbbl
or
rcrb
sbbl
je
jb
nop
dec
mov
dec
inc
or
pop
or
sub
cmpsl
push
test
sub
inc
aad
dec
dec
jp
pop
stos
and
ss
cltd
xchg
adc
ljmp
jecxz
rol
pop
add
scas
pop
jp
adc
sbb
sub
inc
icebp
add
dec
pop
mov
sub
je
pop
push
rclb
int
test
or
xor
arpl
sub
pop
rcll
fs
divl
ds
sbb
sbb
xchg
stos
pop
shrb
push
pop
lds
add
push
inc
inc
adc
aam
xchg
paddd
cmp
rcrb
push
test
or
int3
sub
das
fiaddl
lods
loopne
mov
mov
jbe
in
dec
aam
insl
into
lret
cmp
xchg
dec
sub
mov
cmp
jle
mov
or
adc
and
mov
dec
aas
clc
loopne
and
add
sti
mov
inc
cmp
dec
ljmp
orb
rorb
sti
out
xchg
arpl
push
jp
dec
pop
sbb
into
mov
icebp
scas
sub
cmpsl
cmp
std
lret
jbe
push
add
popa
popa
addl
jno
lock
dec
mov
add
icebp
leave
arpl
lods
adc
push
inc
xor
adc
ss
aas
scas
cli
and
test
dec
outsl
inc
pop
push
cmp
ds
lods
xor
cmp
sub
pop
imul
mov
das
dec
in
loopne
pop
negl
std
out
xchg
dec
sbb
dec
dec
or
jnp
xchg
mov
mov
fmuls
movsl
pop
aam
push
call
or
xchg
mov
sbb
hlt
or
cmp
repz
add
cmp
aam
sbb
cmp
jbe
aad
mov
sbbl
rcrl
cmp
dec
test
filds
cwtl
pop
sub
dec
clc
jns
or
mov
adc
cmovp
jmp
xor
lret
xchg
xor
addl
test
jmp
insl
adc
cmp
imul
ret
loope
lock
mov
sub
and
int
add
in
xchg
add
rcrb
dec
lret
shrl
lret
pusha
pop
sub
cmp
adc
sahf
cmpsb
cmpsl
shll
popf
fs
pop
mov
mov
popa
js
jo
adc
inc
xor
dec
pop
xchg
inc
mov
dec
in
imulb
ds
lahf
cmc
pop
cmpsb
mov
xchg
into
movsb
loope
gs
in
and
sbb
adc
mov
add
int3
arpl
ss
cmpsl
push
mov
incl
ss
mov
popl
jge
sub
mov
adc
insl
leave
and
dec
scas
jecxz
shll
adc
enter
rcrb
push
pop
adc
mov
push
sbb
out
ret
data16
icebp
and
cli
popa
push
subl
std
inc
cltd
sarl
xchg
iret
mov
lret
mov
add
push
insb
push
rcr
in
lret
cs
push
push
and
sbb
inc
into
push
hlt
mov
repz
xor
pop
add
sub
adc
adc
cmp
sbb
popf
lock
outsl
test
sub
and
fimuls
enter
stos
shl
mov
mov
fnstcw
lret
mov
jmp
add
ss
scas
inc
jns
mov
cmp
pushf
push
iret
ffree
and
push
push
outsl
js
mov
scas
ret
mov
cld
call
inc
mov
mov
movsl
dec
aaa
pop
imul
and
arpl
mov
pop
xorb
mov
insl
fadd
mov
sub
xchg
xchg
loopne
xor
jo
shlb
add
sbb
pop
mov
int
pop
std
and
inc
jp
cwtl
stc
mov
mov
mov
dec
in
add
mov
mov
rclb
cmp
inc
scas
xor
jecxz
outsl
jp
arpl
dec
xorb
in
and
in
cmp
and
in
ds
ret
cmp
pop
sub
add
mov
inc
rolb
popf
in
ljmp
and
aad
test
insl
sbb
xchg
hlt
lock
loopne
pop
add
lahf
repz
bound
inc
stos
popf
js
enter
fs
out
fistps
lea
xor
and
sub
jl
orl
inc
or
ljmp
stc
das
fcomps
shrb
mov
xor
frstor
or
shl
xchg
push
iret
stc
ljmp
pop
in
f2xm1
je
addr16
cmc
pop
pop
mov
dec
fs
dec
or
mov
loop
mov
dec
sbb
mov
fildl
loopne
sbb
loopne
jp
dec
jl
pop
out
adc
rorb
mov
mov
flds
ja
cmpsb
sub
inc
cmp
pop
sub
sub
xor
cmpsl
xor
jge
popa
int
jbe
pop
negl
fs
in
popf
or
xor
xchg
sub
inc
rcrl
push
dec
push
inc
cmp
xchg
insb
dec
into
mov
push
fwait
pop
popf
pop
xchg
sub
push
dec
aam
dec
and
imul
shl
rol
mov
fcoml
fisttps
jae
mov
int
ds
ffree
aam
push
sbb
mov
outsl
out
stos
jae
aam
xchg
xor
pusha
jl
arpl
cmp
inc
xchg
loope
push
mov
jecxz
mov
shrl
stc
inc
sub
sub
pushf
mov
outsl
push
mov
aad
mov
xchg
sbbb
add
loop
xlat
inc
sub
in
sti
ss
test
popl
cmp
sbb
add
lret
fnsave
sbb
mov
out
cmc
lods
jg
icebp
fisubs
mov
sub
mov
dec
into
dec
mov
je
mov
jmp
mov
int3
adc
movsb
sub
stos
out
mov
insb
sti
pusha
push
mov
out
cmc
faddl
cmp
cmp
fcmovbe
outsl
push
cmp
rorl
or
or
pop
vmovss
jge
mov
scas
orb
nop
push
cli
add
cld
shlb
xchg
xchg
mov
sub
cmp
or
mov
loop
cmp
sbb
fcoml
mov
mov
out
pop
test
aad
xor
repz
in
test
rcrb
sub
adc
int
mov
inc
std
out
xchg
mov
js
sti
in
adc
mov
into
mov
xorl
mov
inc
jecxz
jle
inc
dec
aaa
shrl
mov
neg
mov
cli
pop
mov
dec
mov
push
push
add
lds
stos
sbb
jbe
addb
push
mov
fidivrl
adc
sti
mov
push
mov
jnp
into
in
cmp
inc
xor
je
sbbb
js
sub
fiaddl
hlt
mov
dec
cmp
pop
lahf
into
push
push
fldt
jp
sbb
pushf
and
mov
add
cmp
in
int
jae
sbbb
xchg
inc
mov
mov
cli
or
pop
ret
cmp
fdivrp
jb
mov
lods
mov
push
sub
int3
jge
push
int
xchg
dec
lods
jno,pn
incb
pushf
orb
push
fildll
loope
cmp
sub
cmpb
cmp
mov
filds
push
jp
inc
shlb
fadds
push
aam
and
enter
cld
add
mov
fucom
sbb
fs
inc
jp
insb
and
leave
cs
and
jmp
sbb
jno
mov
stos
test
imul
out
dec
ljmp
incb
xchg
fdiv
sub
push
sbb
mov
lret
mov
fwait
dec
lret
pusha
cld
js
popa
lcall
pop
mov
jle
filds
ret
pop
loopne
mov
push
cs
dec
ss
inc
xor
pop
cmp
mov
nop
lods
sbb
pop
sbb
mov
pop
in
pop
inc
addr16
push
jle
hlt
pop
ror
aad
adc
fimuls
sbb
or
mull
mov
or
xchg
rorb
fimull
jp
xlat
shlb
movsb
push
pop
push
adc
sbb
mov
dec
adc
xchg
jge
lods
fcoms
shll
fcompl
jl
mov
iret
aam
inc
and
scas
inc
xchg
int
nop
push
add
fwait
popf
add
movl
cmc
mov
pop
insb
and
pop
lahf
andb
mov
aam
icebp
comiss
cmpsb
popf
cs
cwtl
shl
inc
fstps
sub
jg
mov
clc
pop
xchg
movsb
fnsetpm(287
cld
mov
dec
lods
adc
insb
cmpsl
push
fldl
ds
rcl
inc
dec
xchg
push
xchg
mov
jecxz
dec
push
pop
mov
repnz
sti
gs
lahf
pop
and
jno
dec
sub
jbe
xchg
jo
mov
inc
aas
imul
pop
add
iret
iret
mov
and
pcmpeqd
push
mov
mov
push
xchg
dec
loopne
sahf
out
mov
pusha
sti
jns
imul
rcrb
icebp
cmp
sub
jne
test
repz
fadd
pop
stc
out
ror
inc
xchg
mov
vpackuswb
out
in
movsl
mov
nop
inc
dec
cli
push
add
inc
sahf
mov
jae
lahf
outsb
or
scas
sub
pop
push
sub
xchg
out
xchg
xlat
imul
adc
mov
or
or
mov
fcmovnu
sub
xchg
aaa
sub
lret
fiaddl
adc
mov
mov
adc
imul
test
stc
outsb
andb
mov
sbb
jmp
sub
adc
cmpsb
test
mov
push
cltd
repz
negb
fmull
js
push
push
and
adc
nop
xor
mov
lock
add
xor
cmpb
sbb
and
mov
sub
std
cmpsl
mov
xchg
or
rolb
push
cmp
mov
mov
cmc
cmovnp
sub
fnstenv
cli
mov
sarl
fdivl
jmp
fmuls
popl
int
arpl
fistl
pop
push
or
cmp
push
adc
test
rcll
dec
lret
andb
inc
or
sbb
std
inc
jae
into
sbb
mov
sbb
flds
imul
shrl
mov
lahf
addl
xor
mov
add
mov
loop
jo
jle
in
mov
or
pop
cli
daa
lret
xor
into
xchg
mov
in
adc
movsb
fcmovnb
aad
mov
shlb
cmpb
mov
cmp
je
mov
lock
pop
in
lds
fs
sti
cmp
jnp
or
jne
jns
push
mov
insl
adc
xor
xor
or
insb
mov
arpl
or
rcrl
into
inc
sbb
and
adcb
aas
orb
mov
call
xor
adc
in
and
add
or
cli
les
fwait
lea
pushf
dec
icebp
clc
fs
fbstp
jg
loope
test
jae
cltd
movsl
inc
repnz
cmp
nop
les
push
in
push
sbb
xor
int3
add
scas
cmp
and
jmp
loope
fadds
in
std
into
xchg
icebp
cmp
cmp
mov
push
jmp
out
or
push
sub
movsl
jecxz
xchg
jns
push
cs
add
stos
jbe
jecxz
push
sub
mov
xor
lds
mov
mov
push
inc
xchg
xchg
ds
and
push
lods
dec
mov
lods
xchg
in
outsb
ja
fnstcw
pop
pavgw
jmp
push
push
push
sti
fldl
jnp
cmp
cli
repnz
mov
push
inc
mov
jg
adc
outsl
in
xor
cmp
mov
mov
xor
jne
fucomip
push
lret
movsb
leave
insl
or
adc
push
clc
jae
mov
outsl
popa
cwtl
stos
jae
sbb
or
cmc
sub
mov
aam
cmp
pop
loope
push
imull
xorl
mov
xor
xchg
call
adc
cltd
mov
clc
mov
out
fdivs
sar
clc
sti
or
lods
mov
ss
inc
in
mov
sti
or
xor
jns
sbb
mov
add
mov
aam
push
or
into
inc
out
add
jns
subl
out
or
popa
outsl
rorb
std
inc
push
insl
pop
mov
jns
repnz
push
cmp
inc
int
xchg
pop
inc
xor
cmp
mov
aam
push
js
lods
jnp
jo
shlb
dec
aaa
pop
rorl
pusha
jae
pop
sub
mov
xor
ret
pushf
movsb
jge
test
and
mov
adc
fstl
mov
xor
or
arpl
insl
dec
sub
mov
pop
mov
scas
fiadds
js
mov
std
jbe
leave
or
and
sbb
mov
rclb
xchg
xor
cmp
repnz
cltd
in
add
jge
loopne
jle
stc
cltd
stos
and
sbb
fidivs
sbb
lret
mov
cmpsl
fldenv
pmulhw
lods
les
out
xor
bound
nop
out
rcrl
js
sbbb
add
cmc
or
mov
inc
sub
push
mov
addl
int
rcrl
js
sub
and
icebp
scas
push
lods
mov
push
sub
daa
in
adc
ds
je
cmp
push
lock
cmp
or
xchg
inc
hlt
out
mov
and
je
mov
jge
lock
stos
push
cli
rcll
jp
cmc
sub
dec
call
jnp
sub
jbe
movsb
inc
mov
fcmovnbe
sbb
cld
stos
lret
and
les
stos
xchg
xor
ss
test
cld
or
fcomps
mov
repz
dec
jg
inc
xor
pop
inc
sbb
push
std
subl
sti
push
and
inc
push
mov
or
in
pop
cld
jo
jle
int
shrl
subl
sub
pushf
cmp
icebp
loop
sbb
shl
fwait
ja
sub
les
mov
imul
scas
mov
add
xchg
lods
jecxz
in
xor
nop
lahf
div
sbb
dec
xor
clc
mov
pushl
or
and
xchg
sbb
cmpsl
int3
out
test
cwtl
xchg
jle
and
ret
sti
push
mov
xor
je
std
shlb
jle
sub
addr16
call
popa
dec
hlt
xor
lock
fnstenv
adc
cld
lahf
or
jmp
xchg
int
mov
out
mov
clc
mov
add
mov
xchg
mov
mov
repnz
xchg
or
into
push
cld
and
push
sbb
lret
mov
xor
mov
mov
int3
inc
push
cmp
xchg
fistl
jne
mov
lods
pop
out
cmp
sbb
adc
push
in
xor
sbb
push
and
in
jg
mov
ja
and
mov
adc
punpcklbw
pusha
sbb
cmc
pop
jl
insl
adc
mov
cmc
popa
xor
add
inc
dec
aad
loop
mov
fcmovb
cs
cmpsl
sbb
insl
push
flds
mov
mov
daa
fsub
sub
nop
and
andl
xchg
cmpsb
dec
inc
call
add
ds
mov
call
xor
cmp
mov
out
movsb
sbb
mov
clc
inc
stc
fsubrs
sub
int
test
inc
shl
push
inc
aad
inc
loopne
les
jae
inc
mov
inc
pop
pop
sub
jmp
orl
and
xchg
loope
push
lock
dec
mov
mov
pop
mov
cmp
in
xor
dec
or
mov
in
lods
fisttpl
pop
movb
test
xor
std
popf
sbb
cmpsb
mov
pop
and
out
mov
scas
enter
fstl
or
fdivrp
fdivs
add
push
adc
std
frstor
shr
out
stc
push
sbb
scas
adc
jnp
scas
flds
jge
xor
jo
pop
pop
sahf
shl
pop
jno
adc
jmp
fs
jnp
rolb
mov
sbb
or
stc
mov
ja
jb
arpl
xor
pushl
jg
mov
cmpb
xor
cmpb
maxps
notl
ret
ds
xor
push
adc
leave
xchg
popa
and
xchg
adc
scas
enter
loope
sbb
insb
and
into
scas
mov
mov
outsb
sub
shl
and
loopne
int3
pop
add
jne
iret
shl
rclb
dec
and
sbb
aas
mov
das
clc
insb
cmp
les
sub
popa
fwait
push
adc
cs
xchg
mov
inc
jge
scas
xlat
inc
imul
mul
sub
mov
xchg
out
dec
daa
es
push
inc
test
fsubrp
cwtl
ss
pop
cmpsb
stos
cmp
dec
icebp
mov
loope
enter
loope
dec
mov
movsb
lds
lahf
std
cmp
lock
mov
ljmp
xor
int
push
sbb
mov
xor
cli
dec
add
sbb
leave
dec
scas
push
pop
push
cwtl
pop
aas
jae
add
in
dec
arpl
sbb
pop
xor
rcrl
ret
fucomp
imul
add
or
mov
sbb
mov
mov
in
xchg
mov
fdivl
test
iret
mov
lock
push
adc
add
pop
stos
xchg
cmc
xor
pop
jo
inc
ss
hlt
mov
inc
pop
leave
dec
mov
jg
xchg
xchg
and
add
mov
popf
es
cmp
test
iret
xchg
jb
ja
push
sbb
push
and
adc
xchg
rorb
dec
sub
cwtl
push
mov
mov
pushf
cmp
mov
dec
pop
inc
ret
sbbl
xchg
and
push
dec
cmpsl
test
stc
push
sub
push
inc
push
adc
push
xchg
xor
jge
fisubrs
mov
and
xor
sub
mov
add
xor
pop
push
jle
lret
cmp
mov
stc
adc
and
inc
lret
lret
cmc
fsubr
add
inc
push
outsb
push
add
aad
lret
sbb
adc
dec
pop
jg
add
jae
icebp
lea
insb
pop
mov
mov
pop
cmpb
pop
pusha
xor
sub
dec
xchg
adc
cwtl
adc
cmp
dec
sub
jbe
dec
in
hlt
mov
pop
add
mov
xchg
or
stos
sti
dec
out
push
and
mov
jecxz
lahf
ljmp
stos
inc
jge
and
loopne
enter
ljmp
xchg
inc
mov
or
xchg
push
mov
pop
mov
ret
stos
out
sub
mov
in
mov
addb
in
out
movsb
movsl
movsl
mov
lret
jge
mov
adc
xchg
xor
aaa
addl
repnz
lods
insl
sbb
out
jo
es
and
xor
leave
inc
sbb
loope
ficomps
xor
cmp
insb
test
and
jmp
fdivrl
cs
shll
mov
mov
leave
das
mov
mov
ja
xchg
jne
scas
iret
cmpb
jle
sub
mov
mov
or
inc
out
or
out
int3
jo
sub
test
adc
mov
shlb
gs
shrl
not
jmp
outsb
dec
shlb
rcll
and
dec
dec
scas
adcb
lods
pushf
call
push
and
xor
xor
fs
mov
rorl
inc
jns
rcrb
dec
dec
lds
aas
lods
sbb
sbb
or
xchg
call
xlat
adc
fwait
nop
push
mov
push
mov
jbe
aad
test
loopne
mov
jbe
push
mov
mov
cld
rolb
jmp
aaa
sbb
es
inc
pop
cmp
mov
or
lods
mov
jp
mov
out
in
pop
and
mov
mov
cmc
mov
push
inc
mov
pop
cs
mov
mov
arpl
jne
je
mov
iret
rcr
or
aad
jge
mov
adc
inc
pusha
bound
xchg
sahf
in
dec
arpl
inc
bound
cld
cwtl
fnsave
mov
lahf
pop
sub
cmc
ror
and
imul
mov
addb
mov
or
imul
lret
push
lods
cld
fs
les
add
mov
shrb
push
iret
jmp
mov
out
push
and
add
push
or
mov
jns
test
std
sbb
ljmp
sbb
scas
inc
mov
add
arpl
sbb
or
add
cs
push
ja
mov
in
nop
loope
sarl
inc
pop
xlat
bound
adc
inc
iret
cmp
or
and
add
push
mov
sarl
dec
xor
fucomp
and
cmpsb
loop
jl
adc
mov
mov
add
js
mov
pop
push
fs
dec
jg
aaa
xchg
dec
test
mov
call
adc
or
ret
sarl
sbb
pop
mov
ficoms
hlt
adc
syscall
fldl
lods
roll
sub
sbb
jnp
daa
adc
xor
aad
or
daa
popf
sub
int3
pop
sbb
jmp
add
cli
in
in
add
push
mov
push
fnstenv
lods
push
push
xor
int
jg
aaa
call
pop
pop
lret
pushf
and
push
jns
sub
mov
scas
xchg
cmp
inc
ret
lock
test
mov
cmc
into
mov
mov
jmp
in
lods
xchg
bound
cmp
mov
test
dec
jae
mov
jecxz
jns
negb
test
mulb
push
ja
je
insb
push
jp
xlat
ss
cmc
push
xlat
mov
out
xor
and
adc
outsl
fstps
rorl
jne
decl
xlat
adcb
int
cmp
dec
cmp
hlt
push
lcall
mov
ljmp
push
xchg
inc
ret
loop
pushf
mov
mov
in
aas
ficomps
mov
jmp
aam
inc
popa
xorl
addr16
and
enter
iret
sbbl
incb
inc
sub
xor
xor
into
sub
cmc
sub
xlat
mov
test
jmp
hlt
movsl
and
cmc
push
and
into
je
push
ret
xor
aad
test
fs
push
cmp
mov
inc
subl
les
icebp
pop
sub
bound
repz
jp
dec
aad
popa
clc
outsb
pop
cld
in
out
or
adc
test
jne
sbb
out
dec
aad
or
test
sbb
cs
pushf
ficomps
lods
inc
insl
xor
sahf
cwtl
mov
dec
push
xlat
pop
xor
imul
cmp
adc
jge
call
cmp
jmp
push
mov
addb
repz
push
das
or
cli
cltd
or
mov
xor
movsb
das
and
inc
cmp
test
pop
pop
or
rcll
icebp
ja
movl
imul
cmp
pop
push
mov
rolb
pop
xchg
in
push
push
sbb
jns
shrl
adcl
repz
call
out
idivb
sub
dec
xor
pop
aam
jbe
pusha
xchg
mov
cwtl
ljmp
sbb
pusha
leave
push
out
lea
imul
js
jl
subl
bound
orb
insb
adc
mov
jecxz
push
add
mov
jns
push
cmp
je
lods
mov
outsl
mov
mov
and
mov
out
sub
lcall
loop
adc
xchg
out
sti
loop
cmp
jns
push
outsb
or
add
sbb
out
push
inc
cmp
sbb
xor
xchg
js
aas
cmpsb
mov
push
sub
outsb
movsl
testl
cmp
cmc
int3
iret
bound
adc
lret
inc
xor
rolb
call
adc
push
push
movsl
jbe
mov
adc
jne
xchg
loop
stos
stos
mov
shlb
add
push
stos
mov
iret
sbb
jmp
add
sub
push
faddl
daa
orb
mov
out
inc
cld
sahf
fldcw
jle
sub
daa
rolb
sbb
outsl
test
cmp
test
jecxz
lahf
sub
and
xchg
clc
inc
and
sbb
je
lea
sbb
add
adc
ret
mov
or
orl
jge
imul
popf
mov
sbb
adc
jne
pop
sbb
mov
stc
sub
lahf
cmpsb
popa
incl
adc
pop
or
mov
and
shll
sbb
and
shrb
mov
cmp
sbb
jp
out
or
lahf
inc
fmuls
cmp
inc
sbb
dec
mov
lcall
fbstp
adc
es
js
addr16
cli
sbb
and
sbb
mov
add
xor
mov
xchg
ds
lret
ret
stos
cmpsl
pop
in
ficompl
add
inc
test
out
mov
and
cwtl
jno
mov
dec
cltd
call
pop
mov
rorb
sbbb
and
xlat
pop
sbb
mov
cld
mov
in
or
cltd
daa
shrb
lar
ret
pop
cmpsb
ret
shrb
push
xor
mov
push
fs
cmp
aaa
xchg
flds
sahf
add
lret
or
jno
or
ljmp
jb
imul
xchg
jbe
gs
push
subl
roll
and
leave
dec
daa
fcomi
mov
ja
iret
rolb
negl
pop
add
dec
xchg
out
adc
mov
bound
sub
fs
les
pop
dec
imull
cld
adc
out
adc
cld
xor
das
popf
dec
pop
sarl
stos
imul
and
das
loope
push
in
add
out
sub
inc
stc
out
jge
xor
xlat
cmp
mov
or
pop
or
mov
dec
stos
or
mov
xlat
insl
xchg
ret
fwait
pop
ret
add
bound
sbb
ret
push
xor
lock
adc
push
clc
loope
outsb
out
fnstcw
cmpsl
rclb
pop
pop
shr
decb
loope
cmc
cmp
push
dec
add
adc
les
xor
addr16
adc
dec
lds
in
fwait
lock
jmp
bnd
in
mov
cld
cmp
int
jg
int
je
mov
jle
xor
dec
loop
jbe
inc
cmp
clc
jl
cwtl
int3
push
cmp
jns
mov
mov
repnz
clc
inc
icebp
repnz
cmp
push
addb
cmp
inc
lods
sub
pop
enter
add
fs
adc
xchg
adcb
popf
mov
mov
xchg
testl
movsb
adc
xchg
loop
dec
mov
cltd
and
and
mov
out
in
adc
rcrl
cmp
xchg
mov
sub
xchg
pushf
mov
xor
pop
das
enter
rorl
pop
das
mov
test
test
mov
loopnew
cmpsb
xor
sub
xor
test
les
movb
xchg
popf
and
adcb
sbb
jno
xchg
cmp
xchg
sbb
mov
and
stos
in
xorl
loopne
or
mov
pushf
nop
aad
jo
pop
pop
push
xchg
in
sub
jne
aaa
mov
cmp
inc
mov
movsb
sub
mov
pop
stos
fdiv
insl
in
rcrb
push
divb
mov
mul
jp
pushf
gs
mov
dec
test
mov
lret
mov
es
subl
scas
mov
cwtl
fsub
or
test
adc
dec
mov
xorl
ficomps
mov
pop
xor
pop
mov
jge
popa
fdivrl
push
js
movsl
push
loop
popa
inc
stc
add
jmp
dec
xor
mov
jecxz
sub
shll
mov
add
sub
fs
dec
addr16
fildll
ljmp
inc
inc
push
movsl
imul
inc
sub
add
mov
int
pop
push
aad
pop
ret
push
adc
xchg
insl
loopne
mov
loope
or
and
mov
xor
fldcw
push
in
cwtl
push
cmpsb
sar
cmp
jae
pop
pop
imul
add
mov
outsb
xlat
mov
dec
inc
adc
gs
push
les
adc
sub
xor
dec
mov
jmp
push
add
pop
sti
outsl
lock
sbb
inc
cmp
adc
lcall
enter
pop
jg
sub
sbb
leave
nop
scas
das
scas
mul
cmp
rcrb
push
int3
in
jb
mov
sub
addl
xor
sbb
jge
arpl
lret
mov
fiadds
int3
rcll
mov
mov
jle
test
divl
inc
push
xor
jecxz
mov
pop
div
aaa
out
es
lret
or
mov
cmp
sub
sub
test
test
jns
fcompl
out
mov
inc
pusha
sub
fcmovne
outsb
and
and
mov
adc
jnp
addr16
cmpsl
jns
xchg
es
xor
fldt
aaa
dec
cltd
mov
stc
jmp
xchg
out
popa
jl
jo
mov
andb
mov
stc
subb
jne
sbb
sub
and
movsb
xor
aam
inc
cltd
out
pop
cs
xabort
ja
jl
lock
sub
add
cmp
fstenv
add
in
jecxz
push
cmp
sbb
mov
xchg
in
in
inc
fwait
xchg
mov
movl
hlt
jns
jo
adc
jbe
mov
push
das
int3
sahf
fiaddl
mov
test
das
pop
shlb
movsb
mov
mov
scas
imul
pop
xchg
sbb
lea
addb
pop
mov
stc
mov
sbb
jnp
repnz
sbb
fbstp
adc
fs
stos
sbb
jb
push
arpl
mov
jecxz
dec
aaa
movsb
or
aam
icebp
repnz
xchg
mov
mov
cmp
cmp
adc
pop
or
jmp
movsl
push
adc
filds
sbb
fsqrt
daa
sahf
inc
add
ret
in
push
icebp
ljmp
jecxz
inc
leave
jns
sub
mov
and
xor
ljmp
and
dec
lret
mov
adcb
sarl
mov
hlt
pop
push
sub
out
les
dec
mov
fcoml
mov
rcl
sub
movsb
jne
mov
pop
jg
pop
inc
and
mov
push
inc
ret
loopne
xor
mov
xor
mov
cmp
adc
cmpsl
pop
lods
enter
in
mov
imul
test
sub
adc
into
ror
mov
cmp
dec
dec
fwait
int3
adc
mov
inc
xlat
stc
sbb
sub
addl
cltd
outsb
push
sbb
out
dec
fmull
or
sbb
push
negb
pop
dec
or
dec
pop
pop
loop
shl
cmp
stos
inc
popa
push
ret
hlt
push
arpl
dec
pop
cmp
xlat
add
out
je
shlb
mov
push
lret
test
cmpsb
cwtl
adc
pop
push
jb
arpl
xchg
sahf
psrld
push
pop
sub
mov
mov
push
dec
jle
imul
dec
into
dec
mov
shrb
xchg
pusha
lahf
xchg
pop
clc
testl
add
xor
sbb
and
out
sub
sub
sbb
push
and
mov
pushf
add
xlat
iret
bound
in
sti
inc
sti
adc
xchg
fcmovne
jp
mov
xchg
aaa
xor
pusha
push
fmuls
hlt
out
cmp
sbb
cmp
sbb
or
jle
mov
adc
ret
ficompl
stos
jb
inc
out
loopne
icebp
loope
in
cmc
gs
aas
sbb
jb
popa
push
xchg
mov
popf
dec
push
or
insl
push
lock
popf
in
mov
jg
jae
fisubs
and
fdiv
mov
xchg
dec
cltd
adc
push
sub
xchg
ret
inc
inc
stc
sarl
decl
cmp
repz
sbb
cmp
sbb
aad
and
push
xchg
cmpsb
push
sbb
mov
push
pextrw
mov
or
inc
jmp
lret
movsb
test
or
mov
jno
fwait
jb
jp
push
sbb
xchg
and
xor
daa
std
mov
push
pop
out
or
pop
pop
mov
fnstenv
and
push
mov
cmpsb
jnp
ljmp
cmpsb
or
jne
sub
cmpsl
out
sti
pop
popa
xchg
add
stos
inc
cmpsl
bound
xchg
notl
push
mov
sub
jns
lods
inc
push
imul
test
jmp
cli
jmp
push
test
clc
mov
mov
arpl
mov
outsl
je
mov
test
lahf
mov
movsl
pop
clc
ficoms
or
mov
out
jg
mov
pop
fsubl
mov
push
clc
fucomp
mov
inc
jo
jl
test
inc
dec
fistl
sbbl
inc
adc
inc
pop
fxam
adc
int3
je
outsb
push
nop
dec
and
out
sub
mov
xor
rcrb
mov
imul
enter
xchg
bnd
addl
repz
sahf
sbbb
jecxz
or
inc
mov
cli
xchg
lret
pop
mov
adc
shlb
adc
jno
pop
mov
push
push
jge
je
cmp
adc
aad
fs
cmpsb
sbb
xchg
sub
out
xor
mov
adc
push
pushf
push
add
mov
mov
jg
jmp
xlat
in
sti
or
mov
add
xchg
xor
xchg
push
xor
xchg
sti
lcall
xchg
sbb
in
shr
xchg
das
pusha
jns
sar
jp
fcmovb
jns
in
sbb
cltd
and
inc
pop
xchg
jo
rcl
add
inc
xacquire
int3
dec
push
xor
pop
js
mov
mov
lcall
and
add
nop
lret
pop
sbb
imul
jl
xor
push
mov
xor
fcoml
xchg
loopne
sub
rcrl
mov
aam
movsb
decb
movsb
cmp
sub
dec
jg
and
ret
mov
ret
fdivp
mov
mov
or
nop
fcomps
mov
mov
aaa
mov
movsb
jp
shrb
test
addb
xorl
rolb
mov
mov
inc
lock
jp
push
popf
gs
paddusw
or
addl
push
mov
adc
sub
nop
iret
cmp
xchg
cmp
mov
push
cmp
cmp
sbb
xor
dec
ss
add
arpl
cmpsb
popf
pop
jecxz
pop
insl
bound
lret
ljmp
out
mulb
push
and
icebp
mov
aas
pop
std
push
scas
jo
and
cmpsb
inc
lods
jo
dec
and
add
jmp
xor
xor
mov
push
push
icebp
fwait
clc
scas
lock
dec
mov
push
insb
test
aaa
fwait
in
adc
imul
mov
mov
faddl
mov
les
cltd
mov
inc
test
scas
scas
out
repz
andl
mov
stos
jmp
or
push
add
sbb
sbb
mov
flds
in
sbb
bound
rcll
pusha
pop
das
and
shl
inc
inc
nop
loope
cmp
push
repnz
xor
dec
out
lods
cmp
clc
insb
sbb
int3
rcrb
xor
xchg
add
test
ljmp
adc
cmp
aam
sub
push
cmpsb
jp
lcall
and
cmp
mov
inc
pop
cmp
lret
xchg
jnp
and
mov
inc
sub
fisttps
rclb
mov
pop
jp
hlt
push
mov
inc
cmp
xchg
push
lea
fiadds
mov
mov
addb
push
jp
cli
or
and
loope
mov
xchg
cmp
imul
push
adc
xchg
cli
and
xor
pop
testl
mov
out
dec
fistps
push
dec
xchg
popa
mov
pop
push
or
outsl
mov
adc
push
das
adc
mov
and
fsubs
cmp
scas
jp
aaa
lret
cld
in
cmp
fcoms
nop
hlt
sbb
push
outsb
mov
add
mov
or
jo
xchg
mov
mov
fisubrs
out
in
push
or
je
shrl
in
mov
inc
lods
sub
inc
push
adc
sarb
cmp
push
fcomip
inc
inc
pop
stc
pop
fwait
lods
push
push
fdivrs
push
test
sarl
ss
ljmp
inc
mov
xchg
fwait
cmovae
movsl
into
pmulhuw
fstpt
fcoml
std
pop
das
mov
sbb
jle
fldcw
in
subl
xor
jge
sahf
cmc
or
pop
push
inc
dec
sbb
mov
roll
dec
fistps
incl
push
mov
xchg
mov
sbb
inc
in
push
xchg
mov
mov
sbbb
pop
fwait
inc
mov
movsb
sub
or
ja
sbb
pop
xchg
jo
sub
rolb
jecxz
fdivrl
or
jnp
nop
adc
shrl
fldenv
aad
mov
imul
xor
pop
push
sub
arpl
pop
mov
stc
fstps
sahf
outsb
push
inc
dec
lahf
je
xchg
ret
fcom
shlb
fwait
aad
fistpll
and
fcoml
leave
jecxz
lods
and
cmp
pop
inc
push
or
sub
hlt
lret
repnz
xchg
outsb
int3
sub
mov
jecxz
and
jo
les
out
std
xchg
jp
andb
or
cmpsb
pop
cli
push
sahf
pushf
rcrb
out
hlt
fcoml
jmp
cli
cs
adc
sbb
aas
das
sahf
fdivrs
push
lret
cmpsl
insl
sbb
mov
test
rorb
jns
gs
mov
xlat
and
in
les
rcrb
in
pop
mov
dec
adc
xchg
cwtl
aam
scas
addb
mov
mul
adc
inc
lods
cmp
jo
int
mov
adc
sahf
incb
dec
mov
pop
dec
aam
ds
push
mov
push
adc
into
mov
push
mov
out
xchg
cmp
add
inc
test
or
adc
out
fs
push
ficoms
push
sbb
loope
xor
or
cmp
sbb
mov
in
iret
iret
or
pop
cli
inc
clc
outsl
push
push
enter
mov
movsb
leave
push
xchg
adc
push
fwait
inc
mov
inc
loopne
mov
adc
jne
or
mov
mov
faddl
mov
pop
insl
xor
mov
dec
test
add
jecxz
popf
push
rcrl
mov
test
arpl
dec
push
stos
dec
xchg
sti
mov
hlt
popf
fcom
stos
pop
ret
into
mov
insl
mov
xor
sub
xchg
push
movsb
inc
punpckhdq
pop
lods
dec
jns
shll
pop
xchg
jne
loop
mov
or
push
mov
cmp
mov
lds
sbb
ss
out
imul
mov
xorb
test
pop
mov
mov
mov
lock
sub
xchg
repz
mov
adc
cmpsl
call
loop
jbe
pushf
add
jp
cmp
xorl
cwtl
and
popf
ret
add
lahf
ljmp
mov
insb
inc
sub
push
fxch
mov
dec
xchg
pop
stc
cmp
cmp
mov
pushf
or
insb
jp
out
push
pop
jge
sub
or
andb
js
jbe
pop
fimuls
int
inc
mov
andb
fsubrs
mov
mov
dec
and
inc
clc
dec
dec
xor
push
push
ja
xor
adc
xlat
xchg
sbb
push
inc
mov
add
push
mov
stos
jno
insl
aaa
pop
lret
mov
out
loope
popa
addr16
push
cmpsb
shlb
enter
aad
dec
mov
and
cltd
jno
shrl
orl
or
daa
sar
jae
mov
cwtl
cli
int3
jb
pop
call
sub
push
jg
lret
or
lret
loopne
adc
scas
mov
imul
sub
pop
fcom
jns
cltd
sub
xor
pop
xor
inc
pop
andb
fildll
cmp
push
pop
jmp
jge
cwtl
dec
fnstenv
movsb
cmp
xchg
out
sub
add
scas
scas
stos
pop
mov
nop
dec
test
mov
movsb
pop
test
mov
test
je
test
mov
lods
xchg
jo
jecxz
sbb
imul
sbb
adc
lcall
fs
mov
xor
xchg
xor
packsswb
or
ljmp
jmp
jo
pop
shr
add
jmp
push
pop
insb
or
mov
fildl
cmp
or
jecxz
pop
cwtl
push
imull
std
xor
xor
xlat
jns
push
sbb
sub
fisttpll
cs
adc
or
and
fcomi
sub
xchg
inc
jge
pop
mov
or
rorl
push
enter
xorb
mov
clc
fisttpl
lret
pop
push
das
lods
dec
mov
or
pusha
cmp
mov
or
lcall
test
shrb
leave
mov
mov
prefetcht1
lret
jge
xlat
fdivrl
ljmp
aad
pop
mov
jne
add
pop
xor
sahf
pop
scas
pop
inc
aam
test
dec
push
push
push
jb
push
jb
jmp
arpl
ffree
mov
cmp
out
push
cmpsb
xchg
in
xchg
lret
ret
popa
aam
mov
imul
int3
icebp
xchg
pop
out
or
sbb
jecxz
mov
arpl
push
int3
jge
sarl
adc
xor
pop
rcrb
mov
test
movsl
hlt
test
mov
test
lods
push
lock
jae
loopne
es
cmp
add
cwtl
jo
mov
dec
xchg
inc
nop
xchg
sbb
jae
jno
xchg
int3
jns
jae
cwtl
mov
jnp
fiadds
sti
lahf
das
daa
icebp
mov
lret
imul
test
enter
or
loope
cmp
mov
and
push
jns
adc
pop
mov
ficompl
jmp
pop
mov
arpl
je
fsubrs
inc
mov
clc
sub
jl
mov
stos
push
xchg
sub
repz
rolb
cltd
cltd
sub
les
ds
aaa
pop
ret
add
or
inc
int
pop
sahf
push
cmp
jmp
outsw
in
xchg
pushf
inc
pop
addl
cmc
test
jle
fs
bound
push
jp
xlat
stos
pop
inc
adc
shll
mov
push
pushl
mov
pop
and
mov
mov
cmp
and
mov
out
inc
adc
les
jmp
inc
lret
sbb
leave
ret
clc
sbb
ljmp
lahf
pushf
push
movsb
data16
iret
push
loopne
or
lock
mov
push
add
pop
pop
int
decl
sub
iret
fnsave
ja
stos
dec
add
ja
bnd
mov
gs
pop
leave
popf
push
xchg
cwtl
xchg
push
jmp
jge
decb
les
adc
xchg
fistpl
push
sub
mov
ds
or
mov
out
sahf
lods
and
add
pop
mov
mov
dec
inc
or
je
push
pop
add
jmp
pushf
imul
pushf
daa
cmp
out
icebp
dec
lret
fcomps
leave
mov
fwait
pop
xor
je
add
sbb
mov
xchg
dec
xchg
adc
lds
fadds
pop
add
sahf
xor
cli
stos
movsb
call
leave
push
lahf
cmc
or
xor
push
stc
xor
adc
repz
cmp
or
imul
jecxz
xor
sbb
jecxz
cmp
add
mov
lods
and
ss
sbb
cmp
jl
es
pushf
push
adc
cmp
mov
mov
push
dec
or
cltd
lds
ret
std
jecxz
pop
inc
inc
lret
dec
pop
mov
loope
push
cmp
cltd
push
xchg
stos
push
pushl
in
imul
and
or
cmp
fildll
inc
out
lds
jno
into
mov
jns
fldcw
ret
lods
js
inc
or
loopne
push
mov
xchg
test
inc
insb
pop
lods
mov
jmp
data16
mov
mov
pop
push
cmp
outsl
nop
mov
cli
sub
inc
test
aam
mov
cmp
int3
imulb
addr16
jmp
loopne
pop
in
pushf
jg
filds
dec
les
push
jle
pop
aaa
in
enter
hlt
cmpsb
lret
mov
jae
jmp
lahf
cmp
ret
dec
jle
jp
arpl
jl
imul
mov
jns
lea
and
fwait
loopne
mov
mov
jecxz
sbb
dec
notl
aas
jle
and
jecxz
jo
pop
sahf
mulb
cld
sub
les
pop
xchg
mov
and
loopne
jo
mov
jno
aas
pop
xor
push
ljmp
jge
xchg
ss
xlat
xchg
insb
cmpsl
jb
cld
sbb
jle
dec
inc
subl
rcr
mov
and
and
mov
or
rorb
push
add
sub
lahf
aad
jge
sbb
mov
push
jb
sbb
adc
fcmovbe
leave
in
lds
daa
enter
dec
mov
sbbl
ljmp
loop
mov
pop
call
ficompl
pop
stos
int3
push
xor
and
roll
arpl
out
xorl
adcb
hlt
pushf
mov
pop
jp
jle
push
fistpll
mov
lods
ret
or
iret
pusha
sub
push
dec
mov
ret
or
das
jecxz
popa
pop
cmpsl
mov
pop
jno,pt
out
push
sbb
inc
xor
mov
test
jb
pminsw
cmp
mov
jmp
clc
mov
jo
scas
sbb
add
cmp
or
mov
pop
outsl
pmaxub
pop
pop
cmpl
cld
enter
sub
jmp
aaa
jae
out
lahf
push
dec
ret
add
or
dec
jge
leave
ds
jbe
cwtl
call
cmpsb
mov
fisttpl
jns
jno
popa
call
or
push
push
fidivrl
inc
xor
sahf
and
add
popf
test
loope
scas
jbe
in
sub
cmp
jge
jno
jbe
xchg
inc
xor
push
clc
in
xchg
jne
sbb
sbb
fiaddl
rcrb
jno
cmpsl
push
push
and
sbb
push
fs
and
sub
push
push
ja
in
in
lds
inc
sti
test
sbb
pusha
mov
lds
lret
mov
test
or
in
pushf
xchg
mov
mov
stos
lret
jle
je
pushf
mov
cmc
pop
imul
out
lods
cmp
pop
pop
dec
cmpsb
mov
adc
adc
imul
fwait
mov
out
pop
ja
push
xchg
in
mov
lret
mul
shlb
fiaddl
fs
inc
ss
and
stos
inc
jmp
mov
adc
mov
ret
loopne
mov
test
xchg
and
lea
dec
mov
inc
shlb
fdivp
sub
aas
mov
rorl
in
lahf
sub
add
sti
or
jle
insb
inc
rcr
mov
loop
pop
out
shrb
cld
das
setb
sbb
dec
and
add
lds
daa
aaa
lcall
sbbl
clc
xlat
xchg
subb
fimull
cwtl
out
aaa
sbb
movsb
sbb
sub
mov
aad
movsl
into
cltd
test
and
xchg
jo
xchg
outsb
stos
lods
jp
lahf
adc
fidivrs
stos
xor
stos
jp
adc
jne
scas
dec
inc
jno
add
repz
push
mov
pop
out
fistpll
fistps
mov
or
fdivrl
out
ficoml
sti
lret
movsb
loopne
push
test
mov
xchg
adc
gs
pop
sbb
dec
add
or
pop
cmp
pop
push
push
mov
mov
pop
dec
mov
mov
jb
jns
xor
imul
push
xor
xchg
in
shl
gs
roll
aad
sub
push
icebp
xor
pop
mov
pushf
movsl
cmp
out
or
arpl
daa
jmp
aaa
add
inc
jle
outsb
cmp
imul
testb
sbbb
loope
xchg
mov
jne
mov
adc
adc
jb
mov
ljmp
and
rorb
mov
xchg
mov
push
mov
shl
subb
fsubrs
scas
jmp
mov
mov
fwait
lret
jae
and
adc
lret
mov
pop
shlb
mov
inc
subb
test
loope
popf
mov
fbld
loopne
andl
inc
test
mov
mov
cmc
mov
mov
sbb
jb
jo
pop
xchg
mov
push
sub
add
and
fwait
pop
daa
add
mov
lods
out
rcrl
mov
lahf
scas
cmc
adc
push
aas
push
jge
mov
or
add
sub
mov
movsl
or
inc
sbb
aam
push
leave
lret
scas
test
nop
je
jp
dec
enter
or
add
push
sub
ret
and
sub
mov
dec
xchg
pop
and
sub
inc
fnstsw
into
xor
daa
ret
sti
mov
push
jmp
mov
mov
in
test
outsb
pop
icebp
stos
and
xor
repz
jo
adc
cld
mov
cmc
ss
div
in
jle
lods
mov
loopne
lods
scas
mov
cmpl
and
lahf
mov
hlt
pushf
dec
mov
jle
leave
dec
inc
mov
lock
pusha
lar
sbb
les
dec
jne
ss
icebp
or
xchg
sbb
jno
loope
sbb
scas
pop
bound
push
pop
pop
clc
aas
nop
jle
ds
roll
jecxz
int
scas
inc
sbb
mov
popf
ret
mov
adc
test
es
inc
sub
lret
ret
arpl
mov
cwtl
iret
push
cli
ljmp
inc
jg
xchg
fmulp
sub
nop
sarb
jbe
dec
leave
enter
sbb
les
dec
xchg
outsb
movsl
push
inc
pop
sub
rcrl
aas
inc
lret
insl
pop
lcall
movsl
test
xchg
and
divb
pop
inc
push
mov
jbe
icebp
in
in
sub
cltd
les
add
pop
mov
and
enter
cmp
out
mov
out
inc
xor
jmp
add
and
mov
int3
push
cmp
pop
or
sarb
mov
mov
push
pop
mov
sahf
pusha
mov
dec
and
movsl
add
pop
stos
sbb
inc
outsb
push
push
xor
xchg
pop
setg
adc
or
xchg
cmp
and
addl
push
mov
dec
test
xlat
scas
adc
sub
in
in
loop
mov
xor
lahf
jge
dec
rol
mov
mov
sarl
inc
rol
jae
mov
sbb
repz
sub
test
push
sbb
or
push
mov
pop
inc
jmp
testl
and
test
sarl
and
dec
jnp
filds
cmpsl
adc
jmp
jbe
jmp
iret
pop
inc
shll
jg
and
jmpw
pop
push
xchg
dec
xchg
mov
cmp
and
or
inc
push
jl
xchg
mov
cmpsl
mov
xchg
xchg
add
aaa
lods
iret
xchg
sub
mov
pop
dec
jbe
sub
fimuls
les
mov
je
cltd
add
lods
fstpt
dec
push
adc
xor
cmp
xor
push
cmpsb
mov
mov
divb
dec
loop
xor
adc
mov
xchg
cld
stos
pop
jno
add
lods
jb
jo
push
cli
jb
sti
jmp
sahf
mov
mov
aaa
xor
push
ja
push
mov
repz
cld
jmp
inc
jge
mov
mov
jg
mov
adc
mov
pushl
pminub
insl
sbb
cmp
dec
and
add
dec
inc
jmp
lods
fdivs
dec
icebp
xor
nop
dec
test
add
lds
dec
imul
inc
sbb
sbb
es
iret
dec
and
lock
imul
in
mov
sbb
sub
pop
cld
iret
jmp
mov
pop
test
add
jg
outsb
xor
xchg
ret
movl
fs
pop
push
xlat
mov
pop
sbb
inc
iret
daa
or
shlb
addr16
fldl
mov
movsl
sub
enter
mov
insb
mov
je
jp
loope
loop
mov
pop
mov
loop
outsl
push
inc
popf
and
cmpsl
icebp
sub
out
movsb
dec
and
in
shll
lret
push
add
lods
xor
and
pop
or
mov
mov
or
jecxz
js
ja
stos
dec
out
adc
mov
push
push
jp
jb
pop
lcall
outsl
dec
push
push
pop
push
aam
push
cltd
gs
loope
lds
jcxz
enter
cmp
cld
mov
xchg
addps
pusha
mov
mov
insb
imul
pop
xchg
into
push
sahf
xchg
inc
mov
dec
and
push
shll
cld
jmp
clc
mov
pop
or
andl
mov
inc
stos
sub
push
dec
mov
dec
pusha
pop
jecxz
add
mov
idiv
loope
out
or
not
mov
xorl
pop
movsb
adc
xchg
fs
lahf
sbb
jl
xchg
aad
adc
and
in
pop
push
scas
jmp
in
and
inc
inc
stc
pop
mov
add
outsl
or
cmc
or
pop
or
or
jbe
jbe
scas
fstpt
aad
push
loopne
fnstcw
in
je
push
cmpsl
push
sahf
imul
mov
adc
popa
mov
push
and
jp
out
pop
or
popa
fadd
sbb
mov
ror
cmp
push
jg
insl
jns
jo
cmp
cmc
leave
xchg
jge
adc
cld
lock
stos
into
jno
fs
das
xchg
jmp
lret
adcl
fsubrl
fisubl
pop
cwtl
jo
fisubs
push
iret
int3
jno
push
pop
add
add
fistl
data16
xchg
mov
jo
dec
and
pop
lods
dec
adc
filds
outsb
cmpsb
enter
daa
std
icebp
sahf
jo
fcoms
xchg
dec
xchg
in
call
fidivrs
adc
add
inc
out
add
cmc
dec
filds
cli
iret
fdivrl
mov
sbb
and
lret
xor
cmovae
pop
std
cmp
jmp
inc
inc
add
or
jno
cmp
in
jae
ret
jo
cmp
jae
fs
xchg
dec
add
or
pop
cmp
fs
sub
cli
and
xchg
push
dec
in
and
enter
xor
mov
ss
into
push
call
pop
jle
xchg
mov
testb
iret
push
pop
pop
mov
xchg
xor
push
sbb
pusha
jns
into
sbb
fnstsw
push
jb
stc
cmp
lods
mov
mov
cwtl
push
xorl
mov
lea
pop
std
pop
cmpsl
sub
mov
daa
adc
sbb
jmp
cmp
test
arpl
jnp
cmp
cmp
loope
rcll
jne
enter
push
int
imull
lods
dec
sub
dec
sub
sub
and
mov
jno
mov
cmpsb
je
cmc
push
lock
shrb
sti
fidivrl
bound
andb
pop
icebp
rorb
scas
dec
insl
out
sbb
xor
mov
repnz
popa
push
mov
dec
mov
rcll
lretw
jae
daa
ret
and
iret
cmc
movsb
push
jnp
mov
push
imul
sub
pop
and
lret
lock
mov
fs
test
das
mov
lret
cmp
fadds
shrb
insl
rol
loop
nop
pop
mov
je
clc
out
mov
imul
fistpl
dec
insl
mov
hlt
inc
lods
decl
xchg
sbb
sub
mov
sbb
aaa
xorl
pusha
cmp
jb
aas
xor
jne
outsl
test
pop
aaa
jl
lret
push
testl
push
mov
sbb
jnp
mov
mov
add
adc
adc
and
dec
xchg
cld
lret
jl
xor
mov
push
js
mov
jb
test
cli
push
ds
insb
into
ds
jge
popf
lahf
or
mov
add
nop
movsl
push
inc
adc
xlat
cmp
push
lret
jne
int
sbb
sub
and
push
and
shr
mov
mov
mov
dec
and
psraw
scas
lea
std
mov
repz
pop
iret
mov
or
ss
cmp
push
sbb
sbb
pushl
add
insl
mov
mov
loop
xchg
mov
pop
fs
arpl
xor
sub
cmpsb
cmp
cmpsb
rcr
insb
sub
bnd
lret
add
jb
rorl
cmpl
mov
loop
add
and
jg
mov
data16
pop
aaa
mov
xchg
cmp
call
add
sbb
je
push
push
inc
stos
cld
inc
push
in
cltd
outsb
add
adc
adc
add
push
popa
fiaddl
xor
fdivr
cmp
pop
ss
cmp
dec
and
push
rcrb
repnz
lods
jl
dec
sbbl
mov
bnd
pushf
lret
sbb
mov
outsl
sahf
leave
loop
aam
sub
xchg
leave
sbb
stos
dec
mov
shl
les
dec
dec
mov
push
jae
add
shll
rorl
sub
out
in
daa
test
mov
cmp
mov
dec
test
dec
hlt
rolb
cmp
xchg
lock
setb
sub
shll
int
push
jg
lods
adc
movsl
xlat
mov
sub
push
and
nop
adc
popf
in
ljmp
sahf
jle
insb
aad
dec
mov
jge
xor
iret
ss
lcall
test
in
jmp
mov
orb
cmpsl
in
cmpsb
lcall
xchg
and
mov
bound
aaa
not
sub
and
xchg
jnp
push
add
cld
jge
hlt
add
pop
in
add
lret
cmp
fimuls
inc
ret
inc
outsl
call
push
mov
inc
movsl
pop
rclb
repnz
xchg
mov
mov
popf
leave
fs
outsb
jecxz
enter
jmp
pop
jo
movsb
into
dec
pop
jo
xor
lahf
xchg
and
aaa
fdivp
sub
adc
push
into
inc
loop
mov
movsb
jle
push
mov
lock
data16
adc
rcrl
mov
sbb
mov
cmpsb
mov
sahf
push
push
bound
add
pop
or
mov
scas
adc
lret
scas
and
lret
call
dec
pop
fucomp
fcmovnbe
fsubs
adc
or
outsb
lods
cmp
outsl
loope
xchg
jb
stos
rcll
adc
or
xor
xchg
dec
test
xchg
xchg
rcl
push
sbb
popf
mov
shlb
pop
xor
jmp
aad
ret
and
sub
fbld
mov
mov
in
cmp
add
fdivrs
inc
movsb
mov
push
sub
push
fnstenv
int3
inc
add
xchg
sub
pop
mov
mov
int
adc
xlat
mov
popf
les
dec
mov
call
or
adc
add
in
hlt
mov
jo
xchg
inc
push
imul
sub
mov
jl
push
fstl
cmp
cmp
xchg
cmp
ror
popa
cltd
gs
out
cmp
fdiv
push
inc
xchg
repz
xchg
cmc
dec
mov
cmc
add
or
outsb
ds
cmp
mov
xor
mov
roll
jnp
lds
mov
push
inc
sti
cwtl
int
xchg
or
aaa
mov
or
cmp
decb
push
mov
add
rolb
addr16
jmp
das
call
pop
lock
and
leave
fs
mov
push
pop
loope
adc
sub
mov
push
ret
arpl
xchg
add
enter
jns
push
push
lods
lcall
loope
adc
pop
insb
mov
inc
xchg
les
jl
mov
stos
cmp
xchg
cmp
push
xor
cwtl
cmp
cmp
outsl
adc
jns
xorb
fwait
sub
jnp
or
cwtl
out
mov
add
test
repnz
mov
adc
pop
adc
mov
jb
pop
std
test
add
cli
jo
or
or
dec
fisttps
pop
sbbb
ret
cmpsb
add
in
stc
cmp
add
xor
pop
decb
push
sub
xchg
sub
xor
jbe
mov
popa
mov
add
pop
jne
adc
pop
mov
mov
mov
int3
insl
lret
das
lds
aas
xchg
push
rcrl
mov
mov
sub
xchg
adc
xor
out
sahf
pop
xor
push
lea
sbbl
jns
hlt
push
in
repnz
add
fs
scas
insl
sub
mov
mov
jp
pop
jle
lea
push
pusha
mov
mov
mov
pop
jmp
pop
hlt
adc
mov
adc
test
sbb
aaa
rorl
push
test
pusha
pusha
stos
testl
cmp
scas
mov
das
jg
xchg
xrelease
push
pop
cmp
jmp
frstor
xor
push
pop
mov
repnz
enter
fs
inc
dec
or
mov
outsb
xor
popf
sbb
push
sub
les
mov
mov
xor
popa
fiaddl
mov
test
pop
and
mov
jo,pt
jp
mov
and
stc
cmp
and
fldenv
add
movsl
mov
pop
into
outsl
add
lods
inc
mov
push
and
mov
pop
pop
es
outsb
popa
clc
xchg
push
mov
jae
dec
pop
jle
mov
ret
dec
and
and
into
and
pop
xor
add
inc
lret
les
adc
mov
dec
sub
ret
arpl
xchg
xchg
and
into
clc
mov
dec
adc
ret
push
dec
jl
adc
mov
scas
les
aad
pop
sti
xor
pop
dec
je
sub
cmpsl
call
rcrb
xchg
icebp
xorb
add
lcall
cmp
sub
cmc
add
mov
mov
jmp
std
xor
add
xor
lods
dec
push
xchg
xchg
lods
push
imull
ret
bound
sbb
adc
out
or
sbb
in
push
or
aad
xchg
enter
scas
jp
out
aad
mov
bound
jle
sub
xchg
xchg
mov
stos
sarb
mov
iret
pop
insb
hlt
add
sahf
sub
fisubl
adcl
add
ljmp
stc
orl
in
push
outsb
adcl
pop
mov
pushf
enter
cmpsb
ret
mov
xchg
xchg
ret
cmpsb
into
xchg
mov
xchg
jo
mov
xchg
xchg
xor
pushf
iret
gs
jnp
xchg
aad
mov
push
jp
lea
mov
lahf
pop
ja
sub
hlt
mov
jae
and
aaa
xchg
adc
cli
sub
push
movsl
xor
mov
cmpb
xor
jae
fs
lds
stc
lea
inc
push
lds
movsl
cmpsl
movsb
mov
cs
frstor
cmp
mov
sub
in
loopne
data16
outsl
arpl
shlb
movsl
pusha
jae
mov
add
jnp
xchg
stos
aaa
in
das
cvttps2pi
sti
dec
or
movsl
inc
push
or
jp
and
in
cmp
iret
mov
inc
daa
or
pop
cld
scas
mov
xchg
xor
fidivs
repnz
pusha
bound
mov
mov
sbb
jge
in
std
sub
pushf
aas
loope
into
and
pop
lock
adc
stos
in
stos
push
mov
lods
rolb
out
adc
push
ds
push
mov
fwait
pop
add
xorl
dec
xchg
adc
mov
aaa
or
mov
andb
jne
js
in
pop
sahf
cwtl
add
jg
inc
fdivrs
mulb
rcrb
pop
leave
or
int
fmuls
xor
test
ret
stos
frstor
lret
cmpsl
stos
test
sahf
je
jmp
cmpsb
mov
mov
jae
bound
dec
inc
sub
jnp
jo
push
add
mov
cltd
addl
insl
int
xlat
xor
sub
pop
mov
jne
sub
mov
out
popf
imul
je
lret
das
pop
push
mov
jne
mov
aad
mov
push
std
sbb
pop
xor
int3
ja
fnstenv
or
inc
out
fsubrl
mov
lahf
outsl
loopne
aam
repnz
mov
mov
fs
xor
cmp
xchg
inc
push
orb
aad
insb
hlt
int3
sub
or
add
or
cmp
inc
inc
cmp
mov
ja
adc
cs
mov
mov
cmp
xor
filds
sub
test
xchg
xor
loop
mov
into
sub
out
push
sbb
jo
pushf
pusha
lret
mov
sub
sub
fwait
xchg
into
jge
std
pop
pop
aad
sbb
jno
out
imul
loope
les
hlt
lea
movsl
push
mov
imul
inc
idivl
xchg
or
ret
pop
insl
dec
ret
cwtl
mov
out
mov
or
push
lcall
adc
insl
out
ss
lods
leave
push
mov
fs
imull
xchg
lea
xor
aas
int3
popf
adc
mov
fdivrs
add
imul
int
add
scas
mov
mov
enter
adc
sbb
sbb
jmp
rorb
cmp
testl
cmpsb
lcall
lret
and
mov
xchg
jmp
or
dec
int3
pop
add
xlat
push
push
aad
cmc
pop
xchg
in
sub
loop
push
jg
inc
fists
scas
inc
dec
addl
pop
imul
pusha
jp
sub
es
enter
xchg
out
jmp
fbld
xor
push
outsl
push
jmp
lahf
out
jae
ror
loope
bound
andb
pop
idivb
push
pushf
enter
movsl
or
sub
pop
lret
cmp
or
push
xchg
sub
imul
mov
cli
xlat
push
add
push
es
cld
add
fiaddl
pushl
test
mov
nop
jbe
jns
fnstcw
push
sbbl
pop
sub
lcall
pop
cld
insl
sbb
cmpsb
decb
push
rcrl
pushf
cmp
pop
addl
negb
fstps
fimuls
adc
or
push
clc
jbe
jg
mov
or
add
xchg
sbb
pop
add
in
or
mov
xor
dec
int
jg
inc
fcomp
int3
test
mov
dec
mov
add
out
cmpsb
inc
ja
inc
sahf
jg
xchg
mov
out
loope
dec
jle
sti
mov
mov
testl
lret
andl
and
scas
mov
mov
push
aad
js
das
inc
lahf
mov
dec
sbb
and
lret
iret
lret
adc
outsl
pop
mov
insb
fisttps
dec
adc
mov
inc
jmp
push
lds
movsl
push
add
in
lahf
es
pop
adc
std
lea
sub
aad
rcrl
pop
mov
push
sub
pop
movq
mov
sbb
aaa
fdivl
mov
sti
rolb
test
jbe
leave
call
dec
adc
pop
inc
bswap
mov
stc
mov
mov
sahf
mov
cmpsl
inc
in
xchg
mov
incb
imul
adc
xor
loopne
jo
and
sub
adc
add
or
xor
cmpsb
cmp
lock
pop
xchg
push
or
sub
mov
xchg
push
mov
cmp
xchg
dec
ret
mov
comiss
subb
adc
and
xchg
icebp
repz
push
fsts
lods
daa
mov
cmp
dec
jg
in
pop
mov
pop
push
cli
jge
mov
jmp
xor
jnp
add
cmp
imul
pusha
xor
dec
sub
lcall
rol
insl
je
sub
imul
add
loop
lahf
std
cltd
mov
imul
sbb
inc
xor
adc
mov
add
pop
lea
test
mov
sbb
out
xchg
ja
jmp
xor
xchg
xchg
mov
std
shrb
notl
dec
jbe
faddl
stos
test
pop
xor
xchg
or
outsl
js
in
lahf
lret
js
xchg
pushf
xchg
or
xchg
xor
xor
js
xor
lods
int
fcompl
imul
arpl
pop
cmp
stos
xchg
ret
cmpsl
push
pusha
add
gs
adc
cmp
cmpsb
xor
js
in
fcmovnbe
push
hlt
dec
shlb
cli
and
rorb
fisttpl
pop
rclb
or
insb
xchg
xchg
or
push
cmp
daa
dec
xor
sub
cmpsl
pop
push
mov
fcomps
jle
les
push
add
sti
stos
ds
add
inc
add
dec
jmp
fs
jmp
in
mov
fnstsw
fldcw
fstpl
cmc
enter
cs
rcrl
bound
mov
cmpsl
std
xchg
jg
mov
fs
xor
push
mov
xchg
sahf
push
divl
pusha
mov
xchg
push
ds
fistpl
sbb
pop
rcr
dec
out
mov
lret
jle
and
sub
and
sbb
push
loopne
sub
pop
fs
clflush
push
pop
rcrb
or
shll
retw
lret
jae
mov
cwtl
cmpsb
js
sarl
jno
or
cmp
out
rorb
std
shr
adcl
jns
shrl
bound
mov
or
cmp
pop
inc
sbb
adc
mov
adc
cmovno
mov
scas
nop
inc
adc
out
test
daa
retw
dec
dec
popa
loopne
fisubrl
dec
or
inc
push
test
scas
hlt
jae
adc
sahf
sbb
jge
mov
sub
push
movsl
jecxz
loope
xchg
in
mov
andl
cwtl
or
movsb
pop
push
jae
jae
lock
add
movsb
cmpsb
add
push
lea
pusha
outsb
cmpl
arpl
outsb
mov
xchg
adc
std
jnp
mov
cwtl
aam
xchg
xchg
push
aas
sub
mov
ja
or
in
hlt
icebp
gs
outsl
shlb
insl
mov
sbb
adc
aad
xor
pop
push
push
adc
repz
lcall
push
mov
mov
in
jmp
adc
fadd
mov
fsubl
mov
push
idiv
iret
imul
xor
push
cs
and
lea
cs
pop
hlt
dec
les
dec
pop
push
fisttps
and
mov
loope
dec
ficomps
mov
xorl
test
fisubrs
mov
or
xchg
xor
mov
popa
pop
dec
pushf
adc
aaa
ljmp
cvtpi2ps
and
push
out
xchg
mov
daa
ficompl
insl
sub
mov
or
inc
push
cmpsb
push
mov
lcall
xchg
xchg
ss
aam
mov
movups
repnz
dec
ret
xor
dec
sub
je
sub
pop
out
fistpll
xlat
mov
jge
gs
aad
add
push
push
je
cmp
xchg
add
mov
dec
lret
or
xchg
cmpsl
pusha
rcl
aaa
roll
add
imul
fxch
loop
push
or
jg
mov
nop
dec
add
jg
push
xor
les
out
inc
dec
adcb
xchg
mov
lret
dec
sbb
and
fcmove
push
mov
inc
ret
ja
in
adc
call
push
nop
cld
hlt
lods
icebp
jmp
fisubrl
pop
fcomps
pop
fisubrl
roll
scas
xchg
push
or
dec
pop
sub
addr16
imul
push
std
sub
cmpsl
sbb
stc
lds
mov
xor
in
mov
cmc
xor
pushf
cmc
mov
xchg
movsl
add
pop
sub
pusha
lret
xchg
push
lds
sub
jl
jmp
test
scas
dec
dec
fs
mov
pop
stos
or
jp
sarb
popa
or
inc
xchg
loope
mov
jle
fdiv
js
or
mov
sub
push
push
ret
nop
xlat
mov
mov
push
iret
dec
jecxz
je
xchg
sub
out
mov
mov
stos
pop
ret
pop
mov
xchg
stc
pusha
movsb
loope
dec
mov
mov
btc
cmp
das
cmp
loope
sahf
xchg
and
xchg
int3
pop
mov
sbb
mov
insb
dec
jnp
push
push
or
mov
dec
and
sbb
pop
or
jnp
fstpl
rcll
test
mov
pusha
cmpsl
int
ret
fs
jae
sahf
or
dec
in
sbb
jmp
add
out
inc
ljmp
cmp
mov
push
mov
test
push
dec
sbb
or
dec
fldl
lds
sbb
sti
mov
aam
andb
ret
add
xchg
sbb
ror
pop
popf
gs
lret
dec
dec
hlt
idivl
addl
push
out
jo
inc
mov
jno
sub
aad
mov
adc
out
aaa
out
sbb
vpaddsb
inc
fisubrl
call
jns
and
idivb
mov
leave
fistl
fildll
dec
xor
enter
orb
fimull
mov
sbb
mov
pop
shll
mov
inc
pop
push
push
xor
fwait
sub
xor
xchg
xchg
std
js
xchg
jbe
mov
jmp
mov
lret
int
aaa
mov
fdivl
jge
les
dec
scas
cmp
scas
call
inc
arpl
imul
push
idivb
pop
mov
jecxz
push
cld
dec
stc
pop
mov
cs
adc
pop
ss
push
in
pop
pop
js
daa
enter
pushl
daa
rclb
mov
pop
int
pop
cltd
lahf
outsl
cmpsl
push
test
jecxz
xchg
int3
lock
ret
fs
jmp
mov
cwtl
xchg
movsl
in
stos
sarl
xor
mov
call
sub
popf
push
insl
xlat
add
jb
inc
orl
leave
ret
push
pop
std
aaa
mov
pop
imul
sbbb
call
sbb
fistpll
cmpsl
pop
enter
or
out
repz
dec
lar
pop
scas
cmp
jo
in
mov
testl
xlat
shrd
dec
enter
push
pop
outsb
push
jle
mov
pop
cli
inc
cmp
in
xor
ret
arpl
lea
frstor
xor
jle
rcrl
mov
adc
inc
or
aas
les
popf
xor
sbb
ds
jne
xorl
jg
cmp
push
push
mov
inc
mov
push
xor
notb
movq
das
pop
shlb
int3
add
push
arpl
mov
or
adc
cltd
out
push
cmp
and
cmpsb
mov
jns
xor
call
cs
lahf
movsb
jmp
adc
int3
mov
loop
mov
and
lea
rclb
insl
dec
jmp
cmp
xchg
call
test
or
adc
add
or
xor
pop
jb
mov
mov
add
incb
push
xchg
pop
pop
cmp
or
and
adc
aaa
inc
out
or
xchg
push
out
xchg
inc
shll
or
lods
adc
mov
stos
or
xchg
push
add
andb
stos
aaa
fs
and
bound
or
add
cltd
and
mov
roll
test
call
add
lahf
mov
out
jg
pop
jecxz
cmp
ljmp
lret
cmp
jmp
aaa
inc
test
or
outsb
rcll
push
jmp
xchg
jo
xchg
sub
icebp
pop
or
adc
add
dec
repnz
and
sbb
daa
xchg
dec
icebp
adc
scas
and
call
repz
jle
mov
pop
or
js
sti
int3
sub
aam
fldt
xlat
jae
inc
cltd
js
repz
shr
lods
test
daa
or
lds
and
popa
fsts
lret
lcall
push
scas
test
sahf
adc
lahf
hlt
sub
loop
shlb
add
mov
mul
movsl
aad
or
and
pusha
cmp
fstl
pop
mov
sub
add
into
sbb
test
pop
shlb
mov
xchg
xchg
test
xchg
or
and
jl
mov
jl
in
inc
orl
jmp
xor
pop
dec
and
sti
ret
je
dec
lods
notb
xlat
in
jbe
pop
shlb
mov
adc
movsb
cmovl
jge
mov
insb
lret
sti
xchg
rcr
roll
sub
adc
mov
ja
out
sbbb
mov
sbb
dec
mov
out
clc
leave
or
mov
mov
sub
out
mov
cmp
call
mov
fisttpl
cmc
nop
pop
out
mov
pop
lea
ficoms
mov
insb
sbb
push
push
push
mov
scas
aas
adc
aam
sbb
arpl
repz
mov
pushf
out
xchg
fwait
xchg
outsb
and
fisttps
mov
push
mull
dec
cli
sub
repnz
loopne
cld
dec
add
xchg
adc
outsb
cmpsb
dec
xor
movsb
lock
mov
and
scas
or
dec
add
xchg
xchg
es
loop
out
pop
loop
jbe
jecxz
in
sbb
adc
loop
cltd
mov
out
push
mov
and
push
mov
ds
iret
cmp
stos
xor
rcrl
popf
mov
scas
pop
push
sub
push
es
stos
mov
xchg
pop
insb
xor
movsl
sbb
popf
and
cmp
xchg
mov
dec
xchg
add
sti
stc
inc
push
insb
xchg
or
fcomps
arpl
mov
sbb
sbbl
es
lods
pop
xchg
mov
sub
scas
jle
lahf
inc
ljmp
mov
std
cmpsl
jno
xor
mov
sbb
push
jl
or
mov
rcr
or
ret
jae
adc
mov
and
mov
add
cmp
pop
cltd
in
lcall
push
push
lds
movsl
mov
jb
dec
mov
sbb
ja
fyl2x
lret
mov
xor
mov
push
xlat
out
push
xchg
subb
push
cmc
pop
cmovl
cmpsb
xlat
repz
fcmove
out
cmc
test
sbb
mov
jae
sbb
jle
lods
mov
mov
add
movswl
std
push
sbb
dec
lea
push
enter
pop
lcall
xor
shlb
xor
fadds
arpl
gs
and
movsb
ds
push
and
sbb
pop
dec
es
jne
mov
pop
and
jmp
mov
jno
adc
adc
xor
dec
sub
add
fsubl
aam
inc
scas
pop
or
in
adc
out
push
sahf
out
mov
mov
cmp
add
out
mov
inc
shlb
xor
jbe
jb
jge
int
icebp
jmp
fildl
int3
sub
lret
and
int3
dec
push
js
lcall
fldcw
xor
or
cmp
dec
adc
mov
outsl
stc
fidivl
movsb
pop
inc
or
add
lea
fldt
xchg
fs
testl
fimuls
icebp
push
lret
js
mov
lds
lahf
pushf
leave
xor
aaa
js
dec
adc
sahf
and
test
or
xor
popa
ds
movsb
jp
test
mov
mov
popf
push
xchg
and
sahf
addb
lods
or
mov
sti
cmp
sbb
ret
mov
loop
mov
sub
mov
das
cmpsb
add
push
std
mov
test
push
gs
push
fsubs
sahf
push
inc
out
push
lods
add
loopne
jge
push
es
xchg
bound
mov
ret
adc
fwait
push
notb
sarb
mov
jecxz
ret
push
xchg
sbb
mov
mov
mov
xchg
and
mov
icebp
and
xor
push
arpl
shlb
sub
sti
das
mov
stos
imul
cmp
int
cmpl
mov
cmp
jl
test
sbb
pop
movsb
sbb
insb
in
dec
mov
jnp
mov
xor
xor
pop
pop
jb
hlt
inc
addb
shll
xchg
fwait
aad
mov
mulb
dec
and
inc
xor
stc
movsb
sbb
dec
or
lcall
aaa
loop
lods
mov
pop
addl
lds
adc
sub
push
fs
insl
cmpsl
loopne
jg
pop
gs
outsl
and
dec
push
outsl
adcl
sbb
cmc
xchg
dec
movmskps
out
or
and
cmc
pop
out
lahf
or
test
out
cmp
int
add
jle
sub
movsb
and
pusha
shlb
cmc
aad
shr
or
push
push
shlb
dec
or
push
push
mov
sti
data16
dec
iret
lds
dec
daa
add
mov
mov
mov
push
pop
ds
xchg
jne
jb
mov
mov
mov
xor
imul
mov
jbe
add
inc
pop
ss
cwtl
loopne
mov
dec
data16
ret
repz
ljmp
xchg
mov
pop
adc
jmp
mov
imul
cmpl
mov
jg
movsl
fimull
or
cmp
mov
jecxz
inc
mov
mov
out
fadds
and
push
push
loopne
mov
repz
es
aas
cli
je
push
pop
outsl
mov
in
stos
int3
cmp
cmp
bound
mov
jns
fwait
sub
in
cld
mov
adc
test
sbb
aad
dec
leave
scas
inc
add
xchg
sub
inc
std
mulb
pop
ja
jno
sbb
cmp
jle
cmp
nop
movsb
add
fisubrs
mov
push
cmp
pop
je
xchg
or
out
xchg
pop
scas
push
rol
in
std
insl
pop
pusha
mov
jl
ret
outsl
mov
pop
mov
std
jb
pop
fistps
add
das
sbb
push
mov
xor
cmp
test
jecxz
sub
fmuls
aaa
jne
jnp
ljmp
cwtl
cwtl
test
test
or
add
add
cs
mov
cmp
and
stos
outsb
sub
fs
lret
pushf
jns
and
mov
pop
pop
mov
mov
hlt
repnz
add
dec
push
mov
lret
sub
js
popf
inc
shlb
mov
rcll
mov
xchg
xor
outsl
fsubrl
cmp
sub
out
ds
mov
repnz
fisubrs
out
sbb
jecxz
mov
int3
loop
les
stos
dec
aaa
dec
pop
push
data16
cmp
jl
aam
ret
scas
in
pop
add
test
movsl
inc
sub
lds
test
out
jmp
sbb
pop
loop
pslld
lret
cmp
bound
xor
mov
rolb
or
cwtl
scas
xor
xchg
aam
jb
aas
inc
xor
push
push
or
pop
and
fdivrl
and
mov
les
aad
outsb
in
xor
jecxz
xchg
movsb
pop
mov
test
outsl
insb
inc
shl
int3
adc
or
dec
add
cmc
std
imull
jne
fldenv
adc
fwait
andb
or
inc
fld
sbb
jp
repz
aad
xor
pop
outsl
fisubrs
push
add
popf
aas
mov
in
jno
sar
lea
or
inc
adc
jae
outsb
adc
pop
jne
ss
push
jnp
stc
in
ss
jno
xor
dec
or
insl
in
pop
xor
jno
cmp
adc
in
xchg
xchg
adc
push
push
pop
mov
push
int
mov
jnp
div
push
mov
jnp
and
inc
xchg
jecxz
das
repz
sbb
divb
pop
lcall
jmp
stc
cwtl
push
inc
sub
sti
adcb
mov
repz
mov
push
mov
jge
xor
fwait
stc
jo
mov
mull
push
int
aad
jae
mov
lcall
in
lds
data16
sub
add
dec
xchg
lahf
into
pop
cli
out
sarb
adc
xchg
mov
jge
push
push
cmpsl
mov
add
jbe
into
dec
cs
orl
xchg
push
jno
fisubl
shll
add
in
jns
push
add
mov
sub
jmp
jae
pop
imul
mov
dec
add
mov
pop
jb
or
ljmp
xchg
push
xlat
notb
pop
mov
clc
loop
add
outsl
std
cmp
fimuls
pop
push
bound
cmp
mov
inc
push
out
in
pop
adcb
add
pop
mov
cmp
and
cmpsl
and
cs
xchg
imul
imul
call
fwait
and
adc
insl
mov
jb
arpl
push
sar
fisubl
xorb
out
subb
inc
out
negl
das
sbb
pop
sub
mov
es
mov
jmp
out
push
scas
in
enter
add
pushf
dec
sbb
xchg
mov
std
cmc
aad
and
add
lea
lods
data16
and
jb
shr
cmp
add
jle
mov
push
cmp
cmp
daa
sub
shll
mov
jne
mov
xor
dec
xlat
jno
adc
fcmovbe
xlat
lods
mov
pop
push
js
movsb
mov
int3
jg
insb
push
sbb
sbb
add
faddl
fld
cmp
cmpsl
mov
out
mov
cli
jns
iret
call
mov
bound
mov
popl
adc
call
cli
cli
xchg
lcall
fwait
mov
add
fldt
test
add
clc
fstpt
iret
imul
jb
xor
stc
add
jnp
sub
mov
mov
cmp
or
mov
mov
daa
or
jmp
jb
test
xchg
je
xlat
push
jmp
adc
in
adc
mov
pop
fsts
hlt
mov
mov
push
std
add
mov
push
or
int
lret
xlat
cmp
sub
lds
mov
shl
mov
aad
sarb
ret
nop
mov
mov
ret
mov
shrl
stos
sbb
and
mov
xor
xchg
out
filds
mov
cld
xchg
and
ja
cmp
pop
rclb
lods
or
sub
out
imul
and
cltd
addr16
outsb
arpl
pop
dec
pop
cltd
mov
repz
sbb
inc
add
mov
inc
comiss
insb
cmp
sbb
stc
lret
clc
imul
push
lret
ja
dec
fwait
mov
aad
inc
push
and
pushf
pop
lods
inc
lods
insb
dec
imul
ljmp
out
add
daa
cmp
jns
or
out
pop
cli
xchg
std
pop
or
enter
mov
rcrb
add
dec
fwait
rcll
mov
ficomps
jecxz
adc
cmpsb
and
lcall
jno
xchg
mov
or
rolb
pop
pop
fldcw
sarb
pop
pop
data16
fadds
push
add
pop
dec
scas
adc
xor
xor
jecxz
gs
xchg
lods
sub
ja
fsubr
pop
lock
cmp
into
dec
ficoml
cli
mov
fisubs
cmp
cmpl
stos
fwait
and
lret
ret
repz
add
cmp
push
std
mov
cmp
xor
sahf
sbb
and
jbe
mov
xchg
xchg
push
or
je
xorl
nop
jmp
lcall
adc
ds
mov
test
dec
mov
stos
pop
cmpsb
in
cmpsb
fwait
xchg
push
icebp
cmp
test
lret
sbb
mov
xchg
and
jnp
xlat
adc
sbb
jle
out
push
dec
jp
lods
insl
mov
call
push
stos
jb,pn
iret
ret
dec
mov
adc
adc
and
push
inc
mov
xor
ss
sub
jmp
lods
cmc
jge
subb
mov
es
or
dec
xor
xor
xor
xchg
jl
cwtl
fisttpl
jbe
ret
jne
dec
call
mov
arpl
mov
mov
or
ficoml
jns
sbb
repnz
mov
cmp
or
hlt
inc
dec
push
sti
sbb
pop
pop
jbe
sbb
std
pop
cltd
aas
mov
stc
icebp
int3
jb
xor
xor
inc
xor
out
dec
mov
lahf
ficoms
out
loopne
jns
and
fdiv
mov
lods
fs
loop
xchg
sub
out
shl
xchg
jmp
mov
repz
add
aam
mov
jp
jp
dec
outsb
mov
popf
xor
loope
inc
incl
mov
cmp
stos
pinsrw
call
sbb
mov
inc
iret
ret
dec
repz
push
call
push
or
loope
or
lret
lds
lds
int
sbb
rsm
sbb
cmc
pushf
cmp
out
xor
icebp
out
adc
fbstp
mov
jecxz
out
adc
push
dec
bound
inc
in
test
aam
pop
mov
hlt
sahf
mov
mov
test
sbb
mov
sub
cltd
aas
mov
xor
cltd
scas
ljmp
cld
jle
adc
pop
mov
xchg
xchg
bnd
adc
push
mov
stos
movsl
and
mov
enter
mov
pop
sbb
js
stos
add
jbe
push
mov
mov
movsb
and
jg
test
rcll
jae
sub
outsl
sub
rolb
sbb
xchg
mov
nop
mov
mov
aam
push
fists
data16
pop
das
aaa
sub
pop
mov
mov
mov
aam
scas
sub
dec
and
xchg
jae
or
cmp
out
int
sub
cmc
push
cli
jne
sub
je
add
rcrl
enter
mov
pop
ds
mov
das
and
into
lret
pop
pop
adc
push
fstl
or
or
adc
nop
cmp
jl
push
stos
pop
dec
rorl
mov
popf
mov
push
in
scas
jnp
into
mov
lock
iret
es
push
pusha
shlb
xchg
pop
push
inc
jb
xchg
clc
jb
jmp
lock
out
mov
iret
dec
popa
xchg
pop
xchg
mov
push
adc
push
loope
shlb
hlt
or
and
clc
outsb
jg
nop
loop
sub
jmp
in
je
test
loope
push
scas
sub
push
sbb
ja
popf
lds
and
sti
iret
xchg
xchg
aaa
out
mov
sti
and
xchg
flds
repnz
inc
ja
jae
sbb
fcoml
rcr
shl
push
mov
je
cwtl
movsl
push
js
scas
ja
leave
pop
test
fdivr
jno
addb
jns
jo
lods
fcmovnbe
add
mov
pop
clc
loope
pop
out
xchg
sahf
ljmp
and
jno
dec
sti
xchg
adc
ret
sbb
jnp
sub
shl
cmp
imul
sub
arpl
js
pop
jmp
mov
rcrl
inc
sahf
ljmp
and
sub
inc
aaa
test
test
xorl
gs
iret
push
in
mov
int3
sub
enter
or
lret
sbb
inc
sub
adc
in
jno
imul
pop
enter
adc
sub
outsb
test
sub
sub
adc
xor
notb
mov
arpl
and
test
aad
xlat
mov
adc
or
add
mov
sbb
imul
jns
int
sub
push
es
and
push
inc
int
sbb
test
js
fbld
fstpt
insb
lea
or
fists
das
ret
inc
ljmp
aad
sub
adc
andb
es
sub
lcall
xchg
test
pop
and
add
jmp
imull
push
push
out
int3
mov
call
mov
cmpsb
push
dec
popa
stos
dec
sub
xor
mov
mov
cs
dec
push
int3
movsl
push
arpl
cmp
mov
pop
in
clc
jb
fwait
aam
mov
push
jae
jl
outsl
pop
sbb
dec
int3
sbb
jae
aaa
adc
mov
sbbl
push
pushf
jns
pop
jbe
xchg
xchg
pop
ja
ds
out
lcall
mov
push
data16
out
sahf
ss
stos
nop
jae
lods
sub
push
fnstsw
push
xchg
mov
imul
movsl
call
adc
dec
cmp
mov
lret
push
or
or
push
daa
lret
andl
outsb
dec
std
adcl
lret
jns
dec
loop
or
into
outsb
das
pushl
xchg
fdiv
dec
es
or
xchg
lret
das
ja
jle
push
cltd
adc
mov
fcmovb
test
out
rorl
push
cld
loope
imul
dec
push
lock
in
sbb
loopne
lods
add
inc
xchg
push
into
inc
cmp
xorb
rcr
arpl
repz
loope
sbb
mov
cld
jp
repnz
cli
or
push
xor
xor
les
adc
mov
inc
mov
or
cmp
rep
daa
push
xor
mov
cmp
adc
mov
pop
xor
out
jg
sub
cmp
lea
lock
jecxz
and
sub
clc
movsl
call
and
jecxz
add
sbb
pop
push
push
aaa
mov
aas
xchg
mov
popf
dec
dec
in
add
xor
or
push
fstpl
xchg
mov
bound
push
push
rorb
xchg
sbbl
sub
scas
sbb
pop
incb
bound
jle
lods
notl
inc
sub
stc
lcall
cmc
pop
lcall
mov
movl
push
cmpsl
mov
out
sti
cmp
leave
inc
cmp
inc
scas
and
and
scas
add
mov
cmp
mov
pusha
add
dec
sub
pushf
mov
pop
add
mov
lods
leave
mov
sbb
je
scas
into
loopne
jno
aam
popa
cmp
popf
ficoms
ror
push
lds
or
fisttpll
xchg
outsl
jecxz
loope
lds
sbb
jl
lcall
fsubl
out
lret
adc
mov
ss
sbb
call
rorl
mov
je
sub
pop
mov
dec
orl
cmpb
sub
mov
pop
jge
push
test
lret
or
insl
fsubrl
in
scas
pop
ljmp
xchg
add
pop
aam
mov
leave
and
pop
call
jp
jl
mov
scas
iret
gs
imul
jmp
adc
bound
shrb
inc
or
and
jo
dec
adc
std
dec
es
jg
cmp
ficoms
pop
xchg
jo
add
popf
shlb
cmp
jecxz
jne
fstpt
stc
mov
sub
mov
mov
test
pusha
pop
xor
mov
rorb
dec
in
mov
test
ret
adc
movsb
int
adc
loope
test
jae
out
sti
divb
movsl
sbb
dec
pop
fisubl
sbb
jno
xchg
cmp
pop
cmpsl
das
fsts
sub
pop
dec
les
inc
push
cmpsb
outsb
fists
cld
mov
ja
fisttpl
sub
repz
jns
dec
andl
inc
push
cmpsl
sbb
dec
cmp
jg
cmp
lods
adc
outsl
das
dec
mov
pop
fidivrl
in
movsb
push
jg
pusha
test
pushf
nop
xchg
add
insl
mov
rclb
or
fdivrl
sbb
pop
jle
xor
out
dec
rolb
push
in
push
and
xchg
pop
rcrl
mov
sub
or
popf
fists
fiadds
dec
sbb
es
repz
pop
jae
xchg
lea
xor
push
push
les
pushf
push
push
fmull
inc
add
and
popf
lret
imul
mov
or
cmpsl
push
sbb
addr16
out
mov
out
pop
in
insl
ret
lcall
dec
add
imul
ds
jecxz
int
mov
outsl
jl
in
out
sysret
fistpll
enter
fnstsw
popa
adc
xor
fwait
mov
mov
dec
mov
iret
xchg
addl
xor
cmp
and
leave
or
nop
mov
imul
xor
jnp
out
push
into
adc
xor
push
pusha
inc
iret
inc
dec
pop
cmc
bound
ret
push
in
push
iret
cmp
or
sbb
test
shr
repz
or
dec
outsb
mov
mulb
cmpsl
mov
fcomi
test
ss
mov
sbb
aas
addr16
sub
mov
aam
dec
fldz
shll
ds
std
movsl
mov
mov
data16
cmp
jp
mov
mov
lret
inc
pop
loopne
cltd
cmp
push
gs
add
rclb
jmp
ljmp
push
mov
arpl
push
pop
jbe
lcall
xchg
pop
jns
je
daa
xchg
jae
sub
push
je
sub
cli
mov
jmp
lds
dec
scas
mov
cmp
push
aas
pop
fnstcw
je
scas
push
adc
mov
or
ret
jge
push
dec
inc
adc
mov
inc
pop
scas
fsubl
sbb
push
push
sarb
test
jbe
inc
push
stc
inc
cs
push
rolb
lret
das
xchg
mov
and
stc
and
fadds
xlat
daa
push
xor
popfw
jo
sbb
push
fdivrl
or
or
xchg
mov
ljmp
mov
movsb
insb
mov
ss
jbe
pushf
aam
jb
dec
mov
mov
repnz
inc
mov
mov
cld
jecxz
hlt
stc
mov
mulps
rorb
call
and
adc
jp
push
xor
sbb
and
pop
loop
push
out
and
andl
flds
sahf
add
xorl
out
push
inc
jbe
test
jno
jp
xchg
cli
pop
adcl
sbb
pushf
sti
sub
cmp
xor
dec
xchg
bnd
mov
insl
pop
sub
movsl
jg
jnp
test
decl
fdivrl
outsb
hlt
rcrl
daa
mov
aaa
cmp
mov
shl
pusha
xor
aam
aam
aaa
mov
mov
xchg
push
pop
jns
sti
mov
popa
mov
push
test
fsubp
sub
outsb
mov
inc
jne
mov
aaa
mov
mov
dec
xlat
aaa
stc
or
mov
push
mov
fbld
or
das
shlb
in
mov
cmp
lcall
ficoms
cld
loop
loope
or
in
jno
push
fstpl
jmp
aaa
dec
or
dec
sbb
sti
rolb
shl
mov
inc
ss
and
push
es
repnz
mov
dec
adc
add
leave
pop
jl
and
jmp
mov
lds
outsl
and
inc
incb
dec
movb
sbb
push
or
or
rcr
addl
dec
out
mov
scas
out
lahf
outsb
xchg
dec
pop
lret
jne
cld
mov
inc
bswap
add
pop
fwait
xchg
loope
fmuls
cmc
sti
adc
mov
insl
push
or
fmuls
xchg
outsl
addr16
xchg
and
lea
lods
or
movsl
filds
push
jo
aaa
fsts
inc
mov
int
das
dec
xchg
mov
mov
subl
hlt
popf
ret
xchg
imul
loop
stc
js
sti
jns
or
or
pusha
and
hlt
push
mov
mov
mov
mov
and
sti
jae
fs
shl
mov
addr16
and
insb
js
jl
inc
add
aad
pop
pop
inc
rorb
pop
fs
sub
fsubrl
lret
pop
pop
adc
int3
mov
mov
xchg
xorl
or
fcmovb
lret
jbe
sub
and
int3
fxch
repnz
mov
fidivrs
push
inc
pushf
loopne
inc
lcall
adc
leave
les
sub
add
lods
scas
jl,pt
je
sbb
pushf
xchg
push
push
aas
jge
sahf
or
mov
cmpsb
cmpl
lods
cmc
mov
ret
mov
nop
je
mov
in
not
xor
outsb
loopne
aas
outsb
lret
divb
xor
dec
sub
arpl
mov
cmp
rorb
loope
popa
and
pop
fcompl
insb
adc
cmpsb
pop
adc
mov
cs
jb
sub
inc
dec
fdivs
dec
arpl
mov
mov
inc
mov
fistl
xor
pop
fistps
rcrl
jp
jge
xor
mov
int
inc
shll
pop
pop
outsb
mov
sbb
sub
sub
arpl
xchg
mov
test
adc
sti
mov
adc
sub
push
nop
leave
insl
loope
cmp
inc
cs
xor
syscall
xor
add
pop
gs
fidivrl
jle
je
and
pop
xor
aas
fstp
aas
es
mov
push
add
fldenv
movsb
out
mov
mov
adc
mov
pop
fiaddl
imul
nop
xchg
inc
daa
data16
pop
jge
add
xor
inc
arpl
push
jp
aaa
add
mov
xchg
inc
dec
adc
outsl
stos
lahf
in
jns
xchg
fcomps
inc
je
imulb
call
push
dec
sti
loop
mov
mov
adc
ds
jne
outsl
repz
mov
nop
pop
outsl
mov
cltd
cli
inc
add
or
ficompl
leave
or
push
aam
lahf
outsb
jge
lret
cltd
sarl
jne
insl
jg
push
popl
dec
outsb
bound
pop
imul
xchg
xorl
ret
inc
mov
loope
enter
int3
or
mov
scas
adc
fmuls
lds
jno
shrl
cmp
sub
enter
mov
sbb
pop
loope
es
ja
clc
adc
sbb
pop
pop
mov
sub
enter
bound
cmpsl
mov
mov
jo
pop
inc
xor
sbb
pop
mov
xchg
dec
and
adc
imul
add
pop
mov
outsl
xor
lcall
jecxz
dec
fsubl
imul
and
je
orl
in
sbb
and
jnp
pop
mov
jbe
imul
jle
jp
test
mov
cmp
push
sbb
and
xor
ror
lcall
push
cmpsb
js
mov
cmp
mov
cli
xchg
sbb
dec
sarb
xor
lret
sbb
ja
sbb
and
adc
jae
or
mov
dec
scas
xchg
jp
js
add
lahf
into
rcl
sub
pop
and
enter
loop
flds
pop
inc
shll
pop
jl
push
inc
lods
pusha
push
xor
outsb
push
jl
ret
jle
test
mov
mov
jge
daa
test
xor
lea
andl
out
ret
test
addr16
cmp
jle
fmulp
out
or
xchg
ljmp
mov
ror
outsb
sbb
imul
incb
stc
xchg
mov
clc
ljmp
test
pop
sub
and
dec
sub
jle
dec
in
cwtl
mov
dec
mov
popf
and
xchg
adcb
xchg
xor
add
into
pop
sahf
fcmovu
xor
xchg
sahf
fldt
scas
fcmovnb
lret
addl
pop
fistpll
mov
loop
mov
loop
dec
push
in
jle
rcr
pop
adc
das
sub
aad
mov
repz
sbb
fisubrl
xor
lret
add
cmp
repz
xor
cmc
xor
in
movsb
push
ss
push
add
rorl
hlt
rcrb
pop
ficomps
mov
mov
or
mov
test
mov
sbb
out
cmp
movsl
mov
xchg
pshufw
das
push
sbb
jl
dec
cmp
sbb
sbb
cmpsl
and
sbb
adc
aas
stc
lds
inc
das
std
repnz
dec
push
inc
xchg
cmp
adc
in
das
mov
mov
inc
pop
mov
test
idivl
lret
sub
ja
scas
sub
int
test
pop
inc
insl
cwtl
mov
shrl
mov
mov
xchg
je
cmp
aas
bound
ja
aaa
in
cmp
jmp
rclb
mov
aaa
subl
inc
sbb
addr16
roll
and
mov
icebp
outsl
scas
sarb
jl
mov
daa
mov
or
sub
add
flds
into
xor
aad
mov
lcall
sub
icebp
add
push
dec
das
xchg
pop
sbb
mov
or
out
std
push
fdivp
ret
outsl
js
iret
mull
jb
adc
dec
dec
jmp
enter
xor
jnp
sbb
std
stos
and
pop
aas
jae
jmp
cld
and
jp
push
mov
adc
inc
pop
rolb
lcall
jmp
js
mov
fst
dec
pop
mov
je
or
pop
adc
push
mov
hlt
fisubrs
xor
adc
idivb
div
jnp
xor
out
xchg
push
add
and
cmp
subb
sbb
mov
push
and
mov
in
pop
mov
xor
xor
sarl
jae
addr16
xchg
inc
dec
cmp
in
ljmp
jmp
xor
jb
inc
mov
fcmovnb
pusha
test
lret
and
call
faddl
mov
into
xchg
mov
push
dec
sub
aaa
adc
dec
mov
orb
pop
out
fidivrl
aaa
std
gs
push
push
pop
xchg
call
call
xchg
lods
mov
popa
or
xorb
mov
cltd
ljmp
jle
in
mov
push
and
mov
icebp
into
xlat
adc
sbb
sub
outsb
xor
lret
and
fisubs
ja
dec
dec
popf
or
pop
push
in
cmp
jns
lahf
mov
fldl
mov
xor
push
aas
out
dec
add
add
pop
repnz
test
loop
mov
stos
outsb
or
sub
in
pop
rcll
xor
push
or
add
pop
jne
or
push
and
pop
sub
cmp
repz
in
cli
daa
lods
adc
push
repnz
jno
stos
enter
push
movsl
cli
cmp
test
shrl
rcl
cltd
sbb
loope
dec
jbe
xor
sub
addr16
popa
int3
jns
xor
sbb
insb
stos
adc
push
jl
loop
lea
shll
xchg
sub
xchg
adc
or
sar
stc
stc
popf
addr16
jge
std
in
in
repz
stos
cmp
lods
push
adc
mov
jge
jae
out
call
push
mov
dec
fnstcw
test
jge
mov
jnp
push
inc
push
ret
jmp
mov
jle
adc
jl
mov
pop
mov
pop
mov
clc
lret
fsubl
or
inc
mov
sbb
and
lock
sub
or
js
dec
adc
sbb
sub
prefetch
hlt
imul
shrl
cmp
add
sbb
and
int
pop
add
ljmp
jmp
xor
clc
mov
decl
adcb
jge
and
loopne
repnz
nop
fwait
cmpl
push
jge
inc
dec
inc
and
cmpb
mov
xlat
cmp
iret
sub
fimuls
mov
rorb
movsb
push
lcall
clc
cwtl
adc
scas
icebp
jo
xchg
les
sbb
arpl
fwait
repnz
cmp
inc
ds
xchg
xchg
loopne
rcrl
shlb
mov
pop
mov
gs
cmp
push
mov
jecxz
jl
mov
in
fwait
int3
or
cmp
shlb
lahf
mov
enter
test
ljmp
inc
testl
aaa
push
in
fisttpl
mov
js
inc
sbb
adc
sahf
ss
stos
pop
push
cmp
lret
mull
inc
cwtl
cmp
orl
inc
iret
add
loope
mov
addb
lods
pop
dec
xchg
cmp
and
fisubrs
lret
ss
push
rolb
rorl
mov
test
arpl
enter
adc
adc
ffreep
add
mov
ja
test
push
pop
push
cmp
js
xchg
js
xor
int3
out
pop
inc
sbb
pop
dec
lds
sbb
or
cmp
sub
test
movsl
sahf
loop
imul
sbb
outsb
mov
rorb
inc
inc
mov
test
in
pusha
push
push
xorb
mov
pop
int
sub
sti
push
stos
dec
sbb
adc
das
imul
push
sbbl
jl
ljmp
mov
daa
pop
mov
add
cmpsb
cmp
push
mov
out
aas
sbb
sbb
jb
push
fmuls
clc
adc
push
lods
inc
xlat
out
sub
testb
in
fidivl
insb
repnz
xor
ficomps
xor
pop
pop
inc
ret
neg
mov
sbb
dec
pop
dec
shl
out
cmpsb
testb
fxtract
sarl
or
ficoml
lcall
push
add
jae
das
mov
pushf
rorl
jp
imulb
inc
aam
cmp
ret
add
and
popa
mov
cmp
sub
sub
cmp
test
mov
lock
pop
mov
fdivrl
xchg
loop
jnp
std
cmc
cmpsl
sarl
jns
dec
jbe
cmp
push
cmp
ret
and
into
jnp
sub
enter
mov
fadd
xchg
rcll
sarl
clc
and
out
cmpsl
aas
mov
pusha
ljmp
push
ficoms
mov
mov
das
out
fbld
fbstp
int3
aas
mov
idivl
std
adc
arpl
inc
sub
sti
loopne
ret
mov
test
push
push
lahf
cmp
jnp
xorb
push
mov
mov
lea
jo
out
add
cltd
dec
or
out
sbb
rcrb
lods
cwtl
add
ljmp
xchg
xorb
add
inc
or
je
int3
mov
cmp
and
push
loope
fs
cli
test
loopne
jmp
sub
test
inc
lock
daa
push
cld
popa
dec
aas
mov
sbb
imul
dec
fdivs
popl
js
sub
frstor
pushf
jae
negl
mov
push
xor
add
and
nop
test
add
dec
mov
pop
shlb
jo
pop
sbb
xor
lret
jmp
daa
xor
ds
pop
cmpsb
in
cld
mov
test
xor
mov
ljmp
pop
jmp
pop
int3
dec
std
adc
dec
insb
and
inc
das
paddsb
push
fcmovne
jne
arpl
testl
xchg
loop
stos
mov
pop
mov
lock
dec
in
push
jle
in
xor
dec
pop
cld
cmpsl
cmp
pop
addr16
sti
je
and
sub
es
sbb
clc
arpl
sub
xor
xor
aad
xor
incl
adc
xchg
fildll
outsl
dec
xor
std
lcall
iret
inc
movsb
sbb
lds
popf
sbb
mov
mov
lock
testl
push
adc
je
enter
into
pop
mov
or
fmull
push
jmp
test
adc
pop
adc
int
es
lcall
mov
aam
fidivrl
test
imul
dec
cmp
cli
lret
push
mov
pop
mov
sub
pop
fwait
xorb
mov
sbb
cs
inc
movsl
dec
push
mov
sbb
adc
outsl
bound
cmp
call
lods
loop
int3
shll
mov
jg
pop
icebp
push
adc
mov
jns
cmp
jl
cmp
fucomip
mov
add
data16
stc
adc
ss
daa
mov
scas
loop
stos
arpl
mov
sarb
lret
jecxz
movsb
mov
and
sub
push
sbb
and
out
pop
std
cli
xchg
cmc
sbbl
or
popl
lock
jnp
jecxz
xlat
add
pop
mov
iret
and
mov
sti
dec
mov
pop
pop
pop
push
out
dec
and
pop
cs
sub
arpl
pop
scas
lds
inc
in
mov
inc
stos
dec
xchg
adc
xlat
jb
daa
nop
add
and
lods
in
mov
or
test
dec
mov
outsb
dec
mov
hlt
hlt
push
rorl
mov
or
std
lock
or
or
mov
out
idiv
inc
test
nop
dec
lcall
jmp
cli
fcomp
cltd
popl
call
mov
lret
push
out
adc
xchg
sbb
pop
adcl
lods
and
std
lahf
push
test
add
out
and
adc
ds
mov
or
sbb
add
jmp
mov
nop
repnz
pop
xchg
mov
mov
roll
mov
sahf
inc
inc
mov
adc
in
push
add
fdivl
mov
mov
aas
adc
insb
jl
sbb
push
call
lret
outsl
jbe
out
mov
cmp
inc
int3
int3
dec
and
add
out
dec
xchg
loop
and
cmpsb
stos
xor
nop
aas
mov
mov
jnp
mov
mov
dec
icebp
mov
inc
int
push
push
lods
std
outsl
mov
movsl
inc
and
call
lea
pusha
addr16
cmpsl
xor
mov
push
in
xchg
in
arpl
call
xor
je
push
jp
movsb
in
mov
push
and
sub
pop
hlt
hlt
pop
fwait
mov
jbe
jnp
pop
icebp
and
lahf
inc
dec
jecxz
sbb
mov
or
mov
insb
lret
push
inc
add
xlat
notl
repnz
mov
push
das
jnp
in
dec
mov
sbb
inc
aam
jg
ret
xchg
xor
dec
inc
cli
xchg
push
int
dec
negl
ljmp
ss
mov
mov
push
adc
mov
sahf
xor
lcall
xor
pop
sbb
inc
rorl
call
clc
cmp
mov
rcl
arpl
adcl
mov
out
adc
fsubr
adc
fnstenv
push
out
mov
inc
lret
repz
enter
imul
repz
adc
int3
jbe
add
stos
in
mov
sbb
cwtl
cltd
sub
push
int
pushf
stos
push
fists
movhps
ss
jmp
mov
mov
dec
loope
push
cmpxchg
ds
lods
enter
je
insb
push
cli
fdivrs
push
rcl
arpl
ljmp
fcomps
lahf
fsubrl
aas
fs
xor
sbbl
psraw
dec
movsb
push
add
out
mov
push
lods
xchg
jbe
jmp
jns
jmp
sub
mov
ss
movsl
fbld
loope
int3
and
addr16
lcall
ds
jge
push
inc
adc
sti
js
lods
dec
pop
inc
and
mov
cli
xchg
sbb
jmp
xchg
xchg
jg
test
rolb
ljmp
stos
je
sub
mov
mov
jo
push
mov
mov
jnp
mov
es
scas
inc
jb
inc
mov
inc
xor
mov
push
pop
and
add
push
inc
sahf
sub
mov
xchg
stos
fisubrl
push
add
pop
inc
lret
dec
outsb
popa
or
push
dec
adc
mov
inc
sub
into
cwtl
in
mov
shll
popa
dec
daa
imul
xorl
inc
dec
add
es
dec
test
jp
fcomps
cmp
mov
fldl
adc
pusha
jo
mov
mov
jp
mov
aas
sbb
xor
dec
js
int3
or
gs
adc
ds
sbb
push
cmc
dec
jae
sub
jae
or
lret
cmp
rclb
dec
push
and
adc
mov
mov
lcall
fsubl
inc
jnp
mov
mov
sbb
fiadds
out
adc
and
jle
mov
mov
stos
out
in
subl
pusha
cwtl
fimuls
mov
test
pushf
lahf
pop
stos
mov
jg
out
push
movsl
ret
push
add
dec
mov
sub
nop
or
cmc
mov
mov
dec
fmull
push
push
jle
sbb
xchg
mov
inc
ljmp
jecxz
adc
out
mov
dec
adc
dec
push
jns,pt
mov
mov
enter
jle
out
jno
arpl
or
push
push
or
repnz
cmpsb
or
ficoms
js
lahf
mov
push
loop
xor
xor
sub
pop
inc
dec
test
arpl
inc
movsl
arpl
jg
fldt
mov
xor
lds
mov
ffree
mov
sbb
jns
into
test
insb
arpl
xchg
jbe
out
jmp
loope
in
adc
xlat
and
sbb
inc
sub
push
bound
mov
push
mov
pop
sbb
mov
push
xchg
cmp
cmpb
int
push
pop
fcoms
add
xor
push
stc
sub
pop
loop
inc
and
cmc
nop
dec
adc
icebp
mov
bound
fldz
mov
das
sti
in
pop
add
inc
lcall
and
les
mov
out
scas
jg
pop
inc
add
fldenv
call
mov
std
test
test
lods
mov
inc
mov
jmp
test
mov
push
fsub
decl
xor
or
push
inc
loope
cld
mov
into
xor
mov
xor
add
fcomps
cmp
xchg
push
adc
pusha
stc
xorl
adc
xchg
pop
push
xchg
sbb
sbb
movsb
push
xor
jl
mov
jg
and
adc
pop
pusha
sub
fwait
test
scas
filds
push
push
out
dec
stc
mov
xchg
and
pop
or
cmpsb
inc
sbbl
add
pop
sub
mov
mov
nop
scas
lock
pop
aad
inc
inc
push
mov
js
int3
add
adc
lcall
and
into
mov
js
inc
dec
clc
mov
cltd
or
aaa
inc
dec
js
cmp
cli
push
sbb
addr16
and
mov
ffree
jb
rcrl
rclb
mov
mov
outsl
int3
in
add
add
ret
fistps
in
loopne
outsb
in
lods
push
into
xchg
rcrl
je
xchg
mov
mov
push
clc
xor
into
mov
and
dec
into
lret
aas
lahf
and
jg
fucom
mov
lret
sub
sub
xor
pop
mov
cmp
rcll
adc
les
fnsave
xchg
pusha
xchg
sub
xor
lods
test
rcrl
roll
popa
cmpsb
divl
cmpsl
lods
mov
cmp
ficoms
orb
adc
pop
sub
inc
pop
in
out
out
adc
xchg
push
inc
xchg
mov
inc
push
ljmp
mov
mov
mov
inc
or
cltd
nop
xor
ja
xchg
mov
into
arpl
and
insl
gs
daa
sti
xor
cmp
cmp
loopne
inc
jo
inc
mov
aad
test
outsb
and
bound
std
imul
add
ljmp
inc
clc
icebp
mov
subl
fwait
inc
mov
rorb
cmpsl
les
imul
jno
cmp
cld
push
and
inc
push
incb
mov
fmull
outsb
jg
dec
into
jle
ja
repz
cmp
pop
icebp
xchg
inc
shrl
push
lahf
test
adc
fiadds
xchg
sbb
pop
ljmp
adc
adc
fldt
icebp
dec
sub
or
adc
int3
add
xchg
jb
ss
xorl
cmp
inc
sbb
js
iret
jo
sbb
adc
aad
scas
js
lods
xlat
shr
lret
fdivl
fcoml
sbb
push
bound
inc
sahf
shrl
push
pop
shrb
cmpsl
xchg
fmull
mov
mov
jns
ret
rcll
mov
ret
xchg
xlat
cwtl
inc
and
or
xchg
test
scas
add
inc
data16
fnstsw
int3
loopne
add
cs
mov
popf
mov
mov
push
leave
xor
ret
dec
pop
stc
push
add
jmp
add
scas
in
xlat
enter
clc
out
sbb
mov
neg
jg
push
inc
inc
cmp
cmpsl
aad
jmp
push
sub
pop
test
jno
xchg
pop
dec
aad
and
aas
and
in
test
stos
push
aaa
and
cmpsb
repz
pop
pop
dec
push
filds
cmp
jecxz
or
xor
xor
mov
into
fimull
and
lds
push
jge
and
push
repz
testl
push
sub
lcall
jle
sub
and
loop
fsubs
jle
and
xchg
xchg
adc
dec
aas
jle
mov
and
pop
aaa
mov
jmp
xor
nop
xor
cmp
ljmp
out
cmpsb
stos
xor
or
add
scas
out
mov
push
fildl
leave
push
xor
out
jns
call
or
xchg
stos
cmp
pop
or
fcomps
xchg
pop
rorb
mov
int3
insl
addr16
pushf
repnz
jge
mov
addr16
into
iret
sbbb
dec
js
adc
push
aad
inc
jb
add
inc
lret
repz
ficoms
shl
ja
repnz
inc
dec
push
push
or
pushf
push
adc
shl
inc
prefetcht2
push
fcomip
lret
into
push
pop
or
pop
nopl
xchg
loopne
rol
pop
xchg
icebp
jb
cmp
pop
mov
inc
push
adc
jne
sbb
xor
sbb
xorb
pop
sbb
push
xchg
lret
inc
mov
loopne
in
aaa
test
xchg
out
lea
jo
inc
jo
cld
jl
dec
jge
cmp
outsl
in
pop
aas
mov
gs
lret
ja
mov
cmp
ds
jg
jmp
mov
out
jbe
mov
dec
clc
mull
add
add
sub
in
mov
or
sub
pop
xchg
int
shl
mov
sub
sub
cmova
dec
push
adc
or
mov
sti
incb
std
ret
push
pop
lods
mov
or
enter
call
dec
repz
lret
aam
gs
loopne
popf
jne
das
and
or
push
enter
or
xchg
dec
or
jp
pushf
sub
xchg
clc
inc
scas
bound
inc
sahf
aas
test
shrl
dec
adc
add
sbb
dec
sub
pop
int3
jge
add
pop
xchg
mov
jb
jmp
cmp
int3
nop
stc
cltd
pushf
jb
cmp
pop
shr
add
xchg
cmp
sbb
fistps
outsb
ds
or
popa
push
imul
insb
popf
cmp
push
jle
pop
inc
data16
int3
std
out
xchg
push
les
lret
icebp
lahf
add
pop
nop
mov
arpl
cmpsl
pop
jbe
out
jecxz
push
dec
es
jo
aas
out
mov
nop
ss
test
idiv
cld
popf
ljmp
clc
xchg
pusha
pop
rcrl
ljmp
xlat
movzww
cmpsl
pushf
lret
dec
xor
adc
dec
les
lock
stos
adc
push
xor
mov
xchg
jl
sub
fidivrs
mov
sub
loop
int3
or
outsl
shrl
pause
loop
outsb
pop
stos
imull
or
xor
dec
test
xchg
dec
fsub
xlat
sbb
mov
mov
xchg
ja
adc
in
adc
mov
test
fisubs
int
and
xor
nop
add
gs
jne
pop
push
jno
push
pop
rcrb
adc
out
push
ror
pop
add
movsb
outsb
cmp
jmp
dec
xchg
xchg
pop
cmpsb
pop
sub
sbb
idivb
and
xchg
adc
push
pop
jno
into
cmp
push
xchg
mov
sub
rorl
out
int
into
mov
lahf
rcll
mov
pop
enter
nop
lods
outsl
jmp
sbb
fldl
inc
ss
mov
movsb
mov
dec
mov
in
in
push
xchg
sysret
inc
pop
push
divl
out
in
mov
add
sbb
imul
fistl
sub
mov
or
jne
mov
inc
cmpsb
mov
fidivrs
lock
call
outsl
mov
xor
sbb
les
mov
mov
js
cmp
subb
mov
adc
imul
xor
divl
mov
sub
fdivrl
imull
xor
or
int3
mov
pop
sti
imul
test
cmp
xlat
cli
adc
stos
in
xchg
es
dec
aaa
jl
mov
xchg
mov
popa
out
fbstp
mov
and
and
stos
lock
in
push
lods
data16
nop
jp
loope
dec
test
in
insl
sbbb
aaa
or
mov
adc
les
stos
pop
insl
lcall
not
call
jae
cmp
in
cmc
setne
mov
dec
loop
es
pop
add
mov
jnp
xor
and
sub
inc
pop
mov
and
nop
js
mov
xor
push
jo
xchg
dec
loope
push
add
pop
jle
sysenter
sub
and
clc
sahf
insb
add
and
cmpsb
addr16
insl
mov
stos
cmp
mov
mov
out
sub
inc
cmp
sbb
jl
and
movsb
shll
and
andb
mov
cmpsb
jns
mov
mov
or
xor
mov
shlb
push
arpl
stos
nop
fisttps
sbb
mov
xchg
ss
leave
loopne
inc
push
dec
fcmovb
mov
jge
jl
add
insb
mov
sarb
imul
mov
or
dec
jbe
sahf
pop
out
lcall
cmp
addps
clc
pop
mov
sbb
fdiv
adc
push
test
cltd
and
sbb
pop
rcll
hlt
test
push
jne
fildll
bound
adc
pop
sub
ljmp
test
jge
call
mov
loopne
push
fwait
call
ret
lahf
gs
pop
sub
mov
jb
hlt
lret
cwtl
loope
subb
mov
xchg
ja
ljmp
cli
mov
inc
outsl
je
imul
push
add
enter
fcmovnu
push
ror
fbstp
adc
xor
loope
mov
jns
movsl
cmc
mov
cmp
dec
mov
rcll
leave
mov
jnp
adc
cmp
das
sbb
or
into
cmc
lea
dec
xor
xchg
out
test
ret
and
inc
std
or
sub
add
incl
dec
xor
sub
push
push
jnp
dec
repnz
cmp
jecxz
test
inc
mov
call
sbbl
mov
stos
add
test
and
jo
out
mov
inc
in
or
pop
cwtl
or
mov
xor
sahf
dec
fwait
mov
cwtl
popa
pop
and
lds
and
sbb
mov
nop
insl
out
lods
call
inc
fisubl
pop
and
popf
jnp
and
xchg
or
pop
jo
jo
dec
jg
jne
sbb
movsl
sahf
mov
cmp
out
pop
ljmp
mov
push
sub
jbe
and
add
jmp
aam
in
sbb
lea
outsb
imul
pop
sbb
mov
pop
adc
mov
dec
icebp
aad
sub
sarb
sub
jne
es
mov
lods
jge
dec
leave
data16
add
mov
fsubrl
cmp
std
or
jmp
lahf
pusha
sbb
cmpb
dec
aas
arpl
dec
inc
sub
fwait
stc
pop
lods
sbb
mov
inc
testb
mov
xor
scas
dec
sbb
pop
in
call
xlat
daa
flds
ss
out
jb
popa
lods
mov
je
into
aam
mov
inc
inc
dec
adc
dec
add
js
adc
int
xor
mov
pop
sub
dec
mov
repnz
sub
add
movsl
mov
fs
sub
xchg
cmp
lds
mov
mov
inc
jmp
add
pushf
repnz
arpl
cmp
fwait
mov
scas
xor
negb
out
or
xchg
jns
xor
jl
cmp
mov
mov
fndisi(8087
sti
sarl
out
xor
out
outsl
push
cmp
repz
jae
cmp
mov
into
add
and
out
mov
repz
jns
xchg
xor
int3
repz
mov
mov
leave
test
das
mov
push
sbb
rclb
and
xchg
pop
cmpb
out
pop
pop
test
fidivl
add
pop
xchg
push
nop
sbb
cmpsl
xlat
shlb
loopne
std
adc
movsl
out
cmp
sbb
pusha
divb
xchg
xchg
push
jp
adc
gs
adc
popa
nop
dec
outsl
test
mov
vmovupd
mov
mov
xchg
jae
movsb
sbb
into
adc
mov
adc
xchg
movb
xchg
fsubs
dec
les
fs
leave
popa
and
rcrl
pop
outsb
fnstcw
sarb
jl
sub
inc
pop
add
push
das
fimuls
addr16
xchg
mull
push
mov
pop
pop
ss
loopne
repz
fists
push
repz
inc
and
rorb
xchg
rcll
fwait
std
sub
inc
lds
out
sub
fistl
xchg
mov
aad
mov
cli
jnp
mov
icebp
add
inc
lock
inc
aaa
xchg
fdivl
sti
popa
add
mov
roll
jecxz
dec
addr16
mov
out
insb
push
mov
loope
inc
ja
or
cmpsb
fldenv
adc
jbe
fldenv
xlat
mov
scas
sub
inc
adc
sti
cwtl
lret
test
jmp
enter
shl
arpl
xchg
in
push
and
adc
dec
inc
adc
sub
outsl
jo
xchg
push
mov
add
outsl
out
aam
rcll
inc
dec
cld
lods
stos
neg
cmp
in
stc
cmp
rclb
pop
mov
pop
fdivs
mov
or
inc
mov
addr16
sub
inc
andb
mov
or
mov
popa
jle
inc
pop
xlat
jnp
jge
test
loopne
ffreep
jno
imul
sbb
xor
push
bound
data16
bound
cmp
lcall
mov
xor
mov
jge
filds
lret
inc
or
jnp
int3
loope
inc
repz
push
cmp
pop
jg
push
mov
and
sbb
or
cmc
fisubrs
mov
add
hlt
inc
xor
repz
in
sub
dec
or
ret
pop
push
ficoms
ds
jnp
add
dec
mov
adc
aas
cld
push
in
cld
fistpll
fwait
sub
aam
mov
imul
pop
jge
fists
xor
push
mov
mov
xchg
push
lcall
scas
or
rcl
decl
pusha
mov
negb
xchg
adc
fs
mov
ret
sbb
lea
jge
xorb
pop
sbb
fcmove
mov
lods
cmp
in
es
push
sbbb
aam
sbb
ffreep
jne
jge
loopne
dec
cli
clc
xor
pushf
cmp
jge
out
cld
js
lcall
cmp
dec
out
cmpsb
fidivl
test
xlat
enter
ja
movsb
sub
fwait
mov
and
addl
les
das
stc
mov
mov
fbld
jle
out
jge
mov
popl
push
fisubs
adc
enter
add
cmc
lods
jnp
imul
sti
int3
cmp
or
iret
in
out
mov
fldl
cs
clc
add
sub
movsb
mov
jno
cmc
dec
sbb
jl
inc
pop
adc
mov
mov
fmull
dec
or
fs
movsl
mov
call
sbb
notb
pop
movsb
cmp
xor
ljmp
pop
push
inc
cmp
inc
fstl
cmp
in
sbb
pop
in
cltd
jp
dec
sbb
adcb
pop
call
push
cmpsb
xor
push
or
fidivrl
into
pop
scas
pop
popa
in
test
out
aas
lods
out
lcall
cmp
shlb
in
xchg
xchg
jle
adc
adc
fstps
cmc
inc
sbb
push
stos
jp
mov
or
inc
dec
push
add
loope
lods
mov
in
pop
mov
aas
test
mov
jecxz
out
mov
mov
jb
rclb
imulb
push
lods
dec
icebp
inc
jp
mov
ret
xor
lahf
push
fdivp
add
pop
push
and
ficoms
mov
mov
enter
outsb
add
test
add
xor
sbb
cmpb
add
jnp
dec
add
or
enter
and
ficoms
pop
push
daa
jmp
popf
lds
sbb
add
and
sti
pop
pop
outsb
push
cmp
and
mov
cmpsl
mov
sub
and
sub
hlt
sahf
cmp
int
dec
call
roll
mov
jo
push
repnz
pop
nop
jle
cmp
cmp
orb
repz
js
loopne
xchg
cwtl
data16
scas
movsl
aaa
dec
jno
jmp
mov
push
shl
jae
sbb
popf
repz
pushf
xchg
cmp
stos
stc
and
inc
sbb
sbb
lret
sbb
push
dec
mov
pop
int3
cmp
and
mov
cmc
mov
jle
xchg
aaa
mov
outsl
mov
sub
cwtl
inc
mov
or
xchg
insb
xor
mov
or
bound
insl
shrl
mov
cmp
pop
gs
add
adc
addps
pop
out
and
sbb
cmp
cwtl
mov
movsl
dec
and
mov
mov
push
pop
mov
iret
mov
fucomp
es
in
pop
leave
ds
sub
fisubl
cltd
mov
mov
rcrb
out
int
xlat
or
sbb
lds
icebp
gs
jb
mov
popa
push
jecxz
lahf
xor
sbb
and
stos
stos
pop
jg
fwait
outsb
imulb
aad
and
push
stos
mov
mov
into
and
insl
add
adc
mov
nop
out
lock
mov
mov
repnz
adc
in
loopne
pop
out
stos
dec
cmpsb
sub
cmpl
jg
mov
ja
shrd
fsubl
cmpsl
and
cmp
push
and
hlt
gs
add
jo
ret
cli
xor
clc
fs
push
xchg
out
and
loop
push
outsl
aam
or
pmuludq
dec
lock
inc
xchg
out
outsl
loop
sbb
int3
add
pop
mov
ficoms
loope
cltd
popf
sti
imul
pushf
lods
jnp
jae
xor
idivb
jg
dec
stos
push
clc
leave
dec
dec
mov
sbb
loope
pusha
mov
inc
xchg
sbb
xor
icebp
sahf
xor
and
fbstp
mov
movsb
sbb
mulb
out
mov
addr16
mov
scas
or
mov
in
add
mov
xor
dec
jno
cltd
pushf
jne
push
xchg
int
jmp
jae
stc
loope
push
sub
push
int3
inc
xor
jp
jl
jno
stos
lods
or
pop
or
pop
or
in
mov
lcall
push
jno
addr16
or
nop
ss
bound
sti
scas
xor
sbb
movsb
mov
andb
add
ds
js
jg
icebp
mov
stc
dec
push
add
mov
icebp
jp
into
out
push
add
mov
nop
mov
add
out
dec
or
push
lcall
popa
push
mov
sbb
sub
sbb
xchg
pop
mov
jno
and
sub
xor
shll
jmp
test
cs
cmpsl
in
cli
test
scas
adc
std
and
stos
shll
sub
push
xlat
jmp
inc
inc
or
cmp
int3
sub
cmp
clc
scas
pusha
dec
movsl
outsl
or
mov
push
push
adc
push
iret
push
mov
jge
pop
inc
dec
push
ljmp
int
enter
jb
inc
rcll
imul
xor
mov
aas
xor
add
sti
aam
inc
bound
lods
test
les
cmc
add
int
mov
fisubs
rolb
xchg
imul
rcll
push
mov
pop
cmpsb
in
cltd
push
test
in
fadds
shll
xchg
ret
mov
sub
or
cmpsl
dec
xchg
push
aaa
cmp
mov
or
out
aas
pop
and
data16
mov
push
loope
shrb
mov
pop
xchg
call
mov
cmp
mov
cmp
in
repnz
inc
mov
roll
dec
fstl
sbb
pop
loope
leave
add
pop
mov
jmp
adc
sbb
add
xchg
add
arpl
xchg
inc
cmc
and
mov
stos
lahf
movsb
cmp
ret
lret
aam
popf
cmpsb
stos
jo
jle
xchg
pop
popf
or
cmpsl
bound
mov
jecxz
or
inc
xchg
push
xchg
and
and
sbb
dec
mov
pop
and
mov
ds
cmp
mov
fcmovnu
lds
aad
hlt
shll
or
scas
add
dec
lods
sbb
rolb
mov
dec
lods
fistl
dec
pop
jmp
xchg
insl
dec
adc
mov
xchg
repz
and
jno
jg
inc
mov
push
add
inc
fcmovb
std
mov
faddl
cmp
mov
test
rcl
outsl
in
cltd
sbbl
lock
stc
cmp
xor
cmp
lds
pop
xchg
sub
fdiv
into
xchg
and
add
xchg
lods
and
iret
nop
loopne
or
or
int3
push
notl
sbb
pop
push
sbb
loopne
pop
imul
mov
iret
test
xor
push
cmpsl
cli
sbb
out
add
xchg
mov
insb
or
lods
pop
sbb
push
pop
pop
insb
sbb
outsl
sub
jge
ret
clc
mov
jmp
shrb
ret
lea
push
aaa
jb
incl
in
scas
rol
rcrl
imul
adc
sti
pop
shl
sbb
pusha
adc
in
mov
mov
popa
fadds
mov
test
mov
cwtl
jbe
sub
lock
mov
jecxz
sub
xor
mov
ret
xor
insl
outsb
je
cmp
inc
xor
repz
inc
and
or
pusha
lea
mov
and
pusha
mov
xchg
sub
sahf
adc
mov
and
jle
dec
insl
mov
scas
mov
es
pmaddwd
xor
pushf
pop
gs
out
sub
out
inc
pop
cmp
ss
cli
or
xor
mov
and
nop
std
jge
ljmp
jg
int
xchg
push
push
mov
fisubl
inc
cli
das
jns
dec
lods
enter
pop
ss
mov
mov
cmc
and
bound
call
sbb
jge
add
sub
jbe
add
add
sub
stos
jg
add
aas
subl
inc
dec
aad
inc
test
leave
xchg
enter
dec
out
add
jnp,pt
into
arpl
jne
xor
push
jb
loope
lods
mov
add
mov
xchg
and
xchg
popa
sub
jne
cmp
mov
adc
jge
adc
and
call
mov
sub
xorb
ss
pop
mov
or
aaa
or
and
mov
nop
pop
mov
insb
push
mulb
out
stc
xchg
rcr
call
lret
push
movb
xor
jge
les
scas
loop
outsb
testl
jle
dec
mov
jge
lahf
inc
cs
in
cld
mov
ds
sti
inc
sub
adc
push
xchg
pop
inc
cltd
mov
mov
addl
test
jo
hlt
xchg
out
in
and
dec
jno
dec
sarb
mov
pop
lahf
out
push
xor
sbb
mov
adc
cmp
pushf
and
xlat
loopne
sbb
cmc
mov
mov
pop
inc
mov
pop
cmp
jle
movsl
test
add
sub
add
rol
cli
adc
push
dec
xorb
inc
or
xlat
int3
inc
dec
ficoms
bound
mov
xor
mov
mov
fsts
inc
push
js
rolb
das
shrl
aaa
sbb
xchg
cmp
lock
adc
shlb
sahf
jno
in
and
sbb
add
jb
push
mov
dec
adc
out
and
packssdw
mov
fdivs
pushf
inc
stc
subl
dec
ret
inc
rclb
out
and
or
xor
mov
movb
daa
jnp
push
hlt
mov
fdiv
jo
inc
iret
aaa
int
inc
aas
nop
aam
jl
xchg
sub
inc
adc
pop
bnd
iret
mov
testb
repz
and
iret
je
addr16
sarl
cli
add
aam
xor
movsl
mov
ret
ljmpw
ss
sub
mov
mov
or
dec
std
push
hlt
int
pop
repz
xchg
adc
dec
xchg
push
pop
mov
and
int
xor
mov
push
ficompl
ret
cmpsb
aam
dec
lcall
or
push
inc
jg
pop
jp
xor
mov
mov
insl
movsl
inc
mov
jno
inc
dec
push
mov
leave
dec
pop
xor
xor
push
push
out
jl
add
pop
inc
sub
movsl
xor
jmp
xor
popa
xorb
outsl
pop
icebp
sbb
gs
add
test
out
sti
data16
add
gs
test
mov
rorb
insl
sahf
decl
sub
xor
mov
rcl
ficoml
push
xchg
push
inc
popa
loope
mov
inc
cmp
cmp
push
xchg
imul
push
fmull
inc
jg
ljmp
jno
add
jae
movnti
sbb
inc
lcall
fs
test
mov
and
jne
ret
into
mov
jbe
fmull
pop
xor
xchg
movsl
or
mov
sub
cmc
fists
pop
mov
movsl
pop
mov
adc
xchg
ljmp
lods
sbbb
jl
insb
iret
cmp
adcb
mov
sub
xchg
lock
mov
or
loope,pt
inc
jecxz
ret
in
mov
mov
xchg
push
mov
mov
pop
xor
jnp
mov
xchg
in
subl
sub
xor
mov
mov
fmuls
adc
shrb
test
les
jo
pop
or
xchg
cmpsb
test
lds
xchg
push
loop
and
outsb
jbe
xlat
icebp
mov
into
in
in
test
xchg
lret
out
icebp
das
jp
xorb
mov
sti
cmp
or
jp
insl
xchg
mov
or
push
push
cmove
adc
sub
xchg
mov
dec
adc
sub
sbb
fisubrl
pop
aad
addl
fistpll
push
daa
sub
popf
imul
stc
fnstsw
xchg
mov
xlat
add
in
sar
dec
mov
xor
mov
out
lahf
jecxz
movsb
test
push
push
inc
popf
pushf
cs
add
cmp
mov
dec
pop
in
adc
movsl
jb
mov
imul
pop
push
loop
int
cwtl
hlt
and
pusha
mov
mov
jmp
pop
sub
aam
rorb
cmpsl
adc
ret
mov
repnz
ret
xchg
adc
insl
leave
or
scas
cmpb
xchg
nop
adc
or
jl
add
loope
add
addb
mov
add
minps
sub
sub
mov
inc
mov
inc
dec
scas
jbe
popf
jge
xor
and
mov
in
pushf
or
inc
sti
ja
adc
lret
cmpsb
js
stc
or
daa
lcall
inc
jnp
outsl
ja
mov
imul
sti
call
xor
or
sub
adc
stc
or
and
pop
push
or
mov
imul
stos
into
jecxz
dec
aam
jl
xchg
aam
jnp
inc
xchg
js
fcoms
add
push
mov
or
in
add
jl
arpl
jbe
xchg
push
aaa
test
dec
scas
add
lea
mov
xor
cmc
mov
loope
lea
add
xchg
add
mov
loope
ret
loop
ja
or
sub
sbb
nop
add
inc
inc
in
mov
sub
in
mov
lods
fs
jae
in
xor
sahf
stc
adc
add
dec
inc
push
test
incb
fdivrl
push
or
pop
lock
inc
inc
cmpsl
add
sbb
add
inc
cmpsb
add
iret
mov
pop
add
minps
cmpsb
shr
mov
fidivl
ror
out
idiv
mov
sbbb
or
sub
adc
lret
sbb
cmpl
mov
xor
es
repnz
inc
mov
pop
ds
jbe
or
dec
leave
shlb
xchg
inc
cmp
xor
inc
lock
gs
insb
dec
jae
jae
je
xchg
dec
push
add
mov
and
push
mov
in
or
pop
mov
push
jns
push
movsb
xor
mov
ja
or
mov
push
imul
dec
pop
xchg
xlat
sarl
dec
idivb
std
mov
jge
jecxz
sub
add
cvtdq2ps
xchg
jle
pop
inc
sbb
sub
mov
in
push
cmp
loopne
dec
mov
lcall
in
mov
lahf
jae
dec
jae
ret
xchg
inc
cmpsl
decl
aaa
fistl
pop
addb
cld
aas
shlb
and
xchg
fsubs
mov
jnp
jb
insl
sbb
cs
push
pushf
adc
inc
add
subl
xlat
rcrl
lods
lods
in
mov
mov
dec
mov
lret
lock
mov
cltd
cmp
push
outsl
cmpsb
or
adc
repz
pusha
inc
inc
adc
js
sbb
icebp
xor
imul
ljmp
js
fiadds
arpl
cwtl
push
pop
adc
pop
pop
cmp
pusha
inc
or
xor
cmc
pushf
cmc
push
jb
mov
lods
pop
add
mov
lcall
add
mov
mov
mov
push
sbb
pop
movsb
pop
pop
jo
pop
push
add
jo
movsb
leave
add
test
or
mov
lahf
xchg
cmpsb
jl
push
sub
cmpsl
stos
stc
and
inc
xor
push
in
lods
push
dec
repz
ljmp
or
cmc
int
popf
leave
test
mov
stc
pop
cmp
fisubs
lock
jb
jmp
or
xor
clc
adc
outsl
aam
fldcw
imul
in
leave
sbb
je
xlat
xor
sub
mov
icebp
mov
cmp
pop
sub
add
icebp
sub
mov
mov
pop
arpl
popf
pop
sbb
rolb
into
or
xchg
add
xchg
ret
adc
repnz
jbe
mov
push
stos
inc
pop
inc
rcrl
add
rorb
add
lods
sbb
cltd
and
cmp
pop
xchg
pop
enter
mov
jnp
push
xchg
test
mov
sbb
aad
pop
mov
cmp
inc
dec
je
hlt
aaa
mov
pop
daa
push
test
stc
xor
into
loopne
stc
insb
add
pop
unpckhps
add
xor
subl
in
leave
jnp
pop
inc
loopne
add
add
mov
mov
shlb
test
inc
call
mov
sbb
mov
inc
outsb
xor
into
in
xor
cmp
jo
cmp
sub
inc
sub
bound
stos
mov
into
mov
cmp
iret
cmp
add
xchg
dec
fnsave
jl
in
dec
dec
out
fldenv
push
sahf
mov
sub
or
and
dec
outsb
dec
sub
addl
cmp
adc
cmc
stc
and
cmpl
push
stos
or
jo
mov
push
imul
pushf
push
repz
pop
andb
xor
jp
sub
or
jecxz
add
push
aad
pop
jp
outsl
xor
jge
test
adc
loop
popf
xor
xchg
sbb
jno
ss
stos
int3
add
mov
test
mov
movsl
addr16
clc
inc
dec
aaa
add
dec
pop
inc
adc
jle
ljmp
iret
and
cmp
mov
fsts
push
bound
xchg
jl
fsubrs
sub
repz
lret
test
sbb
sqrtps
jo
sub
pop
jae
lock
mov
mov
jecxz
lret
repnz
lock
cmp
flds
inc
test
arpl
cli
push
jne
mov
scas
mov
lock
add
adc
outsb
jl
or
mov
dec
lds
dec
cmp
cltd
xchg
or
cltd
dec
sub
clc
pop
insb
or
xchg
push
movsl
pop
xchg
cmp
aas
adc
pop
and
xchg
aas
cwtl
rcll
and
pop
ret
hlt
sti
ret
cmc
xchg
fsubrp
je
pop
mov
mov
jge
stc
inc
in
rcl
imul
mov
pop
mov
fs
cltd
lock
mov
sti
push
mov
dec
in
xlat
int
out
les
jle
jbe
pop
xor
inc
cmc
pop
test
outsl
scas
mov
hlt
inc
das
test
lret
hlt
xchg
jg
mov
in
add
loope
jmp
test
lcall
cmp
rcl
push
or
mov
sub
imul
in
add
mov
mov
adc
mov
mov
mov
add
pop
and
lret
xor
lods
cmpsl
xchg
in
jg
stos
mov
lods
cmpb
mov
mov
mov
push
push
sbb
inc
fwait
imul
push
mov
xor
adc
and
or
mov
push
push
into
sbb
loope
fisttpll
das
pusha
idivb
ljmp
out
or
adc
mov
push
dec
aaa
xor
mov
aad
pop
inc
mov
jg
adc
mov
in
fs
or
mov
push
sub
lods
adc
aaa
add
adc
ret
inc
xor
jns
add
push
xchg
ja
test
pusha
jmp
xchg
xor
adc
insl
cwtl
loop
push
nop
pop
xchg
push
jecxz
sarb
inc
mov
test
aad
scas
negl
cmp
adc
pop
sub
xchg
daa
jb
aas
ret
popl
sahf
mov
jmp
ds
jl
add
dec
add
orl
jo
ljmp
jge
out
cmp
cli
xor
daa
popf
cmpsl
adc
cmp
cmp
popf
and
mov
xor
cli
into
push
jo
mov
in
cmpsl
push
push
jge
jno
sub
fcmove
dec
arpl
jno
mov
mov
mov
shlb
inc
scas
out
jno
test
mov
mov
pop
aam
cmp
orl
dec
pop
js
movsb
aad
inc
xchg
mov
mov
add
sahf
insl
inc
jae
or
jae
push
xchg
push
pop
ds
xchg
lods
sub
xor
pop
inc
lock
push
sub
xchg
repnz
aas
cmp
sub
jl
mov
xchg
sub
pop
ljmp
ret
mov
mov
cmp
xchg
scas
adc
add
cmc
fildll
xchg
or
cmpl
aaa
push
das
ror
cli
adc
mov
lret
arpl
insl
sub
push
int
movsl
outsb
push
iret
add
inc
mov
cmp
out
insl
sub
or
data16
call
rclb
xchg
sub
testl
cmp
sub
test
cld
repz
pop
jle
sbb
mov
ret
adc
pop
jg
into
fildl
sbb
addl
sbb
push
xchg
xchg
jl
pushf
test
dec
pop
mov
and
mov
ja
cs
mov
les
pop
add
and
out
insb
je
bound
aad
or
out
iret
pop
out
in
add
imul
js
outsl
mov
stos
jge
loope
adc
fucomi
mov
adc
sbbl
xor
lods
ljmp
and
sbb
pop
and
lret
daa
fldcw
fdiv
rcll
sbbb
sub
std
imul
mov
xchg
fxtract
sub
push
push
adc
cmc
stos
cmc
movsb
pop
scas
adcb
leave
jb
push
cmp
xchg
pop
adc
jae
mov
add
xchg
adc
fldcw
test
sub
and
pop
sub
and
mov
fistl
shll
and
jg
cmpsb
pop
sub
xor
push
sub
outsb
push
adc
sub
jne
or
or
cmp
mov
rorb
and
pop
dec
aaa
pop
leave
dec
pop
test
loopne
jecxz,pt
mov
outsb
inc
call
js
xchg
mov
sbb
fwait
add
inc
arpl
xchg
sbb
jnp
icebp
ret
mov
pop
sub
jp
push
insl
xor
cmp
pop
sti
sbb
xor
jmp
pop
ret
pop
incl
and
decl
lock
push
push
aad
ss
inc
xchg
mov
inc
cmp
jns
sbb
mov
out
sbb
daa
jns
mov
call
fmull
addb
insl
xorb
and
divl
mov
lds
orb
jp
js
sbb
shr
insb
add
outsl
jecxz
mov
outsl
pushf
push
aaa
stos
inc
sub
imul
je
fimull
pop
push
fisubrl
stos
sahf
lahf
sbb
aam
mov
pop
xor
push
movsb
add
add
pushf
int3
imulb
dec
sbb
xchg
jo
pop
dec
sbb
stos
sahf
mov
sbb
jae
mov
xchg
fists
sbb
lods
mov
sbb
in
push
push
jp
lahf
arpl
inc
popl
inc
sub
test
lods
push
adc
cmpsl
js
sbb
dec
cwtl
shl
fistpll
jae
in
ja
dec
js
pop
or
xchg
cmp
in
push
repnz
push
jp
repz
testb
xor
sbb
data16
jl
jnp
jns
mov
out
out
out
lahf
fnsave
cmp
xchg
push
xchg
dec
mov
pop
gs
pop
scas
push
icebp
imul
sub
repnz
dec
add
xlat
sbb
sbb
les
aad
jecxz
scas
xchg
imul
sarb
or
testl
jg
add
lock
imul
pushf
mov
push
repnz
push
int3
call
fsubrl
sub
adc
push
loopne
jmp
mov
icebp
repz
sub
test
add
imul
cli
lret
inc
mov
out
out
or
test
xor
sbb
xor
mov
xchg
leave
cwtl
jg
jno
ljmp
mov
push
inc
jb
sbb
mov
pop
iret
mov
fidivl
mov
mov
dec
gs
jo
cli
fiaddl
pop
inc
jae
mov
xlat
sub
inc
xchg
and
in
movsl
jae
push
lea
pop
fimuls
mov
mov
cmp
ja
sub
jp,pt
jno
les
repnz
test
out
pop
nop
in
add
enter
test
sahf
pop
sbb
mov
icebp
mov
jbe
xchg
push
hlt
imul
pop
dec
cmp
loop
mov
add
je
inc
mov
push
daa
adc
addb
sbbl
mov
and
pop
and
fldenv
xchg
dec
aam
imul
or
push
movsb
js
cltd
add
add
sti
jno
aad
popf
push
sbb
shll
outsb
jae
test
outsl
push
add
jbe
test
push
pushf
xor
jl
and
test
pop
and
push
stos
mov
stc
mov
in
insl
sbb
inc
repnz
inc
test
cmp
bndstx
lret
sub
adc
movsl
mov
jmp
dec
lahf
cmp
daa
popa
aaa
lods
push
pop
dec
xor
andl
mov
or
or
call
xchg
and
incb
aaa
inc
movsl
test
jp
or
inc
xchg
ds
icebp
push
xchg
pop
dec
in
mov
lret
or
xor
push
and
sahf
jbe
movsl
pop
aad
sub
xor
push
sub
lds
fbstp
dec
loopne
cmp
adc
sti
push
push
cli
shr
add
cld
out
pop
in
cltd
adc
push
push
sub
rcrl
add
mov
pop
loope
sbb
subl
imul
ret
es
push
jo
inc
loope
loopne
sbb
add
test
or
scas
and
mov
rcpps
mov
insl
jmp
lret
mov
lea
jl
cs
clc
lret
or
mov
test
hlt
and
cmp
jmp
sbb
test
loopne
test
sar
outsb
out
cwtl
fcomps
faddl
push
mov
fs
mov
xchg
inc
incb
sahf
ljmp
mov
shl
xchg
jg,pt
mov
ret
mov
leave
xchg
mov
jp
jecxz
and
or
mov
std
pop
pop
adc
lret
push
pandn
cmpsb
mov
mov
fimull
push
outsl
mov
ja
xchg
nop
inc
mov
mov
test
and
incl
add
test
movsl
cmpsl
fists
daa
filds
jl
mov
adc
ret
mov
xor
and
pop
hlt
stc
xchg
aas
negb
clc
das
icebp
test
clc
and
mov
outsb
jns
test
mov
xlat
sahf
sub
pop
in
fwait
out
inc
inc
pop
push
in
test
jecxz
test
sbb
sbb
repz
sti
jb
push
movsl
popf
cmp
lods
xchg
and
adc
ljmp
push
test
ljmp
add
lcall
fidivrs
cmp
fistpll
mov
add
mov
je
xchg
inc
scas
mov
andl
pop
out
cmp
mov
xor
aas
cmpb
pop
or
imul
jl
sbb
lods
lret
sbb
scas
dec
stos
test
mov
nop
mov
stc
mov
xor
test
jne
dec
xor
or
aad
cs
jb
inc
cs
mov
inc
leave
jne
cs
jmp
jae
mov
js
sbb
addb
mov
mov
std
mov
xchg
inc
mov
jg
sub
out
sbb
sub
jno
cmp
loop
fsubrs
test
xorl
push
sbb
fisubs
loopne
xor
push
sub
add
xchg
push
jns
dec
jge
stc
push
aad
ret
sub
cmp
in
pop
push
ljmp
in
jle
inc
loopne
scas
mov
jge
push
xor
add
pop
sbb
jg
push
mov
mov
mov
repz
fldt
cmpsb
jb
inc
addr16
sbb
sarl
dec
arpl
cmc
mov
mov
shlb
mov
stc
xorl
rcr
push
xor
cmp
test
getsec
mov
xchg
mov
cmp
enter
dec
pushf
xchg
jmp
pop
test
daa
jo
shrb
sbb
jns
ret
mov
loopne
dec
push
inc
ror
leave
orl
lods
lcall
xchg
popa
arpl
xor
ja
in
ss
dec
mov
add
pop
add
stc
mov
xchg
jecxz
jno
pop
or
loope
or
push
daa
int3
xchg
lret
push
ja
mov
jo
push
lahf
or
push
scas
cli
in
xchg
mov
or
xorl
push
or
adc
jle
mov
push
test
cmc
and
das
sbb
ficomps
imul
cmp
mov
decl
mov
data16
out
jns
popf
jge
or
icebp
inc
mov
ror
rcrl
fcomps
test
mov
or
fimuls
lea
fldt
pop
call
popf
dec
pop
je
jge
rcrb
xchg
mov
ficoml
sbb
mov
xchg
inc
mov
and
inc
out
mov
cmp
cmp
ror
mov
xchg
push
jns
ljmp
lds
jne
movsb
int
mov
mov
xchg
shr
sub
clc
iret
push
mov
add
push
push
pushf
cmp
dec
dec
in
sarb
stos
out
pop
clc
cmp
mov
cld
push
and
hlt
sahf
addr16
or
sub
push
push
or
loopne
iret
ds
pop
pop
push
imul
jo
insl
mov
mov
pusha
sbb
fisubl
push
adc
mov
inc
ror
arpl
jae
mov
pop
fstps
daa
jmp
data16
inc
xor
push
mov
jb,pn
in
repz
push
fbld
clc
xchg
js
out
out
aas
ss
cmp
shll
inc
sub
mov
sarl
fs
loopne
mov
mov
jmp
pop
xor
jmp
cli
adc
outsb
addl
test
push
les
cmp
cli
xchg
xor
xor
xor
inc
clc
add
imul
jno
data16
mov
aas
adc
jne
decl
ret
pusha
popf
and
jmp
cltd
sahf
xor
fbld
jne
sub
mov
jl
jbe
test
aaa
daa
push
enter
jge
xor
lcall
push
in
adc
cmpsb
nop
push
gs
jmp
add
scas
xor
ljmp
xchg
scas
xchg
sti
cmp
lcall
inc
jmp
mov
mov
xor
cmp
stos
mov
insb
cmp
pop
aad
or
and
outsl
es
dec
insb
ja
cmpsl
aaa
mov
jp
iret
aaa
push
inc
out
xor
test
clc
or
cmpsb
insl
lret
fwait
mov
jno
push
jl
adc
call
jl
lret
mov
add
pop
xor
jo
in
add
inc
pop
insb
mov
ret
mov
mov
add
sti
and
std
push
sub
lods
inc
mov
int3
sub
test
fsubs
cmp
outsl
jl
imul
mov
or
mov
ret
add
and
pop
jne
cmp
or
or
test
inc
les
sbb
jnp
dec
cmp
scas
dec
jno
xchg
xchg
lahf
and
fwait
sti
or
push
pushf
repz
arpl
jecxz
xor
fwait
adc
es
shll
sbb
inc
pop
adc
out
insl
lods
mov
pusha
add
pop
xor
aam
les
cli
xlat
jecxz
mov
mov
adc
sbb
lahf
and
test
or
insb
sti
lea
cmp
sub
sbb
movd
imul
es
mov
mov
xchg
std
cmp
nop
jle
das
xor
ret
push
inc
sub
and
nop
dec
push
inc
or
sahf
xchg
jbe
sbb
scas
xor
divl
mov
adc
mov
add
into
clc
fimuls
data16
lahf
pop
mov
mov
outsl
ds
jnp
fsubp
outsb
scas
xchg
adc
add
lcall
pop
ds
sub
daa
cmp
jecxz
adc
xchg
movsb
loop
cltd
inc
cltd
pop
hlt
push
daa
pop
mov
cmp
sti
sbb
shrl
mov
jne
and
push
aam
mov
lahf
mov
xchg
jge
mov
and
pushf
data16
pushf
int
mov
iret
pop
mov
xor
bound
sub
out
add
ret
outsl
loopne
stc
jns
inc
pushf
and
mov
fwait
ljmp
pusha
add
test
adc
sbb
jnp
icebp
xchg
sbb
adc
insl
jns
push
fs
sbbl
and
fsts
add
cld
pop
mov
xor
jmp
push
fstpl
inc
js
jle
add
inc
insl
push
mov
mov
inc
rcrb
cld
add
bound
mull
out
fsubl
push
in
mov
jno
lret
test
in
push
rcl
jne
mov
cmp
fisubrl
jns
in
hlt
fucomp
jnp
mov
inc
clc
dec
push
movsb
or
popf
icebp
jb
clc
in
sbb
adc
in
or
adc
popf
je
in
pop
lods
test
mov
rclb
aas
sbb
dec
cli
in
lock
negl
adc
push
xor
xchg
pop
inc
sub
inc
cmp
mov
sub
aaa
pusha
mov
faddl
xchg
outsb
notrack
cli
test
and
sub
cltd
popa
xchg
fcomp
and
pop
xchg
cmp
and
fcoms
mov
movsl
pop
in
testb
hlt
lcall
sub
pop
rcll
xor
sub
pushf
mull
sbb
iret
mov
add
xrelease
jecxz
add
aam
out
sbb
and
les
dec
inc
dec
aad
jbe
mov
sub
and
outsl
call
ret
or
das
mov
xchg
out
adc
stos
dec
and
jg
cmp
or
lret
aad
inc
xor
ret
andl
outsl
lock
cmp
cmpsl
jmp
cwtl
js
mov
clc
and
ret
aad
daa
inc
rcrl
and
xchg
add
pop
jno
ret
xor
mov
mov
mov
or
adc
data16
test
nop
outsb
aam
popa
shrb
iret
xor
shr
and
mov
and
cmp
lods
xor
popf
push
or
test
test
stc
sbb
int3
data16
push
fmuls
mov
mov
pop
jnp
out
out
mov
add
mov
push
pop
sub
mov
out
pushf
jbe
mov
fadds
cmpsb
sbb
and
jge
outsl
ss
jo
mov
or
and
js
mov
xchg
and
test
mov
jns
sbb
shrb
bound
pop
pop
sbbl
in
and
orl
xchg
mov
imul
rclb
out
dec
push
push
jge
mov
stos
into
inc
loop
push
adc
pop
jmp
shl
neg
dec
int3
test
cmp
dec
add
rcll
lret
repz
add
test
sub
div
cld
mov
inc
mov
pushf
loopne
lahf
ret
call
outsl
repnz
lret
lds
pop
std
mov
dec
pop
mov
mov
lds
cwtl
mov
jae
popa
mov
pusha
add
mov
jg
outsb
aam
imul
push
out
shll
jg
loop
sbb
mov
mov
loop
pop
sub
pop
or
push
aad
sarl
call
push
sarl
dec
sub
and
add
lods
scas
and
stos
and
push
sub
xlat
xor
push
push
orl
ljmp
xchg
mov
xchg
and
jmp
adc
out
add
lcall
inc
dec
rclb
add
imul
das
daa
test
outsl
cmc
cmp
popa
nop
std
jno
sti
imul
sbb
mov
repnz
dec
xchg
adc
stos
jae
mov
inc
cmp
inc
and
xor
xorb
mul
push
cli
xor
or
mov
imul
wrmsr
adc
loopne
sbb
cmp
lods
jno
mull
mov
and
sub
movsl
mov
jbe
mov
mov
je
lret
xchg
or
mov
addr16
xor
notl
xchg
and
or
shrb
xchg
js
mov
in
mov
ds
aam
scas
and
push
or
into
sub
cmpsl
sbb
pushf
inc
cli
fisubrl
fistpl
push
mov
mov
inc
movlps
and
dec
dec
jns
sarb
add
das
mov
mov
lret
scas
iret
dec
out
mov
test
xchg
xchg
enter
add
and
mov
push
jg
add
call
sbb
cmp
sbbb
sub
ja
jle
lods
push
push
inc
mov
dec
andb
test
dec
test
or
adc
mov
lret
mov
jbe
sbb
pushf
pop
jmp
lds
movsl
test
cld
inc
in
add
lret
mov
into
movsl
movsb
iret
js
push
dec
ja
shl
xor
pop
movsb
add
mov
mov
sub
sbb
leave
inc
pop
jmp
les
enter
pop
push
stc
jp
rcrl
pop
clc
dec
mov
jle
and
cmp
cmp
bound
fxch
hlt
loope
and
mov
pop
jmp
push
test
mov
pop
jae
add
jo
je
unpckhps
adc
les
sub
cmpsl
in
je
in
mov
loop
dec
pusha
mov
in
je
sub
fs
jne
mov
mov
mov
mov
rcll
jl
adc
mov
std
ja
mov
cmp
fbld
insb
leave
lret
loop
sbb
aam
ret
fbld
dec
aaa
dec
pop
test
aad
mov
xchg
ss
mov
push
lret
std
sub
es
push
movsb
fs
inc
jg
scas
mov
or
ljmp
loop
sti
fildll
aam
dec
fcomps
xchg
iret
fsubrs
inc
stos
ss
addr16
pop
adc
lcall
push
ret
dec
inc
fisubl
ret
cmpsb
adc
inc
in
in
add
push
popa
ds
pop
loop
fimull
dec
lods
pushl
xor
mov
data16
jns
sbb
xchg
xchg
dec
pop
jecxz
sub
fnstsw
cmpsl
mov
sub
clc
icebp
out
xchg
or
lea
pop
push
add
mov
cmp
inc
lock
adc
pop
push
std
fnstsw
mov
inc
mov
test
data16
shrb
stos
sub
icebp
cmp
dec
and
into
pop
add
and
int3
xor
jnp
scas
jns
cmp
in
jl
imul
xchg
xchg
jb
pop
pop
call
insl
sarb
jns
xchg
push
jle
cmpsb
xorl
mov
inc
adc
xchg
testl
sbb
out
loop
push
dec
daa
mov
mov
jp
sub
movsl
cwtl
dec
incb
fs
mov
cmp
xchg
nop
inc
mov
fs
xor
mov
add
lock
push
push
inc
push
lock
dec
mov
fdivs
jle
sbb
es
repnz
lock
pop
cmp
jmp
cltd
mov
test
loop
jl
pop
pushf
lock
xchg
fwait
add
jo
cmpsb
dec
jbe
out
cmpsl
cltd
mull
faddp
mov
mov
lahf
out
ja
pop
ud1
mov
lods
nop
lock
cmpsb
sub
push
jecxz
outsb
jg
mov
adc
push
sub
mov
pcmpgtb
xor
jno
mov
loope
test
add
dec
pop
or
es
and
dec
mov
test
cmpsb
inc
mov
inc
aad
mov
add
xor
and
xor
xchg
jnp
mov
pop
imul
mov
in
mov
jle
push
mov
cld
push
enter
jo
sbb
icebp
pop
jecxz
jecxz
jl
pop
jb
shrl
inc
mov
out
and
fdivl
imul
fwait
data16
add
js
inc
push
xlat
cmp
sbb
je
dec
sbb
addr16
sbb
mov
xor
push
dec
mov
sbb
or
inc
outsl
movntps
mov
jne
clc
dec
push
addb
inc
dec
add
dec
mov
test
testl
pop
and
ja
mov
jne
mov
sbb
bound
ja
mov
or
sahf
dec
rcrb
push
push
jg
xchg
icebp
js
adcl
aam
aas
and
push
push
jg
lds
lods
mov
js
loop
pop
jne
or
pop
sbb
mov
pop
js
repnz
pop
dec
insl
or
iret
jecxz
ret
addb
imul
sar
lods
mov
mov
mov
test
mov
fs
gs
mov
jne
cmp
dec
in
mov
daa
mov
fs
jnp
loope
lcall
test
cmpsl
mov
push
roll
adc
push
mov
jmp
push
add
mov
mov
jl
or
neg
or
aas
xchg
push
mov
xchg
jb
sbb
push
sub
sbb
jecxz
push
out
sar
and
mov
xor
cmp
in
jo
sbb
bnd
ds
add
ljmp
pop
movsl
aad
mov
xor
push
cmp
inc
pop
pop
bound
inc
fcoms
jecxz
add
in
xlat
jbe
aaa
cwtl
sub
mov
sahf
jne
push
std
cli
outsb
ss
popa
scas
push
jp
pop
pop
inc
mov
inc
cli
insl
pop
adc
insb
or
dec
aaa
mov
add
jge
lahf
fcomp
rorb
sti
int3
sbb
xor
mov
xchg
jecxz
cwtl
xor
test
idivl
cmpsb
loopne
sbb
fidivl
cld
adc
sahf
xor
xor
fs
stos
push
lods
leave
pop
insl
mov
orl
push
jle
out
push
shrb
movsl
add
inc
shr
lods
dec
add
js
mov
and
jno
in
fs
std
pop
out
jnp
pop
pop
xor
imul
ffree
cmp
mov
pop
ljmp
mov
push
pop
aaa
push
mov
mov
dec
mov
mov
sbb
repz
cmp
inc
loopne
cmc
out
add
mov
and
shll
mov
xlat
movsl
shl
popf
cwtl
mov
popf
pusha
fisubl
mov
popa
and
cmpl
xchg
cs
add
dec
and
push
in
ds
jle
test
cld
orb
push
dec
mov
mov
in
and
inc
pop
add
sub
lds
or
mov
jb
jge
gs
inc
testb
push
enter
rcll
mov
dec
stos
popa
xlat
xor
mov
pop
mov
sbb
mov
or
mov
addr16
nop
dec
arpl
popf
add
adc
add
add
mov
scas
mov
xor
cmpsl
lret
pop
or
pop
clc
and
sub
loope
mov
xor
cmp
cltd
iret
or
data16
dec
push
xchg
into
jne,pn
pop
xchg
sbb
lret
call
fwait
clc
into
insl
scas
testb
imul
cmpsb
andb
out
add
pop
testl
loopne
sbb
xor
sbb
xchg
push
out
push
ss
inc
xor
xchg
stos
lods
out
cmp
adc
xor
adcb
cs
push
loope
into
out
mov
pop
lock
aad
fsubs
sbb
int
je
out
repz
dec
sub
xor
aad
jne
mov
fdivrl
movsl
sub
dec
sahf
dec
and
in
ret
inc
jnp
mov
mov
pop
fldcw
lcall
mov
fmull
sbb
shlb
pop
shlb
mov
add
cmp
imul
push
xchg
ljmp
dec
clc
stc
push
jbe
lea
jmp
data16
mov
movsb
push
test
mov
inc
fsubl
sbb
push
loope
cmp
mov
fadd
loopne
out
dec
movsl
jle
ds
dec
jecxz
cmp
insb
cmpsb
jmp
hlt
jns
jecxz
pusha
add
dec
insb
cmp
and
dec
shlb
jns
rcr
xchg
push
sub
jo
or
add
add
popa
sbb
cmp
mov
jae
out
hlt
int
ljmp
test
stc
lds
sub
inc
ja
call
xchg
scas
and
cmpsb
test
test
int
nop
mov
cmc
cmp
stc
mov
push
imulb
repz
movsb
jmp
in
xchg
outsl
push
jns
add
mov
arpl
or
mov
aad
pop
pop
dec
mov
mov
out
sbb
fldenv
sahf
dec
adc
and
inc
ret
ja
cwtl
jmp
add
inc
fldcw
xchg
pop
leave
sub
or
lret
adc
clc
add
lds
push
orb
dec
test
out
imul
adc
addb
shlb
cs
fnstenv
jno
lret
mov
inc
ret
mov
dec
out
loop
push
pop
nop
or
mov
adc
andl
add
mov
add
enter
lcall
and
jns
mov
xchg
sbbb
int
sbb
dec
ds
lods
jp
addr16
add
outsb
hlt
adc
es
lret
mov
out
inc
push
adc
mov
dec
sarb
xor
pop
jle
push
dec
push
cmp
sbb
popa
adc
push
or
mov
lea
mov
mov
lods
repnz
xor
out
inc
and
inc
push
movsb
sbb
popa
jns
jne
pushf
nop
inc
inc
xchg
sub
jo
fsubrl
jecxz
popa
in
testb
dec
cmp
and
loopne
adc
iret
stos
scas
lret
ss
cld
jecxz
mov
or
fnstcw
out
xchg
push
inc
jnp
je
jmp
sti
inc
loope
je
lahf
and
mov
xor
xchg
shl
loope
scas
xchg
pop
sbb
call
je
push
fdivrp
addb
jnp
xchg
aas
jecxz
and
dec
sbbb
xchg
daa
out
sbb
cmp
add
je
push
sbb
leave
shrl
inc
shlb
addb
imul
cwtl
adc
mov
ljmp
les
push
push
leave
cmpsb
add
xchg
cmp
inc
inc
outsl
outsb
cli
xchg
je
ret
pop
inc
daa
popa
gs
gs
gs
dec
mov
loop
sbb
mov
add
xchg
xor
outsl
mov
dec
in
inc
roll
jno
ror
lret
and
mov
dec
mov
into
clc
data16
dec
addb
mov
test
push
mov
sbb
add
cmpsl
fcomps
js
in
sarb
cmp
mov
mov
aam
push
loop
rorl
outsb
push
leave
fidivrs
mov
jecxz
out
or
shlb
or
stos
out
adc
outsl
push
cmp
dec
aad
jge
mov
push
in
adc
cmp
cmp
clc
sbb
stos
hlt
dec
add
out
dec
jp
loopne
jg
icebp
repnz
sahf
loope
lds
push
outsb
out
movsb
loop
jp
add
mov
mov
cmpsl
js
cmpsb
rcrl
test
movsb
jecxz
or
roll
mov
xchg
add
shlb
xchg
mov
push
jo
sbb
cmp
push
dec
xchg
push
mov
sbb
push
dec
je
or
push
aas
es
adc
push
imul
mov
test
sub
xchg
scas
and
test
outsl
push
add
popf
cmpsl
or
push
or
push
mov
lods
outsb
sahf
mov
shlb
add
xor
dec
adc
sarb
fadds
test
sub
xor
cmpsb
add
enter
adcl
fxch
ret
pushl
in
ljmp
lret
mov
push
lret
add
jmp
add
add
ja
mov
xchg
inc
sbb
clc
in
cwtl
mov
leave
add
adc
xor
lock
cwtl
cwtl
outsb
fstl
lds
xor
sbb
mov
sbb
negl
ss
mov
adc
outsb
xchg
test
or
jae
rclb
mov
cmp
xor
xchg
adc
or
mov
lret
add
mov
adc
sbb
push
sub
lods
lds
pop
insb
lea
mov
cltd
xchg
leave
mov
or
aad
repz
inc
mov
imul
dec
in
xorl
adc
and
scas
imul
fisubrl
imul
xchg
icebp
in
out
xchg
roll
outsl
and
sbb
or
outsl
adc
lods
mov
inc
xlat
adc
add
inc
pop
xor
loopne
fcoml
mov
mov
pop
aad
sub
xchg
fcoml
dec
arpl
push
test
pop
xlat
loopne
or
mov
inc
popf
sub
mov
xor
sbb
stos
mov
and
rorl
xchg
lcall
js
xor
mov
leave
jae
mov
jbe
mov
in
and
push
les
sub
nop
rep
test
sbb
inc
imul
lcall
or
roll
cli
cld
xchg
push
mov
push
bound
push
inc
mov
outsb
mov
jmp
mov
ret
mov
popa
into
adc
dec
mov
push
push
stos
ret
dec
cmpsb
and
jno
mov
xchg
iret
test
scas
out
pop
imul
pop
cmp
out
dec
in
jmp
popf
cmc
or
xchg
xor
scas
xor
xor
xchg
mov
pop
sbbb
push
adc
mov
xchg
xchg
or
jmp
inc
cmp
jle
daa
inc
mov
pop
mov
cmp
fsubs
xchg
jne
dec
push
sub
mov
clc
popa
leave
pusha
int
sbb
popf
ret
cmp
stos
out
mov
iret
sub
in
sub
xchg
mov
in
loopne
add
out
imul
movsb
dec
sbb
mov
dec
add
rclb
adc
loopne
mov
js
lods
or
xor
insb
pop
xchg
inc
pop
inc
cmp
xor
sbb
scas
mov
popa
aam
out
int
xchg
cmp
dec
movsb
insl
adc
jo
mulb
pop
mov
cmp
or
cmp
insl
xchg
jb
cld
inc
mov
imul
push
in
js
js
push
jbe
jecxz
xor
or
das
xor
cmpsl
daa
mov
or
xor
add
out
inc
jno
ss
movsl
imul
sbb
add
nop
dec
cmc
stc
popa
std
jecxz
fs
out
xor
in
sub
push
jnp
outsl
inc
adc
rclb
sbb
xchg
fstl
out
adc
add
mov
jne
push
lea
jns
rcrl
jle
sub
arpl
sbb
and
int3
out
xor
jge
lret
movsl
out
xlat
cmpl
lret
and
into
cmp
adc
push
or
out
push
mov
ret
dec
cli
sub
dec
pop
pop
cmp
fmul
loop
dec
pushf
inc
jnp
push
cmp
jb
mov
fisubrs
movl
adc
lcall
pop
sbb
ljmp
pop
movsb
insl
pop
imul
jmp
push
pop
xchg
stos
insl
dec
loop
jmp
fwait
inc
shl
sub
ss
fisubrl
cmp
call
push
cwtl
inc
pop
push
sub
cmp
sbb
jno
aaa
movl
scas
sbb
testb
add
dec
setg
ret
in
leave
outsl
loop
inc
push
dec
sbb
mov
ret
aam
sbb
jg
shrl
inc
sub
xchg
push
bound
and
and
das
push
stc
pop
xor
adc
sub
arpl
and
shr
adc
imul
dec
test
cs
roll
jmp
inc
cmpsb
inc
jnp
ss
lcall
jae
inc
scas
sti
sub
das
add
and
sahf
lret
and
decb
ja
push
jg
scas
test
push
pop
dec
mov
pusha
mov
mov
mov
sahf
push
or
test
xchg
inc
ds
pop
xchg
jp
rolb
xchg
xchg
sub
jo
repz
xchg
inc
dec
imul
jecxz
push
in
movsb
mov
pop
xchg
cmp
push
aas
fwait
lcall
pusha
sahf
mov
mov
in
lods
js
adc
cmp
inc
mov
sbb
jb
pushl
cmp
aam
int3
test
data16
xor
and
pop
mov
pushf
cltd
aaa
jp
in
popf
xchg
sub
dec
adc
lret
mov
xor
mov
push
xchg
outsb
jns
xchg
mov
jge
inc
int3
dec
clc
mov
lea
jge
cmpsl
ss
jno
cwtl
adc
mov
test
sbbb
movsb
add
clc
sbb
jnp
out
adc
mov
test
lahf
lret
inc
lcall
imul
loop
push
xlat
rclb
mov
call
aaa
sbb
dec
leave
nop
repz
sbb
or
pop
sub
xchg
jb
mov
das
and
mov
mov
jecxz
sbb
stc
adc
cmp
add
xchg
or
call
and
out
daa
lods
xor
ss
sub
xchg
out
cmc
adc
outsb
int3
sbb
in
push
imul
fwait
insl
mov
lds
enter
vcvtsi2sdl
jnp
and
push
mov
xchg
sbb
xchg
jbe
mov
clc
add
cltd
out
inc
test
xchg
clc
dec
xchg
fstpl
repz
cmp
xor
in
push
mov
arpl
addr16
aaa
add
in
sub
pop
ljmp
out
mov
sub
cs
movsb
xor
das
pop
pop
insl
inc
jg
das
stc
in
cmpsb
cmp
lock
jp
ds
mov
shll
jns
dec
insb
cmp
aaa
sti
lock
call
call
in
loop
xlat
push
adc
lea
sbb
stc
mov
push
lcallw
shll
and
sarl
mov
sub
ja
js
jle
pop
pop
ss
jns
jbe
mov
inc
loop
fwait
popa
out
and
lods
aad
mov
loop
and
jno
mov
adc
jle
cmp
les
lahf
popf
ror
push
xchg
es
mov
cmp
fwait
addr16
jbe
pop
movsl
cmp
push
cwtl
mov
mov
dec
push
lds
or
adc
aas
xchg
adc
fwait
dec
cmp
cmp
sub
gs
mov
add
lea
sub
cmpsl
cwtl
push
call
mov
dec
mov
sbb
xchg
std
mov
jg
in
lods
xchg
mov
and
jb
out
jbe
mov
lds
pop
and
xor
pop
lods
pop
mov
cmp
mov
jbe
push
or
xor
loope
mov
cmpl
adc
dec
cmpsl
sahf
pop
inc
sub
sbb
and
sub
xor
inc
inc
lret
mov
or
sbb
jb
pusha
add
sbb
loop
dec
lret
adc
push
sub
mov
lahf
mov
test
jmp
lock
stc
int
lret
sub
xchg
jp
test
sbb
mov
scas
out
mov
lret
movaps
nop
sub
xor
jo
push
xchg
shlb
call
adc
hlt
push
push
push
in
icebp
jl
out
jmp
mov
das
fstpl
mov
movsl
sbb
dec
ret
xor
ja
inc
in
add
stos
inc
ret
jns
mov
mov
test
jo
insl
fldt
ljmp
jl
loop
cmp
pop
mov
js
fldenv
pop
fidivl
jae
mov
repnz
nop
es
fisubs
aad
cmp
add
into
jl
push
repnz
xchg
bound
adc
popa
hlt
jne
cwtl
and
mov
clc
inc
pop
and
jno
inc
inc
xor
cltd
mov
cltd
sbb
sbbl
leave
cmp
mul
js
rclb
jne
mov
ja
xchg
push
addl
push
push
pop
ror
xor
mov
pop
sbb
sahf
arpl
jno
or
xor
mov
cmp
fists
std
jbe
lcall
and
mov
imul
cmpl
pushf
adc
addb
out
std
dec
xlat
mov
jno
dec
fdivrs
push
pusha
xchg
notb
and
sub
jae
mov
and
nop
shl
mov
dec
sbb
sbb
dec
jns
iret
dec
xorb
imul
sbb
xchg
es
add
pop
popf
shll
jo
cld
sbb
aas
rcrl
sbb
sub
inc
mov
int
das
adcb
mov
decl
pop
sub
and
sub
mov
test
cmp
mov
sbb
jg
mov
xor
repnz
sbb
push
clc
push
mov
and
shr
mov
jo
ss
les
jg
jne
mov
ljmp
cmpsl
aaa
gs
nop
inc
js
jns
clc
es
lock
pop
shrb
push
stos
test
cmpsl
xor
cwtl
scas
cmpsl
xor
mov
rolb
andb
std
ljmp
sbb
inc
data16
shrb
xchg
jg
mov
call
hlt
sub
sarb
and
mov
out
xchg
mov
aam
mov
mov
jo
jns
push
movsb
jae
add
cld
out
mov
fsubr
loop
push
jmp
cmp
into
jp
push
mov
ja
push
pusha
lret
push
in
mov
or
das
sti
mov
insb
arpl
lock
jae
dec
push
lcall
out
jae
jbe
mov
cmp
lods
es
ja
add
dec
mov
ss
cltd
les
sahf
inc
add
jae
sbb
pop
nop
sub
ret
cmovo
dec
js
movb
add
bound
mov
test
push
adc
and
push
test
and
mov
test
sub
sub
test
popa
into
daa
sbb
ja
jae
jle
cmc
push
inc
xor
dec
in
push
add
mov
pop
or
out
cmpb
andb
adc
mov
enter
clc
xchg
imull
pop
ret
sbb
rcll
cwtl
jl
es
pop
dec
adc
and
xchg
sete
mov
mov
jbe
ret
aad
and
movsl
mov
pop
test
lods
push
cmc
add
jno
mov
xchg
push
push
inc
cmovge
fdivrl
push
les
mov
inc
insb
mov
out
pop
cmp
push
jns
dec
xlat
cmp
fldl
hlt
out
movsb
ljmp
mov
scas
jmp
inc
mov
insb
mov
dec
cs
and
cmp
daa
dec
mov
leave
push
jns
push
inc
int3
jns
jae
rcrl
fsub
fs
lcall
push
mov
test
mov
or
clc
xor
mov
enter
mov
or
stos
fstp
in
mov
call
pushf
jno
out
pop
mov
pop
lret
arpl
stos
mov
fcomi
je
add
xchg
clc
outsl
loope
out
and
ss
jbe
aas
repz
pusha
sti
cmpsb
cmp
aam
push
shl
aad
cmp
enter
mov
leave
sbb
in
hlt
incb
mov
inc
jecxz
sarb
mov
lods
xchg
jnp
sti
ss
xor
push
mov
add
shrl
aas
cli
adc
rcll
lret
push
xlat
test
popf
subl
mov
int
fisttpl
mov
addr16
stos
jmp
leave
add
and
sahf
cltd
push
mov
jecxz
xor
mov
pop
fmuls
push
jecxz
and
mov
push
lcall
and
inc
js
nop
andb
mov
sbb
mov
pop
jne
ljmp
loope
icebp
push
and
cmpsb
mov
icebp
xchg
jae
adc
pextrw
js
xchg
xchg
scas
out
inc
inc
scas
xchg
xchg
xchg
dec
icebp
cmp
das
call
shr
icebp
push
lock
popa
dec
lea
hlt
add
fnstsw
pop
in
repz
mov
mov
xchg
cs
mov
loop
and
jmp
xchg
mov
mov
mov
add
sti
sbb
clc
popa
dec
mov
fdivp
fcomi
std
pusha
lahf
icebp
scas
lock
jne
mov
addr16
or
jno
xor
xchg
cld
ret
add
enter
xchg
push
gs
inc
mov
pop
push
add
aaa
xor
add
jecxz
jge
xor
xorb
mov
push
or
rol
test
jl
jnp
xchg
scas
push
incl
xor
out
add
and
scas
lods
push
js
sub
pop
decl
and
add
xchg
lret
rclb
lods
lcall
sbb
imul
std
test
mov
ret
sbb
scas
push
or
pop
cmc
out
aad
scas
sub
outsb
jne
rclb
xorb
lods
inc
pusha
mov
jl
mov
enter
les
movsb
fsubrs
mov
sahf
xlat
cmp
xchg
dec
add
inc
icebp
les
xor
adc
loopne
push
rorb
in
add
adc
icebp
jbe
mov
and
lods
inc
sbb
gs
jno
out
bound
or
and
sarb
cmpsl
sarl
testb
cmpsb
fldl
je
fstp
scas
pop
pop
mov
xorl
push
outsl
es
pop
ret
or
shll
and
mov
sar
neg
lock
mov
and
mov
dec
mov
in
pusha
cli
and
sub
xor
pop
jbe
xchg
and
sub
fnstcw
inc
rcrl
sbb
rcr
mov
and
ja
inc
pusha
lea
mov
fwait
hlt
xchg
jmp
in
jns
add
loope
loope
sbb
in
dec
or
jge
add
lea
xorl
push
xorb
mov
cmp
pusha
cltd
jle
sbb
and
inc
sarb
dec
lods
enter
jmp
dec
jg
dec
lcall
sub
insl
arpl
in
pop
lret
mov
add
pop
or
popf
call
sub
dec
push
dec
mov
fdivrp
stc
enter
adc
xchg
fnstenv
std
out
iret
sbb
negb
mov
popf
ljmp
jns
aam
pop
jno
mov
pushl
out
xchg
lds
test
and
push
fs
aad
mov
xchg
aam
pop
and
jo
pushl
popa
mov
pop
mov
pop
scas
and
jge
sahf
daa
xchg
call
sti
jb
lahf
jg
sub
testl
ficomps
xchg
pop
sbbl
gs
loop
pushf
sahf
or
xchg
mov
insl
in
out
and
push
test
sub
push
les
adc
mov
mov
jb
shrl
inc
fimuls
into
sbb
dec
xchg
sub
clc
xchg
stos
push
sti
xchg
and
arpl
inc
adc
inc
test
imul
cmp
scas
xchg
add
push
and
xor
scas
and
xor
push
xor
test
mov
or
mov
pop
scas
les
jle
push
mov
push
les
int3
dec
xchg
xlat
jmp
and
xor
xchg
aad
and
push
push
jmp
xor
sbb
bound
cs
sub
dec
repnz
into
cmp
sarb
mov
mov
scas
in
inc
and
pushf
cltd
cwtl
pop
cmp
aas
ret
divl
dec
movsb
push
es
lcall
add
push
sbb
mov
in
movl
gs
pop
cmc
adc
lret
in
mov
ljmp
or
xchg
adc
test
iret
pushf
ss
or
xor
fidivrl
test
xchg
dec
push
mov
xchg
in
sub
cli
in
out
push
insl
test
jg
mov
xchg
rcll
mov
mov
call
das
aas
icebp
xor
cmp
cmp
cmp
push
push
test
xor
test
jo
fildl
stos
lahf
loop
adc
gs
rcl
add
cmp
mov
pop
das
inc
pop
xor
add
cmp
xchg
test
mov
mov
lcall
jmp
xchg
cmp
mov
popa
adc
das
xor
rcl
sbb
jge
out
mov
adc
lock
mov
shll
xor
jbe
add
push
ljmp
orl
add
popa
cmp
aam
or
ret
outsb
mov
push
shlb
dec
sub
sbb
ucomiss
cmp
dec
mov
aad
fstp
popf
in
repz
xchg
cmp
cmpsl
sbb
cld
sbb
inc
mov
and
jl
sbb
adc
inc
aad
sti
movsl
movl
cmpsb
insb
mov
add
lret
pop
sbb
adc
aam
push
mov
dec
cmp
push
jecxz
repnz
stos
push
xchg
dec
ljmp
adc
mov
fcoml
stos
pop
fdivrl
lds
test
jle
mov
insb
mov
cltd
imul
mov
shr
sub
andl
test
cmpsb
adc
in
test
add
pushf
mov
and
decl
outsl
mov
call
dec
mov
rcrb
mov
fidivrs
movsb
lods
jge
mov
push
mov
pop
adc
mov
aas
or
les
cmpsb
lods
add
test
sti
lcall
in
ja
or
xor
pop
shrb
imulb
pop
mov
aas
sbb
int
lcall
xor
ds
loop
movsb
repnz
daa
xchg
adc
mov
lcall
les
push
or
arpl
xchg
cmc
pusha
mov
mov
push
push
xchg
ret
int3
xchg
ja
mov
fsts
fwait
sbb
and
add
or
mov
rcll
ja
and
mov
test
dec
dec
xchg
bnd
movsb
or
or
jg
in
mov
aad
es
shrl
cld
jmp
lods
push
sbb
inc
call
mov
lea
pop
add
jl
cmp
add
pop
lds
pop
out
js
call
fcoms
or
mov
das
out
scas
loopne
xlat
jmp
mov
test
dec
bound
outsb
int
sub
mov
cs
add
push
jo
sub
leave
enter
cmp
cld
mov
pushf
pop
cmp
bound
sbb
dec
fwait
sub
and
pop
xchg
sar
dec
psrlw
mov
mov
pop
fdivs
adc
aas
dec
mov
push
int3
stos
cmp
aad
fildl
adc
andl
pop
test
mov
shr
xor
addr16
xlat
pop
mov
mov
jecxz
stos
stc
outsb
outsb
mov
jo
in
adc
adc
pop
xor
cltd
repz
jg
jg
loope
pop
das
mov
sbb
cltd
enter
add
call
dec
fdivp
dec
push
test
mov
cs
xchg
pop
in
stc
je
popf
mov
cmp
pop
push
jno
xor
pop
and
dec
int
ficoms
icebp
push
aam
dec
dec
hlt
fidivrl
std
mov
adc
mov
test
out
mov
cld
sub
es
xchg
lret
mov
xchg
mov
jl
add
cmpsl
or
aas
in
xchg
andb
xchg
aam
lods
int3
fcomps
shll
mov
sbb
cs
xor
pop
scas
push
sbb
lcall
pop
inc
pop
mov
movsl
mov
cmp
push
xchg
enter
sub
push
sub
das
sbb
and
jl
outsl
jno
mov
cmp
push
push
roll
stos
inc
xchg
imul
mov
or
fsubrs
ret
enter
lcall
arpl
adc
mov
adc
loope
inc
mov
pop
icebp
mov
cmp
inc
iret
cmp
or
cmpsl
push
ror
movsl
push
mov
inc
cltd
cld
aaa
out
pop
pop
arpl
pop
outsb
lds
push
clc
arpl
sahf
add
cli
sbb
and
or
cmp
push
mov
sub
mov
into
dec
or
sub
int
lea
ret
mov
push
std
xchg
dec
push
jno
inc
inc
test
dec
push
ds
mov
mov
fmulp
roll
in
sahf
insl
icebp
cmp
xorl
push
add
cld
testl
mov
testb
lods
lock
out
imul
aam
fsubs
or
mov
dec
data16
jmp
cmp
push
mov
call
out
cmp
mov
xchg
or
mov
adc
dec
jp
popa
mov
hlt
aas
or
and
mov
jnp
addb
adc
inc
test
pop
enter
stc
les
xchg
xor
xor
pop
mov
shll
mov
repnz
hlt
pop
imul
pop
test
adc
mov
and
or
fidivs
nop
inc
pop
xchg
sub
pop
xchg
ret
outsl
not
cmp
les
inc
push
push
mov
add
xchg
xchg
cmp
mov
leave
call
push
mov
in
cli
mov
mov
push
fwait
jb
mov
mov
nop
in
cmpsb
andb
mov
mov
mov
mov
xor
sub
dec
mov
add
mov
xor
xchg
jmp
sub
pusha
cli
std
push
push
add
dec
cmc
or
lds
sbb
push
adc
cs
push
pop
xor
and
cmp
gs
adc
push
pop
iret
in
popa
lret
lcall
ret
xor
gs
mov
sbb
jb
out
sub
adc
ds
mov
cmc
out
fnstenv
nop
enter
popa
add
movsb
insl
xchg
pop
inc
ds
xchg
scas
popa
sub
unpcklps
push
lahf
cld
and
mov
iret
lcall
mov
mov
mov
push
dec
jp
jo
scas
inc
shr
cltd
je
push
jl
cs
and
pusha
push
pop
in
jg
jae
mov
nop
or
hlt
movsb
popa
fucomip
mov
outsl
inc
jmp
lods
xchg
movsb
or
mov
sub
lods
jb
or
mov
stc
rcrb
cs
xchg
popf
add
sub
gs
ja
xchg
out
movl
outsl
pop
dec
sarb
mov
sahf
repnz
mov
cmpsl
jne
out
out
fcmovnu
jl
aas
or
push
mov
xor
into
xor
xlat
jecxz
test
jmp
mov
aaa
mov
inc
xadd
push
lods
pop
popa
add
adc
adc
iret
leave
popfw
xchg
popf
xor
mov
scas
xchg
sahf
sub
mov
ret
aam
cltd
pop
cmp
cmpsb
test
adc
dec
int
push
inc
xchg
cmc
jno
das
sti
sub
inc
pop
outsb
add
jo
into
pop
cmp
or
sbb
idivb
xor
mov
sbb
addb
adc
gs
out
arpl
dec
mov
push
fildl
shrb
dec
add
inc
sub
clc
call
shl
es
push
xchg
sbb
inc
icebp
addr16
mov
repnz
int3
out
repnz
inc
inc
mov
ja,pt
outsb
add
rcrl
test
push
xchg
out
rorl
test
fwait
fs
dec
int
adc
sbb
or
mov
les
cld
std
xchg
xor
xor
mov
ret
adc
sbb
mov
mov
sbb
rcll
mov
jb
inc
data16
fimuls
test
ss
lret
xchg
js
imul
loop
loope
xchg
ds
sub
dec
outsl
add
je
aaa
popa
sub
loop
stos
cli
adc
aam
adc
jge
inc
fmull
mov
adcl
push
aaa
pop
pop
mov
xor
in
mov
fwait
jge
adc
or
push
pop
mov
bound
cmp
rcll
out
jle
or
add
fcmovb
or
inc
aam
dec
into
dec
push
test
xlat
jnp
or
shll
mov
xchg
out
addr16
or
sub
jle
gs
hlt
sbb
mov
mov
cwtl
xchg
sub
jl
mov
iret
cmp
push
imul
test
mov
jecxz
and
pop
test
fisttpll
in
mov
push
pop
and
jo
rolb
popf
jecxz
aaa
cli
loopne
or
add
push
jmp
shrl
outsl
subps
or
push
insb
mov
pop
xchg
jmp
xor
hlt
sub
sbb
outsb
mov
cmc
push
mov
adc
push
pop
test
sub
icebp
push
inc
pop
mov
xchg
iret
xchg
fcomip
and
cmp
xlat
mov
cmpsb
pop
movsl
mov
test
lgs
jno
mov
add
mov
push
push
or
push
icebp
aad
lock
sti
lret
rclb
cli
insb
sbb
and
ficomps
sub
mov
mov
movsl
ljmp
mov
imul
mov
inc
out
out
ss
andb
das
cltd
cmp
ret
imul
and
jns
mov
push
xor
dec
dec
add
xchg
pop
leave
out
scas
cmp
lret
out
mov
loope
lods
adc
fcoms
mov
jb
lcall
xchg
push
cmp
pop
je
jmp
and
push
mov
inc
fistl
and
add
addr16
sub
xchg
and
mov
daa
ret
xchg
pushf
loope
mov
pop
add
outsb
push
xchg
es
sub
add
les
insl
pop
into
insb
xor
jg
lea
jg
xlat
cmp
pop
push
insl
mov
mov
dec
push
sub
jle
cltd
cmc
fisubl
mov
nop
lret
jae
jge,pn
inc
mov
pop
faddl
insl
mov
orb
xchg
cmpsb
xchg
xor
xchg
dec
jne
sub
repnz
and
sbb
stos
push
adc
dec
add
jno
jp
fistps
push
pop
mov
loop
push
sub
sbb
sub
mov
mov
sahf
push
aaa
std
jb
sbb
iret
call
outsb
mov
push
jmp
es
push
enter
xorb
inc
add
jl
je
int3
fldl
popa
test
xor
and
sub
mov
pop
aam
sahf
int3
out
aaa
cmp
jp
dec
insl
cmp
mov
add
int3
jl
std
in
outsb
add
mov
outsl
push
pop
dec
lock
add
out
aad
call
dec
inc
lcall
sahf
xchg
inc
pop
and
into
lcall
sbb
aam
push
push
lahf
inc
rcrb
sbb
lds
in
mov
cmp
mov
or
les
fistpll
sbb
jbe
repz
and
push
cli
add
fimuls
and
fcomps
push
ds
push
sub
xchg
ds
lcall
roll
cmp
add
mov
dec
aas
fistpl
call
jb
scas
movsl
sub
inc
lret
push
incl
lcall
leave
aam
addr16
inc
xor
shrl
jnp
mov
sar
inc
adc
cltd
jo
in
and
insl
pusha
add
or
lcall
imul
and
mov
cmpsb
imul
pop
and
mov
push
icebp
popa
mov
inc
xchg
adc
adc
xchg
xchg
pop
clc
dec
hlt
lret
dec
jo
movsl
add
mov
jne
ss
fadds
sub
dec
add
push
jae
or
fldenv
sub
adc
negl
fisubrl
pop
pop
cmc
imul
dec
adc
ret
push
nop
or
lock
aas
outsl
sbb
and
test
xchg
mov
dec
outsl
fnstsw
fwait
iret
lahf
dec
pop
test
dec
mov
jnp
xchg
xchg
das
mov
lret
ljmp
xor
mov
in
mov
push
idivb
adc
mov
sarb
adc
pop
leave
bound
push
add
inc
cmp
inc
popa
cwtl
subb
sub
js
cltd
xchg
inc
loopne
mov
cmp
and
cmp
inc
rol
xchg
inc
pop
aaa
pop
out
mov
popf
faddp
ret
cwtl
fnstsw
xor
dec
mov
mov
adc
sub
xchg
inc
mov
xchg
inc
add
or
inc
scas
in
mov
cltd
arpl
insb
add
andl
mov
xchg
mov
fdivrp
lret
push
xchg
xchg
jo
push
bnd
sahf
popf
push
mov
ret
mov
insb
pop
xchg
push
sub
es
shll
jecxz
pop
cmp
jecxz
rcrl
inc
mov
imul
sub
add
pop
push
adcb
pop
int
mov
rorb
popa
ljmp
les
mov
sub
lret
call
sbb
ss
gs
mov
imul
xor
push
pop
and
pusha
ja
and
push
fistps
add
mov
hlt
xchg
lds
xor
in
xchg
fs
dec
fwait
sbb
adc
aaa
lods
test
adc
cwtl
loope
mov
pop
cmp
inc
jbe
bound
mov
dec
push
fdivs
xor
enter
cmp
mul
shrb
mov
les
jmp
xor
mov
sub
adc
imul
cltd
dec
sbb
rorb
and
lcall
imul
cmp
push
shll
sbb
cli
js
mov
popf
lds
inc
lret
and
pop
jmp
xor
pop
sahf
loop
jecxz
sahf
outsb
icebp
and
sarl
add
pop
inc
mov
aaa
scas
pop
pop
mov
fisubrs
mov
xchg
jno
push
fildll
cmp
inc
out
push
sub
outsl
mov
cmp
jl
cmpsb
out
sbb
idiv
mov
mov
filds
xchg
push
stos
mov
inc
in
fs
pop
mov
fcoms
or
jns
sbb
rcl
sbb
adc
ficoml
lret
test
jg
mov
jmp
sbb
jecxz
adc
xchg
das
sub
mov
inc
fs
shrl
adc
inc
sub
cmp
mov
pop
rolb
push
insl
mov
into
and
xchg
iret
mov
popa
or
jo
fcomp
or
mov
xor
adc
gs
cli
mov
mov
or
inc
stc
xlat
dec
loopne
jns
pusha
push
pop
mov
mov
push
repz
cmp
mov
aas
int
mov
add
mov
push
test
out
stos
sub
lods
movsb
insb
push
inc
mov
cmp
es
cmp
inc
sbb
popa
sbb
inc
add
shrd
roll
in
pop
jecxz
add
and
lods
mov
push
xchg
jb
scas
repnz
ret
xchg
jmp
movsl
call
push
in
lret
inc
sbb
cmp
inc
ja
cmpsl
jne
push
loopne
dec
jge
sbb
inc
adc
lods
fwait
ret
xor
dec
or
jns
movsl
or
enter
ljmp
out
xchg
ss
bnd
pop
xor
jo
add
jmp
aam
mov
jl
mov
ja
cmovns
insb
repnz
add
imul
aad
mov
jle
inc
add
push
inc
fsts
lret
jo
les
test
inc
adc
rclb
jp
mov
insl
and
orl
lock
cmp
loopne
dec
jns
hlt
add
jp
pop
rep
scas
xor
leave
jmp
in
push
mov
xchg
mov
arpl
cmp
call
add
add
jnp
jp
cmp
lret
jbe
dec
rclb
jp
xor
fcom
pop
fwait
or
xchg
call
out
test
in
negl
lea
mov
jmp
inc
dec
add
outsl
mov
mov
mov
js
push
xorb
add
outsb
mov
cmovge
sbb
loope
jmp
int3
dec
pop
cli
sub
jns
push
xor
stos
and
pop
push
cli
adc
xor
xchg
subb
cmc
pop
adc
sahf
ret
pop
dec
inc
jnp
sbb
push
jns
jl
xor
lds
xchg
out
xor
and
aaa
lds
data16
test
pop
mov
dec
jno
ljmp
mov
hlt
dec
scas
inc
lahf
xchg
repz
loope
and
xchg
insb
fiadds
push
cli
aaa
push
ljmp
and
xor
rcrb
or
sub
cli
fdivl
dec
adc
adc
pop
test
and
push
mov
pop
xchg
sbb
cmp
rorb
adc
fwait
aam
push
push
aam
mov
ss
push
push
stos
xchg
in
jp
push
pop
loop
push
or
dec
and
cmp
ja
mov
enter
dec
js
sbbb
jg
shll
add
jg
and
xchg
cmc
push
lcall
sbb
inc
pop
inc
add
mov
lods
inc
int3
xchg
add
push
lods
sahf
sub
xlat
add
pop
fistl
dec
loop
enter
mov
sub
mov
enter
jmp
inc
std
testl
pop
xor
dec
and
and
sarl
loope
sbb
ret
push
pop
data16
xor
and
jle
dec
out
mov
xor
push
xchg
movsl
popa
fs
mov
dec
jl
nop
icebp
push
cmp
jo
pop
add
mov
ret
and
arpl
mov
mov
sti
hlt
cltd
jle
xchg
in
sti
leave
mov
push
lock
dec
stos
mov
fldl2t
aaa
cmc
cmp
cs
insb
push
test
or
mov
sbb
push
push
push
jmp
adc
cmp
push
je
mov
les
mov
outsl
sub
jmp
fisubs
out
inc
adc
cmpl
iret
mov
push
fistpl
ss
or
cwtl
xor
mov
xor
pop
push
fwait
mov
jl
mov
adc
push
popa
pop
xchg
insl
loop
and
ficoml
xor
ljmp
idiv
outsb
sbb
add
sub
out
or
lock
mov
and
sub
sbb
scas
xchg
in
loopne
dec
lock
cli
mov
dec
mov
jns
pushf
dec
jle
adc
push
and
gs
dec
loope
sub
sbb
cmp
mov
xchg
adc
shll
add
cmp
cmpsl
testb
clc
xor
sbb
mov
enter
test
xchg
sub
jnp
fwait
cli
popf
mov
jp
call
mov
jge
test
push
jg
repnz
jnp
insl
push
xacquire
dec
push
lcall
sub
cs
xchg
sub
mov
dec
xchg
imul
test
insb
imul
call
jle
jge
mov
or
push
xchg
int
jg
in
pop
rorb
dec
imul
scas
pusha
and
inc
pop
std
negl
push
xlat
mov
jp
cmc
sub
mov
addr16
mov
pop
jp
mov
pop
and
lret
in
sbb
test
pop
jmp
adc
enter
push
movsl
dec
aad
or
and
cmpsl
lods
xor
adc
push
stc
push
out
rcrl
sub
cmpsl
push
shlb
out
and
jg,pn
es
mov
cli
xor
mov
xchg
add
adc
lods
jno
xor
cs
imul
xor
jno
jne
fimull
pop
call
pop
test
into
insl
icebp
lret
inc
xchg
and
push
movsl
inc
inc
pop
xchg
out
lea
int3
mov
push
pop
bound
enter
lret
jp
dec
xor
and
fcomip
xor
dec
into
popa
mov
jge
stos
mov
popf
negl
ret
mov
shrb
in
xchg
shlb
fs
notl
call
xchg
fdivs
sbbl
mulb
mov
inc
out
pop
sbb
add
aaa
test
sti
sub
ficomps
dec
sahf
outsl
jns
add
pusha
nop
jg
das
sub
mov
jno
dec
push
mov
mov
mov
push
and
adc
imul
iret
lock
sbb
xchg
js
dec
pushf
test
movsl
das
jmp
inc
aas
fnsave
scas
dec
shr
dec
push
xchg
add
fimull
pop
sbb
mov
xchg
cmp
sbb
xor
mov
inc
nop
int
incb
iret
mov
dec
sub
imul
je
dec
push
cli
lret
and
addr16
push
jl
mov
clc
jg
push
mov
mov
jne
fwait
jns
jns
dec
mov
out
call
sub
into
or
jp
inc
out
and
nop
dec
mov
movsb
out
pop
xchg
sub
scas
in
sti
jne
repz
repz
xchg
jae
stos
rep
in
jbe
stos
stos
fsubl
adc
lock
xchg
ds
lahf
loope
call
sub
and
imulb
iret
adc
mov
ja
push
add
add
mov
into
xchg
inc
faddl
mov
mov
xor
cmp
add
gs
pop
push
pop
add
and
cmpsl
lock
lret
sbb
inc
mov
enter
shrl
in
out
sub
lods
in
cld
fcoml
inc
notb
test
pop
sub
scas
into
jl
jmp
cs
sub
hlt
int3
sbb
stos
pop
xchg
addr16
out
sbb
stos
push
scas
fisttpll
jmp
push
test
xchg
sbb
pop
jmp
cmp
fucomp
outsl
add
jne
leave
push
call
ja
rorl
inc
jg
add
fwait
imul
divb
add
inc
clc
rcl
xchg
xchg
das
mov
js
and
cmp
mov
lret
push
rcrl
xlat
pop
rolb
shlb
cmp
cmp
pushl
push
jae
xchg
cld
push
imul
pop
outsb
stos
push
adc
ret
repnz
pushf
pop
mov
es
mov
jns
mov
mov
pushf
out
cs
fistl
inc
loopne
imul
jbe
or
arpl
push
out
lahf
insl
jl
lock
dec
imul
push
mov
dec
fs
pop
mov
ror
add
ja
add
aaa
adc
aad
ret
or
das
call
xor
xor
jle
aaa
insb
popa
jb
std
jg
pushf
add
lret
cmc
mov
stc
jo
aaa
ret
loope
shlb
pusha
pop
dec
lods
mov
push
test
sahf
adc
pop
shll
es
mov
test
sbb
adc
insb
roll
pushf
xchg
rol
cwtl
je
xor
data16
adc
pop
insl
xor
imul
xchg
push
jb
pandn
aas
or
or
inc
sub
mov
clc
cmp
jae
cmp
cmp
mov
int3
jne
lods
mov
push
mov
xor
jne
lret
and
push
cmp
lock
inc
cmp
int3
scas
int
jle
test
test
dec
or
push
andb
mov
push
push
ljmp
mov
pop
sub
and
stos
iret
jle
push
std
or
in
pop
lea
js
nop
ja
clc
mov
adc
leave
cmp
jle
lret
rol
fdivl
lret
or
inc
xor
mov
fwait
mov
pop
xchg
xor
ja
test
dec
pop
aas
mov
mov
aam
in
cmp
sub
sub
inc
push
je
mov
sub
xchg
out
pop
rcr
icebp
fdivl
mov
mov
lahf
mov
pop
in
fidivrs
pop
fsub
adc
mov
pop
sub
jge
sti
dec
ljmp
sub
dec
sbb
fidivl
xor
adc
dec
mov
sub
repnz
movsl
cmp
add
xchg
pop
lods
jnp,pn
out
mov
insl
ss
imul
and
jb
xchg
outsl
xchg
js
lods
inc
inc
mov
mov
pop
xchg
or
cmp
xor
ret
and
xor
adc
xor
or
and
jae
test
scas
icebp
jae
dec
lea
cmc
push
mov
xchg
test
inc
adc
outsl
xchg
jmp
andb
pop
enter
cmp
adc
cld
lds
lahf
dec
inc
faddp
bound
cli
xor
dec
cmp
test
or
std
inc
es
mov
push
ret
adc
push
adc
mov
fstpl
stos
add
xchg
mov
nop
iret
test
divl
push
int
aad
dec
mov
notb
test
shlb
add
je
jae
jo
aad
insb
lods
movsl
inc
aad
arpl
sub
pop
addr16
push
cltd
pop
enter
insl
pop
push
add
test
test
fisttpl
pusha
add
addr16
push
jb
lods
push
mov
mov
and
adc
push
add
ljmp
mov
movsb
jno
addb
pop
mov
sub
inc
shlb
sub
xlat
in
cmp
push
cld
stos
out
sarb
repz
imul
add
pop
or
fidivrs
sbb
jo
inc
in
pusha
push
push
movsb
test
xchg
pushf
adc
int
add
pop
mov
enter
scas
jnp
ja
frstor
test
jno
mov
dec
push
lret
les
aam
xlat
xchg
iret
mov
or
and
scas
imulb
dec
jge
push
jecxz
and
orl
ljmp
imul
fidivrs
imul
stos
pop
and
adc
jns
cli
inc
out
cmp
push
xchg
and
dec
cltd
imul
pop
jl,pt
or
mov
jp
cwtl
fisttpl
sub
xor
jnp
add
and
stos
fsubr
cld
xchg
jno
add
iret
sub
lret
sub
neg
xchg
aaa
andb
stos
push
xchg
inc
jge
cmpsb
dec
cmp
aaa
cmp
cwtl
xor
js
nop
mov
mov
jb
sub
nop
push
movsl
inc
cmp
mov
sub
shll
add
cmp
and
mov
call
xchg
pop
repz
fdiv
push
dec
mov
pop
ja
dec
clc
out
scas
add
sahf
clc
mov
push
dec
mov
jge
jbe
mov
pop
mov
andb
cmpsb
test
xchg
enter
or
mov
and
mov
loop
dec
mov
int
negl
mov
iret
xchg
das
cmp
jne
adcl
icebp
sbb
jp
out
cmp
imul
push
xchg
je
cmp
fcomip
and
mov
or
fisubs
pop
or
aad
add
aad
mov
enter
std
xchg
cs
mov
sti
leave
push
push
cmpsb
popa
loope
imul
fistl
shlb
push
adc
sbb
test
jbe
add
or
ja
std
fsubp
icebp
push
arpl
jns
inc
scas
dec
xor
insb
mov
mov
int3
cli
loopne
pop
nop
jns
popa
iret
push
cmpsb
mov
xchg
fidivl
mov
jb
mov
jle
cmpl
cwtl
dec
lds
or
sbb
ss
das
push
sbb
mov
jge
sub
pop
and
es
cli
dec
or
mov
mov
mov
mov
pop
push
arpl
aas
sarl
cmp
mov
add
inc
cwtl
cltd
push
jno
mov
sti
sub
mov
or
lret
mov
out
pop
push
pop
jle
mov
into
dec
lret
lds
push
fs
icebp
add
pop
jge
cld
mov
and
mov
jb
xchg
hlt
lods
sbb
jle
std
mov
aad
test
dec
mov
sbb
push
xchg
imul
mov
leave
gs
xor
push
inc
ret
mov
and
push
ss
mov
xchg
call
out
or
daa
in
jmp
xor
std
or
jae
ret
push
push
inc
cld
mov
mov
mov
in
gs
fmul
or
and
adc
inc
fs
jae
xchg
sub
jl
inc
shlb
fimuls
out
mov
movsb
int3
inc
dec
push
and
inc
sub
mov
mov
loop
or
roll
orb
movsb
test
inc
lcall
xor
cs
push
hlt
cmp
movl
insb
pop
addl
cmp
out
jmp
faddl
in
jp
cs
dec
push
loope
cmp
mov
push
jbe
mov
es
cmp
aaa
cmp
jne
sub
cmpsb
shrb
das
xchg
cld
mov
inc
test
rorb
inc
inc
xlat
xchg
loopne
or
imul
es
or
and
insb
mov
mov
pop
sub
movsl
dec
pop
mov
iret
faddl
push
sbb
test
dec
insb
js
sti
mov
push
into
in
mov
push
cs
sub
adc
lods
and
sub
aam
call
cltd
adc
push
pop
ffreep
enter
mov
setb
dec
frstor
push
subl
gs
divl
sub
and
pop
bound
insl
push
adc
test
cwtl
addb
push
repz
pop
cmp
dec
pop
mov
sbb
int3
ds
push
jno
stos
mov
push
mov
sti
sbb
mov
iret
imul
es
push
pop
pushf
cmp
sahf
in
cmp
sahf
xchg
or
shl
out
adc
aaa
xor
add
mov
popf
out
mov
inc
cld
inc
jne
imul
shlb
in
push
ret
sti
iret
scas
call
mov
add
xchg
div
idivl
stc
sti
loop
sbb
dec
mov
cwtl
dec
or
pop
mov
inc
xor
mov
dec
mov
mov
mov
cmp
sub
mov
ja
sbb
jbe
rorb
jp
cwtl
ret
inc
sub
xchg
stc
and
add
push
mov
icebp
or
mov
cld
or
ret
jge
or
pop
subl
cmc
loope
mov
stc
cmp
xor
push
sub
scas
aam
sbb
addr16
sbb
fwait
dec
or
push
cwtl
mov
mov
fiadds
adc
shll
push
mov
push
mov
insl
cmp
fdivrs
adc
rorl
add
cs
loope
push
inc
in
loop
movsb
outsb
pop
inc
int
scas
sub
into
cmpsl
cwtl
seto
inc
mov
push
pop
pop
pop
mov
fidivs
and
popa
popf
dec
dec
sub
mov
popa
call
jno
lods
dec
int
loop
subb
or
mov
push
dec
loopne
sub
in
cmp
iret
sub
mov
outsl
push
loop
xchg
cld
mov
iret
sub
loopne
out
movsb
ljmp
addr16
adcb
add
or
mov
sub
clc
aam
or
loop
or
movsl
sbb
sbb
mov
xchg
xchg
stos
or
iret
jg
jp
mov
ja,pn
hlt
sbb
and
pusha
push
fmull
xchg
cmc
jnp
xor
dec
mov
xor
inc
scas
icebp
mov
imul
imul
and
int3
xor
arpl
push
push
sub
jns
dec
insb
dec
or
pop
mov
xor
jecxz
out
push
adc
add
adc
ss
lea
aad
ss
addr16
jp
data16
add
mov
sbb
test
in
mov
push
or
sub
aad
and
sub
fimull
dec
rolb
adc
mov
mov
add
cld
push
sbb
xor
add
hlt
popa
or
addb
popa
sbb
sahf
mov
shrl
and
test
addr16
mov
dec
stos
adcb
xor
dec
mov
imul
push
push
and
mov
pop
xor
cmpl
mov
and
xchg
notb
mov
xchg
sub
ret
andb
in
adc
mov
pop
sarl
dec
in
inc
in
push
mov
pop
test
iret
aas
jecxz
lods
add
xchg
popa
adc
mov
mov
and
ds
sbb
scas
adc
je
dec
sub
pushf
cs
popf
sarl
pushf
sbb
lods
push
fwait
mov
insl
sub
pusha
dec
in
bound
loopne
lea
mov
iret
jae
outsb
mov
test
adc
je
mov
lahf
lods
dec
cmp
push
leave
xor
pop
in
inc
rclb
lret
test
mov
or
adcl
cld
adcl
or
js
out
fmuls
adc
mov
mov
gs
mov
jno
xor
stc
icebp
je
mov
jge
and
ror
inc
cmc
outsl
push
test
or
adc
out
push
and
jp
push
dec
pop
fwait
or
mov
adc
jecxz,pn
jo
test
ret
xchg
je
sbb
aas
push
js
mov
add
pop
mov
not
jae
mov
in
jae
adc
iret
or
cmp
imul
test
or
jge
dec
daa
adc
inc
out
pop
jb
add
mov
mov
addb
xchg
inc
cmpsb
or
ds
or
stc
jecxz
hlt
cmpsb
cmpsl
push
mov
mov
fistps
mov
dec
jb
push
xor
jnp
bound
stos
sahf
adc
int3
fstpt
lds
inc
pop
jb
and
mov
dec
icebp
inc
adc
inc
xlat
mov
xchg
adc
repz
arpl
sbb
loop
inc
inc
mov
fdiv
adc
out
adc
jecxz
xchg
dec
in
mov
nop
xor
dec
gs
loopne
push
subb
sbb
adc
cmp
cmp
adc
mov
pop
adc
cmp
sahf
xor
not
jle
inc
mov
cmc
cltd
mov
xchg
adc
dec
dec
and
jns
dec
pop
hlt
inc
pop
adc
lcall
mov
lock
sti
fst
jb
enter
mov
xchg
inc
cmp
ror
loop
mov
inc
mov
push
push
lahf
mov
cs
and
lahf
push
fistl
xchg
mov
pop
cwtl
aam
orb
push
bnd
test
outsb
ss
outsb
andb
mov
repnz
push
gs
test
add
cmp
dec
or
call
leave
incl
imul
insb
push
out
push
inc
jle
aaa
lods
das
push
xor
cmp
mov
lock
aaa
imul
sbb
adc
out
xchg
mov
inc
cli
js
xchg
adc
das
pop
insl
push
sahf
fsts
inc
mov
mov
xchg
push
xchg
push
je
pop
dec
fsubrl
mov
adc
mov
add
mov
rorb
shrb
pushf
les
test
adc
cwtl
add
mov
out
aaa
jl
push
lret
xor
out
call
es
or
test
out
adc
dec
ss
stos
mov
mov
insl
jns
adc
ds
sbb
jp
out
mov
movsl
stos
leave
loope
dec
daa
or
jns
cmpsl
js
mov
pop
mov
and
cltd
jmp
jno
andb
adc
push
insb
dec
test
xchg
jecxz
into
rcrb
cmp
inc
std
and
arpl
and
inc
mov
addb
jmp
test
or
mov
lds
jbe
sarl
mov
rol
call
popa
nop
xchg
movsb
jno
sub
mov
outsb
adc
add
dec
add
ss
adc
pop
aam
lret
stc
xor
or
cmp
cltd
mov
adc
push
sub
xor
jecxz
jo
lods
mov
push
bound
int3
inc
mov
add
jg
dec
les
out
gs
lret
pop
xchg
dec
sbb
adc
mov
push
sub
fmull
lds
inc
add
shrl
clc
push
gs
mov
mov
rcrb
push
sub
sbb
sahf
je
mov
loope
mov
shl
push
in
or
xchg
pop
daa
jbe
mov
jo
fisubl
mov
sub
xor
call
mov
mov
add
pop
lret
xchg
clc
daa
pop
sbb
adc
fdivs
ja
je
cli
repnz
add
push
rorl
pushf
mov
and
js
sbb
and
andl
lea
mov
cmp
les
out
leave
sbb
mov
sbb
js
fmull
movsl
lea
push
fdivl
mov
cmp
mov
ja,pt
mov
xor
in
or
or
lds
push
lret
cs
stos
ret
adc
inc
fstl
out
xor
sahf
rorb
test
data16
mov
ret
das
cs
pushf
add
fincstp
sbb
jno
mov
mov
and
int
jp
repz
and
hlt
mov
cs
adc
xor
sub
ret
mov
push
push
fsubs
mov
scas
loopne
sbb
daa
mov
mov
fwait
imul
cltd
nop
cmp
mov
aaa
fst
and
ret
inc
fdivs
fisubrs
mov
and
push
adc
sbb
jns
repz
add
and
push
sbb
dec
sub
call
mov
mov
mov
shlb
xor
or
outsl
pop
cmp
and
and
bound
mov
lret
sub
dec
jecxz
xchg
sub
mov
cmp
cltd
dec
dec
mov
mov
scas
adc
jnp
mov
mov
addl
mov
je
iret
mov
push
mov
cmp
ficompl
cmp
xchg
das
in
inc
push
xchg
shlb
pop
arpl
shlb
ds
mov
dec
lret
stos
dec
xor
sarl
ja
shll
cmpl
je
insb
mov
xor
test
ljmp
fcompl
push
cmp
mov
lahf
dec
data16
pop
sbb
loope
in
sbb
cli
cmp
push
icebp
push
xchg
stc
xchg
arpl
jno
sbb
lret
test
sbb
xchg
insl
pop
cmc
fcomp
ficompl
sbb
cs
mov
pop
adc
aaa
imul
shll
mov
fdivrs
and
adc
fwait
lea
test
jns
lods
rcrl
mov
icebp
xchg
pushf
bound
jno
std
call
icebp
inc
jle
cmp
cmc
inc
adc
add
mov
mov
push
jno
cmp
sbb
imul
cmp
sbb
dec
mov
jg
xor
sbb
inc
add
pop
dec
lret
sbb
sub
pop
pushf
scas
sbb
adc
in
xor
push
int
out
sub
flds
ljmp
sarl
cmp
jmp
mov
fstpl
fimull
ret
add
push
test
mov
jno
sbb
push
insl
std
lods
and
mov
mov
mov
push
lea
jno
or
cmpsl
mov
xchg
cwtl
popf
pop
mov
cmc
jne
sub
out
mov
stos
cs
popa
arpl
test
test
dec
leave
pop
jne
jns
or
push
fwait
xchg
and
sub
outsb
loope
or
jle
adc
insl
outsl
int
imul
enter
mov
test
stos
lods
pop
insl
dec
repnz
or
jmp
cmp
add
in
cmp
bnd
flds
fmull
adc
mov
add
ljmp
mov
fisttpl
cwtl
mov
jno
mov
loope
orl
jbe
mov
xor
enter
mov
hlt
lds
pop
or
negb
test
mov
sbb
and
sub
jle
lods
in
les
loopne
scas
cli
cmpsl
out
push
mov
inc
icebp
shrl
mov
dec
push
add
push
mov
fisttpl
bnd
sub
pop
cmpsl
push
push
rcrl
sahf
mov
pop
xchg
out
or
add
pusha
outsl
rolb
xchg
pop
mov
inc
bound
jecxz
jbe
jecxz
insl
mov
push
das
outsb
mov
insl
out
inc
pop
insb
dec
inc
dec
lcall
nop/reserved
jmp
rcrb
in
jb
add
add
mov
shrl
adc
rcrl
lods
cltd
pop
fisttpll
std
or
mov
pop
leave
mov
loopne
adc
mov
mov
push
push
dec
leave
out
jmp
xchg
lea
leave
test
outsb
xchg
push
cmp
dec
aas
pop
int
aad
cmp
sahf
call
fs
call
pop
adc
push
fldenv
xor
shl
sbb
movsb
js
xor
loop
mov
cmp
push
sub
rsqrtps
lock
adc
dec
push
lret
decb
in
fistpll
cltd
xchg
sbb
in
push
cwtl
and
mov
daa
pop
sbb
cmp
mov
mov
xor
add
call
movsb
mov
clc
sbb
adc
cwtl
lret
ljmp
loop
xor
adc
movsb
pop
and
add
fwait
push
xor
shll
lods
iret
push
push
lcall
mov
or
movsb
incb
in
dec
into
movsb
mov
enter
add
inc
pop
frstor
inc
repz
jp
sub
inc
add
xchg
push
cmp
cmp
jno
scas
xchg
dec
out
dec
pop
lds
int
pop
jmp
imul
mov
aas
icebp
popf
xchg
movsl
std
adc
test
mov
je
adc
pop
push
out
fdivr
push
rorb
xor
push
shlb
push
lock
push
nop
jne
fdivrl
jne
push
mov
aaa
lods
sbb
cs
aam
cwtl
ss
cli
mov
inc
dec
in
mov
jb
bound
mov
scas
iret
cmp
jp
cs
xchg
push
or
mov
push
sub
inc
shlb
sub
in
pop
ja
imul
pop
add
in
inc
pop
aas
mov
fcomp
in
sub
cmpsl
les
cmp
sub
jge
js
int3
sbb
cmpsb
shlb
xchg
sbb
sub
in
add
pop
lods
adcl
aad
push
and
cmpsb
shlb
cld
cli
jge
outsl
fwait
push
jmp
call
pop
punpckhdq
jle
xor
mov
nop
dec
imul
xchg
call
fnstsw
mov
loop
inc
mov
dec
sarb
clc
stos
hlt
jo
data16
iret
or
jle
call
pop
out
xchg
push
lds
mov
ret
insb
mov
stos
mov
fsub
cmp
sahf
stos
mov
fstpt
ja
idiv
xor
vpcomuq
dec
test
adc
mul
andl
sbb
pusha
sub
mov
push
or
test
stos
js
adc
cld
scas
pop
data16
aas
pop
dec
pushf
insb
nop
xor
ljmp
lods
jle
stos
pop
sahf
test
lods
inc
mov
inc
fisubrl
cmc
adc
adc
arpl
or
popf
mov
mov
sahf
push
jns
cmp
jmp
push
pop
loopne
jno
jmp
pop
cmpsl
leave
add
sti
int3
inc
cmp
in
and
add
xchg
faddl
stos
sbb
int
cmpsl
jl
cmp
fidivrs
stc
mov
pop
loope
dec
das
or
xchg
fdivrs
dec
jecxz
scas
in
jp
xchg
and
mov
test
adc
aad
cmp
lret
xchg
sub
dec
popf
call
add
ja
inc
push
cli
sbb
sbb
adc
mov
or
jg
jns
stos
jg
iret
mov
xlat
lret
pop
sbb
lock
jmp
and
addr16
and
ja
int3
stc
jne
lahf
sbb
cmp
inc
dec
pop
mov
jge
cmp
or
cmp
enter
fs
push
mov
pusha
aas
js
pop
push
or
lret
pop
mov
pop
mov
cmp
std
filds
mov
movsb
sbb
mov
ret
mov
pop
adc
les
or
data16
xchg
popa
mov
mov
or
sub
insl
adc
pop
dec
arpl
jns
stos
jecxz
cwtl
cmpl
push
jo
pop
mov
popf
test
data16
and
sarb
sbb
xchg
addr16
inc
or
jg
sahf
inc
adc
and
cmp
xor
xor
xchg
pop
inc
mov
xlat
aas
rorb
push
in
out
mov
cmp
mov
insl
push
daa
jmp
or
mov
adc
push
iret
iret
cmp
xor
iret
loopne
dec
dec
push
jns
and
xchg
scas
dec
hlt
pop
cwtl
adc
cmp
fiaddl
test
cmp
stos
daa
mov
roll
jns
xor
in
ljmp
push
ret
lea
loop
sbb
xchg
cmp
mov
leave
int3
insb
sti
int
jno
mov
mov
cmp
dec
mov
loop
sbb
push
jo
push
mov
pop
push
mov
popl
icebp
pop
jne
sub
xchg
aaa
pop
shlb
mov
mov
inc
call
jns
pushl
fwait
std
sub
idiv
or
mov
xchg
stos
jmp
cs
mov
leave
add
push
add
sub
pop
pavgb
sbb
loop
jb
sbb
int3
out
mov
aaa
adc
lcall
pop
add
jmp
int
lahf
push
test
lods
cli
jbe
sub
scas
jb
mov
push
inc
jo
add
jb
jle
repz
xlat
stos
or
loopne
add
lods
mov
daa
xchg
fsubrl
jmp
pop
push
jle
imul
fdivrl
pusha
ret
adc
je
test
push
xchg
mov
cmp
ja
pop
imul
pop
or
inc
push
lods
jge
sbb
mov
outsl
jmp
repz
mov
xor
es
adc
cmpsl
lea
test
ds
lds
add
pop
pushf
loope
dec
jno
mov
xchg
or
int
outsl
loope
cmp
push
add
loopne
cld
ds
out
sahf
dec
outsl
gs
adc
sub
or
lea
pop
loopne
xchg
lea
dec
jb
es
int3
xor
jmp
sahf
adc
gs
testl
mov
loopne
or
inc
mov
mov
cmp
mov
jo
fcmovbe
or
into
inc
cmp
call
push
sti
xor
jb
scas
lea
dec
cmpsb
in
push
fxam
fyl2xp1
sbb
inc
add
ret
ds
xor
pop
shld
bnd
lret
nopl
cmp
loopne
jmp
inc
jae
sub
pushf
lods
sti
lcall
scas
cmp
sub
xor
inc
mov
aas
cmpb
in
hlt
fstps
dec
int3
fstpt
xor
jae
sbbl
or
aaa
jnp
or
imull
jo
cli
mov
int
or
mov
movsb
repz
mov
pop
cmp
fdivrs
adc
xchg
inc
rcr
subb
mov
imul
gs
fs
mov
cmpsb
test
add
xlat
adc
sub
adc
aad
xor
pop
sub
fwait
test
mov
pop
mov
dec
sub
mov
inc
nop
dec
outsb
pusha
sbb
pop
mov
jns
bswap
jge
es
int
icebp
shll
push
sbb
push
stos
rclb
mov
mov
faddl
arpl
ss
loop
cmc
ret
sbb
js
imul
dec
push
enter
mov
mov
mov
dec
push
add
dec
add
shll
insl
push
mov
movsb
xchg
cmpsl
testb
loope
test
pop
mov
inc
pop
dec
xor
mov
pop
add
mov
inc
xchg
std
shrb
xor
inc
sbb
add
mov
bnd
mov
add
sub
add
cmpsl
mov
or
ret
gs
insb
xor
mov
outsb
xchg
bound
jne
cmpsl
push
and
push
mov
loope
and
add
iret
clc
sbbl
shll
cmp
or
insl
inc
mov
fildll
push
jbe
or
aas
pop
popf
std
xchg
adc
sub
aad
push
out
ret
jb
cmc
insb
push
ds
std
mov
sub
scas
lcall
add
mull
popf
xchg
mov
lds
push
jmp
in
mov
addr16
scas
nop
daa
mov
mov
dec
aad
test
mov
xlat
jae
mov
andb
jmp
sub
movsl
lahf
std
adc
adc
dec
cmp
cwtl
xchg
inc
in
jnp
mov
shlb
push
repnz
mov
in
call
ds
sub
leave
inc
data16
add
stos
cmp
ret
repz
adc
or
jnp
xchg
sbb
or
stos
in
push
or
in
iret
jnp
andb
rorb
jmp
lods
add
jae
push
or
dec
or
pusha
mov
loope
push
mov
cmp
out
out
push
push
imul
adc
aam
into
cwtl
inc
push
mov
sahf
scas
xchg
sub
xor
jbe
or
daa
pop
add
push
or
xchg
sub
ds
out
cmpsl
adc
inc
or
call
std
lahf
lret
xor
flds
imul
jmp
jle
adc
jae
cwtl
imull
jnp
pop
jae,pt
ds
mov
lods
cmp
adc
popf
push
pop
dec
mov
rolb
jp
in
sub
cwtl
ret
adc
or
jne
bswap
mov
std
xor
mov
add
sub
in
rorb
mov
sbb
pop
jbe
push
jae
insb
lock
cld
dec
mov
lcall
mov
xorl
xor
push
xorl
je
cltd
jb
or
mov
and
mov
orl
imulb
or
nop
arpl
mov
sub
movnti
mov
sub
rcrb
mov
scas
pop
cs
int3
in
or
lret
pusha
mov
sbb
movsl
mov
sbb
dec
hlt
dec
add
ret
inc
jmp
lods
in
fnstsw
cmpsl
dec
push
sub
and
xor
mov
pop
imul
and
mov
roll
adc
inc
mov
rcll
add
dec
xchg
fisubrs
imul
and
lods
sub
jnp
jg
gs
incl
pushf
cld
es
adc
in
insl
add
test
fucom
xor
sahf
and
xor
movsl
mov
fidivrl
fldenv
xchg
loope
outsl
dec
xchg
adc
cmp
mov
pop
nop
sbb
mov
in
and
push
or
pop
push
push
les
shrb
pop
xlat
scas
scas
mov
lds
js
adc
sti
xor
ss
inc
add
loopne
adc
cmp
mov
push
or
jl
sub
cltd
push
test
sub
push
pop
lock
inc
pop
inc
js
dec
cmp
orl
sub
in
loopne
pusha
push
aaa
aam
adc
shll
repz
jno
xchg
rcl
jmp
mov
xor
sub
insl
push
sub
jnp
xchg
mov
xchg
and
and
outsl
push
push
xchg
in
push
lcall
mov
ljmp
fldt
xchg
decb
rcrl
mov
add
sets
insb
cmpsb
clc
aaa
insl
aaa
pushl
lret
cs
hlt
xchg
call
pop
or
jmp
lods
sbb
js
push
push
or
mov
xchg
aad
mov
xor
jb
lods
xchg
in
mov
cmc
mov
rol
cmc
jmp
push
jmp
mov
sbb
lods
cmp
sub
dec
into
and
fcomps
adc
clc
loope
dec
xchg
adc
pushf
lret
ja
cmp
decl
inc
daa
sub
fidivl
push
leave
push
inc
pop
scas
rorl
xor
xchg
pop
sub
adc
loope
std
sti
cmp
xchg
fcoms
lret
movsb
push
or
sbbb
gs
push
ljmp
ret
xor
inc
std
test
dec
sub
dec
sbb
ljmp
idivb
repnz
in
scas
in
sbb
mov
inc
push
out
inc
xchg
rep
add
pop
pop
jmp
andl
cltd
testb
push
aam
sub
sub
fiaddl
inc
xchg
ja
mov
inc
cmp
add
pop
sub
push
in
stos
or
add
imul
pop
outsl
and
jmp
out
cmpsl
inc
das
push
fwait
inc
insb
jg
pop
push
add
test
addl
xor
js,pt
cmpsb
push
dec
jmp
sbb
in
mov
mov
sub
mov
push
jbe
add
cmpsb
dec
sbb
subl
stc
push
jo
or
stos
jo
jo
ds
mov
cmp
xchg
jl
test
lahf
movsb
mov
cmpsb
inc
inc
xor
mov
cmp
clc
pop
add
sub
mov
or
push
mov
cmc
inc
les
enter
fwait
ucomiss
add
sub
add
loop
push
mov
sub
stos
mov
dec
adc
mov
sub
out
stc
mov
inc
mov
add
xor
jp
jmp
cmp
push
call
aam
xchg
inc
jecxz
pop
dec
add
dec
push
test
daa
std
rorb
sub
mov
rcrl
adc
out
hlt
stos
xor
jnp
roll
mov
xor
cmp
dec
dec
push
jns
cltd
rclb
mov
aad
cmp
fs
das
out
xor
addr16
lods
jmp
sub
lods
or
gs
stos
push
mov
mov
inc
test
call
in
push
outsl
pop
test
orb
lods
xor
sub
jne
jmp
loop
sub
sub
leave
and
cmp
add
pop
mov
sub
or
dec
dec
pusha
and
and
inc
sub
inc
stos
mov
jp
sar
push
push
pop
mov
mov
and
dec
ret
inc
dec
ja
mov
in
test
mov
cmp
jno
sub
jnp
sbb
cmp
lods
pop
mov
loopne
ret
daa
inc
inc
cmpsb
dec
sbb
sbb
je
pop
into
mov
jbe
and
mov
sub
loope
dec
sbb
jbe
mov
loop
gs
cld
sub
insb
pop
cmp
push
xor
jmp
icebp
pop
mov
loopne
int3
out
mov
lods
fadd
mov
dec
jns
dec
mov
mov
sub
pop
sub
xor
les
test
cmp
sahf
pop
es
popf
shl
add
pop
xchg
xchg
xor
shrl
bound
mov
mov
and
push
lret
inc
xor
jno
gs
cld
out
addr16
loopne
xchg
test
scas
xor
push
mov
cmp
cmpsl
test
xchg
push
push
popf
sub
mov
pop
mov
or
xor
xchg
hlt
pop
enter
sub
mov
ret
jge
push
enter
xchg
jecxz
add
ja
ss
pop
push
mov
addl
mov
shrl
push
push
loop
movsl
loope
lea
test
and
mov
mov
daa
cmpsb
add
add
xchg
xchg
add
xor
aad
dec
xchg
xchg
sub
xor
in
inc
pop
and
ds
sub
and
xchg
push
adc
cmp
aam
push
repz
cmpsb
cwtl
data16
iret
in
lods
stos
pop
inc
jp
sbb
cmp
xor
leave
and
mov
push
out
or
sub
push
push
pushf
pop
es
repnz
xchg
or
sub
xchg
cmp
and
outsl
sub
mov
imul
ret
cmc
movsl
stos
bound
out
pop
xchg
cld
pushf
mov
test
sbb
cmc
fs
push
or
arpl
jmp
ljmpw
xchg
jg
test
stos
mov
cmp
out
negl
fisttpll
jbe
ja
out
cld
mov
mov
jecxz
sarb
jp
fwait
mov
rclb
adc
nop
push
loopne
xorb
mov
jb
lods
or
mov
push
jae
stos
adc
add
cmpb
ds
jmp
cmpsl
push
sub
or
adc
repnz
inc
dec
xor
cs
sub
setle
pop
lds
mov
sbb
sub
sbbb
pop
push
sub
jmp
lret
adc
cwtl
add
add
insl
xlat
sub
xchg
test
push
dec
std
adc
mov
pop
jns
add
sahf
sar
xchg
xchg
out
push
pop
adc
xchg
dec
adc
xor
call
lods
lcall
aam
pop
gs
push
ljmp
cmp
je
mov
pop
dec
insb
xchg
push
ljmp
pop
aaa
daa
fistpl
jbe
jle
lods
test
xchg
mov
ja
add
loop
mov
xchg
xor
mov
mov
jno
ds
sub
int3
ficomps
xor
cmp
xor
cltd
cwtl
push
pop
test
ljmp
sbb
push
xorl
cwtl
js
jb
cmp
int
xor
cltd
mov
pop
push
push
lds
pusha
aad
mov
push
mov
xor
outsb
mov
jge
xchg
mov
andb
or
pusha
in
test
inc
stc
iret
xor
gs
xor
cli
mov
mov
push
sahf
sti
add
int
push
mov
jnp
mov
shrl
les
jae
push
movsb
push
repz
sbb
scas
xchg
cld
jb
pop
imul
ss
popf
mov
addb
leave
daa
movsl
enter
inc
jl
test
ror
mov
notl
add
mov
mov
inc
pop
mov
jno
and
xor
adc
sbb
rcll
lock
sbb
push
mov
adc
dec
ds
or
arpl
sub
pop
aas
pop
jp
adc
mov
pop
test
mov
lret
int
inc
or
in
into
dec
xor
and
pop
or
sbb
and
in
pop
test
rclb
mov
push
add
imul
push
push
jno
dec
insb
ds
imul
inc
cs
push
mov
push
inc
xchg
shlb
aaa
sub
and
cld
insl
cmp
mov
jl
int
aas
clc
in
fldenv
lret
and
inc
jp
and
sar
sbb
fsubl
in
xchg
ds
das
popf
or
hlt
rorb
rcrl
push
clc
or
shlb
outsl
inc
push
push
roll
jmp
xchg
adc
cli
push
mov
sahf
xchg
data16
or
mov
ss
mov
sbb
rclb
adc
push
cli
div
jne
push
mov
pop
sub
pop
mov
les
xor
cmp
shlb
and
sarl
andb
mov
jae
mov
test
xchg
mov
inc
jo
xor
adc
mov
cmc
and
or
cld
mov
dec
out
xlat
jno
loope
roll
sub
mov
adc
std
mov
adc
int3
cmc
dec
pop
testl
mov
push
mov
es
aas
dec
fwait
outsb
loop
lods
fwait
and
std
add
fwait
iret
pop
and
in
lock
mov
xor
cmpl
ret
xchg
lods
pop
pushf
fucom
cmp
int
jbe
stos
ljmp
pop
dec
xor
lods
int
and
jne
inc
push
addb
das
das
scas
sub
enter
pop
mov
sti
mov
or
mov
mov
adc
pop
pusha
and
movsb
pop
mov
mov
mov
jno
fs
inc
lret
mov
stos
xchg
jnp
cmc
xor
mov
push
mov
popa
in
xchg
adc
or
gs
pop
out
jge
stc
popf
mov
dec
and
ja
ljmp
adc
out
cwtl
fwait
into
jns
jns
les
mul
mov
jp
mov
bound
lods
fldl
cwtl
loope
into
cmpsb
xor
xor
imul
dec
pop
cmc
aam
dec
pop
test
mov
xchg
mov
daa
loope
ret
addr16
mov
jb
add
ficoml
push
shll
push
testb
dec
aad
imul
jne
jbe
std
jae
jns
adc
pop
mov
jecxz
neg
ljmp
pop
cmp
or
fisttpll
pop
popf
loope
add
cmp
push
sub
xchg
punpcklwd
popa
scas
sub
pop
test
loopne
sbb
pushf
pop
imul
js
adc
mov
cmp
jb
out
mov
loop
mov
or
fs
aas
xchg
scas
arpl
mov
imul
and
cmp
pop
dec
cmp
xor
ret
inc
lock
push
xor
inc
mov
sub
mov
jl
arpl
xchg
inc
dec
add
mov
adc
nop
jmp
xchg
lods
mov
cwtl
pop
ljmp
scas
jno
add
mov
mov
or
dec
fs
daa
leave
mov
int
pop
mov
scas
data16
sbb
fisubl
xor
iret
enter
or
fisubrs
pop
movl
stc
insb
out
addr16
lret
jmp
shlb
inc
pop
frstor
push
mov
test
xchg
cmpsb
outsl
pop
fbld
js
push
js
lcall
push
mov
mov
xor
pop
outsl
fadd
sub
gs
addb
jle
sbb
add
and
gs
cmp
cmc
or
xor
mov
mov
or
je
adc
lret
jge
mov
int3
and
fwait
cli
xchg
inc
bound
adc
add
sub
imul
outsb
sbb
mov
xor
push
sbb
out
insb
pop
lret
mov
cmc
push
mov
pusha
cmpb
in
pusha
mov
orb
inc
pop
in
lods
shll
sbb
xor
mov
lcall
jns
push
fwait
in
jnp
hlt
xchg
sub
push
arpl
add
mov
mov
daa
cmp
lea
int
push
arpl
lds
popa
add
pop
add
ds
mov
jbe
in
stos
adc
or
stos
cmc
cltd
pop
dec
movsl
sti
mov
dec
mov
sub
cmp
mov
push
hlt
adc
outsl
jle
mov
daa
popa
mov
jns
jb
mov
pop
add
fisubs
jg
mov
push
pop
sbb
aaa
insb
nop
jae
into
ljmp
insl
hlt
test
jnp
xor
pop
std
push
push
sbb
mov
aam
xor
arpl
mov
jmp
iret
mov
sub
repz
cli
jno
lcall
mov
daa
add
js
mov
pop
xchg
hlt
xchg
xor
lret
sbb
cmpsb
push
popa
jmp
add
out
jl
pop
rcr
lea
xchg
sarl
into
in
mov
lret
daa
pop
pop
xchg
stc
or
push
dec
mov
jno
cwtl
dec
imul
in
push
jg
xchg
pop
ret
pop
repz
pop
les
sbb
mov
pop
scas
dec
lods
mov
inc
jle
or
enter
cltd
cld
in
or
adc
xor
mov
clc
dec
inc
or
loopne
clc
xor
or
pop
loop
aad
add
dec
fcom
sub
mov
fwait
pop
repz
inc
lea
iret
into
cmp
sbb
jo
imul
aas
in
mov
pop
jecxz
shl
cmp
mov
jb
and
je
jp
mov
mov
icebp
dec
mov
call
mov
mov
shlb
sub
jge
enter
lret
add
mov
aaa
je
sbb
mov
outsb
insl
pop
daa
and
sub
cmp
js
rcrl
push
jg
bound
lcall
xorl
test
btc
pop
mov
adc
push
repz
push
sar
and
adc
les
sbb
iret
mov
cli
lret
and
lods
insl
jae
cmp
test
in
cmp
and
mov
mov
bound
int3
movsl
or
push
jle
cltd
cmp
lcall
push
rcll
rcll
mov
xlat
sub
xor
movsl
mov
lret
push
push
push
xchg
pop
mov
add
xchg
mov
leave
add
stc
mov
mov
stos
lock
cwtl
jp
mov
mov
pop
push
mov
mov
cmp
pop
addr16
cmp
push
inc
push
xchg
arpl
stos
pop
in
mov
sti
cld
sub
sahf
mov
mov
add
push
cmp
in
lds
call
cwtl
xchg
int3
adc
and
xchg
jns
sbbb
mov
push
cmp
mov
pop
inc
dec
mov
push
stos
clc
push
ret
insb
adc
sbb
cli
aas
jg
rcr
js
adc
add
cwtl
jge
jecxz
iret
adc
shl
or
dec
cmp
sub
cmpsl
aam
je
flds
adc
and
adc
ficompl
add
and
xlat
insl
imul
test
mov
aas
imul
test
mov
jbe
xor
cmpsb
cmp
incl
add
cmc
movsl
loop
mov
lds
lcall
sbb
jg
mov
je
ds
fisttps
mov
pushf
jmp
mov
xor
mov
sub
xchg
ja
or
aad
aad
cs
ror
jp
aaa
add
roll
and
adc
fbstp
sub
add
sar
xchg
mov
adc
iret
mov
dec
jmp
scas
dec
push
mov
in
sub
ja
in
ja
ja
clc
lahf
iret
mov
xchg
cmp
add
lods
loop
xor
clc
add
cmpsl
shrb
push
xor
and
mov
sbb
cmp
add
out
inc
push
ss
pop
inc
or
sbb
int
mov
mov
outsl
or
fldenv
inc
mov
mov
inc
cmpsb
outsb
hlt
adc
push
sbb
fs
insl
jo
push
pusha
repnz
stc
insl
frstor
arpl
cmp
and
je
dec
jecxz
popf
jl
jmp
sbb
inc
loop
inc
pop
cltd
shrl
and
mov
dec
sbb
mov
movsb
push
mov
aaa
pop
dec
push
xchg
mov
dec
xchg
pavgb
mov
or
sub
out
cmpsl
test
repz
stos
icebp
sub
iret
sbb
mov
jnp
add
pop
xchg
adc
scas
sbb
add
cmpl
rclb
pop
mov
in
test
insl
mov
jmp
ds
jmp
pop
or
push
mov
cmp
cmpl
add
and
dec
inc
nop
xchg
cmp
mov
push
push
jnp
dec
aam
adc
xor
mov
popf
sub
lcall
bound
stc
pop
ljmp
lret
jne
imul
pop
sub
es
lret
mov
mov
cmpsl
popf
adc
nop
jle
imul
imul
push
aas
sahf
hlt
cli
fmull
jnp
jmp
cmp
mov
icebp
xchg
ret
inc
xor
dec
rcl
pop
cli
bound
ficomps
push
push
aad
pop
repnz
sub
ja
test
scas
ror
mov
and
lret
add
hlt
mov
xor
iret
pop
in
and
incb
fsub
or
ret
xchg
mov
cmpsl
std
dec
call
outsb
and
mov
test
push
cmc
icebp
cmpl
aad
fdivrs
or
into
jnp
mov
xlat
inc
pop
push
adcb
loop
mov
fdivrs
fs
es
mov
inc
popa
jg
push
jbe
gs
dec
jbe
push
pop
sub
stc
out
xor
or
std
mov
add
adc
and
pop
lods
enter
sahf
ds
jno
addb
mov
imul
lods
push
out
dec
ds
or
xchg
cmp
insb
decb
cs
cli
outsb
scas
adc
and
icebp
movsl
adc
call
test
xchg
aaa
xchg
ds
inc
aas
add
insl
sub
sbb
sub
outsb
stos
int3
sahf
rolb
stos
inc
aam
mov
movsb
dec
into
mov
sbb
mov
ss
push
sbb
mov
leave
jp
jo
aaa
jo
cmp
xchg
xchg
xchg
out
arpl
xor
sbb
mov
cmp
sub
into
jg
xor
arpl
cmpsl
cmp
pop
ljmp
jge
inc
cmp
add
inc
dec
and
lcall
arpl
xor
sahf
clc
push
insl
mov
stc
jmp
dec
mov
cmpsb
xchg
pop
cmpb
sub
insl
fnstenv
loopne
adc
adc
cmp
imul
imulb
fstpl
lret
loopne
and
push
xor
and
mov
push
and
lret
xchg
push
fsts
dec
xchg
jne
sub
addr16
sbb
cmp
aas
data16
mov
rep
xor
jmp
pushw
in
pop
int3
push
popf
dec
inc
sti
insl
stos
ja
mov
aad
stos
and
mov
jmp
xchg
cmpsl
inc
in
repz
push
fcmovne
xor
shll
add
je
loope
aam
js
and
jno
push
mov
ja
popf
mov
ljmp
adc
fs
xchg
xlat
cmp
sbb
aad
xor
adc
cmc
aad
inc
in
mov
xchg
pusha
out
inc
push
rclb
lret
push
rcrb
adc
aaa
push
daa
cli
sub
xor
mov
and
sub
in
and
cmp
in
cltd
mov
jge
mov
dec
imul
rcrb
ss
les
inc
xlat
shll
popa
jo
jne
sbb
push
add
mov
adc
mov
addr16
mov
pushf
pop
daa
xlat
addb
jo
js
dec
fldt
es
inc
nop
out
pop
sbbl
jb
xchg
adc
subl
inc
push
ret
sar
inc
dec
test
sbb
shl
xchg
lcall
pop
test
test
cmp
sti
nop
xchg
xor
and
sub
leave
jl
add
out
or
dec
push
push
cmp
cli
pop
jmp
inc
aad
dec
fcomps
ljmp
mov
and
inc
hlt
xor
mov
int
repnz
mov
in
stos
or
pop
and
ljmp
lahf
subb
cmp
lea
mov
cmc
sub
out
fucomp
push
mov
pop
jo
fdivp
stos
xor
jmp
hlt
push
pop
inc
flds
mov
inc
imul
in
cltd
les
mov
mov
mov
aad
pop
loop
xchg
lock
xlat
cmp
frstor
xchg
mov
fdivs
sti
inc
lahf
loopne
or
mov
stos
repnz
fcomp
push
scas
into
out
fwait
cmpsl
mov
jecxz
jo
addb
or
arpl
pushw
sbb
aaa
adc
imul
int
dec
dec
loopne
dec
xchg
pop
cli
cmp
pop
jno
xchg
fimuls
out
ficoms
rolb
ljmp
inc
sbb
hlt
loop
pop
out
xchg
sub
sbb
leave
mov
arpl
and
cmp
inc
into
mov
pop
jg
mov
ljmp
lds
jge
mov
inc
sarl
cmp
adc
jecxz
cmp
and
jbe
and
jae
aam
sbb
iret
cwtl
push
inc
clc
ret
lds
mov
jne
mov
push
mov
cwtl
mov
stos
adc
nop
fsubp
xchg
sbb
push
sti
inc
ss
pop
test
mov
shlb
jae
out
and
adc
sub
stc
lds
xchg
xor
lods
or
arpl
inc
jae
es
sub
js
push
lods
enter
insl
sub
mov
in
ret
stos
enter
jbe
inc
or
adc
push
add
mov
pop
mov
repz
clc
iret
inc
and
fisubrl
adc
movsl
dec
enter
mul
push
scas
xor
xor
add
out
ss
or
aad
daa
mov
cltd
lret
mov
jno
push
mov
adc
and
mov
and
je
or
jbe
movsl
sbb
jns
cmp
cltd
jo
dec
lods
loope
insl
stc
popa
insb
xchg
loop
cmpsb
add
xchg
pop
mov
repz
push
notb
dec
mov
sti
cmp
ljmp
add
sub
xchg
loopne
add
pop
and
lahf
call
lock
insl
outsl
sarb
fwait
loope
mov
popa
cmpsl
int3
cltd
test
inc
mov
or
popf
dec
loopne
inc
or
pop
cmpsb
mov
ret
sbbl
jbe
test
hlt
jnp
pop
add
jne
adc
popf
in
sub
push
arpl
or
and
and
addr16
mov
test
or
popf
shll
mov
push
dec
mov
ficomps
movsl
pop
popf
icebp
sbb
push
adc
dec
mov
inc
push
jno
fdivrs
movsl
mov
inc
add
sub
add
sbbl
in
mov
dec
adc
add
fwait
bound
cli
nop
test
add
popa
dec
and
lods
pop
popa
or
icebp
sbb
mov
aaa
add
xor
push
lods
jg
ljmp
dec
sbb
mov
mov
mov
xor
inc
insb
mov
push
mov
pop
sbb
daa
movsl
ror
sahf
push
movsl
jnp
mov
pop
pop
or
not
lock
cmp
adc
shll
mov
pop
and
stos
add
add
pop
aas
pop
xor
pop
ds
std
sbb
lret
nop
fstpl
out
and
pop
jo
mov
mov
out
rcll
pushf
sub
pop
gs
cmp
pop
roll
rcrb
fucomi
repz
rcll
imul
enter
dec
hlt
xchg
aad
cmp
sub
ljmp
repz
sub
xlat
push
pop
cmp
lret
fmuls
mov
pop
lea
sti
outsb
in
sbb
and
movsb
mov
data16
imul
sbb
movsl
daa
add
pop
sub
xor
and
cs
inc
subb
sbb
fwait
xchg
mov
lret
mov
inc
jne
sarb
outsl
mov
outsl
adc
push
push
test
mov
je
lret
jno
fildl
xor
in
adc
or
loop
scas
push
shll
std
jmp
mov
incl
lcall
jno
out
adc
cmpsb
incb
inc
mov
adc
aaa
loop
loop
push
stos
aaa
inc
lret
sub
push
xchg
in
mov
mov
mov
mov
jns
xchg
push
jp
enter
or
lods
mov
pop
sub
push
insb
dec
inc
pop
je
sbb
jbe
fidivs
insb
or
cmpsb
xchg
dec
push
xchg
arpl
test
push
outsb
js
scas
leave
xchg
adc
stos
ljmp
xor
and
sarb
les
cmp
xchg
cmp
mov
cmpb
rcrb
push
pop
inc
or
stc
push
loope
xchg
inc
je
push
xchg
cld
insb
adc
push
cmp
orb
out
into
fdiv
sbb
aad
cmp
push
rolb
sahf
mov
and
nop
xchg
ljmp
cmp
int
push
sbb
outsb
xchg
outsb
add
mov
int3
mov
mov
repnz
lods
fxch
mov
fstl
sub
pop
outsl
jle
pop
push
xor
lcall
cwtl
mov
add
aaa
test
mov
daa
sub
cld
jp
push
ret
imul
mov
add
push
loope
mov
int
mov
sete
push
popf
dec
aam
add
fstps
pop
sub
mov
in
nop
fwait
pop
and
into
daa
rcl
movsb
andl
repnz
and
inc
int3
or
xor
jmp
push
pop
js
fwait
aaa
loope
adcl
dec
add
adc
push
add
and
cmp
xor
mov
rol
push
imul
and
pop
rcll
push
scas
aaa
xor
dec
pop
mov
push
out
lock
mov
lahf
cmp
xchg
cwtl
adc
ljmp
add
sti
lahf
fisubrs
cmp
xor
mov
sub
adc
test
xor
xor
xchg
inc
iret
cmp
rcl
add
enter
loopne
je
mov
mov
sub
dec
cmp
mov
outsl
xor
daa
fsub
push
dec
adc
dec
clc
xor
out
adc
add
sbbl
aas
das
iret
xchg
xchg
and
push
imul
pop
xor
fsubl
popf
sub
movsb
shll
mov
mov
xlat
das
or
rcrb
inc
add
or
sub
mov
sbb
pop
ret
mov
pop
lds
xchg
sub
and
xchg
out
std
data16
push
push
or
and
and
and
imul
cwtl
and
pop
lret
push
jae
mov
into
popl
inc
pop
repnz
fcoml
hlt
mov
adc
lods
loopne
jecxz
push
aas
xchg
xor
jg
mov
test
fmull
jle
shr
adcl
pop
sub
push
loope
jns
jl
mov
and
out
out
mov
mov
cltd
fs
fst
dec
scas
xor
stos
sub
sub
pop
jp
icebp
adc
cmp
ret
cmpsb
dec
outsl
pop
cli
add
mov
jg
dec
jl
sahf
cld
int3
in
sbb
loopne
dec
pcmpgtd
dec
cli
pop
out
mov
out
xchg
xchg
mov
loope
mov
ja
and
mov
inc
dec
push
sbbb
sbb
jge
test
les
enter
sbb
je,pt
sub
jno
insb
cltd
push
repz
loop
cltd
mov
pushfw
dec
mov
cmpsb
pusha
ja
fldenv
push
jb
xchg
cmp
pop
sbb
push
gs
sub
movsl
testb
call
mov
inc
enter
aas
ffree
fs
inc
cwtl
xchg
lods
xchg
sbb
pop
or
and
fistpl
adc
pop
sahf
pop
aas
test
clc
sbb
imul
orl
xor
in
mov
aas
je
out
xor
fcoms
pop
outsb
jmp
cmc
cmpsb
xlat
or
inc
inc
dec
stc
jo
xchg
push
sahf
cmp
inc
int
and
cs
pushf
loopne
je
adc
jecxz
popf
dec
gs
aaa
push
outsl
icebp
insb
insl
sub
bound
mov
inc
xchg
push
add
test
xchg
scas
ljmp
mov
xor
lds
xor
shlb
push
cmc
ja
lock
add
jno
pushf
mov
dec
aad
setle
cmp
cmp
push
and
divl
loop
jecxz
lcall
test
imul
pusha
xchg
push
imul
pop
pusha
jnp
in
push
mov
sarb
push
add
xor
jp
or
in
mov
xor
mov
mov
dec
ret
ret
dec
and
dec
jb
and
les
pop
mov
mov
or
repz
inc
scas
pop
jnp
xchg
outsb
jl
inc
pushf
add
mov
aas
in
cmp
fsubs
in
shlb
mov
imul
sbb
pop
js
test
bound
lea
mov
or
push
setbe
ljmp
push
xchg
dec
jp
mov
into
cmpsl
test
bound
cmp
es
into
xchg
add
in
or
pop
outsb
mov
dec
adc
mov
xchg
mov
jno
imul
aad
mov
iret
inc
and
pop
mov
xor
jle
and
outsl
lahf
lock
inc
xor
add
sbb
and
ss
xchg
push
sti
mov
daa
jecxz
loop
in
or
adc
nop
cmp
pop
pop
insl
and
jecxz
loopne
enter
pushl
ret
xchg
mov
fstp
and
insb
pop
inc
xchg
xor
sub
into
call
test
js
mull
dec
into
aad
pop
cwtl
ret
jle
jae
mov
push
cmp
hlt
xchg
inc
idivl
mov
rclb
inc
out
or
xchg
cmpsb
dec
xchg
inc
pop
andl
jo
stos
cltd
mov
add
mov
cwtl
fsubrl
mov
add
jp
mov
and
das
and
sti
push
sub
sbb
pop
xor
aam
mov
jmp
test
xchg
inc
movsl
xchg
and
fcomps
mov
movsb
mov
insl
ljmp
mov
and
in
adc
bound
iret
push
mov
stc
ret
and
cmpsb
je
test
pop
int
int3
dec
and
repnz
inc
xchg
vmulpd
cmp
jp
adc
imul
cmpsb
out
loope
pop
and
push
add
xor
lcall
dec
dec
into
iret
ret
xor
clc
adc
dec
insl
lock
mov
sub
jb
inc
jmp
add
test
xor
or
clc
mov
js
test
xchg
insl
insl
fsub
mov
rcrl
cmp
rolb
add
pushf
cmpsb
jnp
dec
dec
cmpsb
popa
test
ljmp
mov
clc
jl
ljmp
sub
repnz
mov
aad
aaa
addr16
das
lret
addr16
mov
dec
pop
inc
dec
jno
push
popf
dec
and
or
jl
shl
mov
lods
sub
jo
jno
ret
sbb
dec
outsb
inc
push
mov
and
test
aad
lods
je
mov
fsubrl
ret
test
xchg
add
push
xchg
ds
pop
push
icebp
push
xor
std
mov
repnz
movsl
push
mov
add
imul
jne
cmc
stc
mov
int3
ret
jnp
inc
mov
xlat
xchg
and
pop
xlat
mov
mov
shll
xor
sbb
inc
and
ret
cmp
mov
mov
mov
mov
xchg
js
xor
out
movsl
ret
inc
cmp
loop
cwtl
popa
fisubl
sub
dec
cmp
xor
leave
outsb
test
stos
stos
adc
mov
ds
dec
enter
xchg
add
push
shlb
add
aad
das
xchg
sbb
roll
fwait
mov
pop
push
ljmp
dec
or
ret
pop
adc
loop
test
push
mov
push
fucomi
mov
and
fstpt
and
cmp
nop
test
and
iret
sbb
inc
or
jno
adc
or
mov
mov
jb
inc
mov
popa
stos
mov
push
cmp
aad
and
xchg
inc
jle
int3
arpl
aaa
loope
mov
fildll
int
bound
in
sbb
xchg
lcall
sub
adc
pop
xor
mov
pop
pushf
pop
xor
inc
xchg
lea
mov
xlat
shl
push
call
cmp
mov
aas
fsubs
push
sbb
xor
xchg
sub
loope
jae
inc
adc
push
js
xlat
dec
or
mov
jb
fnstcw
lock
lods
sarb
xadd
imul
mov
sub
imul
shrl
into
inc
jb
mov
inc
and
mov
lods
sub
xlat
les
mov
dec
subl
stos
fs
jae
ds
sub
mov
or
push
push
xchg
std
leave
jns
notl
stos
imul
sub
popf
adc
fnstenv
sbb
mov
sub
pop
mov
popf
cmp
clc
test
repz
daa
inc
stos
jb
xchg
and
jge
pop
sub
repnz
xor
pushf
int
push
data16
pusha
imul
dec
mul
adc
into
movl
cltd
addb
clc
sbb
stos
or
sbb
cld
dec
adc
lods
movsl
lock
lret
out
test
xchg
mov
jle
leave
jnp
in
mov
mov
gs
out
cmp
scas
dec
dec
xor
std
pop
xchg
cmp
pop
mov
push
jle
cltd
fsts
jnp
sbb
lret
fnsave
sub
or
cwtl
xchg
xor
pushf
sbbb
nop
jb
pop
mov
add
aad
scas
fwait
cli
fdivs
lock
std
mov
add
clc
andl
pop
inc
cmpl
test
lret
sti
clc
pop
mov
cli
lcall
rcrl
int
inc
push
les
arpl
incl
lret
mov
fwait
jle
andl
cmp
dec
xor
pop
jne
arpl
movsl
mov
inc
jp
cltd
mov
xor
sahf
movsl
scas
cmc
jecxz
jp
lds
inc
and
in
sbb
popf
bound
sub
pop
fs
imul
scas
xchg
fs
leave
xor
and
test
sub
arpl
mov
mov
mov
rorl
mov
sub
out
idivb
inc
hlt
push
mov
or
xchg
pop
stos
mov
sbb
movsl
xor
pop
mov
mov
and
cmpsb
dec
fdivl
xlat
jmp
jp
mov
adc
xchg
pop
out
test
imul
sbb
arpl
jge
lds
and
stc
pop
add
sub
data16
lret
aaa
lret
addb
push
dec
cs
xchg
js
and
cmpsb
xor
int
aad
cmp
pushf
stos
xchg
mov
imul
jns
pop
shlb
add
sahf
pushf
adc
ret
out
inc
mov
add
inc
stos
and
loopne
lds
mov
push
and
leave
push
pop
or
in
mov
xor
pop
cmc
sbb
fdivr
ds
cmp
shrd
fnsave
les
or
xor
cmpsl
mov
push
pop
fidivl
xor
jp
fwait
repz
or
dec
fwait
jmp
dec
fcmovnbe
mov
or
enter
insb
nop
cmc
in
int
jne
mov
add
std
sub
xchg
jmp
inc
add
mov
outsb
or
pop
stos
ljmp
add
cmp
cmp
lahf
push
sub
or
inc
jge
xchg
xor
xor
shll
jnp
je
jecxz
inc
sbb
test
sahf
sbb
mov
mov
and
or
jbe
inc
leave
andl
fsubl
lahf
stos
stc
stos
loope
ss
sub
test
cwtl
push
js
enter
and
rcrb
scas
cltd
mov
repnz
cltd
rcrb
and
int
add
js
ds
mov
subl
add
ds
sbb
dec
xchg
cli
pop
std
cmp
in
mov
and
sub
xor
ds
insl
arpl
mov
mov
sbb
aad
repnz
fistl
cmpsl
cmp
sub
dec
jnp
negl
cltd
and
imul
pop
mov
outsb
pusha
inc
in
inc
sbbl
sub
cmc
sub
in
cmp
jecxz
inc
popa
repz
je
inc
out
icebp
dec
cmp
lods
lods
dec
dec
jno
pop
xor
or
xchg
sub
push
frstor
sbb
jno
cmp
xchg
cmc
sbb
lock
mov
pop
mov
mov
and
gs
xchg
decl
shlb
inc
arpl
xlat
dec
rorb
out
lahf
sbb
push
cmp
insl
dec
es
test
xor
sbb
scas
jle
sbb
clc
in
flds
ret
addr16
pop
mov
cmp
sub
xor
lret
rclb
outsl
xor
xchg
dec
jp
loop
jl
stc
out
or
cmp
xchg
test
ficoml
dec
xor
mov
out
in
sbb
jae
pusha
imul
adc
bound
insb
sbb
aam
imul
clc
lods
sub
jbe
scas
adc
jns
ja
jb
xlat
out
pushf
push
push
jle
mov
sahf
mov
cli
jl
aaa
sub
das
jle
shrl
inc
xchg
mov
inc
lahf
aaa
popf
or
insb
sbb
cltd
adc
jl
loopne
fstpl
sub
and
int
jp
jmp
push
imul
mov
test
jmp
in
sbb
cwtl
sub
or
mov
lsl
pop
pusha
cmp
test
loope
pop
mov
mov
insb
call
je
adc
lods
ficompl
inc
bound
jp
mov
jo
sbb
xor
sub
push
sub
enter
jb
imul
arpl
push
movsl
in
pop
or
lock
inc
add
or
ret
push
mov
shlb
add
je
mov
pop
loope,pn
push
cmp
arpl
pusha
into
and
push
cmp
and
pop
and
fildl
mov
jmp
mov
or
aas
mov
hlt
cld
fdiv
into
xchg
and
stc
dec
xor
ficompl
icebp
stc
ljmp
data16
cld
cwtl
jns
add
xchg
mov
fs
sarl
sarb
icebp
adc
repnz
cs
iret
pop
dec
inc
data16
jnp
add
mov
mov
iret
outsl
xchg
cmpsb
cmc
inc
cs
in
ret
into
sbb
std
js
out
shll
xchg
xor
fcompl
flds
popf
aam
bound
inc
mov
movsl
push
imul
push
das
aad
mov
vpshufd
sub
pop
push
jbe
mov
cmp
xchg
jo
mov
scas
popf
jne
xchg
orb
ret
filds
jecxz
out
pusha
inc
inc
vphaddudq
in
inc
pop
icebp
xchg
jge
xor
and
daa
fnstsw
pop
inc
bound
fists
inc
rcrb
pusha
cmc
mov
and
jae
lods
xor
mov
shlb
ja
addr16
scas
ret
outsl
fs
lds
mov
sbb
dec
xchg
jns
inc
test
inc
insl
bound
mov
cs
data16
cld
sbb
xchg
test
rorl
movsl
decl
adc
into
imul
jle
call
in
xor
dec
mov
and
int3
inc
xor
lods
sub
jb,pt
pop
test
jmp
jns
lcall
xorb
fs
mov
cmp
inc
int
and
lcall
les
in
xor
mov
hlt
test
mov
bound
cmp
mov
sub
mov
fisubl
xor
push
xchg
push
xor
aaa
jl
mov
mov
push
push
test
je
std
pop
pop
jae
or
cli
pushf
cli
sub
adc
movsb
pop
pop
push
test
mov
push
xlat
or
or
jge
xlat
jle
adcl
cmpl
clc
out
pop
shl
inc
fdivl
xchg
fcomi
lods
loopne
das
test
cmp
out
je
in
mov
mov
sbb
in
popf
outsb
scas
dec
add
mov
leave
inc
std
and
mov
pushf
mov
sub
mov
out
lcallw
sbb
int3
push
fcompl
icebp
ret
mov
pop
test
mov
test
push
fisttpl
jns
movsl
push
sar
dec
and
cmp
push
sub
lds
stc
clc
jnp
shrb
mov
pop
insl
lods
inc
loopne
push
jl
jb
mov
sbb
shlb
outsb
lcall
insb
arpl
jecxz
adc
cmpsb
cltd
or
cmp
stos
pop
mov
add
cmpsb
imul
rorl
and
pop
repz
jno
cmp
adc
loopne
imul
mov
je
pop
stc
loop
arpl
lcall
arpl
test
mov
ljmp
mulb
mov
fcompl
iret
cmpsl
aad
sub
dec
mov
cmp
adc
popf
adc
clc
pop
out
idivl
test
ljmp
cmp
pusha
xchg
rorl
inc
sti
dec
cmpsb
call
rorl
sbb
stos
sub
jno
adc
out
addr16
mov
push
jp
push
out
jne
pushf
stos
lods
ficomps
popf
adc
xchg
pushf
adc
xchg
sbb
push
xor
gs
negb
jg
jp
jp
xor
lods
fmuls
cmp
mov
out
push
addr16
int
mov
stos
pop
mov
xor
inc
cmp
xchg
shlb
loopne
scas
gs
pop
mov
inc
mov
dec
aaa
ja
mov
mov
add
xor
cmp
xorb
addr16
aam
push
sbb
cwtl
aam
or
sti
jno
pop
inc
xchg
adc
inc
js
xchg
add
inc
jns
mov
mov
dec
mov
pop
ret
add
adc
sbb
sbb
jns
rolb
and
adc
add
cmpsl
leave
rorl
les
cmp
out
out
push
push
cmpsb
jne
mov
jmp
xor
cli
push
imul
xor
mov
adc
mov
inc
ror
enter
out
in
cmp
js
mov
mov
cwtl
jnp
adc
dec
shll
lret
out
imul
sub
outsb
jnp
fiadds
shll
push
out
scas
push
imul
inc
insb
or
mov
add
or
cwtl
mov
pop
out
in
adc
lods
and
fistpl
into
aad
and
xor
inc
mull
pop
popl
sub
xchg
jnp
dec
fimull
or
scas
jl
movsb
mov
inc
nop
dec
stc
pop
add
and
cltd
aam
xchg
clc
mov
or
repz
sbb
lock
sub
mov
sbb
ret
in
jecxz
pop
stos
jbe
daa
dec
sub
test
int
sbb
sahf
je
lea
loop
dec
add
jmp
mov
add
fwait
dec
dec
inc
gs
jne
mov
xlat
dec
dec
lods
add
mov
mov
ljmp
sub
cmp
mov
mov
test
adcb
mov
mov
or
jns
cmpsb
mov
subb
mov
jo
insl
add
fnstenv
mov
imul
adc
sarb
mov
bound
int3
mov
push
xor
dec
lahf
ret
adc
inc
test
adc
xor
mov
sub
lds
push
rcrl
ret
rcrb
pop
in
pop
in
xchg
dec
pusha
push
and
mov
push
and
push
inc
pop
pop
lds
xor
loop
lret
das
or
ljmp
or
mov
dec
jecxz
jne
add
ret
daa
outsb
jmp
jp
or
pop
in
xchg
test
sti
repz
sub
cmp
pop
push
adc
cs
mov
or
jae
xchg
sahf
inc
inc
inc
pop
sbb
mov
iret
leave
in
out
adc
cmc
mov
aad
sti
fidivs
loope
cs
pusha
dec
dec
sub
mov
add
mov
jnp
or
repz
mov
fnstenv
or
xchg
fildll
fbld
push
add
jne
push
sub
repnz
imul
cs
or
int
mov
jb
stos
xor
shrb
cltd
mov
sub
scas
add
or
sub
dec
shlb
imul
jo
dec
pop
pop
inc
push
roll
ljmp
fs
addr16
xor
cmp
rcll
or
and
loope
fsubrs
inc
jp
call
cli
add
mov
in
cltd
jo
mov
test
mov
fimuls
pop
out
jmp
cmp
mov
aad
mov
in
sub
add
pop
jle
lret
fadds
test
lret
aam
call
mov
vpsrld
xchg
jp
sbb
insb
mov
pop
lcall
lock
xchg
scas
mov
rcll
fists
inc
cmc
stc
stos
fisubrl
xchg
ljmp
sbb
imul
cmp
pop
push
push
adc
mov
or
jg
lcall
dec
inc
xor
jmp
sbb
js
idivb
mov
inc
jmp
xchg
sbbb
mov
adc
sub
outsb
push
lods
xchg
bound
dec
pop
mov
inc
add
gs
push
leave
inc
mov
into
iret
xchg
imul
cmp
data16
ja
add
insb
leave
fwait
mov
hlt
mov
clc
addl
mov
out
pop
movsl
mov
push
and
adc
loope
loopne
repnz
shrb
sub
daa
sbb
pusha
sub
inc
mov
push
sub
adc
iret
jl
in
xor
outsb
jle
jle
aad
in
movsl
repz
popf
push
ljmp
sub
jne
cld
lea
pop
jle
mov
inc
cli
adc
aaa
xor
push
lret
dec
dec
popa
push
fidivrl
stos
in
jae
add
repnz
jecxz
mov
aad
sub
faddl
jb
and
push
sbb
push
sbbl
insl
mov
in
xor
shll
pop
mov
cs
pop
loop
icebp
cmp
mov
push
xor
mov
in
jge
add
xchg
add
sbb
mov
hlt
inc
hlt
or
mov
jle
imul
fmul
inc
jmp
dec
movsb
or
push
or
ret
push
dec
insl
test
or
cld
jbe
cwtl
fists
imul
out
scas
jo
addl
movsl
mov
xor
orl
and
pop
jl
es
stos
dec
xchg
push
adc
pop
js
lret
andb
sub
push
pop
jl
stos
cmp
test
ret
adc
xchg
sbb
push
movsb
jb
lods
xor
mov
test
cmp
mov
rclb
inc
aad
xchg
push
xor
sbb
mov
aas
es
xor
xchg
inc
jle
sub
add
add
xchg
xchg
push
fs
xchg
xchg
dec
or
lea
push
pop
sbb
push
mov
cmpl
lahf
sub
and
mov
jg
fistpl
ja
aam
sarb
lock
out
jl
push
pop
jo
aaa
movsb
mov
sbb
mov
add
addr16
pusha
or
jo
fmul
xchg
add
jns
xor
bound
mov
jmp
cltd
pop
xchg
in
aaa
lret
pop
mov
test
xchg
inc
imul
mov
clc
inc
out
sub
scas
or
loopne
lahf
cmp
xor
xchg
adcl
lahf
inc
js
adc
mov
mov
sbb
inc
aaa
and
xor
and
jb
daa
adc
in
js
or
sti
or
add
lock
fsubrs
or
call
iret
cmpsl
push
test
adc
lcall
rorb
gs
dec
dec
and
mov
push
cltd
mov
pop
cltd
pushf
dec
xor
movsl
aad
fstps
out
add
imul
das
mov
and
fcomps
decb
add
push
pop
icebp
test
call
mov
ret
gs
mov
adc
cld
pop
jno
lods
shll
inc
dec
sar
inc
dec
adc
imul
popf
push
jne
fisubrs
xchg
pop
rcll
clc
in
aam
and
test
add
dec
mov
repz
sbb
adc
inc
mov
mov
or
push
and
pop
or
fisubrl
bound
or
xlat
shl
fsincos
ss
fsub
fsts
jmp
ficoms
push
stos
fs
cmp
jmp
pop
movsb
or
cwtl
cmp
popa
lcall
push
mov
and
cld
push
xchg
repnz
insb
fucom
add
mov
and
xor
sbb
pop
cmpsb
leave
push
push
mov
push
fiadds
es
add
sub
stos
jg
mov
nop
cld
sub
adc
lret
inc
mov
frstor
icebp
jns
incl
aas
clc
fisubs
fldl
adc
mov
push
push
out
jae
andl
sub
sbb
icebp
arpl
lcall
test
daa
aam
jle
cli
leave
and
addl
add
lds
in
dec
mov
shrb
jb
rolb
pop
mov
orb
and
dec
jmp
pop
loope
rcll
sub
lcall
cmp
adc
xor
pop
jg
lret
add
pop
adc
xchg
mov
xor
adc
cmpsl
xchg
dec
mov
jns
pxor
stos
jns
dec
or
leave
movsb
sbb
loopne
jecxz
add
scas
les
cld
push
stc
push
cwtl
into
sbb
addr16
cmp
lahf
mov
fisubs
mov
leave
add
jno
jle
mov
test
push
stos
leave
iret
jp
add
std
out
call
ret
pop
test
in
adc
faddl
push
xor
pusha
xchg
in
es
inc
fbld
mov
adc
inc
arpl
rorb
cmpsl
mov
dec
mov
ficompl
rcrb
ss
test
xlat
mov
pusha
enter
outsl
lods
out
in
jae
aas
push
call
add
pop
std
pushf
and
xor
cmp
xor
movl
add
iret
repz
loope
stc
xor
das
mov
ds
add
mov
data16
adc
and
xor
push
xchg
and
sub
pushf
stos
push
or
clc
daa
fsts
mov
fimuls
das
out
sub
or
cmp
mov
dec
dec
inc
mov
jns
push
loopne
lds
jbe
mov
int
push
sub
movsl
add
or
popa
scas
pop
test
call
shr
push
or
push
es
adcb
in
inc
sbb
daa
mov
mov
dec
popa
mov
fdivs
punpcklwd
ds
clc
jp
ret
xor
imul
loop
test
pop
sub
jbe
adc
inc
adc
cmp
push
insl
pop
push
ja
push
ret
cltd
cmp
sahf
jae
out
pop
and
sbb
pop
add
adc
aaa
int3
fisttpll
rorb
dec
call
inc
pop
push
inc
jnp
clc
add
mov
cmp
roll
adc
sub
push
scas
mov
sbb
rorb
mov
add
pop
or
pop
pop
mov
arpl
cmp
xor
pusha
andl
jo
add
mov
fidivrs
aad
js
hlt
sbb
mov
or
xor
ret
cmp
jnp
divl
inc
pop
jmp
lahf
sti
bound
inc
add
outsb
ljmp
or
lea
mov
sub
jnp
xchg
cmpsl
and
fisttpl
dec
push
arpl
shr
out
addb
pop
mov
ljmp
xchg
clc
cmp
decb
pop
inc
popa
das
cmp
ss
movsl
out
add
push
filds
test
mov
jl
iret
push
aam
loopne
test
aaa
pop
rcrb
lock
pop
sbb
mov
arpl
rorl
fcoml
es
mov
cmp
out
xor
xchg
mov
stc
dec
jnp,pn
inc
nop
sbb
pop
and
mov
mov
filds
mov
popa
cmp
push
lret
mov
add
mov
es
inc
inc
pop
call
aad
push
test
clc
mov
mov
cs
push
push
sbb
mul
mov
or
mov
aad
lret
mov
scas
cli
flds
or
or
sub
lcall
mov
arpl
jo
popf
mov
mov
dec
inc
movsl
das
rol
hlt
shll
mov
sti
pop
jmp
jl
sbb
mov
push
test
je
ret
cmpsb
cmp
shrl
xor
shlb
stos
js
or
push
pop
xchg
jae
add
push
inc
imull
mov
pop
jl
jle
adc
leave
outsl
dec
rcr
mov
inc
popa
jbe
cld
inc
mov
stos
test
mov
sub
pop
es
xchg
fwait
adc
cmp
out
sub
xor
dec
mov
and
cmc
mov
xor
repz
lcall
xor
lret
inc
or
fsubl
xor
lahf
and
jge
test
adc
loopne
mov
daa
lock
mov
pop
mov
fwait
and
cltd
pop
and
lods
movsb
jo
mov
frstor
outsl
xor
loop
repz
xor
mov
pop
scas
rorl
in
addl
mov
or
jl
mov
sub
cmp
inc
and
jbe
iret
std
mov
or
jmp
jne
imul
cmc
adc
psrad
mov
popf
out
enter
arpl
inc
push
or
mov
adc
add
out
jl
enter
adc
mov
aas
lods
repz
clc
sub
mov
pop
fdivr
aas
clc
out
cltd
jle
sbb
inc
adc
sub
pop
pop
sub
sbb
sahf
gs
addr16
xchg
xor
sarb
xor
stos
dec
push
push
leave
mov
jne
stos
cmp
and
xor
mov
jbe
xchg
les
lods
push
lahf
xchg
jns
ja
fisttpl
cld
ret
fsubs
push
aas
jecxz
add
xchg
pop
fs
gs
clc
leave
dec
sahf
cmpsb
xor
fs
filds
dec
lods
and
mul
out
push
test
sub
add
fidivs
imul
ret
out
cmp
fsub
cmp
pop
test
in
jb
push
sbb
xor
add
xchg
xchg
hlt
cmp
and
xchg
xor
sub
fs
rcl
out
inc
jle
xchg
pop
fdivrs
mov
jne
out
lcall
idiv
mov
mov
lea
out
enter
xor
repz
stos
jmp
js
cs
rcr
mov
dec
rorb
mov
dec
lcall
pop
xchg
movsl
sbb
push
cld
xor
dec
push
xchg
popa
cwtl
or
into
int3
pop
push
shrl
icebp
add
lock
mov
xchg
cmp
bound
fadds
pop
adc
mov
sub
xchg
shlb
and
mov
cmpsb
xor
sub
aad
outsl
push
mov
rcrb
or
mov
dec
adc
mov
pop
ljmp
aas
cmp
mov
jmp
xchg
sub
jns
inc
in
fcomps
jl
cmp
xchg
insb
jbe
dec
jmp
addr16
mov
ror
sub
prefetchw
xchg
popf
paddusb
xor
sub
faddp
testb
ret
sub
daa
xorl
pop
pop
popf
mov
int
sarl
adc
mov
loop
pop
jge
bound
pop
cmp
push
roll
mov
mov
mov
fnsave
fistpl
xchg
iret
pushf
ds
push
aam
adcb
hlt
loop
outsb
shll
movq
push
and
dec
in
mov
enter
hlt
mov
jmp
ja
inc
mov
das
in
addr16
jne
mov
mov
adc
mov
sti
test
aam
in
fisubl
hlt
dec
add
mov
ja
mov
roll
sbb
xor
lahf
xchg
icebp
push
sub
pusha
mov
mov
and
fsubrl
xor
ret
into
mov
lahf
in
xchg
push
and
test
xor
jmp
icebp
adc
push
lret
stos
pop
lds
aam
mov
cmpsl
jb
xchg
cwtl
rclb
cmp
jb
xor
xor
cwtl
lock
mov
scas
adc
mov
sbb
jp
insl
inc
aad
or
mov
ljmp
cmp
xchg
cmc
xor
lods
or
inc
lea
fwait
xor
adc
fwait
xchg
adc
outsl
sbb
cmp
jae
std
sub
int3
clc
ss
frstor
push
int3
add
push
xchg
push
mov
cmpsb
loop
out
jge
xchg
jno
xor
mov
stc
cltd
pop
cmp
enter
test
push
dec
mov
imul
rcrb
rolb
inc
jbe
xchg
mov
adc
mov
clc
in
iret
sbb
xchg
cwtl
js
das
jle
in
jne
dec
jge
push
test
xchg
inc
int3
ja
mov
sbb
cmp
aas
or
mov
and
shlb
dec
aad
cmpsl
sbb
bound
scas
mov
in
push
cmp
movsb
imul
mov
or
inc
lock
leave
inc
lock
shlb
inc
adc
mov
cld
int
mov
add
xor
jbe
enter
push
sbb
out
push
stc
inc
fnstsw
jge
imul
shrl
cmp
popa
inc
xchg
sbb
mov
dec
dec
cmc
adcl
fcomip
mov
fsubp
nop
mov
sbbb
pop
mov
cmp
call
in
mov
jo
iret
aam
insb
add
rol
shrb
nop
stos
push
aas
pushf
xor
fisubs
push
pop
mov
cli
es
nop
or
pop
xchg
pop
lock
mov
shrb
jecxz
out
call
roll
xchg
int3
dec
mov
lods
call
icebp
js
jne
pop
jb
cli
pop
or
rclb
mov
push
outsb
mov
call
aam
fnstsw
aam
das
in
add
xchg
push
cmp
mov
pop
out
xchg
xchg
lahf
ret
cmp
orl
bound
cmpsl
inc
sub
lcall
adc
jbe
cwtl
aaa
sbb
clc
mov
adc
sub
mov
mov
jge
subl
ds
adc
inc
and
dec
inc
or
pop
pop
mov
pop
je
inc
shll
ds
cmpsb
sbb
out
cld
popa
push
jp
fs
xchg
mov
push
push
or
movsl
dec
les
adcb
loopne
into
int
test
inc
dec
cmp
inc
dec
movsb
or
and
xor
pop
loop
mov
sbb
insl
pop
jl
scas
cmc
call
and
inc
enter
inc
scas
dec
arpl
mov
jp
hlt
mov
fdiv
stos
stos
test
lret
data16
aaa
addl
mov
stc
fwait
xchg
mov
and
cmp
mov
inc
stos
cmp
rcrl
and
adc
mov
jl
ret
pop
xlat
in
outsb
ret
in
inc
cmp
xchg
popa
add
push
shrb
clc
or
xchg
sub
fs
in
xor
icebp
fists
cwtl
jecxz
xor
popf
cld
mov
mov
sub
push
mov
mull
add
decb
sahf
pop
ja
pop
cmpsb
push
cmpsl
mov
out
imul
aam
nop
notl
push
cmp
hlt
xor
out
loop
xchg
mov
push
adc
cmp
dec
ja
lahf
or
xor
add
pushl
negb
mov
in
mov
out
fwait
xchg
lret
in
pop
mov
cmp
test
imul
xchg
notrack
sbb
stos
test
mov
push
cmp
jge
add
adc
push
jnp
les
pop
dec
or
xlat
aam
inc
mov
das
pop
jns
push
and
into
mov
and
sti
repz
dec
or
mov
pusha
cli
sub
dec
fnstcw
fsubl
cmpsl
hlt
add
clc
idivl
lcall
or
lods
lahf
sbb
xchg
je
push
dec
daa
jg
insl
xor
iretw
xchg
leave
repz
mov
test
fwait
jns
in
in
add
lahf
mov
pop
les
mov
mov
les
sbb
xor
shrl
test
mov
stos
xchg
adc
insb
pusha
scas
jbe
push
fs
lahf
out
push
aam
dec
ficomps
mov
add
mov
int
xor
icebp
std
mov
cld
pop
pop
pop
lret
lea
pop
add
mov
sub
dec
cli
xlat
xlat
adc
cltd
fisttpl
insb
dec
pop
ds
jg
lock
jae
shrl
fdivrl
lret
sbb
dec
sbb
mov
adc
stc
mov
ljmp
imul
pusha
test
mov
scas
rcrb
cmp
dec
mov
xlat
mov
pop
jecxz
mov
loopne
cmp
test
decb
pop
push
mov
adc
andnps
or
cli
mov
aaa
fildll
sbb
jle
jl
adc
out
or
and
mov
pop
mov
lods
rol
xchg
movsb
rcll
cld
and
pop
dec
or
pop
in
inc
imul
adc
fwait
scas
fiadds
or
xchg
pusha
out
lods
xchg
imul
and
xor
mov
popf
into
lret
mov
push
dec
inc
insl
ljmp
ret
andb
mov
test
dec
scas
jnp
mov
insb
adc
pop
fiaddl
out
orb
fcomp
xchg
mov
inc
sbb
int
mov
xchg
adc
mov
push
out
cmp
mov
shrl
adc
pop
push
and
cmc
xchg
and
pop
lcall
sbb
out
jnp
xchg
sysret
xor
and
pop
lret
lea
cmpsl
xchg
call
dec
aad
icebp
mov
mov
cld
push
xchg
into
mov
insl
add
mov
pop
lods
pop
sahf
mov
es
cmp
loop
in
sbb
and
adc
scas
or
jns
xchg
pop
sub
ds
sub
jge
rolb
arpl
dec
sbb
pop
scas
dec
into
std
sub
mov
dec
mov
jbe
pop
orl
mov
daa
mov
fnstenv
lcall
shrl
repnz
mov
leave
mov
jecxz
lds
bswap
roll
leave
mov
mov
fsts
roll
das
xchg
xchg
jle
sub
mov
pmaddwd
sub
jno
pop
inc
stos
jmp
fcomps
movntq
out
fs
repnz
out
mov
add
ja
mov
loop
mov
out
cli
stos
or
jae
xchg
dec
dec
inc
mov
insb
adc
push
mov
insl
jne
js
adc
mov
jno
mov
rol
orb
test
mov
cwtl
jge
je
cltd
cmpsl
jb
jge
std
mov
ss
imul
xchg
insb
aam
pop
jl
sbbb
and
gs
mov
bound
flds
xchg
sub
ret
in
xor
mov
les
add
dec
incb
ds
mov
jns
lock
frstor
imul
cltd
add
test
fidivrs
sbbb
ret
cltd
cmp
jle
and
jnp
out
shrb
push
push
jne
repnz
daa
lea
test
push
mov
add
fnstenv
test
nop
pop
pop
mov
or
cmp
imul
and
subb
add
pop
rcl
scas
sub
mov
test
iret
sbb
dec
insl
mov
xchg
in
aas
decb
jbe
sbb
cmp
pop
test
sbb
in
test
cmp
xchg
mov
les
fwait
pushf
pop
xor
sub
lds
dec
scas
gs
aas
pop
out
lock
neg
pop
lds
mov
call
lret
jbe
lea
pop
je
hlt
mov
cmpsb
push
je
dec
data16
xor
xor
test
std
int
imul
jno
cltd
ret
cmp
add
cmc
ret
dec
decl
inc
push
mov
mov
sub
mov
pop
jle
dec
mov
rorb
int3
add
aas
sub
fdivs
sbb
mov
movl
popa
mov
push
mov
rcrb
jae
imul
pusha
inc
adc
imul
fs
data16
es
sbb
fsubrl
testb
lret
adc
and
in
gs
mov
popf
lret
dec
xchg
lcall
shl
xor
xchg
mov
jb
cmp
push
push
leave
mov
imul
mov
jb
jg
icebp
aam
push
pusha
in
or
dec
xchg
and
xchg
loope
dec
sarl
jb
dec
pop
pushl
out
jo
je
and
jmp
mov
outsl
inc
divb
cmpl
std
fsts
sbb
es
xchg
les
or
adc
es
rclb
stc
sbb
fiaddl
push
andb
ret
outsl
push
lret
jno
pop
pop
lods
jle
into
jmp
pop
pop
ds
xor
xchg
test
sub
loopne
inc
rcll
out
jle
inc
push
inc
imul
mov
jmp
mov
add
movsl
hlt
xchg
cld
dec
sub
adc
cmpsb
inc
int3
sti
shrb
sbb
inc
cmpsb
in
or
test
mov
ja
jne
cmpsl
sarb
es
outsl
mov
mov
fisttps
mov
and
or
sbb
repnz
sub
jo
jecxz
adc
out
push
jnp
mov
cmp
and
out
repz
inc
imul
fscale
mov
aad
aas
add
mov
ret
push
mov
ss
subl
sub
les
xchg
je
jns
xor
inc
cld
xchg
test
mov
cld
jne
lock
and
movsb
push
inc
inc
cmpsl
neg
test
xor
inc
imul
arpl
push
pop
cwtl
insb
or
je
mov
lds
shll
sub
mov
adc
dec
outsb
sub
jmp
mov
pop
ss
fiaddl
inc
mov
or
push
ds
cld
pop
cmp
pop
dec
addl
sub
int
les
cmp
mov
lret
sbb
add
mov
or
notb
add
repz
lods
push
jno
cltd
adc
ljmp
jo
dec
pop
add
outsl
shl
or
loope
adcb
and
xor
xor
pop
data16
dec
adc
xchg
mov
mov
xlat
imul
cmp
lret
inc
aam
xor
dec
cmp
or
aam
aad
push
add
mov
push
xor
movb
xchg
jo
rcl
rorb
mov
push
test
clc
xchg
mov
lahf
repnz
jb
ret
js
add
jae
stos
xchg
pop
xchg
fstpt
jecxz
xorl
daa
and
popa
std
add
mov
xlat
popw
lods
xor
cmc
das
sub
mov
lods
adc
stc
xchg
sbb
cmp
inc
dec
sub
sbb
push
loop
or
jo
loopne
std
pop
xchg
inc
and
xchg
mov
test
popa
sbb
cmp
xchg
jae
xor
sub
je
shr
mov
fwait
into
es
dec
lock
inc
cltd
cmp
and
sar
jl
sub
mov
jb
fstl
stc
les
xor
inc
sahf
jmp
movsb
cmp
adc
add
leave
push
adc
adc
mov
ja
add
jmp
test
jg
or
mov
mov
pop
jecxz
mov
ja
fisubs
scas
mov
negl
ljmp
data16
cwtl
inc
sub
or
subb
outsb
cmp
roll
jno
ficompl
adc
call
dec
ljmp
add
test
inc
dec
xor
and
lods
call
cmp
sbb
fadd
mov
mov
xor
pushf
and
push
pop
sbb
xlat
ret
aad
movsb
fs
shl
daa
or
or
pop
push
int
leave
jno
mov
pop
aas
dec
adc
movsb
add
dec
pop
outsl
orb
push
mov
bound
xor
dec
push
insb
lds
dec
inc
addb
jmp
push
jg
mov
std
enter
call
test
test
jnp
hlt
sti
frstor
push
and
or
fcmovne
xor
jmp
iret
pop
fst
pop
mov
in
movsb
popf
in
sar
dec
aaa
cltd
mov
incl
jbe
jb
sub
mov
jl
js
mov
pop
dec
fldcw
or
pop
cltd
xchg
repnz
mov
cmpb
or
jns
lds
test
and
or
lea
adc
dec
mov
push
add
hlt
sub
mov
dec
dec
adc
les
sarl
add
mov
inc
cltd
push
out
fwait
roll
pop
iret
enter
ret
or
scas
mov
es
xchg
and
ret
lea
xchg
jl
xchg
mov
fcmovu
cmpsb
out
loope
cs
les
mov
movsl
jb
jbe
ret
and
mov
dec
mov
xchg
fcompl
jbe
mov
rcrl
and
shrl
repnz
inc
or
sahf
fdivs
pop
imul
lret
xchg
adcb
mov
sbbb
cmp
mov
mov
lahf
sub
stos
push
add
mov
test
xchg
das
lret
adcl
rolb
shll
dec
in
dec
test
cmp
addr16
adc
jne
aaa
test
pop
cli
arpl
stc
lret
iret
jns
push
mov
adc
test
sti
mov
js
sahf
imul
cwtl
push
stos
incl
mov
or
cmpl
and
pop
and
arpl
aas
out
xchg
pop
sbb
cwtl
ret
cmpsb
cmp
cmpl
adc
aad
jl
outsb
int
push
push
xchg
xor
ljmp
inc
cltd
cmp
add
popa
outsb
push
or
mov
aas
push
xor
pop
add
jo
inc
rcrl
xrelease
jl
cmp
das
cs
jg
das
test
xchg
andnps
adc
or
adc
popf
sbb
call
shrl
inc
cwtl
ss
inc
aam
test
push
out
xor
arpl
jmp
gs
mov
adc
push
mov
add
fdivrl
test
in
mov
push
lea
cmp
fstl
cltd
loop
imul
mov
mov
xchg
dec
xchg
adc
call
ret
fucomip
outsb
movsl
mov
and
adc
fcompl
add
sub
lock
or
mov
cmp
adc
es
out
les
nop
adc
outsb
and
and
movsb
inc
jb
arpl
fdivs
sub
or
sbb
popf
dec
sub
jne
push
sbb
adc
jae
cli
shrb
xchg
sub
lea
lret
jae
movsl
fnstsw
enter
xchg
mov
movsl
mov
mov
xchg
sahf
subl
xor
cmpsb
inc
stos
repnz
xor
notl
push
push
test
inc
pop
pop
pop
iret
xchg
into
aaa
orb
ljmp
ds
mov
jp
dec
addl
loop
imul
hlt
ret
adc
popa
faddl
mov
ds
xor
scas
frstor
mov
cld
stos
mov
sub
mov
lds
fwait
mov
leave
inc
sahf
ftst
subb
test
mov
loop
sbb
lods
shr
xchg
sub
test
dec
xchg
mov
cmp
fimull
inc
orl
mov
repz
xor
imul
push
xor
movsb
cli
xor
nop
sub
icebp
add
dec
andb
lds
sub
lds
add
dec
cld
mov
cmp
into
lods
frstor
push
lcall
ficomps
sub
jns
inc
and
das
test
sub
pavgw
in
rsm
scas
ficoms
gs
mov
jle
rcrl
popf
cmpsl
cltd
cmp
mov
mov
enter
stos
shlb
pop
push
pop
xor
test
dec
mov
pusha
mov
sbb
xor
xchg
sub
in
loopne
jno
aam
mov
mov
jae
addr16
sub
es
or
cmp
int
mov
mov
mov
and
push
push
add
and
mov
jne
jb
sti
push
jmp
sahf
loopne
sbb
jmp
in
mov
enter
ficompl
sub
orb
je
fucomp
jp
test
fldenv
sbb
push
mov
sbb
and
pop
arpl
mov
lods
imul
cs
xchg
pop
push
jno
pop
scas
es
aad
fmulp
inc
ljmp
add
xchg
ret
idivb
cwtl
imul
imul
push
cmpsl
push
and
jae
jge
sti
mov
clc
mov
ja
push
aam
pusha
lea
mov
dec
xor
mov
fldt
addl
sbb
add
cltd
pop
dec
xchg
insb
fst
sbb
in
stos
lret
cwtl
xchg
xorb
or
rcrl
xchg
and
mov
add
adcl
imul
xor
or
inc
mov
and
sahf
ds
out
push
xchg
mov
add
jl
cmp
into
pop
pusha
addr16
scas
cs
add
leave
jle
mov
nop
icebp
call
add
nop
test
push
std
cs
pop
iret
push
push
das
test
arpl
bound
dec
stos
jg
xchg
ljmp
dec
jne
inc
outsl
xchg
cmp
imul
adc
test
inc
int
adcb
call
mov
push
sub
push
clc
aam
xchg
xchg
xor
mov
push
repnz
das
rcrb
mov
mov
jle
popa
test
pop
cs
mov
pop
and
xchg
rclb
mov
fadds
ja,pt
sbb
mov
out
mov
jno
pop
mov
fnstenv
es
iret
pop
push
xor
outsb
jmp
stos
pushf
idivl
inc
into
xchg
lcall
fmuls
cltd
sub
mov
in
movsl
jge
fisubl
cmc
sarl
test
loope
lods
fsubl
pop
sti
fs
lret
insb
sbb
repz
pop
testb
and
push
mov
adc
cmpsl
fildl
sub
inc
lods
ja
xchg
ds
push
andb
or
js
int3
fnstcw
xchg
push
xor
int
jae
push
dec
je
stc
add
lods
push
ss
fsubr
sbb
aas
outsl
jecxz
jl
fisttpll
hlt
push
jmp
push
or
or
mov
rcl
dec
dec
mov
test
cwtl
pop
mov
scas
dec
lods
mov
icebp
xor
lcall
ret
cmp
mov
in
hlt
enter
cmp
xchg
cmp
test
cmp
push
mov
dec
xchg
adc
nop
icebp
dec
lock
push
rorl
sbb
nop
outsl
push
das
dec
pusha
rol
scas
fcomp
aad
pop
add
or
pop
ffreep
push
pop
mov
dec
pop
inc
xor
popf
clc
pushf
ss
enter
mov
inc
cmp
adc
or
pop
pop
js
je
mov
push
inc
fdivrl
push
sbb
xlat
aam
adc
cld
mov
icebp
xor
adcb
jecxz
cltd
mov
fisttps
ficoml
lods
stos
orl
sbb
and
dec
sbb
scas
insb
test
cmpsl
into
adcl
bound
inc
dec
push
cli
inc
mov
fcomps
sub
sbb
lea
inc
mov
and
inc
je
cmp
aaa
cli
push
iret
sbb
test
popf
inc
xlat
movsl
xchg
icebp
mov
mov
and
aad
dec
xor
fdivrl
sbb
push
lds
in
mov
outsb
ret
scas
ret
add
inc
jbe
out
aaa
rcrl
xchg
popf
jb
sub
hlt
pop
or
rcll
xor
or
daa
adc
sub
jae
sbbb
or
mov
and
mov
cmp
aas
pop
add
test
mov
or
into
imul
mov
jmp
add
movsb
pusha
ss
cld
lret
ljmp
sbb
sub
imul
cmp
mov
in
mov
inc
test
filds
into
dec
sub
fnsave
into
iret
xchg
lds
sub
fsubr
nop
iret
inc
mov
push
out
rolb
daa
push
aad
aaa
and
xorl
mov
lods
xchg
cs
arpl
pop
repnz
cld
bound
adc
sahf
ljmp
clc
sub
bnd
and
rcll
test
xchg
pop
mov
addr16
imul
xchg
int
repnz
cs
push
sbb
xchg
add
outsl
in
sub
cpuid
adc
mov
cli
popa
jle
and
cmc
adc
jne
ret
div
cltd
or
inc
push
das
jno
dec
out
scas
jno
cmp
jns
jae
ret
fcmovnu
inc
and
sti
mov
cmc
sbb
pop
dec
ret
mov
mov
icebp
rcrl
jl
in
mov
or
adc
dec
mov
insb
inc
rcrb
fildl
pop
rolb
mov
pop
pop
sub
cmc
push
dec
jns
add
jp
mov
repz
jge
and
fldl2e
movsl
iret
xchg
adc
sarl
fwait
rcl
and
jne
loop
cwtl
sub
add
mov
addb
adc
lea
cmp
mov
scas
xchg
xchg
aam
xlat
pop
iret
sub
mov
mov
add
or
cmc
sub
mov
mov
push
stos
shlb
jno
ficomps
cmpsl
cmp
sub
sub
jmp
out
xchg
cmp
dec
mov
push
push
nop
arpl
dec
iret
xor
lea
cwtl
or
mov
test
jns
cmp
cmp
clc
mov
jbe
ja
shlb
add
test
mov
cld
std
sub
pop
inc
inc
fdivrl
imul
mov
push
jb
aas
cmp
cwtl
mov
aam
push
push
ret
and
mov
pop
push
mov
shrl
push
xor
fdivs
aad
movsl
push
inc
mov
lock
movsb
out
pop
pop
adc
popa
push
lcall
push
shrl
mov
and
mov
lret
lods
cmp
adc
sub
push
lret
mov
insl
ret
xchg
and
scas
adc
test
or
stos
inc
push
inc
pop
cwtl
cmp
das
mov
sub
push
icebp
add
sbb
push
out
inc
xchg
gs
dec
fstp
xchg
inc
test
sub
subb
in
mov
loopne
testb
xlat
mov
bound
xor
cli
adc
mov
and
cmp
fsubrs
xor
xor
in
pop
push
dec
outsl
dec
inc
xchg
or
mov
sahf
jns
sub
xchg
imul
call
push
push
push
test
stc
or
lods
sbb
and
out
adc
inc
scas
outsb
arpl
js
decl
sbb
cmp
cmp
jo
lret
insb
adc
ret
adc
xlat
sbb
mov
push
pop
sub
test
nop
stc
ret
jo
js
aaa
popa
jo
lods
sbbb
lds
stc
xor
or
ja
add
lods
inc
movsl
push
mov
jb
inc
mov
sbb
enter
mov
in
mov
in
mov
push
mov
push
scas
pop
cmp
adc
jbe
inc
addr16
mov
or
data16
mov
dec
sqrtps
push
out
dec
ljmp
fsincos
iret
insb
rclb
xor
pop
jb
out
and
jbe
repnz
sbb
fistl
fs
lods
test
leave
cmp
sub
imul
pop
adcb
sub
out
subl
icebp
ljmp
push
jl
jle
lahf
out
cli
add
adc
push
sti
in
imul
xchg
mov
adc
insl
and
cmpsl
and
movsl
xlat
cmp
pushf
xorb
mov
mov
bound
or
loopne
out
fimull
pop
mov
rcrl
jle
jne
inc
adcl
xor
call
and
shll
ja
xchg
and
in
mov
fistpl
out
push
cmp
push
in
mov
nop
sbb
jg
out
cmp
and
inc
rorl
jmp
sbb
pop
inc
xchg
shlb
xor
or
mov
add
jmp
inc
lret
ret
add
and
in
mov
fidivrs
mov
cmpsl
fisubrs
mov
lea
cld
lcall
stos
cmp
inc
loop
mov
test
lods
dec
xor
mov
xchg
add
mov
and
sbb
sahf
or
andb
faddl
dec
sub
push
loope
cmp
dec
mov
ret
xor
hlt
mov
sbb
push
cmpl
mov
add
nop
lcall
lahf
int3
cmp
fadds
jno
adc
mov
lcall
add
dec
cwtl
mov
push
andl
mov
pop
xlat
std
cld
mov
jmp
sbb
aaa
adc
out
push
push
jmp
pop
push
inc
jns
idiv
xor
aas
test
aad
push
or
push
ret
bound
cli
stos
stc
jae
daa
adc
cmpl
or
inc
or
lds
stc
jge
iret
cmpsl
lret
and
push
dec
or
outsb
inc
js
inc
ret
push
mov
xchg
gs
mov
pop
jle
or
imul
xchg
push
xchg
or
mov
data16
psadbw
sub
xchg
lea
and
xor
test
dec
test
cmp
cli
in
xchg
out
dec
std
jnp
sub
cmp
cli
test
mov
addr16
adc
in
out
xchg
jl
mov
pop
inc
stc
pop
xor
lds
mov
push
fimuls
sub
dec
les
push
jnp
jmp
sub
or
repz
ret
push
pop
out
jb
out
mov
lret
imul
fnstenv
call
aaa
pusha
mov
inc
adc
add
out
scas
or
pop
xor
xchg
aam
pop
mov
lea
test
jge
inc
xor
add
paddusw
popa
sbb
cmp
rclb
loop
stc
or
xchg
jo
insb
cli
data16
adc
push
push
jmp
push
aam
jnp
cmp
dec
or
ret
pop
sbb
stc
pop
pop
leave
jo
xchg
sbb
ret
les
xchg
bound
dec
adc
insb
lds
xor
repnz
xor
push
cmp
dec
sahf
jae
test
sbb
jmp
cmp
xchg
ss
in
stos
add
scas
mov
outsl
das
sub
push
jno
in
dec
loopne
pop
popf
inc
mov
mov
push
popa
out
sub
adc
shrl
outsl
fldz
sub
test
ds
add
sti
daa
fcoml
push
sti
lods
lods
fucomip
out
sbbl
jecxz
pop
mov
sbb
inc
popf
ret
stos
loop
idivb
mov
mov
jno
jle
xorl
faddp
jns
out
sti
popf
dec
sarl
insl
lret
lret
dec
pop
sbb
and
xorb
lcall
mov
testb
push
jle
sub
imul
out
fadds
in
jg
push
pop
add
push
lods
xchg
fdiv
inc
in
push
or
bound
pop
jg
aas
mov
pop
add
adc
stos
sbb
push
repnz
or
jge
dec
mov
fwait
push
dec
out
xchg
and
sbb
sbb
push
mov
jp
jg
inc
popf
pop
inc
jecxz
insb
subb
inc
xor
inc
push
jnp
fmull
aaa
xchg
repz
push
mov
outsb
or
jmp
ret
enter
mov
sub
sbb
pusha
lret
pop
xchg
jo
jecxz
leave
sbb
and
shlb
mov
loop
dec
xchg
xchg
loope
pop
or
or
xorb
mov
xchg
lcall
push
testl
push
pop
mov
iret
jo
pusha
xchg
outsb
push
and
out
in
cwtl
xchg
cmp
fildll
adc
xor
xor
roll
sti
inc
add
push
cmp
arpl
cs
std
mov
mov
fcoms
xchg
adc
pop
loopne
icebp
lea
sbb
clc
ret
inc
sub
insl
pop
je
lods
sbb
hlt
mov
sbb
jle
fs
mov
ljmp
fisttpl
add
mov
fidivs
jb
push
les
pusha
xchg
scas
dec
mov
mov
std
cmp
movsl
cmp
sbb
push
clc
in
adc
int3
push
inc
test
mov
jmp
addr16
mov
into
sbb
repnz
mov
lods
fisubs
or
xchg
mov
rcrl
mov
movsb
int3
das
aad
mov
popa
push
stos
aaa
fimull
test
or
add
push
daa
insb
add
negb
out
pop
adc
add
int
outsb
stc
fstpt
lcall
xor
and
fists
push
mov
popa
mov
jl
inc
push
push
scas
xor
insb
xchg
mov
mov
inc
adc
mov
stc
pop
in
rcll
push
repnz
add
int3
cli
jns
push
stos
test
pusha
inc
or
jnp
ficoms
or
repz
jae
in
add
popa
pop
popa
dec
xor
les
and
fsub
inc
lock
stos
je
pop
lea
push
sub
ror
leave
negl
std
pop
or
add
stos
std
int3
fbstp
mov
les
gs
repz
js
mov
jle
push
out
xchg
lea
out
push
rcll
cld
lods
lea
xchg
mov
inc
push
addl
je
add
mov
sbb
popa
xlat
sahf
dec
pop
mov
fcomps
cmp
fsubrs
adc
jl
cmp
fstl
and
ret
mov
cmp
cmp
jge
pop
xor
sbb
in
jmp
jp
dec
mov
adc
imul
js
test
adc
enter
sarb
or
ds
dec
les
mov
cld
jae
dec
fistl
sbb
xchg
xchg
add
or
xor
xchg
or
shll
cld
pop
mov
mov
mov
sti
sub
movsb
out
pop
sbb
jo
jno
mov
icebp
clc
pop
andb
add
leave
popf
pop
rcrl
adc
push
das
leave
sbb
add
ffreep
or
adc
cmp
addl
push
imul
xchg
xchg
and
loopne
ljmp
ret
inc
and
neg
dec
jne
jmp
dec
mov
add
cmp
pushl
ret
push
xchg
fwait
pop
cmpsb
cmp
lcall
xlat
stos
jp
in
lods
les
mov
scas
call
test
ror
les
in
mov
in
xor
dec
pushf
jp
cmp
jae
into
push
js
mov
xchg
dec
rorb
fsubr
arpl
xor
pmulhuw
dec
fldl
and
sbb
inc
pop
xchg
or
out
shrb
or
ret
lea
adc
add
ffree
repz
pop
call
jno
movsl
mov
dec
bound
loopne
rcl
jbe
push
bound
iret
inc
lods
mov
data16
push
pop
jns
cmp
call
or
jmp
jo
dec
jb
adc
sub
hlt
or
enter
or
jg
lock
loopne
ds
imul
or
dec
sub
add
mov
xchg
ret
out
mov
call
data16
in
dec
or
xor
jne
and
mov
gs
stc
sbb
mov
into
and
mov
or
adc
sahf
fstps
jns
xchg
loope
movsb
mov
fucomp
lods
push
call
pop
out
sub
dec
xor
icebp
dec
lods
jae
test
dec
lret
mov
inc
in
aaa
pop
inc
popa
into
jecxz
call
pop
cli
adc
imul
mov
fwait
in
jecxz
mov
scas
movsb
ds
xor
jle
dec
pop
out
sub
lahf
outsb
xor
in
mov
jbe
stos
fs
xchg
inc
or
mull
shl
inc
daa
sub
jnp
cmp
lret
pop
xchg
xchg
dec
jmp
repz
push
outsl
shl
enter
shll
repnz
in
fs
mov
stos
sub
push
sub
xor
mov
sbb
pop
rolb
repz
fcoms
rcr
dec
mov
cmc
daa
jb
lods
in
pop
shrl
push
fstl
leave
and
fs
and
repz
jge
xchg
fisubs
or
dec
lea
or
pushf
xchg
ss
xchg
in
sti
dec
add
xchg
mov
je
insb
stos
xchg
adc
les
pop
hlt
ficoml
outsl
jns
mov
push
dec
pop
testl
mov
jae
add
imull
das
push
fsts
andl
cmp
mov
jg
insb
add
addl
push
pop
into
inc
mov
cmc
cmp
cmp
pop
test
inc
test
test
jo
push
mov
or
sub
sbb
adc
mov
jecxz
jne
insb
xor
fisubrl
mov
nop
shrl
pushf
lock
jno
mov
adc
mov
rolb
mov
popa
in
adc
scas
lea
lcall
mov
jmp
aam
pop
dec
pop
push
call
cmp
mov
sti
aam
in
inc
pop
sub
rcll
in
rorb
add
push
movsb
adc
iret
xor
test
cs
lods
jl
hlt
sbb
sbb
xlat
ficompl
repz
in
in
stos
ja
push
mov
cs
sahf
adc
pop
shl
nop
mov
dec
pop
out
jnp
test
lea
insl
push
xor
fsub
je
adc
sbb
mov
sbbl
mov
outsl
lahf
mov
test
jmp
into
scas
stos
cli
pop
loopne
xor
insb
or
pop
cmp
cmp
scas
rcr
aam
mov
push
xchg
sub
or
and
pop
xor
mov
pop
fnstsw
jb
adc
mov
lds
iret
loop
repnz
adc
cmp
push
insb
and
cmc
xchg
shlb
inc
movsl
add
pushf
mov
dec
daa
testl
mov
mov
je
xchg
mov
add
test
and
popl
das
or
leave
lods
sete
jne
inc
mov
mov
bound
jmp
in
xor
lcall
or
sub
xchg
or
in
movsl
xor
jmp
mov
pop
sub
add
push
adc
outsl
push
ds
sub
xor
sbb
ds
lods
negl
cmpsl
push
mov
add
cmpsl
insb
and
enter
push
mov
lods
shlb
mov
cwtl
jo
test
pop
mov
pop
sbb
out
pop
cmpsl
int3
scas
popf
mov
sub
mov
cmpsb
in
dec
mov
mov
cmpsb
js
data16
mov
push
pop
test
sub
push
sub
sbb
mov
lret
cli
cld
or
testb
add
jmp
and
dec
sbb
test
jnp
mov
mov
add
sbb
mov
fisttps
fsts
pop
sbb
pop
repnz
rol
push
movsl
pop
in
sub
leave
mov
mov
sub
or
daa
push
jle
sub
xlat
filds
lock
cmc
mov
xchg
xchg
dec
xlat
cmp
mov
rclb
gs
adc
inc
out
test
stos
lods
inc
mov
fs
lds
loope
fs
dec
daa
test
arpl
sub
mov
xchg
movsb
stc
ss
cmp
jl
adc
pop
and
xor
or
mov
sbb
add
inc
jle
fnstsw
icebp
jge
mov
mov
ret
scas
ss
push
clc
jecxz
adcb
and
in
and
stos
mov
dec
add
out
xchg
dec
mov
ret
stc
out
add
movsb
sbb
jg
fmull
xor
add
sub
imul
dec
fisttps
mov
in
push
adc
arpl
push
subb
bnd
test
mov
pop
mov
jb
mov
push
lock
dec
out
mov
cmpl
repnz
mov
inc
hlt
imul
and
cmp
filds
js
pop
dec
cmpsl
loop
ret
ds
inc
sbb
mov
and
addl
push
jnp
scas
loop
js
push
orl
sub
movsl
nop
ss
gs
mov
inc
jo
rcl
push
add
xlat
aam
shll
hlt
pop
lahf
mov
jg
mov
adc
rclb
jbe
iret
lea
mov
aam
fcmove
insb
mov
hlt
ficompl
or
jg
and
mov
xor
outsl
loop
xchg
sub
shrb
mov
test
and
test
jle
popa
fidivrs
incb
out
gs
or
js
sbb
lods
sbb
cwtl
jle
jg
sbb
inc
adc
pop
jbe
faddl
clc
dec
fiadds
mov
pop
and
ficomps
rcll
test
mov
lret
cmpsl
push
rorl
enter
test
xchg
sbb
js
push
sub
imul
ss
add
cwtl
jns
idiv
sbb
pop
jae
sub
cs
adc
loop
fsubr
adc
repz
adc
call
sub
pusha
inc
cld
mov
mov
shlb
mov
mov
dec
outsl
inc
xchg
scas
data16
mov
adc
xchg
jo
cmp
mov
sub
push
dec
jns
jae
vpsllq
test
aas
inc
popf
cmp
add
mov
jge
dec
addr16
sub
jecxz
loop
mov
pop
aam
out
xchg
subb
fisttps
loopne
mov
and
sahf
xchg
cwtl
fcmove
and
push
lahf
mov
add
sub
pop
out
add
out
ret
lods
fcmovb
inc
leave
jns
test
push
jns
lcall
cmpsb
mov
xor
scas
push
jnp
leave
adc
cs
data16
mov
in
sub
ret
adc
mov
add
xchg
inc
lret
push
dec
mov
dec
mov
and
mov
loope
mov
clc
push
jl
mov
fnstenv
xchg
js
inc
orb
fwait
push
inc
sub
mov
ljmp
mov
add
pop
insl
or
dec
push
arpl
rcrl
test
lea
inc
or
pop
dec
in
call
aaa
je
push
out
xchg
lods
xor
cmp
dec
rorb
idiv
pushf
outsl
dec
xor
mov
sbb
in
andb
sbb
mov
ja
jb
out
enter
xor
or
ja
or
cmp
lret
add
out
push
xor
aam
xchg
enter
pop
scas
clc
clc
hlt
xchg
mov
cmp
pusha
imul
dec
imulb
jp
out
daa
pop
sub
mov
ds
mov
mov
sbb
lds
sub
icebp
sub
rcll
test
pop
enter
ficoms
lahf
cmp
push
push
adc
jbe
pop
and
and
fs
xchg
push
ret
jle
fbstp
test
xor
mov
nop
xorl
lahf
adc
push
mov
fistps
lods
pop
lcall
in
jecxz
sub
and
dec
add
je
scas
pop
mov
push
mov
hlt
aad
xchg
jno
inc
cmp
andl
test
inc
mov
dec
jae
mov
inc
mov
addb
les
xor
sbb
cld
jnp
xchg
inc
xor
jns
pop
fstpt
test
hlt
leave
push
das
xchg
jmp
mov
fists
cmp
xor
cmp
mov
jnp
jno
out
movsb
mov
aaa
test
ror
inc
sbb
mov
mov
stos
jmp
inc
insb
testb
push
pop
jae
jge
inc
ja
leave
sub
neg
cmp
das
je
mov
inc
enter
lods
call
jae
out
loop
add
inc
xlat
out
adc
add
lcall
and
mov
scas
in
cmp
and
add
fs
dec
inc
xor
enter
sub
mov
pop
js
lods
gs
adc
dec
mov
in
popa
sahf
cld
and
xor
jae
jmp
bound
cmp
push
push
xchg
xchg
jg
ficoml
hlt
sbb
adc
inc
push
in
lods
fiadds
pop
movsl
mov
mov
ficoml
cld
aaa
imul
xchg
add
ret
dec
add
arpl
lret
mov
sbb
jnp
arpl
add
sbb
cltd
dec
pusha
scas
cltd
loope
pop
push
xchg
popf
rolb
add
jno
pop
imulb
lods
mov
xchg
jb
mov
or
shl
sub
mulb
jmp
inc
enter
jmp
mov
jge
fwait
jne
fnstsw
popf
subb
es
pop
out
jge
lcall
sub
add
cmp
add
xlat
lea
leave
out
mov
or
repz
cli
dec
rcrb
loope
idivl
adcl
mov
ja
cmp
iret
insl
aaa
mov
andb
loop
and
dec
dec
js
in
mov
pop
ffreep
xchg
jnp
cmp
ret
aas
cmovno
insb
cmpsb
lret
push
pop
adc
outsb
and
push
xchg
daa
pop
std
jecxz
inc
push
jnp
scas
scas
fdiv
mov
repz
scas
cli
mov
sbb
inc
cmp
ljmp
ds
enter
and
or
xchg
adc
fstl
sbb
sub
cmp
fs
adc
xchg
push
adc
adcb
sub
insl
mov
fwait
xchg
inc
cmp
mov
fs
mov
mov
mov
sub
int
aaa
mov
cld
mov
loop
and
shr
scas
xchg
add
push
test
dec
pushf
aaa
mov
and
mov
push
mov
adc
and
shlb
sahf
iret
out
push
cmpsl
lods
jno
dec
imul
sbb
aam
aas
cmp
mov
push
sbb
insb
inc
pusha
fisubl
test
and
in
push
rorb
mov
mov
outsb
xor
lock
andb
js
push
lcall
and
call
scas
das
jnp
push
outsl
pusha
cmp
es
add
xchg
pop
dec
jne
xor
mulb
mov
add
aas
rolb
leave
movsl
mov
ss
mov
mov
cmp
and
leave
or
out
loop
fsubrs
aam
lea
popf
cld
pop
jp
mov
cltd
mov
cld
pop
imul
cwtl
ficoml
lret
test
cmp
inc
test
outsl
lea
pop
aam
ljmp
mov
test
sub
lret
adcb
outsb
int
lahf
popa
xlat
push
das
lods
cmpsb
push
orb
or
out
push
inc
imul
scas
popa
lods
addr16
sub
movsb
into
and
xchg
int
fistpll
pushl
stc
dec
inc
adc
push
les
repz
scas
inc
push
test
or
mull
cmp
into
add
sub
lahf
test
mov
insl
ret
pop
stos
gs
repz
xchg
je
nop
adc
jecxz
jb
mov
inc
mov
jne
xchg
subl
test
mov
xor
mov
jmp
aad
xor
sub
aad
push
xchg
stc
dec
aam
fstp
mov
mov
test
adc
mov
leave
aaa
cwtl
pop
or
gs
loop
pop
imul
pop
mov
ffree
pop
fildl
xchg
test
mov
idivl
or
cmp
cmp
mov
iret
bound
lahf
cwtl
push
cmc
lock
mov
xchg
loopne
mov
adc
pop
orl
mov
jmp
inc
jmp
push
xor
shrl
jl
push
pop
cmp
push
outsl
sub
int3
push
xchg
shr
shrl
jg
xchg
int3
adc
mov
mov
pop
push
cmp
cmp
push
fistps
in
lahf
fdivrl
jle
push
sub
jae
lds
adc
popa
leave
lock
stc
dec
cmpsb
push
xor
pop
sub
push
cmp
dec
mov
rorb
sbb
add
jl
xorl
lea
fidivl
jnp
imul
xlat
mov
dec
xchg
mov
and
xchg
ficomps
popf
add
iret
mov
test
jae
cmp
add
jecxz
cmp
mov
push
pop
add
and
shl
iret
sub
lahf
xchg
popa
loopne
loopne
sbb
jge
pop
push
arpl
mov
aaa
and
xor
mov
fmull
out
pop
into
ficoms
add
xchg
or
jo
mov
jge
jp
mov
pushf
mov
add
sub
sti
inc
imul
in
push
nop
dec
pop
xor
sub
add
into
mov
stos
pop
gs
lret
mov
rolb
push
push
out
les
pop
inc
adc
mov
imul
in
xchg
sub
jl
mov
add
fcom
negl
xchg
cli
pop
sbb
cmp
lock
call
outsb
lcall
jmp
leave
xchg
push
out
cmp
mov
xor
jnp
dec
daa
pop
cmp
lahf
pushf
xor
movsl
and
pop
xchg
negl
push
dec
cmc
dec
xor
mov
inc
mov
sub
jo
daa
popa
gs
shl
jne
or
xor
mov
add
stc
xor
jnp
lret
ds
hlt
in
cmpsb
or
jecxz
sbb
sbb
outsl
jae
cwtl
cmp
pop
xlat
jg
mov
int3
negl
pop
mul
shl
in
mov
jo
xchg
and
xor
out
enter
jl
dec
mov
in
pop
sub
repz
jno
push
gs
jge
cld
bound
mov
stos
xchg
addr16
jl
pop
orb
fdivrl
dec
jl
sub
in
sub
xlat
add
adc
inc
add
push
sub
lcall
push
popa
je
add
xchg
cmp
jns
sub
add
xchg
jmp
push
xor
clc
xchg
add
mov
pushf
sbb
cmp
fildll
rcll
inc
lods
rorl
outsb
divb
adc
mov
lcall
sub
ret
push
rcrb
sub
xor
daa
pop
inc
xchg
sbbb
mov
es
dec
cmp
arpl
aaa
sub
cli
mov
xchg
stc
adc
xchg
xor
inc
mov
push
lods
pop
out
repnz
fs
outsb
or
xchg
adc
lcall
cwtl
fneni(8087
add
jne
test
push
xchg
xor
fistl
jb
movsl
dec
mov
in
inc
adcb
cmp
sbb
pop
mov
cmpsb
icebp
nop
adc
sub
jb
sahf
add
lods
and
loop
mov
ret
stc
stc
add
dec
rclb
test
ret
jae
outsb
sbb
in
clc
mov
cmp
mov
popa
pop
stos
push
or
pop
loope
pop
outsb
mov
jae
aas
in
push
fwait
out
adc
sbb
dec
lret
pop
jp
test
popa
cmc
ret
mov
cwtl
push
adcl
ljmp
mov
push
inc
clc
xchg
inc
fldl2e
lret
sub
jbe
dec
inc
out
fs
je
cltd
add
pop
je
loopne
adc
cli
aas
inc
cmp
das
and
fstl
push
adc
mov
sub
fwait
cld
sub
subl
jne
ficoml
ret
and
iret
add
jecxz
in
lea
pop
mov
mov
jmp
sarb
mov
cmc
add
paddq
scas
jmp
dec
sbbl
shll
or
neg
lahf
sbb
push
sahf
outsb
notl
sub
xor
out
mov
mov
pop
pop
insb
lret
sbb
test
xchg
test
in
call
in
sarl
dec
push
in
mov
loop
in
jns
cmpsb
mov
lock
sub
lock
mov
incl
pop
lods
mov
mov
mov
xor
lcall
cmp
arpl
pusha
pop
jmp
mov
adc
mov
mov
cli
loopne
loopne
add
jg
inc
fistpll
int3
xor
push
arpl
fldl
push
es
lret
mov
xchg
iret
dec
dec
int3
in
call
test
add
test
lret
sbb
bound
sub
into
aaa
and
and
pusha
cs
inc
jge
loop
adc
pop
jmp
sbb
mov
lcall
mov
ret
or
test
mov
inc
test
pop
or
xorl
das
adc
mov
jno
or
insl
adc
sbb
test
and
mov
sahf
mov
mov
inc
adc
sbb
lea
in
into
xchg
xchg
pop
mov
mov
loopne
loopne
jmp
imul
fwait
cld
ficoml
dec
popa
fists
add
shlb
xor
cli
rorb
add
cli
jecxz
mulb
xor
or
pop
cmpsb
push
mov
mov
fwait
int
sti
gs
lret
movsb
inc
xchg
add
cmp
push
jne
push
icebp
scas
icebp
rcrl
mov
cmpsb
fs
shlb
test
jb
jne
hlt
fiaddl
in
movsl
mov
sbbl
repz
in
pop
icebp
rcrl
dec
in
push
sub
jb
shll
lods
imul
popa
xor
jmp
lods
xor
and
scas
andb
clc
or
xor
cli
and
mov
int
sub
or
inc
repz
xchg
inc
dec
int3
mov
jle
lock
dec
jns
mov
das
hlt
xchg
mov
and
shrb
shlb
fsub
xchg
jbe
jb
out
aad
subl
shrl
jo
inc
fistpll
sti
dec
add
mov
call
push
lcall
iret
pop
inc
push
pop
mov
lahf
sub
cmp
stos
jnp
jl
repnz
and
outsb
sub
push
rolb
es
jno
fiaddl
lcall
pop
test
std
imul
mov
mov
cmpsb
icebp
add
jnp
adc
ret
cld
add
cmpsb
cli
clc
dec
or
testl
icebp
jnp
cs
outsb
fsubp
cmp
lret
mov
jmp
push
pop
icebp
push
mov
rcr
sub
cwtl
inc
push
outsl
ljmp
pop
cmp
add
jmp
jae
imull
lods
aaa
ljmp
out
outsb
dec
add
dec
sbb
scas
adc
mov
testl
data16
cmp
pop
stos
es
outsl
inc
test
fiadds
sub
je
pop
pop
or
push
add
push
dec
arpl
movsb
rclb
sbb
push
shrl
test
jb
xor
cmp
cs
push
push
or
in
jae
lcall
outsl
test
add
lcall
aad
movsl
pop
and
xchg
out
aam
push
jnp
cld
jns
or
xor
xchg
sub
pop
lods
mov
pop
push
inc
in
nop
fs
inc
xor
fcmovb
and
es
sarb
pop
loop
or
mov
adc
xchg
adc
sub
data16
push
fnstsw
mov
mov
icebp
mov
test
mov
push
sub
in
push
pop
pop
sar
and
pop
iret
push
mov
xor
mov
sahf
push
xor
jne
aad
aas
addr16
push
sbb
add
mov
sub
mov
sub
dec
ja
sbb
int
xchg
mov
cli
dec
cmp
jae
xor
repnz
or
jmp
outsb
mov
xor
inc
jle
or
mov
dec
push
mov
xor
mov
enter
sarl
fwait
adc
jmp
jns
pop
jo
insl
arpl
into
fld
icebp
fldenv
push
xor
mov
mov
dec
mov
mov
inc
ss
arpl
push
roll
fimuls
sti
dec
pop
fistps
sub
into
cltd
add
fwait
push
shlb
mov
cmpb
dec
push
sub
mov
stos
cwtl
xchg
inc
cmp
neg
jmp
adc
leave
sbb
hlt
mov
mov
mov
jae
cmp
jmp
jnp
xchg
inc
call
cmp
test
or
sub
jecxz
psllw
lret
clc
fcoms
jns
or
subb
fidivrl
addr16
xchg
pusha
mov
sub
popa
xor
sar
outsl
pop
cwtl
scas
shll
or
mov
sbb
and
add
jmp
fiadds
stos
popl
sbb
out
ljmp
test
add
and
sub
mov
int3
mov
hlt
mov
sub
and
add
enter
push
mov
push
test
rcll
cmp
call
push
outsl
mov
negb
into
mov
out
aaa
push
adc
push
and
push
cmpsl
dec
add
dec
fldl
adc
enter
pop
ret
out
mov
push
aam
jnp
lahf
jo
jmp
push
pop
adc
lcall
dec
xchg
xchg
lret
out
lea
mov
jp
pop
mov
shl
fmull
jg
in
je
jne
std
and
pop
addr16
jne
pop
lds
loopew
scas
cwtl
jb
roll
test
push
outsl
imul
addl
ljmp
cmc
sbb
and
lcall
scas
add
push
sub
dec
cmpsl
lock
shlb
and
jb
movsb
fwait
pop
and
je
repz
push
cld
xchg
or
ret
pop
xor
stos
sbb
dec
and
lods
mov
inc
repz
cld
xchg
dec
jns
test
mov
pause
sub
rcll
shll
rclb
xchg
adc
inc
shr
jmp
das
fists
sarl
int
clc
call
jo
nop
push
imul
pop
xchg
loope
adc
fadds
gs
xchg
inc
mov
dec
or
pop
mov
repnz
or
aad
push
add
or
aas
test
push
sub
ficoms
shrl
sub
xchg
dec
mov
cmp
xlat
mov
mov
lea
jns
inc
and
pop
pop
dec
jno
test
jno
sbbb
inc
mov
sbb
sub
sub
dec
cmp
aaa
daa
nop
sub
lret
insl
push
cmp
mov
mov
out
lret
push
test
adc
arpl
jno
and
push
push
in
orb
pop
xchg
inc
cmp
movsb
or
pop
pop
push
xor
and
cmc
test
fstps
das
mov
inc
jmp
stos
jle
inc
add
pop
jne
mov
sahf
in
lods
imul
push
stos
and
enter
adc
repz
fcmovu
and
jae
jl
xor
mov
cld
lret
nop
xchg
xlat
das
xchg
jp
inc
data16
clc
pop
xor
scas
sti
jo
or
arpl
xor
mov
mov
fmulp
fstpt
cli
cmp
sti
rcrl
and
ds
jge
xchg
xchg
push
lahf
sub
sub
pop
mov
popa
inc
cwtl
inc
mov
addr16
and
addr16
jb
push
pop
movsl
lea
dec
fldenv
les
or
xchg
xor
cmp
lods
ds
jbe
stos
mov
in
jg
adc
push
xchg
cmpsb
xor
imul
pop
xchg
sti
test
cmpsl
inc
push
pop
lcall
pop
faddl
adc
scas
popa
test
shlb
pop
pop
fiaddl
shr
jo
or
push
inc
out
xor
sbb
adc
sbb
sbb
jl
orb
ljmp
or
and
xor
fstpt
mov
dec
into
std
data16
lcall
pop
mov
xchg
inc
outsb
loop
insb
mov
leave
sbb
pushf
iret
xor
in
push
std
mov
xchg
pop
inc
mov
xchg
or
mov
stos
pop
ja
out
pop
scas
das
sub
or
pushf
jno
pop
or
jle
movsb
or
or
mov
js
leave
mov
sar
lret
dec
outsl
mov
mov
int3
inc
push
sub
jbe
inc
mov
jb
adc
and
pushf
mov
fimull
inc
mov
xor
pushf
or
dec
icebp
hlt
adc
outsl
fnstenv
ja
daa
push
icebp
add
dec
cmpsb
dec
jmp
jbe
sub
mov
nop
in
xchg
add
scas
mov
imul
cmpsl
sub
test
push
sbb
icebp
cmp
xlat
int3
jns
or
add
fstps
ficoml
add
push
aad
add
loope
sub
insb
xchg
fs
push
sub
jb
or
cmp
das
cmp
sbb
pop
fs
xor
or
sbb
xchg
push
xchg
aam
push
or
aaa
into
lcall
fldt
xchg
ds
outsb
dec
orb
jmp
push
inc
lcall
into
addl
jo
dec
in
loopne
mov
insb
adc
inc
sub
dec
jno
adc
xor
dec
dec
shll
sbb
or
sbb
popa
jge
mov
rcrb
jns
andb
stos
and
inc
ret
and
loopne
pop
inc
dec
mov
ss
dec
xchg
mov
je
cmp
aam
enter
std
enter
gs
pop
lods
inc
shrb
cmp
mov
inc
ljmp
sahf
dec
fsubs
push
insb
and
jbe
roll
in
and
dec
lahf
js
daa
xchg
das
sbb
inc
cmp
and
add
stos
ss
mov
fildll
inc
lods
rolb
sub
sub
jl
ljmp
outsl
sub
pop
mov
cmpsb
dec
jo
xorb
dec
xor
push
pop
pop
or
outsl
add
mov
daa
or
xchg
push
adc
push
add
mov
cwtl
fstpl
leave
clc
mov
iret
aad
outsl
lahf
shlb
arpl
xchg
test
test
jo
mov
mov
inc
aas
sub
je
ljmp
icebp
add
add
in
push
pop
rcrl
mov
sbb
mov
rorl
cmp
xor
sub
pop
mov
xchg
mov
nop
jg
jbe
mov
hlt
loopne
cmp
lret
inc
nop
xor
inc
pusha
fbstp
cmp
mov
inc
in
mov
dec
ss
mov
mov
jge
aaa
cwtl
jl
push
dec
loope
cmp
cmc
aam
mov
xchg
outsl
das
inc
lods
cmp
lods
cld
and
push
divb
movsb
mov
sarl
jl
mov
inc
clc
stos
ret
mov
ss
dec
push
stos
loope
mov
jecxz
pop
or
xor
cwtl
sub
dec
popf
in
jge
cmp
loopne
pop
lods
ds
in
fidivrs
jnp
ja
push
jecxz
gs
mov
push
xchg
pop
or
sub
addr16
cmpsl
test
cld
movsb
lret
int
inc
add
std
test
cmpsb
movsb
push
and
mov
xchg
jne
mov
dec
mov
mov
or
sbb
clc
pushf
push
mov
scas
xchg
dec
adc
adc
inc
mov
or
inc
sbb
out
or
imul
push
add
rcrb
pop
push
sub
cmp
test
mov
mov
loope
pop
xchg
xor
push
adc
mov
lds
add
sbb
push
test
scas
jb
pop
lock
cmpsl
jge
jae
or
addr16
gs
xor
insl
cmpsb
lods
jle
mov
or
xchg
xchg
insl
rol
aad
lcall
push
lods
jae
daa
sahf
dec
cwtl
jl
mov
fldenv
lahf
repnz
inc
dec
pop
jmp
jnp
jl
push
dec
scas
xor
lcall
push
imul
mov
dec
xor
and
arpl
mov
ljmp
mov
sti
les
mov
inc
lahf
sti
sub
insb
mov
outsb
push
xor
test
jo
inc
inc
stos
fcmovne
arpl
mov
mov
nop
ds
lahf
out
sti
mov
movsl
movsl
dec
jmp
fsubrs
hlt
popf
je
fnsave
cmc
push
sub
cltd
loopne
jecxz
cmpsl
out
sbb
mov
lods
mov
sub
mov
mov
mov
mov
addr16
mov
xadd
fwait
adc
add
cli
imul
mov
mov
mov
mov
lds
and
fwait
or
mov
sbb
loopne
movsb
jne
jl
mov
adc
fldl
test
mov
movsb
mov
xor
jmp
jbe
xchg
pop
mov
test
pop
adc
imul
fnstcw
xlat
dec
cld
pop
jecxz
ss
cld
notl
xor
int3
pop
inc
fnsave
cld
pop
sub
push
sub
adc
test
adc
sub
call
lods
push
repnz
pop
stc
adc
std
test
xor
cwtl
or
dec
stc
and
mov
hlt
mov
or
mov
push
sub
arpl
int3
jne
dec
adc
sbb
ja
test
push
inc
jo
shl
adc
or
mov
pushf
dec
xor
cmp
jnp
or
test
xchg
inc
paddsb
xor
push
lods
sub
mov
hlt
mov
inc
mov
dec
pushl
push
mov
dec
lahf
add
mov
test
dec
out
xlat
in
lret
movsl
outsb
popf
adc
bound
rcrl
mov
adc
test
bound
fwait
fwait
dec
sahf
dec
daa
movsl
jne
mov
jnp
sbbb
or
add
xchg
dec
mov
in
scas
lahf
mov
or
mov
psubb
jmp
into
jo
push
mov
aas
push
sub
push
ds
movsb
pop
lahf
or
xchg
xor
fucomp
jns
cmp
push
mov
pusha
les
pop
adc
fmuls
shlb
inc
inc
adcb
push
mov
mov
fidivl
mov
scas
out
cmpsb
test
dec
and
jl
jb
pop
enter
shll
incb
cmp
mov
push
ljmp
inc
push
add
lock
pop
lea
pop
hlt
xor
xchg
xchg
scas
outsb
push
dec
jae
loopne
mov
aaa
es
inc
outsl
shr
mov
pop
pop
mov
fwait
mov
imul
icebp
push
inc
mov
dec
add
jge
xor
xor
mov
and
jns
xlat
adc
cmc
iret
mov
mov
dec
dec
insl
lods
inc
mov
test
mov
clc
imul
ror
mov
sub
push
pop
pop
dec
dec
jno
and
pop
call
test
bound
ret
not
cmpsl
xchg
push
xor
xor
roll
cli
shll
and
sbb
repnz
mov
push
fwait
repz
mov
pop
test
outsb
mov
fs
fwait
jns
pop
in
xor
vdivpd
mov
mov
inc
mov
outsl
and
insl
pop
hlt
scas
adc
mov
sbb
mov
pop
mov
outsb
dec
hlt
addb
fistpll
mov
loope
cmpsl
or
shr
scas
outsb
jae
rcrb
es
bound
fwait
clc
mov
into
cmp
es
xor
clc
test
repz
adc
add
and
enter
or
fwait
lods
daa
int3
cmpsl
sub
mov
mov
xor
sbbl
dec
add
and
in
es
push
xchg
adc
sbb
ffree
lret
lret
xchg
ds
push
lods
sub
or
js
mov
adcb
sbb
sbb
and
push
ja
fldl2t
mov
movsl
jp
movsb
movsl
aaa
rcr
movsl
out
adc
push
faddl
inc
push
inc
jno
push
das
dec
add
jp
stos
mov
aaa
xchg
ss
sarb
adc
fiaddl
jae
lret
dec
add
notl
cld
adc
out
inc
jp
pushf
lock
testl
xchg
or
adc
test
test
mov
push
test
mov
adc
or
inc
jno
inc
jno
cmpsb
sbb
lea
loop
jae
or
adc
out
mov
rorb
rclb
jle
shll
pop
sub
lds
pop
jge
mov
mov
aaa
dec
sar
mov
inc
mov
pop
inc
mov
mov
cld
in
xchg
push
in
popf
cvtps2pd
or
and
pop
or
jbe
push
ljmp
cwtl
aam
fs
push
jmp
or
adc
or
test
outsl
mov
inc
cltd
inc
xchg
pop
mov
outsb
rclb
test
cmpb
mov
jb
xor
adc
xor
sub
or
test
pushf
xor
in
outsl
clc
cmp
inc
inc
xchg
aaa
and
push
movsl
sub
push
fisubl
test
faddp
popf
xchg
mov
push
outsl
cld
mov
es
mov
stc
xor
dec
or
mov
pop
and
es
inc
ss
jae
pop
mov
test
add
pop
addb
or
cmp
popa
push
xchg
test
inc
popa
test
enter
push
mov
add
lea
fldt
jns
jne
int
pop
jp
cwtl
pop
lahf
mov
out
cmp
sub
xchg
xchg
cwtl
xchg
test
push
pop
cmp
cmp
ljmp
mov
mov
xor
dec
jmp
jp
fs
cmpsl
xchg
sub
enter
out
adc
lock
out
lret
mov
notb
lock
fnsave
xor
insl
js
jns
sbb
push
sbb
xor
or
hlt
ja
inc
imul
push
ret
mov
dec
movsl
aad
out
cmp
mov
fs
adc
xlat
adc
xor
sub
mov
add
ret
mov
cmc
xchg
pop
jg
iret
jecxz
mov
mov
xchg
xchg
lock
dec
andl
xor
push
je
or
push
fcoml
mov
stc
inc
sub
mov
or
lret
test
xchg
sub
fiadds
stc
jbe
bnd
cmpsb
jae
mov
cwtl
fimuls
cmp
xchg
shr
or
cmp
shl
xor
out
cs
inc
jo
daa
adc
cmp
cmp
and
fisttpl
aad
insl
popf
sbbl
daa
sahf
pop
adc
pop
cmp
cld
cli
push
imul
prefetch
or
mov
mov
cwtl
xchg
cs
mov
dec
jl
int
push
loope
mov
mov
add
mov
out
jg
mov
mov
xchg
sub
mov
inc
lret
add
pop
and
sarl
xor
movsl
jmp
popf
xchg
cld
in
or
xchg
add
xor
int3
fimuls
xchg
daa
or
xchg
mov
jmp
add
fiaddl
mov
rol
lret
fistpll
mov
pop
mov
push
pop
mov
imul
call
decb
jg
mov
inc
xor
jecxz
mull
cs
jnp
mov
cmp
sub
loope
imul
loop
mov
xchg
int3
dec
pop
iret
sub
mov
push
mov
dec
mov
notb
push
add
cmpl
faddp
divb
mov
popa
sub
mov
mov
xchg
inc
mov
ljmp
push
xchg
mov
sub
jmp
loopne
call
mov
xor
das
xchg
aas
cltd
nop
bound
js
cmp
cwtl
xchg
cli
push
rolb
xor
dec
mov
gs
or
inc
clc
pop
mov
rcll
or
sub
mov
ja
xlat
pop
data16
cld
and
xor
mov
in
fisubs
pushf
pop
sti
jecxz
pop
mov
jno
aad
icebp
movsl
cltd
rcll
out
sub
mov
mov
add
sbb
jp
incl
mov
pop
inc
xlat
lcall
mov
popf
mov
mov
aad
jnp
addr16
mov
adc
pop
adc
mov
cmp
sbb
scas
xchg
lcall
js
pop
cmp
push
inc
aas
cmpl
imul
popl
shl
js
sbb
sahf
adc
jbe
xor
xchg
scas
mov
xor
jb
cs
ret
dec
or
dec
int
jge
lds
ret
fsts
fcomps
sub
rorl
mov
iret
cmp
mov
jl
dec
aaa
mov
sahf
mov
dec
test
add
xchg
lahf
negl
adc
int
nop
shlb
xlat
adc
sti
popf
mov
scas
sbb
xlat
mov
aam
into
mov
std
mov
xor
bound
and
mov
stc
inc
in
adc
xchg
iret
mov
inc
mov
fld
cmp
inc
dec
sub
add
push
cltd
popf
push
movups
mov
mov
pop
hlt
and
fldl
pushf
lea
pop
xor
popf
sbb
push
xor
xchg
dec
outsl
std
sbb
movsl
push
movsb
out
adc
push
xchg
stc
cltd
out
orps
addr16
jns
mov
mov
adc
mov
pop
test
xchg
in
adcb
sub
shll
lahf
inc
sbb
xor
or
jp
add
and
daa
das
and
mov
or
test
push
test
das
aam
pop
mov
ljmp
test
repz
call
insb
xchg
cmp
aas
or
scas
lret
mov
mov
int
push
icebp
out
daa
mov
xchg
pop
lahf
roll
mov
fmul
sub
pop
sti
mov
movsl
and
fdivr
pop
sub
mov
xor
stos
sbb
ljmp
test
stos
addl
inc
fadd
xchg
shll
int
ss
stc
mov
or
mov
sti
test
mov
add
rol
imul
xchg
or
aas
cs
movsb
call
adc
push
sarb
push
lods
mov
repnz
sbb
test
rcr
and
sub
ret
jge
mov
xlat
fstps
xlat
cmp
jp
dec
pop
or
loop
ret
jae
xlat
add
outsb
loopne
out
push
out
out
dec
mov
xor
mov
outsb
pop
mov
cmpsb
jne
insb
inc
xor
insb
dec
aas
jl
rcpps
sub
inc
lods
mul
pop
mov
pop
dec
cmpb
jno
cmp
cmp
inc
fldt
jno
stos
lods
inc
addr16
jge
pop
dec
repnz
nop
xor
or
cmp
insb
hlt
arpl
es
pop
sub
or
mov
and
shr
xchg
dec
stc
jbe
xchg
loopne
inc
scas
lock
inc
push
cmp
fidivrs
dec
jl
mov
push
mov
inc
movsb
jae
outsl
out
dec
or
dec
insl
sbb
lea
test
and
and
pop
sbb
or
push
scas
jne
je
arpl
in
cs
mov
dec
and
imul
std
sub
dec
cmp
cmp
push
push
repz
or
std
out
test
add
repnz
and
repz
lods
dec
cmpsl
mov
adc
sub
test
inc
sahf
xchg
xor
mov
push
subl
inc
mov
btr
andb
stos
lds
or
call
fildl
std
jl
arpl
insl
inc
mov
xlat
in
sbb
fbld
fistpll
std
xchg
xchg
cld
mov
repnz
jl
inc
pop
xor
add
lret
iret
jnp
push
sub
mov
loope
inc
jmp
insl
inc
add
cmpsl
xor
test
jno
and
lcall
jl
sub
loopne
or
sti
es
out
xor
inc
rcr
mov
push
adc
pop
out
fadds
xor
push
dec
push
ret
pop
popa
push
push
rcrl
sub
and
mov
ja
cs
mov
fdivrp
insl
divl
leave
shrb
mov
and
xchg
popf
mov
stos
mov
fucomi
clc
loopne
jbe
jge
mov
lcall
fmul
scas
pop
in
mov
pop
orl
out
and
pop
mov
fdivs
add
mov
cli
add
insb
insb
lods
ja
shlb
cmpb
sbbb
mov
adc
js
jae
insl
rcll
and
pop
push
insl
repz
pop
imul
or
sbb
cmp
lcall
clc
and
in
mov
lret
neg
dec
in
aas
inc
fdivl
mov
dec
lret
addb
call
xchg
imul
aam
jae
fdivrl
xor
xchg
pusha
xchg
das
add
xor
adcb
rcr
rolb
mull
popf
sub
jge
adcb
fimull
xor
push
inc
lahf
sbb
add
jo
leave
mov
and
shlb
mov
movsl
clc
test
inc
mov
pop
pop
or
add
loopne
mov
push
clc
push
xor
xorl
mov
inc
mov
push
push
xchg
arpl
mov
dec
pop
sbb
ret
mov
cmp
inc
das
mov
sub
mov
jnp
add
xor
pusha
or
sbb
cs
sub
pop
fisttps
mov
mov
ret
jge
ds
xor
daa
insb
sub
pop
aad
bound
data16
push
mov
in
or
jnp
xchg
sbb
lds
cmp
push
add
rcll
fisubs
xchg
out
pop
test
outsb
mov
and
negb
gs
jp
inc
xchg
adc
lahf
faddl
stc
hlt
and
push
dec
push
cmp
mov
leave
push
sbb
xor
sub
lods
jmp
xor
xchg
or
add
pop
cmp
pop
sub
jl,pn
sbb
push
mov
bound
adc
pop
sub
xchg
push
dec
test
inc
push
adc
sbbb
or
sar
aam
dec
push
lahf
dec
loopne
jnp
add
daa
xchg
hlt
adcb
mov
pop
and
cmp
cmc
pop
pop
push
movb
sub
mov
sub
lret
inc
mov
pop
sub
scas
mov
jl
addb
mov
lea
cld
mov
mov
pop
jecxz
loope
sub
dec
dec
es
push
sbb
test
dec
mov
jnp
mov
dec
mov
bound
jo
inc
test
sub
push
div
push
sub
outsb
shlb
mov
cmpsb
mov
xchg
test
mov
dec
mov
cli
leave
mov
lock
mov
not
inc
jg
hlt
inc
dec
pop
fwait
push
and
adc
and
lods
cmpl
shll
pop
mov
sub
xchg
rcr
jle
xchg
in
pop
js,pt
paddusw
cwtl
es
lret
ds
xchg
xchg
shrb
jns
fmul
ds
aaa
ficomps
rorb
push
cmp
rcrb
pop
cmp
jg
mov
sbb
pop
lods
sbb
int3
jae
test
add
pushw
pop
pop
gs
add
int3
pop
jnp
out
mov
inc
std
sbb
fisubl
adc
popa
pop
jl
pusha
inc
orl
mov
and
pop
sub
or
aad
fsubr
or
out
jle
add
inc
cmp
or
sahf
jecxz
and
ret
stos
stc
push
call
data16
xchg
xor
mov
add
leave
dec
inc
push
adc
fnsave
aam
pop
dec
push
ss
jle,pt
push
into
mov
cmp
jnp
in
out
adc
push
mov
lahf
decl
shrb
mov
fpatan
scas
sub
pop
daa
fcompl
xchg
and
mov
dec
loopne
or
mov
in
cltd
mov
mov
sub
rclb
hlt
inc
daa
adc
cmp
pop
data16
inc
mov
cmp
inc
in
addr16
inc
pop
adc
in
lahf
inc
ds
mov
jne
jae
data16
ljmp
mov
sbb
subb
push
cwtl
sahf
jnp
sub
cmp
imul
push
pushf
lret
nop
add
cmp
arpl
lods
cld
pop
out
add
insb
add
jge
mov
sub
imul
and
or
sahf
js
or
out
adc
popa
test
aaa
pushf
ret
cmpsl
aas
imul
pushf
in
and
mull
test
adc
xchg
gs
and
int
lret
fnsave
adc
mov
rorb
dec
int
sub
faddl
incb
adc
mov
mov
and
jp
sbb
xor
idivl
pop
movsb
loope
adc
gs
popa
add
and
hlt
scas
xor
mov
and
add
xorl
pusha
movsb
xchg
sahf
dec
outsl
push
ret
and
xchg
xchg
mov
fsin
int3
lds
push
xchg
mov
mov
arpl
sar
dec
xchg
cmp
mov
xor
sub
lods
sbb
mov
cmp
cmp
outsl
scas
add
mov
in
push
stos
pop
lcall
jl
lods
and
and
popa
pop
das
dec
rcll
sub
ffreep
inc
add
push
fcompl
mov
out
jp
xchg
dec
dec
stos
lods
fidivl
mov
aam
dec
loopne
dec
dec
jbe
lret
xchg
jno
inc
xor
cs
push
xor
pop
aaa
lds
nop
test
mov
xchg
lds
inc
xchg
mov
cmc
jmp
outsl
ljmp
dec
sbb
xchg
mov
repz
jecxz
inc
push
add
outsb
xchg
call
sub
pop
loop
mov
in
cwtl
int3
test
pop
cmpsl
les
jp
push
sub
pop
nop
movsl
adc
or
sbb
sahf
stos
aam
push
jae
or
fprem1
aaa
jge
adc
js
push
or
les
jmp
push
arpl
jne
shlb
xchg
adc
movsb
add
aaa
aaa
inc
inc
mov
add
std
mov
mov
andb
loope
mov
out
sub
in
mov
lcall
mov
push
cwtl
leave
pop
push
push
mov
scas
xor
shrb
mov
pop
stos
mov
gs
and
cmp
dec
insl
jp
ficompl
mov
shl
dec
sbb
jae
xlat
andl
pop
and
xchg
cmc
add
out
lds
xchg
push
lods
mov
cld
test
js
mov
sub
push
inc
in
fwait
push
inc
test
mov
scas
push
out
sbb
mov
or
les
push
dec
scas
add
sub
in
mov
test
enter
inc
sar
push
pusha
add
lcall
loope
dec
jno
sbb
jecxz
jp
rcll
fwait
or
lods
rcrl
fisubrl
ret
call
mov
lods
mov
inc
loop
jno
pop
pop
pusha
and
in
sub
call
dec
mov
ljmp
jge
mov
cli
or
pop
mov
insb
add
cmpsb
adcl
dec
outsl
out
jmp
jmp
cmp
push
adc
jae
lods
cwtl
test
test
incb
push
xchg
or
rolb
dec
ds
push
shll
popl
push
testb
xchg
and
adc
int3
push
jmp
cmp
lret
iret
mov
ret
lods
ficompl
in
pusha
mov
inc
cmp
or
xor
jl
jo
mov
cld
les
pop
or
mov
icebp
shlb
inc
inc
aas
pop
rolb
stc
mov
push
push
pop
sbb
sub
out
ret
mov
and
movsl
outsl
movsl
sub
sub
lret
pop
jno
out
jae
mov
mov
ds
sbb
push
rclb
push
cmpl
adcl
sbb
nop
push
pop
push
xchg
mov
inc
dec
mov
insb
jae
or
test
fstps
std
nop
cmpl
lret
movsb
mov
push
mov
inc
scas
dec
out
fwait
sbb
fidivrs
fsubr
insl
jo
push
inc
mov
imul
mov
pop
xor
push
sbb
gs
push
or
push
mov
lea
dec
add
rcrl
loope
cli
hlt
or
bnd
shr
xchg
inc
jne
jnp
pop
int
xchg
pop
sub
imul
mov
inc
ljmp
test
xchg
jmp
add
out
pop
xor
insl
imul
mov
jge
lea
sub
adc
jge
js
dec
sbb
lcall
ljmp
dec
out
inc
movsb
outsb
roll
repnz
imul
jmp
lcall
add
shlb
mov
adc
push
push
dec
int
cli
fcmovbe
call
cli
sbb
add
and
and
pushf
cmp
sub
cmp
xor
or
bound
xor
aam
cmp
outsb
data16
add
ficomps
test
or
jl
push
add
mov
xor
and
sti
pop
mov
pop
sbb
jp
push
xchg
stc
sub
repnz
lock
mov
scas
inc
jmp
mov
inc
cltd
add
pop
xlat
mov
stc
jnp
adc
nop
push
and
push
add
sub
and
jo
jmp
and
ret
add
push
inc
inc
inc
mov
cs
push
inc
out
and
sahf
test
dec
pop
cltd
hlt
mov
xchg
sbbl
or
daa
dec
mov
decl
ficoms
or
sti
mov
push
cs
dec
shlb
or
scas
icebp
gs
test
call
sbb
fcomp
or
jl
sbb
sti
push
faddl
fs
add
adc
jne
repnz
out
into
aaa
std
jne
xor
fidivrl
in
repz
adc
loope
xorl
mov
inc
mov
ret
lods
ds
inc
add
pop
mov
cmpsb
insb
jecxz
push
pop
cltd
inc
or
mov
les
inc
push
mov
fwait
mov
lret
sub
push
std
xchg
test
pop
iret
in
or
leave
push
mov
pop
hlt
sub
stos
xchg
and
stos
mov
cmc
aas
xor
mov
cmpl
push
push
mov
ret
mov
ret
add
pop
mov
mov
rcll
aaa
and
sub
in
test
shll
dec
js
imul
and
mov
imul
xlat
mov
test
pusha
ja
pop
cmp
sahf
or
loope
fs
insl
outsb
data16
or
cwtl
stos
push
movsb
push
enter
add
ss
jl
shll
mov
int
push
sbb
lea
inc
ja
test
adc
inc
sbb
test
inc
fs
or
inc
imul
xchg
inc
sub
and
or
ja
push
inc
cmp
xor
dec
pop
pop
xchg
nop
scas
nop
mov
fcoml
mov
mov
fisttps
leave
cmp
js
js
adc
clc
adc
loopne
aas
insb
std
fsubl
jl
ret
xor
lcall
jb
push
inc
in
fiaddl
jns
sub
mov
sub
mov
mov
cmp
cltd
jnp
shrl
xchg
pop
popf
xor
dec
inc
roll
lret
sub
adc
cmp
sbb
mov
pop
cld
in
pop
and
mov
gs
leave
cmp
fnstenv
pop
cmc
and
out
lds
int3
repz
iret
stos
aaa
mov
adc
sbbl
fimull
arpl
add
jge
test
es
jb
jae
int
mov
stos
mov
sub
xchg
xor
lahf
pop
aas
mov
pop
fs
aam
push
push
cwtl
rcrl
ss
sbb
clc
jecxz
push
mov
loope,pn
sbb
dec
push
mov
sbb
out
scas
inc
xor
imul
lds
mov
in
mov
je
pop
jecxz
je
incl
pusha
mov
sbbb
fbstp
scas
adc
out
fbld
aaa
jge
rolb
insb
or
out
sti
icebp
inc
cmpsb
dec
and
cs
movsl
dec
jl
push
int
xchg
pushl
insl
lds
add
test
inc
push
enter
or
push
sbb
jecxz
jbe
lea
ds
or
push
ljmp
xorl
shl
popa
mov
arpl
cmp
xchg
sbb
test
lret
inc
add
jle
sub
mov
xchg
xor
fsubrl
and
jp
or
in
mov
repz
xor
out
stos
adc
aaa
inc
insb
mov
addb
cs
mov
or
add
push
dec
test
and
sbb
sub
jmp
adc
popa
adc
cmp
pop
jp
push
xor
dec
fs
lret
fnstsw
das
push
sub
xor
sbbb
fnstenv
mov
loopne
adc
add
fs
movsl
pushf
jmp
cmpsb
xor
das
fxch
inc
mov
negl
add
movsl
and
xchg
leave
and
pop
add
push
add
or
push
xchg
add
or
and
std
or
andl
sbb
or
mov
sbb
adcb
ret
pop
ret
mov
fcoms
mov
fisubrs
fildll
xchg
dec
jp
mov
xchg
sbb
adc
js
enter
js
xchg
cmpsl
adc
add
adc
push
add
dec
xchg
or
mov
inc
std
inc
xchg
xchg
std
sarl
mov
push
adc
adc
jp
jmp
frstor
xchg
je
ret
push
pop
lds
xor
mov
jle
pop
enter
rorl
pop
cmp
or
mov
bound
jp
fstps
cwtl
adc
jo
std
mov
mov
xchg
dec
das
dec
and
sub
mov
or
iret
loopne
iret
jb
mov
leave
xchg
insl
mov
xor
popa
and
loop
or
jnp
in
dec
cmpsb
inc
mov
mov
loope
sarb
cmpsb
mov
push
in
xor
add
repnz
stc
shrb
enter
nop
jns
rolb
fdivrs
flds
into
icebp
lret
mov
cmp
mov
rorl
je
push
movsl
dec
popf
jns
jge
pop
fisttps
and
int3
push
xor
lods
cwtl
push
lahf
sub
ljmp
push
jns
adcl
lea
enter
mov
test
es
and
outsl
sub
cmp
insl
xlat
loope
icebp
or
and
scas
into
dec
test
mov
and
popf
add
adc
or
scas
dec
sub
add
scas
cmp
mov
lcall
stos
mov
divl
movsb
mov
pop
inc
sbb
jecxz
test
ficoml
pop
nop
mov
mov
jo
or
or
dec
or
push
mov
daa
push
sub
pop
sub
divl
arpl
fcom
and
sub
push
loope
mov
mov
push
inc
inc
lcall
jae
and
cld
mov
push
mov
jb
inc
addr16
fnstenv
mov
pop
pop
sti
cmp
lods
sub
hlt
push
lea
pop
xchg
sub
insb
ljmp
bound
or
inc
sti
inc
fwait
shll
cs
push
inc
adc
mov
or
lahf
aad
lret
xchg
scas
movsb
dec
push
lods
out
mov
xlat
mov
lea
cmpsl
int3
fwait
sbb
jge
jae
jbe
xor
jecxz
imul
dec
add
nop
fldt
push
inc
fldcw
xor
outsl
hlt
lock
lcall
call
rcll
into
cwtl
faddl
sbb
mov
jle
rclb
adc
lea
sub
inc
idivl
and
push
lret
enter
push
mov
insb
fistps
mov
jmp
dec
test
loop
sahf
jnp
jp
out
adc
movsl
mov
mov
addb
xchg
lea
push
dec
shlb
inc
aam
vcvtdq2pd
mov
lods
inc
cmp
enter
ds
lods
push
and
or
adc
clc
mov
out
cmp
lods
add
sbb
mov
xchg
xor
fwait
or
adc
adc
cmp
std
push
mov
lods
and
inc
push
in
jbe
clc
int3
mov
push
ljmp
cmp
push
jns
mov
jo
add
shrl
pushf
mov
sarl
leave
leave
add
mov
rorb
mov
icebp
add
cmp
rcrb
fisttps
xchg
pop
cld
push
outsb
ret
sub
in
xchg
adc
les
mov
jle
out
shrl
cwtl
dec
mov
xchg
aaa
mov
cmp
aam
push
inc
pop
test
js
xchg
enter
mov
sub
fisttps
cltd
or
pop
sub
xchg
cltd
dec
adc
push
loope
mov
mov
and
pop
je
inc
nop
push
outsb
xchg
mov
cmp
ret
xchg
cmp
push
or
cmp
das
pop
mov
repnz
xchg
jmp
mov
push
nop
into
mov
out
mov
add
push
mov
pushf
fbstp
pop
pop
cmp
mov
leave
fistpl
test
testl
mov
jl
notl
test
push
inc
sub
adc
mov
mov
popl
pop
iret
aas
cwtl
push
ja
mov
in
loopne
icebp
aad
rcl
jno
add
in
jbe
int3
mov
dec
xchg
cmp
lcall
lahf
jb
pushf
xchg
adcb
xor
adc
pop
xchg
addr16
cwtl
push
inc
sbb
mov
push
repz
ja
test
push
out
xor
jp
sar
dec
mov
adc
aad
daa
mov
pop
or
loop
pop
adc
pop
pop
ss
mov
out
xor
clc
inc
jae
inc
jb
leave
pop
jbe
mov
cwtl
aad
test
jne
mov
popa
pop
sub
and
jno
ss
jl
pop
fs
into
xchg
nop
or
add
push
ss
loop
and
mov
jp
mov
push
or
add
subl
mov
xor
je
insl
mov
ret
or
popf
out
sti
rclb
inc
orb
inc
into
icebp
repnz
pop
fadd
test
xor
push
sbb
pop
cmp
idivb
cmpsl
sub
cmp
inc
adc
adc
enter
pop
xchg
jb
inc
mov
cmc
ficoml
std
jmp
icebp
out
les
cmp
sub
mov
sbb
loope
push
xor
imul
mov
outsb
je
out
das
jle
inc
dec
mov
jne
addb
outsl
and
es
out
dec
jb
xor
dec
sub
sbb
stc
pop
mov
rorb
pop
xchg
jl
ljmp
out
fstpt
jle
in
pop
ret
popa
mov
add
mov
cmpsb
mov
push
fsubp
adc
xchg
xchg
mov
mov
fdivs
pop
ret
mov
out
test
fimull
out
pop
mov
fcomi
in
sub
aad
lcall
jmp
dec
cli
xlat
and
pop
mov
sbb
lcall
aad
std
dec
sahf
stos
mov
add
ss
fs
stos
and
dec
dec
push
ljmp
mov
sbb
pop
adc
cmp
jle
subb
scas
mov
pop
xorb
in
js
jl
ret
fcom
inc
movsb
addl
pop
sub
and
ds
mov
push
add
fwait
inc
rolb
adc
mov
pop
and
idivl
scas
sub
mov
add
pop
mov
movsl
inc
cmc
bound
subb
mov
icebp
ficompl
addb
jmp
or
xor
xchg
inc
mov
lret
push
fs
fadd
xor
jb
mov
inc
xchg
mov
sub
adc
dec
int3
add
mov
ret
je
sub
inc
or
push
mov
push
jmp
andb
sysexit
dec
add
paddusw
jle
adc
inc
adc
push
add
mov
clc
outsb
sbb
inc
and
adc
outsb
add
push
ja
pop
pusha
sub
jcxz
das
mov
pusha
scas
sbb
cmc
xor
gs
or
add
cmp
mov
loopne
filds
mov
out
sbb
mov
sahf
cmp
cltd
fdivrs
mov
dec
mov
lahf
jne
ret
test
lock
dec
cmp
aad
sbb
int
mov
stos
mov
int
xor
mov
sti
fldenv
rclb
lea
pushf
call
cltd
cmp
bswap
jno
cmp
or
push
xor
call
int
cmp
dec
jns
pop
ret
cmp
clc
lods
push
adc
inc
test
dec
xlat
push
enter
and
aad
push
and
lods
inc
xor
lahf
lahf
mov
arpl
add
xchg
int
cs
push
rcll
nop
sub
lcall
sbb
leave
jns
pop
movsb
push
fisubl
out
shl
je
mov
add
cmc
ret
dec
ljmp
mov
pop
imul
sub
fisubs
sbb
aaa
mov
sarl
pop
fists
test
xor
or
leave
movsl
push
pop
pop
cmc
pop
shl
popa
daa
addr16
std
test
xor
es
loop
xchg
movsl
scas
and
push
lock
fwait
cwtl
lods
add
flds
push
jmp
push
std
push
jmp
scas
pop
inc
mov
mov
and
jp
adc
popf
jl
jmp
bound
and
gs
sbb
in
pop
inc
les
pop
cltd
js
mov
jns
mov
or
leave
adc
stc
jae
lret
fwait
sbb
cmpb
int3
sub
mov
dec
aad
outsb
ja
ja
daa
dec
add
cltd
jns
sete
or
push
mov
in
icebp
push
ret
cli
cmpsl
xchg
xchg
inc
lret
mov
xlat
outsb
test
pop
icebp
or
xchg
stos
push
mov
mov
jb
rcrl
sbb
jbe
inc
push
mov
adc
push
int
mull
rorb
ret
mov
xchg
rorl
mov
jns
scas
negl
xor
leave
imul
jbe
fcmovb
mov
mov
pop
xchg
inc
sbb
jle
movsb
dec
outsl
pop
sbb
inc
mov
dec
lds
xchg
das
lock
sub
loop
or
pushf
pop
push
adc
push
cmp
add
or
push
inc
test
dec
out
orb
pop
push
lea
fnstcw
fs
mov
mov
and
movsb
push
jns
aaa
in
pop
pop
lods
fdivs
jl
pop
sub
pusha
leave
mov
test
in
int3
das
jecxz
xor
mov
in
or
dec
lds
mov
sub
or
lret
shl
fsubr
scas
and
mov
in
push
pushf
in
sub
mov
and
mov
loopne
movsb
je
xchg
adc
lock
fcomps
hlt
sbb
dec
hlt
xchg
out
xchg
adc
sbb
fistps
out
test
sbb
cmp
das
fidivrs
push
test
mov
push
fdivrs
scas
push
inc
cmc
arpl
pushf
pop
sub
xchg
ljmp
xchg
clc
inc
cwtl
cli
mull
inc
add
js
lcall
inc
xchg
xor
ret
cmp
movsb
rcrl
insb
insb
adc
sub
or
sub
sbb
aam
hlt
jmp
ficompl
pop
enter
into
dec
lret
pop
add
cmp
fwait
imul
and
cmc
test
mov
rcll
bound
insb
testl
stc
add
iret
dec
sub
out
or
and
lcall
aaa
outsb
inc
ds
jmp
cmp
and
jmp
mov
xchg
mov
clc
add
cld
push
movsl
fwait
mov
adc
cmp
or
nop
or
cwtl
push
pop
into
bts
add
call
movsl
jl
mov
mov
out
xor
shlb
mov
fmuls
insl
mov
mov
sbb
and
nop
movsl
scas
and
lea
sbb
inc
arpl
shrb
das
rclb
jle
ja
ret
jo
mov
sub
scas
lcall
inc
dec
arpl
fs
and
insl
lcall
dec
imul
jl
jae
stos
sbb
pushf
gs
mov
int3
sub
cmpsw
add
fisttpll
ret
sub
movsl
movsb
pop
inc
add
sub
xchg
int
cmp
xchg
aad
popa
cmpsl
sbb
jecxz
les
pop
in
and
mov
fsubrs
inc
stc
inc
fsubs
jb
inc
jae
lods
mov
dec
push
sbb
or
ficoml
scas
into
push
xchg
int3
out
mov
inc
and
sbb
inc
push
lods
xor
xor
hlt
aad
cmp
sub
adc
xor
je
sahf
aad
sahf
xchg
xor
push
push
sub
dec
sub
sbb
stos
inc
popa
sarb
into
adc
out
pop
xchg
xor
push
cld
pop
lcall
push
int3
sbbl
leave
add
jp
int
inc
mov
hlt
shlb
push
test
mov
cmp
lods
stc
dec
repz
sbb
bound
and
add
xchg
push
leave
ds
pop
pushl
adc
into
sahf
and
je
xor
xchg
jmp
dec
iret
pushf
clc
int3
jp
adc
rolb
in
xor
adc
lret
andl
sub
xchg
jge
cs
jl
icebp
add
jl
inc
inc
in
out
push
xor
pop
in
lds
arpl
das
jmp
sti
push
ret
lret
in
add
mov
stos
cltd
fsubrs
enter
test
push
dec
cld
rcrb
and
xchg
pusha
testl
inc
sti
lods
aam
int
loop
sbb
sub
jmp
and
adc
hlt
loope
sbb
sahf
call
into
pop
dec
dec
mov
out
jge
sub
mov
ljmp
pop
popf
movsb
dec
sbbb
dec
test
ret
ret
jbe
xor
mov
push
mov
ds
inc
inc
inc
fsubl
stos
in
cmp
mov
in
jmp
xchg
movsl
into
rorl
pop
movb
jne
subb
jle
add
dec
fmuls
fs
or
sub
jle
jecxz
std
jae
adc
out
pop
pop
mov
sub
sub
sbb
push
movsl
sahf
cmp
push
shll
pop
ds
mov
cli
insb
ret
aas
cmp
push
decb
cmp
pop
adc
and
ds
adc
xchg
or
rcll
sarl
xor
loope
fs
popa
rolb
cld
test
pop
inc
enter
sub
jae
inc
imul
insl
clc
icebp
or
test
loope
sub
dec
mov
or
sti
scas
enter
notb
inc
out
dec
lea
mov
inc
mov
pop
decb
std
or
push
add
in
mov
sbb
fildl
pop
in
pop
pop
pop
push
jno
xchg
sbb
mov
lcall
adc
mov
xchg
mov
add
jns
insl
fnstenv
loop
inc
and
insl
out
in
adc
popf
xor
pop
in
jp
test
sub
int3
dec
int3
dec
mulb
lret
test
dec
inc
cli
pusha
inc
fwait
dec
pop
sahf
rcr
and
and
leave
scas
je
or
and
and
mov
rol
lcall
negl
pop
inc
inc
push
xchg
das
xchg
add
rorl
sti
rcr
xchg
mov
test
push
xlat
cmovl
xlat
sub
shl
popl
mov
adc
pop
lds
cs
mov
push
or
xor
loope
push
pop
cmp
sbb
lds
popa
in
test
and
mov
xor
les
nop
insb
fmulp
sbb
xor
xor
mov
cs
pop
jns
mov
xchg
jge
test
mov
add
shlb
sub
lcall
xchg
int
outsb
popf
cmp
jnp
cli
mov
or
test
jb
imul
jae
in
scas
movsl
stos
push
outsb
in
cmp
addb
mov
xor
mov
inc
lahf
sarl
adc
in
pop
loope
in
gs
pop
lret
sub
add
jmp
sub
arpl
and
mov
adc
ljmp
xor
xchg
daa
fs
mov
mov
iret
fildll
mov
inc
add
fs
push
cwtl
xchg
sub
inc
mov
fs
xorw
xor
leave
outsl
pop
stc
push
scas
lods
iret
adc
test
dec
adc
ret
jmp
in
sub
cmp
jae
mov
and
sub
shll
mov
mov
adc
test
jbe
xor
scas
mov
mov
xlat
icebp
xchg
out
lods
mov
push
int
jp
sbb
leave
call
rcl
sbb
push
sub
xchg
enter
push
jecxz
idiv
mov
mov
or
xchg
cwtl
vmaxps
or
push
shll
jnp
inc
adc
xchg
fstp
mov
jg
sbb
add
lock
test
pusha
push
clc
sub
or
enter
clc
xchg
mov
in
sub
stos
sti
adc
movsl
dec
add
sub
push
mov
rolb
mov
les
mov
push
or
pushl
out
mov
fs
push
cltd
jge
push
in
inc
repnz
hlt
adc
xor
jbe
or
jo
cltd
out
pusha
nop
rol
inc
pop
lods
xor
inc
dec
push
in
jp
and
xchg
adc
or
xor
add
fidivrl
sahf
in
push
mov
sbb
mov
jmp
and
push
pop
jle
adc
jge
aad
int
add
xchg
xlat
pop
xchg
shl
nop
hlt
pop
and
add
pop
jns
fs
mov
xor
aad
mov
xor
xchg
jl
jne
out
rolb
push
xor
and
in
push
pop
aas
scas
push
push
cmp
jg
fisubl
sbb
push
cvtpi2ps
je
jge
cli
dec
cld
dec
and
and
and
sub
mov
int3
stos
movsb
daa
sub
and
int
pushf
mov
xlat
shll
and
push
or
fcoml
daa
jne
push
fidivl
inc
das
sbb
hlt
mov
shll
popa
mov
fbstp
adc
popf
push
sub
enter
jp
out
mulb
add
mov
and
mov
adc
mov
mov
loopne
or
inc
jg
push
pop
les
dec
enter
int
ficomps
push
mov
sbb
sbb
add
xchg
or
jo
sar
fwait
mov
pop
sub
mov
push
xchg
fwait
pushf
pop
inc
pop
mov
push
orl
push
dec
xchg
cmc
inc
xchg
or
mov
fmulp
scas
out
dec
sbb
repnz
dec
dec
mov
fstpt
mov
imul
jns
cwtl
stos
mov
pop
sub
sub
push
fsubl
jmp
adc
mov
sub
out
sbb
hlt
les
mov
mov
cli
or
mov
dec
cmp
lods
popf
xor
xorb
xchg
push
movsl
notb
out
sahf
sub
or
lds
sub
push
sbb
dec
dec
stc
mov
fists
push
mov
imul
jbe
mov
mov
mov
dec
adc
fidivrl
inc
orl
je
jge
out
sarl
inc
clc
push
xor
out
int
aam
dec
sbb
jge
imul
fisttpl
mov
mov
mov
pop
icebp
xchg
outsb
adc
push
mov
testl
mov
sahf
fstpt
xor
dec
cmp
mov
push
cmp
mov
rcrb
cwtl
mov
jae
cmp
inc
xchg
push
fdivrs
lahf
sbb
fists
das
lock
out
cli
loope
mov
popf
or
push
repz
push
leave
ret
and
sub
jp
cltd
mov
pushf
push
cmp
push
mov
lret
mov
and
pop
cmp
push
jl
leave
cmc
mov
add
lret
mov
sub
lods
loopne
jmp
xor
daa
inc
sub
fadds
stos
xor
imul
xor
pushf
cltd
aad
pop
inc
out
sbb
cmpsb
dec
test
and
bound
mov
push
nop
mov
imul
push
jno
sub
aad
sbb
push
push
pushf
push
mov
cmp
sbb
mov
jno
stc
jae
lret
rcll
xchg
loope
lods
xchg
lods
or
dec
mov
inc
mov
loop
jmp
mov
sbb
or
repz
ficomps
out
pop
mov
dec
stc
mov
lret
or
or
mov
lret
sub
mov
nop
out
outsl
jo
int
sti
sub
sub
ds
cmp
popa
rcl
daa
lea
or
aam
pop
movsb
and
jge
test
dec
mov
push
into
ds
mov
inc
stos
fchs
aam
subb
cmp
jo
cmp
fimuls
sbb
loope
nop
repnz
js
xchg
lea
arpl
bound
iret
mov
dec
sub
jmp
pop
lret
shrb
mov
clc
fadd
hlt
mov
pop
popa
xchg
repnz
xchg
jb
repz
ja
out
jbe
mov
mov
xor
mov
adc
lods
add
pop
mov
jle
inc
or
inc
sbb
cmpsb
xchg
mov
out
arpl
jg
fidivrs
outsb
sar
sbb
ficompl
pop
int
outsl
xor
cmp
xchg
stos
xchg
mov
es
fcmovb
je
pop
call
mov
mov
pop
mov
icebp
xchg
jb
inc
xor
inc
dec
lret
sbb
sbb
push
ds
sub
js
xchg
mov
mov
mov
enter
push
mov
adc
sub
or
out
add
add
fiaddl
jecxz
lea
sbb
dec
or
or
std
sti
fs
xchg
lds
fwait
add
dec
xchg
mov
jecxz
xor
mov
xor
push
dec
cs
cli
testb
in
jb
fnstenv
out
call
adc
jnp
and
imul
inc
adc
daa
mov
push
or
push
js
or
repnz
rorl
jmp
sbb
in
dec
cmpsl
push
icebp
xchg
or
mov
iret
jns
xchg
push
out
xor
and
les
mov
out
and
or
push
sbb
sbb
xchg
xor
ss
cmc
add
fstps
pop
fsubr
in
in
sub
icebp
and
scas
sub
into
into
pop
xchg
scas
cwtl
mov
sub
lcall
scas
outsb
jg
popa
lahf
xor
lahf
add
mov
dec
mov
push
in
loop
mov
adc
jns
inc
jg
jo
lahf
icebp
cmc
gs
xor
call
insl
jmp
cmp
push
pop
lds
inc
out
xor
stos
add
mov
lret
call
push
andl
gs
adc
lock
mov
or
aaa
mov
xchg
repz
add
insl
in
adc
cld
xchg
ljmp
mov
cmp
mov
in
js
lret
mov
sub
movsl
dec
inc
fcomps
inc
mov
call
push
lock
cltd
cwtl
out
addr16
notl
or
mov
push
arpl
jg
sbb
rcrl
add
add
or
sub
adc
mov
xchg
jmp
jge
dec
add
sub
mov
fistl
cbtw
jns
repnz
xlat
out
and
popl
leave
rclb
into
xor
adc
adc
sarl
inc
inc
lahf
aas
subl
mov
aam
fnstsw
inc
cmp
sub
stos
mov
test
inc
adc
pop
push
lret
jns
xor
test
jge
xchg
test
in
push
test
scas
outsl
fldenv
push
xchg
filds
stos
roll
dec
lret
popa
push
std
jne
popf
dec
xor
adc
mov
hlt
push
insl
xor
test
cmpsb
in
pop
roll
cmp
addr16
fbld
or
pop
test
sbb
push
lock
push
sbb
pop
jno
jne
pop
mov
lret
push
lret
addb
cmpsb
mov
pop
dec
stos
cmpl
aam
lods
dec
mov
push
add
fnstcw
andl
out
jb
sub
inc
jbe,pt
ds
adc
test
dec
dec
xor
test
cs
or
loop
int
mov
out
push
push
loop
jl
in
lret
or
std
imul
stos
mov
bound
ds
push
xchg
das
hlt
push
push
pop
test
dec
or
es
jg
das
test
xchg
dec
jne
lock
push
cmp
and
arpl
mov
cmpsb
les
push
ss
cli
xchg
add
mov
mov
jg
fcmovnu
into
mov
arpl
out
push
mov
xchg
sub
outsb
fmuls
cltd
mov
cmp
push
adcl
xor
cli
or
faddl
clc
clc
adc
adc
rcr
or
push
lock
add
push
xlat
push
lds
inc
mul
jecxz
pop
mov
lea
outsb
mov
mov
into
xchg
div
cmp
cld
sub
dec
out
test
and
in
sbb
lcall
inc
test
orb
ljmp
faddl
call
pop
jg
jne
arpl
adc
sbb
adc
lcall
pop
xor
fbld
add
ds
jmp
push
mov
in
outsl
ja
filds
mov
xchg
leave
dec
xchg
xor
sbb
fs
cwtl
sub
and
dec
and
hlt
lret
int
add
sub
out
sbb
or
adc
rcrl
inc
out
fidivrs
mov
sbb
fldt
dec
lea
addr16
xor
pop
push
jmp
leave
mov
fisttpl
mov
push
lret
jl
cmp
dec
pop
rcll
fnstsw
push
xor
mov
inc
nop
xor
xorb
shl
pop
mov
call
enter
ljmp
xchg
in
xor
fisttpl
mov
inc
cmp
xchg
pop
and
ja
add
pop
pop
push
pop
sbb
jno
adc
movsb
push
add
push
add
dec
ret
ljmp
jge
and
jge
pop
inc
pop
pop
sbb
pop
int3
dec
repz
jmp
or
clc
cmp
stos
ret
or
ret
pop
insl
cld
stc
test
sbb
mov
mov
jbe
sub
push
dec
mov
adc
outsl
stos
leave
js
les
jge
js
imul
shll
lods
cs
sbb
push
rcl
push
push
test
shrb
imul
mov
out
aaa
add
int3
lea
clc
js
add
sbb
into
loop
js
sbb
xor
mov
lcall
imul
xlat
dec
pusha
inc
lods
dec
adc
jl
scas
fiadds
dec
dec
or
je
sbb
test
aas
pop
sbb
sbbb
nop
in
adc
cmp
into
fadds
aad
imul
jae
push
fwait
jle
insl
popf
lock
andb
xor
mov
out
xchg
or
jecxz
std
lds
enter
scas
mov
fnstcw
push
jge
enter
hlt
in
iret
dec
sub
xor
in
pusha
adc
jmp
xchg
mov
mov
xorl
imul
cmc
mov
sub
pop
mov
sub
fcoms
jle
leave
dec
mov
cmp
nop
rorb
jle
mov
sub
movb
cmc
or
aam
pop
mov
sti
xchg
je
fidivs
inc
xor
lods
out
negb
flds
imul
in
jmp
inc
shll
xor
and
shrl
pop
test
mov
mov
inc
push
dec
push
inc
and
lds
sbb
push
movsl
repnz
sbb
jns
imul
pushf
lret
fbstp
test
data16
jge
mov
mov
test
cmp
popa
imul
mov
mov
imul
loope
sbb
cli
xchg
jnp
push
cmp
pop
test
ljmp
cmp
sbb
insb
sub
xlat
insb
loope
pop
out
int
ret
sbb
jg
push
arpl
cmpl
sbb
xchg
cmp
mov
aaa
inc
xchg
jmp
dec
shr
sahf
mov
stos
xchg
mov
in
ss
push
or
call
lods
lea
jge
xchg
sub
test
in
inc
cmpsb
dec
jmp
xlat
cmp
pop
and
pop
cmp
add
loop
scas
pop
mov
pop
adc
shl
lcall
xor
pop
arpl
pop
adc
andps
inc
jl
rol
and
dec
fldcw
push
jo
push
arpl
mov
or
popa
sbb
mov
pop
repz
test
lret
ret
push
cmp
hlt
inc
inc
ja
xchg
aad
xchg
or
shlb
sub
ja
aam
push
imul
inc
pop
mov
sub
insb
inc
test
frstor
ds
popa
fnstcw
fcmovu
push
and
jo
cmp
add
adc
fbstp
jae
dec
fmull
mov
mov
pop
ret
cli
rcrb
jle
dec
sbb
cwtl
shr
loopne
int3
adc
jne
cmp
aam
movl
dec
sbb
inc
sbb
outsb
lods
xchg
jnp
bound
mov
popf
jge
les
mov
in
jl
jns
pop
pop
cwtl
xchg
and
mov
daa
xchg
popl
add
dec
movsl
cld
inc
xor
shll
jp
sub
nop
push
add
insl
push
mov
movups
or
loop
sbb
jns
inc
mov
cmc
lock
mov
xchg
fwait
xchg
stos
fwait
jge
loop
dec
adc
outsb
xlat
xchg
sarb
cmp
inc
in
sub
push
cltd
or
adc
movsb
popl
test
orb
cwtl
rol
and
hlt
clc
push
ret
lret
pop
add
inc
sbb
jmp
and
cli
shll
lcall
fidivrl
and
mov
dec
xor
mov
test
cld
sahf
jno
adc
idivl
sarb
dec
sub
int
and
cmpsb
jo
std
scas
out
mov
outsl
cwtl
daa
mov
adc
push
dec
cmp
jbe
in
cmpsb
loopne
je
xchg
dec
xchg
dec
in
mov
jns
cmp
popa
and
or
push
mov
jbe
stc
mov
cmp
test
inc
lret
popf
dec
jns
or
mov
pop
jno
jmp
lcall
and
scas
cwtl
mov
fcomps
icebp
mov
cmpsl
cmp
and
sbb
mov
lret
aam
sub
adc
hlt
cmp
xor
push
shlb
or
lock
hlt
aaa
out
sub
cmp
jg
dec
sub
js
inc
jmp
push
jbe
fwait
mov
popa
pop
push
call
loope
add
and
and
jg
push
mov
or
xchg
outsl
add
repz
jg
jmp
push
or
jne
or
dec
sub
clc
push
notl
push
fstpt
xor
jmp
jno
mov
fs
sbb
push
andl
push
xorb
fcompl
cld
sbb
rol
icebp
push
movsb
push
pop
mov
insb
shl
fucom
adcl
fwait
sbb
pushf
pop
dec
ja
pop
and
and
adc
sub
pushf
sbb
out
cwtl
outsb
repz
aaa
std
mov
sub
pop
jl
push
mov
pushf
iret
movsb
inc
aaa
xchg
filds
push
test
in
test
icebp
mov
je
jecxz
jnp
out
inc
in
lea
pop
daa
mov
scas
or
andl
pop
or
inc
into
repnz
stos
xlat
ljmp
mov
subb
or
cmp
mov
xor
fwait
mov
aaa
divl
enter
xchg
int3
xor
pusha
sub
sbb
adc
inc
pop
rolb
movsb
push
pusha
push
xchg
imul
xorb
das
pop
aam
mov
xchg
dec
sub
int3
cltd
jne
enter
jp,pt
mov
jb
arpl
mov
int3
adc
lret
aam
sbb
in
inc
shr
sbb
dec
sub
mov
mov
fldcw
pop
imul
lcall
mov
stc
fistps
pop
cmp
pop
ret
sbb
mov
fs
out
xchg
hlt
inc
sbb
sti
inc
xchg
lret
orb
inc
pop
jp
adc
ffreep
loope
aam
popf
sub
rorl
dec
jb
lahf
xchg
fildll
setne
lods
out
cmp
cmp
mov
add
xchg
es
pop
inc
xchg
push
mov
and
and
imul
fistl
fidivs
cmpsl
add
mov
das
inc
aam
cmp
leave
push
roll
sub
ds
rcll
cld
mov
jmp
sarl
dec
adc
mov
lret
pop
mov
dec
pop
imul
dec
or
scas
cmp
shlb
js
add
dec
arpl
cmp
lods
mov
out
insb
push
std
xor
rorb
test
push
sub
lock
stos
mov
sub
dec
mov
add
xchg
popf
shll
icebp
ret
arpl
pop
stos
insb
lret
js
xchg
push
and
fs
bound
jns
mov
cmp
add
addr16
or
loope
shll
sub
dec
cmc
adc
jg
sub
jns
adc
ret
ja
imull
dec
mov
aas
pushf
adc
mov
fmul
xor
mov
ljmp
add
mov
xchg
inc
rol
es
lock
xchg
dec
movsl
mov
lds
push
push
rorb
cmpsb
inc
subb
dec
and
mov
es
leave
fcomp
cltd
psubd
push
in
repnz
adc
mov
jns
and
arpl
pop
adc
mov
out
fwait
dec
and
adc
dec
add
stos
test
cs
shr
mov
cmp
adc
jo
aam
sub
jno
in
xlat
lods
int3
jge
mov
aam
jb
hlt
pop
mov
push
adc
jo
mov
shrb
ja
iret
loope
cli
or
jge
fstps
mov
gs
jns
testb
rcl
out
sbb
enter
fidivl
aas
pop
pop
cli
cwtl
pop
sub
rolb
sbb
adc
adcl
addl
jo
mov
ret
mov
sbb
pop
das
mov
jmp
mov
scas
test
xchg
cmp
lcall
imul
fisubrs
cmp
cld
and
jae
sub
sub
jbe
or
xchg
test
xchg
in
lea
fwait
gs
leave
mov
stos
push
ret
outsl
inc
pop
xor
xor
hlt
fstp
xchg
fisubl
lcall
loope
push
repnz
adc
xor
test
pop
and
clc
faddl
jbe
or
cli
aam
les
add
fdivr
push
or
cmpsl
jmp
mov
cmp
mov
pushf
dec
lcall
add
or
jl
mov
pusha
ja
fsubrl
lds
xchg
loop
mov
cmp
insb
loope
test
clc
xchg
or
mov
iret
test
add
inc
out
adc
in
aad
inc
jo
xchg
sub
rorb
test
int3
xchg
fcomps
lods
ret
rcr
add
cmp
xchg
test
xchg
cmp
jne
cld
lods
fs
cmp
dec
stos
push
inc
ret
rorl
fbstp
jl
hlt
cld
sub
xor
out
xchg
xor
enter
loop
jl
pop
or
test
pop
pop
xor
cld
mov
out
or
jl
fcompl
sub
sub
fs
ss
cmpsl
lea
cs
sbb
cli
aad
mov
pop
pop
scas
movsl
adc
mov
cmp
sbb
and
push
popa
sub
insl
fisttpll
adc
mov
iret
add
in
pushl
inc
movsb
add
ror
jno
sbb
xor
aaa
adc
inc
or
dec
shl
adc
sub
jno
dec
sti
mov
lret
clc
pop
jl
into
insb
jne
xor
xchg
or
pop
scas
fdivr
xorl
push
cltd
sbb
out
lahf
adc
cmp
inc
in
je
mov
aaa
cmpsb
jno
sub
xor
subb
hlt
push
out
cmpsb
mov
leave
adc
repz
xchg
mov
fwait
jl
fists
lea
jp
mov
pop
push
sti
or
jns
test
sarb
sub
leave
inc
jecxz
mov
sbb
fsub
aad
push
iret
dec
shr
jno
dec
icebp
inc
sub
stos
and
int
daa
dec
adc
push
into
jg
mov
mov
xchg
test
mov
inc
add
sbb
jbe
add
fmuls
pop
ret
jle
xchg
fbld
and
test
ret
sub
jo
andb
fs
mov
mov
pop
fmull
ss
xor
pop
adcb
stos
ret
hlt
push
pop
sub
xchg
sub
jl
sbb
cwtl
aad
mov
xlat
fimuls
sub
add
repz
fidivs
shlb
jb
mov
mov
cmpsb
cmp
loop
inc
nop
ljmp
inc
mov
sbb
sbb
mov
pavgb
sbb
mov
into
fiadds
aad
pop
mov
inc
pop
add
call
inc
xchg
int3
lcall
mov
cltd
cltd
ret
pop
pop
mov
mov
sti
bound
jmp
lods
xchg
bndstx
sub
xchg
adc
call
jae
sar
mov
mov
sbb
ja
sbb
testl
cwtl
adc
xchg
lcall
xor
and
pusha
ret
mov
pop
sub
loopne
mul
pushf
dec
jbe
add
sub
aas
sahf
lea
rorb
jecxz
sbb
enter
mov
pop
inc
inc
adc
and
mov
into
jno
mov
popw
jae
nop
jnp
xchg
xor
or
out
mov
mov
hlt
dec
pop
icebp
mov
cmp
or
out
push
lock
sbb
pushf
test
sti
lea
push
pop
je
mov
and
ss
sub
fdivs
pushf
sub
ss
mov
cmc
xor
cmp
cmp
xchg
mov
aam
push
fnstsw
cmp
popw
cmp
push
lods
lea
or
xchg
adc
setp
cmpsl
test
push
test
or
sub
jbe
jge
and
jbe
sbb
xchg
inc
sub
out
push
mov
out
cld
out
dec
xchg
fistps
outsl
add
push
test
fnstcw
aas
or
mov
hlt
bound
sbb
xor
clc
fwait
or
pop
mov
lods
adc
dec
fbstp
lods
xchg
jge
xchg
divl
jne
dec
xchg
mov
divl
dec
lcall
inc
cmp
push
aaa
mov
mov
in
push
lret
fucomp
mov
dec
sbb
sbb
sti
mov
ss
vmwrite
jnp
pop
xchg
sarl
mov
and
mov
jae
js
jnp
jmp
cwtl
mov
sbb
mov
in
mov
jno
scas
scas
clc
int
test
sarb
out
mov
or
aaa
xchg
mov
lods
sub
jg
dec
mov
pop
fadd
cmp
aad
jns
and
into
fistps
repz
xor
repz
add
mov
add
loop
insl
adc
addr16
mov
rcr
fwait
xchg
xchg
out
test
mov
lea
jecxz
or
lahf
mov
movsl
mov
inc
and
sbb
lret
jne
and
fmull
clc
or
jg
sub
in
push
push
dec
dec
int
sahf
lret
int
les
leave
push
jp
pop
adc
pop
cltd
pop
mov
or
pop
aaa
sub
insb
iret
sub
enter
and
pop
or
mov
sub
sbb
stos
mov
fidivl
xchg
add
pop
lods
pop
mov
pusha
outsl
dec
clc
leave
xor
xlat
gs
scas
bound
sbbl
mov
into
jg
cmpsl
test
imul
sarb
push
jnp
sbbb
jp
fbld
inc
xchg
je
adc
xchg
pop
xchg
pushf
mov
cmpsb
pop
pusha
jo
ss
push
fcmove
popa
std
jne
lods
inc
aaa
lahf
and
push
and
or
dec
fwait
adc
dec
idivb
daa
fmuls
ljmp
xor
pop
cmp
call
test
shrb
xor
mov
shrl
dec
jl
hlt
in
arpl
push
lcall
das
xchg
sti
lods
orl
sbb
mov
pop
lret
mov
aam
mov
out
sti
dec
mov
adc
roll
pushl
rcl
imul
cmp
add
inc
ret
jp
test
jnp
aam
cmp
pop
or
fsub
xchg
push
push
sbb
pop
mov
push
mov
in
xor
jo
pop
mov
xchg
addr16
sbb
push
inc
inc
pop
xor
addr16
shl
dec
into
enter
cmp
mov
mov
adc
mov
inc
lret
pop
mov
inc
ss
pop
dec
fwait
mov
push
icebp
pop
es
ja
rcll
and
sahf
test
add
orb
inc
lods
in
int3
cmp
decl
push
popf
addl
int
je
cwtl
lods
lcall
movsb
jae
fucomi
popf
adc
and
gs
out
dec
je
pop
push
imul
mov
popa
icebp
stc
mov
or
loop
or
sbb
lret
cld
cmp
loop
rcrl
idivb
or
testb
push
pop
dec
or
shlb
cwtl
mov
pop
push
inc
test
mov
mov
push
add
pop
pop
movl
cmpsl
mov
int
js
les
out
jmp
data16
xchg
xor
mov
daa
cmp
stos
and
out
cmp
sbb
clc
in
cli
notl
clc
inc
mov
dec
pop
and
inc
scas
insl
sub
xchg
xor
shll
adc
inc
rcr
adc
jae
popf
repnz
mov
sbb
into
jp
dec
cmp
adc
sbb
xor
mov
stos
scas
mov
jl
decb
test
add
out
lret
cld
sub
sahf
pop
and
lods
in
gs
adcl
sbb
lret
shlb
arpl
and
mov
cmp
adc
mov
addl
shl
pop
sbb
sub
jg
add
pusha
or
sbb
pop
inc
sub
cmovo
inc
mov
fwait
pop
xor
lahf
mov
jne
into
jg
es
icebp
fistl
push
jecxz
out
xor
mov
lods
inc
lret
ds
mov
scas
in
fstps
pushl
lods
or
or
jmp
addr16
movl
std
push
xchg
dec
sbb
pop
and
adc
dec
cmpsl
fdivrl
and
push
scas
inc
mov
aam
loop
sub
jae
shlb
dec
clc
fidivrl
stos
adc
lahf
outsb
js
sti
pop
outsl
icebp
sbb
movsb
idivl
xor
adc
rol
loope
and
mov
enter
jns
loope
rcll
adc
daa
jl
and
sub
jmp
adc
movsl
lea
inc
ret
push
test
pop
scas
roll
or
or
lret
lea
nop
fs
sub
mov
and
pop
icebp
xor
mov
jbe
scas
add
daa
xchg
cli
xor
cld
cmc
xor
add
arpl
sub
or
add
pop
add
mov
mov
lods
mov
lods
xlat
scas
ficomps
jl
jmp
call
rcrb
in
pop
inc
add
inc
or
js
cltd
stos
cmp
mov
push
mov
pop
addr16
cld
and
mov
mov
jb
push
sub
mov
ljmp
out
cmc
andl
int3
xor
jbe
mov
call
and
leave
mov
test
or
pop
cmp
cli
jae
in
rcrb
ljmp
les
mov
pop
lods
stos
mov
nop
adc
les
aas
pushl
mov
imul
pop
or
pop
mov
cmp
mov
push
repz
or
lcall
cmp
popa
jl
jp
or
sub
pop
pop
cwtl
adc
push
pop
dec
mov
dec
popf
pop
addr16
cmp
loope
pop
dec
xchg
mov
mov
xchg
rorl
mov
sbb
or
jnp
push
mov
imul
xor
dec
jnp
mov
mov
ret
imul
insb
int
mov
and
and
scas
aad
mov
mov
jb
add
and
rcrb
test
cmp
adc
popf
or
inc
cmp
dec
mov
test
fisubl
adcl
notl
je
push
xorb
xchg
jno
dec
adc
adc
mov
xor
rcrl
mov
xchg
add
pop
inc
inc
xlat
in
ss
mov
loopne
add
sub
mov
mov
rcl
flds
and
push
out
jecxz
ret
arpl
sahf
add
mov
out
pop
xchg
jb
and
aas
inc
xor
xor
dec
cmp
lcall
cli
dec
mov
sbb
ret
cmp
shrb
adc
lods
repnz
mov
jge
sub
xor
jmp
jnp,pn
sub
pop
stos
mov
not
sbb
cmp
hlt
mov
pop
mov
push
js
xor
jmp
jl
fsts
rol
mov
fstpl
cltd
inc
push
in
xchg
jecxz
outsb
mov
adc
jle
int
fiaddl
mov
lcall
out
and
xchg
push
pushfw
dec
mov
or
add
jne
idivb
jo
cmp
test
js
cmpl
push
lods
push
in
and
mov
pop
in
inc
pop
test
and
pop
jne
shrl
int
mov
fnsave
sub
jge
mov
push
imul
pop
in
inc
enter
pop
out
fistpll
xchg
mov
aad
insb
ljmp
pop
fwait
sbb
adc
inc
outsb
jbe
cmp
repz
adc
xchg
adc
sbb
cwtl
push
ljmp
dec
xchg
push
out
inc
cltd
loope
sub
push
daa
out
cmp
inc
mov
add
out
or
xor
mov
mov
add
fwait
pop
inc
mov
pop
aas
nop
xchg
dec
mov
xchg
popf
xchg
dec
in
test
dec
inc
sti
jecxz
and
sti
daa
pushf
adc
mov
cmp
inc
jae
xchg
cmp
test
pusha
cmp
and
lret
xchg
int3
into
cmp
or
adc
movsb
insb
test
add
or
or
pop
jecxz
xor
cmpl
cmp
cltd
mov
clc
mov
dec
jbe
add
mov
pop
lods
shlb
movsb
pop
stos
fs
ret
ds
sahf
sub
std
je
add
mov
add
dec
bnd
cmp
cmp
lahf
into
mov
scas
xor
jecxz
push
sbb
in
fwait
xor
call
adc
outsl
pop
push
les
and
jl
mov
rolb
mov
add
adcb
or
sbb
in
pop
xor
stos
fildl
pop
xchg
ret
push
mov
icebp
xchg
mov
shlb
xor
dec
sahf
cltd
and
test
stos
or
test
xor
adc
add
adc
or
adc
mov
dec
sbb
xchg
jno
hlt
cltd
jne
pusha
dec
test
fisttpl
mov
or
lock
rol
push
iret
xchg
int3
hlt
fldenv
xchg
xlat
cmp
popf
movsb
adc
les
loopne
dec
mov
adc
pop
push
shl
lods
pop
push
pop
lock
mov
lret
xchg
jg
outsl
sub
daa
cltd
lds
ret
daa
add
adc
cmpb
aad
lahf
inc
mov
pop
cwtl
sub
popf
jg
ss
fistpl
loopne
scas
cmp
xor
ja
pop
rclb
inc
les
movsl
hlt
cmpl
xchg
push
ljmp
xchg
sbb
lcall
mov
sbb
and
xchg
mov
int3
insl
cmp
imul
inc
lret
ret
jne
arpl
sbb
fcompl
push
xchg
rolb
adc
adc
lea
cmp
inc
sahf
sub
dec
loop
sbb
sbb
push
cmc
adc
sbb
xchg
dec
popa
push
test
pop
in
sub
les
add
pop
xor
addr16
sbb
mov
pop
mov
cld
mov
jae
es
pop
mov
out
fdivl
lods
cli
fsub
test
xor
cmp
ss
cmc
call
mov
cmp
out
xchg
in
stos
rep
dec
cwtl
sub
ds
xor
mov
fadds
inc
js
bound
xchg
xor
enter
lds
jbe
xchg
add
push
xor
jecxz
mov
jmp
mov
iret
dec
cmpsb
mov
aas
ljmp
mov
ja
subl
shlb
mov
mov
cs
xlat
ljmp
xchg
shl
in
inc
out
mov
js
xchg
pop
movsl
fsubrs
enter
mov
stos
addr16
push
sub
push
add
mull
in
inc
lret
hlt
adc
dec
hlt
and
xchg
aaa
mov
cld
cmp
pop
pushf
clc
popf
jmp
sub
in
daa
adc
jl
aas
mov
mov
cmpsl
insl
xor
pop
xchg
add
xor
mov
in
inc
inc
add
mov
icebp
test
mov
insb
mov
stos
mov
enter
inc
je
jl
bnd
cs
xor
mov
cwtl
test
push
ds
pop
cli
mov
subb
mov
sbb
in
or
call
add
outsb
dec
pop
stc
inc
cwtl
sti
leave
dec
ficoms
rol
nop
push
fwait
adc
jb
xchg
aaa
xor
sub
lret
insl
inc
jecxz
sahf
jns
jmp
sbb
add
test
mov
mov
fildll
mov
push
test
pop
dec
mov
dec
sahf
sar
imul
jmp
lods
rorl
push
push
hlt
pop
movsb
mov
mov
sahf
sahf
dec
cmc
push
pop
cmp
mov
test
data16
hlt
sub
ret
jo
imul
into
push
mov
out
fstpl
sarb
jno
rclb
adc
das
aam
xor
hlt
sti
faddl
pop
lea
mov
aaa
int3
mov
insb
mov
pushf
or
cmc
lret
call
jo
mov
cmpsl
xor
aam
inc
dec
cmp
mov
mov
and
dec
pop
test
cli
popa
ja
xor
lahf
pop
xor
int
mov
fdivrs
xchg
mov
xchg
xchg
push
push
test
or
jecxz
or
aam
subl
lret
cmp
jl
push
inc
push
dec
sub
ds
pop
stos
sbb
js
enter
loopne
test
cmp
int
in
lds
rorl
lods
gs
lret
xor
rorl
push
and
sbb
mov
xor
push
inc
ljmp
adc
push
sub
jbe
int3
mov
hlt
xlat
test
dec
fwait
add
out
jg
sahf
insl
es
cmc
fdivr
adc
sbb
push
sub
out
jo
jp
and
xor
testb
ljmp
adc
mov
xlat
repnz
mov
outsl
add
imul
cmp
jnp
sub
cmp
movsb
push
add
call
xchg
push
in
and
frstor
pminub
je
push
sbbl
cmovo
or
ds
sarb
stc
loope
adc
cmp
popf
and
ljmp
loope
add
mov
lea
pop
or
loope
adc
fisubs
mov
push
insb
ror
cwtl
add
add
das
cmpsl
dec
and
fadd
imulb
cli
dec
push
inc
insb
pop
cmp
and
mov
movsb
mov
cmp
xor
idivl
dec
mov
and
add
ja
sarb
xchg
gs
daa
mov
in
push
push
xor
mov
out
or
xchg
and
pop
rolb
sub
sti
jbe
jno
hlt
add
test
push
cmp
mov
sbb
push
and
das
arpl
aad
es
loope
lea
jg
push
inc
jle
ret
fistps
pop
hlt
and
int
xor
popa
mov
mov
or
js
jb
cwtl
mov
adc
cmp
icebp
in
out
and
jg
or
push
dec
fs
leave
mov
cmp
mov
sbb
push
mov
js
mov
push
stc
cmpsb
cltd
inc
orl
pop
popf
jl
scas
das
xchg
mov
divl
and
inc
pop
pop
adc
sbb
mov
or
imul
je
jno
cmp
or
add
enter
pushf
mov
fwait
jge
sub
adc
pop
into
cmp
mov
jns
dec
test
sbb
out
push
daa
jle
jae
mov
jb
sbb
cmp
sub
cmpsb
pop
adcl
mov
cmp
jge
js
test
arpl
cmpsb
sbb
and
xchg
test
jl
stc
loope
mulb
pop
push
mov
fxch
inc
icebp
push
mov
pop
pusha
mov
jnp
std
repz
mov
or
adc
mov
out
sbb
push
pop
inc
lea
or
test
or
adc
adcb
movb
xchg
fcomps
jle
xor
jecxz
ljmp
and
jl
jae
mov
divl
mov
stos
inc
aas
pop
xor
mov
scas
ja
or
test
imul
pop
cmp
and
lds
into
hlt
in
jle
repnz
cmp
cmp
cmc
push
mov
mov
xchg
add
jl
jle
xchg
repz
xor
xchg
mov
sti
push
mov
mov
sbb
adc
sub
popf
cmp
jp
add
and
ja
gs
cs
arpl
insl
push
pop
xchg
out
inc
in
jge
negl
and
push
jnp
mov
push
cld
adcl
cmp
xchg
add
out
cmpb
test
iret
mov
push
jns
adc
flds
mov
cld
mov
mov
lea
mov
jmp
pop
add
lods
lret
push
gs
sbb
out
jno
je
aas
ficoml
sub
dec
xchg
pop
fistl
mov
out
push
push
mov
xchg
aaa
out
sbb
adc
dec
ret
jmp
les
arpl
xchg
pop
rolb
aam
sbbb
dec
jmp
mov
jp
sbb
lret
xchg
rorb
mov
cwtl
sbb
cmp
pop
pop
push
fnsave
movb
xchg
adc
test
sarl
fcomp
jge
and
pop
pop
daa
in
jmp
scas
lret
icebp
inc
mov
mov
loope
repnz
hlt
neg
scas
cmp
xchg
sbb
xchg
dec
out
cmp
enter
xor
sub
cmpsl
mov
jp
sarl
mov
out
add
sahf
pushf
xchg
int
jg
mov
jp
into
inc
fs
addr16
mov
jne
iret
and
adc
pop
push
lods
mov
js
mov
add
push
add
pop
xor
shl
bswap
push
hlt
popf
dec
arpl
jns
stos
and
mov
pop
mov
push
add
test
jecxz
xlat
aad
mov
sbb
fisttpl
pop
sbb
cmp
jnp
pushl
mov
es
add
pop
mov
stos
inc
ja
sbb
popf
pop
out
jl
push
xchg
pop
test
xchg
sub
test
add
xor
movsl
fbstp
cmp
stc
enter
sub
insl
mov
and
mov
je
fidivrs
sub
sub
sbb
out
add
rcrl
ljmp
imul
push
xor
mov
adc
lock
sbb
pop
dec
mov
mov
test
push
cmp
mov
pop
js
pop
scas
mov
jl
mov
movsl
mov
aam
adc
inc
push
daa
leave
cld
mov
stc
push
jle
imul
shl
test
addr16
in
and
jne
inc
outsl
mov
sbb
sub
addr16
push
inc
push
aaa
loope
mull
movsl
inc
adc
push
mov
fs
imul
jno
cmp
pop
cli
adc
rclb
dec
loop
in
push
decl
push
out
push
in
mov
mov
sub
inc
adc
daa
arpl
movsl
addr16
fld
imul
pop
xchg
sub
mov
dec
xchg
mov
loopne
adc
fcomps
gs
fwait
lret
das
ljmp
lods
shlb
sti
jbe
push
bound
pop
sub
popa
cld
or
dec
lahf
test
xchg
cmpsl
adc
aam
jne
pop
sbb
in
push
mov
pop
jbe
dec
adc
dec
mov
sbb
loope
cmp
in
std
and
jmp
push
clc
je
fwait
sub
xchg
cwtl
insb
jle
mov
push
aam
pop
jae
out
shl
jmp
xchg
lds
cmp
jns
xchg
cli
inc
lds
push
repz
lret
jne
cs
jg
push
dec
pushf
pop
or
sub
aam
scas
cmp
jmp
rcll
push
dec
idivl
xor
ret
cmp
je
jae
insl
and
jnp
lods
inc
push
xor
add
xchg
jb
sub
cwtl
mov
mov
mov
pop
movsl
mov
loop
push
orl
push
lret
fsubs
push
mov
test
mov
mov
cli
sub
adc
das
mov
push
mov
mov
testb
cmp
lret
das
inc
test
sbb
mov
add
push
jmp
sbb
fldenv
aas
jns
pop
jno
movsl
leave
loopne
and
and
xlat
jg
out
rorb
fstpl
out
cmpsb
cmpsb
pop
and
mov
lret
dec
mov
add
js
xchg
in
xchg
mov
nop
lods
icebp
leave
xchg
cmc
push
jb
movsb
cwtl
lahf
lcall
dec
gs
mov
in
cmp
adc
sbb
jnp
hlt
stc
loop
jns,pn
inc
jle
out
and
pop
or
int3
lahf
sub
and
rcll
mov
es
push
mov
hlt
inc
loope
xchg
jle
mov
ds
imul
js
mov
mov
fwait
aaa
lock
fwait
notb
adc
orl
jl
into
and
nop
subl
sub
dec
sbb
fisubrs
outsl
cmp
and
push
aaa
xlat
repnz
adcl
ret
aas
aam
leave
sbb
lret
add
or
pop
add
sbb
stos
or
sti
add
stos
cmp
jge
xchg
xor
lahf
cmpsl
adc
xchg
fisubrl
mov
insl
clc
inc
loop
pop
cli
push
xchg
dec
loope
inc
mov
cwtl
sti
xchg
mov
test
enter
and
mov
adc
lcall
sub
mov
loope
xor
cltd
mov
in
push
add
xor
jg
sbbl
xor
cli
out
pusha
repz
mov
mov
adc
xor
rorb
mov
and
mov
punpcklbw
pop
lods
mov
xchg
xor
repz
dec
lods
pop
xor
inc
cld
packuswb
test
inc
xchg
jo
inc
lcall
pop
mov
or
mov
adc
xor
test
xor
xchg
ja
jnp
insl
and
xchg
mov
or
hlt
pop
mov
jle
mov
aas
aam
add
jne
incl
stos
outsl
pop
decl
repnz
rcll
outsl
fwait
mov
andl
loopne
mov
lds
fisubrs
cld
icebp
popfw
mov
add
add
add
and
add
sub
adc
setb
mov
es
mov
push
cmp
mov
add
inc
or
cmp
adc
dec
sbb
mov
push
nop
fwait
jge
push
mov
dec
inc
cmp
ficompl
mov
pop
lods
pop
push
dec
xor
lret
ja
ret
sbb
xchg
sbb
fidivrs
xchg
inc
fisubrs
or
movsb
adc
add
ret
adcb
jnp
nop
cmp
nop
pop
sub
jns
lods
ljmp
stc
and
xlat
and
fdivrs
jge
sub
jle
daa
and
mov
out
int
arpl
into
mov
jmp
or
test
stos
sub
jge
jo
xchg
push
push
push
rcll
hlt
jno
xchg
sti
add
ljmp
out
sbb
sbb
ret
inc
pop
out
mov
movsb
mov
or
dec
filds
cmp
dec
mov
jge
imull
mov
bound
lcall
pop
aas
push
movsl
adc
push
xchg
lret
xchg
cmp
rcl
mov
jbe
mov
mov
das
xchg
vpcmpgtd
or
dec
or
in
jmp
aaa
pushf
xlat
dec
dec
push
mov
jle
cli
cmp
xor
pop
xchg
movsl
fwait
cmp
adc
aaa
xor
loope
aas
stos
das
cmp
int
xchg
mov
jne
xchg
xchg
loop
xchg
adc
rcrb
pusha
push
fadds
cwtl
mov
or
and
rorl
int
mov
test
push
xor
aad
inc
call
or
andb
inc
push
cli
or
push
insb
in
loope
loopne
pop
and
repnz
push
mov
insl
std
xchg
repnz
out
or
xor
adc
push
shlb
xor
mov
jno
push
inc
negb
mov
je
clc
cs
scas
or
notl
loop
les
dec
aaa
popw
jb
or
xor
push
into
mov
and
adc
popf
push
pop
mov
cmpsl
lods
lods
int
outsl
dec
enter
fcompl
push
sub
pop
testl
in
stos
dec
pop
cmp
je
lock
adc
subl
in
mov
pop
aam
dec
in
sahf
popf
xchg
mov
outsb
lret
aaa
mov
aad
mov
pop
xor
sbb
call
jmp
fs
or
jmp
les
dec
test
gs
shrb
and
mov
dec
popf
popa
lods
loope
or
xor
lret
xchg
je
mov
test
stos
mulb
mov
mov
sbb
sahf
inc
push
lret
std
sahf
push
pop
fdivrs
cmp
pop
into
movsb
pop
dec
sbb
cmp
push
pop
test
jg
add
rcll
stos
sub
lahf
stos
add
negb
fwait
jb
out
hlt
nop
jmp
mov
js
test
in
sbbl
test
iret
jp
jg
sbb
mov
push
mov
loope
cltd
call
xor
ljmp
loope
sbb
loopne
aaa
add
xor
cmp
sar
push
ret
pop
jbe
pop
and
mov
jb
or
lock
not
frndint
or
inc
dec
cmp
int
out
mov
out
loope
cmp
cmpl
scas
je
xchg
inc
decl
ret
imul
fwait
mov
iret
sub
xchg
sbb
xor
mov
jb
shl
int
jp
mov
hlt
ret
arpl
hlt
xchg
sbb
jns
dec
xchg
cmp
pop
sub
pop
lds
pop
lea
out
sub
or
add
jae
jb
mov
inc
fisubl
stos
push
test
jmp
out
xchg
mov
fldcw
and
push
xchg
mov
es
loopne
enter
mov
stos
inc
xchg
mov
imul
inc
mov
sbb
push
repz
dec
sbb
sub
xchg
or
ds
dec
sub
and
inc
xchg
pop
cmp
mov
xor
inc
lock
jge
in
mov
ja
xchg
addl
mov
sbb
pop
faddl
or
fbld
mov
push
ljmp
inc
out
dec
pusha
call
dec
std
and
sub
fistpll
arpl
push
mov
inc
lcall
sbb
cli
add
add
dec
movsl
xor
lods
xor
xchg
jle
cmp
les
ljmp
pusha
mov
xor
call
pop
pop
stos
jne
aam
dec
aam
pop
sbb
sar
sti
or
in
mov
imul
les
mov
insl
sbb
or
out
jge
mov
mov
or
inc
cmc
push
pop
mov
mov
push
jg
xor
mov
pop
pop
into
mov
ror
cmp
add
clc
incb
push
cmp
pop
inc
add
sub
and
xchg
mov
out
xchg
xchg
pop
add
push
popf
push
aam
push
or
lret
lods
xor
and
stos
stos
jmp
fiaddl
frstor
ds
push
xchg
inc
xor
pusha
mov
push
ljmp
push
push
push
dec
cld
in
fbld
pop
ret
rcl
adc
hlt
out
andps
repz
imul
fistl
sbb
cmc
xchg
sbb
cltd
mov
mov
insl
dec
shll
pop
add
inc
aas
jno
sub
xor
loopne
or
es
decb
cmp
mov
pop
jno
sub
bnd
repz
cwtl
jg
jo
cmp
xchg
test
or
xorl
mov
ja
jecxz
and
rcr
test
and
leave
in
inc
test
divl
adc
dec
sub
add
es
mov
mov
xlat
or
add
pop
test
sub
mov
pop
xchg
pop
outsb
shr
push
mov
xchg
cmpsl
dec
xor
mov
or
xlat
dec
push
mov
frstor
jecxz
pusha
insl
sti
or
ret
add
cli
xchg
stos
jne
add
jb
mov
jno
adc
jmp
jns
sub
fisubl
push
pop
mov
xor
mov
ret
jo
cwtl
mov
repnz
sub
push
das
aaa
rorb
mov
test
push
adc
jge
cmpl
mov
rolb
dec
sub
mov
xchg
notb
cwtl
xor
fcoms
shll
cmp
lods
clc
popa
push
stos
push
shrd
int3
inc
push
pop
xchg
in
pop
xchg
mov
jbe
hlt
loope
mov
mov
push
cmpsl
sbb
jno
mov
les
mov
dec
rorb
fs
in
ret
jno
xchg
mov
pop
jecxz
xor
mov
inc
or
jle
dec
mov
out
inc
mov
fstl
and
aas
push
stc
cmc
inc
push
lods
xor
xchg
sar
mov
sar
aaa
shlb
in
jp
jb
xchg
fsubrp
mov
mov
scas
std
lret
push
adc
cli
dec
scas
xchg
das
mov
pop
mov
mov
out
or
mov
in
sub
push
pop
pusha
insl
lods
xchg
js
int3
pusha
jp
icebp
ja
push
std
repz
cld
xor
jno
sub
xor
scas
das
push
stos
loopne
cmp
push
sbb
or
pop
inc
push
xor
int3
dec
arpl
and
ds
lret
xchg
in
push
in
mov
push
sbb
xchg
roll
mov
mov
push
mov
or
in
pop
cmpsl
mov
xchg
adc
adc
ja
push
stos
add
loopne
in
pop
pop
adc
xlat
dec
mov
xor
sbb
bound
dec
daa
dec
pusha
lds
mov
dec
pop
mov
mov
mov
fsubl
addl
push
push
push
pop
aam
xchg
sbb
pop
shlb
add
addb
in
jnp
ljmp
je
mov
mov
clc
test
pop
bound
cmpsl
xchg
cld
hlt
lods
jl
mov
rorb
mov
xchg
add
loope
and
jmp
pop
fs
mov
js
in
or
arpl
mov
aaa
rcl
mov
shl
add
bound
push
mov
mull
in
sbb
sub
test
xchg
push
das
sbb
popf
pusha
sub
aam
pop
faddl
repnz
daa
pop
push
pop
out
jae
or
pushf
mov
ja
in
lods
rclb
out
and
daa
xor
cmp
xchg
add
gs
jle
sbb
pop
std
flds
dec
and
andb
adc
lcall
rorb
arpl
adc
lcall
fucomi
and
pusha
xor
stos
inc
cmpsb
xlat
aad
aad
xor
jecxz
push
dec
sbb
pop
pop
inc
jge
lock
js
test
hlt
and
inc
mov
pop
andb
xor
movsb
and
mov
jg
mov
popa
xor
push
imul
pop
mov
mov
fcmovu
lret
imul
fwait
out
pop
je
fwait
inc
xor
jg
mov
incl
es
fcmovne
xchg
icebp
add
ret
or
mov
int
inc
orl
sub
aad
adc
mov
inc
jbe
in
push
mov
or
popa
in
xor
repnz
xchg
sti
jp
ja
lret
das
mov
in
scas
jo
not
popa
call
cmp
cli
iret
ja
stc
jb
cmp
movl
nop
enter
mov
dec
push
ss
test
outsb
dec
es
int3
cmc
sub
cmpsb
push
sahf
cwtl
scas
outsl
push
cwtl
data16
xchg
jae
cmp
jmp
ret
imul
or
imul
out
push
xchg
gs
and
or
loope
mov
sub
xchg
test
xor
lea
in
add
mov
leave
fwait
push
ljmp
cmp
lds
xor
and
mov
aam
clc
hlt
and
aam
dec
call
div
aas
lcall
cmpb
sbb
sbb
mov
xchg
insl
push
jecxz
adc
das
sub
inc
inc
mov
add
pop
test
daa
dec
inc
jle
rolb
dec
addr16
pushf
sarb
outsb
in
push
fbstp
lret
into
fwait
stos
clc
std
push
pop
mov
add
xchg
adc
mov
mov
cmpsl
addr16
call
xchg
adc
mov
lods
addl
jg
je
push
sbb
js
xor
or
mov
ret
incl
stc
inc
mov
dec
test
rorl
js
adcl
fidivrl
mov
fsubrl
enter
xchg
push
movsl
push
xchg
ror
dec
adc
and
shrb
fidivrs
cmp
xchg
sub
addb
jnp
repnz
inc
outsb
inc
pop
fisttps
jo
sub
sub
adcl
mov
cmp
adc
inc
mov
test
cmp
push
jo
adc
in
adc
xchg
jge
mov
xchg
and
or
push
cli
mov
dec
cli
and
mov
ljmp
dec
sub
hlt
scas
pop
in
push
xchg
out
gs
dec
mov
fsubl
sub
imul
mov
lret
out
out
cwtl
mov
add
loope
nop
pop
mov
cmp
cmpsb
cmp
adc
bound
and
and
sub
push
rcl
xchg
fidivrl
xor
push
add
pusha
aaa
fstpt
sub
push
or
and
hlt
mov
out
cmp
enter
xchg
imul
divl
mov
xorl
sbb
je
cmpsb
jbe
dec
add
das
inc
dec
push
fiadds
inc
push
lahf
or
push
pop
test
xchg
inc
add
popf
mov
inc
jb
jp
sbb
data16
add
pop
mov
jmp
and
push
sbb
bound
mov
aad
daa
andb
sbb
xor
lret
mov
mov
push
xchg
into
and
stos
push
sub
lods
fiadds
aam
pop
pop
incb
mov
dec
xor
mov
or
cli
loope
ret
stc
test
push
xchg
dec
in
add
jl
shr
aas
lret
mov
xor
sbb
xchg
andb
xor
mov
sbb
mov
jo
push
adc
or
cs
inc
loope
fisubs
add
enter
xor
mov
lahf
pop
cmp
add
push
aas
pop
cmp
jge
inc
mov
out
xor
daa
ja
mov
fildll
fldl
int3
dec
fstl
fndisi(8087
push
sub
cmpsl
call
jecxz
adc
stos
pop
hlt
jns
xlat
jge
pop
call
push
and
dec
mov
stos
test
cmp
mov
or
insb
sarl
jge
cmpsl
ja
nop
sub
jp
or
and
sbb
jg
and
xchg
lcall
cs
mov
add
xchg
stc
pop
stc
movsb
nop
or
mov
daa
add
popf
xchg
cli
add
lea
cwtl
adc
and
push
mov
adc
sbb
sub
jae
push
adc
aam
subl
cmp
insl
push
loopne
fwait
sbb
pushf
sub
mov
test
std
sub
clc
bound
imul
mov
mov
adc
stos
push
pop
fisubrl
into
dec
jmp
jmp
mov
shr
sbb
xor
pop
das
ds
xlat
ja
loope
mov
sbb
cmp
insl
add
cld
sbb
ret
out
stc
sub
cmp
das
in
or
ret
in
inc
lret
mov
stos
lds
bound
sbb
mov
std
daa
movsl
push
or
mov
mov
mov
lock
xor
xchg
lods
dec
popa
jmp
movsb
dec
push
xor
jns
xchg
and
fmull
mov
lret
push
cmp
mov
rorb
std
cmc
repz
shlb
lods
ret
aas
inc
mov
mov
fnstsw
inc
cmp
lds
mov
cmc
inc
adc
es
ds
imul
and
in
mov
sub
pop
mov
dec
dec
sbb
fdivrs
out
mov
xchg
add
add
pop
adc
lcall
inc
arpl
add
xchg
lds
mov
shlb
es
mov
jb
cwtl
adc
sbb
ljmp
fcom
popa
sarl
cmp
dec
push
repz
sub
icebp
lret
ret
imul
ja
pop
fisttpll
xchg
inc
cltd
mov
aas
mov
fimull
push
fwait
ljmp
jle
xchg
inc
cltd
lret
pop
xchg
sahf
jns
or
mov
cltd
ror
xlat
adc
addr16
aad
adc
ret
push
ror
inc
xchg
stc
into
lods
jmp
lea
in
mov
jg
or
cmp
int
inc
sarb
ljmp
rclb
cli
cmp
mov
insl
push
jp
pushw
addr16
dec
filds
ficomps
repz
pop
add
pop
lcall
push
test
outsl
test
cmp
pop
push
push
addb
ret
mov
and
fcomp
imul
pop
push
or
fidivrs
push
inc
addr16
arpl
adc
pop
les
mov
cld
bound
int
test
add
mov
fisttpl
addl
icebp
push
fcmovne
inc
sbb
inc
push
loopne
daa
inc
fdivrs
jmp
cld
in
insb
dec
in
xchg
int3
inc
scas
lcall
mov
sar
pop
mov
insb
movsl
mov
lcall
addr16
push
dec
dec
pop
adcl
mov
fdivs
or
test
adc
popa
mul
xchg
jle
jo
pop
jno
inc
push
fdivr
add
push
aam
rcr
rcll
lret
ret
jecxz
std
sub
outsl
sub
push
xchg
xchg
pushf
dec
call
adcl
xchg
cs
ficomps
outsl
and
pop
arpl
or
lea
dec
icebp
movsl
push
ret
clc
xor
jns
int
mov
adc
and
jmp
xchg
xchg
test
or
adc
push
rolb
loop
mov
cmp
stos
int3
pop
pusha
sbb
insl
call
inc
mov
hlt
cmp
pop
out
cmc
dec
subb
fisttpl
fisubs
out
dec
or
das
nop
pop
test
sarb
jmp
andb
ljmp
jo
pop
lret
mov
orl
clc
push
aas
mov
repz
rcrl
aam
dec
jnp
push
inc
lods
enter
adc
push
stos
pop
jne
daa
cmp
jle
adc
jne
rcrb
inc
popf
sub
sub
sbb
mov
repz
sub
and
loop
inc
jl
lahf
add
or
xor
int
and
clc
add
enter
shlb
pop
mov
dec
call
stos
bound
sbb
shlb
dec
inc
fsubs
xchg
sbb
jo
mov
pop
movsb
mov
jmp
push
pop
pusha
loopne
jmp
push
pop
std
push
pop
sub
fs
cmp
or
call
cmp
pushf
cmpsl
push
aad
in
lahf
aas
push
popf
dec
pop
das
mov
lea
jge
xlat
adc
lds
pop
mov
ss
dec
pop
in
mov
bound
das
push
popa
push
das
fmul
sub
xor
aam
movsb
jle
and
add
pop
shl
inc
lds
sub
lret
or
retw
jp
mov
mov
cmp
mov
push
insl
mov
lcall
sarl
sarl
inc
mov
jns
fadd
dec
inc
into
bound
inc
mov
mov
out
inc
and
mov
in
fdivrl
pop
jno
add
and
ds
jnp
lock
jl
dec
lcall
inc
ror
cltd
aas
mov
fisubs
mov
out
dec
pop
mov
jmp
mov
arpl
jno
outsb
push
pop
push
idivl
or
out
push
inc
mov
sbbb
and
and
imul
jmp
aas
jnp
jne
das
mov
cmpsb
iret
sbb
xor
addb
shll
fcmovne
bound
cmp
bound
notl
inc
cld
or
jmp
call
sub
stos
dec
jp
pop
addr16
ffreep
leave
ja
jl
loopne
fiaddl
xor
js
push
out
shrl
mov
lcall
mov
inc
push
add
jo
add
add
dec
cmp
loopne
out
aas
cli
cli
incb
fimuls
shll
enter
inc
jno
cmp
push
xor
sub
lods
les
ss
push
sub
leave
rcrb
or
arpl
sahf
divb
shlb
or
jle
imul
int
inc
push
mov
cmp
ljmp
sbb
fsubl
js
fdivrs
out
cmpsl
adcb
or
rclb
pop
push
pop
movsl
imul
mov
les
sub
push
add
and
mov
sub
mov
mov
dec
xchg
data16
scas
jge
xor
jg
xor
test
insl
cmpsb
nop
loope
daa
push
mov
cwtl
mov
sbb
ds
mov
add
dec
in
mov
dec
repnz
idivb
cmp
add
iret
push
and
daa
xchg
pop
or
pop
test
scas
dec
imull
push
scas
negb
pop
test
mov
subb
sbb
sub
xor
stc
push
xchg
pop
xchg
xorb
arpl
bound
adc
test
cltd
mov
daa
mov
or
testl
aaa
and
cmpsb
jmp
jnp,pn
inc
loope
sub
xchg
dec
mov
daa
movsl
fidivrs
add
inc
adc
insb
sbb
and
cmpsb
pop
in
pop
loope
push
stc
jne
loop
cmpl
add
pop
cltd
push
cmp
bound
jae
jns
out
cmp
push
std
jo
dec
dec
int3
cmp
in
outsb
ret
das
loop
mov
es
in
push
ffree
and
mov
scas
out
mov
aaa
rcl
test
jne
fildll
push
ret
fs
shl
hlt
outsl
inc
add
xchg
repnz
imul
lea
and
pushf
std
jno
jo
daa
mov
dec
in
push
cmovo
sahf
scas
js
xlat
jnp
fxch
ds
sarb
in
ss
jbe
dec
pop
mov
pop
out
adc
std
jns
and
push
iret
je
ret
roll
iret
mov
cmp
mov
insb
xlat
shlb
sbbb
call
fdivl
sbb
lcall
xchg
shll
cmp
lret
lcall
lcall
sub
sbb
les
movsb
xlat
fwait
pop
jb
lahf
xor
sarl
sub
jbe
xchg
push
movsb
lods
in
cmpsl
add
lahf
mov
xor
cmp
scas
bnd
push
mov
leave
or
xlat
mov
nop
adc
inc
mov
call
cltd
pushf
dec
push
test
jg
push
cmpsl
cmp
out
mov
std
mov
imul
iret
es
inc
adc
sbb
jns
in
xchg
mov
cmp
lods
shll
pop
in
ret
xor
loope
fidivrl
sbb
div
add
fldl
lods
fdivrl
sub
xlat
cmc
popa
cs
in
jo
mov
fwait
int
call
ljmp
xor
dec
inc
adc
adc
lock
and
jno
cmpsb
or
pop
shll
jecxz
outsl
and
insl
movsl
iret
mov
cmp
jp
push
mov
xchg
xchg
movsb
shl
les
pop
mov
scas
cmp
adc
inc
push
mov
add
dec
mov
push
pop
or
add
pop
movsb
dec
jmp
lods
xor
int
inc
and
rcl
cs
mov
inc
aas
outsl
out
shll
lods
jns
dec
fistps
jg
mov
xchg
xchg
adc
cmp
lret
out
adc
sub
jl
fidivrl
pushf
cmpsb
xchg
int
adc
popa
xor
dec
pop
cmpsb
rol
insl
pop
mov
arpl
and
cmp
sub
mov
lods
js
sbb
cmpsb
add
es
rol
mov
pop
test
pop
jl
add
mov
dec
rcll
test
pop
inc
mov
test
and
push
loop
jno
sub
scas
mov
jbe
or
mov
and
inc
aaa
add
scas
lcall
test
jo
into
popa
cmpl
mov
test
stos
mov
pop
imul
pop
sbb
add
jb
pushf
cmc
dec
push
stos
jmp
dec
int3
sub
inc
leave
mov
arpl
in
push
pop
sbb
ss
push
push
repnz
adc
mov
andl
mov
and
iret
sub
pop
add
inc
movsb
xor
das
lret
fsubs
pop
jne
cwtl
mov
dec
sub
les
cmp
nop
gs
js
sbb
dec
or
lret
mov
pushf
xor
mov
in
addl
cmc
mov
dec
lret
mov
mov
xchg
jno
iret
rorb
xor
dec
mov
push
outsb
popf
outsb
imul
daa
out
jb
dec
pop
test
push
data16
dec
cli
mov
inc
jp
adc
pop
xchg
mov
in
push
imul
mov
mov
cmp
inc
repnz
inc
lock
fdivp
jno
scas
jo
push
orb
test
dec
dec
cmpb
xor
jl
sti
xor
nop
data16
dec
lock
std
mov
pop
xchg
iret
adc
dec
daa
cmp
movsb
add
mov
xchg
ja
jo
xchg
mov
ret
mov
and
cmc
movsb
push
stc
push
cmc
jmp
push
mov
cmp
dec
faddl
cmpsb
enter
jmp
adc
movsb
pop
mov
mov
test
lock
sbb
int
ja
ret
cmpb
and
out
add
xchg
out
jns
loope
xchg
int
outsb
jo
loop
rolb
adc
mov
xor
mov
int
push
jnp
pop
les
xchg
daa
fists
sbb
ss
add
sub
fldt
incb
into
pop
jl
adc
movsl
lea
incb
pop
cld
fstps
loop
repz
popa
cmp
pop
xchg
frstor
ret
pop
shll
xchg
inc
mov
addl
sub
add
clc
add
testl
push
in
and
pop
inc
pusha
movsb
aad
aas
pop
cmpsl
push
loop
in
push
popa
mov
inc
sbb
orb
jo
pop
addr16
or
inc
adc
js
fwait
sbb
out
insb
xchg
jmp
push
fldcw
xchg
jne
dec
scas
pop
vmwrite
cmp
add
pop
add
mov
call
loop
sbb
fdivl
seto
cmc
out
subb
and
insl
push
imul
insl
fs
sbb
outsl
jle
mov
cmp
sti
sub
addr16
testl
dec
sbb
leave
fidivl
nop
dec
cmc
out
test
jbe
mov
add
or
in
movb
inc
into
jmp
jbe
add
popa
mov
dec
push
int
outsb
pop
jge
xor
xchg
stos
pop
cmc
adc
mov
dec
out
mov
int3
inc
push
push
sub
xlat
clc
lds
shrl
push
aam
shrb
sub
aas
fisttpll
xchg
pusha
imulb
pop
push
pop
push
mov
dec
jg
out
push
cmp
fsubrl
cwtl
mov
sub
popf
and
jbe
lcall
pop
or
cmp
icebp
and
or
lcall
pop
cmp
inc
clc
pop
add
andb
sbbl
push
cmp
pop
int3
sbb
cltd
mov
or
jecxz
dec
jne
push
push
dec
mov
setns
popf
je
jmp
sbb
bound
es
xchg
sarl
mov
dec
gs
jl
pop
push
sbb
dec
xorl
cltd
scas
loop
push
popf
inc
scas
sub
dec
dec
inc
or
movsb
cmp
fistpll
sub
and
outsl
mov
jo
mov
sub
pop
push
call
test
push
lds
adc
scas
mov
shlb
jmp
jle
xchg
mov
pop
fwait
outsb
into
sub
aas
jp
mov
and
lock
mov
pop
push
lret
lds
aad
fsubr
jecxz
fdivs
inc
inc
add
testl
xor
int
sub
and
int
dec
sarb
sub
es
cld
bound
xchg
jle
fstpl
xor
inc
jl
outsl
xchg
push
mov
adc
test
repnz
push
dec
jb
ds
pop
rclb
mov
push
pop
jg
int3
mov
int3
loop
inc
inc
push
lret
sbb
inc
aaa
into
fnstcw
jge
arpl
cmpsl
dec
xor
in
push
sub
xor
inc
add
or
cmpsb
adc
ret
push
rcl
gs
sbbb
pusha
enter
cwtl
cmpsl
mov
leave
and
or
or
or
dec
and
mov
das
lea
sub
or
adc
das
xchg
lods
pushf
inc
mov
push
jle
sub
mov
je
cs
push
stos
mov
cwtl
pop
sarl
pop
dec
int
pop
jge
mov
movsl
pop
jle
fidivl
and
imul
dec
test
jnp
mov
sbb
inc
add
aaa
icebp
sbb
cltd
jno
mov
or
mov
adc
das
xchg
mov
cmp
sahf
sub
sub
addl
adc
repnz
leave
inc
sub
shll
out
or
and
pusha
lds
int3
test
mov
mov
fisubl
jmp
movsb
test
clc
fstps
jmp
jecxz
test
outsl
mov
ffree
fidivs
fcmovnbe
and
out
subb
inc
dec
dec
adc
xor
mov
cmpsl
sahf
mov
and
fstps
and
rolb
push
out
jge
mov
out
out
rolb
int3
jmp
enter
sbb
add
mov
ret
inc
dec
xchg
mov
in
andl
scas
rorl
mov
mov
fisubl
sbb
in
aaa
aaa
mov
fs
lds
lret
jecxz
dec
outsb
scas
mov
std
fucomp
add
inc
push
jle
jle
and
out
fwait
stos
cmp
jmp
andl
test
int
mov
mov
pusha
es
and
xor
pop
jo
mov
xchg
outsl
adc
sub
stos
adc
sbb
and
sbb
imul
popa
xchg
dec
mov
sub
orl
adc
dec
je
cmp
and
ljmp
sti
stos
rcr
sbb
dec
popf
les
lea
mov
push
jl
jb
movsl
mov
cli
cld
arpl
pop
cmp
sahf
inc
adc
add
popf
popa
pop
pop
in
pop
mov
lea
cmc
mov
inc
sbb
test
faddp
cld
inc
ljmp
mov
mov
lahf
mov
in
aaa
add
add
outsl
xchg
outsl
dec
or
rcll
inc
popf
mov
sub
adc
or
sets
imul
std
insb
push
xor
lods
dec
mov
add
mov
insl
dec
nop
aam
fcomp
inc
sbb
ja
test
mov
mov
add
pop
cwtl
cmp
fsubs
ret
or
xchg
daa
cld
sub
adc
popl
stc
lea
dec
data16
jp
xor
addr16
enter
mov
insl
push
add
mov
loop
movsb
lahf
pop
sahf
shl
das
stc
idivl
cmp
push
test
incb
mov
push
sbbl
js
jb
jge
inc
or
in
cs
push
in
enter
xchg
add
mov
mov
movsb
roll
mov
pop
cmc
add
xchg
adc
xor
cmpsb
iret
hlt
jecxz
fnstcw
mov
lock
add
insl
pop
lds
adc
push
mov
mov
cmp
std
jp
rorl
sub
adc
roll
lcall
push
pusha
fwait
mov
sub
adc
add
push
jns
lahf
jmp
mov
pop
xor
pop
leave
xchg
jl
out
inc
jg
outsl
cmpsb
test
xchg
sti
fsubs
sbb
ja
jbe
fsubs
test
popf
mov
inc
in
arpl
dec
mov
adc
add
js
aas
inc
jns
lods
out
jmp
push
mov
fucomip
sbb
pop
out
add
lods
lods
pushf
jecxz
pop
shlb
jne
jbe
subl
daa
out
cmp
pusha
cmpsl
scas
lock
inc
and
cmpsb
push
add
outsb
bound
repnz
and
lahf
out
xor
loope
pushf
hlt
sarl
aam
addr16
cs
jns
outsl
mov
icebp
shrb
scas
adc
xor
adc
push
int
insb
pop
mov
hlt
push
xchg
inc
inc
xor
shll
jmp
sbb
or
repnz
xchg
mov
xor
and
adc
inc
fwait
ret
dec
cs
inc
rclb
mul
cli
jne
out
add
mov
inc
outsb
daa
pop
and
mov
jb
or
test
sbb
cmp
icebp
mov
adc
std
pop
inc
push
arpl
cmp
jecxz
push
mov
sub
incb
sbb
inc
add
inc
mov
mov
adc
jecxz
dec
cld
mov
mov
scas
loopne
sub
or
dec
push
dec
mov
fs
and
mov
gs
call
inc
pop
mov
fnstsw
mov
call
sbb
addr16
cmpsb
popf
lret
jle
sub
xor
adc
stc
mov
cmp
lock
cwtl
negb
lcall
stos
pop
jo
mov
mov
inc
fisubl
cs
xor
mov
ljmp
mov
jecxz
fcomip
data16
fidivs
loop
movsl
push
jecxz
mov
dec
aaa
xor
mov
movsb
cld
xchg
mov
sbb
jmp
dec
aam
dec
enter
imul
xchg
dec
jmp
fimull
jg
push
cmp
call
fcompl
xchg
outsb
xchg
std
jl
cmp
inc
cmp
jne
mov
add
in
iret
sarb
popa
cwtl
xchg
cmp
push
sbb
iret
rclb
push
iret
je
mov
jle
push
inc
mov
dec
lret
mov
pop
jle
pop
call
das
and
sbb
inc
sti
rolb
mov
es
mov
xchg
sub
push
add
mov
xchg
sub
jns
cltd
lds
or
aas
adc
lock
pop
sub
jns
xor
jbe
jb
lods
fistps
sub
cmp
ret
test
inc
in
mov
or
xchg
es
sub
jne
cmp
lea
dec
iret
add
in
mov
xchg
mov
lret
adc
pop
out
movb
add
jp
icebp
loop
sahf
push
dec
out
sub
scas
jle
cmp
add
mov
pop
pop
out
fsubr
shrb
gs
xchg
es
iret
pop
add
fwait
jle
in
sti
leave
xor
mov
outsl
fsubl
enter
adc
fdivrs
jmp
pop
sbb
mov
xchg
fwait
mov
inc
sub
filds
sbb
fmull
xor
ja
je
into
mov
lods
or
fwait
test
mov
jmp
aam
gs
jb
es
fsubr
mov
mov
mov
pop
or
sub
imul
out
aas
bound
cmp
fildll
push
push
jp
push
nop
mov
cwtl
cmp
sub
xchg
mov
inc
rcl
pop
loopne
jo
sub
stos
adc
mov
insl
mov
adcb
stos
pushf
sub
adc
cmp
mov
outsl
push
cmp
xchg
aaa
lea
sbb
stos
hlt
orb
xor
sbb
mov
dec
jns
adc
and
divb
clc
dec
pop
xor
nop
mov
pop
adc
xor
adc
or
lret
fldt
cmp
pusha
out
add
and
addb
jne
mov
sub
push
idivb
push
xchg
aam
cltd
mov
mov
mov
iret
sub
inc
lret
popa
xchg
xchg
sbb
or
mov
inc
out
pop
ret
shlb
pusha
inc
sub
insl
dec
imul
stos
mov
fidivs
or
enter
or
lahf
xor
aam
ljmp
push
mov
jg
aas
rcrl
out
jge
mov
jg
sarb
pop
int3
inc
std
add
jae
lods
adc
ja
jg
repz
push
dec
jb
sbb
ja
push
cmp
shl
jbe
push
jmp
cld
pusha
cmp
cmp
aaa
cs
cwtl
sti
or
mov
sarb
push
psrad
insl
or
into
adc
leave
std
fists
scas
pop
lds
enter
sbb
stos
push
xchg
adc
test
mov
call
ret
or
pusha
or
mov
ds
push
push
fisttpll
xor
sbb
cmp
xor
push
ret
fs
leave
orb
clc
push
aam
lret
lret
sub
out
jle,pn
es
mov
jmp
mov
ljmp
mov
dec
xor
outsl
push
or
sub
flds
jmp
outsl
or
mov
and
or
xchg
pushf
jns,pt
adc
es
mov
lds
ljmp
rcll
push
or
xchg
lods
pop
fwait
test
mov
or
cmp
popl
jno
xor
xchg
les
cli
pop
gs
jae
cmovno
dec
jno
movsb
xchg
xor
push
jnp
pop
mov
jb
in
mov
fmul
js
jb
sub
in
mov
pminub
cmpsb
inc
pop
mov
sub
jno
sti
lahf
movsl
testl
mov
enter
mov
lock
inc
pusha
mov
inc
int3
loopne
mov
idivb
cmp
or
sbb
and
mov
jge
mov
cmp
adc
loope
xor
stos
ja
sub
out
fadd
mull
pop
inc
xchg
mov
out
jae
fnstcw
jmp
jg
push
fsubrl
and
sbb
mov
jbe
push
cli
or
pop
bnd
adc
addr16
popf
cmp
push
in
adc
ja
adc
xor
in
inc
push
loopne
and
sahf
leave
dec
xor
repnz
imul
dec
push
lcallw
cmp
test
add
or
sbb
xchg
stc
rcl
mov
push
fstps
call
movsl
fwait
jp
mov
movsl
ret
xor
enter
sbb
push
dec
test
insb
loop
push
lods
adc
call
push
js
push
push
mov
sub
aas
jae
push
cld
inc
aam
push
xchg
pop
xchg
pop
in
test
cltd
cmp
add
clc
pushf
adc
ret
and
hlt
xchg
daa
shrb
test
fildl
icebp
add
mov
insb
or
mov
enter
mov
or
mov
shlb
cmpsb
sbb
sti
lahf
aas
xorl
and
jp
enter
fwait
add
push
scas
shrl
jnp
xchg
mov
pop
arpl
xor
les
mov
mov
fadds
out
adc
or
aaa
add
gs
xchg
mov
mov
jle
xchg
mov
adc
or
add
movsl
arpl
push
inc
hlt
iretw
outsb
xchg
inc
jge
popa
push
pop
insb
xor
push
pop
in
adc
mov
sbbb
sbb
iret
test
push
push
repz
mov
repz
push
jp
fwait
lret
jno
push
xor
xlat
dec
sbb
push
sub
jp
in
call
leave
adc
cmc
mov
addr16
insb
pushf
cmp
hlt
dec
lds
lcall
xor
pop
arpl
push
mov
adc
inc
sub
mov
mov
cmp
in
mov
jle
gs
adc
dec
xchg
pop
cld
add
pushf
sub
and
cli
jo
cld
push
std
int3
add
jle
pop
and
mov
das
add
mov
mov
add
loop
mov
push
jmp
stos
daa
pop
mov
cmpl
stos
rcrb
push
mov
adc
testb
xor
dec
xchg
ja
sub
fisttpll
pop
je
push
xor
mov
inc
shrb
xchg
jp
add
fdivs
outsb
jecxz
and
ljmp
aad
xor
mov
shll
orl
fidivrs
push
sbb
xchg
xor
rcrb
stos
push
xlat
rcrb
mov
xchg
sbb
mov
dec
jae
jg
popa
inc
adc
cmp
jge
lret
pop
xchg
stos
jbe
push
in
imul
leave
push
cmp
pop
imul
nop
or
jb
mov
gs
hlt
je
iret
adcb
pop
cmpsl
std
mov
push
mov
mov
iret
push
xrelease
adcl
into
pop
mov
inc
cli
dec
sub
jl
pop
adc
stc
jecxz
imul
add
stos
jmp
or
cmp
enter
call
push
mov
dec
mov
pop
adc
test
fidivrs
cmp
adc
out
dec
sub
inc
mov
in
sti
xor
je
outsl
xor
mov
lods
pop
push
aas
push
lods
jo
or
add
stos
or
dec
jns
hlt
jb
mov
inc
stos
inc
pop
ljmp
xchg
mov
daa
das
dec
pop
cmp
xlat
and
add
lret
push
mov
jmp
outsl
or
fists
mov
sbb
movsl
out
pop
sub
mov
ljmp
gs
inc
push
sub
pop
push
clc
mov
adc
frstor
add
dec
sbb
mov
xchg
jns
jle
mov
inc
and
push
and
ret
mov
pop
cmp
sub
aad
mov
mov
and
xchg
jnp
pop
mov
lods
insb
mov
cmc
add
pop
insl
dec
mov
pop
cmc
scas
stc
jge
flds
shll
push
or
hlt
push
mov
jp
add
mov
sub
jb
push
out
insl
icebp
shr
fucom
or
dec
or
iret
movsl
loopne
xor
xor
cmp
push
scas
sbb
lock
xor
lods
mov
cwtl
mov
fildll
fidivs
outsb
adc
and
sbbb
mov
xor
insl
scas
mov
pop
pusha
mov
stos
andb
jne
popf
adc
sarl
sbb
lds
mov
xor
sbb
pop
stc
pusha
ja
ret
repnz
add
test
dec
pop
lods
push
bound
mov
mov
shl
scas
adc
push
popw
cmp
lock
xchg
sbb
cmp
lahf
xor
icebp
mov
out
test
sti
pop
lods
jb
mov
jp
lock
adc
aam
fstps
mov
xorl
xchg
adc
popa
mov
sbb
sbb
bound
sbb
dec
pop
sbb
insb
lret
dec
in
push
out
out
sbbb
dec
insl
fnsave
imul
ljmp
repnz
pop
cwtl
int3
stc
rorl
in
push
or
xchg
xor
xlat
das
inc
insb
or
test
imul
dec
jne
cli
pop
pop
leave
ret
jle
test
cld
decb
pop
iret
sub
adc
bound
inc
negb
adc
ss
jo
fistps
mov
jecxz
mov
enter
ret
std
jne
nop
test
fnstsw
and
push
sbb
leave
stos
loop
cmp
mov
add
cld
mov
xchg
dec
fidivrl
pop
or
icebp
testl
int
lret
push
ror
jle
aas
data16
movsb
inc
mov
mov
or
adc
jmp
imul
jecxz
sbb
cmc
jl
mov
lock
jmp
mov
leave
pop
xchg
pushf
lret
or
xor
hlt
scas
arpl
pop
ret
dec
or
int3
daa
into
jo
pusha
insl
mov
cli
or
loope
cltd
sbb
loopne
cmp
enter
pop
imul
cmp
jmp
push
je
out
mov
or
cmc
pusha
fisttpll
ja
fs
dec
xor
mov
inc
out
scas
rcrl
movsb
sub
jnp
add
icebp
and
repnz
sahf
xor
movsb
and
lret
scas
lcall
xchg
movl
add
aaa
jp
xchg
in
xlat
push
pop
xchg
pop
xor
or
fisubs
nop
sbbb
shld
in
imul
add
dec
inc
push
mov
mov
fldt
ja
cld
lcall
pop
inc
lret
inc
or
mov
lcall
push
push
pop
sahf
mov
not
repz
xchg
mov
or
mov
outsl
sub
mov
arpl
idiv
cmp
lcall
pop
inc
push
ja
and
int
lods
lea
imul
pop
sbb
xlat
add
clc
std
push
sub
sbb
sbb
imul
and
add
jecxz
dec
jmp
and
mov
loopne
jmp
iret
lea
not
add
int
cmp
push
adc
add
leave
and
fwait
stc
adc
sti
iret
adc
cs
fwait
pop
xchg
cmpsb
sbb
ret
movsb
xchg
inc
mov
outsb
popf
xor
dec
jae
test
cli
cmp
inc
nop
sarb
std
stc
addr16
or
adc
je
jp
sti
fcmovb
shrb
loopne
xor
and
or
mov
add
imul
aad
out
sbb
mov
xchg
mov
je
dec
rcrb
dec
add
jnp
scas
mov
push
adc
jle
jno
jg
and
ficomps
mov
cli
jp
sub
cli
iret
cmp
int3
clc
test
imul
sbb
fisubl
out
test
stos
sub
addr16
xor
int
cmp
pop
mov
xchg
adc
or
xor
pop
jle
cmp
adc
dec
xchg
cmpsl
xchg
repz
cmc
pop
test
repnz
jle
mov
xchg
jo
and
fwait
add
rclb
adc
ds
lods
push
mov
jae
ficoms
je
push
je
sub
adc
pushf
imulb
push
and
outsb
ljmp
scas
mov
js
nop
sub
in
ds
push
imul
into
in
and
das
push
sbb
leave
arpl
mov
dec
inc
push
pop
lret
mov
sub
insb
xchg
aaa
scas
in
fists
ljmp
xor
loop
mov
and
pop
daa
and
cli
movsl
subl
inc
hlt
lods
push
clc
lds
push
pop
hlt
fildll
mov
push
lea
aaa
or
in
pop
sti
test
mov
push
and
add
inc
sub
adc
out
sbb
jmp
push
rolb
add
jo
pop
cmp
push
adc
test
lret
push
popf
pushf
push
lods
push
shl
xchg
enter
inc
mov
sbb
sub
add
shlb
adc
add
xor
adc
sub
pop
and
movsl
in
mov
pop
aas
cmc
mov
into
dec
out
mov
cmp
fcmovu
sub
inc
cmp
mull
pop
and
les
in
hlt
push
adc
nop
std
xor
jl
sti
dec
rolb
adc
sti
in
dec
pop
je
pop
clc
jne
jl
jne
pop
adc
stos
movb
dec
in
mov
stc
dec
shr
cltd
sbb
mov
xchg
jecxz
jb
fstpl
jle
imul
xchg
in
lret
adcl
aam
push
xchg
mov
xchg
adc
lcall
dec
dec
adc
lds
mov
addb
xor
and
lods
mov
push
xchg
xchg
cmpsb
cli
hlt
lods
dec
lahf
and
popf
out
incb
rclb
push
popf
mov
or
rclb
jp
inc
imul
push
jne
aas
mov
push
xchg
sub
aas
repz
loopne
scas
mov
cli
in
cmp
ds
mov
push
iret
hlt
aas
cmp
mov
stos
lcall
aas
mov
push
inc
mov
rclb
sub
dec
call
jnp
push
repz
cmp
and
mov
stos
pusha
mov
fcmovne
stos
or
or
add
imul
jp
repz
sbb
fsubrl
lock
rorl
call
sub
or
std
mov
call
lock
pop
pminsw
mov
dec
arpl
pusha
mov
movl
lock
lods
cmc
xor
cmpsb
loope
dec
add
mov
mov
call
mulb
push
jno
ret
test
sub
movsb
pop
lock
fwait
or
outsb
ret
in
lock
mov
mov
ret
aam
ficoml
es
mov
lods
xor
pop
dec
pushf
testb
xor
sub
mov
rcr
xchg
jno
dec
rcrl
into
out
inc
inc
push
decl
add
xor
hlt
push
sub
jo
push
mov
pop
std
jl
lret
fcoml
call
mov
pop
in
cmpsl
out
out
lret
mov
test
popa
and
jmp
inc
mov
into
in
std
add
jl
faddl
outsb
sarb
dec
jno
mov
inc
adc
popf
call
sbb
test
arpl
and
push
jns
sahf
mov
lahf
mov
jnp
mov
xchg
mov
mov
xchg
popf
decl
jge
cmp
test
lahf
mov
into
jo
push
xchg
fistps
xor
divl
dec
outsl
inc
mov
fs
mov
ds
pop
and
jmp
mov
subl
neg
in
jnp
arpl
sub
jge
mov
adc
sub
xor
lds
mov
dec
and
insl
push
or
xor
dec
cld
push
cmc
dec
pop
sub
inc
or
fwait
and
adc
mov
fstpt
scas
mov
xchg
ljmp
mov
jmp
fsubr
push
pop
rorb
fistps
dec
and
pop
cmpsl
in
stos
add
stos
mov
call
and
push
xchg
push
std
stos
cmp
into
mov
and
ds
push
nop
dec
repz
jge
or
xchg
cmp
mov
jne
inc
pop
fs
icebp
dec
or
xlat
mov
movb
dec
push
mov
daa
pushf
fisubl
daa
insb
sbb
call
sarl
call
jb
sub
faddl
mov
pop
xlat
dec
rclb
inc
lds
std
lahf
jno
xor
dec
lods
sub
hlt
or
in
cld
pop
repnz
cmp
imul
cs
inc
test
jo
and
js
pop
mov
push
hlt
add
xor
mov
mov
push
mov
sub
scas
lds
int
cltd
and
enter
sub
and
sbb
lock
sarl
mov
cli
mov
mov
fbstp
shr
not
jl
out
fisubl
dec
mov
out
pop
sub
sti
add
enter
outsb
or
jo
mov
sub
inc
pop
fs
in
rcll
sub
loope
inc
cmp
mov
xchg
ret
dec
jge
addl
outsl
in
les
lock
adc
fstps
mov
push
in
icebp
cli
xchg
mov
in
aam
daa
dec
add
adc
cli
pushf
mov
adc
rorl
push
pop
les
mov
mov
xor
push
xchg
xchg
add
imul
xchg
dec
mov
pop
sahf
dec
mov
mov
inc
arpl
xchg
out
cmp
xor
push
add
sbb
inc
icebp
ficompl
cmc
xor
pop
lahf
adc
inc
jo
sub
nop
push
xchg
int
inc
mov
mov
mov
leave
cmpsb
xchg
movb
cmpb
arpl
lock
mov
fsts
and
dec
mov
pusha
repz
cmp
dec
pop
cmp
pushf
mov
mov
outsb
jbe
xchg
test
and
jne
push
xlat
out
inc
inc
loope
add
adc
in
movsl
inc
mov
enter
cmp
outsl
daa
mov
mov
mov
out
ficoms
out
lcall
stc
mov
xchg
jecxz
cmp
or
jmp
leave
cmp
movb
dec
and
cmc
fcoms
lods
ret
push
aas
mov
icebp
jecxz
mov
mov
arpl
out
dec
in
jae
inc
insl
decl
mov
push
jb
iret
movsl
xor
mov
cmp
dec
xor
das
pop
mov
mov
rcrb
and
shrl
fcoml
pop
repnz
out
fbstp
xlat
adc
cmp
sti
xor
sub
cmp
adc
aas
push
cmp
sbb
dec
lods
jae
pop
adc
mov
ds
dec
popf
mov
sbb
call
push
xchg
xor
test
add
lret
cwtl
xor
dec
stc
pop
loope
popa
xchg
xchg
movsl
push
push
jmp
aad
nop
fwait
das
lahf
cmp
inc
aas
loope
mov
mov
inc
mov
outsl
mov
push
pop
add
adc
mov
jge
cmp
stc
je
mov
xor
xor
pushf
inc
lds
xor
bound
and
xchg
lds
int3
stos
stc
mov
enter
or
stc
and
aas
jmp
mov
push
sti
sarb
flds
jmp
or
cmpb
sbb
test
int
inc
mov
rcll
mov
test
imul
mov
test
and
in
movsl
fisttpll
test
mov
movsl
jecxz
cld
mov
mov
imul
iret
sti
mov
or
dec
adc
pop
jae
dec
and
aaa
popf
std
fsubr
mov
inc
movzwl
imul
mov
jns
xchg
iret
fidivs
xchg
roll
daa
sub
call
sbb
sub
in
jnp
adc
push
sbb
xchg
inc
or
addr16
pop
or
push
add
adc
jle
dec
js
shl
mov
mov
mov
inc
into
je
idiv
inc
aas
and
mov
sub
mov
push
adc
xchg
pop
cmpsb
nop
xchg
mov
cltd
inc
push
popf
sarl
pop
addr16
jo
popa
fwait
pop
push
nop
hlt
adcl
daa
jmp
add
jne
xor
adc
dec
int
xchg
les
mov
xor
add
or
adc
mov
push
enter
push
lea
mov
nop
inc
jo
addr16
adc
dec
lahf
outsl
nop
mov
inc
insb
add
cltd
jecxz
or
stos
xor
mov
cmp
ror
sub
shlb
int
pop
cs
sbb
shrl
rcl
sahf
popf
stos
jmp
push
fwait
stos
mov
cmpsl
cli
cmp
adc
or
fbstp
pop
and
idivl
xlat
sub
xor
jne
and
insl
xchg
sub
test
lds
push
inc
cmp
pop
pusha
jmp
scas
push
sbb
out
cmp
orb
imul
mov
outsb
mov
mov
and
mov
idivb
xor
jns
or
insb
aam
insb
push
mov
cmpsb
dec
jne
and
adc
push
test
pop
or
xchg
or
rcrl
test
mov
cmp
mov
nop
xor
mov
inc
inc
outsl
xchg
xchg
gs
pop
cmp
ljmp
xchg
roll
mov
jmp
dec
fiaddl
lret
aas
out
movsl
dec
pop
pop
jne
adc
gs
sbb
inc
cld
loope
xchg
adc
xor
adc
sub
or
icebp
sub
mov
mov
mov
inc
in
sbb
push
mov
leave
push
mov
xchg
loopne
pop
mov
mov
cwtd
pop
imul
pop
ret
cmpsb
movsl
jns
or
push
stc
test
mov
fcmovnb
shll
and
cli
pop
test
jg
sub
pop
popa
dec
add
lret
adc
lahf
push
inc
pushf
movsl
scas
repnz
lock
dec
mov
jp
dec
xlat
adc
xlat
inc
pushf
add
std
and
jne
sbb
sbb
pop
mov
lcall
add
bnd
sub
sbb
frstor
ljmp
cld
jo
testb
lret
and
add
into
mov
clc
gs
rolb
push
add
or
mov
xchg
jns
sahf
mov
pop
mov
addr16
dec
xor
jg
and
dec
adc
inc
adc
pop
cli
movsl
movsb
mov
jle
scas
in
mov
xchg
pop
stc
jle
xchg
sub
xchg
mov
adc
les
stc
mov
rolb
xchg
xchg
bound
mov
mov
pop
lea
lcall
adc
dec
insl
cld
std
mov
and
popf
sub
sbb
inc
shlb
out
ss
push
dec
das
cmp
fistps
xchg
bound
inc
in
in
das
mov
aam
sub
sbbb
mov
mov
iret
pop
mov
jmp
repnz
mov
leave
fs
ljmp
jecxz
dec
pop
mov
xlat
cmp
and
test
jle
sbb
jl
jmp
push
movsb
jbe
and
sub
ret
sbb
cmpsl
push
sub
sub
adc
or
loopne
add
rol
jns
add
inc
push
or
gs
lcall
pop
mov
int3
pop
push
enter
jae
sbb
jp
fdivp
xchg
or
adc
jne
pop
jge
cmp
xlat
pop
js
dec
and
and
mov
xlat
pop
mov
movsb
movsb
push
loop
jmp
popa
in
jmp
xor
popf
mov
jns
dec
mov
add
scas
add
lock
idivl
imul
lret
insb
stc
sub
or
jmp
lret
jmp
mov
lcall
add
sbb
mov
nop
jo
fnsave
icebp
cmp
roll
pop
icebp
push
sub
je
movb
mull
sbb
adc
mov
mov
sbb
in
ss
cmp
cld
sub
pop
mov
or
add
sbb
pop
cmpsb
mov
sbbb
ret
cmp
insl
or
push
fwait
outsl
xchg
ja
jne
mov
push
les
scas
jns
sbb
fistpl
or
ret
sbb
lahf
xlat
shrb
pop
cmpsl
jbe
movsb
lock
or
fwait
jp
aam
push
sbb
add
or
xchg
lods
es
std
cmp
iret
mov
imul
adc
xlat
fstpt
icebp
rcrb
dec
loope
mov
sub
fstps
mov
pusha
test
cmp
ret
xor
dec
add
das
inc
sub
icebp
inc
cmp
sub
repnz
insl
out
xor
notb
out
jb
dec
push
dec
mull
mov
bound
or
test
out
lret
pop
mov
or
das
push
sahf
and
and
test
sub
sbb
xor
mov
test
adc
or
dec
rcr
push
outsb
xor
cmp
movsb
mov
cmc
and
cmp
adc
jg
das
icebp
aam
jl
mov
ljmp
cmp
xchg
add
mov
sbb
xor
push
enter
xchg
mov
jno
addb
sbb
mov
mov
jnp
lahf
jge
enter
xchg
aaa
nop
addr16
xor
pop
loop
pop
cltd
xchg
xchg
inc
repnz
je
cs
mov
leave
movsb
les
xor
xchg
popf
inc
mov
sub
call
dec
scas
jns
sti
mov
push
mov
push
xorl
je
aas
mov
outsl
xchg
jnp
cli
adc
fwait
sarb
std
push
mov
jecxz
sbb
sub
xor
inc
ljmp
ret
mov
iret
sbb
push
ds
sbb
test
xchg
in
sbb
je
in
sub
lds
bound
or
cmp
add
jnp
or
inc
sbb
jle
mov
test
dec
sbb
popf
je,pt
pop
pop
dec
stos
into
add
sub
and
rclb
outsl
aaa
fwait
adc
notl
gs
mov
mov
push
push
lock
icebp
jmp
ja
sub
fdivrs
gs
inc
jne
inc
int
xchg
insl
push
ret
sti
push
sub
lcall
test
imul
mov
fidivs
out
and
int3
ret
shlb
inc
lods
cmp
xchg
sub
jno
cmp
mov
dec
pop
mov
dec
sub
dec
cmp
mov
sbb
sbb
push
push
pop
das
bound
cmpsl
sbb
inc
scas
lds
stos
pop
inc
popa
push
inc
mov
roll
adcl
shrl
jmp
push
call
add
sbb
adc
sahf
pop
jno
loope
or
xchg
sarl
mov
jo
fisttpl
dec
adc
lret
pop
fdivl
addl
sub
dec
daa
lcall
cmp
sti
jp
leave
clc
jne
imul
repz
jo
out
bound
outsl
test
or
cmpsb
imul
es
nop
jbe
bound
sub
scas
insl
push
enter
mov
das
xchg
aam
jb
jno
mov
popf
xchg
mov
and
or
or
and
jmp
clc
inc
jnp
adc
fcomps
mov
mov
mov
loope
pop
push
sbb
ss
or
mov
imul
jmp
mov
and
leave
call
lds
push
push
sbb
jnp
and
negl
test
add
dec
adc
push
xlat
insb
hlt
add
rorl
cmp
push
cmp
cmp
fimuls
in
mov
or
scas
cld
lods
xorb
test
or
xor
stos
cwtl
imulb
sti
ja
add
loope
mov
nop
and
jae
in
test
lock
rorl
sub
sub
mov
pop
or
daa
shlb
es
daa
mov
jge
mov
or
or
xchg
cli
das
adc
mov
aad
pusha
and
adc
sbb
dec
jl
rclb
lcall
lret
insb
or
mov
pusha
or
pop
add
cmp
pop
or
cld
mov
inc
lods
jb
fcomps
push
mov
jge
jnp
imul
push
mov
vpsrlw
mov
stc
ja
mov
lahf
add
xchg
and
adc
mov
es
or
int
push
jmp
jmp
jmp
out
fld
sub
sbb
xor
out
movsl
rorl
aad
das
and
or
adc
xchg
testb
xchg
dec
enter
sti
mov
push
jp
test
pusha
jl
dec
test
aad
pop
orb
push
scas
sub
iret
in
decl
ret
xor
jbe
iret
inc
and
or
insb
and
mov
les
fbstp
std
mov
push
add
cld
adc
sbb
mov
pushf
mov
addb
mov
div
in
jl
inc
mov
push
jp
clc
inc
jle
mov
xorb
and
jae
out
loopne
pusha
pop
xchg
cwtl
mov
notl
or
stos
loope
rcl
lret
sub
mov
icebp
idivb
sub
in
scas
mov
cmpsl
dec
adc
mov
push
mov
stos
inc
dec
cmpl
sub
into
push
mov
pop
fsubl
nop
jmp
repz
inc
mov
inc
jns
push
pop
lds
jns
push
push
data16
test
cwtl
pop
xlat
das
jmp
dec
cmpb
les
pop
cld
cmc
mov
test
mov
push
mov
es
je
sbb
pop
jmp
test
dec
notb
inc
mov
dec
lea
lock
jge
fdivrl
mov
jb
jbe
call
xchg
daa
jp
outsb
push
pop
and
jle
add
sub
dec
hlt
adc
sbb
addr16
lds
mov
frstor
insb
adc
mov
push
cmpsl
rcrl
add
push
pusha
xchg
mov
add
es
insb
inc
into
push
pop
jbe
adc
divb
push
cmpsl
add
daa
inc
mov
mov
pop
adc
sub
push
sbb
shlb
pop
xchg
jne
repnz
lret
push
mov
adcl
pop
ss
cmp
sbb
dec
shll
inc
cmp
pop
stc
scas
movsl
cmc
aaa
shrb
jb
xorl
cmp
leave
popf
inc
mov
jnp
jae
mov
xchg
mov
inc
add
popf
outsl
loopne
arpl
clc
or
sti
shlb
out
pop
cld
out
int
ja
je
lcall
mov
or
mov
les
mov
bound
xor
sub
lcall
lahf
push
ljmp
imul
js
adc
testl
pop
mov
gs
nop
cltd
push
push
adc
jle
loop
jl
enter
and
ljmp
bound
cmp
aad
cltd
jge
cld
xchg
ss
xchg
jp
mov
shlb
mov
mov
dec
fidivrl
sbb
dec
in
imul
in
stos
adcl
aam
mov
or
mov
je
stos
bound
ja
mov
add
addr16
and
lods
mov
xchg
mov
cli
or
std
push
xchg
and
test
add
sbb
stc
or
mov
xchg
mov
imul
neg
adc
cld
imul
xchg
jae
arpl
adc
repz
mov
or
les
cmp
mov
test
xchg
test
je
sbb
mov
lret
or
cli
mov
add
mov
in
jne
cmc
mov
xor
jae
in
negl
mov
pop
outsl
aad
xchg
dec
adc
add
mov
xchg
lea
loope
dec
xor
test
lds
in
xchg
sbbl
ss
std
lcall
stos
xchg
ja
or
inc
mov
mov
pushl
xor
les
fisubs
sub
add
mov
xor
fldcw
outsl
inc
and
fldcw
push
loope
subl
hlt
insb
mov
fdivs
pop
jno
nop
scas
in
fmull
addl
sbb
stos
ss
xor
adc
gs
ret
ss
imul
cmp
push
jne
enter
and
jae
jns
scas
test
add
sub
mov
and
fbstp
loope
sub
loop
or
xchg
adc
in
dec
xchg
add
dec
jle
in
sarl
icebp
aad
in
cld
rcrb
cli
xlat
or
pop
sub
inc
add
or
cld
faddl
es
adc
push
push
dec
xorl
dec
call
cld
fdiv
mov
inc
add
push
mov
xor
in
dec
sti
mov
push
aam
jne
sub
fisttpll
enter
push
jo
pop
add
movaps
shlb
or
rolb
xchg
xchg
out
push
pushl
add
and
jl
gs
mov
ljmp
jl
adc
mov
sbb
or
clc
sbb
push
clc
pop
out
shrb
rcpps
daa
std
shrl
mov
adc
hlt
nop
pop
mov
mov
and
jmp
fucomip
add
or
or
ljmp
mov
popa
lcall
add
testb
out
jg
jge
adc
in
repnz
sub
movsl
sub
mov
loop
cmp
rolb
or
sbb
sbb
popa
aas
jae
loope
cwtl
cli
movsl
sahf
mov
mov
pop
js
inc
mov
xor
sub
xorb
leave
repnz
and
or
pop
xor
or
cmc
nop
dec
pop
xor
mov
sahf
push
enter
pop
in
sbbl
sbb
pop
loopne
sub
adc
lds
cmpl
jns
lret
int3
jle
ss
pop
mov
dec
xchg
gs
xor
xor
lock
xchg
dec
cmpsl
mov
adc
icebp
scas
in
mov
jae
inc
test
fs
les
into
ds
rcll
mov
paddw
lea
and
adc
sbb
sbb
mov
cli
jge
ss
pop
push
jle
mov
push
dec
adc
pop
add
push
int3
and
lcall
sbb
stos
pop
mov
gs
sbb
lods
jno
fbstp
filds
call
xchg
or
cmp
xorb
mov
push
bound
pop
mov
ret
scas
jle
scas
pop
lret
into
mov
pop
add
push
adc
and
dec
lret
mov
hlt
dec
adc
sbb
xchg
jmp
xchg
icebp
xchg
cli
pop
ret
cwtl
or
jle
hlt
rcrb
inc
cmpb
dec
and
test
mov
sub
xor
sbb
das
add
arpl
lahf
adc
push
call
inc
stc
lret
mov
dec
cli
jae
mov
rcrl
cmp
pop
pop
add
adc
ficompl
mov
bound
mov
out
sahf
pusha
mov
jecxz
push
xchg
fsubr
sahf
outsl
or
mov
int3
call
xor
int
or
mov
sbb
cltd
mov
lods
mulb
mov
and
jle
jg
add
mov
adc
mov
cwtl
bound
push
jne
add
mov
sti
addr16
add
pushf
lcall
cltd
push
xchg
lods
dec
xchg
mov
pop
jns
les
aad
inc
sub
stos
mov
lret
or
jne
push
imul
das
enter
sarb
filds
pop
xchg
enter
pop
test
rclb
lcall
jl
cltd
mov
cwtl
cmp
jbe
pop
push
scas
into
cld
sub
mov
ret
test
pop
pushf
or
rorb
mov
pop
and
mov
loopne
cmp
pop
lret
pop
int
ror
cmpsl
mov
pop
sub
jp
inc
mov
sub
jne
in
jne
sbb
cmp
mov
xor
mov
xor
ds
and
incb
and
push
or
cmp
sub
jle
nop
lret
xchg
pop
or
mov
lret
and
pop
dec
sub
outsl
ljmp
inc
and
loop
dec
std
scas
push
cmp
sbb
mov
sub
xchg
pop
sub
mov
xchg
pop
dec
stos
movsl
dec
jge
inc
in
mov
movsl
add
pop
push
ficoms
pop
in
adc
sbb
mov
in
sub
cltd
rclb
xor
fwait
cmp
int
cmp
movsb
lods
inc
dec
cltd
shll
add
arpl
add
adc
dec
sub
push
mov
lcall
mov
inc
test
xor
aas
jmp
cmp
cwtl
push
es
mov
push
sub
mull
mov
add
mov
dec
adc
addl
inc
jno
sbb
cmp
xchg
sbb
xchg
cli
sub
lcall
les
dec
ret
call
repnz
test
test
in
mov
jae,pn
xlat
test
data16
outsl
dec
xlat
add
mov
push
cmpsl
popf
sub
rcrb
fidivl
out
jmp
mov
pop
xor
adcl
cmp
sub
mov
cltd
push
adc
notb
jecxz
xchg
add
movsl
rol
and
push
ja
ja
jecxz
mov
jae
pusha
int3
into
inc
mov
mov
adc
in
ss
xor
ret
add
push
stos
imul
inc
sub
fistps
xchg
int
fbld
sub
cmp
fbstp
clc
sti
jb
jae
mov
gs
sbb
adc
addr16
loop
push
cld
es
loopne
xchg
xchg
push
negl
pop
ret
xchg
mov
div
les
rcrb
cmpsb
adc
and
or
out
mov
add
popa
jbe
insl
push
aad
cmp
xchg
and
jmp
xchg
xchg
mov
fwait
inc
push
rorb
fcompl
cmp
add
and
mov
cli
sbb
test
inc
aam
dec
sbb
inc
or
addr16
sub
mov
int
test
adc
dec
add
pusha
scas
sbb
outsl
jno
xchg
addr16
dec
dec
inc
xor
sub
pop
jmp
jge
xchg
icebp
mov
cmp
dec
lock
xor
out
inc
inc
cmp
stos
xchg
jns
mov
and
lods
bound
insl
ret
add
mov
ja
gs
jnp
lahf
std
stc
xor
mov
leave
in
lret
cmpsl
inc
sub
jle
imul
mov
sbb
bound
fldt
pop
jge
iret
jns
lahf
movsb
arpl
push
cmp
mov
cmp
std
test
dec
loopne
clc
imul
sbb
pusha
jns
pop
ret
dec
or
mov
add
mov
inc
jne
push
int3
xchg
icebp
in
pop
adc
ffreep
in
cmp
jns
xchg
mov
adc
mov
mov
pop
dec
hlt
shlb
das
mov
sub
ficomps
mov
xor
mov
sbb
sti
or
jmp
pusha
or
imul
repnz
cs
cmpsl
das
lea
push
jl
iret
xchg
or
dec
gs
test
fwait
mov
mov
stc
pop
lock
loop
push
adc
cmpsb
jg
popf
mov
push
xor
aaa
out
jp
lods
cwtl
jge
pop
sub
bswap
and
and
ja
out
jns
repnz
inc
and
adc
out
out
movaps
or
inc
insb
dec
pop
xchg
lods
test
mov
jmp
lret
repz
sub
push
andl
ja
scas
sub
push
push
xchg
sbb
icebp
rcrl
mov
and
fstl
out
rcrb
aas
sub
mov
push
mov
xchg
dec
or
mov
dec
inc
daa
xchg
pop
add
jne
add
xchg
in
inc
test
and
bound
in
jmp
repz
and
mov
test
jl
dec
adcb
mov
xor
scas
add
pop
xchg
push
ret
push
in
push
pop
insl
sub
dec
pcmpgtw
mov
jb
testb
mov
push
inc
and
jecxz,pn
fs
mov
scas
jnp
xchg
mov
pop
shll
xor
sub
test
pop
mov
imul
dec
pop
xchg
int
loop
lds
push
adc
rcrl
mov
inc
mov
cmp
enter
jmp
adc
jne
into
sub
loope
mov
mov
in
or
testb
sbb
sub
mov
lcall
orb
xor
add
xor
int
xchg
insl
dec
mov
ret
lods
inc
push
lea
mov
jbe
mov
rcrl
inc
fildll
sti
jnp
jl
pop
add
outsl
sub
add
imul
pop
jg
pop
out
ret
nop
icebp
subb
imul
jo
lcall
mov
mov
push
push
movsb
ss
push
ja
icebp
jg
dec
or
outsl
pop
jo
mov
xchg
stos
shrb
sub
mov
jo
out
mov
inc
ret
push
jno
ss
fmull
cld
mov
in
pop
dec
dec
push
repz
ljmp
js
out
sub
push
jecxz
ds
push
into
data16
and
push
adc
movsl
mov
lcall
imul
mov
inc
jecxz
push
xor
fisttpl
sub
inc
mov
sub
or
mov
cvtdq2ps
std
ljmp
mov
imul
adc
std
or
je
sub
outsb
lods
inc
dec
fmull
int
mov
cmc
lock
mov
mov
scas
mov
negb
lret
mov
cltd
push
inc
xorl
inc
divl
push
les
out
lret
inc
ljmp
clc
insb
mov
jo
sarl
sub
xchg
jnp
lret
add
lcall
sarl
ret
ljmp
cld
push
xor
inc
sub
xchg
adc
xchg
mov
inc
pop
imul
aad
ret
lcall
xor
scas
sahf
mov
scas
pop
orl
in
addb
adc
imull
mov
in
ljmp
sbb
sbb
aaa
shlb
xlat
mov
aas
mov
shrl
inc
out
xor
into
and
or
push
insl
add
ljmp
ficoms
pop
dec
add
sti
movsb
mov
dec
dec
xchg
pop
daa
inc
inc
lcall
push
mov
xor
lds
into
add
mov
stos
in
or
adc
inc
in
mov
pop
inc
into
inc
mov
push
cmpsb
push
sbb
dec
push
lret
xlat
and
cmp
fstl
xor
fs
cmp
imul
std
xchg
inc
pop
lret
int3
mov
repnz
mov
clc
loope
mov
stc
mov
or
les
into
fcompl
xorl
sbb
and
jp
outsl
add
iret
scas
pop
dec
scas
hlt
or
and
out
int3
add
mov
loop
jno
push
hlt
pusha
aas
mov
imul
dec
out
lret
enter
jbe
or
and
sub
push
cs
cmp
idiv
loop
mov
ficoml
inc
mov
sarb
gs
outsb
mov
add
pop
dec
arpl
jmp
stos
inc
fdivrl
pusha
imul
cwtl
loope
pop
mov
lods
jecxz
jecxz
cmovp
mov
test
xor
mov
cmpsb
hlt
cmp
mov
push
xorb
pop
adc
into
mov
xor
mov
dec
in
or
mov
loop
bound
cmp
sahf
sahf
in
push
fsub
push
dec
hlt
je
scas
iret
fists
and
xor
pop
xchg
xchg
lea
or
dec
aad
adc
mov
push
add
mov
xor
in
push
fbstp
push
xchg
int
inc
inc
dec
ret
int
adcb
lea
and
enter
sub
pop
fisubs
cwtl
enter
jno
pop
push
inc
inc
jmp
mov
dec
jne
fstpl
iret
and
lock
lahf
int
mov
mov
inc
cli
push
jnp
cmc
imul
clc
bound
inc
repz
std
pushf
and
cmp
imul
cmp
ret
pop
cmc
mov
pop
scas
out
jle
cmp
std
or
ja
out
orb
xor
scas
adc
aad
pop
jbe
push
mov
orb
ss
xorb
add
pop
adc
pop
pop
leave
das
insb
sub
cs
cmp
nop
mov
xchg
or
cmp
push
loop
push
imul
inc
aaa
popf
sti
aam
mov
add
or
jne
xor
out
push
scas
orl
jmp
gs
pop
lds
or
popa
dec
icebp
popf
xorb
repnz
xor
mov
cs
mov
iret
call
mov
dec
inc
jns
mov
mov
and
sahf
das
inc
jns
cmpsb
out
jne
fmull
jg
mov
cmp
mov
repz
pushf
or
movsb
ret
ja
jl
or
add
ss
mov
xchg
gs
sub
mov
fildl
loop
add
dec
xchg
mov
adc
add
loop
cmpsl
xlat
jae
sahf
cmc
shr
jbe
and
andl
sub
pop
xchg
pop
ja
inc
scas
xchg
lock
jno
lret
lcall
out
es
add
adc
imul
xor
sub
pushf
and
mov
ds
lahf
sub
pop
mov
jns
push
jne
or
mov
mov
inc
pop
stc
or
dec
add
jge
pop
das
jecxz
je
xchg
push
dec
das
and
sbb
xor
daa
mov
push
adc
mov
push
scas
jne
les
xchg
cmp
xchg
cltd
aad
rol
inc
out
xor
push
lcall
pushf
fildl
ds
fcomps
cs
cs
and
cltd
scas
xor
jae
xchg
inc
mov
sub
icebp
clc
jno
daa
sub
std
int
pop
repz
jge
xor
push
js
xor
mov
out
jo
push
stos
and
lahf
lret
add
xchg
pushf
push
lret
mov
pop
rclb
sub
or
and
popa
sub
mov
mov
add
dec
sbb
popa
pop
fwait
pop
adc
sub
std
das
scas
mov
dec
movsl
and
mov
mov
jae
mov
sub
dec
ljmp
ret
imul
push
or
and
xor
xlat
int3
jae
cmpsb
or
dec
data16
ds
enter
push
dec
adc
das
lret
pop
and
imul
xor
test
repz
jae
push
xlat
add
inc
jl
in
mov
aam
fiaddl
imul
clc
stos
fsubl
mov
mov
xchg
push
out
and
mov
cmp
clc
xor
cmp
shl
into
repz
mov
icebp
iret
or
loop
sub
mul
ljmp
pop
repz
xor
push
jbe
mov
or
shlb
or
inc
scas
orb
mov
inc
stos
adc
out
fcoms
mov
or
bound
int
cmc
das
add
jle
push
lret
jnp
xchg
adc
mov
loope
cltd
pop
mull
xor
outsb
jle
cmp
or
dec
add
cmp
es
imul
pop
xlat
subb
pop
jno
mov
jle
inc
push
mov
bound
and
adc
mov
sarb
jnp,pt
dec
xchg
rol
std
xchg
sbb
push
scas
xchg
inc
ss
mov
fcmove
sahf
mov
xchg
dec
rcr
into
sub
inc
push
cmpsl
vhsubps
ja
dec
fiaddl
leave
dec
inc
and
shll
mov
push
aad
fbld
sti
insb
fiaddl
pushf
mov
sub
daa
dec
imul
fidivrs
stos
inc
xchg
dec
jae
xor
cmp
jno
jb
ficoml
add
mov
mov
xchg
xor
test
out
push
insl
flds
ds
icebp
out
js
sbb
js
pop
dec
iret
ss
maxps
pop
test
pop
scas
movsb
stos
lods
dec
push
push
pop
int
bndstx
sbbb
pusha
jmp
mov
pop
aad
movsl
mov
and
xchg
inc
imull
inc
mov
mov
add
jb
andl
or
push
jg
xlat
cmp
adcb
jmp
je
add
xor
adc
hlt
hlt
lcall
mov
cmp
push
mov
call
repnz
push
cwtl
pop
xor
pop
inc
ss
xchg
push
clc
dec
sub
mov
adc
out
pop
add
push
mov
into
add
pushf
stc
repz
xchg
adc
sbb
js
xor
pop
das
xchg
xor
adc
inc
mov
xor
pop
js
fsubrl
jmp
out
aaa
pop
test
cmpsb
xchg
add
addl
mov
dec
std
pop
push
inc
popa
test
add
sti
mov
daa
jns
mov
fsubrp
aam
lcall
jns
sbb
mov
mov
sbb
icebp
sbb
sub
fisttpll
push
out
pop
mov
stos
mov
push
cmovle
or
push
in
dec
mov
sarb
mov
mov
or
test
push
lea
push
cmp
cld
idivb
dec
sahf
xchg
test
or
sub
mov
das
out
mov
add
arpl
int
sti
aas
adc
hlt
or
jno
imul
lock
xor
push
daa
lods
or
icebp
dec
dec
out
lods
mov
fists
icebp
sbbl
xchg
cmc
adc
inc
popl
lcall
xlat
es
test
outsl
mov
iret
jae
xor
sbb
pop
lahf
test
and
jmp
out
sarl
xchg
cli
cld
jg
add
rcr
ror
add
sbb
sub
inc
cmp
loop
add
rcl
xchg
test
dec
loope
popf
xor
and
adc
xor
push
jg
sarl
pop
mov
add
pop
mov
push
push
mov
stos
xchg
mov
aam
popf
mov
in
out
out
pop
test
mov
notl
cmc
push
xchg
movsb
pop
pusha
imul
stc
sarb
fucomip
nop
movsb
xchg
add
cmpsb
jg
lods
sub
fcoml
xor
lods
out
fdivl
mov
js
and
mov
push
cmp
sub
cmpsl
push
repz
dec
imul
ds
dec
daa
xor
fcoml
sbbl
movsb
insl
cs
enter
add
cmc
jmp
xor
sbb
incl
fbstp
adc
pop
mov
fimuls
cmp
test
pop
cmpsl
movsl
mov
push
inc
je
push
ficoml
in
pop
adc
cli
inc
test
int
xchg
xchg
out
mov
repz
lahf
call
mov
jb
pusha
int3
iret
jmp
dec
xor
insb
mov
fcomps
mov
jmp
imulb
fxch
out
adc
lods
out
int
xchg
xchg
es
push
xchg
adc
jp
inc
push
inc
jbe
add
repnz
nop
stc
sbb
or
call
xchg
scas
add
fnstcw
repz
shll
push
xlat
adc
xor
xor
jne
and
loop
or
stc
inc
or
enter
ds
pop
lods
popl
das
fnstsw
sti
popa
jno
xchg
je
pop
sub
sahf
fiaddl
or
lods
insl
sbb
repz
icebp
pop
aad
cmc
adc
adc
sbb
add
xor
mov
jecxz
pop
data16
or
mov
jmp
cltd
push
jns
stos
mov
lcall
dec
or
xor
stc
or
adc
dec
popf
xchg
lcall
ret
mov
lahf
xor
cmpl
mov
xchg
adc
mov
aas
xor
test
push
scas
sub
xchg
inc
xchg
fsts
dec
sub
pop
out
dec
mov
stos
aam
popf
pop
outsl
mov
pusha
cltd
xchg
ds
lahf
xlat
sub
repz
pcmpeqb
aaa
push
lods
dec
mov
cmp
pop
adc
repz
ja
cmp
mov
adc
idivb
rcrl
mov
pop
inc
mov
jb
out
pusha
jge
xor
push
push
mov
les
mov
mov
into
inc
and
sbbl
sbb
push
mov
cli
stos
or
fdivs
movsb
push
xor
jmp
xchg
loopne
sbb
pop
mov
fwait
or
lahf
ljmp
jp
cmp
sarl
inc
test
in
lods
mov
mov
add
data16
inc
scas
jge
adc
jl
inc
mov
lcall
enter
pop
or
sarl
mov
jecxz
cmp
mov
clc
or
mov
ss
sahf
jnp
xchg
popa
jmp
pop
shrl
ja
les
popf
jle
aad
mov
push
jno
or
adc
jle
and
jecxz
xorb
repnz
into
popf
jmp
xor
sarl
out
mov
stos
popf
movsl
xlat
xchg
xchg
int3
adc
pop
pop
push
dec
push
fiaddl
daa
repz
fmuls
mov
sbb
repz
nop
jmp
bound
cmp
leave
fiadds
dec
sub
ds
mov
push
mov
dec
xor
es
or
sahf
inc
in
add
stc
pusha
outsb
cmpsb
sub
push
rol
add
leave
into
int3
imul
test
ds
sbb
push
push
cltd
lds
push
lcall
push
je
loop
jnp
jns
xchg
sbb
std
imul
cs
jle
fwait
dec
ret
iret
dec
mov
clc
pop
pop
loop
rcll
inc
inc
mov
jg
orl
mov
negb
outsb
xor
inc
stos
imul
sub
push
jl
sahf
cli
int3
pop
orb
and
and
lods
mov
lret
inc
xchg
outsl
sarb
fxch
push
adc
outsb
cmpsl
dec
pop
jno
push
push
inc
dec
mov
jp
adc
out
jl
repz
rcll
test
out
fcomps
je
cmp
fildll
dec
pushf
sub
popf
enter
sbb
xor
mov
mov
pop
sbb
inc
cltd
push
imul
ret
xor
arpl
mov
adc
mov
sbb
push
mov
inc
sub
xlat
lods
arpl
sti
push
pop
inc
xchg
xor
aas
or
stos
fsts
push
mov
jnp
xor
xor
xchg
pop
jae
xor
nop
xchg
push
pushf
push
mov
cmp
ficoml
dec
leave
frstor
ljmp
add
stos
push
mov
pop
jbe
sti
xor
jnp
push
pusha
dec
fscale
not
push
mov
pusha
sbb
jo
jg
icebp
sar
adc
push
sbb
mov
sub
fwait
ljmp
jg
shl
inc
xchg
cld
cmpsl
mov
xchg
je
push
pop
mov
pop
and
lahf
in
fcoml
addr16
pop
jne
add
xor
fstpl
imul
xor
imul
mov
icebp
xor
and
cwtl
pop
in
inc
std
jb
test
test
popf
inc
dec
dec
sbb
stc
shlb
jl
cltd
icebp
sbb
mov
xor
aaa
sbb
cs
repz
scas
pop
mov
lret
lea
shlb
fidivl
lret
mov
jo
pop
xor
test
sbb
xor
jno
int
loopne
or
cmp
repz
data16
push
clc
roll
xor
xchg
mov
gs
cld
mov
mov
ljmp
sub
fiaddl
cmpsb
ja
je
addr16
xchg
xchg
outsb
fistpl
jmp
sbbl
or
cwtl
dec
jl
pop
stos
xchg
sarl
push
hlt
mov
push
imul
popf
pop
pusha
or
adcl
cmp
in
cmpb
out
test
insb
inc
bnd
inc
out
int
xor
pop
jmp
cmpsl
or
outsb
fmull
cmc
mov
fstpt
data16
into
sarb
push
movsb
aam
int3
dec
pop
daa
xorb
ret
push
sub
xor
sbb
fldenv
divb
fstpt
cmp
scas
sub
cmp
ret
lret
es
xchg
loopne
sbb
xchg
pop
jg
push
out
scas
dec
mov
adc
out
adc
xorl
xchg
or
mov
mov
pop
push
in
fadd
cmp
cli
mov
test
sbb
adc
insl
stc
mov
fwait
pop
loope
pusha
dec
fstl
es
and
data16
fisttpl
pop
add
loop
mov
inc
cmc
leave
mov
out
xchg
bound
arpl
lret
xor
jbe
xchg
mov
and
mov
pop
scas
push
sbb
iret
push
in
jp
jnp
cmp
lahf
fistl
mov
stc
lods
xor
loope
xchg
mov
lret
inc
aas
scas
inc
fwait
jnp
cmp
mov
mov
mov
sahf
xor
ds
ljmp
push
in
loopne
out
sbbl
adc
push
adc
insl
fs
mov
add
sub
and
mov
lret
mov
pop
push
push
sbb
fidivrs
mov
aas
fnstcw
xor
cltd
les
adc
scas
xchg
jbe
mov
in
pusha
dec
hlt
mov
jle
or
hlt
cltd
aas
fildl
fcoml
push
psrld
lds
pop
lret
out
mov
cmp
jg
pop
and
call
cltd
add
jb
fwait
jnp
call
push
mov
sbb
cs
in
push
pop
jge
lahf
mov
mov
out
dec
jp
push
pop
cmp
lahf
ret
jo
outsl
xchg
mov
push
mov
insb
adc
stos
add
arpl
and
flds
mov
stc
push
push
mov
mov
test
xchg
stos
jbe
enter
inc
sub
push
or
bound
xlat
iret
xchg
pop
in
jmp
mov
lods
lret
jle
enter
pop
or
mov
xchg
mov
aaa
adc
sahf
dec
in
inc
adc
pop
xchg
and
sub
adc
mov
stc
xchg
inc
lods
cmp
popf
adc
mov
je,pt
cmpsl
adc
xchg
cli
push
and
insb
sbb
not
mov
and
pop
insl
mov
pop
cmp
repnz
fld
sub
push
add
lahf
mov
xor
repnz
mov
lret
popa
int3
adc
pop
mov
lds
scas
mov
cmpsl
or
out
push
testl
std
xor
std
pop
rorl
or
mov
push
incb
lcall
loope
int
fs
imulb
fs
loopne
sub
pop
push
out
cmp
mov
mov
jle
sti
push
rcrb
loop
adc
xor
movb
sbb
jb
cmp
lods
popf
in
mov
ss
adc
mov
xor
in
ret
xchg
sbb
out
not
pop
inc
cltd
outsb
das
cmp
adc
cmp
and
sbb
cmp
int3
xor
mov
mov
mov
adc
push
mov
or
mov
xchg
or
in
inc
ds
repz
inc
rorl
add
mov
sbb
fidivrs
xchg
mov
fstpl
jne
jb
xchg
mov
pop
mov
lcall
inc
add
mov
int3
aad
push
xchg
mov
cmpsb
mov
sub
adc
jnp
shrl
cmp
mov
or
pop
cmp
icebp
neg
cmp
cmc
jg
lds
cld
mov
test
xchg
jle
in
push
adc
fwait
or
icebp
subl
imul
popa
daa
adc
scas
dec
loopne
pop
sub
popf
push
add
or
jnp
inc
and
mov
out
cmp
scas
jae
into
test
pusha
cmpsb
in
cmpsl
cmp
xor
pop
and
imulb
sub
nop
or
cmp
or
ret
in
ret
xchg
cmc
js
outsb
jo
cltd
mov
aam
inc
dec
mov
or
mov
mov
or
and
imul
mov
pop
dec
dec
jecxz
popf
je
xor
js
sar
dec
pop
insl
jbe
in
stc
add
test
mov
lret
push
sub
dec
out
xchg
xchg
inc
adcl
pop
lods
cwtl
lods
daa
outsb
ret
jecxz
inc
ljmp
bound
outsb
push
push
xor
shll
jae
stos
mov
and
out
xchg
jecxz
fisubrs
dec
xchg
and
pop
add
in
add
cmp
jmp
mov
jnp
pop
xchg
pop
fisttpll
mov
inc
sbb
push
sarl
xchg
xor
pop
pop
mov
cmp
jmp
jns
mov
push
xchg
or
fsubr
dec
adc
mov
push
push
xor
xchg
shrb
jae
iret
loope
jo
mov
cli
stc
jecxz
sbb
gs
outsl
in
inc
pop
scas
xchg
or
fcompl
mov
adcb
jmp
fisubrs
inc
jnp
cmpsl
addl
je
xchg
xor
and
in
icebp
add
xlat
addl
cmc
jae
fs
pop
hlt
or
pop
xorl
cmc
push
aas
fsubrl
les
and
rorl
jae
add
rdtsc
cmpsl
or
jp
into
sub
pop
jle
push
sub
ds
divb
hlt
add
fs
ds
sbb
pop
nop
lret
scas
sub
dec
jecxz
mov
shl
dec
inc
mov
add
data16
sbb
mov
insl
jp
adc
mov
inc
subb
repz
adc
dec
push
dec
pop
jae
lret
or
roll
and
jne
je
mov
pop
lcall
pusha
sub
leave
cmp
and
sbb
push
sub
mov
dec
in
pusha
dec
and
or
les
mov
fs
insl
pop
stos
int3
jo
add
negb
cmp
xor
cmpsb
add
fmuls
mov
dec
add
xchg
push
popf
bound
jb
add
insb
iret
popl
push
imul
or
adc
bound
push
mov
sub
jecxz
cmp
cmp
push
clc
mov
cmp
push
mov
fsubs
in
fdivrl
xor
outsl
test
imul
imul
sbb
lcall
add
mov
mulps
or
xchg
popa
daa
loopne
out
mov
das
cmp
jmp
jo
and
sbb
and
outsb
mov
sub
out
test
test
sbb
sub
ret
sub
or
test
dec
push
and
ret
jg
addl
mov
inc
push
pop
jno
add
movsb
fistps
aad
xor
xchg
cmp
dec
loop
shrb
pop
ds
loope
mov
rorb
fdivrl
andl
mov
test
stc
inc
cmp
inc
push
jae
insl
mov
stc
test
inc
pop
pop
dec
lods
in
scas
or
mov
pop
fwait
or
outsb
sbb
lods
add
loopne
push
scas
fdivrl
into
insb
clc
mov
jmp
xchg
jnp
gs
lock
repnz
push
sti
loope
sbb
cwtl
cmpsl
add
jecxz
xor
push
and
ret
sahf
iret
jecxz
push
notb
and
mov
mov
xchg
pop
push
jbe
aas
add
adc
ds
gs
xor
cmp
dec
lea
dec
stc
mov
xchg
in
and
dec
add
pop
popa
arpl
dec
movsl
xchg
xchg
dec
inc
es
insl
iret
xor
in
sbb
cld
bound
aam
xchg
call
pop
sbb
js
push
daa
imul
outsb
cmp
jns
pop
or
push
orb
and
sub
xchg
lock
ss
ret
call
mov
popa
cmp
scas
or
mov
out
std
leave
xor
pop
aam
push
push
sbb
add
or
dec
mov
dec
push
inc
sbb
bound
push
push
sub
cld
push
rolb
roll
mov
and
pop
xchg
jge
and
movsb
loop
or
shrb
mov
fisttpl
add
sub
mov
lods
nop
sub
cmp
mov
lods
pop
popa
addr16
popf
mov
add
pop
fldenv
imul
call
loop
mov
mov
jg
mov
dec
xlat
loope
cmp
into
lock
and
scas
cmpsl
mov
jae
adc
and
xchg
dec
dec
leave
jge
lcall
orb
hlt
es
scas
stos
xlat
ljmpw
lea
pop
into
insb
mov
cmp
xchg
xchg
in
jbe
xchg
js
cwtl
xchg
xor
int3
sar
pop
push
data16
shrb
lahf
loopne
push
dec
add
mov
mov
ss
push
or
shr
push
and
cmpsb
pop
pop
pusha
and
rcl
cmp
pavgb
int
outsl
fldt
cmp
mov
sub
dec
ljmp
fchs
sub
jo
dec
dec
mov
mov
mov
shrl
push
pop
or
imul
mov
lock
lcall
dec
push
rcl
pop
xchg
dec
inc
push
lods
mov
adc
std
or
mov
ss
or
fsts
pop
mov
ja
xchg
add
cwtl
inc
dec
ficomps
js
cmp
mov
add
pushf
pop
mov
mov
arpl
cmp
mov
mov
dec
dec
xor
xchg
mov
sub
xchg
push
imul
pop
sub
addb
movsb
pop
enter
pop
pusha
out
cmp
cmc
xchg
pop
push
jno
loop
cmc
insb
push
in
enter
push
addr16
dec
mov
sahf
stos
sahf
push
jl
cmp
fucomip
adc
ret
push
xor
fcompl
bound
push
push
push
stos
out
stc
ja
mov
xor
mov
call
lds
ljmp
sti
xchg
sahf
adc
dec
test
mov
out
xor
mov
idivb
sbb
rolb
xor
jmp
js
gs
int
jmp
xor
fcmovnu
push
repnz
mov
nop
dec
push
sbb
rol
out
scas
dec
aad
je
dec
loope
fsubrl
xlat
jecxz
ja
push
add
shl
outsb
cmp
std
adc
sbb
mov
test
xor
dec
orl
sub
mov
sub
jb
js
insb
inc
inc
data16
lock
mov
enter
push
xchg
out
jbe
push
scas
mov
lea
mov
jg
push
scas
push
lods
mov
mov
roll
outsl
lds
inc
movl
dec
jecxz
push
js
test
stos
mov
jmp
mov
xchg
test
cs
js
mov
xchg
lret
mov
mov
stos
mov
sahf
xor
mov
xor
mov
outsb
clc
mov
mov
cmp
cmp
rcr
fwait
ljmp
imul
cmp
test
decl
fs
pop
or
sub
or
mov
jne
into
and
js
enter
icebp
sbb
mov
mov
stc
pop
loopne
dec
mov
xor
dec
fcmovnb
jmp
pop
add
pop
negl
loope
and
inc
das
les
xchg
and
ljmp
sub
cmp
popa
sub
loopne
push
mov
das
pop
add
xchg
stc
repz
fimuls
test
jge
shl
loop
sub
push
xchg
sub
and
lods
or
into
mov
je
es
jg
push
cmp
ficompl
mov
lret
xchg
fwait
sbb
movsl
daa
add
sub
pop
jb
in
cmpl
sbb
mov
in
mov
inc
xchg
mov
add
push
scas
xlat
popl
clc
push
lret
add
jbe
dec
js
xchg
cmpsl
adc
sub
mov
lahf
mov
mov
mov
dec
ljmp
adc
inc
ret
ds
mov
mov
mov
andl
repz
scas
movsb
dec
push
jecxz
sub
cmpb
lret
insl
add
push
je
mov
adc
dec
mov
ret
jp
cmc
pop
loop
out
hlt
stos
dec
jge
jbe
add
jg
jno
mov
pop
cmp
dec
and
xchg
data16
call
sbb
lcall
jecxz
xor
loopne
push
lock
adc
lods
ret
sub
push
xor
insl
mov
dec
xor
cmp
adc
rolb
push
mov
or
clc
jo
andb
stos
jnp
mov
out
sbb
push
cmp
mov
sar
jl
mov
sahf
aas
je
arpl
jnp
mov
jb
xor
mov
into
adc
shl
push
sub
jns
xor
lret
pushf
orl
xor
adc
popa
cld
cmc
or
rolb
dec
push
sarb
insb
add
hlt
inc
push
mov
fsubl
rol
pop
xor
leave
cmp
stos
or
add
push
add
cmp
inc
insb
sarl
data16
dec
stc
lods
jl
dec
pop
aam
shll
mov
lret
andb
sub
iret
jno
adcb
push
cmp
mov
hlt
mov
das
or
movsb
gs
fstl
mov
data16
sub
and
sbb
cltd
sbb
jmp
outsl
lret
iret
mov
lret
and
or
popa
add
gs
cmp
adc
pop
adc
leave
push
push
imul
jns
imull
dec
insb
test
repz
mov
ss
add
movsb
sbb
shll
cs
push
cmpsl
jb
das
addr16
pop
and
lret
jb
push
dec
iret
add
inc
xor
push
sub
stos
pusha
xchg
test
or
icebp
sbb
std
ret
ret
sub
out
cmp
mov
sub
mov
sarl
mov
xchg
int3
or
aad
pop
jae
insb
fcomps
sbb
mov
pop
or
push
lret
jl
fdiv
iret
xchg
int
xchg
cmp
jg
es
sbb
scas
cld
xchg
cltd
int
pop
fs
jl
je
icebp
cmpsl
dec
jp
mov
pop
sbb
push
adc
shlb
mov
clc
pop
subb
push
jne
clc
push
iret
jb
dec
int3
jmp
push
pop
popa
xlat
aam
pop
sbb
or
push
stos
sar
dec
ss
cmp
insl
xchg
cmp
jmp
mov
mov
cwtl
inc
scas
clc
mov
ja
imul
add
inc
jo
loop
mov
mov
negb
ds
mov
fs
jns
sub
repnz
inc
fcomps
rclb
in
pop
mov
jno
in
adc
push
decl
inc
mov
xchg
pop
int3
pop
std
call
out
outsw
sarb
popa
pop
cmpsl
pushf
imul
cltd
mov
roll
fwait
xchg
in
scas
hlt
gs
aad
inc
mov
cmp
std
lods
outsl
mov
fsubr
adcl
add
in
fwait
dec
or
xor
adc
sti
adc
pusha
outsl
cli
sub
mov
aaa
loopne
nop
orb
cs
pushf
in
adc
and
les
push
adc
test
repz
mov
fmuls
pop
loope
xchg
es
gs
ljmp
ret
mov
or
cs
xor
pusha
or
pop
cmp
mov
pop
lahf
test
insb
or
sbb
jmp
push
cli
rclb
sbb
pop
cmp
mov
popf
jne
add
pop
jmp
xchg
test
dec
sub
insl
push
mov
imul
pop
out
add
and
int3
ja
mov
sbb
sub
or
jecxz
fcmove
testb
rorb
and
nop
mov
adc
cmc
ss
repnz
cmpsl
dec
mov
repnz
jbe
popa
ljmp
out
lcall
shll
in
mov
pop
nop
or
xor
xchg
pop
cmp
push
mov
mov
test
adc
paddsw
mov
mov
rolb
mov
sub
push
sahf
add
cmp
ret
pop
inc
popf
mov
add
popa
repz
mov
rclb
leave
cmp
add
mov
mov
sti
imul
les
fnstenv
faddl
mov
mov
cmpsb
imul
jg
push
mov
mov
pop
pushf
xor
cs
mov
loop
lret
popa
adc
push
push
add
mov
cmpsl
sbb
push
mov
pop
cmp
es
notb
adc
cwtl
clc
sbb
mov
daa
pop
inc
dec
iret
mov
outsb
fcoms
sbb
fmull
loopne
sbb
loope
ss
fwait
xor
rorb
int3
pop
lret
mov
ret
inc
das
and
imul
lods
and
sub
jno
cs
shll
or
sub
xor
sbb
cwtl
cmpsb
push
cmp
ljmp
fdiv
int
dec
aad
push
push
pop
mov
adcl
mov
push
mov
mov
shll
adc
jmp
fs
imul
fistps
movsb
adc
or
and
add
push
jge
mov
inc
ljmp
mov
fmuls
nop
jp
std
xor
inc
icebp
cmp
push
xchg
jae
sub
ljmp
xor
push
or
ss
cmp
xor
xor
in
push
mov
hlt
mov
scas
inc
inc
cmc
mov
test
xchg
loopne
cmc
push
stos
lods
lret
add
je
jne
push
and
push
fidivl
lcall
and
jecxz
add
mov
iret
push
cmpsb
mov
ds
push
pop
scas
push
add
js
fildll
pusha
cld
push
stos
mov
xor
jo
push
pushf
xor
cmc
jns
fimuls
imul
mov
push
push
movsl
mov
sarl
jg
and
dec
inc
addr16
in
dec
loopne
repz
outsl
pop
fisubrs
mov
add
jg
push
push
mov
mov
ja
jp
xlat
pop
xchg
lods
xchg
out
sbb
sar
clc
negb
add
xor
jns
xor
or
push
or
push
add
push
int3
xor
pop
out
jle
enter
in
mov
jae
xchg
xchg
pop
push
add
lock
aaa
cltd
imul
cwtl
call
cwtl
or
fistl
adc
testb
shl
mov
xchg
ss
insl
mov
int
push
mov
fcmove
aaa
fs
es
dec
lods
bound
xor
lock
push
in
pop
cmp
test
pop
push
xchg
dec
shll
xchg
sbb
popf
xchg
das
jl
gs
dec
daa
pop
adc
stos
mulb
aas
cli
jnp
stos
lret
pop
adc
int
aaa
cmp
loopne
push
test
xor
push
fisubrl
sub
sahf
leave
sarb
out
inc
out
nop
xchg
and
jns
or
ret
popa
jecxz
inc
jmp
mov
jnp
int3
lcall
and
jecxz
repnz
mov
ds
jmp
xor
outsb
mov
push
jle
dec
xchg
mov
sti
push
jge
xlat
cwtl
pop
cld
pop
andb
pop
cmp
mov
cmp
movsl
les
and
cmpsb
mov
sahf
lea
push
xchg
adc
rorl
adcl
xchg
add
sbbl
in
push
cld
call
mov
orb
fnstenv
loopne
dec
mov
sbb
sub
movsl
mov
jbe
enter
es
es
fbld
xor
pop
test
hlt
jo
ret
aas
loope
sub
mov
pusha
sbb
or
test
cmp
sbb
mov
mov
fisubl
cld
adc
add
aad
lods
int
call
int3
cmpsl
jae
ja
jp
test
push
lahf
pop
out
inc
cmpsl
pop
push
sub
xlat
jmp
addb
arpl
sbb
fs
test
rcrb
lret
jne
xor
mov
push
fstl
mov
cmp
cmp
inc
xlat
mov
inc
jno
in
sbb
in
jp
sub
movl
pop
enter
jbe
and
cmp
aaa
ss
scas
cmp
sbb
cltd
out
aaa
xchg
loopne
pop
fidivrl
arpl
push
push
lds
repz
sar
aam
xchg
popf
int3
aam
push
cwtl
xor
jle
pop
test
xor
or
adc
push
pop
jne
xor
jae
dec
and
or
fcompl
or
jge
js
push
fistps
push
fwait
mov
mov
test
addr16
inc
fwait
push
fs
xor
aad
andl
add
fs
cmp
push
mov
push
inc
jae
lret
and
imul
jae
lds
cmp
pop
push
dec
xor
into
das
imul
imul
aas
mov
lret
xor
ljmp
inc
arpl
sbb
and
xchg
jnp
push
shl
sub
sbb
pop
es
sub
pusha
mov
jmp
xchg
insl
js
cltd
pop
or
xchg
test
scas
scas
xor
pop
push
lds
pop
pushf
in
pop
xchg
rorl
xchg
mov
dec
rcrb
fldt
adc
mov
clc
xchg
pushf
or
fnstenv
fcompl
mov
divl
xchg
rorb
inc
xorl
in
imul
ficoms
daa
call
lahf
fsubs
repnz
aaa
cmpb
inc
scas
test
mov
push
ja
mov
xchg
mov
hlt
inc
adc
xorl
push
lea
add
addb
mov
inc
jge
mov
push
fs
or
xchg
in
and
inc
rcrb
sbb
push
fmul
ss
shll
sahf
sbb
popf
cmp
js
ja
xchg
cmpsl
cli
gs
scas
cmp
mov
mov
mov
push
pop
stos
cs
lods
lods
sbb
adc
mov
push
pop
int3
mov
lret
pop
or
cmp
movl
jne
xchg
pop
test
out
fcoms
jae
fs
xor
sti
and
xor
mov
mov
ret
mov
lret
shrb
add
sub
push
cmp
out
sub
cltd
cmp
cmp
es
idivb
orl
data16
test
ljmp
loope
movsb
orl
mov
push
int3
pop
sbb
ljmp
inc
add
jne
inc
inc
cmc
jnp
aas
rolb
arpl
dec
cmpsl
pop
adc
shll
adc
sub
xor
lret
mov
ljmp
pop
jl
add
outsl
jp
cmp
es
inc
mov
enter
hlt
mov
adc
dec
mov
mov
sar
ljmp
mov
or
outsl
insl
push
outsl
dec
xchg
xchg
cmp
jp
das
enter
inc
sub
pop
cmc
or
push
xor
mov
aaa
loop
mov
aad
mov
mov
ret
and
movsl
pushf
add
sub
call
push
pop
or
adc
jbe
add
ret
mov
arpl
icebp
loope
cmpsl
sbb
fwait
loopne
push
mov
adcb
mov
or
imul
push
or
mov
adc
push
cmp
les
cmpsb
rcll
dec
sbb
jle
or
std
jo
fsubl
sbb
mov
and
ret
sti
adc
xchg
enter
add
sbb
mov
sbb
insb
rorb
cmc
pushf
pusha
pop
ret
xor
xchg
pop
add
scas
xor
xchg
aas
stos
jo
mov
into
cmpsb
arpl
mov
adc
in
int
and
rcll
aas
pop
inc
push
jge
leave
xchg
lret
jl
fldt
xor
and
jle
dec
pusha
pop
xor
pop
xor
mov
mov
in
sbb
mov
adc
outsb
test
test
test
out
mov
fisubrl
pop
dec
inc
mull
jmp
jmp
shr
inc
out
inc
jae
stos
sub
cwtl
or
movsb
mov
adc
lods
pop
push
aad
add
in
iret
cmp
iret
xchg
and
mov
dec
movsl
xlat
mov
mov
mov
and
stos
jb
mov
pop
jnp
popa
mov
sub
into
pop
incb
xchg
and
mov
fs
stc
push
rorb
add
pusha
sbb
outsl
lods
push
jns
ficompl
mov
scas
inc
rolb
xor
out
scas
lea
mov
pop
ds
mov
fidivs
mov
push
fwait
xchg
push
insl
repz
adc
subl
mov
jns
sbb
arpl
add
call
xor
idivl
imul
inc
mov
ljmp
or
and
adc
lods
sbbb
dec
into
xchg
mov
scas
pushf
sub
int
sub
ds
xchg
adc
ljmp
and
pop
mov
push
cmp
pop
xchg
ret
push
dec
inc
ljmp
mov
cmc
daa
mov
sarb
push
into
ret
lods
std
sbb
std
cmp
jecxz
fmuls
jo
ret
xchg
xchg
adc
add
in
std
aas
iret
out
jo
sub
ret
gs
addr16
sbb
sbb
push
fs
in
cmp
sub
leave
iret
lods
addr16
xor
inc
addr16
mov
cmpsl
lret
mov
push
add
lods
fs
and
jae
out
and
mov
lods
push
sbb
xlat
xchg
rclb
ljmp
test
je
cmc
or
rclb
jae
mov
push
pop
mov
test
mov
imul
dec
xor
push
sub
js
dec
rclb
dec
xrelease
lahf
test
sbb
and
jne
inc
mov
shlb
dec
movsl
pop
or
repz
xor
lods
faddl
and
fisubl
lds
add
lahf
bound
out
repnz
je
test
ss
loop
repnz
dec
push
xchg
dec
out
sub
and
out
pop
push
es
pop
or
aam
push
stc
sub
gs
out
cmp
mov
mov
inc
aam
shrl
out
loop
mov
sub
jo
and
xchg
sbb
push
cmpb
cmp
jl
lea
je
pmaddwd
inc
jmp
mov
popf
iret
psubb
into
xor
in
movsl
ret
enter
lock
cmpsl
xor
aam
sbb
sbb
mov
pop
out
mov
adc
pop
ja
cmc
jb
out
data16
or
jnp
sub
fcmovnbe
adc
xor
testb
orl
mov
sub
idiv
mov
aam
push
fwait
dec
push
jle
aam
out
inc
int
popa
rcrl
stos
insb
xchg
mov
add
mov
iret
xchg
jo
fs
fists
sbb
call
push
xchg
fsub
call
push
cmp
fcmovbe
push
inc
inc
int3
sbb
sub
stc
sub
jge
jne
mov
gs
les
mov
testb
adc
dec
outsl
rclb
mov
daa
push
cmpsb
inc
test
inc
mov
dec
jge
push
inc
outsl
jle
mov
fucomp
push
inc
sbb
jl
jbe
pop
scas
nop
stos
pop
xchg
lret
repz
add
sar
lahf
cli
loope
das
inc
repnz
movsl
in
sahf
cli
jle
outsl
test
out
imul
mov
cmp
dec
cli
cmp
inc
ret
loopne
movsb
cmp
jns
push
sbb
lahf
pop
into
jmp
ss
push
cmp
dec
cmp
dec
cmp
xchg
xchg
xchg
popa
data16
sub
lcall
ret
imul
mov
dec
js
fiaddl
xorb
cltd
js
and
ss
stc
mov
jne
xlat
std
in
inc
jnp
xchg
pop
mov
cmpsl
mov
pop
cmc
lods
lock
jb
add
cmp
push
rorl
cwtl
popa
lds
pop
pusha
cwtl
cmpsb
cwtl
testb
les
or
loopne
jmp
hlt
pop
lods
dec
ss
jne
push
pop
mov
ret
lahf
int3
inc
jecxz
sub
cmpb
inc
std
add
sub
push
rcr
cwtl
pop
sub
push
fisubrs
mov
xchg
mov
push
inc
out
cmp
jecxz
xchg
lcall
jl
sarb
repz
push
add
jmp
orl
dec
or
xor
pop
mov
dec
mov
ljmp
aas
nop
scas
dec
mov
into
xchg
ret
pop
dec
xchg
push
jb
push
mov
cs
lods
repnz
jno
mov
ja
mov
mov
leave
insb
jne
mul
jmp
aas
sti
iret
aaa
xchg
test
insb
mov
lods
push
adc
jb,pn
pop
iret
ss
ror
jns
jmp
mov
shll
lds
mov
call
lret
xor
loop
cmpb
cmp
jne
cmp
insl
aaa
in
inc
push
mov
stc
push
mov
stos
xchg
ret
adc
jmp
pop
cmp
ss
fwait
pop
lahf
shll
push
xor
shll
rol
fcomps
or
lods
cmp
push
xor
mov
jecxz
aaa
mov
mov
cld
stc
sub
push
aas
call
pmaxsw
fisttps
mov
cmp
or
fildll
mov
stc
popa
dec
dec
leave
in
xor
sub
addr16
adc
inc
or
sbb
pop
out
mov
mov
in
jp
outsb
xorb
pop
ja
out
add
jmp
add
les
pop
push
sub
shll
xchg
pop
or
xlat
ret
cmp
and
jb
mov
outsb
xor
test
fistpll
jg
out
mov
test
out
stos
test
fxam
dec
xor
nop
xor
xor
ret
scas
mov
push
cmpsl
aas
jae
or
jl
jne
push
dec
cmp
inc
imul
sbb
out
in
mov
gs
aad
loop
add
sti
pop
cmpsb
or
cmp
pushf
mov
xchg
mov
jno
imul
in
push
stos
in
mov
jmp
cmpl
leave
mov
dec
push
or
pop
out
jo
pop
fisttpl
addl
jecxz
fcompl
add
test
adc
lods
jno
jmp
scas
gs
and
mov
adc
ret
enter
dec
mov
mov
loopne
mov
add
stc
or
imul
neg
push
int3
xchg
stos
add
cmpb
pusha
ds
mov
out
sub
push
lahf
fnstsw
ret
popf
loopne
jmp
or
lret
mov
or
int3
or
and
mov
adc
sahf
test
add
nop
imul
add
filds
ljmp
add
inc
adc
inc
push
mov
mov
addr16
pusha
cmp
mov
jbe
ds
inc
notb
scas
pop
movsl
xor
adc
jmp
pop
ss
dec
jge
cmpsl
lock
pop
std
mov
xchg
mov
mov
movsb
pop
mov
je
and
jge
subl
adc
push
jg
xor
js
test
cmp
and
mov
jb
push
add
js
das
cwtl
pop
and
push
test
fwait
mov
add
mov
sbb
iret
sahf
adc
jno
sub
mov
int
scas
push
lret
jo
sub
in
movsb
arpl
sbb
pop
jle
int
add
inc
das
repz
in
fists
iret
repz
test
adc
aas
xchg
ds
dec
or
add
das
cmpsl
xor
arpl
mov
pop
fwait
push
xchg
mov
stos
icebp
mov
push
lock
jg
sub
movsl
outsb
jnp
andl
iret
mov
add
js
xchg
or
inc
sub
mov
mov
mov
sahf
sbb
decb
ficoms
xor
jecxz
bnd
sarb
xor
or
divl
mov
xor
pop
push
xchg
sub
test
iret
mov
dec
icebp
test
jmp
sub
std
mul
into
pop
repnz
mov
jecxz
hlt
lds
ret
hlt
daa
les
or
fsubl
lret
js
push
inc
jno
fwait
cld
sub
pop
mov
mov
and
push
mov
jle
cwtl
xchg
andl
fcmove
pop
push
idivw
add
hlt
jecxz
test
jge
pop
mov
lret
loopne
mov
cmp
pop
push
daa
mov
pop
pop
cld
into
outsl
out
cmpsb
push
cltd
imul
xor
sub
jecxz
and
ljmp
pop
push
push
lahf
push
mov
mov
sbb
xchg
jae
push
mov
push
icebp
inc
je
mov
inc
call
and
dec
repz
mov
scas
sti
xor
cli
pop
mov
push
lret
loop
lock
pushl
and
dec
imul
sbb
mov
mov
cld
xchg
push
lcall
pop
cmp
or
adc
nop
cld
pop
or
pop
sub
adc
xchg
ds
loop
pop
fidivs
dec
jl
mov
xchg
mov
cmp
inc
fdiv
loop
cmp
scas
xchg
ret
int3
add
xchg
jae
fistpll
stos
pop
cmp
ret
mov
adc
and
dec
xchg
in
lea
inc
jmp
test
clc
sub
push
or
movsb
sbb
movsb
pop
mov
cmc
cmp
sub
cmc
xchg
mov
push
mov
in
dec
push
inc
imul
jnp
sub
mov
xor
adc
hlt
scas
lock
jns
or
enter
inc
aas
inc
ror
lcall
add
cld
xor
icebp
cli
in
aad
mov
bnd
test
push
sub
sahf
lods
aas
cmpsl
notb
mov
jg
sbb
push
xchg
dec
rcrb
popf
mov
dec
inc
xor
xchg
or
imul
mov
jmp
push
push
jecxz
int
loope
mov
roll
and
add
insb
sub
cltd
fsubrs
pop
inc
addr16
outsl
xor
add
jb
push
mov
shl
push
sbb
mov
popa
sub
in
mov
std
ss
popf
stc
xchg
pop
insb
fdivp
lret
fldcw
pop
mov
ret
dec
dec
mov
fs
bound
xor
or
jg
xchg
inc
pop
xorl
dec
push
xchg
xor
xor
stc
cmp
mov
rol
out
rcl
rcrl
mov
test
push
mov
lcall
popa
inc
add
adc
lods
lret
aaa
fcmovbe
dec
xchg
ret
nop
xor
mov
pop
test
loopne
jb
jmp
push
repnz
add
dec
push
jp
fcoml
sbb
nop
jno
cli
push
cmpsb
data16
mov
fidivrl
xchg
mov
aaa
js
adc
add
mov
push
jp
jp
insl
movsl
pushf
pop
dec
idivb
hlt
cmp
xor
pop
lods
pop
stos
je
leave
pop
mov
ljmp
sub
mov
out
imul
inc
adc
roll
test
cmpsb
test
or
push
mov
cmp
andb
or
dec
add
push
loopne
in
jno
jl
js
or
adc
push
popf
std
lods
ljmp
cmp
cltd
mov
mov
mov
sbb
pop
and
test
ljmp
fcom
scas
out
jl
fmul
add
add
xlat
sub
mov
pop
dec
xorl
dec
stos
mov
push
roll
push
push
shl
sbb
bound
icebp
lret
ret
xor
or
insl
into
test
or
lret
cmp
std
dec
pop
or
ret
dec
and
lret
mov
pop
and
ja
in
movsl
stos
lods
mov
cmp
jnp
aaa
adc
roll
sub
mov
in
iret
lcall
mov
pop
in
orl
test
ficoml
pop
ja
add
inc
mov
insl
or
push
mov
mov
outsl
adcl
nop
movsl
dec
jns
insl
shr
repnz
addr16
lea
stos
jl
enter
dec
scas
insl
and
dec
dec
stos
sub
jno
out
scas
xor
faddp
mov
pmaxsw
ret
popl
mov
add
push
test
push
out
adc
hlt
adc
sbb
adc
jb
or
adc
cmc
test
inc
xchg
icebp
jnp
mul
out
pop
sahf
and
mov
in
mov
dec
popa
cmp
adc
insl
js
int3
sbb
sti
adc
pop
mov
or
xlat
add
mov
test
sahf
cli
inc
lds
or
cmp
test
ret
add
adc
ret
std
rolb
ret
sbb
sub
mov
mov
cld
dec
sbb
ret
inc
pop
adc
mov
repz
inc
fdivl
push
xchg
xor
aaa
test
jg
xchg
or
and
loop
jne
fadd
scas
add
jb
or
mov
lds
xchg
frstor
lcall
pusha
sbb
fdivl
cmp
adcb
in
mov
out
jbe
and
shr
leave
das
jb
xor
sub
repnz
xchg
add
mov
out
cs
xchg
lock
dec
adc
mov
push
mov
mov
sbb
es
mov
and
lods
es
push
jl
outsl
sub
xor
add
cld
jnp
icebp
lock
in
inc
negl
push
sbb
pop
push
dec
not
int
xchg
jmp
inc
addr16
inc
loope
fwait
rcll
mov
lods
in
stos
mov
and
mov
add
repz
mov
aam
and
mov
dec
mov
dec
mov
pop
mov
pop
cld
jnp
inc
cmp
mov
push
push
nop
lds
mov
and
sahf
imul
jbe
bound
aaa
add
cwtl
rcrb
ss
dec
pop
sub
sub
outsl
shl
pusha
mov
movsb
inc
jp
push
mov
dec
bound
jo
gs
out
xor
sub
mov
movsb
out
xlat
int
std
push
push
jmp
outsb
mov
ljmp
cs
lcall
inc
lods
les
add
jg
int
and
bound
pop
inc
xchg
inc
push
sub
lea
cmpsl
cmpsb
adc
jmp
sub
into
cmc
scas
std
addl
movsb
pop
inc
sub
out
jl
aam
mov
mov
or
inc
pop
divb
imul
xchg
push
test
pop
sub
enter
jecxz
adc
jg
out
clc
stos
sbb
mov
sub
lods
cmpsb
daa
mov
sub
dec
lahf
adc
cmp
sub
aad
fmuls
repz
lds
sarb
sub
and
shll
adc
in
pop
sahf
shlb
dec
gs
mov
sbb
or
xchg
sub
sahf
add
cmp
mov
es
mov
xor
in
mov
std
jle
or
rclb
outsb
mov
jae
shrb
jno
loop
push
jbe
das
and
pop
mov
cli
cmp
loope
dec
call
gs
cmc
dec
xchg
push
mov
stos
loope
sbb
mov
adc
daa
nop
pop
insl
cmc
pop
shlb
sub
repnz
icebp
cmp
inc
inc
sbb
rcrl
cld
int
pop
test
pop
jp
lods
shll
popa
and
aaa
sarb
xor
push
push
sti
pop
or
sbb
rcl
xchg
inc
mov
in
mov
fsts
fcompl
jae
or
cmp
outsl
or
jecxz
jbe
sub
pusha
fistl
les
shl
add
or
iret
gs
mov
cmp
les
mov
xchg
push
xlat
shll
sbb
lret
jle
outsl
aad
cmp
mov
add
testl
nop
pop
push
add
frstor
lret
pop
dec
dec
icebp
pop
aam
mov
lods
ljmp
pushf
mov
repz
stc
or
push
fwait
xchg
inc
mov
jle
fdivr
js
loope
dec
dec
cmp
test
sub
les
pop
pop
je
mov
mov
sub
roll
mov
test
cmp
jne
xchg
jb
jne
sahf
cmp
pop
xor
lret
xor
add
sub
std
nop/reserved
mov
insb
lods
negl
mov
jb
mov
xchg
mov
mov
scas
mov
xchg
jne
add
adc
push
pop
xchg
lods
popf
pop
adc
push
or
mov
rcll
pop
mov
divb
fildll
cwtl
sub
pop
jl
int
fs
subl
push
repnz
xor
pop
push
sbb
sub
hlt
lock
dec
sub
out
arpl
mov
xor
nop
loope
mov
sbb
jae
jg,pt
incb
mov
sbb
jmp
lods
jge
neg
orb
sahf
fstpl
fsubrs
mov
push
mov
add
and
andb
adc
dec
jmp
mov
push
andl
jne
out
sbb
shlb
sahf
call
mov
mov
xorb
add
loopne
repnz
xlat
inc
jne
sahf
inc
xor
mov
xor
mov
jbe
cmp
imul
mov
add
lods
inc
cltd
xchg
lahf
int
iret
xchg
jecxz
mov
incb
adc
loop
lods
pop
mov
add
imul
sarb
pop
mov
mov
mov
in
test
pop
mov
mulb
mov
sub
outsw
lock
andl
push
cld
mov
xchg
enter
call
or
dec
out
add
icebp
arpl
lds
stos
lods
pusha
add
mov
into
sbb
mov
push
sbb
or
adc
mov
rol
pop
imul
sbb
repz
jge
popa
lock
test
sbb
jecxz
insl
lods
shll
mov
adc
repz
and
out
push
pop
mov
icebp
test
sub
and
mov
aad
loopne
lds
mov
and
xchg
es
mov
xor
xor
mov
mov
inc
aam
out
and
pop
ljmp
adc
stos
push
je
xor
mov
jmp
cmp
or
lcall
sti
mov
jo
xchg
iret
inc
mov
pop
push
mov
testb
mov
cltd
das
stc
mov
cld
mov
pshufw
push
repnz
inc
adc
sub
subl
and
inc
sbbb
out
shlb
pushf
cmp
sbb
xor
sbb
lods
inc
jns
pop
jmp
push
add
push
sahf
push
or
or
fcmovb
adc
repz
or
sub
es
cmc
js
shl
in
sub
xchg
cmc
popf
sbb
enter
js
out
push
jmp
sub
out
add
aam
sub
fildll
stc
out
jmp
dec
rclb
sbb
push
ljmp
dec
pop
into
jg
pop
pop
jno
sbb
or
pop
jb
mov
push
lret
int3
push
popf
jae
hlt
les
push
mov
lds
add
lcall
addb
bswap
adc
sbb
sub
dec
mov
mov
cmpsl
das
mov
jecxz
mov
mov
mov
ficoms
pop
leave
add
ja
jb
push
scas
xchg
roll
fisttpl
inc
sti
lcall
je
jb
fmull
jmp
cmpsl
arpl
pop
push
ret
pop
mov
stc
fisttpl
jo
mov
subl
push
stos
inc
mov
cmp
or
add
sub
hlt
sahf
scas
cmpsb
imul
mov
inc
sbb
xor
push
fwait
lds
enter
clc
stos
enter
mov
pop
cmp
lds
jecxz
xchg
add
push
aas
adc
icebp
cmp
mov
fwait
sbb
xchg
out
mov
lods
outsl
test
xor
sub
mov
mov
bound
jnp
push
add
mov
lds
ret
in
insb
stos
pop
sbb
mull
dec
add
push
repnz
andl
cmp
mov
imul
in
enter
cmp
add
cmp
fisubrl
sub
sub
jg
push
inc
dec
sbb
es
push
push
add
mov
ja
hlt
nop
mov
dec
repnz
dec
pop
aas
in
fcomip
mov
xchg
push
cmp
and
ficoml
sbb
sbb
shlb
pop
mov
ret
imul
xchg
fidivrs
fistps
test
fcoms
adc
sub
jl
pop
lcall
sarl
add
jno
lcall
aaa
jl
mov
out
adc
clc
push
inc
xor
inc
cmp
jmp
hlt
jl
pop
add
or
shl
dec
mov
mov
aas
cmp
aad
cmp
mov
or
sbb
sbb
pop
xor
lods
imul
jno
cmp
mov
scas
fsubs
sbb
add
mov
inc
adc
cltd
sub
stc
dec
mov
pop
or
imul
dec
dec
cmp
addr16
mov
notb
jmp
pusha
adc
ds
sub
std
lret
mov
orl
sbb
aad
stos
adc
fwait
mov
xchg
arpl
test
push
or
iret
push
push
aaa
icebp
testl
fistps
sbb
imul
in
aas
iret
dec
jl
movsb
das
mov
aas
mov
jge
mov
xchg
xchg
cmc
lods
mov
cmp
int
lcall
jcxz
dec
pop
popa
je
gs
fwait
nop
or
push
jbe
shl
jle
data16
pop
or
mov
das
loopne
mov
shll
push
adcl
and
inc
test
jo
sbb
add
icebp
jp
scas
and
pusha
or
xor
andb
mov
nop
stos
jno
dec
rolb
mov
cmp
in
push
mov
fidivs
and
movsb
dec
and
sbb
cmp
jno
mov
es
or
jmp
cli
xchg
sub
movsl
stos
mov
int3
loope
mov
data16
sbb
movsb
leave
xchg
jb
xor
lret
push
nop
adc
in
inc
push
xor
enter
inc
add
dec
out
add
in
lods
icebp
push
stos
cmpl
lcall
jle
jg
sub
repnz
std
xor
pop
dec
es
adc
data16
xor
push
int
jge
jnp
stc
cmc
inc
test
lods
pop
add
out
stos
adcb
dec
aad
cwtl
cmp
jns
xchg
stos
dec
pop
push
data16
lds
ror
xor
repz
xchg
push
xchg
aam
pop
cltd
jbe
rclb
dec
dec
ds
shlb
sahf
mov
lret
jns
mov
xchg
and
push
scas
nop
xchg
dec
push
pop
adc
jo
xor
fwait
popl
stos
cmpl
xchg
das
push
dec
cmpsb
mov
notl
xchg
cmp
sbb
sbb
xchg
xor
sub
sub
mov
insl
adc
add
dec
push
xor
leave
or
push
dec
pop
out
mov
push
xchg
mov
leave
ret
cmpsl
cmp
mov
into
push
call
out
or
outsb
stc
sbb
adc
cli
add
sbb
mov
cmpsb
jle
ret
ficoms
dec
decb
fistps
jns
adc
fidivrs
mov
xchg
sub
loopne
push
add
push
in
lahf
in
cmc
sahf
dec
cmpsb
call
test
jg
and
sbb
jecxz
sbb
sub
pop
xchg
sti
jl
pop
stos
push
cmc
push
dec
test
flds
call
fisttpll
mov
ja
mov
cmp
pusha
mov
jae
jbe
lahf
push
fidivrs
fxch
test
pop
pop
push
std
push
hlt
inc
xchg
rcr
cli
adc
dec
push
divb
shlb
cmp
lods
shl
imul
mov
pop
loopne
jo
rcll
sbb
test
lar
mov
cmp
cmpl
ret
mov
out
jp
xor
pusha
in
orl
jbe
lcall
rcl
or
fdivs
fwait
rorb
out
mov
ljmp
sti
test
dec
cmp
jbe
je
and
and
mov
lcall
pop
idivb
cmpsl
fdivr
push
xchg
push
push
xchg
shlb
les
inc
jecxz
mov
dec
fwait
aad
mov
xchg
jecxz
shrl
and
xorl
pop
cwtl
mov
push
imul
out
outsb
clc
mov
popa
mov
dec
ljmp
and
xor
or
aas
rcr
push
icebp
outsl
xor
adc
aad
jno
inc
pop
or
subl
or
out
lds
fdivr
out
loop
mov
test
dec
cmp
bound
xor
dec
xor
dec
ret
ret
pop
xor
jns
enter
imul
xor
clc
xor
std
mov
mov
jne
imul
jo
scas
cmp
push
fwait
cwtl
xchg
cmp
push
jge
lret
std
xor
inc
lahf
out
imul
or
cmp
movsb
xchg
dec
ja
test
loop
mov
xchg
adc
notb
outsb
jbe
jmp
adc
in
aam
lods
loope
pop
add
cs
mov
in
call
sub
outsl
mov
add
mov
subl
dec
cmp
roll
jle
push
sti
ljmp
mov
push
jmp
and
neg
pop
mov
xor
cmc
lds
push
aad
cmp
push
dec
pop
mov
inc
push
adc
add
adc
push
or
cltd
gs
mov
call
and
mov
orl
jns
push
mov
imul
dec
mov
cmp
or
testl
add
in
dec
sub
es
cmp
insl
mov
jb
mov
out
sub
cltd
arpl
cmp
fisttps
clc
jg
jo
jae
jl
into
adc
or
pop
pop
out
arpl
sbb
into
push
pop
ret
insb
bound
popf
aam
sbb
jnp
aam
sub
lcall
insl
sbb
ja
adcb
cltd
add
dec
push
add
and
mov
pop
pop
rcrb
push
jecxz
jle
sahf
movsl
cmp
inc
jae
stos
jae,pt
aam
add
cli
fs
pop
mov
push
mov
dec
push
cld
sti
xor
sbb
mov
push
push
pop
sub
xor
dec
pop
js
in
ljmp
cld
call
cmp
iret
xor
dec
sub
sbb
imul
mov
testb
lds
bound
inc
les
jp,pn
icebp
shld
mov
or
mov
into
adc
fldlg2
sbb
push
call
hlt
jo
scas
imul
mov
stos
into
lahf
mov
ror
push
test
test
repz
mov
lea
sbb
cli
nop
clc
sbb
into
sbb
cltd
mov
push
stc
ds
or
jbe
push
out
mov
orb
es
rcrb
jbe
jecxz
dec
leave
or
movsl
mov
mov
inc
dec
jge
popf
jg
ficoml
sbb
push
adc
mov
cmp
jno
xchg
call
sub
add
clc
jl
in
or
cmp
ror
dec
repnz
dec
adc
out
mov
sahf
pop
enter
pop
movsl
cmp
xchg
push
leave
clc
nop
in
xchg
mov
adcl
filds
dec
pop
insl
pop
ror
clc
cwtl
int
out
push
fs
add
jge
mov
and
jg
popa
jp
outsb
inc
rclb
insb
and
arpl
repz
sbb
adc
decl
adc
jmp
cmpsl
jbe
lret
cltd
pop
xor
and
sarl
pop
cli
xlat
cmp
popa
sahf
xchg
into
mov
lea
jbe
sub
mov
sti
das
out
mov
out
xor
hlt
pop
ss
push
push
ja
setno
pop
add
push
andl
das
cmp
das
xchg
aas
cmc
ffreep
pop
scas
sbb
push
pushf
hlt
pop
shrl
loope
push
frstor
les
dec
out
jle
std
cmc
add
rcr
push
fsubs
push
lret
cli
std
jecxz
int3
js
test
loopne
out
pushf
sar
and
jle
xchg
shl
sub
adcl
or
loop
fnsave
mov
xor
hlt
mov
push
fidivl
shll
cli
dec
dec
lock
mov
mov
xchg
out
mov
dec
jecxz
mov
rolb
pop
sbbb
std
sub
cltd
fadds
xchg
add
int3
pop
sbb
or
lret
push
jle
pop
mov
les
mov
ss
aas
sbb
and
in
loopne
test
xor
xchg
push
fsubrs
popf
mov
rcrb
test
pop
push
push
seto
arpl
xor
xor
jecxz
ja
jnp
mov
jmp
sbb
gs
dec
adc
fsubs
mov
adc
sub
ds
push
push
cs
mov
push
popf
call
fwait
jne
push
cmpsl
mov
cmpsb
jne
insl
or
cmp
es
cwtl
add
push
lret
addl
ljmp
in
sub
cmpl
inc
nop
mov
adc
arpl
shr
adc
sbb
jle
aad
xchg
push
pushf
jb
mov
xchg
in
ss
sbb
arpl
cmpsl
dec
cmp
mov
add
mov
nop
in
es
mov
pop
mov
mov
mov
xor
enter
push
pop
xchg
sarb
neg
push
cld
dec
js
jns
lock
clc
adc
push
dec
loope
sub
fs
xor
add
pop
lock
test
fs
push
cwtl
lods
dec
push
xlat
push
repz
mov
dec
mov
dec
add
jbe
insl
aam
sbb
pop
in
test
sbb
jns
lahf
les
sub
push
lods
push
dec
adcb
stc
popa
ja
mov
xchg
in
mov
lea
adc
xchg
ja
adc
iret
adc
sbb
lret
test
inc
add
sti
shrb
push
sbb
rcrb
fs
mov
out
xchg
ljmp
or
sbb
in
fsubrl
iret
dec
nop
mov
inc
push
or
push
out
out
faddl
insb
leave
mov
push
push
dec
inc
xchg
movsb
fwait
mov
xchg
in
mov
inc
imul
cmp
in
jle
rcrb
mov
in
sahf
ret
mov
sahf
pop
cmp
jne
das
mov
cwtl
loopne
call
inc
popf
pop
jno
pop
xchg
jp
or
dec
inc
bound
test
mov
jb
dec
pop
or
and
nop
outsb
mov
hlt
mov
imul
cmp
sub
jp
dec
mov
push
and
pop
mov
in
pop
cmpsl
cmp
lods
mov
lahf
testb
add
pop
stos
in
rolb
mov
in
sub
lea
inc
imul
iret
xor
sahf
mov
adc
push
mov
out
fnstenv
insl
shr
aaa
in
xor
cmpsb
shlb
sbb
mov
into
es
js
call
mov
or
rcr
loope
call
dec
mov
mov
jno
stos
testb
lds
jae
and
lods
movsl
xchg
xchg
pop
lds
jg
jle
xchg
adcb
push
ret
or
sub
mov
arpl
mov
push
inc
add
nop
pop
imulb
notb
pop
sarb
je
jg
push
addr16
jne
jge
mov
push
jecxz
sarl
inc
sub
mov
fwait
add
scas
cli
push
push
jnp
cld
loope
mov
rcrb
xor
jl
imul
sub
jns
out
fwait
mov
jl
dec
cltd
lret
and
mov
out
add
mov
fs
aam
scas
inc
pop
in
adc
fcomps
push
nop
cld
cmp
idiv
mov
mov
fistl
mov
out
push
add
imul
pop
xchg
pop
fwait
out
inc
gs
punpckhdq
and
loope
lock
cld
pop
int3
std
inc
cmp
mov
bound
rcrl
sbb
js
jbe
je
inc
test
adc
mov
xor
icebp
adc
fs
xchg
xlat
jns
popa
push
xor
cli
mov
nop
jmp
rolb
daa
fidivs
mov
in
pop
ja
popf
ret
xchg
cmp
jnp
xchg
mov
dec
lret
xor
sbb
push
shlb
jo
cmp
cmp
add
addr16
sbb
outsl
mov
cmp
add
inc
fs
mov
adc
mov
ss
dec
in
push
and
mov
in
and
mov
cmp
jge
iret
xchg
adc
or
aaa
sub
xor
aaa
sub
push
out
arpl
into
push
pop
stos
pusha
fbstp
ret
mov
loopne
xor
insl
xor
push
cmp
mov
mov
adc
out
loop
jg
mov
shll
jp
pop
push
xchg
mov
nop
dec
mov
rcpps
push
out
xor
sbb
shlb
xlat
gs
jns
or
sub
pop
and
and
icebp
lods
mov
mov
jne
inc
add
idivl
mov
enter
mov
xor
sbb
xchg
es
adc
in
ss
cld
testb
in
sbb
ljmp
fadds
bound
cmpsb
xchg
push
cwtl
xchg
pop
lret
jg
sub
shlb
mov
dec
cli
call
mov
popa
loope
dec
scas
mov
lmsw
mov
mov
adc
dec
mov
cmp
jl
icebp
testl
int3
insl
sub
loopne
sub
xchg
bound
or
das
mov
fidivrl
clc
lahf
jo
push
mov
imul
pushf
dec
and
into
or
push
arpl
stc
or
sbb
xor
dec
cli
mov
mov
pop
adc
loop
cmp
xchg
adc
inc
push
pop
inc
mov
adc
xchg
inc
orb
inc
mov
cs
xrelease
mov
xor
mov
adc
adc
cmpsl
jno
inc
dec
ret
and
sub
insl
sahf
xchg
pop
push
pop
test
push
adc
in
cwtl
int
pop
leave
cmc
dec
in
push
xor
lret
adc
jg
aaa
daa
jne
or
xor
cmp
test
sti
inc
inc
mov
test
mov
push
add
test
dec
push
mov
addb
stos
sub
adc
sub
insl
push
and
cwtl
jns
xorw
insb
push
rorb
dec
insl
jl
ret
sbb
add
outsl
gs
push
push
fmull
in
sbb
push
cltd
push
in
leave
cmpsb
adc
cmp
mov
mov
xlat
imul
xor
shlb
cwtl
loope
and
roll
mov
pop
mull
xchg
cli
lock
jae
sbb
mov
pop
je
sahf
adc
call
pop
mov
aaa
sti
or
inc
mov
scas
je
mov
jae
mov
pop
push
in
jmp
dec
push
repnz
mov
mov
insl
pop
jne
mov
loop
rcrb
xor
push
pop
xchg
cltd
int
push
mov
or
jmp
fildl
movsl
and
sbb
mov
xchg
fisttpll
add
addr16
add
int3
and
cwtl
cs
adc
in
push
sub
pop
or
lock
cmp
pop
mov
jp
dec
push
fdivp
cs
bound
les
pusha
clc
dec
push
ss
in
mov
filds
decl
pop
movsb
outsl
je
mov
cmpsb
divb
jecxz
mov
loopne
xchg
mov
mov
daa
inc
or
cmc
mov
push
inc
inc
inc
cmp
cltd
xchg
inc
jae
mov
daa
stc
xchg
fwait
sub
or
aaa
mov
into
xor
cmp
sbb
fsubr
or
jl
fcoml
mov
je
mov
sub
jns
add
es
inc
fucomip
push
sbb
negl
fcmovnbe
and
jge
mov
cmp
xchg
ret
hlt
xchg
mov
and
xchg
push
ror
xlat
jb
scas
loopne
or
push
mov
pushf
ss
sti
pop
xor
xchg
push
cmp
clc
in
cli
xchg
lret
imul
stos
push
xor
pop
adc
jp
and
pop
inc
jl
mov
test
push
pop
shll
sbb
test
and
xor
bound
jmp
and
xchg
dec
js
push
lods
popa
in
into
out
sub
int
sub
sbb
pop
popf
jl
inc
inc
xchg
cmpsb
std
adc
out
loopne
iret
outsb
cwtl
cltd
into
pop
sub
push
sub
pop
jne
int
pop
or
mov
popa
inc
cld
jp
daa
mov
test
cmc
pop
dec
leave
imull
clc
dec
xchg
test
push
js
push
cmp
scas
sub
popfw
int3
push
inc
pusha
mov
add
jns
xchg
lods
daa
mov
insb
test
push
adc
mov
addr16
mov
les
rdmsr
stos
fwait
mov
xchg
mov
aad
pushf
mov
dec
mov
xor
sub
inc
mov
mov
and
lcall
fsub
frstpm(287
lock
cmpsb
mov
mov
mov
scas
jecxz
adc
in
mov
mov
lcall
fsubr
stos
ss
cmpsb
jne
test
inc
mov
shrl
addr16
adc
pop
rep
cmpsl
or
sub
xchg
out
divb
rorl
push
lock
fisttpll
ret
in
jnp
mov
aam
shlb
arpl
add
insl
imul
sbb
and
sub
mov
xchg
and
sub
cmp
cmp
push
and
out
divb
mov
fwait
out
xlat
mov
cmp
xlat
shlb
bsf
cmpsb
adc
rorl
dec
adc
ds
ljmp
repz
or
in
shl
jle
out
outsb
lea
cmp
jmp
sub
jae
insb
shrl
jl
mov
mov
jg
and
and
xchg
and
dec
mov
les
daa
or
cmpsb
call
sti
xchg
in
push
repz
or
mov
xchg
cmovnp
sbb
cmp
pop
imul
adc
and
filds
out
pop
loop
lcall
cmp
adcb
outsb
je
fs
or
scas
xor
push
test
shlb
into
inc
enter
mov
jp
pop
xchg
not
or
jnp
push
je
loop
bound
lds
pop
xchg
xchg
imul
sub
mov
xor
dec
xchg
cwtl
or
negl
repz
aam
mov
or
movsl
aad
mov
mov
test
fildl
aad
jg
sub
dec
gs
jmp
xchg
inc
jnp
jb
test
out
push
pop
cmp
sbb
adc
iret
and
aaa
inc
mov
mov
mov
loopne
mov
and
ds
cmp
jle
and
scas
xor
mov
and
jae
mov
jns
shlb
pushf
out
xchg
sub
clc
pusha
mov
sub
adc
inc
fiadds
jmp
in
sbb
push
pop
and
cli
scas
xchg
fcomps
ja
sbb
fs
maskmovq
imull
shld
pop
lds
lds
push
pop
dec
sbb
out
into
scas
nop
sbb
data16
into
dec
loop
mov
mov
mov
xor
push
jecxz
cltd
lds
xchg
inc
mov
push
test
mov
loope
das
jle
repnz
sti
subl
negl
cmpsb
inc
bound
add
cmpb
cmpsb
add
icebp
rcrb
inc
sub
ret
fcmovu
jo
add
lret
testl
ficompl
data16
addr16
mov
cmp
lock
setle
cmpsl
out
adc
lds
scas
adc
and
stos
cs
push
cpuid
push
dec
out
mov
lds
jmp
idivl
cmc
rcll
or
jge
lea
bnd
aam
sahf
push
lcall
or
xchg
lret
les
ds
pushf
push
mov
shrb
xchg
mov
lret
pop
rcl
mov
xor
xchg
mov
push
aas
sbb
test
pop
mov
mov
and
out
shlb
data16
scas
pusha
cmp
scas
fsubs
sub
pushf
arpl
ja
lock
xchg
std
inc
push
jmp
jo
pop
test
test
jo
jo
loop
xor
js
fsts
jg
jle
mov
lods
mov
pop
fadd
and
lock
in
push
aas
mull
loopne
cmp
pop
stc
into
scas
add
stc
arpl
jns
inc
cmp
pop
cmp
lcall
jo
jns
movsl
lcall
cmpsl
ret
or
pop
lret
sbb
add
je
mov
add
sbb
movnti
fmull
push
xchg
add
lret
cs
incl
inc
push
sbb
cmp
sbb
add
xchg
les
add
cld
das
cmp
lock
inc
in
jae
xor
inc
test
xchg
pop
es
testl
nop
sbbl
sub
jmp
int3
outsl
jno
repz
imul
clc
mov
repnz
adc
cmp
xchg
push
push
mov
ljmp
mov
mov
mov
imul
push
mov
inc
inc
loope
xchg
mov
and
lahf
sbb
aaa
cltd
sbb
fldln2
mov
dec
jl
mov
into
inc
shlb
cld
xlat
popf
mov
inc
xor
and
orb
adc
mov
jns
lret
jnp
popa
xor
cmpsl
inc
add
jb
insl
popf
lcall
adc
popa
adc
pop
adc
icebp
aad
adc
sahf
mov
push
int3
adc
mov
lret
cmp
adc
push
and
sbb
adc
lock
ficoms
daa
stos
arpl
and
aas
dec
mov
lret
dec
pop
mov
cmpsb
and
or
add
pop
popa
cmp
out
dec
jb
dec
xor
jp
jno
icebp
mov
clc
adcb
adc
dec
mov
cwtl
test
mov
stos
mov
cmc
sti
and
mov
pushf
fsts
ljmp
jbe
pop
add
push
lods
jbe
js
adc
repnz
sub
cmpsb
sbb
xchg
cmp
or
cmp
and
adc
imul
sti
test
addr16
ret
inc
subl
or
adc
test
mov
pop
fstps
aaa
mov
add
testl
pop
les
enter
pop
rolb
and
fs
cwtl
mov
clc
scas
je,pn
sbb
push
int3
and
jle
mov
pushf
lahf
mov
xlat
cwtl
in
mov
push
xor
imul
fistpl
shrl
and
fstpl
add
mov
cli
es
jae
mov
loop
sbb
ljmp
jne
roll
adc
into
mov
mov
mov
dec
xor
cmpsb
test
push
cld
pop
fpatan
pop
cmpsb
std
pop
push
fldenv
xchg
jmp
fmulp
stc
popa
into
mov
sub
jg
fwait
adc
aad
sti
jb
xchg
aam
imul
jle
loop
notb
faddp
and
fcompl
cmp
add
scas
inc
push
sub
sbb
and
pop
mov
jo
ss
sbb
sub
jae
cld
sbb
mov
mov
xor
popa
sbb
inc
pusha
movsb
enter
add
mov
mov
in
out
inc
adc
pop
sbb
sub
dec
enter
pop
xor
faddl
sbb
imul
mov
dec
pop
or
fisubs
xchg
and
xorl
xor
add
cmp
cli
add
es
pop
add
fsubrs
rcll
das
adc
push
and
xchg
insb
jp
push
test
inc
inc
push
pop
shl
scas
into
int
loope
pusha
loop
popf
mov
rcrl
sbb
sbb
lcall
cmp
cltd
fdivr
cmp
push
pop
hlt
and
imul
mov
mov
jp
addb
ret
inc
cwtl
jo
das
lds
imul
lods
dec
outsb
shrb
inc
rol
xor
pushf
sbb
pop
push
pop
outsl
mov
xor
repnz
and
pop
mov
mov
addr16
enter
mov
inc
sarl
push
xlat
aam
sti
lret
mov
inc
mov
aaa
sbbl
push
pop
push
setbe
das
aam
pop
xor
jge
mov
repz
pop
xor
adc
shr
jnp
adc
cwtl
fisttpll
test
test
mov
ret
pop
jns
mov
icebp
mov
xchg
std
push
push
lret
cmp
lods
divss
jmp
pop
sahf
mov
jp
sbb
sub
inc
aam
cs
xchg
aad
pushf
out
test
cmp
dec
addr16
pop
pop
sub
fcompp
sti
pop
add
jae
rclb
jl
pop
mov
rclb
jb
std
scas
sbb
xchg
icebp
mov
and
cltd
jecxz
xor
sahf
jo
int3
inc
xchg
xchg
or
cld
cs
les
cmc
cmpsb
mov
jns
inc
jle
add
popa
into
scas
movsb
cmp
push
lods
dec
inc
inc
lods
imul
pop
int
and
cmp
in
pop
adc
scas
fldl
adc
mul
leave
dec
mov
arpl
lahf
fbld
add
lods
mov
mov
mov
mov
cs
lcall
lret
aad
and
fstps
stc
je
pop
stc
stos
xchg
in
addr16
mov
in
pop
xchg
test
cltd
cmc
cwtl
je
sbb
notl
fidivrs
fwait
or
outsl
inc
xor
pop
sub
roll
xorl
loope
je
adc
sub
add
push
jb
dec
sub
cmp
push
daa
stos
xor
sbb
mov
ja
incl
orb
sbb
imul
inc
decb
xchg
sub
and
xchg
xchg
movsb
js
sbb
adc
in
lea
sub
sub
aas
pop
cmp
mov
in
cmp
and
push
or
stos
clc
mov
cltd
cmp
mov
sbb
out
push
scas
ds
mov
call
cmp
clc
adcb
sbb
and
cmpsl
mov
mov
or
and
fsubrs
rclb
or
clc
loop
in
es
test
lods
dec
ss
lcall
repnz
sar
jnp
int3
xor
mov
push
cmpsb
dec
hlt
add
adc
data16
inc
adc
ds
jmp
mov
insb
mov
or
pop
pop
cmp
sbb
pushf
xchg
xchg
jns
call
lds
iret
xor
mov
popa
dec
rcr
sub
mov
add
lods
jb
or
cmp
mov
jae
pop
frstor
pop
jno
xchg
xor
lock
inc
push
fdivl
shrb
pusha
filds
imul
mov
repnz
ret
mov
test
scas
addl
sbb
adc
inc
cmpsb
and
mov
ljmp
aad
xchg
pop
xchg
adc
call
leave
cmp
sbb
stc
jnp
jno
dec
dec
rolb
aam
pushf
push
jb
call
add
mov
cmp
or
mov
iret
mov
and
xor
fstpt
aam
in
and
cmc
outsb
jbe
addr16
xor
push
push
into
dec
push
cmp
mov
mov
fimuls
bound
in
daa
jg
add
lods
aam
and
and
inc
pop
test
shlb
mov
xchg
in
push
cmp
dec
inc
movsl
test
and
or
and
fmuls
sbb
fsubs
adc
cmp
and
fnstenv
xchg
dec
fwait
xor
lcall
xchg
in
push
dec
xor
es
mov
inc
xchg
leave
mov
shrl
adc
and
shl
fucomp
lods
mov
push
pop
sbb
rcl
into
xlat
lds
cwtl
sbb
mov
movsb
aam
pop
jno
loopne
jp
int
out
mov
out
sbb
sbb
mov
jne
lahf
mov
fisubl
cld
xorb
cwtl
aad
andl
std
in
stos
je
and
fcomp
sahf
sub
addr16
jns
dec
cmp
fadds
jp
fs
mov
mov
lods
andl
test
cmpsl
cmp
push
inc
fcmovne
int3
mov
cmp
mov
mov
mov
or
jmp
mov
in
inc
sti
xlat
push
mov
sub
bound
outsl
xorb
jl
outsb
and
out
repnz
cmp
scas
mov
ja
popa
push
and
xchg
test
mov
add
jecxz
inc
xor
addb
mov
cs
das
and
or
or
arpl
aas
addr16
push
mov
lret
cli
cmpsl
pop
inc
int
das
xchg
gs
sarb
in
mov
fmul
sub
into
cs
mov
sbb
repz
add
orl
xchg
xorl
push
popa
push
sbb
adc
leave
dec
cli
pop
imul
inc
and
or
jl
sbb
std
lcall
popa
add
loop
ss
popa
std
and
jg
ja
cli
cli
mov
adc
jge
leave
cwtl
test
fnsave
ret
xchg
mov
cmp
mov
dec
insl
imul
pusha
jb
dec
mov
addl
jle
and
clc
lret
shrb
mov
in
sarl
fwait
jecxz
adc
xor
mov
mov
sub
xchg
mov
add
les
cmp
in
pop
data16
in
sbb
scas
out
lods
adc
inc
push
mov
add
push
shl
gs
fsubrs
loop
mov
imul
addr16
jmp
or
das
lods
push
xchg
outsl
mov
cmp
adc
and
add
adc
mov
repnz
adc
and
inc
jecxz
pop
jae
mov
stc
adc
pop
or
and
jl
pop
mov
in
addr16
mov
int
mov
xchg
in
popa
jnp
mov
pushf
and
or
fmull
fldcw
sub
inc
cmp
fldl
loope
fistps
int3
pop
inc
mov
stos
mov
jl
push
insb
mov
insb
and
jnp
imul
lea
sbb
jl
push
sbb
xchg
ret
nop
cmpsl
lods
sub
cmpsb
sbb
or
mov
test
cld
pop
mov
ljmp
jge
cmc
nop
in
aas
jb
popf
ljmp
repz
enter
int
lods
cs
cli
movsb
inc
xor
push
dec
pop
jecxz
add
and
sbb
fstpl
xor
push
jmp
sub
add
xlat
lret
and
push
or
mov
test
bnd
inc
mov
test
pop
sbb
mov
add
inc
cmp
jl
xor
push
sub
ds
pop
test
movsb
jae
xor
repz
pop
ret
push
dec
jbe
sbb
xor
mov
adc
pop
jmp
mov
mov
test
dec
insb
mov
lret
lods
and
lret
mov
push
jmp
fstpt
cli
cmp
jne
and
push
xor
roll
bound
mov
push
mov
daa
imulb
adc
fmul
mov
xchg
imul
mov
dec
call
mov
add
pop
pop
cld
out
fwait
pop
ds
ja
or
pop
xor
scas
add
mov
mov
or
mov
das
fwait
stos
adc
les
push
add
and
mov
testb
lods
mov
fdivrl
shr
cmp
adc
mov
add
sbb
scas
negb
movsb
adc
mov
jg
icebp
dec
and
push
dec
cmp
out
lods
push
adc
rcrb
mov
stc
adc
mov
sbb
rcl
jns
lds
add
fld
cmp
mov
dec
inc
adc
aas
push
aad
jae
xor
gs
add
and
lods
and
daa
pop
in
lods
cld
ss
push
and
dec
loope
cli
sarb
and
ficoms
xor
lahf
xor
add
pop
hlt
jnp
rol
js
repz
push
data16
sub
lret
jns
cmp
mov
fsub
add
push
mov
scas
dec
loope
stos
push
iret
jne
and
adc
lods
aad
test
fildl
push
inc
fstpt
stc
sbb
xchg
pop
mov
jne
xor
adc
xlat
xchg
pop
mov
scas
push
mov
xor
stc
xchg
clc
xlat
icebp
push
shll
dec
sbb
call
adc
mov
pop
loopne
in
imul
stos
lods
insb
sbb
or
ds
push
dec
mov
clc
test
inc
imul
mov
ljmp
movsl
dec
int3
cmp
sti
in
adc
inc
addr16
cmp
jbe
popa
mov
add
mov
and
or
fwait
in
pop
add
sbb
jnp
call
and
xchg
push
ret
adc
and
mov
repz
cmp
and
adc
pop
mov
aas
xchg
mov
rcrb
mov
les
les
jg
jl
sti
mov
dec
inc
ss
mov
popl
adc
push
jb
rcll
int
call
cs
jmp
add
int3
fwait
int
std
and
push
test
mov
aam
ficoms
mov
jmp
in
mov
cmp
or
pop
dec
sarb
inc
stc
cli
pop
and
push
sbb
sub
inc
push
mov
mov
loope
mov
jge
dec
mov
sbb
sahf
sahf
or
pop
sbb
int3
sub
push
mov
mov
mov
shl
loopne
add
outsb
fsubrl
dec
add
mov
ja
jp
test
ljmp
xchg
std
xor
cmpsb
les
xor
int3
mov
adc
inc
inc
outsl
mov
insl
out
aaa
stos
add
pop
jno
mov
add
loopne
ret
cmpsb
inc
inc
call
repnz
mov
cli
shrl
fsubrp
mov
jmp
mov
and
xchg
sub
imul
fstpl
mov
jbe
jo
or
mov
in
mov
mov
jo
ja
fsubl
shll
popa
pop
mov
or
push
dec
insb
mov
add
data16
outsb
imul
sub
adc
push
cmpsb
rcrl
cmp
int
adc
mov
es
and
cwtl
stos
movsb
cmpsl
add
jg
fwait
sbb
xchg
test
cmc
jge
sub
test
aam
popf
jecxz
imul
out
push
jne
mov
push
sbb
inc
add
fisubrl
in
leave
dec
push
push
in
orl
sub
jg
mov
repz
shrb
mov
and
lea
imul
ficoms
cli
les
and
inc
aas
add
xor
inc
fsubrs
cs
xchg
or
adc
sbb
push
aam
inc
mov
jae
in
push
adc
cmp
and
lods
cwtl
sub
adc
out
mov
cmp
fldt
xorb
lret
test
push
jae
xchg
or
mov
adc
cs
inc
mov
scas
pop
mov
mov
add
sbb
add
mov
inc
pop
roll
pop
and
xlat
in
add
pop
pop
ret
ss
sbb
in
mov
lahf
aam
shll
dec
cmp
mov
popa
push
sbb
jmp
sbb
inc
test
adc
fiadds
aas
repz
aas
cmp
popa
and
imul
mov
and
add
xchg
mov
scas
xchg
int
rol
dec
movsb
pop
ret
test
xor
pusha
lea
jp
mov
int3
mov
mov
aas
bound
dec
xchg
fstps
arpl
int3
stos
dec
and
test
gs
xchg
stc
int
xor
adc
mov
fdivl
inc
pop
add
pop
pop
pusha
leave
inc
aas
divl
jp
orb
cmp
arpl
int
pop
jno
stos
inc
mov
gs
data16
sbb
je
push
scas
jg
push
stos
sahf
fmuls
mov
pop
mov
out
mull
mov
leave
fimull
jl
xchg
fldt
dec
aad
mov
sti
test
pusha
pop
inc
mov
pop
sub
out
add
rcrl
sub
enter
inc
js
xor
sub
dec
cwtl
mov
outsb
mov
and
popf
shrb
repz
xchg
sub
sahf
push
mov
push
sbbl
sbb
push
sub
daa
add
mov
pusha
xchg
push
mov
sub
cmp
and
mov
mov
out
in
rclb
pop
add
xor
ficompl
ljmp
mov
xorb
and
push
sti
dec
sarb
popl
sbb
out
inc
out
popf
out
loope
cmp
lods
xor
push
or
sahf
and
push
push
xcrypt-cfb
cmpsl
out
and
mov
mov
or
pop
jne
sub
jo
aad
pushf
stos
cmp
aas
inc
mov
out
ficoml
push
insl
cltd
hlt
dec
or
mov
dec
movsl
dec
popf
scas
cmpsl
inc
or
jmp
sahf
in
dec
mov
inc
out
xor
jnp,pn
sub
mov
xchg
mov
pop
mov
popa
popf
dec
subl
jae
iret
test
mov
ljmp
addl
jle
mov
or
popa
push
push
idivl
popf
pusha
repz
test
pushl
cmp
inc
add
xchg
cmpsb
mov
inc
cmp
outsl
mov
sti
inc
sbb
test
das
loopne
popa
mov
sbb
pushf
pop
or
jecxz
mov
leave
out
sub
pop
xor
cmpl
xchg
mov
fisubl
ret
cmp
inc
xchg
loopne
pop
fcompl
inc
lock
sbb
stc
in
add
lods
lods
push
jmp
repnz
hlt
cs
pop
jbe
mov
mov
sub
fucomip
cmp
and
cltd
dec
call
dec
push
jae
les
mov
je
mov
or
cmovno
shlb
je
adc
repz
pop
icebp
push
loop
bound
pop
outsb
push
cwtl
and
sbb
call
leave
rcll
hlt
jnp
pop
scas
pushf
and
addr16
sbb
sub
lock
inc
xchg
pop
or
inc
and
add
jnp
dec
cltd
dec
mov
push
in
push
push
add
push
rcrb
dec
lahf
mov
lds
bound
sub
add
loop
jmp
xor
in
je
int
mov
cmc
add
repnz
fisubs
loope
lret
push
mov
pop
inc
mov
push
jl,pt
aas
lea
inc
mov
ret
cwtl
fsubl
mov
gs
push
cmp
pop
jle
jne
stc
imul
shll
add
jb
mov
test
inc
insl
jo
mov
lret
cmc
pop
into
sbb
out
xchg
arpl
cmpsb
lods
imul
add
cmp
mov
jge
mov
jno
pop
mov
mov
cmpsb
loopne
mov
test
sub
popa
add
cmpsb
push
imul
add
inc
aaa
xchg
push
dec
mov
test
sahf
out
pop
ljmp
add
mov
xor
dec
xchg
fnstenv
out
sbb
push
testb
adc
rorl
push
or
sti
xchg
cltd
fstl
into
sub
ret
in
popa
pop
inc
xchg
cld
inc
cli
sub
jno
inc
daa
jno
int3
jp
mov
push
mov
iret
outsl
mov
xchg
push
nop
stc
inc
ret
je
sti
pop
sub
cmp
pop
cmpsb
inc
adc
inc
xor
sub
adc
xchg
jecxz
pop
fimuls
cmp
aaa
cmp
gs
xchg
rcr
je
push
loop
sbb
js
arpl
xor
jmp
into
inc
add
add
xchg
stc
mov
mov
dec
loope
and
xchg
sub
or
sub
je
lds
push
in
bnd
and
ret
jbe
mov
popl
sbb
pop
push
dec
cmp
dec
loope
jb
ficoms
cmpsl
sub
jnp
pop
inc
dec
pmaxsw
cltd
cs
cmpsl
push
cli
dec
sbb
stos
rcl
scas
add
xchg
stc
jae
stos
loop
mov
int
divl
xchg
test
mov
xchg
adc
loop
and
adcb
shrb
popf
push
jl
jecxz
ficoms
mov
mov
dec
outsl
dec
mov
cmc
mov
loope
sub
xchg
xchg
mov
je
xor
test
clc
scas
sahf
inc
sahf
test
icebp
push
clc
cmp
sub
adc
adc
aam
cmp
cmc
hlt
lcall
stos
jge
inc
mov
adc
iret
add
push
sbb
xlat
pop
aam
int
fldl
jnp
in
in
sahf
test
pop
jns
ljmp
and
je
testl
jle
sbb
out
addr16
out
push
imul
push
jb
loopne
cmp
fidivl
mov
test
pop
mov
xor
sub
icebp
lods
roll
push
adc
cmp
bound
sub
lahf
push
aad
icebp
xchg
daa
sbbl
int3
leave
divb
jge
pusha
dec
jo
fildll
fwait
shll
cmc
mov
add
rolb
cmp
ds
mov
xchg
pop
adc
aad
movsb
dec
movsl
or
pop
lds
lods
xor
jo
fildl
rorl
cmpsb
loope
cmp
xor
cmp
xor
repnz
out
inc
je
test
sbb
fisttpl
pop
pop
nop
push
movsl
test
sbb
ja
nop
adc
fstpl
jl
xor
test
repz
fisubs
add
mov
testl
dec
or
sub
pusha
adc
scas
mov
movsl
pop
lahf
push
mov
gs
js
jns
out
jmp
sub
insb
pop
jl
sahf
sub
lds
aad
mov
mov
adc
stc
inc
push
mov
js
inc
jge
xor
push
lock
push
xchg
leave
sbb
nop
aam
adc
mov
nop
scas
push
popa
jmp
sti
mov
jle
mov
in
push
leave
mov
popl
mov
and
push
xor
inc
stc
cwtl
adc
pop
mov
and
vmaxsd
insb
gs
mov
dec
dec
sub
cld
ja
out
push
mov
lock
in
add
dec
pop
push
push
sub
call
jnp
ljmp
dec
arpl
pop
and
mov
mov
aad
xchg
outsb
xor
mov
scas
mov
sbb
sahf
gs
jnp
cmp
jae
pop
popa
pop
and
adc
pop
add
mov
ja
cmc
push
or
aas
mov
jecxz
sbb
inc
and
int3
xor
inc
jp
inc
orl
mov
arpl
jns
jne
test
cmp
or
ds
je
xchg
aaa
cli
fcoml
cmp
sub
subb
into
loope
inc
enter
lcall
cmp
pusha
outsb
xchg
fisttps
push
test
in
leave
aas
add
out
aaa
cmpsl
ffreep
add
push
and
movsb
out
xchg
sbb
ret
pop
mov
push
mov
je
mov
cwtl
je
xchg
xchg
mov
out
in
imul
std
inc
mov
sbb
dec
adc
lret
leave
dec
xchg
fisttps
jno
cmp
push
imul
cltd
push
and
rolb
out
dec
mov
or
cmp
fld
cmp
repnz
enter
ficomps
and
mov
inc
fisubrs
xchg
push
mov
inc
push
pushf
imul
int3
push
repz
outsb
jbe
insb
ret
sbb
push
mov
inc
mov
aaa
insl
mov
or
adc
xor
pushf
cli
jl
xor
jmp
popa
adc
lcall
inc
sbb
sbb
sarb
pop
imull
fildll
sbb
xchg
add
mov
inc
pop
leave
sbb
xchg
xor
dec
mov
push
cld
repnz
dec
add
cld
imul
sahf
sub
std
cli
fucomip
repz
pop
cmc
inc
pop
add
mov
mov
jb
inc
fsubrs
repnz
mov
or
outsl
sbb
lret
lahf
push
inc
les
ss
in
xchg
jb
pop
push
out
repz
mov
mov
push
cmp
in
mov
dec
adc
pop
lret
xchg
cli
xlat
lret
dec
sbb
dec
inc
mov
sub
mov
int3
out
sbb
jl
pusha
testb
or
data16
enter
movsl
and
lds
push
mov
ljmp
push
ja
jge
dec
aas
jb
insb
testb
adc
fistpl
mov
cmp
push
fildll
push
xor
inc
push
lahf
loop
pop
mov
clc
push
js
dec
add
add
mov
mov
dec
jp
outsb
lret
mov
and
add
adc
idivb
loop
addr16
push
mov
jp
mov
cmp
std
fs
test
fnstenv
gs
jle
aad
cli
rolb
rcrb
sub
clc
cmp
adc
ret
faddl
push
cmc
lds
out
cltd
adc
cli
push
popf
in
mov
push
addr16
or
jno
cmp
leave
adc
gs
jmp
sbb
mov
sbb
sub
pop
out
arpl
adc
or
shlb
cmc
or
jecxz
dec
pop
xor
iret
xor
inc
inc
andb
mov
lds
cwtl
je
and
push
jmp
jmp
cltd
fwait
xor
or
sbb
mov
mov
aam
jp
pop
fdivrs
fsubr
iret
pop
jbe
xor
jno
xchg
sub
pop
sbb
xchg
ror
out
dec
cli
aas
sbb
sahf
inc
push
ret
cmpsl
or
and
xchg
ror
mov
je
es
mov
cli
jg
push
mov
dec
adc
iret
adc
xchg
push
xor
jp
mov
xor
enter
mov
sbbl
push
fs
push
cmc
mov
xor
xor
jmp
cld
push
jg
xlat
mov
dec
sbb
repnz
call
push
mov
fcoms
cmc
mov
push
cmpb
mov
insb
and
decl
mov
xchg
bound
cwtl
iret
jge
xor
xor
push
mov
into
pop
icebp
mulb
lea
xchg
icebp
mov
imul
sbb
sbb
jae
inc
sarb
lds
sub
idivl
iret
test
pop
je
cli
push
rolb
sub
mov
adc
xor
fistpll
push
leave
test
call
mov
in
cli
push
jmp
std
push
scas
fwait
pushf
leave
int3
in
cli
xchg
sub
cmpsl
mov
loopne
adc
push
or
ljmp
mov
enter
ja
sub
ljmp
int3
insb
mov
jae
jle
dec
lahf
dec
push
dec
ljmp
mov
lahf
cmpsb
cmp
loop
inc
inc
loope
rol
repnz
xchg
and
std
insb
dec
cli
push
movl
push
and
in
jbe
ret
scas
pop
inc
out
inc
sahf
mov
xor
stc
inc
mov
in
pusha
pop
bound
sub
into
ja
test
sbb
decl
add
xor
pop
inc
cld
mulb
jb
insl
mov
popa
js
clc
sub
adc
insl
sbb
cmc
xchg
bound
mov
les
xor
scas
test
mov
fdivrl
cmp
ds
movsb
mov
sbb
sbb
mov
pusha
or
mov
jle
divb
jbe
ret
or
jmp
stos
fidivrl
fstps
clc
icebp
cmp
cltd
pop
mov
out
jbe
inc
adc
dec
push
popa
or
into
sbb
pop
popf
lea
shlb
mov
mov
mov
inc
jle
push
ucomiss
add
cmp
mov
pop
mov
fsubrl
inc
dec
test
pop
movsl
icebp
sbb
into
sbb
adc
popf
mov
int3
dec
lds
outsl
cmp
lret
daa
mov
ficompl
xchg
or
enter
pop
jl
sti
das
ret
pop
jecxz
sub
inc
ljmp
inc
out
enter
andl
imul
aaa
in
aas
rcrb
xlat
ss
pop
dec
adc
add
adc
arpl
cmp
clc
inc
cmp
nop
jg
leave
inc
enter
pop
cmp
mov
int3
faddl
sub
call
or
repnz
pop
movsb
es
dec
mov
push
mov
xor
lret
lock
repz
and
push
test
addb
sti
insl
jg
mov
in
stc
daa
into
dec
scas
and
les
mov
xchg
xchg
xor
push
and
std
jl
shll
xor
enter
aas
pop
jne
icebp
inc
adc
cmp
xchg
pop
inc
dec
xchg
jmp
bound
outsl
adc
push
adc
push
daa
jno
push
pop
aad
xchg
xchg
push
cli
lahf
ss
mov
dec
stos
and
mov
ljmp
mov
push
push
mov
mov
pop
andb
cli
mov
sbb
pop
pop
add
mov
xchg
inc
jmp
jae
mov
add
daa
push
rolb
jae,pt
sahf
into
mov
fidivrl
sub
in
jae
jecxz
adc
cld
mov
inc
enter
xchg
ffree
jnp
cmpsl
dec
sub
popf
add
mov
cltd
jl
mov
out
sub
sub
inc
repz
in
add
and
outsb
push
xchg
shll
mov
loop
xchg
pushf
test
lret
cmpsl
test
addl
push
into
andl
jp
adc
jnp
sub
es
lds
push
pop
cmp
or
nop
mov
icebp
arpl
sub
jbe
stos
pop
shr
lret
add
lods
fidivs
cmp
xor
pop
adc
out
ret
iret
mov
cli
mov
shlb
push
addr16
aaa
loop
std
icebp
dec
gs
hlt
xchg
loop
pop
xchg
dec
fdiv
aam
jo
test
or
inc
ss
shrl
mov
push
out
jno,pt
pushf
mov
dec
cmp
push
repz
sahf
xor
mov
ret
adcb
xor
xor
shll
add
xchg
repnz
jmp
int3
xor
cmpsb
lock
ret
stos
jle
xchg
test
and
pop
aaa
dec
jne
mov
mov
and
test
pop
or
and
in
mov
jmp
sbb
sub
xor
mov
push
in
push
rcrb
dec
outsl
mov
push
pusha
push
das
ret
sub
jno
ficoms
sub
iret
adc
outsl
pop
call
insb
iret
in
inc
fcmovu
jle
jno
loop
cmp
mov
mov
or
leave
dec
xorb
out
stos
cmp
adc
js
lods
testb
sub
sbb
lock
dec
xchg
popa
or
shl
mov
js
cmp
xchg
xor
push
or
pop
inc
inc
std
lahf
loopne
jb
xchg
push
sub
sbb
inc
adc
lret
add
sahf
or
sub
mull
push
mov
in
jge
dec
cmc
divb
or
xchg
and
and
jo
imul
mov
int
rorb
andb
xchg
pusha
add
lahf
push
inc
test
shll
jg
jg
mov
aam
icebp
dec
xchg
push
test
scas
jae
xor
pop
addr16
xor
mov
sbb
mov
cmpsl
popa
pop
mov
mov
xchg
xor
pop
dec
mov
inc
in
xor
mov
jmp
inc
jns
call
jae
pop
aam
xlat
loop
sbb
insl
push
imul
mov
xchg
outsl
in
pop
xlat
rcrl
iret
dec
sbb
fldcw
ds
and
dec
sbb
jno
lret
adc
sbb
sahf
fidivrl
cli
rolb
fucomi
xor
xchg
lcall
sbb
scas
xlat
cld
jl
push
mov
shlb
pop
xor
jmp
xchg
out
popa
fs
ljmp
adc
mov
mov
dec
jg
pop
dec
mov
sub
sub
movsl
sbb
and
cmp
mov
fadds
in
add
xor
jno
xlat
cwtl
pop
inc
js
or
aaa
cli
rolb
rcrb
test
clc
pop
xor
push
arpl
pop
lsl
push
sbb
or
out
or
inc
cmp
cmp
sub
fstps
push
xchg
int3
jbe
int
jnp
bnd
mov
mov
and
pop
rol
add
adc
std
mov
fmull
cwtl
or
inc
xchg
lea
fistpll
rsm
call
lods
cs
mov
cmpsl
sbb
xchg
ja
fsubp
inc
into
movsb
cltd
adc
mov
sub
xchg
xchg
jle
outsb
std
sbb
shrb
mov
test
inc
mov
jle
pop
add
cmp
pop
push
push
ret
sub
fiadds
and
insb
dec
add
iret
sub
xchg
lcall
mov
popa
lds
out
push
iret
cwtl
mov
loop
xchg
xchg
adc
mov
movsb
sbb
mov
dec
mov
shll
nop
cld
filds
leave
push
dec
fidivrs
and
or
adc
jb
jecxz
dec
test
cmp
push
lods
out
lcall
adc
mov
icebp
insb
stos
test
test
and
das
lea
outsl
add
rolb
push
adc
loop
add
das
cwtl
xor
je
lcall
das
sbb
fnstsw
cmp
push
fs
push
test
dec
pop
jbe
jecxz
inc
insb
sbb
cmp
sub
sti
loope
mov
shlb
mov
pop
cs
add
clc
and
add
stos
sbb
int
xor
jno
or
jg
je
xchg
cmpsl
in
ljmp
or
xlat
push
sbb
ret
lret
mov
decb
das
cmc
push
lret
cmpb
sahf
jecxz
es
inc
cmc
fldenv
dec
or
jb
shrl
test
insl
loope
push
cs
mov
pop
pop
out
sub
jne
call
dec
add
fcomi
pop
sub
decb
dec
mov
jle
cmp
sbb
loop
scas
adc
int
repz
call
mov
pushf
dec
lret
lock
andl
xchg
dec
repz
stos
fsubrs
insb
in
fwait
mov
pop
lahf
mov
pmovmskb
jno
mov
sbb
pop
out
fiadds
and
mov
sub
xor
stc
mov
dec
das
bound
lods
adc
jae
dec
or
fwait
or
add
insb
or
cmp
clc
sbb
shr
inc
idivl
mov
mov
or
andb
add
inc
shlb
or
mov
sub
mov
leave
aaa
insb
jl
mov
mov
dec
add
push
pop
pop
cmc
ret
or
push
jle
into
dec
popf
cltd
stc
sbb
int3
movsl
xchg
pop
aas
xchg
ljmp
in
imul
or
loope
idivb
jmp
stc
lods
mov
fadds
push
pop
sti
fs
test
mull
or
out
jne
test
sti
out
mov
mov
popa
gs
pause
mov
mov
pop
ss
push
cs
lds
add
mov
test
inc
inc
cmp
sub
data16
aam
dec
xchg
sub
jecxz
xchg
add
int
mov
mov
push
cwtl
jae
xchg
int
mov
outsb
xor
and
bound
lcall
dec
int3
movsl
ljmp
xchg
jmp
fwait
arpl
or
and
test
adc
mov
out
dec
in
aad
sbb
push
cmc
aaa
shlb
xchg
or
adc
xchg
xorb
mov
rolb
lret
jmp
stc
xchg
xor
icebp
fnstenv
aad
adc
fisttps
add
loop
adc
pop
fwait
pop
and
mov
push
pop
sbb
and
xor
roll
push
mov
out
fwait
ret
insb
lret
push
bound
cmpb
add
stc
or
mov
jns
loope
mov
aad
out
jne
mov
pop
push
scas
inc
pop
sbb
jg
pop
xchg
es
iret
jae
je
in
inc
jno
mov
xor
push
std
mov
inc
ss
or
inc
fisubl
mov
mov
ret
cmp
xor
pop
or
out
push
ds
mov
int
adc
push
cmpsb
push
xchg
stos
mov
fwait
cmpl
and
push
lret
fstpl
xchg
pop
mov
lea
jb
mov
jno
lods
popa
hlt
lret
xchg
xor
or
aad
ss
scas
stos
sub
in
push
sbb
adc
lea
dec
mov
pop
and
sub
xor
fadd
aas
sub
and
xchg
lret
jno
das
ss
out
hlt
mov
mulb
sarl
mov
or
pushf
ljmp
enter
cmc
mov
add
popf
out
xor
pop
dec
fstps
xchg
adc
pushf
cmp
and
sub
nop
push
inc
imul
jmp
ljmp
sub
push
mov
inc
leave
push
mov
cmp
mov
push
das
cs
gs
jns
jae,pn
adcb
adc
test
rcr
mov
add
dec
inc
shll
call
call
std
mov
adc
mov
inc
cmp
insb
inc
lcall
inc
outsb
mov
cmc
sbb
mov
jecxz
mov
loopne
test
xlat
int
dec
jbe
xchg
in
insb
push
insb
je
out
test
xor
xchg
outsb
mov
adc
fcoms
xchg
dec
mov
fisttpl
xchg
xchg
dec
and
loopne
inc
clc
test
add
xchg
sti
in
xor
pop
nop
xor
push
or
mov
cmp
sub
cmpsb
pop
ficompl
mov
imul
repnz
xlat
fisttpll
das
inc
lea
subl
addb
scas
dec
pop
scas
pop
cmp
into
lret
or
lcall
orl
jo
arpl
imul
push
dec
ficompl
cmp
rolb
popf
pop
in
adc
and
test
mov
mov
dec
push
pop
das
jo
jmp
sub
or
hlt
clc
dec
sub
mov
cmpsb
add
pop
test
roll
shrl
pop
pop
insl
add
push
push
mov
add
xchg
cmpsl
cmp
outsl
xchg
mov
sub
push
xor
das
cltd
add
leave
pop
int
gs
pop
add
std
jmp
jo
mov
arpl
rorl
push
xlat
push
pop
addl
cmpsb
dec
dec
and
xlat
adc
js
imul
dec
stos
lahf
js
pusha
sbb
inc
into
js
sbb
push
mov
daa
dec
mov
insl
mov
jecxz
adc
iret
addr16
push
mov
stos
cli
into
in
arpl
add
mov
mov
inc
jmp
in
add
adc
lock
adc
imul
or
or
mov
push
jnp
dec
pop
sub
fdivrs
xchg
xchg
mov
test
push
cmpsl
std
jno
sbb
jae
xchg
imul
jmp
cs
push
fnsave
cmp
jns
jns
shr
iret
push
push
adc
sbbl
lret
in
xchg
adc
pop
call
xchg
push
bnd
push
xor
inc
sarl
jo
push
lock
mov
subb
xchg
rep
xlat
icebp
push
test
sbb
or
jb
in
fisubl
and
mov
mov
pop
popa
test
lcall
int
dec
test
out
clc
ds
popf
fcmovbe
aad
cs
out
sub
sub
jmp
or
xchg
aad
sub
jbe
cli
jno
pop
aad
out
test
setp
fdivrl
ret
mov
lahf
inc
cld
sarl
add
pusha
xor
pop
pusha
les
call
mov
test
add
push
int3
jmp
xor
decl
add
xor
cmp
stos
addr16
and
aam
test
inc
add
mov
ljmp
mov
fwait
ret
lods
or
fbstp
adc
cmp
aaa
pop
int3
call
call
loop
push
sub
lods
lahf
in
or
jae
add
mov
test
push
lret
push
loopne
adc
jg
bound
mov
mov
bound
sti
jne
sbb
push
pop
cwtl
mov
inc
xor
jp
push
addr16
sahf
hlt
cmp
cmpxchg
orl
clc
jns
sub
xor
shlb
xor
lock
sub
pop
inc
push
call
popa
sbb
adc
push
xor
mov
inc
cmp
or
jle
dec
push
mov
out
add
dec
xchg
xchg
inc
xor
xchg
sub
fnstsw
in
xor
lock
hlt
mov
ret
adc
lcall
pusha
lahf
xchg
sub
cld
inc
movsb
mov
scas
ret
mov
jmp
pop
and
or
or
dec
sti
push
cmc
int3
pop
xchg
ficoms
xchg
cmc
and
and
cmp
xor
or
je
sub
xorb
dec
dec
add
and
out
js
inc
xchg
dec
lods
insl
jns
addr16
dec
jmp
sbb
je
or
in
inc
in
jae
or
dec
lods
insl
aad
jle
pop
movsl
push
adc
jne,pt
sub
addb
ret
mov
xchg
aas
mov
aaa
test
in
cld
sar
das
test
cmpl
push
pushf
in
repz
cwtl
xor
xchg
imul
hlt
shlb
dec
js
mov
fnstenv
das
imul
or
xor
das
push
and
sbb
shlb
xchg
jno
js
lret
arpl
pusha
push
jb
sub
jge
cmc
cli
mov
mov
cmc
mov
cld
lahf
pop
fcompl
jae
jbe
fdivl
push
xchg
dec
inc
sbb
test
fldenv
jmp
pop
add
cs
mov
dec
mov
hlt
cld
mov
rorb
iret
dec
shlb
push
push
mov
and
fisttps
pusha
fnstcw
cmc
sub
lods
jb
mov
xchg
mov
in
jae
ror
flds
mov
jle
ret
gs
jg
dec
dec
and
mov
push
add
add
incb
rol
pushw
xor
xor
test
pop
dec
sbb
fcomi
popf
ds
scas
scas
sbb
xor
sub
testl
cltd
rol
jg
repz
inc
push
enter
pop
ds
adcl
ljmp
sbb
mov
loope
addr16
sbb
popf
aas
dec
pop
jb
sub
xor
call
sbb
push
push
clc
ror
adcl
inc
jbe
adc
cmp
add
imul
data16
adc
mov
repz
movsl
sub
fmull
imul
push
lods
xor
aaa
push
ss
enter
cmp
sbb
imul
pop
int
cmp
mov
jl
xchg
frndint
enter
ret
sti
mov
sbb
in
sbb
daa
cltd
sub
mov
cmpsl
imul
and
push
in
xchg
repnz
into
or
stos
push
pop
mov
adc
fadds
pop
xor
fldt
push
jl
fcoml
sbb
or
hlt
mov
pop
xchg
test
jp
les
scas
cld
cld
cld
or
and
adc
fidivrl
and
stos
or
dec
inc
sub
shl
xchg
cmp
movsb
das
xor
stos
inc
push
jge
ret
adc
sti
push
dec
sub
adc
jo
pop
fisttpl
bound
and
push
sbb
xlat
adc
mov
insl
xor
mov
test
cmp
stc
mov
xlat
xlat
jle
cmc
es
cld
add
cmpsl
sti
daa
and
bound
add
lret
shlb
loop
nop
dec
mov
clc
and
sub
std
addb
cmpsl
mov
mov
xor
fistpll
ret
add
jne
and
mulb
jae
les
inc
cltd
jecxz
jnp
mov
dec
pop
sti
into
mov
or
xor
mov
mov
pop
xchg
loope
sbb
popa
push
test
imul
ljmp
add
cmp
je
inc
js
push
in
fstpl
idivl
jge
negl
std
into
mov
ret
jns
push
rorl
cltd
outsl
das
mov
ds
or
xchg
dec
idiv
and
loop
fisttpll
mov
jns
push
jbe
lret
lea
and
jg
push
sub
xor
push
outsl
sub
ss
push
or
lds
mov
arpl
xchg
mov
pop
in
jl
mov
fistpl
sub
pop
ds
push
or
test
scas
andl
gs
pop
ss
gs
sbb
jns
aad
lea
and
mov
adc
lret
lods
xor
negb
inc
ss
adc
inc
lahf
insb
std
repnz
pop
aam
cmpsl
adc
push
add
xor
sub
xchg
loop
xchg
dec
cmp
jmp
cmc
pop
dec
test
mov
dec
cmp
test
je
mov
test
adc
stos
sarb
shll
cmp
xor
ljmp
sub
dec
stos
shll
cs
sub
pop
ret
push
cmp
into
sbb
ret
repnz
xorb
dec
pop
mov
jle
in
sbb
adcb
dec
sbb
xor
cmp
mov
arpl
fistpll
or
in
push
jmp
shl
aaa
pop
out
mov
mov
push
and
out
mov
lds
sbb
cmpsb
idivb
sbb
or
loop
enter
and
pop
mov
sbbb
clc
lahf
add
mov
fisubl
int3
mov
or
js
shlb
testb
mov
and
fdivr
mov
cmpsb
test
mov
test
push
inc
xor
or
cmp
pusha
jl
xlat
dec
lods
xor
cmp
les
pop
das
daa
mov
jecxz
add
fs
jns
cmp
push
jge
pop
push
xchg
arpl
inc
fwait
sbb
cltd
jge
mov
mov
movsl
inc
fs
lock
xchg
fnstsw
mov
sub
sbb
inc
push
ret
ficompl
pushf
dec
movsb
lods
cmp
fnstsw
hlt
decl
jne
sbb
ds
shlb
xchg
shl
stos
add
push
jns
and
mov
jnp
dec
insl
hlt
cli
xor
sahf
jle
jns
mov
pushf
mov
mov
out
xchg
in
sbb
mov
mov
mov
dec
mov
divl
dec
xor
movsb
fists
pop
push
aam
inc
dec
pop
mov
mov
in
loop
outsl
adc
movsl
out
icebp
dec
and
mov
gs
jge
mov
jb
xchg
cmp
sbb
pop
mov
idivl
push
je
movsb
jbe
add
sbb
cwtl
int
push
jl
add
push
adc
cmp
into
push
sahf
sub
inc
xor
push
pop
sub
popa
mov
lods
movsl
xchg
dec
out
outsl
mov
mov
add
imulb
push
and
mov
in
pop
jno
fistps
les
pop
insl
test
dec
leave
xor
rcrl
pop
pop
mov
push
pop
je
cs
pop
pop
lods
cmp
pop
inc
enter
jb
inc
push
mov
nop
outsl
mov
mov
or
pop
fistpll
mov
mov
add
cmp
lret
mov
loop
lock
fistpll
adcb
fsubrs
insl
cmp
sbb
jmp
pop
iret
xor
out
lret
in
sub
out
ds
int3
pop
xchg
push
fwait
in
mov
sahf
mov
fldenv
pop
ficomps
and
out
pop
adc
push
sbb
sub
pop
in
dec
sub
sarl
jg
bound
insb
jae
lcall
std
add
fists
xor
les
std
nop
je
adc
aaa
push
ret
and
mov
push
ja
das
or
sub
and
add
inc
jle
pop
mov
stos
sbb
xor
je
fcmovu
or
daa
sti
adc
push
popf
inc
les
inc
popa
movsl
xchg
push
add
xor
popf
nop
jmp
jmp
outsl
sbb
push
fldenv
lock
push
icebp
pop
lods
xchg
sub
test
pop
scas
dec
out
ja
or
xchg
add
mov
push
jne
mov
adc
mov
mov
cmp
inc
test
mov
xchg
aam
jb
lret
pushl
jecxz
sbb
ds
lret
and
cmp
sti
xchg
sarl
push
ret
pop
int3
or
pop
push
cmpsl
adc
add
pop
xorl
cmpb
push
dec
mov
jge
aam
mov
pop
stc
adc
xlat
mov
insb
out
jmp
sbb
pop
push
mov
popf
shrb
call
movl
add
xor
adc
sahf
jne
subl
mov
xchg
cmc
sub
dec
add
imul
das
fwait
cmp
xchg
jge
rclb
gs
push
inc
fistpll
xor
cmp
pop
pop
xchg
cltd
xor
pop
jmp
imul
push
inc
sahf
xor
cmc
rclb
push
icebp
pushf
mov
cli
in
movsl
xor
aas
addb
mov
loope
inc
jns
push
in
insl
sub
push
jmp
jbe
out
xor
andb
inc
sub
movsb
repz
lea
in
sub
mov
and
insb
lock
sarl
mov
mov
pop
fdiv
mov
repnz
adc
xor
mov
mov
or
adc
movl
or
cmp
maskmovq
inc
adc
or
shlb
pop
ror
inc
and
add
sahf
inc
xlat
mov
jecxz
rcr
jno
jge
sub
pop
cli
jecxz
adc
mov
sahf
fs
push
mov
push
cld
xchg
push
stos
adc
lods
sbbb
gs
movsl
pop
jecxz
xchg
in
add
jns
outsb
sub
and
in
ljmp
mov
adc
andl
xchg
mov
sbb
mov
sbb
in
movsb
cld
mov
xchg
outsl
push
mov
in
jp
cltd
sub
pop
cld
fmul
sub
in
mov
out
sub
jmp
mov
cmpsb
das
cmpsb
and
aas
shr
pop
jnp
shlb
rorl
jo
in
mov
push
lods
xor
jns
pop
test
dec
mov
test
jmp
repz
loop
xor
pusha
bound
sahf
test
push
ret
pop
and
test
inc
scas
je
mov
cwtl
xor
mov
or
push
jecxz
das
adc
jecxz
data16
arpl
imul
or
pushf
in
and
sbbl
aam
cmc
lret
add
popf
adc
cmp
mov
popa
pop
movsl
mov
je
add
addb
xor
daa
pop
dec
popl
lock
add
pop
push
insl
jb
jae
sbb
lods
scas
aas
loop
cmp
push
cmpsl
popa
loopne
out
ror
push
aam
cmp
les
nop
pop
adc
mov
and
mov
int3
aaa
push
in
movsb
inc
imul
mov
push
stos
inc
xor
shll
sub
enter
in
pop
ror
sbb
pop
add
push
add
sbb
sahf
push
shll
mov
cmc
push
sub
dec
mov
leave
in
test
sbb
das
pop
pop
cmpsl
xor
adc
std
adc
add
push
push
add
push
push
sbb
jle
notb
add
je
mov
mov
inc
rorb
sti
hlt
cmpsb
sub
pop
aad
add
or
pop
adc
and
test
cmp
enter
stos
lcall
cmp
outsl
jp
loopne
and
arpl
icebp
fimull
fbld
or
add
outsl
insl
icebp
out
imul
pop
jb
cmp
imull
hlt
and
and
pop
mov
imul
into
into
iret
test
test
imul
pop
fldlg2
dec
sahf
out
int
sub
test
xchg
roll
mov
adc
fstp
add
fistps
inc
mov
add
rcr
and
cmp
inc
into
aaa
xor
outsl
and
dec
out
std
xor
dec
sbb
insb
inc
push
push
icebp
enter
addr16
sahf
jnp
jecxz
lods
in
adc
mov
mov
repnz
sbb
hlt
outsl
sub
xor
sub
mov
loope
arpl
inc
or
xor
cmp
cli
pop
inc
add
aas
shlb
and
cmp
mov
cwtl
inc
sbb
call
sub
mov
insb
push
stc
repz
out
xor
mov
and
ficoml
in
xchg
jle
jbe
push
ja
shll
push
neg
push
push
sbb
push
fadds
mov
decl
daa
add
test
outsb
add
cmp
xchg
add
addr16
adc
adc
jae
jae
sahf
mov
mov
fs
inc
mov
iret
imul
mov
icebp
ljmp
sbb
sub
pop
outsb
or
xor
imulb
and
in
stos
movsl
adc
sti
stc
stc
push
test
fs
fists
nop
pop
or
dec
mov
xchg
inc
clc
sbb
les
sbb
pop
or
fisubs
push
xor
mov
ljmp
imul
mov
and
sub
sub
sub
xchg
cmp
int3
nop
and
mov
jne
cld
icebp
xchg
scas
dec
js
cli
dec
and
in
push
out
fwait
dec
ret
mov
mov
icebp
push
sti
leave
in
aaa
stos
push
push
cmc
movsb
cmp
popa
shlb
cmp
adc
out
popf
lahf
push
cs
loop
and
mov
jmp
ds
pushf
scas
out
mov
xchg
mov
ds
jnp
inc
push
mov
mov
adc
les
adc
pop
jl
mov
push
out
nop
lea
inc
xor
lret
lret
jle
adc
sarl
cld
sbb
addl
bound
cmp
aam
or
flds
cmp
push
inc
rorb
mov
mov
int3
mov
scas
js
lret
pusha
and
int
scas
xchg
mov
lret
pusha
pop
out
mov
pop
sub
orb
popf
or
data16
sub
addr16
lret
mov
pusha
test
or
inc
enter
add
jne
push
push
pop
adc
loopne
dec
icebp
fdivrs
sub
fcom
pop
imul
ret
push
imul
pop
ljmp
int
pushf
lahf
fstpt
nop
cmp
pop
inc
mov
sub
mov
pop
jb
sbb
sarl
inc
or
mov
cmp
mov
test
lods
add
fildl
lcall
scas
push
js
pop
jle
fdivrs
call
cmp
insb
xchg
pop
dec
sbb
test
nop
adc
sbbl
push
push
jle
sbb
jp
cmpsl
les
in
sbb
sbb
insl
xor
in
pop
xchg
mov
xor
pop
xchg
or
les
push
test
pop
cmc
pop
xorb
repz
sbb
fcomp
mov
orl
cwtl
mov
in
adc
test
adc
mov
pop
stc
adc
in
cld
loopne
pushl
daa
pop
and
or
inc
enter
or
mov
xor
cmpsl
daa
mov
inc
mov
out
fsubrs
mov
lret
or
je
pop
pop
pusha
and
lds
xor
lcall
xor
xor
aad
call
inc
std
push
loop
mov
lahf
rclb
add
xor
arpl
shlb
add
loope
jg
out
mov
ss
jl
and
add
dec
clc
js
test
pop
mov
sarl
push
scas
outsb
fcoml
push
pop
and
fdivrs
cmc
dec
pop
pop
cmc
pop
and
mov
out
mov
pusha
into
rcll
xor
test
add
cwtl
push
jb
add
xchg
mov
or
or
leave
dec
dec
frstor
dec
jg
push
push
jbe
iret
adcl
mov
sub
shlb
pop
sub
repz
mov
loop
cwtl
sahf
dec
mov
test
rcrb
lea
add
incb
xchg
ljmp
add
es
jnp
outsl
loop
into
mov
repnz
sbb
imul
insl
add
jns
jns
jae
hlt
sub
add
sbb
jbe
sar
xchg
orl
or
pop
inc
push
and
and
call
ds
push
aad
fidivl
dec
cs
push
aad
xorl
imul
and
gs
push
incl
sahf
pop
and
mov
or
xor
xor
insl
sbb
scas
loope
pusha
push
cmp
divl
mov
loop
divl
ret
dec
lds
jbe
hlt
ret
sub
sub
mov
sbb
repnz
inc
bound
imul
mov
pop
add
lret
push
rcl
jns
cmp
add
std
std
inc
cltd
cmp
adc
jb
gs
xchg
mov
cmpl
aam
in
in
mov
fmull
int
jae
hlt
test
into
push
fcompl
push
int
mov
push
jmp
mov
lretw
fcomps
loope
rcr
lods
arpl
mov
xchg
jb
cmpsb
xchg
rorb
lret
fistpll
fwait
sarb
daa
aaa
mov
pop
ret
call
pop
insl
fmuls
rcrl
out
xor
mov
dec
movsb
push
or
sbb
shl
test
fnstsw
inc
add
mov
inc
movsb
dec
inc
maskmovq
divl
xchg
stc
inc
dec
bound
clc
fildll
jle
cld
add
xlat
adc
xchg
xchg
int3
pop
mov
fsubrs
rcl
mov
stos
sub
stc
mov
repz
mov
mov
adc
iret
pop
fbld
jae
mov
adc
andb
or
call
sub
lcall
in
aad
push
and
js
adc
repz
inc
fnstcw
clc
xchg
test
sbb
sub
or
rolb
cmp
ret
mov
imul
aad
xchg
mov
add
mov
sbb
std
mov
rorb
mov
sbb
mov
cmc
rolb
and
mov
shl
scas
jno
lock
das
jo
xchg
mov
jo
scas
fldcw
movsb
bound
out
sbb
mov
jmp
jnp
pop
shrl
cmp
pop
lods
enter
std
sub
and
pusha
lcall
ret
enter
dec
mov
mov
std
mov
sub
push
xor
mov
popf
xchg
into
xor
mov
insb
pop
mov
and
mov
mov
adc
ds
outsl
or
xor
add
shlb
icebp
xchg
out
mov
mov
adc
inc
xor
push
cmp
jle
mov
lcall
nop
leave
or
fs
cli
lods
insb
mov
movsb
sarb
lds
xchg
pop
jl
es
cmp
push
ret
in
orl
das
cmpsl
dec
test
out
sub
out
push
scas
xchg
pop
mov
jle
cltd
fcmovnbe
or
movsl
mov
xchg
jne
sbbb
mov
mov
rcrb
xchg
aam
cmp
subb
inc
pusha
pop
lock
and
adc
shrl
jle
cmpsl
es
add
xchg
loopne
fwait
and
scas
nop
push
mov
movsl
addl
sbb
fs
jns
mov
jne
iret
fucom
sub
xchg
push
es
adc
or
pop
xchg
mov
xchg
pusha
ja
push
lret
lahf
mov
sub
jge
xchg
mov
mov
or
fidivl
leave
stos
je
in
mov
xlat
nop
fidivrl
dec
xchg
cmp
mov
xchg
shrl
lret
call
or
stos
sub
aas
punpcklwd
cltd
inc
inc
dec
int3
xchg
js
xchg
call
cmp
fs
fisubrl
addl
mov
sbb
xchg
rcrl
cmp
adc
icebp
in
pop
mov
cmp
push
ljmp
jge
add
lods
or
xchg
cmp
call
mov
fdivl
scas
sbb
je
ret
push
loop
xchg
xor
sahf
and
shlb
cmpl
in
mov
into
cmp
stos
jnp
cs
stc
call
jnp
mov
xchg
mov
lret
add
mov
out
jbe
cmp
orb
or
jo
or
dec
and
loopne
pop
push
push
cmp
cld
push
cwtl
mov
aad
jne
pusha
pop
cmp
xchg
mov
lea
je
mov
mov
roll
cli
mov
sub
inc
pop
and
bound
push
mov
pop
adc
movsl
mov
iret
mov
mov
adc
sub
pop
test
adc
testb
and
loop
out
or
pop
in
jbe
scas
pop
pop
cs
icebp
aad
xchg
sub
sti
aam
xor
fcoms
sub
fisttpl
push
cwtl
push
and
inc
pop
or
sbb
mov
fadds
xchg
xchg
jbe
test
mov
xchg
jl
push
and
or
fwait
sbb
mov
mov
in
nop
data16
mov
jp
test
ret
jo
ret
adcb
lret
add
imull
cmp
mov
adc
sbb
xor
in
cwtl
into
sahf
dec
popf
ss
cmc
bts
cmp
pop
das
shr
inc
clc
add
push
and
sub
cli
scas
sbb
imul
dec
movl
jg
xlat
cmp
cmp
fs
cltd
mov
lret
mov
iret
xchg
dec
bound
or
jne
jge
lods
jle
dec
cmpb
pop
inc
mov
push
cmc
fildll
add
outsl
xchg
test
inc
sbb
add
push
push
xchg
cli
jl
push
xor
xchg
fsubs
hlt
aam
mov
mov
pop
or
xchg
in
pusha
xor
outsl
jae
mov
cmpsb
add
mov
inc
dec
ret
test
decb
mov
pop
bound
sbb
cmp
or
loope
mov
test
add
cmc
dec
lea
fcmovbe
xor
add
cli
gs
sbb
repz
test
pop
dec
xor
cld
jge
aas
int3
daa
push
imul
int3
adc
fcomp
jp
pop
add
mov
test
inc
xor
daa
loopne
xchg
stos
pop
in
fdivs
and
inc
inc
pop
push
neg
ljmp
push
outsb
mov
pop
fbld
cwtl
mov
ret
mov
add
rcll
inc
stos
xchg
sbb
pusha
fnstsw
or
and
push
dec
jnp
aam
sub
lods
or
mov
mov
data16
fwait
idivb
mov
sti
stos
jb
mov
adc
mov
mov
or
push
fidivrl
imul
imul
ljmp
sahf
cmpsb
add
lea
or
js
jmp
cmc
add
pop
cmpb
shrl
cltd
imul
xchg
mov
lds
sub
or
stos
rcrb
mov
mov
xchg
loop
sbb
add
push
out
mov
or
sbb
repnz
pop
lods
sar
sbb
pushf
pop
gs
add
ja,pn
jmp
cmp
xchg
adc
stos
sub
mov
push
negl
sub
cmpsb
inc
fiadds
mov
mov
push
ret
aaa
andb
rorb
dec
cmp
pop
out
stos
mov
lret
les
mov
xchg
js
xchg
scas
push
inc
lret
mul
pop
andl
add
jmp
out
ljmp
popa
mov
cli
push
lods
xlat
add
inc
movsb
pop
sbb
adc
xchg
and
adc
xchg
add
in
dec
mov
sti
pop
lods
jmp
std
rcll
arpl
inc
stc
cmpsl
push
and
sub
fs
pop
mov
daa
and
stos
cltd
repz
xor
sub
hlt
inc
and
jnp
or
repnz
mov
mov
in
int
sub
mov
pop
inc
sub
outsb
jbe
lahf
mov
and
aad
enter
in
cld
jp
jg
cmpb
or
jne
mov
sbbb
cmpsb
dec
test
fwait
movsl
mov
jecxz
arpl
or
push
out
popf
xchg
ss
sbb
sbb
orb
push
in
imul
cmp
dec
rep
pop
addr16
les
iret
sub
fsubp
into
add
inc
dec
xchg
int
pusha
pop
call
repz
loopne
jnp
mov
mov
xchg
fimull
xchg
negl
mov
mov
mov
shlb
adc
add
test
jmp
or
lea
xlat
fs
xorb
stos
lea
clc
sbb
jl
mov
lret
xor
hlt
mov
int3
mov
aas
and
sarb
mov
and
cmpsb
or
cld
inc
inc
les
repz
add
xchg
mov
cmp
sub
leave
inc
popf
and
ficoms
stos
jo
outsb
xchg
outsb
fldenv
mov
and
dec
xor
icebp
add
cld
ror
rolb
loope
push
cltd
sbb
adc
xadd
or
cmp
rcll
fidivl
stos
adc
cmp
les
add
icebp
jbe
and
aaa
lods
daa
cs
test
scas
jnp
fists
cld
aas
cli
mov
lods
jo
inc
mov
or
das
pop
dec
fisubrl
sbb
mov
es
cmp
repz
pop
sub
call
dec
push
gs
xlat
fsubl
pop
jo
fs
in
ds
sbb
add
mov
pushf
into
lret
adc
es
test
arpl
push
dec
mov
sbb
ret
sbb
cmpsl
adc
xlat
je
cmp
or
stos
push
jno
or
mov
add
div
push
xchg
xor
mov
adc
ljmp
jnp
xchg
jne
cmc
jb
es
xor
lea
mov
jg
pop
fsubrl
sbb
add
push
aad
jbe
in
add
mov
push
divl
ret
or
bound
scas
mov
sbb
rorb
inc
pop
andps
es
sub
xor
sarl
roll
adc
jp
fs
push
mov
orb
inc
fstpl
cwtl
cmp
cmp
mov
inc
cmpsl
jmp
movsl
sub
cld
mov
mov
xchg
sub
cli
mov
ss
cmp
adc
dec
clc
and
int3
push
and
dec
fcmovbe
pop
pusha
fwait
dec
lods
xchg
jbe
mov
into
fsubrs
or
sti
arpl
iret
rep
xchg
lods
movsb
iret
lock
sti
pop
sub
orl
mov
ds
push
xchg
mov
cmp
pop
adc
call
test
pop
mov
mov
scas
add
arpl
pop
xor
inc
scas
xchg
xor
dec
jl
xor
call
jl
mov
push
stos
es
rcrl
mov
loop
jmp
icebp
cmp
mov
orl
or
xchg
pop
cli
xchg
sbb
push
dec
les
inc
push
adc
stc
jne
incb
cld
adc
push
dec
pop
punpckhwd
pusha
xchg
xchg
pop
xlat
fwait
subl
push
loopne
pop
arpl
xchg
mov
hlt
cmp
inc
mov
movsl
ss
rcll
adc
mov
jns
dec
into
imul
adc
js
fidivl
icebp
cmpsb
scas
cmp
push
hlt
in
in
int
lods
ss
out
cld
negb
jo
jp
popa
sbb
mov
pop
jnp
scas
xor
jge
cmp
cld
push
push
xor
jo
jecxz
mov
cmc
ja
mov
orl
gs
push
xchg
jmp
test
pushf
pop
stc
in
lock
movsl
dec
jle
dec
daa
xchg
out
rcr
fwait
sub
xor
adc
imul
inc
add
imul
gs
je
sub
ljmp
jo
jge
loop
add
in
aaa
movsl
insb
repz
mov
cli
push
repz
push
adc
mov
xorb
mov
xchg
aaa
cmp
or
ss
mov
xor
frstor
xchg
cwtl
repnz
jb
mov
mov
lret
shll
mov
xchg
aas
dec
mov
outsl
fstl
fists
nop
xor
inc
scas
test
call
jae
movsl
mov
push
je
in
iret
push
addl
lret
dec
and
adcl
inc
imul
enter
pop
push
pop
mov
in
mov
fidivl
cmp
mov
jae
ret
sub
ja
pop
push
inc
popl
out
adc
dec
inc
adc
and
xor
mov
adc
sahf
popa
cltd
cltd
mov
aas
jae
jne
pusha
adc
loopne
pop
jb
add
sbb
or
subl
andb
aaa
sahf
mov
movsb
mov
cmp
push
lods
mov
imul
push
in
xchg
fidivrl
clc
adc
pop
mov
stc
pop
orb
pop
fdivrl
fsubl
jl
xlat
cld
mov
int3
or
call
inc
pop
test
es
adc
call
add
ds
loopw
in
lods
bound
sahf
dec
lds
pop
cmp
call
jle
jnp
jbe
shlb
repz
std
and
mov
ret
cs
aam
adc
fcompl
aam
mov
aas
xor
fsubl
and
rcl
inc
push
mov
roll
cld
orb
test
fidivl
gs
inc
lock
mov
adc
adcb
arpl
push
dec
xchg
inc
xor
and
mov
stc
insl
and
popf
sub
cmp
mov
cmp
jne
in
ret
mov
aaa
sahf
faddl
mov
sub
std
mov
test
add
lock
int
hlt
adc
cmp
xchg
jbe
out
rcll
bound
pop
std
cld
arpl
xlat
jecxz
in
pushf
mov
and
add
iret
sbbl
add
cli
xchg
insb
push
xlat
rcrl
cltd
mov
xchg
mov
and
mov
pusha
subb
xor
sub
shll
mov
mov
jne
sbb
cmp
out
flds
fiaddl
add
test
and
hlt
stos
cmp
jbe
xchg
push
arpl
adc
xchg
stos
in
mov
mov
outsb
iret
jne
mov
rorb
iret
xchg
jbe
xchg
out
aad
lds
sti
mov
mov
xchg
mov
movsb
pop
push
mov
data16
pusha
mov
out
fwait
push
or
in
adc
mov
mov
cmp
test
into
repnz
xchg
negb
ljmp
sahf
and
out
mov
cmp
or
and
ss
sti
fimuls
rcr
leave
divl
xor
adc
mov
test
nop
inc
enter
scas
push
push
mov
mov
fcomps
and
pusha
stos
jno
mov
jno
shl
pushl
inc
mov
and
sbb
loope
test
adc
xor
out
mov
cmp
lds
cmp
fists
xchg
jle
adc
jnp
lahf
jecxz
popf
adc
xor
push
jp
and
shll
mov
and
popf
xor
loop
push
cmc
popa
aaa
or
rcrb
cmpsl
pop
cmp
xchg
push
outsl
mov
xchg
sti
sub
and
lods
mov
mov
push
ds
mov
ljmp
rep
int
xor
adc
add
dec
inc
dec
test
hlt
dec
das
xor
movsb
shlb
mov
lahf
mov
adcl
mov
ss
mov
adc
jecxz
inc
dec
pop
out
inc
jae
push
insl
or
enter
lods
mov
dec
add
jne,pn
mov
inc
cmpsl
and
xor
or
cmp
mov
bound
call
mov
in
fsubr
cmp
pop
int
popf
in
sub
lret
js
mov
cmp
dec
rdtsc
imul
mov
jb
lods
loopne
mov
andb
dec
ror
mov
mov
les
lcall
pop
jecxz
ja
pop
inc
pop
add
xchg
arpl
cld
xchg
xor
mov
lods
mov
cmp
inc
out
mov
mov
inc
je
iret
mov
fwait
xchg
std
movsb
aaa
adc
pop
aad
pop
out
popf
sti
movsb
out
jl
adc
push
jne
cmc
sbb
mov
mov
jb
out
fistps
scas
and
dec
mov
shlb
in
outsl
push
aaa
xor
dec
add
fcoml
icebp
ja
add
stos
mov
cwtl
xlat
gs
clc
fdivrs
add
push
cmp
inc
inc
xor
push
out
outsl
cli
clc
ret
xor
adc
adc
clc
inc
mov
hlt
mov
xlat
leave
push
dec
iret
push
into
sarb
sub
pop
cltd
stos
jne
xchg
mov
call
pop
mov
sbb
movsb
outsl
int3
mov
mov
adc
mov
jnp
cmp
pop
outsl
into
inc
stc
std
ret
lds
cmpsl
sti
and
pop
sahf
jbe
or
leave
mov
inc
stos
shrb
loop
push
lahf
jge
shll
stc
lods
jp
es
or
mov
adc
dec
jmp
mov
push
ss
hlt
and
in
je
push
jge
mov
dec
jg
sbb
inc
mov
fistl
push
in
cltd
mov
insb
and
jne
inc
jb
lcall
aaa
cmp
hlt
mov
lods
xlat
xor
pop
xor
inc
jno
and
popa
dec
aam
cmp
push
sbb
jle
xchg
jb
xchg
insl
cmpsl
fstl
mov
sbb
cltd
rorb
mov
arpl
mov
mov
jo
sub
test
cltd
sub
push
mov
cmc
and
pushf
stos
mov
mov
roll
not
add
mov
repnz
popa
enter
rcr
inc
sbbb
adc
cld
and
add
xchg
cmpb
jb
push
enter
repz
popa
mov
push
imul
fnsave
pop
inc
imul
adc
and
and
mov
mov
movsl
outsl
dec
add
or
add
call
lds
jg
pop
in
mov
push
stos
jle
adc
daa
sti
xor
mov
and
pop
or
fwait
stos
and
pop
dec
add
lret
or
in
mov
xor
jnp
jnp
lods
iret
cli
aaa
in
icebp
pop
dec
sbb
xchg
pop
pop
jns
xchg
cmp
jns
push
push
lock
jne
ljmp
popa
xchg
xor
adc
into
shll
call
mov
push
or
pop
mov
jle
mov
repz
adc
mov
idivb
notb
push
loopne
int
loopne
xor
push
cmc
cmp
mov
adc
xlat
pusha
dec
imul
jns
loope
arpl
and
rolb
call
lret
xlat
xlat
jmp
lods
leave
xchg
js
and
leave
ds
xchg
stos
push
xchg
arpl
sub
sub
or
pop
xor
arpl
fwait
lods
cmp
inc
stc
fdivl
mov
into
and
fisubrs
push
loopne
xor
lcall
jmp
movzwl
enter
stos
push
outsl
pop
mov
hlt
inc
mov
pop
inc
repz
sub
ror
lcall
push
mov
mov
xor
xor
cmp
add
adcb
bound
and
ds
add
enter
enter
mov
pop
popf
pop
sti
sub
pop
ss
adc
shlb
xor
scas
cwtl
ljmp
ret
rorl
push
xchg
gs
ja
add
push
lahf
xor
clc
movsb
mov
gs
and
jecxz
jns
jns
outsb
fldt
mov
dec
sub
xor
mov
addr16
pop
mov
or
mov
dec
loope
cmpsb
jmp
push
add
notl
add
ds
jnp
test
sub
pop
jns
jnp
shl
xor
movsb
fcompl
dec
filds
scas
mov
add
mov
cmc
fcompl
mov
lret
adc
pusha
pop
and
mov
xchg
mov
dec
insb
sub
cmc
pusha
cmp
stos
sub
pop
sbb
pop
pop
loope
sub
jne,pt
adc
aaa
and
sbb
pushf
daa
mov
pop
mov
mov
sub
cmp
cmpsb
pop
movl
cmp
or
mov
push
push
sbb
xchg
dec
mov
lods
insb
lahf
test
mov
adc
loopne
mov
pop
mov
add
lock
push
or
mov
xchg
jno
inc
inc
push
fwait
cwtl
lods
inc
pushf
or
pop
lods
adc
cmp
in
es
dec
push
cmpsl
in
int3
fildll
rcrl
pushf
mov
test
sbb
adc
sbb
xchg
cld
inc
adc
xor
outsl
gs
mov
test
mov
pop
imul
out
rolb
mov
ja
sbb
ss
adc
aad
cmpsl
jo
in
adc
sub
jl
aas
andl
cmpsb
add
mov
into
aad
cwtl
pop
int3
and
daa
rcl
xlat
push
push
andb
jae
ret
fdivl
cmpsl
and
xchg
pop
pop
cltd
mulb
insl
push
inc
mov
jecxz
jmp
pop
push
or
ret
push
fdivr
fidivl
add
inc
andb
fnsave
enter
mov
xchg
and
mov
js
pusha
mov
and
sub
adc
aam
or
mov
cmpsb
scas
shrb
inc
fisubl
sarb
push
jle
add
insb
push
sub
pop
adc
psrlw
addr16
stos
mov
scas
aaa
outsl
mov
stos
adc
hlt
icebp
and
dec
movsl
sub
jnp
shl
mov
ret
push
hlt
dec
push
jl
int3
fidivs
mov
orb
jge
sub
adc
mov
jo
xor
arpl
fistps
push
mov
mov
loope
mov
pop
mov
test
jle
cmp
shll
dec
adc
sbb
icebp
xchg
xor
dec
pop
les
xor
sub
dec
xorb
sbb
pop
add
sbb
sbb
ljmp
sahf
flds
mov
mov
or
mov
std
pop
cmp
idiv
fld1
adc
xchg
rcr
add
xchg
mov
dec
and
mov
jge
call
popf
xlat
sbb
cmp
jb
stos
rolb
iret
loopne
xchg
xchg
mov
dec
scas
dec
sbb
enter
or
dec
cmp
inc
xor
mov
mov
pop
aaa
cli
lret
mov
dec
cwtl
sub
fdivrs
mov
adc
ss
pop
xor
cmp
adc
lods
xchg
jp
rorb
adc
not
aaa
jae
inc
mov
orl
lods
outsb
lea
xor
mov
inc
or
mov
xor
jnp
ret
lret
repnz
test
je
dec
and
fidivrs
stos
lods
roll
aam
nop
cli
clc
dec
push
mov
and
pop
stos
movsb
sahf
add
dec
leave
incb
xor
es
movsb
jle
pop
mov
xchg
dec
mov
fsubrs
orb
jmp
push
inc
inc
test
scas
repz
mov
sbb
outsl
add
fldt
push
shl
sub
mov
lods
xor
jle
jecxz
fstps
xor
mov
icebp
sub
push
pop
push
call
xchg
test
inc
mov
loope
xchg
mov
adc
adc
mov
xchg
mov
xchg
js
loopne
aas
in
jne
js
cmp
cmp
dec
cwtl
cltd
cmp
js
adc
test
loop
jl
push
xchg
dec
cmpsb
pop
push
enter
adc
stc
scas
xor
sub
frstor
imul
mul
addr16
imul
rcrl
xorl
jno
mov
mov
test
jns
bound
scas
divb
fidivl
inc
pop
sub
inc
sub
mov
js
lods
inc
cmpsl
mov
gs
shll
jg
cltd
inc
into
xchg
push
sbb
mov
dec
and
pop
icebp
rolb
xor
hlt
cmpsl
xor
icebp
loopne
incb
idivl
push
test
inc
arpl
out
inc
mov
push
push
es
xor
mov
cmpsb
aaa
nop
repz
mov
das
jno
dec
and
mov
lret
sbb
scas
hlt
or
sub
insl
add
outsl
rolb
imul
rcrb
fstpt
mov
pop
cmpb
cmp
adc
and
and
cmp
lcall
mov
scas
filds
add
scas
xchg
into
mov
xchg
icebp
and
mov
pop
sub
rolb
loop
pop
dec
idivb
inc
ljmp
inc
mov
xchg
adc
pop
sti
or
pop
inc
ja
xchg
xchg
fsub
repnz
jg
lea
dec
gs
xchg
or
push
mov
pushf
pop
out
jne
inc
xorb
idivl
loop
lahf
mov
aaa
aad
xchg
shrb
sbb
xchg
enter
or
test
and
fimull
cltd
data16
fwait
mov
scas
mov
and
lods
aas
add
ja
jne
int
mov
push
and
push
pop
stos
bound
ret
movsb
stc
xchg
jmp
repz
outsb
adc
ret
cli
lcall
das
lret
dec
test
or
sti
push
rolb
sahf
loope
adc
cmp
cltd
pop
lods
mov
xor
jb
sbb
mov
pushf
cmp
in
rol
repnz
jb
mov
push
xchg
mov
xchg
int
jae
and
leave
roll
repz
xchg
dec
pop
mov
jle
and
test
inc
stos
pop
iret
je
sub
sub
int
out
adc
test
cltd
sub
hlt
bound
dec
add
addr16
cmpsb
jns
decl
inc
and
popf
dec
xor
and
xchg
mov
push
test
lods
sub
and
mov
xor
mov
xchg
xchg
sub
in
andl
mov
fnsave
lods
ret
ret
push
mov
sub
sub
aaa
and
shl
push
jnp
xchg
loopne
insb
test
jmp
pop
fldl
sbb
xor
sbb
lcall
fcomps
push
pop
adc
cmpxchg
iret
push
cmc
add
mov
iret
icebp
and
adc
add
mov
xchg
push
and
repz
cs
and
push
mov
lea
cmc
test
sbb
jno
pushl
gs
pop
pmaxsw
dec
cmp
jp
in
or
pop
cmpsl
outsl
pop
outsb
or
jcxz
or
les
fcmovnbe
mov
stos
in
pop
adc
sbb
fistpl
sub
rcll
cld
test
dec
enter
mov
shl
mov
jle
psubusb
push
mov
cmc
stos
cmp
fsub
rolb
ret
movsl
cmp
in
pop
scas
jmp
out
orb
leave
pushf
cmp
outsl
lds
mov
mov
add
mov
sub
leave
fwait
mov
mov
jo
ficomps
mov
adc
in
stos
mov
pop
xchg
inc
ljmp
cmp
xorb
adc
xor
int
pusha
fs
and
out
pop
cld
pop
ljmp
outsb
sbb
test
pop
rcr
nop
adc
jp
cli
inc
js
mov
mov
int3
mov
int3
mov
int3
sbb
mov
jnp
sbb
insb
movsbl
pop
push
popa
fbld
jae
lods
cmpsl
push
jae
divb
scas
pop
adc
mov
xchg
pop
dec
jmp
iret
inc
inc
xor
je
xor
dec
jecxz
popa
repnz
jae
inc
iret
dec
sub
jge
bswap
jle
xchg
ret
mov
aam
push
xchg
insb
jbe
repz
mov
orl
fnstsw
jb
dec
sbb
mov
jl
or
add
ret
subb
cmp
xorl
mov
mov
fldenv
add
pusha
cwtl
xor
pop
sahf
shll
mov
ljmp
movsb
jl
inc
mov
dec
jae
shl
movsb
mov
push
sbb
out
xor
scas
ret
lret
dec
ljmp
fsts
lret
or
push
jo
cmp
sbb
filds
push
sbb
pop
movsb
addr16
in
hlt
pushf
stc
std
mov
adc
enter
cmpsl
shlb
std
enter
in
adc
daa
adc
adc
or
push
negl
xchg
xor
mov
test
repnz
cmp
mov
push
xor
movsb
cmc
jp
and
and
movl
mov
pop
out
add
das
movsl
push
push
sbb
arpl
jle
sbb
cmpb
dec
divl
jge
aam
lods
lods
mov
jge
in
or
imul
cmp
mov
lahf
loope
lods
xor
inc
adc
and
or
imul
jnp
ja
adc
xchg
movsl
mov
cmp
test
popa
add
es
stos
and
push
dec
lahf
inc
hlt
jo
rorb
pop
sub
jbe
and
push
sub
xchg
xor
dec
inc
or
popa
adc
or
repz
int3
push
sbb
hlt
lcall
adc
adc
gs
pop
imul
gs
mov
mov
insl
mov
loope
out
xchg
inc
je
dec
sbb
push
popf
ret
adc
cld
mov
xor
enter
xchg
ds
aam
push
adc
nop
and
lock
insb
repz
insl
pop
test
addb
xchg
push
pop
fldcw
sub
lret
pop
pop
int3
sub
sub
int
jno
stos
filds
mov
imul
fs
adc
out
test
mov
sub
test
adc
js
negl
insb
xor
pop
mov
push
pop
mov
fsubrs
add
dec
fdivrl
test
pop
lahf
or
mov
mov
add
and
mov
add
cmpsb
cs
fisubrs
jp
adc
mov
xchg
pop
sar
lds
leave
pop
pop
pop
sbb
aam
sbb
add
pop
test
xchg
aad
loop
push
mov
insl
or
data16
das
std
and
data16
idivb
ret
push
aam
ficomps
dec
jmp
and
cld
mov
jecxz
cmp
sti
sub
pop
andl
nop
adc
mov
pop
adc
sub
mov
xchg
jge
sub
in
xchg
inc
call
jns
cmpl
out
mov
mov
fwait
push
or
xlat
inc
cmc
cltd
sbb
scas
cld
cmp
subb
lds
add
pop
loop
mov
xchg
data16
insl
leave
int3
in
clc
mov
loop
std
mov
jne
and
mov
lock
movsb
add
cmp
ljmp
or
jl
sbb
in
pop
xchg
insl
jecxz
inc
xor
pop
mov
rorb
xor
mov
mov
das
inc
xchg
and
push
sbb
xor
imul
adcw
cld
insl
aas
cltd
scas
repnz
jb
fnstcw
add
in
jo
xchg
cli
lock
mov
jo
mov
jo
mov
icebp
cmp
lcall
dec
sbb
das
ret
pop
cwtl
mov
xchg
sub
mov
inc
or
popf
insb
test
pop
pop
dec
or
pop
fs
cmpb
inc
mov
push
and
pop
pop
xor
cmp
mov
jo
inc
arpl
jae
inc
jbe
xor
test
test
dec
and
dec
and
pop
mov
popa
pop
cltd
sbb
xchg
fldcw
push
pushf
data16
mov
mov
clc
imul
jle
jno
pop
fisttpll
call
dec
and
mov
clc
xor
jg
add
incl
sbb
mov
mov
sub
mov
test
mov
loop
inc
loope
mov
pop
lret
push
ret
or
leave
outsl
cmpsb
mov
mov
push
dec
outsl
lock
rcrl
sar
lea
lahf
cwtl
test
add
aad
xchg
scas
adc
repz
push
test
jecxz
fsts
pop
outsl
or
cmp
sbb
pop
fidivrl
gs
stos
mov
in
push
idivl
cltd
add
mov
aas
cmc
xorl
mov
pop
mov
and
mov
push
adc
push
add
jbe
pusha
or
fiaddl
xor
pop
push
cmpl
dec
js
dec
xlat
dec
adcl
sub
stc
jmp
push
jno
sbbb
sbb
jo
cmp
iret
inc
xor
mov
mov
mov
sub
mov
dec
aam
and
sub
scas
xor
and
sub
fucomip
jns
iret
fnstenv
es
gs
mov
fbld
das
adc
mov
and
push
xor
mov
xchg
xchg
sbb
lret
pop
jbe
or
repnz
shr
pushf
jge
repz
stos
cmp
mov
add
mov
je
mov
in
mov
mov
ret
sub
adc
pop
mov
stos
stos
push
loopne
in
inc
jecxz
inc
pop
shrb
jo
adc
add
jge
mov
cmc
insl
test
dec
jbe
decb
mov
movsb
hlt
inc
fnop
outsl
lods
jne
or
hlt
movb
sub
dec
jp
jnp
xor
dec
std
les
dec
mov
jl
xchg
mov
into
movsb
cmpsl
pop
es
test
test
arpl
pop
addr16
inc
jne
push
movb
xorl
stos
dec
fstpt
mov
popf
mov
jo
and
popa
push
mov
fimuls
push
aaa
dec
mov
cmp
daa
test
shrb
mov
out
jl
xorb
movsb
mov
mov
push
movsb
dec
pusha
fxch
lods
lods
dec
in
shll
jecxz
mov
xlat
push
std
inc
xor
in
popf
inc
xor
inc
add
out
cmp
push
jmp
sbb
dec
mov
or
test
mov
sahf
adc
inc
cmp
rcl
testb
cmp
jbe
mov
mov
jae
dec
rclb
pop
inc
jp
dec
movl
cwtl
jg
sbb
cmc
sbb
xchg
push
adc
jmp
sub
int
arpl
insb
sub
pop
loop
mov
add
data16
pusha
loop
out
cmp
test
pushf
pop
dec
sbb
and
mov
sub
call
arpl
or
dec
aas
sbb
fists
sub
ljmp
add
mov
inc
sti
xor
je
addr16
adc
sbb
lds
std
cld
fimull
movsl
repnz
movsb
ret
push
add
testb
add
pop
arpl
mov
in
ret
cmp
or
fwait
dec
adc
sub
cs
imul
add
xchg
aad
shrl
in
push
adc
or
orl
mov
flds
into
aas
out
cmc
cli
mov
xchg
mov
jo
push
push
xchg
push
popa
and
mov
lods
jns
sti
mov
imul
ret
repz
rcrb
loop
mov
daa
repnz
add
xchg
lea
incl
iret
and
push
lahf
clc
mov
incl
fwait
int
cltd
imul
adc
lret
rol
ljmp
xlat
aad
sub
int3
sbb
rolb
xor
inc
or
jne
test
inc
dec
shll
lods
jbe
repnz
repnz
fstpl
gs
testb
dec
jns
mov
arpl
mov
jae
add
out
aad
loop
xchg
push
popa
sbb
adc
mov
hlt
repz
or
call
and
sbb
push
xor
xchg
lods
add
jbe
inc
in
clc
add
jle
ret
cmp
mov
push
add
sub
add
inc
mov
sub
xor
cmp
or
pusha
repnz
bound
xchg
daa
divb
aam
mov
and
aad
bound
or
or
int
pop
mov
pusha
xchg
sbb
lret
shlb
incb
das
mov
push
jmp
sub
loopne
fistpll
in
mov
lds
shrl
adcl
dec
out
xchg
jp
negb
pop
fisttpl
lret
jl
rorl
data16
or
add
les
inc
cmpsb
mov
scas
ret
and
cmp
lock
sahf
test
das
mov
clc
xor
pop
mov
ret
xor
test
and
add
mov
push
and
int
fwait
cmp
pop
mov
xor
pop
stc
fsubs
xor
repz
push
movd
dec
lods
data16
js
hlt
out
jmp
imul
cmpsb
orb
mov
inc
or
pop
mov
mov
push
in
outsl
jmp
push
or
inc
push
shr
sub
sub
adc
pop
cld
ret
mov
call
xchg
idivl
add
add
xor
or
inc
push
lds
sbb
decb
je
popa
loop
jno
shll
call
sbb
cld
test
shrl
cmp
enter
jns
pop
sahf
insb
shl
add
dec
dec
es
popl
cmpb
or
jle
test
out
fidivrs
push
lds
sub
push
and
dec
add
mov
mov
add
les
mov
xor
add
loope
ljmp
or
mov
jb
bound
in
fidivl
inc
jnp
movsl
and
adc
pop
fmuls
jne
mov
add
mov
inc
sbb
rcrb
jmp
add
andb
mov
scas
inc
jo
mov
mov
test
mov
adc
cld
sub
gs
rorl
test
add
add
xor
ljmp
mov
dec
adc
adc
leave
cli
cmpsl
adc
add
lds
loope
xchg
fildll
popa
es
dec
out
int
dec
subb
mov
jb
rolb
sub
xchg
lods
push
push
xchg
lea
lock
add
mov
test
lahf
loop
xchg
cli
push
test
pop
mov
scas
mov
pop
jg
addr16
adc
sahf
aaa
xchg
cmp
sahf
xor
mov
cmp
sub
push
and
iret
push
mov
inc
das
and
add
ficomps
aaa
xchg
sbb
ret
std
aaa
xor
jo
jb
or
leave
sub
inc
test
lahf
mov
testl
test
adc
movl
inc
outsb
inc
dec
rolb
dec
mov
lcall
mov
sbb
aaa
add
xchg
popw
mov
cmp
cmpsl
dec
cmpsb
loope
xlat
mov
sub
addr16
or
ljmp
stc
cli
jae
andb
push
test
pop
fsub
adc
dec
mov
jp
xor
jno
divl
adc
pop
jge
cmp
in
cmp
push
dec
lods
xchg
insb
mov
mov
fcomp
mov
xchg
cmp
stos
rol
movsl
fcoms
xor
or
shlb
inc
inc
fmul
pop
dec
repnz
dec
les
fucom
ret
pop
pop
xchg
dec
or
jecxz
or
cli
test
out
fs
add
lcall
clc
cmp
cld
scas
popa
in
in
lret
cmc
rcll
add
lods
or
mov
fwait
push
or
pop
cltd
inc
mov
pusha
nop
rcll
loope
insb
lock
out
dec
sub
jp
jmp
mov
out
add
adc
and
jno
push
pop
cmp
into
fldt
mov
repnz
xchg
push
adc
mov
shr
push
cmp
xchg
push
sbb
xchg
inc
mov
and
dec
aad
imul
subl
aam
aam
xchg
pusha
jl
test
inc
addr16
cwtl
add
nop
sti
adc
sbb
ljmp
lds
mov
ljmp
adc
jmp
or
aas
pusha
stos
stos
lret
shll
shl
and
lret
pop
js
ljmp
shll
lods
out
testb
sbb
lcall
shll
test
mov
mov
inc
push
daa
out
int3
sub
adc
xor
out
jbe
movsb
nop
imul
adc
aam
sub
ret
mov
jge
inc
pop
jle,pn
xor
cmpb
outsb
mov
repz
jecxz
pop
dec
add
nop
movsb
push
jg
jecxz
adcl
mov
leave
xchg
mov
jecxz
adc
daa
dec
sbb
xchg
aam
out
shll
lret
push
push
inc
inc
subl
fwait
imul
or
movsl
mov
and
popf
mov
mov
sub
and
pop
add
hlt
popa
aam
pop
jo
icebp
stos
xor
xor
mov
aad
pop
aam
lret
inc
mov
ja
loopne
xchg
jae
jle
sbb
lea
popa
loop
in
push
mov
sbb
sbb
xchg
jg
mov
popa
dec
xor
in
daa
jmp
rcrl
clc
push
enter
addl
aad
insl
jno
loope
jb
out
ja
inc
arpl
adc
sub
je
xchg
nop
xchg
jae
rorb
push
and
sub
xlat
add
inc
adc
sahf
shlb
push
add
xlat
mov
sub
or
ss
fiaddl
inc
inc
hlt
cmpb
dec
cltd
call
xor
cmp
outsl
enter
and
in
js
pop
mov
jle
insb
les
pop
int
ss
sub
gs
mov
gs
adc
dec
mov
lea
add
adc
mov
sbb
sahf
xor
mov
out
adc
dec
aas
xchg
adc
sub
int
inc
xchg
mov
in
xlat
cmp
inc
or
cmp
mov
ret
gs
ja
cmpsl
push
ror
sub
lods
add
popf
fstpl
cmc
sub
popa
add
bound
lahf
test
inc
fdivr
inc
pop
dec
mov
push
push
or
jmp
inc
rcrb
inc
xchg
loopne
testl
mov
pop
cmp
sbb
and
mov
or
clc
fcoms
xchg
add
jo
jmp
pop
int3
lahf
ds
xor
gs
sti
xor
pusha
xor
add
fadds
outsl
pop
scas
push
dec
cltd
pushf
add
adc
test
or
cmp
pop
lret
add
lds
lcall
adc
scas
popa
sti
mov
push
inc
xlat
repnz
push
lea
fisubrl
jo
inc
ja
sub
popa
and
ljmp
or
std
sub
ljmp
fistps
cmp
sbb
jp,pn
cs
dec
or
movaps
in
and
mov
iret
sbb
sbb
lcall
pusha
mov
aad
test
sub
popf
xor
sbb
imul
mov
call
sahf
lds
aas
jno
int
test
pop
pop
sub
dec
es
clc
mov
mov
pop
pushl
into
in
xchg
int
outsb
or
inc
test
add
mov
cwtl
cld
inc
push
cmc
sub
scas
sbb
scas
cmp
aad
pusha
or
adc
and
or
and
sub
ljmp
push
ds
push
ds
dec
in
cmp
sub
icebp
jae
rcrb
jno
sti
or
loopne
xor
movsl
xchg
mov
rcrl
dec
sub
insb
sarb
js
push
out
cmp
and
add
cli
lcall
sub
jo
push
cwtl
jns
pop
aam
push
inc
lcall
mov
mov
mov
inc
scas
and
aaa
mov
movsb
inc
sbb
xchg
mov
dec
notl
test
mov
ljmp
imul
data16
js,pt
cmp
in
xor
xchg
bndldx
into
mov
ljmp
mov
push
xchg
mov
arpl
ss
call
sbb
pop
std
pushf
cli
loope
jp
jae
loope
mov
sbb
and
jo
in
nop
clc
dec
mov
mov
adc
adc
hlt
xchg
icebp
lret
mov
sar
dec
xchg
dec
jl
aaa
adc
fcomi
icebp
pushf
pop
mov
sbb
adc
cld
outsl
cltd
nop
mov
dec
decl
mov
inc
or
push
mov
aam
sub
into
and
push
pop
sarb
lods
adc
xor
roll
add
sub
mov
in
sbb
ss
rorl
fdivr
clc
mov
clc
mov
outsl
sub
sarl
mov
adc
push
fld
push
movsl
fisubrs
mov
cmc
movsl
cli
repz
in
fdivs
daa
shr
testl
jno
les
mov
shr
rcl
je
or
arpl
cmp
push
sbb
cmp
xor
push
lods
aam
clc
ja
and
mov
ss
insl
rcr
jmp
dec
sub
dec
pop
push
sbb
sahf
lock
sbbb
jp
cmpsb
and
push
sbb
int3
sti
sub
dec
mov
mov
insl
and
out
rcll
cmp
jp
xor
jns
or
inc
aas
cmpsb
fcomps
cmc
shlb
hlt
sbb
cltd
or
xor
xlat
sub
arpl
jns
mov
push
lret
popa
fs
sub
jno
enter
cwtl
pop
fisubrs
aas
dec
lods
jns
cmp
nop
adc
adc
jg
lods
movsl
pop
inc
movb
push
sub
popf
mov
aas
stos
outsb
jb
xchg
xchg
cltd
mov
cmp
rolb
pop
jp
cmpsl
jnp
faddl
aaa
aas
cmp
test
ds
fbstp
icebp
rcrl
mov
fidivrl
sti
ds
or
hlt
insl
sub
or
sub
rolb
aas
insb
xor
mov
adc
fnstenv
or
jb
leave
iret
mov
and
cwtl
or
adc
popf
ss
adcl
insl
shll
jo
push
and
add
int3
or
int3
inc
sbb
jp
mov
adc
jmp
das
repz
lea
sub
cmp
les
stos
mov
adc
idivb
sahf
cltd
decb
xchg
cli
adc
push
add
int3
in
shlb
cwtl
push
pop
or
loope
lret
inc
fsubrs
dec
sbb
aas
mov
mov
mov
dec
mov
push
scas
scas
popf
inc
loopne
sbb
out
sbb
popf
int3
add
ret
jle
in
andl
pop
xorb
pushf
xchg
cmp
shl
icebp
mov
jge
sbb
dec
add
push
adc
mov
inc
push
cmp
fmul
xchg
in
mov
mov
xchg
fisubl
fwait
mov
mov
fptan
jno
or
dec
lret
xor
push
daa
add
mov
pop
mov
lret
pop
cmp
movsb
or
lods
pop
xor
mov
mov
insl
or
fildl
or
sbb
and
mov
jb
xchg
popa
mov
jmp
push
stc
pop
in
push
idivl
push
pusha
inc
aas
int
pop
lock
push
je
jae
xchg
imul
pop
lret
xor
push
push
pop
aad
movsl
mov
adc
mov
push
dec
ss
add
cmp
dec
dec
jno
fstl
pop
cmp
pop
jp
dec
fs
mov
in
mov
xchg
cmpsl
push
mov
or
and
cmpsl
jmp
scas
or
mov
test
ret
lods
add
js
jle
pushf
mov
jle
inc
idivl
lods
jnp
cmp
jae
ljmp
rclb
scas
addr16
stc
xlat
mov
movsl
pop
mov
arpl
stc
jecxz
mov
dec
pop
popa
push
enter
pop
mov
sub
out
cmp
mov
repnz
std
sti
insl
movsl
leave
loopne
idivl
pop
cmp
pusha
rcll
pushf
adcb
ljmp
out
int3
mov
push
mov
scas
inc
imul
daa
xchg
lds
pop
lret
jle
lret
outsb
mov
test
adc
or
jl
push
mov
xor
push
dec
movsb
out
movsl
dec
pushf
jns
data16
jae
mov
addb
testb
sbb
add
popf
leave
ret
nop
push
pop
pop
ljmp
sbb
mov
pop
push
jo
scas
push
mov
adc
sahf
repz
out
lcall
sbbb
pop
bnd
push
insb
and
jae
andl
adc
fdivs
push
into
jno
and
adc
pop
dec
int3
dec
ret
add
popa
adc
mov
test
int
ja
movl
repz
cmp
xchg
adc
adc
lods
popl
stos
addr16
test
adc
mov
sar
pushf
insb
push
or
sbb
outsl
mov
mov
mov
movsl
jns
cmp
outsb
dec
mov
jne
cmc
push
dec
in
pop
push
mov
mov
xor
lock
ljmp
push
into
imul
sbb
lret
sbb
xchg
sub
scas
push
movsl
cmpsl
push
push
adc
inc
pop
pop
jae
loopne
sbb
not
push
or
fidivrs
mov
or
iret
mov
pop
add
mov
pop
divl
std
pop
jg
xchg
mov
mov
sbb
cli
loopne
enter
pop
ja
js
popa
mov
push
enter
clc
mov
vaddsubpd
dec
pushf
inc
icebp
inc
rcr
arpl
jl
jl
ss
and
xchg
call
lret
leave
gs
cs
js
imul
or
dec
outsb
mov
sub
push
loop
xchg
add
cmp
xchg
sbbl
int
icebp
push
movsb
cmp
add
outsl
mov
xchg
sbb
loopne
hlt
pop
mov
sti
int
js
cmp
sbb
pop
xchg
dec
cmovp
mov
mov
dec
aaa
jnp
ja
into
shr
pop
add
mov
cmp
andb
add
sbb
pop
inc
loopne
lahf
fisubl
pop
outsl
test
xchg
jbe
out
data16
int
inc
movsl
enter
cmp
pusha
mov
fwait
pop
scas
fadds
loopne
mov
lds
outsb
lahf
mov
push
push
aam
imul
mov
out
pop
sub
add
xor
cmp
mov
sub
lods
out
out
inc
push
mov
mov
adc
pop
dec
ja
gs
jle
out
xchg
cwtl
mov
movnti
dec
fists
fwait
pop
addb
inc
and
daa
loope
jg
outsl
inc
sub
dec
jmp
sti
ja
shl
adc
mov
test
add
mov
add
jnp
sbb
push
pop
push
nop
inc
std
lods
fwait
xor
push
dec
jb
fldl
sbb
xor
cmpsl
xor
push
or
ret
dec
dec
loop
mov
xor
add
dec
mov
mov
in
repnz
push
ljmp
pop
rorb
cmpsl
sub
inc
jnp
jmp
or
jno
dec
cmp
sub
push
in
inc
jmp
cmc
mov
popf
adc
jg
cmpsb
lods
pop
mov
shr
test
rcr
ret
mov
neg
inc
mov
cmp
and
sub
mov
fwait
push
xchg
mov
cmpsb
fldt
add
add
call
push
xor
cmpb
mov
pop
pop
jp
cld
dec
cs
and
f2xm1
lock
xor
testl
cmp
mov
xchg
cmp
and
sub
lret
or
jmp
pop
mov
xchg
fwait
jns
push
mov
lea
call
dec
mov
adc
dec
or
rcrl
shrl
mov
mov
out
jno
lods
push
push
jp
roll
jo
js
mov
test
inc
mov
fwait
mov
and
mov
daa
mov
or
cmp
negb
xor
dec
jl
sbb
cmp
movsl
enter
jmp
in
dec
mov
sbb
pop
stc
stos
cmp
jg
or
mov
jp
mov
mov
arpl
sub
lods
sub
mov
jns
or
pop
insb
xchg
cmpsl
add
and
stos
lret
lret
add
sbb
sahf
mov
pop
dec
out
mov
dec
or
mov
cli
pop
jbe
clc
or
mov
cmp
inc
andl
xor
pop
xor
xchg
dec
scas
pop
repz
push
bound
jl
lret
dec
mov
out
int3
add
inc
repnz
jae
imul
iret
pop
lcall
mov
adc
cmc
aam
pop
stos
lret
push
movsb
and
jg
mov
ja
jp
push
pop
in
test
adc
int
dec
inc
fildll
movsb
mov
adc
cmp
cmp
cmp
sub
mov
cmp
dec
pop
xlat
sbb
sarb
cmp
jnp
lcall
xor
pop
adc
outsb
lea
xchg
cld
sbb
mov
aas
pop
cmpsb
jecxz
jmp
cmpsl
enter
push
rcrb
rcl
pop
and
lahf
testb
jmp
pop
data16
lods
jl
cmp
sbb
lcall
std
fdivrp
fwait
in
loopne
cmpsb
xor
jle
pop
jne
je
pusha
out
aad
jl
mov
mov
push
repnz
aaa
sbb
push
or
or
je
lret
pushl
xor
sbb
sbb
pop
adc
jg
jp
imul
mov
aaa
push
mov
ret
and
lods
sbb
sti
push
xchg
out
sub
xchg
inc
bound
andb
push
lahf
les
fidivrl
dec
scas
jae
sbb
ljmp
movsl
dec
push
fnstenv
pushf
add
sbb
cld
mulb
in
push
push
stos
es
into
out
test
xchg
shrb
scas
pop
xlat
hlt
inc
cmpsb
mov
lods
dec
out
arpl
stos
xchg
sub
loop
je
fmuls
lret
cmpsl
and
lods
cmp
scas
mov
enter
inc
fdivrl
out
inc
dec
pop
dec
sbb
and
xchg
mov
jge
jmp
xchg
sbb
ret
sub
jmp
outsb
push
or
mov
push
fimull
ljmp
ljmp
adc
lret
rol
add
je
jae
sub
aam
nop
and
out
jmp
sahf
shrl
and
cmovl
js
aad
mov
lock
pop
mov
xor
das
xchg
dec
xchg
jo
adc
add
inc
adc
xor
mov
xlat
daa
fistps
push
fisttpll
pop
sbb
sbb
sub
or
jmp
stc
jle
xor
jbe
aas
arpl
imul
mov
mov
inc
pop
lods
stos
cmp
iret
lahf
mov
ret
inc
xlat
jnp
add
inc
fbstp
xor
lods
fs
jo
aad
fcompl
xchg
and
mov
insb
xor
call
sbb
iret
mov
dec
popf
adc
mov
mov
je
add
call
ljmp
out
add
mov
fdivrl
dec
mov
fsubs
xchg
icebp
in
call
in
mov
push
and
add
pusha
sub
popa
lcall
repnz
mov
lods
pop
xchg
int
pop
jae
xchg
add
cmc
cmpsl
dec
add
inc
mov
hlt
dec
mov
movl
fwait
dec
xchg
test
add
pop
mov
and
pusha
dec
add
dec
or
xor
or
adc
jl
add
test
fidivrs
jns
daa
lods
push
mov
sahf
notl
fadds
xchg
inc
sbb
jnp
push
mov
test
out
rcr
dec
jg
stc
pop
pop
jnp
jle
mov
xchg
pop
push
hlt
push
loope
aaa
std
xchg
pop
mov
mov
in
pop
pop
mov
ficompl
out
call
clc
ljmp
xor
mov
bound
pop
imull
int
xchg
pop
in
mov
or
jecxz
pop
sbb
inc
cli
pop
adc
dec
jg
imul
cmp
test
mov
add
pop
xor
fisubrs
test
into
std
xor
popa
and
or
mov
lds
lods
mov
dec
es
add
push
cld
cmc
mov
xchg
movsl
xchg
mov
add
mov
stos
nop
pop
push
clc
testb
cmp
fidivrs
mov
in
sbb
dec
add
xchg
pop
mov
mov
addr16
scas
daa
test
inc
cwtl
xor
dec
ret
cmp
es
xchg
aas
sti
or
mov
fcomp
arpl
rcll
push
mulb
imul
dec
or
xchg
or
fs
in
loope
and
cld
and
mov
xchg
xor
rclb
jl
jo
bound
iret
xchg
inc
xor
in
jb
adc
sbb
cmpsb
ret
push
mov
mov
mov
int3
insb
leave
fadds
and
mov
pop
dec
in
flds
add
aas
xchg
pushf
enter
dec
jno
xchg
mov
xchg
imul
repz
leave
mov
cmp
aam
lock
test
pop
dec
xchg
adc
xchg
xchg
es
inc
loopne
bound
or
repnz
sbb
or
mov
sub
mov
iret
pusha
ficompl
insb
popf
adc
lret
mov
pop
fisubrs
roll
and
xor
or
add
mov
inc
sub
movsb
sbb
inc
ss
pop
mov
fs
loope
dec
fidivrs
dec
pop
sbb
test
lods
into
stc
iret
jns
inc
shll
arpl
sub
lahf
leave
mov
test
push
or
mov
loopne
loope
cmp
xchg
aas
scas
sbbb
cli
add
pop
pop
mov
in
push
or
adc
clc
sti
xor
adc
icebp
out
out
ret
mov
lods
daa
pop
sub
icebp
add
mov
dec
jle
xor
pop
sarl
pop
lahf
incl
movl
xchg
adc
and
loopne
pop
pop
cli
push
mov
shll
and
dec
mov
lcall
push
sub
pushf
fwait
in
or
ja
mov
out
jbe
je
rol
pop
mov
or
pop
outsl
xchg
repz
mov
adc
aas
inc
call
xchg
and
push
pushl
leave
fs
jmp
push
xchg
mov
in
pushf
xor
or
movsb
roll
inc
out
cltd
mov
or
jl
push
sub
mov
out
jne
jno
call
fisttpll
or
out
lret
repnz
hlt
jns
fucomp
stos
pop
loopne
xor
push
xchg
mov
inc
dec
fs
sbb
dec
repnz
adc
adc
xchg
and
stc
ret
andb
sub
mov
adc
addl
repz
and
je
jecxz
rorl
push
cld
push
rorl
jne
rolw
push
xchg
fwait
jmp
dec
cli
add
xchg
cli
imul
sahf
push
mov
cld
fldenv
dec
ret
mov
push
mov
fbstp
inc
dec
dec
xchg
call
mov
fsub
xor
jbe
loope
out
and
xchg
clc
int
in
sbb
insl
andl
mov
das
and
or
cs
in
lret
mov
lods
stc
outsb
mov
mov
xlat
pop
jle
mov
adc
iret
mov
jge
iret
xchg
sarl
fs
sub
fstl
shlb
mov
sbb
sbb
and
pusha
and
out
lods
push
jno
les
pop
adc
xlat
mov
jp
sarl
out
sbb
adc
xor
add
in
xlat
push
js
aaa
punpckhbw
test
popf
jb
icebp
outsb
push
testb
test
push
pop
pushl
ret
cmp
push
imull
push
aas
and
adc
xchg
addr16
push
xchg
pop
xlat
push
cli
inc
inc
incl
dec
sub
pop
mov
fwait
pop
lock
jecxz
jecxz
iret
popf
imul
inc
push
mov
pop
sub
subb
iret
pop
xor
outsb
dec
and
xrelease
scas
lret
jecxz
mov
je
cmp
mov
movsl
imul
push
inc
push
aaa
lods
nopl
xchg
out
fistpl
xchg
cmpsb
loop
pop
addl
hlt
stc
xchg
insb
loop
jae
aad
fstpl
push
sbbb
hlt
inc
mov
xor
insl
int3
fcmovb
and
hlt
and
xor
sbb
cmp
lods
test
fildll
iret
mov
pop
bnd
loop
and
sbb
pop
and
call
sub
and
mov
nop
lcall
pop
mov
out
xchg
or
mov
stos
mov
mov
xchg
sub
imul
xor
push
jno
les
sbb
xchg
imul
pop
inc
fcmovb
sbb
and
push
cmp
mov
jns
fisttps
out
jmp
fsubs
test
or
outsl
mov
fs
push
dec
or
lret
sub
scas
outsb
div
or
mov
ret
adc
test
mov
pushl
or
dec
movsl
sbb
push
xor
sbb
dec
mov
inc
sti
add
xchg
insl
out
mov
repz
xchg
cmp
jns
mov
cmp
lock
icebp
adc
sub
inc
adc
insl
pop
jmp
sub
and
mov
and
or
ret
adc
cmp
pop
lret
sbb
push
mov
test
push
aas
xchg
xchg
adc
faddl
inc
outsl
repz
in
outsb
cmpl
int
lds
scas
mov
mov
lds
aad
jb
divb
out
cmpsl
cmpsb
dec
pop
in
or
enter
stos
imul
mov
add
push
mov
ds
fcomip
and
add
je
leave
sub
popa
jo
lahf
sub
ds
inc
or
sbb
test
ss
and
in
jge
shlb
in
push
xchg
push
insb
dec
mov
pop
fldl2e
inc
fcoms
push
or
mov
insl
xchg
adc
loopne
andl
adc
lret
jmp
mov
data16
jno
addl
lcall
mov
int
imul
sub
push
or
mov
repz
pop
imul
add
lret
xchg
cltd
adc
sbb
outsl
mov
outsb
mov
int3
lods
sti
fimull
ret
je
mov
and
jge
and
cwtl
push
xor
add
shl
sub
ja
cwtl
popa
out
hlt
popf
popf
cli
das
or
loope
or
or
movswl
jle
into
outsl
add
pop
js
loopne
es
dec
clc
xor
adc
xor
mov
cmpsb
adc
or
dec
out
aaa
scas
std
dec
popf
scas
mov
sbbl
sbb
lret
scas
xchg
inc
insl
fdivr
loope
pushf
lods
sbb
pop
lods
adc
dec
xchg
ds
dec
test
bound
dec
or
or
lret
add
std
in
iret
mov
jne
mov
mov
jae
xchg
mov
inc
insb
cmpsl
jb
xchg
adc
jp
push
xor
xor
test
inc
leave
dec
pop
push
jle
repnz
enter
movsl
fsubl
and
inc
lock
arpl
push
xchg
mov
ja
imul
cmpsl
out
xor
test
add
iret
jns
stos
mov
int3
test
insl
xchg
test
daa
int3
outsl
or
dec
sti
stos
shlb
mov
out
or
lods
push
jle
mov
scas
inc
enter
add
jecxz
dec
ret
std
sub
aas
in
jno
sbb
inc
jp
cmp
pop
shlb
and
leave
push
sbb
xchg
shll
dec
sbb
xchg
lds
cs
or
jmp
movaps
loopne
xchg
pusha
dec
lahf
sub
outsb
adc
lock
jb
cmp
cmp
mov
test
inc
sbb
pop
dec
cmpsb
mov
mov
lcall
pop
mov
sub
mov
inc
push
fcompl
dec
pop
ja
lods
jle
and
aam
sub
enter
es
jne
mov
cmp
cmp
mov
dec
push
in
imul
push
in
jo
and
mov
aam
mov
dec
inc
js
or
sahf
dec
out
dec
pop
test
jnp
sbb
mov
iret
in
int
cmpsl
and
adc
sbb
data16
cmp
push
sub
ljmp
test
addr16
inc
clc
or
jg
and
sbb
repz
insb
cld
lds
push
es
nop
inc
cs
xchg
lret
cmpsb
xlat
call
and
fld
pop
inc
int3
cs
int
cld
pop
jnp
lcall
imul
jmp
cmp
sbb
ret
orl
insb
lcall
mov
adc
push
inc
scas
scas
pushf
jmp
js
inc
xchg
adc
movsb
xor
or
fstl
arpl
cmpl
pushf
lcall
ret
lods
mov
daa
mov
push
lret
mov
aam
mov
aas
inc
xchg
push
iret
inc
adc
and
aas
pop
push
shll
pop
sahf
pop
sub
jge
pminub
aam
scas
outsl
push
sarl
sar
ror
jl
movsb
mov
popf
mov
mov
dec
or
loop
or
dec
fs
and
in
cmp
dec
cmp
push
pop
std
cmpsb
loop
push
jp
and
bound
mov
dec
lahf
popf
add
sbb
sbb
pusha
roll
pop
or
push
into
repnz
add
add
loopne
jno
clc
dec
jp
insb
sarl
jle
lock
fsub
aaa
out
mov
xor
xchg
mov
mov
leave
shrb
push
push
cmp
sbb
push
mov
mov
inc
inc
mov
cli
addr16
movsl
jge
in
fs
xchg
mov
sbb
xlat
cmp
jno
loope
test
cmp
sub
dec
scas
push
out
push
roll
clc
in
sbb
pushf
fiadds
cmp
cli
sub
gs
aad
add
je
pop
lcall
std
jno
aad
repz
xchg
adc
pusha
mov
in
or
pop
mov
push
mov
or
push
movsb
cwtl
xchg
cmp
dec
fildll
pop
fcoml
push
and
jne
ds
mov
adc
aas
xchg
and
jo
imul
cwtl
xchg
adc
scas
xchg
xor
ja
call
repnz
lahf
or
int
rorl
inc
jb
or
push
lcall
fidivrs
inc
xor
ja
dec
xchg
lret
jmp
lods
stos
inc
sbb
mov
or
adc
cmc
mov
data16
lahf
lods
add
pop
push
jecxz
push
cmp
pop
movsb
mov
addr16
mov
pop
aam
xchg
sahf
push
mov
cmpsl
push
in
or
push
cli
inc
pop
pop
outsl
ret
inc
loope
jl
les
sbb
inc
iret
in
insl
outsl
cmpsb
jns
sarl
stos
push
xlat
pop
pop
pop
in
jno
dec
xchg
inc
clc
push
test
sarb
lds
cs
adc
push
shll
loope
or
cmp
add
and
shrb
movsl
inc
add
mov
sti
add
xchg
scas
and
scas
pop
popf
mov
cmpsb
mov
nop
out
adc
scas
push
dec
sub
and
mov
push
popf
in
out
mov
add
hlt
sub
mov
push
stc
in
or
xor
fsubrs
ret
pop
pop
fistpl
cmp
ss
pop
push
repz
mov
push
dec
insb
into
test
ds
shl
mov
adc
arpl
mov
dec
add
outsl
adc
repnz
pop
cmp
enter
sub
mov
and
push
andl
xor
test
popf
mov
into
lods
jbe
xchg
ljmp
movsl
sbb
adc
orl
xchg
fstps
adc
sbb
inc
int
jge
arpl
clc
mov
jl
sub
inc
cmp
dec
andb
in
xor
jne
test
or
inc
xchg
stc
pop
iret
arpl
jle
push
test
add
xlat
inc
mov
scas
mov
inc
jne
jle
pop
int
aam
imulb
mov
pushl
xchg
mov
or
or
pop
mov
xchg
repnz
and
scas
sbb
cmpsl
in
fwait
sbb
outsl
pop
fadds
or
in
icebp
dec
test
xor
ja
jne
and
and
xchg
in
cmpsb
sbb
int
dec
pop
in
mov
add
or
adcb
psubusw
lahf
out
shl
mov
xlat
rcr
insl
repz
loope
fcompl
test
xchg
mov
adc
mov
loopne
add
sub
lea
pop
stos
mov
sub
dec
pop
jb
mov
popa
pop
xchg
clc
loope
xchg
and
je
in
into
push
mov
jns
in
pop
sub
cmp
aam
cmp
or
adc
hlt
out
jge
mov
shrb
addr16
add
push
sbb
stos
cmpb
fisubrs
fisubs
inc
fldenv
dec
leave
mov
inc
sarl
mov
in
stos
dec
add
rclb
push
or
inc
mov
popf
lret
add
flds
jmp
mov
mov
rol
hlt
dec
jo
out
xchg
adc
icebp
pop
addl
mov
nop
bound
int
mov
imul
stos
insb
mov
or
ljmp
outsb
sub
mov
inc
push
sbb
ficoml
and
adc
ss
or
jl
inc
iret
test
sbb
inc
int3
dec
mov
arpl
mov
and
leave
jne
fcomp
and
decb
cmpsl
mov
cmp
xlat
sbb
neg
daa
xchg
pop
xchg
push
in
and
movsl
and
push
out
jge
lret
add
xor
aaa
lods
push
jmp
pop
cmpsb
mov
je
int
outsb
push
in
adc
sub
pop
scas
data16
mov
push
adc
xor
dec
or
rcrl
lcall
mov
data16
mov
sahf
inc
out
sub
push
pop
in
out
xlat
sub
cmc
test
inc
in
xchg
mov
jle
pop
pop
cmpsl
loopne
add
lahf
test
mov
in
lds
jle
push
std
adcl
cli
mov
and
mov
and
sbb
xor
out
subb
sbb
dec
mov
div
xor
and
jmp
jbe
cld
scas
sub
dec
xor
repnz
ds
shl
out
aad
jno
add
inc
inc
and
daa
idiv
mov
sarb
mov
dec
sub
xor
dec
xor
pop
rcrb
or
imulb
mov
push
xor
adc
pushl
aam
push
dec
xchg
icebp
repz
fisubs
jg
mov
sub
adc
adc
jne
jb
pop
jne
mov
dec
xor
mov
es
cli
mov
push
les
stc
loop
aas
daa
push
les
aam
addr16
cmpsl
cmp
gs
cli
pop
or
insl
pusha
sbb
cmc
mov
sti
ljmp
imul
data16
add
push
adc
enter
inc
es
jnp
xor
mov
je
mov
ss
jp
cli
repnz
jge
mov
int
dec
mov
add
out
fildll
lret
cltd
mov
mov
faddl
cmp
mov
int3
pop
inc
out
rolb
add
jne
cmpsl
loop
xlat
das
ja
loope
cmc
ss
insb
xor
mov
jmp
push
ja
daa
or
insb
imul
cmp
and
test
adc
mov
xchg
ret
sbb
fldcw
xchg
or
xchg
sub
mov
mov
lds
pop
js
es
fld
out
jle
pop
xor
xor
jbe
dec
cmpsb
ret
sub
push
pop
loop
xchg
and
clc
cmp
xchg
sahf
sahf
lahf
dec
fmuls
dec
les
mov
into
sti
adc
push
dec
push
sbbl
add
in
push
stos
mov
enter
fisubl
popa
std
shrl
movsl
and
push
cmp
inc
or
aad
and
mov
xchg
sbb
mov
fimull
cmpsb
push
in
add
imul
roll
enter
push
adc
pop
and
mov
mov
inc
lea
pop
pop
loopne
push
mov
jnp
mov
popf
out
flds
lea
int
mov
sub
add
stos
test
mov
loopne
adc
popf
mov
sub
daa
xchg
bound
fbld
mov
xlat
cld
sub
lock
nop
cmpxchg
mov
pusha
test
push
pop
cmp
scas
fucomi
jns
cltd
cmp
fcmovb
fldl
fiaddl
aad
lret
xor
cmc
addr16
roll
orl
lahf
je
fdiv
push
ficoml
dec
ss
aam
mov
shrl
out
int
ss
inc
ljmp
lcall
gs
test
aas
push
outsl
xlat
mov
xor
xlat
inc
mov
xor
jb
sti
aaa
jmp
push
ror
dec
sti
sarb
pop
push
ss
mov
mov
cmpsb
sti
add
js
mov
imul
pop
or
xchg
pop
movsb
xlat
cmp
jge
mov
push
jmp
ja
pop
push
push
mov
xor
or
mov
push
daa
sbb
adc
pusha
mov
stc
mov
jecxz
mov
ss
fs
frstor
idivl
inc
stos
mov
xor
popa
mov
orl
push
xchg
divb
insl
mov
jle
push
adc
pop
jle
daa
or
lea
fcmovne
insb
clc
mov
mov
lret
dec
sub
mov
lret
pop
shl
add
cwtl
push
out
lcall
and
divl
pop
mov
gs
cs
rcrl
aas
filds
insb
dec
fsubrl
push
pop
ret
push
lds
pop
jo
or
push
xchg
in
dec
pop
into
mov
or
fsubr
sahf
and
sbb
icebp
jle
sbb
out
popf
jg
and
in
push
dec
ret
push
xor
ljmp
inc
pop
jmp
popa
xor
stc
mov
stos
and
push
push
lds
pop
cmc
inc
pop
jmp
daa
test
and
cmpsl
sbb
sbb
bound
xchg
push
dec
sbb
add
int3
xor
fiadds
sub
jb
and
repnz
dec
fisubs
bound
dec
xchg
les
lret
jne
xor
std
fwait
cmp
push
xor
lds
cmp
js
aaa
inc
out
adc
add
daa
ljmp
sbb
mov
inc
adc
aam
add
lcall
rcrl
or
pop
adc
jl
test
enter
stc
pop
pop
lock
in
ds
jmp
add
inc
loope
cld
ds
dec
jge
mov
sbb
xchg
dec
inc
fwait
jle
leave
cmp
pop
ss
pop
repnz
pop
mov
fldt
je
es
push
stos
ds
in
je
jb
mov
mov
fisttpl
mov
pop
jo
inc
xchg
sub
mov
pop
data16
mov
push
test
pop
add
add
mov
sbbl
mov
sub
iret
call
insb
sub
mov
and
out
sbb
repz
cmp
movl
add
das
or
push
push
fidivrl
addr16
mov
sbb
push
inc
push
movsl
scas
dec
inc
out
loop
push
jns
mov
outsb
insl
test
add
arpl
push
imul
xchg
pop
and
scas
sbb
js
pop
cwtl
sbb
stc
es
int3
jb,pt
xchg
test
mov
daa
mov
xchg
inc
sbb
dec
or
iret
enter
pop
push
adc
stos
jle
cmpsb
mov
notl
mov
and
and
dec
mov
xor
inc
or
dec
mov
sub
xor
fsubs
fistpll
mov
pop
mov
xchg
movsl
jmp
mov
fsubrs
es
pushf
and
inc
sbb
cld
fisubrs
mov
iret
movsb
in
jbe
imul
xor
scas
mov
dec
xchg
in
bound
xchg
add
add
sbb
sbb
ljmp
adc
fldl2e
mov
inc
adc
push
cmp
pop
leave
orl
push
xchg
mov
lds
imull
xchg
ja
js
test
push
filds
in
inc
outsb
pop
dec
dec
push
scas
mov
sbb
ret
cmp
pop
stos
push
inc
icebp
jno
mov
push
into
repnz
xchg
dec
push
jo
xlat
lock
mov
dec
std
nop
movsl
jle
test
mov
repz
dec
shl
or
dec
js
add
sub
jbe
push
mov
jns
push
rcr
adc
scas
push
outsb
mov
adc
sbb
fadd
add
jmp
lret
pop
hlt
int
mov
call
aam
cmp
pop
adcb
icebp
ja
lret
push
pop
cmp
bswap
or
addr16
pop
jle
jbe
cmpsb
das
or
add
lahf
clc
dec
bound
pop
mov
loopne
arpl
sti
jmp
inc
icebp
or
ljmp
pop
dec
pop
scas
lea
dec
mov
outsl
xchg
popa
mov
popa
je
xor
cmp
loopne
push
das
mov
test
pop
push
fldl
nop
dec
fs
adc
jg
test
into
stos
push
inc
pop
cwtl
jmp
push
rol
cmpl
push
xchg
pop
int3
loope
jmp
dec
pushf
inc
hlt
jae
jge
pop
pop
movsl
adcl
cmp
or
cmp
xchg
pop
jns
stos
sbb
mov
cltd
je
aaa
sub
adc
repz
mov
imul
push
jno
shr
pop
xchg
fiadds
mov
loope
shlb
sbb
xchg
pusha
cmp
sbb
mov
movsb
cwtl
cwtl
mov
dec
pop
jbe
jo
pusha
outsb
js
loope,pt
mov
ret
cmp
jge
inc
mov
xor
insb
stos
xchg
sti
jmp
fstpl
ret
and
cmp
imul
and
adc
ror
ret
jp
jge
xor
js
and
cltd
mov
out
jb,pt
mov
xchg
cmp
lods
xor
xor
lcall
ds
leave
cmp
xchg
shll
nop
xchg
jge
and
pushf
stc
test
add
icebp
mulb
ret
push
adc
cmp
ret
cmp
scas
lcall
jecxz
jl
les
icebp
jecxz
out
sbb
sub
lret
or
inc
cmp
jg
xor
pop
cltd
scas
cmp
sub
and
or
iret
lahf
pop
clc
test
sub
outsl
mov
push
in
out
fsub
shr
push
mov
pop
pop
std
mov
or
pop
into
cmpsb
popa
cmp
push
or
repz
scas
sub
les
xor
jae
shl
andl
add
movsb
mov
sbb
cmc
mov
or
imul
cwtl
mov
faddl
mov
fwait
in
dec
enter
inc
jge
lods
std
lods
call
test
pop
pop
cmp
add
lahf
mov
sub
jmp
sub
xorb
push
cli
and
jne
mov
fstps
imul
loop
sbb
jge
pop
imul
xchg
mov
adc
ret
lods
jg
sbb
and
movsl
pop
sbb
pop
mov
mov
sbb
inc
xchg
fcomps
mov
insl
pop
test
out
nop
jno
notl
adc
adc
or
xchg
pop
and
insl
imul
nop
pop
fistl
mov
ljmp
in
xor
lcall
jne
add
andb
je
roll
ss
inc
ret
ds
sbb
or
in
enter
ficoms
fmuls
mov
xchg
push
icebp
aad
leave
jge
jnp
ret
push
dec
enter
imul
lar
sub
mov
rorb
push
hlt
hlt
in
and
or
hlt
les
repnz
out
nop
add
inc
out
xlat
test
pop
or
and
aaa
and
mov
scas
and
int3
iret
ss
jp
mov
fsubl
push
cld
repz
dec
insb
adc
cmp
stc
add
sbb
adc
decb
jl
dec
adc
sbbl
add
jnp
leave
js
lods
xor
jl
adc
mov
sub
add
mov
push
sub
ret
push
push
or
lds
jmp
sbb
into
add
cmc
push
cmc
mov
jne
sub
ja
mov
mov
inc
jno
jg
jl
aaa
mov
bound
pop
xchg
push
adc
daa
mov
cmp
je
push
stc
xor
pushf
loope
jge
shrb
xor
or
addl
jae
rcrl
lods
lods
xchg
loope
fldl
nop
jns
jno
jg
cli
mov
mov
cltd
sub
pusha
and
inc
pop
mulb
sub
push
lcall
mov
xor
pusha
outsl
sub
clc
outsl
dec
and
pusha
sub
orl
and
mov
neg
leave
inc
add
aad
inc
test
dec
nop
cwtl
and
outsb
sar
pop
cs
into
cmp
or
gs
fcomp
dec
cli
subb
inc
sbb
lock
movsl
nop
mov
lock
das
push
ds
mov
js
movsb
in
sbb
sti
pop
jne
xchg
mov
dec
push
add
sahf
adc
mov
jp
fcmovb
lcall
xchg
xor
add
daa
ret
iret
test
loope
add
in
jbe
cmpsb
or
pop
imul
cmpsl
loope
fisttps
fdivrp
xchg
add
decb
fcmovnb
mov
inc
cmp
push
xor
dec
mov
popf
mov
xor
sub
mov
sub
rcrb
push
fsubrl
cmp
movlps
mov
adc
adc
mov
ret
or
add
jp
pop
jnp
ja
or
mov
pop
in
jae
sub
jg
bound
sahf
and
sub
stos
pushf
xor
in
icebp
push
pusha
push
xor
ljmp
lahf
inc
ficoms
subl
mov
dec
shl
or
mov
out
pop
mov
insb
pop
inc
test
adc
lds
clc
and
scas
jl
xchg
adc
aaa
out
aad
gs
nop
xor
in
repnz
xor
or
daa
jae
push
icebp
out
mov
and
and
or
push
mov
nop
xchg
adc
repz
dec
mov
ljmp
pop
adc
cmc
sub
mov
mov
xchg
and
or
fldl
shrl
or
or
pushf
xchg
in
popf
ret
cmpsb
pop
sbb
mov
jo
int3
adc
ljmp
xor
jbe
cmpl
rclb
js
push
jne
jne
nop
notb
mov
scas
mov
cmp
push
imul
sahf
lds
ret
inc
test
mov
sbb
daa
cmp
xchg
call
cmp
adc
ret
adc
or
add
mov
cmp
inc
dec
xchg
stos
xor
jnp
sbb
sbb
push
dec
and
jno
call
fnstcw
mov
push
nop
xor
sbb
ret
inc
sbb
adc
sub
mov
push
scas
testl
sub
lods
into
arpl
lea
cmpsl
flds
push
sub
movsl
adc
scas
jno
inc
xchg
mov
es
xor
inc
mov
repz
fmuls
addr16
push
fstps
leave
mov
outsb
clc
mov
dec
push
jae
adcb
aas
jns
sub
shll
or
or
mov
loope
insl
lcall
pusha
dec
mov
sub
cs
and
add
rcl
movsl
faddl
dec
shr
repz
insb
jb
out
xchg
sbb
xlat
push
ret
jno
add
daa
pop
push
jae
ret
dec
stc
cmp
inc
lds
in
movsl
leave
mov
je
data16
frstor
popa
cmp
shrl
ret
pop
pop
and
xor
hlt
pop
xchg
scas
lds
push
je
pop
loop
cltd
ljmp
inc
xor
inc
stos
pop
mull
ret
inc
mov
jp
ss
shlb
fcmovbe
lods
cmpsl
sub
push
inc
adc
pop
mov
fistpll
mov
inc
xor
xor
or
mov
dec
xor
out
push
rcl
xlat
mov
lret
fdivrl
push
add
mov
out
out
pop
mov
scas
push
in
ljmp
js
push
in
subb
hlt
imul
xor
out
mov
jnp
sub
mov
jge
stc
mov
dec
or
mov
aas
or
adc
mov
xor
lret
sub
lret
stc
into
inc
mov
test
out
push
add
mov
enter
rcr
pop
xor
adc
sub
mov
xor
add
sbb
repnz
call
outsl
xchg
dec
push
orl
inc
js
cli
insl
les
inc
mov
xor
pop
jecxz
ljmp
sub
imul
je
pop
mov
outsl
lret
mov
pushf
adc
insb
sbb
repz
bound
sbb
xor
addl
loope
sub
inc
stc
repnz
jmp
mov
ljmp
jns
mov
test
sbb
pop
mov
adc
loop
mov
add
or
push
sub
cltd
xchg
es
mov
xor
sbb
push
jl
fs
addr16
stos
insl
cmp
lock
icebp
clc
hlt
push
add
or
jle
inc
imul
aaa
push
jge
sets
rcl
lods
pushf
mov
xor
xchg
ja
dec
pop
xchg
pop
lcall
arpl
aad
fyl2xp1
test
or
xor
subb
aaa
pop
and
clc
adc
fisttps
leave
icebp
scas
scas
jnp
mov
shll
sub
push
push
pop
xor
mov
cmp
jle
mov
cld
jae
adc
shll
xchg
sbb
mov
and
out
mov
cmp
jbe
stos
jmp
xchg
daa
and
lock
insb
fsubrs
in
pop
dec
cmp
sahf
pushf
int
lods
bound
pop
push
into
mov
sbb
cmpsl
cmp
sub
icebp
out
or
inc
inc
jae
jns
ja
fdiv
jno
ret
pop
pop
xor
sub
mov
mov
andl
push
adc
and
ret
dec
jae
shrb
fcmovb
stos
cmpsl
xchg
lcall
add
lcall
sbb
xor
sub
xlat
int3
pop
test
mov
and
out
loop
push
outsl
xchg
xchg
xchg
xor
aaa
dec
mov
popf
push
mov
jle
xor
hlt
xchg
out
repnz
pop
lret
or
push
xor
loope
lods
adc
pop
insb
pop
xchg
push
test
push
fnstenv
pop
clc
fs
packssdw
mov
xor
inc
jle
xor
mov
bswap
flds
xchg
lret
mov
inc
aam
mov
cmp
add
jg
push
jecxz
or
ret
cwtl
dec
iret
pop
fnsave
cld
mov
js
push
pop
int3
insl
ljmp
sub
movsl
in
in
outsl
repnz
stc
lahf
and
aam
dec
test
dec
loope
add
fldcw
and
sub
pop
cmp
adc
scas
cmp
movsb
add
insb
repnz
cmp
and
jle
pop
pop
nop
cmp
pop
cmp
add
mov
mov
bound
sbb
divb
xor
pusha
push
test
out
sahf
push
aam
and
xchg
fdivrl
leave
lock
add
push
sbb
out
cltd
in
cmp
jbe
iret
das
imul
inc
inc
xchg
in
cmpsb
dec
je
sub
aas
cs
lret
cmp
mov
loope
ret
mov
jae
mov
adc
adc
pop
xor
test
xor
ja
dec
or
jecxz
adc
nop
sarb
stc
rcrl
sub
mov
cmc
adc
xchg
enter
lret
stos
insb
xor
adc
stos
movsl
sbb
add
push
sub
adc
iret
jl
in
sub
and
ss
fstpt
adc
fstpl
xchg
fisttpl
inc
insl
jmp
lcall
mov
mov
jno
inc
imul
insl
rclb
sub
mov
fnsave
frstor
pushl
jecxz
insb
pop
je
pop
xchg
xorl
leave
aaa
push
ja
insl
ja
daa
xchg
cltd
jle
jecxz
pushf
mov
dec
mov
fmuls
enter
sbb
pop
mov
out
sub
js
push
pop
mov
xchg
or
or
leave
mov
mov
mov
aam
add
loopne
je
mov
sbb
xor
pop
mov
in
cwtl
sbb
cmp
push
test
cli
loope
ss
scas
repz
roll
pop
jmp
jecxz
mov
or
in
xchg
or
lock
ret
sti
mov
loopne
sub
addb
mov
mov
int3
jo
jg
aad
mov
inc
jl
in
fcmovu
sub
or
cli
out
push
xchg
imul
jnp
xchg
fmulp
lock
cmp
lret
xchg
mov
adc
es
ror
mov
jb
leave
outsb
ljmp
cmpsb
insb
insl
sahf
or
cmc
fsubs
sub
sbb
imul
pop
push
pop
mov
xchg
xchg
sbb
add
rorb
push
les
push
out
cmpsb
inc
das
xor
lea
leave
xorl
int
sub
jnp
cmp
cmpl
stos
pop
sarl
adc
sbb
jns
cmp
inc
jmp
ss
repz
cltd
dec
test
cld
mov
mov
mov
imull
xor
fwait
adc
cmpl
imul
ja
out
and
ret
sahf
fistpl
dec
mov
jmp
int
pushf
jl
lods
shlb
mov
pop
addr16
loop
add
wbinvd
mov
pop
enter
xor
daa
pop
sbb
repnz
xor
mov
or
lea
inc
jmp
insb
stos
adc
xor
cmp
lods
push
loopne
mov
mov
mov
push
dec
sbb
push
test
push
adc
in
inc
lret
aad
xor
in
xor
xchg
adc
das
in
inc
xchg
sub
inc
fstpt
in
shlb
push
sti
lret
mov
fmull
jle
imul
int
cmpsl
push
cmp
pop
jmp
mov
shlb
xchg
mov
sbb
and
jnp
jg
mov
mov
clc
scas
dec
xlat
jb
enter
push
imul
xor
cmc
jae
stc
fidivl
jmp
jl
lret
rcll
gs
xchg
mov
mov
fmul
pop
ret
pusha
ds
and
pop
or
insb
icebp
ret
jb
sub
stc
shrb
les
inc
aad
cli
int3
cli
pushf
ljmp
rorl
pop
inc
pop
jns
xor
sub
or
aas
pop
ret
inc
clc
push
jmp
loope
fidivrs
lock
pop
or
repnz
pop
mov
stos
test
jp
jae
ret
pop
aad
mov
enter
push
mov
jb
push
addr16
pop
stos
mov
push
add
out
mov
icebp
fisttpl
out
xchg
mov
push
xor
fwait
les
pop
fbld
sbb
inc
out
daa
lret
fnstcw
sbb
push
cmpsl
nop
test
mov
push
inc
outsl
push
nop
mov
xchg
les
test
aaa
cli
xchg
mov
push
mov
cmc
xchg
arpl
push
js
add
dec
inc
push
fisttpl
inc
out
movsb
inc
and
mov
adc
cwtl
repz
sub
push
out
mov
scas
cld
cmp
arpl
and
mov
pop
imulb
mov
cltd
cwtl
lods
sub
and
mov
and
push
cmp
and
stc
pop
and
jno
jge
push
loope
jae
rcrl
outsl
jne
push
cmp
aaa
lods
jo
xor
lret
push
or
jl
cmp
fidivrl
and
dec
loop
stc
inc
ret
sub
push
adc
add
pop
push
push
bound
mov
loopne
stos
xchg
or
inc
repz
sbb
push
cwtl
jne
xchg
es
adc
fcmove
call
push
int
mov
and
xor
dec
push
xchg
dec
addb
lahf
or
data16
or
jmp
mov
imul
cmp
xchg
popa
xor
and
pushl
xchg
fstpl
xchg
pop
jns
aam
sub
test
mov
cwtl
outsb
xor
mov
cmp
inc
sbb
adc
imul
faddl
mov
push
sbb
pusha
into
rclb
imul
mov
lods
jmp
movsb
test
sbb
sub
mov
mov
inc
sahf
dec
push
mov
mov
inc
or
cli
fbld
jnp
int
or
pop
out
or
out
adc
and
cmp
lret
sub
outsl
ret
sub
ret
loope
addr16
test
mov
sbb
ss
jecxz
xor
stos
inc
xchg
ja
aas
sbb
xlat
mov
push
push
outsb
push
dec
push
and
lds
and
mov
pushf
fwait
subl
out
flds
push
arpl
mov
lcall
push
xchg
in
mov
icebp
or
cs
xchg
leave
movsl
daa
std
in
xchg
sub
sbb
dec
sbb
inc
dec
pop
cmp
arpl
and
xchg
xchg
pop
adc
inc
push
pop
test
sbb
clc
push
sub
scas
sbb
jg
dec
dec
and
data16
popf
fisttpl
mov
movsb
mov
stc
nop
dec
out
pand
jecxz
imul
inc
jmp
iret
xchg
push
movsl
mov
adc
movaps
pushf
imul
ret
sub
int
adc
xor
and
xchg
iret
and
xor
sub
mov
pusha
call
push
out
and
push
ret
popf
rolb
jno
ljmp
inc
mov
in
fisttps
fbstp
sbb
popf
outsl
sbb
pop
addr16
xchg
mov
pop
sub
xchg
sub
mov
mov
sub
lods
lahf
push
sbb
pop
dec
add
les
enter
sub
mov
subb
xor
add
pop
ds
scas
aad
scas
ror
cltd
dec
sahf
sti
lahf
sub
popf
mov
push
mov
vpackuswb
cltd
push
fnstsw
jo
rol
cmpsb
stos
inc
pop
shlb
in
pop
and
inc
sub
loopne
call
sub
daa
jae
insb
int3
add
xchg
pop
xchg
iret
in
stc
repnz
aas
push
scas
cli
sbb
add
out
or
into
and
test
bound
xor
leave
add
mov
sub
popf
rolb
daa
pop
pop
push
mov
test
pop
mov
out
sbb
push
pop
push
dec
in
xchg
call
mov
outsl
xchg
mov
stos
std
mov
sbb
sahf
pop
je
mov
shl
adc
scas
movsl
jmp
mov
xchg
cld
stos
clc
xchg
xlat
or
imul
mov
mov
sub
movsl
cmpsb
cmpsb
sbb
jecxz
jge
mov
arpl
jecxz
lret
add
ja
pop
cmpsl
pop
mov
cmpb
cli
dec
jg
cmp
cmp
sbb
cltd
call
daa
jae
cs
nop
pop
mov
stc
gs
pop
lods
and
xchg
add
lock
or
push
lds
and
xor
std
pop
sub
fs
push
test
ljmp
sbb
arpl
cwtl
aaa
sbb
push
xlat
out
cli
cs
xchg
jae
scas
add
test
mov
into
in
rorl
ss
cmpl
sub
sahf
aaa
sahf
jmp
int
out
scas
xor
or
mov
sti
xor
aaa
mov
clc
int
lcall
movsl
mov
movsl
cmp
push
mov
mov
sub
pushf
adc
jnp
cmp
mov
cmp
and
ret
lret
sti
dec
and
lahf
inc
sub
in
cmp
mov
lods
adc
andl
pusha
rcll
into
lods
pop
sbb
sbb
sub
push
repnz
mov
rol
mov
daa
out
rcll
call
test
les
out
lods
in
add
sarl
xor
les
mov
bound
mov
pop
jb
adc
xor
add
movsb
lret
mov
jmp
mov
es
repz
mov
push
adc
lds
xlat
andl
mov
jne
bswap
xor
lods
mov
pushf
shll
inc
insb
inc
repnz
jnp
inc
cmpsb
xor
ret
in
repz
mov
adc
dec
sub
mov
mov
cs
js
sahf
in
pop
mov
and
nop
sbb
or
test
push
jl
js
sbbb
jae
ja
in
jno
pop
movsb
stc
je
and
xchg
dec
iret
cwtl
xchg
pop
xchg
or
mov
lods
outsb
pop
stos
or
enter
push
arpl
lahf
int3
scas
aaa
int
sbb
and
popf
loop
test
pop
dec
orb
sahf
jecxz
out
ja
test
into
and
fimull
jle
sub
push
add
or
stc
adc
stc
dec
mov
outsl
push
testl
mov
repnz
mov
mov
rcrl
sbb
sub
mov
clc
leave
fwait
mov
and
push
adc
ficompl
shrl
mov
lds
imulb
mov
xchg
movsl
jg
jl
inc
push
xor
cwtl
ret
inc
mov
and
inc
push
inc
mov
in
lds
cld
andl
call
mov
call
xlat
push
ss
mov
xor
fidivrl
icebp
pop
dec
xchg
nop
mov
lods
cmp
push
mov
testl
daa
dec
imulb
out
xchg
push
mov
icebp
stos
stos
ficompl
or
add
mov
scas
mov
repz
sub
inc
js
mov
pushf
inc
movsb
mov
pop
dec
inc
inc
mov
cmp
mov
cmp
xor
sbb
repz
add
pop
imul
push
mov
jns
imul
cli
mov
imul
aad
xchg
jecxz
mov
pop
mov
mov
es
and
test
cmp
popa
or
shl
inc
mov
rolb
pop
imul
insl
pop
push
out
pushf
and
jge
dec
movsb
in
loopne
mov
shlb
popf
insl
icebp
into
ret
or
stc
iret
push
mov
dec
mov
std
jo
mov
imul
lcall
into
pushf
add
mov
outsl
xchg
pushf
lods
bnd
pop
add
jge
or
and
sbb
gs
shlw
mov
aas
pusha
adc
test
mov
js
pop
xor
fs
sbb
test
jns
test
jg
stc
or
lods
ficoms
out
in
cmp
mov
lock
jnp
mov
xor
adc
inc
cwtl
and
cmp
mov
jg
aaa
out
dec
cmp
pop
mov
cmp
mov
pop
and
inc
jnp
push
xchg
inc
xor
pushf
push
enter
dec
scas
xchg
xor
or
ljmp
cmp
out
movsl
ss
test
aam
fs
mov
mov
icebp
cli
in
test
sahf
pop
or
or
and
shll
lds
pop
inc
test
lea
xchg
pop
arpl
push
inc
jmp
pushf
jbe
jmp
jnp
subl
cmp
add
loopne
mov
repnz
imul
inc
inc
mov
call
in
xchg
ret
jo
ljmp
in
rclb
repz
pop
and
add
mov
jo
mov
data16
push
inc
or
outsl
pop
fcoml
mov
cmpsl
xchg
xor
push
lock
lret
cmp
jns
fistl
mov
jecxz
sbbl
inc
ja
jp
dec
or
jae
pop
imul
add
inc
xchg
lock
loope
pushf
pop
arpl
pusha
pop
cli
add
sub
sub
data16
enter
repnz
shlb
xor
bnd
test
mov
ss
dec
mov
mov
shrl
jge
cwtl
and
sub
xchg
xor
and
mov
ficoml
adc
leave
mov
jl
push
dec
xor
sub
lods
hlt
sub
mov
cmp
cmc
stos
jne
mov
push
add
addb
push
std
js
pop
stc
orl
push
pop
sub
stos
popf
rcr
inc
mov
pop
push
fwait
xor
mov
adc
cwtl
mov
add
or
aaa
je
idiv
inc
es
fnstenv
jp
andl
push
sbb
inc
scas
mov
push
pop
mov
shl
or
into
in
mov
mov
pop
sahf
sub
imul
frstor
inc
xor
nop
filds
mov
popa
jp
push
flds
dec
and
cld
out
cmp
xor
testb
mov
roll
and
inc
dec
repz
sbb
stos
xchg
pop
push
loopne
xor
lds
adc
addl
int
and
daa
xchg
shrb
imul
add
pop
shrl
mov
inc
scas
jg
jbe
das
repnz
int
les
fisttpll
xchg
aaa
push
hlt
icebp
xlat
jnp
popf
decl
push
data16
rorl
int
or
lea
xchg
push
fwait
dec
imul
jbe
sbb
outsb
xchg
lods
pop
and
add
out
mov
ret
out
dec
mov
in
mov
add
xchg
aam
jle
ficoms
and
push
fwait
inc
add
outsl
jl
scas
mov
nop
or
aaa
testb
les
add
pusha
loopne
int
pop
bound
in
int
out
push
pop
test
cmp
push
jmp
lea
pushf
push
out
or
fs
lds
cld
cmc
dec
mov
lret
ret
jecxz
pop
int
dec
mov
push
leave
bound
sahf
xor
cmpsl
insb
jno
lods
jnp
jp
testb
es
dec
lret
push
frstor
adc
ror
jae
cmp
outsl
aad
jmp
fdivl
dec
add
out
lds
dec
mov
and
add
dec
and
xorl
sub
xor
loopne
gs
bnd
pop
jnp
inc
sahf
aad
insl
lcall
sub
lods
scas
xchg
add
aaa
pushf
out
mov
mov
aaa
stc
cmpsl
jnp
cli
jl
fwait
inc
inc
sub
and
push
pushf
mov
inc
cmp
subb
xchg
inc
pop
and
ja
adc
insb
loop
xchg
negl
pop
cs
inc
sub
pop
pushf
adc
inc
mov
insb
fbld
pop
out
dec
xchg
rcll
imulb
ljmp
das
stos
inc
rol
push
adc
pop
inc
sub
pop
add
xchg
mov
shlb
inc
push
pop
cmp
jb
sbb
mov
sbb
es
mov
dec
push
hlt
test
adc
test
test
dec
adc
ret
call
ss
or
addl
mov
sti
fsubl
jg
mov
jp
add
mov
and
cwtl
inc
aaa
inc
adc
pop
jl
cs
aam
mov
sbb
dec
push
xchg
insl
pop
insb
mov
push
sub
shl
cmp
cmp
xchg
mov
mov
stos
mov
mov
testl
lock
in
dec
in
mov
iret
sub
fildl
push
dec
pop
push
rcrb
cmp
out
aad
pop
sub
sti
das
mov
mov
mov
mov
adc
icebp
lcall
push
jg
fsubrs
push
bound
lods
push
fldl
popa
ret
sub
inc
subl
sbb
aas
gs
cwtl
pop
mov
fidivl
dec
and
cmp
aaa
cld
cmp
xlat
jecxz
mov
sarl
inc
pop
iret
or
call
or
in
imul
dec
and
adc
mov
cmp
lcall
movsl
orb
mov
mov
and
call
xor
sbb
test
fisttpll
adc
xor
jne
out
stos
test
xchg
jbe
lock
inc
movsb
daa
insl
mov
enter
mov
lods
imul
mov
adcl
adc
out
cmp
lock
fwait
xchg
pop
dec
or
inc
adc
xor
jg
mov
stos
push
pop
iret
aas
bound
imul
push
mov
inc
jp
cmp
xchg
dec
out
int
inc
mov
mov
add
sti
mov
pop
add
push
lods
popa
xchg
clc
add
lods
xor
sub
mov
int
sub
out
inc
xor
dec
fbld
outsb
xor
or
xor
dec
in
mov
cli
ffreep
pop
adc
hlt
enter
and
dec
jge
push
sbb
ja
dec
inc
or
adc
mov
ds
iret
fwait
scas
xor
sbb
push
pusha
fnstcw
inc
ja
mov
inc
sbb
adc
xor
pop
mov
stos
pop
clc
bound
cmp
push
add
mov
jle
xchg
cmpsb
fildll
icebp
repz
and
or
in
pop
aad
repnz
push
adc
lods
push
dec
jno
mov
or
fisubrs
cld
or
stos
cmpsl
pusha
and
rol
popf
and
jae
pop
sub
jl
jb
ja
adc
mov
pop
mov
loopne
movsl
xchg
repz
jo
xor
or
movsb
sub
xchg
xchg
insb
push
arpl
cmp
iret
mov
mov
cli
aad
cmpsl
push
jecxz
ss
pusha
in
pop
dec
repz
cmp
and
pop
sbb
jne
rcr
or
fs
cmpsb
or
add
add
maskmovq
divl
mov
xchg
and
packsswb
xchg
cmp
je
ds
xor
sub
mov
fildll
gs
inc
fiadds
cli
leave
pop
fisttps
jo
sti
mov
lock
in
mov
ficoml
inc
iret
pop
xchg
adcb
mov
push
sbb
pop
insb
arpl
ret
ja
dec
mov
sub
xchg
mov
dec
and
mov
or
loope
cmp
lock
in
jg
stos
add
jae
test
test
icebp
push
stos
aas
cmp
test
or
and
mov
repnz
inc
sbb
sbb
adc
ja
mov
fnsave
jae
mov
sbb
xchg
mov
and
outsl
cmp
call
test
mov
xchg
adc
testl
gs
and
rcl
std
rcll
push
lret
mov
sub
xchg
add
fnstenv
aas
dec
inc
dec
mov
jne
lods
xor
mov
test
out
mov
jns
jmp
pop
aaa
jbe
negl
imul
mov
or
fsqrt
xchg
mov
mov
jmp
pop
xchg
or
fcoms
pop
pop
test
lock
sub
in
orl
push
xchg
test
mulb
loop
jge
les
or
sbb
and
shll
dec
xchg
aam
mov
arpl
jne
movsl
and
lock
mov
mov
outsb
idivl
into
neg
jp
inc
clc
popf
cmp
out
stos
cmovs
gs
outsl
lock
bound
sbb
mov
pop
push
repnz
aad
sub
mov
in
lods
push
push
inc
cltd
je
fnstenv
loope
pushf
repz
mov
mov
mov
adc
push
arpl
insb
call
in
push
mov
sub
mov
std
pushf
subb
clc
inc
mov
or
cs
cltd
mov
loope
jmp
mov
cmp
loope
les
pop
xor
or
mov
cmp
ficoms
or
pusha
dec
outsl
inc
sahf
push
dec
jnp
shll
ss
fnstsw
decl
sub
mov
cltd
faddl
adc
mov
pop
les
in
mov
mov
sbb
and
in
ror
adc
sub
aam
xchg
mov
jns
enter
jp
repz
cltd
lods
clc
je
add
add
lret
cmp
scas
fnstsw
jo
test
and
sbb
test
jle
and
adc
aam
cld
fildl
jne
insb
adc
push
arpl
or
jp
out
pop
fdivrl
sbb
jne
adc
jne
fucom
cmpsl
fs
sahf
movsl
sar
mov
inc
dec
pop
testb
repz
adc
inc
hlt
call
mov
add
mov
or
fildll
push
xchg
loopne
mov
out
dec
fs
stos
jmp
pop
adc
in
cmc
dec
mov
sub
cmp
xchg
stos
int3
rcl
loopne
pop
cmp
mov
mov
pop
pop
shlb
divb
dec
imul
test
sub
sahf
daa
xchg
les
out
fcmovnbe
cmc
sbb
in
in
repz
std
out
jl
mov
loope
cmp
lock
inc
outsb
and
mov
sub
jg
jbe
enter
cltd
fs
scas
add
mov
cli
xor
jmp
out
fidivrs
leave
into
stos
out
daa
loope
clc
mov
and
js
imul
xchg
fistpll
sbb
dec
fcmovb
test
into
bound
dec
dec
popf
out
mov
loop
std
dec
cmp
pop
cwtl
or
xchg
into
mov
sub
inc
mov
fisttpl
inc
repz
mov
xor
addr16
push
ds
push
jp
mov
add
push
lea
cmp
push
mov
push
out
movsb
mov
push
in
adc
mov
inc
sub
or
push
jle
sbb
inc
loopne
into
outsb
test
cmpsl
ficompl
or
xchg
sub
xor
aad
jmp
cmp
sub
repnz
sub
pop
cld
sbb
pop
mov
stos
and
repz
push
jno
pop
test
movsl
xchg
mov
push
sub
lea
inc
mov
popa
or
pop
popa
ja
adc
cmp
xor
lock
idivb
aam
addl
dec
mov
xchg
pop
je
dec
loop
ljmp
mov
mov
sub
test
mov
push
adc
jbe
sbbb
lahf
hlt
push
xchg
or
mov
stos
shll
and
xchg
inc
int
xor
loopne
bound
xchg
and
jns
fs
aas
pop
mov
enter
ret
in
in
ss
adc
test
add
call
fnsave
or
or
and
push
cmp
mov
cmp
mov
das
push
dec
mov
mov
data16
mov
in
repz
aaa
mov
ret
int
dec
sbb
or
cld
lods
xchg
xchg
cmp
dec
sbb
cwtl
or
mov
roll
je
adc
mov
pop
mov
das
mov
repz
jno
cmc
std
addr16
int3
pop
pop
test
in
adc
iret
lret
arpl
mov
add
jle
outsl
push
mov
sub
and
imul
pop
dec
or
xor
or
adc
add
mov
pop
add
popf
and
jnp
and
sahf
jo
pop
or
lods
aad
xchg
lock
and
outsl
in
sbb
push
clc
ds
stc
daa
repnz
les
push
js
movsl
sbbl
jg
and
sbb
add
mov
pushf
xchg
cmp
adc
mov
dec
push
mov
jle
push
xor
add
and
jl
xchg
test
xor
add
dec
sbb
mov
dec
push
sbb
mov
xor
movsl
sbbl
fdivr
lock
popa
das
xchg
sbb
loopne
stc
js
fmuls
mov
nop
mov
xchg
cmp
push
jno
mov
ss
adc
mov
ja
jp
sub
stos
jae
pop
rolb
rorl
xchg
movsl
std
int
je
xor
pop
stos
scas
scas
push
shll
fnstsw
sbb
xchg
sub
jns
enter
into
sbb
inc
jb
mov
aaa
ja
into
cltd
stos
add
aaa
xor
daa
adc
out
ljmp
mov
fiaddl
cmp
into
sti
fwait
ss
or
jno
sahf
rcrl
push
pop
jp
xor
fiaddl
mov
dec
iret
xchg
sti
cli
dec
jp
ljmp
outsl
divl
je
ret
daa
xor
push
es
scas
sti
jge
sbb
setb
loope
xor
leave
loopne
add
mov
adc
out
push
aas
repnz
push
jnp
test
mov
pushf
in
std
ss
push
pop
popa
or
sub
mov
pop
fwait
pop
loopne
push
and
cltd
xor
cltd
fst
inc
mov
in
cmp
inc
pop
cmpsb
repz
push
mov
sbb
aas
or
sbb
cmp
dec
pop
enter
mov
das
xchg
jg
mov
xchg
add
in
push
jo
in
js
jg
in
les
cmpsb
jle
and
mov
ljmp
data16
pop
mov
add
repz
adc
sbb
lahf
xchg
cltd
aas
out
outsl
testb
cmp
push
es
mov
imul
popa
cmp
jmp
addr16
stos
adc
mov
lcall
out
jg
mov
sbb
orl
leave
push
daa
cltd
mov
push
enter
les
scas
or
adc
push
mov
mov
jne
inc
and
es
scas
jo
jecxz
aaa
into
mov
out
stc
pop
xchg
or
int
daa
and
movsb
arpl
xlat
lods
jnp
cmc
mov
mov
dec
push
push
push
lods
mov
sbb
or
imul
adc
in
and
xor
scas
cmp
lock
dec
ficompl
jbe
add
inc
or
adc
sub
mov
dec
xchg
mov
sahf
lret
movsb
cmpsb
aaa
inc
aam
gs
add
adcb
adc
xchg
dec
in
ret
test
stos
cs
outsb
jns
in
aas
sbb
outsb
push
insb
sbb
movsb
push
xchg
adc
mov
scas
je
sbb
mov
leave
je
jecxz
test
notl
sbb
dec
cmp
jbe
jns
sbb
ret
fidivrl
ja
dec
scas
scas
insb
int
loopne
sbb
gs
xor
push
insb
xchg
aam
int
fistl
jo
mov
test
adcb
jmp
jp
inc
js
stc
out
sbbl
adc
and
gs
mov
nop
rorb
inc
jns
mov
inc
cli
in
sbb
push
xor
push
fstpl
dec
sub
push
and
mov
incl
bound
or
repnz
divb
ja
pop
imull
and
mov
call
lock
addr16
xor
xchg
xchg
arpl
addr16
push
and
mov
mov
push
add
jno
lea
cmp
mov
loope
pop
sbb
pop
pop
xchg
xchg
sub
lea
or
xlat
lret
ss
adc
jae
pop
imul
mov
lock
cmc
in
test
std
into
pop
jg
push
cwtl
lods
push
push
loope
jmp
xchg
add
lods
adc
notb
lock
enter
icebp
in
lods
shl
fwait
data16
mov
push
inc
int
jp
iret
insl
and
cmc
push
cmp
and
pushf
jbe
pop
pop
rcrl
or
pop
mov
sub
push
popa
push
imul
sub
xchg
test
rclb
das
add
mov
push
mov
sahf
daa
ja
and
add
push
outsb
add
lods
xor
pop
out
dec
xor
int
sbb
add
cli
sub
stc
inc
or
cmpsb
leave
mov
roll
or
xor
mov
jl
int
cwtl
mov
clc
ret
jbe
mull
mov
cmp
std
mov
xor
jecxz
pop
cld
test
sub
jg
arpl
dec
cltd
xor
decb
or
fwait
js
aas
clc
and
mov
repz
push
out
daa
call
sbb
sub
aaa
mov
lds
push
daa
repz
push
nop
cmpsl
cltd
popf
into
pop
pop
aaa
dec
push
ja
stc
sbb
push
and
imul
inc
dec
mov
testb
leave
mov
inc
js
mov
jns
push
shl
xor
jg
and
stos
mov
int
sbb
sub
push
xlat
dec
pop
ljmp
ja
movsl
adc
pop
movsl
js
ficoms
mov
mov
or
pop
mov
mov
test
cltd
popf
mov
push
sub
jnp
mov
push
nop
xor
inc
fnstsw
sbb
aas
and
push
stc
dec
adc
rclb
in
mov
push
xor
pop
mov
pop
or
lock
mov
sbb
push
and
lea
cmpsb
xchg
or
jae
or
ficompl
ds
sti
push
or
cmpsl
in
add
xor
mov
repnz
jnp
add
testl
mov
mov
push
icebp
lods
out
or
and
mov
and
and
xchg
into
mov
ljmp
in
sub
leave
push
pusha
jns
out
nop
mov
push
xchg
cmp
into
jno
dec
xlat
mov
xchg
aas
mov
pushf
push
pop
jnp
cmp
mov
sub
mov
ds
jno
and
adc
in
mov
cmp
mov
test
outsb
scas
arpl
insb
push
add
daa
inc
mov
call
jne
pop
sbb
clc
shlb
mov
ljmp
push
xchg
in
in
cli
clc
scas
fmuls
cmpsl
push
dec
xor
test
push
inc
sub
scas
sub
pop
fstpt
mov
scas
and
push
es
lods
sbb
mov
pop
je
dec
sti
pmaddwd
fisubs
into
dec
push
ret
pop
loop
or
xor
add
xchg
inc
adc
push
cltd
das
mov
pusha
mov
ficomps
dec
push
mov
scas
lods
xor
ret
arpl
jp
pushf
lahf
jbe
lods
aad
nop
test
mov
adc
mov
icebp
push
scas
out
cs
push
repnz
push
sub
and
mov
or
out
mov
xchg
insl
adc
sub
adc
xchg
mov
cli
ja
lahf
mov
daa
xchg
push
jb
mov
arpl
xor
inc
add
cmp
add
mov
daa
cmp
jae
lds
ds
cmp
ja
jno
mov
aas
dec
dec
fucomp
stos
jge
data16
fs
mov
dec
or
cld
cltd
out
testb
rcrb
cli
aas
mov
jo
lods
or
mov
mov
je
mov
fildll
jo
clc
iret
cmpsb
adc
ror
push
inc
flds
xor
xchg
sub
incl
sub
lret
mov
clc
add
out
pop
mov
sub
mov
ss
cmc
dec
push
sti
mov
dec
jns
push
int
arpl
mov
ss
dec
lods
dec
sub
sbb
xchg
adc
pop
add
add
push
int
push
adc
test
jae
leave
push
cld
frstor
js
lea
pop
mov
inc
jl
mov
push
jp
jecxz
out
add
adc
js
inc
jbe
mov
push
sbb
fisttps
ljmp
jne
imul
add
lret
sbb
in
cs
clc
sub
insl
push
jnp
adc
jbe
or
fcoml
fistpl
push
mov
push
fs
fimull
fldcw
test
adc
and
mov
stos
push
pop
gs
xor
and
jmp
mov
sbb
adc
daa
cmc
inc
xchg
lahf
pop
pop
ret
sub
push
fildll
xchg
sbb
adc
pop
xchg
jne
test
xor
inc
lcall
arpl
loop
bound
rcrl
add
imul
in
cli
jno
mov
pop
out
cmp
adc
dec
mov
fwait
sub
ljmp
hlt
in
movsb
sahf
pop
dec
dec
repnz
lcall
ja
pop
jno
call
loope
sbb
jg
lea
or
jb
decb
add
xchg
push
je
mov
jae
pop
iret
mov
jl
fildl
push
jae
xor
jmp
nop
rol
in
cmc
push
xchg
test
mov
inc
jnp
add
je
jecxz
sub
cmp
jecxz
out
bound
sub
adc
adc
popf
xorb
daa
and
mov
idivl
inc
daa
or
cwtl
sbb
cmc
mov
push
mov
sub
ret
sub
out
sbb
jo
jno
sbb
jnp
cwtl
jg
push
aad
lods
jmp
fnstcw
xchg
mov
aaa
lret
and
js
add
sbb
or
adc
mov
andb
sti
sbb
push
xchg
xor
iret
popf
inc
dec
leave
sub
push
cmp
sub
call
sub
jb
into
js
jg
out
or
in
not
and
cmp
jg
push
fisubs
jmp
lret
mov
fidivs
xchg
hlt
mov
data16
mov
and
and
and
xchg
mov
ficomps
rep
fistl
mov
sbb
pop
ss
jl
in
int
sbb
or
imul
xor
lret
repz
dec
sbb
mov
in
fisttps
pushf
enter
sbb
jge
adcl
fnstenv
xchg
loope
push
inc
incb
fs
jne
rcr
lods
dec
in
jle
dec
and
sbb
mov
push
cmp
pop
hlt
xor
cmp
jo
mov
sahf
lahf
ret
add
lret
mov
mov
je
lods
xchg
or
repnz
cmpsl
mov
mov
ret
nop
jg
cmp
scas
push
jge
pop
jns
out
jmp
ja
pop
cltd
xor
les
inc
jle
cmp
das
inc
jecxz
jmp
sub
push
pushf
xor
cmc
or
xorl
scas
mov
lock
aam
ret
outsl
notl
push
repz
adc
movsl
xchg
mov
hlt
sbb
das
jmp
testb
push
fisubrl
mov
mov
mov
push
clc
cmp
in
xchg
push
nop
gs
sbb
inc
or
dec
pop
or
inc
mov
pusha
pop
fwait
in
test
fdivs
xchg
mov
cld
gs
adc
rorl
imul
push
push
xor
xchg
arpl
jl
jo
mov
mov
xchg
adc
mov
jl
cmpsb
sub
cs
push
jg
jl
adc
cltd
sub
push
lock
or
test
dec
orb
adc
xchg
mov
fistl
and
xor
ljmp
stos
aas
mov
sub
lds
pusha
push
mov
into
das
and
lods
mov
dec
shl
inc
xor
xchg
scas
mov
movsl
and
aad
pusha
stos
adc
stos
xlat
lock
lods
mov
enter
dec
add
out
adc
stos
and
les
push
xchg
outsb
imul
pop
adc
push
shr
dec
stos
jp
stos
mov
hlt
ljmp
push
add
or
sub
add
pop
hlt
dec
xor
cld
pop
xor
inc
out
pop
adc
mov
loop
push
mov
fcmovnbe
imul
test
cmp
repz
mov
inc
loope
hlt
sub
test
jo
and
dec
push
enter
xor
test
lret
push
push
mov
xchg
xchg
fildll
xchg
push
jl
faddp
inc
ret
jge
inc
mov
aaa
xor
push
mov
out
rcl
jb
fdivp
inc
xchg
xor
lahf
jge
push
in
hlt
mov
xchg
fmul
and
inc
adc
addr16
das
ds
xor
and
lock
xchg
xor
cs
xchg
sub
clc
xchg
mov
ljmp
fsubs
hlt
pop
xchg
in
repz
in
xor
fstl
mov
and
cmp
xchg
imul
test
movsl
or
sub
fistpll
cmc
fisttpl
inc
sti
or
sbb
loopne
pusha
cltd
clc
arpl
mov
hlt
aam
fnstcw
pop
jnp
dec
inc
mov
ficompl
testl
shrl
enter
mov
sub
mov
xorb
push
mov
std
mov
jg
xor
shll
mov
andl
jle
jmp
into
and
pop
mov
out
mov
jl
scas
inc
decb
test
negb
sbb
inc
mov
mov
ret
sub
and
xor
and
arpl
fcompl
ljmp
xchg
movb
mov
inc
adc
lahf
in
dec
xchg
dec
out
leave
cmc
insl
std
pop
jp
push
clc
xlat
pop
xlat
les
outsb
out
bound
insl
xor
lods
divps
hlt
or
cmp
dec
fadd
add
fstpl
dec
call
enter
dec
andl
lods
jmp
bound
rorl
insl
cmp
and
fcomps
cs
aaa
mov
lock
push
add
fdiv
xchg
dec
cld
bound
inc
in
lds
or
add
or
adc
push
dec
xor
add
lea
repnz
ljmp
or
push
in
pop
dec
mov
sti
sub
mov
fdivrl
roll
fsubrp
mov
or
repnz
nop
repz
inc
xchg
cli
push
mov
jae
mov
cld
pop
outsb
xorb
pop
pop
jne
cmp
jp
xchg
rcr
into
int3
popa
pushf
pop
fisttps
adc
fs
mov
ds
and
mov
icebp
cmc
inc
adc
sub
bound
bnd
fdivl
xor
mov
cmp
jns
fsubrs
xor
push
lods
jle
daa
lret
test
pop
arpl
mov
cmp
mov
cmpsl
dec
stc
mov
cmp
cmp
and
rol
mov
icebp
mov
stc
inc
sbb
add
frstpm(287
mov
outsl
aaa
leave
sub
add
mov
xchg
nop
or
xchg
cmpl
xor
es
ja
xchg
xor
int
hlt
adc
pop
sbb
les
std
mov
das
pop
adc
cmpsb
mov
push
scas
cld
loopne
leave
ja
cmp
mov
inc
xorl
cmp
adc
rclb
mov
lret
cmc
sub
das
xor
fwait
dec
in
aas
jle
push
and
push
repz
pop
mov
and
jne
mov
push
push
sub
sbb
inc
fdivrs
jle
mov
hlt
push
cmpsb
xor
fimull
and
xor
fwait
mov
cmp
pusha
mov
jo
sub
cmpsl
movsb
lahf
sub
cmp
jge
xor
sbb
test
pop
jbe
rcrb
rol
scas
loop
xchg
lods
jnp
mov
aam
push
or
sub
mov
add
test
push
addr16
fsub
int3
lret
pop
sbb
xchg
mov
sbb
scas
andb
pusha
inc
test
jb
jle
fldl
mov
sub
je
xor
mov
xchg
pop
adc
aad
sbbb
scas
mov
leave
sbb
adc
fstpt
or
sub
xchg
insl
and
inc
lods
mov
jg
and
iret
xor
inc
jne
fwait
or
lret
cmp
aas
inc
xor
push
and
jmp
and
adc
pop
and
es
or
jnp
fisttpll
cmp
ret
icebp
pop
nop
aaa
shr
push
scas
or
xchg
mov
test
sbb
inc
or
adc
test
mov
aam
stc
addr16
mov
rolb
rol
sbb
xor
stos
rcr
sti
arpl
and
xlat
jecxz
cmpl
push
mov
cmpb
sbb
and
sub
or
rclb
mov
push
cmp
aas
test
scas
out
and
add
lods
in
inc
push
jae
int3
push
adc
gs
vpsrlq
mov
push
shll
jge
outsl
cmp
in
jle
sbb
jp
lods
jno
mov
leave
xor
sub
cmp
shll
mov
or
and
aas
aad
mov
mov
cmp
adc
std
pop
popf
enter
jl
andb
imul
jo
aam
xchg
dec
adc
sbb
rolb
or
inc
push
insb
add
adc
dec
int
adc
or
sti
xor
xor
and
xor
loopne
stc
fldl
adc
imul
pop
xchg
jecxz
sbb
push
int
cli
les
sub
push
cltd
cmpsl
out
xor
adc
adc
jno
sub
outsl
mov
jmp
aas
cmc
call
cmp
push
in
xchg
mov
out
adc
mov
xchg
jl
push
sub
pop
jmp
out
or
lock
push
es
mov
std
lret
pop
in
mov
jl
int
sbb
loopne
push
bound
out
jmp
mov
fisttpll
mov
sarl
jbe
bound
shll
or
int
push
sub
imul
mull
call
popa
pop
jns
scas
xor
es
mov
movsb
cli
fwait
icebp
out
in
mov
mov
push
adc
aam
ja
sar
sbbl
sbb
inc
cmp
loop
fsubr
mov
or
cmp
jl
subb
ret
xor
and
push
jns
mov
inc
adcl
ret
push
mov
insl
out
push
aad
mov
scas
nop
nop
and
mov
mov
push
jmp
xchg
mov
adc
push
pop
fldt
ficoml
adc
dec
mov
enter
dec
lea
ret
push
mov
aaa
xchg
dec
mov
mov
adc
xor
cmp
mov
push
outsl
test
push
iret
mov
or
inc
fdivrs
xorl
fsubrp
imul
mov
jne
out
lcall
mov
test
pusha
mov
jecxz
in
push
xchg
xor
jnp
sbb
in
stos
sbb
lcall
jle
and
enter
dec
ljmp
inc
jge
in
dec
xor
aam
push
pop
mov
lret
mov
js
push
mov
dec
movsl
xlat
scas
mov
shl
lret
cli
inc
xor
jno
pushf
sahf
notb
in
repz
pop
das
or
rclb
pop
mov
push
dec
cmp
cmpsl
notl
mov
jne
int3
and
inc
cmp
fs
jo
out
mov
mov
inc
je
dec
mov
popa
mov
pop
push
test
push
dec
pop
lcall
cmc
push
dec
ret
pop
jecxz
imul
shrb
sub
iret
mov
je
push
rorl
loop
cs
icebp
dec
cmp
insl
das
pop
hlt
add
xor
test
or
sbb
sarl
cmp
and
jne
inc
jmp
out
fcoml
repnz
push
lcall
sbb
insb
repz
decb
mov
sbb
push
dec
jae
js
cmp
js
lahf
jmp
pop
test
rolb
cmp
mov
aas
cmpb
mov
jno
sahf
aas
mov
fnsave
xchg
sarl
push
cmp
adc
int
pop
mov
gs
mov
lret
jne
cmp
cmp
aaa
adc
adc
jl
xlat
out
es
cli
adcl
or
out
adc
inc
popa
and
inc
push
add
push
xor
pop
imul
int
cmpb
mov
ret
pop
or
mov
pop
adc
lret
imul
push
stos
adc
xlat
lahf
mov
hlt
pop
dec
sub
jp
into
roll
or
mov
push
cltd
sbb
jbe
mov
cmp
push
pop
cmc
scas
cwtl
xor
pop
ss
xchg
test
lcall
out
mov
aad
cmp
ficoms
or
adc
mov
push
fcmovb
mov
iret
adcl
cmc
add
data16
out
call
pop
jno
dec
cli
xchg
rcll
xor
gs
shrb
inc
adc
test
jnp
and
out
clc
lahf
mov
fwait
and
adc
dec
test
mov
aam
xor
test
dec
fwait
out
dec
dec
in
add
cli
pop
hlt
mov
dec
je
mov
mov
mov
xor
sub
push
test
idivl
stc
mov
push
jecxz
enter
cmp
mov
in
mov
xor
jecxz
lea
mov
cltd
imul
cwtl
cmpsb
and
les
jl
inc
fs
mov
fistl
adc
leave
popf
js
xor
adc
push
or
arpl
sbb
je
js
mov
push
aam
push
jg
dec
repz
mov
mov
sahf
xchg
add
imul
lret
addr16
xchg
push
xchg
rcll
push
pop
addb
stc
pop
xchg
imul
dec
int3
test
mov
aas
or
adc
dec
xlat
lods
fiadds
imul
jae
int
and
into
xor
adc
adc
pop
scas
mov
decb
hlt
jne
xchg
inc
idivb
out
mov
cmp
cmpsl
sub
cmp
mov
pop
out
sbb
sbb
daa
mov
mov
push
neg
ds
jmp
push
add
sub
cmp
into
push
orb
push
dec
or
in
lea
test
in
scas
in
adc
rolb
rcrl
lock
mov
loop
xchg
movsl
shll
orb
rorl
mov
mov
js,pn
inc
cmp
clc
adc
jg
jnp
push
mov
sbb
adc
lret
idivb
inc
mov
sbb
mov
mov
xchg
jb
movl
lcall
mov
jne
fnstsw
in
push
orb
mov
xor
inc
ret
filds
jmp
testb
iret
or
mov
arpl
sbb
out
loop
pop
jmp
addb
ljmp
mov
xchg
cmp
push
jae
daa
push
imul
push
test
lret
movsb
ds
mov
jnp
aaa
imull
sub
fnsave
sbb
jecxz
and
adc
aad
adc
and
out
imul
inc
mov
nop
sub
cmc
je
je
loopne
cs
dec
sub
mov
jp
jg
lock
or
aaa
mov
and
and
pusha
inc
lea
loop
aaa
mov
mov
xchg
mov
jno
jb
cmp
sbb
mov
ret
pop
add
dec
ss
xchg
sti
jge
mov
and
ficoms
sti
and
aas
dec
and
mov
inc
fbstp
pop
mov
ljmp
jne
dec
aam
and
icebp
mov
xchg
stos
xchg
pop
xchg
mov
jmp
in
lcall
pop
je
sub
jne
rcrb
es
adc
cmpsl
lret
call
inc
dec
je
pushf
aas
shll
leave
jecxz
pop
aad
mov
push
pop
mov
mov
loop
push
lds
rorl
mov
icebp
mov
aam
pop
loopne
lea
pop
mov
das
adc
xchg
roll
xchg
add
call
xor
aas
repz
pop
xor
add
nop
or
add
ret
dec
out
dec
iret
push
imul
stc
xor
icebp
rclb
lds
orb
sbb
popf
arpl
xlat
loope
sub
xlat
xor
pop
ja
mov
mov
les
xlat
dec
jp
orb
data16
adc
outsb
lods
in
lcall
out
cmp
cli
jne
jnp
jne
or
repnz
out
pop
mov
lods
arpl
pop
jne
push
and
ret
mov
mov
mov
mov
cltd
insb
jns
jmp
stos
mov
insb
sbb
xor
mov
xchg
adc
icebp
lods
jmp
or
dec
jmp
or
jae
in
and
xlat
stos
out
loopne
and
fwait
inc
dec
sub
jle
jns
icebp
mov
lock
loop
xchg
sbb
mov
repnz
mov
movsl
mov
mov
shl
lea
and
leave
insb
bound
xor
mov
cmpsl
sub
mov
test
mov
jmp
aad
pop
aad
icebp
js
clc
je
dec
xchg
imul
scas
test
sub
imul
or
mov
cmp
jg
and
pop
and
adc
fdivrl
inc
push
pop
sub
jge
or
mov
arpl
xor
mov
fnstenv
rorb
je
inc
movsb
outsb
cmp
jl
shrl
pop
loope
xchg
faddl
adc
mov
test
and
out
das
add
push
mov
adc
inc
inc
cmc
sbbl
inc
inc
or
add
jne
push
mov
xor
jp,pt
aas
dec
loopne
and
cmp
mov
jno,pt
jp
outsb
fdivr
push
mov
push
jns
push
cmpb
clc
mov
jno
out
jae
pop
jmp
mov
push
dec
pop
sahf
inc
and
push
cmc
cmp
fists
ja
mov
mov
pop
pop
jg
arpl
loopne
mov
les
cmp
xchg
repz
outsl
mov
in
push
arpl
in
or
mov
mov
xchg
out
dec
enter
push
inc
pop
inc
and
mov
add
sub
movsb
jae
ret
jo
lahf
fmul
or
mov
mov
dec
cmp
sub
faddp
inc
or
mov
hlt
not
inc
dec
jbe
or
out
fiadds
js
lods
daa
aad
jmp
jno
adc
jl
push
xchg
xor
je
mov
jl
test
das
sbb
add
int
out
jno
adc
imul
sub
sahf
dec
rcrb
into
aas
xorl
jns
push
aaa
test
adc
jbe
in
ret
and
fstps
pop
add
dec
mov
adc
pop
fldl
cmp
loope
and
pop
cli
bound
pop
ljmp
mov
jbe
subb
adc
outsb
aas
leave
call
stos
hlt
loopne
es
jge
lahf
cmp
xor
pop
cwtl
mov
aam
lock
jecxz
mov
addr16
pushf
je
push
mov
ds
push
inc
test
lock
push
and
fsub
aam
push
and
shll
into
jp
inc
xor
test
xchg
insb
mov
movsb
leave
outsl
leave
and
or
mov
xchg
fs
fidivrl
mov
in
mov
xor
mov
test
inc
cmp
pop
sub
cmpsb
in
cmc
std
mov
or
dec
lret
aam
orb
add
cmc
movsl
xchg
jge
mov
push
or
nop
sahf
fs
repnz
jnp
pop
fsubs
xor
clc
sbb
scas
push
repz
jbe
push
mov
jle
fwait
gs
xchg
mov
popa
pop
and
push
test
add
add
jl
cmc
adc
cmp
mov
aas
cmp
addr16
jae
lods
adc
mov
lea
push
dec
xor
xchg
stos
inc
or
pusha
mov
mov
out
jae
fbld
jle
adc
lret
cwtl
andb
ljmp
push
jbe
add
jo
sub
incb
jno
nop
scas
call
add
cmp
add
mov
andb
xchg
in
push
cmp
insl
cmp
mov
push
mov
jo
mov
inc
mov
or
add
data16
and
dec
pushf
jl
mov
push
mov
and
inc
mov
dec
mov
add
or
sahf
jg
pop
and
in
mov
and
filds
enter
stc
test
call
lret
imul
int
xor
lcall
pop
xchg
fstpt
notl
movsb
inc
in
xor
dec
pop
addb
adc
add
and
sbb
filds
arpl
push
add
pop
cmpsl
mov
arpl
and
pusha
jl
divps
sub
in
loope
mov
add
push
mov
cmp
out
pop
inc
mov
inc
jmp
fisubl
fidivrl
pop
add
mov
addr16
add
shlb
hlt
pop
mov
js
aad
xor
adc
pop
test
rcr
dec
mov
js
outsb
sbb
xor
nop
sbb
inc
add
ds
adc
mov
push
push
stos
jo
jae
out
es
mov
fs
fstpl
cmp
adc
mov
push
aaa
lds
cmp
repz
or
aas
mov
pop
mov
jg
fisubs
xor
incl
mulb
xchg
sub
and
sbb
loopne
in
scas
pop
imulb
push
fdiv
adc
insl
adc
mov
sub
outsb
jne
rol
xor
jnp
dec
in
cld
sbb
fnsave
xor
inc
mov
addr16
jae
pusha
bound
or
pop
xor
mov
cmp
mov
cmpsl
push
ror
pop
stos
and
adcl
test
test
jnp
pop
pushf
pop
pop
call
add
and
insl
mov
fdivs
xor
scas
fs
mov
add
jae
push
push
aad
ds
adc
inc
cmp
and
aas
cmp
mov
fadds
push
push
or
xchg
mov
fldt
mov
es
fwait
mov
movsb
ljmp
xor
jno
mov
jo
scas
sbb
adc
movsl
rcr
dec
fistpl
sub
xchg
lcall
cltd
aam
pop
xchg
iret
inc
push
in
in
sub
xor
sbb
add
dec
in
add
dec
xor
sub
cs
sub
pusha
out
ja
dec
repz
xlat
pop
mov
xor
sub
lahf
lret
cmpsb
add
roll
push
mov
cmp
xchg
jecxz
sbb
mov
mov
stos
or
mov
jge
movsl
dec
imul
or
dec
js
jl
sub
out
stos
mov
sbb
push
mov
int3
notb
dec
std
xor
js
sbb
mov
pushf
sahf
inc
lahf
imul
xchg
push
xor
int
jp
mov
imul
sbb
mov
jmp
push
cmpsb
movsb
and
mov
mov
and
ror
mov
mov
xor
leave
or
pop
inc
mov
scas
loop
inc
stos
dec
mov
cmpsl
xor
xor
cmpl
push
mov
adc
sbb
test
sbb
and
pop
fwait
loope
call
cmp
out
jne
les
repnz
scas
dec
adc
cmp
xchg
xor
dec
cs
js
sub
imul
push
les
movsl
add
dec
add
pop
adc
cmp
stos
incl
mov
je
pop
jp
insl
mov
movsl
test
daa
outsb
inc
push
call
lods
rcll
and
push
jbe
adc
push
fldl
sti
jl
sbb
ret
push
repz
and
mov
shl
inc
pop
cmp
adc
xchg
stos
scas
icebp
mov
jbe
ljmp
or
repz
pop
mov
lahf
test
gs
push
aam
adc
mov
add
xchg
popa
jle
mov
roll
pop
or
aaa
daa
push
or
cld
mov
ja
into
fstl
adc
ja
inc
insb
fadd
cmpsl
je
push
mov
add
jno
addr16
clc
sub
stc
mov
loopne
mov
cltd
dec
or
xchg
push
xor
push
inc
cmp
xorl
mov
fnsave
into
lcall
movl
icebp
jmp
inc
es
or
lea
loopne
mov
adc
fs
mov
xchg
sbb
cmp
nop
stos
jae
in
pop
scas
fisttps
mov
lds
adc
jbe
pop
mov
repnz
imul
incb
test
mov
push
adc
jae
adc
pushf
jge
movsb
jns
cmp
pop
les
dec
arpl
int3
fisubrs
das
jnp
mov
cli
shll
jmp
ss
or
and
bound
xchg
sbb
and
dec
fistpl
popa
mov
loopne
push
jae
in
dec
mov
cmpsl
and
cmpsl
out
gs
std
pop
mov
mov
ds
and
sbb
xchg
mov
popl
mov
sahf
xor
mov
pop
add
aam
daa
inc
fcoms
bound
addr16
stc
or
cmove
fs
jb
dec
rol
add
add
mov
call
cld
xchg
push
mov
cmp
out
stos
mov
pop
in
pop
mov
popf
outsl
adc
int3
test
fstl
push
jns
and
cmp
mov
pop
mov
push
xchg
cmpsb
jl
out
dec
sub
clc
inc
shrb
push
and
sub
movsb
mov
test
ljmp
inc
add
in
adc
int3
sub
lahf
jb
es
stos
and
mov
ret
es
imul
scas
sub
fst
and
mov
jbe
movsb
jp
dec
arpl
inc
xchg
movsl
fdivs
stos
sbb
or
notl
pop
adc
fdivl
add
push
mov
add
out
fidivl
and
sub
rorb
xor
and
subl
jle
mov
in
jp
dec
adc
insl
std
inc
mov
xchg
adc
push
bound
std
add
in
test
fs
xchg
inc
mov
pop
lock
mov
xor
cmc
and
leave
push
movsb
inc
sbb
xor
aaa
add
lods
sbb
das
and
dec
add
push
sbb
jg
fadds
adc
pop
in
outsl
jae
push
mov
cmp
mov
xchg
dec
sarl
pop
pop
pop
xchg
lock
push
push
xchg
mov
cmpsb
or
lret
sub
in
xchg
push
fisttpll
daa
imul
stos
daa
xor
pop
xchg
mov
inc
mov
fistl
ljmp
cmc
sbb
xorb
sbb
stc
ficoms
sbb
pushf
mov
test
sub
sarb
stc
dec
pop
push
out
iret
mov
xchg
mov
insb
mov
ljmp
cltd
neg
lods
sub
jmp
or
add
dec
adc
js
fiadds
sbb
rcr
push
push
imul
lret
mov
pusha
pop
pushf
jp
sub
xlat
pop
or
or
mov
mov
cmp
push
stos
je
aam
sub
jae
add
xor
jge
insb
push
ret
pusha
push
mov
pop
ja
adc
mov
mov
das
aad
cmc
adc
sahf
dec
es
jge
jecxz
movsl
cmp
push
dec
mov
pop
stos
out
mov
add
iret
in
test
inc
dec
mov
and
pop
mov
repnz
lds
or
and
push
arpl
inc
movsb
cltd
fldcw
aas
jo
add
call
pop
mov
push
sub
div
std
cmp
cltd
push
fcoml
pop
lock
or
fdiv
in
and
loop
fwait
xchg
lods
mov
pop
shrl
mov
adc
dec
push
aas
push
sbb
shll
add
js
or
repz
insl
dec
adcb
sbb
cwtl
int3
mov
addl
adc
je
sub
or
bound
xor
popf
jnp
mov
daa
int3
mov
cli
mov
xor
add
push
add
cs
and
cmp
ljmp
add
stos
push
and
push
movb
push
push
xor
jns
cmp
mov
jne
pop
inc
call
xor
movsb
and
aam
or
xor
push
xchg
sti
sbb
call
aaa
pop
movsl
mov
orl
pop
bound
imul
mov
int
xor
insb
and
sub
inc
lret
jnp
inc
repz
sub
popf
or
pop
sbb
lods
add
or
pop
and
inc
push
or
ret
cmpsl
and
repz
data16
jl
jp
je
add
cltd
inc
fidivl
sahf
sbb
xor
pop
imul
mov
add
test
popf
jns
mov
cli
mov
lahf
adc
jbe
or
xor
jb
pop
testl
cmpsl
cli
sbb
xchg
pushf
xchg
das
lds
cmp
scas
test
jae
imul
xor
mov
xor
mov
shll
iret
adc
mov
or
or
inc
int3
movsb
orb
add
add
test
in
ret
stos
push
jle
xchg
scas
cmp
sub
jp
or
test
fldcw
jo
xorb
mov
dec
cltd
imul
mov
mov
dec
dec
scas
je
jl
jne
je
mov
pop
push
jbe
mov
adc
popf
and
inc
mov
mov
sbb
loopne
push
mov
mov
xchg
jmp
cmp
cld
mov
test
mov
popa
adc
dec
lret
add
and
lahf
dec
loopne
rol
das
pop
mov
mov
pop
xchg
push
pop
xchg
bound
fdivp
mov
adc
sub
push
adc
ja
sub
pushf
je
loope
and
loopne
xlat
repz
xor
dec
test
mov
repnz
pop
rep
cmp
lock
or
std
insl
jns
xchg
fbstp
pop
loop
push
pop
scas
lods
cli
enter
call
or
loopne
mov
sbb
bound
fidivrs
sti
ja
arpl
negl
jns
mov
lea
js
testb
dec
cli
lock
cli
push
scas
testb
push
inc
cld
push
cmp
pusha
int3
pop
push
outsl
sbb
xor
pop
scas
sbb
pop
adc
xchg
js
aaa
lock
je
pop
inc
pop
and
lods
rolb
pushf
jmp
inc
repnz
mov
scas
into
pop
cmp
and
je
lret
push
adc
pop
in
add
insb
sbb
jo
adcb
lahf
test
cltd
mov
aam
es
adc
xchg
push
aam
sti
cmp
ret
push
shr
or
lock
sbb
xor
adc
dec
icebp
ss
movsb
mov
fs
clc
add
inc
push
sbb
stos
xlat
push
sbb
sub
push
movsl
je,pn
stos
fdivrl
jnp
scas
mov
or
jmp
lea
sub
adcb
ss
sub
insl
mov
mov
sub
fcmovb
mov
xchg
loopne
out
pop
into
leave
aaa
mov
inc
mov
pop
sti
scas
dec
movsb
sub
or
add
sub
daa
scas
or
loop
sub
lds
mov
jle
or
sub
sbb
mov
pop
mov
inc
adc
arpl
or
clc
or
mov
dec
inc
outsl
cld
mov
add
pop
popl
jnp
add
sbb
add
sbb
jo,pt
mov
jecxz
in
insb
mov
bound
ja
mov
loopne
dec
sbb
xor
in
push
mov
add
sbb
lods
lret
xor
pop
adc
in
test
mov
scas
stos
push
pop
or
cwtl
pop
mov
idivl
lods
sbb
or
pop
arpl
jmp
mov
in
movsl
and
bound
mov
lret
enter
les
push
inc
divw
jmp
xor
shlb
xor
cmp
cmp
lcall
mov
mov
jae
out
stos
add
jmp
fldenv
inc
xchg
sti
es
xchg
or
lcall
ror
sahf
sbb
fstpt
sub
ret
sub
loope
sti
hlt
imul
subb
xor
pusha
push
sbb
sbb
xchg
dec
jnp
mov
adc
and
aaa
push
cltd
in
jmp
cmc
cmp
stos
add
pop
jg
mov
icebp
gs
xchg
dec
sub
mov
jmp
testl
ficoms
sub
subl
hlt
lea
nop
jge
cmc
xor
lret
sub
shl
or
ror
ss
adc
test
jmp
sub
jecxz
sarb
in
out
sbb
ret
mov
cld
cmp
sub
lods
mov
pop
push
jle
sbb
into
dec
mov
cmpsb
pop
loop
mov
ds
and
cli
xchg
jmp
pop
popf
stos
mov
cmp
and
js
push
mov
mov
mov
cmp
jnp
hlt
mov
cmp
test
inc
push
es
mov
aad
loopne
data16
lahf
ret
push
mov
mov
sbb
vpmulhw
sbb
and
mov
mov
dec
loopne
mov
pop
mov
into
out
cmp
pop
xor
pop
loop
mov
cwtl
incb
push
push
dec
xlat
gs
push
cmpsl
push
add
stc
mov
and
hlt
sub
jb
cmpsl
push
stos
int
out
dec
add
jp
jp
sbb
mov
jns
xlat
setno
cltd
adc
push
mov
arpl
xor
adc
sub
test
sbb
dec
scas
push
ret
mov
addr16
cmp
mov
movsl
popf
jae
lods
or
inc
mov
sbbb
adc
add
lret
xor
xchg
in
ja
adc
mov
mov
stos
xchg
movsb
adc
add
push
clc
nop
lea
xchg
insb
fwait
sahf
mov
and
jp
fdivrl
sbb
mov
cmpsl
rcrl
movsb
shrl
adc
rclb
mov
push
push
pushl
mov
mov
xor
stos
push
sarl
pop
pusha
sub
lcall
jge
mov
jnp
pop
cmp
cld
es
mov
jb
push
mov
adc
or
sub
andl
shll
clc
inc
mov
xor
sbb
es
lahf
negb
xchg
stos
daa
sti
fwait
es
adc
cltd
in
sbb
test
inc
xchg
mov
lea
sub
mov
mov
push
ljmp
cli
mov
jb
jns
leave
rcll
dec
jo
mov
sub
pop
pop
pop
pop
dec
jb
dec
cli
addl
in
sti
aaa
jnp
jle
sub
std
in
cmp
imul
movsb
js
cld
adc
jg
or
imul
jae
out
cmp
dec
jmp
or
inc
in
push
sub
subb
adc
pop
mov
iret
jle
push
rorb
mov
mov
add
xlat
pop
and
push
mov
out
xchg
xor
pop
lret
pop
mov
stos
in
mov
fidivrs
insb
push
addr16
sub
pop
push
cs
fildl
or
xchg
or
imul
mov
addb
das
mov
cmp
mov
lcall
jmp
mov
pusha
sbb
and
sub
dec
mov
daa
xchg
mov
frstor
and
mov
je
mov
lods
fisubl
jbe
xor
lret
iret
mov
cld
lret
xchg
mov
popf
les
pop
mulb
test
add
std
mov
sbb
into
mov
fadd
ja
aad
mov
sbb
inc
movsb
cmp
jo,pn
std
xchg
stc
pop
orb
mov
pop
jg
aaa
leave
and
mov
call
xchg
int
repnz
and
cli
ljmp
cltd
push
pop
xchg
pop
inc
push
lods
dec
jp
scas
jnp
mov
mov
outsb
xchg
fnsave
arpl
ret
xor
jo
in
sub
pop
stos
dec
adc
or
jo
mov
mov
call
jns
xchg
cld
rolb
stc
sbb
shll
jo
imul
arpl
in
outsl
dec
jmp
fdivrl
mov
fidivs
adc
inc
iret
lock
fmull
fs
mov
xchg
xchg
inc
cmpsb
lock
repnz
mov
push
and
out
mov
lret
dec
dec
mov
in
scas
mov
xchg
jecxz,pt
loopne
or
jno
test
jnp
in
aam
adc
out
dec
push
jl
call
xchg
fld
pop
xchg
es
add
jns
adc
bound
pop
sub
dec
fsubl
movsl
or
hlt
xchg
dec
mov
adc
xchg
push
jns
aas
arpl
in
in
mov
or
ret
dec
out
sysret
push
fdivs
outsb
mov
rcrb
jb
jmp
imul
push
mov
int3
mov
loope
jl
sahf
lock
jmp
rcrl
push
loopne
push
js
xor
jl
lret
or
jb
pop
sub
popa
add
jbe
mov
dec
rcr
mov
dec
movsl
adc
sub
mov
adc
adc
inc
xor
mov
es
mov
dec
fcompl
pop
jmp
pop
les
xor
lea
rcr
into
outsl
inc
das
or
sbb
stos
pop
dec
out
and
add
dec
adc
shlb
lods
dec
xchg
stos
outsl
aas
clc
ret
dec
stos
ja
inc
movsl
movsl
sbb
in
push
inc
mov
inc
roll
sahf
mov
shll
and
push
sar
outsl
dec
add
scas
dec
push
pop
pop
xor
add
ljmp
jns
cs
mov
adc
mov
hlt
js
sti
clc
jbe
pop
xchg
stos
xchg
sub
pop
mov
js
addr16
inc
cmp
xchg
xchg
pop
outsl
add
ja
pop
cmpsl
lcall
or
in
divl
loopne
and
add
pop
icebp
pop
jp
or
mov
cmp
sbb
xchg
xchg
xchg
sub
xchg
leave
xor
arpl
and
data16
test
xchg
lods
adc
jle
push
push
dec
cmp
xor
add
es
outsl
xor
xchg
lds
dec
xlat
aaa
sub
lock
dec
xchg
test
jne,pt
pushf
cmp
cld
mov
sbb
dec
outsb
add
scas
or
subb
int3
ret
and
mov
xchg
xor
inc
cmc
jae
mov
cltd
pop
pop
iret
mov
sub
xlat
inc
outsl
in
cld
cmp
jle
push
pop
sub
or
jo
mov
inc
mov
repz
shll
rolb
sbb
xor
push
push
call
dec
fnstenv
outsl
xchg
add
pop
push
testl
mov
scas
mov
sub
arpl
loope
aaa
fiaddl
icebp
add
rolb
fwait
pop
pop
lahf
mov
inc
cmp
adc
sbb
adc
in
fisttpl
bound
ret
insl
mov
insl
jb
js
mov
pop
repnz
or
push
and
es
xchg
roll
testb
call
aas
clc
test
pop
jnp
xor
push
sub
out
pop
mov
mov
movsb
push
mov
mov
dec
push
mov
xor
mov
cmc
dec
cmp
nop
and
cmp
fists
repz
bound
insl
mov
xchg
loopne
rcll
push
and
mov
push
in
lret
pusha
je
insl
shl
clc
dec
aaa
xor
ret
dec
mov
and
mov
and
ss
pop
ss
push
aaa
lods
mov
inc
popf
mov
aaa
std
jg
fldcw
mov
cmpsb
push
lcall
mov
mov
scas
mov
adc
xchg
adc
outsl
sub
hlt
iret
jecxz
lret
xchg
xchg
adc
jge
and
fmuls
mov
fbld
add
pop
xchg
xchg
inc
mov
sbbl
lock
ss
data16
movsb
inc
adc
cmp
mov
test
fs
inc
sub
mov
cli
xor
fcoms
rcl
je
mov
into
mov
or
lret
mov
out
outsl
mov
cmc
inc
xor
mov
sarl
push
mov
mov
lret
scas
movsl
mov
pop
mov
ret
mov
es
sbb
rorb
pop
and
xchg
insb
cmp
add
xchg
js
mov
jp
adc
mov
dec
in
xchg
push
in
cmp
sahf
xor
sub
cld
divl
or
and
mov
inc
in
jo
std
cld
sbb
jg
mov
cwtl
nop
adc
addl
mov
pusha
jp
cmp
fcompl
xlat
cld
ljmp
in
rol
es
pop
cmpsb
push
js
dec
pop
sub
pusha
scas
aas
stos
mov
popf
insl
pop
mov
outsl
push
and
lods
pop
jecxz
cmp
test
rorb
shlb
int
movsb
dec
sbb
jp
rclb
and
outsb
mov
stos
push
mov
scas
mov
lahf
adc
int3
cli
push
xchg
xor
movsb
mov
aam
jno
or
repz
xchg
mov
fcom
subb
and
fsubrl
aaa
or
call
cs
popa
jno
repz
dec
mov
sbb
mov
dec
dec
xlat
xor
scas
mov
cli
pushf
jbe
pop
xor
test
test
adc
cs
outsb
das
jle
xor
sub
mov
jo
dec
cmp
outsb
cli
add
pushf
jp
ljmp
movsb
lahf
fstl
pop
test
pop
xlat
pop
mov
aam
pop
orl
dec
adc
jge
popf
popa
lahf
test
mov
cmp
repnz
sbb
cmc
aas
dec
addr16
push
add
pop
xchg
pusha
andl
push
pop
cmpb
mov
xor
loop
lds
dec
xchg
aad
jbe
cld
jmp
jmp
sub
sbb
lret
push
mov
jnp
dec
loope
xchg
enter
and
pop
insb
pop
sbb
cmp
mov
dec
fisttps
mov
in
lcall
fildll
test
sbb
and
xor
cmpsb
sbb
mov
scas
jle
and
out
mov
insl
mov
mov
iret
popf
pop
pop
lret
and
inc
add
jecxz
repnz
cmp
mov
xchg
pop
push
dec
add
negb
scas
and
cmp
lds
pop
jle
add
stos
repz
shrb
and
addr16
xchg
fcmovnb
inc
popa
xor
inc
inc
mov
mov
dec
subl
js
sub
cmpsl
inc
fistps
das
stc
mov
rolb
pop
jmp
dec
in
insl
pop
pusha
xlat
clc
sbbl
aas
jns
outsl
xchg
adc
lahf
cwtl
je
xor
mov
pop
xchg
test
int
adc
pop
inc
adc
lock
push
out
add
imul
out
push
push
shld
xor
xchg
mov
insb
xlat
and
stos
bound
outsl
gs
xor
pop
dec
mov
jae
lock
mov
lret
clc
xor
jae
push
out
or
fs
mov
xlat
add
rolb
inc
add
lock
or
push
ja
loop
add
inc
inc
mov
push
xor
inc
mov
mov
in
js
clc
std
imul
iret
int
push
aas
cld
mov
mov
cmpsb
jp
and
test
ljmp
cltd
mov
add
scas
jge
enter
cmp
dec
mov
testl
cmp
push
cld
jae
mov
cmp
lahf
sbb
cli
mov
pop
out
mov
push
pop
pop
push
fsubrl
cltd
int
pop
lea
mov
call
pushf
pop
xchg
ljmp
dec
sbb
rcl
jbe
addr16
cmpsl
stos
push
pop
pop
jmp
mov
mov
mov
dec
pop
mov
repz
insb
je
shll
gs
fbld
pop
enter
dec
icebp
mull
xchg
push
lock
cwtl
adc
lahf
scas
dec
shrl
push
in
cmp
mov
stos
repz
fisttpl
lock
jle
pop
clc
cmc
test
push
pop
jns
mov
dec
pop
repnz
cwtl
xor
or
fmuls
in
and
andb
hlt
add
sti
jae
rclb
sub
stc
movsl
sub
lea
arpl
push
pusha
mov
lcall
lock
aad
pushf
pinsrw
fwait
and
inc
mov
cmpsl
cmp
inc
sti
shll
inc
adc
jns
mov
popf
cs
pop
imul
insb
aad
push
fwait
xor
push
ret
mov
push
xor
pop
in
inc
stos
ds
nop
fs
fs
lea
mov
jns
inc
mov
or
cld
jno
inc
inc
sub
push
hlt
ss
das
inc
gs
enter
scas
in
mov
push
inc
inc
imul
inc
pop
dec
adc
inc
xor
inc
jge
dec
and
dec
fstpl
loop
shrl
xchg
leave
cmp
gs
leave
mov
js
xchg
adc
int
dec
outsb
add
dec
sbb
shlb
xlat
adc
shl
outsb
lds
sub
adc
xor
add
jno
popa
int3
mov
cmp
mov
mov
lock
inc
add
jae
movsb
stos
test
push
jecxz
xor
jg
jno,pn
cwtl
or
lods
jecxz
lds
xchg
mov
mov
inc
popf
or
enter
dec
outsb
loop
cmp
andb
push
mov
lfs
mov
or
inc
push
popf
jbe
jnp
les
bound
jg
xor
push
sub
jge
testb
push
xchg
roll
popa
in
fwait
fwait
mov
xor
xlat
xchg
frstpm(287
mov
cmp
inc
cmp
or
or
inc
sbb
int
jno
loopne
or
mov
pop
jne
adc
imulb
jne
mov
lds
ret
xchg
cmp
bound
test
idivl
outsl
jle,pt
jl
mov
fistl
out
push
sbb
push
jecxz
mov
push
mov
xorb
idivl
shl
sti
sub
out
push
mov
scas
jp
popa
repz
stos
adc
lret
fdivr
ret
mov
push
in
psubsb
xor
mov
pop
ret
inc
xor
aam
dec
ja
loopne
bound
test
push
sub
in
pop
xor
pushl
and
repz
sub
add
sub
imul
in
rol
leave
pushf
mov
xchg
pop
or
lcall
test
sbb
fsubrp
jmp
icebp
cmp
je
andb
and
in
or
int
xlat
mov
ljmp
fstps
popa
dec
rol
outsb
popf
pop
in
pop
sub
cmp
jnp
call
clc
inc
mov
fistps
pop
jo
leave
insb
lock
in
push
adc
push
push
ret
jno
notl
out
mov
sub
xchg
test
fisubrl
jbe
xchg
sbb
pop
aad
dec
mov
test
mov
in
cmpl
sbb
xchg
fdiv
dec
mov
rcll
aad
dec
xchg
leave
aas
inc
add
stos
mov
xor
mov
or
mov
mov
cmc
mov
jp
mov
subl
pusha
imul
inc
jae
jl
push
imul
movsl
insl
stos
push
or
sub
lret
ds
sbbl
ret
rolb
or
xor
lret
jae
xchg
push
xchg
dec
negb
movsb
cmpsl
jae
mov
xor
testb
inc
repnz
aaa
pop
jecxz
rcll
js
lret
mov
loope
dec
xchg
fdivs
insb
cmp
jnp
ds
arpl
inc
xchg
mov
dec
imul
jns
inc
repz
js
mov
clc
cmp
in
divl
scas
pop
pop
fstpt
jb
jecxz
mov
shl
pusha
or
icebp
add
mov
jp
sbb
in
push
mov
loop
xchg
push
push
sub
mov
adc
icebp
xor
push
push
mov
xor
and
mov
popa
inc
jg
mov
push
push
inc
or
fistps
fnstcw
scas
outsb
ret
sub
leave
repz
sahf
popf
aaa
pusha
rcrl
fcmovbe
mov
orb
jecxz
mov
icebp
push
je
add
xor
idivb
mov
rol
and
imul
aad
lea
pop
pop
inc
pop
push
inc
xlat
inc
mov
movsl
mov
mov
imul
aad
or
ret
pop
xchg
pop
out
xchg
loope
aas
add
sbb
push
mov
notl
or
lret
xor
fbstp
push
cmp
dec
dec
adc
push
ja
std
pushf
push
pop
stos
pop
fiadds
jb
jge
mov
push
mov
fdivrs
je
mov
dec
adc
xchg
mov
or
cmp
jmp
mov
pop
jbe
ds
pusha
stos
ja
mov
popa
xor
mov
cmp
push
xchg
ljmp
dec
mov
icebp
inc
push
js
jo
enter
adc
sub
hlt
mov
jns
subl
sub
mov
out
pop
xor
push
enter
jae
fidivs
adc
and
inc
pop
dec
pop
aaa
cmp
test
lea
and
out
mov
dec
jmp
std
sahf
imul
fcomp
or
xorl
adc
cbtw
add
fsubrl
sbb
mov
inc
push
pusha
xchg
addl
adc
push
push
fs
push
outsb
dec
or
mov
push
jae
lods
pop
in
mov
test
push
jo
enter
int
aad
xor
leave
jmp
push
fidivs
adc
pop
mov
mov
aas
or
lcall
jbe
inc
mov
lods
jne
aad
aad
jecxz
ficoms
lds
adc
mov
mov
jne
pushl
mov
jbe
ret
stc
sahf
xlat
add
sbb
sub
lods
lods
mov
daa
push
es
stc
jp
pushf
out
pop
xor
xlat
push
arpl
adc
nop
jae
cmpsb
out
mov
xchg
dec
sbb
scas
addr16
mov
sub
cmp
jge
int3
xchg
fstpt
rcrl
mov
ror
and
mov
daa
repz
cmp
dec
mov
test
mov
mov
cmpsb
test
pop
cmpsb
imul
sbb
dec
leave
add
pop
jle
pop
mov
inc
sub
mov
lds
push
xchg
in
dec
mov
insl
mov
in
fwait
mov
in
cmp
lods
mov
xor
ja
cmp
pop
push
imul
mov
push
push
pop
test
nop
xlat
pop
les
movsb
xor
push
mov
scas
fcompl
jne
xor
xchg
dec
ss
jecxz
test
mov
mov
xor
cmp
cltd
cmpl
ljmp
ds
push
cmp
jmp
pushf
xor
daa
scas
test
out
mov
stos
pusha
outsl
adc
aas
mull
cs
daa
cmp
xchg
daa
out
inc
sbb
push
sbb
lcall
cmpsb
inc
pusha
pop
and
xor
ficompl
add
jg
rcll
xchg
mov
fxch
clc
pop
jae
test
sbb
aas
dec
rolb
sbb
dec
push
xor
mov
aaa
cmp
adc
rcl
rcl
idivb
popa
pop
aad
push
ret
aas
xchg
out
push
mov
xchg
jae
leave
and
cmp
lds
adcl
inc
shl
dec
test
inc
push
and
dec
xor
sbb
push
frstor
jg
push
cmp
pop
mov
out
push
popf
loop
ficomps
hlt
and
sub
cmc
sbb
sub
jno
insb
and
jl
cmpsb
inc
lcall
in
add
add
inc
mov
and
pop
add
out
xor
and
mov
scas
inc
lcall
popa
dec
pushf
inc
jnp,pn
or
or
inc
pushf
fidivrs
xor
call
fsubs
xchg
mov
fsubl
lcall
int3
push
lret
xchg
mov
stos
xchg
imull
out
add
push
popf
push
mov
andl
and
pop
scas
or
lcall
push
inc
cmp
xor
sbb
add
outsb
adc
sarl
arpl
cwtl
shll
hlt
jecxz
mov
mov
insb
ds
xor
jb
ficoml
dec
jb
xchg
cmc
dec
scas
lret
fldpi
mov
mov
nop
cld
test
xchg
mov
xor
adc
mov
or
xor
aas
and
int3
xchg
mov
push
call
js
xor
or
sarb
icebp
push
sar
pusha
xchg
mov
lds
dec
adc
outsb
pop
lret
xor
enter
lahf
icebp
in
repnz
dec
dec
ja
sbb
int3
cmp
xchg
pop
in
jg
mov
insb
loop
or
mov
ret
enter
mov
jo
mov
dec
sahf
pusha
aas
jp
pop
fbstp
movsb
aaa
jne
sub
jg
push
mov
pop
push
push
into
xchg
ret
loope
cmpb
mov
xchg
or
ret
jmp
shll
cmpsl
les
and
inc
xor
fsts
test
lea
in
dec
scas
and
cmc
inc
inc
stos
pop
mov
out
sub
push
xchg
popf
out
xchg
add
xor
hlt
hlt
inc
push
dec
stos
push
ret
shll
test
pop
ret
and
push
loopne
ret
inc
movsl
fwait
scas
cmpsb
add
out
jns
jecxz
cli
aad
add
inc
fbld
out
and
dec
mov
cmp
mov
xchg
cld
outsl
xchg
sub
mov
cmpsb
js
dec
xchg
aam
inc
pop
xor
xor
das
sbb
decl
mov
push
fisttpll
aad
imul
push
and
pop
mov
out
inc
add
outsl
xchg
mov
andb
imul
add
mov
test
pop
scas
call
mov
pusha
mov
xlat
mov
fbld
fwait
cmp
mov
push
cmpb
jp
xchg
xor
push
and
xchg
rcl
addr16
in
mov
orb
lahf
push
xor
das
test
cmp
fisttpl
mov
sub
shrb
and
cwtl
xor
dec
xchg
inc
pop
add
loope
call
xorl
xor
or
mov
or
mov
dec
cmp
jecxz
rorl
shlb
js
sarb
mov
lods
cmp
mov
dec
insl
xchg
mov
jl
leave
xor
addb
into
fbld
data16
insb
dec
out
push
cmc
jmp
out
or
cmp
fldt
lret
add
out
cwtl
mov
add
out
dec
js
mov
dec
inc
ja
sbb
ret
push
nop
add
mov
xor
mov
daa
add
xchg
dec
in
add
popf
dec
pop
sbb
push
add
pushf
stc
mov
push
jo
js
dec
shll
lcall
mov
bsf
mov
dec
mov
loope
stc
adc
sbb
push
sbb
xchg
sbb
dec
sbb
fildl
jb
mov
repz
dec
dec
mov
mov
mov
sub
pop
div
push
rcrl
adc
sub
jmp
sub
fistl
jge
xchg
pop
dec
jle
lea
ja
sbb
xorb
orb
sahf
jecxz
hlt
pop
or
sarb
mov
or
sub
mov
bound
push
int3
inc
roll
outsb
and
out
pop
out
insl
test
adc
push
lahf
testl
stos
out
adc
dec
popl
fdivrp
fwait
ss
sub
push
lds
dec
mov
cmp
pop
sar
mov
aad
xchg
aas
sbb
adcb
or
inc
or
cmp
and
add
or
sbb
ja
into
or
add
call
add
leave
sub
test
popf
addr16
add
es
and
inc
pop
xchg
clc
rcr
mov
and
hlt
xor
dec
jno
jns
mov
push
xchg
cmp
lahf
pop
cmpsb
into
enter
std
or
dec
sbb
push
pushf
adc
xor
daa
mov
in
sbb
test
mov
jnp
mov
shrb
divb
push
mov
pop
int
dec
pop
mov
inc
mov
mov
test
xlat
adc
ret
repz
mov
inc
inc
scas
mov
loopne
and
mov
mov
movsl
and
or
shrb
nop
inc
cmpb
aam
cmpsb
jecxz
fnstcw
xlat
loop
movsb
xor
and
push
cmp
inc
pop
in
mov
dec
cs
mov
shl
outsb
xchg
xchg
xchg
dec
outsb
sar
dec
dec
rorb
aad
and
jmp
imul
xor
fildl
je
mov
push
xor
pop
and
xor
ja
data16
stos
xor
inc
leave
push
pushf
xor
sub
sbb
es
dec
pusha
xchg
hlt
lcall
rorb
call
xor
mov
sub
dec
or
xchg
jo
mov
pop
call
ret
in
and
mov
push
imul
je
add
jp
xchg
loope,pt
cmp
jle
sahf
mov
cmpsb
in
aaa
andl
jge
cwtl
cmpsb
cmpsb
mov
push
ja
fnstcw
pushl
js
add
push
fadds
sbb
ret
out
xlat
mov
add
jl
and
dec
cmp
mov
xchg
mov
mov
add
out
mov
mov
or
pop
dec
add
jae
push
scas
addr16
repz
or
push
push
cmpsb
xor
in
cmp
xchg
mov
push
xor
test
inc
cmp
sub
fisttps
mov
pop
andl
dec
in
mov
inc
clc
int3
mov
sbb
dec
test
fldl
nop
jae
loope
sarb
out
lret
stos
xor
sub
add
add
std
pop
popa
pushf
jmp
inc
fnsave
xor
xor
sbb
mov
xlat
pop
repz
pop
mov
fcomps
mov
inc
leave
mov
roll
cmp
pop
fstpt
in
in
or
mov
or
xor
lods
repz
push
loopne
adc
scas
jmp
push
hlt
sub
popa
adc
out
inc
jno
dec
mov
add
xor
sub
arpl
popa
or
add
dec
je
cltd
addr16
in
lahf
shll
mov
jl
xchg
insb
jns
into
pop
jb
jno
mov
jmp
inc
mov
pop
xchg
push
jb
xor
icebp
xchg
das
in
sub
inc
push
sub
push
adc
lea
and
stos
and
test
daa
mov
cs
into
adc
es
xchg
mov
movsl
lcall
push
adc
xchg
out
xlat
and
pushf
dec
mov
subb
jl
fldcw
ss
mov
arpl
shl
fistpl
in
test
subl
push
dec
sbb
inc
push
mov
pusha
xchg
repz
inc
mov
sarl
push
or
test
test
xor
jnp
mov
sub
les
lds
adc
jle
push
pusha
xor
xor
or
out
jp
and
fdivrl
xchg
das
stos
pop
subl
push
hlt
mov
or
pop
cmp
sbb
test
xchg
mov
les
xchg
ret
adcb
shr
stos
scas
mov
adc
mov
movsl
xchg
and
outsb
rcl
push
push
pushf
mov
push
jl
stos
or
loopne
or
jmp
sbb
jecxz
lods
insl
inc
cmpsl
xor
dec
pop
xor
or
popf
stos
pop
sbb
aam
xorb
pusha
push
xor
imul
jo
loop
mov
int
add
inc
inc
cmp
push
mov
sub
leave
fiadds
lret
sub
adc
outsl
jmp
pop
mov
cmpsb
dec
loope
mov
cmp
fcmovne
push
add
push
push
in
nop
sahf
sbb
mov
test
adc
mov
sub
loop
in
mov
inc
gs
cltd
cltd
fwait
aam
jp
jns
cwtl
movsl
scas
dec
lahf
imul
jmp
pop
decb
mov
xlat
and
mov
add
int3
stc
sbb
adc
jno
jo
xor
or
jge
fcoml
ret
xchg
cmp
cmp
scas
dec
lock
fs
sub
jle
or
push
inc
xchg
into
pop
add
jo
inc
sbb
lea
jg
push
in
cmp
scas
popa
sbb
xchg
aad
mov
stos
mov
cmp
and
cmpsb
repz
sbb
or
and
repz
pop
adc
movsb
or
pop
lock
cmpsl
xor
cmp
push
sbb
dec
mov
mov
das
pop
stos
sahf
or
ds
bound
jg
inc
cli
stc
ja
jae
les
cmp
inc
mov
subl
popl
rorb
xor
add
or
outsb
mov
out
push
cmpsl
rorb
adc
stos
ja
jecxz
adc
push
inc
pop
pop
test
sub
push
stc
pop
xchg
popf
push
jmp
xacquire
popf
cli
xor
jl
loopne
pop
fndisi(8087
and
mov
and
jp
xchg
mov
mov
lock
nop
lahf
dec
ret
jp
inc
sub
loop
push
mov
add
pop
push
sar
into
scas
out
mov
jb
pop
outsb
add
stos
xor
inc
push
cmp
icebp
rorb
js
dec
les
xchg
movsl
xor
mov
jg
fnstsw
aad
and
stos
out
inc
loope
mov
cld
mov
test
mov
or
push
xor
sub
push
outsb
xchg
pushf
jnp
mov
mov
repnz
lret
inc
dec
aaa
in
cmpsb
inc
out
fsubs
adc
repnz
or
jecxz
mov
hlt
pop
pop
jge
rorl
lret
sbb
aad
cmp
pop
into
loope
add
rcll
xor
aam
dec
addb
mov
xchg
pop
shr
xor
fistpl
outsl
sub
xor
subb
mov
in
cmp
fsub
mov
addr16
mov
pop
mov
mov
mov
xchg
leave
movmskps
add
scas
pop
inc
test
pushf
push
leave
adc
sub
xchg
jbe
das
lahf
and
mov
or
push
lcall
je
jge
cmc
test
push
dec
std
inc
insb
fs
push
pop
add
jg
int3
cmpsb
fiaddl
mov
mov
push
jnp
test
lcall
aad
les
bound
adc
pop
inc
xor
in
rolb
bound
stc
aaa
das
mov
add
adc
ja
ret
outsl
fldl
movsl
mov
test
jo
jb
int
mov
roll
mov
ds
aam
movsl
xchg
ljmp
push
mov
outsb
daa
add
repz
rcl
lds
test
mov
jno
mov
jnp
pop
xchg
leave
or
sub
in
push
xchg
pop
xor
jnp
fcmovu
mov
roll
out
pusha
cmp
add
mov
pushf
imul
imul
ljmp
add
ljmp
fwait
adc
enter
clc
data16
jecxz
popa
xor
jle
mov
lcall
dec
mov
add
scas
sbb
fidivrs
inc
sbb
loopne
xor
inc
push
mov
xor
xor
and
movsl
jp
insl
mov
scas
pushf
js
xchg
iret
cltd
or
mov
sbb
inc
pop
sbb
mov
cmpsl
rorb
sub
mov
out
mov
dec
xor
sub
std
push
pop
xchg
or
mov
jg
js
cmp
addr16
push
data16
dec
lds
pop
cli
jmp
orw
fs
mov
jo
ficoms
cltd
out
mov
fistl
add
pusha
pop
inc
movsb
movsb
push
aas
notl
fwait
rcll
mov
inc
scas
cld
mov
adc
xor
xor
mov
jo
mov
jb
mov
mov
je
pop
xor
xor
sub
cmp
xchg
int
and
pop
hlt
or
adc
or
sub
cmp
adc
mov
jne
ljmp
lods
in
push
sbb
jp
mov
or
ss
cmp
push
sub
push
scas
icebp
jnp
push
dec
out
ffree
js
test
dec
sahf
fadds
dec
adc
inc
mov
sub
lods
pusha
icebp
shrb
or
xchg
test
mov
ret
divb
ja
and
iret
test
mov
movsb
bound
das
inc
pop
mov
insl
roll
mov
dec
sahf
inc
outsb
rclb
fbstp
lcall
and
mov
dec
push
pop
ret
outsl
insl
gs
cmpsb
or
mov
mov
pop
cmc
xchg
rorl
add
and
push
mov
sbb
test
stos
mov
adc
pop
sub
mov
jne
lret
mov
add
mov
lahf
outsb
iretw
add
jo
dec
lock
push
ss
stos
xchg
lods
aas
pop
mov
daa
aaa
push
lea
sbbb
clc
and
push
pop
push
pop
add
out
add
jo
jbe
sahf
ljmp
push
mov
movsl
movsl
mov
ljmp
scas
xlat
mov
mov
jg
sbb
out
gs
out
mov
push
mov
sti
mov
test
cmp
ss
mov
inc
fwait
xor
pop
pop
push
xor
sahf
popf
cmp
jmp
mov
push
or
inc
add
insl
into
in
or
push
iret
sbb
mov
mov
mov
lret
push
pop
insb
cwtl
pop
or
in
fldcw
sbb
adc
or
fstp
in
jo
xchg
jge
fst
push
jne
int
popf
lret
jle
mov
pmullw
or
dec
mov
xchg
cld
sbb
comiss
add
mov
cmp
mov
nop
xor
sbb
les
push
inc
dec
aad
jle
cltd
fstl
push
mov
into
pop
sub
outsl
jnp
adc
outsl
mov
inc
rorl
xchg
cld
jge
pop
mov
jecxz
and
jo
fs
popa
test
sub
cmpsb
loope
cmp
aaa
mov
das
mov
mov
mov
inc
sbb
hlt
or
loopne
jmp
inc
push
lret
mov
fsts
flds
pop
pop
jne
mov
mov
mov
popf
stos
or
sbb
rcl
dec
jo
cwtl
lret
or
dec
stc
stos
jne
out
cmpsl
xor
mov
outsl
mov
mov
pop
cmpsb
shlb
insb
stos
sub
mov
cld
pop
gs
push
fidivs
insl
push
jns
inc
ss
repz
and
lret
xchg
inc
xchg
pop
push
mov
sbb
jg
bound
jno
push
pop
out
ret
imul
push
leave
mov
pop
frstor
cmp
in
ja
xchg
out
push
sub
jecxz
loopne
xchg
mov
pop
dec
inc
in
push
orb
sbb
sub
arpl
icebp
lods
xor
mov
pop
xchg
mov
jns
pop
cld
jmp
xchg
push
push
mov
mov
pop
mov
adc
arpl
sub
xor
dec
insl
push
jno
aam
sahf
adcl
xor
dec
push
cmc
mov
or
lods
dec
push
ja
cmp
pop
subb
test
ret
mov
and
xchg
jp
test
mov
cmc
jl
xor
loop
push
add
pop
sub
jae
xchg
mov
push
mov
mov
pop
pop
dec
xchg
arpl
cltd
fstpt
sti
sub
lret
movhps
loope
mov
pop
out
mov
adc
pop
xchg
cmc
push
ds
jbe
mov
jecxz
adc
mov
xor
xchg
test
lds
js
stc
jecxz
add
aaa
mov
leave
fwait
push
mov
cmpsb
and
movsl
mov
jecxz
movsl
nop
aas
or
mov
mov
je
popf
dec
or
popl
filds
rcll
sub
das
sbb
push
xor
add
or
fsubr
lea
loop
push
fiaddl
inc
lahf
push
rcrl
inc
mov
mov
idiv
popa
std
sbb
and
jnp
sti
jecxz
xchg
jge
js
loopne
and
mov
push
jp
fcoms
iret
test
sbb
call
insl
inc
clc
imul
mov
jmp
ja
or
das
inc
mov
push
fisubs
imul
test
mov
mov
rol
test
mov
jae
and
ss
inc
cmp
je
mov
dec
sti
sbb
cmp
inc
xchg
jnp
faddl
dec
mov
jns
add
xor
mov
fs
mov
out
jnp
mov
iret
dec
xor
mov
aam
dec
mov
fcoml
cli
loop
pop
pop
jle
dec
subb
call
orl
cld
das
cmp
sarb
nop
pusha
mov
inc
xor
movsl
add
pop
dec
add
insb
or
mov
inc
cmp
dec
into
fwait
sbb
xchg
addr16
and
sbbb
push
cs
es
sbb
in
mov
mov
dec
or
and
lret
clc
dec
loope,pn
cmp
bound
mov
cmc
push
enter
test
xor
js
and
jne
and
and
imul
sar
test
cli
jg
cmp
in
cmpsb
or
int
sub
bound
jne
inc
fwait
add
divl
pop
scas
xchg
xor
loopne
repnz
imul
mov
shrb
xor
cmpsb
inc
loope
xchg
imul
icebp
adc
addr16
and
and
dec
js
sbb
mov
movsl
sbb
das
cltd
jns
insb
xchg
pop
lds
sub
mov
std
xor
sub
jns
sbb
or
cmpsl
mov
jmp
outsl
xor
add
xchg
cltd
mov
aad
add
inc
divl
mov
add
xchg
mov
loop
test
adc
test
std
test
nop
fildll
xchg
lea
pusha
and
sub
aas
add
lahf
and
cmpsb
arpl
out
add
xchg
frstor
cli
in
cmpsb
jp
dec
adc
out
inc
popf
inc
mov
mov
mov
movsl
loop
aas
adc
cwtl
add
test
mov
mov
dec
stos
sub
add
mov
fildl
loopne
mov
inc
mov
sub
add
jl
cmp
in
mov
mov
jecxz
cmp
ljmp
sub
cwtl
lcall
movsl
mov
fnsave
push
xchg
loop,pt
adcl
cmp
ret
fildll
and
out
mov
pop
push
and
xor
or
je
test
adc
stos
aas
or
data16
push
scas
or
aad
mov
xlat
mov
imul
nop
push
sbb
je
push
or
stc
mov
cmp
lods
inc
aas
inc
aam
daa
or
daa
rcl
loop
scas
or
sbb
xchg
roll
jecxz
out
mov
cmp
jg
cmpb
pop
aad
mov
repnz
jg
in
pop
push
in
clc
mov
xor
mov
shl
mov
out
scas
jmp
lret
cmp
ret
in
mov
popa
cmc
daa
js
push
push
int3
cmp
cltd
sarl
mov
mull
jns
xor
aad
mov
sarl
add
call
out
xor
jbe
fstpt
lock
mov
sbb
gs
mov
xchg
jp
hlt
adc
sahf
jnp
mov
cwtl
mov
shlb
sbb
out
dec
sahf
cli
stos
mov
mov
gs
andb
mov
sub
imul
sub
push
xor
icebp
dec
adc
mov
inc
rolb
insb
mov
aas
sub
daa
nop
xchg
fsubl
push
sbb
pop
inc
mov
push
jb
fsts
add
aaa
test
cli
icebp
sbb
cmp
ret
fdivrs
lahf
and
cmpsb
pop
cmp
stc
xchg
jle
rorb
out
lds
xlat
mov
test
or
testb
fsts
je
and
dec
dec
adc
fnstenv
leave
jp
in
cld
dec
add
mov
loope
sbb
bound
push
arpl
jle
fiadds
jnp
ret
ficoms
xchg
in
pushf
lods
mov
sbb
pop
inc
setne
jnp
pop
push
and
xchg
addr16
pop
outsb
add
test
or
addr16
push
cmp
mov
enter
insl
pop
pop
test
pushf
out
sub
andl
add
push
mov
out
mov
lock
sub
test
xchg
push
data16
mov
dec
cmp
lret
jo
cmp
stos
ljmp
xor
in
test
cmpsb
in
jns
out
jns
aas
aad
roll
stos
cli
lea
or
mov
cmp
fidivl
adc
mov
push
push
adc
push
cmpsl
lods
idiv
in
nop
push
push
mov
test
mov
jbe
jg
sbb
mov
hlt
xchg
out
push
nop
rcll
sub
dec
push
mov
cmp
pop
pop
leave
daa
enter
hlt
push
jns
subl
cs
mov
add
mov
pop
mov
add
cmpsb
inc
xchg
cmp
adc
imul
add
push
into
cmpsl
cmpsb
jg
scas
sub
movsl
jae
push
int3
jnp
call
faddl
xor
fstl
or
jp
push
psrld
daa
orl
push
xchg
mov
ud0
lcall
cmp
arpl
sahf
adc
mov
xchg
ret
lcall
pop
fdivl
popf
cmp
es
ss
clc
iret
fnsave
movsl
pop
movsl
mov
xchg
shlb
daa
repnz
push
jl
cmp
push
sbb
dec
ret
mov
xchg
test
adc
mov
jno
push
push
and
into
pop
mov
sub
sbb
arpl
jno
les
insl
mov
out
sbb
lahf
sti
and
out
pop
xchg
sbb
sub
fsubs
fcom
int
test
nop
push
mov
iret
enter
and
or
dec
lret
xchg
clc
and
cmp
imul
xor
rorb
add
dec
and
push
and
scas
arpl
inc
cmp
sub
rcrb
add
push
into
cmpsl
add
or
fidivs
xchg
xchg
out
aam
pop
fsubs
scas
mov
fstps
test
bound
cmc
sbb
push
sarl
mov
cwtl
repz
mov
clc
dec
test
imul
inc
mov
pusha
jb
neg
mov
add
or
mov
cmpl
insb
mov
add
lods
adc
rcl
and
andb
xor
push
cwtl
push
pop
lcall
pop
jl
and
dec
aam
fwait
mov
jl
adc
adc
lahf
shll
mov
mov
add
xorl
repnz
out
mov
outsl
push
add
xor
mov
cmp
xor
rolb
pusha
push
push
mov
pop
add
fnstcw
and
sub
mov
loop
mov
test
dec
jmp
pop
stos
and
or
pop
in
les
rcl
loopne
hlt
add
pop
icebp
mov
sbb
mov
ljmp
jbe
add
scas
adc
inc
sahf
outsb
pushf
cmp
imul
lcall
mov
pop
aaa
repnz
and
inc
ret
mov
stc
scas
orl
pop
or
add
imul
stc
stc
hlt
mov
inc
add
outsl
movsl
nop
inc
lock
testl
aam
xchg
loop
in
mov
bnd
inc
xchg
or
or
leave
mov
and
xor
cmp
jnp
xor
ds
shrb
test
dec
push
jne
sbb
out
ret
ljmp
test
sarb
and
and
push
pop
bound
and
movsb
cmp
sub
mov
jne
mov
xor
and
jae
stos
and
cmc
push
add
pop
mov
std
add
push
pop
cmpsb
add
xchg
cltd
int3
jae
jp
daa
push
jge
xlat
pop
ss
adc
lret
xchg
scas
arpl
sub
jb
pop
sbb
sbb
dec
in
push
inc
jns
mov
outsb
push
inc
enter
scas
cmp
mov
or
cmpsb
scas
outsb
cmp
xchg
mov
sbb
push
inc
xchg
dec
adcl
dec
mov
sbb
ds
sub
add
adc
xchg
fldz
add
sti
push
dec
imul
add
cmpsb
dec
ljmp
pop
mov
out
outsb
pop
ljmp
xchg
dec
add
in
call
pop
popf
orb
sarl
xchg
sub
xchg
stc
adc
mov
mov
fstpl
xchg
je
adc
mov
cmpb
scas
add
out
out
push
add
mov
lods
fmul
xor
pop
push
repnz
inc
pop
aad
push
stos
out
inc
xchg
add
jne
mov
jo
dec
mov
xor
sbbl
jbe
lods
jb
pop
xor
fucomp
daa
iret
aaa
xchg
mov
outsb
cs
out
lcall
dec
shl
push
xor
leave
inc
inc
scas
arpl
dec
leave
std
addr16
outsl
adc
add
adc
adc
test
cmpsl
pop
ss
iret
outsb
jno
testb
sbb
in
das
pop
rol
adc
dec
nop
add
jb
ret
jo
out
pop
sar
push
fmuls
cmp
test
push
out
mov
and
stc
and
mov
and
push
push
mov
into
dec
push
in
inc
xchg
push
adcb
fdivs
mov
mov
push
dec
in
xchg
push
pop
loop
push
pop
movsl
enter
das
loope
int
mov
stc
and
xor
stos
nop
movups
and
nop
divl
and
outsl
inc
and
sbb
jl
cli
outsb
mov
pop
divb
pop
test
and
cwtl
xchg
inc
mov
shrb
iret
fnstsw
adc
aas
add
mov
sub
repnz
into
fdivp
iret
aad
fwait
hlt
mov
icebp
jne
or
sub
mov
test
je
push
in
stc
gs
repz
fdivl
push
mov
sbb
fwait
push
fldcw
scas
rorb
hlt
push
cmp
into
jae
add
push
shrb
jb
out
jl
aad
push
xchg
repnz
loope
mov
scas
lods
insl
mov
push
aam
xchg
or
sbb
popf
clc
xchg
scas
fldcw
pop
or
mov
loop
or
gs
and
aam
mov
inc
fstpt
daa
fstpt
stos
xchg
pop
xor
push
test
and
push
push
sbb
cmpsl
les
add
mov
xchg
rcl
or
pop
cmp
lret
or
mov
push
sbb
add
stos
inc
push
jbe
jecxz
mov
jle
jbe
ss
popf
mov
cwtl
xchg
clc
inc
fistps
mov
fnsave
movsl
or
add
add
dec
ss
stc
jnp
xor
popf
mov
ljmp
sub
push
test
mov
orl
xchg
repnz
add
fldpi
mov
add
into
cmp
into
cs
jge
dec
xor
adc
mov
jle
jb
test
sub
cmp
jmp
das
sbb
aam
pop
clc
mov
stos
bound
adc
or
or
push
and
mov
hlt
dec
xchg
dec
mov
sti
adc
test
lea
in
popf
push
and
jmp
push
mov
ret
jle
arpl
test
ds
mov
in
sbb
iret
add
das
push
mov
xchg
push
mov
adc
cli
stos
test
or
test
vpcmpeqw
loop
push
dec
lods
repnz
mov
jne
jl
cmp
clc
pushf
shld
xor
and
sbb
repz
sbb
inc
outsb
dec
jb
pusha
fists
iret
push
nop
insl
cmp
pop
jp
sbb
in
push
or
jecxz
dec
pop
fdivl
leave
xor
in
les
iret
cwtl
aaa
pop
jnp
mov
and
push
xor
lock
shll
add
adc
fdivr
call
mov
cs
int
xor
sub
inc
ret
jmp
fistpll
inc
ljmp
lea
inc
mov
mov
fsubrs
scas
sub
call
add
push
push
sbb
mov
ret
jnp
cmp
cli
lock
cli
jne
fmull
das
xchg
xor
in
aas
fsub
push
into
movsl
loopne
mov
sbb
sub
xchg
sbb
pop
imul
jbe
xchg
inc
rorb
add
fstps
jecxz
fcmovnb
insl
xor
add
fucom
mov
cli
adc
cmp
or
jmp
pop
xchg
xchg
enter
xor
mov
jp
subl
xor
or
xor
mov
sub
xor
sbb
mov
notl
or
xchg
into
nop
pop
sbb
sub
add
and
test
in
insl
iret
mov
sbbb
push
loope
pop
enter
lret
xlat
push
jbe
sbb
test
inc
leave
movsl
sub
xor
push
mov
sbb
dec
fs
add
sub
lods
xchg
push
mov
outsl
adc
ds
imul
scas
sub
dec
jecxz
fmull
dec
ficomps
subb
jmp
mov
jmp
fsub
mov
pop
mov
adc
data16
xor
loop
mov
mov
lods
out
fmul
add
push
ja
cmp
cmp
arpl
dec
hlt
outsb
leave
push
xchg
xchg
adc
cmpsb
out
flds
xor
xor
or
out
push
nop
pop
ss
mov
fsubp
adc
cmp
xchg
mov
loopne
mov
mov
das
and
test
mov
mov
push
cmp
jb
rclb
push
fs
adc
sbbb
dec
push
lret
enter
and
pop
jg
and
push
clc
mov
aad
or
in
in
or
movsb
cmpsb
push
sub
pop
xchg
mov
inc
cltd
add
in
lret
lea
sbb
and
addps
test
fildll
xchg
inc
add
arpl
shlb
dec
xchg
and
fisttpll
in
lret
repnz
shl
ljmp
notb
mov
es
push
adc
cmp
xor
sub
dec
aam
insb
lods
adc
pop
xchg
leave
push
dec
rol
xorl
add
sbb
movsb
ret
lret
xor
sbb
rorl
cli
push
jecxz
rorl
or
push
iret
lret
pop
pushf
lret
mov
mov
jno
pop
loope
fistps
mov
xor
lret
icebp
and
lea
pop
movb
dec
sahf
pop
adc
sbb
sub
jnp
mov
or
arpl
jb
xchg
int
adc
gs
nop
mov
add
hlt
jmp
dec
pop
out
mov
repz
in
sbb
push
adcl
push
stc
cmp
and
jle
sbb
fs
test
test
call
je
nop
jno
mov
js
pop
mov
adc
roll
xor
movsl
pop
or
outsb
loop
pop
xor
cmp
and
pop
lret
cmp
fiaddl
enter
loope
mov
frstor
stos
and
in
test
in
mov
xor
movsl
adc
roll
outsb
ja
cmp
das
sub
lret
ds
inc
push
jmp
jo
movzbl
fstl
pop
icebp
addb
and
insb
aam
cltd
fnsave
inc
inc
pop
mov
jmp
movsl
jmp
push
into
fwait
sbb
xor
add
addl
arpl
ljmp
out
jge
adc
dec
ja
adc
adc
jae
addr16
inc
cmpsb
add
movsw
mov
sbb
or
andl
or
out
sahf
add
jb
pop
mov
push
cwtl
negb
mov
or
dec
and
and
jle
add
push
orb
mov
daa
fdiv
add
xchg
push
stos
divb
dec
mov
loope
lret
push
sbb
enter
mov
das
stos
push
mov
xchg
cs
dec
sub
sbb
dec
or
push
and
std
stos
mov
xlat
fists
stc
test
leave
rcll
addr16
xchg
add
orb
add
xchg
xor
int
stos
jae
cmp
orl
mov
or
pop
or
push
push
testb
jo
add
rcr
inc
xlat
daa
xor
addr16
outsl
insl
out
int3
aaa
sarl
pop
sub
adc
ret
das
mov
mov
cld
test
push
xchg
insl
mov
cmp
inc
pop
dec
xchg
int
test
mov
adc
pop
popf
adc
rcrb
and
add
lcall
divl
jne
xchg
fdivs
xchg
adc
fsubrp
adc
test
push
bound
add
and
pushf
push
sahf
push
andb
fwait
jnp
lock
mov
test
xor
sarl
lea
xchg
push
sahf
cmp
push
popf
es
sub
xor
inc
cmpb
imul
pop
pop
testb
jno
sub
int3
dec
fnstcw
cmpsl
push
cmp
dec
sbb
xor
cmp
and
enter
scas
adc
pop
je
sbb
lret
cmp
inc
and
add
hlt
or
add
loope
pusha
mov
mov
fadd
ss
cltd
push
and
lds
or
push
test
movsb
jne
das
sub
sbb
loop
pop
xchg
add
das
fcomp
mov
pop
mov
mov
pusha
test
push
int3
sub
mov
sbb
paddsb
xor
adc
or
mov
xor
inc
ds
xchg
rcrb
pop
int
xchg
xor
or
sbb
inc
or
hlt
mov
test
out
mov
sub
jmp
pop
loop
sti
add
or
xchg
push
mov
mov
sbb
bound
cmpsl
ror
or
test
jecxz
fdivrs
fimuls
adc
addr16
repz
je
jle
jl
jno
call
jg
pop
xchg
push
addr16
cltd
push
dec
push
cmpsl
fbld
mov
xchg
mov
std
push
jecxz
imul
push
outsl
xor
pushf
mov
fdivr
notb
repz
dec
fnstsw
mov
cmp
sub
aam
insl
xchg
inc
movsb
sbb
mov
or
bound
cmpsb
dec
daa
mov
rol
adc
mov
stc
lcall
fdivl
cwtl
jae
popf
test
in
lock
aaa
add
and
mov
or
sar
pop
mov
mov
adc
push
jg
iretw
or
sub
mov
fists
mov
adc
pop
mov
out
inc
xchg
mov
fadds
or
xor
sbb
in
es
sub
rolb
add
sbb
out
dec
mov
stc
push
dec
adc
pop
sti
push
push
pushf
loope
dec
add
test
cmp
lea
test
loop
mov
inc
inc
ss
lods
lcall
js
mov
and
je
sub
hlt
in
scas
push
lods
fldt
adc
mov
lret
xor
ljmp
fisubl
xor
inc
add
mov
repz
lret
jo
jne
jb
jmp
pop
inc
std
insl
repz
push
fadds
or
dec
sti
arpl
push
arpl
xor
sarl
popa
movsl
jb
mov
adc
pop
adc
jno
xor
dec
pop
ret
sub
push
inc
sbb
das
push
rorb
shll
stc
inc
pusha
mov
into
mov
clc
inc
shll
popf
mov
f2xm1
mov
adc
adc
pop
je
adc
cmp
and
xor
mov
fwait
imul
aad
sti
sub
dec
adc
add
aam
imul
mov
jg
add
jmp
sahf
push
ljmp
push
xor
adc
xor
out
iret
xchg
mov
in
mov
cs
xlat
inc
cwtl
and
jne
lret
inc
jae
inc
int
scas
xor
sti
push
aam
sbb
mov
mov
xchg
sbb
jg
xlat
in
scas
adc
roll
adc
aaa
xor
cwtl
jns
jne
sahf
adc
xchg
cmp
rorb
mov
pop
lret
sbb
mov
mov
push
xchg
loopne
cwtl
movsb
das
setne
mov
insb
aaa
dec
pop
sub
adc
adc
mov
sahf
and
ds
enter
sub
mov
sti
mov
inc
pop
ja
sub
adc
insb
ret
pop
inc
mov
pop
dec
and
fwait
out
aas
fcmovnu
push
dec
cmp
sub
mov
nop
jge
outsb
lret
orl
mov
aad
call
lods
mov
and
std
popa
cmpsb
jmp
mov
fld
fldl2t
mov
stc
pop
adc
jge
mov
lock
sub
sub
add
rdtsc
leave
add
lahf
aam
inc
call
push
andb
sarb
pop
dec
insb
or
or
pop
and
ja
lret
ret
xlat
in
and
cmpsl
fisubs
sub
mov
pop
cmp
into
imul
jp
inc
sbb
in
xchg
lock
int
es
mov
aam
xorb
dec
call
lahf
dec
add
cmp
hlt
jp
adc
out
aad
cli
out
enter
cli
insl
repz
xchg
sbb
or
or
cmpb
cwtl
imul
dec
outsl
mov
or
mov
adc
mov
bound
push
decl
js
aaa
repnz
xchg
mov
jg
repz
daa
mov
stos
lret
xchg
lods
xlat
xchg
push
in
xchg
fs
repnz
xchg
jecxz
sbb
pushf
aas
xor
mov
xabort
xchg
dec
je
movsb
push
push
pop
cmp
and
insl
cmpsl
setno
das
mov
dec
xchg
addl
and
stos
add
addr16
mov
aaa
xor
and
lret
pop
cli
rcrl
fstpt
push
je
lret
cmpsb
sbb
in
xchg
adc
and
lods
pop
jne
xlat
pop
or
sti
jo
addl
mov
in
sahf
int3
fs
pusha
mov
cmpsb
push
sbb
adc
in
je
push
scas
std
lods
shrb
and
mov
shl
mov
popa
xor
in
addr16
test
sbb
test
push
fbstp
in
js
mov
inc
and
pop
jbe
inc
cmp
pop
xchg
fistpll
ret
sub
xchg
mov
or
fcompl
mov
test
sub
rclb
psrld
shrb
mov
or
faddp
pop
mov
sub
xor
and
in
shll
lcall
dec
or
xlat
cmc
js
cmpsb
cmp
pop
decl
mov
add
sub
inc
or
iret
outsl
push
add
in
jnp
and
ljmp
test
lods
mov
pop
in
dec
xor
lret
setb
lcall
outsb
adc
push
lahf
in
in
cmp
lods
fmull
or
sub
mov
adc
ja
int3
inc
ror
fsubs
jle
dec
dec
pushf
pop
sub
pop
mov
or
jp
jle
pop
mov
mov
jb
cmpsb
cmc
mov
aam
imul
and
fldcw
xchg
clc
mov
xchg
pop
add
adc
push
inc
jmp
ljmp
add
push
movsl
in
jnp
outsl
inc
fucomip
lret
shlb
xor
fimull
add
ret
fisttpl
mov
int
jns
push
ret
dec
aam
or
pop
popa
cmp
or
fisttpll
push
iret
inc
xchg
sub
je
stos
test
sbb
scas
push
scas
mov
sbb
shlb
enter
mov
fisttps
insl
fucom
or
pop
cli
adc
lret
xchg
add
or
mov
call
std
loope
add
cmp
loope
dec
jbe
test
sub
sub
add
test
inc
push
enter
xchg
push
dec
xor
push
cmp
inc
cmp
out
adc
sub
and
add
insb
fldcw
dec
pushf
rorl
out
sub
ss
in
stos
loopne
nop
xor
hlt
push
mov
dec
ds
loop
int3
test
fxam
mov
loop
dec
or
dec
add
push
addr16
xchg
ss
mov
add
adc
xchg
rolb
xor
xchg
mov
sarl
fsubl
sti
sbb
mov
cmp
xor
push
pop
jle
cmp
stos
sub
adc
mov
shrb
ret
pop
fdivrl
daa
cltd
push
mov
repz
aaa
rcr
hlt
gs
loope
sub
out
mov
bswap
push
adc
das
std
xor
push
and
adc
pusha
js
rcl
xchg
xchg
leave
xchg
sub
outsb
adc
test
test
adc
dec
mov
cmpsl
outsb
mov
mov
or
push
cmp
fwait
sahf
outsb
aaa
ret
push
mov
xor
and
sub
pop
sub
divl
int3
out
movsl
push
lock
mov
mov
push
mov
cs
xor
leave
mov
lock
pop
mov
jb
cmp
pop
mov
aas
imul
out
mov
jnp
fisttpl
push
test
push
imulb
lcall
fdivr
out
pusha
jnp
push
out
mov
and
shl
xor
ja
pop
int3
jl
ja
and
movsl
pop
test
icebp
push
and
mov
mov
cmpsl
shlb
popf
and
xchg
and
inc
jl
push
xchg
mov
in
inc
and
mov
fucomip
xor
das
sbb
movsl
mov
push
jl
out
fwait
cmp
xor
adc
xchg
and
rclb
cs
xlat
jns
jns
mov
pop
mov
pop
lret
hlt
push
lds
add
shlb
xor
icebp
and
inc
push
sub
arpl
add
cmc
clc
aas
push
jg
scas
scas
std
iret
mov
add
pushf
jae
xchg
sbb
aas
hlt
in
sbb
movsl
push
add
into
adc
push
xlat
fcomps
insl
cmpsl
mov
int
cld
ds
std
xor
add
and
xor
aas
jl
adc
andb
jle
sub
scas
andb
ds
cmc
mov
in
imul
pop
lock
xchg
hlt
inc
sbb
jmp
or
scas
push
adc
in
out
or
lods
xor
imul
jo
add
fdivl
mov
movsb
adc
andl
or
mov
push
adc
out
movsl
std
cli
jl
cmc
fcomi
add
cmp
icebp
lcall
jmp
push
scas
xchg
fs
push
not
and
jge
loop
stos
popf
xor
dec
push
lods
daa
push
ret
imul
fmul
fisttps
into
test
fwait
xlat
mov
sar
ret
mov
test
jne
pop
xlat
repz
pop
cwtl
pusha
jns
arpl
adc
lds
xor
cltd
xor
push
or
sar
testl
aas
int3
int
inc
in
lahf
add
js
mov
sub
jmp
inc
sbb
movsb
ret
addr16
popa
sub
out
mov
fiaddl
mov
test
push
dec
mov
cmpsb
andb
jno
scas
fmul
mov
adc
lret
into
fwait
leave
insl
cmpsb
xchg
push
mov
fistpll
mov
fstpt
sbb
push
stos
push
xlat
xor
int3
sbb
inc
out
push
sahf
adc
aam
sub
push
add
pop
sub
ja
sbb
sarl
jbe
dec
idivl
rcl
std
sub
xor
jnp
fsubl
pop
push
xor
shll
out
iret
mov
es
movswl
daa
jecxz
aas
inc
sbb
adc
rorl
pop
xor
jno
in
shll
mov
pushf
xor
repz
andb
fimuls
test
test
enter
push
jge
call
cmp
imul
int3
push
jg
push
push
add
dec
pop
mov
jmp
or
dec
or
addr16
mov
lods
popa
sahf
jmp
cmc
sub
push
dec
xchg
pop
add
cmpsb
mov
sbb
andb
out
test
loopne
xor
dec
inc
fsubl
dec
xor
pop
xchg
fidivs
mov
movsb
lods
sbb
xchg
mov
stos
jmp
mov
or
into
jno
sahf
xor
and
cmc
pop
inc
mov
mov
push
pop
push
int
cltd
adc
shr
mov
mov
adc
jge
cmc
add
imul
stc
sbb
or
and
mov
mov
xchg
xor
inc
fldt
xor
addl
lods
adc
push
test
push
mov
jno
push
mov
gs
mov
cmpb
sub
les
xor
or
shl
nop
mov
mov
aad
or
insl
sbb
ja
cmp
fisubl
lock
lods
cmp
sub
test
adcl
cmp
in
sbb
pusha
fst
test
add
pop
fadds
ret
loope
xor
es
addl
mov
push
inc
mov
hlt
push
leave
hlt
les
mov
push
fistpl
sti
sub
jp
enter
insb
mov
push
mov
fwait
mov
ja
fs
mov
aad
lods
int
xchg
int3
mov
cmpsb
scas
dec
movsl
negb
sub
fisubrs
mov
cmp
loope
sbb
mov
or
lcall
sub
or
mov
sbb
cmpsl
orl
sbb
push
lods
adc
xlat
das
inc
pop
scas
pop
insb
gs
add
pushf
or
in
pop
push
adcb
mov
cmp
and
pop
sub
add
push
pop
mov
enter
dec
pop
hlt
notl
pop
in
clc
inc
ret
jge
adc
add
pusha
and
dec
in
out
sbb
testl
sti
xlat
arpl
sarb
and
imul
sahf
fldenv
dec
jmp
cmp
int3
inc
pushf
les
sbbb
repz
add
outsl
jo
push
cli
mov
xor
insl
push
cld
push
vmovups
in
stos
push
cmp
cld
in
in
mov
shl
inc
popf
popf
inc
das
vmovntdq
push
sub
pop
in
lahf
jno
mov
popf
lea
fwait
add
out
lods
gs
loopew
dec
test
pop
dec
popa
outsb
jp
mov
or
std
xor
jb
xor
mov
subl
stc
cmp
jb
push
adc
fs
jnp
push
andl
add
in
sbb
sbb
cmp
ss
aam
add
dec
pop
call
sti
pop
push
enter
testb
stos
sbb
jo
inc
inc
aam
leave
xor
test
jp
mov
aas
xor
jo
mov
xlat
orb
rcll
out
xchg
movsl
ret
jnp
fmuls
mov
sub
lcall
push
sarl
pushf
mov
xchg
lods
mov
sahf
adc
pop
lret
push
pop
out
xorb
fmull
push
mulb
sbb
ret
call
lock
xor
cmp
pop
mov
fadds
loopne
cltd
test
imul
shlb
adc
jmp
bound
shlb
push
add
sub
mov
lea
adc
in
jb
xor
dec
lahf
add
pop
sbb
subb
loopne
stos
int3
mov
pop
les
bound
sub
not
cmpsl
jle
clc
pop
cmc
xor
mov
ret
jle
push
in
sahf
loop
add
dec
cmp
call
mov
sbb
les
or
stos
xor
push
mov
clc
sahf
adc
jb
int
pop
fwait
mov
leave
ja
out
jmp
dec
clc
and
inc
out
push
dec
cmpsb
lods
push
xchg
jmp
pop
ja
fsub
inc
std
sub
add
loope
pusha
mov
gs
xchg
and
add
inc
fistl
add
jp
fldenv
adc
cmp
cmpsl
mov
data16
add
jl
jbe
sbb
daa
and
fidivrl
add
into
xchg
aas
jle
xor
fsubs
fstl
les
arpl
lock
jne
imul
pushf
xchg
add
xor
inc
mov
in
in
roll
cmc
mov
out
repnz
lds
fildll
dec
push
xchg
push
sub
jns
jl
xlat
je
pop
mov
sti
scas
psllw
ja
orl
dec
shrb
xchg
int3
jmp
orl
leave
xchg
cmc
frstor
pand
lods
push
sub
lea
dec
mov
jb
xchg
icebp
fcoml
stc
data16
mov
jae
stos
ret
push
pop
mov
in
int
pop
lcall
mov
cs
and
arpl
push
xchg
lret
popa
cmp
shll
sub
incb
pusha
ds
loopne
mov
cmpsl
out
sbb
jns
jns
scas
sub
inc
repnz
push
dec
push
add
cmpsl
inc
mov
adc
into
movsb
and
xchg
fcompl
sub
cmp
adc
out
pusha
fmuls
rcl
aad
fidivrl
bound
mov
out
xor
or
mov
lret
mov
jg
jmp
cli
sbb
xchg
in
cmp
and
fcoml
adc
and
addr16
in
mov
std
jp
xor
mov
push
call
xchg
cmp
clc
mov
lds
mov
pop
test
pop
in
adc
dec
insl
in
jbe
or
and
insb
cmp
cli
xor
rorb
xor
push
les
inc
lods
lods
in
cmp
jmp
sbb
add
mov
push
jp
push
jo
mov
pop
add
dec
lods
into
test
lret
cmp
cmp
in
je
pushf
in
hlt
nop
test
pop
push
inc
sti
jns
sbb
pop
arpl
add
sbb
fisubs
lahf
mov
jle
pop
sbb
les
adc
into
xor
sarb
push
inc
mov
into
pop
xchg
daa
xor
cmp
daa
push
inc
nop
ljmp
sub
cmp
mov
stos
sbb
xlat
lret
mov
mov
mov
jbe
fwait
mov
jbe
sahf
ja
dec
xor
stos
adc
loope
pop
stc
in
mov
sub
push
mov
and
xchg
enter
or
idivb
dec
rorb
lods
cmp
test
fmuls
ljmp
aas
jge
push
push
rolb
addl
add
aaa
aad
xlat
es
stc
movsb
cmp
test
aam
ret
stc
les
scas
lock
jb
cltd
mov
push
jnp
mov
cltd
cltd
int
movsb
roll
mov
rol
add
inc
cwtl
mov
mov
mov
mov
sbb
or
mov
lock
mov
xchg
pop
pop
jecxz
daa
sbb
aas
add
mov
and
imul
sub
pop
sbb
ljmp
mov
and
mov
pop
xchg
popl
sar
adc
dec
sbb
jmp
cmp
push
filds
jns
int
scas
divb
cmpl
fcomi
xchg
xor
inc
shr
test
jmp
lret
xor
xchg
scas
pusha
sub
mov
dec
movsl
fs
rorb
pop
fstl
push
shld
ret
inc
cmpb
mov
ja
mov
dec
xor
arpl
call
jecxz
fnsave
mov
pop
push
push
leave
into
inc
cwtl
or
out
repnz
jl
sub
add
mov
mov
add
loopne
lahf
scas
mov
in
cs
push
shlb
int3
jo
or
xchg
add
adc
adc
lcall
pop
push
sub
cmpl
lret
icebp
imul
in
push
mulb
dec
add
daa
cmp
lods
out
nop
aaa
stos
and
arpl
test
arpl
leave
jl
mov
jg
roll
je
ret
xor
xchg
adc
clc
jmp
test
add
xor
in
push
sbb
gs
rorl
hlt
cmpsl
sbb
mov
mov
int
outsb
and
push
xchg
lods
or
xorb
sub
es
addr16
imul
je
add
xchg
or
scas
add
test
mov
addr16
sbb
xchg
outsb
addr16
outsb
xchg
pusha
loop
fcoml
ud1
or
xor
mov
lock
and
adc
or
lods
inc
mov
out
pop
leave
push
outsl
dec
lods
jle
push
mov
sub
pop
jecxz
sbb
fs
sbb
fsts
xor
pop
adc
mov
mov
out
aam
in
addr16
sub
sbb
movsl
push
std
pop
fimuls
rorb
lds
dec
mov
xchg
repz
cmp
sbb
fstps
in
pop
adc
jge
ljmp
push
jb
mov
add
testl
ret
inc
mov
mov
es
int
aam
mov
sbb
mov
mov
push
nop
dec
sbb
addr16
fisttps
push
jae
lock
mul
mov
lret
ja
insb
ret
cmp
fmul
mov
in
loop
mov
sbb
mov
rcr
inc
nop
into
aas
mov
incb
xchg
or
loope
sbb
insl
add
in
data16
add
cs
adc
jb
push
inc
sbb
std
inc
push
push
pop
scas
in
xchg
push
mov
push
lret
dec
pop
out
xchg
add
mov
rcrb
mov
push
sub
aam
xchg
in
hlt
ret
or
cmc
mov
mov
sub
jnp
movsb
jge
pusha
inc
xor
xorl
inc
cmp
aaa
sbb
cli
jae
mov
adc
dec
enter
jns
in
mov
addr16
ljmp
popa
out
add
cmc
xor
jo
cld
in
sahf
dec
pop
out
dec
inc
jg
aaa
insb
xchg
sub
mov
sbb
in
mov
cli
je
jns
xchg
lock
push
mov
repnz
xchg
cs
sub
sbb
test
mov
sub
lret
jns
lret
and
dec
arpl
insb
mov
or
in
pop
dec
lret
loopne
out
sbb
pop
je
nop
test
push
les
pop
ret
jg
stos
sub
bextr
call
and
sub
push
adc
pusha
ret
push
and
imul
test
xchg
or
pop
aaa
mov
push
sub
sbb
out
mov
jne
jne
je
mov
pmulhw
enter
addl
sbb
dec
inc
aas
inc
add
hlt
daa
sbb
xor
loop
push
adc
cld
jbe
cmpsb
pop
inc
inc
repnz
stc
jle
or
pushf
aam
shl
movsl
popf
xor
lock
lret
jmp
stos
add
loopne
arpl
pop
mov
and
jmp
popa
sub
scas
fwait
aas
aad
out
xor
lods
push
jno
adc
addr16
add
sub
push
adc
data16
pop
xor
lret
xchg
push
popf
addl
mov
imul
cltd
cmp
test
xor
fcomps
out
bound
repz
nop
xchg
add
das
and
popl
int
jg
test
mov
inc
stc
je
push
jge
xchg
xchg
inc
stc
inc
jb
js
cmp
repz
mov
movsb
stc
inc
dec
adc
ja
sti
das
xor
mov
test
test
jno
pop
cld
or
add
mov
aam
leave
push
fsubl
cwtd
lock
shll
js
mov
leave
or
push
sub
push
mov
sbb
or
xor
scas
outsl
dec
clc
mov
mov
cmpsb
outsb
mov
ret
pop
xor
out
add
mov
mov
fucomp
outsl
adc
push
call
out
addr16
jl
jecxz
cmp
sbb
jecxz
push
jne
xor
cli
lods
cs
and
test
fsubs
lock
jns
or
cmpsb
jg
mov
inc
push
or
jne
and
xchg
test
or
push
cmp
stc
insb
or
jno
mov
nop
jl
std
js,pn
pop
inc
cmp
pop
adc
lahf
dec
inc
out
int
adc
xor
mov
dec
lcall
mov
jl
or
int
mov
xchg
mov
jg
adc
sub
xlat
bswap
or
loope
negl
xchg
ds
inc
sbb
punpckldq
cli
js
scas
decb
es
or
iret
xchg
or
mov
fstps
push
out
push
jg
push
in
jae
mov
cmp
push
adc
lock
lea
push
and
jl
pop
test
jae
mov
or
xor
jne
adc
into
xor
test
fbstp
and
fmuls
and
in
jle
sub
aaa
cmc
push
xor
pop
push
mov
es
jno
cmp
out
adc
das
sbb
mov
divb
dec
and
loop
inc
sub
arpl
popa
xchg
mov
sbb
jo
push
or
mov
sub
pop
loope
push
pop
sub
lcall
fisttps
out
sbb
cmp
in
cld
and
or
cmp
xchg
frstor
sbb
test
cmp
push
push
and
cld
popa
push
lock
mov
mov
jbe
xchg
int
xor
cmp
fwait
insb
adc
xchg
popa
shlb
xchg
scas
mov
add
push
or
dec
mov
xor
add
pop
adc
fmuls
xor
jae
jns
shl
add
dec
or
dec
cli
imul
sub
cmp
mov
lods
mov
mov
in
mov
inc
sub
sub
int3
int
push
pusha
jae
cmp
into
mov
xchg
push
mov
cmp
mov
dec
test
loope
fdivrl
adc
flds
popa
inc
sub
fldl
sub
shll
push
iret
lock
and
and
gs
sar
jae
jmp
jb
xchg
loop
xchg
cltd
int3
mov
in
add
pushf
cmp
out
push
insb
push
pop
push
mov
cld
jp
xchg
addl
loopne
or
xor
mov
outsl
cmovo
mov
jle
out
and
ljmp
mov
jge
pop
leave
cmp
fildll
movsl
div
mov
test
inc
mov
enter
pop
lret
jl
fcomps
inc
insb
mov
and
mov
call
mov
lock
adc
jb
mov
or
addb
adc
lret
pop
call
push
mov
or
xor
xorb
sbbl
mov
cmp
push
xchg
mov
sub
hlt
pop
ds
jo
sub
inc
dec
mov
test
repz
fnsave
sahf
pop
mov
mov
lds
leave
cltd
and
movsl
lahf
out
int
lret
fisttpl
repnz
pop
daa
fildl
cmp
fnstsw
arpl
mov
pop
nop
fstpt
cmp
in
dec
sub
push
pop
add
mov
adc
in
xchg
pusha
ja
inc
and
rcll
cmp
inc
or
xchg
test
das
rol
xlat
xchg
loopne
test
les
inc
add
mov
xchg
sbb
adc
xchg
jle
cmp
cmp
lea
int
test
pop
or
aas
or
fiaddl
in
pop
call
and
xor
inc
aam
cs
lods
dec
push
mov
mov
sbb
cmc
mov
adc
adc
out
cmp
mov
outsb
das
lret
cmp
repnz
clc
sbb
add
adc
mov
mov
in
dec
sahf
jecxz
repz
adc
sbb
xor
jbe
cmp
push
cmp
inc
pusha
loop
ret
in
jmp
shl
imul
push
xchg
dec
pop
mov
inc
out
mov
ret
ret
adc
ja
and
mov
test
or
fbstp
cmp
push
stos
pop
jnp
fimull
fwait
and
sbb
adc
sbb
repz
push
sbb
dec
shrl
cmp
add
push
or
std
xchg
jle
xchg
repnz
in
push
sub
adc
mov
lret
ds
mov
roll
xor
es
mov
repnz
xchg
fnstsw
fs
je
insl
repnz
nop
in
shrb
pop
das
imul
push
test
xchg
data16
push
cld
xorb
repz
fs
add
adc
dec
mov
sti
push
insb
push
fsts
pop
lock
xor
or
loopne
mov
push
scas
cmp
insl
test
cmp
and
inc
ljmp
cs
jns
movsl
insl
sti
fsub
ret
movsl
push
xchg
aas
mov
fwait
or
aas
sub
jns
ja
mov
cwtl
sbb
int
ds
lret
addr16
andb
clc
mov
mov
sub
dec
jle
xor
in
pop
push
jns
repz
loope
inc
fwait
repz
cmpsl
mov
sahf
dec
je
lea
iret
jbe
sti
mov
push
fnstcw
sahf
xor
pushf
pop
mov
data16
sub
mov
sahf
push
dec
push
adc
popf
mov
cltd
pop
mov
pop
testb
ret
mov
jo
push
movsb
pusha
pop
lock
fdivs
btc
cmp
mov
push
and
je
addb
mov
in
cmpsb
lods
cli
inc
or
add
imul
xchg
movsl
int3
out
sbb
push
push
xchg
mov
mov
cs
int3
jns
xchg
jmp
jg
or
outsb
addr16
test
xchg
notb
pop
push
lcall
or
mov
popa
mov
cmp
test
je
fwait
jo
divl
mov
dec
lock
in
cwtl
leave
mov
sub
xchg
lcall
bound
mov
xchg
jb
mov
fwait
mov
or
fimuls
ljmp
lcall
xchg
ss
push
mov
dec
xor
out
sub
enter
or
sub
adc
mov
cmp
jmp
and
dec
mov
pop
jb,pt
outsl
test
and
stos
jecxz
mov
in
imul
mov
les
jb
inc
pop
imul
popa
lahf
push
mov
and
sub
adc
inc
clc
sahf
lods
or
jmp
mov
sbb
dec
iret
arpl
xor
xchg
cs
aam
ret
mov
and
pusha
cld
cmp
dec
sub
sbb
movsl
fistpl
cli
dec
dec
test
lods
push
sbb
jns
ret
cmp
cmp
mov
fdivrp
js
mov
mov
call
sbb
xorb
pop
mov
jbe
jle
dec
cli
mov
nop
push
mov
imul
dec
inc
xchg
ret
or
lods
lods
cmp
fldl2e
push
outsb
inc
xor
or
cli
mov
mov
imul
loopne
std
dec
icebp
or
xchg
ss
inc
sahf
fxch
mov
out
cmp
cmpsb
sbb
data16
fbld
insl
xchg
jb
mov
lock
mov
fcoms
lret
mov
into
push
outsb
std
cmp
call
jne
lret
pop
cmpsl
stos
add
andb
mov
and
xor
jbe
jmp
adc
mov
jae
adc
jl
xchg
xlat
fsubrp
out
mov
pushf
xor
push
inc
sbb
repnz
das
jmp
cli
pushf
pop
adc
push
loopne
add
fcoml
add
aaa
inc
add
jae
xchg
shlb
inc
rcr
lret
jbe
gs
rcr
add
fs
and
xchg
fiadds
pop
add
js
jle
cwtl
jmp
int
test
xchg
xlat
sahf
cmp
ss
push
add
into
mov
fcoml
dec
fisttpl
pusha
sbb
push
cli
fldt
sub
divb
jae
lret
push
fucomi
adc
ret
inc
dec
xor
and
sub
or
add
in
mov
or
je
daa
or
adc
cld
imul
adc
fcoms
push
lret
adc
pusha
dec
adc
jecxz
test
aaa
das
or
repnz
das
jp
add
xchg
add
mulb
mov
push
js
ljmp
add
lods
inc
dec
mov
mov
ds
out
cmpsb
sub
or
pop
loop
in
sbb
enter
sub
wrmsr
loop
negl
inc
es
cwtl
sub
push
jle
insb
mov
flds
in
mov
fimull
sub
push
jg
jle
clc
add
xchg
cmp
adc
xor
mov
push
xchg
xchg
popa
push
jo
sub
cld
cmp
lds
das
sub
inc
fs
xor
or
sbb
adc
test
nop
sub
mov
jecxz
adc
in
jbe
iret
xor
sbb
fwait
stc
imull
imul
pop
xorl
movsl
push
jno
inc
lds
negb
push
cmp
aas
das
or
jne
jp
sub
pop
jnp
fisttps
push
adc
jo
cmpsb
inc
cmp
cmp
sbb
sub
ljmp
fwait
jb
movsb
pop
mov
bswap
insb
iret
ds
addl
ja
push
rcr
into
pop
lods
push
xchg
arpl
xchg
in
pop
pushf
hlt
lock
xchg
leave
jnp
sbb
adc
enter
mov
push
push
pop
fsts
add
adc
hlt
insl
ror
loope
lds
lea
and
and
jnp
xchg
add
and
or
pusha
sub
scas
lcall
jns
sarb
sub
fidivs
sahf
push
lock
pop
fwait
test
jne
pop
sbb
or
cmp
in
jl
cmpsl
push
inc
push
mov
call
mov
xchg
mov
sahf
mov
push
sub
cmpsl
fcompl
push
lret
int
cmp
popa
sti
inc
or
adc
mov
stos
loop
adc
popa
jl
fidivrl
into
inc
mov
scas
dec
hlt
sar
aam
dec
push
mov
mov
pop
icebp
xchg
jnp
mov
rcr
or
mov
inc
scas
call
xchg
testb
mov
mov
inc
je
adc
sarb
je
inc
rcl
mov
cmc
fisttps
ljmp
cmp
dec
jbe
pop
xchg
jnp
adc
icebp
pop
mov
and
adc
lods
cmpsb
rol
fisttpl
or
out
xor
xchg
pop
xchg
ret
mov
inc
icebp
insb
mov
sbb
push
ffreep
xchg
fisttpll
pop
sbb
mov
ficompl
mov
mov
bound
mov
stos
in
xor
stos
lcall
jge
add
jmp
cmp
lcall
sub
dec
cmc
mov
sub
int
inc
jge
ds
rclb
loop
std
sar
repnz
cmp
pop
xchg
adc
add
aas
sub
or
mov
inc
add
mov
shrb
lods
and
or
mov
xor
lods
mov
or
xchg
push
popf
sarl
jb
inc
mov
pop
sarl
sbb
dec
add
xchg
lock
jae
xor
rcrl
push
pop
movsl
enter
and
stos
xlat
int3
movsb
jge
jge
sbb
pop
sub
nop
test
push
xlat
popa
cmp
popa
jge
jecxz
mov
movsl
or
and
xchg
lret
mov
rcrb
pushf
push
mov
jae
ret
sbb
lock
adc
jns
mov
and
cmp
pop
lods
jo
cmpsb
pop
sub
addr16
push
int3
stos
fucomi
flds
mov
xorb
movl
mov
pop
push
fistpl
daa
gs
or
lods
push
lea
xchg
in
out
cmpsl
in
dec
sbbl
sbb
xchg
mov
xlat
mov
fs
and
bound
sbb
imul
sub
arpl
push
sarb
int
jl
sub
sbb
cmp
out
or
leave
pusha
movsb
add
not
cmp
or
in
push
xlat
outsl
sti
out
outsl
push
cmp
pop
lock
iret
mov
xchg
scas
mov
data16
notb
lea
movsb
push
ljmp
push
in
neg
sub
and
pop
dec
inc
add
clc
scas
adc
xchg
cli
sbb
insb
in
adc
stos
mov
ficoms
jp
ss
ds
cld
push
and
sub
dec
rcrb
cmp
or
ret
xchg
sti
stos
jp
sbb
test
cmpsb
ds
push
imul
sbb
mov
xor
inc
push
repnz
pop
xchg
jno
pop
js
xlat
pop
push
test
push
add
stc
fcmovbe
add
sub
mov
jno
cmp
jo
xor
mov
sub
fbstp
push
call
jecxz
dec
mov
sti
cld
push
rcrb
shr
ds
mov
add
dec
repnz
cmc
jbe
cmc
repz
jg
add
push
into
insl
lods
inc
add
sub
mov
push
jle
cmp
dec
adc
cmp
sbb
xchg
mov
je
inc
mov
popf
jmp
xchg
cltd
mov
or
adc
xchg
into
jb
insb
push
jmp
sbb
lea
out
icebp
mov
out
divb
arpl
jg
rclb
xchg
push
xchg
lret
and
push
or
jo
xchg
and
pop
scas
jo
dec
xchg
mov
add
call
nop
cltd
pop
or
popa
pop
adc
jp
jbe
push
mov
xchg
outsb
inc
test
or
call
pop
hlt
inc
mov
push
add
sub
xlat
outsl
pop
outsl
je
jecxz
bound
in
nop
fldl
test
mov
mov
xor
nop
bound
dec
out
lcall
inc
mov
stos
cmp
int3
jnp
mov
lret
loop
push
push
cs
hlt
adc
jnp
pop
dec
sub
rcll
fldl
test
xor
fists
add
sub
fs
jl
or
sbb
pop
fwait
dec
xchg
bound
cmp
cmp
dec
ret
les
push
push
pop
ds
addr16
lods
xchg
mov
out
out
jecxz
outsb
cltd
in
xor
clc
iret
pop
sub
mov
pushf
fdivrl
dec
adc
cmp
add
imul
jns
inc
push
xchg
xchg
add
test
mov
mov
pop
lcall
push
push
clc
cmp
test
outsb
add
call
js
inc
push
mov
xchg
loopne
pop
xchg
mov
insb
pop
push
in
adc
adc
lods
int
cmp
dec
sub
pop
popf
outsl
mov
pop
pop
dec
push
xor
push
test
cmpsl
test
sub
xlat
test
scas
xchg
lods
jmp
mov
xor
jge
mov
fbstp
mov
es
inc
bound
icebp
int3
mov
inc
dec
mov
xchg
xor
test
xchg
test
sbb
lods
test
call
sub
aaa
mov
jns
lea
test
jecxz
repz
movsl
mov
out
test
mov
int
shlb
xchg
cld
cli
mov
cmc
adc
repz
iret
pop
loopne
insb
mov
loop
out
xchg
mov
jl
sbb
lcall
or
scas
xchg
inc
cmp
dec
lods
push
mov
xchg
inc
pop
test
dec
lods
push
cltd
sti
inc
enter
mov
in
divb
ret
insl
mov
cmp
int
insl
pusha
mov
cmpl
or
dec
cmpsl
ret
lods
mov
mov
repz
es
mov
pop
cmp
mov
dec
ss
cmp
sbb
loope
pop
fmuls
xor
mov
out
mov
mov
test
loope
dec
icebp
mov
mov
lea
int3
mov
cmp
test
sbb
push
jle
fidivrs
cmp
fisttps
xchg
mov
xchg
out
xor
dec
out
rcr
enterw
ret
mov
jp
sbb
mov
push
jno
cs
push
adc
mov
cmpsb
les
xchg
add
es
jo
dec
dec
jae
xchg
inc
fsubl
scas
cmpsl
adc
adc
push
inc
adc
js
rclb
adc
mov
sbb
out
or
add
adc
nop
mov
jbe
xor
sub
insl
loop
pop
inc
jne
frstor
cmp
notl
outsl
jno
adc
mov
jg
mov
mov
mov
ds
into
es
jns
cltd
iret
pop
inc
mov
inc
push
mov
push
sub
and
pop
jmp
pop
adc
mov
cmp
add
int3
dec
adc
lret
cmpsb
and
mov
mov
xchg
pop
and
inc
sbb
cmp
adc
inc
fimull
sub
jne
sbb
js
adc
lock
inc
or
push
mov
ljmp
icebp
xchg
and
mov
mov
mov
jecxz
xor
sbb
imull
int3
nop
or
adc
push
outsb
cwtl
fstpl
movsb
xlat
testb
jmp
fs
xor
xlat
repnz
test
sub
jnp
mov
jmp
sbb
adc
xor
xchg
mov
pop
pop
stos
repnz
mov
int
andb
popa
mov
in
cmc
push
or
xor
xchg
inc
repz
mov
cmpsl
xor
xchg
int
int
adc
insb
jo
pop
movl
jl,pt
je
push
push
dec
dec
mov
jns
test
pop
test
scas
js
in
cwtl
outsl
out
push
outsl
push
arpl
jb
jbe
mov
or
adc
cwtl
das
pop
lea
rcrb
in
and
ret
push
sub
push
adc
bound
inc
in
subl
sub
jmp
push
daa
cwtl
xor
dec
fsubl
push
dec
or
cmpsl
cmpsb
xchg
daa
push
pop
fildl
xor
lahf
inc
adc
pop
inc
test
jle
call
loopne
loopne
pop
popf
fists
fcompl
push
jns
adc
cmp
iret
push
add
pop
loop
push
add
mov
mov
je
cmovae
sbb
pop
fwait
or
hlt
addr16
fcmove
or
ret
adc
shl
sub
mov
mulb
cmpsb
mov
or
lods
test
icebp
xor
aas
and
or
cmp
clc
mov
test
fsubrs
add
mov
aad
rclb
das
mov
mov
dec
push
xor
adc
inc
mul
mov
inc
push
mov
push
push
gs
pop
loope
cmpsb
sbb
rorl
adc
stos
xor
fdivs
insb
add
xchg
inc
cmc
lahf
or
aaa
xchg
jg
mov
push
pop
mov
sets
xchg
jbe
mov
dec
cmc
roll
clc
or
in
mov
push
dec
leave
movsb
jecxz
and
fsubs
adc
pusha
push
cmp
push
sub
inc
pop
add
mov
add
into
or
fwait
pop
rclb
ja
cwtl
jnp
mov
shll
shlb
sbb
vmread
mov
imul
sti
push
mov
test
add
test
rcrb
xor
adc
push
inc
and
jae
mov
fidivl
jmp
insl
jge
mov
insl
fs
jb
cli
rorb
js
dec
inc
mov
cwtl
push
mov
sbb
pop
cltd
xchg
fwait
cwtl
cmp
adc
cwtl
mov
jecxz
mov
or
lea
not
outsl
jmp
scas
addr16
fmull
xor
mov
pop
jae
scas
inc
inc
loop
daa
push
xchg
out
jge
sbb
xchg
std
js
addl
lock
pop
xor
pop
sbb
hlt
or
test
das
xor
xchg
in
xor
out
rcll
sahf
test
push
inc
xchg
ja
mov
sbb
pop
jecxz
inc
in
mov
imul
ret
loop
pop
inc
mulb
hlt
mov
mov
rclb
idivl
popa
pusha
lods
cltd
jne
sahf
inc
ja
es
fmul
mov
into
mov
cwtl
cmp
shlb
subb
mov
int
andb
add
jo
cmp
fadd
pop
dec
pop
loopne
push
sahf
int
insb
mov
cs
into
cwtl
fwait
js
push
xor
mov
cmp
lods
lock
lock
jecxz
adc
jmp
lcall
adc
push
mov
inc
fs
xchg
xor
je
pop
and
jne
or
nop
mov
repnz
mov
mov
ljmp
sbb
popf
cmpsl
les
lock
adc
ficoms
or
mov
lret
xchg
rcr
sub
dec
cmp
outsb
int
popa
pop
sahf
sub
test
sarb
dec
insb
cmc
push
lods
xorl
xor
jmp
dec
insl
pushf
and
test
adcl
stos
jo
push
je
pushf
push
pop
repz
in
shrb
jle
nop
ficomps
notb
inc
mov
xor
fs
idivl
int
xchg
stc
sahf
fldenv
push
dec
xchg
sbb
xadd
clc
andl
inc
mov
mov
pop
ds
mov
test
mov
jle
adc
sahf
popa
into
inc
adcb
sti
insb
mov
cmpsl
callw
or
scas
outsl
xchg
pop
repz
arpl
jp
bnd
inc
mov
cmp
jl
add
push
inc
aad
cld
ds
filds
test
std
pusha
xor
xchg
fisubs
adc
mov
push
jnp
aaa
jmp
aad
rorb
repnz
cwtl
inc
and
sbb
push
mov
ss
adc
movb
push
lods
idivl
in
popf
mov
scas
adc
pop
pop
insb
mov
mov
in
je
je
pop
icebp
mov
cmpsb
or
stos
clc
outsl
ret
lcall
pop
mov
push
bnd
or
into
xor
cmp
jmp
cld
mov
pushf
lea
in
pop
std
cmp
xor
imul
gs
jno
ljmp
inc
and
adc
es
sub
insl
push
dec
dec
mov
lret
movsb
nop
pop
popf
jnp
xor
mov
push
mov
lahf
or
test
cmp
pop
inc
xor
repz
push
sub
jp
lret
xlat
adc
mov
cmp
xlat
sbb
pop
pop
scas
sub
xor
mov
adc
sbb
xor
incl
mov
les
sbb
int
cmpsb
mov
sbb
xchg
inc
jecxz
fmuls
push
mov
bound
les
adc
out
int
pop
jae
or
pop
enter
test
push
inc
xchg
mov
mov
cwtl
addb
repz
cmp
jmp
lahf
dec
shlb
pushf
xchg
aaa
mov
pop
mov
fdivl
mov
rsqrtps
shr
push
aad
sub
sbb
adc
ds
push
mov
sti
adc
mov
mov
adc
inc
push
push
and
fdivp
mov
rcrb
mov
aas
mov
xchg
cs
sbb
and
lret
das
sti
testl
dec
out
xchg
fiaddl
jl
test
push
jg
nop
movsl
adc
adc
insb
mov
mov
shl
imull
lcall
push
jne
outsb
pop
lock
scas
arpl
out
cmp
pushf
into
pop
mov
jp
cli
lcall
test
cli
pop
lret
jae
sbb
dec
mov
mov
mov
push
fmull
pop
lods
jp
cmp
fbstp
mov
out
jle
in
fwait
mov
test
sbb
xor
cmp
inc
mov
xor
dec
adc
adc
mov
test
mov
and
cltd
or
xor
loope
add
out
mov
adc
or
pusha
mov
aad
call
push
xor
mov
xchg
dec
inc
mov
fisttpll
lods
sahf
mov
popf
adc
or
das
fstpt
aam
icebp
xor
push
mov
cld
xchg
fimull
in
xchg
lods
push
repnz
enter
or
shrl
lods
sti
int
lret
sti
mov
sbb
mov
std
fisubl
shlb
jle
xchg
jnp
les
sar
push
sub
pop
das
insl
sub
jp
xchg
ja
dec
dec
imul
push
mov
cmp
in
jne
frstor
lret
sbb
mov
mov
sarl
dec
call
ljmp
add
mov
xor
out
pop
add
rorb
lret
in
mov
movsl
xor
mov
imul
mov
pop
push
adc
lahf
nop
mov
mov
adc
in
adc
out
add
pop
and
ret
lret
or
scas
xchg
lahf
fimuls
dec
je
mov
adc
dec
mov
stos
cmpsb
int3
ficompl
enter
testl
xor
and
push
jne
dec
std
cwtl
xor
out
insl
cld
cmp
loope
sub
hlt
ret
lret
xchg
jle
pushf
mov
jp
xor
faddl
lret
loopne
scas
mov
xor
and
xchg
test
mov
popf
xchg
mov
sbb
bound
dec
js
adc
dec
out
es
jmp
hlt
cld
stc
cmp
out
cmp
shll
shl
mov
insl
mov
lret
inc
in
dec
stos
insb
sub
sbb
jns
jg
daa
dec
pusha
shrl
mov
jb
mov
pop
jp
mov
xor
sbb
test
stos
sbb
cmp
aas
inc
mov
mov
pop
cltd
push
and
fstl
adc
out
and
mov
sub
push
dec
imul
mov
cmp
ret
out
dec
add
ss
and
ret
cmp
insb
xor
insb
es
xchg
nop
jp
jmp
adc
jno
jge
adc
neg
loopne
mov
imul
xlat
xor
mul
scas
ret
aad
or
adc
lock
arpl
sbb
dec
inc
xor
cmpl
pop
cmp
stc
call
mov
sti
lret
inc
mov
pushf
add
imul
and
jge
jle
scas
sub
cmp
es
cmc
mov
sbb
jo
cwtl
cltd
mov
test
sbb
mov
sub
pop
cld
dec
stos
cmp
cs
adc
xor
sti
into
xchg
into
jl
imul
rolb
mov
add
rclb
mov
clc
adc
in
jge
negb
mov
xor
adc
adc
icebp
lret
sub
in
xor
sbb
sahf
pop
xchg
cmp
cmp
or
xor
dec
mov
repz
shlb
xor
mov
pop
out
inc
js
frstor
jnp
fs
cltd
in
jp
or
pop
jg
push
xor
pop
adc
cmp
mov
cltd
clc
and
data16
mov
push
jp
lods
add
mov
and
ljmp
test
pop
xor
xchg
inc
out
in
or
enter
lahf
push
inc
in
push
arpl
loop
pop
ret
test
inc
xchg
push
lods
mov
pop
mov
imul
fwait
or
aas
jp
and
and
add
lcall
sahf
addb
mov
pop
arpl
fisubrl
jl
pop
ret
push
pop
mov
cmp
mov
xlat
cli
lahf
pusha
and
push
xor
ud0
enter
add
mull
test
fcoms
ffreep
jmp
daa
aam
imul
sbb
cmp
cmp
add
push
in
shl
sub
jmp
and
mov
jo
flds
shrl
xor
sbb
pop
jmp
out
lea
jge
mov
xorb
out
xor
fldt
ret
iret
pop
dec
dec
leave
sbb
inc
fimuls
inc
push
dec
and
push
mov
pop
adcb
hlt
clc
rorl
or
pusha
std
imul
pop
stos
testb
jl
enter
mov
es
addr16
sub
jg
sbb
mov
xor
mov
scas
and
mov
sar
fistpll
in
pop
jg
inc
pushf
das
add
lret
lods
xchg
sbb
jl
xchg
cld
or
out
cmp
mov
mov
add
mov
adc
mov
xchg
bound
push
jge
movsb
dec
inc
xchg
and
int3
jbe
fdivrs
xor
mulb
adc
lret
hlt
aas
test
jp
sub
mov
adc
jns
cmp
and
sti
loope
adc
mov
add
mov
nop
xchg
pusha
push
xor
mov
push
dec
xor
js
jbe
sub
into
repz
fisttps
jno
into
sbb
sar
cmp
aad
xchg
ds
xor
mov
add
movsb
xchg
pop
fadds
pusha
inc
cltd
test
cmp
inc
mov
subl
jmp
mov
xchg
pop
mov
lret
xor
sbb
add
pop
add
pop
fsubl
call
push
fsubrs
adc
jb
fmuls
mov
shll
cli
aad
adc
cmp
pop
xor
rorb
les
push
ret
inc
test
jmp
dec
cwtl
push
test
mov
cmpl
insl
adc
mov
in
and
popa
adc
jmp
lods
jns
loopne
es
fcoml
outsb
mov
daa
pop
jge
out
pop
mulb
adc
xor
sbb
push
sarl
jo
arpl
sbb
je
ljmp
sub
shl
nop
int
sub
into
pop
lds
jl
pop
inc
and
add
clc
inc
int3
rclb
inc
outsb
inc
jp
xchg
loopne
sub
out
movsl
jp
sub
roll
mov
push
push
mov
mov
mov
dec
mov
hlt
lahf
dec
movsb
mov
cmpsl
or
mov
test
movsl
sahf
mov
in
jbe
lock
xor
movsb
les
add
les
jbe
jb
adc
mov
sub
xlat
adc
mov
stc
dec
xor
std
iret
add
sub
cmc
loop
pop
and
jp
xchg
lcall
push
dec
fisttps
push
aad
jg
lods
sbb
cmp
dec
int3
cmp
movsl
pop
imulb
pop
inc
adc
sti
mov
pop
lcall
xchg
das
dec
ret
xchg
push
lock
jg
adc
adc
and
lcall
fcompl
sbbb
and
sbb
in
push
xchg
add
scas
sbb
lcall
push
stos
jle
insl
aas
mov
cmp
xor
dec
scas
nop
add
sti
ret
xor
lods
lahf
jp
outsl
pop
inc
xchg
hlt
sub
push
jns
adc
je
movsl
pop
dec
inc
lea
out
jmp
push
mov
imul
jp
nop
mull
stos
dec
insb
or
imul
scas
and
popa
fsts
iret
and
mov
xchg
or
mov
pushf
hlt
adc
fstp
es
insl
jae
or
hlt
mov
out
jbe
fstl
push
mov
mov
add
sub
mov
test
cmp
movsl
lea
inc
mov
push
rorb
jns
insb
cmpl
out
ja
push
pop
ds
push
mov
imul
push
loopne
xchg
jbe
out
jg
insl
xor
xchg
ret
mov
popf
ss
js
push
clc
cld
sbb
mov
and
mov
or
loopne
jg
jb
jecxz
xlat
sahf
adc
cmp
adc
dec
inc
push
jp
insl
cmpsl
add
xor
cli
mov
mov
insb
xchg
sbb
push
stos
push
pop
roll
mov
mov
push
imul
nop
add
mov
mov
and
in
mov
dec
ror
cmp
sbb
add
jae
mov
lea
aaa
push
aad
cs
imul
movsl
inc
jmp
repnz
add
out
cmp
xchg
cltd
sub
lahf
nop
adc
push
push
aad
cli
pushf
jl
fcompl
fs
and
mov
push
push
mov
insb
adc
lds
jmp
in
outsb
and
inc
push
jg
popl
loopne
mov
xor
cmp
xchg
push
out
mull
pop
sbb
dec
aas
fnstenv
sbb
mov
jnp
push
mov
mov
xchg
mov
add
dec
nop
test
aaa
jmp
sarb
outsl
and
lahf
mov
rorl
into
and
or
push
adc
cs
mov
ret
and
test
inc
jecxz
mov
push
jno
imul
sti
push
aad
test
add
stos
daa
outsl
dec
enter
jo
pop
adc
test
je
xchg
int3
inc
ds
outsl
pop
insl
push
pusha
lods
sub
dec
cmp
pop
push
ss
mov
fstpl
addr16
push
xor
negb
or
cld
rol
test
out
sub
or
sahf
jbe
or
les
out
pop
lret
rclb
jg
loopne
sub
xchg
cltd
paddsw
mov
sbb
in
push
jns
fstpt
jo
mov
adc
add
popf
push
mov
cmp
aas
loop
enter
and
rorb
les
dec
into
adc
dec
dec
mov
aaa
push
and
stos
ss
stos
mov
cmpsb
mov
dec
leavew
cmpsb
cmp
mov
xchg
ja
sub
fsubrl
mov
sub
xor
xor
sarb
neg
jecxz
lahf
lret
ljmp
aas
and
inc
jb
add
mov
push
mov
or
lods
cmp
sbb
popa
mov
and
ss
imul
mov
mov
mov
je
add
jne
shrl
mov
jno
dec
xor
icebp
mov
test
ljmp
and
adc
and
xlat
test
cwtl
push
mov
xchg
and
cmp
mov
pop
test
and
stos
roll
xchg
rclb
sbb
jmp
test
insb
inc
pop
jge
or
adc
jae
adc
int
mov
jbe
imul
aad
xor
dec
pop
fists
add
shll
mov
push
nop
jae
test
test
movsl
je
dec
dec
push
fsts
pop
hlt
sbb
fcompl
and
iret
or
xchg
or
jg
orl
mov
pop
lods
inc
mov
sub
cmpsb
mov
and
icebp
ret
ss
adc
push
mov
pop
jecxz
mov
jge
push
fldt
sub
rcll
popa
mov
sub
shrl
pop
das
pop
jmp
andl
or
mov
and
cmp
sbb
cmp
sahf
and
or
test
loopne
shl
or
inc
dec
int3
mov
imul
push
and
in
imul
sub
lock
dec
movq
insb
fsub
pop
lahf
leave
call
enter
pop
jbe
cmp
add
cltd
ficompl
lea
sub
mov
arpl
mov
mov
and
std
prefetch
es
pop
cmc
cmp
bound
cmp
push
lret
xchg
adc
inc
or
sub
jne
mov
and
cmpsb
xchg
mov
and
sub
sub
add
lret
adc
sbb
xchg
es
push
insl
sbb
fcompl
movsl
lock
adc
stc
xor
subb
xorb
cmp
push
lea
push
sub
divb
dec
int3
sbb
cwtl
fbstp
in
outsb
jnp
xor
or
xchg
in
add
mov
xor
inc
mov
fstpt
inc
ljmp
stos
shll
das
add
sti
jne
add
pop
sbb
aas
and
fwait
lods
mov
lods
xor
inc
in
pop
jl
pusha
shlb
in
xchg
inc
sub
es
add
mov
pusha
cmp
ljmp
js
cmp
push
inc
js
mov
inc
mov
enter
xchg
dec
sub
js
imul
xchg
shl
xchg
adc
std
outsl
jbe
outsb
test
push
scas
out
pop
daa
mov
cmp
les
push
add
aaa
xchg
fdivl
insl
cmpsb
jb
jo
aad
cmp
jb
lock
and
or
in
sub
and
or
aam
sbb
fnstsw
xor
xlat
fdivp
mov
arpl
push
mov
mov
cwtl
inc
scas
jo
and
sbb
inc
mov
dec
adc
mov
dec
cmp
pusha
xor
int
scas
push
cmpsl
mov
fs
mov
repnz
lcall
lock
push
sbb
subb
and
int3
jne
pusha
xor
or
aad
push
add
pop
mov
mov
sub
xor
loope
dec
pop
fidivs
lret
movsb
movsb
pushl
add
lret
insb
cltd
imull
adc
int
scas
test
mov
mov
xchg
mov
inc
inc
shll
mov
jb
xor
push
sub
sub
add
sub
loopne
shrb
mov
mov
inc
mov
xor
mov
jle
jns
ret
popa
in
dec
inc
jo
imul
lock
mov
xchg
push
setl
sbb
pop
int
and
addb
xor
mov
je
ret
mov
in
scas
and
mov
jae
jle
lret
insl
imul
push
xchg
jge
sub
mov
fisubs
int
inc
dec
sbb
loope
ljmp
push
jns
and
and
sbb
or
movsl
add
int3
cmp
cmp
add
add
mov
sub
push
mov
movsb
lea
gs
dec
push
inc
push
lret
inc
enter
jmp
std
in
outsl
test
jb
in
xor
add
mov
stos
mov
sbb
cmp
sti
ficomps
lret
sahf
ljmp
fmuls
ss
cld
and
mov
push
fdivl
inc
add
test
add
repz
or
mov
cmp
mov
aad
mov
pushw
xor
sbb
mov
lea
repz
xchg
outsl
jno
out
int
add
jns
int3
sub
dec
sub
movsl
test
jae
mov
mull
ja
xchg
sbb
sub
mov
or
xchg
add
cwtl
imul
adc
push
jb
adc
daa
sub
test
iret
cltd
mov
jnp
push
cwtl
mov
cmp
es
idivb
ljmp
push
mov
mov
insl
adc
orl
inc
fcomps
aaa
je
arpl
cmp
xchg
aad
data16
movl
xor
dec
jbe
dec
pop
ret
popf
cmp
andb
jb
dec
dec
and
and
fcmovnu
sbb
iret
cmp
nop
adc
out
add
imul
cld
adc
cmc
lea
cmp
call
jle
fisubrs
sbb
or
popa
bound
jg
shlb
int3
xor
stc
movsb
lds
insl
xchg
xor
lcall
push
loop
and
stc
dec
in
pop
loope
inc
dec
dec
stos
cmp
loopne
jb
addb
sub
out
in
pusha
sub
ds
jb
stos
nop
sub
rcrb
adc
dec
mov
jnp
insb
mov
je
mov
mov
rclb
leave
or
dec
imul
xchg
popa
mov
test
insb
mov
andb
xor
dec
les
cmp
push
mov
jp
lods
or
jnp
jno
add
xchg
push
icebp
xchg
movsl
lret
ficomps
ljmp
ficomps
adc
vmulps
int3
and
dec
xchg
dec
nop
jl
and
xor
dec
push
stos
movsl
or
insl
lea
xor
mov
inc
call
sbb
adc
and
scas
lock
dec
enter
cmpsl
int3
xor
loop
shll
fwait
dec
add
push
js
sub
jle
jo
sbb
inc
jae
and
push
push
mov
dec
lret
push
clc
mov
add
lock
mov
xchg
sarb
ret
gs
jp
cld
dec
adc
sahf
pop
test
and
popf
cmp
int
and
sbb
mov
je
xor
mov
and
ds
popf
or
and
mov
cli
lahf
push
add
xor
jmp
insb
lock
lock
out
add
cli
movsb
sbb
int
cli
js
push
dec
pop
mov
add
das
mov
sbb
ljmp
pop
shrb
rcr
in
xchg
jnp
add
jb
mov
imul
daa
cmp
add
addr16
jecxz
addr16
dec
push
enter
xor
push
out
sub
push
aas
fwait
mov
imul
push
fs
cltd
fidivl
or
fucom
jmp
xor
dec
insb
aaa
mov
mov
addr16
pusha
cmp
lods
iret
push
jb
shll
jae
mov
adcl
call
jl
int3
mov
bound
lock
xor
subl
fimull
in
pop
stc
imul
rcll
sub
popa
xchg
xchg
or
xchg
aam
imul
pop
push
mov
inc
enter
hlt
jecxz
mov
imul
add
cmpsl
add
pusha
arpl
je
mov
add
out
mov
mov
cmpsl
jae
mov
dec
fwait
into
sti
enter
movsb
jge
call
add
ja
outsl
jle
adc
mov
pop
fbstp
or
cwtl
dec
mov
or
xchg
mov
jg
jmp
jns
test
mov
jp
xor
mov
mov
data16
test
insb
xchg
jg
mov
add
lds
jae
idivl
das
mov
and
jle
dec
sti
push
repnz
sub
mov
dec
sbb
add
orl
test
popf
xor
sbb
incl
out
cmpsl
xor
pop
push
mov
sbb
repnz
es
roll
jo
xchg
xchg
xor
jp
inc
adc
mov
cmp
mov
dec
xlat
lods
mov
and
lcall
fsubrp
ret
aaa
out
jg
fistl
xorb
push
mov
rcr
stos
ret
loopne
dec
divl
mov
cmp
scas
imull
or
ret
cmp
and
add
outsb
push
xchg
jns
push
add
dec
aaa
scas
fsts
dec
adc
mov
out
stos
mov
outsl
mov
push
adc
mov
popa
push
adc
mov
shlb
push
sahf
jb
pusha
aaa
test
scas
in
lock
jno
lea
out
lock
mov
pop
inc
incl
sahf
gs
jle
loopne
lcall
jp
add
test
cli
mov
and
add
data16
pop
test
cmp
xor
ret
lahf
repnz
mov
adc
das
push
xor
rclb
inc
movsb
inc
or
jg
pusha
adc
cmp
xor
adc
mov
add
mov
orl
lret
mov
xchg
mov
pop
xor
and
out
pop
push
mov
mov
xchg
or
shrl
and
dec
test
int
ret
mov
dec
bound
scas
jmp
lahf
sbb
les
ret
ret
pushf
inc
cwtl
xchg
out
jnp
jecxz
imulb
cmc
movb
add
adc
jb
or
pusha
dec
in
jae
cmp
dec
cmpsb
cmp
cmpsl
fs
call
iret
subb
jecxz
lods
sub
sbb
push
popa
push
mov
cmp
icebp
sub
cmp
lret
js
sbb
ret
cmp
adc
es
ficoms
jp
popf
pop
clc
insl
es
push
mov
fnstsw
push
jns
xorb
xchg
xor
ja
jns,pt
pop
fs
adc
pop
push
test
and
xchg
lock
mov
je
jp
xchg
or
xor
fbld
jb
mov
jl
mov
stc
das
cmp
mov
mov
sub
add
add
adc
test
cmp
and
aam
adc
dec
sbb
add
scas
adc
clc
xchg
cmovl
cs
out
scas
sarb
dec
dec
fcmovnu
in
bound
lods
and
sbb
push
inc
adc
or
lret
imul
pop
enter
fildl
shrl
sbb
roll
mov
add
mov
pop
xor
adc
or
jl
mov
mov
xchg
mov
sbb
gs
lahf
cmp
pop
decl
pop
inc
jecxz
pop
cld
filds
xchg
mov
pusha
fstpt
aad
sahf
imul
add
test
add
dec
add
pop
lcall
mov
inc
and
and
mov
xchg
lods
shrb
pusha
aam
cld
ljmp
loop
bound
mov
nop
pop
xchg
jne
divl
rol
mov
lock
pop
sbb
add
cmp
into
and
mov
adc
inc
es
push
pusha
add
xor
sbb
mov
cmpsb
es
push
icebp
mul
mov
dec
daa
cmp
imul
jle
mov
ja
fidivl
dec
mov
rolb
push
add
xchg
jecxz
jns
add
loopne
jbe
fidivl
imul
cmpsb
mov
mov
xor
divl
inc
push
push
mov
push
xor
adc
call
jp
jnp
lds
out
icebp
xor
lret
fdivs
outsl
push
add
mov
push
sub
scas
mov
xor
push
and
fnsave
jo
movsl
in
cld
jecxz
xor
std
test
es
fildl
or
and
cwtl
pusha
repz
push
inc
cli
jne
aad
fcmovnbe
leave
ret
push
adcl
or
mov
inc
dec
mov
push
xchg
sbb
mov
inc
pop
mov
inc
or
xor
out
mov
shrl
out
or
call
xor
and
mov
push
mov
movsb
sub
das
js
mov
cli
lcall
popa
nop
or
repnz
sbb
and
cmp
sbb
jne
push
inc
out
inc
mov
mov
fmul
xor
push
icebp
jge
sub
loopne
in
daa
faddl
cmp
cmpsl
popa
and
push
outsl
mov
repnz
mov
inc
xchg
add
push
stos
movsl
outsb
pop
sti
add
and
iret
fmull
push
movsb
mov
inc
sub
hlt
add
ja
rorl
cmp
sbb
inc
test
rcr
push
inc
inc
mov
push
cmp
cli
movsb
mov
sbb
sar
cmpsl
cmp
jmp
sub
xor
inc
out
or
inc
mov
fldcw
lret
xor
pop
outsl
push
jbe
sbb
jp
fisttps
xchg
subb
ja
mov
adc
call
or
inc
sbb
aad
ret
arpl
cmp
xchg
push
fidivrl
jmp
ljmp
stos
loopne
lock
or
mull
es
xchg
fsts
sbb
aaa
dec
jo
mov
pop
cmp
fcom
mov
and
cmp
dec
add
xorb
mov
xor
push
xchg
adcb
push
sbbb
and
int
lods
fwait
pop
jnp
in
cmp
loopne
xor
jnp
push
add
jns
mov
in
fwait
js
pusha
cmp
repz
mov
faddl
mov
daa
push
data16
push
fdivl
test
das
inc
xchg
out
sbb
push
scas
rcrl
loopne
das
data16
stc
hlt
aaa
sbb
stos
test
dec
pop
mov
cmp
std
xor
inc
or
fldt
adc
out
cwtl
sub
test
dec
pop
pop
imulb
pop
ret
jo
test
int
punpckhbw
sbb
lds
adc
mov
rclb
xchg
call
scas
inc
jo
xor
adc
push
std
ficompl
or
roll
leave
outsb
push
test
pop
outsb
popf
lods
sub
lods
sbb
pop
xchg
xor
xor
sar
cmpsl
mov
inc
enter
addl
lea
std
cwtl
fmull
fldcw
rolb
mov
cmp
jp
or
jmp
les
or
mov
idivb
leave
aad
movsl
add
lods
jg
out
sbb
cmc
pop
cltd
dec
movsb
mov
dec
mov
rcll
in
andb
fwait
push
dec
adc
cmpsl
jb
jne
adc
frstor
mov
sbb
rcr
inc
mov
daa
fistpll
dec
clc
pop
mov
dec
or
push
in
stos
xor
icebp
aad
fucomp
mov
ja
gs
pop
shll
push
insb
mov
das
ret
adc
jp
out
test
loopne
test
stos
stos
into
jb
out
inc
pop
jno
dec
xor
cmp
into
aam
bound
mov
nop
xchg
or
insb
mov
sub
dec
and
dec
andl
outsb
inc
pop
cltd
scas
aaa
push
data16
pop
inc
mov
outsb
rorl
mov
scas
lods
mov
fcmovne
jns
insl
movsb
xchg
fadds
je
mov
and
push
mov
xor
add
cltd
pop
out
cmovo
test
add
dec
mov
mov
mov
and
sbb
push
pop
out
mov
test
inc
test
jp
leave
fmull
addl
mov
mov
divb
dec
add
push
adcl
imul
in
jo
subb
popa
sahf
push
inc
push
into
mov
repnz
push
xchg
pop
mov
adc
mov
int3
movsb
mov
int
fidivrs
out
sub
sub
xchg
popf
aas
push
iret
dec
mov
addl
daa
in
xorl
cltd
sub
lcall
mov
push
xlat
jns
enter
adc
orl
sub
mov
mov
mov
pop
pop
xchg
jle
xorb
lcall
push
pop
sub
shl
leave
cmp
je
xchg
jg
jb
xor
xchg
shlb
mov
sti
nop
out
lret
sbb
pusha
xor
push
std
movsb
ret
mulb
xor
adc
shrl
call
ja
ret
lret
xchg
jmp
push
enter
insl
mov
dec
les
inc
sbb
fwait
insb
loope
ret
gs
xor
add
fsubr
pushf
enter
mov
rcl
jbe
xor
jmp
shrb
push
mov
jne
inc
sub
repnz
dec
sub
push
ficompl
sbb
rcll
cmp
gs
and
adc
xchg
fs
dec
cmpsb
add
xchg
fs
or
lods
js
daa
cmp
sbb
les
jp
std
add
push
xchg
push
xlat
cmp
or
xchg
push
xchg
jmp
aaa
sti
ss
mov
pop
loopne
sub
xor
jbe
push
out
cmp
insl
or
ds
fiaddl
mov
out
dec
xchg
mov
loopne
in
mov
outsb
mov
inc
out
or
fidivrs
mov
hlt
aaa
or
dec
inc
aaa
inc
shrb
mov
shrb
push
xor
mov
cmp
js
cmp
push
insb
int3
and
stos
pushf
mov
pop
jp
movsl
xlat
jbe
in
push
dec
test
jo
scas
pop
nop
outsb
mov
mov
mov
mov
cltd
push
adc
mov
mov
imul
lahf
mov
xlat
jg
adc
inc
rorl
lea
inc
scas
add
xchg
fadds
icebp
mov
es
sub
inc
bnd
jns
mov
dec
pushf
inc
inc
add
pop
ret
cmpsb
loope
pushf
inc
sub
adc
inc
repnz
mov
aad
sahf
call
and
mov
loop
pop
xchg
fs
out
add
addr16
pop
pop
jno
aaa
mov
jmp
in
pop
cmp
push
jb
mov
sub
jmp
adc
mov
loope
or
jbe
shll
push
mov
cmc
ret
aam
lock
push
pop
ljmp
in
jb
out
insl
repz
adc
pop
sbb
xchg
in
pushf
les
xor
or
pushf
insl
jge
stos
mov
mov
sub
jecxz
and
out
out
sub
jle
mov
and
mov
push
cld
aam
stos
je
jnp
lock
cmp
mov
xor
outsl
jecxz
push
xchg
pushf
adcl
cmpsb
cmpsl
dec
scas
ficoms
mov
xchg
mov
push
icebp
imul
out
inc
pop
test
or
shlb
dec
inc
popa
mov
loop
xchg
mov
pop
fidivl
sbb
bound
test
jno
sarl
fildl
mov
addr16
scas
movsl
ljmp
insl
dec
sub
hlt
dec
testb
rol
or
pop
cmpsb
xchg
imul
fs
clc
movsl
inc
jl
aam
cwtl
cmp
insb
fidivrs
test
adc
xor
ffree
pop
cltd
push
mov
push
mov
ds
pop
popa
xor
pop
mov
out
hlt
enter
inc
insl
repz
xchg
les
jecxz
jae
push
sbbb
insl
outsl
jbe
lahf
mov
sbb
aas
adc
out
jmp
out
pop
push
bound
jne
pop
aad
jnp
rolb
and
mov
adc
jecxz
inc
fsubs
leave
xor
scas
repz
sarb
dec
popa
andl
jb
iret
je
jmp
mov
insb
or
adc
xchg
movsb
test
cmp
push
and
sbb
imul
sbb
int
scas
add
xchg
repnz
js
fldt
mov
adc
imul
push
xchg
iret
je
xor
ds
sub
popf
add
stc
add
lret
sbb
incb
cmp
inc
scas
sarb
ret
popf
mov
daa
mov
jo
pop
jp
xchg
mov
pusha
leave
pop
mov
mov
std
push
xor
mov
std
rcll
and
mov
xor
imul
cltd
ret
inc
cmp
mov
mov
shlb
mov
add
and
sbb
cmpsb
sahf
jne
dec
test
mov
shl
test
pushf
dec
xchg
unpcklps
call
pop
inc
pop
cmpb
fistpll
push
jp
mov
lcall
mov
cmp
add
ljmp
inc
lcall
jno
test
ficoml
cmp
push
mov
gs
testl
add
les
orb
sahf
idivl
outsl
fcmovu
cs
inc
fdivl
jnp
dec
mov
push
lods
push
mov
push
or
insl
dec
sbb
into
xchg
insb
dec
xor
lret
mov
loop
adc
and
lds
ds
mov
dec
insl
adc
mov
ja
mov
cmpsb
jp
jl
mov
dec
fs
bound
jmp
dec
dec
or
mov
gs
outsl
shll
nop
stc
xchg
pushf
in
xchg
mov
mov
jecxz
test
mov
scas
jnp
outsb
lret
or
ja
pop
ss
sbb
iret
add
adc
sub
and
xchg
pop
popa
mov
push
push
pushl
cmp
gs
in
mov
adc
pop
inc
sahf
stos
leave
jmp
dec
pop
popf
pop
jo
fdivrl
pop
mov
ds
ret
popa
mov
push
adc
sahf
fmuls
sub
out
push
cmc
mov
not
fs
jbe
xchg
sbb
cli
push
or
sub
dec
jl
sub
shrb
out
std
in
pop
push
loopne
cwtl
mov
rol
mov
rclb
jo
adc
loopne
push
fwait
cmpsb
idivl
shrl
popa
jno
in
push
lds
mov
jns
mov
cwtl
jnp
push
pop
xchg
loope,pt
ljmp
add
mov
stc
fimull
loope
jnp
mov
stc
sti
fldl
adc
mov
cmp
add
xor
loop
in
sbb
jae
sbb
adc
lahf
cli
xor
int
loopne
pop
adc
xchg
push
adc
hlt
int
mov
push
out
mov
rorb
xchg
sti
sub
repnz
inc
mov
pop
adc
leave
adc
pop
imul
shlb
xlat
popf
cmp
hlt
cmp
sbb
call
repnz
pop
call
jne
adc
xchg
out
insb
dec
imulb
mov
fs
xchg
or
inc
lods
xor
push
inc
ret
inc
or
ljmp
arpl
add
stos
int3
jecxz
stos
sub
sti
test
push
inc
adc
lods
cwtl
mov
and
and
inc
xor
lahf
cmpsl
push
adc
jl
or
inc
push
call
nop
popa
lods
aam
dec
fsubrs
pop
cwtl
into
ds
in
mov
inc
mov
orb
mov
and
fyl2x
add
aad
cmp
inc
mov
adc
subl
push
dec
pop
das
and
movsl
cmp
mov
fdivrl
lock
cs
mov
xchg
shll
jns
incl
scas
and
mov
pop
inc
pusha
and
lcall
add
flds
add
or
jp
loope
and
push
ds
jns
stc
xchg
into
lcall
inc
sbb
leave
push
pusha
push
imul
dec
add
xchg
sbb
test
jl
jecxz
xchg
notl
push
es
pushf
or
bound
mov
dec
mov
xlat
or
push
xor
dec
enter
adc
dec
dec
push
push
mov
ljmp
adc
adc
imul
lahf
incb
and
ret
dec
std
stc
pop
in
or
popf
add
xor
or
lcall
lret
cmp
push
ss
sub
bound
push
in
cmp
movb
notb
add
stos
dec
dec
aas
scas
jg
ret
outsl
add
test
insl
mov
jnp
dec
sub
stos
cmp
fcomps
shll
in
add
push
sub
lods
decl
popf
test
jnp
pop
pop
jp
pusha
in
sahf
rcrl
stc
fsubl
sbb
and
imul
and
movsl
mov
cmc
ds
dec
sub
imulb
mull
pushf
jo
pushf
imul
ret
jmp
pop
fnstcw
aad
dec
lods
cmp
pop
test
xchg
sbb
aaa
or
mov
mov
add
push
into
pop
pop
pop
aad
mov
mov
mov
stc
xchg
lea
cmpsb
fwait
rorl
out
iret
ds
and
scas
arpl
sub
inc
cmpsl
push
lea
ja
xchg
cmp
xchg
movsb
pop
ja
mov
mov
les
mov
mov
outsl
aaa
xchg
jae
jecxz
adc
scas
mov
fisubs
cld
out
jbe
cmp
or
insl
xor
loop
mov
pop
mov
loopne
divb
decb
popf
stos
mov
sti
inc
mov
dec
loopne
popf
mov
inc
repz
fisubrs
ficoml
in
aas
push
out
lods
fcmovb
lock
movsb
mov
and
add
xchg
jne
mov
fldt
sub
add
shlb
and
mull
std
lock
and
sbb
adc
pop
shll
roll
out
cltd
mov
sahf
inc
push
loop
or
repz
daa
cmc
sub
add
rol
outsl
jae
push
out
imul
mov
mov
xchg
out
mov
pop
sub
scas
cmpsb
mov
mov
leave
scas
dec
rcrb
add
pop
mov
shrl
lea
loopne
pop
addr16
mov
pop
addb
xchg
out
aas
outsb
add
push
shll
clc
outsb
das
and
adc
iret
fcmovne
test
sub
addl
mov
jecxz
jo
xchg
xchg
mov
or
mov
mov
into
mov
pop
cmp
inc
dec
inc
arpl
fiaddl
mov
js
stos
leave
lret
loop
clc
fbld
popa
dec
in
adc
xchg
cmp
inc
les
cli
xor
sub
sbb
test
ds
xchg
aad
in
xchg
cmp
cmp
xchg
xor
scas
add
stos
imul
in
lods
cmp
insb
dec
adc
mov
adc
jnp
in
aam
js
rol
mov
and
adcb
insl
xor
lock
or
movsb
mov
add
adcb
mov
mov
lret
int3
add
xor
mov
sbb
or
dec
out
mov
lret
push
ret
rorl
mov
push
mov
mov
adc
sbb
jmp
sub
or
xchg
in
out
ret
pushf
mov
in
and
xchg
sbb
lods
jl
push
jge
std
push
insl
inc
popw
mov
pop
aad
xchg
sbb
xchg
jmp
xchg
rorb
xor
imull
xchg
jmp
lahf
cmpl
mov
cld
xor
xchg
or
arpl
cld
or
pop
lret
sub
xor
jmp
aaa
pop
mov
js
scas
adc
call
int
xor
iret
mov
dec
in
xchg
ljmp
movsb
mov
jno
iret
ret
dec
adc
dec
adc
outsb
dec
and
addr16
adc
cwtl
cld
or
test
mov
test
jnp
imul
mov
stos
xchg
call
xchg
loop
movsb
or
mov
mov
in
jae
lea
pop
sbb
mov
xor
inc
fsubrp
loop
xchg
stos
or
lds
mov
test
jmp
fidivrl
sub
xchg
push
adc
and
cli
or
cmp
inc
dec
rcll
mov
add
enter
jb
xchg
push
mov
sbb
lahf
movsb
mov
push
outsl
adc
push
cld
inc
aaa
jp
std
push
movsl
sbb
fildl
or
rorb
jnp
jo
push
xchg
fiadds
scas
lock
mov
dec
pusha
sti
addr16
loope
cmc
int3
or
sbb
das
data16
dec
push
sub
repnz
mov
test
mov
sub
push
pop
mov
cmp
out
add
stc
fldl
orl
lods
sbb
add
shll
icebp
sub
out
jnp
push
cmovle
fnstsw
sbb
xchg
addr16
push
pusha
mov
mov
sub
xchg
cwtl
mov
sbb
jecxz
aas
jmp
inc
fisttpl
or
ret
sbb
insl
jbe
sbb
inc
fildll
push
push
ds
mov
in
and
jmp
mov
mov
adc
pop
dec
sub
jnp
sti
scas
daa
push
out
fsubrl
pusha
sti
in
jmp
xor
cld
dec
std
mov
mov
ja
daa
adc
push
sbb
mov
daa
aad
aaa
mov
ljmp
cltd
sbb
into
adc
cmpsb
cmpsl
dec
xor
xor
push
push
es
rclb
mov
stc
mov
lds
rolb
mov
push
aaa
push
outsb
jns
mov
pusha
jecxz
cmp
and
sub
mov
cmpsl
jecxz
pop
stos
les
xchg
jl
mov
push
xorps
pop
loopne
ret
sbb
insl
and
lret
sbb
sbb
xor
test
daa
jne
xor
adc
in
int3
mov
cmp
mov
cmpsb
push
mov
sub
pop
ret
dec
test
xlat
sub
cwtl
sub
nop
inc
cmc
or
mov
das
pop
pop
fisttpl
mov
stc
cmp
xchg
inc
leave
daa
inc
std
xor
cwtl
data16
pop
mov
ss
std
lret
daa
das
jmp
mov
pop
xchg
jbe
jo
aas
mov
or
xchg
es
incl
call
mov
xor
cmp
push
add
rolb
pop
addr16
fnstsw
push
cmpsl
mov
xor
or
push
push
xor
or
rclb
je
mov
cmp
and
inc
add
pop
cmc
out
cmp
insl
mov
inc
add
jecxz
dec
cld
mov
shl
decl
cmc
adc
add
lcall
sub
pop
test
xchg
les
jmp
cmp
inc
pop
movsl
xor
mov
nop
push
xchg
xchg
dec
adc
mov
scas
pushf
cld
test
loope
jmp
lcall
lret
mov
or
cli
ja
out
mov
cltd
mov
lahf
and
lret
cld
rolb
pusha
sbb
mov
divb
incl
stos
push
lods
mov
leave
inc
xlat
inc
or
movsb
leave
es
fstpl
xor
push
sti
sub
mov
jge
and
xchg
and
xor
test
push
inc
jns
std
in
mov
adc
aaa
jns
lods
xor
out
fadd
fisubs
dec
xor
and
rcrl
outsb
out
and
repz
cmp
pop
lods
dec
push
inc
mov
sbb
jl
mov
rcrl
inc
adc
scas
sub
adc
inc
enter
sbb
sub
xor
fwait
and
lea
ror
sbb
mov
stos
push
sti
push
cltd
popf
mov
sbb
cltd
inc
lret
cmp
lret
mov
jne
add
cmp
mov
pop
mov
das
or
sahf
xlat
aam
cmpsb
fwait
test
xor
adc
jmp
jnp
push
mov
dec
jo
cs
xchg
inc
xchg
inc
and
and
ja
push
call
xchg
out
sbb
jne
pop
lret
stos
popa
xchg
rcll
int3
pusha
out
call
or
rcrl
out
pushl
push
pop
sub
jae
inc
mov
pop
int
cmp
sub
dec
adc
sbb
xchg
jns
jo
decl
jg
test
xor
adc
pop
repz
xor
into
mov
data16
dec
lret
outsb
jae
inc
ja
mov
les
out
dec
popf
gs
je
loope
xor
pop
aam
cs
andl
cmpl
mov
sub
sbb
sbb
into
movl
sub
dec
adc
cwtl
jge
movsl
jl
xchg
inc
insl
fwait
mov
test
mov
xor
int3
das
into
mov
fisubs
jb
mov
in
pop
mov
dec
xor
cmp
mov
fwait
jmp
mov
adc
ja
dec
mov
adc
xor
int3
test
cmp
hlt
push
ret
add
jl
xchg
cli
mov
orl
xlat
out
jmp
pop
inc
fs
lock
sbb
fistps
xchg
xchg
loope
jo
mov
push
cli
jmp
cmp
es
add
sub
dec
push
stos
xchg
mov
xlat
pop
lock
cli
xchg
jns
jo
pop
int3
out
ret
xchg
std
add
cmc
hlt
push
sbb
cs
pop
dec
repz
or
data16
movsb
cmc
pusha
bound
inc
ds
jle
dec
ja
les
jo
push
rorl
xchg
push
jg
jno
pop
adc
rol
pop
mov
ljmp
pop
and
jmp
cli
in
dec
and
push
dec
hlt
xlat
insl
adc
mov
jmp
push
pushf
jge
jecxz
aaa
or
out
sbb
frstor
roll
cmp
adc
cmp
mov
pop
and
cmpsl
dec
push
mov
mov
inc
xchg
jne
int3
pop
in
jne
iret
mov
jb
mov
loope
sub
mov
jmp
out
xor
dec
inc
clc
dec
or
jno
clc
aad
test
aad
rcrl
push
mov
ud2
cmc
push
addr16
aaa
mov
test
cmc
xor
ss
lea
in
or
rcll
mov
out
scas
push
push
fs
lods
and
or
clc
adc
ficoms
xor
je
inc
addb
aad
divl
shll
mov
pop
daa
sahf
loop
mov
pop
jl
fsts
ljmp
lea
js
pop
mov
dec
mov
movsl
pop
cmpl
aad
insl
dec
cs
cmp
xorb
dec
test
jae
fwait
lock
pop
push
lcall
ret
mov
dec
mov
lods
mov
scas
rolb
popf
repnz
mov
sub
ficoml
push
push
out
add
insb
stos
stos
pushf
sub
lea
jo
fists
sbb
dec
cmp
jb
jg
call
dec
xor
out
sub
pop
mov
std
ficoms
pop
mov
pop
inc
cltd
push
push
popa
push
popa
loop
push
xor
sarl
cmc
test
cmp
mov
sub
ljmp
mov
test
add
mov
sti
xchg
jns
dec
enter
or
pop
leave
leave
iret
mov
and
and
les
cmp
leave
cmp
or
sub
mov
outsb
add
insl
test
mov
add
add
jge
adc
lahf
call
dec
orl
out
js
and
bound
push
inc
cld
pop
lds
pusha
pop
test
mov
dec
jge
ss
or
xchg
in
stc
es
pop
call
stos
addr16
mov
data16
add
movsb
push
dec
in
pop
push
int
test
sti
mov
andl
cli
mov
mov
pop
add
mov
mov
pop
dec
out
scas
js
sbb
xorb
stc
cmpsb
sbb
or
inc
sub
pop
icebp
jae
mov
inc
and
xor
or
xchg
jae
jae
pop
mov
and
adc
and
data16
mov
push
adc
push
stos
and
push
cmpsl
dec
jnp
enter
cltd
sub
aas
insb
cmp
mov
cmpsb
or
dec
mov
add
enter
or
push
mov
lret
addb
push
icebp
pop
dec
xchg
rolb
pop
mov
arpl
mov
dec
push
and
cmpsl
shl
je
rol
sub
insb
xchg
sbb
data16
ljmp
pop
js
mov
je
flds
sarb
roll
mov
repnz
hlt
fcoms
mov
inc
dec
jnp
mov
adc
xchg
jmp
bound
jl
add
fsts
or
jp
lea
sub
push
iret
sete
adc
outsb
nop
cmc
jp
push
jmp
mov
sub
jnp
push
adc
or
mov
subb
les
stos
fisubrl
test
sub
nop
xor
fstpt
cmp
dec
test
pop
ret
mov
adcl
xor
ss
nop
pop
insb
in
adc
push
mov
test
in
jecxz
add
rolb
jge
dec
mov
mov
inc
nop
adc
stos
insb
popf
push
xchg
shrl
sti
scas
lods
das
mov
jnp
jmp
cmp
cwtl
movsl
add
popa
nop
cli
cmp
jmp
gs
out
xor
loopne
enter
and
mov
xchg
ss
add
or
outsl
pop
xor
dec
andb
mov
shrl
cs
mov
lock
mov
test
xor
sbb
inc
dec
xor
lds
int
dec
sbb
repnz
sarl
scas
mov
jp
xchg
xchg
mov
mov
popf
mov
lods
xchg
adc
repnz
jg
push
ja
lds
divb
add
xor
cmp
popa
bound
bound
mov
hlt
clc
cltd
sub
mov
or
lret
insb
fnsave
cs
loope
sbb
hlt
rorb
or
rcl
adc
xchg
test
push
xchg
lret
test
ja
lret
push
in
in
aad
sbb
jmp
daa
int
gs
mov
push
xor
test
test
inc
sub
dec
push
out
inc
dec
dec
push
fs
clc
push
push
xor
loope
push
or
insb
mov
dec
out
loop
mov
cmp
mov
jl
lcall
mov
fwait
hlt
cmpsb
repz
inc
das
sbb
pop
sbb
xlat
mov
out
test
ficompl
lcall
jno
pop
int3
mov
xor
nop
mov
xorl
pop
dec
xlat
mov
enter
push
xchg
popf
xchg
les
dec
out
pop
cld
dec
inc
int3
cmp
or
push
mov
les
inc
jecxz
push
clc
xadd
add
std
shrb
mov
xor
pop
enter
add
xchg
mov
and
das
hlt
cmp
jae
dec
lahf
lret
outsl
fwait
cmpsb
adc
hlt
out
add
lods
sub
cmp
stc
adc
xchg
scas
int
movsb
shufps
cs
dec
in
and
sahf
push
aam
gs
das
lods
cmp
fwait
sbb
stos
repnz
and
xor
push
lret
stos
pop
inc
out
lea
daa
jl
vmovups
cmp
mov
sub
jne
int3
push
jnp
jmp
or
or
call
or
jns
js
pop
mov
hlt
add
cmp
or
ja
mov
cmp
test
test
and
push
jp
outsb
inc
dec
fistpll
inc
ret
mov
or
cli
sahf
test
popa
cmp
cmpsb
sti
adc
lret
xor
outsb
pop
and
lock
add
and
fildll
sub
push
clc
jmp
je
gs
cmc
popa
fmulp
add
lahf
cmovg
push
aas
scas
xchg
xor
movsl
lret
dec
js
jp
jp
mov
xchg
mov
ja
cs
lret
adc
cmc
out
mov
inc
xchg
lods
pusha
xchg
repz
mov
xchg
fildll
enter
ss
mov
push
xor
xor
aas
push
sbb
inc
inc
loopne
das
gs
pop
jle
adc
adc
inc
pop
and
enter
cmpsb
lock
out
out
pop
popf
out
jbe
test
xchg
adc
sub
std
popa
popa
std
insb
and
movsb
mov
insb
std
ljmp
les
rclb
adc
cmpsb
aad
shlb
jp
pop
jmp
mov
pop
adc
imul
fidivrs
mov
mov
or
cmpsl
or
add
iret
in
mov
mov
aas
sub
stc
inc
out
cwtl
imulb
das
and
xor
std
inc
adc
pushf
mov
and
push
ljmp
std
inc
or
xchg
adc
jne
pushf
out
dec
lret
adc
add
aas
in
fwait
push
gs
popf
test
and
sbb
adc
add
mov
sti
out
add
dec
dec
mov
mov
inc
addr16
mov
add
rcrb
fadd
xchg
fwait
push
test
push
push
dec
push
push
mov
mov
test
test
cs
jb
rclb
mov
pop
mov
dec
out
fstpl
sub
test
sub
icebp
push
jmp
in
or
mov
push
push
add
call
pop
mov
dec
cltd
fsubrl
add
adc
mov
adc
mov
cmp
lcall
lea
cmp
mov
js
jg
out
sbb
inc
jno
adc
jnp
jecxz
jae
arpl
bound
cmp
pop
push
inc
cli
mov
enter
outsl
mov
into
sub
pop
sbb
outsl
mov
sbb
sbb
and
xchg
mov
xchg
mov
sarl
pop
fistps
sbb
test
xor
sub
mov
rolb
xor
or
xchg
rorl
cmc
loop
jb
push
xor
pop
lret
mov
les
push
sti
sub
push
outsl
fnstsw
and
aaa
ret
ds
lret
cmpsl
sub
mov
and
testl
lahf
sti
ds
lock
out
fiaddl
outsb
sar
sub
test
lods
mov
inc
sbb
aam
lret
dec
leave
mov
xchg
test
mov
fimull
stos
xchg
sbb
mov
pop
mov
dec
adc
insl
push
inc
cwtl
scas
sbb
sub
loope
xchg
pop
sarb
inc
cld
xchg
mov
inc
pop
push
adc
popa
xor
into
push
inc
jle
and
mov
sbb
lea
xor
loopne
mov
xchg
cmp
insl
push
adc
lea
sbb
sti
adc
negl
xchg
jecxz
sub
mov
pop
ficomps
icebp
hlt
xrelease
mov
mov
dec
or
xchg
into
test
inc
nop
inc
mov
push
push
sub
pop
test
mov
inc
fnstsw
stos
mov
sbb
or
gs
adc
push
jg
cmovne
sub
mov
fsubs
and
lahf
cmp
or
arpl
xchg
call
and
jbe
movsl
push
push
pop
and
cmc
ret
popf
out
xlat
icebp
repnz
sahf
insl
andl
popf
mov
adc
add
mov
xchg
out
int
add
data16
ficoms
mov
push
ljmp
cmp
imul
adc
adc
xlat
in
xor
popa
or
dec
enter
int
std
es
mov
outsl
add
aaa
testl
mov
sub
fwait
movsb
clc
sub
mov
cmp
and
in
push
cmp
iret
insb
out
pop
sbb
pop
cmp
fxch
sbb
xor
das
mov
dec
gs
sbb
lea
cmc
mov
pop
stos
outsl
jno
push
xor
and
pop
inc
popf
push
adc
jp
mov
test
addl
rcr
push
and
hlt
dec
fistps
xchg
dec
in
insl
pop
push
xchg
xchg
in
or
hlt
daa
lods
cld
push
fistps
addr16
mov
call
addl
add
jnp
loopne
add
aad
int3
xor
sub
cli
fcmovnbe
jmp
xor
in
aad
rorb
cld
sub
in
repz
lds
pop
sbb
sbb
sbb
cld
cmp
push
movsl
stc
lret
cmpb
push
add
push
sub
lods
dec
cmp
inc
and
add
cli
pop
fdivrs
xlat
in
lahf
sub
test
mov
fdivp
pop
test
sub
xchg
jecxz
in
mov
popf
sbb
mov
arpl
mov
or
loope
test
or
add
pusha
inc
adc
aaa
push
repnz
sbb
negb
push
les
adc
adc
mov
inc
into
cmp
mov
xchg
divb
dec
pushf
in
in
adc
sub
pop
mov
fisubrs
inc
xor
insb
xchg
ljmp
adc
cld
imulb
sbb
push
xchg
add
dec
les
insb
popf
and
and
add
js
enter
and
push
jle
or
mov
sub
sub
jmp
insl
pushf
sub
arpl
test
cltd
movsb
mov
scas
xchg
push
xchg
cld
push
sbb
das
and
dec
hlt
push
cmp
sub
jo
mov
xchg
outsb
add
cmpb
adc
mov
and
aas
sbb
cmp
stc
push
repnz
sub
loop
adc
xorb
stos
movsl
nop
jg
andl
push
pop
sbb
mov
pop
xchg
into
hlt
cmp
and
sti
xchg
inc
pop
mov
sub
jecxz
inc
aas
data16
xorl
mov
mov
xchg
fmull
cmovno
add
cmc
adc
cli
push
push
cs
push
cmp
loope
lret
std
sahf
xchg
adc
aas
fistps
fsubs
inc
mov
jp
mov
and
pop
mov
in
add
fstps
dec
addb
scas
jg
pusha
outsb
ss
in
push
dec
cmp
mov
insl
push
pop
mov
lahf
cmpsb
cmp
inc
mov
or
lahf
or
cmpsl
sbb
push
lret
pop
jecxz
mov
nop
jle
sbbl
cmpsb
dec
xchg
fmull
hlt
aad
pop
ficoml
ds
xor
shrl
mov
inc
mov
cs
lahf
popl
push
or
fnstenv
ret
add
idivb
jo
and
shlb
lcall
xchg
out
fstpt
shrl
lcall
les
popf
sub
fcomps
jmp
push
lcall
loopne
dec
pushf
adc
inc
dec
out
dec
push
lcall
in
dec
pusha
adc
and
mov
fucom
xor
sbb
and
inc
cld
sarl
ljmp
clc
mul
cld
sbb
or
mov
lret
lret
out
sahf
fmuls
add
negl
xor
cmp
popf
cwtl
roll
mov
push
out
mov
xchg
dec
fiadds
mov
jno
stc
inc
add
cmp
hlt
mov
push
push
adc
xor
in
or
mov
int3
jmp
test
mov
ret
frstor
fwait
mov
sbb
aas
repz
in
xor
push
int
or
mov
adc
fs
push
scas
mov
pop
inc
fcmovnbe
ja
ds
aam
xchg
sub
int3
cli
mov
cld
jbe
lahf
es
cmp
jbe
jmp
and
lahf
jmp
pop
lds
enter
mov
out
cmp
sub
push
and
push
scas
jbe
add
or
adc
in
sbb
mov
inc
adc
in
push
mov
adc
add
mov
inc
movsb
jnp
jae
mov
adc
push
jbe
test
push
dec
mov
mov
push
mov
sub
push
stos
out
pop
dec
jecxz
inc
mov
fs
sbb
adc
add
ljmp
and
xorl
hlt
xchg
push
sbb
std
adc
add
test
faddl
or
mov
movsl
add
shrl
jl
push
mov
mov
mov
popf
arpl
lods
jbe
sbb
pop
dec
and
shl
int
pop
arpl
inc
aad
mov
dec
and
insl
test
dec
je
pop
adc
scas
repnz
mov
aas
out
aam
add
popa
push
leave
add
movsl
cmp
call
or
hlt
iret
jle
inc
cwtl
fstps
or
xor
cmp
fdivrs
imull
popa
mov
xchg
int3
sbb
inc
fdivl
jg
jg
lock
aaa
inc
inc
mov
mov
call
lds
test
xchg
ficompl
int3
mov
imul
mov
lea
push
mov
xor
pop
adc
call
add
lea
ret
jmp
cmp
xchg
xlat
adc
push
xchg
and
roll
mov
std
shlb
inc
les
scas
pop
and
nop
mov
ret
mov
adc
aaa
sahf
jecxz
cmp
test
cmp
out
mov
lods
imul
push
scas
hlt
sbb
inc
xchg
mov
dec
push
xchg
test
jp
inc
cmp
xor
out
xchg
jae
sub
or
stos
sub
xchg
outsl
cmp
mov
sbbb
push
inc
enter
dec
mov
xor
add
mov
lods
lock
push
xor
roll
faddl
loope
imul
push
and
xchg
cs
mov
mov
jl
jle
mov
mov
int
movsl
loope
dec
inc
rclb
insb
movsl
cld
loop
inc
lock
mov
out
into
pop
push
mov
adc
cmp
rcrb
mov
ret
jp
fst
dec
sbbl
cld
mov
fucomip
add
out
mov
or
inc
test
mov
sbb
inc
push
add
fildl
std
mov
fbld
mov
xchg
xor
sbb
repnz
movsb
stc
aaa
loop
hlt
adc
sub
and
pop
mov
mov
mov
jbe
fcmovnu
jbe
pop
lea
inc
jb
push
and
bound
fidivl
xor
push
cltd
test
mov
stos
push
pop
jo,pt
cmp
fmull
sbb
adc
shrb
pop
lds
fnsave
dec
jns
and
sbb
in
sub
jb
in
xchg
jle
sub
mov
addb
xor
or
fmuls
pop
movsb
inc
or
sbb
hlt
jbe
dec
dec
sub
inc
notb
push
adc
mov
pusha
test
pop
test
testl
mov
xchg
cmp
xchg
aaa
dec
dec
mov
mov
jb
jmp
sti
push
dec
outsb
popf
aas
icebp
pop
in
aas
push
and
add
xor
or
push
lret
dec
orl
outsl
popf
inc
push
inc
ret
sahf
dec
movsl
inc
mov
dec
nop
sbb
mov
fsts
xor
das
rcll
jecxz
cmp
push
in
mov
arpl
dec
shl
pusha
cmp
mov
or
fldcw
shr
stos
movsb
or
clc
loopne
or
and
push
cmp
repnz
into
mov
mov
cmp
push
xchg
movsb
mov
push
fwait
repnz
mov
lods
pushf
xlat
packuswb
fsave
cmp
or
inc
jge
mov
or
mov
jnp
push
clc
mov
lcall
inc
sbbl
pop
push
xchg
jnp
mov
cmp
fwait
jo
and
lds
xchg
xor
jecxz
mov
js
roll
or
mov
test
cwtl
fistl
mov
mov
mov
out
clc
jae
pop
outsb
or
loop
clc
mov
mov
imul
mov
mov
push
push
out
aaa
pop
dec
jb
cmp
ret
push
pusha
aad
sub
or
pop
in
les
popf
sub
mov
mov
mov
and
fildl
cmc
cmp
push
outsb
jl
shll
sub
xchg
push
sbb
sub
cltd
lods
jb
xchg
jle
les
cli
pop
lock
sahf
pushf
in
and
mov
mov
xor
or
test
sahf
xchg
divb
jmp
xlat
cmc
sub
shl
mov
inc
add
fld
push
ret
loop
ret
rol
cmp
jno
or
cmpsl
ds
inc
jnp
fistpll
mov
cli
add
mov
sbb
xchg
pop
int3
jo
ja
push
mov
inc
mov
xor
push
mov
pop
repz
sbb
add
pop
or
mov
mov
cmp
test
lock
push
mov
jp
popf
insl
mov
rdpmc
sarl
sub
mov
inc
inc
dec
out
ds
daa
scas
test
dec
or
inc
inc
pop
scas
outsb
mov
or
stos
dec
vunpcklps
call
and
push
aaa
sbb
jl
cmpsb
push
pop
mov
dec
mov
ret
pop
lahf
popf
jl
pop
cmpsb
sbb
dec
lods
sub
fdivs
bound
popf
gs
pop
outsb
and
push
cmc
loopne
add
imul
xchg
sub
add
cld
mov
sub
scas
lock
jecxz
mov
cmp
movl
add
ret
and
or
mov
cwtl
jl
pop
je
adc
adc
and
cmp
cmpsb
lea
xchg
aam
rclb
lock
mov
int3
sbb
inc
xchg
es
negb
loope
outsb
pop
out
repz
jae
ljmp
mov
mov
mov
xchg
mov
cmp
scas
push
insl
imul
inc
sub
testb
inc
jo
push
sarb
lret
and
mov
push
xor
hlt
dec
je
push
add
sbb
scas
mov
fcompl
mov
inc
fimull
sbb
mov
sarl
pop
in
aad
cs
cmp
cmc
lods
sub
popf
push
sbb
orl
xor
jb
pop
mov
sub
addb
mov
icebp
repz
adc
in
push
push
stos
inc
lods
xchg
insl
mov
mov
inc
sub
das
mov
and
or
mov
pop
dec
xor
push
xchg
push
sbb
push
mov
xchg
inc
add
dec
aad
jp
pop
push
out
mov
cmc
pop
jbe
cmp
jle
mov
sti
addb
mov
lret
cmc
mov
mov
fs
out
inc
jecxz
mov
sahf
hlt
jne
fldcw
lods
fucomp
cmp
sbb
jo
add
jmp
rcl
dec
jecxz
repnz
sti
mov
out
push
jb
xchg
add
inc
jne
pop
insb
cmc
icebp
mov
push
fldcw
movsl
and
rclb
lea
xrelease
lock
testl
cmpsl
push
xor
cltd
push
mov
rolb
leave
xchg
fnstcw
jne
pop
jle
jno
and
scas
je
dec
jmp
push
mov
icebp
imul
or
loop
mov
cmp
outsl
lods
fnsave
or
push
test
xor
std
fdecstp
mov
das
repz
loop
mov
fimuls
lock
lock
imul
cmp
js
cs
cmp
jecxz
cmp
rorl
iret
mull
mov
pop
aam
inc
das
and
ret
fcoml
es
test
sbb
jl
orb
jnp
pop
ljmp
dec
stos
dec
mov
sti
in
fwait
ja
out
adc
jmp
xchg
pop
xor
mov
loop
sbb
push
movsb
lods
das
inc
hlt
roll
xchg
and
stos
or
or
jbe
fildll
sub
frstor
pop
lds
cmp
xchg
xor
outsl
lds
pop
xchg
push
imul
ss
dec
mov
dec
ds
loopne
sbb
mov
inc
pop
sub
ficoms
fisubs
nop
xchg
les
negl
imul
or
incb
jmp
cltd
xor
push
dec
outsb
mov
ljmp
popf
dec
mov
stos
popf
push
enterw
in
mov
mov
sbb
sub
aad
into
inc
daa
fdivs
add
add
mov
cltd
add
dec
push
loope
sub
ret
mov
push
dec
loop
testl
adc
fbstp
cmpsl
test
test
dec
popa
cmp
clc
xlat
push
jecxz
dec
jge
fadd
pop
pop
ljmp
xchg
in
pop
mov
aas
movsl
mov
hlt
sarb
data16
test
mov
lds
lahf
cmp
sbb
mov
inc
or
rolb
mov
addb
xchg
sub
jns
push
xchg
pop
loopne
add
into
out
mov
mov
and
xor
jecxz
xor
sub
aad
xchg
jb
fiadds
pop
in
loope
lods
inc
mov
pop
cmp
mov
loope
loopne
orl
jnp
or
lret
jmp
push
cld
jo
int
sbb
fadd
repz
je
lret
add
negb
nop
stos
push
fldt
mov
jae
pop
in
and
int
outsb
xorb
int3
clc
int3
jecxz
xor
xchg
pop
dec
fdivrl
inc
rcrb
lock
dec
adc
xor
xchg
or
dec
icebp
push
scas
out
push
insl
loopne
xor
jne
je
or
push
xchg
adc
add
xchg
cmp
cmp
pop
rclb
xchg
dec
pusha
mov
xor
les
pusha
adc
push
fsubrs
outsb
mov
ss
cmp
in
or
cld
jnp
push
pop
push
es
fisubs
or
or
and
jp
mov
push
xchg
mov
in
test
or
stos
cmpsb
xchg
in
mov
push
arpl
loop
push
dec
loopne
psllq
popf
shl
call
inc
popf
cmp
sbb
cltd
jmp
ret
sti
inc
add
and
pop
jge
adc
std
add
enter
dec
popf
scas
insl
hlt
mov
arpl
or
cmp
popf
iret
xor
js
pop
and
fidivrs
pop
sahf
or
pop
mov
cli
inc
cli
push
loopne
add
data16
loope
mov
in
testl
cmpsb
sahf
sti
jo
mov
adc
xor
cmpsb
ljmp
sbb
xchg
nop
mov
pop
pop
push
cmp
lods
and
add
mov
test
insl
mov
xor
mov
dec
or
loope
arpl
pop
data16
mov
and
cmpsl
sahf
ljmp
fstpl
dec
cmp
and
shl
sarb
xor
pop
mull
cmc
lea
lret
sbb
adc
sbb
scas
insl
push
aam
ds
cli
imul
in
lcall
hlt
notl
aad
adc
arpl
gs
jae
into
xchg
inc
cli
xor
test
ror
iret
int
pop
push
movzwl
popf
and
sub
add
push
fdivr
and
and
fs
fists
and
lret
call
pop
test
cmpsb
add
push
push
cwtl
shl
negb
or
jae
xchg
popf
ficompl
pop
cmp
inc
cmc
out
pusha
outsl
in
add
ja
adc
fdivl
adc
filds
cmpsb
lods
lahf
jp
scas
add
add
inc
decb
sub
incb
adc
out
stc
fsts
push
loopne
lea
sub
daa
aam
dec
adc
jg
mulb
push
aas
dec
lock
lcall
cmp
sub
jmp
xchg
and
dec
sbb
fwait
inc
xor
daa
mov
cwtl
xor
cli
mov
popf
dec
lret
movsl
test
push
pop
cmp
sbb
mov
cmp
dec
les
jnp
ljmp
push
into
mov
imul
dec
ljmp
add
cmp
pusha
jle
pop
test
hlt
les
lret
pop
in
cld
cmpsl
nop
cmp
rcrl
mov
pushf
cmp
aas
movsb
xchg
movsl
inc
cmp
or
xchg
lcall
outsl
pop
fstpl
lret
stc
mov
sbb
push
ret
adc
es
repz
sub
cmp
mov
mov
pop
xor
filds
mov
out
sarb
dec
into
inc
mov
arpl
fidivrs
enter
sub
push
push
int3
icebp
decl
test
arpl
xor
pushw
mov
lock
and
mov
aad
imul
ret
out
xchg
sbb
sbb
add
push
push
xchg
and
jo
mov
pop
jbe
cld
add
inc
push
sub
addr16
cmp
push
cmpsb
xor
and
dec
push
add
pop
dec
mov
cmp
cltd
mov
push
push
jp
inc
push
sub
or
xor
mov
test
dec
mov
ljmp
loope
mov
dec
pop
clc
mov
lea
mov
out
jg
add
jl
mov
jbe
out
mov
cmp
xchg
inc
jle
sbb
mov
or
test
adc
mov
cmp
popa
dec
mov
xchg
mov
jg
in
dec
fsubrs
jl
movsl
and
or
enter
pop
sub
jbe
push
sti
xchg
in
js
and
ss
cmpb
jb
loope
out
out
outsb
xchg
insl
mov
pop
add
jno
mov
loope
stc
js
or
push
hlt
sbb
pop
sbb
data16
in
test
aam
lret
insb
std
inc
jae
aas
icebp
out
mov
sarb
and
sub
xor
cmpsb
test
ja
xchg
jmp
xchg
add
cmpsl
out
lea
dec
movsb
sub
adc
inc
mov
jg
and
and
xchg
in
and
push
das
lahf
jnp
scas
adc
xor
lret
div
cmp
ror
lahf
test
in
xor
dec
in
sub
arpl
insl
mov
mov
rcrl
int3
ljmp
inc
dec
pop
adc
and
push
movsb
and
jbe
into
dec
and
int3
movsl
mov
pop
nop
jbe
mov
or
mov
inc
adc
test
movsl
pop
xchg
in
push
in
or
sub
ds
mov
fwait
sti
cmp
imul
mov
xchg
cmp
addr16
sub
fldt
xrelease
loop
xchg
push
lahf
dec
mov
lret
inc
inc
xor
add
sahf
dec
in
ljmp
jne
sbb
lods
pop
scas
push
pusha
sbb
notl
scas
aam
je
fidivrl
jecxz
adc
xor
pop
adc
popa
fs
mov
pop
pop
idiv
shl
repnz
sahf
xchg
clc
mov
xor
outsl
mov
loopne
neg
testl
gs
mov
xor
adc
push
pop
and
xchg
cmp
mov
push
lock
pop
and
sub
neg
jle
dec
lea
pop
fucomp
push
push
lret
stos
inc
test
sbb
jl
push
xor
mov
jmp
mov
dec
loope
fcomip
sub
xchg
jge,pn
clc
popf
dec
loop
out
pop
xchg
or
sar
add
mov
or
lods
lods
cmpsl
mov
mov
cld
cmc
or
push
pop
mov
sarl
adc
xlat
mov
cmp
or
in
aaa
repz
inc
test
ja
mov
adc
adc
shrl
xchg
jmp
inc
int3
rcrl
inc
add
ja
push
or
lahf
neg
outsb
and
inc
mov
cmp
mov
add
lock
clc
jb
out
into
cmp
fmul
pop
lea
mov
repnz
and
mov
mov
inc
add
mov
and
cmp
pop
movsl
dec
jne
dec
out
dec
into
and
adc
stos
ret
inc
and
out
mov
jno
dec
enter
mov
and
scas
es
lret
test
jecxz
pop
shlb
push
mov
orl
ss
cmp
es
and
aad
mov
sbb
cmp
mov
addr16
jne
je
jno
mov
inc
cmpsb
mulb
neg
or
jp
cmp
pusha
add
fwait
mov
sub
cmp
pop
or
data16
fnsave
mov
xchg
filds
leave
int
mov
push
add
mov
in
push
sub
aaa
pop
mov
jmp
lock
mov
or
mov
xor
les
out
aas
je
or
enter
or
enter
stos
mov
mov
repz
and
subb
pop
test
mov
mov
cli
lods
mov
mov
mov
ss
lods
lods
mov
jnp
mov
les
out
sbb
adc
lods
cwtl
push
imul
push
cmp
dec
xor
push
sbb
or
jb
inc
add
mov
mov
or
je
fldenv
loope
jg
and
lds
lret
xchg
ja
repnz
mov
cltd
cmpsl
fsubp
aaa
es
sub
inc
pusha
fwait
dec
cltd
andb
cli
call
xlat
int
ds
xchg
xchg
loop
sbb
pop
divl
fmul
and
xchg
enter
mov
adc
sahf
xor
imul
js
jns
popf
je
pop
xchg
mov
mov
dec
xor
xor
jmp
push
clc
jmp
ss
outsl
popa
xorb
pop
loopne
jle
lods
mov
inc
movsb
leave
out
pop
pop
pop
xchg
cs
mov
into
scas
xchg
mov
fs
fdivrl
pop
inc
pop
loopne
jmp
xor
test
add
cmc
dec
loopne
push
jle
xchg
out
pop
adc
insb
sbb
jnp
mov
push
mov
push
addr16
movsl
inc
lods
aas
dec
pop
cmpsl
push
add
push
push
fistps
idivl
shl
and
add
pushf
mov
rclb
fmull
in
cmpsb
jnp
pop
push
ja
stos
dec
jo
in
data16
ret
adc
in
test
jle
dec
dec
les
lods
xchg
aas
cmp
negb
out
jmp
icebp
adc
push
shll
sbb
mov
les
shll
cmp
dec
enter
cs
out
add
rep
xchg
inc
out
dec
in
das
aas
test
in
rclb
imul
or
popa
ret
enter
call
outsl
jbe
in
push
inc
js
cmp
cmp
cltd
jge
sbb
xchg
out
loope
mov
jae
fisttpll
addr16
movsb
push
add
out
movsl
iret
fwait
aas
xor
insb
xchg
shlb
aas
pop
or
push
shlb
pop
mov
lods
mov
mov
lea
pop
scas
dec
enter
rcll
mov
xchg
mov
mov
pop
add
add
sahf
insb
dec
js
jo
shrb
mov
mov
jnp
inc
sub
aam
inc
sbb
add
leave
scas
lods
inc
or
jae
jns
cs
jo
daa
in
xchg
fisubs
inc
cli
sub
mov
ror
mov
xorl
cltd
test
xor
pop
rorb
movsb
inc
outsb
pop
loop
xlat
out
sti
or
mov
aad
xchg
add
xchg
fimuls
push
out
addl
cmpsl
jge
mov
mov
int
adc
in
push
xchg
mov
out
mov
jmp
push
das
sub
jnp
jo
loopne
lea
leave
adc
inc
mov
lcall
xchg
aas
push
lds
loop
or
rorb
shlb
fdivl
lds
pop
inc
idivb
xchg
fucomip
pop
push
pusha
je
int
mov
aad
loope
mov
inc
pop
hlt
mov
sub
fstps
out
sti
mov
pop
mov
jbe
cwtl
sbb
pushf
icebp
push
sbb
or
jp
repz
sub
mov
and
xchg
and
nop
mov
mov
add
pop
jge
js
or
in
mov
sbb
jp
cmp
xchg
lods
push
dec
jae
popa
cmp
jecxz
imul
add
pop
test
or
ljmp
xor
dec
fucomip
mov
mov
mov
inc
fs
add
ss
std
and
inc
fcom
mov
lds
pop
mov
and
xor
ret
xchg
inc
inc
pop
cmp
jecxz
and
cmpsl
cmpsb
std
leave
frstor
and
sbb
jo
jo
jbe
or
out
and
jp
subb
outsl
pop
stc
rorl
into
or
paddd
cmc
negl
roll
push
xchg
sarb
pop
cmp
mov
xchg
pop
lods
sbb
lods
and
outsb
lahf
jns
and
scas
push
jbe
fnstcw
clc
dec
inc
adc
pop
bound
stos
testl
xor
ljmp
cmp
data16
mov
mov
ds
lds
xchg
sub
es
jae
int
add
dec
inc
mov
psllq
out
push
call
push
imul
push
cmp
insb
stc
insl
add
add
imul
inc
inc
push
jmp
inc
dec
inc
inc
sub
nop
inc
inc
adc
pop
mov
mov
cmpsl
xchg
pop
les
lret
outsl
pop
cld
mov
pop
ljmp
rcr
rorl
ja
push
movsl
push
or
lahf
fdivl
jo
or
nop
cmp
inc
addb
int
mov
ret
gs
inc
lret
and
scas
push
insl
lret
repnz
xorl
insl
mov
adcl
and
add
fstl
das
loopne
mov
mov
mov
inc
pop
mov
dec
cmp
push
ja
bound
and
jmp
lods
fstpt
xchg
pop
xchg
mov
jnp
cmp
int
lea
jo
jne
sub
pop
jb
mov
and
sbbl
insb
pop
je
sbb
shr
sbb
pop
add
imul
pop
es
out
xchg
sbb
movsl
fs
lea
mov
clc
jae
dec
push
subb
sub
xorb
scas
xor
add
or
sub
sub
dec
or
pop
jae
aad
test
dec
lret
mov
push
mov
push
sub
sub
aas
cltd
mov
push
cmc
stc
add
lods
in
jl
sbb
adc
inc
cmp
bound
dec
icebp
dec
mov
fisubrl
idivb
icebp
loope
frstor
mov
daa
jnp
rorl
shl
push
push
dec
pop
fcoms
and
out
push
dec
outsl
shrb
xchg
adc
loop
mov
cld
add
and
es
rorb
mov
mov
cmp
push
push
mov
cmpl
loopne
loope
sahf
mov
fmuls
inc
imulb
ret
push
fwait
rolb
sub
insb
lock
cltd
adc
dec
mov
pop
add
add
stc
flds
mov
jmp
jp
xorl
cmp
cmp
mov
and
dec
push
mov
cmp
cwtl
and
or
or
aas
jmp
in
pushf
pop
lods
idivb
mov
mov
xlat
popa
les
andl
jp
adc
jns
and
pop
push
test
mov
imul
cmp
call
dec
push
inc
cwtl
xchg
nop
fcmovne
inc
out
xor
das
mov
cmp
dec
lret
clc
lret
fdivp
repz
adc
in
pop
push
mov
cmp
imul
dec
push
lret
mov
add
nop
lods
aas
loop
test
adc
sbb
inc
inc
inc
fsubrp
inc
mov
dec
ds
incl
stc
sub
leave
aam
jge
divb
pushf
pop
jl
lock
loopne
imul
cmp
pop
adc
mov
add
loop
mov
in
sbb
mov
jge
inc
nop
and
sub
testb
out
and
or
outsb
scas
cmpsb
sbb
out
andl
xchg
or
imul
pop
in
jp
ds
sbb
std
mov
bound
push
les
or
jb
pop
mov
lahf
scas
cmc
and
popf
mov
sbb
add
enter
addr16
sbb
ficompl
fcmovnbe
aad
movsb
pop
mov
push
jmp
inc
lods
icebp
fists
cmp
bound
shlb
clc
in
mov
cmp
lock
mov
ja
pop
xor
mov
popf
je
xor
mov
pop
fsubrl
loope
xor
cmp
rcr
mov
or
imul
push
gs
repnz
mov
and
cmp
inc
jecxz
jge
popf
loop
ret
pop
out
jo
lods
push
addb
pop
mov
or
and
xor
xchg
movsl
pushf
sub
jmp
in
fildl
sbb
movsb
inc
fwait
and
lods
sub
out
mov
pop
cwtl
out
dec
outsb
push
add
xchg
push
cmpsl
enter
push
xor
inc
and
and
out
mov
jecxz
push
and
adc
jne
mov
mov
sub
ss
sub
mov
lcall
es
push
jl
mov
jbe
jg
sbb
pop
es
mov
enter
cmp
adc
rcll
push
lret
daa
aaa
and
or
add
stc
dec
and
int
popf
dec
fisttpl
adc
push
inc
ja
xchg
in
xchg
aad
les
in
lods
daa
push
cmp
pop
jno
sbb
shll
jae
bound
sub
cwtl
or
roll
ret
jp
mov
mov
notb
push
xor
xchg
cmp
pop
into
push
sub
inc
pop
cld
mov
cmp
gs
and
in
inc
addr16
mov
mov
mov
cli
push
pop
ja
mov
inc
fcmovu
lret
cld
lcall
and
dec
test
addr16
aam
mov
and
enter
pop
sbb
add
repz
aas
bound
push
xchg
lret
inc
fiadds
push
or
mov
or
pop
inc
adc
mov
dec
jnp
mov
and
mov
sbb
xchg
cmpsb
out
and
into
into
xlat
fisubs
cmp
xchg
xor
xor
test
aad
or
jnp
add
fdivrl
sbb
clc
pusha
jp
iret
repz
fnstcw
inc
std
jns
fidivrs
sub
out
mov
mov
and
sbb
fbld
popa
fs
sarb
inc
test
arpl
xchg
jo
and
shlb
or
adc
mov
out
cmp
rcpps
int3
shl
test
inc
ret
hlt
pop
aam
mov
daa
and
sbb
mov
test
cmc
mov
call
or
mov
sahf
lods
aas
add
leave
jmp
mov
fsub
cmpl
outsl
sbb
pop
shrb
ja,pt
mov
mov
jg
pop
push
rcll
dec
fs
dec
scas
mov
sub
mov
stos
int
jb
mov
mov
inc
mov
pop
outsl
inc
xchg
or
adc
xchg
es
filds
imul
pop
nop
push
cmp
push
pop
xor
xlat
shl
xchg
pop
out
pop
cmp
cmp
dec
adc
addr16
mov
mov
mov
pop
shl
lds
cmp
push
mov
movb
lds
div
mov
or
xchg
rorl
adc
je
add
insb
loope
sub
enter
xor
pop
mov
shlb
mov
mov
pushf
scas
sbb
or
jle
push
inc
jmp
out
adc
push
mov
in
and
fiadds
test
xchg
and
std
mov
or
pop
movsl
sub
sbb
scas
loopne
dec
les
mov
rcrb
leave
jne
jp
imul
out
xlat
fildll
mov
mov
or
and
out
sahf
adc
jo
imul
outsl
cmp
xor
adc
fmull
cltd
outsl
ret
inc
addr16
mov
jle
in
jo
test
push
sbb
mov
mov
sar
add
pop
mov
aaa
push
dec
aaa
jle
or
sbb
test
cmpb
and
call
pop
cmc
pop
pop
fimull
dec
and
fisubrs
popf
sub
les
sbb
dec
pop
push
and
cltd
fstpl
jb
cmp
int
jbe
mov
sub
jnp
js
xchg
icebp
pusha
cmp
sub
ret
sbb
mov
pop
filds
cli
jb
in
leave
repnz
scas
jns
cmp
xchg
pminub
pop
clc
orb
fwait
cmp
push
dec
movsb
iret
ret
lret
loop
aaa
sbb
adc
jo
imulb
mov
mov
sub
ret
inc
adc
les
xor
mov
push
jo
sub
jmp
sub
pusha
cltd
jmp
nop
outsl
jns
inc
pop
mov
pop
lea
mov
xor
test
jnp
aam
es
je
sahf
adc
sub
loopne
lahf
fwait
movsl
out
dec
jmp
jmp
push
rorl
jne
or
cmp
push
cmp
sbb
in
pushf
test
jbe
data16
push
int3
mov
lods
out
xchg
adc
pop
mov
stos
mov
adc
jbe
js
jp
cltd
pop
push
mov
pop
jmp
add
pop
mov
int
inc
repnz
mov
sarb
pusha
xchg
imul
xchg
les
sub
mov
clc
aaa
adc
out
je
sahf
cmp
popf
je
cwtl
stos
sub
aaa
pop
pop
outsl
repz
adc
xchg
jns
outsl
add
xor
scas
pusha
jne
test
imul
rolb
mov
xchg
decl
fmul
cwtl
push
roll
mov
jmp
jmp
sbb
lods
jbe
mov
pop
ret
and
scas
sub
jp
sub
cmpsl
mov
pop
movsl
cmp
mov
dec
loop
or
test
sbb
adc
xchg
and
push
lods
cli
ret
aad
cmp
sub
mov
movsb
inc
or
mulb
lock
sub
push
pop
movb
das
and
or
inc
cmp
fistpl
shll
daa
mov
stos
neg
and
inc
rclb
int3
popa
add
push
dec
push
lds
xchg
das
or
mov
adc
stos
test
movsb
adc
lock
ja
jl
xor
mov
cld
jge
cmp
mov
pop
cmpl
je
scas
lahf
aaa
mov
cmp
ret
and
inc
xorb
xor
daa
sub
xchg
pop
insl
lcall
pop
ja
loop
in
repz
or
and
movsb
pop
js
add
fimull
insl
dec
cmpsl
mov
jp
mov
mov
in
rcl
rorb
xor
or
scas
xor
jo
sbb
inc
fisttpll
fldcw
mov
lock
jg
outsl
pop
shlb
loopne
xchg
mov
gs
aaa
jae
test
sub
mulb
pop
pop
sub
sbb
jmp
data16
hlt
pusha
je
mov
lock
inc
mov
jg
push
mov
inc
cmp
pop
outsl
enter
pop
push
jl
test
call
xor
jb,pn
lods
pop
sub
adc
daa
fdiv
sarb
and
jnp
mov
mov
pop
mov
arpl
movb
mov
mov
jbe
clc
imul
in
das
or
or
sbb
fisubs
or
rcrl
xchg
inc
andb
clc
into
lock
push
sub
aas
pop
imull
xchg
xchg
and
sub
push
sub
leave
divl
negl
xchg
inc
mov
popa
fidivs
jg
jns
jp
sbb
insb
hlt
inc
std
lods
data16
xor
movsl
xchg
inc
jnp
lret
es
lret
je
sbb
dec
std
out
jle
lea
popa
jo
cmp
pop
jne
xchg
sub
dec
push
sar
stos
mov
push
xchg
mov
repnz
arpl
mov
push
les
out
mov
push
jecxz
lods
push
jg
adc
arpl
pushf
xor
xor
ror
xchg
or
idivl
addb
mov
cmp
xchg
jns
mov
jb
in
mov
sub
dec
sub
popa
mov
pop
and
jbe
filds
sub
push
dec
pop
in
mov
push
insl
dec
pop
dec
xor
cmp
lock
ja
lret
aad
loopne
lea
push
rorl
aad
out
stos
mov
dec
push
mov
andb
daa
dec
repnz
pushf
and
pop
clc
push
push
push
inc
xchg
xchg
xchg
mov
scas
cmpsb
xor
and
adc
add
and
mov
test
push
jge
and
cli
dec
jl
clc
iret
xchg
add
fwait
inc
ret
aad
xorb
cmpsb
leave
mov
andb
cmp
loope
scas
mov
ljmp
xchg
bound
jo
pop
pop
popf
push
xor
in
mov
inc
pop
dec
repnz
cmp
rcll
push
mov
xor
sarb
sub
dec
adc
mov
mov
mov
sbb
xchg
pop
repz
jne
push
push
push
and
out
and
or
adc
mov
pop
out
mov
data16
jecxz
sub
subl
and
inc
mov
outsw
nop
icebp
sub
or
jnp
or
mov
push
or
jae
push
jnp
les
push
ret
iret
inc
jl
pop
sub
rcrl
or
mov
out
cmpsb
rcll
imul
jne
xor
cmp
sub
aam
add
aam
int3
lcall
pop
popa
inc
in
cmpsl
inc
pop
mov
shlb
jecxz
pop
mov
cld
mov
or
gs
push
scas
dec
aam
push
xor
add
mov
shll
mov
popa
fdivrs
cmc
arpl
xchg
add
mov
add
or
xchg
loopne
xor
sub
sti
aad
in
lahf
inc
icebp
xor
aam
cmp
mov
fmull
test
mov
ja
jae
jne
jl
faddl
scas
popf
jmp
rcl
jbe
push
sbbl
lahf
loopne
and
add
aam
and
xor
ljmp
jmp
stc
imul
cltd
stos
pop
scas
inc
or
adc
mov
sbbb
pop
icebp
aam
lock
shlb
xchg
nop
movsb
push
test
and
movsl
cmpsb
push
int
repz
out
lahf
dec
cli
or
push
hlt
jg
pushf
insl
mov
and
stos
fisubs
in
not
les
pop
xchg
add
and
xchg
jns
pop
shrl
push
in
and
pop
leave
pushf
mov
jg
and
aaa
outsb
pop
mov
xor
jmp
add
dec
test
add
mov
lock
fnstenv
mov
sbb
pushf
xchg
add
bound
fsubrs
ja
adc
push
push
cs
lock
stos
jnp
jmp
int3
dec
jb
sahf
add
fs
pop
adc
add
push
enter
mov
jl
pop
xchg
push
and
push
add
jmp
ret
mov
jg
lds
jae
leave
adc
inc
lods
dec
xor
xchg
mov
pop
popl
inc
xchg
cmp
cmp
test
pop
and
out
jle
push
cs
lods
sub
jne
add
stos
push
shr
sbb
in
mov
inc
jmp
jmp
fisubrl
mov
xchg
sbb
lods
add
jae
mov
xor
or
cmp
pushf
mov
or
add
mov
stc
ss
cmp
push
mov
test
hlt
es
adc
add
lock
sbb
xor
lret
pop
loopne
sbb
fsubl
ror
aam
or
push
mov
js
or
push
adc
mov
push
popf
mov
in
add
popf
andb
mov
iret
pop
lea
adc
shld
add
dec
push
sbb
rorb
cmp
mov
adc
pop
out
and
pop
adc
jne
pop
adc
pop
jmp
inc
mov
jmp
ret
movsl
leave
xor
test
pop
adc
sarl
loope
lcall
mov
stos
cvtpi2ps
cmpsb
mov
pop
out
mov
adc
pop
xchg
jne
stc
loope
and
mov
sub
lods
xchg
mov
jbe
inc
mov
sbb
fwait
xchg
xor
inc
wbinvd
insb
or
push
test
jle
hlt
sbb
test
mov
xchg
ds
cmp
sub
pop
adc
dec
adc
stos
mov
dec
mov
das
mov
rcrl
aas
out
sub
dec
mov
xor
sarl
dec
pop
sbb
shrb
jg
add
cmpsb
nop
pusha
in
or
dec
mov
inc
inc
ja
adc
inc
loope
mov
sub
pop
add
mov
and
push
fwait
call
loope
call
lahf
and
pop
mov
sub
xor
mov
sub
fidivs
pop
int
xchg
test
mov
jmp
sti
xchg
xchg
outsl
lds
lcall
insl
sbb
sbb
inc
jp
dec
inc
stc
nop
jle
call
out
xor
cmpl
adc
not
dec
shrb
lret
and
fsubp
inc
rol
mov
nop
mov
cld
jns
inc
jmp
mov
jnp
pop
lds
xchg
sub
aam
daa
inc
int
add
jne
push
insb
hlt
inc
xor
stos
xor
or
inc
loopne
sbb
hlt
mov
fstpl
adc
add
sbb
mov
clc
mov
xor
push
ret
push
mov
aad
and
ljmp
xchg
mov
dec
loope
pop
pop
mov
and
push
pop
xchg
arpl
repnz
jae
sahf
cwtl
mov
sbb
mov
test
into
cmovns
out
shrb
mov
jne
out
pop
popa
add
xlat
pop
lret
fcomip
loop
xchg
iret
sub
and
test
and
xor
and
dec
ror
rcr
sbb
dec
inc
cmp
nop
xor
mov
inc
or
jl
add
cmpl
cmp
mov
sbb
push
sub
loopne
enter
movsl
inc
mov
les
sub
jo
iret
jb
dec
repz
cmp
and
xchg
scas
xor
lcall
sbb
outsb
inc
inc
and
cwtl
jg
rolb
lret
sti
mov
mov
das
adc
mov
or
xor
sahf
or
loop
and
leave
insb
jne
out
je
outsb
clc
mov
mov
xchg
jae
popa
pop
out
mov
andb
or
jnp
flds
sahf
xchg
repnz
out
dec
add
jae
movsl
jge
adc
in
mov
xor
test
dec
scas
into
lret
xor
test
xor
arpl
push
push
add
shrb
sub
addr16
xchg
in
lock
sarl
adc
rorl
mov
xchg
les
in
sub
rorb
enter
cmp
mov
scas
mov
fistl
cmp
js
xor
sub
idivb
fdivrs
inc
and
aam
je
jo
inc
add
and
xor
add
aad
dec
xchg
data16
aam
mov
sub
cltd
popf
mov
add
inc
sahf
fsubrl
mov
cld
mov
xorb
mov
push
fnsave
daa
shl
arpl
cli
pusha
mov
icebp
imul
xor
push
inc
mov
in
cld
popa
shl
nop
imul
inc
inc
sbb
ds
or
mov
adc
scas
data16
test
imul
sbb
ljmp
sub
jg
ficomps
ljmp
or
scas
popa
in
scas
and
out
js
push
data16
mov
xchg
cld
push
test
rorb
or
inc
mov
sbb
cmpsl
xchg
dec
adc
rol
adc
lock
adc
xor
stos
push
cmp
xchg
pop
pop
cwtl
push
push
mov
mov
and
sarb
jg
pop
cltd
push
xchg
sub
cmp
int
mov
adc
ret
test
movsb
jp
mov
pop
jb
es
mov
cmp
pop
out
add
sub
push
sti
jmp
pop
cmp
loop
mov
mov
in
sti
mov
mov
mov
mov
push
addr16
adcb
std
test
inc
dec
mov
leave
xchg
das
pop
inc
loop
xor
hlt
jo
addb
or
mov
xor
das
adc
jo
in
movsb
aam
adc
jbe
leave
mov
cmpsl
int3
sbb
stos
lret
aaa
aas
outsb
cld
dec
mov
push
je
repnz
push
add
adc
xchg
sub
mov
cmp
sbb
sahf
adc
lods
mov
inc
sbb
stos
adc
in
out
in
pop
pusha
lods
rclb
dec
or
imul
in
jbe
movsl
push
ficoml
push
mov
pop
dec
jle
adc
out
inc
dec
push
in
enter
xchg
dec
int3
test
xchg
sub
int3
cmc
and
xor
dec
ret
sub
clc
add
js
xchg
add
and
loop
sbb
mov
mov
push
adc
mov
das
cltd
data16
roll
orl
inc
adc
or
aaa
xchg
sub
xchg
mov
xchg
xchg
into
mov
sbb
int3
insb
cmp
loopne
popf
mov
mov
aas
cmc
xchg
test
or
jno
jno
jns
rolb
bound
jecxz
sub
rclb
push
test
subl
xchg
jbe
ljmp
mov
cwtl
lods
aaa
out
add
push
and
adc
dec
hlt
out
int3
push
aam
mov
xchg
xor
and
push
bound
mov
sahf
fnsave
cwtl
mov
sub
jae
jle
and
and
test
fldt
ds
add
in
pop
lea
vmovd
inc
sbb
xor
lds
and
cmp
popf
push
sbb
dec
mov
inc
fisubl
and
cmp
ds
fbld
hlt
movsb
or
loopne
pop
mov
jo
xlat
sub
jne
dec
push
jns
mov
movsb
je
mov
shl
mov
imul
ffree
je
movsl
sub
mov
sbb
ret
push
and
in
aad
movsb
imul
sub
add
xchg
ficomps
pop
sahf
cli
test
or
xor
sub
jecxz
out
fadd
ds
pop
pop
jg
mov
fnsave
enter
addr16
sbb
pop
push
push
addr16
into
jle
jle
jg
mov
stos
mov
sahf
in
push
shrl
mov
aas
lahf
rep
push
cmp
jecxz
mov
mov
add
push
mov
inc
mov
mov
mov
lahf
mov
repz
fcomip
dec
aas
push
les
dec
fiaddl
sbb
lret
call
lds
ja
test
outsb
fisubs
shl
sti
sbb
push
outsl
dec
pop
mov
je
inc
imulb
mov
push
sub
sbb
push
sub
fnstsw
pop
aam
shl
test
lahf
popf
mov
xchg
in
mov
into
mov
mov
cs
mov
pop
test
idiv
gs
sub
push
cmp
scas
cli
add
jl
xchg
mov
push
xchg
dec
cmc
rcrb
leave
call
ffree
jb
int
pop
or
push
mov
sarl
ljmp
push
push
jle
mov
mov
sahf
ds
in
test
dec
pop
mov
rorb
lock
lock
push
inc
shll
jne
and
add
pusha
mov
in
fadd
jmp
sbb
sub
jle
push
xor
out
faddl
and
push
repnz
push
mov
out
in
in
aam
in
xchg
repnz
push
divl
sahf
xor
cmp
int3
popf
in
push
es
mov
push
inc
jnp
gs
aam
iret
daa
outsb
add
int
jne
sub
push
into
inc
pop
aas
xor
sbb
add
popa
inc
pop
je
mov
les
or
dec
mov
loopne
lea
es
in
insl
fs
lea
xor
sbb
rorb
imul
dec
mov
into
pop
sarb
push
int3
lods
push
outsb
xlat
pop
adc
imul
xchg
xchg
jne
loope
in
mov
mov
lods
daa
inc
out
mov
rorb
mov
out
cltd
fdivrs
jae
ret
push
ss
sub
mov
push
mov
aaa
jge
jg
loope
or
xor
cld
xchg
xchg
mov
hlt
shlb
fwait
sahf
push
fisttpll
dec
gs
mov
mov
mov
mov
sub
divl
mov
psubsb
pop
cmp
rcrb
testb
hlt
dec
leave
hlt
cld
lods
mov
xchg
rol
es
aam
xchg
cld
sub
push
rcrl
imul
into
imul
push
dec
xorl
mov
aaa
andb
pushf
outsl
lods
bound
sub
mov
arpl
jmp
hlt
leave
clc
xor
leave
je
hlt
sub
xchg
mov
xchg
pop
mov
push
or
jmp
js
call
pop
imul
fstps
fimuls
lret
adc
cmc
jo
mov
inc
mov
mov
jp
pop
push
jae
dec
daa
add
push
sarb
mov
loop
pop
xchg
jb
add
aaa
into
repnz
inc
lret
jle
repz
xor
sub
cmc
aam
movsl
sbb
shr
mov
stos
xor
mov
adc
or
xchg
inc
mov
lods
cmpsl
es
inc
fsubrs
and
lods
jecxz
divb
xor
jne
mov
out
jnp
jle
ror
pushf
int3
in
xor
lds
mov
cmp
or
xchg
sub
and
jl
cmp
insl
sbb
pop
test
jmp
pop
dec
push
mov
xchg
sub
and
pop
add
jecxz
mov
fisubl
jecxz
mov
leave
mov
call
dec
xchg
stc
stos
jmp
out
and
xor
push
sbb
push
jecxz
add
push
mov
sub
sbb
movsl
les
mov
out
std
mov
adc
out
insb
cmpsb
cmp
addr16
jne
sbb
jae
leave
or
cli
inc
adc
and
sub
or
push
bnd
or
mov
inc
fwait
loop
lds
mov
mov
sar
cmp
arpl
insb
repz
push
arpl
in
jnp
fcoms
xor
cmpsl
jns
fsubl
cwtl
rcr
test
jae
arpl
mov
pop
or
testb
ficoms
in
into
repz
adc
xor
mov
cmp
xlat
pop
scas
sar
stos
cmp
push
in
push
and
or
jne
xchg
popa
out
sub
movsb
inc
movsb
xor
xor
jno
cmc
jl
and
int3
fildll
cmp
or
sbbb
sti
divb
mov
xlat
mov
xor
mov
pop
dec
icebp
mov
loop
push
cmp
and
dec
lods
stos
pslld
jle
into
xchg
inc
mov
stos
mov
call
rcll
test
stc
sbb
or
bsr
mov
sahf
push
dec
push
fbld
stos
dec
fists
fiaddl
scas
cmp
ret
adcb
arpl
cli
outsb
int3
lcall
inc
js
aas
aam
jb
arpl
lret
sub
repz
repz
das
add
cmp
sysenter
int3
fldl
push
mov
xor
aas
jp
xchg
out
dec
jmp
or
sub
js
dec
jno
mov
stc
pop
cmp
xchg
outsb
sbb
scas
dec
lcall
push
fwait
loopne
adc
push
out
push
ljmp
mov
dec
inc
pushl
jp
bound
mov
gs
cmp
or
sub
add
xorb
pop
adc
xor
xor
jne
loop
push
fcomps
call
movsb
dec
ret
es
in
jmp
fistps
pop
sbbb
push
icebp
fdivr
dec
pop
cwtl
iret
sti
mov
pushf
pusha
add
mov
mov
xlat
add
repz
je
mov
adc
push
pop
mov
mov
mov
js
or
and
mov
outsb
push
push
mov
cld
jmp
and
ja
xor
add
lods
xor
add
pop
fnstsw
shrl
popf
push
or
cmpsl
lock
mov
mov
or
js
adc
mov
les
iret
dec
popa
ljmp
mov
lods
push
add
lcall
jecxz
es
dec
and
divb
pop
pop
jns
stos
mov
add
inc
in
mov
shrb
aam
cmpsl
out
or
cwtl
movsl
movsb
leave
iret
test
cli
lds
stc
jns
aad
and
inc
aaa
push
les
jb
dec
mov
and
out
push
mov
mov
cmc
outsb
sbb
in
inc
xchg
push
incl
xchg
jecxz
in
xchg
pop
je
xchg
dec
push
mov
das
sub
cmp
pushf
cmp
and
mov
xor
cmp
rcrl
mov
fs
adc
inc
aas
mov
sbb
ret
jbe
cmp
inc
ret
and
insl
xchg
and
test
and
xchg
cmp
fcmovbe
lcall
sbb
int3
fs
fnsave
loopne
and
jbe
or
bound
cmp
sbb
and
lds
push
andb
mov
dec
pop
mov
aad
out
or
test
adc
cmp
push
in
int
xor
pop
dec
push
sub
and
adc
sbb
ja
in
xchg
aaa
jge
pop
push
xor
ja
sub
leave
or
pop
lea
push
filds
mov
hlt
repz
or
pop
cmp
mov
aad
aaa
push
jae
adcl
outsl
repz
testb
insl
pop
aad
insb
das
jnp
rolb
inc
js
adc
fs
sbb
or
sbb
xchg
adc
adcb
dec
pop
pop
mov
and
inc
popa
ljmp
mov
ja
clc
lock
test
inc
xchg
les
icebp
push
inc
xor
iret
jp
subl
in
stos
dec
mov
xchg
jg
and
ja
mov
adc
mov
pusha
jo
and
jmp
add
adcl
les
test
scas
sbb
test
addl
loope
dec
je
xchg
jmp
addr16
mov
sub
dec
pop
cmp
incb
test
out
pusha
ds
xor
dec
into
and
mov
cltd
or
cld
pop
xchg
movsb
jl
jae
mov
jl
add
cs
dec
xchg
subl
in
add
loopne
cmp
xor
push
push
imul
xchg
inc
jo
sbb
shll
adc
nop
or
push
fistpll
dec
jo
cli
roll
pop
xlat
sub
and
sub
das
addr16
leave
xor
pop
adc
jmp
test
mov
jne
pslld
andl
aas
cwtl
stc
xor
fildl
xor
js
push
das
push
mov
push
pushf
repnz
inc
xor
or
add
mov
inc
in
es
cmc
and
jg
mov
test
pop
loopne
ss
fldenv
sub
and
int
scas
pop
jae
sbb
cmc
lods
ret
push
xorb
js
mov
lret
cs
sub
clc
std
addr16
roll
jb
mov
jne
jl
mov
inc
insl
dec
jl
call
jno
std
adc
xor
or
lods
fiaddl
sbb
fcoms
xchg
test
add
das
sarl
fiaddl
test
jp
sub
jp
sbb
xor
scas
into
lret
jl
pop
pop
adc
jle
mov
dec
jnp
and
and
mov
mov
pop
loop
pop
mov
aas
loopne
jnp
lods
shll
fs
lods
xchg
das
cmpsl
rorb
ja
pusha
cmp
sub
mov
mov
add
add
jmp
push
jno
cmpsb
rorl
fnsave
xor
inc
add
loop
cmpsl
fcmovnu
sbb
mov
aaa
fs
outsb
repnz
rolb
addr16
fwait
adc
push
push
mov
add
xchg
pop
mov
hlt
cmp
fldz
xchg
sbb
sub
popf
sahf
or
enter
mov
mov
inc
lret
jg
mov
push
lods
je
mov
test
pop
icebp
ds
stos
pop
enter
ds
daa
mov
aaa
xor
testb
mov
mov
dec
aad
and
out
push
imul
xchg
jne
int3
shrb
inc
rol
pop
inc
int3
cmp
add
push
js
outsl
test
push
pop
xor
xor
xchg
jne
push
sarl
test
loopne
cmp
dec
pop
cmpsl
push
xor
repnz
dec
mov
sbb
lret
xchg
lcall
sti
je
or
push
sub
in
repnz
dec
mov
xchg
xorl
iret
mov
jb
jnp
jnp
sbb
adc
not
jns
jecxz
xchg
js
loope
lock
pushf
mov
ljmp
test
add
xchg
sub
jnp
jae
imul
mov
cmpsb
mov
xchg
mov
dec
icebp
adc
test
sub
adc
sbb
add
stos
ss
sbb
aad
jmp
push
jnp
cmp
data16
fld
lret
and
adc
cmp
push
fs
adc
mov
cmpsl
inc
push
sub
mov
push
into
cs
sub
enter
icebp
jae
lret
jge
addr16
sahf
mov
stos
add
repnz
pop
inc
and
rorb
test
out
mov
in
xchg
leave
test
sbb
aaa
pushf
xor
mov
jb
mov
mov
mov
dec
orl
lods
rorl
sub
hlt
jge
icebp
adc
sub
xlat
lret
mov
xchg
push
int
dec
mov
xor
outsl
loopne
xchg
jnp
pop
cmp
daa
pop
xor
push
sti
jp
xor
decl
inc
scas
inc
movsl
pop
push
xor
cwtl
inc
fistl
sbb
enter
ret
cltd
inc
loop
idivb
dec
lods
mov
cmp
enter
cmpsb
in
lret
shlb
mov
jge
xor
lret
out
pop
sti
sbb
cmp
pusha
fwait
lds
mov
les
jg
adcl
mov
mov
nop
lahf
push
aaa
xor
inc
ret
xchg
out
sub
or
ds
push
mov
inc
adc
punpckhdq
cmc
out
mov
mov
cltd
int
mov
or
and
fmuls
mov
cmp
icebp
jae
loope
jbe
fcmove
lods
ret
mov
pop
lret
xor
ss
dec
nop
fsubs
sbb
inc
out
adc
es
pop
bswap
in
fstpl
push
push
enter
jmp
leave
hlt
mov
add
stc
dec
in
hlt
adc
aas
or
arpl
jo
imul
test
insl
xor
xor
js
rolb
add
repnz
xchg
ds
xchg
das
mov
and
imul
jb
stos
jg
sbb
mov
xorl
inc
add
add
lods
in
lock
ficomps
mov
xchg
jge
add
jb
push
loope
pop
negl
sbb
sub
jmp
call
mov
sub
pop
shrb
pop
popf
fld
jb
inc
loop
lcall
test
sbb
jb
sub
loopne
inc
xchg
mov
sahf
add
push
test
sub
ret
push
add
add
filds
fisubrl
xor
push
mov
jmp
insb
and
data16
es
je
ret
jmp
mov
cmp
add
xor
pop
mov
fs
and
inc
mov
test
push
ljmp
dec
ret
mov
mov
jecxz
or
scas
fnsave
push
cmp
fistpl
xchg
xor
mov
and
cli
mov
pop
mov
inc
push
xchg
ja
insb
pop
mov
pop
cmc
add
inc
sub
pop
scas
push
or
je
sub
pop
andb
sub
pop
out
xor
in
ljmp
or
or
aad
fwait
add
dec
rcr
aas
push
mov
fadds
xor
cmp
or
jb
sub
xchg
shrl
inc
loope
or
leave
xchg
add
cs
loop
ds
and
arpl
dec
xorps
rolb
push
xchg
test
enter
mov
push
jmp
lret
daa
pop
pusha
iret
mov
dec
pushf
lcall
jg
push
cmp
sbb
enter
cwtl
int3
xchg
push
lods
fildll
or
nop
lcall
xchg
dec
lea
add
and
mov
imul
inc
adc
adcb
sub
cld
test
rolb
xchg
mov
push
sahf
outsb
cld
repz
cld
je
mov
jo
add
or
stos
sub
shl
inc
cwtl
fucom
test
or
and
push
push
cltd
xchg
pop
repnz
mov
mov
bound
adc
pop
stos
lret
fidivrs
adc
call
movsb
outsl
inc
mov
fnsave
fldl
inc
aas
mov
dec
pop
fcmove
mov
out
daa
jb
scas
mov
push
and
inc
lea
cmp
add
dec
jbe
dec
cld
xor
and
pop
inc
sar
insb
lret
int
aam
adcl
fisubrs
fidivl
paddsw
xchg
mov
xchg
inc
or
out
movsl
jb
mov
pop
xchg
into
inc
inc
jb
enter
xchg
xchg
clc
adc
test
pop
xchg
add
xchg
add
fcomps
xchg
push
stc
push
mov
xor
mov
adcl
inc
cmpsb
xchg
jnp
cmc
push
push
xchg
cli
push
jge
imul
lahf
leave
jo
loope
lods
in
sub
lock
lea
add
pop
dec
adc
das
push
pop
and
pop
push
dec
and
sbb
imulb
mov
loope
sti
jb
dec
xchg
or
testb
cmp
pop
jmp
aaa
test
shl
test
xchg
outsl
loope
es
inc
fcompl
xchg
shrl
roll
push
ret
and
sub
cld
sbb
fdivr
out
dec
cmp
sub
or
pop
cmc
jbe
mov
mov
sub
jno
js
sbb
ss
xchg
in
sbb
scas
push
xor
cltd
push
lea
rorl
js
fsub
xchg
inc
ja
and
jbe
jne
scas
sbb
xchg
cmp
call
add
mov
adc
imul
mov
bnd
pushf
cmp
data16
jae
inc
ret
daa
adc
mov
jo
call
xor
mov
jae
popf
mov
dec
jecxz
test
sbb
outsb
or
dec
dec
adc
jecxz
pushf
out
das
mov
xlat
adc
fwait
ss
cmp
rclb
cmp
xchg
pop
pop
out
inc
iret
xor
cld
imul
jb
xchg
aaa
and
mov
sbb
sbb
mov
jns
arpl
pop
mov
lret
pushf
mov
xchg
fnstsw
cmp
jns
jo
push
mov
adc
adc
jno
fsubrl
mov
ljmp
and
add
mov
sub
outsl
xchg
aas
sbb
cmp
int3
mov
push
xor
sbb
or
xor
lret
adc
outsl
sub
xor
dec
mov
fstpt
add
mov
add
cltd
jne
ja
xchg
ficoml
aas
jmp
xor
fcompl
mov
xor
cmpsl
xchg
iret
xor
and
xlat
test
mov
pop
inc
add
mov
das
popa
test
cmp
pop
lea
das
sbb
sbb
xchg
sti
dec
mov
mov
lret
jp
pop
shl
ja
mov
nop
stc
mov
sbb
and
aas
fldt
cmp
push
mov
clc
leave
push
popf
xchg
seto
pop
icebp
pop
outsb
xor
es
push
mov
jg
imul
loopne
std
pop
mov
test
jge
or
dec
sbb
rcl
call
stos
adc
imul
leave
pop
and
fmulp
ficomps
mov
sub
dec
xor
scas
or
xor
push
mov
or
add
cld
mov
and
sahf
pop
fistpl
or
push
jo
int3
addl
push
cmp
or
ret
scas
cmp
adc
inc
adc
cmp
jg
lea
pop
popa
and
bound
lahf
fcomip
in
add
push
lahf
push
cltd
mov
fiadds
dec
pop
test
fcoms
shl
cmp
mov
fadds
mov
mov
jle
arpl
fstps
mov
cmc
lahf
jmp
or
mov
nop
pop
jbe
and
subl
mov
pop
dec
xor
shlb
mov
xchg
in
jnp
idivb
cmp
push
xor
outsl
cmpsb
xchg
add
inc
lret
cmc
pop
mov
arpl
imul
pushf
jno
mov
imul
vmovsd
call
dec
dec
push
lds
dec
mov
push
cmp
stos
into
jmp
sub
jecxz
jle
in
xor
stc
xor
inc
sbb
lret
inc
inc
mov
repz
inc
cmp
les
movsb
pushf
enter
fstp
mov
repz
push
loope
xchg
dec
sub
lods
in
inc
sbb
jle
pushf
faddl
or
mov
cmp
push
cs
fsub
mov
imul
std
and
repnz
add
xchg
repnz
mov
push
aad
repz
mov
fstpt
in
and
out
test
out
xor
test
insl
push
push
loopne
cltd
je
mov
jb
xlat
mov
fisubrl
mov
test
sbb
mov
fwait
or
cmp
in
lret
enter
lret
pop
lcall
lds
sub
mov
fstps
leave
jle
mov
lret
ret
xlat
repnz
jp
or
dec
xchg
sti
push
nop
js
lret
pop
shll
cli
sub
into
jne
cmp
xor
push
cmpsb
pop
adcb
mov
push
pop
pop
xchg
sbb
push
adc
loope
dec
or
mov
test
repz
inc
inc
sbb
test
testl
push
jge
data16
sub
push
add
pop
insb
xchg
aam
sub
jb
sahf
repnz
sahf
pusha
clc
sbb
sbb
in
xchg
push
jle
cli
xor
and
imul
nop
cmpsb
mov
sub
leave
sbb
mov
xchg
inc
or
and
shl
mov
mov
in
cmp
jo
ror
inc
mov
pusha
lret
inc
jns
cld
and
mov
jge
and
mov
loop
lea
repnz
loope
push
mov
cmp
pop
cmp
cmpsl
cwtl
push
xchg
jbe
les
mov
out
mov
push
dec
cli
mov
in
test
inc
in
jge
jmp
inc
lret
imul
adc
fwait
inc
fsubrs
ret
fs
dec
inc
insb
mov
std
mov
in
sub
call
adc
pusha
add
popa
pop
fcmovnb
add
xchg
cmp
repnz
sbb
sub
and
int
add
jbe
or
out
lret
cmp
push
mov
mov
inc
xchg
repz
push
daa
ret
clc
push
jmp
inc
dec
push
gs
iret
mov
mov
xlat
sbb
push
mov
shll
pop
incl
idivl
sbb
add
xchg
cmp
push
in
push
inc
and
mov
mov
and
push
push
and
int3
adc
xchg
ds
jp
andb
xchg
push
xchg
pop
mov
cmp
sbb
lea
add
fidivrs
addw
or
jp
scas
cmpsl
fwait
cmpsl
orl
sbb
das
iret
lret
push
into
sbb
popf
popf
ret
mov
mov
push
cld
fcmovnb
cmp
mov
cmc
cmp
or
inc
repz
out
movsb
hlt
hlt
dec
xor
add
mov
mov
dec
int
xchg
and
mov
arpl
pusha
loop
sub
jle
imull
jne
sbb
inc
pop
aam
mov
scas
jnp
inc
dec
ja
add
xor
into
icebp
cmp
dec
lret
clc
dec
mov
ljmp
and
lea
stos
lds
iret
mov
mov
sarl
test
push
pop
inc
mov
pusha
faddl
lea
cld
cmp
mov
ja
mov
fadd
pusha
pushf
rorb
pop
sub
xor
inc
pop
imul
xor
jp
cmp
pop
sub
sub
cmp
mov
aaa
daa
xchg
xchg
dec
pop
sbb
and
pop
lods
xor
and
sbb
cmp
lds
dec
or
test
cld
dec
dec
or
negl
shrl
inc
aas
ret
mov
std
shl
cmp
shl
repz
pop
pop
xchg
jno
jmp
adc
xor
adc
adc
fdivl
xor
fs
xor
inc
pop
data16
movsb
xchg
pop
clc
lds
ljmp
pop
jg
das
adcl
or
cmp
inc
mov
repz
les
js
sub
xlat
ret
mov
stos
mov
xorb
mov
mov
dec
or
rolb
mov
int
xor
xorb
mov
and
pop
in
xor
icebp
out
adc
sbb
cs
sti
pop
push
test
push
dec
jns
popf
sbb
cmp
hlt
mov
iret
sub
das
inc
push
push
add
shlb
sbb
enter
loope
enter
repnz
pop
into
inc
pusha
jns
test
ficompl
ficoml
ds
les
outsb
enter
push
ss
pop
mov
pushf
cltd
jle
mov
cmp
sti
dec
mov
sub
inc
mov
enter
adc
faddl
loopne
test
ret
mov
popa
ja
pop
mov
rcrl
imull
xchg
ljmp
mov
xchg
xchg
mov
dec
ja
sbb
xor
adc
mov
loope
fists
sarb
mov
pop
xchg
xchg
mov
push
adc
dec
mov
cmp
test
xchg
jbe
pop
sbb
adc
or
sti
loopne
add
pop
pushf
notb
pop
popa
iret
sbb
sahf
mov
xchg
fsubrl
adc
mov
mov
in
jns
mov
lea
repz
or
lea
nop
and
int3
jb
and
cmpb
dec
sbb
add
bnd
imul
and
mov
scas
andl
sbb
and
jmp
dec
in
dec
out
inc
or
gs
negl
aaa
pop
xor
sbb
xchg
pushf
lret
addr16
leave
add
add
xchg
ror
dec
pop
scas
add
fists
mov
rcl
das
inc
pop
mov
testl
push
dec
arpl
ljmp
ret
add
arpl
aam
or
shll
push
mov
std
loopne
inc
je
hlt
mov
dec
pop
or
push
rorl
pop
jge
dec
add
push
sbb
push
test
push
jbe
mov
fildl
rcl
pop
xor
rorb
negl
push
in
outsb
jmp
mov
std
xchg
xor
jp
add
fcmovne
and
int
mov
sub
inc
popa
add
xchg
out
and
push
xor
push
mov
mov
cmp
and
daa
cwtl
mov
xor
jg
and
mov
add
les
jp
lret
test
test
dec
push
mov
loope
xor
adc
ret
imul
mov
cmp
fidivl
in
or
pop
jne
movl
xor
jae
inc
stc
ret
sbb
xchg
inc
mov
cmp
fucomp
loopne
pushf
cmp
aas
call
add
fucomp
add
cmp
movsl
pop
inc
mov
mov
dec
mov
mov
adc
stos
inc
test
lcall
sbbl
fidivrs
pop
sbb
in
xchg
add
mov
mov
pushl
xchg
cmpps
ret
dec
cld
call
js
add
mov
sbb
and
mov
mov
jmp
pop
icebp
addb
xchg
xchg
xchg
sbb
dec
mov
push
sub
insb
stc
mov
xchg
adc
lock
mov
fsts
lcall
fnstenv
mov
xchg
test
out
mov
roll
icebp
push
fildll
icebp
rcr
push
mov
aam
and
mov
mov
bnd
inc
and
and
test
pusha
push
mov
xchg
xlat
dec
mov
insb
sub
int3
out
subb
dec
in
sub
jp
inc
scas
stc
stos
in
push
lea
mov
jg
xchg
adc
pop
stc
scas
enter
je
xor
mov
inc
or
or
int
ret
pop
hlt
pop
lea
popa
sbb
into
sarl
dec
cmp
mov
movsl
mov
mov
add
sar
dec
xchg
outsl
fidivl
movsl
or
ds
mov
addl
negb
sub
insl
cmp
pop
pop
aam
lcall
cmp
mov
mov
cmp
ret
inc
outsl
mov
popf
cmpsl
jg
push
adc
cli
out
fadds
icebp
mov
aaa
mov
data16
xor
xlat
pop
mov
cmp
push
add
jb
insl
mov
jnp
jns
and
out
inc
xchg
lcall
divb
sub
out
cmc
fistl
xchg
push
data16
jp
shrl
out
inc
loop
mov
jge
dec
push
pop
pop
out
xor
div
stos
fiaddl
roll
dec
aaa
add
stos
mov
or
pop
loop
shll
dec
jnp
mov
fdiv
cltd
cmp
lods
and
mov
sub
insb
sub
push
outsl
js
hlt
out
jo
repnz
fcomps
xor
push
ds
or
stc
jnp
xchg
rorb
jb
push
call
or
gs
sub
mov
loopne
dec
fimull
sbb
or
lret
imul
fisubrl
add
loop
fwait
dec
mov
jae
clc
adc
outsl
adc
mov
cmp
in
sbb
int3
or
in
push
mov
mov
add
push
pop
xchg
into
cwtl
repnz
lock
mov
fwait
js
dec
pop
inc
cmpsb
cmpsl
xor
dec
add
out
lods
call
mov
insl
jg
pmullw
hlt
mov
lods
pop
ja
xchg
push
dec
cwtl
mov
fs
pop
hlt
shll
aas
cs
cmpb
push
cmp
pop
sbb
sti
xchg
cwtl
xchg
push
pop
ljmp
fiadds
sti
dec
daa
mov
stos
pop
pop
pop
xchg
lahf
subl
xchg
repnz
mov
pusha
imul
dec
cmp
repz
mov
bswap
enter
mov
inc
cmp
mov
xchg
sbb
lahf
sbb
or
imul
lahf
push
je
mov
mov
mov
cmp
adc
sbb
insb
cmp
xchg
shlb
loope
xor
mov
jge
cli
ljmp
jno
xchg
dec
movsl
inc
lods
and
loopne
push
rcr
sahf
testl
sub
mov
push
std
cmpsl
std
dec
pop
loopne
jge
xchg
movsl
add
pusha
xchg
cmp
or
orb
xor
lods
and
add
stos
mov
cs
outsb
mov
xchg
dec
adc
scas
xchg
subb
test
add
inc
xor
sarl
jp
outsl
js
movsb
mov
xchg
inc
xor
push
xchg
pop
cmpl
rcrb
iret
mov
mov
idiv
cmp
dec
rcrb
cs
and
adc
rorb
jne
int3
lcall
test
xor
leave
das
inc
bound
sbb
push
lock
adc
xchg
or
cli
mov
outsb
mov
sbb
shrl
addr16
outsb
aam
dec
sub
test
rolb
jle
mov
mov
scas
js
divl
loopne
rcrb
add
inc
int3
dec
aaa
arpl
jg
and
shlb
xor
out
push
inc
xchg
loope
dec
js
push
mov
mov
mov
pop
rcl
xor
jns
gs
mov
add
jbe
jae
in
dec
mov
call
add
pushf
sbb
mov
jne
dec
fisubrs
xor
aaa
push
pushf
inc
mov
xchg
mov
mov
movsb
mul
xor
les
mov
popl
loope
mov
nop
test
adc
xor
shlb
xchg
push
sar
int
or
xchg
cmp
adc
xor
pop
sub
or
fcompl
pushf
inc
shr
jle
cli
add
mov
and
in
ds
adc
add
sub
jp
adc
hlt
int3
push
pusha
loope
testb
or
int3
push
dec
lds
into
call
add
jae
mov
jo
scas
xor
add
push
inc
outsl
fisubs
mov
push
sbb
jl
into
mov
push
int
mov
inc
aam
les
adc
mov
xor
xor
or
mov
dec
jmp
jnp
leave
sbb
adc
adc
dec
aad
mov
pop
cmp
scas
enter
nop
arpl
inc
pop
mov
test
jmp
push
xchg
or
jmp
cs
add
xchg
out
lret
mov
mov
push
popf
adc
or
cmpsb
pop
out
and
sbb
ljmp
dec
int3
aad
pop
test
iret
mov
jb
mov
push
xchg
jne
lcall
mov
xchg
outsb
test
ret
cmc
mov
stos
call
push
fnsave
daa
test
or
inc
push
loope
adc
cmp
cmp
and
jge
test
out
inc
int3
mov
mov
mov
sub
loope
xorl
aam
pop
repz
outsl
rolb
out
ds
loope
popf
mov
or
imul
fdivs
ret
popa
xor
sub
add
push
xchg
cmpl
ss
bound
xorl
pop
add
push
mov
daa
iret
dec
mov
cmp
or
adc
jecxz
and
dec
xchg
call
mov
outsl
jo
jl
cmpsb
ret
sub
adc
aas
jne
scas
popl
repz
lea
adc
jmp
dec
mov
leave
push
sahf
mov
or
in
jns
cli
jbe,pn
pop
xlat
pop
mull
stos
mov
mov
or
push
dec
sub
pop
mov
pop
insb
jp
jmp
je
je
repz
imul
cmp
aas
movsl
push
xchg
mov
ret
push
xchg
add
sbb
filds
nop
push
call
int
adc
lret
test
jl
fldt
sbb
fmuls
mov
jle
pop
add
xor
pusha
sbb
jge
mov
fisttps
imul
pop
jnp
jns
loope
sbb
or
call
xor
fadd
mov
xor
add
mov
imul
jb
mov
mov
stos
xor
sub
stc
add
aad
adc
push
jae
push
fistps
adc
imul
les
cmp
push
dec
call
pop
ss
sbb
icebp
stos
lods
ljmp
mov
out
jnp
sbb
movsl
or
shrb
sbb
cmc
mov
or
mov
sti
adc
and
add
mov
into
test
cmp
das
popa
ficompl
pop
dec
pop
rcrl
cmc
movsl
shrb
in
repz
cmp
mov
jp
cmp
inc
or
dec
push
jnp
fisttpll
in
mov
add
popa
imul
lcall
cmp
daa
sarl
xor
adc
imul
push
mov
out
mov
clc
xor
cli
outsl
mov
dec
dec
adc
push
popf
insl
fmuls
lea
das
loop
repz
in
pusha
pop
loopne
or
xlat
push
int3
outsl
xchg
stos
fnstsw
ficompl
in
outsl
test
outsb
mov
mov
dec
fnstcw
scas
stc
pop
in
clc
pop
xchg
out
aad
jg
loope
inc
stc
arpl
cmp
jp
stos
adc
or
sbb
and
in
mov
divl
mov
mov
jo
out
clc
cmp
nop
gs
in
jb
and
daa
sbb
cmp
jbe
aaa
adc
xor
jge
sbb
lea
das
int
xlat
mov
jp
add
daa
jb
popa
sbb
pushf
ss
loop
mov
dec
fcomps
in
dec
add
sub
roll
dec
push
lock
pop
pushf
pop
dec
mov
popa
out
cmpsl
call
jecxz
test
cmp
xor
pop
mov
sbb
lods
int3
in
por
adc
mov
out
notb
mov
cwtl
scas
mov
cmp
arpl
cmp
mov
mov
lds
cmpsb
iret
fldt
mov
ret
adc
movb
push
jp
or
push
sbb
je
jns
sub
scas
mov
cmp
test
scas
sahf
adc
adc
or
xchg
fdivrs
sub
mov
push
ljmp
and
outsb
call
jmp
in
js
mov
mov
jns
add
add
inc
popa
out
out
pop
cwtl
and
scas
js
js
jbe
xchg
loop
outsb
stos
ficompl
adc
mov
test
adc
cmp
loop
lcall
inc
mov
sahf
jl
lret
imul
or
aaa
pop
in
and
mov
filds
aaa
ret
push
in
lds
mov
inc
shrb
fcmovne
negb
xchg
cltd
sbbl
inc
unpcklps
mov
sbb
jl
iret
jne
clc
cs
loopne
xorl
lods
cmpsb
add
or
xor
or
push
jp
mov
aas
mov
jnp
pop
imul
cmp
cmp
push
and
cmp
and
std
and
push
dec
jle
add
sub
jecxz
frstor
aaa
push
adc
pop
aaa
repnz
data16
insl
jnp
dec
fldl
and
std
pop
adc
inc
mov
clc
pop
dec
pop
into
lret
push
mov
fisttpl
in
pop
in
add
pop
inc
filds
repz
int3
pop
dec
scas
dec
inc
jg
fsts
mov
test
mov
into
lret
idivb
sbb
lret
sarb
push
shrb
xchg
sbb
fs
mov
outsl
pop
pop
ror
test
inc
leave
loope
outsl
sbb
push
sti
cwtl
jmp
mov
lcall
add
sub
push
scas
int
inc
sub
repz
xchg
scas
test
loop
cmp
fistps
jmp
mov
sbb
ds
jl
or
adc
cmc
cmp
xor
sub
jmp
pusha
lods
jo
mov
xor
or
and
out
mov
into
or
dec
jge
cmpsl
xchg
cltd
lahf
mov
inc
mov
mov
popa
scas
js
notb
pop
sub
mov
sahf
nop
or
notb
je
add
jbe
mov
add
jg
dec
xor
pushf
push
js
jle
cmp
adc
imul
outsl
and
xor
arpl
xor
nop
loop
or
les
mov
jno
xor
xchg
js
out
in
mov
leave
sbb
bound
pop
test
xor
nop
test
nop
cld
int3
or
leave
sub
lock
sub
addr16
loope,pn
sbb
xor
ljmp
jo
cmp
pop
stc
fwait
in
lret
mov
mov
push
cmp
mov
shlb
sub
add
out
adc
mov
stc
cmp
mov
xchg
jle
or
icebp
xchg
movsl
adc
push
test
cli
sar
xlat
or
scas
rcrl
push
inc
lahf
movsl
jns
enter
loope
dec
lea
or
or
and
mov
add
js
int3
xchg
pop
mov
lods
cmp
push
mov
lods
jno
xor
pop
dec
mov
add
mov
cmp
dec
pop
jle
add
xlat
faddl
mov
sbb
cmp
lahf
dec
dec
cwtl
jbe
xor
jnp
and
repnz
and
mov
sbb
xor
lods
xchg
imul
loope,pt
sbb
outsb
cmpsl
sbb
dec
mov
jp
dec
rcll
lds
imul
mov
jp
popa
dec
pop
arpl
jmp
pop
jg
pop
mov
popa
test
mov
push
dec
mov
mov
add
iret
jecxz
scas
data16
adc
mov
jo
movsb
cltd
mov
scas
call
mov
push
ret
jg
roll
sbb
or
aam
cmp
out
lcall
clc
ret
cmpsl
mov
jo
les
dec
pop
mov
cmp
sub
add
sbb
xchg
inc
data16
decb
popf
inc
dec
scas
scas
xchg
enter
inc
pop
push
ret
cli
imul
scas
sti
jecxz
pop
imulb
jl
das
inc
sub
cmp
jmp
mov
or
out
outsb
cmpl
fisttps
push
dec
jae
push
clc
mov
or
stos
cmpsl
in
fsubrs
test
sub
stc
rcr
or
mov
push
mov
icebp
push
dec
lods
repnz
fstps
mov
or
mov
movsl
cwtl
add
or
cmp
filds
push
out
add
adcl
or
jge
inc
cmp
andl
dec
cmp
sub
sbb
add
orb
xor
testb
not
xor
mov
mov
and
push
ss
cltd
cmpsl
pusha
imul
or
outsl
out
jnp
jo
and
mov
mov
push
sub
xor
orl
xor
sbb
into
dec
or
inc
sub
sub
jno
test
xor
test
jmp
push
bound
cmp
cmpsb
dec
pop
xchg
into
in
mov
sub
and
cmp
in
leave
cltd
cmc
aas
xchg
mov
imul
punpcklbw
add
cld
outsb
jns
inc
inc
mov
sbb
mov
lcall
sbb
leave
outsb
fidivrs
out
ja
cmp
cmp
sbb
jae
roll
dec
aas
imul
movsb
adc
mov
mov
daa
cmp
pop
fidivl
dec
sub
fcomip
fcmovnb
in
push
loop
scas
mov
xor
mov
pop
dec
push
ja
inc
jecxz
mov
pop
test
cmp
mov
mov
outsb
jg
shl
shrl
pop
push
fstl
sub
dec
pop
jb
push
ljmp
sub
add
mov
mov
loop
out
pop
cmp
dec
movsl
sub
cmpsb
pushf
add
ja
scas
dec
xchg
cltd
push
pop
mov
xchg
lods
jge
inc
leave
dec
test
fst
int3
cltd
mov
test
sbb
aas
push
rclb
dec
jae
xlat
mov
repz
jmp
dec
adc
pop
mov
mov
sarl
cld
shlb
pop
cmp
test
fwait
in
stos
xor
arpl
scas
or
mov
sahf
dec
jns
jnp
xor
dec
inc
stos
repz
jle
jl
jo
xchg
lods
adc
cli
dec
inc
inc
push
dec
adc
xchg
mov
repz
push
insl
pextrw
mov
cwtl
push
push
mov
cli
dec
sub
leave
xchg
sub
mov
jo
mov
sahf
outsb
pop
inc
sub
fbld
inc
jne
sub
mov
jmp
divl
xchg
jecxz
sub
mov
adc
mov
inc
mov
inc
mov
shr
enter
fiadds
cmp
inc
aas
lock
cmpsl
mov
xor
or
pop
repnz
mov
shlb
xchg
filds
mov
ret
push
int3
scas
jmp
add
xchg
add
jmp
inc
jbe
inc
mov
imul
pop
out
or
fcmovb
xchg
sub
ja
lods
pop
leave
loope
stc
mov
xor
int3
inc
out
int
out
daa
add
les
je
add
mov
call
mov
mov
pop
mov
lods
insl
cltd
cmp
xchg
or
xchg
pop
popa
imul
xchg
fldt
pop
push
rcl
test
push
dec
loopne
add
loope
mov
dec
push
out
adc
push
adc
scas
dec
add
cwtl
in
inc
pop
sub
sub
cld
ja
pop
jb
xor
movsb
xor
mov
iret
mov
stos
shlb
and
shl
icebp
cmpsl
fimull
sbb
js
sar
jle
mov
es
gs
js
cmp
bnd
jmp
mov
int3
ds
xchg
das
jp
sbb
sahf
test
sbb
xor
fbstp
push
pop
add
arpl
shrd
xor
ss
ljmp
daa
repz
push
and
aas
lock
addb
fincstp
sahf
test
mov
add
cmp
push
je
in
test
lahf
test
test
iret
stc
push
mov
lret
adc
adc
sbb
outsl
cs
pop
mov
in
fisubl
lret
neg
jl
mov
and
movsl
jmp
add
adc
bound
sti
or
pop
push
sbb
pop
or
pop
aam
sub
sub
hlt
pop
mov
sarb
ret
mov
pop
jl
xorl
movsb
call
stos
ja
xor
pushf
call
in
stos
xor
xor
out
mov
sub
negb
stos
aad
sub
push
mov
sbb
jl
out
push
jbe
fsubrs
push
or
movsb
int
xorb
pushf
cmp
imul
or
mov
adc
add
mov
ljmp
pop
mov
popf
ds
jmp
mov
aas
sbb
lock
in
or
repz
js
popf
sub
icebp
sbb
cwtl
enter
cli
sbb
mov
jp
addr16
cmc
xor
lahf
enter
hlt
loop
xchg
mov
mov
inc
sarb
mov
leave
notl
pop
stos
lds
iret
js
or
sbbl
lahf
xchg
dec
popa
roll
push
pop
das
lods
mov
cmc
mov
mov
enter
dec
jo
fsubl
mov
movsb
addr16
jae
test
mov
push
test
ret
repz
jp
pop
ss
ficomps
xor
pop
gs
ss
sahf
adc
test
stc
in
out
mov
mov
icebp
and
movsb
and
sbb
packuswb
cmp
mov
hlt
fisttps
leave
lret
cmp
cmpsl
test
and
cld
jg
push
lret
jp
pop
inc
push
nop
fnstenv
loope
sbb
pop
push
dec
loopne
je
mov
or
mov
inc
hlt
lret
outsb
jmp
and
cmp
imul
ret
xchg
jecxz
jle
inc
push
pop
mov
pushf
push
in
xchg
adc
adc
dec
loope
cmp
inc
sub
jmp
xor
out
out
mov
cli
popf
ja
or
cmp
call
xchg
stos
ja
mov
lret
es
pop
shll
jns
test
lcall
push
aad
inc
aam
sub
dec
lods
aam
sbb
jb
push
mov
arpl
test
movsb
push
ret
shll
mov
sbb
hlt
and
scas
out
or
movsb
or
jmp
icebp
std
and
mov
cmpsl
addl
outsb
push
sub
fistpll
inc
xor
orb
cmp
clc
xchg
dec
mov
cmp
xor
mov
mov
or
pop
lock
sbb
jno
les
push
test
xchg
stos
xor
fucomp
adcl
and
add
xor
mov
jo
gs
mov
jl
fldcw
fistl
scas
push
adc
movsb
adc
jb
add
scas
sub
sahf
inc
add
movsl
sahf
es
jle
cwtl
or
ret
idivb
int
out
je
in
cmp
dec
loope
mov
mov
and
add
sbb
test
icebp
xor
cmp
cmpsb
cs
cmp
xor
dec
pop
mov
xchg
test
pop
sahf
inc
pusha
mov
fdivrl
xchg
mov
sbb
sbb
mov
mov
xchg
leave
adc
cmp
mov
lds
push
adc
xchg
push
les
sub
push
pop
bndstx
mov
fucom
push
aaa
hlt
mov
imul
mov
push
jns
mov
and
ss
mov
and
inc
decl
pop
in
mov
mov
dec
js
and
ret
jns
mov
mov
push
pusha
push
push
xchg
and
test
xor
jp
dec
xchg
and
pop
mov
lods
jns
arpl
aad
add
iret
jg
inc
xchg
ja
cmp
xchg
insb
test
pop
cmpsl
push
hlt
shll
jnp
fdivp
lds
sub
clc
sbb
out
notl
push
stc
sub
testb
cmpsl
mov
ss
out
in
mov
mov
in
add
lock
jp
xchg
jne
add
mov
fs
sub
outsb
cmpsl
pop
andb
les
adc
push
das
push
in
add
add
xchg
adc
mov
mov
jnp
stc
loop
cs
mov
cmpsb
sarb
xchg
cmp
cmpb
xchg
fs
xchg
test
adc
xor
loop
stc
and
test
xchg
jl
add
out
data16
sub
jbe
jb
int3
cs
add
adc
movl
pop
pop
xchg
in
mov
adc
jl
mov
fldl2t
shll
inc
add
xchg
pop
stos
inc
and
into
int3
jmp
or
dec
lds
icebp
push
out
imul
repnz
inc
stos
int
jo
je
pop
fistl
cmpsb
ljmp
stos
lds
int3
popf
sahf
and
outsb
pop
sbb
inc
into
push
xor
mov
xlat
ret
push
aam
inc
das
adc
push
sbb
icebp
sub
pop
add
pop
mov
xchg
jge
lods
jae
cmpb
pop
je
cmp
notl
stos
mov
cmp
xor
jg
sub
or
push
push
imul
pop
outsb
enter
inc
xchg
and
xchg
and
adc
and
cmp
aad
xor
mov
outsb
xchg
push
stos
adc
xor
aam
movl
and
ss
imul
outsb
popl
je
jne
mov
sub
add
cmp
std
pop
sub
mov
dec
lret
mov
insl
cmp
inc
xchg
in
and
add
mov
jmp
xor
fwait
jnp
ds
xchg
in
dec
or
mov
or
into
test
xchg
dec
jl
push
add
mov
jb
sbb
movsl
adc
testb
sahf
or
push
mov
jle
aas
fisttps
xchg
xor
add
shll
xchg
sub
dec
adc
mov
ljmp
push
adc
jp
aaa
xor
or
push
mov
js
xor
sbb
sbb
outsl
mov
pop
jnp
jbe
mov
and
sbb
fcoml
stos
jo
cld
iret
mov
dec
xlat
and
test
pop
adc
push
push
repnz
sub
lret
lahf
mov
mov
daa
mov
insl
rcrb
mov
cltd
pop
insb
jmp
mov
cwtl
jne
pop
fwait
and
inc
xchg
pop
sub
or
mov
ret
cmp
or
xrelease
lcall
cwtl
dec
daa
insl
je
pusha
sub
out
adc
stc
ja
stos
mov
xchg
cwtl
aad
negb
xor
icebp
in
sub
je
shr
inc
push
fistpl
scas
loop
out
inc
movsl
xchg
popa
inc
mov
mov
xchg
mov
add
fbld
enter
xor
pop
mov
lcall
ret
fldl
popa
sub
mov
inc
jl
je
push
ret
decb
cwtl
int3
sbb
popf
xor
and
jns
movnti
cmpb
ror
addr16
dec
or
inc
cld
mov
popf
xor
mov
jne
movb
sub
jno
aaa
mov
mov
cmp
xor
jae
scas
int3
jbe
or
out
inc
cmp
mov
add
and
repnz
js
and
dec
dec
lds
mov
es
ds
mov
stc
paddq
aad
daa
or
jp
decb
aaa
imul
js
repz
loop
adc
pop
out
mov
and
mov
cs
sahf
mov
sub
push
pop
pop
jecxz
ror
mov
dec
jo
movsl
adc
popa
jae
push
in
test
out
jno
les
mov
jnp
test
jbe
hlt
sub
test
sbb
pop
loopne
cmc
clc
adc
test
ds
add
mov
int3
std
lret
sub
xchg
insl
test
push
mov
sub
xlat
test
into
mov
push
lods
leave
sub
jae
jle
iret
sti
push
and
mov
pop
cld
jmp
out
add
sbb
test
dec
mov
lahf
rcll
push
out
xchg
adcb
sbb
and
aam
or
mov
mov
scas
xchg
cmp
ss
or
cmp
xchg
and
fstpt
push
inc
insl
lds
stos
arpl
mov
push
push
jbe
mov
jbe
les
lods
xchg
sub
dec
loope
mov
ljmp
pop
or
loope
pop
mov
or
sub
cmp
ds
mov
add
mov
addb
test
sysenter
sbb
sbb
mov
outsb
inc
aam
lret
iret
jbe
mov
mov
in
push
adc
sbbb
cmp
adc
jge
ss
push
imul
or
add
xor
adc
mov
xor
jmp
sbb
xor
clc
mov
jle
fdivr
sbb
jg
fsubrl
xchg
dec
adc
xor
mov
inc
out
sahf
mov
dec
std
gs
jecxz
push
mov
push
scas
mov
aas
mov
repz
outsl
bswap
ret
aad
lahf
ret
push
inc
iret
sub
pop
xchg
mov
stc
dec
dec
dec
mov
aam
cmp
mov
push
dec
or
mov
test
and
push
popf
adc
cld
adc
pop
sub
sbbb
xor
mov
sbb
in
lods
xchg
psraw
ljmp
out
out
scas
fsubs
fistpl
xlat
lret
mov
out
mov
into
add
dec
out
xchg
lret
mov
popf
cmp
sbb
rcrl
cmp
adcl
mov
loop
dec
insl
popa
mov
and
sbb
shr
add
push
repnz
insl
and
pop
adc
and
or
pop
mov
cmp
push
pop
dec
push
leave
ds
orl
mov
icebp
xchg
jo
cmp
test
mov
pop
and
je
xchg
icebp
iret
xor
lds
cmpb
nop
adc
push
sub
loopne
icebp
pushf
daa
popl
mov
mov
mov
test
icebp
test
push
adcb
insb
and
insl
push
mov
inc
lods
insl
mov
fsubrl
push
jbe
scas
in
std
pop
push
push
pop
fldenv
dec
push
push
fistl
push
ljmp
fildl
lods
clc
push
imul
data16
aas
js
inc
adc
arpl
xchg
aad
dec
outsl
adc
add
jg
xchg
cmp
std
xchg
mov
push
cmc
dec
stos
mov
xchg
fidivs
push
test
or
sub
add
pop
in
mov
sbb
das
pop
mov
clc
ljmp
das
mov
cmp
movsl
out
mov
dec
mov
jl
and
loopne
dec
cmpb
sbb
push
inc
push
adc
flds
push
inc
xchg
sub
or
dec
test
mull
or
nop
mov
pushl
xor
outsb
arpl
test
sbbb
sarl
ret
pusha
dec
enter
sbb
mov
push
push
aaa
in
sub
mov
fildll
xchg
xchg
mov
mov
loop
dec
les
out
push
mov
xor
cmp
sub
sti
and
fwait
adc
lcall
mov
add
sbb
cli
dec
jle
bound
cmp
xchg
sbb
or
and
or
pop
nop
mov
xlat
dec
cmp
sub
xchg
push
sub
mov
sub
dec
mov
mov
xchg
and
test
js
or
fisttpll
sbb
bound
daa
push
out
mov
ss
pop
loope
repnz
or
mov
je
cmp
mov
xor
jl
inc
stos
jo
mov
xchg
hlt
xor
lds
ljmp
loop
pop
stos
test
les
ss
adc
jmp
scas
sbb
outsb
lret
inc
add
sbb
dec
out
ds
pop
inc
sub
add
cld
int
adc
insb
push
pop
xor
inc
ret
lock
or
fsubrs
das
movsb
insl
push
clc
lret
xchg
sbb
dec
rclb
loop
mov
je
inc
jmp
mov
loop
and
divb
out
icebp
inc
sub
push
cwtl
push
popa
pop
cld
mov
scas
push
movsl
rcr
std
insb
stos
test
scas
loope
loope
in
dec
cmpsb
cmp
shr
icebp
jge
fadds
push
sbb
test
stc
push
add
lock
adc
push
pop
and
mov
loopne
mov
cmp
or
lods
sbb
pop
loope
lahf
lahf
hlt
xlat
inc
pop
call
sub
mul
and
mov
cmp
jo
mov
lea
jo
inc
jg
int3
push
out
fstpt
cmc
xchg
and
popf
clc
insl
mov
stos
push
mov
repz
sub
jo
add
xor
mov
xor
add
and
clc
jp
fs
adc
data16
xchg
pop
out
cwtl
lds
int3
in
testb
iret
rorb
or
xchg
mov
stos
xchg
sub
aaa
push
cli
push
xor
pusha
mov
nop
lret
and
outsb
add
jmp
int3
mov
sahf
add
inc
enter
mov
xchg
sbbl
sbbl
jmp
sub
insl
popa
int3
ds
lret
pop
leave
fbstp
clc
mov
mov
xchg
adc
add
xor
stos
mov
cs
das
sub
es
lcall
call
es
inc
lret
mov
mov
cltd
jno
pop
and
xchg
test
sbb
adc
mov
icebp
out
mov
sbb
fst
lds
hlt
insb
xor
sbb
xor
nop
dec
sub
dec
push
xor
add
pop
mov
sbb
in
dec
mov
jmp
xor
mov
mov
int3
pop
sahf
xchg
lret
sub
push
stos
jg
mov
fisttpll
pop
and
add
out
dec
xchg
imul
rdmsr
push
ja
jnp
movsl
fcompl
xor
int3
je
mov
unpckhps
dec
jl
cmpsl
or
mov
loopne
cmc
jae
jl
insl
dec
cmp
mov
adc
inc
mov
sub
xchg
mov
cld
push
popa
icebp
cmpsb
lcall
inc
dec
jge
or
mov
jno
lret
lret
cmp
scas
ror
data16
shrb
cld
divb
loopne
ror
outsl
insb
divl
mov
scas
push
lret
mov
sub
into
adc
scas
xlat
aad
out
pop
push
xchg
outsb
jne
stos
clc
test
pop
movsl
pop
in
test
fnstenv
xchg
test
fwait
xor
add
and
or
in
pop
sbb
bswap
dec
pop
cmp
cmp
sahf
push
movsb
cli
inc
popf
sbb
or
add
mov
pop
sbb
xchg
out
loop
or
pop
roll
push
mov
xchg
inc
pop
add
pop
cmp
scas
dec
mov
daa
or
shlb
aam
lea
shl
mov
lods
mov
outsl
sbb
sbb
addr16
or
aaa
bound
loopne
pop
mov
inc
mov
imull
call
adc
out
es
or
imul
shlb
add
out
xchg
cs
xchg
mov
addb
je
push
test
xor
in
out
stos
sub
sbb
mov
lods
js
mov
lds
adc
cmpsb
aad
xor
pushf
outsl
cld
or
push
call
push
push
insl
inc
push
jmp
in
loop
call
sysenter
std
jp
icebp
fistpll
ret
rcrl
sbb
push
pop
sti
pop
pop
aaa
adcb
pop
les
dec
imul
pop
mov
loopne
cmp
push
insb
add
pop
call
test
mov
sub
jl
sub
sti
int
xchg
pop
fdivs
sub
sub
imul
xchg
ljmp
xchg
dec
sub
or
test
jecxz
lock
and
adc
ss
and
xchg
xchg
sbb
mov
cld
pop
adc
cmp
xchg
call
cs
and
iret
sar
jno
add
jbe
cmp
xor
jno
jmp
inc
negl
dec
and
lret
mov
cmpsb
lods
jbe
inc
and
stos
in
fcmovu
xchg
das
movsl
fnstsw
cmp
push
jl
cmp
jecxz
and
pop
cmp
lret
adc
outsl
dec
xchg
in
and
sub
ret
push
push
sub
cmc
fnstsw
sar
ds
and
or
leave
nop
pop
in
cmc
das
and
and
loop
mov
cli
xor
jae
nop
sub
fdiv
add
imul
add
lea
inc
inc
in
adc
cli
xor
mov
or
fnstsw
sbb
fsub
outsl
inc
sub
into
insl
nop
mov
pop
jl
mov
sbb
sub
insb
mov
jo
das
push
sub
xor
pushf
rorl
out
repz
xchg
lret
and
insb
outsl
icebp
inc
int
or
cmpsl
notb
mov
gs
int3
jecxz
adc
jle
pop
test
xchg
xlat
repnz
scas
sub
xor
hlt
mov
lret
loope
lods
shll
ja
jge
cmp
sub
lcall
repz
xchg
xlat
sarb
in
dec
ljmp
xchg
jg
mov
sti
orl
inc
aas
xchg
pop
xlat
fmuls
in
mov
movl
fldt
fdivrs
adc
in
mov
lret
jp
xchg
das
jmp
fisttpll
js
ja
lret
in
and
add
addb
ss
in
mov
int
fsubrp
movsl
pushf
enter
pop
cmc
andb
es
hlt
rcrb
test
cli
into
movsb
repnz
add
iret
xlat
push
mov
cmp
cmpsl
xchg
scas
stc
sub
scas
adc
jo
jbe
pusha
inc
addr16
jmp
pop
lods
sub
lret
jns
stos
mov
imul
inc
in
hlt
add
inc
movsb
inc
ret
decb
loop
mov
pop
fwait
xchg
sub
inc
loop
mov
in
xchg
sub
fcmovnb
arpl
sub
push
inc
lcall
mov
xor
ss
rorb
dec
xor
jns
push
in
push
inc
orb
cmp
les
push
sbbl
jns
add
xchg
fdivl
dec
fcomi
sahf
push
sbb
aam
ret
loope
dec
pop
add
cwtl
jnp
cs
cmp
lret
lock
mov
fldl
mov
sub
js
sub
pop
pop
dec
out
push
push
popf
dec
mov
xlat
jno
push
sub
aas
push
or
lods
adc
hlt
sub
sub
jnp
in
insb
push
daa
jle
std
scas
cmc
daa
sbb
cmp
shll
dec
mov
mov
xchg
mov
fadds
and
pop
dec
or
es
pusha
fdivl
mov
test
iret
add
mov
cmp
imul
mov
cmp
scas
jl
xor
pushf
push
sub
xor
jecxz
xor
sti
inc
pop
aad
call
outsb
bound
add
cmp
in
adc
enter
add
or
xchg
mov
enter
sub
dec
xchg
popf
es
pusha
jecxz
stc
dec
sub
or
xor
je
xor
loop
mov
pop
dec
inc
popf
sbb
popa
jl
and
pop
jae
dec
push
pop
dec
das
push
xchg
outsb
pop
fmull
pop
fcmovne
pop
add
fucomip
mov
fsubrp
insl
imul
mulb
jle
or
daa
sub
mov
insb
insb
fcmovnbe
pop
pop
int3
and
sub
jno
test
andl
jl
dec
scas
jno
add
xchg
iret
dec
jge
xor
outsb
xor
icebp
inc
xor
and
push
mov
cmpsb
xchg
cmp
popf
lods
into
inc
outsl
enter
inc
les
ds
push
aas
test
mov
xchg
xlat
cwtl
push
xorl
cmpsb
pop
adc
jnp
fwait
inc
push
gs
xchg
push
daa
rol
inc
add
push
and
or
jne
addr16
push
dec
xchg
stos
test
adc
aad
and
mov
and
xor
push
jge
pushf
pop
aad
test
add
push
in
cmp
jecxz
mov
xor
sub
ror
xlat
adc
push
inc
mov
out
add
outsl
mov
das
ret
insb
lea
sub
inc
adc
outsb
pop
aam
xchg
dec
loopne
out
xchg
push
inc
mov
je
push
out
mov
call
xlat
dec
push
mov
xchg
jge
mov
inc
and
orb
inc
ret
jae
mov
sub
sub
cs
outsl
add
jecxz
mov
mov
cmp
fsts
loopne
push
inc
lods
dec
xchg
sbb
outsb
jne
mov
mov
loope
pop
pop
xchg
lcall
xchg
and
pop
sub
daa
xchg
or
aaa
ljmp
sbb
xor
test
cmp
fcmovu
testb
repz
aas
sbb
xor
andl
pusha
call
adc
mov
sub
jle
aad
add
mov
mov
push
insb
in
pushf
scas
loopne
mov
jmp
cltd
xor
popf
and
dec
pop
jns
leave
pop
test
outsl
call
jecxz
jb
lret
scas
fbld
mov
mov
push
hlt
sbb
ljmp
pop
xorl
sbb
sub
int
in
mov
adc
std
ss
data16
mov
xchg
scas
sub
mov
inc
jmp
pop
leave
xor
lret
fnsave
leave
icebp
mov
xor
fucom
xchg
inc
test
sahf
aam
loopne
ret
loop
mov
in
cmp
pop
shrl
dec
sub
sahf
mov
stos
das
aam
and
jb
mov
xchg
les
mov
sarb
iret
xor
push
push
xchg
sar
clc
mov
pushf
cmp
cld
loop
aad
add
push
dec
mov
popf
lods
sbb
scas
pop
and
lret
scas
pop
test
push
out
dec
cmp
cld
je
xor
xchg
lods
pop
lret
cld
jbe
in
mov
xchg
imul
and
dec
repz
push
push
pop
xchg
das
loopne
adc
push
subb
pop
mov
jae
mov
mov
xor
mov
and
fldl
stc
je
sbb
and
imul
jne
std
stos
push
mov
movsl
cmpsl
insb
push
xchg
notl
adc
dec
rorl
loope
cmpsb
fucomi
mov
mov
dec
or
fisubs
xor
sbb
jp
fstps
inc
add
cltd
stos
jl
jnp
imul
es
int3
gs
xor
inc
test
ss
or
rol
mov
test
push
imul
mov
dec
or
movsl
jne
mov
or
mov
faddl
inc
adc
adc
push
mov
test
mov
test
stos
std
and
xor
into
pop
or
ror
adc
sub
outsl
jo
push
inc
icebp
mov
pop
fwait
ja
add
dec
das
xsha256
cmpsb
pop
test
pop
push
push
into
xchg
inc
call
pop
lret
scas
xchg
fst
push
jo
mov
sbb
xchg
hlt
cld
or
push
cmp
push
lds
adcl
scas
lods
mov
lret
ja
push
sbb
pop
iret
adc
mov
out
jecxz
and
ds
xchg
insl
lea
ljmp
fildll
push
dec
data16
int
ror
or
fwait
adc
xchg
sarl
test
pop
sbb
sbb
popf
pop
jns
and
jl
sbb
mov
mov
mov
in
in
hlt
push
js
sar
pop
pusha
push
push
into
fcompp
lea
cmp
xchg
fs
popf
ljmp
nop
jo
cmp
test
popa
sub
mov
hlt
add
lret
aam
push
jp
jbe
add
and
add
int3
fsts
mov
les
push
hlt
mov
xor
in
xor
sub
aad
rcll
push
mov
int
aaa
mov
xlat
stos
inc
nop
xor
nop
pop
outsl
lods
popf
or
dec
cmp
fists
mov
in
mov
shll
push
mov
aad
int
test
adc
xchg
sbb
xchg
push
in
mov
sbb
shll
test
cmp
inc
enter
mov
mov
jns
push
cmp
cmp
xchg
jge
pop
adc
cmp
ret
ja
inc
nop
in
xchg
cltd
daa
ss
mov
or
pusha
scas
adc
mov
push
out
jmp
ss
jb
xchg
int
test
mov
cmp
jg
sarb
mov
cmp
add
cmpsb
movsl
mov
pusha
shll
data16
and
jb
fsubs
in
jmp
jo
out
aaa
push
and
mov
xchg
inc
les
mov
pop
mov
mov
vpmullw
mov
push
add
jl
iret
sbb
pop
mov
and
ret
add
dec
in
cmpsl
scas
daa
pop
rorb
js
push
add
push
adcl
xchg
jb
aad
fiaddl
rep
ret
pop
push
adc
add
mov
add
int
les
pushf
mov
xchg
roll
shrl
aam
jp
xor
push
fnstenv
sysexit
into
dec
dec
pop
pop
int
movsb
divb
test
and
push
pop
add
outsl
xor
cmp
push
shl
outsl
pop
cmp
mov
cwtl
inc
fstpt
ds
repz
and
mov
fdivs
mov
mov
pop
iret
sub
xchg
sub
or
jecxz
out
sahf
jnp
jnp
stos
test
mov
icebp
js
jo
mov
fwait
add
stos
jmp
ss
cmpsb
loopne
out
adc
insl
leave
xchg
stos
xchg
mov
dec
jp
cmp
outsl
xchg
sub
push
or
shlb
xor
and
push
or
popa
add
xchg
lds
daa
dec
pop
bound
jp
lods
mov
std
pusha
mov
inc
mov
popf
ret
icebp
lahf
aad
scas
adc
mov
mov
mov
dec
shrb
jne
pop
lods
sbb
mov
adc
cmp
subb
shr
imul
sbb
push
push
sub
sub
mov
xor
mov
dec
lods
scas
jae
clc
xchg
repnz
jge
push
xchg
fcmovnb
in
jg
sbb
sub
rorb
loop
jp
and
loopne
mov
cmp
ja
arpl
jge
lods
dec
jecxz
mov
ds
insb
ja
jo
xor
mov
pop
jl
enter
dec
jb
test
pop
scas
pop
outsl
scas
xlat
or
adc
imul
xchg
lea
repnz
loopne
js
mov
data16
neg
lret
repz
add
clc
imulb
push
pop
test
cs
or
jne
ret
sti
cli
jmp
pop
jmp
pusha
sub
and
mov
popf
cmp
mov
int3
xchg
icebp
sbb
popf
or
jno
add
in
lret
cmp
mov
mov
cmp
jnp
lcall
daa
rcrb
fimull
xor
xchg
divl
push
sub
jge
or
dec
aas
movsl
sub
adc
pop
out
pop
lahf
inc
pop
orb
dec
jne
pop
xlat
daa
dec
enter
mov
lods
sub
add
leave
movsl
into
je,pn
mov
inc
aad
cmp
push
mov
jmp
adc
dec
fwait
xchg
push
mov
fisttpl
test
repz
fnstsw
gs
sub
and
jne
xchg
jns
scas
pop
outsl
mov
sbb
cmpsl
out
icebp
xor
movsb
jo
jnp
push
lods
cmp
xchg
cmp
and
mov
cmp
fldl
loopne
shr
fdivl
inc
cmp
add
dec
imul
jmp
pop
les
push
jecxz
sub
pusha
mov
xor
lds
popf
in
sub
rcr
sub
test
int
xor
dec
les
es
insb
in
mov
fwait
gs
xor
pop
in
xchg
aad
mov
jg
sub
lods
std
sbb
frstor
scas
gs
sbb
dec
pop
outsl
xor
aas
out
in
dec
pop
subb
jb
imul
daa
mov
les
or
jl
mov
or
sub
push
loop
push
das
or
xchg
ffreep
and
insl
add
add
pop
mov
out
outsl
out
fimuls
jge
dec
sub
aaa
jmp
cmp
outsb
and
loopne
xor
and
jno
and
dec
shrl
aaa
les
shrb
movsb
or
dec
cmp
mov
mov
push
cmp
in
aam
mov
xchg
bnd
pop
movsl
cwtl
push
push
push
push
sbb
inc
push
fs
jl
add
jne
ja
xchg
mov
xchg
push
mov
fsub
or
ret
outsl
sarb
cli
ljmp
xchg
insb
jno
ss
repz
mov
or
and
inc
mov
mov
adc
clc
or
xor
aad
push
and
xor
cwtl
out
jge
dec
loopne
popa
sahf
pop
push
gs
cli
loope
out
inc
js
call
xor
cmp
arpl
pop
popf
arpl
ja
sub
lret
les
mov
sub
leave
lahf
or
lds
pop
push
lds
pop
cmp
pop
xchg
lcall
jp
adc
xchg
jmp
jecxz
mov
movsb
push
mov
push
sahf
out
loop
sbb
xor
icebp
shlb
or
mov
dec
pop
or
mov
dec
add
ja
sbbb
sbb
movsb
ficomps
or
out
int
and
rorl
xlat
fisubs
xor
cli
cwtl
cmp
jecxz
loop
into
int3
daa
xor
mov
dec
push
add
dec
cmpsb
lret
mov
mov
lods
mov
int
insl
mov
das
arpl
movsb
scas
adc
add
xchg
daa
lret
repz
xchg
rcr
mov
shll
inc
xlat
or
push
adc
mov
dec
sarl
fimull
int3
out
mov
arpl
mov
and
adc
lods
out
cli
dec
outsb
lods
push
add
inc
ficoms
lock
shl
or
xchg
or
test
ret
out
mov
lret
fcoms
icebp
cld
in
mov
int
dec
adc
pop
ss
clc
aas
adc
sbb
dec
push
add
xor
inc
fwait
ss
cmpsl
pushf
push
xchg
jl
inc
mov
into
call
jbe
or
sub
mov
and
ss
pop
mov
nop
cwtl
fstpt
out
ljmp
cmp
call
cmp
inc
sbb
out
fcmovne
xor
pop
jne
in
dec
pop
cmc
repz
cmp
xchg
jmp
sbb
outsb
imul
test
lock
rcll
fs
fdivrp
es
loopne
int3
or
inc
jns
dec
jbe
jno
pop
in
jne
push
jbe
ret
or
add
cltd
and
int
pusha
mov
fwait
xlat
sbbb
jo
xor
aam
xor
xlat
rolb
prefetch
and
cmp
mov
or
xchg
popf
out
out
int3
sbb
movsl
cmp
push
mov
xchg
sub
mov
into
loop
push
ljmp
inc
outsl
leave
jno
int3
aaa
mov
jge
cltd
and
sbb
jge
push
mov
jae
cmp
ljmp
call
xor
mov
mov
inc
aam
sar
bound
xchg
call
sbb
sbb
loopne
dec
sbb
pop
add
xor
fs
scas
dec
decl
inc
addl
pop
in
jle
mov
dec
inc
aas
les
xchg
mov
bound
dec
adcb
sbb
mov
sbb
insb
jnp
inc
popf
push
sti
xchg
cmpsl
aas
hlt
insl
dec
sahf
ss
xchg
fcoml
jmp
aaa
fdivp
int
mov
fdivrl
xor
fists
andl
or
cmp
int
addr16
mov
test
loop
and
xor
faddp
iret
and
adc
add
jbe
popf
iret
push
test
jns
ficoms
xchg
cmp
inc
pop
imulb
adc
cmp
push
call
jo
sub
mov
ja
jbe
cld
leave
push
xor
notl
push
sarl
pop
sbb
cmpsl
in
shll
sbb
sub
lock
cwtl
fildl
leave
push
repnz
mov
mov
adc
push
addr16
lcall
popf
dec
lock
sbb
pop
xchg
add
xchg
test
push
and
mov
mov
jae
and
shrl
fists
jmp
enter
loope
call
mov
and
arpl
adc
adc
cmp
add
out
or
add
movsb
sbb
add
xchg
pusha
pop
leave
jno
test
insl
jecxz
add
xor
in
cmpsl
push
int3
ficoml
mov
add
inc
pop
xchg
cs
push
mov
cmp
fnsave
mov
gs
orl
lahf
xor
pushf
push
jae
pusha
into
jecxz
fimull
popa
mov
mov
outsl
stos
or
jle
lret
pop
pop
jmp
rcl
ds
pushf
ror
ret
mov
xchg
ss
jo
sbb
leave
sbb
rorb
aam
cs
adc
mov
and
xchg
aam
dec
out
sbb
das
pop
subl
xchg
es
data16
fs
lret
push
fisubrl
or
clc
ss
jecxz
out
push
xchg
push
mov
or
mov
test
scas
pop
mov
mov
pop
aas
aam
inc
mov
cmpsl
cmp
mov
cmc
pusha
push
lahf
lds
cmp
push
mov
xor
orb
aaa
shl
mov
dec
xchg
add
add
jp
jb
pusha
pop
cmp
aas
xchg
shll
sbb
dec
add
outsl
daa
fnsave
xchg
pop
mov
mov
add
mov
xor
outsb
test
mov
lds
mov
lcall
in
xor
and
aaa
jg
movsl
sbb
jnp
pushf
inc
inc
pop
jnp
je
lds
ret
shr
in
or
enter
pusha
adcl
push
jnp
dec
jle
ret
cmpb
cmc
dec
test
imul
es
cmp
pop
mov
sub
xor
cli
bound
leave
mov
mull
rcll
xchg
pop
std
pop
ficoml
icebp
sbb
cmpl
pop
loop
pusha
iret
shr
cmpsl
fs
mov
inc
out
or
sub
pop
add
vpsubsw
mov
fstps
or
fdivrs
ret
mov
bound
mov
mov
mov
push
ret
or
cmp
mov
stos
mov
fstps
call
mov
dec
enter
add
inc
insl
cs
xchg
arpl
adc
aas
push
xchg
xchg
nop
daa
lds
aaa
xor
pop
dec
mov
xor
cwtl
adcb
add
pushf
cmp
xor
push
sbb
xchg
outsl
imul
test
mov
inc
push
cwtl
xchg
lods
std
mov
sti
fistps
jne
push
add
sub
inc
dec
jbe
imul
fisubrl
or
and
pop
mov
aad
je
mov
aam
pusha
insl
jb
pop
or
cmp
mov
cmp
pushf
push
jmp
push
movsb
hlt
jecxz
and
popa
cli
insl
sbb
mov
insb
into
mov
adc
xor
shrl
mov
dec
fildll
adc
cmp
mov
out
mov
je
jno
ds
test
push
mov
sbb
in
dec
xor
ja
inc
pop
xchg
xchg
mov
lret
cld
shl
mov
mov
cmp
sbb
mov
fs
or
and
push
dec
fsubrl
scas
pop
fsubp
ljmp
out
push
mov
xchg
sub
xor
sbbl
outsb
daa
sbb
stos
cmp
push
mov
lds
or
iret
cmp
test
jae
outsb
cmp
cwtl
movsb
inc
add
pushf
xchg
test
dec
mov
pop
mov
pushf
outsb
cli
cmp
fisttps
stos
rolb
in
stos
outsl
call
movb
pusha
es
adc
add
dec
shll
iret
sbb
adc
or
xchg
jmp
rcrl
mov
cmp
push
inc
mov
or
jae
iret
mov
jmp
dec
mov
or
rol
pop
sti
cmp
and
lret
sbb
and
sbb
sbb
pop
or
scas
dec
dec
mov
lds
aaa
fucomi
insl
inc
je
in
mov
in
stc
xor
popf
sbb
cli
sarb
cmc
adc
ror
lea
dec
cld
test
fnstenv
or
cmpsl
sub
sbb
cmp
push
cmp
cld
clc
imul
enter
mov
pop
xchg
imul
mov
xchg
pop
iret
or
cmc
xor
fwait
add
iret
add
cmp
stc
cmpb
mov
repnz
pop
test
and
shlb
jne
in
inc
xchg
jp
lcall
and
in
ret
dec
lds
cltd
dec
lods
lea
or
pop
dec
into
inc
inc
push
movsl
pusha
xchg
pop
jae
pop
mov
enter
pushf
ret
iret
in
subl
inc
mov
lock
sbb
gs
sahf
jno
xchg
dec
sub
scas
fcompl
pop
ds
mov
push
rcll
push
push
je
jp
mov
pop
adc
add
mov
dec
pop
int3
dec
mov
adc
mov
mov
out
enter
cmp
mov
test
lds
cmp
gs
imull
cmp
pop
adc
inc
sbb
out
pop
mov
test
cmp
pop
adc
js
ror
lret
test
xor
repz
jecxz
movb
jg
mov
imul
loope
inc
jnp
mov
hlt
lret
push
lds
lea
jno
cmpsl
inc
xor
xchg
push
call
mov
arpl
enter
clc
mov
lods
mov
xchg
xor
adc
repz
dec
mov
fstpt
xor
add
repz
xchg
mov
jne
adc
add
mov
jmp
in
cmp
imul
inc
dec
jmp
add
call
scas
cmp
call
outsl
adc
lds
inc
jecxz
or
pop
jb
mov
or
fwait
enter
push
pushf
push
sahf
sub
in
adc
mov
push
cmp
add
sub
xlat
push
dec
loope
and
loopne
and
mov
pop
mov
mov
loope
jns
jle
adc
inc
scas
ror
adc
xchg
pop
mov
lret
aad
int3
lahf
imul
cmpsl
in
out
loopne
stc
cmp
xchg
mov
mov
push
scas
test
sbb
mov
inc
test
sub
sarb
mov
jmp
sti
cmc
out
cld
ftst
into
lock
pop
mov
adc
cmp
sti
or
xor
arpl
mov
jle
push
hlt
and
loope
lret
daa
add
mov
mov
dec
push
dec
dec
mov
test
push
shlw
adc
sub
cltd
sbb
addb
pop
lcall
dec
dec
lock
cmp
outsb
ss
lds
mov
mov
mov
data16
repz
test
pop
loopne
mov
dec
sarl
fsub
inc
xor
sbb
popa
mov
pop
jae
out
sahf
cmp
pop
add
int
cs
ja
adcb
mov
stc
sub
push
mov
push
cld
push
or
xchg
sub
push
or
mov
call
sub
cltd
aas
mov
and
stos
jo
sbb
inc
cmpl
cmpb
xchg
sbb
ja
jno
or
and
pop
sbb
arpl
std
pop
inc
push
or
sbb
mov
xlat
dec
jnp
clc
jns
push
adc
inc
xor
push
add
xchg
or
jecxz
sarb
push
jne
fs
add
pop
shll
data16
mov
jmp
mov
jnp
dec
fnstenv
or
mull
sbb
sbb
icebp
cltd
mov
ss
flds
jg
xor
inc
xchg
fisttpll
rorb
dec
mov
in
push
xlat
dec
push
test
sahf
js
aam
int
and
movsb
sbb
andb
cld
fninit
test
pusha
adc
in
or
repnz
push
je
cltd
pop
mov
jbe
or
and
and
je
aad
imul
scas
dec
fidivrl
pop
test
or
stc
xchg
test
mov
imul
fidivs
icebp
sub
sub
pop
xchg
adc
add
or
int
add
mov
test
imul
jno
pop
inc
jmp
sti
dec
aad
inc
jns
cmpsl
adc
push
fdivl
add
pop
das
pusha
pop
sarb
addl
dec
nop
or
push
ljmp
stos
dec
sbb
shl
dec
je
jg
in
insl
sbb
push
cld
sub
ds
dec
xchg
pop
enter
cmpsl
mov
push
adc
les
pop
sbb
mov
add
sbb
cli
sub
mov
lods
lcall
insl
mov
rclb
jnp
push
fldln2
scas
mov
fwait
imul
out
insb
push
xchg
jb
mov
fwait
cmp
hlt
xchg
and
sbb
dec
imul
mov
aaa
push
sarl
dec
dec
xchg
mov
repnz
pop
jbe
jl
repnz
inc
test
movsl
arpl
int
mov
out
ljmp
cltd
adc
ret
mov
call
sub
sahf
mov
pop
jg
jb
mov
xchg
shll
movsl
mov
cmpsb
jae
popa
gs
mov
mov
pop
inc
jae
xor
jmp
xor
xchg
mov
dec
sbb
xchg
adc
cmp
sbb
or
xchg
or
inc
jns
and
cltd
mov
decb
cmp
mov
lock
or
mov
push
lds
xchg
rorb
pop
mov
fldl
and
cmp
add
fisubs
and
popf
push
popf
lahf
call
sub
shr
pop
push
es
orb
or
aam
cmpsl
mov
ss
pop
xchg
cmp
popa
hlt
mov
in
pop
add
adc
out
mov
push
data16
sti
mov
stc
int3
or
mov
dec
mov
lds
push
stos
push
or
inc
inc
shlb
stos
mov
dec
test
iret
mov
gs
outsb
scas
jl
clc
adc
sbb
pusha
lret
add
inc
push
repz
inc
fwait
and
int3
es
inc
es
ja
and
push
sbb
dec
xchg
pop
in
lock
xor
clc
lahf
or
dec
jno
fildll
pop
ror
jp
adc
sub
or
jg
out
jbe
daa
mov
add
imul
sub
mov
int3
dec
stc
negl
fcmovbe
es
pop
lods
pop
lcall
adc
outsl
mov
sbbb
and
inc
push
rclb
lock
adcl
add
sub
jo
pop
or
cli
inc
adc
dec
jge
sbb
mov
imul
mov
sub
sbb
xlat
or
dec
orb
jne
ret
data16
xchg
test
sub
mov
ret
enter
movsb
loop
lods
cld
inc
sarb
pop
movsl
or
jb
push
aam
or
call
xchg
dec
lret
sarl
push
clc
fiadds
and
aaa
fidivrs
pop
mov
push
imul
sbb
inc
push
mov
adc
mov
cmpsb
xchg
mov
sbb
out
ret
push
fcoml
fldt
sub
test
lret
das
sub
popl
lret
nop
orl
dec
inc
cli
pop
ja
rcrl
mov
bound
fsts
and
jo
js
out
xor
push
popa
xor
sub
lea
inc
sub
pop
adc
iret
xor
jmp
xor
ja
je
cmpsb
sbb
lahf
adc
repnz
push
adc
push
add
ret
pop
push
fildl
ljmp
test
gs
les
add
jg
repz
mov
xor
subl
lahf
xor
and
imul
pop
int3
sbb
imul
sbb
cmp
adc
mov
ds
push
andb
sub
stc
arpl
shll
jno
data16
mov
jno
ds
lret
mov
push
out
add
xchg
jns
mov
roll
lret
cmp
jl
jmp
push
add
iret
mov
aam
cltd
stos
stos
subb
mov
test
inc
int3
inc
add
fucomi
rclb
sahf
jb
sti
mov
lret
adc
movsb
stos
fbld
pop
dec
mov
rol
cmpsb
jno
sbb
shlb
lods
inc
test
sub
out
subb
xchg
sub
not
das
pop
iret
insb
mov
cli
imul
mov
add
pop
sub
stc
scas
add
sub
or
jbe
call
gs
jge
or
jns
inc
stos
sub
lcall
hlt
popf
loop
xchg
add
movsb
mov
or
xor
or
pop
shl
mov
push
xchg
dec
or
out
rorl
add
pop
xor
in
and
repz
jl
add
lea
cmpsl
inc
lods
icebp
jne
imul
xorb
aam
mov
pop
xchg
and
call
iret
or
jb,pt
sub
arpl
dec
ds
int
cmovnp
jo
jne
inc
mov
in
sahf
push
push
cmpsl
bnd
fadds
mov
imul
jmp
pop
dec
add
push
dec
dec
mov
aaa
pop
loope
or
or
mov
into
jge
outsb
aaa
dec
das
aam
push
cmp
lock
or
sbb
cmp
jle
pop
mov
sub
std
pop
add
fwait
or
adc
push
pop
mov
mov
mov
mov
jb
aam
dec
in
sbb
mov
lods
pop
push
pop
fistl
ja
adc
and
sarl
insb
stc
sbb
sub
cmp
mov
mov
cltd
jge
jle
fisttpll
adc
push
bsf
cmp
mov
jmp
daa
mov
mov
pusha
xchg
clc
lret
popa
mov
leave
xchg
inc
lea
lahf
ror
outsb
and
adc
sbb
and
sbb
cwtl
ret
xor
and
jns
mov
xchg
sbb
scas
push
cmp
fdivrp
mov
jle
ret
adc
xchg
add
fcmovb
int
clc
mov
stos
loopne
xlat
inc
xor
cmc
mov
and
fucomi
sbb
mov
ljmp
mov
xrelease
push
lods
push
lock
push
scas
scas
jge
cld
adc
adc
mov
stc
inc
stc
and
sbb
shrb
gs
cli
shrb
adc
bound
mov
inc
sbb
out
fidivrl
add
dec
outsl
push
inc
ret
inc
mov
shlb
andb
aad
push
dec
or
push
inc
xchg
push
pop
adc
lea
inc
lret
pop
mov
out
cmpps
and
and
fwait
xor
les
push
lds
pop
out
and
jl
cwtl
mov
andl
cmpsb
lcall
cmp
add
scas
push
sbb
mov
ds
ficomps
fbld
push
jge
cmp
mov
jb
std
mov
dec
xchg
jp
mov
cmpsb
movsb
dec
data16
fwait
pop
sub
lret
jg
loope
in
js
push
nop
inc
js
into
or
dec
sbb
test
mov
es
xchg
lock
ljmp
loopne
stos
cmpsb
cmp
dec
sbb
push
adc
add
imul
mov
jbe
dec
jbe
cltd
je
decl
inc
push
lret
xor
push
jmp
inc
gs
fs
call
xchg
aaa
sbb
aam
mov
adc
cmpsb
repz
jl
sub
or
pop
je
inc
imul
mov
js
mov
pop
mov
cmpsb
pop
cmc
imul
aaa
leave
ja
fidivl
cwtl
lea
loope
shlb
into
das
leave
call
adc
mov
loopne
xchg
data16
and
test
jns
jns
fadds
and
sub
out
and
xchg
inc
push
and
loope
cli
push
jno
sbb
dec
inc
test
add
jle
cmp
aaa
pop
mov
inc
test
push
pop
repz
mov
aas
xor
pop
cmp
clc
test
inc
mov
jnp
xor
fbld
mov
lahf
cli
scas
inc
rorb
pop
repnz
adc
inc
ja
testb
sti
mov
je
mov
xor
je
aaa
loop
add
cmpsl
lods
cmp
hlt
adc
adc
mov
xchg
pop
subl
sub
shlw
xchg
out
loope
and
popa
push
inc
out
loope
xchg
ljmp
mov
jge
add
das
mov
or
adc
push
sub
fstl
pop
mov
lret
sub
adc
orl
in
insb
arpl
push
insl
mov
dec
cmp
loop
mov
je
push
dec
sub
sbb
and
fmull
inc
out
jl
mov
jg
repz
cld
test
cmp
enter
mov
mov
lock
dec
pop
dec
mov
inc
in
mov
jae
adc
int
push
es
daa
es
xchg
mov
jp
outsb
mov
mov
sti
pop
inc
cltd
mov
rorb
cli
mov
mov
push
jecxz
gs
push
add
push
pushf
xchg
or
into
jg
mov
xor
aam
adc
je
lods
sarl
jns
scas
xlat
inc
icebp
cmp
lds
dec
jnp
add
insl
sub
inc
jle
gs
and
das
jmp
jns
je
shrb
mov
pop
imul
shr
aaa
and
rcrl
lock
orb
in
mov
fcomps
lret
fisubrl
or
adc
adc
out
adc
cmp
repz
ret
sub
test
mulb
pop
sub
sbb
pop
imulb
scas
mov
clc
daa
in
xchg
pop
mov
scas
xor
xchg
outsl
and
ret
sbb
lahf
mov
jp
xchg
movsl
and
pop
lcall
cwtl
sbb
roll
dec
pop
jp
rolb
dec
mov
and
push
xchg
rcrl
in
mov
ds
nop
fnstsw
loopne
cmc
sub
movsl
out
lahf
out
mov
fcompl
jp
or
mov
or
add
push
pop
repz
iret
sub
lcall
and
out
push
shl
cltd
jb
mov
lcall
movsb
push
mov
sbb
dec
enter
mov
bound
lods
sarl
push
sub
cld
xor
test
std
pop
test
inc
mov
inc
jp
push
lock
inc
btc
pop
pop
js
loop
ret
dec
sbb
mov
nop
loopne
sbb
clc
popw
inc
cmp
and
mov
test
add
subl
and
cli
sub
les
cwtl
rcrl
add
insb
mov
push
adc
imul
int3
cmp
mov
mov
dec
loope
outsb
dec
popa
sti
push
arpl
out
pop
cmc
xor
mov
out
pop
add
cmp
sub
out
cmp
cli
mov
push
es
xlat
divl
insl
adc
lret
sar
xchg
sub
add
pand
sub
cmpsl
push
xchg
mov
ret
testl
shl
mov
push
jns
pop
cld
add
stos
dec
lods
loopne
xor
sub
mov
xor
push
scas
leave
sbb
xchg
mov
and
jbe
ret
pop
jmp
dec
ljmp
fcomps
outsl
pop
sbb
inc
ja
lods
test
das
push
adc
adc
push
pop
outsl
inc
and
out
inc
mov
xchg
sbb
dec
mov
xor
and
out
int
mov
cs
ja
popa
mov
test
pop
xchg
and
in
aas
cmp
fsubrl
out
push
int3
mov
sub
jle
nop
iret
sub
mov
sbbb
mov
cmp
sbb
insb
notb
out
mov
imul
mov
pop
push
adc
mov
movsl
jae
in
enter
fs
or
xor
jl
je
lcall
mov
arpl
sbb
cmp
ljmp
popa
mov
addr16
cmpsl
inc
cmp
dec
ss
stos
push
int3
add
xchg
cmpsl
mov
int
mov
xchg
icebp
lcall
ret
jl
mov
jl
sub
adc
dec
pop
out
pop
subl
jae
push
mov
mov
test
jge
mov
mov
pop
imul
outsb
in
adc
inc
xchg
jnp
inc
sysexit
cli
mov
int
mov
ds
adc
jns
sbb
movsb
mov
mov
es
push
sub
sub
mov
insb
pop
mov
sub
cmpsb
push
push
lods
inc
pop
inc
mov
push
ljmp
inc
jae
psubusw
adc
clc
loop
lret
fstl
add
jecxz
mov
pop
mov
fwait
dec
sbb
xchg
pop
pop
loop
scas
pop
fs
adc
dec
rcrb
push
shll
push
adc
aad
into
mov
daa
jmp
dec
loopne
cmc
stos
fwait
pop
push
dec
fistps
andb
lahf
out
sbb
cwtl
jecxz
sub
cmp
xor
mov
out
rol
inc
pop
and
mov
push
leave
jl
mov
cmpsb
push
mov
push
or
loop
es
mov
mov
orb
lock
fwait
and
lds
sub
sbb
pop
movsb
sub
pop
fdivr
popa
mov
push
adc
jae
lods
mov
nop
shrb
bound
mov
hlt
test
frstor
cmp
pop
inc
shll
jmp
dec
frstor
or
and
js
xchg
lret
lea
fs
test
adc
mov
pop
jns
jno
lcall
lods
cwtl
fsubs
test
insb
add
aad
jecxz
inc
cld
inc
pop
aam
bound
jb
es
push
cmp
sbb
inc
int3
mov
shlb
cmp
imul
inc
ds
negl
movsb
insb
mov
add
orb
xor
mov
jecxz
stos
cltd
movsb
sbb
dec
xor
movsl
shll
jmp
jecxz
jecxz
imul
mov
mov
adc
pop
cs
sbb
aas
popa
outsb
adc
es
jg
lods
dec
cmc
xor
pusha
mov
ret
aaa
out
roll
aam
sub
jmp
and
lea
cmp
mov
lea
jno
into
andb
hlt
xor
aas
das
pop
fwait
and
xlat
imul
or
sbb
lds
lret
dec
and
sub
and
fdivrs
addr16
ds
lods
in
test
cmp
bound
add
mov
test
or
inc
pusha
ljmp
mov
into
lcall
push
and
push
scas
or
call
fsubr
fucom
dec
mov
inc
xlat
stos
imulb
iret
and
roll
sbb
insl
insb
cmp
outsl
std
xchg
mov
call
xchg
jns
mov
test
shl
and
sbb
pop
dec
sub
mov
cmp
loope
rcrb
xchg
movsb
sub
outsl
or
aas
loope
les
data16
inc
xchg
add
popa
sahf
and
jne
xchg
mov
fstpl
lea
jnp
pushf
mov
jp
mov
jnp
xchg
fdiv
fucomp
lcall
mov
lock
push
adc
adc
add
and
daa
pop
mov
jge
sbb
inc
xor
mov
imul
push
inc
rorb
jno
insl
fcmovnu
xchg
sarl
cli
cmpsb
insl
call
push
lcall
gs
stos
mov
xor
xchg
rcrl
es
stc
add
ret
jbe
mov
mov
xchg
sar
xor
pop
insb
pop
mov
adc
add
aad
div
xor
int3
pop
sub
add
push
mov
jns
hlt
outsb
push
sub
fimuls
xchg
xchg
xchg
fdivrl
pop
inc
das
jno
call
aas
shrb
testl
pop
rorl
mov
inc
clc
jmp
and
push
iret
jl
lock
icebp
add
iret
dec
mov
lods
push
adc
inc
sub
xor
xchg
mov
xor
xchg
dec
mov
loopne
sub
push
pop
ds
and
xchg
popf
stos
mov
es
fdivl
popl
lret
in
jno
rcrb
data16
xor
mov
data16
dec
lahf
scas
sub
and
push
pop
stos
subb
shl
pusha
pop
xchg
scas
test
or
sub
ret
sub
pop
mov
xor
jns
je
xchg
fnstcw
test
into
xchg
cs
pushf
inc
xchg
lock
xchg
push
jae
mov
sbb
rorl
pop
pop
push
mov
fimull
test
jmp
and
adc
loopne
test
cmc
push
dec
cmp
icebp
cmp
pop
popa
xchg
roll
out
ret
jmp
sbbl
fbstp
sarb
lods
lds
cmp
cmp
mov
inc
push
sarl
hlt
ds
outsl
loopne
sub
xor
sub
inc
inc
mov
lret
xor
or
xchg
fcomi
and
jecxz
fdivrl
ret
jecxz
div
add
sbb
mov
xchg
call
ds
stos
inc
outsl
sbb
int
iret
jae
lahf
cmc
fdivl
rol
dec
out
addr16
or
and
inc
and
push
xchg
fsubl
out
clc
ret
inc
mov
pop
mov
leave
outsb
psubusw
dec
sti
aam
push
out
loope
xchg
in
inc
and
add
nop
pop
les
or
lods
push
jge
jle
mov
sub
mov
cmp
out
cmp
xlat
xchg
loopne
hlt
push
xchg
cmp
add
sbb
lret
sub
sub
add
adc
push
jmp
ret
push
fisubs
jmp
add
das
test
mov
inc
stc
mov
cmp
xor
mov
stc
outsl
mov
popa
fs
in
test
sbb
lods
lock
sub
dec
leave
out
cmp
xchg
sub
out
lcall
scas
push
push
shlb
ja
xlat
cmc
adcl
sub
xchg
inc
dec
xor
mov
inc
mov
cmp
mov
pop
xor
pushf
scas
sbb
addr16
jb
orl
fimuls
and
cmp
push
xor
and
pop
inc
add
mov
mov
mov
cmpsl
adc
xor
push
int
jb
pop
xchg
sbb
jnp
nop
rcrb
add
sbb
cwtl
mov
into
rorl
cmpsb
jmp
fcomi
push
lcall
es
es
ror
mov
test
mov
fcompl
push
jge
mov
push
cmpsb
mov
dec
add
sbb
jno
adc
test
aaa
mov
sub
mov
loop
pop
push
lock
push
icebp
out
adc
fwait
sbb
je
xchg
push
or
fisttpl
test
mov
popf
addb
xchg
sub
fsubr
xor
or
divb
sub
dec
std
adc
sarl
daa
and
mov
cli
shl
pop
xchg
cmp
pop
scas
out
das
ss
push
stc
dec
sbb
mov
sbb
rorl
mov
fimuls
shrl
andl
sub
xchg
push
inc
aaa
clc
push
cmp
test
or
inc
sub
mov
adc
rorl
sahf
xchg
cmpsb
fidivrl
xchg
lret
sub
stc
jno
orb
mov
sbb
dec
mov
sub
fcmovnb
sbb
xor
pop
xchg
fmull
les
sbb
cmp
inc
push
shll
repz
pop
icebp
sahf
mov
lods
aad
xor
out
fnstenv
mov
adc
jne
cmc
in
fiadds
xor
in
jb
push
dec
mov
loop
or
dec
daa
sbb
pushw
pop
mov
jl
cld
adc
lods
sti
nop
xchg
cmp
inc
lahf
inc
adc
out
cmp
sub
mov
pusha
rcr
and
ja
in
scas
pop
mov
cwtl
inc
add
mov
aam
mov
mov
out
scas
mov
fcoml
pushf
dec
push
dec
into
lret
mov
sbb
mov
sub
jo
mov
sbb
jp
orb
repz
scas
push
xchg
jbe
gs
push
add
cmp
dec
cmp
cltd
pop
add
insb
rcll
xchg
subl
rcll
or
lds
jne
sbb
push
pop
das
loopne
pop
pusha
mov
es
mov
cmp
jmp
cmpsl
repz
sahf
jl
rclb
in
stc
mov
clc
mov
add
push
push
insl
lods
inc
xor
mov
jp
or
cmpl
add
pop
cmpsl
mov
mov
jmp
loop
push
dec
out
fldt
dec
in
xchg
out
and
sbb
jmp
cmp
test
dec
ljmp
push
cmpl
dec
sub
in
push
pop
ret
adc
aas
cmpsb
add
hlt
shll
in
in
imul
sub
and
orb
cld
fldcw
and
jl
and
cmp
xchg
adc
mul
cld
popf
push
ss
shrb
in
jmp
shlb
pop
movsb
push
mov
data16
sub
mov
movsl
aam
jle
xor
decl
push
xor
xor
push
and
dec
adc
cmpsb
sbb
pop
outsb
adc
mov
inc
jno
or
sbb
mov
lods
ss
mov
fistps
fidivl
xlat
lods
in
lea
les
divl
xor
pop
cmp
test
aas
dec
dec
dec
sbb
ljmp
mov
call
mov
inc
fiadds
scas
sbbl
test
pusha
adcl
cmp
sub
lods
clc
sbb
mov
mov
xor
push
push
push
inc
add
mov
dec
mov
cmp
cmp
loopne
inc
cmp
mov
scas
out
mov
jno
fisubs
int
jmp
jp
mov
repz
add
aam
xchg
pop
mov
mov
or
jno
mov
adc
xchg
fwait
push
pop
inc
or
cld
push
movsl
pop
popf
test
loop
pop
mov
push
fwait
lret
scas
push
cmp
subl
loopne
jp
in
push
jle
cld
leave
inc
pop
das
adc
sbb
scas
enter
fsubrs
mov
pop
int3
jo
dec
test
mov
stos
push
test
cmpsb
ja
inc
mov
xlat
add
lcall
cmc
sub
mov
mull
imulb
jge
lock
xchg
mov
mov
inc
adc
test
jg
orl
cwtl
add
into
pop
pop
jmp
pop
in
add
rorb
fidivrs
clc
mov
je
push
sub
popa
stos
shrl
push
out
popa
xchg
in
fldl
mov
frstpm(287
xchg
dec
out
sbbl
aam
mov
push
gs
test
and
clc
xchg
mov
mov
leave
mov
adc
mov
cs
shlb
inc
xor
cmp
or
mov
xor
mov
and
mov
mov
xor
lahf
cli
sbb
push
pop
xor
jae
jg
and
rcrl
xor
push
pop
sub
dec
lods
repnz
insb
lea
sub
fcoml
imulb
cmp
stos
push
bound
lds
cmp
out
push
loope,pn
nop
arpl
fisubs
cmp
mov
dec
push
inc
loopne
jmp
test
ljmp
shlb
pop
sahf
sbb
rcrb
ret
shlb
mov
xlat
push
adc
movsb
lretw
mov
cmp
out
ss
movsl
push
dec
mov
out
jne
aad
cmpsb
dec
fistl
shll
inc
out
mov
sub
out
sub
and
out
cmpsl
xor
std
xor
leave
mov
mov
pop
push
mov
stc
or
clc
sbb
add
leave
iret
push
bswap
iret
inc
push
mov
pop
insl
fwait
stos
int3
dec
lahf
jae
xchg
fsubrl
outsb
aaa
add
pop
jg
loop
test
pushf
lods
iret
fnstenv
mov
sub
cli
ss
push
mov
add
mov
lret
xchg
or
jae
sbb
mov
or
shlb
js
xchg
sub
cmp
xchg
sbb
ja
pop
leave
inc
add
fisttps
fmull
push
sub
jg
cmpsl
mov
mov
dec
scas
orl
xchg
sub
inc
push
jnp
lods
mov
sbb
sub
lds
sub
sub
jo
movsb
out
adc
ficompl
iret
xor
mov
push
adc
nop
mov
jp
test
pop
aad
into
addr16
pandn
loop
cwtl
test
and
push
hlt
sbb
push
jne
inc
mov
fimull
mov
xorb
loope
sub
out
test
hlt
add
jl
mov
sub
cmpb
shll
repz
add
push
cmp
sbb
mov
outsl
andb
sar
sub
movsl
repz
idivl
fsubrs
daa
jne
cmpsl
dec
iret
mov
xchg
adc
movsb
movsb
out
mov
and
cli
mov
subl
nop
adc
pop
outsl
imul
clc
pop
rcr
ds
out
loopne
jbe
nop
sub
push
and
sub
das
or
or
test
sbb
inc
cmp
stos
repz
lcall
fimuls
out
mov
bound
push
sub
mov
mov
or
gs
adc
fsubl
leave
iret
or
adc
push
cmp
mov
fs
add
test
sub
in
sub
hlt
repnz
add
mov
add
negl
dec
jecxz
arpl
pop
push
fidivs
bound
aaa
imul
stos
adc
dec
add
ja
movsb
inc
cmpsb
gs
arpl
add
cmp
push
jae
movsb
jge
dec
pop
stos
and
cwtl
xchg
xlat
inc
call
fmuls
test
sub
or
cld
insl
lock
push
fsts
nop
mov
inc
inc
ret
dec
imul
scas
sbb
pop
sbb
lods
mov
rol
loopne
pop
cmpsb
dec
add
sbb
ljmp
imul
scas
js
hlt
add
dec
sbb
dec
test
jb
add
mov
aas
movsl
dec
data16
lahf
sbb
scas
out
jnp
in
inc
push
sbb
inc
pop
cmpsl
sbb
icebp
imul
inc
gs
adc
aaa
je
add
lds
and
push
adc
loopne
mov
jg
aad
mov
jbe
mov
scas
inc
aam
or
je
test
jae
test
jp
lds
mov
scas
leave
cmc
sbb
nop
cli
xchg
scas
cmp
jl
in
jp
dec
lods
add
addl
mov
lret
hlt
xchg
jno
add
cmp
adc
add
ret
ja
jbe
arpl
dec
adc
daa
and
and
in
sub
insl
daa
jb
dec
adc
jmp
lods
dec
sub
jb
push
les
fimull
insl
leave
cltd
push
cmc
jo
outsl
push
lods
scas
loopne
dec
ljmp
insl
mov
xor
mov
scas
cld
lea
sti
jg
outsl
data16
mov
jae
stos
iret
add
out
mov
gs
jecxz
xor
leave
xor
dec
xlat
xor
fs
cmp
mov
sub
repz
outsl
clc
dec
inc
add
jno
xor
pushf
arpl
iret
arpl
es
movsb
mov
sbb
dec
sbb
adc
adc
sub
movsl
pusha
push
nop
or
or
dec
test
or
repnz
inc
mov
scas
sbb
sub
outsb
fwait
aam
push
lret
lcall
or
incb
mov
push
mov
cmp
fs
or
inc
push
dec
les
outsl
dec
mov
fiaddl
push
and
stos
mov
mov
xchg
inc
pop
xchg
jp
cmp
outsb
lret
daa
pop
ffreep
cs
sahf
iret
call
js
les
xor
fs
or
xchg
lods
andl
push
icebp
addb
clc
sbb
insl
xor
mov
jb
rcl
jo
mov
adc
jb
mov
movsb
icebp
mov
inc
fadds
test
xchg
dec
cltd
out
inc
mov
mov
dec
or
inc
cwtl
aaa
jbe
cmc
push
add
test
sbbb
mov
jns,pt
leave
out
inc
xor
pop
ja
int
loopne
sub
sub
xchg
imul
ja
add
stc
fdivr
jno
mov
add
mov
mov
test
nop
fldcw
rolb
lret
insl
push
xchg
mov
jae
inc
stos
out
test
xor
sub
mov
inc
lock
inc
sahf
pop
movsb
or
mov
xor
jb
inc
sub
xor
add
inc
test
xor
inc
xchg
cmc
in
into
cmp
jmp
mov
xlat
ljmp
ljmp
cltd
xchg
jge
or
mov
repz
into
into
push
or
cld
mov
loopne
mov
xlat
sub
rorb
das
mov
cmp
sub
add
and
mul
mov
sbb
push
test
xor
imul
xor
xchg
jecxz
jmp
imul
stc
jns
inc
rorb
and
dec
lea
jmp
jne
cmpsl
lock
ficomps
inc
outsb
iret
cmp
insb
mov
mov
sub
xorl
imul
mov
push
notb
add
pop
dec
push
out
xor
test
pop
jl
adc
cmp
fdivr
inc
repz
xor
adc
cmpl
add
test
loopne
xchg
sbb
ffree
leave
es
xor
lea
fnstcw
pusha
into
mov
jb
or
push
scas
xor
mov
aas
insb
jl
sbbl
xchg
sahf
add
inc
lret
popa
mov
sub
dec
lock
sub
push
xchg
sbb
movsb
cmp
pop
dec
jbe
mov
push
sub
faddp
mov
xor
loope
or
xor
mov
addr16
jae
mov
jns
and
in
into
pusha
push
mulw
and
nop
mov
jg
enter
or
pusha
rorb
jo
aad
mov
scas
cmp
std
pop
out
std
stc
pop
push
aad
mov
in
and
int
xorl
hlt
xor
dec
push
add
sub
inc
jb
push
or
sahf
ja
cmp
int3
out
lahf
sub
or
icebp
and
and
lods
or
mov
incb
add
push
push
xchg
or
mov
dec
data16
jae
xor
mov
out
nop
movsb
push
adc
or
popf
push
and
jle
push
mulps
movl
pop
pop
out
xchg
or
cltd
mov
jne
movsb
xchg
mov
push
xchg
pop
add
and
sbb
cmp
mov
cmp
fs
and
or
sub
stos
daa
inc
mov
push
push
adcl
loop
xor
lds
popa
into
mov
xchg
imul
dec
cmp
push
inc
cmp
inc
inc
xchg
push
jp
into
xor
lds
jp
hlt
cltd
out
cmp
stos
out
mov
icebp
lea
mov
insb
or
xchg
cmc
sub
sbb
addr16
aaa
shll
in
mov
push
lods
sbb
sub
mov
std
xor
jg
mov
and
lret
adcb
mov
repnz
repz
push
nop
aad
add
inc
mov
add
notb
xor
enter
jo
push
jg
popf
arpl
insl
cs
or
jp
sbb
mov
arpl
inc
aas
jae
jp
add
out
stos
imul
cmp
mov
loop
mov
outsb
stos
or
pop
xor
ss
inc
aad
enter
sti
adc
ds
dec
cmp
mov
sub
sbb
imul
xchg
mov
sub
cmp
sbb
call
or
ljmp
sub
inc
out
jecxz
inc
cli
cmp
aas
push
sahf
bound
cmc
movsb
mov
add
std
inc
nop
xchg
inc
ret
icebp
mov
vdivpd
ret
cwtl
enter
dec
mov
in
xchg
xchg
mov
aam
mov
cli
or
adc
pop
ds
mov
into
ret
xor
xchg
shll
sbb
out
imul
adc
xor
jecxz
cltd
pop
test
dec
add
mov
mov
test
adc
cmpsl
pushl
mov
aaa
inc
divl
lods
loop
in
sbb
or
or
ja
adc
jb
add
pop
xor
sub
test
cmp
adc
mov
add
mov
div
mov
sub
and
mov
mov
in
lock
xor
fwait
in
ljmp
sub
jne
leave
je
sub
sub
out
mov
mov
cmp
leave
ljmp
jb
jecxz
iret
xchg
cwtl
ja
jle
call
jb
pop
mov
inc
cmpxchg
adc
call
pusha
mov
cmpl
ja
cmpsb
sbb
rcll
scas
enter
out
int
xor
cli
fisubl
pop
mov
jl
mov
dec
jmp
xor
bound
push
mul
push
fdivrl
notl
pop
adc
push
ljmp
mov
add
call
lods
sub
xchg
lcall
out
sbb
ljmp
ret
cmp
pop
icebp
scas
sub
pop
pop
ja
xor
mov
call
bound
loop
sbb
jnp
out
mov
int
pop
mov
ret
stc
or
in
je
rorb
mov
std
ret
pop
int3
fiadds
in
movsb
pop
push
rcrb
jae
adc
push
jl
lret
cmp
cld
push
fsub
leave
stc
cld
mov
mov
mov
and
cmp
sub
cmpsl
or
sti
fildl
push
fwait
mov
jl
mov
push
inc
aam
dec
lods
fstps
loop
sbb
inc
pusha
adc
push
hlt
add
jmp
mov
and
pusha
aam
dec
popa
lret
lret
or
mov
and
ret
and
push
mov
fdivl
scas
fwait
add
addl
ficoms
sbb
jnp
aas
cwtl
ret
sub
sub
xor
sub
call
push
shll
out
int3
subl
and
pop
cld
nop
adc
xor
popf
dec
pop
jb
daa
scas
push
mov
cmpsl
dec
sbb
mov
aad
xor
frstor
stos
sbb
lds
shll
arpl
sub
mov
push
je
inc
add
pop
adc
push
hlt
inc
lods
xchg
das
sub
dec
dec
call
mov
mov
les
add
les
imull
push
mov
stos
inc
insl
lahf
inc
mov
xabort
es
xor
fucomi
mov
sub
or
adc
cli
pop
mov
jnp
aad
std
or
mov
xchg
and
negl
clc
aaa
jnp
push
pop
mov
xchg
mov
inc
orl
popf
inc
out
lock
push
dec
push
adcb
mov
out
cmp
and
pop
rcll
nop
pusha
mov
mov
into
fbld
sub
xor
or
dec
cmc
test
mov
sub
jecxz
pop
mov
and
movsl
pop
mov
pop
js
loop
inc
int3
loope
dec
sbb
stc
pop
mov
and
mulb
loope
pop
cmp
mov
pop
and
cmp
ud1
jmp
jmp
pop
dec
bound
adc
pushf
or
mov
test
or
adc
sbb
lret
cld
in
out
mov
mov
or
and
push
xor
imul
xlat
sarb
add
push
ss
inc
scas
lret
jo
cld
das
jecxz
or
jmp
pusha
cs
or
push
stc
loope
push
pushf
adc
adc
hlt
push
xchg
leave
and
jg
jne
adc
jo
mov
scas
xchg
pop
jne
sbb
into
pop
fstpl
jbe
jae
divl
enter
push
lret
adc
lahf
push
aad
fwait
lds
arpl
rcll
scas
sub
xor
out
inc
sbb
rcrb
mov
push
xchg
add
ds
cmp
mov
stos
mov
gs
adc
jecxz
or
sub
outsb
aad
es
pop
lods
lock
and
xor
cmp
nop
insl
jmp
jns
mov
jp
out
ficoml
les
popa
enter
mov
ficoml
jp
rcr
pop
sbb
cmpb
jb
sbb
int
fstl
les
fdiv
sub
pop
scas
fs
test
mov
sahf
dec
arpl
mov
or
loop
pop
stos
cltd
sbb
mov
hlt
test
dec
imul
loopne
adc
jmp
scas
andl
xchg
dec
push
clc
orl
pop
push
jle
xor
cld
inc
nop
mov
cli
int3
mov
mov
ss
lds
sbb
fistpll
jecxz
cmp
jge
test
lcall
mov
xor
or
loope
push
add
jne
push
loope
jg
lock
ds
sub
adc
incb
lea
dec
dec
push
xlat
or
sbb
dec
xchg
popf
ljmp
call
xor
and
xor
lcall
xchg
lock
enter
stos
dec
add
xor
mov
lds
inc
outsb
jmp
and
pop
pop
rorl
into
int3
mov
cmp
in
stos
out
pop
test
push
adc
stos
push
adc
dec
mov
jnp
data16
mov
sub
mov
push
add
xlat
ret
mov
into
push
lcall
jmp
scas
mov
pop
jae
stc
ret
mov
cmc
outsl
fsubrs
mov
out
loopne
aad
adc
imul
mov
repnz
and
push
clc
shrl
dec
add
test
cmp
incl
movsb
cld
lds
inc
adc
push
test
fnstcw
gs
mov
xor
sahf
das
mov
pushf
addr16
orb
adc
pop
sti
les
int3
outsb
das
pause
sbb
dec
xchg
fistpll
mov
je
mov
or
jns
mov
mov
pop
das
xor
addb
inc
push
daa
push
out
and
pop
xchg
out
jo
into
fistl
xchg
push
sub
shlb
in
and
fnstsw
lret
mov
jl
and
push
fsubl
push
ss
int3
ret
inc
mov
push
inc
dec
js
xchg
sbb
loopne
and
push
fwait
and
test
dec
cmp
mov
xchg
das
pushf
or
mov
sbb
add
das
mov
mov
lds
adc
call
mov
imul
cmpsl
gs
adc
cmc
scas
repnz
add
popf
mov
stos
cli
pop
pop
xor
lock
fst
jp
imull
ds
and
in
and
dec
out
add
ret
lret
jno
lea
aaa
xchg
add
or
add
loope
add
int3
enter
lea
test
jmp
pushl
dec
mov
out
sti
xchg
jb
inc
out
pop
cmp
jne
jo
scas
dec
fsub
inc
rcl
push
xor
mov
xchg
arpl
iret
jb
loop
icebp
cltd
stos
bnd
stos
jae
xchg
fdiv
push
cmp
mov
jecxz
mov
mov
nop
push
pushf
mov
sti
mov
mov
fwait
xchg
push
mov
ret
mov
insl
sbb
mov
mov
xor
xchg
movsl
push
jno
cmpsl
popf
fcoml
and
lock
aam
mov
movsl
dec
mov
das
insl
int
leave
jl
dec
bound
test
pop
push
push
push
xchg
fiadds
mov
cmp
sub
xchg
xor
lods
xchg
stos
into
orb
add
add
mov
adc
jbe
or
fnstsw
and
daa
push
adc
or
les
into
mov
cltd
mov
add
sbb
insb
mov
test
pop
andl
fnstsw
xchg
pop
jg
push
mov
jmp
cmp
sbbb
and
push
mov
mov
xchg
push
xchg
in
das
lock
jp
fsub
inc
sar
mov
call
aad
jp
and
pop
sub
inc
xor
xchg
jg
xor
dec
and
aam
sub
sub
inc
in
loopne
mov
enter
lock
cmc
pop
dec
add
and
cmp
shll
push
push
pop
lods
jb
fistpll
test
jno
dec
jae
push
xchg
lods
cs
mov
cmc
sub
jnp
stos
xchg
mov
sub
stos
and
mov
mov
inc
jns
and
xor
cmp
mov
lret
sbb
xlat
cli
mov
fcoml
out
bound
mov
fists
cld
jo
dec
fcoml
lahf
jbe
dec
xchg
push
test
stos
cltd
scas
pop
insb
jb
adcl
mov
push
in
or
ljmp
mov
and
leave
or
clc
push
inc
imul
loopne
push
arpl
inc
cmpsb
sbb
push
fld
sub
push
cmc
mov
and
adc
inc
mov
sub
repnz
clc
pop
xor
and
arpl
inc
lock
std
sbb
fwait
in
daa
mov
ds
dec
sbb
pop
mov
bound
and
andl
xchg
xor
mov
xor
cmp
mov
cmp
test
mov
mov
clc
xor
mov
xor
test
dec
pop
inc
xor
jl
popf
sbb
xchg
add
mov
xor
cmpsl
rolb
aad
push
xor
jge
pop
cmc
loope
arpl
push
int
mov
xchg
shr
leave
aad
adc
sbb
xor
jge
mov
add
lcall
dec
add
cmpsb
outsl
jb
push
lahf
pop
jge
inc
les
pop
stc
push
in
pop
xchg
or
mov
adc
pop
cmc
jo
or
dec
sub
mov
jnp
leave
cmp
in
lret
aam
js
sub
jecxz
loop
int3
cwtl
mov
andb
sbb
pop
and
or
movsl
dec
push
push
mov
aad
dec
fisttpl
addb
adc
add
mov
lods
out
and
ret
sub
dec
or
repz
sti
xchg
sbb
xor
stos
call
jae
mov
lcall
fsub
fiaddl
push
clc
jnp
dec
mov
pop
loope
pop
arpl
insw
push
mov
dec
mov
cmp
out
sub
pop
push
mov
movups
mov
xor
dec
push
jmp
outsl
popf
aaa
xor
jmp
test
xlat
push
mov
movsl
loope
lret
lods
scas
std
mov
dec
stos
les
cmpsb
and
inc
aaa
cmp
js
fiaddl
push
mov
popa
cmp
daa
xlat
imul
repnz
enter
jge
rcll
std
ret
pop
sub
xor
cmp
mov
hlt
outsb
xlat
jge
fs
in
ficoml
inc
sahf
xchg
mov
mov
push
mov
fisubrl
xchg
jb
mov
popa
icebp
adc
clc
stos
xchg
pop
aad
cmc
sub
pushf
insb
test
fs
je
scas
jge
into
sahf
xchg
movsl
enter
mov
je
lods
jle
inc
add
xchg
mov
arpl
add
xchg
scas
popf
add
pop
xchg
adcl
scas
sbb
lret
and
push
dec
jo
lea
lea
pop
xor
pop
gs
add
orl
sub
push
stos
inc
xlat
out
add
pop
and
or
mov
inc
fadds
adc
and
shll
push
jns
sbb
in
pop
repz
leave
dec
mov
cld
in
dec
sub
dec
subl
ja
out
cmp
sti
and
mov
ds
jnp
add
sbb
xchg
jo
ret
stc
mov
daa
and
cmp
pop
pop
cmp
pusha
insl
insb
cwtl
ljmp
aam
out
movsb
pop
stos
sahf
movsb
mov
xlat
or
data16
push
loop
mov
lret
addr16
mov
lahf
lret
bound
lods
mov
xor
lds
mov
jle
outsl
repnz
aam
ret
xlat
push
mov
hlt
mov
subl
out
jecxz
dec
and
jge
xor
sub
pop
fmuls
idivb
pop
xor
mov
andl
leave
mov
in
rcr
xor
xor
push
movsb
repz
pop
aas
xor
jnp
insl
in
adc
imul
js
inc
je
enter
push
mov
out
push
stos
fcoms
cmp
sub
push
push
pop
push
jle
jo
popf
xor
pop
cmp
xor
scas
popa
divl
cmp
jnp
fstpl
jle
pop
stos
fmull
cltd
xchg
mov
andb
cs
aad
dec
cli
and
je
imul
or
ud1
add
jnp
jecxz
jb
nop
xchg
sbb
repz
xchg
inc
ret
andb
mov
sbb
ds
repnz
cmpsb
test
gs
jp
fistpll
fidivs
iret
loope
in
je
xor
push
mov
push
cmp
add
xor
stc
inc
push
hlt
inc
xchg
sbb
dec
mov
push
mov
pop
jbe
adc
mov
sub
popa
shrl
in
into
push
jmp
sbb
cltd
test
jne
ffree
test
and
out
rclb
xchg
sbb
movsb
int
pop
clc
jno
jmp
xlat
or
pusha
js
mov
push
into
adc
ret
mov
add
nop
addr16
add
dec
dec
jnp
sub
xchg
and
or
insb
mov
and
popa
mov
pop
and
lea
les
pushf
lods
pop
pop
and
aas
inc
cs
pusha
push
dec
mov
jb
pop
xchg
dec
repnz
out
add
mov
fsub
mov
sbb
adc
movl
or
xor
pop
jmp
jge
add
push
fwait
adc
cmpsb
jnp
pop
add
subl
inc
fisttpl
loope
ja
mov
insb
xchg
mov
movsl
lahf
addr16
lds
aas
pop
jle
inc
add
popf
out
cmpsb
les
aaa
loop
jmp
outsl
out
ror
xchg
xchg
dec
mov
scas
pop
bound
test
rorb
inc
mov
stos
sbb
inc
mov
nop
jnp
test
sub
mov
cmp
pop
or
push
mov
iret
stc
adc
ja
std
xchg
sbb
sbb
int3
xchg
scas
or
push
repz
cmpsl
scas
push
mov
aaa
aas
dec
jnp
daa
adc
mov
ret
add
test
push
inc
insl
sub
push
cmp
das
add
or
sar
push
jmp
mov
and
lods
fstps
cld
inc
loope
xchg
aam
mov
call
sub
push
ljmp
sub
scas
fadd
fs
movsb
push
das
lock
aam
cld
sub
inc
xchg
mov
push
out
add
fs
fldenv
push
and
leave
iret
fsts
xor
xchg
cwtl
push
cmpsl
cmp
jmp
pop
pop
les
out
or
xlat
aam
or
sub
jae
pop
mov
lock
fbld
inc
sbb
add
fmul
addr16
fnstsw
jl
testb
and
sub
scas
sub
push
sub
and
pop
arpl
rclb
or
sti
push
xchg
pop
adc
lods
lods
push
push
cli
xchg
fdivp
xor
fwait
dec
or
outsb
jns
jnp
pop
test
lret
lods
add
ret
adc
lahf
cmp
enter
sub
xchg
iret
stos
repnz
inc
mov
pop
inc
lret
fsubrl
pop
fisttpll
movsb
in
orl
and
jl
out
xchg
push
or
push
dec
mov
pop
fs
sub
out
aam
xor
sbb
nop
mov
push
xor
and
je
daa
cmp
test
ret
lea
scas
insb
jp
inc
inc
pop
rol
adc
fdivrs
pop
ss
aam
lock
lods
in
lahf
in
pusha
cmp
pop
lea
cli
mov
pushf
cmp
jge
addr16
insb
mov
fldcw
add
cmp
or
es
stos
clc
push
pop
inc
rorb
mov
mov
push
inc
mov
cmpsl
xchg
inc
inc
mov
call
fs
cmc
addr16
stos
and
xor
dec
pusha
xchg
push
adc
pop
stos
inc
lods
enter
inc
sbb
repnz
lods
mov
add
in
xchg
xchg
das
mov
push
mov
aam
dec
jle
xchg
fstps
es
arpl
mov
lock
shrl
shrb
imul
adc
in
mov
push
sti
call
loope
lods
daa
inc
mov
mov
jo
cli
mov
push
dec
iret
movsb
orl
jle
xor
ret
push
ror
fs
push
je
xor
shrl
fistpl
in
in
fldenv
push
bound
stc
jo
lret
fisubs
lret
addr16
das
adc
jns
or
or
mov
out
fidivrl
sbb
pop
push
jle
aad
mov
mov
das
dec
mov
outsb
pop
add
insb
out
sbb
test
in
fcomps
ljmp
mov
or
dec
push
xor
mov
jbe
outsb
push
xlat
sub
xchg
inc
jp
ret
rclb
pusha
sub
pop
xchg
fistpll
adc
and
inc
aaa
mov
leave
repz
addr16
mov
sti
lock
inc
cwtl
shlb
sbb
dec
iret
mov
mov
sbb
dec
in
out
sbb
add
mov
fmulp
push
fnstsw
aad
dec
pop
pop
add
jecxz
nop
pop
mov
inc
pop
fidivrl
xor
lret
push
sti
jecxz
dec
xor
into
enter
popf
dec
pop
cld
hlt
jmp
fsts
xlat
or
scas
cmp
enter
pusha
test
adc
inc
dec
pop
notl
ds
cld
outsb
cmp
dec
cmpl
aaa
fidivl
or
inc
sbb
ss
leave
mov
sub
push
mov
js
cmp
dec
je
push
lods
push
and
loope
or
out
cmp
pusha
jns
push
mov
lods
lahf
insb
fisubl
sbb
inc
pop
sbb
mov
push
jle
lea
call
mov
adc
push
lea
dec
xchg
mov
leave
mov
pop
sub
loopne
jo
push
enter
dec
fists
fsubl
ja
sahf
cli
rcll
xor
jmp
jp
cs
repnz
pop
mov
iret
cli
ja
shll
std
ds
inc
pop
clc
cmpsl
arpl
push
fisttpll
ret
out
imul
stc
xor
and
jg
mov
jns
mov
mov
mov
pop
js
sahf
mov
sbb
das
mov
repz
cli
scas
std
cmp
mov
scas
lea
mov
xchg
mov
test
testl
ret
pop
mov
pop
sbb
pop
mov
jge
cld
stos
cmp
cli
push
mov
xorl
xchg
adcb
jno
loopne
pop
sbb
in
inc
divb
lock
jg
and
insl
sub
jecxz
out
jp
dec
and
sub
xor
ja
insb
call
call
ret
add
stos
mov
pop
rolb
sbb
into
movsb
rclb
mov
cmp
xchg
pop
mov
sbb
fildl
jmp
in
cs
adc
fs
lret
cmpl
push
xchg
or
xchg
in
nop
rep
mov
outsl
fmuls
or
les
xor
insb
mov
add
cmc
test
test
es
int3
stos
fsubl
ljmp
pop
imul
loope
mov
jmp
xchg
mov
pop
cs
cmp
jo
push
out
hlt
xchg
mov
sahf
test
jns
stos
mov
fstl
dec
fstps
push
and
and
test
ret
adc
iret
mov
push
inc
push
int
nop
pop
ficompl
push
and
arpl
fsubp
ds
mov
movsb
sbbb
in
cli
jae
test
dec
xchg
std
inc
adc
ret
lea
loop
mov
xor
aaa
insl
clc
loopne
or
fsubs
dec
pop
sub
mov
mov
and
cmp
inc
imul
inc
xor
and
jne
adc
cmp
or
xor
sahf
ja
cmp
pop
fstps
push
mov
ds
mov
jb
ss
outsb
aam
or
mov
jl
inc
daa
addr16
lods
insl
daa
or
and
pop
sarl
fstl
mov
adc
pop
sbb
bound
mov
add
ret
adc
push
cmp
orps
and
cmp
aad
xchg
sub
and
fcomps
pop
cmc
popf
lea
jnp
add
lds
sti
lcall
daa
jno
test
sbb
mov
inc
pop
popa
xlat
enter
push
pop
nop
cmp
bound
call
xor
sti
jg
cmp
mov
mov
out
insb
lret
pop
sub
cmp
push
adc
mov
adc
pusha
inc
sbb
mov
fdivrl
dec
enter
and
cld
lahf
out
add
test
jl
cwtl
mov
out
add
and
lock
loopne
jne
sbb
aam
mov
or
xorb
mov
clc
add
sbb
add
fists
test
or
jae
pop
jp
push
mov
mov
fidivs
push
addr16
fnsave
push
stos
or
sub
sub
out
mov
mov
inc
call
inc
xlat
dec
push
dec
adc
bound
pop
std
pop
lahf
sbb
xor
xlat
mov
lret
add
test
push
xchg
jne
or
xor
inc
and
jg
xchg
cmp
outsb
add
sbbb
add
ret
sbb
in
add
xchg
jae
dec
jmp
popa
mov
sbb
xchg
aam
cltd
stos
fistpll
ljmp
sub
adc
mov
pop
xchg
mov
push
insb
icebp
push
leave
pop
lahf
push
nop
clc
fistpl
mov
pusha
mov
pop
pop
sbb
jnp
mov
mov
cli
lea
mov
inc
ss
in
mov
inc
or
cwtl
or
int
mov
mov
dec
xchg
or
xchg
mov
arpl
paddsb
or
lock
jo
addr16
jmp
cmp
dec
jg
push
fdivrp
mov
inc
and
and
pop
add
xchg
cs
dec
xchg
aas
fadds
popa
loopne
loope
lret
sahf
xchg
xchg
fldl
shl
mov
in
cmp
pop
inc
pushf
out
mov
popf
add
jb
mov
insl
icebp
push
sbb
popf
lcall
jl
lahf
push
movsl
inc
mov
xchg
xchg
mov
in
mov
data16
cmp
or
test
scas
add
push
icebp
cli
push
xchg
dec
rorb
jg
and
insb
or
enter
adc
lret
xor
push
xchg
push
jb
adc
mov
das
daa
fs
stc
inc
push
adc
ret
fistpl
jmp
mov
popf
mov
mov
push
mov
nop
pop
jbe
enter
nop
cmp
fimull
xor
jl
sbb
out
pop
lea
cmp
in
out
mov
jo
and
scas
mov
cmc
divl
ret
std
mov
xchg
inc
dec
cmp
dec
out
out
sub
mov
and
outsl
xchg
lret
mov
xchg
sahf
jno
sahf
add
jo
cmc
loop
enter
lods
mov
addr16
loopne
mov
into
aam
je
adc
jp
fwait
pop
test
lds
ds
je
sbb
mov
cmc
aaa
inc
sub
push
jbe
dec
sbb
xchg
mov
jae
notb
into
in
fs
push
pop
push
movsl
gs
pop
adc
jmp
data16
adc
push
sti
mov
inc
pop
push
cmp
imul
jp
mov
fstpl
adc
mov
dec
mov
or
clc
xchg
sub
cld
and
repnz
xorb
imulb
sbb
sbb
xchg
scas
shrb
jg
aam
cmp
lcall
fldcw
mov
pop
xchg
dec
cmp
dec
out
ljmp
jno
jo
xor
sbb
cli
adc
lods
lcall
jl
mov
out
out
pop
jl
xchg
lock
fldt
aad
mov
aaa
arpl
movsl
lcall
ss
popf
xor
lock
xchg
gs
daa
sbb
xor
iret
js
cli
mov
out
sub
pop
repz
ficompl
unpcklps
in
call
jnp
hlt
out
xchg
dec
and
sbb
pop
bound
stc
ds
aad
shl
ss
mov
sbb
hlt
arpl
push
sub
and
xchg
inc
aam
dec
push
push
mov
das
push
loope
jb
push
and
test
iret
call
loope
test
mov
jnp
inc
mov
mov
out
jge
adc
xchg
das
push
bound
mov
incb
cwtl
rolb
adcb
push
and
inc
xor
lods
cmp
test
movsl
lret
stos
or
repnz
jo
into
lds
int
dec
imul
push
jge
fcomps
in
add
mov
lret
cmp
sbb
fistps
mov
leave
xor
push
in
inc
cwtl
mov
and
inc
sub
dec
sar
xchg
sub
pop
lcall
or
hlt
fs
in
scas
inc
jp
add
mov
movups
int3
nop
jmp
cli
push
movsl
call
xchg
cwtl
pop
sub
push
jecxz
clc
xor
add
test
fisubrl
push
adc
test
sbb
lret
xchg
or
inc
aaa
icebp
jg
int3
in
push
out
mov
lret
std
rclb
dec
repz
shr
inc
jmp
rcl
add
lods
ss
cli
cli
dec
js
add
fdivl
icebp
imul
xchg
jmp
and
ret
fistpl
int3
push
adc
sub
int
ljmp
jmp
push
jmp
fcoms
mov
inc
aam
pop
push
notb
add
push
int
mov
loopne
out
in
aad
enter
push
jl
lock
jge,pt
push
mov
mov
xor
into
push
pop
in
dec
shll
xchg
jg
dec
xlat
bound
iret
dec
loope
mov
dec
mov
mov
jo
mov
nop
pop
test
cmp
sub
test
or
jbe
fsts
div
icebp
cmc
insb
sti
movl
rorb
cmp
push
clc
mov
loop
sarb
cmp
fs
loope
sti
dec
test
leave
test
insb
pop
pop
cmpb
lret
sub
ret
pop
stos
stos
push
push
lods
movsb
aam
ret
mull
jle
movsl
fisttpll
xor
mov
adc
mov
pop
test
mov
mov
cmp
dec
fsub
or
gs
push
adc
aad
fistl
pop
rcr
out
push
pop
es
xchg
bound
pop
mov
cmp
shll
sub
hlt
xor
cmp
negb
imul
sbb
adc
adc
cwtl
arpl
sub
adc
mov
pop
or
stos
fdivl
mov
out
sbb
dec
and
mov
fucomp
and
pop
cmp
push
mov
cwtd
sbb
dec
test
pop
sub
pop
mov
imul
sahf
mov
cmp
lock
mov
shll
std
inc
jb
xchg
xlat
lds
mov
and
cltd
inc
pop
sbb
aas
xor
pop
or
aad
int
xchg
daa
xorl
pop
inc
lods
out
lods
negb
dec
cwtl
insb
mov
imul
and
fistps
ds
xchg
push
testl
mov
les
xchg
imul
std
push
scas
das
test
pop
mov
outsl
sbb
push
or
mov
add
mov
mov
add
test
lcall
ficoms
xchg
add
and
imul
dec
xor
xchg
pop
stos
add
dec
or
stos
xchg
stos
mov
mov
mov
test
xchg
mov
sti
cmpsb
insb
ficomps
push
pusha
jl
pop
mov
rolb
enter
incb
jno
orb
in
cmpsb
jbe
dec
movsb
fmuls
call
dec
jnp
jb
or
in
mov
cmc
dec
dec
lods
fdivs
mov
shlb
jp
or
jns
repnz
adc
cwtl
bound
aad
dec
fnstsw
mov
movsl
push
ds
aad
pusha
and
outsb
neg
cli
loop
test
mov
pop
inc
adc
sbbb
and
push
mov
push
outsl
cmp
xchg
mov
cmp
sub
mov
jae
mov
aaa
notl
push
or
adc
rolb
adc
ljmp
negb
cltd
dec
dec
mov
dec
fimull
jl
xchg
stos
mov
mov
adcb
sub
mov
dec
mov
xlat
inc
and
cmpsl
shl
push
stos
cmp
mov
int
mov
xor
repnz
or
jmp
js
aam
in
cmc
sar
leave
cmp
fldt
das
adcl
arpl
dec
and
pusha
loopne
adc
cli
rorb
adc
xchg
adc
pop
mov
dec
pop
xchg
xchg
scas
cmp
xor
inc
mov
or
and
mov
loopne
ds
ret
xchg
orl
sbb
jno
sbb
das
or
inc
jle
add
jp
in
cmp
iret
xchg
outsl
stc
mov
shll
test
push
dec
or
fbstp
into
aas
in
in
add
inc
bound
shrb
scas
mov
sahf
testl
xchg
cmp
mov
jno
mov
enter
aas
aad
jmp
in
and
hlt
add
not
push
dec
inc
outsl
pop
push
sub
scas
sbb
fnstsw
and
xchg
popl
loope
std
fcmovnu
adc
pusha
arpl
lea
push
sub
pop
pop
cwtl
add
js
mov
pop
and
fistpl
loop
scas
xor
jp
and
test
stos
std
and
jecxz
test
je
pop
mov
sbb
andb
nop
enter
jnp
ss
pop
inc
ljmp
cmpsl
dec
push
aas
push
mov
pop
ficoml
pop
out
or
fiaddl
cmp
cmp
dec
xchg
mov
mov
xchg
ficomps
xchg
ljmp
fstpl
repnz
add
lods
hlt
shr
icebp
jl
cmpsl
je
rorl
inc
test
arpl
jp
sbb
out
ret
add
icebp
addr16
xor
cs
popa
jo
xor
or
sub
pop
aaa
in
repnz
ficompl
xchg
imul
add
sub
adcb
iret
pop
js
or
inc
aam
and
ds
aaa
pop
sbb
sbb
gs
andb
mov
xchg
mov
out
mov
mov
pushf
mov
imul
out
rcl
dec
xchg
aad
mov
addb
xorl
adc
scas
or
push
xchg
sbb
enter
out
pusha
lea
adc
ljmp
fimuls
xor
or
stc
mov
adc
sbb
int3
std
pop
leave
nop
pop
cmpb
mov
cmp
adc
cmp
xchg
icebp
xchg
cmp
inc
data16
jmp
add
xchg
ja
fdivr
mov
push
sub
mov
and
push
mov
jne
loope
push
push
pop
dec
sub
sub
jbe
mov
mov
roll
push
jl
add
cmp
mov
repz
jbe
lods
pop
add
rorb
pop
bound
sub
push
addb
andl
cmpsl
cmpb
mov
xor
dec
std
cwtl
sbb
iret
pusha
mov
mov
pop
push
dec
xor
in
dec
hlt
mov
test
movsl
sar
xchg
xlat
cmp
sbb
js
int3
mov
pop
subl
and
andb
pop
neg
or
imul
addb
pop
jne
cmp
aad
pop
jmp
int3
out
lret
lods
fisttps
mov
js
jns
orb
jg
jp
or
pop
loop
fwait
sub
mov
sbb
iret
pop
dec
cwtl
movsl
xchg
outsb
inc
movsl
push
jne
sbb
sbb
sbb
outsl
add
insl
fbstp
or
jge
mov
sub
pop
shl
sbb
fucomp
jge
xlat
mov
mov
dec
fs
sbb
jb
mov
sub
mov
jbe
pusha
xchg
out
mov
sbb
sbb
mov
daa
xor
dec
imul
out
pop
nop
sbb
int3
ja
mov
and
adc
mov
int3
lret
sub
cld
inc
and
cmp
cmp
xchg
mov
rcrl
mov
out
xchg
push
jnp
in
fisubl
pop
sub
push
popa
cmp
test
in
cmpsl
xchg
push
jle
xor
fstp
lods
lock
mov
or
push
push
adc
out
addb
insl
icebp
loope
mov
jne
dec
leave
cmc
cmp
insb
or
stc
push
ja
jmp
dec
cmp
sub
ds
ret
mov
mov
aaa
and
inc
mov
enter
lret
and
jne
adc
into
jne
xor
loop
mov
mov
dec
dec
int3
mov
xchg
mov
repnz
sti
lret
lret
cmp
lret
pop
push
ret
mov
testb
std
push
inc
jg
out
lods
adc
xor
cwtl
cmpsb
outsl
sbb
inc
sbb
das
pop
mov
in
repnz
and
fsubs
cmp
jo
rcll
inc
push
push
jle
push
xchg
mov
cmp
jecxz
sarl
xchg
les
pop
pop
dec
adc
inc
lret
push
sbb
rcr
xchg
cltd
xchg
sti
aas
sub
mov
and
loopne
jecxz
nop
push
sub
mov
jecxz
out
cmp
jne
sbb
lahf
jbe
push
andl
aaa
dec
cltd
mov
mov
inc
pop
push
icebp
clc
in
jge
lods
insl
and
mov
push
jo
dec
jp
fidivl
cs
insb
sub
cltd
mov
dec
sbb
bound
shr
add
push
adc
movsl
push
insb
testb
mov
pop
and
les
sub
mov
aam
inc
ret
xchg
arpl
sti
mov
cld
mov
sbb
push
scas
mov
scas
out
sbb
pop
mov
cs
jbe
incl
dec
jne
and
push
xchg
scas
ret
repnz
sbb
jae
xchg
fisubrl
arpl
loope
loope
imul
mov
push
inc
inc
movd
jecxz
stc
fstpt
icebp
test
or
sahf
adc
loopne
loopne
sub
in
popf
fsubrl
mov
sti
loope
mov
mov
cmovne
or
xor
adc
adc
mov
rorb
pusha
adc
cmp
jae
insl
or
leave
mov
mov
sub
add
xchg
es
xchg
pop
loopne
dec
mov
sub
in
sbb
dec
push
inc
ret
dec
inc
jbe
inc
fst
pop
andb
dec
clc
pop
popl
pop
xchg
call
les
pop
pop
int3
int3
jl
js
dec
push
xchg
dec
mov
stos
mov
das
leave
xor
sub
mov
movsl
inc
in
int3
ret
sub
cs
jp
cmp
push
nop
mov
pop
pop
lcall
sub
dec
ljmp
cwtl
das
xchg
pusha
fiadds
mov
mov
out
outsb
insb
imul
lret
mov
sarb
and
imulb
and
push
mov
rcrl
loopne
mov
mov
sub
shr
fwait
lds
mov
inc
xor
movsb
aas
pushf
lret
push
fcom
pop
adc
sbb
mul
mov
xchg
iret
mov
icebp
and
ljmp
mov
in
cmc
enter
inc
cmp
ss
fcoms
xor
inc
mov
popa
les
xchg
mov
rcll
ljmp
add
dec
aaa
in
sub
popl
push
roll
xor
xchg
push
mov
xchg
lret
adc
dec
out
push
inc
movsb
push
lret
jp
sub
sbb
notl
cmpsb
aad
mov
int3
cmpsl
inc
pop
les
push
sbb
pop
stc
dec
lock
fnstcw
add
mov
mov
jmp
and
xchg
mov
lods
jo
cmp
loopne
int
cmpl
mov
pop
stos
mov
xor
adc
sbb
sub
orb
xchg
sub
in
mov
pop
lcall
lods
leave
xchg
cmc
sub
push
mov
imul
mov
inc
cmp
mov
enter
and
push
jbe
in
jno
rcrl
int3
xor
mov
cmp
jb
jle
or
cmp
out
bound
dec
mov
out
sbb
subl
jb
mov
outsl
dec
add
pop
adc
clc
jb
pop
cld
test
in
xor
or
mov
or
sub
jl
out
mov
adc
clc
adc
inc
sub
sub
push
pop
pop
repnz
inc
mov
loop
sub
inc
mov
dec
inc
loop
shl
add
add
fdivl
aas
dec
cmpsb
xor
or
mov
adc
jp
or
loop
lcall
out
lods
dec
xchg
ror
scas
ljmp
dec
or
pop
sahf
push
ret
mov
push
sarb
fldenv
test
xor
sbb
sub
pop
jmp
mov
pop
pusha
adc
jne
in
int3
sbb
lret
cmp
out
mov
inc
jns
ffreep
and
lods
sub
push
dec
pop
push
push
add
lods
jbe
bound
imul
cmc
xchg
and
add
test
insb
mov
mov
jle
dec
jbe
clc
test
mov
test
adc
inc
sub
sbbb
loop
inc
add
adc
addb
outsb
pop
cltd
inc
inc
ss
in
loope
cmpsl
or
ds
lret
mov
sub
pop
mov
dec
jge
sub
lcall
adcb
outsb
scas
mov
jmp
sub
sbb
repz
test
mov
pop
add
adc
iret
cwtl
xchg
mov
rcll
pop
xor
fwait
es
fidivrs
fstl
xchg
mov
stc
mov
mov
lods
mov
adc
outsb
jecxz
pushf
call
jae
aam
sahf
cmp
sbb
enter
loopne
inc
ds
arpl
sbb
daa
xorb
pop
pop
test
ss
insb
xor
sub
mov
dec
cmpb
pop
push
sarl
out
jo
insl
push
rolb
adc
cwtl
inc
dec
in
or
mov
push
repnz
xchg
insl
aas
sub
pop
inc
mov
mov
andl
int
jb
sbb
inc
jle
and
sahf
aaa
fildl
addr16
push
sub
hlt
bnd
rorl
push
jnp
sbb
lea
loop
mov
xchg
pop
sub
stos
ljmp
adc
das
inc
xor
mov
rol
std
mov
xor
repnz
xchg
mov
push
adc
hlt
add
add
push
or
lcall
mov
push
imul
mov
sbb
es
shrb
das
mov
sarb
xchg
shl
lcall
mov
clc
adc
out
mov
push
jecxz
repz
mov
js
dec
dec
pop
cmp
shlb
push
mov
fwait
adc
fldl
pop
lods
adc
mov
jb
and
out
add
pop
aad
mov
cli
dec
bound
and
imull
cmp
int3
dec
negl
xchg
sub
lret
lods
cmp
dec
roll
addl
cmp
nop
sbb
leave
insl
xchg
test
push
push
roll
xchg
dec
int
stos
xchg
shll
cwtl
es
push
mov
cmp
or
jge
push
fldl
aam
add
pop
negl
dec
sbb
ret
xchg
ret
hlt
movsl
inc
mov
into
mov
inc
cmp
scas
xchg
cmc
ret
loope
lret
mov
mov
scas
icebp
mov
fsts
daa
inc
and
xor
mov
popf
or
jecxz
test
add
xlat
xor
int
sbb
mov
pop
xchg
imul
pop
push
sub
fidivl
pop
jnp
adc
xor
pop
mov
sub
imul
rcrl
dec
inc
xor
mov
cmp
inc
add
push
push
mov
lcall
out
sti
push
mov
lahf
adc
fisubl
mov
ret
push
jg
jp
repnz
and
jno
divl
push
cltd
fsubrs
aad
movsb
push
leave
or
mov
fnsave
rolb
cmc
rorb
jb
test
ljmp
dec
fnstenv
xor
shrl
and
jle
xchg
cmpsb
xor
and
outsb
sbbb
sbb
in
imulb
shr
pusha
faddl
dec
sub
mov
cmc
lret
sbb
out
and
mov
icebp
iret
frstor
mov
pop
stos
cmp
les
dec
xchg
mov
repz
cmpsl
clc
sbb
sub
imul
addr16
clc
or
jp
lods
add
lahf
push
push
cmp
add
repz
jle
or
shll
mov
pop
pop
leave
add
jbe
sub
mov
jecxz
pop
xchg
adc
in
mov
jo
test
fwait
xchg
mov
and
sbb
int3
inc
cmp
notb
aas
dec
pop
or
stc
xor
ja
sub
fsubr
mov
xlat
scas
loopne
rcrb
into
add
fs
xchg
imul
jno
xchg
or
mov
out
fnstsw
rclb
shl
sbb
push
shll
mov
sbb
mov
sbbl
out
mov
nop
lods
loope
mov
aad
std
hlt
lea
leave
xchg
xor
inc
mov
aam
repz
pop
arpl
jp
loopne
sahf
add
cmc
neg
cmp
nop
jae
in
and
enter
lea
jae
push
aaa
loope
shll
xor
sub
dec
add
mov
repz
push
inc
popf
add
jle
mov
pop
leave
mov
and
and
fmuls
clc
jecxz
or
daa
pop
xor
jle
mov
rorl
xchg
popl
pop
imul
or
ja
cmp
dec
pop
jmp
and
fisubs
enter
enter
cmc
cmp
lods
out
push
fsubr
adc
das
add
movsb
mov
jne
mov
in
in
xchg
hlt
add
xchg
cmpsb
insb
ret
sub
sbb
pop
aaa
adcb
sti
dec
gs
sbb
cmp
call
mov
pop
fldl
jge
je
mov
je
paddq
mov
roll
repz
inc
pushf
sub
pop
std
jmp
repz
jg
xor
fdivrl
loope
in
ret
add
js
inc
xor
sbb
lods
fnstenv
add
test
dec
test
idivl
and
pop
cmp
and
mov
int3
adc
bound
jo
jo
xor
imul
iret
and
cmp
lock
roll
inc
or
scas
inc
mov
dec
mov
clc
push
mov
mov
loop
jg
data16
pop
mov
aad
push
add
cmp
mov
call
mov
and
xor
mov
or
push
movsb
jge
cli
jnp
imulb
mov
xor
sar
adc
add
jl
xor
jl
xchg
in
movsl
mov
adc
lret
push
sti
nop
mov
xor
add
or
dec
sub
inc
mov
mul
leave
sub
adc
or
mov
dec
aaa
pslld
mov
xchg
mov
push
fstl
sbb
dec
jno
mov
mov
out
dec
cld
pushf
test
repz
add
icebp
inc
cmc
add
push
daa
xor
das
xchg
mov
outsb
movsl
cmp
negl
dec
push
lret
inc
fwait
or
sahf
dec
shrb
and
pop
adc
mov
xor
loope
mov
jbe
nop
and
enter
dec
mov
and
cltd
cltd
in
ret
cwtl
pop
or
loope
mov
mov
mov
gs
fmull
stos
cmp
xlat
sbb
jnp
arpl
mov
cmp
test
cmp
stos
cmp
popf
fsubs
mov
xchg
jns
gs
pop
xchg
outsb
mov
push
pop
addr16
mov
inc
push
cmpsb
js
sbb
es
jo
pop
inc
jecxz
and
mov
and
mov
cld
hlt
lahf
decl
jno
sbb
cwtl
xor
pop
pop
push
mov
adc
mov
test
ret
arpl
sbb
xor
int3
xchg
scas
loope
mov
adcb
movsb
cwtl
mov
cltd
jae
mov
jnp
outsl
lret
int
test
jbe
repz
jl
outsb
aas
test
jmp
pop
in
fmull
adc
es
and
push
dec
sbb
xchg
push
enter
les
xor
mov
add
xor
gs
lret
adc
add
adc
ss
sahf
pusha
jl
mov
sub
subl
mov
in
sahf
adc
jnp
inc
shr
out
mov
mov
gs
sub
aad
ljmp
in
and
adc
add
xchg
loope
mov
mov
in
mov
enter
repnz
mov
pop
insl
cmp
je
lret
adc
xchg
ja
fs
sbb
stc
imul
sub
push
adc
repnz
pop
sbb
clc
ss
out
cmp
push
enter
sysret
xor
and
push
in
jns
aaa
jecxz
jb
mov
cmpl
mov
xchg
scas
adc
divl
mov
pop
and
xchg
movsl
aaa
pop
cli
cmc
inc
ja
sbb
mov
imul
mov
inc
sub
and
mulb
addb
cmc
lds
es
and
rol
es
movsb
mov
bound
test
dec
lea
lea
adc
imul
out
xor
hlt
scas
stc
cltd
dec
imul
repz
into
shlb
xor
lea
push
loop
or
and
cmp
sbb
nop/reserved
inc
imul
insl
jae
or
dec
jae
arpl
mov
mov
sti
ss
mov
pop
xchg
dec
addr16
bound
mov
xor
pop
clc
pushf
int
xchg
adc
or
outsb
jae
dec
push
jne
dec
inc
mov
sbb
mov
loopne
lea
mov
sti
and
inc
mov
xchg
pop
or
mov
cmp
into
fucomi
into
xorl
sbb
xchg
sbb
cltd
in
lock
stc
pop
add
shll
cmp
cmp
inc
test
jnp
push
push
rorb
xlat
call
loop
insb
adc
or
push
jae
mov
negl
loop
dec
jle
in
xchg
mov
pop
popa
dec
loopne
std
dec
int3
jo
cltd
add
jne
lds
fs
fstl
daa
bnd
cmpsb
orl
xor
negl
js
cmp
pop
sub
shlb
mov
test
cmpsb
cmpsl
loopne
mov
or
and
dec
cwtl
dec
les
adc
aad
movsl
and
mov
cli
icebp
in
bound
pop
call
inc
mov
movsl
int3
xor
jno
scas
and
xchg
lcall
popa
xchg
hlt
jmp
mov
and
push
sub
xor
push
pop
es
add
or
push
insb
and
cmp
mov
cmc
sub
push
pusha
mov
inc
popa
pop
cmpsw
rclb
jb
les
adc
mov
and
push
jne
sbb
cmp
sahf
icebp
jne
shll
xor
push
insb
lock
mov
jns
or
xor
jnp
in
mov
nop
stc
or
mov
jbe
cmovle
lods
test
int
in
shr
and
in
mov
jno
mov
sbb
mov
lods
pop
andl
sub
in
jmp
add
outsl
subb
out
inc
jae
fistpl
outsb
inc
in
out
fldl
pop
mov
push
lret
outsb
dec
cmp
mov
out
subb
lods
mov
mov
repz
and
lock
and
adc
in
pop
lea
rcrb
or
leave
xchg
les
cmp
rorl
mov
insb
xor
call
in
mov
repnz
jno
add
inc
shlb
pop
add
outsl
sbb
das
mov
push
fildll
cmpsl
mov
loopne
dec
mov
sti
mov
sbb
push
inc
fsubrp
and
fs
jmp
icebp
jle
rclb
sub
push
test
dec
out
out
jp
cltd
mov
ljmp
fucomip
sbb
fisubrl
sbb
inc
cwtl
dec
xchg
ret
xchg
ljmp
and
mov
sti
movsb
sub
sahf
add
and
lcall
shrb
icebp
sahf
enter
pop
mov
push
jg
xor
in
cmp
lcall
mov
int3
std
cmpsb
xchg
daa
cwtl
adc
sar
sub
add
out
fsubs
sub
imul
imul
pop
cld
mov
outsb
sidtl
jp
or
pop
add
push
adc
or
pop
push
iret
movsb
notl
aad
mov
mov
insl
push
or
inc
fnsave
jecxz
iret
adc
add
inc
cmp
je
out
jle
aam
add
divb
ss
mov
ret
das
repnz
jl
insb
ret
push
pop
and
pop
sbb
push
push
mov
aad
xchg
pop
sub
pop
mov
dec
outsl
mov
popa
push
in
dec
ret
insl
leave
adc
push
sahf
sbb
sub
lods
pop
or
lds
mov
fwait
cmp
mov
mov
mov
hlt
pusha
add
add
ret
pop
push
push
cwtl
dec
nop
hlt
vpaddusw
andb
cmpsb
fistps
add
inc
dec
inc
jo
icebp
js
enter
in
push
aas
cmpsb
sub
movsb
sbb
pushf
loop
jnp
add
mov
push
inc
xchg
dec
jbe
les
adc
test
stc
xor
and
push
jp
arpl
push
inc
pop
in
es
mov
call
jp
add
xor
sbb
mov
push
fs
sub
js
decl
inc
cmp
shlb
repz
jg
push
clc
stc
clc
cwtl
mov
xorb
inc
stc
mov
cmpsl
rcrl
jns
cmp
lock
sub
mov
loope
add
sub
rol
imul
inc
inc
popf
sub
xor
mov
cmp
sub
push
cltd
push
xchg
or
inc
int3
push
or
dec
std
pop
jge
sahf
xor
cmp
jno
xchg
test
clc
cmp
scas
test
sbb
pop
lcall
adc
in
lock
adc
jmp
push
stos
sahf
or
xor
xor
jnp
or
add
repnz
adcb
in
stc
xchg
sbb
sbb
xchg
out
xchg
push
cmp
jecxz
adc
pop
mov
lock
lods
scas
or
insl
test
adc
fwait
loope
aad
sbbb
pop
inc
inc
and
imul
ja
xchg
shll
mov
push
xlat
and
add
mov
add
xchg
lods
and
imul
add
lahf
rep
inc
mov
jns
jbe
sbb
and
std
ljmp
decl
lds
fstps
add
out
gs
xchg
sbb
jnp
inc
jb
mov
pop
adc
and
sbb
jae
jge
imul
repz
cmp
fs
gs
stos
fimull
jl
sbb
xor
mov
sbb
test
mov
mov
mov
inc
push
cmc
ret
imul
cmpsb
mov
sbb
sub
dec
add
outsb
push
xlat
and
test
filds
push
jno
inc
ljmp
cld
jle
loop
lcall
fdivrp
cmp
ds
pushf
sbb
je
data16
scas
mov
mov
xchg
xor
sbb
jg
scas
inc
mov
dec
xor
je
jecxz
sub
xchg
pusha
cmpsl
js
push
xchg
into
pop
lret
jb
pop
add
push
fldl
pop
cmpsb
add
repnz
sbb
daa
insl
inc
jl
and
mov
shll
mov
fistl
movsl
fists
mov
cld
sbbb
icebp
mov
push
dec
push
xorl
jp
push
stc
mov
mov
lcall
sub
in
dec
cwtl
adc
in
cmpsb
jmp
cmpsb
lcall
mov
xchg
iret
mov
pop
cmp
aam
jmp
xchg
add
and
mov
and
xchg
nop
imull
xchg
test
dec
or
in
dec
aad
rolb
sbb
pop
popf
pop
adc
in
movb
mov
aas
sub
jae
pop
pop
decl
sbb
or
cwtl
fs
sub
movsb
arpl
loopne
xor
ret
pop
xor
mov
xadd
mov
pop
fs
adc
int
orb
out
pop
lret
in
sub
push
cld
shlb
mov
mov
xchg
outsb
popf
int3
repz
mov
xor
ds
int
mov
add
sub
clc
or
adc
sub
ds
mov
scas
lret
out
sbb
inc
dec
jmp
jno
les
dec
xor
int3
push
sub
lds
pop
ss
dec
push
mov
mov
sbb
outsl
stc
lea
test
mov
mov
movsb
pop
jmp
adc
pop
dec
xor
or
notb
inc
aas
sbb
fiaddl
dec
adc
in
lock
dec
aaa
inc
mov
add
dec
xchg
aam
mov
enter
fldenv
jp
ds
inc
pop
and
or
mov
dec
jmp
inc
scas
cmp
insl
and
or
push
and
mov
mov
outsl
xlat
xlat
mov
xchg
pop
lcall
sub
std
add
sbb
dec
push
or
ljmp
jp
sub
fisttpll
xchg
jp
mov
sub
add
cld
dec
aas
lds
test
adc
jbe
push
lods
call
popf
popa
mov
jb
mov
mov
shlb
outsl
push
movsl
jge
out
cli
popa
lods
mov
adc
test
pusha
test
xor
lret
jns
outsl
pop
jne
aad
pop
jno
jnp
push
sub
fisubl
repz
ja
push
fcoml
and
jns
lock
xor
scas
pop
xchg
xchg
push
shrb
add
imul
or
mov
shr
and
cmp
mov
sbb
push
stc
loope
and
sbb
push
push
xor
aaa
lods
pop
sarl
lahf
mov
cmp
dec
in
out
add
int3
or
jne
popl
pushf
jnp
aaa
roll
in
fs
into
aas
and
movl
push
outsl
jmp
rcrb
pop
mov
out
pop
xchg
repnz
sbb
lock
and
lock
je
mov
fiadds
outsl
pop
data16
test
push
inc
add
jl
lods
out
dec
jmp
cwtl
sub
hlt
adc
dec
push
and
loopne
jecxz
ficomps
rclb
mov
sahf
sub
jnp
and
pop
popa
lds
xorl
shl
inc
or
inc
jns
imul
xchg
movsb
xchg
sti
mov
out
mov
push
out
mov
mov
ret
adc
outsb
insb
sbb
sub
sbb
cli
outsl
loope
jnp
daa
shrl
int3
lods
xor
xor
jae
xor
adc
daa
inc
in
push
int
adc
scas
popf
jb
ret
add
and
incb
or
xchg
adc
jp
lods
enter
push
mov
and
sbb
add
rolb
jbe
out
in
dec
adc
push
adc
mov
mov
jb
pop
inc
add
cmp
cmp
cmc
inc
pusha
aas
incb
jmp
push
gs
cli
inc
in
mov
push
fidivrs
scas
inc
mov
inc
scas
nop
jmp
dec
add
mov
cs
push
xor
test
loop
or
push
or
adc
les
mov
sbb
addr16
call
lods
or
imul
arpl
lods
iret
cld
inc
pop
fisubrl
or
loop
mov
mov
jb
jnp
stc
into
inc
push
mov
and
cmpsb
jbe
out
iret
adcb
push
mov
mov
jb
sahf
in
ficomps
loopne
and
and
jge
sti
jp
jo
outsb
pushf
ret
insb
dec
cwtl
loope
loop
fisubs
fnstcw
inc
rorb
pop
cmp
sbb
xor
dec
push
in
loop
pop
sbb
sub
nop
jb
push
lret
pop
mov
cmp
push
fidivl
decb
mov
jp
divl
cmpsl
jge
and
sbb
lret
mov
xor
adc
stc
into
mov
add
fstpt
jmp
and
push
insb
mov
fstl
pop
xor
in
sbb
inc
push
sbb
push
adc
mov
mov
jp
mov
inc
fnstenv
cwtl
xor
inc
call
fxch
adc
push
cmp
mov
into
ss
xor
cltd
cmp
sub
arpl
cmp
daa
dec
jae
loop
fsubrl
dec
mov
push
mov
adc
push
xor
dec
das
jle
adc
sub
jb
and
xchg
aad
cmp
cmpsb
cmp
pop
sub
aam
out
fsts
cmp
loop
into
in
lret
xor
adcl
lock
dec
inc
mov
cs
fs
xchg
into
mov
push
pop
nop
cmp
and
fs
flds
stc
mov
jge
add
sti
push
push
lods
jl
aas
cmp
imull
push
pop
inc
xor
sbb
sub
mov
sti
xor
inc
mov
jno
loopne
cmp
ret
outsb
loop
adc
mov
or
push
xlat
cmp
mov
fstpl
scas
adc
out
adcb
nop
cli
std
sub
dec
insb
fs
out
daa
test
xor
jmp
add
cmc
out
out
movsb
push
sub
bound
jae
push
add
push
dec
pop
sbb
jno
js
leave
stos
out
pop
push
arpl
into
sbbl
popa
xor
or
hlt
sub
pop
jno
push
lods
arpl
hlt
cmp
loope
mov
add
push
pop
lret
mov
mov
sub
cmp
pop
inc
pop
mov
xor
test
shlb
mov
mov
push
push
xchg
out
adc
and
add
je
lods
jns
mov
xor
push
push
outsl
leave
cwtl
mov
lock
dec
xchg
xor
adc
jecxz
and
mov
test
jle
mov
rcrb
pop
popa
shr
notb
test
das
in
addr16
out
lock
cmpsl
arpl
inc
or
popa
xchg
icebp
fsts
inc
push
notb
dec
sbb
jne
fiadds
cmc
pop
push
dec
cmp
in
and
xchg
int3
jl
dec
xor
stc
lahf
divb
jge
loopne
pusha
cmp
add
lahf
dec
into
jb
xor
adc
ljmp
or
jns
outsl
dec
mov
mov
jl
lods
add
sub
adc
mov
scas
arpl
xchg
adcl
xlat
lods
xchg
jg
or
xchg
std
push
pop
and
pop
cs
push
adc
scas
pop
int
je
insb
jmp
and
mov
jbe
cmpsl
xor
xchg
pusha
out
pop
push
nop
cs
je
push
lret
lahf
pop
in
cmp
into
sti
jne
mov
sbb
jle
jne
movsb
pop
loop
fsubl
or
pop
push
and
loopne
and
ds
or
daa
std
inc
xor
xor
sarb
fcmovnu
mov
xchg
add
xor
sahf
sbb
mov
sarl
jle
mov
imul
pop
leave
jb
jo
sbb
jo
data16
imul
xor
inc
int
mov
pop
in
addl
insb
pop
or
dec
stc
jg
into
dec
sub
push
or
add
xchg
std
mov
xchg
loopne
add
jb
jns
jae
fidivl
inc
shll
shrl
mov
mov
xor
jns
mov
stc
or
add
xchg
jno
push
rcrb
out
es
push
repnz
or
inc
lock
cmp
lods
test
lahf
lods
dec
mov
xor
or
jle
xlat
cmp
or
roll
pop
mov
fs
test
in
jmp
lea
sub
xor
out
and
mov
dec
adc
test
stc
std
cli
xor
hlt
roll
lds
jbe
int3
ret
push
testl
or
pop
imul
int
add
jbe
xor
sbb
xchg
push
jg
enter
clc
cmpsl
bnd
fcmovu
xchg
or
pop
jae
push
jge
fbld
sub
sbb
cmp
into
imul
in
sub
out
lret
and
push
call
dec
imul
inc
in
je
and
fdivl
and
lret
adcl
mov
mov
loopne
xor
js
call
and
test
icebp
xchg
pop
mov
lahf
sbb
inc
into
repnz
mov
dec
or
iret
sbb
shl
rcrb
ss
sarb
lret
das
inc
sahf
pop
rcrl
jge
sub
lea
sti
das
in
mov
jo
out
nop
les
lea
clc
adc
enter
out
jae
sbb
repnz
xchg
mov
xchg
pop
fiaddl
pop
adc
out
push
cli
push
idiv
pop
fs
push
sbb
push
push
sbb
fs
or
add
mov
in
xchg
mov
les
sub
divb
sbb
xor
jb
inc
out
rcrl
shrb
hlt
mov
push
mov
sbb
icebp
in
sar
mov
lods
es
outsb
xchg
pop
in
add
sub
push
xor
repnz
xchg
pop
xchg
or
inc
adc
int3
adc
pop
pop
jae
not
shrl
jo
sub
inc
hlt
in
and
shlb
sbb
adc
cwtl
push
mov
mov
xor
mov
xor
cld
jbe
mov
roll
sbb
lock
out
jmp
out
loope
push
cwtl
fldenv
pop
clc
jne
in
xlat
xor
sbb
jmp
mov
and
movsb
adc
mov
call
jne
cli
gs
add
popf
mov
imul
je
xchg
dec
fidivl
xchg
mov
cmp
inc
pop
les
in
test
aam
pop
xchg
aam
jbe
es
repz
mov
in
std
mov
add
jl
push
iret
add
mov
or
add
fbld
pushf
gs
sub
sub
and
jge
fsubp
inc
and
movsb
push
pop
inc
daa
aas
push
jle
imul
ds
hlt
ret
mov
cltd
les
aas
add
mov
aad
mov
dec
aam
xchg
pop
inc
xchg
pop
pop
repz
daa
aas
leave
sub
or
sbb
add
int
incl
pop
orb
add
call
mov
dec
fidivl
mov
sub
and
insb
mov
xor
sub
leave
mov
xchg
rorb
ja
imul
pop
fisubrs
fdivs
push
ljmp
outsl
inc
aad
mov
sbb
loop
clc
pop
out
xor
xchg
outsb
push
cltd
f2xm1
adc
out
adc
cmp
scas
mov
cmpsl
xor
pop
rcll
sub
enter
pop
sbb
jns
andl
and
dec
into
in
xor
mov
insl
sbb
outsb
cmp
test
decl
shr
dec
sbbl
loop
adc
or
pop
in
mov
and
in
sti
xchg
xchg
in
mov
in
test
and
xor
dec
sahf
hlt
lods
mov
les
sub
loopne
pop
xchg
scas
mov
dec
stos
push
fstpl
stos
out
or
push
jge
cmp
ljmp
out
adcb
pop
sbb
cmp
aas
xchg
loop
inc
dec
cmc
fnstsw
es
jp
daa
shrb
jl
shlb
mov
loop
lock
leave
nop
cld
mov
xchg
insb
jg
xchg
repnz
dec
xor
push
sbb
xchg
mov
fcmovu
sbb
pop
dec
out
mov
adc
push
fisubrl
or
movsb
dec
fidivrs
mov
cmp
outsb
je
mov
push
repz
ds
add
cwtl
push
jnp
stos
xchg
repnz
mov
pop
add
inc
push
movb
dec
sub
mov
mov
or
aad
and
mov
stos
shl
orl
pop
fistpll
int3
stc
xchg
xchg
stos
das
cmp
or
popa
push
lret
cwtl
xorl
jb
flds
std
enter
ds
inc
push
aad
or
icebp
inc
and
push
mov
cmp
or
add
jo
fsubr
push
sti
les
add
mov
fisubrs
pop
popa
push
sarb
lret
xchg
out
jl
daa
mov
loope
add
sbb
shrl
inc
xchg
mov
arpl
into
dec
loope
sub
sbb
pop
mov
popf
flds
mov
pop
xchg
test
iret
xchg
std
pop
out
add
arpl
jp
fwait
movsl
xchg
or
push
cmp
inc
hlt
dec
popf
scas
out
call
in
insl
jnp
pop
mov
push
push
sahf
xchg
insb
ret
sub
test
popf
es
lret
sub
xchg
jmp
das
xor
int
cs
mov
mov
cmp
mov
insb
pop
cmpsl
inc
mov
mov
rorb
out
add
icebp
jns
out
aas
mov
bound
push
mov
mov
in
jnp
sar
lods
aad
test
test
arpl
sub
popa
mov
jp
mov
jae
cld
xchg
es
and
sub
mov
pop
repnz
shlb
xchg
and
add
sub
jmp
mov
or
push
mov
test
inc
and
mov
jp
push
imul
aam
shrb
jae
enter
mov
xchg
xchg
lret
xchg
jae
insl
pop
fildl
or
push
or
fimuls
bound
stos
insl
frstor
hlt
mov
jnp,pn
jns
xchg
xchg
or
mov
xchg
fistl
fwait
jb
leave
mov
jecxz
cmc
ss
pusha
mov
inc
fidivrs
push
enter
or
fcoms
xchg
mov
add
popa
iret
in
or
repnz
jno
cli
daa
mov
cmp
add
test
shl
and
mov
cli
jne
leave
outsb
icebp
jmp
pop
in
inc
mov
xchg
leave
call
ds
xor
test
ficompl
xchg
fwait
mov
enter
cltd
jecxz
push
pop
mov
add
scas
xchg
add
fistps
push
popa
pushf
mov
cli
notl
xor
bound
jecxz
mov
push
dec
in
sub
fstl
xchg
movsl
jb
mov
daa
cmp
cmpsb
xor
jp
mov
mov
mov
lret
mov
inc
imull
mov
mov
arpl
loopne
xor
mov
daa
mov
in
jae
outsb
loope
adc
sbb
cmp
mov
popa
std
nop
and
shrl
xor
rol
outsl
push
lock
pop
rclb
ret
inc
mul
inc
or
mov
pop
je
lods
jp
sahf
dec
fisubrs
xor
rol
stos
iret
xchg
push
or
mov
outsl
mov
cmp
jnp
js
dec
cmp
jnp
lret
inc
fcomps
cmp
test
inc
mov
inc
inc
outsb
adc
xor
sub
sbb
pop
fists
mov
testl
sbb
or
sbb
sub
or
pop
jb
adc
xlat
pop
loope
pop
insb
int3
outsl
push
adc
mov
movsb
push
push
aas
mov
lcall
pushf
mov
jns
ret
inc
in
insb
dec
adc
je
hlt
test
ljmp
push
xchg
sahf
add
aad
mov
mov
repz
mov
sbb
cltd
fs
ljmp
leave
lret
arpl
and
dec
sub
jl
mov
jp
xchg
fcmovbe
push
jns
fsubl
inc
fcmovnu
push
mov
cmpsb
mov
repnz
cwtl
sub
dec
test
int3
mov
dec
sbb
shl
pop
mov
xor
pop
pop
nop
jns
adc
cs
movsb
inc
mov
push
mov
sub
outsl
xchg
iret
jb
pop
ljmp
add
push
cld
fdivrs
inc
hlt
outsb
test
data16
loope
adc
ror
outsl
push
jge
mov
mov
sub
fnsave
out
push
shr
fistpll
sbb
loop
add
clc
sti
int
lods
adc
or
mov
push
ljmp
fwait
lods
push
xor
clc
fisubrl
shlb
pusha
dec
ret
push
sbb
mov
adc
js
push
push
cli
and
mov
xor
xor
fdivs
int3
and
or
sub
pop
push
inc
mov
xor
add
stos
out
mulb
pop
xor
flds
imul
jnp
xchg
ret
nop
stos
mov
out
dec
push
data16
mov
xchg
jo
inc
aaa
popf
outsl
dec
xchg
into
and
fistpl
mov
jmp
lods
push
pop
cmpsl
icebp
test
pop
lcall
daa
sbb
and
xorl
lods
push
cmp
xchg
scas
gs
or
jmp
aas
adc
inc
push
mov
adcl
mov
lret
add
loopne
add
fistps
cmp
xchg
mov
mov
mov
inc
push
xor
pop
adc
mov
or
pop
loope
cwtl
push
adc
add
scas
mov
and
cmp
lea
adc
clc
bound
lcall
cmc
aam
loope
data16
mov
icebp
jmp
insb
pop
sbb
jecxz
add
ficoml
data16
mov
and
jne
mov
jp
push
xchg
call
ffreep
cmp
jne
std
sub
jmp
lahf
out
lahf
jns
aam
push
jb
mov
call
inc
mov
imul
cmpsl
mov
lahf
aam
icebp
or
and
scas
outsb
pop
or
push
lret
inc
aam
jno
dec
jmp
orl
or
inc
mov
cmpsb
xchg
mov
mov
push
aad
mov
adc
dec
mov
std
jne
shlb
addr16
les
out
add
pusha
imul
adc
and
push
movsl
test
aad
mov
xchg
mov
sub
xlat
ss
add
fninit
jg
dec
mov
int3
repz
cmp
sbb
lds
sub
mov
test
cmp
sub
push
pop
test
sti
mov
outsb
sub
inc
push
sub
bound
xchg
out
xor
aam
lods
mov
sub
sahf
pop
pushf
adc
jl
jp
sub
fistps
push
sbb
std
or
decb
movsb
sbb
xor
testl
invd
out
iret
add
cli
shlb
hlt
pop
ror
int3
sub
sub
adc
adc
fimuls
roll
out
stos
dec
sarl
sbb
push
gs
and
xchg
test
je
mov
fstpl
pop
mov
into
stc
and
push
repnz
std
out
fisubl
movsl
inc
mov
es
push
cmp
dec
mov
xchg
mov
push
mov
popa
or
xchg
sbb
outsb
stos
xchg
jne
enter
dec
into
iret
jnp
std
or
mov
dec
scas
push
xor
sbb
adc
cmp
test
sub
sbb
and
xchg
rcrl
xor
push
fs
inc
imul
outsb
mov
stc
int3
xchg
in
mov
cwtl
mov
out
addr16
cld
sbb
jns
add
stc
shll
sub
nop
adc
pop
lcall
in
sub
adc
fnstsw
inc
add
pop
mov
scas
push
add
sub
das
pop
clc
imul
xchg
xor
into
sub
popf
fmull
jle
lods
cmp
cmc
inc
jp
rcl
fisubl
inc
or
pop
push
ss
movsb
sti
fwait
or
xor
mov
fisubs
jnp
add
inc
mov
je
insl
shrl
and
mov
xor
in
in
push
pop
sub
and
mov
pushf
mov
add
push
sbb
jb
in
sub
cmp
push
push
nop
jbe
lcall
jo
pop
jb
lods
sbb
mov
mov
cmp
dec
mov
jbe,pn
stos
scas
hlt
shll
fsub
adc
mov
cmp
test
lret
push
rcrl
sahf
fisttpll
shlb
push
out
and
mov
icebp
sub
xor
stc
cmpb
add
inc
inc
xchg
into
arpl
in
push
pushw
mov
cmp
cmp
inc
push
mov
aam
dec
add
sbb
ret
repnz
clc
mov
xchg
mov
je
ror
daa
push
mov
jge
mov
cmp
jbe
dec
xor
jbe
jae
push
outsb
push
out
cmp
subb
jecxz
jmp
jmp
imul
lock
lret
std
dec
cmpsl
insl
xchg
mov
mov
cmp
xor
pushf
jmp
xor
jge
ljmp
addl
bound
iret
xchg
out
push
push
sbb
mov
adc
dec
arpl
aaa
push
fucomi
fwait
int
xorl
das
jmp
js
orl
loopne
fistps
bound
cs
inc
xor
jno
mov
fucomip
and
cmc
cmp
scas
jbe
cmp
test
loope
xor
mov
lock
sub
sub
fcomps
ret
dec
call
aaa
sarb
jle
gs
jl
sahf
jbe
xchg
push
cmp
fbld
fsubl
and
mov
pop
dec
fstpl
mov
jno
mov
sub
icebp
or
cmc
jne
or
sub
dec
cs
mov
sub
dec
and
daa
push
sbb
mov
jbe
iret
add
int3
hlt
push
repnz
in
jne
adc
pushf
sbb
in
fcompl
mov
loopne
push
sbb
not
daa
arpl
adcb
push
cltd
pushf
adc
insl
out
sub
pop
push
test
fdivrl
xor
push
inc
add
or
xchg
push
loop
std
pop
inc
movsb
mov
fsubrp
xchg
stos
pop
dec
out
aad
sbb
jb
sub
or
aam
rcrb
adc
inc
aam
stc
sbb
lret
outsl
cmp
adc
mov
pop
ret
in
test
sarl
mov
push
mov
cmc
sbb
repnz
insb
push
fstl
mov
aas
cmpsb
sub
clc
scas
push
push
mov
paddq
or
mov
iret
mov
aad
fdivrs
inc
cmpb
xchg
lods
je
test
cmpsl
dec
in
in
mov
repnz
adc
or
inc
jg
mov
xor
repnz
adc
sbb
mov
dec
hlt
sbb
lret
rcrb
je
jl
mov
addr16
test
push
js
insb
addb
xchg
and
and
lcall
fmulp
adc
sub
cmp
nop
lahf
bound
xlat
mov
hlt
jb
inc
aad
xchg
mov
loopne
sbb
inc
mov
imul
lret
sub
sub
in
test
mov
mov
mov
cs
mov
mov
jbe
stos
aaa
push
push
sbb
stos
pop
jnp
repnz
pop
jb
iret
cmpsl
cmp
and
cmc
jle
mov
mov
mov
push
and
xchg
loopne
xchg
xchg
rorl
bound
sbb
xor
out
in
mov
shl
shl
dec
clc
rol
lods
dec
cmpl
gs
in
or
inc
ret
aad
mov
mov
jb
push
rdtsc
dec
pop
and
or
fld
inc
iret
jns
push
mov
dec
fiaddl
rcrb
loope
in
aad
scas
cmc
sbb
mov
popf
cmp
int
dec
cld
jno
xchg
scas
ds
lahf
mov
sbb
lea
jne
aam
pop
lret
cmc
repnz
sbb
pusha
loope
push
sbb
pop
rolb
add
test
cmc
insl
pop
sbb
int
mov
pop
cmp
sbb
xchg
cmp
lret
push
lea
or
cmp
dec
dec
xor
dec
aam
ljmp
imul
sbb
mov
aad
push
shlb
andb
lahf
leave
gs
mov
adc
out
lret
mov
jbe
mov
mov
lock
add
jl
fisubl
xor
lcall
sbb
jg
mov
adc
xchg
cli
jle
ss
inc
inc
xchg
inc
sbb
xchg
mov
hlt
je
je
sub
add
add
out
scas
stos
nop
es
mov
or
cli
add
ficomps
or
xchg
jbe
cmpsl
ds
sbb
xchg
sub
add
dec
arpl
jae
pop
adc
loopne
stos
bound
push
icebp
jge
out
out
lahf
mov
shlb
iret
lock
mov
mov
adc
jl
pop
sub
add
loopne
cmpl
cli
stos
ja
cld
popa
xchg
inc
insb
mov
inc
aad
and
shlb
cmpsl
aaa
sbb
icebp
je
scas
xchg
add
and
insl
out
orb
sbb
push
test
sti
ds
inc
in
cmp
adc
cmpsl
daa
jmp
aaa
xor
inc
mov
es
insb
aas
lret
int3
lahf
imul
pushf
mov
call
rol
and
push
jno
hlt
pop
sahf
iret
mov
lock
out
cwtl
mov
jne
mov
xor
sarb
dec
sti
mov
je
int3
xlat
call
sub
xchg
lret
adc
dec
cmp
jb
pop
data16
inc
shlb
inc
jle
adc
push
jle
sub
inc
scas
push
into
push
in
clc
inc
cmp
loopne
mov
fsts
push
je
shrb
xlat
push
fistpl
jne
or
lods
imul
pop
out
inc
xchg
es
in
data16
cmp
lods
dec
aam
cmp
jne
pop
hlt
cmpsl
outsb
pop
cmp
fsts
fidivs
mov
push
mov
xchg
shrl
roll
fst
lcall
lods
test
pop
rorl
rorb
hlt
push
cltd
pop
sbb
clc
imul
scas
sub
jge
xor
dec
rcrb
jle
scas
adc
and
es
subb
dec
pusha
hlt
mov
adc
dec
xor
daa
sti
mov
mov
stos
xchg
pop
pop
sbb
sbb
mov
ljmp
add
mov
mov
test
loopne
int3
inc
push
aad
cmc
into
mov
cmpsl
ret
adc
xchg
aaa
cli
add
loope
xor
fldt
setnp
cmp
xor
cmp
push
mov
test
lahf
rclb
shll
sbb
lret
insl
or
sub
fldenv
mov
sub
push
dec
add
enter
movsb
xor
adc
mov
lahf
scas
pusha
pop
jno
or
ret
test
aas
xor
data16
mov
lret
add
rorl
push
adc
fnstenv
mov
mov
mov
mov
sbb
xor
dec
lock
or
int3
or
lcall
push
cmp
inc
xor
rcrb
cmp
fs
xor
mov
pop
out
pusha
sub
aad
aam
dec
sahf
inc
pop
cmpsb
lock
out
fdivrl
sarl
enter
inc
adc
ljmp
pop
adc
cmpsl
fs
push
pop
jae
outsl
iret
addr16
adc
repz
add
sti
sbb
js
mov
lods
outsl
les
sti
cmp
inc
notl
or
clc
jnp
jle
cmp
clc
push
lret
lods
fs
inc
cli
rcl
call
xchg
push
das
cld
mov
dec
jbe
jns
dec
xor
xor
js
repnz
adc
out
cmp
jno
mov
add
es
cmp
ss
pop
inc
ss
in
mov
adc
jle
leave
mov
xor
pop
mov
das
jp
and
add
sbbl
sbb
iret
push
cmp
jnp
test
or
add
int3
test
mov
jl
cmp
ret
imul
sbb
enter
js
cmp
push
roll
insb
ja
pop
out
jle
sub
shrb
aam
xchg
test
lea
repz
inc
jne
mov
arpl
iret
jo
orb
adc
scas
or
xchg
shlb
lret
stc
lods
loope
mov
ljmp
cs
and
or
dec
mov
test
add
cmp
lahf
loop
dec
mov
and
sub
xor
jb
inc
pusha
dec
push
sub
stc
mov
ror
leave
fadds
dec
xchg
pop
clc
in
pop
sub
movsl
insb
push
jnp
adc
fs
adc
insb
pop
jp
add
and
clc
mov
sbb
mov
sub
aad
aas
mov
inc
xchg
loop
lods
push
std
int
into
pop
sub
mov
ja
sti
cltd
sub
jg
sbb
lods
in
stos
inc
mov
sahf
outsl
fisttpll
cmp
faddl
or
sbb
mov
aam
ret
mov
sbb
add
lcall
xor
call
sub
outsl
rcll
sahf
or
shll
inc
push
gs
scas
lret
out
or
and
xchg
mov
mov
sbb
add
mov
cs
lods
arpl
fdivrl
jmp
inc
pop
or
and
push
nop
inc
jge
cmp
lock
imul
je
fsubs
inc
dec
push
jo
mov
int
rcll
rcll
push
aaa
dec
jl
pop
mov
outsl
xchg
pop
mov
fdivp
pop
sub
add
mov
push
andb
icebp
push
cwtl
xchg
xor
sbb
mov
sbb
xchg
xorb
rcrl
popa
out
dec
and
or
nop
xchg
or
sbb
adc
clc
in
mov
cmp
mov
out
pop
and
dec
xchg
addr16
push
sub
stc
xchg
loop
lea
dec
push
push
int3
sbb
jmp
push
dec
ffree
rcll
loope
sub
pop
adc
inc
mov
add
adc
stc
add
sbb
jns
add
push
stc
pusha
movsl
lods
adc
adc
cltd
ljmp
xchg
jp
push
dec
inc
int3
addl
add
mov
cmc
outsl
hlt
aam
pop
test
push
icebp
pop
jno
jmp
jbe
movsl
add
adc
dec
pop
loop
xlat
push
and
or
push
fdecstp
inc
repnz
call
ret
mov
js
ds
popf
cmp
fs
or
sysret
cmp
inc
add
ret
jbe
xchg
in
cwtl
fdivr
cmp
insb
inc
mov
mov
mov
add
test
jo
roll
inc
push
lock
push
cmp
cmpsb
aaa
addr16
push
cmpsb
xchg
pop
test
cmp
sub
sahf
ja
cmp
jb
lds
sbb
stos
leave
mov
loope
rcrb
scas
and
std
jns
outsl
notb
add
push
fsubl
xor
sbb
xchg
ret
pop
add
mov
mov
je
sbb
ret
jl
int3
scas
sbb
mov
push
shll
lods
fnstenv
test
mov
pop
dec
sub
push
int3
js
bound
nop
pop
insb
gs
mov
rclb
aas
ds
orl
and
sub
xlat
sbb
or
and
je
mov
jno
jno
mov
inc
sbb
and
mov
push
hlt
std
xchg
lods
aam
insl
shll
mov
fsubrs
jp
outsb
pop
sbb
mov
fwait
jle
scas
xchg
mov
inc
lock
jmp
in
mov
push
mov
sbb
and
leave
xor
pop
add
das
jle
les
dec
mov
adc
pop
sub
aam
dec
jg
fs
pop
lock
gs
jae
push
and
xor
fldt
xor
mov
pusha
xor
lock
push
enter
adc
mov
stc
aaa
rcrl
sub
sbb
dec
sub
push
pop
push
mov
cltd
adc
pushf
mov
mov
out
sar
pop
sub
loopne
insb
mov
aad
xor
shl
aam
shlb
incl
fidivs
jne
pusha
int
push
xchg
fistpll
add
je
hlt
roll
cld
out
xor
lea
inc
sub
dec
in
xchg
ret
push
fwait
imul
aaa
add
test
mov
cmp
jmp
mov
jecxz
iret
shrl
xor
cmp
aad
into
aas
inc
jp
mov
shrl
lcall
jmp
adc
mov
dec
pushf
cmpb
push
jb
insl
into
mov
imul
xchg
ljmp
out
lock
insl
pop
sbb
mov
out
push
pop
arpl
nop
or
out
out
mov
push
mov
jmp
push
ss
push
cmpsl
mov
sub
sbb
pop
repnz
sti
pop
cli
pop
int
xor
mov
adc
or
into
inc
jns
pop
outsb
sub
lock
cmp
mov
or
int
push
push
xchg
fwait
or
fiaddl
mov
scas
insb
cmp
test
scas
jne
lret
adcb
dec
dec
cwtl
sub
sbb
fbstp
cmp
cmp
js
out
mov
out
std
and
clc
adc
call
inc
or
aas
adc
outsl
add
rcrl
push
mov
mov
mov
push
xor
enter
mov
clc
aam
xchg
in
mov
pop
mov
add
pushf
fldt
addr16
and
sub
adc
orl
push
cmp
jne
cmp
mov
sub
mov
rolb
aam
inc
cmp
mov
outsb
idivl
mov
adc
xchg
xlat
mov
and
sub
jno
nop
ja
icebp
pop
out
shlb
push
andl
cmp
pop
cltd
loop
dec
in
pusha
sysexit
hlt
adc
pop
mov
imul
lret
cmp
inc
mov
in
cmpsb
scas
loop
in
mov
xlat
adc
in
sub
arpl
out
xchg
ror
pop
or
dec
addr16
incb
xchg
xchg
lods
cmpsl
outsl
sbbb
inc
add
fnop
pop
or
lea
jle
loope
add
pop
cltd
sahf
in
stos
or
mov
int
shl
not
jns
insl
inc
aas
popf
cmp
jg
ja
jp
pop
jae
mov
xor
jmp
sahf
aas
stos
push
call
push
pusha
lods
out
incl
movsl
xchg
lods
push
or
fs
pop
fisttps
sahf
std
pop
adc
in
aad
stc
je
ljmp
adc
xchg
and
xchg
lcall
mov
adc
mov
push
scas
mov
jne
pop
nop
mov
aam
faddp
inc
arpl
andl
scas
push
rcrl
and
pop
imul
lret
shll
sbb
stc
inc
fs
fldenv
sub
in
in
cs
xchg
fwait
cmp
push
and
xor
mov
lcall
lea
adc
dec
dec
imul
sti
xchg
andb
idivb
jge
movsl
loope
cmp
xor
sbb
out
push
imul
movsl
push
push
sub
xchg
cld
sub
stos
es
sbb
xchg
and
rclb
xor
pop
lods
dec
inc
das
mov
stc
and
cmpl
dec
mov
mov
and
and
adc
in
jbe
mov
cmp
out
imul
pop
pop
arpl
je
dec
push
pop
std
push
and
adc
mov
daa
xchg
les
dec
fstpl
and
test
and
fdivrs
adc
cli
or
fisubrs
and
lcall
push
sub
aas
lods
data16
daa
inc
cmp
gs
aas
cwtl
scas
into
fsub
mov
aas
xchg
imul
stos
adc
lret
data16
test
xor
push
inc
arpl
iret
mov
stc
dec
xchg
js
xlat
mov
pop
xchg
pusha
leave
aad
ljmp
mov
xchg
hlt
enter
or
ds
mov
cltd
arpl
fidivs
or
fwait
mov
inc
and
pop
lret
dec
dec
in
lret
adc
mov
ss
xor
leave
std
push
lcall
pop
jecxz
and
aad
inc
mov
movsl
lret
cs
stos
push
adc
es
in
inc
mov
loop
and
push
fcmovbe
sbb
adc
cs
outsb
and
movsl
xchg
sub
pop
cmp
lods
mov
sahf
pop
jno
adc
fnstcw
lret
fiadds
fbstp
jge
call
xor
icebp
pop
vminsd
sahf
std
pop
jmp
xor
sub
pop
mov
mov
enter
push
gs
or
mov
cli
js
or
mov
mov
sub
subb
js
loop
pop
cs
andb
popa
sub
or
neg
xchg
dec
jne
xchg
adc
lahf
pop
pusha
add
ja
lods
xor
sub
or
out
test
jo
lds
sbb
dec
jb
xor
mov
add
outsb
xor
dec
cwtl
imul
aaa
stc
sbb
dec
xchg
test
adc
js
or
repz
sbb
mov
xchg
cld
inc
aas
push
out
add
push
mov
sahf
push
xor
sub
inc
imul
test
add
mov
mov
cwtl
inc
out
sbb
cmp
push
xor
mov
xchg
out
ret
out
pop
jnp
inc
mov
subb
pop
rorb
jne
popa
sbb
adc
test
adc
daa
inc
pop
pop
and
cmpsb
push
xor
or
mov
in
addr16
sub
sbb
mov
int3
xor
inc
and
inc
adc
pop
mov
or
add
lcall
pop
sub
shlb
into
or
ret
push
imul
jle
dec
jecxz
in
or
cmp
mov
insl
test
add
lcall
mov
mov
iret
inc
sbb
mov
iret
add
popf
in
dec
adc
sbbb
add
xor
hlt
rclb
orl
iret
ret
xchg
push
enter
mov
enter
rcrb
imul
dec
sarl
lret
mov
jae
bound
cwtl
movsl
es
cltd
cmp
jno
outsb
and
mov
pop
cmpl
outsl
push
jns
sbb
jnp
in
xor
ss
les
cmpl
pusha
std
mov
lahf
inc
or
sub
xchg
push
sub
jg
inc
pop
sbb
testl
fstpt
stc
mov
test
clc
inc
inc
pop
movsl
mov
imul
pop
jl
mov
or
mov
mov
shrb
xchg
rcrb
les
bound
es
lds
adc
arpl
xchg
xlat
sbb
xchg
shl
sti
dec
fs
mov
das
lret
mov
cmp
sbb
adc
xor
push
mov
inc
pop
andl
jne
jmp
adc
xchg
stos
sbb
xor
leave
imul
pushf
bound
stos
fists
pop
fsubrs
test
movsl
mov
xor
mov
jae
add
ret
lods
lea
arpl
imul
xor
test
sbbb
shll
or
or
adc
into
testb
ffreep
mov
lcall
cli
je
fcoms
stos
fiaddl
xchg
mov
outsl
stos
xor
test
mov
repz
decl
jle
pop
and
dec
or
mov
xor
ljmp
add
dec
mov
ss
push
adc
bound
out
or
xchg
test
imul
ret
pusha
cmpsl
xor
fwait
dec
insb
lock
add
out
out
push
push
ret
insb
cld
fs
jbe,pt
or
repnz
adc
es
add
mov
cmp
mov
mov
lea
mov
lret
arpl
jbe
lds
dec
scas
or
cmove
jns
adc
cmp
mov
fiadds
ficomps
pushf
xchg
arpl
int3
add
lock
js
pop
mov
jno
mov
ret
jmp
push
xor
mov
rcrl
clc
lds
sbb
data16
imul
ss
xor
xor
pushf
inc
mov
pusha
adc
scas
push
testb
jp
test
add
dec
add
inc
add
inc
add
jl
add
pop
dec
popa
or
cwtl
cld
adc
xchg
mov
push
add
cltd
cli
stos
pop
pop
gs
mov
adc
jo
shlb
mov
lock
bound
ret
loopne
xchg
adc
pop
ficoml
push
aaa
stos
imul
dec
cmp
dec
xor
adc
xchg
insl
sbb
fsub
jne
xchg
mov
fs
imul
ljmp
xor
dec
push
imul
arpl
push
stos
adc
dec
loopne
and
rclb
cmp
jle
add
jno
rolw
iret
in
scas
iret
cmc
mov
jo
cltd
adc
mov
pop
inc
and
test
es
in
dec
and
aad
loope
push
mov
test
xor
jp
and
push
cmpl
in
dec
dec
mov
lock
ret
test
xorb
aad
repnz
xor
dec
popa
mov
sti
sbbb
and
movsb
popf
jns
repz
sbb
xor
sbb
dec
adc
sub
push
and
and
or
pop
cs
inc
pop
scas
in
or
jle
test
xor
inc
enter
mov
push
xchg
clc
push
out
insl
or
rorw
xchg
mov
or
inc
imul
sub
data16
sti
or
jbe
xor
cmp
out
jne
mov
orb
outsl
jae
mov
shrb
outsb
cld
sub
mov
lds
pop
int3
mov
xchg
mov
sub
mov
scas
aaa
mov
cmc
les
ret
mov
jno
test
flds
jae
cwtl
sub
xor
pusha
mov
dec
jae
push
jne
fnstenv
xchg
mov
out
mov
sub
or
call
push
jmp
pop
push
push
nop
inc
xlat
mov
out
or
mov
pop
jg
push
mov
xchg
inc
fisttpl
mov
fdivs
push
or
inc
adc
xor
lret
fisttpll
stos
icebp
and
sub
lods
sti
pop
adc
xchg
fs
iret
jno
movsl
int3
mov
pusha
daa
xchg
lret
aas
add
pop
dec
cs
jo
cltd
and
inc
aad
or
inc
sub
movsl
scas
fwait
sar
frstor
push
cmpl
push
xor
mov
outsl
mov
jmp
popf
sbb
cmp
sbbb
push
pop
in
mov
enter
fcmovbe
adc
lea
dec
cmp
fists
push
push
cmp
or
int3
btc
pop
mov
adc
ss
ret
jns
fisubrs
or
cmovge
dec
pop
stos
es
ds
add
in
mov
mov
jg
pop
dec
xchg
jmp
push
daa
ja
xchg
loopne
rclb
outsb
loope
xor
fs
lods
adc
cmp
dec
insb
int3
jnp
and
dec
scas
jl
pop
filds
outsb
test
xchg
dec
pop
jge
push
rcll
subl
aas
push
sbb
xchg
out
inc
in
inc
sbb
rcrl
jmp
jb
testl
setle
pop
cmp
bound
sub
stos
push
and
push
sbb
ret
or
pop
push
sahf
movsb
fsubs
sub
stos
push
adc
or
push
pop
stos
in
repz
add
test
int3
push
stc
lds
dec
arpl
adc
out
movsl
inc
std
or
rorl
insb
inc
lret
repnz
jmp
adc
mov
pop
out
jg
ret
pop
sub
jbe
mov
test
cmpsb
test
pop
or
xchg
mov
mov
push
adc
jae
mov
mov
shll
push
outsb
fistl
into
and
sub
dec
xchg
imul
mov
mov
out
dec
out
flds
or
and
xchg
mov
daa
mov
dec
repnz
loop
fmull
mov
adc
sub
fimull
inc
in
lods
shrl
and
and
cmp
dec
pop
rclb
mov
dec
mov
dec
pop
test
aas
mov
jno
cmpb
dec
jg
cmp
andb
xchg
lcall
testl
sbb
jg
es
jne
push
xchg
jne
roll
and
xchg
aad
inc
insl
je
cmp
xor
mov
push
dec
mov
cmp
je
aad
adc
or
insl
mov
or
aam
adc
push
dec
inc
xchg
ret
pop
adc
xchg
into
test
rcl
cmpsl
notl
cmp
xchg
mov
inc
test
cli
cmpsb
nop
mov
ret
sub
aam
mov
jno
cmp
push
clc
fnstenv
push
xor
fadds
int3
jge
rclb
xchg
cmp
stos
mov
jl
jge
xchg
out
ret
into
leave
sub
xchg
mov
or
fs
aam
ret
je
push
adc
and
out
loope
pop
repnz
push
mov
fwait
push
aas
sub
movsb
mov
adc
movsl
cmp
inc
jle
or
add
outsl
mov
sbb
sbb
jg
fstps
push
fs
and
xor
cli
psubd
inc
cmpl
mov
and
loop
aam
shrl
inc
popa
xor
test
inc
xchg
push
xchg
adc
iret
mov
fsubs
mov
jl
fidivrs
and
pop
xchg
cmp
xor
sub
and
in
and
int
fs
inc
repnz
mov
push
fmuls
js
xchg
gs
lods
repnz
rcr
or
insb
int
cmp
vmaxsd
hlt
sub
mov
push
int3
mov
jl
mov
push
pop
fdivrl
push
std
int3
outsb
push
inc
pop
pop
push
add
outsb
pop
jns
push
dec
imul
mov
push
jg
inc
rorl
inc
and
js
fs
imul
mov
aam
inc
sub
cmpsl
testb
ds
in
lock
test
pop
mov
pop
xor
push
test
jp
aad
jne
mov
jns
xchg
outsl
fs
xchg
popf
xchg
dec
arpl
xchg
jle
rcll
push
cli
repz
jno
push
sbb
ret
aad
les
repz
and
push
loope
xor
jecxz
xor
mov
movsl
cltd
dec
loopne
push
mov
lods
and
and
loope
sti
xchg
mov
sti
subl
mov
pusha
mov
insb
adc
shrl
mov
jg
aad
leave
xchg
pop
rorb
les
cmp
fisubrl
cld
jnp
jns
loope
and
movsl
dec
repz
data16
js
pop
imul
fcom
mov
popa
ret
loope
push
pusha
jmp
bound
into
mov
rorx
lds
test
aad
daa
cmc
cli
xchg
cmp
sub
movsb
xchg
push
mov
movsl
in
sub
mov
cmc
movsb
enter
add
push
ja
jne
adc
dec
lidtl
fstps
jmp
inc
mov
shlb
lods
push
mov
lahf
xor
xchg
sub
repz
xor
mov
test
int3
add
lds
xchg
push
call
mov
rorb
xor
or
inc
push
mov
lret
sub
stc
jg
or
sub
and
sbb
icebp
repnz
xlat
sub
or
shll
jne
cwtl
cmp
popf
fbld
xchg
jp
stos
jae
jnp
jo
mov
jmp
iret
cs
int3
sbb
xchg
cmc
scas
fnstcw
loopne
dec
cmp
leave
std
roll
or
scas
mov
pop
cmp
or
cli
mov
or
movsb
mov
push
dec
icebp
cmp
dec
xchg
add
pop
pop
movsl
mov
lea
aas
ss
sbb
ud0
cs
xchg
mov
hlt
por
mov
inc
je
testl
in
cmpl
add
cmc
dec
cmp
xor
lcall
pushf
imul
int
sbb
aas
xchg
icebp
sbb
push
sub
es
xchg
aam
push
push
cwtl
sub
psraw
push
push
jmp
in
jno
add
xchg
sbbl
int
shlb
mov
push
pushf
std
and
enter
lcall
lea
bound
lods
inc
mov
mov
mov
addr16
fstpt
inc
incb
inc
mov
out
add
scas
movsl
xchg
cmp
sub
movsb
xor
pop
jl
insl
inc
fmull
or
xchg
sti
adc
scas
cmc
nop
jl
loopne
divl
out
in
inc
cmp
inc
cmp
push
std
mov
mov
mov
ficompl
mov
fcompl
jecxz
mov
add
and
lret
imul
mov
pusha
loope
sti
in
cmp
enter
stos
mov
les
stos
popa
push
int
pushf
das
mov
fimuls
xchg
vphadduwq
sbb
pop
fs
adc
lahf
in
cmpsl
cltd
fldt
mov
cmp
pop
test
out
jae
and
pop
push
insl
push
scas
jb
and
outsb
lcall
test
cwtl
mov
cld
in
iret
mov
and
out
lds
sbb
aam
adc
jge
aam
mov
iret
jbe
rcll
add
stos
lahf
lods
xchg
or
cmp
pop
imul
and
fisubs
xchg
das
decl
out
mov
sbb
jge
movsb
mov
fldcw
int3
repnz
loope
push
mov
pushf
or
insb
pop
aam
push
pop
jae
aas
test
and
push
lret
shll
xchg
add
rolb
xchg
aaa
pop
jmp
popf
mov
in
icebp
or
and
das
push
or
sbb
jge
xor
clc
les
sub
test
cmp
adc
lods
outsb
xor
jne
push
cs
xlat
insl
insl
sub
movsl
lret
sub
and
mov
outsl
jns
pop
pop
push
in
je
mov
call
mov
leave
or
vpshufhw
sub
shlb
bound
pop
cmp
jge
xchg
cmp
sbb
mov
mov
jno
cwtl
fldenv
dec
xchg
lods
imul
and
loop
add
cmc
add
mov
add
insl
sbb
pop
add
test
das
jnp
mov
push
out
dec
dec
in
nop
mov
adc
adc
cld
cli
or
push
mov
fnsave
leave
jns
movsl
xorl
mov
xchg
out
sbb
jns
sub
dec
xchg
jmp
lahf
and
add
inc
call
pop
dec
cli
aaa
test
ret
iret
popf
mov
lret
mov
pop
add
adc
arpl
inc
xlat
cmp
cmpsl
ficoms
pop
je
inc
jmp
jno
push
push
les
lret
jge
mov
fnstsw
test
ret
mov
popa
push
xchg
decb
shll
xchg
mov
stos
xor
cltd
or
int
jnp
fwait
shr
aam
and
ja
daa
ss
inc
mov
addr16
push
sbb
push
out
mov
dec
push
insl
pop
inc
cmp
mov
into
jl
daa
mov
sub
aas
add
xor
out
rorb
inc
inc
mov
push
fistps
out
scas
mov
adc
or
pop
rcl
cmc
mov
mov
dec
mov
clc
das
pusha
stos
push
xlat
scas
push
add
add
push
arpl
sbb
ljmp
nop
mov
mov
xor
sbb
adc
mov
jb
add
fincstp
inc
pushf
mov
xor
inc
inc
jmp
jo
imul
dec
lds
dec
mov
cmp
mov
enter
sarb
mov
and
fyl2xp1
data16
imul
xchg
adc
inc
mov
pop
or
mov
xchg
mov
sbb
test
lahf
sbb
or
pop
inc
shll
push
xlat
jg
sbb
jl
inc
cmp
loopne
pusha
sub
cmp
lds
lock
scas
out
lock
mov
popf
push
and
popf
scas
add
pop
push
jo
mov
lahf
dec
mov
xchg
add
cltd
mov
cltd
leave
mov
repnz
push
jno
iret
outsl
cmp
stos
jo
and
dec
or
pop
or
dec
out
out
xlat
adc
sbb
adc
popf
jne
jae
xchg
mov
test
sbb
fbld
mov
outsl
setg
paddw
cmc
adc
pushf
cmp
mov
mov
movsb
pop
or
xchg
jmp
or
pop
and
shrl
rcl
pop
rcl
inc
outsl
cmp
adc
sub
sub
shll
sarl
inc
xchg
inc
adc
or
mov
add
repnz
jns
xchg
pop
jmp
push
inc
mov
jmp
adc
pop
cmp
popf
stos
outsl
mov
outsb
arpl
cld
fidivl
cmp
push
fsubr
nop
lahf
cmp
in
mov
jle,pt
cmc
pop
mov
stos
ficomps
pop
fadd
outsb
je
test
sbb
movsl
fwait
insl
mov
mov
sbb
loop
stos
sti
push
dec
push
dec
jo
in
dec
mov
push
pop
fidivrs
push
sub
sbb
cld
fdiv
and
adc
outsb
js
push
arpl
or
xchg
movsb
mov
insb
shll
or
fsts
jbe
jl
xchg
pop
fsubrl
lret
std
pop
xchg
and
push
ficomps
rcl
push
pushf
addr16
pop
jnp
daa
cmp
aam
lahf
push
adc
xor
fistl
jmp
fstl
adc
cltd
lods
lods
scas
rcrl
add
xchg
xchg
push
mov
gs
dec
lods
subb
dec
adc
pusha
mov
outsb
mov
loopne
mov
out
sbb
inc
sbb
lret
inc
hlt
xor
ret
mov
pcmpeqw
or
ret
out
jg
and
inc
icebp
adc
stc
xchg
dec
in
jnp
push
xchg
mulb
insb
call
or
mov
cmpsb
fldlg2
in
jge
out
imul
xor
and
adc
push
in
push
or
into
data16
fwait
pop
iret
fstpt
test
xor
sbb
sbb
leave
shlb
push
mov
ret
add
jle
xor
lahf
subl
hlt
dec
rcrb
pop
ret
cli
notb
xsaves
hlt
inc
and
leave
mov
shll
and
push
test
subl
imul
loope
mov
shrb
lea
sub
std
loopne
adc
inc
sarl
adc
sub
subl
xchg
das
and
gs
pop
cmp
out
mov
fwait
pop
pop
lret
push
pop
adc
ss
nop
xor
mov
sub
mov
icebp
rolb
nop
push
push
fisttpl
into
jg
inc
scas
test
lds
sub
nop
jne,pn
fst
push
mov
dec
clc
mov
fisttpl
pop
lret
andb
push
xchg
cld
hlt
push
vpand
add
cwtl
and
ds
out
mov
xor
dec
mov
xchg
jl
cmpsl
push
push
and
idivb
ja
sbb
jo
hlt
and
push
xchg
push
repnz
push
mov
out
pop
or
imulb
imul
jne
test
aad
lcall
adc
pop
movsl
sub
adc
jnp
mov
xor
icebp
xchg
and
clc
mov
lahf
je
mov
xchg
and
roll
and
jge
adc
or
push
fimull
inc
enter
cmpsb
call
addr16
pop
mov
loope
repnz
and
ljmp
cltd
or
push
jg
xor
sti
inc
cmp
mov
pop
lret
loop
arpl
lret
push
xchg
cmpsl
cmp
mov
push
aas
pop
ja
pop
or
ljmp
inc
xchg
addb
cmp
sbb
push
sub
dec
test
lret
xor
mov
and
aaa
ret
in
aad
inc
dec
leave
add
stos
jecxz
pop
jge
gs
mov
cli
inc
mulb
ret
pop
adc
in
sbb
lds
push
adc
jo
addb
sub
sbb
and
inc
dec
xchg
inc
rorl
mov
shrl
in
jb
enter
xor
mov
jae
popf
data16
push
inc
and
or
hlt
push
lret
mov
xchg
push
andl
mov
loopne
jne
imul
push
xchg
iret
lds
lcall
mov
out
sbb
js
aas
mov
stos
dec
or
orb
sbb
xchg
out
pop
xchg
or
and
imul
and
icebp
les
cli
inc
pop
in
pop
in
shl
pop
fs
popa
add
mov
test
sbb
fcompl
mov
inc
jns
mov
jno
cmp
negl
mov
nop
pop
and
adc
test
push
push
out
inc
out
mov
cmp
dec
adcb
mov
movsl
mov
xor
sbb
mov
in
sub
sbb
dec
pop
inc
jl
xchg
jle
mov
std
movsl
ss
dec
xor
mov
mov
xlat
sub
mov
mov
les
push
xor
xor
sbb
sub
jns
mov
clc
lahf
mov
jns
mov
and
shrb
scas
sbb
push
xchg
xchg
or
adc
aas
packsswb
stos
pop
repz
push
or
ds
ljmp
popa
sbb
mov
jecxz,pn
mov
xor
aaa
mov
dec
cmpsl
repz
fstpl
out
dec
test
xor
out
fwait
sbb
ljmp
or
mov
inc
xlat
test
add
idiv
bound
loop
xchg
cmc
pop
and
test
xor
jo
int3
pop
std
fildl
cmp
and
mov
push
ret
stos
in
pop
sar
xchg
and
hlt
enter
and
jge
ret
xchg
push
cmpsb
add
jecxz
mov
push
cmc
arpl
mov
lock
push
stos
pop
std
outsl
cmpsl
fistps
in
dec
add
mov
mov
and
les
xor
inc
loope
sbb
push
pop
xchg
sub
jns
xor
and
shlb
jmp
sbb
jo
xor
jns
pop
les
fs
adc
push
mov
jmp
fsubl
sbb
pusha
mov
repnz
xor
pop
out
notb
mov
imul
test
mov
lds
mov
push
mov
ret
fwait
addr16
push
or
sti
cmp
inc
insl
sub
shrl
xchg
cmpb
daa
jl
and
sbb
pop
xchg
int3
jp
mov
ss
scas
pop
mov
dec
or
sbbb
add
add
xchg
ja
fs
pusha
ja
sub
nop
xlat
dec
ret
or
xchg
sub
rorb
loop
dec
test
int3
std
sbb
pop
mov
push
les
ret
test
nopl
fists
inc
jbe
in
xor
stc
mov
dec
outsb
fcmovu
es
mov
pop
dec
in
icebp
mov
nop
xchg
mov
sbb
xchg
sbb
fsubs
loopne
popa
push
jg
adc
pop
cmp
xchg
cmpsl
stos
push
or
mov
lea
pop
ror
jg
dec
jle
movsb
stc
idivb
xchg
adcl
xchg
lods
sub
cmp
in
mov
int
or
push
ret
rol
in
xchg
ret
push
mov
in
sbb
push
xor
push
xor
mov
rclb
inc
outsl
jae
cmovg
orb
jne
sbb
push
out
imulb
jns
or
cwtl
jl
shlb
jne
mov
aaa
sar
adc
sub
mov
clc
pop
and
mov
pop
cmp
in
xor
bound
adc
or
and
stos
cs
addr16
dec
dec
dec
lret
testb
sbb
cmp
insl
sbb
inc
fldt
and
stc
pop
mov
sub
iret
cs
rcrl
mov
rolb
and
into
pop
in
push
sbb
scas
pop
scas
pop
mov
mov
dec
cltd
in
clc
xor
cmp
push
loopne
pop
cmovle
mov
mov
push
sbb
push
movsb
lahf
add
pushf
popf
jge
pop
iret
adc
xor
mov
inc
ret
test
inc
cmp
jg
mov
hlt
sti
inc
push
daa
mov
pop
shrb
fnstenv
js
dec
rcrl
inc
or
das
cmp
jmp
sbb
inc
mov
jnp
and
repz
cwtl
push
rclb
pop
int
push
adc
movl
push
push
nop
dec
test
and
jmp
jl
or
mov
add
out
sbb
push
outsl
mov
sarl
adc
out
mov
mov
in
fisttpl
mov
pusha
in
mov
xchg
sub
inc
mov
imul
jns
pop
xor
push
mov
arpl
loop
cmp
dec
arpl
movsl
push
or
loopne
out
pop
cmp
fildll
xor
sub
popf
cmc
inc
xchg
scas
and
xor
int3
addl
or
cmp
dec
ja
add
shlb
push
sti
dec
jp
popa
shr
outsl
test
call
or
ss
sti
das
jle
repz
pop
cmc
pusha
jnp
adc
xchg
add
fldt
dec
xor
dec
lods
sub
jo
out
xlat
or
sbb
rcrb
xchg
cmp
daa
sbb
adc
in
xchg
pop
mov
out
sahf
mov
pop
pop
mov
popa
rcl
add
xchg
add
mov
lret
out
jp
mov
adc
popa
addr16
out
jle
jne
out
cmp
adc
or
sbb
fcmovnbe
jo
lret
lret
popf
cld
in
mov
sahf
and
mov
lock
in
add
ds
mov
xchg
adc
outsl
out
sub
out
loope
mov
jp
pop
or
sarb
pop
cmpsb
repz
lods
sbb
int
add
fstpl
daa
je
aaa
adc
add
rdtsc
dec
lcall
pop
jl
push
sub
adcl
sbb
test
fnstsw
jns
xor
xchg
xchg
jb
add
arpl
in
pop
bnd
dec
push
imul
sub
outsb
dec
shll
movsl
std
sub
xor
and
or
inc
repz
xchg
sahf
shll
xchg
xchg
add
inc
ret
enter
xor
cmpsl
jne
xchg
scas
mov
mov
pop
mov
sbb
out
adc
add
fstpl
loope
in
xchg
or
popa
lret
lahf
inc
pop
inc
or
mov
enter
pop
dec
xor
adc
jge
adc
lea
pusha
add
pop
adc
ret
cli
jp
insb
cmc
push
fbstp
cmp
sbb
jb
or
xchg
add
sub
xchg
daa
es
lcall
loop
cltd
fildl
xlat
sbb
mov
push
aad
jne
js
test
adc
cmc
decl
pop
ljmp
mov
sub
idivb
test
pusha
jecxz
push
scas
mov
jp
jnp
mov
cs
adc
dec
pop
mov
xor
sti
sbb
pop
mov
push
jb
dec
xchg
inc
pop
pop
pop
mov
addl
lods
jb
mov
cmp
ficompl
jne
or
fnstenv
add
mov
lds
repz
cmp
lods
sbb
mov
in
jge
leave
insl
cld
pop
mov
es
jl
cld
out
xchg
sub
ds
xor
mov
lret
jp
pop
jbe
inc
cmp
xchg
movsl
mov
add
lock
pop
ret
shl
pop
call
lret
fcoms
aad
mov
aam
adc
add
scas
int3
lahf
andb
out
push
test
fwait
cmp
or
jg
push
add
pop
push
mov
sub
inc
xor
inc
aaa
hlt
cmpsl
or
fsubs
mov
inc
inc
inc
jl
addr16
mov
cmp
sbb
lea
nop
mov
sti
push
sbb
jp
push
leave
decb
push
mov
lret
and
cld
arpl
mov
add
movb
inc
jp
mov
sbb
push
pop
inc
enter
jb
mov
insb
inc
jbe
dec
or
pushf
in
aas
pop
jno
push
rcrl
xchg
xchg
out
and
icebp
and
test
das
js
pop
ret
add
lock
nop
scas
mov
mov
in
cld
cmp
xor
xlat
fldl
adc
pop
in
inc
in
sbbb
mov
stos
xchg
ljmp
lods
cltd
xchg
test
dec
push
fmul
dec
incl
arpl
sbb
dec
sub
cld
jge
dec
test
icebp
xchg
rcrl
xchg
leave
outsb
push
out
mov
sbb
stc
cmc
sbb
bound
mov
or
sahf
push
xchg
xchg
lahf
out
xchg
call
xor
fdivrl
aam
lret
out
push
inc
lea
enter
adc
sub
stc
push
mov
mov
gs
dec
inc
notl
inc
push
imul
sub
test
lods
cmpsl
lret
sub
repnz
sbb
in
lret
push
cwtl
enter
cmpsb
mov
add
mov
add
mov
push
adc
sbb
in
adc
lea
mov
or
ja
sti
out
push
mov
cmp
sub
jecxz
mov
xchg
jo
mov
cmp
cwtl
add
sub
aaa
aas
in
addb
jge
aas
mov
orb
lods
jle
mov
pop
sub
push
xor
adc
int3
pop
xor
and
stos
cwtl
cmp
lods
hlt
out
push
dec
out
push
divl
cmp
test
movsl
loopne
jg
lock
add
dec
lods
in
cmpsl
out
or
inc
lods
shlb
cmp
adc
mov
sarb
xor
and
push
mov
adc
pop
nop
dec
lahf
add
ss
pop
dec
insl
push
sub
aas
push
clc
jle
and
inc
shr
js
sub
clc
mov
stc
test
inc
mov
mov
arpl
notl
mov
movsl
inc
xor
or
aad
inc
cs
es
ret
sub
daa
ljmp
mov
fwait
orl
dec
mov
cmp
sub
jns
jge
pop
cltd
nop
hlt
sbb
inc
out
xchg
mov
and
fucomp
std
add
or
sbb
mov
or
rolb
dec
dec
pop
iret
inc
xchg
push
bnd
mov
dec
pop
dec
int3
fmull
sub
sti
inc
pop
addr16
std
fsubr
cmpsb
loop
mov
xor
fsubrl
mov
out
mov
test
ljmp
std
outsl
ret
push
mov
cmc
std
inc
sub
pop
inc
fwait
lods
movb
rcl
push
or
cli
popf
pop
cmp
or
bound
pop
outsb
mov
outsb
add
dec
cmp
gs
dec
pop
xor
sub
cli
les
xor
rcrb
shlb
loop
cmp
inc
xorb
enter
jae
fidivrl
mov
sub
mov
and
sub
dec
xchg
mov
fisttpll
mov
jae
or
popa
pusha
lds
dec
cmc
jl
lods
pop
sub
jmp
mov
idivb
push
mov
sub
add
jecxz
xorl
adc
mov
pop
pusha
jae
clc
or
push
arpl
mov
or
ret
dec
int
xchg
push
mov
popf
int
cmpsb
and
push
call
out
mov
in
dec
sub
addb
inc
add
mov
xchg
mov
out
fimuls
push
rolb
mov
push
gs
push
sub
or
sub
fdivrl
sbb
iret
mov
ljmp
adc
add
lock
xchg
mov
mov
lods
imull
cmp
shll
sahf
dec
xchg
xor
imul
mov
cwtl
mov
mov
or
test
ljmp
test
jne
dec
jns
push
incl
loop
jne
stc
xor
pop
ret
je
popf
jle
scas
enter
pop
sub
mov
test
mov
rorl
xchg
cmp
mov
sub
dec
imul
fisttpll
pmulhuw
mov
scas
add
cltd
sub
dec
or
out
lcall
pop
inc
fisubrs
add
push
push
imulb
cmp
jecxz
or
inc
jecxz
pop
repnz
pop
and
pop
xor
mov
add
mov
lods
jmp
mov
fdivp
notb
jecxz
cli
loop
loopne
mov
mov
push
xor
ja
push
jb
pop
in
and
mov
dec
dec
inc
rclb
std
mov
xchg
aas
aas
cld
sub
adc
mov
add
xor
mov
shlb
addr16
lret
xchg
loop
lods
repz
mov
jle
lods
leave
aam
lret
es
sbb
pop
movsl
jnp
jno
imul
add
push
mov
jmp
into
imul
les
add
in
fsubrl
icebp
inc
jp
push
test
add
adc
pop
inc
out
aas
call
xchg
lahf
push
adc
add
mov
loopne
test
cmpsl
stos
dec
xchg
popf
jecxz
xchg
inc
sbb
aas
xchg
sbb
mov
mov
fbld
jg
sub
clc
sub
or
push
addr16
push
mov
lds
lock
dec
loope
pop
add
or
inc
sbb
xchg
cli
add
xchg
je
add
sbb
sbbl
mov
cmp
ja
loopne
into
cmp
mov
ret
add
add
or
test
fisttps
cmp
dec
in
pop
cld
jge
lahf
mov
not
mov
stc
je
imul
std
mov
jmp
jmp
fisubrs
sbb
xchg
mov
subw
or
aam
les
addr16
inc
pusha
lock
jl
mov
push
or
mov
test
pop
xor
xlat
mov
icebp
mov
xchg
stc
mov
pushf
push
popa
xor
cld
repnz
negb
xor
call
or
es
adc
cmp
mov
mov
sub
test
int3
jns
push
xchg
sbb
pop
pop
fwait
adc
dec
lahf
out
mov
cmp
fldenv
push
mov
ficompl
dec
iret
adc
dec
movsl
jp
scas
addr16
repnz
mov
and
mov
ret
int
cmp
push
mov
fdivrp
pop
aas
adcl
ljmp
js
aaa
sbb
movsl
jl
fsubl
inc
dec
sub
je
sar
xlat
push
mov
stc
aam
icebp
mov
push
scas
sbb
lcall
lahf
lock
or
lea
jae
sbb
clc
sub
cmp
mov
sub
lret
test
jae
mov
mov
insl
lock
pop
fdivs
cli
and
xchg
sti
xchg
in
loop
clc
pushf
jecxz
cmp
sbb
cli
ja
jnp
mov
sbb
xor
arpl
xlat
ljmp
sbb
stos
repnz
jnp
orb
stos
iret
ret
jnp
out
xor
push
push
test
test
xor
fwait
xchg
jmp
sahf
testb
push
push
mov
add
jb
dec
adc
punpckhdq
inc
and
mov
dec
push
jno
test
sub
push
mov
mov
insl
std
push
mov
ret
movsl
leave
jb
rcr
jae
rclb
xchg
rcl
les
fidivrl
push
cs
pop
add
cmp
ja
shlb
jbe
push
adc
fwait
int
sbb
rorl
xlat
xor
sbb
testb
cmp
mov
fmull
mov
sbb
imul
add
iret
mov
mov
dec
xchg
mov
mov
ljmp
std
cmpsl
stc
xorb
fdivs
ja
inc
xchg
mov
pop
out
mov
es
cmp
insl
mov
push
mov
xchg
sbb
push
add
fs
outsb
ret
pop
lods
insl
imul
mov
add
inc
shrb
popf
jns
dec
and
aam
adc
popf
inc
mov
fstps
popf
adc
bnd
mov
sbb
inc
lcall
lds
cmp
sbb
push
leave
jmp
or
mov
in
shrl
cmp
dec
dec
cmpsl
aaa
hlt
mov
add
scas
sub
leave
cld
jo
scas
mov
pop
and
push
fnstsw
mov
shrl
aad
mov
insl
scas
add
sbb
in
stos
jno
push
aaa
aad
imul
pop
fidivrs
push
or
ds
sahf
dec
cmp
xchg
xlat
xlat
imul
rcrl
and
pushf
cli
xchg
in
out
ficomps
xchg
les
arpl
das
adc
inc
xchg
or
dec
sub
dec
mov
gs
adc
mov
mul
push
cmp
jp
nop
push
and
nop
xchg
inc
lahf
push
dec
inc
dec
jae
es
mov
mov
cmp
scas
or
add
push
sbb
fcomip
bound
mov
add
cmp
in
sub
push
mov
daa
pop
cwtl
or
fistpll
fcoml
sti
gs
push
adc
pushf
sti
jae
jg
jns
jae
adc
and
aas
jmp
ud1
movsl
mov
aad
outsl
out
sti
push
add
lock
daa
push
cmp
xor
cmp
jp
fs
ror
pop
shlb
popf
mov
pop
insb
mov
mov
and
add
test
dec
sarl
pop
ret
enter
push
cmc
fstpl
jne
inc
adc
fidivrs
sahf
movsl
out
xchg
fxch
shrl
cmpsb
sti
jno
lret
loopne
add
insl
in
pop
jmp
mov
out
xor
add
popf
das
popa
mov
mov
js
clc
test
adc
xor
pop
xchg
pop
or
add
outsb
incl
movsl
shrb
mov
insb
jbe
aas
addr16
adc
dec
cwtl
or
ja
hlt
xor
and
jns
flds
sub
into
mov
jae
mov
or
sub
lcall
sahf
ds
mull
push
adc
mov
push
cmp
and
push
mov
aas
inc
cmpsl
jns
inc
inc
jle
aam
add
cli
push
jl
mov
cli
lret
mov
inc
rcrb
xchg
mov
stos
cwtl
or
mov
fdivr
fnsave
xchg
mov
sbb
es
test
pop
sub
and
xor
lcall
pop
movsl
dec
xchg
mov
and
push
andl
xor
mov
lahf
aas
lods
mov
stos
push
jp
cmp
adc
scas
movb
leave
cmp
scas
sub
cmpsb
jbe
out
fdivl
cs
sahf
sbb
pop
push
insl
jle
clc
vandps
and
sahf
cmpsl
inc
adc
sti
push
mov
imul
js
adcb
mov
pop
mov
rcr
aaa
adc
js
xor
scas
test
inc
inc
daa
cmp
jmp
test
dec
loop
xlat
cs
mov
subl
and
mov
imul
jl
add
jmp
xchg
scas
sub
scas
push
adc
movsl
cltd
push
sub
jl
and
incl
fwait
iret
mov
push
gs
mov
cld
in
and
xor
mov
dec
jmp
pop
dec
dec
push
popf
shl
or
inc
ss
vandnpd
add
in
sarb
cmp
movsl
add
outsl
pop
je
dec
cld
push
notb
mulb
leave
mov
test
mov
mov
cmp
out
mov
mov
dec
loopne
pop
push
ds
les
push
int3
dec
pusha
jb
or
movsl
and
jne
xor
mov
xor
incl
push
sub
adc
mov
sbb
insb
jo
arpl
adc
ror
jb
not
dec
pop
stc
sub
xor
fistpll
jns
test
xchg
pop
cmpl
sub
xchg
xchg
or
inc
sti
in
cmp
fcomip
cwtl
mov
mov
mov
mov
aaa
mov
sbb
inc
jp
push
push
xchg
xor
shlb
mov
inc
ljmp
mov
mov
nop
leave
es
nop
fmul
mov
pop
test
sub
hlt
out
mov
mov
out
add
stc
dec
fnstenv
mov
fldl2t
inc
leave
jge
and
push
xor
push
scas
mov
in
loop
or
dec
push
lds
movsb
adc
xchg
inc
int
repz
push
or
in
mov
nop
inc
mov
iret
dec
jecxz
addr16
out
mov
cmpb
mov
mov
out
fsubr
dec
xor
mov
icebp
mov
lret
xchg
int3
mov
or
xor
and
das
in
arpl
jecxz
add
xor
daa
push
insb
and
sub
sbb
inc
adc
vmovsd
jb
mov
inc
rcrl
jmp
sbb
cwtl
pushf
or
dec
inc
test
mov
mov
scas
dec
pop
xlat
ss
inc
xor
xchg
out
inc
sub
bnd
fnstsw
lcall
mov
push
jnp
pop
or
les
arpl
xchg
orl
mov
arpl
cmova
frstor
outsb
mov
fisubl
loope
call
repnz
sub
repz
xor
fildll
repnz
jnp
mov
pop
push
add
push
cmpsl
jp
push
dec
xor
stos
sub
lods
mov
xor
shlb
pop
stos
fistps
add
jo
mov
sub
cmpsl
rcl
mov
sub
sbbl
sbb
xchg
mov
jnp
push
push
pop
add
dec
repz
dec
or
leave
add
pop
pop
xchg
jb
mov
sbb
sub
adc
data16
xor
fs
testb
out
cltd
jmp
sti
xor
xchg
adc
in
jl
icebp
in
push
mov
xchg
sarl
orl
mov
das
sub
lcall
mov
inc
cmpsb
and
push
outsl
pop
or
rolb
jmp
sbb
add
jge
pop
and
mov
in
xchg
test
repnz
mov
mov
ss
xchg
xchg
inc
or
xor
out
fs
aas
xor
out
add
jl
cmp
test
popa
imul
and
mov
mov
stc
xchg
std
and
mov
ret
loop
dec
add
sub
ret
add
mov
push
mov
push
rclb
inc
mov
fcmovnbe
lods
sub
adc
dec
testb
fsubr
mov
js
mov
lcall
scas
adc
outsb
mov
int
subl
iret
xchg
mov
enter
fistl
in
sub
jb
mov
std
jl
xchg
mov
out
mov
out
cmpsl
popa
sbb
rol
scas
mov
jnp
repz
shll
mov
add
fidivrl
inc
inc
cmpsl
or
testb
cmp
dec
shll
rcrl
outsb
mov
sub
or
mov
test
mov
clc
in
push
sub
xorl
mov
scas
test
lds
cwtl
sbb
inc
sbb
jl
mov
add
shlb
dec
cmp
sbb
jae
dec
xor
mov
gs
sbb
neg
pop
mov
sti
scas
adc
and
mov
cmp
fwait
shlb
xlat
fidivs
ja
mov
push
pop
mov
gs
clc
js
test
rcrl
push
push
ret
insb
sbb
arpl
aas
mov
lcall
ss
lret
fnsetpm(287
aaa
lret
and
inc
ds
arpl
mov
cmp
insb
faddl
fmuls
test
sbb
rclb
mov
push
mov
sbb
inc
out
ss
imul
addr16
xchg
sub
push
jae
aas
jecxz
mov
jne
jge
scas
cs
addr16
dec
cs
loop
lret
ret
mov
aas
into
popf
mov
scas
lock
aas
scas
jl
push
js
jb
lock
sbb
push
pop
jg
bound
jno
mov
xor
cmp
push
xlat
data16
movsb
lea
rol
jl
outsl
roll
and
pusha
adc
fimull
jg
dec
clc
mov
xchg
or
mov
jle
xchg
inc
jo
xchg
pushf
push
jne
inc
and
cs
sub
sbb
das
jnp
ja
jg
jbe
movsl
out
stos
push
mov
mov
fsubs
jne
adc
and
xchg
scas
stc
loope
xor
test
pop
inc
sub
lret
sub
repz
std
sbb
and
xchg
pop
imul
and
out
rcll
nop
ljmp
xchg
sbb
test
fsubrs
jae
cmpsb
mov
loop
mov
jp
push
mov
xchg
imul
sarl
shll
mov
push
addr16
push
pop
pop
insl
mov
and
pop
add
ds
ret
push
fs
inc
or
fs
xor
jae
nop
roll
pop
sbb
icebp
rolb
sbb
into
xchg
sub
or
mov
cmp
sub
xchg
pop
jmp
sysexit
jle
xchg
sbbb
js
mov
pop
push
jns
jecxz
inc
or
cmp
std
xchg
jl
nop
pop
jg
sub
dec
bound
jo
mov
push
cmpsb
out
xchg
frstor
push
fstps
xchg
jecxz
inc
mov
ja
dec
hlt
dec
jbe
divb
and
call
aaa
mov
stos
lcall
roll
pushf
sub
pop
mov
sub
jns
sub
int3
adc
pop
jae
fcoml
movsl
mov
inc
mov
jp
push
mov
xchg
and
xor
jo
mov
jl
in
in
and
push
mov
nop
add
xchg
push
jne
adc
mov
mov
out
add
insl
mov
adc
mov
das
popf
cmp
or
out
adc
cmpsl
outsl
int
cli
loope
shll
ljmp
decl
mov
inc
test
lret
sub
or
add
frstor
hlt
jbe
rcr
pop
pop
insl
and
mov
arpl
push
notb
xchg
xchg
push
adc
xchg
cmp
adc
mov
cmp
pushf
out
pop
imul
jae
test
dec
and
jnp
mov
jbe
negl
xor
sub
cmp
filds
jl
stos
jb
fnstcw
sub
lret
pop
in
das
loop
push
pop
ret
shlb
mov
xlat
enter
scas
jo
aad
and
cmpsb
pusha
pusha
mov
jg
sbb
cmpb
pop
sub
je
sub
inc
mov
stc
or
in
cltd
mov
and
clc
es
ficomps
imul
out
pop
lds
pop
push
and
fwait
sbb
dec
sbb
jle
mov
loope
out
out
ljmp
mov
icebp
addl
sarl
mov
jnp
pushl
push
xchg
mov
adc
dec
xchg
jbe
das
lea
add
shll
mov
or
stos
add
dec
mov
lock
lcall
outsl
arpl
dec
xor
das
test
cmpsb
iret
mov
dec
jb
insb
fcomps
mov
dec
cmp
fldl
rcrb
orb
mov
push
sbb
pushf
sbb
cmp
mov
mov
pop
inc
dec
notl
inc
push
ds
and
jecxz
xlat
sbb
cmp
pusha
movsb
je
push
shl
add
jmp
iret
or
adc
out
mov
shr
aad
sub
sti
dec
sbb
cmp
loope,pt
jmp
std
push
aaa
outsb
mov
xor
cmp
inc
and
addl
xchg
and
jp
sub
es
cmpl
nop
add
fwait
jmp
ds
mov
sar
int
push
hlt
stc
pop
adc
pop
push
lcall
jnp
sti
add
jmp
cld
add
scas
mov
pop
dec
or
lret
mov
fistpl
jmp
sub
jne
or
sbb
and
outsl
enter
jo
and
xchg
loopew
push
pop
adcb
inc
add
xor
cmpb
dec
xor
ret
mov
push
xor
or
or
dec
jbe
cmpsl
inc
jg
pop
lret
movsb
sub
cli
push
lret
mov
dec
add
bound
push
enter
popf
stos
cld
xchg
cmpsl
lock
xchg
jg
lods
flds
pushf
shlb
push
pop
pop
and
addr16
xchg
std
aad
or
fisubrl
jmp
push
mov
cld
push
lahf
adc
popf
mov
out
jo
dec
lea
jecxz
aad
test
loop
scas
movb
nop
insb
rcrl
mov
and
and
cltd
popa
xchg
sarl
imul
sbb
and
sahf
lret
jp
sti
adc
addr16
std
stos
ljmp
jne
test
fwait
sarb
mull
and
loope
push
push
fwait
or
jmp
fimull
mov
ror
push
ja
jl
jl
pop
aad
and
xor
sbb
inc
pop
mov
push
pop
loop
inc
imul
mov
xor
push
mov
cmp
mov
mov
orb
mov
push
push
stos
xchg
fcompl
lods
lret
idivl
xorb
xlat
pop
pop
cmp
int3
outsb
jb
adc
cmp
lret
nop
fildll
or
xor
inc
adc
push
push
jl
mov
cmpl
aam
jae
das
cmp
push
mov
shlb
aaa
lret
mov
loope
mov
adc
add
push
je
ds
lds
jp
test
cmp
les
mov
testl
jns
stos
ja
fcompl
push
xchg
stos
sbb
test
clc
cmp
clc
repnz
fs
fstl
xchg
mov
lds
xor
sbb
ljmp
out
sti
mov
jns
mov
ja
rcl
adc
stos
and
pop
xchg
fidivrs
aas
push
loope
jmp
mov
dec
pop
lret
dec
inc
mov
imul
nop
arpl
push
jmp
adc
jbe,pn
in
fisttpll
sub
push
xchg
rcrb
ss
mov
jmp
push
negl
loop
repnz
or
mov
imul
aas
jg
and
mov
jge
xchg
fsubrl
lds
test
clc
icebp
xor
out
lock
jo
icebp
mov
or
ljmp
mov
imulb
sub
cmp
or
pop
jbe
int3
xor
imul
jle
sbb
jo
fstps
cmpsb
daa
or
mov
aaa
add
mulb
ss
shlb
clc
popa
cmp
inc
xchg
loope
fidivs
stos
fiadds
add
lret
shl
push
mov
push
dec
fdivrl
jns
test
mov
stos
jg
add
mov
xchg
and
sub
lahf
jno
inc
push
jmp
pop
rcrb
popa
and
shrb
dec
and
enter
xor
outsb
jbe
fistpll
sbbb
mov
roll
or
xor
push
lods
stos
sarl
mov
shll
mov
fcom
test
aaa
jns
jmp
ret
fs
adc
into
clc
fsub
out
adc
push
fstpt
cmp
xchg
inc
stos
mov
sub
aaa
mov
lar
and
push
int3
ss
andl
push
push
and
inc
jge
repnz
cmpsl
xchg
mov
movsl
jmp
sbb
stos
movsb
mov
jae
jmp
xchg
and
orb
sbb
push
hlt
xor
pop
lahf
loop
mov
push
loopne
mov
pop
cmc
mov
lods
cli
loope
cltd
hlt
xorl
jns
sub
fldenv
ja
sub
mov
cmp
inc
fsts
sub
inc
sbb
jnp
jae
repz
jmp
xor
cmp
push
aas
inc
push
popf
repz
lea
int3
std
or
je
in
popl
stos
dec
dec
xor
int3
pop
int
out
insb
je
and
fisttpll
pop
jle
ds
jb
test
lods
mov
push
lahf
sbb
std
or
cs
cmpsb
adc
sti
negb
ret
xchg
inc
jns
cmp
push
jl
std
pop
test
bound
ret
and
ficomps
imul
or
shll
and
repz
popa
mov
cmp
sub
jmp
or
pop
dec
cs
das
imull
imul
inc
and
sub
sarb
pop
aam
je
push
je
iret
mov
int3
cmp
popa
std
xchg
cmp
iret
adc
out
cmp
mov
cmp
add
adc
ficoms
xor
push
pop
das
cmp
or
sub
loopne
adc
addr16
sti
inc
movsb
inc
jno
into
daa
mov
push
fisubrl
test
das
int3
in
cmpsl
sub
imull
outsb
daa
jecxz
cltd
fnsave
popa
add
add
idivb
jecxz
xor
inc
jge
push
mov
or
push
sub
cmpsl
fwait
mov
ss
lahf
in
jo
jle
orl
mov
mov
mov
test
aad
push
ljmp
jg
stos
scas
les
jbe
and
int
add
shrl
add
or
out
pop
xor
mov
fisttpl
dec
and
add
test
pop
dec
out
pop
popf
push
imul
mov
lret
and
sbb
mov
fistps
stos
out
sbb
imul
push
stc
iret
loope
or
repz
ret
pushf
fisttpl
push
or
jae
inc
adc
xor
push
sub
out
jo
ret
xor
mov
jp
cmc
outsl
insb
or
and
mov
in
jae
in
sbb
mov
test
lea
cmp
xchg
pop
shrl
add
sub
xorl
fdivrp
leave
in
jno
xor
sub
inc
aad
xorl
cli
or
cmp
jno
jno
adc
mov
fsubrl
inc
cmpl
and
push
cmpsb
out
mov
jge
adcl
lret
fsubl
mov
jns
lods
aad
fbstp
ret
sub
out
mov
rolb
mov
fmuls
out
es
mov
pop
jne
ror
aad
int
mov
jmp
push
xor
sub
or
in
adcb
add
les
mov
negl
lret
or
push
pop
outsb
cmp
lret
and
xchg
outsl
and
xchg
mov
pop
xchg
jne
cmp
adc
jmp
mov
xchg
cld
and
mov
pop
jne
aaa
mov
cwtl
jmp
and
xor
stos
arpl
fdiv
or
iret
ds
add
mov
mov
or
shlb
fdivl
sub
je
jge
fldcw
cmp
pushf
inc
sub
xchg
adc
add
cmpsb
pushf
add
icebp
scas
lods
mov
adc
xor
mov
xor
xchg
mov
fbstp
mov
lea
fnstsw
mov
inc
popl
mov
dec
test
cli
or
sahf
into
test
cltd
add
pushf
mov
mov
nop
mov
sbb
push
mov
imul
shll
jbe
adc
imul
lea
cs
shll
cmpsl
xor
int
int
addb
dec
mov
test
aad
into
js
mov
jnp
pop
or
xchg
out
jg
inc
mov
lcall
add
push
xor
stos
dec
cmp
sbb
adc
push
mov
xchg
je
mov
shrb
sbbb
sbb
cmpsl
std
stos
push
sub
daa
subl
sbb
adc
cmp
stos
into
and
xlat
sub
push
jecxz
sub
mov
sbb
xor
mov
add
outsb
iret
mov
les
cwtl
push
and
dec
rcrb
pop
leavew
push
cmp
subl
bound
dec
dec
or
pop
ret
das
jbe
add
test
cmp
clc
push
jne
daa
pop
xor
daa
cmp
fisttpl
shll
adc
popf
sub
mov
insl
mov
add
jg
push
shll
scas
xor
or
sub
inc
ds
pushf
or
mov
lcall
xchg
mov
dec
and
add
cmpsl
stc
std
pop
mov
iret
lcall
pop
lcall
inc
mov
in
shll
test
popa
mov
dec
es
aam
lock
sbb
jnp
xor
imul
push
leave
sub
addr16
mov
movsl
pop
and
xor
push
jge
mov
xor
mov
bsf
cmc
and
and
pop
insl
inc
cwtl
addr16
xor
dec
push
mov
fst
rcrl
aad
iret
xchg
popl
js
add
jle
mov
dec
hlt
mov
inc
popf
in
or
jb
bound
lahf
dec
push
arpl
data16
in
clc
jmp
xchg
push
imul
mov
mov
hlt
adc
shlb
je
arpl
inc
stos
enter
mov
lret
movsl
mov
sub
loopne
out
call
test
sbb
xor
jb
insb
push
or
pop
add
mov
and
or
dec
cmp
pusha
scas
dec
outsl
add
rcr
jp
test
inc
cmp
pushf
dec
out
insb
jne
sub
repnz
cwtl
xchg
lahf
rorb
sbb
lods
call
jae
pop
jge
ljmp
imul
in
mov
lock
out
sub
mov
xchg
xchg
ret
mov
in
es
adc
inc
sbb
xor
rcll
pop
xlat
xchg
mov
jns
add
fcoml
or
popa
lahf
dec
jno
push
xor
pop
aaa
in
lcall
loopne
aaa
test
loop
mov
lock
mov
pop
xor
mov
dec
sti
repz
xchg
mov
les
mov
jb
push
hlt
imul
jmp
sbb
dec
dec
lret
out
add
cmp
xlat
xchg
aad
insl
and
push
add
or
pop
int
enter
adc
add
dec
arpl
pop
xchg
cld
iret
mov
sub
lret
cltd
pop
aas
pop
xor
lds
add
ffreep
mov
shlb
iret
push
sbb
pop
xor
xor
mov
mov
adc
cmp
add
aaa
xor
mov
inc
and
xor
dec
test
jns
ret
mov
adc
repz
mov
test
stc
shlb
repnz
jbe
repnz
sbb
popa
mov
clc
roll
mov
push
enter
mov
sbb
clc
pop
lcall
push
or
cmp
int3
clc
push
dec
imul
repnz
mov
mov
xor
pop
jno
ljmp
sti
inc
jecxz
pop
les
jnp
sbb
arpl
xor
lret
shrl
xchg
aad
jno
repz
and
xor
push
int
fists
add
es
aaa
nop
or
push
cmc
mov
or
xlat
movsl
not
out
sbb
sub
and
xchg
and
cmp
xchg
mov
xor
test
mov
mov
orb
inc
lea
cltd
and
jne
lods
mov
xor
pushw
xchg
insb
aad
fisubrl
std
into
sub
in
sbb
call
in
add
jae
mov
sbb
push
lahf
sub
aam
mov
outsb
addr16
cli
out
ljmp
adc
scas
sub
dec
pushl
js
gs
sbb
jl
loope
pop
jo
pop
ljmp
sbb
sub
pop
out
notb
lahf
aad
cmp
mov
orl
rcrl
jge,pn
pop
incl
stc
jp
push
fnstsw
pop
jecxz
arpl
fsubs
out
icebp
jbe
flds
test
push
xor
test
add
scas
pusha
dec
negl
fildll
pop
or
shlb
ljmp
xor
jmp
dec
bound
lcall
pop
mov
ljmp
jmp
cmp
int
insb
lret
xchg
xchg
test
ret
fidivs
or
xchg
or
ficoml
dec
push
jl
in
out
sahf
cmp
mov
sbb
pop
shrb
ljmp
imul
or
sbb
cltd
push
ret
dec
sarb
add
cmp
pop
mov
jl
mov
movsb
enter
mov
subb
push
sbb
scas
mov
adc
mov
pop
inc
addb
push
jns
cs
dec
aad
frstor
fists
cmp
sbb
xor
and
test
out
dec
scas
outsl
or
inc
cmpsl
outsb
adcb
test
rcll
lods
fisttpll
jecxz
adc
std
insl
jnp
push
mov
jnp
addr16
fs
test
sbb
xorl
or
push
xchg
in
and
or
adcb
sbbl
xchg
jp
or
xchg
xchg
and
mov
and
cmpsb
cmpsb
push
les
shl
ja
fldt
sbb
sbb
sahf
mov
aaa
in
xchg
sbb
pop
dec
ds
dec
jo
lods
jnp
mov
lcall
movb
sub
mov
push
out
cli
idivl
push
js
xrelease
pop
gs
stos
scas
clc
jge
std
ljmp
outsl
outsl
sub
cmp
fdivrs
and
push
arpl
ljmp
call
aam
xchg
add
sbb
jp
test
pop
ja
and
dec
sub
mov
mov
ffree
jmp
fld
aam
push
test
insl
or
enter
fadds
and
jp
stos
add
cwtl
mov
mov
dec
jecxz
popf
test
fwait
cmp
jle
aas
inc
dec
out
mov
sub
pusha
mov
stos
sub
dec
mov
scas
test
lds
mov
sbb
in
lods
xor
mov
idivb
sbb
fs
mov
pop
push
fmul
in
hlt
mov
ficoml
add
cli
add
lea
out
push
jg
shll
push
lock
sbb
push
icebp
pop
mov
pop
rcll
mov
push
loope
push
push
pop
push
pop
pop
and
fldcw
cli
pop
mov
pop
jne
push
pop
cmc
gs
sahf
iret
sahf
xor
sbb
cmp
push
xchg
ret
jmp
pop
jge
cld
sub
out
movsl
and
cmpsb
pop
rcl
adc
mov
outsb
and
imul
jl
loope
cltd
and
in
push
dec
inc
adc
lods
leave
addb
push
pop
pushf
cmp
push
push
mov
ficoml
mov
inc
leave
jmp
add
sbb
ljmp
inc
mov
jp
push
fwait
out
mov
sub
jno
lahf
divl
pop
popa
and
lea
lahf
adc
outsl
movsl
inc
jbe
xor
sub
rolb
adcb
bound
aad
mov
jl
cltd
repnz
xor
insb
imul
add
popa
mov
sbb
lea
and
mov
cmp
cli
imul
or
inc
fisubs
cmpsl
popf
push
and
aaa
cmpsl
lea
jl
adc
mov
out
out
add
repnz
mov
inc
mov
mov
aad
cmpsl
xchg
in
inc
xchg
xchg
inc
popl
idiv
xchg
fdivl
movb
pop
dec
insb
call
bound
in
adc
push
dec
pop
mov
rol
push
ret
mov
shl
int
add
addr16
dec
sahf
mov
adc
or
in
inc
rolb
pop
sti
cmp
pop
ds
addr16
xor
add
pop
rorb
scas
inc
test
mov
js
out
loop
movsb
hlt
dec
add
mov
inc
shll
mov
jmp
jne
das
mov
cli
je
outsb
out
lods
or
cmc
push
dec
inc
loopw
gs
add
lcall
cmp
push
stos
aaa
cmp
mov
cmpsl
sub
outsl
imul
scas
shlb
cs
int
and
out
iret
fs
out
mov
pop
push
push
arpl
add
jge
jmp
test
ret
imul
xchg
pop
clc
jnp
rcll
rcl
sbb
lods
fisttpl
mov
popa
add
xchg
xor
addb
lcall
inc
sub
jmp
enter
cmp
gs
jmp
sbb
in
lcall
push
icebp
in
xchg
pop
sub
fs
jp
pop
loope
fldt
int
aaa
jmp
scas
push
scas
repz
fadds
mov
js
jp
lahf
ror
cwtl
lods
xor
in
icebp
mov
or
sbb
cmp
jne
jge
mov
push
lcall
js
imul
aas
mov
jo
cmpsl
rclb
icebp
cs
cltd
jp
dec
dec
aaa
mov
push
pop
sbb
aad
mov
add
jo
pop
xchg
inc
mov
inc
aaa
into
cmp
adc
push
fwait
test
pop
and
or
pusha
adc
pop
ljmp
jne
imul
ret
clc
mov
iret
lcall
cmp
xchg
loope
and
scas
lods
mov
or
push
fistl
pop
sub
cltd
xor
ret
pop
inc
jbe
vpmacssww
xor
lea
int
cli
sbbb
mov
sub
das
sub
outsb
xchg
enter
leave
outsb
push
js
fisubs
xcrypt-cbc
cmpsl
push
outsl
and
mov
rorb
ljmp
loop
xor
scas
loopne
and
fidivs
js
sti
leave
loopne
lock
jle
jmp
push
xor
pop
mov
jle
xchg
pop
pushf
pushl
and
out
imul
pop
sub
repnz
clc
adc
addb
sbb
ljmp
arpl
hlt
adcb
inc
insb
or
mov
cltd
push
sub
mov
test
pushf
mov
jp
lock
jnp
mov
cmpb
xor
cmpsb
dec
jl
popf
testl
mov
push
and
sub
aas
inc
icebp
dec
ret
sahf
iret
shll
mov
adc
push
mov
stc
pop
shlb
dec
test
stos
jb
and
mov
cmc
dec
xchg
mov
and
sbb
fwait
icebp
test
push
in
lods
icebp
addr16
imul
jge
push
shl
xchg
adc
fistpll
push
pop
aam
sbb
into
sub
loopne
ja
xchg
push
orl
jl
lret
es
xor
and
xor
loopne
int3
fists
repz
movsb
fsubs
jo
mov
and
jae
int
mov
test
push
scas
fmuls
mov
cmp
icebp
pop
scas
call
pop
sub
fstp
in
and
pusha
sub
inc
fs
sahf
pop
add
pop
pop
mov
arpl
icebp
out
jo
stos
int
cld
xor
sbb
push
jg
xor
mov
or
inc
and
xchg
int
pop
loop
jmp
sub
clc
popf
inc
or
fisttpll
jp
cmp
pushf
repz
dec
xchg
and
mov
xlat
call
jnp
iret
lds
jae
sub
adc
insb
xchg
iret
lcall
xchg
jnp
ret
mov
in
add
jmp
or
adc
cmp
test
ja
xchg
pop
and
and
out
mov
pop
and
jmp
ret
sete
int3
inc
add
test
out
xor
jb
aad
sub
out
repz
repz
inc
pushf
les
push
out
lods
adc
mov
inc
in
stos
jmp
cld
mov
jecxz
sub
xchg
std
out
dec
lds
test
mov
aaa
push
inc
gs
insl
movl
scas
insb
or
cmp
cmpsb
adc
sbb
fs
xchg
jl
mov
dec
sbb
or
ja
aas
lds
cvtpi2ps
xchg
shlb
inc
jge
sbb
adc
das
adcl
jo
adc
lret
out
lcall
jge
bswap
adc
jmp
les
xor
fnstcw
push
arpl
dec
mov
mov
in
loop
dec
jl
xchg
lea
sbbl
popf
in
jne
and
pop
inc
xchg
cmc
cmp
mov
push
pop
jle
arpl
das
jbe
cmpsb
or
fsubl
int
jnp
lock
add
imul
mov
sbb
out
movsb
insl
aaa
movsl
or
inc
or
mov
xor
int
stos
pusha
push
push
imul
js
movsb
in
in
or
test
cmp
mov
scas
loop
arpl
mov
adc
adc
push
loop
loopne
movsl
cli
icebp
rorb
xor
faddp
xchg
loop
lods
outsb
cmpsl
int
pop
mov
fwait
jmp
cmpsb
push
ss
das
jno
fwait
jl
gs
movsb
xlat
inc
push
aas
or
int
inc
cmp
scas
xchg
xor
js
push
shlb
inc
stos
test
ret
cmpsl
test
js
cmp
imul
jo
stos
add
xchg
inc
inc
add
lret
cmc
jb,pt
cmp
test
xchg
mov
push
lods
cltd
lret
out
mov
mov
jg
std
es
pop
cmpb
mov
aam
or
sub
test
and
mov
jle
in
loop
pop
and
push
mov
inc
shlb
adc
mov
sbb
mov
aam
fldl
xor
leave
push
and
cmpsb
cwtl
mov
pop
ficoms
call
ret
add
and
lock
xor
in
xchg
inc
cmc
mulb
insb
mov
xor
adc
fs
sbb
adc
sbb
sbb
jne
sub
mov
ja
jmp
sbbb
outsb
shlb
push
push
sbb
fnstcw
jae
rcrb
les
lcall
pop
inc
divl
shll
es
lcall
or
cli
ljmp
cmp
add
mov
loop
jp
adc
test
jb
iret
aad
popa
repz
dec
push
pop
pop
push
add
hlt
add
out
xchg
outsl
add
mov
mov
les
cwtl
into
xchg
jmp
js
sbbl
call
das
inc
push
sub
std
testb
sbb
xchg
cmp
push
add
mov
loop
mov
jecxz
dec
mov
and
ss
lret
aas
dec
hlt
push
aaa
pop
into
incl
and
inc
pushf
fsts
dec
xor
mov
lret
cltd
mov
shlb
mov
xor
mov
lds
inc
dec
enter
inc
fadds
aad
push
lock
or
mov
in
push
jnp
lret
out
jp
xchg
mov
dec
gs
cmp
sbb
dec
sub
insl
mov
scas
test
fs
pop
enter
insb
push
mov
mov
or
xchg
aaa
jno
adcb
lret
sbb
das
cwtl
aas
shll
insb
mov
pop
imulb
adc
pop
mov
and
mov
xor
outsb
or
outsb
xchg
popa
int3
sti
push
push
pop
jno
cmp
fwait
push
xchg
xchg
xor
aaa
shrb
test
cmc
ret
jne
nopl
mov
xor
test
pushf
xchg
add
cld
arpl
sahf
or
add
pop
test
fadd
cmp
or
jle
jns
mov
inc
jae
test
rolb
mov
add
call
inc
or
jmp
call
add
pop
mov
fimuls
and
jns
lods
ret
pop
and
jb
xor
mov
jnp,pt
call
mov
mov
test
jle
pop
stc
or
sahf
add
subl
outsb
fsts
test
lret
arpl
in
shlb
cli
dec
addr16
lret
sbb
push
std
or
jno
mov
lods
mov
popa
jne
nop
mov
dec
iret
mov
mov
pop
dec
lret
mov
movsl
subb
jl
fistl
xor
les
dec
cmp
inc
inc
jo
scas
jecxz
jns
ljmp
pop
movsl
in
mov
andb
daa
pop
cmp
incl
sub
das
adc
add
mov
jmp
mov
mov
lcall
stos
pop
stc
orl
xchg
xchg
negb
sbb
adc
jg
pop
pop
cs
cmp
ja
mov
xchg
fistpl
outsw
sub
xor
mov
out
std
mov
pop
or
lea
cmp
and
aaa
adc
jge
add
and
icebp
xor
ljmp
cmp
mov
lar
faddp
lock
fwait
xchg
xchg
sub
xchg
dec
mov
xor
sti
stos
push
bound
push
inc
into
cmpsl
pop
js
lcall
scas
push
test
lret
pop
lock
sahf
push
aad
loop
out
scas
fld
je
push
jge
nop
inc
stos
int
xor
adc
mov
out
out
fadds
xchg
cmp
out
cmp
jmp
mov
cmp
out
icebp
jge
jae
add
sbb
negb
mov
aaa
jp
inc
rclb
jns
lea
aas
imul
cmp
mov
inc
ds
inc
inc
push
shrb
add
or
faddl
jg
nop
jecxz
pop
xchg
add
mov
jp
outsb
call
cld
mov
lea
aam
repz
jo
mov
sub
mov
cmp
ss
dec
int
jne
cmp
mov
jg
jecxz
dec
or
mov
movsb
daa
or
test
or
icebp
gs
xor
test
ja
xor
pop
or
xchg
sbb
ljmp
test
std
test
push
jmp
fimull
pushf
add
xor
or
dec
mov
pop
notl
orb
fsubr
mov
xchg
xor
scas
mov
loopne
or
pop
testl
fldcw
pop
mov
sahf
dec
jle
xchg
adc
adc
ds
int
clc
jmp
cmpsl
icebp
xchg
lret
jmp
icebp
lcall
jecxz
sbb
into
sbb
gs
push
inc
add
jae
mov
mov
rcll
adc
sbb
dec
fmull
popf
mov
mov
inc
xor
je
xchg
int3
sbb
xor
test
xor
in
xchg
sbb
rorb
dec
adc
xchg
dec
pop
pop
push
cmc
mov
pushf
not
scas
adc
cltd
movsb
ret
lcall
and
xlat
int
sarl
pop
push
push
enter
mov
fldt
ret
xchg
mov
lahf
and
push
out
jnp
cli
frstor
sub
ret
mov
xor
loope
movsb
and
lock
xorl
cli
aad
clc
cmpsb
inc
push
ror
fsubrp
mov
fisubs
pop
inc
pop
xor
xor
std
xchg
scas
mov
pop
mov
cmpsb
mov
push
sub
and
xor
adc
pop
add
jnp
cmpsb
bnd
jb
stc
adc
fdivs
and
int3
das
push
ret
cmp
sub
stos
mov
cmp
addr16
repz
out
jnp
push
jecxz
cmp
sub
js
xchg
std
lods
pop
bound
or
cld
jecxz
fldl
std
sub
dec
xor
add
xor
mov
lret
imul
mov
xor
dec
xor
inc
shrb
inc
or
insl
mov
add
rol
dec
mov
pop
loope
and
cmp
cmp
std
cmp
les
pop
mov
cmp
xor
lret
xchg
test
enter
xor
pop
rorb
cmp
dec
dec
mov
out
lret
sbb
sbb
xchg
inc
add
in
mov
add
xchg
movsb
addr16
ljmp
fistl
cs
adc
mov
test
jmp
xchg
loop
cmp
test
xchg
cmp
aas
and
cmc
add
or
sbb
imul
icebp
push
sub
in
jp
cmp
dec
sub
mov
fistl
sub
loop
push
shlb
and
fcoml
push
rorb
leave
in
xor
mov
mov
lcall
pop
mov
mov
jno
and
cmp
cmp
xorl
fprem1
mov
fs
fdivrl
out
iret
xor
pop
mov
dec
mov
sub
inc
xor
xlat
iret
mov
mov
or
dec
push
jge
loop
sub
je
jmp
test
jno
popl
push
xchg
pop
dec
sub
cmp
stos
pop
js
fs
mov
mov
movsl
mov
sbb
push
sbb
fldl
mov
fcomps
popa
ds
pop
in
mov
pop
sub
add
and
fdivp
out
mov
jo
pop
rolb
dec
push
cmp
lds
cmp
push
in
add
dec
sub
ds
loop
fwait
inc
pop
cmpsl
xchg
cmc
push
push
mov
jbe
ret
int
or
inc
mov
mov
inc
dec
pop
jnp
ret
mov
xchg
adc
imul
or
testl
ficoms
imul
add
mov
scas
mov
fsubl
xchg
jb
jns
shll
cmp
loop
cmp
mov
inc
sub
lcall
xchg
mov
cmpsl
cli
pop
incl
mov
mov
xchg
imul
rcll
loop
clc
pop
pop
int
lret
fs
push
fs
lds
mov
jg
mov
jo
repnz
add
push
pop
enter
repnz
cwtd
ja
imul
pop
lret
sub
je
or
mov
shrl
cmp
dec
loop
mov
push
push
cmpsl
push
scas
orl
fsubl
lret
add
xchg
cltd
push
in
and
stos
stc
fnstenv
movsl
adcb
popa
xchg
cmp
fs
dec
stos
loopne
adc
pop
call
push
iret
push
popa
test
aaa
cli
pop
out
and
push
inc
jae
lds
mov
inc
fnstcw
xchg
ds
data16
stos
xchg
iret
mov
sbb
loop
dec
push
clc
ja
dec
mov
shrl
sbb
imul
add
scas
xchg
or
inc
inc
nop
nop
adc
push
icebp
icebp
jne
test
or
in
negl
arpl
fs
fidivs
int
push
enter
push
cmp
xor
push
mov
jecxz
adc
mov
push
push
movsb
clc
outsb
pop
jo
adc
add
push
cwtl
xor
and
fdivs
inc
pop
test
push
add
lds
sbbb
xor
xchg
aad
ficoml
mov
mov
dec
pop
and
mov
push
jmp
popf
inc
lock
pop
dec
or
ss
hlt
xor
rcrl
push
cmc
scas
add
sahf
mov
clc
push
movsl
sahf
or
enter
mov
push
js
push
pop
push
or
hlt
subb
iret
adc
push
jne
enter
mov
adc
cmc
mov
arpl
cmp
and
test
adc
xchg
ret
imul
or
pop
popl
stos
lock
repnz
mov
cmp
incl
dec
int3
jg
shrb
push
aam
addr16
lahf
pop
ret
sbb
mov
push
cmpb
mov
jbe
mov
pop
xor
and
fnstenv
mov
in
adc
int
js
jg
xor
mov
fdivrl
into
sahf
nop
fcmovnb
into
push
pushf
repnz
movsb
sbbb
addl
mov
xchg
dec
mov
out
cmp
jmp
cmp
dec
mov
rcrl
sbb
jno
jno
jmp
pop
fdivs
cmovp
inc
and
adc
scas
mov
adc
movsb
xchg
pop
inc
shrl
push
xor
hlt
add
jns
xchg
aaa
jl
test
cli
aad
aad
insl
pushf
lock
jne
sahf
test
daa
repz
mov
sbb
mov
in
mov
pop
dec
scas
xchg
or
pop
iret
in
xchg
dec
lods
cmp
and
insb
orl
mov
jp
mov
pop
push
sub
movsl
jns
ljmp
inc
rcrb
cmc
dec
into
fdivs
jno
pop
or
loop
lods
xor
rorb
xor
icebp
xchg
dec
and
int
das
in
jnp
lds
fwait
adc
fnstcw
leave
jnp
mulb
or
daa
in
cmp
fcomi
xor
sbb
add
mov
ja
out
push
insl
clc
mov
testl
jle
shll
inc
cld
gs
js
pop
pop
adc
mov
cltd
push
sub
mov
lret
push
dec
popa
lret
lds
fildl
clc
and
lret
ret
js
jnp
je
addl
pop
movsl
mov
or
enter
push
sub
xor
pusha
xchg
cmc
std
cmp
iret
dec
test
sbb
in
out
mov
fisttps
pop
mov
loopne
cli
gs
sub
dec
jbe
aam
pop
repz
dec
jl
mov
dec
dec
ss
jle
clc
cwtl
xorl
aaa
mov
mov
sbb
xchg
fucomi
dec
jg
jg
xor
cli
pop
fs
adc
sbbl
cwtl
or
pop
mov
addps
bound
mov
das
stos
decb
hlt
cmp
sub
cwtl
push
sbb
mov
mov
push
rcrl
inc
js
fs
aam
rol
adc
cmpl
scas
sti
xchg
xchg
jae
mov
push
jo
and
insl
mov
adc
add
xchg
xchg
in
xlat
out
das
mov
add
adc
aaa
or
pop
mov
add
mov
mov
mul
pop
movsl
push
sub
pushf
notl
and
sbb
mov
push
imul
std
nop
lock
hlt
xchg
push
push
mov
decl
push
cs
xor
lahf
or
leave
push
test
cmpsl
out
insb
sbb
je
inc
in
in
rolb
out
addr16
mov
fwait
add
scas
fdiv
es
jnp
cmpsb
rcll
mov
sti
rolb
fldcw
pop
fisttps
stos
sbb
push
dec
jmp
jno
in
jo
mov
lahf
movsl
nop
fcmovnu
sti
push
inc
rol
mov
divl
fcmovbe
cmp
sbb
mov
jne
jne
xchg
mov
leave
icebp
orb
daa
and
pop
mov
xchg
push
popf
mov
shll
mov
rorl
std
movsl
test
or
fwait
cmc
daa
enter
jns
adc
cs
push
add
loop
es
xchg
pop
sbb
cmp
outsb
or
cwtl
xlat
mov
xchg
inc
xor
and
data16
scas
popa
imul
arpl
arpl
xlat
mov
jecxz
mov
stc
xchg
jo
pop
jbe
in
add
adc
imul
mov
test
lahf
mov
sub
hlt
int
dec
dec
mov
shlb
cmp
inc
fcoml
imul
dec
cs
mov
xor
add
mov
stos
cld
cld
ja
dec
lods
hlt
mov
insb
xchg
cmp
movsb
out
scas
das
push
pop
push
adc
xorb
cltd
cmp
sbb
xchg
enter
sub
push
cmpsb
in
aas
add
sarl
scas
test
cmp
sahf
lock
jecxz
lret
lret
xlat
cmpsb
lcall
jg
aas
mov
addr16
mov
jns
incl
mov
out
pushf
gs
jbe
xchg
lret
mov
jg
pusha
push
xchg
mulb
pop
stc
xor
mov
ficompl
es
inc
fwait
dec
dec
cmp
mov
cmpsl
sbb
or
cmp
add
daa
repz
xchg
add
jmp
cmp
orb
lods
shlb
std
scas
dec
jns
fimull
jl
push
test
loopne
inc
out
pop
adc
lcall
call
cmp
das
cli
xor
jmp
addr16
cmc
scas
push
or
ucomiss
movsb
testb
das
data16
imull
dec
jmp
cld
in
pop
and
stos
cs
push
in
ss
adc
cmp
loop
cwtl
bound
adc
pop
decb
xor
or
inc
mov
cmp
dec
cmp
outsb
int3
movsl
repnz
shll
xchg
mov
jecxz
lcall
ret
stos
mov
sub
fbld
imul
mov
roll
fistl
outsb
test
jecxz
fs
cmpsb
jae
dec
bound
cltd
fdivrs
push
jle
lahf
or
jmp
call
and
sbb
sbb
scas
jle
out
jl
jmp
movsb
cmpsb
sahf
jbe
aas
das
cmp
jne
xor
arpl
cltd
inc
jge
out
leave
into
mov
outsl
fnstenv
jne
jb
jae
and
stc
jmp
sbb
fldt
mov
mov
push
jnp
mov
add
jp
add
xor
iret
lods
cmp
inc
add
faddp
and
test
pusha
sti
or
add
faddl
xor
xor
adc
scas
imul
test
sbb
pop
daa
or
xchg
jp
and
lret
nop
das
or
sbb
imul
jp
icebp
xchg
pop
in
mov
lret
daa
incb
aam
and
adc
jecxz
movl
xchg
incb
pushf
xchg
mov
inc
mov
in
push
gs
icebp
adc
ja
fucomip
pusha
ss
jb
jne
int
jecxz
push
shll
iret
adc
cmp
jg
fisubl
stos
ja
fnstsw
push
push
stos
jg
and
sti
push
mov
in
and
in
push
dec
xor
sub
push
sub
mov
mov
stos
iret
xchg
hlt
xchg
in
adc
movb
adc
aaa
cmpsl
lods
fcoml
popa
outsb
jle
test
ss
mov
in
push
std
fmuls
ds
popf
icebp
scas
or
inc
ds
sub
inc
push
aaa
inc
lods
jns
pop
repz
shll
mov
dec
pushf
pop
ss
dec
cmp
push
dec
add
mov
mov
jno
sbb
jns
adc
je
xor
lcall
pop
popf
test
mov
inc
adc
push
mov
cli
adc
xchg
cmp
test
sahf
cmp
daa
cld
jl
push
add
push
arpl
inc
sbb
mov
mov
xor
sub
mov
lret
push
xor
xchg
sar
gs
and
test
xchg
push
mov
xlat
and
mov
popl
dec
jnp
lds
dec
mov
lcall
iret
imul
add
popl
cmpsl
cmp
pushl
into
xor
sub
cmp
xchg
sub
pop
repz
push
fbstp
std
lock
ja
adcl
sbb
and
lea
pop
adc
out
cmp
fcmovnu
rcr
add
xor
popa
jl
loope
aam
rolb
cmp
aam
dec
push
pop
or
popf
mov
or
sub
das
ja
gs
dec
out
jnp
mov
mov
xchg
rcll
ffree
push
inc
or
xor
jno
loope
mov
or
fsubrl
mov
cmpl
or
dec
fsub
jp
test
mov
sub
call
xchg
mov
lods
adc
loopne
cmp
stos
lock
in
mov
std
dec
insl
jle
mull
dec
loopne
je
jns
inc
mov
mov
clc
adc
xor
inc
cmp
mov
pushf
out
mov
das
dec
mov
lea
push
jbe
jns
iret
mov
ss
shlb
sbbb
xor
int3
push
test
mov
push
jmp
ret
jge
mov
fnstcw
out
jne
adc
jnp
not
pusha
fnstsw
adc
lea
or
in
push
push
jle
clc
pop
mov
or
mov
mov
push
jne
xchg
cmp
cld
xchg
dec
dec
jne
xchg
adc
pop
incb
std
xchg
dec
jmp
pusha
enter
andl
lock
and
aad
add
xchg
js
or
dec
inc
lcall
pop
cmpsb
mov
sub
jp
mov
outsb
scas
jo
test
movsl
xorl
ds
popa
jge
jnp
mov
lods
add
sub
cmpsb
mov
sbb
dec
nop
jne
mov
enter
arpl
or
and
sbb
rcrb
push
enter
fisubrs
gs
mov
mov
in
pop
ds
rol
out
adc
inc
xchg
ficompl
push
dec
mov
popa
scas
adc
mov
mov
lahf
xor
test
cmpsb
gs
mov
and
pusha
cmc
sbb
fists
push
lret
inc
jne
outsl
jg
lods
jae
push
jno
aas
cmp
insl
aam
xor
mov
fs
cmp
jl
push
add
pop
das
stc
push
inc
jmp
xorl
and
sub
popf
clc
lods
mov
in
shrb
sbb
stos
into
ret
pushf
push
push
inc
daa
daa
adc
pop
imul
inc
mov
or
inc
add
in
hlt
fstpt
adc
mov
les
std
imul
mov
mov
jae
inc
inc
scas
xchg
pop
xchg
xchg
popf
stos
or
dec
cmp
into
out
mov
mov
fcoms
pop
call
and
mov
shrb
lods
xchg
xchg
je
arpl
jne
cli
andb
xor
loop
sub
cmp
fstpl
test
shrl
lea
cmp
out
push
dec
cli
test
sub
outsb
mov
rorl
push
ror
icebp
pop
in
dec
or
mov
iret
popa
ret
lock
sub
mov
out
shrb
mov
push
rcrb
adc
imul
stc
dec
or
and
pop
popf
mov
lods
scas
cmpl
repnz
adc
add
cmp
sub
xchg
fnstcw
sbb
clc
mov
leave
cs
lcall
push
xchg
mov
mov
lea
fstpt
sarl
cmp
adc
pushf
pop
pop
dec
xor
in
jecxz
enter
in
push
cmp
repnz
xchg
loop
cs
push
jmp
insb
cmp
inc
push
cli
shl
cwtl
fnstcw
sub
mov
jne
jle
dec
xor
push
sbb
test
popa
mov
insb
jae
or
lcall
push
add
fists
loop
xchg
inc
mov
daa
dec
push
fstpl
in
mov
and
and
xor
cmp
fucomip
mov
adcb
push
test
lods
jle
shl
aad
pop
cli
inc
push
lret
stos
mov
sbb
stos
jno
das
ror
dec
rorb
jge
pop
push
fs
into
cmpsb
jb
shl
adc
in
aam
xlat
add
push
push
adc
cmp
testl
and
inc
fimull
stos
push
push
clc
or
ret
std
je
les
int3
loope
imulb
ss
push
call
cmp
xchg
lods
imul
icebp
ret
popl
mov
movsb
lcall
pop
and
mov
or
shll
xor
push
mov
lret
mov
pop
out
pop
or
lock
sub
push
add
int3
and
mov
mov
clc
jp
mov
and
jns
add
mov
lds
inc
shl
cmp
push
mov
pop
pop
cmpsb
add
jnp
and
js
jo
sbb
lock
mov
pop
inc
int3
insb
lret
scas
inc
push
popf
int
adc
lea
mov
inc
icebp
adc
or
fcmovne
mov
aam
or
lock
sub
aaa
js
cmc
lods
stos
jbe
adc
jl
pop
cmc
ljmp
aam
in
dec
je
xlat
push
sbb
pushf
add
cmp
mov
ret
jo
jmp
dec
fmuls
arpl
push
add
mov
xchg
push
adc
in
push
sarb
jge
or
stos
lahf
add
mov
subb
mov
push
pop
out
or
xor
inc
int3
jmp
in
mov
jg
mov
mov
jmp
adc
stc
fnstcw
clc
call
aam
out
testb
mov
sub
or
jmp
test
jae
jmp
ffree
xchg
leave
or
adc
lods
outsl
movsb
out
into
pop
adc
pop
mov
add
pop
push
jmp
inc
nop
ds
pop
sahf
pop
mov
test
dec
loope
pop
jg
cmp
rclb
data16
popa
fdivrl
xor
push
sub
add
mov
fistl
std
aam
mov
dec
shl
int
dec
add
jbe
cmpsb
or
push
inc
mov
pusha
arpl
mov
dec
mov
sub
ljmp
mov
ss
fsubl
ds
ljmp
dec
jb
pop
or
pop
sub
jnp
loopne
mov
push
movsl
inc
sarb
mov
cmp
adc
sbb
and
outsl
js
or
test
sbb
aas
les
ss
lahf
mov
orb
insb
jno
and
jp
mov
addl
fidivrs
cmpsb
mov
mov
push
or
xor
in
pop
xchg
mov
mov
jecxz
cwtl
out
push
cmpsl
cmpsb
sti
lock
enter
cmp
rclb
mov
mov
stos
cmp
adc
mov
sti
fisubrl
ds
or
decl
inc
loope
or
jo
mov
pop
lret
xchg
push
mov
mov
dec
rcrl
adc
inc
cmp
testb
fwait
bound
dec
fbld
push
xor
lds
jno
movsl
cmp
inc
add
bound
mov
adc
sub
mov
pop
mov
dec
loopne
push
leave
mov
sarb
lret
je
push
shrl
movl
push
loope
dec
jae
jnp
push
pop
dec
lock
loope
scas
adcl
imul
es
not
aam
sbb
add
ret
pop
cmp
mov
inc
xchg
push
faddl
pop
push
fdivs
adc
push
fcomip
xor
mov
xor
xchg
and
loop
pushf
lret
xor
sub
movsb
ret
pop
int3
pushf
into
popa
xor
xchg
call
cmpsl
sahf
test
gs
push
iret
cmp
inc
test
in
inc
enter
addl
cmp
mov
cmpl
iret
lcall
mov
inc
out
push
movsb
jno
sub
movsb
and
cmp
mov
mov
mov
pop
xchg
stc
jns
scas
fcmovnb
sub
xor
int3
push
js
xor
inc
fs
xlat
and
cld
and
mov
repnz
cli
imul
mov
jb
sub
fldt
das
push
je
stos
divb
or
iret
lahf
inc
xchg
repnz
jns
or
mov
hlt
jle
andl
ret
ja
pop
fcompl
ss
xchg
xor
out
and
jne
psubw
int
cmp
mov
lock
test
int
adc
pop
push
xchg
lods
mov
filds
dec
fwait
mov
fwait
aad
dec
pop
rorb
sti
push
pop
mov
mov
es
cmpsl
shll
rclb
ret
test
cmp
pop
xchg
lret
nop
lahf
sbb
xor
push
vpmacsdqh
bound
fnstcw
ja
loope
cmp
int3
inc
std
push
adc
pop
outsb
mov
push
loope
push
xchg
inc
imul
xchg
xlat
fmull
xor
shl
cmp
jns
mov
shll
les
jae
xor
dec
cmp
frstor
push
enter
sahf
mov
orl
dec
push
jo
ljmp
lcall
push
xor
sub
shlb
out
pop
test
mov
dec
and
pop
push
aam
fdivp
mov
adc
aas
xchg
movq
jb
testl
jno
xchg
inc
movsb
add
popf
mov
mov
imulb
mov
subl
scas
jo
inc
xor
incb
or
push
ds
xchg
inc
pushl
repnz
dec
pop
fsubrl
push
pop
jle
aaa
imulb
pop
neg
mov
cmpsl
or
sub
pop
cmp
cmp
pop
sbb
cwtl
lahf
addr16
jnp
mov
cmp
xchg
pop
jnp
cs
jno
sub
mov
adc
xor
push
sti
sbb
call
cmp
xor
insb
jp
aam
jbe
dec
fcom
add
pop
lods
adc
push
sbb
xchg
sub
rorb
xor
push
mov
inc
fmul
inc
test
insl
dec
pusha
push
and
hlt
lods
cmpsl
cmp
mov
hlt
rcrb
scas
arpl
mov
pop
sbb
cmp
push
push
daa
icebp
jge
sub
cmpsl
es
mov
lock
xchg
add
mov
jmp
mov
lds
add
lock
or
into
ss
sti
pop
ss
xor
pop
rol
aas
adc
mov
dec
ljmp
dec
mov
in
adc
jl
jbe
sbb
jb
pushf
jb
incl
dec
xor
cmp
mov
enter
sub
jle
add
in
fadd
or
divb
subl
ss
mov
xchg
mov
fwait
je
sub
pop
push
rcrl
gs
or
mov
jp
fidivrs
pop
inc
jmp
mov
stc
loopne
inc
cmpsb
mov
xchg
mov
mov
push
jge
sub
bound
subb
les
sub
add
mov
iret
pusha
mov
pushf
jmp
lahf
addr16
mov
jmp
xchg
rclb
mov
ja
je
in
mov
addl
add
inc
cmp
and
addr16
mov
repz
icebp
aaa
decl
xchg
push
stc
aas
mov
rorb
sub
mov
push
call
xchg
mov
jl
inc
cmp
cmpsl
mov
cmp
or
cmpsl
shll
neg
inc
push
out
call
cmp
push
out
xor
sbb
xlat
int3
add
les
pop
mov
jecxz
gs
das
dec
sub
or
loop
fsubrl
cmc
xor
sub
les
jae
inc
xchg
imulb
out
andb
pop
mov
outsb
jg
jle
mov
add
hlt
insl
rclb
xchg
icebp
inc
dec
or
jns
adc
psrlq
pop
jle
shlb
xchg
xchg
in
aas
popa
xchg
mov
jg
je
mov
testb
jae
sti
imulb
mov
lea
dec
mov
jo
pop
or
mov
dec
xchg
ds
repnz
ficoms
scas
xchg
sbb
insl
jno
outsb
dec
jne
or
cmpl
add
lock
cmp
insb
cli
popa
les
inc
mov
cmc
pop
stc
xor
lods
or
lcall
sub
xchg
pop
push
fidivrs
stos
test
bound
jbe
jno
sub
clc
inc
adcl
into
xchg
pop
imul
dec
pop
jbe
lret
rolb
in
test
data16
jnp
loop
int
xchg
ret
inc
in
xchg
nop
mov
push
add
out
dec
push
imul
sbb
cmpsl
pop
loopne
lds
gs
int3
add
mov
out
xchg
inc
dec
mov
inc
bound
aaa
repnz
xchg
std
ljmp
jno
stos
arpl
pop
leave
jl
push
jecxz
xchg
or
xchg
xor
inc
pushf
es
fnstenv
pop
xor
rorb
adc
jbe
stos
inc
adcl
xchg
test
in
mov
scas
dec
mull
scas
testl
cwtl
xlat
mov
pop
xor
xchg
fdivrs
movsb
mov
xchg
insl
mov
xchg
loopne
inc
cli
inc
cmp
sbb
pop
leave
test
loope
fucomi
mov
stos
in
daa
inc
lds
sub
push
pop
fildl
mov
imul
cs
add
push
clc
loop
and
push
adc
out
jo
lock
ljmp
jb
insl
push
ss
rep
cmp
daa
popa
adc
xchg
loopne
in
push
sbb
xchg
in
cltd
mov
cld
mov
xor
daa
xor
in
dec
jb
mov
mov
outsl
mov
pusha
enter
fucom
dec
push
mov
add
xchg
scas
jo
sahf
call
in
mov
and
pop
fldl
xchg
enter
rcrb
pop
pusha
scas
fisubrs
lret
pop
cltd
scas
mov
clc
cmpl
pop
pusha
iret
mov
mov
insb
sbb
mov
loope,pt
iret
cmpl
dec
cmpsl
add
add
lods
inc
push
inc
pop
add
das
jmp
cmpsb
or
xabort
mov
mov
nop
fimull
pop
ret
shrl
xchg
loopne
sub
fyl2xp1
inc
gs
arpl
jmp
cli
loopne
fldl
adc
js
call
inc
mov
test
jae
sub
dec
jo
cmp
mov
sub
sti
mov
decl
cmp
lret
insb
adc
iret
frstor
jmp
int3
arpl
mov
dec
push
or
xor
ds
push
repz
push
ret
sub
sub
movsl
imul
pop
pop
inc
dec
sbb
out
es
cmpsl
dec
call
stos
or
lea
js
sti
push
cld
inc
scas
mov
push
mov
out
mov
or
cld
cmp
inc
mov
xor
imul
fwait
int3
test
pushf
xor
cmp
int3
xor
pop
int3
aaa
mov
cwtl
add
cmpsb
gs
daa
pop
dec
divb
aam
mov
sub
mov
lret
adc
mov
dec
lret
shll
push
outsl
call
fldenv
mov
push
jno
xor
jmp
xchg
xchg
in
push
jecxz
aaa
iret
jmp
dec
cli
je
mov
and
fcoml
hlt
outsl
ret
jno
inc
pop
ret
and
add
sub
pop
sti
jne
bound
std
mov
jns
mov
or
out
mov
js
imul
add
testb
xor
xlat
pusha
cld
pop
cmp
jmp
sub
xchg
xlat
lahf
testb
psubw
pop
and
clc
pusha
ljmp
mov
jg
jmp
btc
stos
jle
dec
test
cltd
push
adc
dec
dec
repz
and
js
fs
jno
out
lret
test
mov
jne
js
adc
int3
add
push
pop
ret
loopne
ja
add
cmp
stos
jge
add
xor
scas
and
out
sub
sbb
lea
clc
bound
push
xor
ret
mov
xor
inc
scas
add
mov
mov
sbb
push
xchg
std
adc
aaa
sbb
into
imul
outsl
enter
mov
sub
sub
and
jge
xchg
push
mov
xchg
fsubrp
xchg
call
int
sbb
adcb
dec
ljmp
sub
lock
dec
xor
fldl
movsl
outsl
inc
lock
repnz
xchg
scas
lods
stos
les
mov
movsl
enter
in
enter
push
in
xor
adc
sub
mov
faddl
sbb
mov
imulb
inc
inc
inc
xor
test
int
out
sub
mov
xchg
or
xor
mov
and
cltd
in
mov
mov
ret
movsl
fmul
xchg
pop
lock
xchg
adc
pop
testb
iret
scas
jb
dec
xor
pop
add
add
dec
sahf
cmpsb
rolb
mov
mov
mov
scas
mov
es
adc
pushf
mov
mov
add
mov
or
xchg
repz
sbb
inc
popf
out
dec
gs
mov
xchg
mov
rcl
es
jg
cmpsb
cmp
jo
jno
mov
rcrb
arpl
jle
mov
dec
hlt
in
lods
add
add
rcll
punpckhdq
arpl
ja
adc
mov
adc
jbe
sub
popa
mov
ljmp
xor
lods
mov
and
clc
pop
jmp
in
jae
jge
and
cwtl
aam
sub
dec
aad
add
lahf
ret
adc
mov
data16
adc
jno
repz
adc
cmp
push
and
jno
push
sarb
adc
cmpsl
adc
les
pop
cmp
mov
loopne
jle
in
repz
push
push
cltd
hlt
pop
mov
push
repz
mov
stos
jle
mov
sub
adc
jne
bound
push
fimuls
call
pop
fwait
sbb
sbb
imul
jb
pop
fisubrl
inc
mov
sti
xor
sarb
shl
and
cmpsb
dec
les
clc
outsb
mov
shr
stc
adc
or
int
mov
bnd
lcall
jae
jge
jle
or
xor
sub
xor
xlat
jae
roll
test
jnp
loope
shl
push
jbe
or
mov
mov
push
dec
push
cmc
popa
and
call
sahf
shrb
add
aad
dec
ja
les
shlb
ds
inc
pop
sub
lret
insb
insl
and
pop
lcall
pop
pop
out
test
inc
mov
cmp
push
lds
xchg
jmp
daa
faddl
dec
mov
sbb
cmp
es
mov
fwait
stc
sbb
xchg
inc
push
sbb
lahf
leave
mov
cwtl
divl
fnstcw
lret
push
mov
or
cmp
add
xchg
sbb
and
pop
out
ss
clc
lds
mov
xor
push
in
sub
mov
out
cltd
dec
lock
aad
xchg
jnp
sub
cmp
xor
bound
into
lret
pop
js
add
ds
fdivl
cmp
dec
addr16
fwait
inc
inc
pop
inc
adc
sub
push
pop
loop
mov
out
mov
pop
add
movsl
jmp
loopne
icebp
rcl
jne
cmp
dec
ret
in
xchg
push
jns
cs
dec
je
in
into
jp
sub
mov
jno
mov
js
pop
sbb
movsb
arpl
out
dec
jno
pinsrw
aaa
inc
fcomps
mov
push
jecxz
ficoml
in
rcll
sbb
add
cmpl
sbb
mov
jecxz
jmp
jns
pop
sub
es
hlt
inc
into
cmp
or
gs
movsb
gs
jbe
and
dec
movsl
or
test
and
mov
fsubs
or
sbb
hlt
push
cmp
inc
popa
out
test
out
push
out
push
mov
jge
lahf
cmp
pop
mov
cmc
daa
xor
lcall
fsub
pop
ljmp
lock
mov
cltd
lahf
fisttpl
cwtl
aaa
je
lods
loop
test
mov
sahf
sbb
into
cmp
out
or
in
push
xchg
mov
pop
push
jno
fsubrs
and
cltd
sub
rcll
iret
sub
dec
mov
pcmpgtb
xchg
ds
popa
out
xlat
mov
push
icebp
imul
dec
pushf
das
loopne
mov
adc
xor
daa
push
xchg
adcl
outsb
dec
jnp
dec
cs
xor
das
in
shll
std
das
adc
pop
sub
fwait
and
mov
into
pop
mov
sub
popf
jp
mov
mov
xlat
jp
cwtl
mov
adc
lods
popa
and
int
cwtl
adc
dec
or
mov
push
pop
push
pop
or
js
dec
js
jg
outsb
and
loop
in
fidivrs
mov
adc
rol
dec
pop
cmpsb
cmpsl
shll
and
cmp
scas
jmp
dec
mov
popa
pop
xchg
jns
push
mov
aam
mov
jb
filds
or
aad
xchg
insl
je
ljmp
and
nop
inc
fld
cmp
cmp
mov
addr16
xor
or
mov
jnp
pop
add
xlat
push
loope
pop
andb
jmp
jbe
test
mov
lods
outsb
sbb
mov
nop
and
push
push
inc
cmp
adc
dec
rcr
test
and
adc
dec
ret
xor
sbb
cmp
lahf
cld
jno
loop
inc
ds
ljmp
cli
mov
test
iret
icebp
lods
mov
divb
and
xchg
push
cmpb
popa
aad
lret
clc
add
into
mov
cmp
fistpl
pop
and
or
negl
sub
pop
or
repz
or
ds
dec
push
push
stos
js
jg
cmpsl
pop
lock
scas
mov
imul
cltd
sub
fcoml
nop
mov
xchg
data16
push
cmp
ja
inc
popf
int
lock
xchg
lret
jns
cmp
scas
jno
cli
in
mov
push
pop
mov
les
enter
lret
shlb
xor
shrb
movsl
mov
push
call
adc
lods
pop
lahf
popf
loop
xor
lret
rorb
lock
add
into
or
push
popa
mov
adc
push
movsb
push
call
dec
push
sub
repz
stos
incl
sahf
dec
leave
pop
pushf
sti
mov
addb
xchg
test
lret
cld
pop
jl
jecxz
test
sar
mov
frstor
or
xor
and
jns
push
mov
jmp
aas
xorl
push
pushf
add
pop
lock
xorl
inc
in
mov
and
jecxz
mov
fiaddl
inc
cld
cmp
ljmp
ss
rol
pop
jmp
das
add
cmp
cmp
fisubrl
icebp
mov
and
jmp
jl
test
xchg
out
pushw
loope
push
lods
or
in
pop
testl
pushf
pop
pop
pop
addr16
out
sub
add
lcall
pop
test
mov
leave
adc
xchg
les
xchg
dec
xchg
inc
cmp
xchg
mov
mov
push
out
addr16
inc
mov
pop
sbb
fmull
sarb
repz
scas
icebp
mov
xchg
stc
cmp
int3
in
jb
mov
and
ja
add
cmp
ja
and
fs
pop
adc
sub
push
adc
jp
xchg
rol
mov
out
push
jmp
repnz
fldl
fsts
jl
lds
xor
aas
pushf
and
mov
fdivrl
adc
aas
jmp
xchg
scas
mov
pushf
testl
xchg
mov
jg
lods
sub
cltd
loop
inc
ja
and
out
mov
mov
mov
fadds
mov
cltd
and
mov
xor
cmpsl
mov
inc
mov
sbb
int
out
ljmp
ss
out
idivb
daa
push
out
cld
lds
adc
stos
mov
aam
sbb
jo
sbb
lcall
jmp
lcall
xchg
es
loope
push
mov
fistpl
push
xchg
gs
xlat
push
cmc
jns
addb
mov
test
out
mov
cmpsl
bswap
inc
mov
fcomi
in
sbb
lds
xchg
repz
mov
pop
xor
iret
shrb
pop
xchg
insl
push
dec
loop
jmp
pushf
push
lock
mov
mov
outsb
and
sbb
jge
jle
pop
in
mov
and
loope
lcall
ds
dec
out
mov
aaa
leave
fisubrs
lret
xchg
insl
inc
pop
xchg
dec
inc
and
adc
fwait
mov
shlb
push
push
out
jae
sti
and
popa
test
cmp
movsb
cwtl
sub
stos
adc
out
insb
call
adc
fnstsw
loope
jg
cmp
into
push
outsl
push
jne
lret
call
push
push
iret
add
adc
stos
dec
push
jb
mov
outsb
adc
js
inc
lds
jae
ret
scas
outsl
pusha
int
repnz
out
pop
xor
pop
lods
mov
mov
fdivrs
imul
cmp
adc
jnp
jne
inc
or
mov
les
dec
pop
dec
in
cmp
jb
icebp
subb
hlt
sub
lods
mov
mov
mov
ja
out
fxch
jmp
push
pop
sbb
push
or
sbb
pop
lods
lea
push
pop
mov
insl
fs
lds
cltd
xor
js
sub
cwtl
sub
dec
xor
fstpt
jp
cmp
test
jno
daa
pop
hlt
jg
mov
jnp
dec
push
cltd
into
push
sbb
cmp
inc
dec
rclb
jns
mov
cmpsl
aad
shl
lret
cs
jg
mov
mov
mov
insl
cmp
mov
add
dec
mov
mov
cmc
fnstenv
out
or
pop
fldt
xor
mov
mov
mov
mov
sbb
rcll
cmp
or
popa
mov
xchg
xchg
jl
stc
pop
dec
rcll
fwait
mov
add
and
adc
pop
push
xchg
aaa
xchg
jmp
insb
cli
cwtl
bound
fmull
mov
adc
and
fwait
aam
pop
mov
ret
scas
mov
push
and
enter
lret
mov
jne
mov
adc
dec
pushf
cli
fwait
sbb
jb
imul
mov
andb
call
xchg
pop
outsb
sub
cmpsb
jecxz
pop
mov
cs
cmp
ja
sub
lahf
flds
jne
jae
imul
mov
and
sbb
inc
xchg
in
rolb
cwtl
dec
imul
lock
mov
sti
jnp
and
cs
outsl
mov
lret
xchg
pushl
lahf
cmpsl
dec
sub
bswap
cmp
mov
fwait
daa
and
aas
lcall
insb
push
pop
dec
ja
mov
jl
test
imul
push
int3
dec
sub
call
jl
dec
mov
notb
jo
repnz
ret
les
mov
sub
adc
mov
in
mov
ret
adc
cmp
fcompl
inc
out
add
call
fcomip
je
cmp
xlat
inc
sub
icebp
das
and
jp
dec
add
jp
pop
adc
outsl
icebp
dec
mov
insb
dec
sbb
outsl
xlat
popf
les
dec
ret
mov
jbe
cmp
jbe
xchg
jnp
jle
dec
or
pop
xchg
out
jo
cmpsl
enter
or
xor
mov
inc
mov
ficoms
std
rclb
sti
fs
xchg
out
mov
fidivl
fcmovb
and
ljmp
xchg
jne
mov
push
dec
movsl
fildll
add
pop
imulb
into
cmp
mov
or
mov
mov
insl
shlb
sub
hlt
inc
sub
movsb
cmp
xchg
pop
outsb
mov
in
test
je
pop
popa
mov
mov
pushf
in
dec
mov
adc
or
dec
or
sub
cwtl
fs
jmp
ss
xchg
and
repnz
imul
sti
cmpsl
repz
sub
xor
cwtl
pop
das
mov
stos
es
repz
cmc
jl
xor
imul
ret
fildl
popa
push
xor
imul
or
inc
and
sarl
loop
or
movsl
pop
mov
popf
jmp
shlb
fidivs
cmc
mov
ret
je
mov
mull
les
decl
jnp
cmp
ss
push
cmp
cwtl
dec
add
fisubrl
dec
dec
ficoms
xchg
stc
or
les
mov
ss
aam
cmpsb
jmp
call
daa
xchg
inc
stc
orl
xor
inc
lock
push
sub
mov
out
in
xchg
or
or
jg
fcmovnb
dec
in
push
cmpsb
pop
shlb
in
imull
add
sub
loop
sub
mov
xchg
imull
es
sub
adc
pop
xchg
sub
pop
insb
or
inc
addr16
dec
gs
or
addb
cmp
pop
in
inc
mov
dec
mov
pushf
mov
inc
fnstcw
cld
fcmovne
aam
stos
or
enter
add
add
dec
or
jae
mov
pop
mov
popa
insb
loopne
sub
int3
lds
out
xchg
cmpsl
push
xchg
push
adc
mov
fcoml
ss
add
adc
dec
cmp
or
dec
call
aad
mov
fistps
adc
add
xchg
fwait
sbb
icebp
jbe
je
nop
xchg
xchg
fnstenv
stos
or
outsl
xor
push
sbb
jmp
fs
sbb
fistpll
mov
mov
jne
movsl
xchg
xchg
je
idivb
and
jbe
cmc
push
movsb
shl
fldt
jnp
push
xchg
sbb
cld
ss
dec
in
adc
pushw
xor
lock
cmp
orl
jge
sbb
mov
mov
movsl
out
inc
int3
sbb
ljmp
and
push
test
aaa
mov
push
jl
xchg
pop
out
fs
in
adc
aam
jecxz
popa
jmp
inc
addr16
loope
incb
jecxz
stos
mov
shrl
stos
adc
bound
lret
leave
movsl
xor
imulb
test
pop
loop
testl
add
out
or
fsubp
stos
mov
jecxz
inc
xor
sbb
fdivrl
pop
xlat
pusha
fildl
jmp
xchg
xor
fisttps
jns
or
jno
test
inc
xor
sub
lds
fs
add
adc
pop
loopne
jnp
cmp
mov
add
das
jbe
mov
outsl
and
or
or
daa
push
jge
out
push
das
dec
dec
or
xorb
daa
out
fmuls
inc
fstpt
aaa
push
cmp
and
xor
je
mov
insl
jno
mov
negb
movntq
sahf
mov
out
iret
out
adc
mov
cld
cwtl
dec
nop
das
xchg
inc
pop
dec
jno
xchg
mov
cli
dec
sbb
out
aam
add
dec
cmp
add
adc
sbb
fimuls
fidivrs
pop
jns
mov
cltd
mov
scas
push
lret
iret
mov
pushl
stos
sbb
pushf
cmp
inc
inc
xchg
or
pop
push
mov
pop
les
das
int3
xor
lret
insb
js
stc
push
aaa
imul
pop
icebp
dec
mov
cmp
pop
sbb
pop
loope
xchg
es
pop
insl
es
mov
or
cmp
mov
bound
jno
and
daa
repnz
fiadds
dec
push
xchg
mov
std
pop
mov
dec
sbb
into
repz
or
and
dec
inc
mov
icebp
or
pop
xchg
cli
dec
stos
out
nop
imul
xor
jae
sbb
pop
xor
sub
dec
push
mov
lahf
xchg
jg
cltd
mov
mov
inc
test
leave
adc
lcall
repz
icebp
hlt
cmp
enter
jmp
jle
xchg
xchg
arpl
pop
out
inc
pop
mov
mov
dec
sbb
inc
lret
out
push
pop
xlat
mov
or
inc
push
repnz
sub
hlt
mov
add
xchg
mov
iret
mov
jmp
or
outsl
shrl
push
popa
push
sub
cltd
adc
xchg
push
xor
mov
mov
push
mov
scas
int3
xorb
inc
sbb
push
jl
pop
add
out
addr16
cmp
in
mov
xchg
cmp
imul
adc
dec
add
ds
frndint
cmp
mov
testl
add
rcl
imul
outsl
int3
fdivl
ljmp
mov
mov
inc
sub
adc
rcl
in
xchg
mov
stc
pop
pusha
test
push
lock
push
scas
mov
sub
sbb
and
push
and
cmp
lcall
cltd
ret
xorb
pusha
lea
inc
pop
fsubrs
cs
pop
dec
inc
fdiv
push
or
cmp
call
sub
jge
faddl
lret
mov
pusha
jo
mov
add
or
pop
aas
enter
mov
jno
lock
aas
test
mov
add
ds
pop
cwtl
incl
jle
sub
or
loopne
push
out
das
push
jbe
mov
xchg
insb
sbb
das
data16
adc
mov
rcrl
cmp
cmp
insl
rcr
sub
mov
cmc
movsl
pop
scas
inc
cmp
gs
lods
jecxz
mov
push
inc
fincstp
subb
or
xchg
xchg
gs
sub
adc
scas
pushf
xor
mov
push
mov
test
pop
ficomps
push
ret
or
je
std
mov
sbb
mov
dec
clc
in
shrl
decl
mov
lods
pop
ret
push
mov
dec
xchg
mov
mov
fcoms
inc
clc
lahf
jae
or
dec
imul
or
and
leave
fwait
pushf
mov
out
insb
xchg
pop
test
icebp
jl
lret
mov
lea
rclb
enter
ret
xchg
bound
dec
pop
daa
cmpsl
dec
or
js
inc
xor
push
xlat
outsl
sub
ds
test
cmp
les
fmulp
mov
test
inc
hlt
and
sub
and
cmp
pop
pop
pop
add
movsb
lea
sbb
sbb
imul
xor
inc
ficomps
out
stos
lret
lods
mov
iret
out
daa
rolb
mov
outsl
push
inc
daa
pop
adc
leave
xchg
add
sub
xor
xchg
sbb
inc
repz
fdivl
xor
push
or
dec
sbb
jae
mov
pusha
pop
jo
ds
lods
jb
sub
mov
push
adc
insb
pop
sub
jecxz
fcomps
xchg
loopne
sti
lret
in
je
xlat
jnp
repnz
addr16
xor
cld
push
ljmp
mov
mov
inc
xchg
dec
hlt
and
and
and
cmpsb
inc
dec
inc
jl
insl
jno
cwtl
divl
cpuid
arpl
aad
xor
call
sub
xchg
cmpsb
shlb
mov
mov
push
movsb
jb
fistps
int3
xchg
fwait
push
js
test
test
and
mov
dec
sub
ljmp
inc
clc
mov
pop
sbb
sbb
mov
call
mov
and
push
dec
pop
sub
or
ljmp
xchg
ds
jmp
sbb
inc
test
fwait
sbb
dec
divb
clc
in
push
mov
mov
inc
sbb
cmp
aam
and
dec
xchg
mov
jecxz
shlb
es
add
enter
mov
call
test
repz
lea
dec
outsb
pop
in
xchg
out
jnp
mov
pop
es
ljmp
pop
js
or
mov
repnz
das
leave
ss
pop
jne
daa
les
lret
enter
pusha
dec
iret
adc
xlat
int3
sub
cmp
jp
cmp
pop
jg
decb
jb
jnp
gs
sbb
push
xchg
shl
xor
adc
xchg
add
inc
das
mov
in
xor
dec
mov
xchg
pop
cmp
mov
push
dec
cmc
ss
fnstcw
ror
sbb
mov
test
mov
push
rep
mov
pop
mov
jno
inc
test
inc
sti
mov
inc
mov
adc
fistl
mov
or
push
mov
lahf
push
cmpsl
rcll
mov
or
pop
loope
adc
es
jns
xor
push
test
dec
pop
loope
pushf
jbe
lahf
and
pop
mov
or
pop
mov
xchg
xchg
jne
dec
cmp
xor
out
shll
loope
lods
aas
mov
aam
pop
inc
ja
jnp
stos
testl
dec
ret
or
sub
stos
push
stc
subl
sbbl
mov
fdivr
movsb
dec
mov
pop
add
clc
mov
mov
push
mov
scas
popf
jne
sub
inc
cmpsb
icebp
jmp
push
inc
insb
add
fimuls
sub
jle
je
mov
aas
jp
cltd
adc
fisttps
cltd
and
mov
aam
out
pop
scas
rorb
fbld
pop
cmpl
or
aaa
cmp
stos
jg
loope
or
sbb
cmp
jl
add
nop
add
mov
xchg
mov
add
xor
or
ljmp
mov
push
mov
cmp
dec
cmp
push
int3
imul
andl
and
mov
fadd
movsl
movsl
mov
loopne
in
mov
outsb
inc
scas
push
ss
push
repz
sahf
inc
shlb
mov
filds
pop
jl
iret
mov
cmp
imul
jge
cli
and
jmp
push
rorb
rolb
enter
sub
jge
push
push
int3
shll
hlt
loopne
pop
mov
mov
mov
lret
sahf
repnz
maskmovq
divl
xchg
jnp
in
adc
insb
sbb
ret
inc
jp
addl
push
sub
push
aas
or
mov
int
test
je
or
ss
out
inc
popf
xorb
adc
jo
adc
repnz
mov
es
sub
sub
stos
dec
mov
mov
iret
cmpsb
popl
pop
aaa
pop
inc
divb
or
mov
fistpll
rcr
adc
shll
arpl
in
xlat
cmpsb
xchg
adc
cmp
lock
movsb
daa
xchg
add
inc
mov
scas
in
int
jmp
repz
inc
pop
ret
mov
cmpsb
pushf
subb
push
in
fistpl
cmp
sub
into
push
loopne
je
imul
xor
or
xchg
mov
mov
dec
mov
ja
sbb
cmpsl
push
or
xchg
push
popa
es
scas
sbb
push
fiadds
mov
lods
ret
dec
add
push
mov
pminsw
mov
lds
popa
repnz
fadds
pop
shlb
std
enter
adc
loopne
leave
cmp
rorl
inc
xchg
arpl
pop
inc
pop
imul
and
lcall
mov
or
sbb
or
pop
mov
sub
dec
pop
js
jl
pop
mov
mov
fwait
cmpl
test
lds
in
lret
mov
jb
daa
mov
test
inc
sub
xor
sarb
mov
jmp
mov
mov
mov
pop
insb
gs
inc
pop
cmp
mov
jne
in
jg
jmp
sbb
in
cwtl
clc
inc
jne
push
add
jne
fistpl
aaa
inc
loopne
lea
sbb
xor
into
pushf
js
imul
lahf
xchg
adc
lock
leave
andb
lods
adc
test
ss
push
loopne
cltd
mov
loope
xor
into
mov
pop
popf
in
pop
inc
fwait
stc
fcom
sub
mov
imul
pop
sub
xchg
and
icebp
mov
dec
rcrl
fildll
stc
xchg
or
fimuls
cmp
cmp
xchg
loopne
xchg
xchg
mov
das
out
cmp
jb
or
xor
inc
out
daa
add
push
adc
pop
xchg
push
movsb
jae
and
inc
inc
scas
test
sahf
movsl
jl
xchg
mov
sbbb
sti
and
cltd
xor
fadds
outsl
jb
lds
les
inc
lock
pop
xchg
lcall
out
pop
fwait
aad
sbb
jnp
out
sub
add
aam
out
jge
push
sbb
cwtl
mov
push
pop
xlat
mov
call
test
lea
and
loop
frstor
xchg
push
add
push
jle
push
xor
push
icebp
or
adc
xchg
push
pop
mov
sti
and
scas
push
std
pusha
mov
inc
cmp
scas
imul
push
adc
inc
sub
clc
leave
mov
inc
jge
and
add
fists
push
es
jg
imul
jbe
add
mov
sbb
gs
jle
mov
ds
cli
imul
in
orl
leave
pop
pusha
xchg
rcrb
insl
mov
inc
fbstp
pop
test
lods
or
add
imul
aas
push
push
pop
loope
lods
dec
pop
cmpsl
loop
mov
test
mov
outsb
sti
mov
mov
fldl
in
mov
mov
or
inc
adc
xor
cmp
jmp
xchg
push
shll
cld
dec
loope
cwtl
imul
mov
adc
sub
daa
push
pop
sub
arpl
xchg
scas
int3
cmp
es
push
andb
outsb
aad
rcll
dec
jl
negl
mov
pop
neg
jbe
jmp
xchg
mov
fldcw
inc
rol
xchg
mov
pop
popa
outsb
mov
jbe
call
bound
dec
icebp
into
int
fcomps
jecxz
or
out
jg
pusha
add
jle
popa
outsb
mov
sahf
xchg
pop
xchg
pop
test
bound
jne
xchg
push
add
popf
icebp
push
xchg
sbb
xchg
nop
dec
pop
out
rorb
enter
and
pop
mov
mov
loop
jg
add
imul
jmp
lahf
or
outsb
mov
cmp
ljmp
imul
sub
faddl
mov
mov
fnstenv
jge
testl
pop
push
addr16
daa
cli
std
shlb
and
sub
cli
cmp
or
and
mov
daa
jo
orb
nop
movsb
out
add
pop
add
or
out
adc
stos
stos
js
shl
mov
push
mov
cmpsb
mov
lahf
xlat
outsl
in
pop
push
in
and
cmp
mov
pop
sbb
xchg
lods
cwtl
mov
or
call
movsl
jg
mov
mov
sbbb
and
and
int3
xchg
sbb
jl
dec
rcr
loopne
js
xchg
or
push
jle
aas
xchg
sbb
pop
fstpl
fs
and
addr16
repnz
jno
rcl
or
cmp
jmp
in
aas
or
xor
cmpsl
cmc
ss
adc
fisubrs
push
adc
jb
fcmovne
outsl
mov
inc
mov
enter
inc
xor
btc
iret
mov
mov
insb
dec
or
fstps
sub
mov
hlt
int3
stc
in
push
clc
rorb
movsb
mov
mov
inc
inc
jecxz
sub
pop
push
cmp
pop
es
pusha
push
sub
mov
push
fmul
lahf
mov
popa
fwait
add
je
adc
xchg
cmp
pop
xchg
sbb
repz
rcll
decl
push
loop
rorb
and
pcmpeqb
mov
jg
call
push
sbb
inc
sbb
int3
outsl
lods
andb
inc
aam
aas
sub
test
arpl
flds
aaa
cmp
mov
and
adc
cld
pop
and
test
pop
pop
in
call
pop
jb
notl
test
mov
jnp
int
mov
xchg
sub
negb
pop
adc
aas
stc
mov
xor
mov
clc
xor
popa
fidivrl
in
mul
push
sub
leave
and
sarl
out
adc
ret
fidivrs
jg
push
push
cli
in
dec
test
mov
es
pop
pop
lahf
mov
lods
sarl
jae
in
push
xchg
adc
hlt
jle
inc
lret
out
arpl
lahf
addr16
hlt
sbb
add
test
xchg
cli
jb
jg
push
mov
mov
mov
and
adc
int3
fdivrl
lds
mov
mov
int
xchg
popf
xchg
aam
push
add
lock
ljmp
push
adc
push
ret
lret
pop
xchg
dec
inc
jae
fsubl
pusha
mov
test
sub
or
sub
add
popf
inc
into
outsl
sub
and
xchg
inc
sbb
ja
imul
mov
dec
sbb
jbe
adc
aam
ljmp
mov
add
lret
or
and
sub
jge
and
inc
inc
mov
dec
iret
adc
pop
pushf
pop
push
dec
sub
iret
mov
xchg
sbb
inc
fldcw
adc
mov
hlt
test
adc
test
and
jp
lds
and
sbb
xchg
inc
imul
pusha
hlt
or
icebp
ds
mov
mov
dec
xchg
orl
xchg
in
push
ficoml
sub
push
wbinvd
push
subb
sbb
pop
dec
mov
test
dec
inc
and
mov
push
loope
icebp
pop
lock
xchg
sbb
mov
xor
in
adc
popa
dec
lods
jne
mov
jns
movsb
sbb
adc
adc
jge
mov
inc
ja
cmp
push
mov
daa
inc
aas
xchg
inc
clc
out
lret
pop
jge
mov
xchg
xchg
mov
sbb
fnstenv
xchg
lahf
shrb
jnp
fisubs
testb
inc
imull
sub
jp
or
and
insl
sub
mov
jle
nop
cmp
cmp
xchg
sbb
dec
inc
mov
cmp
lods
ja
inc
fsubrl
test
popf
fidivrs
or
xchg
add
adc
addr16
in
or
pusha
inc
jo
vmread
lods
out
mov
in
out
push
in
test
mov
cmp
ret
outsl
xchg
ret
push
jmp
add
sbb
jmp
into
and
mov
add
and
xchg
call
push
in
cmp
testl
sub
add
inc
mov
in
inc
lods
or
fiaddl
cld
clc
cwtl
push
jno
adc
jle
mov
imul
jmp
lret
les
test
js
or
out
dec
sbb
fs
out
pop
fisttpl
xor
adc
clc
cmp
fwait
lock
aad
mov
ret
adc
test
jge
dec
psubd
insb
inc
inc
cmp
rcll
inc
inc
jmp
dec
arpl
add
add
shlb
gs
outsb
fists
cli
dec
fwait
loop
es
ss
repnz
outsb
bound
add
and
push
lea
dec
push
mov
lcall
inc
daa
push
test
mov
mov
ret
lock
iret
clc
or
pop
or
cwtl
push
mov
rep
jne
nop
pop
cmp
std
enter
or
adc
jg
and
cmp
adc
cmc
outsb
xor
test
negl
mov
mov
xor
mov
enter
scas
testb
stc
sahf
mov
test
fwait
pop
out
fstl
test
and
add
jno
scas
das
test
addb
nop
loop
jns
push
mov
leave
xor
pushf
xchg
dec
mull
inc
popf
push
sti
jno
pusha
sbb
fidivl
popf
and
cmp
stos
int
fbstp
out
and
dec
pop
mov
xchg
inc
xchg
cwtl
aad
or
xor
mov
add
sbb
cmovg
hlt
or
jo
aam
mov
xor
jl
fwait
aas
mov
inc
inc
mov
dec
sbb
icebp
mov
test
lret
push
xchg
lods
xor
aad
push
cli
fsubs
ljmp
sbb
xor
sbb
mov
adc
lods
pop
or
xor
jb,pt
xchg
sbb
mov
xor
sbb
pop
hlt
or
fwait
sbb
scas
ja
dec
pusha
bound
jne
imul
inc
bound
sti
xchg
push
pushw
lock
pop
hlt
jmp
mov
cmp
sub
cld
in
ljmp
sbb
sti
pop
cli
fsubs
repz
pop
add
push
mov
in
lahf
xchg
fisubrs
lret
imul
push
shll
sbb
divb
mov
mov
jmp
push
inc
fsubrl
xor
out
jl
mov
ja
add
mov
inc
cmp
pop
xchg
mov
sub
daa
mov
sub
scas
push
js
xlat
mov
hlt
push
cmp
mull
inc
mov
jne
shll
sub
jl,pt
xor
or
push
fists
xlat
fwait
push
and
in
scas
scas
jmp
pop
pushf
loope
sub
mov
fisubl
aad
push
icebp
xor
pop
leave
sbb
fisubrl
xor
sub
icebp
leave
jecxz
call
clc
add
fmuls
mov
lahf
cmpsb
insl
cli
mov
es
test
pop
movsb
int3
mov
hlt
leave
mov
push
inc
dec
in
loop
dec
mov
cmp
enter
push
lods
rolb
mov
fsubl
and
clc
or
shl
push
dec
cltd
push
js
bound
roll
mov
negb
aam
icebp
stc
push
fucomp
ret
jnp
cmp
outsl
mov
mov
repz
and
imul
lret
aaa
shrb
aad
sub
cmp
sub
pop
and
clc
jg
icebp
or
mov
pop
xor
in
movsl
fistl
or
cmp
mov
pop
mov
repz
fadds
xor
cld
int3
and
sbb
push
jge
pop
mov
xchg
jp
movsb
jno
cli
rclb
lret
push
pop
shrb
and
mov
or
stc
pop
xor
jecxz
mov
pop
xchg
rcrb
pop
inc
outsb
scas
xor
xchg
aam
adc
push
icebp
jnp
mov
xor
rcr
dec
mov
and
rcrl
fsubr
adc
mov
xor
mov
bound
sub
push
mov
and
movsb
xor
xchg
mov
fs
cs
je
cmpb
mov
popa
mov
adc
outsl
jno
xchg
jp
aas
in
xchg
nop
jg
das
dec
dec
push
and
test
push
incb
cmc
std
lcall
mov
ljmp
jnp
mov
imul
cli
into
insb
sbb
arpl
mov
adc
jnp
xchg
ficomps
or
mov
loopne
push
xchg
mov
out
mov
insb
xchg
outsl
pop
dec
lds
gs
mov
repnz
sbb
inc
shll
xor
cltd
nop
add
sahf
xor
sub
pop
int
ljmp
stos
inc
fs
testl
stc
add
sub
ds
add
scas
loopne
enter
or
pushf
pop
pop
aas
jbe
sub
mov
xchg
mov
roll
aad
push
jmp
test
leave
pop
fldt
repz
inc
jge
mov
jge
insl
jg
icebp
xchg
stc
loop
leave
and
jns
je
outsl
adc
testb
and
and
out
movsb
popa
ret
jge
xor
push
pop
cld
test
and
stos
cmc
dec
push
xor
jo
das
fucomp
idivl
je
shrb
pop
push
data16
mov
add
xor
in
push
insl
dec
test
ret
bound
mov
push
pop
jg
pop
push
jns
adc
and
test
jae
imul
push
xor
add
in
bound
xchg
cltd
pop
mov
ss
es
pushf
cmc
mov
fdivrl
js
stc
jle
and
xchg
enter
add
push
jo
loop
or
sub
mov
lea
sahf
push
outsl
lods
rcr
or
iret
xchg
sahf
pushf
and
mov
gs
inc
or
out
dec
mov
lods
mov
sbb
and
push
nop
mov
cmpsb
or
fisttpll
adc
adc
movsl
mov
dec
out
out
fs
cld
movb
xchg
mov
dec
mov
insb
aaa
movsl
lret
mov
cmc
mov
xchg
xchg
or
lods
mov
sub
push
mov
ret
xor
sub
movsl
cmp
mov
das
mov
inc
mov
addr16
mov
sbb
repz
imul
inc
aaa
outsl
lahf
and
divb
cmp
fldlg2
adc
jge
stc
das
lret
xor
pop
pop
cwtl
mov
mov
push
outsb
sbb
dec
rclb
cmp
hlt
xchg
inc
pusha
sub
cmp
or
hlt
arpl
stos
push
mov
xchg
in
loop
dec
add
xchg
xor
pop
fdiv
cmp
outsl
and
jo
xor
push
mov
pop
push
xchg
nop
or
or
cmp
rolb
mov
incl
mov
dec
dec
push
cmp
add
nop
adc
sbb
sub
in
stos
outsb
or
adc
xorb
sbb
push
test
lods
add
out
div
sbb
push
adc
lea
out
add
lds
shr
pop
out
lds
xor
jl
cli
pop
push
xchg
cmp
ret
sub
mov
lds
in
fwait
mov
int
fs
je
xchg
repz
and
mov
jmp
or
rcll
loope
scas
lods
cmp
cltd
fs
sub
mov
js
pop
fstps
mov
aad
push
adc
bound
pop
int
jae
and
aad
clc
aas
rol
ds
jae
or
pop
outsb
insb
mov
arpl
xor
sub
je
cmp
rol
pop
lods
fsubrl
shll
mov
jb
mov
imul
xor
xchg
mov
mov
cwtl
icebp
arpl
mov
and
dec
or
sarl
pop
mov
subl
and
ljmp
and
push
adc
add
mov
gs
cmpb
push
push
xor
or
aad
push
test
cmpsl
lret
movsb
add
call
inc
mov
xor
or
mov
cltd
sbb
enter
push
xor
adc
ficomps
sarb
jecxz
lods
int
xchg
cs
and
out
pop
xor
xchg
inc
xchg
sbb
stos
shl
dec
xchg
cli
or
push
cmpsl
inc
imul
xchg
jmp
xchg
mov
pop
mov
push
xchg
std
and
stc
es
push
iret
inc
push
mov
cli
push
cmp
pop
xchg
daa
out
sub
ja
inc
cmp
add
add
jp
push
mov
cmp
js
adc
int3
nop
cwtl
adc
jne
mov
enter
fsubp
gs
lds
shr
stos
fcmovbe
mov
sbb
or
sbb
out
sbb
pop
stos
call
in
popa
dec
fdiv
je
call
in
in
mov
dec
cmp
xchg
test
iret
adc
loope
insl
es
dec
xchg
mov
pusha
jmp
xchg
push
je
lock
fs
inc
iretw
dec
jnp
cmp
push
fwait
sub
lods
lds
xchg
mov
adc
dec
mov
ss
push
mov
sti
mov
and
pop
lods
mov
xorb
je
sahf
push
push
repz
jmp
movsl
mov
inc
rorb
push
cmp
jp
aaa
push
std
jno
lret
and
xor
lss
mov
mov
pusha
jecxz
test
xor
insb
sub
fdivr
cmpsb
pop
mov
int3
shl
adc
mov
xor
icebp
dec
jge
dec
or
mov
mov
jl
dec
in
lods
xchg
popf
shll
fcoms
stos
jl
lods
in
dec
push
outsb
adc
cmpsl
cmc
das
sti
fdivr
fstpt
mov
cmp
and
jecxz
xchg
cmp
pushf
push
out
sbbl
das
push
in
fs
cltd
jo
bsr
test
cmp
pop
lods
sbb
popa
push
push
fadds
xchg
std
lock
mov
jnp
cli
mov
imul
shr
lock
aad
hlt
sbb
lret
decb
lock
adc
out
cs
adc
call
jmp
mul
aad
stos
jp
xchg
xchg
ljmp
outsb
adc
cmp
and
imul
pop
std
loop
out
outsb
push
ficomps
mov
idivb
add
in
xor
xor
sarb
sub
fiadds
bndldx
xor
jns
cmp
repz
mov
mov
sub
cli
adc
mov
cltd
xor
push
add
mov
xchg
sub
lcall
sub
jp
pop
lret
js
push
aas
push
and
std
outsb
in
pop
ljmp
sbb
mov
xchg
aaa
ret
xor
pop
adc
xchg
insl
jo
test
ljmp
cltd
adc
andl
inc
ljmp
stc
and
cmp
fs
movsb
ret
pop
xchg
or
and
mov
icebp
cmp
in
fstpt
in
pop
xchg
pop
subb
test
push
jns
sub
cld
ret
mov
xorb
jmp
inc
rcrb
scas
add
xor
ljmp
shll
andl
stc
cmp
xchg
sti
insl
pushf
lret
push
icebp
mov
mov
rorb
test
push
xchg
xorb
pop
mov
leave
push
dec
in
push
insb
sub
push
ljmp
pop
mov
das
cmp
aad
int
add
imul
bound
jmp
sbb
shlb
dec
adc
addr16
aad
aaa
inc
lcall
push
gs
out
mov
pop
pop
xor
lcall
sub
xchg
in
xor
lds
push
sbb
and
xchg
cmp
push
push
cwtl
int
sti
aas
xchg
arpl
mov
sbb
fwait
loop
addl
bound
sarb
add
das
test
lds
ret
and
dec
ss
enter
jmp
subl
sub
push
repz
cld
sbb
mov
mov
cmpsb
lret
pop
inc
adc
jge
push
xchg
push
jmp
pop
pop
out
js
mov
adc
inc
hlt
adc
or
aas
inc
pop
sub
lods
sbb
movsl
push
ljmp
sub
pop
pusha
xor
sti
push
movsb
ljmp
xchg
fs
push
pop
jl
lods
insb
jp
fs
dec
out
enter
jmp
push
mov
dec
shl
shl
or
popa
jns
sub
push
add
and
je
xor
shlb
add
mov
lods
cmpsl
xchg
into
cmp
push
mov
push
out
xor
in
jnp
xor
inc
mov
test
mov
aaa
lret
and
rolb
mov
push
cmp
xchg
xor
clc
or
sbb
daa
fisubrs
rcrb
push
and
orl
mov
lds
dec
or
jno
xor
mov
and
fimuls
sbb
sbbb
mov
or
pop
inc
mov
aaa
leave
add
stos
lret
xor
mov
jmp
cld
jno
ffree
push
les
ds
sbb
mov
xor
and
out
daa
shll
push
dec
mov
outsl
lods
or
mov
inc
daa
push
sub
add
imul
dec
js
and
sbb
daa
and
aad
dec
pop
dec
mov
clc
mov
sbb
adcb
cmpsl
xor
int
mov
xchg
push
or
xchg
xchg
dec
fisubs
iret
and
ja
insl
mov
movlhps
dec
es
jecxz
dec
and
data16
inc
pop
cmp
mov
in
out
jecxz
push
fdivrl
and
cs
out
pop
mov
pop
xor
jecxz
je
stos
cmp
lock
push
jg
inc
aam
pop
or
xor
popa
add
sti
shll
gs
adc
cltd
xor
in
jmp
out
sbb
push
cwtl
fildl
adc
out
das
call
aam
lods
xorb
cmp
jmp
and
xor
inc
call
fldl
movsb
mov
repnz
cmp
sub
adc
xor
cmp
mov
insb
dec
out
faddl
call
add
pop
mov
cmp
mov
loopne
mov
xor
in
mov
lret
les
rol
mov
sub
mov
inc
mov
lea
push
pop
mov
cmp
and
fwait
jl
sub
scas
stos
cltd
sub
das
mov
pushf
addr16
cmp
inc
fs
xchg
bound
mov
add
faddl
pop
pop
in
nop
in
in
sub
icebp
mov
movb
sbb
pop
push
in
rcll
jp
sub
pop
aad
arpl
push
sub
insb
and
push
lret
iret
inc
mov
cmp
add
push
sub
add
ja
rol
lret
xor
sqrtps
dec
js
pusha
adc
mov
popf
in
or
aad
mov
sub
test
aam
lret
rcrb
cmp
je
add
icebp
jne
and
cltd
jl
push
push
fimull
jmp
aaa
dec
bound
fldenv
addr16
or
mov
fimuls
int
mov
xchg
cli
sbb
mov
jmp
outsl
jbe,pt
add
outsb
cmpsb
push
xlat
cmp
inc
push
and
add
aas
in
or
icebp
out
inc
and
jmp
xchg
lods
pop
adcb
pusha
xor
in
cmp
mov
jne
xor
fnstenv
dec
fs
jno
jg
ss
sub
loopne
loop
adc
dec
sbb
adc
mov
int3
jo
pop
lods
or
jecxz
out
and
frstor
or
and
loop
inc
aas
push
cmp
inc
or
cld
xlat
stos
lock
negb
sub
insl
pushf
push
sbbl
pushf
adc
or
fbld
pop
add
jg
es
push
repnz
into
negl
inc
adc
mov
inc
add
adc
xor
and
mov
inc
arpl
mov
cmp
push
xchg
push
or
dec
dec
or
loopne
add
jb
mov
imul
nop
dec
sbb
or
push
rcrb
pop
jae
lods
dec
sbb
mov
pop
cmp
and
xor
scas
mov
push
mov
xor
mov
out
push
dec
iret
lret
icebp
test
mov
jl
lock
sarb
cs
lret
test
out
ja
jecxz
xchg
lret
push
jae
sub
inc
mov
and
arpl
inc
sbb
jns
mov
aaa
mov
push
jne
insb
pop
pusha
or
and
cmpl
in
push
sub
cltd
mov
data16
sti
or
inc
pop
cmp
push
in
pop
or
movsl
or
loop
sub
xor
aas
mov
fstp
cmc
mov
xor
ret
pop
push
mov
enter
mov
out
xchg
mov
xor
and
pop
adc
or
xchg
ds
cmp
add
fdivrl
jl
shl
mov
icebp
xchg
lock
and
xor
iret
xchg
or
pop
lock
add
std
push
jl
in
and
xchg
jnp
push
lcall
jp
cmpsl
push
cmpsb
xor
fdivl
icebp
and
arpl
cmp
cmp
xchg
or
test
jae
adc
pop
repz
inc
and
adc
dec
aam
aam
in
xor
lcall
call
inc
call
cltd
push
movsl
xlat
idivb
les
fildll
and
add
xlat
and
adc
xor
pusha
inc
or
mov
insl
lret
cmp
lods
mov
adc
ret
dec
fmull
icebp
inc
sbb
and
out
jge
sub
das
test
outsl
mov
adc
data16
push
and
std
push
iret
loop
jp
fstl
mov
jp
aam
dec
sub
lds
popf
fldenv
rclb
sub
repnz
inc
lock
mov
cwtl
mov
fdivrl
scas
daa
bound
arpl
pop
in
hlt
or
lods
inc
es
fwait
inc
gs
cmp
hlt
mov
push
xorb
mov
sub
jo
sbb
ret
mov
pop
push
sarl
dec
lods
jo
jno
dec
xchg
sub
je
and
cmp
inc
mov
sub
mov
and
bound
add
mov
adc
mov
test
push
xchg
inc
xchg
dec
icebp
sub
mov
pop
jae
mov
push
aam
push
rorb
outsb
rolb
push
sub
dec
mov
lret
scas
add
mov
aaa
add
pusha
mov
fcoml
je
mov
sbb
inc
das
xlat
sbb
jp
xor
xchg
add
mov
test
sub
imul
in
fcompl
movsb
lahf
inc
fcmovnbe
out
dec
std
push
dec
inc
mov
sar
loop
jne
xchg
lea
je
sbbl
div
out
arpl
lret
mov
inc
adcl
popl
add
mov
or
mov
jg
rcrb
jmp
data16
incb
or
inc
push
int3
jbe
push
sub
xor
jne
cwtl
ds
add
mov
inc
xlat
or
dec
and
js
stos
push
add
jb
movsl
jge
js
lods
xchg
int
jnp
outsb
addr16
jmp
lock
mulb
mov
mov
repz
mov
aam
or
pop
mov
sub
data16
jmp
and
test
pop
lcall
xor
xchg
and
arpl
push
mov
push
lods
stos
call
ret
xchg
sbb
in
nop
test
bound
rcll
test
adcb
push
leave
or
jne
movsb
push
leave
and
pop
lods
mov
sub
testl
subb
jg
sub
loopne
mov
xor
mov
rorb
sbb
rclb
stos
and
aas
push
xor
lret
push
push
repnz
inc
inc
mov
lods
leave
stc
mov
xlat
dec
xor
xchg
cli
jne
sbb
inc
mov
ja
aaa
adc
lahf
mov
add
mov
pop
dec
nop
pop
scas
cli
ljmp
fmuls
ss
loope
out
shr
in
shl
and
pop
cli
lds
adc
xor
xchg
or
cli
pop
fistl
leave
js
jne
aam
hlt
add
les
in
dec
andb
jns
sbb
jl
dec
cmpl
inc
push
in
stos
push
bound
xchg
jns
inc
stos
clc
cmpsl
dec
dec
ljmp
mov
fnstenv
inc
xchg
std
dec
fadd
mov
xchg
or
jbe
ja
shll
lds
cmp
das
in
dec
repz
or
xchg
jl
pop
dec
fwait
mov
lret
push
insb
imul
repnz
or
jp
pop
add
push
cwtl
aad
pop
ljmp
shr
out
xor
or
loop
add
jbe
mov
inc
fwait
add
pop
or
push
or
cli
pop
mov
test
sbb
cmpsl
pop
cmp
push
sub
dec
fldt
imul
jmp
movsl
scas
ret
adc
shl
cmp
cli
insl
rorb
or
test
outsb
dec
sbb
inc
mov
mov
adc
mov
testb
inc
push
inc
stos
lock
fisttpl
adcb
enter
mov
mov
lret
or
pop
jne
add
pop
dec
sbbl
stos
mov
pop
daa
sbb
mov
fwait
leave
insb
cmpsb
jns
jg
cltd
bound
jmp
outsw
imul
adc
inc
shll
movsb
addr16
aad
lds
pop
adc
shll
and
out
lret
sub
repz
sub
das
popf
adc
push
mov
push
sub
sub
pop
insb
xlat
repnz
xor
sbb
testb
or
sub
dec
push
sarl
and
add
sarb
setno
push
mov
je
inc
add
movsb
pop
pop
jmp
push
data16
sub
fwait
sub
push
shlb
mov
xlat
mov
mov
outsb
jecxz
or
mov
lea
mov
dec
cmpsb
cmp
pop
add
pop
push
jp
jae
ds
in
push
push
popf
ljmp
xchg
sti
ljmp
inc
lds
cmpl
jmp
xchg
test
ret
push
dec
movsl
xor
add
shrb
enter
insb
inc
nop
push
inc
test
mov
cmp
mov
push
mov
and
push
jb
fucomp
stos
shlb
mov
cli
out
adc
dec
data16
cmp
in
sbb
xchg
outsb
xor
sbb
cld
popa
repnz
aam
mov
inc
pushf
aaa
shl
xchg
int
test
scas
push
in
addb
addb
inc
jne
loop
jb
out
lret
jns
imul
int
and
mov
iret
push
sbb
push
pusha
and
dec
rclb
int3
mov
cmpsl
addr16
cwtl
std
cmp
cli
sbb
in
in
mov
dec
lds
or
mov
pop
hlt
cs
int
jmp
dec
cwtl
mov
xor
pusha
shl
in
jns
jmp
repz
int3
sub
sbb
pop
fmull
xchg
sbb
cmp
adc
xor
mov
dec
loope
popf
inc
push
dec
lock
dec
test
imul
fdiv
bound
fnstsw
insb
lret
xor
pop
movb
or
dec
push
add
add
mov
rorb
ficoms
outsl
fs
stc
hlt
pop
mov
and
jb
lods
aas
sahf
rclb
loope
jo
mov
imul
sti
push
xchg
adc
sbb
mov
fnsave
mov
dec
in
cmp
lea
pop
xor
nop
pop
xor
pushf
push
inc
cwtl
mov
nop
xchg
push
cmpsb
mov
sbb
xchg
add
call
outsl
fiadds
ret
stos
jmp
xor
nop
adc
insl
pop
cmpsb
imulb
call
cmp
sahf
pop
sub
xor
mov
aas
je
mov
jbe
call
js
pop
adc
xor
test
add
cmp
mov
addb
in
mov
xchg
aaa
add
aaa
xor
mov
inc
lret
add
mov
sub
dec
loopne
int3
lock
loop
xor
rcll
dec
data16
notl
xchg
lock
xor
jp
inc
jmp
or
mov
andb
xor
jmp
aam
mov
outsb
cmp
and
jb
jne
jmp
outsl
cmp
insb
aaa
push
int3
xchg
and
cmp
iret
push
inc
pop
dec
adc
and
popa
or
fsub
lea
inc
dec
push
adc
les
xchg
lret
jl
pop
push
call
add
xchg
andl
push
scas
lret
sahf
push
ds
cmp
mov
dec
fdivp
repz
xchg
rclb
lahf
mov
sti
mov
popf
arpl
mov
xlat
jge
cmp
cwtl
enter
lea
xchg
rep
jg
mov
jne
push
test
and
and
sarb
lret
ficompl
sub
popa
cmpsb
xor
cmp
mov
push
push
sbb
popf
out
dec
lret
adc
xor
dec
push
cld
sub
xor
mov
ret
ficoms
cmpsb
stc
add
push
mov
mov
int
and
imul
inc
dec
xchg
lret
fistpl
sbb
shlb
jp
mov
pop
cli
arpl
pop
add
lea
sub
jp
add
mov
frstor
pop
push
test
sbb
cmpsb
lods
sub
jp
push
lret
or
xchg
sub
push
scas
fwait
push
mov
add
jno
in
stos
cltd
lods
xor
push
loopne
sub
fmull
movsb
inc
or
mov
dec
dec
sub
inc
movups
lods
sti
jge
xchg
inc
test
mulb
sbb
push
outsb
divl
cmp
mov
lods
mov
mov
jecxz
ss
jg
fs
mov
movsl
stos
cwtl
or
sub
in
test
fldl
xchg
xchg
fcoms
sti
pop
daa
xor
xchg
ret
push
data16
sbb
jne
jge
shl
es
ret
clc
dec
xchg
inc
sbb
pop
ss
mov
mov
or
jnp
fstps
in
or
sti
fcompl
aaa
clc
cs
mov
enter
push
gs
outsl
mov
mov
aam
xchg
scas
rcl
lods
subb
inc
lods
inc
xchg
in
adc
pop
pop
ja
loope
sub
adc
add
pop
mov
sbb
test
test
sub
adc
dec
jmpw
repz
add
or
punpcklbw
jl
hlt
push
inc
sub
out
outsl
in
jl
test
sub
andl
int3
sbb
and
adc
call
fs
inc
fstpl
sub
cmpsl
adc
adcb
xor
fists
outsb
xchg
addb
popf
or
xchg
out
push
jl
jle,pn
adc
inc
push
sbb
cmpsb
mov
push
movsb
sub
aaa
and
xlat
dec
popa
cmp
mov
push
xchg
jne
jmp
xchg
xchg
aad
xor
xchg
into
jb
stos
or
add
push
into
mov
lods
push
jae,pn
in
jge
push
ret
std
mov
ret
std
sbb
stos
mov
pop
sbb
scas
dec
adc
push
push
mov
daa
add
daa
inc
xchg
pop
jbe
add
push
lods
mov
enter
mov
not
dec
test
or
xchg
cmp
push
dec
sar
jb
testl
xlat
aaa
mov
mov
clc
out
sub
orb
fcmovbe
jl
repnz
push
out
in
push
jnp
xor
lahf
lret
stc
in
sbb
stos
cmpsb
leave
les
imul
mov
sarb
cmc
cmp
mov
outsb
movsl
loope
ljmp
xchg
test
addr16
mov
aas
movsb
xchg
push
insl
mov
movsb
fnsave
or
jp
insb
dec
lahf
pushf
dec
add
lahf
ficoml
movsb
adc
jmp
lahf
sbb
call
lods
cmpsb
fcompl
mov
sti
fwait
scas
jecxz
jbe
add
lods
jb
xchg
xor
addb
mov
xor
lahf
mov
add
cs
rcpps
lret
lcall
mov
outsl
sub
jns
ss
dec
inc
cld
ds
stc
mov
ret
mov
jmp
cltd
ds
jb
mov
mov
mov
add
jg
sbb
inc
push
add
outsb
mulb
out
pop
shll
lahf
aas
neg
in
add
xor
fdiv
push
enter
sbb
out
mov
js
test
test
pop
hlt
and
add
stos
adc
stos
test
mov
aas
outsl
enter
push
mov
inc
pop
iret
cmp
cmc
inc
add
or
inc
movsb
cmpsl
mov
stc
rclb
insl
cwtl
imul
insl
mov
addr16
mov
push
cmpsl
int
mov
pop
cld
mov
push
xor
mov
cmc
mov
stos
sbb
ja
mov
pushf
push
fcmove
sub
dec
adc
adc
in
or
aam
mov
bound
add
xchg
lea
in
sbb
inc
sahf
jg
jecxz
mov
shrl
sahf
jg
inc
stc
mov
sahf
jb
add
aam
push
call
scas
leave
mov
inc
fldl
pop
es
inc
dec
sbb
jecxz
mov
dec
int3
ljmp
shr
rorl
enter
jnp
push
jae
add
jle
test
les
xlat
and
mov
movsb
jmp
mov
push
mov
pop
unpckhps
jecxz
sti
adc
imul
cmp
fimull
xchg
cwtl
or
xor
fnsave
repnz
inc
mov
fcomps
cmpsl
out
jle
pop
jle
cltd
dec
xchg
add
pop
xchg
mov
mov
dec
and
fwait
adc
pusha
addb
xchg
fcmovnbe
stc
add
push
push
jle
sub
inc
mov
xchg
adc
add
inc
xchg
mov
mov
leave
rorl
rorl
leave
pop
or
jo
pop
mov
insl
int3
cltd
popl
dec
enterw
sti
pusha
cltd
and
aad
movsl
jp
or
cmp
push
insb
pop
jb
mov
outsb
nop
push
gs
cmp
insl
mov
and
pop
cmp
pop
cmpsb
call
lret
jecxz
mov
or
xchg
mov
push
sarl
sti
addr16
cmp
mov
addl
cmp
in
mov
mov
in
mov
sub
add
je
cmp
cmp
mov
inc
pop
pop
mov
inc
or
sub
js
sub
xlat
outsb
out
mov
mov
mov
imulb
pop
jecxz
jge
add
shl
xchg
mov
sbb
sbb
sbb
notb
iret
add
aas
lret
pop
js
fwait
pop
dec
jl
pop
cmp
fistpl
sbb
pop
shll
jmp
push
cmp
adc
ds
ljmp
cmp
sarl
cmpsl
movsb
inc
xor
imulb
leave
lcall
xor
mov
arpl
out
addr16
lahf
jnp
inc
sti
lcall
pop
inc
cmp
push
xor
mov
mov
popf
jb
cmp
add
xor
inc
andb
add
add
sahf
hlt
fdivs
xlat
mov
aaa
xor
mov
sbb
sub
push
jae
adc
push
cwtl
insl
or
pop
dec
aaa
push
into
sub
imulb
dec
xchg
pop
sub
push
das
adc
ret
jg
icebp
jp
push
jo
imul
or
jns
mov
out
mov
push
jno
lret
sbb
data16
call
lahf
stos
repz
mov
push
push
sub
iret
cs
cmpsb
mov
les
push
das
scas
push
push
enter
rcrl
popf
out
hlt
aas
in
insb
push
sub
inc
popa
cmp
jb
stos
lret
xchg
pop
imul
cmp
pop
fnstsw
sbbl
adc
into
jno
inc
pop
adc
mov
inc
imul
inc
lcall
mov
mov
test
mov
and
out
stos
cwtl
in
scas
jb
or
ret
pop
stc
pushf
xchg
loope
jo
xchg
dec
scas
icebp
cwtl
pop
xor
out
jb
jle
lds
aad
sub
nop
adc
pop
std
pop
mov
jb
call
sahf
movsb
push
xor
add
in
xor
mov
cs
cmp
int
mul
mov
test
mov
lock
fdivl
mov
cmpsl
fnstsw
adc
imul
inc
cmpsl
jp
sbb
aam
call
cmpsb
xchg
stos
mov
mov
xchg
mov
xor
loop
add
pop
sbb
repz
mov
dec
movsl
lret
loope
adc
sbb
stos
inc
xchg
inc
cmp
xchg
xlat
loopne
or
mov
mov
psubsw
xor
fildl
pop
aad
adc
sub
inc
enter
mov
fcmovnbe
stc
cmp
mov
ja
test
xor
sbb
xchg
rcll
test
fadd
and
ss
insb
cmpsl
mov
and
sbb
xor
xchg
ret
enter
arpl
fisubrl
fsubp
add
ficomps
in
jnp
sub
pop
inc
pop
sbb
xor
mov
shl
jmp
and
push
call
push
out
push
mov
pop
pop
jp
stc
push
push
pop
fmul
jp
out
lods
or
add
mov
stos
dec
pop
fistpl
cld
pusha
dec
in
test
xchg
inc
dec
add
or
jl
inc
xor
insb
push
pop
fsub
xchg
movsl
mov
or
rcll
jp
inc
shll
adc
xor
fstp
int
adc
cmp
jg
lock
push
js
ret
dec
and
adc
fsub
enter
insb
xor
rep
mov
push
inc
adc
loopne
popf
fdiv
push
sbb
fwait
mov
cwtl
enter
sub
add
pushf
cmpsl
ds
nop
sbb
dec
and
push
pop
inc
mov
lods
jnp
adc
xchg
clc
movsl
adc
outsb
push
adc
jnp
sti
adc
lds
decl
lea
test
push
cmpsb
xchg
pop
pop
icebp
cs
arpl
std
shl
ret
mov
daa
js
xchg
data16
xor
les
xlat
push
xor
mov
jmp
cmp
jb
hlt
pop
add
push
sbb
sub
adc
out
pop
pop
sti
repnz
sub
insb
mov
ljmp
test
and
push
enter
inc
pop
inc
or
into
fwait
loope
inc
fidivs
lret
dec
and
mov
push
push
in
xchg
nop
push
pop
lcall
loope
xor
andb
cli
insl
cmp
push
xchg
psubsb
jg
xchg
lret
mov
fdivs
adc
pushf
lahf
pop
add
ljmp
and
je
lods
aas
mov
bound
in
lea
ret
pop
decl
adc
notl
js
xor
cld
dec
add
mov
mov
mov
push
int3
enter
aas
subl
shlb
pop
popa
into
int
fistpll
loopne
xchg
int
sub
sub
adc
ljmp
mov
mov
imul
scas
jb
std
adc
out
lret
ja
scas
or
or
scas
xchg
test
sbb
mov
dec
pushf
sbb
je
xchg
cmpsb
lret
mov
cwtl
ja
adc
push
jmp
dec
pop
add
xor
lds
mul
adc
shll
inc
xor
nop
dec
sbb
sbb
cwtl
push
push
bound
cld
pop
sbb
push
std
cmpl
negl
push
mov
xchg
xlat
mov
es
lods
cmp
push
mov
in
or
fsubr
sbb
push
scas
data16
dec
mov
xlat
mov
dec
loope
dec
lcall
mov
bound
ret
pusha
sti
sti
adc
dec
fisubl
sahf
or
adc
jl
cwtl
fwait
clc
aam
fwait
jne
jg
addr16
dec
sub
sbb
dec
sbb
xor
jecxz
sub
sahf
xchg
ja
pushf
adc
lods
adcl
lret
aaa
inc
pop
fs
repnz
cmp
adc
aad
es
cwtl
gs
and
in
lret
adc
adc
fimuls
sarl
in
lret
nop
sub
cmpsb
adc
or
adc
je
fildll
pusha
xchg
das
xor
lock
jge
xchg
shll
je
imul
mov
mov
rcll
inc
ljmp
pop
ret
or
bound
mov
imul
xchg
and
add
shlb
pop
add
adc
mov
gs
in
jmp
jge
subl
test
pop
fisubs
and
inc
ret
repz
jl
jae
push
ret
or
add
jb
push
out
test
bound
inc
test
xor
xchg
pop
sub
adc
push
xchg
std
pop
cmp
sbbl
push
and
stos
push
wrmsr
xchg
dec
push
xchg
orb
movsb
sbb
xor
test
dec
pop
xchg
mov
cmp
and
nop
movsl
das
lock
mov
fst
insl
shlb
test
shlb
inc
lea
or
mov
jmp
mov
mov
jno
movsb
scas
or
loope,pn
leave
jmp
cmpsl
stos
adc
insl
lret
scas
and
inc
pop
cli
gs
jno
or
mov
dec
data16
sbb
loope
inc
add
jnp
jle
mov
int3
mov
mov
mov
sbb
in
addb
dec
incb
sbb
in
mov
in
mov
enter
cld
xchg
and
ret
neg
fdivs
fbld
shrb
roll
in
inc
pop
loop
addl
out
lea
adc
repz
push
lea
xchg
jecxz
xor
and
cltd
sub
xchg
cmp
imul
adc
adc
cmp
shr
cmc
hlt
dec
or
mov
popf
sub
lods
xor
push
and
mov
out
es
cmpsb
std
adc
sbb
lea
xchg
add
inc
xchg
sti
imul
xchg
pop
subb
call
xchg
adc
cmpsb
mov
shlb
es
cmp
or
into
mov
adcb
into
nop
sbb
push
sbb
cmp
sarl
insb
cwtl
cmpsl
sub
push
inc
movsb
mov
mov
sbb
mov
addr16
pop
gs
xor
pusha
aam
lods
jmp
xor
adc
mov
cmpsb
int
push
add
cmp
das
push
rcll
push
push
roll
jns
addr16
xchg
or
mov
fs
pop
mov
push
sub
nop
sub
int3
adc
div
inc
xor
lret
shll
sbb
adc
int
outsb
mov
fwait
jnp
outsl
in
dec
sbb
sub
sub
out
repnz
cmpsb
repz
mov
idivl
cmp
call
mov
xchg
orb
sbb
gs
arpl
ja
jno
jmp
jo
push
mov
add
push
push
mov
pop
out
loopne
testb
dec
les
daa
xchg
leave
sbb
sar
push
jmp
pusha
repz
int3
sbb
mov
jmp
das
adc
add
cld
xchg
sbb
mov
loop
outsl
jmp
xlat
mov
pop
sub
or
dec
fadds
mov
xchg
aad
jmp
fnstsw
add
aaa
testl
icebp
or
fcoms
pusha
xchg
push
dec
ljmp
addb
loopne
cmpsb
mov
ret
movsl
xor
inc
xor
std
mov
cmpsl
adc
push
xchg
ret
int3
jbe
ret
push
cmpb
jb
pushf
pop
sbb
adc
icebp
adcb
gs
adc
ret
mov
xor
mov
sub
pushf
fidivl
negb
outsb
inc
insl
sarb
xor
jb
lock
push
xchg
clc
or
dec
arpl
shr
jae
jecxz
cwtl
insl
push
std
orl
fstps
xor
jbe
push
cwtl
pop
into
in
ss
add
adc
adc
cmp
jecxz
insl
jno
sti
into
popf
mov
inc
test
pop
dec
dec
adc
enter
movsl
insl
adc
xchg
inc
sub
pop
xorb
sub
cs
nop
sbb
notb
stc
xor
cmp
fisubs
adc
adc
out
rcrb
scas
cwtl
cmp
cmpsb
pop
pop
mov
addr16
fimull
dec
stc
repz
pushf
jp
mov
dec
jno
sarl
or
xor
rolb
jp
jne
lds
xor
movl
mov
test
xor
xchg
addr16
bound
push
cmp
mov
add
sahf
push
mov
inc
pop
add
xor
fsubrp
add
pop
out
les
inc
xchg
cmpsb
cmp
push
std
popf
jmp
sbb
push
add
movsl
pop
sti
xor
inc
stos
pop
push
and
push
loopne
fisubl
mov
pop
sub
mov
imull
lret
into
mov
addl
mov
lret
adc
dec
inc
int
lea
inc
pop
pop
sub
icebp
aam
and
movsb
fldl
nop
and
sub
orl
mov
pop
pop
push
push
repz
inc
jae
in
es
add
rclb
mov
ret
data16
xchg
dec
ret
int
sub
pop
dec
scas
neg
out
lock
xchg
jmp
aad
into
dec
dec
popa
in
lods
cmpsb
xor
push
add
xor
lods
mov
xchg
pushf
fwait
or
sub
jle
sbb
add
adc
add
push
icebp
xchg
cmp
ja
repz
sbb
inc
aad
adc
hlt
aam
pop
pop
es
or
test
inc
xchg
add
ret
jb
jle
push
dec
dec
ds
sbb
dec
push
scas
sub
daa
inc
mov
mov
nop
stc
rcl
jns
adc
and
push
mov
add
add
loopne
lret
xchg
scas
lcall
jge
cmpsb
fwait
add
xor
pop
and
std
aas
dec
jae
imul
mov
lahf
dec
or
insb
ret
or
repz
sbb
imul
in
inc
cmp
out
inc
gs
imul
cmove
insb
adc
shlb
int
mov
mov
data16
xorl
in
hlt
or
mov
sysret
push
mov
aam
sbb
imul
stos
cmp
jno
xor
dec
xor
sub
mov
sub
lret
js
call
add
fisubl
cmp
int3
sbb
in
push
leave
and
les
pop
jl
inc
cmpsb
fwait
dec
inc
pop
and
nop
mov
sbb
ja
pusha
xor
jmp
rclb
sarb
ds
in
cs
movsl
pop
imul
je
mov
push
loopne
dec
fsubrs
and
mov
call
je
mov
inc
and
push
xor
stos
dec
bound
jns
and
cmp
movl
cmp
cwtl
or
mov
scas
addb
mov
pop
lret
cmp
sbb
add
aas
aaa
mov
insb
xchg
in
jle
cmpsl
jne
out
out
iret
adc
mov
xlat
cmpsb
mov
or
ds
shll
fiaddl
sbb
shlb
fs
push
mov
cli
mov
jg
fbld
push
mov
test
jbe
and
adc
pop
mov
enter
and
add
pop
sbb
sahf
dec
imul
jle
pusha
imul
hlt
clc
data16
aad
inc
lods
sub
jbe
mov
test
mov
dec
pop
lret
xchg
jb
faddp
cmpsl
mov
fwait
inc
cltd
loopne
stos
andb
int
pop
and
enter
pop
inc
out
xor
sub
imul
out
and
add
cmp
jecxz
data16
pop
adc
not
fscale
inc
iret
daa
mov
lea
cli
ja
push
sbb
mov
xchg
sub
xchg
loopne
lock
ret
pop
xchg
in
movsl
imul
rcr
mov
das
and
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
pop
mov
test
jecxz
data16
call
loopne
jp
js
ja
in
jmp
mov
xor
decl
and
xorb
pop
in
jmp
xchg
or
jle
push
pop
lds
inc
xchg
mov
jno
xor
sbb
movsl
add
jmp
mov
inc
or
inc
xchg
into
aas
xor
mov
mov
push
jbe
fstps
xor
int
arpl
inc
fwait
hlt
xchg
std
mov
aad
lds
cmpsb
sub
stc
or
aaa
imul
jp
or
inc
incl
scas
aam
add
jne
sbb
xor
pop
sbb
pop
push
push
adc
jge
test
jl
xchg
pop
mov
xchg
pop
stc
and
jecxz
xor
dec
shr
rclb
clc
mov
fldenv
lods
stos
xor
and
outsl
pop
jo
and
popf
int
lcall
mov
loop
idivb
adc
aad
ret
pop
les
lock
loope
in
xor
loope
fstpt
outsb
add
inc
mov
jl
sub
mov
pminsw
dec
std
stos
cltd
popf
push
dec
xchg
or
mov
movsl
mulb
dec
xchg
mov
arpl
adc
jg
mov
or
pushf
popa
xchg
jg
es
mov
lea
lret
fistps
pop
jge
out
cmp
int
dec
es
ret
jns
push
popa
mov
stos
jl
insb
pop
fs
jecxz
add
mov
adc
xchg
pusha
aam
sti
outsl
inc
mov
clc
addr16
adc
mov
pusha
sub
cmp
in
jno
adc
ja
cltd
sub
fs
xlat
xchg
out
loope
mov
lods
shll
scas
les
jbe
adc
sub
push
sbb
inc
push
xchg
or
cld
sub
or
cwtl
imul
mov
xchg
xchg
or
test
shll
jnp
adc
cmc
cmp
xor
xchg
lcall
outsb
cwtl
test
cs
pop
add
jmp
je
mov
adc
mov
nop
pushf
and
xchg
mov
filds
arpl
push
popa
adc
jp
xchg
in
rcll
ss
loop
sbb
sbb
pop
movsl
cmc
sub
and
cltd
mov
dec
in
jge
pop
scas
leave
and
mov
insl
mov
xchg
bound
loope
lea
lds
xor
cmp
inc
nop
cmp
imul
cltd
lcall
inc
jl
cmpb
jns
aad
ss
or
clc
test
test
add
adc
jnp
ljmp
popa
into
addr16
xlat
push
js
cmpsb
dec
test
xchg
pop
jno
xor
jne
std
movsl
lea
int3
stos
mov
push
dec
cmp
into
add
js
or
push
icebp
pop
pop
cmp
mov
jle
push
lods
pop
addr16
mov
or
mov
sarl
adc
cmpsl
movsb
jo
int
dec
sbb
xchg
inc
xchg
scas
outsb
sub
jo
arpl
cmpb
sub
outsl
repnz
cwtl
addb
bound
das
int3
pop
sti
mov
adcb
rcrb
push
mov
ds
bound
push
repnz
or
jp
scas
sahf
and
jo
arpl
fwait
sbb
test
mov
fdivs
loope
pop
stos
mov
mov
jb
mov
mov
adcl
cmp
mov
push
mov
mov
test
jp
push
add
repnz
into
adc
ret
mov
lret
mov
mov
add
xor
clc
lret
push
nop
cmp
out
fwait
mov
lret
inc
dec
sbb
push
xchg
cltd
cmpsl
repnz
mov
icebp
fwait
push
push
inc
fcmove
mov
int3
mov
adc
stos
imul
js
mov
mov
mov
jmp
fs
stos
cltd
loopne
jp
call
push
xor
call
leave
insl
jg
jp
dec
test
or
lret
leave
incb
jge
nop
fdivl
test
pop
dec
out
cmp
pop
adc
das
daa
push
mov
dec
xchg
lods
and
das
fwait
xor
jo
push
in
std
leave
popf
icebp
cmp
mov
cmp
out
jge
stos
lock
xchg
push
mov
aas
xlat
sub
sub
push
ror
fcomp
in
or
into
inc
inc
inc
xchg
ss
negb
sbb
push
mov
insb
fiaddl
sahf
clc
lcall
test
ljmp
sar
mov
jae
lock
jo
cmp
xlat
inc
sbb
iret
pop
and
sbb
jo
sbb
hlt
outsb
test
and
xchg
imul
jmp
jno
sbb
test
repnz
add
movsl
pushl
dec
xchg
or
stc
arpl
push
outsl
jnp
push
cwtl
and
jnp
and
in
xor
cmp
out
pop
movb
add
push
stos
or
nop
pop
xchg
es
shll
cmp
cmp
xchg
loope
imul
adc
lods
shr
push
sub
mov
ja
jg
movb
add
in
xchg
mov
in
xchg
or
aas
sub
push
loop
mov
jp
out
adc
aas
out
add
fwait
mov
jle
lahf
or
inc
sbb
mov
jnp
lods
out
xchg
jge
mov
jns
dec
shlb
xor
andb
cmpsb
fcmovu
aam
cmp
sbb
adc
ficomps
je
mov
mov
test
sahf
stos
mov
and
sub
adc
sub
repz
fnstsw
cmc
xor
jo
cltd
push
cld
outsb
mov
jnp
pop
mov
mov
push
outsl
in
out
cmp
add
cli
out
cmc
dec
sub
out
xlat
cmpsb
dec
or
mov
xchg
movsb
ret
or
and
rclb
push
lret
push
xor
bound
pop
orb
mov
das
fs
sub
sub
add
bound
movsl
mov
cmp
cmp
push
pushl
addr16
xchg
aad
shlb
outsb
mov
nop
stos
sbb
jnp
insb
mov
or
clc
xor
outsl
xor
arpl
and
js
les
xor
lea
push
push
lea
das
out
fwait
cmpsb
inc
push
cmc
fcoml
mov
adc
repz
mov
scas
imul
gs
push
or
cmpl
ror
inc
mov
push
pop
ret
mov
xchg
xchg
data16
and
inc
out
test
cmp
seto
lret
in
lds
pop
in
mov
sub
push
pusha
and
or
out
push
dec
iret
nop
sbb
imul
mov
sub
int3
in
adc
mov
jl
cld
popf
and
popa
cltd
push
jg
or
mov
cmp
or
jbe
iret
and
jmp
mov
push
inc
lock
ficomps
in
sti
lcall
sub
sub
das
jg
test
mov
lods
or
insl
sub
and
adc
inc
pop
das
iret
nop
pusha
mov
fwait
out
xchg
mov
push
cltd
cmp
mov
or
jecxz
or
dec
bt
fsub
idiv
or
sbb
ja
pop
mov
mov
mov
int
sbb
orb
jb
inc
xor
push
in
mulb
jmp
sbb
out
push
into
outsb
mov
fistpl
adc
push
mov
es
mov
pslld
xchg
jmp
pop
repnz
jns
into
xchg
in
inc
push
rorl
lea
sbb
ret
push
push
enter
rol
adc
ja
addr16
sub
sbb
jb
mov
sub
sbb
add
rcll
shrl
iret
addl
lods
pop
xor
adc
sbb
inc
sbb
sbb
adc
aas
sbb
mov
outsl
testl
insb
cmp
dec
popa
cs
insb
cmc
and
jecxz
jbe
lds
or
movl
cmpsb
dec
fmulp
insb
roll
adc
cwtl
and
inc
scas
iret
sbb
pushf
lds
xchg
rcr
call
lds
jae
mov
lret
lret
cli
and
shr
jmp
icebp
inc
cli
ret
ja
or
pop
inc
fucomip
js
bound
jle
std
ss
jnp
out
jg
aaa
mov
mov
jp
add
std
dec
and
ficoms
xchg
jmp
lcall
inc
lods
mov
or
inc
cmp
mov
pushf
clc
xchg
repz
xchg
mov
shlb
ficomps
push
and
enter
push
xor
mov
sub
in
pop
aas
adc
xchg
mov
adc
xchg
sub
push
stos
sub
add
bound
push
add
int
std
testl
sub
dec
into
add
sub
cmp
aad
pop
ret
das
pop
pop
pop
lods
adc
fstp
dec
popf
clc
sahf
lcall
mov
jns
vpaddw
push
mov
dec
pop
or
mov
sbb
and
add
loope
nop
add
pop
fsubl
bound
stos
aaa
push
jp
pop
mov
or
sbb
mov
dec
daa
pop
cmp
adc
push
and
and
ds
fs
inc
xlat
xchg
cmp
arpl
lahf
setno
jmp
mov
mov
movsl
xchg
adc
push
dec
mov
adc
mov
sub
or
stos
pop
test
lahf
dec
xchg
shrb
adc
add
enter
scas
pusha
out
imull
inc
popa
push
dec
mov
jle
pop
fnstcw
cmp
cpuid
jg
push
rolb
mov
rcr
cmp
nop
mov
mov
xchg
imul
adc
incl
xchg
lock
icebp
fbld
data16
add
mov
jle
jnp
negb
add
lea
cld
in
inc
sbb
mov
sti
mov
iret
xchg
pushf
orl
jae
dec
rorb
test
scas
pop
jmpw
orb
outsb
lcall
sahf
mov
jp
jle
data16
cli
sub
mov
xchg
sbb
xchg
push
push
test
lahf
jmp
cltd
gs
shr
imul
test
mov
sub
push
jp
or
dec
lock
insl
ficompl
cmp
mov
ret
xor
call
cmp
sbb
fnsave
stc
push
stos
movsb
pushf
and
pop
inc
pop
adc
cmp
lock
test
sub
stos
mov
jmp
out
push
cmp
and
clc
sbb
mov
lock
push
push
data16
or
in
ficompl
icebp
and
jmp
sarb
sbb
jae
push
and
inc
fcoml
jns
mov
mov
iret
mov
mov
sahf
nop
jb
aas
dec
push
fisttpll
push
mov
push
rcll
inc
cmp
lret
adc
scas
nop
jp
mov
imul
loopne
icebp
dec
xchg
cmp
xchg
or
dec
dec
push
in
adc
lds
push
gs
jae
dec
pushf
push
dec
xchg
test
popf
or
addr16
inc
jle
or
xchg
lock
fildll
stos
sub
cmp
cmpsb
jle
jg
xchg
pop
fwait
sub
inc
inc
aam
cmp
ret
lea
movsl
add
psadbw
mov
nop
das
loope
pop
in
out
sub
cmp
pop
stos
cmp
sbb
cld
jmp
out
stos
adc
sahf
jl
cs
pop
and
mov
clc
cld
push
mov
pop
pop
fldcw
mov
faddp
mov
pop
adc
fucomp
std
je
ljmp
mov
adc
push
adc
hlt
fs
inc
xchg
mov
add
cs
or
inc
cwtl
enter
ds
nop
out
push
push
mov
dec
dec
mov
jae
fistpll
push
sub
daa
add
test
mov
sbb
movsl
in
cli
es
rcrl
and
push
adc
js
pop
lcall
je
cmp
int
inc
adc
lret
dec
aad
jl
push
enter
dec
mov
xchg
add
sub
fidivrs
clc
int3
lds
popa
push
pushf
clc
lcall
test
mov
add
daa
daa
dec
dec
iret
fdivl
cli
idivl
xor
aaa
mov
cmp
nop
movsl
inc
sub
xchg
xchg
cmc
inc
xor
out
enter
cmp
dec
nop
mov
insb
rorb
inc
push
cli
outsl
or
sar
adc
push
movsl
xchg
cmp
adc
cmp
push
in
dec
add
insl
xlat
mov
imul
pop
inc
mov
xchg
sbb
clc
sbb
test
lahf
aad
push
imul
jle
mov
int3
mov
sub
movsb
fdivrs
jnp
sbb
das
and
sub
mov
xchg
cmpsb
push
adcb
mov
adc
cmp
xchg
stc
rcrl
and
push
jb
mov
hlt
std
aaa
loope
mov
pop
mov
lahf
arpl
sub
clc
adc
clc
subl
dec
pop
xlat
icebp
add
andl
rcll
stos
push
dec
xor
aas
sbb
inc
fadd
push
sbb
dec
inc
ja
mov
mov
mov
cs
push
cmp
mov
andl
roll
jp
stos
hlt
dec
inc
jecxz
leave
in
or
insb
jle
popa
loope
mov
push
enter
mov
test
stc
aad
iret
mul
inc
clc
frstor
pusha
push
in
sbb
mov
xorl
pusha
xchg
sarb
mov
mov
cmp
inc
jecxz
dec
pushf
jp
pop
mov
jl
mov
adc
inc
jle
mov
xchg
and
les
inc
pushf
stos
sub
and
or
xchg
les
out
cmp
mov
shll
out
pop
rorb
std
sbb
arpl
andl
push
dec
dec
data16
jno
out
xchg
adc
push
hlt
sbb
jb
je
sub
push
cmc
ljmp
mov
push
add
jae
xor
inc
orl
and
sbb
push
jns
cmp
shlb
fstpt
xor
sbb
or
notl
pop
scas
push
aas
push
jnp
sar
pop
jnp
mov
stc
fildll
cmpsl
mov
rcrb
jno
dec
lahf
shll
stos
cs
lods
push
in
lock
and
cmp
and
sub
ret
les
scas
fcmovbe
repnz
xor
add
inc
dec
out
pop
and
hlt
lret
sub
mov
pushf
mov
in
inc
pop
pop
enter
push
repnz
push
test
mov
lea
andps
lahf
scas
xchg
sub
out
int
int3
mov
pop
lret
pushf
cwtl
dec
xchg
mov
push
and
mov
out
ficoms
push
jg
shll
arpl
adc
xor
les
mov
sub
jle
xchg
mov
fs
add
inc
pop
and
ljmp
or
adc
iret
pop
out
and
xor
lret
popf
mov
sub
sahf
push
push
xor
lods
cmpsb
sbb
jp
adc
mov
sarl
dec
loopne
popa
cwtl
imul
repz
adc
mov
test
popa
pusha
stos
iret
in
xor
push
jg
cmpsl
pop
in
pop
jl
jge
jae
mov
cmpsb
sbb
pop
nop
inc
cmp
add
pop
fninit
test
loop
fistpll
mov
aad
and
dec
dec
pop
cld
dec
dec
or
push
popf
sti
data16
out
push
cmpb
add
mov
mov
insb
fs
xor
mov
and
mov
divb
jmp
lock
adcl
sbb
mov
xchg
sub
stc
mov
ss
testl
outsb
mov
outsl
xorb
dec
inc
push
pusha
stos
shll
pop
lret
jo
test
pop
lock
push
outsl
xchg
sbb
mov
mov
mov
xchg
xchg
add
pop
xchg
cmp
push
inc
adc
sub
out
fisubs
mov
mov
pop
cmpsb
insb
pop
inc
hlt
in
iret
push
push
push
sbb
mov
mov
js
sbb
sarb
js
ljmp
fimuls
popa
cmp
outsl
push
xchg
xor
lret
mov
test
push
sbbb
dec
jbe
inc
add
inc
pushf
fisubrl
inc
aam
adc
inc
std
in
shrl
inc
mov
pop
incb
sub
jae
daa
cltd
mov
sahf
cs
xor
xchg
xor
sbb
insl
arpl
pmullw
cwtl
test
adc
mov
mov
fcom
out
je
sub
stc
sbb
add
scas
xchg
sub
xchg
cmp
and
pusha
dec
adc
push
fistpl
cmp
xchg
inc
sbb
xchg
xor
je
aad
ret
jb
xchg
icebp
fdivrp
int
sub
xor
test
ds
cmpsb
jmp
in
aas
pop
imul
mov
mov
daa
mov
push
ret
sbb
xor
push
ljmp
mov
push
daa
outsl
mov
adc
xor
icebp
nop
dec
aas
enter
push
mov
sarb
ja
mov
jb
xor
cltd
pop
out
adc
push
xchg
jmp
loopne
imul
add
shl
xchg
fwait
or
in
cmp
data16
and
and
sbb
mov
mov
pusha
shll
es
jo
cmpsb
fdivrl
addr16
sub
popf
imul
mov
or
mov
sbb
mov
or
cld
addb
rol
cmp
in
or
cmp
addl
mov
aam
cltd
cmpb
mov
jmp
pop
jp
sarb
cld
loopne
sbb
add
sbb
outsb
inc
adc
add
cltd
add
rorb
fimull
inc
or
fidivrl
enter
cs
call
test
pushf
push
xor
mov
pop
inc
push
xchg
loopne
rcrb
outsl
fisubrs
mov
bound
loope
lret
xchg
dec
rcll
xor
xchg
mov
imull
jge
into
xor
jg
nop
jns
fisttpll
jb
lret
add
call
out
dec
pop
arpl
imul
mov
mov
xchg
sub
add
lds
push
subl
mov
inc
sbb
push
push
mov
inc
dec
xor
xchg
ss
sbb
popa
xchg
mov
xor
stos
shll
dec
and
psubsb
mov
testb
fwait
sbb
loop
rorb
and
test
xchg
es
loope
insl
fwait
je
inc
push
ss
inc
xchg
lret
mov
jmp
insl
push
adc
popa
xchg
out
xchg
ss
rcrb
push
dec
popa
imul
sbb
adcl
xchg
into
sub
pop
jo
push
mov
sbb
aaa
mov
xchg
and
xor
popf
inc
push
sub
xchg
cltd
outsb
fidivrl
push
dec
fnstsw
cs
xchg
mov
scas
outsb
lea
jle
sbb
mov
or
pop
pushf
lret
mov
outsb
push
es
les
popf
insl
addr16
push
in
out
add
dec
mov
cmp
push
sub
sbb
cmp
fwait
mov
mov
enter
jle
scas
push
sub
cmp
lea
lahf
push
aad
in
fwait
lods
popa
out
jnp
gs
cmpb
test
sub
out
bound
sbb
adc
fs
adc
lcall
mov
push
add
adc
xlat
bound
add
jne
into
mov
cmp
ret
inc
stos
inc
pop
jae
out
push
das
lret
out
mov
cmc
xlat
loope
inc
aas
rorl
lahf
jl
test
jle
mov
xor
in
cmp
fistl
jno
jns
add
jmp
mov
bound
sbb
fcomi
mov
ds
lods
mov
sub
icebp
mov
and
mov
movsb
rorb
bnd
mov
xchg
ja
or
scas
out
aaa
ljmp
push
sub
cmpb
add
into
andl
ds
mov
into
mov
adcl
dec
ret
mov
loop
dec
adc
cmc
mov
fdivrl
lods
pop
push
rorb
test
jle
rclb
push
add
push
call
xor
mov
xchg
leave
cmc
add
clc
addb
outsl
pop
es
insb
sbb
loope
in
dec
adcl
rcrl
xchg
stos
inc
sub
addl
iret
es
jp
and
jno
mov
clc
mov
inc
popa
in
push
dec
xchg
xor
popa
cli
xchg
push
repnz
fildl
cld
fdivs
stos
repz
mov
add
imul
dec
pop
or
push
shr
addr16
ljmp
cld
gs
xor
fdiv
out
xchg
adc
imul
rcrb
cltd
mov
test
xchg
xchg
cmp
dec
cmp
push
popf
fldenv
push
mov
clc
jo
push
fcompl
nop
insl
int
xchg
sub
dec
push
shrl
outsl
daa
sub
insl
adc
inc
dec
leave
sbb
mov
jmp
xchg
lret
hlt
loop
mov
loope
imul
add
or
mov
nop
jle
bound
and
aad
je
push
push
xor
sarb
fisubrl
ss
jb
mov
jmp
and
fidivrs
add
rcll
and
dec
jmp
pusha
mov
testb
gs
cs
fists
pop
gs
and
xchg
std
inc
das
jg
or
add
int3
xchg
out
mov
add
aam
push
fdivrs
enter
mov
repz
rclb
fists
je
jo
je
in
or
sbb
inc
mov
je
cmpsb
sbb
je
push
push
and
jecxz
mov
fisubrl
nop
out
mov
or
es
ret
lock
dec
jo
inc
mov
popa
push
pop
mov
lcall
test
xlat
xorb
mov
out
add
enter
shll
push
stc
or
dec
xchg
clc
xorb
xchg
or
lret
mov
mov
jb
lods
jns
ret
repz
lods
popa
mov
jns
dec
add
sub
push
js
bound
jbe
addr16
adcb
sub
je
mov
loopne
insl
push
mov
cli
pop
mov
pop
xchg
add
es
xor
jp
add
scas
cltd
xchg
sbb
pop
popf
mulb
adc
mov
and
add
pushf
cmp
add
les
cmc
push
ss
push
mov
in
out
idivb
mov
push
mov
jmp
lods
mov
into
mov
xchg
das
xor
ljmp
int3
mov
push
or
sub
jnp
sbb
subb
test
or
insb
cli
or
adc
loope
push
sub
js
push
adc
xlat
jae
test
mov
xchg
push
sbb
clc
pusha
jecxz
inc
fistps
scas
push
dec
push
rorb
sbb
and
mov
mov
jl
push
jmp
mov
in
xchg
cmpl
mov
clc
push
lods
test
lods
xchg
ret
xchg
shr
and
sbb
mov
movsb
adc
push
es
cltd
sbb
daa
lock
jo
pop
jb
lret
std
rcl
cld
push
std
das
and
and
popf
sbb
lahf
stos
inc
mov
iret
push
adc
das
adc
pop
lret
addr16
arpl
pushf
iret
mov
cs
adc
fisttpll
push
push
lock
loopne
dec
ret
stc
jle
sbb
pushf
adcb
and
in
mov
or
mov
sub
or
sub
cmp
into
dec
inc
mov
aad
fstpt
inc
mov
xchg
loopne
push
out
enter
ss
out
popf
mov
or
leave
mov
insb
sub
shll
lods
xlat
inc
and
pop
mulb
push
sbb
lock
push
or
jp
sbb
xor
mov
mov
fwait
pop
and
imul
hlt
push
ljmp
pop
outsb
std
decl
imul
cltd
pop
popa
fcompl
dec
lods
pushf
push
fildl
neg
cld
in
cmp
and
je
cmp
cmp
mov
je
int
stos
in
pop
xchg
sbb
pop
out
jns
xchg
adc
mov
inc
movsl
dec
outsb
cmp
lsl
push
mov
shlb
fucomi
xchg
repnz
je
out
lcall
dec
jno
mov
xor
mov
data16
aas
jmp
das
repz
add
mov
lds
cmp
pusha
pop
mov
insb
or
repz
cld
mov
aaa
push
cmp
mov
and
push
adc
inc
adc
jbe
loop
sub
lret
addr16
fsts
push
pop
mov
test
mov
outsb
fs
mov
fs
pop
sbb
insb
mov
mov
jecxz
or
fsubrl
sbb
loope
lcall
xchg
cs
icebp
jl
jns
jb
mov
lret
arpl
and
das
push
cmp
dec
pop
out
std
or
xchg
sbb
dec
movsl
cwtl
dec
aad
jmp
leave
iret
movsl
cmc
mov
dec
imull
push
adc
jge
fistpll
mov
das
cmp
mov
mov
jne
sub
popf
mov
mov
pop
push
test
pop
testl
mov
insl
lods
aaa
mov
xor
bound
add
pusha
mov
rorl
aas
mov
mov
push
outsb
pop
pop
and
loopne
push
fcoml
outsb
pop
mov
into
pop
cmp
lods
aaa
cmp
or
xor
dec
ret
cmpsl
sub
movsl
inc
movsb
arpl
mov
das
and
cmp
xor
mov
rcrb
sub
clc
jp
lret
mov
mov
pop
insb
notl
out
fidivl
fs
adc
mov
pusha
fldt
sub
mov
movsb
aas
stc
add
mov
jg
lret
inc
lods
and
and
and
test
lods
dec
or
neg
addr16
enter
sbb
sub
sbb
xor
xor
or
jns
dec
aad
inc
stos
lods
mov
pushf
rcrb
pop
adc
pusha
cs
xor
test
xchg
jnp
xchg
ss
add
xchg
jecxz
mov
leave
pop
aas
add
or
repz
fndisi(8087
outsb
shr
test
call
addr16
outsb
pop
out
adc
imul
and
inc
mov
aam
lcall
test
cmc
jge
pop
jge
pusha
dec
mov
or
xor
pop
mov
pop
out
push
inc
push
pop
mov
pop
enter
in
jg
icebp
dec
in
ljmp
jae
imul
push
push
pop
mov
rorb
lea
inc
mov
mov
lahf
call
lahf
rcrl
xchg
aaa
popf
jge
in
adc
xor
pop
pop
jne
cwtl
xor
call
ficomps
in
popf
mov
inc
aas
push
xor
jbe
adc
sub
xchg
and
test
enter
jecxz
pop
xchg
ret
fdivr
dec
jge
dec
int
movsb
daa
jno
jnp
jle
popa
sub
das
iret
je
and
lret
and
je
loope
rolb
pop
ds
or
pop
xchg
and
inc
popa
mov
insb
xchg
pop
push
sbb
repz
xor
inc
inc
adc
pushf
dec
fldpi
test
mov
out
lcall
jb
sub
arpl
mov
cmp
adc
xchg
cltd
mov
pop
lods
inc
pop
pop
jmp
repz
std
jl
test
repnz
dec
rclb
pushf
xor
fsts
xchg
subb
ss
xchg
adc
mov
cmpsl
add
pop
push
and
leave
push
inc
push
push
cwtl
and
dec
aas
call
inc
es
push
adc
icebp
pop
jbe
mov
aas
fidivrs
adc
lods
sub
dec
and
mov
lds
push
pop
ljmp
inc
fistpl
adc
daa
adc
add
andl
div
or
cld
scas
les
mov
jbe
xchg
cmpps
xchg
call
inc
mov
mov
jnp
lret
icebp
mov
and
decl
xor
or
aam
mov
imul
push
pop
jns
mov
sub
dec
pop
test
and
pop
cli
outsl
rclb
cmpsl
lock
test
and
push
jb
lcall
mov
fnsave
or
test
addb
sbb
dec
and
push
xor
out
je
out
mov
dec
lcall
mov
mov
sub
out
aam
cmc
stos
and
jmp
nop
les
inc
mov
cmp
pop
stos
call
mul
stc
insb
shr
into
jmp
add
nop
test
in
sahf
inc
addb
xchg
insl
out
and
xchg
push
fcoms
mov
push
scas
adc
std
in
popf
jl
mov
js
inc
jb
lret
inc
push
and
stos
in
jnp
xor
std
addr16
xor
mov
mov
cs
inc
ss
sub
xchg
ret
adc
cmp
mov
fadds
sti
pop
adc
push
inc
inc
adc
push
out
aad
arpl
roll
test
mov
scas
js
dec
sub
movsl
xchg
daa
mov
xor
adc
sahf
orl
arpl
or
push
imul
add
push
aas
pop
pop
cwtl
in
push
jg
pop
loop
jno
xchg
repnz
test
addr16
lret
mov
adc
and
shl
xor
aaa
lahf
fstpt
daa
daa
add
test
mov
jmp
and
cmp
mov
pop
mov
imul
or
out
jae
popf
xor
test
jle
push
mov
daa
cmp
sbb
push
cltd
mov
mov
icebp
fstpt
cltd
aaa
and
inc
scas
dec
cmp
loopne
adc
dec
jmp
cmp
mov
mov
stos
jne
adc
out
mov
add
cli
lds
mov
gs
push
mov
cmp
push
lods
icebp
adc
inc
mov
mov
in
pusha
mov
mov
in
inc
ja
push
mov
cmp
ljmp
aam
out
mov
adc
dec
xchg
mov
jmp
mov
ljmp
xchg
outsl
jmp
jbe
sbb
jb
bound
into
addl
dec
jle
add
pop
dec
fadds
inc
in
leave
dec
push
repz
ret
sti
mov
inc
imul
sahf
cmp
and
cmp
cmp
incl
push
inc
outsl
mov
stc
lock
and
lahf
es
push
adc
lock
in
mov
aad
nop
jbe
sahf
cmp
popl
mov
mov
xchg
inc
xchg
jecxz
fcmovnu
in
cwtl
fldl
or
test
sub
inc
cmp
lret
and
or
push
mov
xlat
mov
cmp
es
std
inc
cmp
mov
scas
sahf
popf
test
sbb
mov
aad
sbb
jg
movsb
jge
fistpll
aam
dec
dec
in
push
or
mov
popa
into
es
ret
sub
mov
jae
push
mov
or
dec
inc
das
leave
xor
icebp
test
ud0
pop
inc
pop
sbb
ds
popa
dec
movsb
add
xor
mov
lds
stos
mov
cmp
ficoml
xchg
pop
clc
mov
mov
mov
sub
cld
cs
scas
out
mov
jns
popa
sub
jl
xor
mov
jge
sub
int3
cmp
inc
test
mov
mov
ljmp
mov
xchg
cs
pop
ja
repnz
add
pop
mov
or
fisttps
jecxz
stos
idivb
lret
enter
inc
mov
fstpt
arpl
jmp
aad
jae
icebp
pop
and
cmc
jmp
clc
cmp
movsb
imul
and
imull
sbb
mov
es
xchg
and
fs
cld
fimull
ljmp
and
mov
jl
dec
jno
xchg
sbb
dec
fs
lods
ds
and
stc
xchg
dec
mov
out
add
jnp
movsl
pop
in
push
leave
outsb
push
out
push
addr16
inc
adc
test
or
adc
int3
pusha
pushf
jns
jb
and
fcmovnbe
xor
loop
jl
fnstenv
mov
es
mov
pushf
addb
cs
bound
mov
pop
ret
jbe
xchg
push
lds
mov
mov
sub
je
jae
xor
das
cmp
cmc
or
lds
adc
mov
mov
pop
lea
dec
das
xchg
stos
ja
addr16
jae
test
mov
xchg
add
mov
cmp
subb
mov
test
out
jecxz
pop
sbb
test
test
lds
push
ss
imul
cmp
rolb
push
daa
aaa
jl
inc
lods
mov
insb
xchg
cld
in
jp
or
movsb
pop
pop
dec
mov
sbb
add
movsl
sub
push
dec
js
cmp
cmp
out
cmp
adc
xor
shld
aaa
gs
hlt
cmpsb
sbb
mov
lea
arpl
mov
jb
cmp
mov
movsb
mov
mov
mov
cli
pop
xchg
cmp
mov
in
add
add
add
add
xchg
add
inc
xchg
add
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
dec
hlt
mov
add
