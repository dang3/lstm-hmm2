add
add
jae
mov
mov
mov
shl
movl
sub
and
mov
mov
shr
movzbl
cmp
mov
jbe
lea
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
mov
shl
mov
mov
sub
and
mov
mov
shr
movzbl
cmp
ja
test
jne
mov
shr
movzbl
add
shr
sub
mov
shr
test
mov
mov
jne
movl
jmp
cmp
ja
jmp
cmpl
je
mov
mov
add
subl
movl
jmp
test
jne
mov
shr
movzbl
mov
mov
movzbl
add
mov
shl
mov
mov
shr
sub
and
shr
add
mov
mov
mov
shr
movzbl
movzbl
add
cmp
ja
movzbl
mov
shr
sub
mov
jmp
sub
cmp
ja
mov
cmp
mov
ja
sub
add
mov
cmp
mov
jbe
mov
jmp
cmp
jb
mov
mov
shl
sub
sub
and
add
shr
add
jmp
cmpl
jne
movl
cmpl
jne
movl
movl
mov
mov
mov
mov
mov
sub
add
sub
mov
mov
je
mov
mov
push
push
call
add
test
jne
mov
mov
sub
mov
sub
add
add
add
cmpl
je
test
je
cmpl
push
jne
mov
mov
sub
call
add
mov
mov
mov
mov
neg
sbb
and
cmp
je
xor
cmp
je
cmp
je
xor
add
add
add
test
mov
je
cmpl
je
mov
pop
pop
pop
pop
add
ret
cmpl
jb
mov
mov
mov
mov
mov
mov
mov
push
mov
sub
add
pop
cmp
decl
push
adc
mov
or
mov
mov
add
cmpl
mov
mov
mov
je
mov
jmp
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
jae
jmp
cmpl
je
cmpl
je
cmpl
jne
cmp
jae
jmp
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
jb
mov
shr
mov
and
and
sub
cmp
mov
jne
movl
shr
mov
sub
jmp
mov
jmp
movl
movl
jmp
cmp
jae
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
jb
mov
and
add
mov
shr
mov
and
mov
add
shr
mov
mov
and
add
shr
sub
cmpl
mov
mov
ja
cmpl
ja
movl
movl
mov
mov
inc
add
cmp
jb
mov
cmovae
and
lret
and
mov
mov
add
clc
sbb
jmp
sub
cmp
mov
jb
mov
cmp
and
or
and
inc
push
jo
add
inc
push
out
xchg
add
insb
mov
mov
lea
push
push
lea
push
lea
push
mov
movl
call
add
test
mov
jne
mov
mov
pusha
es
add
add
pusha
cmp
aaa
cmovae
push
mov
shl
mov
sub
and
mov
mov
shr
movzbl
cmp
mov
ja
mov
shr
cmp
jae
mov
shr
movzbl
cmp
jb
movzbl
mov
les
inc
add
dec
and
mov
addl
or
sbb
pusha
cmp
js
inc
add
jmp
mov
add
test
xchg
xor
lea
lea
mov
mov
lea
push
push
mov
lea
push
lea
push
movl
call
add
test
jne
mov
lea
push
lea
push
mov
lea
push
mov
mov
lea
push
movl
call
add
test
mov
jne
cmpl
movl
je
movl
jmp
jmp
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
jae
jmp
mov
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
mov
shl
mov
mov
sub
and
mov
mov
shr
movzbl
cmp
mov
jbe
jmp
mov
cmp
je
cmp
movzbl
jne
lea
cmp
jb
shr
mov
and
add
mov
shr
mov
sub
add
mov
movl
mov
ret
add
pusha
mov
cmp
ja
cmpl
je
mov
mov
xchg
sbb
add
inc
dec
jo
inc
push
sbb
jne
jmp
movzbl
lea
cmp
jb
mov
add
rorb
dec
xchg
xor
movzwl
mov
and
add
shr
mov
mov
sub
jmp
lea
cmp
jae
mov
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
lea
cmp
mov
jb
shr
mov
and
add
mov
shr
mov
jmp
mov
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
lea
cmp
mov
jae
jmp
cmpl
jne
movl
jmp
mov
and
shr
sub
movl
mov
jmp
cmpl
jge
mov
mov
cmp
jne
jmp
mov
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
lea
cmp
mov
jae
jmp
mov
shr
mov
movzbl
mov
movzbl
add
mov
mov
shl
mov
sub
and
shr
mov
shr
add
mov
mov
mov
movzbl
mov
shr
movzbl
add
cmp
ja
movzbl
mov
shr
sub
add
jmp
jmp
lea
cmpl
je
mov
movzbl
mov
shl
mov
add
mov
add
movzbl
add
subl
mov
shl
mov
add
sub
and
shr
movzwl
add
mov
mov
mov
shr
movzbl
add
cmp
jbe
jmp
sub
je
sub
jne
cmpl
movl
movl
movl
movl
movl
jne
jmp
test
jne
jmp
cmp
jae
jmp
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
mov
jb
mov
sub
mov
add
add
test
je
cmpl
mov
jne
mov
mov
sub
push
mov
call
add
mov
mov
mov
mov
cmpl
mov
mov
mov
jne
and
mov
shl
add
xor
mov
shl
add
mov
shr
add
cmp
jne
xor
mov
xor
jmp
cmp
jae
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
mov
jb
testb
jne
mov
test
movl
jne
testb
je
movzbl
shl
mov
shr
add
xor
mov
div
test
jne
mov
and
cmp
jne
mov
shr
mov
and
add
test
je
sub
cmp
ja
mov
shl
push
xor
xor
mov
call
mov
add
test
mov
mov
jne
mov
xor
mov
mov
xor
jmp
cmpl
je
jmp
movl
mov
jmp
add
sub
sub
jmp
lea
cmpl
je
movzbl
mov
shl
mov
subl
add
add
movzbl
add
mov
mov
shl
mov
add
mov
sub
and
shr
movzwl
add
mov
mov
mov
shr
movzbl
add
cmp
jbe
jmp
nop
push
cmc
push
adc
xorb
xchg
xorl
adc
xorl
inc
test
adc
test
adc
test
adc
xchg
adc
push
adc
xchg
adc
mov
adc
mov
adc
push
adc
push
adc
adc
push
adc
in
push
adc
in
push
adc
out
push
adc
out
push
adc
out
push
adc
adc
aaa
adc
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
mov
cmpl
je
cmpl
je
sub
push
mov
cmp
jae
sub
cmp
jbe
mov
mov
mov
add
push
sub
push
push
call
add
sub
jne
add
mov
mov
cmp
je
mov
cmp
jae
add
mov
pop
pop
pop
xor
pop
ret
mov
mov
shl
movl
movl
mov
jmp
mov
mov
mov
shl
mov
push
push
push
call
add
test
mov
jne
jmp
mov
mov
push
sub
push
push
call
mov
add
pop
mov
movl
pop
pop
xor
pop
ret
mov
mov
push
sub
push
push
call
mov
add
pop
mov
mov
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
cmp
push
mov
mov
push
lea
jb
lea
mov
mov
lea
push
push
mov
call
mov
add
test
je
cmp
jne
mov
mov
sub
test
mov
je
mov
push
mov
call
add
cmp
mov
jne
lea
push
call
mov
add
cmp
jne
xor
pop
pop
pop
ret
mov
cmp
jne
jmp
xor
jmp
push
mov
cmpl
jne
cmpb
jne
lea
xor
call
push
movb
call
test
js
mov
test
je
call
test
js
mov
mov
mov
mov
push
call
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
test
je
mov
test
je
xor
mov
xor
mov
mov
mov
cmp
jne
cmp
je
push
mov
push
push
call
mov
mov
xor
cmp
jne
mov
mov
cmp
je
lea
mov
or
lock
dec
je
movl
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
cmp
ja
jmp
cmp
je
mov
mov
sub
mov
cmp
jae
lea
mov
test
je
mov
push
mov
add
push
push
call
add
mov
add
mov
mov
xor
mov
cmp
jb
mov
mov
cmp
je
call
jmp
lea
jmp
mov
jle
cmp
mov
cmp
popf
adc
adc
cld
push
adc
in
mov
call
test
js
push
pushl
mov
pushl
mov
pushl
mov
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
cmpl
je
xor
pop
ret
cmpl
push
push
push
lea
je
mov
mov
cmpb
je
mov
push
mov
call
mov
mov
push
push
mov
push
call
test
js
mov
mov
mov
add
push
push
call
test
js
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
test
je
xor
cmp
je
mov
mov
cmp
jne
xor
pop
pop
add
ret
mov
push
mov
push
push
lea
push
push
push
push
push
lea
mov
call
test
js
mov
cmp
je
cmp
je
xor
mov
movl
lea
cmp
je
mov
cmp
jge
mov
mov
mov
cmp
mov
jne
cmp
mov
mov
jne
add
cmp
jge
cmp
jle
sub
mov
mov
js
lea
mov
sub
cmp
mov
mov
jge
lea
mov
mov
cmp
jl
push
call
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
mov
addl
mov
jmp
lea
call
mov
cmp
jne
xor
pop
pop
pop
pop
add
ret
lea
call
mov
cmp
je
testl
je
push
call
add
pop
pop
pop
xor
pop
add
ret
push
mov
push
push
xor
cmp
je
cmp
je
push
push
mov
lea
mov
test
je
pushl
mov
xor
inc
mov
shl
lea
push
push
pushl
pushl
pushl
push
call
inc
add
cmp
jl
mov
pop
pop
pop
leave
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
je
cmp
je
cmp
push
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
je
test
push
push
je
sar
add
mov
lea
or
mov
pop
mov
pop
pop
pop
ret
mov
test
mov
je
call
cmpl
jne
mov
or
mov
addl
mov
add
lea
pop
or
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
mov
call
test
jne
add
mov
cmpb
je
mov
mov
sbb
add
add
test
sbb
dec
and
push
or
jbe
add
add
add
mov
movzbl
add
add
xor
sub
je
sub
jne
mov
add
add
mov
mov
sub
mov
pop
pop
mov
pop
add
ret
int3
int3
int3
sub
push
mov
push
mov
push
push
mov
mov
add
call
cmp
jne
movl
mov
xor
test
mov
jne
mov
cmpb
mov
je
mov
lea
push
lea
push
push
call
testl
jne
cmpl
je
mov
movl
mov
call
mov
mov
xor
xor
cmp
je
lea
test
je
mov
mov
mov
add
add
cmp
jne
mov
mov
mov
mov
call
mov
lea
call
test
jne
mov
mov
cmpb
mov
jne
mov
cmpb
je
mov
mov
cmpl
je
mov
add
mov
mov
cmpb
jne
mov
mov
mov
mov
call
cmp
jne
xor
xor
lea
cmpl
je
mov
mov
mov
push
lea
push
call
mov
mov
mov
add
mov
add
cmp
jne
mov
mov
mov
add
add
add
mov
sub
mov
mov
sub
mov
mov
sub
mov
pop
sub
pop
sub
pop
mov
mov
pop
add
ret
mov
push
lea
mov
call
mov
mov
lea
push
mov
mov
push
lea
call
cmpl
je
mov
mov
cmpb
je
mov
test
jne
mov
add
mov
mov
lea
mov
cmp
je
mov
test
je
movl
mov
lea
push
push
push
call
add
cmpl
je
test
je
mov
add
mov
mov
jmp
mov
mov
push
lea
mov
call
inc
add
pushl
mov
pushl
mov
pushl
mov
push
call
ret
push
mov
push
push
push
mov
mov
call
test
jne
andl
lea
push
lea
push
push
push
pushl
mov
call
add
mov
xor
mov
test
jne
mov
push
pushl
pushl
pushl
push
pushl
pushl
call
add
test
pop
jne
xor
inc
leave
ret
push
pushl
call
test
pop
pop
je
mov
jmp
push
mov
sub
andl
push
mov
push
push
mov
movzbl
push
pushl
and
pushl
lea
push
xor
call
mov
pushl
mov
mov
mov
mov
mov
or
inc
add
mov
mov
mov
mov
mov
lea
mov
call
mov
andl
andl
mov
mov
lea
call
mov
lea
mov
mov
call
andl
test
je
movl
mov
mov
push
call
push
lea
push
lea
push
push
lea
push
pushl
push
call
mov
add
test
je
mov
test
je
testb
mov
je
mov
mov
mov
cmp
jne
mov
mov
lea
call
xor
mov
call
mov
lea
call
mov
test
je
mov
mov
mov
mov
test
je
lea
call
andl
andl
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
push
mov
sub
cmpw
jne
push
mov
mov
push
lea
push
push
call
cmpl
je
push
mov
cmpl
mov
mov
je
orl
lea
push
mov
call
push
mov
call
push
call
mov
pop
mov
call
mov
test
jne
pop
pop
leave
ret
push
mov
push
push
push
push
push
mov
push
call
mov
test
je
push
call
pop
movl
cmpl
je
push
call
test
pop
je
mov
andl
mov
mov
mov
mov
mov
movl
mov
mov
mov
push
call
test
je
mov
push
call
mov
mov
push
push
push
call
mov
mov
push
call
test
je
cmpl
je
push
call
pop
mov
pop
pop
pop
leave
ret
xor
jmp
push
mov
and
push
mov
addl
push
js
mov
mov
or
test
je
xor
pop
mov
pop
ret
mov
cmp
mov
jne
test
mov
jne
cmpb
je
test
jne
mov
push
push
mov
call
movb
xor
pop
mov
pop
ret
mov
call
xor
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
lea
mov
mov
call
test
jne
mov
mov
lea
push
push
mov
call
test
js
add
lea
push
mov
call
mov
mov
mov
push
pushl
push
push
mov
call
test
mov
js
call
cmpl
jne
mov
mov
call
mov
mov
mov
mov
mov
imul
imul
lea
call
mov
push
push
push
call
flds
mov
push
fstps
call
flds
cmp
and
adc
sti
pushl
sarb
or
test
in
add
ja
mov
mov
lea
mov
mov
call
lea
xor
cmp
jne
push
call
cmp
pop
je
movl
mov
mov
mov
mov
cmp
je
mov
mov
mov
call
push
lea
mov
call
lea
push
push
call
mov
test
jne
pushl
andl
mov
lea
call
mov
mov
mov
push
push
call
test
jne
lea
mov
test
mov
jne
push
call
test
pop
je
movl
add
add
rorb
cmpsb
in
add
js
call
mov
test
je
mov
mov
push
pushl
call
cmpl
jne
xor
cmp
jne
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
mov
test
jne
mov
mov
pushl
mov
push
call
ret
mov
jmp
push
mov
push
push
mov
push
call
xor
push
mov
lea
mov
call
mov
cmp
je
mov
push
mov
lea
mov
call
mov
mov
mov
lea
mov
call
lea
call
mov
pop
leave
ret
mov
mov
mov
push
mov
mov
mov
add
mov
xor
pop
ret
int3
mov
mov
testb
mov
je
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shr
not
and
mov
testb
jne
xor
mov
testb
jne
mov
mov
mov
shr
and
mov
ret
push
mov
lea
pop
jmp
xor
mov
mov
shr
and
mov
ret
push
mov
cmp
je
push
mov
mov
xor
cmp
ja
pop
pop
ret
push
mov
push
test
mov
jne
cmpl
push
jne
xor
lea
call
mov
pop
leave
ret
mov
push
call
jmp
mov
push
lea
call
mov
lea
push
push
call
cmpl
je
jmp
push
mov
mov
sub
call
test
jne
mov
mov
call
leave
ret
push
mov
mov
mov
call
test
mov
je
mov
push
push
xor
call
cmp
je
push
lea
mov
call
lea
lea
mov
push
push
call
pushl
mov
add
mov
call
mov
cmp
jne
lea
call
lea
call
pop
lea
call
pop
jmp
push
mov
sub
mov
xor
mov
push
mov
push
lea
mov
xor
cmp
push
mov
jne
xor
cmp
mov
jg
mov
test
je
mov
push
push
call
mov
andl
lea
lea
push
lea
movb
mov
movl
call
call
push
push
push
call
mov
test
je
testl
jne
push
mov
call
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
jmp
mov
mov
mov
call
mov
lea
call
mov
test
je
mov
push
call
incl
cmp
jl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
push
mov
lea
mov
mov
lea
push
and
or
lea
push
push
movl
mov
call
mov
mov
add
cmp
jne
mov
xor
cmp
mov
movl
mov
ja
push
push
push
lea
mov
mov
mov
push
call
mov
cmp
je
testl
je
lea
cmp
jne
mov
pop
pop
pop
mov
pop
ret
lea
sub
mov
mov
push
mov
mov
sub
mov
call
cmpl
je
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
push
push
mov
call
test
js
mov
mov
mov
push
call
mov
xor
test
jbe
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
test
push
push
mov
je
cmpb
je
mov
cmpl
mov
jge
push
mov
call
add
lea
mov
movl
call
test
je
xor
mov
test
jne
test
jne
test
jne
mov
xor
push
xor
mov
mov
call
add
cmp
jne
push
lea
push
push
mov
call
mov
mov
add
mov
mov
push
lea
lea
mov
call
test
je
mov
test
je
testb
mov
mov
jne
cmp
je
call
push
push
push
push
call
mov
cmp
ja
mov
cmpl
jge
mov
test
je
lea
push
call
add
mov
cmpl
jne
mov
mov
push
call
add
test
je
mov
mov
mov
push
push
push
mov
call
lea
push
call
add
test
je
mov
mov
pop
pop
pop
pop
xor
call
add
ret
cmpl
jne
cmpl
jne
cmpl
jne
lea
push
push
call
add
test
je
cmpl
jae
mov
mov
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmpl
mov
jne
mov
mov
mov
call
test
mov
js
mov
jmp
cmpl
je
jmp
push
lea
sub
push
push
push
mov
xor
push
call
test
je
mov
pushl
lea
call
mov
cmp
pop
mov
jp
inc
add
add
lea
mov
inc
push
mov
mov
mov
push
call
test
js
cmpl
je
mov
adc
add
jge
mov
mov
push
call
test
js
lea
mov
lea
mov
lea
mov
lea
mov
lea
xor
push
lea
push
movl
movl
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
lea
push
lea
push
mov
movl
movl
mov
call
mov
pop
pop
lea
push
push
call
testb
jne
testb
jne
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
testb
jne
testb
jne
mov
int
inc
add
call
cmpl
je
pushl
call
cmp
pop
je
mov
push
push
push
mov
call
test
je
mov
movw
pushl
mov
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
xor
lea
add
inc
add
mov
pop
pop
pop
add
leave
ret
mov
push
push
call
jmp
testb
je
jmp
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
pushl
mov
pushl
call
neg
pop
sbb
pop
inc
ret
mov
decl
mov
je
ret
movl
push
movl
call
pop
xor
jmp
push
mov
push
xor
push
push
mov
mov
push
lea
pop
mov
movl
call
test
pop
je
cmpl
jne
pop
pop
mov
pop
ret
call
mov
jmp
pushl
mov
pushl
call
mov
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
push
push
push
call
cmpb
jne
mov
mov
test
mov
jne
mov
mov
dec
sub
not
and
lea
cmp
ja
mov
xor
cmp
je
cmp
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
mov
mov
push
push
lea
push
mov
call
mov
mov
mov
mov
movl
mov
mov
mov
call
pop
pop
pop
mov
pop
ret
push
lea
push
call
add
mov
jmp
push
push
mov
mov
test
jne
mov
push
push
call
test
je
test
je
mov
push
call
pop
pop
ret
mov
mov
test
je
mov
mov
cmp
jae
mov
test
je
pushl
mov
pushl
push
call
ret
mov
jmp
xor
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
xor
push
call
test
je
mov
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
mov
and
jne
cmp
jne
pushl
lea
call
cmp
jne
lea
push
pushl
call
test
pop
pop
jne
cmp
je
pushl
call
cmp
pop
je
mov
mov
call
push
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
jne
pushl
mov
add
mov
call
mov
cmp
je
pushl
lea
call
lea
call
lea
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
push
pushl
call
test
pop
je
push
pushl
call
andl
pop
push
mov
lea
call
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
push
mov
sub
lea
cmpl
push
je
mov
mov
mov
xor
pop
leave
ret
push
mov
push
pushl
mov
call
pop
mov
lea
call
mov
mov
pushl
mov
push
call
test
pop
pop
pop
pop
jne
pushl
pushl
call
mov
pop
pop
jmp
push
mov
test
je
mov
push
mov
call
test
jne
mov
push
mov
call
test
jne
mov
mov
call
test
je
mov
pop
ret
mov
jmp
xor
pop
ret
push
push
push
mov
test
je
mov
mov
call
test
je
mov
call
mov
test
je
mov
mov
call
cmp
jb
mov
test
mov
jne
test
jne
pop
pop
pop
ret
pushl
call
pop
mov
call
mov
mov
jmp
push
mov
and
sub
push
mov
mov
mov
mov
push
xor
cmp
push
mov
je
mov
push
call
pushl
lea
push
mov
mov
mov
mov
push
lea
movb
call
mov
notl
push
pushl
lea
push
push
call
mov
call
mov
mov
mov
mov
mov
push
push
push
push
call
lea
call
pop
pop
xor
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
call
test
jne
andl
lea
push
lea
push
pushl
mov
push
pushl
call
add
mov
xor
mov
test
jne
pushl
mov
pushl
pushl
pushl
push
pushl
pushl
call
add
test
pop
jne
xor
inc
leave
ret
push
lea
call
lea
call
lea
call
push
push
lea
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
mov
test
pop
jne
mov
test
jne
mov
test
jne
lea
call
lea
call
lea
call
lea
call
lea
call
mov
jmp
push
mov
push
push
push
push
mov
call
test
je
andl
push
mov
mov
add
cmp
je
xor
mov
cmp
mov
je
mov
push
push
mov
push
mov
call
test
je
mov
mov
mov
mov
mov
inc
cmp
jne
pop
cmpl
jbe
mov
mov
cmpb
je
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
cmpl
push
push
jle
cmpl
jle
mov
mov
mov
mov
mov
mov
push
lea
mov
mov
movl
call
mov
mov
lea
push
call
mov
mov
mov
add
call
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
mov
call
mov
mov
mov
mov
call
fstpl
mov
fildl
mov
mov
push
fidivl
mov
fstpl
call
fstpl
mov
add
call
test
je
mov
mov
mov
jmp
mov
mov
cmp
je
movzwl
test
je
movswl
call
movzwl
cmp
jne
lea
push
lea
push
mov
push
mov
call
add
test
je
fildl
mov
mov
push
fidivl
mov
push
fstpl
negl
call
add
fcomps
fnstsw
test
jnp
lea
flds
mov
fstps
sub
lea
fmuls
lea
fstpl
fldl
fstpl
fldl
fstpl
fldl
fstpl
push
mov
call
mov
mov
mov
mov
mov
add
mov
mov
push
lea
mov
mov
call
mov
mov
mov
test
jne
test
je
mov
mov
push
call
add
test
mov
jne
cmpl
jle
cmpl
jle
mov
lea
call
test
je
xor
lea
call
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
test
jne
mov
mov
mov
lea
mov
cmp
push
lea
jne
test
jne
xor
test
jne
mov
mov
and
or
jne
xor
test
mov
jne
xor
pop
pop
ret
mov
mov
mov
mov
pop
pop
ret
mov
jmp
push
mov
mov
mov
push
push
mov
push
add
mov
add
decl
inc
cli
push
add
cmp
add
cmp
je
push
call
cmp
pop
je
mov
orl
mov
pushl
mov
call
pushl
mov
push
mov
call
pop
pop
pop
pop
ret
push
mov
push
cmpb
jne
mov
test
movb
jbe
dec
mov
mov
push
lea
mov
push
mov
mov
mov
cmp
jb
mov
test
je
pushl
mov
dec
mov
call
jmp
push
mov
call
mov
pop
mov
movb
pop
leave
ret
movl
jmp
mov
adc
incl
std
xor
push
push
mov
push
lea
push
mov
call
test
je
push
push
push
mov
call
test
jne
cmp
je
call
movl
xor
inc
pop
ret
xor
pop
ret
int3
int3
push
mov
and
sub
push
push
push
push
mov
call
add
test
je
mov
mov
push
push
call
mov
test
mov
je
addl
lea
testb
jne
push
lea
push
call
test
je
andb
cmpl
je
mov
push
lea
push
movl
movl
movl
call
orb
cmp
jne
cmpl
je
mov
cmpl
jne
mov
call
test
je
push
mov
mov
call
test
je
mov
call
test
je
push
call
test
je
cmpl
jne
cmp
je
orb
push
call
test
je
add
pop
jne
cmpw
jne
mov
cmpl
jne
mov
movl
mov
add
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
test
je
addl
cmpl
je
mov
pop
pop
pop
mov
pop
ret
test
jne
mov
test
je
push
lea
call
cmp
je
lea
push
push
mov
call
add
test
je
push
push
lea
push
mov
call
test
mov
jne
lea
push
xor
call
test
je
push
mov
mov
call
test
jne
cmp
jne
push
push
push
mov
call
test
je
mov
push
lea
mov
call
test
jne
jmp
mov
call
test
jne
jmp
mov
call
jmp
push
push
lea
push
mov
call
push
push
lea
push
mov
mov
call
cmpl
jne
push
push
push
mov
mov
call
test
jne
cmp
je
push
mov
mov
call
test
je
mov
jmp
lea
cmp
ja
movzbl
jmp
nop
sbb
push
pop
adc
cmp
add
add
add
int3
int3
int3
push
mov
push
call
test
je
cmpl
jne
mov
cmp
jne
mov
pop
ret
orb
xor
pop
ret
push
mov
sub
push
mov
mov
mov
lea
push
call
mov
test
mov
je
andl
push
push
push
mov
add
call
mov
test
je
andl
mov
mov
lea
lea
mov
add
call
push
push
call
xor
cmp
jne
lea
mov
lea
call
push
call
test
pop
js
mov
pushl
mov
push
call
mov
cmp
mov
mov
je
mov
push
call
mov
cmp
je
cmp
jne
pushl
lea
push
call
lea
call
xor
lea
call
lea
call
pop
mov
pop
pop
leave
ret
mov
call
inc
add
jge
push
mov
call
jmp
xor
inc
add
add
push
mov
push
jge
push
call
test
pop
je
mov
andl
test
movl
and
je
mov
push
call
test
mov
mov
mov
mov
mov
jne
test
mov
je
mov
push
call
cmpl
je
mov
push
pushl
add
mov
push
call
mov
lea
call
mov
pop
pop
pop
ret
mov
push
call
jmp
push
inc
add
xor
and
call
mov
ret
pushl
call
pushl
mov
push
call
ret
push
mov
sub
push
push
push
lea
call
lea
call
xor
xor
mov
mov
test
jle
xor
mov
or
push
push
mov
lea
push
call
test
je
inc
inc
cmp
jle
test
je
mov
xor
push
inc
call
test
jne
mov
call
test
je
cmp
jg
cmpl
jg
jne
lea
push
lea
push
call
mov
mov
dec
jne
cmp
jne
lea
lea
call
cmpl
jne
lea
lea
call
cmpl
jne
lea
lea
call
mov
dec
jne
cmp
jne
lea
lea
call
cmpl
jne
lea
lea
call
cmpl
jne
lea
lea
call
mov
mov
add
movl
sub
mov
movl
mov
mov
lea
lea
push
mov
call
test
je
mov
mov
mov
add
cmp
je
cmpl
jne
mov
call
mov
mov
shr
lea
xor
mov
and
inc
shl
or
add
decl
jne
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
xor
inc
pop
pop
pop
leave
ret
mov
jmp
cmpl
je
cmpl
je
cmpl
jmp
dec
je
dec
jne
jmp
dec
je
dec
jne
jmp
push
mov
and
sub
mov
xor
mov
mov
push
push
mov
push
mov
andl
test
jne
mov
pop
pop
pop
xor
xor
call
mov
pop
ret
mov
mov
push
push
call
test
pop
pop
mov
jne
push
call
pop
andl
lea
mov
mov
push
mov
lea
movl
movl
movb
call
mov
mov
mov
mov
lea
push
mov
mov
movl
call
dec
neg
sbb
inc
mov
je
mov
test
jne
cmpl
mov
je
testb
movl
jne
testb
je
jmp
lea
call
lea
call
jmp
push
mov
sub
mov
push
push
xor
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
cmp
je
lea
push
mov
lea
movl
movl
mov
mov
mov
call
test
jne
pushl
lea
call
mov
cmp
je
mov
pushl
mov
pushl
push
call
mov
mov
push
pushl
pushl
push
call
lea
call
inc
add
call
inc
add
pop
leave
ret
mov
mov
mov
test
je
mov
call
test
je
pushl
mov
push
push
call
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
push
mov
movl
movl
cmpl
je
push
lea
push
call
pushl
call
pop
pop
lea
movl
call
testb
je
push
call
pop
mov
pop
ret
push
mov
sub
push
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jmp
mov
mov
dec
mov
shl
add
add
call
test
jne
test
ja
mov
test
ja
mov
test
ja
mov
call
inc
add
rolb
pop
pop
leave
ret
mov
mov
mov
shl
mov
sub
lea
lea
mov
sub
sub
cmp
jne
decl
mov
mov
lea
mov
call
test
je
cmpl
jbe
jmp
mov
lea
push
mov
or
lock
dec
jne
lea
test
movl
je
push
push
lea
movl
add
aam
mov
push
add
add
inc
sbb
adc
test
js
push
call
test
pop
je
mov
test
je
push
call
test
pop
je
push
call
pop
pop
pop
xor
pop
ret
push
call
pop
jmp
push
mov
push
push
pushl
xor
mov
lea
mov
call
cmp
je
testb
push
mov
je
mov
mov
push
push
push
pushl
push
call
pop
lea
call
xor
pop
leave
ret
push
mov
testb
je
push
push
push
pushl
pushl
push
lea
push
call
mov
add
cmpb
je
xor
push
inc
call
mov
test
je
mov
test
jbe
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
xor
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
test
push
mov
je
mov
mov
push
call
mov
test
mov
je
mov
push
mov
call
mov
test
mov
je
mov
mov
push
call
mov
cmpl
mov
je
mov
cmpl
je
cmpl
push
mov
je
cmpl
je
push
call
add
test
je
mov
mov
call
test
mov
je
add
mov
mov
mov
mov
add
push
push
push
call
mov
mov
mov
mov
add
xor
test
je
cmp
je
lea
cmp
je
mov
mov
cmp
jne
jmp
mov
mov
add
mov
test
mov
jne
test
je
add
mov
test
mov
je
addl
cmpl
je
cmp
je
cmpl
jne
mov
mov
cmp
jge
cmpl
jne
movl
mov
cmp
jge
cmpl
je
mov
mov
xor
mov
mov
call
test
mov
jne
mov
mov
mov
mov
mov
mov
test
je
lea
cmpl
je
cmpl
je
cmpl
jne
mov
call
mov
push
call
mov
mov
mov
addl
cmpl
je
test
je
mov
mov
push
call
test
je
mov
mov
push
call
lea
call
pop
pop
pop
xor
pop
add
ret
push
call
add
test
je
mov
call
mov
mov
test
mov
je
add
mov
test
mov
jne
test
mov
je
add
mov
test
mov
jne
add
mov
test
mov
je
call
jmp
xor
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
mov
push
mov
xor
cmp
push
mov
mov
lea
push
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
call
lea
push
lea
push
mov
movl
call
add
push
lea
call
lea
push
lea
mov
mov
call
mov
mov
add
cmp
je
mov
lea
push
push
push
lea
push
push
mov
call
mov
lea
call
mov
test
jne
test
jne
test
js
cmp
mov
lea
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
mov
call
mov
lea
push
lea
mov
push
mov
call
add
push
lea
call
lea
push
lea
mov
mov
call
mov
mov
add
cmp
je
mov
lea
push
mov
push
push
lea
push
push
mov
call
mov
lea
call
mov
test
jne
test
jne
test
js
mov
lea
push
mov
mov
mov
push
push
call
cmp
je
mov
mov
test
inc
add
sbb
call
push
mov
add
call
mov
cmp
mov
je
mov
mov
mov
mov
mov
push
lea
push
push
mov
call
mov
push
push
push
push
xor
call
add
test
js
cmpw
jne
mov
mov
push
push
push
call
mov
lea
mov
mov
add
add
lea
mov
movl
movl
mov
mov
push
push
mov
call
push
mov
call
test
je
mov
lea
push
push
call
mov
add
test
je
mov
add
push
call
add
test
je
lea
call
mov
cmp
je
mov
mov
push
call
mov
cmp
je
mov
mov
push
call
mov
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
push
mov
call
add
test
jne
mov
push
call
add
jmp
mov
add
call
mov
jmp
push
mov
push
andl
push
push
push
lea
mov
call
mov
pushl
mov
push
lea
call
cmpl
pop
pop
jne
xor
lea
call
pop
mov
pop
leave
ret
push
pushl
call
pop
call
mov
cmp
jb
push
push
push
pushl
mov
call
pushl
xor
add
adc
mov
mov
call
pop
mov
pop
ret
mov
test
je
mov
mov
mov
mov
mov
xor
ret
push
mov
sub
mov
andl
push
push
mov
lea
call
mov
test
je
mov
lea
push
lea
push
call
test
js
mov
test
je
mov
test
je
mov
mov
mov
mov
mov
mov
lea
call
pop
leave
ret
mov
push
mov
lea
call
mov
mov
push
add
push
push
call
and
neg
sbb
and
pop
ret
push
mov
push
push
push
lea
cmpl
movl
movl
jne
lea
call
mov
call
lea
call
pop
leave
ret
sub
push
mov
mov
push
push
push
xor
or
mov
lea
jne
mov
mov
lea
push
add
push
lea
movl
movl
mov
call
mov
test
jne
test
jne
mov
push
lea
call
mov
cmp
je
push
push
lea
mov
push
lea
movl
movl
mov
movl
mov
call
mov
mov
push
lea
push
push
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
test
js
mov
mov
mov
mov
push
push
mov
lea
movl
mov
mov
mov
mov
push
push
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
mov
push
lea
movl
mov
mov
mov
push
push
mov
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
lea
movl
mov
mov
mov
push
push
mov
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
mov
push
lea
movl
movl
mov
mov
push
push
mov
call
mov
mov
test
jne
test
jne
test
js
mov
test
mov
je
mov
push
mov
call
mov
mov
mov
push
call
test
js
mov
push
push
push
push
call
mov
test
je
mov
mov
push
call
lea
call
lea
call
xor
pop
pop
pop
pop
add
ret
push
mov
and
sub
push
push
push
xor
push
lea
mov
call
lea
mov
call
mov
pushl
neg
lea
sbb
call
mov
cmp
mov
je
add
lea
push
push
push
lea
push
push
call
mov
lea
call
test
js
movzwl
test
je
push
lea
mov
call
add
mov
call
mov
pushl
neg
lea
sbb
call
mov
cmp
je
mov
lea
push
push
push
lea
push
push
call
mov
lea
call
test
js
pushl
pushl
call
cmp
jne
lea
call
mov
cmp
jne
inc
add
fimuls
add
pop
pop
mov
pop
ret
mov
movl
xor
ret
int3
int3
int3
int3
push
mov
lea
mov
or
lock
dec
jne
movl
movl
movl
mov
test
movl
jne
push
push
mov
lea
push
mov
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
test
mov
jne
test
jne
mov
test
jne
mov
test
jne
push
call
add
pop
pop
xor
pop
pop
ret
push
mov
push
pushl
andl
mov
lea
call
pushl
andl
mov
lea
call
cmpl
je
mov
test
je
pushl
mov
call
mov
mov
lea
call
lea
call
xor
leave
ret
jmp
int3
push
mov
and
sub
push
push
push
mov
mov
test
je
mov
mov
mov
mov
xor
and
or
mov
mov
jne
mov
and
xor
or
je
mov
mov
mov
push
mov
call
test
jne
mov
mov
mov
xor
mov
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
mov
mov
je
mov
mov
push
push
lea
push
push
push
call
mov
cmp
jne
mov
andl
pop
pop
pop
mov
pop
ret
mov
mov
mov
push
add
push
mov
call
test
je
jmp
mov
cmp
je
mov
call
test
je
mov
mov
push
mov
call
mov
and
add
or
je
cmpl
jne
mov
call
test
jne
mov
mov
mov
mov
mov
movl
movl
movl
push
call
add
jmp
mov
and
or
je
mov
xor
jmp
int3
push
mov
push
mov
mov
mov
push
mov
sub
test
jne
mov
mov
mov
add
push
push
push
call
add
mov
mov
add
push
push
lea
push
call
add
pop
pop
pop
ret
mov
mov
cmp
mov
lea
ja
mov
test
jne
mov
mov
cmp
mov
lea
ja
xor
ret
mov
jmp
push
mov
mov
test
jne
mov
mov
mov
mov
add
pop
ret
push
mov
push
mov
mov
mov
lea
push
push
call
test
js
mov
mov
cmp
jge
inc
mov
cmp
jge
xor
pop
pop
ret
mov
jmp
mov
mov
cmp
jae
mov
push
mov
test
je
mov
push
call
mov
pop
ret
push
mov
push
mov
mov
mov
lea
push
push
call
test
js
mov
test
jl
cmp
jge
mov
mov
push
push
call
mov
mov
xor
pop
pop
ret
push
mov
push
mov
mov
mov
lea
push
push
call
test
js
mov
test
jl
cmp
jge
xor
inc
pop
pop
ret
xor
jmp
push
mov
mov
test
jbe
mov
dec
mov
lea
cmpl
je
mov
mov
push
call
mov
mov
andl
mov
test
jne
xor
pop
ret
orl
orl
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
push
push
push
je
mov
push
movl
call
mov
add
cmpl
lea
jne
push
lea
call
mov
push
call
mov
mov
lea
lea
lea
add
cmp
jb
mov
lea
lea
lea
cmp
jne
push
push
push
lea
push
mov
call
mov
cmp
jne
pop
pop
pop
pop
add
ret
mov
jmp
lea
mov
mov
call
add
cmp
jb
mov
jmp
lea
mov
lea
mov
test
mov
jne
test
jne
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
mov
call
add
test
je
add
add
cmp
mov
jne
jmp
push
mov
lea
call
lea
call
lea
call
testb
movl
movl
je
push
call
pop
mov
pop
ret
push
mov
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
mov
push
push
mov
movl
movl
add
js
mov
add
add
jne
mov
test
je
push
call
test
pop
je
andl
mov
test
jne
mov
test
jne
mov
test
mov
jne
test
jne
lea
call
mov
test
mov
jne
test
jne
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
cmp
jge
xor
cmp
jne
testb
jne
lea
mov
mov
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
mov
movb
cmpb
jne
cmpb
jne
mov
mov
lea
push
push
mov
call
test
js
mov
lea
push
mov
push
push
call
add
test
jne
lea
mov
mov
mov
push
push
mov
call
cmp
jne
lea
push
mov
call
call
push
push
push
push
call
orl
mov
mov
test
jne
test
jne
testb
jne
push
lea
movl
call
mov
mov
lea
push
call
add
cmpl
je
push
call
add
test
je
mov
call
mov
test
je
mov
mov
push
call
mov
test
lea
mov
jne
cmpl
je
mov
and
jne
test
jne
push
mov
call
push
lea
movl
call
mov
mov
call
mov
lea
push
lea
push
movzbl
push
push
mov
shr
and
push
mov
push
lea
push
push
mov
push
push
call
test
js
mov
mov
add
test
movl
jne
push
push
push
push
push
push
push
call
add
lea
mov
call
lea
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
testb
je
jmp
int3
int3
int3
int3
sub
mov
xor
mov
add
push
mov
push
push
mov
mov
mov
mov
mov
mov
xor
cmp
mov
mov
je
cmp
jne
movl
xor
test
js
mov
mov
push
lea
lea
movl
movl
mov
mov
mov
call
cmp
je
push
lea
push
lea
push
mov
mov
movl
movl
mov
mov
call
xor
jmp
mov
jmp
lea
movzwl
push
call
add
test
jne
cmp
jae
mov
nop
movzwl
cmp
je
cmp
je
cmp
je
cmp
je
add
cmp
jb
lea
mov
xor
mov
mov
sub
mov
lea
lea
mov
movl
movl
mov
call
add
push
mov
mov
mov
call
test
jne
mov
cmpw
je
mov
push
mov
call
add
xor
push
lea
mov
call
add
lea
push
push
mov
mov
movl
movl
mov
movb
or
add
lea
push
lea
push
call
mov
mov
add
test
jne
test
jne
test
js
mov
cmp
je
cmp
je
mov
mov
push
push
push
mov
call
lea
call
mov
test
jne
test
jne
nop
mov
xor
jmp
lea
nop
mov
cmp
jb
mov
push
mov
lea
mov
call
lea
call
lea
push
mov
mov
call
mov
mov
mov
mov
push
push
mov
push
push
mov
push
push
push
call
test
js
cmp
je
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
jne
cmp
lea
jne
mov
push
mov
call
mov
push
lea
mov
call
lea
call
cmp
lea
je
lea
call
mov
test
je
mov
add
push
call
add
test
je
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
push
push
push
mov
push
lea
cmpl
movl
je
mov
test
je
mov
mov
lea
mov
push
push
push
call
add
cmpl
movl
je
push
call
pop
mov
test
jne
testb
je
push
call
pop
pop
mov
pop
leave
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
je
cmp
je
test
push
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
sub
mov
xor
mov
mov
push
push
mov
mov
push
mov
mov
xor
lea
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
test
jne
mov
pushl
mov
push
call
test
mov
jne
push
lea
mov
call
pushl
lea
call
test
pop
mov
je
pushl
call
mov
pop
mov
mov
mov
lea
call
lea
call
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
mov
lea
push
pushl
push
call
test
mov
jne
testb
je
lea
mov
mov
and
inc
add
push
mov
movl
movl
movb
mov
push
call
test
mov
jne
push
push
lea
push
or
mov
call
push
lea
mov
call
push
push
push
lea
push
lea
push
call
add
test
mov
jne
push
call
cmp
pop
je
pushl
mov
mov
mov
call
mov
mov
xor
mov
cmp
je
lea
call
mov
pushl
mov
push
call
test
mov
jne
lea
call
pushl
pushl
call
pop
pop
jmp
push
mov
mov
sub
push
lea
push
push
call
mov
test
jne
push
call
test
jne
and
push
push
lea
call
mov
lea
push
push
call
test
jne
lea
push
push
pushl
call
add
test
jne
xor
cmp
jne
lea
push
push
pushl
call
add
test
jne
cmp
jne
lea
push
push
pushl
call
add
test
jne
cmp
jne
lea
push
push
pushl
call
add
test
jne
cmp
jne
add
xor
adc
ret
mov
je
lea
push
push
push
add
push
call
mov
mov
and
jne
cmpl
jne
pushl
lea
call
cmp
je
cmp
je
cmpl
jne
mov
mov
lea
push
pushl
pushl
push
call
test
jne
cmpl
jne
lea
call
lea
call
xor
pop
pop
leave
ret
xor
lea
call
mov
jmp
push
movzbl
push
push
movzbl
push
pushl
mov
call
cmpb
mov
jne
xor
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
mov
mov
test
movl
movl
movl
movl
jne
mov
cmpl
lea
jbe
xor
movl
mov
mov
mov
test
je
call
push
call
add
mov
addl
add
cmp
jb
testb
jne
mov
test
jne
cmpl
jne
mov
mov
subl
sub
mov
lea
sbbl
test
jne
mov
test
jne
mov
test
mov
je
lea
push
call
add
test
jne
push
call
add
mov
test
mov
add
inc
add
push
call
add
test
jne
push
call
add
mov
mov
push
push
push
push
call
mov
cmp
jne
mov
lea
call
lea
call
mov
mov
push
push
push
push
call
mov
cmp
jne
mov
test
movl
jne
add
test
je
mov
call
push
call
add
pop
pop
pop
pop
pop
ret
mov
subl
mov
sub
sbbl
jmp
mov
test
je
mov
mov
mov
mov
movl
movl
jmp
call
push
call
add
jmp
push
mov
sub
push
push
push
mov
lea
push
call
lea
call
fldl
call
fldl
mov
call
fldl
mov
call
fldl
mov
call
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
pop
pop
pop
leave
ret
mov
mov
mov
mov
mov
ret
andl
mov
dec
mov
movl
mov
mov
andw
ret
push
mov
sub
push
push
mov
push
xor
mov
push
lea
lea
mov
mov
mov
mov
call
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
cmp
je
mov
lea
push
pushl
mov
mov
push
call
cmp
jne
lea
call
push
call
cmp
pop
je
pushl
mov
mov
mov
mov
call
mov
xor
cmp
mov
je
mov
push
call
cmp
je
push
lea
lea
mov
mov
mov
mov
call
cmp
mov
je
push
lea
mov
call
mov
mov
lea
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
leave
ret
test
je
mov
push
call
mov
push
pushl
call
test
jne
ret
mov
push
call
xor
inc
jmp
mov
decl
mov
jne
xor
inc
mov
mov
push
call
xor
ret
push
mov
push
andl
push
push
mov
push
call
test
je
andl
push
lea
call
mov
mov
lea
push
pushl
push
call
mov
test
js
mov
push
call
mov
test
add
jecxz
add
add
in
add
add
jmp
add
addb
add
lahf
add
add
jecxz
push
push
add
out
mov
add
mov
lret
bnd
add
add
xchg
jle
jns
mov
add
push
push
push
lea
push
call
aad
aam
add
int
add
pop
adc
xchg
add
add
sahf
xchg
add
into
add
mov
leave
arpl
js
add
addr16
mov
lds
sbb
in
add
clc
sahf
add
testb
pusha
add
add
cli
add
ljmp
aam
mov
lea
pop
movl
popl
push
push
push
push
push
push
push
lea
push
push
push
call
xchg
cli
mov
imul
mov
add
add
add
mov
add
pop
loope
ror
add
push
add
fistl
leave
cmpsb
add
mov
add
cmpsl
push
mov
aad
rcll
add
cli
fiaddl
add
add
fnstcw
xchg
imul
lahf
add
add
mov
add
add
add
pop
push
push
push
call
add
test
test
lods
jbe
add
sar
mov
add
fs
push
add
lea
mov
test
fsub
mov
add
add
add
out
mov
scas
mov
mov
jmp
stos
add
add
fisubl
pusha
push
mov
jl
data16
leave
xchg
pop
add
add
push
xchg
ret
popl
in
scas
leave
mov
lea
pop
push
push
call
push
push
push
call
add
add
fildl
ljmp
sub
add
in
cltd
add
add
add
push
into
testl
stos
pop
mov
add
add
mov
jne
loope
lea
out
add
add
add
imul
lcallw
mov
xchg
bnd
pop
pusha
int3
add
jo
add
cwtl
add
pop
call
push
push
push
push
call
jae
mov
add
rcll
mov
mov
add
add
add
add
movsl
insb
xchg
add
add
push
ja
mov
mov
xchg
mov
add
jbe
mov
imul
mov
push
mov
loope
loop
push
sarl
add
add
jbe
mov
mov
jge
add
pop
add
pop
call
push
push
call
add
cmpsb
mov
testb
push
pop
testl
lds
shr
mov
loop
add
pusha
add
add
jl
out
push
fwait
add
clc
fdivrs
add
pop
add
push
pop
mov
mov
add
fcmovb
add
xchg
sti
push
mov
push
filds
mov
add
add
add
fldt
xchg
cli
in
push
or
jp
add
push
lea
push
push
push
call
out
add
int
faddl
shlb
cmpsb
add
jmp
pop
add
add
gs
add
fadds
add
add
jbe
mov
ret
mov
lret
test
fstpt
lcall
add
add
add
jp
int3
lea
pop
ret
mov
mov
push
lea
push
push
lea
push
lea
push
push
lea
push
call
add
add
test
add
jl
add
push
mov
xchg
mov
add
jl
jecxz
mov
mov
mov
add
jne
lea
add
scas
mov
add
jno
sarl
add
jns
enter
mov
lea
pop
add
push
push
lea
push
call
testb
adcl
add
add
ret
add
rol
add
push
mov
roll
mov
out
cld
rcl
mov
mov
je
lea
add
fsubr
add
add
add
mov
out
add
add
adcl
ljmp
out
add
into
mov
xchg
in
add
lea
pop
add
push
lea
push
call
add
ficoms
add
add
mov
add
scas
fiadds
fldl
imul
in
add
add
imul
mov
out
xchg
mov
add
iret
notl
fsubl
push
add
ja
outsl
lea
pop
rolb
add
add
clc
add
mov
imul
add
lock
je
cli
cmc
add
add
cld
lea
pop
add
mov
push
push
push
push
push
push
push
lea
push
push
push
push
call
out
cli
mov
add
jne
push
add
loop
mov
add
sti
out
xchg
add
add
add
add
add
add
imul
std
std
add
fsubp
in
cltd
jge
xchg
pop
mov
xchg
fucomp
mov
add
mov
jne
add
jns
aam
lds
add
add
lods
xchg
add
mov
lea
pop
xor
push
push
push
call
add
add
bound
mov
xchg
add
xchg
xchg
add
cltd
test
xchg
add
mov
mov
add
add
jmp
add
pop
imul
popa
iret
mov
add
std
rcrb
add
movsl
add
fldl
add
icebp
imul
jne
int
mov
pusha
or
add
push
push
lea
push
push
call
arpl
add
mov
add
mov
pop
mov
add
mov
lea
stos
add
aam
clc
out
incb
sahf
fsubrp
add
lods
test
add
add
mov
push
add
rcrl
jnp
add
add
pop
add
jle
add
cmpsl
ret
mov
add
lea
pop
add
call
mov
xor
push
push
push
or
inc
add
not
dec
sub
sub
pop
shr
shr
add
shr
pop
push
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
add
lods
jne
pop
add
add
shlb
add
add
add
pop
add
popf
ja
add
add
add
icebp
cmc
pop
add
mov
add
add
pop
cmc
add
cld
mov
add
jecxz
out
jno
add
mov
add
push
mov
fwait
lcall
int3
lea
pop
pushl
push
push
push
push
call
jb
scas
aad
mov
add
add
mov
jecxz
mov
add
add
cmpsb
lds
lock
add
xchg
add
ljmp
shl
add
xchg
push
mov
int
movsl
add
add
add
lods
push
add
out
add
jne
add
add
mov
rcr
sub
cmp
mov
add
aam
imul
movsl
cli
mov
icebp
call
lea
pop
call
mov
push
lea
push
push
push
push
push
push
lea
push
call
add
rolb
add
mov
loop
fildll
add
add
add
xchg
add
add
mov
scas
mov
add
clc
add
lods
imul
aad
std
add
cli
add
out
add
add
mov
cwtl
jl
mov
add
fildl
out
add
mov
jo
pop
add
add
fisubs
in
push
les
pop
movl
lea
push
push
push
lea
push
push
push
push
call
pop
sahf
imul
mov
push
jbe
add
jno
in
add
mov
in
arpl
imul
pusha
pop
mov
fadds
flds
fiaddl
mov
xchg
add
mov
add
push
mov
out
mov
jmp
ret
addl
add
shll
add
add
jo
int3
lea
pop
pushl
pushl
call
push
push
push
push
push
push
lea
push
call
testb
loope
jp
mov
add
add
xchg
cli
push
fiadds
add
loop
xlat
add
mov
add
test
push
cmpsb
push
addr16
mov
out
add
pop
pop
out
add
cli
add
nop
add
leave
mov
add
gs
add
add
movsb
xchg
add
push
filds
add
jl
in
add
int3
mov
add
add
pop
pushl
pushl
push
lea
push
push
push
push
lea
push
lea
push
push
call
xchg
add
cltd
mov
fadds
pop
xchg
add
mov
js
mov
add
push
add
addl
jne
mov
repnz
xchg
leave
mov
cld
addb
add
add
add
mov
pop
mov
add
xchg
loope
mov
movsl
pop
add
push
xchg
pusha
repnz
out
mov
add
mov
js
mov
add
je
add
add
pop
call
push
push
sub
add
add
push
and
add
dec
xor
sub
xor
pop
pop
pushl
push
push
push
lea
push
call
xchg
add
push
add
add
xchg
add
mov
call
fsubp
pop
xchg
shlb
faddl
push
lods
loopne
add
int
clc
add
add
add
faddl
sti
add
push
add
lods
pusha
popa
ja
ljmp
add
jle
add
bound
add
add
add
mov
jp
add
in
nop
int
hlt
lea
pop
call
push
push
push
ror
sub
xor
ror
push
or
not
add
sub
add
inc
sub
shr
pop
add
pop
push
push
lea
push
push
push
push
call
imul
push
mov
addb
add
popf
clc
add
loope
add
hlt
add
popf
add
push
lods
movsb
push
int3
add
mov
add
stc
pop
mov
bound
bound
add
jae
jbe
add
mov
movsb
add
add
imul
js
add
add
add
add
testl
lea
pop
push
push
lea
push
push
push
push
call
add
hlt
add
ret
shrb
add
mov
add
lret
add
add
iret
aam
shl
add
jbe
mov
rolb
mov
add
shr
nop
push
add
mov
pop
jns
add
mov
add
sti
mov
mul
add
shll
add
add
pop
push
call
mov
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
add
jecxz
addl
add
cwtl
pushf
xchg
jno
into
out
rol
add
ret
jae
jmp
test
sti
add
add
add
add
add
lea
testb
add
add
addl
xchg
pushf
data16
sti
add
into
add
cmc
add
add
cld
mov
add
add
orl
insb
add
jge
pop
xchg
rolb
lods
add
mov
outsl
leave
fnstcw
mov
lea
pop
push
push
push
push
lea
push
push
push
push
push
call
add
add
add
leave
jnp
rolb
add
add
push
movsb
std
enter
mov
add
add
into
xorb
out
mov
test
mov
jbe
add
mov
add
add
add
rcr
popl
add
jecxz
xchg
cmpsl
filds
movsb
add
loopne
xchg
scas
subb
fwait
add
jge
mov
lea
pop
push
mov
add
push
lea
push
push
push
push
push
lea
push
push
call
mov
arpl
rcrb
add
add
or
add
add
nop
cld
push
in
add
add
pop
mov
bound
xlat
cwtl
add
stos
movsb
ja
hlt
not
into
add
jb
add
stos
in
add
add
push
add
add
add
stos
add
add
mov
pop
aam
add
push
jne
imul
add
add
push
push
push
call
add
aad
push
out
add
add
add
data16
add
add
cmpb
jo
add
mov
mov
add
add
cmpsl
mov
add
cmc
test
jmp
test
add
test
sarl
in
mov
add
filds
mov
add
mov
loopne
gs
fwait
pop
add
jmp
lea
mov
lea
pop
mov
xor
push
push
push
push
lea
push
lea
push
push
call
add
cli
mov
mov
add
push
add
add
int
add
loope
add
add
fiaddl
js
push
add
add
mov
add
add
scas
fldl
add
mov
push
add
add
addl
scas
add
fsubrl
add
push
add
enter
jnp
sarb
add
push
add
add
mov
cld
mov
add
pop
add
push
push
push
push
push
push
lea
push
call
add
arpl
outsl
jmp
add
xchg
rcr
test
add
add
add
ja
jo
fwait
bound
add
test
add
pop
add
add
add
out
add
in
xchg
pushf
outsl
mov
add
cmpsl
out
add
add
jnp
pop
mov
movsl
int3
add
sub
ja
xchg
aad
test
xchg
add
lcall
lea
pop
push
mov
push
push
push
push
push
push
push
push
call
fnsave
lret
int
cmc
mov
pop
add
and
lock
in
add
add
pop
mov
cmc
mov
data16
loope
pusha
out
add
shlb
push
cwtl
pop
les
add
add
sbbl
pop
test
nop
int3
jecxz
idivb
push
in
jbe
insb
xchg
pop
std
repnz
jae
stos
repnz
pop
xor
push
push
lea
push
push
call
add
add
frstor
sahf
int3
jb
xchg
add
add
orb
jmp
repnz
popa
add
add
add
jmp
mov
mov
add
add
add
add
out
arpl
add
fadds
lahf
add
jnp
add
mov
addr16
mov
out
gs
fcomps
xchg
lock
lea
pop
add
push
lea
push
push
push
push
push
call
add
jns
pop
pop
add
add
loopne
pop
outsl
add
loopne
xchg
lret
xchg
add
addr16
jb
data16
roll
movsb
pop
mov
add
xchg
push
add
in
lods
xchg
add
movsl
fdivl
push
arpl
in
movsl
pop
mov
jp
cmpsb
fmull
data16
add
testb
cmc
addl
add
pop
add
pop
push
push
push
push
push
push
push
push
push
call
pop
add
jae
add
add
add
add
add
jns
mov
push
popl
add
int
add
jle
stos
push
shll
ret
out
mov
xchg
xlat
out
fbld
out
add
pop
add
fdivrp
add
loopne
aad
add
add
out
fnstcw
mov
push
mov
add
data16
mov
push
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
add
imul
lods
scas
loop
add
cli
mov
add
add
add
add
jae
pop
add
add
add
aam
frstor
xlat
aad
iret
shll
cld
add
out
out
mov
pop
bound
xchg
mov
bound
xchg
lret
sti
out
lret
add
add
add
add
cmc
mov
add
add
les
or
push
push
push
push
push
push
call
jecxz
add
xlat
pop
cmpsb
add
icebp
bound
xchg
add
add
push
xchg
ret
jne
icebp
pop
stc
loopne
add
ljmp
add
xchg
mov
je
out
mov
add
xchg
gs
add
mov
add
add
gs
lahf
addr16
mov
testb
hlt
std
add
ror
lret
add
out
lret
mov
add
xchg
jle
arpl
add
pop
add
push
push
push
push
push
push
push
push
push
push
call
add
add
push
lock
add
cwtl
leave
add
mov
int3
shr
mov
in
add
add
out
add
enter
add
je
bound
add
mov
hlt
aad
jnp
mov
rcrl
add
mov
addl
icebp
push
add
cli
mov
stc
les
cmpl
ljmp
add
add
pop
mov
xor
sub
push
push
push
push
push
lea
push
push
push
push
call
add
je
cli
loopne
add
add
add
movsl
push
arpl
out
add
ret
mov
les
add
ja
jo
mov
add
leave
add
fs
xchg
push
xchg
mov
push
jo
aam
add
in
outsl
add
cmpb
mov
outsl
add
ja
imul
hlt
lea
pop
pop
push
push
push
push
push
call
fs
jmp
mov
fst
xchg
add
addr16
out
add
sarl
gs
mov
icebp
jbe
addb
roll
bound
lods
add
fucomi
fstps
add
add
loop
sahf
imul
iret
jb
cwtl
add
fildl
lahf
jmp
add
add
add
jne
add
lock
mov
lcall
lea
pop
rep
push
lea
push
push
lea
push
push
lea
push
push
call
cmpsl
mov
add
movsl
int3
add
add
add
insb
movl
mov
testl
add
in
push
rorb
test
add
fadds
push
add
jmp
add
add
add
add
add
add
lcall
jmp
mov
push
add
add
add
add
ljmp
stos
add
add
mov
lea
pop
pop
push
push
push
lea
push
push
push
call
js
pop
add
add
data16
ljmp
add
add
push
add
add
divb
add
xchg
add
add
mov
add
loope
add
in
test
add
leave
xchg
mov
add
js
out
pop
lea
add
std
add
vfnmadd213pd
pop
mov
push
push
push
lea
push
push
call
cwtl
loop
add
xchg
jbe
push
add
lret
popa
mov
fst
mov
add
add
enter
add
ret
pop
movsb
mov
fadds
lods
add
fnstenv
arpl
jp
movsl
fiaddl
outsl
pop
fnclex
jno
cli
add
add
push
cltd
add
mov
jnp
int3
mov
imul
pop
pusha
mov
add
arpl
add
push
push
push
push
push
call
out
outsl
sar
add
aam
scas
jnp
out
aam
mov
int
addb
add
jge
add
mov
mov
xchg
xchg
add
push
add
fs
cmpsl
fiaddl
fsubs
cwtl
add
mov
add
cmpsb
add
jne
add
jbe
mov
icebp
roll
ret
addr16
mov
mov
pusha
adc
add
push
push
push
lea
push
lea
push
push
push
push
push
push
call
push
add
testl
leave
jo
xchg
pop
jbe
pop
push
ljmp
mov
loope
add
add
add
add
add
add
push
add
out
scas
add
pop
rolb
cmpsl
aam
pop
add
xchg
out
add
push
add
xchg
fldt
add
add
add
mov
lea
pop
add
push
push
push
lea
push
push
push
call
add
mov
out
add
add
add
test
pop
mov
add
add
add
add
add
add
lock
add
add
lock
xchg
arpl
out
imul
movsb
int3
fcmovnbe
cmpsl
mov
add
push
mov
add
cmpsl
add
add
stos
mov
fdiv
mov
add
cwtl
jbe
out
mov
jbe
add
add
pop
mov
push
push
lea
push
push
push
push
push
lea
push
call
mov
add
cld
jmp
add
cmc
mov
into
pop
out
add
mov
imul
icebp
xchg
add
add
mov
mov
cmpsb
xchg
in
add
test
iret
testl
arpl
add
popa
movl
lds
mov
icebp
add
imul
mov
popa
mov
lea
pop
xor
push
lea
push
push
push
lea
push
push
push
push
call
add
je
add
stc
push
add
cwtl
stc
add
mov
add
icebp
add
leave
pop
imul
fsubrp
mov
int
add
add
add
add
fucomi
test
sarb
testl
add
add
loop
add
test
add
mov
add
add
add
push
xchg
rolb
add
pop
add
push
push
call
clc
mov
add
add
add
xchg
test
add
add
in
test
push
jbe
add
add
jecxz
add
je
add
lcall
add
mov
add
fwait
push
add
sahf
add
add
fldl
lret
pop
ljmp
aam
push
add
add
add
out
mov
mov
rcrb
orb
mov
xor
push
push
push
push
call
add
fsubp
lock
mov
add
movb
iretw
add
leave
mov
add
lahf
add
mov
mov
add
add
add
add
mov
jecxz
mov
jno
add
mov
cmpsl
into
subl
into
xchg
jle
pop
add
add
add
pop
mov
xor
add
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
in
jmp
out
in
movsb
mov
fcomi
sahf
fiadds
cmc
rolb
add
lods
pop
lods
out
cltd
lret
movsb
mov
add
fsubl
testl
cli
add
imul
add
add
add
add
mov
xchg
add
test
js
add
imul
jl
out
vpcmov
add
mov
push
push
inc
dec
push
and
add
shl
sub
shl
shl
sub
not
pop
add
pop
push
lea
push
push
push
push
push
push
push
push
push
call
mov
add
je
arpl
aam
outsl
add
add
addb
popf
add
xchg
add
enter
jae
add
bound
test
add
mov
add
add
add
lods
add
repnz
lret
mov
add
int3
add
add
xchg
push
xchg
add
lcall
add
add
add
in
sahf
jge
je
icebp
in
add
add
testl
sub
jne
push
push
push
call
sti
jnp
add
data16
scas
iret
add
jl
add
add
push
loop
add
add
add
stc
fsubrs
add
add
add
add
add
loopne
mov
add
add
jp
push
mov
mov
in
add
jp
add
int3
lea
pop
call
push
push
push
ror
dec
ror
sub
push
push
pop
add
sub
sub
sub
add
add
pop
sub
shr
shr
pop
push
push
call
add
mov
add
roll
leave
lahf
jb
outsl
fxch
add
gs
stos
popa
call
lcall
add
add
int
add
mov
loopew
addb
cmp
add
pop
pop
sarb
add
in
add
add
add
add
add
add
in
mov
lea
pop
push
push
ror
dec
sub
pop
push
push
pop
call
push
lea
push
push
push
call
push
add
add
add
fiaddl
add
jmp
stc
rolb
add
aam
leave
add
jno
add
stos
fcomip
add
out
mov
shrl
add
movsb
fldl
add
add
add
add
roll
pop
mov
add
mov
fwait
add
insb
add
add
add
jb
shlb
add
xlat
add
add
loope
jno
add
jae
add
pop
mov
push
push
push
lea
push
push
lea
push
call
push
push
loopne
push
add
movsb
add
popa
add
fisubrs
in
gs
mov
pop
add
mov
ret
xchg
lods
mov
out
add
js
add
hlt
push
add
incb
in
add
add
data16
add
add
lds
add
add
in
cld
lea
pop
push
push
push
xor
not
pop
mov
add
push
dec
add
pop
add
add
mov
push
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
mov
add
add
in
add
cld
add
arpl
xlat
mov
sahf
lods
mov
out
push
fldl
mul
add
iret
pop
mov
shlb
out
jnp
add
add
iret
outsl
add
mov
jbe
pop
add
add
mov
push
xchg
out
loope
jno
hlt
push
pop
aad
add
iret
push
pop
add
mov
lea
pop
xor
push
push
push
lea
push
push
push
lea
push
push
push
push
call
xchg
jge
add
nop
add
push
mov
add
add
popf
add
fwait
hlt
test
add
faddl
imul
std
jecxz
add
cmc
add
add
add
add
add
add
add
add
push
int
testl
hlt
pop
add
add
les
les
add
push
lea
push
push
push
lea
push
push
push
call
add
add
add
mov
les
push
add
iret
ja
roll
add
add
mov
add
add
jmp
add
pushf
add
add
add
jb
scas
add
pushf
mov
add
gs
add
in
roll
mov
imul
add
add
add
mov
sbb
add
push
lea
sub
add
pop
push
push
lea
push
push
push
push
call
fwait
mov
jae
add
clc
mov
bound
add
add
add
jnp
loopne
add
nop
addr16
add
push
add
add
addr16
add
fildl
push
iret
js
jle
aad
imulb
cld
mov
in
xchg
pop
fwait
mov
pushf
push
add
iret
add
add
in
add
pusha
add
add
outsl
outsl
fcmovu
push
add
leave
frstor
int3
lea
pop
mov
push
push
push
push
push
push
lea
push
lea
push
push
push
call
testl
add
outsl
jo
lret
hlt
sti
fwait
push
add
add
sbbb
in
sti
push
sahf
add
roll
add
xorl
fildl
add
outsl
add
add
mov
addb
add
add
jno
fcompl
loopne
mov
jmp
sahf
add
pop
xor
push
lea
push
lea
push
push
push
lea
push
push
lea
push
call
mov
ja
mov
ljmp
jno
rcrl
test
int3
add
sbb
test
mov
divb
roll
pop
jmp
add
std
xchg
mov
cli
shrb
add
xlat
jbe
ret
add
pusha
mov
add
push
add
xchg
fsubl
add
cmpsb
jge
jno
ret
arpl
jno
int3
xlat
xchg
add
addl
arpl
pop
add
add
push
lea
push
lea
push
lea
push
push
push
call
lea
rcr
fadd
movb
imul
jbe
mov
jno
mov
jge
add
add
add
cli
add
add
add
cmp
add
scas
add
push
fucom
pop
mov
addl
rolb
loope
add
add
loop
add
lods
sti
add
mov
lea
pop
pop
mov
push
push
lea
push
push
push
push
lea
push
lea
push
lea
push
push
call
xchg
xlat
pushf
jns
add
xchg
add
gs
add
popa
jmp
add
mov
add
clc
mov
test
add
add
je
in
add
loopne
mov
add
mov
icebp
fistps
lahf
add
test
xchg
add
mov
xchg
add
add
fiadds
ja
sarl
xlat
jmp
out
fistl
fildl
mov
add
or
popf
stc
mov
lea
pop
xor
push
push
call
add
cmpsl
push
add
add
add
lahf
shll
cmpb
out
testl
lret
subb
lahf
add
xchg
int3
testl
std
add
jle
imul
add
out
add
add
cli
jb
movsl
lods
mov
sti
mov
pop
mov
mov
add
add
add
hlt
lea
pop
add
push
push
push
push
lea
push
push
call
add
add
xorb
mov
sahf
lret
add
cltd
add
add
push
test
scas
push
add
add
add
out
stos
add
mov
stos
addr16
lods
add
addr16
mov
add
add
aad
mov
add
add
stos
loope
ret
hlt
out
add
add
pop
rep
mov
push
push
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
add
fstp
add
add
in
add
add
out
imul
test
pop
add
add
pop
add
add
jge
add
mov
sti
pop
cmpsl
mov
roll
call
add
add
add
add
adcl
add
lods
add
jae
movsl
lds
std
add
mov
xlat
jmp
cld
lea
pop
xor
push
push
push
lea
push
push
lea
push
push
call
iret
cmpsb
mov
add
add
cld
jmp
mov
jne
add
add
add
pop
cmpsb
popf
xchg
out
add
js
add
add
push
jnp
mov
add
pop
in
add
icebp
pusha
cli
cltd
out
add
ror
aam
mov
add
addl
aam
ljmp
out
scas
cmpsl
pusha
add
mov
add
add
pop
add
push
push
push
lea
push
call
pop
out
jp
flds
mov
mov
push
pop
cmp
lcall
addr16
mov
pop
add
rcrl
add
add
jmp
mov
enter
mov
add
incb
add
xchg
mov
lods
add
push
jno
xchg
push
gs
mov
mov
sahf
xchg
add
mov
lea
pop
or
je
push
push
push
push
push
call
imul
xchg
rolb
fsubs
add
jmp
add
add
push
push
add
int
mov
add
add
pushf
test
xchg
add
fnstenv
data16
add
sbb
lret
iret
lret
mov
xchg
add
add
into
lret
mov
lea
pop
mov
xor
mov
push
push
push
push
push
push
push
call
add
push
gs
add
add
addb
pop
add
fildl
add
lret
movsl
pop
lods
push
mov
add
push
jno
in
gs
add
nop
add
add
mov
add
aam
xchg
mul
popl
push
lods
out
movsl
fldl
xchg
mov
sbb
add
mov
insb
lret
lahf
mov
arpl
pop
xor
push
lea
push
lea
push
push
push
lea
push
push
push
lea
push
lea
push
call
ja
add
stos
add
add
add
ja
out
add
add
cwtl
loop
add
add
fidivs
mov
testl
add
xchg
push
jbe
in
leave
int
addr16
add
addr16
filds
movb
add
mov
fisubrs
mov
add
shr
js
mov
lea
pop
add
push
ror
lea
shr
pop
add
add
push
push
push
push
push
push
push
call
add
mov
add
scas
add
mov
mov
add
mov
rcrb
add
add
test
add
push
out
push
fs
cmpsb
roll
fsubl
xchg
int3
imul
add
pop
add
add
test
test
subl
test
ret
cld
call
add
add
pop
add
ja
jecxz
mov
lea
pop
mov
xor
push
push
push
push
call
mov
add
mov
pop
mov
in
out
stos
call
subb
roll
fidivs
arpl
in
add
push
push
lret
int3
add
jge
add
sbbb
sbbl
jo
jle
out
gs
add
incb
jecxz
bound
mov
in
into
pop
add
add
add
aad
in
mov
lea
pop
add
pop
push
not
add
pop
rep
mov
xor
push
push
push
push
lea
push
push
lea
push
push
push
push
call
test
cli
add
nop
add
jo
cli
add
scas
testl
fucomi
fwait
out
add
push
jne
popa
mov
fnstcw
pop
add
add
lret
add
add
jne
cwtl
cmc
add
movsl
jne
mov
add
test
popf
bound
lods
add
add
cld
iret
add
add
add
add
loop
mov
mov
lea
pop
or
je
mov
push
lea
pop
add
add
rep
push
lea
push
lea
push
call
cli
add
jle
add
add
jge
jnp
add
add
bnd
xchg
nop
mov
roll
cli
fiaddl
cmpsl
add
xbegin
aam
add
gs
in
add
cmpsb
add
add
add
push
jo
jp
lods
mov
ja
pusha
add
add
add
popf
lock
add
pop
jp
add
jbe
stc
ffree
mov
lea
pop
pop
push
push
not
add
inc
sub
push
xor
add
not
sub
inc
pop
ror
sub
shr
pop
pop
push
push
push
lea
push
push
call
add
pop
add
nop
pop
xchg
jbe
add
add
filds
repnz
int
pushf
pusha
add
into
add
add
mov
add
add
lahf
rorb
fldl
mov
stc
je
bnd
add
aam
jo
push
add
add
sar
sahf
out
add
mov
jne
add
push
fstpt
mov
cld
lea
pop
mov
mov
mov
push
sub
pop
jmp
push
push
push
push
push
push
push
push
push
call
add
in
mov
add
test
xlat
in
jno
fldl
pop
fildl
les
cltd
jge
mov
out
addb
shl
in
test
add
hlt
loopne
add
xchg
jnp
pop
hlt
add
out
mov
test
add
insb
add
mov
scas
mov
scas
lea
add
add
add
mov
cld
outsl
add
add
add
enter
lea
pop
push
mov
push
shl
sub
not
sub
pop
add
push
push
push
push
push
push
push
push
push
push
push
push
call
in
jno
add
add
mov
jno
add
lods
add
cmp
add
mov
push
add
add
add
add
add
push
loopne
jecxz
add
add
add
add
cltd
mov
sbb
les
gs
shl
ja
test
cmpsb
jge
add
rcrb
pop
push
push
xor
shr
pop
push
push
shr
shl
pop
mov
push
shr
add
pop
pop
push
push
push
push
push
push
push
call
add
clc
in
add
push
jns
popf
jge
cmc
add
mov
add
incb
pop
xchg
add
add
test
add
into
arpl
add
lret
mov
add
testb
jb
add
mov
mov
jbe
ret
in
push
add
add
imul
call
popa
sbb
pop
pop
pop
push
lea
push
lea
push
call
add
fiaddl
add
mov
pop
bound
add
popl
xchg
add
add
jne
imul
lea
add
add
add
add
jae
add
mov
add
mov
clc
clc
mov
test
lahf
add
jae
mov
out
jb
jecxz
stos
mov
int3
lea
pop
leave
ret
push
push
shr
add
dec
pop
mov
push
push
push
push
push
call
data16
xchg
in
jmp
aad
add
add
xchg
add
add
je
js
loop
pop
mov
pop
add
add
pop
add
add
popf
add
movl
add
fs
add
add
jbe
add
imul
cmpsl
xchg
into
in
push
push
popa
add
roll
out
add
add
stos
mov
mov
lea
pop
add
push
sub
rol
sub
pop
push
push
push
push
push
call
add
movsl
push
mov
subl
insb
add
pop
add
rcr
mov
add
xchg
jnp
add
fwait
add
add
int
fdivr
add
out
stc
popf
xchg
sahf
mov
ret
add
add
out
add
add
mov
add
ret
xchg
push
add
aam
mov
add
jle
outsl
mov
xchg
add
add
pop
push
push
inc
sub
pop
push
push
push
push
call
gs
movb
insb
pop
xchg
stc
loop
loope
mov
fldl
cmpsb
add
add
add
add
add
je
std
add
add
add
add
add
push
push
jmp
add
add
mov
outsl
fs
mov
repnz
pop
mov
pop
insb
add
xlat
pop
cli
add
add
lea
pop
push
push
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
mov
call
filds
add
add
pop
mov
jmp
imul
imul
into
add
add
ljmp
mov
add
popl
mov
add
add
shl
add
xchg
mov
add
pushf
in
mov
mov
add
pushf
cltd
add
pop
movl
push
lea
push
lea
push
push
push
push
push
push
push
call
add
mov
mov
add
add
mul
add
mov
add
add
mov
fldl
clc
add
mov
add
add
stc
mov
aam
mov
clc
xchg
data16
sar
lds
popf
xchg
movl
shr
fiaddl
add
imul
push
lret
add
add
and
addl
test
je
push
xor
xor
add
lea
pop
mov
pop
pop
push
push
push
push
lea
push
push
call
add
mov
pop
add
add
fistps
jns
in
jno
fdivr
pop
imull
lock
shll
add
into
out
push
test
mov
add
add
mov
test
xchg
fwait
add
add
add
add
lods
lea
mov
pusha
pop
movsb
add
fmull
push
push
push
call
popl
stos
in
lret
out
mov
add
add
add
cmc
add
cli
loopne
xchg
mov
std
add
cmc
lahf
fildl
add
fcomps
mov
jne
xchg
sahf
add
add
add
lods
add
add
rclb
test
add
jecxz
int
sarb
lret
add
jl
cmpsl
add
xchg
mov
imul
add
push
lea
push
call
mov
add
add
jns
add
testl
add
hlt
pop
loopne
xchg
mov
out
rcrb
imul
cli
pop
je
add
into
add
add
jnp
add
gs
add
push
cmc
cltd
mov
scas
add
push
add
add
add
add
test
iret
add
add
add
mov
mov
lea
pop
push
mov
push
add
pop
add
push
lea
push
push
push
push
call
jo
mov
mov
pop
add
add
fcoml
icebp
mov
mov
add
mov
xchg
xchg
test
add
add
add
add
add
add
test
add
add
in
add
gs
int
jl
add
lea
pop
push
push
push
push
push
push
push
push
push
push
call
xchg
lea
mov
mov
add
test
add
test
ljmp
add
add
mov
jmp
out
stos
mov
xchg
stos
in
add
mov
fsubrl
add
push
mov
in
mov
loop
xchg
add
add
ret
add
add
movsb
mov
lods
add
pop
push
push
push
add
inc
shl
pop
testl
push
sub
pop
addl
push
not
pop
push
push
lea
push
push
push
push
push
lea
push
push
push
lea
push
call
pop
add
jae
add
add
add
push
mov
rcll
add
jmp
add
lods
add
add
test
in
mov
mov
add
push
push
add
notb
pop
mov
add
imul
add
add
mov
ja
mov
lea
pop
call
mov
push
push
push
push
push
push
call
shr
test
add
mov
shrl
loop
jbe
add
jecxz
mov
ftst
add
add
add
add
add
add
lcall
mov
mov
mov
scas
add
add
add
add
add
push
hlt
in
mov
out
mov
xchg
add
mov
mov
lea
pop
pushl
push
push
pop
push
call
cmpl
jne
push
lea
push
push
lea
push
push
call
aam
add
add
add
stos
add
mov
mov
stos
pop
pop
add
add
bound
mov
test
imul
add
add
jl
lahf
call
int
mov
cwtl
add
fs
iret
bound
add
push
addb
push
add
mov
fcmovnu
bound
add
gs
sbbl
lcall
adc
pop
push
shl
shl
pop
pop
pop
pop
push
rol
ror
pop
leave
push
push
push
lea
push
call
fwait
add
lcall
add
add
add
mov
add
add
add
rolb
mov
jmp
stos
outsl
jne
in
mov
testl
mov
data16
add
push
add
je
mov
incb
add
pop
fldenv
roll
pusha
jno
fdivr
clc
add
bound
pop
ret
push
mov
push
shl
shl
pop
add
push
push
call
push
add
add
jbe
leave
add
les
test
lcall
add
fsubs
iret
sar
add
pop
add
mov
fs
jp
jl
add
add
shr
rolb
call
in
add
rolb
add
add
mov
js
cwtl
pushf
lret
add
xchg
mov
add
add
add
mov
lea
pop
push
push
push
push
lea
push
push
lea
push
push
push
push
push
call
add
add
xchg
xchg
movb
arpl
add
push
jo
add
mov
jge
add
fdivp
add
add
add
call
lea
add
add
out
add
in
icebp
mov
add
xchg
int
shlb
push
jecxz
add
add
incb
add
mov
pop
mov
lea
pop
push
push
dec
pop
movl
push
pop
push
call
push
shl
sub
add
add
pop
push
call
push
push
push
push
push
push
push
lea
push
push
push
call
mov
pushf
aad
leave
mov
add
xchg
add
add
add
out
add
jns
add
std
add
test
mov
add
movb
movsl
loope
lea
cli
mov
data16
add
push
out
xlat
movsl
mov
push
xchg
sarl
pop
ja
jno
fildl
pop
pop
push
add
mov
int3
add
add
mov
lea
pop
subl
push
push
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
xchg
fldlg2
sbbb
jmp
int3
push
add
pop
add
push
bound
add
fildl
add
mov
fiadds
test
popf
js
add
add
add
in
add
fwait
add
mov
jns
add
jno
popl
add
shlb
add
lcall
fcmove
add
mov
lock
mov
lea
pop
cmpl
jne
pop
push
push
push
push
push
call
data16
add
lret
jnp
icebp
add
xchg
add
mov
icebp
push
add
movsl
xorb
add
aam
add
add
add
loopne
je
mov
add
in
arpl
add
in
add
pop
add
add
add
push
jge
mov
popa
add
movsb
jl
jbe
jge
add
jae
fmull
pop
push
lea
push
call
roll
add
add
add
add
add
mov
popf
pop
out
add
push
add
push
add
add
mov
mov
pop
pop
sahf
xchg
add
rcr
add
add
mov
add
hlt
out
add
loopne
test
pop
ret
cmpsl
sub
fiadds
add
add
mov
add
pop
pop
push
rol
pop
leave
push
inc
sub
pop
ret
push
push
not
dec
pop
mov
push
dec
inc
xor
pop
add
push
lea
push
lea
push
call
sti
add
add
add
rolb
add
mov
add
xchg
add
mov
lret
add
add
loope
cmpsb
js
aam
cmpsb
add
mov
jno
in
add
xchg
add
push
add
fidivl
xchg
push
add
mov
push
push
push
add
in
add
add
add
mov
lea
pop
push
push
push
push
pop
push
mov
lea
push
sub
pop
sub
push
lea
pop
mov
push
push
lea
push
push
call
roll
add
pop
sarl
mov
add
add
pop
add
add
mov
arpl
cltd
add
jnp
add
decb
popf
addl
pusha
testb
fldl
out
stos
enter
add
jmp
pop
mov
lahf
popl
addb
add
aam
bound
pop
shr
add
mov
push
lea
pop
mov
add
add
push
push
push
call
jmp
out
push
mov
fstl
add
incb
add
add
rclb
mov
xlat
mov
add
repnz
add
add
incb
add
and
jle
arpl
movsl
add
js
jae
add
addr16
add
mov
jp
add
mov
int3
jnp
mov
mov
xlat
add
pop
add
add
or
mov
mov
cmp
jne
push
ror
add
xor
pop
cmp
jne
mov
movl
push
push
push
push
push
push
push
push
push
lea
push
call
fcmove
out
popf
cmpsl
int3
repnz
test
in
mov
stos
lret
lock
push
add
js
rolb
add
pusha
add
in
add
add
add
nop
incb
lods
popa
add
add
fwait
call
pop
stos
stos
call
add
jecxz
sarl
add
add
rorb
jmp
push
push
call
ffreep
add
add
loopne
pop
add
mov
add
scas
andb
int
popa
cwtl
add
add
add
add
add
test
push
repnz
add
add
sbbb
add
in
add
add
add
xchg
pusha
sti
jge
add
rolb
mov
mov
add
add
addl
mov
lea
pop
mov
mov
push
inc
pop
sub
jne
push
rol
pop
mov
movl
push
sub
inc
pop
jmp
push
lea
push
push
lea
push
call
add
jge
ret
rcrl
scas
pop
loopne
mov
add
imul
add
pop
popf
mov
pop
push
mov
stos
add
add
loop
xchg
mov
mov
jne
rcrl
out
add
mov
cwtl
pop
xlat
push
add
mov
mov
fldl
int
add
in
add
add
add
pop
mov
push
push
lea
push
push
lea
push
call
add
in
lock
fnsave
lret
shrb
pusha
arpl
add
roll
mov
push
add
mov
ret
pusha
pop
leave
hlt
out
add
scas
add
test
push
add
add
add
add
nop
mov
jo
add
addb
add
ret
add
mov
lea
pop
mov
push
shl
pop
cmp
jne
mov
movl
push
push
lea
push
push
push
call
add
xchg
add
ljmp
movsl
jbe
gs
add
add
mov
mov
push
icebp
add
stc
into
cld
mov
mov
cmpsl
mov
test
add
test
lahf
pusha
mov
add
add
pop
add
imul
jp
shrb
add
add
vsqrtsd
add
enter
popf
add
add
cli
pop
sahf
add
push
shl
in
scas
add
pop
jmp
mov
push
push
lea
push
push
push
push
push
push
push
call
add
jo
mov
ret
add
fildl
add
mov
sbb
add
add
add
mov
add
jge
add
mov
add
insb
stos
add
ret
add
jl
add
jae
add
lods
mov
sahf
pop
add
ret
mov
aam
add
stc
add
add
mov
stos
in
mov
std
xlat
repnz
add
les
idivl
in
mov
addr16
cmpw
jne
mov
push
dec
pop
movl
jmp
pushl
push
push
lea
push
push
push
push
push
push
push
push
call
add
in
add
in
jo
add
stc
int
add
mov
add
add
jbe
add
mov
movsb
lds
mov
push
ja
bound
testb
fldl
lock
popa
pop
arpl
in
loopne
add
add
int3
push
leave
xchg
add
jb
lock
mov
mov
data16
mov
mov
push
push
push
push
push
lea
push
lea
push
push
call
jl
add
loopne
scas
call
add
jb
add
add
scas
add
std
ja
lret
add
roll
test
movsb
add
mov
add
fs
mov
out
popa
push
add
add
pop
mov
pop
add
roll
sahf
hlt
add
push
add
mov
mov
lea
pop
mov
push
push
sub
add
add
push
sub
add
rol
sub
shl
sub
sub
add
pop
ror
dec
pop
push
push
push
push
push
push
push
push
lea
push
push
call
add
push
jecxz
add
add
mov
fildll
add
mov
add
add
nop
out
pop
mov
jno
mov
mov
add
mov
fmul
xchg
mov
add
jmp
iret
push
insb
testl
push
jmp
rcl
popf
jae
push
int3
data16
mov
sub
call
cmpl
je
push
push
sub
sub
push
push
pop
add
not
sub
shr
pop
sub
xor
sub
ror
pop
push
lea
lea
sub
pop
push
push
sub
ror
dec
pop
call
push
push
push
call
gs
aam
add
ret
jge
jge
std
les
add
cwtl
add
mov
ffree
push
add
fdiv
push
insb
push
addr16
arpl
mov
xchg
jnp
add
stos
cli
pop
outsl
add
add
add
jne
pop
add
mov
imulb
add
add
pop
add
add
push
les
js
int3
fldz
ret
fisttpl
add
push
push
shr
push
xor
add
inc
not
rol
sub
sub
not
not
pop
ror
pop
push
add
pop
push
push
push
push
push
push
push
call
push
mov
mov
add
rcr
jno
jae
sarb
push
add
add
add
xlat
pop
push
lret
add
testl
popl
mov
add
cmpsl
mov
mov
roll
mov
popf
mov
imul
add
add
jnp
pop
add
jbe
add
fiaddl
add
add
pop
call
push
push
push
push
push
call
add
add
add
outsl
mov
add
shll
lods
add
add
add
test
add
cwtl
mov
add
mov
lds
xchg
mov
clc
add
int3
push
add
add
rcrl
mov
out
add
jae
cmpsl
ljmp
movsb
fucom
pop
mov
lea
pop
cmpl
je
push
push
inc
xor
shr
push
or
not
add
sub
sub
dec
not
sub
xor
rol
add
pop
ror
not
pop
push
add
shl
sub
pop
push
push
lea
push
push
push
push
push
push
lea
push
call
add
push
add
add
pop
add
scas
jmp
add
add
pusha
call
ret
add
les
add
cwtl
popf
fwait
leave
fists
fmull
add
add
fsub
mov
jo
in
add
mov
add
add
enter
mov
pop
mov
leave
add
cwtl
add
jnp
add
jl
lret
add
scas
mov
lea
pop
call
cmpl
je
push
push
add
push
sub
add
shl
ror
shl
sub
sub
sub
pop
sub
pop
push
lea
push
call
add
rcl
pop
push
add
bnd
add
lea
fnstcw
add
data16
lcall
add
add
jecxz
enter
mov
mov
in
lea
cmpsb
frstor
nop
scas
add
add
loope
aad
test
add
add
mov
fimull
pop
push
call
push
push
push
lea
push
push
call
fisttpl
add
mov
xchg
iret
hlt
mov
add
add
jl
add
aad
in
lret
fcomi
clc
les
lret
add
mov
pop
jnp
stos
pop
mov
add
leave
add
lods
scas
xchg
add
add
xchg
out
add
add
add
jne
popf
push
add
bound
cmpl
je
push
push
rol
add
lea
xor
push
xor
add
ror
sub
add
ror
add
pop
rol
lea
pop
push
add
inc
pop
push
call
cmpl
je
push
push
add
sub
push
push
pop
add
lea
ror
not
sub
inc
ror
lea
pop
sub
not
pop
push
push
push
push
push
push
call
add
stos
push
mov
add
roll
add
mov
xchg
test
fidivl
lods
xchg
add
test
sbb
jge
insb
add
add
mov
add
add
add
add
mov
jno
add
out
cld
les
scas
mov
mov
add
mov
lea
pop
push
push
sub
pop
call
cmpl
je
push
push
add
add
push
xor
add
sub
sub
add
rol
pop
add
dec
pop
push
lea
push
push
push
push
push
lea
push
push
call
in
fst
enter
movl
imul
cltd
add
sbbl
out
faddl
add
add
out
lods
clc
jmp
add
add
add
ljmp
fstp
add
add
add
fiaddl
add
int
mov
hlt
out
add
add
jp
scas
mov
mov
ljmp
and
call
push
push
lea
push
lea
push
call
test
loopne
xchg
cmc
add
cli
add
cltd
add
jbe
add
rcll
add
cltd
add
push
fs
mov
add
popf
add
call
popa
movsb
pusha
mov
std
add
add
add
add
add
add
out
in
push
add
pop
mov
loopne
jp
add
add
shl
add
test
icebp
fsubl
insb
mov
lea
pop
cmpl
je
push
push
lea
push
xor
add
inc
sub
rol
not
inc
sub
pop
add
lea
pop
push
push
rol
pop
call
push
pop
cmpl
je
push
push
dec
push
sub
add
rol
sub
xor
ror
pop
xor
lea
xor
pop
push
push
call
add
imul
add
movsb
jae
pop
orb
movsl
add
add
add
lcall
mov
stc
cmpsl
nop
mov
add
data16
add
clc
je
mov
add
add
add
rolb
xchg
mov
jge
popl
add
mov
and
pusha
add
pop
push
call
push
add
rol
pop
cmpl
je
push
push
dec
dec
inc
push
or
not
add
dec
sub
dec
sub
add
lea
shr
pop
inc
pop
push
sub
lea
ror
pop
push
push
push
push
push
push
call
add
add
xchg
pushf
add
pusha
jns
add
add
mov
add
add
test
gs
test
cmc
add
cwtl
add
xchg
in
add
jecxz
rolb
repnz
test
xchg
int3
xchg
scas
add
add
outsl
jae
jns
enter
ljmp
xchg
ljmp
add
aam
bound
call
push
push
push
call
xchg
adcl
add
add
add
jnp
rolb
pop
in
je
add
rolb
stos
jge
add
jp
push
add
scas
add
pusha
clc
add
loop
xchg
out
add
add
add
add
std
rolb
add
repnz
ljmp
pushf
add
fs
push
lret
add
pop
cmpl
je
push
push
shl
xor
push
sub
add
not
ror
sub
not
inc
rol
pop
add
rol
pop
push
shr
not
add
add
pop
push
push
sub
pop
call
cmpl
je
push
push
sub
shl
lea
push
and
add
sub
sub
add
not
inc
pop
shr
dec
sub
pop
push
add
shr
add
pop
push
call
cmpl
jne
push
shl
shl
sub
dec
pop
mov
movl
jmp
push
ror
inc
pop
xor
push
push
push
push
push
push
push
lea
push
call
mov
sahf
jge
rclb
test
cli
rcrb
add
add
add
mov
xchg
mov
add
push
add
mov
add
jmp
iret
add
add
mov
test
xlat
lcall
int
out
jl
popa
push
lea
jne
fmull
push
lea
xor
dec
pop
pop
push
not
xor
ror
pop
pop
pop
leave
push
xor
add
add
dec
pop
ret
push
push
push
push
push
call
xchg
cmpsl
fs
out
sahf
push
add
add
mov
add
mov
icebp
js
mov
iret
add
add
jecxz
lret
add
add
mov
test
add
add
incb
add
mov
add
mov
xchg
test
jb
call
fildl
out
mov
mov
mov
xchg
filds
add
orb
mov
add
push
add
add
rol
pop
cmpl
jne
push
push
sub
sub
push
xor
add
add
xor
sub
xor
pop
add
pop
pushl
push
sub
inc
pop
call
push
lea
push
lea
push
push
push
push
push
push
push
push
call
add
out
mov
push
stc
add
int3
add
add
stc
add
add
mov
add
mov
add
decb
pop
cmp
add
call
add
mov
mov
sti
int
jge
out
lret
jecxz
pushf
mov
add
add
xchg
add
add
fisubrl
add
aad
mov
lea
pop
push
call
push
pop
jmp
cmpl
je
push
dec
ror
pop
cmpl
jne
leave
add
push
push
call
add
xchg
add
jp
imul
jp
insb
add
je
jge
mov
mov
scas
mov
add
add
mov
lods
lcall
mov
push
ja
add
push
loop
add
mov
imull
add
add
push
pop
imul
add
jnp
mov
add
testl
jle
popl
add
pop
pop
pop
push
push
push
lea
push
lea
push
push
push
push
push
push
call
addl
push
jno
stos
cmpsb
cmpsl
add
jne
mov
mov
add
scas
jbe
xchg
cmc
addr16
add
enter
jmp
xchg
add
loope
add
add
mov
add
push
jne
mov
add
je
add
add
mov
lea
pop
pop
pop
push
lea
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
add
add
fsubl
add
stos
add
rcll
add
test
mov
add
leave
jnp
push
ljmp
add
jae
add
add
jbe
xchg
jl
fiadds
repnz
add
loopne
add
add
add
rcrb
loopne
add
add
mov
add
add
out
cmc
jnp
add
add
mov
lea
pop
leave
add
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
add
add
add
cltd
movsb
loopne
xchg
push
add
add
test
popa
fnstsw
mov
loopne
mov
flds
add
idiv
pop
add
mov
ret
jge
add
add
jb
pop
faddl
add
loopne
cltd
std
lock
mov
pusha
lahf
add
xlat
loope
add
jns
mov
cld
loopne
jl
aam
bound
pop
ret
push
push
push
lea
push
call
add
add
imul
loope
out
add
loope
lds
add
add
add
add
mov
mov
add
add
add
jmp
mov
add
test
cld
add
out
rolb
movl
add
rolb
pop
lock
add
add
add
add
cli
add
add
add
add
adc
outsl
adc
add
out
sub
pop
cmpl
jne
push
push
push
or
not
add
ror
sub
sub
ror
rol
add
not
pop
add
sub
ror
dec
pop
pushl
push
shl
rol
sub
pop
call
push
add
xor
pop
push
push
push
push
push
call
imul
out
shlb
cmpsl
movsl
not
add
add
rolb
add
jae
add
lods
roll
add
cli
fiadds
push
mov
add
rol
push
add
add
add
pop
add
add
mov
add
mov
shl
jns
xchg
add
mov
fsubl
leave
int3
jae
add
pop
call
push
shr
xor
ror
pop
jmp
cmpl
jne
mov
push
push
push
lea
push
lea
push
push
push
lea
push
call
addl
bound
ljmp
mov
cli
cld
push
mov
stos
ror
repnz
add
lea
xchg
scas
xlat
addb
out
mov
jge
fisttpll
mov
add
add
mov
jmp
add
xchg
add
jb
add
rcll
les
rcrl
jne
add
pop
mov
push
add
pop
call
push
push
push
push
push
pop
add
shl
not
sub
dec
sub
shl
pop
add
lea
pop
push
shr
pop
pushl
push
sub
shl
lea
pop
call
push
push
sub
pop
call
push
push
inc
xor
inc
push
xor
add
ror
sub
dec
ror
ror
pop
add
pop
push
push
push
lea
push
lea
push
push
push
lea
push
call
add
mov
les
add
flds
fldl
mov
add
imul
jbe
push
jge
enter
jne
add
add
add
add
add
cmpsb
add
xchg
add
sar
std
push
mov
add
insb
add
add
mov
add
mov
add
add
add
add
pop
mov
lea
pop
pushl
call
push
push
push
call
mov
add
xchg
xchg
jge
add
cwtl
testl
add
in
cltd
jae
rolb
mov
jnp
jne
push
xlat
add
out
push
add
pop
push
add
aam
add
push
aad
push
fiaddl
mov
mov
pop
add
add
push
ficompl
cli
jns
mov
jb
add
xchg
in
in
add
bound
call
push
push
lea
push
or
inc
add
lea
dec
sub
shr
add
not
pop
add
dec
rol
pop
push
not
not
pop
pushl
push
push
push
push
lea
push
push
push
push
call
push
add
repnz
insb
add
pop
add
add
add
add
je
add
push
add
jmp
add
mov
rolb
mov
add
bound
out
xchg
add
roll
mov
mov
mov
ljmp
mov
add
test
add
add
arpl
cld
fadds
add
xchg
add
mov
lea
pop
call
push
ror
pop
call
push
xor
pop
lea
push
push
sub
shr
ror
push
or
inc
add
add
sub
shl
rol
pop
shl
not
pop
pushl
push
push
lea
push
push
push
call
add
add
jmp
add
scas
xchg
movsl
pop
aam
add
add
cmpsb
add
nop
add
adcb
fiadds
stos
aad
flds
stos
xchg
lods
add
test
add
add
jp
add
add
lret
add
add
lock
add
stos
add
add
add
mov
mov
add
add
mov
loop
add
lock
mov
fimull
pop
call
push
xor
sub
sub
pop
push
call
push
push
dec
sub
lea
push
or
not
add
ror
ror
sub
sub
ror
not
pop
lea
ror
pop
push
ror
add
sub
shr
pop
pushl
call
push
lea
lea
pop
call
mov
push
push
rol
xor
dec
lea
push
and
add
sub
shr
add
pop
shl
pop
push
inc
rol
dec
pop
pushl
call
push
ror
xor
rol
pop
push
push
not
dec
pop
call
push
push
sub
sub
push
and
add
not
inc
sub
sub
ror
add
pop
not
inc
add
pop
pushl
push
add
sub
pop
call
push
push
sub
pop
pushl
push
shr
pop
call
push
push
xor
shr
push
xor
add
inc
inc
sub
shr
shr
shr
pop
sub
pop
push
push
lea
push
lea
push
push
push
lea
push
push
lea
push
call
mov
ja
cli
stos
add
add
stc
mov
into
subl
add
jbe
lock
stos
mov
enter
add
test
add
imul
add
add
imul
push
out
jne
add
clc
add
out
mov
mov
lea
pop
pushl
call
push
push
dec
add
xor
push
or
inc
add
add
add
sub
not
pop
not
shl
pop
push
push
sub
push
or
inc
add
xor
inc
add
sub
sub
ror
lea
pop
xor
sub
shr
shr
pop
push
push
lea
push
push
push
push
call
add
div
cmpsl
add
add
add
enter
add
jge
pop
add
add
add
add
add
add
mov
iret
add
mov
jle
add
xchg
rorb
xchg
shl
add
rclb
sarb
pop
mov
add
add
push
mov
add
faddl
xchg
add
add
sbb
rclb
cld
shr
dec
pop
pop
push
lea
pop
dec
jne
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
pusha
lds
into
shll
add
add
std
popa
iret
js
add
pop
add
jae
loop
xchg
add
bound
cmpsb
add
in
stos
jns
rolb
addr16
jb
add
add
in
iret
push
add
xchg
outsl
add
push
lret
imul
pop
js
jle
xchg
clc
hlt
mov
data16
lock
jmp
add
add
xchg
bound
pop
call
push
pop
jmp
push
push
push
push
lea
push
lea
push
push
push
call
mov
xorb
add
adcb
test
add
std
push
add
add
xchg
pop
mov
sbbb
je
push
add
pop
fucomip
mov
out
mov
push
incb
add
lock
add
lods
mov
push
add
add
loopne
hlt
mov
std
rorb
cld
add
add
addb
add
pop
call
push
push
sub
xor
xor
inc
push
sub
add
dec
sub
dec
xor
shr
pop
inc
pop
push
sub
pop
pushl
call
push
push
push
push
push
push
push
lea
push
call
mov
jmp
jae
add
pop
push
pop
insb
xlat
pop
add
add
sar
add
add
add
add
mov
fiadds
popa
repnz
add
in
scas
add
addr16
pop
enter
popf
cli
mov
add
jb
add
xchg
lds
iret
add
mov
repnz
fadds
add
jne
add
add
jno
add
imul
add
add
lea
push
push
sub
shr
push
or
inc
add
sub
add
shl
rol
sub
ror
not
sub
dec
pop
ror
add
pop
push
lea
rol
sub
pop
pushl
push
lea
push
push
push
push
lea
push
push
call
add
data16
roll
jno
pop
repnz
pop
int
push
push
add
out
out
pusha
scas
add
call
push
xlat
add
add
jb
add
shll
pop
movsl
add
add
add
mov
push
add
mov
push
fbld
add
add
add
leave
add
rol
push
incb
hlt
jl
add
iret
add
pop
call
push
ror
pop
push
call
push
push
lea
rol
sub
push
or
inc
add
add
ror
shl
sub
rol
pop
sub
pop
push
push
lea
push
push
lea
push
push
push
call
mov
stos
lds
add
jbe
sahf
add
int3
mul
test
add
add
cmpsl
add
mov
add
add
ljmp
stos
aad
mov
add
loopne
add
xorl
add
gs
rcl
imul
jl
jge
insb
add
ja
mov
divl
mov
push
add
push
mov
rcll
sbb
pushl
call
push
add
sub
not
pop
call
mov
push
push
push
push
push
push
call
fmul
rclb
add
add
lods
sahf
lret
push
add
add
pusha
pop
iret
ret
out
add
cli
add
mov
arpl
jnp
add
add
xlat
add
fadds
out
add
scas
jne
lock
lods
add
jecxz
sahf
add
scas
stos
mov
add
out
add
pop
lea
push
push
inc
add
push
or
inc
add
not
sub
not
rol
pop
sub
rol
xor
rol
pop
push
push
push
lea
push
push
push
push
push
push
push
call
push
mov
sti
loop
add
out
add
xchg
js
pop
add
clc
add
out
roll
sti
mull
add
incb
add
add
add
add
into
mov
xchg
add
add
add
add
lea
pop
pushl
call
push
push
call
loopne
data16
test
pop
mov
push
in
add
int
xlat
pop
add
pop
in
push
into
les
nop
std
add
add
stos
imul
add
aam
xchg
lods
in
cmpsb
mov
add
add
pop
je
lea
fidivs
roll
add
roll
fwait
add
insb
mov
gs
add
mov
lea
pop
lea
push
lea
push
lea
push
lea
push
push
push
push
lea
push
call
add
test
add
nop
mov
add
fmull
sahf
add
mov
add
data16
ljmp
add
add
add
add
jmp
xchg
cmc
shr
stos
add
xchg
add
add
push
enter
add
add
add
mov
pop
in
movsl
addl
loopne
mov
lea
pop
push
push
pop
push
push
lea
ror
rol
pop
push
pushl
push
push
not
add
lea
push
or
inc
add
xor
sub
rol
pop
ror
xor
add
pop
push
sub
xor
pop
push
call
push
push
shr
inc
push
sub
add
lea
shl
sub
sub
ror
pop
add
shl
pop
push
push
push
push
push
push
lea
push
push
call
jmp
orl
add
ficomps
mov
addb
lahf
mov
popa
divl
add
add
add
add
cltd
pushf
adcb
xchg
add
add
add
orl
mov
mov
lea
pop
pushl
call
push
push
add
pop
call
push
push
add
shr
sub
push
xor
add
sub
shl
shl
shl
sub
sub
pop
shl
shl
shl
pop
push
shl
pop
pushl
call
call
push
push
lea
push
call
fiaddl
add
add
mov
pushf
insb
add
add
jle
add
roll
push
out
add
fs
rcrl
xchg
cmpsb
add
add
in
cltd
pop
out
scas
aam
add
add
insb
add
xchg
add
mov
sahf
pop
add
fcomps
add
add
add
jl
add
into
jmp
loope
roll
jb
mov
lea
pop
jmp
pushl
mov
push
sub
not
add
pop
jmp
push
push
sub
push
xor
add
dec
add
xor
ror
sub
shl
pop
add
inc
shr
pop
pushl
push
push
push
push
push
lea
push
push
push
lea
push
push
call
data16
mov
test
fcoml
lods
mov
xchg
pop
xlat
pop
xchg
loopne
add
add
add
push
imul
add
xchg
imul
pusha
mov
xchg
mov
lcall
mov
add
mov
push
add
add
insb
out
data16
insb
mov
xchg
mov
lea
pop
call
push
push
lea
push
push
push
push
lea
push
push
push
push
call
movsl
pop
movsl
add
add
pop
mov
pop
add
mov
mov
pushf
test
mov
add
int3
test
frstor
cld
add
roll
insb
data16
insb
mov
jb
ljmp
shll
out
add
js
pop
flds
add
add
push
jl
add
std
pop
add
fstl
push
outsl
popa
mov
lea
pop
push
call
push
push
not
push
push
pop
add
rol
sub
sub
pop
shr
dec
pop
push
push
push
lea
push
push
push
push
call
ficoml
pusha
lret
add
mov
add
movsl
add
add
add
nop
add
xchg
jbe
jb
cli
jns
add
add
add
pop
incb
fcmovnbe
add
mov
sahf
jo
int
fcmovnb
add
or
jge
stc
imul
mov
testb
fwait
add
les
jne
push
inc
pop
call
push
call
push
push
call
xchg
js
add
add
negb
add
pushf
pop
jnp
add
fs
testl
add
add
add
out
add
ret
push
jmp
xchg
push
mov
je
jle
loop
in
scas
in
mov
scas
jne
pop
insb
add
add
mov
add
je
lods
cmpsl
add
mov
fdivrs
or
push
add
lea
sub
pop
add
push
sub
pop
pop
push
push
push
lea
push
push
push
lea
push
call
jl
add
add
gs
mov
lcall
add
ficomps
mov
pop
mov
add
mov
in
add
mov
xchg
add
add
je
add
add
out
add
jnp
push
mov
add
pop
fwait
push
push
jl
add
xchg
add
jle
test
cwtl
mov
xchg
add
cmpsl
mov
movsb
les
aam
bound
pop
push
not
add
shl
pop
pop
pop
leave
push
xor
pop
add
ret
leave
push
lea
push
push
push
push
call
mov
stos
mov
add
aad
mov
add
add
lock
lods
je
insb
add
call
add
stos
jle
fwait
add
add
lret
in
push
add
add
add
shl
add
mov
testb
add
outsl
in
jp
xchg
add
lcall
ret
push
mov
push
pop
cmpl
jne
mov
jmp
push
push
call
pop
test
in
push
add
aam
imul
add
add
pop
add
add
add
testl
add
add
add
add
cli
mov
jmp
add
jbe
mov
faddl
out
add
add
fdivrs
jbe
mov
add
mov
lds
push
lahf
add
add
imul
or
inc
or
push
lea
push
lea
push
push
call
insb
add
add
add
jno
add
lahf
add
cmc
jecxz
in
pusha
pop
mov
out
xchg
loop
leave
divb
add
lahf
fmul
faddl
leave
scas
push
stos
pushf
add
pop
add
lret
add
add
xchg
add
imul
xchg
add
std
addl
in
lds
bound
add
add
roll
mov
add
mov
lea
pop
and
xor
xor
push
add
sub
pop
add
push
inc
pop
xor
dec
sub
push
ror
xor
xor
pop
jmp
sub
push
push
push
push
push
call
insb
loop
cltd
ja
lcall
mov
mov
rol
jle
outsl
add
mov
jp
mov
add
mov
add
add
out
movsb
add
les
add
addb
add
add
push
out
add
pusha
mov
add
add
movsb
add
mov
lea
pop
pushl
push
push
push
push
lea
push
push
push
lea
push
call
out
mov
ja
add
jb
add
lret
add
add
add
jae
movsl
testl
add
add
add
pop
mov
add
cmpsl
out
add
jae
mov
lcall
push
add
add
add
cwtl
mov
addr16
mov
lea
pop
pop
sub
cmp
jne
push
dec
add
shl
pop
mov
push
xor
pop
lea
push
lea
push
call
fiadds
add
loopne
add
add
push
lret
mov
jns
add
cltd
add
scas
icebp
jge
mov
mov
add
fwait
jbe
mov
add
incb
cwtl
in
int
leave
add
add
in
add
addb
scas
add
add
aad
xchg
jnp
stos
in
hlt
add
enter
add
add
popa
or
jmp
mov
test
lea
push
push
push
lea
push
push
push
call
mov
pop
shlb
push
add
add
popl
add
jnp
pop
push
nop
add
add
add
fs
mov
testb
add
add
in
add
int
add
out
add
add
fdivrs
add
pusha
add
add
add
test
add
add
xchg
add
jne
push
add
push
mov
lea
pop
mov
push
push
push
push
lea
push
push
push
push
push
call
insb
add
icebp
add
hlt
pop
xlat
fwait
data16
push
add
add
mov
std
lret
arpl
mov
loop
imul
mov
add
add
add
not
add
pop
mov
int3
ljmp
add
add
cwtl
add
mov
add
add
add
cmpsb
mov
int3
jno
clc
mov
call
add
test
les
fstpl
int3
lea
pop
shr
add
sub
push
push
push
push
push
push
lea
push
push
push
push
call
loop
bound
mov
push
int3
add
addb
into
movsb
add
cld
push
stos
add
into
cmpsb
out
cmpsl
add
add
pop
add
test
push
roll
mov
insb
lock
int3
add
call
add
loopne
add
add
add
add
add
pop
mov
je
jns
lahf
add
rolb
add
xchg
mov
lea
pop
pushl
pop
push
lea
pop
shr
push
shl
add
shl
pop
and
push
inc
add
sub
pop
sub
push
push
push
push
call
add
add
add
repnz
negb
add
loopne
mov
outsl
xchg
mov
jle
jae
pop
add
jge
add
add
movb
testl
jle
out
add
jp
imul
fnstenv
incb
add
add
add
jne
add
lods
mov
std
icebp
xchg
arpl
add
push
mov
lea
pop
cmp
jne
leave
push
push
push
push
lea
push
lea
push
lea
push
push
call
cmpsb
movl
add
push
mov
rolb
add
add
cli
mov
ja
mov
mov
testl
add
mov
jb
jns
test
mov
idivl
push
sahf
jb
pop
add
push
add
test
in
add
jno
add
iret
mov
mov
lea
pop
ret
push
mov
push
rol
ror
not
pop
add
push
push
push
sub
dec
shl
pop
push
push
push
push
lea
push
push
lea
push
lea
push
call
incb
add
not
add
imul
add
test
add
mov
data16
iret
cld
add
jl
add
add
xchg
mov
sti
cltd
add
jle
add
add
lahf
fs
aad
rclb
add
test
lods
ret
arpl
sahf
mov
add
add
arpl
mov
lea
push
lea
push
push
push
push
call
sbb
jno
add
shrl
scas
add
add
mov
in
shll
mov
add
imul
adcb
mov
add
jo
push
lds
in
cmpsl
shll
lods
add
add
mov
pop
addb
push
lock
out
rclb
add
js
std
add
add
std
cmpsl
mov
xchg
enter
sti
add
pop
sub
push
push
push
lea
push
call
pop
mov
add
aad
add
add
imul
xchg
pop
add
add
add
jp
add
fidivrl
popf
mov
add
data16
lods
aad
add
add
pop
add
xchg
out
out
int
add
jne
shrb
xorl
jp
add
add
mulb
loopne
jns
pop
add
lock
add
pusha
adc
adc
test
stos
sbb
scas
push
push
push
lea
push
push
lea
push
push
lea
push
call
insb
data16
add
test
mov
mov
add
out
test
push
add
sti
add
mov
in
ficompl
add
add
add
mov
enter
pushf
mov
add
scas
add
push
add
add
push
add
xlat
add
clc
mov
int
add
jl
addb
add
jle
xchg
in
mov
lea
pop
shr
push
push
push
push
push
push
push
lea
push
push
push
call
fwait
add
out
pop
mov
add
lcall
mov
add
add
add
add
add
jl
movsb
mov
push
add
add
add
push
jae
fadds
mov
jle
push
mov
mov
cli
add
add
mov
add
jo
add
mov
in
rclb
fmull
fimull
add
pop
or
rcrl
jnp
push
push
lea
push
push
push
push
push
push
push
call
lret
add
add
add
add
xchg
test
add
test
add
mov
lret
int3
add
icebp
mov
int
add
lods
add
popa
add
pop
shr
cltd
add
add
pop
add
cld
add
fiadds
lahf
push
add
add
add
mov
roll
add
add
xchg
mov
jle
pop
orb
add
cmpsb
pop
mov
lea
pop
add
push
lea
push
push
push
lea
push
call
pop
ljmp
add
xchg
jno
movsb
pusha
filds
add
add
mov
add
stos
add
mov
ret
add
iret
aam
add
lea
lods
rcr
add
fcoms
pop
mov
add
add
mov
aad
mov
add
mov
add
add
add
xchg
cli
in
add
add
add
mul
pushf
mov
mov
lea
pop
xor
mov
push
lea
push
push
push
call
add
sti
add
add
outsl
add
jbe
add
add
int
sarl
xchg
in
add
mov
xchg
negb
pop
add
pop
loopne
add
clc
add
data16
add
test
add
add
add
je
add
mov
scas
add
jns
mov
push
mov
add
cmpsl
jne
lcall
lea
pop
and
push
not
xor
add
sub
pop
call
add
push
lea
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
add
xchg
push
push
add
add
add
loope
stos
loopne
mov
add
jo
mov
add
pop
mov
rorl
stos
pop
add
scas
mov
add
push
pop
xchg
pop
fnstenv
jns
jb
add
lahf
jl
xchg
leave
movsl
add
add
xchg
add
xchg
lret
mov
lea
pop
cmp
je
add
push
push
call
scas
jl
add
out
push
mov
fstpt
add
out
lds
add
in
add
stos
rol
add
nop
add
pop
sahf
mov
add
add
incb
add
add
add
loop
jne
add
int
mov
popa
add
cli
mov
add
mov
fistps
fwait
mov
push
mov
xlat
jb
int3
mov
lea
pop
cmpl
jne
xor
push
lea
push
push
push
call
movsl
fs
add
shrb
push
scas
add
stc
add
add
leave
add
imul
add
jne
pop
aam
int3
add
add
cltd
addr16
add
add
push
out
mov
out
add
add
imul
mov
push
hlt
add
jmp
xchg
add
mov
mov
lea
pop
pop
pop
pop
push
pop
pop
pop
leave
push
push
push
push
push
lea
push
push
call
add
push
icebp
add
movsb
add
in
add
std
xlat
add
add
xlat
add
cltd
add
cmpsl
add
add
je
cld
jle
add
into
jl
test
lds
add
jnp
aad
add
mov
neg
hlt
lcall
imul
jnp
add
add
add
jae
add
add
in
add
mov
lea
pop
ret
push
push
call
push
pop
add
add
loop
add
add
subl
div
je
mov
add
add
add
mov
lea
div
in
popl
add
add
loopne
mov
add
add
addr16
add
leave
scas
mov
mov
addr16
out
jmp
add
mov
lea
pop
mov
add
push
push
inc
pop
push
pop
push
lea
push
push
push
push
push
call
add
jno
jmp
add
loopne
add
xchg
add
add
push
ljmp
mov
add
mov
add
add
aad
movsl
jge
add
xorb
mov
add
mov
add
add
add
lods
add
rcll
add
popf
add
add
mov
lea
pop
pop
push
shl
lea
lea
pop
mov
push
call
push
pop
xor
pop
push
shr
sub
pop
pop
pop
push
pop
pop
pop
leave
push
shl
rol
shl
pop
ret
push
push
push
push
push
push
push
push
push
lea
push
call
add
je
jns
add
in
in
pop
add
jnp
pushf
stos
test
add
add
add
mov
mov
mov
add
mov
scas
nop
stos
roll
into
cld
mov
in
cmc
add
jbe
out
outsl
out
filds
add
push
jmp
popf
add
push
pop
mov
add
add
add
add
mov
icebp
enter
add
push
mov
lea
pop
push
push
push
call
mov
add
in
je
clc
add
add
add
data16
add
fsts
sahf
add
test
repnz
repnz
add
mov
iret
cld
mov
pushf
outsl
add
popa
jae
add
test
cli
add
iret
add
popl
jns
xchg
rolb
mov
add
mov
pop
add
add
icebp
jnp
movsl
push
lods
jmp
mov
bnd
pop
lcall
aam
bound
pop
mov
push
inc
xor
pop
add
push
push
push
push
push
push
push
push
push
lea
push
call
out
repnz
jns
add
pusha
mov
add
lahf
pop
neg
mov
add
add
add
bound
add
mov
loope
add
xchg
add
xorb
add
ret
add
jne
mov
std
add
lock
loope
shrl
add
enter
add
pop
cltd
loop
addb
jb
aam
bound
push
push
push
push
call
push
in
lods
add
into
add
add
add
add
mov
add
mov
repnz
mov
call
push
push
shlb
jl
add
popl
add
in
add
mov
jmp
mov
mov
ljmp
lea
pop
push
push
lea
push
push
push
push
call
add
test
add
add
rolb
add
add
movsb
test
out
lock
add
add
mov
add
add
test
pop
xchg
add
push
in
add
jae
pop
enter
ret
mov
stos
icebp
add
xchg
add
cltd
push
mov
jl
add
add
add
mov
lea
pop
push
push
xor
rol
not
sub
pop
mov
push
push
shl
inc
pop
pop
push
inc
pop
lea
push
shl
dec
pop
sub
push
xor
lea
add
pop
mov
push
shr
shr
shr
pop
shr
push
push
push
push
lea
push
lea
push
push
push
push
push
call
in
push
add
movb
jb
subl
lret
mov
add
add
pop
popa
mulb
pop
add
add
xchg
add
add
add
add
and
add
add
add
fstps
fwait
enter
out
add
in
in
roll
hlt
into
add
lods
add
push
fcmovne
fcmovne
mov
lea
pop
add
mov
add
push
not
pop
pushl
push
lea
pop
popl
push
dec
pop
mov
add
push
xor
xor
rol
pop
xor
lea
push
sub
not
lea
add
pop
mov
add
push
push
call
xorb
sub
add
mov
mov
stos
add
lods
xchg
movsl
add
ret
add
xlat
mov
push
add
lret
add
cltd
add
lods
mov
add
mov
add
xchg
push
add
add
rcll
out
out
icebp
sahf
pusha
push
add
add
arpl
enter
insb
add
xchg
add
mov
lea
pop
xor
push
rol
pop
call
add
push
push
push
push
lea
push
push
lea
push
push
call
lret
mov
xchg
jns
mov
mov
add
mov
add
cmc
mov
out
rcr
mov
add
mov
add
jne
mov
movsb
jno
popa
add
leave
xchg
add
jmp
push
add
jp
call
outsl
ret
jecxz
push
add
imul
shl
pop
nop
push
push
push
push
push
push
push
push
push
call
add
jmp
pop
imul
add
add
mov
add
fisubrs
lds
pop
add
mov
add
add
add
jns
faddl
test
add
int
test
jbe
stos
add
add
add
xchg
ljmp
ja
fcmovnu
add
js
popa
mov
nop
mov
add
add
jmp
in
mov
lea
pop
cmp
je
push
push
push
push
push
push
call
lea
add
add
mov
repnz
add
add
jecxz
mov
add
add
jecxz
rolb
add
add
out
test
add
add
in
test
pop
xchg
add
scas
cmc
add
jns
add
shrb
aad
fmull
push
push
lea
push
push
push
push
call
add
pop
add
aad
sti
add
outsl
xchg
add
test
add
test
push
cmpsl
add
sahf
xchg
add
in
test
cwtl
mov
add
pop
add
ja
repnz
add
jle
add
xchg
fiadds
out
add
scas
mull
test
mov
ja
add
add
pop
nop
inc
push
lea
push
push
push
push
push
push
push
push
lea
push
call
jnp
xchg
pop
add
lods
stos
add
add
stos
mov
aam
int
rcr
add
push
sbbb
icebp
jl
add
add
fildll
in
add
fiaddl
fldcw
rcrb
jns
add
add
icebp
les
add
stos
lret
mov
scas
xchg
push
add
mov
lea
pop
nop
nop
push
xor
shr
add
pop
cmp
jb
xor
push
push
lea
push
push
push
push
push
call
cld
add
lock
xchg
add
hlt
add
call
add
add
ja
add
xchg
test
add
push
jnp
enter
stos
call
push
addb
add
pop
add
add
scas
fistpll
addb
add
add
lret
lock
ja
test
mov
mov
leave
push
lret
add
xchg
add
arpl
jmp
push
xor
rol
dec
pop
mov
add
movzwl
push
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
loope
add
addr16
pop
add
rcrl
add
mov
add
pop
lret
xchg
pop
push
mov
int
add
lcall
lret
in
mov
xchg
add
add
add
add
jmp
add
add
add
add
iret
add
add
out
mov
arpl
in
jge
out
popa
add
imul
loop
mov
mov
lea
pop
mov
add
mov
push
push
push
push
push
push
push
lea
push
push
lea
push
call
lods
fistpll
pop
add
mov
push
neg
mov
mov
fidivrl
in
nop
add
add
add
cmc
push
add
mov
add
popl
add
xchg
add
xchg
add
arpl
xchg
fs
insb
mov
movsl
lahf
rolb
movsl
mov
stos
add
mov
cmpsl
idivl
mov
lods
add
testl
mov
add
add
xchg
add
mul
pop
mov
lea
pop
xor
push
push
lea
push
call
mov
add
push
fidivl
add
call
mov
mov
mov
jbe
mov
scas
les
add
add
test
add
loopne
jl
add
fidivrs
push
call
add
add
notb
push
sti
cwtl
mov
arpl
add
mov
add
add
mov
mov
mov
add
rolb
mov
lea
pop
xor
shl
xor
push
sub
add
sub
xor
pop
shl
xor
push
push
lea
push
push
push
lea
push
push
push
call
add
add
mov
add
js
jmp
out
push
je
mov
in
test
imul
add
pop
add
test
add
mov
mov
add
add
add
repnz
jmp
sti
add
mov
add
shl
add
xchg
add
add
lret
add
aad
mov
and
loope
push
dec
not
pop
xor
mov
push
rol
pop
add
pop
pop
push
push
push
push
push
push
lea
push
lea
push
call
test
add
add
lock
cmc
insb
mov
hlt
out
shr
hlt
add
aad
add
add
add
mov
add
xchg
lods
pop
push
stc
add
add
leave
add
nop
lods
xchg
add
stos
xchg
mov
pop
xchg
add
sti
xchg
add
mov
popf
mov
sbbb
bound
add
add
and
pop
leave
push
pop
ret
push
sub
pop
push
mov
push
inc
inc
pop
push
push
sub
add
lea
pop
push
push
push
dec
pop
push
push
push
push
push
lea
push
call
add
add
scas
ljmp
add
add
add
int3
lods
test
add
mov
test
mov
movsb
add
add
push
push
out
int3
loope
jnp
push
add
add
mov
add
pop
add
mov
bound
repnz
iret
fiadds
jecxz
add
pop
lret
add
hlt
lock
lcall
add
add
pop
add
add
mov
add
add
pop
mov
mov
mov
push
lea
push
push
call
add
jnp
stc
jno
rolb
add
add
add
add
mov
cwtl
pop
mov
push
jmp
sti
lret
testb
add
cmpl
cwtl
subl
add
int
add
cmc
in
add
mov
mov
mov
mov
lock
add
mov
add
test
mov
add
add
mov
orl
test
pop
mov
test
je
push
sub
sub
shl
pop
mov
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
testb
add
add
jno
pop
add
jnp
jnp
add
add
std
mov
out
mov
add
add
mov
lea
enter
loope
xchg
add
fnstsw
add
cmc
stos
add
add
add
scas
aam
repnz
add
lds
jle
movsb
pop
fdivr
jmp
mov
stos
jmp
add
jnp
cld
lea
pop
mov
push
dec
sub
add
pop
mov
push
push
lea
push
call
mov
icebp
add
add
xchg
js
push
lret
fcomps
add
add
movsl
mov
pop
cwtl
add
add
jns
test
out
call
jb
leave
mov
add
mov
repnz
mov
push
nop
fs
push
sahf
push
add
rcrl
add
imul
push
add
aad
jle
push
mov
lea
pop
inc
push
push
push
push
push
push
push
call
icebp
std
mov
add
cmpsb
jmp
sar
push
in
lcall
in
cltd
jmp
jbe
pop
add
add
outsl
mov
add
add
fstps
add
add
ret
cmpsb
xor
cltd
add
jne
push
add
add
cmpsb
add
jecxz
mov
mov
add
add
add
jnp
andl
add
add
add
pop
cmp
je
push
push
push
push
push
push
push
push
lea
push
call
add
push
mov
test
add
mov
xchg
mov
rclb
add
jnp
mov
xlat
jle
into
mov
add
roll
add
subb
xchg
add
mov
add
add
add
mov
incb
xchg
add
add
mov
xchg
int3
add
mov
add
fnsave
xchg
movsl
mov
add
add
pop
test
je
push
push
lea
push
push
lea
push
push
push
push
push
call
cwtl
xchg
xchg
add
cwtl
add
add
addl
mov
xchg
add
lock
nop
out
add
call
orb
cmc
std
arpl
cmpsb
jl
add
pop
fnclex
add
testl
add
loopne
test
mov
mov
add
rcrb
bound
cmpsb
jmp
add
mov
mov
out
add
add
fmull
push
push
push
lea
push
push
push
push
push
push
push
push
call
add
je
fnsave
ret
pop
lds
std
movsl
rolb
add
nop
in
add
add
add
add
popl
movsl
push
out
mov
pop
add
jb
add
bound
add
stos
add
mov
mov
cmc
mov
pushf
mov
cmpb
add
add
aam
aam
bound
pop
inc
push
add
shl
xor
pop
cmp
je
push
push
push
push
push
push
push
push
push
call
add
xchg
push
int3
mov
jnp
jle
add
sti
add
add
mov
add
push
add
gs
pop
fiaddl
out
stos
add
add
xchg
fisubs
aad
add
add
lea
mov
mov
xchg
stos
push
aad
popl
aam
jo
call
and
test
jne
push
push
push
push
push
push
push
push
lea
push
push
call
aad
add
test
lock
shll
rolb
pushf
push
add
push
mov
xchg
jmp
ret
ret
add
movsb
roll
jns
movsb
push
add
mov
ja
add
mov
rcrb
add
mov
add
pusha
aad
in
leave
aam
add
push
mov
mov
add
fildl
orl
xor
push
not
add
sub
pop
pop
push
push
push
lea
push
lea
push
push
call
add
push
add
xchg
subl
push
test
in
jmp
add
add
in
mov
add
add
bound
add
movb
aam
add
mov
loope
test
xorl
stos
rcl
insb
pop
cmpsl
add
jnp
loop
push
jmp
fmull
push
push
push
push
push
push
push
push
push
call
fcmovnu
rolb
mov
lods
add
roll
add
push
add
fsubs
add
add
add
movsl
ljmp
jne
cmpb
add
scas
mov
add
test
add
mov
pusha
popf
jns
cmpsb
arpl
add
incb
imul
scas
add
add
mov
outsl
add
add
pop
pop
pop
push
push
call
push
pusha
add
add
add
add
pushf
add
out
pop
add
add
lret
ljmp
add
add
add
rclb
add
add
add
pop
add
cwtl
add
add
add
hlt
fldl
out
in
rcl
pop
cmc
mov
lea
pop
leave
ret
mov
push
xor
pop
inc
cmp
jne
lea
push
rol
shr
pop
mov
test
je
mov
push
push
push
push
push
call
incb
add
outsl
insb
mov
jecxz
add
add
andl
scas
rcll
jno
mov
add
add
js
add
add
data16
add
popa
add
les
jge
data16
in
arpl
lret
add
add
add
mov
lea
pop
add
push
lea
push
push
push
push
push
push
push
push
push
call
mov
add
addl
xchg
add
in
data16
out
aam
add
xchg
aam
fmuls
icebp
add
add
arpl
in
icebp
add
imul
mov
pop
pusha
mov
or
loop
add
add
aam
movsl
fwait
xchg
add
cmpsb
rolb
rol
jb
add
add
mov
fwait
mov
lea
pop
cmp
jne
push
push
call
add
add
add
xchg
jb
add
call
data16
add
mov
add
mov
add
int3
imul
push
add
add
in
out
iret
add
ficompl
cli
lods
into
add
add
add
xchg
push
call
add
jge
add
sahf
cmpsl
add
xlat
loop
subb
add
add
add
cld
lea
pop
mov
test
je
push
lea
push
push
call
test
add
xchg
in
xchg
loope
in
fistps
add
cmc
icebp
popf
sti
mov
into
push
add
add
insb
mov
jecxz
adcb
jae
add
ficompl
sti
add
jbe
aad
add
movb
mov
popl
fldl
add
add
add
add
push
pusha
xchg
aad
lret
jnp
add
movsb
add
testb
imul
aam
bound
mov
add
cmp
je
push
push
push
lea
push
push
lea
push
call
add
loop
add
iret
pop
add
add
loope
cmc
je
lret
jge
popf
test
int3
add
push
hlt
rol
lea
lds
out
add
add
add
add
movb
movsl
mov
jp
test
xchg
mov
fwait
icebp
rolb
jns
pop
fdivl
add
pop
lods
fcoms
cld
lea
pop
jmp
xor
pop
push
push
lea
push
push
call
mov
fsubrl
jbe
pusha
add
out
add
jle
add
mov
loope
add
mov
add
in
push
out
movsl
add
add
add
jl
jmp
ror
repnz
fldt
add
nop
std
add
pop
cld
mov
movsb
mov
imul
add
shl
add
pop
pop
pop
pop
push
shr
pop
leave
ret
lea
push
push
push
push
push
call
les
add
add
add
add
out
in
add
mov
mov
je
clc
add
filds
add
test
mov
lds
mov
pop
xchg
add
flds
movsl
test
cmpsl
push
xchg
stc
lcall
scas
push
cmpsb
loope
iret
mov
test
jo
add
pushf
add
pop
pop
pop
push
not
pop
pop
pop
push
add
ror
pop
leave
push
pop
ret
push
dec
sub
pop
mov
pop
push
push
push
lea
push
push
push
push
lea
push
push
push
call
add
push
insb
add
mov
gs
cmpsl
lcall
int
add
aam
add
jmpw
xchg
test
mov
add
loop
mov
push
aad
lahf
add
add
mov
sbb
add
enterw
add
clc
add
idiv
mov
ja
add
in
pop
mov
pop
push
rorb
mov
mov
add
add
add
sub
pop
pop
push
pop
leave
ret
push
sub
xor
pop
rol
push
push
push
push
push
call
jle
shl
add
cltd
lcall
pop
lret
jecxz
add
xchg
cmpsl
add
mov
add
mov
out
add
add
pop
add
pop
add
add
test
add
sbbb
mov
movb
jmp
cwtl
xchg
lcall
cmc
ljmp
faddl
fs
mov
lea
pop
rol
push
push
push
push
call
pushf
add
add
add
pop
jecxz
add
cmpsl
testb
addb
enter
mov
add
test
mov
ljmp
lahf
enter
pop
add
add
add
mov
faddl
add
add
sahf
add
enter
add
data16
jns
rol
cmpsb
add
add
add
shrb
aam
ffree
pop
pop
incb
add
add
pop
xor
push
sub
pop
inc
cmpb
jne
ret
adc
jno
xchg
and
and
xchg
and
pop
and
adc
and
fisubl
jno
scas
and
push
and
mov
jno
push
cmp
adc
jno
add
add
sub
mov
push
mov
push
psraw
push
sub
or
out
push
or
in
fmulp
sti
mov
fscale
adc
lock
jns
sub
shl
mov
pusha
stc
stos
cmpl
adc
and
xchg
adc
aas
sub
mov
mov
jecxz
pop
loop
lods
mov
cwtl
inc
mov
iret
test
jnp
test
in
xchg
jle
mov
mov
mov
inc
dec
mov
pop
ficompl
add
loope
fidivl
push
mov
mov
jle
jge
leave
lods
dec
aaa
in
sub
and
sbbb
mov
mov
cmp
mov
inc
cmp
loop
lret
lcall
aas
adc
ja
cmp
inc
add
xchg
or
pushl
inc
push
insb
dec
mov
mov
stos
out
and
out
arpl
ds
sub
dec
cmp
add
pop
mov
mov
mov
out
xchg
sbb
pop
iret
mov
mov
or
outsb
add
mov
std
mov
cmpsl
or
xchg
orl
mov
mov
jecxz
ds
push
xor
push
ret
pop
out
cmpsb
scas
aas
gs
enter
sbb
push
bound
mov
imul
inc
add
mov
or
sbb
and
add
jl
mov
rcl
ds
les
jg
psrlq
push
and
test
rolb
ljmp
gs
dec
pusha
loope
stos
inc
cmp
mov
bound
popa
mov
xchg
xor
xchg
adc
add
ret
lods
stos
and
mov
pushf
aam
inc
sbb
inc
jle
pop
popf
jecxz
sub
sbb
dec
out
cwtl
cmp
fsts
jge
push
sub
movsl
adc
pusha
imul
push
xchg
shr
cmp
jo
ja
mov
inc
xor
dec
repnz
pop
push
sbb
nop
mov
insl
mov
sub
cmpsl
fstpt
arpl
and
pop
mov
popf
mov
jae
lea
outsl
jae
mov
jmp
dec
push
outsl
daa
iret
jg
pop
icebp
pop
xor
jns
call
pop
in
bnd
in
into
add
xor
adc
pusha
or
sbb
xor
sti
pop
mov
pop
mov
pop
repnz
clc
test
push
cwtl
ret
inc
inc
icebp
pop
inc
insl
lods
out
mov
jo
jmp
lods
lods
push
outsl
fildll
mov
add
pop
daa
xchg
jecxz
shlb
sbb
inc
repnz
in
jg
and
lds
inc
jnp
mov
cmp
push
add
std
lret
pusha
lret
dec
xchg
loop
sub
mov
cmc
and
sub
les
fnsave
cs
cmp
xchg
jo
cmp
sub
mov
dec
ja
loope
out
negl
sub
xchg
sti
pop
jo
sbb
push
lcall
mov
scas
sarl
add
mov
call
sbb
leave
stc
push
aad
push
dec
cmp
sbb
pusha
rorb
fimuls
in
pop
sbb
jp
push
in
push
nop
daa
fldenv
sahf
jno
bound
pusha
jecxz
movsb
jbe
lahf
in
sahf
mov
or
add
movsb
push
xor
dec
fldenv
pop
jg
mov
loopne
jecxz
xchg
inc
out
cmp
sbb
pushf
addr16
mov
adc
push
or
sahf
push
aas
mov
fldcw
mov
pcmpgtw
loop
loopne
push
cs
or
xor
in
rorb
outsb
mov
jno
add
popf
es
inc
outsb
sub
test
aad
inc
movsb
or
repz
pop
cltd
cmp
xchg
dec
out
push
iret
and
ss
insl
push
in
dec
insb
mov
jne
ud2
lret
push
cmc
inc
push
jae
jno
daa
or
fcoml
dec
dec
jnp
out
fwait
xchg
dec
mov
pop
test
je
pop
fdivrl
adc
insl
and
loope
cltd
popa
out
mov
adc
mov
cmp
sarl
inc
mov
ret
jmp
leave
daa
repnz
aad
xchg
shrb
adc
pop
cmp
mov
dec
adc
arpl
sbb
cld
loopne
pushf
roll
pop
fwait
movl
dec
lods
push
je
lcall
push
movsb
mov
cmpsb
js
inc
adc
popf
sub
jns
inc
je
jbe
scas
sbb
insb
mov
cmp
mov
icebp
mov
cs
hlt
sahf
shr
adc
std
xor
repnz
loope
xchg
xchg
inc
mov
push
cmc
cwtl
mov
adc
in
into
add
inc
mov
das
popf
leave
ss
or
xorb
pop
adc
jnp
dec
sbb
mov
cmc
shll
cmpsb
xchg
ljmp
mov
cwtl
mov
mov
mov
xchg
xchg
int3
hlt
xchg
call
cwtl
pushf
dec
rorl
sub
shlb
cltd
add
sub
pop
ss
pushf
mov
mov
xor
stc
mov
popf
fdivr
lods
cmp
sbb
fnstcw
sub
call
lods
sub
pop
jb
sub
inc
call
and
and
cmp
or
inc
push
imul
pop
cmp
sahf
push
outsl
xor
mov
les
testb
sub
push
mov
out
mov
shrb
sti
mov
mov
out
push
jb
xor
pop
cmp
out
and
leave
test
aad
jg
cmp
dec
in
mov
push
in
xor
or
fisttpll
loopne
inc
lcall
inc
out
cmp
xlat
sbb
shrb
pop
pop
sub
loopne
stos
push
out
mov
add
call
rolb
pop
fidivs
xchg
sahf
mov
sarl
or
add
mov
inc
mov
ret
lea
testl
push
push
hlt
popa
imul
daa
imul
sbb
in
insl
xorb
fdivs
cmp
popf
setl
pop
dec
mov
lods
mov
in
add
jae
in
sub
inc
inc
scas
and
sub
xor
add
daa
sti
mov
bound
in
popa
mov
lahf
cld
stc
dec
scas
and
jae
mov
aaa
es
add
inc
icebp
ljmp
test
dec
jge
push
push
xlat
pop
cltd
test
cmp
jecxz
sti
mov
pop
jmp
imul
mov
lods
mov
xchg
and
mov
push
jns
inc
clc
push
dec
sti
leave
lahf
cs
dec
dec
pop
leave
outsl
ds
movsb
cmp
pop
and
adc
testl
lods
pop
gs
out
mov
leave
dec
pop
insb
sub
push
movsb
mov
mov
aam
jmp
mov
nop
gs
ret
sbb
add
adc
test
xor
mov
jg
jns
or
fs
xchg
xchg
or
jge
sbb
xchg
adc
popf
imul
push
xchg
test
es
cmpsb
cmpsb
add
inc
jg
in
daa
fwait
mov
popf
mov
xchg
jno
mov
mov
dec
ds
jae
movl
icebp
ret
dec
mov
dec
loope
insl
xchg
out
or
jle
ret
jp
sbb
cmpsl
repnz
fwait
test
clc
mov
scas
inc
or
fnstcw
neg
jecxz
test
push
shl
jle
pushf
popf
jmp
popf
scas
les
inc
and
lahf
xor
cmp
xchg
or
push
or
inc
imul
add
sub
mov
sub
fisttpll
inc
pop
lds
xor
add
shlb
imul
jno
or
jmp
cli
icebp
sbb
xor
dec
add
fdivs
push
movsl
or
mov
dec
jns
mov
aad
inc
or
mov
cwtl
push
dec
mov
leave
dec
clc
sbb
or
addr16
imul
addr16
cmp
mov
inc
clc
mov
lea
inc
rorl
idivl
out
xchg
xchg
xor
push
lcall
cmc
and
fwait
xor
movsl
aas
dec
popf
mov
jg
shl
dec
lods
mov
daa
fcompl
adc
sub
xchg
lock
pop
push
sub
mov
xchg
dec
mov
mov
mov
jge
insl
enter
rclb
std
mov
mov
fdivrp
cs
cmp
leave
stos
xor
push
sub
mov
adc
xchg
inc
fwait
shrl
sub
fsubl
jp
xchg
mov
pop
jecxz
mov
scas
inc
pushf
imul
adc
mov
mov
mov
and
mov
and
rclb
cmpsl
add
outsb
popf
adc
imul
les
add
mov
pop
adc
dec
call
mov
hlt
imul
adc
cmp
or
out
data16
dec
hlt
and
sbb
adc
dec
push
shrb
pop
inc
pop
sub
mov
notb
xor
dec
pop
shl
outsb
enter
loope
xchg
mov
jb
xchg
mov
fildll
xchg
and
or
mov
daa
and
cmp
inc
aam
inc
icebp
shlb
dec
cltd
cmc
mov
stc
inc
divb
lods
push
jno
jmp
add
pop
and
xchg
inc
cmpsb
leave
cmp
repz
call
lea
mov
xchg
xchg
push
ds
imul
ja
sti
mov
das
out
and
lret
fnstcw
add
stc
es
mov
mov
mov
mov
ja
and
mov
xor
push
lcall
imul
push
sub
or
test
enter
dec
ljmp
cmp
cmc
dec
push
outsl
scas
push
inc
fnstsw
inc
outsb
mov
loope
jge
mov
cli
xor
cmc
iret
data16
xor
sbb
jns
subl
incl
ja
shrb
adc
fidivl
or
repnz
movsb
fmull
es
pop
popf
in
ss
stos
pusha
dec
mov
je
mov
cmp
adc
dec
or
sub
push
or
xchg
cld
mov
lcall
sbb
cmp
cmc
cmp
sbb
xchg
dec
out
or
aam
stos
pop
xchg
cmp
adc
mov
xchg
jle
andb
jae
nop
fidivrs
dec
sbb
lcall
int
adc
mov
inc
loop
and
cli
data16
sub
loope
movsl
jl
ja
data16
sbb
aas
std
mov
addb
out
in
jg
leave
mov
mov
push
stos
push
call
mov
pusha
jmp
and
ret
fisttpll
jl
cs
clc
jl
sbb
in
por
mulb
stos
push
dec
mov
mov
or
wbinvd
inc
das
repnz
xchg
jae
inc
fadd
shl
pop
mov
scas
lahf
enter
push
js
rcrl
fsubp
lret
mov
mov
mov
pop
xchg
fdiv
popf
cltd
adc
dec
imul
les
nop
iret
lds
pop
xor
js
je
sub
or
cmpsb
scas
xor
push
adc
and
pop
mov
jmp
xchg
in
lret
je
iret
loop
sbb
sti
out
xchg
xchg
rorb
insl
or
test
jp
aaa
nop
les
and
and
sbb
test
flds
xor
cmp
or
add
icebp
sbb
aaa
and
loopne
mov
add
je
push
add
xchg
pop
cmpsl
aam
cmp
pop
push
fwait
adc
mov
loop
mov
push
cltd
xchg
xor
rolb
nop
fs
lret
jge
push
stos
arpl
mov
ss
daa
std
loopne
int
inc
out
sarb
hlt
sub
dec
popf
cmpsl
push
pop
ss
mov
daa
pushf
out
das
sub
adc
testb
sbb
mov
xor
xorl
adc
sub
or
inc
loop
fistps
add
jns
in
mov
dec
jg
mov
pop
lock
flds
mov
push
addr16
or
jbe
push
decl
movsl
test
fcomip
les
jmp
lea
cli
pop
lahf
stc
imul
ret
and
pop
inc
adc
and
or
or
sti
add
cs
add
fistps
jne
dec
decb
inc
ret
adc
pop
xor
jl
mov
js
dec
loopne
xor
dec
push
dec
wrmsr
ret
out
js
fabs
cs
mov
loopne
dec
mov
js
or
stos
orl
inc
add
mov
push
dec
jns
cmp
cltd
into
inc
gs
fucomp
in
popf
les
or
dec
inc
mov
cmp
mov
shrl
pop
jle
daa
call
cli
loope
pushf
push
mov
pop
cmp
into
insl
shl
call
xchg
outsb
push
and
lea
out
movsb
fdivl
cmp
lret
cmp
shr
ljmp
fiadds
pop
ds
cmpsb
inc
mov
fiaddl
add
push
add
cld
loopne
out
jbe
icebp
arpl
dec
lods
xor
orl
xor
ss
jbe
mov
xor
insb
jns
xor
lods
cld
psrld
jmp
push
xor
xor
cmpsb
in
add
sahf
push
es
dec
or
jp
mov
fs
inc
shld
mov
push
cmp
adc
lds
pop
mov
mov
xchg
mov
xchg
sbb
pop
mov
mov
jnp
or
jge
cmp
add
pop
pusha
roll
jbe
xchg
dec
or
sbb
incb
push
fcompl
mov
repnz
xchg
dec
push
xchg
inc
adc
mov
push
popa
mov
icebp
inc
adc
push
ljmp
push
lock
daa
movsb
js
daa
out
aad
jno
sahf
mov
mov
mov
jle
in
jl
jmp
int
adc
out
aam
and
mov
fsubp
ljmp
inc
enter
fstl
pop
cmp
lea
xor
push
mov
ud0
aad
aad
jge
addr16
hlt
xlat
outsl
imulb
out
das
orl
pop
lcall
fisubrl
push
out
inc
mov
dec
and
mov
sahf
inc
insb
mov
dec
sarb
add
sub
lcall
in
incb
or
push
movsl
push
lods
add
lea
sub
inc
in
mov
das
aaa
mov
popl
mov
xchg
jge
movsl
clc
sub
cmc
inc
stc
rolb
mov
xor
mov
aam
and
cmp
ret
or
lret
mov
addb
sti
aaa
sbb
je
cmp
test
and
mov
sahf
rcrl
mov
adc
gs
in
ffreep
inc
icebp
and
sbb
jbe
cmp
mov
dec
jno
fstl
dec
mov
addr16
cmpsl
inc
clc
pop
lret
aad
dec
lret
inc
inc
add
out
clc
loope
mov
int
sbb
rcrb
mov
jecxz
stos
jnp
jl
movsb
add
jge
imul
xchg
es
js
cld
ret
nop
push
dec
outsl
ds
leave
pop
rclb
cmp
push
and
js
repnz
insl
adc
jg
mov
sub
pop
dec
mov
out
inc
mov
adc
dec
cwtl
inc
bound
xchg
loop
adc
jns,pt
or
lret
stos
aam
imul
add
ret
inc
add
pop
clc
ret
js
fdivl
and
add
ror
lods
and
xchg
stos
mov
les
cmp
inc
in
aaa
cld
add
adc
adc
loopne
cwtl
ljmp
inc
xchg
je
sbb
mov
in
mov
lcall
inc
lods
cmp
fisubs
outsl
pop
ja
out
add
hlt
xorl
push
push
lds
jne
aam
mov
mov
or
test
inc
jne
xorl
into
out
jecxz
mov
add
push
aad
scas
xlat
push
adc
sbb
mov
push
gs
dec
dec
scas
jp
sbb
outsb
mov
fwait
push
je
jg
sub
leave
and
push
data16
jecxz
outsl
xor
pusha
in
sahf
add
or
jle
inc
fidivrs
inc
xor
gs
fidivrl
lea
mov
xchg
pop
pop
cwtl
mov
pop
dec
jle
mov
dec
insb
inc
lock
mov
push
mov
push
iret
mov
cmpb
pop
mov
mov
or
cs
inc
test
push
sub
enter
clc
fisubrs
sub
into
and
dec
repnz
fiaddl
pop
mov
dec
inc
inc
std
data16
jns
int3
outsl
fprem1
fscale
xor
pop
push
ja
sub
inc
dec
fbstp
xorb
dec
int
sub
into
jnp
divl
jecxz
lahf
ret
push
mov
pusha
pop
xchg
push
jnp
mov
cwtl
fdivl
call
and
test
cmp
cs
lods
adc
fistl
jecxz
repz
push
dec
sbb
mov
stos
ret
cmp
xchg
stc
pop
inc
mov
divb
fnstcw
pop
hlt
outsl
pop
popf
movsl
out
and
push
test
stc
arpl
adc
lea
stos
cmp
sub
mov
adc
jno
push
cmp
in
xchg
rcrb
outsb
inc
mov
out
adc
add
into
inc
aaa
jnp
add
mov
subl
popf
je
push
push
addr16
jns
test
or
mov
xchg
xchg
jl
xor
shlb
push
lods
fistl
insb
and
cwtl
lods
pop
imul
xchg
jecxz
inc
addr16
or
in
jnp
mov
mov
int3
xlat
lds
imul
push
scas
lcall
inc
inc
das
std
dec
cld
ljmp
dec
mov
rcrb
fs
sbb
cmp
cltd
adc
xchg
mov
scas
push
xor
pop
mov
dec
or
movsl
shlb
dec
add
lea
in
faddp
dec
pop
inc
cmp
cmp
cmpsb
jno
sbb
ret
std
lahf
xchg
das
dec
mov
lods
adc
lea
and
lea
jp
aad
dec
fwait
lods
test
dec
ret
mov
loope
cli
or
cmp
test
mov
leave
test
or
sbb
sub
pop
cmp
idivl
jge
addr16
stos
or
jecxz
cmp
jbe
sub
add
movsb
cmpsl
sbb
lahf
call
pop
dec
ljmp
jnp
bound
ljmp
ss
or
fisubl
vmovd
jnp
fdivl
je
popf
addr16
sbb
pop
aad
lret
shlb
les
xchg
jecxz
filds
jae
mov
cli
mov
pushf
test
sti
mov
sub
jae
pop
mov
call
addl
in
pushf
mov
adc
sbb
les
ret
push
sbb
iret
xor
sub
mov
jns
sarl
lret
jg
mov
xchg
ret
xor
cltd
pop
subl
and
stos
xchg
stos
sbbl
mov
out
repnz
adc
or
mov
xchg
cli
fsts
jg
cli
std
cltd
bswap
adc
jbe
or
push
clc
pushf
jbe
gs
mov
jmp
arpl
je
sub
into
adc
cmp
cli
add
cmp
adc
pop
loopne
dec
scas
add
mov
mov
fs
jecxz
jne
pusha
pop
adc
popf
popf
jp
mov
pop
sub
in
aas
push
fnstcw
stos
ds
cmpsb
ja
pushf
dec
test
dec
arpl
jg
andb
insl
or
out
js
js
cmp
or
xor
paddusb
sbb
adc
imull
loope,pn
hlt
jg
mov
decl
xchg
adc
xchg
fistl
mov
fisubrs
jb
sub
repnz
and
add
xor
cmpsl
inc
clc
inc
nop
inc
js
jge
data16
inc
int3
mov
mov
jns
add
push
popf
jmp
adc
sbb
or
xchg
fnstsw
inc
push
xchg
adc
pop
daa
mov
dec
dec
cmp
inc
push
out
jb
or
mov
add
addr16
mov
test
sub
lods
sbb
dec
cwtl
hlt
mov
inc
inc
add
xor
and
pop
rorb
scas
push
mov
pusha
inc
push
push
sub
test
add
stos
cmp
add
mov
repz
cli
dec
mov
dec
jae
pop
rolb
jp
inc
add
idivl
xlat
hlt
xorl
mov
add
and
or
push
ss
pop
clc
jno
adc
out
push
add
mov
and
in
sahf
adc
dec
jge
pop
out
flds
outsl
mov
or
fiaddl
or
lcall
ficomps
iret
in
aaa
and
aam
push
sbb
xlat
cmpsb
movsl
inc
in
or
add
testb
jmp
orl
xor
ret
lahf
xor
loop
pusha
ficompl
xor
mov
mov
pop
test
imul
xchg
dec
aad
ret
std
mov
outsl
mov
rolb
push
outsl
sub
push
ret
test
std
xor
or
rorl
adcl
push
adc
in
incb
jle
push
ljmp
adc
arpl
xchg
push
filds
jbe
mov
in
fdivr
mov
pop
mov
mov
les
data16
push
cltd
dec
mov
lods
das
push
pop
adc
insb
or
out
sub
ljmp
mov
jnp
dec
in
mov
call
leave
sbbw
jge
sub
sbb
or
jl
lods
mulb
xor
dec
ja
xor
in
scas
in
push
fdivr
aas
or
pop
mov
xchg
dec
inc
scas
mov
dec
outsb
loop
cmp
jecxz
fdivrs
dec
push
sti
dec
mov
push
ficomps
mov
inc
jnp
les
int3
sbb
das
pop
ss
imul
roll
jae
ljmp
out
iret
push
or
adc
pop
mov
sbb
movsl
xor
pop
shrl
inc
mov
ds
xchg
mov
adc
test
in
sub
fcmovu
sahf
jb
mov
cld
mov
fs
rolb
in
lock
push
or
pop
stos
cs
cs
ret
lea
cwtl
xchg
add
fimuls
shll
pop
or
xchg
and
repz
jp
pop
xor
xchg
xchg
test
fwait
and
jno
int
lock
jns
popf
movsb
inc
push
pop
mov
jae
inc
jae
cmp
xchg
sub
dec
jno
lfs
push
pushf
clc
fistl
push
xor
jbe
syscall
push
inc
mov
fstp
push
adc
pop
cmp
ret
or
fwait
and
or
out
daa
pop
add
sub
inc
sub
add
xor
call
mov
xor
ror
clc
dec
add
pop
push
adc
fs
mov
divl
lods
test
hlt
pop
push
cmp
cmpsl
jle
lea
inc
cmc
adc
subl
stos
fisttpll
or
mov
mov
test
jg
push
sub
mov
shlb
jns
in
jg
loopne
mov
mov
pop
imulb
call
pop
pop
pop
jne
cmp
jmp
lds
sbb
decl
subl
adc
sahf
push
push
sbb
std
pop
mov
cld
scas
ja
adcb
push
xchg
jo
fs
sub
aad
orps
sub
xlat
pop
call
scas
test
aas
push
shr
int
jb
dec
sub
rorb
dec
cmp
sarl
es
imulb
ljmp
dec
adc
adc
stos
mov
js
sbb
lcall
xchg
popf
push
and
push
jg
mov
and
mov
pushf
ja
push
dec
push
xchg
inc
or
test
dec
aas
jge
adc
inc
mov
test
iret
cmp
mov
push
int3
and
dec
push
xchg
data16
lret
mov
mov
arpl
mov
or
dec
or
js
fmuls
jp
xchg
and
in
add
lea
rolb
outsb
fwait
mov
cs
push
aas
jnp
je
xor
scas
jg
fistpll
scas
push
imul
pop
jo
push
sbb
rorl
jo
xor
lcall
adc
test
jp
push
jb
ja
out
jne
ret
lcall
lsl
sub
xchg
js
push
iret
sub
in
cwtl
jl
adc
addb
push
stc
das
mov
cmpsb
add
jl
ja
sbb
and
jg
dec
inc
push
sti
insb
mov
push
adc
dec
add
dec
addr16
cmc
dec
push
fisttpl
pusha
outsl
mov
out
jge
mov
insl
out
pop
or
movsb
sub
les
mov
js
cmc
movsb
fst
popf
cld
call
jg
cmp
add
cmpsl
mov
pop
add
rolb
pusha
sub
int
mov
pop
arpl
in
mov
pop
pop
iret
ljmp
mov
inc
nop
jne
test
mov
push
sub
insb
mov
dec
mov
orb
loope
imul
pop
dec
mov
adc
outsb
xlat
stos
jl
mov
and
icebp
sub
cmp
rolb
movsb
rcr
mov
pop
push
and
mov
sub
cmc
or
adc
or
pop
stc
movsb
push
inc
jl
xlat
std
call
mov
pop
lahf
cmp
ljmp
jae
js
rcll
jmp
jo
inc
xor
das
dec
and
scas
stos
in
loope
mov
inc
fsts
aam
addr16
popa
push
cmp
adc
inc
push
jecxz
ret
ret
dec
mov
in
lods
imul
xor
add
mov
push
test
adc
sbb
dec
mov
xchg
cmp
inc
adc
cld
pop
popf
mov
mov
shlb
js
mov
push
inc
mov
mov
lods
push
cmp
xchg
ds
or
xchg
adc
jl
xor
xor
cltd
add
int3
rcl
neg
out
fucom
xchg
test
cmc
cwtl
fstl
das
mov
call
ret
bnd
adc
cli
or
adc
jns
lds
mov
repnz
xorl
sbb
jmp
jle
aaa
ja
int3
dec
leave
mov
rcl
adc
dec
inc
cmp
test
imul
inc
jge
in
xor
mov
sbb
pop
insl
xchg
or
add
out
dec
daa
inc
push
fnstcw
adc
or
leave
test
pop
and
sbb
jge
or
rcl
fbld
mov
xchg
mov
push
mov
int3
fisubs
mov
popf
int3
out
rorb
adc
lock
push
push
fwait
stos
add
jbe
push
inc
dec
adc
into
or
or
pop
sbb
pop
arpl
fildll
gs
pop
rolb
sbb
sarb
xchg
sti
dec
or
inc
and
rcll
mov
pop
or
add
jbe
inc
or
je
test
and
ss
jno
or
sub
shll
jnp
pop
inc
aam
mov
rol
inc
mov
cs
leave
xor
sub
mov
cmp
int
jl
dec
andb
leave
sbb
jg
mov
das
test
adc
inc
xor
xor
gs
rcll
scas
cmp
push
mov
es
cmp
sbb
jge
add
push
sub
sbb
mov
es
mov
mov
push
test
pop
mov
pop
cmpsl
inc
jp
sahf
mov
mov
test
ret
int
lock
insl
enter
sbb
mov
push
push
testl
jge
push
fistpll
stos
mov
fidivrs
fidivrl
pop
loop
or
call
xchg
aad
jne
mov
jle
arpl
stos
fs
cmp
cld
cltd
shl
inc
sbb
insb
int
rcrl
add
adc
cmp
sbb
push
mov
inc
outsl
ds
lods
push
add
pop
gs
mov
jl,pt
pop
mov
mov
mov
pop
in
xchg
sti
xor
or
pop
int
xorb
xor
mov
pop
les
pop
inc
hlt
aad
test
fucomi
arpl
add
jle
mov
das
dec
insb
popa
leave
lea
mov
xchg
insb
lods
loopne
insb
push
and
ds
push
push
xor
or
adc
divl
aam
mov
ja
popa
sahf
es
mov
cmc
ja
fwait
loope
popf
or
dec
mov
push
mov
imul
testl
imul
cmp
fiadds
test
cmp
add
lods
sub
loopne
scas
popa
into
add
mov
cmpsb
daa
mov
mov
adc
imul
popa
xchg
mov
or
mov
js
xchg
dec
enter
pusha
lcall
push
pop
push
jns
leave
fsts
add
out
xchg
jno
inc
sar
insb
xor
inc
clc
stc
movsl
pop
mov
mov
int
aaa
lds
mov
call
push
xor
and
or
cmpsl
std
pop
or
call
cli
test
jmp
or
sbb
dec
dec
add
ljmp
jge
movsb
cltd
aad
rcrl
stos
pop
cli
fldt
ds
sbb
adc
xor
mov
or
dec
scas
jae
repz
loope
jbe
or
and
adc
in
sub
cld
sub
lret
repz
jge
cmp
fidivl
sbb
sub
leave
aaa
jle
out
jg
fucomi
mov
lods
fisubs
sub
out
fsub
push
cld
out
cmp
xchg
pop
sarb
icebp
cltd
or
or
jae
xor
push
and
dec
jecxz
mov
push
in
es
data16
lock
xor
call
mov
jl
das
pop
pushf
pop
xchg
cltd
aas
jp
sbb
rorl
shll
or
mov
xor
test
pop
pushf
icebp
jns
mov
sub
push
xor
call
add
lahf
pusha
and
pop
dec
roll
jbe
sbb
loope
mov
aas
push
sub
inc
pop
clc
daa
or
fstpl
jne
sub
jb
ljmp
pop
dec
adc
int
aaa
push
dec
mov
mov
xor
test
pop
add
push
xlat
dec
cmp
jge
cmpsb
jecxz
and
add
cmp
jmp
mov
xlat
or
or
bnd
mov
jb
in
adc
pop
scas
dec
aam
out
iret
push
xlat
push
ja
rcrl
push
mov
adc
out
xor
cmp
xor
out
test
fwait
and
es
inc
inc
test
inc
xor
cmpb
addb
xor
loope
shl
outsl
mov
cmp
sbb
pop
sbb
xor
ffree
pslld
stos
pop
filds
bound
das
mov
jg
sti
xchg
clc
lods
rcl
fs
and
loope
outsb
and
out
jmp
cmp
xchg
aam
ret
adc
inc
mov
aam
jb
fbstp
test
mov
mov
jmp
movsl
mov
mov
mov
loope
fisttpll
mov
or
sub
push
hlt
cmc
dec
mov
lret
sub
mov
lock
push
ret
mov
sbb
jecxz
mov
and
loope
or
imulb
dec
fisubrs
je
xchg
cmp
mov
js
xchg
in
xor
mov
in
jge
out
mov
ret
test
mov
or
or
push
xchg
sub
mulb
cmp
hlt
pusha
mov
lahf
sahf
xorl
insl
lock
pop
in
or
dec
xchg
bound
cvttps2pi
addr16
js
add
xchg
cmp
rcll
xorl
mov
fs
cmp
cmp
out
or
jae
pop
lahf
mov
add
pop
ficomps
adc
adc
cli
inc
ret
push
pop
imul
jl
lock
mov
subb
sbb
pop
cld
cmp
pop
lea
fcompl
and
test
or
cmp
rcrb
test
neg
jl
pop
mov
cmpsb
push
mov
fcmovnbe
sub
sbb
lods
cmpsb
ret
pop
js
pop
hlt
nop
fldl
pop
mov
and
mov
sbbl
xchg
fidivs
push
pop
cld
xchg
push
adc
lds
int3
jo
mov
mov
in
jecxz
hlt
cwtl
iret
push
jmp
xchg
int3
mov
lea
mov
mov
xor
and
cmp
call
sti
sbb
loopne
call
xor
dec
cmp
mov
mov
jl
xchg
jo
dec
xchg
mov
push
pop
sub
dec
es
fstps
movsl
mov
xor
ret
xchg
icebp
sar
cmp
loopne
cwtl
xor
mov
and
cltd
dec
sub
pop
aad
add
shl
sahf
mov
inc
in
and
or
mov
ja
hlt
xchg
insl
dec
dec
mov
leave
rclb
jp
push
scas
or
and
jno
add
sarb
iret
jbe
dec
mov
sbb
ljmp
jmp
cmp
movsl
sbb
mov
shll
or
int3
sti
xor
sub
enter
popa
jl
nop
xlat
pop
inc
data16
sub
imul
test
es
mov
cmp
sub
gs
stos
out
pop
lods
sahf
xor
mov
jge
movsl
lods
inc
xchg
ljmp
lock
dec
and
jbe
enter
add
scas
push
and
mov
push
stos
in
imul
cmp
adc
shrl
mov
mov
fidivrs
ss
sub
shl
fwait
dec
loopne
xchg
cmp
push
popa
sub
jg
cmp
mov
xchg
pop
mov
out
repnz
or
adc
adc
filds
inc
into
sbb
outsl
or
stos
xor
add
xor
imul
outsl
testb
or
out
pop
cmp
sbb
aad
daa
adc
in
sbb
pusha
mov
sub
pushf
add
jb
shlb
dec
fcomps
aad
jmp
xchg
mov
and
cmp
clc
arpl
push
outsl
adc
loope
sbb
stc
xor
ds
sbb
jb
pop
xchg
xchg
and
pop
mov
scas
mov
xor
xchg
fs
mov
cmp
stos
inc
sahf
mov
inc
scas
sub
dec
fistl
lock
cmp
push
xchg
sbb
sbb
jmp
fcmove
fimull
dec
and
mov
ret
mov
mov
leave
lahf
push
enter
adc
add
lcall
mov
lcall
dec
push
dec
sbb
fs
fldz
cmp
aad
adc
lret
loop
std
rorl
outsl
jno,pt
rclb
xchg
imul
lods
push
jno
mov
test
xlat
pop
in
inc
mov
xchg
dec
mov
or
pop
sub
mov
add
fisttpll
xor
or
jnp
gs
push
pop
aad
push
adcl
fdivr
les
xor
add
cmc
xchg
cmpl
and
test
adc
scas
rcll
push
mulb
leave
sub
xchg
rcrb
jbe
jp
xor
or
call
mov
add
outsb
inc
pop
repnz
std
cmpsb
fstps
les
in
imul
aaa
fisttps
movsl
mov
push
add
pushf
mov
icebp
push
sub
out
loopne
imul
ss
les
mov
adc
push
xchg
xchg
insl
xor
mov
and
mov
push
xchg
dec
push
jbe
sar
xor
xchg
inc
xor
xchg
nop
mov
and
arpl
push
cmp
out
cmc
faddl
rorb
ret
or
neg
mov
cmp
ljmp
outsb
xor
pushl
das
rcrl
ja
sahf
or
mov
push
andb
cwtl
inc
shrb
pop
jne
or
dec
xor
jbe
sub
jns
cli
ja
lods
fadds
out
loopne
pop
or
mov
sbb
push
mov
subb
jl
adc
sub
sbb
xchg
and
mov
push
jo
mov
dec
dec
int
rorl
bound
inc
stc
or
cmpsl
shl
xchg
sub
cli
ja
daa
mov
jl
inc
mov
jmp
sbb
sub
mov
mov
ffreep
in
movl
enter
pusha
pop
int
adc
mov
fs
movsl
adc
rcrb
hlt
in
incl
in
adc
outsb
scas
ds
push
div
outsb
ret
adc
dec
fisubrs
pop
push
or
jg
rep
dec
imul
dec
lahf
shlb
ljmp
sahf
mov
pop
push
repnz
push
jbe
sub
and
lock
cmp
dec
cmpsl
das
mov
aas
xchg
pop
xsave
psrlw
inc
pop
jle
add
inc
or
into
mov
or
stos
sub
call
fwait
stc
scas
xchg
cmp
or
xchg
xchg
mov
inc
ss
cmp
daa
inc
inc
jmp
mov
sub
push
out
loope
mov
insb
jo
subl
addl
shlb
fs
rcrl
repnz
mov
push
adc
add
cli
xchg
jl
jl
jne
cwtl
adc
ret
jle
add
sbb
sub
inc
and
lahf
mov
stc
cmp
or
aas
add
cmp
cmp
xor
mov
xchg
lock
mov
mov
sub
jae
push
or
inc
ljmp
inc
xor
jnp
fldcw
xchg
jmp
push
mov
roll
lods
add
jg
outsb
divl
xor
lcall
dec
mov
xchg
shl
in
cmp
and
rcrl
sarb
jl
or
xchg
add
sbb
nop
sub
inc
xor
cs
sbb
jne
aaa
xor
mov
dec
or
popl
mov
les
in
shll
cltd
into
dec
inc
mov
or
rorb
mov
jns
sub
or
and
repnz
inc
iret
ljmp
jns
xchg
jl
mov
push
hlt
divl
loope
insb
ret
call
xchg
push
aas
fsts
idivb
jg
lret
les
cmp
inc
mov
icebp
sbb
mov
nop
xor
xchg
xor
out
test
notb
sarl
and
outsl
xchg
dec
dec
jne
or
gs
adc
xchg
addr16
pop
push
or
outsl
cmp
jl
and
or
sub
xor
jp
push
xor
sub
sbb
pop
js
fwait
out
ds
push
nop
daa
scas
jl
int3
or
test
rcrl
jno
pop
cmc
fwait
xor
loope
into
outsl
cmpb
cmp
jp,pn
xor
inc
loope
cmp
nop
scas
out
mov
mov
mov
add
testl
and
jecxz
dec
and
xlat
arpl
fistpl
out
rcll
ljmp
xchg
loope
add
jae
push
jae
mov
jg
in
sub
sbb
pop
sbb
loope
mov
out
xchg
iret
cmpl
loop
out
popa
cmpsb
mov
add
test
inc
aam
dec
xor
sub
mov
ficoms
jns
sti
pop
stos
xchg
xchg
rcll
popf
imul
mov
sbb
insb
dec
aad
mov
mov
push
popa
sub
inc
cmp
popa
inc
stos
icebp
je
jno
ret
cmp
subl
bnd
stos
pop
jne
pop
push
iret
movsb
imul
mov
cmp
stc
hlt
roll
mov
mov
jns
mov
sbb
les
sub
sbb
in
andl
pop
push
jge
cmpsl
sbb
xor
pusha
in
xchg
dec
lcall
dec
jle
xor
fldenv
aaa
gs
and
dec
or
xor
loop
xchg
sbbl
lahf
nop
pop
cmpsb
cmc
test
lds
pop
daa
pop
es
je
pop
je
lcall
jmp
xchg
outsb
pop
sub
inc
insb
popf
jecxz
popa
pusha
dec
mov
mov
cmp
lret
test
mov
insb
lds
mov
push
lods
mov
mov
fs
mov
rol
xchg
fs
lds
cmpsl
inc
rcll
pop
shrl
and
push
mov
push
pusha
sub
add
scas
aam
pop
inc
dec
or
into
shlb
or
pop
shlb
mov
inc
or
adc
and
mov
cltd
sbb
and
data16
push
test
or
mov
mov
ret
cmovnp
sub
icebp
jecxz
int
ja
aas
fldlg2
fwait
push
pop
jo
xor
inc
sarb
sbb
test
xorb
daa
clc
fmuls
lods
cwtl
movsl
push
cmp
xchg
adc
sub
fbstp
test
popf
sub
add
mov
test
inc
lahf
push
clc
mov
inc
pop
in
lahf
lea
out
sbb
xchg
insl
xchg
pop
jno
xchg
scas
mov
sbb
push
sub
fbstp
xor
and
xchg
xchg
rcrl
int
shlb
test
mov
adc
test
cmp
lret
mov
sbb
loope
xchg
pop
daa
decb
mov
push
repnz
stos
lock
and
enter
xchg
dec
icebp
push
fidivrs
outsl
inc
jecxz
daa
jae
adc
mov
mov
lea
mov
jecxz
insb
add
fcomps
loope
xorl
outsl
sti
jb
bnd
nop
cmp
popf
jo
and
mov
mov
jg
insl
int
cmpsb
jl
cmp
addr16
mov
popa
movsl
int
sbb
pop
cld
aaa
data16
and
in
lret
mov
xor
into
sub
sarb
sub
incb
ret
fidivl
pusha
cmpsb
inc
dec
fwait
mov
jne
dec
shr
mov
ret
pushf
sub
aas
sub
jg
lret
xchg
push
mov
dec
nop
pop
aam
mov
int3
fisubl
cmp
ljmp
daa
pop
adc
adc
pop
out
mov
cmp
mov
cmp
adc
test
or
lds
push
aad
mov
xchg
mov
pop
or
adc
pop
fisubrs
mov
or
insl
cli
sub
xlat
ss
sub
mov
notl
outsb
enter
jecxz
sbb
ja
aas
push
cmp
cmp
das
test
push
dec
jb
xchg
cltd
add
dec
scas
cs
js
mov
movsb
cltd
fistps
push
jmp
fwait
push
adc
mov
pop
test
push
pop
popa
test
and
xchg
int
iret
mov
mov
notl
scas
pop
fldenv
jno
dec
aad
repz
jg
cli
or
mov
dec
jbe
out
fsubp
xchg
out
inc
ljmp
cmp
dec
cli
add
clc
sbb
xor
in
lods
push
mov
fwait
bound
dec
mov
out
mov
and
ret
sbb
sub
and
xor
push
pop
fdivl
shll
add
lods
xor
adc
push
mov
cmp
es
inc
xorb
ret
and
pop
mov
xchg
cmp
fwait
pop
push
daa
mov
jl
push
inc
sbb
imul
adc
xchg
cmp
ds
jp
pop
add
cmpsl
jnp
and
dec
jo
loop
and
bound
pop
xchg
adc
dec
xchg
add
into
mov
sbb
icebp
pusha
cld
rcrb
test
or
xor
or
add
js
ss
aam
fwait
xchg
movsb
popa
or
push
std
pop
and
jae
or
mov
adc
jp
cmp
lret
sub
sahf
inc
jl
bound
testl
fsubrp
insl
and
in
cltd
jge
push
xor
fdivl
adc
xlat
loop
test
pushf
xchg
int3
lahf
loop
push
mov
adc
roll
mov
push
fstl
test
sbb
adc
enter
adc
imul
jge
mov
xlat
out
aaa
jnp
push
les
sbb
pop
fstp
std
out
inc
xchg
inc
adc
sbb
jb
jmp
lahf
xchg
addl
mov
stos
cmc
cld
sbb
rol
movsl
icebp
jmp
and
outsl
jp
loope
subb
pop
mov
cmpl
sahf
mov
icebp
paddusw
sub
add
xor
jo
xchg
dec
lcall
cld
adc
fcoml
test
mov
ret
shlb
sbb
out
fsubl
sarb
mov
jecxz
sub
pop
dec
in
push
sar
jbe
sbb
pushf
xor
mov
mov
jp
fstpl
mov
lcall
or
test
sub
inc
jbe
add
mov
xchg
pop
sbb
inc
leave
or
jl
les
fs
jl
dec
adc
add
jbe
jg
fwait
popa
xlat
add
inc
jb
lahf
andl
test
loopne
call
orb
cli
subl
loope
ss
pop
and
add
add
cmp
mov
arpl
jae
push
std
push
sub
mov
mov
and
int3
mov
mov
ret
xor
mov
pop
xor
clc
minps
adc
mov
mov
adc
lea
mov
push
fdivp
mov
and
jmp
notb
sub
cmpsb
add
xor
pop
mov
adc
mov
push
sbb
pshufw
arpl
xchg
inc
jle
roll
xchg
test
insl
xlat
inc
sub
fs
insl
jle
push
xlat
sub
movsb
dec
repz
mov
mov
ja
adc
cmc
xchg
aaa
and
push
jl
or
in
xor
mov
jmp
xchg
push
les
pop
xchg
jae
pop
das
jle
fwait
or
outsb
lods
or
dec
lds
pushl
pop
jge
fisttps
repnz
pop
popa
mov
push
scas
xor
int3
push
shlb
pushf
fadd
cmp
pop
mov
dec
test
pop
arpl
lock
arpl
inc
stos
shlb
dec
inc
cltd
lock
imul
popa
mov
dec
enter
nop
adc
jecxz
jl
pop
sub
or
loop
in
push
les
lods
bound
push
mov
inc
push
movsb
mul
xor
stc
lahf
push
andb
or
adc
sbb
push
jns
out
rclb
inc
in
ret
jb
stc
mov
add
iret
test
pop
ret
bound
push
adc
dec
and
fldenv
test
push
pop
push
loopne
cmp
adc
push
jns
xor
sbb
mov
adc
imulb
sbb
gs
jbe
test
sbb
jb
nop
and
and
xor
xchg
xor
xorb
out
add
mov
int3
aas
ret
pop
outsl
lds
fstps
sbbl
xchg
sub
nop
sbb
inc
mov
push
pop
push
call
and
arpl
fnsave
adc
std
into
dec
mov
jns
jp
stos
or
mov
inc
sbb
aad
data16
jae
jb
leave
test
mov
int
mov
mov
lea
mov
dec
div
or
cs
ficoml
mov
cld
mov
cmpsl
sahf
pusha
dec
fisubrs
aaa
sub
jge
xor
pop
or
ret
mov
and
in
cmpsb
adc
enter
out
inc
fs
fadds
push
addr16
out
mov
mov
cli
ljmp
mov
or
xor
push
sub
pop
insb
popa
sahf
loope
fsubl
ret
arpl
std
jo
into
xor
pop
stos
dec
adc
jno
push
leave
mov
ds
out
and
push
lods
adc
loop
hlt
mov
mov
xchg
cmp
inc
enter
jl
shll
and
xor
sbb
rolb
cli
fsubrs
pop
lret
push
jo
std
xchg
xchg
in
inc
out
dec
mov
mov
pop
jl
jp
sub
lods
cli
mov
inc
in
sub
mov
inc
sti
adc
pop
push
cmp
xor
lret
lcall
int3
jmp
dec
or
imul
repz
aaa
pop
mov
aad
sub
jmp
fs
sbb
jge
sbb
jno
xchg
les
inc
push
rcl
xlat
orb
inc
cmc
mov
pop
mov
mov
int
xchg
insl
pop
inc
xchg
pop
and
test
or
and
pop
ss
jns
or
dec
mov
popf
ss
scas
xchg
int
dec
pop
fcomps
push
adc
scas
xchg
gs
and
dec
rolb
adc
dec
imul
popf
cs
sbb
xor
sbb
repz
mov
mov
sbb
filds
push
sbb
lea
pop
gs
xorl
shr
mov
adc
or
jecxz
xor
idivl
jmp
mov
xlat
or
dec
js
ret
xor
mov
jmp
jnp
jp
or
sbb
jle
pop
pop
xchg
leave
movsb
inc
jns
push
pop
insl
xchg
mov
in
fldt
orl
jae
lock
pop
or
push
cltd
sbb
mov
jb
xor
fdivrp
or
jne
test
fidivrl
outsl
adcl
push
dec
push
shl
stos
inc
add
movsb
xchg
fmuls
mov
and
and
inc
sub
pop
dec
scas
mov
stos
xchg
push
stc
cs
rcrl
mov
into
incl
xchg
aas
movsl
pop
fldenv
mov
dec
jle
sub
sub
xchg
push
jno
jecxz
mov
fwait
jae
jl
cmpsb
sub
out
adc
push
inc
aam
cmp
ljmp
mov
addb
adc
xor
sbb
ljmp
dec
jb
adc
clc
mul
ja
jl
ret
jl
lods
mov
gs
inc
leave
fnsetpm(287
sbb
test
outsl
inc
and
dec
ror
in
js
sbb
dec
pop
xchg
js
mov
fs
mov
xor
lahf
and
push
outsb
out
inc
lods
cmp
dec
pushf
mov
xchg
xorl
loope
repnz
into
fimull
adc
addr16
sbb
sub
and
ror
jge
jl
movsb
push
int3
into
jmp
mov
xchg
aam
lret
addb
dec
xchg
gs
dec
push
dec
outsl
daa
add
cltd
adc
cltd
push
mov
mov
dec
adc
xor
adc
in
dec
mov
adc
mov
outsl
shll
test
icebp
add
mov
pop
push
aas
push
es
lea
dec
repz
shlb
stos
popa
hlt
pop
pushf
mov
xlat
test
arpl
mov
mov
loope
out
and
dec
stc
sub
cltd
sub
xchg
lods
pop
cmp
xor
mov
scas
xor
fs
test
iret
pop
mov
adc
out
sbb
insl
bsf
icebp
cli
test
adc
jnp
xchg
pushf
adc
sub
insl
and
out
test
inc
jmp
mov
shll
leave
addr16
shrl
inc
addr16
rolb
inc
inc
hlt
adc
leave
jne
divb
shll
cmp
pop
std
xchg
mov
aaa
ret
movl
mov
jnp
pop
push
scas
add
roll
sahf
add
dec
sbb
addb
and
push
mov
jae
clc
popa
rcrb
pop
sti
jbe
sub
lcall
outsl
jg
dec
mov
ds
icebp
test
ja
leave
lea
js
cmp
rcr
jb
lods
fstps
cmp
iret
xchg
dec
pop
mov
loop
mov
adc
out
fisubrl
pop
push
mov
cmpsb
or
mov
iret
push
push
mov
mov
inc
pop
mov
pop
es
loop
ficomps
mov
or
xchg
mov
cmpl
dec
dec
hlt
scas
pop
adc
mov
dec
movsl
xchg
adc
mov
mov
rcrl
test
ficomps
icebp
movsb
test
pop
mov
fs
daa
aaa
scas
and
xchg
xor
sub
xor
sbb
insl
jb
jmp
and
aam
sti
iret
push
cwtl
push
sbb
ja
mov
inc
pop
fcmovnbe
pop
out
in
cmp
ds
mov
ljmp
xor
sbb
xor
push
ret
inc
lret
call
les
push
insb
and
push
inc
add
sbb
adc
ja
test
xor
pop
lret
insb
inc
imul
xchg
insb
adc
inc
ja
int
xlat
movsl
sbbl
push
adc
enter
cmp
mov
out
sbb
pushf
adc
mov
sub
and
cs
pop
repz
popa
inc
into
jno
push
xchg
out
ja
sar
cmp
sub
push
jge
das
mov
sub
inc
and
sbb
push
sahf
and
mov
inc
and
xchg
push
push
outsl
mov
ljmp
mov
cld
data16
lret
jno
cwtl
shl
dec
jne
sahf
jnp
popa
jmp
jmp
inc
add
dec
fmull
pop
or
fidivrl
pushf
ret
dec
cli
popl
ss
xchg
inc
jo
nop
sbb
movsb
stos
pop
add
add
test
lret
add
cmp
xchg
sub
sub
daa
and
cmp
adc
dec
push
jg
sahf
xchg
and
jecxz
cmp
insb
fimull
ss
loopne
mov
mov
sub
mov
addr16
outsb
mov
inc
dec
shrb
addr16
test
mov
lods
rorb
out
push
imul
push
decl
sub
mov
pop
dec
popf
add
sbb
aad
cmpl
std
out
repz
in
sub
cmpsl
push
mov
rolb
dec
or
push
imull
or
mov
es
mov
clc
xchg
es
and
mov
dec
or
enter
mov
cmp
fstpt
inc
inc
rorl
add
jbe
cmpsl
xor
out
cmovb
xlat
xlat
add
cwtl
movsb
js
enter
xor
fisubrl
dec
inc
sbb
jo
sahf
std
mov
insl
pop
sbb
sub
movsb
jb
jmp
adc
pop
sub
mov
lret
icebp
pop
call
out
adc
or
sarl
add
mov
xchg
mov
dec
push
das
jge
mov
pop
inc
dec
jns
ds
jne
int
adc
cli
push
ret
stos
iret
push
cmp
aaa
lock
popa
add
shl
arpl
inc
mov
pop
aad
dec
jbe
push
mov
int3
vsqrtps
lcall
aam
pop
pop
dec
or
out
imul
pop
popf
inc
mov
imul
push
loop
xchg
addr16
or
inc
mov
inc
movl
lahf
sub
add
jno
int
lret
mov
mov
rclb
xor
push
clc
xchg
jecxz
mov
lahf
jge
cmpb
add
fucomp
out
push
mov
or
iret
imull
mov
add
dec
lea
sahf
xchg
or
sbb
gs
mov
xchg
adc
xorl
into
insl
out
pop
in
jbe
test
sahf
data16
inc
daa
bound
or
adc
add
int3
fucomi
mov
stos
xchg
mov
jmp
aam
xchg
les
mov
xor
mov
rcr
push
add
inc
das
sub
add
outsb
loop
adcb
xor
dec
fldl
jbe
in
sbb
pusha
cmp
jns
sub
lea
test
pop
outsb
dec
push
addl
push
xor
mov
mov
mov
je
adc
mov
pop
jnp
and
xor
test
sbb
dec
popf
xchg
or
xchg
or
dec
adc
inc
dec
in
rcrl
push
mov
dec
lods
fs
movsl
pop
aad
sbb
rcl
cmp
dec
andb
cs
stc
les
sti
push
inc
lea
daa
icebp
mov
arpl
fdivrl
push
sub
lret
cmp
ja
test
std
mov
jecxz
cmpsl
sarb
test
mov
pop
ret
mov
dec
adc
arpl
cwtl
test
dec
push
xor
and
test
inc
and
pop
adc
les
in
pop
icebp
push
out
inc
neg
mov
aaa
ljmp
and
rolb
fldenv
out
mov
jg
insb
idivb
ds
out
add
xlat
add
push
cmp
pop
cmp
cmp
repz
mov
cmp
or
sbb
nop
js
mov
sub
sbb
inc
push
fildl
fadd
or
sbb
mulb
push
jge
cltd
xlat
imul
loop
loope
ret
and
add
call
mov
jb
outsl
cmp
bound
cmp
ljmp
cmp
sub
mov
int
mov
push
fisttps
or
fistl
ja
jl
movsb
mov
and
jb
mov
xor
arpl
add
xchg
cld
mov
add
aas
lods
mov
rcrl
cwtl
nop
or
cs
into
pop
in
aad
cmp
sbb
mov
mov
in
xor
inc
sub
rcrb
mov
cli
or
xlat
xchg
test
cmp
lock
popa
jnp
add
fcomps
cmpsl
mov
arpl
ljmp
push
mov
fnstenv
mov
inc
gs
leave
imul
popa
mov
jecxz
lcall
lret
xchg
out
not
fucomi
je
adc
lcall
rcrl
xchg
xor
add
xor
lret
jle
cmp
orb
or
xor
sbbb
imul
and
fnsave
loopne
jp
or
pop
jl
sbb
pop
xor
int
out
cmp
cmp
inc
push
xlat
ret
mov
loope
mov
into
mov
mov
cmp
pop
adc
jne
mov
xchg
test
xor
sar
push
pop
push
stos
jl
inc
lret
scas
and
add
out
leave
cmp
repz
or
fwait
lods
into
notb
insl
mov
cmp
inc
jge
setno
or
sti
jge
inc
js
pop
in
jmp
mov
sahf
repnz
mov
stos
push
push
shr
xchg
cli
adc
fwait
jp
loopne
mov
lds
push
add
inc
or
std
lods
add
dec
sbb
sbb
sahf
mov
test
lcall
xchg
push
adc
xchg
imul
push
cli
in
pop
dec
enter
xor
test
push
mov
sahf
add
fildll
lcall
add
adc
push
fwait
hlt
cmp
rorl
sbb
push
insl
cmp
or
add
jge
enter
icebp
outsb
mov
mov
out
xor
push
sbb
sbb
xchg
loop
add
add
jae
sahf
cmp
nop
mov
jmp
addb
mov
cmp
rclb
sub
mov
fwait
mov
jl
imul
add
sub
mov
dec
pop
scas
ret
add
pusha
jns
xor
insb
ja
ds
in
fisttpll
xor
cmp
faddp
ja
lock
adc
imull
aam
insl
jl
xor
in
inc
xchg
xlat
imul
sbb
adc
adc
pushf
jl
lods
leave
pop
in
fwait
dec
test
jbe
sub
push
push
mov
or
cwtl
or
hlt
adc
bound
sbb
jno
push
xchg
je
inc
jo
jns
popa
int3
mov
ja
xchg
lret
cld
out
push
add
dec
sahf
and
push
rcrl
shlb
push
clc
enter
mov
push
mov
adc
mov
gs
mov
add
jle
imul
sbb
jae
nop
xor
in
loope
nop
pop
testl
xor
in
inc
sbb
out
cltd
cmpsl
fs
push
shl
mov
add
sbb
jae
and
and
add
ss
mov
xchg
xchg
lods
std
adc
adc
into
mov
xor
jle
lods
mov
lock
xor
jae
int
and
adc
xor
or
clc
mov
xchg
pop
xor
inc
rcll
jne
popf
jecxz
inc
lock
nop
ljmp
iret
adc
mov
arpl
cmp
xchg
icebp
jne
xchg
jg
pop
std
push
cs
scas
in
adc
xchg
sbbl
int3
dec
xchg
mov
pop
cmc
jl
pushf
fidivl
cltd
mov
cmp
ret
fisttpll
push
pop
rclb
aad
ds
xor
mov
cmp
dec
jnp
iret
xor
pop
das
test
xor
sbb
enter
pop
mov
cltd
push
mov
shl
int3
mov
das
push
jmp
xchg
scas
cmc
add
divl
cmp
pop
cmp
negb
sub
push
add
push
pop
cmc
std
sahf
shll
fcomp
inc
push
push
pop
cmp
cmc
jge
push
sub
xor
lock
mov
jae
enter
pop
and
sbb
repz
and
ret
arpl
inc
jl
dec
fbld
enter
clc
rorb
movsb
fchs
lcall
adc
jmp
dec
pop
or
cmpsl
jnp
fdivr
fistpll
and
add
push
mov
test
cmp
add
sbbl
scas
popf
sti
gs
sbb
loopne
in
pop
clc
cs
push
loopne
inc
pushl
pushf
mov
xor
rorl
mov
mov
pop
cld
scas
xchg
inc
movsl
mov
mov
jle
leave
add
outsb
push
ficoml
add
xor
aad
xlat
xchg
ljmp
test
clc
adc
push
cmp
inc
pop
pushf
jnp
mov
ds
jle
mov
rcll
sub
cmp
xor
test
cmpsb
cs
fists
jae
aam
test
nop
into
mov
cli
and
enter
psubsw
movsb
push
inc
test
ret
xor
mov
mov
lcall
repz
mov
pop
ficoms
and
ds
mov
push
rcrb
xor
mov
loope
push
test
xchg
in
xor
repz
outsl
sub
mov
adc
xchg
sahf
ljmp
icebp
fsts
loopne
pop
icebp
jb
pop
imul
das
out
int3
test
dec
cmpsl
xchg
gs
int
add
ja
mov
sub
xchg
sbb
outsl
inc
dec
jae
mov
cltd
scas
cmpsl
insw
and
shrl
inc
mov
shl
push
adc
fnsave
push
adc
aam
out
enter
stc
bts
jecxz
jmp
mov
popa
inc
subl
outsl
xor
fdivs
test
cmp
jl
nop
movsl
sub
cli
xlat
lret
clc
jp
jge
jns
mov
fiaddl
xorb
xlat
sahf
rolb
dec
jns
js
jmp
movsb
loopne
dec
push
pop
ret
mov
stos
jle
std
movl
addr16
addr16
sbb
sbb
outsb
cltd
leave
pusha
test
iret
sbb
ljmp
mov
inc
xchg
in
es
cmp
cmp
mov
pop
cmp
fldcw
inc
or
arpl
dec
jbe
les
lcall
cmc
xchg
xchg
sti
mov
fcmove
xchg
mov
dec
pushf
daa
xchg
or
sbb
mov
scas
lds
mov
int
fcoms
adc
pop
movsl
mov
sbb
sub
je
push
jg
lret
nop
or
or
ja
mov
ror
ljmp
add
jle
add
mov
enter
jns
leave
push
jo
inc
arpl
push
je
sahf
pop
pop
pop
loop
ja
stc
dec
jb
mov
mov
add
push
je
push
in
sub
outsl
sub
and
movsb
mov
scas
jmp
sub
aad
lds
jbe
dec
mov
loop
push
ret
test
adc
push
iret
xor
add
mov
pop
pop
lock
mov
nop
adc
push
or
fldenv
push
aam
jo
aam
push
lock
sbb
orb
mov
int3
add
mov
mov
mov
out
push
dec
pop
sbb
push
cmp
ss
xor
push
inc
push
into
pop
loopne
xchg
mov
or
fldenv
mov
inc
fwait
jb
ljmp
in
testb
aas
pop
xchg
mov
in
sahf
and
mov
add
mov
insl
rcrl
add
leave
rol
jmp
mov
je
xchg
sub
jle
jns
insl
negl
imul
loope
cld
mov
add
lcall
jge
adc
xor
ss
pop
lret
xchg
ficomps
lahf
mov
call
test
cwtl
das
inc
pop
sub
aad
fidivl
xchg
pop
or
mov
mov
cmp
icebp
xorb
sti
hlt
pop
jbe
dec
sub
leave
and
push
xchg
daa
xor
add
roll
mov
ret
push
sub
sub
sbb
aam
jae
jl
into
popf
pusha
cmp
jle
fnstcw
cmpsb
loop
lcall
push
and
sbb
das
cmp
or
cmpb
fisubl
int
push
mov
dec
repz
adc
not
xchg
test
cmp
into
ss
ss
xchg
lock
lds
cmp
ja
pop
mov
adc
into
and
inc
aas
daa
adc
add
jb
es
sarl
in
or
adc
negb
js
xorb
cmp
adc
dec
dec
lcall
mov
dec
push
out
orb
popa
subl
adc
adc
rcrl
jbe
loopne
xchg
imul
push
xor
xchg
imul
jle
sarl
fcoms
push
push
out
mov
pop
aaa
ret
jp
cli
cmp
adc
cltd
outsl
icebp
pop
imul
jmp
push
xor
pop
and
test
jle
mov
outsb
sub
and
or
ret
iret
bound
inc
jae
dec
adcl
cmpsl
lret
adc
jl
ror
xchg
cmpsl
nop
jno
or
xlat
inc
and
ss
in
fbstp
pop
jmp
push
push
test
inc
lcall
repz
mov
ljmp
lahf
shll
lods
int
xchg
sub
dec
or
loopne
std
fs
out
sub
scas
inc
lds
mov
cmp
clc
xor
aam
sub
push
push
xchg
out
test
mov
daa
rol
imul
and
and
xchg
mov
imull
adc
outsl
cmp
cs
xchg
xor
or
xchg
add
adc
add
int3
in
add
fisubl
lahf
int
or
jmp
rcll
inc
sub
mov
aad
jns
pop
movsl
ljmp
push
loope
in
fwait
aaa
and
daa
nop
mov
jmp
mov
adc
sti
js
sub
cltd
or
lods
xor
adc
push
ficoml
mov
adc
out
mov
sbb
in
movsl
mov
fdivrs
jl
jbe
lods
jg
sub
add
lret
sbb
nop
adc
cmpsl
adc
jns
dec
cltd
add
fisubrl
inc
push
cltd
sub
fwait
mov
daa
xor
add
dec
sahf
inc
popa
pop
out
leave
push
js
clc
in
stos
dec
gs
xchg
push
push
pop
mov
xor
cltd
fwait
xor
jecxz
push
jg
repz
xchg
push
scas
outsb
push
mov
add
xlat
nop
add
pop
cmc
outsl
adc
insw
fdivr
sbb
in
ljmp
test
movb
add
or
fidivl
jmp
repnz
push
out
dec
cmc
adc
mov
adc
or
sbb
lcall
or
inc
lods
jbe
jecxz
adc
and
clts
mov
push
int
mov
insb
cmp
call
insl
inc
fnstenv
dec
cmp
hlt
ret
jb
movsl
rep
mov
cmpsb
scas
sahf
clc
and
dec
mov
dec
scas
out
lods
push
pushf
mov
and
les
clc
lcall
pop
mov
stos
addr16
inc
jle
add
jg
ficoms
xor
out
cmc
clc
sub
mov
pop
xchg
test
push
mov
sbb
adc
jg
scas
adc
pop
addl
out
cs
rcr
sbb
test
imul
pusha
negb
imull
dec
leave
mov
jp
in
lock
ss
dec
inc
add
xchg
mov
push
leave
ret
fs
in
sahf
sbb
aam
push
lods
and
jl
fldt
setbe
ror
cmpsb
out
loopne
int3
andl
mov
test
xchg
or
mov
int3
pop
mov
loop
push
insl
push
mov
mov
cmp
lcall
jnp
je
push
push
push
call
fwait
rclb
aad
fdivrp
sub
xlat
xlat
stc
dec
push
stc
dec
jbe
lcall
test
shrl
arpl
mov
mov
mov
ljmp
add
out
call
lcall
flds
cwtl
jl
adc
mov
dec
or
mov
mov
bound
mov
add
or
mov
mov
imulb
movsb
dec
xor
jp
aas
hlt
shrl
xchg
mov
inc
out
lcall
cld
jmp
mov
mov
mov
inc
mov
popf
sub
mov
jns
xor
cmp
imul
mov
cli
scas
adc
orl
cld
jae
mov
mov
fs
xor
cmpsb
in
subl
add
lcall
xchg
inc
iret
repnz
loopne
cmp
inc
repz
repz
cli
inc
movsl
dec
in
mov
xlat
fisubrs
mov
mov
add
popf
adc
jns
out
sub
push
pop
adc
cmp
cmc
out
push
icebp
mov
push
adc
pop
data16
pop
lods
add
movsb
mov
sub
jp
int3
test
gs
jno
mov
mov
js,pt
inc
xchg
cmp
stos
inc
adc
pop
shlb
imul
test
sub
lret
fimull
inc
xor
out
and
cmp
push
inc
dec
nop
pop
or
jo
inc
jmp
mov
jo
push
push
push
pop
aad
add
inc
adc
push
jo
scas
out
cs
ljmp
lret
orl
testb
test
add
mov
mov
fisttpl
imul
mov
pushf
cltd
jno
rcll
mov
pop
jne
sbb
leave
cltd
enter
test
movsl
jb
out
mov
lock
cmp
scas
push
jge
sahf
leave
sub
sbb
pushf
xor
popa
xor
sahf
sbb
jns
call
cmp
cwtl
subl
cmp
subl
ja
out
cltd
mov
adc
push
sub
mov
pop
call
jae
mov
and
js
leave
mov
xchg
cmpsb
sub
pop
iret
les
mov
addr16
and
cmp
fwait
xchg
mov
enter
cli
addb
enter
mov
adc
clc
mov
into
sbb
xor
fwait
in
xchg
and
pop
clc
push
inc
xchg
xor
aad
cmp
sub
mov
sbb
dec
outsb
fsubl
lahf
insb
pop
jne
mul
call
je
inc
mov
inc
mov
sub
xor
fcompl
or
or
cmp
dec
dec
out
sahf
shll
loope
xor
or
add
or
dec
test
outsl
pop
imul
xchg
push
sahf
adc
icebp
push
sti
sbb
cmp
into
repnz
fidivrl
inc
paddq
pop
loope
xor
xchg
push
cwtl
sbb
mov
mov
mov
push
ffreep
aam
js
and
frstpm(287
repnz
jl
imul
subb
xchg
push
inc
xor
adc
ss
es
xchg
add
push
adc
and
jl
bound
sbbb
and
insb
xlat
lret
or
cli
push
xchg
decl
imul
mov
repz
aas
mov
add
add
push
popf
sbb
lret
popa
inc
inc
mov
jp
sbb
movsb
or
lock
movsb
aad
into
push
loopne
aam
add
sbb
iret
mov
dec
cmp
and
xchg
aas
in
push
ljmp
js
fs
sbb
push
add
stc
lds
out
aam
loop
and
scas
insl
shl
pop
fldl
jnp
pop
es
inc
fwait
std
fists
jmp
aad
jle
cmp
shrb
or
push
jg
int3
mov
fnstenv
sti
sbb
xchg
mov
mov
mov
js
mov
push
push
idivb
fwait
dec
add
push
jnp
ret
mov
sub
and
leave
dec
mov
sub
and
mov
iret
ret
into
shll
fcoms
mov
call
loop
sub
out
insl
out
mov
leave
std
data16
adc
mov
cmc
cmp
enter
addr16
stos
adc
adc
fcoms
and
into
sbb
cmp
dec
outsl
jl
xchg
sbb
loopne
dec
divl
jle
xor
rcl
imul
out
sub
and
daa
lea
addb
aam
dec
out
pop
sarb
jg
sarl
inc
mov
cmpsb
fisubl
lcall
inc
sarb
jmp
xchg
sub
sub
int3
and
rcrb
cmp
cwtl
cld
ljmp
or
xorb
mov
je
mov
push
sar
inc
or
sarl
adc
fidivrs
cmp
addl
xchg
sahf
pop
imul
push
icebp
jnp
andl
jo
enter
es
sbb
or
push
xchg
fisubrs
in
std
jnp
jne
test
add
movsb
xchg
push
mov
mov
loope
imul
push
sub
xchg
sbb
cmp
jmp
cld
pop
pop
xor
ss
pushl
dec
lds
pop
fists
mov
mov
insl
rcrl
shrl
jb
inc
push
or
sub
jle
lcall
sti
push
add
pop
mov
arpl
popf
adc
arpl
xlat
fstpl
fsubp
divb
xor
mov
dec
xor
insb
mov
add
fmul
jmp
or
repnz
fmuls
int
inc
daa
fnsave
fstl
outsb
sub
sarb
and
adc
outsl
pop
mov
add
lret
push
sbb
rol
dec
imul
out
pop
push
roll
fisttpl
fisttpl
dec
ret
sub
inc
mov
cltd
into
cmp
cmp
or
cmpsl
jne
xlat
push
ljmp
fisubrl
mov
es
and
cmp
mov
pop
outsb
lret
lds
sub
outsl
mov
rorb
pop
pop
lahf
call
push
popa
not
out
ljmp
mov
or
leave
mov
cwtl
mov
pop
jp
out
jno
mov
test
xor
cld
movsb
ss
sbb
or
jne
add
and
mov
aam
pushf
lea
cmp
decb
add
out
fldenv
inc
jp
xchg
push
adc
push
jecxz
pop
add
inc
movsb
rcr
movsl
leave
fdivl
or
insl
arpl
arpl
incl
adc
jns
cmpsl
ret
dec
mul
icebp
push
inc
lods
ja
out
add
sub
push
push
inc
addr16
movsb
fsubrl
jb
scas
das
mov
int
adc
and
sbb
push
pop
mov
push
dec
jbe
int
jl
or
enter
cmp
scas
cltd
mov
sbb
in
cld
fwait
adc
push
sub
mov
xchg
xor
sub
dec
add
cltd
cmpsl
mov
dec
mov
sbb
xlat
mov
add
dec
and
jmp
dec
es
movsb
iret
js
addr16
mov
jle
call
mov
jo
stos
loope
sub
into
es
cmp
sbb
or
test
subps
sbb
insl
push
shll
push
ss
xchg
ret
jno
arpl
cwtl
and
push
lock
pop
push
mov
xchg
pop
test
push
cmc
sahf
mov
imul
jo
punpckhbw
mov
repz
sub
jnp
push
fistps
mov
add
call
cmpsl
adc
push
out
js
movsb
data16
add
arpl
daa
lret
in
push
cmp
adc
in
jo
adc
jecxz
and
arpl
or
sbb
out
daa
fwait
or
dec
push
fildll
ds
cwtl
mov
xchg
jno
jno
adc
es
mov
sbbb
aam
sbb
xchg
dec
mov
bound
jp
cmpsb
sbb
popf
xor
xchg
or
sbb
mov
mov
shll
lahf
pop
data16
fidivrl
imul
or
shll
in
or
and
rcll
in
mov
into
sarb
data16
xchg
sub
sub
leave
adc
xchg
stos
cli
mov
int3
mov
fs
inc
div
dec
push
iret
test
adc
cmp
adcl
mov
dec
and
aam
mov
sbb
push
sbb
add
cmp
xchg
les
sahf
mov
fsubl
leave
lods
lret
dec
loope
cmp
cmp
icebp
test
push
dec
int
pop
mov
cmp
add
in
xor
adc
test
lea
cltd
and
and
jg
lret
js
test
inc
adc
adc
or
shrl
pop
stc
in
pushf
jl
orb
inc
cmp
xor
push
jge
push
push
mov
inc
rclb
dec
cmpl
mov
scas
add
cmpl
es
mov
inc
subl
push
mov
mov
push
mov
sbb
cmp
lods
in
adc
cmpl
decb
and
lds
add
push
mov
enter
mov
jl
add
cmp
sbb
push
and
test
imul
and
mull
rcll
and
lods
push
arpl
dec
ficompl
mov
gs
jecxz
sahf
adc
es
aad
out
sbb
clc
enter
and
jmp
mov
dec
xor
sbb
lods
xor
mov
dec
mov
les
mov
mov
icebp
mov
lret
movsl
aad
outsl
sub
cwtl
mov
jno
adc
movsb
and
or
pushl
hlt
mov
shlb
jmp
pop
mov
and
in
mov
data16
pushl
scas
dec
jecxz
loopne
and
lods
sbbb
out
xor
movsl
mov
dec
and
adc
mov
push
sbb
js
in
into
popf
insb
cmp
into
ret
pop
push
push
subl
inc
jns
mov
mov
push
fcmovu
mov
xchg
or
lds
outsl
mov
add
mov
outsb
mov
repnz
fsubrl
popa
repz
and
movsb
arpl
jne
les
clc
call
sbb
pop
cli
test
int3
test
sbb
jge
test
ss
popa
pop
lahf
and
jo
cli
xchg
jae
mov
pop
je
popf
ds
popa
loop
jecxz
jo
loopne
cld
mov
xchg
and
insb
pop
adc
push
nop
cmp
mov
stos
adc
pop
inc
loope
fstl
test
mov
sub
out
out
push
mov
test
imul
testl
in
jne
loope
mov
add
mov
inc
mov
test
sbb
rorb
cltd
inc
int
lods
inc
daa
sub
shl
jbe
call
and
jno
xlat
pusha
mov
and
ss
xchg
jae
adc
orb
out
divb
jbe
outsl
aas
outsl
xchg
mov
mov
xor
mov
data16
jno
js
stos
fnstsw
data16
mov
sbb
mov
fnstcw
cwtl
xor
push
lret
xor
imul
and
jle
lods
test
and
jo
repz
mov
push
out
add
mov
lret
out
sbb
pop
pushf
pop
jmp
push
ret
xor
jb
lcall
shlb
lods
out
ret
das
fldcw
or
test
test
add
or
inc
movsb
insl
aas
add
or
sub
jb
pusha
popf
mov
jge
clc
push
jp
jae
sahf
sbb
orb
in
lock
jecxz
or
ja
scas
jle
and
pop
adc
ret
fisttpll
mov
orl
es
cmp
rcrb
adc
add
out
pusha
or
pop
dec
xchg
cmp
test
mov
xlat
nop
add
and
sbb
fstpl
or
into
xor
jg
stc
fidivrl
adcb
insl
jge
inc
cmpsl
fabs
jno
cs
aad
fnstenv
ljmp
xchg
sub
ss
imul
cld
outsl
mov
in
pop
fidivrl
xchg
jo
mov
loope
adc
jg
std
loop
aaa
lret
push
aad
popa
imull
mov
out
inc
add
stc
dec
loopne
mov
mov
add
or
clc
test
sysexit
sahf
sahf
enter
stos
mov
test
inc
cltd
jge
xchg
pushf
das
bound
mov
adc
add
or
dec
fldcw
aam
leave
sbb
mov
inc
xchg
jp
loope
cmp
out
cmp
in
sti
imul
add
popf
lea
lods
cwtl
insb
rorl
dec
pop
inc
push
imul
cmp
into
shlb
push
lock
push
int
das
sti
jbe,pn
aas
jmp
shll
xor
je
push
decb
mov
mov
adc
repnz
xor
mov
lds
loop
sub
sbb
addr16
xchg
in
mov
push
adc
dec
ficompl
mov
inc
cli
jmp
out
insl
popa
inc
add
xchg
out
lea
jo
pop
and
jnp
mov
xor
adcb
sahf
sub
xlat
sbb
in
out
jo
lea
push
mov
pop
xor
pop
test
push
cli
jns
inc
push
pop
pop
out
mov
xchg
rcll
push
sbb
andl
movlhps
mov
xlat
add
cmp
daa
sub
cmp
sub
movsb
aas
les
mov
int3
jae
ret
mov
cli
mov
leave
int
lahf
lods
test
cmpl
out
mov
push
insl
mov
lods
xchg
and
add
pop
cmp
std
jo
mov
scas
dec
adc
mov
mov
fisubrs
pop
leave
pop
mov
repnz
test
xor
or
fadd
mov
mov
and
shl
sbb
stos
lea
mov
cmp
add
aaa
mov
or
loope
jge
js
pop
in
cmp
insl
icebp
dec
xchg
es
cmp
scas
aad
out
mov
xor
push
pop
push
outsb
xor
add
sub
xchg
sub
inc
addr16
inc
fisubrs
mov
push
add
lock
int
mov
xchg
jnp
xchg
dec
adc
xor
mov
adc
test
sbb
and
repz
andb
scas
inc
mov
push
sbb
or
das
into
ds
and
add
out
int
push
pop
push
mov
push
in
mov
mov
loop
loopne
push
repz
stc
jecxz
pop
cltd
xor
arpl
sub
lret
fcmove
jl
inc
push
mov
xorl
cltd
mov
sbb
lret
adc
mov
popa
and
xchg
jmp
icebp
inc
xor
imul
jmp
push
pop
cs
fidivrl
push
mov
xchg
add
sbb
divb
aad
dec
inc
roll
pop
imul
push
scas
stos
fadds
pop
daa
popf
push
cmp
mov
bound
cmp
fldt
fsubl
jne
shrl
pushf
pushf
repz
cmp
mov
jne
push
sahf
pushf
xor
jmp
pop
and
inc
aam
loope
iret
shrb
rcr
jge
cs
cmp
add
repnz
pop
sbb
inc
js
test
repnz
ja
in
mov
mov
out
nop
and
loopne
pop
clc
push
xchg
sub
sbb
sti
shlb
jnp
or
mov
mov
lods
cmc
and
sbb
xor
cld
xchg
fstpt
xor
xchg
sub
movsl
cmpsb
insl
sub
test
ljmp
ja
xchg
inc
ret
push
adc
xor
stc
cmp
lahf
test
adc
mov
aad
jae
mov
xor
push
mov
push
adc
pop
xor
mov
jae
xor
fildll
stc
push
nop
jl
mov
pop
fidivs
sbbl
xor
fadd
dec
xlat
push
mov
lret
orl
dec
sarl
push
mov
sbb
aam
jnp
insl
out
insl
lahf
xlat
mov
mov
sub
inc
or
sub
idivb
or
pop
mov
and
lcall
andl
cmp
jo
lods
test
adc
test
dec
push
xchg
ss
pop
adc
dec
cltd
lret
lahf
inc
jbe
sbb
imul
and
imul
dec
or
movsb
xor
mov
ficoml
dec
dec
arpl
xchg
add
out
dec
pushf
xchg
std
fnstsw
sbb
add
mov
pop
push
pop
jb
or
dec
sahf
jae
je
arpl
mov
add
mov
cld
icebp
lds
pop
jne
dec
insb
loop
cmpl
andl
outsb
mov
gs
push
jmp
or
jns
jmp
lods
dec
fidivrs
aam
adc
and
mov
mov
mov
push
das
cmp
jge
and
mov
inc
fldl
add
lcall
imul
mov
add
mul
inc
sub
divb
xchg
cmpsl
jns
int3
push
inc
sub
notl
repnz
shll
dec
ret
mov
dec
xchg
add
and
pop
mov
ffreep
mov
movsl
scas
mov
and
ds
xchg
push
subl
push
inc
pop
sbb
cmpsb
sbbb
dec
or
sub
add
cmp
mov
xor
es
inc
dec
es
cmp
inc
ret
mov
pop
repz
sahf
imul
adc
cli
ret
xchg
out
lea
into
neg
jle
nop
repz
aam
outsl
adc
pusha
outsb
imul
mov
sub
enter
test
or
xchg
sbb
lret
nop
add
and
push
lcall
addr16
dec
push
fbstp
ret
popfw
adc
sahf
insl
les
xor
jmp
cs
nop
pop
sbb
sbb
sbb
iret
neg
inc
jbe
fdivs
out
sub
xchg
movsb
push
std
repnz
cmpsb
xlat
add
sbb
iret
imulb
repz
stc
movsl
or
nop
cmp
adc
stos
xchg
dec
sbb
mov
sbb
ja
adc
mov
mov
nop
out
repnz
out
jne
fbstp
cwtl
push
pop
bound
jg
jb
mov
lahf
jecxz
testb
sub
lods
pop
mov
inc
call
enter
dec
outsl
clc
dec
jae
mov
sub
aaa
inc
scas
cmp
adc
std
sbb
insl
es
jnp
add
pop
cld
mov
fwait
jnp
lahf
sub
aas
call
fwait
xor
sbb
or
inc
pop
cmpsl
ss
xlat
push
mov
inc
out
adc
int
mov
sub
or
xor
cmp
aaa
dec
sbb
push
pop
xchg
outsl
aas
adc
jb
push
xor
loopne
pop
add
lock
mov
iret
xor
dec
xchg
popf
repz
sahf
mov
xor
push
data16
scas
add
shll
or
std
loope
cmc
int
int3
pop
and
or
lods
imul
mov
jbe
lea
mov
stos
iret
fcmove
and
in
imul
cmp
dec
mov
cli
and
cmp
jecxz
and
dec
sub
inc
ja
mov
ret
and
popf
cli
stc
cmp
ret
nop
into
jge
jne
pop
fmulp
push
imul
fidivs
aad
std
test
aaa
jp
xorl
ret
jnp
mov
sarl
pusha
scas
adc
adc
lods
out
pop
jge
fstpt
sub
mov
cmpsl
fwait
ss
xchg
nop
arpl
jb
ret
mov
cmpsb
enter
xchg
pop
inc
inc
out
js
mov
adc
popa
setb
push
dec
aam
dec
cmpsb
mov
daa
xor
pop
rcrl
add
jl
jb
jnp
sub
cli
sti
negl
push
aam
mov
std
dec
or
sbb
inc
lcall
arpl
push
pop
gs
cmp
ret
mov
int3
js
sub
xor
push
cmpl
mov
imul
in
or
stc
pop
andl
mov
or
push
std
enter
xchg
xor
cltd
vminss
js
mov
adc
sbb
jne
iret
mov
or
inc
test
or
and
insb
cmpsb
inc
jbe
out
fldl
sahf
addr16
mov
js
cmp
pop
sbb
sbb
mov
xchg
sbb
lahf
and
mov
jno
xchg
mov
insb
lret
xlat
xor
cli
stos
insl
add
repz
in
dec
cmpsb
jecxz
mov
rolb
in
mov
cmp
xlat
mov
jno
add
cld
sbb
pop
sbb
add
push
mov
sub
mov
and
mov
jnp
and
cltd
xchg
movsb
pop
or
outsl
and
sbb
outsl
sub
adc
add
xchg
adc
scas
xchg
sub
in
mov
insb
sub
sub
pop
popa
in
adc
pop
das
loope
cmp
cmp
daa
mov
lea
push
imul
int3
dec
addl
push
push
mov
out
dec
je
cltd
add
iret
test
adcl
daa
sub
push
cltd
int
cmpsl
inc
pop
cwtl
ret
sbb
adc
xor
jmp
cmpsb
mov
sbb
shrb
mov
cli
dec
inc
jne
add
outsb
dec
jmp
lret
dec
push
subl
jne
mov
dec
add
mov
fidivs
mov
aam
jl
fmul
jns
neg
fcoms
aam
jp
lods
add
xchg
dec
sub
add
mov
mov
jmp
imul
stc
rol
sbb
dec
in
adc
jg,pt
aad
push
jg
rolb
lods
js
and
fisubl
fdiv
cmpsb
inc
inc
sub
scas
test
mov
ret
outsl
es
inc
xorl
pop
push
imull
sbb
and
mov
dec
ss
push
xchg
lcall
xor
inc
test
fld
add
dec
pusha
mov
mov
fcomps
sub
xchg
insb
adc
mov
loope
test
or
out
std
mov
pop
cmp
jns
push
stos
mov
xor
push
xor
sbb
jp
std
stc
add
sbb
and
lods
and
add
lahf
xchg
cmp
sbb
mov
arpl
iret
adc
pop
in
cld
sbb
insb
jp
repz
xchg
xchg
icebp
test
adc
mov
hlt
fistl
or
gs
inc
loope
pop
add
popa
imul
int
jge
xor
repz
dec
pop
movsb
jl
into
add
mov
xchg
jo
hlt
sub
subb
out
jbe
fistpl
adc
daa
into
mov
decl
mov
xchg
mov
jb
cwtl
push
inc
mov
push
aad
and
iret
xchg
testb
fmuls
lret
push
es
leave
xchg
add
enter
xor
xchg
inc
pop
addr16
mov
movl
cld
cmp
in
sbb
dec
mov
lods
es
rcl
jg
dec
pop
scas
loopne
aaa
sti
or
mov
mov
push
nop
inc
or
in
xor
inc
imul
out
adcb
mov
andb
vmovsd
pop
and
mov
mov
cltd
aad
adc
or
addr16
cli
push
pop
pop
pop
pop
mov
arpl
cmp
jbe
shrl
data16
jae
jb
mov
or
popa
cmp
rcll
xchg
ja
je
lahf
gs
fistpll
in
das
enter
repz
cs
lea
push
push
or
cmovp
gs
mov
jl
add
cld
icebp
mov
add
pop
int
mov
adc
je
sbb
sti
mov
daa
push
sbb
outsl
mov
cmpsl
out
gs
and
lea
pop
iret
repnz
adc
int3
js
mov
jns
insl
icebp
mov
dec
xchg
and
lcall
mov
sbb
jg
clc
adc
jb
push
inc
xchg
orl
cmc
sbb
lods
mov
jecxz
sbb
mov
fcoml
idivb
and
mov
mov
in
test
and
pcmpgtw
enter
lods
rcr
cmp
cmc
insb
fnstenv
mov
cmp
xor
cmp
push
sub
xor
pop
cmp
xchg
xchg
popa
cmp
add
ja
add
mov
insb
jnp
cwtl
hlt
fcomi
inc
adc
lret
pop
outsb
add
mov
sbb
icebp
mov
lret
fpatan
pop
dec
pop
out
add
push
jae
mov
mov
inc
sbb
pop
loope
add
cmp
cmpsb
lock
icebp
xchg
push
aad
es
cmp
pushf
movsb
fstl
sbb
es
inc
xor
pop
notl
inc
pop
xchg
filds
dec
hlt
data16
xor
test
jecxz
cli
hlt
jl
sti
insl
jo
xor
jne
fstpl
loopne
lahf
mov
aas
sbb
bndstx
push
jge
imul
insl
sub
push
or
pop
sarl
cwtl
push
xchg
rorl
movsb
push
xor
push
mov
dec
ret
repnz
mov
fstpl
jb
aas
adc
mov
loop
jno
data16
mov
pop
insl
int3
pop
mov
jb
jp
into
sbb
adc
mov
add
lods
dec
mov
outsl
aam
insl
popl
ss
adc
mov
and
notl
aas
in
rclb
dec
or
jns
into
lods
dec
push
cmpsl
les
push
push
sub
sbb
xor
loop
xchg
rcr
mov
addr16
add
sbb
aaa
pop
dec
mov
pop
jle
xchg
fwait
lcall
inc
push
out
jge
or
and
cmp
lahf
into
stc
sub
push
inc
xchg
negb
sbb
jle
and
pushf
mov
inc
movsb
cmp
rorb
xor
mov
mov
jne
cwtl
mov
inc
xor
xchg
rorb
ret
mov
sbb
movsl
pop
sbb
mov
js
das
add
out
sbb
fs
lret
pop
jmp
cmp
fstpt
push
cwtl
mov
inc
mov
jmp
sub
adc
push
or
mov
mov
test
adc
mov
jbe
repnz
test
cmp
addb
add
gs
insb
leave
add
nop
aam
lods
pop
iret
subb
aaa
fwait
and
jmp
fmuls
iret
mov
mov
or
mov
out
out
pop
pop
fxch
je
insb
sub
xor
scas
pushf
cld
pop
dec
inc
repz
and
xor
nop
adc
or
les
jb
adc
mov
rcrb
rorb
adc
mov
adcb
jo
cmp
jne
loope
add
pop
loopne
mov
mov
cltd
imul
shll
in
addb
mov
insl
jnp
add
mov
pop
test
inc
adc
pusha
xlat
adcl
ret
pop
scas
inc
sbb
pop
test
mov
in
out
mov
ret
pop
jecxz
in
es
jl
insb
btsl
inc
sub
stos
push
cld
push
fistpl
inc
rcrl
mov
ret
cwtl
jnp
leave
into
fwait
js
sti
loopne
xchg
inc
aaa
in
xchg
testb
mov
mov
imul
push
lods
mov
pop
arpl
lcall
push
or
push
rcl
es
push
mov
out
lret
pop
jecxz
mov
pop
leave
dec
scas
loope
lcall
mov
sub
or
testb
and
arpl
pop
dec
ret
push
xor
cwtl
dec
fadds
aam
jecxz
leave
ret
and
cmp
nop
inc
push
lret
inc
in
outsb
inc
jae
cwtl
jmp
dec
sbb
xlat
fisttps
sbb
adc
les
xchg
aam
mov
dec
out
shlb
sub
jae
flds
js
mov
dec
cmc
repnz
mov
cltd
cmp
les
jnp
dec
ret
push
cmc
leave
in
call
pop
out
mov
fcomps
adc
fiaddl
jmp
arpl
push
arpl
out
jl
ret
pop
bound
ljmp
shrb
rcl
fstps
mov
fmuls
add
push
in
jp
xchg
or
lcall
gs
jne
or
cld
mov
test
inc
dec
dec
xchg
les
sahf
pushf
aam
into
xor
int3
push
ret
cmp
jb
xor
test
movsb
xchg
dec
or
add
test
pop
mov
and
jp
mov
dec
pop
xor
ret
aam
notb
andl
lret
sub
cmp
jecxz
divl
jmp
pop
in
mov
xchg
ret
mov
or
ljmp
insl
xor
jb
dec
inc
in
lcall
sub
scas
mov
ret
fwait
leave
pop
fldt
out
iret
ss
xor
push
mov
adc
retw
push
add
adcb
bound
jl
add
xor
fcoms
das
dec
xor
cmc
sub
and
in
jecxz
cwtl
sub
inc
xor
pop
jo
lret
icebp
loope
int3
xchg
pusha
rorb
iret
cmp
test
mov
pop
movsl
mov
jmp
scas
cwtl
or
adc
sahf
in
ja
adc
bound
cltd
fisubrs
and
aam
push
out
in
sub
add
call
sub
aaa
ja
ja
sbb
push
call
js
hlt
test
test
xchg
sahf
sub
int3
xchg
add
cmp
js
or
mov
jae
fimuls
sarb
mov
shll
lea
sub
in
jle
jbe
cmp
cmpsl
icebp
xchg
movsl
inc
push
sub
pop
adc
mov
or
push
or
jmp
mov
xchg
pusha
xor
mov
ficompl
sbb
adc
mov
mov
and
jo
arpl
stc
pushf
mov
fldcw
fidivrl
mov
shrl
imul
pop
jae
fisubrs
jecxz
jp
negb
xor
add
push
ds
fiadds
das
pop
clc
xchg
cmp
pusha
shll
mov
mov
adc
mov
pop
std
lods
mov
cli
sti
cmp
pop
cmp
or
cmp
push
fcmovnb
ret
sub
pop
std
stos
out
sbb
xchg
cmp
cli
or
fdivrs
jb
cmc
ljmp
mov
nop
arpl
int
insb
push
and
pusha
je
mov
cltd
mov
shrl
aas
push
mov
dec
mov
mov
adc
sti
enter
xor
add
fs
cmp
sub
ljmp
pushf
dec
mov
inc
adc
hlt
cmp
pop
das
pop
cli
imul
imul
ljmp
sub
dec
icebp
enter
out
movsl
mov
int3
xchg
sbb
mov
int
stos
lahf
xor
hlt
dec
data16
outsl
rcl
fstpt
imul
aam
push
mov
or
cs
jo
xlat
sbb
lds
sub
push
es
out
andl
in
cmp
jmp
adcl
xchg
lds
loopne
adc
fwait
sub
sub
subb
mov
cmp
ret
lods
mov
adc
outsl
jns
int3
clc
push
mov
jmp
xchg
inc
ljmp
in
dec
cmp
inc
cmp
add
push
cmpsl
inc
sbb
fisttpl
xchg
adc
icebp
aaa
lea
mov
push
mov
sub
shll
push
mov
push
sub
push
loopne
add
hlt
lret
adc
fimull
test
and
pop
sbb
fisttps
inc
lret
inc
loope
inc
xchg
mov
test
cmp
and
jecxz
arpl
js
push
inc
sti
dec
mov
jne
aaa
cs
push
fucomip
scas
or
mov
loop
aam
jle
sub
stos
sub
push
loopne
arpl
stos
test
fdiv
cmp
aad
or
dec
out
clc
cmp
mov
mov
inc
pop
testl
xchg
cli
sbb
lods
das
sbb
dec
mov
lahf
xchg
or
jns
test
imul
sub
sub
mov
jbe
jmp
test
aas
fstl
ret
filds
nop
xorb
mov
dec
shll
add
xchg
pop
movsl
push
cmp
inc
mov
jns
xchg
repz
lock
xchg
js
je
hlt
lcall
xchg
sub
data16
in
push
xlat
sbb
cli
or
aam
scas
add
test
fisttpll
cmp
mov
addr16
sub
arpl
jg
xor
addr16
scas
std
dec
adc
and
pop
int3
pop
lcall
test
mov
mov
test
dec
and
inc
out
sbb
das
sti
xor
shl
pusha
fbstp
repz
mov
push
icebp
out
push
mov
pop
cltd
dec
mov
cmp
and
ret
insl
jp
xchg
fisubrl
pop
cltd
adc
nop
je
pop
outsb
push
cmp
ret
test
sub
push
push
xchg
rol
push
cmp
das
jo
repnz
mov
cmp
fdivl
lock
xchg
inc
mov
lods
pop
popf
add
or
arpl
aas
ret
xor
ss
mov
mov
jp
lods
jns
fstpl
pop
push
xchg
lock
pop
stos
loop
cltd
test
or
js
push
pop
insl
push
push
and
jbe
gs
cmpsb
push
push
ret
mov
and
adc
out
push
mov
fimull
repz
lret
mov
pop
imul
jp
pop
outsb
ja
stos
pusha
lcall
call
jb
int
les
les
stc
andl
push
mov
notb
jne
sbbb
dec
lahf
jne
mov
mov
sub
ss
popa
adc
pop
test
push
dec
mov
inc
push
test
jno
mov
jne
and
lock
cmp
mov
ds
popf
dec
push
popa
or
mov
push
js
les
push
jle
add
push
fnstsw
fiaddl
mov
add
jg
sub
dec
inc
add
std
out
in
fcoml
inc
mov
push
adc
and
pop
sub
and
pop
mov
lock
jne
xchg
sub
insl
nop
sub
lahf
inc
lcall
movsl
add
add
ret
inc
sbbb
pop
dec
or
pop
mov
xor
shr
sub
jmp
mov
xchg
xchg
mov
mov
mov
cwtl
mov
cmp
jae
pushf
xor
and
imul
int3
insl
mov
stos
xor
std
jmp
ffree
cmp
fdivrl
jne
scas
push
shrb
ljmp
jge
movsl
jns
sahf
xor
cwtl
jge
stc
mov
cmp
mov
int
jle
or
lods
xor
mov
lods
aas
cltd
movsb
shlb
aaa
xchg
pushf
ja
lahf
subl
loopne
push
subb
push
stc
and
push
cmpsl
fiaddl
scas
or
sarb
pop
inc
push
or
aaa
jle
or
add
js
push
cmp
sarb
mov
inc
faddp
cmp
mov
mov
mov
fsubs
in
pop
mov
xchg
sub
inc
bound
mov
pop
int3
add
aaa
add
push
or
movsl
movsl
hlt
test
mov
je
subb
jno
mov
push
in
movsb
mov
sbb
in
loop
cs
sub
sub
in
jle
or
jmp
stc
jmp
push
fwait
inc
xchg
mov
filds
pop
xor
sbbb
fdivp
sub
mov
test
or
bound
jp
cmp
push
sahf
sbb
cmc
arpl
popf
mov
mov
push
les
aas
mov
in
mov
jmp
mov
xor
adcl
xor
pop
jne
adc
sti
ret
and
sbb
ja
dec
lret
jmp
imul
xchg
sub
aaa
daa
push
add
xor
adc
mov
mov
adc
fs
push
insb
sti
sti
dec
mov
rorb
sti
or
adc
push
sahf
push
jle
mov
das
pop
xor
and
dec
and
je
movsb
das
or
inc
sti
and
out
mov
fistpl
divb
or
les
aas
mov
lret
mov
or
mov
fs
outsb
or
mov
iret
push
icebp
and
mov
and
adc
shrb
sub
push
jmp
push
xchg
sub
gs
lods
gs
test
aad
push
and
pop
test
adc
or
mov
hlt
ss
ja
add
lods
jp
mov
lds
push
or
sbbl
shl
adc
cmp
in
in
adc
sub
dec
inc
push
xor
dec
dec
dec
xchg
push
mov
lcall
shll
orb
int3
sub
pop
adc
pusha
ret
push
lcall
jp
into
lods
mov
pop
fstpl
mov
jb
mov
sbb
mov
outsb
les
lcall
or
lcall
les
mov
dec
lret
pop
jmp
adc
pop
mov
or
lods
pop
sub
bound
mov
loop
xchg
pushf
ret
hlt
lods
pop
and
pop
or
xchg
imul
leave
ljmp
aas
jle
subl
mov
jmp
cli
inc
ss
pop
inc
inc
in
mov
push
inc
cmp
push
mov
cmp
dec
in
cmc
mov
jmp
mov
fnstenv
push
add
xor
hlt
lret
enter
pop
push
dec
js
pop
sub
mov
jb
jnp
imul
dec
add
test
ss
insl
into
mov
push
mov
imul
gs
daa
pusha
movsl
data16
popf
stos
popf
sarl
icebp
mov
mov
nop
nop
cmp
ret
imul
mov
xchg
testb
insb
ret
fstpt
adc
out
mov
dec
and
sub
sbb
xor
lret
je
mov
repnz
subl
fisubrl
fwait
icebp
xchg
xor
scas
cs
fs
test
pop
int
pop
js
ret
and
rolb
pop
aaa
mov
xchg
xor
jecxz
push
loop
scas
popf
xchg
push
arpl
mov
xchg
lock
test
jecxz
mov
mov
xchg
add
jge
dec
cmp
mov
cwtl
mov
cmp
mov
jae
xchg
nop
loopne
xchg
cltd
push
jl
lret
push
or
mov
pop
or
icebp
popf
sti
push
pushf
ret
test
stos
xlat
fnstenv
sti
stc
xchg
shlb
jbe
xchg
xlat
out
mov
mov
clc
inc
in
gs
mov
cmp
cmp
loop
mov
les
decb
je
inc
pusha
or
negl
push
popa
aaa
ret
and
mov
pop
xchg
loop
popa
int
add
or
out
push
movsl
aad
sti
lea
inc
push
mov
xor
xchg
cld
and
pop
sbb
sbb
in
popa
jo
scas
imul
bound
xor
sub
mov
shrb
dec
lcall
push
pusha
xor
jo
jg
xchg
popa
mov
dec
repz
sbb
xchg
lret
cmp
enter
sbbl
mov
inc
sub
sub
cli
mov
pushl
lods
or
dec
movsl
dec
insl
xchg
jns
jnp
jb
insb
cmpsl
pop
imul
fisubrl
dec
es
fdivrs
rcl
stos
xor
or
inc
insl
jo
push
dec
out
in
inc
jl
popa
push
mov
mov
movsb
push
mov
mov
pop
divb
insl
jl
and
orl
mov
xor
jle
cmpsl
das
xchg
scas
sbb
sub
jge
sub
jmp
movsb
int3
inc
pop
sbb
pop
inc
inc
out
ret
call
aaa
fwait
cmp
clc
sub
shrl
cmpsl
insl
and
xlat
rorl
es
arpl
mov
in
sbb
test
mov
xor
push
aaa
mov
push
mov
data16
lds
jl
mov
in
sbbb
xor
dec
call
xchg
iret
cmp
loopne
dec
pop
addr16
loop
mov
mov
jp
enter
pop
adc
mov
cmp
orl
or
enter
aaa
in
xor
add
jb
pop
push
add
pop
and
test
ror
pop
inc
pop
mov
int3
sub
jnp
arpl
and
push
mov
inc
bound
ds
add
loop
or
imul
imul
ret
mov
cld
sub
mov
mov
in
ljmp
das
repnz
rolb
lahf
mov
and
pusha
adc
push
imul
add
cld
test
jbe
add
pop
roll
cmpb
test
pusha
clc
shlb
arpl
fwait
jmp
jne
in
mov
sbb
dec
out
mov
adc
xchg
add
pop
adc
std
test
in
aad
fs
push
iret
lret
or
lcall
dec
and
fmulp
mov
pop
pushf
inc
push
mov
pop
cmp
lods
and
shrb
inc
lods
sbb
frstor
out
scas
pop
mov
subl
dec
xchg
gs
and
sbb
test
iret
dec
fwait
aad
pop
inc
inc
add
aaa
sbb
lods
xor
inc
xchg
inc
pop
add
cltd
mov
sub
call
pop
add
outsl
and
fsubs
fnstenv
cltd
ja
movsb
out
jp
pop
jl
jbe
adc
push
push
cld
inc
inc
jp
dec
clc
mov
mov
cld
xchg
or
sbb
ljmp
test
dec
jae
fstps
cmpsl
mov
or
test
mov
insb
insl
pop
jne
jns
jns
or
aaa
mov
test
ja
aas
sub
xor
or
jmp
imul
je
bound
flds
ret
fnsave
imul
mov
mov
lock
dec
in
inc
push
sub
mov
inc
addr16
sti
mov
jecxz
xor
cmp
out
pushl
in
loop
inc
ret
mov
lcall
sahf
fdivl
or
ljmp
cltd
adc
mov
loopne
mov
fcomip
das
dec
push
sbb
lds
ja
xchg
rcrl
and
and
pop
xor
lea
pop
call
sub
xchg
ret
ret
jo
stc
std
sub
jecxz
push
and
sub
lahf
ret
and
sahf
mov
dec
jae
add
push
xchg
cmp
ret
dec
push
loope
out
mov
int
xchg
adc
push
adc
pop
xor
fimuls
roll
fcompl
sbb
inc
cmp
sub
nop
int
imul
xchg
mov
aas
mov
add
rcrl
push
ror
aaa
xabort
pop
cmp
adc
xlat
sbb
inc
jb
scas
mov
sbb
dec
lea
mov
lods
ds
lahf
and
mov
jns
test
cltd
mov
jmp
jecxz
adc
out
repz
dec
ljmp
mov
adc
adc
and
push
pusha
push
mov
mov
dec
adc
rolb
lret
sbb
in
and
in
mov
fwait
adc
push
xchg
nop
insl
mov
xchg
leave
pop
dec
cmp
loopne
cwtl
aam
in
dec
jne
je
or
sub
mov
inc
js
inc
roll
adc
rclb
mov
pop
out
jne
in
punpcklbw
pop
aaa
repz
push
xor
jae
std
cmp
test
sbb
lret
stc
loopne
in
mov
cmp
jno
xor
cmp
lods
insb
xor
or
push
sub
in
lds
ja
jnp
pop
js
ds
adc
in
sbb
sbb
popf
mov
lds
movsl
push
scas
sub
and
cmpsl
sub
adc
loop
pop
enter
adc
scas
and
xchg
inc
fistl
cwtl
ret
mov
jmp
rcr
xchg
je
xchg
sarl
push
ret
and
mov
push
push
or
popa
xchg
pop
or
add
push
aaa
add
adc
ljmp
pop
mov
pop
pop
gs
xor
cmpsb
push
shrb
sub
popf
cmpsl
sub
mov
int
repnz
xchg
test
mov
stos
adc
sbb
push
es
xchg
iret
xchg
sbb
mov
test
repz
inc
stos
in
daa
pop
jae
adc
xor
add
add
adc
aaa
inc
inc
and
mov
xchg
in
cmpsl
imul
imul
insl
test
notl
int3
loope
jnp
add
orl
push
jne
dec
scas
lods
push
sti
push
jb
mov
sbb
and
push
inc
jge
mov
add
mov
cmp
outsb
popf
out
cli
lods
arpl
mov
mov
dec
mov
nop
or
pop
popf
pop
nop
add
stos
xor
int
mov
ret
xor
lea
arpl
fstpt
or
pushf
or
jle
mov
dec
mov
xor
sbb
das
jl
sbb
and
aam
out
in
rcrb
pusha
lcall
insb
cs
sbb
adc
pop
adc
int
in
adc
inc
mov
cmp
and
xor
fbstp
in
ret
jb
push
test
mov
lods
xchg
mov
mov
mov
mov
daa
stos
and
lahf
test
pushf
fistl
loop
mov
mov
mov
and
add
mov
jns
inc
stc
cmp
jp
xor
movsl
mov
popf
enter
ss
bound
mov
push
mov
and
mov
nop
ficoml
leave
loope
sub
dec
fisttps
jno
frstor
iret
das
das
lods
xchg
das
xchg
and
push
scas
mov
inc
cmc
das
push
stos
out
dec
add
jecxz
mov
test
xchg
xor
xor
push
push
or
aad
adc
sub
data16
mov
push
adc
pushf
dec
aam
xor
in
mov
lcall
ss
sub
inc
fdivl
rol
push
ljmp
clc
icebp
and
mov
loope
pop
stos
jb
lea
mov
sub
sbb
and
xlat
stc
dec
icebp
sbb
dec
int3
lds
outsb
sbb
and
and
fisubs
std
leave
dec
cmp
das
pusha
dec
insl
ficomps
out
jno
dec
lcall
rep
les
out
adc
inc
in
imul
std
jmp
fisubs
loope
int3
xor
je
xor
fwait
mov
pop
mov
in
pop
xchg
lods
in
push
push
push
or
in
faddl
dec
sarl
lea
in
addr16
sub
mov
mov
xchg
sub
repnz
add
ja,pt
mov
push
mov
ret
decb
imull
enter
mov
sub
imul
mov
out
aad
or
int3
dec
pop
int3
push
dec
nop
xchg
lcall
mov
sbb
sbb
dec
sbb
add
ljmp
mov
push
test
push
ret
dec
fucomi
mov
inc
or
dec
dec
mov
aaa
stos
cmp
sbb
lock
rcrb
shll
mov
lods
icebp
jl
push
loop
fmuls
js
hlt
scas
lods
aad
xor
and
push
add
push
aaa
jl
push
push
xor
sub
call
xchg
shrb
ret
loop
dec
cpuid
test
sti
pop
cmp
dec
in
mov
rcrl
mov
adc
mov
xchg
mov
ret
or
mov
push
insl
push
or
push
cmpsb
xlat
lcall
cmpsl
sti
mov
mov
cwtl
loope
inc
pcmpeqb
lds
ljmp
adc
sbb
insl
test
les
dec
mov
mov
fmuls
jns
lret
mov
fldcw
jno
lods
dec
push
push
sbb
sbb
jo
stos
push
add
bound
insl
notl
jno
push
pushw
jbe
inc
sbb
icebp
pusha
jbe
add
mov
pop
xor
mov
repnz
pop
ja
mul
dec
xor
dec
mov
cmp
cmp
add
in
into
or
xchg
aaa
mov
push
ja
sub
pop
and
jne
pushf
pop
repnz
sbb
call
or
sub
and
dec
xorl
sbb
ja
mov
in
movsb
xchg
test
loopne
stos
adc
jmp
jo
jmp
xchg
or
adc
xor
add
mov
cmpsb
jb
inc
pop
cmp
add
pop
cmp
mov
push
mov
or
dec
stos
test
das
push
sub
mov
das
insb
adc
mov
cmpl
mov
pop
dec
testl
or
cli
int
das
push
fimull
cs
fisubl
inc
cmp
int3
in
das
insb
nop
push
iret
inc
inc
pop
xchg
in
push
gs
cs
mov
bound
in
mov
popa
bound
lods
fdivrp
daa
mov
icebp
lret
call
pop
push
jecxz
jp
arpl
ljmp
bound
rcll
movd
pop
inc
test
push
test
insl
cld
lds
pop
lcall
adc
lea
scas
aaa
rolb
fcomi
pop
fnsave
mov
jne
sbb
into
pop
fnstsw
jno
shll
insb
jo
cmp
jge
outsl
xor
es
call
mov
cmp
xchg
ja
mull
inc
add
cmp
sub
rep
adc
cmpsb
sbb
shlb
lds
and
sub
mov
xchg
jae
pusha
and
add
push
rclb
inc
add
push
mov
loop
pop
dec
stos
stos
mov
push
push
jl
inc
data16
push
loopne
int
sahf
cmp
icebp
mov
adc
scas
lock
adc
mov
lods
dec
jne
push
ret
movsb
jl
push
jbe
int
cmp
das
rclb
or
cmp
inc
push
jmp
int
movsl
add
mov
and
jp
stos
icebp
ljmp
lock
repz
push
fwait
mov
push
jl
mov
out
push
xlat
push
cwtl
ljmp
pusha
pop
fisubl
les
pushf
lret
mov
hlt
stos
outsl
mov
cltd
push
mov
dec
int
push
std
push
inc
es
xchg
scas
movsl
mov
dec
mov
push
adc
push
stos
sub
xchg
xchg
and
xor
roll
mov
lahf
inc
xor
icebp
dec
lret
jge
pop
leave
dec
xor
rclb
mov
sbb
ljmp
fimull
dec
xor
clc
xchg
out
adc
shrb
mov
sbb
sbb
mov
lret
js
scas
pop
lahf
mov
jecxz
or
adc
aaa
arpl
mov
out
dec
clc
imul
fnstsw
in
daa
mov
inc
decb
lcall
dec
rorl
push
push
xchg
mov
mov
fsubrs
cld
js
or
push
pop
add
stos
fstpt
imull
and
mov
stos
sahf
or
jmp
pop
pop
push
mov
and
or
xor
cmpsl
test
mulb
gs
cmp
push
stos
mov
arpl
call
and
xor
insb
jb
rcl
xlat
icebp
mov
cli
and
mov
cwtl
sbb
call
or
jb
fisttps
movsb
or
lret
mov
push
ja
ret
cltd
cmp
pop
xchg
fstpt
mov
push
imul
mov
pusha
ja
add
dec
mov
inc
cld
add
ja
mov
xchg
and
jae
notb
sub
pop
mov
xchg
jge
pop
xor
sbb
xor
and
or
lret
insl
push
sub
out
mov
mov
insl
rclb
mov
je
push
xchg
mov
out
pop
xor
mov
repz
lock
aas
int
mov
ficompl
stos
test
inc
addr16
dec
sbb
push
mov
jmp
and
cmp
jnp
adc
pop
lds
lcall
leave
mov
push
or
sbb
jno
fnsave
sub
test
mov
xchg
push
push
sub
sti
or
push
jae
jno
sub
icebp
mov
loop
stos
repz
ret
jb
out
das
jge
mov
scas
adc
sbb
cmp
movsl
jl
inc
call
lcall
sub
mov
mov
stos
xchg
nop
in
imul
sbb
mov
mov
cmp
push
mov
or
arpl
cmp
push
outsb
fisubrs
mov
mov
pop
stc
cwtl
or
push
repnz
lcall
push
mov
inc
stos
sub
repnz
xchg
xchg
xchg
cmc
sti
out
lds
or
popa
ja
jecxz
pop
pop
jns
dec
sub
lods
jo
add
cli
cmp
lret
cld
cmp
arpl
cmp
fwait
test
fnstenv
mov
mov
push
pop
jge
add
xor
notl
cwtl
adc
lret
leave
icebp
mov
lahf
sbb
push
mov
hlt
fdivrl
sbb
sbb
mov
in
stos
scas
insb
adc
jmp
into
lock
fcomps
je
mov
fnsave
jne
loope
mov
or
inc
mov
outsb
insb
test
movsl
aaa
adc
sbb
test
push
mov
adc
jecxz
mov
pop
xor
and
jp
icebp
and
push
lea
loop
js
pop
filds
cmp
insl
out
xor
shlb
ret
and
in
xor
popf
lods
stos
sbb
cmp
xchg
add
shlb
lcall
xor
cltd
lcall
out
mov
pusha
imul
mov
mov
sub
cmp
mov
lret
nop
rcl
sub
loope
fiadds
push
push
dec
sbb
and
cmp
out
mov
jmp
cmp
call
icebp
mov
invd
fdiv
add
fistpl
add
inc
or
xchg
movsl
pop
pushf
scas
jmp
adc
jns
mov
xchg
aam
cmpsl
push
cld
push
idivl
pop
mov
bound
lahf
movsl
adc
and
jp
fs
aad
push
orl
or
ret
inc
push
pop
dec
mov
mov
cmpl
int
call
mov
push
sbb
mov
test
add
push
xchg
or
in
fsubrs
inc
cmpsb
fstpl
das
xchg
aad
adc
and
out
and
lret
cmpsb
sub
sub
mov
dec
jg
loop
push
sub
notl
cmp
sti
push
jmp
mov
pop
jbe
push
mov
mov
and
loope
pushf
movsl
setle
push
and
mov
inc
xchg
shlb
mov
mov
mov
pop
sub
sti
jecxz
sbb
xlat
jbe
sub
dec
fwait
and
inc
sbb
fcomip
rorb
pop
aaa
inc
mov
cmp
jne
mov
push
sbb
mov
push
xchg
in
jg
jae
in
movsb
pushf
jnp
popa
sahf
iret
cltd
push
sti
sahf
jns
adc
xor
lds
mov
jl
data16
lcall
test
xchg
ja
jo
and
mov
cwtl
push
arpl
sar
sbb
data16
test
repnz
pop
push
lods
sbb
lea
mov
push
cld
jne
cmp
xlat
cwtl
pop
sub
stos
push
dec
push
jo
in
cmp
ss
mov
add
scas
or
dec
jo
cltd
pop
jp
andb
in
sbb
inc
mov
aaa
leave
sub
pop
or
mov
mov
cmp
jnp
or
ja
mov
sbb
cwtl
mov
or
sbbb
out
dec
sbb
lcall
clc
enter
mov
lock
lock
push
mov
popa
fsubrs
hlt
pusha
lahf
mov
mov
inc
lods
mov
inc
and
scas
jbe
sarl
mov
xor
daa
pop
fbstp
and
adc
mov
or
fisubrl
cli
test
roll
and
idivl
movl
insl
jecxz
mov
pop
xor
outsb
and
add
xor
test
scas
lods
add
loop
mov
mov
pushf
jecxz
adc
xchg
sub
pusha
jnp
in
push
fwait
outsl
hlt
clc
sbb
mov
dec
xor
jno
or
pop
lds
xor
imul
ds
outsb
lock
mov
xchg
xor
jecxz
call
dec
sub
dec
cwtl
mov
mov
rclb
popf
out
or
hlt
in
push
test
dec
gs
sbb
adc
icebp
jnp
push
push
jb
jle
fsubl
jl
jle
cltd
pop
mov
out
inc
in
xchg
fisttpl
mov
xchg
cmp
shlb
dec
adc
cmpsb
clc
outsl
lret
xor
sbb
cmpl
mov
pop
cld
or
popa
enter
nop
out
es
sub
sub
jg
jno
outsl
sbb
nop
inc
jns
ret
dec
mov
fidivrl
xor
dec
jge
mov
sbb
loope
push
sub
frstor
push
pop
mov
mov
xlat
cmp
push
add
imul
inc
pusha
flds
push
xchg
rclb
aam
into
out
in
jb
je
in
aaa
push
jne
dec
push
or
add
adc
insb
cmp
jbe
out
movsb
clc
sub
out
negb
add
mov
cs
mov
outsb
inc
call
push
mov
dec
mov
add
xchg
pop
mov
pop
sbb
es
inc
cs
jp
mov
pop
sbb
adc
repz
add
mov
stos
jl
jp
adc
fnstenv
popf
sub
jecxz
push
gs
scas
sarb
sub
adc
scas
lret
inc
imul
je
push
jle
xchg
pop
jae
add
ret
pop
jl
pop
pop
test
cltd
ljmp
pop
pop
andb
inc
xor
out
pop
mov
or
push
idivl
pop
test
data16
dec
ret
mov
push
divl
ret
jg
jg
cs
xor
sub
nop
mov
mov
mov
lret
imulb
ja
or
xor
int
push
add
cltd
bound
add
adc
xlat
lea
in
and
sub
dec
jge,pn
pusha
jns
bound
scas
jo
cltd
push
dec
fsubrs
pop
scas
loopne,pn
xor
call
gs
cmpsb
gs
add
pop
push
xlat
movsl
inc
es
dec
mov
shl
mov
mov
cmp
mov
xchg
ds
inc
mov
decl
test
sub
xchg
movsl
arpl
push
aas
fyl2x
add
or
or
mov
mov
je
test
andb
test
add
adc
sbb
fisttpll
pop
movsl
mov
dec
push
adc
repnz
and
pop
push
mov
stc
clc
jl
addl
dec
sub
dec
pop
jecxz
pop
cmpsl
pop
stos
jg
push
ljmp
je
push
pusha
call
rcrl
mov
cmp
pop
cmp
push
inc
movsl
jecxz
fdivs
incb
lea
pop
xchg
pop
orl
fstps
add
cld
mov
dec
sbb
or
hlt
ja
dec
scas
xchg
nop
jns
add
xor
dec
mov
pushl
jp
push
cli
cmpsl
bound
sbb
in
jmp
add
inc
pop
leave
push
adc
in
sbb
mov
push
push
lock
mov
sub
cmp
pusha
dec
xor
loopne
popa
int
loop
lock
inc
push
jnp
jno
imul
pop
sahf
mov
xchg
sbb
icebp
insb
xchg
pop
test
mov
pop
loop
xchg
sub
aam
jne
imul
push
push
out
icebp
mov
shl
pusha
sub
into
xchg
sti
adc
cld
lret
and
pop
aad
test
xor
mov
mov
jns
push
mov
adc
ja
fistpll
loopne
jno
mov
inc
mov
arpl
dec
in
jno
dec
fcomps
shll
and
push
add
andl
xlat
fistpl
xchg
dec
xor
push
loope
push
insl
lahf
lret
subl
mov
jmp
lret
inc
or
xorb
out
adc
lods
in
shll
mov
or
cmpsl
jmp
mov
aam
out
pop
adc
mov
into
into
aas
sub
stos
in
lods
inc
pop
cld
movsb
push
mov
push
negb
repz
dec
or
in
sub
mov
cmpb
or
pusha
mov
sbb
mov
mov
stos
mov
loopne
cmpsb
fcomps
mov
adc
or
scas
gs
pushl
jb
jae
js
cmc
dec
mov
mov
jnp
mov
jg
lock
xor
sbb
clc
and
movsb
fisubs
outsl
stos
sub
fnsave
push
lea
test
lds
xor
inc
push
hlt
or
mov
xchg
sbb
jne
mov
rcl
and
push
sbb
loopne
jl
and
adc
sub
mov
push
arpl
jecxz,pn
loope
repnz
jg
out
fldenv
push
dec
pop
cld
pop
fildl
mov
pop
cmp
mov
sub
dec
dec
test
lods
sub
aas
pop
pop
cli
cmp
add
in
and
ftst
mov
xchg
shl
adc
mov
xchg
cmp
mov
ds
imull
cmpl
ja
popf
cmpsl
push
sub
jecxz
fstpt
dec
mov
pop
dec
rorb
add
jg
int
or
sbb
mov
call
mov
fcmovu
loope
andb
add
pop
and
stos
into
sub
out
pop
scas
dec
stc
xor
lock
mov
jo
ds
imul
lds
jmp
sbb
outsb
jns
js
add
mov
or
sahf
lds
xor
sub
cld
xchg
inc
sub
jle
push
or
popa
jns
xchg
cmp
jne
add
sub
mov
dec
roll
pushf
jp
mov
mov
xor
push
xchg
and
pop
cmpsb
scas
shll
inc
repnz
stc
sbb
sahf
mov
gs
leave
or
jmp
or
stc
and
test
into
aas
xor
and
jl
mov
mov
adc
mov
daa
dec
dec
test
insl
fdiv
inc
ja
stos
cld
dec
pushf
pop
sbb
stos
jo
sbb
mov
mov
jle
flds
int
pop
xchg
cwtl
add
sbb
cmpsl
jmp
mov
push
popf
outsl
das
xchg
sbb
in
out
or
out
push
or
pop
lret
xchg
mov
stos
mov
or
imul
pop
and
and
in
jecxz
or
js
jb
bound
mov
mov
loopne
adc
dec
jle
data16
jbe
fdivrl
mov
clc
jge
imul
int
mov
stos
mov
mov
ja
sbb
sub
jl
mov
sub
dec
movb
lret
outsl
jge
lods
addr16
arpl
cmp
inc
push
sub
xchg
lahf
daa
mov
loopne
mov
mov
jmp
or
dec
push
ja
stc
mov
psrlq
fwait
icebp
cmp
xchg
xchg
adc
test
dec
jecxz
rolb
mov
jle
push
dec
ret
int3
sub
jns
icebp
push
mul
mov
lret
test
lahf
bound
pushf
lea
idiv
xchg
push
mov
dec
psrld
loope
cmp
pop
out
xchg
pop
pop
jp
mov
jge
sub
loop
sbb
push
insb
inc
je
roll
stc
dec
and
in
push
in
outsb
push
lahf
jecxz
inc
div
pop
rcl
inc
push
sbb
rcrl
mov
movsl
jbe
jle
fwait
dec
out
jmp
pop
mov
imul
aaa
cs
and
sbbb
jg
cld
jl
mov
and
mov
movsb
lock
movsb
lea
jmp
xor
mov
js
jb
pop
adc
and
pop
lahf
aad
mov
push
loope
push
inc
add
cmpb
jmp
xor
sub
sub
lds
out
repz
mov
loop
and
adc
ds
push
adc
lea
push
lods
xor
rol
aam
pop
loop
or
fcmovnu
in
and
inc
scas
addr16
enter
add
out
or
mov
xor
cmp
aam
pop
ja
sub
xchg
or
cmp
jg
sahf
shl
lds
enter
loope,pn
push
mov
add
cmp
imul
inc
jno
movsb
jo
push
sub
xor
dec
mov
lods
xchg
pop
mov
out
ss
push
mov
rolb
andb
sub
push
movsl
popa
jg
xor
insb
fisttpll
mov
pop
sub
movsl
mov
imul
mov
aas
out
ja
and
mov
scas
outsl
incl
repnz
fnstsw
test
sbb
movsb
sbb
cmp
daa
and
dec
sub
dec
clc
sbb
pop
shld
xchg
xchg
and
les
loop
pop
sbb
or
fimuls
fbstp
cmp
enter
gs
mov
mov
jbe
push
idivl
pop
lock
mov
mov
repnz
hlt
jae
push
js
jns
mov
xor
adc
ss
xor
push
aaa
lods
loopne
insl
hlt
ficompl
aaa
shll
jp
lds
in
lods
add
pop
in
lcall
dec
movsb
xchg
xor
lret
and
adc
add
jbe
pop
pop
fldt
lods
xchg
jb
push
adcl
and
xor
sbb
jp
jae
testb
cmp
xchg
push
sahf
cmc
insb
inc
jmp
push
jae
lds
mov
test
pop
out
pop
mov
std
push
pop
mov
in
or
mov
mov
repnz
call
outsb
in
fwait
pop
iret
fstps
movsl
fadds
popf
dec
adc
and
repz
aam
xchg
inc
mov
stos
sub
and
bound
mov
addr16
sti
push
inc
jbe
jb
cmc
push
cmp
adc
ja
sub
mov
adc
sub
push
push
add
or
int
out
jbe
mov
shll
data16
jmp
inc
or
pop
sti
daa
bswap
xlat
je
adc
and
inc
push
mov
xor
fs
mov
popa
cmpl
xchg
add
push
sub
mov
push
out
in
inc
push
cmc
jb
adc
loope
pop
in
add
xchg
sbb
cmp
cmp
jae
jmp
lret
mov
or
or
dec
lcall
fistpll
jg
cmp
xchg
xor
cwtl
fisubs
xchg
mov
ljmp
cli
and
test
dec
jo
add
jno
mov
sub
or
fs
sbb
into
out
inc
insl
ljmp
xlat
and
cmp
mov
pusha
xchg
cli
jge
or
pop
xchg
jecxz
sub
xchg
sub
or
pop
xor
arpl
imul
jmp
jp
mov
mov
adc
lret
int3
or
xlat
jp
jbe
call
push
aam
or
or
push
int3
lahf
mov
inc
push
jl
dec
sub
sub
pop
sbbl
pop
cmp
dec
add
leave
xchg
push
cmp
dec
mov
push
mov
mov
jl
fidivrs
movsl
jg
into
lahf
icebp
cmpb
jbe
in
add
xor
lcall
cld
cmpsb
jbe
bswap
add
sbb
push
mov
add
mov
daa
cmp
mov
lret
icebp
xchg
data16
push
pop
xchg
insb
push
jns
mov
cmp
mov
pop
inc
sub
mov
in
lods
dec
mov
xor
or
daa
stc
cmp
gs
test
mov
mov
fldt
fsts
clc
out
lds
arpl
lcall
int
mov
mov
mov
push
insb
inc
xor
fiadds
cwtl
inc
sbb
pop
jge
test
inc
aaa
aad
imul
and
or
mov
pop
mov
mov
mov
and
ret
cmp
out
shll
iret
incl
lods
mov
inc
rorl
jl
inc
aam
pop
push
pusha
cmp
sub
ss
mov
inc
mov
enter
adc
mov
mov
xchg
mov
hlt
mov
addb
fwait
movsl
mov
jg
stos
test
push
int
or
push
movsl
rcrb
in
pop
sub
sbb
push
mov
int
in
mov
jb
repnz
gs
in
cmp
jg
mov
jge
inc
mov
lds
mov
cmpsb
push
sahf
sbb
daa
xchg
mov
icebp
leave
fwait
mov
in
or
inc
lock
mov
cmp
cmpsb
mov
scas
dec
cmp
cmp
cmp
cmpb
xor
sub
adcl
imul
scas
loop
mov
stos
mov
push
jno
inc
addr16
lock
push
xor
dec
subl
push
xchg
cltd
add
fs
ficoml
ret
push
push
adc
sub
dec
int
push
jne
in
mov
mov
inc
jmp
movb
test
dec
jne
test
sti
fisubl
loopne
aad
and
dec
cltd
pop
pop
add
dec
or
movsb
inc
mov
dec
or
inc
inc
jle
lret
adc
push
jecxz
dec
mov
loopne
cmp
into
cmp
loopne
xchg
loop
jg
mov
dec
fs
insb
jae
jne
popf
sub
sub
add
sbb
xchg
push
or
ret
pushf
jb
sbb
loop
outsl
clc
or
loope
push
aad
imul
mov
adc
xchg
dec
ss
ficompl
in
cmp
lcall
outsl
outsl
fisubl
fistl
loopne
fwait
mov
adc
mov
push
popa
mov
mov
cmp
je
inc
cmpb
adc
jb
subb
js
call
adc
fimuls
scas
lea
and
xchg
cmp
ljmp
mov
fnstsw
xor
in
insb
push
shlb
mov
test
add
dec
sub
in
pop
test
add
fdivrl
callw
push
sbb
lahf
mov
out
icebp
pop
cmpb
lock
xchg
jb
aas
jo
fs
stos
ljmp
jmp
xlat
shl
adc
test
movsb
xor
fistpl
addr16
jecxz
aaa
fadds
xorl
xchg
clc
xchg
adc
pop
push
fsubr
mov
or
xchg
jae
insb
js
in
jbe
pop
xor
sbb
nop
stos
pop
mov
add
pop
out
pop
imul
mov
mov
stos
jp
fbld
icebp
imulb
scas
outsl
rolb
dec
jnp
repnz
cld
push
ljmp
ret
dec
shll
decb
es
jge
xchg
sub
sbb
pop
jb
add
jb
aas
ret
loope
add
push
jg
mov
in
pop
scas
pop
aam
ljmp
rcl
mov
xlat
adc
cld
adc
imul
test
pop
push
cmp
popl
lcall
xchg
mov
gs
into
and
xchg
dec
xchg
pop
or
aad
push
push
pop
pop
pusha
dec
imul
clc
fs
icebp
icebp
push
mov
jle
and
xorb
push
sbbb
pop
arpl
add
mov
nop
and
sub
jecxz
or
dec
shlb
lahf
in
cli
xor
mov
loop
ficomps
fs
and
push
mov
ja
imul
mov
jmp
pusha
pop
mov
push
fwait
fs
adc
das
and
jo
popa
inc
enter
dec
or
repz
into
je
data16
iret
mov
fdivs
int
mov
rcrb
jae
insb
cmp
jl
adc
mov
out
addr16
jne
adc
jbe
jle
iret
mov
jo
xchg
sub
jp
loopne
ror
aas
mov
test
add
push
sub
pop
fdivl
cmp
sbb
cmp
sbb
repz
stos
stc
inc
cmp
and
push
sub
jne
test
arpl
cwtl
aad
aaa
add
sub
add
push
roll
mov
imul
and
jae
xchg
push
dec
stos
sahf
bound
sahf
ja
jbe
fnsave
pop
mov
xchg
inc
ret
data16
test
xor
nop
mov
mov
movb
or
insb
inc
cmpsl
adc
imul
int3
jno
lret
and
mov
mov
cmpps
add
and
adc
aad
or
loop
mov
mov
mov
xor
sub
lcall
js
rcr
repz
mov
and
jl
inc
sub
mov
insb
or
mov
divps
dec
inc
stos
xchg
cs
fdivrl
es
xor
jge
inc
js
mov
fadd
mov
cmpsl
negl
nop
dec
or
xchg
aaa
cmp
or
imul
mov
pop
stos
test
mov
sub
cmpsl
scas
inc
insb
cmp
cli
xchg
enter
mov
cmpsb
ja
inc
loopne
nop
test
fs
sti
rol
aaa
lret
jmp
pop
add
pop
rcrl
sub
imul
pop
aaa
test
je
repnz
lcall
or
push
mov
ss
fisttps
add
std
dec
jle
or
cmpsb
icebp
pop
sarl
xchg
dec
jne
jnp
pusha
mov
outsl
mov
les
push
adc
cmp
xchg
xchg
inc
cmp
cmp
mov
in
lock
inc
pop
jo
jbe
add
sbb
scas
lock
xchg
xchg
sahf
sbb
loopne
lods
mov
lock
pop
lds
lcall
loope
addr16
ror
addl
jecxz
sbb
aas
inc
push
divb
inc
push
mov
pop
sbb
les
jmp
push
fildll
out
mov
sub
jb
out
xchg
cmp
inc
mov
fimuls
fildl
leave
loopne
xchg
fs
or
sbb
out
sub
inc
and
into
cld
inc
sbb
inc
fsub
sub
inc
gs
xor
dec
jno
sub
mov
jnp
add
xor
xor
addr16
sbb
jne
sahf
adc
mov
jno
lock
cmp
dec
cs
orl
int3
push
add
dec
xchg
pop
push
ss
daa
les
cltd
mov
lret
andb
push
sahf
mov
mov
adc
ret
dec
nop
cmp
cli
jo
pop
test
push
and
call
jne
and
cmp
dec
fdivs
cmp
add
xchg
push
fsubr
cmp
pop
dec
clc
xchg
and
or
int3
and
push
dec
add
lret
xor
rcrb
out
pop
ja
in
jmp
jbe
addr16
jle
fdivrl
sbb
mov
mov
push
inc
inc
ja
xor
cmp
jo
fwait
insb
cmpsb
mov
imul
sub
ret
or
sub
ljmp
and
mov
dec
xchg
imul
mov
or
stos
sbb
xchg
sahf
mov
inc
add
popf
mov
nop
imul
cmp
and
cmp
xchg
lods
mov
xlat
scas
sub
cmp
outsb
in
movsb
xchg
hlt
stos
mov
pop
ja
out
and
jl
push
arpl
dec
aam
inc
and
mov
mov
test
in
inc
inc
clc
loopne
mov
test
and
or
lret
fcomps
jb
shl
daa
jecxz
xchg
jmp
insb
mov
iret
mov
fdivs
pop
mov
mov
fbld
ss
les
stos
fstps
stos
cs
mov
shl
xor
mov
insl
dec
clts
stos
int3
loop
and
jnp
dec
and
mov
pop
loopne
adc
push
inc
sahf
lock
or
sbb
cs
ljmp
cmp
pop
addr16
sahf
inc
pop
lds
dec
cmpsb
mov
push
lahf
push
sbb
fs
jb
sub
jmp
cltd
dec
mov
mov
jge
sbb
inc
divl
inc
sarl
bound
stos
xchg
lock
pop
xor
add
sub
cmp
in
imul
and
nop
aad
ljmp
hlt
lds
mov
mov
in
pop
idivb
push
sbb
fwait
lcall
out
inc
cmp
or
mov
sbb
jno
arpl
popf
out
je
add
clc
lret
movsl
mov
sbb
divl
imul
jmp
mov
cmp
test
push
imull
fistps
mov
call
push
mov
les
sbb
test
add
and
iret
repnz
sub
mov
fdivrs
ret
xchg
mov
adc
mov
sbbb
movb
dec
out
or
outsl
lods
es
adc
pop
mov
stos
dec
movsl
enter
mov
mov
push
sbb
stos
mov
inc
push
ja
movsb
fcoms
sahf
ja
lcall
adc
pop
pop
out
ret
stos
jecxz
call
sbb
stos
adc
jne
out
xor
rcrb
adc
notl
adc
repz
push
push
fwait
in
jp
adc
aad
push
pop
push
sub
nop
cltd
or
xlat
mov
xchg
sbb
jb
push
sbb
dec
std
jno
scas
xor
pop
cmc
fldl2t
ljmp
data16
xor
aad
ret
jbe
lret
adc
out
addr16
xor
rorl
jle
pop
and
sbb
sbb
mov
xorl
insl
jl
sbb
das
in
mov
ljmp
icebp
shll
stc
sbb
sub
sbb
pop
movsb
or
mov
cmp
sbb
adc
ja
out
pop
adc
pushf
dec
push
cmpl
push
roll
mov
outsl
cmp
push
push
lret
fsubr
aam
sbb
inc
xor
cli
xor
sti
nop
mov
loopne
jae
roll
add
dec
rclb
fbld
mov
out
and
out
xor
ljmp
jno
push
inc
fwait
xchg
adc
mov
movsl
cmp
out
jle
iret
jae
addl
jae
jmp
push
iret
lret
loopne
sbb
rorl
ret
out
jp
mov
add
push
addr16
xchg
and
pop
pop
sbb
adc
imul
mov
mov
dec
sub
and
in
mov
xorb
xor
divb
std
cmc
adc
fcompl
lds
pop
int3
mov
movsl
ljmp
mov
jmp
jmp
pushf
add
arpl
mov
xchg
shrl
mov
pop
ret
xorl
cmpsl
mov
repz
aaa
lods
dec
ret
jb
push
xor
pop
dec
lcall
gs
jg
jmp
addb
xlat
call
pop
fidivl
dec
sub
pop
clc
ret
cmp
aas
fcompl
jo
xor
xchg
sub
push
in
test
or
jns
mov
rol
sbbl
repnz
cmp
jmp
fs
xor
or
push
jnp
pop
popf
std
push
adc
push
cmpsb
mov
leave
out
scas
pop
adc
or
push
add
rclb
mov
outsb
dec
xchg
pop
push
mov
xor
mov
mov
test
rclb
inc
adc
fbld
add
jae
mov
push
mov
popa
inc
mov
mov
dec
pop
push
adc
mov
pop
pop
icebp
aam
inc
push
xchg
sbb
test
pop
leave
pop
pushf
popf
push
or
fcom
sahf
mov
mov
and
pop
fnstenv
jl
dec
mov
imul
jge
lret
call
popf
jbe
imul
and
sub
fiadds
and
fildll
jb
push
add
mov
adc
fidivrl
sbb
les
and
lds
ja
shrl
cmp
jo
fdivr
and
lods
sbb
jle
int3
in
adc
pop
jno
push
or
mov
sub
mov
lea
rcl
push
and
jl
cld
enter
xchg
inc
and
fstl
fnstsw
mov
in
inc
xor
lds
mov
int
fsubl
pop
pop
daa
out
fstpl
call
js
testb
inc
pop
outsb
jbe
je
xchg
cmp
movsb
xor
cwtl
lock
lcall
cli
jle
shrb
imull
outsl
add
push
inc
sahf
sub
pop
push
dec
push
lods
mov
jg
add
pop
addr16
mov
mov
add
clc
cmp
or
mov
shr
dec
cmp
adc
adc
push
push
call
subl
test
mov
cs
mov
outsb
lods
test
imull
fistl
push
repz
testl
cmp
sti
mov
pushf
icebp
aaa
push
stc
xchg
or
fmul
aad
in
aaa
cmp
sar
fsub
jno
imul
sub
lahf
and
stos
lcall
jmp
sbb
sbbl
outsb
scas
std
or
sub
movl
adc
xchg
je
clc
daa
adc
xchg
je
jo
repnz
mov
jbe
cwtl
sub
ljmp
sub
shll
aas
decl
xchg
mov
cmc
call
insl
jmp
ljmp
xor
adc
jmp
xchg
fstl
iret
inc
add
ljmp
insl
sbb
jge
sbb
dec
std
dec
push
lcall
mov
lds
push
xchg
push
movsl
jle
jne
cs
cmp
in
or
cmp
fildll
lds
mov
pop
mov
gs
jnp
jae
push
dec
dec
test
sbb
loopne
mov
imul
mov
pop
in
xor
mov
mov
cmp
cmp
fdivrl
movsb
jmp
je
sbb
fildll
xor
push
dec
cmp
adc
xor
lock
jp
jmp
fs
xor
pop
inc
push
xchg
mov
sub
mov
mov
pop
mov
ret
cmp
or
push
lods
or
icebp
mov
add
inc
imul
and
bound
add
pop
std
dec
add
sbb
cli
xchg
lods
sbb
into
ss
sarl
rcrl
lcall
in
pop
xchg
or
std
mov
mov
xchg
adc
jae
out
mov
pusha
push
pusha
out
lods
dec
or
aam
scas
sbb
icebp
ret
push
shr
cli
out
mov
shl
inc
jmp
loop
jecxz
mov
xchg
xor
nop
in
jo
in
loopne
sbb
push
dec
mov
dec
call
or
push
fldt
in
call
cmp
xlat
cmpsl
testb
inc
movsl
outsb
shlb
mov
or
add
lods
jg
jno
pop
in
xchg
jae,pt
lahf
mov
imul
inc
je
inc
jp
or
pop
push
xor
sbb
mov
popa
sbb
push
mov
lea
xchg
xchg
mov
lret
rcrl
inc
mov
clc
inc
cmc
loop
and
movb
cltd
cmp
enter
sbb
std
in
lret
inc
out
push
push
mov
inc
pusha
dec
jns
stos
lods
and
leave
mov
mov
xchg
sub
or
jl
xor
add
cmp
mov
mov
in
test
mov
pop
mov
lods
int
lds
lods
shl
imul
or
xorl
loope
repz
sub
mov
lods
outsl
jbe
pop
psrld
aas
pop
or
and
mov
aad
dec
xor
jp
cmpsl
jae
fidivrs
pop
fildl
mov
or
mov
mov
push
lret
sub
sub
mov
stos
ja
fsubs
ret
in
cmp
pop
pop
xchg
jbe
or
cltd
aam
push
jle
jge
mov
aam
and
and
outsb
in
xor
mov
dec
dec
enter
lret
lock
xchg
inc
xchg
sbb
add
cmpsb
test
adc
and
xor
jno
sahf
ret
xchg
cmpsb
jge
pop
mov
mov
fwait
nop
xor
push
std
les
inc
movsl
mov
cltd
dec
adc
je
push
fcoms
xchg
add
ret
cmp
xor
xchg
sub
shlb
jmp
lcall
sub
inc
pop
rorl
pop
mov
aaa
dec
or
and
sti
filds
xchg
adc
sbb
fisubs
mov
inc
sbb
add
xchg
push
cmp
and
jp
or
leave
or
fisubrs
pop
mov
jo
xlat
aas
sti
xchg
lods
mov
out
dec
movsl
out
lods
adcl
jns
jle
mov
loope
cltd
and
jno
push
inc
js
push
cmc
inc
pusha
jg
cmp
jg
sub
add
cltd
or
xchg
mov
into
js
push
shlb
mov
adc
pop
cld
shlb
in
cwtl
test
add
inc
fsubrl
test
data16
rol
xchg
dec
repnz
imul
ret
in
adc
fcomp
sahf
xchg
stos
fdivrs
jo
xor
and
into
mov
popl
jne
jmp
pop
movsb
ss
mov
inc
xchg
loop
int
outsb
pop
pop
add
into
mov
mov
mov
add
movsb
sti
scas
popf
out
xchg
mov
in
sub
jno
mov
call
aam
sbb
leave
push
and
xchg
mov
xchg
cmpsb
je
in
cld
sbb
lods
mov
xchg
stos
icebp
mov
xor
mov
in
sbb
lret
pop
mov
je
lds
inc
stos
or
jmp
xchg
jnp
cmp
out
inc
loope
mov
inc
inc
jbe
in
push
outsl
es
adc
push
in
movsb
fcoms
sbb
sub
repnz
mov
xchg
push
sarb
aad
lock
cmp
loope
add
mov
jle
shlb
dec
cmpsb
test
out
out
adc
mov
xor
and
jl
cs
into
inc
pusha
jae
shlb
jb
or
inc
sbb
inc
or
xchg
mov
mov
data16
pop
xor
pop
xlat
aaa
int
push
push
enter
cmpsb
hlt
mov
fwait
sbb
push
sbb
js
rclb
fwait
sub
cmp
rcr
sbb
pop
inc
mull
jns
and
loopne
push
pop
or
or
stc
xlat
in
push
jae
mov
adc
in
mov
sbb
push
sti
outsl
pop
sti
adc
sbb
or
cs
sarl
pushf
pushf
mov
les
pop
jns
mov
outsb
stos
lret
dec
imul
lods
into
add
cmp
insl
cmp
sub
insl
xchg
dec
and
mov
mov
lret
mov
ret
into
sbb
test
out
clc
and
pop
mov
adc
imul
aad
push
xlat
aad
shrl
inc
pusha
inc
xor
fld
bnd
clc
fdivrs
and
out
push
or
fbstp
push
push
and
and
repz
dec
mov
add
out
fidivrs
in
in
es
dec
lret
xchg
aad
pop
pop
cltd
dec
iret
stos
jne
in
pop
sahf
xchg
push
push
imul
mov
lret
mov
jb
push
lcall
jge
cmpsb
xlat
je
xor
jno
jb
lods
xor
stos
rorl
sbb
adc
sbb
mov
loope
xchg
pop
imul
mov
lds
push
jb
push
sbbb
mov
lock
xchg
js
cld
out
xchg
shrb
mov
ss
leave
test
bound
mov
out
adc
dec
dec
lret
pop
inc
xchg
add
mov
rcll
jno
fsub
sub
divb
clc
inc
mov
je
add
fdivrl
outsb
fisubrs
mov
sub
ds
cltd
mov
add
divl
pushf
jge
add
mov
mov
jb
jmp
fwait
out
test
mov
movsl
fs
mov
add
les
test
mov
repnz
pop
dec
xor
ret
xlat
fwait
ja
sbb
mov
xchg
fsubl
iret
cmp
adc
rcll
dec
fidivrl
add
call
hlt
int3
mov
push
inc
push
cld
lahf
cmpsl
and
cli
loop
dec
dec
out
js
push
aaa
dec
jl
cld
push
cli
mov
push
loop
sbb
inc
mov
cmp
pop
les
dec
pop
inc
ret
or
mov
lret
push
cmp
add
shrl
sub
movsb
rorb
xchg
mov
test
andl
jb
mov
mov
in
pop
js
andb
cmpsb
hlt
fdivrl
outsl
dec
loop
fildll
addb
xor
fs
lret
shrb
push
xor
vcvttsd2si
int3
xchg
in
jbe
dec
pop
mov
das
cmpsl
in
and
cmc
ret
adc
cld
mov
js
data16
cld
fimuls
and
lods
xchg
in
push
add
test
push
iret
cld
shl
shll
movsl
mov
push
cwtl
mov
sbb
push
outsb
and
dec
and
fstpt
popa
or
dec
imull
icebp
mov
loopne
negb
lock
add
cmpb
mul
push
jmp
sub
dec
sub
mov
movsb
call
pop
xchg
imul
test
sbb
add
ret
mov
fcoml
xor
sbbl
inc
adc
shll
pop
mov
fildl
xor
inc
lret
fcom
in
adc
scas
icebp
in
add
inc
jnp
popf
mov
push
pushf
cmpl
mov
imul
rcrl
jno
push
ret
push
sub
xchg
jle
xor
ds
mov
inc
push
mov
pop
lcall
imul
fistpl
jnp
sar
dec
test
and
repnz
fs
pop
rcrb
mov
popf
daa
icebp
fcoms
pop
pop
jl
jl
jb
je
leave
loope
out
jecxz
sbb
jo
imul
rorl
sti
out
and
xchg
dec
mov
popf
fucom
in
push
cs
push
pop
aam
shrb
add
sub
ljmp
scas
mov
in
jno
ret
mov
imul
sti
test
pop
repz
stos
loop
push
adc
mov
fnstenv
stos
rclb
cli
and
add
add
inc
shll
jl
mov
cmp
pop
adc
lret
dec
in
jg
enter
xor
stos
xchg
sub
and
imul
repz
xchg
jmp
sbb
cmp
insb
loope
mov
add
mov
sahf
jo
push
das
int
cmpsl
jl
sub
cmpsb
fdivp
lds
and
lods
aaa
dec
push
mov
stos
orb
push
cmp
inc
and
icebp
ds
jns,pn
push
sub
xchg
adc
pop
dec
mov
inc
adc
pop
pusha
dec
mov
shrl
jns
xor
popfw
stos
test
fcompl
ljmp
sbb
mov
je
add
loopne
call
dec
xor
pop
in
or
inc
dec
push
es
mov
mov
add
test
cmc
mov
xchg
aad
inc
jp
and
push
iret
xchg
lock
popa
stc
sub
stc
cmp
jo
js
insl
jle
call
loopne
in
hlt
mov
sub
cmpl
cltd
scas
sbb
insb
lahf
sahf
xor
cmp
sbb
cmpsl
or
sahf
sbb
adc
insb
mov
jecxz
mov
push
push
aad
mov
incl
out
cmpsb
mov
inc
das
jmp
into
mov
push
push
mov
stos
mov
jl
adc
sbb
mov
and
cmpsb
mov
jmp
cltd
mov
mov
fstl
aas
scas
push
pop
cltd
sub
je
in
xchg
push
rorl
jl
sahf
out
xchg
sub
jnp
cmp
pop
xchg
in
aaa
fisubs
pushf
pop
cwtl
and
mov
mov
ficoms
loop
mov
nop
outsb
pop
inc
dec
shl
shl
cmp
lds
out
mov
sub
fstps
dec
movsb
add
and
inc
fistpll
movsl
inc
test
and
mov
lds
iret
loopne
jnp
mov
inc
orl
repz
inc
stc
sub
push
stos
das
adc
movsb
adc
mov
lods
inc
nop
pop
aas
mov
jle
scas
testl
pop
pop
data16
mov
iret
lods
das
xor
jnp
fnstenv
mov
mov
pop
les
xchg
pop
test
adc
mov
fwait
out
lods
push
aaa
rcll
jae
mov
out
mov
cmpsb
xchg
call
ja
aaa
cld
adc
jge
mov
mov
xor
add
mov
in
call
push
fildl
bound
sub
sahf
stc
push
push
push
pop
test
and
sahf
xor
sarl
push
xchg
sbb
inc
sbb
imul
popa
dec
int
imul
lahf
xlat
xor
pop
xor
dec
mov
xchg
in
push
xor
movsb
jl
adc
and
sbb
iret
dec
jno
das
add
stos
jge
or
push
cmp
sbb
dec
hlt
sub
push
dec
xchg
inc
aad
lcall
cmp
or
es
fcoms
inc
or
mov
out
inc
dec
mov
lock
mov
jo
xchg
fimuls
xor
lods
shrb
mov
push
out
dec
lahf
pop
jp
insl
cs
mov
fwait
sbb
xor
popw
mov
jae
ja
loop
add
add
aad
lcall
je
ret
movsl
movsl
popa
ftst
sub
or
addr16
repnz
je
int
dec
inc
jmp
sbbl
xor
lds
daa
mov
das
mov
lods
jg
leave
dec
sbb
mov
xchg
out
movsl
jno
pop
fldcw
sbb
or
stc
jns
mov
pusha
popa
pop
mov
mov
push
ficompl
add
test
out
cmpsl
nop
test
pushf
mov
jo
sub
gs
push
and
test
in
sbb
stc
sub
inc
daa
mov
iret
dec
push
mov
xor
sub
loope
mov
or
les
pop
mov
inc
sar
add
sti
adc
data16
jmp
popl
fcomps
dec
hlt
test
int3
sbb
lods
mov
in
mov
aam
call
and
popa
mov
loope
clc
movsl
insl
movsb
push
jecxz
mov
pop
and
mov
ret
dec
mov
xchg
xchg
inc
fidivrl
negb
mov
add
cs
dec
in
popl
and
out
inc
mov
dec
pop
pop
test
cltd
pop
gs
sbb
outsb
lret
stos
sub
fstpl
cltd
test
dec
sub
xchg
xor
dec
pop
sub
out
lock
rol
popf
xchg
shrl
xlat
dec
inc
inc
mov
jmp
push
pop
mov
addb
add
mov
adc
adc
sub
repz
dec
ljmp
add
jp
dec
xchg
les
pop
loopne
dec
pop
ret
xor
insl
orb
push
lahf
mov
in
mov
rclb
mov
inc
addr16
or
xor
xor
popa
push
mov
pop
aas
iret
daa
cmp
jno
out
and
aad
pop
jb
mov
inc
inc
shll
jg
xchg
cs
in
or
pop
test
xor
add
mov
sbb
testl
andps
mov
jg
pop
or
jno
xor
push
dec
mov
icebp
popf
sub
mov
inc
push
test
push
imul
gs
cltd
das
nop
fdivl
mov
out
push
xchg
push
lret
clc
dec
mov
pop
ss
dec
mov
add
xlat
adc
xchg
add
xchg
mov
out
fistpll
mov
stc
or
aad
xchg
push
cld
sub
jne
scas
cmpsb
mov
insb
pop
shll
xor
leave
mov
jmp
icebp
push
sbb
or
pop
lea
into
sbb
xchg
ljmp
pop
mov
dec
cmp
pop
insb
push
jne
or
and
mov
push
ljmp
lahf
inc
rcll
arpl
loope
or
mov
mov
push
mov
cmp
lock
pop
xchg
js
sarb
rcrb
into
das
mov
push
int3
xchg
mov
add
or
repnz
and
fwait
js
je
data16
mov
dec
es
ret
in
fstpt
aam
sub
mov
daa
testl
leave
dec
lahf
and
pop
test
mov
or
repnz
out
stos
loopnew
push
push
xor
sbb
daa
fnstcw
js
cli
scas
cld
push
mov
gs
cmp
sbb
mov
cmc
add
mov
fmuls
jae
scas
mov
and
ret
jecxz
ds
mov
xlat
cs
shlb
js
fsubrs
cmp
push
push
sbb
jle
cmc
aas
ret
lods
mov
inc
push
cmp
or
insl
jp
xchg
ds
hlt
out
xor
insl
inc
adc
lock
fcompl
pushw
lcallw
mov
xor
inc
mov
fistl
stc
or
jns
negl
iret
xor
pop
test
inc
xor
es
mov
xor
jae
pop
roll
cmp
mov
ret
scas
addr16
xchg
mov
lea
arpl
jmp
test
mov
push
out
sub
test
scas
xor
insb
or
gs
je
repnz
or
adc
arpl
mov
movsl
sub
xor
pop
inc
sub
in
addl
sub
faddl
repz
add
jle
pop
cmpsb
mov
or
or
fmull
push
sti
mov
roll
ja
lds
insl
pop
je
xor
mov
fcmovne
push
scas
mov
neg
rclb
dec
cmp
xchg
mov
lcall
jge
leave
jnp
mov
jns
mov
add
jbe
insl
test
sub
ror
xor
xchg
imul
jbe
jl
mov
int
mov
mov
scas
cmpb
clc
jae
dec
dec
cld
shlb
pop
xchg
fadds
in
mov
insb
leave
inc
mov
fldcw
push
fstl
dec
push
adc
mov
inc
int3
outsb
mov
cmc
loop
and
ss
xor
gs
lret
push
and
iret
pop
and
ja
movsb
xor
out
dec
mov
pop
test
xor
add
imul
and
cmpsb
and
xchg
ss
jecxz
into
lret
int3
popa
mov
dec
xor
out
scas
stos
arpl
lods
add
insb
xor
pop
sbb
mov
cltd
jl
test
jge
push
sbb
ds
pop
push
cmp
push
es
dec
xchg
sub
mov
ret
shll
shll
or
xchg
inc
test
incb
cmp
add
mov
adc
xchg
out
insl
lcall
hlt
sbb
or
daa
cmp
out
insl
scas
dec
and
cld
scas
aas
int
xchg
xor
pop
cmpsb
pushf
aad
ret
adc
jge
lea
lcall
or
out
subl
add
fcoms
arpl
into
dec
sbb
fcomps
push
pop
pop
stos
cmp
mov
pushf
mov
mov
sub
xchg
aaa
std
sub
lods
mov
adc
cmc
jno
push
and
adc
test
lret
insl
cmp
jnp
ds
fmul
jo
lcall
push
repnz
jnp
pop
xchg
mov
mov
xor
test
ret
mov
lods
push
dec
mov
stos
sahf
mov
mov
outsl
sbb
mov
imul
xor
add
popf
scas
cli
jge
push
adc
and
sbb
mov
call
ljmp
insl
int
sti
sub
dec
cs
dec
mov
sbb
scas
xchg
xor
cmpl
dec
cmp
mov
arpl
jecxz
rclb
sarb
inc
pop
das
or
pop
cmp
jb
rcrl
adc
stos
dec
rolb
sbb
hlt
jbe
pushf
movsl
push
lods
andb
and
jno
cld
sub
in
adc
fldt
faddl
sbb
sbb
sbb
pushf
push
mov
add
sahf
mov
stos
clc
fisubl
shrb
jp
cmp
shlb
fwait
in
jp
jb
xor
cmp
outsb
inc
inc
jno
in
testl
jmp
scas
hlt
shrl
push
je
movsb
inc
out
xchg
pop
sub
imul
sbb
push
mov
dec
lahf
sbb
cmpsb
mov
das
and
jne
lea
dec
scas
adc
push
fisubs
or
add
scas
xchg
int3
inc
in
cmp
and
mov
xchg
fiadds
lea
loop
fcompl
push
cmpsl
xor
sbb
fdivrl
outsl
ret
dec
push
jp
push
push
testl
mov
js
fs
cwtl
dec
fiaddl
adc
or
jp
sub
adc
jb
mov
inc
mov
daa
jns
xlat
arpl
push
adc
xchg
mov
add
cmp
insl
dec
mov
pop
insb
mov
leave
xchg
push
sti
aas
xor
adc
and
xor
push
sub
outsl
jns
add
sub
leave
test
pop
jmp
ja
ljmp
mov
rol
repz
out
lret
push
jge
lods
jmp
mov
je
out
cmpsb
add
cli
cmpb
mov
xor
leave
jl
xchg
pop
xor
std
push
mov
hlt
stc
mov
xor
arpl
cwtl
pusha
jl
push
mov
xor
aad
popa
jmp
push
mov
lret
shlb
mov
fs
je
xchg
daa
loope
icebp
test
xchg
push
inc
inc
mov
cmp
lcall
ds
push
mov
sub
movsb
sbb
lret
xor
stos
jne
pushl
testl
and
out
les
pop
nop
sub
pop
vdivss
inc
dec
ljmp
stos
cmp
pop
mov
cmp
jb
pop
int3
stos
insb
mov
fisubs
les
movsb
push
or
cli
pop
xor
sbb
in
cmp
xor
insl
add
jl
or
out
dec
adc
bnd
loopne
add
push
or
arpl
inc
add
lods
roll
addb
repz
xor
cli
fwait
mov
add
jo
pop
inc
test
out
jnp
mov
imulb
or
sbb
dec
inc
popf
push
aam
cmc
add
pusha
call
int3
repz
fiadds
jbe
inc
xchg
or
gs
and
mov
loop
das
pushf
push
jmp
sub
jno
xchg
inc
lret
fs
lods
jbe
jecxz
hlt
clc
sbb
shlb
ret
sarb
insl
enter
mov
sub
push
inc
in
xlat
push
and
pushf
mov
stc
push
dec
imul
xlat
pop
xchg
stos
rcrb
sbb
out
arpl
sarl
push
inc
push
imul
xchg
outsl
icebp
in
inc
dec
mov
shl
jp
leave
push
les
push
dec
xorl
sub
cmpsb
daa
test
nop
xchg
movsb
pop
mov
lret
or
sti
out
push
sub
arpl
sbb
lahf
and
pop
xchg
mov
dec
mov
xor
dec
or
jle
sbb
sbbl
ds
mov
push
xor
fidivs
div
cmp
pop
mov
jmp
ret
aad
in
je
mov
in
aas
ds
lret
out
enter
out
leave
mov
xchg
in
xor
pop
sub
mov
mov
mov
dec
push
xor
stos
insl
adc
mov
pop
sarb
pop
xchg
mov
sarl
push
jge
inc
jo
std
int
rcrb
shr
gs
push
stc
cmp
push
jne
addb
adc
push
and
dec
std
fildl
push
add
test
jae
mov
call
lcall
mov
mov
rcrl
outsb
xchg
push
jp
jns
cmp
and
push
popa
popf
leave
les
mov
clc
or
insb
movsb
loope
movsl
mov
push
dec
ds
sbb
and
mov
jmp
or
and
sbb
fwait
add
mov
gs
arpl
xor
xor
pop
fs
test
jp
dec
pop
mov
mov
mov
pushf
fadds
repz
ds
sub
imul
xchg
addl
jbe
shlb
mov
xchg
sub
pop
push
movsl
int
out
ljmp
lods
pusha
pop
cmp
aam
cmp
push
pop
mov
daa
cwtl
add
pushf
pushf
push
adc
and
ljmp
aad
outsl
inc
cmp
mov
pop
aad
sbb
dec
std
ss
movsb
popf
mov
cmp
iret
pop
fxch
nop
xor
in
mov
mov
inc
dec
mov
dec
ja
data16
or
insl
ss
add
in
pop
inc
aaa
xchg
pop
and
jmp
push
sub
cs
mov
mov
mov
loope
les
stos
aas
push
pop
pushf
aad
clc
mov
xchg
add
mov
jecxz
inc
loop
add
push
loopne
pop
jnp
lcall
dec
fwait
inc
shl
sub
cmpsb
aad
add
scas
test
out
outsb
fcoml
inc
fisubs
test
adc
les
push
lock
adc
inc
adc
xor
push
cmp
push
xchg
mov
or
lahf
cld
add
mov
cmp
stos
cmc
lahf
jg
adc
aam
clc
push
adc
mov
mov
mov
jg
xchg
add
add
out
aad
data16
push
sbb
dec
inc
out
notb
pusha
imul
shll
fildl
sbb
ficoms
loopne
inc
pushf
cmp
pop
ficoml
xchg
jle
sbb
cmp
dec
jb
in
ret
pop
inc
cli
pop
or
jle
nop
enter
lea
shl
nop
fidivrl
adc
lea
inc
lcall
lahf
push
testl
rclb
aam
sbb
inc
fxch
iret
sahf
sub
jns
stos
sbb
jne
dec
pop
mov
push
pop
aad
movsl
push
ret
lahf
cmp
push
pop
out
mov
ret
xor
pop
xor
test
insl
aas
js
add
pop
lods
test
dec
push
aaa
psraw
ficoml
es
jbe
sbb
jno
adc
mov
inc
cmp
imul
sub
ss
fmull
and
push
pop
cltd
aas
ficomps
add
or
jne
mov
andl
gs
inc
jle
xchg
dec
pusha
mov
sub
jb
in
std
aas
iret
cli
inc
inc
mov
fwait
adc
ret
fcoml
insl
lods
mov
subl
test
inc
dec
jl
mov
loop
jns
sub
cmpsb
jae
or
out
inc
dec
orb
dec
nop
testl
push
sub
mov
pop
mov
jmp
iret
jge
clc
stos
lock
divb
scas
cwtl
lcall
frstor
sub
rcrb
mov
sub
lret
inc
mov
jmp
lahf
cld
les
mov
test
jge
rcll
jo
cmpsl
mov
sub
dec
aaa
int
scas
inc
inc
dec
inc
test
filds
pop
arpl
adcb
and
aaa
pop
inc
mov
mov
insb
mov
dec
mov
shrl
dec
mov
sti
lea
mov
mov
ja
out
xor
sub
push
pop
or
xlat
inc
pop
xlat
or
lds
inc
leave
mov
inc
push
sbb
xchg
push
arpl
test
fstl
sbb
dec
adc
fwait
pop
pop
out
ret
das
dec
cli
arpl
sub
add
aam
xlat
je
jnp
or
mov
rcrb
lahf
bound
fwait
rolb
or
leave
jmp
out
mov
push
test
pop
aas
fs
push
iret
jmp
add
out
or
enter
or
cltd
lea
les
or
cli
or
xor
adc
mov
aam
sbb
loopne
out
mov
xlat
arpl
fs
push
or
dec
jmp
pop
jmp
or
xor
nop
cmp
mov
dec
sbb
dec
mov
mov
daa
jbe
push
cwtl
dec
cltd
xchg
add
inc
rcll
std
mov
ret
mov
jg
add
inc
call
lods
mov
test
xor
push
xlat
add
jo
pop
xor
sub
push
dec
imul
jbe
gs
mov
mov
and
jne
and
repz
in
fstpt
es
pusha
jg
and
mov
addr16
flds
sbb
repz
outsl
push
mov
inc
loopne
pop
jle
cltd
dec
test
inc
jo
int
in
add
rcr
sbb
xchg
sbb
pop
lods
test
xchg
xchg
mov
jp
sbb
das
xchg
sbb
in
in
icebp
shll
inc
xor
xlat
push
inc
and
and
sarb
or
inc
xor
leave
fmuls
xchg
cli
cmp
mov
arpl
test
mov
or
inc
mov
mov
mov
js
xlat
xor
test
or
enter
push
fidivl
jnp
cmp
xchg
cmpl
mov
and
mov
xchg
call
cmp
in
pop
or
or
xor
push
icebp
std
cmp
scas
cwtl
out
add
sbbb
lods
dec
or
dec
mov
shl
mov
roll
loopne
ficoml
cmp
fistpl
push
cmp
push
mov
mov
jmp
ja
add
shrl
popa
enter
push
loope
push
xlat
xor
pop
faddl
cmp
addr16
mov
insl
adc
inc
sar
clc
or
push
sbb
inc
inc
xchg
dec
cmp
lret
loopne
clc
ss
cmp
movsb
push
inc
out
fcoms
mov
dec
pop
cmp
mov
insb
data16
mov
leave
out
cwtl
test
insl
orb
aad
int
cltd
popf
stc
dec
int3
xor
xchg
sub
mov
push
cmc
int
adc
mov
out
xchg
sub
xchg
sub
or
xor
imul
mov
pop
xchg
mov
dec
popf
dec
push
sbb
icebp
scas
add
pop
faddl
cli
xor
sarb
xor
cwtl
dec
or
call
insb
xchg
cmp
leave
and
cmp
add
xchg
negl
out
push
jmp
mov
jno
xorb
fmul
inc
aad
iret
inc
dec
shlb
pop
dec
sbb
pushf
pushf
fs
and
mov
cmp
outsb
xor
push
in
nop
add
mov
fists
push
mov
icebp
cmp
stos
leave
xor
mov
cmpsb
lret
fdivl
je
pop
add
negb
xlat
push
ja
cmp
inc
mov
cmp
fld
xchg
sbb
test
scas
cmpsb
pop
pop
xchg
xchg
mov
loopne
fstps
mov
nop
jl
loop
push
xchg
pop
xchg
das
inc
mov
and
out
mov
call
sahf
mov
or
jl
xor
scas
inc
xor
das
std
cmc
call
mov
repz
pusha
push
nop
lret
mov
dec
sbb
cmpsb
push
push
daa
dec
sti
ss
adc
lods
or
rcr
cld
xlat
cmpsl
mov
cli
mov
mov
rcrb
call
lods
pushf
outsl
das
popa
cmp
nop
xchg
loopne
jne
xchg
lret
pop
inc
jne
stc
aaa
jl
scas
out
and
or
movl
pop
cmp
movsl
pop
xor
test
cmpsb
cmpsb
sbb
adcl
pusha
punpcklwd
xor
dec
inc
cmp
pushf
aam
jno
cld
je
aaa
pop
es
out
jb
shll
js
pop
xchg
pop
and
js
jg
loopne
into
sub
lods
mov
incb
ficomps
xorl
sti
shrb
pop
loopne
lahf
push
inc
hlt
mov
into
test
loopne
iret
negl
sbb
cli
out
cmp
dec
xor
xchg
xor
xor
repz
call
push
or
test
mov
cwtl
mov
outsb
inc
sbb
clc
iret
out
rcll
inc
jp
daa
jecxz
stos
shr
movsb
fwait
inc
jmp
add
inc
loopne
push
icebp
add
mov
and
imul
imul
addr16
cmp
mov
push
mov
call
jmp
insl
pushf
push
mov
jb
push
test
pop
push
push
into
in
es
repz
out
icebp
ret
jmp
add
xlat
pop
mov
in
jle
subl
mov
stos
clc
int
rclb
dec
testl
orb
jmp
pop
lret
lea
inc
sbb
mov
std
jnp
popa
insb
xchg
daa
lahf
cmp
fidivrl
inc
loop
sbb
sti
testb
mov
mov
inc
int3
or
in
ss
movsb
scas
push
cli
lods
jge
in
pop
jl
loopne
mov
in
push
or
cmp
ret
and
mov
notb
xchg
stos
scas
leave
dec
xchg
or
js
cmp
sub
adc
and
pop
pop
movsb
inc
cmpsb
inc
test
cld
lds
push
test
sbb
inc
stos
adc
mov
mov
pusha
js
push
jg
xor
scas
movsl
sarl
bound
add
adc
ljmp
xchg
jle
xchg
frstor
pushf
roll
mov
roll
negl
pop
jo
aas
in
mov
cld
and
test
inc
mov
faddl
shr
insb
jp
push
lahf
inc
jp
enter
pop
lcall
push
or
xchg
pop
popa
lret
addr16
lods
cmp
and
mov
add
or
ficompl
inc
jne
sbb
and
xor
adc
fisttpl
pop
scas
cmp
imul
pop
xor
jnp
or
idivl
sbb
fidivrs
mov
add
outsl
adc
int3
and
fstpl
jmp
and
mov
mov
cmp
cmpsb
fsts
stos
ret
sub
push
lds
push
jge
dec
jge
pop
push
inc
out
mov
test
enter
mov
popa
mov
push
cltd
nop
cmc
cld
cs
pop
jp
fcompl
xchg
loop
std
inc
lods
push
mov
xchg
xchg
into
dec
push
insb
sbb
loopne
adc
xchg
int
mov
jne
aam
dec
mov
mov
pop
mov
mov
mov
mov
xor
mov
push
or
xchg
adc
push
stos
push
jl
jns
movsb
test
bound
and
clc
jg
daa
and
cmpsl
xor
popa
into
mov
or
sbb
repz
mov
dec
hlt
shrb
andl
xor
gs
int3
push
lahf
xchg
out
sahf
pusha
into
mov
and
ror
mov
dec
popf
je
in
push
adc
inc
pushf
in
icebp
push
les
in
aaa
xchg
add
inc
pop
fstl
jns
iret
rol
js
mov
scas
mov
testb
outsl
test
xchg
adc
mov
je,pn
mov
mov
sub
lock
or
push
clc
jmp
push
pop
outsl
jbe
add
jp
fnsave
xchg
push
cld
in
xchg
pop
and
notb
jp
leave
lcall
and
adc
cmpsl
mov
cli
lods
lods
int3
mov
adc
call
mov
sbb
fbld
aam
xchg
push
stos
lcall
mov
cmp
cmp
push
cli
notl
mov
arpl
adcl
mov
pop
aam
movsb
dec
mov
adc
mov
addr16
mov
lret
call
pusha
fisubl
add
xchg
shrl
das
decb
das
mov
mov
shll
arpl
dec
pusha
xchg
push
test
push
xor
fisttpll
shl
lods
jle
xor
mov
push
stos
lock
daa
cld
int3
mov
pop
test
lods
xchg
inc
fisubrl
arpl
xchg
adc
sub
pop
lcall
jae
inc
adc
add
fwait
movsl
das
or
fldl
icebp
pop
and
mov
xchg
jmp
mov
pop
xchg
mov
mov
fildll
cmpl
xorb
push
dec
mov
xor
leave
fmul
shrb
lock
mov
movsb
daa
or
mov
jbe
rcrl
push
mov
imul
negl
popf
adc
jnp
hlt
mov
out
jae
shl
das
sbbb
xchg
fcoml
popl
in
out
in
mov
inc
adc
test
out
fdivs
jp
fisubl
scas
repnz
outsl
mov
push
inc
adc
mov
out
mov
aaa
mov
adc
lds
xchg
nop
std
hlt
pop
inc
sbb
mov
add
cmp
pop
seta
adc
mov
aas
cmpsl
jl
xor
imul
xor
shlb
lret
in
cltd
add
pop
outsl
xchg
repnz
xor
testl
pop
xchg
leave
fstl
xor
inc
jb
dec
xor
jle
lods
sub
xchg
sub
and
and
movsl
and
bound
jle
jo
mov
cmpl
mov
pusha
pop
jp
movsl
inc
mov
lods
and
adc
cs
notb
adc
lahf
fwait
xchg
cltd
pop
testb
cs
test
inc
cltd
popa
ss
popf
vpmacswd
push
int3
nop
sti
jns
fidivrl
cli
out
fs
addr16
mov
pop
push
pop
fbld
sub
loope
test
repz
shrl
add
mov
std
sbb
int
jno
jmp
out
or
out
xchg
jmp
mov
scas
test
test
stos
or
lods
ficoml
cwtl
xor
jno
or
sub
rcl
xlat
push
push
push
xor
mov
stos
push
pop
jns
jl
clc
jae
push
repnz
jmp
push
cmp
lea
or
les
shrb
jg
mov
mov
fwait
sti
jnp
jb
adc
push
inc
mov
call
push
inc
out
leave
push
jl
imul
aam
mov
cmp
ficomps
xor
mulb
and
movsb
jne
adc
push
or
or
dec
scas
je
inc
cmp
insl
or
insb
mulb
xchg
arpl
pusha
je
sbb
lret
fmuls
loopne
clc
mov
dec
cmp
movsb
popl
and
ja
ljmp
push
fdivrs
push
fsubl
jb
cmp
outsl
loopne
sarb
cmc
inc
call
daa
and
in
push
arpl
mov
cmpsb
out
movsl
fwait
sbb
push
dec
bound
in
lea
imul
inc
out
bound
push
mov
fcoms
fbld
mov
fs
push
in
mov
scas
jnp
xchg
shr
and
xchg
std
arpl
into
data16
mov
or
cmp
or
pop
pushf
cltd
loopne
cli
jno
fsubl
fwait
xchg
std
fisttpll
push
scas
lea
jbe
mov
test
mov
call
cmp
icebp
lea
mov
push
mov
addl
enter
scas
fs
in
sarb
push
mov
jmp
adc
mov
enter
outsb
aad
sbb
out
jle
mov
cmpsb
add
fprem1
andl
aad
sub
jle
addr16
sub
addr16
push
cmpsl
nop
jne
out
jbe
cmp
shl
rorb
pop
std
sti
loopne
inc
movsb
dec
or
lock
push
xor
pop
push
xchg
fadds
andb
out
jecxz
arpl
ljmp
xchg
sub
push
scas
mov
cmp
jl
push
jmp
xchg
mov
imul
imul
pop
xchg
ret
lret
mov
fcomp
inc
test
lods
cmp
aam
ljmp
xchg
sarb
std
jp
adc
popa
stos
scas
push
call
mov
bound
sub
pop
dec
pushl
out
mov
pop
push
fildll
jecxz
fidivrl
outsl
ljmp
mov
lods
repnz
push
repz
lea
cmpl
mov
and
or
es
gs
aam
in
push
dec
repnz
lcall
out
jmp
xor
test
leave
xor
mov
xor
xor
jle
testb
push
or
add
lock
loopne
or
jae
xlat
or
jns
mov
sbb
stc
pop
mov
or
fldenv
adc
addl
gs
insl
aam
xor
std
jne
enter
js
filds
pminsw
xor
or
mov
sub
es
mov
pop
cmp
subb
sahf
test
jne
lret
or
ds
lret
fidivl
in
js
gs
in
dec
xchg
and
sbb
lret
lret
push
mov
xchg
sub
mov
inc
aad
and
repnz
repz
sub
frstor
pushf
mov
cs
cmp
add
leave
add
orb
ds
inc
lcall
xlat
data16
push
loop
pop
xchg
lcall
jge
and
add
lds
mov
mov
mov
scas
xor
push
test
add
mov
or
inc
lods
xorb
fsubp
scas
jne
and
jl
stc
sub
sbb
cli
leave
adc
gs
enter
push
dec
iret
insb
jns
mov
cmc
sub
xchg
int
mov
cmpsl
add
mov
ja
dec
sbb
loop
mov
ss
pop
dec
lock
xchg
sti
rcll
testb
shll
pop
sbb
mov
test
jb
or
aad
repz
cmpsb
cltd
cli
push
push
cmpsl
loope
add
fcomi
xor
add
pop
adc
or
xchg
stc
xor
loope
xor
or
repnz
add
push
ret
sbb
or
popf
sbb
cltd
addr16
bound
lea
mov
or
mov
pop
and
add
shll
imul
pop
mov
es
jno
pop
mov
push
lret
fisttpl
add
dec
shlb
push
push
imul
cs
xchg
mov
in
dec
out
mov
mov
mov
movsb
fildll
test
adc
adc
pop
and
into
and
jae
lret
dec
lds
push
cmp
cmp
add
add
add
xchg
inc
mov
pop
adc
stos
jbe
cmp
loop
pop
inc
bound
subb
shll
adc
add
dec
or
cmp
outsl
sub
xchg
popa
mov
in
incb
sub
hlt
in
gs
out
pop
add
repnz
lret
fsubrl
and
cmp
and
push
mov
notl
cmovnp
sbb
cs
out
and
test
sbb
stos
mov
pop
popf
arpl
mov
cmp
adc
dec
scas
push
rorl
movsl
adc
inc
lock
sub
push
stos
cmp
and
divb
fists
inc
or
pushf
je
push
jno
sub
xchg
mov
or
push
xchg
mov
and
mov
xor
dec
ret
std
push
std
inc
inc
jnp
push
lods
add
stos
add
xor
out
dec
and
rcr
mov
cmp
popf
inc
and
push
call
cmp
mov
test
and
test
sbb
jne
mov
xchg
or
es
pop
adc
lock
inc
xchg
sahf
cmp
pavgb
rcll
mov
mov
shl
push
shll
and
xor
test
sbb
jb
xchg
fistpl
data16
inc
adcl
cmp
rdtsc
push
jae
stos
clc
repnz
cmp
push
xchg
push
add
xor
aad
jle
pop
imul
push
inc
and
lcall
lcall
push
negb
shrl
and
dec
xchg
cmp
les
dec
and
jno
lea
xchg
add
andb
xor
ds
push
pushf
jae
mov
xchg
into
jle
mov
cmp
inc
jno
xchg
push
aam
sbb
mov
hlt
sahf
into
push
into
jge
inc
fisttpll
mov
lods
aas
mov
sbb
loop
in
nop
push
testl
es
jns
dec
xchg
stos
lcall
and
lods
daa
xchg
mov
jo
jmp
mov
mov
fwait
xor
jmp
lods
push
inc
inc
ss
mov
ret
push
push
and
dec
cmp
mov
mov
fidivrl
or
into
loope
xor
imul
mov
sbb
lock
mov
pushf
add
sbb
add
jl
cmpsl
outsb
mov
jmp
lods
add
mov
inc
outsl
ss
mov
adc
test
bound
push
cwtl
adcl
out
outsb
arpl
sbb
dec
inc
pop
xor
loopne
sub
pop
cmp
cmpb
mov
xor
jbe
lcall
out
je
xor
sbb
cmpl
shll
inc
or
mov
jmp
mov
xor
push
cwtl
sbb
pop
fs
loop
dec
stc
jnp
pop
xor
iret
jmp
pop
mov
xchg
sbb
mov
das
negb
popa
imul
mov
loop
sub
lret
outsb
push
xor
mov
cmp
cltd
add
into
and
lahf
push
pop
and
fmull
push
mov
notb
xchg
dec
cmp
push
pop
and
mov
jecxz
pop
mov
cmpsb
popf
loop
shrl
cmpsb
and
test
cmc
pop
pop
int
and
jmp
enter
and
adc
sbb
push
and
stos
stos
stos
inc
idivl
sub
sbb
ss
sbb
repnz
cmp
sub
outsb
push
call
adc
outsl
mov
repz
push
cmpsl
add
lods
mov
fisubrl
clc
outsl
das
cvtps2pi
sub
loopne
mov
lcall
in
lock
in
dec
inc
popa
dec
pop
or
stc
fstl
ss
mov
dec
and
cltd
iret
xchg
out
scas
lds
pushf
movsb
lret
movb
cli
iret
cmc
mov
cmp
idivb
cmpsb
lea
adc
popa
jo
or
adc
inc
ds
adc
fnsave
sub
nop
nop
mov
insb
sbb
subb
roll
inc
jge
repnz
mov
cs
es
fcoml
ror
je
in
dec
icebp
xchg
cmpsl
sub
adc
loopne
inc
stos
repz
out
pop
lahf
call
out
or
hlt
jle
dec
jno
push
and
jecxz
int3
or
push
cmc
fcoms
or
pop
hlt
out
lret
push
add
inc
push
mov
fucomi
mov
cltd
mov
push
adc
cwtl
or
mov
mov
in
dec
mov
mov
cs
in
jb
mov
imul
icebp
push
fnsave
jmp
ss
in
jp
lret
add
push
pop
out
leave
cmpsb
xor
and
or
insb
pop
fxch
adc
stc
imul
mov
roll
xchg
gs
lret
sbb
cmp
divl
push
cmp
inc
repz
ret
push
lcall
mov
cmp
pop
mov
adc
arpl
pop
mov
sub
cmp
inc
gs
test
mov
test
jl
mov
orw
fimull
mov
mov
or
pop
and
lahf
sbb
stc
lret
jg
flds
cmc
mov
insl
fisttpll
cs
and
aas
and
add
xor
mov
inc
mov
das
cwtl
pop
lea
xor
imul
aas
test
cmc
std
dec
fistpl
out
push
pop
pusha
fs
les
adc
sbb
pop
pop
call
inc
es
cltd
jne
xchg
test
cli
mov
jle
add
xchg
out
in
or
fcmove
icebp
xor
fs
fcoml
pop
repz
call
rol
std
lods
lahf
or
test
sub
jp
dec
dec
push
pop
adc
test
call
pusha
or
ror
cltd
lds
in
add
jp
out
push
leave
fiadds
es
repnz
mov
fdivp
jmp
call
or
cs
nop
mov
pushf
push
mov
adc
sarl
jno
push
jns
mov
push
fists
leave
mov
in
repz
cmpsl
cmp
aas
xor
mov
rcr
mov
rcrb
fsubl
push
ret
adc
jmp
dec
repz
mov
pop
mov
xchg
xor
dec
pop
add
jne
imul
out
or
loopne
jb
push
push
pop
outsl
cmp
bound
mov
jge
lret
sub
add
ret
pop
sbb
pop
stos
jnp
daa
add
lret
out
subl
insb
lods
pop
scas
xchg
sub
movsl
or
rolb
lods
imul
imul
adc
xchg
std
adc
and
outsb
jg
rcrb
dec
test
je
pop
scas
add
incb
mov
fsubrp
jne
adc
cmp
sbb
stc
sbb
sub
ds
scas
fdivl
subb
jmp
and
hlt
scas
hlt
sub
insb
lock
jmp
mov
push
xor
push
cmpsb
push
fadds
fld1
jmp
test
and
arpl
xchg
das
adc
push
jns
sbb
imul
add
push
sub
xor
push
jnp
mov
inc
push
aad
std
adcb
xor
movsl
sub
sbb
je
pop
jmp
les
jne
sahf
or
mov
popa
pop
rcrl
daa
sbb
std
push
insl
aas
jle
xlat
pusha
mov
fwait
sar
or
sysexit
sahf
mov
xchg
into
push
ljmp
sub
mov
dec
dec
inc
fcomps
xor
xor
cvtpi2ps
mov
loopne,pt
inc
sahf
jmp
adc
arpl
dec
out
out
or
dec
dec
mov
mov
add
xor
or
in
mov
cmp
lock
push
cmp
mov
dec
pop
ror
adc
popa
xchg
jmp
xchg
stos
fimull
das
cwtl
xchg
or
mov
aaa
inc
or
xchg
popa
dec
pop
push
adcb
stos
dec
dec
cmp
or
mov
and
mov
dec
test
mov
adc
cmp
add
clc
icebp
push
sti
adc
jp
ret
stc
pusha
fmuls
sub
cld
cltd
push
inc
inc
movsb
or
out
or
fimull
pop
jno
loopne
push
jp
and
mov
lahf
jb
push
loope
jg
jns
lods
sub
xchg
jne
and
pop
adc
retw
call
xchg
inc
mov
out
mov
loop
mov
jns
jne
push
iret
insb
push
into
sub
fucomip
xor
xchg
lahf
lea
mov
outsl
add
mov
xor
inc
in
hlt
pop
pusha
push
cmpsb
ss
sti
aaa
adc
data16
loopne
xor
dec
shr
xchg
cmp
dec
xchg
call
jns
mov
cmpsb
lcall
mov
xor
call
jae
mov
push
xor
outsl
push
mov
dec
std
jg
daa
jl
loopne
sub
idivb
stos
aad
inc
or
cs
lock
cli
loop
movsl
loopne
nop
dec
imul
rcrl
cltd
int3
pop
loopne
ret
sub
and
pop
mov
ret
jg
mov
rclb
iret
jne
or
adc
jbe
sub
mov
adc
add
push
sub
or
iret
into
outsb
sub
adc
pop
cltd
cld
jno
mov
imul
xor
sub
in
xor
outsb
push
icebp
idivb
repz
sbb
dec
mov
cmp
xor
cmp
dec
gs
cltd
lret
negl
pop
insl
xchg
js
les
loop
cli
mov
pop
ret
mov
jg
mov
in
and
ljmp
das
lea
scas
jne
sbb
xor
and
das
or
js
cmp
mov
hlt
xchg
add
mov
mov
sub
test
jmp
fcoml
jmp
jg
sahf
in
clc
mov
or
mov
lods
cwtl
add
dec
dec
cli
ret
add
sbb
xor
adc
cltd
jnp
int3
scas
and
adc
mov
cmp
repnz
mov
out
and
pop
sub
cli
orb
scas
lds
xchg
adc
shrb
ret
mov
push
cmp
mov
iret
pop
pop
sti
data16
daa
in
or
scas
int
push
push
and
out
in
xchg
dec
sahf
movsl
push
ja
jp
adc
push
movsb
mov
sub
xchg
shrl
push
data16
lahf
sub
in
into
fsubr
add
cwtl
movl
pop
pusha
in
je
lea
rolb
add
inc
dec
xlat
sbb
dec
js
lret
inc
hlt
sub
jl
push
dec
or
inc
xor
daa
imul
add
mov
jne
loopne
or
ja
popa
pushf
lahf
push
out
aam
testl
cmp
and
push
in
adc
jnp
sbb
in
inc
dec
pop
mov
add
cld
push
or
bound
fisubl
outsl
cltd
fldt
aas
scas
push
shll
fistl
daa
loopne
mov
int
les
xor
xchg
xchg
les
cmp
mov
add
imul
inc
pop
pushf
xor
cltd
sti
lds
cmp
shrb
push
adc
in
test
cmpsb
icebp
sbb
ljmp
ja
loopne
mov
cmpsb
push
mov
xor
fdivrs
jl
push
jnp
leave
aam
adc
imul
lea
shlb
inc
incl
outsl
mov
fdivs
lock
je
and
jnp
push
xor
xchg
add
inc
mov
sbb
mov
mov
sarl
add
mov
pop
out
divb
sub
mov
sahf
mov
xchg
and
xchg
ljmp
shll
and
sub
lcall
cltd
push
in
iret
pop
jg
out
mov
test
mov
pop
lds
lock
hlt
jle
int3
std
jnp
inc
inc
loop
das
jne
sar
loopne
pop
in
imul
inc
insl
in
outsl
aad
shrb
jns
in
mov
xor
test
outsl
aam
xchg
lea
int3
leave
jb
pop
lahf
lods
jl
dec
push
repz
mov
ficoms
sahf
and
negl
cmp
mov
cmc
xchg
sub
sbb
addr16
test
sbb
mov
imul
pusha
inc
test
mov
aad
rclb
out
pop
and
aad
fsubrl
mov
fisubl
jmp
aam
jmp
je
sub
pop
push
xchg
sub
lea
mov
popf
aas
fdivs
pop
adc
xor
mov
ret
ret
push
mov
pushf
int
sbb
sub
imul
dec
aam
or
aam
cmp
das
cmc
cmp
cmc
sub
push
int3
mov
dec
xchg
loope
or
loopne
xchg
sbb
pop
les
subl
popf
arpl
mov
mov
and
lods
dec
mov
lods
push
hlt
jbe
or
jmp
cmpsl
xchg
jle
je
int
mov
cld
pop
mov
das
or
or
dec
add
sub
dec
outsl
pop
mov
ss
mov
inc
cltd
daa
dec
in
jge
mov
lea
ss
sub
cmp
push
outsl
pop
jmp
mov
call
or
add
stc
in
adc
lahf
out
lock
stc
psubb
push
es
aaa
cs
orb
sahf
lcall
fldl
sahf
inc
mov
ja
popf
pop
mov
ljmp
orb
out
ljmp
imul
test
fwait
add
xchg
mov
sar
dec
ljmp
mov
adc
pop
in
inc
arpl
mov
faddl
shlb
push
or
lods
jp
dec
leave
lods
test
popa
lret
test
mov
mov
mov
stos
cs
outsl
insb
loope
shrb
dec
rcrl
push
in
call
jmp
daa
sahf
arpl
sub
clc
imul
mov
loope
mov
out
mov
fistpl
mov
and
sbb
test
and
in
imul
and
insl
insb
adc
pop
cmp
pop
adcb
stos
mov
jg
scas
cmp
loope
gs
pop
pushf
sub
mov
je
jmp
pop
mov
aam
in
xchg
sbb
rorb
fmul
enter
add
testb
lret
xchg
insb
adc
scas
add
sahf
sar
adc
cmpsl
inc
repnz
jae
sub
cli
xchg
leave
cltd
out
push
push
in
and
cmp
dec
sub
mov
imul
dec
js
xchg
sbb
pushf
push
jns
stc
or
hlt
pop
test
add
aaa
mov
clc
cmp
ret
push
mov
mov
jne
out
mov
mov
bound
in
ss
addr16
add
mov
jecxz
fldl
shlb
test
leave
cmp
fsubrl
push
out
daa
addr16
jne
je
loopne
push
dec
push
jb
daa
fstpt
jae,pn
xlat
xor
je
rcrl
or
add
xchg
loope
and
ss
xlat
inc
mov
cmp
gs
dec
addr16
push
or
push
imul
jno
frstor
out
cmpsl
xor
imul
fs
cwtl
repnz
subl
cmp
adc
lock
inc
ja
cmp
xor
std
movsl
addr16
mov
dec
or
lods
dec
test
push
jns
movsb
ja
mov
sbb
xor
lock
scas
cmc
loop
shl
cmp
pop
addr16
mov
pop
dec
sub
loope
stos
push
mov
xor
pop
repz
mov
jno
scas
xor
adc
ret
sub
and
push
cmp
jle
or
sub
jl
divb
fistpll
jno
scas
aaa
addr16
adc
jbe
pop
jecxz
xor
xor
and
out
cmp
loope
xchg
scas
sbb
and
shr
push
jmp
add
add
fstps
out
repnz
or
inc
inc
sub
inc
push
dec
push
dec
dec
jmp
pop
leave
push
lcall
aaa
fisttps
iret
mov
mov
stos
fstl
sbb
jns
dec
pop
in
imul
out
jp
jb
mov
xor
and
fstp
inc
popa
adc
mov
mov
add
inc
addr16
xor
cmpsl
xchg
push
adc
ror
pushf
push
clc
dec
aaa
cmp
pop
orb
lea
daa
pushf
fsubrs
mov
inc
xchg
jge
jae
adc
test
and
insl
sbb
xchg
subb
mov
push
adcb
push
push
insl
lcall
pop
gs
xor
in
test
sub
push
pop
jmp
jecxz
mov
pusha
loopne
mov
push
hlt
mov
aam
sahf
jg
inc
aas
or
push
push
mov
adc
and
cmp
int
dec
or
push
addb
adc
fnstenv
mov
push
mov
scas
sub
sbb
adc
xor
out
xchg
pop
mov
mov
mov
or
inc
add
dec
cmpsl
pop
xor
sub
pop
pop
mov
xor
aam
js
popf
mov
jno
lret
dec
sbb
dec
xchg
xor
arpl
jmp
dec
xchg
lea
bound
dec
fbstp
lret
pop
adc
outsb
mov
dec
mov
inc
sahf
mov
inc
repnz
adc
fcmovnbe
dec
mov
pusha
nop
daa
iret
xchg
test
sbb
mov
xchg
clc
ljmp
popfw
shrl
add
outsl
loope
out
lret
add
imul
push
std
inc
or
repz
mov
push
dec
adc
xchg
push
jg
stos
enter
push
out
sahf
dec
cmp
fidivl
pop
jle
dec
in
inc
sbb
adc
in
js
cld
fildl
imul
mov
daa
jle
andb
inc
enter
in
mov
add
mov
lcall
jbe
jmp
jge
arpl
sub
in
and
and
xchg
je
movsl
mov
pop
in
mov
xlat
xchg
adc
iret
or
pop
pushf
cltd
mov
movsl
dec
lock
sub
mov
xchg
push
incl
leave
lods
xor
mov
movb
int3
mov
cmp
test
sub
lods
mov
jl
test
lret
and
xchg
out
lock
push
jae
sbb
pop
mov
dec
call
lret
cmp
adcl
jb
shl
bound
movsb
mov
and
dec
outsl
ds
jge
mov
inc
jae
fcmovnbe
ret
lcall
inc
out
imul
fcmove
xor
nop
lods
push
inc
imul
ss
jns
shlb
popf
stc
mov
mov
sahf
xchg
fld
inc
push
sub
fdivl
jb
cld
aad
mov
mov
xor
sbb
cmp
arpl
jnp
push
adc
lds
icebp
push
mov
jle
sub
shl
sbb
stos
call
dec
pusha
int3
xor
arpl
mov
addr16
push
les
insb
dec
aad
pinsrw
add
shrl
dec
push
out
xchg
pop
iret
fisubs
and
lret
imul
dec
push
dec
dec
arpl
test
lock
std
mov
xchg
pop
lds
push
cmp
shlb
or
jbe
in
push
aas
cmpsb
jg
lock
cltd
push
sbb
shrl
pushf
xchg
and
adc
mov
sub
jecxz
loop
daa
jno
sub
adc
lcall
sub
out
ljmp
movsb
insl
sub
sub
cs
pop
jmp
jno
jns
jnp
je
xor
ror
mov
lea
sub
out
fists
inc
mov
scas
mov
push
sbb
movsb
push
ss
cltd
jb
daa
cmp
mov
ret
fs
dec
das
jnp
ficompl
inc
sbb
rcll
push
aad
fdivrs
adc
mov
dec
lret
push
fnsave
mov
adc
sbb
test
dec
jns
cmp
xor
push
pop
call
inc
mov
aad
js
bound
fbstp
cmp
in
les
mov
jae
test
and
sub
push
cmp
cltd
inc
out
in
hlt
xor
inc
and
repz
jecxz
pop
or
stc
aas
jl
ds
jle
mov
enter
cmp
dec
fsubl
fsubrs
sbb
in
imul
repnz
cmp
jl
pop
mov
sbb
xchg
leave
xor
test
or
and
mov
push
das
loope
out
in
decb
mov
add
mov
sarb
and
test
push
inc
inc
out
mov
sbb
fistps
sbb
pop
rcl
out
lret
jle
hlt
and
lea
fmuls
fstpl
xchg
sahf
push
or
mov
push
sbb
sbb
push
loope
push
fadds
adc
movsl
cmpsl
inc
call
fbld
lods
mov
xchg
mov
jg
push
pop
test
out
push
pop
or
mov
pop
imulb
ds
ret
loopne
cmp
repz
dec
jecxz
fidivrl
pop
xchg
xor
jae
cltd
jae
movsl
jle
xchg
mov
nop
int
dec
mov
or
cs
imul
mov
xor
insb
out
jnp
sub
dec
xchg
pop
in
ja
inc
inc
or
inc
or
fimull
fwait
scas
push
mov
out
imul
lcall
stos
loope
pop
stos
test
and
jl
sti
jb
xor
mov
add
mov
roll
pop
and
and
xchg
sbb
sbb
cli
sub
xchg
jmp
xchg
xchg
jmp
mov
push
add
jnp
imul
push
dec
pop
mov
cli
dec
cmp
pop
xchg
daa
loop
dec
aaa
rcrb
movsb
lcall
pop
or
imul
xchg
dec
push
cmc
xchg
xchg
xchg
mov
push
insl
icebp
xchg
cmp
leave
jnp
xchg
cltd
imul
subl
mov
mov
xlat
mull
icebp
jo
push
icebp
arpl
outsl
test
ffreep
push
xorb
sub
hlt
dec
ds
push
repnz
jp
inc
shrd
mov
xchg
dec
testb
clc
push
ret
pop
xchg
cld
enter
icebp
sub
mov
adc
mov
jge
xchg
cmp
mov
clc
hlt
push
fwait
pop
sub
loope
dec
xchg
pop
rorl
adc
push
fcomp
fsubl
xchg
les
jno
mov
xor
sub
js
inc
leave
push
movsl
loope
adc
adcl
cmp
jbe
fstpl
pop
mov
in
mov
sub
psrlw
repnz
sub
inc
sbbb
fwait
les
sub
loope
lea
les
test
fbld
roll
imul
or
loop
dec
out
iret
fwait
aas
cmpsb
es
dec
cmp
push
jg
hlt
mov
cwtl
iret
out
call
inc
mov
xor
inc
xchg
xlat
push
out
aam
ljmp
call
jb
outsl
jne
lret
sti
mov
int
sub
sbb
mov
cmc
setno
add
xor
ret
movsb
xor
rcrl
dec
pop
jp
out
xchg
jae
or
xchg
loop
lds
sub
and
ret
pop
rorb
in
xor
or
mov
mov
cltd
inc
std
jl
inc
jg
sub
and
sbb
cli
mov
adc
and
out
shll
dec
cmp
arpl
cmpsb
sbb
stc
je
mulb
xor
out
pop
add
xorl
lea
cs
hlt
movsb
add
adc
hlt
cld
shll
cmp
out
dec
addr16
push
insl
and
aas
test
and
jg
or
es
sbb
sbb
stos
and
out
inc
push
cmp
push
mov
xchg
mov
out
sahf
mov
or
mov
push
int3
hlt
sub
add
jecxz
mov
mov
adc
push
xchg
loop
push
aaa
mov
push
sti
jp
sbb
movsb
fdivs
sub
dec
mov
xchg
fadd
inc
cmp
scas
pop
pop
push
dec
fwait
scas
enter
in
mov
and
into
sbb
jmp
dec
mov
fidivrl
push
nop
out
xchg
ljmp
les
mov
arpl
mov
jb
mov
or
test
ficoml
mov
out
stc
and
mov
pop
stos
mov
jb
jle
cmp
jmp
and
scas
cwtl
inc
in
iret
ds
pop
cmp
push
xchg
xor
ja
rcrb
pop
sub
xor
jle
sbb
pop
mov
pop
lds
ret
fisubrl
jbe
notl
xor
cmpsl
mov
and
out
data16
stc
push
pop
push
outsb
dec
add
sbb
xchg
xor
pushf
fs
vcmpsd
and
insl
sbb
repnz
scas
mov
loopne
fdivl
out
repnz
leave
or
push
xor
faddl
in
push
cmp
es
cmp
inc
out
sti
das
mov
retw
mov
test
mov
pop
jg
jo
push
dec
stos
lock
xor
pop
jb
xchg
jns
jbe
or
insl
outsb
xchg
repz
mov
or
movsl
mov
sub
jmp
sub
sbb
scas
adc
inc
inc
movsb
dec
cs
arpl
mov
push
sbb
add
jl
lods
and
pusha
mov
pop
push
pop
add
scas
imul
mov
mov
mov
daa
cmp
dec
push
pop
iret
inc
dec
push
das
mov
and
push
xlat
mov
stos
add
lahf
test
jb
mov
and
addr16
add
lcall
xlat
gs
dec
ds
push
lods
sub
jns
lods
lods
xor
in
hlt
test
sbb
out
add
xchg
sbb
movsl
fistl
xchg
jnp
xchg
shrb
mov
ljmp
add
ja
inc
stc
mov
push
into
jo
mov
adc
push
out
test
shll
insl
ljmp
jge
in
iret
sbb
imul
pop
cmp
push
sub
jmp
in
jae
adcl
or
adc
push
out
xor
orl
add
add
iret
adc
dec
cmc
rcr
pusha
inc
push
jge
jne
out
es
notb
lods
in
jns
xor
aaa
cmp
jg
sbb
mov
pop
mov
push
xacquire
adc
mov
push
cltd
and
jne
shr
js
shll
push
ja
xorl
xlat
gs
jle
push
std
pop
stc
clc
repz
mov
fsts
jg
filds
lcall
lret
test
stos
or
loope
mov
jo
lock
and
xor
fisubrs
addr16
cmpsl
out
cmpsb
xorb
jg
xor
mov
enter
inc
and
xchg
push
xchg
mov
xor
lret
mov
ret
in
enter
aam
cwtl
and
sbb
mov
jns
popa
fnstcw
inc
sub
mov
stos
iret
mov
adc
inc
int3
mov
sti
or
in
xor
mov
cli
rorl
xor
sub
shrl
pop
add
fwait
out
gs
jp
iret
sti
push
and
and
in
loope
stos
cmp
and
cld
mov
rorl
nop
mov
cmpb
push
add
loope
sub
sub
addr16
movsb
in
insl
aas
inc
sub
popa
iret
push
ret
or
aam
xchg
mov
repnz
mov
inc
push
add
pop
dec
subl
or
pop
xchg
ret
mov
push
test
test
mov
inc
inc
daa
mov
std
cmp
loope
aaa
pop
js
jmp
popa
xchg
mov
xor
test
jmp
dec
add
std
enter
das
cmpsl
into
jmp
and
inc
movsb
mov
sarl
shlb
scas
shl
mov
mov
hlt
ret
push
cmp
mov
outsb
dec
cmc
xchg
add
enter
push
aad
sub
ret
int
sti
aaa
adc
mov
and
fnstsw
mov
in
loope
call
scas
cs
rolb
popf
and
dec
pop
insl
xor
pop
and
xor
ds
xchg
adc
and
cmpsl
dec
cmpsb
or
out
out
mov
or
lcall
push
mov
xchg
mov
fcomps
mov
cmc
xchg
mov
pop
jo
lock
pop
or
mov
lock
xchg
pop
mov
adc
ret
sub
or
cmp
dec
fdivl
fwait
add
sub
icebp
subl
icebp
out
push
xor
clc
vpor
jnp
into
int3
adc
outsb
mov
test
jmp
jle
xor
xchg
push
xor
in
push
mov
das
bound
shlb
mov
jl
and
jbe
jmp
fldcw
mov
insb
stos
bound
idiv
ret
jne
dec
sbb
ret
adc
shlb
fs
mov
loope
imul
xchg
and
jb
pop
lea
cmp
jne
test
inc
ja
dec
cmp
jnp
adc
mov
xchg
clc
imul
xlat
xor
loope
test
xor
lods
push
cmp
mov
cmp
cli
shlb
push
sbb
push
lcall
into
pop
dec
lock
call
inc
inc
loop
outsl
insb
out
in
sub
sub
ss
lret
paddsw
lcall
adc
and
or
inc
insb
add
xorb
sub
xrelease
jmp
or
sbb
cmc
mov
xchg
iret
aas
ret
pop
push
int
sub
xchg
adc
cld
inc
mov
mov
add
cmp
mov
stos
shrl
in
pop
lahf
pop
int
gs
push
inc
pop
cmp
aas
pop
jo
cmp
mov
inc
scas
add
add
mov
mov
dec
mov
mov
mov
mov
sub
fstps
fdivrs
jnp
and
movsl
or
dec
mov
inc
pop
in
jno
and
das
dec
push
adcl
arpl
mov
mov
test
push
push
bound
fwait
jge
add
mov
push
push
dec
rcll
nop
add
inc
js
fidivrl
fadds
sub
mov
and
addr16
push
js
jmp
data16
andb
add
push
lds
pop
and
cmpsb
mov
movsl
jne
push
pop
pop
lock
sub
insl
stos
mov
rolb
popa
adc
or
bound
ja
push
xor
std
ds
jns
jnp
pushf
sti
nop
dec
dec
sarb
pop
test
xchg
fisubs
mov
mov
sbb
or
shrl
nop
and
jge
subl
mov
xchg
sarb
sbb
mov
mov
sbb
mov
lods
xchg
ja
stos
dec
js
inc
insl
adc
aaa
jl
test
cmpsb
rcr
es
repnz
inc
fdivl
dec
out
inc
adc
jp
movsl
mov
dec
push
and
bsr
lods
push
xlat
and
mov
sti
movsl
sbbl
movsb
or
bound
cmp
sub
jae
mov
int3
movsl
cmc
aaa
ljmp
leave
dec
daa
outsb
jl
popf
cmp
pop
inc
in
jle
pop
jns
ret
cmpsl
addr16
add
fnsave
imul
dec
ss
pusha
sti
enter
roll
xor
lret
movsl
or
mov
lahf
es
je
push
fiadds
aam
shr
int3
mov
bound
outsl
mov
or
mov
inc
repz
test
std
movsb
add
adc
add
sub
inc
pop
nop
fwait
dec
lret
out
sbb
ret
into
cmp
test
lds
repz
push
in
pusha
and
sub
jecxz
iret
push
je
out
dec
fiaddl
sbb
mov
shll
mov
cmp
rcl
lods
xlat
test
dec
sbb
in
cmpsl
outsb
ljmp
or
pop
bound
dec
nop
addb
fdivr
clc
mov
and
sub
ljmp
xchg
mov
pop
push
xchg
lods
push
dec
adc
push
aad
loope
jno
aaa
and
clc
data16
mov
sub
adc
jb
or
pop
dec
stos
nop
dec
insb
mov
cs
fisubs
cmpsl
fdiv
and
lock
pop
movsb
sub
inc
xchg
sbb
pop
push
aad
das
enter
mov
or
lods
icebp
icebp
scas
mov
jecxz
shrb
mov
out
sti
mov
sub
in
lea
les
or
xor
pop
test
lea
mov
stos
adc
pop
lds
fwait
mov
jne
mov
mov
pop
call
or
pop
jl
dec
mov
xchg
adc
shll
or
adc
push
scas
jnp
call
insl
test
inc
sbb
dec
shrb
add
xlat
pusha
mov
sub
test
adc
cmp
add
cmp
test
leave
ja
ds
cmpsb
sub
popa
nop
inc
mov
fidivrl
pop
adc
aas
jl
xchg
mov
mov
jle
sbb
insb
std
lock
fstp
mov
sbb
and
mov
imul
push
dec
test
cmp
dec
rcr
jnp
in
ja
cmpps
push
es
clc
xchg
push
flds
mov
xor
fs
dec
ljmp
out
sti
mov
dec
mov
sub
lret
xchg
insl
sarl
mov
sbb
xchg
dec
mov
adc
aad
and
int3
pop
xor
mov
repz
or
call
and
push
adc
outsl
rorl
pop
pop
je
or
cmpsb
dec
adc
ja
add
mov
pop
pop
inc
fistpl
jl
fmull
mov
mov
xor
cld
nop
jns
out
ret
add
cmp
and
inc
sbb
in
out
movlps
add
pop
xchg
push
dec
mov
sbb
daa
dec
push
sbb
arpl
stos
pushf
lahf
scas
leave
ret
cmp
iret
jmp
pusha
xchg
and
mov
push
cmp
out
adc
ficoms
sbb
xchg
les
jbe
jae
lahf
cmp
sarl
push
cmp
jmp
pop
sbb
cltd
dec
xchg
pop
jl
add
out
ljmp
or
aam
loopne
mov
outsb
stc
or
test
dec
rorb
fdivrl
mov
push
repnz
adc
int3
das
cmp
jae
subb
xchg
xor
cld
imul
fsubl
push
daa
inc
mov
mov
dec
jcxz
add
fwait
test
sub
jle
add
mov
sub
adc
scas
popa
daa
repz
xchg
mov
sahf
sbb
addr16
sarb
into
dec
ja
dec
jo
mov
lcall
mov
gs
push
addr16
xchg
mov
iret
packuswb
out
clc
dec
cld
mov
lret
xor
push
cld
inc
adc
out
adc
lret
shlb
dec
adc
inc
sbb
xor
pusha
aam
clc
push
gs
sub
sub
add
pop
mov
dec
popa
test
mov
lods
daa
cli
in
mov
pushf
shrb
sub
out
adc
pushf
repnz
js
daa
mov
bnd
adc
cmpsb
dec
fimuls
fisubrl
and
inc
mov
push
lods
data16
mov
inc
ficompl
movsl
ret
mov
and
inc
movsl
add
int3
sarb
leave
and
daa
sub
mov
lahf
and
mov
call
inc
push
xchg
xor
sahf
pop
jecxz
push
or
mov
imul
push
mov
or
or
outsb
shll
popf
mov
xchg
jp
xchg
jbe
call
setle
aam
aas
push
cmp
or
in
rorl
mov
dec
mov
mov
imul
stos
cs
or
lock
daa
jmp
add
mov
jae
sahf
mov
rol
shl
mov
sbb
scas
or
ret
and
and
or
test
mov
std
cmpsb
fld
or
jge
sbb
shl
push
xor
cltd
lea
test
icebp
fwait
cmp
cmp
xor
cmp
push
ss
in
push
js
push
adc
jecxz
sahf
call
mov
mov
lret
add
loopne
imul
and
scas
and
sbb
or
in
gs
cwtl
add
dec
cltd
xor
stos
add
add
xchg
sbb
je
iret
test
push
movsb
iret
adc
rol
jle
pushf
cmpb
enter
notb
cmp
leavew
add
xchg
mov
xor
push
rolb
xor
cmp
push
pop
out
sub
clc
ror
vmovshdup
inc
pop
addl
dec
xchg
in
imul
cmp
stc
xchg
sti
mov
dec
mov
mov
mov
jo
in
and
sbb
or
data16
lcall
fisubl
push
cmove
icebp
sarb
push
cmp
jne
movsb
sub
add
push
pop
pop
cltd
shl
cmp
stc
aaa
cmp
xor
loop
xchg
pop
fdivrs
xchg
lret
dec
addr16
sub
repz
stos
notb
cli
push
rolb
addr16
rcrb
dec
rorl
inc
out
dec
pop
pop
pushf
xor
stos
mov
shll
cmp
push
jmp
loope
aaa
push
movl
mov
cmp
fwait
sub
mov
mov
mov
pop
lds
repz
loope
int
add
push
in
jl
ret
pop
ficoms
js
iret
adc
fsub
inc
test
outsl
icebp
mov
mov
inc
les
mov
addr16
in
incl
scas
fucomp
or
daa
dec
pop
mov
or
ljmp
jmp
shlb
xchg
pop
stc
fidivrs
and
jle
data16
jo
es
add
flds
fstpl
push
jecxz
and
inc
rorl
in
sbb
lcall
and
add
mov
fwait
cs
jmp
pop
add
inc
cmpb
mov
sbb
idivl
jnp
xor
xor
sbb
and
popf
call
jl
pop
jbe
or
adc
xchg
mov
pop
lcall
add
inc
push
cli
cmp
lahf
cltd
pop
lret
aaa
cltd
and
push
in
sahf
movsl
and
push
mov
aad
xor
scas
imul
arpl
adc
movsl
jle
xchg
lds
mov
cmp
ja
dec
test
add
pop
add
mov
sbb
jo
inc
insl
js
pop
rclb
sti
push
cld
cli
fprem
xor
xlat
mov
int3
std
mov
arpl
inc
rcrb
loopne
jg
jae
arpl
push
lods
and
adc
push
popf
in
adc
mov
adc
and
and
xor
push
lahf
push
dec
lret
mov
stc
mov
xchg
enter
decb
mov
add
sbb
testb
dec
or
gs
mov
test
and
sub
xlat
jbe
scas
icebp
xor
add
inc
xchg
hlt
cwtl
dec
jmp
pop
lea
jns
inc
and
mov
mov
sub
cmc
jmp
ficoml
pop
xchg
jnp
lcall
pop
cld
mov
aaa
idivb
xlat
int
andb
call
insl
outsl
push
push
rcrb
add
fisubrs
push
xor
icebp
subb
enter
aaa
push
pop
fdivs
test
cmp
sub
jb
stos
in
les
jmp
out
out
mov
out
mov
add
mov
mov
add
test
adc
aaa
mov
push
in
into
lods
jecxz
mov
insb
xchg
fdivr
xor
push
sub
xchg
icebp
ja,pt
pop
cld
xchg
ljmp
cli
fs
mov
out
jno
andl
jae
gs
enter
test
rorb
pushf
cmp
orl
fcomip
mov
and
or
popa
int3
lds
repz
outsl
and
sbb
or
aas
xlat
andl
add
popf
pusha
jg
jbe
popf
sbb
mov
inc
out
in
or
mov
scas
fisubrl
orps
faddl
inc
cmp
imul
jp
xchg
mov
xchg
push
fld
mov
shl
lcall
inc
sbb
jle
jl
xchg
sbb
addr16
out
cmp
in
pop
adc
push
add
pop
dec
cmp
mov
jg
mov
out
and
xchg
dec
sahf
movsl
push
imul
pop
sbb
and
in
mov
push
test
pop
and
enter
loop
lahf
adc
mov
push
out
adc
cmp
cmp
popf
testl
mull
dec
call
mov
lds
arpl
icebp
pop
jne
sahf
int3
mov
pop
jbe
aaa
out
mov
shl
icebp
loop,pt
movsl
pop
in
adc
sbb
pop
adc
add
mov
push
adc
xor
clc
jp
ljmp
mov
jl
mov
out
popf
stos
inc
lea
je
dec
inc
sbb
mov
add
lret
ficompl
fbld
stc
icebp
and
je
fnstenv
aaa
pop
sub
das
out
add
inc
or
sbb
es
jl
xchg
jmp
and
mov
enter
cs
or
cmp
mov
push
push
imul
inc
movsb
pop
mov
in
test
bound
or
sbb
hlt
iret
cmpsb
inc
jns
repnz
pop
pop
ja
mov
aaa
xor
in
cmp
and
ja
mov
sti
jmp
mov
addr16
fsubrl
add
test
scas
sub
push
sti
inc
mov
cmp
pop
ret
mov
stc
das
cwtl
shr
jge
imul
jmp
nopl
jo
push
ror
arpl
dec
daa
push
sbb
and
dec
mov
sbb
flds
push
adc
hlt
sahf
test
adc
dec
push
lret
pop
gs
sub
sub
push
imulb
inc
xor
jle
ret
leave
mov
add
les
popf
adc
and
or
subl
fnsave
and
inc
cmp
mov
jle
int3
push
ds
sbbl
test
adc
int3
outsb
xchg
test
lahf
mov
out
stos
mov
fdivrp
stos
js
lds
and
pop
daa
sti
pop
sahf
pop
xor
fwait
mov
sub
xchg
nop
ss
push
adc
pop
call
lods
popf
mov
add
push
shl
cwtl
mov
pop
outsl
out
xchg
jl
and
mov
sbb
xlat
or
lods
adc
mov
shl
sbb
inc
add
add
les
out
xor
dec
pop
mov
idiv
ds
aad
sbb
pop
leave
cs
call
or
sub
cmc
adc
mov
nopl
clc
insl
frstor
notl
xor
sbb
fcmovne
mov
les
push
mov
jl
or
pop
mov
leave
dec
xor
cmp
mov
movsb
inc
imul
ds
xchg
mov
loope
xor
jbe
into
mov
cltd
es
mov
loop
pop
decl
inc
jnp
lcall
outsl
ret
pop
outsl
mov
enter
push
sahf
popf
mov
sbb
push
jge
mov
lret
js
and
lahf
popf
popf
dec
sub
lods
rclb
xchg
ljmp
and
lahf
aad
xchg
sahf
sbb
add
pushf
insb
dec
xchg
shll
xor
pop
ljmp
mov
lea
pop
pushf
ds
push
sub
jns
test
insb
xchg
cwtl
testb
addl
xor
stos
adc
pop
or
xor
popa
out
jl
movsl
imul
xor
cli
loop
xchg
and
orl
mov
mov
nop
sub
push
adc
push
push
aam
pop
jbe
jmp
test
push
sub
inc
add
loope
pop
lods
fistps
fimull
pop
sbb
mov
out
mov
adc
sbb
loopne
sarb
bound
cmpsl
out
mov
movb
jmp
jmp
in
xor
sbb
lods
jo
jne
add
sbb
cmp
movsl
xor
jns
mov
sti
cmpsl
jle
mov
je
mov
pop
arpl
aaa
jb
push
dec
push
scas
sahf
mov
cmp
adc
jnp
fs
pop
out
call
fnsave
xchg
jnp
repz
call
cmovg
test
icebp
mov
xor
cmp
cmpl
int
push
mov
ljmp
push
add
jno
add
scas
js
and
mov
popf
or
aas
jg
lods
or
shll
cmp
dec
in
jle
xor
push
stc
add
in
xor
pop
lds
mov
mov
cmp
into
imul
inc
xor
mov
scas
pop
hlt
enter
jbe
outsl
test
gs
fcmovnb
pop
jae
adc
popa
lods
pop
xchg
mov
fwait
jp
xor
sub
loope
shll
push
mov
dec
push
add
das
xor
or
inc
cmp
inc
pop
jno
sbb
adc
xchg
mov
outsb
lock
pop
lods
sub
mov
fldenv
lods
jp
mov
addl
imul
sub
cltd
push
mov
test
xor
mov
xchg
ljmp
inc
or
dec
pop
and
jnp
mov
push
in
int3
xchg
cmp
pop
xor
and
stc
jno
js
inc
cmpl
mov
movsb
push
dec
std
xlat
aad
mov
sbb
mov
adc
rcrb
sbb
mov
push
in
add
cwtl
adc
push
data16
in
lcall
fcoml
mov
lds
mov
jb
lock
inc
mov
or
add
xchg
out
mov
repz
inc
jno
repz
decl
adc
scas
jge
lret
or
sbb
lock
repz
in
inc
sub
dec
iret
out
mov
sub
shll
aas
sub
adc
xchg
je
cmc
dec
js
cmp
mov
push
pop
dec
sub
fsubl
add
sti
loopne
mov
jnp
rcl
inc
mov
bound
xchg
cmc
inc
sbb
out
xchg
add
out
inc
loope
div
xchg
push
push
loope
call
mov
scas
xor
sub
push
test
ret
sbb
jecxz
leave
pop
sub
inc
clc
or
popf
lcall
cltd
daa
mov
lods
scas
les
ficomps
jl
fdivl
fbstp
iret
nop
xchg
push
movsb
push
pop
lcall
pop
cld
out
addb
jo
jmp
mov
addr16
not
mov
scas
sub
inc
out
push
out
and
ja
xchg
shrl
or
jg
mov
aaa
pop
cmp
mov
aad
pop
mov
sub
add
push
mov
cmp
jo
shlb
cld
jle
lret
ljmp
roll
xchg
imul
dec
fs
mov
loop
xor
jbe
das
adc
jle
push
fsts
pop
cwtl
inc
decb
or
sti
sbb
mov
adc
insb
out
jbe
mov
daa
push
sub
mov
pop
or
push
inc
stc
addr16
ret
mov
pop
das
in
lahf
in
push
pop
movsb
push
mov
dec
and
dec
iret
cs
lock
fdiv
xchg
enter
jne
sbb
cmp
pop
sbb
and
fmulp
jmp
jmp
sbb
in
adc
in
jb
mov
sbb
dec
adc
cmp
pop
ss
push
loop
mov
movsl
leave
or
cli
pop
sub
pop
das
aad
adcb
pop
jp
popa
insl
rcr
pop
gs
jns
fldenv
push
lret
clc
out
cwtl
test
bnd
mov
imul
rorl
repnz
add
int
pop
ret
lret
lret
adc
xchg
std
test
int
push
xchg
in
pop
mov
cmp
pop
jp
add
pop
mov
ja
in
es
aas
loope
aaa
add
cmp
sub
inc
sub
dec
aam
idivb
and
icebp
mov
popf
stos
push
orl
imul
lds
and
testb
je
shrl
xor
cmp
jbe
ret
test
data16
cmp
push
lock
mov
jne
mov
bound
sar
push
lahf
fldt
je
popf
jp
or
mov
pop
mov
fs
test
out
jp
int3
add
pop
iret
scas
int3
xchg
cmp
aad
mov
daa
test
cmovne
inc
loop
daa
js
sub
jne
ret
mov
std
xor
sbb
add
fldcw
xchg
lock
jns
dec
out
lret
stos
sbb
jp
out
sub
lock
lea
scas
fprem1
push
fildll
mov
inc
fst
push
lret
dec
push
sub
loop
testl
fs
or
lret
nop
inc
fwait
mov
data16
aad
cmp
xlat
imul
roll
mov
pop
jno
loopne
push
lock
inc
sbb
idivb
insb
add
mov
mov
cmp
icebp
into
nop
jbe
cmp
sar
stc
mov
insl
jb
and
cmpsb
stos
xor
sub
cmpsb
int3
sti
outsl
mov
stos
shrb
inc
push
jecxz
jmp
rolb
dec
out
inc
iret
jg
sarb
and
sbb
push
push
ljmp
sbb
jg
ficoms
push
mov
insl
jl
pop
lcall
sub
xor
fnstcw
or
clc
into
arpl
cmpsl
dec
sub
pop
mov
popa
out
rclb
in
and
dec
adc
mov
jge
mov
or
jle
int3
cmc
push
int3
loop
hlt
inc
out
in
in
stos
xchg
in
fsubr
jp
or
pop
test
lcall
fldcw
xor
mov
rcrl
inc
dec
add
repnz
dec
out
out
daa
mov
dec
xchg
roll
ja
adc
test
mov
jmp
repz
fildl
mov
in
test
fimuls
sbb
movsl
cltd
ljmp
in
popa
dec
shl
xchg
mov
xchg
pop
ror
fistpll
xorb
cli
out
das
mov
and
add
adc
dec
arpl
jecxz
movsb
sbb
fdivrl
les
inc
mov
cld
movsl
add
dec
cmpsl
mov
push
call
lods
push
xchg
pop
mov
pop
iret
xchg
xchg
ss
movsb
ret
mov
sub
stos
cmp
lret
test
in
mov
and
pop
xor
loop
jecxz
jge
imul
mov
add
adc
adc
push
paddsw
negl
roll
cwtl
dec
and
dec
adc
cld
sahf
sbb
add
mov
sub
sbb
xlat
sbb
jb
test
ss
push
mov
cmpsl
icebp
xchg
outsb
jp
aaa
sbb
xor
push
test
call
ljmp
lcall
andl
pop
sbbl
shrl
ss
jb
or
sub
xchg
sub
vcvtdq2ps
scas
fsubs
xlat
sbb
xor
dec
clc
xchg
xchg
mov
ret
sbb
movsl
lea
sbb
mov
mov
shrb
movsb
xchg
mov
sarb
insl
add
jbe
xlat
sub
popa
fbld
dec
xor
mov
scas
sarl
rcr
imul
push
add
jns
cltd
insb
xchg
decb
add
mov
sub
push
dec
imul
and
sub
test
aaa
mov
in
lea
xchg
jnp
inc
rolb
and
in
xchg
ret
outsb
inc
clc
sub
out
lods
mov
gs
xchg
jnp
jne
movb
or
aas
inc
out
cld
sub
pop
xchg
xchg
dec
jno
clc
mov
dec
and
aas
cmp
adc
test
mov
push
dec
mov
subb
loopne
sub
xor
repz
mov
mov
ret
das
adc
ss
mov
popf
repnz
mov
mov
sbb
add
fwait
pop
roll
adc
bound
aas
add
xchg
xchg
imul
push
cs
fcomps
out
aam
pushf
lret
xchg
sbb
jecxz
jne
mov
pop
jmp
adc
shll
mov
inc
bound
fiaddl
lods
xchg
negw
inc
mov
mov
popa
in
cmc
pop
aaa
cltd
jae
dec
scas
pushf
inc
adc
pop
int3
mov
lds
hlt
call
insb
sub
outsb
jns
cli
cmp
cmp
inc
xor
and
lds
xor
xchg
ljmp
inc
enterw
into
imul
ljmp
lods
fadds
aas
sub
dec
daa
xchg
jae
push
gs
mov
jo
or
dec
push
inc
loope
mov
dec
cmp
rorb
xor
push
cmp
pop
or
lret
movsb
mov
sbb
jbe
and
repnz
mov
jno
push
jno
add
movsl
dec
push
insb
jnp
aaa
jmp
mov
mov
jb
push
mov
jg
js
mov
jns
stc
push
push
push
inc
xor
dec
int3
cmpsl
fldenv
xor
fistpll
int
xchg
add
lcall
mov
pusha
into
mov
pushf
sbb
call
push
daa
stos
mov
rcll
test
sub
scas
mov
sbb
jg
roll
jmp
sti
jmp
pop
mov
add
cs
mov
test
aam
jns
dec
mov
lods
fcoms
daa
or
and
in
jnp
sbb
lods
rcrl
mov
repz
mov
push
fst
das
mov
adc
xor
mov
or
lods
mov
jle
mov
rcrl
jb
cltd
pop
imul
call
push
mov
mov
and
shrb
jl
add
cmpsb
inc
mov
push
pop
jae
clc
scas
loope
nop
subl
add
or
inc
xor
mov
mov
les
mov
bound
push
mov
xlat
fs
sbb
adc
in
push
sahf
shr
std
lock
daa
or
add
mov
sub
out
jmp
lock
mov
rolb
mov
pop
cmp
sbb
pop
jle
dec
shlb
cmp
adc
std
std
pusha
push
mov
mov
test
cmpsb
xor
mov
pop
sub
gs
ret
xchg
ljmp
adc
stc
inc
pop
pop
xor
mov
ds
or
adc
mov
popf
mov
mov
xchg
xlat
adc
push
jle
mov
xchg
fsincos
mov
addb
popa
mov
in
cld
lret
jbe
sub
incb
orl
push
sbb
cmp
mov
aas
jne
sbb
cmp
jae
or
push
ja
push
popf
pop
pop
inc
jns
sub
fcomps
push
ja
mov
fimull
adc
inc
jg
push
jns
cs
or
xchg
mov
adc
ss
addb
mov
adc
outsl
call
mov
imul
xchg
or
dec
ret
shll
pop
or
std
je
lods
dec
or
adcl
push
rcrl
imul
cmp
pop
and
dec
fs
inc
lods
sahf
pusha
xchg
stos
mov
repz
ss
sbb
sub
or
lods
jo
test
or
dec
jecxz
cmc
or
mov
incb
std
lret
mov
add
pushf
push
in
fiaddl
fsubr
sbb
aam
jmp
lods
xchg
pop
sarb
arpl
cmp
scas
testl
xorb
sbb
jecxz
jno
xchg
jbe
xchg
rcll
adc
adc
inc
mov
leave
repnz
xor
push
sub
es
adc
icebp
outsl
popa
jle
stos
negl
out
mov
cmc
mov
push
mov
pop
and
mov
fsubrs
ret
jmp
jge
arpl
jle
aas
xchg
data16
out
dec
pushf
das
arpl
cmp
mov
out
push
mov
inc
loop
or
mov
push
dec
xchg
add
movsb
pushf
mov
mov
js
jbe
and
in
jle
aad
ret
sub
adc
xor
pop
ss
movsl
stc
movsl
pushf
sahf
dec
mov
shrl
movsb
cmpb
lret
xor
and
iret
mov
cmp
adc
cld
xchg
scas
and
xchg
nop
cwtl
loope
imul
scas
mov
in
das
in
xlat
hlt
ja
inc
mov
xchg
mov
xchg
sbb
popa
test
mov
and
rcll
xor
sarb
stos
aas
es
and
dec
jae
testb
into
dec
pop
mov
movsl
rolb
sub
in
mov
pop
cmp
jle
mov
xchg
roll
scas
fadds
add
pop
sub
dec
push
mov
mov
dec
push
mov
or
xchg
aaa
adc
shll
xor
femms
pop
scas
mov
inc
dec
dec
rorb
sbb
pop
notb
adc
imul
mov
mov
sbb
mov
std
and
mov
push
push
fstpl
cmp
es
cmc
mov
push
test
testb
add
inc
cmp
xchg
mov
cmp
mov
push
mov
pop
movsb
push
and
shl
mov
mov
into
fmul
jae
pop
in
insl
dec
arpl
aas
pop
jae
sbb
decb
hlt
test
xor
sbb
cmp
add
jbe
in
lret
flds
jle
inc
ss
lahf
out
xchg
xchg
inc
pushf
loop
cmc
into
adc
cmpb
mov
out
mov
nop
jge
in
push
cmp
add
in
and
mov
xchg
mov
scas
push
aas
xchg
ds
mov
and
mov
pop
fildll
inc
mov
mov
cmp
inc
test
pop
in
and
jnp
pop
leave
pop
mov
mov
negl
push
dec
ja
lock
subl
aad
out
xchg
dec
xor
enter
andb
sub
inc
sbb
pop
and
das
xor
push
sbb
insl
ss
adc
cmpsb
push
js
iret
rcrl
dec
mov
lcall
movsl
push
mov
push
stos
aad
scas
dec
jno
cwtl
lcall
gs
add
jno
ret
and
xchg
xor
adc
xor
mov
lock
push
jl
jecxz
shlb
push
andl
fisubl
mov
cld
cmpsl
sbb
or
and
mov
add
aad
dec
sub
or
and
test
dec
and
mov
pop
scas
pop
cmovs
cmc
out
mov
jecxz
fcomip
pop
cmpsb
lcall
fcoms
cld
iret
sbb
jo
mov
push
mov
imul
lds
push
aad
lds
cltd
stos
in
pop
std
dec
popf
sbb
imul
pop
movsb
jae
mov
mov
push
scas
dec
int
mov
push
push
into
mov
mov
fs
push
rcrl
cmp
adc
mov
aad
clts
xchg
leave
bnd
jp
push
mov
lret
mov
repz
or
mov
add
movsb
push
out
ljmp
sbb
negl
fdivr
mov
sahf
or
jnp
cli
inc
mov
outsb
mov
idivb
and
gs
mov
mov
cwtl
mov
arpl
jo
mov
cmpl
popf
xchg
pusha
addr16
mul
cmp
sub
sti
popa
mov
jmp
or
jle
arpl
nop
inc
xor
xor
jp
aaa
sub
leave
inc
test
lods
stc
hlt
add
mov
dec
gs
ljmp
mov
fiadds
test
pop
addr16
jecxz
leave
rclb
lods
cmpb
jle
imul
xchg
test
sbb
insb
mov
inc
push
mov
inc
adc
iret
and
push
mov
xchg
pop
xor
cmp
pop
xchg
dec
pusha
ja
int3
les
int3
cltd
dec
sbb
ret
push
aam
add
mov
cmp
add
in
mov
mov
movsb
push
jp
xor
stc
push
mov
call
pop
push
sahf
ss
movsb
and
aam
and
ret
fists
push
popf
fldenv
dec
and
aaa
orl
push
rorl
inc
dec
cmp
add
or
arpl
push
test
mov
inc
cli
cltd
mov
sub
int
push
push
movsl
enter
mov
or
cli
nop
lahf
hlt
xor
lods
es
mov
mov
fstpl
outsb
ret
xchg
imul
mov
and
lret
gs
push
pop
lods
and
xor
mov
out
mov
gs
fldt
fisttpll
aaa
mov
rolb
fucom
lods
xor
test
sub
mov
xchg
adc
sub
xlat
sbb
mov
adc
jg
sahf
jecxz
jecxz
ss
inc
arpl
lea
mov
es
xchg
add
pop
xor
add
lods
pop
mov
mov
pop
cmp
cmp
or
out
adc
repz
cltd
jbe
mov
je
nop
fldcw
movsl
dec
pop
xlat
test
iret
fwait
jb
mov
popf
test
sub
mov
pop
sbb
pop
jno
xchg
lcall
es
inc
sbb
dec
jne
pop
hlt
push
lahf
mov
test
xor
cwtl
lock
insl
or
dec
stos
cmc
inc
mov
sub
cmp
repnz
arpl
test
out
ficompl
pop
xor
fistpll
lcall
movl
fdivrs
loopne
xlat
mov
push
adc
xchg
cmp
leave
xchg
mov
insl
ss
mov
sbb
stc
loopne
cld
cs
add
push
adc
xor
jmp
out
cmpl
inc
lea
dec
mov
push
sbb
cmpsb
add
imul
cmp
xor
dec
xchg
xor
faddp
loopne
xchg
movsl
dec
xchg
into
shr
push
fs
push
and
xor
es
dec
dec
lods
push
push
jo
movhps
mov
and
push
mov
sbb
imulb
insl
cltd
repnz
std
lahf
popa
in
adc
shrl
mov
lret
mov
sti
stos
push
push
xor
testb
cmpsl
test
das
and
push
outsl
inc
mov
out
subl
cmc
dec
mov
out
popf
pop
sbb
push
sub
call
push
add
inc
lds
lcall
rclb
dec
cmp
add
xchg
sbb
test
dec
jmp
inc
sub
mov
int
cmp
das
aas
push
add
adc
push
jbe
cmp
push
or
pop
add
pop
out
nop
dec
mov
stos
jnp
inc
mov
insl
adc
mov
or
or
cmp
push
popf
jbe
dec
sbb
adc
pop
dec
mov
xor
jg
aas
adc
dec
out
ror
addb
lahf
adc
adc
repnz
shll
es
aad
sti
sti
jne
test
cwtl
and
addr16
je
mov
add
cmp
dec
pop
sarl
int3
out
inc
mov
shl
stos
stc
jns
cli
lahf
dec
call
push
imul
fsubs
andb
push
imul
mov
jae
loope
and
lods
imul
imul
inc
cltd
daa
cltd
dec
cmp
adc
ljmp
sub
adc
stos
aad
cs
stos
dec
rcll
scas
cwtl
scas
lret
popa
sahf
icebp
lret
mov
push
jp
and
enter
popa
iret
and
push
cld
or
repnz
mov
pop
loop
push
sub
pop
xlat
push
or
cmp
jb
adc
mov
adc
jbe
in
xorb
jbe
call
sbb
fldcw
pop
inc
daa
out
roll
add
cmpsb
rcrl
fs
cmp
fimuls
fcoml
je
stc
add
xor
ss
icebp
adc
int3
in
leave
cmp
jns
cmp
stos
push
push
fisttps
sbb
jnp
push
repz
cmpsb
outsb
ljmp
lret
jle
xchg
leave
push
popf
push
push
xchg
addl
mov
fmull
and
or
repz
jb
adc
adc
xchg
scas
mov
inc
jne
repz
or
jnp
or
ljmp
jl
push
push
cli
sub
test
fsubr
push
pushf
out
or
mov
sub
fisttpll
aaa
mov
mov
mov
push
xor
add
nop
dec
pop
mov
pop
dec
sbb
aam
mov
js
jbe
cmp
and
sbb
dec
mov
rorb
and
xor
movsb
and
in
and
rcrl
pop
sti
mov
sbb
cld
push
inc
jo
cmp
xchg
cmc
xchg
mov
fs
pushf
inc
repz
or
pop
add
incb
jl
les
push
js
aas
xchg
imul
add
dec
int
les
xchg
mov
lods
enter
push
dec
sarb
mov
in
push
mov
sbb
pop
fnsave
sub
ss
mov
xchg
imul
popa
enter
imul
jge
cld
adc
push
push
les
pop
adc
js
mov
mulb
lea
mov
jne
sub
mov
cwtl
xchg
imulb
mov
cmp
push
aam
cmp
xor
lret
lds
movsb
pop
inc
sbb
ret
aas
jns
pop
xchg
es
mov
aam
mov
inc
or
or
jl
pop
dec
or
orb
popa
mov
int
mov
addb
in
in
cwtl
cmp
adc
sub
jbe
mov
aaa
icebp
std
lods
or
je
push
icebp
ljmp
lods
fmul
lcall
test
add
sahf
lss
scas
icebp
push
icebp
dec
lahf
fwait
cmp
popa
xor
stos
mov
into
cmpsb
roll
test
out
aam
lahf
cmp
shlb
cmc
ret
inc
js
xchg
test
jmp
mov
cli
or
sbb
int
jecxz
outsb
xchg
jl
aas
inc
clc
push
pop
mov
adc
add
push
add
mov
mov
jb
out
lds
pop
inc
sbb
sub
in
fisubl
sti
or
stos
jg
add
or
in
and
lods
stc
pushf
jecxz
mov
xor
mov
jge
fildl
pop
int
jne
pop
or
push
pop
jnp
push
cmc
daa
adc
jle
or
ficompl
gs
test
sti
or
lret
pop
scas
popf
stc
andb
pop
xchg
xchg
add
sbbb
loope
dec
xchg
jns
add
clc
imul
inc
cld
loop
fwait
repz
and
dec
test
das
mov
test
fidivl
mov
inc
jg
push
je
sahf
adc
pusha
in
ljmp
jg
les
out
fsubrl
aaa
dec
ljmp
push
xchg
cld
das
xchg
outsl
cmp
ja
push
inc
insl
test
mov
sbb
arpl
loope
xor
dec
arpl
cltd
push
push
nop
loop
add
jecxz
add
dec
int
sahf
out
lods
push
dec
pop
clc
dec
push
les
jbe
sub
pop
lret
les
into
xchg
fldcw
hlt
or
test
data16
addr16
outsl
shll
lret
pusha
xorl
mov
shlb
sub
add
mov
sbb
cmp
shlb
test
mov
pop
mov
or
cwtl
int
shlb
pushf
mov
xchg
mov
sub
scas
dec
rorl
adc
lret
mov
jp
or
fdivrl
pusha
negb
add
cmp
mov
and
dec
add
in
add
test
bound
xchg
dec
jnp
repz
lds
imul
mov
jbe
aam
data16
dec
and
cs
loopne
ljmp
pop
dec
jge
cmpsl
movsb
sub
push
xchg
aad
inc
and
cmp
scas
lcall
or
mov
adc
outsb
ret
push
xor
dec
mov
movsb
cmpsl
out
xor
lock
aad
clc
inc
cmp
sub
mov
sbb
push
sbb
pop
in
dec
enter
pop
and
fwait
xchg
imul
js
leave
rcll
push
mov
push
adc
in
sbb
sbb
pop
xchg
in
fmul
test
loope
outsl
adc
push
sub
or
mov
adc
iret
lods
dec
xchg
sub
lods
je
dec
fdivrp
rolb
dec
jmp
jns
stos
cmp
push
push
ljmp
jbe
or
or
push
jne
sbb
xchg
adc
sub
xchg
dec
push
sahf
ret
pop
push
add
ret
fcompl
ds
add
and
jb
and
in
push
add
stos
enter
cli
jo
stc
mov
fcomp
fwait
adc
push
loope
inc
stc
sub
lahf
movsb
bound
pop
test
xchg
mov
adc
pop
addb
pop
loopne
mov
and
fdivrp
sub
sbb
insl
pop
daa
lahf
or
xor
mov
addb
add
std
scas
sbb
dec
dec
sbb
mov
jg
pop
mov
enter
test
push
mov
push
pop
mov
mov
push
shl
lret
sub
sarl
and
and
lock
pusha
divl
xchg
fucom
mov
stc
data16
add
fstpt
pop
nop
data16
sub
push
out
jp
fldcw
dec
mov
out
shlb
stos
xchg
imul
adc
mov
sub
and
mov
cltd
cmpsb
pop
dec
aam
mov
mov
insl
lock
out
cmp
movsb
mov
sbb
adc
or
adc
add
mov
cwtl
cmp
stos
cwtl
jp
js
mov
pop
xchg
outsl
xor
dec
outsl
xchg
jmp
test
xchg
jmp
jbe
pop
mov
daa
call
lods
sub
push
sarl
inc
rorl
jae
mov
xchg
repz
xor
jnp
sbbb
popa
dec
push
xchg
aad
push
xor
add
loopne
in
and
je
adcb
insl
pop
push
dec
push
lock
roll
jl
mov
scas
or
outsl
jbe
or
push
dec
jge
push
inc
pop
push
mov
movups
loopne
push
fadd
jo
pop
push
mov
in
jno
xor
sub
sbb
es
adc
mov
mov
push
loop
xchg
xlat
test
jb
sbb
fcomps
fidivs
or
fadds
pop
cld
fdivrl
mov
js
inc
out
xchg
stos
cmp
stos
inc
lods
xor
int3
call
in
test
dec
xchg
pop
iret
pop
cmp
or
clc
xor
mov
add
in
inc
fwait
inc
pop
lret
jmp
or
inc
or
sub
fdecstp
jle
or
adc
adc
shlb
lcall
imul
mov
add
outsb
aad
push
jl
or
xchg
sbbb
or
mov
jne
push
fimull
jmp
arpl
jnp
aad
cmp
xor
pusha
mov
aam
jbe
mov
sub
lock
push
insb
test
push
pop
mov
testb
push
punpckhdq
jno
notl
pushf
cmpsb
je
sbb
ret
loopne
clc
lcall
xor
lcall
cmp
pop
push
inc
jl
mov
cld
cmp
dec
and
es
add
add
lret
jge
daa
jecxz
push
lock
loopne
pop
dec
std
mov
xor
test
or
pushf
dec
sub
out
push
das
outsb
push
adc
sbb
jno
push
push
insl
pop
test
stc
scas
mov
xchg
add
pop
dec
or
push
adc
mov
fdivs
insb
add
add
sbb
loop
xchg
hlt
pop
cmpsl
int3
fdivrl
jnp
fdivl
dec
ljmp
in
out
fxch
inc
std
push
aad
pop
lret
in
or
adcb
rorl
in
jae
sbb
lock
sub
pusha
scas
scas
cmpsb
daa
inc
mov
xor
mov
clc
push
push
or
or
mov
shrb
sub
xorb
fsubp
mov
dec
push
or
mov
cmp
flds
into
movsl
push
pop
jg
dec
add
xchg
jg
ja
push
roll
sbb
movsl
aam
outsb
stc
divb
sbb
adc
insb
mov
imul
rol
lods
pushf
jl
leave
test
ljmp
or
and
mov
adc
xor
pushf
addb
mov
and
cwtl
mov
inc
or
mov
pop
es
test
fnstcw
scas
sti
xor
or
xchg
cmp
cmp
cmp
add
jg
adc
stc
pop
imul
roll
fcomp
leave
or
mov
stc
test
adc
mov
out
aas
adc
xchg
nop
jno
negl
cwtl
fsubrs
inc
jmp
outsb
inc
xchg
mov
lcall
cltd
sbb
and
or
mov
mov
test
xor
mov
push
js
ja
cmp
jae
add
xor
popa
dec
xchg
mov
inc
cmp
repnz
xchg
mov
cmp
rorl
fists
inc
add
mov
iret
data16
add
dec
pop
xor
mov
outsb
jg
cwtl
daa
scas
dec
in
in
pop
cwtl
inc
in
std
sub
xchg
cs
dec
sbb
adc
and
aad
push
fisubs
add
lcall
int3
mov
nop
jo
sbb
and
call
insl
aam
jbe
js
rcll
scas
dec
iret
dec
inc
adc
sbb
push
add
jmp
es
and
in
jno
fucom
and
outsb
rcr
adcl
jge
dec
faddl
js
adc
shrb
or
mov
incb
inc
aas
inc
lea
add
mov
pop
sub
sbb
sbb
enter
jl
mov
jge
mov
mov
daa
cmp
xchg
jge
lds
pop
jmp
ljmp
xchg
cmc
lea
push
idiv
or
scas
push
int3
pop
stos
push
cltd
and
cmpsl
add
lock
and
dec
sahf
inc
out
test
xor
cmp
in
rcrl
sti
mov
cmp
xor
lds
cmp
mov
push
adc
mov
xor
fisubrl
cld
leave
popf
aaa
jg
inc
out
es
enter
test
icebp
dec
xchg
fcomps
std
adc
fisttpll
fwait
sti
or
sub
in
push
sub
fidivs
popf
enter
mull
iret
mov
pop
jae
idivl
push
fwait
inc
addr16
jg
adc
xchg
sub
push
cld
outsb
int
ja
lock
push
ljmp
es
push
xor
daa
ret
fnstenv
outsl
in
adc
popa
loopne
mov
dec
cmp
mov
jge
dec
jp
cmpsb
push
mov
scas
push
pop
andb
repz
test
test
out
and
and
inc
js
lret
loopne
mov
inc
sbb
stos
or
push
loop
mov
push
pop
ds
xor
xchg
lods
dec
mov
jbe
pop
fnstsw
jg
inc
stos
int3
pop
lea
jb
push
xchg
icebp
loope
pop
or
jge
jl
enter
fisubl
sahf
sbb
js
loop
mov
or
insb
nop
mov
xor
les
ret
mov
mov
pushf
int
shrl
les
call
iret
sbb
mov
xor
sbb
pusha
cmp
lods
xor
enter
mov
sbb
ja
jge
daa
movsl
xchg
int3
xlat
jmp
pop
mov
out
dec
dec
testl
cli
scas
mov
lds
inc
leave
into
or
jmp
xchg
fwait
sbb
jg
outsb
out
fildl
std
mov
nop
mov
stos
les
clc
jmp
dec
js
stos
dec
inc
pop
fcomi
or
mov
dec
hlt
jbe
aaa
cs
mov
cld
and
ret
movsl
mov
lahf
push
inc
sahf
or
sub
sub
sarb
xchg
stos
mov
xor
cmpsl
sub
adc
loopne
jle
test
inc
gs
cmp
inc
out
rorl
mov
pop
push
lods
push
xchg
and
mov
test
mov
mov
dec
push
lret
mov
dec
mov
dec
adc
fcmovbe
mov
mov
xchg
mov
in
filds
mov
test
dec
sbb
imul
test
jg
cmp
push
andl
xchg
in
cmp
push
pop
mov
out
push
mov
mov
fnsave
vpsadbw
pusha
pop
push
lret
cld
jge
mov
inc
xchg
scas
sbb
je
push
movl
mov
cmp
cwtl
hlt
and
jb
xor
sub
aam
subb
pushf
cli
fpatan
cmpsl
popa
dec
and
repnz
ror
scas
imulb
data16
lahf
fs
jo
addr16
sbb
aas
test
daa
shrl
or
xlat
aam
xlat
cmp
out
les
enter
cmp
ja
es
inc
data16
cmc
shl
adc
sbb
xchg
push
push
push
faddp
inc
xchg
fcmovnb
fucomi
jnp
cmp
dec
and
jne
imul
cmp
decb
ret
loop
cli
out
jno
inc
aaa
sub
inc
or
jnp
inc
lds
out
xchg
in
jl
movsl
imul
fwait
sub
add
bound
dec
mov
jl
inc
iret
pop
stos
or
subb
mov
pop
mov
aad
or
mov
ja
add
jmp
or
lret
xchg
push
xchg
cld
dec
dec
mov
mov
cltd
cld
adcb
inc
jmp
rorl
stos
stos
jl
xchg
add
in
push
pop
lds
mov
xlat
and
cmp
pop
sbb
and
mov
out
js
sbb
sub
sbb
dec
mov
bound
addr16
or
xor
jb
insb
int3
pushf
loop
out
insl
daa
ljmp
mov
jbe
cmpsl
in
gs
and
popf
stos
ficoml
inc
test
and
push
mov
dec
push
xchg
fs
stc
clc
dec
sti
pusha
push
pop
out
pop
mov
pop
jp
cmp
pop
adc
mov
jo
xor
stos
fs
xlat
jbe
insb
sub
add
mov
lretw
adc
or
inc
push
cmp
cmpsb
hlt
adc
mov
outsl
je
cmc
cmp
mov
mov
stos
lret
xchg
sub
stos
or
lea
pushf
imul
pop
fdivrl
insb
add
in
call
xchg
and
stos
xchg
push
insb
xchg
into
or
xchg
sti
pop
in
jl
stc
pop
lock
fimull
add
sub
int
push
pop
ljmp
inc
aam
mov
jno
mov
add
out
leave
scas
pop
daa
pop
cmp
add
sbb
test
sub
leave
sub
mov
or
adc
push
sahf
andl
vpsrad
adc
cmpsb
sar
push
mov
int3
hlt
fildll
ret
xor
inc
mov
adc
sub
lock
mov
shll
jle
imul
xor
sub
jg
pop
dec
and
pushf
shll
ja
rcl
sbb
mov
test
cmpb
mov
in
fiaddl
fiaddl
mov
jb
mov
fwait
xor
inc
popa
inc
testl
sub
movsl
push
sub
pop
xor
lock
jbe
xchg
cmp
mov
sub
dec
mov
fstps
pop
jle
pop
cmp
dec
hlt
test
ret
add
test
mov
xchg
pop
mov
pop
jb
outsl
dec
pop
sub
xchg
sub
lock
aam
cwtl
out
jne
test
or
call
stc
lods
ret
outsb
push
loope
adc
pop
fldcw
dec
cmp
cmp
fwait
push
sbb
adc
pop
frstor
push
sub
jmp
adc
pop
pop
xchg
dec
sub
mov
popf
cmp
lcall
pop
aad
dec
int3
xor
cmp
pop
outsb
std
push
xor
inc
cmp
or
pop
xchg
push
sbb
test
mov
cs
add
fistl
inc
cmp
pop
jmp
or
jge
mov
jo
mov
add
dec
imul
fnstcw
jb
in
mov
andb
enter
pop
push
popa
mov
int3
xchg
inc
pop
jle
cmp
stos
cs
push
mov
cs
inc
sbbl
jle
sbb
cmp
gs
subb
fdivrs
sub
aam
loop
daa
adc
xchg
sbb
inc
outsb
subb
jnp
jmp
jbe
rcll
push
stos
enter
sbb
mov
jo
mov
inc
in
xchg
push
es
mov
inc
or
mov
jmp
addl
adcb
shlb
leave
and
mov
cltd
jge
jno
sbb
sbb
lret
aam
filds
fbld
iret
dec
adc
sarb
adc
pop
ljmp
jb
cmp
aas
cmpsl
sbb
xor
pop
lcall
je
add
insl
jns
xor
pop
lcall
je
push
fisttps
adc
sub
sahf
out
dec
test
add
ret
fdivl
cs
mov
push
adc
andl
cltd
push
and
push
mull
in
dec
cmpb
jno
repz
insb
fisubs
bndldx
dec
inc
inc
lret
add
inc
inc
int3
cwtl
enter
clc
push
rorb
add
mov
jnp
loopne
jmp
xchg
sub
loopne
loopne
arpl
push
ss
nopl
cmp
jns
js
ret
int
jge
or
mov
cmp
out
add
add
add
mov
pop
inc
iret
out
dec
xchg
js
xor
jge
dec
xor
arpl
loop
jns
cld
lock
enter
stc
add
sub
mov
pop
clc
and
cmp
popf
jae
ud2
outsb
or
inc
rolb
lahf
lret
pop
pop
inc
sub
dec
cmpsb
push
inc
xchg
cmp
imul
std
push
xor
sub
movsb
jp
add
push
addr16
in
sbb
stos
daa
dec
mov
lods
or
push
mov
lea
mov
sub
dec
xchg
sbb
lret
lods
inc
pop
and
pandn
fldcw
dec
xlat
cmc
hlt
or
cmp
sub
loop
or
sbb
jb
lods
imul
sub
or
mov
lods
inc
mov
mov
shlb
mov
daa
ljmp
mov
xchg
test
daa
or
jecxz
roll
mov
call
out
ja
inc
adc
dec
jp
aad
inc
iret
insl
iret
dec
hlt
lock
stc
jbe
dec
subl
aaa
dec
in
outsb
or
inc
cmp
push
xchg
addb
lahf
popa
loopne
dec
cwtl
xchg
popf
xor
cmp
bound
pushf
or
dec
les
dec
pop
loopne
mov
sub
sub
mov
test
out
push
pop
gs
inc
bound
pop
cwtl
cmpsb
nop
mov
inc
inc
pop
shrb
adcl
ss
mov
mov
loopne
add
test
pop
lds
adc
js
mov
das
sahf
lods
loope
fcoml
daa
pop
fimuls
and
cmpsb
test
ss
xchg
inc
mov
inc
int
cltd
in
pushf
or
xchg
sarl
enter
fstps
rcrb
add
cmpsl
xor
enter
pop
fdivrl
inc
pop
xor
mov
inc
lods
pop
push
xor
into
cs
dec
mov
inc
sub
adc
inc
xchg
aam
and
out
out
cmc
scas
rclb
mov
inc
mov
inc
mov
push
and
dec
push
call
pop
dec
ljmp
rcrl
js
mov
push
daa
jns
shrl
iret
outsl
sbb
loopne
jmp
xor
or
inc
jl
add
insb
test
in
inc
mul
adc
out
mov
xchg
repnz
daa
inc
int
mov
call
mov
jo
imul
jns
jecxz
fmul
cmp
jb
and
cmp
jl
pop
cli
xchg
jl
hlt
shll
aas
xor
inc
out
scas
sbb
and
mov
ret
lcall
push
sub
jge
jnp
out
mov
push
out
xchg
adc
xor
icebp
or
iret
xor
xchg
jnp
jmp
jg
cld
sbb
adc
and
dec
sub
insb
mov
mov
aas
mov
sub
ss
lods
mov
lea
fnstenv
pop
into
xor
lock
sbbb
leave
lds
mov
mov
and
mov
xchg
aam
mov
pop
cmp
mov
pop
mov
ds
mov
cmc
push
sbb
mov
out
outsb
in
pop
mulb
inc
mov
inc
out
mov
mov
mov
adc
xor
xor
inc
or
aas
icebp
cmp
xchg
popa
jp
fbstp
pop
mov
jae
adc
dec
push
push
fcomip
and
dec
jl
fwait
loop
ret
dec
int
push
adc
xchg
pop
push
nop
movsl
sub
stc
dec
and
loope
add
push
cmpsl
mov
xor
into
add
mov
outsb
cmpsb
std
sub
sbb
inc
fcomip
or
and
icebp
xchg
icebp
data16
xchg
xchg
mov
inc
jle
xorb
dec
aam
mulb
jbe
xchg
sbbb
xor
add
inc
clc
cli
cwtl
mov
mov
mulb
push
cmc
mov
fbstp
les
adc
scas
cwtl
jae
mov
adc
movsb
lret
outsl
into
lret
test
mull
add
sti
test
stos
jp
sub
lea
dec
movsl
lret
mov
les
push
outsb
aaa
fsubs
jae
insb
or
jae
shll
xor
push
inc
scas
scas
aaa
lods
dec
fnsave
jbe
push
cmc
into
js
mov
push
popf
push
sub
dec
jl
mov
or
shr
addb
adc
test
lods
xchg
or
mov
jmp
stos
movl
mov
scas
push
jns
xchg
push
aaa
in
aaa
lahf
sub
jno
test
dec
pop
mov
ret
and
cmp
adcb
pop
pop
mov
imul
and
mov
stos
les
icebp
mov
mov
and
add
sub
pop
or
in
mov
out
sbb
sub
xchg
js
jp
sarl
lahf
subl
mov
dec
mov
jg
push
and
push
adc
and
xlat
faddp
dec
int3
inc
leave
sub
or
mov
out
or
outsl
lahf
and
jg
jge
mov
pushf
stc
mov
addb
mov
out
hlt
xchg
ret
data16
cltd
inc
pushf
iret
fstpl
les
jp
les
test
dec
adc
push
add
pop
aam
enter
aaa
or
add
xor
add
xchg
pop
push
xor
paddb
fldenv
int3
jl
xchg
mov
shlb
mov
jnp
add
popf
idivl
int
mov
fistps
loope
or
cltd
xor
and
sbb
cmp
lods
sbb
add
push
andl
pop
xchg
not
jge
mov
pop
sub
fsts
add
loop
repz
jle
cmc
adc
cmpsb
push
gs
push
aad
lds
mov
adc
popf
xor
fldt
pop
cmp
xchg
xor
cmp
push
pushf
jno
or
loop
call
dec
push
std
push
ds
cltd
bnd
or
jmp
inc
dec
test
xchg
xor
rclb
and
ja
ljmp
lss
sub
imul
jp
dec
rclb
jle
hlt
xchg
xchg
jle
mov
push
mov
das
rolb
test
lods
aaa
loopne
lcall
adc
cmp
es
mov
xchg
movsb
sub
inc
fmuls
pause
rcrl
inc
mov
cmc
dec
inc
inc
mov
jne
cmp
push
mov
std
testb
mov
xchg
addl
loope
cmc
into
cmp
fwait
test
mov
mov
or
add
sub
mov
pop
lret
push
sbb
pop
rolb
cmp
arpl
mov
mov
int
cmp
mov
rep
rolb
pop
push
xchg
in
gs
shrl
mov
stc
pop
icebp
cmpsb
pop
lahf
push
cli
pushf
pop
pop
push
dec
inc
inc
adc
adc
mov
out
add
jnp
sub
jnp
sub
loope
xchg
push
dec
cmp
jg
popf
int3
or
push
cmp
lcall
xchg
aad
les
stc
mov
and
lds
in
inc
xor
in
je
sarl
mov
sbb
push
cwtl
stc
mov
pushf
sub
xchg
jmp
jecxz
jp
cmp
or
mov
iret
sub
mov
mov
loope
pop
xor
loop
xchg
mov
xor
fsub
xor
adc
lods
pop
insl
hlt
dec
inc
or
daa
xor
mov
sub
xchg
xchg
inc
mov
pop
cmp
pop
xor
call
iret
repnz
xchg
test
add
pop
shll
inc
iret
pushw
or
ss
scas
int
shrl
dec
sbb
pop
mov
loopne
mov
pop
sub
sti
inc
neg
shrl
lods
aaa
fwait
jp
jmp
push
jle
enter
imul
icebp
xchg
dec
mov
inc
inc
mov
or
ret
fadds
dec
jns
mov
xchg
ds
aad
out
or
gs
shrb
out
pop
xor
mov
push
pop
in
xor
push
pminub
pop
sub
loope
xchg
lret
call
fcomp
push
jl
sub
pop
and
addr16
fwait
jl
ss
mov
aam
mov
cltd
gs
hlt
inc
mov
iret
lret
js
dec
lds
pop
pop
lret
push
add
lahf
rclb
ret
add
push
add
cld
movsb
add
push
push
mov
ljmp
mov
inc
mov
adc
mov
lods
cwtl
mov
mov
lds
mov
jnp
hlt
mov
mov
jmp
jmp
cmp
popfw
insb
cmc
imul
sub
xor
xor
fdiv
add
sub
mov
pop
and
xchg
pop
mov
mov
push
icebp
out
aas
fdivrs
lock
xor
mov
xchg
cmp
outsl
jmp
adc
rcll
xchg
fistps
add
sbbl
jl
mov
cmpsb
pop
cli
cmp
pushf
jle
pop
idivl
jnp
xchg
pop
cltd
push
popf
cmp
xchg
push
xor
cwtl
push
test
popf
popf
aaa
push
dec
bound
pusha
sbbb
mov
push
add
push
decl
mov
es
mov
int
adc
aam
or
jmp
imul
adc
sub
repz
lods
add
clc
mov
cld
stc
adc
sti
sti
test
scas
inc
popf
mov
sbb
insb
rcrl
shrb
ss
sarb
jns
push
pushf
stos
pusha
mov
clc
fnstcw
jbe
xor
mov
pop
lock
rolb
fisubrl
ror
push
pushf
add
jmp
ja
aam
cmp
push
xchg
sub
or
adc
xor
pop
or
mov
out
mov
mov
sub
data16
iret
test
shll
sub
shlb
jmp
in
les
scas
push
fldt
shlb
xchg
mov
pop
push
push
shll
xchg
xor
mov
sub
ljmp
dec
dec
adc
ret
inc
ss
mov
mov
xchg
inc
daa
fxch
pop
scas
push
mov
fisttps
pushl
loop
mov
aad
pop
cmp
add
ret
jns
sbb
outsl
sbb
lods
dec
xchg
in
shrl
fdivl
shll
nop
int3
stc
in
mov
loope
sub
fldl2t
arpl
cmpsb
push
add
or
or
mov
mov
mov
mov
das
out
ja
sbb
into
mov
mull
and
iret
clc
inc
xchg
in
scas
movsl
add
adc
mov
int
call
jbe
cld
mov
lods
push
cmpsb
call
aas
pop
jo
jnp
dec
jns
ret
sbb
cmp
xchg
adc
out
fimull
dec
pushf
dec
sahf
mov
push
xchg
jge
out
pop
add
jmp
imull
dec
ds
mov
out
arpl
push
jl
xchg
jecxz
addr16
fwait
jo
xchg
shrl
pop
add
mov
addr16
xor
aas
dec
mov
out
cmp
pop
sub
inc
push
inc
aam
imul
cmpsb
push
jb
mov
in
sbb
stos
sbb
negb
in
jne
sub
stc
std
je
ja
add
push
lcall
mov
push
xlat
dec
and
loopne
dec
and
mov
inc
push
push
outsb
clc
ret
mov
inc
fsubrs
jle
mov
adc
es
mov
pop
jle
add
jbe
dec
sub
mov
dec
jne
in
cmp
pop
sub
mov
out
cmpsb
jp
lcall
push
lcall
sub
pop
inc
jnp
jns
push
iret
das
aaa
mov
lcall
int3
xor
mov
fucomi
cwtl
cld
cmc
add
dec
mov
inc
jmp
testb
stos
xchg
call
and
jge
inc
es
push
xor
dec
xor
push
push
lcall
in
arpl
sub
mov
repnz
cmc
addb
jb
lcall
stos
xor
lock
lcall
mov
rol
nop
mov
fisttpl
addb
push
lea
mov
popa
xor
dec
sub
dec
loop
cs
andl
push
mov
cmpsl
xchg
dec
and
je
out
cmp
cmp
aad
pop
arpl
cwtl
in
sub
mov
pushf
xor
bound
pop
fs
pop
sbb
stos
push
popf
cmpsl
dec
xor
dec
fsubs
mov
outsb
cs
movsb
loop
dec
aas
movsb
push
in
cmp
dec
adc
inc
inc
out
pop
mov
cli
rcll
jmp
add
in
mov
insb
sbbl
lods
out
sub
lea
inc
sub
inc
xchg
sub
sahf
or
cwtl
inc
xchg
imull
ret
mov
idiv
mov
loopne
pop
pop
fldl
jge
shrb
jl
jb
inc
pop
fstpl
jne
inc
jae
fdivr
out
pop
mov
leave
sbb
xchg
or
std
push
mov
lods
jo
sbb
xlat
or
stc
lret
or
mov
push
push
or
sbb
shrb
hlt
ret
test
jp
xor
mov
or
into
mov
inc
mov
push
popf
add
jp
push
sarb
lcall
add
rorl
xor
sub
aam
shlb
mov
jle
and
outsb
adc
or
mov
sub
shll
sub
cmp
push
stos
jle
jo
sub
les
dec
insb
or
cmp
mov
or
push
out
cmp
outsb
lds
mov
sbb
shll
iret
adc
mov
stc
adc
or
iret
mov
pop
mov
in
jae
leave
iret
mov
dec
push
push
mov
cld
dec
mov
sbb
inc
andb
inc
mov
push
add
les
test
rclb
loop
jbe
add
andl
push
cs
jle
push
cmp
push
push
sub
xor
jno
adc
js
push
stos
and
xor
lds
push
pop
jecxz
rclb
in
cmp
push
jge
add
sbb
mov
pop
ret
lds
stc
rorl
arpl
popa
inc
jecxz
nop
cmp
scas
xor
sti
cmp
daa
jae
lret
repnz
inc
push
ret
jae
jns
cmpxchg
sub
sbb
mov
arpl
sti
push
leave
inc
push
adc
xchg
cmp
sbb
test
cmp
dec
test
fucomp
or
dec
cmc
jmp
push
dec
enter
adc
enter
cmpsl
test
jmp
movsl
sub
stos
gs
iret
sbb
cmp
je
xchg
cltd
mov
insl
ja
mov
inc
or
fs
repz
or
iret
xchg
add
mov
push
sahf
sbb
test
xor
popa
ljmp
and
rcl
add
jle
lock
adc
idivl
or
cmp
cmp
test
xor
shrl
lds
pusha
addl
rcr
and
test
gs
cmp
sub
sub
push
jnp
daa
mov
mov
push
pusha
mov
xchg
cli
lods
clc
scas
adc
aaa
cmp
not
jne
shr
addb
mov
hlt
jae
bound
add
add
dec
inc
add
std
out
aaa
aaa
xchg
incb
fstp
xchg
xor
mov
pop
fs
adc
lock
test
jecxz
repz
add
inc
mov
cs
cwtl
and
insb
or
mov
loop
mov
xchg
arpl
les
fisttps
adc
lods
mov
mov
in
mov
test
or
mov
sbb
mov
sbb
jmp
int3
dec
int
sqrtps
xchg
and
popa
add
rorl
std
int
xchg
clc
data16
push
fs
scas
aam
aad
test
rcrb
and
test
test
and
mov
xorl
ret
outsb
mov
adc
sub
aaa
nop
aas
jno
adc
call
repnz
mov
adc
xor
xor
push
mov
lahf
dec
js
push
pushf
add
pop
and
cmpsb
xorl
push
imul
xchg
jle
fcmove
es
push
or
sbb
loopne
adc
jp
xor
push
sahf
dec
sahf
jle
int
aas
mov
jmp
inc
jb
cmp
xor
xor
loopne
jg
xchg
test
cmp
lret
sub
jne
cli
hlt
xchg
pop
push
scas
or
adc
ror
pop
pop
testl
leave
xlat
popf
push
push
mov
loopne
cmp
out
mov
in
fs
jnp
push
ljmp
dec
les
and
insb
pop
out
div
popf
ds
ss
sbb
mov
inc
fldl
cltd
mov
add
rorl
jg
mov
adc
std
jp
xor
adc
push
mov
rorl
push
movsb
cmpsl
cmpsl
or
xchg
cltd
incl
mov
mov
cmpsl
les
popa
imul
mov
js
popa
or
sti
or
js,pt
sub
and
pop
xchg
stos
in
sub
loopne
sbb
sbb
fs
dec
leave
in
dec
jo
outsl
push
cmpsb
popf
cltd
andl
xchg
filds
mov
push
decb
push
pop
cltd
out
sahf
fldenv
ljmp
clc
fcmovnu
sbb
repz
inc
test
lods
add
adc
idivb
or
loopne
shr
ss
mov
push
lock
loopne
mov
icebp
addr16
fisttpll
jno
mov
out
xchg
nop
add
bound
push
pop
pop
aas
mov
push
lods
inc
in
or
jg
in
aas
andl
mov
aad
ficoml
mov
cmp
movsb
mov
aam
pop
xchg
das
les
popf
loopne
jno
test
pop
in
and
jno
ss
mov
mov
in
mov
mov
xor
mov
jbe
shr
mov
and
push
or
xor
dec
add
fistpl
xchg
dec
sub
push
push
stos
iret
jne
jg
lds
jmp
mov
out
popf
imul
fnstsw
dec
push
add
adc
jg
push
int
push
loopne
xchg
jns
cs
xor
cmp
sahf
jns
jbe
paddusw
rorl
fsts
push
mov
pusha
fisubl
adc
jecxz
scas
in
rcrl
hlt
scas
call
mov
mov
ljmp
inc
xchg
clc
fistpll
pop
lret
cmp
test
jbe
addr16
xchg
pop
push
xlat
xchg
sti
push
mov
pop
stos
mov
push
push
dec
sahf
ss
inc
mov
dec
pushf
addr16
dec
jge
adc
mov
inc
shrb
cmc
inc
dec
ja
jnp
pop
xchg
push
mov
push
popa
test
xor
or
mov
adc
jl
add
orb
aad
hlt
enter
nop
pop
jecxz
sti
add
or
xor
and
push
mov
fldt
sbb
pop
jmp
std
mov
fs
imul
rol
xor
fwait
insb
xor
sub
ss
cltd
mov
and
lods
lods
sarl
cli
sbb
pop
fidivrl
lods
cmp
testl
mov
inc
push
or
pushf
fcmovnbe
adc
fcomp
cmp
xchg
mov
jo
loop
adc
sbb
jo
ret
test
imul
dec
adc
inc
out
mov
mov
aaa
sbbb
in
loope
test
scas
ret
mov
clc
sbb
push
iret
rcr
scas
std
lea
pusha
inc
sahf
sub
adc
cmp
cmp
in
out
jg
add
mov
jl
std
xor
outsb
pop
mov
or
lock
xor
scas
test
sti
cmp
jo
insl
mov
cmp
mov
std
lahf
xchg
cmpsl
add
repnz
in
ja
test
fsubp
aam
leave
enter
cmp
daa
add
ret
push
out
leave
jmp
outsb
out
orl
loopne
insl
fldcw
pop
lcall
add
iret
push
lods
mov
ret
push
lds
jb
add
sub
sarb
test
movsb
or
lds
jae
clc
inc
incb
jb
arpl
push
push
mov
cmpsb
iret
stc
mov
mov
push
push
lds
out
cmpsb
mov
stos
xlat
mov
es
clc
xchg
mov
andb
or
inc
or
mov
sub
hlt
addr16
sbb
cmpsb
cmp
inc
adc
pop
sub
cmpsl
push
sbb
sbb
js
sbb
lds
stc
repnz
sbb
test
pop
ds
or
mov
or
jecxz
movsb
hlt
add
jg
or
sbb
jl
cs
dec
bound
cmp
pop
push
jg
and
mov
sbb
ljmp
leave
adc
dec
jae
leave
push
jne
aad
mov
sti
enter
sub
push
insl
sbb
fwait
adc
xchg
pop
pop
fmulp
inc
or
sarl
addl
enter
push
rclb
popf
cmp
mov
mov
dec
jmp
xchg
popf
inc
and
inc
orb
shll
xor
xchg
cmp
pop
das
lret
std
push
divl
popl
or
data16
jnp
jg
jmp
inc
sub
cmp
push
scas
ja
aas
fs
jbe
dec
xchg
outsl
mov
clc
xor
nop
mov
ja
cltd
push
out
mov
das
jne
leave
xchg
sub
and
stos
or
fcoml
xchg
add
popf
enter
insb
jle
loop
mov
orl
xchg
mov
rolb
shll
das
sub
jge
int3
cmp
sahf
js
aaa
icebp
mov
xor
mov
cltd
push
cwtl
push
push
sbb
or
out
push
sbb
mov
lods
leave
fildll
or
les
mov
pop
add
stos
inc
jbe
pop
xchg
and
mov
push
jle
xor
out
scas
mov
sbb
mov
or
jmp
sub
lds
pop
ret
js
mov
mov
icebp
sbbb
out
in
in
js
stos
mov
mov
data16
sbb
in
mov
mov
mov
push
sbb
and
out
jnp
wrmsr
ss
fcompl
pop
pop
cmpsb
out
and
lahf
push
fwait
call
decl
daa
mov
lods
ret
push
ret
test
test
cmp
xchg
out
mov
je
insl
inc
aad
cmpsl
or
lret
pop
cmc
jmp
popf
aam
loope
aad
jne
mov
fimuls
jbe
testl
mov
inc
xchg
mov
mov
ret
push
mov
dec
sub
jmp
mov
insb
out
aas
sub
xchg
mov
aam
insb
outsb
outsl
mov
adc
loope
jne
mov
leavew
ljmp
daa
fwait
adc
ret
pop
inc
rol
push
push
rcrl
dec
add
push
int
stos
enter
call
test
jb
mov
mov
cltd
lcall
jle
mov
pop
jbe
rcr
mov
mov
sub
aas
cmp
jae
add
jle
inc
or
mov
sbbl
sbb
cmp
lret
cltd
xchg
adc
dec
repz
daa
cmp
popf
fisubl
pop
mov
popf
dec
push
and
xchg
mov
push
insb
pushl
rclb
imul
push
fmuls
mov
or
pop
xchg
aad
or
test
sbb
xchg
and
jne
icebp
mov
sbb
mov
mov
inc
sub
adc
sub
add
mov
adc
ljmp
push
mov
mov
popa
test
add
cmp
cmp
sbb
adc
insb
cltd
pop
in
cmp
fistl
ret
icebp
rcrb
cmp
daa
sub
dec
jecxz
nop
jns
subb
orl
test
push
sbb
jno
loopne
pop
xchg
les
pop
in
mov
sbb
and
push
dec
js
insl
and
lret
xchg
mov
sub
notb
xor
sub
xorb
jg
ja
out
xchg
movl
ljmp
insl
xchg
pop
mov
loope
mov
push
aaa
add
inc
push
lds
jo
aam
sub
inc
lods
xchg
clc
das
pop
push
mov
movsl
jne
mov
sahf
into
or
out
pop
mov
fstpl
cltd
sub
or
dec
push
rorl
call
xchg
int3
pop
jmp
jo
cmp
lods
push
pop
dec
lock
push
rorl
cmp
lahf
call
inc
ss
ret
notl
xor
add
mov
int
aas
out
dec
in
cwtl
xor
iret
sbb
dec
orb
mov
lea
jecxz
cmp
mov
scas
and
test
stos
and
inc
xlat
push
adc
aam
mov
test
xchg
inc
int
mov
jnp
imul
cmc
mov
jb
jmp
pop
fistl
pop
cmp
fimull
cwtl
daa
fs
repnz
js
mov
cmp
sub
xchg
rcrl
ja
fldenv
out
jmp
and
rcll
push
pop
mov
aas
sahf
not
inc
test
push
fidivrs
int3
inc
and
scas
adc
test
sub
inc
sti
in
addl
les
test
lret
or
cmpsb
and
push
int
aad
cmp
sbb
mov
pop
je
pop
enter
paddusw
jge
pop
jb
ret
out
inc
shll
sub
and
jbe
aad
push
rcr
push
outsb
pop
sbb
cmpsl
cmpsb
dec
inc
pop
or
xor
test
mov
lock
inc
sarl
adc
push
or
push
mov
sahf
inc
push
cli
xor
cmp
lahf
mov
ljmp
sbb
fistpl
xchg
cs
lahf
cli
icebp
ja
test
aam
pop
cmp
mov
call
fwait
xor
mov
movsb
clc
sbb
pop
fwait
lret
lods
fiaddl
push
and
mov
fcomps
popf
loope
mov
stc
adc
or
pop
rol
in
mov
fidivrs
xor
and
mov
or
jmp
or
pop
sahf
xchg
pop
xor
cmc
stos
in
aad
std
outsb
idivl
dec
xor
insl
xorl
sbb
pop
lea
sar
jbe
push
adc
cmp
cmp
insl
or
jge
and
push
sahf
push
jns
popf
mov
cmpsl
mov
cmp
and
push
add
mov
lds
sub
mov
loop
xchg
es
xor
outsb
add
clc
sub
imul
outsl
int
cli
push
addr16
stc
xchg
fisubrs
in
push
sub
inc
or
fs
addr16
mov
sbb
add
dec
pop
lods
cmp
ds
jbe
cmp
pop
insl
push
push
sub
adc
jb
insl
add
push
push
cmp
xor
mov
fwait
add
lcall
gs
imul
ret
ret
rol
dec
lret
cmp
inc
pop
cmp
xor
imul
mov
loopne
popa
repz
aas
enter
or
dec
inc
mov
mov
and
out
pslld
testl
rorl
sub
arpl
add
icebp
pop
and
or
lock
jo
or
or
adc
loopne
xor
mov
push
cmp
rorb
lods
pop
dec
sub
loope
outsl
imul
out
ficoms
push
sbb
inc
xor
and
cmp
add
inc
mov
or
movsb
shlb
das
enter
sarb
fdiv
xchg
mov
leave
mov
push
mov
in
mov
out
add
mov
imul
movsl
mov
lds
iret
out
pushf
lods
std
inc
adc
or
decl
arpl
sbb
scas
and
adc
cs
xchg
ret
pop
data16
les
pusha
mov
cmpl
scas
xchg
xchg
shlb
out
sahf
cmp
dec
sti
int3
and
enter
call
test
pop
mov
mov
dec
sti
sbbl
js
clc
popf
cmc
das
fldl
jns
lret
sub
adc
fs
lea
adc
es
or
add
inc
xor
lret
mov
and
lea
adc
fldcw
dec
push
mov
movsb
loope
mov
sbb
into
cmc
pusha
dec
sbb
push
test
jnp
xor
push
or
cwtl
bswap
mov
push
cmp
in
mov
push
jbe
lahf
mov
subb
mov
dec
adc
mov
inc
in
out
sub
pop
movsl
bound
sub
push
sbb
jo
scas
fbstp
fs
in
adc
jge
stos
addl
shll
pop
xor
pop
addr16
and
push
les
test
jle
mov
lods
xlat
xorl
mov
jge
pop
mov
mov
xchg
out
dec
inc
nop
ret
push
ror
push
cmpsl
dec
nop
xchg
out
stos
std
mov
test
jmp
cmpl
fdivrp
aad
pop
jle
inc
add
lea
or
rorl
pushf
rorb
inc
xchg
sub
lret
add
imul
jecxz
int
pop
jg
in
scas
dec
pop
popa
xchg
fcmovnbe
pop
xchg
dec
mov
ret
aas
xchg
or
fwait
scas
pop
mov
mov
rcrb
lret
cmpsb
test
push
pushf
les
fcompp
movsb
add
mov
stc
dec
mov
mov
in
loope
lret
inc
inc
adc
mov
sbb
mov
mov
cmp
xor
jmp
sub
jmp
jns
imul
add
cld
pop
dec
call
lret
mov
push
add
xchg
negl
lcall
cwtl
dec
cmp
jge
scas
pop
cli
loopne
shrb
test
push
cmc
sub
inc
arpl
add
sbb
rorl
jb
push
jle
lock
test
xor
dec
add
sub
loop
push
inc
imulb
pop
jne
clc
icebp
xchg
lods
lret
adc
aad
scas
movsb
and
xor
insl
or
mov
fbstp
sahf
sbb
adc
das
and
fcmovb
test
stos
rorl
jl
pushf
dec
stc
in
sbb
jo
pusha
add
dec
shrb
pop
leave
es
mov
mov
repnz
out
xor
mov
sub
aam
mov
cmp
dec
les
cmc
and
out
jns
pop
repz
jno
cmpsb
cmp
imul
imul
call
inc
push
lea
mov
inc
mull
sarl
pop
pop
mov
pusha
lds
aaa
data16
in
push
insl
mov
push
int3
cli
repnz
cli
adc
mov
or
in
popf
jp
jp
dec
es
or
push
rcr
out
mov
in
sub
jb
and
jnp
gs
in
sbb
xlat
divb
sar
pop
mov
inc
push
gs
int3
lods
insl
mov
pop
pop
pop
jl
xchg
aam
ret
fdivs
enter
incl
js
arpl
cmc
cwtl
mov
add
xchg
movsb
mov
ret
sbb
in
or
dec
cli
mov
dec
or
xlat
xor
adc
lods
sbb
cmp
inc
cmovs
and
popf
mov
mov
imul
dec
jbe
xor
popa
push
hlt
cmpsl
or
mov
sub
dec
iret
jl
stos
imul
enter
aam
or
dec
sub
es
push
dec
sub
jno
js
sub
fstp
xor
pop
cli
daa
jg
pop
mov
xchg
or
pusha
xor
loope
mov
or
push
lock
enter
mov
testb
shr
push
sub
mov
inc
cmp
push
push
jne
pop
fs
push
or
fmuls
jne
repnz
sub
adcb
sbb
addr16
stc
xorb
movsl
cmp
daa
xor
jnp
push
cltd
xchg
mov
ja
adc
mov
out
dec
add
inc
inc
adc
mov
pop
sub
repz
cmc
pushf
add
andl
lahf
ret
repz
mov
inc
vcvttsd2si
jnp
lret
repz
push
pop
push
mov
push
cmp
sbbb
xchg
cmp
fwait
lds
in
fwait
iret
ret
addr16
divb
cmp
call
jne
iret
data16
jno
mov
jb
cs
test
push
std
inc
add
inc
insl
xor
dec
mov
jmp
lds
xchg
dec
pop
jbe
mov
insl
lret
hlt
fdivrp
test
jbe
xchg
sti
popa
cmc
xchg
sbb
call
and
jne
sbb
jecxz
cmpl
adc
shll
cwtl
fildl
imul
mov
cmp
dec
mov
test
fucomp
popf
mov
sbb
sbb
mov
icebp
pop
lods
push
or
and
das
pop
add
pusha
add
out
mov
call
mov
jbe
repnz
cmp
out
xor
jbe
or
std
xor
sbb
mov
ja
mov
aas
fstps
iret
pop
fisttpll
inc
sub
sub
addr16
loop
jg
cmp
inc
stc
dec
int
dec
or
cmp
popa
repnz
and
orl
sahf
jmp
pop
sub
pop
popa
mov
pop
mov
xchg
movsb
hlt
mov
rcr
lds
mov
jo
xchg
push
lret
shrb
push
xlat
cld
adc
lcall
lock
xchg
imul
dec
out
es
mov
dec
or
imulb
mov
sbb
dec
push
cmpsl
add
xchg
daa
fists
cmp
je
cmp
mov
movsl
jb
fisttpll
out
test
pop
int3
and
sbb
pop
and
mov
sub
xor
mov
and
sub
xchg
sahf
push
lea
fnsave
sbb
test
outsl
jne
push
push
adc
and
xchg
xchg
jl
scas
pop
out
add
bound
ds
cmp
adc
dec
inc
test
xchg
xor
push
and
adc
xchg
in
ja
xchg
int3
dec
dec
adc
cmp
sti
or
inc
pop
arpl
imul
subl
in
movsl
xor
cmp
adc
push
repnz
jmp
push
test
jp
mov
aam
mov
mov
mov
dec
jl
jbe
jge
pop
sub
push
xor
add
arpl
sbb
clc
stos
enter
dec
mov
stos
push
popf
inc
push
jecxz
xchg
jbe
jae
jo
jp
jne
lock
or
int
bound
sbb
sub
mov
xor
out
loop
test
repnz
ret
jle
xchg
arpl
loopne
in
and
repz
aad
call
pop
add
lret
fildll
in
sbb
pop
mov
mov
push
and
test
mov
xchg
jecxz
adcb
cmp
jecxz
sub
out
enter
xor
mov
mov
test
rcrl
ja
push
xor
sub
jb
pop
lcall
adcl
mov
lret
shll
xor
cli
movsb
lcall
mov
andb
or
jmp
mov
dec
daa
sahf
subb
adc
dec
call
aas
push
lods
aam
lcall
jns
out
pop
das
mov
jle
pop
js
scas
ret
call
lods
sbb
or
mov
push
rorl
sarl
enter
ret
arpl
ret
mov
daa
lock
push
xor
pop
mov
adc
mov
or
push
in
movsl
out
push
loop
dec
jecxz
into
jns
xchg
mov
or
xchg
sbb
enter
mov
pusha
jle
shll
pushf
test
sub
mov
out
insl
das
cltd
sub
cmpsl
fidivl
xor
out
jbe
mov
push
mov
xor
fnstcw
xor
scas
testl
popf
mov
xchg
repnz
jb
pop
push
jno
push
jae
add
adc
sbb
and
cmc
inc
xchg
call
pushf
dec
push
mov
jge
mov
add
dec
mov
push
sub
jno
xor
loop
int
stos
adc
icebp
jno
jbe
or
sub
imulb
pop
xor
mov
jge
mov
mov
push
jmp
pop
stos
insl
lahf
stos
adc
inc
adc
shrl
ret
sbb
adc
sub
or
xor
int3
mov
shrl
xchg
cld
xor
xchg
mov
sarl
push
jp
shll
in
fadds
scas
xor
add
insb
test
enter
pushf
mov
popf
xor
xchg
in
repnz
dec
pop
scas
scas
imul
xchg
ficomps
adc
arpl
out
inc
pushf
pop
pop
pop
push
push
in
shlb
push
lcall
icebp
mov
test
mov
xor
insb
pushf
test
sahf
movsb
into
mov
test
inc
loop
insb
inc
dec
xlat
mov
or
pop
dec
outsl
cwtl
adc
xchg
and
in
addr16
mov
and
cwtl
push
imul
out
cmpsb
shll
cmp
mov
sub
push
imul
mov
mov
mov
jo
ja
and
adc
sbb
sub
pop
cmp
xor
insl
and
jecxz
pushf
add
fimull
xchg
jmp
imul
jbe
xchg
andl
inc
aam
cmp
loop
subb
dec
aaa
and
cltd
movsb
aaa
dec
lahf
or
and
cs
int3
sbb
fldenv
inc
clc
push
dec
ret
ror
dec
and
xchg
add
in
inc
cmp
add
sbb
sbb
pop
pop
mov
test
xchg
inc
stc
sub
out
cmp
and
mov
call
xchg
or
aad
sarb
mov
cmp
push
repnz
push
xchg
jb
inc
ss
dec
xor
mov
mov
lahf
and
mov
xor
pop
test
push
lds
aad
lods
cli
int3
inc
xchg
mov
fistl
cmp
repnz
jns
add
sub
pop
out
push
ja
sbb
lahf
dec
cs
jns
fists
popa
mov
dec
out
adcl
adc
push
push
dec
mov
adc
ss
adc
dec
cmp
cltd
adc
clc
xchg
pop
inc
inc
das
pusha
or
gs
loopne
pop
cmc
fsubrl
sub
imul
movsb
in
dec
ficoml
jne
fcomp
or
jecxz
mov
inc
ret
xchg
gs
xchg
sti
mov
cwtl
dec
inc
imul
aam
stos
int
xor
repz
xchg
sbb
mov
jae
aaa
jmp
shll
lods
jo
int3
cmp
sahf
sbb
sbb
decb
sbb
fstps
xchg
cmp
jne
and
adc
leave
std
push
push
adc
adc
jecxz
out
mov
in
inc
pop
push
add
add
mov
es
mov
inc
xchg
loope
lea
dec
xchg
jns
xchg
cmp
or
xor
jo
rorl
icebp
xor
adcl
sub
pop
insl
mov
icebp
movsl
sub
xchg
mov
push
loopne
mov
fisttpll
lret
xor
test
dec
popa
das
pusha
lock
add
ret
mov
imul
aas
jecxz
orb
iret
dec
push
out
ds
nop
pop
adc
mov
adc
aas
dec
fidivs
add
mov
jae
lods
jbe
jb
adc
outsb
insl
add
iret
xchg
je
mov
fwait
mov
inc
jne
aas
xlat
inc
iret
adc
nop
xchg
and
adc
xor
sub
inc
jp
fsub
lods
test
pop
jle
fisubrl
fidivs
cmp
lea
shrb
out
fsubr
cmc
and
daa
outsl
lods
insb
rcrl
push
outsl
fistl
dec
fisttpll
mov
lods
jae
push
push
dec
dec
out
cwtl
dec
js
movsb
rolb
xor
xor
jnp
gs
roll
inc
shll
jg
test
add
loop
dec
jg
test
sbb
mov
hlt
cwtl
cmp
aas
sub
sbb
mov
add
mov
and
xchg
xchg
or
fidivl
pop
sbb
popf
in
test
inc
or
pop
out
sub
mov
aas
data16
mov
pop
outsl
sti
rclb
sahf
cmpsl
inc
dec
js
mov
push
ja
add
int3
lods
push
xchg
jo
ret
scas
push
add
mov
dec
cli
xlat
das
dec
inc
or
inc
neg
mov
mov
mov
fists
dec
or
movb
mov
call
int
sbb
insl
out
xor
xor
jle
jmp
mov
mov
fst
push
lods
push
dec
rcrb
jg
mov
and
jo
dec
adc
ss
in
sub
push
mov
mov
lods
cmpsl
shlb
aam
xchg
mov
pop
orl
jo
in
cmpsl
fbstp
test
and
loope
lds
xor
movsl
cmpsb
imulb
and
mov
cmpsb
inc
push
iret
mov
cld
stos
arpl
leave
cmp
or
xchg
and
inc
mov
out
jno
sti
cltd
rorl
stos
fsubrl
dec
mov
je
test
leave
cmc
stos
dec
push
cmpsl
dec
cmp
rorb
cmc
cmpb
fimuls
fdivrs
adc
mov
inc
jmp
fistps
mov
ret
mov
cmpsb
ds
xchg
imul
jmp
xor
ss
mov
jg
negb
in
jbe
outsl
cwtl
jg
repnz
push
stc
imul
and
mov
jge
shrl
pusha
xchg
jl
lahf
mov
or
inc
pusha
inc
pop
addr16
cltd
mov
adc
xchg
rolb
fstl
test
push
add
or
mov
push
out
iret
and
mov
negb
mov
pop
icebp
fdivr
je
outsl
xchg
cmp
dec
out
je
xor
pusha
loop
sbb
cmpsb
sub
mov
xlat
mov
call
or
fcomps
aaa
push
push
jb
in
jb
push
ss
mov
or
push
or
jge
subl
mov
pop
mov
sub
adc
lea
jb
loop
sub
cmp
stos
nop
stos
testl
nop
subb
jg
pop
sbb
cmp
pop
xchg
mov
mov
loop
cmpsl
bound
das
dec
mov
and
push
imul
lds
push
jne
and
xor
movsb
jmp
jno
ja
cmpsl
sar
pop
mov
addl
leave
subb
mov
into
dec
mov
push
and
aaa
inc
hlt
cmp
cmp
pop
ja
mov
out
mov
add
cwtl
and
pop
mov
fdivl
or
jb
fiadds
scas
pop
fsubs
cmp
rcrb
pop
mov
les
or
mov
repz
dec
fs
lret
push
aad
ds
cmpl
in
dec
loope
iret
pop
and
adcl
loop
idivl
push
cmp
in
push
es
sbb
ss
aaa
mov
jns
mov
mov
dec
addr16
test
lods
cmpsl
xor
scas
call
outsl
sub
lods
ss
lock
fst
into
xor
aas
xchg
adc
cmp
clc
pop
test
in
inc
jle
add
xor
movd
jo
popf
test
lods
and
or
ja
stos
lcall
out
inc
cmp
jns
fstps
mov
push
fwait
and
sub
imul
mov
pusha
stos
push
shl
scas
cwtl
filds
rcll
fcoml
stos
rcl
push
xlat
pop
dec
jp
inc
mov
sub
out
pushf
into
adc
adc
test
pushf
pop
loopne
sar
stc
cmp
sub
and
je
adc
clc
nop
imul
jo
imul
fcmovnu
adc
gs
cmc
ret
jmp
add
das
xor
sahf
add
dec
or
test
les
cs
test
stc
into
cs
dec
xchg
test
inc
roll
xchg
pop
pop
lcall
mov
ja
cmp
dec
lods
dec
sub
adc
push
sub
out
iret
andl
sarb
iret
and
addr16
dec
sub
decl
mov
push
out
jge
lcall
rol
mov
push
and
ret
xor
add
daa
and
divl
mov
out
mov
cmpsl
pop
cmp
jnp
xchg
mov
lods
ffreep
inc
push
inc
or
xchg
les
mov
lret
fs
aaa
cmp
mov
sub
and
mov
out
js
or
in
test
in
pop
cli
adc
pop
neg
jecxz
xor
and
insb
cwtl
mov
mov
sub
add
rclb
scas
mov
aad
or
icebp
xchg
test
hlt
sub
sub
negb
in
add
repz
bound
clc
mov
test
push
sub
xchg
or
lods
mov
orl
scas
dec
sbb
xor
nop
lods
dec
les
subl
dec
fcoml
stos
cli
sahf
sti
lret
sub
push
adc
cmpsb
or
stos
cmp
cli
dec
xchg
pushf
subb
inc
jo
push
push
loop
dec
push
out
xor
xor
enter
imul
sbb
aam
sbb
fnclex
dec
pusha
fiadds
ret
enter
test
fs
push
cwtl
cmp
or
push
shll
add
fisttps
xchg
adc
les
pop
clc
lret
int3
nop
push
lock
pop
ret
add
mov
pop
clc
subl
sahf
cmpsl
cmp
dec
pop
dec
out
mov
mov
leave
pop
in
notl
sbb
dec
test
fdivrs
fldl
pop
clc
shll
jbe
lods
cltd
roll
and
insb
lcall
sbb
ret
xchg
pushf
shlb
xor
lcall
dec
inc
test
sahf
mov
push
popf
mov
add
pop
scas
mov
mov
xor
and
fwait
dec
dec
or
test
xor
adc
mov
cmp
pop
jl
pop
subl
orb
roll
test
dec
es
inc
xchg
mov
pushf
xchg
or
imul
inc
xchg
cmc
mov
cld
ficompl
jnp
daa
sbb
dec
pusha
ja,pt
mov
shrb
cltd
jb
pop
stos
xchg
fcoml
or
cs
in
movsb
fwait
mov
lret
nop
aam
flds
pop
and
xlat
or
jae
push
movb
add
mov
xchg
xchg
mov
mov
out
xchg
stos
fadds
repnz
lcall
xor
push
div
fcoms
andb
xor
sub
pop
or
test
ljmp
dec
divl
scas
and
xor
push
clc
stos
leave
mov
inc
push
inc
shlb
sti
pop
mov
push
pusha
fidivrs
stos
popf
sub
ljmp
push
lret
pop
jl
mov
mov
les
jp
popa
xchg
lock
add
imul
mov
scas
pop
pop
scas
or
mov
ficomps
fdivrl
inc
flds
adc
pushf
mov
jcxz
int3
gs
inc
in
popf
mov
xchg
je
add
daa
outsl
call
sti
cmpsb
mov
in
mov
xchg
push
jbe
mov
sarl
movsb
mov
fxtract
divb
mov
stos
pop
js
sar
cmpsl
repz
cmp
dec
dec
dec
mov
mov
sbb
mov
adc
inc
pop
sar
pop
pop
lret
push
nop
setb
pop
pop
sub
jge
pushf
mov
cmpsb
cltd
mov
xchg
pop
aam
inc
inc
lret
fistpl
popa
cs
or
mull
outsl
dec
jno
ret
subb
mov
jo
lea
rclb
jmp
xchg
shlb
add
pop
es
stos
jo
outsl
loop
loop
cmp
aas
lret
cmp
dec
xor
adc
adc
decb
scas
dec
jns
mov
mov
jecxz
xor
mov
push
les
ds
idiv
sub
dec
cltd
mov
push
gs
lods
add
cmp
shlb
cwtl
mov
push
sbb
push
imul
mov
mov
rclb
mov
jae
daa
cwtl
in
leave
ds
xchg
bnd
dec
sub
iret
xchg
pop
mov
repz
hlt
out
dec
sbb
sti
pop
into
mov
in
and
rorb
inc
pop
ret
mov
add
test
jg
lcall
dec
cmpb
mulb
mov
int
cmp
lea
clc
pop
push
ds
out
out
dec
sub
imul
sbb
sbb
mov
xchg
ljmp
mov
shlb
std
sub
ret
xchg
jne
add
jbe
pop
xchg
in
pop
insl
push
mov
arpl
in
xor
movsb
or
and
push
cmp
fcomi
insb
jno
pop
push
xlat
inc
clc
jns
cmpsb
push
nop
and
cli
arpl
xor
push
or
xchg
popf
inc
push
inc
loop
cmpl
jae
jno
add
leave
notb
mov
inc
and
xchg
inc
xchg
jno
or
idivl
mov
ffree
xor
loope
shll
call
test
dec
cld
and
or
pop
ja
jbe
daa
dec
mov
cmpl
add
inc
cmpsb
mov
pop
mov
mov
scas
pop
sub
adc
js
lods
mov
adc
shrl
jb
and
out
mov
nop
mov
jmp
mov
cmp
push
jl
mov
jge
repz
call
pop
jb
or
jg
in
insb
ret
mov
sarl
cmp
or
cli
jg
lods
ret
xor
push
fs
rcll
sub
lods
fwait
push
jp
push
je
xchg
sbb
ret
mov
mov
out
fwait
outsl
cmpsl
xchg
lods
call
rclb
mov
jnp
fwait
push
adc
mov
mov
cmp
repnz
xchg
cltd
pop
scas
aaa
jnp
cmp
mov
test
in
or
or
adc
mov
testb
hlt
fs
icebp
arpl
pop
push
dec
xchg
xchg
cld
xchg
xchg
les
pusha
adc
sbbl
mov
stos
cmp
cmp
dec
jne
rcl
insl
xor
popa
pop
es
outsb
xchg
movsb
inc
sbb
cmpsb
push
sbb
jg
mov
cmp
push
inc
testb
xchg
outsb
jecxz
hlt
add
xor
pop
jge
push
sub
cmpsb
jo
fyl2x
sub
cs
hlt
cmpl
cmp
jne
es
in
into
leave
shlb
int
rcrb
jb
les
incb
negb
mov
mov
imull
xchg
in
xchg
jmp
mov
inc
mov
popf
xchg
ja
jnp
jg
ret
xchg
or
xor
add
lcall
mov
xlat
jbe
lea
out
in
sahf
sub
mov
cmpl
adc
fmul
jp
mov
daa
loopne
shll
std
mov
adc
push
mov
lahf
and
int3
push
repnz
adc
cmp
in
je
sub
cmpsl
js
std
sub
jp
inc
cmp
cmpb
adc
push
jnp
or
fst
and
mov
aam
jb
ret
xlat
sbb
outsl
jo
lods
lds
in
add
cmp
aas
jne
fbstp
loop
test
push
mov
sub
xor
cld
mov
or
push
call
push
gs
leave
rcr
sahf
lahf
xchg
loope
in
xchg
sahf
fistpll
mov
lds
cs
out
bound
fcmovnbe
lret
and
repnz
xor
ljmp
mov
mov
in
lcall
rcll
cmpsl
fists
xlat
jmp
dec
adc
dec
stos
cs
dec
call
sbb
jg
cmpsb
movw
and
mov
pop
dec
out
arpl
xchg
mov
jbe
mov
mov
jmp
cli
out
int
stos
movsb
leave
pop
push
or
repnz
test
mov
mov
xor
out
adc
mull
dec
in
rorl
push
out
push
cmc
cmpb
aaa
pop
jle
xlat
and
fnstenv
inc
xor
mov
pop
lods
mov
jae
ljmp
jecxz
sar
jge
or
mov
dec
inc
fidivl
pop
pop
sub
mov
das
into
lods
stos
cmp
sbb
push
mov
xchg
enter
add
outsl
xchg
jle
sbb
roll
pushf
xchg
orl
aad
or
or
xchg
outsb
dec
and
iret
fmuls
push
lock
push
mov
bound
push
push
insb
jl
ret
mov
mov
push
adc
or
ss
test
shrb
dec
sbb
mov
pop
ljmp
sbb
lret
out
ss
ja
mov
fdivr
dec
jp
inc
adcl
icebp
pop
nop
imul
hlt
push
and
jb
nop
in
dec
dec
fcoms
mov
sbb
sub
jno
adc
sbb
xchg
ret
mov
mov
cmp
mov
in
pop
sbb
fxch
dec
add
jnp
add
fistpl
sub
scas
sub
jecxz
dec
test
mov
jns
cmp
dec
les
jb
insl
jae
ficompl
pop
push
xor
lahf
pushf
push
pop
sub
or
sbb
in
jmp
jbe
push
jmp
adc
ljmp
inc
inc
sub
push
call
cwtl
pusha
cli
pop
orb
xor
sub
mov
mov
dec
call
jg
jecxz
push
jmp
jb
lock
sub
xchg
xchg
xchg
dec
or
popf
pop
push
fwait
mov
xor
outsb
ret
lret
pop
mov
lret
popa
xchg
sub
fisttpl
lods
clc
add
ds
lret
xor
out
adc
pop
enter
pop
and
mov
add
cltd
gs
and
out
insl
adcb
ljmp
lea
das
iret
test
jmp
add
mov
lods
mov
mov
push
ja
shl
inc
notb
test
add
fdiv
int
pop
scas
cmp
sahf
sbb
xchg
sarb
adc
push
adc
mov
mov
jno
ss
ds
js
pop
mov
subb
cmpsl
cs
aaa
orb
in
xchg
outsl
out
add
sub
sahf
add
shlb
push
and
sbb
popf
je
xor
jne
fs
jne
andb
loopne
mov
sub
or
stos
xor
pop
dec
pushf
popf
mov
pushl
sti
mov
inc
sbb
pop
imul
dec
pop
push
xchg
pop
xor
inc
sub
adc
inc
popf
pop
dec
mov
inc
inc
inc
sbb
enter
gs
jae
fwait
mov
push
out
aaa
jl
mov
outsb
pop
cmp
jle
cmp
dec
xor
jbe
add
or
mov
cmc
and
and
clc
leave
insl
iret
int
inc
mov
shll
lahf
stos
fcmovnbe
sbb
loope
test
pop
add
lock
and
jno
inc
les
mov
mov
mov
popl
mov
xchg
dec
test
scas
roll
nop
inc
bound
push
fisttps
cmp
xchg
inc
orl
jae
lds
fldt
jmp
jne
push
adc
int3
push
xorb
lock
sarl
jle
mov
insl
and
insl
add
fdivrp
inc
push
mov
lret
jne
and
sbb
sbb
cmc
add
mov
fcmovnu
dec
mov
outsb
lods
push
pushf
data16
aad
pop
pop
out
dec
in
test
fld
std
and
ss
xor
xor
mov
pop
cmp
adc
ljmp
add
adc
cmp
jg
push
in
test
outsb
mov
pop
sbb
lds
daa
mov
push
repnz
pushf
xchg
inc
scas
das
mov
nop
xlat
sub
pop
xor
and
cmp
jge
nop
adc
push
nop
add
dec
out
lahf
mov
imulb
sub
fdivrs
jp
aam
jmp
inc
pop
pop
mov
or
jp
sbb
pop
or
push
mov
ret
mov
jb
push
jne
and
dec
dec
lea
cmp
mov
jp
insb
xlat
or
into
adc
bound
test
or
imulb
inc
cltd
rorb
xlat
cmp
adc
xlat
adc
mov
int3
sbb
xchg
loopne
rol
popf
shl
jnp
ljmp
push
xchg
or
mov
clc
rclb
fists
mov
adc
incb
pop
mov
aad
xorb
fstpt
cmpb
lods
nop
jb
xor
jae
scas
pop
jmp
pop
inc
inc
cmp
gs
iret
pushf
xor
cmpsl
loop
fists
push
or
xchg
fistpll
xor
cld
imulb
sbb
jne
mov
rclb
ljmp
or
inc
data16
and
sub
call
mov
nop
iret
in
mov
pushf
shr
cmpsl
in
add
cmp
addb
shl
movsl
jle
fcomps
iret
test
aad
cwtl
in
dec
xchg
test
int3
psrad
pop
mov
ret
js
int3
push
subb
clc
orl
add
sbb
fcomi
adc
xchg
adc
out
adc
nop
pop
call
or
or
addr16
out
push
int3
adc
lods
mov
push
xchg
push
inc
mov
and
repnz
packuswb
mov
cmpsl
cmp
rclb
fnsave
data16
shrd
mov
jne
or
xchg
outsl
loope
or
mov
sub
rolb
xchg
push
testb
pop
call
cld
cltd
shlb
pop
mov
stos
add
or
xor
push
inc
and
push
movb
and
gs
inc
cmp
aas
flds
xchg
leave
inc
mov
fstpl
loope
and
mov
es
mov
stos
and
loope
xchg
dec
loopne
fdivrs
sbb
das
js
or
lods
cs
insb
add
mull
pop
fbstp
cmp
lods
jae
lret
xchg
add
gs
cmp
jge
push
les
out
aas
popa
call
stos
pop
test
and
sub
mov
xchg
es
je
loope
xchg
daa
xor
out
lcall
pop
dec
or
mov
and
popf
std
ret
push
xchg
pushf
dec
or
std
dec
aaa
movsb
sbb
in
test
cmp
sub
add
punpckldq
es
xor
std
and
in
repz
test
push
xchg
jl
or
testl
jno
rcr
mov
cmp
pop
cmpsl
sbb
loopne
pop
mov
cmp
dec
mov
clc
push
jmp
dec
aaa
add
loope
push
inc
call
lret
lds
mov
das
pop
insl
mov
test
mov
stc
push
mov
ds
lret
jae
adc
shll
fld1
jne
fld
aaa
fwait
dec
adc
lret
jnp
fsubs
jl
shll
arpl
dec
mov
dec
aam
mov
iret
loop
sbb
rcr
dec
cmp
stos
pop
mov
popa
mov
xor
adc
ret
jmp
mov
mov
xchg
sub
mov
into
cli
mov
inc
mov
sbbb
movl
pusha
ja
adc
inc
scas
aaa
jns
and
dec
adc
adc
cwtl
and
pop
loope,pt
push
pop
mov
out
push
sbb
and
xchg
decb
aam
or
je
mov
dec
pop
pusha
clc
jmp
pop
daa
fucom
mov
ret
sub
xor
lods
mov
stos
and
or
xchg
add
cmp
cmp
popfw
pop
test
jbe
in
inc
in
ljmp
je
test
push
ret
mov
dec
xchg
aas
mov
adc
inc
push
fisttpl
fs
mov
cmp
push
in
pop
or
inc
loope
jbe
fdivl
cwtl
and
pushf
lock
arpl
push
jns
cmpsl
in
cmp
mov
addb
pop
jne
push
mov
sub
pusha
mov
jne
dec
cmc
push
repz
jl
push
int3
mov
int
lea
cmp
and
or
test
mov
mov
mov
ds
inc
addl
inc
into
xor
jns
mov
ret
test
gs
xchg
inc
in
call
xor
test
cltd
fbstp
nop
jmp
int
mov
jo
movl
pop
in
dec
popa
cmc
insl
insb
cmpsl
jne
hlt
add
and
mov
jae
dec
pop
sbb
mov
mov
cs
je
or
btr
or
pusha
mov
out
push
out
stos
cmp
add
ret
mov
sub
or
jb
lods
loopne
in
dec
sub
movsl
mov
ja
mov
mov
pushf
jmp
jp
or
xchg
loope
leave
rcrl
sahf
push
dec
enter
les
adc
xchg
push
popf
cmp
pop
inc
jne
push
dec
clc
push
jg
shrl
out
lret
mov
sbb
cld
rcll
jnp
into
dec
xchg
xchg
push
mov
ss
andb
dec
adc
or
add
lock
mov
mov
mov
pusha
ror
test
dec
rorl
insl
in
mov
sub
in
lea
insl
lahf
xlat
mov
cmc
iret
insb
jg
movb
dec
and
inc
and
mov
xor
cwtl
loop
outsb
fcmovbe
cmp
push
and
mov
mov
scas
sbb
jnp
and
mov
sub
jae
je
push
push
nop
popa
pop
clc
and
pop
repz
sbbb
inc
jl
inc
xchg
fidivl
cmp
out
dec
fs
pop
cmp
cld
gs
pop
xchg
mov
cld
pop
push
nop
cmp
sub
fs
inc
sti
ds
mov
push
andps
push
push
arpl
jle
xorb
cltd
aam
mov
or
push
mov
or
jp
test
xchg
dec
and
mov
push
movb
addr16
dec
sub
lea
dec
xor
xor
bsf
push
mov
push
sub
sarb
ljmp
mov
lock
sub
add
out
mov
ss
rcrl
mov
sub
inc
rorb
dec
and
test
mov
ss
xor
sbb
movsl
xor
nop
into
inc
lods
roll
inc
xchg
pop
dec
imul
pushf
cmp
jmp
cwtl
sarb
in
popa
mov
sub
arpl
cli
repnz
dec
rolb
in
out
pop
shll
test
xor
das
pop
dec
sub
mov
lcall
pop
push
push
lds
lret
es
das
ja
scas
or
cmp
dec
xor
add
push
dec
jg
leave
xchg
cmp
lods
stos
ljmp
xchg
gs
adc
je
rep
push
out
dec
popf
pusha
adc
pop
sub
sarb
clc
or
loop
add
cli
dec
subb
cs
shl
fdivs
push
cmc
pop
arpl
in
xchg
mov
or
or
and
in
iret
iret
xor
sub
dec
inc
mov
inc
lret
cmpsb
dec
push
testb
push
sub
sti
ss
test
cmpsl
mov
inc
and
es
popf
fcmovu
sarl
test
daa
push
leave
cmc
sbb
cld
mov
inc
rcrl
mov
dec
inc
pop
pop
addr16
pop
hlt
mov
shll
pop
push
dec
fisubl
stos
push
sbb
or
gs
lcall
cmp
push
or
js
or
pop
sub
mov
sub
inc
dec
mov
push
loope
ret
xchg
pop
cmp
je
pop
mov
and
mov
xchg
pop
mov
icebp
pop
sub
and
jne
out
mov
push
cmpsb
ret
aad
out
jne
mov
sub
lock
out
inc
dec
push
mov
clc
push
push
shrb
daa
cltd
jns
rol
xorb
or
xor
in
jbe
fiaddl
sub
cwtl
pop
inc
cmovnp
fwait
mov
mov
jne
sbb
jo
mov
push
sarl
cmp
sti
or
cmp
mov
or
sbb
push
jl
push
roll
add
jae
lahf
jecxz
in
mov
inc
and
cmp
jo
and
into
lret
and
in
xchg
mov
pop
scas
inc
or
adc
sub
cmp
mov
jo
out
jo
push
pcmpgtb
push
out
cwtl
enter
lahf
pop
fildll
add
or
inc
andb
subl
loop
lahf
xor
fwait
cs
mov
imul
js
ret
xchg
inc
iret
lods
cmp
xor
push
mov
push
cmc
inc
sbbl
fbld
imulb
fistpll
fistpl
lret
mov
adc
aad
shll
ret
ds
fnstcw
int3
mov
xor
icebp
je
xor
sub
inc
adc
mov
push
lret
imul
movsl
mov
fdivp
cmc
mov
jmp
mov
sarl
inc
shlb
test
aaa
pop
test
sbb
sahf
xchg
aas
xchg
mov
xchg
add
stc
dec
dec
inc
inc
call
sub
loopne
pop
fsubp
imul
pop
cmp
icebp
aaa
jp
adc
out
jecxz
mov
enter
roll
xchg
cmp
inc
or
dec
adc
inc
inc
inc
xchg
cmpsl
and
cmpsl
sbbb
cmpsl
mov
and
pop
je
cmp
subb
in
xchg
cmp
dec
add
dec
pushf
ret
leave
leave
mov
sbbl
push
mov
adc
jo
jg
fs
pop
call
int
test
dec
stc
push
rolb
lahf
popa
jge
cli
cmp
and
js
mov
shr
bswap
pop
movsb
mov
jmp
mov
and
mulb
sbb
outsb
sbbb
xor
mov
movsl
ljmp
add
add
shrb
adc
aas
mov
movsl
fisubrs
and
imul
inc
pushf
or
mov
pop
mov
xor
addr16
sub
loop
or
jne
pop
ret
cld
mov
xchg
ss
aam
int3
inc
mov
inc
push
callw
and
mov
push
jb,pt
in
jmp
dec
enter
nop
sbb
mov
daa
fcmovb
mov
fucomi
add
jns
pop
cld
aam
and
mov
inc
sub
mov
jg
mov
dec
lcall
sub
popf
add
jmp
out
shll
push
mov
or
jecxz
movsb
and
fidivrl
popl
xchg
mov
ror
sub
in
orl
cld
or
outsl
sub
cmp
push
aad
test
xchg
test
les
mov
mov
subl
dec
dec
add
fidivl
sbb
xor
pop
jns
nop
aaa
jne
mov
icebp
shrl
mov
jne
xchg
jae
add
call
cmp
shr
mov
xor
mov
bound
sbb
in
push
sub
xlat
mov
sbbb
inc
or
cmp
or
push
jg
add
push
adcb
call
jge
mov
jae
shlb
xchg
pop
mov
mov
js
mov
mov
in
lret
push
mov
xchg
lret
js
push
push
bound
and
mov
clc
jmp
mov
clc
pop
xor
lcall
mov
sub
xor
and
aam
sbb
xchg
add
sbb
pop
sub
or
fwait
cltd
stc
mov
jae
and
in
test
sbb
test
lds
mov
js
jne
ss
push
nop
adc
mov
out
insl
dec
cld
das
xchg
mov
sub
push
inc
push
ds
mov
cli
xchg
jae
lock
mov
mov
jo
pop
data16
cltd
add
and
mov
fstl
sub
mov
xchg
jo
pusha
mov
xor
pop
push
pop
jle
xor
xor
in
sbb
testb
lods
fnstsw
add
mov
inc
inc
xchg
xlat
ljmp
sub
sti
xchg
loopne
test
xchg
fldenv
mov
ret
add
ljmp
ss
arpl
insl
lods
test
mov
subb
outsb
inc
or
sub
test
popa
push
mov
ljmp
test
mov
inc
adc
fnstenv
xor
adc
das
mov
xchg
fxsave
and
in
xchg
and
xor
jo
loopne
jmp
inc
lock
xchg
clc
cmp
cmp
fwait
xor
mov
xor
mov
js
mov
inc
add
fmull
mov
rcrb
pop
mov
imul
ret
iret
adc
cltd
rol
push
repnz
icebp
mov
cmp
adc
ret
decl
je
inc
test
xchg
push
and
aad
xor
je
dec
add
mov
das
push
mov
ret
xor
lret
movsb
add
mov
pusha
enter
jnp
orl
shr
jo
stos
or
outsb
cmc
ja
sbb
push
mov
jg
movsb
aam
mov
pop
jne
sahf
sub
inc
mov
cmp
hlt
mov
pushf
cltd
push
popa
jns
mov
outsl
adc
xchg
sub
mov
jmp
movsb
mov
inc
int
scas
nop
es
into
inc
pop
fs
mov
fidivrl
stc
or
das
shlb
and
xor
jns
adc
mov
in
pop
iret
push
in
pop
stos
push
lret
int3
sbb
mov
shll
into
mov
inc
les
ret
lahf
cwtd
fstl
les
stos
xchg
enter
dec
or
call
adc
out
add
add
lret
adc
je
push
shl
shlb
or
adc
pop
adc
fsts
pop
testb
je
cltd
pop
pushf
mov
mov
jl
or
enter
mov
jbe
addr16
scas
out
push
xchg
push
mov
inc
jno
gs
mov
push
and
imul
jmp
repnz
outsl
test
je
cmp
leave
test
mov
cmp
test
gs
add
call
movsb
mov
testl
dec
scas
sub
dec
leave
je
mov
sbb
xchg
mov
lret
or
sub
cwtl
push
sbb
xchg
test
inc
dec
push
cs
push
pop
xlat
push
mov
outsl
push
add
mov
js
and
je
xorl
outsl
fstpl
cld
add
dec
jp
add
pop
add
mov
out
imul
lcall
das
arpl
mov
cmpsl
pop
sbb
xor
push
in
add
push
repnz
sub
out
sub
outsl
iret
add
stc
pop
or
outsb
mov
stos
imul
imulb
xchg
stos
jbe
jecxz
shll
in
push
or
jne
and
xor
dec
dec
in
dec
cwtl
iret
mov
jmp
adc
sub
test
add
inc
pmuludq
lods
mov
testb
mov
mov
dec
cmp
adc
nop
shlb
sub
xchg
shlb
mov
out
lcall
or
dec
lods
pop
mov
fwait
jmp
sub
cmp
pop
jo
ljmp
rcrl
sub
xor
je
inc
sub
and
mov
mov
ds
movsl
std
xor
pop
jnp
cwtl
mov
fcmovbe
dec
mov
fildl
add
cmp
out
mov
add
gs
pop
jg
ret
aad
lods
cmp
out
mov
pop
mov
mov
add
adcl
sub
or
aas
das
inc
insl
mov
xchg
or
sbb
xor
sbb
js
mov
leave
push
sbb
sbb
lcall
cs
inc
jbe
fisubrl
int
in
jle
inc
outsl
ficoms
cmp
mov
pushl
push
add
adc
in
push
mov
mov
push
adc
out
rcl
xor
leave
dec
xor
pop
jae
or
push
arpl
mov
lods
fisubs
scas
inc
aas
sub
or
xor
dec
fnstenv
xchg
jae
sbb
psrld
sarl
dec
nop
shl
inc
inc
mov
sub
mov
out
shrl
cmpsl
pop
sbb
jle
int
call
aas
mov
jae
jb
fcmovnbe
dec
add
aad
stc
nop
int
dec
out
movsl
mov
jp
incl
fnstsw
jne
stc
out
popf
sub
push
mov
cmp
out
xchg
mov
in
push
icebp
push
pop
or
rcll
jo
cmpl
out
dec
jle
inc
sub
push
int3
lcall
add
sti
sahf
push
add
pushl
pop
dec
adc
adc
mov
cmp
adc
push
add
mov
cmp
pop
mov
inc
mov
inc
test
cmpsb
sbb
xchg
inc
xchg
push
sbb
push
aad
js
loop
cmpsl
xorl
mov
mov
imul
ret
out
loope
stos
mov
orl
cmpsb
sub
iret
xor
sbb
add
ret
or
jae
ja
or
mov
dec
arpl
jle
fimuls
mov
lcall
in
xchg
cmp
adc
or
xchg
sbb
and
dec
push
sub
xchg
push
add
jl
adc
es
mov
or
push
imul
loop
cmp
xchg
jo
setp
sti
jo
push
enter
xchg
mov
ret
pop
fldt
or
sbb
cmp
jo
shlb
jne
lret
xchg
push
sub
aaa
test
adc
mov
test
insl
xchg
mov
push
cltd
cmp
lret
lods
inc
iret
outsl
push
sbb
into
sbb
mov
jae
sub
lods
push
movsl
xchg
repz
out
stos
xchg
iret
and
jecxz
adc
sub
mov
mov
dec
mov
adcb
dec
subb
or
and
mov
dec
call
jnp
fidivl
mov
sub
push
out
mov
xchg
mov
stos
sbbb
cmp
and
xchg
pop
pop
sti
mov
aad
xchg
adc
inc
ret
and
test
aam
mov
movsl
jne
xchg
repz
je
pop
mov
stos
xchg
adc
fistl
dec
fcoms
mov
scas
mov
into
and
mov
mov
xlat
lods
sub
pop
arpl
ret
and
adc
inc
mov
pop
add
and
repnz
xchg
ss
fs
dec
or
nop
sti
test
inc
bound
mov
pushf
sbb
add
jg
pop
mov
sbb
pop
shl
mov
ror
nop
sbb
mov
jns
fcomi
sahf
adc
test
pop
clc
bound
pop
dec
imul
adc
or
lods
std
pop
lock
mov
push
cmp
insl
mov
fistl
push
pop
xor
xor
jecxz
xor
pop
jnp
cmpsl
or
cmp
dec
dec
cmc
xlat
outsl
mov
test
mov
pop
jnp
sub
sbb
mov
jge
mov
das
push
mov
arpl
arpl
sub
mov
outsl
push
mov
cmp
mov
add
movsl
mov
or
mov
xor
rep
inc
hlt
loop
lahf
jne
sbb
jp
stc
add
mov
or
sti
inc
ret
cs
loop
leave
dec
les
stos
dec
xchg
sbb
push
das
imul
filds
fiaddl
aad
leave
mov
adc
push
popf
cmp
push
fdivs
enter
jo
sahf
inc
push
cwtl
inc
loopne
pop
adc
mov
jae
and
out
fnstenv
data16
rcl
shll
daa
mov
mov
shrl
adc
add
add
or
outsl
xchg
je
jb
shlb
or
movsl
jo
fisttpl
dec
mov
out
sahf
lods
xor
adc
rcl
aad
mov
sbb
push
or
imul
in
leave
adc
stos
scas
xchg
div
rorl
cltd
ret
outsl
xchg
adc
sbb
and
sub
push
push
fidivrl
dec
imul
sbb
push
jae
fisttpl
das
push
ret
adc
dec
inc
int3
mov
xchg
mov
xlat
push
mov
xor
add
push
xchg
xor
fadd
cmpsb
jmp
cwtl
sbb
xchg
and
adcl
lahf
mov
inc
insl
sbb
mov
movb
aaa
or
jnp
jl
mov
shr
jo
ljmp
mov
repz
iret
xchg
and
call
jmp
adc
and
jnp
jp
test
jle
mov
cmp
jge
test
mov
fsubrp
loope
sahf
push
jae
clc
xchg
sub
in
repnz
jmp
popf
add
sbb
mov
jg
mov
sahf
js
sub
aas
shl
les
es
xor
data16
or
rcrl
sti
cli
lahf
mov
or
shl
pop
mov
push
pop
subb
cs
imul
push
dec
aam
sbb
pop
cld
dec
and
pop
lods
mov
pop
sbb
leave
test
cmp
xor
or
jg
daa
push
dec
lret
pop
cmpb
inc
ficompl
addl
xchg
xor
sbb
xor
test
mov
rcrb
shr
and
ret
ret
adc
xor
in
mov
std
aad
dec
adc
in
outsl
scas
xchg
mov
and
add
hlt
fimull
out
inc
jecxz
imull
jno
jo
xor
pushf
aaa
add
adc
fadds
adc
jmp
lds
xchg
fs
es
iret
lods
loopne
and
into
sahf
add
xor
xchg
sarl
xchg
jl
add
xchg
jbe
dec
lret
inc
push
pop
in
lahf
dec
cmp
cltd
mov
pop
pop
aad
adc
in
gs
xlat
jne
adc
cmp
lcall
int
jnp
push
dec
insl
jmp
xchg
mov
mov
notb
fcmovnb
mov
jge
add
fneni(8087
dec
popf
cmpsb
jo
mov
and
hlt
hlt
or
mov
inc
imul
sahf
cmpsb
clc
test
pop
and
jnp
sbb
addb
jns
cld
aad
mov
enter
nop
jo
popa
and
das
arpl
aad
movd
push
cltd
jmp
push
std
rcrl
push
add
sbb
xor
adc
test
pop
cld
push
or
scas
xor
jns
add
lds
mov
sbb
imul
hlt
ljmp
cmp
jae
cmpsb
sub
pop
pop
sbb
clc
xchg
jnp
xchg
jecxz
insb
add
mov
shll
fidivrs
imull
sub
shll
leave
shll
int
ljmp
inc
sub
icebp
cmp
xor
arpl
inc
ficoms
sub
ds
push
nop
addl
test
xor
dec
fiadds
std
iret
cltd
clc
ss
cwtl
xchg
xchg
rorl
sub
in
or
ror
mov
mov
cmp
test
push
jbe
xchg
pop
xchg
into
js
pop
xor
data16
sbb
test
cmp
dec
xor
mov
xchg
mov
in
xlat
mov
mov
sub
test
lods
mov
rol
adc
clc
in
pop
mov
mov
daa
jns
insb
int
inc
adc
add
adc
xchg
push
bound
outsb
aam
sbb
lea
lods
and
pushf
add
sarl
push
test
and
in
xor
data16
sbbb
dec
insb
in
push
sbb
movb
sub
or
push
pop
lds
mov
cmpsb
adc
xlat
add
inc
pop
sahf
mov
ret
push
and
jns
fmull
in
pop
xlat
and
mov
mov
xchg
add
push
mov
leave
sbb
mov
sbb
nop
cmp
add
ret
pushf
pop
bound
rorl
jno
sbb
and
jle
jmp
jle
imul
xor
push
lock
jnp
lds
loopne
mov
add
fbld
fcoms
inc
push
mov
mov
xchg
sub
stos
lret
push
xor
ret
pop
cwtl
mov
jns
popf
or
fiadds
mov
les
adc
and
xor
sbb
pop
adc
mov
clc
decb
mov
stc
pop
daa
sbb
jmp
dec
jmp
jp
out
cmp
jmp
cmp
call
outsb
mov
add
movsb
inc
xlat
or
pop
xor
movb
cltd
xor
in
mov
xchg
or
sub
push
jnp
addb
or
dec
pop
clc
pop
xchg
pop
push
sbbl
out
aam
and
inc
fcoms
xchg
repz
addr16
pop
xlat
push
xlat
push
xor
sbb
mov
cwtl
popa
mov
lods
js
mov
add
fwait
inc
xor
cmpsl
xor
into
ret
mov
lods
cmp
cmp
push
or
sub
daa
xchg
jns
jae
xor
cs
popf
xchg
xor
in
and
fsubrs
rcr
lock
arpl
sarb
or
mov
aad
scas
jecxz
popf
push
or
fbld
dec
gs
push
andb
ds
adc
or
cmpsl
negb
rorb
std
inc
inc
or
enter
andl
fmuls
cmc
inc
mov
test
lahf
and
sbb
mov
stos
jg
jbe
xchg
rclb
inc
or
xchg
daa
adc
mov
lods
pop
push
aas
jg,pt
pop
std
jnp
mov
cmpsb
fdivs
dec
in
pop
mov
int
xchg
fs
mov
adc
popa
cmpsl
mov
movsb
popl
push
testb
ret
sarb
xchg
rorl
test
jp
push
fstps
mov
xchg
ret
das
jle
add
mov
out
jecxz
sub
sahf
push
test
push
mov
push
out
out
fstpt
aam
into
pushf
out
out
ja
dec
repnz
jnp
ficoms
fisubrl
movsb
idivb
jl
scas
adc
std
jp
fdiv
imul
popf
and
ds
inc
xchg
xchg
mov
mov
pop
xor
cmp
pop
sbb
mov
es
es
xor
fidivrs
xor
mov
add
pop
out
das
orb
or
mov
daa
mov
dec
cmp
cli
xchg
sub
dec
cli
out
mov
ds
jp
adc
mov
xor
xchg
arpl
mov
jnp
adc
leave
out
and
adc
sbb
jns
test
pop
ret
cld
scas
out
push
enter
cmp
pop
jl
pushf
mul
in
sub
out
icebp
outsl
std
or
in
in
jnp
xor
fnsave
or
fidivrs
sbb
inc
aad
adc
jne
ror
bnd
push
mov
nop
adcb
mov
or
test
add
inc
aas
cmpsb
push
inc
dec
xchg
push
aas
cmc
push
arpl
mov
push
mov
int3
xchg
lret
xchg
shl
xchg
out
xchg
and
stc
xor
mov
fildl
repz
call
call
cltd
popf
add
lret
cmp
jge
daa
or
int
loope
and
xchg
xor
add
mov
dec
adc
loop
lret
aam
mov
mull
xlat
pop
lcall
rclb
mov
rcrl
mov
lcall
ret
jmp
mov
sub
fimull
addb
push
jmp
jg
ret
stc
bound
add
rorb
gs
ljmp
scas
jae
adc
adc
hlt
shr
insb
jg
fistps
xchg
mov
jl
or
jbe
push
add
pop
xlat
and
mov
fbld
mov
push
sub
sbb
dec
cwtl
or
adc
or
fisubrs
in
sarl
xor
adc
lods
into
in
or
ret
mov
sub
mov
mov
stc
imul
sbb
jno
dec
pop
ss
addr16
adc
or
iret
call
icebp
pusha
fisttps
and
cmp
inc
movsb
pop
fwait
sub
dec
sub
mov
mov
inc
push
or
out
or
jno
loop
mov
icebp
scas
xchg
xor
idiv
push
cmp
mov
xorb
sahf
cmp
sbb
mov
fidivs
xchg
xor
mov
test
ds
fadd
push
cmc
hlt
mov
adc
outsb
imul
sub
roll
push
dec
js
fisubs
aam
sbb
imull
jne
loopne
int
sti
test
cmc
mov
sbb
xor
imul
pop
jl
mov
pop
mov
dec
add
fimull
hlt
and
mov
dec
gs
pop
push
mov
push
imul
hlt
daa
xchg
push
push
es
inc
insb
testl
or
xchg
imul
cmp
xchg
shll
fidivl
sub
add
out
adc
mov
xor
das
mov
adc
adc
mov
mov
sahf
das
mov
push
sahf
mov
leave
xor
or
nop
xor
cmpsb
dec
and
and
ja
jnp
aam
repz
outsb
jmp
imul
pop
lss
jle
into
mov
mov
ret
addr16
pop
sbb
mov
je
sbb
sub
and
lahf
js
aas
inc
out
leave
lea
inc
push
out
push
daa
hlt
popf
add
sbb
insb
rcrl
ret
dec
push
mov
xchg
or
div
rorb
outsb
mov
out
insb
cmpsb
icebp
mov
call
sub
stos
out
mov
adc
in
xchg
pop
inc
test
pop
and
cltd
mov
dec
cmpsb
cld
scas
sbb
xchg
pop
sub
popf
ljmp
movsl
ss
repz
cmp
lcall
es
pushf
sarl
mov
or
aaa
adc
add
mov
dec
lcall
cmp
lock
lret
lret
mov
jnp
in
lock
sub
adc
jg
test
pop
outsl
lods
aad
push
push
test
mov
add
adc
push
and
lret
icebp
loop
rcrb
pop
mov
in
mov
je
pop
lahf
add
and
cmpsb
in
push
mov
mov
stos
imul
dec
int
sbb
jg
add
jns
fisttpll
enter
mov
lret
pop
std
xor
mov
arpl
mov
das
cmp
js
jae
cmc
repz
and
ret
imul
mov
stos
xor
fisubrs
icebp
xor
mov
xor
push
sti
shll
adc
xor
xlat
cwtl
arpl
pop
cmp
jmp
sub
fimull
xchg
in
or
pop
leave
and
adc
sub
stc
sbb
xlat
mov
js
mov
cmp
jmp
or
sbb
imul
pop
enter
pop
push
test
fsubl
mov
mov
mov
and
and
sub
in
add
pop
jecxz
add
mov
inc
push
jl
test
add
lds
mov
call
stos
iret
push
jle
aad
add
pop
scas
xchg
call
cmp
push
fisubrl
imul
push
dec
popl
add
pop
cwtl
sahf
lahf
movsb
mov
sub
mov
sbb
xchg
ds
mov
push
mov
jne
jl
testb
mov
sub
sub
mov
lea
pop
loopne
jmp
cmc
loopne
dec
and
out
push
int
xchg
loopne
xchg
mov
dec
xchg
add
xlat
js
sbb
in
leave
xlat
mov
pop
cmpsb
pusha
cltd
outsb
cltd
ja
cs
push
xchg
sbb
setb
mov
dec
call
repnz
mov
pop
jg
lods
mov
push
fstpt
hlt
stc
lcall
fisubl
push
ret
rclb
jl
push
outsl
xchg
mov
scas
xor
mov
mov
push
inc
and
js
into
int3
pop
inc
pusha
clc
nop
gs
sub
mov
and
xchg
out
xchg
cmp
inc
and
cmp
leave
dec
testl
mov
repnz
fldl
inc
mov
cmpsl
ss
test
nop
cmpsl
ja
mov
xchg
mov
call
fptan
sub
cmp
mov
mov
push
mov
test
mov
fidivrl
loop
mov
mov
in
push
arpl
lds
popl
bnd
out
dec
mov
shrb
mov
mov
mov
xchg
aam
ja
cmp
pop
or
fwait
mov
push
fcom
insb
xor
push
fidivrl
mov
ss
inc
sub
sbb
sahf
dec
dec
je
ja
out
jb
xlat
sub
clc
jns
jle
dec
inc
testb
xor
dec
imul
dec
bound
frstor
pop
add
add
into
pop
out
add
xor
imul
and
test
aas
cmp
or
pusha
insb
imul
dec
mov
enter
shrb
sahf
mov
dec
push
loopne
test
push
lea
sbb
insb
cmpsl
loop
aad
jp
push
repnz
cmp
sti
cmpsb
orps
cmpsl
ret
jp
mov
pushf
and
insl
js
pop
lods
lcall
les
cwtl
sub
push
push
xchg
add
pop
sub
addr16
pop
out
gs
cmp
call
fstl
outsb
pop
lods
adc
ret
add
push
xor
pop
andl
mov
test
and
sub
cmpb
leave
mov
mov
and
movsb
adc
fs
mov
fldcw
imull
sahf
out
or
sub
int
outsl
and
lea
adc
mov
std
mov
data16
add
mov
adc
add
popa
scas
cwtl
mov
out
in
adc
xchg
loope
xchg
mov
pop
xchg
addl
sbb
mov
sbb
mov
dec
sbb
shl
push
add
aad
push
pop
mov
dec
sub
fidivs
add
std
sbb
aaa
cmpsb
ljmp
cmpsl
pushf
out
sbb
imul
in
jle
pop
dec
ljmp
mov
pop
add
jnp
ja
sbb
xchg
jnp
scas
adc
shrl
or
popa
mov
sbb
stos
xor
call
pop
ds
pop
xchg
adc
push
pop
jecxz
ffree
out
fisubl
roll
mov
mov
adc
xor
or
mov
add
push
push
pop
addb
add
lahf
fdivs
push
scas
fsubl
or
pop
out
fimuls
jp
mov
fidivs
lods
push
divb
mov
and
mov
dec
xlat
fcom
adc
inc
sbb
inc
mov
add
scas
fiaddl
dec
cmpsb
jno
xor
push
sbb
movsl
test
clc
cmp
and
out
aas
mov
je
mov
push
loop
sarl
out
and
dec
cmp
push
jge
add
xor
jmp
sbb
xor
mov
fnstcw
shrb
push
imul
outsb
xchg
inc
xchg
mov
das
fstps
int
pop
mov
cltd
mov
fidivrs
stc
mov
and
aaa
test
add
js
mov
ret
push
out
clc
lcall
aam
mov
jp
pop
cltd
mov
mov
dec
jae
add
inc
mov
or
loope
pusha
xlat
sbb
xchg
sbb
shlb
mov
out
jnp
daa
push
add
popa
insb
or
orl
cmp
sahf
inc
imul
pop
ret
cmc
mov
dec
mov
test
push
stc
hlt
mov
xchg
pop
push
cmpsb
cmp
repnz
cmp
jae
cs
jbe
dec
sub
jg
daa
inc
int3
cmp
jle
mov
fnstsw
in
adc
xchg
cs
scas
test
sarl
push
mov
shlb
cli
sbb
mov
mov
jmp
call
in
inc
outsl
lahf
lret
out
jp
ss
mov
xor
ss
lret
xchg
mov
negb
add
lods
sti
mov
aam
mov
xor
jnp
ficoml
test
or
or
add
inc
lahf
insl
adc
push
mov
loop
das
cld
sti
jno
mov
ss
js
movsl
sbbb
mov
dec
mov
and
cwtl
addr16
or
xchg
push
lret
jae
add
cli
xchg
sbb
push
out
icebp
sbb
rcll
xchg
or
jge
mov
add
popa
scas
push
insb
out
mov
mov
pop
jb
and
mov
scas
mov
clc
inc
cmp
inc
iret
mov
mov
mov
sbb
fimull
daa
add
sub
cmpsb
adc
sahf
or
pop
sbb
int
loopne
mov
mov
push
cmp
xlat
dec
xorb
cld
and
dec
add
fists
fs
adc
push
push
inc
xor
or
lahf
outsl
inc
xchg
outsl
out
pop
mov
in
sbb
hlt
xchg
cmp
dec
idivl
or
into
mov
fildl
icebp
fidivl
dec
shrb
or
jmp
cmp
adc
test
jge
addl
xchg
pop
call
mov
xor
dec
mov
sub
scas
or
xor
mov
mov
mov
loope
and
jge
lret
adc
push
icebp
push
mov
push
mov
sbb
popl
inc
and
ds
sub
xchg
test
xorl
ja
loopne
pop
sbb
jecxz
inc
or
jmp
test
push
dec
push
dec
mov
xchg
bound
in
pop
mov
test
stos
imul
dec
adc
push
cwtl
cmpsb
adc
inc
imul
in
shrb
push
sti
into
push
mov
jno
cmpsb
pop
xchg
fcomps
jmp
pop
cld
int3
mov
xchg
pop
jle
cmpsb
inc
ds
hlt
pushf
xchg
addr16
mov
mov
xor
push
cmpsl
or
je
lods
out
mov
and
pop
neg
mov
stos
inc
fldenv
adcl
into
dec
stos
xor
idivl
call
fwait
loopne
mov
jmp
cmc
jb
icebp
ja
xchg
pop
les
push
aaa
loopne
fisttps
and
inc
mov
xchg
xchg
pop
inc
int3
data16
jecxz
aam
in
aaa
sbb
test
cwtl
add
or
xor
pushf
xchg
xchg
xrelease
lret
andb
lret
or
mov
dec
pushf
push
test
and
sahf
push
pop
mov
addr16
sbb
add
jg
orl
adc
mov
add
or
add
mov
std
jmp
xchg
and
mov
mov
in
lods
arpl
mov
xchg
out
cmp
repz
push
mov
lods
inc
fwait
mov
jle
call
dec
arpl
sahf
lahf
xor
out
in
fisttpl
pop
xor
lea
into
dec
cmp
ret
add
pop
adc
addr16
clc
sub
loop
sbb
in
lods
add
or
stos
fwait
adc
mov
jmp
loop
adc
xchg
mov
sub
push
arpl
ljmp
adc
mov
xor
test
dec
insb
mov
mov
icebp
sub
dec
outsb
gs
fistpll
sti
ret
cmp
jne
mov
adc
push
rorb
sahf
aam
add
xor
mov
jmp
shlb
in
mov
out
pushf
cmp
xlat
jp
mov
mov
mov
jl
lods
sti
test
push
cld
lea
dec
shl
les
rolb
sbb
test
int3
sbb
xor
dec
xor
jmp
fistpl
mov
add
jnp
push
adc
push
cs
test
mov
jl
cmpsb
push
sub
mov
xor
cmp
jo
fildl
push
xor
dec
aas
inc
jo
sbb
add
scas
mov
xor
or
push
cmp
repz
sti
andl
iret
in
mov
xlat
jmp
mov
push
add
pop
and
pushf
mov
cmc
aam
mov
mov
int3
cmp
jl
lahf
lcall
jle
imul
imul
add
xor
ds
orl
dec
jno
adc
popf
arpl
adc
mov
mov
stc
xchg
xchg
inc
lds
mov
lahf
push
ficompl
jne
test
mov
sbb
jmp
enter
ljmp
cmp
pop
pop
jp
pop
bound
adc
mov
mov
push
mov
ljmp
lcall
mov
ds
jge
ds
dec
je
push
sti
and
xchg
into
icebp
xchg
pop
mov
arpl
jp
jbe
jg
dec
sti
imul
rcll
add
xor
negl
jge
xor
aas
pop
stos
adc
loopne
lcall
mov
stos
filds
mov
and
pop
add
cmp
lret
cmp
test
mov
repnz
add
or
sarl
add
aaa
sub
daa
dec
sub
jge
or
cltd
test
loope
and
out
and
add
cmp
arpl
jmp
add
xchg
cld
sbbl
and
je
push
xor
rcrb
mov
mov
es
repnz
loop
xchg
lcall
push
repnz
roll
stc
iret
push
mov
movaps
xchg
popf
adc
roll
adc
xchg
cli
add
in
ret
rorl
sbb
pop
roll
or
cmpsl
scas
xchg
repz
pop
pusha
lcall
ljmp
xchg
or
jo
adc
ljmp
fninit
push
inc
ret
add
mov
mov
movsb
mov
outsb
lods
imull
adc
pop
mov
aam
iret
xchg
adc
bound
jl
outsl
push
aaa
push
call
pop
cmp
adc
ret
pop
lods
loop
add
or
and
outsl
lahf
sub
adc
imul
icebp
mov
out
enter
xchg
lea
xor
mov
fdiv
and
test
mov
imul
enter
xor
mov
pusha
inc
cmp
push
rorb
in
scas
aaa
pusha
fwait
xor
inc
dec
push
ja
mov
dec
in
ret
push
or
lods
and
jecxz
jmp
dec
cmp
pop
popa
jp
sub
pop
adc
push
pop
pop
rcrl
enter
cwtl
or
mov
cmp
push
fdiv
ja
sub
mov
fsub
pop
sbb
test
add
int
xchg
jg
adc
test
cltd
push
sbb
data16
aas
daa
int
mov
fisttpll
dec
ret
call
adc
pop
jne
ss
int
dec
sub
xor
jle
dec
adc
inc
dec
sbb
pushf
sbb
fcompl
pop
jmp
sbb
xor
shll
out
popf
mov
sbb
mov
add
push
mov
movsb
fiaddl
add
mov
pop
in
sbb
ret
mov
loopne
loop
pop
scas
out
sbb
mov
out
rolb
insb
xchg
sbb
cmpsb
inc
fwait
aad
repz
in
sub
mov
fisttpll
jb
adc
sbb
in
es
cmp
ds
xor
rolb
stos
xor
rcrl
dec
dec
xchg
xor
imul
insb
jb
mov
jg
xcrypt-ctr
cmpsl
fimuls
jo
jno
push
mov
shrb
or
leave
xchg
clc
loop
jge
adc
dec
cmp
inc
adc
dec
cmpsl
inc
aas
mov
jl
mov
sbb
js
pop
inc
sbb
cmp
adc
push
jmp
mov
mov
xchg
dec
push
cmp
lret
mov
inc
jp
aaa
inc
fxch
mov
sbb
sbb
mov
and
out
pop
mov
inc
adc
xchg
imul
shrb
iret
fdivs
pop
adc
lret
push
call
test
aam
pop
add
stos
fwait
jl
sub
or
or
outsb
aad
jno
push
int3
jno
mov
jl
in
sbb
pop
and
sbb
daa
test
jge
mov
dec
in
push
mov
inc
lods
jg
ret
cltd
imull
xor
orb
out
pop
popa
ja
dec
daa
enter
pop
inc
out
xor
iret
xchg
int3
cld
xchg
adc
dec
push
adc
cli
lea
fwait
mov
ds
mov
outsb
stc
test
push
sub
push
int3
pop
fbstp
fisttps
push
xor
movsl
test
mov
scas
push
stos
div
fildl
sub
repz
insb
pop
adc
fisubs
pop
sbb
lret
push
add
test
out
aas
push
mov
adc
aam
fadd
pop
sahf
mov
andb
test
sub
jge
in
ss
adc
adc
fimull
sub
dec
add
cmc
pop
mov
andb
or
repnz
mov
mov
xor
push
roll
je
xchg
xchg
fisubl
scas
add
stc
adc
sysret
pop
adc
push
out
push
and
and
and
pop
add
push
popw
sqrtps
fstps
int
pusha
lret
fldenv
sub
fmull
fidivl
sbb
mov
mov
sbb
ret
xchg
into
push
mov
adc
jp
ljmp
xchg
sbb
cmpsb
loope
lret
and
lea
xor
lods
fdivrs
cmp
js
or
ret
jecxz
imul
sbbb
std
inc
loopne
and
aaa
mov
xchg
xchg
loope
insb
jno
jne
subl
das
xchg
repnz
pop
jp
mov
sub
insb
cltd
add
lret
or
call
pop
out
pusha
movsl
fwait
imul
cld
xchg
enter
push
loope
xchg
add
lea
or
out
aas
or
add
out
inc
cs
cmc
inc
add
pop
and
movsb
fisttpll
xlat
lret
xchg
das
mov
xor
push
mov
pop
push
xchg
cmp
cwtl
sub
imul
xor
pop
mov
fucomip
mov
sahf
mov
add
sub
incb
xchg
mov
sbb
pop
push
lods
and
push
mov
mov
push
xchg
call
mov
sbb
jge
jb
mov
popa
fldt
mov
mov
scas
ljmp
dec
jecxz
mov
pop
push
icebp
cmp
mov
mov
mov
mov
mov
push
pop
outsb
fadds
xchg
or
mov
xchg
dec
dec
div
aaa
cmc
gs
pushf
in
hlt
fsubs
xchg
movsb
outsl
pop
xchg
adc
push
out
pop
inc
sahf
mov
int3
jnp
mov
rclb
mov
or
xchg
xor
int
test
lahf
lret
cmp
divb
push
mov
mov
lock
sahf
inc
inc
enter
in
call
dec
imul
call
loopne
gs
movsl
popf
subb
sbb
pop
sub
aas
int
add
and
test
rolb
out
pop
neg
mov
mov
or
fldcw
dec
shlb
out
adc
sbb
in
jl
jb
ja
adc
mov
es
mov
xchg
jno
insb
sbb
mov
pop
jae
pop
out
cmp
xchg
xchg
add
or
lods
or
push
cmpsl
cmp
out
jge
lods
pop
xchg
jbe
jns
xlat
jnp
mov
iret
push
mov
cltd
ret
pop
sbb
sarl
mov
jecxz
repnz
sbb
push
ljmp
mov
push
lret
sbb
or
inc
mov
gs
test
je
flds
xor
ror
xchg
js
add
inc
aas
push
and
and
outsb
jnp
cmp
mov
pop
fidivrl
arpl
xlat
cmpsb
lea
pop
xorl
add
xchg
fldcw
dec
sarb
insl
aam
cmp
cmpsb
sbb
ss
mov
xchg
and
mov
fld
push
cmovs
jns
out
mov
pop
push
push
or
cmpsb
repz
jl
ja
ffree
dec
test
jmp
inc
adc
fnstcw
ss
mov
push
lret
out
sbb
outsl
stos
aas
sbb
bound
out
inc
in
incl
pop
mov
sub
fmul
gs
add
hlt
ficoml
adc
push
adc
shl
mov
movsb
lret
in
xlat
dec
mov
call
dec
popf
jecxz
and
dec
adc
xor
lahf
inc
inc
inc
jns
and
popa
movsl
mov
dec
adc
inc
mov
lds
push
pop
cmpsl
sbb
and
rorb
xor
lahf
xchg
leave
jnp
into
cmc
xor
xchg
movsb
outsl
sub
sbb
insb
sub
inc
adc
repnz
aaa
hlt
push
rolb
mov
cmp
movsb
dec
subl
sub
dec
lds
push
sti
ljmp
xchg
xchg
fisubl
scas
dec
in
jp
push
sti
push
dec
orb
cld
mov
add
mov
mov
in
orl
mov
fnsave
lahf
fisttpl
outsl
mov
mov
mov
pop
or
je
push
adcb
jecxz
into
xchg
int3
xor
adc
les
test
outsb
jbe
push
rcll
sbb
fs
sub
out
adc
cmpsl
fldcw
rcrl
xor
testb
fadds
scas
loope
nop
stos
pusha
test
xor
or
out
inc
movsl
and
xor
in
xchg
cmp
lods
arpl
xor
xor
call
pushf
or
add
xor
cmp
mov
jecxz
inc
movsl
fistpll
cld
rcr
push
mov
jno
cmpsl
jg
sbb
mov
insb
jnp
add
sarb
cmc
lea
xor
sbb
dec
mov
rolb
in
sbb
mov
arpl
xorl
xchg
in
pop
and
mov
stos
xor
scas
stos
jne
dec
pop
mov
or
mov
cmp
fwait
sbb
xor
dec
xor
mov
xchg
stc
add
popf
jp
jne
testl
cmpsb
sbb
xchg
mov
jno
push
das
add
pushf
loop
repnz
insl
out
outsb
push
sbb
adc
fidivs
nop
mov
dec
ficoml
cmp
or
cmp
ds
mov
inc
xchg
mov
cmpsb
fdivrl
fsubrl
jge
pop
sub
sarl
or
std
xchg
dec
sbb
xor
sahf
in
or
mov
les
mov
and
imul
inc
jge
mov
push
fcompl
lods
imulb
push
popf
cmp
test
push
mov
mov
xchg
insb
sub
subb
iret
jb
test
xor
in
aas
shl
jecxz
xchg
xor
test
arpl
shrb
addr16
outsl
icebp
pop
lret
push
inc
popa
les
sahf
pop
cmp
xchg
push
sub
sbb
imul
arpl
test
jns
ss
mov
pop
push
cltd
adc
mov
add
ja
hlt
arpl
mov
mov
pop
inc
hlt
test
and
test
push
lahf
int3
inc
shlb
data16
es
imul
pop
iret
in
icebp
push
inc
sahf
aaa
ljmp
cltd
or
or
mov
cs
in
dec
adcb
mov
popf
orb
fdivrp
add
xor
xor
sub
jmp
pop
imulb
push
mov
mov
pop
cmp
loopne
lret
movsb
pop
je
push
push
aam
cmp
and
in
cmp
sub
ljmp
or
mov
mov
sub
jbe
xchg
xchg
fwait
mov
xchg
pop
push
jne
gs
cwtl
sbb
mov
pop
push
push
sbb
pop
sbb
or
negb
ret
inc
adc
test
xchg
cmpsb
add
mov
movsl
mov
movsl
scas
nop
jmp
push
test
mov
das
lock
add
filds
sti
or
mov
xor
imul
sti
data16
pop
in
mov
icebp
jecxz
mov
popf
ss
adc
imul
mov
mov
jg
inc
stc
icebp
xorb
mov
aad
std
rorl
mov
out
mov
jg
outsl
jne
mov
ds
dec
xor
sbb
rcl
in
xchg
fistps
loop
adcb
push
xchg
notl
in
pop
mov
je
adc
sub
or
dec
outsb
idivb
popa
add
dec
addb
push
mov
xchg
adc
dec
lods
fldl
in
push
pusha
xchg
mov
add
xor
iret
rcl
jnp
rcrl
inc
das
mov
aad
gs
fs
into
loop
mov
pop
adc
nop
ds
test
leave
in
lock
loope
xchg
mov
jns
cmpsl
insb
or
mov
fsubs
out
movsb
loop
inc
fldenv
mov
sub
pop
mov
cli
lods
xchg
fnstcw
jp
lahf
push
cmpsb
adc
add
fstl
out
xor
ss
out
out
jmp
int
or
imul
imul
or
inc
jo
cmp
bound
jecxz
push
sbb
add
or
and
in
adc
or
pop
mov
stos
xchg
repz
test
jo
popa
lret
or
test
or
out
xor
mov
dec
repz
sub
scas
adc
fwait
mov
and
subl
push
and
movsb
fldl2e
movsb
js
push
adc
gs
setg
aam
daa
movsl
lds
mov
jecxz
xchg
cmp
and
and
mov
jo
lds
stos
int3
sub
fimuls
movsb
addl
fidivrs
ret
sarb
pop
inc
pop
sub
pop
sbb
test
inc
popf
lods
aas
sbb
pusha
repnz
roll
lahf
imul
sub
shll
test
hlt
adc
in
aas
cli
push
movsb
mov
jmp
cmp
ficompl
outsb
push
jae
jg
filds
lods
stc
cmp
out
dec
sbb
xchg
int3
test
pop
ss
ja
push
push
or
cltd
fwait
sarl
sub
push
popf
adc
inc
out
ljmp
adc
dec
pop
mov
jbe
ljmp
and
add
fisttps
fadds
sub
insb
cwtl
jecxz
sub
adc
sub
ficoms
movsb
arpl
daa
pop
mov
out
pop
jae
mov
fsubl
xchg
movsl
or
fistps
mov
inc
cltd
push
stos
mov
cmp
loopne
pop
or
sub
jno
ljmp
inc
pop
xlat
js
push
cmp
js
push
int3
or
sbb
enter
test
lods
inc
insl
hlt
or
fldt
dec
cmp
and
movsl
xchg
into
imul
shlb
insl
les
xor
ss
int
in
dec
inc
push
shlb
int3
sub
jle
movsl
sub
mov
mov
ja
pop
stc
iret
add
int
jae
sub
jl
xchg
inc
in
ret
stos
repz
sbb
lods
xor
xor
fisubs
inc
xchg
and
out
push
jecxz
aaa
dec
cmpsb
shll
push
aaa
aaa
cmp
sub
fld1
mov
bound
and
inc
loop
or
xchg
xor
mov
lock
sbb
call
lods
mov
pop
xchg
pusha
pop
xchg
xchg
mov
xor
cmp
mov
int3
mov
fmull
adc
aaa
add
xchg
enter
inc
xor
leave
mov
sub
jmp
ret
inc
adc
das
cmpsb
mov
jecxz
gs
faddl
out
rol
mov
adc
sub
imul
jl
jg
pop
mov
out
arpl
lods
mull
mov
cld
push
push
shlb
cld
repnz
inc
cmp
scas
jnp
scas
cmc
fisubl
dec
test
push
stc
cwtl
or
int
mov
aam
fsubrl
movsb
sub
dec
lods
mov
and
les
or
adc
xor
mov
add
or
mov
sub
jg
push
push
or
and
lods
int3
mov
clc
or
push
je
dec
sbb
or
mov
push
stos
mov
adc
sahf
cmpsl
and
dec
mulb
jbe
mov
js
and
adc
fcompl
imul
mov
nop
push
in
pop
repnz
dec
adc
fbstp
cld
sub
hlt
imulb
pop
cmpsb
xchg
inc
cwtl
lock
sbb
xlat
mov
stos
sbb
dec
test
addb
mov
int
lret
push
or
jg
and
outsb
loop
aad
mov
icebp
dec
dec
inc
jnp
xlat
jg
pop
xorb
js
mov
int3
ds
aam
rcrl
mov
sbb
mov
mov
in
jne
outsl
popa
sub
loopne
push
jg
jl
sub
imul
fnsave
add
push
negb
into
fdivr
or
dec
pop
adc
scas
sub
cltd
pop
sbb
imul
add
lock
mov
test
mov
xchg
jl
sub
sbb
insl
scas
dec
movsl
jbe
push
xchg
push
daa
sbb
jg
cld
inc
enter
mov
cmp
jmp
shlb
pop
sahf
mov
adc
ljmp
jno
pop
fincstp
sub
bound
out
leave
mov
xor
inc
cmp
mov
out
outsb
pushl
cld
stc
inc
push
mov
mov
and
inc
xorl
pop
push
mov
mov
sti
rorl
push
push
mov
cmc
push
jae
dec
cmp
xor
jns
insl
xlat
mov
sub
push
mov
adc
pop
fcoms
jae
or
imulb
movsl
pop
mov
xchg
jecxz
je
pop
test
push
movsl
pushf
mov
iret
fdivp
lea
adc
repnz
add
push
and
sahf
push
scas
xchg
add
cmp
mov
pop
sub
lcall
mov
lds
mov
leave
stc
out
mov
subb
or
popf
scas
fucomip
jo
outsl
sub
in
xchg
es
out
and
pop
int
inc
fcoms
mov
gs
mov
movl
jge
scas
pop
test
out
xor
stos
sbb
mov
fwait
mov
std
clc
sbbl
imul
mov
mov
sub
scas
rol
mov
and
mov
inc
imul
je
jp
xchg
pop
pop
fistl
addr16
xor
mov
cmp
lahf
lret
inc
cltd
push
imul
ds
ja
hlt
push
jns
and
dec
leave
push
dec
mov
loopne
xchg
add
jmp
adc
or
ss
shl
xchg
daa
sar
or
lcall
loopne
or
or
clc
xchg
or
adc
pop
es
insb
sbbb
cmc
icebp
mov
cmpsb
js
xlat
push
mov
dec
jp
inc
xchg
mov
outsl
leave
rcrl
xchg
xor
cmp
mov
pushf
lea
and
xchg
out
repz
mov
mov
stc
stc
or
pop
jne
xchg
mov
pop
sbb
rcrl
xlat
stos
xor
mov
pop
lret
xchg
dec
ret
stos
dec
loop
mov
fnstsw
loopne
cli
and
pop
sub
inc
int
nop
xchg
or
enter
mov
dec
jae
imul
lret
cmp
dec
insb
lcall
ret
add
push
test
insl
xchg
lods
push
out
lret
mov
inc
enter
aaa
or
adc
jo
push
hlt
dec
loope
cwtl
jno
mov
pop
jge
adc
lds
and
out
cmp
stos
pushf
aad
imul
arpl
push
lods
insb
xchg
jl
xchg
push
pop
mov
xchg
inc
clc
repnz
aam
xchg
sbb
js
pop
sub
add
sbb
push
cli
jne
pop
pop
fwait
push
cmp
dec
shrl
testb
insl
test
outsb
and
sbb
dec
out
pop
enter
fcoms
sbb
push
push
scas
push
outsb
pop
int3
fsubr
lret
shl
aad
cs
adc
sar
xchg
movsb
sbb
add
push
sbb
jl
enter
xor
insb
add
loopne
xchg
xor
nop
lahf
test
xchg
daa
jbe
mov
mov
add
insl
mov
loop
push
push
add
adc
or
fwait
bound
lcall
mov
aaa
fstpt
mov
arpl
xchg
lahf
movsb
and
mov
lods
repz
lods
hlt
and
imul
inc
js
lret
lahf
mov
cmp
dec
negl
and
adc
les
xlat
dec
shl
insb
or
int3
fidivs
xchg
xchg
and
in
sbb
sub
dec
jns
jno
and
sub
push
pop
fwait
add
xor
xchg
enter
add
mov
mov
sub
pop
or
inc
mov
decb
into
ret
int
std
xchg
inc
dec
push
movsl
cmpsb
sub
aaa
push
dec
cmp
stos
add
cmpl
iret
mov
or
mov
mov
movb
loopne
popf
cld
rcrl
adc
xchg
cwtl
je
fwait
pop
and
fstpt
roll
mov
idivl
scas
les
mov
cmp
into
jns
addr16
pop
inc
repz
out
add
rolb
movsb
sub
out
lock
lcall
in
and
sbb
hlt
dec
adc
mul
cwtl
lcall
insl
dec
xchg
std
rol
or
cmp
push
push
pop
inc
cs
cmpsl
addr16
pop
xchg
pushf
and
sbb
aaa
sub
aam
pop
cmpsb
ss
sbb
lahf
adc
dec
sub
sbbl
and
rorl
les
fcmovbe
xchg
out
das
mov
arpl
sbbl
sub
mov
test
fldt
inc
mov
push
inc
adc
jge
or
push
sub
xchg
jnp
cmp
stos
sub
nop
movsb
jmp
cmp
lea
push
nop
mov
mov
mov
push
inc
sub
push
sahf
sub
mov
sbb
pushf
push
std
and
cmpl
inc
enter
jne
pop
jle
add
popa
cmp
orl
mov
je
xchg
testl
sbb
dec
mov
push
fistpll
pop
loope
sub
cli
das
lods
dec
scas
jns
mov
hlt
les
sti
leave
mov
movsl
in
dec
sahf
push
mov
mov
push
xor
btc
pop
mov
mov
push
push
cmpsb
iret
sub
or
xchg
dec
rorl
lods
jp
push
sbb
jno
js
mov
aaa
mov
jmp
sub
lds
fstpt
out
in
aaa
addl
ljmp
mov
xchg
cmpsb
rcll
jo
pop
gs
cmpsb
insb
iret
pushf
fisubs
add
movsl
repz
std
neg
ss
mov
jl
and
out
pop
stc
or
adc
out
dec
or
scas
push
aas
jl
mov
aad
xchg
sbb
jb
sbb
aaa
sub
fwait
or
mov
adc
fisttps
mov
inc
mov
int
sar
mov
cmp
imul
movsb
pop
xor
sbb
inc
inc
mov
arpl
icebp
or
jnp
adc
mov
push
push
and
jecxz
inc
mov
inc
insl
mov
sbb
mov
pop
repnz
sti
test
pushf
sbbl
pusha
or
inc
jg
fsubrl
insl
dec
sub
sbb
mov
adc
sub
sub
outsl
loopne
pop
mov
and
or
hlt
mov
js
stos
in
sbb
inc
mov
pop
xor
sbb
adc
rclb
ficomps
push
jb
out
xor
sbb
popa
fimuls
pop
mov
dec
loop
mov
mov
daa
aas
sub
add
pushl
pop
in
lcall
xchg
jmp
enter
mov
icebp
fld
sub
lret
push
mov
out
inc
or
xchg
ljmp
out
scas
pop
fnstsw
aam
nop
xchg
pop
xchg
mov
add
inc
mov
insl
jnp,pn
mov
xchg
aas
add
aaa
into
sub
push
repz
dec
sbb
sahf
cmp
out
mov
dec
jae
adc
and
mov
fsubrs
subb
sub
inc
sub
rcll
out
and
add
sub
aad
sub
adc
es
in
arpl
cmp
pop
scas
fs
loope
inc
ja
sarl
jne
fisttpll
cltd
out
lcall
dec
and
in
cmp
test
fimuls
fmull
mov
adcl
into
mov
sbb
pop
cli
or
mov
not
xchg
pop
adc
addr16
xchg
push
pusha
lods
out
mov
adc
lahf
dec
mov
xor
mov
shll
jmp
dec
outsb
rolb
mov
pop
mov
aad
imul
mov
sub
test
jge
movsb
xchg
add
insl
or
jbe
aam
dec
fbstp
inc
push
add
out
bound
jge
mov
jmp
ret
in
loop
sub
out
add
xor
out
mov
sti
adc
push
pop
mov
orl
push
ds
lock
mov
add
push
das
push
mov
mov
not
add
mov
sub
movsl
mov
jecxz
push
rorl
testl
repz
dec
inc
loopne
loope
shrb
jnp
sub
jno
xchg
sub
mov
aad
nop
add
pushl
test
int3
xchg
sbb
mov
cwtl
jmp
add
mov
mov
shlb
inc
stos
pop
sub
pop
aas
ret
and
jno
iret
cmpsb
cmp
cmp
cld
pop
outsb
sbb
add
sub
sbb
ss
out
sbb
inc
sbb
xchg
cltd
push
jl
or
cmp
pop
inc
clc
xor
pop
jge
in
add
add
sahf
movsb
xor
addb
stos
dec
shlb
sbb
std
mov
in
jns
inc
stc
jmp
push
sbb
cmpsb
and
flds
sbb
xor
cld
cmp
cmpsl
fidivrl
call
outsb
outsl
xlat
mov
hlt
lds
dec
rorb
aaa
mov
mov
push
push
in
sbb
jnp
or
loopne
jae
lahf
xor
das
mov
xor
sahf
xchg
lock
adc
xchg
inc
and
dec
out
icebp
std
pop
idivb
jns
clc
cmpsl
comiss
mov
aas
or
jne
jb
push
push
xchg
pop
add
loop
sahf
scas
mov
out
int3
insb
lret
out
mov
sbb
add
stos
adc
outsb
pop
cld
mov
jno
lret
xchg
out
cmp
sbb
mov
cli
xchg
test
aad
adc
sbb
mov
pop
or
xor
into
xchg
adc
rorb
in
push
mov
push
sbb
repz
mov
and
add
cmp
outsb
icebp
aas
inc
test
lcall
cmp
out
popa
push
out
pop
sub
mov
and
call
mov
inc
adc
cmp
lea
and
lods
push
push
addr16
data16
inc
icebp
pop
sub
ja
dec
or
dec
iret
insb
aam
push
mov
rorl
jbe
aaa
loop
xor
sub
lods
aas
outsl
test
fsubs
mov
adc
push
hlt
xor
xchg
shlb
fstps
push
xor
data16
and
cmp
out
jnp
xchg
add
push
sbbb
pop
push
add
xchg
xor
mov
jl
cld
test
mov
fists
pop
or
fimuls
jl
xchg
mov
xchg
popa
and
aas
inc
sub
inc
rolb
out
push
adc
and
mul
sbb
jmp
and
cmp
jbe
fdivl
pop
inc
xchg
add
popf
mov
outsl
rol
add
mov
mov
inc
jo
dec
decl
and
popa
ret
pop
lods
xchg
outsl
iret
pop
leave
stc
cmp
push
or
xlat
add
inc
jp
out
dec
xor
fisubrl
push
mov
adc
xlat
push
movsl
cltd
inc
pushf
xor
add
sbb
adc
cli
sahf
and
js
mov
or
cmp
push
push
push
sahf
mov
push
or
push
fsubrl
push
stos
fcomi
dec
scas
or
andb
aaa
mov
push
cmp
imul
pop
ja
xchg
test
push
xor
das
out
testl
repz
xorb
fnstenv
ret
push
stos
adc
movsl
pop
daa
and
imul
jg
data16
arpl
push
fst
mov
or
pop
push
iret
xor
jmp
and
sbb
daa
cli
loopne
mov
movsb
pop
cmp
jg
jp
dec
das
dec
fisubl
insl
mov
repz
orb
sub
mov
in
push
mov
icebp
pop
jp
in
cs
sbb
push
mov
cmp
jbe
insl
lahf
sahf
sub
xchg
or
icebp
jecxz
mov
mov
mov
ja
js
cmpsb
hlt
enter
mov
lret
pop
adc
int
dec
stc
aas
ret
xchg
lea
in
outsl
in
fsts
pop
lods
repz
test
pop
pop
test
push
scas
lret
imul
sub
ljmp
xor
sub
inc
loop
jge
and
adc
sarl
mov
movsl
loop
pop
lods
xchg
mov
insl
cmp
xlat
sbb
xchg
jae
jmp
jmp
inc
icebp
testb
mulb
sbb
je
xchg
fdivl
ja
outsb
push
sub
out
jmp
xor
fmul
scas
ds
lea
lcall
scas
ret
mov
mov
push
xchg
mov
lds
mov
fs
push
cltd
in
sbb
cltd
pushf
ljmp
out
xor
pop
inc
sbb
sbb
call
stos
inc
dec
or
enter
sub
cmpsl
pusha
sbb
loope
lds
push
outsl
fwait
jne
xorb
push
cmp
stos
out
add
mov
adc
into
fsubs
cmp
jecxz
sti
shl
fsqrt
rcll
loop
jg
incl
sub
sub
popa
sbb
or
adc
int3
adc
fisttpll
sbb
adc
sbb
jne
dec
daa
cld
movb
adc
pusha
lahf
add
test
call
cmc
inc
test
popa
mov
in
jne
pushf
les
push
adc
cmp
jg
push
dec
sub
sub
sbb
sub
jg
xchg
das
jle
or
push
pop
pop
arpl
inc
or
push
add
das
mov
fistpll
jb
sahf
pop
inc
fbld
pop
ficompl
addr16
pop
rorl
xchg
mov
dec
mov
lret
xor
fisubs
pop
sahf
mov
adc
or
int
loope
frstor
fxch
sub
inc
aad
shrb
add
and
stos
out
in
jno
push
and
cmpsl
loope
out
outsl
rorb
shlb
movsb
xorb
mov
cmp
jb
stos
enter
sti
mov
push
iret
cmp
cmp
mov
adc
arpl
into
das
or
pop
jae
popf
test
into
mov
cmp
mov
fs
fdivrl
jne
out
mov
cmpsl
lcall
pop
popf
fsubrl
jb
fs
test
sub
sarb
mov
bound
lea
shrl
push
cmpsl
dec
adc
imul
in
mov
stc
jnp
repnz
sbb
rcrl
imul
leave
ljmp
addl
popl
push
mov
lret
jb
jnp
andl
rcrl
mov
leave
dec
add
out
pop
pushf
adc
icebp
mov
mov
push
mov
pop
jle
cltd
out
movsb
mov
xor
std
cmc
arpl
rcl
pop
mov
out
sub
aas
shrl
test
pushf
jp
pop
cwtl
pop
sbb
or
xor
xlat
leave
mov
ja,pn
jae
mov
inc
pop
fmull
in
fxam
xchg
mov
out
call
push
nop
sub
int3
mov
fldcw
ret
mov
stos
lcall
aaa
das
test
adcb
pop
sub
pop
push
jno
push
lret
xchg
sbb
andl
daa
and
insl
jb
pop
je
rcrb
pop
xlat
stos
loopne
setge
adc
insb
bound
lods
jp
lret
stc
dec
loop
jae
ret
aaa
xchg
push
js
cmp
stc
inc
test
xchg
push
loope
ljmp
adc
insb
mov
dec
sub
inc
push
cli
sbb
insb
mov
dec
xchg
in
cli
jae
xor
scas
in
cmpsb
aas
sbb
cltd
mov
inc
fs
and
bound
stos
cmp
cmp
jno
mov
xchg
dec
aam
ret
mov
push
ret
lods
push
push
mov
lds
dec
sub
lods
jno
add
jl
jl
adc
lock
addl
cmp
imul
cmp
lea
arpl
pushf
inc
xchg
xchg
dec
lcall
ljmp
icebp
lcall
sbb
addb
xchg
clc
mov
jb
repnz
and
pop
bound
mov
and
jmp
push
dec
andb
lds
pextrw
push
adc
loop
and
inc
ret
stos
and
nop
inc
mov
out
push
and
adc
lahf
shrb
jle
cld
daa
ja
inc
mov
mov
inc
into
adc
or
inc
mov
pop
addl
sub
xchg
mov
pushf
mov
cmpl
js
adc
cs
int3
or
pushf
decb
js
mov
xchg
cmpl
repnz
dec
sti
mov
cmpsb
sbb
out
pushf
jecxz
mov
inc
push
sbb
idivb
push
xor
call
icebp
gs
pop
ljmp
jmp
sbbb
and
rclb
mov
sbb
ja
in
sub
xchg
xor
push
rcll
xor
leave
jge
sub
cmpb
movsl
aaa
sbb
add
lds
cwtl
into
xchg
mov
fidivrl
out
xor
js
inc
or
add
cmp
movsb
jmp
rol
jg
mov
fldcw
outsl
mov
shlb
adc
shl
fcmovb
rep
sbb
out
shl
les
enter
outsl
lret
jl
cmp
hlt
lcall
lahf
ror
pop
mov
out
pop
mov
int3
ret
inc
jg
xor
pop
shlb
dec
pop
add
mov
or
out
imul
xchg
xchg
inc
xor
dec
inc
pushf
scas
pop
sub
jge
popf
sarl
jp
pop
out
cmp
xorb
outsb
scas
cwtl
jp
and
stos
aaa
and
mov
leave
mov
rcl
clc
dec
iret
sub
dec
and
xchg
lahf
jl
ret
mov
aad
pop
xchg
stos
cs
repnz
or
outsl
dec
cltd
cmc
es
cmpsb
icebp
test
jmp
testb
jns
ss
pop
cs
into
or
inc
pop
or
pop
iret
rorl
jmp
jg
and
addb
insl
outsb
fists
inc
test
inc
out
jp
shr
lods
and
mov
jns
xor
pop
xchg
xor
sub
sub
test
jno
es
insl
mov
jle
dec
cmp
sti
stos
fstl
ret
mov
rcrb
cmp
jbe
pop
and
shlb
bound
lret
stos
xor
test
xor
pop
ficompl
aas
mov
push
lods
clc
pop
cmp
or
inc
je
repz
leave
int3
jl
jmp
mov
lret
enter
and
movsb
pop
cmc
jnp
je
fsubr
xor
int3
xchg
and
xchg
lret
js
mov
pop
inc
fistps
je
mov
mov
stc
mov
adc
arpl
fnstsw
lret
flds
mov
mov
sub
mov
sbb
in
add
or
xchg
and
mov
fs
stos
in
jle
loopne
lods
mov
out
and
pop
xchg
jnp
enter
dec
daa
add
xor
arpl
mov
cwtl
iret
sub
mov
cmp
fimull
or
dec
sahf
mov
das
sub
ja
shr
xchg
jbe
adc
hlt
nopl
mov
inc
push
or
dec
bound
fisttpll
jmp
xlat
outsl
repnz
das
pop
