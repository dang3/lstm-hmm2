sub
adc
pusha
pop
popf
adc
pop
and
call
mov
test
pop
jne
cmp
jne
and
mov
test
jne
push
pushl
call
cmpl
pop
pop
je
xor
cmp
jne
cmp
je
push
call
pop
mov
mov
push
call
mov
test
pop
jne
cmpl
jne
mov
test
movl
je
push
call
pop
push
call
pop
pop
pop
pop
mov
pop
ret
test
mov
jne
mov
ret
push
mov
call
xor
mov
mov
mov
mov
mov
mov
mov
pop
ret
mov
test
jne
ret
jmp
push
mov
push
push
cmpl
je
lea
push
push
push
pushl
movl
pushl
call
test
je
xor
leave
ret
push
mov
sub
mov
xor
mov
push
push
push
mov
push
lea
call
test
pop
pop
jne
push
push
call
test
pop
pop
jne
xor
mov
pop
xor
pop
call
leave
ret
jmp
mov
mov
mov
dec
add
test
ja
ret
push
mov
push
push
xor
lea
stos
pushl
mov
pushl
pushl
call
add
pop
leave
ret
push
mov
sub
push
push
mov
xor
mov
sub
inc
cmp
mov
jb
mov
mov
shr
cmp
jae
push
pop
cmp
jbe
sub
cmp
ja
mov
mov
mov
add
shr
call
mov
mov
shl
mov
lea
mov
lea
push
add
push
call
mov
cmp
pop
pop
ja
mov
lea
push
push
mov
call
andl
lea
push
mov
sub
call
andl
lea
push
mov
mov
call
add
mov
test
pop
pop
jne
mov
mov
mov
add
leave
ret
cmpl
je
push
call
andl
movl
call
pop
ret
push
mov
test
jne
andl
pop
jmp
mov
test
jne
andl
andl
andl
ret
push
lea
call
lea
mov
pushl
push
call
mov
call
lea
call
mov
call
pop
ret
push
pushl
call
dec
neg
sbb
neg
ret
pushl
call
neg
sbb
pop
inc
ret
push
call
test
je
test
je
lea
test
je
mov
push
call
ret
xor
jmp
mov
test
je
push
lea
call
pop
ret
decl
je
ret
cmpl
jne
call
push
call
orl
pop
ret
cmpl
je
xor
cmp
sete
push
pushl
call
pop
pop
ret
push
push
call
pop
pop
jmp
incl
je
push
call
pop
ret
jmp
push
mov
push
push
push
mov
test
jbe
or
xor
div
cmp
jb
imul
push
call
pop
pop
leave
ret
push
mov
test
je
push
push
pop
mov
rep
pop
pop
ret
push
mov
mov
inc
cmp
push
ja
call
mov
add
mov
cmp
jbe
mov
mov
shl
cmpl
jne
xor
inc
call
mov
mov
mov
mov
mov
call
incl
pop
pop
ret
sub
jmp
push
mov
sub
push
push
mov
xor
mov
sub
inc
cmp
jb
mov
mov
shr
cmp
jae
push
pop
cmp
jbe
sub
cmp
ja
mov
mov
add
mov
call
mov
mov
mov
shl
lea
shl
sub
add
mov
sar
lea
lea
mov
lea
jne
cmp
ja
mov
sar
lea
lea
jne
andl
lea
mov
sub
push
mov
call
mov
andl
lea
push
mov
call
pop
pop
mov
test
jne
mov
add
pop
mov
pop
leave
ret
push
mov
sub
flds
mov
fmuls
fmuls
flds
fmuls
fmuls
faddp
flds
fmuls
fmuls
faddp
flds
fmuls
fmuls
fsubrp
flds
fmuls
fmuls
fsubrp
flds
fmuls
fmuls
fsubrp
fstps
fldz
fcomps
fnstsw
test
jnp
andl
flds
andl
fld1
push
fdivp
push
push
fstps
mov
xor
shl
mov
mov
mov
mov
mov
imul
imul
lea
add
flds
lea
add
fmuls
flds
fmuls
mov
add
test
fsubrp
jne
fmuls
mov
inc
fstps
add
cmp
mov
jl
incl
cmpl
jl
mov
pop
pop
pop
leave
ret
fchs
jmp
push
mov
sub
push
push
push
sub
push
pop
lea
mov
mov
lea
push
rep
call
mov
fldl
mov
fstps
lea
fldl
rep
fstps
fldl
fstps
fldl
fstps
fldl
fstps
fldl
fstps
flds
fmuls
flds
fmuls
faddp
flds
fmuls
faddp
fstps
flds
fmuls
flds
fmuls
faddp
flds
fmuls
faddp
fstps
flds
fmuls
flds
fmuls
faddp
flds
fmuls
faddp
fstps
flds
fmuls
flds
fmuls
faddp
flds
fmuls
faddp
fstps
flds
fmuls
flds
fmuls
faddp
flds
fmuls
faddp
fstps
flds
fmuls
flds
fmuls
faddp
flds
fmuls
faddp
andl
add
mov
fstps
mov
flds
lea
fdivs
rep
sub
lea
mov
mov
lea
push
fstps
fldz
fsts
add
inc
add
flds
fdivs
fstps
fsts
fsts
fstps
flds
fdivs
fstps
rep
call
add
mov
mov
mov
rep
sub
lea
mov
mov
lea
push
rep
call
mov
mov
add
mov
mov
rep
pop
pop
pop
leave
ret
push
mov
sub
mov
push
lea
push
sub
movl
push
lea
lea
mov
movl
fldz
push
mov
mov
pop
flds
add
fmuls
add
dec
faddp
jne
mov
fstps
add
add
decl
mov
jne
decl
jne
pop
xor
cmp
pop
pop
jne
cmp
jne
mov
mov
leave
ret
jmp
push
mov
flds
push
fmull
fstps
flds
fstps
call
pop
pop
ret
cmpl
jne
call
push
fstps
call
pop
ret
pushl
pushl
pushl
push
call
add
ret
push
mov
push
push
cmpl
push
mov
mov
je
call
test
pushl
pushl
pushl
jne
mov
call
add
or
pop
pop
leave
ret
push
mov
push
mov
push
push
pushl
mov
pushl
lea
pushl
pushl
call
add
cmpl
jne
pushl
mov
pushl
add
pushl
lea
push
add
call
add
pop
pop
pop
pop
ret
push
mov
push
push
mov
and
lea
or
cmpl
mov
jne
push
call
pop
mov
test
mov
jne
test
jne
mov
mov
mov
mov
mov
pop
leave
ret
push
mov
andl
test
movl
movl
je
mov
shr
push
dec
push
call
mov
pop
ret
cmpb
jne
call
movzbl
shr
ret
cmpb
jne
mov
call
test
jne
ret
push
mov
call
decl
ret
movzbl
shr
and
ret
push
mov
test
je
mov
call
test
jne
mov
pop
ret
mov
jmp
xor
pop
ret
push
mov
and
push
mov
cmpl
push
mov
push
push
jge
mov
lea
push
call
test
je
mov
cmpl
mov
jge
testb
jne
mov
push
movzwl
push
pushl
call
add
mov
neg
sbb
and
push
add
push
push
call
mov
cmpl
jl
jmp
call
mov
cmpl
jge
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
andl
push
push
xor
inc
push
mov
mov
call
cmpl
pop
jae
mov
mov
mov
call
cmpl
jne
mov
lea
cmp
jne
cmpl
jae
lea
cmp
jne
lea
cmp
jne
cmpl
jne
pushl
incl
pushl
call
decl
pop
pop
call
mov
sub
cmp
jae
mov
sub
add
mov
cmpl
je
decl
xor
jmp
push
mov
mov
call
pushl
call
pop
mov
pop
pop
leave
ret
mov
lea
push
mov
mov
call
mov
incl
mov
jmp
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
decl
andl
pop
ret
push
mov
mov
mov
test
je
push
pushl
mov
pushl
pushl
call
pop
pop
ret
push
mov
push
mov
push
mov
push
call
test
je
cmp
jb
mov
movzwl
movzwl
add
movzwl
cmp
jge
cmpw
jne
lea
movzbl
and
add
cmp
ja
mov
mov
mov
xor
pop
pop
pop
ret
mov
call
test
je
xor
inc
ret
jmp
mov
and
sub
neg
sbb
inc
ret
call
pop
add
pop
je
pushl
call
pop
mov
ret
andl
ret
push
mov
push
mov
push
push
mov
push
push
push
call
mov
mov
pushl
lea
call
pushl
lea
call
pushl
lea
call
pushl
lea
call
pushl
lea
call
pushl
lea
call
pushl
lea
call
lea
mov
add
call
mov
mov
mov
cmpl
jbe
lea
mov
call
mov
pushl
lea
call
pushl
lea
call
pop
pop
cmpl
jbe
pushl
lea
call
pop
mov
pop
pop
pop
pop
ret
push
mov
mov
mov
call
test
je
movzbw
movzbw
shl
push
add
push
movzwl
test
jbe
xor
add
pushl
pushl
call
test
je
inc
inc
inc
cmp
jb
mov
pop
pop
pop
ret
xor
jmp
mov
push
mov
call
test
je
movzbw
movzbw
shl
add
movzwl
test
je
mov
add
push
pushl
call
test
je
xor
inc
ret
mov
jmp
cmp
ja
mov
cmp
ja
sub
cmp
jb
mov
ret
xor
jmp
mov
push
push
mov
call
test
je
mov
lea
push
mov
call
test
je
movzbw
movzbw
movzbw
shl
add
movzbw
shl
add
movzwl
movzwl
lea
add
push
mov
lea
call
test
je
xor
inc
pop
ret
xor
jmp
mov
push
mov
call
test
je
movzbw
movzbw
shl
add
movzwl
test
je
mov
push
pushl
lea
call
test
pop
je
xor
inc
ret
push
mov
push
push
mov
mov
mov
call
test
je
movzbw
movzbw
shl
add
push
movzwl
test
push
jbe
andl
add
pushl
mov
pushl
call
test
je
incl
inc
inc
cmp
jb
mov
pop
pop
pop
leave
ret
xor
jmp
decl
jns
mov
mov
add
mov
mov
mov
cltd
idiv
cmp
mov
je
mov
mov
mov
mov
incl
mov
ret
push
mov
pushl
add
call
mov
pop
ret
push
mov
andl
push
pushl
push
call
add
test
je
push
pushl
push
call
add
test
je
mov
test
jne
mov
pop
ret
mov
mov
jmp
mov
push
call
xor
jmp
test
push
jl
mov
shl
dec
cmp
ja
lea
cmp
ja
mov
and
lea
cmp
ja
xor
inc
shl
mov
sar
pop
dec
shl
mov
mov
and
sub
neg
sbb
and
ret
mov
pop
ret
push
mov
push
push
mov
mov
test
je
mov
mov
call
test
js
mov
imul
mov
push
lea
push
push
push
call
add
cmp
pop
jne
mov
mov
test
jle
mov
imul
cmp
ja
push
pushl
pushl
call
add
mov
xor
pop
pop
pop
ret
push
mov
test
jne
mov
pop
ret
pushl
mov
call
pop
test
jne
mov
jmp
push
push
pushl
mov
xor
call
test
jne
mov
test
jne
mov
pop
pop
ret
mov
mov
mov
test
push
push
je
mov
test
mov
jne
add
pushl
push
pushl
push
mov
call
pop
pop
ret
test
mov
je
mov
push
call
test
js
mov
ret
mov
cmpl
je
incl
xor
ret
push
pushl
pushl
call
test
je
lea
push
push
call
ret
push
mov
push
push
push
mov
add
lea
lea
mov
call
test
jne
xor
cmp
je
push
call
cmp
pop
je
movl
mov
push
lea
mov
call
mov
pop
pop
leave
ret
mov
jmp
push
call
mov
neg
sbb
and
jne
xor
ret
test
je
mov
mov
xor
inc
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
sub
push
xor
cmp
push
jbe
xor
mov
mov
lea
mov
mov
mov
mov
shr
lea
mov
call
test
jne
inc
add
cmp
jb
pop
pop
leave
ret
lea
call
test
je
mov
mov
test
je
cmpl
mov
push
je
call
jmp
call
jmp
push
mov
and
push
movl
add
decl
adc
inc
or
je
push
push
call
mov
andl
test
je
mov
push
call
mov
test
je
push
call
pop
mov
test
jne
lea
call
movl
mov
pop
ret
push
mov
push
xor
cmp
push
push
jbe
mov
mov
mov
mov
lea
mov
test
jns
mov
mov
test
je
shr
and
cmpl
movzbl
jne
sub
je
dec
je
dec
je
sub
je
dec
jne
pushl
pushl
call
push
call
add
incl
mov
add
cmp
jb
pop
pop
pop
pop
ret
sub
je
dec
je
dec
je
sub
je
dec
jne
push
call
pop
test
je
mov
andl
push
movl
movl
call
mov
mov
jmp
dec
jne
jmp
dec
jne
jmp
xor
jmp
push
mov
and
xor
cmp
mov
mov
mov
mov
mov
mov
mov
movl
add
add
push
sbb
and
mov
push
call
push
call
mov
mov
testb
je
push
push
call
mov
mov
pop
ret
push
push
push
call
mov
push
call
mov
decl
mov
pop
je
push
call
mov
pop
pop
pop
pop
ret
mov
mov
call
push
call
pop
call
push
call
xor
jmp
mov
test
je
ret
push
call
test
pop
je
push
mov
call
pop
mov
ret
xor
jmp
push
push
call
mov
push
call
mov
incl
mov
push
call
pop
pop
mov
pop
pop
ret
push
mov
push
push
movzbl
sub
je
dec
jne
fldl
fstps
cmpb
jne
flds
fdivl
fstps
flds
fmuls
fstps
flds
leave
ret
fldl
jmp
push
mov
sub
cmpw
push
push
jne
mov
fldl
mov
mov
fstpl
call
faddl
lea
mov
fstps
fldl
fstpl
call
faddl
lea
mov
fstps
call
lea
fstps
mov
call
mov
fstps
flds
sub
fstpl
flds
fstpl
flds
fstpl
flds
fstpl
call
mov
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
pop
pushl
lea
push
lea
push
rep
call
mov
add
push
pop
lea
mov
rep
pop
pop
leave
ret
push
mov
sub
test
push
mov
push
mov
push
je
cmpb
jne
lea
push
call
fldl
fstpl
pop
fldl
lea
push
fstpl
call
pop
lea
push
call
fldl
sub
fstpl
lea
fldl
fstpl
push
call
add
push
push
lea
push
lea
call
push
lea
push
lea
call
mov
call
pop
pop
mov
pop
leave
ret
mov
mov
mov
mov
mov
movl
ret
push
mov
and
push
push
push
mov
push
push
pop
push
call
test
pop
je
mov
push
push
call
test
mov
je
push
mov
call
test
js
push
mov
call
test
pop
je
mov
push
push
call
test
mov
je
push
call
test
pop
je
mov
push
push
call
test
mov
je
push
mov
call
test
jne
push
call
test
pop
je
mov
push
push
call
test
mov
je
push
call
test
pop
je
mov
push
push
call
test
mov
je
push
mov
call
test
jne
push
call
test
pop
je
mov
push
push
call
test
mov
je
push
call
test
pop
je
mov
push
push
call
test
mov
je
push
mov
call
test
jne
push
call
test
pop
je
mov
push
push
call
test
mov
je
xor
inc
push
mov
call
test
jne
push
call
test
pop
je
mov
push
push
call
test
mov
je
push
call
test
pop
je
mov
push
push
call
test
mov
je
push
mov
call
test
jne
push
call
test
pop
je
mov
push
push
call
add
mov
je
push
call
test
pop
je
mov
push
push
call
test
mov
add
add
call
test
jne
push
call
test
pop
je
mov
push
push
call
test
mov
je
push
mov
call
test
jne
push
call
test
pop
je
mov
push
push
call
test
mov
je
push
mov
call
test
jne
push
call
test
pop
je
mov
push
push
call
test
mov
je
push
mov
call
test
jne
push
call
test
pop
je
mov
push
push
call
test
mov
je
push
mov
call
shr
not
and
pop
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
mov
mov
cmp
jne
mov
cmp
jne
xor
ret
xor
inc
jmp
push
movl
movl
xor
push
mov
call
mov
mov
lea
mov
call
lea
mov
mov
mov
call
mov
mov
mov
mov
mov
pop
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
fldl
mov
fstpl
fldl
fstpl
fldl
fstpl
fldl
fstpl
fldl
fstpl
fldl
fstpl
pop
ret
push
mov
sub
push
mov
push
mov
fldl
push
fchs
sub
fstpl
lea
fldl
fchs
fstpl
fld1
fstl
fldz
fstl
fstpl
fstpl
call
fldl
sub
fstpl
lea
fldl
fstpl
fld1
fstl
fldz
fstl
fstpl
fstpl
call
push
pop
pushl
lea
mov
rep
mov
call
lea
push
mov
call
pop
pop
mov
pop
leave
ret
push
pushl
mov
push
push
call
add
mov
pop
ret
push
mov
and
mov
sub
push
xor
cmp
push
push
jne
cmp
mov
je
lea
lea
mov
push
push
mov
call
cmp
je
pushl
lea
mov
push
mov
call
xor
cmp
mov
mov
mov
mov
mov
je
mov
cmp
mov
jge
test
jl
mov
cmp
jge
test
jl
test
mov
jne
mov
xor
cmp
sete
cmp
mov
mov
mov
je
cmp
jg
mov
cmpl
je
mov
mov
call
test
je
add
test
je
mov
andl
lea
push
push
call
cmpl
jne
mov
call
mov
lea
mov
call
lea
call
pushl
xor
inc
push
push
pushl
mov
push
call
movl
incl
mov
cmp
jle
xor
cmp
je
cmp
jne
mov
cmp
jne
cmpl
je
mov
test
jne
lea
call
pop
pop
xor
pop
mov
pop
ret
cmp
je
cmp
je
jmp
cmpl
je
jmp
push
mov
cmpl
push
mov
jne
mov
test
jne
xor
pop
pop
ret
lea
mov
call
test
jne
jmp
push
mov
push
push
call
test
jne
leave
ret
push
mov
and
sub
push
mov
mov
cmp
push
je
jle
cmp
jle
cmp
je
add
cmp
jbe
mov
mov
mov
call
mov
pop
pop
mov
pop
ret
mov
pushl
lea
push
lea
push
call
pushl
add
lea
push
push
call
add
pushl
pushl
pushl
pushl
pushl
mov
call
jmp
mov
pushl
add
push
pushl
call
add
mov
jmp
push
mov
push
cmpl
jne
movl
call
fstps
andl
flds
mov
fstps
leave
ret
mov
push
mov
mov
push
push
push
push
call
fldz
add
mov
pop
jmp
test
mov
je
mov
push
call
mov
andl
andl
andl
push
call
mov
neg
sbb
and
pop
add
ret
mov
push
mov
push
mov
add
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
push
mov
mov
mov
lea
push
mov
call
mov
mov
lea
push
mov
call
push
lea
call
test
jne
mov
test
mov
mov
je
cmp
jne
mov
test
je
cmp
jne
mov
push
call
mov
push
call
mov
mov
mov
xor
add
test
jne
mov
sub
test
jne
cmpl
jle
movdqa
movdqa
mov
movl
xor
test
je
lea
cmp
jge
mov
mov
and
and
sub
mov
mov
xor
shl
and
xor
mov
sub
or
mov
mov
add
add
add
test
jne
lea
cmp
jge
movdqa
movdqa
movdqa
movdqa
psubusb
movdqa
psubusb
pslldq
psubusb
movdqa
pand
movdqa
psubusb
pslldq
movdqa
pand
movdqa
pandn
movdqa
por
movdqa
pandn
por
movdqa
mov
add
lea
add
add
cmp
jl
lea
cmp
jge
movdqa
movdqa
movdqa
psubusb
psubusb
pslldq
movdqa
pand
movdqa
pandn
por
movdqa
mov
add
lea
add
add
cmp
jl
cmp
jge
jmp
lea
mov
mov
mov
and
and
sub
mov
shl
mov
sub
mov
xor
add
and
xor
or
mov
mov
add
add
cmp
jl
mov
mov
add
add
sub
add
mov
mov
sub
mov
add
add
cmp
mov
jl
mov
push
call
add
mov
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
ret
push
mov
and
sub
push
mov
mov
push
push
lea
push
mov
call
mov
mov
lea
push
mov
call
mov
cmp
jne
mov
cmp
jne
mov
test
je
cmp
jne
mov
test
je
cmp
jne
mov
test
jne
cmpb
je
push
push
call
test
pop
pop
je
xor
inc
pop
pop
pop
mov
pop
ret
xor
jmp
test
mov
jl
fld1
fld
fldl
test
je
fmul
shr
je
fld
fmulp
jmp
test
fstp
jl
fstp
ret
neg
jmp
fdivrp
ret
cmpl
mov
je
orl
xor
ret
mov
pushl
mov
push
call
xor
ret
push
mov
sub
push
mov
mov
mov
push
imul
push
push
push
lea
test
inc
add
push
mov
mov
call
mov
xor
cmp
jne
cmp
je
cmp
jne
mov
push
lea
lea
call
lea
push
pushl
call
mov
pop
pop
lea
push
pushl
pushl
push
call
pushl
pushl
call
pop
pop
mov
test
jl
mov
jg
test
jbe
mov
mov
test
jl
jg
test
ja
mov
push
call
test
pop
pop
pop
je
mov
andl
leave
ret
cmp
mov
mov
lea
push
push
push
pushl
pushl
pushl
pushl
push
je
call
jmp
push
mov
sub
push
mov
mov
mov
imul
push
lea
mov
jne
mov
cmp
je
cmp
je
cmp
jle
cmp
jle
cmp
je
cmp
je
pop
pop
xor
pop
leave
ret
push
call
jmp
mov
call
jmp
mov
call
jmp
push
push
lea
push
push
mov
call
xor
cmp
je
cmp
jne
mov
mov
mov
lea
push
lea
push
mov
pushl
mov
mov
pushl
mov
mov
movl
movl
mov
push
call
lea
mov
call
testl
jne
cmpl
jne
mov
push
push
lea
push
lea
push
pushl
mov
pushl
movl
movl
mov
push
call
lea
call
push
lea
call
test
je
andl
cmpl
jne
mov
call
mov
mov
cmpl
jl
jg
cmpl
jbe
test
jl
jg
test
ja
andl
jmp
push
mov
sub
fldl
andl
andl
fstl
fld1
push
push
fstl
push
fstl
mov
fstl
push
fstpl
xor
inc
add
fstl
push
fstl
inc
fstpl
pop
mov
mov
push
lea
mov
mov
push
lea
mov
mov
call
mov
mov
mov
shl
mov
mov
shl
fldl
shl
fmull
fldl
fadd
fstpl
fldl
mov
fmull
mov
cmpb
fldl
fadd
fstpl
fldl
fsubp
fxch
fstpl
fsubrl
fstpl
je
pushl
call
cmp
pop
je
mov
mov
cmpb
je
pushl
call
cmp
pop
je
mov
fldl
push
push
mov
fstpl
call
fld
faddp
fstpl
call
fdivrl
pop
pop
push
fstps
call
test
pop
je
fldl
sub
fstpl
mov
fldl
fstpl
fldl
fstpl
fldl
fstpl
call
mov
test
je
incl
mov
fldl
fstpl
fldl
fstpl
fldl
fstpl
fldl
lea
fstpl
push
flds
push
fsubrl
push
mov
fstpl
call
mov
fldl
fstpl
fldl
fstpl
fldl
fstpl
fldl
lea
fstpl
push
flds
push
faddl
push
mov
fstpl
call
mov
pop
mov
pop
pop
leave
ret
push
push
mov
call
mov
mov
xor
test
jne
shr
and
cmp
mov
jne
push
push
push
push
call
add
cmp
mov
je
push
push
lea
call
cmp
pop
mov
je
push
push
push
push
pushl
call
add
pop
pop
pop
ret
push
mov
sub
cmpl
push
je
mov
pop
leave
ret
push
lea
movl
call
mov
test
je
mov
lea
push
push
push
call
test
js
mov
cmp
ja
mov
lea
call
jmp
push
mov
and
sub
push
push
mov
call
cmp
je
mov
fldl
sub
fstpl
fldl
fstpl
fldl
fstpl
fldl
fstpl
fldl
fstpl
pushl
call
add
pop
pop
mov
pop
ret
push
push
push
mov
xor
cmp
mov
je
cmp
je
cmp
je
cmp
je
cmp
jg
mov
test
je
cmp
mov
push
push
jne
call
mov
mov
mov
lea
cmp
je
pop
pop
mov
pop
ret
cmp
jg
jmp
movzwl
test
je
mov
lea
and
mov
call
cmp
jne
jmp
push
mov
push
push
mov
mov
push
mov
call
cmp
je
push
push
push
mov
call
pop
pop
pop
ret
push
mov
push
mov
test
push
push
push
jle
lea
mov
mov
shl
mov
test
jne
mov
mov
shl
andl
mov
mov
shl
andl
mov
mov
shl
add
mov
test
jne
pop
pop
pop
leave
ret
decl
jmp
mov
test
jle
lea
cmp
push
jge
shl
add
mov
mov
mov
mov
call
andl
pop
ret
xor
jmp
push
mov
push
push
andl
push
push
mov
mov
mov
cmp
push
jge
cmpl
jl
add
jle
mov
xor
cmp
mov
jle
mov
shl
mov
lea
push
call
push
push
mov
mov
call
mov
lea
xor
cmp
ja
movzbl
jmp
mov
shl
mov
and
sub
neg
sbb
inc
test
jne
mov
shl
mov
and
sub
neg
sbb
inc
test
jne
mov
test
jne
test
jne
mov
mov
cmp
jg
add
pop
pop
pop
leave
ret
xor
inc
jmp
testb
jne
test
je
mov
call
xor
cmp
jne
cmp
jne
cmp
jne
cmp
je
jmp
lea
test
je
decl
jne
mov
push
mov
call
push
mov
call
mov
mov
mov
jmp
mov
int
add
sbb
cmp
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmpl
jne
push
push
push
pop
push
pop
mov
call
test
pop
pop
je
xor
inc
ret
push
pushl
mov
pushl
add
call
pop
ret
push
mov
push
mov
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
cmp
mov
mov
movl
mov
movl
jne
lea
mov
mov
cmp
je
lea
mov
push
call
add
call
test
js
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
pop
ret
xor
jmp
mov
mov
mov
push
call
ret
push
mov
sub
mov
andl
andl
mov
mov
mov
push
mov
mov
mov
push
push
lea
mov
lea
movsl
movsl
movsl
movsl
sub
sub
lea
lea
call
test
je
pop
pop
pop
leave
ret
mov
mov
push
push
lea
push
call
cmpl
je
pushl
mov
pushl
mov
pushl
push
call
jmp
push
mov
push
push
push
mov
mov
test
je
cmpl
je
mov
test
jne
push
push
lea
mov
cmp
jne
cmp
jne
pushl
mov
pushl
mov
push
call
pop
pop
xor
pop
leave
ret
xor
cmp
setne
ret
mov
call
test
jne
cmp
jne
cmp
je
xor
inc
ret
mov
test
je
push
mov
call
test
pop
je
xor
inc
ret
xor
ret
push
mov
test
je
call
test
jne
lea
call
test
je
xor
pop
ret
xor
inc
pop
ret
push
mov
mov
push
mov
andl
cmpl
je
mov
mov
lea
push
push
call
test
js
mov
test
je
movl
xor
pop
pop
ret
cmpl
jne
cmpl
jne
ret
mov
push
call
test
je
mov
push
push
call
jmp
push
mov
test
je
mov
mov
mov
cmpb
je
add
call
add
je
orl
xor
pop
ret
mov
cmpl
je
mov
pushl
add
mov
push
call
ret
push
mov
sub
push
mov
mov
push
push
lea
dec
movl
add
cmp
jbe
push
lea
push
repz
add
inc
cmp
jb
mov
lea
push
mov
call
xor
cmp
ja
mov
lea
push
mov
call
cmp
ja
mov
lea
push
mov
call
cmp
ja
mov
lea
push
mov
call
cmpl
ja
mov
lea
push
mov
call
cmpl
ja
mov
mov
call
test
jne
mov
mov
call
add
jne
mov
lea
push
mov
call
xor
cmp
ja
mov
lea
push
mov
call
xor
cmp
ja
mov
lea
push
mov
call
cmp
ja
pop
pop
xor
pop
leave
ret
xor
mov
movzbl
mov
imul
add
imul
movzwl
mov
inc
mov
mov
movb
movb
cmp
jae
jmp
push
call
jmp
lea
movb
movb
movb
mov
movsw
movsb
movb
movb
jmp
mov
xor
mov
mov
mov
ret
test
push
jle
cmp
jge
shl
mov
push
mov
call
test
pop
jne
push
mov
call
test
pop
jne
push
mov
call
test
pop
jne
push
push
pop
call
test
pop
jne
push
mov
call
test
pop
jne
xor
pop
ret
xor
inc
pop
ret
cmpl
je
and
sub
neg
sbb
inc
ret
xor
ret
push
mov
mov
test
jne
call
mov
test
jne
pop
ret
cmpb
jne
ret
mov
test
je
mov
mov
add
push
push
call
mov
mov
push
push
call
movb
ret
push
mov
sub
push
mov
push
xor
cmp
je
mov
xor
inc
test
movl
movl
mov
mov
je
mov
mov
mov
mov
mov
lea
push
pushl
push
push
pushl
pushl
call
testb
mov
jne
testb
jne
neg
sbb
and
mov
pop
pop
leave
ret
push
lea
sub
mov
xor
mov
add
add
xor
decl
push
mov
je
andl
push
lea
push
lea
push
movl
movl
movl
mov
push
call
testb
jne
testb
jne
cmpl
jne
mov
push
call
mov
pop
push
push
call
xor
pop
mov
lret
add
or
add
or
push
lea
sub
mov
xor
mov
cmpsl
repz
add
or
push
mov
je
inc
add
add
incl
inc
or
mov
movl
mov
je
inc
add
mov
jge
lea
daa
out
inc
add
push
push
pushl
pushl
call
test
je
inc
add
add
test
les
jne
mov
pop
mov
inc
add
fs
add
or
push
lea
sub
mov
xor
mov
mov
mov
test
push
mov
je
andl
andw
push
push
lea
push
lea
lea
push
mov
movl
movl
mov
movl
movl
movl
mov
push
call
testb
mov
jne
testb
jne
test
jns
add
add
test
inc
loopne
jne
pop
mov
pop
mov
xor
pop
call
add
leave
ret
push
lea
sub
mov
xor
mov
test
mov
push
mov
push
mov
je
andl
andl
testb
je
mov
mov
test
push
mov
sbb
inc
add
add
orb
adc
add
aas
mov
pop
lea
lea
push
mov
movl
mov
mov
movb
mov
push
call
test
je
andl
lea
lea
push
pushl
mov
int3
mov
movl
mov
movb
mov
push
call
test
jne
pushl
lea
push
call
testb
jne
testb
jne
testb
jne
testb
jne
xor
pop
mov
pop
xor
pop
call
add
cmp
inc
add
mov
and
push
movzbl
push
movzbl
mov
or
shl
or
shl
or
mov
shr
movzbl
mov
imul
shr
movzbl
movzbl
imul
imul
add
add
cltd
mov
idiv
push
movzbl
lea
imul
add
cltd
pop
idiv
push
movzbl
add
imul
mov
pop
pop
cltd
pop
idiv
pop
ret
push
mov
sub
push
push
mov
shr
mov
push
pushl
mov
shr
mov
pushl
mov
shr
push
mov
mov
call
mov
mov
shr
push
mov
shr
push
pushl
call
add
cmp
mov
jb
cmp
jbe
cmpb
movb
movb
je
movzbl
shl
movzbl
mov
movzbl
movzbl
mov
mov
imul
cltd
mov
push
pop
idiv
mov
push
mov
sub
movzbl
movzbl
imul
cltd
pop
idiv
or
mov
shl
push
sub
movzbl
or
mov
imul
cltd
idiv
mov
movzbl
shl
mov
sub
movzbl
or
mov
mov
mov
sub
pop
imul
cltd
idiv
movzbl
push
add
movzbl
mov
sub
imul
cltd
pop
idiv
or
push
shl
add
movzbl
or
mov
sub
pop
imul
cltd
idiv
shl
add
movzbl
or
mov
mov
pop
pop
pop
leave
ret
push
lea
push
xor
mov
call
mov
mov
mov
push
call
test
je
xor
inc
pop
pop
ret
push
mov
push
push
mov
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
test
jbe
xor
jmp
lea
mov
mov
test
je
lea
cmp
je
mov
add
test
jne
add
cmp
jb
xor
pop
ret
mov
pop
ret
push
mov
push
push
mov
call
pop
neg
sbb
pop
neg
pop
ret
push
mov
push
mov
test
je
push
mov
test
je
mov
push
xor
cmp
jne
cmp
je
mov
mov
mov
mov
cmp
je
pushl
mov
call
testb
jne
cmp
jne
pop
pop
xor
pop
pop
ret
mov
mov
push
push
push
call
jmp
xor
jmp
cmp
je
mov
mov
cmp
jne
cmp
je
push
push
mov
call
jmp
cmp
jne
xor
jmp
push
jmp
push
mov
cmp
jge
pushl
pushl
pushl
pushl
push
pushl
mov
call
pop
ret
push
mov
push
mov
cmp
push
mov
push
push
jg
mov
add
shl
or
add
add
add
mov
cmp
jg
lea
shl
or
add
add
add
mov
cmp
jle
mov
add
mov
shl
mov
mov
or
add
add
mov
incl
mov
mov
mov
mov
mov
incl
mov
mov
sub
shr
add
mov
mov
add
cmp
jle
mov
cmp
movzbl
jg
mov
shl
or
add
add
add
jge
jl
mov
dec
push
lea
call
dec
push
lea
call
pop
pop
pop
pop
pop
leave
ret
movzwl
mov
shl
mov
or
add
add
mov
incl
mov
mov
mov
mov
mov
incl
mov
mov
sub
shr
add
mov
mov
add
decl
cld
shl
or
add
add
mov
decl
decl
dec
adc
or
add
add
mov
incl
mov
mov
mov
mov
mov
incl
mov
mov
sub
shr
add
mov
mov
add
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
movzwl
push
mov
push
xor
test
movl
je
lea
lea
test
jl
add
add
mov
mov
lea
mov
movzwl
add
cmp
je
cmp
jge
jmp
lea
movzwl
mov
mov
sub
cmp
mov
jg
mov
shl
or
add
add
mov
sub
mov
jne
xor
test
mov
je
cmp
je
lea
lea
add
subl
mov
jne
pop
pop
pop
pop
add
ret
cmp
jl
jmp
movzwl
mov
shl
mov
or
add
inc
add
mov
addl
movzbl
mov
mov
mov
mov
mov
addl
mov
sub
shr
mov
mov
add
mov
jmp
mov
mov
jmp
test
je
cmp
je
movzwl
mov
sub
mov
mov
cmp
jg
mov
shl
or
add
add
mov
sub
movzwl
mov
sub
mov
mov
cmp
jg
mov
shl
or
add
add
mov
mov
add
cmp
jg
shl
or
add
mov
jmp
cmp
mov
jg
movzwl
sub
mov
mov
cmp
jg
mov
shl
or
add
add
mov
mov
add
cmp
jg
shl
or
add
mov
jmp
movzwl
mov
shl
mov
or
add
inc
add
mov
addl
movzbl
mov
mov
mov
mov
mov
addl
mov
sub
shr
mov
mov
add
mov
mov
jmp
movzwl
mov
shl
mov
or
add
inc
add
mov
addl
movzbl
mov
mov
mov
mov
mov
addl
mov
sub
shr
mov
mov
add
mov
mov
jmp
movzwl
mov
shl
mov
or
add
inc
add
mov
addl
movzbl
mov
mov
mov
mov
mov
addl
mov
sub
shr
mov
mov
add
mov
mov
jmp
mov
lea
jmp
mov
shl
mov
or
movzbl
add
mov
addl
movzbl
mov
mov
mov
mov
mov
addl
mov
sub
shr
add
mov
mov
jmp
mov
shl
mov
or
movzbl
add
mov
addl
movzbl
mov
mov
mov
mov
mov
addl
mov
sub
shr
add
mov
mov
jmp
movzwl
sub
mov
mov
cmp
jg
mov
shl
or
add
add
mov
mov
add
cmp
jle
mov
shl
mov
or
movzbl
add
mov
addl
movzbl
mov
mov
mov
mov
mov
addl
mov
sub
shr
add
mov
mov
jmp
shl
or
add
mov
jmp
add
add
loop
dec
adc
or
add
inc
add
mov
addl
movzbl
mov
mov
mov
mov
mov
addl
mov
sub
shr
mov
mov
add
mov
mov
jmp
mov
mov
lea
lea
cmp
push
push
jne
or
pop
pop
ret
mov
mov
movzbl
cmp
jne
sub
sub
jmp
xor
inc
mov
and
shl
mov
shr
and
neg
sbb
neg
ret
push
mov
push
mov
andl
push
push
mov
lea
mov
push
call
cmpl
jne
test
jne
cmpl
jne
lea
push
mov
call
test
jne
mov
lea
push
mov
mov
call
cmp
jne
lea
push
call
mov
xor
inc
mov
and
shl
mov
shr
shl
or
lea
not
and
mov
lea
push
lea
call
or
pop
pop
pop
pop
pop
ret
mov
test
je
mov
test
jne
mov
mov
mov
mov
mov
cmp
je
ret
push
mov
mov
mov
pop
jmp
push
mov
test
jne
pop
ret
int3
int3
int3
int3
int3
movzwl
push
push
mov
xor
test
push
movl
je
lea
lea
test
movw
jl
push
lea
add
mov
movzwl
add
cmp
je
cmp
jge
mov
add
xor
test
mov
je
cmp
je
lea
lea
add
sub
jne
pop
pop
pop
pop
ret
cmp
jl
jmp
mov
mov
jmp
test
je
cmp
mov
mov
je
add
add
jmp
cmp
mov
jg
addw
jmp
mov
lea
jmp
addw
jmp
push
mov
pushl
lea
push
call
pushl
lea
push
call
lea
push
call
add
push
pop
movzbl
cmpw
jne
dec
cmp
jge
mov
imul
add
add
pop
ret
sub
push
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
cmp
jge
mov
sub
push
lea
add
mov
mov
mov
mov
mov
movzwl
movzwl
add
cmp
jg
cmp
mov
jg
addw
cmp
jge
xor
movzwl
movzwl
add
imul
add
cmpl
je
mov
movzwl
add
imul
add
mov
mov
add
subl
jne
mov
test
jne
pop
pop
pop
pop
add
ret
mov
mov
sub
mov
mov
jmp
addl
mov
mov
jmp
lea
cmpw
lea
je
addw
addw
addw
lea
sub
test
jg
test
je
mov
mov
mov
mov
movzwl
test
je
mov
mov
lea
lea
mov
subl
sub
cmp
jg
lea
mov
movzwl
cmp
jne
mov
sub
mov
test
jne
mov
sub
sub
test
mov
mov
jne
xor
inc
add
mov
xchg
jmp
scas
call
add
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
mov
mov
push
mov
fiadds
ljmp
sbb
insb
and
movl
mov
movl
jle
xor
lea
cmp
je
addl
mov
mov
mov
mov
add
cmp
jl
mov
cmp
jl
mov
mov
mov
cltd
sub
sar
cmp
jl
lea
mov
mov
jmp
lea
mov
lea
cmp
mov
jg
mov
mov
jge
mov
mov
movzwl
movzwl
cmp
jb
jne
mov
cmp
ja
add
mov
mov
movzwl
movzwl
cmp
jb
je
mov
mov
add
mov
cmp
jle
mov
mov
mov
sub
sub
cmp
mov
mov
mov
jge
mov
mov
mov
mov
mov
mov
lea
cmp
mov
mov
movl
jl
mov
mov
mov
cmp
jge
mov
mov
movzwl
movzwl
cmp
jb
jne
mov
cmp
ja
add
mov
mov
movzwl
movzwl
cmp
jb
je
mov
mov
add
mov
cmp
jle
mov
mov
mov
mov
mov
or
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
cmp
jb
movzbl
add
mov
movzwl
mov
mov
mov
mov
add
mov
cmp
mov
mov
jg
mov
mov
jge
mov
mov
movzwl
movzwl
cmp
jb
jne
mov
cmp
ja
add
mov
mov
movzwl
movzwl
cmp
jb
je
mov
mov
add
mov
cmp
jle
mov
mov
mov
mov
cmp
jge
addl
mov
mov
mov
mov
mov
call
mov
lea
push
call
add
pop
pop
pop
add
ret
mov
jmp
mov
cmp
jbe
jmp
movzbl
jmp
mov
cmp
ja
jmp
mov
cmp
jbe
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
lea
xor
mov
sub
lea
mov
add
add
movzwl
mov
add
cmp
jle
test
jl
xor
push
movzwl
test
je
movzwl
movzwl
add
mov
xor
mov
and
or
sub
shr
add
test
jg
shr
mov
add
cmp
jle
pop
mov
pop
pop
xor
call
add
ret
push
mov
push
cmpl
push
jle
mov
cmpl
jne
mov
call
mov
lea
push
call
lea
push
call
pop
pop
mov
call
add
mov
add
add
shr
shr
cmp
mov
jbe
mov
lea
cmp
jbe
cmpl
je
cmp
je
mov
cmp
jg
lea
shl
or
add
add
add
mov
inc
push
mov
inc
push
mov
call
lea
push
lea
push
mov
call
add
call
test
pop
je
mov
call
leave
ret
lea
mov
shl
mov
or
add
mov
add
incl
mov
mov
mov
mov
mov
incl
mov
sub
shr
add
mov
mov
add
pushl
leave
cmp
sete
mov
ret
push
mov
mov
cmp
je
mov
test
jne
pop
ret
push
mov
cmpl
je
mov
call
test
jne
mov
mov
push
call
andl
mov
mov
test
je
mov
mov
mov
mov
push
call
pop
ret
mov
pop
ret
mov
mov
test
je
pushl
pushl
push
call
add
cmp
je
mov
mov
xor
ret
push
mov
push
mov
mov
test
je
mov
lea
push
pushl
pushl
push
call
test
js
mov
push
xor
add
adc
mov
cmp
jne
xor
mov
mov
pop
pop
pop
ret
xor
jmp
mov
test
push
mov
mov
je
mov
test
je
push
push
call
mov
push
push
push
call
xor
pop
ret
mov
call
jmp
push
mov
mov
push
mov
test
jne
mov
test
jne
pop
pop
ret
mov
lea
push
push
call
mov
cmp
je
mov
push
push
call
jmp
mov
mov
push
movzbl
shr
and
neg
sbb
and
and
or
mov
mov
xor
cmp
mov
jne
and
cmp
mov
jne
mov
testb
jne
mov
push
push
call
pop
pop
pop
ret
mov
cmp
jne
jmp
cmp
jne
jmp
push
mov
push
mov
mov
mov
call
test
jne
push
pushl
mov
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
and
lea
push
push
pushl
call
mov
mov
pop
pop
pop
ret
xor
jmp
push
mov
push
mov
mov
mov
call
test
jne
push
pushl
mov
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
and
lea
push
push
pushl
call
mov
mov
pop
pop
pop
ret
xor
jmp
push
mov
mov
push
mov
call
test
mov
jne
mov
mov
call
test
jne
andl
cmpl
jne
lea
push
pushl
push
call
mov
mov
mov
pop
pop
ret
push
mov
sub
mov
push
mov
push
mov
cmpb
mov
mov
push
mov
je
mov
mov
mov
sub
cmp
jbe
inc
cmpb
jne
push
lea
push
pushl
call
mov
test
mov
je
andl
lea
push
push
push
call
add
cmpl
je
push
call
pop
mov
xor
inc
push
add
lea
mov
mov
mov
call
testb
mov
jne
testb
jne
mov
test
je
mov
push
mov
call
pop
add
mov
push
mov
lea
mov
call
mov
push
call
pop
pop
pop
leave
ret
push
push
push
pushl
mov
call
test
jne
push
push
call
test
pop
je
mov
andl
push
movl
movl
call
test
mov
je
mov
push
call
test
je
mov
mov
test
je
mov
push
push
call
pop
pop
ret
xor
jmp
xor
jmp
push
mov
sub
push
mov
mov
mov
call
test
js
mov
push
push
xor
mov
mov
mov
mov
push
mov
lea
mov
call
mov
mov
push
call
cmp
je
add
add
orb
call
mov
mov
lea
push
push
push
call
test
jne
mov
cmp
je
lea
push
mov
mov
push
call
cmpl
jl
mov
push
lea
mov
mov
call
mov
mov
lea
push
push
push
call
test
jne
mov
cmp
je
push
lea
mov
mov
mov
mov
mov
call
mov
mov
lea
push
push
call
test
jne
cmp
je
mov
mov
lea
push
push
call
test
lea
jne
mov
push
mov
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
lea
call
mov
pop
pop
pop
leave
ret
push
mov
push
mov
mov
mov
mov
test
push
push
je
pushl
mov
push
push
mov
mov
mov
call
call
pushl
mov
push
push
inc
mov
call
call
pop
pop
pop
pop
ret
push
mov
push
mov
test
je
push
mov
and
je
push
mov
test
push
mov
push
mov
sub
push
push
push
call
add
add
test
add
add
add
add
movsl
rolb
add
arpl
add
add
jnp
mov
add
xchg
jo
xchg
add
loope
add
fcmovb
lahf
add
add
fadds
cli
add
mov
fildl
mov
in
clc
pop
popl
push
push
call
add
cmpsb
add
xchg
cmpsb
scas
add
mov
mov
add
scas
add
jns
in
data16
add
add
add
jmp
test
add
add
add
loopne
fisubl
in
clc
pop
push
push
push
push
lea
push
push
push
push
push
push
lea
push
push
call
jp
scas
mov
add
fisubrs
mov
mov
arpl
cli
pop
add
add
add
pop
ljmp
std
add
lcall
push
push
push
call
add
add
scas
add
stos
mov
rorl
pusha
mov
jae
jne
add
add
lcall
jae
fildl
jl
jne
add
roll
add
add
add
arpl
imul
ret
mov
jns
lea
mov
pop
add
lcall
push
lea
push
lea
push
push
push
push
push
call
add
jnp
add
shl
sahf
add
loop
popa
arpl
jb
loopne
pop
fldl
out
gs
add
push
add
add
jl
cmc
add
jbe
pop
add
leave
stc
add
add
mov
add
jno
sti
add
add
add
testb
fsubrl
hlt
xchg
addb
pop
call
push
push
push
lea
push
push
push
lea
push
push
call
add
gs
add
jns
aad
hlt
add
popa
pop
insb
stos
add
faddl
xchg
shlb
shlb
add
push
clc
add
mov
xchg
add
add
js
jl
mov
pop
pop
add
in
loopne
lcall
add
iret
lea
push
push
push
push
push
push
call
js
add
add
add
mov
add
add
test
movsl
add
out
add
add
lcall
or
jb
add
push
push
push
push
call
add
add
test
in
xchg
movsb
orl
nop
pop
add
lea
add
add
clc
aad
add
add
fldcw
movsb
pushf
jb
add
rolb
mov
mov
call
add
jge
jp
add
add
sub
pop
ret
mov
push
push
call
add
into
addl
roll
push
mov
ja
clc
fwait
add
add
add
pop
fists
fmul
cmpsl
pusha
xlat
xchg
pusha
cmpsb
add
pop
loope
iret
aad
add
add
lods
push
mov
add
in
clc
lcall
pop
hlt
add
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
pop
mov
add
flds
push
mov
xchg
add
push
pop
test
lcall
mov
pop
add
into
add
mov
ret
add
add
add
add
jl
add
add
mov
add
add
xchg
add
add
lcall
ret
add
add
push
push
push
push
push
push
push
push
call
add
add
push
mov
mov
into
int3
xchg
add
xlat
add
pop
jle
add
mov
push
imul
jb
mov
mov
mov
in
push
fwait
test
mov
mov
push
add
sub
pop
add
push
lea
push
push
push
lea
push
push
push
push
call
mov
add
add
loopne
mov
mov
cwtl
stos
push
add
pop
add
scas
mov
mov
add
ficomps
add
jmp
add
roll
mov
out
jns
add
add
mov
out
data16
not
push
sub
pop
mov
xor
push
push
push
push
pop
add
inc
sub
sub
rol
xor
pop
dec
pop
push
push
push
push
lea
push
call
mov
add
cmpsb
leave
add
jmp
incb
add
add
movsl
mov
mov
lahf
mov
out
add
add
add
add
enter
scas
add
xlat
test
add
mov
add
add
pushf
xchg
add
push
add
mov
fidivrl
in
in
lcall
jne
push
lea
push
push
push
call
xchg
add
pop
pop
add
add
add
add
add
add
mov
imul
pushf
add
add
add
shlb
xchg
fsubrl
add
xchg
aam
add
lods
add
mov
mov
xchg
pop
sub
pop
call
push
push
lea
push
push
push
call
add
mov
in
data16
add
mov
add
test
add
pop
add
mov
xchg
add
add
testl
in
add
cld
add
push
jecxz
clc
add
add
out
add
add
jge
jmp
roll
jb
add
fiaddl
inc
lock
push
lea
push
push
call
add
lcall
mov
add
push
mov
xchg
add
fcmovne
insb
pop
repnz
add
mov
xchg
add
add
add
mov
add
pop
add
add
add
mov
enter
hlt
pop
lea
push
push
push
call
push
add
pop
add
jno
movsl
test
add
jno
add
jp
add
mov
testl
add
add
in
add
push
push
push
push
push
call
roll
data16
into
test
loop
cwtl
add
stos
add
add
insb
fxch
pop
lea
roll
add
xchg
sub
pop
pushl
push
push
push
push
push
call
add
int
mov
movsl
fbld
roll
ljmp
into
in
add
xlat
test
out
fbld
add
add
xchg
xchg
movsl
xchg
jo
add
mov
out
popa
cmpsb
add
lods
xchg
add
movsl
add
jne
push
push
call
ja
lock
in
add
ja
add
nop
in
jo
hlt
in
clc
clc
sti
add
mov
xchg
fcompl
shl
out
add
add
add
cld
jl
add
iret
add
add
lcall
mov
push
push
push
push
push
push
push
push
call
push
add
rcll
fwait
add
add
push
mov
mov
lea
xchg
add
add
xchg
mov
add
add
mov
add
ret
jmp
add
add
shlb
add
add
xchg
pusha
pop
out
xlat
add
sub
pop
pushl
pushl
push
lea
push
push
call
xchg
xchg
push
fistpl
cltd
movsl
popa
add
lret
sar
je
jl
cltd
add
addl
add
data16
mov
add
push
out
add
add
aam
mov
test
test
cmpsb
add
shl
in
pusha
jp
ret
add
jg
add
push
push
sub
push
or
inc
add
dec
sub
add
not
add
pop
dec
shl
pop
push
lea
push
call
movsb
pop
add
mov
shl
add
insb
pop
jbe
add
into
in
filds
xchg
cmpsb
iret
pushf
movl
ret
add
gs
xorl
add
add
ret
add
roll
aam
pusha
push
test
add
pop
fs
out
push
add
lcall
jne
call
push
push
push
push
push
push
lea
push
call
mov
shll
push
enter
add
ljmp
xchg
fists
imul
mov
add
ret
movb
add
or
leave
sti
add
add
xchg
repnz
jns
lods
mov
arpl
gs
mov
push
mov
push
push
push
not
push
xor
add
add
sub
shr
pop
inc
sub
dec
lea
pop
push
push
push
lea
push
call
loopne
add
add
fiadds
add
roll
add
stos
add
add
add
add
lcall
push
push
push
push
lea
push
lea
push
call
roll
jnp
add
mov
add
ret
pushf
imul
mov
shr
add
add
add
add
orl
add
sub
pop
push
push
push
call
xchg
add
filds
movsl
add
jp
push
out
loope
add
xchg
je
insb
add
add
mov
icebp
mov
add
xchg
mov
incb
cmc
add
mov
add
lods
push
mov
imul
xchg
add
add
imul
js
sub
pop
call
push
push
push
call
shlb
lret
out
sarl
in
insb
add
add
int3
pop
scas
stc
add
sti
push
sar
add
jns
sahf
outsl
rolb
add
add
add
hlt
lcall
clc
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
icebp
add
arpl
mov
add
shl
add
add
push
lds
test
loope
add
stos
add
mov
cmpsl
mov
test
add
add
testb
add
mulb
imul
add
roll
aad
add
mov
in
fcompl
push
push
push
lea
push
lea
push
push
call
lahf
add
add
add
add
add
add
pop
add
stos
mov
add
mov
add
mov
push
add
jno
add
add
mov
lret
jl
add
push
in
add
fcom
mov
pop
mov
push
lea
push
call
out
addr16
jbe
scas
fisubrs
add
int3
imul
add
mov
add
add
add
xchg
add
add
add
lcall
jbe
add
pop
outsl
add
sub
pop
add
push
push
push
push
push
push
push
push
lea
push
lea
push
call
add
shlb
faddl
add
mov
xchg
fcmovnu
add
repnz
add
add
roll
add
add
add
fs
sahf
cld
jl
add
jmp
insb
jb
add
jmp
nop
xchg
enter
add
push
xchg
pop
movb
cmc
add
lcall
ret
add
add
push
push
lea
push
push
push
call
add
shll
js
add
add
add
out
add
jle
out
pop
mov
jl
mov
add
mov
out
add
add
xchg
mov
je
mov
xchg
js
popa
add
add
add
push
hlt
push
xchg
movsb
pop
add
sub
pop
add
mov
xor
push
push
push
lea
push
lea
push
lea
push
call
fdivrl
test
arpl
add
add
js
add
add
mov
add
add
add
lds
pushf
mov
mov
mov
add
les
clc
add
mov
add
in
fwait
fs
push
add
arpl
loopne
in
call
push
push
push
push
call
imul
add
add
jnp
cwtl
push
add
add
add
add
add
stos
xchg
mov
imul
mov
sahf
add
out
add
xchg
test
add
stc
clc
xchg
out
bound
lahf
lods
xchg
jb
sub
pop
mov
push
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
jle
lods
push
repnz
mov
fbstp
xchg
popf
push
push
repnz
add
mov
mov
add
loope
mov
fs
pop
xor
push
push
lea
push
push
push
push
push
push
push
call
in
pop
into
add
add
pop
fldenv
aad
jne
jge
je
test
xchg
loopne
xlat
mov
xchg
pop
movsl
add
cltd
add
sub
pop
add
push
push
push
call
mov
push
out
movl
push
roll
fidivrs
mov
add
mov
jae
iret
add
mov
mov
sub
pop
add
push
push
push
lea
push
call
add
mov
add
mov
add
cld
add
ret
push
roll
jne
add
movsl
add
add
jle
xchg
mov
add
add
ficomps
add
add
repnz
out
push
pushf
add
mov
lods
pusha
add
fdivl
mov
roll
pop
pop
push
push
call
aad
add
test
add
add
lods
add
jmp
xchg
add
lock
mov
add
add
add
notl
scas
lds
add
push
call
add
cmpsl
jmp
xchg
mov
roll
ljmp
clc
pop
mov
push
push
push
lea
push
push
push
push
lea
push
call
add
push
bound
stos
add
add
pusha
pop
add
hlt
pop
add
add
fucomi
incb
add
pop
mov
mov
hlt
popa
lahf
push
iret
mov
testl
pop
lds
pushf
push
push
imul
push
call
lret
scas
movsl
bound
or
arpl
xchg
add
fdivl
fwait
rcr
js
insb
ja
xchg
in
add
add
lret
sub
pop
add
push
push
push
push
call
stos
add
test
cwtl
nop
arpl
fdivl
add
hlt
add
add
add
imul
xchg
add
pusha
push
mov
shlb
add
add
xchg
popa
mov
in
lock
push
push
push
lea
push
call
add
lods
les
fwait
add
pop
lret
jmp
xchg
loope
add
enter
xchg
push
mov
cmc
jns
out
movsl
out
loopne
mov
in
xchg
add
fiaddl
cld
insb
add
xchg
add
add
mov
add
add
arpl
aad
imul
lea
mov
sub
pop
mov
push
push
lea
push
lea
push
call
jge
int
mov
add
add
std
add
add
push
add
add
add
add
add
popl
imulb
add
mov
imul
add
cmpsb
add
repnz
mov
add
rolb
fs
lods
add
pop
int
xchg
add
add
lcall
add
push
push
push
lea
push
call
fdivl
int
jnp
ret
xchg
pop
int
add
mov
cltd
xchg
in
add
std
add
jb
add
add
add
add
push
sub
pop
add
push
lea
push
push
push
call
add
filds
in
xchg
add
popa
add
add
add
pop
cmpl
mov
add
stos
popf
ljmp
mov
add
enter
and
push
mov
inc
je,pn
push
push
push
push
push
push
call
fstps
mov
push
add
pushf
add
std
out
add
add
jnp
add
jbe
bound
xchg
add
in
stos
scas
mov
bound
iret
lods
roll
insb
push
add
cld
testb
mov
in
add
pop
xchg
add
lock
add
add
lock
add
add
in
fdivr
lcall
movsb
pop
push
push
push
call
add
add
add
xchg
xchg
ja
jb
sti
add
add
imul
pop
push
pushf
jmp
pop
mov
add
mov
lret
movsl
cltd
ror
enter
jne
lcall
add
testl
stc
arpl
add
mov
lcall
pop
hlt
push
push
push
call
add
popf
out
lahf
add
out
push
iret
jmp
push
ret
push
scas
push
xchg
add
arpl
add
mull
xchg
je
mov
lds
add
loope
sub
pop
add
push
push
lea
push
push
push
push
call
add
add
lret
addb
fadds
aad
fnstcw
testl
mov
shll
fs
flds
add
add
ret
add
add
add
push
push
call
add
add
mov
add
out
add
popl
lods
add
mov
push
fadds
mov
add
sahf
add
loope
cmpsb
xchg
add
add
roll
popa
mov
xchg
add
fs
add
movsb
add
pop
mov
xor
push
push
push
push
call
jbe
jb
je
out
cld
iret
add
add
push
sbb
movsl
into
aam
rolb
into
lret
mov
ja
add
roll
pusha
fs
jb
into
cmpsb
lret
jl
add
in
push
enter
pop
jl
hlt
push
add
add
enter
jne
add
add
pop
mov
xor
push
push
lea
push
push
push
lea
push
lea
push
call
add
add
mov
xchg
mov
test
sarl
push
mov
add
xorl
mov
jmp
add
ja
mov
add
mov
add
add
out
add
sti
icebp
sub
pop
mov
push
push
lea
push
lea
push
lea
push
call
mov
in
mov
sti
mov
out
pop
add
xor
mov
add
mov
mov
iret
cltd
insb
cli
pop
into
cli
jle
add
add
add
pop
add
jl
in
lock
lcall
or
push
push
push
push
push
push
push
push
call
add
add
push
push
mov
xchg
shrb
add
add
push
mov
mov
fiaddl
pop
add
enter
push
lds
les
add
push
rol
pop
add
push
inc
pop
add
push
xor
dec
inc
pop
mov
push
push
not
not
push
or
not
add
inc
xor
inc
add
sub
inc
ror
xor
pop
shl
pop
push
push
call
add
je
movl
push
pop
test
mov
push
add
int
pop
add
add
scas
fdivrs
clc
pop
pushl
push
xor
shr
shr
pop
call
push
add
pop
push
push
push
shl
inc
inc
push
xor
add
dec
ror
dec
sub
add
lea
pop
add
pop
push
push
push
lea
push
push
push
push
push
push
call
shr
add
add
sti
sbb
mov
mov
neg
add
mov
add
add
faddp
add
lcall
push
lea
push
push
push
push
push
lea
push
push
lea
push
push
call
push
add
push
test
push
jp
jnp
mov
add
add
divb
add
cltd
add
add
mov
out
mov
loope
pop
andl
add
lods
push
add
add
xchg
jno
mov
js
add
add
xchg
add
add
lea
push
push
lea
push
lea
push
push
push
call
add
fisubrl
push
rcrl
shlb
add
movl
movsb
cld
js
add
add
add
add
add
ljmp
jne
add
add
mov
addl
add
rclb
pop
push
push
push
push
call
add
add
add
outsl
add
lret
add
add
add
jmp
add
xchg
in
mov
pop
hlt
add
add
push
sub
pop
mov
push
push
call
add
add
and
movsb
add
push
cli
jp
add
add
roll
cltd
add
lret
add
add
out
sti
lret
add
pop
pop
add
scas
jp
bnd
mov
in
clc
lcall
push
xor
shl
pop
push
push
push
push
push
push
lea
push
push
call
fisubl
insb
mov
lahf
add
add
add
add
add
xlat
jne
add
add
add
pop
add
stos
out
roll
add
add
add
mov
cmc
sub
pop
mov
push
push
call
add
add
into
lods
add
add
mov
add
fwait
add
mov
add
lods
shll
add
int
push
pushf
pushf
mov
pop
sub
pop
add
push
not
pop
add
push
not
lea
pop
add
mov
push
push
lea
push
push
push
call
fiaddl
mov
mov
mov
jp
add
add
mov
add
mov
xchg
mov
rolb
movb
xlat
cmpsl
lds
loop
push
movsb
arpl
rolb
pop
xor
push
push
lea
push
push
lea
push
push
push
push
push
call
jae
movsl
add
add
add
pop
fwait
into
test
pop
add
add
jo
mov
pop
mov
movsl
mov
icebp
cltd
mov
les
add
negb
push
pop
add
push
push
lea
push
push
call
jl
aad
sahf
into
mov
pop
add
add
mov
add
negb
insb
mov
add
out
jb
addb
push
add
mov
xchg
add
pop
in
add
mov
test
pusha
add
scas
add
mov
add
add
add
push
push
sub
add
inc
pop
mov
xor
push
pop
add
pop
push
dec
pop
mov
xor
push
push
lea
push
push
push
push
call
pusha
add
pop
mov
arpl
pop
add
int
cmpsl
jo
push
add
add
add
test
xchg
add
jge
testb
pop
rep
mov
xor
push
push
lea
push
call
jle
pop
pop
insb
test
add
mov
rcrl
add
mov
mov
fcomps
push
add
fiadds
add
movsb
movsb
jb
push
add
mov
add
add
cmpsl
in
mov
add
jl
incb
add
mov
add
loopne
xchg
lea
add
leave
je
push
push
lea
push
call
add
loopne
add
mov
add
mov
add
cwtl
movsb
iret
xchg
add
add
lret
add
jle
in
hlt
pop
mov
xor
push
dec
pop
mov
push
push
push
push
push
lea
push
push
call
add
cmpsb
mov
add
jo
push
mov
add
in
ljmp
mov
filds
add
aad
aam
mov
lcall
adc
push
push
push
push
push
push
push
push
call
mov
add
mov
add
jecxz
add
cli
add
add
out
iret
shlb
mov
ljmp
add
pop
add
push
pop
add
push
push
push
push
push
push
call
pop
add
lea
scas
add
mov
jo
add
add
add
cmpsl
divb
add
in
jno
mov
lret
jp
mov
add
shl
sti
add
in
call
add
push
push
lea
push
push
push
push
push
lea
push
call
add
add
add
add
mov
cltd
push
lret
out
mov
mov
cwtl
mov
sub
pop
push
mov
push
push
push
push
push
lea
push
call
add
add
stc
jp
jae
pop
jmp
add
add
pop
ja
icebp
pop
pop
add
add
movsl
add
test
xor
push
lea
push
call
fcompl
cmc
mov
cmpsb
add
repnz
fstps
add
lds
cld
test
lcall
add
add
mov
add
mov
add
add
add
addl
lcall
les
sub
shl
pop
add
pop
push
rol
inc
pop
rep
push
pop
mov
push
push
push
lea
push
call
cld
mov
add
nop
mov
add
push
into
movsl
pop
add
mov
add
std
push
add
add
add
xchg
fld1
mul
aad
add
add
imul
mov
add
arpl
push
adc
in
add
add
xor
push
lea
push
push
push
call
std
add
pop
fcomps
mov
add
jbe
in
push
popa
addl
data16
popa
add
mul
push
out
test
cmpsb
add
flds
add
test
mov
pop
xchg
add
xlat
add
mov
push
test
mov
addl
jmp
in
lock
add
push
push
push
push
push
push
push
push
lea
push
push
call
shll
add
in
mov
add
pop
add
add
fcomps
add
add
add
popa
add
add
add
stos
out
jl
add
jnp
lahf
xchg
add
iret
fsts
add
in
fdivr
lcall
leave
je
mov
push
push
push
lea
push
push
push
call
xchg
in
movsb
add
pop
mov
add
fs
add
cwtl
mov
add
in
add
add
add
pop
add
lahf
out
jne
mov
add
hlt
add
call
add
jns
jge
in
call
add
add
push
push
push
push
push
call
call
mov
hlt
lds
mov
add
pusha
lock
add
test
add
pop
negb
add
add
xchg
add
add
mov
jnp
jecxz
pushf
int3
arpl
cmpsb
jno
add
jnp
insb
fisubs
mov
mov
rcl
movsb
add
lcall
movsb
push
dec
pop
pop
push
push
xor
push
or
inc
add
sub
shr
xor
sub
xor
ror
inc
pop
lea
dec
pop
push
ror
sub
pop
pop
mov
push
push
push
push
call
mov
add
mov
mov
mov
add
repnz
add
test
add
add
lds
xchg
mov
add
push
mov
add
mov
jmp
stos
add
add
mov
lcall
sarl
in
lock
mov
push
inc
pop
mov
push
push
push
push
push
push
call
add
int3
add
scas
iret
add
add
stos
in
add
lock
add
add
add
mov
add
lods
loop
rclb
xchg
roll
arpl
ljmp
add
adcl
xchg
mov
add
popa
add
popa
in
icebp
mov
push
lods
add
add
add
in
call
ror
add
pop
push
push
add
add
ror
pop
mov
add
push
push
lea
push
lea
push
push
push
push
push
push
push
call
in
jge
scas
clc
popf
pop
add
gs
add
mov
add
pushf
mov
push
add
mov
int
pop
in
mov
stc
add
test
add
jp
add
in
fdivr
lcall
push
inc
sub
inc
pop
push
push
push
lea
push
push
push
push
push
push
call
push
add
push
mov
in
fldl2e
mov
push
movb
add
scas
add
in
nop
enter
pop
add
lods
jmp
hlt
add
add
fiadds
add
bound
insb
add
add
add
jb
push
jbe
jp
add
jmp
cwtl
arpl
in
add
add
mov
pop
sahf
add
pusha
add
lcall
mov
push
push
push
push
push
lea
push
push
push
call
xchg
ja
out
xchg
movb
add
xchg
add
add
popl
mov
add
mov
add
add
subb
bound
sub
pop
pop
push
sub
inc
lea
pop
pop
push
sub
sub
sub
pop
pop
push
push
push
push
push
push
call
mov
add
stc
add
mov
add
cmpsb
cmc
loope
gs
jb
pop
call
bnd
mov
call
pop
push
lea
push
push
lea
push
call
mov
push
lods
mov
std
rcll
mov
add
mov
popf
add
stos
mov
sahf
mov
push
add
add
jbe
cltd
add
add
add
add
lock
lcall
push
dec
pop
ret
push
xor
shr
inc
pop
push
push
push
push
lea
push
lea
push
push
call
cli
add
test
add
add
test
push
add
mov
hlt
addl
add
add
repnz
andl
fsubp
jl
outsl
pop
add
add
sahf
mov
add
sub
pop
mov
add
push
push
lea
push
lea
push
lea
push
push
call
add
adc
leave
in
xchg
movsb
sahf
mov
test
jmp
jp
jbe
std
xchg
push
add
add
push
add
add
add
pop
icebp
sbbl
add
clc
add
rol
add
add
add
add
pop
pushf
xchg
add
insb
add
sub
pop
push
push
shl
rol
rol
pop
push
push
push
shl
not
inc
sub
pop
push
movl
push
push
push
push
call
add
test
fildl
add
lahf
mov
lock
leave
outsl
mov
cmc
mov
outsl
hlt
loop
movl
add
push
popl
add
in
lock
lcall
inc
clc
incl
add
add
adc
xchg
add
mov
call
add
pop
add
add
mov
xchg
add
rcrb
add
fcompl
int3
fsubp
data16
add
add
sahf
add
pop
add
flds
outsl
lds
pusha
gs
add
add
add
imul
add
sub
pop
mov
push
xor
not
rol
pop
pop
push
push
lea
push
push
push
lea
push
push
push
push
call
xchg
bound
add
mov
jbe
add
out
add
add
add
add
mov
out
add
add
jl
lahf
gs
in
lods
pusha
add
add
std
mov
add
add
aad
add
aad
add
test
add
flds
add
add
mov
add
add
push
jne
in
fdivr
lcall
pop
push
rol
xor
pop
pop
push
push
push
push
push
push
call
add
add
into
mov
push
mov
pop
mov
add
add
add
arpl
popa
lods
add
jmp
loop
cmc
mov
jne
jae
jmp
sub
pop
leave
ret
push
not
pop
push
push
shl
pop
mov
push
push
push
push
push
push
push
push
call
add
add
testb
stc
push
sarl
testb
add
mov
add
xchg
pop
jns
hlt
add
add
addb
mov
imul
pop
jae
mov
popf
add
cld
addl
add
jb
hlt
mov
jno
pushf
add
xchg
sub
pop
add
push
push
push
lea
push
push
lea
push
push
call
add
pop
add
aad
into
add
jecxz
pop
add
add
mov
pop
iret
fldl
xchg
mov
xchg
cwtl
jae
jb
hlt
add
jmp
push
push
scas
add
add
add
mov
hlt
scas
lahf
add
sahf
incb
add
scas
jecxz
nop
add
call
push
lea
push
push
call
std
add
mov
add
ja
fdivrl
mov
push
add
loopne
add
cmpsl
add
add
clc
lock
lahf
ret
lock
lcall
testl
push
push
push
push
lea
push
push
lea
push
push
push
push
call
jge
add
mov
loope
rcl
add
add
mov
stc
popl
shl
xchg
xchg
mov
lcall
push
outsl
pop
add
fcmove
pop
add
add
add
add
rolb
pusha
add
lods
mov
loop
out
add
add
add
int3
add
add
shll
mulb
in
fdivr
lcall
inc
or
push
push
push
lea
push
push
push
call
popl
add
pop
idiv
add
add
cwtl
add
lret
mov
out
add
roll
add
lcall
pop
push
push
push
call
mov
mov
xchg
loopne
pop
add
jns
cwtl
outsl
leave
jp
jp
add
add
add
pop
out
int
imul
icebp
int
add
add
aam
add
add
call
rcrl
add
addl
sti
add
call
push
xor
shl
dec
pop
mov
push
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
jl
addl
ret
add
mov
ja
fs
add
cmpsb
mov
mov
call
pop
mov
mov
sub
pop
pushl
push
push
push
push
push
push
call
add
ja
out
push
stos
add
popf
stos
add
add
add
push
add
jge
xchg
add
sub
pop
push
push
push
lea
rol
shl
pop
call
cmpl
jne
push
push
push
push
push
push
push
push
call
add
ljmp
add
add
add
imul
add
pop
ljmp
jl
fnstsw
frstor
fldl
add
aad
rclb
add
add
xchg
add
lahf
les
call
sub
pop
pop
push
push
lea
push
push
push
lea
push
push
push
call
push
add
mov
out
int
add
jmp
xchg
out
in
lret
sahf
je
add
addb
into
add
add
fldl
add
pop
add
gs
jl
xchg
mov
jns
add
add
in
loopne
pop
pop
push
push
lea
push
lea
push
push
push
push
push
push
push
call
pop
add
add
sahf
add
jmp
jle
xchg
pop
add
iret
mov
test
lea
loop
call
mov
rolb
mov
add
add
idivb
je
add
sub
pop
pop
push
push
push
push
push
lea
push
call
add
add
fildl
pop
jl
fdivrl
add
movsb
add
push
mov
add
mov
xchg
cmc
add
pop
mov
mov
rorb
push
add
hlt
test
in
call
add
loopne
pop
push
push
rol
pop
mov
push
ror
add
pop
add
push
push
push
push
lea
push
push
push
call
add
add
lahf
cld
cmc
mov
jecxz
xchg
xchg
add
rcll
imul
add
push
add
fcoms
gs
add
cltd
add
add
lds
jno
jno
add
mov
in
in
push
push
rol
pop
push
push
push
dec
pop
push
movl
push
sub
dec
pop
push
call
push
push
push
push
lea
push
call
insb
jmp
mov
int3
add
pop
iret
xchg
mov
pop
add
movsl
scas
insb
in
add
fldl
icebp
mov
mov
add
add
nop
loope
add
cmpsb
add
lcall
adc
push
push
lea
push
lea
push
call
pop
add
add
xchg
imul
filds
add
mov
add
xchg
add
insb
add
addb
mov
add
sub
pop
call
push
sub
not
rol
pop
subl
cmpl
jne
push
push
push
push
push
push
push
call
jp
mov
hlt
aam
stos
testb
mov
add
add
add
out
jbe
add
pop
mov
mov
xlat
int
add
filds
add
hlt
in
add
fdivrs
add
add
pop
mov
clc
shrb
in
in
pop
pop
push
sub
dec
pop
pop
pop
push
lea
push
push
lea
push
push
push
lea
push
lea
push
call
lret
les
jge
icebp
fdiv
insb
iret
add
mov
jne
add
mov
xchg
lea
jno
test
cltd
push
add
arpl
add
push
add
aad
pop
xchg
add
arpl
add
add
lcall
push
push
lea
push
lea
push
call
into
jl
add
jne
add
aam
lods
add
add
xchg
add
out
add
push
jno
aam
fiadds
in
jbe
mov
jmp
jp
add
pop
gs
add
sub
pop
ret
push
shl
inc
xor
pop
push
push
push
push
push
push
push
push
push
call
add
add
jle
add
mov
add
jo
add
push
sahf
add
je
jge
in
loopne
lcall
in
push
lea
push
push
push
call
scas
add
mov
stos
lods
jmp
add
add
add
popf
test
loopne
lock
add
pushf
add
jne
data16
push
int
in
lock
lcall
cld
push
push
ror
sub
xor
pop
push
push
push
push
push
push
push
push
lea
push
call
cmc
add
mov
add
xchg
pop
rolb
mov
add
insb
pop
mov
add
add
add
add
add
add
add
add
mov
pusha
add
add
push
addl
pop
push
push
push
xor
add
ror
push
xor
add
shr
sub
xor
pop
shr
pop
push
ror
pop
pushl
push
push
push
lea
push
lea
push
push
lea
push
push
lea
push
call
add
pop
lahf
loopne
rorb
add
xchg
add
mov
mov
add
adcb
add
hlt
divl
add
xchg
testl
mov
push
add
pop
in
fcom
std
loopne
add
mov
pop
add
imul
cmp
add
lea
push
call
pop
add
add
push
add
add
add
xchg
add
xlat
add
xchg
add
add
jno
add
add
test
arpl
add
pop
mov
mov
addl
fiadds
cmpsb
in
pop
iret
add
lcall
shrb
mov
es
mov
add
add
add
lock
ror
sub
add
pop
add
not
pop
push
sub
not
rol
dec
pop
pushl
push
push
lea
push
push
push
lea
push
call
xchg
in
mov
xchg
push
push
sti
add
add
add
aad
pop
mov
jne
jbe
add
idivl
push
xchg
add
xchg
xchg
test
add
clc
add
add
add
cld
enter
mov
add
shrb
testb
sub
pop
call
push
not
xor
pop
call
push
push
inc
add
push
sub
add
not
xor
inc
sub
sub
add
pop
not
shl
shr
not
pop
push
push
push
push
call
aad
push
xchg
add
movsb
add
add
sti
jb
lcall
pop
mov
pop
jge
add
add
addb
add
add
aad
add
add
xchg
js
ljmp
lcall
jne
call
push
push
push
push
push
call
sahf
add
mov
add
xchg
add
add
fcomps
icebp
add
jae
mov
testb
add
outsl
pop
add
add
icebp
out
iretw
cmc
add
sub
jns
enter
xchg
pop
test
jns
jns
cmpsb
lds
insb
sub
pop
call
push
add
shl
add
pop
mov
lea
push
sub
pop
sub
push
add
rol
not
shl
pop
mov
push
inc
sub
rol
add
pop
shr
push
sub
not
rol
pop
add
mov
push
push
push
push
lea
push
push
push
push
push
call
in
add
shll
loopne
movsl
add
push
add
test
add
add
jo
add
xchg
xchg
xchg
pushf
mov
stos
mov
xchg
add
cwtl
add
imul
roll
lcall
andb
or
push
lea
push
push
lea
push
call
add
push
jge
xchg
mov
jo
add
mov
mov
mov
add
lea
mov
add
lret
popf
mov
add
loop
mov
data16
add
push
test
add
sub
pop
add
mov
push
sub
shl
pop
mov
push
sub
dec
lea
add
pop
cmp
jne
push
ror
inc
pop
cmp
jne
push
lea
push
lea
push
push
call
jae
mov
add
imul
add
pop
mov
add
add
mov
nop
pop
add
popf
push
loope
add
add
add
lcall
inc
adc
add
add
add
pop
test
xor
lea
push
push
lea
push
push
push
call
add
add
push
add
out
mov
add
mov
fdivrl
add
add
fadds
jnp
rolb
fstp
lock
incb
xor
add
mov
push
shl
pop
mov
sub
jne
push
ror
shr
pop
mov
push
push
push
push
push
push
push
push
push
call
add
add
mov
lcall
fiaddl
in
icebp
nop
flds
mov
add
loopne
add
add
enter
clc
jne
add
ret
xchg
orl
jo
pop
mov
add
push
xchg
mov
add
add
pushf
mov
hlt
add
mov
in
fcompl
add
add
push
push
push
push
push
call
icebp
aad
add
mov
push
add
repnz
add
push
add
stc
mov
hlt
mov
rorl
mov
std
fwait
push
faddp
mov
add
lcall
cmp
add
push
not
ror
pop
mov
push
rol
pop
mov
push
lea
pop
cmp
jne
push
push
push
push
push
push
push
push
push
call
add
fidivl
mov
pop
mov
jo
ljmp
popf
std
faddl
clc
add
aad
cmpsl
mov
fidivs
add
fstpl
mov
jae
stc
sub
pop
mov
push
lea
xor
add
pop
movl
jmp
push
sub
pop
mov
cmpw
jne
push
push
push
call
je
xlat
cmpsl
mov
mov
mov
xchg
ljmp
roll
push
loope
add
test
lods
mov
cmpsl
add
hlt
pop
mov
movl
push
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
mov
scas
lods
add
pop
add
in
add
into
add
sahf
add
std
leave
add
add
add
add
add
leave
movsl
jo
call
add
arpl
add
push
loopne
bound
add
add
stos
mov
fcomps
mov
pushl
push
push
push
push
push
call
repnz
pop
add
add
mov
mov
test
aad
movsb
not
add
in
popa
add
add
hlt
add
add
fnstcw
add
add
out
add
movsl
jbe
push
shrl
push
add
in
in
lcall
push
rol
ror
shr
pop
mov
push
xor
sub
lea
pop
mov
push
push
push
push
push
push
push
push
push
lea
push
call
into
push
add
xchg
add
mov
xchg
jge
mov
lret
imul
iret
mov
mov
mov
add
roll
add
mov
add
add
roll
add
ja
shl
rolb
xchg
sub
pop
mov
push
push
shr
shr
not
sub
push
or
inc
add
dec
xor
sub
lea
shr
pop
rol
lea
add
pop
push
push
push
push
push
call
xchg
pop
test
popf
add
leave
add
loopne
filds
sahf
push
pop
stos
add
jge
in
mov
fadds
xchg
test
pop
movsb
add
jp
add
aam
ja
jne
mov
sub
pop
push
call
push
sub
sub
pop
cmpl
je
push
push
ror
dec
push
or
inc
add
inc
inc
xor
sub
sub
lea
add
shl
shr
pop
shl
dec
pop
push
rol
pop
push
push
push
lea
push
push
push
call
scas
add
mov
jl
mov
jns
add
jge
mov
jb
add
mov
mov
popf
gs
adcl
test
add
popa
pop
jae
cmc
roll
jbe
sub
pop
call
push
shr
shl
sub
pop
cmpl
je
push
push
ror
inc
add
xor
push
xor
add
add
dec
add
sub
add
xor
add
ror
pop
lea
dec
rol
shl
pop
push
lea
add
sub
sub
pop
push
push
dec
pop
call
push
lea
sub
shr
pop
cmpl
je
push
push
xor
push
xor
add
add
sub
sub
add
pop
pop
push
lea
push
push
lea
push
push
push
call
push
mov
in
scas
add
xlat
int3
add
iret
add
add
mov
add
mov
pop
out
add
cmpb
into
int
jo
test
cmpsb
test
movsl
add
add
add
js
jge
add
in
call
xor
add
mov
jbe
jmp
mov
push
lea
push
call
add
mov
leave
xchg
movsb
std
int3
xchg
nop
add
push
add
fnsave
cltd
push
add
pop
fbld
add
sub
pop
cmpl
je
push
push
dec
sub
push
push
pop
add
shl
sub
pop
add
shl
pop
push
push
lea
push
push
call
int3
xchg
push
pop
add
aad
add
jmp
add
xchg
imul
fldl
shl
add
add
add
add
jnp
mov
add
lods
jecxz
lret
nop
jmp
push
add
out
leave
add
add
add
add
lock
push
call
push
add
shr
inc
sub
pop
cmpl
je
push
push
dec
inc
rol
xor
push
and
add
lea
xor
sub
shr
pop
dec
inc
pop
push
push
push
lea
push
push
lea
push
call
and
add
add
add
mov
roll
xlat
mov
fisttpll
cmpsb
add
addr16
add
leave
shlb
mov
jo
pop
push
call
int3
mov
push
push
xchg
std
push
mov
mov
call
push
call
push
push
call
add
pop
add
add
fstpt
add
add
xchg
out
add
jmp
add
add
add
add
pusha
pop
add
jno
cmc
add
add
js
fldl
mov
push
lret
add
pop
test
sub
pop
cmpl
je
push
push
add
push
sub
add
sub
sub
shr
dec
pop
xor
add
pop
push
push
lea
push
push
push
push
call
pop
add
add
imul
pop
mov
mov
add
fistpl
add
add
mov
out
xchg
filds
mov
imul
scas
call
lret
jo
sub
pop
push
push
push
push
push
push
push
push
push
push
call
add
add
fwait
add
add
mov
add
sub
enter
mov
add
movsb
adc
popf
pop
jge
in
add
add
into
sahf
add
add
pop
bound
add
test
add
gs
mov
mov
push
lcall
add
or
rol
je
push
push
add
sub
push
sub
add
sub
inc
add
pop
inc
inc
pop
push
dec
shl
not
pop
push
push
lea
inc
inc
pop
call
cmpl
je
push
push
push
and
add
inc
sub
shl
pop
sub
shl
pop
push
push
lea
push
push
lea
push
push
push
call
xchg
add
in
add
pop
add
add
add
add
aad
mov
incb
out
mov
add
add
rorb
lds
cwtl
add
fs
sahf
sub
pop
push
push
push
push
push
push
push
call
mov
add
add
lcall
add
add
add
push
fsubr
jmp
jle
add
clc
mov
add
mov
add
add
add
xchg
sub
pop
call
cmpl
jne
push
push
call
std
add
add
popf
lods
add
add
gs
add
xchg
fiaddl
clc
add
add
data16
add
jge
sar
loop
jle
add
out
add
repnz
test
add
add
fistl
push
fildl
add
addl
add
int3
stc
add
push
pop
add
xchg
jecxz
xchg
sub
pop
mov
push
lea
push
push
push
call
jo
add
add
out
push
cmc
std
add
je
jmp
add
mull
mov
bound
in
lock
movl
push
add
pop
jmp
xor
push
push
call
add
insb
jb
cmpsb
add
std
fiadds
scas
js
jle
add
testb
add
add
xorb
pop
xchg
mov
stc
aam
lock
add
out
mov
in
clc
lcall
pop
push
ror
xor
rol
pop
pop
push
shr
inc
add
shr
pop
pop
leave
push
lea
push
push
push
lea
push
push
push
call
xlat
cld
call
add
add
testl
add
add
rcr
fisubs
add
shrb
push
add
mov
ret
push
shl
pop
push
mov
push
shr
pop
add
cmpl
jne
push
push
ror
rol
push
or
not
add
lea
sub
shl
lea
pop
xor
dec
inc
sub
pop
push
push
push
call
bound
aam
add
add
add
imul
mov
cld
pop
icebp
add
xchg
add
test
hlt
pop
pushl
push
lea
xor
pop
call
push
push
ror
sub
inc
pop
call
jmp
push
push
call
fucomi
add
outsl
in
push
loopne
add
add
add
add
add
movsl
xchg
pop
out
cmp
add
cltd
add
lcall
jge
add
test
inc
or
mov
mov
lock
push
push
lea
push
push
push
push
call
sarb
in
addr16
add
jae
add
add
mov
out
xchg
mov
add
mov
pop
loopne
add
add
mov
in
fdivr
lcall
movsb
sbb
add
push
sub
add
pop
jmp
push
lea
ror
ror
rol
pop
cmpl
jne
push
push
dec
xor
dec
not
push
xor
add
not
sub
sub
pop
not
inc
dec
pop
push
push
lea
push
push
call
pushf
mov
add
pop
mov
movsl
add
mov
mov
cmp
add
mov
push
out
add
mov
xchg
lock
add
sbbb
shl
mov
pushf
add
add
add
add
add
out
stos
add
cmpsb
fyl2x
add
jl
pop
fldenv
sub
pop
pushl
push
push
push
call
xchg
popa
add
jle
add
cwtl
js
movsb
jne
out
mov
add
call
mov
add
add
loopw
add
iret
add
add
out
jns
aad
add
add
aam
add
lods
js
ffreep
sub
pop
call
push
push
push
call
mov
pop
mov
sahf
pop
add
add
add
add
lret
mov
add
mov
out
fnstsw
add
lret
push
rcrb
add
add
add
call
mov
add
lcall
shr
imul
lea
push
call
mov
add
clc
les
jnp
add
aad
add
add
add
popa
add
lea
idivb
sub
pop
cmpl
je
push
push
push
lea
push
push
call
pop
lods
data16
add
out
add
test
add
pop
push
loopne
mov
add
push
add
or
add
mov
add
ret
add
addl
xchg
add
movsb
jge
jae
sub
pop
cmpl
jne
push
xor
pop
mov
push
push
call
add
popa
add
add
xchg
out
pushf
mov
add
mov
filds
jge
mov
pushf
cmpsl
add
fadds
add
xchg
int
add
lds
loope
clc
mov
in
clc
pop
mov
push
push
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
add
add
lds
add
scas
mov
xchg
xchg
add
jl
add
pop
test
xlat
add
add
call
lahf
pop
fwait
out
out
pop
push
push
add
into
add
loopne
xchg
insb
mov
add
lret
out
add
push
add
pop
jmp
push
push
sub
sub
shl
lea
push
push
pop
add
sub
sub
lea
add
pop
add
inc
not
pop
push
push
push
push
call
add
lods
pushf
ja
call
sahf
in
add
leave
add
xlat
test
add
cltd
into
xchg
pop
xchg
les
add
add
jmp
repnz
add
xchg
push
stos
cltd
mov
add
xchg
add
sub
pop
pushl
push
lea
push
push
lea
push
lea
push
push
call
add
add
pop
stos
add
sarb
mov
nop
fwait
add
add
out
adcb
movl
xchg
jo
add
icebp
xchg
jbe
scas
sarl
xchg
pushf
cwtl
add
cmpb
add
sub
pop
call
push
push
push
push
push
push
push
lea
push
push
call
add
add
mov
outsl
rcll
mov
jecxz
in
outsl
fstps
pop
push
loope
add
add
add
fst
loopne
mov
lahf
add
mov
pop
add
add
mov
test
push
sbb
add
sub
pop
call
push
push
add
rol
push
push
pop
add
lea
rol
sub
rol
add
pop
dec
pop
push
push
push
push
push
call
cltd
mov
mov
mov
std
adcl
stos
add
mov
add
add
add
add
pop
add
pop
aad
jmp
lods
icebp
push
je
stc
loopne
in
fsts
movsl
mov
add
in
in
lcall
jne
push
push
push
push
lea
push
push
push
push
call
scas
in
pop
add
add
aam
mov
mov
add
outsl
jmp
add
add
add
xchg
add
cltd
clc
add
data16
mov
add
add
mov
mov
mov
clc
add
add
lcall
loopne
call
call
push
push
ror
shl
shl
push
sub
add
sub
shr
pop
shl
pop
push
push
push
lea
push
push
push
lea
push
push
push
call
xchg
ja
add
lret
out
shl
add
fst
jno
add
fisubs
mov
add
xchg
mov
add
lcall
add
add
add
add
jle
pop
addr16
loope
push
rol
pushw
add
add
push
add
add
icebp
jne
sub
pop
pushl
call
push
shr
dec
dec
sub
pop
call
push
push
add
lea
add
rol
push
or
inc
add
rol
add
rol
sub
add
pop
add
pop
push
inc
shl
pop
pushl
push
sub
ror
add
pop
call
push
sub
shl
lea
pop
call
push
push
xor
shl
push
xor
add
sub
sub
xor
pop
xor
pop
push
not
add
inc
add
pop
pushl
push
sub
not
pop
call
push
dec
lea
sub
sub
pop
call
push
push
sub
push
xor
add
ror
sub
sub
add
pop
xor
sub
pop
push
shl
not
lea
pop
pushl
call
push
push
push
push
push
call
int3
lahf
enter
ja
xlat
call
add
enter
out
je
iret
add
int
add
testb
mov
xchg
mov
jo
mov
add
push
stos
in
add
enter
add
add
pop
add
add
mov
add
lcall
shrb
int
pop
push
ror
shr
xor
push
and
add
xor
inc
sub
sub
add
ror
pop
add
ror
add
lea
pop
push
sub
dec
ror
inc
pop
pushl
call
push
pop
call
push
push
add
push
sub
add
shl
sub
inc
shr
pop
sub
shr
pop
push
inc
pop
pushl
call
push
lea
add
pop
call
push
push
dec
push
xor
add
shr
shr
shr
shl
sub
rol
shr
sub
add
pop
pop
push
push
push
push
push
push
push
push
lea
push
push
call
enter
jp
cmpsl
mov
mov
add
add
lods
mov
call
rcrb
pusha
mov
cmc
add
jb
movsl
mov
mov
jne
push
push
push
push
call
call
push
bnd
sti
js
add
add
lcall
add
ljmp
add
popf
scas
scas
addl
xchg
rcrb
movl
add
mov
ja
add
xlat
aad
aad
jns
hlt
add
xchg
jno
add
gs
out
loop
adc
shr
sub
pop
call
push
not
not
sub
add
pop
call
push
push
sub
add
inc
lea
push
xor
add
xor
sub
sub
dec
pop
xor
shr
pop
push
push
push
call
pop
mov
lock
add
out
mov
pop
pop
fstpl
scas
pop
add
push
mov
lret
jae
fidivrl
stc
add
pop
hlt
adc
mov
lcall
sub
pop
pushl
push
push
push
lea
push
push
push
push
call
test
testb
jae
add
add
add
sti
mov
mov
loopne
mov
xchg
add
pop
add
jb
bound
xchg
jb
notl
incb
add
add
pop
stos
sub
pop
call
push
lea
push
push
lea
push
lea
push
push
lea
push
call
xchg
push
iret
shlb
add
ja
int3
clc
add
xchg
fldl
add
test
push
mov
mov
je
push
roll
sub
pop
lea
push
push
dec
ror
pop
call
push
push
sub
push
and
add
lea
sub
sub
inc
ror
sub
pop
rol
sub
pop
push
lea
dec
sub
pop
pushl
push
add
pop
call
push
push
push
push
push
push
lea
push
push
call
mov
roll
jle
push
add
fistpll
add
ja
add
leave
add
lods
mov
mov
mov
push
lret
add
sub
pop
call
push
push
ror
sub
add
ror
push
or
not
add
sub
add
sub
xor
ror
rol
sub
pop
sub
shl
shl
sub
pop
push
inc
sub
shl
sub
pop
pushl
call
push
push
push
push
push
call
add
cmpsb
add
xchg
add
fiadds
mov
add
add
add
testb
add
add
add
les
in
add
add
loope
add
lcall
lds
icebp
push
call
push
push
add
push
or
inc
add
shl
sub
rol
dec
dec
pop
pop
push
push
lea
push
push
push
push
push
call
add
add
push
lret
out
mov
add
mov
add
mov
rcr
cmpsb
cld
fwait
loop
add
roll
push
enter
negl
push
push
cwtl
sti
mov
cltd
mov
faddl
xchg
ret
out
nop
mov
pushl
call
push
push
push
push
push
lea
push
push
call
data16
insb
add
add
outsl
add
add
add
add
lods
add
mov
push
ja
pop
add
add
mov
add
mov
sub
pop
call
push
push
rol
add
inc
dec
push
or
inc
add
shl
sub
dec
xor
pop
shr
pop
push
push
lea
push
lea
push
push
call
mov
insb
add
lea
add
cmpsl
stos
add
add
add
add
jne
fwait
sahf
mov
fsubl
mov
xchg
xchg
add
pop
mov
iret
add
add
add
clc
add
add
movsb
push
incb
outsl
add
in
pop
pushl
call
push
push
rol
rol
push
sub
add
lea
not
sub
not
add
ror
ror
pop
dec
ror
add
pop
push
push
shl
push
and
add
xor
inc
sub
xor
ror
xor
pop
ror
add
pop
push
push
push
push
call
push
pop
jne
xchg
add
add
add
pop
add
add
mov
addr16
jnp
add
add
leave
add
add
lea
pop
add
jge
pop
roll
sub
pop
call
pop
push
lea
push
push
push
push
push
push
push
push
push
call
rcll
add
add
jns
add
add
jl
mov
fs
add
add
add
mov
add
add
add
sub
pop
dec
jne
push
push
lea
push
push
lea
push
push
push
push
push
push
call
bound
add
in
mov
lods
ficompl
clc
jle
ret
add
add
insb
add
add
push
mov
jmp
add
data16
add
clc
filds
pop
add
scas
add
add
add
mov
pop
add
cmpsl
ljmp
in
fdivr
lcall
or
lea
push
lea
push
push
push
push
push
lea
push
push
push
call
add
add
loope
mov
mov
add
pop
add
push
add
push
add
add
mov
mov
insb
test
jle
call
add
add
add
je
cmpsl
add
rcrl
add
int
js
add
lcall
add
add
int
push
push
push
push
push
lea
push
push
push
call
jae
pop
mov
into
add
mov
add
leave
mov
mov
mov
add
popl
filds
pushf
fucomip
addb
add
out
std
xchg
add
add
sub
pop
lea
push
push
not
ror
add
not
push
sub
add
inc
shr
sub
shr
sub
shl
pop
pop
push
push
push
push
push
call
out
add
imul
call
mov
add
add
cld
shll
add
add
imul
add
cmpsl
roll
add
mov
pop
imul
stc
push
xchg
add
lahf
jae
outsl
mov
push
pop
stos
jb
movb
add
in
lcall
jne
call
push
inc
ror
not
pop
push
push
push
push
push
call
mov
push
add
xchg
add
add
add
pop
in
add
popf
xchg
add
lret
add
add
mov
add
scas
add
jnp
test
jmp
add
sub
pop
call
push
push
inc
push
xor
add
xor
sub
shl
pop
sub
add
xor
pop
push
ror
sub
pop
pushl
push
push
lea
push
push
push
push
push
push
lea
push
push
call
add
adc
jnp
add
add
add
push
test
lds
roll
mov
in
addb
fld
jns
add
add
add
xchg
mov
scas
add
out
jecxz
pop
out
add
add
mov
jmp
insb
mov
hlt
je
sub
pop
call
push
lea
push
call
add
add
add
add
incb
clc
mov
cmpsl
mov
jno
movsl
add
pop
mov
testb
jae
xlat
pop
push
in
add
in
add
add
xchg
lds
in
fnstcw
lcall
rclb
add
add
pop
mov
push
lea
push
push
push
push
push
push
push
push
call
sti
jl
popa
rolb
add
add
nop
leave
mov
jle
fidivrs
pop
jmp
mov
add
add
fs
imul
add
fmul
add
add
add
add
xchg
addb
pop
lea
push
push
rol
add
ror
push
or
inc
add
ror
sub
sub
sub
rol
lea
pop
shl
pop
push
lea
push
call
mov
add
shlb
jmp
fldl
add
xchg
out
add
add
add
add
mov
xchg
jo
shlb
clc
push
lock
mov
add
mov
jge
movsl
add
rorb
stos
add
in
rolb
lcall
jne
call
push
add
not
pop
lea
push
lea
push
push
lea
push
call
add
cmpsl
test
add
add
add
mov
add
xchg
add
push
push
push
add
xorb
add
mov
popf
add
add
roll
add
aam
jb
fildl
mov
push
push
lea
push
push
push
push
call
add
add
add
fucomp
add
jge
add
add
push
mov
cmc
scas
loop
into
add
out
push
filds
add
add
add
stos
add
add
stc
hlt
add
jne
add
add
add
out
sub
pop
push
push
sub
not
sub
not
pop
push
push
inc
add
inc
pop
pushl
push
push
inc
push
and
add
shl
sub
add
not
pop
dec
sub
pop
push
dec
ror
dec
sub
pop
push
push
not
inc
pop
call
push
push
not
sub
ror
ror
push
and
add
lea
add
sub
inc
lea
pop
dec
ror
sub
pop
push
sub
shl
rol
pop
pushl
push
push
push
push
lea
push
push
lea
push
push
push
call
sahf
add
add
add
mov
jecxz
add
push
mov
cmpsb
roll
add
jp
fcomp
add
mov
fwait
js
iret
xchg
in
gs
lock
add
movb
mov
mov
lods
add
add
int3
mov
jl
movl
mov
xchg
add
lcall
jecxz
add
push
push
pop
call
push
push
not
push
and
add
shl
rol
sub
xor
shl
pop
sub
pop
push
push
push
push
push
push
call
add
add
out
add
mov
jns
pop
add
xchg
loop
addr16
mov
rorb
addb
add
popa
jne
popf
add
shlb
add
mov
movb
xchg
add
add
roll
lcall
jne
call
push
push
push
push
push
lea
push
call
test
push
add
shll
pop
add
fadds
shlb
add
add
ljmp
pop
call
pushl
push
lea
push
push
push
lea
push
push
lea
push
push
lea
push
call
pusha
test
ljmp
sub
mov
add
mov
outsl
jmp
add
enter
xchg
push
push
mov
lahf
je
add
fdivr
lcall
mov
push
push
call
jmp
xchg
arpl
ja
add
add
mov
add
add
xchg
add
xchg
mov
add
xlat
mov
les
push
add
add
add
filds
pop
addr16
imul
add
imul
add
in
clc
pop
jmp
push
push
inc
shr
push
or
not
add
ror
sub
sub
pop
sub
add
pop
push
lea
push
lea
push
push
push
push
push
call
sti
rorl
nop
notb
add
mov
in
rclb
mov
add
lods
popf
xchg
test
std
xchg
test
sub
pop
pushl
push
add
not
inc
sub
pop
call
push
push
push
lea
push
push
push
push
push
push
push
push
call
scas
jo
addb
jge
lods
add
ret
cld
jp
xchg
add
add
jnp
add
ja
cmpl
add
add
add
mov
in
add
call
mov
add
push
iret
jns
fistpl
insb
xchg
add
test
ljmp
xchg
add
lcall
shrb
ja
xlat
push
lea
push
xor
add
lea
inc
sub
shr
pop
dec
pop
push
lea
push
push
push
push
push
call
add
jge
push
xchg
add
add
push
int3
add
in
add
add
bound
add
add
popa
mov
jge
add
xchg
add
xchg
lods
add
addr16
fidivs
into
add
mov
lcall
jne
push
shl
rol
pop
call
push
push
push
lea
push
push
push
lea
push
push
call
xchg
add
mov
mov
cmpsl
mov
test
mov
cltd
add
jecxz
mov
movsb
pop
add
add
les
xchg
add
jge
jno
pop
add
in
add
add
pop
add
pop
pop
iret
jne
xchg
jbe
add
mov
movsb
add
mov
add
call
sub
pop
push
call
push
push
push
push
push
lea
push
push
push
call
add
jo
add
add
mov
add
notb
pop
lock
mov
mov
mov
in
in
push
lahf
pop
add
jmp
xchg
push
jecxz
not
ljmp
jo
add
add
xchg
add
loopne
lcall
push
rol
pop
add
push
push
call
hlt
add
cmpsb
test
add
add
add
mov
add
cmpsb
add
fildl
rolb
loop
jge
mov
add
lds
cmpsl
sbbl
imulb
pop
push
ror
xor
inc
pop
pop
push
push
push
lea
push
lea
push
push
push
push
push
push
call
mov
jmp
notl
add
rcr
add
into
fcompl
imul
addr16
imul
add
push
mov
add
push
subb
aam
xchg
out
add
sub
pop
pop
push
sub
lea
ror
pop
xor
inc
push
not
sub
pop
ret
push
push
lea
push
push
call
ret
jmp
int3
cltd
add
fsts
add
fs
jno
out
add
add
add
in
push
scas
fadds
push
loop
add
add
loope
add
add
xchg
jl
fdivl
mov
add
add
cmpb
add
mov
lock
lcall
ret
push
inc
sub
pop
push
push
lea
push
lea
push
push
lea
push
push
push
call
add
roll
stc
leave
cltd
in
sarb
add
push
add
add
push
rolb
add
mov
push
sbbb
jb
loopne
add
jno
movsl
add
loope
add
xchg
out
add
bound
sar
pop
add
test
add
pushf
add
in
cmpl
jne
push
lea
push
push
lea
push
lea
push
push
call
vpshlq
sar
in
sti
push
add
test
mov
mov
mov
add
faddl
add
add
add
icebp
add
add
add
lret
push
movsl
add
add
jnp
add
push
add
add
arpl
push
add
adcb
add
sbbl
in
call
add
adc
add
push
inc
dec
pop
mov
push
sub
ror
inc
rol
pop
and
xor
push
inc
pop
xor
push
push
push
push
push
push
lea
push
call
lods
add
add
add
jb
outsl
pop
insb
loop
lea
bound
add
rolb
add
add
jge
aam
lods
jge
cmpsl
mov
mov
cwtl
xchg
cwtl
add
rolb
jle
movb
xchg
add
mov
add
add
add
push
lcall
rolb
push
call
add
icebp
mov
pop
add
scas
add
cmc
movsb
add
jmp
test
mov
add
cwtl
add
add
insb
add
ja
aam
mov
test
insb
add
add
add
orb
int3
add
add
add
lcall
dec
call
subb
add
add
mov
add
push
add
mov
enter
bound
pop
lcall
into
add
add
add
pop
add
add
pop
in
aam
mov
loopne
mov
lds
sub
pop
dec
push
push
push
lea
push
push
push
push
push
lea
push
call
call
add
clc
mov
lcall
add
fnsave
add
mov
popa
add
xchg
add
push
xchg
sti
pop
add
sub
pop
sub
push
rol
pop
jmp
push
push
call
mov
add
add
out
mov
add
mov
jmp
out
add
add
stc
xchg
stc
loop
add
xchg
fiadds
mov
push
add
call
fisttpl
ja
popf
data16
js
add
push
add
push
add
add
xchg
mov
add
add
jmp
lcall
add
add
push
shl
shr
rol
pop
pushl
pop
push
push
push
push
push
call
xchg
movsl
outsl
add
test
out
add
movsl
add
jge
add
ljmp
xchg
mov
push
add
add
add
push
rcrb
sahf
xchg
pusha
mov
sub
pop
sub
cmp
jne
push
push
lea
push
lea
push
push
push
lea
push
lea
push
push
call
add
xchg
idiv
lods
mov
movsb
mov
rolb
loopne
icebp
fsub
stos
repnz
add
add
mov
jmp
lret
xchg
add
add
jnp
loope
rcrb
add
rolb
leave
into
test
bound
lcall
enter
lea
push
lea
push
lea
push
lea
push
push
lea
push
push
lea
push
call
in
push
jo
add
add
fdiv
imull
add
jae
add
add
add
negb
add
fcomps
dec
cmp
jmp
push
fstps
or
shrb
aam
shr
add
push
push
call
cmpsl
loope
jecxz
add
movb
add
popa
add
pop
mov
jbe
add
mov
icebp
int
lahf
push
fwait
add
in
insb
ljmp
add
add
imul
add
testl
shl
jns
xchg
add
jl
mov
in
clc
pop
sub
push
lea
push
push
push
push
call
add
mov
add
add
add
data16
les
mov
out
add
add
cmpsl
add
in
lcall
xor
lret
inc
add
pop
pop
shr
push
sub
ror
not
xor
pop
and
push
push
push
push
push
push
push
push
lea
push
call
jnp
roll
mov
add
cli
imull
mov
mov
in
add
rolb
add
ljmp
lret
cwtl
imul
jle
add
je
add
add
lahf
fucomp
add
lock
xchg
addb
add
add
add
in
fdivr
lcall
jmp
push
push
push
push
call
mov
test
arpl
add
mov
add
fiadds
add
jl
lods
add
mov
add
xchg
add
mov
jb
add
arpl
mov
add
push
pop
sub
pop
cmp
jne
push
push
push
call
movsb
mov
add
mov
add
add
ljmp
fildl
clc
movb
mov
clc
mov
mov
pop
lcall
hlt
lcall
push
lea
push
lea
push
lea
push
call
jecxz
ja
bound
add
shll
cmpsb
cwtl
ja
lcall
add
push
jae
mov
pop
shlb
in
add
mov
mov
cmpsl
add
sarb
pop
sub
jecxz
add
add
pushf
mov
pop
ret
push
xor
xor
rol
lea
pop
push
push
push
push
push
push
push
call
jge
xlat
ja
add
add
mov
add
in
scas
add
add
lds
out
add
add
lds
add
lret
add
add
lret
scas
sub
pop
mov
add
push
push
lea
push
push
push
call
loopne
add
jae
stc
imul
add
xchg
add
fadds
mov
in
aad
add
subb
push
add
lcall
add
push
add
xchg
jmp
stos
mov
hlt
shll
lcall
lcall
push
push
push
push
call
shl
stos
sar
fs
jo
stc
mov
pusha
add
add
mov
add
cmpsl
add
add
mov
in
push
pop
nop
mov
mov
xchg
cmc
mov
in
lock
lcall
push
push
push
push
push
push
call
xchg
stos
add
cmpsl
fiadds
xchg
pushf
div
add
add
movsb
add
out
fdivrp
test
testl
add
popf
lret
in
addb
mov
add
aad
sub
pop
push
push
lea
shl
inc
pop
push
mov
push
dec
dec
add
add
pop
lea
push
push
push
push
call
pop
add
add
xchg
add
add
add
rcl
pop
addr16
lods
jp
filds
imul
add
add
mov
jno
add
add
add
add
add
stos
popf
add
fildl
pushf
and
icebp
mov
sub
pop
sub
mov
push
not
xor
pop
shr
push
push
push
call
stos
add
out
pop
ljmp
fdivs
movsl
icebp
add
mov
out
add
add
add
add
popf
add
add
mov
add
add
call
cli
shll
loopne
add
jge
add
sahf
add
test
rcl
add
in
hlt
lcall
fimull
add
shl
pop
add
mov
push
push
push
push
lea
push
push
call
roll
jmp
add
add
test
add
out
add
add
add
add
addr16
arpl
xchg
scas
push
push
stc
add
in
jmp
jae
push
ja
testl
sub
pop
add
push
push
lea
push
push
push
push
call
add
call
loopne
loop
add
arpl
fildl
add
jmp
add
xchg
add
movl
int
hlt
sub
pop
xor
mov
push
rol
sub
shl
shr
pop
and
push
lea
inc
pop
rol
push
ror
ror
ror
add
pop
rol
xor
push
lea
push
lea
push
push
push
push
push
call
add
mov
out
xchg
flds
roll
add
add
cltd
mov
cmp
xchg
out
add
add
add
add
add
add
fcoms
outsl
mov
andb
sub
pop
inc
push
push
lea
push
call
mov
sarb
test
mov
data16
ja
add
fiadds
addl
add
add
add
mov
fs
mov
jl
std
add
addl
sub
pop
cmpb
jne
add
push
ror
shr
shr
pop
cmp
je
add
push
shl
pop
cmpl
jne
xor
push
inc
pop
pop
push
rol
sub
pop
pop
pop
push
lea
push
lea
push
push
push
push
push
call
mov
push
mov
add
add
int3
mov
out
leave
add
lods
add
add
add
lret
leave
filds
push
mov
in
in
pop
push
push
lea
push
push
push
call
fwait
mov
add
mov
scas
scas
add
test
add
imul
ret
addb
cwtl
imul
pop
popf
js
add
insb
incb
jnp
mov
add
xchg
add
stc
rolb
in
pop
xchg
add
in
pop
pop
push
lea
ror
pop
leave
push
lea
push
lea
push
push
push
call
sahf
add
js
jnp
add
jae
mov
flds
cld
push
sti
add
add
pop
add
add
mov
add
notb
pop
add
add
imul
add
lret
push
or
int
jmp
add
mov
push
adc
add
lds
push
push
push
lea
push
call
add
mov
add
scas
add
pop
pushf
mov
push
xchg
add
gs
xchg
add
mov
push
add
add
mov
cwtl
add
flds
jns
in
hlt
pop
call
push
shr
add
pop
xor
push
add
ror
dec
shr
pop
pop
push
ror
sub
add
pop
pop
pop
push
push
lea
push
call
add
mov
add
xchg
fimull
mov
add
fiadds
push
cltd
sti
add
imul
add
fs
mov
je
loope
nop
add
mov
add
add
rolb
sub
pop
pop
push
sub
sub
dec
pop
pop
leave
push
push
push
push
lea
push
push
push
push
call
add
mov
movl
mov
add
add
addb
add
in
scas
add
push
pop
lret
add
in
loopne
lcall
or
push
shr
pop
push
push
shr
pop
mov
add
push
lea
push
lea
push
push
push
lea
push
lea
push
push
lea
push
lea
push
call
add
lahf
nop
add
add
add
add
add
andb
fldenv
add
mov
add
loopne
push
add
pop
out
fstpl
add
add
in
push
mov
gs
pushf
add
lcall
push
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
push
push
imul
imul
shrb
lret
add
xlat
call
lahf
mov
mov
add
add
xchg
xchg
rcl
in
add
mov
pop
sub
pop
push
push
push
shl
rol
xor
pop
mov
push
shr
ror
dec
pop
push
push
push
lea
push
call
add
cmc
mov
push
cmc
jecxz
add
xchg
add
add
out
add
jl
popl
xchg
add
shl
jge
add
add
je
add
mov
in
hlt
lcall
lea
push
pop
sub
mov
push
lea
add
pop
shr
push
dec
pop
add
mov
push
lea
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
sbbl
jmp
je
pop
mov
test
pop
ficoml
movl
add
add
leave
add
add
mov
add
add
xchg
in
add
add
jle
add
mov
std
add
mov
lcall
fsts
ljmp
sbb
mov
dec
rol
pop
popl
mov
push
push
push
lea
push
lea
push
push
call
add
add
icebp
roll
iret
xchg
add
add
addb
cltd
lds
jge
add
filds
add
add
lahf
add
test
jno
add
sub
pop
add
xor
push
push
push
call
mov
push
mov
mov
in
add
loope
add
popf
add
xchg
add
push
lods
jnp
loopne
xchg
loop
pop
fs
hlt
popa
pusha
mov
jmp
add
add
add
push
gs
out
jge
sub
pop
lea
push
xor
shl
inc
pop
mov
add
push
push
call
mov
add
add
add
imul
scas
mov
mov
add
rorb
lret
fwait
add
lods
sub
pop
xor
rol
push
lea
dec
pop
nop
nop
push
push
push
push
push
call
movsl
test
add
loope
in
in
add
out
mov
outsw
jle
push
ret
sti
xchg
shrl
stc
add
lods
add
add
in
add
add
jns
ret
add
enter
sar
add
mov
push
add
add
mov
add
lcall
add
sub
push
push
lea
push
lea
push
lea
push
push
lea
push
push
lea
push
call
mov
pop
xchg
xchg
in
outsl
movsl
add
add
enter
add
incb
hlt
stc
pop
mov
jecxz
add
add
cmpsl
addl
add
lods
rorl
lcall
push
lea
push
push
push
push
call
mov
push
out
push
fwait
mov
push
mov
add
ljmp
arpl
nop
xlat
add
je
fdivl
clc
xlat
jne
add
fwait
add
push
sub
pop
nop
inc
push
not
pop
nop
push
push
push
lea
push
lea
push
push
lea
push
call
xchg
rolb
ficoms
jbe
xchg
add
xchg
aad
arpl
popf
add
add
scas
add
ja
fiaddl
add
add
add
stos
add
cli
mov
cmc
jbe
mov
add
mov
leave
test
mov
sub
pop
nop
push
ror
add
sub
ror
pop
cmpb
jne
push
push
lea
push
push
push
call
add
addl
mov
add
mov
push
add
add
lcall
call
mov
add
add
fwait
add
jae
popa
lods
lret
ret
in
pop
add
push
add
pop
nop
nop
push
xor
pop
cmp
je
push
lea
push
push
push
lea
push
push
push
call
lahf
add
jge
push
mov
aad
js
in
add
scas
add
fiadds
clc
add
add
pop
nop
nop
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
cwtl
add
insb
add
add
mov
xchg
mov
add
add
cltd
add
lret
mov
add
mov
jno
bound
pop
int3
add
lahf
jle
scas
loope
add
sub
pop
inc
nop
push
lea
push
push
push
push
push
push
push
push
push
call
add
test
push
add
add
in
mov
pop
pop
jne
popf
imul
mov
pop
addb
lods
out
add
gs
add
xchg
add
lea
in
jb
cwtl
popf
out
filds
addb
sahf
add
addl
cwtl
scas
loopne
mov
lcall
push
push
push
push
push
lea
push
push
push
lea
push
push
call
lea
add
add
test
xchg
js
in
add
add
in
add
sar
add
adcb
out
fs
jmp
mov
mov
out
rolb
shlb
sub
pop
cmp
jb
xor
push
ror
pop
jmp
mov
push
not
not
pop
add
push
xor
inc
rol
add
pop
movzwl
push
sub
xor
shr
pop
mov
push
push
push
push
lea
push
push
push
call
loope
cmc
mov
subb
cmp
mov
rcl
add
and
add
add
shll
mov
jmp
sub
pop
add
push
push
push
push
push
push
push
push
push
call
nop
les
add
add
aad
popa
outsl
faddl
addl
xchg
pop
mov
add
mov
jae
pop
add
pop
out
xchg
push
add
add
mov
xchg
pushf
add
mov
pop
lods
xorb
xchg
add
mov
add
add
mov
add
add
cmc
cwtl
into
mov
in
fdivr
lcall
dec
hlt
push
push
lea
push
lea
push
lea
push
push
push
call
add
mov
testb
add
push
shrl
std
rorb
add
leave
fwait
testl
loop
add
add
popf
pop
popf
mov
arpl
aad
pop
add
mov
fsubs
mov
sub
pop
xor
push
xor
lea
not
sub
pop
xor
push
lea
push
push
push
push
push
call
lea
xchg
push
test
pop
imul
cmc
lahf
add
mov
jnp
add
add
lahf
add
call
xor
push
push
push
push
push
push
call
lds
arpl
add
mov
lea
add
lods
xchg
add
add
test
clc
jmp
add
add
mov
call
xor
push
push
lea
push
push
call
data16
out
loope
add
add
add
jne
add
mov
lods
popa
mov
add
popa
xchg
mov
add
add
test
enter
sahf
add
push
ja
mov
add
mov
lcall
loope
push
lea
push
call
add
popa
mov
add
icebp
pop
cld
add
add
add
sahf
add
stc
jo
add
pop
add
mov
add
icebp
test
push
add
jmp
aam
pop
add
add
add
push
testl
jbe
add
jo
add
sti
add
add
clc
lcall
or
mov
push
lea
push
lea
push
call
add
call
test
add
add
add
add
add
arpl
ret
jb
jmp
cli
xchg
add
add
mov
add
add
add
mov
add
pop
add
add
lcall
inc
hlt
push
add
xor
pop
pop
push
inc
add
shr
pop
pop
push
xor
ror
sub
pop
pop
push
push
push
push
push
lea
push
push
push
push
call
add
test
add
add
jns
add
xchg
sahf
add
jb
push
jle
mov
add
add
sarb
add
add
out
pop
in
pop
jnp
in
fdivr
lcall
push
push
lea
push
call
add
repnz
xchg
mov
add
int3
add
push
add
bound
je
les
pop
jno
out
mov
add
add
add
insb
ja
mov
js
add
add
add
incb
cld
mov
xchg
add
ret
push
push
push
push
push
push
lea
push
push
push
lea
push
call
jmp
add
add
add
add
push
add
push
mov
add
mov
add
popa
add
in
fcomps
mov
push
not
rol
add
pop
push
push
push
push
lea
push
push
call
add
addl
pusha
mov
add
icebp
add
shlb
mov
mov
pop
rolb
stos
iret
jnp
add
pushf
add
mov
mov
cmpsl
add
cwtl
add
addl
jne
mov
add
cltd
add
mov
add
je
mov
push
sub
pop
push
push
push
push
lea
push
lea
push
lea
push
push
call
xchg
fwait
movl
bound
leave
add
mov
mov
add
sahf
cltd
jnp
in
add
imul
movl
test
add
add
add
in
lcall
push
push
push
call
arpl
lds
lods
stos
add
pushf
add
add
add
jl
push
add
add
add
add
fdivrs
cld
add
nop
fiaddl
add
mov
jmp
test
hlt
lcall
push
push
lea
push
push
push
lea
push
push
call
add
pusha
pop
mov
add
add
add
pop
mov
add
jmp
or
lods
add
imul
add
add
push
mov
mov
mov
pop
add
fs
sti
jle
in
in
lcall
dec
or
add
sub
add
pop
mov
push
add
add
add
pop
mov
push
xor
xor
add
pop
test
je
mov
push
lea
push
lea
push
push
push
call
add
lods
mov
fdivrl
add
popl
stos
mov
add
add
add
add
mov
fiadds
add
loopne
jns
ficoms
mov
add
add
add
testb
fadds
add
sbb
cmp
mov
mov
push
ror
pop
mov
inc
push
lea
push
lea
push
call
jmp
insb
andl
outsl
add
add
add
add
jmp
xchg
add
sahf
pop
add
ljmp
add
lcall
rorb
test
add
add
add
push
ror
shl
inc
pop
mov
push
not
sub
add
pop
inc
cmp
je
push
inc
dec
lea
shl
pop
test
jne
xor
push
push
lea
push
push
push
push
call
loop
jecxz
mov
lods
fnsave
add
test
out
push
add
mov
add
fwait
add
add
add
add
mov
aad
add
add
push
sub
pop
pop
pop
push
lea
push
push
lea
push
call
imul
xchg
add
add
add
add
jo
add
mov
fcomp
add
shlb
mov
in
lock
pop
push
push
push
push
lea
push
push
push
push
push
call
adcb
mov
outsw
int3
add
imul
clc
icebp
add
mov
push
mov
bound
les
out
jle
add
addl
add
xlat
sub
pop
pop
push
lea
push
push
push
lea
push
call
loop
leave
add
add
enter
push
mov
jb
insb
add
pop
add
add
rolb
pop
sub
pop
leave
push
add
add
sub
sub
pop
ret
push
lea
push
push
push
push
push
push
push
push
call
push
add
mov
jecxz
jl
add
mov
pop
mov
mov
add
xchg
in
ja
repnz
add
add
add
mov
mov
add
enter
loope
xchg
scas
mov
stos
loop
pop
add
lcall
push
push
push
push
push
push
lea
push
lea
push
push
push
push
call
xchg
push
xchg
jnp
jno
add
push
lods
add
add
add
bound
add
out
add
add
add
add
adcb
in
fdivr
lcall
push
push
push
lea
push
push
push
call
test
add
add
add
pop
movl
repnz
push
enter
jnp
out
insb
xchg
loope
std
js
iret
add
rclb
add
add
add
push
add
add
stos
lock
xlat
movsl
add
mov
mov
jae
pop
mov
pop
cmp
jne
push
lea
not
shr
ror
pop
lea
push
rol
pop
mov
push
dec
not
sub
pop
test
je
mov
push
pop
add
push
lea
push
push
push
push
call
bound
add
jbe
xchg
xchg
cltd
mov
ja
xchg
popf
aam
add
xchg
lods
out
lds
nop
mov
fstp
add
andb
loopne
test
cld
call
rol
sub
add
pop
mov
test
je
push
sub
pop
mov
add
push
shl
sub
pop
cmp
je
push
lea
push
lea
push
lea
push
lea
push
call
pushf
aad
jns
mov
test
les
fstpt
mov
popf
std
add
fcompl
out
add
xchg
into
push
push
call
add
aad
imul
add
mov
loop
mov
in
in
lcall
je
call
addr16
sub
lea
push
push
call
add
add
add
pop
add
add
jne
add
out
mov
add
add
loop
lods
jp
push
call
lea
push
lea
push
push
push
push
push
push
call
and
test
add
mov
sbb
add
mov
cmpsl
mov
add
pusha
push
add
add
in
loopne
lcall
push
push
push
push
push
push
push
push
push
push
call
jecxz
leave
add
out
push
clc
out
incb
mov
addr16
add
mov
add
testb
cmpsl
jo
lock
jmp
xchg
rol
movsl
call
add
add
mov
add
outsl
frstor
enter
add
add
jl
add
jo
add
cmpsb
addb
popf
add
enter
pop
pop
push
push
push
push
push
lea
push
push
call
add
incb
xchg
add
addl
scas
fsub
add
lods
push
ficoml
in
mov
in
in
lcall
push
push
push
lea
push
call
jnp
in
movb
add
push
divl
add
add
add
mov
rcl
push
int
mov
add
add
int3
cmpsl
in
add
add
add
cli
enter
mov
into
add
test
jb
test
add
sahf
les
add
hlt
push
cli
add
add
in
lock
pop
push
push
push
push
push
push
push
push
push
call
add
jge
addb
add
add
jge
pop
add
mov
mov
idivl
lods
xlat
push
mov
std
scas
ret
xorb
mov
loope
jb
add
enter
push
jbe
stos
popf
cli
sub
pop
leave
push
sub
sub
add
pop
ret
lea
push
dec
xor
pop
pop
push
add
pop
pop
push
dec
pop
pop
push
push
push
call
clc
add
add
lcall
push
mov
push
jmp
sahf
addr16
loope
js
nop
repnz
sahf
add
mov
jmp
add
enter
add
add
push
repnz
add
push
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
add
fildl
mov
mov
mov
lret
int3
mov
add
add
fsubp
add
mov
add
mov
add
lahf
int3
add
add
in
fcomps
push
add
dec
add
pop
ret
mov
push
push
push
push
push
lea
push
call
loop
add
xchg
mov
add
cmpsb
add
add
fiaddl
add
mov
jmp
add
in
call
pop
pop
push
dec
pop
pop
pop
push
xor
inc
ror
pop
leave
ret
out
or
iret
out
or
iret
push
icebp
iret
iret
out
dec
lret
iret
out
lods
iret
iret
insb
mov
iret
jne
iret
iret
insb
dec
iret
iret
out
fmul
iret
out
iret
iret
iret
jbe
int
repz
outsb
fcmovb
xor
subl
cltd
filds
xor
xchg
xor
stos
jbe
rol
pop
mov
mov
aaa
xchg
popf
mov
pop
js
xor
les
cmp
add
test
dec
cmc
cmp
fidivrl
adc
mov
cmp
cli
dec
sbb
rorl
test
cli
cmpb
mov
pop
cmpsl
cmp
push
and
ficomps
popf
into
je
xor
add
push
cmp
shll
sub
sar
cmp
cmpl
cmpsl
stos
pop
mov
dec
test
jns
inc
mov
movsl
pop
xor
idivb
push
imul
pop
aam
gs
test
ljmp
mov
ss
stos
fidivs
inc
jb
mov
out
lret
je
jnp
mov
insl
ds
jo
lahf
loop
loope
push
fxch
incb
xor
lock
pop
mov
sub
pop
push
xorl
sahf
push
push
out
jbe
and
dec
pop
lds
lahf
inc
xor
xchg
jb
shll
dec
push
or
mov
insl
iret
adc
pop
icebp
popf
mov
push
jo
pop
pop
xchg
out
aam
data16
sbb
cmpsl
fs
jo
mov
xchg
out
jo
xchg
loopne
inc
repz
dec
inc
shll
aas
push
lahf
enter
movl
xchg
mov
adc
mov
push
and
negb
mov
lea
cwtl
xchg
xchg
es
push
sahf
jae
and
sub
pusha
repnz
push
pop
int3
push
into
int
or
mov
dec
call
int3
sbbb
sub
shr
out
shr
popa
dec
cmp
sbb
cmp
add
xor
ret
mov
add
dec
stos
inc
mov
adc
xor
and
push
add
jns
adc
xchg
lahf
xchg
push
jp
fcmovne
mov
adc
cmp
faddl
mov
roll
lcall
or
or
sub
push
push
arpl
jle
mov
push
test
dec
push
or
xchg
ja
sti
les
insb
aam
clc
and
pop
jl
scas
scas
clc
outsb
xchg
fisubs
dec
cwtl
xchg
fmuls
popa
aad
and
mov
inc
cmp
repnz
mov
popl
movsb
out
or
push
pop
mov
xchg
jl
loop
jns
jge
data16
ret
and
adc
push
inc
addl
pop
cltd
cmc
sbbl
mov
rcrb
call
or
fadd
test
jmp
scas
nop
or
push
sbb
int3
scas
hlt
jle
out
cld
shlb
mov
mov
movsl
xor
ret
pop
jbe
mov
jae
pop
jge
movsb
adc
dec
fidivrl
mov
pop
shrb
into
fcomp
bound
je
popf
mov
push
nop
or
inc
dec
faddl
pop
mov
shl
in
push
push
jne
mov
pop
fwait
mov
sbb
pop
xchg
inc
ds
mov
hlt
adc
add
imul
ds
jo
aad
outsb
lea
pushf
ja
lea
popf
sub
jge
mov
lcall
dec
cmpsl
inc
jbe
insl
sahf
adc
rorl
mov
out
js
push
test
mov
and
pop
push
imul
inc
mov
jmp
xor
les
aam
int
sbb
xchg
fsubr
cmp
pop
cmpsb
cwtl
xor
fwait
out
mov
popf
cmc
mov
mull
mov
sbbl
stc
popf
push
or
pop
mov
cmp
pop
out
xor
in
jo
scas
xchg
mov
sub
xor
js
and
fcoms
daa
repz
idivl
sub
sbb
add
adc
cld
cmp
jne
sbb
aaa
cmp
pop
mov
add
test
aad
loope
add
push
mov
mov
xor
and
jbe
mov
mov
ret
test
shlb
out
xor
int3
and
mov
cwtl
out
loopne
int3
sub
mov
dec
sbb
lock
and
popw
jne
mov
pop
addb
mov
ja
jno
lea
cwtl
pop
insb
nop
repnz
add
in
test
mov
out
sbb
mov
aas
in
inc
jo
push
push
dec
or
mov
fwait
pop
xorl
outsb
add
cmp
or
int3
f2xm1
mov
das
nop
mov
jno
sbb
dec
pop
xchg
mov
popa
jg
testb
test
dec
dec
pop
repnz
and
push
inc
int3
mov
jle
xchg
cmpl
sub
int
push
enter
inc
adc
aas
rorl
jecxz
jno
mov
iret
mov
dec
and
cwtl
lods
dec
add
sbbb
test
mov
sbb
sarb
fdivs
data16
push
dec
mov
or
mov
xchg
sub
xor
xor
paddsb
pop
js
mov
inc
addr16
outsb
cmpb
es
out
jecxz
push
cmc
mov
fsts
mov
decb
ret
mov
imull
in
idiv
fcmovb
push
insb
push
jnp
call
dec
ds
add
and
dec
inc
ljmp
mov
ljmp
mov
sbb
jmp
jns
hlt
cld
je
nop
jp
flds
mov
sbb
xchg
rcr
add
in
addl
je
push
or
repz
mov
dec
shrb
fisttpll
cmp
popf
xchg
insb
add
xor
cli
jl
lret
mov
daa
sbb
and
mov
pop
into
mov
leave
inc
mov
dec
lahf
dec
push
or
fnstsw
mov
iret
add
pusha
ja
pop
call
repnz
adc
sub
or
popf
enter
nop
mov
scas
inc
sub
add
xchg
pushf
or
pop
push
lock
sub
pop
sbb
out
sub
outsb
mov
std
lret
sub
push
daa
das
arpl
cld
add
sub
mov
frstor
hlt
je
or
scas
lcall
pop
fstpt
push
lea
inc
cmpsl
mov
adc
int3
inc
stos
xchg
pusha
inc
packsswb
xchg
in
mov
sub
test
loopne
jmp
inc
and
sbb
mov
aas
xor
jbe
scas
mov
in
insl
imul
adc
mov
cmp
jmp
adc
in
jo
addr16
repnz
fs
pop
mov
rcrb
pop
push
in
mov
adc
adc
repz
pop
shr
xor
mov
mov
or
mov
add
icebp
and
popa
and
cmp
das
sbb
stc
sbb
aaa
mov
push
lds
pop
je
scas
push
xchg
mov
popf
lock
fcmovu
pop
adc
test
ja
pop
ret
adc
in
pop
cmp
and
push
mov
in
sbbb
push
lds
push
jo
ja
inc
jmp
cmpl
and
cs
and
in
mov
mov
or
cld
lret
mov
adc
xchg
mov
sub
hlt
and
mov
push
je
loop
lods
dec
movsb
std
pop
out
push
fistps
aad
dec
iret
dec
popa
vmovapd
enter
pop
lret
subl
adc
xchg
stos
insb
inc
sbb
lahf
lea
ja
sub
es
cltd
sub
cwtl
adc
xchg
adc
fimull
push
fmulp
jb
jae
push
xor
scas
fs
lds
sub
popf
outsb
insl
sbb
cmp
jecxz
mov
mov
cmpsb
adc
call
imul
sub
xlat
cmp
bound
std
inc
addr16
ficoms
into
pop
int
or
stos
and
pop
sbb
stos
popa
mov
inc
mov
mov
xor
cmp
sar
loope
xchg
mov
push
mov
addr16
mov
out
fists
xor
rclb
cmpsb
jmp
mov
jb
sub
pop
cmp
mov
mov
xchg
iret
sub
aad
fists
out
int
sub
adc
mov
repz
and
and
ljmp
inc
push
insl
dec
inc
cmc
push
mov
add
dec
lahf
sbbl
dec
jecxz
sub
cmp
add
sbb
aas
adc
adc
outsb
jb
arpl
push
and
mov
and
xchg
imul
psubusw
pop
mov
jno
sub
pop
push
and
test
into
mov
xchg
pushf
loope
mov
push
sub
and
enter
push
cwtl
es
xchg
fldcw
push
mov
shlb
add
mov
iret
mov
push
fisttpll
hlt
popa
inc
daa
dec
push
loop
or
sub
push
das
dec
jnp
cmp
out
xor
addr16
popa
cmp
xchg
loopne
iret
outsb
sbb
dec
out
push
mulb
shlb
cmpsl
into
jne
mov
pop
in
ret
push
push
shll
push
add
sub
insb
inc
xor
xor
jle
lcall
lea
repz
incl
jae
das
test
outsl
push
sub
fadds
das
mov
mov
popf
jns
cltd
out
pop
or
xor
subb
in
inc
enter
sbb
mov
add
cmpsb
cs
fwait
in
adc
cmp
xchg
or
addl
mov
push
hlt
aaa
jb
mov
jo
repz
adc
sub
jne
stc
mov
out
add
pop
mov
pop
jne
or
jno
enter
xlat
dec
std
call
stos
imul
mov
std
hlt
lods
mov
shl
repnz
cmp
ret
mov
push
mov
shr
ret
rdtsc
imul
rcrl
push
sub
pop
mov
jg
cmpsl
nop
inc
aad
add
jge
adc
call
orl
xor
xchg
add
xor
mov
mov
jmp
imul
sbb
pop
scas
lea
and
sbb
push
loope
add
push
and
dec
idivl
pop
jne
cmpb
pushf
mov
enter
and
ret
jae
adc
fstp
outsl
pop
lcall
cmpb
insl
inc
ret
mov
fsubl
lock
jecxz
stc
xchg
push
ja
in
adc
cmp
subb
jno
aas
scas
imull
shll
lret
lcall
mov
aaa
jp
ficoms
test
mov
pop
test
aad
cmp
adc
leave
int3
test
fcmove
xchg
push
les
stc
clc
dec
call
xchg
inc
xcrypt-ecb
cmpsl
push
adc
and
xor
or
mov
aad
leave
inc
adc
stc
xor
pushf
jb
nop
mov
int
ljmp
mov
dec
jae
fwait
push
jp
push
mov
inc
daa
add
push
push
cmpl
pop
adc
repnz
aaa
mov
sbb
mov
enter
jge
lea
addl
or
mov
mov
pop
std
clc
or
push
mov
movsl
bound
bound
fstps
adc
cmp
mov
xor
lds
mov
adc
loope
dec
xchg
hlt
xor
cltd
push
push
je
sub
xchg
outsb
clc
lds
pop
scas
ljmp
inc
mov
cltd
and
lahf
jne
mov
insl
addl
sub
mov
adc
lock
ljmp
dec
lods
test
lea
test
adc
pop
and
mov
sbb
aas
arpl
cmp
mov
out
and
imul
sbb
pop
int3
jge
outsl
fimuls
out
jecxz
out
pop
add
daa
or
aas
iret
inc
and
xchg
mov
or
fistps
or
stos
or
and
xchg
test
out
sti
add
sti
test
dec
dec
lahf
jle
jl
in
xor
adc
cmp
lret
xchg
idivb
mov
sbb
in
test
mov
xor
or
hlt
popa
pop
sub
loopne
scas
daa
xchg
dec
mov
bound
inc
push
ds
mov
les
mov
les
mov
mov
adc
cmp
das
push
aaa
add
stos
sahf
adc
xchg
outsb
gs
push
imul
cmp
fsincos
dec
mov
add
lahf
sub
and
adc
xlat
dec
movsl
add
scas
rolb
adc
out
push
jae
and
test
mov
sub
sub
test
pop
mov
push
pop
lods
test
test
fiaddl
and
inc
cltd
jmp
sub
mov
fcomps
clc
inc
mov
xchg
pop
mov
clc
shlb
aam
xchg
fistpl
hlt
cmpsl
sti
inc
sub
and
push
aad
jnp
nop
out
rcl
xchg
push
cmpsb
int
adc
imul
dec
std
mov
dec
jo
into
xchg
mov
cmp
add
popa
fs
push
cmc
repnz
and
in
gs
push
loopne
mov
aas
mov
cld
subl
cld
add
imull
insl
adc
out
push
cmp
lahf
insl
inc
mov
jecxz
test
nop
psubd
das
aam
sahf
mov
hlt
jmp
inc
incl
pusha
xchg
int
adc
test
ret
mov
rorb
xchg
inc
mov
stc
jmp
sub
pop
shll
loopne
pop
sbb
lds
xor
outsl
ja
jle
mov
imul
adc
repz
pop
push
out
ljmp
xchg
ja
and
lret
and
push
add
mov
inc
loopne
outsb
lcall
dec
aad
push
cmpsb
push
adc
pop
push
imul
loope
and
in
pop
and
push
sbb
pushf
jne
cmp
ret
data16
jmp
inc
dec
test
mov
add
lret
test
daa
je
adc
aad
sbb
pop
and
sbb
clc
and
out
stos
push
test
jnp
mov
add
and
sahf
iret
loopne
mov
push
adc
inc
add
push
cli
push
nop
pop
inc
call
rcr
xor
mov
mov
or
sti
sub
fwait
adc
enter
mov
mov
adcl
sub
pop
push
loopne
inc
xchg
stos
mov
cmp
mov
lods
outsb
pop
rorl
dec
in
out
div
sbb
add
mov
lahf
cltd
inc
adc
push
jne
call
test
jl
push
test
inc
mov
out
sbb
add
lock
mov
add
out
repz
js
repnz
lds
shll
call
jg
mov
ret
xchg
fs
or
pop
mov
jp
cmpl
test
jp
mov
out
pop
jo
xor
jl
inc
into
and
iret
outsl
ret
xor
mov
ja
cmpsl
mov
adc
inc
add
adc
je
jnp
jae
rolb
inc
call
cmpsl
in
mov
xchg
movsb
sahf
and
ss
into
lock
repnz
cmp
mov
subl
dec
neg
stc
inc
xchg
cmp
cmc
pop
cwtl
mov
adc
movsb
pop
out
es
sbb
xchg
inc
gs
clc
int
pop
and
mov
insl
push
or
push
test
dec
jmp
fnsave
out
ljmp
sub
mov
inc
enter
sahf
sti
or
arpl
and
test
cltd
jecxz
les
in
loope
adc
js
fimull
jmp
aad
and
mov
dec
jp
mov
push
xor
adc
shrb
fimuls
sub
xor
mul
pop
scas
call
fdivrl
push
ret
cmc
add
and
cli
lret
call
cltd
mov
jno
jne
in
inc
or
outsl
roll
push
xchg
and
inc
movsl
push
lcall
popf
stos
jne
mov
in
icebp
mov
cmp
lret
lds
or
mov
lds
shrl
or
mov
outsb
jb
mov
mov
dec
push
push
scas
pop
dec
push
test
xlat
and
stos
pushf
daa
cltd
imul
push
orb
cmpsb
pop
cwtl
push
scas
ret
cmp
dec
mov
pop
gs
leave
inc
or
adc
clc
jecxz
enter
xor
es
cmp
stos
jle
push
int
call
adc
mov
out
fisubs
push
arpl
inc
subb
and
mov
lahf
into
add
movsb
cli
xchg
pop
shll
ss
fmull
cmpsb
mov
xor
mov
movsb
fistpl
cmp
inc
mul
or
fisttpl
addr16
aaa
jl
xchg
mov
roll
mov
xor
sahf
sub
xchg
int
insl
xor
add
addr16
sbb
and
pop
cwtl
mov
mov
pop
orl
stos
or
lcall
inc
fcoml
xor
mov
inc
dec
clc
loope
cmp
jbe
jb
or
xchg
stc
push
adc
or
push
xchg
dec
mov
loopne
cli
push
inc
jmp
push
imul
test
cld
adc
push
shlb
js
out
push
xor
cmpsb
shr
xchg
out
jmp
jmp
mov
jne
add
xchg
add
stos
xchg
jp
mov
jno
xor
pushf
int
adc
mov
ret
out
enter
mov
ret
notl
cs
push
sub
test
pop
mov
push
dec
xor
es
adc
hlt
adc
or
out
xchg
adc
jp
xor
jns
aad
or
fistl
add
mov
push
test
ret
stos
cltd
idivb
int
inc
stos
lret
pop
add
add
mov
pop
cld
pop
xor
or
xlat
adc
and
scas
and
or
or
dec
lock
les
or
inc
add
outsl
and
std
mov
jo
mov
pop
inc
shlb
ret
mov
popa
fisubrs
fmul
xchg
ljmp
daa
dec
mov
adcb
add
add
stos
ror
adc
mov
dec
mov
bound
xor
icebp
and
ss
stc
xchg
ljmp
out
lea
sarb
add
mov
ret
imul
lahf
in
icebp
or
movd
pop
push
adc
out
stc
ror
xchg
cmp
sar
push
adc
sbb
stc
xchg
xchg
loope
insb
cmpsl
sbb
mov
out
mov
and
scas
push
sbb
and
test
repz
shlb
ror
idivl
jp
rorb
ror
repz
bound
loop
out
or
fidivs
inc
dec
addr16
or
jnp
push
neg
pop
shlb
aad
cmpsl
fcoms
loop
push
mov
test
mov
insl
mov
inc
jns
pop
lret
xchg
jge
mov
cmp
ja
in
and
fxch
add
insl
xchg
sti
outsl
mov
push
aaa
into
stos
dec
rol
test
std
add
and
out
loope
xchg
xor
ret
out
not
xchg
arpl
ss
jb
ljmp
pop
add
add
pop
stos
repnz
jg
pop
je
xchg
sub
fstl
dec
xlat
xlat
mov
inc
sbb
icebp
ret
add
rorl
mov
hlt
add
aam
mov
mov
mov
dec
in
jle
jno
sub
nop
cwtl
jbe
jl
cmpb
mov
popa
outsb
add
daa
mov
imul
xlat
mov
lods
dec
je
lahf
xor
pop
pop
jnp
cmp
lret
add
aad
fadd
jnp
lret
and
and
enter
push
inc
or
pop
out
ljmp
xor
dec
adc
pop
movsb
enter
insb
je
stos
ss
insl
pop
sub
lahf
or
xor
nop
xor
loop
dec
outsl
movsb
mov
imul
nop
xchg
movaps
add
sub
mov
pop
lahf
loop
cmp
les
mov
fwait
jns
jg
sbb
pop
dec
insb
pop
leave
dec
xchg
and
les
gs
inc
mov
adc
xchg
rol
mov
sub
mov
sbb
into
add
jl
mov
or
push
movsb
push
sarl
decl
adc
in
adc
lods
mov
xchg
sub
mov
adc
adc
test
mov
jle
mov
mov
aad
xor
jns
or
pop
rcrb
mov
lds
cmp
insb
insb
and
cltd
ljmp
jo
stc
cmc
ja
lods
mov
sub
rclb
jmp
mov
int
scas
test
add
xchg
aam
or
dec
lret
mov
fcos
mov
addr16
and
lcall
mov
je,pn
int
ret
cmp
andb
addr16
lcall
mov
cmc
imul
les
test
sbb
std
mov
push
and
push
andl
divb
pop
ja
repz
icebp
pushf
push
out
xchg
jge
movsl
xor
inc
or
sub
loope
test
ja
sub
or
outsb
pop
repnz
fldl
jne
mov
sbb
sbb
out
aas
mov
orl
lds
mov
loop
adc
loope
push
fcomp
cs
adc
mov
test
ret
inc
mov
ret
in
add
add
lahf
push
lods
in
test
addr16
out
jnp
dec
std
and
pusha
mov
sub
sbb
jno
or
call
stos
or
addr16
mov
dec
cmp
push
pop
or
xor
sbb
jae
repnz
pop
xor
movsl
mov
mov
sbb
add
add
movsb
aaa
arpl
aaa
cmc
inc
pop
push
sarl
popl
repnz
mov
mov
movsl
adc
cmc
push
sbb
mov
mov
pop
mov
orl
add
in
ja
out
ficompl
xchg
lahf
push
fstps
jg
cmpsb
dec
dec
pop
clc
xchg
push
and
pop
nop
inc
mov
jo
cmpsb
je
or
adc
es
nop
xor
cltd
sbb
xchg
adc
inc
cmpsb
xchg
andb
lret
xor
inc
mov
mov
mov
xor
sbb
lret
std
sbb
jg
xchg
testb
dec
xorb
icebp
mov
dec
mov
xor
repz
out
cmp
test
or
jl
cs
xor
xor
data16
bound
outsl
test
fisubl
lods
insb
mov
gs
sub
in
roll
cld
leave
int3
lods
in
inc
and
mov
lcall
xor
mov
mov
gs
sahf
out
mov
sbb
cmp
arpl
dec
popa
js
fdiv
aad
ja
fwait
outsb
daa
mov
aaa
sbb
fcomps
mov
push
mov
jl
sti
jl
pop
sub
fcom
in
adc
xor
mov
je
pop
adc
cltd
mov
rorl
sbb
jae
sub
getsec
push
into
jmp
mov
push
out
test
push
les
sbb
xchg
sbb
cmp
inc
jae
mov
arpl
cmpsb
pop
std
cli
into
sbb
pop
xchg
int
lcall
movsl
loop
fidivrl
dec
es
orl
shll
stc
nop
xchg
jge
dec
lret
in
xchg
pop
aam
adc
pop
pop
dec
aad
insb
frstor
lock
sub
inc
lcall
movsl
pop
lods
xlat
push
inc
sbb
pop
cltd
inc
xchg
cmp
es
jmp
cmp
pop
xchg
push
bound
push
push
clc
lea
pop
negb
pmaddwd
push
mov
cmp
inc
mov
push
in
push
cltd
lock
pop
jp
add
push
mov
pushf
sub
sti
jmp
cli
add
xorb
int3
les
cmpsb
aaa
mov
pop
push
cmp
pop
fiadds
aaa
adc
inc
sub
fdivrl
inc
loop
push
xor
movsl
pop
test
stc
adc
call
sbb
test
mov
sbb
xchg
stos
scas
mov
sbb
cmp
xchg
mov
push
inc
lret
js
xor
je
mov
fwait
int3
das
gs
mov
daa
sahf
dec
mov
sub
jae
pop
push
or
dec
sarb
repz
xor
in
inc
popf
mov
adcb
push
insb
clc
inc
pop
ficompl
inc
mov
lahf
jb
int
jg
setae
jecxz
lock
icebp
inc
lods
fnstcw
test
repz
lahf
addr16
and
pop
arpl
lahf
out
dec
or
push
push
sarb
ret
orb
fstpt
leave
pop
gs
jns
adc
dec
movb
inc
add
jns
lcallw
popf
jne
aas
lods
fwait
aas
mov
sub
dec
cmp
mov
loop
mov
inc
sbb
imul
shlb
cld
sub
xchg
outsb
dec
enter
cld
out
sub
imul
jo
cltd
gs
and
je
push
mov
cwtl
push
sub
add
mov
jp
loop
push
xor
in
mov
int
mov
sbb
jbe
and
pop
inc
neg
addl
int3
jle
test
adc
xor
lock
imul
dec
and
sbb
mov
fs
dec
dec
xchg
xor
sbb
xchg
jns
rclb
imul
xchg
nop
outsl
jns
pop
add
leave
loopne
inc
xor
imul
and
mov
lock
iret
repz
xchg
sbb
test
and
add
pop
dec
cld
lcall
mov
leave
or
sbb
stos
popa
fcomps
insb
sub
pop
xorl
push
inc
call
js
lret
call
adc
jo
shlb
adc
jo
loopne
sbb
adc
subl
mov
pop
adc
lds
mov
add
xchg
adc
jns
dec
xchg
sub
mov
mov
cmp
sub
repz
movsl
adc
push
lret
cmpsb
insb
mov
popa
mov
arpl
mov
addr16
not
fyl2xp1
and
or
lea
push
xor
popa
jbe
test
cmp
std
pushw
mov
dec
pusha
je
xchg
in
fcoms
mov
pop
imul
out
leave
and
mov
lret
es
sub
negl
jecxz
cs
push
divb
add
push
sbb
jns
aad
dec
sbb
jno
xchg
in
filds
sbb
and
shlb
in
inc
mov
add
mov
lret
insl
rolb
mov
bndldx
sahf
int
scas
jo
ss
popa
push
sbb
repnz
pop
sbb
mov
mov
lock
xchg
loope
cmp
in
dec
pop
stos
movsb
fistl
mov
shrb
push
ljmp
add
xor
sub
pop
aad
aas
mov
leave
mov
ja
and
ficoms
es
adc
mov
rol
rcrl
and
add
lret
stos
dec
sub
sbb
in
in
mov
mov
imul
push
sahf
pop
adc
fcoms
sti
lods
and
cltd
jae
adc
mov
jmp
mov
push
leave
js
cmp
fsubr
les
cmpl
loopne
gs
and
push
faddl
roll
mov
test
rcr
popf
and
cwtl
jle
or
insb
dec
sub
or
into
stos
test
aam
mov
jle
sbb
mov
popf
cmp
xchg
jge
dec
dec
jg
imul
jecxz
pop
add
cmp
js
rcll
in
sbb
sbb
mov
scas
mov
or
cmp
cli
cmp
sahf
fs
iret
mov
daa
or
mov
jecxz
ss
cmp
mov
jecxz
or
testl
leave
mov
mov
dec
mov
or
and
mov
or
outsb
imul
and
inc
std
mov
inc
push
cmp
imul
aam
push
mov
jb
jg
test
data16
push
adc
dec
jecxz
aaa
popf
ret
js
in
jo
mov
mov
out
cmp
cwtl
scas
fdivrs
int3
lahf
pop
add
outsb
repz
rcrb
imul
xor
jno
imul
or
lods
bound
sbb
sub
clc
cmp
pusha
cmp
adc
jmp
mov
mov
jle
mov
les
fmull
ret
in
mov
xor
push
pop
notb
push
arpl
outsb
cmpl
scas
outsb
mov
jp
fstps
push
std
iret
push
pop
js
loop
aad
ljmp
xchg
dec
push
cwtl
in
lea
push
shlb
sub
test
subl
daa
fisttps
arpl
mov
in
test
jecxz
ja
cmp
hlt
jnp
jnp
and
shlb
sbb
xchg
in
or
mov
sub
xchg
shl
xchg
push
xchg
push
or
push
sbb
out
shl
aad
mov
xor
lret
mov
pop
or
out
es
xlat
ficomps
mov
mov
jae
scas
lret
inc
or
dec
or
fldt
and
subb
mov
mov
mov
in
icebp
test
iret
pop
loop
out
or
dec
orl
test
xchg
aad
arpl
xor
lods
adc
mov
mov
pop
pop
dec
jmp
xor
mov
nop
dec
ret
repnz
rcl
dec
push
test
dec
arpl
sbb
out
out
js
jmp
shr
cmp
mov
lahf
sbb
call
xor
mov
orb
dec
cmp
jge
repz
scas
in
orl
sbb
and
stos
cmp
aad
jle
cld
sub
mov
lds
push
mov
xor
iret
push
sub
lcall
movsb
push
les
ret
cli
mov
mov
pop
push
loop
enter
pushf
push
or
rcll
inc
bnd
inc
jge
sub
outsw
scas
add
or
call
cmp
mov
iret
lods
lods
repz
xlat
in
imul
add
xchg
adc
loopne
movl
shl
aas
in
js
inc
mov
jmp
jo
cmp
test
and
mov
xchg
jl
cmp
out
dec
and
mulb
mov
ss
or
cmp
push
popa
lahf
cli
dec
repz
dec
add
cmp
sub
stc
pop
sahf
push
bound
popa
cmp
jb
sarb
loop
imul
cmc
jmp
sbb
push
insl
and
aas
add
add
stc
ss
fstpt
mov
ljmp
lods
and
mov
fxch
out
std
addb
xchg
xchg
js
dec
mov
xor
push
mov
sar
mov
daa
aaa
jae
inc
pop
adc
xchg
into
push
mov
pop
mov
xor
in
mov
xchg
mov
mov
push
cwtl
test
sbb
and
xchg
lods
dec
mov
dec
pushaw
fbstp
adc
mov
jmp
mov
in
jae
pop
push
aaa
sbb
xor
xchg
loope
add
push
lcall
add
leave
mov
xchg
xchg
xchg
push
sbb
xor
inc
jno
jle
scas
push
out
sub
sbb
or
push
ret
test
sarb
inc
sbb
mov
loopew
inc
les
mov
jmp
cmp
adc
fmuls
mov
mov
in
pop
rclb
mov
gs
adc
fcoms
cmpsl
xor
fwait
daa
or
std
repz
cltd
aad
cmpsb
push
sbb
std
repz
jecxz
cmpsb
mov
pushl
ja
mov
or
push
xor
xor
sub
into
add
das
or
add
ret
pop
int
fwait
pop
or
sub
sarl
stos
push
push
out
adc
cmc
movsb
jmp
sub
dec
lret
jnp
xchg
pop
cmpsl
test
rol
jle
jbe
add
insb
pop
sub
add
xor
lds
pop
cmpsb
subb
xor
test
adc
fcompl
fdivl
stos
inc
dec
popf
insb
outsb
inc
insl
mov
sub
dec
sub
cmc
jb
loopne
jmp
xchg
outsl
cs
mov
andl
mov
cmp
aam
mov
repnz
loop
dec
jle
push
rclb
adc
mov
and
insl
mov
xor
sti
or
icebp
mov
sahf
in
loope
jne
adc
fstps
pop
mov
mov
jnp
mov
xchg
adc
inc
fs
scas
add
jge
or
mov
repz
or
loope
scas
das
fisubs
mov
fucomi
pop
pop
cwtl
push
dec
jnp
push
push
lds
push
fbstp
add
cmp
sbb
mov
push
sub
cmp
and
jns
ret
sbb
andl
sub
nop
lods
mov
mov
mov
add
xlat
aas
jge
push
fwait
jns
sbb
je
push
cltd
inc
rcll
iret
lret
je
xchg
movsb
mov
push
sbb
ss
push
mov
gs
loopne
cmp
scas
shll
aaa
scas
test
ret
ds
test
or
xchg
or
xchg
js
addr16
xchg
xor
sbb
mov
sub
inc
into
dec
test
mov
pop
jbe
in
leave
add
sar
jb
lock
inc
xchg
xchg
adc
xchg
mov
jecxz
rcrl
inc
or
das
jb
sbb
aam
int3
test
cmp
leave
loop
adc
mov
rcr
imul
js
xorb
in
cld
rcll
test
cmc
daa
cmp
stc
jl
pop
test
jo
mov
sahf
push
out
iret
dec
and
dec
hlt
stc
sbb
in
add
icebp
pop
mov
call
pop
shll
shrl
repnz
popf
addr16
jle
das
je
shrb
ja
insb
adc
lret
and
ret
jno
sbb
clc
adcb
or
stos
or
push
subl
aam
cwtl
cmp
mov
dec
lahf
xchg
test
or
xorb
jo
pop
fnstcw
bound
lret
subb
in
sub
lods
pop
insb
or
int
xchg
std
mov
push
dec
xchg
subb
cmp
push
jbe
les
or
inc
xchg
cld
in
icebp
outsl
push
push
push
cmp
pop
or
addr16
xchg
xchg
insl
adc
ds
cmp
jl
mov
mov
out
jg
pop
movsl
jle
nop
sbb
inc
xchg
outsl
gs
mov
xor
loope
jecxz
xor
int3
test
jge
iret
popa
and
xlat
gs
dec
icebp
or
ficomps
and
or
pop
popa
mov
mov
mov
or
mov
pop
idivl
or
sbb
xor
push
sbb
out
test
inc
stos
daa
inc
mov
leave
lcall
sbbb
fdivrs
push
add
in
leave
cmp
push
bswap
repnz
repnz
xchg
loopne
mov
out
mov
movsl
pop
js
jnp
aam
push
xchg
jne
fcompl
mov
mov
inc
sarb
adc
sbb
bound
or
or
adc
or
xchg
xor
int
pushf
dec
mov
test
hlt
addb
jb
push
enter
mov
jnp
sub
jo
inc
xlat
ja
fisttpl
insl
es
mov
push
cmp
or
icebp
jb
push
mov
popf
dec
or
xlat
fisttps
pusha
cmp
lcall
mov
or
sahf
rol
or
movsl
loopne
and
repnz
or
jl
lods
ds
or
insl
sahf
jmp
sahf
cmp
sbb
lods
iret
and
fstps
fs
push
dec
xchg
movsl
mov
xor
jae
jmp
mov
rorl
sub
test
fstpt
faddl
test
test
ret
aad
mov
pop
lods
das
mov
mov
inc
or
cli
test
ss
rclb
es
push
into
or
filds
or
repz
xchg
inc
aam
xor
xchg
mov
inc
fldl
dec
push
jno
jecxz
cmp
push
popf
mov
lods
hlt
shl
icebp
int3
mov
mov
sbb
int
sbb
add
daa
xchg
rol
stc
lret
add
cwtl
dec
shll
sti
fidivrl
ja
repnz
push
shlb
dec
insl
cmpsb
and
dec
aam
pop
rorb
fwait
inc
xor
cmp
sahf
pop
add
and
adc
clc
hlt
push
sub
pop
jns
faddp
pushl
pop
cmp
dec
dec
adc
test
fdivrs
and
xor
add
out
js
lcall
dec
sarl
fldt
add
dec
cmpsb
lahf
int3
ss
cmp
js
or
mov
inc
and
mov
mov
adcl
pushf
push
cmc
shrb
and
int
dec
sbbb
lds
mov
mov
out
and
pop
sub
ds
add
add
shlb
cmp
push
jno
inc
add
cmp
mov
div
push
ja
xchg
mov
mov
fmuls
jae
xor
sbb
mov
adc
cmp
and
outsb
stos
adc
push
jl
imul
inc
int
or
jbe
pop
imul
inc
orb
outsl
inc
shll
or
mov
insl
ret
mov
mov
pop
xchg
repz
jg
push
cmpsl
xchg
xor
repz
cmp
cmp
cmpsl
xor
mov
js
lcall
int
insl
inc
push
icebp
imul
test
outsb
xchg
sub
sbb
lock
inc
inc
add
std
mov
push
icebp
insb
and
into
out
js
inc
psrad
jl
or
mov
push
lret
out
out
mov
jbe
dec
pop
cwtl
jmp
cld
nop
aaa
jecxz
mov
mov
out
nop
lret
dec
cmc
push
fnstsw
mov
iret
mov
sahf
sbb
movsb
add
in
jp
inc
mov
push
insl
xchg
inc
mov
jecxz
aam
outsb
xchg
aaa
ds
or
jnp
mov
and
shll
movsb
mov
pop
mov
and
cltd
les
ds
push
add
cmp
dec
push
cmpsb
push
push
fnsave
jno
push
sbb
daa
js
test
in
mov
mov
sub
pop
xchg
sbb
jbe
data16
lds
cs
mov
sarl
adc
or
inc
outsb
or
cmp
pop
dec
mov
pop
movsl
movsl
sub
subb
sub
outsb
mov
pop
and
fwait
scas
sbb
xchg
cmpps
mov
test
jle
mov
and
sub
das
fmulp
pusha
and
loopne
fwait
xchg
mov
push
cmp
daa
mov
iret
gs
or
push
push
xchg
and
cmp
inc
jo
icebp
dec
das
xlat
cmp
leave
je,pt
movsb
add
in
cmp
xchg
inc
enter
lock
gs
vorpd
sbbb
jmp
cmpl
sub
aam
adc
jne
sub
loop
and
adc
jb
xlat
enter
sbbl
sbb
aam
sub
pop
xor
scas
pop
cld
enter
push
cmp
popa
je
aad
in
dec
aaa
movsb
and
dec
mov
jns
or
pop
jp
mov
in
or
cmp
mov
repz
adc
aam
stos
es
imul
mov
inc
imul
pop
mov
cmpsb
or
pop
cmp
mov
iret
and
push
loope
jle
sbb
icebp
lods
stc
test
push
bound
clc
xor
imul
push
in
push
and
leave
in
ja
and
pop
insb
and
stos
mov
xchg
enter
dec
inc
pop
ret
rolb
shrb
push
xlat
fmul
aaa
sub
jno
icebp
dec
push
mov
dec
pop
pop
pop
inc
and
mov
aaa
add
fimuls
dec
dec
pop
imul
and
mov
rcl
adc
inc
xchg
popa
popf
inc
sub
stos
sub
pop
cmp
xchg
cmp
inc
sti
adc
pop
lret
xchg
hlt
jg
lods
aad
adc
mov
int
repz
mov
aad
outsl
test
mov
jle
mov
xchg
icebp
lahf
loope
jb
and
lds
cmpsl
std
mov
push
int3
mov
mov
inc
push
push
movsl
xchg
loope
jno
pushf
outsl
jbe
mov
push
xchg
ja
push
cltd
jb
cmp
pop
push
xchg
mov
jns
scas
xchg
or
inc
adc
into
ret
out
jbe
data16
loope
mov
mov
lds
pop
and
xchg
aas
repz
xlat
jno
popf
mov
add
fisubl
stos
aas
pop
and
lds
adc
sbb
mov
dec
imul
pop
mov
pop
adc
mov
mov
les
lods
mov
lea
mov
xchg
ret
notb
pop
mov
pop
and
jecxz
in
popa
jno
xor
test
dec
xor
xchg
rclb
imul
push
add
mov
aad
push
and
in
cs
mov
add
imul
aaa
push
call
das
push
movsb
pop
in
lret
adc
inc
addr16
xor
dec
xchg
sub
mov
lahf
pop
fwait
daa
fwait
pusha
js
push
cmp
sbb
ds
sarl
or
jnp
jae
and
je
sbb
cltd
jg
sub
sub
jb
fwait
pushf
gs
gs
sbb
cmpsl
or
inc
sub
test
push
inc
int
xchg
inc
push
fwait
mov
js
jmp
push
and
scas
mov
test
adc
pop
lahf
fs
xor
imul
jp
andl
pusha
cmp
and
add
outsl
cltd
cs
test
and
rol
xchg
sub
dec
fsub
inc
negl
mov
mov
call
cmp
and
and
ljmp
dec
stos
pop
jge
sub
shll
leave
sub
loopne
shrl
daa
fnstcw
lcall
push
xor
sub
sub
int3
or
loope
push
in
and
cmp
out
fistpl
adc
aaa
cmpsl
lret
cwtl
pop
add
xor
cmp
push
xchg
mov
cmp
mov
xchg
push
cmp
nop
mov
pop
lods
push
cmpsl
add
hlt
xchg
dec
mov
push
pop
lcall
mov
icebp
pop
dec
pop
jg
fsubp
aam
jle
push
lods
dec
out
mov
xchg
je
sub
cld
push
call
pushf
cltd
idivb
inc
sbb
pop
mov
jmp
adc
or
sbb
cmp
push
lock
mov
lea
cltd
or
enter
pop
es
jle
ss
mov
cld
fnstenv
lcall
inc
fwait
sbb
jg
xor
sub
cltd
iret
mov
addl
insl
cmc
rolb
inc
es
out
xlat
dec
add
rorb
add
mov
cli
loopne
int
or
cmp
jno
mov
or
loope
fiaddl
lock
inc
cmovae
out
push
test
cwtl
jne
jp
out
sbb
iret
mov
sti
sbb
xchg
pop
test
mov
add
jbe
mov
mov
jg
imul
adc
inc
sbb
ljmp
and
mov
mov
aam
mov
and
and
rclb
fidivs
and
fldenv
mov
mov
mov
insb
dec
fildll
mov
popf
xor
cmp
xchg
mov
in
inc
daa
pop
add
add
push
dec
iret
pop
lock
les
lret
lods
push
fadds
loope
dec
mov
or
fcompp
jns
jmp
test
repnz
pop
xchg
aad
jb
shl
inc
orb
mov
mov
fwait
imul
mov
jmp
fs
inc
fs
adc
pop
cmp
and
ret
mov
ljmp
mov
and
jp
ja
lock
mov
lcall
mov
loopne
lret
add
add
fildll
insl
lods
cwtl
outsl
inc
mov
inc
hlt
cmp
pop
das
add
mov
das
xor
fwait
sbb
daa
imul
push
mov
in
inc
repz
sti
pop
push
and
sbb
insl
jb
xchg
push
pop
ficomps
movsl
add
mov
add
jno
add
lds
pop
inc
shl
mov
jne
jmp
clc
cmp
outsl
and
cmp
fiaddl
lods
sub
faddl
sub
sbb
loop
mov
add
push
mov
and
ret
fimuls
and
pop
inc
insl
sbb
bound
rcrb
dec
stos
das
sub
mov
xor
sub
xchg
ds
aam
adc
dec
xchg
loopne
jg
es
divps
mov
cwtl
es
aad
inc
push
or
mov
ret
addr16
out
mov
dec
into
pop
jnp
call
push
dec
cmp
les
jge
rol
cmp
pop
push
push
mov
or
fdivs
cmpsb
mov
cltd
mov
push
lret
stc
addr16
ficoms
or
push
inc
repnz
ret
mov
cld
sbb
test
mov
mov
sbb
push
fwait
adc
stos
out
mov
xchg
dec
xchg
push
xlat
xchg
inc
scas
rcpps
ds
xchg
int3
dec
dec
test
xor
pop
and
or
mov
int
ss
jne
inc
jne
add
adc
cmpsb
inc
aas
imul
cmpsb
insl
mov
xor
ret
sbb
scas
and
orb
fs
mov
bound
xor
cmc
js
sub
push
add
cmpsl
pushf
insl
mov
jnp
cmp
mov
test
test
jp
lds
inc
xor
int3
push
lcall
dec
sub
or
sbb
test
loop
dec
fnstcw
lods
cmp
pushf
and
jmp
mov
aam
ret
test
and
sub
or
mov
xchg
jb
cli
mov
ja
call
aad
add
or
cmp
cli
cmp
mov
fs
mov
aam
sub
inc
movsl
out
cmpsb
shlb
iret
ret
clc
adc
sbb
cmp
repz
mov
bound
push
mov
lods
pop
mov
lret
into
inc
mov
pop
popa
shl
daa
cmp
fs
testl
jne
pushf
lods
xchg
mov
mov
mov
lock
loop,pt
lcall
xchg
cwtl
into
mov
and
jp
pop
mov
push
inc
int3
mov
sarb
xor
cmp
push
sti
jg
xor
xchg
mov
ss
aam
dec
and
cld
jns
ret
or
or
add
add
je
cmp
aaa
addr16
into
sti
cmpsl
mov
mov
out
push
dec
pop
lea
fs
cmp
adc
adc
insl
outsl
sbb
rcll
xor
dec
push
iret
in
and
mov
jecxz
xor
xor
lahf
imulb
sub
xor
test
faddl
cmp
loope
int
pop
mov
mov
mov
insl
in
orl
insb
mov
inc
mov
scas
add
fdivr
inc
inc
in
xor
aas
inc
push
outsb
xchg
das
dec
cs
loop
adc
jno
test
lds
cltd
addr16
int
push
lret
and
rclb
mov
cs
or
testb
fcomp
or
mov
lahf
cmp
jmp
iret
imul
popf
pop
dec
pop
xor
pop
ja
or
add
scas
enter
or
jno
dec
jb
inc
mov
out
pop
sbb
mov
mov
faddl
push
ret
repz
es
dec
loope
shrl
mov
add
sub
pop
scas
rorb
inc
pop
pop
loopne
loopne
imulb
cmpsl
cli
mov
adc
sti
adc
mov
push
lods
add
lods
cs
data16
dec
aaa
sbb
insl
in
dec
mov
sarb
cmp
scas
mov
test
dec
xchg
mov
cmp
ljmp
jno
mov
enter
jo
add
dec
ss
outsb
xchg
and
jno
sbb
push
lock
pushf
into
movsb
call
callw
in
cmp
jns
icebp
insl
and
adc
cmpsb
mov
arpl
or
dec
jge
mov
mov
nop
pop
loope
or
shr
mov
jp
ljmp
cmp
notb
test
fstp
shll
add
not
cmp
jp
sbb
gs
cli
popa
mov
mov
lods
and
xor
inc
cmp
jg
call
ficoms
js
push
subl
pop
pop
int
cmc
cmpsl
xchg
xor
fbld
dec
test
std
clc
or
adc
jb
jne
icebp
gs
xchg
cmp
rcll
pusha
mov
nop
fcoms
xor
sub
jmp
mov
adc
cli
insl
sar
push
jmp
pop
sbb
cmp
movb
add
pop
cmp
dec
xchg
or
aas
cmp
push
dec
pop
js
xchg
xchg
xchg
push
pop
inc
xchg
ss
mov
popa
push
enter
out
sbb
fsub
mov
sub
xchg
fwait
test
lods
sbb
mov
insb
cltd
movl
mov
cmp
cld
movsl
mov
je
mov
xor
adc
shll
ror
jmp
push
loopne
mov
outsl
iret
mov
jno
inc
repz
mov
dec
jnp
int3
fbstp
sbb
jne
mov
add
mov
test
mov
xchg
pop
cmp
insl
jnp
push
movsb
jg
int3
add
dec
arpl
imul
lcall
aad
cmp
mov
mov
sub
bound
xchg
push
add
sbb
call
mov
adc
repnz
sbb
xchg
mov
lret
daa
adc
push
outsl
shrl
dec
mov
sub
sbb
sbb
pop
enter
xchg
push
test
test
push
out
rorl
sbb
push
rorl
pop
mov
sub
packssdw
mov
out
jno
dec
adc
push
push
es
jne
lret
or
jo
loope
lds
inc
cmp
inc
je
sti
loop
lds
sbb
pop
xor
dec
orb
ja
shl
jb
add
xchg
mov
dec
mov
es
mov
cld
push
fildll
fists
push
dec
pop
or
push
push
cmovb
js
dec
sbb
rclb
in
pop
xchg
inc
adc
scas
xor
or
lea
fcoms
sub
mulb
xchg
test
pop
mov
sbbb
cmp
inc
cmp
mov
loope
insb
xchg
add
adc
lret
and
and
cmp
add
inc
notl
addr16
popf
rcr
mov
test
insb
and
std
mov
dec
add
jno,pn
pop
fsubs
xchg
les
jp
aas
pushf
aaa
mov
das
in
div
rcr
push
push
mov
cmc
es
jge
clc
mov
add
add
dec
mov
sub
dec
mull
and
xchg
cmpsb
fidivrs
dec
pop
ficomps
fdivr
fldt
loope
imul
inc
or
imul
cli
dec
xchg
adc
in
lret
cmpsb
mov
add
pop
stos
cmp
pop
cmp
mov
mov
and
xor
fisttps
ds
pop
xchg
ret
jno
leave
pushf
loope
mov
lods
xor
push
push
jo
fnsave
push
addr16
mov
sbbb
aaa
shlb
mov
adc
movsl
push
jecxz
cmp
pop
in
xchg
addb
xchg
sbb
and
dec
ficoml
inc
cmpsb
stos
movsl
jge
jp
sbb
mov
pop
adc
and
lahf
sub
push
mov
push
adc
cmpsl
adc
stos
adc
pop
mov
shl
pop
and
dec
or
leave
icebp
or
fldcw
xor
std
xor
xor
popa
jo,pt
add
das
mov
in
mov
jge
push
fimuls
repz
test
rcrb
lahf
js
cmp
sub
mov
arpl
insl
jns
inc
inc
les
test
inc
dec
cmp
dec
in
pushf
jg
out
mov
mov
xchg
sub
or
clc
sbb
mov
pop
inc
or
add
push
mov
and
inc
dec
mov
and
cwtl
push
inc
or
jp
outsl
jle,pt
mov
cmpsl
popf
or
mov
cmpsb
jmp
test
pop
cmp
mov
lods
add
clc
cmc
ds
cmp
mov
fwait
lds
mov
xlat
cmc
cmpsl
rol
cmpsl
mov
inc
popa
add
xchg
bound
mov
dec
in
pop
sbb
movsb
lcall
outsb
jmp
pop
mov
je
pushl
inc
xor
dec
fwait
lret
fs
jl
dec
push
scas
xor
xor
jp
dec
dec
sbb
xchg
xlat
cmp
push
xorb
mov
jbe
stos
or
mov
lock
pop
sti
mov
cmpsl
inc
inc
xchg
xor
sub
int3
xorb
jecxz
pop
jns
hlt
imul
arpl
pushf
pop
lcall
push
sbb
push
cwtl
pop
pop
mov
aas
aas
and
ret
cmp
out
dec
and
inc
jne
clc
inc
push
in
ficoml
cmp
jae
jecxz
cmc
mov
js
popf
mov
push
pop
sub
mov
sti
sub
loope
pop
lock
nop
xchg
or
hlt
jl
outsl
sub
inc
sub
push
jae
pusha
sub
insb
icebp
cmc
sbb
nop
inc
mov
inc
xlat
push
add
iret
fdivs
push
gs
mov
mov
and
fs
xor
jae
lret
push
fnsave
mov
dec
xchg
mov
outsb
sbb
mov
or
loope
and
sbb
cmc
mov
popa
sbb
cmp
fwait
inc
or
inc
es
leave
jp
frstor
test
mov
push
out
jbe
shrb
gs
mov
xchg
pop
lock
xor
mov
push
arpl
inc
int
add
adc
mov
sub
sub
or
ds
sbb
dec
test
cmp
int
xchg
ret
or
lock
sbb
movsl
pop
in
dec
push
ss
rolb
xor
and
cmp
cmpsb
mov
mov
insb
in
cmpsl
in
or
xchg
in
dec
push
push
aad
push
repz
xor
pop
shlb
and
sub
stc
jmp
adc
cmp
dec
cmpsb
adc
gs
clc
pop
daa
dec
jbe
mov
dec
sti
and
rolb
movsl
and
push
or
shr
in
add
or
sub
xlat
data16
mov
cmp
aas
aad
insb
jp
out
rcrl
daa
push
mov
movsb
dec
mov
and
add
push
pop
test
sbbw
mov
mov
stc
es
out
lret
dec
data16
fidivrs
jo
ss
push
sahf
aas
std
fildll
jbe
xor
mov
xchg
mov
mov
dec
shrl
out
push
sbbl
mov
mov
cwtl
fcomps
adc
subb
jl
inc
cmp
cmp
mov
adc
add
and
dec
sbbl
dec
pop
pop
push
jne
jo
repnz
push
sbb
scas
negl
imul
ljmp
aad
jb
fmuls
shr
out
add
xchg
mov
shlb
push
shrl
shlb
repz
mov
sbb
das
jnp
xchg
push
dec
mov
and
push
aam
jno
cmpsb
lea
push
mov
inc
xchg
and
mov
into
pop
mov
cmp
pop
xchg
test
push
daa
in
push
ret
in
mov
inc
mov
pushf
mov
mov
cmp
cmp
push
cli
imul
cmp
and
fwait
addr16
inc
fstpt
jae
push
idivb
mov
and
cmp
add
mov
sbb
cld
xor
inc
loop
bnd
pop
ja
sar
test
pushf
mov
test
fldt
pop
jnp
mov
into
cmp
lahf
jmp
test
iret
mov
bswap
and
in
ret
dec
ljmp
pop
and
push
xorl
inc
imul
dec
cmp
pop
or
imul
and
or
pop
pop
popf
jg
lock
xchg
sub
sbb
jg
mov
push
gs
mov
xor
popl
hlt
cmp
add
sbb
dec
mov
push
insb
inc
jg
lcall
mov
leave
adcb
and
inc
pop
adcb
pop
push
popl
das
xor
mov
cmp
sbb
jl,pn
loop
adc
icebp
push
scas
es
mov
movsb
loope
out
fsts
sub
hlt
into
in
jb
jb
pop
test
and
or
mov
das
orl
movl
push
push
std
cmc
add
jl
xchg
stc
xor
cmp
scas
xchg
in
lea
sbb
in
leave
xor
lock
add
xor
xor
mov
lahf
test
pop
and
and
mov
addr16
jp
jae
push
xorb
jle
test
lret
jge
inc
les
les
jg
xor
cmp
push
orb
hlt
sbb
xlat
imul
mov
es
lret
jno
das
pop
mov
dec
aam
out
out
xchg
inc
pusha
fldenv
sub
jnp
int3
decb
hlt
movzbl
adc
scas
pop
scas
xchg
jae
xchg
pop
lahf
or
popf
movsl
inc
ljmp
xchg
xor
xchg
push
fmul
ds
aas
es
pusha
lcall
cmpsb
dec
outsl
add
sub
mov
xchg
mov
sub
mov
push
inc
pop
xchg
outsl
ret
faddl
popf
xchg
mov
add
repz
dec
lret
xchg
in
mov
stos
int
mov
fwait
les
mov
lret
mov
lds
out
or
push
jbe
test
adc
stc
outsb
lods
insb
repz
rorb
js
iret
sahf
js
or
ret
lods
jl
xor
scas
cwtl
lds
testl
inc
clc
into
sbb
loope
xchg
jecxz
pop
and
imul
jmp
and
xor
sbbb
lds
adc
pop
dec
or
lret
in
jne
jmp
insb
xchg
adc
loopne
pop
leave
roll
mov
or
and
add
stc
imul
sbb
mov
fs
sarl
into
cmpsl
pop
and
mov
jle
and
sbb
outsl
mov
mov
mov
adc
pop
adc
iret
dec
arpl
sub
mov
dec
fiaddl
fcoml
pusha
cmp
in
nop
clc
xchg
pop
lret
sahf
mov
cmp
movb
mov
jbe
xor
out
lea
jg
jge
iret
mov
ss
and
sub
push
les
fidivrs
data16
mov
movsl
fwait
push
mov
xchg
lock
mov
scas
ss
ds
xchg
jae
inc
fstps
mov
push
jmp
and
sub
push
dec
adc
test
sub
jp
inc
pop
inc
sbb
outsl
mov
iret
xor
sbb
scas
xchg
or
loope
dec
push
fidivrl
int
dec
sub
lahf
ret
lea
push
xor
sbb
mov
loop
xor
push
or
add
mov
cmp
or
adc
xchg
loope
mov
sub
lods
ljmp
arpl
movsb
loopne
mov
je
pop
scas
clc
xchg
and
add
aaa
sub
sbb
adcb
fwait
pop
push
add
sub
das
add
lock
pop
loop
jmp
mov
test
sbb
addr16
cltd
div
or
sbb
lahf
scas
adc
inc
inc
bound
cmpsl
dec
shrb
adc
dec
mov
and
pop
scas
gs
mov
sub
andl
push
pop
dec
repnz
clc
inc
fcompl
jns
mov
test
ltr
push
adc
dec
xchg
push
cmp
push
or
test
inc
bound
loopne
cld
inc
push
enter
pop
push
sub
fs
push
cmc
mov
mov
dec
nop
pop
xchg
mov
arpl
shrb
and
pop
movsl
gs
or
lahf
movl
or
and
outsl
mov
fwait
xchg
xchg
push
push
adc
dec
pop
pusha
inc
stc
cmc
std
mov
rorb
inc
dec
mov
dec
cmp
cli
test
clc
and
pop
fld1
daa
or
rorl
nop
push
cmp
dec
popf
inc
adc
xor
and
lock
push
movsb
stc
cmpsb
fs
dec
jmp
subl
out
cmp
ret
dec
xchg
lods
ljmp
mov
addr16
jno
std
rorl
dec
jecxz
cmp
icebp
js
mov
pop
inc
adc
ss
xchg
lods
loop
adcl
imul
aaa
idiv
imul
xor
adc
aad
or
scas
ret
sar
ljmp
pop
push
xor
or
inc
inc
outsl
sub
pop
jecxz
xchg
repnz
sbb
and
sub
xchg
jle
sbb
sub
shr
inc
sub
pop
cwtl
mov
aas
ret
xchg
shlb
mov
mov
sub
mov
movsb
shlb
add
pusha
adc
ljmp
inc
push
cwtl
sbb
cs
and
enter
xchg
dec
pop
and
cli
sub
insb
movsb
movsb
jno
xchg
xorl
adc
pop
in
jmp
pop
sarl
fisubrl
loope
cs
ljmp
adc
xchg
fldcw
mov
jns
or
sbb
mov
gs
mov
stos
pop
leave
adc
insb
xchg
pop
std
push
addl
jne
dec
imul
data16
popa
pop
lods
xchg
scas
gs
mov
push
jne
jns
ja
push
dec
and
fists
pop
sbb
add
cmp
push
ja
add
pop
pop
int3
js
jmp
push
stc
add
mov
andb
aam
out
int3
jbe
jmp
sahf
sbb
sub
fstl
sub
mov
mov
sub
mov
vpsrad
lret
lea
inc
jg
xchg
daa
loope
test
or
addb
test
mov
faddl
sub
xor
cwtl
aas
sub
or
jns
jo
cmp
out
loop
inc
out
rol
gs
gs
mov
mov
js
mov
push
rclb
sub
mov
inc
dec
test
outsl
lods
imul
orl
xchg
pop
fwait
clc
mov
js
sbb
push
repnz
mov
test
aas
int
mov
cs
mov
jns
cwtl
cs
mov
adc
cltd
push
inc
std
aaa
xchg
xchg
sbb
dec
addr16
cmp
jmp
popa
sbb
pop
push
gs
call
scas
mov
sbb
mov
leave
int
mov
fisubl
jae
jno
jno
test
je
nop
xchg
aam
icebp
push
mov
jne
jmp
out
inc
xlat
sbb
push
cltd
leave
fnstcw
pop
dec
inc
loope
push
sbb
mov
data16
mov
insb
mov
stos
mov
jne
xchg
add
orb
das
mov
addb
js
push
add
or
sahf
jne
ret
in
adc
or
ja
jb
and
jmp
add
pop
dec
dec
mov
sub
and
push
aam
shll
shlb
jbe
mov
out
xlat
dec
fstl
jl
sbb
in
fisubrl
sbb
clc
jae,pn
loopne
test
or
mov
cmp
pop
sarb
sub
jne
repnz
push
pop
test
adc
sbb
popa
cs
sub
mov
inc
popa
dec
js
push
test
sarb
stc
movsb
in
fucomi
sub
mov
mov
rcl
cmc
push
mov
test
jb
cmp
and
jb
cmpl
lods
lcall
insb
test
and
pop
xlat
insl
dec
ljmp
pop
leave
aad
and
jecxz
lock
jmp
mov
sub
mov
fdivl
je
nop
xchg
add
add
dec
arpl
fidivs
inc
push
adc
sbb
ror
xor
repnz
adc
cmp
in
pusha
dec
addr16
sbb
int3
pushl
fmul
fisubl
xchg
dec
movsl
sub
sbb
sbbl
push
or
cmp
adc
push
adc
les
fs
subb
scas
dec
mov
jp
and
add
sbb
rep
pop
loope
lock
xor
out
xchg
add
mov
push
mov
test
insl
and
adc
sti
lahf
mov
loope
mov
push
and
imul
xchg
xlat
fdivrp
mov
lods
rcrb
jno
aam
mov
jg
mov
sub
or
dec
xchg
push
push
push
rep
or
fisubrl
adc
mov
push
inc
lret
enter
fimull
movsl
imul
mov
cwtl
dec
pop
stc
push
jle
gs
pop
jns
outsb
jg
pushw
xor
cmpsl
leave
ds
inc
test
mov
inc
pop
inc
test
cs
mov
repz
lret
int
push
xor
ret
push
sahf
ror
inc
mov
jae
test
dec
out
dec
xor
cltd
mov
push
rcll
es
mov
xor
or
lahf
and
out
lods
out
inc
lcall
mov
add
mov
pop
pop
stos
pop
cmp
fidivrl
dec
mov
push
adc
fldt
adc
pop
movsl
pop
loope
jns
cmpsl
subb
adc
test
add
pop
in
mov
imul
das
jnp
lret
loop
mov
mov
push
idivb
jle
lret
jbe
lret
pop
mov
sub
pop
loope
mov
and
jno
jmp
sub
xchg
fsubp
dec
push
test
pop
jl
mov
inc
xorb
and
stos
xchg
cli
pop
xchg
mov
mov
or
lret
in
aaa
daa
in
add
add
popf
xchg
pop
das
jmp
lock
scas
cli
sbb
cmp
in
rcl
xchg
add
sbb
scas
xchg
mov
add
outsl
pop
scas
insb
mov
ljmp
push
clc
xlat
js
nopl
imul
sub
mov
fimull
ret
cltd
movsl
push
cmp
std
dec
or
xchg
mov
mov
mov
and
loope
out
out
jp
xor
imul
fisttps
inc
xor
push
into
mov
mov
mov
mov
mov
add
fbstp
scas
mov
std
test
push
stc
xchg
mov
lret
jo
pop
imul
xchg
sbb
sahf
dec
push
ja
iret
je
stc
sbb
pop
ljmp
sbb
and
cmp
mov
out
mov
jns,pt
addr16
push
bound
mov
rcll
mov
push
sbb
cltd
and
lods
add
jl
xchg
jno
out
test
mov
jmp
in
addr16
js
or
cwtl
mov
adc
outsl
inc
pushf
movsb
movsb
sub
inc
cmp
sbb
scas
and
xchg
cmp
sbb
int
loop
dec
icebp
xchg
testl
add
fld
addps
push
jle
rorb
je
add
dec
nop
cwtl
push
mov
in
in
dec
clc
test
pop
dec
in
cmp
ret
sub
or
and
inc
nop
outsb
inc
pop
xchg
mov
xor
cmp
mov
mov
std
pusha
or
sbb
or
mov
mov
icebp
out
in
or
mov
dec
cmp
jb
mov
mov
pop
and
in
scas
insb
outsb
mov
and
fcmovnu
ds
xchg
daa
insl
sbb
sub
adc
mov
arpl
and
mov
insb
shr
dec
lods
dec
insb
mov
push
dec
rorl
div
lret
sar
out
testb
push
jmp
and
outsl
arpl
or
push
mov
add
mov
cmp
sbb
sti
out
aad
sbb
sub
pop
ja
inc
sbb
xlat
cmp
cmp
or
outsl
ret
stc
mov
and
das
and
icebp
cmpsb
das
sub
add
jmp
xchg
in
scas
into
and
adc
jge
or
inc
adc
loopne
or
rclb
cli
xor
mov
not
test
pop
push
lods
movsl
xchg
pmullw
int3
mov
inc
lcall
pop
mov
and
ficoml
ror
mov
fwait
lods
cld
sbb
jle
fstpl
icebp
popf
ds
mov
in
insl
or
sbb
and
movsl
push
pop
repnz
icebp
sub
hlt
jne
mov
xchg
cltd
add
mov
in
push
gs
add
popa
addl
or
outsl
push
loop
lods
cld
lcall
out
mov
cli
cwtl
hlt
clac
jbe
mov
incb
xor
inc
ljmp
mov
lods
mov
sbb
push
mov
outsl
xor
push
jno
sub
lods
adc
idivb
dec
clc
pop
mov
pushf
xchg
mov
ss
push
loope
test
dec
imul
push
push
fstps
pop
pop
cwtl
push
mov
mov
mov
lret
mov
xchg
loope
mov
pop
push
xor
iret
lcall
mov
pushf
gs
jns
jp
arpl
pop
push
cmp
add
scas
xor
push
loope
rorl
push
cs
dec
fnstenv
mov
jns
sub
cld
sti
dec
adc
in
jb
inc
pop
inc
std
in
jmp
mov
ss
les
adc
lcall
or
xchg
mov
or
mov
lcall
sbb
je
or
sub
daa
movsb
leave
xchg
scas
enter
jmp
pop
inc
mov
and
or
test
icebp
sbb
ret
call
mov
loopne
aad
mov
inc
ljmp
dec
mov
mov
add
fs
or
push
xchg
xor
test
cmp
cmp
mulb
pop
test
fnstsw
or
xchg
xchg
jns
push
aaa
pop
pushf
jb
xchg
xacquire
sub
popf
rclb
cmp
cld
nop
xorl
test
mov
mov
lods
fs
add
sahf
adc
cli
jle
inc
adc
mov
mov
in
fistl
cwtl
out
sbb
fadds
sbb
add
jecxz
repnz
adc
das
lcall
cmc
je
mov
inc
ja
shl
addr16
xor
xchg
jmp
add
enter
push
push
mov
mov
fcompl
add
sub
mov
imul
mov
xchg
scas
flds
lds
xor
xchg
fisubl
shr
mov
lret
xchg
push
jl
clc
cmp
cmp
fistps
lcall
cmp
mov
add
inc
xor
ja
sbb
cmp
shlb
es
and
cmc
lret
or
ret
test
mov
bound
ret
pop
pop
test
jb
inc
jle
lcall
mov
fbld
add
inc
inc
ss
xchg
mov
or
mov
mov
hlt
outsl
jns
pushf
add
jg
fildl
test
lods
dec
sbb
xor
dec
mov
nop
nop
les
adc
and
add
pushf
mov
sbb
fmuls
sub
or
cld
add
sahf
addr16
push
lcall
sar
test
ret
mov
out
rcll
fcom
mov
sbb
inc
push
mov
nop
sbb
add
mov
adc
xchg
pop
xor
jne
fsubrs
dec
in
popa
pushf
cli
sbb
ljmp
leave
fwait
pop
not
dec
mov
and
dec
xor
push
inc
push
call
lods
cmp
stos
jge
cmp
fwait
fwait
xor
cmpsb
lock
in
sbb
jecxz
or
hlt
sarb
jns
stos
mov
sbb
xchg
fists
filds
pop
mov
hlt
addr16
mov
cwtl
sub
push
mov
loop
mov
inc
das
lea
icebp
pop
xor
jmp
shll
or
lods
jo
pop
arpl
jmp
xchg
or
dec
popf
push
mov
ficoms
add
movsl
sub
into
scas
nop
cmc
inc
dec
std
rorb
loop
std
divb
andb
int3
add
cmc
cmpb
jmp
loope
xchg
sahf
cli
jecxz
push
add
xor
mov
js
cltd
out
cltd
mov
into
sbb
or
cld
rorl
mov
leave
pusha
push
mov
pushl
je
adc
sub
js
xor
adc
scas
ret
dec
decb
pop
jmp
xchg
and
push
sbb
push
lahf
mov
or
pop
dec
dec
adc
lods
loop
jae
mov
mov
mov
xchg
fisttpl
mov
or
sub
movsb
mov
leave
jl
push
pop
les
jno
add
jecxz
sbb
ja
scas
inc
inc
push
xorb
mov
movb
andnps
cmp
inc
iret
lcall
movsb
and
jmp
pop
mov
pop
mov
ret
xlat
ljmp
push
or
clc
into
aam
enter
sub
mov
not
sub
and
fnsave
sahf
or
shl
pop
adc
dec
or
cmp
into
ret
dec
and
fdiv
mov
adc
sbb
cmovge
pop
mov
jmp
jmp
xchg
mov
out
mov
lds
lods
ror
mov
nop
mov
cmc
movsl
dec
push
fnsave
sarb
mov
adc
js
pop
add
cltd
sub
adc
jo
mov
mov
mov
sub
cmp
pop
dec
ret
jbe
sbb
mov
jmp
xchg
jmp
testb
dec
cmc
xor
sarl
sbb
pop
fwait
out
adc
sbb
push
mov
mov
mov
cmp
dec
push
push
sub
lret
fucomp
out
adc
mov
or
insb
pop
and
dec
mov
dec
mov
or
cmovns
sbb
rcll
jbe
mov
cmp
mov
lods
sbb
jle
push
int
in
fmul
bound
inc
scas
mov
enter
dec
out
out
bound
subb
pushf
pop
push
sub
lods
push
imul
pop
cs
aam
mov
lret
jge
out
cmc
mov
sbb
dec
pop
jl
inc
js
loopne
jl
dec
movsb
bound
push
and
out
in
mov
mov
cmp
ss
add
push
jmp
xrelease
cltd
inc
into
push
lds
mov
inc
mov
mov
jb
imul
mov
frstor
les
mov
or
lret
inc
add
adc
mov
setbe
cmpsl
stc
lea
mov
inc
mov
cli
sub
imul
xor
pop
rcl
gs
cmp
xchg
sahf
ret
fisubrs
arpl
das
cs
dec
int
mov
or
fsubp
shlb
adc
ja
push
and
adc
mov
dec
mov
cs
mov
mov
push
dec
mov
pop
jp
or
inc
aas
lds
jge
or
je
xor
pop
pop
adc
push
inc
xor
mov
xchg
repz
iret
lret
jge
mov
out
aad
xchg
icebp
adc
sbb
ja
test
out
fwait
sahf
fstpt
add
cld
imul
ror
jb
cmpsl
sbb
popf
call
es
and
xor
das
movsb
imul
cmpsl
mul
inc
inc
xchg
es
into
and
mov
ja
leave
popa
mov
lods
scas
rclb
loope
inc
jp
daa
int
pop
loope
push
stos
or
stos
fdivs
js
jbe
cmp
gs
xchg
stc
and
repnz
jecxz
aas
gs
std
add
cmp
push
mov
adc
mov
lcall
imul
pop
shl
out
popf
out
push
fwait
and
inc
dec
sarb
mov
aad
mov
push
xor
sbb
jbe
mov
pop
loopne
std
pop
cmp
in
in
out
in
je
nop
xchg
scas
pusha
repnz
xor
and
aad
jle
js
dec
and
cli
cs
inc
loope
push
push
mov
adc
sub
sbb
jno
cltd
xchg
mov
inc
jmp
adc
stos
int3
outsl
cmp
mov
dec
lods
fidivs
clc
adc
cwtl
xchg
ret
inc
xchg
shll
movl
xor
and
push
xchg
dec
dec
mov
cmc
mov
and
adc
push
cmp
jle
cmpsl
sub
jb
xor
pop
fimull
and
in
int3
popa
mov
cmc
jnp
add
cwtl
and
daa
jg
gs
adc
mov
mov
cwtl
inc
cmc
jae
inc
insl
pop
outsl
lock
push
test
mov
cltd
mov
push
push
cmp
xor
in
cmp
mov
cmp
decl
push
jp
inc
push
pop
adc
dec
mov
or
daa
into
sub
sub
addl
push
inc
xchg
mov
sub
inc
xor
imul
jns
fcmovu
inc
xchg
push
arpl
jle
mov
push
shll
jecxz
lods
xchg
aas
int
test
push
cvtps2pd
or
push
mov
push
das
fs
fidivl
js
mov
push
fstl
ret
int
mov
mov
icebp
dec
test
shl
out
xor
mov
xlat
std
test
pop
mov
push
lock
push
mov
xchg
mov
cmovg
rcl
loope
cmp
pop
in
mov
add
xchg
sbb
and
push
inc
repnz
stc
lods
int3
push
xor
test
ljmp
notb
outsb
jns
mov
inc
push
enter
sub
mov
enter
lods
xchg
icebp
dec
xor
sbb
les
out
inc
push
mov
sub
add
pushl
jp
jnp
scas
out
push
inc
ds
adc
aaa
int
les
mov
push
sbb
mov
imul
cmp
sbb
mov
and
rorb
add
je
out
xchg
pop
test
jns
cli
add
ds
int
dec
mov
or
dec
cmp
push
int
mov
mov
idiv
rcr
mov
mov
insb
xchg
sub
outsb
ja
xor
xlat
mov
sbb
int3
ja
test
pop
dec
xchg
cmp
adc
mov
xchg
push
mov
ss
leave
xchg
orb
pop
push
sub
xchg
test
mov
sbb
dec
xor
jb
cmp
aas
movd
cmc
xchg
add
fcoms
mov
in
in
je
cmp
mov
les
push
xchg
cmp
inc
xor
xlat
cltd
and
xchg
mov
out
mov
mov
sub
jne
cld
sub
ret
out
cmpsb
lock
jle
ss
pop
jnp
sub
xlat
pushw
call
cmp
sahf
hlt
std
mov
mov
cltd
ret
xor
xor
std
add
xchg
idiv
mov
in
adc
pop
mov
dec
mov
pop
bound
sarb
fsubs
jbe
jae
mov
dec
xlat
hlt
cmp
cli
testl
imul
repz
and
sub
push
scas
movsl
or
scas
loopne
mov
popf
adc
test
push
xor
lret
or
dec
mov
out
push
xchg
add
popf
cmp
stos
loope
pop
dec
xor
cmp
fcoml
jge
push
xchg
lods
xor
inc
xchg
inc
sti
lret
fwait
sub
pusha
es
outsb
jnp
xchg
and
psrlw
addps
loope
out
shlb
enter
or
jle
cmp
dec
stos
dec
pop
pop
cmpsb
and
cli
sarl
add
sub
test
and
mov
mov
std
aad
shll
call
xor
mov
pop
inc
and
insb
jg
mov
in
mov
sbb
nop
fnstsw
test
enter
loope
js
scas
stos
out
movsb
mov
lds
and
pop
sub
or
loope
add
jle
xchg
gs
ror
icebp
fstps
dec
rclb
pop
dec
hlt
or
add
lret
xchg
pop
xchg
or
xchg
xchg
cmp
xchg
fdivr
jge
out
pop
add
cmp
add
mov
mov
mov
inc
mov
adc
pop
dec
mov
sbb
pop
inc
jbe
push
mov
cmp
jp
xor
leave
push
mov
cld
movsl
inc
mov
adc
lahf
pop
shll
imul
jmp
test
adc
xchg
addl
stc
mov
xchg
add
sub
out
mov
testb
lods
in
or
dec
jo
loop
cmpsl
ret
push
mov
movsl
xchg
outsb
stc
mov
pop
jg
popf
icebp
inc
cmpsb
cmp
mov
inc
scas
lahf
cli
mov
hlt
add
cmp
fdiv
fldenv
add
dec
sbb
add
cmc
int3
out
shlb
cmp
xchg
mov
xchg
sub
push
xor
divl
stos
jmp
cmp
out
pop
ret
mov
adc
inc
cwtl
or
fcoml
or
loopne
rclb
test
testl
pop
out
call
fsubrp
aas
shl
dec
aas
jns
or
xchg
div
xchg
in
inc
adc
in
xchg
sahf
inc
pop
mov
loop
adc
ret
sbb
test
mov
xchg
xchg
les
push
scas
out
or
das
dec
stc
adc
add
mov
scas
popa
xor
jns
cmpsb
into
test
jp
stos
loope
lahf
jmp
and
mov
mov
fistl
sub
sarl
sub
dec
rclb
out
cmp
repnz
fcompl
jne
mov
push
rclb
xchg
pushf
dec
pop
push
cmp
inc
lods
mov
xchg
push
cltd
and
adc
in
dec
mov
data16
jmp
mov
add
push
or
mov
jecxz
pop
fwait
xchg
mov
mov
add
mov
cmp
xchg
fistpl
in
aas
pop
nop
xor
xchg
inc
xor
xor
int3
repz
pop
or
movsb
jl
sub
sub
std
js
in
xlat
jne
ja
pop
je
lock
loopne
in
dec
mov
pmulhuw
fmuls
or
stos
and
sahf
sub
dec
aam
dec
popa
loopne
fistpl
push
test
lea
inc
mov
push
push
mov
aaa
inc
pop
clc
fwait
imul
daa
cmp
loope
cmp
inc
fisubs
cld
push
add
mov
push
pop
lds
xchg
sti
fwait
mov
stos
lds
mov
int3
mov
sub
mov
sub
add
push
fiaddl
cmc
fsubs
icebp
scas
mov
scas
mov
or
or
add
shrl
outsl
cmp
pop
insl
xor
jle
push
call
jno
imul
daa
push
mov
pslld
ljmp
aad
clc
mov
mov
icebp
mov
jnp
push
sub
enter
scas
in
out
mov
pop
xor
push
rcrb
push
lret
mov
dec
ds
and
data16
jl
jne
jnp
sub
adc
lahf
arpl
flds
dec
in
mov
inc
and
push
ret
fcompl
loopne
inc
lahf
xor
fdivp
dec
out
ljmp
fidivrl
ljmp
pop
mov
sti
out
loop
popf
mov
insb
sar
jnp
iret
les
aad
mov
mov
inc
mov
push
xor
push
in
outsb
adcl
hlt
push
add
out
push
pop
loopne
push
mov
lret
or
dec
push
iret
ret
lods
jno
jo
pop
fwait
mov
inc
enter
loopne
daa
sbb
dec
or
push
fadds
jp
mov
sarb
testl
repnz
or
add
sbb
fildll
xchg
and
xchg
mov
sbb
stc
mov
xchg
cmp
adc
inc
imull
lcall
xchg
and
loopne
jg
mov
outsb
pusha
add
add
popf
xor
xchg
ja
in
movsb
jae
aas
out
adc
test
pop
ret
mov
xchg
adc
testb
in
mov
and
bound
ficoml
js
mov
ss
jmp
data16
data16
sub
cmpsb
in
clc
add
push
sbb
fdivs
push
int
xchg
or
sub
and
and
inc
call
into
ret
cld
sbbb
test
pop
adc
cmpsb
mov
cmp
jl
add
or
insl
stos
push
and
xorl
lods
mov
lods
std
mov
dec
leave
push
sub
mov
orl
into
dec
pop
in
pop
push
mov
fwait
rcl
into
inc
sbbl
mov
adc
xor
add
es
loopne
adc
andl
dec
fsubl
rcll
mov
pop
jb
movsl
or
push
dec
out
cwtl
ja
sbb
arpl
cwtl
add
xor
cmpsl
jns
adc
insl
jg
inc
popa
mov
push
ljmp
js
frstor
lods
testl
pop
push
add
icebp
xchg
rorl
fidivl
mov
sub
repz
push
out
mov
aas
dec
dec
insl
ds
dec
addr16
js
jae
pushf
jno
int3
lret
sbb
cs
divl
sbb
sbb
mov
sti
dec
sbb
add
lcall
cmp
inc
pop
jns
movsb
ds
daa
jecxz
ds
shrb
in
pop
shlb
push
dec
enter
fisttpll
add
popa
lea
push
cmp
dec
bound
negl
repz
xor
and
sbb
fistpl
pop
sbbl
mov
inc
inc
lret
mov
jl
push
mov
xlat
les
inc
jne
add
pop
dec
add
xor
xchg
adc
lock
lds
inc
pop
negl
addr16
push
jne
inc
nop
aas
lahf
roll
out
bound
mov
int3
hlt
and
jg
out
or
popa
jg
insl
mov
fwait
xor
dec
add
loope
push
add
xchg
xchg
jae
xchg
push
xchg
push
lods
outsb
test
int
ds
sti
cmpsl
subb
adc
scas
inc
addr16
jecxz
pop
in
and
jmp
inc
pop
cmp
orl
ss
jne
fxch
loopne
in
dec
or
jle
in
stc
cmc
fsub
dec
add
push
xor
cmc
xor
sbb
lea
insb
sbb
outsb
or
pop
pusha
ret
mov
adc
mov
sbb
inc
bnd
pop
pop
cmpsb
fwait
inc
mov
fsubl
lods
cmpsb
repz
lret
cltd
mov
dec
jb
sbb
cwtl
mov
adc
pop
inc
mov
cmp
ret
lea
cmpsl
ja
ss
or
pop
jecxz
jle
sarl
inc
push
pop
xchg
jnp
jge
testb
pop
adc
mov
in
in
sub
mov
and
sub
adc
pushf
inc
inc
adc
ss
cmp
mov
and
push
sbb
pushf
dec
pop
sbb
les
dec
push
sbb
push
push
lret
inc
jp
pop
mov
cmp
push
push
push
mov
movsb
hlt
sbb
pop
sub
sbb
js
jp
xchg
js
push
xchg
out
js
aam
sub
out
inc
push
push
pushl
sti
pop
sub
lock
sub
sub
pop
sbb
in
add
and
sbb
push
and
aas
into
lcall
out
jmp
int
xchg
test
lods
dec
push
into
pop
or
jno
pop
in
add
lcall
add
sub
rcrl
adc
sbb
daa
mov
add
mov
lds
popf
push
and
cmp
in
adc
pop
jle
push
xorb
lret
push
imul
jecxz
adc
cs
mov
jb
or
xorl
cmp
stos
or
push
daa
pop
add
mov
jmp
faddl
sub
mov
cli
jns
div
sbb
pop
jecxz
jae
das
in
out
jmp
sbb
cmp
lods
loope
cmp
pop
and
mov
test
jae
jne
add
mov
jp
loop
inc
bound
imul
adc
repz
adc
push
jno
lock
mov
dec
in
sbb
movsb
es
mov
push
sbb
enter
or
or
dec
sbb
mov
lods
rorl
lods
insl
inc
push
aad
jle
das
jp
pop
scas
stc
lret
push
pop
xchg
fidivrs
loopne
cwtl
xor
inc
addr16
or
scas
rcr
adc
dec
jl
cmp
arpl
jl
push
lds
call
xchg
pop
lahf
or
into
test
adc
ds
lahf
scas
sub
fs
scas
and
test
add
add
mov
repnz
pop
mov
push
cmp
cmp
lret
mov
adc
mov
stc
cltd
sub
subl
das
testl
out
jne
cmpsl
and
and
inc
and
loopne
outsb
ficomps
es
push
jp
push
repnz
push
and
ja
adc
ss
shll
xor
pop
nop
dec
test
push
pandn
pushf
dec
and
adc
mov
shl
sbbb
mov
dec
cmp
mov
cmp
jo
add
jns
push
push
mov
or
aam
or
movsb
dec
mov
int
fwait
push
subl
int
hlt
or
daa
rclb
cmp
jge
jmp
les
fisttpll
aaa
cmc
mov
test
add
lahf
push
sbb
pop
or
or
shl
mov
movl
mov
mov
test
in
cltd
sahf
test
test
xor
ja
sbb
mov
sub
cld
loopne
inc
decl
lahf
in
insl
pop
fisubrs
mov
sbb
add
pop
dec
jae
inc
jno
push
test
pop
sub
xchg
push
sbb
and
daa
movsb
aaa
mov
jp
xor
repz
mov
push
or
in
add
setb
lods
dec
fs
cmp
shll
xchg
inc
mov
dec
mov
add
stos
sbb
sub
cmpsb
cmp
aas
fistl
andl
sarl
cmp
fiadds
xchg
lret
dec
adc
dec
js
stc
es
lret
push
mov
nop
pop
cmp
std
cltd
jecxz
cltd
sub
cmc
insb
ja
jp
daa
pop
int3
mov
dec
sub
or
pop
sub
sti
pusha
sbb
repz
or
lds
xchg
xchg
mov
mov
mov
cmp
sbbl
xor
xlat
xchg
in
sti
mov
mov
inc
jmp
sub
repz
mov
js
push
in
jns
mov
aam
lods
fwait
mov
bound
andl
aaa
pop
movsb
cld
fxch
std
dec
divb
scas
pop
dec
dec
ret
mov
out
insl
mov
sbb
lds
inc
lret
inc
lret
adc
je
jne
ret
cltd
adc
pop
pop
inc
jle
or
mov
dec
mov
cmp
sub
movsb
xor
adc
sbb
or
and
cmp
push
in
jl
push
adc
loopne
dec
or
loop
xchg
outsb
sub
in
lret
pop
xor
jge
inc
cli
adc
xor
nop
inc
add
add
sub
pop
loope
repnz
inc
mov
mov
cli
loopne
stc
lds
xchg
jb
cmpl
fimuls
push
add
out
sbb
mov
sub
lods
mov
js
dec
mov
push
in
and
sub
push
loope
cs
fiadds
lahf
sbb
out
repz
in
into
out
inc
and
es
mov
adc
loope
lret
and
xchg
xor
test
add
push
fidivs
out
movsl
inc
gs
shrl
clc
pusha
mov
mov
mov
mov
adc
inc
xchg
aaa
fwait
jo
arpl
in
cltd
iret
xor
mov
repz
xchg
push
adc
daa
fwait
push
push
or
rorb
shl
mov
sub
sub
aas
dec
push
mov
aam
mov
ja
cmp
aad
das
sahf
pop
scas
arpl
mov
xchg
push
cmpsl
jl
push
inc
mov
adc
in
in
test
cs
cmpl
sub
mov
pop
sbb
mov
aas
push
sarl
js
lcall
add
lcall
dec
mov
imul
mov
repnz
leave
test
inc
xchg
add
repnz
insl
lods
mov
aam
mull
adc
pop
jl
pop
jnp
lcall
ficompl
fnstcw
shrb
aad
add
mov
pop
in
andb
mov
jge
dec
sahf
jno
dec
pop
mov
xchg
movsb
pop
push
adc
dec
push
lahf
and
pop
bnd
push
mov
jo
jne
or
gs
lds
cmp
dec
cmp
popa
rep
xchg
ret
xchg
dec
push
pop
test
jb
sbbb
nop
or
and
sub
dec
mov
jge
cmp
add
jae
pop
popa
loopne
dec
icebp
popf
js
mov
movsb
pushl
cmp
out
mov
sbb
popa
repz
sub
pop
in
and
pusha
sbb
sub
into
movsl
adc
fdivrs
je
inc
mov
sbbb
ror
nop
add
test
frndint
adc
xor
shrl
xchg
cmpsb
jns
mov
push
pop
jmp
add
sbb
adc
add
sbb
adc
xchg
insl
xchg
sbb
jmp
mov
aas
pushf
cli
fwait
in
and
or
lret
mov
xor
test
sbb
inc
ficoms
inc
fwait
dec
jnp
popa
xor
insl
loope
negl
jns
xor
roll
push
sub
and
frstor
call
movsl
jmp
mov
fdivl
out
add
cmpsl
xor
xor
add
fstpt
dec
and
fiadds
jge
jle
sbb
sbb
enter
push
addb
pop
arpl
lret
cmpsb
fwait
clc
test
mov
insl
fsubrs
sarb
sbb
inc
sub
aas
lods
test
xchg
jbe
test
icebp
out
pop
test
pop
inc
mov
dec
inc
repnz
bnd
adc
pop
or
jmp
xchg
add
in
push
into
je
arpl
inc
mov
mov
mov
sbb
add
xchg
mov
inc
push
in
xchg
movsl
dec
add
mov
push
out
or
xlat
adcb
xlat
iret
lret
into
sub
or
inc
mov
in
imul
mov
mov
dec
cmpsl
jne
fucomip
out
lods
inc
jmp
lcall
inc
outsl
xorb
mov
inc
cmpsl
mov
and
push
mov
lret
das
stos
mov
add
mov
and
sub
mov
inc
and
bound
jb
in
out
adc
fcompl
mov
in
call
cmp
or
ret
sbb
call
or
mov
ret
adc
mov
pop
mov
dec
movsl
push
dec
xor
scas
pop
xchg
imul
insb
out
repnz
pop
dec
enter
scas
gs
dec
mov
cld
xlat
addl
pop
sub
stos
cmp
cmp
sbb
xlat
call
les
add
scas
lods
insl
sub
cmp
stos
rcrl
adc
js
lea
pop
pusha
cs
jnp
and
dec
ss
sbb
push
xchg
adc
adc
jp
lret
hlt
fwait
cmp
call
test
das
adc
cli
xor
push
xchg
dec
lock
clc
jnp
adcb
subb
and
xchg
jae
mov
cmpsl
cs
adc
notl
fcmovne
test
or
jl
mov
notb
scas
out
fsubrs
adc
scas
shrb
dec
sub
cmp
cwtl
mov
nop
cmp
dec
add
lock
leave
cli
ret
lahf
dec
xor
sbb
and
sti
or
sub
cmp
or
int
in
cmpsl
push
add
sub
mov
jne
or
dec
sbbl
jmp
pop
xchg
jle
pop
popa
push
lds
cmpsb
sub
push
flds
rcr
and
dec
je
or
or
mov
iret
sbb
mov
popfw
addr16
lea
inc
das
inc
dec
and
lret
jns
das
inc
fcoml
in
jp
mov
mov
push
xchg
xlat
je
sbb
stos
inc
pop
mov
mov
and
je
jnp
cli
xchg
lock
adc
nop
fistl
rolb
lea
jl
fldt
adc
pop
push
repz
inc
cmp
aas
or
aad
mov
ljmp
test
sub
jmp
and
lds
stos
loope,pt
insb
mov
fsubrl
fwait
loope
mov
iret
push
mov
push
or
in
cli
hlt
mov
jecxz
xchg
fcoml
outsb
inc
push
lods
sbb
xchg
lds
pushl
cmpsl
sti
mov
outsl
out
call
jecxz
mov
test
cs
push
mov
clc
jg
cmpsb
or
lock
mov
mov
negb
add
push
cmp
adc
mov
xchg
sti
fwait
test
lret
bnd
pop
std
xor
jmp
imul
jno
mov
ja
lret
add
sub
shlb
test
mov
mov
bnd
mov
cmpsb
bound
mov
rcr
and
clc
cltd
mov
xchg
out
mov
xchg
in
pop
fwait
mov
aas
fistps
popf
xor
lods
shl
inc
pop
mov
pop
inc
nop
outsl
mov
mov
imul
dec
addr16
out
incb
mov
gs
dec
adc
sahf
es
popa
push
mov
sahf
adc
sbbl
sbbl
adc
dec
ja
sub
fucom
push
jge
dec
jl
out
stos
and
mov
mov
jl
dec
arpl
push
sub
fdivl
repz
cltd
pushf
or
sbb
cmp
pusha
adc
andb
mov
mov
mov
sbb
mov
stos
mov
xchg
xchg
xchg
repz
leave
bound
hlt
jnp
inc
clc
lret
rcll
sti
mov
mov
std
stos
fisubrs
loop
lret
negl
out
cmp
test
jno
inc
pop
imul
xor
es
lcall
sbb
cmc
mov
adc
xor
cltd
xor
mov
insl
cltd
ret
call
push
scas
dec
gs
jbe
shll
nop
jae
enter
dec
rol
aam
stos
cmpsb
jmp
xchg
test
cmp
mov
xor
mov
rcr
add
jnp
repnz
cltd
xor
xlat
test
loop
mov
nop
sub
ret
mov
lods
fadds
ffreep
cmp
adc
xor
jnp
daa
inc
cmp
lods
mov
or
in
sub
pop
lahf
test
jl
or
repnz
jo
lods
gs
cli
pop
sbb
imul
and
testb
ret
inc
faddp
jmp
in
std
scas
enter
sbb
jl
mov
aaa
rep
mov
add
ret
cmc
inc
adc
loope
in
cld
sub
ret
push
jb
or
add
add
imul
pop
std
mov
loope
scas
ss
push
lods
loop
es
mov
push
sub
les
cmp
into
bound
dec
iret
mov
jne
cmc
xlat
mov
mov
and
push
subl
push
push
loopne
leave
rcr
shlb
fistl
mov
cmp
jmp
roll
or
pop
mov
imulb
dec
inc
xchg
xor
std
push
inc
push
test
iret
sti
adc
mov
ljmp
cwtl
negb
xchg
dec
mov
test
adc
mov
mov
mov
ljmp
loop
arpl
out
push
xchg
ret
push
inc
adc
cwtl
xchg
dec
sbb
and
inc
ds
out
sbb
dec
jl
and
pop
or
push
ja
cmp
fnstsw
mov
mov
cli
pop
std
inc
iret
adc
rol
xor
roll
mov
lea
jp
mov
outsb
nop
lods
inc
push
mov
mov
mov
out
int
lret
ljmp
pop
and
dec
sub
sub
cmp
xchg
nop
cmpsl
leave
subb
insl
sub
push
outsl
dec
push
or
in
jl
repnz
or
inc
and
enter
and
inc
add
ljmp
in
pop
push
rcrl
arpl
inc
pop
stos
fisubs
popa
mov
lret
fiaddl
pop
jmp
or
push
pop
ss
push
jbe
fs
push
je
repnz
or
ljmp
fisttpll
xchg
and
pop
fldt
inc
popf
xchg
in
pop
dec
sub
pop
xchg
scas
or
lret
inc
insl
test
xor
jae
push
stos
adc
jp
push
ja
pop
xchg
out
inc
mov
cmpsl
lea
cmp
mov
inc
cmp
pushf
sub
imul
push
ret
loop
repnz
xchg
push
push
adc
dec
cld
repz
mov
ss
imulb
out
das
in
sbbb
sbb
ret
fnstenv
out
int3
ljmp
jo
stc
les
adc
mov
js
mov
icebp
jne
mov
mov
jle
sbb
mov
enter
sahf
mov
cmp
xchg
add
pop
out
pushf
cmp
jno
les
ficomps
push
inc
in
mov
pop
cmc
push
sub
out
aam
lods
cld
daa
adc
mov
cmp
aad
ss
sub
mov
jge
leave
push
mov
dec
mov
push
fistps
fnstsw
cmpb
push
add
xor
xchg
fbld
mov
aaa
xchg
pusha
mov
jp
cmp
in
ja
adc
push
insl
mov
jne
addr16
xchg
push
mov
popf
and
dec
xchg
jp
loope
xor
and
add
hlt
lds
andb
lods
addr16
xchg
mov
ljmpw
jge
test
pushf
pop
insl
je
stc
lods
jle
jne
mov
dec
jmp
push
push
jne
filds
fcoml
enter
jno
insb
js
lds
cmp
inc
lea
add
fstpl
cmp
xor
add
mull
push
lcall
sar
imul
imul
ljmp
std
arpl
mov
pop
insb
scas
cmc
in
xchg
push
adc
mov
pop
test
adc
and
lahf
mov
fmulp
inc
pcmpeqw
xor
sarb
sub
lods
pushf
pushf
add
pop
lds
pop
dec
loopne
test
pop
mov
outsb
mov
inc
and
insl
movl
je
or
add
in
dec
das
fwait
adc
pop
xchg
dec
push
insb
cmp
push
gs
shlb
jge
test
jne
js
jg
sbb
mov
or
rorl
pop
cmp
dec
push
push
out
xchg
loope
and
arpl
stos
and
pop
jecxz
jne
sub
clc
clc
xchg
and
jo
sbb
ficoml
out
int
adc
xchg
nop
cmp
or
gs
mov
ret
dec
inc
lahf
sbb
xchg
out
test
jle
xchg
idivl
ret
add
std
jb
mov
test
cltd
mov
mov
pop
jl
lock
lahf
test
clc
fiaddl
test
mov
js
mov
cmp
dec
adc
mov
inc
fsts
cmp
xor
and
sbb
call
mov
jp
mov
xor
cli
cli
in
cwtl
aad
ljmp
xor
cmp
pop
flds
cltd
cli
aad
add
faddl
and
iret
mov
or
pop
jne
mov
jno
lcall
inc
and
cmpsl
aad
jge
push
push
int
loopne
in
push
sahf
cmp
lock
sub
jp
imul
pusha
add
call
xorl
and
loopne
push
pop
popf
test
pop
jne
scas
sub
ret
insb
jo
inc
cmp
sbb
jmp
lahf
jg
xchg
shrb
mov
jbe
xlat
fstps
ret
subl
lahf
movb
pushf
and
sbb
push
out
adc
or
mov
std
add
test
add
rclb
xchg
and
pop
aas
or
imul
bsr
push
mov
int3
sub
push
add
pop
sub
pop
fsubrl
lret
imul
and
and
dec
xlat
push
movsl
mov
pop
arpl
sub
cld
arpl
jae
lret
ljmp
mov
push
jns
xorb
dec
mov
push
ret
push
xlat
clc
js
stos
daa
dec
pop
lock
mov
loop
insl
fs
jne
cli
jecxz
fisubl
or
pop
sahf
sahf
sar
dec
call
in
mov
movsl
add
dec
sbb
push
adc
inc
fwait
push
add
or
mov
addr16
cs
clc
testb
jnp
push
jno
xchg
movsb
xor
scas
xlat
popa
add
out
mov
es
out
push
lret
arpl
cltd
mov
jmp
fwait
xorb
les
mov
or
mov
in
mov
mov
push
jo
mov
lahf
cltd
daa
mov
pop
pusha
mov
cwtl
xorl
iret
push
inc
daa
fidivs
xor
fs
sub
lret
adc
cmpsb
into
mov
and
or
mov
fprem
outsb
rcl
enter
jae
imul
hlt
xlat
ret
jp
pop
pop
lods
mov
js
shlb
popf
cmp
fsubl
sti
popf
sbb
popf
inc
xchg
les
dec
in
loope
test
popf
push
cwtl
rcl
xchg
out
push
pop
mov
cmp
out
sub
out
outsl
popf
ljmp
xor
out
rcll
arpl
push
enter
pushf
dec
fwait
pushf
addr16
jl
jp
pop
xor
sub
scas
lcall
mov
in
mov
rcll
arpl
mulb
imul
ss
call
repnz
arpl
or
xchg
cmp
mov
cmp
lret
je
imul
repz
mov
sahf
ss
sub
rcrb
scas
jg
andb
adc
mov
das
mov
repz
ret
pushf
in
test
daa
adc
sti
outsb
rolb
cmc
pop
in
lret
pop
lret
in
mov
dec
xor
sub
xchg
mov
jmp
adc
clc
jbe
and
push
add
xor
inc
in
fs
add
shll
jns
push
add
add
fucom
aaa
iret
mov
std
add
and
pop
and
add
pop
rorl
pop
pop
nop
jbe
push
mov
adc
test
adc
xor
or
bound
enter
bound
mov
fldenv
mov
sub
cmc
jmp
xchg
mov
pop
sub
nop
idiv
mov
hlt
mov
nop
lret
outsl
lds
add
scas
ds
push
in
out
loop
nop
add
daa
inc
jmp
jb
out
push
push
jb
imul
jb
or
and
lods
stos
call
iret
mov
es
imul
test
pop
sti
add
or
into
cs
cmpsb
daa
jg
xor
mov
push
rcr
pushf
jg
mov
subl
mov
xor
inc
call
ja
mov
jp
adcb
lahf
push
jnp
sub
jmp
mov
jge
jecxz
and
sub
dec
imul
sbb
and
jns
loopne
mov
sub
or
sbb
ss
loopne
fiadds
stos
pop
sub
cmpsb
xchg
arpl
mov
add
aas
sbb
mov
xchg
es
in
jno
lret
and
xchg
gs
mov
lahf
jbe
or
jno
xor
ljmp
mov
or
aaa
pop
fidivs
xor
dec
push
sbb
xor
jecxz
jne
enter
inc
dec
xchg
lea
jno
test
mov
outsb
cmp
xchg
push
movsl
or
ret
cmp
sub
sbb
out
lea
jg
das
xor
shrl
pop
cmp
in
xchg
stos
mov
adc
mov
lahf
rcr
dec
sbb
jns
aaa
mov
or
or
rcrl
fincstp
pop
push
jno
sahf
xlat
repz
push
loope
sub
ja
leave
jl
push
mov
dec
sbb
aad
push
and
sbb
pop
sbb
daa
mov
cmp
fcmovnbe
jb
inc
pop
lds
out
jp
mov
adc
ss
fwait
adc
and
xchg
add
in
cmp
cmpsb
ret
icebp
mov
mov
fbld
xchg
lcall
pop
pop
test
cltd
and
push
jmp
fs
mov
pop
pop
mov
or
les
push
dec
call
xlat
pop
inc
inc
mov
inc
sub
mov
sbb
fnsave
pop
mov
pop
out
mov
add
sbb
cmp
sbb
sahf
ret
mov
cmp
mov
hlt
idivb
push
push
outsl
idiv
je
and
fdivrp
js
mov
lahf
neg
push
pop
pop
shll
idivl
das
push
in
pop
leave
sub
add
pop
inc
or
push
ja
clc
ja
test
xchg
outsl
mov
dec
std
clc
loope
jl
jge
push
pop
lods
lock
jl
or
in
int3
mov
stos
push
mov
and
hlt
inc
mov
jae
les
adcb
jnp
int3
xchg
sub
pop
mov
mov
or
adc
mov
and
test
xchg
jb
sub
cmp
call
int
mov
imul
mov
mov
or
sub
xchg
lret
xor
hlt
adc
lahf
adc
adcb
imul
je
std
dec
inc
sbb
sbb
jae
add
and
inc
ss
mov
and
lcall
pop
or
test
dec
ret
hlt
cs
fistps
loopne
clc
push
out
pop
mov
lods
outsb
push
out
push
push
dec
ljmp
push
mov
aam
add
sahf
adc
lret
mov
add
cmp
lock
mov
cmc
stc
mov
cmp
inc
cmp
lret
sub
or
in
and
leave
sub
imul
xor
or
cmpsb
xor
gs
pop
mov
adcl
aaa
mov
xor
icebp
fisttps
cmp
out
jecxz
add
inc
stos
inc
mov
cwtl
sbb
inc
std
mov
dec
xchg
imul
adc
pminsw
mov
das
adc
xchg
leave
xchg
je
push
sarl
mov
imul
cli
es
jns
imul
fdivrs
repz
jbe
pop
decl
sub
xor
cmpsb
sub
outsl
dec
pop
or
sub
xlat
repz
test
sarl
adc
ljmp
lahf
call
fwait
adc
idivl
cmp
jg
dec
mov
loopne
jo
mov
mov
xor
outsb
pop
in
mov
and
jb
popf
add
mov
sahf
mov
adc
push
mov
mov
lock
ret
lahf
popa
cmp
rcll
mul
aad
shrb
pop
into
dec
cmp
out
inc
arpl
sub
jnp
cmp
rcll
add
xchg
das
push
dec
adc
loopne
into
and
adc
sbb
mov
jae
mov
lds
pop
lds
pop
daa
xlat
push
aaa
jle
adc
cmp
xor
loopne
xor
dec
mov
xor
cltd
movsl
xchg
cmpsb
sarl
pop
jg
cltd
aas
xchg
and
popa
sub
adc
inc
pushf
xchg
sbb
jno
int3
and
cltd
or
dec
sub
dec
xchg
repz
and
enter
icebp
rcrl
pop
jb
std
jecxz
add
or
je
mov
pop
leave
inc
ja
outsl
cwtl
cmpsl
imul
insb
mov
or
addr16
cmp
outsl
jns
jg
cmp
je
jl
xchg
loope
out
mov
and
aaa
ljmp
or
xchg
out
fmuls
cli
lock
mov
data16
xor
mov
int
xor
or
lock
jno
pop
cmp
mov
push
gs
push
lret
leave
fbld
inc
push
jl
dec
add
test
fdivrs
clc
cmp
aaa
dec
loopne
in
cmp
jl
insb
rolb
push
lea
sti
in
adcl
jle
add
jae
icebp
fcmove
pop
push
and
dec
pop
aam
imul
lret
inc
mov
std
inc
dec
adc
sub
sub
pop
pusha
subb
jmp
fisttpl
imul
sub
mov
fs
ja
push
and
imul
sbb
push
das
push
cltd
or
push
into
test
xchg
js
ret
add
or
repnz
mov
push
insb
lds
imul
loop
dec
adc
lock
pop
sbb
mov
pop
das
test
std
sbb
jp
xchg
xchg
xchg
jbe
sbb
and
rorl
int3
xor
xor
jmp
ja
inc
adc
xor
or
adc
loopne
imul
xlat
sbb
sub
push
scas
and
decb
inc
std
push
jecxz
insb
mov
adc
lahf
in
fimull
cwtl
dec
iret
int3
xchg
add
sbb
loop
dec
lahf
push
add
dec
pop
adc
mov
sbb
xchg
push
lahf
idivl
test
mov
mov
dec
push
pop
adc
and
inc
sbb
xor
popf
push
or
mov
inc
test
cs
das
in
add
inc
lods
push
pop
aad
xor
xchg
test
add
xor
xchg
fimuls
push
push
popf
jnp
adcl
jno
jne
push
into
out
mov
jl
xor
test
xlat
out
testb
ja
int3
add
in
into
loopne
adcl
jg
std
and
or
repz
orb
mov
std
sub
subb
imul
cmpsl
lods
sbb
js
int
stos
fwait
inc
leave
mov
cltd
xchg
inc
adc
aad
shlb
inc
sarl
arpl
fsts
sbb
cmp
lock
cmp
daa
in
pop
cmc
push
adc
inc
jnp
sarb
lret
xor
pop
or
jne
bound
imul
out
adc
imul
aas
int
jbe
stc
out
dec
sbb
cmpsl
or
jl
xor
xchg
or
pop
adc
stos
pop
pop
das
outsb
imul
sbb
pushl
sbb
cmpsb
repnz
insl
aaa
jg
mov
shr
xor
rcrl
or
and
sahf
rolb
fwait
add
xchg
jae
pop
mov
inc
mov
jnp
sub
xrelease
jg
xor
fmull
lcall
push
mov
shlb
out
cs
cmpsb
push
dec
push
jl
pusha
push
jge
or
dec
call
mov
iret
lcall
pusha
cmc
lahf
push
xor
jmp
and
test
cwtl
push
int
pop
jl
push
add
mov
sub
mov
xlat
cmp
jo
xchg
lret
inc
jb
mov
fidivrs
xchg
cmp
adc
mov
sbb
outsl
xchg
and
out
cmp
sbb
pop
push
sarb
data16
mov
cwtl
xchg
and
cmp
and
pop
lods
out
icebp
enter
insl
scas
mov
mov
outsl
xchg
jp
cmc
aam
cmp
xor
in
push
sbb
dec
xor
jge
flds
loop
les
dec
dec
bound
add
xchg
cmp
jae
sub
fisubrs
es
test
push
cmc
xchg
dec
mov
add
xor
pop
inc
in
fiaddl
push
dec
dec
lcall
and
and
pop
rolb
xchg
pop
sbb
fdivrp
movsb
xor
lcall
cmp
push
mov
or
mov
adc
outsl
hlt
repnz
aam
inc
jmp
mov
mov
inc
out
adc
pusha
leave
icebp
lea
out
dec
sub
rcll
add
mov
bound
xor
jp
aad
test
out
loope
lods
roll
adc
mov
adc
test
cs
sbb
sub
or
push
xchg
xchg
inc
lods
mov
mov
jle
jge
cmpsl
int3
push
outsb
mov
imul
inc
dec
std
adc
fcomp
es
aam
in
jnp
inc
ss
aas
dec
xchg
jnp
js
int3
je
push
jns
stos
ret
into
stos
inc
fdiv
pop
inc
inc
fst
dec
lods
rorb
mov
out
lcall
mov
test
fstp
iret
in
dec
fistps
mov
pop
in
cli
jmp
mov
testl
inc
es
jbe
jno
mov
pop
push
pop
cli
ljmp
and
sti
push
test
enter
cs
or
adc
movsl
or
push
imulb
shlb
cmp
or
ret
pop
loop
sbb
mov
add
stc
adc
xchg
jb
jnp
xchg
xor
mov
pop
mov
inc
pusha
arpl
shlb
pop
jl
js
in
adc
les
movsb
out
shl
cmovl
or
ds
test
inc
cmp
dec
xor
xor
int3
lods
frstor
jae
sub
mov
sbb
outsl
push
jg
push
pushf
mull
mov
popf
jb
jl
mov
cmp
int
out
mov
jo
outsl
cmpl
int
xor
jl
jbe
jecxz
rcrl
adc
jmp
xchg
push
xchg
dec
in
adc
lods
into
mov
sub
cmp
jge
mulb
sub
mov
imul
cmp
fsubrl
mov
inc
cwtl
push
mov
aas
add
cltd
dec
fisubrl
repz
xor
jae
sbb
daa
pop
pop
fidivrl
push
mov
fwait
test
fcmovnu
jg
cmp
int3
popf
pop
mov
scas
out
scas
es
pop
adc
cltd
xor
inc
jmp
das
mov
lock
shll
dec
push
cmp
jbe
or
xor
dec
add
mov
dec
pushf
adc
adc
js
je
data16
push
mov
and
mov
adc
xor
sbb
lods
lret
test
xchg
fdivrl
cli
mov
fs
jle
ds
adc
mov
cltd
mov
out
repnz
add
es
add
sub
loopne,pn
fidivrl
mov
sbb
es
arpl
iret
into
aas
push
call
fsubr
dec
mov
sbb
or
sbb
ficompl
xlat
jb
add
or
xchg
test
int3
rcrb
je
lcall
dec
enter
xchg
pop
jle
or
sahf
mov
call
mov
mov
hlt
push
cmpsl
xchg
fisubrs
ja
rcrb
mov
mov
sbb
fldt
lods
cld
ds
jae
dec
hlt
mov
mov
cmc
addr16
inc
push
mov
cltd
sbb
nop
push
imul
fstpl
adc
mov
or
cmp
addr16
mov
xchg
xchg
lret
push
fisubrs
cmp
mov
pop
adc
mov
dec
pop
mov
flds
adc
hlt
shll
mov
in
inc
test
xchg
repz
das
lock
clc
and
leave
inc
aaa
rcll
push
mov
fildll
icebp
jecxz
add
xor
mov
add
shlb
mov
cmpsl
andb
shl
sub
xchg
mov
push
cmc
scas
mov
call
push
hlt
dec
pop
inc
cltd
xchg
insl
fnsetpm(287
inc
mov
inc
mov
and
inc
mov
or
mov
cmpb
xchg
cmp
fdivl
ss
lret
jb
pop
roll
sti
pop
gs
mov
loopne
or
push
inc
lds
dec
sbbb
xor
out
ret
testl
test
out
fs
sbb
push
push
jg
or
xor
push
aas
ja
sbb
scas
stc
lods
push
xchg
imul
mov
cmpb
sbb
cmp
shl
movsb
icebp
aaa
xchg
pop
lret
or
mov
stos
mov
pop
cmp
mov
dec
outsl
stc
dec
jmp
add
add
shrb
jmp
push
popa
pusha
sbb
repnz
leave
fs
push
insl
xor
lahf
int3
mov
outsb
test
das
mov
iret
pop
inc
lret
loop
pop
aad
outsl
jno
sub
lods
mov
out
sahf
and
push
std
mov
push
out
or
inc
xchg
jl
adc
jl
hlt
fs
cltd
les
nop
or
rcl
push
mov
fidivrs
pop
movd
jnp
fsubs
sub
jmp
mov
xor
push
or
sub
lods
mov
cmp
mov
mov
arpl
andl
out
lret
adc
pop
or
outsb
or
or
inc
mov
and
out
mov
cli
hlt
out
sbb
xlat
sbb
cwtl
repnz
rorl
sbb
cwtl
or
rolb
dec
and
mov
sbb
mov
mov
inc
pushf
sahf
ret
addr16
sbb
mov
scas
mov
sahf
addb
mov
lret
fcoms
cmc
mov
lcall
cmp
mov
xlat
inc
pop
or
lods
sub
jae
mov
out
mov
call
icebp
aas
push
aaa
out
inc
jne
dec
push
cmpsl
sub
rep
lods
xor
outsl
call
aas
loop
outsl
in
test
cmc
xchg
add
lahf
jo
mov
sub
jne
dec
and
lret
inc
stc
call
es
out
pop
rcrl
test
cmpsb
sbb
cmp
icebp
outsb
and
out
xchg
mov
fidivs
fbld
adc
jb
aad
out
pop
pop
add
movsl
in
xor
adc
mov
sub
mov
mov
jb
lea
mov
inc
in
mov
inc
sti
xor
cli
cmp
pop
push
nop
pusha
dec
imul
pop
jg
cmp
cld
cmp
jmp
dec
jecxz
ljmp
pusha
inc
jmp
fiaddl
pushf
lahf
adc
mov
cmpsb
push
adc
or
push
push
lcall
pop
mov
outsb
xchg
push
or
cli
push
pop
xor
mov
mov
mov
adc
mov
test
int
mov
ret
ja
mov
add
cld
mov
add
jp
jae
in
lea
lcall
push
pushf
jne
in
popf
adc
jnp
int3
in
roll
stos
or
inc
or
aad
mov
imul
jae
jmp
push
or
ret
mov
hlt
stos
bound
mov
lea
out
dec
jb
jl
roll
call
cli
xchg
mov
mov
cmp
cmp
stos
sub
inc
scas
ss
repz
xchg
inc
cli
roll
movsl
bound
adc
fisubrs
adc
push
enter
and
pusha
les
mov
ljmp
mov
add
xor
dec
cs
sub
arpl
outsb
mov
xchg
jne
aad
sar
cli
popa
mov
or
jne
pop
pop
pop
xor
test
out
dec
jae
ds
jle
js
repnz
cld
aam
je
inc
and
jg
inc
mov
in
adc
push
out
push
pop
cld
inc
dec
ds
lret
adc
xlat
xor
frstor
addr16
xchg
mov
jns
call
nop
shrl
imul
call
mov
pop
rcrl
movsl
lea
xchg
fnstenv
imul
dec
inc
cmp
sti
ret
inc
mov
mov
in
pop
adc
pop
mov
stos
test
add
mov
and
adc
ret
nop
ret
fcmove
scas
cs
add
jb
adc
and
mov
cmc
mov
jno
ds
ja
jge
cwtl
xor
mov
sub
decl
addr16
sub
adc
fistl
test
int3
scas
pop
xor
add
jl
outsb
sbb
pusha
mov
cmc
fmuls
and
cmp
pop
pop
aas
loopne
or
add
push
icebp
push
cld
ja
or
pusha
shl
movsb
loopne
and
imul
pop
testl
cmp
cli
int
push
xlat
mov
fiadds
dec
ljmp
inc
pop
add
adcb
mov
xor
popw
inc
adc
dec
xchg
add
sub
movsl
adcb
pop
mov
and
adc
jle
popa
aas
gs
mov
fstp
das
fmuls
add
sbbl
addl
sbb
mov
loope
add
and
jmp
add
and
fcmove
and
mov
and
insl
jp
das
filds
rcll
ret
xor
pop
out
repnz
fcoml
xlat
pop
sti
outsb
lock
xor
push
and
push
xchg
pop
mov
loopne
xchg
xchg
and
pop
fisttpll
inc
xchg
xchg
addr16
or
jbe
fwait
pop
arpl
unpckhps
push
test
push
cmp
mov
lock
hlt
xchg
sbb
adc
das
mov
ljmp
jb
mov
dec
mov
mov
movsl
scas
stos
jle
enter
push
rcll
test
sub
es
adc
cwtl
push
test
in
push
popa
sbb
aam
pop
mov
sarl
cmp
iret
sub
aam
jnp
bsf
fs
push
inc
cmp
or
cmp
adc
aaa
enter
pop
pushf
out
inc
jmp
jne
imul
xor
push
mov
outsb
mov
idivl
jae
loopne
sub
adc
sbb
insb
xchg
ret
gs
stos
pop
sbb
cmp
mov
in
andb
dec
cmpsl
test
sahf
mov
dec
sub
fdivr
scas
loopne
out
push
push
in
dec
jp
incl
fisttps
jb
adc
inc
or
pop
cmp
data16
or
push
dec
arpl
jb
sahf
pop
fsub
xor
adc
sbb
loop
dec
push
imul
push
fwait
lds
mov
lea
and
sti
cmpsb
test
stos
daa
adc
sub
stos
aam
push
cmp
mov
lcall
push
nop
mov
pop
add
shr
xchg
addr16
push
sahf
fists
jmp
pop
loope
addr16
icebp
xor
cli
leave
popa
mov
push
repz
adc
loop
arpl
xchg
adc
sti
mov
sbb
ja
les
dec
fistl
cmpsl
cmpb
adc
inc
lcall
jmp
cs
adc
sbb
mov
nop
xlat
mov
push
loopne
pop
call
push
daa
std
pop
adc
fdiv
pop
lea
pop
or
push
inc
xchg
fistps
mov
aad
dec
fwait
stc
cli
pop
sti
xor
cmpsl
testl
call
leave
addl
mov
sbb
inc
negb
out
sbb
jb
inc
fistpl
popf
xchg
out
shrb
mov
dec
mov
js
repz
shll
jnp
mov
xchg
loopne
enter
pop
pop
cmp
cmp
fsubrp
fsts
xchg
mov
mov
je
cmc
sub
lcall
mov
xor
push
vpcomb
jb
adc
jge
stos
push
mov
in
mov
mov
cmovne
test
pop
call
adc
xor
ja
insl
rorl
and
ss
cmpsl
xor
ficompl
in
mov
mov
xor
outsl
cld
cmpsb
xchg
jnp
xchg
sbb
test
pusha
and
lds
dec
add
lret
xchg
sub
jae
dec
popa
cmp
aad
sub
fsubs
push
mov
es
cmc
testb
mov
pop
into
test
sub
jnp
fcoml
int
loop
xchg
xor
push
idivl
pop
sub
loope
jmp
testl
out
fidivs
jne
or
mov
dec
test
cmp
xor
mov
mov
into
pop
lahf
mov
iret
loope
adcl
mov
cmp
stc
cmpsl
and
mov
add
vmovupd
out
insb
imul
dec
xor
pushf
jno
xchg
fmull
pop
jae
mov
sbb
pop
aad
adc
fdiv
sbb
int3
shll
mov
movsb
pop
shr
sbb
or
inc
cmc
clc
imul
mov
lods
or
mov
push
ficoml
jb
ss
xor
or
pop
jl
roll
aam
idivl
repnz
inc
mov
mov
pusha
out
sar
lret
xchg
push
xchg
pop
daa
out
lcall
out
mov
js
addr16
inc
mov
sub
cmpsb
or
push
out
dec
mov
xor
xchg
je
dec
or
add
sub
in
mov
arpl
mov
in
aam
jecxz
in
mov
push
pop
insb
fucomp
jbe
mov
mov
lretw
jnp
inc
rorl
inc
xlat
mov
in
test
aam
mov
ds
ret
dec
movsl
repnz
ljmp
aam
clc
cmp
cmc
andb
jns
pop
fisubrs
call
rcl
inc
lahf
cmpsl
popa
in
inc
into
lahf
and
jp
lea
out
xor
xchg
stc
cmpb
fdivrs
add
stc
ds
mov
cld
jns
xchg
cld
daa
rolb
or
sbb
lods
enter
cmovno
lock
xchg
movb
lcall
testl
or
fdivrs
push
out
scas
pop
call
xchg
lods
jl
movsl
xchg
aaa
mov
pop
dec
jecxz
popf
daa
mov
lods
test
pop
imul
xchg
fmull
xchg
shlb
addl
xchg
xor
sahf
movsb
inc
mov
push
mov
scas
addr16
int
cmpsb
and
push
push
sbb
cs
aad
data16
rcrb
enter
ds
dec
out
add
loop
cmc
xchg
lahf
leave
setge
aas
mov
aad
mov
jne,pn
lods
ret
jns
jo
lock
jp
loopne
jp
pop
lret
roll
cmp
addl
mov
cmp
rol
cmp
add
fisttpll
mov
or
sbb
sub
adc
mov
mov
loope
loop
into
imul
mov
push
and
add
push
add
sbb
push
push
pop
cmc
adc
cmpsl
or
stos
dec
icebp
and
lods
call
adc
push
das
mov
scas
stos
or
in
fldt
adc
fnstcw
call
ror
jae
mov
cmp
push
jbe
jecxz
pop
pop
in
iret
cli
push
mov
mov
icebp
imul
js
daa
mov
jg
mov
jne
loope
enter
sbb
pop
pop
rcll
mov
mov
mov
rclb
push
jle
enter
clc
pop
mov
xchg
scas
jnp
outsb
test
stos
sahf
dec
sbb
push
stos
cli
imul
lahf
sbb
jmp
jae
fwait
les
in
adc
fnstenv
pop
loope
jecxz
mov
or
push
xchg
cmp
pop
push
mov
out
cltd
in
loope
stos
sbbb
mov
and
cs
sbbb
std
lods
js
movsl
test
xor
mov
ret
dec
cmpsb
inc
lea
jne
fadd
jo
dec
sub
orl
fcmovu
bound
leave
xchg
xchg
jno
dec
sub
mov
pop
movb
xchg
movl
push
in
pop
arpl
andb
xor
ja
sub
dec
mov
cmc
aam
mov
iret
xor
xchg
sbb
scas
pop
jns
lcall
ljmp
lret
or
mov
sub
imul
mov
dec
dec
mov
add
inc
aaa
call
pop
xchg
hlt
pop
stos
sbb
mov
xor
imulb
mov
loop
es
sbb
fildll
xorb
adc
lock
std
cwtl
data16
pusha
cld
cmpsb
jne
and
jle
jge
ds
jb
test
pop
jb
push
mov
or
xchg
popa
dec
mov
dec
dec
xchg
stos
sahf
add
flds
sbb
xor
mov
test
jno
daa
aaa
mov
pop
cmp
xorl
sub
pusha
inc
or
pop
push
outsl
insl
imul
mov
addw
leave
mov
cmp
iret
add
ja
je
cmc
pop
sbb
inc
clc
or
add
push
loope
and
lock
inc
in
and
xchg
shl
stos
push
jecxz
cmp
mov
into
sub
out
out
les
testl
movb
icebp
mov
jnp
lea
test
out
xchg
or
sbb
das
xchg
sub
out
sub
or
sub
pop
xchg
xchg
fisubs
loopne
fsubrl
lock
lds
jmp
fcoms
mov
xchg
xchg
mov
dec
adc
ljmp
cmp
cmp
xor
clc
sub
inc
mov
fisubs
cmp
jecxz
mov
nop
fiaddl
pop
lret
adc
fs
test
stos
movsb
cmp
mov
push
xchg
sub
mov
ret
pop
sbb
repnz
jmp
inc
push
xchg
cwtl
sahf
cmp
mov
and
inc
push
adc
cmp
in
loope
cli
inc
int
pop
adc
roll
dec
cmp
push
xor
cmc
dec
or
push
inc
add
ficoml
add
mov
ja
pop
orb
sti
adc
jle
mov
jb
sahf
into
mov
mov
xchg
lds
pop
push
lea
mov
jno
imul
sbb
test
sti
les
push
sub
inc
rclb
mov
jbe
add
xor
out
dec
jo
ljmp
jmp
mov
mov
or
mov
mov
jae
das
addr16
mov
mov
mov
and
add
dec
add
cmp
inc
dec
adc
loopne
pop
mov
fisttpl
dec
cmpsb
mov
jnp
xchg
mov
dec
sbb
mov
mov
pop
ret
xor
pop
in
mov
mov
fcomps
pop
mov
call
mov
lcall
repnz
gs
jne
inc
mov
xor
dec
push
push
mov
push
inc
movsl
cmp
pop
inc
adc
mov
lea
adc
mov
test
xorl
inc
decb
xchg
ret
mov
cmpsb
xchg
cmpsb
inc
dec
cmp
xor
icebp
and
vunpckhps
cwtl
out
push
xchg
mov
xor
pop
fisttpll
movsb
insl
cmc
xor
mov
xchg
cmpl
insl
shlb
mov
fdivp
or
ja
repnz
pop
loopne
mov
pushf
adc
movsl
ret
xchg
jmp
lret
data16
jp
xor
dec
and
fisubl
lea
leave
jle
daa
shll
subl
mov
mov
aam
lods
insb
and
pusha
test
cmpsl
sub
cltd
jbe
je
sbb
lds
sub
mov
push
mov
mov
xlat
cmp
dec
shl
dec
pop
or
mov
inc
out
lret
cmpl
mov
enter
movsb
insb
nop
lods
fs
cmc
mov
imul
popa
cld
in
ss
stos
push
cmpsl
fadd
out
cltd
push
icebp
mov
sub
dec
popf
lock
jo
and
add
jno
or
out
lret
popf
or
test
rorl
sbb
stc
gs
rcr
cmp
mov
fwait
pop
lret
xor
and
fnsave
sarb
dec
pop
ds
scas
mov
xchg
sub
cmc
sarl
mov
xchg
push
ds
xchg
movsb
push
mov
mov
sub
neg
lods
subl
pop
xor
in
dec
mov
outsb
inc
inc
je
out
out
sub
xor
mov
push
mov
push
inc
add
les
inc
in
shlb
dec
shl
lret
scas
ficoms
xchg
sahf
iret
shlb
xchg
jl
sbb
adcb
and
push
outsl
xor
inc
sbb
mov
hlt
sbb
pusha
sub
jnp
push
xchg
lds
je
mov
and
push
xchg
add
jl
sbb
sub
lret
es
lret
jae
int
push
mov
dec
std
fidivl
mov
adc
mov
mov
and
xchg
xchg
push
test
hlt
sbb
adc
cwtl
dec
mov
mov
dec
jnp
dec
push
jnp
pop
arpl
outsl
mov
shrl
test
enter
add
jl
cli
xchg
pop
pop
adc
cmp
dec
lea
jle
mov
ss
cmp
dec
xchg
cld
push
jae
test
xor
pop
rcrb
adc
and
imul
lock
push
out
dec
rcll
or
test
mov
dec
add
mov
lds
pusha
xor
dec
pop
inc
fwait
or
mov
iret
cli
movsl
shr
cmp
pop
rclb
jnp
dec
mov
subl
cwtl
fists
mov
xchg
sub
inc
dec
outsb
lret
loope
add
idivb
xlat
das
cmc
popa
orb
push
test
xchg
ds
push
adc
push
fists
daa
sub
mov
dec
push
decl
mull
shll
inc
in
aas
jo
jns
xlat
test
mov
popf
rolb
cmpsl
dec
iret
and
and
xor
fnstcw
xchg
xchg
fisttpll
xor
ret
aas
dec
dec
pop
ljmp
or
cli
cwtl
pop
pop
lcall
xor
and
push
dec
xor
lods
fcmove
add
push
add
sub
mov
xchg
fsqrt
lds
add
mov
mov
idivb
mov
push
int3
out
pop
fistpl
xacquire
or
movsl
xorl
out
jne
push
nop
fisttpll
lahf
lock
add
sub
pop
test
ja
or
fs
int
and
fucomi
sahf
aaa
sub
addb
repz
arpl
mov
lea
mov
cmpsl
and
inc
mov
fistps
mov
sbb
mov
add
mov
movsl
jae
cmp
into
xor
repz
loopne
jno
dec
add
sbb
xorl
add
das
xchg
hlt
cmp
iret
push
pop
xchg
jp
jge
sbb
cmp
in
shlb
jo
ds
icebp
aas
scas
inc
cmp
test
mov
outsb
adc
pop
adc
mov
clc
xchg
inc
mov
jge
sbb
inc
aas
mov
sti
pop
add
shlb
add
jg
in
or
xchg
dec
int3
mov
movsb
jns
adc
rclb
daa
lods
dec
push
inc
arpl
cmp
pop
outsb
or
pop
add
cmp
push
inc
jp
or
sbb
jle
cmc
mov
mov
imul
jl
call
push
lods
dec
push
mov
clc
and
cltd
jno
setp
hlt
hlt
inc
xchg
xchg
stc
add
jno
xor
js
ljmp
test
or
inc
and
and
inc
mov
push
lret
out
cmp
into
and
add
jns
lcall
sbb
icebp
fists
pop
jge
xor
mov
fldpi
xlat
adc
das
add
xorps
adc
test
pop
inc
popa
xchg
or
and
or
js
in
inc
mov
add
mov
mov
insb
orb
dec
subb
inc
adc
xor
and
mov
dec
push
push
repnz
jmp
push
mov
pop
dec
rorl
ja
fbld
in
sub
or
cmp
out
cmp
les
dec
cltd
adc
into
js
hlt
sti
ret
add
jle
mov
pop
adc
into
in
xor
int
popf
ja
push
mov
dec
cli
mov
iret
add
addr16
pop
push
cli
not
out
cmpsb
fmul
mov
clc
mov
xchg
lret
xchg
insl
sbb
pop
leave
mov
jge
movsb
sarl
mov
mov
mov
inc
push
rorb
aam
test
orl
in
lcall
in
rorb
pop
push
imul
sub
daa
jecxz
push
dec
and
sbb
imul
mov
jbe
inc
lret
imul
mov
popa
mov
in
mov
sub
aad
inc
sbb
jns
fisttpll
rcrb
sbb
push
xor
arpl
pop
imul
les
inc
sub
test
jae
xchg
scas
cmp
dec
in
test
pop
xor
xchg
les
aad
jnp
mov
int3
cmp
xchg
insl
int
pop
lods
outsb
stos
xchg
push
adc
aad
shrb
xchg
shrl
les
stos
jp
repnz
sbb
or
mov
xlat
scas
fwait
in
xchg
or
jle
jp
out
in
sub
out
sub
aas
fwait
sti
adc
mul
jnp
add
int
rorb
iret
mov
loope
idivb
mov
mov
mov
mov
mov
test
or
jbe
scas
and
xlat
rclb
push
and
or
jnp
jmp
lret
jg
adc
lds
add
int3
add
mov
or
fldl
lods
cmpsl
imul
ss
mov
lea
jae
dec
cs
pop
adc
pushf
lods
push
mov
test
mov
push
out
fldenv
movsb
nop
test
mov
arpl
cli
mov
lods
lds
sub
inc
xchg
push
imul
dec
lods
ret
jmp
cmp
adc
rol
xchg
shll
std
cwtl
adc
data16
sub
mov
sbb
aaa
add
int3
mov
mov
xchg
mov
jge
in
loop
fdivp
mov
mov
push
cmp
jl
and
das
pusha
add
or
fstps
cmc
fistl
dec
push
sbb
aas
cmp
aaa
xchg
dec
out
pusha
inc
sahf
lret
push
or
mov
jo
jo
mov
nop
cmp
ss
sbb
pop
subb
jl
imul
popa
mov
in
pop
nop
iret
jl
mov
fldln2
cmp
mov
mov
add
roll
ret
andb
repnz
cli
jnp
mov
leave
call
or
rcrl
mov
jnp
and
outsl
xor
adc
sub
xchg
adc
cmc
ss
ret
enter
push
jp
sbb
shrl
fistpll
stc
inc
push
xor
sarl
dec
iret
sbb
clc
in
xchg
lods
pop
dec
fsubr
xchg
jmp
test
adc
ror
pop
pop
pop
insl
dec
xchg
mov
jge
pusha
out
in
addr16
or
dec
pop
aam
bound
lret
and
mov
inc
mov
jp
mov
cmp
scas
test
inc
ss
inc
pop
jge
cmc
lret
xchg
inc
pop
loop
add
addr16
js
in
jns
stos
loop
in
adc
sub
int
xchg
jmp
ljmp
mov
jg
jne
fs
iret
push
xchg
enter
stos
jle
cld
and
mov
aad
cld
rcrb
into
nop
cmp
lcall
pop
push
push
andb
jge
or
popf
test
fldcw
out
xchg
std
cs
mov
add
xor
or
jae
stos
mov
adc
andb
cmpsb
shll
adc
lcall
dec
fsubrs
out
sbb
mov
cmp
mov
xor
and
sarl
inc
xor
push
fistpll
xchg
push
mov
loopne
int
add
movsb
inc
rcll
cmp
lods
xchg
dec
or
pusha
fdivrl
pop
insb
std
into
nop
mov
imul
add
div
hlt
cmp
loop
or
add
add
push
lret
jnp
icebp
fidivrs
and
xchg
adc
lret
mov
mov
sbb
mov
aaa
sbb
iret
mov
push
push
inc
sbb
push
in
cmp
or
in
fcmovb
nop
addr16
loop
rcrl
pop
rorb
inc
test
js
xor
aad
mov
and
jb
cld
pop
icebp
in
repz
mov
popf
iret
mov
push
rcrl
dec
lods
dec
xor
xchg
jle
mov
vzeroupper
mov
fdiv
jb
and
add
outsb
out
dec
pop
fadd
cmc
jle
ret
loope
lahf
in
mov
push
or
xchg
nop
rcr
testl
jbe
sub
sbb
jbe
push
xchg
faddl
iret
jge
je
je
jne
hlt
mov
aaa
or
lock
push
sbb
cmp
mov
imul
leave
pop
mov
mov
jne
xchg
inc
pop
cmp
cmp
ret
add
add
push
xchg
fs
sbb
outsl
pop
fbstp
sub
sbb
call
adc
pop
fnstsw
adc
pop
adc
sub
enter
je
and
addl
loope
sahf
or
mov
cmpsb
rcl
nop
jb
jg
movsl
xor
repnz
aas
jns
lret
xchg
or
mov
mov
cmp
stos
out
add
ret
fstpl
xchg
sarb
fdivl
hlt
cs
sub
loopne
add
out
sub
mov
cltd
sub
cmp
jle
orl
aad
inc
mov
lret
jmp
xchg
leave
out
addl
adc
or
sbb
jle
int
add
negb
xchg
push
mov
jge
push
xor
sub
cmc
pop
lea
mov
and
add
pop
lock
mov
mov
or
cmp
out
dec
jbe
mov
outsb
insb
jmp
jne
lods
pop
call
or
push
fnstsw
aaa
nop
les
gs
sbb
pushf
fwait
push
pusha
mov
hlt
faddp
dec
jns
or
out
repnz
insb
xor
adcl
fidivs
dec
int
cmp
movsb
repnz
add
mov
push
pop
mov
cltd
test
jbe
xor
outsl
mov
cmp
xor
mov
lock
lret
jl
popf
pop
xlat
pop
cmp
shll
xor
movsb
sbb
data16
pop
scas
fnstcw
popf
mov
out
rorb
stos
lea
pop
pop
xchg
popa
imul
adc
notl
imul
or
jno
aad
lock
jne
imul
push
xor
jge
add
sbb
xchg
inc
ds
test
test
fcmovnu
icebp
and
cmc
mov
or
std
sahf
push
test
cs
mov
sub
mov
lcall
insl
adc
out
mov
sub
shrb
cs
flds
nop
inc
test
inc
nop
out
data16
mov
cld
lods
adc
add
pusha
and
adc
fisttps
add
mov
or
es
xchg
inc
incl
lea
dec
dec
mov
mov
and
push
cmpsb
jbe
cmp
cli
and
dec
xchg
in
xchg
jne
xchg
cmp
xor
inc
js
or
inc
push
adc
adc
mov
inc
push
scas
shlb
pop
ljmp
or
popa
sub
xlat
ja
add
in
cmpl
inc
jbe
xchg
xor
fdivs
mov
stc
mov
call
sub
fistpll
adc
mov
lret
cmp
js
mov
cli
inc
mov
xor
cmpsl
jmp
jae
mov
add
mov
sub
loopne
icebp
mov
ficoms
out
incb
sub
out
push
mov
dec
jp
sbbb
lods
movsl
shl
cmp
lods
or
xor
fs
sahf
dec
dec
inc
ljmp
mov
jb
dec
mov
lahf
mov
movsl
sahf
in
pop
push
and
mov
cmpl
cli
and
es
mov
push
bound
sbb
insb
mov
subl
xchg
jo
push
lea
insl
sub
sahf
add
shl
aam
adc
cmp
mov
adc
or
and
pop
pop
pop
inc
outsb
dec
push
jge
adcl
xchg
pop
imul
fcmovnbe
movsl
xchg
mov
dec
xor
pop
mov
in
cmpl
and
pop
adc
xchg
sahf
adc
xchg
stc
add
data16
inc
or
pop
cs
mov
sbb
out
lahf
cmp
addr16
cmp
mov
mov
test
mov
fstpl
lods
dec
inc
jge
jp
aam
adc
int
or
jne
lcall
cltd
add
clc
sub
mov
mov
in
xlat
lock
hlt
sbb
mov
xchg
dec
xchg
dec
xor
psubw
lods
dec
sbb
jmp
adc
add
push
test
xchg
pop
mov
mov
movsb
xchg
push
std
sub
mov
daa
pop
mov
mov
mov
mov
aaa
jbe
mov
inc
inc
cmp
imulb
roll
enter
loop
es
sti
pop
sub
ror
lds
xchg
leave
jnp
shll
addl
js
xchg
mov
xchg
jecxz
fsub
fildll
push
scas
in
movsl
ret
daa
inc
adc
and
add
lcall
pop
or
jge
mov
aas
dec
jmp
and
sbb
arpl
andl
and
add
pusha
cmp
sub
loopne
dec
cli
xchg
push
daa
mov
repz
pop
dec
jb
lock
loope
inc
mov
push
push
lock
push
sub
out
push
sbb
in
pushf
in
cmpsl
mov
push
lea
jecxz
sub
adc
mov
daa
pop
fwait
imul
lahf
push
incb
cs
nop
shrl
jmp
js
lret
mov
fwait
jns
lds
mov
dec
nop
pop
xchg
xlat
clc
cwtl
insb
sbbb
add
in
ret
and
aas
cmpsb
xchg
inc
rorb
cmpsl
or
jmp
das
mov
les
jl
cmp
cwtl
ss
rcrl
add
fmull
sbb
push
repnz
scas
pop
scas
lock
mov
xlat
push
jl
mov
jns
sarl
fwait
inc
clc
cmpsb
jnp
sahf
sub
sub
xchg
push
and
loope
sahf
and
pop
sahf
or
ret
and
lcall
push
std
jbe
sub
popf
xchg
push
ds
cmp
sub
sbb
mov
mov
mov
in
push
imul
clts
push
out
out
loope
add
sbb
and
cmp
dec
add
je
and
xchg
bnd
xor
fcmovu
and
push
inc
fnsave
xor
bound
addl
xchg
dec
mov
scas
pop
std
clc
repnz
ret
popf
jle
jns
xchg
mov
push
fs
test
adc
call
fdivl
jbe
or
adc
test
mov
lret
imul
js
add
lods
scas
pop
je
dec
scas
inc
jae
push
das
lods
xor
mov
lods
xchg
mov
pop
cmpsb
mov
cmp
ss
test
sbb
jle
mov
js
pop
xor
dec
insl
push
mov
jnp
stc
fisttps
pushf
sbb
push
dec
mov
xor
sbb
outsl
inc
fisttpll
out
pop
cmp
pop
add
mov
loope
lods
push
sub
mov
pop
out
dec
and
dec
xor
xchg
jne
pop
sbb
test
push
call
gs
sub
push
mov
cmp
xor
dec
mov
push
inc
mov
cmp
jg
movsb
lock
loope
clc
jae,pt
jmp
fmuls
cmpsl
and
mov
jle
xchg
mov
push
mov
mov
test
neg
jnp
lcall
in
mov
adc
fdivrp
in
ds
push
pop
call
loopne
enter
add
adc
ds
dec
repnz
out
lret
push
push
push
pop
cmpsl
and
xchg
in
and
jae
aaa
repz
fdiv
pop
push
mov
shll
sub
xchg
ds
out
movsl
pop
mov
out
or
call
dec
xchg
popfw
insb
mov
ljmp
mov
mov
pop
aad
xor
je
cli
cmpsb
gs
clc
cld
cwtl
call
mov
aad
adcb
rorl
push
stc
mov
jl
dec
outsb
in
or
ja
adc
ss
scas
out
loope
cld
lret
stos
and
cmp
pop
mov
aad
pop
scas
mov
and
lods
stos
js
stos
pop
add
pop
ljmp
aad
and
push
sbb
mov
xorb
inc
test
mov
test
rcrl
sub
ja
mov
and
movsb
add
pop
imul
jg
idivb
mov
test
xchg
xchg
or
movl
fsubr
xor
aas
ds
cltd
subb
outsb
out
mov
ret
rcl
push
das
pop
mov
jne
dec
ljmp
popf
std
push
fwait
in
mov
push
or
lock
mov
jle
ficomps
int
mov
push
add
jmp
sub
repz
fnstsw
ja
bound
fs
mov
or
leave
mov
mov
in
adc
push
dec
cmp
jns
xchg
xchg
lahf
pop
in
mov
out
inc
adc
adc
fistps
push
insb
mov
mov
incb
jnp
je
popa
mov
rorb
cwtl
pop
cmpsb
push
xor
inc
ret
mov
pop
inc
cmp
dec
or
xchg
iret
enter
push
test
jns
cli
shll
fidivrl
or
aam
movsl
sbbl
clc
mov
pop
adcl
or
test
pop
pushf
stc
popa
xchg
fucomip
pusha
inc
inc
test
jg
cmpsb
mov
sarl
popf
adc
pop
xchg
lcall
test
mov
dec
sub
xor
cmpsl
fisubl
imul
dec
leave
cmp
jae
inc
mov
int3
jle
add
add
push
int
popa
inc
sahf
inc
dec
aas
rolb
in
cmp
xor
repz
test
test
xor
inc
int3
mov
and
mov
jno
in
lds
sub
mov
stos
dec
loop
in
dec
add
jmp
pop
inc
jp
jae
lcall
aad
xchg
pop
ret
lds
push
or
push
lcall
mov
nop
subl
add
les
mov
add
sbb
pushl
cmc
popl
std
sub
inc
aam
push
les
add
and
pushf
or
cmp
fistps
xchg
sbb
xchg
dec
mov
popf
jnp
xor
adc
mov
ret
xor
xchg
jae
addr16
lock
push
mov
fcoml
ljmp
mov
pop
dec
adc
sahf
shlb
mov
push
sbb
jno
jle
mov
in
push
mov
and
stos
bound
inc
lahf
xor
cli
into
xor
lock
rolb
jbe
or
add
xchg
pushf
shl
mov
das
cmc
push
ret
sub
cld
pop
cmp
int
ja
scas
add
shrl
adc
cld
rorb
ret
cmp
xor
add
shll
add
mov
inc
enter
sub
or
std
inc
mov
sbb
mov
in
sbb
jne
xchg
inc
and
jne
cmp
sahf
mov
leave
ret
xchg
jl
ret
mulb
or
or
pop
hlt
jae
fcomi
insb
pop
and
jle
cwtl
mov
jo
addr16
xchg
xchg
jmp
adc
out
push
ljmp
sbb
mov
jl
inc
mov
mov
std
mov
fsts
jo
enter
shrb
jne
xchg
mov
scas
or
xchg
dec
xor
notl
rclb
mov
push
clc
mov
add
ret
je
and
out
xchg
es
mov
enter
test
mov
subb
and
test
lcall
inc
mov
sbbl
insb
das
inc
subl
nop
push
or
adc
rol
imul
fistpll
sub
adc
adc
test
jne
inc
insb
adc
das
and
push
pop
xchg
jns
movsb
pop
lods
inc
sbb
out
mov
fmulp
xor
cwtl
push
or
js
or
mov
add
subl
jle
shl
js
add
cmp
pusha
cmp
add
scas
das
ja
pop
mov
or
push
clc
and
push
or
dec
jo
push
push
mov
mov
adc
or
dec
iret
loop
push
push
sbb
pop
pop
mulb
ss
into
repz
shr
mov
mov
roll
xorl
adcb
lret
hlt
rclb
push
mov
push
es
mov
mov
mov
xor
sbb
mov
mov
cwtl
jnp
in
push
jo
lea
es
push
inc
nop
repz
cmpsl
dec
mov
mov
popa
out
cmpsl
out
jg
pop
in
pop
pop
fcmove
cs
jne
sbb
fs
rcrl
dec
and
dec
das
cs
addr16
mov
sbb
cmp
dec
xor
mov
xchg
xor
or
xor
sar
jg
loop
in
inc
mov
inc
mov
into
insb
add
popf
in
gs
test
jne
flds
mov
cmpsb
test
push
dec
jo
out
mov
das
ficoms
dec
cmp
hlt
fstpl
in
mov
jnp
adc
jbe
pushf
imul
adc
adc
xchg
shll
out
mov
inc
and
rclb
movsl
adc
sbb
push
ret
cmp
loope
out
sbb
jecxz
in
aas
ds
adcl
push
hlt
xor
in
lods
addr16
sub
jbe
dec
or
and
inc
outsb
mov
xor
xor
stc
jne
and
cmpsl
mov
ljmp
hlt
inc
xor
out
outsl
dec
fwait
add
imul
loope
jge
sarb
aas
daa
xlat
ret
gs
add
cli
inc
add
cs
mov
add
pop
hlt
movsb
xor
pop
mov
outsb
out
xor
jecxz
je
push
or
mov
test
fcoms
sarl
or
and
mov
xor
mov
hlt
pusha
or
fidivrl
roll
sbb
cmc
ljmp
lret
inc
test
sbb
stos
daa
dec
loopne
sbb
inc
lods
rcrl
xor
call
adcb
xchg
stos
mov
mov
push
xor
aaa
mov
xor
sub
dec
or
cltd
mov
or
dec
andl
push
pop
inc
or
mov
pop
push
sbb
int3
push
ljmp
and
add
jl
std
leave
pop
dec
icebp
cmp
sub
pop
mov
push
cmp
pop
or
xchg
mov
fstl
sbb
mov
sbb
lods
subb
and
fadd
ror
mov
stc
dec
adc
add
dec
cmc
inc
or
scas
int
adc
xchg
int3
int3
in
and
mov
rol
rorb
pop
mov
add
and
cld
mov
and
mov
pop
jns
out
xchg
dec
add
xchg
popf
cmp
daa
cmp
scas
stos
mov
xchg
push
pop
sub
mov
fcomps
mov
xchg
enter
and
push
mov
mov
add
ja
and
sbb
stc
xchg
pop
popf
push
and
add
push
jg
cmp
cmpsl
dec
sbbl
jnp
cwtl
mov
pop
in
xchg
mov
inc
or
iret
push
in
out
push
pop
scas
ds
adc
test
in
cs
mov
js
jbe
ss
dec
xchg
mov
loop
fcoml
mov
pusha
jg,pt
fnsave
ret
push
mov
mov
test
xchg
cwtl
pushf
les
push
in
xchg
inc
xchg
pop
mov
fcmovnu
jge
mov
inc
ror
and
cmp
xor
sahf
push
jecxz
mov
adc
xor
clc
shrl
mov
test
sbb
loopne
inc
push
and
sbb
or
mov
outsb
mov
int
sahf
clc
je
frstor
push
inc
mov
jns
outsb
pop
xor
mov
adc
ror
mov
pop
shll
fsubr
aaa
imul
in
fwait
dec
mov
sahf
xchg
jno
int
aam
cli
jecxz
pop
test
dec
add
mov
and
loopne
sbb
rcll
fidivs
and
hlt
fstps
adc
cmp
or
add
lods
sbb
enter
and
scas
sub
test
sbb
jbe
inc
loop
xor
sbb
icebp
mov
or
aas
push
or
push
cs
into
outsb
fwait
iret
int
imul
dec
shrl
in
lea
push
popa
in
mov
insb
xor
cwtl
sahf
cmp
cmp
push
mov
repnz
ret
and
jne,pn
shlb
push
inc
or
fimuls
popf
cmp
sar
ret
dec
xlat
popf
mov
xor
les
cmp
loopne
cmp
jmp
leave
jg
leave
shlb
mov
out
das
xor
ret
pop
scas
shr
lret
icebp
es
push
adc
fs
fstpl
rcl
pop
insb
add
lret
pushf
mov
sub
mov
mov
cmp
outsl
mov
adc
loopne
stos
nop
scas
pushf
push
cmpb
pusha
xlat
cwtl
xchg
sbb
sbb
in
iret
imul
cwtl
loope
adc
maskmovq
mull
pop
insl
pop
xchg
lock
popa
fwait
and
je
pop
xchg
inc
repz
divb
aam
sub
divl
int
lcall
pop
mov
in
stos
into
das
dec
dec
cmp
lahf
jg
test
xor
or
or
push
jp
xlat
out
js
push
sbb
les
cmc
movsl
es
mov
xlat
push
outsb
cwtl
mov
cmp
and
enter
adc
add
sbb
jl,pn
into
test
in
jge
popa
jb
aaa
push
rcrl
inc
int3
pop
nop
imul
lods
mov
pop
pop
popf
cwtl
in
rcrl
adc
add
iret
mov
popa
dec
and
cmp
fadds
popf
pop
aaa
aad
xor
jns
xlat
or
cs
jp
clc
gs
mov
lea
mov
add
sub
mov
aaa
int3
mov
push
and
stos
mov
sbb
movsl
dec
adc
jg
popa
adc
fcoml
cwtl
enter
andb
jbe
loop
mov
lret
dec
insl
les
inc
hlt
adc
pop
adc
outsb
jp
or
inc
xchg
jl
jae
jmp
dec
scas
pop
scas
sub
mov
push
pop
push
xchg
sub
in
dec
insl
inc
repnz
jno
mov
pop
pop
dec
sbb
into
jnp
sbb
test
fcmovnb
jnp
mov
cld
rcrl
in
add
test
pop
or
and
aas
out
pushf
cmp
cmp
mov
dec
push
sub
cmpsl
push
clc
clc
or
gs
and
hlt
adc
inc
lea
mov
pop
fldt
imul
insl
stos
test
mov
lock
arpl
lods
xchg
scas
sar
mov
mov
xchg
rcrb
jbe
push
and
dec
lcall
pop
or
pusha
and
xor
push
repnz
int3
adc
dec
add
inc
or
loopne
add
test
push
inc
pop
mov
xchg
adc
dec
sbb
popa
xchg
aaa
inc
out
inc
popf
testl
ss
hlt
sti
xchg
add
xchg
mov
mov
sbb
cmpsl
mov
loope
push
mov
arpl
jne
or
sbb
dec
loope
enter
bound
dec
and
or
sub
adcb
inc
fs
cmp
jno
sbb
jae
inc
jb
mov
lret
jb
push
jg
fs
jge
fimull
rorb
jle
pop
aad
inc
pop
inc
sbb
pop
scas
aam
inc
popa
lret
fistps
push
dec
and
push
in
lahf
insl
sbb
in
cli
out
mov
xor
mov
sub
mov
stc
jne
cli
cmp
add
xchg
shlb
sbb
inc
cmpsb
int
fwait
repz
addr16
repnz
lahf
mov
jnp
shlb
dec
fwait
inc
lock
dec
lahf
mov
arpl
notl
xchg
aam
mov
rcrb
mov
data16
inc
cld
or
cmp
popf
push
in
push
loopne
int
les
das
or
xchg
into
lahf
lret
and
mov
mov
test
std
std
iret
adc
clc
xchg
int
xchg
out
xchg
jb
imul
lds
imul
mov
mov
aad
and
mov
iret
int
mov
jb
pop
leave
pushf
push
leave
loopne
sub
fdivrs
jle
outsb
jne
loopne
mov
sub
push
imul
lahf
add
mov
inc
lds
outsb
mov
cld
in
aaa
dec
push
mov
pop
aas
or
cmp
mov
std
or
fimull
sbb
call
add
dec
dec
cli
notl
or
andb
lea
mov
stos
test
sub
das
adc
lock
jo
outsl
inc
dec
dec
cmp
loope
shll
mov
ret
jns
ret
sbb
int3
jne
aam
inc
clc
fadd
pop
out
ss
lods
iret
setbe
inc
pop
push
dec
gs
mov
sbbb
cmp
lds
jbe
cmp
ss
push
push
pop
xchg
add
pop
call
movsl
ds
sti
push
insb
in
inc
fs
xchg
lods
popa
cmpsl
lock
mov
inc
das
out
addr16
mov
lea
ss
pop
pop
push
adc
sub
jecxz
loop
or
test
pusha
xchg
sub
pcmpgtw
mov
xchg
dec
inc
lea
fistpl
lret
outsb
repz
sbb
xor
aam
push
xor
sub
xchg
mov
dec
sahf
sbb
lock
mov
or
xor
cmp
int3
wbinvd
xchg
sbb
jl
movsb
aad
int3
mov
pop
stc
icebp
push
dec
cmp
mov
in
cwtl
inc
insl
adc
scas
lock
fwait
dec
in
out
inc
mov
mov
mov
into
into
adc
dec
fwait
jp
movsb
xor
lret
cmp
cli
xlat
scas
cmpsl
xchg
in
sub
jno,pn
ja
sub
add
cmp
dec
xchg
in
or
or
cmc
adc
ja
das
and
pop
pop
cmpsb
pop
lea
ret
mov
outsb
cmpsb
xchg
xchg
sbb
idivl
lret
sub
lcall
adc
clc
pop
jae
fs
jecxz
jp
mov
push
cmp
mov
cli
mov
xor
push
mov
int3
mov
daa
or
push
jns
pop
std
sub
repnz
mov
add
out
cld
or
cmp
pop
dec
outsb
xchg
dec
inc
sbb
arpl
sbb
outsl
bound
pop
addl
xchg
ret
ret
in
nop
ljmp
or
push
aas
jns
repnz
mov
dec
rorb
shll
pop
cmp
xorb
loope
mov
pop
add
in
dec
xor
inc
xchg
rolb
xchg
icebp
popw
das
adc
fidivrl
adc
sarl
xchg
cmpsb
xor
mov
mov
inc
jp
dec
js
test
or
fwait
das
xlat
or
xchg
sbbl
pop
mov
add
orl
mov
out
test
iret
stc
scas
push
fsubrs
push
adc
jbe
hlt
js
fistl
sbb
imul
xorl
xchg
cmpsl
cmp
or
xchg
sub
je
ds
dec
ljmp
adc
cmp
aam
test
inc
sub
movsl
sub
lea
cld
mov
fcoml
push
out
lret
lret
jge,pn
fdivr
sarb
inc
xchg
out
imul
popl
dec
inc
hlt
and
jb
inc
lret
inc
pusha
push
pusha
movsb
jnp
out
ret
gs
xchg
jne
mov
scas
test
call
mov
cmp
xchg
adc
and
jnp
sbb
and
lcall
xchg
jg
loop
adc
test
add
xchg
adc
push
outsb
and
or
pop
aas
push
ja
pop
lahf
lahf
mov
add
bnd
mov
out
pop
push
addl
in
fstpl
test
leave
adc
ljmp
jmp
adc
xchg
test
mov
dec
aad
test
stos
fucom
orb
add
nop
cli
jge
xchg
adc
xchg
lea
imul
and
shl
lods
int3
mov
cmp
pop
xchg
and
lea
mov
ret
adc
cltd
or
mov
pop
dec
mov
aas
jo
cmc
lcall
push
mov
jecxz
imul
mov
and
idivb
mov
mov
pop
cmp
xor
sbb
mov
lcall
jle
stos
sub
pop
push
lock
cmpsb
pop
inc
inc
nop
inc
dec
andb
cltd
mov
ss
int3
jg
add
iret
mov
mov
mov
mov
movl
cmp
cmp
xchg
and
cmp
push
mov
sub
pop
imul
call
and
xchg
pop
mov
jp
cwtl
sub
mov
add
sub
sahf
call
rep
xor
mov
call
pop
sarl
adc
and
outsl
loope
in
fimull
mov
adc
mov
inc
movsb
rcll
mov
xchg
movsl
mov
leave
movsb
or
mov
cmp
push
mov
fiaddl
or
addb
push
push
jmp
stos
jecxz
jg
add
int
or
andb
ds
sub
inc
nop
mov
xchg
mov
arpl
jge
or
fidivs
mov
xchg
rolb
fmuls
loopne
rorb
into
outsl
scas
mov
sub
in
or
sbb
repnz
and
imul
aaa
pop
xchg
lahf
lds
push
repnz
push
loopne
add
add
test
sub
cld
dec
push
xor
xor
stos
ss
ljmp
pop
daa
pop
mov
aam
scas
daa
mov
mov
xor
cli
jecxz
push
insb
shll
or
xchg
mov
lcall
rorl
push
scas
insb
imul
out
mov
call
push
sub
decb
xor
pop
sti
sti
sub
pop
jp
inc
sbb
stc
add
mov
push
jbe
les
and
test
push
xlat
dec
lea
cmpsb
aad
test
es
xchg
out
lock
psubb
roll
mov
in
out
jnp
imul
jbe
jbe
ljmp
das
mov
repnz
lods
cmp
stos
dec
xchg
cmp
pop
divb
aam
rorl
inc
gs
xchg
pop
in
decl
js
sahf
sarb
in
mov
enter
mov
aam
repnz
jnp
mov
mov
xchg
test
cmp
fwait
push
inc
das
inc
xchg
in
dec
lret
rorl
mov
ja
mov
pop
or
aam
std
or
test
jle
stos
in
lods
jmp
lds
enter
mov
push
int
dec
inc
test
add
nop
adc
sbbl
outsb
int3
cmp
mov
or
lret
bound
xchg
add
ljmp
stos
cmp
pop
movsb
or
hlt
jb
mov
cmpsl
lret
or
add
or
xlat
mov
adc
push
mov
in
add
add
add
cmp
inc
mov
mov
lods
stos
lret
fmulp
shll
pop
mov
and
xchg
fsubl
cltd
out
xchg
cltd
fs
mov
cltd
notl
mov
fsubrl
push
xchg
lret
testl
sub
sahf
mov
lods
mov
dec
inc
mov
mov
push
imull
call
sbb
cld
inc
ja
push
or
daa
adc
int
shlb
pushf
movsb
subb
dec
mov
push
mov
jnp
pop
bswap
inc
sub
or
xor
fists
sti
jl
sbb
cs
arpl
and
add
mov
iret
icebp
int
shlb
adcl
repz
out
mov
xchg
lret
aad
jp
adc
sbb
mov
inc
mov
mov
loope
in
inc
mov
inc
sbb
stos
sub
addr16
sbb
rcll
sarb
inc
jp
sbb
lret
inc
cmp
pushl
push
hlt
fadd
mov
out
mov
std
dec
nop
icebp
lock
jl
pop
pop
and
int3
or
mov
push
adc
pop
pop
dec
out
hlt
imul
xchg
leave
dec
pop
dec
out
push
inc
nop
stc
leave
repnz
movsl
rcll
out
cs
lret
cmpsl
test
xor
mov
jo
imul
sbb
insl
pop
mov
mov
shrb
mov
inc
mov
cs
shlb
adc
jbe
mov
int3
out
push
push
sahf
add
jle
jmp
xchg
xchg
and
call
jle
das
negb
pop
outsb
or
cltd
fldl
dec
push
outsb
pop
orb
xlat
movsl
or
xchg
jbe
jne
jno
or
nop
in
data16
in
mov
out
cmpsb
cli
lock
scas
inc
dec
out
push
cmp
sub
adc
mov
dec
jns
repnz
cmpsl
or
in
xchg
enter
cmp
lcall
cli
xchg
sti
mov
sub
rcl
mov
xchg
dec
inc
les
testl
mov
lods
pop
cltd
sub
sub
cmp
idivl
mov
inc
and
clc
xchg
fstpt
mov
push
inc
dec
clc
inc
xor
pop
sbbb
je
or
push
inc
push
inc
jecxz
and
jne
push
imul
fs
repz
dec
roll
sub
fwait
jle
or
inc
pop
inc
push
mov
repnz
sti
int3
dec
jne
imul
insl
inc
sub
iret
addr16
rolb
mov
pop
dec
adc
or
push
cli
nop
sub
cs
das
dec
in
loopne
mov
ds
adc
mov
xchg
push
lods
call
jg
int
fbstp
lods
pop
pop
jge
xchg
xchg
ds
outsb
adc
adc
aas
push
push
popf
xlat
nop
xchg
xor
lcall
mov
aad
cmpsl
mov
push
jecxz
scas
mov
insl
je
test
lods
mov
jo
mov
pop
xchg
dec
mov
jne
xlat
inc
out
sarb
popa
push
dec
mov
cmp
xchg
in
ss
adcb
xor
jl
sub
dec
outsb
lcall
jecxz
iret
adc
icebp
pop
loope
out
les
daa
xchg
cmpsl
lcall
fisttpl
sar
shr
and
into
and
mov
push
mov
sbb
fs
filds
push
push
adc
dec
mov
das
mov
jnp
ja
sub
mov
cwtl
inc
fldt
pop
or
mov
cmp
notl
dec
xchg
sbb
testl
popf
xchg
pusha
mov
pmulhuw
lods
jge
outsb
in
xor
in
popa
push
fs
xor
aam
and
dec
lret
xchg
dec
test
dec
mov
mov
dec
loope
jl
data16
mov
scas
dec
sbb
popf
mov
fstps
pop
xchg
adc
inc
xchg
mov
iret
jo
dec
sub
add
pop
sub
inc
mov
mov
lret
sub
push
decb
inc
push
mov
and
push
cld
adcl
push
shrl
xchg
mov
test
sti
push
pop
jnp
pop
fucomip
pop
jmp
mov
repnz
mov
jmp
pop
push
cmp
cmp
mull
loop
stos
popa
gs
leave
scas
cmp
xlat
test
adc
adc
cmp
je
rcrb
jl
adc
dec
int
icebp
xor
cld
xor
pop
mov
mov
outsb
push
or
xor
hlt
pop
or
gs
sbb
xchg
inc
stos
les
push
rorb
loop
adc
xchg
test
movsl
pop
or
aad
or
sbb
xchg
mov
pop
cli
push
out
iret
rolb
mov
dec
pop
mov
dec
ret
icebp
int
add
mov
ds
jo
int
and
stos
cmp
mov
daa
mov
cli
jp
jmp
shrl
mov
mov
out
popa
jne
xchg
nop
adc
lods
les
sub
xor
inc
subl
repz
insb
mov
in
mov
rcll
push
pop
push
lahf
popf
or
ret
cmp
loop
pop
push
stos
icebp
sbb
mov
sub
incb
jmp
jnp
mov
je
loopne
mulb
in
loopne
mov
lock
movsl
inc
mov
pop
dec
aaa
insb
ret
cwtl
sbb
inc
ret
arpl
jle
or
xchg
jns
mov
push
idivb
mov
repz
mov
aas
mov
es
scas
mov
stc
fs
cmp
push
adc
clc
mov
das
mov
lret
sbb
dec
clc
pop
push
adc
jo
adc
cltd
mov
mov
dec
lret
icebp
sub
push
imul
jp
sbb
sub
ss
pop
int
fistpll
out
jmp
das
push
icebp
or
adc
stc
arpl
or
pop
daa
in
movsb
xchg
mov
add
insl
push
std
int
and
add
clc
ficoml
mov
xchg
pop
addb
jne
adc
imul
mov
cmpsl
xor
jbe
cmp
fmull
and
int
push
xor
lahf
dec
cmp
jnp
push
psrlw
les
mov
test
scas
aam
or
cld
sbb
mov
adc
scas
or
push
sbbb
dec
stc
xchg
rcrb
or
les
out
cmpsb
lahf
lock
xor
jmp
push
sbb
jne
sub
inc
jno
movsl
imul
sar
mov
add
inc
cmp
addr16
cmp
inc
int
mov
push
andl
or
imul
notb
sbb
push
add
iret
add
cmp
ret
add
dec
push
out
stos
fxch
ret
cli
pop
repz
repz
mov
out
loope
data16
repz
adc
out
mov
sbb
outsl
sub
std
in
mov
out
sub
push
adc
jo
mov
cmp
xchg
jbe
lea
aaa
cmp
dec
fsts
mov
idivb
push
scas
adc
fisttps
cmc
bound
sub
push
test
call
divl
add
jle
iret
test
dec
mov
cmpl
ja
fcomps
or
jns
popf
xor
push
push
adc
xor
das
pop
jecxz
mov
dec
in
sub
sbb
aad
jo
xchg
jecxz
mov
push
mov
test
loop
jo
rcl
sub
mov
lea
fwait
div
inc
add
cmp
xor
push
jae
pop
cmp
repz
std
sbb
dec
push
fimull
add
hlt
jmp
add
sub
notb
test
jecxz
add
add
inc
hlt
sbb
sbb
and
xchg
cmpsl
nop
xchg
cld
ret
scas
xchg
or
sub
sbb
popf
inc
jbe
cmp
sbb
jl
or
lods
sub
jo
push
lods
add
je
push
jnp
mov
ljmp
sbb
jecxz
jmp
call
out
popa
adc
clc
cmp
xor
loope
lods
out
adc
xor
and
sbb
insl
loop
pop
hlt
pop
add
lock
cmpsl
lret
stc
mov
ret
adc
lods
mov
and
mov
push
mov
jmp
add
cmp
add
mov
faddl
pop
sbb
sti
js
repz
inc
xor
call
inc
divb
xchg
ret
pop
mov
xchg
lahf
mov
push
in
enter
jmp
jmp
das
xchg
xchg
sub
int3
push
sbb
sub
dec
cmp
or
in
xchg
cltd
fmulp
cld
mov
les
xchg
mov
mov
rorb
inc
add
add
fistps
int3
xor
cmp
dec
in
xchg
adc
xchg
test
sbb
pop
inc
inc
dec
orb
leave
inc
ja
gs
stos
cld
and
push
sub
jbe
mov
push
push
inc
out
stos
mov
push
sbb
insb
xchg
mov
jl
push
xchg
sbb
mov
xor
lods
xor
cmpsb
cmpsb
stos
jne
cmp
mov
sbb
dec
aas
pop
dec
mov
push
push
sti
in
or
daa
stos
cmp
inc
xchg
nop
je
jbe
mov
mov
inc
cmp
or
inc
shl
sub
inc
daa
cmp
mov
add
mov
lcall
mov
mov
push
xchg
shr
add
dec
pushf
insb
add
dec
xchg
cmp
aad
imul
mov
xlat
inc
inc
dec
xchg
and
jmp
dec
es
int3
pop
or
mov
icebp
sub
mov
in
pop
xor
sbb
mov
cvttps2pi
in
and
or
mov
xchg
push
stc
lea
popf
cltd
pop
add
arpl
xchg
cmp
das
or
mov
xchg
and
lret
dec
loopne
dec
push
in
sbb
cmc
leave
mov
sbb
sub
loope
or
adc
hlt
add
popl
scas
mov
pushf
cmc
mov
sub
fisttps
lock
les
daa
ja
pop
mov
inc
cs
push
test
cld
ljmp
inc
scas
imull
movsl
or
test
pop
and
or
bound
scas
sbb
or
add
in
rolb
adc
decb
inc
mov
push
in
fwait
shl
inc
jmp
repnz
insl
jno
out
xor
lcall
popa
orl
test
xchg
sub
mov
nop
loopne
cwtl
push
xchg
jl
dec
sahf
dec
push
inc
stos
cmc
or
pop
pushf
loope
iret
movsb
adc
jbe
jo
mov
adc
rcl
arpl
cwtl
jae
push
push
dec
inc
clc
lea
hlt
dec
xchg
jl
pop
sbb
std
xor
mov
incl
jb
sbb
jle
push
xor
sub
aad
jle
cmpsl
push
pop
inc
lcall
cmp
fisttpl
shrl
or
fistps
imul
xlat
pop
dec
scas
lods
mov
fldt
sti
dec
mov
or
aaa
int3
xchg
lahf
arpl
in
test
xor
inc
pop
jnp
mov
push
cs
rolb
add
dec
add
dec
lds
xor
inc
aaa
cmp
push
in
jle
adc
adc
sahf
jns
mov
je
push
sbb
dec
fisubs
jbe
sub
aas
mov
addr16
dec
fbstp
dec
fnstenv
ret
in
lods
sbb
adc
and
mov
sbb
adc
jmp
aam
cwtl
jle
inc
cmp
mov
es
pop
xchg
pop
test
popf
mov
repnz
add
test
mov
inc
ja
pop
push
xchg
int
or
mov
xlat
cld
mov
js
outsl
sbb
fsts
cwtl
stc
push
xchg
xchg
jns
jle,pt
mov
fisttpl
mov
inc
rolb
mov
mov
xor
jl
ss
jne
enter
pushf
loop
xchg
lret
scas
scas
mov
push
ljmp
xorb
mov
popa
iret
aaa
mov
xchg
cmp
sub
dec
test
push
push
cltd
ficompl
mov
in
mov
mov
faddl
push
or
push
push
lret
shll
sbb
cli
arpl
pop
sti
jg
jecxz
mov
inc
jbe
hlt
sbb
les
inc
pop
movsl
pusha
mov
stc
pop
sbb
add
andb
adc
jns
popa
aaa
jmp
cmp
in
fists
ds
push
mov
lcall
xchg
inc
leave
push
icebp
ret
jmp
mov
mov
mov
dec
jmp
push
sbb
scas
out
jge
and
dec
and
hlt
js
les
sahf
adc
pop
dec
xor
jmp
push
xchg
dec
aad
pop
pop
push
mov
and
repz
cmpsl
mov
popa
mov
pop
xchg
idivl
popf
jge
xor
adc
mov
arpl
cltd
pop
pop
std
lods
cmp
lock
dec
add
cmpsb
mov
mov
lds
push
loopne
pop
into
xor
imul
hlt
stos
xor
test
xchg
adc
les
pop
add
jge
sub
xchg
cmp
add
into
enter
ss
and
clc
mov
push
sbb
das
in
xor
rcl
testb
pop
dec
roll
out
mov
sahf
xor
shlb
sub
pop
mov
fsubs
xchg
iret
xlat
adc
add
jle
fxtract
dec
in
adc
ja
sahf
cs
lock
mov
mov
jge
imulb
test
adc
jl
inc
insl
xor
push
ss
pop
clc
bound
inc
out
clc
mov
cld
push
sbb
sbb
cmp
lcall
push
ss
scas
repnz
cmp
xchg
cmp
bound
inc
cmp
sub
test
popa
pop
sub
xchg
add
pop
mov
pop
hlt
lahf
sub
addb
inc
leave
repz
das
jl
or
inc
out
in
cmp
inc
sbb
rclb
bound
arpl
fstps
add
xabort
rcrb
sar
aam
sbb
sbb
sahf
out
in
mov
aam
int
rolb
out
ret
enter
and
jge
scas
scas
mov
push
lds
cmp
cmp
leave
lea
cmpsb
adc
in
inc
mov
mov
es
xlat
jbe
and
aaa
and
jo
push
ds
in
rcll
push
data16
sub
mov
push
sub
enter
ret
xor
xor
ret
lock
data16
dec
sahf
test
aaa
pop
mov
insb
icebp
std
call
or
ficoms
out
cwtl
sti
inc
sarb
inc
sub
inc
jno
rorb
test
int3
scas
push
insl
movsb
lret
jmp
adc
push
bound
roll
andb
mov
pop
arpl
cmp
jo
push
gs
sbb
dec
mulb
adc
lret
push
sub
sub
jg
jge
sbb
cli
loop
loopne
adc
stos
add
sbb
bound
jl
mov
mov
mov
xor
xchg
cmpsb
xor
xchg
stc
add
test
mov
ss
fdivr
xor
push
jl
test
fwait
push
popf
inc
hlt
and
lahf
jp
call
test
outsb
adc
xor
dec
cmpsl
adc
mov
sbb
rolb
pop
xchg
or
mov
cmp
repnz
jb
outsb
call
mov
stc
push
cld
sti
pusha
clc
cmp
push
cmc
popf
cmp
pop
xlat
pusha
or
out
pop
xchg
fs
scas
push
add
leave
adc
and
test
into
xchg
mov
mov
shlb
sub
jne
jmp
fdivp
pusha
jecxz
mov
cld
out
gs
call
mov
mov
xor
lret
push
push
scas
jl
imul
sub
jecxz
xor
leave
imul
scas
lcall
arpl
flds
cmpsb
imul
mov
mov
jge
mov
jne
ret
xlat
push
mov
xchg
bnd
inc
shll
push
stos
jecxz
xchg
xchg
adc
cmp
movsb
xor
popf
lcall
push
add
or
jb
sti
pusha
pop
cli
jo
pop
loop
xchg
push
sbb
jecxz
dec
sub
in
inc
fcomi
xchg
out
push
xchg
cltd
and
cmc
insl
ljmp
fnsave
in
xchg
fcmovnu
dec
lahf
jne
incl
in
scas
rorl
jno
add
or
das
xchg
aam
xchg
addr16
cmpsb
push
or
cmc
sub
adc
inc
dec
out
sbb
sub
testl
dec
sbb
sub
add
mov
pop
mov
lods
jnp
mov
rcll
sahf
and
mov
adc
rorl
cltd
sbb
cmpsb
push
out
mov
xor
xor
or
or
loopne
test
movsb
movsb
fcoms
lcall
repnz
aad
push
mov
pop
lret
test
aad
pop
in
cs
popf
push
mov
fstps
lds
jae
rcl
adc
js
jmp
push
rcr
dec
pop
xor
aam
call
mov
sti
pop
pop
int
xor
push
jnp
pop
sbb
fstpl
sbb
xchg
add
rorl
shr
xchg
dec
cmc
sti
jmp
sbb
cmp
mov
add
icebp
xor
adc
sub
jne
gs
and
sub
push
dec
aad
arpl
pushf
and
iret
loop
or
bound
or
mov
inc
sbb
xor
scas
neg
dec
push
or
push
pop
fiaddl
mov
adc
mov
cmp
nop
and
inc
push
dec
sub
clc
jo
call
mov
clc
mov
jmp
push
lahf
or
sahf
mov
aad
xor
pusha
out
mov
mov
sub
pusha
or
mov
xor
imull
aaa
into
or
and
mov
pop
testb
mov
adc
aas
stc
and
addr16
subb
sub
push
rcl
js
sub
clc
and
fs
clc
in
leave
and
scas
ja
pop
mov
stc
push
insl
outsl
xchg
xchg
cld
loope
xchg
stos
into
mov
fdivr
pusha
mov
mov
nop
sarl
scas
push
sub
cmp
pusha
out
inc
or
aad
or
cmp
or
sbb
dec
push
test
push
fidivrl
roll
push
inc
push
pop
pop
sbb
or
jl
iret
mov
inc
in
sub
imul
sbb
repz
in
cmp
or
mov
push
lds
mov
dec
jl
jb
bound
mov
fisubrl
cmp
iret
or
mov
shll
adc
ljmp
cs
cmc
or
orb
pop
inc
in
aas
in
mov
mov
rolb
jl
or
aam
cwtl
mov
call
jle
push
xchg
add
adc
cmp
pop
and
cmp
scas
pushf
push
out
xchg
test
push
ljmp
xor
aas
push
mov
idiv
int
mov
mov
out
aad
out
bound
add
cmp
cli
push
out
clc
cmp
mov
rolb
scas
xchg
pushf
pop
sbb
push
movsb
sub
jb
or
repnz
int
pop
mov
cmp
mov
fdivs
mov
adc
icebp
jmp
pop
jno
imul
int
jo
movsb
or
mov
daa
xlat
push
lods
push
cmpsl
dec
mov
adc
adc
mov
or
push
insl
jl
negb
xchg
test
loop
ret
clc
pop
xchg
loope
fstl
or
fwait
lods
jb
cmpsb
sbb
sub
imul
push
dec
aam
addr16
adc
jae
lods
xchg
in
jge
and
push
xchg
fs
ljmp
nop
jo
or
cmp
popf
ss
jne
push
mov
mov
sbb
sbb
add
icebp
loop
lahf
mov
jnp
xchg
fcompl
push
mov
stc
add
imul
fnsave
dec
rorb
xchg
sub
arpl
mov
int
jecxz
inc
xchg
mov
ds
out
push
jl
mov
xorb
inc
imul
lahf
imul
cmpsb
dec
in
and
fsts
leave
xor
call
and
jmp
adc
jae
xchg
push
mov
pop
pushf
mov
into
sub
lock
dec
lods
in
sbb
div
adc
orl
pop
popf
test
jecxz
hlt
mov
mov
leave
cmp
mov
sub
mov
mov
sbb
loopne
inc
rolb
and
cmp
mov
jns
daa
in
cli
or
movsl
ds
es
push
jbe
xlat
ficompl
in
or
push
popa
andl
add
cs
adc
jle
ret
fwait
sub
scas
cmp
enter
xchg
insl
bound
pop
add
push
xchg
leave
fnstsw
fstpt
dec
mov
call
mov
arpl
sub
push
inc
mov
rolb
test
clc
add
js
sub
mov
cmc
pusha
and
sbb
out
js
bound
push
movsb
stc
mov
stc
mov
or
pop
pop
ret
xor
stos
stos
rcrb
adc
xchg
adc
add
test
cmp
push
push
jmp
stos
stc
xchg
fs
in
mov
push
jbe
aam
dec
xchg
push
imul
orb
mov
fs
leave
push
and
insb
int3
mov
lahf
mov
shrl
push
stos
adc
add
aam
jb
mov
inc
mov
fildll
in
orb
xchg
push
cmp
push
pop
aam
orl
iret
push
add
je
or
inc
lea
mov
notl
mov
insb
xor
cmp
ret
mov
xchg
pop
daa
cmp
lock
xchg
popa
pop
int3
lahf
dec
imul
test
adc
pop
pop
mov
mov
jnp
aad
stos
lock
clc
push
aam
inc
and
cmc
push
mov
inc
cmpsl
lods
bound
negb
pop
push
or
cwtl
or
shlb
sbb
jbe
sbb
inc
jb
xchg
inc
push
cwtl
xor
xchg
ja
sub
movsb
cld
xor
dec
adc
lret
imul
sar
jb
dec
inc
rcrl
add
dec
test
fldz
test
pop
das
jp
pop
jbe
xor
push
lea
lock
addr16
cmp
stc
aaa
imul
scas
insb
jmp
mov
stos
cmp
imul
sub
jp
pop
sub
pop
test
enter
and
dec
hlt
mov
inc
xor
jbe
jl
mov
lret
je
leave
lds
mov
in
ja
adc
arpl
push
jmp
mov
adcl
loopne
mov
cld
mov
mov
out
jne
fbstp
cs
mov
roll
fmuls
xor
aam
leave
jmp
or
or
rolb
and
xchg
lcall
sbb
bound
cmp
in
pop
xchg
push
xchg
popf
sub
xchg
sub
decl
pop
sub
fdiv
ds
lea
push
aas
pop
stos
push
repnz
push
out
sub
inc
cmpsl
loop
pop
sub
jmp
jae
mov
movsb
das
sub
imul
or
loop
push
mov
sub
pop
stc
jnp
je
test
leave
lea
lahf
dec
imul
and
fiadds
and
adcl
ret
call
mov
sbbl
shll
fdivrl
push
scas
sub
sub
dec
mov
xchg
dec
mov
loop
call
mov
stc
test
and
ret
mov
jecxz
mov
xor
andl
mov
mov
clc
pop
add
rcll
pushf
add
int
rcl
mov
mov
pop
pop
mov
pop
jne
insb
xor
push
sbb
andb
loope
mov
or
cli
pop
adc
popf
dec
shll
bound
xor
inc
inc
sub
push
jp
mov
scas
enter
leave
xchg
loop
add
mov
rcll
mov
mov
sub
subl
lods
icebp
mov
and
push
pop
pop
add
or
outsl
xchg
jnp
pop
arpl
int
push
imul
pop
push
mov
push
in
rcll
stc
inc
and
cld
shll
pop
mov
sti
out
and
inc
inc
dec
pop
mov
loopne
and
ret
mov
mov
xchg
imul
xchg
mov
nop
and
add
scas
ljmp
or
adc
jg
into
scas
les
mov
dec
mov
add
jmp
mov
ljmp
test
push
scas
negb
push
and
sbb
xchg
mov
fs
xchg
mov
test
and
mov
add
mov
outsb
cmp
fdiv
jge
fnstenv
rcrb
pop
pop
stc
out
lcall
imul
mov
mov
jg
mov
shr
push
adc
add
and
ficomps
fdivrs
enter
sbb
cmp
and
jae
sti
stc
mov
stos
dec
mov
pusha
push
jecxz
lcall
dec
sbb
lcall
cmpsl
fists
stos
and
call
iret
push
lds
scas
fwait
clc
add
and
jle
es
sbb
lret
push
sbb
mov
mov
sub
outsb
xor
jb
iret
xlat
lea
or
adc
mov
or
push
aaa
and
cmp
cmpsb
arpl
int
hlt
cmp
inc
sahf
inc
jnp
addb
mov
fsts
push
andb
mov
mov
std
mov
pop
loop
push
mov
dec
lret
fsubrl
bound
cmp
push
jmp
subb
cmpsl
jp
cmp
lret
add
cmp
mov
rcll
mov
test
out
addl
pop
int
sbb
mov
xorb
push
and
mov
push
cmc
into
fsubr
jl
test
mov
push
or
mov
push
mov
lods
and
or
add
je
mov
sbb
bound
aam
xchg
lahf
jle
xchg
mov
cmc
cmp
jae
add
jnp
aam
inc
push
sbb
dec
das
enter
mov
xlat
jae
mov
ds
pop
mov
mov
iret
push
mov
rclb
ds
cmpb
shrb
cmp
filds
sub
adc
inc
enter
daa
dec
or
push
mov
cmc
xchg
in
mov
xchg
jl
inc
mov
enter
lret
imul
je
ljmp
jl
sbb
mov
fabs
lcall
fs
lcall
adc
outsl
in
mov
sbb
or
cld
pop
mov
fsubrs
icebp
push
cld
jecxz
nop
loopne
stc
out
and
inc
inc
xchg
push
cmp
mov
or
or
filds
iret
push
in
jns
mov
es
insl
pop
ds
push
add
leave
insb
hlt
cmp
sbb
test
dec
rcll
jmp
ja
cmpsl
xlat
pop
push
mov
mov
mov
add
outsb
xor
rcl
push
movsl
sub
cmp
push
push
in
inc
ret
bound
clc
cwtl
cwtl
movl
in
sti
out
mov
sub
and
xchg
mov
insb
sbb
add
test
jg
mov
mov
mov
lea
ljmp
mov
lahf
mov
cmp
adcb
jae
or
xor
sti
jg
out
fists
ja
jae
mov
add
cs
dec
fstpl
pop
dec
sub
adc
push
imul
lock
std
inc
adc
and
add
mov
mov
ret
cld
sti
mov
cmpsl
stc
jmp
cs
add
and
jmp
and
mov
imul
mov
jecxz
aaa
in
ret
daa
adc
cs
aaa
loopne
xchg
xchg
jecxz
xor
xchg
loope
and
cld
xor
mov
sti
add
jns
push
shll
aas
sbb
cmp
inc
popa
icebp
ds
movsl
stos
dec
or
jg
and
test
fwait
and
and
mov
mov
ss
dec
sti
fwait
xchg
sbb
and
fildll
jmp
mulb
or
pushf
loopne
mov
pop
repnz
pop
adc
lea
dec
mov
test
adc
mov
xlat
xchg
jno
sub
mov
jns
inc
cmpsb
dec
jg
jp
stos
js
addr16
mov
and
shrb
adc
lea
arpl
bound
iret
stos
bnd
ffree
fs
stos
jg
fstl
into
in
mov
in
ss
pop
mov
out
xchg
push
arpl
add
dec
fs
loop
les
pop
jae
outsl
lret
pop
cld
jbe
jp
andb
pushl
fcomp
pop
imul
popf
xlat
cmp
imul
sbb
out
and
loop
cmp
sbb
pop
inc
fwait
pop
adc
das
aam
fbstp
loopne
fisubs
mov
ljmp
cmc
ffree
mov
sbb
dec
fwait
jge
mov
xchg
bound
inc
in
std
fsubl
ja
out
or
cmp
into
aas
jp
sub
test
outsl
mov
inc
add
icebp
lock
cmc
ljmp
bound
out
adc
pop
jmp
adc
cwtl
clc
pop
faddl
nop
pop
mov
fcompl
clc
popf
cmp
and
dec
jns
or
jge
int
mov
jmp
jbe
stos
in
pop
sar
add
mov
xchg
repnz
cmp
testb
jmp
popf
jne
cmp
ja
jl
es
xchg
shrb
adc
pop
pop
mov
sbb
icebp
xchg
push
in
icebp
cmp
jb
test
mov
stos
int3
repz
imul
mov
dec
sub
xchg
and
lods
lds
pusha
ss
mov
sbb
push
aam
jmp
push
cltd
push
stos
or
mov
jmp
cmp
cld
push
mov
mov
mov
add
lret
xchg
mov
jo
push
sub
test
cmpsl
mov
cmp
mov
sub
out
dec
add
sub
mov
jmp
mov
cld
ja
int
and
mov
mov
nop
out
and
and
push
add
imul
push
mov
mov
adc
mov
push
cmpsb
mov
lea
mov
or
inc
sahf
xor
in
je
cmp
iret
in
dec
jns
or
sbb
ror
int3
mov
push
int
add
les
loop
sub
stos
xchg
aas
inc
inc
inc
mov
mov
js
stos
scas
dec
es
inc
mov
pushf
sbb
add
pop
xchg
out
xchg
pushf
clc
jg
mov
shll
mov
cmp
scas
mov
or
ljmp
mov
dec
push
xchg
std
cmpsb
popa
fcmove
mov
mov
movsb
nop
adc
aaa
pushf
sbb
push
cmp
mov
jge
sbb
mov
sbb
lea
test
outsb
or
stc
inc
dec
xor
push
xor
cmc
movsl
add
not
fiaddl
dec
cmp
lods
dec
into
ffreep
sti
stos
cld
adc
cmp
mov
xchg
lea
xchg
sub
pushf
clc
fidivrs
cli
and
cmpl
mov
ja
mov
sbb
lea
jb
popa
jge
into
cmp
pop
jp
fmuls
out
pop
mov
shlb
push
inc
sbb
cli
popf
int
xor
dec
mov
call
cmpsb
fcoml
fmulp
pop
les
inc
stos
es
sbb
stos
mov
push
stc
arpl
fmull
add
bound
xor
aad
inc
mov
cmp
je
push
das
pop
ficompl
add
jnp
mov
xor
out
adc
and
aam
jp
aas
jae
ja
fcoml
mov
jne
pop
int
jecxz
xchg
test
mov
popa
xchg
mov
inc
sbb
pop
cmp
lret
bound
cwtl
mov
mov
pusha
fwait
and
mov
stos
mov
js
mov
stc
and
sahf
mov
adc
lcall
daa
sbb
fistpl
out
aam
push
adc
or
pusha
push
xchg
stc
out
push
inc
in
pop
mov
arpl
in
outsl
jp
aam
fxam
jmp
rsqrtps
mov
pop
jb
or
sbb
sub
add
pop
stos
cmp
lods
inc
xchg
jno
loopne
mov
adc
sahf
dec
jo
js
fcmovu
enter
jg
adc
mov
fisubrs
lds
gs
pop
mov
ja
nop
fsub
scas
mov
dec
inc
xchg
cwtl
arpl
mov
mull
mull
cli
andl
push
aas
jns
daa
adc
xchg
es
fwait
lcall
push
mov
mov
and
daa
add
out
and
pop
imul
shr
loopne
addr16
enter
add
push
in
mov
fisubrl
movsl
jle
and
jmp
fs
lahf
pop
idivb
in
sbb
sub
in
push
icebp
pop
lds
lods
mov
xchg
cmp
dec
mov
in
dec
jns
add
mov
in
sbb
jmp
push
test
nop/reserved
or
shlb
inc
repz
mov
insl
adc
xlat
out
or
push
das
cmp
push
jb
xor
adc
fisttpll
bound
loop
in
ficoml
loop
sbb
shll
sbb
add
lcall
shrl
inc
mov
mov
fwait
sti
cli
mov
inc
cmp
pop
add
cli
int3
aas
out
xchg
aas
iret
js
out
and
test
cld
shll
sbb
pushf
dec
xchg
sarl
inc
dec
push
jbe
sti
or
pop
adcl
mov
test
insb
andb
inc
mov
lret
push
inc
add
loope
daa
and
sbb
lahf
inc
mov
jne
ss
jecxz
xor
mov
add
push
test
xchg
mov
adc
push
inc
hlt
pop
add
dec
stos
aad
or
shrl
inc
and
js
mov
sbb
sbb
pop
pop
fcmovb
cmp
dec
push
mov
out
loopne
ja
mov
das
clc
cmpsb
adcl
test
pop
ss
jmp
mov
fdivrs
les
sub
sbb
mov
out
mov
push
inc
repnz
pop
sti
ds
jecxz
jbe
and
push
sbb
push
pop
scas
jno
iret
lods
adc
sbb
push
xor
lods
arpl
lea
addr16
scas
and
mov
sarl
stos
inc
cmpsl
pop
popf
xchg
int3
or
lahf
pop
jae
sbb
popa
out
mov
in
out
mov
nop
mov
push
daa
or
icebp
mov
scas
jle
mov
nop
mov
adcb
pushf
xchg
lret
sub
jmp
push
pop
das
mov
rcrl
mov
jno
pop
arpl
jo
xchg
mov
and
loop
mov
leave
shr
jmp
add
loop
addr16
dec
iret
inc
ja
pop
inc
xor
pop
pop
bound
push
mov
cwtl
das
gs
pusha
dec
xor
lds
stos
call
data16
aas
jge
shr
mov
pop
or
orb
mov
adc
or
fisubl
add
xchg
sub
sub
mov
jge
in
test
imul
jb
mov
xchg
push
ret
ret
cmpsb
popf
lds
lds
mov
jnp
cmp
pushf
push
adc
movsb
pop
pop
push
cmpl
into
lcall
sub
cs
addl
std
hlt
jns
mov
xchg
jno
or
int3
sbb
rol
and
sub
xchg
or
mov
pop
xchg
mov
pop
je
in
add
mov
movsl
xorl
mov
jns
sbb
mull
xchg
rcl
sbb
add
cwtl
jns
mov
iret
ud2
xor
xchg
jp
inc
bound
shlb
or
pop
jg
xlat
pop
aas
hlt
bound
lea
cli
dec
inc
mov
and
iret
sub
cmp
jp
rcrb
and
aaa
movsb
mov
mov
sub
js
cmp
sahf
dec
xor
mov
and
jmp
push
ret
or
in
adc
loope
loope
mov
cmp
mov
mov
pop
jl
sbb
xorb
adc
idivb
out
mov
idivb
pushl
push
pushf
adc
cli
into
adc
aas
adc
fcoml
mov
dec
lea
pop
ja
jmp
jl
pop
mov
mov
adc
data16
or
add
sub
adc
out
nop
in
mov
adc
and
add
dec
mov
rcrl
outsb
inc
cmpl
mov
sub
mov
and
rol
movsb
pop
lcall
fcmovnbe
ljmp
fidivrl
int3
fldcw
mov
iret
and
add
scas
xchg
pop
shl
jbe
shll
inc
fildll
aaa
sbb
repz
jl
outsb
pusha
pop
ss
call
mov
jge
jp
mov
aad
ja
and
mov
stos
iretw
dec
stos
xchg
clc
insl
sub
scas
push
dec
in
jne
push
mov
fldenv
movsl
maxps
cmp
lret
pop
aas
test
xchg
jge
add
add
jle
mov
mov
imul
pop
and
les
jbe
cmpsl
call
nop
into
lods
cwtl
mov
xlat
loop
and
jl
loope
xchg
fwait
cs
ja
pop
ret
loopne,pn
inc
imulb
add
and
in
mov
outsb
pop
je
and
inc
loopne
loopne
sti
xchg
inc
decb
lret
pushf
aad
pusha
xchg
insb
ss
lock
in
pop
jl
jmp
mov
fsubl
pop
sub
lock
inc
imul
mov
pop
aaa
gs
jmp
xchg
sub
hlt
daa
popa
inc
cltd
in
cmp
outsb
repz
pop
or
mov
stos
push
push
mov
dec
sahf
push
imul
sbb
fstpl
orb
mov
mov
sahf
pushf
ret
pop
test
jnp
fcoms
notl
leave
mov
lds
mov
je
cmp
outsl
je
push
mov
jae
jecxz
scas
inc
cmp
fisubl
rcrl
add
iret
ret
jae
xor
dec
push
jne
xchg
outsl
and
cltd
mov
out
pushf
pop
cmp
fbld
dec
adc
pop
or
ds
sbb
movsl
or
rcr
out
arpl
cs
ror
test
mov
repz
cmpsb
clc
jbe
inc
fsubs
adcb
jnp
adc
mov
in
sbb
mov
nop
notl
mov
xchg
popa
orl
cmp
or
int3
loope
negl
jne
or
aaa
push
aaa
subl
mov
adc
adc
push
fistps
jo
xchg
dec
jb
pusha
cs
icebp
loop
sub
add
faddl
fsubp
dec
and
cmp
mov
cli
dec
pop
push
push
or
xchg
mov
push
fstpt
scas
dec
imul
jnp
js
lret
test
mov
inc
sbb
sbb
pop
stos
cmpsl
cmc
inc
jl
mov
xor
je
pop
xor
test
mov
int
outsl
out
fs
into
pop
fs
icebp
nop
pop
daa
loopne
ret
and
xchg
or
xor
adc
dec
mov
and
dec
cmp
test
inc
push
jnp
arpl
stos
aas
cmp
cltd
hlt
insb
cltd
fisttpll
sbb
lods
cltd
ret
in
mov
pop
frstor
incl
jle
test
ljmp
adc
inc
js
jae
cmc
imul
aam
dec
sub
call
lods
push
jne
das
fdivs
aas
inc
push
test
call
sub
aam
aam
inc
loopne
jb
xor
adc
xor
test
es
inc
mov
mov
or
iret
push
adc
jo
mov
fistpl
cmpsl
sti
add
rcl
mov
lods
daa
imul
dec
insl
vdivpd
nop
cmp
icebp
subl
jmp
imul
aas
cmp
adc
stos
stos
out
or
call
mov
inc
idiv
mov
lods
fistpll
clc
xchg
jle
xor
fstpl
cmp
iret
sbb
test
fmul
cwtl
outsb
incb
insl
add
xchg
cmp
cmp
rorb
fmuls
pop
xor
and
inc
push
loope
out
sar
push
cltd
xchg
lods
dec
lret
imul
add
test
movsl
adc
xchg
push
cmc
fwait
inc
mov
push
xchg
jle
xchg
movsl
push
xor
dec
sbb
fistl
jl
push
xor
nop
test
dec
xchg
out
mov
xchg
mov
cld
jl
lock
mov
jp
cmpsl
pop
cmp
stos
test
cmpsl
clc
jmp
push
orb
sub
and
cltd
mov
addr16
xchg
ret
aam
sub
push
or
sbb
andb
dec
sbb
cmp
or
sbb
int
aas
sbb
jns
jae
popa
addr16
sbb
out
mov
cmp
mov
cmp
add
loop
ficomps
xor
push
mov
repnz
xchg
dec
inc
add
sbb
xchg
cmp
movb
jb
testb
popa
add
mov
add
dec
dec
or
test
xchg
push
call
lcall
mov
mov
cmp
push
sbb
xchg
lcall
fadds
jns
or
jle
addl
adc
mov
dec
movsb
cmp
popf
xchg
ror
stos
adc
loope
mov
aaa
push
add
rcll
rcrb
adc
pop
and
push
data16
fwait
jecxz
inc
andl
addb
xor
lret
fwait
jbe
decb
lcall
push
scas
and
inc
mov
and
add
ror
cmp
mov
aaa
inc
cmp
dec
fiadds
dec
test
jp
clc
movsb
jae
mov
mov
sub
mov
or
xor
mov
mov
mov
add
inc
lahf
jo
gs
cltd
sbb
push
in
inc
fisttpll
ds
sarl
pushf
inc
repz
adc
xor
push
lods
sbb
xchg
xchg
daa
dec
xor
std
xchg
mov
in
pop
out
sub
xor
out
push
dec
pop
orl
adc
fistpll
fisubl
cli
jecxz
cli
push
push
mov
sbbb
aas
adc
cmp
ja
pop
jnp
call
mov
hlt
mov
pop
sbb
movsb
notb
scas
rolb
mov
pop
mov
enter
add
into
sbb
int3
pop
mov
in
xchg
stc
imull
mov
xor
fildl
add
push
je
jo
and
xchg
sub
cmp
rcrb
jg
ljmp
jge
push
xor
sbb
rcll
lock
out
cmc
iret
js
popl
adc
or
in
xchg
mov
xchg
fistl
mov
cmp
test
or
scas
das
push
mov
pop
adc
jmp
inc
mov
adc
sbb
lea
push
icebp
push
jb
or
mov
orl
sarb
xchg
xchg
push
aam
push
lock
mov
pop
fldl
cmp
cltd
add
xor
cmpsl
mov
mov
imul
loop
loope
fdivs
enter
push
repz
mov
in
and
sbb
loopne
jne
out
repz
sub
aad
cs
stos
dec
pop
mov
in
or
mov
pushf
mov
bswap
test
and
xor
cmpsl
lret
lcall
jmp
xor
stos
cltd
insb
lock
mov
sbb
xchg
sbb
sbb
sbb
mov
jnp
rorl
push
lcall
xchg
pop
pop
lds
nop
pop
pop
cmp
mov
sbb
adc
pop
inc
mov
jns
scas
pop
movb
sbb
add
sbb
jl
xchg
xor
dec
push
mov
mov
and
push
dec
jb
cmpb
lahf
adc
cltd
std
ret
or
insb
pop
add
lahf
fldt
hlt
inc
mov
repz
xchg
je
repnz
push
shr
ja
sbb
imul
lods
repnz
or
ret
push
mov
int
ret
push
daa
push
js
sti
xchg
sbbb
test
inc
rcll
inc
je
push
mov
xor
cmp
cmc
sub
dec
sub
sbb
hlt
stos
or
arpl
lret
xlat
pop
pop
ror
cwtl
add
mov
mov
xor
cs
and
rorl
xchg
cmp
jp
lods
repz
daa
pop
mov
push
jp
mov
in
mov
xchg
movsl
ja
mov
push
cld
pop
adc
fstps
nop
xor
mov
pop
or
scas
adcb
xchg
inc
lret
mov
inc
movsl
pop
lcall
sub
incb
cmp
fisubrs
inc
and
xor
mov
dec
mov
popa
add
shll
shr
xlat
push
iret
cmp
mov
repz
and
sarb
mov
mov
sbb
and
stc
inc
call
mov
fsubr
into
pushf
dec
int
outsl
jae
xchg
xchg
adc
pop
ja
sbb
pop
jnp
dec
jl
stos
jecxz
hlt
rorl
cmp
fidivrl
xchg
int3
lar
jb
pop
fwait
lret
jl
xlat
mov
adc
inc
mov
clc
sti
jp,pt
or
sub
mov
mov
rorb
mov
or
ret
aaa
sbb
and
pop
inc
loope
outsl
cmc
pop
inc
icebp
jns
ficomps
jbe
push
mov
das
fdivs
add
lock
hlt
ja
jo
sbb
xor
xor
inc
mov
aaa
xchg
dec
aad
lret
es
cmp
or
js
outsl
inc
inc
push
add
loopne
test
mov
inc
mov
fadds
int3
fstpl
push
jns
icebp
xor
push
xor
pusha
ss
movsl
div
or
notl
jne
or
pop
pop
jne
ss
daa
xor
repnz
xchg
pop
add
daa
and
mov
adc
rorl
mov
push
or
pop
out
iret
out
inc
jp
sbb
pxor
jecxz
pop
mov
cs
mov
mov
test
call
daa
cmc
cli
sbb
adc
sub
inc
ss
imul
jmp
pop
lods
fisttpl
out
sub
dec
sahf
mov
jle
dec
and
mov
dec
jge
cli
stc
aam
fmul
lret
jl
pop
fs
icebp
or
sub
and
std
icebp
jmpw
cmp
gs
xor
scas
push
jne
mov
std
or
fsub
inc
inc
add
dec
cmpb
jb
push
push
push
pop
stos
lds
jbe
sbb
push
sti
jns
mov
icebp
xchg
lea
xchg
das
mov
and
push
jne
dec
fstps
loop
mov
add
stos
stos
sub
push
xchg
push
test
test
sub
sbbl
or
and
test
hlt
int3
outsl
cmpsl
cld
fidivs
sub
test
movsb
pop
mov
out
or
xchg
and
xchg
test
aam
stc
mov
dec
xchg
ret
lcall
cs
jno
or
je
fs
pop
push
xchg
aas
imul
add
loope
aas
or
xchg
hlt
clc
push
cmp
pop
jbe
bnd
test
in
fsubrl
mov
push
dec
xlat
jb
jl
mov
sub
lea
roll
sbbb
inc
add
jbe
or
andb
lahf
mov
ss
sbb
popf
cwtl
mov
lds
adc
leave
es
ds
pop
xchg
xchg
push
sti
int
fstl
push
enter
repnz
adc
inc
push
push
movsl
cmc
add
dec
inc
pop
sbb
push
pop
xor
push
jo
jne
scas
into
xlat
push
dec
or
cmpsb
rorl
int3
inc
in
xchg
adcb
pop
push
sub
and
adc
push
jecxz
xor
add
ret
push
or
mov
jnp
inc
clc
repz
add
xchg
sti
cmp
push
lret
decb
movsb
sub
shl
adc
ljmp
fwait
mov
and
cmp
push
mov
filds
dec
popf
mov
push
dec
or
and
lock
pop
inc
addl
mov
lods
mov
out
dec
nop
aam
jno
pop
daa
mov
loopne
ret
mov
push
movsl
mov
shrl
loopne
dec
in
roll
ret
les
int3
rclb
jp
out
rclb
xchg
ss
scas
ds
bound
mov
jae
aam
or
ret
scas
cld
cltd
xor
adc
dec
repz
dec
or
or
jecxz
andb
jmp
xchg
rcl
jne
push
pop
xchg
ja
enter
aad
adc
cli
std
rclb
sbb
xchg
in
decb
int3
cltd
ret
cmp
or
jae
or
sysexit
pop
nop
andb
test
xor
and
jae
fwait
call
mov
stc
ja
push
jg
jb
ret
sub
std
xor
xor
mov
add
xchg
hlt
js
rclb
jl
stos
pop
add
dec
fbstp
push
xchg
in
popf
inc
push
mov
iret
pop
mov
push
adc
ret
iret
add
stos
inc
out
pop
mov
out
jecxz
ror
xor
inc
mov
xchg
mov
xchg
push
mov
lahf
ss
pop
fwait
jnp
pop
xor
add
inc
je,pn
push
mov
into
mov
mov
and
aam
jmp
leave
and
mov
adc
dec
sub
xchg
lock
iret
jns
pop
in
push
sbb
xchg
sbb
std
and
nop
stos
sbb
jns
fbstp
inc
and
stos
pop
inc
mov
push
xchg
inc
loope
insl
inc
or
fwait
sbb
add
jnp
sbb
adc
ja
aam
daa
adc
lret
cmp
sarl
ret
jnp
aad
aaa
pop
leave
adc
cmpsl
fwait
clc
jb
rorb
jl
lret
jge
sbb
mov
movsl
sub
inc
mov
mov
fld
cmpsl
andl
cmp
mov
imul
in
ret
and
cli
xchg
pop
jmp
xor
stos
mov
lahf
repz
cmc
push
mov
cs
jge
fwait
fwait
and
adc
push
shll
popf
inc
mov
stos
sbb
loopne
push
in
inc
sub
scas
fwait
cmp
sbb
ja
cmpsl
dec
jnp
or
out
pop
dec
push
stos
inc
mov
cmpsl
sahf
sub
mov
sbb
push
cmp
jge
into
jge
mov
mov
xor
shll
jp
dec
jmp
jns
dec
daa
mov
jne
inc
into
xchg
stc
test
decb
xchg
mov
adc
icebp
cmp
inc
int3
or
stos
cmp
pop
mov
in
aaa
std
inc
push
aad
ja
mov
pop
nop
clc
jbe
inc
scas
add
js
mov
inc
cld
das
in
mov
es
dec
daa
jl
icebp
mov
xchg
pop
pop
pop
fsubp
stc
mov
cmp
or
inc
xchg
mov
xor
cmp
pop
mov
mov
frstor
shrl
jle
scas
push
jns
xchg
and
jbe
jnp
cwtl
xchg
bound
rcl
mov
jmp
fstl
scas
add
outsb
cmp
jl
aam
pop
pop
lods
ret
in
jg
sbbb
xor
or
or
adc
lcall
push
test
hlt
cmpsb
lcall
adc
daa
pop
jo
dec
popa
pop
xchg
int
add
cmp
jno
sbb
sbb
pop
popa
mov
push
adc
pop
or
pop
jmp
dec
dec
push
out
push
mov
in
pop
push
mov
into
dec
xor
inc
mov
dec
popa
ljmp
sbb
shlb
cmpsb
sbbb
cmp
xchg
in
push
xchg
into
or
andb
push
test
lods
push
vpminsw
mov
cs
mov
adc
xor
test
cs
in
sbb
lret
or
mov
and
cld
cld
lret
les
movsl
roll
xor
enter
inc
xor
xchg
mov
sbb
rclb
mov
aas
scas
dec
mov
jmp
xchg
jne
daa
shlb
iret
mov
sbb
outsl
imul
sub
shrl
pop
mov
sti
and
mov
mov
fisubrs
int
inc
fwait
dec
pop
hlt
fidivrs
inc
clc
ljmp
sahf
fs
in
pop
mov
sub
mov
push
repnz
inc
jnp
sbb
inc
jo
test
insl
xor
dec
mov
ja
int
sub
mov
jbe
push
cld
sti
jp
outsl
rorb
cmc
inc
push
out
push
aam
icebp
adc
cmc
gs
xchg
loopne
inc
xchg
mov
shll
pop
bound
aam
and
inc
xchg
clc
fiadds
nop
or
cmp
inc
scas
into
sbb
test
inc
mov
lret
incb
mov
mov
nop
daa
loop
insl
insl
insb
adc
inc
push
es
repnz
imul
xchg
gs
stos
int3
mov
fcmove
mov
ret
mov
push
cli
fwait
in
jg
lret
call
test
iret
mov
push
lods
imul
scas
or
sahf
stos
sbb
popa
dec
inc
dec
xchg
dec
mov
sub
das
ss
and
sub
aaa
lret
jmp
sbb
cmp
pop
jb
mov
out
fwait
and
or
xlat
sbb
xchg
add
lahf
mov
cmpsb
lret
mov
pop
or
pop
lds
pop
gs
addb
loopne
dec
outsb
out
pop
sub
sub
pop
lds
inc
cmp
ja
shll
jb
js
in
ljmp
adc
cli
loop
inc
int3
cmpsb
out
inc
cs
test
push
xlat
mov
fsubr
inc
add
xchg
pusha
mov
imul
jo
dec
cwtl
stos
insl
aaa
jmp
mov
lahf
or
xchg
mov
imul
add
and
inc
jmp
inc
scas
stc
in
lods
fistps
loope
pop
jmp
inc
cmp
insl
xor
mov
push
int3
imul
sbb
or
test
out
int3
pop
jge
call
mov
lret
lods
jge
aad
addl
jmp
int3
cmp
icebp
fdivrl
daa
pop
movsb
add
mov
sub
jb
adc
scas
fbstp
xchg
inc
jmp
jb
pushf
add
std
cld
add
pop
enter
in
cld
mov
sti
mov
jecxz
adc
cmp
cmp
cli
cmp
faddp
pushf
inc
dec
mov
jp
cmc
test
pop
flds
ret
jb
inc
fs
int
cmp
dec
fidivs
jg
and
mov
and
mov
adc
pop
sti
rclb
mov
jo
adc
ret
mov
jne
pop
xlat
push
xchg
sti
push
sub
mov
cmpsl
loopne
ljmp
sub
dec
cmp
divl
hlt
subb
lds
je
aas
jo
test
jnp
dec
test
ljmp
inc
mov
jl
jbe
ss
icebp
movsb
sub
scas
xchg
pusha
outsl
fwait
arpl
or
mov
xor
mov
jae
or
into
push
adc
gs
ret
pushf
mov
cmp
gs
xchg
jae
fcomps
ljmp
into
dec
pop
in
sub
push
mov
push
jmp
daa
add
in
adc
cs
in
fisttpll
js
adc
cli
pop
movsb
hlt
popa
std
sub
xchg
cmp
or
out
push
lcall
add
push
xchg
push
xchg
out
mov
dec
ficoml
dec
shlb
jl
ss
push
lods
and
fdivrs
or
push
sub
clc
push
stos
popf
xlat
xchg
jo
cmp
in
mov
or
cmp
pop
rol
mov
sahf
and
pop
cmp
or
cltd
cli
sub
xorl
and
inc
loop
sbb
std
adc
pop
and
sbb
dec
or
mov
add
push
out
je
out
in
imul
add
loopne
push
movsl
pcmpeqd
sub
jmp
xor
ja
aad
mov
aam
mov
inc
repnz
xor
hlt
jne
inc
ror
cmpsl
scas
jb
fdivrl
test
xor
in
jb
push
sbb
aaa
ret
mov
outsb
xchg
stc
cmp
add
test
sub
mov
out
aad
mov
sub
clc
aas
dec
mov
mov
out
cmc
xchg
in
sub
sbb
dec
xorl
xchg
mov
push
outsb
in
in
orl
mov
fstl
popa
data16
xor
xchg
insl
rorb
addb
scas
push
paddsb
xor
js
les
scas
outsb
stos
pusha
sbbb
bound
mov
jge
push
push
mov
xor
lock
in
dec
pop
and
ds
cld
roll
fisubrs
pop
pop
je
and
movsl
bnd
std
sbb
sub
jl
daa
xor
out
adc
testl
push
cmp
mov
movsb
mov
rcrl
jle
dec
add
imul
pop
xor
ficoms
loopne
ds
pop
daa
out
or
xorb
rorb
shlb
cwtl
mov
out
repz
inc
cmp
stos
and
in
xchg
data16
pushf
outsl
lret
mov
add
repnz
out
fs
jnp
loopne
or
nop
popa
lods
push
adc
test
stos
repz
popl
xor
xchg
cmp
lds
fiaddl
repz
imull
rcll
and
xor
insl
in
xchg
sbb
ja
mov
int
xor
in
adc
push
loop
xchg
in
jp
aas
repnz
sbb
call
add
bound
push
inc
adc
sbb
fsubs
mov
mov
xchg
push
xchg
jmp
fildll
sub
mov
jl
or
adc
pop
aad
cmp
inc
std
sub
sti
cmc
psubusb
push
loope
ret
ds
in
mov
xor
mov
repnz
addr16
mov
out
roll
stos
xlat
sbb
push
lods
shrb
sar
outsl
inc
fstpt
xchg
aad
shll
or
dec
shll
sbb
aad
mov
dec
sub
xor
insb
dec
mov
xor
ds
mov
mov
outsl
test
jns
cwtl
stos
push
rcll
shrb
mov
aad
int
push
stc
jg
aad
jnp
repnz
shll
rclb
push
jae
jmp
les
std
push
xchg
mov
pusha
outsl
and
mov
andl
sub
movsb
pop
push
out
data16
pushf
adc
ja
pop
xchg
in
xor
adc
loopne
jb
je
addb
add
in
xchg
out
and
xor
dec
dec
shlb
add
mov
out
cmp
cmp
pop
sahf
mov
push
xorb
mov
in
jmp
les
sbb
ret
fwait
scas
xchg
push
shl
icebp
in
push
jp
data16
push
mov
or
imul
jl
rcll
sub
in
in
adc
and
ret
push
push
push
fcomip
shll
pop
in
pusha
mov
push
rorb
dec
mov
xor
dec
shlb
push
sti
inc
add
xchg
push
ret
pop
pop
mov
clc
sub
call
push
inc
out
dec
sbb
mov
loope
cmpsb
xor
and
dec
mov
mov
sahf
mov
xchg
jbe
icebp
es
ret
add
ds
sbb
cmp
adc
dec
adc
addb
addr16
mov
add
inc
jb
mov
loopne
lods
loope
shrb
mov
lods
push
ds
pop
xor
test
loope,pn
out
arpl
push
cmpsl
and
std
and
movswl
or
stos
fwait
jbe
aam
push
popa
jecxz
mov
dec
out
mov
jl
imul
ljmp
fprem
inc
fucomp
outsb
sbb
fdivl
lahf
adc
xor
push
mov
or
orl
insl
pop
out
xchg
jp
mov
sarb
ret
xchg
in
movsl
roll
mov
cmpsb
cmp
xor
cld
divb
fcompl
in
jb
cld
cli
mov
lcall
xchg
mov
aam
aad
stc
shll
aam
pop
jle
sbb
adc
enter
pop
ret
push
fsubrl
imull
jl
bound
jae
push
xor
mov
jne
clc
repz
mov
push
fnsave
xlat
aad
jno
or
jns
lds
imull
xor
lahf
in
cmpsl
jne
cmc
xor
mov
xchg
loopne
jecxz
jl
fcoms
fwait
pop
xchg
sarl
mov
test
mov
push
in
test
xchg
and
inc
loope
lret
xchg
mov
int3
xchg
or
pushf
and
add
loopne
dec
cwtl
dec
lahf
mov
dec
test
inc
push
ret
lcall
pop
xlat
ficompl
push
idiv
pusha
lods
fisubl
sbb
mov
enter
sub
popa
xchg
pop
adc
call
in
sbb
cmpsl
inc
mov
int3
bound
fcmovnb
jl
inc
mov
inc
ljmp
jecxz
and
std
in
cmp
enter
mov
in
mov
and
jle
test
sub
rorb
xchg
and
cmp
xchg
roll
sbb
shrl
push
jg
ret
mov
xorb
and
push
std
and
stos
jb
pop
and
cli
mov
sahf
idivb
pop
shlb
cli
ja
fidivrs
lods
syscall
push
mov
test
adc
mov
sub
mov
jg
jle
stos
dec
testb
js
hlt
outsb
roll
in
vmwrite
decl
lahf
or
je
fldl
fucomip
fimull
repz
les
push
std
add
inc
inc
inc
pop
outsl
push
jnp
sti
xchg
xor
xor
stos
cmp
cmp
cmp
cltd
loope
lock
add
jecxz
sbb
cltd
dec
sbb
movsb
push
cmp
roll
or
xlat
shr
and
mov
and
xor
insb
gs
lret
imul
mov
push
pop
lcall
or
or
inc
pop
std
cmp
mov
popf
addr16
mov
hlt
jge
shlb
clc
push
jno
jl
in
xor
pushf
leave
push
cmpsb
or
ja
adc
jae
push
outsb
add
and
pop
push
mov
mov
mov
cs
adc
sbb
sbb
mov
pop
add
pop
cltd
rol
or
jo
rcll
sarb
fstpt
lds
fdivrl
add
jo
push
into
mov
sbb
ltr
jno
addr16
jb
sbb
lock
stc
adc
mov
cld
in
aas
push
inc
pcmpeqb
rcrl
xor
psubw
call
insb
push
inc
and
je
pop
xchg
mov
ja
push
mov
sub
xor
and
jmp
mov
aam
pushf
loop
sarb
cmp
xchg
data16
cmp
mov
pop
mov
push
sbb
sub
sti
sbb
pop
cmp
xchg
mov
int3
aaa
jbe
dec
dec
test
fs
adc
cmp
int
inc
sub
adc
lret
fcmovne
in
cli
inc
jg
cmpsl
pop
arpl
and
shlb
add
xchg
xor
fmuls
stos
cmp
push
cmp
cmp
pop
dec
dec
xchg
fidivs
movsb
sub
ret
jo
movsl
mov
mov
fsubs
pushf
daa
dec
roll
xchg
cmc
xchg
push
stc
push
in
lods
aaa
inc
jmp
arpl
repz
ret
cwtl
sbb
shlb
nop
mov
push
adc
xchg
scas
pop
mov
inc
xchg
repnz
pusha
aad
fwait
mov
inc
popa
inc
fucomip
adc
push
mov
repnz
sbb
lods
cld
push
push
jecxz
push
fs
jbe
dec
jno
pop
ljmp
or
pop
and
loop
adc
pop
mov
fldl
bound
sbb
or
sti
aam
sbb
and
ds
insb
stc
inc
cmp
loope
mov
scas
loop
xor
repnz
jmp
lods
xchg
aas
dec
fwait
xor
fsubrl
jmp
incb
sbb
mov
xchg
jg
fwait
ds
sub
in
loopne
push
pop
jle
add
fbstp
push
mov
dec
jae
loop
mov
pushl
inc
push
dec
mov
push
cmp
sahf
inc
jl
sub
mov
xchg
xor
add
xor
pop
das
sarb
loop
pop
stos
ret
push
out
sbbb
jns
clc
adc
pop
hlt
outsl
je
mov
repz
push
sub
leave
mov
pop
cmpsl
shrl
sbb
mov
fdiv
mov
stos
jbe
mov
scas
inc
mov
xchg
or
ljmp
gs
scas
add
nop
adc
ja
movsb
adc
scas
mov
xchg
xchg
adc
lock
lret
push
pop
addb
out
pop
cs
cwtl
std
dec
sete
ret
and
test
scas
xchg
jbe
push
jne
add
fdiv
int3
xchg
jl
test
cmp
pop
rcr
push
insl
cmpsb
inc
jnp
lret
sbb
data16
push
ret
cwtl
mov
jge
mov
or
and
dec
add
mov
lahf
mov
inc
mov
adc
insl
mov
lret
outsb
xchg
add
xchg
jl
ret
enter
daa
fstpt
rclb
jge
aaa
cmpsl
scas
sub
and
outsb
fwait
ret
cmpb
or
add
out
adc
sbb
clc
out
test
cmc
lods
sub
outsb
mov
mov
cmc
fsubrs
and
push
inc
js
movl
hlt
or
push
cmp
data16
fcmovnb
iret
fcos
cmp
push
gs
and
loopne
dec
subl
repz
sbb
aam
dec
stos
sti
fs
sbb
cmp
push
fdivrl
pop
sbb
dec
pop
xchg
dec
jecxz
jmp
xor
mov
sbb
ljmp
out
dec
ljmp
repz
push
lcall
fsubl
lea
sahf
daa
fcoml
xchg
xchg
dec
into
cli
push
idivb
xchg
jmp
mov
pushf
jg
jnp
movl
and
test
fistpl
jp
jl
les
inc
push
imul
add
dec
lcall
cwtl
adc
mov
out
call
cld
jmp
mov
pop
nop
mov
pop
repz
pop
pop
ficomps
inc
into
adc
push
cmp
cmpsl
xchg
outsb
xor
repnz
dec
dec
pop
mov
ss
dec
das
movsb
jmp
jb
xchg
lods
mov
xchg
fcompl
movsl
inc
js
or
dec
and
ja
mov
inc
inc
xchg
xchg
sub
shrb
mov
jb
fists
xchg
stc
fildll
push
sub
cld
test
aas
xchg
cltd
sbb
or
jmp
fwait
cltd
adc
add
and
imull
imul
les
sub
lcall
jecxz
test
stc
adc
jmp
fimull
adc
jge
sahf
rorl
sub
sahf
out
test
adc
lds
push
in
xchg
jle
push
jmp
adc
std
out
push
sbb
cli
lahf
dec
jge
notl
int3
pushf
push
lods
pushf
insb
repnz
push
pop
fsub
push
cmc
jmp
ret
pop
pop
push
lahf
add
mov
mov
inc
nop
and
out
into
ljmp
xchg
inc
arpl
mov
mov
rolb
dec
cmp
shlb
cmp
mov
mov
out
scas
aad
add
sub
or
imul
cmp
or
pop
in
loopne
cli
push
inc
popf
inc
xchg
in
jno
mov
xchg
xchg
icebp
push
push
fildll
outsb
inc
das
dec
scas
lods
mov
jle
xchg
outsl
repnz
push
mov
or
les
or
fldl
adc
loope
inc
cmc
out
call
mov
adc
xchg
push
push
lcall
test
test
cmp
push
xchg
mov
inc
push
sub
out
mov
cmp
and
fadds
xor
daa
lds
or
aam
mov
daa
or
sub
mov
mov
adc
call
je
or
and
sub
js
mov
pop
lods
jle
std
jge
mov
and
out
xor
rcrl
adc
fldenv
cmpsb
dec
fs
fsubrp
inc
pop
pushf
lock
in
fmull
mov
add
mov
or
insl
dec
in
mov
movsb
dec
add
iret
jno
test
mov
mov
cli
xor
in
mov
das
mov
add
sbb
imul
scas
jb
lret
test
sub
lcall
popf
cmp
cld
and
jae
stos
cmp
dec
ljmp
test
dec
out
lods
imul
mov
mov
data16
insb
push
call
insb
clc
mov
pop
inc
test
shll
xchg
cmp
lret
stos
add
jno
and
popf
dec
push
sub
and
xlat
fimuls
scas
mov
push
int3
mov
and
jae
cli
addb
mov
repz
lods
pop
lods
adc
add
push
jo
and
xor
emms
add
inc
adc
xor
cmp
dec
negl
sbb
cmp
inc
push
adc
pop
stos
icebp
out
mov
or
popa
imul
mov
mov
xchg
add
das
cmp
xchg
jge
outsb
ljmp
ret
sub
mov
mov
out
sbb
push
inc
lret
ljmp
push
and
add
cltd
pop
roll
lock
xor
stc
cli
adc
fwait
sub
dec
bnd
aad
jp
insl
das
xchg
jmp
mov
sbb
sub
mov
jb
adc
leave
jmp
stos
jg
cmp
in
jae
das
xor
add
mov
in
fcom
pop
mov
lret
sbb
clc
xor
lock
push
int3
push
push
mov
jge,pt
fadds
or
dec
or
ljmp
xor
push
outsl
jo
dec
nop
xor
loopne
mov
cltd
out
fcomps
lret
sub
lret
cmpsb
popf
fstpl
cmp
jo
insb
add
int
mov
mov
mov
out
push
inc
adc
adc
lds
jge
leave
sub
mov
pop
adc
cmc
and
ja
xor
ja
add
mov
lods
mov
cpuid
add
lahf
leave
call
clc
orl
or
and
add
stc
mov
in
sbb
push
jecxz
dec
sub
mov
pop
pop
xor
in
cmp
dec
arpl
sti
push
addl
push
xchg
mov
push
int3
inc
adc
sub
int
inc
inc
mov
mov
mov
jae
lods
iret
movsl
ret
cmp
movsb
testb
daa
push
pop
es
mov
in
pop
sbb
push
xor
mov
jge
mov
popa
or
iret
cmp
pop
cltd
lods
mov
in
scas
pushf
out
mov
add
inc
jle
js
imul
pusha
leave
cltd
sti
outsb
mov
rorl
push
lret
lret
xor
mov
xor
or
jp
pop
sub
push
lahf
or
popf
in
jge
in
aas
movsl
xchg
test
jbe
int3
mov
call
pop
sub
pushf
addr16
insl
loopne
push
in
xchg
dec
lcall
icebp
lret
pop
xchg
sub
out
pop
jne
pop
ret
and
aad
jecxz
les
or
or
test
fwait
or
in
stc
xchg
out
dec
test
fwait
sub
mov
cmp
or
or
mov
xchg
ret
lods
mov
bound
outsl
add
cmp
jnp
mov
pop
and
adc
imul
or
notb
insl
mov
test
orl
jno
xor
mov
fsubs
int
push
cmp
lcall
repz
push
pop
xchg
cmc
pop
sbb
int
sub
xorl
repnz
pop
aad
ret
xchg
mov
aas
mov
push
or
mov
xor
mov
add
mov
xor
xchg
dec
sbb
ljmp
cmp
ja
cli
and
nop
push
jb
or
js
repz
daa
push
shrb
mov
mov
mov
fs
lods
call
lods
outsb
inc
xlat
outsl
or
push
addl
mov
and
adc
sub
mov
arpl
popf
mov
mov
lret
add
sub
insl
out
xor
and
test
cli
icebp
in
mov
ss
dec
dec
push
sub
adc
xchg
jns
in
fwait
or
pop
sbb
jb
or
push
enter
insb
jbe
xor
cmpsl
sbb
mov
pop
sbb
mov
lcall
sub
loope
pop
or
pop
mov
loopne
ret
mov
ja
mov
push
ljmp
inc
xchg
mov
inc
push
mov
jns
test
aaa
pushf
in
rcl
xchg
jle
push
stos
mov
adc
fisubs
aad
dec
ljmp
and
out
sahf
and
jl
imul
push
sub
jecxz
stos
push
inc
lahf
cs
ffreep
mov
add
adc
jae,pn
xchg
aad
dec
sub
pop
jns
add
inc
and
jge
es
cmp
insb
adc
push
sub
jno
sub
xchg
mov
sar
xor
xchg
jmp
sub
pop
mov
lods
nop
pop
ds
jnp
jae
sbb
adc
imul
and
cmc
fimuls
scas
xchg
push
jns
lcall
and
out
jno
mov
lods
or
sub
fidivrs
out
lea
shr
adc
xchg
icebp
mov
cwtl
add
add
mov
jg
pushf
fsub
push
sub
add
bound
pop
xor
repz
mov
push
nop
mov
jecxz
cmp
push
mov
out
xchg
jge
jae
popa
hlt
pop
sbb
jl
push
lds
inc
fsubp
xchg
dec
mov
out
fidivrs
js
pop
flds
nop
icebp
lea
inc
jle
fstl
in
sbb
dec
xchg
cli
sahf
push
sbb
iret
pop
mov
nop
cltd
movsb
and
ret
fldenv
sub
in
aas
repnz
imul
dec
xchg
cmpsb
cmp
mov
mov
jecxz
xor
lock
in
imull
out
int3
push
adc
ds
push
xor
jp
pop
lea
cmp
add
mov
pushf
xchg
xchg
and
adc
xchg
ds
pushl
mov
dec
and
imul
jno
jns
pop
lods
cmp
mov
dec
js
stos
icebp
shlb
fistpll
les
mov
aad
xchg
mov
xchg
sub
jp
lea
mov
dec
xchg
cmc
imul
lret
push
sub
xchg
js
inc
in
xor
mov
out
outsb
stos
adc
imul
test
imul
and
push
xchg
aad
into
jmp
push
sub
jno
aaa
xchg
or
jns
mov
xchg
and
cmp
sar
dec
xor
rol
mov
insl
pop
jmp
and
pop
jle
sbb
movsb
push
cltd
fmull
add
in
xchg
jbe
add
out
insb
mov
dec
fnstsw
addr16
adc
out
outsb
and
fsubr
fiadds
mov
sbb
lcall
jmp
inc
lret
adc
mov
xor
int
lock
dec
fstl
movb
add
sahf
inc
pop
jge,pn
in
or
xor
icebp
xor
pop
std
inc
xchg
pushf
jbe
jo
insl
cwtl
pushf
or
gs
mov
jae
or
lret
shlb
jae
sahf
stos
push
data16
insl
xor
mov
jg
jno
or
inc
push
dec
adc
jle
rorl
sahf
lret
mov
cli
scas
stos
mov
mov
push
push
movsl
mov
fidivrs
adc
pop
arpl
cmc
and
andl
or
fldenv
xchg
lods
out
cmc
sub
int
jo
rorb
pop
jmp
adc
addr16
jnp
mov
mov
or
gs
dec
cmc
dec
adc
and
stc
jo
icebp
mov
cmp
inc
daa
data16
lcall
ja,pt
dec
mov
sub
ret
mov
aam
das
insb
bound
mov
sbb
stos
inc
movb
fdivrs
divb
lods
in
lret
repnz
ljmp
fcomps
scas
ljmp
jmp
les
les
lea
xchg
mov
in
mov
and
inc
ret
std
mov
rcrb
jge
pop
subl
cs
push
pusha
pushf
and
insl
inc
or
fcoms
pusha
or
repz
loope
pop
jbe
jb
jmp
sti
lods
test
xor
sub
sahf
push
sub
mov
aam
jae
xor
ret
push
addr16
or
jle
lret
nop
scas
int3
push
adc
lods
push
cld
sti
insb
push
and
jl
into
push
mov
test
fidivs
call
out
add
clc
sbb
push
jmp
mov
adc
hlt
adc
pop
hlt
shl
mov
or
int3
push
stc
lcall
jge
mov
jno
out
call
xor
add
cmp
cmp
cmp
cli
cli
push
jb
xor
xchg
mov
ja
dec
mov
mov
daa
xchg
jb
mov
das
test
cltd
mov
mov
out
mov
sbbl
sbb
cmp
mov
mov
cmpl
test
mov
dec
xor
stos
xor
lods
push
arpl
inc
aam
sahf
mov
in
mov
repnz
mov
jge
cli
cmpsl
push
cmp
pop
and
in
and
insl
cmpsb
mov
ljmp
adc
sbb
add
cwtl
aas
int
jne
into
js
inc
gs
je
add
leave
add
cs
push
push
lds
pop
pop
nop
sarb
in
mov
cmpsb
lret
js
dec
pop
fistps
mov
jne
lret
jmp
push
pop
and
sub
repnz
pop
jmp
pusha
aaa
jge
add
inc
xor
or
in
mov
or
jl
loop
mov
mov
xor
pop
jle
xlat
sbb
fwait
imul
mov
lods
cmp
imul
sarb
mov
ja
and
inc
out
and
sub
ljmp
cld
jl
xor
inc
fcmovu
sbb
jmp
xchg
push
cmc
movb
repz
inc
pop
scas
insl
std
adc
pop
inc
fsubrl
adc
nop
jae
ret
mov
pop
jl
mov
aam
xor
inc
cmp
rcrl
inc
popf
stos
clc
jmp
mov
xor
push
into
xchg
scas
iret
pop
jg
les
dec
jmp
push
cmp
jle
pushf
dec
callw
add
mov
cmpsb
js
jnp
push
pop
hlt
cmp
pop
jbe
mov
inc
stos
cmp
pop
sbb
shll
dec
and
xlat
cmp
mov
xchg
xchg
insb
and
out
dec
jle
cmp
hlt
sarl
orb
xchg
arpl
aad
stc
cmp
outsl
popa
or
mov
xchg
mov
mov
dec
jle
outsl
stos
iret
test
fs
insb
mov
sub
popa
mov
sub
enter
lods
cmovbe
jno
fwait
mov
bound
iret
sti
xchg
call
and
mov
xor
or
out
push
xlat
nop
popa
popa
push
les
loope
adc
pop
iret
rcr
or
inc
and
fstpl
fwait
daa
ret
aad
sub
push
iret
pusha
test
mov
push
loopne
mov
inc
xor
mov
dec
push
aad
enter
cmpsl
aaa
xor
jbe
xchg
bound
lahf
mov
mov
sbb
push
xchg
sub
ss
bnd
stc
mov
mov
mov
inc
cmpsb
adc
sub
push
les
and
pop
pop
mov
xor
pop
mov
push
imul
mov
movsb
sbb
hlt
mov
in
leave
mov
cmp
psrad
cmp
lds
mov
les
adc
or
mov
lcall
inc
test
adc
push
es
mov
ret
inc
add
sbb
jp
mov
cmp
gs
lea
push
mov
sbb
jge
punpckhwd
popf
imul
mov
jle
out
outsb
push
cmp
jle
sub
cltd
and
jle
xchg
mov
sbb
jle
mov
int3
dec
inc
pop
pusha
hlt
nop
imul
jmp
pop
cmp
ss
xor
loope
jne
ret
stc
mov
fwait
lea
fcmovbe
push
xchg
in
sti
push
or
push
dec
das
ja
leave
shll
je
aaa
mov
mov
adc
ja
ss
lods
jae
js
test
mov
iret
jo
mov
hlt
sub
xor
pop
mov
mov
xchg
adc
mov
clc
gs
dec
test
cs
shl
testb
sti
leave
jae
mov
push
push
ret
sub
dec
mov
xchg
or
mov
call
sbb
rsm
pop
push
sbb
add
clc
add
mov
call
ds
sbb
cmpsl
mov
subb
pop
mov
call
icebp
insl
enter
push
repnz
or
add
es
mov
outsb
pop
addr16
sti
movsb
iret
jo
mov
lcall
lret
hlt
pop
imul
inc
mov
mov
mov
cli
movsb
mov
iret
mov
and
dec
sysret
out
push
pop
das
sti
fstl
fnstenv
test
fldcw
push
pop
inc
and
dec
lahf
inc
sbb
aad
shlb
jnp
dec
cmp
inc
jl
prefetch
aas
test
fmul
jno
or
inc
and
mov
cmp
lcall
jb
or
sbb
jnp
pop
shrb
cmp
shlb
loope
int
xchg
jge
jbe
mov
sbbb
addb
dec
stos
push
mov
clc
sti
add
insl
adc
cmp
push
repz
xchg
lahf
cmpsb
xchg
insb
addr16
dec
iret
scas
sub
push
push
aas
fbld
test
mov
outsb
lret
popf
xlat
inc
push
es
jl
sub
jnp
or
mulb
push
cmp
dec
insl
cmpsb
outsb
cwtl
fidivrl
fisubrs
sub
call
xor
aaa
lods
or
push
dec
insb
in
push
sub
mov
xchg
addr16
fmuls
jle
inc
stc
or
test
add
jbe
sub
cmp
sub
pop
dec
sub
pop
or
fcomps
sbb
ror
inc
mov
mov
sbb
popf
adc
dec
xlat
xlat
push
and
pop
repz
inc
adc
inc
mov
mov
lds
inc
jl
inc
insb
inc
es
mov
mov
push
testl
fs
insb
mov
push
jp
std
fidivrs
shl
inc
ret
jnp
popf
mov
stos
test
or
lret
or
andb
sarl
pop
cmpsb
adc
mov
pop
adc
test
aas
sbb
call
cmp
add
add
push
cmp
xchg
test
and
pop
jns
repnz
shlb
jmp
xor
adc
dec
add
loop
sahf
popa
enter
wrmsr
ss
stos
push
mov
xchg
decl
scas
jmp
mov
outsb
call
test
or
xor
stos
into
inc
jno
sub
ja
pop
jmp
jnp
data16
fldenv
dec
icebp
es
mov
add
pop
lret
mov
lods
xlat
stc
subb
cmc
and
inc
movsl
ret
loope
scas
aad
scas
mov
iret
mov
mov
fisttpl
add
nop
or
stos
bound
fisttps
fcoml
push
neg
imulb
test
into
mov
adc
mov
les
push
xor
mov
jne
dec
ds
cmp
xor
mov
xchg
xchg
stc
mov
sub
pop
push
and
popa
movsl
pop
aas
inc
mov
jnp
xorb
sti
int3
push
mov
push
movsb
lret
mov
mov
into
mov
xlat
xor
pop
leave
out
loopne
mov
mov
xchg
popf
cmp
incl
loop
add
leave
mov
aam
fidivrl
movsl
lret
fildl
rolb
inc
das
pop
push
mov
jp
loopne
cmp
xchg
shl
pop
mov
addl
xor
mov
arpl
inc
jno
dec
movzwl
shll
pop
push
fs
sub
sbb
movsb
scas
lret
fstl
nop
prefetchw
or
stc
addl
lods
enter
orl
les
sbb
call
sub
out
loop
mov
int
out
out
das
sbb
push
imul
jmp
icebp
sub
movsl
mov
xchg
push
scas
xor
pop
jb
ss
dec
jge
mov
jbe
pop
ret
sbb
gs
dec
fisttpl
clc
test
ljmp
sub
adc
jno
and
cld
xor
push
and
cwtl
xchg
jl
fsts
xchg
ja
mov
es
xor
insl
in
add
jmp
dec
and
sbb
adc
pop
dec
push
shll
fsubrl
loop
pop
and
pop
cmp
pop
rorb
xor
cltd
clc
mov
stos
push
inc
gs
mov
push
fwait
mov
inc
xchg
adc
mov
icebp
imul
test
push
cld
xor
adc
inc
add
push
jg
jl
rolb
adc
test
jl
rorb
cmc
xor
insl
aas
jnp
and
or
scas
rclb
popf
int3
aad
pop
pop
jo
mov
stos
nop
push
shlb
push
mov
inc
cmp
enter
out
add
jo
mov
adc
ret
fcoms
fnstenv
pop
pop
inc
mov
push
notb
jg
pop
subb
xor
outsl
push
or
pop
jns
sbb
lahf
ret
jmp
mov
pop
xor
js
in
mov
jl
inc
or
movsl
pop
push
jp
data16
push
add
and
les
pop
pop
sbb
inc
sbb
cmp
shrl
pop
push
fsubrs
cmc
mov
ja
aas
fidivl
out
mulb
cmp
fstp
lock
or
sbb
inc
jge
adc
loopne
adc
or
pushf
das
repz
gs
adc
adc
jns
sbb
xchg
mov
mov
addr16
add
mov
leave
movsl
mov
cld
sti
sahf
adc
mov
dec
int
into
dec
mov
les
into
insb
xchg
fwait
or
mull
mov
fs
sahf
in
enter
pop
lods
pop
clc
mov
sub
notl
cmp
or
mov
jmp
pop
js
jg
mov
inc
sar
sub
dec
out
mov
inc
jo
shlb
test
into
mov
mov
dec
shll
mov
fnstsw
lret
lock
out
insb
pushf
cltd
mov
adc
repz
sub
pusha
xchg
jne
push
icebp
pusha
mov
int
shrb
sub
std
xlat
movsb
jge
adc
rcll
sahf
mov
or
adc
cwtl
aam
movq
lcall
call
cmpsl
inc
add
inc
stc
rep
xchg
jb
jecxz
shl
adc
sbb
xor
cmp
dec
lods
nop
int
adc
jmp
xor
xchg
mov
mov
adc
inc
or
andnps
or
arpl
push
cmp
pop
out
sbbl
xchg
jnp
mov
push
jle
xlat
fcoml
dec
daa
mov
push
inc
lods
std
jns
xor
iret
inc
stc
xchg
lea
nop
ds
pop
inc
arpl
mov
ds
sarb
fs
mov
and
jp
and
loope
sbb
add
mov
jnp
pop
xor
sub
sub
in
mov
iret
dec
inc
pop
movsl
sti
and
and
rclb
scas
scas
sub
imul
xorl
popf
aaa
push
in
jg
mov
ja
mov
addr16
aaa
dec
push
fwait
or
dec
fmuls
jp
push
adc
inc
sub
and
rcl
mov
adc
mov
arpl
gs
cli
idivb
mov
mov
in
arpl
add
les
ficomps
mov
push
pop
jp
mov
sub
out
stc
and
mov
push
and
outsl
push
add
mov
sahf
nop
and
cmp
in
or
or
push
loop
jecxz
popf
adc
aas
repnz
and
mov
rclb
loop
sti
sub
and
aas
loope
cs
xor
mov
jbe
sti
mov
test
adc
cmp
ret
lea
sub
sbb
adc
insl
xor
push
inc
lahf
sbb
aam
shll
push
adc
xchg
pop
rcr
lock
loopne
ror
xchg
inc
lock
nop
fmull
mov
dec
aad
pop
fnstenv
arpl
jmp
gs
and
insb
cmp
jle
adc
adc
push
in
lea
sub
pop
fists
adcl
scas
cwtl
stos
mov
cmpsl
icebp
push
jb
ss
mov
sub
enter
xchg
cwtl
setg
push
jno
out
mov
rorl
cmp
mov
xlat
xlat
mov
xor
test
adc
out
movsb
sti
dec
xchg
fldcw
jnp
outsl
mov
xchg
cmp
pushf
xor
popa
mov
rclb
pop
loope
push
shll
sbb
pop
pop
adc
lock
jmp
or
stos
pushf
pusha
dec
sbb
mov
stos
and
mov
dec
in
shll
and
push
sti
inc
cmpsl
aas
pop
sbb
sub
fisttps
clc
rcll
xchg
sarb
mov
mov
fwait
xchg
fwait
add
in
es
cmc
fildl
outsl
in
cmpsl
or
imul
lret
test
mov
or
ljmp
xchg
cwtl
push
mov
loope
movsb
mov
or
pop
sub
test
icebp
jb
scas
adc
fs
lods
mov
cmp
jns
lea
push
or
mov
mov
xchg
cmp
cmp
xchg
in
mov
add
fsubrs
cltd
jmp
mov
cmp
shrb
sub
jmp
xor
ficompl
dec
add
push
fldcw
inc
movsb
sbb
mov
inc
outsl
mov
nop
adc
pop
jbe
aaa
movsl
cs
cmp
mulb
movb
jno
imul
insl
or
aaa
icebp
xchg
and
inc
inc
popf
sbb
mov
mov
jae
cmc
in
stos
aaa
outsl
rcl
push
inc
roll
inc
pop
repz
in
insl
and
push
repz
pop
lds
test
pop
add
mov
mov
sub
pop
push
lds
mov
jbe
ds
add
insl
outsl
sbb
cltd
adc
loope
in
mov
aam
cwtl
enter
shrb
pop
jae
dec
inc
inc
xchg
pop
hlt
and
add
push
dec
inc
mov
das
out
dec
dec
and
cmp
outsl
scas
mov
int
adc
jge
or
daa
xchg
test
xor
int
and
fstl
lahf
ja
incl
roll
in
xchg
cs
pop
fisubl
popf
fimull
pop
adc
dec
mov
call
add
push
bound
testb
call
sbb
jo
push
mov
sub
cltd
mov
dec
call
push
scas
lds
daa
mov
sub
int3
fisubrs
insl
xchg
insl
jbe
mov
dec
ss
adc
imul
dec
ret
dec
inc
jp
xchg
mov
xor
jns
cli
daa
mov
add
push
divl
fdiv
pop
and
mov
xorl
mov
pop
imul
leave
sbb
jecxz
repz
data16
insb
lock
clc
adc
insl
out
jmp
xor
outsl
xchg
dec
fucomi
test
jecxz
push
xchg
cmp
insb
pop
cmp
jecxz
adc
cwtl
pop
pop
add
stos
outsl
loop
cmp
mov
cmp
push
add
lds
stc
and
push
mov
xorl
inc
lcall
add
push
and
pushf
stos
push
push
xor
out
jae
jecxz
adc
pop
push
out
push
jp
mov
test
cltd
lahf
push
pop
aas
gs
int
frstor
pushf
xchg
cwtl
dec
cmp
mov
mov
jmp
aad
loope
in
pushf
into
add
sub
xorl
inc
aam
mov
ret
repz
movsb
fsts
sbb
stc
rclb
cmpsl
aas
xor
rorb
xor
cmc
loopne
jae
imul
mov
push
nop
popf
sarl
cmpsl
cltd
mov
repz
iret
ss
testb
add
sbb
sub
das
ss
test
lahf
fildl
mov
ficompl
push
jnp
aad
cmpl
andb
jno
test
jbe
sbb
xor
shll
jmp
daa
rolb
dec
push
mov
push
add
and
loopne
mov
jmp
sbb
push
test
pop
inc
outsb
mov
stos
push
scas
jnp
xchg
aas
jae
sub
insl
call
stos
pushf
mov
shll
xor
xor
jo
xor
insl
xor
rcll
lds
cmpsb
jmp
push
rorl
daa
mov
cltd
xor
call
fistps
data16
lock
mov
aad
shrl
stos
mov
push
sub
loopne
inc
mov
jo
mov
or
and
sarl
lock
mov
cmp
xchg
in
jp
loop
mov
inc
mov
or
pusha
mov
push
push
clc
bound
sbb
dec
xchg
sbb
jl
jbe
sub
jnp
add
cltd
push
mov
movl
sti
xchg
push
jae
dec
arpl
mov
out
out
clc
push
xor
loope
jbe
dec
pop
loope
lcall
popa
daa
dec
cmp
mov
cmpl
loopne
adc
jmp
int
fbstp
mov
mov
push
test
add
aas
stos
sub
movsl
xchg
sbb
pop
imul
mov
xchg
mov
dec
dec
in
vlddqu
fldenv
inc
pop
mov
dec
aad
lods
cs
pop
add
das
jmp
inc
fbstp
leave
cmp
jnp
clc
outsl
imul
sub
mov
xchg
jecxz
cwtl
push
sahf
mov
mov
shlb
jbe
jo
lea
lcall
or
popa
mov
out
icebp
stos
repz
aam
imul
adc
je
fidivrs
and
cmp
mov
and
mov
xchg
orl
push
fmul
icebp
push
cmp
mov
adc
add
cmp
mov
outsb
hlt
mov
and
outsb
push
xchg
inc
popf
andl
jno
nop
sarl
push
push
lret
in
nop
pop
and
rcrb
cmp
mov
decl
loope
fcomp
and
add
dec
addr16
faddl
ljmp
xchg
mov
scas
icebp
or
popa
and
repz
cmp
jge
inc
push
cmp
stos
adc
xorl
jns
cmpsb
cmp
ja
add
push
and
scas
std
mov
pop
pop
bound
clc
xor
sbb
imul
dec
and
loop
sbb
cmp
push
addr16
daa
mov
and
fbstp
loopne
insb
and
out
out
cmp
aas
fdivl
mov
ret
and
mov
cmp
enter
mov
fidivs
mov
lea
jl
xor
inc
dec
and
mov
or
sti
lods
jmp
shrb
mov
sti
fimull
rcll
fstps
pop
cmp
movsb
fisubrs
xchg
push
fadds
jne
in
dec
or
adc
adc
dec
dec
jge
shl
push
xchg
mov
mov
or
adcb
repnz
insl
iret
leave
add
mov
filds
sub
lcallw
push
fsubrs
inc
repz
mov
add
rcr
or
leave
dec
movsl
adc
mov
mov
into
xchg
xchg
fstl
jns
sahf
and
iret
cmp
lret
xchg
adc
call
outsl
xchg
pushf
ljmp
jb
adc
jp
inc
mov
sbb
popa
add
jae
rcrb
shrb
cmp
add
lret
sbb
push
ds
outsb
adc
mov
xlat
test
in
xchg
and
or
packssdw
shll
inc
mov
lret
push
cs
les
lahf
ret
mov
stos
rcrl
stc
movsb
xor
in
sbb
fidivrs
add
xchg
loope
sub
bound
fnstsw
fwait
lods
sub
lcall
ja
mov
popf
imull
push
inc
aas
in
xchg
cmpsb
bts
xchg
les
dec
inc
clc
fsubl
push
gs
xor
inc
mov
and
call
repnz
jl
cwtl
fs
scas
mov
jbe
stos
in
mov
push
mov
mov
sub
sub
jne
adc
cltd
cmpsl
loop
inc
aad
push
cmc
jbe
mov
mov
fimull
push
inc
rol
xor
fdivl
rcrb
imul
scas
xchg
lret
push
imul
mov
pop
in
je
mov
movsb
xchg
mov
cld
popa
xor
push
xchg
sbb
dec
push
push
cld
cmpl
mov
jnp
addr16
sbb
push
push
pop
jns
xchg
inc
lds
pushf
xor
push
aas
cwtl
xor
mov
popf
xchg
bound
and
test
mov
push
mov
dec
jp
stos
dec
mov
dec
movsb
adc
pusha
jo
jecxz
scas
jns
stos
js
lcall
and
dec
cmp
cmp
icebp
std
mov
sbb
popa
xlat
pop
fdivrs
jge
mov
dec
mov
das
fsubs
loope
xorb
subb
dec
rolb
roll
cmp
jae
jmp
frstor
loopne
ja
mov
orl
xchg
enter
push
mov
fadds
dec
testb
xor
fcomip
xchg
js
mov
mov
mov
xchg
xor
inc
sarb
das
xchg
scas
adc
ss
cli
icebp
ja
xor
push
test
xchg
sbb
ss
pop
imul
add
rorl
mov
in
js
iret
jle
mov
fidivs
and
xchg
ljmp
pushf
jp
mulb
lret
or
cmpsb
cmpxchg
dec
mov
les
gs
adc
and
lahf
pop
dec
cmc
xor
loope
mov
cmp
xchg
inc
jb
sub
enter
push
xchg
loopne
push
andb
aam
xor
sub
sbb
scas
mov
invd
xchg
push
dec
and
lods
adc
and
xor
test
sbb
xor
paddsb
push
xchg
cs
jmp
fs
cwtl
sub
push
cmpl
dec
je
test
add
or
fstpt
in
fadd
ret
mov
mov
flds
call
test
push
sbb
loope
sub
xor
pushl
dec
mov
test
sbb
std
mov
dec
jmp
xchg
add
out
aad
adc
pop
xchg
shlb
push
inc
hlt
cltd
gs
push
es
cmp
mov
mov
mov
push
inc
sub
insl
xchg
add
cli
movzbl
idivl
push
loop
xchg
jbe
cmp
lods
lret
lods
test
stos
insl
iret
adc
and
scas
fcoml
imul
push
or
or
sahf
jbe
xor
jnp
cmc
or
neg
mov
int
pop
icebp
xor
data16
pop
sub
push
std
xor
inc
add
xor
aad
dec
add
inc
nop
mov
push
push
and
jne
insb
insl
sub
lahf
insb
lahf
jnp
mov
jge
rorl
push
dec
pop
jno
testb
mov
stos
add
mov
push
lods
push
popa
or
jbe
cs
push
jae
mov
or
xchg
push
dec
ljmp
lcall
dec
xor
xchg
cmp
sub
das
mov
lret
push
fwait
test
imul
rorl
add
or
decb
jmp
add
dec
out
stos
nop
or
out
mov
iret
mov
pop
sub
or
jns
ficomps
in
int3
gs
sbb
cmp
jo
xchg
subl
leave
jae
movsl
jmp
in
rcll
cwtl
lds
int3
cltd
adc
mov
jae
mov
ja
in
arpl
inc
sub
call
push
insl
clc
lret
push
mov
ret
outsb
call
jns
imul
and
xlat
xchg
add
xchg
and
scas
divb
adc
out
sbb
add
sbbl
fprem1
dec
sub
fwait
mov
es
imulb
jnp
mov
sbb
imul
rorl
ror
lret
pusha
mov
int
lods
xchg
push
testl
lret
dec
jge
insb
dec
xlat
inc
nop
subb
lret
das
jae
test
test
mov
neg
movsb
mov
clc
mov
jp
rcr
adc
aas
and
xchg
mov
roll
inc
fstps
rcl
into
cmpsb
ja
inc
int
adc
push
pusha
dec
call
nop
in
test
add
sub
cmp
loop
xor
add
clc
je
clc
mov
or
xchg
push
inc
adc
test
mov
into
lock
sub
pop
sub
loop
sahf
cld
jno,pn
lcall
adc
je
dec
push
and
add
std
lcallw
imul
pxor
dec
inc
and
or
in
inc
or
rcrb
movsl
xchg
cmp
addr16
inc
xchg
hlt
cli
inc
incl
and
mov
jns
imul
sub
insb
mov
scas
loop
push
adc
ljmp
je
and
sbb
and
adc
adc
jno
inc
xchg
push
ja
fnstsw
mov
subb
xor
loopne
xchg
pop
loopne
mov
jnp
cmp
jmp
jl
pop
inc
push
fdivr
loop
inc
fcoml
sub
add
cmp
sub
rcrb
nop
fistps
and
mov
cltd
xor
roll
adc
mov
adc
sbbl
adc
aad
insl
fcomip
std
jnp
jbe
and
adc
xorb
adc
icebp
mov
cmpsl
sti
pop
xor
shll
ficoml
inc
leave
push
xchg
mov
outsl
cmp
icebp
daa
jne
ljmp
cld
and
xor
divb
movsl
or
lods
push
ret
ret
rorb
cmpsl
or
out
test
aas
push
getsec
mov
push
pop
xchg
jp
sbb
aad
add
lods
in
jnp
mov
fcompl
mov
push
inc
xchg
xchg
sti
insb
pop
lds
stc
clc
loopne
std
movsb
pop
sub
sub
mov
mov
aaa
cs
inc
mov
and
xchg
stos
cmp
aaa
adc
jg
ficoms
pop
xchg
push
testb
enter
jns
pop
outsl
mov
mov
movsb
or
mov
cmp
repnz
jb
cmp
ret
and
cli
aaa
xor
into
mov
add
and
push
sub
es
loopne
test
icebp
stos
aaa
lds
cli
cli
push
repnz
in
and
aas
cmp
or
jl
sub
xor
outsl
pop
jnp
test
and
xchg
xchg
pop
fldt
sub
iret
int
fsub
mov
iret
ljmp
mov
loope
repz
adc
mov
mov
inc
dec
push
rclb
imul
jp
iret
andb
lret
addr16
in
mov
cmp
xor
dec
mov
movsl
imul
dec
outsb
aam
aam
imul
dec
arpl
scas
jnp
clc
mov
dec
mov
lcall
jne
out
xchg
pop
jecxz
bound
ret
pop
loop
mov
sbb
and
pop
push
les
adc
and
out
jmp
xor
or
lock
in
ret
jae
iret
idivl
ja
mov
sbb
rorb
mov
cwtl
jle
iret
ret
movsb
dec
clc
and
mov
inc
mov
cmpsl
add
lret
sahf
or
cmp
jbe
mov
jnp
dec
xor
pusha
sub
stc
lock
lods
nop
stos
xchg
lret
xchg
fs
in
xlat
mov
aaa
clc
xchg
call
fdivrl
sbb
mov
gs
pop
aam
push
test
jo
sbb
push
andb
mov
sbb
ss
rclb
fnstenv
lock
pop
cltd
and
pop
cli
pop
mov
addr16
jno
imul
jp
mov
stos
lods
push
js
jecxz
loopne
cmpsb
jp
jmp
cmp
iret
or
hlt
dec
lods
ftst
test
lods
or
aas
shll
cld
jl
mov
push
pop
push
andb
push
popf
xchg
arpl
sbb
mov
mov
or
mov
mov
push
jns
inc
fsubl
xchg
pop
xor
pusha
ja
stos
dec
inc
sub
fidivrl
imul
add
add
push
add
xchg
push
mov
dec
fmulp
call
inc
jl
mov
leave
les
adc
in
sub
and
inc
adc
int3
xchg
ja
cmp
into
fstpl
in
jmp
sbb
loop
mov
pushf
pop
push
inc
mov
mov
sarl
push
pop
stos
sahf
push
jns
shll
push
cld
dec
insb
jge
fildl
jle
gs
mov
dec
out
insb
testl
xor
fdivrp
data16
mov
pusha
and
or
xor
stos
ds
lahf
mov
jecxz
and
pop
push
inc
cmp
pop
adc
or
add
inc
add
cwtl
stc
fstpt
mov
test
xchg
imul
cmp
mov
mov
mov
addr16
clc
add
in
mov
test
addl
std
push
idivl
cmp
cmpsb
pop
mov
lcall
out
pop
push
add
fcmovnu
and
xorb
gs
pop
cmpl
adc
jnp
in
inc
xchg
pop
call
clc
xchg
pop
outsb
sbb
jle
das
jne
lods
inc
xor
mov
jno
inc
jecxz
xchg
sbb
daa
stc
popf
mov
sub
imul
aad
rcr
xchg
and
xor
faddl
stos
ljmp
loop
lcall
movsl
mov
es
xorb
sub
add
arpl
push
rcl
sub
ljmp
sub
jo
iret
xor
cltd
cmp
lods
aad
pop
or
pop
mov
inc
fwait
jg
jbe
mov
xor
jns
lock
pop
ret
ljmp
xchg
and
mov
cmp
stc
lret
ret
scas
pop
mov
pop
sbb
dec
push
jmp
scas
addr16
cmp
out
pop
inc
fidivrs
out
cmp
loope
fyl2xp1
sbb
and
cmpsl
jl
add
jle
cmc
cmpsl
jo
and
xor
insb
in
xor
iret
jo
mov
insb
cli
or
pop
mov
and
inc
mov
in
push
adc
out
jae
xchg
xchg
pusha
mov
xchg
adc
jno
in
pop
repz
pop
sbb
jle
dec
pop
push
jmp
es
add
and
fistpll
adcb
push
mov
jne
mov
int
repnz
imul
test
repz
jae
je
out
out
jbe
ror
xchg
dec
jo
sti
mov
mov
jae
call
jge
les
mov
or
adc
xchg
xchg
mov
stos
stos
sub
call
sbb
shlb
loope
lret
addl
roll
mov
sub
mov
rclb
push
out
arpl
add
addr16
fsubl
out
sbb
inc
xor
xor
xchg
and
inc
xchg
fistpll
or
test
imul
mov
push
push
adc
idivl
stos
and
aad
and
ds
in
mov
cmpsb
dec
mov
imul
iret
ljmp
dec
mov
insl
ret
push
ret
dec
insl
nop
stos
fstl
jp
mov
and
insb
jmp
fwait
pxor
cmp
dec
rorb
into
loop
sar
xlat
pop
push
mov
int
idivl
mov
int3
mov
lcall
out
push
and
sub
out
mov
lcall
mov
or
and
cld
mov
mov
add
fidivl
mov
jl
xchg
mov
mov
sub
popa
fdivs
lcall
hlt
clc
xchg
out
mov
dec
push
mov
fnstcw
jge
mov
out
xor
jnp
mov
pop
pop
sbb
dec
icebp
add
mov
test
dec
mov
pop
iret
imulb
popf
inc
and
test
adc
push
and
fsubs
js
jbe
das
pop
pusha
push
movb
sbbl
sub
movsb
push
sub
dec
cmp
faddl
les
out
sbb
andb
jo
jmp
outsb
js
bound
add
repnz
xor
pop
pushl
dec
ret
xchg
cld
mov
xchg
and
repz
mov
rol
jne
flds
xchg
adc
pop
stos
cmpsb
sbb
ds
loope
pop
orb
call
jecxz
jb
fisubrs
xlat
xor
xor
nop
pop
data16
push
ret
arpl
xorb
nop
loopne
out
mov
pop
addb
ret
cli
adc
push
mov
mov
xor
mov
stos
int3
in
inc
orb
loopne
inc
xchg
sti
icebp
lods
out
out
xchg
sub
sbb
pop
or
jno
add
test
in
and
cmpb
pop
mov
int3
add
repz
mov
and
out
dec
movsl
insb
addr16
mov
cmp
lahf
add
cmp
dec
lret
jnp
loope
mov
pop
ds
xor
push
lods
bound
add
or
cld
add
lret
cmp
jne
jbe
cmp
xchg
xchg
ds
mov
call
jb
sbb
iret
scas
xlat
movsl
cmc
stos
or
into
pop
sbb
mov
mov
arpl
pop
je
in
pop
jge
int
mov
movsl
xor
push
ss
pop
loope
jle
dec
adc
aam
iret
dec
xor
pop
adc
popa
xchg
loope
pop
cwtl
outsb
push
in
sub
jo
mov
cmpsl
lods
enter
outsl
xor
sbb
mov
ja
mov
into
mov
subl
push
adc
and
lock
bound
lods
test
inc
repz
or
mov
xor
das
bound
jb
inc
dec
push
or
cwtl
inc
and
sub
mov
arpl
jecxz
jecxz
jo
mov
xor
out
loope
sbb
jp
jns
jae
dec
adc
ds
jb
and
mov
imul
inc
fwait
add
adc
fnstenv
mov
dec
popf
jle
add
or
stos
cwtl
adc
fsin
cs
and
dec
xchg
clc
pop
push
aad
add
stos
cmpsb
jnp
sub
jno
imul
adc
sbb
inc
shll
inc
mov
sbbb
fs
dec
jmp
or
int
outsb
and
jns
sub
xchg
fnstcw
enter
mov
clc
xchg
mov
push
dec
add
push
cs
sbb
pop
push
out
jmp
xchg
gs
js
dec
mov
dec
mov
xor
das
xchg
sub
and
jmp
mov
mov
sbb
cs
sahf
and
out
test
test
int
nop
ds
fistpll
sahf
mov
lods
scas
jns
outsl
into
push
shrl
aad
lret
cwtl
mov
lods
dec
push
repnz
shlb
cwtl
cmpl
dec
data16
je
sarb
pop
and
ds
mov
outsb
out
sbb
sub
pusha
push
mov
jmp
sub
pop
jp
sbb
xor
mov
jnp
sbb
jle
dec
inc
fstpt
fisttpll
stos
mov
lret
add
iret
test
cmpsb
jne
into
imul
mov
inc
jb
cld
sbb
clc
jns
ljmp
rolb
sub
movsl
mov
add
mov
div
pandn
pop
mov
sub
gs
cmpsl
hlt
add
ret
test
les
xor
mov
jb
pop
jg
imul
lea
mov
loop
std
push
mov
adc
cmpsl
jp
lods
mov
scas
and
dec
data16
mov
dec
in
mov
mov
rcl
leave
in
push
out
push
mov
sbb
or
lret
out
sbb
mov
mov
dec
jno
ss
pop
idivb
ror
or
pop
repnz
inc
mov
testl
jo
sbb
xchg
jnp
jb
stos
add
xchg
or
jle
scas
xchg
fstl
cli
pop
cmp
dec
stos
sbb
pop
mov
enter
or
pushf
ja
jne
add
inc
push
add
mov
pop
data16
stc
add
ret
sub
dec
cmp
or
adc
mov
and
push
xchg
mov
ja
sahf
daa
pop
adc
xor
nop
int3
imul
incb
stos
mov
aam
sub
popa
or
movsl
stos
xor
inc
out
test
push
imul
cmp
inc
push
outsb
imul
pop
and
or
xchg
lods
sub
sbb
lret
sbb
jp
lock
and
and
or
test
ds
jns
add
sub
push
mov
add
lods
inc
pop
in
sbb
adc
das
xlat
fmul
lahf
mov
roll
jae
inc
aad
out
inc
insb
and
shlb
inc
mov
ja
add
jno
pop
lret
pop
sbb
notl
int3
fstps
fisttps
dec
enter
pop
jae
pop
ja
ret
xchg
cli
mov
xor
push
xchg
fnsave
stos
mov
sbb
lds
mov
ret
or
leave
cli
adc
jg
int
stos
add
push
shl
xlat
push
frstor
inc
sbbb
xchg
push
jne
add
rcl
xlat
mov
pop
int3
sbb
jge
enter
js
daa
rorb
cmpsl
pop
dec
fcoml
sbb
mov
inc
inc
xchg
lods
cltd
lea
xchg
mov
inc
push
into
cmp
cld
inc
testl
xor
or
cmpsb
outsl
adc
cmpl
repz
cmc
xor
andb
mov
lahf
inc
xor
mov
stc
jmp
pop
aad
pop
mov
filds
repz
adc
xor
fldl2t
add
mov
movsb
daa
inc
mov
repz
in
fisttps
xor
and
insb
xchg
xchg
sbb
sub
mov
shrl
sbb
jno
xor
fs
insl
jmp
add
and
out
xchg
jno
or
out
sub
daa
add
mov
mov
popa
jp
cmpsl
xor
imul
sahf
sti
out
pop
mov
or
call
xlat
outsb
je
dec
in
scas
xlat
mov
push
xchg
mov
push
pop
iret
jno
arpl
cmp
push
mov
les
clc
push
inc
xor
lcall
lock
sahf
nop
dec
dec
aaa
insb
or
popa
loope
and
outsb
repnz
or
mov
mov
push
fwait
sahf
ja
dec
fwait
xor
xchg
pop
dec
hlt
jmp
or
fs
sub
jmp
int
cmp
xchg
fs
in
adc
fidivrs
xor
imul
add
cmp
rdmsr
lods
fnsave
aas
cld
xchg
lds
lods
mov
cmc
sti
int
mov
jbe
fs
scas
pop
in
jmp
loopne
loope
insl
int3
loopne
jne
stos
inc
nop
push
shl
inc
jb
adc
fldenv
pop
sub
enter
mov
sbb
dec
outsl
cmp
out
insb
adc
mov
mov
push
cmp
popa
scas
daa
call
lcall
cli
fldcw
pop
push
and
stc
mov
popa
shrl
mov
xor
jmp
pop
cmpsl
xor
je
fcmovne
mov
pop
jg
pop
and
push
xchg
lea
les
testb
adc
push
rclb
jae
mov
movsl
stos
and
into
cmp
inc
popf
leave
dec
jecxz
hlt
mov
ds
sti
fadds
bound
adc
scas
adc
jns
or
push
push
mov
int3
aad
jbe
ds
popf
xor
cltd
dec
inc
les
movsb
hlt
dec
xchg
push
push
ds
mov
testl
mov
fldl
cmpsb
movsl
rclb
orl
jbe
shrb
inc
arpl
lock
push
cmp
dec
fwait
cmpb
cwtl
fildll
scas
add
clc
test
sarl
outsl
jg
loop
sbb
push
inc
mov
rcl
movsl
dec
jmp
sbb
inc
inc
mov
insl
xlat
sbb
jne
repz
push
sub
push
xchg
aaa
mov
mov
push
loope
out
or
cltd
xchg
int
dec
call
scas
repz
das
push
and
xchg
ror
fisubrl
or
sbb
popa
cmp
push
sahf
nop
push
enter
movsb
je
sub
push
xor
gs
xor
outsl
pushw
repz
jle
out
add
push
mov
mov
xor
or
subb
stc
xor
mov
loopne
inc
xchg
mov
inc
mov
add
ss
mov
adc
lea
xor
mov
push
mov
inc
push
sahf
jns
flds
les
and
adc
xchg
dec
jbe
and
inc
icebp
lea
std
cmc
push
jecxz
mov
loop
sub
sbb
adc
mov
insb
dec
mov
mov
or
pop
mov
movsl
mov
loope
cs
xchg
xchg
das
push
push
lods
inc
pop
jg
inc
daa
in
shll
push
lahf
es
icebp
and
lock
dec
stos
sbb
cmp
pop
xor
sbb
add
lods
les
andb
mov
jb
sti
outsl
nop
loope
loope
pushf
inc
sub
cmp
dec
cwtl
push
roll
fldl
out
mov
sarl
pushf
adc
rcl
pop
andl
dec
outsb
cmp
ljmp
stos
mov
or
and
xchg
xchg
dec
shr
adc
pop
xlat
dec
int
lret
stc
pop
or
xchg
add
int
push
dec
hlt
dec
aam
call
js
push
jl
xlat
sub
add
and
stc
and
cmp
loop
aaa
or
xor
inc
sbb
call
inc
dec
lcall
les
addr16
sbb
out
xchg
push
out
ss
in
mov
mov
loope
inc
out
add
sub
stos
stos
jb
into
mov
fcmovnb
ffree
into
insl
sub
pop
daa
fists
mov
jne
inc
push
lods
xor
cmp
dec
sub
mov
inc
mov
imul
push
xchg
pop
in
xor
ret
cmp
call
imul
cmp
cltd
jp
bound
dec
jae
cli
pop
or
cmp
aas
adc
gs
jne
adc
aam
and
push
out
xor
insl
add
in
pop
adc
imul
outsl
xlat
cmp
mov
inc
call
jmp
scas
pop
xchg
stos
cmpsb
jnp
jmp
inc
inc
cmpsl
fnstenv
scas
mov
dec
loope
ja
jp
cmovno
jge
popf
lret
jno
and
mov
mov
les
inc
sbbb
mov
gs
inc
jmp
cmpsl
jmp
mov
adc
clc
dec
jle
sbb
movsl
xchg
andl
js
mov
dec
out
fstl
dec
mov
sbb
cld
pop
ficoms
inc
cmpsl
sahf
inc
push
mov
inc
testl
push
les
icebp
mov
mov
icebp
mov
xchg
call
cmp
int
daa
inc
jbe
ret
lea
pop
test
cwtl
xchg
les
pop
adc
lea
xchg
xorl
sbb
cmp
sti
cld
inc
outsl
pop
lods
lds
and
jecxz
or
mov
cmc
mov
pushf
fs
adc
jmp
jmp
mov
pop
push
push
aad
dec
pop
inc
inc
dec
xor
fbstp
push
cmp
mov
sbb
in
push
test
cltd
mov
push
adc
adc
mov
movsl
xor
inc
push
dec
sbb
dec
in
or
popf
dec
ret
mov
mov
fsubrs
lahf
inc
mov
icebp
xor
cmpsb
testl
out
dec
mov
cld
pushf
xchg
mov
js
bound
shl
daa
daa
pushf
sub
bound
mov
xchg
daa
xchg
mov
scas
pop
insb
and
jmp
push
pop
adc
leave
inc
pop
cmp
je
aad
xor
cmpsl
sbb
pop
subb
call
inc
nop
and
stos
sbb
mov
addb
mov
mov
lds
cmp
inc
sti
cmc
push
int
sub
clc
or
out
std
adc
inc
shll
lods
std
mov
cmpsb
sub
pop
pop
cltd
and
lods
leave
push
popa
adc
test
daa
pop
cld
xchg
mov
pusha
test
add
and
xchg
dec
push
jecxz
insl
cli
or
movsb
les
push
jecxz
pop
aaa
xor
icebp
outsl
push
adc
mov
pop
push
xor
sbb
xchg
cmp
fldl
inc
cltd
or
mov
dec
test
mov
out
add
mov
jo
dec
lea
loop
xchg
out
and
push
out
jo,pn
inc
cs
cwtl
xor
rorb
push
bound
out
pusha
xor
or
or
js
insb
jp
mov
or
inc
cwtl
mov
pop
aaa
aas
out
jl
divl
arpl
jnp
sbb
test
mov
cld
mov
cmp
data16
inc
fdiv
sti
xchg
shl
cli
sub
push
arpl
pop
pusha
rolb
in
xor
pop
add
loopne
jb
mov
cli
cltd
mov
dec
jl
add
jno
ljmp
std
gs
sub
push
mov
rcll
scas
roll
sbb
fsubs
or
std
pop
sti
pushf
fcoml
enter
icebp
jl
or
pop
or
cmp
fstpl
jp
xor
dec
xchg
lcall
test
jb
xor
ljmp
daa
sbb
lret
test
inc
push
mov
jg
sub
movsb
inc
add
sbb
pop
gs
jp
jg
pop
mov
mov
sub
mov
test
shll
mov
cmp
sbb
mov
mov
ja
js
adcl
sahf
dec
inc
inc
lods
shlb
mov
lds
mov
jl
and
sub
xchg
jle
sbb
lcall
insb
test
mov
adc
movsl
xchg
inc
or
insb
mov
fidivrl
imul
sahf
cmp
stc
or
jo
mov
pushf
lock
mov
fs
aas
xlat
shll
nop
inc
cmp
daa
push
icebp
mov
mov
mov
ss
lret
jae
ljmp
fcomp
les
push
ficomps
xchg
and
imul
in
xchg
push
leave
push
movsl
adc
out
sbb
xchg
nop
dec
xor
ret
sbb
add
pop
js
outsl
rcrb
movsb
enter
gs
not
mov
jl
dec
push
out
mov
add
repz
pop
ja
test
je
push
ja
add
loope
sub
cwtl
cmp
or
and
push
movsb
or
mov
ret
notb
js
dec
das
push
fidivl
lods
loop
fsubrl
or
mov
lods
jne
pop
xor
push
cld
les
aad
orb
xchg
cli
test
out
fisttpll
jmp
sbb
add
in
push
pop
cld
stos
push
rorb
xchg
sub
or
fildll
push
movsl
push
push
pop
cmpsb
stos
jl
inc
dec
push
push
aam
jo
push
mov
addr16
mov
stos
lds
int
mov
mov
add
cmp
movsb
outsl
inc
mov
outsl
cld
cwtl
ss
fcmovb
popf
add
nop
inc
shr
out
mov
push
dec
push
add
int3
xchg
loope
cmpsl
inc
cmc
test
test
inc
mov
std
lcall
jns
push
mov
arpl
push
sbb
mov
or
cmp
cs
std
sub
rorb
pop
lea
js
jns
call
std
push
in
jmp
lahf
mov
xor
ret
and
insb
xchg
xchg
out
mov
push
addr16
repnz
add
inc
popf
and
mov
adc
xchg
pop
movsl
push
shrb
push
movsl
push
std
add
shlb
fcoms
pushf
jle
mov
cmp
mov
test
xlat
adc
enter
es
les
ds
fmulp
out
rclb
lock
cmpb
jns
push
cwtl
sbb
push
dec
xor
add
inc
data16
cmp
adc
push
mov
and
inc
dec
lds
scas
inc
sahf
mov
arpl
adc
sub
insb
ja
push
lahf
xchg
hlt
add
in
sbb
push
xchg
imul
jmp
inc
sbb
xor
cwtl
bound
cmp
xchg
loope
mov
sub
lret
movsb
cmpsl
cmpsb
sbb
mov
neg
adc
cmp
dec
or
mov
lret
jbe
lcall
subl
push
xor
push
lret
in
paddw
leave
or
icebp
lods
sbb
push
insb
push
dec
dec
or
pop
jmp
imul
lret
adc
fdivrs
mov
mov
ret
xchg
rorl
cmp
out
mov
mov
inc
fisttpl
mov
inc
dec
mov
push
mov
mov
jne
add
aas
mov
pushl
push
mov
sbb
cmp
ret
stos
lcall
fcmovne
fiaddl
sahf
sub
lea
shrd
mov
gs
fs
pop
cltd
mov
lods
jp
into
insl
cli
stc
push
mov
cmp
and
push
jns
xchg
test
mov
sbb
dec
dec
aad
mov
and
jne
int3
icebp
pop
outsl
iret
stc
mov
xchg
pop
int3
jb
mov
mov
dec
and
mov
dec
sub
pop
jno
jmp
pop
sub
cltd
mov
pusha
es
xor
xor
xorb
stos
push
or
mov
pop
push
out
jae
sbb
push
mov
in
sub
add
clc
fbld
call
pop
or
add
mov
leave
push
stc
xchg
sub
rcrb
xor
gs
jae
mov
negl
shll
xchg
repnz
xchg
das
jae
xchg
xor
sub
ss
mov
push
pop
lods
xor
mov
fs
ljmp
add
xchg
or
inc
sbb
jnp
or
sub
shll
lcall
sub
imul
rolb
cmpsl
xchg
push
inc
xchg
lods
cli
je
and
ret
rcrb
cmpsb
mov
mov
adc
adc
dec
push
adc
xor
dec
mov
pop
or
ds
cmp
jp
ret
jne
and
cs
mov
int
in
jmp
xor
mov
mov
insb
jp
gs
insb
and
mov
inc
inc
pop
pop
rcrl
push
sbb
add
lcall
sbb
imul
sbb
das
stos
or
out
sub
out
sarb
jo
inc
mov
mov
sarb
dec
jle
pop
lods
out
leave
mov
stos
inc
dec
jae
cmp
mov
lcall
jge
insl
push
push
dec
jns
in
mov
shlb
jns
pop
loopne
jl
les
mov
or
xor
lods
dec
inc
in
pop
hlt
push
fcompl
cmp
dec
in
aad
into
mov
add
ret
aaa
sbb
imul
and
ficomps
adc
out
push
and
push
mov
sub
repz
fs
mov
fs
mov
mov
adc
int3
push
inc
xchg
pop
xor
dec
test
js
and
inc
rclb
popf
adc
sub
pop
mov
xchg
iret
lahf
fstpt
mov
sub
dec
push
adc
sub
data16
xorb
in
pop
lret
outsb
nop
out
pop
pop
mov
dec
xchg
cmp
xchg
cmc
mov
imul
sub
sbb
pop
fcompl
sbb
add
and
mov
dec
jle
mov
leave
incb
or
dec
push
cmp
lods
sub
repz
retw
xor
arpl
loope
xor
lods
aam
leave
cmp
insl
out
mov
mov
inc
adc
add
xor
mov
addr16
fyl2xp1
pop
pushf
jne
aad
icebp
int3
xchg
dec
dec
cmc
in
jle
rcrb
sbb
sbb
popa
mov
movzbl
push
adc
push
pushf
lea
push
xor
jle
mov
out
rorb
and
push
dec
cmp
aad
mov
loope
dec
or
mov
mov
out
mov
adcb
int3
dec
pushl
jmp
enter
mov
ds
shrb
xchg
lret
cmp
jno
inc
mov
mov
push
outsl
movsl
lret
inc
scas
mov
out
jg
test
icebp
xor
aaa
jnp
xor
mov
xchg
sarb
out
pop
pop
xchg
adc
jbe
xor
sbb
push
add
mov
mov
lahf
pushf
fisttpll
in
nop
out
movsl
mov
mov
fisttps
and
jle
xor
aam
jnp
fnsave
addl
cmp
dec
daa
xorb
push
das
mov
cmp
das
sbb
pop
add
daa
jl
inc
mov
clc
and
rorb
cmp
push
mov
and
xor
jo
lds
cli
inc
and
add
xor
cli
inc
mov
cwtl
pusha
lret
movsb
push
inc
xor
mov
js
cmpsb
mov
push
jnp
or
push
and
clc
or
adc
loop
jmp
es
adc
sbb
fnstcw
out
mov
and
hlt
xor
adc
jbe
subb
jle
fldl
flds
insb
ret
les
inc
add
mov
add
xchg
sarl
lahf
jmp
in
nop
mov
pop
pop
jbe
add
pop
adc
imul
sarb
sub
fildll
test
sti
xlat
jne
and
sub
dec
mov
pop
or
fs
call
xchg
dec
pop
ss
jp
hlt
sbb
insl
and
jl
mov
sub
ficomps
out
je
jnp
iret
mov
adc
sbb
jo
out
xor
inc
lret
push
dec
int
inc
loope
push
popa
push
inc
inc
xchg
testl
sbb
gs
pop
and
loop
add
mov
jg
or
pop
into
aam
add
sti
dec
sbb
mov
jmp
pop
inc
arpl
mov
mov
out
fstl
or
pop
ss
leave
dec
and
add
js
in
cmp
stos
mov
lahf
and
rorb
cli
stos
in
repz
mov
adc
inc
inc
sbbb
xchg
dec
popf
dec
pmaxsw
xchg
shlb
mov
xchg
inc
pop
dec
aad
aas
jno
mov
sub
mull
fndisi(8087
jmp
out
mov
dec
ja
adc
andb
push
xchg
push
insb
fwait
xchg
std
pop
fidivl
jbe
lahf
pop
mov
sub
test
lret
pop
sbb
lods
xor
xor
lods
mov
push
mov
scas
xchg
in
xor
mov
push
or
cmp
rcl
icebp
xchg
xchg
aaa
outsb
mov
push
addr16
mov
fadds
call
mov
out
lds
ficoml
push
add
dec
push
aam
cmpsl
cwtl
dec
mov
mov
add
sbb
mov
jl
call
cmp
jg
or
mull
lods
sbbb
out
dec
pushf
js
sbb
mov
dec
dec
cmp
jno
dec
lret
aam
out
xchg
fs
fadds
lods
push
ret
cld
push
lods
mov
xchg
lea
lahf
aam
add
test
push
lods
xor
fdivrp
cltd
xchg
jae
repnz
movsl
sbb
push
sub
xchg
mov
addr16
and
int3
inc
loop
mov
lods
out
fsubs
push
cmp
cmp
jmp
stc
sar
cmc
addr16
sub
clc
stos
xchg
leave
nop
imul
xchg
sbb
sbb
sbb
mov
dec
rclb
jne
inc
adc
and
cmc
dec
dec
sub
dec
sbb
mov
in
movsl
fildl
aaa
test
mov
int
sbb
aad
rcll
push
xorl
or
xlat
pop
popa
mov
flds
arpl
sub
push
xchg
cli
add
mov
lret
pop
mov
add
outsb
jecxz
lock
and
dec
test
fs
pop
mov
repz
scas
mov
dec
movsb
in
mov
jmp
int3
incb
enter
aam
out
fldenv
inc
sti
sub
jo
insb
imul
push
lahf
f2xm1
movsb
cmp
push
jge
call
sbb
adcl
and
cmc
in
psrad
mov
lcall
jmp
xor
jae
aas
subl
cmp
cmp
add
cmc
jl
mov
mov
andl
mov
fistps
push
inc
pop
repz
mov
xorb
and
add
adc
pop
sub
jns
mov
dec
dec
and
ficompl
test
ljmp
sub
sub
xchg
in
mov
sub
inc
mov
push
xlat
cmp
stc
mov
call
ffree
dec
add
and
mov
shlb
pop
mov
insb
data16
aam
cs
lock
scas
or
xchg
jle
pop
push
imul
popa
mov
es
cli
push
das
inc
pop
dec
dec
lods
adc
pop
test
cmpsb
sbb
mov
sbb
xor
into
hlt
mov
jge
fmuls
mov
or
notl
mov
pop
or
cmp
mov
push
mov
fdivl
adc
and
inc
outsl
int
mov
cs
int3
dec
or
adc
lds
fsubrl
lret
or
insb
mov
sbb
fdivr
decl
cmpsb
jmp
mov
into
cmp
xor
mov
cmp
dec
and
adc
fsubs
or
jp
bt
cmp
add
jg
test
mov
in
leave
arpl
push
and
jecxz
data16
loopne
and
jbe
iret
inc
popl
cmp
inc
loop
cmp
jge
stc
fwait
call
rcl
sbb
inc
mov
mov
fsubs
test
mov
div
ds
and
mov
data16
sub
fidivs
dec
push
in
sbb
aaa
jl
enter
gs
pop
sub
jmp
leave
mov
jb
mov
add
cmp
mov
outsl
and
into
mov
jae
add
xchg
ret
in
testb
mov
sub
das
mov
jecxz
cmp
mov
ljmp
sbbl
outsb
cmp
jp
testb
lret
jne
iret
xchg
outsb
sub
int3
pushf
mov
mov
xorb
mov
stc
mov
cmp
jnp
jl
pop
and
mov
pop
lahf
ret
into
outsl
fwait
pop
sbb
andl
les
pop
js
inc
push
movsl
enter
lret
mov
pop
addl
ficomps
lock
loop
mov
loop
pop
pop
xchg
call
pop
jne
mov
dec
xlat
cmp
jl
pusha
in
aas
jmp
popa
adcl
pop
out
shl
in
adc
xlat
nop
insl
pop
sub
xor
xlat
xor
pushf
inc
cmpsb
xchg
aaa
outsb
gs
cmp
jb
xor
sub
dec
jne
in
adc
icebp
dec
orb
scas
dec
pop
stos
fcompl
int
inc
dec
frstor
xor
inc
pop
inc
xchg
sub
cmpl
fldenv
or
scas
aaa
mov
pop
out
xor
mov
mov
xchg
mov
lods
and
mov
outsl
roll
cmpsl
mov
movsb
jae
pusha
cmp
mov
dec
push
jo
xor
mov
xchg
or
pop
mov
mov
inc
pop
sub
stos
outsb
fldenv
jl
mov
xchg
xchg
sbb
fwait
sub
cmpsl
mov
add
xchg
insb
push
push
pop
inc
das
push
cltd
jl
add
test
cmp
jg
nop
and
adc
xchg
inc
sbb
sahf
xchg
cmc
push
shl
inc
mov
cmp
cs
mov
xchg
sti
push
jae
addr16
sbb
mov
std
adc
xor
xor
nop
adc
mov
test
push
std
roll
leave
add
jbe
testb
sub
sub
cltd
iret
ret
add
cmp
push
popa
dec
and
dec
pop
addr16
fcompl
mov
add
addl
cmc
and
add
shll
lret
mov
stos
sti
icebp
dec
xor
mull
jmp
or
xchg
data16
dec
decb
fidivl
push
dec
cs
adc
fisubs
and
push
sbbb
sbb
dec
sbb
jle
cli
or
xchg
js
mov
adc
mov
sbb
add
shr
add
jle
lods
subb
gs
test
push
jno
mov
dec
sub
jnp
mov
jns
jmp
and
jno
out
mov
div
sbb
stc
dec
jne
fldl
jecxz
mov
jmp
adc
stc
pop
shlb
inc
lods
nop
out
jbe
in
xchg
shl
inc
jge
and
xlat
int
je
dec
sarb
mov
imul
cs
outsb
mov
aaa
fstpl
and
dec
jae
inc
sbbl
sub
mov
pmovmskb
lods
cmp
les
lret
push
pop
sbb
gs
pop
jo
cmp
dec
xor
lret
daa
mov
imul
int
cmp
lods
xlat
adc
pop
mov
dec
cwtl
xor
out
fcmovnbe
arpl
addb
mov
jno
ja
lock
adc
call
add
xchg
sub
pop
jg
test
insl
mov
popw
loope
loop
sarb
sub
scas
jmp
cli
loop
fdivl
cmp
and
lret
in
and
add
cmp
mov
int
jae
lret
fmulp
nop
cmp
out
in
mov
addr16
mov
fidivl
mov
jge
mov
xor
fcoms
imul
out
cmp
adc
pop
mov
sbb
xor
shll
inc
push
push
outsl
stc
sbb
out
and
xor
cld
pop
imul
mov
adc
mov
push
leave
cld
pop
nop
xchg
fnstcw
stos
leave
xchg
jo
pop
push
xchg
hlt
subl
clc
mov
pop
stos
push
or
adc
adc
leave
in
loopne
push
and
clc
adc
fisttps
repz
iret
xchg
addl
adc
pop
push
mov
in
push
sbb
mov
mov
pushf
sub
jns
out
loopne
dec
mov
repnz
fcmove
push
fs
mov
setnp
adc
neg
fld
xlat
push
push
fsubr
imul
subl
movsb
mov
into
push
imul
test
andb
mov
xchg
fidivs
out
std
cmp
sub
fcomps
test
test
pop
pop
cmp
jb
sub
cmpsb
movsl
cs
in
jmp
dec
dec
lcall
mov
inc
sub
mov
aad
mov
add
push
dec
xor
cmp
subb
pop
mov
push
jmp
or
jp
mov
inc
xor
std
jg
inc
add
in
inc
sbbl
repnz
mov
outsb
cmp
rolb
push
sub
sahf
cmp
or
mov
mov
mov
pop
repz
xchg
sbb
sar
and
mov
cmc
dec
test
je
out
shrb
xor
rcl
mov
sbb
ficomps
in
call
insb
sub
adc
arpl
out
repnz
imul
sbb
outsb
popa
out
xchg
add
mov
lret
xor
testl
into
xor
cmpsb
jns
cmp
xchg
scas
fsubs
inc
xchg
inc
mov
lea
outsb
sbb
inc
push
mov
cltd
sub
ficoms
gs
fucom
sub
jmp
aas
mov
lods
mov
addr16
hlt
and
mov
cli
xlat
xchg
or
sub
iret
jno
dec
lahf
sub
and
jne
inc
sahf
hlt
mov
cmp
push
mov
mov
call
mov
mov
ss
mov
pop
push
andl
add
dec
lahf
imul
sbb
je
int
dec
xor
jle
dec
adc
mov
push
ret
scas
ror
adc
shll
push
add
sub
jle
mov
in
push
xor
xor
enter
cmp
push
xor
sbb
jg
rorb
aas
cmc
into
dec
pop
test
data16
mov
xchg
mov
push
pop
mov
rorl
jle
imul
je
ss
push
rcll
inc
jo
int3
ds
xor
ds
add
je
or
pop
pop
mov
jmp
lcall
inc
push
orl
mov
pop
sub
fcoms
mov
imul
out
pop
adcl
and
xchg
cltd
mov
inc
dec
xor
aaa
subl
or
and
jmp
movsb
ret
mov
imul
shrb
je
mov
jle
dec
push
popa
sub
and
scas
push
jge
push
mov
loopne
jne
fdivrs
movsb
adc
aam
adc
scas
lods
call
nop
mov
fisubl
mov
lret
lds
in
ljmp
sub
adc
shrb
and
cmp
sub
xchg
sbb
pushf
lahf
push
dec
cmp
sti
xorb
repz
out
lahf
xchg
movsl
dec
sbb
stos
fs
mov
fsub
push
adc
movsb
ss
ret
cli
ljmp
das
xor
adc
jg
inc
xor
jbe
cmpsl
ljmp
dec
hlt
pop
mov
loopne
mov
lret
jb
add
mov
xchg
mov
test
ljmp
ret
out
or
lret
add
addl
cmpb
fld
xor
add
inc
fisubs
ss
xor
call
js
andb
lods
mov
xchg
jmp
xchg
pop
subl
std
adc
lahf
aad
stc
adc
in
jbe
xchg
xchg
ljmp
jecxz
mov
les
out
jb
das
xlat
and
jbe
aas
inc
out
enter
addr16
add
push
lahf
addr16
sahf
lea
int
xorl
repnz
in
xchg
adc
je
mov
and
jle
inc
inc
das
ss
aas
fwait
leave
call
cld
lock
lea
icebp
pop
jge
fs
loopne
add
jle
cwtl
sub
and
psubq
xchg
aas
sub
push
mov
pop
xlat
cmp
xchg
mov
inc
cmp
sbb
std
pop
sbb
sbb
and
inc
ss
cmp
das
ds
hlt
icebp
mov
cmc
or
dec
scas
push
jbe
inc
aad
cmc
notb
mov
lahf
scas
inc
out
mov
mov
dec
nop
jmp
cmp
enter
xchg
sbb
pop
in
test
or
push
pusha
xor
insb
outsl
jns
pop
mov
pushf
out
add
add
mov
rol
int3
sahf
popf
test
jb
push
jmp
inc
lahf
popf
push
lods
xor
aas
push
or
fdivl
sahf
add
lret
orl
nop
in
ds
xchg
sahf
xor
cmpsl
pop
jecxz
pop
es
xchg
dec
mov
imul
jb
stc
push
sbb
mov
sbb
aaa
adc
ljmp
scas
xor
aaa
xchg
pop
jo
es
lahf
mov
rorl
and
sbb
sub
decb
clc
hlt
sbbb
int3
sti
cmp
sbb
dec
imul
lock
lds
xchg
sub
pusha
aam
adc
adc
xor
ret
leave
mov
fwait
push
leave
jae
sbb
cmc
stos
and
pop
sub
adc
hlt
fisttpll
lock
mov
aaa
xor
mov
xor
xor
mov
lret
lds
in
mov
movsl
imul
bound
mov
call
repnz
fildll
push
ja
adc
dec
sahf
aas
mov
xor
int3
movsb
and
sub
push
mov
daa
mov
or
pop
push
nop
cmp
xchg
sbb
mov
bnd
movsl
inc
leave
cmp
test
nop
sti
mov
xor
push
outsl
jg
sbb
push
inc
add
push
scas
pop
ret
jl
lds
stos
cmp
cs
stos
xchg
movsb
pop
xor
mov
addr16
jnp
outsb
fimull
fs
cmp
nop
addr16
and
vpackuswb
mov
mov
xchg
inc
ret
out
cmpsl
pop
test
pop
and
jnp
ss
dec
out
jg
pop
mov
and
mov
jae
mov
add
pop
xchg
inc
lret
cld
inc
test
and
xchg
leave
xor
mov
cltd
fsubr
or
mov
sar
cwtl
push
fcomps
faddl
ja
add
les
jmp
lods
adc
cmp
call
dec
outsb
xorl
lcall
jb
adc
push
sbb
push
mov
sbb
fstps
push
bound
push
cwtl
js
pop
pop
adc
out
cltd
and
sbb
cmp
push
jo
jb
pop
or
subb
lret
mov
aam
fcmove
cli
scas
jmp
push
mov
movsl
ret
sub
add
fs
movb
add
mov
mov
test
or
into
pop
push
outsl
mov
cmp
jle
in
mov
or
leave
add
dec
mov
and
sti
and
aam
mov
sbb
fisubl
fsub
daa
movsl
xor
scas
mull
inc
rcll
add
in
in
cwtl
imulb
test
add
dec
outsl
sbb
ja
jge
mov
imul
and
lea
repnz
dec
add
stos
std
aas
cltd
mul
lret
std
or
pop
push
shlb
fnstsw
in
cmp
mov
cmp
loopne
cmc
adc
sub
std
stos
xchg
shlb
mov
jmp
enter
xor
insl
shl
xor
addl
mov
lods
mov
dec
jbe
cmpsl
inc
movsb
jl
sti
mov
lods
dec
loope
imul
adc
ds
outsb
dec
xor
pop
jp
shlb
sub
test
fstps
xor
popf
cmpsl
into
ds
in
icebp
pop
insb
and
xor
mov
je
or
sub
loopne
dec
push
aad
xchg
and
xchg
aad
jnp
push
push
and
faddl
sahf
mov
sub
lock
cmpsl
test
lods
jle
sbb
pop
cmpsl
dec
jo
dec
pushf
pop
les
addb
sbb
pop
mov
xchg
lahf
sbb
adc
adc
add
pop
insl
fmulp
mov
mov
xlat
dec
jo
movsb
pusha
aaa
lods
rorl
rcrb
jns
pop
push
xchg
sbb
mov
pop
jp
lds
popf
inc
or
inc
enter
fwait
cmpsl
int
cli
cmpsl
mov
ds
adc
xor
adc
icebp
cmp
sbb
into
add
pop
sub
lock
in
adc
pop
mov
scas
add
fstpl
pop
fistl
push
cli
enter
adc
cltd
or
and
insb
mov
outsl
lcall
pop
pusha
les
jle
xchg
cmpl
pop
sub
xchg
shlb
push
pop
push
push
jge
adc
jbe
inc
mov
nop
mov
xor
mov
pop
push
xor
inc
fsubp
cmp
mov
out
jmp
mov
push
inc
test
fisttps
cmp
out
pusha
sub
cwtl
test
mov
rcrb
in
in
jns
cld
push
and
jmp
cmpb
push
pusha
add
test
andl
mov
cmpsb
loopne
mov
xor
int
or
shlb
mov
cmpsl
push
fwait
jae
xchg
mov
add
loope
jle
cmp
or
test
sub
mov
mov
iret
push
jp
mov
xor
inc
xchg
lds
cltd
ret
cltd
aam
fstps
imul
push
dec
pop
jle
mov
stc
push
pushf
scas
ds
and
jnp
push
push
mov
jmp
pusha
ja
sti
sbbl
jnp
mov
popa
test
mov
pop
mov
sbb
addr16
out
daa
hlt
cli
ret
popa
mull
mov
rol
fs
test
push
pop
shll
cmp
jle
xor
mov
daa
adc
or
sarl
jge
data16
enter
xchg
outsl
pop
inc
inc
mov
jecxz
push
mov
aas
push
sbb
mov
into
jp
shll
jnp
dec
sub
inc
clc
rcrb
dec
cmpsb
scas
dec
call
fcoms
lock
pop
ret
jge
pop
jbe
lock
ret
xor
ficompl
ja
inc
pop
push
cmp
jge
pop
cmp
xchg
and
push
and
mov
cmp
sbb
icebp
mov
xlat
test
push
in
ja
lret
icebp
cwtl
inc
lock
dec
dec
ds
mov
test
out
jmp
dec
stos
sbb
cmp
cmp
sub
sub
adc
les
cmc
push
cwtl
lahf
mov
rcr
daa
imul
rcr
jne
xchg
lods
pop
idivl
jg
je
in
aas
pushf
cmpsl
data16
pushf
sbb
inc
xor
sub
pop
mov
pushl
dec
jne
cld
cltd
andb
daa
inc
test
in
add
pusha
incl
add
mov
and
cmc
push
and
and
mov
push
ss
mov
cwtl
popa
repz
mov
cmp
fcomp
cmp
or
pop
and
inc
add
in
leave
aas
ljmp
cld
outsb
cltd
sar
aam
popf
test
adc
adc
inc
jae
lds
mov
mov
test
insl
js
out
adcb
dec
add
lcall
cli
mov
cmc
pusha
mov
push
pop
inc
jnp
lcall
sub
xchg
lods
rorb
int3
ficoms
push
lahf
pop
xchg
mov
stc
mov
pop
mov
sub
ret
popf
push
movsb
pop
push
pop
fcoml
call
dec
xor
and
sbb
popa
sbb
xor
mov
sahf
repz
popw
mov
xchg
mov
rorb
mov
pusha
scas
xchg
push
lcall
nop
jo
jnp
cmc
int3
mov
pop
push
inc
dec
mov
pop
xrelease
scas
imul
push
sub
inc
rcr
xchg
lret
xor
scas
scas
jo
cmp
mov
lds
lahf
xor
lcall
cmpsl
fisubs
fsubrp
ret
loop
test
xor
cmp
mov
and
inc
mov
mov
icebp
leave
jns
cs
lret
mov
popa
mov
cmp
push
push
pop
or
cmp
cwtl
roll
popa
sub
mov
jmp
push
les
dec
into
cmp
xor
fucomp
mov
jb
push
inc
xchg
inc
pop
mov
mov
jl
mov
xchg
mov
dec
js
stc
nop
xchg
sbb
pop
hlt
arpl
dec
mov
xchg
jae
lds
clc
push
cmp
jmp
mov
jecxz
sahf
stos
je
cltd
mov
scas
jns
inc
scas
stos
add
jns
and
negl
add
ret
std
outsb
out
repnz
or
mov
dec
jo
xchg
mov
jmp
pop
test
pop
sub
or
fdivs
insb
stc
mov
jb
pushf
mov
ss
mov
mov
roll
cwtl
cli
pop
adc
mov
mov
pushf
jp
aad
sub
push
xchg
pop
repz
mov
test
fisubl
pop
dec
faddl
mov
pop
dec
xchg
das
fstp
test
mov
pop
cltd
int
pop
inc
cmp
hlt
sub
stos
mov
jmp
sbb
test
nop
xchg
in
lret
jmp
dec
fistpll
jg
mov
popa
add
hlt
mov
ret
xchg
pop
gs
jg
subb
test
mov
mov
cs
cmpsb
or
mov
push
mov
dec
inc
adc
mov
push
or
ja
aaa
fwait
or
sbb
lcall
push
sub
add
jle
adc
daa
cmp
shl
or
rclb
lret
mov
fimuls
cmpsb
mov
sbb
sbb
call
pop
push
mov
aad
pop
sbb
cmp
mov
pop
arpl
scas
stos
shlb
imul
push
fsubs
lock
cmc
mov
out
movsb
xchg
sbb
hlt
dec
cmp
stc
leave
repz
cmp
pop
mov
sti
xchg
jmp
insl
push
out
or
int
inc
hlt
test
add
sbb
fildll
sbb
adc
xchg
add
add
aam
testl
push
xchg
lcall
mov
add
fimuls
push
nop
inc
push
push
shr
mov
insl
imul
fildl
cli
mov
test
pusha
movsb
mov
push
xchg
shll
adc
jno
jg
andb
and
repz
add
in
insb
pop
cmpsb
pop
pushf
push
rclb
xlat
add
idivl
ret
add
loop
dec
mov
xchg
imul
sbbl
div
jbe
mov
lods
adc
dec
push
aam
inc
test
and
inc
out
pusha
sub
or
loopne
aaa
stos
insb
adc
jbe
mov
es
dec
nop
mov
in
icebp
ret
mov
enter
push
cld
xchg
xor
lret
inc
add
or
jmp
fcompl
in
gs
sub
push
aaa
jb
shll
push
stc
inc
push
cwtl
mov
dec
push
insl
mov
icebp
and
int3
pusha
inc
xchg
xchg
xchg
movsl
iret
and
lret
xchg
inc
test
inc
xor
xchg
mov
cmp
or
add
or
cmp
sbb
adc
test
jns
add
lds
sub
hlt
cmp
std
fwait
jge
loope
jl
pop
in
loop
xchg
xchg
add
mov
push
xor
xchg
xchg
inc
fildl
sbb
jns
mov
or
pop
psubusb
adc
or
jle
aaa
or
mov
pop
imul
stos
fs
lcall
pop
add
cmpsl
adc
pop
dec
jne
xlat
hlt
and
rcr
call
sub
ljmp
fs
or
adcb
rorl
repz
sar
dec
test
jge
daa
adc
xor
jl
arpl
xchg
lret
iret
fisttpl
adc
mov
cmp
jae
push
add
vrcpps
test
scas
jecxz
dec
push
daa
pop
mov
repz
mov
mov
push
push
dec
lret
xchg
mov
dec
xchg
inc
jle
ret
sub
cmp
mov
sub
cli
or
iret
cltd
push
jecxz
dec
dec
xchg
scas
insb
cmc
leave
push
lret
out
jne
int
pushw
in
call
jnp
dec
pop
inc
aad
pop
sbb
leave
outsl
adc
xchg
cmp
lods
and
inc
sub
push
mov
fidivrs
sti
push
js
js
test
add
dec
fs
aad
pop
subb
adc
jb
sbb
xor
adc
jb
pushf
mov
test
loop
xchg
pusha
ret
and
sub
mov
inc
push
or
push
in
sub
cmc
loopne
mov
scas
int3
sub
std
xchg
sahf
fidivrl
cmp
xchg
cs
inc
das
in
xlat
adc
pop
fistpll
roll
int
mov
ds
lds
ret
add
inc
xlat
pop
xchg
std
fcmovb
sti
pop
push
test
mov
add
mov
sbb
xor
jp
insl
jno
dec
mov
pop
xchg
jnp
and
shll
or
daa
jb
sbb
mov
push
or
jb
push
sahf
xchg
xchg
clc
iret
les
iret
out
cld
lret
out
scas
cmp
out
xchg
lahf
loopne
xchg
call
pop
adc
out
mov
mov
inc
jmp
mulb
mov
inc
lds
outsb
insb
ljmp
das
push
ss
mov
mov
jmp
mov
inc
xchg
xchg
mov
outsl
call
aam
and
aas
add
add
sub
nop
pop
pop
out
or
or
push
in
sbb
or
jne
pushf
mov
push
inc
sarl
and
mov
jmp
push
lock
sbb
out
inc
and
out
mov
lret
das
arpl
cmpsb
fmuls
pop
outsl
fistl
cmovne
mov
fidivl
hlt
int
les
add
add
jo
dec
mov
in
xor
insb
push
ss
jo
ja
mov
imul
insw
sti
insl
inc
and
out
cmp
mov
push
ret
addr16
mov
xchg
dec
icebp
daa
mov
std
adc
or
or
andb
jl
cmp
push
mov
imul
add
adc
sbb
sbb
mov
out
mov
mov
inc
sbb
pop
repz
stos
repz
int
push
lret
out
xor
push
mov
iret
bound
jecxz
inc
inc
and
cmp
sub
cmp
fsts
stc
aad
arpl
sbb
add
and
mov
adc
mov
icebp
and
push
xchg
xor
movsb
fadds
jo
xchg
xchg
gs
cmpsb
add
xor
xchg
stc
aam
jg
mov
mov
loopne
popf
cli
repz
lahf
repz
xchg
ss
sbb
fwait
cmc
stos
push
mov
mov
andb
jno
sti
mov
xlat
mov
xchg
lea
mov
xor
xchg
push
mov
fucomip
stc
mov
jge
cmpsb
inc
mov
mov
add
mov
add
dec
cmp
inc
enter
mov
jmp
imul
js
iret
xchg
out
cmp
call
mov
mov
gs
hlt
cmc
push
or
xor
mov
fsubl
xor
cmp
sbb
rcrl
add
dec
pushf
add
and
sub
dec
pop
or
pop
and
pop
xor
push
mov
lret
fimuls
sti
pop
nop
clc
fdivs
xor
mov
addr16
lods
aas
movsb
jmp
and
xor
xchg
idiv
mov
fisttpl
jge
jle
ret
or
mov
pop
shrl
cmovs
push
or
fadd
nop
ret
and
xchg
pop
mov
lret
insl
xchg
adc
rolb
scas
cltd
pop
dec
icebp
and
fsub
jnp
out
xor
sbb
mov
mov
adc
lret
iret
cmpsb
and
sbbl
mov
cmp
test
mov
pop
mov
out
pop
inc
xchg
xchg
add
xor
mov
xchg
lock
call
adcl
hlt
scas
sahf
push
xchg
jbe
adc
pushf
aaa
call
stos
or
out
lods
fistps
dec
xchg
ret
adc
jmp
pop
xchg
mov
shr
jge
aas
mov
lea
cmp
loope
push
mov
xchg
cmpsl
inc
mov
cld
pop
jl
out
repz
loopne
push
cwtl
or
sub
std
fdivs
rcr
ret
and
xchg
mov
js
lret
out
lds
sbb
push
mov
cwtl
sti
push
add
lcall
mov
and
iret
movsl
ret
sbb
div
lock
adc
out
push
mov
ja
hlt
cmc
les
rclw
or
pop
or
stos
outsb
push
arpl
fistpl
xchg
aad
dec
dec
fmul
mov
mov
ret
lahf
jns
and
mov
lods
xor
mov
push
push
xchg
or
repnz
leave
inc
lret
stos
rolb
filds
mov
mov
fst
ret
and
lock
or
clc
js
dec
fwait
sahf
lea
jg
jecxz
add
in
leave
cld
mov
cltd
mov
push
jmp
sub
orl
mov
repz
push
imull
mov
dec
jle
loope
bound
es
lock
xlat
setns
add
mov
xor
mov
pusha
test
std
ret
add
sub
or
sarl
js
ljmp
jmp
in
insl
sbb
and
rcrl
inc
pop
adc
ret
stc
lods
ljmp
and
jae
mov
stos
mov
lret
pusha
mov
dec
jne
je
lret
mov
negb
mov
movsb
inc
jmp
dec
insb
js
imul
xchg
shld
fisttpl
daa
orb
pop
sarb
mov
out
jae
push
addr16
jno
scas
lock
mov
imul
callw
mov
movsb
arpl
jmp
movsl
xchg
mov
int3
ss
dec
inc
pop
lock
sbb
jne
leave
cmp
fwait
ds
sahf
shlb
adc
cmp
sub
or
mov
ret
mov
push
insl
xchg
lret
push
sbb
jae
pusha
mov
pop
cwtl
xor
inc
jne
jp
sti
mov
iret
xor
shrb
jns
mov
mov
loopne
test
aaa
rorb
cmpsb
xchg
mov
pop
fsub
ja
add
daa
and
or
insl
and
fwait
pop
mov
loope
jg
or
stos
out
in
xchg
cwtl
mov
cmp
stos
mov
push
pop
mov
push
jno
mov
aas
daa
and
and
xchg
mov
inc
shlb
lret
push
pop
inc
in
pop
rcl
dec
lods
loop
test
adc
sahf
pop
js
in
addl
std
outsb
xor
jb
enter
sbb
test
push
mov
xchg
mov
popf
sarb
cli
in
loope
xor
xor
clc
cmp
mov
inc
mov
sub
cmp
sub
push
popa
mov
std
loop
stc
fstl
iret
aaa
subl
fidivl
movsb
xchg
fstpl
mov
sti
jb
jb
mov
dec
jne
mov
sbb
das
aam
push
sbb
jmp
push
pop
mov
subb
addps
mov
cmp
cwtl
and
dec
addr16
xchg
das
xor
repz
dec
mov
xor
push
iret
push
mov
mov
and
add
stos
lods
mov
int3
pop
jbe
stos
pop
in
leave
nopl
outsb
mov
stos
xchg
dec
jl
test
and
shrb
stos
ss
popf
sbb
sbb
pop
xchg
lcall
in
adc
sub
lahf
jecxz
fwait
sarb
sub
insl
dec
cmpsl
mov
jge
mov
inc
repz
in
inc
sub
cmp
mov
popf
sbb
pop
insl
mov
jmp
mov
lock
cmc
lahf
test
mov
fisttpll
outsb
lahf
outsl
popf
add
mov
sti
cmpsl
push
pop
mov
xchg
lcall
jp
mov
mov
xchg
lret
lods
sbbl
xchg
dec
add
sub
lods
movsb
cwtl
cmpb
jle
std
xchg
test
fidivrl
out
xchg
ja
pop
lds
leave
pushf
test
adcl
icebp
dec
fstl
adc
adc
test
dec
or
fiadds
pop
jge
insb
test
mov
adc
mov
jp
or
mov
cmc
addr16
leave
loopne
aam
ficompl
cwtl
outsb
fcompl
adcl
mov
ret
imul
sbb
rcrl
jmp
shrb
bound
aam
xor
cmpsl
dec
xor
rorb
sahf
gs
jle
fsubs
ja
rcll
and
negl
inc
stc
add
cli
pop
rep
pop
out
imul
fisubrl
pop
cltd
xor
arpl
lea
adc
in
add
or
out
push
cmp
push
mov
jg
xor
push
scas
into
outsb
in
jo
out
loopne
dec
popf
sahf
lret
push
inc
ret
sbbl
xor
fisttpll
lret
cmc
daa
lcall
pop
lds
pop
cmc
fwait
loop
pushf
mov
popa
jb
xchg
mov
pusha
jl
scas
bnd
mov
mov
xchg
lret
ljmp
dec
jp
push
les
data16
sub
cli
pusha
pop
shr
in
adc
data16
sbb
add
in
in
out
adc
mov
addl
and
push
fstpt
and
js
or
sub
push
push
insb
cmp
ret
out
and
hlt
rcr
pop
imul
push
stos
jg
jbe
inc
mov
insb
sbb
inc
lds
dec
fwait
jno
xor
sbb
test
add
sbb
cmpsl
out
xor
adc
jae
mov
aas
inc
jnp
or
push
mov
or
sahf
and
inc
jecxz
mov
add
imul
mov
push
stos
jl
cmp
aas
fidivrs
stc
sub
sbb
ljmp
lea
mov
dec
in
ds
movsl
shrb
inc
scas
jne
xchg
mov
aaa
loop
xor
mov
push
add
adc
fs
cltd
test
add
mov
inc
push
les
and
mov
outsb
jo
mov
sti
mov
out
or
and
jmp
xchg
pusha
push
xchg
pop
clc
in
cs
xchg
pop
or
add
xlat
int
or
loope
cmp
rcrb
shll
mov
lcall
or
push
pop
aam
lds
sbb
inc
pop
notb
ret
push
loope
popa
push
push
rcr
repz
fcompl
jnp
push
push
cmp
repz
jbe
jmp
inc
sbb
aad
arpl
lea
into
xchg
inc
orb
adc
push
cmp
imul
or
sub
clc
pop
shlb
mov
inc
ficomps
pusha
or
rorb
icebp
fs
roll
jmp
sti
das
lcall
loop
mov
mov
insb
and
stos
ja
mov
mov
in
lods
ljmp
dec
in
or
popa
adc
mov
rcr
or
leave
data16
fcmovnu
jae
xchg
xlat
sub
data16
cwtl
movsb
ret
push
or
or
inc
and
xorb
aam
cmp
dec
mov
ss
pop
and
cmpsb
add
ja
leave
pop
sbb
pop
dec
lods
pop
adc
mov
or
sbb
rcr
sbb
mov
push
imul
fyl2xp1
ja
lret
sbb
ljmp
and
das
adc
incb
js
push
or
call
pop
mov
div
xor
js
sub
adc
out
lock
adc
and
pop
es
orl
or
add
dec
push
mov
dec
mov
jne
fiaddl
inc
test
and
iret
push
outsb
xchg
imul
test
cwtl
add
es
push
es
dec
cmp
leave
dec
xchg
setg
mov
inc
dec
cmpsl
push
js
mov
mov
shrb
pop
push
or
in
out
dec
dec
jb
mov
das
in
jmp
adc
cmpb
pop
xchg
stc
mov
aam
imul
xorl
mov
out
cmpsl
adc
incb
dec
lea
push
lods
out
fdivrs
sub
in
dec
flds
int
add
inc
jne
jecxz,pn
ds
pop
pusha
pop
lret
out
mov
pop
fs
ljmp
out
sub
jno
fbstp
pop
ljmp
sbb
push
pop
mov
sbb
in
aaa
lods
mov
jns
pop
addr16
push
cmp
insb
ljmp
dec
mov
mov
mov
and
sub
iret
and
inc
xchg
es
dec
inc
loope
mov
push
ret
bound
and
leave
jg
pop
mov
push
outsl
or
push
xor
adc
push
mov
int
pop
and
lea
adc
sub
and
inc
dec
jecxz
pop
xor
leave
xchg
sub
stos
loopne
add
stc
stos
mov
pop
xchg
movsb
incb
sub
cmp
and
cli
dec
xchg
mov
dec
call
mov
wbinvd
inc
aad
ss
loope
dec
and
stc
insb
cmp
jle
or
xor
mov
iret
iret
fmull
adc
popf
insb
jno
pusha
shrb
jg
imul
mov
jne
fcmovu
cmc
loope
out
mov
mov
imul
je
mov
shrl
outsb
lods
out
fistps
adc
add
jne
sbb
mov
cli
sub
xor
es
or
push
push
jp
pop
add
sub
push
inc
xchg
xchg
adc
mov
mov
sbb
push
pop
mov
loopne
mov
xlat
push
cmpsb
xchg
movsl
popf
test
pop
jecxz
mov
imul
iret
sub
inc
pop
jae
inc
jmp
es
sub
or
dec
test
cwtl
xchg
scas
imul
push
cld
mov
mov
adc
shl
and
xchg
test
sub
dec
test
notb
lcall
pop
ret
pop
mov
mov
mov
pop
in
mov
cs
es
fnsave
inc
mov
or
dec
sbb
daa
stc
imul
jle
add
cltd
dec
xor
add
pop
xlat
data16
and
out
cld
jno
pop
mov
std
cmp
mov
and
push
stos
ss
into
xor
lock
movsb
sti
jbe
test
in
mov
out
dec
push
ljmp
xchg
pushf
popa
imul
sub
mov
aad
push
das
xchg
scas
sub
adc
adc
dec
or
ja
subps
sbb
inc
out
push
jp
clc
pushf
jbe
add
xor
push
jns
mov
fnstenv
push
inc
cmc
into
xlat
mov
rcrb
inc
into
out
int3
cmp
ret
jmp
push
dec
repnz
mov
jne
and
jl
cmp
imul
jbe
push
inc
mov
negb
es
cmp
frstor
mov
pop
int3
mov
loope
leave
adc
sub
sub
popa
mov
addr16
int
cld
test
orb
aam
shlb
adc
jg
push
pusha
ficoml
push
das
ja
xor
inc
mov
jb
sahf
out
xor
pop
push
cmpsl
lahf
idiv
mov
out
dec
insb
xor
sbb
pop
jo
int3
icebp
sub
adc
ljmp
or
lret
fwait
and
mov
mov
mov
adc
xor
arpl
pop
add
int
mov
xor
movsl
arpl
fisubl
cmpl
in
loop
jge
mov
je
sarl
xchg
push
scas
mov
sbb
hlt
ret
mov
mov
inc
imul
lea
in
test
movsl
xor
mov
loopne
and
xorb
xor
insb
xchg
in
shll
sub
add
mov
mov
sbb
cmp
iret
clc
fisubs
test
dec
mulb
pop
popf
popf
fsubs
cmp
or
imul
push
popf
into
cld
mov
in
popa
scas
xchg
mov
jbe
scas
sub
mov
popa
fdivrp
rclb
add
loopne
xor
insb
repnz
xchg
sub
cmp
sbb
rolb
sub
lahf
in
pop
leave
insl
adc
or
lods
not
pop
dec
cmp
sub
lods
lea
cmpsl
aam
jnp
jp
pop
pop
cmp
into
push
repz
stc
mov
lods
jecxz
add
or
lcall
into
push
adc
call
push
cmp
iret
push
movsb
jge
push
cmc
icebp
jns
rcrb
nop
insb
mov
xlat
jge
in
popa
popa
pop
inc
dec
mov
sbb
push
jne
repnz
dec
test
mov
testl
xchg
adc
mov
pop
loope
mov
sahf
js
rcl
mov
das
cmp
repnz
dec
lods
pop
push
ljmp
dec
test
add
mov
movsb
iret
out
xor
enter
xor
xor
aas
or
cmp
jmp
push
icebp
jmp
pushf
add
xchg
jle
aas
sti
cmpsb
xlat
ret
jbe
push
mov
or
jo
lret
cmpsl
cmp
sbb
pop
jmp
mov
dec
add
dec
sbb
dec
adcb
test
fmull
pushf
test
out
mov
movsl
jne
push
jmp
in
pop
lcall
data16
scas
pop
xlat
pop
adc
xchg
inc
int
out
testb
mov
push
leave
pop
mov
mov
jnp
dec
push
push
add
inc
inc
testb
pop
pusha
pop
xor
pop
jbe
dec
dec
lods
iret
push
sub
add
cmp
add
jg
orb
push
dec
stc
shlb
sahf
insl
scas
fdivrs
xor
mov
adc
test
mov
inc
cmp
sub
ja
loopne
addr16
dec
movsl
xchg
fstl
add
cmp
js
imulb
push
sti
leave
cmp
dec
mul
and
mov
fdivr
cli
push
inc
and
jbe
fsubs
jge
lock
add
sub
add
hlt
leave
jno
inc
inc
xchg
push
das
arpl
js
push
dec
test
lock
shr
lds
mov
jbe
sti
gs
inc
mov
jns
inc
sbb
inc
lods
adc
add
lcall
lds
inc
push
cmp
dec
cmp
jno
fiadds
fldcw
xor
lret
js
iret
dec
push
mov
outsl
xchg
dec
arpl
iret
aaa
pop
stos
fists
push
das
repz
pop
xchg
popa
test
mov
out
notl
mov
add
adc
push
stos
movl
push
rclb
add
pushl
scas
test
push
or
insb
clc
cwtl
xchg
xor
sub
dec
dec
xchg
pushf
xchg
cmp
sbb
xchg
xor
nop
lods
xlat
push
dec
fs
in
int3
lret
xchg
in
into
xchg
cmp
loop
popa
or
bound
dec
jns
add
jmp
test
xchg
adc
sbb
stos
mov
test
outsl
cmp
jge
inc
incb
cmpb
mov
or
leave
lods
stos
jp
xchg
aaa
rcrl
sub
out
jb
test
and
std
ja
leave
out
iret
rcll
adc
adc
cld
lods
or
pop
sahf
cld
push
test
inc
mov
inc
lods
adc
clc
mov
outsl
cmc
sbb
pusha
cmp
pop
dec
jg
imul
sub
pop
insb
add
in
cs
push
push
push
mov
rorb
test
add
cmpsb
jne
fst
fiaddl
cltd
xor
xchg
and
push
xlat
js
lock
push
mov
iret
repz
lds
mov
inc
xchg
cmc
popf
out
add
and
imul
out
ror
add
mov
pusha
ffree
add
enter
aaa
mov
call
cs
xchg
jge
subl
mov
in
test
cmp
xor
push
mov
pop
adc
fsubs
adc
sbb
outsb
fs
gs
mov
out
cmpsb
mov
sbbl
cmp
lret
cmpl
stos
lahf
dec
mov
insb
pop
inc
add
sti
movsl
decb
scas
or
stc
cmc
ljmp
std
fisubs
mov
push
andb
pop
movsb
gs
inc
and
scas
test
mov
leave
add
mov
adc
arpl
inc
daa
add
mov
das
ficoml
xchg
push
in
inc
or
or
dec
inc
or
lcall
mov
enter
and
int3
std
xor
push
or
pop
leave
rcrl
xor
ds
dec
adc
and
mov
ss
roll
or
iret
test
stos
mov
add
mov
or
pop
and
sbb
cmp
sahf
add
int
stos
push
mov
and
mov
mov
pop
lea
add
lret
inc
roll
push
icebp
sahf
pusha
jecxz
int
loope
push
scas
pop
mull
and
mov
jb
push
add
push
pop
pop
mov
cmp
aas
sarl
or
andl
ds
adcl
aam
or
pop
faddp
mov
xchg
xor
push
mov
xchg
out
push
outsb
mov
pop
mov
pop
daa
push
je
jns
insb
sahf
jp
and
pop
fscale
out
cli
jmp
aad
loope
push
xchg
sbb
mov
mov
pop
lcall
mov
push
cvtps2pd
mov
sahf
imul
jp
into
cmp
push
push
push
mov
xor
int3
mov
imul
inc
div
loopne
lea
ret
add
in
xor
add
xchg
dec
stc
cmc
mov
cmc
cld
fstps
sub
xor
clc
cmp
cmp
cld
mov
cmpsb
jle
std
call
cltd
loop
dec
out
out
xchg
and
jle
mov
shr
cli
mov
push
cmp
incb
jl
stos
dec
jnp
mov
or
pop
daa
push
dec
bound
pop
int3
ds
scas
cmp
lea
jno
movsl
or
push
jb
and
addr16
jmp
add
in
cs
and
sub
lods
mov
pop
imul
repz
ljmp
test
aam
sar
out
in
pop
inc
cmp
mov
filds
or
fdivrl
push
pop
loopne
xorl
outsl
out
mov
sub
leave
sub
cmp
loope
mov
stos
inc
in
lea
inc
mov
test
or
adc
call
les
add
test
mov
mov
in
pop
popa
out
xchg
add
addr16
cltd
jg
cmp
bound
jns
mov
mov
pop
cmp
imul
int3
jl
adc
inc
sbb
push
cld
test
lock
sbb
mov
movsl
int3
mov
hlt
jnp
sbb
sbb
mov
mov
sahf
loopne
push
insb
out
sar
mov
mov
in
or
or
cli
iret
scas
inc
inc
mov
std
pop
sub
aam
sub
adc
jl
out
test
mov
or
repz
dec
add
adc
lahf
xor
faddl
cmc
pop
push
sahf
sbb
jb
popf
xor
mov
lcall
outsl
mov
cmp
lock
jbe
bound
scas
cmp
test
mov
cltd
daa
inc
jnp
adcl
mov
jmp
daa
pop
rolb
mov
int
rorl
mov
aas
leave
leave
mov
fcmovb
jb
outsb
les
into
ja
dec
fisttpl
mov
js
and
rol
push
mov
push
ficoms
lahf
pop
push
fdivrl
cmp
mov
shll
aam
into
pop
push
outsb
jns
imul
mov
xor
ss
xor
inc
popa
and
mov
icebp
push
xor
mov
pop
enter
pop
cmpsb
enter
leave
mov
mov
imul
repz
out
enter
fs
mov
sti
scas
push
out
es
loopne
rorl
pusha
inc
or
scas
pop
movsl
insl
jmp
out
out
lcall
lods
pop
pop
mov
mov
enter
sbb
push
je
aam
xor
ret
push
subl
or
mov
jo
lods
cmp
addr16
and
inc
xlat
pop
cmp
inc
xchg
jno
into
stc
jnp
mov
cmc
xchg
test
pop
xor
adc
pop
cmc
xchg
xchg
xchg
icebp
aas
pop
inc
sbb
mov
std
cmp
fcomi
mov
sub
and
xchg
mov
adc
and
test
into
pop
fisubl
mov
pop
cmp
inc
sub
sbb
pop
or
sbbl
into
sub
aaa
cwtl
jp
mov
clc
repnz
pop
in
inc
ret
push
sbb
sar
sahf
pop
jno
adc
movsl
pop
pop
cmpsl
mov
xor
sub
mov
pop
push
sbb
loop
mov
ds
fsubrl
xchg
cs
pop
das
mov
inc
mov
add
sbb
inc
pop
xor
jp
cmc
cmp
add
bound
into
testl
pop
push
movsl
loope
xchg
mov
ret
sbb
xchg
imul
cmp
or
dec
insl
sbb
xchg
sub
cltd
xrelease
inc
mov
stos
es
mov
cwtl
mov
les
call
lcall
sub
adc
movsl
xor
pop
mov
int
stos
mov
notl
inc
stos
loope
mov
jecxz
mov
sbb
in
or
inc
mov
mov
test
cld
jmp
add
or
insb
jae
cli
cwtl
xchg
shrb
sub
shll
cmc
orb
mov
clc
sbbb
aam
sub
scas
add
mov
inc
ror
cmp
jge
pop
mov
inc
nop
decl
in
jmp
mov
or
rcrl
cli
fstps
adc
dec
sbb
push
fs
ret
mov
add
lret
jecxz
pop
fnsave
pusha
xor
leave
das
and
mov
mov
ret
inc
xor
and
loope
pop
stc
and
mov
sub
push
or
cmp
sub
sbb
int3
ss
jecxz
sbb
pusha
and
pop
jbe
in
jge
insl
dec
xlat
shll
inc
lahf
pop
rol
imul
not
js
sti
pop
mov
jecxz
add
push
push
cltd
dec
push
repnz
insb
fwait
xor
js
ljmp
bound
adc
fadds
or
shr
cld
call
jbe
dec
outsl
out
mov
jle
lcall
sbb
mov
jecxz
leave
lret
mov
popa
orb
adc
xor
cs
imul
dec
lds
adcl
push
in
xchg
inc
movsb
pop
lock
mov
xor
sub
mov
call
adc
lock
pop
shr
or
push
and
jno
popa
jb
cmc
out
mov
and
shl
int3
scas
loope
sbb
jmp
mov
test
out
mov
in
enter
pop
fnstenv
inc
mov
jl
repnz
cmp
rolb
cmp
out
xlat
shll
sub
xorl
pmullw
mov
and
ret
xor
sub
mov
loop
adc
les
xorb
ret
xor
mov
cld
xchg
lock
daa
jle
push
imul
inc
lods
fnstenv
mov
mov
out
adc
lods
mov
push
lods
xchg
pop
pop
jne
int3
ret
ljmp
je
jb
bound
adc
scas
jo
mov
adc
jbe
ret
insb
movsb
inc
push
popf
xor
daa
cli
and
das
clc
push
inc
xor
mov
ret
aad
aas
sbb
add
int
xor
loop
in
in
dec
ds
mov
popa
mov
loope
cli
lcall
mov
jmp
fadds
xor
movsl
pop
sub
or
xor
lods
xor
lods
rcrb
sub
mov
sbbl
fistps
or
cmp
fwait
lds
or
adc
inc
jle
push
adc
imul
lea
cmp
rolb
lret
mov
ljmp
cmp
xlat
pop
inc
or
dec
pop
loop
lahf
jae
rcr
outsb
test
sub
add
or
je
sbb
add
push
adc
jg
insb
inc
cmp
ret
and
or
add
push
mov
cli
into
jbe
lods
fwait
sbb
jmp
fwait
jns
xchg
mov
sub
out
cmpsb
repz
add
dec
mov
and
sub
popa
lods
ljmp
aaa
ljmp
xchg
fistps
movb
or
inc
dec
inc
aas
rol
xor
cmp
or
inc
dec
hlt
lock
out
pop
sbb
push
and
test
repz
in
iret
push
or
ret
mov
faddl
add
test
fwait
aad
loop
iret
jns
xor
sbb
ret
push
lahf
imul
jmp
outsb
notl
insl
fistpl
cwtl
push
subl
cwtl
inc
mov
sbb
stc
lahf
psraw
mov
add
xchg
mov
rcl
in
cltd
fsubs
pop
cmp
out
scas
repz
jp
aas
fsubrs
xchg
add
pop
pop
adc
loopne
leave
loope
std
xchg
or
rcll
inc
cmp
mov
jle
cld
js
jge
dec
push
sbb
jbe
xchg
cli
xchg
daa
sub
push
cltd
lods
add
cs
xchg
mov
push
mov
xor
call
scas
nop
icebp
cwtl
frstor
nop
fisubl
lods
adc
pop
gs
gs
xchg
xchg
outsb
inc
mov
xchg
gs
cs
out
mov
imul
test
aam
mov
cs
inc
fldt
rcr
dec
test
icebp
xchg
add
std
cmp
cld
and
and
fcompl
sub
mov
test
out
jp
mov
shlb
mov
push
mov
or
lahf
xor
push
imul
ljmp
add
mov
faddl
sub
scas
lcall
xchg
cmp
add
xor
mov
gs
jo
sbb
test
sbbb
in
cmp
mov
clc
adc
rcrb
jl
mov
pop
testb
in
and
mov
iret
shrb
jbe
lods
fdiv
adc
pop
mov
or
int
jb
sbb
subb
adc
test
dec
enter
inc
xor
jp
es
sbb
push
stos
add
pop
jg
in
jb
fbld
push
sahf
and
dec
out
sarb
inc
popa
xchg
fidivs
lret
mov
lock
jp
mov
dec
repnz
mov
mov
sub
in
ss
adc
add
popf
add
pushf
mov
outsb
dec
fbld
pop
aaa
sti
dec
or
pop
dec
stos
andb
dec
xor
pusha
mov
sub
out
int3
cmp
addr16
mov
xchg
pop
arpl
fmull
hlt
jnp
fwait
mov
dec
fwait
stc
xchg
adc
xchg
enter
mov
pop
in
arpl
mov
jnp,pn
and
xchg
mov
xchg
leave
xchg
adc
dec
sbb
add
fisttpll
pop
mov
mov
pop
and
stc
dec
ret
push
mov
dec
and
xor
ljmp
cld
fdivs
xchg
fdivr
leave
popa
push
push
mov
mov
pushf
sbb
push
out
pusha
pushf
mov
push
ja
xchg
mov
scas
or
cmpsl
sub
cmpl
mov
pop
push
jbe
dec
push
out
js
addl
inc
xchg
pop
rcrl
and
and
fistps
and
jne
lods
lods
push
fwait
loopne
mov
add
fsubrl
nop
imulb
inc
dec
inc
clc
out
ja
mov
inc
pandn
push
daa
test
adc
movsl
add
stc
push
sahf
and
lods
sub
push
out
ret
lcall
lds
xor
pop
sti
arpl
jno
enter
lock
push
lds
shl
xor
xchg
xor
push
mov
xchg
sbb
xchg
adcb
movsw
push
mov
into
adc
std
xchg
shl
ret
mov
outsb
xchg
incb
sbb
in
lcall
fdivl
lcall
cwtl
sub
sbb
shl
dec
movsb
cld
stos
adc
and
lea
cmp
xor
or
mov
xchg
mov
mov
jnp
mov
pop
cmp
mov
push
repz
out
enter
jbe
push
sbb
dec
outsl
inc
je
insl
cltd
lahf
sarl
fcom
dec
sbb
pop
inc
jge
scas
push
dec
in
int3
clc
adc
mov
test
add
inc
mov
mov
inc
add
inc
stc
xchg
sub
sahf
inc
aas
push
inc
xor
xchg
jmp
rcl
mov
sbb
mov
jno
and
push
or
or
imul
imul
out
mov
ret
data16
jb
pop
sub
and
add
faddl
jle
mov
cmp
push
divl
stos
mov
xchg
repnz
mov
mov
aas
sahf
out
xor
shll
adc
cld
push
push
incl
out
inc
push
mov
ljmp
std
mov
inc
hlt
cmp
push
mov
in
add
sti
jae
test
xchg
cmpsb
inc
clc
mov
dec
mov
data16
mov
loope
mov
push
clc
hlt
lahf
lods
or
push
xor
test
lret
xchg
cld
sahf
inc
in
sbb
leave
jno
jno
aad
mov
mov
fnstenv
test
pop
lahf
bound
ss
cs
jl
mov
mov
and
push
addl
test
cmp
xchg
xor
ljmp
mov
ss
rorb
dec
mov
dec
out
push
jmp
sub
mov
nop
jg
mov
addr16
jle
jbe
cmpsl
push
cmp
iret
ja
jo
push
cmp
and
repnz
pop
cmc
aaa
rorl
push
addr16
pop
sti
dec
popa
and
les
cmp
jo
dec
stos
sub
leave
dec
clts
pop
mov
xchg
insl
aas
push
into
sbb
js
jno
std
xor
sub
mov
mov
mov
push
dec
jecxz
mov
nop
out
and
pop
push
lea
imul
push
not
fsubl
repz
mov
xor
fstps
or
jns
jle
sbb
xor
pop
arpl
mov
hlt
clc
imul
pusha
lret
fidivrs
xor
cltd
leave
mov
aas
inc
decl
cwtl
cwtl
in
fucomp
sbb
lret
mov
adc
fdiv
imul
and
sti
fldl
pop
outsb
movsb
clc
mov
jmp
dec
lahf
dec
dec
andl
cmp
jns
jne
sbb
adc
test
bound
mov
mov
jl
in
loope
out
push
fwait
mov
xchg
test
or
clc
pop
pop
push
mov
xchg
sti
call
fwait
into
ficoms
int3
or
inc
call
ret
cwtl
push
scas
cmp
pop
jnp
or
mov
sub
sub
pop
inc
lcall
pop
push
and
into
xchg
mov
push
add
clc
push
cmp
sbb
push
pop
insl
fldcw
and
cmp
hlt
jmp
add
xchg
shl
mov
repnz
sub
mov
sub
mov
fdivrl
adc
add
or
lea
cmp
mov
jns
test
lcall
mov
inc
aam
push
xor
in
clc
or
inc
aad
lcall
negl
out
pop
mov
aas
das
ret
pop
and
imul
jne
sbb
jp
pop
cmp
test
test
mov
sarl
in
mov
pop
stc
xor
movsl
test
mov
dec
lahf
mov
mov
inc
daa
jl
gs
or
mov
xchg
and
sub
sbb
dec
or
xor
mov
test
insb
mov
movq
das
jp
shl
clc
fimull
ret
mov
pop
mov
inc
push
mov
pop
sbb
adcl
negb
push
clc
je
lds
mov
cmpsb
cmp
sarb
push
repz
mov
pop
lock
xor
out
cltd
push
je
movsl
jno
in
push
test
inc
mov
in
ss
into
push
pop
loope
pop
scas
ljmp
lret
adcl
lahf
push
repnz
ljmp
aas
cmp
mov
ror
outsb
insb
xor
cmp
dec
hlt
push
jns
popa
jmp
arpl
inc
or
mov
loope
repnz
xor
les
lds
outsb
xor
xor
test
pusha
pop
cmc
shrl
and
adc
scas
xchg
xchg
inc
loop
iret
dec
into
cmc
push
ds
mov
adc
jbe
repz
and
dec
push
sub
push
dec
insb
insb
mov
jecxz
sub
mov
jb
mov
test
roll
or
mov
inc
aam
jp
adc
aas
adc
jle
iret
cmp
push
fsts
shl
addr16
aam
je
mov
sub
sahf
mov
xor
or
xchg
aam
popf
popa
sahf
notb
lahf
dec
mov
jl
loopne
add
and
pushl
ret
in
int3
mov
mov
cmpsl
call
jnp
pushf
jnp
getsec
pop
jb
push
shrl
xor
cmp
addr16
stc
adc
push
cli
scas
adc
ficomps
out
push
out
insb
mov
in
jp
bound
ret
iret
sbb
ficoml
int
mov
daa
pusha
cld
ss
and
cli
xor
in
scas
sub
andl
add
or
fs
lahf
cmpsl
sti
or
movsb
popa
sub
mov
aas
inc
aam
pusha
pop
lods
inc
enter
push
mov
dec
push
xor
or
push
inc
and
pop
and
inc
ret
test
sub
fidivrl
pushf
xchg
or
jmp
dec
bound
shll
sub
adc
adc
jecxz
jns
mov
dec
cli
pop
jo
aaa
or
leave
mov
xchg
push
fucomi
in
lods
lcall
mov
pop
int3
mov
lahf
or
mov
cltd
jle
in
inc
shr
movsb
push
or
or
out
xlat
pop
jb
push
dec
mov
mov
sbbl
jmp
adc
bound
ljmp
push
repz
xor
xor
push
pop
and
std
pop
cld
xchg
xchg
imul
andl
mov
movsb
push
mov
cmp
push
shrb
adc
std
sub
ret
cmp
and
push
popa
or
popa
xor
push
and
pop
enter
movsl
xchg
or
scas
into
cmpsl
subb
and
inc
stos
loopne
lock
mov
das
and
int3
sarb
stc
fst
mov
je
push
xchg
pop
jge
fimuls
sbb
lea
jge
repz
adc
mov
mov
dec
roll
cmp
cmp
and
sti
leave
inc
xlat
adc
ret
jo
inc
mov
popa
sub
aad
xchg
and
dec
jb
pop
sarb
scas
movsl
aam
and
out
jnp
mov
push
pop
fs
orl
mov
out
xchg
out
imul
cmp
es
loope
xchg
inc
flds
mov
stos
dec
jo
pop
cmp
adc
in
andb
inc
lret
stc
dec
cmp
loope
add
ret
cmp
sub
mov
stc
push
sahf
mov
mov
shl
aaa
add
push
pop
mov
and
ja
mov
push
enter
mov
ds
cmp
jnp
je
pop
dec
mov
ds
leave
mov
into
adcl
arpl
out
adc
jge
or
rorl
dec
movlps
orb
js
mov
adc
and
fnstcw
cmp
cltd
cmp
and
xchg
add
pop
in
jb
data16
mov
xchg
xlat
out
xor
mov
sub
inc
pusha
out
sbb
lret
mov
jmp
daa
push
add
in
cmp
nop
push
cltd
fimuls
js
adc
push
sub
loop
ss
data16
cmp
lahf
frndint
mov
inc
test
into
lock
mov
xor
xor
sbb
mov
cli
cld
and
ret
dec
sbb
mov
vmulsd
and
in
sub
cmpsb
movsb
xor
xor
shr
mov
jp
nop
out
fimull
or
mov
xor
xor
repz
jecxz
cmpsb
rcll
in
and
pusha
dec
cs
and
adc
dec
cmp
pop
int
mov
out
dec
outsl
das
mov
fisubs
add
add
xchg
inc
in
negl
or
inc
adc
jne
push
mov
mov
sbb
adc
out
inc
xchg
lret
in
rol
stos
cltd
cmc
les
clc
jo
mov
das
push
pushf
cmp
add
cmp
repz
aas
call
push
or
or
dec
sub
inc
movsb
fnstcw
int3
scas
jp
or
pop
cltd
jae
mov
pop
jae
pop
lahf
lret
std
inc
jns
add
push
ficoml
push
sbbb
movsl
cmp
dec
mov
pop
and
and
xchg
in
mov
push
outsb
repz
xor
lahf
add
xchg
mov
popf
sub
cmc
std
mov
adc
xchg
add
mov
push
push
pop
push
sti
pop
mov
sbb
idivl
mov
cld
or
js
adc
sbbl
mov
push
mov
inc
jne
test
imul
inc
cli
shll
sbb
fidivl
sbb
rcl
data16
arpl
jl
ljmp
push
int
icebp
sbb
imul
fbstp
subl
gs
shrl
arpl
insl
lock
loope
stos
je
ljmp
mov
sub
add
or
stos
test
xor
mov
xorps
stos
repnz
pusha
push
out
or
cmpsb
lret
mov
ret
rol
mov
xlat
inc
push
sbbl
cli
aas
call
mov
mov
jg
into
fistpl
xor
push
ja
int
or
pushf
sbb
repnz
mull
cmc
mov
sbbl
push
pusha
fimull
negl
pop
cmpsb
mov
in
sbb
xor
mov
xorb
and
insl
into
push
dec
lret
aas
pop
mov
mov
push
push
insb
adc
sbb
mov
dec
mov
or
repnz
sbb
fnstcw
sbb
jle
or
xorl
in
aad
outsb
je
mov
fstpl
or
mov
int
fadd
aas
rol
dec
or
xchg
ret
rorl
out
test
sbb
gs
in
rcrl
cmp
pop
lods
scas
pop
cmpsl
pop
ds
fimull
pop
xor
push
popa
or
cli
mov
test
flds
js
mov
push
nop
addr16
add
rcrl
inc
out
sub
aaa
icebp
mov
jl
enter
into
inc
fbld
xlat
lahf
add
pop
xchg
xorb
rcll
call
mov
clc
cli
cmpsl
dec
and
outsb
into
push
sarl
lods
lock
push
cmp
out
into
loope
cmp
div
jge
cmpsb
adc
ljmp
lods
hlt
jp
in
sti
cwtl
mov
ljmp
mov
fwait
jns
movsl
idivl
mov
inc
aad
xchg
push
push
popf
cmp
shlb
adc
jmp
jge
push
inc
mov
mov
sbb
xchg
in
xor
jp
stc
xor
roll
pop
lret
stos
std
dec
aas
lcall
adc
scas
loopne
sub
pop
push
add
mov
inc
adc
sti
rcr
sbb
ret
sub
into
xor
mov
loopne
xchg
mov
mov
mov
addr16
or
cli
js
mov
repz
mov
push
push
cld
push
sub
sub
mov
aad
mov
sub
mov
movsb
dec
bnd
sti
xor
push
fidivrs
jle
cli
sbb
xor
nop
add
popf
mov
clc
add
push
movsb
arpl
loopne
les
jle
jecxz
fninit
cmpsb
mov
adc
nop
push
mov
les
cld
ror
or
xlat
prefetcht1
int3
inc
pop
push
bound
mov
es
scas
xchg
repnz
fldl
clc
cmp
lods
fs
dec
setb
mov
adc
jnp
inc
fsubr
icebp
dec
cmp
xor
mov
jmp
push
int
jmp
xchg
adc
dec
ss
loope
jmp
loop
mov
out
mov
or
xchg
mov
adc
js
jae
jno
add
sbb
leave
loopne
js
out
pop
shrl
and
add
fidivrs
cmp
mov
lock
clc
cltd
or
ficoml
insl
inc
push
or
je
inc
pop
inc
xor
mov
jnp
decb
imul
popf
jns
scas
and
push
dec
pop
add
jge
or
pop
xchg
adc
add
fwait
dec
xchg
or
push
in
roll
jo
add
xchg
xchg
or
jle
scas
dec
cld
loop
std
xchg
xchg
adc
in
ror
fcoms
hlt
xlat
mov
cmpsb
out
stos
lods
sbb
cltd
sbb
xrelease
pop
les
test
jo
push
into
add
xor
and
sysret
lds
mov
jg
cmpsl
push
or
call
mov
imul
jecxz
mov
push
aad
adc
jp
leave
push
lock
enter
es
cmpb
mov
ljmp
insl
add
cmp
lods
push
push
rolb
mov
mov
jl
mov
jo
mov
popf
pushf
pop
movsl
jns
sbb
jae
imul
xor
or
sub
mov
jbe
call
leave
jle
in
xor
mov
adc
popf
ljmp
push
adc
adc
mov
dec
sti
mov
pop
sub
mov
notb
sbb
cwtl
sbb
aam
sub
lods
movsb
cs
lds
inc
stos
or
inc
lahf
sbb
jne
jmp
inc
mov
mov
inc
pop
lock
cwtl
scas
mov
aad
pop
test
push
or
std
cmp
xor
test
pop
pusha
cmp
and
jne
xor
jbe
out
inc
call
xor
cmpsl
inc
out
dec
sbb
jnp
jecxz
xchg
leave
imul
mov
jge
add
lods
xchg
mov
xchg
call
xchg
add
push
dec
divl
lret
or
ret
mov
add
sbb
sub
in
push
popa
push
negl
add
jp
test
and
mov
inc
xchg
pop
decb
arpl
stos
jle
int
mov
mov
lcall
dec
popa
mov
cld
jecxz
add
dec
and
xor
jno
xorl
bound
push
scas
jno
jl
xor
mov
in
cltd
cltd
test
or
fidivrs
shl
push
ret
inc
dec
popf
mov
sbb
push
xor
inc
and
pop
pop
bound
lods
xchg
sub
das
int3
fs
fstpl
aas
fnsave
repz
jle
popf
cmpsb
sbb
xor
sti
lahf
or
fists
pop
and
xor
faddl
shl
loopne
or
jbe
sbb
in
int
ljmp
mov
stc
add
xchg
lahf
and
jecxz
pop
inc
flds
inc
mov
mov
lock
dec
push
inc
in
push
out
push
or
cmp
mov
inc
mov
xchg
out
xchg
mov
jmp
xor
mov
hlt
out
sub
inc
xor
cmp
imul
ret
mov
divb
or
adc
pop
xor
mov
rorl
ja
xor
cmpl
xchg
xchg
iret
cwtl
xor
imul
jle
repz
mov
arpl
adc
mov
sbb
mov
outsl
lahf
testl
insl
popf
mov
cld
mov
loope
insl
lds
jne
scas
outsb
test
js
aas
sbb
inc
loopne
roll
pop
add
hlt
out
lcall
add
jne
aaa
push
add
dec
push
ret
jmp
sahf
inc
nop
cld
jae
mov
inc
addr16
jg
xor
out
adc
inc
mov
add
fidivrs
inc
cmp
rsqrtps
and
loop
shrb
sahf
mov
mov
lret
movsb
cmc
aad
notb
dec
imull
adc
sub
add
dec
imul
aaa
scas
scas
lock
in
cmpsb
dec
mov
push
xchg
push
mov
or
sub
test
inc
arpl
sbb
push
or
mov
inc
xchg
xchg
pop
orl
aam
in
sub
jmp
sti
adc
cltd
out
outsb
sub
pop
out
or
loope
in
cmp
ja
out
fwait
ret
mov
xor
int
bound
pop
loop
dec
pop
ds
dec
dec
insb
cmc
or
sbb
add
pop
popa
push
ss
aaa
xor
in
repz
lahf
incl
aaa
adc
xchg
cmpsl
mov
iret
xchg
lret
cmp
inc
jecxz
inc
push
stos
sbb
xchg
mov
xchg
jbe
out
out
sub
adc
push
or
mov
mov
sub
arpl
sbb
ja
pusha
sbb
fwait
mov
sbb
lods
jne
inc
popa
cmp
loopne
pop
lret
aas
lret
add
inc
cmovno
jle
dec
shlb
in
mov
aad
mov
jmp
pop
and
int3
adc
jg
shld
adc
cltd
lds
and
push
and
sbbb
inc
loop
mov
sti
leave
subl
mov
push
outsl
aad
clc
sbb
out
out
in
decb
aad
xor
cmp
or
jl
xor
jb
lea
cmpl
lods
js
push
xchg
mov
popf
jbe
pand
insl
mov
sub
pop
sub
xorl
repz
xchg
and
dec
cmpsb
subb
scas
sub
jb
sbbl
jle
and
mov
jno
and
xchg
jb
aaa
adc
jb
inc
ja
addr16
test
movsb
sbb
jg
mov
mov
and
dec
shlb
inc
out
inc
cmp
xlat
lock
mov
jecxz
rcr
cli
jge
stos
jp
mov
inc
push
adc
cmp
fwait
test
lock
sub
data16
jecxz
arpl
and
clc
cmp
xchg
dec
orb
pop
mov
adc
outsl
or
lahf
in
scas
pop
jmp
inc
fistl
sub
imul
xchg
movl
mov
pop
push
aas
xchg
push
or
popf
add
mov
and
jae
mov
loope
push
loopne
stc
in
cmp
lret
jmp
shrl
cmpsb
jecxz
shlb
dec
scas
das
cwtl
push
addl
iret
fstpl
test
outsl
mov
push
push
dec
lds
mov
or
jbe
ljmp
stc
jne
pop
pop
enter
inc
cmp
leave
movsb
adc
gs
mov
movsb
outsb
adc
movsb
sub
bound
jne
xor
repnz
cmp
xchg
ss
sub
mov
push
jbe
sub
mov
fsub
insl
or
mov
jmp
pusha
and
sbb
jmp
mov
pop
mov
in
out
xchg
ja
adc
add
add
mov
lcall
enter
idivb
cmc
or
mov
jb
or
leave
inc
push
jp
inc
cmp
pop
inc
out
shl
mov
adc
lds
and
sub
in
or
ljmp
xlat
push
adc
imul
push
ret
and
mov
lods
jecxz
out
jae
pop
lahf
jecxz
out
mov
mov
and
sub
out
adc
push
jl
dec
enter
add
mov
or
or
xor
cltd
xchg
mov
lret
mov
inc
cmc
fwait
inc
iret
mov
sti
cmpb
cli
testb
scas
sbb
in
loop
inc
inc
sahf
call
sbb
xchg
adc
cmp
pop
push
je
icebp
les
lret
pusha
pop
out
ljmp
add
ja
mull
mov
and
pop
das
aas
fwait
and
mov
addr16
cs
das
xchg
sub
stc
xor
sar
inc
xor
repnz
ror
test
add
ss
or
pop
das
sbb
mov
mov
inc
daa
cmp
pop
or
mov
sbb
fbld
js
mov
mov
shlb
arpl
xor
dec
xchg
mov
adc
dec
stc
test
das
sub
loop
push
jo
cmp
call
jecxz
mov
add
in
lar
push
cmp
push
aas
cli
fsubs
mov
xchg
mov
cld
mov
pop
mov
pop
pop
push
add
dec
fsts
das
cltd
sub
pop
testb
ret
push
insl
pmaddwd
xor
or
mov
pop
aam
fs
out
xchg
movsb
fbld
aaa
or
and
pop
in
mov
or
jnp
lcall
xchg
sarb
mov
lahf
push
stos
es
rcll
jmp
fldenv
and
test
pop
pushf
repnz
out
pushf
cmp
je
sub
xchg
fildl
pop
sti
sbbl
mov
mov
out
dec
loope
movsb
roll
dec
enter
pop
hlt
hlt
out
addb
in
sti
jmp
and
adc
sahf
out
aas
fisubs
add
inc
dec
add
xchg
pop
mov
push
jae
bound
lahf
mov
inc
inc
and
fdiv
mov
fsubs
jl
sub
iret
push
mov
pop
mov
cmc
jnp
add
bound
or
imul
push
shl
bound
mov
jb
xchg
into
out
ret
inc
fldt
push
cmp
xchg
bound
mov
out
addb
loope
jbe
test
cmpb
adc
int3
jmp
mov
jg
push
or
lods
shl
dec
jnp
ret
scas
push
xchg
outsl
subl
ret
dec
aad
cmp
xchg
fists
sarl
mov
stc
pop
cltd
cmp
push
pop
das
mov
mov
cmp
and
mov
ljmp
divb
movb
dec
xor
mov
jg
sub
sub
repnz
test
add
jns
pushf
adc
pop
dec
cmp
push
test
in
orb
ret
jb
in
push
mov
arpl
and
push
sub
movsl
pop
scas
push
push
jecxz
mov
sub
fidivs
xchg
sub
sbb
adc
ficomps
outsb
popa
jbe
lds
mov
adc
mov
dec
jg
jae
lret
fcomps
xor
or
push
pop
adc
mov
movsl
push
ret
jecxz
adc
imul
mov
pusha
jne
add
imul
pop
jo
dec
mov
jmp
in
lcall
xlat
outsl
xor
cld
inc
adc
out
test
jl
fwait
push
pushf
sbbl
push
lcall
adc
sahf
inc
aam
jecxz
xor
das
sbb
jae
jno
rorl
imul
xchg
xchg
out
imul
push
jne
lret
ret
leave
inc
mov
pop
or
push
jge
iret
outsl
jno
inc
jp
mov
mov
jmp
cmp
lods
mov
sub
push
cmp
xor
sub
inc
push
outsl
dec
push
push
xor
pushf
cmpsb
decl
outsl
mov
les
fdivs
lods
mov
int3
das
es
xlat
cmc
cltd
cld
xchg
sub
stos
das
leave
mov
sarl
call
in
sti
mov
push
mov
loope
push
add
pop
call
daa
mov
movsb
or
sbb
jl
aas
test
and
mul
or
or
sbbl
popl
leave
movl
xchg
cmp
insl
sarl
and
dec
cltd
dec
mov
and
fdivrl
mov
and
mov
fildll
clc
clc
lock
arpl
cmpl
aad
imul
mov
dec
cmp
lods
dec
pop
and
jmp
sub
idivb
shrb
sub
push
repz
mov
add
cli
imul
push
xchg
stos
icebp
lods
cmp
into
push
xchg
shrb
cmc
hlt
cmpsb
xchg
cmp
bound
mov
pop
les
xor
cmpsb
loopne
cwtl
shrl
jmp
or
mov
ret
clc
jmp
pop
mov
jae
push
arpl
cmc
dec
in
out
inc
fdivrs
mov
ds
test
cmpb
decb
pushl
inc
add
fs
lcall
pop
xchg
mov
and
or
dec
push
loop
mov
in
jae
subb
jb
push
sar
mov
cmp
mov
js
adc
outsb
mov
dec
in
jmp
int
sti
mov
mov
adc
adcl
icebp
lret
cmp
xchg
je
test
push
leave
je
movsl
push
in
ds
mov
xchg
aaa
cwtl
xorl
or
adc
pop
pop
or
insb
xor
jecxz
cmpsl
sbb
xlat
mov
lahf
dec
jge
mov
push
lcall
in
movb
push
sbb
jae
mov
push
add
cmpsb
mov
call
je
cmp
or
jmp
popf
in
jb
adc
push
std
adc
adc
call
insb
dec
shlb
ret
nop
jle
inc
xchg
out
das
sub
and
pop
test
leave
jo
outsl
sub
enter
aas
pop
adc
in
out
stos
lds
shll
jle
test
aas
xchg
sub
dec
lods
push
clc
cmp
add
xorb
dec
xor
mov
pop
ja
mov
shr
mov
dec
mov
jl
inc
test
and
bound
fidivl
mov
fisttpll
mov
or
aam
sub
mov
xchg
daa
lcall
push
add
mov
lea
push
adc
add
mov
xchg
xchg
flds
out
stos
aad
lds
cwtl
rcrl
pop
jo
cmp
xchg
adc
pusha
sbb
in
addr16
sbb
js
xchg
loope
imul
movsb
cmp
ds
mov
mov
push
xchg
mulb
rorl
or
mulb
sub
pop
into
sbb
dec
sbb
mov
inc
ss
adc
jl
hlt
adcb
lds
xchg
clc
add
cmp
cli
idiv
pop
pop
sbb
fdivrl
push
mov
mov
test
mov
repnz
loop
mov
mov
jecxz
ret
sbbb
ficoml
cwtl
incl
cli
push
stos
cmpsw
ret
les
in
ds
mov
popf
mov
hlt
movsb
sub
or
jmp
sbb
push
sbb
neg
cmc
xor
mov
sub
aad
js
rcll
lahf
jae
hlt
dec
sbb
lea
push
insl
ret
out
adc
jbe
add
loopne
adc
xchg
add
inc
mov
mov
js
aas
mov
and
mov
mov
int
aas
andb
mov
push
jge
stos
push
and
rclb
xor
pushf
test
dec
sbb
add
jg
push
lret
test
movsb
fldcw
pop
mov
arpl
sub
xchg
lods
sti
aaa
out
insb
xor
roll
adc
push
addr16
fcmovb
je
adc
jmp
nop
push
pop
ret
pop
adc
mov
out
addr16
cmp
testb
push
inc
mov
clc
sub
pop
jp
cmp
aad
cmp
mov
mov
mov
and
adc
mov
cmpsb
pop
ret
movsb
or
ficoml
rol
mov
jbe
or
pop
sub
fisubrs
mov
add
pop
mov
clc
mov
lcall
mov
pop
pop
jb
imull
lods
sub
mov
push
es
insb
push
cltd
xor
inc
sbb
pop
dec
rorb
adc
add
leave
pop
push
rorl
mov
psubw
out
dec
dec
pop
add
fs
mov
dec
mov
mov
nop
lea
inc
or
jo
cmp
out
mov
test
or
iret
add
hlt
mov
aaa
test
fucomi
push
stos
cwtl
aaa
jbe
ljmp
shr
jge
cld
subl
mov
add
pop
movsb
xor
out
xor
daa
lds
add
ret
testl
hlt
ljmp
mov
push
pop
sarb
mov
mov
pop
push
adc
dec
inc
into
mov
ss
add
pop
call
mov
fwait
aad
dec
test
aaa
mov
inc
pop
add
sub
xor
pop
cmp
fisttps
inc
pop
orl
pushf
adc
bnd
lcall
dec
add
fsubs
iret
or
call
mov
dec
mov
inc
lahf
dec
shrb
mov
xchg
gs
cwtl
inc
mov
mov
aam
jns
sub
roll
cmpsl
xchg
and
test
jp
xchg
xchg
or
aad
mov
xor
mov
dec
aas
jge
into
and
stc
pop
sahf
bound
out
xlat
mov
sbb
cmp
fcmovb
bound
and
sub
int3
or
mov
pusha
jmp
cmpsb
sbb
mov
incb
lea
in
mov
decl
cwtl
scas
cs
jae
sbb
mov
ljmp
jge
xchg
mov
test
daa
in
ja
pop
cs
test
mov
sti
mov
or
out
dec
add
mov
pop
adc
jp
mov
and
out
sbb
xor
in
pop
gs
mov
call
lret
inc
add
push
std
dec
push
dec
or
addr16
xchg
xchg
push
cmp
xchg
enter
repz
mov
adc
cwtl
cld
lahf
or
sbb
jae
inc
movsb
push
jecxz
mov
leave
lahf
sub
iret
mov
aaa
xchg
scas
mov
shrl
jno
mov
cli
pop
mov
das
xchg
and
into
cld
mov
jl
add
ljmp
add
ds
mov
imul
pop
jne
pop
lcall
negb
ret
adc
sbb
mov
outsb
mov
pusha
fcomps
rol
or
cmpsb
pop
mov
mov
sbb
or
das
shrb
dec
mov
sub
and
inc
pushf
stos
iret
add
insl
pop
in
pop
dec
add
or
sbb
push
ffree
out
pop
xchg
aad
push
pop
xchg
sbb
sub
repnz
mov
dec
cmpsl
and
das
cwtl
and
pop
cmc
mov
icebp
and
fcoms
push
insb
lds
arpl
push
and
cmp
cmp
mov
mov
xchg
mov
adc
sub
fcomps
mov
dec
mov
sub
xchg
sti
cs
xchg
adc
cmpb
mov
or
insb
and
mov
test
pop
mov
cmp
es
adc
or
subb
frstor
ret
xor
xor
insb
xchg
aas
adc
adc
andl
les
inc
push
adc
paddb
add
lea
dec
jb
push
std
stos
pop
or
loopne
test
cmpsl
lock
pop
fidivrs
fidivrs
cmp
adc
pop
aam
stos
daa
mov
imul
test
mov
loop
jo
pusha
fwait
or
outsl
loop
mov
add
xor
in
scas
jb
cmc
rol
xchg
cmc
or
push
sbb
loope
mov
pop
loop
jle
xchg
sbb
mov
cmp
or
ret
mov
fldcw
pop
pop
dec
or
iret
negb
sbb
hlt
inc
and
rclb
and
sub
and
adcl
cmp
daa
push
loopne
loopne
dec
testb
repz
cmovs
lret
jnp
xlat
out
inc
jl
xchg
cli
fs
add
and
inc
test
mov
leave
jg
pop
adc
pop
pop
push
pop
insb
cli
sahf
lret
arpl
lahf
adc
push
xlat
pop
stc
adc
or
mov
inc
leave
mov
dec
mov
mov
push
pop
mov
lods
stos
call
cltd
shll
mov
mov
notl
pop
negl
or
and
pop
push
sbb
insl
andb
fdivrp
mov
hlt
test
sbb
jl
sarl
imul
push
je
ljmp
outsl
in
mov
daa
jl
addr16
icebp
xor
test
int
push
aam
add
cmp
or
push
fisubrl
cmp
push
mov
lods
cmp
push
test
fwait
ja
mov
fmul
sbb
pusha
rorl
outsb
shrb
aad
cmpsb
lds
cmp
lods
lds
lahf
add
pop
stos
adc
dec
fcoms
sub
or
out
add
cmc
push
out
pusha
lret
nop
xor
add
out
or
xor
fwait
inc
lahf
push
xor
shrl
test
pop
imul
das
xor
test
fnstcw
in
pop
jge
in
pop
mov
adc
lods
mov
stc
lret
clc
in
push
movsb
mov
and
mov
and
add
es
fcom
lahf
ficomps
push
mov
stc
sbb
mov
cmp
sbb
pop
xor
or
mov
lcall
incb
pop
cmp
mov
pop
out
repz
pop
xor
imulb
enter
bound
xchg
mov
mov
stos
pusha
jge
stos
ljmp
cld
mov
push
idivb
in
sahf
pop
enter
push
cmp
cmp
jecxz
xchg
js
push
xchg
addl
mov
fimull
in
test
mov
push
ljmp
cmpsb
xlat
sbb
fldl
call
loop
or
cld
pop
pop
jb
push
add
jno
testl
and
push
test
sub
push
jecxz
imul
in
enter
pushf
mov
das
sub
adc
mov
mov
or
lret
data16
mov
lret
movb
adc
dec
cmp
dec
movsb
test
mov
and
push
test
xchg
push
mov
out
pop
cltd
xchg
jo
sbbb
push
mov
dec
outsl
or
mov
mov
scas
rorb
add
pushf
ds
mov
je
rep
notl
mov
jl
and
jle
xor
sub
fs
xor
cmp
inc
daa
xor
cmpsb
or
pop
pop
scas
aam
sbb
lcall
imul
mov
dec
or
bound
shl
dec
xchg
cmp
mov
loop
ljmp
mov
js
fwait
xor
adc
pop
lret
into
lea
cld
lea
repnz
test
and
into
and
sbb
add
enter
add
xor
mov
dec
mov
mov
pop
rcrb
je
sub
mov
pop
ljmp
addr16
bound
sbb
cmp
ror
imul
shrl
sbb
jge
push
xchg
and
xor
inc
jae
sbbl
ds
cmp
in
sbb
arpl
cmp
add
xlat
inc
mov
push
pop
and
sub
mov
jb
lods
dec
stos
ret
xor
inc
push
nop
dec
and
cmc
ret
cmpsb
jmp
lret
pop
shl
adc
int
cmp
cmp
xlat
filds
mov
mov
data16
dec
adc
inc
dec
mov
xor
dec
inc
dec
mov
decl
mov
cltd
lods
iret
xor
pushfw
les
jp
mov
out
fstpt
sbb
in
dec
ja
cmp
mov
aam
adc
sub
mov
dec
mov
test
mov
adc
push
pop
pop
pop
xchg
aam
or
add
std
lods
xor
sti
jns
cmp
xchg
jmp
and
mov
cli
cmp
and
mov
out
aam
xlat
pop
cmc
ret
adc
xchg
int
push
sub
daa
popf
and
jecxz
sub
jle
fildl
or
add
dec
sub
xor
test
mov
aad
sub
jp
fs
rorl
loope
stc
repnz
pop
shrl
repnz
add
jae
dec
push
mov
sbb
pop
in
xchg
mov
stc
xor
and
int
cmp
fcoml
call
pop
mov
sbb
mov
in
xor
into
mov
lock
movsb
ja
mov
add
and
shrl
test
mov
out
mov
and
pushf
ret
sbb
push
es
and
incl
push
aad
imul
lods
or
fisttpll
adc
into
or
adc
and
cmp
fisubrl
mov
lret
push
daa
xor
fisttpl
push
cmp
cltd
add
scas
arpl
in
call
data16
call
mov
pop
aad
mov
imulb
mov
adc
dec
jb
movsl
cmp
inc
cltd
icebp
mov
jle
or
mov
clc
lods
push
data16
es
leave
cmp
out
cmp
gs
je
sub
pop
sbb
lcall
mov
fists
shr
rcrb
arpl
sbb
in
adc
dec
push
dec
xchg
jge
mov
sub
mov
in
test
push
pusha
inc
adcl
fdivrs
out
mov
jb
xchg
enter
lods
ljmp
in
stos
leave
pop
xor
push
xor
stos
icebp
sbb
loop
xchg
xor
arpl
stos
je
dec
pusha
mov
mov
nop
pop
jo
inc
mov
dec
fiaddl
mov
orl
daa
inc
push
or
add
pop
pop
test
imul
adc
inc
jb
cmp
and
push
or
aaa
inc
mov
dec
xor
cmp
scas
jge
mov
daa
pop
popa
in
pop
lea
adc
add
or
pop
fs
sarb
xlat
mov
pop
mov
mov
pop
icebp
out
pop
sub
mov
sti
add
loopne
leave
stos
pop
push
sub
xlat
xchg
in
call
pop
ds
out
mov
add
cli
fistpl
clc
outsl
pop
adcb
sarl
cmpsl
and
dec
enter
mov
jo
sbb
push
in
stos
jb
lea
jne
aad
nop
in
mov
dec
andl
or
ljmp
pop
arpl
pop
ret
scas
mov
mov
shl
xor
stc
push
jbe
inc
xor
mov
jecxz
idivb
sbb
lock
xchg
imul
jbe
pusha
mov
adc
mov
outsb
push
mov
sbb
xor
cmpsb
out
iret
push
cmp
and
out
pop
movsl
or
jg
mov
decl
es
push
dec
xchg
sbb
test
jae
and
test
inc
cmpsl
jnp
inc
hlt
cmpsb
sub
mov
test
jmp
mov
aad
mov
stc
xchg
pop
setbe
stc
or
dec
leave
mov
sbb
addr16
fwait
mov
dec
movsl
adc
test
inc
add
push
adc
push
push
dec
sbb
test
xor
xchg
and
push
dec
stos
daa
insl
push
outsb
aaa
xchg
inc
stos
jno
dec
sbb
in
ret
add
and
popf
pop
fldl
shrl
shl
daa
push
out
adc
add
xchg
rcrl
jbe
adc
movb
stos
clc
dec
mov
cwtl
jmp
inc
adc
daa
je
pop
arpl
ret
sub
or
pop
and
iret
lock
fdivrl
mov
ret
dec
jns
popa
push
xchg
cmc
adc
test
scas
jbe
push
lret
dec
xor
xor
je
xor
sub
dec
dec
lds
xchg
out
clc
mov
iret
dec
dec
in
jle
mov
cmpl
cmp
push
inc
movsb
pop
mov
hlt
add
mov
inc
aaa
pop
pop
enter
mov
into
flds
fmulp
sbb
insl
repz
lea
add
int
mov
xor
ret
or
js
xchg
pop
push
test
mov
and
add
hlt
mov
push
movsl
cmp
inc
test
into
mov
push
data16
mov
popa
jbe
dec
xchg
jp
fsts
ret
and
aam
mov
or
enter
and
outsl
call
mov
add
cs
dec
mov
lock
insl
dec
sbb
jecxz
inc
test
repnz
push
negb
movsl
jns
in
jbe
shrb
pop
jb
add
push
stc
pop
repz
pop
lcall
jg
or
mov
leave
loope
adc
and
push
and
xchg
or
mov
push
arpl
adc
call
or
aad
and
jg
push
sbb
xor
int3
xchg
mov
ds
lods
lods
jb
jp
pop
xor
test
and
call
inc
bound
adc
out
enter
mov
sar
mov
mov
inc
call
adc
xchg
xchg
fistps
xor
pop
lea
xor
mov
fs
adc
test
fwait
int
lods
or
les
test
stos
rclb
dec
adc
jno
fiadds
pop
mov
fistps
push
push
fdivs
aad
adc
gs
rolb
mov
and
outsl
shll
rcll
pop
les
jae
push
lea
scas
hlt
lods
xor
xchg
and
mov
mov
and
sbbb
xor
jbe
or
mov
std
std
les
or
inc
test
sub
jb
nop
pop
lock
clc
stc
xchg
in
xor
adc
and
data16
xor
pop
rcrl
add
roll
inc
enter
sbb
call
mov
ret
shl
in
pushf
lds
divb
adc
and
sub
xor
push
push
mov
dec
sub
insl
sahf
loope
push
or
out
lret
shll
ljmp
pusha
xchg
xor
jmp
jmp
out
loop
outsb
idivl
addr16
mov
loop
cld
clc
adc
dec
inc
mov
sahf
ss
mov
xor
or
data16
add
mov
sub
mov
int3
jbe
pop
lock
cmp
sub
adc
dec
sbb
inc
pop
or
push
xor
js
cmpsl
icebp
xchg
out
sub
cmp
mov
pop
push
push
dec
int
icebp
jge
cmp
add
adc
mov
sub
push
push
scas
mov
jle
into
mov
lods
mov
fsubrl
mov
lret
cmp
sub
jl
test
and
jbe
add
hlt
mov
cmp
push
aam
aam
and
xchg
sbb
insb
scas
add
fistl
scas
or
dec
mov
in
add
cld
cmpsb
adc
xchg
mov
mov
movsl
push
xor
test
lret
cltd
or
jge
cld
movsb
inc
adc
outsl
addr16
bound
inc
mov
ds
mov
mov
and
or
cmc
xor
mov
stos
test
rorb
sub
fwait
mov
arpl
inc
insb
rorl
sub
into
push
and
sub
fistps
mov
xchg
pop
nop
in
push
arpl
cmp
jmp
inc
and
xor
enter
jns
push
mov
les
mov
push
xor
loop
pop
pushl
pop
push
mov
cmpsb
out
add
xor
loop
push
push
das
cmp
std
inc
scas
andnps
push
jno
arpl
ds
test
and
or
sar
mov
mov
popa
xchg
xchg
dec
das
movsl
mov
ss
sub
mov
faddl
push
dec
inc
das
sbb
lds
jae
xor
hlt
out
mov
and
mov
xchg
rolb
imul
push
adc
jno
mov
ljmp
pop
add
mov
stc
inc
push
dec
rcrl
jmp
sbb
xor
push
in
sahf
mov
push
ds
das
or
sub
mov
mov
dec
inc
jnp
fistpl
xor
mov
or
cmpsl
das
dec
xchg
xchg
stos
jno
enter
push
lods
fiaddl
pop
mov
loope
cli
and
xchg
mov
pop
push
lods
mov
xchg
xchg
pop
or
and
cs
je
subl
push
add
or
pop
stos
stc
mov
add
mov
out
stc
pop
mov
arpl
inc
insl
sbb
rclb
lods
shr
in
mov
fistpl
or
imulb
in
or
mov
ljmp
gs
inc
push
nop
test
sbb
mov
mov
fwait
pop
push
testl
inc
jg
jecxz
lahf
aad
cmpb
xchg
jne,pt
cmp
into
repnz
inc
popf
jae
addl
push
or
adc
push
es
mov
dec
jno
jbe
xlat
shll
ja
add
adc
fdivrp
xor
or
enter
sub
sbb
subl
jo
lahf
push
repnz
sbb
pop
cmc
xor
stos
sahf
and
xchg
roll
aam
xor
xchg
subl
xchg
or
call
add
aad
or
sahf
int
pop
and
push
jp
rclb
jge
out
pushl
rclb
jmp
out
add
shl
ljmp
cmp
out
adc
lret
ficomps
push
cli
push
cltd
je
mov
int3
inc
sti
in
xchg
out
pop
loop
cs
pushf
or
loop
sbb
or
adc
js
mov
imul
sbb
mov
icebp
sub
ja
pop
mov
or
faddl
mov
jbe
ja
aam
fs
push
jbe
ds
in
stos
lods
pop
fsts
rcll
and
mov
fwait
loop
pop
ja
mov
pop
imul
addl
into
jno
push
adc
add
add
add
mov
adc
inc
fst
jo
or
pushf
xchg
sbb
cmpsb
xchg
shl
push
fst
push
out
std
inc
mov
pop
arpl
cmp
cmpsb
sahf
iret
icebp
sub
and
adc
aad
jg
int
stos
or
stos
ja
fistpll
lret
fwait
sti
gs
cli
bound
push
and
cmp
mov
mov
xor
cmp
arpl
mov
addl
xchg
jg
mov
add
enter
in
jge
xchg
jl
pop
push
push
pop
out
ret
sbbb
xor
insl
jbe
repnz
jb
or
pop
rorb
mov
cmp
mov
lret
jo
pop
sub
add
cwtl
mov
test
xchg
hlt
stos
and
repz
int
or
out
mov
sub
mov
jecxz
das
adc
cmp
ja
mov
xor
inc
les
adc
mov
xor
sbb
adc
and
inc
movsl
and
into
adc
xchg
jo
xchg
rcr
std
shll
out
aad
outsl
xor
mov
push
ljmp
fstpl
incl
in
movsl
clc
popa
dec
mov
mov
pop
adc
and
fxch
mov
sahf
rcll
jbe
fcoml
ljmp
adc
jg
mov
adc
push
add
ret
xchg
pop
insl
in
fadd
or
ret
call
sbb
daa
in
fdecstp
repz
push
push
lret
mov
sbb
mov
and
pushf
pushf
lcall
mov
jbe
ret
push
es
negl
aam
test
adc
inc
cmpb
xor
jmp
jbe
sbb
lea
pushf
ja
and
repnz
pop
inc
pop
fstpl
daa
ret
sbb
and
mov
or
rep
mov
mov
insl
pop
and
mov
sub
ds
fisubrl
push
add
adc
out
sbb
add
loopne
pop
dec
sub
data16
jne,pn
inc
mov
mov
xor
psrlq
hlt
ljmp
dec
std
jp
pop
fistl
inc
sbb
lock
cmp
xchg
jo
xchg
pop
inc
adc
mov
cmpsl
xchg
push
outsb
shl
jecxz
ret
leave
cmp
div
imul
xor
daa
mov
into
in
xor
pop
rcll
ficoms
pushw
sub
mov
mov
sarb
xchg
mov
shll
hlt
cmp
mov
cmp
jnp
jmp
sbb
mov
push
daa
pop
push
fucomp
cmc
push
fucomi
insb
jle
mov
push
cmc
stc
outsb
jle,pn
mov
adc
repz
push
xchg
hlt
mov
mov
cld
pop
mov
pop
int3
sbb
sarl
jbe
or
push
jl
out
add
das
inc
add
cmp
enter
cmpsb
fs
jle
pop
lret
aaa
shl
in
rorb
ss
jnp
imul
pop
sahf
push
int
adc
pop
xor
jecxz
fdivs
fstps
add
hlt
sbb
sbbl
xchg
in
dec
pop
loop
and
push
sub
pusha
push
xor
mov
popl
int
mov
stos
jle
push
jmp
jmp
cmp
sub
sarl
daa
sbb
xchg
lods
xor
push
push
mov
or
sbb
xchg
int
adc
addr16
dec
jg
mov
and
dec
cwtl
adc
inc
xchg
iret
push
add
repz
pop
sbb
push
mov
xor
loopne
push
arpl
pop
movsl
fidivrl
out
int3
pop
mov
es
nop
and
dec
dec
out
add
test
xchg
sub
pop
pop
sbb
pop
lahf
in
sub
lahf
arpl
pushf
clc
jle
test
add
lock
jmp
jge
mov
dec
pop
xchg
xor
in
inc
push
jno
jns
jl
enter
dec
rcrl
and
inc
xor
or
jecxz
mov
sub
pop
dec
and
lds
data16
jo
mov
fcomp
mov
and
or
mov
xchg
insl
xchg
sbb
pop
insb
in
jp
lret
out
testl
sub
xchg
outsb
pop
out
inc
mov
lock
popf
xchg
xchg
sbb
cltd
faddl
mov
leave
jmp
add
mov
and
and
test
push
faddl
inc
xchg
push
fisttps
pop
lds
sbb
pop
es
filds
cld
ds
mov
stc
mov
inc
pop
lahf
ret
cltd
dec
mov
imul
add
cltd
inc
fnstenv
adc
pop
test
sub
jle
push
subl
xchg
sub
ss
cmc
pop
mov
lret
fdivrl
js
sub
xchg
aad
xor
jg
xchg
add
cltd
gs
xor
xor
shrl
add
sbbb
call
sbb
outsl
mov
push
sbb
test
sub
jl
mov
jae
cs
adc
loopne
jmp
jno
sbb
decl
fisubs
je
nop
dec
sbb
xchg
adc
cmp
scas
pusha
fstpt
aaa
xchg
orb
mov
negl
movsl
jg
mov
add
mov
shlb
jb,pt
cmp
enter
adc
and
sub
dec
jl
out
sub
mov
xorb
je
cmp
test
push
inc
mov
push
out
js
mov
push
xorl
dec
sub
jns
loope
jae
cmovo
push
mov
enter
push
cmc
sub
xor
dec
mov
int3
out
mov
mov
cmp
dec
popf
mov
dec
lcall
xchg
sar
inc
inc
idivb
fs
gs
ret
mov
in
shrl
mov
cmp
or
stc
adc
imul
mov
fidivrl
outsl
inc
ror
add
xchg
addr16
push
adc
or
cmp
xchg
jmp
fstps
popa
xor
dec
fidivs
jbe
cmp
inc
shlb
adc
leave
sahf
dec
shrb
cmc
out
sahf
mov
dec
sub
or
mov
mov
mov
lock
inc
push
addb
mov
test
sub
out
les
sbb
mov
dec
xchg
sub
push
stos
incb
xchg
icebp
xchg
or
lods
cmp
fisttpll
mov
mov
cmpsb
mov
inc
push
movsl
push
outsl
js
outsl
popf
sarb
mov
jno
into
lret
push
test
in
out
sbb
mov
js
pop
cs
sub
jnp
push
cmp
repnz
xchg
cwtl
pop
insl
pushf
inc
mov
mov
mov
clc
ss
stc
and
rolb
mov
sarb
dec
mov
inc
jg
aam
out
stos
xchg
mov
fwait
ds
jo
popa
mulb
jns
pushf
sbb
push
push
mov
sub
outsb
add
fstpt
fsubr
jmp
inc
sbb
and
cmpsb
mov
pushf
add
pop
xor
ljmp
dec
stos
aas
adc
push
mov
les
cwtl
push
test
ss
je
shll
jp
push
shl
out
jl
jecxz,pt
adc
push
shll
pop
pop
fildl
in
mov
adcb
cli
imul
mov
push
daa
mov
jae
dec
adc
mov
jmp
xor
insb
cli
cmp
mov
jl
loope
data16
push
std
rolb
in
or
iret
rol
jecxz
lret
mov
scas
rcll
dec
jae
rcr
sub
ss
cmp
daa
jge
jge
fcompp
add
or
mov
adc
jo
pop
loopne
cmp
pop
jbe
mov
mov
iret
push
add
pop
sub
dec
mov
jbe
cwtl
ret
stc
out
popa
xor
mov
inc
lret
test
jb
jmp
iret
mov
mov
and
and
push
nop
mov
jb
adc
xor
sub
and
andl
scas
jge
js
sbb
mov
pop
jb
sar
jge,pn
or
or
xor
mov
stos
adc
inc
adc
out
insl
aas
stos
mov
jecxz
mov
xchg
push
or
inc
sub
dec
mov
rorb
mov
mov
lds
cs
test
push
lret
fwait
lcall
leave
into
int3
push
push
call
popa
pop
mov
add
cmp
and
adc
pushf
mov
push
jge
sub
cmpsl
stos
rorl
mov
mov
cmc
adc
cld
push
stc
push
std
adc
gs
ja
idivl
mov
icebp
outsl
in
scas
sahf
adc
pop
bound
xchg
cltd
cmp
push
aam
push
fiaddl
test
sti
adc
lret
out
add
fmul
into
jbe
inc
mov
out
pop
jmp
out
mov
adc
sahf
nop
rcrl
in
es
clc
jo
lret
fsubrp
cmpsb
imul
fxch
add
shll
or
mov
es
pushw
xor
pop
dec
scas
stc
fucomp
cmpsl
div
pop
stc
lret
lret
sbb
and
inc
mov
popf
jl
mov
push
out
orl
das
adc
push
fsubrl
lods
es
cwtl
add
push
or
es
jns
rolb
and
popa
fwait
add
mov
std
sub
call
mov
repnz
int
dec
repnz
jo
movsb
loope
and
das
popf
cmpsb
and
cmp
jp
fwait
mov
push
pop
loopne
jmp
cmpb
sbb
sbb
sub
pop
test
sbbl
xor
xor
sahf
and
and
sbb
xor
lahf
pop
stos
jb
and
mov
jge
adc
inc
out
dec
mov
lahf
ds
sbb
or
mov
aaa
mov
xchg
xor
xchg
xor
cmc
movsl
js
push
jne
mov
cltd
push
add
sbb
lock
push
mov
sub
inc
or
fisttpll
dec
xchg
mov
push
testb
xchg
push
mov
lahf
loop
lods
mov
adc
cs
jb
pop
mov
mov
test
ficoml
pop
popa
and
xchg
loop
pop
xchg
add
jl
dec
cmp
jnp
fwait
push
lods
push
mov
jge
stc
inc
sub
add
js
cltd
in
bound
pop
lret
jge
cmc
mov
jle
adc
imul
dec
pop
shll
test
xchg
inc
sbb
ss
cli
adc
xchg
mul
repnz
and
cmp
jle
dec
mov
es
dec
fmuls
test
frstor
push
ja
cmp
or
mov
lods
lcall
jp
xchg
sbb
ss
movaps
adc
mov
loopne
dec
jae
or
aam
inc
push
cmp
cli
mov
test
jb
mov
insl
cltd
dec
test
adc
rolb
sub
xor
sti
xor
sbbl
shl
inc
repnz
and
sub
lods
push
sahf
mov
sbb
adc
add
mov
into
pop
ret
fnstenv
xchg
in
imul
shll
jmp
push
and
jmp
lods
dec
stos
dec
jl
mov
mov
lret
xchg
jbe
push
fnstcw
pop
mov
rcll
cmp
sub
ds
roll
mov
out
dec
fisubl
aad
fldcw
add
adc
loope
mov
dec
cmp
and
stc
jns
xor
adc
int3
mov
inc
repnz
sub
loope
pop
mov
hlt
jne
sbb
mov
sub
push
fucomip
mov
add
dec
jle
insb
daa
shlb
mov
push
cli
dec
xor
out
cltd
sub
jns
or
cmp
xchg
push
into
xor
push
daa
movsb
jnp
enter
mov
cld
leave
add
pop
adc
inc
lea
dec
popl
ja
ret
pop
lret
scas
jb
jne
popf
addb
ja
jne
rcrb
adc
cmp
outsb
or
test
lret
cmc
aad
shr
or
in
scas
fdivr
hlt
pop
imul
insb
add
add
shrb
mov
stc
insl
jg
cmp
jge
push
add
pop
inc
xchg
jae
pop
ja
mov
and
adc
sbb
leave
inc
out
ja
jno
ja
lahf
ds
mov
push
mov
or
and
fildl
test
lods
orl
int
push
dec
add
push
ficompl
pop
rorb
call
sub
std
into
add
movsb
lds
push
js
insl
testl
scas
push
loopne
mov
fsubrl
notl
jno
pop
lods
fimull
std
fwait
mov
adcb
mov
mov
cmc
and
out
in
fwait
push
test
out
lahf
pop
xor
out
or
pusha
adc
out
popf
idiv
outsl
pop
and
adc
fisubrs
push
movsb
leave
push
int
push
xor
mov
mov
jae
test
dec
leave
mov
xchg
loopne
mov
mov
mov
nop
data16
imulb
adc
fldt
ret
mov
fstpl
jo
mov
outsl
lret
out
add
push
stos
jne
cmp
jg
iret
cmpsb
popa
mov
sbb
mov
fs
xchg
jns
push
ds
iret
mov
xchg
jg
mov
mov
sti
es
cld
cltd
and
xor
add
aam
xchg
add
inc
mov
dec
dec
adc
jecxz
mov
out
pop
aaa
pusha
mov
dec
cltd
andb
push
scas
int
xor
call
aad
aaa
arpl
lea
lcall
add
cltd
push
mov
xor
mov
push
pop
mov
dec
daa
test
xchg
dec
js
push
jns
push
pop
dec
lret
cmp
adc
push
inc
xchg
movsb
subb
testl
xor
sub
out
xchg
shrb
xor
scas
lods
adc
cwtl
xlat
xchg
push
mov
mov
sub
scas
and
push
aas
push
xor
pushf
out
adc
mov
movsb
stos
inc
dec
pop
push
mov
adc
lods
rolb
mov
fdivr
movsl
repz
lock
dec
icebp
and
shll
std
ss
sbb
and
stos
andl
test
lds
lea
fs
pushf
jecxz
inc
addr16
ret
jmp
pop
push
enter
inc
xorb
das
xchg
jo
add
jg
pusha
mov
fmull
arpl
pop
mov
shll
movsb
push
cmc
lods
lret
repnz
add
jle
int
inc
or
inc
dec
dec
add
mov
pop
jns
push
inc
jecxz
jge
xor
icebp
imul
mov
cmc
test
add
aas
pop
sub
fucomi
mov
jne
push
inc
orl
lret
push
push
push
xchg
imul
fcoms
jmp
pop
insl
inc
jl
mov
enter
in
cmp
jmp
fnstenv
insl
dec
data16
cs
dec
sar
jl
xor
fildll
push
bound
test
es
popa
fdivs
fdiv
mov
mov
mov
jge
lret
popa
jp
inc
mov
mov
mov
dec
mov
mov
inc
adc
inc
pop
outsb
push
sbb
aam
or
xchg
sti
xchg
subb
adcl
mov
mov
mov
jl
xor
mov
pop
sub
lcall
mov
push
icebp
jecxz
push
fbstp
pop
push
sub
hlt
xchg
cwtl
push
xchg
mov
in
mov
pusha
test
int3
int
push
xchg
repz
jns
sahf
or
push
stos
lock
inc
add
fnsave
shl
decl
and
test
mov
dec
push
mov
or
mov
fwait
pop
mov
test
and
rorl
fsubrs
push
adcl
mov
pushl
and
add
pusha
movsb
inc
sbb
cmp
repz
add
lods
adc
lret
add
or
sub
imull
shlb
push
mov
pop
xor
mov
fs
mov
inc
btr
sub
push
call
in
aam
mov
xor
push
add
aas
and
ja
out
mov
mov
in
or
fdivs
xchg
and
push
sub
cmc
and
pop
pop
or
fadd
rcrb
cmp
sub
arpl
gs
push
js
leave
nop
insb
arpl
push
cmp
inc
push
xor
jmp
mov
cwtl
inc
mov
mov
mov
out
shll
stos
jae
xchg
sbbb
xor
shrb
stc
mov
xor
in
and
cmp
mov
int
ds
rol
sbb
repz
into
mov
outsl
or
movsb
inc
mov
arpl
inc
dec
xor
test
insb
dec
mov
cmp
or
cmp
sbb
lock
and
das
loop
sub
inc
mov
rcll
je
dec
mov
cmp
mov
xchg
dec
lret
arpl
stos
push
lock
xchg
stc
lret
dec
push
cmpsl
sbb
repnz
dec
cli
loopne
add
inc
pop
fdivrl
dec
pop
movsb
mov
cmp
dec
mov
shufps
xor
out
cmpsb
pop
pop
or
xlat
sti
pop
call
out
and
stc
popf
dec
xchg
gs
out
sub
push
shrl
jge
or
mov
cmp
stos
cli
lcall
pop
fisubl
mov
add
out
xor
xchg
lods
push
dec
push
xor
insb
or
push
cwtl
aaa
mov
or
inc
jle
call
jg
xchg
test
rorl
and
or
subl
mov
xor
leave
aad
add
aaa
ja
dec
negb
jle
cmp
mov
inc
insl
lock
cmpsb
mov
lret
jo
jp
xchg
and
icebp
rorb
int
add
xor
add
imul
popf
fldl
adc
mov
add
les
add
imul
sub
andl
in
iret
push
icebp
jl
pop
mov
pop
imul
rcrl
call
in
push
pop
stos
xchg
ss
mov
jae
adc
push
sti
push
repnz
cwtl
loopne
pop
and
sub
popa
ljmp
mov
inc
sbb
jns
jmp
jmp
xchg
les
cmp
cmp
cmp
mov
stos
idiv
loope
jl
push
cwtl
sub
sub
xchg
clc
push
test
fmuls
mov
xor
notb
jle
jns
push
jae
inc
ja
dec
leave
idivb
pop
or
gs
fwait
aas
fimuls
sub
dec
pushf
or
out
scas
stos
inc
les
mov
xchg
aam
insl
sub
sbb
xlat
dec
pop
dec
pop
ficomps
or
mov
dec
in
or
loope
imul
sbb
enter
cmp
and
mov
repz
xchg
js
nop
push
pop
dec
jbe
pop
popa
push
cmp
jl
adc
adc
mov
xchg
mov
ljmp
loop
mov
daa
mov
sbb
scas
data16
inc
fbstp
push
out
sbb
push
pop
shlb
xlat
repnz
lea
xchg
add
push
aaa
nop
sub
call
rclb
lds
hlt
inc
mov
add
mov
mov
test
incl
or
mov
push
hlt
ret
lds
push
pop
out
shlb
decl
in
lret
lea
out
fistps
ficompl
icebp
xor
add
clc
arpl
out
and
fcmovu
adc
add
aad
xchg
hlt
sbb
adc
sub
icebp
pop
cmp
lods
lcall
mov
fdivs
inc
pusha
xchg
mov
sbb
scas
jno
in
and
ljmp
iret
mov
pushf
sbb
or
dec
mov
and
pop
pop
jmp
into
sbb
mov
push
jecxz
push
xchg
mov
cmc
mov
push
xchg
je
pop
lret
mov
dec
in
cmp
mov
xchg
and
push
call
push
pop
push
lea
inc
xor
cmpsb
xor
in
cmp
xchg
and
push
mov
stos
in
cmpsb
add
cld
add
mov
ds
inc
std
sub
into
rorl
xor
dec
inc
xor
mov
aaa
fbstp
jecxz
jb
push
pop
add
int
push
jl
and
mov
mov
popf
imul
adc
jne
movsl
dec
add
fildll
mov
jecxz
pop
xchg
iret
pushf
js
mov
sbb
in
jmp
sub
ds
sub
xor
addr16
dec
mov
addr16
je
leave
aam
ret
mov
mov
dec
jp
scas
dec
push
push
mov
jge
aad
dec
les
add
lcall
pop
jb
pop
xor
adc
jl
lods
mov
add
adc
fidivrs
jl
enter
mov
out
loop
je
mov
stos
cmp
je
lcall
test
dec
mov
sub
add
push
mov
push
addr16
in
push
dec
out
scas
adc
rcrb
sub
xor
mov
pop
shlb
xor
es
push
jno
sub
sub
mov
xchg
mov
outsl
mov
fldenv
fwait
and
sti
jns
pop
fsub
scas
mov
pop
pop
xor
in
loop
mov
test
adc
test
push
sub
sbb
aam
pop
in
inc
loope
xor
mov
xor
push
fdivrl
fwait
popa
lock
faddl
fs
add
push
push
test
jecxz
lahf
xorb
cmc
ret
cmp
xchg
jae
aaa
in
cmpsl
sbb
je
mov
bound
xor
enter
mov
add
push
fisubs
loope
sbbl
and
xor
mov
dec
jno
loop
mov
popf
cmp
cmp
mov
or
adc
add
xor
in
mov
xchg
lahf
or
jecxz
rcrl
sahf
shl
daa
xlat
adc
jo
xor
lret
and
shlb
clc
ljmp
adc
ror
jne
or
mov
adc
mov
adc
cmp
mov
mov
jb
add
add
cmp
pop
outsb
arpl
loope
leave
cltd
jns
mov
xor
pop
jo
jae
scas
pushl
inc
xchg
jecxz
cs
jmp
mov
inc
push
sub
int
fidivl
jnp
scas
fldt
jecxz
pop
test
xor
inc
adc
mov
shlb
pop
outsb
dec
or
sub
ja
fs
dec
clc
jp
or
sub
jmp
insb
mov
push
dec
sub
in
xchg
ficomps
js
in
jne
or
cli
xor
xchg
mov
sub
test
sub
loopne
fdivs
loop
sub
loopne
jle
shlb
in
lock
cmp
or
mov
mov
fdivr
mov
jmp
push
es
cmpsb
push
lcall
imul
adc
dec
imul
mov
data16
fimull
pop
jne
mov
mov
push
dec
rcll
cmp
pop
cmp
stos
cmc
push
mov
mov
je
cmp
cmp
jle
shr
cmpsl
lcall
jl
pushf
scas
cmp
xchg
and
hlt
sbb
jecxz
inc
and
leave
xchg
fsubrl
hlt
out
adc
push
pop
add
pop
lods
mov
dec
lods
xchg
lds
and
dec
adc
loopne
sbb
jo
pop
fisttpll
movsb
jb
pushf
lods
push
inc
cmp
clc
inc
lds
cmp
mov
scas
das
pop
cmp
out
push
movsl
sub
sarb
inc
in
mov
divb
push
fidivrs
cmp
stc
pop
xchg
xchg
mov
mov
push
inc
adc
push
jne
sbb
ljmp
pinsrw
insb
movsl
mov
shrl
repz
pop
fcmovne
jg
push
inc
inc
roll
mov
lock
aad
push
imul
stc
stos
cli
sbb
nop
mov
pop
insl
jg
int
adc
inc
sub
lds
idivb
stos
cmp
fstpl
lods
in
push
loope
cltd
or
or
push
fscale
mov
xchg
mov
mov
enter
fstl
mov
mov
in
mov
jecxz
mov
bound
mov
int3
mov
mov
xor
cmp
sti
pusha
sbb
mov
cmp
pusha
ja
clc
fucomip
add
mov
jp
and
and
dec
mov
jnp
add
loopne
jns
push
pop
imul
jne
add
cld
aam
lret
add
mov
dec
movsb
sbb
inc
frstor
xor
imul
mov
add
cmpsb
fbld
fists
cs
int
fmuls
mov
lea
das
shlb
pushf
clc
sahf
sarb
in
out
xchg
push
inc
mov
or
inc
icebp
sbb
int3
sbb
mov
popa
inc
fcoms
jge
xchg
jg
int3
mov
adc
in
fisttpl
add
mov
inc
xor
stc
cmp
fsubrs
dec
sbb
sbb
aaa
or
aas
sbbl
lods
pop
dec
xor
jne
clc
jae
mov
xor
mov
rol
cmp
stos
cmp
test
and
addr16
push
lock
jp
dec
imul
fdivs
js
cmp
popa
and
stos
cmp
lcall
aas
orl
or
in
cmpsb
pop
inc
stc
jp
subb
out
push
movsl
pop
call
mov
push
repnz
shr
inc
cli
mov
mov
jae
cmp
mov
std
xor
sbb
rorb
and
mov
fxch
int
push
mov
leave
mov
mov
sub
das
mov
fidivrs
scas
mov
add
ljmp
inc
mov
mov
mov
push
sub
movsb
int3
inc
xor
ss
xchg
jmp
fsubp
ss
decl
dec
inc
jae
mov
mov
ret
lea
mov
sbbl
xor
xchg
add
cmp
mull
adc
int
and
std
mov
aaa
sub
invd
fildl
or
and
in
sti
data16
mov
pop
mov
xlat
xlat
dec
and
imul
jle
push
xlat
xchg
sub
sbb
inc
out
lahf
pop
mov
clc
leave
pop
dec
adc
and
mov
or
mov
ret
push
add
xor
call
out
and
loop
cmc
sarb
dec
xor
sbb
jns
dec
adc
xchg
jp
sub
sub
or
sub
dec
sub
add
sub
adc
jnp
inc
into
out
fyl2xp1
lds
cmp
xorb
add
mov
daa
push
inc
sbb
push
fists
aaa
int
inc
movsl
or
insb
inc
mov
sub
rclb
cmp
out
jg
push
jg
pop
repnz
lock
lret
stc
ss
push
shr
or
mov
sar
adc
jae
outsb
and
lods
je
adc
and
rcrl
adc
xor
jmp
das
jbe
out
rorb
rcr
add
hlt
fdivr
and
shlb
mov
shr
mov
dec
mov
cmp
sbb
xor
scas
inc
push
popa
popa
mov
outsb
mov
adc
jle
lahf
and
push
jne
cmpb
adc
and
mov
fiadds
mov
sbb
hlt
mov
or
and
mov
jne
add
icebp
pop
gs
push
lods
imul
add
jg
daa
jp
inc
insb
jle
jbe
test
faddl
mov
inc
in
push
fisttpl
xchg
xchg
pop
sarl
aad
cwtl
sbbl
into
dec
push
hlt
mov
pop
sub
adc
or
sub
call
iret
add
xor
sub
lret
pop
aas
jmp
fwait
mov
dec
stos
sti
std
add
sbb
mov
cmp
icebp
daa
jge
cmpsb
inc
shll
lret
jg
xchg
cmpb
or
addr16
mov
lock
shll
jne
outsl
add
repz
int3
pop
in
mov
mov
test
enter
inc
xchg
repz
aad
out
aad
mov
push
loope
aam
lock
xchg
xchg
dec
vpshuflw
ja
or
sahf
mov
and
jp
mov
stc
test
mov
lods
pusha
sbb
bnd
mov
sub
mov
outsb
ljmp
sub
xor
push
mov
xor
jo
pinsrw
dec
jbe
cmp
ja
adc
pushf
jg
xor
pop
rclb
or
jl
inc
fmull
xchg
lods
sbb
ja
popw
fmull
or
pushf
outsl
ds
push
push
hlt
or
rclb
jae
lds
pop
test
jbe
sbb
int
mov
fcomps
push
mov
jno
ss
cmpl
mov
out
sub
dec
pop
mov
mov
pop
pop
es
loope
xchg
or
sbb
daa
mov
pop
jbe
jg
add
das
fists
mov
roll
and
add
subl
xchg
aam
cmp
mov
and
ficompl
subb
addl
filds
inc
lds
insl
dec
push
notb
int3
fdivs
popf
push
push
xchg
jb
fmull
popa
lods
cld
xchg
or
sahf
mov
pop
xor
inc
mov
jge
xor
push
jp
fwait
data16
js
stc
addl
xchg
popf
out
sub
lea
jne
movsl
outsl
jb
jg
je
mov
xor
jno
push
fdivl
xchg
sahf
lods
mov
push
dec
out
aaa
mov
xor
or
stos
fwait
jnp
and
jbe
rclb
pop
push
mov
into
cmc
dec
stos
rorb
cmp
lods
loopne
clc
andl
cmp
cmpsl
call
gs
cmp
and
cmc
pop
aam
ja
cmpsb
in
in
mov
aas
sbb
adc
sbb
mov
adcb
leave
iret
jns
pusha
mov
test
stc
lds
lods
faddl
stos
cmpsb
xor
or
add
icebp
push
xor
sub
int3
jbe
out
mov
gs
sahf
cmp
xchg
jl
fwait
dec
xchg
ret
repnz
cld
or
pop
cmpsb
add
inc
pop
movsb
out
add
cmc
mov
push
jp
mov
loope
cmp
insl
and
iret
adc
repnz
cmp
pop
mov
filds
mov
adc
test
cmp
push
push
xchg
fsubr
pop
ja
pop
movsb
insl
push
pusha
mov
shrb
xchg
movb
mov
push
sbb
xchg
data16
and
movsb
cld
xchg
add
mov
push
cmpsb
mov
mov
jle
jle
test
lock
xchg
mov
sahf
movnti
fstps
xchg
loop
dec
scas
jo
in
xchg
loopne
fsubp
out
inc
cmp
test
ss
lcall
test
xchg
dec
rcrl
cmp
aaa
xchg
mov
stos
mov
call
stos
push
or
fxch
pop
movswl
or
loopne
push
dec
addr16
inc
fwait
ret
ret
or
adc
outsb
rcrl
lcall
add
mov
cmpb
jg
in
outsl
mov
add
mov
cmp
add
dec
lea
mov
test
mov
mov
addb
stos
xlat
xchg
mov
pop
aam
in
dec
ret
inc
arpl
pop
push
cmp
jecxz
sbb
mov
jo
cwtl
js
inc
push
jns
andl
imul
rorb
adc
call
add
arpl
add
and
mov
cmpsb
jmp
jbe
jle
data16
jnp
dec
rcll
sbb
sbb
xchg
lea
shrb
arpl
inc
imul
mov
or
ljmp
mov
jecxz
aad
ds
aam
cmp
arpl
mov
shll
repnz
stos
dec
loopne
mov
jnp
pop
mov
iret
imul
push
clc
mov
sbb
pop
dec
jp
jno
pusha
nop
push
xchg
add
xor
dec
test
sbb
std
or
inc
mov
xchg
xor
pop
std
rorl
mov
dec
dec
pop
push
pushf
mov
fs
adc
int
and
sti
scas
popa
ljmp
adc
sbbb
stc
ror
pop
scas
shll
test
and
call
subb
mov
lock
jp
test
sbb
mov
xchg
hlt
adc
jp
add
out
xchg
adcl
rcr
subl
data16
adc
mov
ss
out
mov
aaa
mov
push
out
into
cmp
jno
adc
push
popf
rorl
jo
jp
push
xchg
mov
shrl
pop
pop
insl
mov
inc
cmp
pusha
ret
outsb
add
sub
shld
push
mov
cwtl
lret
loopne
xchg
xlat
sub
adc
sub
arpl
pushf
push
dec
fwait
arpl
ds
std
sbb
dec
adc
mov
ds
dec
push
int3
xor
cmp
in
daa
add
xchg
mov
add
cwtl
orb
fiadds
xor
mov
es
subl
sub
jg
jge
cwtl
aas
push
jecxz
mov
test
insl
jae
dec
mov
repz
gs
push
int3
shll
dec
sbb
pushf
add
pop
sarl
hlt
push
pushf
or
sbb
jmp
int
out
sub
repz
inc
in
xchg
ja
xchg
out
test
lcall
xor
mov
aaa
dec
cmc
mov
ret
imul
mov
inc
imul
mul
and
cmpsb
cs
sbb
aas
add
inc
push
xor
sub
mov
mov
testl
adc
filds
int3
loope
push
add
jecxz
jle
mov
pop
push
stos
mov
hlt
std
movsl
cmp
fucom
mov
das
mov
cmpl
aaa
aad
mov
push
mov
sahf
xor
or
sub
outsb
jbe
loop
jnp
scas
xchg
mov
pop
add
lods
insl
pop
jle
js
scas
xchg
push
xchg
cmpsb
sbb
mov
mov
xlat
fiadds
arpl
mov
jnp
add
xorl
cmpsb
ror
bound
inc
sahf
xchg
xor
stos
dec
sub
xchg
xor
dec
shrl
sbb
mov
pop
and
add
stos
pop
and
stc
pop
das
stos
ds
loopnew
add
push
rcrl
popa
out
inc
pushl
out
daa
rorl
test
jge
xchg
push
xor
jbe
and
dec
cmpsb
pop
and
xchg
out
mov
clc
mov
mov
outsl
xor
in
rcrl
dec
pop
cmpsb
sarb
jp
push
in
ret
jle
fildl
test
jmp
sbb
jl
cli
fldenv
sbb
fsubl
cmpsl
std
cmpb
das
rolb
push
sub
jno
xchg
mov
jae
sub
bnd
out
test
ljmp
jle
ffreep
test
add
imul
pusha
inc
test
ret
notl
inc
movsl
jecxz
xchg
inc
repz
mov
pop
xchg
cmp
cmp
jno
stos
add
ficoml
mov
sti
sub
mov
test
and
xor
es
and
xchg
sbb
push
pop
and
test
or
inc
test
sbb
aaa
divb
movsl
pop
rorb
or
push
mov
lds
jp
fcmovnbe
jl
stos
enter
push
fisubl
test
sahf
lret
in
mov
add
int
arpl
jg
cld
andl
sahf
int3
dec
push
cld
es
sbb
cld
mov
inc
mov
movsl
scas
xor
ss
loop
addr16
loope
fs
mov
pop
or
xor
mov
mov
inc
mov
jp
addb
aad
fucomi
gs
outsb
lret
or
sbb
fnstsw
cltd
adc
push
jl
xlat
push
mov
fnsetpm(287
adc
mov
fmull
cmpsb
enter
jge
mov
fcoml
xchg
nop
andl
lcall
cs
push
push
xor
stc
pop
lods
fisubl
pop
add
pop
stc
fdivs
xor
pop
inc
jecxz
ret
sbb
movsb
xchg
adc
jnp
imul
in
dec
or
mov
add
mov
mov
aas
insl
push
inc
adc
inc
rol
lods
inc
cli
xlat
jo
xor
pop
mov
push
clc
rcl
jns
loop
inc
js
mov
scas
inc
insl
mov
inc
test
ret
das
leave
mov
xchg
shl
bound
inc
add
aam
test
jge
jne
add
idivl
test
xor
sbb
icebp
jl
daa
pop
scas
es
loop
cmp
sahf
fs
or
aad
xor
add
mov
mov
sbb
das
or
pop
imul
dec
cmp
nop
repnz
out
fsubp
xchg
lods
inc
and
push
push
xchg
outsb
jae
inc
jl
push
leave
cld
or
pushl
and
in
inc
or
and
lret
movsl
int
cmp
or
pop
mov
jb
shlb
or
rdtsc
pusha
in
add
push
cli
je
scas
or
inc
sub
sub
push
mov
sub
daa
stc
mov
cltd
cmp
cmpsb
pop
hlt
ja
insb
jle
mov
dec
incl
lcall
int
push
scas
stc
xchg
adc
bound
ret
push
add
push
mov
sub
cli
sbb
add
pop
jb
mov
mov
push
and
xchg
ret
in
push
jne
mov
xchg
pop
enter
sub
es
test
stos
call
cld
jl
pop
inc
jmp
dec
push
xor
jp
sub
pop
mov
cltd
and
nop
inc
jae
and
sub
jp
mov
popl
in
inc
adc
aaa
dec
inc
testb
icebp
hlt
test
jp
sub
and
ret
xchg
movsl
cmc
int3
jg
push
sub
movsb
je
xchg
cmp
mov
pop
pushw
icebp
and
loop
fsubr
xchg
cmp
push
test
addr16
xlat
add
or
pushf
dec
push
mov
aad
dec
movb
adc
xor
adc
mov
dec
xchg
and
mov
popa
mov
cltd
push
in
rcll
fs
push
adc
aam
push
xlat
add
push
cwtl
jg
fsub
adcl
ret
dec
mov
fcomps
cmc
clc
jg
pop
enter
push
mov
sbb
es
enter
add
pushf
pusha
les
sarl
adc
or
lods
mov
in
call
dec
sbb
or
xchg
xor
mov
cmp
sbb
push
add
add
nop
push
sub
push
mov
mov
std
mov
cmp
dec
rorb
push
xchg
iret
loop
lods
int
jecxz
cmp
add
mov
popa
jae
adcb
push
sti
sub
ret
pop
addl
mov
jmp
or
push
pop
sbb
int
enter
pushf
aas
xor
lcall
int
imul
and
or
lcall
hlt
or
les
ljmp
sub
pop
jbe
or
xor
pop
fwait
mov
ja
mov
xchg
lods
shl
pop
cmc
dec
div
stc
jg
cmp
ljmp
fsub
mov
xchg
xchg
out
mov
add
sbb
mov
jne
and
fdivl
xorb
stc
arpl
pop
out
adc
jg
sahf
jo
call
fidivrs
jnp
mov
nop
mov
jne
xchg
jae
mov
hlt
jecxz
add
jae
dec
mov
xchg
push
loopne
mov
and
mov
and
int
sbb
cmc
arpl
push
imul
loope
ljmp
jmp
jno
adc
cmc
fisttpll
jae
adc
adc
fnstsw
push
arpl
xchg
lretw
mov
adc
xchg
call
enter
enter
jmp
or
shr
pop
imul
movsb
pop
xchg
lfs
pushf
fsubrs
jmp
adc
add
dec
push
rcrl
xor
stos
jg
out
sub
lock
cmc
cmp
xor
int
xchg
cmpsb
pop
test
in
outsl
loope
fadds
fdivs
jecxz
loope
xchg
enter
adc
push
sarl
insb
xchg
lcall
insb
push
jp
xchg
test
daa
and
jmp
push
push
cli
mov
mulb
push
es
cmp
mov
outsl
jle
and
cmp
int3
jae
scas
loopne
fwait
std
pop
inc
sub
xchg
loope
ds
repnz
cmp
push
jl
inc
and
sarl
mov
push
mov
lds
imul
jge
mov
mov
js
adc
gs
xor
ss
divl
arpl
mov
ds
push
popa
pop
andl
push
decb
xchg
adc
test
jns,pt
and
addr16
pop
sub
xchg
add
emms
jl
cmp
cmc
jae
shlb
xor
insl
mov
xchg
adc
cmp
test
pop
les
mov
mov
or
jge
sahf
dec
adc
mov
into
xor
jp
arpl
pushf
mov
movsl
jae
sub
xor
mov
push
sub
sub
fstps
rcl
ret
mov
fsts
xchg
scas
dec
mov
scas
repz
mov
mov
mov
mov
es
rorb
xor
in
mov
hlt
cld
inc
fcoms
mov
inc
or
mov
lods
xlat
sub
pop
or
stos
pop
rorb
inc
aad
rorl
inc
ss
daa
ljmp
push
dec
jecxz
sbb
mov
mov
push
in
das
icebp
cmp
sub
rorl
loopne
call
enter
mov
loop
cmpsl
mov
jno
aas
outsl
mov
test
inc
fwait
adcl
aas
fxch
cmpsb
pushf
popa
clc
or
rolb
mov
sar
cmp
jmp
test
cmp
std
mov
fistpll
pop
aad
and
inc
mov
mov
enter
popf
pop
sbb
rol
aad
es
mov
fcmovb
data16
mov
popa
inc
cwtl
roll
push
mov
or
jg
dec
int
xor
lcall
dec
xor
nop
xchg
dec
fnstenv
dec
fmull
dec
aas
jle
lret
sub
mov
adc
popl
rcrb
dec
mov
lahf
stos
int
aaa
xor
rcrl
adc
out
es
roll
add
les
xchg
repnz
jae
cmp
pop
cs
push
ror
sbb
outsl
mov
movsb
pop
push
insl
lahf
data16
sti
mov
xor
cmp
shlb
or
sub
lret
sbb
xchg
and
xor
pop
fidivs
arpl
fnstcw
mov
mov
leave
add
inc
repnz
lods
mov
sub
shlb
push
test
stos
rcll
add
mov
es
addr16
pusha
outsl
out
in
mov
adc
and
mov
sti
cmp
push
lds
jp
push
jle
leave
leave
outsl
out
sub
loopne
adc
adc
stc
xchg
nop
repnz
test
out
jle
lret
sahf
mov
mov
dec
jne
adc
adc
cmp
imul
push
sub
xchg
and
lock
mov
loop
push
ds
sbb
stc
sub
dec
push
push
idivl
in
push
lahf
pop
in
lret
push
jno
and
push
and
push
inc
leave
push
dec
jnp
movsb
push
push
sbb
mov
xor
test
push
jae
into
shlb
xor
lods
je
inc
jle
imul
cld
and
xor
pop
push
xchg
jle
sahf
and
cmpsb
mov
lock
inc
push
cwtl
mov
xchg
jecxz
add
in
mov
fwait
enter
adc
and
or
jne
jbe
inc
mov
dec
jb
mov
insl
cs
rcl
or
adc
in
push
sbb
pop
movsb
aas
sub
loop
pop
jne
sbbl
test
cmpsl
sub
cltd
into
xchg
or
sub
pop
mov
loop
sub
out
mov
cmp
shr
sub
add
mov
sub
pushf
sbb
pop
xor
scas
pusha
sbb
sub
in
jp
out
arpl
fadd
mov
mov
cs
out
insl
mov
iret
lock
xor
cltd
dec
js
clc
and
lods
adc
dec
subb
sbb
fisttps
aam
test
inc
aad
hlt
mov
push
xor
dec
std
mov
and
inc
xchg
inc
in
cmp
mov
inc
adc
sub
test
inc
sub
adc
push
sbb
scas
push
push
stos
leave
frstor
lret
xor
cmp
jae
ss
mov
cs
loopne
sahf
xchg
jmp
imul
enter
or
mov
jge
in
lret
mov
cs
xchg
cltd
mov
xor
sbb
roll
sti
cmp
mov
dec
dec
push
and
sub
mov
inc
jl
outsl
dec
adc
xchg
sahf
fstps
inc
fsub
mov
pop
jmp
repz
or
incb
jp
or
pop
mov
addr16
and
push
roll
jecxz
pushf
fimull
gs
out
xor
pop
mov
out
out
clc
cmp
test
pop
sahf
mov
jne
sbb
daa
jns
out
mulb
les
mov
mov
inc
and
ja
sti
pop
push
shlb
mov
xchg
mov
cld
lods
sbb
xor
pop
outsb
jns
fs
mov
cli
inc
lcall
mov
test
cmp
fwait
js
xchg
nop
pop
xchg
mov
dec
xchg
jmp
xchg
sarl
dec
xchg
jno
add
clc
add
ret
inc
gs
jp
into
adc
xor
jmp
mov
std
out
adc
cli
mov
in
xchg
xor
mov
mov
testb
out
divl
cmpsb
or
arpl
mov
fcompl
xchg
imul
call
lds
adc
push
dec
dec
inc
aam
mov
or
lret
lods
fidivrs
mov
jge
fcmovb
jmp
push
cli
dec
mov
fidivrs
xor
icebp
xchg
jne
sbb
push
out
sbb
mov
bswap
pop
jle
sub
in
leave
insl
jl
bound
jae
roll
ficomps
popf
cld
les
rcl
rorl
mov
aaa
sti
rcll
dec
insl
ror
jecxz
sbb
shll
add
sbb
mov
sub
inc
cmpsl
add
fistpll
int
out
xchg
adc
lret
pop
out
sub
ja
rcll
jno
cmp
pop
pusha
inc
ret
aad
sub
in
push
adc
mov
add
cmp
mov
pusha
dec
int3
push
mov
mov
inc
inc
mov
and
hlt
loope
fcomp
daa
or
inc
dec
mov
dec
push
fdivrl
push
mov
pop
add
mov
test
into
in
outsl
aam
gs
ljmp
aaa
mov
xor
jecxz
lea
imul
add
pop
clc
lret
jecxz
jmp
jne
sbb
into
inc
jo
mov
mov
mov
mov
xchg
in
lods
mov
nop
cmc
lock
cmpsb
adc
xor
add
out
mov
push
xor
mov
icebp
adc
les
jp
dec
inc
pop
pop
syscall
inc
test
loopne
sbb
push
adc
push
shlb
pushf
xchg
dec
sub
add
dec
les
adc
dec
xchg
fldl
jle
push
mov
test
scas
pop
mov
and
push
pop
movsl
add
fsts
dec
fs
rcrb
adc
imul
andl
fidivrl
gs
xchg
sub
out
fwait
push
fimull
mov
imul
mov
xlat
lds
test
xchg
pop
jmp
push
jmp
inc
dec
and
dec
nop
test
cmpsb
cmp
rclb
loop
aam
les
ret
enter
jg
and
or
pop
mov
add
popf
jo
jl
sub
push
sub
pop
lahf
dec
push
xchg
mov
mov
adc
nop
adc
sub
insl
imul
pop
lcall
jo
add
jg,pt
mov
inc
call
js
int3
xchg
cmp
stc
jno
jb
and
test
sub
das
ljmp
iret
outsb
xor
sub
xchg
fmulp
ss
imul
aam
arpl
inc
imul
arpl
push
rcrl
scas
lahf
je
jns
ljmp
arpl
push
nop
or
leave
mov
gs
aas
inc
movsl
decb
call
lcall
fcomps
lods
and
push
and
jo
cmp
xor
pop
cmp
stos
mov
and
cmpsl
pop
push
sbb
mov
sbb
hlt
cmpsb
sbb
cmp
mov
sti
xchg
pop
inc
in
cmp
sarl
orb
mov
lret
rcrl
cmp
push
cmc
fistpl
inc
sub
sbbl
clc
out
push
subl
add
adc
inc
xchg
mov
jb
jle
dec
sti
cmp
cmp
jbe
scas
popa
js
inc
mov
inc
push
push
les
jae
popf
in
jmp
aam
out
outsb
xchg
sbb
stos
lret
pop
scas
mov
xor
dec
fbld
repz
push
nop
shlb
out
lea
jo
mov
cmp
out
sbb
out
js
bound
ss
stos
hlt
ljmp
lahf
jecxz
mov
sbb
push
jns
mov
aad
ja
addb
jns
aas
call
rorl
cmp
imul
xor
orb
push
fcoml
sub
int3
in
inc
push
addr16
sahf
push
push
les
jg
push
adc
jbe
lds
jmp
pop
push
mov
aam
inc
aaa
push
stos
lods
sub
movl
xor
push
or
fs
jmp
jo
addr16
scas
sbb
and
mov
jb
test
dec
mov
test
and
sbb
scas
xchg
mov
stos
jb
mov
in
sbbb
cmp
push
das
jl
adc
insl
xor
lcall
not
cwtl
cmp
sti
mov
jge
lock
xchg
movsb
pop
adc
insb
dec
mov
push
or
cmpsl
jmp
les
adc
es
and
into
jbe
and
pusha
icebp
jno
cs
sub
or
inc
test
sti
adc
xor
pop
mov
outsl
mov
xor
cmp
xor
lahf
add
pop
jb
mov
sbb
xor
lock
je,pn
pop
fsubr
outsb
int
cltd
xchg
int3
mov
js
push
in
pop
std
jmp
jb
lret
or
in
jbe
jb
jne
cmp
adc
sbb
aam
subl
into
cmc
insl
or
mov
call
lea
lea
jnp
adc
test
arpl
icebp
mov
mov
cmpsb
ljmp
pusha
subb
shlb
sub
ficomps
outsb
or
push
mov
data16
mov
adc
dec
out
cwtl
mov
les
adc
cli
addr16
pop
int3
pop
pushf
dec
mov
cmpsl
in
inc
out
mov
adc
outsl
fcompl
jg
mov
sub
ja
stc
inc
aaa
cmp
fcomi
mov
fisttpl
push
clc
dec
jnp
cmp
sahf
scas
mov
pop
cmpsl
movsb
imul
adc
test
std
push
xchg
enter
lret
xchg
mov
mov
enter
rclb
mov
sub
cwtl
pop
cld
sbb
in
test
xchg
in
fnstenv
bound
pop
pop
int
ret
ljmp
out
and
jge
andl
cltd
xor
aam
cwtl
imul
notb
adc
sbb
je
js
enter
inc
into
xor
xchg
xchg
cmc
in
scas
push
mov
inc
es
pop
push
push
sub
idivb
ret
enter
or
out
dec
push
gs
in
leave
fs
test
shrl
push
scas
ret
adc
addr16
scas
iret
in
rorb
sbb
cmp
lods
sbb
int3
outsb
fwait
add
mov
inc
and
insl
push
and
push
call
pop
mov
roll
push
push
iret
negl
in
test
loopne
mov
arpl
jnp
inc
cmc
inc
sbbb
div
pop
mov
xor
push
lock
dec
adc
fs
xchg
push
test
cmp
loopne
test
and
stos
and
or
mov
leave
mov
xchg
mov
inc
cs
lods
out
faddl
add
mov
fisubl
xchg
mov
mov
scas
push
in
cld
pop
shrb
jns
fwait
insl
inc
jl
mov
mov
pop
push
js
dec
popf
in
mov
sbb
push
icebp
cs
xchg
mov
call
pop
or
subb
jle
stos
jle
jecxz
out
insb
and
jecxz
int3
dec
ret
fistps
clc
fstps
cmp
fidivrl
cltd
popf
cmpsb
mov
add
adc
sbb
ror
mov
pop
in
pop
ja
jp
enter
test
insl
or
push
insl
mov
in
shl
sahf
ja
lods
adc
scas
lret
test
mov
sub
jmp
pop
pop
mov
fmuls
push
jecxz
pop
xlat
jg
adc
push
or
lea
call
dec
cmp
insl
inc
cmp
push
dec
mov
mov
lds
adc
jo
stos
mov
push
add
mov
sbb
xor
xchg
adc
cwtl
mov
push
loope
jle
call
hlt
xchg
xchg
xor
fdivrs
push
xchg
or
mov
mov
dec
xchg
jo
out
adc
outsl
mov
stos
dec
push
scas
lock
push
push
mov
push
push
cmp
xchg
stos
lods
dec
jecxz
les
push
popf
int3
adc
jg
cmp
adc
jg
adc
jo
lds
or
shrb
je
jb
inc
lret
cwtl
aas
loop
cltd
push
mov
lds
xor
jnp
loopne
pop
jae
sarb
ret
addb
cwtl
sbb
dec
jbe
notb
test
cmp
sarb
shlb
inc
xor
dec
sub
sub
jle
cmp
shrl
sbb
cld
ficompl
xchg
mov
ds
and
jp
cmp
inc
and
pop
mov
jmp
fisubs
cmpsb
pushf
movhps
test
popa
daa
in
mov
stos
mov
mov
stos
xor
mov
mov
jb
test
rcll
mov
scas
arpl
or
and
rcl
and
mov
push
mov
fstl
pusha
adc
cs
inc
pop
dec
mov
mov
push
push
int3
mov
push
loop
pop
sbb
adc
cwtl
call
dec
jecxz
or
inc
or
add
dec
and
daa
add
fs
cs
adc
jo
adc
in
add
sbb
and
std
lea
and
mov
jl
adc
adc
lahf
ret
xchg
adcl
insl
repz
mov
xor
inc
mov
loope
jg
xchg
rorl
out
sub
and
sub
jmp
or
inc
cmp
jle
mov
jbe
sar
arpl
ss
add
jg
xor
pushf
ja
and
rcl
rclb
pop
xchg
notl
inc
xchg
or
stos
jge
push
sbb
les
mov
push
jns
adc
push
xor
or
jge
and
pusha
jle
push
movd
pop
push
daa
sti
ja
test
mov
in
icebp
ret
or
cmp
push
leave
mov
imul
sub
cmp
insb
adc
push
int
popa
cmc
or
mov
ret
test
mov
push
outsl
int
dec
dec
cli
cmp
sub
inc
jle
jge
stos
push
jne
pop
outsb
jns
jg
sbb
and
test
mov
mov
pop
mov
subl
into
xchg
lea
pop
in
adc
sarb
ljmp
cmpsb
and
lahf
scas
inc
outsl
add
adc
mov
cmp
pop
xor
dec
js
cwtl
fwait
es
lea
out
movsl
stos
jl
adc
scas
ret
stos
adc
test
jp
stc
ss
jns
cli
add
and
addr16
cmpsl
test
sub
mov
or
xchg
movsb
inc
or
dec
xchg
mov
jmp
xor
push
add
into
sahf
xchg
jmp
aas
fbld
xor
mov
gs
mov
sub
inc
push
xchg
jmp
insb
int3
xchg
cmpsb
mov
cltd
loopne
stos
add
or
sarl
xchg
cmp
mov
mov
push
cmp
add
push
adc
mov
push
es
jb
mov
int
pop
dec
test
fildll
mov
mov
mov
dec
mov
add
xor
in
push
insl
and
jbe
into
shrl
xor
dec
stc
cmp
sbb
ljmp
mov
ret
sbb
jnp
inc
pop
sub
scas
mov
dec
je
lds
repz
call
call
sub
mov
pop
mov
dec
int
xchg
pop
inc
ss
adc
pop
adc
loop
mov
imul
xor
lea
ret
mov
lods
jae
mov
dec
fwait
push
lahf
lret
daa
mov
icebp
lret
addr16
mov
inc
jnp
lret
push
pop
fdivrl
aad
inc
xchg
adc
in
dec
push
loop
clc
shll
and
jae
lret
into
and
or
jmp
fistpl
mov
jb
out
sub
cld
scas
and
xchg
mov
pushf
ljmp
insl
pop
add
mov
das
xchg
lret
daa
jns
in
jno
and
mov
inc
sub
shl
jb
adc
adc
xchg
int
mov
xor
mov
stc
pop
xor
out
push
cmp
movsl
pushf
cltd
rorb
mov
pop
xchg
xor
xchg
inc
adc
out
or
mov
pushf
jmp
adc
or
and
pop
test
dec
push
icebp
movsb
pop
jge
lret
imul
xor
pushf
cmp
stc
mov
cltd
imul
in
or
in
pop
fisubrs
mov
adc
test
lret
lret
jbe
jg
lret
movsb
out
sub
push
loopne
dec
dec
push
dec
sti
fs
int3
mov
lcall
cwtl
adc
jge
adc
jbe
insw
push
or
movsb
or
push
stos
inc
mov
pop
sbb
pop
xlat
inc
jp
repnz
xchg
insb
adc
jbe
mov
outsl
inc
mov
adc
cmc
mov
outsb
jb
aam
cmp
push
jge
aaa
faddl
pop
test
loop
xchg
ficoml
movsb
sbb
push
fwait
imul
dec
daa
cmp
insl
pusha
loopne
mov
repnz
mov
xchg
pushf
scas
push
ret
stc
cltd
xchg
std
and
inc
dec
adc
insl
in
adcb
dec
mov
pop
pop
cmpsb
in
bound
lock
int3
inc
pop
mov
popf
outsb
jmp
test
xor
push
or
xor
iret
xor
test
stc
or
dec
into
jb
mov
fisubrs
scas
outsb
mov
js
notl
xchg
inc
push
aad
test
mov
popa
cs
or
jg
mov
xchg
nop
out
adc
lods
mov
ficomps
ljmp
jecxz
and
andb
jle
test
ja
test
add
out
in
jle
loop,pt
pop
les
and
push
mov
in
loope
jecxz
inc
out
insb
lcall
jle
das
mov
mov
xchg
lahf
xchg
pop
push
push
mov
adcb
mov
and
shlb
mov
fucomi
push
hlt
pop
cmp
mov
mov
xor
cli
shl
call
dec
jle
inc
mov
dec
mov
test
jmp
sbb
into
in
repz
mov
cmp
inc
adc
icebp
bts
xchg
cmp
xlat
lea
mov
mov
adcb
pusha
push
pop
faddl
jne
jg
mov
adc
les
adc
in
or
mov
xor
into
mov
cmp
xor
repnz
pop
data16
or
xchg
insb
in
or
ret
shl
mulb
mov
lahf
outsb
mov
sbb
fcomi
xchg
add
stc
push
pcmpgtd
adc
dec
and
aad
sbb
dec
ficomps
dec
sbb
je
popf
out
mov
orl
inc
xchg
fcompl
cs
xchg
mov
mov
xchg
in
dec
adc
pop
out
insb
push
cli
xorl
movsl
dec
add
push
pop
mov
push
mov
sbb
and
lret
xor
adc
push
mov
mov
test
sahf
mov
mov
ljmp
mov
xchg
cmp
xchg
xor
call
es
jns
dec
loopne
mov
cmp
fcmovnb
and
sahf
mov
and
push
das
insl
adc
clc
lods
pop
ds
int
mov
fiadds
and
out
jnp
inc
call
mov
imul
jge
and
gs
or
andb
xor
fdivrl
cmp
sub
js
addr16
popf
movsl
cs
add
push
dec
aam
movsl
clc
subb
popa
mov
sub
or
test
jno
fsubrl
lea
fdivrp
pop
mov
cld
pop
push
xchg
pop
xor
adc
mov
andps
lea
out
pop
jns
clc
enter
pop
mov
int3
loop
dec
xchg
sarb
lea
jge
fwait
packuswb
xor
cmpsb
pop
sbb
cmp
fs
jge
sbb
mov
test
and
cs
mov
push
pop
jne
inc
sbb
mov
cmp
dec
add
and
push
adc
mov
dec
test
or
push
sbb
inc
lds
insl
pop
or
cwtl
xchg
loop
loopne
loop
jg
xchg
add
and
out
sti
and
jns
jmp
imul
mov
sbb
movaps
fdivr
cs
xchg
xor
sub
sti
nop
mov
and
push
cmp
or
or
shrl
mov
mov
jl
cltd
es
jbe
jns
shr
mov
add
js
mov
je
mov
lcall
sbb
movsl
jno
jg
ret
sub
scas
adc
in
rcrl
jge
push
lock
sbb
sub
mov
push
divb
jns
push
push
add
xor
sti
mov
or
inc
dec
or
movsb
mov
shrl
jl
shll
iret
outsl
and
jno
fidivrs
add
mov
mov
push
fldenv
mov
insl
sub
xchg
add
pop
sub
outsb
xor
add
ret
adc
xchg
xchg
sub
pop
dec
mov
pop
jmp
or
or
mov
inc
out
adc
mov
lret
cmpsl
decl
mov
and
xrelease
sbb
xor
pop
mov
push
push
xor
lcall
add
addr16
xchg
jne
sub
mov
xor
mov
mov
inc
cmp
jp
add
jbe
mov
dec
mov
and
enter
out
pushf
cmp
fldcw
cwtl
mov
daa
repz
or
aaa
cmpsl
cltd
cmp
ret
cmpsl
pop
es
sub
andl
pop
in
jne
adc
or
lret
or
jae
adc
dec
fs
prefetch
xor
xchg
and
or
int
enter
mov
lcall
ret
into
push
sub
dec
cmpl
cli
lahf
loop
push
inc
addr16
mov
xchg
push
xchg
mov
or
add
test
fs
shrl
fcmovnb
jle
or
ds
or
push
loopne
mov
std
sub
jl
or
jnp
ljmp
push
xor
dec
jg
adc
sub
xchg
mov
push
test
jns
cwtl
loopne
out
je
lds
mov
fdivs
sub
cmpsl
inc
xchg
add
xchg
xor
push
out
pusha
push
sbb
dec
cs
cmp
and
out
or
xor
cmc
xor
cmp
and
mov
loop
mov
std
push
jge
or
movsl
jae
fcoms
xor
xchg
es
adc
lea
or
inc
scas
pusha
shr
mov
or
dec
data16
jnp
fldcw
imul
jl
fwait
sbb
std
pop
adc
loopne
add
adc
cmpsb
pop
or
dec
cs
add
adc
mov
xchg
daa
sub
cmp
push
cmpsb
bound
push
stc
out
and
out
js
sahf
adc
xor
loop
in
mov
out
or
ret
jmp
loopne
incl
std
pop
clc
push
sub
pop
pop
sub
test
xchg
sbb
lods
cmp
data16
jecxz
pop
insl
sti
adc
je
and
imul
xor
loope
jae
xlat
test
pop
mov
mov
jbe
xchg
sarb
xchg
pop
mov
push
and
ljmp
or
ret
pop
dec
xor
shrb
std
push
jg
rcrb
orl
mov
arpl
sbb
fdivrl
dec
jo
mov
cmp
shll
cmp
or
fwait
adc
jnp
mov
xchg
into
push
lahf
daa
adc
in
mov
insl
nop
mov
addr16
subb
push
divps
mov
xor
jge
jb
data16
cltd
xor
inc
xor
xor
dec
lcall
outsb
adc
cmp
cmp
push
arpl
std
xchg
push
xchg
fstps
fwait
inc
rcrb
mov
test
fiaddl
ret
fstpl
popa
rorb
ret
jb
mulb
adc
xor
add
aad
sbb
adc
shlb
xchg
mov
test
inc
or
sti
xchg
ret
and
je
dec
pop
jb
cmpsb
pop
daa
sub
or
out
bound
push
and
cmc
insb
pop
sbb
mov
mov
adc
out
sti
sahf
or
es
dec
push
test
mov
or
cmc
mov
mov
lcall
xchg
or
adc
leave
mov
pusha
les
mov
sub
sbb
pop
jp
xlat
dec
loopne
fimull
mov
aaa
cli
jl
in
push
pop
nop
or
aas
dec
js
sub
lock
out
pop
out
lods
in
dec
mov
jno
clc
xchg
or
shlb
test
push
in
or
xchg
jae
lea
mov
fdivr
xlat
sbb
push
push
pop
aas
negb
mov
mov
xlat
mov
cmp
pop
scas
sub
mov
addb
shl
push
les
cld
add
cmp
adc
mov
mov
add
fistpl
xor
fstpt
call
mov
push
aaa
out
or
inc
jbe
test
into
mov
adcb
and
daa
cwtl
imul
in
jbe
jmp
sahf
out
repz
inc
xchg
sub
loop
jp
mov
dec
inc
mov
push
dec
push
dec
adc
bound
cmp
mov
ds
fcmovnbe
sbb
outsb
sub
iret
or
push
lods
xor
xor
pop
pop
and
jge
popf
push
adc
lds
test
cmp
loop
xor
xor
mov
add
mov
mov
andb
jne
fcmovu
in
inc
js
add
movsl
xor
es
shrb
sub
int
jl
bound
jmp
gs
fcomip
and
aam
cld
mov
xor
cwtl
xor
mov
stos
sbb
pop
addr16
push
repnz
push
lea
fdivs
cltd
rcrl
fmull
add
test
lret
pop
loopne
mov
ss
push
ficomps
jnp
outsl
loop,pn
out
leave
pop
mov
std
sub
push
mov
push
push
push
dec
pop
popf
sub
or
out
adc
rclb
imul
jb
in
xorb
faddl
mov
push
inc
bnd
fildl
inc
push
adc
inc
cmpsl
pop
dec
aaa
jmp
dec
into
leave
rclb
fsts
xor
push
call
add
bound
mov
fxam
addr16
jge
jecxz
cltd
ret
test
popa
and
test
and
jbe
xchg
das
ljmp
idivl
ljmp
push
iret
inc
xchg
sarb
sbb
xorb
sub
inc
pushf
stc
test
jmp
int3
out
outsb
cmpsb
xor
xor
cld
sbb
movsb
push
out
push
sub
ss
push
test
es
jecxz
sbb
sti
mov
pop
call
fmulp
fnstsw
inc
dec
xchg
in
stc
int3
cmpsb
pushl
je
xor
enter
ljmp
and
mov
ret
incb
fs
and
fisubrs
jle
push
test
cli
add
sub
cmpsb
pop
imul
cs
test
ror
outsl
xor
cmp
xor
hlt
loop
dec
push
jg
scas
mov
pop
push
cmp
mov
adc
jmp
mov
mov
sbb
mov
outsl
lcall
icebp
aam
ds
mov
lahf
pop
jecxz
cwtl
jns
push
ljmp
or
loopne
mov
arpl
pop
inc
add
popa
or
jmp
mov
xchg
lods
dec
out
adc
popa
in
or
pushf
int3
lea
jg
repz
fdivs
jo
andl
mov
dec
ljmp
lret
mov
sarb
fldenv
std
insl
js
add
test
out
xchg
inc
outsb
push
mov
clc
pop
add
dec
test
mov
pop
push
push
stc
nop
mov
pushf
or
adc
adc
adc
add
loop
rcl
dec
inc
jecxz
fs
popf
pop
xlat
mov
mov
lods
xor
mov
fcoml
xor
and
je
cmp
iret
or
daa
sahf
stc
mov
nop
jno
dec
push
out
jge
push
sbb
pusha
xor
test
jl
je
test
lock
sub
add
pop
jbe
fisubrl
popf
lret
push
add
jg
mov
jbe
jne
imul
and
addr16
imul
stos
aam
xor
lret
pop
fldt
pop
pop
mov
sti
and
xor
xor
or
mov
pop
cltd
jnp
pushf
xchg
mov
or
std
jle
push
out
fimull
mov
pop
adc
lret
and
mov
and
cmpsb
fsubrp
daa
jb
xchg
cmp
cmp
pop
add
jo
xor
je
sub
cld
outsb
mov
cmp
pop
jnp
icebp
sbb
cmp
adc
imul
and
pop
jnp
xchg
inc
aas
sub
dec
out
movsl
jge
cmp
popf
sbb
mov
ret
testl
inc
insb
adc
pop
inc
les
loop
and
addr16
or
pop
or
or
call
cwtl
lods
out
jl,pt
xor
cmp
pop
test
mov
int
outsb
jb
sub
das
push
add
setl
jo
xchg
push
jnp
aas
push
repz
inc
adc
jo
jb
mov
call
out
sarb
out
shrb
add
notb
negb
std
fisttpl
dec
xchg
sub
cmc
add
inc
jecxz
enter
dec
jno
push
jmp
addr16
jl
or
sbb
pop
ret
jle
cs
dec
leave
je
pop
push
mov
popf
mov
out
mov
or
sub
sarl
adc
sbb
or
cmp
hlt
xor
ror
push
rcrb
loope
mov
test
mov
fwait
in
dec
xor
adc
dec
sub
push
into
addl
xchg
sbb
imul
cld
adc
mov
test
and
push
dec
mov
add
sti
inc
push
in
repnz
test
xchg
loopne
lds
adc
sub
iret
adc
into
insl
and
cmp
mov
push
xchg
scas
cmpsb
adc
mov
push
ds
jmp
xchg
push
aad
sub
hlt
pop
cmc
jg
hlt
iret
dec
repnz
in
into
push
and
adc
outsl
aad
outsl
xchg
push
mov
sub
push
js
jg
push
es
pop
inc
das
push
test
pop
mov
or
push
cmpsl
lret
mov
and
loop
dec
cmp
cli
pop
jge
lret
cwtl
imul
sub
add
loope
mov
xchg
enter
inc
mov
jl
rcrl
sub
sbb
sbb
enter
ret
jge
aam
inc
or
jmp
hlt
push
adc
xor
push
xchg
divl
movsb
movsb
scas
loop
rolb
adc
inc
les
ja
adc
or
sti
inc
xor
mov
pavgb
jle
enter
fsubrp
outsl
mov
dec
pop
fisttps
mov
inc
test
push
fstpl
push
pop
lret
bound
daa
into
sub
scas
add
inc
mov
dec
sub
inc
xor
out
pop
gs
aaa
sbb
sub
jnp
sub
nop
dec
stos
jns
jbe
pop
mov
mov
es
ljmp
ficomps
cwtl
out
jg
mov
xchg
mov
stos
adc
movsb
cmpsb
fwait
mov
dec
repnz
and
lea
mov
or
gs
sub
daa
aas
push
xchg
adc
out
out
adc
adc
repnz
pop
loope
push
pop
ficoml
cli
popa
xor
sub
lods
cs
inc
dec
ret
jne
pop
cld
daa
or
les
fnstcw
out
test
dec
adc
scas
push
leave
aad
in
test
mov
lahf
cmp
ret
jle
ss
pop
cmp
iret
ljmp
mov
adc
sub
mov
sti
movl
mov
lods
xchg
mov
lds
and
cmp
clc
push
sub
ja
sbbb
dec
push
mov
xor
sbb
mov
lods
stc
xor
int
or
and
xchg
push
and
sahf
loop
mov
js
fs
imul
icebp
jno
pop
pop
rclb
mov
push
jb
or
adc
inc
fnstsw
shll
gs
xlat
jl
and
sub
pop
push
out
ja
in
cmp
add
pop
jmp
mov
int3
js
and
jns
or
push
ret
mov
popf
and
nop
mov
fdivrs
pusha
stc
xchg
fidivl
lret
mov
adc
mov
and
sub
inc
cld
cmc
xorb
xlat
hlt
or
cmp
dec
into
pop
subl
mov
sbb
inc
repz
xor
xchg
cmp
push
inc
add
dec
mov
sbb
xchg
imul
add
loopne
sbb
aas
es
sbb
sarl
cltd
in
xchg
inc
out
mov
pop
shl
sbb
and
push
jae
push
jnp
movsb
out
cmpsb
lea
loope
rorb
ret
and
push
sbb
cmc
push
in
cmp
fs
pop
push
pop
cmp
imul
sbb
lods
mov
andb
xchg
xor
push
mov
lock
add
add
dec
sahf
stos
push
push
shll
pop
cmp
fistpll
pop
jo
ret
add
mov
cwtl
popf
adcb
int3
cmp
add
addr16
mov
xchg
shrl
fistpl
adcl
bound
mov
and
pusha
cmp
cmpsb
mov
jp
roll
pop
add
clc
jg
lds
push
mov
sub
rcll
mov
pop
and
and
push
xor
inc
shll
std
fdivrs
fildll
pop
notl
mov
jge
dec
jno
pop
inc
or
fdivl
cmp
das
or
aam
int3
add
sub
std
imul
notl
std
mov
xchg
inc
add
and
pop
clc
imul
mov
cld
xchg
push
fisubs
ss
or
adc
out
cltd
mov
sbb
popf
xor
jnp
popf
xlat
push
push
lods
adcb
mov
dec
pop
jg
scas
jl
lcall
sub
pop
aas
or
movsb
mov
xchg
pop
ss
or
inc
xchg
mov
mov
daa
dec
cmp
lods
stos
sbb
xorb
or
rcll
xchg
out
push
stos
push
jne
sbb
xor
pushf
loopne
jp
or
push
ret
or
lds
sub
insl
add
fidivl
or
ret
sub
inc
mov
enter
scas
pushf
mov
insb
cmp
or
int
jg
fwait
pop
sub
ja
fimull
sbb
xchg
fdivr
pop
mov
rcpps
pop
adc
fadd
imul
xchg
jmp
insb
sub
roll
testl
mov
shr
pop
push
fidivs
mov
sub
sti
inc
dec
mov
cmpsl
int3
ja
out
xor
sbb
pop
pop
cmp
pushf
fwait
xor
ja
in
push
out
popf
add
sahf
mov
mov
rcll
movsl
dec
xchg
xlat
or
or
jg
pop
jb
rcl
jnp
cs
cmp
int3
sub
and
mov
jb
fnsave
xchg
inc
adc
movsb
or
mov
outsb
pop
ja
cltd
sbb
xor
sub
mov
cvtpi2ps
cli
sub
pushl
xor
dec
insl
movsl
sahf
cmp
ds
sub
paddd
and
add
mov
jb
sbbb
jae
or
and
push
mov
sub
jge
jle,pt
mov
xor
arpl
roll
pushf
shlb
mov
int
in
mov
sub
iret
xor
pop
pop
lcall
jecxz
popa
push
repnz
sub
lret
mov
es
data16
push
fisttpl
cmp
pop
lret
lods
push
push
outsb
and
dec
imul
mov
or
ret
push
cmpsb
add
in
inc
or
loop
sub
sbb
inc
dec
add
test
repnz
sub
xchg
cmp
stc
and
addr16
mov
mov
fisttpll
jmp
icebp
mov
sbb
lcall
ds
fs
mov
mov
test
mov
mov
sub
sub
cmpsb
call
mov
lods
mov
pop
stc
inc
inc
sub
mov
sti
inc
dec
xchg
insl
push
ficomps
xor
mov
ja
pushf
ret
aam
sbb
testl
data16
push
idivl
bnd
xor
xchg
add
insb
xacquire
push
xor
imul
jle
xchg
mov
xor
sub
rol
mov
mov
ljmp
add
sub
dec
fistps
out
add
xor
mov
xchg
xlat
and
mov
leave
mov
dec
lcall
shrl
push
scas
push
sub
and
mov
das
stc
mov
test
lahf
shrl
and
dec
popf
pusha
mov
repz
mov
fisubl
roll
jnp
adc
adc
dec
pop
jb
jg
fistpll
bound
pop
scas
and
mov
mov
repz
push
scas
ds
sbb
fcoms
xlat
faddl
in
movsl
in
imul
push
ja
pop
int3
aas
xchg
jae
lea
aam
out
cld
aad
icebp
lret
jmp
cld
fwait
mov
cmp
cmp
push
push
iret
or
and
mov
cs
pop
fistpl
lods
inc
sahf
cmpsl
xchg
dec
xchg
fs
mov
fidivrl
add
push
popf
and
and
mov
ret
arpl
add
dec
fcmovu
add
insb
push
test
jbe
push
mov
push
inc
adc
shl
xor
insb
pop
lcall
shrb
shr
sub
aad
in
not
sub
jns
ds
shl
cmp
xchg
and
lea
stos
lods
adc
sahf
pop
sbbb
mov
xchg
push
sbbl
outsl
sub
ret
ret
push
sbb
rol
pop
inc
push
shlb
out
call
adc
repz
repnz
mov
test
jns
test
mov
pop
bound
outsb
mov
jle
bound
or
push
cmp
lods
cmp
out
out
xchg
mov
mov
stos
scas
jno
movsb
xchg
xchg
ljmp
jmp
or
aaa
add
out
add
iret
mov
sbb
push
fsts
out
mov
xchg
sbb
mov
xchg
js
dec
push
cwtl
loopne
ljmp
addl
adc
pop
mov
addl
and
gs
jecxz
xor
mov
mov
fidivl
js
adc
mov
push
stos
push
push
shlb
xor
push
pop
cmp
add
dec
fstl
and
sub
jo
call
xor
hlt
dec
sbb
int3
jae
pop
pop
xchg
mul
arpl
cmp
pop
in
mov
xchg
lcall
pushf
push
popf
mov
and
pop
iret
in
push
rclb
mov
push
inc
cmp
sub
mov
and
shlb
lods
cmpsl
dec
arpl
fwait
scas
xchg
mov
push
dec
roll
clc
pushf
and
shrb
sub
sub
repz
scas
outsl
adc
daa
mov
daa
jno
or
mov
push
pop
decb
arpl
sub
cmp
sbb
sbb
jno
popa
repnz
lahf
sub
push
push
mov
jo
inc
nop
imul
ss
daa
add
int3
or
test
dec
cli
xlat
cmp
or
pop
push
fxch
cmp
push
rorl
mov
cmpsl
xchg
xor
and
dec
daa
pop
add
arpl
sysret
inc
ds
outsb
add
push
inc
data16
lcall
xchg
gs
movsl
ds
rorb
adc
imulb
mov
and
mov
mov
jl
dec
xor
xorb
or
cmp
aaa
std
add
and
sti
popf
testl
cmp
fisubrl
pop
cwtl
std
mov
pop
das
dec
loop
jns
jnp
jp
adc
dec
xchg
sub
xchg
stc
sub
call
stos
push
mov
sub
mov
adc
xchg
fs
dec
test
sbb
jle
aaa
loope
aam
sbb
mov
jecxz
inc
shll
push
cmp
scas
xor
jge
push
addr16
jl
mov
insl
jns
flds
insb
daa
divb
popf
and
sub
dec
cmpsb
add
or
insl
pop
data16
pop
adcb
roll
clc
jg
out
add
jmp
sbb
xor
pop
adcb
cmp
int3
xor
or
push
mov
or
pop
adc
xchg
repnz
sahf
mov
fldenv
outsb
mov
cmpsl
sub
sbb
jle
add
mov
cmp
or
divl
jns
sbb
ja
test
shl
pop
mov
inc
gs
dec
sbb
xor
mov
sub
mov
cmp
scas
aaa
adc
insb
fmuls
in
sbb
jmp
fwait
jp
rcrb
or
sbb
outsb
mov
mov
pop
lcall
add
cmp
scas
xor
push
test
sub
cwtl
add
mov
inc
mov
ja
push
mov
push
je
or
jl
stos
mov
aaa
scas
cmpsb
and
movsb
xchg
fcmovnu
xor
mov
scas
mov
mov
push
inc
sub
push
ret
sarb
mov
fadds
cmpsl
in
js
and
cmp
decl
pop
into
mov
jo
mov
push
push
mov
aam
xchg
fsubrs
dec
sbb
outsb
adc
xchg
imul
sub
movsl
mov
shlb
ss
ret
or
adc
pop
jmp
mov
ljmp
hlt
fisttpll
inc
popf
test
dec
orl
mov
xor
xchg
lods
sbb
icebp
or
mov
int3
mov
fadd
pop
jbe
iret
aad
mov
scas
shl
xor
jb
jl
out
int3
fiaddl
cli
xlat
sti
aas
mov
and
ds
pop
daa
cmp
add
loopne
sub
cmp
mov
mov
fsub
jae
mov
mov
lds
mov
mov
sahf
add
push
add
jno
lahf
and
adc
jge
jecxz
cmp
lock
or
lcall
aaa
xor
xchg
pop
stos
or
mov
and
mov
imul
iret
sub
loop
jns
movsl
jg
adc
test
jbe
adc
pop
lods
ss
pop
adc
fmuls
sbb
inc
stos
gs
rcl
mov
mov
mov
mov
push
mov
adc
ja
mov
mov
daa
xchg
mov
ljmp
clc
dec
inc
idivb
jg
dec
daa
repz
push
mov
shll
int
push
leave
pushf
es
adc
test
add
out
lods
xchg
fdivrp
and
enter
sbb
mov
cmp
pop
hlt
inc
in
fwait
clc
outsl
test
int
sub
xchg
cmp
push
stos
mov
test
enter
xchg
mov
pushf
push
leave
notb
imul
xchg
push
pop
mov
jb
sbb
in
mov
sub
les
jge
cmpsb
jle
inc
sti
cmpsl
inc
jecxz
jle
dec
push
lods
xchg
icebp
xor
not
xlat
xor
out
pop
lret
mov
mov
pop
xchg
inc
jp
jmp
cli
cmp
add
jae
adc
orb
inc
cmp
stos
daa
push
cwtl
sbb
pop
in
mov
rep
mov
cmp
shrb
test
sbb
cltd
jmp
push
cmp
xlat
push
mov
frstor
movsl
pop
sbb
push
sbb
roll
sub
movsl
mov
and
cmpsl
out
jp
movsb
or
and
popa
jnp
lock
sbb
cmp
ja
repnz
out
xor
test
or
cli
fidivrs
cmp
xchg
lods
sub
jno
jl
test
lret
xor
add
push
sbb
adc
pand
inc
pop
mov
sbb
jb
dec
cmc
test
mov
sbb
fidivl
outsl
cmp
add
xlat
and
mov
jae
mull
je
inc
dec
mov
inc
fisubl
cmp
test
int
addr16
push
outsb
pop
and
adc
jle
loopne
test
js
add
imul
sbb
shlb
pop
jno
nop
mov
pop
ss
int3
inc
test
sub
data16
mov
add
push
cld
rolb
dec
aaa
arpl
push
cmp
pop
fwait
xorl
jnp
add
dec
addr16
in
divl
aaa
movlps
mull
cmc
jbe
cmp
pop
cwtl
jno
jo
lea
jne
pop
lret
hlt
push
mov
mov
jp
push
lock
inc
jg
cli
add
jmp
or
loopne
imul
stc
mov
and
jnp
mov
sub
les
pusha
dec
loopne
cmp
into
repnz
xchg
mov
jo
xchg
loopne
clc
xchg
cs
push
adc
scas
inc
enter
sbb
push
mov
mov
xor
notl
cli
sbb
mov
inc
mov
pusha
int3
dec
das
cmpl
popf
test
xchg
das
cmp
inc
sbb
mov
mov
testl
pop
adc
lahf
test
push
in
adc
cmp
mov
inc
mov
xor
xor
cmp
jge
popl
sbb
mov
lret
inc
addr16
icebp
test
sbb
xor
mov
ficomps
inc
dec
int
jg
lds
inc
filds
clc
fwait
lods
sbb
pop
or
rcl
pop
movsb
mov
pop
xchg
rcll
push
jo
ds
xchg
sbb
movsb
pop
in
and
push
jle
loope
int
adc
mov
xor
push
test
mov
mov
pop
sub
xor
fbld
xchg
mov
inc
cmp
ret
repnz
dec
lcall
sbb
lods
cmp
and
sub
stos
push
dec
jp
or
lcall
or
outsb
lcall
xchg
data16
jp
sarb
sub
or
cmpsb
mov
pusha
in
pop
pop
insb
add
sub
jl
xchg
lods
xchg
scas
xchg
jae
and
cmp
lret
pushl
scas
cmp
jmp
out
dec
xchg
sti
dec
and
push
pop
fisubrl
pop
jecxz
js
fnstenv
pop
jmp
mov
push
inc
inc
pop
inc
out
push
sbb
out
icebp
adc
jg
lret
xor
mov
inc
pop
loope
movsb
in
mov
cmp
ret
pop
lcall
fsub
adc
and
sahf
cs
push
rorl
lret
adc
cwtl
iret
sbb
emms
dec
sahf
sti
lods
test
stos
dec
push
nop
sub
ja
stos
push
loope
bound
mov
imul
sbb
pushf
out
push
xchg
cmp
and
mov
mov
call
mov
pop
push
in
outsl
cltd
push
sbb
fcompl
enter
push
pop
shlb
and
cmpsl
sbb
jo
cmp
js
loop
int
outsb
cmpsb
jae
daa
fnstcw
movsb
scas
repz
insl
cmp
inc
dec
add
pop
inc
and
add
movsl
adc
sub
cwtl
bnd
sbb
push
add
cmp
lahf
xchg
icebp
bound
push
dec
and
cltd
test
adc
dec
ret
popa
add
das
jbe
xor
pop
fdivrl
in
repz
pop
add
mov
sbbl
mov
lahf
jmp
jecxz
and
cmp
outsl
dec
sbb
into
js
frstor
stos
mov
stc
lods
fbld
add
jmp
jl
push
dec
orl
rcrb
jle
pushf
insl
xchg
std
adc
scas
push
xchg
jb
test
mov
push
mov
cs
ret
mov
movsl
mov
mov
add
ja
and
ror
ds
leave
aam
adc
mov
negb
cmp
mov
push
addl
pop
ss
repnz
adc
mov
lcall
movsl
pushf
pop
cmp
and
aad
mov
dec
scas
leave
mov
addr16
adc
stc
loope
jbe
insb
iret
push
sub
xchg
add
sar
mov
mov
pop
push
and
push
fucomip
sbb
jecxz
mov
push
xor
dec
mov
or
mov
push
leave
xor
adc
popa
flds
and
xchg
inc
das
lds
sub
xchg
mov
lods
iret
cld
mov
lods
xor
mov
inc
sbb
mov
je
es
rcll
repnz
and
adc
mov
aad
push
and
adc
push
xor
or
inc
pop
cmc
push
cmp
cmp
pop
adc
pop
xchg
pop
push
lret
and
mov
pop
jecxz,pn
xlat
mov
jle
inc
mov
pop
xlat
neg
sbb
push
in
popf
test
mov
adc
inc
pop
xchg
push
add
lahf
jecxz
or
xor
cmp
out
push
jb
out
sbb
pusha
and
add
into
dec
mov
std
sbb
push
test
cmp
inc
jb
dec
inc
aas
out
test
inc
pop
jns
shlb
dec
and
test
mov
jl
into
in
aaa
sbb
cmpl
xor
and
adc
jp
jbe
xchg
insb
fcoms
adc
and
scas
pusha
jecxz
inc
pop
int
add
jb
insb
adc
mov
or
mov
aam
es
aaa
mov
pop
js
push
cmpsb
loopne
adc
jle
mov
pop
inc
adc
sub
mov
fwait
mov
pop
inc
fs
ret
ds
xor
and
dec
push
mov
mov
lea
sub
stos
pop
in
movb
lret
push
push
fistl
lods
xchg
jb
push
fisttpl
or
and
adc
and
loop
pop
cmp
push
insb
cmp
lret
movsl
cmp
mov
mov
sub
stc
aas
repnz
call
or
add
jno
es
lock
dec
ja
les
push
movsl
sub
or
jecxz
loope
test
test
sub
adc
sub
repz
sbbb
es
push
mov
call
ds
loope
int
push
sbb
inc
sbbl
ss
je
addr16
push
adc
ja
test
or
imul
mov
xchg
xorl
shl
test
sbb
jo
xor
out
cmc
test
inc
push
orl
leave
cmpsb
sub
pop
int3
scas
arpl
mov
push
popf
jge
pop
inc
or
inc
mov
stos
adc
out
ret
and
jno
clc
jp,pn
sub
sub
adc
es
cmp
pop
sbb
scas
and
pop
cmp
mov
lret
sub
jl
cmpsb
test
xor
fs
adc
popa
jo
adc
mov
lahf
fwait
mov
dec
es
add
fdivrs
inc
lds
adc
fwait
insb
mov
push
ss
mov
cmpsl
mov
xchg
jo
mov
shll
cvttps2pi
fcompl
and
js
mov
add
iret
dec
hlt
dec
mov
cs
cmp
outsl
jns
dec
push
ss
cmp
and
or
sbb
xor
out
roll
push
mov
xor
inc
aas
sti
push
jo
daa
xchg
int
push
adc
push
cli
cmp
inc
add
add
out
mov
lret
push
icebp
ficoml
test
inc
daa
popa
ffreep
push
fadds
in
lods
jmp
mov
adc
cmp
adc
sahf
arpl
scas
imul
movq
icebp
js
fwait
lcall
es
popl
push
repnz
push
ret
pop
jecxz
add
arpl
cmp
pop
sbbl
inc
and
stc
sub
pop
lock
in
xlat
ss
xor
mov
aaa
mov
subl
xchg
xor
fwait
jnp
jle
mov
mov
dec
out
dec
or
lds
mov
test
test
jne
loopne
rcrl
gs
dec
int3
nop
mov
pop
jl
cmp
xchg
fs
adc
cmp
out
sar
cmp
xchg
jo
pop
and
shrb
cmp
mov
movsl
dec
sub
loopne
pop
mov
mov
cmp
pushf
xor
sbb
mov
outsl
xor
jns
mov
jle
dec
aaa
dec
repnz
lcall
mov
jne
inc
xor
cmp
dec
bnd
push
adc
pusha
sub
xchg
aad
and
pop
stos
aas
cwtl
pop
or
pushf
std
sbb
jmp
popf
push
outsl
shrl
pop
ret
add
repz
rolb
or
dec
imul
into
stc
divl
mov
rcrb
jg
cltd
fisubs
push
mov
fstps
icebp
xchg
xor
jmp
sub
je
jae
sar
jnp
inc
mov
mov
adc
push
dec
inc
aaa
repnz
xchg
bound
xor
xor
cs
push
notl
pop
js
xchg
sub
push
shl
sti
push
inc
pop
jnp
sub
ds
xor
loope
push
jmp
push
mov
add
arpl
scas
push
inc
push
inc
xor
dec
sbb
ror
rcrb
adc
aad
push
jge
fwait
mov
jbe
mov
lahf
data16
inc
xchg
outsb
movb
inc
in
fnstsw
cli
in
push
andb
sbb
or
sbb
add
shrl
jg
cmp
std
sahf
mov
mov
dec
movsb
xchg
std
add
or
frstor
jne
mov
jne
push
pushf
xlat
inc
xor
leave
adc
dec
xchg
xor
sbbb
popa
push
dec
mov
and
shrb
dec
dec
jp
lds
lock
pop
inc
cmp
nop
adc
mov
lret
xchg
mov
jbe
hlt
mov
clc
xchg
cmp
jecxz
mov
xor
scas
xor
iret
rorb
sti
pop
dec
scas
lret
sahf
xchg
jge
mov
outsl
in
xchg
jns
in
aad
lds
cs
test
pop
jge
inc
jmp
out
mov
loop
mov
ds
add
push
lods
mov
and
inc
push
push
xchg
add
xchg
ror
imul
mov
adcb
mov
or
std
sahf
mov
or
cvtps2pd
ret
sbb
xchg
sbb
xor
shrl
cmp
or
xchg
cli
jg
shrl
dec
xlat
mov
adc
movsb
cmp
and
lcall
inc
ss
jne
loope
fisttpl
js
xor
rolb
push
js
or
dec
push
movsl
jmp
hlt
xlat
mov
popa
rcr
lods
mov
sbb
xlat
jmp
inc
lock
sbb
sub
pusha
xchg
push
icebp
mov
mov
clc
divl
inc
or
xor
arpl
pusha
lret
test
rolb
mov
jmp
pop
xor
pop
jbe
and
icebp
adc
loop
pushl
jno
stc
xchg
ja
out
push
fs
add
shlb
out
cmp
dec
aam
push
sarl
fisttpl
sarb
cmp
data16
xor
stc
jne
into
or
mov
std
jae
in
jb
xchg
mov
mov
push
fildl
pop
mov
nop
movsb
mov
xchg
cmp
aaa
fsubr
jns
fildl
and
jg
mov
and
inc
cmc
xchg
cld
xor
stos
std
mov
int3
dec
call
lret
adc
or
insl
shrl
push
jmp
js
jbe
pop
mov
aas
scas
aad
pushf
aam
jmp
subl
leave
js
mov
mov
cltd
pop
jl
xchg
mov
jno
sbb
adc
dec
in
aad
push
adc
xor
hlt
lock
xchg
ror
cmp
repz
xor
mov
add
mov
pop
fildl
sub
dec
dec
mov
xchg
pusha
pop
adc
stos
repz
or
mov
sbb
rorb
inc
mov
cmp
dec
dec
jae
stos
push
mov
sub
sar
inc
inc
jge
sub
mov
mov
jl
lods
jp
jb
mov
sub
xchg
nop
dec
sbb
cmpsb
push
xlat
out
aad
fdivrl
xchg
sahf
lock
add
das
mov
addl
adc
mov
stc
cwtl
mov
xorps
lcall
test
loop
push
pop
outsl
push
repnz
jo
inc
add
mov
add
or
jg
add
sbb
aas
rcl
cs
test
lea
dec
das
rcrl
rdtsc
adc
cld
sub
inc
into
ret
mov
sti
sbb
or
jg
ja
sbb
shlb
mov
fwait
adc
push
loopne
sti
add
xchg
xlat
das
data16
push
cmp
mov
andb
adc
jecxz
addr16
mov
shl
nopl
or
cmp
xor
mov
jge
xor
sub
push
or
mov
ds
ja
xor
popa
dec
xlat
ss
cmpsb
in
movsb
std
sbb
insl
lea
mov
pop
insb
mov
addr16
aaa
cld
sbb
cmc
loopne
in
sbb
jbe
dec
pop
cld
ja
add
adc
sub
or
xchg
adc
hlt
aad
mov
dec
fstl
mov
std
ret
mul
sbb
jecxz
in
inc
push
inc
mov
loopne
cmp
sub
nop
pop
jb
lcall
or
xchg
testl
in
test
mov
std
mov
mov
hlt
add
mov
jb
adc
or
icebp
dec
sbb
js
testl
mov
adc
mov
jmp
popf
jl
inc
jmp
add
inc
mov
arpl
loop
shlb
testl
push
inc
cltd
nop
cmp
adc
jne
mov
and
scas
mov
in
or
popa
fstps
mov
stos
or
je
pop
push
lea
out
int
cld
pop
push
int3
add
scas
icebp
les
fisubrs
mov
ss
or
cmp
les
xor
js
rol
scas
adc
ficomps
out
icebp
push
and
xor
jae
push
mov
add
in
mov
aaa
jb
out
rclb
xchg
cmpsl
cmp
je
cltd
pop
mov
notl
pop
push
fstps
addr16
ret
dec
fs
cmp
xorl
scas
mov
pusha
jns
add
push
adc
adc
add
out
call
xchg
mov
movsb
jmp
or
inc
add
push
out
add
pushf
daa
and
lods
sub
xorb
sub
jp
mov
xchg
dec
lcall
int3
imul
push
fs
lcall
andl
aas
shlb
push
js
test
lret
shll
popa
das
push
inc
imul
ficoms
or
pop
lcall
mov
pop
mov
jbe
jo
inc
lcall
add
in
sub
aam
loop
and
outsb
mov
sbb
pusha
jmp
hlt
jnp
js
mov
cli
and
mov
bound
jp
dec
and
mov
cmp
outsl
pop
fbstp
push
pop
ja
scas
xchg
jle
lahf
xor
and
shll
pop
dec
add
decb
out
les
shrb
mov
cltd
ljmp
xchg
cmc
xchg
pop
and
and
dec
stc
aam
fcoml
ret
xchg
cmp
mov
fwait
loope
push
in
xchg
and
jns
das
dec
lods
mov
into
inc
out
loopne
push
fs
clc
inc
jl
scas
push
call
mov
cmp
in
mov
xchg
cmp
xor
call
pop
jne
into
mov
les
jg
jnp
sbb
ljmp
and
jg
pop
xchg
mov
pop
and
cmpsb
jecxz
xchg
jmp
and
stc
sbb
sahf
sub
cmc
add
popa
push
pop
imul
shrl
inc
jae
sub
sub
imul
push
mov
adc
fisubrl
inc
pusha
iret
icebp
shlb
std
pop
jp
insb
icebp
xchg
fwait
and
adc
xor
cltd
std
enter
test
jns
fldl
rcll
and
jmp
fs
decl
dec
cwtl
inc
icebp
pusha
sti
mov
popa
jo
sub
jnp
sub
add
pop
mov
xchg
mov
push
fisubrl
popa
nop
and
scas
dec
bound
pusha
adc
lods
and
cmp
sti
int
push
nop
cs
daa
pop
dec
nop
jo
pop
adc
dec
stos
cmp
or
out
setbe
js
xchg
and
jmp
dec
pushf
cwtl
test
cli
lret
pusha
mov
and
or
and
mov
out
mov
loope
jno
cmc
and
loope
inc
mov
orl
loop
lds
cwtl
lahf
enter
incl
sub
pusha
cmp
mov
push
adc
or
movl
inc
fs
push
leave
xchg
jl
std
out
or
and
adc
sti
mov
dec
fstpl
shl
fdivr
sub
xlat
sti
lock
mov
add
ret
subl
int
push
sub
push
dec
xchg
out
jb
xlat
mov
scas
mov
dec
out
or
sbb
cmp
enter
inc
or
movsb
ss
pop
jmp
sbb
ret
aad
adcl
bound
jp
mov
mov
mov
inc
jae
stc
outsl
cmc
in
cmp
and
loope
cmp
mov
fists
mov
pop
outsl
out
pop
fldenv
loope
or
xchg
test
sbb
sbb
pop
jmp
inc
lret
imul
inc
shlb
scas
sub
jo
std
fdivl
aam
mov
push
std
sbb
mov
xor
das
lret
jle
dec
dec
repz
push
adc
lock
pop
clc
jo
insl
clc
jecxz
or
lret
lcall
xlat
je
imul
lea
in
mov
scas
rclb
sbb
hlt
pop
jnp
shufps
pusha
clc
jg
out
xchg
cs
ret
fwait
ja
imul
pop
fwait
fwait
push
jb
fs
mov
shl
cld
push
pop
out
adc
loope
movsl
pop
or
mov
jae
push
xor
sbb
lcall
cwtl
xchg
repz
ret
add
arpl
sub
mov
addr16
push
inc
mov
ret
mov
and
xchg
mov
fistpl
push
sahf
cmpsl
mulb
xchg
cmc
in
jo
adc
mov
push
adc
cld
scas
push
mov
inc
xchg
and
notl
cwtl
or
or
ss
outsb
sahf
adc
aam
imul
inc
data16
mov
loope
xchg
or
xor
loop
push
addb
jo
sub
repz
rcrb
loopne
push
das
mov
jp
in
jns
mov
or
mov
pop
adc
mov
cli
mov
popa
test
flds
push
out
daa
fildl
dec
push
add
mov
les
jg
es
dec
mov
push
push
add
stos
sbbb
movsl
fimull
test
push
scas
inc
cmpsb
ret
leave
xor
adc
inc
orb
dec
xlat
mov
pop
xchg
push
filds
negl
daa
cwtl
les
pop
push
xchg
xchg
in
push
out
push
jp
es
in
cmp
popa
mov
dec
icebp
in
cli
out
add
sbb
push
xor
and
mov
cltd
xor
aam
dec
clc
mov
les
test
pop
hlt
push
sbb
inc
jle
adc
jbe
daa
xlat
sbb
cltd
hlt
sbb
or
dec
lods
fwait
lret
cmp
add
rcl
enter
out
in
pop
out
adc
jmp
mov
sbb
int
rcr
and
orb
enter
jle
arpl
in
enter
add
insb
inc
in
cs
add
sbb
sub
fwait
int3
cli
inc
notb
lahf
and
ds
movsb
or
sbb
dec
xor
ss
fists
or
and
das
inc
in
test
mov
or
outsb
dec
dec
sub
xchg
xor
cwtl
cmp
aam
popa
sbb
xchg
xchg
push
mov
repnz
sbb
xor
sub
and
fwait
xchg
arpl
sub
mov
xchg
push
test
popf
aas
aad
and
push
push
rol
or
fwait
pop
nop
bound
in
xor
push
mov
mov
insl
lods
xor
mov
mov
bound
cltd
ds
ljmp
int3
in
jecxz
int
xor
mov
test
adc
cmc
adc
inc
push
xchg
xor
jnp
sub
movsb
stos
sar
adc
sti
enter
mov
push
aaa
mov
dec
pusha
inc
mov
push
mov
ja,pn
inc
shrb
inc
inc
xor
mov
pop
and
jns
xlat
inc
push
cmc
cwtl
jnp
lds
repz
or
outsl
and
dec
imul
movsb
pushf
pushf
gs
xchg
adc
pop
repz
mul
inc
mov
mov
js
popa
je
dec
repnz
inc
sbbb
dec
mov
xchg
push
sti
xor
mov
inc
loope
jmp
mov
adc
in
add
stos
out
ja
push
out
stc
imul
mov
je
imul
sbb
or
repnz
xchg
jmp
inc
xor
mov
nop
xchg
push
jno
push
xchg
imul
bound
fldl
pop
jbe
ljmp
sbb
pop
bound
not
cli
jle
ffreep
dec
idivb
std
cld
mov
inc
loope
ss
push
addr16
add
and
sarb
add
mov
xor
pop
outsb
fidivs
jge
pop
out
insl
mov
shl
pop
and
xlat
push
xchg
push
lods
add
imul
mov
scas
sbb
or
cmp
cmp
das
jg
push
and
sbb
jge
xchg
xchg
sbb
dec
in
xchg
out
pop
or
pop
ss
sub
mov
and
dec
lcall
test
jl
or
cmp
push
mov
xor
sub
dec
xor
scas
or
mov
dec
arpl
jle
sub
add
xor
sbb
clc
jecxz
loope
mov
xor
dec
iret
test
pop
cwtl
jecxz
and
adc
pop
mov
ret
gs
sbb
aad
int3
xchg
outsb
ret
sub
stos
sbb
mov
xor
lcall
xchg
int
inc
mov
and
icebp
insb
and
lds
loope
loop
arpl
nop
inc
push
jbe
movsb
xchg
int
pop
jb
jge
call
repz
and
xor
icebp
sub
loopne
int3
std
cmp
mov
lret
pop
popa
inc
inc
insl
xchg
das
xchg
sbb
hlt
jle
pushf
mov
xor
and
das
hlt
and
and
in
nop
and
add
xchg
mov
out
in
aam
repnz
mov
into
add
sbb
arpl
movsl
inc
fistpl
hlt
or
gs
and
xor
mov
iret
jmp
jnp
xchg
les
xchg
mov
rolb
xchg
or
mov
sbb
ja
lods
xor
popa
out
pop
dec
call
iret
shll
push
lahf
popa
xchg
ficompl
inc
leave
xchg
idivb
test
push
cmpb
call
xor
les
adc
in
lods
ret
adc
push
popa
and
test
push
sti
aam
mov
sbb
leave
std
xlat
cltd
push
inc
cmpsb
hlt
cmp
jae
in
adc
lret
mov
fbld
lret
daa
inc
or
rclb
xchg
aam
and
xchg
jg
xor
push
imul
scas
add
jl
inc
fisttpll
dec
pop
add
cmp
iret
loop
sub
dec
sub
in
int3
xor
aaa
xchg
pusha
ja
in
or
xor
pop
lcall
inc
xor
jp
shl
mov
cmpsb
negl
mov
or
aam
xor
inc
push
sub
jbe
push
mov
das
cmp
mov
repnz
inc
lods
js
repnz
jnp
jae
inc
ret
adc
repz
jae
push
push
bnd
jle
inc
and
pop
mov
mov
sub
mov
fs
ret
int3
cwtl
lahf
call
add
push
push
inc
add
mov
insl
xor
fistps
pop
daa
sbb
dec
fldcw
enter
jp
and
mov
jo
je
js
jae
filds
jne
and
ret
movsl
add
jg
pop
sub
rorl
mov
mov
js
add
xlat
inc
push
add
push
mov
xchg
pop
mov
adc
mov
cmpsl
push
mov
pop
mov
jnp
jl
mov
insb
xor
cmpsb
shll
xchg
movl
push
add
int
test
and
sub
fistps
aam
mov
sbb
orl
inc
scas
mov
or
mov
fcoml
mov
int3
lods
cmp
cs
or
fbld
inc
daa
stos
lret
sub
pop
xchg
jo
cmp
lret
sahf
idivl
add
pop
add
xor
adc
out
push
mov
inc
xor
jno
icebp
jmp
mov
cs
or
cmp
scas
mov
mov
dec
lret
popa
arpl
mov
add
jge
das
or
xor
cmp
xchg
loope
xor
pop
jecxz
ja
cmpsb
jp
jo
outsb
ret
stc
mov
fsubrp
fbld
xorl
repz
out
xor
ja
gs
add
mov
xor
xchg
enter
xchg
xor
bound
adc
xchg
in
jp
sti
jge
push
push
lods
std
iret
arpl
test
imul
in
mov
adc
mov
jp,pn
js
xchg
mov
sub
das
add
fnstenv
or
add
adc
jge
fists
insb
ljmp
imul
dec
inc
add
inc
push
pop
push
push
and
pop
stc
sbb
cmp
lea
bound
adc
lret
or
mov
sarb
leave
adc
fistps
add
cwtl
lock
pop
pop
jns
pop
aaa
adc
stc
xor
fiaddl
jmp
cltd
rcrb
cmc
xchg
ss
int
shl
sub
imul
mov
mov
pushf
mov
das
jmp
xorl
sbb
sub
adcb
enter
sub
add
sbb
mov
stos
test
jae
ljmp
jb
and
mov
push
mov
adc
stos
stos
xchg
popf
dec
sti
cli
inc
cld
xor
sbb
ja
cmpsb
inc
das
adcb
sub
data16
sub
aad
popa
ss
iret
fisubrl
cmp
pop
enter
push
mov
mov
es
inc
xlat
jmp
mov
or
jne
sbb
cltd
jmp
push
scas
adc
xchg
gs
aam
lea
jle
inc
push
fsubrl
add
push
xchg
call
rorl
pop
mov
orl
cmp
fstl
test
loop
lods
repnz
push
or
dec
imul
cmp
and
es
in
xchg
pop
dec
inc
or
lea
push
cltd
in
ljmp
or
ljmp
pusha
jae
xchg
xchg
dec
subl
lret
movsb
mov
pop
psllw
jbe
fwait
push
cld
icebp
adc
out
add
pop
pop
add
cmp
sub
jl
gs
cs
mov
or
int3
pop
dec
std
or
enter
in
cmc
jb
inc
jl
dec
dec
sub
stos
jno
xchg
lcall
jae
shll
in
and
loope
clc
das
lcall
int3
popa
mov
in
cmp
test
jle
cmp
lods
test
insl
sub
inc
loope
popf
insb
test
adc
imul
mov
and
jle
adc
fdivl
or
ret
xor
aam
daa
add
divl
aaa
daa
push
xchg
daa
repz
push
inc
pop
mov
je
sbbb
xor
int3
shlb
push
xor
dec
add
aaa
sub
or
mov
or
loopne
movsl
insl
or
inc
or
pop
jbe
ss
cmp
roll
adcb
mov
mov
lahf
aaa
push
or
push
push
mov
lds
xchg
mov
inc
push
rol
fdivrs
loop
push
iret
nop
hlt
incb
sbb
xchg
ds
lock
xor
mov
sub
shrb
jge
mov
mov
cmpsb
sub
iret
cmp
pushf
jns
xchg
cs
sbb
aas
mov
imulb
lret
mov
dec
rcrl
push
mov
adc
lods
jmp
andb
push
jmp
mov
mov
gs
push
push
sub
repz
repnz
cmp
xchg
or
lret
in
adc
adcb
cmp
lea
dec
jle
sub
mov
insl
add
pop
xchg
sahf
nop
mov
sbb
cmp
notl
inc
imul
sbb
push
repnz
cltd
sbb
dec
in
daa
add
aam
jns
out
dec
xchg
xchg
xor
push
lea
lcall
sahf
divl
out
cltd
stos
popf
jo
xor
or
lea
fdivrl
xchg
or
xchg
pop
adc
inc
test
or
mov
adc
and
insb
ds
dec
and
lock
mov
arpl
jg
insb
cmpsb
push
mov
and
sbb
rolb
insb
repnz
sub
jno
cmpsl
es
lds
inc
ffreep
fldl
rcll
pushf
jbe
inc
rol
loope
sbb
lcall
decb
add
mov
leave
outsl
test
aad
add
cmpsl
push
aad
or
add
fldt
inc
out
mov
jp
dec
mov
pop
inc
dec
les
fbstp
sub
movsb
dec
dec
in
sbb
lret
mov
mov
icebp
dec
je
inc
les
xchg
sbb
inc
lods
inc
ja
pop
out
mov
mov
mov
add
mov
add
sbb
mov
scas
xchg
push
jo
xchg
fisubrs
pop
pop
sbb
jno
int3
mov
push
push
adc
or
mov
sbb
outsl
fneni(8087
mov
sbb
fadd
dec
add
bound
push
cwtl
test
xchg
inc
push
je
and
or
pop
fwait
dec
jle
jo
sub
and
or
or
lret
out
cmp
es
test
sti
adc
cmp
dec
int3
arpl
cmp
jnp
test
movsl
xchg
mov
cli
xor
ljmp
pop
jne
test
aad
fsub
je
xor
stos
es
fisubl
xchg
fdivs
push
adc
sbb
sub
dec
jecxz
addr16
mov
insb
movsb
jmp
or
push
mov
popa
ja
sub
push
push
enter
jns
cs
pushf
mov
mov
out
sub
jne
push
pop
inc
mov
dec
out
repnz
xchg
lds
movsb
jbe
lea
or
pop
rorl
hlt
fwait
popf
shl
inc
dec
das
lcall
fwait
iret
push
and
jl
sub
das
sub
int3
fsubs
dec
or
std
out
movsb
and
cli
test
mov
pop
movsl
daa
lock
push
sbb
scas
mov
sub
dec
in
fnsave
sbb
pop
pop
movsb
fisubrs
mov
inc
dec
call
lret
test
xchg
push
mov
stos
sbb
in
mov
push
push
pop
cmc
push
pop
mov
xchg
mov
mov
data16
push
int3
add
fwait
mov
push
fadd
iret
mov
mov
xchg
lea
stos
fidivrs
cmp
mov
sub
call
imul
daa
xlat
test
sti
add
xchg
ds
in
mov
xchg
adc
ror
lock
aam
push
dec
xor
pop
mov
sbb
pusha
mov
inc
ret
push
mov
push
jo
fsubrs
ljmp
adcb
mov
dec
xchg
stos
mov
pusha
xor
sbb
bound
cmp
rorl
popa
ret
sub
push
mov
sub
pop
xchg
faddl
ljmp
addb
fildl
mov
push
popa
shlb
push
cld
pop
scas
mov
cmpsl
cs
mov
in
icebp
popa
jmp
dec
popf
jecxz
mov
ror
enter
xor
sbb
fsubl
xor
xor
inc
xchg
das
mov
gs
rclb
pop
xacquire
stos
loop
dec
xlat
lods
xchg
fidivrl
cmpsb
pop
jl
hlt
mov
cmp
std
shrl
std
into
add
jbe
test
cmp
inc
stos
inc
mov
stos
cmp
lahf
hlt
dec
in
xor
fcmove
lcall
cmc
lahf
fidivl
call
lahf
mov
psubw
pop
adc
aaa
popf
fwait
dec
mov
mov
xor
cmp
fdivl
jno
movsb
data16
addr16
lcall
jne
subb
pop
inc
mov
std
lds
xchg
and
out
push
into
sub
push
xchg
mov
sbb
xor
push
or
lcall
vpsrad
jbe
mov
cli
sbb
rorl
sbb
mov
gs
add
iret
imulb
out
push
ret
cmpsl
aad
push
and
in
fwait
divb
stos
pop
jp
add
in
popa
push
jmp
in
jmp
or
std
lea
push
sub
jnp
cmp
or
outsb
sbb
aam
sub
sub
sub
xor
fists
push
cmc
dec
js
mov
out
fdivp
sbb
lock
std
cltd
sbb
mov
pop
ffreep
xor
es
decb
xchg
pop
and
jmp
test
mov
xchg
repnz
jo
jns
test
push
dec
lea
fbld
ja
lcall
xor
mov
mov
adc
lods
xor
addr16
mov
or
xor
fldl
popa
push
gs
mov
xor
sahf
addr16
lcall
iret
inc
mov
vcvtsd2si
les
pop
push
mov
test
mov
sbbb
inc
stos
lret
insl
aaa
jo
cmc
push
pop
mov
add
test
icebp
adc
jge
hlt
adc
xor
pop
test
idivl
andb
comiss
inc
cmp
pop
xor
add
jns
aad
daa
push
push
xor
adc
adc
mov
int
mov
mov
pop
hlt
std
dec
popf
das
or
repz
stos
lods
stos
in
xchg
loop
rcl
or
push
inc
cld
data16
mov
jg
mov
fiaddl
cmc
aad
xorb
sub
fs
mov
xchg
sbb
daa
push
xlat
leave
int
adc
sub
cmpsb
ds
je
mov
pushf
pop
cmpsl
insb
cs
inc
iret
outsb
cmpsl
and
inc
jmp
jbe
ds
fists
jp
jge
test
add
sbb
mov
jae
shl
lock
ficoml
sub
adc
sub
jbe
lahf
inc
cmpsb
dec
inc
ret
inc
jl
enter
add
pop
shrb
fsts
inc
lock
loop
cld
pandn
aaa
mov
adc
jo
stc
cmp
xchg
dec
test
mov
jl
xor
jge
cmpsb
inc
xorb
dec
in
hlt
lock
int
outsb
scas
push
ljmp
add
pushf
xchg
shlb
mov
fists
ror
lret
sarb
sbbl
push
jg
pop
mov
and
adc
popf
int
xchg
lahf
rorl
jge
ja
outsb
pop
xchg
aas
adc
dec
in
incl
inc
jecxz
jne
or
mov
fisttps
push
cmp
aam
daa
mov
ja
mov
test
mov
test
dec
pop
ss
mov
daa
mov
int
pop
push
inc
xor
or
pop
rol
push
lcall
aas
pusha
and
je
xorl
int
repnz
mov
mov
xor
dec
xchg
sbbl
loopne
fs
mov
cld
cmpsb
jbe
adc
push
mov
inc
sub
pop
push
fnsave
add
pop
aad
lds
iret
imul
shll
dec
sbb
lods
mov
xchg
outsl
imul
out
out
movsl
orl
repnz
icebp
cmp
xchg
or
dec
mov
lds
or
push
jge
loope
addr16
add
xor
mov
enter
mov
popa
inc
add
mov
mov
outsb
cmp
cmpsl
add
iret
dec
jmp
rcl
push
or
push
cmp
cmpsl
xor
xor
aam
xlat
push
push
pop
movsl
jg
jbe
lret
sub
add
pop
rorl
ljmp
cmp
mov
adc
lds
das
lods
mov
xchg
xor
or
int3
fsubp
pop
sbb
jns
add
sbb
mov
popa
sbb
cmp
int
or
jge
mov
pushf
jo
mov
inc
pop
les
jg
leave
pop
rcrb
jo
cmpsb
jge
nop
lea
cld
pushf
push
in
jle
adc
cmp
jae
inc
dec
aad
cld
cmp
nop
pop
scas
xor
fldt
out
sub
clc
cmp
out
adc
xor
or
enter
dec
leave
pop
xor
into
pop
in
sub
pop
jae
xchg
sar
inc
xchg
ja
pop
adc
pop
sub
repz
mov
push
xor
inc
xchg
xor
pop
xchg
dec
xor
in
inc
call
iret
xchg
push
lahf
out
push
ret
aas
push
cwtl
ret
jno
pop
add
jb
in
sbb
outsb
mov
push
aas
jne
dec
pop
std
loope
xor
jmp
cmp
out
pop
mov
add
mov
shrb
into
jbe
inc
rcl
mov
mov
pop
cmc
pushf
das
push
repz
push
cmp
lock
mov
sub
dec
jne
lcall
insl
mov
xchg
push
mov
stc
inc
lock
add
cmpsl
hlt
daa
in
aad
inc
jnp
push
call
mov
cmp
sub
fnstenv
stos
lret
bound
and
jns
addr16
clc
or
daa
xchg
inc
push
pop
cmpsl
test
add
loopne
mov
pop
aad
fsubl
ljmp
push
cmpsb
repnz
out
jb
test
pushf
xor
inc
jp
testb
lcall
and
aad
mov
int3
inc
sbb
mov
out
and
cmp
icebp
ret
insl
cmpsl
xor
inc
rcr
xchg
mov
cmpsl
cmp
imul
jp
dec
inc
jg
push
push
inc
xor
xchg
push
or
or
jae
pop
cmp
xor
mov
add
test
xchg
push
pop
cmp
inc
imul
aaa
shll
mov
dec
fisubrl
dec
ret
aas
es
orl
pusha
fstl
add
daa
mov
cmp
mov
jnp
mov
xchg
push
fwait
pop
mov
fmuls
lds
push
decb
xchg
xchg
push
inc
push
test
cltd
shrl
and
dec
shr
inc
xchg
sbb
and
xor
outsb
inc
mov
div
test
cwtl
jno
fstpt
fwait
scas
or
cmpsl
sub
lods
loop
ret
xchg
pop
leave
test
lret
decl
push
mov
stos
adc
mov
aam
jecxz
leave
lods
out
dec
jl
shr
pop
aas
cmpsb
jmp
sub
pop
sbb
call
scas
mov
enter
push
inc
cld
or
inc
mov
ljmp
jp
orb
shll
mov
jb
into
mov
cmp
xchg
push
jmp
mov
inc
ljmp
je
test
scas
iret
bound
cmpsb
dec
mov
fistpll
adc
sub
inc
out
mov
mov
jo
lods
xchg
sub
lods
call
outsl
andl
adc
int
xlat
shl
mov
jno
sub
inc
bnd
mov
inc
pop
pusha
shr
push
ss
jne
rorb
lret
mov
jne
divb
lods
jns
call
lods
jle
push
sbb
cli
repnz
jmp
pop
mov
xor
xor
in
or
dec
int3
bound
test
add
enter
pop
fiaddl
lret
outsl
pop
jne
lcall
mov
xchg
pop
in
pop
dec
int
mov
hlt
loop
pop
repz
ret
dec
or
out
jg
in
sub
insl
outsl
gs
mov
inc
jl
mov
cmp
jne
stos
xchg
aad
add
jmp
iret
cltd
sub
adc
push
fwait
jmp
dec
lret
gs
dec
dec
call
mov
popa
ret
adc
pusha
jg
mov
sub
jbe
adc
sub
lret
icebp
scas
add
inc
lods
inc
les
ss
push
pop
daa
jmp
out
aas
cmpb
jo
jecxz
stc
fimuls
mov
adcl
pushf
dec
lret
adc
fnstsw
mov
mov
cmp
and
out
add
sbb
shll
nop
rorb
arpl
lahf
jns
rorl
dec
stos
jne
mov
lea
mov
sub
cwtl
push
fs
add
mov
push
xchg
lea
jle
dec
dec
push
and
std
in
mov
daa
out
inc
mov
xor
xchg
mov
mov
jae
cltd
negl
pop
icebp
orb
sub
and
push
rclb
aas
push
add
hlt
inc
adc
mov
cmpsl
das
pop
cld
lcall
shrb
inc
int
iret
mull
bts
pushf
andl
rol
inc
test
out
push
pop
in
and
and
xlat
repnz
divl
mov
stos
ss
pop
ds
push
adc
std
jle
mov
outsl
shll
xor
arpl
mov
inc
ja
sbb
xchg
bound
sub
xchg
leave
loope
shrb
pop
call
sarl
dec
dec
pop
or
add
idivl
mov
flds
xchg
xchg
sti
push
xchg
fsubl
out
dec
pop
test
jmp
push
popf
inc
sbb
sbb
jp
mull
adc
mov
addr16
cli
cli
mov
mov
add
fldenv
push
int3
mov
test
push
mov
and
aam
dec
or
xor
inc
loop
or
mov
mov
and
movsb
fisubrl
aam
test
xor
fldenv
cmp
fisubrl
js
push
cs
push
repz
dec
mov
push
arpl
call
add
mov
std
clc
adc
test
add
sahf
pop
dec
sbb
mov
dec
cld
add
ja
fwait
sti
sbb
ljmp
dec
cwtl
int
insb
rorl
loope
xor
pop
rol
sub
mov
xchg
das
test
fildl
inc
in
andl
mov
pop
fstl
pop
or
dec
outsb
mov
cmp
scas
scas
xchg
jmp
mov
push
in
lea
repnz
xchg
add
mov
add
jne
packuswb
pop
add
and
stos
or
lea
fstpt
fildl
xlat
inc
nop
pop
xor
jmp
iret
mov
xor
ds
jmp
mov
cld
or
push
mov
icebp
pop
lods
pop
jge
mov
popf
push
xchg
mov
std
dec
push
gs
cmp
imul
addl
push
shrb
xlat
aam
xor
mov
jnp
sub
and
rcrb
mov
lods
jo
adc
out
mov
shr
mov
xor
insl
int
aaa
sti
add
lret
aad
lcall
loopne
fsubrl
icebp
sbb
mov
leave
dec
bound
repnz
fistpl
imul
xchg
push
stc
inc
mov
fldenv
mov
inc
push
add
and
push
mov
adc
int3
mov
dec
fidivs
xchg
jp
icebp
add
add
xchg
outsb
sub
mov
pushl
sub
cs
out
test
cmp
out
pushf
pop
mov
pop
fcomps
mov
cltd
cmpl
cltd
pop
outsl
add
ss
xor
mov
int
pushf
sbb
enter
adc
and
lret
sub
pop
orb
idivb
pop
pop
dec
xor
xor
or
push
adc
xchg
rorl
cmovns
clc
mulb
roll
mov
mov
fs
cmpsl
and
lock
in
push
mov
sub
in
ds
xchg
sbbb
bound
mov
dec
mov
scas
icebp
mov
mov
xchg
test
or
inc
hlt
push
or
test
pop
int3
sub
mov
inc
sbb
cmc
cld
int3
lahf
sarb
hlt
mov
sti
lods
sub
adc
inc
dec
cld
pop
int
push
xchg
inc
shl
out
dec
mov
and
jmp
andl
out
add
inc
inc
mov
js
or
push
sbb
int3
lods
pop
fwait
mov
dec
xchg
ret
mov
cmpsl
mov
pop
lahf
xchg
xchg
add
jae
rclb
lods
inc
mov
jge
sti
jecxz
pop
mov
and
and
cmp
dec
add
fisttpl
jnp
mov
mov
xor
filds
stos
fcom
lock
hlt
push
jmp
stos
mov
cltd
sub
mov
test
cmp
shlb
lahf
out
sbb
jbe
sti
sti
sbb
xchg
cli
rorb
cld
inc
xchg
jge
mov
std
popl
and
in
push
mov
dec
sbb
aam
mov
sbb
dec
daa
xchg
mov
push
xchg
fisubl
enter
enter
inc
mov
pop
loopne
mov
scas
or
iret
jne
aas
ss
mov
xor
pop
ret
pop
mov
inc
out
jbe
je
mov
xchg
imul
subb
cwtl
fldcw
pop
sub
push
mov
pop
aas
jne
aad
aaa
int3
xchg
scas
and
lret
push
idivl
inc
pusha
xor
jns
xchg
sbb
outsl
pop
push
pop
out
and
jmp
mov
sub
test
pop
repnz
ret
xor
ret
add
test
popa
pusha
js
xchg
inc
mov
iret
adc
repnz
mov
stos
cmp
fstl
and
stos
sbbb
sub
pop
das
inc
fcoml
mov
inc
hlt
add
push
xor
pusha
sub
add
mov
hlt
mov
xor
jo
into
pop
add
sbb
jae
mov
sbb
jae
and
push
loopne
jg
fmuls
and
push
push
outsl
shll
xor
in
out
adcl
stos
cmpsl
push
aas
jbe
sub
xchg
addr16
mov
dec
push
sarb
out
jmp
imul
and
std
dec
fmul
cmp
jnp
adc
icebp
imul
jge
insl
jl
add
int3
ret
dec
js
hlt
jae
dec
mov
pop
inc
mov
rcrb
push
lahf
jns
loop
sbb
inc
mov
fcoms
hlt
fwait
dec
dec
adc
loope
mov
fucomip
mov
sbb
fnstenv
lea
push
xchg
and
fldt
add
xor
dec
lahf
and
add
imul
push
or
sbb
mov
inc
and
fldcw
sub
out
sbb
in
lret
add
lahf
inc
rcl
push
sbb
repnz
fnstsw
push
mov
mov
movsl
addl
xor
hlt
and
sahf
inc
jle
test
fsubp
cmp
pop
cmc
pop
cli
mov
cmp
sbb
insl
cmp
inc
xchg
mov
test
xchg
notl
inc
cs
jo
fs
push
mov
xor
dec
lods
hlt
out
mov
xor
arpl
pop
jo
mov
xchg
ja
arpl
xchg
fidivrs
dec
adc
cmp
jle
pop
inc
inc
pop
test
stos
inc
mov
jbe
push
or
xchg
insb
push
mov
push
bound
or
mov
lcall
cmp
fildll
mov
push
ds
sbb
popa
loopne
mov
loop
pop
sub
sbb
loope
nop
jno
and
test
xchg
inc
lods
xchg
jno
gs
jnp
sahf
popf
lret
cmp
mov
cmp
les
pop
or
jb
pushf
jge
jno
add
fnstenv
mov
xor
push
mov
push
push
dec
xchg
shlb
shld
inc
xor
out
fstps
jo
wbinvd
xlat
lea
mov
adc
pusha
arpl
lock
insl
add
xor
inc
sbb
push
in
mov
mov
jnp
into
lock
sbb
imul
and
lea
pop
push
sub
xchg
dec
mov
inc
adcl
inc
ds
push
dec
fimuls
shr
xor
add
int
jne
lods
or
xor
loop
jae
addl
jae
lock
xchg
mov
sub
inc
mov
stc
mov
lods
mov
ja
jg
pminub
cmp
rolb
push
lret
jno
sub
nop
mov
in
orl
mov
xor
and
xor
add
mov
fmulp
cld
pop
les
in
pushf
fs
mov
or
insb
cwtl
jp
mov
xchg
rolb
inc
inc
fstl
xchg
sbb
adc
jecxz
push
cmc
fpatan
pop
xchg
or
fdivl
fwait
mov
mov
fnstsw
cs
or
cli
repz
cmp
push
pushf
sub
subl
aad
pushf
imul
sarb
xor
lret
fsts
fcoml
loop
sahf
cmpsl
negl
pop
mov
pop
push
stc
inc
daa
rorl
mov
daa
sub
jmp
xor
sbb
sbb
movsl
xchg
push
jbe
lret
cs
inc
inc
shll
jo
out
pop
stos
dec
xor
outsb
ret
inc
sbb
mov
sbb
xlat
push
xor
sub
add
adc
enter
repnz
clc
inc
out
movsb
lahf
mov
adc
cmp
in
in
cltd
lcall
ljmp
cli
jmp
in
jmp
push
out
cmp
mov
xchg
mov
cwtl
and
out
in
mov
aad
clc
ja
mov
xchg
out
cmp
leave
jg
fsubl
dec
push
push
push
popf
sub
or
cmp
leave
mov
mov
xchg
fldcw
clc
add
dec
cmpsl
mov
push
cmp
test
repnz
xor
loop
cmp
mov
xor
push
adc
ljmp
xchg
and
test
jae
sbb
mov
mov
ret
popa
push
outsl
scas
ror
sub
movsb
xchg
ret
leave
push
mov
sarl
sbb
mov
sbbb
ljmp
xchg
sbb
ljmp
lcall
dec
xchg
add
and
or
xlat
shll
lret
or
xor
popf
and
jecxz
dec
std
add
sbb
pop
xchg
mov
or
jmp
add
jge
test
cld
jecxz
jne
jb
les
push
jno
jno
sub
gs
outsb
enter
adc
es
scas
lret
insl
adc
mov
adc
and
lods
mov
mov
add
out
rcrb
inc
sbb
add
in
rcr
scas
cltd
insb
cmp
cmpsl
shlb
jbe
aam
fdivp
loopne
dec
sti
pusha
mov
sbb
inc
std
fidivl
stc
push
jae
mov
icebp
fisttps
pusha
xlat
mov
xor
js
dec
adcl
xor
push
ficompl
inc
mov
aaa
imulb
mov
es
pusha
andb
mov
jmp
sub
or
push
mov
sub
inc
jns
mov
lea
pushf
cmc
icebp
icebp
pop
mov
in
mov
jge
mov
push
adc
jl
jo
jne
fbld
rcrb
sarl
and
outsl
aas
jl
adc
sbb
stos
push
mov
gs
mov
push
cld
out
jno
jl
fmuls
cmp
sub
ss
ficompl
pop
arpl
test
pop
cmpsl
out
dec
sbb
cmp
fstpl
and
fimull
cmp
jno
jns
dec
repz
shlb
fisttpll
stos
xchg
mov
repnz
movsl
sti
mov
mov
sub
sbb
incb
inc
jl
mov
lret
mov
xor
shrb
popf
sub
jge
or
shrb
shll
add
xchg
pushf
call
shr
inc
mov
ror
fiadds
scas
enter
xchg
sub
imul
add
cmpsb
sbb
adc
add
xlat
aas
paddq
pushf
mov
pop
fsts
test
pop
mov
sub
cltd
jne
call
xchg
negl
push
das
pop
js
dec
dec
or
mov
rclb
sbb
mov
xor
and
or
lahf
lods
es
test
jns
jle
loop
push
adc
dec
scas
clc
insl
xchg
subb
push
outsl
out
mov
sbb
or
outsl
cmp
fsub
push
xlat
push
aam
fimuls
xchg
xor
fistl
imul
xchg
add
aas
cmp
jmp
std
jmp
ret
icebp
jae
fmuls
xchg
xchg
movsl
dec
insb
dec
inc
xor
mov
fs
ficoml
movsl
arpl
xchg
shrb
and
dec
aad
sbb
jno
sahf
fstps
scas
in
scas
fnsave
or
sti
xchg
cmpsb
jg
and
jecxz
pushf
pop
decb
mov
sahf
xchg
daa
cli
fs
call
hlt
rcr
or
sbb
xchg
or
dec
push
xchg
lcall
test
add
mov
inc
pusha
dec
xchg
adc
in
rclb
popf
imul
aam
shr
imulb
mov
inc
xor
adc
cwtl
push
push
mov
lret
lods
dec
rcrb
xor
outsb
sbb
dec
mov
call
or
jno
mov
into
or
cli
xchg
sti
loop
scas
jle
add
lcall
jg
idivl
in
lock
pusha
push
mov
xchg
repz
mov
mov
sub
rcrl
mov
cmp
and
push
or
mov
repz
ljmp
push
js
jnp
mov
scas
imul
cmp
add
icebp
imul
mov
dec
cmp
cli
dec
fwait
lea
stos
inc
xchg
test
push
pop
call
xchg
ja
mov
xchg
pop
cld
arpl
jne
cld
cmp
std
push
and
pop
inc
xor
and
xor
adc
outsw
cmp
mov
push
xlat
enter
movsb
mov
lret
clc
andb
out
testb
mov
sahf
repz
sahf
adc
jge
add
xchg
add
lods
lcall
and
sub
adc
jl
pop
jg
aam
shrl
stc
xchg
push
jns
xchg
and
xor
in
dec
sbb
and
and
mov
test
or
sarl
jp
push
adc
ret
insl
lock
les
sahf
in
dec
xor
pusha
lock
popf
sbb
or
xchg
adc
ret
pusha
pop
insl
jmp
rcrl
mov
cmp
jb
pop
int3
mov
ds
sub
icebp
and
mov
mov
cmp
dec
repnz
ds
std
gs
js
sub
xchg
mov
sti
scas
out
xorb
fidivrl
lret
lods
inc
nop
roll
gs
aad
cld
xchg
xchg
es
push
ds
sub
push
cmp
jl
hlt
pop
fcomps
or
nop
or
js
lods
pop
jle
bnd
jne
jg
dec
pop
loop
popl
mov
movb
cli
repz
push
lahf
cmp
shll
ffreep
cli
fisttps
mov
mov
pop
mov
das
xor
xor
push
movsl
loop
lds
aaa
cmp
fdivl
lds
xchg
cmp
shll
push
gs
xorb
icebp
enter
rcll
rclb
xor
shrl
aad
pop
and
arpl
dec
aad
sbb
jb
fisubl
std
xchg
mov
aam
scas
bound
sbb
out
into
stc
outsb
cwtl
dec
sbb
inc
aam
sti
ljmp
ja
dec
sbb
or
ret
mov
xchg
sbb
repnz
das
test
in
popf
xchg
cmp
sahf
insb
jns
push
jp
push
and
xchg
push
push
inc
les
mov
js
popf
inc
imul
andl
cmp
pushf
jmp
mov
xor
and
add
in
pop
test
subl
sarl
mov
js
inc
cmp
push
sbb
push
xor
pop
loopne
pop
cmp
rolb
xchg
dec
push
loope
or
pop
push
mov
xchg
sbb
outsl
hlt
xchg
shrl
jp
aam
lock
mov
mov
adc
loope
shrb
bound
mov
adc
mov
sub
push
mov
test
jo
adc
loop
nop
jne
inc
popa
addr16
and
mov
orb
repz
sbb
cmp
mov
roll
int
out
fstl
and
lods
push
adc
rcl
xor
jnp
push
sub
mov
mov
push
jge
int3
scas
test
mov
test
cwtl
dec
dec
iret
aaa
insl
mov
das
sbb
sub
pop
out
jbe
ret
icebp
dec
mov
fnstsw
movsl
push
movsl
in
aaa
movsl
dec
cmc
fidivs
outsl
bound
fcoms
or
xor
or
in
arpl
push
hlt
in
dec
scas
hlt
andb
cmp
fldenv
aad
movsb
xchg
cmp
lret
stc
cmpsb
jmp
xchg
das
push
cmp
xor
xchg
dec
fisubrs
test
jb
pop
mov
sbb
stos
decb
loopne
gs
movsb
mov
mov
cmp
roll
popf
sti
sub
shlb
vcvttpd2dqx
mov
shrl
ss
inc
movsl
adc
jnp
bound
loop
mov
shl
xchg
or
gs
stc
mov
cld
fistpll
and
cltd
jo
push
dec
mov
ljmp
push
fst
sub
or
dec
jb
push
lods
fcmovnbe
sub
test
in
jmp
mov
jg
sbb
ds
mov
fdivr
xorb
mov
outsl
dec
cmpsb
mov
insb
mov
cmp
mov
imul
cltd
xchg
or
xlat
cmp
xchg
dec
pop
shl
aam
stc
js
mov
adc
test
orb
inc
stos
jmp
pushf
pop
mov
repz
pop
cmp
in
sahf
fists
ror
insl
out
out
es
fdivl
sbb
or
dec
sub
sar
pop
add
and
jo
adc
mov
mov
inc
arpl
lods
loop
dec
mov
das
ud0
and
adc
aam
fs
mov
sti
mov
push
bound
jb
repz
push
mov
fdivrs
sbb
pop
sub
mov
ljmp
loopne
imul
out
test
cmp
or
into
cmp
out
das
lods
mov
mov
mov
sti
test
sub
xor
push
jne
sbb
cmpsl
loopne
lret
xor
cmpsb
in
filds
add
aas
inc
es
push
insl
movsl
lret
sbb
clc
push
call
clc
push
nop
outsb
mov
ljmp
int3
fldcw
cs
outsl
out
in
aas
and
push
jmp
adcl
jnp
push
xor
cmp
dec
pop
bound
dec
pop
imul
dec
lods
das
popf
std
push
fistpll
mov
sbb
dec
add
mov
fldt
imulb
mov
lcall
sbb
hlt
leave
std
test
scas
or
pusha
sub
repz
fwait
mov
dec
lds
and
out
pop
cld
stos
jae
and
cld
aam
ror
sahf
inc
dec
vsqrtsd
mov
jae
ds
sub
outsl
push
out
icebp
pop
fwait
std
mov
pop
push
pop
push
xor
inc
inc
xchg
add
test
stos
pop
adc
jbe
and
inc
mov
out
cmp
lock
cmp
inc
or
ret
aad
xor
adc
mov
pusha
sahf
inc
sbb
ss
jnp
and
icebp
loopne
sti
cmp
popf
sarl
cmc
sbb
mov
sbb
jle
dec
mov
aas
jnp
inc
push
enter
mov
cmp
xchg
mov
lea
outsl
xchg
sbb
pop
fwait
push
test
xor
shll
nop
and
mov
mov
push
je
jo
adc
movsl
mov
xchg
leave
jns
imul
mov
push
lret
gs
pop
mov
shll
ret
lock
adc
fnsave
xlat
hlt
and
cld
inc
xlat
xchg
pop
insl
lds
pop
das
inc
cld
push
shrl
pop
stos
fs
shl
mov
adcb
jbe
and
ror
inc
cmp
xchg
ja
xor
mov
rcl
xor
inc
lcall
mov
mov
sbb
sbb
mov
lret
add
pop
xor
fistps
mov
xor
sub
push
add
leave
pop
rcll
lods
or
psrld
nop
out
mov
push
sbb
ss
fdecstp
addb
sbb
pop
xchg
lret
sub
ret
add
and
or
jbe
popa
push
lock
sub
scas
cmp
and
xor
and
call
xchg
jae
lcall
popa
adc
mov
mov
or
test
push
loop
sub
add
lcall
out
sub
jne
push
lods
lods
sahf
orb
jmp
lods
jmp
xor
push
mov
push
popf
pop
sbb
cmpl
inc
fdivl
adc
xchg
lahf
inc
cmp
add
imull
cmp
and
les
aad
or
and
mov
cld
push
and
subl
dec
or
mov
scas
aam
lcall
jge
gs
mov
cwtl
jle
loope
cmpsb
mov
push
dec
adc
mov
dec
cmp
popa
push
add
xor
pop
cltd
cmpsl
xor
insb
jle
inc
sbb
push
ljmp
dec
mov
movsb
mov
adc
mull
mov
test
sbb
jl
stos
push
addr16
movsl
inc
dec
pop
movsl
lea
add
mov
xchg
cltd
mov
in
jb
out
push
repz
and
jmp
ss
mov
sbb
xchg
xor
data16
sti
mov
sub
std
cmpsl
outsl
scas
pop
out
or
scas
inc
inc
mov
jnp
mov
bound
int3
test
mov
add
or
jne
mov
xorb
divb
and
xor
aad
pop
push
arpl
sub
adcb
pushf
mov
xchg
jge
sbb
jb
in
push
outsb
insl
out
cld
fists
mov
push
mov
xor
cmpb
repz
loope
outsl
adc
cmp
push
pop
les
pop
add
or
popf
inc
mov
inc
sub
mov
mov
ret
push
xor
mov
repnz
sub
dec
jno
cmpsl
arpl
xchg
into
lret
mov
push
in
mov
std
pop
stc
jg
xor
xchg
and
push
data16
sbb
sub
daa
push
push
icebp
aam
jp
or
dec
push
int
pop
subl
cli
pop
rol
clc
popa
cmc
cmp
xchg
mov
xor
addr16
mov
push
xchg
cwtl
dec
dec
add
push
inc
pop
cmp
and
das
fisubrs
push
fxam
addr16
fldenv
xor
pop
push
imul
ja
push
xchg
cmp
jae
test
aad
es
push
add
ficompl
mov
fdivrs
testb
cmc
mov
int3
je
pop
sub
sbbl
mov
jl
push
mul
insb
dec
adc
fsubl
ss
or
pop
sbb
aad
dec
leave
add
shl
inc
push
clc
scas
pop
push
pusha
out
in
mov
out
sub
adc
fildll
jp
sub
aad
bound
lods
push
out
psllw
inc
pop
aaa
leave
in
test
mov
rcrl
in
sbb
pop
lea
sti
adc
jecxz
jmp
xlat
add
shl
test
mov
xchg
repz
adc
cli
fstpl
or
inc
fcoms
push
fimull
pop
or
push
jmp
cld
adc
mov
adc
pop
hlt
jno
or
push
xor
jge
mov
std
popa
stos
inc
push
pop
leave
sub
loope
xor
bound
or
in
sbb
adc
outsl
daa
out
pop
xor
adc
addr16
aam
xlat
inc
and
or
lods
dec
push
fdivl
pop
inc
daa
jmp
add
outsb
int3
stos
test
lcall
daa
xor
jno
mov
notb
push
sbb
or
leave
push
cltd
cltd
aad
sarl
lret
push
pushf
repz
mov
fs
ror
mov
fldl
mov
push
dec
je
pop
lods
stc
out
push
mov
pop
aaa
imul
fcmovnu
adc
or
mov
into
add
mov
mov
addr16
mov
movsl
xchg
rclb
into
and
out
ret
push
pop
and
push
stos
repnz
mov
add
sbb
int
gs
out
data16
dec
add
loopne
in
stc
daa
gs
fistpll
mov
cs
lret
mov
rclb
xor
mov
daa
loope
push
stc
insl
adc
shrb
out
dec
out
in
cmp
pop
ja
jno
out
rol
pushf
daa
mov
rolb
xor
push
add
mov
cmp
sbb
lret
int
inc
dec
push
jnp
in
lret
cli
cmp
sub
ret
adc
out
mov
inc
jle
daa
addr16
lahf
xchg
lds
push
cltd
aaa
data16
js
cld
pop
sbb
xchg
dec
test
push
mov
jb
in
sub
inc
and
dec
add
mov
push
test
jb
add
repnz
adc
xchg
xor
xor
stos
jmp
aad
and
addr16
or
fcomps
ret
pop
inc
jb
xor
push
mov
dec
push
xor
out
push
jb
sbb
inc
stos
dec
or
clc
sub
lretw
pop
scas
ljmp
test
fdivrl
xor
mov
in
pop
cld
jo
push
jne
xorb
lods
xor
push
xchg
xor
mov
push
mov
adc
rolb
xor
fidivs
pop
jge
push
xor
hlt
pop
mov
jmp
or
add
jae
xor
mov
dec
out
stos
pop
xor
and
ret
fistl
data16
lcall
sbb
cmpsb
cmp
lret
sub
jge
lret
cltd
adc
gs
or
jl
xchg
push
out
adc
scas
cmpsb
fists
add
insl
inc
xchg
adc
loop
cmp
jmp
mov
in
lahf
ja
xchg
int
repz
jne
stc
out
jmp
or
cwtl
fstl
cbtw
bsr
inc
gs
outsb
adc
pop
or
repz
mov
scas
negb
fmull
mov
pushf
and
cmpl
insb
out
pop
stos
mov
cli
imul
es
xchg
dec
push
mov
dec
lds
lret
push
imul
push
mov
xlat
aam
or
cld
bound
sbbb
pop
lret
mov
sub
mov
mov
mov
mov
mov
pushf
sarl
sub
loope
and
nop
or
frstor
outsl
xor
push
push
mov
push
cmp
fs
in
fwait
add
push
in
xor
push
andl
xchg
inc
inc
pop
jae
add
xlat
bound
ficomps
add
stos
pop
mov
aas
mov
shrl
loop
sub
add
pop
ret
push
in
xchg
loope
push
adc
or
sub
jge
xor
cmc
xchg
add
mov
xor
xlat
in
mov
pop
mov
ret
addr16
call
fstpl
cmpsl
decb
inc
movsb
or
push
iret
mull
dec
pop
mov
nop
lret
push
or
push
in
insb
stos
dec
push
mov
mov
xchg
or
sar
mov
insl
pop
cmpsb
mov
lods
jl
jb
or
sub
xor
mov
aaa
aam
and
idiv
cmpl
inc
adc
js
popa
pop
push
bnd
sub
loope
cmp
sti
aam
je
push
sbb
cld
mov
fildll
faddl
add
or
lods
jnp
inc
xor
or
nop
mov
inc
xor
add
sbb
mov
add
jl
add
movsb
mov
lahf
pop
mov
inc
iret
or
lcall
in
cmp
sahf
push
xchg
push
test
lods
pop
int3
push
test
add
sub
pop
add
mov
jns
jl
sti
jmp
xor
ljmp
insl
jle
mov
je
add
gs
push
cmc
mov
sbb
test
out
popa
xchg
mov
int3
cmpb
sbb
pop
or
sbb
pop
cmp
bound
push
add
cmc
jg
jecxz
lea
adc
sbb
fwait
jb
cli
adc
filds
cmp
in
xor
adc
daa
lret
ret
cmc
mov
insl
dec
test
xor
stos
testb
fdivp
cli
js
xor
scas
sub
mov
add
arpl
adc
test
push
dec
loope
jbe
push
inc
sbb
jmp
enter
lahf
cmpsb
add
jns
cs
inc
mov
in
out
and
shrl
ljmp
test
stos
or
sarl
pop
insl
sub
dec
push
into
aaa
push
and
cmp
and
ss
or
xchg
xor
pop
mov
xor
jmp
lahf
mov
dec
sbb
imull
push
jns
jbe
out
add
and
lods
test
adc
dec
jns,pn
lds
sbb
pop
jg
in
mov
mov
jnp
imul
imul
ljmp
xchg
shr
cmp
dec
lret
std
inc
inc
or
xlat
sub
repz
mov
inc
sub
add
in
jmp
nop
addb
movb
dec
hlt
cmp
aas
jg
xchg
sub
xchg
or
imul
jp
add
inc
add
test
dec
mov
int3
daa
lods
mov
and
or
loopne
or
sub
mov
and
imul
sub
gs
mov
outsb
dec
fs
es
and
mov
test
fiadds
int
mov
lahf
or
repnz
mov
notb
or
shlb
jge
inc
hlt
push
pop
pop
and
jp
pop
por
jg
fwait
jmp
cmpsl
and
pop
fldl
stos
jge
inc
test
jno
fwait
push
add
scas
pop
mov
scas
mov
pusha
or
dec
xchg
xor
jae
jmp
notb
or
insb
ja
ja
mov
hlt
jno
xchg
dec
push
sub
and
or
mov
andl
stos
bnd
jno
fistps
mov
sub
outsb
and
mov
clc
fisubl
inc
popa
movsb
dec
das
pop
or
mov
push
xchg
in
jae
imul
sub
add
dec
pop
jnp
lcall
push
imul
inc
iret
push
sbbl
aam
ja
push
cmp
mov
iret
imul
loop
and
inc
std
fwait
cld
aaa
xchg
das
das
lds
and
ret
mov
mov
mov
test
mov
push
cmp
mov
dec
push
mov
adc
xor
xchg
adc
orl
dec
jbe
mov
std
popa
dec
mov
repnz
pop
xchg
cs
mov
pop
inc
mov
out
mov
add
xlat
sbb
push
xor
xchg
push
cli
add
in
and
sbb
inc
push
jle
scas
dec
inc
xlat
cmp
pusha
jnp
ljmp
in
mov
jo
insl
das
mov
daa
xor
je
int3
stos
mov
scas
inc
lret
nop
inc
stc
inc
fisttps
adc
ljmp
push
int3
dec
or
mov
lcall
repnz
popf
jl
fcomp
stos
es
add
and
orb
cmc
ja
and
aas
dec
jg
push
ss
push
adc
push
sub
test
movl
test
and
mov
ja
loope
jge
dec
ds
ljmp
xor
cli
into
aad
icebp
sbb
jnp
fdivrs
insl
xchg
push
icebp
in
mov
jns
push
jmp
mov
fcoms
pop
sub
jp
adc
sbb
and
adc
or
fwait
sti
jmp
popa
pop
dec
aad
test
and
sbb
fwait
dec
add
insb
push
cmp
pop
push
push
in
mov
jecxz
jo
sahf
mov
pop
fwait
xor
sbb
fisubl
cmp
dec
jne
adc
mov
xchg
jmp
push
aas
jp
jg
popa
adc
jle
stc
jbe
int3
inc
leave
repz
adcb
cmp
mov
xor
cltd
pop
pop
jae
or
lods
ficomps
andl
les
mov
daa
aas
dec
loope
scas
cmp
mov
xlat
pop
mov
icebp
popf
roll
push
lea
mov
cmp
adc
aad
mov
jl
sub
movsb
xchg
dec
push
sbb
in
out
pop
dec
push
and
rolb
xor
add
adc
lcall
cmp
mov
mov
pop
jecxz
push
lahf
jge
loopne
subb
lret
js
sarl
movsb
sahf
cmp
sbbl
jnp
xor
test
inc
sahf
popf
mov
insl
or
jecxz
mov
jo
mov
outsl
jbe
scas
dec
sbb
lahf
jae
ss
sbb
lods
bound
jbe
lds
movsl
jae
sub
cmp
jb
sbb
mov
shll
xchg
mov
sub
and
into
fisttps
xor
lahf
mov
add
imul
sub
int3
and
pop
jo
xor
cltd
imul
movsl
sbb
jae
mov
rcrl
into
decb
mov
outsl
cmp
mov
add
insb
cmpsb
sbb
xor
mov
pop
arpl
sub
pusha
out
cmp
pop
mov
repnz
cli
xor
push
and
jne
push
mov
pusha
ret
fdivrs
mov
mov
jnp
aaa
dec
add
cwtl
stos
adc
mov
dec
sub
sahf
push
or
mov
enter
xchg
pop
jne
or
adc
mov
mov
roll
inc
xor
pop
test
xrelease
push
test
popa
in
jno
jnp
xchg
xchg
jecxz
into
test
sbb
fidivrl
scas
lahf
imul
lret
inc
jns
push
rclb
ror
repnz
arpl
ret
xor
add
push
cmp
xchg
xorb
adc
das
mov
dec
sub
adc
mov
stos
addr16
daa
cli
mov
xchg
aaa
das
hlt
mov
push
jne
fildl
adc
sub
mov
insb
enter
icebp
icebp
inc
clc
and
les
mov
call
test
outsl
scas
sbb
xchg
mov
pop
adc
xchg
or
pop
imul
xchg
push
jns
cmc
mov
mov
cld
jns
pop
xchg
adc
cmp
popa
das
cmpsl
fidivl
ds
xchg
sti
push
lcall
sub
xchg
loopne
mov
mov
mov
idiv
mov
jmp
imul
sub
lds
std
test
cmp
mov
jmp
out
imull
test
nop
rorl
push
das
adc
cmc
iret
loopne
into
and
dec
lods
pushf
fiaddl
mov
das
add
ss
sub
stos
dec
jge
std
jae
test
ds
dec
rorl
arpl
jne
aad
xor
adc
jge
mov
out
sbb
sbb
lods
sbb
rcr
mov
cmp
enter
mov
in
outsl
sub
call
push
aam
mov
cmp
mov
cld
test
push
dec
fcomps
repnz
loopne
xor
fcoml
inc
lea
or
push
xor
lods
arpl
fs
pop
popf
dec
mov
std
mov
adc
jle
cmpsl
and
inc
pop
or
or
or
adc
getsec
fsub
inc
out
pop
xchg
bound
lahf
xor
mov
push
mov
clc
push
push
dec
movsl
scas
inc
inc
push
mov
inc
xchg
fistps
sub
mov
test
xorb
rcr
xchg
int3
cmpsb
jns
pop
ret
sbb
mov
loop
adc
lcall
pop
xchg
lea
mov
arpl
mov
inc
ret
popa
lcall
loopne
repnz
push
lock
xlat
mov
jmp
cwtl
rcl
mov
pop
adc
jle
pushf
scas
xchg
mov
mov
fdivl
std
sub
or
jns
and
mov
mov
ret
pop
adc
out
dec
lcall
push
fs
enter
inc
fcomp
pop
mov
cmp
insb
and
add
mov
cmp
mov
jb
cld
jl
lods
enter
into
lcall
sub
jne
mov
outsl
jmp
lea
pop
call
pop
jmp
outsl
or
xor
call
xchg
mov
das
xor
cmp
xor
mov
idiv
and
pop
movsb
sbb
mov
sub
pop
ljmp
movsb
iret
adc
adc
mov
mov
out
aad
dec
loopne
xchg
cwtl
sar
cmp
aad
sarb
add
dec
fadds
lahf
push
push
pop
push
into
adcl
jp
add
cmp
fs
xchg
sbb
ret
xor
sbb
xchg
insb
fnstenv
scas
push
iret
xchg
dec
pop
dec
adc
popf
aam
ror
push
mov
rcll
sbb
popf
es
pop
lcall
ljmp
mov
mov
jno
push
or
mov
adc
adc
mov
das
xlat
jmp
pop
sbb
xchg
xor
fimull
lods
push
adc
xchg
mov
mov
jnp
mov
inc
scas
mov
jge
subl
movsl
pop
aaa
inc
out
xchg
push
jne
mov
cmc
push
cmp
testb
cwtl
mov
stos
add
xchg
mov
inc
push
stos
dec
dec
jmp
and
add
out
repnz
jnp
add
shr
fldcw
aas
pushf
jno
xor
sbb
js
mov
dec
sbb
jnp
movl
xor
mov
cwtl
loopne
mov
test
test
add
andb
rclb
fisubs
movsl
mov
into
popf
aas
pop
pop
enter
sti
in
enter
and
jbe
int3
rolb
inc
out
xor
arpl
imull
dec
repz
xchg
pop
sub
sub
or
mov
xor
push
dec
cmc
stos
scas
or
inc
xor
and
and
pop
pop
into
xor
mov
cmp
mov
imul
xchg
std
mov
fildll
xchg
xchg
pop
xchg
mov
cmpb
scas
cmc
or
jmp
add
mov
xchg
jb
mov
adc
add
xor
sub
mov
add
scas
lahf
outsl
cmpsl
pop
repz
cmpsb
in
jmp
dec
ret
pop
cmpsl
je
shll
fbld
sbb
cmc
pop
aam
cli
loopne
jmp
sub
sub
jbe
adc
lds
gs
cwtl
dec
dec
dec
sbb
dec
test
test
lods
scas
push
test
repz
push
and
aad
iret
mov
addr16
dec
icebp
test
xchg
push
cmp
cwtl
dec
mov
lret
push
movb
cmp
std
ss
jle
pushf
fdivs
mov
inc
or
inc
add
push
jmp
mov
sbb
push
cmp
inc
test
into
inc
insl
mov
xorl
xchg
notl
lea
scas
sahf
inc
icebp
adc
andl
mov
rcrb
testb
xor
mov
dec
jne
lret
inc
sarl
mov
lock
sbb
lods
rcl
ljmp
cmp
xor
insb
in
cmc
iret
test
push
mov
int3
cmp
pop
out
out
push
mov
dec
int
inc
sub
pushf
mov
xlat
jbe
fisubrs
cltd
pop
and
or
mov
test
test
mov
cmp
pop
and
mov
out
jge
out
fdivrl
xchg
sbb
lahf
aas
sahf
sub
fld1
in
and
hlt
sub
mov
inc
xchg
sbb
sahf
mov
inc
cmpsl
stos
lahf
das
ror
or
xchg
sub
ds
mov
inc
scas
fwait
jmp
xor
mov
inc
adc
sbbl
loopne
jle
sbb
sbb
jo
test
stc
adc
inc
inc
pop
lahf
ret
scas
insb
mov
call
outsl
cltd
push
dec
dec
push
rcl
xor
xor
sahf
dec
cmpsl
xchg
arpl
dec
aaa
jne
test
mov
push
and
pop
scas
pop
and
pop
fldenv
pop
mov
or
adc
mov
pop
out
add
xchg
jmp
push
inc
dec
sub
push
add
push
dec
repz
movsb
xchg
fadd
decb
adc
pusha
pop
lods
xor
cmp
das
test
popa
xor
js
and
and
push
add
out
int3
pop
hlt
dec
ret
popa
lret
jecxz
pop
sbbb
andl
repz
sar
xchg
dec
int
test
cld
inc
loope
jp
daa
add
stos
lret
data16
int
ds
hlt
js
repnz
or
pop
jp
outsl
and
andl
xchg
xorl
mov
int3
mov
std
dec
popf
adc
cmp
loope
fldt
jmp
xchg
les
add
ret
sub
stos
flds
clc
lds
fwait
les
jo
jp
imul
repnz
clc
jae
xchg
lret
lea
and
xchg
mov
stc
pop
jae
fdivrs
shrb
arpl
xacquire
mov
js
pop
vmovq
jns
xor
ds
movsl
pop
popa
xchg
lock
and
aad
sbb
xchg
cmp
or
dec
and
mov
push
xor
fists
jnp
dec
add
cmpsl
jmp
jmp
and
test
pop
insb
sbb
adcl
inc
into
adc
and
jno
ds
rclb
cwtl
add
xchg
ffreep
loopne
sbb
jg
xchg
xlat
aam
cmp
or
cmpl
sub
inc
push
int
insb
out
pop
mov
or
mov
sbb
imul
or
fs
push
pusha
inc
push
mov
popf
pusha
push
mov
in
mov
fsubr
cmpsl
pusha
or
pusha
xchg
push
movsl
dec
mov
jb
dec
jno
xchg
or
cmp
loopne
jge
insb
xlat
pop
or
das
jmp
xchg
dec
inc
mov
test
cltd
sti
jge
lock
in
push
jge
ret
shrl
clc
cmp
mov
arpl
xchg
cmp
lcall
cmpsb
nop
push
out
lahf
loope
mov
fsubl
jo
dec
mov
xchg
out
xor
xchg
inc
pop
icebp
mov
scas
or
adc
out
loope
fsubrp
mov
push
mov
rcrb
cmp
mov
pop
bound
notb
sbb
ret
sub
or
mov
mov
rorb
fwait
sub
xchg
cmpsb
jbe
and
repnz
into
jnp
adc
jne
mov
sbb
push
movsb
mov
pop
push
pop
mov
fdiv
inc
pusha
jl
and
addr16
addr16
hlt
xchg
sbb
sbbb
cmpsb
shll
or
into
inc
mov
subb
dec
xor
add
mov
or
lahf
mov
jbe
push
xlat
imul
mov
clc
pop
imul
pop
jecxz
or
addr16
ret
inc
lds
js
negb
outsl
sub
push
sub
xor
mov
mov
les
cwtl
add
aaa
lret
push
adc
test
movsl
test
push
mov
imul
arpl
adc
testb
insb
mov
xchg
cmp
popa
mov
sbb
es
call
add
dec
inc
push
mov
add
xchg
push
clc
push
cli
mov
push
xchg
ret
rolb
orb
push
jb
dec
dec
push
push
mov
mov
popf
shll
fcomi
xchg
push
adc
lea
cmp
imul
popf
jle
shrl
pusha
imul
add
pop
lret
pop
mov
es
sbb
nop
mov
fstps
out
popa
pop
mov
aas
fdivs
cld
mov
dec
cli
ds
or
lods
clc
pop
ficompl
lods
pop
mov
push
pusha
scas
mov
sub
dec
orl
adc
xchg
ja,pn
outsl
lods
dec
aad
jp
cmp
jmp
sbb
and
filds
loop
fdivs
jl
fsubp
testl
inc
lods
jnp
mov
mov
xor
or
in
pop
or
stc
bound
inc
dec
mov
stos
cmp
push
mov
push
aam
xchg
fstps
cmp
mov
das
or
sbb
lret
mov
add
fdiv
add
out
aad
rorl
stos
addb
cmp
push
arpl
in
dec
inc
jnp,pn
loope
or
xchg
pushf
fisubl
movb
mov
loop
out
sbb
rclb
sub
xlat
adc
dec
testb
mov
in
sbb
xchg
js
shll
ret
mov
sbb
or
adc
out
cmpsb
dec
mov
xchg
fcmovbe
pop
frstor
out
xor
mov
push
repnz
adc
lret
sbb
into
data16
dec
fwait
jmp
popa
push
mov
add
scas
enter
jne
arpl
lock
das
std
testb
jae
adc
jecxz
into
in
sqrtps
icebp
push
or
scas
sbb
fsubs
xlat
cmp
notb
pop
sub
out
loopne
cmp
lock
popf
cmpsl
mov
xchg
mov
cmc
add
data16
fldl
out
fmulp
js
adc
outsl
adc
pop
mov
das
xor
pop
lahf
add
aaa
cmp
subl
push
fdivrs
aad
mov
push
jno
outsb
xor
mov
or
jle
fmull
pop
call
mov
jbe
lahf
mov
fs
loop
lods
and
cmp
cmp
in
repnz
iret
push
std
addr16
lea
jae
movsl
js
cmc
popa
cmp
lea
in
sbb
rclb
in
cmp
shlb
ljmp
arpl
insl
or
scas
xor
fldcw
sbb
adc
sahf
pop
mov
std
leave
xor
pop
aas
shll
mov
sub
jmp
jecxz
ljmp
testl
inc
xchg
ret
shrb
les
cld
or
sbb
cli
pusha
add
inc
mov
xor
push
lock
mov
push
fnstenv
xchg
mov
fwait
dec
test
cmpsl
cwtl
mov
pop
pop
outsb
mov
outsl
or
dec
xchg
aam
inc
aam
sub
jecxz
mov
mov
lods
jns
repnz
push
add
mov
pop
rclb
mov
inc
sbb
rcrl
das
ds
mov
in
xor
jbe
or
push
xor
mov
iretw
jge
sub
bound
outsl
repnz
xchg
jae
cli
mov
shll
and
mov
xor
dec
mov
mov
imull
testl
sub
sti
xor
dec
jecxz
adc
cmp
lret
push
clc
shll
lea
or
cmc
pushl
and
jbe
mov
xor
push
insl
cwtl
cs
pop
adc
push
mov
ret
int3
loope
shl
fsubp
and
jmp
daa
push
bound
dec
pop
pop
jmp
ja
or
pop
cmp
in
stc
jmp
in
push
adc
add
scas
mov
xor
sub
xlat
push
push
add
addr16
jl
inc
loope
ljmp
pop
sub
test
outsl
or
or
pop
lock
push
mul
fwait
in
jne
xchg
cmc
lock
std
pop
cs
stc
adc
subb
mov
dec
inc
jp
leave
icebp
mov
leave
pop
push
scas
lods
inc
roll
dec
pop
std
jge
sbb
jae
rorl
pop
js
dec
fldl
icebp
fdivl
jae
lcall
push
push
sbb
add
out
ss
shl
xchg
mov
pop
jl
mov
dec
dec
mov
inc
call
aaa
mov
mov
clc
and
or
push
lods
movsl
xchg
jno
push
cmc
dec
cltd
fwait
addb
pop
inc
dec
mov
data16
xchg
cmpsl
aas
dec
pop
ficompl
xchg
icebp
aaa
push
in
mov
or
add
pop
aad
lret
sbb
pop
dec
scas
ds
and
xor
jmp
out
dec
cli
aam
mov
pop
adc
scas
out
shr
push
sbb
popa
mov
mov
dec
lds
mov
sub
push
in
sbb
jecxz
add
push
insl
mov
xor
hlt
push
test
fldenv
ficoml
nop
xchg
imul
jl
inc
add
xchg
mov
xchg
jns
lds
pop
mov
lods
xor
sbb
cmp
jb
shrb
imul
lahf
dec
mov
pop
jae
add
jmp
xchg
dec
xchg
xor
imul
and
xor
sub
mov
mov
xorl
or
rcl
aas
popl
jecxz
out
dec
and
cmp
stos
cmp
out
nop
and
mov
ror
jmp
cmp
rcll
adc
ss
ja
and
adc
jno
jne
scas
mov
mov
xor
outsl
out
imul
mov
dec
cli
shl
mov
popf
sub
cmp
xchg
in
dec
mov
stos
insl
cli
rclb
js
mov
pop
and
push
xor
dec
dec
sbb
stos
lods
sub
mov
test
rcrl
into
pop
sub
das
je
jo
pop
jo
les
inc
push
xor
gs
jns
stos
pushf
cmpsb
or
not
popf
dec
sarl
loop
or
test
mov
and
jmp
sahf
daa
mov
xchg
pusha
or
imul
jo
jbe
das
dec
cmp
stc
xor
jae
hlt
push
lods
dec
jns
pop
pop
xchg
js
es
pop
xorl
dec
add
stos
test
push
insb
in
pop
jns
frstor
pop
lds
and
pop
xlat
icebp
jl
in
or
sub
lahf
cmp
jo
mov
push
sbbl
sarb
out
pop
pop
rolb
setno
imul
adc
dec
pop
or
inc
stos
add
push
push
test
sbb
or
cmp
pop
mov
xor
outsl
iret
clc
or
cmp
push
mov
jmp
mov
adc
arpl
sbb
mov
test
call
mov
push
dec
mov
rclb
jne
xor
cmp
test
add
jmp
mov
enter
dec
mov
pop
test
adcb
cmp
xor
addr16
mov
sahf
pop
or
lahf
push
inc
imul
inc
sbb
movsl
movsl
pop
jno
mov
pusha
out
mov
loop
insb
lcall
jp
test
leave
xor
pop
xchg
sub
sub
push
aaa
roll
iret
sub
xchg
ret
mov
mov
jl
addb
imul
pushf
lods
xor
mov
shlb
cmc
sub
out
out
jo
pop
or
mov
or
std
sub
div
mov
cmp
dec
inc
xchg
repz
inc
test
inc
clc
xor
cmp
xor
inc
adc
pop
call
out
inc
insb
mov
cwtl
sbb
xchg
orb
mov
mov
aas
and
sub
or
jmp
mov
push
pop
push
push
and
or
fnstsw
subl
dec
iret
jns
push
jnp
adc
sub
cmp
sbb
je
jb
mov
mov
fldl
adc
cmp
inc
stc
lahf
dec
fistpll
lods
inc
pop
adc
cmpsb
jnp
stos
cmpsb
push
xlat
ss
mov
push
mov
push
out
scas
dec
gs
mov
idivl
mov
adc
pusha
mov
xor
push
fdivl
sbb
cmpsl
sub
cmp
aas
push
call
add
add
push
adc
pushf
push
xor
lret
outsl
mov
mov
xchg
push
jbe
or
ss
dec
sbb
clc
inc
imul
mov
test
push
inc
inc
inc
cmp
xorl
outsl
or
aad
aad
je
es
pop
leave
cmp
jae
cmpsl
out
fistps
sub
xchg
clc
into
jecxz
fcompl
in
jmp
xchg
jno
jbe
loop
pop
ss
movsl
sbb
jo
stc
or
cld
bnd
jae
test
push
data16
jbe
or
lods
mov
sbb
push
and
call
cltd
mov
pop
enter
cmpsl
push
xchg
mov
xchg
rcrb
xchg
sbb
push
dec
imul
loope
jnp
jge
leave
jnp
jp
imul
push
adc
jmp
sub
out
xchg
loopne
pop
shrl
add
xchg
mov
sar
mov
pop
neg
mov
fsubl
loop
imul
lea
in
push
inc
pop
data16
mov
rclb
cmp
and
sub
xchg
cld
and
mov
adc
xlat
inc
mov
mov
mov
js
cli
in
sbb
push
pop
mov
jge
jae
pop
inc
push
push
add
xor
cs
and
mov
test
or
and
cmp
and
pop
mov
into
xor
lods
lahf
scas
push
arpl
mov
xor
lods
push
jge
mov
scas
dec
lods
add
sbb
push
jl
adc
pop
sub
aad
mov
jmp
jns
push
fwait
sub
jge
xor
xchg
ja
cwtl
sbb
fs
push
mov
aad
add
sbb
mov
leave
dec
xchg
sbb
scas
lret
push
subb
dec
into
push
lea
mov
push
adcb
addr16
aas
out
mov
add
cmp
xchg
inc
repnz
push
in
push
mov
mov
push
mov
push
pushf
in
aas
pushf
add
out
mov
fstpt
push
out
xchg
cmpb
jbe
sarl
dec
daa
stos
sbb
xor
subl
sub
insb
xor
mov
jns
adc
arpl
faddp
out
cld
adc
hlt
sub
xchg
push
mov
add
jne
leave
test
push
ficomps
dec
outsl
aad
push
and
push
test
pop
lret
jecxz
add
fsubl
out
pop
out
das
in
xchg
mov
addr16
int
jge
ds
sbb
jo
outsb
sub
pop
sub
lcall
add
loope
mov
test
jo
movsl
outsl
push
sub
adc
in
idivl
subl
fcomps
lock
lock
fnstsw
fidivl
pop
adc
mov
cmpsl
lea
cmp
mov
test
cmp
leave
lret
shll
ficoml
mov
push
dec
stc
out
inc
mov
adc
into
in
sub
vfrczps
fadd
push
jmp
xorb
mov
add
icebp
js
xor
inc
jno
inc
push
cld
pop
xchg
cmpsb
and
mov
mov
jl
and
stos
loop
adc
repnz
pop
sub
add
loopne
lods
and
or
cmp
mov
xchg
lods
lock
and
lea
dec
jo
pop
scas
sbb
call
adc
push
scas
addr16
sbb
mov
negl
orb
push
add
lahf
pop
out
dec
shrb
mov
cmp
cmc
pop
cmpsb
cmp
dec
lret
sbb
add
lock
in
loope
push
adc
mov
pop
pop
jbe
aam
popf
lret
aam
jl
jb
imul
add
aaa
cltd
jp
fcoms
jge
pop
jns
mov
imul
fwait
dec
insb
pop
push
shlb
sub
xchg
scas
das
leave
xchg
into
push
dec
cmp
jns
mov
and
xor
fists
nop
les
hlt
loopne
orb
scas
testl
paddb
int
cmp
or
pop
call
std
ds
sbb
push
stos
into
cmp
or
and
ss
les
or
lahf
mov
outsb
sbb
out
mov
pop
out
adc
jb
xor
and
pop
dec
dec
add
daa
inc
mov
pop
dec
das
mov
jnp
mov
adc
lcall
dec
mov
xchg
mov
jb
imul
decb
in
sbb
inc
les
outsb
pushf
push
push
pop
mov
jo
ljmp
incl
enter
mov
or
test
sahf
or
jne
gs
imul
loope
xchg
arpl
shrl
adc
mov
mov
pop
jg
jecxz
movsb
aad
in
loop
cmc
shlb
jnp
pop
popf
mov
lea
test
pop
adc
and
push
std
pop
ja
outsb
jne
scas
mov
cmpl
pop
jns
lods
cmp
push
jle
aad
andb
xchg
subb
dec
or
or
das
xor
rorb
jge
int3
sub
fwait
dec
in
mov
pop
sub
cmpsb
loop
rolb
xor
inc
push
push
sahf
iret
out
aaa
sbb
jmp
adc
rclb
mov
add
push
mov
add
push
rorb
dec
pop
add
out
aaa
fucomi
lret
test
das
sub
dec
pushf
in
daa
aad
fstpt
pop
insb
mov
dec
aas
scas
fsub
jbe
cmp
dec
jbe
or
push
push
xchg
jae
lret
inc
cwtl
sub
lea
lods
mov
lea
insl
rorl
jecxz
lret
in
push
sbb
xchg
pop
dec
jecxz
in
adc
mov
dec
push
rcr
sbb
lods
adc
pop
dec
add
loope
dec
rcrb
sub
sub
std
xchg
imul
push
mov
jecxz
cltd
jbe
pop
dec
sti
out
push
jno
and
dec
add
aam
repnz
mov
fmul
outsb
push
add
and
xchg
sub
repnz
push
mov
mov
inc
push
jb
or
sbb
int
rcl
dec
test
add
push
and
mov
leave
sahf
leave
imul
xor
cmp
lock
and
aad
push
adc
insb
add
outsl
xor
pop
mov
cvtpi2ps
std
pop
jae
test
or
sahf
clc
iret
sti
insb
dec
xor
push
inc
pop
daa
imul
jno
lahf
push
push
cs
fs
mov
mov
movsb
cwtl
rcrl
push
push
fs
loop
sbb
push
inc
or
lock
xorb
xchg
push
and
mov
dec
dec
adc
lret
cmc
jmp
mov
and
sbb
aas
dec
inc
inc
xor
dec
and
mov
push
push
sbb
mov
and
push
jp
fistpl
mov
push
ret
mov
filds
pop
mov
loop
popf
ja
cmp
xorl
dec
jp
and
xchg
and
sub
push
dec
sti
cmp
mov
lds
jo
xorl
insb
pop
loop
and
push
push
outsl
push
dec
sbbb
out
xorl
mulb
imul
repnz
icebp
jmp
dec
repz
in
mov
push
push
aam
xor
outsb
jbe
inc
xor
sahf
mov
jg
mov
repz
xchg
fsubp
mov
jecxz
push
ret
pop
adc
aaa
cwtl
xor
shrb
or
lahf
pop
push
inc
pop
imul
mov
aaa
mov
ja
shll
fstl
out
jo
jns
cmpsl
sbb
or
push
push
mov
and
inc
mov
jp
xchg
xchg
push
mov
and
push
ljmp
dec
fwait
mov
arpl
dec
mov
push
loopne
stos
mov
jbe
int3
pusha
adc
stos
lock
mov
mov
clc
clc
xchg
pushf
add
sub
ds
rcrl
jnp
fildll
pop
adc
adc
fs
aaa
sti
clc
mov
inc
mov
aam
movsb
pushf
imul
scas
ja
imul
testb
mov
dec
push
or
in
or
dec
lods
mov
cmp
sarl
scas
fsubl
sbb
pop
mov
adc
inc
jge
sub
jg
or
mov
adc
mov
fldpi
pop
sbb
sub
or
clc
push
in
xchg
cmp
fidivl
xchg
push
push
lods
add
mov
or
dec
ljmp
add
mov
add
jbe
fsubrl
mov
mov
repnz
add
or
adc
fcmovnbe
sbb
adc
pusha
movsl
sbb
gs
int3
fiadds
push
lods
inc
test
cmc
je
xchg
mov
pop
stc
pop
dec
pop
inc
inc
pop
push
mov
sbb
scas
lret
pop
sarl
mov
lcall
pop
into
pop
popf
frstor
push
mov
and
divb
sub
scas
dec
insb
mov
mov
andb
xchg
enter
adc
imul
imul
lea
push
ljmp
orl
inc
jg
out
xlat
aad
mov
jo
shrl
sbb
mov
sub
mov
test
out
xchg
jecxz
mov
xor
repz
pop
mov
or
mov
insb
mov
fdivp
cmp
out
into
pop
in
mov
xor
shrl
int
or
leave
push
imul
inc
std
icebp
mov
arpl
mov
push
loope
jle
cmpsb
xchg
cmp
mov
pop
pusha
cltd
push
hlt
adc
jns
and
sbb
pusha
xlat
xor
add
xor
and
pop
sbb
icebp
adc
jo
xchg
in
jne
vprotb
sub
or
aaa
repz
jns
arpl
out
popa
xchg
dec
test
mov
ficoml
pop
loope
inc
xchg
js
imul
outsl
xchg
setp
ret
imulb
mov
mov
aam
pop
pushf
lods
sub
sbb
imul
mov
popf
xor
or
sbb
out
jno
test
shl
push
mov
push
or
scas
std
adcl
mov
fistl
aad
pop
xchg
aad
adc
add
mov
fcoml
push
jl
shl
jl
pop
push
or
or
dec
lahf
enter
orb
scas
and
mov
or
fwait
pop
lcall
inc
das
cs
in
xchg
fnstenv
stc
orl
mov
ja
xor
xchg
push
in
add
out
mov
scas
fisubrl
fimull
dec
adc
pusha
fisubs
aam
adc
or
fmull
mov
mov
sbb
mov
cmp
xor
mov
adc
loop
hlt
enter
cwtl
std
hlt
vcvtss2sd
xchg
nop
inc
ret
or
mov
dec
je
mov
xchg
mov
push
sub
dec
mov
jg
inc
adc
push
mov
inc
push
pop
mov
movsl
mov
inc
test
push
subl
in
jae
repz
or
push
aad
mov
fimull
cs
xlat
pop
jae
test
push
inc
stc
push
rolb
repz
out
ret
cltd
mov
js
test
mov
mov
xor
push
xlat
cmp
in
sbb
xchg
fwait
test
cmp
insb
leave
cmp
daa
into
sbb
fimuls
in
imul
lahf
mov
add
adc
pushf
out
aad
push
and
mov
icebp
movsb
push
push
clc
sub
mov
push
std
insl
push
sub
mov
sbb
pop
and
push
sbb
jecxz
pop
dec
js
inc
les
inc
inc
daa
lahf
js
cli
adc
jl
sbb
mov
mov
sub
lds
cmc
mov
pusha
add
imul
rclb
push
mov
cmpsb
stos
int
daa
leave
ds
xchg
xchg
mov
icebp
lcall
cmp
mull
sub
in
les
scas
pusha
and
xor
push
imul
mov
stos
and
dec
mov
and
jne
fcomip
xchg
cli
and
in
or
das
bnd
cmp
je
data16
sub
