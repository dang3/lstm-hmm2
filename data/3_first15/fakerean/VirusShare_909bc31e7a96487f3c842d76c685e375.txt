sbb
add
mov
movsb
push
adc
movsl
loopne
fs
and
push
cld
mov
movsl
leave
sbb
sbb
inc
and
dec
addb
leave
inc
mov
loop
adc
jg
or
rcrb
mov
and
sbb
aad
jge
loopne
ss
popa
popf
pop
fistpl
xorb
xchg
xchg
bound
jne
fisubs
pop
adc
stc
cmp
push
popf
cmpsb
push
and
sbb
rcl
cld
add
jle
inc
mov
sbb
inc
or
cmpsl
sbb
xchg
mov
jo
and
or
push
out
dec
jp
cs
mov
movsb
pop
or
cmp
out
subb
add
mov
sub
leave
les
inc
and
sub
jmp
mov
cwtl
aas
push
cmp
insb
mov
xchg
inc
test
imull
xchg
jmp
xchg
pop
jp
div
or
jno
aam
dec
push
daa
mov
sub
mov
fs
pop
xchg
imul
stos
mov
jno
dec
push
mov
xchg
stos
pop
mov
imul
jmp
push
repnz
ret
mov
add
push
or
add
test
and
testl
mov
repnz
out
add
mov
stos
cli
inc
dec
cltd
mov
push
pop
xchg
sub
mov
rclb
test
ss
mov
xor
std
cmp
scas
cmp
in
push
loope
in
rclb
ds
sbb
xor
push
mov
popa
jno
sbb
push
ds
adc
shlb
and
inc
lods
cmpsl
dec
sbb
xchg
add
popa
mov
leave
fnsave
and
xor
int3
or
add
mov
xchg
and
insl
cmp
insl
and
adc
test
fidivrs
push
scas
mov
or
mov
mov
add
into
sahf
rcl
in
or
stos
sub
xor
daa
add
pop
adc
pop
fidivl
or
out
in
jg
push
fwait
dec
imul
cmp
imul
loopne
sbb
mov
or
mov
lods
mov
pop
push
jmp
inc
fisubl
lahf
out
insb
cmp
divb
add
mov
xchg
arpl
pop
aam
push
int
dec
lret
pushf
dec
cmpsl
or
adc
sbb
pusha
adc
aaa
iret
loope
imul
pushf
daa
enter
mov
jmp
cmpsb
xchg
cld
scas
adc
cmp
mov
leave
push
inc
addl
mov
xor
inc
add
push
push
sbb
test
clc
and
stos
repz
nop
lahf
stos
push
imul
roll
subb
ljmp
pop
test
cwtl
scas
cltd
and
cltd
das
test
push
jmp
cmp
dec
imul
or
inc
push
aad
mov
lahf
je
into
ret
pusha
je
fcmovne
and
and
push
sbb
rcr
das
mov
push
mov
inc
add
push
mov
lock
fwait
mov
mov
shl
push
sbb
mov
rcll
mov
dec
pop
in
lahf
mov
fisubl
rcll
mov
xor
fistps
ret
lock
lds
in
xchg
or
jns
xchg
imul
inc
pop
adc
sub
xor
push
out
xchg
sub
sub
scas
xchg
into
scas
or
xchg
or
es
cs
xor
push
lret
sub
daa
iret
js
inc
shlb
sub
xchg
je
mov
mov
in
push
dec
in
pop
dec
cmp
out
jbe
pop
jmp
lds
loop
out
xchg
das
dec
mov
stos
xchg
aad
bound
inc
rcpps
stc
out
repz
imul
mov
ficompl
cmpsb
sbb
cmp
add
fisubrs
cmp
mov
jl
fistpll
pop
sahf
loop
les
adc
in
prefetchnta
jle
or
mov
shlb
pop
test
rolb
push
imul
sbb
test
fcom
push
xorl
add
test
movsb
inc
mov
dec
out
mov
jmp
inc
lea
and
push
jg
and
jmp
mov
adc
dec
sbb
je
push
cld
inc
in
insl
xchg
push
xchg
stos
add
mov
push
loop
mov
fstps
mov
lea
sub
mov
leave
jae
add
lods
shl
xchg
mov
xor
add
imul
and
cwtl
leave
dec
push
sub
ljmp
cmc
jl
imul
test
push
dec
sub
outsb
jns
push
aas
popf
sbb
mov
shlb
je
fdivrs
xchg
stc
loopne
push
sub
sarb
ljmp
js
mov
push
mov
or
mov
dec
popf
ss
rorl
imul
adc
add
jl
cmc
adc
mov
cmc
inc
repz
repz
ja
xchg
mov
jmp
adc
gs
xchg
fdiv
cmpsb
aam
out
cmp
mov
mov
xor
add
and
cmc
jnp
movsb
ja
pop
pop
sub
in
das
data16
adc
cmpsl
mov
mov
loope
sbb
add
sub
lds
jno
sub
mov
jae
loope
flds
push
rorl
mov
mov
push
js
ss
mov
sbb
fisttpll
add
orb
jge
push
ret
js
mov
or
adc
push
cmpsl
cltd
clc
inc
and
sbb
sub
into
inc
or
fldt
aas
jo
shll
pop
adc
shrl
out
mov
pop
inc
rclb
mov
ja
dec
call
adc
pop
lcall
and
cmp
xchg
or
loope
lret
jge
icebp
out
lea
cs
ja,pt
cs
fmulp
fwait
xchg
xchg
fisttpl
push
add
in
lahf
rclb
lret
shrl
inc
fwait
sti
jns
lcall
loop
scas
sub
add
xchg
sahf
push
mov
xchg
ficomps
decb
dec
les
in
clc
inc
fwait
sub
aas
aaa
clc
dec
jnp
push
outsb
mov
int3
fs
xchg
popa
aad
xor
xor
sbb
mov
jbe
loopne
add
call
push
xor
lcall
gs
test
xchg
xor
mov
test
fisubrs
outsl
jo
adc
cmp
add
mov
iret
mov
test
inc
jp
jmp
enter
dec
sbb
or
adc
scas
repnz
iret
fstp
dec
cmpsb
sbb
xchg
sub
jne
dec
mov
sbb
sti
jecxz
aas
ret
cmpl
cld
push
mov
xchg
inc
dec
mov
or
outsl
pop
sbb
leave
mov
and
adc
addr16
in
outsl
loop
and
bound
rcl
pop
fs
mulps
int
je
push
sti
sub
and
adc
cmp
xchg
xchg
push
cmp
fs
lret
add
stos
xchg
and
pop
jns
fistl
cmp
inc
lods
add
mov
dec
in
test
and
fimuls
mov
pop
in
clc
xchg
out
roll
imul
xor
sub
mov
fnsave
cmp
jae
push
inc
mov
mov
inc
jno
out
icebp
loope
adc
adc
and
mov
pop
gs
int3
adc
push
repnz
cs
dec
or
jecxz
testb
pop
xor
jae
shlb
sbb
pop
mov
mov
adc
mov
pushf
loop
icebp
xor
push
push
dec
mov
daa
stc
int
mov
out
sub
pop
or
enter
mov
mov
mov
mov
inc
mov
int
or
ror
push
out
jge
dec
ja,pn
mov
dec
cmp
insb
adc
cmp
std
sbb
jb
jae
mov
jmp
cmp
cltd
push
das
cmp
lea
sub
int3
and
mov
adc
add
jmp
push
ljmp
dec
push
decb
fidivs
insb
mov
fcomi
sbb
pop
ret
test
dec
in
test
sub
movsb
jne
adc
stos
lods
mov
mov
push
pop
add
xchg
inc
mov
adc
test
dec
cmp
inc
pop
das
mov
nop
push
mov
addr16
sub
repnz
shr
adc
data16
sti
mov
jmp
mov
lea
push
js
pop
add
es
sti
push
adc
cld
repz
sbb
pop
mov
rcll
test
sub
inc
xor
dec
leave
sbb
mov
int3
xor
outsl
loope
add
or
inc
bound
scas
loopne
inc
push
pop
outsl
xlat
lahf
pop
push
mov
loopne
xor
cwtl
mov
add
ret
sbb
aas
insb
ret
fisubrl
loope
or
pop
jmp
enter
cmp
cltd
jecxz
jl
push
jg
in
adc
lods
scas
lds
dec
xchg
jle
pushf
cwtl
mulb
aam
in
sbb
imul
xchg
mov
mov
mov
sbb
fcoms
mov
inc
add
in
xor
into
mov
mov
stos
inc
adc
je
out
sub
ds
lcall
call
push
outsl
ljmp
add
loop
mov
mov
andb
lret
fisttpl
mov
call
pushl
cld
es
or
fnstsw
mov
and
jg
lods
mov
xor
jb
mov
orb
mov
or
fcomps
pop
out
imul
dec
ja
pop
xchg
xchg
mov
lahf
mov
stos
nop
xor
push
out
push
decb
and
ret
pop
aaa
jecxz
add
aam
enter
xor
xor
sbb
addr16
jbe
sti
lahf
xor
jno
sbb
dec
dec
mov
jg
dec
icebp
push
adc
rcl
mov
leave
test
aas
fucomip
cmp
mov
push
ror
out
add
iret
xor
xchg
int3
insl
dec
mov
rclb
stc
sub
fincstp
sub
shll
lods
xchg
int
or
adc
pop
sub
gs
ret
pop
jmp
and
inc
add
imul
mov
sub
dec
push
xor
push
std
or
jle
cmp
xor
sub
rorl
testb
sar
jne
mov
lahf
xor
les
mov
clc
cmp
xchg
test
mov
xchg
sbb
push
push
mov
mov
cmc
mov
sbb
dec
sbb
ret
mov
mov
sti
lret
xlat
lods
jno
and
lret
adc
push
inc
incl
mov
fbld
and
add
popa
mov
mov
mov
adc
hlt
adc
inc
mov
or
gs
stos
movsl
lock
adc
stos
fwait
xor
sub
mov
cld
outsb
std
movsb
in
repnz
xor
add
push
inc
jne
cmpb
test
push
lret
andb
out
cltd
cmp
pop
and
testl
filds
stos
xchg
and
cli
rcr
insl
lret
rcr
pop
or
mov
addr16
dec
dec
aas
jbe
and
inc
jge
imulb
pop
sbb
cmc
mov
lods
ljmp
lcall
xor
xlat
daa
dec
dec
adc
xchg
inc
movsb
arpl
idivb
ja
mov
jecxz
sub
rclb
arpl
sahf
pop
idivb
sbb
es
push
fcomps
call
mov
pop
jmp
or
dec
push
arpl
jbe
addr16
and
xor
sub
xchg
cltd
rclb
pop
ja
inc
pop
push
lea
clc
xchg
jae
out
pop
push
mov
sbb
je
nop
dec
out
out
inc
sti
and
adc
and
mov
fisubs
xchg
cmp
rolb
mov
jmp
das
and
je
int3
jle
sbbl
push
mov
int3
and
mov
sbb
inc
pop
fsub
stos
fwait
or
sahf
ja
ret
xchg
push
jmp
push
jns
cmpsb
ds
inc
sub
pop
sti
lea
mov
jle
mov
jb
cmp
repz
daa
popf
push
sub
popa
inc
mov
lea
mov
dec
jmp
cltd
imull
les
icebp
icebp
icebp
lahf
or
aad
stos
adc
xchg
shll
scas
icebp
dec
inc
clc
fucomip
add
testl
mov
or
cmp
jns
shll
cltd
lods
daa
orb
mov
mov
or
sarb
frstor
popf
pop
cmp
sbb
xchg
or
outsb
inc
mov
dec
jns
xor
cltd
mov
popf
out
test
mov
lret
add
cmp
mov
and
movsb
mov
and
insl
aas
clc
inc
cmc
mov
push
xchg
shr
dec
sarb
sub
out
dec
loope
rclb
addr16
jge
fwait
pop
mov
dec
xchg
inc
or
int
xor
out
enter
mov
cs
dec
jmp
push
jle
ficompl
fs
sahf
in
xor
pop
jo
fbstp
rol
cmp
or
test
mov
xlat
cmp
loopne
dec
mov
push
sahf
xchg
mov
loope
pop
rorb
jecxz,pn
lods
hlt
loop
or
and
adcl
inc
pop
loopne
dec
xchg
push
enter
adc
push
cli
leave
dec
ret
and
inc
or
inc
mov
mov
es
jbe
cmp
mov
jbe
loop,pn
insb
fwait
pop
fistpl
sub
mov
xor
pushl
in
rclb
sti
jno
xchg
push
ljmp
inc
icebp
jns
orb
push
test
xlat
jl
or
dec
leave
adc
jb
sbb
test
arpl
inc
and
inc
pop
icebp
mov
imul
rcrb
mov
clc
add
fisttpll
std
pop
mov
lock
clc
in
aad
and
push
icebp
mov
scas
idiv
cmp
pop
add
sti
out
into
push
arpl
popf
and
ret
jnp
loopne
or
push
lret
pop
lods
adc
pop
xchg
ds
push
cmpl
imul
rorb
push
mov
data16
int
adc
xor
dec
jp
xchg
jg
in
int3
mov
sarb
lret
repnz
stc
and
mov
das
mov
into
aam
sub
push
dec
sub
fcomps
sub
aaa
iret
fdivr
stos
into
sub
jo
sti
ds
push
inc
add
loope
dec
adc
sub
out
test
sbb
or
mov
lahf
loope
inc
or
imul
outsl
fcmovu
push
mov
mov
push
push
ljmp
hlt
rol
jne
mov
push
dec
or
mov
and
jb
and
jnp
clc
test
sub
stos
imul
jns
stos
das
inc
rcrl
add
popf
mov
dec
cmp
mov
and
pop
ljmp
or
ret
ret
mov
cmp
jns
sarb
pop
nop
ret
lods
std
add
rorl
sbb
data16
imul
shrb
push
xchg
mov
and
out
enter
and
mov
cwtl
mov
pop
lock
fsubrl
xchg
sub
inc
dec
loope
lea
out
test
subps
xchg
int
push
call
dec
fwait
test
jns
inc
daa
incb
fisttpl
or
sub
push
aas
test
mov
into
push
js
out
sub
fwait
inc
popf
loopne
outsl
dec
adc
testl
jle
inc
fmuls
fs
fisubs
adc
scas
mov
xorb
aas
xchg
dec
or
sti
cmp
cmovo
test
std
xchg
cmp
leave
sub
movsb
fmuls
cmp
daa
pop
lahf
in
or
push
or
or
mov
or
jecxz
push
jbe
push
int
shlb
cmpsb
jno
ficoml
sub
mov
aas
cmp
movsb
lea
mov
lea
lods
and
dec
stos
pop
mov
sbb
mov
aad
int
imul
xchg
stos
or
adc
decl
xchg
scas
loope
aad
pop
and
in
rorl
popf
cmpsl
call
aad
lahf
xchg
adc
and
pushl
adc
mov
mov
jl
aam
fildl
repnz
xchg
and
pop
inc
cmp
scas
int
mov
mov
xor
jecxz
pop
cwtl
pop
mov
pusha
inc
scas
xchg
mov
clc
inc
call
or
jmp
or
loope
frstor
inc
aaa
testl
aad
pop
stc
mov
icebp
out
jp
mov
pop
mov
inc
faddl
popa
adc
mov
push
aas
lret
sbb
xchg
pop
or
shl
dec
cltd
cmp
popf
je
ds
pop
mov
cmp
adc
pop
and
lahf
jmp
mov
jge
jg
mov
push
clc
mov
out
mov
cli
lret
jecxz
gs
loop
xchg
mov
fcmovne
push
push
pushf
stos
imul
mov
fnstcw
into
cmp
push
cs
arpl
push
mov
stos
dec
loopne
add
cli
js
bound
and
dec
adc
xor
nop
ret
add
js
push
das
pop
lcall
scas
mov
or
loop
movsl
jnp
sub
outsb
jp
adc
sub
rclb
dec
inc
cmp
push
scas
jb
inc
xchg
lea
or
imulb
test
xchg
xor
adc
js
cld
mov
test
mov
xchg
xor
mov
adc
pop
fnsave
sub
mov
in
int
mov
or
frstor
std
ja
aam
pop
xor
out
mov
std
or
stos
sub
xchg
test
xor
adc
inc
jp
test
pop
jp
lods
mov
adc
andb
fcmovbe
jae
xchg
nop
stos
jo
gs
test
pop
xchg
outsb
mov
xor
jns
mov
cmp
sti
dec
push
cmpsb
push
xor
pop
pop
sbb
ficoml
das
mov
and
xor
sbb
adc
and
in
aaa
stos
or
xorb
xor
push
std
movl
ret
or
push
sahf
or
sti
push
pop
xlat
fidivs
and
fistpll
stc
cli
jmp
sahf
mov
xor
xor
in
loop
sbb
mov
scas
or
add
jbe
push
sbb
data16
or
filds
or
push
addb
ds
sbb
cs
push
and
xor
jecxz
aaa
xchg
lock
lret
je
dec
dec
pop
sub
mov
mov
leave
mov
mov
insl
xchg
pusha
gs
pop
iret
imul
cmp
inc
mov
fsubrs
sub
mov
pop
lcall
cmpsb
ss
sub
mov
dec
push
arpl
sbb
ja
adc
and
cmp
sub
addr16
mov
xchg
mov
fwait
pusha
push
add
in
loop
inc
push
dec
data16
dec
jae
ret
sbb
leave
cltd
dec
fistpl
daa
cli
mov
or
push
push
mov
mov
movsb
adc
and
ret
mov
sarl
leave
mov
stos
pop
cmp
out
fidivl
and
or
scas
cwtl
je
add
ss
cs
xor
mov
rorb
fsts
test
mov
add
mov
out
lret
cltd
sub
mov
add
pop
imul
rcrw
adc
adc
insb
inc
adc
jnp
cmc
inc
test
xor
rorb
daa
shlb
loope
jae
lahf
push
jae
std
call
pop
jnp
sub
daa
mov
pop
pop
cmpsl
addb
int3
pop
sub
jle
xchg
inc
inc
imul
cmp
setnp
sbb
and
or
or
insl
loop
push
xor
movups
int3
mov
loope
stc
cmp
mov
and
mov
sub
lahf
inc
pop
andl
cmc
je
sub
aam
and
adc
movsb
lahf
sbb
nop
daa
pop
jno
pop
js
inc
dec
push
add
mov
mul
inc
pushf
dec
cmpsb
push
jp
jl
mov
xchg
in
lds
sahf
mov
inc
dec
addl
lods
test
mov
andl
dec
ja
fdivrs
sub
jmp
loop
out
cmp
xchg
cmp
repz
insb
sbb
insb
add
inc
js
fucomp
loop
adc
sub
int
jge
dec
pop
repnz
mov
xchg
ljmp
gs
movsl
cmp
sub
arpl
dec
mov
imul
adc
mov
or
clc
or
mov
idivl
stos
rolb
sar
xchg
mov
mov
add
sbb
mov
out
sbb
rcl
stos
dec
loope
push
add
imul
aad
test
fistpll
sbb
clc
jnp
outsl
jmp
push
out
add
jmp
add
das
mov
scas
mov
and
mov
mov
popf
sbb
sahf
xchg
push
jb
adc
xor
mov
mov
pusha
out
lcall
orl
mov
sbb
fs
push
lods
xor
add
mov
or
pop
orb
xchg
flds
fs
jns
ja
aaa
xchg
pop
pop
lahf
out
pop
mov
adc
sub
jae
in
nop
inc
cmp
andb
mov
call
mov
inc
push
push
out
sub
cmpsb
into
aad
jmp
call
add
or
orl
mov
or
loopne
iret
sub
xor
daa
movsl
mov
sarl
lahf
movb
push
gs
popa
jp
mov
pusha
jns
mov
jl
punpcklwd
cmpsb
mov
pop
gs
in
test
jle
ret
stc
mov
cmp
rcll
or
adc
xchg
mov
dec
leave
mov
push
and
cld
push
adcb
pop
pop
dec
add
adc
insl
or
pop
lods
das
xchg
mov
or
sbb
lock
lahf
pushf
mov
int3
in
push
fdivr
sarb
movsl
dec
jo
jnp
scas
cmp
mov
dec
mov
dec
ret
je
and
dec
mov
mov
enter
out
sti
jecxz
ss
notb
sbb
mov
xchg
daa
mov
adc
xchg
push
or
mov
mov
sub
pop
xchg
jp
mov
lret
push
roll
pop
insb
clc
add
push
xchg
add
mov
pop
add
addl
xchg
fs
add
hlt
push
popf
loop
dec
xor
hlt
paddw
int
jno
stos
scas
jmp
jmp
mov
pop
adc
and
adc
lock
adc
in
push
pop
add
into
and
xchg
lea
sti
add
dec
mov
testl
outsb
jp
push
jl
inc
hlt
jb
inc
and
mov
dec
in
dec
jg
sarl
xchg
lret
and
aad
shll
stos
dec
sbb
push
jo
in
mov
sub
xchg
fldcw
cmp
ret
nop
out
arpl
sbb
mov
pop
ja
lret
sbb
out
sbbb
adc
daa
and
gs
mov
sahf
dec
and
mov
pop
mov
jo
cltd
or
insb
and
call
fistpl
pop
enter
lahf
nop
sbb
mov
outsb
push
jp
movsb
lcall
js
insl
lcall
loopne
pop
shll
or
imul
out
cmp
mov
dec
out
cmp
sbb
pop
and
xchg
scas
mov
jno
sub
fcoml
jle
jnp
dec
sub
jle
push
jmp
or
enter
mov
xchg
and
loope
add
ficoms
push
cld
push
popf
cli
mov
ss
pushf
xlat
pop
data16
jmp
scas
cli
jae
sbb
xchg
repz
movl
js
fisubl
int3
mov
mov
insb
aam
dec
xchg
xchg
repnz
dec
jbe
stos
cmp
cltd
jnp
leave
or
data16
add
xor
lods
scas
mov
dec
fildll
sub
rcrb
jbe
mov
in
and
insl
xchg
lret
inc
jbe
cmpsl
mov
lods
xchg
sub
cs
dec
dec
mov
bound
pop
dec
rorb
jbe
hlt
cld
inc
iret
mov
call
sbb
and
xor
mov
sub
xchg
dec
lds
jle
inc
in
push
dec
cwtl
and
push
scas
xor
int3
xchg
leave
in
out
pushf
cmp
cwtl
xchg
loope
add
jmp
shll
pushf
int
inc
js
push
sti
sahf
inc
stc
fdivl
negb
cwtl
lret
xlat
repnz
inc
aaa
xor
loopne
or
aas
leave
je
and
into
pushf
ret
rorl
jbe
ljmp
shlb
hlt
pop
int
inc
jo
adc
mov
dec
addr16
into
jne
inc
rcrl
add
divl
clc
push
cmc
push
movsl
in
mov
push
push
aam
popa
mov
mov
pop
in
test
es
sbb
add
mov
pop
test
cmp
test
lret
clc
mov
je
cmp
add
mov
lret
sbb
testb
mov
push
inc
add
cld
mov
sub
xchg
lods
and
out
jne
mov
lods
adc
sub
or
push
pop
xchg
sub
ret
gs
xor
jns
in
push
sub
orb
xchg
mov
sbb
lret
adc
xchg
pop
jg
mov
adc
jmp
add
cwtl
pop
jl
xchg
daa
push
loop
arpl
sti
arpl
add
mov
ljmp
lea
imul
pop
in
seto
jae
loopne
and
mov
and
or
call
push
push
loope
sahf
scas
ffree
sahf
mov
aas
test
inc
in
mov
or
xchg
push
xchg
adc
push
movsl
adc
js
push
dec
test
push
mov
sub
xor
cld
jl
sub
nop
cmpsb
insl
sub
andl
pop
stos
insl
lods
add
fldenv
sbb
out
stos
dec
rorb
jne
or
xchg
jp
in
rcl
int3
lods
movsb
in
push
mov
rcrb
outsb
scas
in
xchg
test
outsl
jmp
adc
cld
popf
sub
jg
rol
sbb
dec
das
sub
orb
xchg
outsl
add
cmp
int
aaa
push
jge
sbb
jecxz
sub
add
dec
in
sbb
sbb
mov
hlt
call
dec
out
pop
sub
inc
sbb
pop
out
mov
daa
ljmp
out
mov
in
fsubl
rcrl
lods
leave
imul
stc
push
in
xor
or
add
mov
add
lcall
xchg
cmpsb
in
sbb
jo
int
nop
jle
fstpt
jp
lea
xor
xlat
lods
imul
cmp
iret
cwtl
sbb
je
into
sbb
xchg
push
xchg
fs
ds
pop
aaa
push
lret
divb
icebp
jmp
mov
sub
dec
stos
dec
mov
pop
cmp
insl
fs
jl
pop
cmp
lds
adc
outsb
sbb
sbb
out
call
mov
outsl
fdivrs
aad
insl
or
in
lcall
popa
loop
mov
movsb
xchg
jl
pop
test
mov
jecxz
jbe
leave
cmp
add
pushf
mov
xor
pop
int3
pop
sub
jl
fnstsw
leave
xchg
out
pop
shll
leave
jns
inc
add
mov
call
sub
loop
popa
cli
push
jge
lret
pop
mov
mov
fcompl
repnz
lret
xor
jae
lds
push
repnz
scas
ss
lcall
and
xchg
lahf
push
ds
add
and
int3
in
scas
push
enter
cmc
mov
dec
test
js
pushf
pop
test
mov
xchg
jp
push
aas
movsl
push
imul
dec
add
in
dec
pop
push
sbb
mov
out
pop
sahf
ss
cmpsb
mov
cmpsl
push
mov
adc
dec
add
cmc
cli
cmc
jle
fisubl
xchg
fnstenv
push
sub
jo
mov
or
xchg
test
dec
xor
popf
dec
jne
mov
aas
mov
cmp
jns
mov
fidivrl
scas
jno
inc
or
int3
movsb
mov
push
add
add
ret
mov
call
mov
add
xchg
push
or
jno
lahf
std
sub
push
lds
push
jg
and
lret
cli
in
stos
stos
jb
mov
mov
add
pop
inc
dec
inc
mov
movsl
mov
mov
ja
push
dec
rcl
dec
jl
mov
vdivsd
xchg
mov
into
scas
scas
mov
dec
cmp
clc
cwtl
jns
adc
faddl
pop
addw
inc
lods
or
jnp
adc
jmp
sub
hlt
lock
outsb
xor
movsl
dec
test
inc
xor
cld
jecxz
ljmp
or
sbb
enter
sub
inc
sub
add
fs
xchg
mov
adc
and
pop
sub
cmpsl
aam
push
icebp
fdivrl
mov
adc
xchg
fimull
test
das
cmpsl
movb
stos
push
sbb
lret
push
cmpl
es
adc
adc
fdivrs
inc
out
leave
mov
test
pop
lea
shrl
movb
sub
insb
adc
imul
icebp
popa
loop
je
leave
nop
pop
popf
lret
leave
in
xchg
push
jg
lret
push
rorl
mov
aas
movsb
mov
in
mov
cmp
leave
jbe
push
mov
std
icebp
mov
dec
xchg
dec
push
mov
mov
sub
lret
adc
andl
out
or
fs
das
sbb
and
lods
lret
repnz
push
sub
shrl
int3
mov
cli
fucomp
xchg
pop
adc
daa
adc
dec
lds
and
loope
mov
into
hlt
imul
call
jb
fidivrl
lahf
mov
jmp
jp
xchg
sbb
test
mov
in
gs
add
std
cli
add
test
insl
arpl
or
shlb
popa
insl
jmp
adc
jmp
mov
pop
nop
inc
ficompl
inc
int
scas
in
mov
imul
insl
jne
ljmp
and
in
mov
mov
movsl
mov
mov
mov
in
push
movsb
notb
pop
jno
lods
aaa
imul
mov
sub
push
mov
sub
xor
lods
cmp
cmp
data16
lds
sub
mov
ficomps
std
push
add
xor
sub
jnp
and
sub
adc
js
sub
aam
lret
aaa
insb
aaa
push
jmp
les
add
lahf
adc
lock
fsts
loope
int
cmp
and
lahf
jp
ror
mov
jae
popf
xor
mov
ffree
cmp
idivb
popa
push
add
scas
xchg
xor
arpl
mov
clc
cmpb
jmp
cmp
xor
xchg
mov
aas
mov
rcrb
aaa
jmp
fs
lret
adc
iret
mov
sbb
daa
test
add
or
stos
imul
push
dec
ljmp
pop
call
stos
push
jno
xchg
inc
jns
adc
mov
das
sbb
xchg
shll
shr
lods
mov
cmp
push
mov
push
cmp
xor
mov
mov
or
imul
mov
xchg
fimuls
enter
imull
es
inc
cltd
call
test
sbbb
cmp
mov
popa
scas
test
mov
arpl
xor
stos
push
jmp
pop
mov
and
push
repnz
aaa
insb
pop
outsl
jb
xor
out
and
pop
or
sub
adc
or
movsl
in
outsb
jle
orb
shrl
push
sahf
cltd
test
in
int
ds
ja
sub
hlt
into
inc
icebp
or
sar
cmc
fcom
shrl
cmpb
fimull
popf
sub
gs
clc
or
add
lret
dec
fsubl
mov
jns
icebp
mov
mov
inc
pop
xchg
nop
daa
push
cmpsl
imul
xchg
cmp
sbb
push
imul
stc
mov
into
xchg
andl
mov
inc
cmp
pop
sbb
ss
rcr
nop
mov
jge
dec
dec
ja
cmpsl
jecxz
rol
pop
ja
push
fcmovb
das
bound
xchg
push
inc
inc
pop
test
adc
popa
lret
xchg
nop
sbb
jle
addr16
aas
into
xchg
roll
jle
rcrl
mov
jecxz
dec
xchg
fstpl
dec
fistl
and
mov
mov
or
mov
outsb
fwait
fwait
gs
jecxz
mov
ljmp
das
jg
pop
movsb
xchg
popf
cmc
cmp
inc
push
test
and
fnstcw
adc
ret
adc
int
fnstsw
mov
xchg
pushf
popf
adc
aam
movsb
inc
test
fisttpll
mov
mov
lea
jb
lret
arpl
mov
xchg
push
iret
jge
insl
lock
jne
dec
push
lahf
and
sbb
push
jge
fdivrl
xchg
cmp
dec
cmpsb
loope
lcall
hlt
aam
cmpsl
out
mov
popf
jno
cmp
xor
test
lds
mov
rcrb
jb
cmp
outsl
mov
bnd
cs
lock
jno
imul
test
dec
xorw
shlb
xchg
inc
and
arpl
pop
pop
xchg
cmp
cmp
orl
pop
or
std
xor
and
jmp
mov
dec
lea
test
mov
sbb
and
add
cmp
clc
mov
pop
fs
xor
jge
mov
cmc
sub
outsl
into
ficoms
or
test
fwait
lahf
lcall
lock
and
or
sub
fnsave
shl
or
jns
mov
ret
mov
xchg
dec
dec
xor
stc
scas
mov
mov
pop
popa
in
mov
mov
jns
ss
adc
cmc
sbb
ss
jb
xchg
cmc
sub
inc
adc
popa
movsb
mov
xor
in
cli
dec
mov
outsb
scas
insl
adc
aam
or
pop
sbb
xor
adc
shll
add
ljmp
mov
push
test
lock
mov
mov
and
jp
add
jge
or
jne
sub
outsb
xlat
push
dec
cmp
inc
dec
mov
aas
mov
sahf
xchg
dec
adc
loopne
mov
scas
test
cmp
dec
aaa
js
enter
imul
out
mov
pop
push
xor
enter
mov
loopne
push
xchg
cli
insl
fwait
outsl
mov
jne
dec
icebp
arpl
push
push
and
push
pop
mov
cmp
pop
jmp
test
aad
sbb
xor
mov
sbbb
cmp
and
cs
iret
push
pushf
rclb
lods
sbb
pop
xchg
pop
aam
divb
outsl
push
add
lea
add
mov
and
adc
iret
lcall
push
fs
xchg
lret
test
xlat
jmp
clc
insb
fcomps
jge
loope
lods
das
cmp
data16
outsl
and
sub
jmp
push
cmpsb
push
aam
mov
call
repnz
dec
jmp
int
imul
cld
add
dec
sub
push
in
out
sub
sarb
dec
repz
insb
sar
xchg
aam
shll
mov
stc
and
leave
push
cmp
sub
sahf
gs
cmpsl
loopne
aas
dec
cmp
call
lcall
sbb
jge
sub
or
arpl
in
mov
adc
jae
xor
addr16
lcall
dec
xor
call
sbb
sbbl
lods
push
fidivl
cmpsl
fbstp
mov
mov
lcall
mov
and
inc
aam
pop
cltd
mov
adc
lret
jle
iret
sub
xor
mov
loop
xchg
or
adc
push
inc
hlt
ficoms
pop
inc
dec
adc
mov
je
cwtl
cwtl
pop
fxch
clc
sub
jle
iret
add
mov
jle
orb
push
cmpsl
insb
mov
lret
js
insl
repnz
pop
scas
divb
adc
bound
mov
jp
out
loop
rcrb
icebp
push
cmp
adc
jecxz
push
sbb
dec
ds
jl
out
pop
outsb
test
andl
dec
mov
sbb
push
and
mov
or
dec
das
aas
or
jle
movsb
stc
iret
xor
sbb
sbb
inc
out
mov
sub
pushf
adc
fwait
mov
push
xor
insb
out
and
popf
fsts
and
mov
sub
fidivrs
adc
jns
add
jo
test
xor
or
ret
or
dec
lods
adc
aaa
pop
cld
jp
mov
fsubrp
into
mov
arpl
loopne
mov
xchg
in
cmp
popa
in
add
inc
push
leave
sbb
insb
add
pop
movsl
xchg
push
cltd
pop
jge
sbb
out
inc
popl
lcall
sbb
xor
mov
rcrl
or
in
call
mov
sub
add
pop
ja
pushf
mov
mov
and
jo
daa
inc
fiadds
imul
sbb
adc
jmp
insl
out
push
sti
data16
and
sub
int
jle
aam
call
cmpsl
stos
cmpsl
insl
leave
nop
stos
and
pop
mov
repnz
add
insl
sbb
ret
scas
mov
ljmp
pop
fisttpl
pop
push
pop
push
xchg
test
add
dec
aas
mov
or
ficoml
imul
push
jmp
cli
and
dec
add
mov
popa
jecxz
in
mov
out
aad
mov
iret
cmpsl
xchg
or
mov
test
iret
pop
push
jle
lods
jnp
jno
fmulp
int3
cmp
dec
insb
outsb
arpl
xchg
int3
ret
inc
leave
mov
jno
imul
sbb
insb
cmpsl
mov
lahf
fdivrs
mov
mov
xlat
push
std
outsb
test
inc
pop
sub
sti
leave
cmovg
inc
xchg
test
xchg
dec
insb
minps
push
pop
cmp
cmp
std
jbe
mov
mov
lret
sub
add
cmovo
rcrb
fstl
mov
rcll
jmp
xor
jo
bound
mov
bnd
jae
arpl
in
and
or
dec
pop
inc
pop
decb
adc
out
xlat
jbe
les
movsl
jmp
testl
push
xor
and
lret
push
cs
test
or
mov
not
inc
jge
ja
push
mov
push
shll
loopne
dec
xor
or
jmp
jbe
cmp
cmp
mov
and
sbb
in
cmp
out
mov
nop
xor
sbb
scas
fisubs
push
movsl
mov
lods
jge
xchg
push
jl
andb
cmp
and
xor
adc
mov
inc
mov
xorl
es
lea
mov
mov
or
jl
mov
in
cmp
sub
fisubl
nop
sbbl
js
jae
jl
xchg
out
scas
int
push
das
xchg
mov
cmp
cmp
jge
adc
dec
lret
sarb
in
popf
xor
or
pop
daa
testb
xchg
mov
push
test
jae
mov
and
sub
lods
inc
test
sbb
mov
pop
or
insb
jge
jne
add
gs
adc
or
pop
mov
hlt
and
mov
pusha
shrl
pop
ror
push
lods
mov
nop
pop
mov
push
inc
fmulp
adc
movd
scas
add
cmpb
das
pop
or
inc
jge
nop
mov
cli
clc
imul
test
mov
xorl
push
add
or
mov
lea
or
cltd
xchg
cwtl
test
mov
gs
test
das
cmp
lahf
ffreep
aad
mov
mov
test
cmp
push
int3
sbbb
test
sub
mov
rolb
inc
mov
mov
daa
mov
jg
popa
repz
xchg
fsubrl
js
imul
lahf
imull
adc
mov
mov
pop
int
xor
in
jl
in
insb
jge
push
in
pop
jb
sub
call
js
ss
adc
cmc
jb
rcll
adc
sub
jno
and
lret
stos
mov
jmp
ljmp
mov
dec
aas
add
adc
mov
aam
daa
test
cli
pushf
test
mov
sbb
add
add
mov
xor
sub
aad
ds
sbb
inc
mov
push
or
repz
icebp
xlat
adc
cmpsb
lahf
mov
arpl
pop
fimuls
fwait
clc
out
loopne
stos
orl
cltd
cmp
jo
jae
lret
in
ficoml
clc
mov
inc
fists
or
add
xor
mov
dec
insl
inc
aad
andb
sub
test
imul
scas
arpl
aad
sub
mov
ficoml
jb
push
mov
sub
xchg
push
sub
sbb
xor
add
insb
jecxz
sbb
jne
fisubrl
int3
ss
inc
sbb
pop
call
out
popf
clc
std
mov
jo
dec
test
sbb
repnz
or
fidivrl
int3
data16
aam
icebp
mov
aas
mov
testb
inc
mov
lcall
add
inc
or
out
adc
xor
sahf
jle
push
sbb
test
or
mov
jp
push
mov
loope
inc
adc
fucomip
inc
push
or
push
mov
or
xor
mov
push
aam
mov
mov
inc
ss
xchg
sbb
inc
cmp
ds
cltd
mov
rcrb
pop
or
lods
cli
lock
jbe
subb
xchg
lea
fdivrl
dec
cli
scas
xor
call
mov
sub
aam
aad
outsb
mov
lds
sti
fists
xchg
jno
mov
or
and
sbb
push
and
cmp
mov
and
mov
leave
sub
movsl
xchg
lock
xchg
iret
lods
mov
sarb
popa
addb
shll
outsl
je
fistpl
dec
mov
xchg
es
popf
mov
or
push
jbe
pop
mov
jmp
dec
xchg
insb
pop
cmp
icebp
out
out
scas
jmp
test
adc
xchg
popf
ss
insb
aad
sub
and
jg
xor
call
cli
xchg
sub
mov
push
cmpsl
lret
rcll
xchg
sub
pop
lcall
xchg
cltd
xlat
xor
xchg
push
mov
and
and
loope
shr
out
mov
andb
jmp
aas
fadd
push
out
mov
xchg
xchg
jbe
jnp
cmp
xor
xor
out
mov
push
outsl
sbb
cs
out
dec
xor
sti
pop
mov
cli
mov
repnz
add
push
xchg
push
inc
xchg
jb
sub
pop
pusha
inc
adc
cwtl
pop
pop
push
or
arpl
rcl
push
ljmp
mov
add
negl
mov
movsb
cld
hlt
lea
jno
iret
loopne
push
inc
pop
jl
sub
rcrl
xor
repnz
mov
xchg
pushf
add
dec
sti
mov
mov
test
scas
cwtl
icebp
push
xlat
imul
dec
lcall
je
repnz
ja
jge
cmp
cmp
lahf
cmp
mov
das
rol
test
pop
adc
iret
stc
cmp
mov
ss
int
in
aas
cmp
adc
cmp
movsb
jns
out
cwtl
aad
int
sub
ljmp
lods
or
jo
pop
hlt
push
stc
stc
popf
loope
push
push
fsubs
jge
ror
fdivs
xchg
adc
push
xor
push
inc
movsl
xor
inc
repz
mov
movsb
loop
mov
lods
pop
jae
inc
push
push
das
jl
jo
xchg
lcall
negb
dec
lahf
or
pushf
dec
imul
jae
jb
push
xchg
jae
xor
pop
out
fs
ret
insl
cmp
jp
inc
shl
sbb
cli
loop
outsb
jbe
mov
jmp
rol
cmp
into
dec
sub
call
gs
adc
fcmovnbe
subl
cwtl
inc
jmp
loop
cwtl
xor
mov
jns
fdivrl
mov
ds
mov
push
fnstsw
dec
nop
jle
jnp
push
push
fs
xchg
adc
or
test
icebp
pop
fsts
pop
push
push
mov
out
ret
push
push
xor
or
les
je
bound
pop
lock
inc
inc
sbb
mov
leave
inc
fisubl
jae
mov
mov
imul
into
jg
push
les
mov
cmp
leave
pushf
push
mov
cld
pop
xchg
xchg
je
and
mov
push
imul
mov
stos
mov
jge
pop
stc
stos
test
stos
repnz
xchg
dec
xchg
aam
push
hlt
pop
adc
xchg
cli
in
cmp
out
pushf
insl
sub
int
cmpsl
push
jb
or
push
push
mov
ljmp
xchg
mov
clc
push
outsb
enter
mov
pushf
stos
cmp
ficomps
aaa
push
push
ret
sub
mov
insb
decl
mov
jge
fldenv
in
push
cmc
sub
das
mov
out
fiaddl
xorb
scas
mov
aaa
mov
cltd
and
inc
cmp
jl
fldl
out
stc
sub
add
pop
outsl
out
jns
adc
push
mov
data16
iret
imul
jae
jl
leave
mov
inc
dec
lods
out
fcoms
lret
mov
cmp
xor
test
pop
and
shrl
xor
das
in
pop
in
sahf
aad
xor
pop
fistpll
hlt
call
push
enter
inc
emms
cwtl
inc
ljmp
jle
adc
add
pop
sbb
mov
lods
fxch
xor
pop
xor
in
ucomiss
mov
push
pop
sbb
adc
push
out
dec
repz
gs
jmp
push
int3
imulb
pop
into
xchg
out
ret
arpl
leave
addr16
orl
or
push
pop
scas
sub
cmp
cli
cmp
dec
test
outsl
sti
xchg
dec
xor
out
and
push
bound
icebp
les
sbb
mov
inc
test
or
jns
jl
xchg
shlb
xchg
int3
repz
inc
mov
cmp
jp
mov
add
and
fiadds
fisubs
mov
xchg
xchg
xchg
adc
movsb
mov
sub
mov
cmp
insl
dec
test
push
mov
ss
cmp
mov
test
mov
pop
push
mov
mov
out
rorl
call
or
dec
ret
in
loopne
lea
fs
mul
add
mov
das
ret
xchg
jecxz
mov
stos
fadd
jecxz
lcall
mov
popf
adc
in
xchg
movsb
cmc
lret
movsb
add
stos
rol
or
cmpsb
mov
lret
add
sbbl
inc
notb
lahf
enter
stos
icebp
shr
gs
iret
insb
dec
out
and
pop
and
push
lahf
sbb
aaa
and
mov
push
pop
mov
testl
pusha
ret
pop
das
addl
inc
inc
mov
mov
fwait
mov
jne
push
loope
movsb
and
cmp
es
xor
mov
mov
and
push
xchg
mov
call
repz
xor
call
jp
insl
mov
inc
fs
mov
mov
int3
push
sahf
cmp
dec
movsb
sbb
icebp
xchg
xor
pop
inc
aam
inc
ljmp
iret
shll
es
repz
mov
aaa
xor
and
pop
js
js
push
fidivrs
inc
dec
pop
testb
jae
lcall
sbb
mov
cmp
mov
jecxz
in
xchg
xor
rcll
or
adc
mov
scas
push
hlt
mov
pop
addr16
jp
iret
imul
jo
stos
ljmp
xchg
faddl
outsl
mov
ja
inc
faddl
dec
push
dec
adc
xchg
adc
mov
sub
push
lahf
sbb
es
push
jge,pn
popf
les
push
bound
int3
sub
lcall
sub
ljmp
or
cmp
cmp
or
pop
inc
inc
inc
cld
rcll
lret
sbb
xor
iret
repnz
fnstcw
cmp
sbb
pushf
mov
mov
pop
shr
add
cmp
or
repz
lret
sub
out
push
sti
sti
inc
sti
jl
jns
xchg
movsl
jae
jbe
fnstcw
push
sub
int3
sub
sub
adc
add
cltd
out
lret
add
sbb
xchg
sahf
out
sub
inc
fstpl
mov
sbb
jo
cmp
pop
add
test
cmpb
out
mov
sbb
xor
aam
lcall
sti
adc
out
dec
sbb
jmp
insb
in
xlat
pop
xor
popf
mov
fsubrl
or
pop
fistl
ss
fstps
mov
popf
outsl
notl
add
push
jg
lods
cli
gs
mov
stc
and
fcmove
js
mull
imul
nop
stc
pop
push
add
pop
pop
bound
sar
loope
adcl
sahf
int3
and
pop
lock
xor
mov
imul
mov
int
call
ret
lret
pop
mull
push
mov
rorl
sarl
fisttpl
ljmp
pop
push
push
in
push
dec
sbb
push
scas
cmpsb
mov
xchg
cmpxchg
xor
jno
clc
inc
test
sbb
cs
sub
imul
or
push
mov
repz
cld
pop
adc
lahf
adcb
es
inc
sbb
mov
dec
or
xchg
push
sbb
loopne
mov
cli
lods
push
and
add
in
shlb
arpl
icebp
add
in
jg
push
push
ljmp
add
mov
lret
addr16
fiaddl
jae
lahf
inc
out
mov
lods
jmp
jnp
orl
fisttps
push
adc
or
out
pop
mov
repz
xchg
loop
mov
sbb
xor
ljmp
cltd
int3
xchg
or
fs
adc
in
in
lods
dec
jl
sub
ss
dec
push
pop
xor
cmpsl
adcb
adc
sub
add
rcrl
test
push
adc
movsl
mov
jmp
xor
sbb
jmp
dec
push
mov
sub
mov
fadd
stc
sbbl
lock
push
pop
or
push
xchg
pop
repnz
aad
fdivrl
sbb
mov
dec
push
sbb
mov
cmp
gs
jnp
movsb
xchg
jg
mov
mov
gs
jnp
icebp
push
add
popf
icebp
lahf
ljmp
lods
clc
ljmp
repnz
hlt
jnp
arpl
mov
ljmp
shlb
jle
loopne
or
inc
mov
pop
inc
push
fiaddl
in
mov
int
push
dec
call
push
loop
sti
testl
push
jbe
adc
mov
enter
add
mov
or
adc
pop
xchg
xchg
push
add
movsb
nopl
jnp
fisubrl
jl
pop
mov
ret
call
ret
stc
std
ret
pop
xor
sahf
insb
cld
sbb
fs
xor
sub
mov
push
fisttpl
lods
push
cmp
shll
imul
push
inc
js
scas
loope
dec
mov
mov
mov
insl
xlat
fnstcw
mov
dec
ret
out
nop
pusha
dec
out
sbb
pop
adcl
nop
mov
push
mov
pop
xchg
fcompl
xor
shl
pop
dec
jmp
mov
pop
mov
sbb
jae
jb
fst
pusha
in
push
in
loopne
lret
jno
push
ret
test
hlt
sbb
fbld
jno
call
jl
pop
ja
mov
aam
add
pushf
pop
iret
cmpsl
in
in
stos
pop
cmpb
sub
add
dec
push
je
jge
cmp
pop
mov
sub
cmp
lldt
or
mov
ja
sub
mov
xor
jne
ret
nop
jns
fsubrs
adcl
imul
mov
push
mov
sahf
arpl
aaa
inc
cmpb
xchg
out
push
sti
mov
out
inc
inc
mov
fs
movsl
test
cmp
pop
adc
mov
cld
push
xchg
add
fldcw
stos
sti
jnp
xor
js
push
add
pop
mov
xor
pop
adc
pop
jl
nop
xchg
and
into
cmpsb
fstpt
xchg
mov
arpl
shll
pop
and
gs
mov
fldenv
aad
inc
and
out
jae
mov
ret
or
pop
push
rolb
xor
jmp
mov
jge
mov
mov
rol
and
push
arpl
adc
stc
xchg
push
fs
cs
les
mov
stc
inc
xchg
out
push
dec
std
in
lea
icebp
xchg
mov
lea
out
xchg
mov
aaa
cs
or
push
push
sti
adc
push
rorb
lcall
lret
inc
repz
std
mov
xchg
push
outsb
leave
adc
cwtl
jns
call
js
and
xlat
push
sbb
mov
shll
jmp
mov
xchg
addr16
xor
das
sub
jmp
repnz
inc
sbb
and
pushf
sbb
lea
imul
cwtl
popa
sub
and
jp
pop
test
in
sbb
xor
dec
imul
sbb
jno
or
xchg
fwait
inc
dec
sahf
xor
xchg
inc
cmpsb
xor
inc
sbb
xorl
aaa
xor
and
inc
mov
enter
add
inc
sub
cmp
sbb
push
adc
outsb
frstor
fwait
data16
or
fistpl
sbbl
outsl
inc
jmp
aam
add
movsl
inc
mov
lods
daa
leave
mov
in
aas
idivb
cmc
xor
dec
loopne
push
and
dec
test
shl
add
push
sub
jp
das
fwait
cld
and
arpl
lret
nop
mov
xchg
lea
jge
cs
loop
jmp
cli
cli
pop
pop
or
ret
out
xchg
pop
hlt
call
or
push
jb
adc
outsb
xchg
jge
pop
stos
lret
jecxz
cmp
hlt
fistpll
clc
daa
push
jnp
call
std
mov
jo
stos
sbb
mov
mov
or
leave
hlt
sti
sahf
ljmp
imul
idivl
outsl
cmp
pop
cwtl
dec
in
cmp
or
movsb
mov
outsl
roll
stos
or
mov
gs
adc
rcrb
loop
or
aad
test
ss
jecxz
mov
mov
mov
jno
cmp
sahf
pop
movsl
shrb
mov
cmp
lds
xchg
push
es
push
sarb
rorb
scas
jb
cmp
add
lret
das
jle
xchg
dec
icebp
sub
je
insb
nop
cmp
cmc
inc
cli
xchg
push
mov
cmp
lret
jae
xchg
shl
cmpsl
jge
add
mov
dec
xchg
in
sub
or
subb
js
mov
sbb
popf
lcall
add
sar
shl
cmp
cwtl
push
jns
in
jmp
inc
sbb
scas
out
or
fcomps
in
addr16
adc
pusha
cmpsl
jmp
leave
test
push
in
inc
leave
lret
cli
push
icebp
xchg
ds
mov
inc
icebp
std
imul
push
pop
movsb
shrl
bound
test
inc
clc
decl
imul
push
das
jge
xchg
jne
lods
mov
jns
push
divl
bound
pop
sbb
jge
inc
and
popf
sbb
lods
sub
test
and
bound
rcll
push
outsl
inc
push
dec
jge
push
sub
xchg
test
xor
cmp
jecxz
jnp
add
repnz
popa
lea
jbe
pop
popa
scas
mov
or
stc
mov
adc
cmp
xchg
into
fistpll
sti
cmp
repz
xor
fs
lcall
push
in
jg
mov
mov
outsb
jg
pop
or
jecxz
out
pop
inc
stos
push
lock
jns
xchg
ror
sahf
cli
sti
outsl
sarl
insl
mov
ret
ds
addr16
dec
mov
loop
pop
add
push
imul
xor
inc
or
sbb
in
pop
dec
mov
push
pop
fiaddl
divb
rcr
or
sarb
sub
nop
out
pop
sbb
cmp
imul
adc
pop
mov
loopne
mov
cli
scas
mov
gs
or
mov
inc
sbb
jmp
inc
xor
xor
xchg
rep
mov
rorl
dec
pop
and
dec
shlb
add
rcrb
lretw
adc
into
jp
fs
xchg
fsubl
push
test
add
inc
dec
test
cmp
jmp
leave
roll
mov
jle
xchg
sbb
cwtl
sbb
pop
clc
mov
loop
out
scas
je
push
push
adc
mov
xchg
push
inc
adc
je
aas
cmc
jo
xchg
mov
hlt
adc
imul
loopne,pt
stos
test
xchg
mov
imul
addr16
sbb
lock
movsl
xor
jo
mov
insl
in
push
ljmp
sub
in
fisttpll
or
loopne
cwtl
rcll
test
daa
addr16
das
out
out
dec
mov
mov
pop
lds
bound
xor
rorl
xchg
ret
dec
cmp
out
dec
cmc
adc
push
jnp
inc
int3
sbb
mov
mov
xchg
mov
mov
push
insl
jae
or
push
cmpsl
mov
mov
lock
pop
sarb
loop
mov
cmp
sbbb
fbstp
push
pop
sub
test
fiadds
inc
mov
out
sub
std
jmp
xlat
xchg
sti
dec
sti
insl
add
in
sub
scas
ret
loope
pushf
inc
cmpsb
int
insl
ss
and
cmp
jmp
or
sbb
out
incb
mov
ficoms
push
mov
push
cld
mov
dec
loope
fwait
add
ljmp
jne
lods
sbb
fs
je
sub
jns
into
ret
xor
test
sbb
xor
mov
adc
es
lcall
push
pop
ljmp
cmpsl
mov
push
aam
scas
sbb
mov
imul
or
adc
sbb
xchg
movsl
scas
sub
jbe
and
push
or
mov
push
jnp
lock
mov
rorl
adc
mov
in
xchg
push
or
aas
inc
pop
push
sbb
fdivrs
popl
mov
test
adc
mov
jno
js
mov
dec
cmp
push
nop
and
pop
push
out
movsb
add
mov
rcll
sub
sub
mov
xor
sbbl
jbe
imull
dec
push
dec
adc
cmp
sub
imul
pop
insb
test
sub
xor
movsl
jnp
adcl
stc
mov
mov
cmp
jns
mov
mov
in
pop
fistl
or
addr16
sti
lret
dec
jne
loop
test
inc
jge
xorb
jecxz
movsl
sbb
mov
in
push
dec
out
repz
out
xchg
clc
sub
xchg
fiadds
rol
popa
ret
pop
bnd
inc
cwtl
out
in
loope
xlat
inc
mov
jecxz
leave
repnz
push
push
pop
call
cmp
lret
les
mov
push
gs
repnz
outsb
incl
lods
out
and
mov
jno
add
cmp
add
lret
jne
fstps
insb
mov
push
add
int3
or
insb
mov
sbb
mov
test
xor
or
mov
add
jno
xchg
mov
mov
ret
loop
in
dec
inc
pop
xchg
mov
adc
xchg
xchg
jne
xchg
cmp
mov
pushf
int3
cmpsb
push
dec
push
pop
cmp
push
push
and
subb
jge
mov
mov
push
subl
mov
cmc
mov
and
push
lahf
rcrb
loopne
mov
dec
mov
push
mov
bound
dec
push
addl
sti
ljmp
loopne
xchg
rorl
test
jmp
xchg
xor
xchg
sbb
jb
dec
pop
xor
insb
mov
add
lods
push
int3
sub
loope
test
test
xchg
cmc
mov
jb
mov
in
les
aas
mov
jecxz
shlb
and
lahf
orl
syscall
aas
mov
pop
cmc
sbb
outsl
push
das
insl
jnp
lahf
inc
cmp
loope
fwait
xchg
and
out
inc
in
lock
inc
xlat
dec
jle
movsb
in
adc
or
pop
xchg
mov
imul
mov
popf
dec
jge
shlb
test
lock
divb
push
shlb
enter
loopne
sub
sbb
push
pop
dec
or
fmuls
add
and
push
cmp
cwtl
xchg
sbb
adc
movsl
xchg
xchg
push
fiaddl
cltd
leave
and
push
mov
xchg
xchg
xor
mov
mov
repz
and
jg
cmp
shll
lods
imul
add
in
and
dec
add
cmpsl
fs
orl
mov
jecxz
adc
sbb
push
aam
insb
mov
into
bound
or
dec
adc
cmpsb
lock
scas
aam
add
push
pop
mov
fs
lcall
mov
les
outsb
outsb
ja
and
aad
lahf
jle
in
add
adc
mov
cs
dec
mul
fdivrl
and
and
call
mov
into
shr
out
outsl
es
jl
adc
or
bound
dec
iret
jno
jo
push
xor
loop
xchg
lea
mov
repz
jbe
adc
and
enter
jne
push
fwait
aaa
les
jmp
pop
adc
enter
mov
or
pop
mov
popf
ja
repnz
push
push
mov
scas
mov
outsl
xchg
adc
inc
or
mov
out
and
outsl
repz
add
js
mov
jle
loope
cmp
daa
imul
ja
or
push
dec
ljmp
mov
bound
xchg
xor
popf
add
sub
arpl
outsb
clc
jl
pop
lcall
call
and
into
gs
scas
sarl
adc
out
test
mov
shl
inc
cmp
lret
out
nop
jge
push
or
lahf
imul
pop
movb
mov
mov
mov
repz
jb
stos
insb
jge
cmp
cli
jl
cmpsb
jns
addr16
dec
jne
mov
aam
or
pop
jo
mov
in
inc
mov
mov
mov
pop
push
pop
shlb
mov
xchg
inc
jp
in
into
xchg
daa
test
sbb
lock
push
js
xchg
push
ret
sbb
inc
cmp
pusha
and
lock
sub
ja
xchg
sub
test
push
adcl
pop
subb
loope
xchg
pop
cmpsb
lcall
pop
xchg
pop
pop
popa
cltd
or
push
lock
mov
loope
aas
loopne
or
xor
insb
fimull
sti
xor
xchg
push
outsb
adc
stos
mov
je
mov
daa
loope
cwtl
cmp
xor
aad
mov
test
bound
sub
mov
xor
shrb
leave
js
add
jne
inc
popa
mov
dec
mov
dec
and
jae
lods
mov
dec
movsb
sti
hlt
enter
or
inc
fucompp
in
addb
mov
push
mov
loopne
insl
inc
mull
jb
mov
add
stos
mov
mov
xchg
mov
jnp
inc
imul
pop
sahf
mov
xor
and
fwait
mov
jo
sbb
sbb
insl
sbb
and
jne
fs
stos
jp
jmp
and
mov
aaa
pop
inc
pusha
sbb
or
clc
adc
pop
and
ficomps
test
xor
mov
mov
xor
scas
jb
cltd
adc
gs
dec
cmpsb
std
mov
lret
or
loope
daa
xchg
push
sbb
pusha
int3
in
sbb
cltd
mov
cmp
lds
push
xor
sbb
jns
pop
or
and
dec
lds
pop
or
loop
jbe
in
push
nop
mov
mov
stc
inc
xchg
les
adcl
mov
cmp
inc
mov
cmc
sbb
push
push
shr
and
jg
inc
and
nop
mov
mov
into
pop
out
jle
add
js
loope
rcrb
and
addb
insb
stos
lods
fldl
inc
mov
jb
out
ds
in
xor
orb
jmp
inc
insl
sti
stos
popa
daa
daa
jb
xor
sub
add
outsb
dec
jge
and
sub
dec
lret
stc
jg
and
push
ss
dec
nop
hlt
xlat
out
cmp
mulb
lret
shl
pop
pop
ret
dec
adc
adc
test
movsl
add
popf
lock
push
imul
outsb
push
add
jle
call
in
iret
push
testb
adc
cmpsl
dec
jo
add
in
outsb
sub
push
in
add
mov
scas
mov
dec
jo
and
xor
inc
pushf
movsl
adc
aad
push
xchg
lcall
mov
pop
and
mov
enter
sbb
xchg
hlt
inc
mov
imul
cs
lret
stos
and
movsb
pop
subl
jae
inc
aad
sbb
inc
out
shl
aam
mov
and
ret
arpl
mov
cli
mov
fcmovne
inc
adc
jl
fcomps
rcrl
hlt
inc
cltd
adc
mov
nop
fwait
push
push
jg
lea
mov
push
xchg
push
cwtl
iret
xlat
push
test
xchg
jbe
xor
jle
outsl
pop
ds
and
xor
rcr
dec
jl
push
inc
or
imul
xor
dec
repnz
bound
jno
add
dec
lahf
dec
inc
jle
jnp
mov
jo
test
ljmp
rclb
xchg
enter
or
movsb
cmp
negb
xchg
int3
int
ret
loope
inc
out
sti
ficomps
add
mov
push
jbe
icebp
add
imull
mov
lods
jb
pop
xchg
fstps
pop
cmpsb
sbb
push
inc
sbb
test
iret
fistps
subb
aam
fwait
mov
xchg
and
or
ret
clc
js
outsb
adc
hlt
in
xorl
lods
out
push
push
cmpl
loope
adc
into
scas
aas
or
lds
or
jae
loop
test
xor
aaa
cmpsb
pop
aad
std
add
lods
les
adc
pop
push
pop
jge
lods
repz
or
cmp
and
enter
movsl
mov
cltd
mov
mov
pushf
mov
les
xor
mov
cmp
inc
ja
xchg
scas
andl
inc
rcrb
pop
gs
insb
jg
inc
shll
lret
inc
xor
rorl
fwait
sub
pushf
adc
push
sti
jae
ss
push
adc
dec
and
into
andl
insb
fsubr
dec
int
nop
fchs
imul
or
or
pop
shrb
sub
pop
repnz
sahf
or
dec
or
fcomip
arpl
bound
enter
subb
aad
lahf
mov
push
or
imul
push
mov
mov
loop
lahf
jmp
mov
jge
stos
dec
jo
pusha
add
cmpsl
jp
or
mov
inc
xchg
in
jne
in
or
push
es
xlat
pop
mov
out
loope
cwtl
add
das
scas
test
push
cli
leave
jnp
push
sub
inc
popa
aad
push
out
pusha
lret
cs
or
lret
ljmp
cmpl
cmp
lods
xor
sarb
mov
popa
pop
mov
jo
ja
pop
pop
fstl
mov
rol
push
push
fcmovnbe
pop
in
xor
adc
dec
push
std
lea
mov
ficomps
sub
mov
pushf
loope
mov
push
lret
js
mov
xor
inc
dec
aad
dec
nop
repz
jb
scas
scas
test
jo
out
jno
repz
psraw
fs
jecxz
insl
mov
sbb
sahf
rclb
cli
xchg
push
add
in
jae
inc
outsb
call
mov
out
sub
ficomps
mov
jae
mov
les
lea
enter
and
pusha
shll
push
aam
push
lods
imul
scas
add
mov
aad
xor
mov
inc
xchg
mov
ljmp
arpl
mov
mov
into
jecxz
fldpi
cmpsb
lret
add
stos
aad
shlb
cmp
jg
mov
cwtl
add
rcrl
fucom
not
and
pop
roll
rsm
out
push
xor
mov
pop
loop
into
add
outsb
insl
sub
daa
adc
call
stos
lea
test
push
push
push
outsb
mov
out
or
sbb
pop
jmp
ficompl
push
out
not
xlat
jne
aaa
fldcw
lret
inc
inc
mulb
scas
mov
cmp
push
cld
cltd
cmp
popl
add
push
push
jmp
mov
mov
mov
push
dec
lea
rclb
or
fmuls
push
aas
mov
sbb
mov
sbb
cmpsl
sahf
out
push
dec
dec
daa
loope
ds
aad
idivb
sbb
ret
mov
lds
and
pop
push
out
push
lret
dec
adc
ret
and
out
sbb
inc
xor
lret
fucom
pusha
pop
jne
xchg
mov
popf
orl
call
es
movsl
cld
cmc
sub
pop
dec
imul
outsl
shl
sahf
cwtl
jb
or
movsl
into
pop
mov
xor
adc
pop
mov
rcrb
and
fbld
cmc
xchg
addr16
dec
mov
xor
and
leave
jecxz
sub
mov
pop
les
adc
jle
xorl
mov
lahf
lods
daa
sti
jl
ret
jno
jne
mov
bound
xchg
mov
in
aad
sub
cltd
enter
cld
add
rorl
mov
sub
cwtl
dec
outsl
addr16
loope
cmp
cld
das
adc
sarb
inc
movsb
xor
xchg
aad
in
jecxz
lret
in
int
push
xchg
mov
lret
or
ret
sub
sub
adc
fmuls
fst
shl
mull
jns
fcos
xchg
fimuls
add
rcl
das
push
adc
lds
lcall
imul
iret
mov
xor
jecxz,pn
out
outsl
pop
pop
mov
sbb
sti
cmp
pop
mov
movsl
aad
nop
sub
and
mov
push
push
add
rcr
mov
xchg
sbbb
xor
push
mov
add
sbb
adc
pusha
inc
rorl
sar
mov
sub
or
inc
adc
mov
inc
pop
gs
iret
jbe
test
push
mulb
xchg
pop
lret
pushf
dec
mov
aad
rcll
mov
adc
pop
sbb
sub
outsb
push
xchg
testl
sub
and
add
fidivrs
fst
imul
popf
movsb
aaa
sti
mov
imul
and
in
cmc
dec
add
xor
aad
out
orb
cmp
mov
insb
stc
or
imul
dec
pop
out
das
dec
out
repnz
fildl
inc
and
rcrb
popl
incb
imul
repz
jne
inc
mov
int3
hlt
pushf
xchg
hlt
add
mov
fsubs
sub
mov
mov
icebp
and
sub
fcmovnu
xorb
mov
sti
lret
xor
or
xor
cmpsl
xchg
add
push
xchg
mov
cmp
adc
imulb
sub
jno
movsl
repz
call
or
add
jmp
les
iret
fadd
outsl
pusha
jmp
bound
js
subb
or
dec
sbb
dec
sbb
xchg
jns
sbb
out
mov
push
jl
push
nop
cmp
cmp
cmp
xor
and
mov
mov
lea
loope
outsb
scas
inc
mov
or
xlat
into
sub
push
or
negb
sbb
test
push
jecxz
fwait
outsl
arpl
cmp
leave
adc
mov
mov
out
fiaddl
lahf
xchg
insb
sar
daa
pushf
loopne
lret
cmp
hlt
shlb
iret
inc
jle
push
add
test
sbb
jbe
jp
bound
scas
add
outsl
sub
std
sti
imul
movsb
out
sub
dec
imul
addr16
jl
inc
jne
add
or
std
adc
leave
in
xor
and
insl
cmpsl
mov
rolb
call
je
int
push
insl
aaa
stc
jge
aam
lret
add
iret
das
or
xor
and
mov
dec
and
sahf
lret
js
lods
nop
in
xor
push
jmp
je
jno
push
lock
jnp
mov
sub
jns
mov
dec
jns
cmpsl
dec
shlb
jecxz
loop
inc
dec
cmp
cmp
and
pushf
dec
fsubl
jle
jmp
sbb
sahf
out
xchg
and
adc
dec
inc
jne
xor
jle
popa
inc
movsl
dec
cld
loope
cld
cmpsl
xlat
cmpsb
or
mov
jecxz
das
jecxz
das
add
xor
pop
jmp
movsb
repnz
pop
jg
or
imul
lods
jo
push
aad
push
xor
fisubrs
or
sub
nop
dec
adc
cmpsb
push
push
dec
xchg
xchg
jle
lods
aad
iret
cwtl
xchg
xchg
loope
andl
cmp
mull
xlat
adc
scas
mov
pop
outsb
pop
les
loopne
mov
cmp
shlb
jl
xchg
frstor
inc
psubsb
lock
arpl
xchg
xchg
ds
mov
outsl
inc
lahf
xor
mov
mov
hlt
jge
push
inc
jle
into
jg
movsb
push
scas
mov
cmp
xor
push
fldenv
pop
pop
rclb
rcrb
push
push
fcoml
shll
add
fisubrl
std
mov
loope
in
jp
pop
mov
insb
cmpsb
jp
inc
in
outsl
fisttpll
mov
sub
mov
psubd
dec
add
xor
xchg
mov
arpl
movsb
nop
dec
iret
dec
test
sar
pop
xlat
cmp
imul
add
stos
xchg
fldenv
sbb
xchg
sub
in
cmc
scas
filds
loopne
push
push
cmc
arpl
xchg
nop
pop
arpl
out
repnz
iret
shlb
outsl
fst
fisttps
loopne
lock
cmp
ja
dec
mov
call
mov
dec
push
enter
jns
xchg
inc
jle
ret
dec
sbb
xor
push
test
imul
jno
sti
pushl
int3
adc
pop
and
xchg
xlat
lret
test
jg
cmpsl
inc
pushf
pop
lea
fnstcw
test
and
in
bound
push
inc
shrl
cmp
neg
out
aas
popa
icebp
cmp
arpl
lcall
push
push
cld
sahf
popa
repz
fildl
dec
adc
jnp
pop
xor
jb
lock
pop
mov
test
mov
mov
bound
stos
lods
fnsave
repz
dec
fadds
jno
mov
fdivrl
dec
sub
or
pop
pop
scas
aaa
pop
outsl
out
cld
and
or
jg
scas
xor
fxch
inc
fbstp
insb
and
iret
test
aam
mov
pop
push
cmc
dec
mov
add
push
pop
ds
cld
out
outsb
or
xchg
loope
sbbl
push
call
sbb
mov
lea
int3
aad
test
int
testl
addr16
mov
ror
push
mov
push
inc
push
std
xchg
dec
or
lods
out
adc
jmp
cmpl
push
mov
push
xchg
int
fwait
cld
das
add
sbb
orl
sete
push
and
mov
movsb
sub
jne,pn
mov
sub
out
and
push
lret
jo
xchg
xchg
js
scas
inc
call
cli
xorb
mov
dec
xchg
jns
pop
outsl
and
dec
jg
sub
push
lods
xorl
jne
jmp
lock
addb
adcb
dec
in
push
pop
sarb
dec
in
xchg
lahf
idivl
in
fidivrs
mov
jecxz
sub
lret
flds
popl
add
push
lods
jp
lods
int
in
out
lcall
out
in
dec
jo
nopl
mov
push
inc
mov
adc
in
cmpsl
sub
fdivl
vpcmpgtb
mov
push
or
and
mov
sbb
out
lahf
xchg
js
repz
aaa
lahf
popf
notl
mov
jns
cmpsl
js
lahf
aad
mov
push
add
push
das
fsubrl
insl
addb
imul
or
out
inc
xchg
mov
dec
test
aad
jns
mov
xchg
fwait
dec
jg
jnp
gs
ret
jnp
adc
inc
inc
xlat
lret
inc
and
adc
ret
cli
orl
js
fistpl
push
pop
and
ret
popa
mov
jne
pusha
inc
aas
pushf
aam
loopne
pop
xchg
add
xor
shrb
jne
psubsw
sbb
ret
scas
out
pop
or
dec
cmp
jp
arpl
push
dec
dec
sahf
test
adc
xchg
repnz
imul
pop
sahf
repz
lahf
pop
test
lock
push
pop
negl
out
inc
outsl
fidivl
or
les
mov
gs
das
xrelease
dec
mov
dec
sbbl
mov
mov
fimull
jbe
mov
cmp
imul
dec
es
xlat
mov
aas
or
movsb
aam
add
shr
mov
mov
test
mov
aaa
and
xor
andl
mov
popf
lret
and
daa
out
dec
mov
and
bound
dec
mov
jnp
lea
in
ljmp
push
ds
push
mov
roll
ficomps
or
pusha
jecxz
jl
mov
add
pushf
or
popf
test
cmpsb
pop
adc
mov
pop
add
jbe
leave
lods
cmpsb
mov
iret
lods
xchg
imul
jmp
dec
in
or
mov
movsb
jmp
cs
subb
shl
jns
dec
inc
pop
sub
jb
je
clc
and
mov
xorps
or
cmp
push
push
fdivl
mov
aas
lock
mov
add
jmp
jne
inc
out
cs
add
sbb
xor
ljmp
adc
or
inc
in
mov
mov
data16
adc
scas
sub
xor
cltd
sub
sbb
sbb
ljmp
jmp
fildl
aam
mov
xchg
push
lods
xor
lret
lret
mov
fnsave
outsb
dec
add
stc
lock
das
mov
push
clc
xor
jecxz
and
jno
mov
jae
xchg
mov
and
icebp
mov
and
inc
sbb
sbb
push
xchg
cmp
cmp
in
insl
push
and
or
lahf
mov
push
push
mov
ja
fildl
jno
lock
adc
js,pt
cmpsl
lods
rcr
push
mov
cmpsb
aam
shlb
lahf
mov
dec
pusha
inc
outsl
dec
pop
rclb
inc
adc
mov
xchg
pusha
xor
les
inc
test
outsb
push
pop
loop
adc
fbld
cmp
outsb
adc
mov
fsubl
out
inc
lret
out
push
jo
and
jnp
test
into
jg
xlat
mov
add
jl
inc
call
xchg
sahf
ret
sub
or
or
xchg
stos
aas
test
gs
lock
pop
divb
int3
mov
aas
lret
mov
mov
popa
std
inc
movsb
sub
jg
or
lcall
loopne
cmp
jo
fs
push
ret
lds
insb
roll
mov
push
cmp
fildl
add
mov
das
aam
or
dec
add
loopne
mov
inc
cmp
aad
frstor
in
lods
push
sub
sbb
mov
mov
cmpsl
xchg
rclb
nop
push
add
loop
push
dec
dec
loop
sub
jmp
mov
pushf
mov
dec
in
push
adc
inc
mov
push
mov
sub
or
rcrl
dec
aad
jmp
or
es
or
jo
ret
in
and
lret
cwtl
movsb
dec
fst
pusha
lods
push
mov
dec
repz
mov
ss
mov
fbstp
into
add
jo
iret
jle
cmp
inc
push
mov
jae
scas
jbe
cmpsl
pop
and
rcll
inc
or
inc
jg
adc
sbb
and
or
nop
mov
int3
xor
mov
xor
inc
je
inc
cmp
jmp
test
inc
xchg
xor
pop
or
push
dec
pop
rcr
fsubs
and
test
jl
dec
dec
fcoml
push
js
jle
daa
and
dec
xchg
inc
jnp
or
aad
les
fidivrs
or
and
xchg
test
adc
insl
adc
jb
pop
push
push
inc
fsubrl
scas
repz
mov
push
xor
inc
and
xchg
inc
in
jnp
test
das
cltd
fsts
lock
pop
mov
icebp
or
adc
nop
adc
loope
sbb
fisttps
jae
inc
aas
enter
mov
sub
sub
ffree
sbb
stc
adc
cmp
jne
roll
imull
ror
push
sub
jns
cld
repz
pop
fists
add
cmp
pop
dec
fs
jno
pop
push
pop
mov
sub
mov
lret
xchg
popf
popf
scas
push
add
adc
mulb
scas
jp
dec
inc
pop
sbb
iret
or
mov
repnz
fldenv
sub
fsub
mov
leave
subb
bound
sbb
arpl
movsb
pop
and
pop
mov
pop
addr16
xlat
dec
sub
outsb
pop
aaa
pop
hlt
or
sub
sub
cmp
lods
jl
and
sbb
sub
movsl
pop
sub
jle
aad
push
xchg
xchg
xchg
cmp
loop
push
or
fbld
push
mov
shr
mov
pusha
lret
insb
repnz
adc
push
mov
jg
neg
or
lods
fldcw
ljmp
lock
adcb
out
add
repz
and
in
pushl
jo
enter
lret
jge
xor
aam
jae
sbbl
xchg
mov
in
arpl
cmc
jg
add
arpl
or
loop
js
adc
addr16
mov
pop
repnz
cmpsl
dec
les
pop
jp
xlat
xor
xor
cwtl
out
xchg
cmp
outsl
mov
pop
cli
mov
outsl
add
mov
cmp
sbb
stos
lock
inc
cmpsb
xchg
addb
dec
andb
pop
mov
mov
and
mov
mov
xchg
sub
insl
lahf
ss
mov
inc
and
dec
ds
sbb
add
jnp
out
xor
stos
fcomps
call
xchg
inc
pop
daa
sub
movsb
test
mov
jnp
xor
mov
scas
mov
pop
out
jnp
push
mov
aad
add
clc
push
pop
shl
call
adc
mov
xchg
scas
shll
scas
call
push
jmp
cmp
imul
cmpb
into
push
pop
scas
fstpl
inc
int
aam
std
adc
fs
insl
sub
aas
and
movsb
ja
dec
rcll
ljmp
shr
or
push
inc
dec
sbb
loopne
cmp
in
jmp
cmpsb
dec
mov
test
jns
fistps
dec
in
lret
sbb
lods
xor
sub
ljmp
icebp
mov
inc
and
xchg
jl
out
int3
mov
scas
mov
mov
fsubrs
into
sbb
nop
loop
and
in
or
fistpl
push
aaa
cmp
lds
hlt
jno
mov
scas
rcrb
loop
sbb
loopne
fs
pop
iret
dec
dec
push
sub
jbe
movsb
jb
cmp
sarb
xlat
mov
rcrl
jge
xor
ret
lahf
adc
mov
fdivp
in
jmp
fs
and
push
mov
mov
or
ss
aas
les
enter
mov
ja
dec
jmp
sahf
cmpsb
and
and
push
mov
fistps
jmp
cmp
std
aam
mov
cmpsl
dec
pop
mov
pop
and
adc
scas
add
sbb
addr16
push
cmp
js
dec
stos
popa
adc
imul
jne
mov
fbld
test
pusha
test
add
jecxz
lahf
dec
bound
push
test
test
sahf
sbb
sub
in
rcrl
test
pop
in
xor
xor
mov
cmp
jg
dec
jne
out
xor
jmp
cmp
data16
pusha
out
push
pop
add
pusha
adc
or
daa
and
adc
inc
cmpsb
nop
repnz
fstps
xchg
xor
mov
lea
xor
sbb
pop
push
lock
xchg
movsb
repz
jl
enter
inc
cmp
outsl
add
jne
mov
jge
cmp
or
imul
aam
in
pop
lret
mov
repz
lods
inc
ret
push
xchg
stc
outsl
sbb
xchg
inc
data16
movsb
mov
rclb
inc
adc
ret
dec
pop
dec
fnstcw
jmp
jp
xlat
adcb
cli
das
or
mov
dec
rorl
adc
mov
leave
mov
je
out
pushf
cwtl
stc
push
es
popa
gs
in
cld
xor
mov
jp
aam
scas
add
or
cmp
sub
push
std
pushf
inc
sbb
sbb
pop
push
and
shrl
orb
mov
dec
gs
leave
test
aam
push
adc
icebp
sub
lods
mov
test
adc
ja
and
dec
xor
mov
push
lret
jbe
incl
pop
jg
fcoms
dec
or
pop
imul
jno
xor
cmp
int3
out
mov
pop
cld
aas
xchg
xor
jge
cwtl
sub
xchg
dec
loopne
in
mov
hlt
xor
push
insl
push
lcall
int
faddl
mov
inc
sub
cmpsb
arpl
xor
es
aas
xor
inc
clc
cld
jno
jnp
mov
add
test
inc
xor
mov
ljmp
hlt
push
jnp
mov
ret
jbe
pop
rcr
jle
mov
push
mov
fnstcw
mov
loopne
mov
mov
outsl
lret
jmp
ss
lret
fiadds
xor
adc
jg
push
mov
cmp
inc
int3
mov
insl
das
or
stc
insl
xorl
cli
pop
pop
ret
notl
out
arpl
repz
mov
stc
or
jmp
or
and
sti
mov
les
mov
inc
inc
dec
mov
or
jnp
addl
loopne
imul
xorb
dec
pop
je
jl
scas
mov
push
push
inc
int
scas
xlat
fs
fdivrl
or
push
sub
jle
xor
mov
fadds
sbb
mov
addr16
push
adc
out
add
xchg
mov
leave
imul
sbb
sub
dec
das
stos
mov
enter
xor
dec
jecxz
mov
jbe
add
scas
ficomps
cltd
mov
mov
or
fsub
jno
notl
xor
and
sub
dec
xor
push
movsb
mov
sti
jge
push
fmulp
dec
fstl
and
jb
mov
and
and
push
sahf
push
shr
notl
gs
add
and
inc
daa
push
les
iret
movsl
push
leave
ja
gs
sbbl
mov
sub
test
cwtl
push
call
inc
mov
popf
sbb
sahf
scas
mov
cwtl
int
xchg
fcom
sub
xchg
add
xchg
js
pop
aad
add
xchg
sahf
push
loop
xor
adc
pop
call
mov
negb
imul
xchg
lock
push
fbld
neg
call
jecxz
push
scas
sti
mulb
cmp
pop
jp
lret
jg
das
mov
fiadds
lcall
or
dec
pop
pop
xchg
loop
jmp
xchg
push
cmpsb
aad
push
pop
in
in
cmp
cmp
adc
lods
jne
imul
jmp
inc
inc
jecxz
jmp
dec
adc
jbe
sti
data16
dec
mov
push
xlat
push
loope,pn
insb
int3
mov
push
repz
pop
cmp
or
popf
mov
mov
in
cwtl
stos
mov
sbb
dec
fildll
xor
arpl
jb
in
pop
test
pop
test
ja
adc
add
testb
push
cmp
adc
mov
mov
call
enter
lret
les
mov
cwtl
lods
jg
cmpb
idivb
lret
or
and
loopne
add
mov
inc
das
dec
ficompl
notl
and
pop
push
fistpl
addr16
sbb
je
fimuls
imul
mov
sbb
cwtl
xor
in
sbb
push
aad
jecxz
pop
fcompl
in
fs
mov
or
cmp
push
xchg
jnp
jecxz
sbb
lods
lahf
sbb
mov
pop
add
sbb
adc
push
pop
iret
mov
mov
outsl
in
xchg
mov
dec
push
dec
and
jle
mov
inc
push
cmpsl
mov
jp
leave
loopne
enter
add
dec
out
ret
int
jb
jo
dec
mov
jns
icebp
xlat
push
in
rcll
jno
outsl
mov
mov
popa
jns
mov
inc
ja
outsl
insl
cmp
sbb
sbb
mov
cmpsb
stc
jne
jp
scas
xchg
sub
fisubrs
daa
sbb
in
stos
fsubr
xlat
jecxz
cmp
icebp
gs
dec
xor
call
popa
lock
push
jmp
dec
jle
cmp
testl
imul
pushf
scas
sarb
pop
pushf
loopne
leave
dec
testl
dec
in
mov
inc
test
nop
mov
adc
xor
js
pop
cwtl
pop
mov
sbb
inc
pusha
cmp
in
add
jne
push
xor
shlb
push
and
in
xchg
and
xor
adc
jle
loopne
jne
gs
cmovge
and
and
sub
mov
adcl
jp
xchg
aaa
cmpsb
outsl
xchg
cli
push
dec
pop
adc
out
mov
push
lahf
inc
sahf
inc
inc
jae
dec
dec
sar
shll
lret
mov
pop
pop
rorl
push
loop
inc
jg
ja
mov
or
test
sub
sub
and
jo
popa
shll
pop
sub
pop
lock
jg
popf
aaa
fsubl
pop
adc
ret
imul
insb
lret
cmp
movsb
fsubrl
pop
jo
in
mov
int
test
sub
inc
push
sub
xor
dec
lds
and
inc
cmp
hlt
adcl
push
mov
pop
push
iret
and
fnsetpm(287
or
add
int3
add
aaa
scas
mov
mov
inc
sbb
mov
call
add
rcr
sub
sub
mov
pop
aam
and
inc
inc
filds
push
outsl
push
les
mov
dec
ret
out
jnp
fistpll
jle
ret
jns
addr16
repz
xor
out
lods
addl
dec
ret
xchg
clc
or
decl
ljmp
pop
xchg
out
rorb
gs
testb
lds
imulb
mov
ficomps
inc
aas
push
into
int
sbb
pop
adc
cmp
lcall
mov
aam
add
insl
in
mov
lods
outsb
ljmp
rol
mov
bnd
fxch
add
or
pop
jo
xor
mov
pop
imul
cmpsl
push
cltd
add
sbb
mov
xchg
xor
xor
sbbl
push
rcrb
cmp
pop
pop
xchg
mov
and
mov
push
add
test
jns
test
jp
inc
lahf
xor
mov
dec
or
and
and
int3
cmp
push
icebp
stos
push
push
and
jnp
jae
mov
cmp
js
add
in
add
sahf
pop
pop
adc
mov
jmp
sbb
in
dec
or
xchg
insl
aas
push
xchg
jp
xchg
jge
movd
dec
sbb
pop
pop
dec
sbb
in
add
mov
scas
sbb
std
hlt
cmp
cmp
fstl
adc
mov
sbb
test
jl
and
cld
xlat
pop
xchg
or
jle
cmp
rcrl
inc
andb
jae
imul
sbb
and
into
icebp
mov
mov
test
pop
out
in
mov
lret
cs
repnz
dec
mov
or
push
dec
enter
ror
and
sub
sbb
filds
frstor
scas
gs
outsb
mov
jp
lods
mov
call
out
cmpl
jmp
dec
adc
jae
iret
popa
fwait
aaa
lods
sub
mov
add
mov
out
dec
lret
insl
mov
shll
das
pop
js
cli
and
push
cmpsl
not
and
cmp
mov
in
mov
push
jo
in
push
and
outsb
lcall
stc
add
faddl
leave
testb
icebp
sbb
mov
jae
sub
iret
xchg
push
es
or
push
push
and
fistpl
inc
add
mov
ror
or
jno
cli
scas
jnp
or
xchg
push
and
cmp
leave
shl
lea
and
int3
adc
sbb
or
pusha
negl
xchg
jle
mov
mov
ds
mov
arpl
lahf
insb
add
jae
loope
mov
aaa
jmp
out
iret
out
cmpsb
aad
cli
out
cld
add
pop
pop
shll
jbe
shl
cmp
mov
popl
pop
cmp
sbb
add
inc
xchg
mov
sub
xorl
push
rcrl
sbb
xchg
xchg
jg
adc
ficompl
in
mov
movsl
and
mov
in
jo
ret
in
mov
jecxz
adc
out
lcall
push
mov
ror
push
aas
push
push
mov
push
pop
mov
mov
rol
pop
push
movsl
pop
push
inc
fsubrs
shll
dec
mov
push
sub
xor
cmc
imul
xchg
xlat
inc
das
jbe
or
aam
shl
lds
mov
fmul
jp
mov
cwtl
insl
sahf
in
loope
ja
jmp
test
jg
inc
mov
jecxz
fstpl
inc
testl
add
or
hlt
sub
xor
xchg
jmp
icebp
pop
cmp
and
shl
mov
fcoml
inc
mov
inc
enter
movsl
sub
cwtd
xor
ret
mov
cmp
inc
push
inc
scas
orb
push
jecxz
sub
movsb
std
aad
les
fsubrl
cmp
push
lock
mov
int3
mov
xchg
mov
jne
std
adc
sub
inc
mov
aaa
push
stos
aas
jae,pn
je
jl
push
pop
add
mov
mov
repz
sti
add
out
jmp
mov
mov
mov
rcl
mov
test
loope
cmp
leave
lcall
dec
inc
fadds
xor
addr16
mov
push
dec
mov
pop
clc
inc
jl
in
cmp
inc
and
addr16
or
push
inc
mov
jmp
and
mov
push
nop
in
push
adc
mov
lret
add
sbb
dec
xor
push
adc
sub
adc
scas
pop
dec
movsl
addr16
add
pop
mov
lea
orb
pop
pop
mov
roll
out
xchg
shlb
fs
sbb
fstpt
mov
jne
mov
inc
sarl
mov
xchg
aaa
cld
dec
add
xchg
outsb
lret
imul
dec
jbe
nop
pop
mov
cmpsl
nop
jge
sub
aam
add
sub
push
cmp
lcall
movswl
xlat
xchg
and
shlb
cmp
ret
xchg
pop
aaa
int3
add
xor
aad
xchg
sbb
pop
aad
in
out
jb
jge
fsubr
and
xchg
fbstp
sbb
or
mov
mov
pop
test
pop
xor
scas
pop
xchg
mov
dec
sub
cmp
imul
loop
jo
sub
js
adc
push
pop
xchg
sub
cmp
mov
out
and
and
mov
sbb
mov
sbb
popa
jb
subl
not
or
cmovge
aaa
insl
xorl
fs
sahf
mov
aas
test
adc
dec
out
arpl
test
jne
push
add
popa
pop
and
call
shll
daa
cs
or
fldcw
mov
adc
add
xchg
test
sbb
jb
adc
fnsetpm(287
sbb
and
add
mov
mov
xor
in
push
mov
pop
cmpsl
nop
movsl
aaa
cmp
aaa
iret
movl
loop
leave
daa
les
and
int
and
xchg
mov
frstor
cmp
mov
mov
sahf
push
sub
lahf
mov
or
mov
lods
repz
fisubrl
pop
cmp
sub
test
and
mov
fildl
fistl
jae
xchg
imul
aad
cwtl
je
lock
inc
in
sahf
pop
mov
sub
dec
ds
nop
dec
cmc
pop
mov
mov
movsb
xchg
pop
call
jle
in
pop
push
mov
xor
out
inc
outsb
inc
or
fwait
clc
mov
jp
es
leave
mov
hlt
inc
or
sti
ret
ds
mulb
fadds
sbb
ljmp
scas
mov
shlb
mov
cmp
aad
mov
pop
into
aaa
adc
fcmovne
leave
sti
push
mov
sbb
sbb
push
dec
sti
xor
cmc
inc
hlt
inc
loope
jmp
mov
add
add
jge
xchg
adc
mov
ds
les
add
inc
out
xlat
inc
cwtl
enter
jbe
out
or
insb
adc
imul
inc
jno
cld
dec
pop
add
clc
outsb
adc
hlt
clc
dec
push
mov
cmpsl
xlat
push
in
jne
in
mov
fists
sti
repnz
inc
or
xchg
inc
cltd
hlt
push
xchg
xchg
adcb
mov
mov
in
mov
orl
fmull
mov
sub
out
push
sub
or
lahf
movsb
test
mov
flds
mov
int3
cld
fcompl
mov
add
inc
enter
cmp
hlt
mov
mov
clc
loopne
inc
in
push
xor
shlb
mov
ss
fsubrs
iret
outsb
aas
push
and
nop
loopne
movsb
lret
xchg
sbb
dec
mov
std
aaa
sub
outsl
dec
mov
mov
lods
jmp
fimull
jge
hlt
xor
imul
scas
insb
mov
cld
or
popf
push
sbb
dec
jno
jge
adcl
ds
scas
ss
xor
out
pop
and
cltd
gs
and
push
mov
cwtl
clc
setb
and
inc
js
pop
xorl
pop
mov
sbb
xor
jns
pop
sahf
mov
or
push
shll
jbe
xchg
sbb
adc
and
call
out
movsb
fldl
popf
xchg
stc
add
sbbb
mov
sti
cwtl
jno
sub
hlt
adc
sub
push
ds
jae
cmp
inc
fistps
nop
xchg
push
jecxz
mov
mov
push
add
xchg
cmp
adc
mov
popa
push
add
arpl
jae
sbb
cmpsl
iret
and
pop
andl
sub
js
mov
xchg
inc
xor
jne
cmpsb
movsl
iret
jae
fwait
xchg
add
pop
mov
cmp
mov
mov
roll
lods
dec
sti
xchg
inc
and
dec
in
int3
sbb
add
jp
loop
cmp
mov
push
into
add
gs
jp
cli
cs
int3
push
sub
cmp
mov
sti
push
addl
out
sub
xchg
jae
mov
stos
daa
rorl
mov
repz
dec
mov
mov
adc
inc
and
jbe
push
dec
imul
push
ss
lret
xchg
jo
add
mov
test
add
inc
or
repz
pop
leave
dec
ret
in
pop
push
sbb
fnstenv
gs
inc
push
dec
dec
and
adc
dec
ds
gs
lcall
int3
mov
bnd
and
enter
pop
sub
enterw
or
xor
icebp
shl
and
aad
or
lret
std
mov
jmp
and
daa
push
mov
shll
popa
mov
test
repnz
pop
call
mov
jge
insb
adc
stos
add
or
push
aas
ret
dec
xchg
ss
fmul
rcl
adc
dec
lods
ror
in
loop
adc
jge
mov
or
imul
xor
call
pop
sub
subb
cmp
lods
mov
pop
call
mov
lds
out
adc
sbb
jg
aas
xchg
hlt
jno
xchg
sbb
inc
jmp
lods
adc
jmp
dec
in
cmc
jb
in
rol
in
ficomps
in
repnz
ficompl
inc
out
and
push
jns
jno
sbb
mov
mov
pop
or
inc
cmp
ja
mov
jne
test
lds
fdivrs
inc
dec
aas
lahf
sbb
or
push
jns
inc
int
stos
les
mov
mov
movsb
inc
mov
repz
in
fldt
ds
mov
xchg
mov
mov
popa
push
bound
cvtpi2ps
movsb
int
bound
sbb
jne
fists
js
push
rclb
sub
jecxz
int3
aaa
xor
sbb
mov
push
cmc
mov
mov
mov
sub
addr16
sbb
in
jp
in
ret
mov
sbbl
mov
test
dec
cmp
outsb
and
sarl
pop
push
pop
xchg
mov
gs
jno
sbb
in
imul
jmp
dec
mov
sub
xor
cld
pop
fists
fidivs
sub
inc
fimuls
lcall
xor
sti
jecxz
cltd
mov
lock
lcall
sub
jb
xor
inc
sbb
cld
mov
cmpsl
adc
fs
dec
inc
pop
pop
call
pusha
fdivrl
lds
sub
jl
pop
mov
ljmp
sbb
cld
sbb
aam
out
adc
test
sub
and
lock
daa
or
cld
xlat
sarl
insb
aas
or
sbb
mov
rclb
lds
clc
mov
aam
inc
xchg
inc
push
test
or
jo
xchg
dec
mov
imul
mov
call
xchg
and
cs
nop
movsl
mov
lea
in
outsb
pushf
fwait
addr16
mov
cmp
mov
add
cmp
xchg
int3
mov
dec
add
fdivl
mov
aam
push
out
pusha
stc
xchg
ss
iret
stc
adc
jl
or
dec
xor
jmp
push
and
es
mov
lea
cwtl
jns
lret
rclb
push
or
pop
sub
dec
fidivs
pop
sub
aam
pop
fidivrs
negl
aaa
push
stos
mov
das
sub
pop
movsl
pop
mov
and
cmpsb
cmp
sub
call
repz
ficoml
and
leave
jns
or
jp
jmp
xchg
ret
jecxz
sbb
sub
pop
xchg
adc
xor
pushf
cli
or
lds
cwtl
in
inc
popa
aad
popf
sub
inc
xchg
subl
outsb
lahf
sub
test
sbb
mov
popa
pop
push
and
lea
outsb
sbb
mov
in
jl
mov
lret
adc
iret
jnp
movsb
pop
mov
repz
push
lods
hlt
xchg
pushf
pop
dec
jno
or
adc
jno
into
mov
cmpsb
cmp
or
sub
xor
or
dec
xchg
mul
sbb
sarb
outsl
xchg
jno
mov
cltd
pop
lret
ss
inc
testb
or
sbb
push
adc
stos
sahf
call
mov
ret
or
and
iret
sub
mov
out
pop
stos
loope
or
incb
mov
push
ja
push
sbb
push
xor
jmp
pop
fwait
int
mov
ficoml
or
mov
cli
add
or
cwtl
mov
sti
movsb
push
mov
test
cmpsb
mov
repz
inc
fwait
fs
xchg
into
sbb
nop
popf
inc
inc
pop
das
cmp
and
sbb
push
xor
imul
push
subb
adc
cmpsb
adc
sti
clc
inc
cmpsl
lods
mov
mov
cmp
sub
mov
and
and
repz
ret
push
fcompl
ret
packuswb
sbb
int
add
cmp
gs
pop
fdivl
xor
mov
cmp
lock
setge
xchg
or
lret
mov
mov
pmulhuw
mov
pop
cwtl
pop
cmp
in
dec
cltd
add
gs
leave
pop
cltd
scas
movsl
jl
gs
inc
leave
xor
in
jmp
push
test
popf
loop
arpl
mov
dec
push
jg
dec
sub
cmc
add
cmp
hlt
jo
ret
shll
add
and
xlat
xchg
scas
int
mov
add
dec
cld
and
or
add
cmp
loop
cmp
push
lahf
dec
mov
jecxz
js
icebp
push
add
pop
cmp
cmp
pop
nop
mov
les
dec
out
jge
insl
fists
std
int3
xchg
cmp
mov
out
rorb
std
jmp
ss
and
fsubs
xchg
and
or
movsl
loopne
or
cmp
jne
test
sub
stc
movsl
ljmp
pop
adc
push
pop
orb
mov
bound
pop
push
or
imul
inc
shlb
lods
cmp
xchg
out
push
xchg
jg
cmp
shlb
test
jb
inc
mov
ja
insb
mov
pop
aaa
fdivr
sub
inc
push
dec
repz
adc
push
and
clc
ret
dec
dec
sbb
jle
inc
or
push
push
scas
cs
scas
mov
arpl
push
filds
jo
push
movsb
stos
ret
rclb
mov
nop
xor
push
out
int3
insb
sbb
fbstp
or
in
outsb
shll
repz
jge
or
pusha
ret
jle
mov
sbb
stos
loop
daa
adc
xchg
faddl
pop
push
dec
mov
enter
out
idivb
push
int3
shlb
dec
or
dec
orb
and
xor
subl
inc
stc
enter
push
adc
daa
push
mov
xchg
pop
inc
clc
jnp
xlat
dec
bnd
and
loopne
in
imul
jo
fwait
popa
std
cmp
jno
push
mov
pop
insb
jno
push
mov
aas
push
jmp
adc
enter
cmp
dec
jg
mov
les
add
test
ret
ljmp
pop
xor
jbe
inc
mov
mov
sar
mov
cmp
mov
rcll
fstpt
rolb
pop
mov
ret
outsl
or
dec
cmp
outsb
xlat
ljmp
cs
movsl
inc
popa
movsb
lcall
orl
inc
add
subl
das
pop
xor
dec
jbe
mov
int3
jb
inc
cmpsb
das
adc
pop
inc
jno
daa
test
repnz
cmp
inc
jno
popf
mov
and
test
dec
outsl
push
in
popa
jbe
ja
lds
add
fsubs
cmp
push
movsb
lods
push
xchg
scas
js
sbb
dec
inc
icebp
adc
call
lods
sub
fs
in
fs
call
xor
add
test
mov
fidivs
push
add
adc
push
add
push
sbb
add
sbb
out
sbb
fdivrs
xlat
shlb
push
mov
add
pop
push
decl
andb
in
mov
cs
mov
jns
enter
js
jle
push
sahf
jg
lods
cwtl
push
pop
cmpsl
jbe
repnz
inc
jb
pop
inc
mov
or
push
inc
fsubrl
sbb
pop
cwtl
movsl
es
xchg
in
push
sbb
push
push
lahf
loope
push
fisttps
fistpl
xchg
aad
mov
aad
dec
jecxz
inc
cwtl
adc
inc
std
clc
mov
inc
test
je
fwait
jae
pop
pop
sbb
insl
jge
into
and
xchg
into
mov
mov
push
mov
xchg
stos
mov
in
sub
repnz
pusha
sbb
pop
mov
adc
and
fwait
xchg
or
out
data16
in
data16
xor
mov
and
mov
jns
mov
push
gs
pop
cmp
adc
inc
sbb
es
outsb
cmp
push
popa
loope
add
or
mov
push
sub
xchg
push
int3
hlt
int
dec
pop
shll
lret
mov
jle
test
icebp
aas
adc
mov
cmpsl
roll
out
test
std
call
add
dec
loope
aad
out
push
call
sub
imul
adc
mov
pop
sti
cs
sbb
adc
sub
push
inc
fwait
lods
mov
jno
dec
and
lea
push
xor
out
nop
aas
xchg
insb
add
pop
cmp
and
icebp
pop
pop
scas
test
sbb
jp
daa
test
ljmp
gs
dec
mov
lds
pop
push
aaa
movsl
notb
outsl
xor
fs
adc
push
std
scas
movsb
add
pop
out
adc
mov
xchg
je
fcomi
imul
aaa
fisttpl
adc
mov
daa
lock
dec
inc
jne
pop
loopne
and
andl
inc
call
push
mov
xor
addb
into
dec
orl
daa
roll
out
mov
ret
aaa
inc
lods
cs
xor
inc
pop
aad
adc
out
imul
or
cmp
sub
dec
cmp
push
cwtl
fcmovne
mov
lods
inc
imul
shrb
dec
not
add
lods
jo
out
call
sbbl
pusha
es
imul
add
pusha
scas
inc
roll
adc
inc
and
jne
aas
and
mov
mov
add
sub
xchg
cmp
mov
xchg
jmp
cwtl
ja
xor
push
dec
sti
lea
enter
xchg
adc
push
lret
xchg
sub
in
lds
iret
xor
pop
sbb
es
adc
jp
ret
adcb
ret
sbb
cmpsb
jbe
ds
jne
pusha
jecxz
data16
xchg
aad
push
mov
mov
sub
enter
add
or
xor
in
clc
sub
jo
mov
jg
inc
js
mov
movsl
xor
or
xchg
test
ret
inc
int3
or
jo
dec
lret
or
pop
arpl
add
adc
push
mov
daa
test
or
sbb
jnp
out
loop
scas
mov
push
rcll
mov
in
sub
aad
int
adc
test
fs
arpl
adc
jl
leave
mov
pop
insl
ja
pop
into
loopne
ljmp
sub
ljmp
mov
das
das
sbb
mov
mov
repnz
and
iret
out
dec
sahf
lods
fcompl
cli
sub
fwait
xchg
lds
dec
out
sbb
mov
or
insl
push
xor
out
fildl
sti
mov
ja
cmp
dec
out
pushf
test
xor
push
subb
dec
call
push
sbb
cmc
dec
push
adc
sti
dec
mov
mov
inc
nopl
or
movsl
mov
outsb
mov
outsb
int
mov
pop
ret
adc
lret
sub
in
call
mov
and
shrl
scas
mov
add
pop
rolb
das
mov
jg
out
mov
or
lea
mov
cmp
mov
mov
push
popf
dec
xchg
sub
repz
fcoms
fiaddl
lds
xchg
ficompl
mov
and
and
push
imul
clc
pop
mov
out
jecxz
cmp
push
subb
nopl
sahf
inc
dec
leave
adc
dec
mov
popa
pushf
fistl
mov
add
add
iret
inc
dec
mov
cmp
and
cmp
sub
test
or
dec
xchg
shlb
and
pop
imul
cmp
out
add
or
push
xor
mov
mov
repz
pop
adc
lea
aaa
and
or
in
jo
push
sub
pop
mov
shl
loope
fisttpll
jno
stos
lahf
dec
movsb
insb
jp
pop
dec
push
aaa
popa
dec
pop
and
mov
sub
js
and
rorb
xlat
mov
xchg
xchg
rcll
or
in
push
and
cmp
dec
push
fdivl
repz
pop
push
lret
inc
jne
mov
push
faddp
xchg
filds
jns
add
and
sbb
inc
push
ss
mov
jecxz
and
inc
fmul
mov
cmpsb
inc
fildl
ljmp
sahf
bnd
lahf
repnz
sub
and
lods
jp
repz
jmp
adc
sahf
stos
and
jp
fldt
aas
adc
mov
sub
pop
sahf
mov
inc
jmp
movsl
cld
xchg
mov
or
testb
mov
inc
add
shlb
and
sub
jp
inc
loope
aaa
cmp
or
mov
sahf
rorl
out
fisttpl
push
shl
add
pop
mov
jl
add
dec
imul
cmp
in
mov
adc
xchg
popa
pop
add
fcompl
sbb
jg
mov
jo
pop
lea
sub
add
cltd
stc
shll
sub
jp
gs
dec
mov
xor
cltd
das
dec
push
push
inc
dec
repz
add
or
test
sbb
push
arpl
jl
dec
pop
orb
xchg
out
sahf
xchg
and
xchg
xchg
mov
gs
lcall
aas
mov
jbe
mov
cwtl
mov
stos
cwtl
push
inc
in
xchg
jecxz
add
shlb
mov
mov
call
add
in
dec
out
or
sbb
and
dec
push
sub
push
lret
mov
and
neg
or
rcrl
cmpsb
push
out
xor
mov
and
fistps
jmp
mov
xor
and
lds
jmp
sahf
movsb
lock
hlt
cmp
pop
leave
pop
jb
sub
dec
cmp
inc
addl
cmpsb
dec
pop
pop
inc
hlt
mov
cmp
xchg
pop
in
add
xchg
pop
pop
sub
fistpl
inc
add
mov
lock
dec
lea
jecxz
push
inc
mov
xor
in
cmp
sbb
dec
ret
pusha
fcoml
cwtl
xchg
push
or
jg
push
inc
mov
dec
es
and
pushf
xor
loopne
pop
cltd
pop
fdivrs
adc
mov
mov
clc
roll
inc
ret
mov
in
mov
xlat
or
out
fnstsw
xchg
js
stc
sbb
mov
ljmp
sub
sub
push
jl
mov
outsl
aad
jl
mov
scas
aad
cld
lods
and
jle
sbb
jl
xlat
stos
push
rolb
repz
xor
in
mov
cltd
xchg
sti
clc
mov
mov
je
dec
out
lods
jmp
lret
je
scas
fdivl
cmpsb
xchg
sbb
insl
mov
shll
fbstp
out
vorpd
mov
lret
cmp
xchg
cmp
fdivr
cld
and
push
mov
push
mov
ljmp
sti
testb
imul
loopne
testl
cmp
xchg
call
loopne
cltd
push
xor
lcall
xchg
popf
psubd
nop
pop
inc
xor
and
repnz
arpl
inc
hlt
leave
popf
jg
sbb
mov
ret
adc
inc
push
lods
ret
repnz
mov
jmp
fdivrs
inc
shll
test
xor
pop
mov
xor
call
mov
js
addl
inc
sbb
repnz
jo
sub
mov
mov
push
js
std
stos
ficompl
stos
movsb
in
sbb
jg
mov
dec
inc
and
xorb
dec
mov
push
neg
sub
or
or
push
dec
jns
outsb
and
enter
sbb
mov
jecxz
je
and
pop
sub
mov
das
lret
and
sarl
mov
sbb
mov
push
hlt
jbe
out
sbb
loopne
mov
test
loop
out
scas
or
push
fstpt
jl
adc
xor
cmp
andb
cmp
xor
lea
cmpsb
movb
cmp
push
sbb
aad
lock
mov
std
fnstcw
stc
pop
cmp
js
and
mov
icebp
mov
push
pop
fcomi
mov
mov
mov
jne
mov
rorl
ja
and
lahf
adc
cltd
adc
sbb
inc
mov
mov
hlt
outsb
scas
lods
dec
vfrczss
sti
push
notl
in
pushf
loop
test
lcall
js
je
jg
fwait
adc
cmp
mov
scas
mov
mov
push
push
pusha
imul
fistpl
leave
lea
push
push
and
ljmp
pop
das
mov
push
or
dec
mov
in
jae
adc
inc
inc
jo
or
and
and
xor
cmp
mov
test
jno
jae
lods
inc
loopne
mov
dec
mov
dec
pop
push
movsb
mov
mov
mov
jnp
push
mov
jno
mov
les
mov
stos
pop
sub
stos
and
jl
sub
lret
cmp
outsl
adc
fistps
rcl
adc
jbe
push
add
sbb
push
mov
cmpl
mov
movsb
pusha
cmpsl
pop
xor
je
add
mov
mov
xchg
adc
mov
out
and
jl
cmp
adc
and
nop
pop
or
inc
mov
hlt
aaa
scas
movsl
int
mov
out
int3
push
clc
push
jecxz
or
in
std
aam
push
iret
gs
jge
clc
into
scas
icebp
xor
pop
add
or
mov
jecxz
mov
xor
inc
icebp
imul
add
mov
into
cmp
fs
push
ret
mov
or
xor
inc
loopne
in
pop
mov
int3
bound
xchg
cmp
mov
dec
xor
into
sub
dec
fstpl
lret
popf
xor
sbb
cmp
cld
addl
mov
lods
out
inc
aaa
dec
repnz
scas
popa
dec
popa
call
int
mov
mov
xchg
adc
lret
test
loop
or
pop
iret
sbb
ret
pop
mov
setb
pop
aam
in
mov
cmp
sbb
lods
jb
mov
jbe
dec
sar
fwait
mov
out
mov
lret
fcompl
insb
adc
addr16
add
sub
fs
aad
insb
xchg
inc
sub
sbb
push
cli
fsubrp
mov
xorl
xlat
xchg
stc
pop
jle
xchg
loopne
daa
enter
mov
dec
fists
iret
sahf
dec
dec
mov
neg
repz
mov
xor
sbb
or
xor
nop
fisttpl
sub
es
sbb
sbb
arpl
cs
popf
mov
imul
out
add
int
xchg
retw
sbb
push
loopne
xlat
daa
jl
pushf
mov
mov
stos
cmpsb
mov
sub
or
scas
mov
mov
movsl
cmp
jb
addps
fildl
daa
negb
xchg
jne
imul
or
shll
inc
jbe
pop
es
fnsave
aas
jp
or
jb
icebp
cmp
dec
and
mov
jns
aam
movsl
inc
lcall
mov
cmp
in
adc
pushf
adc
mull
mov
adc
adc
jp
xor
mov
out
shlb
ja
in
mov
sub
and
bound
sub
xchg
push
shl
call
pop
js
pushf
dec
mov
repz
pop
dec
inc
jae
rcrl
mov
adcl
mov
into
mov
adc
lods
mov
hlt
mov
xchg
adc
mov
jae
div
in
push
jg
sbb
add
cmp
loopne
lret
pop
push
inc
mov
add
jbe
xchg
jnp
clc
pop
sbb
push
out
sti
dec
pop
ds
adc
and
lods
adc
dec
push
pop
mov
sbb
xchg
notb
inc
inc
mov
mov
in
data16
pop
imul
test
js
push
sar
addr16
jmp
inc
inc
rcr
cltd
mov
adc
push
push
pop
rclb
pop
or
pop
int3
and
fld
ja
jecxz
fmull
test
mov
outsl
ds
jo
mov
test
fistl
movsb
int
lea
mov
bound
dec
xor
sahf
mov
rorl
sar
jge
pop
sub
sarl
jae
jp
cmp
cmpsb
sahf
gs
mov
ret
jp
inc
jp
dec
and
cmp
fcmovb
hlt
xchg
xor
outsl
mov
adc
and
repz
scas
cmp
ljmp
xchg
pusha
aaa
cli
or
sbb
jle
cwtl
das
pushf
lcall
xorb
cmc
jbe
into
scas
xchg
mov
aas
lea
mov
out
aam
inc
dec
push
xchg
stc
gs
mov
aaa
sub
je
out
mov
call
mov
orb
mov
test
pop
add
icebp
sbb
cmp
shrb
lcall
pop
lea
enter
inc
lods
cs
in
or
js
ret
dec
fdiv
imul
jb
or
pusha
sbb
std
add
outsb
lds
push
shlb
dec
lds
mov
lcall
into
adc
int
aas
inc
sahf
jbe
xor
or
cld
cli
cmpsl
cmp
mov
sub
jns
pop
movsl
jmp
lock
push
in
push
arpl
inc
push
push
outsl
bound
fstpl
leave
fadds
cmp
sub
popf
mov
lahf
aas
loope
int3
in
mov
cmp
xchg
stos
call
in
insb
push
shll
pusha
add
jnp
jnp
insl
push
mov
rol
and
and
mov
fildl
enter
sub
enter
sti
jmp
sub
push
not
push
cmpsb
cli
iret
aas
outsl
xor
cli
scas
js
imul
subl
cmpsb
inc
push
jge
call
push
dec
call
ss
xor
pop
addr16
mov
inc
sub
mov
scas
mov
inc
call
scas
pop
cli
push
mov
sub
dec
lret
cmp
cli
inc
jne
push
push
mov
cwtl
mov
mov
das
shrl
popf
pop
lods
sbb
jae
inc
das
or
inc
add
ds
sub
popf
scas
mov
fld
stc
aas
mov
int3
cmp
fadds
mov
insb
orb
add
lret
jns
lcall
jge
cli
orb
cmp
daa
test
aad
pop
in
cmp
cltd
cli
das
jecxz
and
xor
les
movb
push
xchg
xchg
sub
xchg
sub
mov
inc
adc
lods
push
cmc
cmp
es
aas
pushf
ljmp
or
arpl
cmp
jg
aad
push
or
bound
push
fadds
cmp
scas
jns
outsl
jbe
aas
jge
sub
and
ljmp
inc
sbb
or
pusha
mov
popa
mov
dec
jbe
pushf
jbe
nop
js
jle
or
dec
xor
xchg
bnd
xchg
mov
cmp
out
xchg
inc
xchg
insb
sbb
cmp
cmpl
insl
or
jne
lock
aam
into
fwait
and
jns
sbb
cli
jecxz
mov
or
fwait
stos
pusha
xor
jl
scas
push
jnp
mul
in
xorl
popa
inc
aad
jnp
xor
imulb
lahf
pop
in
cmpsb
sti
mov
fldl
and
xchg
ret
fucomi
nop
lods
scas
jbe
arpl
iret
test
pop
and
jp
out
push
or
or
test
roll
int
push
sahf
jecxz
sahf
repz
aad
fistpll
cmc
div
or
stos
dec
test
cli
lret
lea
out
mov
jle
lret
mov
fwait
into
adc
pop
sbb
add
xchg
mov
roll
jns
cltd
jecxz
das
push
dec
adc
pop
repnz
pop
cmp
push
std
xchg
dec
ss
add
sub
fucom
xchg
mov
pusha
fwait
xchg
push
mov
vandnps
dec
adc
scas
xchg
pop
lret
jbe
sub
ljmp
mov
icebp
sub
inc
sub
ret
pop
js
nop
add
sbb
int
xchg
xchg
or
decb
out
mov
dec
sar
cmc
ret
pop
push
and
or
xchg
mov
in
sbb
pusha
jg
pop
xor
mov
ret
dec
pop
clc
insb
faddp
mov
inc
ljmp
popf
mov
sbb
mov
pop
push
scas
xadd
cmc
cmp
es
mov
or
mov
inc
or
fsubl
xlat
mov
adc
rcr
xchg
add
divl
push
stos
add
fdivrs
addr16
rcrb
jge
adc
nop
xchg
push
xor
pop
test
xchg
inc
sti
jnp
out
sub
icebp
bound
jle
movsl
mov
dec
je
int3
dec
imul
mov
mov
xchg
in
jecxz
ret
bound
mov
loopne
jp
pusha
dec
cmpsl
mov
fnstenv
in
cld
pop
loop
inc
mov
out
jnp
xor
push
mov
hlt
jl
and
in
pop
fcmovnb
in
sub
repz
inc
cli
test
pop
out
xchg
sub
pushf
shll
out
rcrl
not
hlt
pop
insb
xchg
addr16
idivl
lock
movsl
add
cmpxchg
add
adcb
cld
jl
adc
push
and
imul
rclb
push
idivl
add
dec
jo
pop
pop
int
aas
movsb
mov
aas
sub
cld
adc
mov
inc
adc
ja
stos
lock
mov
in
jmp
jg
cmp
dec
mov
xchg
xor
pop
lcall
adc
inc
inc
mov
in
iret
mov
jae
rcll
inc
cmp
mov
stc
fdivrs
aad
call
mov
mov
xlat
inc
xor
pop
adc
mov
mov
or
push
icebp
cmp
sub
es
push
jge
pop
push
das
push
addl
cmpsb
insl
ljmp
mov
pushf
adc
outsl
mov
inc
loopne
popf
lcall
push
es
test
and
fwait
daa
dec
xchg
adc
loop
arpl
test
mov
xchg
into
popf
push
dec
outsl
add
stos
insl
nop
call
push
vpaddq
clc
jo
jno
pop
aaa
cmpsl
mov
xor
loope
xchg
push
sub
sbbb
push
aad
pop
sbb
andl
in
inc
or
scas
cld
push
dec
cs
dec
clc
adc
ror
shl
adc
inc
stc
fnstsw
mov
adc
lds
jnp
xchg
test
js
jb
push
daa
cli
sub
xor
jmp
or
arpl
mov
sbb
outsl
sub
popf
js
lcall
pop
add
push
test
out
imul
mov
setp
xlat
dec
lods
sub
cmc
mov
repnz
pop
cmpsb
cmp
leave
ror
jl
lahf
cmp
call
test
xor
pop
jno
fbld
ds
dec
scas
outsb
sub
fs
test
scas
sub
and
mov
stos
int
add
popf
jg
sub
mov
ret
aad
in
icebp
loop
mov
xchg
imul
andb
out
and
jmp
add
and
arpl
adc
xchg
mov
cmpsl
jns
test
imul
sbb
xchg
pop
fcmovb
adc
add
insb
mov
ret
int
jle
xor
nop
mov
lahf
lds
insb
cltd
es
loopne
and
or
mov
push
dec
lcall
repz
xorb
js
mov
std
sahf
inc
insl
popl
inc
mov
and
jmp
cmp
push
mov
mov
and
incl
jp
out
pop
rcr
sub
mov
adc
out
sub
ljmp
rep
lods
cmp
jb
push
dec
test
mov
or
dec
push
sbb
ljmp
stc
xchg
bound
push
cmp
xchg
lahf
into
jmp
test
cmp
add
mov
in
insb
push
pop
cmc
push
idivb
push
dec
mov
dec
repz
stos
bound
mov
arpl
xchg
mov
daa
adc
arpl
or
lock
add
inc
sbb
je
mov
cmpsl
jno
repnz
push
out
jnp
dec
stc
imul
rcrl
or
push
sub
addr16
test
lods
lcall
call
xchg
cmp
into
mov
clc
popa
stos
js
and
sub
test
xchg
push
out
ret
inc
shlb
rolb
mov
negb
mov
bound
push
fwait
mov
daa
fwait
cwtl
xor
iret
push
int
scas
dec
xchg
sahf
nop
mov
add
je
sbbb
add
cli
sarb
jbe
filds
jmp
pusha
jae
cwtl
inc
xor
mov
xchg
xor
cmp
in
out
push
lods
je
push
fsubp
stos
outsl
or
fstpt
aaa
ret
push
js
sub
outsb
xor
xchg
rcrl
add
adc
adc
cmp
cmp
xchg
int
icebp
test
jecxz
xchg
rcrb
jno
jno
outsb
xchg
mov
mov
cmpsb
lds
lea
mov
sub
lods
mov
inc
inc
addb
inc
imul
xchg
ret
mov
lret
std
test
mov
xor
jl
lret
jo
iret
iret
ss
dec
je
pop
sbb
cltd
stos
or
negl
push
fstl
lock
shll
xor
xlat
xor
jae
in
cmpsb
aad
lahf
adc
aaa
mov
cmpb
push
hlt
lahf
add
xchg
sbb
ret
into
cs
push
cmp
mov
adc
jno
das
test
scas
add
pop
in
gs
xor
xor
xchg
pusha
inc
mov
shlb
add
aaa
push
xchg
xchg
mov
aaa
fs
adc
sub
fldt
cmp
bound
and
leave
imul
push
ljmp
inc
addr16
out
sbb
insb
js
lahf
leave
lcall
and
xor
cld
jo
xchg
cmp
jb
imul
cmp
and
add
push
or
xchg
inc
and
in
das
jns
pop
popf
dec
and
cmpsl
jns
outsb
inc
xchg
inc
icebp
test
or
iret
leave
or
dec
jns
cmpsl
or
repnz
xchg
or
pop
in
adc
mov
mov
repz
movsl
xor
jge
dec
stc
pop
cmp
or
inc
lcall
cld
movsl
jns
insl
push
adc
jmp
pushf
jl
rolb
lods
push
test
test
dec
mov
in
pop
ss
lcall
fcmovnb
call
add
lret
xchg
cmpsl
cwtl
jae
pop
cwtl
dec
data16
shlb
outsb
mov
xor
dec
es
pop
push
mov
in
push
cli
cli
negl
jmp
jge
hlt
hlt
jbe
pop
sbb
push
ret
jns
inc
shrb
adc
cmc
pop
fwait
test
mov
pushf
mov
add
in
loopne
dec
out
sub
xor
pop
fisttpll
call
orb
sub
scas
sahf
nop
mov
push
lds
shl
sub
mov
ds
rorb
pop
fsubl
js
dec
mov
push
inc
sbbb
jge
and
test
and
push
add
mov
std
cmp
mov
fmul
cmp
roll
push
out
or
sbb
push
lock
xlat
add
repz
xor
xor
jo
dec
into
loop
sbb
mov
pop
lods
daa
in
cs
inc
js
rcr
jae
pushf
mov
jbe
ret
cltd
cmp
lret
xchg
mov
push
dec
popl
call
jb
lds
or
aad
mov
arpl
mov
setae
loope
sub
or
aam
and
inc
sbb
mov
mov
adc
lods
cli
push
xchg
add
in
push
sbb
in
les
lahf
popa
aam
lcall
sbb
or
sti
nop
scas
sub
fmuls
cli
mov
ret
das
je
jl
cwtl
mov
ja
lcall
jne
pop
movsb
push
ja
daa
jae
pushf
pop
pop
divb
and
sub
insl
ret
push
or
movsl
pop
movsl
lods
cmp
cmpsl
mov
shrl
fiadds
xchg
mov
push
pop
imul
movsb
sbb
xchg
in
fldcw
sbb
mov
push
sbb
xchg
fucomi
mov
sub
jg
insl
push
jle
xchg
pushl
jno
jg
insl
push
mov
lcallw
sbb
je
sub
rcll
jp
push
dec
outsl
xor
pop
inc
cs
mov
jnp
ror
test
sub
rcll
popf
mov
mov
mov
inc
lods
mov
sti
inc
movzwl
lcall
dec
adc
and
test
inc
push
pop
fisubl
int3
xchg
xor
adc
xchg
dec
mov
sbb
outsl
imul
andl
icebp
push
fistpll
xor
rcl
call
notb
cli
cld
popa
test
push
inc
insl
add
sub
mov
pop
add
out
inc
jno
or
arpl
lea
out
arpl
bound
out
pop
popf
push
mov
push
js
jo
adc
fsubp
dec
idivl
cmp
mov
test
jmp
and
scas
loop
iret
mov
dec
push
fidivl
sahf
mov
inc
insl
arpl
mov
iret
xor
xrelease
out
fisubrs
arpl
loop
mov
ret
jb
mov
adc
sbb
jnp
shll
sbb
mov
out
jbe
data16
insb
xor
mov
flds
lds
sbb
dec
stc
addr16
ja
ljmp
data16
pusha
test
test
mov
ds
mov
icebp
rorl
fwait
sub
dec
mov
fcmovnb
push
fisubrs
or
push
popf
ss
or
imul
aaa
addr16
daa
std
xchg
xchg
inc
scas
pop
dec
fdivl
js
dec
lds
in
xor
shlb
push
xor
mov
push
add
add
in
imul
daa
stos
mov
adc
out
jbe
fisubs
lahf
cld
mov
mov
mov
in
cmp
and
clc
sahf
in
in
sub
inc
sahf
cmpsl
pushf
lret
pushl
pop
or
xor
dec
push
cmpsl
lea
sub
cwtl
pop
jecxz
and
icebp
or
pusha
mov
cmpl
mov
push
jne
decb
and
ja
fsubp
or
push
ret
in
sti
call
das
shll
adc
add
insb
xor
aam
ja
jns
fisttpll
push
into
push
jle
mov
ret
adc
xlat
push
jnp
jmp
jbe
xor
sbb
stc
adc
repnz
popa
inc
adc
pop
mov
dec
fistl
cmp
push
call
pop
cltd
inc
jmp
or
lods
lea
push
cld
or
nop
pop
adc
icebp
or
add
jno
imul
mov
sub
ljmp
stc
sti
dec
mov
stos
jle
adc
movsl
fdivl
loopne
and
push
mov
scas
insb
loope
loope
jne
sar
mov
mov
xchg
aad
setno
into
dec
push
xchg
and
dec
jp
and
jno
cmpsl
mov
jns
lods
push
mov
push
xchg
clc
xchg
insl
xor
push
std
xor
mov
sbb
mov
fsubl
sahf
inc
test
push
inc
xchg
fsubs
shrb
add
add
dec
ds
je
ficomps
lret
add
cmpb
fildll
and
outsb
sahf
mov
sub
mov
fnstcw
or
xor
mov
pop
xchg
cmp
cmc
subps
xor
pop
sub
addr16
leavew
mov
fiaddl
mov
adc
push
add
js
daa
push
jo
xchg
rorb
or
xchg
jmp
test
div
sbb
dec
adc
call
inc
inc
push
adc
test
popa
movsl
repz
mov
test
pop
push
fwait
mov
xorb
adc
pop
cmp
jp,pt
sbb
gs
test
insb
lret
out
fistpl
test
jecxz
fxch
into
stc
cmp
lret
push
lock
push
ljmp
bound
xchg
ja
sub
pushf
ret
out
in
ja
fnstenv
sub
jl
mov
mov
outsb
dec
gs
out
lahf
in
or
cmp
mov
push
in
xchg
push
xchg
sbb
shl
push
adcb
repnz
jo
ja
shrb
cwtl
clc
and
hlt
and
clc
pop
shrb
and
jbe
xchg
lods
cmp
sahf
aas
push
pop
fwait
loope
mov
adc
jae
enter
dec
mov
xor
out
imul
and
mov
fildl
adc
xor
mov
and
cmp
sar
test
rorb
mov
pop
or
iret
xor
add
cmpsl
mov
cltd
pop
mulb
es
mov
outsb
sbbl
popf
addr16
icebp
ljmp
and
mov
pop
daa
push
jbe
lock
lods
shll
iret
inc
cmp
call
hlt
push
xchg
xor
std
ret
xchg
imul
ret
lret
adc
xchg
fs
mov
add
shrb
jmp
in
test
mov
jne
cmp
rorb
jmp
mov
ljmp
jbe
adc
mov
mov
inc
movsl
addr16
xor
inc
addr16
pop
cmp
xor
sbb
imul
sahf
fs
inc
imul
or
addb
xlat
add
fdivs
stos
mov
test
push
in
and
scas
jge
scas
ret
mov
test
push
mov
sub
pop
mov
enter
sub
cwtl
insl
dec
or
pop
and
push
leave
dec
je
xchg
pop
stc
xchg
scas
cmp
scas
test
push
neg
sbb
sbb
sub
xor
in
xchg
cmp
inc
dec
xor
ficoms
shll
xchg
inc
je
pop
out
lods
int3
icebp
pop
pop
cs
sahf
pop
nop
cld
fxch
mov
inc
adc
scas
push
pop
inc
imul
lcall
sbb
rol
int
in
dec
xchg
sbb
push
mov
or
int
push
rorb
or
cli
inc
jb
in
and
sbb
mov
arpl
inc
pop
in
xor
pop
int3
dec
out
push
mov
or
mov
test
iret
leave
je
adc
sbb
je
mov
xchg
aas
jp
lret
cwtl
jno
dec
lret
inc
push
mov
stos
cltd
mov
sub
inc
xor
sub
pop
mov
aad
jmp
ret
inc
dec
mov
lret
mov
or
sub
and
sbb
jecxz,pn
loop
out
jbe
test
lret
xchg
jge
jnp
pop
aas
repnz
sbb
cmp
and
insl
jp
or
mov
sub
mov
xchg
mov
fs
dec
push
pop
mov
ss
bnd
hlt
pop
out
push
push
nop
cwtl
xchg
add
inc
shlb
call
or
pop
neg
loopne
aam
pushf
fucomp
cmp
and
xchg
rcll
jb
sub
jp
cltd
lds
shrb
add
mov
sbb
mov
mov
mov
add
adc
and
push
push
inc
xor
inc
jl
aas
sbb
lods
xor
roll
and
stos
inc
lods
dec
mov
sub
outsb
test
adc
add
pop
cmpsb
jmp
rorb
push
sub
dec
and
dec
xchg
push
rclb
insb
jnp
dec
xor
adc
push
sti
pop
sti
loope
cmpl
ret
mov
call
das
push
std
push
negb
sbb
notl
adc
iret
cmp
in
mov
scas
stc
adc
cli
xchg
loop
push
jmp
out
jno
xor
rol
lcall
pop
movsb
lods
fs
jae
addr16
add
xchg
adc
inc
cmpb
cwtl
jecxz
fbld
cli
rorb
or
mov
adc
fcomi
inc
jmp
imul
xor
shrl
les
jmp
fisubs
aaa
push
into
iret
stc
jg
das
xchg
jb
pop
js
pop
cmc
push
fcoms
arpl
aam
in
add
mov
xchg
dec
adc
frstor
gs
and
mov
jno
pusha
dec
cmp
lods
les
pop
call
jmp
fs
out
mov
shll
push
cmpsb
jne
scas
loope
out
popa
add
or
lcall
push
sbb
fdivs
mov
adc
xchg
inc
xchg
das
adc
jge
push
test
pushf
repnz
dec
mov
pop
jge
fwait
unpcklps
insb
dec
imul
push
test
add
jle
adc
out
fistpl
sbb
js
call
or
dec
and
dec
ja
lret
scas
lcall
lret
mov
icebp
sbb
jnp
sbb
inc
in
mov
mov
es
pop
mov
jl
add
or
mov
enter
cmp
out
sar
mov
or
or
fisubs
fists
sbbb
nop
pop
int
push
or
stos
cmp
push
movsb
ds
dec
or
dec
and
sub
xchg
mov
sbb
and
pop
push
cwtl
loop
add
mov
dec
shll
pop
and
inc
loopne
fucomp
and
pop
push
jns
mov
into
sbb
add
xchg
add
and
sbb
test
lock
ficompl
mov
adc
cmpsl
and
push
mov
or
xchg
sub
addl
test
push
jo
xchg
and
cmp
push
inc
sub
jae
push
push
or
push
mov
dec
xchg
inc
push
stos
xor
add
lock
or
and
cmpsb
push
dec
repz
and
test
loopne
and
dec
loopne
mov
adc
lahf
jns
push
lods
int3
and
mov
dec
jle
jmp
cmpl
hlt
pushf
or
out
pusha
fildll
aaa
sbb
leave
fiadds
sbb
push
outsl
shl
xchg
sub
shll
repz
mov
xchg
xchg
pop
cltd
lods
pusha
adc
mov
stos
rol
mov
sarl
mov
bound
sti
sbbb
dec
and
in
cmp
pop
lods
hlt
inc
loop
and
cli
loop
lcall
repnz
mov
js
aas
lcall
pop
add
divb
stc
pop
pop
mov
cmp
dec
push
shll
mov
cmpsb
nop
inc
das
mov
push
stos
aad
addb
incb
rcl
inc
cmp
stc
cmp
push
stos
pop
sbb
sar
and
and
mov
xchg
xchg
mov
arpl
push
and
scas
ja
sbb
mov
fmuls
dec
test
adc
scas
popa
pop
shll
ss
cmpsb
aaa
push
adc
and
inc
out
xchg
push
or
sub
test
mov
mov
sbb
test
lds
xor
repnz
int3
ss
mov
mov
data16
cmp
lret
sbb
popf
in
pop
adc
pop
mov
pop
mov
lea
sub
pop
push
pop
mov
dec
repz
inc
lret
mov
je
mov
xchg
mov
hlt
aaa
xlat
mov
sub
shll
call
loopne
cs
psubb
lcall
cmc
rcrl
pushf
push
shl
ret
gs
push
popf
xchg
cmp
add
push
not
inc
dec
stos
out
ljmp
pop
or
insl
mov
inc
or
fcoms
loopne
jbe
adc
push
inc
jmp
sub
sbb
inc
mov
incl
div
pop
cmpsb
dec
ja
es
pop
lret
adc
mov
or
jg
inc
ret
adc
sti
push
jle
jge
cs
test
mov
xchg
sbb
xor
lret
lcall
mov
jecxz
dec
push
jb
ljmp
shl
push
xor
cwtl
cmp
into
xor
ret
cmpsb
xor
arpl
sbb
stos
inc
fnstcw
hlt
daa
cmp
push
jno
cmpsb
mov
jb
cmp
jmp
pop
xchg
popf
push
mov
push
sub
addps
cmp
mov
shll
pop
movsb
add
mov
ja
pop
loop
mov
iret
adc
sbb
addr16
mov
pusha
in
cltd
or
rol
loopne
iret
add
stos
std
iret
insb
jp
outsb
nop
scas
pop
pushf
int
xorb
xlat
insb
call
add
fildll
mov
mov
adc
jb
pop
xchg
fidivrs
xlat
mov
sub
scas
loop
test
jg
adc
std
cmp
ret
or
cmp
sbbl
mov
dec
push
loope
stos
inc
adc
fists
jl
lds
xchg
enter
xor
sbb
rol
jle
pushl
add
loopne
dec
mov
in
je
ds
leave
ret
call
ret
sarl
mov
dec
jno
push
jmp
imul
shr
inc
mov
xchg
adc
mov
arpl
cmp
jmp
xor
out
jb
mov
out
xchg
or
jecxz
test
mov
cwtl
ret
daa
push
cmpsb
test
mov
in
xchg
pop
loope
jg
cs
int3
or
pop
adcl
push
bswap
mov
scas
fcomip
mov
les
and
rolb
cmpsl
inc
imul
inc
cli
xor
mov
lock
ljmp
fsts
mov
sbb
cmc
dec
mov
dec
mov
out
paddsw
jecxz
xor
or
negl
add
addl
ret
xor
fs
cmpsb
sbb
push
jnp
jmp
loope
sub
xchg
fs
sub
cmp
add
insl
pop
pop
jnp
jge
ret
movsl
dec
dec
out
shlb
mov
out
dec
sbb
adc
mov
jnp
and
xor
mov
xchg
xchg
xor
cmp
ja
loope
xchg
data16
aad
xchg
rcll
adc
jp
jbe
mov
outsl
inc
cmpsb
das
sti
or
pop
mov
das
ss
pop
roll
xor
in
dec
leave
and
daa
push
out
cmpsb
out
xor
shrb
and
inc
fwait
jecxz
imul
movsl
cmc
int
cwtl
xor
push
leave
fsubrs
sbb
jnp
sbb
inc
push
in
inc
lahf
into
adc
loopne
jo
xchg
pop
mov
mov
stos
dec
mov
inc
repnz
pop
in
ret
std
sarl
jns
push
insb
pop
fimull
xor
std
cmp
mov
cmp
pop
pop
rol
push
out
jle
push
dec
jp
shr
push
dec
mov
jb
dec
insl
stos
push
dec
push
ret
dec
les
outsb
dec
scas
mov
cmp
xchg
test
test
fstpt
shlb
mov
mov
in
inc
dec
lock
mov
sbb
incl
gs
stos
out
sbb
inc
add
ja
clc
ja
push
lahf
das
scas
sbb
dec
pop
sbb
es
pop
pop
shll
and
and
xor
xor
fsubl
jne
jle
xchg
push
lret
lods
and
and
sbb
jmp
adc
and
shrb
jb
lcall
cmp
add
xchg
mov
insl
shll
mov
inc
mov
sbb
mov
jo
aaa
sbb
cmc
pop
mov
scas
xchg
push
push
insl
jo
lret
xchg
mov
jl
add
fstl
ss
add
cld
xor
cwtl
mov
in
xor
imul
test
adc
rcrb
aad
xchg
xchg
fcomps
in
jns
enterw
jp
mov
movsb
mov
dec
mov
loope
ds
dec
imul
in
pop
sahf
push
repnz
jp
sub
dec
cmp
cmp
mov
pavgb
mov
dec
inc
scas
cmp
fidivs
int3
adc
cmpsb
fwait
adc
or
jp
adc
fmuls
imul
jae
imul
loopne
push
push
sahf
add
push
xchg
scas
lods
mov
jb
scas
jne
push
mov
pop
into
pop
dec
jns
lods
xor
dec
icebp
pop
loop
push
cwtl
mov
mov
pop
repz
jae
sub
cmp
sub
inc
out
xchg
cmp
shlb
add
js
inc
adc
int
lds
pop
mov
out
jb
mov
sub
push
cmp
sbb
push
arpl
xlat
xchg
cmc
fstpl
test
xchg
scas
test
movl
pop
int3
xchg
rolb
ret
fwait
inc
out
jle
test
mov
sbb
mov
pop
lcall
je,pn
dec
pop
fnclex
xchg
jo
add
stc
dec
mov
xchg
adc
xchg
fwait
xchg
in
lcall
in
in
pushf
mov
jmp
adc
and
pop
rorb
mov
lea
mov
outsb
jns
xor
repnz
sbb
mov
arpl
sub
mov
daa
adc
stos
fldl
pop
jmp
jge
cmc
add
mov
or
xor
arpl
out
vmread
daa
mov
leave
imul
mov
xchg
dec
ja
lods
addl
cmpsb
int
push
mov
mov
insb
sub
sub
in
sub
fcoml
sbb
xchg
dec
pminub
movsb
imul
mov
jl
and
call
adc
fiaddl
jo
xchg
aas
xchg
js
mov
ds
bound
xlat
pop
aas
jp
pop
fistl
insl
pop
mov
mov
inc
fs
add
sbb
fisubs
adc
pop
lret
call
add
fstps
adc
sbb
call
loope
rcll
sbb
jbe
outsb
stos
mov
in
push
pop
out
sbb
ret
sbb
stc
repnz
push
fsubs
jno
fwait
rcll
addr16
pop
repz
std
gs
jecxz
mov
ret
sbb
cmp
sbb
mov
jae
adc
call
idivl
adc
aaa
adc
cmp
cmpsl
push
or
insl
dec
xbegin
adc
imul
aad
sbb
shrl
scas
or
push
fucomip
dec
sbbl
leave
std
cmp
cmp
imul
mov
mov
mov
sbb
shlb
lods
jno
fwait
jecxz
leave
jno
sbb
imul
lds
xchg
push
jg
xor
xchg
aaa
adc
cmp
and
xchg
xchg
and
jecxz
or
jae
icebp
push
cmp
mov
lods
push
ds
dec
add
jge
mov
rcll
fwait
hlt
out
in
pushf
in
ffree
mov
cmp
test
call
lret
inc
fwait
movb
insb
bound
mov
jle
xchg
xchg
mov
les
popf
loopne
jno
stos
fs
cmp
or
cld
fisubl
outsb
outsl
popa
clc
sub
lret
jg
push
pop
and
mov
pusha
hlt
dec
add
inc
out
hlt
lds
ror
mov
jecxz
cs
push
movd
je
int3
mov
and
call
movups
mov
movsl
push
mov
out
hlt
push
jns
push
pop
pop
jle
xchg
push
fiaddl
lea
xchg
and
dec
cld
cmpb
or
shrb
gs
mov
inc
andb
cmc
bound
cmp
push
inc
imul
mov
push
add
xchg
sub
out
std
loop
xchg
adc
dec
mov
fcoml
dec
push
sbb
in
bound
clc
cmp
ror
pop
aam
and
push
and
push
and
loop
aaa
and
fnstcw
mov
stc
sub
cmpsl
cs
nop
add
inc
rcll
mov
outsb
out
sarl
mov
pop
mov
fidivrl
cwtl
dec
sti
gs
out
repz
pusha
nop
jg
cmp
sbbl
cmp
xor
addl
fisubrl
cmp
scas
or
movsl
fisubs
test
sarb
je
insb
addl
test
or
lds
idiv
mov
shrb
loope
aad
push
leave
movb
and
js
mov
dec
scas
pop
xchg
jae
push
mov
aad
xchg
add
sbb
lahf
adc
xchg
mov
arpl
pop
insb
and
in
lods
or
jg
mov
mov
or
sarl
movsb
mov
jae
push
dec
shlb
out
ja
out
sbb
sub
lea
nop
cmpsl
jnp
mov
fnsave
insb
sub
ucomiss
mov
push
pop
inc
push
pop
sub
jne
cld
jp
icebp
push
ljmp
enter
bnd
inc
push
movlps
popl
push
stos
dec
jns
add
popa
or
mov
push
fsubrl
push
inc
mov
mov
scas
cmp
lock
test
outsb
lret
in
adc
addr16
push
cmp
ficoml
adc
mov
pop
test
lods
mov
jae
adc
dec
lea
mov
mov
inc
lea
outsb
sbb
fsub
stc
aad
arpl
js
hlt
std
jmp
mov
inc
out
push
fwait
jb
fisttpll
mov
nop
jne
inc
xor
xchg
adc
sbbl
sahf
stos
andl
test
int3
popf
sbb
fs
cld
jge
jl
pushf
add
std
sub
sbb
or
cli
movsl
sbbl
rcrb
orb
dec
mov
or
enter
push
arpl
push
or
mov
adc
add
or
in
jo
scas
add
adc
dec
mov
jne
daa
imull
pusha
dec
mov
enter
data16
jmp
add
jae
mov
shlb
sbb
jmp
imul
jmp
sub
push
dec
mov
fstpl
xor
aaa
xchg
aad
ss
lods
mov
jmp
sbb
jnp
dec
scas
fldt
dec
ja
aad
pusha
mov
jb
jbe
sbb
mov
pop
cmp
imul
xor
arpl
and
sub
fstpt
rorb
pop
cwtl
stos
pop
xchg
cmp
aam
mov
push
pop
lock
int
test
xchg
xor
mov
mov
jbe
scas
js
push
push
push
mov
loopne
cmp
lds
xlat
aas
push
lds
push
jle
outsl
pop
jne
pop
lcall
add
repnz
pop
loopne
dec
inc
nop
or
addl
aad
dec
sbb
and
jp
add
cs
push
loop
mov
push
xchg
lret
pop
inc
inc
pop
mov
in
fcmovu
cmpsb
jge
xor
dec
scas
pop
out
mov
js
mov
daa
arpl
xchg
and
stos
vmulps
ja
sbb
and
lahf
aad
sub
mov
push
xchg
xlat
movsb
mov
cmp
add
xor
or
dec
data16
sub
movups
jbe
sub
inc
adc
addl
jmp
lcall
insl
test
sub
xchg
add
push
sub
das
fcoml
jle
stos
jecxz
bound
sbb
clc
cs
lods
sbb
lret
sbb
fsubr
push
mov
sub
add
and
outsl
pushl
jbe
int3
pop
pop
pop
xor
sbb
mov
ds
jnp
mov
addb
inc
fldcw
aad
mov
mov
xchg
push
rol
sbb
dec
cmp
jbe
add
or
lcall
cwtl
in
in
pop
lahf
inc
test
push
xlat
mov
push
cltd
sub
mov
mov
sti
fcoms
aaa
adc
dec
mov
call
cmc
ret
inc
pop
pop
mov
pop
bound
jmp
inc
xchg
add
sbb
mov
sbb
add
ss
jecxz
stc
or
addr16
mov
out
push
adc
ret
mov
cltd
sbb
push
pop
adc
cli
lcall
pop
ds
mov
sbb
xorb
mov
mov
sarw
jmp
cmp
mov
cs
mov
dec
outsb
or
sbb
add
dec
mov
sbb
or
mov
mov
flds
sbb
adc
nopl
popf
add
push
fiaddl
lods
add
sbb
and
add
or
test
push
aaa
int
mov
popf
sbb
lds
sub
jmp
mov
inc
repnz
addr16
xor
jcxz
xor
fdivrl
add
jmp
xor
lcall
ret
and
cmp
sub
aad
adc
sti
inc
dec
cmp
icebp
mov
lcall
jno
or
je
and
mov
and
mov
test
pop
lret
into
adc
sub
add
jns
push
mov
cmp
cmc
sub
sbb
cmp
cwtl
insb
lret
cmp
and
dec
add
pop
aaa
int3
xchg
test
adc
cmp
sub
loop
icebp
lahf
sbb
sub
outsb
aaa
or
xchg
sti
xchg
push
fisttps
xlat
xlat
movsl
add
fwait
stos
lcall
mov
sub
cmp
inc
nop
or
cmp
lds
sub
sahf
jge
mov
or
idivl
push
or
call
xor
or
add
cli
arpl
adc
sbb
in
js
ret
cmpsl
mov
test
je
sar
mov
sub
int
dec
mov
aas
clc
pop
sbb
xor
sub
movsb
lcall
xor
loope
pushf
xorl
je
push
mov
adc
mov
iret
cli
lahf
test
outsb
repnz
add
mov
imul
push
push
scas
sahf
loope
push
jnp
push
and
jp
cld
fsqrt
movsl
repz
imul
adc
or
push
loope
inc
movsb
pop
hlt
lret
inc
jg
xchg
adc
lret
mov
mov
jge
pop
iret
nop
push
mov
lret
cmpsl
jmp
or
ret
xor
fs
sub
jo
add
add
xchg
add
shl
lret
xchg
stos
gs
pop
lahf
call
mov
adc
mov
cmpb
mov
sahf
aaa
jge
in
cmp
mov
mov
or
jne
jmp
outsl
or
hlt
popa
mov
and
xchg
ss
lahf
fs
jg
mov
push
js
and
ret
mov
push
cs
je
adc
inc
xchg
push
jmp
icebp
or
pop
add
sbb
pusha
adc
xchg
rorl
cmp
clc
push
mov
sahf
dec
push
loope
repz
test
or
mov
mov
xlat
mov
lret
ja
cmc
cmpsl
dec
or
mov
sub
cmp
into
inc
ret
test
sbb
loopne
jl
test
or
sub
addr16
ja
xor
hlt
mov
push
ss
aad
push
and
pushl
lret
ja
sbb
clc
dec
cli
cmp
dec
pop
push
xchg
shlb
jle
inc
pop
sbb
scas
in
out
push
in
pushf
cltd
insb
inc
lods
fs
lods
push
xchg
add
xchg
inc
push
push
mov
test
aam
cmp
in
mov
fldl
adc
cmpsb
test
sub
push
call
push
mov
pop
lret
sbb
aad
pop
out
fistpl
cld
or
mov
or
mov
inc
xchg
mov
je
push
xor
in
loopne
filds
and
std
lea
push
xchg
das
movsl
mov
in
fcompl
xchg
cmp
push
fists
jl
dec
lock
jle
in
jecxz
sbb
mov
movsb
cwtl
leave
mov
movl
fiadds
xchg
stos
or
adc
subl
add
les
xlat
cmp
imul
mov
ret
mov
mov
inc
jbe
daa
jp
test
xor
fildl
arpl
testl
xchg
aaa
xchg
adc
mov
inc
inc
stc
notl
cs
xchg
lret
push
fists
loopne
xchg
and
nop
cmp
into
and
mov
dec
mov
add
lods
inc
test
sarl
push
jle
inc
mov
js
cmc
push
push
inc
cmp
sub
jmp
push
xor
pop
sbb
lods
add
sbb
imul
jge
push
cwtl
inc
sub
mov
outsb
pop
aaa
aam
add
mov
or
dec
mov
mov
xor
xor
pop
and
mov
inc
xlat
subps
push
shrb
popf
ljmp
adc
inc
out
xor
jbe,pt
and
sbb
pusha
mov
pop
lcall
test
rcrl
jo
leave
sbb
xor
jb
adc
test
sbb
lods
mov
mov
pop
lods
pusha
ficomps
imul
int
imul
mov
jae
sti
js
pushf
xchg
cmp
movl
dec
hlt
mov
aam
mov
das
jo
iret
nop
and
mov
xor
jne
add
gs
mov
jge
test
inc
cmp
jle
dec
jne
jg
test
inc
mov
and
aam
aas
sbb
adc
ljmp
cli
stos
push
inc
scas
fsubl
or
imul
ret
pop
adc
dec
aaa
subb
push
scas
jp
push
cmp
mov
and
mov
orl
lods
movsb
and
stc
sbb
into
adc
mov
ficomps
pop
outsl
mov
xchg
push
jp
pop
push
aam
popl
repz
lods
into
xchg
mov
xor
cmpsb
or
inc
push
dec
cmpsl
dec
incb
ret
ficompl
in
jge
clc
jle
push
rcrl
sub
mov
mov
repz
popa
ss
leave
adcb
leave
pop
push
jp
pusha
mov
incl
xor
inc
mov
pop
push
jb
sahf
das
clc
fidivs
shll
mov
test
fwait
pusha
mov
les
ret
jnp
cmp
add
dec
cmp
push
mov
push
add
dec
and
jnp
fsts
mov
sub
in
sbb
or
imul
mov
movsb
add
sub
push
sbb
mov
mov
adc
out
push
push
pushf
aad
xchg
cwtl
lea
pop
pop
xchg
cmpsb
cli
ja
in
adc
mov
lea
sub
cmp
das
xor
lret
lds
movsl
or
pushf
rorb
jp
dec
dec
test
sub
addr16
shll
sbb
fstl
lcall
adcb
fists
cwtl
icebp
lock
lods
xor
rcrl
test
and
call
push
movsl
in
add
xor
cli
pusha
push
jge
int3
adc
cld
and
pop
rcll
movsl
or
sub
aam
cmc
insl
and
sbb
jo
loop
jle
pop
sbb
inc
popf
stos
jns
test
stos
lahf
xchg
push
out
scas
push
inc
mulb
xor
ss
loope
sbb
xor
mov
sub
sbb
pop
pusha
mov
and
xchg
cmp
jecxz
pop
iret
sub
sbb
int
ss
xor
imul
fisubrs
xor
sti
std
lods
cmpl
mov
or
das
sti
je
imul
mov
cwtl
icebp
jl
mov
dec
cltd
inc
sub
xor
stos
adc
fmuls
mov
dec
sub
pop
add
jb
in
adc
sub
loopne
call
addb
lret
pop
subl
sub
add
xor
popa
inc
pop
dec
rcrl
push
xor
xchg
mov
xor
test
lcall
xchg
loope
fisubl
sti
push
mov
jmp
aas
jae
shrb
sub
arpl
jne
sbb
bswap
test
call
sbb
cli
in
fstpt
xchg
sub
sahf
enter
jo
in
mov
aad
enter
fsubl
ja
ret
push
arpl
and
js
push
ss
pop
movsb
sub
mov
adc
fildl
add
inc
push
mov
cmp
les
lret
sub
mov
daa
adc
fnstenv
xchg
mov
popa
addb
mov
mov
fnstsw
jns
das
in
dec
addl
dec
xchg
inc
mov
xor
out
mov
iret
and
aad
dec
mov
out
cmc
into
adc
int3
test
pushf
mov
sub
call
enter
gs
das
push
gs
and
out
es
mov
xchg
mov
add
mov
clc
testb
pop
lret
das
jp
imul
and
push
pop
fcomi
int
or
stos
push
inc
xchg
test
ret
popf
sbb
and
inc
out
cwtl
adc
or
jb
ficoms
lea
add
scas
xor
popf
sbb
jmp
pop
mulb
push
add
fldenv
mov
testb
jbe
div
cmp
test
xchg
mov
cld
dec
pop
rcrl
sub
sub
call
test
cmp
dec
hlt
aam
in
out
mov
adc
mov
or
push
out
movsb
lcall
sbb
aas
xchg
outsl
out
cwtl
adc
scas
ficoml
mov
xchg
xor
mov
imul
mov
out
mov
loope
mov
fldt
test
xlat
lock
pushl
and
mov
cltd
insl
pusha
xchg
xor
lahf
push
mov
shrl
xchg
xor
and
pop
lcall
test
in
xchg
or
call
leave
xchg
stos
stc
xchg
push
dec
pop
cmp
or
or
adc
mov
lcall
mov
sub
test
out
add
push
pop
test
dec
aas
adc
into
push
dec
pushf
jg
add
clc
es
or
xchg
out
add
mul
jmp
fisubrl
insb
add
imulb
lea
stos
scas
jno
pushf
mov
push
xor
sub
cmp
pop
fdivs
pop
pop
imul
mov
aad
pop
cwtl
xor
int3
std
call
popf
dec
bound
int3
jle
mov
dec
test
mov
mov
sub
int3
xchg
icebp
add
push
cmp
fcmovb
or
cmp
mov
cs
iret
pop
sbb
push
adc
repnz
mov
pop
jle
dec
cmc
mov
mov
push
xorl
lret
sub
hlt
loop
jl
movsb
and
repnz
push
dec
in
xchg
cmp
mov
loope
xchg
mov
loope
fidivrl
mov
cld
and
dec
pop
push
dec
ds
jle
adc
push
jle
shl
cmp
fsubrs
sbb
add
pushf
loopne
xchg
pop
mov
dec
les
sarl
lahf
xor
aam
pop
nop
cmp
mov
fincstp
jmp
sub
cmp
daa
aam
lods
add
xor
nop
mov
daa
xor
xor
in
fsubl
fistl
pop
jmp
into
dec
jmp
hlt
mov
insl
pop
pop
test
in
test
push
mov
les
adc
xchg
push
sbb
sub
add
mov
loop
or
sub
add
arpl
jo
in
push
gs
fwait
sbb
sub
cmpsl
mov
or
mov
loope
xchg
ss
push
mov
xchg
icebp
push
test
inc
xor
clc
sbb
iret
arpl
sub
outsb
orb
mov
ret
xchg
fisubrl
xor
mov
cld
loope
mov
adc
pop
and
loope
out
cli
dec
pop
pop
and
aam
push
cld
inc
lret
stc
dec
les
pop
xchg
mov
pop
sub
dec
test
and
lret
test
mov
loope
in
push
cli
inc
and
sbb
loop
and
xlat
bound
adc
inc
test
adc
push
sub
push
jmp
add
les
pop
cmpsl
test
and
mov
int
push
insb
xor
int3
js
in
and
push
rorl
fistps
inc
mov
mov
nop
push
clc
xor
clc
xor
and
push
in
aaa
imul
push
outsl
dec
inc
mov
sub
gs
jp
sub
jns
add
aam
adc
lods
cmp
or
mov
imul
in
cmp
adc
or
test
dec
daa
bound
nop
xchg
xchg
and
mov
sub
xchg
push
mov
xchg
mov
inc
dec
enter
dec
adc
sar
into
push
lea
add
push
outsb
push
shr
inc
inc
in
ret
shlb
std
mov
xor
jp
jg
or
sbb
push
mov
sbb
mov
pushf
mov
movsb
cmpsl
push
shlb
mov
xor
mov
pop
cmp
mov
insl
and
and
push
mov
int
inc
fsubrl
push
sub
jge
mov
mov
push
int
mov
dec
fldl
mov
or
jbe
mov
xchg
push
push
dec
mov
in
xchg
out
out
ds
int
incl
inc
pop
mov
or
adc
loop
xor
jno
xor
or
scas
mov
cmpb
or
xlat
mov
add
pop
fwait
arpl
mov
mov
push
or
cmovo
bound
loop
dec
mov
ficompl
dec
dec
jne
ret
pop
test
subl
jle
push
stos
or
aad
cmp
or
repz
jl
dec
jp
dec
mov
or
xor
mov
gs
and
test
mov
push
inc
push
jnp
mov
hlt
inc
or
rcrl
sahf
xor
pop
ss
xchg
cmpsl
lcall
mov
mov
lock
sub
cmp
arpl
pop
mov
insl
bound
addr16
cmp
test
aas
ljmp
cmp
sbb
sar
cmp
and
cli
and
xchg
sbb
aaa
sarb
fmull
xor
std
stos
pop
pop
xor
xor
es
repnz
xor
shlb
lcall
or
daa
dec
enter
pop
movl
in
ret
jns
ljmp
std
repnz
sbb
fnstenv
sbb
test
stos
xchg
push
push
sbbl
push
dec
cld
out
jp
cld
rorl
ljmp
stos
scas
sbb
dec
mov
and
insb
mov
push
iret
and
incb
xchg
bound
inc
fs
movl
and
mov
dec
xor
lea
mov
or
js
in
imul
ja
in
in
mov
test
je
cmp
cmp
mov
sub
push
stos
push
and
pop
andl
shlb
pop
ret
popa
aaa
adcl
call
aaa
aas
sbb
dec
mov
das
js
fs
pusha
imul
and
mov
dec
pop
aaa
mov
in
repnz
mov
ljmp
pushf
movsb
fsub
ficoml
cs
fstpt
jmp
ljmp
cmp
push
sub
stc
mov
bound
mov
sub
jge
sbb
imul
push
pop
cltd
mov
js
insb
jno
mov
movl
cltd
and
mov
cmpsb
mov
xor
loopne
stc
cwtl
or
add
rcrl
push
mov
pusha
sahf
mov
cltd
clc
mov
mov
dec
negb
icebp
inc
adc
xchg
xchg
push
xor
dec
cmpsb
mov
flds
aaa
pop
ret
jb
call
jbe
into
rol
sbb
dec
sbb
sub
imul
sub
sub
push
cld
sub
mov
xchg
push
test
jbe
loope
push
lods
pusha
pop
repnz
jnp
in
and
cld
hlt
jmp
pop
push
sbb
call
fcoms
aaa
sbb
lods
in
adc
std
pop
popa
data16
mov
sar
xlat
cmpsb
jmp
sbb
aam
jo
xchg
pop
mov
push
and
rorb
icebp
dec
sub
dec
in
xor
add
std
cmp
scas
stos
mov
test
pop
push
arpl
and
push
jmp
mov
in
pop
lea
mov
adc
push
jae
or
sbb
mov
sti
or
or
xlat
pop
add
pushf
loopne
lahf
pop
fs
lds
lret
jne
mov
jo
sub
mov
cs
add
xor
lds
out
xchg
scas
pop
cld
or
cmpsb
pushl
adc
pop
rcrb
jge
mov
inc
push
fs
dec
cmp
push
mov
and
jl
mov
aad
mov
sub
je
and
bound
xchg
cmp
inc
push
pop
shll
imul
dec
or
sub
dec
jl
aam
es
insb
mov
mov
jno
ja
sahf
movsb
lock
out
test
adc
fistpll
call
jecxz
icebp
pop
jae
push
rclb
lcall
cmp
jno
lcall
push
add
mov
test
pop
jl
inc
mov
lret
jnp
adc
loopne
aam
cmp
clc
jo
adc
mov
test
pop
gs
imul
or
add
rorl
lahf
das
fimull
in
inc
mov
xchg
js
fwait
hlt
xor
dec
push
xchg
fwait
sbb
mov
adc
dec
bound
cmp
cmp
jmp
in
outsl
jge
push
mov
out
enter
jecxz
cmp
inc
xor
das
sub
loop
negb
push
pop
inc
pop
lock
pop
ret
pop
cli
ss
xor
xor
mulb
adc
movsl
cmp
hlt
out
outsl
test
insl
andb
and
mov
fstl
and
mov
stos
loopne
mov
mov
sbb
sub
ret
repz
push
ds
cltd
mov
mov
sti
inc
xchg
dec
cmp
js
dec
xchg
imul
dec
sub
sub
stc
mov
pop
lds
in
aad
dec
mov
mov
and
enter
mov
fimuls
xor
nop
add
cmp
outsb
fwait
in
call
sub
add
int
or
xor
sbb
xor
ror
hlt
out
test
rorb
push
outsl
arpl
jne
sti
mov
jno
leave
mov
adc
pop
in
mov
imul
dec
insl
dec
ds
push
jae
pop
xchg
arpl
cmp
jl
and
mov
fldenv
and
sbbl
dec
push
sahf
xchg
mov
and
rcpps
outsb
js
push
cmc
mov
jae
in
pusha
lock
out
xor
outsb
data16
push
push
addr16
mov
and
mov
shrb
push
mov
or
mov
xchg
pop
jbe
cmp
or
data16
cmpb
cmp
fstp
xchg
add
adc
dec
stos
jno
ja
jno
push
cli
sbb
loop
mov
outsl
roll
inc
sbb
mov
push
cli
jb
pop
or
loop
pop
mov
jnp
adc
lret
jmp
cmp
bound
push
jnp
imul
jno,pt
lcall
hlt
mov
adc
pushf
push
and
pop
int3
insl
sbb
lcall
adc
insl
mov
stc
mov
cmp
pop
bound
out
std
ficoms
cmp
dec
xlat
adc
cmpsl
loopne
int
inc
test
sub
mov
in
in
mov
cmp
mov
out
loop
inc
sbb
push
js
xchg
add
rcrb
es
test
and
mov
pop
lods
or
sub
popf
cmp
cmpsb
pop
ficompl
je
lea
pop
inc
ja
fldcw
loopne
loopne
sbb
or
les
fucomi
mov
and
rorb
jo
scas
fstl
xchg
out
aas
or
inc
push
pop
sbb
stc
sub
les
jae
ss
sbb
int3
mov
sbb
pop
fldcw
ret
mov
loopne
dec
js
mov
xor
in
lds
rcrl
sarl
jno
outsb
mov
jle
dec
dec
xor
rol
push
addr16
clc
outsl
ja
xor
loope
xor
loop
xchg
push
ljmp
or
adc
jle
xchg
or
lods
pop
adc
and
adc
lds
leave
lret
fnstsw
loopne
pop
and
mov
mov
inc
mov
sti
and
jmp
lcall
out
out
or
mov
stc
pop
popa
lods
cmpb
mov
icebp
sahf
shl
roll
cwtl
leave
mov
aas
dec
insl
in
jns
sub
xchg
lock
fiaddl
mov
pop
test
cmp
into
mov
sub
lods
mov
movsl
les
not
addr16
xchg
adc
push
adc
inc
es
mov
lods
pop
lret
or
int
movsb
adc
sub
std
shl
push
and
sbb
arpl
add
aas
jae
sbb
jns
das
inc
adc
mov
mov
ret
add
pop
pushf
cmpsl
fcompl
jno
les
sahf
mov
imulb
jl
mov
dec
mov
lret
mov
scas
jge
addr16
cltd
xlat
jbe
insb
xorl
pop
jecxz
out
clc
mov
clc
dec
lret
jno
push
push
call
mov
xchg
cmpsb
adc
stos
push
aas
aaa
gs
sbbb
adc
ret
cmp
push
inc
popa
in
mov
and
xchg
jno
into
pop
mov
and
add
insb
dec
iret
fwait
xchg
pushf
insl
hlt
into
pop
mov
inc
jle
jne
addr16
or
inc
push
jge
jmp
pop
into
pop
and
push
popa
int
sub
rcl
fistl
adc
jle
shlb
push
enter
pop
jecxz
sub
sbb
cmp
out
hlt
je
sub
sbb
gs
push
or
push
sbb
subl
add
adc
push
or
cmpsb
jb
jae
mov
and
dec
cs
nop
adc
inc
jge
insl
lea
or
movsb
mov
sub
int3
and
out
sbbb
mov
call
stos
push
insl
mov
inc
pusha
cmp
xor
mov
or
into
cmp
incb
sub
pop
or
or
scas
enter
bnd
xor
and
mov
std
pop
xor
pop
sub
lea
mov
call
ds
out
in
jb
enter
enter
notb
dec
mov
lcall
les
bound
dec
addb
les
xchg
push
cmp
mov
insb
mov
lahf
xor
decl
xor
jne
xor
enter
aaa
iret
push
dec
pop
in
pop
push
leave
mov
faddl
sub
dec
xor
test
mov
add
stos
mov
jecxz
jno
mov
ljmp
shlb
imulb
enter
lock
out
or
sbb
outsl
and
fildl
and
loope
adc
lcall
les
in
sbb
or
sbb
jns
inc
insb
cmp
sub
cli
and
lahf
and
jnp
sub
gs
cltd
adc
das
popa
or
sbb
gs
sub
push
pop
pcmpgtd
rol
jno
mov
in
push
jns
mov
sbb
mov
repz
xchg
cwtl
pop
xchg
cwtl
jno
cli
add
push
sbb
cmp
dec
and
cmp
jnp
lock
or
xor
sub
std
andl
jl
fstpl
inc
and
lea
bound
jl
cltd
outsl
adc
dec
mov
push
out
pop
jge
push
ds
loope
or
movsb
enter
push
pop
and
mov
lods
and
push
mov
pop
mov
jnp
mov
mov
sbb
into
in
sub
loope
cltd
addr16
sub
out
bound
out
outsl
cmp
add
jp
pop
cmpsl
adc
xchg
xchg
inc
mov
loopne
insb
mov
out
mov
sbb
std
into
mov
xchg
pop
mov
imul
mov
icebp
add
xchg
mov
in
jae
adc
inc
push
and
jmp
into
lods
xor
xor
push
movsb
loopne
sbb
push
fcmove
and
nop
hlt
mov
or
test
fwait
popf
scas
and
sub
outsl
xor
inc
insl
push
and
adc
lret
jmp
push
fdivrl
outsl
gs
jno
inc
test
and
mov
aad
adc
jns
mov
pushf
xor
xchg
hlt
es
pop
fstp
xchg
sub
aaa
in
rol
lret
sub
jl
sbb
pop
and
fstpt
arpl
pop
imul
das
fadds
sbb
pop
inc
add
add
adc
mov
mov
mov
cmc
fbstp
push
sub
andnps
xchg
loope
mov
daa
adc
lods
push
sbb
test
insb
in
add
sbb
mov
cld
adc
imul
insl
dec
push
pushf
cmpsl
push
mov
mov
rcrb
lret
inc
jbe
xlat
or
scas
test
pop
inc
stc
ljmp
push
adc
icebp
cltd
adc
xchg
mov
jle
movsb
scas
arpl
jle
add
aaa
in
add
sub
lret
lcall
mov
popa
sbb
cmp
popf
call
adc
xchg
lahf
rorb
and
or
sbb
sbb
sub
push
repnz
xor
pop
insb
adc
insb
xchg
sti
dec
pop
jge
inc
in
xchg
std
mov
hlt
mov
fwait
pop
fs
lea
inc
loopne
sub
cmpb
and
aam
je
xor
lods
add
or
pop
roll
cmp
jecxz
out
jl
dec
cmpsl
sbb
mov
test
sub
loope
inc
or
cmp
bound
and
push
adc
xchg
adcb
inc
cld
flds
adc
inc
jecxz
adc
insb
out
xor
cltd
es
inc
mov
jno
inc
xchg
sbb
std
in
mov
int
js
and
lods
mov
mov
das
dec
sbb
sub
jbe
or
repz
hlt
push
loopne
inc
cmp
addr16
lds
pop
into
adc
pop
xchg
lock
in
sbb
and
out
jbe
jbe
int3
push
cld
inc
outsb
in
xchg
and
addb
mov
rclb
leave
shrb
push
and
test
add
out
popa
ja
dec
mov
cs
mov
mov
lahf
sbb
fst
inc
scas
adc
aas
in
sbb
jmp
sub
cmp
and
sti
jle
rorb
popa
aam
test
inc
stos
mov
jo
data16
and
and
mov
xchg
or
ljmp
stc
or
and
sub
orb
out
fiadds
hlt
add
fwait
dec
push
dec
daa
addr16
pop
cmp
mov
mov
addr16
mov
sub
inc
sbb
cmp
popa
inc
sub
mov
fdivrs
test
cwtl
push
into
outsl
jo
jp
test
sbb
dec
xchg
jns
xchg
test
mov
add
aad
push
fcmovnu
mov
frstor
fwait
notb
jecxz
or
lret
sarl
test
outsl
xchg
push
mov
inc
rolb
and
sub
jp
insb
dec
loope
jnp
sub
insb
insb
pop
hlt
adc
and
jne
fisubrl
pop
pusha
lock
sti
mov
push
pop
sub
mov
aad
mov
and
xor
xchg
insl
js
add
pop
cli
adc
xor
aaa
sub
bound
pop
xor
stc
clc
cmp
fimull
lds
mov
sub
sbb
add
and
push
push
mov
cs
cmp
cmp
gs
enter
fnsave
lock
push
inc
pop
bound
loope
std
inc
cltd
enter
cmc
push
add
and
repnz
repz
push
out
sti
loop
in
inc
call
mov
mov
daa
mov
pushf
lgs
push
lock
push
jp
jp
mov
mov
xor
fsubrs
mov
sbb
adc
or
jg
out
sbb
lods
mov
lcall
mov
bound
sti
ret
orl
and
add
pop
sbb
mov
leave
dec
inc
pop
add
adc
cld
dec
lcall
or
incb
sub
stos
movsb
ror
testb
push
test
clc
je
scas
fistl
lret
sarl
fs
mov
and
fdivrs
pop
fildll
mulb
push
mov
pop
repnz
mov
inc
and
outsl
xchg
pop
and
out
mov
mov
jg
dec
add
xchg
leave
shrb
xor
add
dec
mov
fbstp
mov
mov
push
push
repz
adc
fmul
addb
test
add
mov
and
push
nop
adc
sub
pushf
iret
mov
pop
inc
insl
cmp
out
inc
popl
dec
push
andb
jno
sbb
add
rorl
outsb
and
xchg
loop
loopne
ret
xor
fidivrl
push
add
xor
push
sbb
jno
out
stos
sbb
sbb
inc
pop
xchg
cmc
or
push
call
jo
adcl
fidivl
lahf
mov
jo
outsb
faddl
in
sub
enter
sub
mov
and
shrl
aaa
adc
dec
mov
jle
loope
add
ficoms
out
mov
mov
dec
dec
xchg
push
sbb
ljmp
inc
jge
add
lret
fadd
add
cld
xor
sub
jnp
pop
xchg
jmp
out
aas
or
jae
shl
dec
sub
xchg
inc
sub
mov
loop
sbb
mov
or
hlt
ss
inc
test
push
add
push
adcl
jmp
cld
mov
decl
cmp
dec
sahf
out
mov
push
icebp
xchg
inc
adcl
sbb
imul
shrl
in
mov
lods
sbb
cltd
xchg
push
jmp
js
insl
dec
cltd
mov
inc
ss
mov
mov
sbb
mov
inc
mov
loop
cmp
push
inc
movsl
outsl
mov
sub
push
mov
jno
and
shll
insb
pop
subb
sahf
push
jg
sbb
mov
mov
lret
jbe
iret
xchg
and
stc
lds
xchg
ljmp
or
adc
cmp
jnp
ds
inc
dec
mov
push
in
pop
emms
jno
pushf
sbb
inc
cmc
mov
cmpsl
sub
scas
aas
aaa
cltd
push
ficompl
inc
xor
enter
and
rclb
insb
push
das
lods
test
aaa
sub
and
sbb
push
adc
and
andl
lods
jle
aad
jne
jp
cmp
imul
test
lahf
mull
loopne
clc
mov
rorl
add
lcall
dec
enter
cld
inc
aas
dec
pusha
dec
or
mov
sbbb
loope
xchg
js
aaa
sub
pop
dec
icebp
inc
into
popa
jb
jns
lahf
adc
test
mov
lea
cmpsb
sbb
mov
int3
sbb
jo
lea
in
ret
push
out
dec
lret
bswap
sti
and
es
cmp
sahf
test
sbb
out
ljmp
mov
int3
xchg
test
frstor
xchg
aad
inc
mov
add
stos
cmp
push
aaa
shll
or
adc
pop
mov
je
in
lea
shr
mov
pop
std
and
or
jmp
addl
push
fidivrl
cmpb
push
inc
nop
inc
cmp
and
dec
jae
add
das
pushl
lret
ljmp
daa
mov
push
int
mov
test
sbb
cwtl
outsb
and
nop
daa
jg
int3
sub
or
movsl
call
ja
jbe
or
adc
push
push
push
xor
lret
inc
out
mov
cmc
out
mov
and
bound
mov
scas
aam
cltd
aam
sahf
xchg
inc
add
fwait
jnp
adc
movsl
mov
push
ret
cmp
cmc
push
fcom
dec
aam
dec
es
pop
push
mov
loopne
ljmp
arpl
push
xchg
data16
arpl
pop
add
ds
fstps
pop
shr
pop
jp
cli
mov
ss
jne
sbb
decb
aaa
jo
xor
ret
jle
cmp
lret
pop
xor
or
imulb
daa
jp
adc
mov
ja
and
cmp
loop
inc
fs
icebp
cmovp
jmp
int
add
stc
incl
xor
testl
dec
mov
cltd
jg
pop
mov
jle
mov
aad
lret
rorb
mov
mov
dec
mov
icebp
mov
add
xchg
lcall
sbb
sub
mov
insb
and
inc
iret
adc
mov
push
nop
es
sub
xchg
pop
cmp
inc
cmp
mov
js
jns
rcrb
ret
in
fildll
cmp
mov
loop,pn
ret
add
out
mov
mov
outsl
setb
push
int
incl
ret
mov
mov
xchg
sti
jmp
jmp
mov
cmp
fisttpl
ret
ds
add
stos
jg
sbb
inc
lds
push
lret
mov
or
mov
dec
jb
pop
cli
xchg
dec
enter
xchg
cmpb
insl
fucomp
lock
and
ret
dec
and
push
fimull
mov
mov
js
jecxz
mov
lods
iret
cmp
and
cmpsb
shrb
lret
cmpsl
xchg
inc
sahf
bound
jae
sbbl
push
insl
subl
add
pop
aaa
not
cmp
jmp
cld
call
je
push
add
mov
adc
sti
js
fiaddl
gs
sbb
push
and
fcmove
in
sbb
or
push
and
jle
pop
sub
jo
pop
cmpsl
lret
aas
addr16
scas
jmp
jge
ret
out
adc
xlat
and
lea
push
inc
lret
xor
and
shlb
popf
sbb
cmp
push
out
dec
inc
test
je
lahf
aam
sahf
fdivrp
or
fistl
and
repnz
mov
negl
dec
pop
jg
pop
ret
pop
pop
xchg
insb
sub
faddl
stos
out
je
or
aaa
xor
fcompl
mov
loop
lods
mov
pop
jmp
mov
loopne
add
jecxz
aad
lcall
test
and
in
mov
popf
sbb
cmp
lods
dec
mov
xor
cmpsb
mulb
fstps
dec
aaa
and
loop
rcrb
repz
das
mov
fcoms
push
mov
add
mov
jmp
icebp
in
xchg
andl
push
add
xlat
cltd
repnz
imul
stos
sti
cmp
fiadds
push
movsb
int3
das
in
mov
jns
loopne
dec
dec
mov
sarb
outsl
in
mov
xchg
ficoms
in
jbe
jnp
xchg
cltd
cmpsl
push
clc
cmpsl
mov
adc
lcall
out
dec
jbe
and
adc
jg
sub
test
jmp
icebp
loope
jecxz
sbb
fstpl
adc
mov
loop
shll
lcall
lret
jmp
jns
cli
xchg
fwait
iret
stos
stos
bswap
xchg
aas
ret
hlt
inc
inc
out
test
imul
mov
mov
fadd
inc
lahf
adc
fstp
inc
dec
and
dec
mov
fists
mov
mov
lods
inc
nop
lods
xlat
mov
or
mov
in
adc
rorb
mov
dec
data16
push
dec
sahf
mov
sbb
sbb
lret
or
sarb
call
pusha
clc
pop
mov
pop
and
mov
iret
mov
xchg
push
sti
mov
lods
mov
imul
ror
add
outsl
jno
jg
rorl
sub
ja
mov
cmovp
movsb
mov
mov
out
ja
in
lods
insb
iret
add
sti
test
jle
lret
ss
inc
xchg
js
cmpb
rcll
fstsw
cmp
add
mov
push
adc
idivb
addr16
push
iret
add
ljmp
push
push
xchg
adc
lock
add
cmp
lret
mov
out
add
pop
shll
lods
jo
fcmovnbe
lods
or
xchg
push
leave
push
add
mov
mov
xor
int3
push
jno
and
popf
mov
jnp
push
stos
pop
faddl
pop
push
sbb
cld
add
lcall
mov
jecxz
push
pushf
mov
adc
mov
decl
push
jb
push
out
setne
subb
sbb
push
cmc
sub
add
cmp
push
xchg
cmpsl
add
mov
aam
jbe
insl
xor
pop
xchg
test
pop
movsl
add
aas
sub
mov
pop
lcall
das
jecxz
mov
inc
out
movsl
scas
fwait
je
fwait
test
or
fsub
cmp
je
push
int3
lds
or
jb
mov
sub
scas
pop
xchg
xlat
push
sub
mov
cmp
dec
ret
mov
cmp
mov
dec
mov
cmp
push
aaa
cli
jbe
add
pop
push
mov
pop
mov
pop
enter
sub
dec
ja
adc
push
fidivl
xor
gs
shl
sarl
ret
cmpsb
lret
ficompl
dec
das
jbe
imul
jg
mov
cmp
or
lret
or
js
js
sub
popf
scas
mov
xchg
dec
cmp
jnp
lods
stc
mov
and
cmp
mov
lock
push
mov
mov
pusha
in
test
bound
cs
repnz
and
jbe
xchg
stc
xor
rorl
imul
pop
fwait
pop
int
fmuls
add
sbb
push
sbb
inc
and
pop
sub
cmp
inc
mov
popa
aad
inc
dec
adc
mov
lods
push
mulb
lock
fwait
mov
add
sbbl
mov
xchg
jp
xchg
and
jnp
loopne
push
mov
or
or
test
mov
push
push
or
hlt
sub
xchg
jo
sbb
mov
pop
add
aam
das
dec
lock
sub
mov
sub
push
cs
int
lret
imul
cmp
scas
fdiv
mov
imul
imul
in
cmp
cli
add
shlb
push
sub
shrb
aad
ds
aam
mov
push
int3
add
and
das
dec
or
mov
fcomps
fimuls
add
mov
jl
sbb
mov
push
dec
jg
adc
add
cmp
adc
jo
mov
jge
xor
push
cltd
rcrl
dec
adc
and
sarl
scas
sti
mov
popa
fcoms
mov
and
cmp
xor
test
adc
sub
or
mov
mov
mov
pop
push
or
jp
or
dec
jae
cli
in
nop
dec
mov
stos
fiadds
cmp
mov
pop
clc
aad
mull
cmovle
mov
xchg
cmp
cmp
dec
xchg
dec
data16
cld
xchg
nop
mov
or
sbb
sbb
ret
cmp
in
mov
sbb
or
lret
outsb
call
pusha
lgs
fistps
jp
adc
out
mov
call
call
push
xor
fiadds
repnz
mov
xlat
dec
add
add
add
xor
shlb
sub
and
testl
pop
xor
iret
sbb
pop
loop
leave
int3
inc
dec
das
xchg
or
add
sub
fldt
inc
js
xor
inc
insl
sub
cmp
fs
repnz
jl
inc
pcmpeqw
xor
rclb
jp
rolb
js
inc
rclb
jo
insl
inc
dec
xor
mov
mov
xlat
xchg
xchg
scas
mov
jle
mov
loop
pop
stos
jle
ljmp
xor
add
shll
std
jp
ljmp
cmp
adc
testl
mov
fistpl
pop
cmp
fadds
call
addb
aam
pop
pop
and
nop
and
ret
pop
fs
xchg
mov
add
pop
inc
xchg
in
stos
xor
inc
popa
or
and
stc
inc
std
dec
sbb
sbbl
xor
cvtps2pd
movsb
in
mov
sub
push
mov
shl
fistpll
out
test
stc
in
pop
imul
xchg
idivb
mov
pop
sub
in
popa
and
ja
jns
pop
cmc
xchg
dec
loope
sub
in
dec
xchg
imul
adc
and
movsl
adc
fnstcw
into
movsb
dec
mov
movsb
jmp
xor
btc
repz
push
call
in
pop
dec
add
xor
or
jb
and
xor
std
inc
dec
rcrl
mov
insb
xlat
jmp
push
loope
push
mov
sahf
sbb
gs
or
sbb
mov
xor
cmp
add
testl
push
lods
cli
add
xchg
or
or
loop
pop
stos
dec
mov
mov
mov
xchg
js
push
daa
xchg
add
pop
inc
jmp
insl
and
cli
mov
inc
adc
cmp
jge
enter
lret
adc
lahf
push
in
mov
rcrl
pop
pop
das
je
xlat
xchg
lret
sbb
cltd
mov
jne
xchg
pop
hlt
call
mov
or
cwtl
sbb
xor
add
std
jbe
jmp
je
mov
ret
popl
jge
lcall
xor
push
fidivs
mov
jae
frstor
popa
les
or
xor
movsl
fildll
imul
fidivrs
dec
lods
push
daa
repnz
loop
xchg
pand
sbb
std
xor
fs
sbb
jns
xor
in
mov
in
ficoms
aam
clc
xor
ret
or
jp
xor
jl
mov
pushf
cmp
js
cmp
mov
pop
movq
add
jbe
push
sbb
pop
mov
cmpsb
in
icebp
je
cmpsl
mov
and
add
ja
dec
out
push
test
cmp
inc
mov
nop
pop
les
out
loope
mov
mov
and
push
not
add
xchg
test
push
pop
mov
mov
mov
popa
movsl
nop
fidivl
dec
add
and
push
int
out
mov
imul
pop
cmpsl
lgs
mov
outsl
lock
out
in
or
fcomps
in
negb
rol
xor
into
clc
push
repz
sbb
jb
test
lds
fcmove
lock
rorb
adc
cmp
in
or
fisubrs
in
popa
xchg
aaa
nop
cmpsl
pop
mov
pusha
cwtl
or
mov
subb
in
push
lock
aad
add
dec
aam
stc
pop
iret
popf
repnz
push
icebp
addb
popf
popa
pop
xor
jnp
xchg
dec
add
add
ret
dec
ljmp
in
adc
mov
mov
cmc
cltd
popf
std
add
shrb
shll
pop
out
jae
mov
push
mov
enter
loope
aam
std
data16
sbbl
sbb
or
ss
sub
or
bound
cltd
cmp
inc
loop
into
or
out
adc
mov
pusha
jle
scas
xchg
sarl
xor
pop
leave
push
push
xchg
push
arpl
shll
aad
icebp
xchg
sub
push
test
pusha
lret
sahf
pop
sbb
mov
sbb
arpl
insb
ljmp
push
test
dec
sub
stos
out
lret
inc
fs
or
xchg
popa
fwait
xor
loope
lret
xchg
out
adc
xor
push
adc
aad
lret
mov
rol
sahf
jg
or
pusha
sub
int
jno
dec
jb
cmp
inc
mov
notb
rol
cwtl
stc
mov
out
enter
push
push
add
add
jecxz
pmuludq
or
inc
mov
jmp
mov
repnz
aaa
mov
bound
dec
jmp
mov
jg
into
pop
pop
cmpsb
es
inc
adc
cmc
rcrb
in
jle
aam
inc
cmp
and
mov
outsl
fwait
push
ljmp
jle
inc
mov
jp
int
fdivrs
jecxz
lret
icebp
aas
inc
imul
mov
sbb
jmp
inc
cltd
xchg
das
mov
mov
add
shrl
dec
daa
mov
inc
lock
mov
ljmp
jle
in
or
arpl
pop
or
cmp
mov
daa
cmp
jp
jnp
cmp
loopne
inc
stos
lret
shll
nop
xor
pop
lock
lret
lea
and
push
push
inc
adc
inc
hlt
in
and
sahf
push
ret
jo
hlt
sbb
iret
cli
mov
js
pop
scas
testl
jne
out
loop
jbe
outsb
adc
lret
cs
push
pop
and
add
and
pop
xor
lods
loopne
pop
push
xor
test
push
dec
dec
insb
pushf
prefetch
or
and
adc
stos
repnz
sub
rcrb
sub
stos
shlb
jle
ficomps
lret
inc
cmc
ret
push
aad
pop
psubd
sub
shrb
or
repz
sub
mov
aad
cltd
cld
cmc
mov
xorl
rorl
cmp
jge
jp
sbb
dec
fiaddl
lea
rcll
mov
jecxz
or
outsb
repz
xlat
cmp
adc
xchg
jl
movsb
adc
scas
inc
outsb
xchg
outsl
int3
xlat
clc
aam
jb
sti
jno
lahf
jnp
imul
lods
jb
pop
sahf
aad
sbb
mov
fs
cmpl
sbb
xor
leave
out
inc
xor
rcll
and
add
mov
sub
test
pop
and
test
lock
aas
hlt
and
rcll
xor
cmp
and
fwait
hlt
cmc
and
pop
jecxz
jle
jp
daa
mov
jle
and
pop
int
sub
cmp
cli
arpl
inc
stos
cmpsl
or
fisttpl
dec
sub
les
in
push
cmp
mov
ds
inc
orb
mov
mov
lcall
mov
js
fisubrs
mov
in
adc
dec
lcall
or
outsb
push
add
xor
xor
push
cmp
or
in
or
hlt
incb
addl
sarl
imul
adc
sbbb
repz
ficomps
sbb
cmpsl
inc
mov
cmp
push
cld
sbb
xor
push
adc
mov
pop
mov
xchg
sbb
notl
insl
iret
fbld
add
jno
push
das
scas
jnp
test
bound
idivb
jmp
push
mov
data16
mov
in
std
incl
scas
aad
inc
xchg
xor
stc
shll
fcmovb
sub
sub
push
js
xor
mov
shll
or
mov
mov
ja
scas
add
mov
xchg
push
and
sub
cmp
popf
mov
lds
arpl
mov
icebp
jle
mov
push
flds
dec
and
inc
xor
push
add
lds
ret
xlat
dec
mov
sub
inc
jle
sbb
fisttpll
sbb
lahf
pop
adc
clc
test
mov
mov
inc
mov
and
or
mov
insl
movsb
addl
and
jns
push
out
fnstenv
ja
pop
mov
fcoml
adc
aas
leave
cmp
aam
int3
xchg
mov
divb
lock
add
nop
adc
adc
aam
xchg
hlt
imull
stos
imul
mov
pop
and
jno
mov
push
xor
test
dec
gs
mov
mov
ljmp
repz
xchg
and
mov
xor
dec
or
repnz
loopne
xabort
mov
cmp
or
dec
xchg
sub
jge
aas
lcall
mov
push
inc
mov
ja
jmp
call
mov
push
ds
dec
stc
sbb
or
data16
xchg
stc
cmp
push
mov
ja
jg
lock
pop
mov
movsl
imul
adc
push
dec
stc
fidivs
data16
ret
mov
out
pop
fdivrl
sub
xor
jmp
rorl
sti
add
mov
pop
push
and
inc
dec
in
pop
test
xchg
loopne
mov
add
xchg
mov
daa
and
out
ret
push
jl
popa
jg
cmp
or
jmp
pop
fists
aas
sub
int
es
push
hlt
add
mov
and
inc
nop
xchg
push
sbb
pop
sahf
aaa
jbe
add
or
out
shl
adc
arpl
inc
es
decb
test
pop
daa
stos
jmp
sahf
jge
mov
xchg
sbb
shlb
cli
xor
push
sbb
pop
dec
cmpsl
push
mov
push
xchg
sub
sub
adc
loopne
icebp
add
xchg
clc
mov
lahf
sbb
call
sub
in
fwait
nop
and
add
xor
sbb
aad
dec
iret
mov
add
mov
cltd
lods
or
inc
ss
cmp
sub
pop
mov
and
imul
fucomp
xchg
and
std
add
outsl
in
fisubl
paddq
xchg
outsl
inc
sti
cmp
fnstsw
jo
je
xlat
or
cmp
cwtl
lock
int
push
or
adc
or
jno
lret
loope
ss
scas
push
daa
mov
pushf
cmpsb
inc
scas
mov
and
cli
push
sub
inc
aam
adc
mov
cs
push
hlt
mov
mov
icebp
aaa
push
repnz
dec
xchg
push
adc
sbb
mov
xorb
jp
or
repz
mov
cmp
xchg
imul
inc
xor
popf
mov
loope
mov
xchg
xorb
dec
push
xchg
push
jns
push
adc
gs
xor
mov
jl
xor
and
push
cmp
push
loopne
aam
int3
or
sarb
test
sti
pushl
dec
inc
cwtl
lcall
into
xchg
das
xchg
push
pop
inc
movsl
cmp
test
xchg
xor
ret
xlat
sub
iret
xor
and
dec
jb
mov
dec
jle
ficoml
and
and
cwtl
pop
xchg
mov
mov
dec
add
stos
cmp
out
sbb
inc
sub
int3
aas
pushl
imul
add
dec
cmp
jge
push
pop
mov
push
add
cmp
cmp
and
in
and
aad
push
inc
sub
xor
fstps
loop
sbb
push
xchg
rorb
in
fnstcw
mov
xchg
daa
adcl
test
cmp
incb
pop
xchg
test
test
xor
out
ljmp
sub
in
out
js
shlb
movsb
movsl
loope
mov
or
jge
or
out
repnz
data16
cmp
stos
mov
dec
jg
mov
addr16
in
cmp
bound
dec
jno
inc
adc
mov
pop
xchg
test
push
es
push
push
pop
idivl
lret
mov
cmpb
dec
sti
mov
mov
sbb
cs
femms
iret
push
das
mov
subb
incb
ljmp
nop
jo
and
cs
stos
sub
xchg
arpl
shrl
sub
mov
xchg
and
bound
push
inc
mov
lea
xchg
pusha
out
push
dec
mov
sbb
mov
and
dec
dec
aas
inc
negl
ljmp
lret
pushf
in
aam
arpl
sbb
and
fistpl
and
repz
sub
pop
test
mov
daa
in
xchg
sub
stos
xchg
cmp
add
pop
xor
sub
out
ss
mov
gs
sbb
xchg
cmpsb
in
dec
icebp
movb
fidivs
insl
in
xor
sub
cmp
out
adc
mov
mov
int
inc
jb
pop
lods
jecxz
dec
sub
and
jnp
divb
jmp
jl
adc
mov
mov
add
xor
ja
inc
mov
leave
mov
and
mov
xor
sub
xor
add
adc
sub
popa
mov
testb
add
sbb
aaa
inc
pusha
cltd
mov
test
cmc
js
xchg
pop
roll
dec
xchg
mov
lds
jnp
and
les
cmp
sub
pop
sub
xor
cmp
ret
mov
pop
jb
and
insl
aam
push
xor
stos
jne
mov
movsl
dec
inc
scas
movsb
popf
push
inc
stos
sbb
fldl
scas
push
jb
arpl
test
push
pop
fistps
push
jmp
mov
fcompl
stos
xor
dec
and
sti
xchg
lahf
fdivrp
lea
pusha
push
push
add
test
cltd
das
movb
jmp
or
mov
pop
push
stc
push
insl
clc
sub
das
fstl
test
les
les
adc
mov
mov
aad
lods
ja
in
aad
cwtl
in
cli
mov
in
sub
movsl
cmc
sub
xor
pop
jo
outsl
icebp
ret
in
push
scas
imul
xchg
xchg
je
cmp
std
ret
xchg
ds
out
in
inc
mov
outsb
ja
cmpsl
inc
dec
inc
mov
push
inc
or
fistps
lcall
repz
stc
push
jl
ret
push
mov
pop
sbb
bound
pop
xor
fistl
jno
stos
stos
inc
cwtl
pop
inc
lret
jnp
pop
jmp
fs
pusha
xor
xor
scas
jp
shl
xlat
sub
fmul
jl
jmp
pop
mov
jb
pop
sub
sbb
sti
xchg
xchg
lret
stos
popa
dec
mov
add
dec
insb
push
shll
ja
pop
cmp
imul
add
enter
mov
imul
fiaddl
pushf
out
dec
inc
test
adc
mov
arpl
push
popa
test
cmp
scas
repnz
xchg
nop
push
fcom
xor
inc
iret
xchg
add
fsubrl
add
ljmp
fwait
jb
mov
dec
xchg
aam
or
dec
mov
cli
adc
adc
pop
pop
shlb
shlb
sub
out
inc
sbb
push
hlt
xor
and
push
cmp
adc
das
adc
lea
lock
sbb
mov
pop
cmpsl
pop
lods
icebp
mov
pop
xor
popa
mov
push
fwait
adc
xlat
sub
add
mov
rorb
cmp
outsb
rolb
lahf
adc
faddl
jge
mov
cmc
jb
daa
jns
bound
xorb
filds
mov
roll
test
sbb
pop
and
inc
xchg
adc
xchg
int
and
inc
cmp
popa
lret
sti
pop
out
sbb
inc
push
shrl
sbbl
in
dec
adc
mov
fmull
pop
push
rolb
es
aas
pop
and
mov
push
imul
loopne
or
into
adcb
cmpb
pop
loopne
out
outsb
sarl
pop
mov
insb
ds
stc
out
or
push
faddl
push
cmp
add
mov
and
ss
cld
sbb
fs
lods
jnp
jnp
mov
adc
movb
jno
aad
test
adc
movl
mov
scas
lret
or
xor
out
and
arpl
in
int
sub
insl
mov
out
dec
push
adc
push
arpl
hlt
jg
out
stos
jg
daa
pop
ljmp
shll
lds
mov
popa
bound
cmp
inc
sbb
mov
cmc
sub
decb
mov
jmp
add
ds
icebp
dec
mov
addl
sub
hlt
loop
pop
sbb
inc
or
movsl
mov
mov
cmp
mov
ja
jecxz
xchg
aaa
cmc
insl
shll
xchg
pop
sub
outsb
mov
fwait
push
xor
setl
mov
in
test
pop
stos
stos
mov
aas
dec
jo
pop
xchg
imul
and
mov
fs
aaa
int3
inc
sub
mov
fidivl
fistpl
mov
loopne
push
mov
lods
add
movsb
xchg
inc
add
and
icebp
push
mov
ss
pop
rcll
ss
lock
ss
xchg
mov
addl
loope
mov
lods
ss
jg
sub
fiaddl
sbb
in
divb
gs
ss
lods
or
test
iret
lea
cmp
push
xor
popf
in
pop
pop
sbb
mov
lret
jp
pop
mov
and
cmpsb
mov
add
in
out
cld
pop
es
int
fsts
repz
out
les
ja
push
xchg
outsb
ret
push
daa
jmp
jl
push
insl
pop
inc
xchg
lret
inc
out
cmpsl
dec
int3
cmpsl
ds
jb
mov
es
pop
sub
sub
and
inc
enter
inc
cmpsb
out
sub
test
add
pop
sub
fdivs
pop
sub
nop
jmp
clc
jg
push
mov
ss
push
dec
xchg
mov
xor
push
fcmovb
popf
inc
shlb
push
dec
adc
shll
repz
cmp
inc
xlat
push
push
inc
sub
cmp
sub
loopne
inc
in
push
in
or
dec
jg
in
fsubrl
xchg
into
and
push
xchg
sub
lock
push
test
leave
fldl
mov
sub
mov
loop
xchg
mov
std
jecxz
or
push
jmp
or
mov
std
push
in
inc
iret
mov
cs
insb
and
jp
movsb
inc
xor
inc
adc
sbb
pand
pop
inc
pop
adc
iret
add
xchg
inc
idivl
xor
insl
std
mov
pop
dec
in
out
mul
push
lret
xchg
addb
fadds
aaa
loopne
lcall
aas
ret
es
lret
dec
jg
aaa
insb
mov
cmp
cmp
sub
lea
adc
cld
push
int3
shrb
xchg
int3
push
in
les
mov
push
inc
push
and
cmp
call
ret
jae
nop
aad
inc
lock
sbb
lods
sbb
sub
mov
cmp
cltd
jno
adc
cbtw
movsb
jae
fwait
mov
sub
adc
lock
lods
sub
adc
cs
lods
and
aaa
push
aam
js
add
into
sbb
mov
jbe
push
mov
scas
subl
loopne
syscall
mov
adc
out
mov
in
cbtw
xor
ds
dec
add
je
aad
pop
notl
out
mov
add
mov
sbb
or
cmpb
gs
inc
shlb
dec
rcl
sub
add
rcrl
outsl
push
mov
dec
add
call
mov
push
push
pop
push
xor
fwait
stos
inc
mov
lds
mov
out
add
and
enter
cmp
in
test
fiaddl
ficompl
dec
test
mov
mov
mov
cmp
cmp
ret
mov
and
mov
cld
ja
jmp
insl
xor
jnp
bound
sub
xor
pop
push
jp
clc
push
mov
or
fldt
inc
insb
pushf
add
fimull
leave
cmpsb
out
popa
or
in
cltd
aam
scas
cwtl
push
xor
inc
fidivrs
xchg
push
into
and
clc
fistpll
mov
pmulhw
stos
pop
xor
fimuls
pop
sub
and
jge
aad
mov
inc
daa
fimull
cmpl
lret
and
mov
cmp
stos
pop
cmp
call
dec
fcomp
and
xor
scas
mov
push
push
mov
loopne
jl
push
int3
cmp
loope
and
mov
movsb
sbb
fistl
daa
test
subl
mov
lret
js
push
cmc
xchg
icebp
xor
push
mov
xchg
cwtl
lcall
mov
lret
sbb
in
xor
stos
pop
mov
das
in
fwait
cmp
cmp
cmpsl
or
test
fisubl
imul
loope
pushf
daa
es
ror
xchg
test
fcoml
aas
sub
leave
cmp
aad
pop
js
sub
push
cwtl
sbb
daa
sbb
cli
rorl
lock
inc
mov
daa
imul
jno
stos
jb
call
and
in
daa
xchg
mov
adc
pop
cmp
mov
push
inc
call
cmpsb
and
loopne
lret
push
mov
loop
outsl
jns
add
sarb
adc
adc
pop
mov
dec
adc
lret
inc
jbe
xchg
mov
loopne
sti
sbb
into
jmp
cmpl
cmp
dec
outsb
push
sar
xchg
es
push
popf
add
jecxz
add
out
outsl
dec
xchg
or
mov
push
scas
ja
hlt
xchg
shrd
add
ljmp
xchg
push
rorl
iret
push
cmpl
mov
xchg
jge
xchg
mov
xor
mov
loope
andb
iret
mov
sbb
xor
or
stc
cmp
in
xlat
inc
icebp
cmpsb
push
sti
pop
imul
rcrl
dec
mov
cli
add
jns
xor
push
push
sarb
gs
sahf
push
dec
je
add
dec
repz
cmp
in
add
adc
shll
aaa
mov
test
lods
mov
cwtl
fmull
dec
and
and
outsb
fdivrl
das
lret
cli
les
outsl
mulb
sbb
push
sti
mov
stc
pop
imul
imul
data16
mov
jp
gs
cmc
cmp
adc
dec
jmp
sbb
rcrb
rcll
sbb
ret
sbb
add
shll
push
shrl
push
dec
subb
in
dec
es
mov
xchg
cmp
xchg
mov
lods
mov
fwait
dec
mov
and
cmp
je
inc
dec
push
and
push
push
inc
bound
stos
daa
xor
jae
bound
xchg
push
les
repnz
mov
outsb
xor
rclb
js
pop
loopne
dec
xchg
jbe
push
out
ljmp
pop
es
mov
idiv
mov
or
nop
xor
push
inc
adc
int
in
inc
dec
fcom
enter
adc
push
idiv
xchg
sbb
xorb
push
scas
add
xor
push
cmp
fisttpl
icebp
test
out
push
arpl
sub
outsb
pop
or
adc
jae
xor
cmc
clc
xorb
fsub
std
inc
sub
mov
jge
movsl
lcall
xor
mov
sbb
xor
mov
adc
pop
icebp
out
iret
inc
js
cmp
int3
push
mov
mov
xchg
movsl
jmp
stos
inc
cwtl
inc
and
aam
push
movsb
jecxz
icebp
sar
xor
sahf
mov
es
das
adc
xor
sub
aaa
imul
or
sbb
inc
into
pop
sbb
cmpb
cmp
fistps
push
or
inc
ds
inc
and
lods
push
dec
loop
loope
popf
pushf
add
sti
xchg
out
aas
and
jae
mov
pop
or
add
inc
imull
ljmp
dec
mov
sarb
scas
dec
daa
and
ljmp
gs
add
dec
jl
fcmovne
cmp
jmp
mov
sbb
scas
push
xor
popa
mov
adc
mov
and
call
hlt
mov
cmc
pop
xchg
iret
cmp
shlb
and
cld
pop
jmp
in
aas
in
into
dec
mov
cwtl
ror
invd
btr
push
xchg
jl
inc
xor
mov
bound
dec
outsb
jbe
fildl
dec
inc
test
push
data16
daa
mov
aaa
nop
lds
loop
lods
mov
push
sbb
add
mov
cli
inc
mov
ds
popf
mov
enter
sbb
iret
push
in
pop
cmpsl
sbb
or
jo
mov
push
imul
pushf
pop
mov
pop
xorb
dec
jnp
rclb
pushw
dec
scas
sbb
fwait
pop
and
insl
cmc
mov
ss
movsb
adc
xor
sbb
dec
loope
xor
mov
add
fildll
jb
inc
das
push
mov
imul
fcos
mov
test
cli
xchg
ficoml
mov
lahf
in
outsl
inc
sub
and
inc
pop
inc
xchg
sub
cmp
test
lods
cld
push
cmp
loope
cmpsb
cmp
lods
ret
mov
or
mov
or
in
and
shrb
add
mov
cltd
shlb
push
cmpsb
cmp
pop
xchg
movsl
add
adc
test
arpl
jecxz
push
mov
iret
sar
jge
sbb
in
fsub
iret
into
jg
fcmovbe
xchg
in
aam
enter
loope
and
mov
add
adc
mov
and
movsb
sbb
cs
cwtl
mov
cmc
dec
aas
mov
dec
add
push
loopne
cmp
jge
loopne
sub
dec
sub
or
pop
lea
push
mov
jns
mov
cmp
mov
sti
fsub
adc
imul
dec
push
les
aas
inc
dec
clc
outsl
int
cwtl
repz
cmp
cmp
or
push
movsl
popa
out
mov
in
pop
inc
jmp
clc
sbb
movsb
sar
xor
mov
into
jecxz
loope
gs
fisttpll
test
call
xchg
lds
insb
jge
pop
clc
cmp
es
cmp
ret
and
aaa
cmp
jl
mov
rcr
mov
sub
cmp
inc
cmpl
pusha
xor
or
into
sbb
sub
inc
sbb
add
and
and
out
cld
mov
inc
or
xor
clc
les
sbb
jle
adc
xchg
add
mov
aas
insb
fidivrl
mov
adc
add
ds
mov
push
mov
push
lret
insb
dec
adc
dec
popf
cltd
pop
inc
popf
or
inc
mov
stos
mov
pop
addr16
sub
loopne
loopne
or
mov
push
jl
imul
jl
insl
push
jb
subb
add
and
and
mov
lret
mov
movb
insl
jo
fnstenv
les
mov
mov
jnp
dec
jmp
sbb
rep
lock
bound
dec
add
hlt
loopne
mov
push
sbb
mov
in
mov
cmpb
inc
push
cmp
sub
or
notb
xchg
das
hlt
and
or
cmp
shll
or
xchg
int
mov
sub
movsb
sub
dec
outsb
add
or
jae
test
push
mov
jo
into
fbld
mov
jns
jno
pop
ss
jo
std
insl
sbb
push
movsl
sbb
cltd
pushf
shrb
inc
mov
aaa
sbb
movsb
mov
cmpsb
xchg
mov
add
jbe
ret
lods
add
push
mov
clc
fcomp
jae
cld
scas
test
fwait
jl
clc
sub
pop
mov
jne
sub
push
pop
ret
aaa
xlat
jae
lods
popf
in
movsl
jmp
sbb
mov
ret
jbe
jbe
jle
loop
lods
in
sub
push
loop
movsl
outsb
sbb
mov
adc
adc
adc
adcl
jae
sub
xor
stos
mov
dec
fnstsw
std
xor
scas
aad
pop
xor
movsl
iret
sbbb
pusha
mov
dec
lret
fldt
jl
inc
mov
test
add
xchg
je
ret
hlt
mov
mov
lods
push
mov
add
ret
push
and
push
xchg
stos
xchg
call
bound
sub
mov
xor
jnp
jno
xor
push
cmp
xor
xchg
cmp
outsb
pop
rclb
pusha
cmpsl
lds
insl
je
xor
inc
imul
pop
jle
lahf
in
inc
ror
loope
sbb
jge
inc
in
idivb
jg
ret
and
lods
fildl
repz
ss
sub
inc
pop
add
and
cs
ret
mov
popa
notl
fsubrl
adc
or
clc
cli
jae
mov
pop
mov
aaa
xchg
testl
clc
and
push
shlb
js
pop
inc
out
cli
fisttpl
add
mov
mov
mov
ret
out
in
mov
jl
xor
adc
inc
fisubl
icebp
pop
andb
push
cmpsl
insb
pop
sub
adc
xchg
fs
mov
fnstenv
loop
push
xchg
repz
loopne
std
jb
jecxz
cwtl
xchg
mov
inc
adc
ss
lea
inc
ds
pop
and
mov
or
add
pop
push
rcrb
in
or
clc
sbb
mov
sbb
popf
dec
mov
das
mov
push
lds
loopne
mov
ret
mov
int
and
mov
sub
mov
mov
xchg
xor
sahf
jmp
adc
mov
pop
mov
lea
rorb
mov
mov
push
pushf
js
xor
call
in
and
and
push
jo
arpl
insl
and
mov
mov
inc
daa
jmp
andb
int3
adc
cmp
data16
fmull
outsb
mov
negl
jno
inc
push
push
faddl
outsb
sub
cmc
js
jns
nop
mov
ret
iret
pusha
dec
mov
add
push
sbb
mov
clc
nop
fwait
push
out
dec
or
adc
decl
jle
and
jae
or
jmp
inc
xchg
pop
in
mov
or
adc
cmp
dec
jb
mov
jge
mov
jbe
add
fs
pop
jno
fcomi
xchg
pop
mov
aas
lcall
sysenter
mov
sbb
sbb
lea
sbb
add
lret
not
fistpll
test
fnstsw
inc
negl
xchg
test
jl
fdivr
inc
xchg
inc
add
lods
das
sbb
mov
adc
mov
add
push
les
je
mov
arpl
jle
lahf
sbb
stos
sub
or
scas
cmc
scas
lock
push
mov
jmp
aam
and
in
push
cmp
mov
push
outsl
cmp
jge
gs
push
outsb
mov
mov
jne
enter
jb
xchg
inc
push
xchg
cmpsl
popf
orl
mov
ret
cmp
push
fimuls
lock
xor
jge
dec
sub
jae
push
push
mov
jb
jnp
imul
ljmp
or
sub
or
aad
jnp
out
push
xchg
clc
insb
fnstcw
adc
mov
in
and
push
cmc
cmpsb
ret
jmp
enter
or
fiaddl
push
mov
sub
jno
or
mov
in
mov
repnz
or
ja
jnp
mov
in
lods
mov
dec
pop
jbe
ja
jb
cmp
pusha
and
leave
push
jns
out
repnz
cli
sbb
lods
mov
and
mov
mov
scas
dec
outsb
shr
aad
mov
fwait
jl
cmp
sub
pusha
mov
outsb
mul
jl
pop
adc
ljmp
lea
mov
out
ja
rorl
jle
mov
scas
sbb
cmpsl
add
dec
adc
cld
fdivl
add
mov
ret
iret
mov
leave
cli
cmp
mov
into
and
adc
jne
es
cmp
inc
xor
cwtl
sarb
cmp
popf
dec
and
pusha
inc
push
lcall
jo
cmp
pop
fdiv
pop
out
mov
fwait
sub
dec
stos
pop
je
iret
das
sub
imull
xlat
mov
mov
adc
ret
cmpsl
pop
aas
lcall
stos
cmpsl
or
add
or
aas
push
mov
and
dec
imul
mov
int
jl,pt
sbb
cltd
pop
shll
test
sub
je
xor
outsb
insb
jae
out
bound
push
aaa
push
ja
add
mov
mov
lret
mov
sbb
mov
dec
adc
mov
jne
or
imul
sahf
dec
sbb
gs
leave
xor
push
add
leave
adc
xchg
jb
mov
in
mov
or
out
jne
les
jmp
xor
mov
icebp
xchg
xor
ficompl
lret
mov
icebp
into
mov
iret
mov
mov
in
xlat
enter
stc
testl
shll
push
test
or
int3
jbe
negl
cs
push
push
js
insl
lcall
push
test
or
outsb
iret
mov
push
insb
fmull
rcll
js
cmp
sahf
xchg
aas
adc
stc
mov
and
push
andb
popf
imul
pop
mov
mov
add
mov
mov
gs
cli
sbb
add
shrl
idivb
rcrl
mov
xlat
sub
add
pop
fcmovne
and
es
dec
xchg
adc
std
arpl
adc
repz
mov
jle
std
ja
shl
mov
out
aaa
push
and
cmpsb
pop
jb
and
push
lods
mov
add
adc
fs
mov
mov
stc
jnp
cmp
popf
adc
int
cld
push
mov
lahf
cmp
push
push
or
inc
sub
adc
push
dec
scas
ljmp
push
in
int
pop
aaa
xor
aas
mov
daa
loop
into
sbb
shlb
lds
mov
or
xor
ja
stos
stos
lock
pop
pop
pushl
cmp
cld
ret
or
xor
ds
scas
jle
mov
clc
xor
xlat
dec
xor
fiadds
add
and
inc
pop
sub
xchg
ficomps
test
jne
lcall
dec
mov
and
in
push
mov
int
jmp
cs
cmpsb
enter
adc
inc
movsb
adc
lahf
cmp
mov
ds
adc
popl
sbb
or
and
bound
std
pop
mov
push
pushf
fdivp
int3
jbe
sbb
sbb
mov
enter
or
pop
imul
jb
lahf
add
cld
addl
add
iret
movsl
cmpsb
xor
cmp
jnp
jecxz
mov
scas
rcrl
dec
push
push
int3
pop
jmp
lock
mov
lods
test
jle
out
xchg
in
fnstenv
and
das
lret
jle
and
xor
mov
sub
or
fcompl
or
mov
ds
enter
xchg
jno
repz
adc
push
mov
adc
movsl
inc
test
cmp
xchg
mov
pop
mov
fsubs
mov
jo
sub
add
test
stc
cmpsl
mov
xchg
add
jb
icebp
dec
insl
xor
scas
gs
cmp
adc
xor
mov
lock
push
ds
faddl
push
cmp
pop
mov
add
mov
ljmp
mov
xor
ror
xchg
push
int3
pop
bsr
mov
clc
mull
inc
xor
push
imul
dec
push
in
and
testb
shrl
or
into
adc
push
call
mov
adc
jge
mov
mov
jo
jnp
push
les
jl
test
xchg
out
mov
cmp
rclb
das
dec
jmp
int
stos
pop
sbb
lods
sbb
mov
es
push
movsl
negl
xor
imul
push
mov
stc
mov
lret
dec
lds
enter
xchg
dec
aas
scas
lods
cmpsl
xor
and
and
ss
mov
add
xor
ljmp
ljmp
pop
in
int3
sbb
nop
mov
inc
or
add
pop
cmp
in
fs
enter
std
cmpb
cmp
adc
cmc
add
jmp
loopne
imul
divl
jl
sub
repz
pop
mov
cmp
daa
inc
insb
ja
mov
in
out
mov
cld
sub
xchg
inc
jne
push
fs
xchg
mov
sbb
xor
aam
push
scas
ds
sbb
andb
inc
pushf
sbb
mov
js
inc
fldt
add
stos
enter
aad
xchg
jge
sub
or
push
jmp
jno
mov
jg
pop
popa
out
push
xor
inc
fdivr
pop
std
mov
adc
in
test
mov
mov
and
inc
flds
lods
loop
ljmp
negl
dec
or
pop
out
test
cwtl
mov
xchg
enter
dec
or
idivl
add
scas
or
jns
adc
in
inc
iret
jbe
repnz
mov
pop
push
lods
adc
pop
imul
sub
sbb
or
pop
jns
out
inc
mov
pusha
and
scas
test
or
mov
xor
shrl
sbb
inc
xchg
aaa
aad
sti
fdivrs
mov
adc
adc
int
adc
cltd
mov
sbbl
inc
and
shl
shlb
pop
push
sub
loop
orb
add
test
adc
cli
and
jecxz
and
int3
je,pt
inc
sub
mov
stc
jl
add
push
cs
imul
lahf
dec
lret
jl
and
pushf
pushw
ror
mov
xchg
and
or
sub
push
cmpsb
imul
mov
or
aas
push
xchg
repz
hlt
xchg
push
cld
das
add
repnz
pop
cmp
int3
gs
adc
mov
xchg
xchg
mov
dec
mov
shlb
stos
add
ds
mov
pop
xchg
je
icebp
cltd
outsb
lods
out
mov
xchg
inc
mov
insb
push
ss
fstps
mov
imul
cmp
jg
add
movsl
xor
notb
and
sub
in
dec
test
sub
int
adc
sub
and
adc
jae
push
pop
xor
cltd
xor
leave
sarb
cltd
mov
sub
hlt
sub
inc
popf
ja
in
xorb
orl
loope
or
jecxz
fwait
dec
insb
inc
cmpsl
outsb
adc
mov
mov
and
and
sub
sahf
icebp
push
adc
push
adc
sub
push
dec
lret
jnp
testl
dec
add
mov
xchg
frstor
dec
jge
sti
fisttps
cli
scas
push
stos
movsl
lret
scas
test
xchg
pop
push
mov
in
xchg
stos
insb
imul
or
xchg
adc
inc
push
ret
cmp
xorb
int
fdivl
scas
sahf
fstl
jecxz
pop
loop
xor
psubusw
and
iret
mov
add
fcompl
clc
cmp
cmp
mov
xor
jb
pop
movl
push
insb
jae
inc
mov
cmp
adc
mov
add
cmc
js
mov
sbbb
pop
fs
ss
mov
xor
cmc
in
rol
jnp
push
rcrl
jg
cmpsb
ljmp
push
lahf
pop
movsl
negb
sahf
jecxz
cld
inc
shl
int3
aas
mov
popa
or
mov
push
out
lds
xor
xchg
mov
xor
movsb
adc
xchg
mov
add
pop
test
push
cmpsl
mov
inc
lods
jns
push
arpl
mov
jnp
mov
mov
push
outsl
stos
outsl
test
mov
sti
adc
ljmp
movsb
lret
shrb
mov
sarl
cmpsl
cmpl
pusha
mov
xchg
aas
cmp
xchg
dec
sbb
xor
cmc
popa
cmp
or
pop
lods
jge
fdiv
sbb
mov
add
sbb
mov
bound
xchg
pop
test
hlt
lods
mov
jnp
inc
dec
xor
jns
into
psrad
cmp
stos
sbb
xor
out
xor
ret
xchg
push
lcall
jbe
fucomi
cs
rcl
cs
popf
ret
inc
addr16
jb
ljmp
mov
sub
js
dec
subl
stos
stc
lahf
xchg
aas
inc
xchg
and
jmp
push
sti
cmp
pop
mov
jge
jl
or
ficompl
fwait
jl
sbb
lods
stos
push
cmpsl
push
aaa
mov
imul
cmp
mulb
adc
push
in
mov
add
cmp
push
inc
jle
lea
xchg
in
repnz
pop
xor
daa
push
mov
or
cmp
aad
aaa
movsb
lods
hlt
les
mov
push
inc
imul
add
xlat
lahf
outsb
cwtl
jo
inc
jno
leave
pushf
xor
loop
daa
out
gs
xor
idivl
ret
test
stos
add
sub
jnp
jge
and
scas
xor
es
cmovg
into
fistl
das
jne
repnz
dec
mov
dec
pop
mov
cmpsb
or
sbb
pop
lret
push
mov
push
in
in
pop
fldt
in
jns
mov
lods
scas
dec
sub
cmp
inc
std
ret
shlb
lahf
aam
sti
int
mov
fwait
mov
push
sbb
aam
mov
adc
mov
das
mov
pop
movsb
aam
xlat
rcr
in
loopne
jno
jnp
ret
sbb
pop
sbb
mov
lcall
sub
add
flds
or
jnp
fsubrp
fnsave
fnstsw
or
mov
aam
dec
outsl
push
inc
jp
adc
lock
lock
add
fnstcw
loopne
shlb
jl
sbb
pop
dec
xor
loop
fwait
rcrl
inc
xchg
lret
xchg
mov
cmp
push
mov
dec
xchg
cld
daa
mov
out
shl
rcrb
mov
in
pop
jb
jp
jl
jge
imul
das
push
push
jle
scas
sti
pop
adcb
cmp
xor
in
enter
inc
ss
out
jp
inc
repnz
push
push
mov
pusha
push
cmp
or
jnp
leave
sbb
loopne
ja
add
xchg
xor
aas
add
dec
xchg
fdivr
pop
cltd
dec
movsb
repz
lahf
test
divl
inc
pushf
popf
cmpsb
pusha
movsb
addr16
lea
lahf
fnsave
lret
lcall
jmp
lock
push
cmp
mov
push
mov
rcl
mov
or
repnz
outsl
mull
push
pushaw
pushf
mov
push
imul
rcrb
sbb
lret
pop
lods
aas
nop
call
lods
mov
xor
push
enter
lods
inc
divb
inc
mov
aad
rcr
jno
enter
ret
mov
shlb
hlt
ret
lret
push
shrb
and
xchg
out
stos
push
imul
push
and
lea
movsb
fildll
lods
pop
xchg
xor
pop
fiadds
ss
xchg
test
addr16
and
mov
cmp
push
cmp
pop
cmpsb
int
inc
gs
scas
cmpsb
xchg
clc
enter
fldt
push
sarl
inc
jno
test
or
jns
lcall
lret
or
into
push
iret
mov
dec
ds
mov
add
mov
or
dec
les
inc
stc
inc
outsb
mov
es
in
shlb
dec
cmpsb
xor
dec
or
xchg
push
xchg
dec
ret
loopne
mov
add
push
mov
sbb
imul
push
ljmp
or
fucom
imul
xor
add
xchg
sub
mov
and
shrb
out
fsincos
cmp
jmp
fcomps
mov
cmp
pop
sti
shll
xchg
xor
hlt
mov
flds
and
outsl
and
dec
hlt
pop
dec
xchg
xor
fnstcw
push
sub
mov
xchg
push
fwait
jb
pop
inc
add
dec
imul
xchg
push
out
push
test
leave
jnp
outsl
push
pop
mov
xchg
sbb
jo
pop
sbb
adc
fstl
push
movsb
adc
sbb
cld
push
or
xor
pop
mov
in
xchg
loope
lock
int
mov
mov
out
cmp
rcrl
test
or
mov
lods
insl
sti
outsl
stos
repz
or
or
xorb
outsb
push
es
push
out
lods
imul
mov
inc
pop
pop
adc
and
mov
repnz
xor
inc
mov
xchg
push
xchg
inc
push
daa
js
int3
popf
pop
shlb
xor
fisttpll
cmp
addl
inc
int
mov
pop
insb
dec
cli
xor
xchg
jo
loop
jnp
int3
cli
ds
sti
add
ss
xchg
sarl
push
mov
pop
sti
push
push
dec
sar
add
sub
popa
sbbb
sbb
leave
mov
dec
into
xlat
cs
adc
sub
mov
fisttps
sbb
and
rorb
int
mov
aam
cli
hlt
pop
push
pop
ftst
inc
sub
add
lods
mov
adc
mov
je
adc
mov
mov
sbb
push
or
jle
repnz
cmp
loop
dec
dec
sti
int
pop
loopne
xchg
insl
dec
fistpll
ret
cli
fwait
data16
test
sbb
jecxz
sbb
and
and
scas
push
pop
jp
push
sar
push
stos
dec
loop
insb
mov
cwtl
and
dec
aas
das
fnsave
loope
dec
cmp
ror
insb
inc
dec
jmp
loopne
das
xorl
popa
aam
cltd
movsb
stc
mov
into
jge
jecxz
in
jge
cmp
dec
cmp
mov
jmp
mov
out
pop
into
pop
xor
popf
outsb
xchg
add
jns
sar
push
sbb
int
ret
stos
movsb
sarl
mov
or
aad
adc
cmp
mov
mov
outsl
and
dec
inc
fldenv
in
neg
push
inc
xor
loope
pop
push
sbb
iret
loopne
imul
push
add
mov
shlb
iret
push
adc
pop
dec
into
mov
fcmovnbe
sbb
insb
stc
stc
or
jp
sub
mov
dec
int3
int3
cmp
mov
bound
das
jle
mov
sti
mov
fwait
clc
gs
loop
jg
xchg
lret
cmp
push
mov
mov
cmp
out
fsubrl
xchg
jo
sub
sbb
divl
lcall
aad
dec
push
iret
pushf
jecxz
insb
fildll
mov
jae
out
fidivl
ret
iret
pop
jmp
jp
movsb
fwait
imul
jae
test
xchg
push
cmpsl
icebp
cmp
popa
mov
pop
cmpsb
xchg
out
pop
push
inc
cli
addr16
and
call
das
roll
sbb
sub
imul
pop
arpl
adc
repnz
xchg
lods
sbb
inc
sahf
pop
jmp
mov
inc
out
and
sarl
pop
int
rol
loop
addl
adc
jnp
cmp
aam
jg
cmp
push
pop
jge
lods
and
mov
into
hlt
xchg
jae
mov
aad
ss
xchg
inc
mov
loopne
dec
aas
push
cmp
inc
jl
test
xchg
cmc
imul
jecxz
stc
in
mov
shlb
jecxz
iret
xchg
xor
test
daa
ss
shll
cmp
pop
sbb
pop
mov
mov
fadd
rolb
dec
adc
int3
adc
test
loop
or
or
loope
popf
sub
aaa
aam
pop
xchg
inc
sbb
fstps
or
push
push
sbb
movsb
ss
mov
mov
add
stos
xchg
fbld
xor
pop
cmp
sub
and
sarb
dec
hlt
cmp
stos
fadds
add
sub
lods
sti
mov
cmpsb
or
push
aaa
test
add
sti
xchg
xchg
xchg
test
mov
adc
sahf
mov
push
pop
mov
lret
int
mov
dec
jg
imul
sbb
dec
out
imul
xchg
out
sarb
jmp
sbb
rcr
hlt
xor
dec
xchg
mov
mov
popa
ja
scas
add
sti
sub
mov
pop
in
lcall
jl
adc
mov
in
cmp
xlat
pop
mov
pop
scas
pop
cwtl
sti
mov
out
lret
pop
pop
sar
stc
sti
loop
aas
push
pop
or
inc
lods
ljmp
push
das
jle
fistpl
mov
ja
cmp
push
lods
push
xor
movsb
jl
lret
lret
jne
popa
xor
mov
iret
sbb
sbb
out
sub
push
stos
aas
pop
adc
and
sbb
movsl
mov
dec
mov
ljmp
imul
jne
sbb
cltd
jecxz
into
lock
xor
jmp
push
or
pop
pop
adc
push
mov
jge
std
sti
mov
adc
es
mov
cmp
in
fbstp
fwait
sbb
jge
repnz
add
pop
pop
into
sti
cwtl
inc
sbb
repnz
dec
sub
cmp
fisubs
xlat
pushf
insl
mov
sbb
inc
arpl
outsb
std
xchg
mov
jl
cmp
push
adc
mov
mov
rcl
insb
mov
mov
and
xchg
or
sbb
fdivrs
mov
popf
repnz
push
sbbb
cltd
imul
lods
test
push
sahf
sbb
xor
inc
int3
jg
out
iret
pop
test
sub
into
mov
mov
std
popa
clc
xor
shl
jno
xchg
outsb
iret
fistl
push
sub
movsl
xor
lods
adc
inc
and
cmp
movsb
adc
sub
xchg
lret
gs
or
je
add
mov
and
nop
rorb
daa
repnz
push
push
inc
ret
je
pop
push
sti
hlt
enter
push
lcall
sub
mov
jno
inc
out
cmp
mov
insl
inc
es
cli
jnp
clc
and
fimull
insl
cmp
mov
push
orl
xchg
and
pop
fmuls
cmp
jno
pop
xchg
enter
mov
mov
xorl
mov
imul
lea
jmp
sub
imul
add
sub
stos
mov
daa
lret
push
ljmp
loop
jmp
xor
adc
jecxz
and
push
push
loopne
add
cld
sti
sub
pop
adc
jecxz
cmc
and
pop
movsl
faddp
dec
xchg
adcb
cmp
inc
cwtl
push
pop
mov
inc
jmp
mov
cld
inc
jmp
mov
cmc
repz
jmp
sar
sbb
xlat
stc
cmc
lea
or
cmp
cmp
aaa
mov
cld
nop
and
aad
inc
ret
mov
push
scas
cmc
lret
xor
leave
lds
and
xchg
test
rorl
scas
cmp
test
and
test
int3
xchg
xor
mov
cmp
adc
outsl
adc
sahf
xor
imul
ja
mov
jp
subb
mov
jbe
inc
push
movzwl
int
test
mov
jl
fidivl
bound
test
shlb
mov
push
mov
push
idivl
and
mov
xor
repz
stos
adc
add
inc
sub
pusha
jmp
outsl
sbb
mov
push
les
and
xor
data16
testb
clc
inc
fldenv
sub
xorb
mov
xchg
jge
xchg
enter
xchg
decb
xchg
sub
bnd
push
fs
mov
ja
xor
clc
inc
xchg
or
std
das
push
in
jg
push
jbe
gs
mov
out
jno
call
sub
insb
pushf
pushf
fistl
push
es
jnp
negl
insb
sbb
data16
mov
iret
mov
mov
in
adc
push
rcrl
sub
or
or
add
push
nop
jns
ljmp
push
pop
dec
scas
fmul
jl
shlb
xchg
sbb
jae
gs
mov
flds
adc
xchg
cs
cmp
dec
fs
imul
sub
fs
imul
cmc
or
fildl
add
dec
xor
cmc
and
mov
arpl
xchg
sti
mov
xchg
and
arpl
out
out
sub
scas
icebp
mov
and
sub
ljmp
jns
das
mov
nop
inc
outsb
loop
rorl
cmpsb
dec
jmp
inc
adc
pop
xchg
es
in
enter
fstp
add
push
mov
fnstenv
mov
cmc
imul
mov
cmpsb
int
push
inc
pop
mov
lock
inc
ss
xchg
pop
and
fisttpl
leave
xchg
sub
loopne
scas
lahf
xchg
mov
test
out
icebp
dec
fisttpl
stos
gs
sbb
sub
mov
mov
subb
dec
in
out
inc
mov
add
testb
xor
xlat
mov
add
dec
cmp
sahf
inc
cmpsb
jno
sbb
inc
je
ret
cmp
adc
in
and
inc
sti
xlat
cmp
mov
mov
sar
cltd
push
and
aam
push
mov
stos
xor
push
push
stos
cltd
lahf
or
jmp
xor
mov
add
jae
dec
sub
rolb
mov
rcl
test
dec
lahf
cmp
sti
push
mov
push
shrl
loopne
fxch
pop
mov
cmp
adc
fdiv
mov
fsubrl
pop
jnp
sarb
or
movl
insb
push
pop
inc
inc
mov
divl
imul
and
sub
mov
mov
cmp
ror
aad
jg
sbb
test
iret
xchg
mov
nop
fisubrl
xchg
sbb
int
mov
inc
or
sarl
pop
lahf
cmp
cmpsb
push
mov
push
sbb
xor
roll
and
adc
mov
clc
xchg
das
jnp
push
ret
xchg
push
push
clc
xor
jp
xor
cwtl
dec
xchg
arpl
sub
int
ljmp
mov
imul
jnp
mov
sub
repnz
push
hlt
and
ficompl
add
jmp
repz
outsb
loop
or
adc
fxch
xlat
or
jnp
adc
enter
ret
movsb
mov
fabs
push
enter
fucomp
push
ljmp
fstl
pusha
mov
sbb
sar
out
int3
sub
clc
pop
or
loope
lock
lods
lea
jecxz
test
shrb
inc
mov
sub
push
adc
sub
mov
pop
sbb
jle
icebp
es
aaa
add
insb
loope
push
mov
loope
add
push
nop
pop
and
movsb
sub
mov
pop
and
addb
shrl
jle
mov
into
mov
scas
pop
stos
sub
int3
mov
xor
mov
cmp
enter
cmp
insb
test
jge
ret
add
inc
dec
inc
cmp
insb
arpl
push
inc
aas
pop
sbb
xor
add
fidivrs
xor
pop
mov
subl
pop
mov
adc
or
popa
jecxz
rcrb
inc
call
xchg
xor
fcmovb
dec
gs
mov
mov
fstl
gs
inc
testb
ret
mov
sbb
push
neg
cmpsb
mov
imul
and
shrb
dec
pop
orb
or
or
popf
fimull
outsb
add
in
fnstsw
out
stos
xchg
sar
loopne
pushf
cmpsl
popa
add
sbb
xchg
mov
int
add
dec
mov
and
mov
aad
mov
push
push
bound
icebp
mov
sub
jecxz
push
pop
xor
outsl
pop
shl
icebp
ud0
fwait
add
pop
arpl
loopne
mov
inc
adc
pop
push
dec
test
jg
scas
adcb
mov
lea
adc
icebp
xchg
xchg
stc
jno
fsubl
dec
or
sbb
and
cmp
cltd
mov
stc
and
push
inc
or
ret
and
loop
mov
fiaddl
hlt
and
pop
popf
cmp
mov
pop
int
jae
xchg
sbb
add
cmpsl
les
jecxz
jge
shrb
les
adc
adc
dec
xchg
xlat
or
sbb
mov
jg
shll
cmp
adc
negl
data16
push
inc
iret
pop
dec
ja
fisubl
sub
sbb
shrb
lmsw
jbe
aad
mov
cwtl
inc
xor
clc
xor
jg
cmp
outsb
movsb
mov
xchg
sahf
mov
inc
sbb
fadds
pusha
mov
xor
mov
xchg
mov
das
or
jno
das
push
pop
movsb
inc
dec
jno
sbb
inc
inc
xlat
mov
cwtl
dec
push
dec
push
orl
inc
insl
pop
aam
push
xchg
sbb
aad
insb
ret
jo
enter
push
scas
xchg
xchg
in
or
cmp
xchg
pop
or
leave
aam
stc
adc
jge
leave
cmpsb
outsb
mov
mov
sub
mov
mov
sar
gs
out
xchg
fidivrl
jmp
js
sahf
adc
repz
xor
pop
xchg
pop
jne
dec
aam
cli
imul
pop
cmpsb
xchg
scas
add
mov
arpl
inc
das
aam
add
or
sbb
inc
inc
fisubrs
mov
mov
push
adc
out
inc
add
pop
jb
stos
inc
sbb
mov
or
xchg
push
fidivl
push
mov
insl
gs
int3
dec
xor
mov
inc
shlb
cmp
cmp
fidivl
cmp
lahf
jo
insl
mov
mov
call
fs
out
mov
pushf
pop
adc
pop
jecxz
lds
jno
mov
leave
lret
adc
pop
push
or
movsb
cld
loope
mov
leave
and
mov
xor
jmp
mov
repnz
out
mov
out
mov
push
jecxz
mov
mov
sub
fstpt
mov
popf
cmpsl
and
add
rol
popf
mov
das
add
sbb
lock
fldcw
jl
jbe
push
adc
sub
or
ret
xlat
or
enter
fsts
xor
cwtl
sti
pop
iret
daa
sbb
mov
daa
or
dec
pushf
repz
outsb
push
adc
movsl
sbb
mov
or
push
and
xchg
pop
int
loopne
adc
mov
push
ds
fadd
xchg
mov
inc
dec
pop
add
das
dec
ret
inc
or
sbb
pop
sub
in
mov
rclb
and
or
add
add
sub
adc
cmp
dec
addb
dec
mov
outsl
stos
cmp
scas
sub
pop
in
dec
mov
sbb
ret
psubd
sub
jno
jecxz
clc
mov
dec
shrl
loop
adc
pop
roll
addl
mov
pop
addl
jno
inc
mov
mov
stos
mov
jmp
rorb
cmp
call
cwtl
outsl
push
aam
xorb
shrb
imul
pop
jp
mov
adc
dec
call
push
rclb
imul
xchg
inc
push
pushf
push
notl
test
aad
inc
push
xchg
mov
arpl
div
aam
fcompl
int
cmp
xchg
jb
outsb
mov
stc
mov
adc
out
loope
add
sub
or
lds
subb
add
ss
test
fildll
test
jne
in
xor
mov
aam
sub
loop
pop
jnp
push
dec
mov
shlb
push
insb
mov
sbb
jae
rcrb
addr16
aaa
pop
and
and
push
add
addr16
mov
rcrb
jb
inc
xchg
push
fnsave
jo,pn
xchg
into
pop
sub
inc
arpl
sahf
xchg
addb
and
sub
and
push
filds
push
pop
test
ret
les
xchg
push
jmp
mov
jnp
nop
out
sub
incl
xchg
in
bound
bnd
scas
aam
shr
or
add
mov
sub
jno
mov
inc
cmp
push
call
lret
or
adc
int3
cli
cmpsl
fwait
data16
jg
sub
mov
stc
fwait
push
shl
jno
std
mov
mov
popa
sarb
or
push
or
movsl
mov
leave
mov
bound
pop
jle
xchg
je
imul
sbb
es
dec
or
cmpsb
xchg
dec
scas
test
xor
mov
or
cmc
push
add
popf
clc
pushf
rcll
scas
xchg
sbb
jp
popf
xlat
movb
dec
sahf
cld
mov
cmp
jge
imul
ds
adcb
arpl
scas
pop
mov
shlb
adc
fwait
mov
mov
mov
sbb
or
lea
fbld
insb
insl
arpl
fidivrs
cmpsb
subl
or
xchg
mov
stos
push
pop
dec
insb
pusha
arpl
push
jmp
sbb
roll
pop
push
arpl
imul
push
out
icebp
pusha
push
push
les
xor
adc
add
or
mov
mov
jle
aas
xchg
push
les
dec
stc
add
imul
push
fcoms
jo
jne
xchg
addr16
movsl
mulb
add
data16
mov
movsl
jo
mov
jnp
imul
lods
test
mov
dec
sub
adc
mov
outsl
fcomps
mov
in
jne
pop
pop
std
mov
push
mov
ljmp
xchg
data16
sub
cld
sbb
sarb
scas
mov
mov
sub
inc
mov
jo
mov
inc
dec
gs
or
jge
fsubs
in
cmp
enter
sub
sarl
add
xlat
lock
andb
dec
mov
dec
jnp
repnz
jl
addb
cmpsl
sbb
inc
push
loop
call
pop
mov
sbb
inc
les
into
sub
jo
popa
push
adc
push
dec
dec
and
jl
xchg
in
and
popa
dec
repnz
int
mov
fists
pop
xchg
test
stc
cld
push
cli
push
and
jge
mov
fwait
and
in
push
jnp
xchg
loop
xchg
xor
daa
jge
dec
xlat
xchg
mov
clc
jmp
sarl
scas
mov
andb
dec
out
or
jmp
xchg
lods
loope
clc
icebp
es
fwait
mov
outsb
test
push
mov
or
cmc
loopne
mov
mov
mov
addr16
jecxz
in
sbb
jnp
pop
sbb
testl
pop
xor
adc
jae
hlt
inc
or
dec
pusha
addl
or
inc
pop
jbe
subl
xchg
inc
mov
sub
std
sbb
mov
fimull
rclb
sbb
lods
adc
pop
insb
add
cs
dec
stos
jae
cmpsl
iret
adc
push
sub
sbb
xor
in
cs
call
mov
adc
pop
rcr
outsl
hlt
or
push
mov
lods
pop
push
call
and
loop
js
xor
idivl
and
addr16
inc
inc
mov
repz
dec
inc
jb
pop
aad
mov
mov
js
hlt
ljmp
jb
add
les
and
lret
cltd
push
repz
lcall
aam
push
add
fst
into
lods
xchg
xchg
jmp
daa
push
push
ds
out
popf
out
outsl
call
adc
daa
cli
jbe
mov
mov
mov
mov
mov
push
pop
push
cli
or
sub
jns
cli
mov
gs
mov
mov
gs
jb
xchg
cmpsb
xchg
adcl
aam
and
push
push
imul
lods
add
ds
jnp
push
dec
repz
mov
inc
xor
xchg
push
jp
lahf
sbb
ret
aaa
sbb
pop
dec
add
nop
and
adc
ljmp
loop
jle
cmpsl
or
stos
mov
and
mov
fsubrl
inc
xchg
xor
das
inc
and
mov
jbe
jns
pop
call
mov
fwait
aad
xlat
add
add
out
shlb
aaa
xchg
dec
xchg
out
push
lds
pop
mov
xor
add
jne
dec
fstl
mov
push
int
xor
loope
pop
iret
outsl
hlt
xchg
mov
pop
mov
stc
in
hlt
mov
movsl
xchg
lock
jbe
mov
lods
jmp
idivb
test
mov
pop
ds
ljmp
mov
leave
cwtl
or
out
and
sub
lcall
popa
cld
fwait
stc
lock
jle
ss
imul
fstpl
loopne
lods
jbe
xchg
jae
cmpsl
push
xchg
icebp
sbb
test
imul
clc
addr16
sbbl
adc
pop
sar
cmpsb
sbb
aas
jle
out
cld
scas
aaa
mov
or
jle
xchg
enter
inc
pop
notl
mov
scas
pop
xor
dec
gs
jecxz
movsb
mov
clc
imul
lea
dec
lea
stc
mov
mov
cwtl
stos
cmpsb
and
imull
int
lret
cld
push
or
mov
imul
pop
mov
and
sub
cmpsl
movb
imul
js
test
add
aam
insb
push
arpl
mov
in
pushf
aam
cmp
addl
mov
rolb
mov
adc
scas
int
and
vzeroupper
pop
incl
aaa
rclb
cmpsb
xchg
test
mov
dec
mov
mov
scas
cltd
push
cmp
mov
sbbb
cmp
mov
mov
cmp
lea
lret
mov
and
or
cmp
mov
scas
mov
les
pop
pop
shl
and
cli
rcll
cmpsl
std
call
xchg
lret
shlb
arpl
jl
xchg
iret
rcrb
in
movsb
adc
mov
dec
push
sbb
pop
andl
sbb
negl
xor
mov
stc
xchg
mov
icebp
cltd
sti
xor
fadd
jl
pop
add
cmp
jae
sbb
rol
call
aad
hlt
ss
mov
mov
out
loop
dec
xchg
pop
mov
xchg
or
xchg
mov
adc
bound
stc
or
push
xor
xor
stc
jmp
or
push
loopne
mov
lods
sub
xlat
xchg
xchg
xlat
jecxz
mov
adc
pop
icebp
dec
test
sub
cmp
and
add
push
testl
test
mov
jle
jb
enter
dec
fldcw
notb
inc
xchg
cld
inc
xchg
js
leave
and
mov
cmpsb
add
xlat
mov
test
fisttps
push
sub
xor
mov
test
and
roll
mov
mov
fsubs
mov
jb
push
mov
pop
or
ss
xchg
fwait
xchg
adc
xchg
movsl
hlt
xor
movsl
fimull
decl
and
pop
sbb
jp
mov
rolb
in
call
dec
or
sub
inc
fwait
mov
cs
jl
sub
add
outsb
push
mov
inc
xchg
mov
and
ret
popa
fildl
pop
inc
push
mov
jnp
or
call
mov
rcr
mov
xchg
adc
jge
push
pop
std
xchg
mov
or
icebp
int
movsb
cmp
cmp
push
adc
out
movsl
inc
loopne,pn
push
jg
icebp
movsl
xor
vmovd
sti
test
and
insl
outsl
sti
and
mov
jne
mov
pop
insl
cmp
mov
mov
xchg
cld
cltd
test
movsb
add
stc
adc
adc
xlat
fwait
orl
mov
and
shll
mov
shr
cmp
punpckhbw
sub
adc
mov
inc
idivb
mov
cmp
sahf
ret
repz
fs
jp
xor
mov
outsl
or
mov
jns
gs
cmp
aaa
push
stos
in
xor
imul
mov
adc
mov
jge
xor
aam
enter
lea
outsl
mov
aas
addl
and
subb
repz
int
sbb
ret
ja
lock
leave
sub
out
jecxz
push
and
mov
scas
fiaddl
cmp
fwait
and
shll
xorl
push
add
adc
xchg
clc
aaa
dec
jge
cmp
cmp
pop
or
cmp
and
push
pop
fstpl
push
shrb
enter
xchg
sub
xchg
lret
js
in
mov
dec
push
inc
ds
xchg
jg
push
lea
movsl
and
and
sub
outsl
mov
cmpsb
sbb
sbb
loop
adc
cmp
addb
push
pusha
jle
add
and
xor
adc
mov
xor
xlat
xorb
push
mov
aam
inc
nop
dec
cmp
jge
imul
sbb
adc
mov
push
shll
xor
dec
mov
scas
je
mov
leave
in
push
pop
repz
and
gs
inc
cmp
push
xchg
sub
inc
and
fsubrp
mov
gs
add
cli
lods
jge
cmp
das
cmc
xor
sti
mov
leave
fisubl
lret
test
xor
pop
int
jp
push
stc
in
addr16
add
aas
cmp
scas
or
mov
add
pop
loop
fnsave
jle
test
pop
xor
cmp
mov
dec
inc
mov
scas
fs
ret
push
das
int3
jno
cmp
mulb
lods
rolb
or
stos
loop
mov
add
mov
fmull
in
xlat
xchg
fs
dec
loope
stc
xchg
jo
mov
push
test
mov
lea
cltd
dec
jle
fnstenv
dec
out
add
mov
or
pop
fdivs
xchg
hlt
push
out
inc
dec
jmp
add
adc
push
sbb
sbb
in
in
push
or
mov
and
loopne
fldl
inc
add
push
insl
or
cltd
ret
out
ret
jp
pop
repz
or
pop
popf
xchg
mov
rorb
fiadds
mov
inc
iret
xor
xchg
xor
sub
add
dec
sbb
push
pop
rclb
fisttpll
cmp
mov
lods
jmp
icebp
add
fimuls
jb
mov
jo
add
jmp
fmul
cmpsl
iret
jo
pop
jno
pop
repz
icebp
faddl
and
push
jno
aas
data16
imul
cltd
inc
add
mov
sub
int
push
push
push
ret
add
inc
dec
cltd
or
outsl
xchg
sub
andl
add
xor
mov
cmovae
insb
sub
xor
ja
mov
les
xchg
gs
adcb
jle
mov
outsl
repz
xchg
int
push
xor
pop
popf
mov
lods
addr16
mov
xor
movsb
ret
outsb
das
call
arpl
fiadds
mov
pop
dec
jmp
icebp
mov
aam
movsb
mov
mov
dec
or
mov
add
inc
inc
in
into
das
fdivrp
jmp
dec
pop
pushf
fcmovnu
aam
insl
and
xorl
cmp
lret
outsl
push
jns
pushf
lcall
push
cmp
mov
push
incb
in
push
mov
mov
cmp
jle
lods
fs
dec
repnz
fisubrl
mov
push
or
push
leave
xchg
pop
repnz
jp
hlt
sub
sub
mov
xchg
xchg
les
jb
cmp
lock
fcmovnb
or
jo
scas
movsb
xchg
shr
mov
fdivrl
aaa
sbb
cmp
mov
repnz
cltd
sbbb
loop
jle
enter
out
xor
jmp
jge
lods
outsl
or
push
adc
mov
or
icebp
cvtps2pd
aaa
mov
mov
lds
xchg
lds
mov
into
test
dec
pop
daa
mov
arpl
and
rcll
xchg
stos
test
das
insl
outsb
or
pusha
mull
lds
fcom
in
test
jne
push
inc
sbb
inc
jecxz
je
xchg
pusha
mov
arpl
sbb
pop
sub
sbb
subb
sbb
ret
popl
mov
decl
adc
adc
daa
pop
in
xchg
xchg
cmpl
xchg
inc
cld
jb
or
push
loopne
push
mov
jge
enter
sti
rcrl
aad
inc
stos
jno
and
js
out
pop
sahf
enter
enter
shlb
lods
push
jnp
cmpsl
xchg
loopne
jp
pop
mov
rorb
inc
into
or
mov
popa
cmp
repnz
and
in
mov
cmp
and
into
stos
xchg
hlt
bound
pop
lock
pop
int
sub
xchg
push
jl
mov
sahf
xchg
add
pop
sub
fistps
and
loope
fists
cld
xor
pop
pusha
or
mov
shl
cmc
stos
cmc
popf
mov
add
sbb
dec
mov
xchg
je
xor
shlb
dec
add
clc
or
das
es
jle
pop
ja
push
jp
xchg
pop
sub
cmp
test
lods
jmp
sub
add
or
vmovaps
in
jmp
or
inc
pop
sub
cmc
adc
mov
adc
mov
pop
sub
xor
mov
movsl
push
mov
pushl
xor
ljmp
inc
sahf
in
mov
dec
xchg
aam
mov
push
ret
sarl
dec
ret
sbb
xchg
out
push
sbb
pop
jle
sub
mov
adc
jo
mov
mov
les
adc
test
jmp
out
pop
mov
jne
mov
sbb
lret
les
stos
mov
pop
leave
lcall
or
loope
xchg
cs
lods
lds
int3
sbb
mov
mov
sbb
out
testb
imul
jp
fisttps
dec
and
je
xchg
lahf
test
mov
xor
or
push
cmp
push
jns
dec
in
imul
xchg
loope
repz
xchg
push
test
add
inc
hlt
xor
xchg
int
inc
cmp
lea
or
sbb
test
add
add
jl
loopne
xor
inc
dec
cmpsl
xchg
test
dec
fs
sbb
js
clc
fwait
ja
pusha
cmp
mov
call
sti
and
push
jae
mov
lret
xor
push
icebp
adc
jmp
or
addr16
icebp
or
mov
loope
outsl
pop
add
mov
ljmp
je
dec
mov
in
mov
lahf
mov
xchg
or
cmp
mov
sbb
jp
mov
addl
popl
orl
cmp
fs
les
inc
fldl
jecxz
push
outsb
scas
jmp
xor
xor
into
call
inc
mov
push
inc
sahf
cmpsb
xchg
dec
aad
addr16
adc
jecxz
test
in
add
and
rcll
sbb
sbb
shlb
xchg
sti
xor
xchg
test
mov
idivb
jb
xchg
in
mov
xchg
fwait
in
shll
rorl
and
pop
mov
and
in
mov
inc
fcmovne
or
mov
lret
mov
lds
fcompl
jle
orl
popa
or
mov
and
mov
mov
cli
push
dec
cli
fbstp
sbb
and
mov
push
sbb
ret
shlb
xchg
dec
out
iret
clc
fnsave
cmpl
mov
ja
mov
mov
pop
sbb
mov
jae
es
iret
inc
inc
aam
inc
repnz
icebp
cmpsb
and
insl
cmp
outsb
push
sbb
test
mov
pop
andb
push
movsb
or
movsb
lods
push
sbb
repnz
scas
cmc
clc
sbbb
fdiv
xor
fxtract
cld
addb
jo
arpl
stos
lds
sub
test
es
jne
pop
xadd
cltd
push
addr16
cwtl
cmp
jmp
loope
mov
add
ss
movsb
xor
fyl2xp1
lret
mov
dec
push
sahf
sub
push
enter
adc
enter
loope
sub
andb
adc
push
lods
mov
and
data16
aaa
mov
xchg
pop
imul
rcrb
xchg
dec
jnp
mov
jns
out
enter
pop
push
mov
movsl
xor
xchg
in
nop
mov
mov
subb
xchg
mov
int3
pop
rcll
xchg
mov
push
dec
cld
shlb
scas
sahf
in
sub
or
sub
shl
ljmp
outsl
fistps
sahf
add
push
jmp
add
push
jecxz
xchg
mov
sub
jbe
cmp
or
mov
gs
lods
push
sbb
in
push
sbb
jle
sub
scas
das
and
daa
mov
pop
fbstp
inc
loopne
pop
sti
fcoms
cmp
inc
fwait
notb
jp
xchg
aaa
lret
outsb
imul
dec
sti
mov
cmpsl
cmp
fnsave
inc
xlat
xchg
nop
in
xchg
add
ljmp
inc
fmulp
xchg
sub
push
lods
add
dec
add
jns
kmovw
decl
movsl
pushf
mov
jg
adc
and
loope
add
dec
popf
pop
jecxz
js
push
insl
inc
add
pop
jge
fisubrs
adc
gs
std
mov
insb
mov
insb
ret
push
jo
sub
mov
lcall
jo
xor
test
lret
inc
or
stos
lods
jo
jle
lret
stc
outsl
ror
jo
mov
shrl
adc
addr16
lods
iret
popf
pop
cmp
cld
or
arpl
or
iret
and
cmp
shr
mov
mov
xchg
sub
clc
ja
aam
cmpsb
jle
jecxz
cmp
pop
jae
scas
fisttpll
pop
jg
in
cmp
inc
cltd
inc
jle
aas
out
and
xor
cmp
in
mov
push
inc
fisttps
pop
sahf
inc
jno
jecxz
stos
or
add
xchg
push
pop
cmp
adc
in
enter
in
pop
cmp
push
leave
push
inc
sbb
fisubs
iret
cmpsb
cmp
jne
push
push
lret
imul
push
sub
push
ljmp
fldl
outsl
enter
outsb
fstps
aas
clc
dec
rcrb
mov
pop
sbb
jbe
lea
add
in
mov
xor
jns
jbe
daa
jbe
adc
movsl
std
mov
xchg
push
push
shll
ljmp
adc
mov
insl
ret
xchg
addr16
adc
lret
loopne
cmpsb
enter
and
jb
pop
les
jo
push
xor
mov
out
mov
cwtl
dec
sub
mov
inc
repnz
xchg
test
push
rolw
cmc
mov
push
inc
lahf
in
xchg
xor
pop
mov
rcll
adc
mov
jge
mov
sub
loopew
jge
bound
enter
arpl
jo
cwtl
aad
ds
sahf
and
xor
jmp
scas
imul
sub
mov
lahf
jne
mov
push
mov
push
mov
and
lcall
cld
mov
test
lcall
push
or
loope
adc
jno
adc
pop
sbb
ret
xor
popa
sbb
dec
sar
xor
xor
xchg
imul
mov
jl
ss
movsl
test
aad
cs
xchg
add
insl
aad
jb
mov
lret
jb
xlat
subb
push
dec
xchg
das
mov
daa
cmp
push
add
fcmove
mov
into
popa
pop
fstps
cmpsl
mov
fwait
xchg
pop
mov
inc
imul
clc
jmp
fisubrs
addr16
mov
xchg
xor
ret
cmpsl
mov
sub
push
addr16
xlat
mov
dec
mov
push
cmp
aas
int3
cmpsl
xor
clc
push
lcall
jnp
cmpsb
mov
in
scas
lret
jns
push
test
std
cwtl
adc
movsb
mov
xor
or
jl
test
loop
iret
fiadds
mov
mov
adc
jg
sarb
pushf
push
rorl
adc
cli
jl
cli
into
push
ja
pop
dec
mov
cli
bound
filds
out
push
subb
into
xlat
popf
mov
xchg
ljmp
jp
push
rcrb
mov
enter
lods
aam
std
sbb
cmp
mov
adc
sbb
sub
xor
out
xchg
mov
fucomi
inc
stc
or
xor
loop
incb
xor
sbb
lahf
push
push
sbb
add
adc
movsl
rcl
mov
and
ficoms
dec
jp
sub
testl
inc
jmp
aas
cmpsl
pop
es
dec
incl
xchg
lret
adc
fnstsw
sub
pop
or
and
sub
xchg
cwtl
mov
test
adc
outsl
sub
test
aad
cmp
lcall
sar
and
sub
push
fs
mov
lahf
sub
stos
jno
push
mov
dec
or
jno
xor
ret
mov
mov
pop
fmull
or
adcl
xchg
jmp
in
sbb
mov
lds
pushf
inc
mov
and
or
or
fisttpl
mov
sbb
or
cmp
fsubrs
mov
js
out
test
adc
icebp
repnz
inc
adc
fildll
test
or
mov
lds
xor
sbb
fldcw
mov
mov
mov
adc
das
std
lea
repnz
dec
lods
push
je
cs
dec
int
insb
mov
sub
sub
shrb
xor
jmp
out
insb
push
or
lods
ss
sub
out
sbb
adc
sub
cmp
mov
sbb
mov
inc
cli
inc
pop
movsb
int3
jb
adc
sahf
in
add
cs
sbb
xchg
jnp
fldt
push
pop
inc
pop
lea
or
sub
mov
jb
push
repnz
cmpsl
ficoms
repz
outsl
iret
push
push
mov
fcomps
icebp
lea
gs
cmp
xchg
in
mov
cltd
push
dec
pop
mov
xor
stos
push
push
and
ss
cmp
add
dec
fcmove
sbb
adc
dec
mov
in
movsb
and
adc
add
mov
xor
push
sub
loope
and
std
jbe
xchg
rorb
es
mov
mov
inc
xchg
xor
jo
cmp
popf
mov
pop
shrl
pop
fldenv
jb
stos
insb
dec
pusha
inc
inc
add
jns
sub
shll
jl
aam
sub
adc
inc
call
mov
mov
dec
in
mov
dec
test
mov
out
mov
nop
mov
mov
cmp
lahf
leave
ret
out
mov
imul
dec
cltd
popa
std
ret
xchg
push
dec
int3
xlat
add
testb
fistl
dec
add
xor
mov
shlb
loope
pop
out
cltd
icebp
pop
xchg
and
jp
insl
test
filds
inc
sub
ss
icebp
sbb
mov
push
mov
movsl
dec
mov
cmc
incb
imul
js
jle
lods
mov
cmpsb
stc
adc
push
aad
daa
cmp
sbb
pop
add
jge
jbe
adc
pop
cld
lahf
or
pop
pop
jo
lahf
outsl
add
movsl
pop
add
out
cmp
push
dec
xchg
push
insl
ja
mov
sub
xchg
js
in
xchg
or
popf
enter
jne
insb
mov
fcoml
mov
mov
stos
push
hlt
dec
add
outsb
test
jo
and
xchg
pop
mov
jp
pop
cld
lods
aaa
movsl
xchg
lret
imul
jg
stos
xor
xor
aas
cltd
mov
pop
and
and
repz
rcll
insb
movsb
xor
jge
test
fwait
hlt
mov
subl
aad
bound
mov
inc
cmc
rorb
leave
push
jmp
jmp
and
mov
jle
add
mov
xor
xchg
ror
in
adc
pop
icebp
mov
cmpsl
jp
and
call
nop
push
mov
push
imul
inc
inc
cmp
stos
js
adc
cmpsb
cmp
xor
jl
pop
and
xor
mov
push
addr16
shr
arpl
ffreep
movsb
lds
xchg
xchg
in
scas
and
inc
daa
sbb
jno
lret
jae
jo
mov
mov
cmpsb
aam
ret
enter
outsb
fsts
mov
ljmp
mov
adc
decb
in
adc
das
iret
jb
and
push
gs
cmpsl
add
daa
test
pop
stos
lcall
xchg
mov
inc
fisubrl
aam
jo
and
aas
imul
push
xchg
adc
minps
inc
mov
ss
repnz
adc
push
cmpb
xor
in
data16
cmp
inc
pop
data16
sahf
push
pop
fwait
sub
jge
jae
je
pop
out
aad
adc
sub
sbb
pop
push
dec
sbb
inc
shll
cmpsl
mov
iret
jle
mov
mov
int
shr
jo
dec
and
mov
in
addr16
dec
rep
icebp
popf
jnp
or
push
std
mov
jae
mov
mov
and
and
pop
andb
jbe
leave
call
bound
push
xor
push
pop
imul
push
mov
jmp
mov
cmp
jecxz
push
fists
jae
sub
sbb
cs
push
push
fdivl
bound
scas
jmp
rcll
jl
outsb
mov
pop
cmp
addb
shrb
rolb
or
xor
sub
jl
ficompl
and
hlt
dec
sub
jmp
dec
sub
fcmovb
cltd
pop
repnz
leave
sub
std
ja
insb
mov
mov
lea
out
ja
repz
pop
ja
mov
ret
je
das
cli
dec
mov
sbb
adc
cli
xor
jno
add
jae
add
pop
fcomi
fisubl
mov
int3
and
sub
jg
jne
ret
stc
out
in
jns
mov
pushf
xor
test
inc
or
mov
xor
pop
push
xchg
pushf
repnz
cmc
mov
clc
leave
aaa
jo
sar
mov
andb
mov
jl
cmp
pop
inc
lret
xchg
cmpsb
fcompl
xchg
xlat
sbb
push
ret
mov
push
xchg
mov
aas
call
mov
add
sub
imul
test
mov
lret
popa
adc
push
test
inc
je
xchg
aad
mov
mulb
enter
or
bound
scas
fnstenv
sbbb
dec
mov
sub
mov
je
push
cmp
and
jb
dec
push
fwait
and
outsb
js
scas
in
lret
jns
int3
clc
sbb
or
push
jae
pushf
stc
fdivrs
aas
mov
push
aad
mov
and
popf
shll
adc
ja
mov
cbtw
sbb
sub
test
pop
test
rorl
aas
mov
mov
sub
push
xchg
xlat
mov
fstpl
cmp
dec
mov
shlb
mov
fdivrl
fs
pop
repnz
loopne
out
lock
dec
xchg
sub
push
and
fs
addl
stc
jbe
cmp
jp
adc
and
jle
cmp
fnstsw
stos
sub
out
or
and
jge
cmp
je
xchg
inc
sub
pop
aas
push
scas
gs
loopne
sbb
pop
cmp
inc
lcall
push
nop
jbe
aas
xchg
push
in
icebp
sbb
pushf
or
pop
loopne
inc
call
cs
jge
neg
push
push
aaa
push
pop
push
in
sub
xchg
cmp
lea
sahf
pusha
sti
xor
xlat
jns
pop
mov
shl
js
push
inc
int3
pop
idivb
shl
loopne
int
out
mov
rcrl
adc
mov
xchg
xor
in
clc
stos
popa
aas
push
cld
mov
ret
cmpsl
mov
jecxz
dec
ss
xor
cmp
xchg
test
iret
lahf
sbb
cmp
loop
pop
mov
lcall
negl
fs
insb
in
inc
sub
mov
in
push
std
push
push
cmp
data16
sarb
inc
push
xor
fstps
push
push
cld
inc
xchg
jmp
sbb
outsl
mov
and
imul
xchg
sbb
es
mov
push
add
hlt
aas
mov
pushf
jle
lcall
add
pop
jecxz
test
sti
ja
imul
mov
inc
mov
imul
lcall
pop
sub
push
push
ret
xchg
dec
cmp
sub
cmp
cmp
je
hlt
pop
gs
test
pop
xor
mov
cmp
xchg
mov
lock
dec
enter
aaa
inc
enter
test
lods
inc
lret
fwait
inc
sbbl
in
adc
xor
test
cmc
pop
into
sbb
dec
lods
imul
repz
fistl
imul
fstp
into
outsb
test
outsb
in
inc
outsl
push
test
loop
ljmp
hlt
insl
sub
dec
inc
movsb
sub
dec
mov
inc
jecxz
xor
insl
in
push
outsl
cltd
loopne
pop
adc
and
mov
icebp
fstps
stc
xchg
call
mov
lds
inc
inc
jl
mov
loop
xchg
adc
scas
adc
push
mov
add
ret
sub
loope
mov
push
call
pop
mov
push
xor
pop
bound
inc
stc
hlt
jle
pop
je
in
cmpl
lods
out
mov
aas
movsb
in
sub
cli
jp
mov
lods
lret
test
fisubs
push
out
mov
inc
sub
das
jge
popf
inc
test
daa
mov
shlb
es
mov
outsb
xchg
mov
xchg
mov
in
clc
out
cmp
push
subb
call
shr
jnp
je
idiv
push
jne
mov
cmpsb
pop
pusha
pop
test
int
popa
pusha
sbb
fcmovnbe
in
fneni(8087
cmp
mul
pop
js
into
jl
idivl
rclb
mov
adc
cmp
jmp
xchg
jl
arpl
mov
je
sub
call
fs
cmpsb
jmp
test
fwait
pushl
jg
push
in
aaa
xchg
add
mov
inc
mov
add
jecxz
fstpl
lds
je
cmc
hlt
push
stos
aaa
and
lret
and
int3
rcll
mov
popf
pusha
lahf
lock
cld
je
les
add
jne
enter
cmc
jae
fbstp
aad
orb
mov
lcall
test
sbb
jns
hlt
shll
push
aad
das
mov
sub
faddl
std
pop
pop
inc
popa
and
aas
in
ss
stc
adc
stos
movl
xor
orl
dec
adc
dec
ficompl
jns
mov
mov
insb
mov
push
push
iret
ja
push
push
lea
out
mov
inc
in
pop
inc
xor
es
movsl
loop
in
xchg
sbb
jmp
inc
out
xor
sbb
lea
push
push
jbe
push
jle
loope
jl
mov
lahf
aad
mov
mov
out
cmp
iret
daa
outsb
push
sub
mov
add
jp
inc
mov
push
cmpsb
pop
movsb
mov
cmp
pusha
add
and
adc
aaa
xchg
adc
out
add
and
mov
mov
shll
ja
xchg
movsl
push
jmp
stc
pop
js
mov
and
insb
fs
add
mov
mov
fidivrl
xchg
mov
orl
cmp
adc
add
mov
and
cmp
mov
jbe
movsb
jo
pop
stos
mov
addr16
adc
xor
out
fwait
pop
rolb
incb
shll
push
cmp
cmp
fnstcw
jge
test
cmpsl
mov
fyl2xp1
inc
cmpsl
rcl
cmp
inc
cltd
push
mov
stos
ds
or
xor
xchg
popf
cmp
or
mov
mov
pop
mov
aad
mov
pop
test
jp
stos
test
add
not
jmp
aad
out
mov
inc
jp
sbb
ljmp
insb
nop
aam
or
push
cmp
sbb
sbb
xchg
test
pop
cmp
imul
and
fsts
mov
add
mov
sub
scas
pop
adc
fadds
mov
outsl
jecxz
sbb
test
xchg
fnstenv
pop
dec
push
add
ja
add
or
or
pop
cld
add
add
mov
xor
lea
cmp
bound
mov
mov
xor
pop
arpl
push
mov
cld
mov
pop
add
sbb
sti
cld
xor
negl
call
xorl
cmp
fnstsw
add
mov
aad
mov
add
add
sub
mov
push
adc
push
clc
pop
add
cmc
pushl
jno
stc
movsl
dec
sub
es
and
int3
sahf
pop
sbb
stos
push
fs
sbb
dec
and
mov
pop
sbb
imul
out
lahf
sub
stc
loope
mov
cmc
xor
pushf
shlb
lret
outsb
jae
xchg
in
and
in
push
cwtl
shlb
mov
jmp
xlat
cs
mov
push
mov
mov
sbb
lock
mov
ja
addr16
xchg
mov
dec
inc
xor
mov
imul
popf
in
mov
aaa
mov
inc
lods
or
insl
pop
icebp
mov
scas
sarb
movsb
stos
dec
or
mov
mov
and
jne
iret
in
mov
clc
mov
stos
inc
mov
or
inc
xor
insb
fistpll
leave
std
mov
fisubrl
xchg
or
sub
mov
mov
das
or
movl
jo
in
dec
test
ljmp
in
into
add
js
cld
cmp
sbb
push
sbb
mov
xor
pop
ljmp
sub
sbb
stc
push
xor
cwtl
jp
mov
int3
sub
xor
ss
rorl
shrl
inc
jb
mov
xor
lods
xchg
pop
out
addr16
std
and
sahf
sahf
ljmp
jno
cmp
pop
inc
xchg
mov
add
frstor
pop
sar
jae
adc
fcoms
sub
dec
insl
or
inc
aaa
add
sahf
add
imul
arpl
add
and
jb
out
lods
lods
xor
scas
hlt
pop
push
push
jnp
into
jb
push
int3
aad
or
decb
jnp
sbb
add
inc
in
and
lret
xor
xor
xchg
push
ss
lcall
mov
xor
jge
cmpsl
loop
mov
xchg
rcl
inc
sbb
inc
notl
mov
aaa
int3
jae
jnp
decb
loope
in
pusha
call
scas
lret
dec
popa
adc
xlat
test
jbe
adc
bsf
adc
ss
and
mov
xchg
lods
sbb
push
xchg
mov
cli
cmp
inc
sub
xor
mov
cltd
jecxz
loope
and
icebp
mov
es
bound
std
sub
inc
movswl
cmp
xchg
movb
push
ficompl
sub
inc
ret
cmp
sbb
jl
xor
inc
xor
cmpb
jbe
lret
xor
fst
jbe
inc
inc
cltd
outsl
fwait
or
sub
mov
inc
clc
shlb
push
lds
adc
push
sub
mov
xchg
and
std
or
or
shl
lods
aam
bound
cmc
stos
add
sub
cld
mov
ror
sub
aaa
mov
dec
adc
mov
xchg
jle
rol
dec
mov
ret
dec
shrb
xchg
cs
sub
sbb
pop
retw
dec
cmpsb
lods
sbb
adc
not
adc
cltd
dec
lods
popl
xchg
loope
call
sti
js
push
mov
insb
add
xchg
test
push
and
sbb
lods
popa
dec
lret
lock
pushf
je
xchg
push
movsb
jg
scas
lds
sahf
push
mov
inc
mov
stc
cmp
mov
cmc
mov
mov
lret
inc
xchg
mov
mov
lcall
push
test
jl
xor
jno
movsb
mov
xchg
or
sbb
xchg
insl
lret
or
arpl
lods
mov
or
mov
shrb
mov
fs
aam
outsb
les
out
sub
inc
arpl
jb
pusha
ja
mov
push
push
cmp
dec
inc
mov
add
or
adc
sbb
pushf
test
daa
pop
shr
push
xchg
aam
mov
and
xchg
test
fadds
sbb
ja
pop
enter
idiv
subb
ja
enter
les
dec
lea
repz
jb
cmp
mov
add
mov
sbb
out
add
inc
orb
cmp
and
sbb
ljmp
add
cs
mov
push
addr16
js
pop
and
mov
loopne
adc
sbb
jmp
lahf
mov
incl
cltd
xor
aam
push
dec
inc
fdivs
movb
lret
pop
loope
aas
pop
mov
dec
inc
std
arpl
jmp
std
lcall
aaa
push
cmp
sub
jbe
xor
sub
pop
cmpsl
adc
insl
iret
test
data16
fnstcw
lcall
mov
lock
shl
in
push
adc
or
lods
jb
pop
or
or
jl
jo
push
adc
nop
subb
sar
mov
push
in
mov
sub
outsb
push
cmp
outsb
out
sbb
add
cmpsl
jmp
jne
xlat
outsl
out
add
in
fwait
xor
mov
mov
mov
shrb
and
xor
test
dec
je
push
sbb
nop
not
sbb
mov
lret
dec
mov
cmp
daa
std
mov
sub
data16
orb
lds
adc
stos
jecxz
in
xor
push
mulb
mov
lahf
pop
bound
das
dec
inc
jo
ss
cmp
or
cmp
jg
xorl
pop
sbb
loope
adc
aam
outsl
xchg
dec
or
fs
adcl
mov
mov
ss
mov
xor
lds
iret
pop
pushf
repz
xor
out
lea
jb
jecxz
jp
xor
pop
jae,pt
adc
das
dec
scas
hlt
out
cmp
push
and
insb
lcall
mov
aam
test
movsb
les
sbb
cmp
mov
or
out
cmc
mov
sub
inc
dec
dec
sbb
mov
sub
aam
mov
push
mov
adc
cwtl
sbb
xor
je
sti
xchg
jl
pop
sub
xor
sub
jno
push
movsb
test
pop
out
stos
and
sbb
push
ret
out
or
sub
lds
sbb
xor
into
aaa
imul
add
xor
pop
push
lret
inc
aad
or
pop
adc
leave
mov
leave
test
sub
mov
mov
cmp
sub
push
cmp
out
jne
pop
jno
cmp
pop
movsl
call
roll
inc
pushf
negb
pop
pop
fisubl
mov
lahf
mov
iret
xor
mov
pop
in
shrl
stc
negl
pop
mov
fisubs
mulb
xchg
pop
sbb
sub
out
jns
test
imul
sub
ret
les
jmp
adc
push
mov
loope
and
jnp
divb
push
jbe
rclb
mov
out
dec
iret
mov
and
adc
push
lods
or
sahf
out
mov
sbb
ficomps
xchg
mov
mov
mov
jo
mov
leave
shld
dec
push
cmp
xchg
clc
and
imul
punpckhwd
and
pop
dec
cmp
mov
pushf
hlt
pop
js
test
std
jecxz
lcall
lods
daa
fs
ds
mov
push
fidivrl
mov
sar
push
pop
rclb
test
mov
add
test
xor
scas
fbstp
push
andb
or
hlt
in
lods
in
aad
mov
loopne
ror
dec
loop
mov
xchg
xchg
cmp
mov
xor
sti
xchg
jg
dec
push
pop
inc
loopne
stc
inc
pop
movsl
mov
fsubrs
int3
pop
ds
push
xor
sub
orl
cmp
bound
icebp
les
lds
and
mov
cmp
ljmp
scas
fadd
inc
mov
repz
and
fs
push
rcpps
aad
scas
xor
imul
or
xor
or
sub
mov
pop
and
add
dec
pop
mov
xor
adc
cmp
es
push
and
mov
adc
adc
lahf
fsubr
out
aas
fucomip
pop
dec
adc
xor
into
cmpsl
adcb
lea
pop
lods
mov
or
mov
cmp
pushf
aam
pop
mov
ret
jp
insl
fidivrs
mov
icebp
out
mov
adc
sub
lahf
out
or
adc
aam
and
sub
and
iret
add
icebp
pcmpeqd
dec
sub
mov
scas
pop
jp
push
outsl
push
sbb
int3
inc
test
loopne
xor
pop
jl
xchg
jnp
movsl
sub
int
pusha
shll
push
ss
mov
ljmp
mov
rolb
icebp
jmp
popf
inc
cmc
in
aad
mov
jne
stos
push
xchg
sub
add
xor
sbb
xlat
je
cli
adc
arpl
or
mov
int3
inc
sbb
push
imul
inc
push
cmpsb
insl
negl
xor
and
dec
lret
enter
jl
outsl
cmp
xchg
insb
xchg
insl
imul
jle
pusha
mov
loop
adc
mov
popa
mov
cmc
sub
mov
xchg
psrlw
test
mov
mov
inc
pop
in
outsb
cld
inc
fistl
mov
jle
jecxz
hlt
pop
push
dec
out
jo
mov
mov
mov
in
fldcw
jo
push
mov
push
bnd
sub
ret
mov
aaa
test
sbb
mov
sbb
fstps
aam
test
dec
jns
push
push
mov
fcmovbe
push
add
filds
xchg
pusha
adc
sub
cli
lret
pop
mov
fptan
test
pop
jo
push
or
int3
inc
push
inc
cli
addr16
aas
scas
lahf
mov
nop
xchg
ret
shl
sbb
aam
jae
inc
jmp
and
rol
xchg
adc
mov
jp
mov
jecxz
cmpsb
add
iret
mov
cmc
movsb
movsl
mov
icebp
outsb
sub
repz
push
das
push
cmp
into
jb
sbb
xchg
ret
sti
cmp
sub
mov
cmp
lret
xor
inc
enter
frstor
movsb
sarl
push
cmp
popf
add
push
fs
add
add
mov
add
aam
in
lds
lods
repnz
mov
scas
inc
lods
adc
test
into
cmpsb
dec
divb
je
dec
fistpll
sbb
xor
fwait
mov
xchg
sbb
int
sub
popa
sub
and
pop
xor
mov
aam
jle
in
or
xchg
jge
mov
fbld
sbb
dec
std
jbe
lock
pushf
jl
mov
dec
les
loopne
mov
icebp
loopne
push
xor
cltd
cltd
cmpsl
mov
stos
sub
cmp
sub
and
nop
cmp
insl
fs
pop
fimuls
adc
inc
pop
adc
dec
cmc
xchg
pop
lods
jae
test
cmp
cmp
lret
pushf
jb
rol
popf
jnp
inc
xor
mov
mov
sub
out
lahf
adc
cmp
sub
jmp
inc
add
xchg
popf
and
ljmp
ss
and
ljmp
xor
xor
orb
mov
jmp
xchg
out
push
dec
in
and
cmpsb
enter
inc
mov
loope
jle
jp
jb
in
jmp
ret
sbb
jmp
mov
fwait
out
xchg
inc
and
repnz
int3
cmp
xchg
sub
movsl
xchg
cbtw
gs
push
ds
icebp
lcall
aaa
outsb
sbb
cmp
sub
loopne
adc
xor
dec
sbb
inc
data16
imul
ret
inc
lahf
fwait
sbb
push
mull
fists
pop
add
fistpl
cmpsb
sub
loopne
sub
movsb
sti
inc
fimuls
arpl
lcall
scas
sbb
xor
jbe
dec
loopne
inc
inc
aam
inc
push
subl
cmp
mov
mov
stc
inc
out
out
xchg
popf
jns
push
lret
ja
add
mov
aad
iret
and
xlat
popa
cmpsl
inc
or
std
scas
int3
xor
or
xchg
sarb
loopne
add
in
mov
xchg
sbb
ja
xor
call
add
xor
andb
and
and
inc
fwait
aas
aas
sub
sub
mov
ret
and
out
jbe
ss
out
push
movsb
mov
out
enter
popf
dec
and
inc
pop
sub
add
jge
adc
push
pop
mov
out
and
lock
xor
fildll
div
andb
mov
sti
cmpsb
mov
adc
leave
or
and
pop
hlt
or
stos
hlt
js
xchg
nop
inc
inc
shrb
push
out
ret
loope
inc
clc
fdiv
aam
insl
pop
push
das
cld
loopne
cltd
and
push
movsb
mov
inc
jmp
lret
mov
cwtl
int
cmpsb
rorb
jb
push
mov
sbbl
sbb
push
push
pop
and
jge
inc
sub
sti
in
pop
mov
mov
push
mov
ss
or
jp
push
mov
jmp
sahf
mov
call
inc
inc
les
mov
mov
add
cmpsb
xchg
push
call
addr16
aas
aad
push
or
jmp
out
psubsw
adc
and
lea
jno
imul
push
addr16
lahf
sbb
mov
mov
scas
out
or
rcll
cwtl
idivb
dec
int3
dec
jle
push
xchg
or
popf
outsb
imul
mov
les
mov
mov
xchg
fwait
cltd
loop
push
mov
xorl
sbb
mov
jmp
mov
sarb
outsb
scas
dec
lret
cmp
mov
xchg
push
jno
jl
adc
rcr
in
pop
stos
or
test
jnp
loopne
xchg
mov
or
out
pop
sbb
pop
fsts
and
stos
sub
xor
jp
adc
movsb
inc
out
mov
push
iret
add
stos
or
pusha
add
dec
push
imull
out
jp
scas
mov
in
sbbl
mov
ds
lret
jge
test
adcl
and
in
in
subl
jnp
arpl
jb
aam
lock
cmpsb
mov
cld
adc
cmp
nop
repz
jl
or
dec
jne
adc
dec
cmpsb
push
out
out
mov
gs
dec
pop
jg
fistpll
clc
and
out
jns
lret
inc
mov
popa
cmpsb
push
dec
imul
and
loop
xchg
sbb
scas
dec
dec
mov
dec
in
xlat
inc
shl
notl
fildl
pop
jp
inc
out
sbb
mov
push
dec
mov
sbb
add
call
std
addr16
test
push
jle
add
adc
inc
mov
cmp
sahf
imul
fidivs
jo
insb
adcb
cwtl
push
xchg
xor
mov
loopne
out
pop
into
mov
xor
aad
inc
aaa
arpl
dec
lods
fldt
iretw
xor
daa
movsl
ds
xchg
sbb
adc
fsts
sarb
sub
push
pop
test
fcmovb
or
cmc
add
sbb
inc
test
lods
add
sub
nop
sbb
popw
arpl
dec
in
jns
mov
pop
sbb
mov
je
inc
dec
jae
jge
pop
mov
aam
jb
repz
sti
ljmp
inc
stos
imulb
push
jbe
in
cmpb
inc
xor
insb
lea
xchg
lea
dec
les
sub
js
xlat
sub
dec
sub
fcoms
mov
xchg
iret
mov
dec
ficoml
push
sti
inc
sarb
mov
cmp
push
xlat
stos
ret
push
dec
call
pop
outsb
pop
lods
scas
pusha
das
iret
or
sbb
add
aad
adc
test
jae
jo
stc
loope
mov
test
dec
or
lahf
fwait
mov
loop
lahf
outsl
aaa
stc
in
mov
cmp
fwait
loope
scas
fs
pusha
mov
lret
repz
ret
jl
scas
rorl
aad
mov
pop
in
push
enter
mov
fisttpll
mov
inc
outsb
or
push
push
data16
outsb
pop
lret
test
adc
pop
popl
scas
je
xchg
jmp
and
out
dec
fsts
xor
ss
xchg
cmp
cmp
push
jo
jp
mov
add
je
pop
xchg
loop
lock
scas
dec
lret
or
add
mov
data16
aas
es
inc
fbstp
std
repz
and
or
ret
out
pop
dec
xor
in
shl
adc
lret
test
mov
out
repnz
pop
mov
sub
loop
popa
xchg
shl
mov
adc
ss
jecxz
xchg
test
fadds
inc
es
adc
daa
xchg
shll
fsubrs
clc
stos
inc
rclb
adc
push
mov
rcrb
fsubrl
mov
mov
xlat
pop
xchg
mov
repnz
sbb
stos
sti
test
sub
bound
dec
andb
popf
lret
test
dec
or
mov
push
fstl
dec
orb
test
loope,pt
jno
mov
movl
addr16
jo
mov
pusha
outsb
or
stos
shlb
mov
xlat
ja
jns
xor
push
imul
adc
jnp
adc
out
dec
nop
mov
aas
lea
or
add
cmp
pop
mov
jge
lea
jge
sub
rorl
push
fwait
jo
fsts
mov
fldl
ljmp
aad
mov
hlt
test
lock
fcomi
mov
push
cmp
mov
push
mov
and
add
push
test
insl
xor
jp
movl
add
push
and
mov
lcall
lret
rolb
imul
frstor
sbb
push
add
daa
inc
xchg
les
dec
filds
push
gs
loopne
xlat
data16
mov
dec
dec
icebp
lcall
dec
fwait
inc
mov
pop
out
pop
xor
mov
jmp
je
dec
enter
adc
cmp
lret
loope
push
pop
mov
xor
jge
int3
aam
xor
scas
mov
jmp
sti
add
dec
test
data16
shrb
out
sbb
pushf
and
push
xorb
xchg
mov
push
inc
nop
xchg
xorb
ret
cmp
push
xchg
ljmp
xor
jmp
cld
lods
icebp
mov
jmp
xor
lds
dec
add
out
cmp
leave
mov
outsl
cltd
repnz
ret
or
or
js
jecxz
lods
rcrb
les
aaa
lods
insb
jo
push
das
inc
lret
fwait
cld
lahf
sub
aam
cmp
mov
pop
push
lds
push
jne
mov
cmp
ljmp
push
notl
push
mov
mov
lods
xchg
enter
sti
jg
push
xchg
or
xlat
xchg
push
jae
mov
push
push
push
xchg
inc
add
into
inc
ror
cmp
sub
sbb
push
pusha
inc
in
cmpb
xchg
out
out
xchg
and
sbb
xor
insl
mov
loop
cwtl
cwtl
les
mov
xchg
or
mov
jno
popa
lahf
repnz
repnz
push
mov
es
int
jge
js
fwait
sub
les
jle
stc
int3
arpl
mov
jb
xchg
xor
pop
add
xlat
out
incl
and
jnp
or
xor
jl
sbb
push
mov
divb
mov
sbb
jae
sahf
pop
dec
loope
imul
sub
lods
shrb
repz
jae
and
sub
inc
hlt
cmp
sbb
sub
cmp
fs
xor
inc
xor
insl
setnp
push
adc
loop
in
aam
loopne
insl
dec
push
mov
fisttpl
int3
pop
std
mov
enter
push
fdivp
mov
out
and
bound
and
ljmp
or
sub
mov
cs
out
adc
int3
das
ss
push
mov
xchg
fsin
sub
xor
push
in
popf
mov
push
pop
bound
xchg
adc
jge
xchg
scas
pop
push
adc
idiv
testl
xor
cmpsl
ja
mov
lods
xor
adc
inc
jmp
add
cltd
add
mov
mov
sahf
adc
mov
or
mov
xorb
aas
fdivrp
lcall
push
sti
fcomps
fwait
xchg
mov
sub
daa
js
dec
sbb
cmp
mov
pop
mov
jae
sbb
jecxz
push
adc
in
int3
jl
cmp
test
adc
ljmp
sbb
and
dec
enter
push
clc
inc
xor
data16
cmp
stos
dec
repnz
test
inc
popa
mov
xor
std
je
sub
inc
fdiv
lods
add
add
mov
jp
add
xlat
repz
jb
mov
sbb
sbb
inc
cmpsl
adc
or
sbb
push
pop
aas
sti
push
cltd
dec
dec
hlt
jle
mov
dec
aad
jl
add
test
jns
ljmp
shlb
outsl
lahf
data16
pusha
popf
pop
fsts
or
mov
popa
add
push
pop
and
inc
mov
or
push
cmpsl
mov
or
stos
or
mov
pushl
push
dec
jbe
lcall
imul
add
stos
lret
out
push
insl
call
repnz
xor
lret
mov
cmp
jno
push
add
inc
push
add
cmpsb
shll
dec
out
std
movsb
push
sbb
icebp
test
shrb
jbe
sub
fimull
jo
insb
jne
sub
push
add
aas
lods
ficoml
fs
xor
cmc
hlt
int3
xchg
je
pop
sbb
gs
xchg
add
dec
sbb
test
movsl
push
lea
mov
pop
in
dec
push
in
cmpsl
insb
and
mov
and
cmp
and
xchg
mov
dec
outsb
sbb
mov
call
mov
jno
mov
mov
shlb
mov
mov
imul
lcall
subb
in
popf
mov
cmp
push
mov
cli
or
adc
jmp
fldcw
xchg
sub
xchg
sub
cmpsb
sbb
lds
andl
xor
dec
daa
shll
push
cmp
pop
or
and
pmaxsw
mov
mov
stc
pop
aad
or
aad
sub
xor
mov
sub
adc
movsb
int
mov
xor
psrad
sarb
das
aaa
cmp
mov
or
fsubl
mov
fs
loop
in
gs
pop
mov
ss
test
mov
fstpt
cmc
push
xorb
pop
xor
or
or
dec
shrl
pop
out
mov
bound
mov
aas
shll
adc
ss
cwtl
outsb
bound
xor
cwtl
or
imull
int
sbb
hlt
inc
cli
lea
push
pop
and
int3
pop
in
in
mov
aaa
fcoml
adc
jae
jbe
outsl
rolb
stos
add
fcoms
cmp
or
jbe
or
jb
dec
jmp
shr
leave
scas
lods
shl
push
rorb
je
adc
xchg
inc
cmp
imul
call
mov
pusha
out
rcrl
sub
enter
je
mov
jnp
xor
xor
loopne
rcll
popa
pop
call
imul
popa
and
jg
push
out
jmp
outsb
cmp
fisubs
rcll
mov
or
outsb
into
sub
cltd
xchg
sub
frstor
jns
push
adc
and
aas
shl
test
pop
sbb
mov
les
xor
mov
andl
and
shlb
jno
iret
or
aad
xor
cmpsb
and
ljmp
add
ljmp
aam
jbe
fnstsw
inc
dec
test
pop
std
nop
lea
jbe
xor
rcrb
fucomp
xor
cmpsl
lods
add
mov
loope
jnp
pop
outsl
imul
add
cmpsb
dec
mov
dec
cld
fcomps
sbb
inc
bnd
jmp
push
mov
dec
xchg
pop
dec
repnz
cmc
mov
add
icebp
push
mov
jmp
push
adc
add
divl
pop
les
cmpb
lea
lods
push
sub
mov
adcl
stc
into
push
aas
js
fldt
push
xor
stos
jbe
inc
mov
add
sub
cmp
adc
dec
sti
enter
jl
mov
js
jno
or
jmp
cld
idivl
adc
inc
sub
push
rorb
sub
and
lcall
cmp
shrb
pop
icebp
mov
imul
xchg
adc
aaa
and
fmuls
leave
out
fildl
out
pop
outsl
mov
mov
inc
pop
repnz
shll
xorb
and
adc
push
mov
loope
or
ss
xchg
clc
xchg
bound
sbb
xor
inc
push
leave
xchg
cmp
les
mov
enter
push
rorb
cmp
sbb
stos
dec
scas
inc
outsb
sarl
aaa
add
lds
adc
xchg
fmull
setns
ja
inc
ret
js
adc
das
mov
shll
outsl
andl
js
mov
inc
in
push
pop
xor
lods
jg
cli
in
mov
xor
pop
dec
loop
cmp
xchg
cmp
adc
add
inc
stc
mov
clc
sub
clc
mov
or
mov
mov
jmp
inc
cld
push
jmp
std
pop
imul
push
sbb
push
dec
arpl
push
xchg
or
xchg
pop
mov
sbb
outsl
and
jecxz
test
cmpb
imul
xor
mov
fsubr
fimuls
test
in
outsb
push
cwtl
in
addr16
test
mov
test
push
dec
outsl
mul
push
add
mov
xor
out
inc
mov
mov
jmp
outsb
sahf
leave
cmp
dec
insb
mov
movsl
pop
dec
fimuls
xchg
stos
js
or
mov
adc
dec
add
jnp
lods
xchg
inc
mov
mov
shl
mov
pop
or
scas
sub
lcall
xor
or
sti
mov
scas
or
cmpsl
push
lea
mov
dec
push
adc
dec
std
inc
mov
pushf
out
jmp
sbb
mov
dec
jmp
repz
leave
mov
ljmp
mov
and
jbe
clc
inc
add
testl
xchg
ffree
cmp
inc
xchg
xor
cwtl
stos
and
lahf
xchg
je
es
or
call
push
sub
mov
in
jae
sbb
stos
add
sbb
in
fnstcw
sbb
out
xchg
dec
sbb
inc
xor
roll
jns
push
fimull
shrb
cs
mov
in
pop
push
xchg
cmp
inc
and
cmp
push
pop
sub
cmp
stc
xor
jmp
push
cmp
cmp
cmc
xor
jl
fldcw
cmpsl
arpl
fprem
ret
sub
in
aaa
out
mov
cmpsb
lahf
jno
push
mov
sbb
imul
scas
or
loope
lahf
pop
push
scas
inc
jne
mov
test
push
out
aad
mov
xchg
or
sarb
int
and
pop
dec
int
es
jno
imul
fbld
jns
sub
int3
ret
pop
push
and
add
sub
not
leave
test
xchg
jecxz
fs
hlt
jbe
lea
inc
push
cltd
pop
mov
or
add
mov
inc
dec
adc
aam
push
pop
adc
int3
js
cmp
sbb
icebp
test
test
pop
pop
dec
popa
cltd
lret
stos
shl
aas
iret
js,pn
fs
loop
pop
data16
repnz
xor
cmp
jno
cmpsb
mov
cmpsl
sbb
sub
sbb
push
shll
fsubrl
leave
xor
bnd
and
into
test
aas
jmp
sbb
mov
pop
in
dec
ja
aas
shlb
mov
loop
jne
insl
je
mov
and
jne
sub
mov
ficomps
std
enter
mov
cmpsb
es
sbb
in
repnz
aam
mov
jno
lds
mov
inc
add
cmc
mov
xchg
pushf
ja
mov
leave
test
out
lods
jle
xor
shlb
aas
scas
mov
xor
xchg
pop
scas
cmp
enter
xor
xor
mov
and
gs
insl
xchg
xchg
xchg
call
in
mov
test
into
xchg
into
xchg
xor
pop
fwait
jle
xor
pop
lret
jne
xchg
fildll
mov
mov
imul
test
mov
cmc
push
scas
test
movsl
scas
xchg
test
bound
movsl
inc
dec
push
icebp
test
cli
notb
testb
add
mov
mov
incl
mov
mov
xchg
sbb
je
push
jae
hlt
xchg
pusha
adc
subb
jmp
cwtl
dec
rcrl
stos
daa
jbe
mov
sahf
loope
mov
imul
adc
pop
sub
movsl
shll
js
popf
shll
cmc
xchg
out
testl
add
rcrb
ss
fcmovne
out
data16
cmpl
add
lds
fdecstp
cmc
gs
dec
sahf
hlt
in
jl
mov
push
aas
fwait
mov
jg
stc
loop
fcos
push
jb
xchg
lret
out
test
fnstcw
cs
xor
mov
mov
mov
fsts
mov
les
lods
inc
sub
inc
or
mov
test
xchg
outsl
push
and
outsl
jno
cmp
xchg
fists
jl
iret
cmp
es
arpl
pop
sti
add
mov
xor
ds
lcall
jg
push
in
and
enter
mov
jmp
inc
js
mov
jae
cmp
push
int3
movsl
pop
or
popa
push
cmp
jl
notb
out
jne
mov
enter
push
mov
and
xor
pop
lcall
and
insl
daa
sub
inc
sahf
fisubs
sahf
mov
icebp
mov
push
nop
aam
movsb
mov
frstor
jp
dec
outsl
lcall
pop
sbb
jle
out
pushf
sub
popf
add
push
or
sti
jecxz
jl
cmp
inc
orl
in
aas
push
js
or
loope
xchg
insl
cmovno
out
rcrl
dec
icebp
and
test
push
xchg
push
loope
mov
cwtl
outsb
incb
lock
or
mov
add
xlat
aas
es
xchg
or
jle
fwait
push
fstl
int
arpl
xlat
cmp
and
add
ja
pop
mov
fwait
mov
repz
fbstp
aas
mov
mov
faddl
xor
or
dec
sbb
movsl
xor
xchg
jns
mull
insl
pop
out
rclb
dec
repz
std
jg
arpl
cli
xor
popl
mov
xchg
cmp
fstpl
out
js
mov
xchg
sub
jmp
rcrb
in
mov
mov
notb
or
ror
clc
mov
shlb
jl
pop
into
ljmp
icebp
add
push
hlt
rcll
adc
mov
es
out
adc
lods
clc
xchg
popa
mov
and
orl
mov
xor
aam
push
fadds
cwtl
ret
mov
lcall
and
cmp
push
xorl
or
jae
ja
lahf
mov
enter
scas
jg
movsl
out
enter
scas
jmp
inc
push
fldcw
and
pop
shl
and
outsb
mov
ror
fs
insl
lea
jecxz
or
push
mov
inc
cmp
rcrb
outsl
aas
push
dec
clc
clc
pop
xchg
daa
loop
mov
jb
or
enter
fistps
pop
push
xlat
repz
mov
dec
movl
les
inc
sahf
out
mov
adc
inc
sub
out
lret
push
or
mov
xchg
mov
lcall
repz
push
mov
cmc
test
pop
js
push
into
mov
add
js
mov
push
daa
xchg
or
mov
dec
adc
out
dec
jl
fists
lds
jle
enter
test
jl
dec
popa
dec
idivb
loope
movsb
mov
sahf
mov
sub
outsl
sub
xor
lahf
nop
mov
mov
xchg
aad
data16
popa
sbbb
aaa
add
clc
clc
or
cltd
mov
jge
jne
xor
enter
push
mov
adc
fcoml
int3
jo
push
and
sbb
fwait
push
hlt
pop
lods
decb
mov
pop
pop
pop
into
jmp
xor
fdivs
xchg
fcomps
bound
mov
xchg
aas
jns
fidivl
ss
add
js
mov
rol
out
aad
mov
and
sbb
dec
divl
out
xchg
outsl
or
loope
mov
push
or
jnp
cltd
mov
subl
andb
or
cmp
hlt
push
xlat
mov
mov
loopne
leave
cmp
and
sub
jmp
mov
test
mov
in
add
xchg
push
mov
lock
insl
and
dec
les
hlt
fadd
jbe
mov
bound
push
mov
inc
cmp
ret
imul
xor
push
mov
or
into
in
sahf
push
adc
jnp
imul
stos
xchg
fidivs
rcrb
pop
cmpsl
jmp
out
mov
int
lds
dec
scas
iret
and
int3
mov
and
jo
idivb
inc
xchg
push
stc
insl
nop
mov
mov
pop
push
jnp
sub
es
mov
movhps
lods
cmp
push
xchg
or
jge
sbb
jmp
or
cs
aad
mov
sti
int3
call
mov
andl
mov
sub
cld
lcall
out
jb
int
push
mov
rol
jbe
pop
pop
xchg
popa
or
fxch
dec
jbe
loop
xor
pop
or
and
mov
dec
fnstcw
cmpsl
xor
call
repnz
std
jae
xchg
pop
pop
xchg
lahf
jnp
pop
jg
test
adc
cmp
mov
in
mov
push
jge
sbb
sub
inc
in
dec
lea
mov
ret
icebp
mov
test
push
xchg
mov
pop
sub
das
stc
scas
push
jle
outsl
mov
pop
sub
or
out
push
movsb
pushf
icebp
fs
js
sahf
dec
mov
insl
iret
outsb
pop
jl
mov
adc
and
jecxz
dec
fwait
lock
jecxz
push
test
and
pop
lret
clc
lret
sub
jne
loope
out
ss
pop
and
orl
lret
dec
lock
insb
inc
cmpsl
outsl
jb
aaa
mov
lcall
inc
aas
sub
sub
xchg
fsubl
or
push
xchg
mov
lret
fsubs
lret
push
xor
mov
add
push
push
cmpl
sub
mov
lds
fldl
push
xchg
adc
lcall
pusha
and
push
ja
pop
xor
ficompl
dec
nop
ja
aaa
inc
rolb
jg
shrb
or
inc
inc
push
gs
and
xchg
in
add
daa
pop
iret
inc
lcall
inc
ret
jmp
lret
cltd
negb
pop
sub
fbld
mov
push
sarb
jecxz
jge
repz
sub
out
mov
sub
add
adc
sarl
scas
mov
inc
cvtps2pd
jmp
clc
inc
pop
or
aaa
pushf
mov
cmp
outsb
repz
out
movsl
cmc
xor
js
imul
dec
ror
in
je
xchg
and
sqrtps
test
add
pop
fcmovu
or
mov
mov
mov
push
mov
repnz
repnz
scas
xchg
aam
mov
mov
andl
mov
and
js
int3
xor
mov
jo
cwtl
push
movsl
inc
ret
cli
pop
pop
out
stos
std
mov
cmpsb
jbe
fwait
insb
cmp
xchg
pop
shrl
jge
or
mov
mul
inc
jo
or
or
push
sbb
pop
mov
adc
dec
cltd
xorl
loopne
push
int3
mov
push
xlat
pop
pop
xchg
lret
xor
je
mov
jp
lods
push
shlb
rclb
xchg
mov
in
mov
push
cmc
mov
jmp
xchg
xchg
insl
fs
lahf
jb
lcall
lret
mov
imul
fistpl
jno
fnstcw
mov
fwait
mul
cmp
bound
and
cmpsl
lea
movsb
fisttpl
aas
outsb
mov
pop
adc
clc
xor
xchg
lds
pop
aam
pop
inc
jbe
push
push
mov
and
cld
pusha
mov
add
pop
sbb
push
push
jl
cld
hlt
data16
mov
enter
mov
fwait
sub
sbb
out
loopne
sbb
adc
xor
add
push
push
int
add
mov
ss
sub
neg
mov
iret
out
push
pop
or
pop
dec
mov
pusha
out
int3
out
cmp
push
data16
dec
inc
jbe
sbb
xchg
movb
sahf
movsb
in
in
mov
adc
xchg
ds
subb
mov
cmpsl
idiv
pop
pop
int
daa
shlb
fstl
iret
cmp
js
add
cmpsb
stos
fidivl
and
scas
push
mov
mov
jo
add
inc
ds
jbe
aas
mov
or
in
inc
jecxz
stos
lods
sub
je
mov
fadd
mov
out
and
cwtl
and
incb
ljmp
adc
data16
cwtl
cmp
xor
insb
and
push
movl
dec
xchg
loope
sbb
push
das
iret
fwait
les
jle
test
fwait
mov
mov
xchg
pusha
aaa
ficoms
and
and
jge
leave
jae
jecxz
ret
pop
movsl
jp
testl
or
mov
add
cmpsl
push
rcrl
push
ds
jge
dec
mov
test
aas
add
adc
lods
or
sbb
lds
test
sti
cli
sbb
insb
iret
and
lods
lret
xor
xchg
and
inc
push
mov
call
inc
mov
and
data16
xor
popf
xchg
sbb
lea
mov
mov
sahf
xchg
stos
mov
int
ds
pop
pop
dec
dec
mov
jns
rcll
inc
cmp
loop
pop
aad
sahf
testb
out
xor
jl
push
aaa
std
pop
fcomp
or
push
lods
scas
loopne
scas
lods
mov
mov
sti
push
ljmp
movsb
arpl
push
inc
cmp
inc
mov
arpl
jecxz
cmpsl
hlt
loope
xchg
outsb
test
fisttpll
and
punpckhbw
repnz
sbb
fcompl
pushf
jnp
dec
pop
in
pushf
sarl
out
mov
mov
nop
in
dec
add
sbb
push
rcll
rol
sub
xlat
mov
mov
mov
ror
outsb
leave
cld
mov
push
sub
lea
loopne
pusha
and
or
cwtl
mov
repz
cld
ret
out
orl
inc
outsb
and
aad
push
lcall
adc
xor
xchg
les
popf
adc
push
sub
dec
aaa
jge
mov
test
das
outsl
jmp
fildll
inc
push
lret
sub
and
push
test
cmpsl
push
jp
mov
mov
aam
fsubl
hlt
call
pop
rorb
sbb
xchg
inc
mov
mov
mov
in
jbe
pop
and
mov
inc
pop
dec
clc
adc
pxor
nop
xor
add
sbbb
or
mov
js
mov
mov
and
aaa
std
ss
cmp
mov
data16
gs
out
inc
push
cmp
out
ds
xchg
mov
insl
mov
dec
cld
cmc
or
pop
popf
aaa
cwtl
mov
loopne
lods
jge
dec
xor
or
push
push
xor
jge
sbb
or
mov
loop
sbb
sbb
in
mov
shl
push
test
sbb
mov
aas
outsb
mov
adc
call
mov
mov
out
aaa
push
enter
aaa
clc
sahf
jno
cs
push
call
cmp
sbb
jmp
das
pop
loop
mov
sub
sbb
out
fdivrp
out
fwait
add
jnp
in
add
scas
cmp
loopne
inc
fidivs
rcrb
jle
adc
mov
sbb
or
idivb
pop
jl
cwtl
mov
pop
mov
fidivl
paddd
xorb
fadds
imul
lret
cmpb
shlb
xchg
sub
add
ljmp
loope
jg
adc
and
ret
jp
lcall
lods
repnz
adc
leave
loop
mov
lret
lock
mov
jg
jge
push
mov
in
inc
pusha
pop
ds
xor
call
push
push
jae
add
push
repz
ficoms
xor
out
mov
lret
stos
filds
and
pop
pop
lcall
loopne
mov
out
out
js
xlat
inc
stc
loope
jnp
incb
adc
sub
and
mov
fs
and
lret
es
cmp
gs
jb
inc
mov
sbbl
mov
pop
imul
push
adc
frstor
sbb
loop
add
sub
cmpsb
add
push
imull
inc
inc
loop
je
add
sub
call
mov
lea
ljmp
lret
add
dec
mov
rolb
xchg
movsl
idiv
fwait
or
push
outsb
std
fsub
movsl
cmc
jmp
xor
imul
sbb
push
int3
jno
or
jg
fimuls
jl
mov
inc
cmpsl
mov
mov
int3
and
add
out
out
hlt
xchg
hlt
inc
fidivrs
mov
cmpsl
js
dec
adc
shlb
xchg
scas
leave
mov
mov
stc
xor
xchg
or
pushf
lret
repz
stos
lea
pop
mov
pop
lahf
jae
dec
testb
out
xchg
lods
xor
xchg
cmp
xchg
add
cmp
inc
test
mov
popa
fs
data16
and
out
push
icebp
inc
stc
fists
and
lret
cwtl
cmc
rcll
fcmovu
mov
mov
cli
jb
add
in
fnsave
incb
aaa
xchg
adc
movsb
insb
int
and
inc
cwtl
into
icebp
scas
repz
push
lret
lods
fucom
adc
xchg
arpl
sub
addl
adc
lret
and
nop
push
mov
roll
cltd
sub
pop
arpl
dec
out
mov
mov
out
dec
or
inc
xor
ret
jmp
mov
out
inc
or
adc
dec
jne
adc
into
jnp
jbe
fwait
mov
iret
push
int
das
inc
nop
andb
stos
mov
jbe
jl
pop
clc
sahf
add
stos
test
and
cmp
pushf
addr16
add
inc
das
movsl
push
loope
shlb
mov
fisubs
lret
sub
mov
xchg
push
clc
sub
mov
push
mov
stc
mov
xor
sbb
repz
dec
mov
out
dec
data16
pop
faddl
loopne
xchg
inc
xor
cwtl
push
mov
testl
mov
jbe
push
cli
mov
addb
add
adc
test
mov
xchg
xchg
dec
popf
icebp
push
insl
push
pop
jmp
cmp
pop
lret
push
inc
mov
mov
inc
scas
push
mov
mov
in
cs
sub
xchg
jb
loope
mov
pop
repz
jle
rcrl
cld
adc
mov
xchg
sbb
idivb
mov
and
add
xchg
std
clc
not
add
sub
adc
lods
inc
jns
scas
push
jmp
ljmp
in
sub
int3
jo
dec
scas
cltd
loopne
cmpsl
jb
jl
or
xchg
cld
insb
mov
cmp
pop
xchg
push
jmp
pop
inc
in
pop
test
jl
sarl
scas
loop
or
hlt
jb
loopne
mov
subb
mov
repz
lods
sbb
shl
sbb
in
cwtl
adc
jne
xchg
mov
lods
das
jo
jmp
sbb
jl
xor
aaa
fcmovnu
fld
xchg
scas
pop
pop
roll
fistps
push
clc
push
mov
sti
push
cwtl
aaa
jecxz
adc
mov
push
scas
sbbl
jmp
sbb
ja
popa
xor
in
jne
mov
mov
leave
dec
mov
sahf
pop
jbe
mov
adc
call
test
loope
clc
sbb
ret
lahf
and
call
jbe
fldt
ret
enter
mov
mov
dec
xchg
inc
adc
aad
xchg
xchg
jb
vpunpcklqdq
cltd
clc
sar
jo
sbb
sbb
in
sub
daa
icebp
mov
jb
jg
out
pop
lds
dec
mov
inc
into
cmc
add
out
lods
jmp
stc
lcall
imul
sbb
cltd
mov
lods
xlat
stos
lea
cmp
push
push
imul
dec
sub
mov
sbb
lahf
test
lret
add
mov
cmp
pop
sahf
and
loop
mov
in
lret
xchg
lahf
in
popf
xchg
cmc
add
sub
adc
mov
push
jnp
inc
push
lock
add
jl
jp
dec
popa
loope
mov
xchg
aaa
push
out
ror
into
sbb
jle
push
push
or
inc
pop
imul
xchg
bound
lret
xchg
lock
sti
and
gs
in
mov
lcall
rcll
in
cld
sub
mov
scas
jle
ud2
scas
cmpsb
pushf
adc
loop
jg
mov
fwait
dec
insl
cmpsb
inc
stos
ja
jge
int3
mov
outsl
mov
and
out
daa
fcoms
lret
sbb
xchg
in
test
addr16
lcall
sahf
add
pop
into
test
mov
mov
jbe
push
movsl
sar
fcmovne
lds
and
data16
mov
addl
arpl
mov
mov
mov
stos
cmp
jo
ret
int3
sbb
or
mov
pusha
jns
inc
jp
sahf
insl
cmp
add
inc
cs
jns
push
jne
fdivrs
movsb
sub
xchg
jmp
mov
ficoml
ja
cmp
mov
jne
and
adc
lahf
mov
sbb
aam
loop
shll
adc
dec
and
fstpl
fsubl
add
dec
adc
dec
aaa
loop
xorl
pop
stos
jmp
nop
rcrl
mov
pop
mov
jno
xor
and
fwait
add
shlb
mov
rclb
dec
lods
push
leave
inc
push
pop
call
mov
sub
mov
xor
xor
cmpsb
sub
xor
mov
and
pushf
xchg
push
rorl
frstor
ret
ret
adc
jmp
mov
cmp
sbbb
sub
mov
aas
push
adc
mov
pop
adc
xchg
adc
and
and
push
push
pop
test
sub
mov
lea
push
mov
or
push
test
rorb
scas
jle
sbb
push
mov
daa
xchg
add
mov
and
mov
dec
xchg
xchg
aam
pop
ss
int
jle
lds
jge
lods
or
popf
inc
sbb
fs
cmp
add
gs
sbb
push
and
daa
cwtl
xchg
out
inc
aad
rcl
popa
xor
push
lea
shlb
ret
mov
jg
std
pop
mov
adc
stos
xchg
sub
pop
ja
cmp
jle
and
sahf
jl
mov
jno
xor
push
and
cmc
vsubpd
pop
sub
and
stos
fiadds
rolb
inc
test
inc
stos
rclb
in
mov
add
fistpl
popa
push
loop
adc
adc
dec
lock
cmc
xchg
jae
dec
mov
pop
dec
and
sbb
push
mov
push
ficompl
ret
fwait
pop
xchg
xchg
arpl
xchg
fsubr
imul
arpl
lret
imul
fcomps
aaa
rcll
mov
inc
mov
orl
or
insl
lock
aam
xchg
lods
sub
ret
mov
jns
mov
aad
js
cmp
adc
xchg
mov
mov
test
jnp
xchg
daa
mov
out
jns
xchg
andb
xor
adc
icebp
stos
stc
sbb
lret
out
xchg
outsb
mov
arpl
jae
js
xor
push
lods
roll
and
test
loope
loop
js
jmp
movsb
or
adc
cmp
mov
daa
std
jno
faddp
fcmovnu
inc
xchg
xlat
cmp
push
sub
rclb
mov
add
cli
or
sahf
sub
mov
lahf
cmp
rolb
sbb
lods
sahf
sbb
sub
test
sbb
cmpsb
sbb
lods
push
lea
dec
and
dec
es
jae
out
fsubrp
push
cwtl
nop
mov
pop
and
cmp
cmc
dec
pop
enter
fcomi
pop
xor
mov
cli
add
mov
sahf
jnp
cmp
adc
xor
in
xor
jge
mov
cmpl
cmp
lock
out
mov
popa
stos
push
das
into
jns
int3
ss
mov
xchg
mov
repz
lcall
jo
jl
int
add
jecxz
xadd
cmp
and
fcomp
es
lock
pop
fists
jae
in
inc
sbb
pop
out
cmp
hlt
push
cmpl
mov
movsl
into
mov
out
xchg
repnz
pop
dec
out
mov
mov
mov
insl
ljmp
mov
push
sti
jmp
clc
syscall
stc
add
sbb
mov
mov
hlt
jmp
iret
sub
mov
je
or
xchg
bound
icebp
dec
fldenv
sub
insb
decl
arpl
call
lret
out
repnz
lods
movsl
outsb
lahf
sbb
fimull
jmp
es
pop
jp
out
mov
cmp
sbb
fldcw
fs
sub
cmp
inc
je
jb
aam
js
hlt
shrb
fmulp
mov
sub
jbe
data16
lret
dec
fadd
adc
mov
mov
or
les
cmp
sahf
sbb
frstor
jo
mov
add
hlt
movsl
or
ficomps
xor
dec
sti
dec
orb
push
or
xchg
sbb
enter
mov
lahf
lds
mov
cs
mov
pop
sbb
xor
and
sub
cli
lea
xor
mov
das
or
xor
inc
push
inc
in
xlat
cmp
jp
jle
add
cmpsl
pop
xor
shrl
push
cmc
xor
jno
in
jno
cmp
cmpb
adc
out
mov
dec
ljmp
test
fistl
mov
sbb
xchg
fwait
sub
popl
sahf
inc
pusha
dec
outsb
imull
lahf
push
cltd
xchg
icebp
add
rorb
insb
jle
js
out
push
pop
cmp
rol
scas
cwtl
jecxz
push
cmpsb
js
push
jmp
testb
cwtl
mov
mov
mov
movb
mov
xlat
cs
bound
addr16
xchg
inc
into
mov
jbe
rorb
add
movsb
or
cmc
stos
cmpsb
lea
adc
ss
aad
outsb
popa
ja
negb
imul
sub
neg
cld
rcrb
enter
mov
cmp
stos
mov
mov
xchg
negb
adc
leave
les
in
mov
push
xchg
adc
cmpsb
ficomps
sbb
xchg
loopne
insl
cld
lods
loope
aam
mov
fldcw
popa
or
push
sub
in
aad
mov
sub
aaa
sub
incl
xchg
pop
dec
mov
jmp
negb
xor
sbb
fwait
xchg
pop
xchg
mov
adc
xor
cli
test
sbb
enter
jno
je
add
aaa
or
lods
mov
mov
jb
test
jb
and
imul
in
nop
enter
pushl
cltd
orb
orps
push
fs
mov
stc
out
add
xor
repnz
sub
sbb
add
dec
sub
or
mov
movsb
dec
pop
in
sub
jne
xor
xchg
ds
es
pop
js
pushf
das
xchg
push
in
mov
sbbb
add
push
fs
xchg
mov
iret
adc
loopne
xor
test
nop
sbb
fidivs
jnp
bound
xchg
jo
stc
sbbl
and
bound
movsb
jb
iret
push
int
movb
or
les
pop
cmc
rcl
lock
sahf
clc
pop
test
or
xor
inc
mov
ret
push
pop
mov
xchg
adc
mov
lcall
inc
inc
mov
cwtl
fwait
or
repnz
fstps
cmpsb
cmp
and
dec
mov
fcoms
cmpsb
sub
dec
in
add
mov
cltd
dec
or
fcmove
xor
mov
adc
out
shr
xchg
inc
ljmp
aam
and
movsl
sti
and
pop
jae
pushw
inc
pop
fldcw
inc
inc
xchg
insl
dec
push
shlb
mov
and
adc
aad
fcoms
pop
pop
lods
sub
test
jne
int3
or
inc
or
and
leave
jle
ret
or
xor
daa
and
sbb
stc
add
or
rcr
pop
lret
jo
mov
jg
je
mov
outsb
add
push
roll
fisttpl
mov
jnp
mov
cmp
scas
pop
ss
sub
shl
and
pusha
insl
jle
mov
xor
std
xor
outsl
mov
lcall
imulb
push
pop
lret
in
shlb
leave
data16
popa
mov
mov
pop
xor
xorb
adc
inc
outsb
sbb
ret
inc
push
ficomps
std
lods
fisttps
xchg
sbb
push
test
cmc
mov
jno
cmp
insl
cwtl
icebp
xorl
jns
hlt
jae
ret
loop
cmp
jmp
and
pop
subl
out
and
sbb
jnp
fmuls
fs
jne
lea
mov
dec
stc
jecxz
xchg
pop
lcall
add
in
xor
mov
test
pop
test
sub
ss
fisubs
jo
out
dec
aad
adc
mov
roll
in
push
jns
lret
mov
mov
cltd
add
jno
test
push
xchg
aaa
popa
and
pop
sarb
sub
sbb
cli
andb
xchg
repz
and
pop
jg
ljmp
dec
mov
xchg
jle
pusha
jmp
add
inc
jbe
and
xchg
lahf
cmp
jnp
cmp
mov
outsl
mov
psllq
fadd
repz
int
sub
xchg
subb
pop
xlat
pop
jne
ja
lahf
mov
iret
jb
jo
xchg
cmpsb
mov
or
mov
fxch
sub
cmp
adc
pop
push
mov
adc
xchg
jns
push
add
movsb
cmp
mov
stc
mov
cld
add
popa
xchg
lret
fists
add
or
jno
xchg
jo
icebp
push
xlat
jecxz
inc
adc
add
dec
jne
mov
bound
mov
loop
sub
je
dec
xor
sahf
inc
in
jmp
dec
pop
jg
or
mov
dec
adcb
xchg
out
movsb
test
into
int3
in
js
fcoml
adc
jb
ds
jae
fildll
std
sahf
test
jnp
and
xor
ror
es
sahf
subl
mov
mov
mov
adc
popf
or
adc
dec
mov
mov
jae
hlt
pushf
dec
clc
test
test
addr16
jmp
js
call
inc
sbb
jb
cmp
scas
lcall
adc
mov
add
ds
aas
pop
mov
add
rorl
enter
ss
shlb
adc
sub
sbb
cmp
inc
ret
inc
pop
mov
xlat
sti
bound
in
and
cmp
cltd
ljmp
mov
and
icebp
mov
jno
pop
fldcw
rclb
lret
mov
insl
mov
sub
pop
cli
mov
outsl
jge
xor
lods
jb
xor
dec
popa
mov
push
xor
mov
adc
pop
stos
in
daa
or
sarb
notb
pop
negb
test
imul
push
lahf
icebp
xlat
pop
and
sub
mov
mov
out
fs
xorl
sbb
les
and
add
sbb
dec
mov
ss
test
sub
and
mov
pushf
mov
int
out
into
pusha
mov
pop
cli
popf
test
pop
pop
mov
inc
test
xchg
ss
rcl
sub
adc
mov
roll
xchg
adc
xchg
xchg
pop
xchg
orb
mov
ret
adc
addr16
and
cmpsl
rol
les
xchg
jo
cltd
arpl
xchg
mov
test
mov
lock
je
mov
mov
pop
jmp
or
pop
xchg
push
scas
lcall
or
adcb
mov
push
ss
add
sbb
icebp
xor
std
xchg
xor
push
inc
stos
in
test
es
test
jg
pop
movsl
mov
mov
sbb
mov
hlt
jmp
aad
idivb
pop
cmpb
jb
or
es
xchg
mov
lock
loop
loop
test
mov
adcl
loop
sub
pop
cmpsl
mov
inc
rorb
push
sbb
iret
mov
inc
fstl
cmp
dec
xor
sub
push
out
fisttpl
mov
push
clc
js
mov
int
jno
fiaddl
cmc
add
or
ds
adc
pop
loope
test
loope
xor
push
jecxz
cltd
adc
jg
cwtl
jo
lret
mov
outsl
sub
xchg
popl
xchg
adc
stos
push
loop
mov
bound
rorl
adc
inc
sub
sub
or
int
cltd
push
inc
rcl
repz
leave
sub
and
les
pop
jo
xchg
leave
dec
cmp
jmp
aas
pushf
psadbw
cmpsl
pop
aad
xor
sbb
cmp
iret
xor
arpl
popf
jp
adc
sbb
add
stos
adc
pop
std
push
inc
incb
adc
dec
adc
test
in
pop
mov
mov
stos
nop
sub
push
xor
jnp
mov
add
jo
inc
sbb
xchg
push
fstl
ja
int
sbb
and
adc
lret
jo
add
mov
push
sbb
sub
xor
mov
rclb
jmp
jbe
ret
and
lock
daa
enter
and
xorl
out
jmp
pop
push
arpl
popa
pop
leave
sub
stos
ret
in
push
mov
pop
inc
out
clc
into
jmp
jno
je
stos
jbe
call
xor
adc
test
lret
sti
push
inc
push
mov
ljmp
inc
fcoms
fisubl
popf
mov
sub
adc
sub
mov
sbb
dec
xchg
rcrl
dec
add
jl
adc
roll
aad
dec
dec
sbb
push
iret
sbb
pop
cmp
cltd
inc
jns
add
inc
xor
pusha
xchg
popa
je
jge
int
rclb
jnp
and
orb
pop
lcall
pushf
mov
add
pop
imul
push
lods
xor
dec
ffree
cs
mov
xchg
adc
cmpsl
aad
inc
xchg
test
inc
jl
ljmp
sbb
divb
inc
mov
in
mov
js
sub
lcall
into
mov
test
movsb
sub
aaa
lcall
cmp
cmp
std
ljmp
push
jg
sbb
test
mov
out
imul
jg
mov
adc
dec
mov
out
mov
mov
adc
jns
and
ljmp
mov
dec
pop
push
xchg
out
out
ja
in
pop
inc
mov
mov
imul
pop
mov
popf
push
mov
cmpsb
out
jo
sahf
add
push
stos
loopne
repz
fmulp
fdivrs
js
adc
out
cmpl
adc
push
and
fcompl
leave
ss
xor
pop
jecxz
sbb
lock
jp
xchg
fstpl
sub
sub
jge
push
adc
add
out
enter
mov
ret
icebp
mov
dec
dec
imul
out
fmull
xor
mov
xchg
jb
push
push
inc
mov
jns
arpl
shl
imul
data16
out
int
inc
pop
pop
shlb
push
scas
mov
lcall
push
mov
push
arpl
fnstenv
jno
mov
test
jbe
jbe
inc
lock
inc
stos
cwtl
pop
mov
sub
jl
sub
das
push
out
sub
and
sub
scas
inc
js
cmp
test
cmp
mov
cmpsl
repnz
cs
inc
mov
jnp
xrelease
pop
in
out
pop
cmpl
or
pop
mov
sbb
mov
lods
cmc
loope
or
mov
pop
mov
sub
jno
xchg
adc
inc
mov
out
push
pusha
mov
mov
jl
push
adc
push
add
mov
dec
ja
cmp
out
sub
leave
lock
shrl
xchg
lds
test
add
mov
arpl
fimull
pop
mov
lock
and
pop
ret
xchg
and
outsb
xchg
mov
jnp
movsl
jne
jne
lret
xchg
cmp
add
outsl
cmp
xchg
sub
push
and
push
aad
imul
jp
jp
jp
inc
jg
inc
cmp
push
sub
sbb
sbb
inc
sbb
bswap
jl
outsl
mov
push
or
scas
and
lock
and
shl
push
adc
mov
jl
jbe
fnstcw
cli
aaa
cmp
push
les
fs
jnp
cmp
or
stc
fs
or
std
repnz
lcall
push
popf
aas
and
or
dec
in
add
and
or
fdivs
inc
into
arpl
out
jbe
sub
mov
push
aas
adc
push
es
in
lret
insl
mulb
imull
pop
mov
sub
imul
loop
xor
or
add
ds
decb
mov
sti
sub
cmpsl
or
idivl
inc
jno
xchg
leave
inc
imull
subb
pop
mov
add
aaa
ss
hlt
movsb
mov
jmp
notb
leave
pop
outsb
and
cmpsb
or
lods
dec
repnz
leave
push
cwtl
loope
div
call
adcl
aaa
flds
cmp
popa
rcrl
rcll
popa
cmp
cmp
daa
pop
xor
push
inc
mov
and
mov
aas
pop
xchg
and
jp
and
pop
mov
sarb
adc
mov
adc
push
mov
xchg
cmpsb
xchg
loop
in
adc
or
lcall
rorl
js
pop
mov
xchg
jae
add
cwtl
test
inc
add
orb
and
enter
jmp
inc
popf
jns
adc
dec
cli
ret
test
loop
popa
repz
icebp
flds
pop
push
add
pop
pop
sti
mov
mov
call
cmp
js
mov
and
pop
jo
lret
int
add
inc
popf
repnz
adc
or
xchg
lcall
ds
mov
lcall
or
out
inc
leave
and
mov
int3
pop
dec
and
sbb
lods
mov
push
dec
inc
pop
adc
dec
sbb
mov
aad
sub
daa
iret
sbb
decb
mov
daa
ss
jbe
int3
mov
sbb
out
adc
cmp
xchg
imulb
jp
inc
gs
shrb
aaa
arpl
and
mov
add
inc
mov
cmpsl
dec
cltd
mov
imulb
jp
push
jae
sti
xor
lahf
mov
push
pop
loopne
fistpll
dec
fiadds
ret
ds
add
xor
lret
sbb
sbb
outsb
int3
cmpsl
nop
xlat
ret
addl
jge
cmp
mov
lock
je
stos
jbe
cmpsl
scas
rorb
call
pop
cvtps2pd
and
dec
mov
mov
xchg
test
adc
or
hlt
sbb
or
jmp
bound
sbb
imul
ja,pt
sarb
mov
fptan
jno
pop
lahf
pop
sar
pop
add
mov
cmp
mov
adc
lods
outsl
dec
jmp
mov
pushl
xchg
xchg
imul
mov
sub
popa
sahf
push
pop
mov
push
sbb
mov
or
mov
jb
lahf
mov
push
sub
movb
cmp
je
test
mov
ficoml
add
xor
in
jo
ret
dec
mov
std
xor
call
cwtl
aas
sub
pop
adc
jge
js
mov
out
sub
dec
in
stc
fs
stos
jg
and
sub
repnz
mov
movsl
inc
sub
mov
roll
jp
shll
push
insl
roll
xchg
sub
mov
out
mov
lcall
jp
pusha
adcl
cmp
sub
scas
mov
jae
cmpsl
dec
jnp
setne
jp
inc
cmp
pop
in
inc
aas
inc
in
std
sahf
fcoms
sbb
pushf
js
pop
cmp
jl
data16
adc
nop
mov
pushf
push
xchg
mov
lcall
sub
add
sti
ja
sub
pop
and
sub
lea
push
dec
mov
movsl
popa
rorl
xchg
jmp
fdivl
test
je
push
imul
cli
test
lret
lock
insl
pop
mov
mov
stos
or
loop
inc
popa
pop
mov
sahf
xchg
in
xchg
sbb
pusha
int3
add
jbe
or
loop
mov
push
mov
cmp
mov
sub
lds
push
ret
mov
sbb
mov
jae
cmpb
pushl
pusha
cli
scas
push
sbb
out
imul
sti
out
xor
or
jg
push
cmp
mov
fadd
push
inc
adc
arpl
pop
sbb
push
push
mov
add
repz
push
stc
pop
stc
push
std
out
out
daa
clc
mov
popf
sub
das
aam
inc
jl
ret
pop
push
int
add
xor
sbb
repz
addl
sbb
ret
sbb
movsb
or
out
les
fs
insb
stos
xchg
xor
icebp
or
call
cmpsl
mov
mov
bound
jo
mov
jno
mov
jmp
fcmovnu
dec
mov
fisubrs
shll
rcrb
pop
dec
test
xchg
cmc
das
aam
sub
fcoml
aad
xchg
dec
dec
adc
fildl
mov
dec
test
sbb
in
adc
sub
push
out
mov
data16
es
leave
or
adc
xchg
mov
test
mov
ss
or
jae
repnz
pop
xchg
mov
cmpsb
mov
lea
in
daa
push
pushl
bnd
cwtl
pop
jmp
out
fwait
outsb
popa
fprem1
das
pop
rorl
mov
xor
mov
or
jmp
mov
or
sbb
sbb
daa
and
shlb
inc
push
insl
push
push
ret
lods
iretw
push
cwtl
push
lcall
push
or
dec
fmull
aas
mov
push
push
pop
dec
sbb
stos
jl
xchg
call
jle
xchg
and
mov
rclb
jo
cmc
cmp
add
jge
stos
pop
imul
jno
xchg
sbb
ja
adc
hlt
movsb
or
xchg
add
xchg
mov
data16
xchg
adc
fldl
sbb
mov
cwtl
push
iret
fstp
pop
pusha
sbb
xor
loop
pop
jge
or
adc
add
inc
cmp
xchg
xchg
enter
movsb
fs
pusha
subl
test
repnz
out
popa
repz
push
cmpb
jnp
xor
aam
movsb
sub
push
mov
dec
test
pusha
pop
push
int3
dec
inc
dec
mov
mov
loopne
mov
lret
push
subb
jb
dec
inc
xchg
les
xchg
je
sub
inc
stos
mov
sbb
mov
test
push
popf
and
movsb
add
xchg
js
jb
aad
push
jmp
lcall
dec
call
mov
call
ja
inc
or
mov
int
jp
push
inc
lods
lcallw
xchg
lock
dec
insb
fwait
iret
gs
ret
adc
insl
mov
adcl
or
std
scas
xchg
movl
subb
arpl
ss
das
cld
mov
mov
and
lret
outsb
orl
mov
mov
ret
les
aam
lock
test
inc
shrb
inc
adc
sbb
int3
push
outsb
xchg
and
out
jne
mov
sbb
fs
add
push
mov
daa
inc
xor
es
loope
fidivl
push
add
and
imul
mov
xchg
es
imul
mov
int
into
out
pop
scas
xchg
shll
inc
jbe
mov
mov
pop
movsl
cwtl
mov
xchg
cli
das
mov
jno
xor
nop
loopne
jbe
pop
pusha
data16
mov
imul
pop
xchg
sbb
sub
sbb
push
clc
dec
push
jl
in
aaa
je
ret
movsb
inc
or
sub
push
push
ret
jp
and
in
xchg
dec
andnps
inc
mov
stos
incl
inc
pop
jmpw
lods
xor
xchg
inc
addr16
mov
xchg
add
jmp
sbb
stos
into
mov
popa
xor
fcomps
or
sbb
mov
and
adc
fld
adc
xchg
adc
pop
shrb
adc
sbb
loopne
or
or
stc
fdivrs
adc
enter
pusha
mov
shlb
push
dec
sarl
add
mov
cmpsb
cmp
jge
sub
and
in
mov
icebp
les
cmpsl
cmpsb
fs
xor
jb
scas
push
les
and
arpl
pop
xchg
test
and
sub
sbb
out
std
xlat
jle
mov
add
pusha
js
lahf
and
sub
inc
clc
insb
jge
movsb
aam
mov
scas
jae
out
into
mov
xor
repnz
test
leave
xchg
push
cwtl
subl
xor
jge
sub
mov
imul
inc
loope
fiadds
jo
lahf
dec
or
gs
mov
add
faddp
inc
popf
test
dec
das
bnd
lock
xor
bound
and
or
mov
outsl
jge
jne
fldl
cmc
jb
xor
inc
mov
in
or
stos
clc
mov
cwtl
sbb
mov
out
fiadds
xchg
mov
rorb
pop
mov
mov
aaa
and
cmp
test
and
and
dec
shll
repnz
or
cs
cs
je
std
mov
and
outsb
shrb
dec
idiv
jae
mov
mov
test
push
cmpsl
pop
hlt
push
lods
mov
jl
test
mov
arpl
test
dec
xchg
add
hlt
or
cmc
and
xchg
inc
xor
push
scas
xor
test
add
lcall
stos
pop
cmp
push
xlat
imul
shlb
pop
lock
mov
sub
jbe
enter
out
int3
push
mov
pop
scas
inc
jl
fstpl
push
dec
fildl
pop
push
pop
loopne
or
xlat
addr16
jb
cli
lds
roll
fimull
push
dec
clc
dec
sub
add
daa
adc
into
and
out
fs
out
add
and
sub
cmp
fldenv
and
outsl
fwait
mov
lahf
das
aam
repz
mov
mov
mov
lret
stos
sahf
sahf
bound
pushf
push
lea
aad
xchg
cmp
fbld
mov
leave
add
sbb
cltd
and
sbb
fidivl
stos
push
into
ja
dec
xchg
sub
lahf
lcall
jbe
divb
mov
in
pop
pop
loop
inc
ficompl
shrl
loopne
jns
sbb
pop
sub
loop
and
dec
xor
jge
sbb
mov
sub
add
dec
aas
dec
aas
push
mov
ss
loopne
lea
sahf
mov
add
xchg
push
js
and
push
arpl
inc
jecxz
pusha
jl
sbb
push
test
fwait
jne
call
jnp
push
rcl
xchg
pusha
cmp
or
ss
pop
andb
jo
and
push
or
or
ret
stos
fdivl
xchg
adc
in
lea
les
setge
sbb
insl
jl
dec
pop
lds
and
push
clc
jno
jge
xorl
sub
hlt
mov
push
jo
aas
out
mov
mov
xchg
movsb
sub
repz
mov
data16
std
test
mov
jae
movsl
pop
and
and
fwait
out
dec
mov
fiaddl
in
push
and
sbb
xor
or
add
and
xchg
push
push
aas
fcmovnu
sub
in
pop
enter
fstps
repnz
cmp
jmp
test
mov
dec
or
push
out
or
shl
adc
fwait
ljmp
mov
cld
mov
insb
lahf
es
add
push
inc
pusha
cmpsl
mov
adc
mov
inc
test
fnstsw
sbb
in
xchg
xchg
hlt
dec
int
xchg
push
lahf
cmp
xchg
jle
lret
mov
inc
loopne
xchg
fdivl
fldenv
pushf
xchg
or
pop
mov
orl
roll
jb
decb
jp
rclb
mov
lcall
fidivrs
insb
outsb
pusha
pop
test
mov
xchg
insb
xor
cmpsb
inc
and
jb
repnz
and
lock
out
mov
scas
out
enter
inc
fwait
add
test
mov
push
mov
js
inc
xchg
add
lret
xor
cmp
shll
pop
addr16
dec
ljmp
lcall
add
jo
pop
out
sti
les
pop
inc
pop
and
jne
in
in
lds
xor
std
pusha
adc
sub
sbb
xchg
mov
pop
sahf
adc
test
cltd
sbb
jg
jge
mov
sub
xchg
inc
sbb
or
aaa
inc
add
mov
cmp
mov
or
dec
xchg
dec
repz
adc
jmp
push
or
dec
loop
mov
or
pop
dec
movsl
jle
pop
pop
int3
mov
test
leave
outsl
aad
movsl
aaa
fbld
sahf
push
fxch
test
sahf
jae
sahf
mov
mov
pop
jnp
repz
jbe
cwtl
ja
insl
mov
pop
adc
and
cmp
fimuls
rcrb
push
out
cmp
xor
jb
pop
aam
dec
subl
enter
mov
lods
add
pop
mov
in
lahf
jns
divb
divb
gs
lcall
sbb
jo
push
xchg
lahf
fidivl
outsb
mov
xchg
lea
pop
pushf
dec
inc
pop
out
jo
stc
enter
cmp
aad
arpl
cmpsl
xchg
add
arpl
iret
lods
cli
pop
push
ds
adc
repz
and
andb
fidivs
inc
fs
xor
in
clc
orl
sti
push
test
ficomps
sub
mov
xchg
push
dec
in
shlb
stc
insb
sbb
hlt
xchg
das
add
ficompl
paddsb
cwtl
adc
mov
xor
fistpl
dec
shll
and
in
fld
ret
jecxz
cmp
ljmp
pop
ds
sti
add
mov
sahf
push
or
sub
call
cmp
xchg
fdivs
outsl
in
cmp
mov
out
xor
dec
into
std
dec
mov
leave
lods
push
in
xlat
rorb
repnz
add
jno
jne
inc
lods
cmp
std
faddp
cld
jle
jns
mov
ds
test
insl
lahf
adc
ret
arpl
mov
push
in
arpl
ficoms
aas
ss
rolb
mov
dec
mov
jb
aas
popa
imulb
push
fmulp
in
pop
mov
jnp
mov
jno
xchg
push
lret
sub
sbb
xchg
jge
and
dec
mov
nop
jbe
sbb
jne
ret
mov
fisttps
ret
andl
pop
mov
mov
insb
scas
jb
push
jg
imul
push
lahf
mov
jns
incl
inc
sbb
rep
movsb
mov
xorb
add
mov
das
outsb
gs
lods
xchg
lock
push
xchg
out
fstpt
mov
jp
scas
add
cmp
ljmp
mov
push
mov
or
xor
dec
mov
gs
and
mov
inc
xor
inc
sahf
mov
mov
mov
test
xor
incb
pop
mov
call
out
mov
jmp
xchg
sbb
push
and
test
shrb
xor
mov
jae
xor
aam
and
daa
roll
dec
sbb
lret
hlt
xor
into
movb
or
sbb
or
push
out
push
sub
lock
popf
inc
jg
bound
push
push
pushf
call
or
cltd
add
and
dec
aam
into
mov
shlb
cmp
or
cmovns
xor
adc
push
cmp
mov
stc
and
inc
mov
fistpl
andl
mov
mov
pop
outsb
fnstsw
out
into
mov
out
das
xlat
addb
or
js
xchg
dec
mov
push
inc
pop
or
mov
mov
iret
je
cmp
sub
push
adc
mov
xlat
and
fdivr
jno
dec
icebp
cmp
clc
inc
cwtl
fisubrl
dec
jo
popa
sub
mov
mov
inc
push
mov
roll
ret
lret
std
mov
adc
add
cmp
ret
xor
out
mov
adc
insb
jbe
adc
cltd
jmp
fs
inc
push
xchg
jnp
push
or
mov
lds
adc
lret
inc
gs
fucomip
bsr
popa
inc
cwtl
aaa
lahf
cld
mov
fs
mov
ret
mov
int3
or
rcll
dec
adcl
pop
cmpsl
or
loopne
sub
pusha
mov
adc
popf
fadds
lret
inc
inc
dec
or
icebp
push
andb
insl
pop
sub
iret
jo
inc
rorl
inc
and
cmpsb
stc
shr
or
add
cmp
mov
outsl
pand
pop
sub
popf
add
jbe
pop
mov
push
inc
inc
lods
sbb
pop
jno
jnp
pop
mov
sbb
push
push
jbe
sub
out
adc
mov
es
cld
push
adc
inc
cltd
mov
push
sub
pop
dec
xchg
pop
sbb
dec
mov
es
sbb
add
popa
pusha
sub
movsl
imul
jnp
mov
jmp
xor
push
rorl
lcall
repz
and
xchg
clc
enter
imul
mov
jmp
in
sar
or
jle
les
or
mov
shrb
int3
hlt
push
push
jmp
xchg
ljmp
pushf
inc
pop
out
sub
cli
stos
mov
mov
xor
mov
pop
mov
scas
inc
nop
add
jo
leave
sub
cld
push
pop
fiaddl
sub
inc
cltd
sbb
je
pop
and
xchg
lea
outsb
jb
xchg
rol
aas
imul
insl
lds
outsl
sub
xchg
pextrw
pop
mov
jb
mov
out
push
sarl
push
das
xor
jmp
aaa
ja
outsl
xor
or
adc
and
in
mov
xchg
popl
and
jl
fwait
ror
fmulp
cmp
jecxz
push
cmp
hlt
lahf
out
push
jg
and
fstl
dec
push
pop
xchg
pop
mov
xor
movsl
mov
cmpsb
xlat
movsl
popa
jge
shr
insb
cli
push
sarb
or
stos
cmpsb
or
insb
mov
fsts
jge
aam
fstl
adcl
push
fistpl
fsubp
lods
xor
or
cmp
cs
aad
mov
add
adc
cs
fwait
dec
cmp
call
xchg
cwtl
or
stos
and
movsl
push
jmp
das
mov
insb
mov
and
or
loope
es
and
iret
outsb
jle
fwait
cmp
mov
sbb
gs
loope
or
xchg
movsl
jecxz
mov
jnp
ljmp
inc
movsl
mov
cltd
jb
xor
mov
mov
in
cli
mov
mov
dec
and
sbb
xchg
push
mov
pop
push
dec
rcrb
hlt
in
es
adc
div
push
aad
mov
mov
cwtl
lods
daa
xchg
inc
imul
and
jecxz
xchg
es
jge
aaa
lcall
or
push
cltd
out
pusha
daa
push
xlat
cmp
out
stc
mov
cs
mov
aam
in
sub
xor
inc
xlat
shlb
mov
leave
cld
cmp
cmp
add
adc
lods
cli
mov
cmp
sbb
push
loop
mov
out
cli
repz
fcmovu
addr16
pusha
cmp
in
addr16
xchg
enter
dec
adc
inc
scas
xorl
add
mov
dec
mov
cmp
sbb
mov
mov
or
scas
fs
into
pslld
jbe
sub
mov
mov
jae
xchg
xchg
add
unpckhps
mov
pushf
sub
add
enter
shlb
ret
xchg
ljmp
in
insl
jecxz
out
lock
sub
aad
scas
repz
pop
sbb
sbb
mov
js
out
icebp
mov
fs
xor
lret
lret
pop
out
stos
mov
mov
sub
aaa
push
mov
add
mov
push
and
inc
xor
jns
iret
cmp
fdivrs
jb
out
mov
pop
outsb
insb
or
xor
mov
pushf
lods
cmpsb
xlat
pop
sahf
dec
pop
lds
pop
orl
stc
movsb
xorb
add
and
sub
and
aam
mov
xor
jp
in
adc
dec
mov
jecxz
push
pop
daa
xor
pslld
mov
cmpsb
jp
bound
stos
cld
mov
xor
fmuls
cmpsb
ja
add
sbb
add
mov
xor
cld
inc
lahf
sahf
jno
dec
popf
xchg
int3
cmc
cmp
mov
push
xorb
in
and
jmp
ljmp
shlb
xor
mov
cmc
repnz
ret
ret
jne
jge
fimuls
pop
nop
mov
mov
std
pop
mov
sbb
push
cli
pop
cmc
xchg
cmp
lea
dec
out
div
ljmp
xor
jmp
xchg
fldln2
pop
mov
hlt
and
leave
pushf
aad
loope
icebp
cmp
sub
movsl
cmp
in
sub
int
in
push
sahf
cmp
popa
jno
dec
shlb
int3
mov
dec
pop
xchg
clc
sbbb
push
push
add
fcomip
cmovle
xor
sub
lods
pop
lods
out
lcall
mov
scas
and
mov
sbb
popf
jmp
movsb
jecxz
xor
mov
mov
cmp
dec
aad
stos
das
fadds
mov
in
ret
fdivp
fldcw
insl
pop
nop
xchg
loopne
pusha
jge
dec
imul
sub
fcomps
xor
lcall
test
repz
inc
dec
in
ret
lock
leave
push
xor
int3
jge
outsl
sub
mov
jmp
testl
movb
inc
bound
pusha
pop
shll
pop
mov
mov
in
inc
in
jbe
jno
nop
mov
mov
fyl2x
jnp
jecxz
sub
imul
mov
sub
add
addr16
les
arpl
jmp
pop
cltd
test
cwtl
jne
cmpsl
push
mov
jge
mov
mov
push
nop
pop
sub
dec
inc
hlt
mov
sub
sbb
xchg
mov
adc
sbb
cli
mov
daa
xlat
jmp
xchg
pop
mov
rcrb
sub
lods
push
lea
dec
in
cmpsb
push
mov
mov
cmp
out
cwtl
jns
and
cmc
push
ss
mov
adc
lds
lahf
and
scas
imulb
dec
sub
jl
das
or
lret
nop
and
stos
or
jno
jb
stc
rcrl
daa
xor
jge
mov
repz
loop
inc
call
lahf
std
testl
xor
adc
lahf
jmp
jp
add
cmc
push
jo
add
sbb
inc
xor
movsb
out
cmp
cltd
lea
lret
inc
mov
bound
cmp
or
mov
sub
int
mov
mov
cmpsl
push
scas
xor
imul
push
sub
add
shl
sbbl
cmp
xorl
addb
mov
idivb
cmpsb
mov
hlt
pop
je
lods
inc
push
jl
ret
or
hlt
xor
loop
sub
test
adc
inc
cmp
jb
mov
addb
ficoms
fcomps
inc
jbe
fidivrl
inc
adc
stos
xchg
dec
mov
xchg
and
je
neg
jmp
lcall
into
js
aaa
out
in
cmp
cmpb
lods
xchg
arpl
clc
fwait
adc
or
loop
mov
cmc
cmpsl
decb
pop
loopne
add
cmp
inc
pusha
jg
dec
loop
fsubrl
adc
and
inc
jp
out
mov
rep
dec
aam
test
dec
cmovae
sbb
pop
mov
scas
mov
sarb
push
sti
sub
pusha
data16
push
and
out
addb
es
mov
adc
addr16
or
sbb
iret
sub
jl
nop
test
lret
push
or
clc
xchg
jb
test
gs
push
push
mov
das
frstor
sbb
lahf
inc
push
mov
cmc
lods
loop
loop
dec
pop
int3
and
sbb
aaa
lret
gs
mov
leave
push
sbb
movsl
push
jmp
iret
iret
mov
fstps
pop
test
leave
xchg
pop
pop
int3
mov
dec
push
push
or
mov
lods
in
mov
cld
pop
push
mov
cs
jo
fwait
mov
fnstsw
lock
mov
mov
adc
loopne
in
mov
push
mov
ss
cmp
subb
ret
xchg
loop
adc
loopne
lods
pusha
pop
lahf
mov
scas
cmpsl
popa
push
xor
dec
adc
mov
mov
shlb
cmp
int3
push
mov
test
jl
movsl
addr16
jno
pop
test
and
mov
mov
in
xor
popa
pop
nop
sub
lods
mov
push
and
or
push
repz
and
mov
shr
add
subb
or
in
push
xor
mov
loop
repnz
cld
adc
imull
lods
add
outsb
lcall
arpl
addb
sbbb
icebp
stc
cmp
xchg
das
mov
ret
data16
fcomps
imul
mov
les
lahf
dec
and
icebp
sub
leave
ds
and
cmpsl
out
nop
fxch
shll
fdivs
shrl
xchg
fstpt
xor
lods
clc
fiaddl
push
pop
outsl
cmpsb
dec
pop
inc
cli
push
cmpsb
pusha
jle
push
adc
xchg
loop
decw
pop
es
inc
stos
adc
sbb
ret
sbb
movsl
jnp
jnp
fbld
mov
clc
daa
sub
dec
or
enter
pop
jg
rorl
xor
push
lcall
mov
lods
sbbb
or
jle
lret
mov
add
add
iret
rcrl
mov
fwait
inc
mov
xor
adc
add
adc
add
mov
add
into
js
ja
sub
and
mov
xor
mov
call
xchg
loope
rorl
cmp
fs
pop
je
sub
pop
test
es
or
mov
outsb
push
pushf
test
std
nop
cmp
cmpsl
lea
imul
jno
push
pcmpgtb
out
loopne
push
or
insl
out
pop
mov
dec
iret
add
sbb
xchg
into
test
xchg
and
mov
fxch
cmpsb
jnp
dec
jo
xchg
imul
dec
and
add
push
rcrb
dec
imul
insb
pop
outsb
pop
lods
xchg
mov
xor
ja
push
adc
xchg
mov
enter
mov
xchg
lret
push
inc
adc
into
sub
inc
rclb
jnp
and
ds
mov
fucomp
and
in
inc
mov
xchg
inc
mov
aam
xchg
sbb
leave
jae
mov
mov
clc
cltd
lock
cli
loopne
mov
inc
das
mov
push
pop
in
mov
mov
iret
mov
jecxz
push
clc
or
pop
ljmp
inc
cmp
add
push
mov
cmp
and
mov
stos
inc
aad
adc
iret
and
stos
pop
push
adc
xor
lret
dec
mov
xchg
jp
aad
shl
adcb
push
pop
mov
adcb
sti
xchg
dec
xchg
push
cli
addr16
imul
test
jb
hlt
mul
outsb
fnstenv
fs
in
sbbb
mov
sahf
cmpsb
imul
dec
mov
sahf
addr16
and
push
jb
daa
pop
mull
sub
sub
ja
xor
imul
pop
ds
mov
clc
adc
lds
jae
orb
mov
add
xor
aaa
mov
push
pop
sbb
jl
mov
das
clc
outsb
lret
fmuls
into
or
cmp
cmp
ja
fidivrs
icebp
sbb
push
ljmp
clc
push
inc
cltd
jg
adc
mov
and
bound
lret
or
test
mov
sbb
xchg
and
out
stos
pop
cmp
fs
inc
pop
cmp
jp
jl
in
sbb
sub
mov
push
test
repnz
mov
loopne
mulb
insl
loop
pop
jb
hlt
mov
sub
sub
iret
push
pop
mov
rclb
sbb
jb
jmp
dec
and
outsl
es
lods
cmp
aaa
pop
outsb
xchg
xlat
adc
hlt
mov
lea
mov
push
jae
shrb
push
and
push
jno
icebp
les
lods
loop
test
dec
xlat
sbb
pushl
lea
sarl
add
pop
ss
out
jge
fisttpl
cmpps
fistpl
arpl
xor
pop
ret
lret
mov
jb
add
loop
sti
lahf
dec
xchg
pop
adc
lock
shr
in
mov
dec
push
push
mov
hlt
mov
cmpsl
xchg
inc
mov
pop
add
idivb
mov
in
adc
pop
gs
xchg
fsts
fwait
mov
jae
les
repnz
rcrl
dec
cs
bound
and
out
jp
xchg
xchg
sahf
mov
cmp
movsb
leave
xchg
rclb
popf
pushf
dec
popa
jnp
lret
fs
xchg
in
fcoml
xor
enter
mov
sub
adcl
aas
sti
mov
iret
mov
mov
sbb
jo
fdivr
fdivs
addb
cmp
xchg
movsl
pusha
inc
xchg
loope
call
hlt
or
rcrb
std
or
pop
push
enter
mov
xchg
cwtl
add
frstor
arpl
mov
xchg
pop
das
jl
push
pop
stc
cld
dec
mov
push
fimuls
call
push
pop
jmp
push
inc
xchg
sub
xchg
out
in
in
inc
adc
leave
or
enter
mov
mov
call
addl
sub
xchg
sbb
int3
ss
es
repz
cmp
call
lds
outsl
imul
sub
test
testb
mov
mov
inc
mov
repz
dec
mov
es
testb
cmovl
popa
js
xchg
lahf
or
fmuls
push
xor
push
aam
sbb
imul
adc
add
push
and
fsubr
test
add
cld
fsubl
or
add
mov
mov
sbb
cs
pop
add
push
push
insl
arpl
jmp
mov
test
out
jbe
xchg
sbb
xor
mov
adc
jb
and
inc
dec
aas
sbb
mov
outsl
inc
aaa
sub
sbb
dec
call
mul
popf
sbb
outsl
push
mov
adc
mov
push
and
stc
jge
imul
rol
dec
mov
stos
xchg
aad
inc
xor
push
and
aas
rcl
imul
jo
es
in
pop
mov
jno
outsb
inc
inc
mov
add
es
pop
test
dec
imul
jnp
cmp
sti
inc
inc
and
es
mov
ficompl
dec
cmp
lcall
jmp
or
lret
je
lahf
das
arpl
aad
shll
adc
rclb
lea
push
bound
test
xchg
adc
arpl
dec
arpl
push
xchg
int
bound
xchg
punpcklwd
lea
psubusb
xor
sbb
inc
and
loopne
inc
fdivrl
xor
mov
push
cmpsb
repnz
ret
cmp
sbb
out
push
mov
lahf
lods
xchg
jb
lods
inc
into
popf
mov
mov
mov
mov
mov
xchg
jg
je
inc
push
cltd
sub
mov
inc
scas
jl
add
leave
shrl
jmp
insl
es
gs
in
inc
push
xchg
mov
sbb
test
stos
repnz
fistpll
shr
pusha
or
lods
pop
lret
ret
shrb
inc
cmp
in
push
push
pop
sbb
scas
cmp
aad
pushf
sahf
aas
mov
pop
adc
cmp
lcall
nop
shlb
or
and
scas
pop
adc
roll
mov
push
jae
mov
adc
xchg
push
and
xchg
cmp
mov
pop
mov
add
std
ss
movsb
dec
mov
fcmovnu
fisubrs
test
std
les
jb
jmp
mov
dec
andb
dec
sub
mov
xchg
and
cli
pop
lods
lret
sbb
pop
or
pop
dec
pop
sub
add
call
xchg
xlat
push
lock
sub
jle
jl
jno
dec
xchg
stos
sub
loopne
rep
and
dec
iret
inc
pop
sbb
add
cmp
cmp
ret
dec
xor
mov
dec
push
mov
je
ret
fimuls
dec
stos
push
or
sub
pop
rcl
iret
imul
mov
pop
das
cltd
jno
pop
jle
rcl
xchg
mov
cwtl
shrl
std
pop
mov
mov
inc
loope
pop
imul
pop
ja
insb
sbb
push
ret
lret
sub
roll
punpcklbw
lahf
stos
out
push
dec
sbb
enter
push
lock
es
mov
scas
cwtl
movsl
lods
lret
add
pop
fucomip
cs
mov
loopne
add
and
sub
jae
sub
hlt
icebp
jmp
jle
pop
xor
adc
add
adc
mov
fadds
jg
mov
aad
insl
ss
pop
mov
push
js
subb
jle
pop
iret
push
sbb
scas
stos
xchg
fyl2xp1
orb
fsubrl
sbb
push
arpl
push
enter
sub
sub
leave
inc
jb
inc
ficompl
jg
in
sub
sbb
leave
sub
loope
jecxz
lods
or
ds
and
fcompl
and
mov
shll
add
xchg
mov
ret
sti
loopne
dec
adc
in
mov
mov
ret
mov
aam
sub
int3
push
pushl
xchg
into
ds
sarl
jbe
decb
push
cmp
stc
ss
leave
addr16
push
jg
es
into
enter
adcb
inc
cmp
and
adc
ficompl
out
or
inc
push
outsl
sbb
cli
cltd
xlat
rcrl
inc
xor
mov
pop
or
push
inc
test
dec
and
lock
push
sti
push
cmp
push
jno
rclb
shll
jb
pop
push
rolb
sahf
sub
adc
mov
cmc
cmp
dec
sub
cmp
inc
lock
xor
shrl
pop
pop
sbb
out
sub
pop
xchg
bound
aam
dec
arpl
and
sub
fstl
push
loope
sub
jle
xor
daa
jbe
mov
call
lcall
xchg
shl
inc
xchg
xchg
sbb
repnz
popf
std
in
testl
jle
das
inc
movsl
stos
out
xorb
jb
xchg
mov
pop
das
pop
push
popf
fistpl
sarl
add
jecxz
fcmovnb
aad
icebp
push
scas
test
sbb
inc
and
popf
push
push
mov
mov
add
xorl
mov
insb
int
dec
clc
hlt
jl
test
loopne
fwait
popf
add
lahf
aad
mov
sbb
hlt
mov
or
mov
aam
mov
lock
insb
stos
mov
fiaddl
jecxz
out
addr16
ss
clc
cmp
lea
imul
xor
jg
mov
add
adc
push
pushf
mov
sub
out
movsl
pushf
cli
ja
and
add
inc
movsl
test
adc
je
addr16
sbb
xchg
out
pop
out
pop
and
je
xor
call
data16
in
mov
xor
sbb
cmp
mov
aas
jg
dec
adc
sbb
lret
loope
add
push
jg
movsb
in
call
push
sub
bound
cmp
cmp
xchg
or
cmp
mov
cmp
enter
aad
or
fdivl
scas
nop
mov
push
cmp
popa
sub
adc
xor
sub
fnstcw
adcl
xchg
aad
jecxz
push
lds
cmp
inc
out
mov
imul
loop
pushf
mov
cmc
dec
dec
inc
clc
cmpsl
loopne
fisttpll
or
int3
sub
mov
cmp
les
bound
dec
rcll
pop
sti
pop
jae
sub
lret
push
sarl
and
pusha
mov
and
clc
cmp
aas
jg
sbb
lcall
sub
inc
ljmp
insb
mov
push
or
ss
xchg
sub
push
in
dec
push
inc
push
dec
mov
and
nop
sub
mov
into
dec
bnd
xchg
jge
xorl
mov
movsl
mov
adc
push
push
add
lcall
in
pop
enter
jg
je
dec
jmp
mov
mov
loopne
sbb
pusha
jns
ror
ret
scas
jl
hlt
js
inc
in
and
xor
adc
popf
cmpsl
ds
mov
sub
dec
or
jns
popa
dec
dec
add
and
dec
mov
mov
cltd
dec
or
outsl
jae
xor
cmp
test
sbb
daa
ss
fdivr
and
mov
xor
dec
pop
xchg
push
scas
out
ds
jp
andl
rclb
mov
mov
out
scas
test
lahf
jg
pop
mov
dec
jp
lcall
adc
sbb
mov
adc
sub
enter
lods
mov
dec
cmp
sub
or
outsl
stc
adc
mov
data16
clc
icebp
loop
ret
mov
inc
xchg
dec
movsl
ret
outsl
xchg
into
popf
iret
das
mov
fs
hlt
mov
xchg
leave
call
jge
mov
mov
test
retw
pop
xchg
jecxz
xor
loope,pt
out
xor
pop
push
adc
std
xchg
mov
mov
push
and
xlat
jecxz
pop
test
jno
sbbl
sarb
or
pop
hlt
mov
cmpsb
jle
jbe
test
mov
mov
push
mov
call
sbb
xor
out
add
push
movlps
ret
daa
mov
pop
mov
dec
lret
xchg
xor
or
gs
loopne
mov
iret
mov
test
sub
jbe
add
ljmp
xor
inc
leave
fldl
in
pop
xchg
lock
mov
push
addb
pop
jnp
jae
jb
popf
adc
lahf
cmp
mov
push
push
call
movsb
in
aad
ljmp
out
add
fldt
mov
out
stos
pop
std
iret
mov
jle
mov
mov
dec
pop
popf
lret
push
xchg
jl
sub
js
fldl
inc
ret
jbe
roll
xor
test
xor
jbe
mov
je
sub
cmc
fdiv
sbb
mov
sar
aaa
bound
push
fnsave
arpl
mov
arpl
pop
adc
decb
in
ja
push
push
notl
inc
cwtl
out
and
and
xchg
or
movsb
xchg
inc
outsb
mov
mov
out
cmp
jle
test
pop
in
imul
shr
jo
data16
cmp
sub
loope
add
cld
lahf
jnp
sub
push
adc
or
mov
imul
loope
fwait
repz
roll
push
and
dec
pop
push
push
lahf
movsb
jno
pop
pop
repnz
in
addb
xor
fs
xlat
cmp
pop
lea
xchg
adc
insb
xor
hlt
jl
mov
inc
shrl
xchg
xor
aad
or
mov
add
in
mov
xor
sbb
ret
mov
xor
popf
mov
push
sbb
int3
mov
mov
imul
movsb
cli
es
push
mov
xchg
pop
or
clc
xchg
dec
dec
pop
push
push
into
ss
and
fstpt
pop
clc
mov
cmpsl
pop
call
stos
mov
lcall
int
mov
pop
and
xor
sbb
sbb
ficoml
clc
xorb
ds
xchg
scas
inc
push
sbb
sbb
jmp
mov
dec
hlt
and
and
cmp
push
pop
clc
jg
xchg
mov
pushf
dec
movsb
hlt
and
in
pop
add
cmp
cmpsl
pop
pop
mov
sub
inc
jo
inc
pop
sbb
mov
out
std
and
pmuludq
jb,pt
xchg
mov
sbb
inc
mov
push
jae
fcoml
inc
loop
jbe
int
fcoms
mov
pop
push
cs
rcrl
aas
mov
xor
in
mov
sub
pusha
into
jbe
push
lea
ret
in
rorl
cmpsb
test
xchg
fdivrp
sbb
push
cmc
es
pop
in
and
cmp
aam
xor
shlb
lret
jp
push
lcall
fcoml
sub
ljmp
mov
pop
enter
iret
add
pop
mov
fisubrs
lods
dec
mov
adc
pop
test
out
mov
xchg
pop
jo
sbb
popa
adc
pop
jge
xor
imul
mov
jo
add
xchg
mov
into
pop
repnz
or
push
jp
in
jle
ja
fwait
ret
jne
insb
sub
inc
push
and
dec
or
es
popl
pushf
xchg
pusha
mov
lods
push
mov
aas
out
jg
ret
rcrl
fwait
inc
cmp
xchg
mov
push
pop
and
sub
mov
gs
es
test
inc
mov
sbb
cli
mov
sub
shrb
les
add
mov
xchg
outsl
add
jo
stos
dec
pop
push
lcall
sub
fdivrs
push
scas
out
mov
cli
xchg
lcall
pop
pusha
pop
or
stos
cmc
aad
dec
repz
lea
pop
jecxz
mov
adc
fs
sbb
cli
mov
xchg
divb
mov
leave
data16
stos
jmp
enter
insl
xchg
cltd
and
xchg
add
mov
es
dec
adc
pop
add
cmp
cmpsb
mov
test
rorl
test
cmc
xor
jnp
dec
popf
dec
aad
mov
and
xlat
fst
dec
pop
in
aad
mov
mov
pop
movl
enter
jecxz
fcmovbe
das
orl
mov
push
nop
and
mov
pop
and
scas
push
aam
jmp
lods
sub
inc
and
dec
std
jno
push
xor
jge
dec
sbb
cltd
loop
mov
movsl
mov
pop
out
xchg
orl
add
fwait
push
out
xor
js
cmp
dec
test
stos
incb
aas
and
push
xchg
ljmp
test
push
adc
push
mov
fmuls
jge
xchg
mov
push
jno
xchg
mov
dec
sub
add
fcomps
cwtl
adc
sbb
movsl
mov
test
mov
int
andb
adc
aad
jp
aad
pop
inc
repz
dec
or
inc
pushf
sbb
fwait
sub
cmp
fcompl
xor
push
repz
cltd
push
hlt
jmp
in
int
test
jbe
mov
loopne,pt
sti
lock
fwait
push
add
xchg
mov
jns
cmp
in
addr16
in
mov
std
and
mov
sbb
test
loope
mov
cmp
dec
dec
fsubs
adc
and
sti
jmp
xchg
sbb
test
mov
adc
gs
stos
iret
adc
sub
in
xchg
mov
das
pop
sbbb
cld
arpl
fists
pop
adc
cmp
push
pop
sbb
push
or
push
ja
xchg
push
lea
push
push
and
push
fnsave
jg,pt
imul
rorb
inc
jo
icebp
mov
sbb
test
xchg
mov
dec
jge
in
lods
movsl
in
mov
jmp
or
xchg
outsb
cltd
in
cmp
lcall
mov
or
lock
je
pop
insl
shll
int3
popa
inc
loop
cmp
xchg
out
loop
sbb
dec
ja
xor
sbb
dec
sbb
mov
fisubrl
pop
xchg
add
dec
lods
mulb
adc
xchg
sbb
xor
sub
hlt
sbb
jns
flds
adc
pop
pushf
lock
and
test
decb
addl
mov
or
mov
jp
test
fldl
daa
in
fmuls
outsb
fstl
shrl
sub
push
test
add
adc
sub
inc
fcmovne
xchg
adc
insl
ret
inc
push
loope
adc
in
fsubrs
addr16
lock
mov
push
in
push
nop
in
adcb
stos
pop
xchg
shl
sti
fadd
dec
call
loope
mov
mov
cwtl
jno
rcl
and
adc
xlat
lea
stos
mov
in
add
push
inc
test
inc
sub
dec
mov
mov
cltd
inc
mov
test
or
pop
lret
sub
shrl
xchg
adc
icebp
jne
sub
movsl
data16
pop
stos
inc
xorb
mov
mov
dec
in
adc
jno
or
cmp
mov
mov
sarl
xor
jmp
lods
cs
insl
sbb
out
adc
mov
out
sbb
xchg
imul
cld
sub
adc
mov
or
cmp
negl
adc
inc
cmp
xchg
imul
push
sarl
pop
mov
sbb
xchg
cmp
in
mov
pop
cmp
movsl
mov
sub
sbb
dec
add
into
aad
cmp
dec
scas
ja
imul
cli
pop
mov
push
pop
pop
cmp
sbb
cmpsl
aam
add
add
mov
mov
jle
jg
scas
movsb
jl
or
push
shrb
das
clc
mov
and
mov
clc
xor
pop
lcall
mov
mov
push
add
push
pop
jmp
jns
fwait
movsl
testb
faddl
ret
push
test
ficompl
aam
vmovntps
sub
jle
dec
fisubrs
inc
adc
adc
or
push
xor
mov
jnp
mov
dec
test
ljmp
cmp
aas
lcall
je
test
cmp
adc
mov
sub
sbb
pop
scas
stc
push
mov
cmp
std
push
shll
pusha
mov
mov
arpl
lods
lods
lea
push
les
xchg
mov
xor
stc
inc
ret
adc
pop
xchg
inc
lods
popa
xchg
hlt
ljmp
adc
mov
insl
jmp
stc
jecxz
xor
mov
jae
sbb
push
inc
push
out
jecxz
aaa
pop
inc
stos
ljmp
jbe
and
cmc
daa
jo
pop
inc
scas
jl
adc
iret
jecxz
jl
adc
or
fnstenv
jnp
xchg
ja
cmp
nop
ss
rorl
sarl
cmpl
por
fs
pushf
sbb
and
and
gs
mov
fwait
lret
add
into
enter
adc
sub
aas
sbb
pop
xchg
cmp
add
mov
pop
stc
inc
lahf
push
or
sbb
mov
push
mov
mov
pop
jnp
cmp
mov
fstl
hlt
inc
jbe
test
ljmp
jmp
xchg
add
mov
mov
jl
jge
push
xor
jg
and
movsb
or
outsb
enter
aaa
and
sbbb
call
sub
scas
mov
xchg
roll
fcmovu
pop
outsl
push
into
sbb
popa
insl
or
add
inc
lret
nop
mov
push
push
inc
stos
sub
xor
cld
push
add
xor
cmp
bound
mov
lods
mov
or
ss
jp
repnz
adc
lods
jmp
pop
pop
jp
dec
sbb
cltd
jmp
les
fcoml
in
pusha
xor
jo
les
or
mov
out
cmp
mov
jge
mov
sbb
stc
fistpll
fidivrs
rorl
sub
inc
arpl
rcl
test
jno
ror
jae
xchg
push
nop
sbb
mov
je
inc
stc
dec
add
out
adcl
mov
pop
notb
inc
jg
jb
jo
je
pop
mov
aaa
test
fstpl
add
inc
or
cmp
mov
add
xchg
mov
sub
aam
in
popf
sbb
ficompl
das
loopne
aaa
popf
sbb
or
push
adc
pop
aaa
fs
subb
mov
ret
push
xchg
negb
les
cld
fiaddl
dec
ljmp
add
mov
and
or
mov
xchg
movsl
rorb
push
dec
jnp
imul
fdiv
ljmp
mov
adc
pop
push
cltd
lret
mull
jo
dec
mov
jp
lahf
mov
sub
das
insb
fmul
rcrl
jp
pop
mov
sub
mov
inc
fstps
stos
push
mov
mov
adc
dec
inc
inc
sub
and
jbe
and
cmp
or
cmpsl
iret
sub
pop
jp
scas
jmp
stos
xorl
rorb
pop
jle
inc
pop
test
and
jge
xchg
push
roll
push
cld
and
mov
ljmp
lock
pop
aas
cmp
and
mov
push
cmpsb
into
mov
push
push
mov
mov
mov
rcrb
mov
pop
popf
dec
sbb
loopne
xor
xchg
sub
jmp
inc
add
sbb
sub
pusha
stos
mov
jl
mov
and
into
test
and
ret
or
sbbb
and
jl
add
test
je
mov
or
test
and
fwait
xchg
js
sub
stc
fldl2t
sbb
jbe
jnp
and
pop
sub
jp
sahf
cmp
push
ret
mov
adc
adc
nop
xor
hlt
xor
pop
xchg
cmp
dec
stos
mov
leave
int3
shl
das
adc
inc
cmp
jns
sub
jg
adc
mov
psubq
sub
mov
aas
dec
pop
cmpsl
push
repnz
mov
sub
test
mov
repz
cmpsb
cld
and
test
jae,pn
int
aad
xchg
std
popf
sbb
push
inc
out
dec
lret
arpl
mov
punpckhwd
imul
test
pop
or
dec
lret
mov
mov
addl
loopne
jns
pop
cli
jmp
daa
out
xchg
cmp
gs
icebp
xchg
repnz
loopne
xchg
fmuls
mov
and
push
dec
movsb
jecxz
or
sbb
and
loope
xchg
sbb
ljmp
pusha
or
fisubs
xlat
add
incb
push
sbb
pop
jbe
inc
xchg
add
les
shll
dec
cmpsl
dec
dec
pop
sub
je
les
cltd
xor
and
sbb
pop
jbe
pop
cmp
out
out
decl
xchg
cltd
push
out
mov
mov
clc
notl
and
inc
or
sub
dec
jne
sub
movsl
addr16
pop
push
dec
dec
call
inc
dec
cmp
lea
adc
std
jle
inc
and
neg
hlt
xor
inc
adc
out
flds
shlb
fstl
cmp
rcrl
out
lods
and
jge
mov
mov
inc
loopne
imul
sub
xchg
scas
inc
in
roll
adc
ficomps
pop
or
sahf
inc
mov
jno
and
xchg
pusha
push
popf
jle
sarb
and
sub
jecxz
adc
pop
push
fsincos
dec
mov
in
xchg
sbb
outsl
fildll
and
clc
std
inc
adc
jg
scas
add
sub
sbb
enter
movsl
ret
orl
jl
mov
rorl
notl
inc
inc
mov
and
test
jb
xchg
adc
xchg
add
shl
icebp
xlat
push
inc
iret
push
or
or
mov
xlat
mov
scas
lcall
push
add
mov
mov
adc
std
pop
xorb
mov
daa
or
push
lods
dec
int3
push
mov
outsb
fldcw
lock
mov
repnz
inc
push
xchg
pop
rolb
lret
test
vmwrite
cmpsl
int
jae
inc
rorb
xor
xor
sbb
adc
out
jle
sbb
mov
das
mov
push
inc
add
pushf
jbe
and
add
rorl
popa
dec
mov
cld
jmp
les
or
and
outsb
push
insb
mov
pop
push
std
add
jb
or
mov
and
test
adc
dec
adc
outsl
cmpsl
fcoms
test
cld
lcall
adc
icebp
push
nop
aas
vaddsd
pop
jns
lret
push
lcall
loopne
loope
lods
dec
pop
dec
mov
movsl
dec
jmp
shlb
fisttps
mov
cmp
jns
jmp
xchg
jmp
mov
jae
and
int
ds
sbbb
inc
mov
pop
mulb
insb
push
fistps
fcomps
mov
adc
fcom
aaa
mov
sbb
loopne
call
rcrb
clc
hlt
dec
jns
push
lea
lods
push
xlat
add
rorb
test
dec
not
fdivrp
cmc
aam
jb
shr
xor
lret
stos
push
sti
lahf
testb
mov
pop
sbb
or
leave
mov
lret
or
cmc
loopne
and
daa
inc
daa
mov
ret
dec
scas
inc
ret
ljmp
in
cwtl
out
push
iret
sbb
sarb
push
rorb
xor
dec
adc
pop
popf
pop
test
dec
jg
popf
and
mov
icebp
inc
sbb
adc
sbb
jp
cs
lcall
aad
test
mov
test
lock
add
out
push
loop
mov
rcll
or
cs
add
insl
mov
sarl
add
adc
push
jne
and
jle
loope
pop
pop
xor
push
inc
xor
mov
loopne
pop
mov
out
xchg
dec
inc
mov
pop
sbb
add
insl
sarl
sti
mov
repnz
pop
gs
fs
sub
sahf
pop
lahf
adc
iret
sarb
cmp
cmpsl
and
cmp
adc
pop
jp
int
dec
mov
insb
xorb
and
rcl
mov
xchg
jecxz
shrb
bound
jmp
movsl
jae
loopne
jno
cmpsl
or
data16
and
add
in
pop
jns
cli
sbb
pop
test
pusha
popf
mov
pop
jmp
loopne
sbb
dec
lea
inc
add
pop
sbb
fsubl
ds
mov
adc
cmpsl
imul
mov
imulb
ret
inc
call
mov
jae
clc
test
cltd
bound
and
idiv
enter
test
out
mov
imul
xor
xor
push
pushf
jo
fs
jns
je
mov
push
jl
mov
jne
add
ljmp
cmp
cmp
jbe
and
adc
insl
push
mov
loop
jno
mov
jb
pushf
and
pop
and
pop
dec
and
test
xchg
pop
push
cmp
mov
les
pop
sbb
incl
and
inc
jb
out
jl
pop
repz
xor
loopne
popf
sub
loope
test
daa
lret
push
push
fsubrs
shl
jmp
mov
xchg
jl
repz
adc
lahf
adc
add
lods
nop
sub
ret
leave
shll
ret
inc
sbb
lret
push
movsb
dec
ffreep
pushf
std
scas
test
mov
sub
shlb
mov
andl
mull
and
dec
icebp
std
mov
rclb
clc
xlat
dec
xchg
arpl
mov
pusha
or
push
ret
inc
add
mov
mov
or
icebp
fnsave
mov
push
xor
fs
enter
es
ljmp
cmp
lahf
in
scas
in
pop
popf
dec
mov
mov
jno
fildll
sbb
xchg
push
pop
sbb
add
jl
add
xchg
and
or
gs
jbe
cmpsb
xor
test
push
cmpsl
cmp
pop
faddl
ja
jle
fldt
cmp
outsl
pop
fldt
sbb
sub
sub
sub
fsubr
mov
jmp
insl
inc
loope
imul
cs
mov
jae
xchg
and
pop
sti
adc
mov
imull
and
mov
lds
call
iret
xchg
gs
push
cmp
cli
xor
enter
inc
mov
pop
and
add
repz
push
sub
add
xchg
inc
leave
xchg
xor
ret
xchg
pop
dec
mov
aam
repz
jp
sub
test
shr
mov
lods
aaa
imul
adc
jns
mov
lret
xchg
pop
ja
out
adc
scas
je
mov
fistl
jecxz
add
mov
sub
sbb
jo
mov
lods
xor
out
and
sarl
aad
pop
nop
cwtl
ds
movsl
push
lret
mov
xor
mov
enter
jge
xor
loop
pop
gs
mov
in
pop
add
and
dec
fst
loopne
or
in
call
jge
add
pop
and
add
and
rcrl
pop
or
push
popf
fwait
xchg
cmp
popa
repz
iret
xor
dec
ljmp
sub
sbb
inc
scas
jecxz
lret
movsb
inc
push
xor
lret
insb
int3
jb
push
mov
lret
fstpt
cmpl
aas
pop
pop
cmpsb
cli
lock
or
or
clc
in
fistps
push
jb
cltd
mov
movsl
mov
bound
or
inc
imul
dec
pushf
sub
pop
arpl
mov
lods
pop
pop
pop
mov
cmp
int
push
push
mov
sbb
mov
cmp
add
fwait
push
push
and
sbb
arpl
dec
cmp
es
dec
jg
add
cmc
dec
es
sub
call
mov
loop
outsb
ja
ret
add
orl
cmp
sbb
adc
inc
pop
mov
xor
filds
and
cli
dec
in
in
addr16
fdivrp
pop
inc
cmp
xlat
stos
pop
mov
cmpsb
jnp
jno
cs
cmp
dec
sub
bound
cs
or
push
leave
pop
fwait
pop
jecxz
jg
repz
dec
add
stc
lret
and
dec
lock
and
jle
mov
pop
clc
ret
push
int3
inc
xchg
and
inc
rclb
int
or
jle
mov
and
cmp
test
pop
push
jl
inc
inc
rolb
or
inc
les
sbb
into
loopne
cmp
addr16
fnstenv
adc
sbb
cmp
jl
sub
neg
jb
repz
add
xchg
xor
outsb
stos
pop
and
inc
cld
and
ret
pop
ret
ljmp
testl
cwtl
push
mov
add
and
outsb
push
test
adc
repnz
lret
push
and
inc
in
add
pop
lret
cmp
movb
mov
cwtl
mov
sbb
add
movsl
xchg
jp
in
pop
lods
mov
movsl
ja
add
add
jb
mov
sahf
orl
add
pop
adc
mov
sar
mov
adc
lods
sbb
cmpl
jae
jmp
or
loopne
or
xchg
jne
xor
xor
aam
aaa
xchg
push
mov
jnp
fmull
outsb
pop
jne
jge
shlb
xor
ds
pop
in
mov
pop
das
inc
pushw
pop
adc
stos
cmp
hlt
outsb
ret
push
lods
int3
push
add
jge
out
ret
pushf
sbb
jg
xchg
subl
xchg
std
aas
jecxz
cmp
jo
jae
lahf
dec
aam
mov
inc
push
lock
test
jae
shl
pop
cmp
push
and
outsb
andl
pusha
cs
pop
flds
hlt
daa
mov
or
mov
jo
or
cmpsb
sbb
xchg
into
and
pop
scas
gs
mov
inc
into
cli
mov
inc
mov
out
mov
test
xor
and
lds
aaa
cmc
cmp
and
sti
xor
inc
addl
and
mov
jbe
cmc
rcr
jns
jbe
jg
dec
addl
jne
xlat
lods
les
mov
repz
pop
rcrb
adc
fdivl
test
mov
dec
js
fbstp
or
movsl
pop
jg
and
push
dec
mov
fcom
pop
cmp
jnp
leave
mov
cmc
sarb
jmp
adc
outsb
cmp
gs
subb
mov
dec
mov
push
das
mov
jp
or
xor
dec
xor
jae
and
pminub
inc
inc
fidivl
push
mov
adc
cld
sbb
xchg
nop
arpl
push
mov
fnstcw
dec
mov
rcll
inc
std
bound
lahf
xchg
in
stc
sahf
xchg
adc
or
cli
jno
jno
push
es
push
cmpsb
pushf
fistpl
fs
out
or
add
mov
shrl
mov
popf
mov
cli
jne
fisttpll
test
stc
test
cltd
je
sub
stos
mov
pushf
popa
fsubrl
pop
fldenv
sbbl
sahf
jmp
cwtl
int3
fs
xchg
inc
pop
sub
sbb
loop
fwait
pushf
jmp
cmc
test
shlb
ss
adc
repz
xchg
xor
cmpl
sbb
jmp
and
outsb
pop
adc
mov
dec
sub
or
test
std
mov
lods
in
sub
mov
push
iret
jns
xor
ja
int3
adc
dec
xchg
xchg
test
aam
js
lock
xchg
dec
jns
gs
sub
daa
mov
jne
pop
scas
loope
movsl
clc
fistl
mov
jg
daa
and
int3
bound
andb
jb
lock
inc
clc
jo
shl
in
and
ljmp
test
mov
out
enter
ror
inc
pop
fistpll
fwait
push
push
inc
dec
ficoms
mov
fnsave
loop
bound
push
or
repnz
sbb
cld
and
in
dec
mov
fistpl
xchg
mov
xchg
push
push
jno
aam
sbb
cmp
pop
je
pop
dec
add
push
dec
sbb
pop
and
pop
xchg
sbb
repnz
and
and
xlat
lret
gs
pop
or
jbe
dec
adc
or
jno
lock
add
es
loopne
adc
adc
test
mov
dec
lods
scas
loope
inc
and
loop
mov
sbbl
bound
mov
std
adc
push
sub
pop
outsb
push
repnz
int3
sub
sbbl
dec
ds
lahf
adc
jno
pop
xchg
popa
push
adc
and
mov
cld
out
push
and
dec
sahf
cwtl
fmull
enter
xor
jp
inc
push
push
mov
pusha
jp
xor
xchg
pop
push
loopne
jp
imul
lock
in
nop
lret
test
push
ret
inc
sub
cli
popf
in
sbb
jecxz
or
sub
jns
jp
push
test
or
movsb
seto
push
pop
leave
aas
sahf
fbstp
stos
shlb
push
push
inc
dec
jo
sbb
fdivrs
lock
sub
pushf
sbb
inc
movsb
repz
mov
or
call
stc
jmp
jl
sub
and
add
notl
xchg
sbb
cmc
jae
sub
call
out
outsb
push
cmp
mov
mov
or
in
call
ret
or
fwait
scas
inc
adc
sbb
pop
fcompl
mov
xchg
xor
lret
sbb
dec
mov
idivb
jo
out
dec
adc
dec
lret
mov
mov
fdivs
pop
and
es
inc
rorb
mov
or
ret
cmp
mov
push
andl
aad
or
jecxz
rcrl
pop
dec
les
xchg
sbb
adc
dec
loop
aam
pop
mov
lret
jno
enter
pop
or
sub
xchg
push
ja
push
mov
bound
sbb
cmp
mov
dec
in
rcrb
mov
enter
inc
dec
inc
push
out
and
xor
ret
mov
int
sub
cmpsb
cmp
adc
sbb
imul
mov
xlat
adc
and
ljmp
push
xor
dec
cmp
jns
inc
in
mov
movsb
iret
sbb
lret
cmpl
cmc
cli
pop
push
das
and
jne
cli
loop
mov
nop
pop
das
mov
xor
jne
stos
or
std
or
mov
push
dec
dec
add
popa
or
daa
fdivr
cwtl
cld
and
sbbb
mov
pop
pop
adcb
mov
ret
dec
or
ret
mov
add
cmp
lock
push
push
lcall
lea
sbb
cld
cmp
and
dec
xchg
inc
and
or
hlt
dec
xchg
mov
jae
adc
notl
cli
jo
dec
xchg
test
out
std
xchg
popf
or
inc
xor
lcall
fsubs
lock
or
ja
subl
loopne
les
and
jne
adc
pop
int
out
in
lret
loopne
sbb
out
jb
xlat
daa
mov
test
or
add
cltd
xlat
ljmp
icebp
sub
lea
mov
lcall
add
adc
out
sbb
ds
out
push
add
push
in
sub
cs
movsb
lock
and
xor
push
jb
jl
push
int
cmp
jp
lret
shlb
mov
enter
add
jbe
jb
pop
fisttpl
loopne
mov
jl
mov
mov
in
or
jle
icebp
loopne
xchg
jbe
int
push
mov
lret
or
and
lock
sub
pop
rcll
mov
sub
aaa
cmpsl
mov
cwtl
adc
adcl
push
lret
fdivs
outsb
dec
mov
jae
mov
movsb
inc
aam
lret
xor
aad
xor
std
inc
loope
xor
int
in
sbb
dec
ret
ss
mov
mov
adc
xchg
gs
cmp
fs
jns
iret
xchg
idiv
mov
into
iret
jo
ja
stos
cmpb
mov
repnz
xchg
jecxz
jle
sbb
mov
xchg
inc
adc
pop
test
imul
js
mov
adc
sub
mov
pop
and
push
mov
mov
push
sub
fs
jmp
repnz
push
js
rclb
pop
rorb
mov
in
mov
mov
or
popf
sbb
xchg
rcll
xchg
rcrl
aaa
xchg
sbb
adc
mov
bound
int3
jle
fcos
icebp
test
lret
sbb
and
testl
adc
jno
or
jo
dec
mov
sbb
icebp
stos
ja
and
dec
sbb
movlps
nop
sahf
inc
push
ret
ljmp
jmp
xor
arpl
adc
fistl
cli
push
pop
movsb
and
mov
stos
shr
xor
and
jecxz
inc
or
repz
cli
inc
dec
jbe
mov
mov
mov
cld
add
push
add
cmp
int
call
test
bound
fnstcw
pop
mov
mov
mulb
xchg
mov
pop
test
xchg
insb
add
sbb
mov
shrl
sub
enter
add
sbb
pop
cmp
fsts
nopl
xchg
push
cmp
lods
xchg
ret
ret
xchg
jne
cmp
add
lods
dec
xchg
or
jo
jne
mov
or
adc
aas
stc
test
mov
lret
sahf
sub
pop
aaa
push
data16
jp
lahf
clc
xchg
mov
mov
dec
into
lret
popa
cmpsl
inc
shrl
sti
bound
cmp
mov
bound
cmp
les
icebp
pop
testl
mov
popf
fldenv
mov
inc
and
and
and
in
aam
jge
xchg
test
push
push
mov
jle
or
sbbb
xchg
mov
adc
out
lahf
push
xor
dec
xor
mov
sbb
dec
test
add
xchg
inc
cmp
sti
cwtl
add
and
int
shlb
jae
rolb
in
fistps
add
std
dec
sar
cmpsl
cli
jle
in
in
mov
cmpsb
lret
push
ret
mov
sub
test
lret
inc
mov
or
cmp
inc
cmpsl
push
test
std
call
bound
scas
mov
in
sti
je
jae
inc
sti
or
sbb
dec
mov
lods
cli
cmc
insl
lods
leave
inc
insl
movsl
mov
mov
pushf
gs
pop
fwait
js
xorb
push
mov
dec
mov
pop
fbstp
jle
jmp
fimull
sahf
test
or
daa
addr16
dec
fcoms
mov
ret
cmc
subl
jmp
cmp
fidivrs
lret
mov
fisttpll
dec
pop
mov
call
sub
add
lahf
aas
dec
adc
mov
fidivl
sbb
pop
sarl
jl
int3
pop
iret
insl
jl
clc
flds
std
fldcw
push
sub
insb
rcrb
movsl
push
mov
lea
mov
push
mov
scas
sbb
dec
cli
enter
inc
icebp
out
jg
xor
push
cmp
notb
les
ja
test
int
cld
jle
xor
fcmovnbe
scas
push
rorl
and
rorl
adc
in
cwtl
lods
push
add
aad
clc
popa
and
lods
ret
pushf
fldl
mov
and
inc
test
dec
push
aas
std
addr16
mov
cmp
or
dec
in
mov
fs
and
daa
in
xor
jp
and
or
xchg
mov
and
sbb
cmpsb
lret
enter
mov
mov
mov
add
sub
mov
int
sbb
jb
dec
stc
data16
addb
cmpsb
cmp
mov
mov
pop
sub
mov
iret
out
popa
push
jae
js
mov
pop
mov
sbbl
jno
dec
cmpsb
dec
cmp
xchg
es
jo
inc
pushf
dec
xor
pusha
pop
testl
lock
fwait
into
scas
movsb
jbe
int
mov
and
xchg
dec
or
ds
bound
fucomi
push
push
xor
pop
mov
test
or
shll
std
push
in
cli
lds
sbb
cmp
or
xor
rcl
and
faddl
jno
int
gs
fistps
std
out
pop
adcl
or
xchg
test
lret
or
and
xor
fwait
push
mov
test
inc
mov
je
add
mov
fcomp
mov
insb
push
aaa
gs
or
lods
notb
out
je
roll
jns
ret
shlb
mov
movsl
scas
mov
fs
pop
mov
pop
stos
cmp
xchg
ss
sti
mov
dec
push
out
mov
shll
adc
sti
jne
add
push
and
mov
dec
sarl
faddl
outsb
jmp
cmpsb
dec
js
and
icebp
in
popa
mov
jbe
and
sbb
mov
add
adc
xor
aam
popf
lret
pop
cld
cmp
das
inc
movsb
xor
aad
outsb
aaa
adc
jp
cmp
mov
add
fs
mov
mov
inc
inc
push
fisttpl
jl
repnz
jne
mov
mov
les
xchg
mov
mov
je
dec
sub
add
data16
and
xor
insb
jge
pop
xchg
push
adc
idivl
lcall
shll
pop
ret
inc
push
out
fildll
int3
xchg
pop
sbb
inc
in
test
adc
xor
cmp
xchg
jns
ds
mov
dec
mov
pop
stos
or
add
in
pop
sub
adcl
sub
add
fcmovb
and
inc
jge
jne
pop
adc
pop
sub
adc
xchg
sarb
and
mov
add
dec
sti
inc
pop
lcall
in
fimull
es
add
pop
push
mov
repz
cmc
jo
ficompl
mov
hlt
rorl
or
loope
lods
pop
push
dec
loop
je
jbe
aaa
pop
or
call
sti
xor
les
divl
sbb
push
inc
das
sub
lahf
pushf
mov
out
sbb
and
dec
ljmp
in
mov
push
arpl
clc
xchg
sar
adc
lret
out
or
push
mov
movsb
or
in
jecxz
mov
push
loopne
cmc
data16
sub
out
mov
push
mov
lods
and
sub
xor
sti
stc
xor
mov
jnp
adc
cmp
inc
cmp
mov
in
xlat
je
push
out
mov
inc
dec
pop
insl
pushl
loop
mov
clc
cli
xchg
stos
sbb
cmpsl
gs
inc
aaa
sub
test
call
sub
mov
imul
cli
push
jne
mov
dec
adc
cmc
test
int
ss
inc
loope
sub
out
sbb
or
adc
mov
int
or
cmc
adc
jmp
sub
mov
je
jmp
mov
xchg
mov
in
call
cwtl
test
movsl
sub
lods
stc
call
add
push
pop
scas
sub
or
mov
mov
pop
jp
sbb
repnz
cli
aam
dec
jecxz
xor
xor
or
sub
cmp
rolb
push
inc
fistpll
out
jnp
add
movsb
jnp
mov
mov
cmp
mov
outsb
js
xchg
imul
test
pop
movsb
icebp
scas
sub
movsb
les
aam
jo
pop
push
adc
pop
pop
pop
decb
lcall
dec
jno
jg
push
jg
fwait
push
push
jmp
cs
dec
mov
hlt
jns
pop
jmp
lcall
jb
daa
mov
adc
adc
pop
and
clc
jo
jmp
xor
rcrb
mov
cmpsl
fwait
aaa
jns
sbb
xlat
and
incb
test
les
iret
mov
iret
pushf
dec
nop
dec
aam
sbb
inc
rcll
add
jmp
insl
xor
xor
sub
stc
push
movsl
mov
out
sbb
sbb
fidivrs
andb
jp
das
pop
jns
inc
sub
outsl
or
hlt
cmp
lcall
les
mov
dec
push
andl
iret
aaa
mov
pop
jmp
sub
sub
cwtl
push
in
xchg
pop
cmpsb
jns
mov
pop
orb
fucomi
mov
cmc
add
es
test
inc
addl
repz
fcompl
test
xchg
dec
jecxz
leave
inc
scas
xor
idiv
cmp
cmp
jle
negl
jmp
jb
das
outsb
out
push
dec
jl
dec
out
jo
cltd
push
and
and
add
je
loopne
jno
testl
xchg
mov
sbb
rclb
lcall
lods
cld
push
push
mov
add
out
js
add
dec
mov
jg
cmp
push
fcomps
imul
cmp
mov
or
pop
dec
out
int3
mov
jns
mov
test
and
stos
pop
rol
jl
mov
sbb
jne
int
cs
xchg
mov
adc
movb
mov
popf
mov
aas
shl
clc
inc
rol
stos
mov
xchg
jne
jl
pop
call
inc
xor
jno
fst
sbb
adc
das
mov
pop
mov
push
mov
in
cmp
or
mov
pushf
sbb
insb
lret
movsl
in
in
out
daa
sub
sbb
and
scas
cmp
ljmp
sbb
pop
inc
leave
sbb
add
pop
jg
imul
xchg
out
mov
cmp
jmp
lds
inc
cld
movsl
aas
fnstenv
push
adc
mov
aaa
popa
mov
lret
andl
mov
popa
or
fucomp
call
mov
rcll
jl
pop
mov
lods
push
and
push
jmp
fstpl
jp
xor
sub
rorb
aas
pop
enter
mov
fs
loop
aad
lcall
push
stos
rcr
mov
mov
and
scas
sbb
les
sti
mov
ficomps
mov
loopne
fiaddl
ss
and
fistpll
xor
setbe
sti
xrelease
push
adc
in
mov
je
jno
jmp
mov
ret
cmp
adc
stc
mov
push
xchg
mov
pop
and
ljmp
mov
nop
inc
and
dec
pusha
or
mov
pop
push
pop
adc
pop
xchg
inc
fdiv
jmp
pusha
inc
out
repz
lods
lret
lods
stc
cmp
pop
ret
test
shrl
xor
pop
xchg
sub
push
add
adc
lock
insb
push
push
je
std
fs
or
mov
sbb
or
jl
ds
cmpsl
cwtl
xchg
lret
es
mov
cltd
or
fistpl
fisubs
test
lea
pop
or
push
cli
and
cmp
adc
bound
dec
gs
jno
lods
pop
fcmovu
or
or
mov
imul
ljmp
xlat
xor
jg
pusha
pusha
xchg
inc
mov
jecxz
ret
into
adc
cmpsb
dec
mov
xlat
cmc
xor
xchg
xchg
aam
in
xchg
xchg
jne
xlat
mov
shlb
scas
pop
cmp
inc
xor
or
push
cmp
pusha
lods
inc
popa
push
test
jbe
xchg
test
bound
cmp
sub
out
jo
jg,pn
jge
xchg
cmp
sbb
dec
mov
jle
xor
pusha
cmpsb
pop
mov
adc
and
rolb
add
cwtl
dec
cmp
dec
pushf
das
sbb
sub
or
dec
xor
fcoms
add
call
out
jmp
int3
and
int
or
inc
inc
cmpsl
pop
cs
test
adc
cwtl
ds
sar
mov
in
jo
and
or
pop
xchg
add
xor
shl
ficomps
mov
inc
dec
mov
sbbl
cmp
sub
lods
shl
sub
jmp
cmp
adc
in
push
xchg
sub
fucomp
jno
or
xchg
mov
ret
int3
in
xor
jp
cmp
push
cli
in
cmp
ljmp
rcrl
out
insb
ret
pop
adc
ret
hlt
imul
or
scas
mov
mov
dec
mov
je
nop
fwait
aaa
sub
pop
add
bound
push
insl
ss
push
std
mulb
mov
xchg
fsub
lret
sub
fists
fucomi
fs
jns
pop
inc
xor
xor
imul
add
in
xor
aaa
push
pushf
dec
inc
or
sub
dec
mov
daa
popf
ret
dec
ljmp
jg
in
adc
xchg
frstor
jmp
mov
dec
push
addr16
mov
jb
push
fwait
jno
mov
insb
mov
hlt
shlb
jo
push
mov
xchg
loopne
or
inc
sahf
or
sub
pop
and
shll
mov
fwait
loopne
inc
push
sub
jne
lods
rcr
push
push
aas
mov
mov
or
loope
cmpsl
inc
movsb
mov
dec
lret
jecxz
sub
jmp
mov
jne
data16
push
lret
add
rcrl
icebp
sti
and
ja
gs
outsl
mov
aam
test
mov
shll
cmpsl
stos
fwait
or
fcoml
cwtl
xchg
add
push
pushf
out
push
sbb
dec
aam
in
lret
push
femms
shrl
push
xchg
dec
mov
and
mov
sbb
inc
mov
enter
jg
mov
cmp
jg
add
inc
outsl
mov
mov
xor
mov
mov
push
sbb
cmp
xor
cmpsl
mov
mov
mov
jmp
xor
and
ja
pop
xlat
in
sub
and
pop
bound
sbbl
push
sub
mov
lods
fisubl
sbb
mov
mov
lret
push
push
inc
or
aad
call
jle
repz
rolb
sub
xor
xchg
cmp
repz
in
neg
sbb
push
adcl
data16
and
inc
pop
jb
cmp
daa
xor
fwait
and
cmc
scas
mov
mov
dec
adc
stc
in
jl
test
lods
add
ja
lret
lahf
cmp
dec
add
push
xor
cli
or
pop
jns
mov
jge
sbb
xor
cmp
jb
arpl
or
mov
out
lock
aas
popf
or
jns
movsl
rcr
out
or
sahf
mov
and
mov
mov
jg
adc
add
gs
nop
pusha
adc
and
aam
dec
test
mov
cmpsb
repz
jo
mov
xchg
or
aas
std
movsl
popa
lret
mov
loop
mov
fimuls
add
pop
shl
lcall
add
lahf
shr
pushf
cmc
jno
bound
bound
lods
test
mov
daa
cmc
sbb
xchg
test
dec
push
jle
cld
nop
faddp
aaa
mov
insb
lret
xchg
clc
out
pop
not
mov
icebp
jbe
out
filds
pop
les
das
mov
or
mov
div
jp
push
das
pop
cmc
daa
in
mov
push
repnz
add
addr16
xchg
pop
push
sti
je
jecxz
cmc
mov
sbb
mov
and
sub
arpl
lahf
rolb
shr
cmp
addb
scas
arpl
pop
int
push
rcrb
std
add
push
fucom
xchg
push
jle
pop
push
xchg
loope
mov
sub
sbb
mov
jno
mov
pop
pop
lahf
mov
mov
in
add
sbb
pop
ja
out
sub
push
pusha
cmpsl
sub
xchg
ds
int3
lahf
rcr
shrl
jbe
negb
shl
stc
jbe
dec
mov
mov
outsl
adc
andb
lret
es
xchg
and
dec
imul
mov
add
or
xchg
inc
xlat
cs
mov
scas
pop
adc
rolb
imul
push
scas
xchg
rcll
inc
js
fistpll
lods
jle
mov
inc
insl
jmp
pusha
xor
loope
jbe
xor
test
adc
ljmp
loop
pop
movsb
movsl
push
imul
adc
sub
mov
and
shrb
push
and
xchg
adc
jnp
das
shlb
xor
daa
cmp
add
inc
sub
scas
push
popa
aaa
jno
jle
xor
and
hlt
cli
loope
nop
testb
and
les
jmp
jno
xchg
and
lahf
pop
fcoms
fistl
lods
pop
inc
aas
scas
andl
in
sub
and
imul
mov
fcomp
loope
dec
cwtl
popa
adcb
pushf
in
sahf
js
aad
aam
jne
clc
xchg
dec
xor
movsb
xchg
pop
in
jno
xor
xchg
push
and
jg
push
dec
out
cmp
cmp
sbb
cmc
mov
outsb
clc
xchg
push
lret
cmp
or
repz
imulb
iret
xchg
xchg
movsb
stos
xor
push
or
push
inc
ficoms
or
out
rorl
cmp
or
cwtl
lcall
arpl
es
pop
ja
push
push
movl
int
mov
in
fldt
push
pop
gs
mov
sbb
dec
mov
pop
leave
sub
jmp
push
push
add
cmp
and
pop
mov
push
xchg
pop
sub
pop
pop
mov
scas
mov
pop
inc
push
sbbl
jo
ret
mov
jnp
xchg
and
mov
mov
add
dec
call
test
ss
stos
jmp
push
cmpsl
shll
pop
insb
xchg
cmp
js
or
add
add
and
push
aaa
lds
add
sub
lea
shll
cmp
testb
and
in
or
lahf
cmp
or
addb
xor
push
push
or
mov
pop
jbe
adcl
mov
mov
dec
repnz
pop
inc
out
inc
ret
data16
sub
mov
andb
and
cld
jge
out
roll
sub
mov
aad
int3
popa
test
repz
mov
and
gs
jl
or
addr16
mov
pop
ret
in
call
add
das
mov
mov
mov
testl
dec
add
cwtl
rclb
jb
xchg
mull
pop
test
dec
sbb
jbe
jb
pop
divl
mov
inc
jg
push
leave
mov
dec
pop
fs
out
push
cli
or
fidivl
sbb
cmpsl
xor
jecxz
mov
cs
dec
aaa
mov
xor
mov
xchg
jne
outsb
add
cld
or
in
bound
xor
repnz
cmp
cmpsb
sub
hlt
mov
insl
out
std
pop
pop
out
jo
cld
fnsave
std
pop
loope
insb
or
add
sbb
mov
cmp
adc
inc
adc
and
movsb
push
cmp
or
aad
or
repnz
int3
imul
cwtl
ficoml
and
cmpsb
xchg
dec
push
dec
cmp
ds
lret
or
push
ds
rcrb
jg
cli
sbb
mov
jns
test
jns
xchg
ret
mov
pop
dec
popa
aam
pushf
movl
call
cmpsl
inc
cmp
xor
icebp
inc
leave
jge
ficoml
pop
cwtl
adc
ret
xchg
pop
pop
pop
pop
jae
and
xchg
mov
movsb
testb
cmp
and
cmpb
pop
mov
dec
mov
sbb
jno
and
jno
movsl
mov
std
jno
mov
inc
subl
shlb
xlat
dec
or
out
loopne
fdivl
psrlw
lods
in
push
sbb
pop
mov
call
push
scas
cld
jg
testb
pop
push
pop
outsb
mov
or
popa
pop
jo
das
adcl
sbb
cs
xchg
ficoml
inc
ss
pop
jg
xchg
add
mov
lcall
adc
push
int
lea
push
mov
xchg
mov
jge
pop
add
inc
xchg
jo
push
out
inc
das
mov
xor
mov
imul
loopne
pop
or
cmp
out
mov
aaa
or
into
lcall
icebp
xchg
lds
outsb
xor
pop
adc
and
outsl
xchg
push
test
mov
lret
addb
jmp
jmp
in
stos
outsb
dec
shlb
push
rclb
push
xchg
push
push
into
xchg
xchg
popf
xchg
push
cmp
and
and
cltd
sahf
ljmp
cmp
xlat
je
sub
cmp
dec
push
stc
xor
lcall
adc
arpl
cmpsb
inc
lahf
loope
adcl
dec
xchg
pop
sub
jl
inc
stos
lahf
jae
into
or
add
push
xor
mov
adc
arpl
ficoml
lret
push
in
cmp
cmc
add
xchg
pop
in
add
or
dec
fwait
mov
out
adc
cmp
dec
jae
mov
in
aad
mov
pop
lcall
data16
xchg
mov
xchg
imul
push
ret
fistl
push
in
cmp
sti
xchg
cmp
adc
mov
fdivrs
mov
mov
lea
adc
in
bound
cmp
jbe
iret
push
ficompl
dec
into
sbb
adc
push
jbe
lds
jno
lds
push
and
push
cmp
adc
ret
pushf
mov
and
push
stos
xchg
inc
dec
and
cmp
dec
lahf
test
movl
std
add
cwtl
cmpsl
xor
inc
mov
cmp
or
pop
bound
xchg
ret
sbb
call
xchg
xor
roll
ret
pop
lods
outsb
fwait
popa
xchg
addb
std
mov
mov
or
jg
push
call
andb
repz
cmp
mov
sub
in
jne
push
in
insl
in
fistpl
jle
fbstp
popa
std
test
aad
jns
cmp
cmp
mov
in
mov
inc
mov
fs
orl
xor
fldt
ret
popf
cmp
jns
push
adc
sbbl
dec
bound
adc
adc
adc
jecxz
sbb
test
mov
inc
fimull
stos
dec
lahf
int
fstpl
add
cltd
rorb
test
jo
inc
fisubl
test
xor
inc
outsb
popa
call
xor
das
xchg
int3
xchg
lret
in
push
sbb
testl
fiadds
or
sbb
dec
arpl
loop
pop
cmp
sbb
mov
orps
popf
jae
cwtl
or
test
shl
xor
mov
loopne
gs
jbe
popa
iret
pop
pop
xor
cmp
movsl
or
add
mov
lret
gs
pop
xor
add
fdivrs
mov
mov
bound
jge
dec
cwtl
in
mov
xchg
out
rcll
repz
pushf
movsb
cltd
sub
pop
inc
cmp
cs
mov
cmpsl
int
cltd
mov
mov
xchg
int3
jo
jmp
cmp
scas
pop
int
and
leave
rcr
xor
inc
mov
mov
mov
imul
fnop
das
xchg
dec
and
sbb
cmp
dec
jno
xor
stos
sub
aaa
repz
ret
mov
push
je
shll
mov
imul
and
pop
adc
aaa
ds
adc
mov
sbb
cmp
push
mov
xchg
jnp
push
pop
arpl
dec
int
movb
inc
int
mov
xor
mov
daa
les
daa
xchg
stc
daa
xor
notl
fabs
xor
andb
or
push
scas
push
cmpsl
addl
adc
cmp
cmpb
movsl
int
leave
repnz
in
cmp
icebp
mov
cmp
xchg
add
call
xor
loope
mov
adc
push
adc
adc
mov
loope
mov
dec
out
xchg
xchg
cmp
dec
scas
mov
xorb
ret
ret
or
imul
adc
pop
pop
add
stos
pop
push
and
and
sbb
xchg
jecxz
xchg
jle
pop
pop
call
pop
outsl
adc
shlb
orb
mov
es
ret
es
bound
xor
pop
into
mov
mov
cmp
sahf
mov
jp
enter
sub
mul
mov
xchg
lcall
cmp
or
cmp
xor
clc
cmpsb
cmp
jmp
sub
jl
ja
fs
or
das
adc
add
adc
pop
rolb
dec
or
or
push
jg
lahf
mov
push
pop
lds
push
or
push
call
dec
pop
in
fcoml
dec
mov
dec
sahf
outsb
enter
jle
or
lods
insl
aam
ds
loop
pop
stc
mov
sub
xchg
jecxz
pop
mov
cmp
mov
cld
imul
xor
inc
rclb
xor
pop
les
pop
fnsave
fcomps
xor
movsl
lea
fld
sti
lahf
es
lret
lea
fwait
mov
out
nop
jae
mov
pop
rclb
clc
cmp
inc
loopne
es
mov
mov
movsl
xchg
subb
add
mov
adc
movsb
push
pop
push
pop
insb
mov
mov
sti
mov
imul
mov
jmp
dec
addr16
mov
inc
ds
sbb
repz
mov
and
pop
scas
nop
mov
sti
ds
pop
ret
dec
mov
xchg
aam
dec
sarb
lods
mov
test
push
lahf
jle
pushf
add
into
int3
out
in
or
out
mov
cmpsb
in
mov
roll
cltd
pop
fwait
dec
out
je
je
imul
inc
mov
addr16
addb
ss
pop
nop
inc
mov
sbb
cwtl
mov
adc
lods
cmp
fsubl
xlat
sub
arpl
and
xchg
add
inc
xchg
mov
stos
loop
jp
cmp
sbbl
mov
insb
pusha
and
gs
adc
adc
xchg
rcrb
dec
popf
sub
test
pop
xchg
jle
cmp
pop
ret
mov
outsb
mov
jne
mov
push
inc
push
aas
mov
cmp
fisttps
int
mov
fidivrl
push
imul
repnz
dec
and
jg
in
pop
xchg
in
pop
dec
add
and
inc
je
or
into
scas
sahf
fs
cmpsb
push
jno
mov
xchg
cmc
pop
pop
in
mov
iret
sbb
mov
lods
add
hlt
cld
lret
clc
test
arpl
mov
adc
sahf
mov
ror
imul
mov
inc
shlb
out
mov
aad
xchg
fadds
inc
stos
enter
je
stc
push
fistpl
outsl
je
cld
fwait
mov
das
jae
xchg
mov
inc
call
pop
fcomps
cmc
push
add
xchg
adc
jne
and
test
mov
cltd
aam
jne
fs
mov
test
ret
mov
imul
push
sbb
fdivr
pop
pop
pop
sub
or
add
cltd
or
xor
mov
push
into
mov
fbstp
cmc
adc
pop
out
and
push
fcompl
nop
outsb
mov
jle
movsl
push
lcall
fisttps
inc
int
pushf
inc
andb
jp
and
mov
sub
int3
ficoms
xor
jbe
push
push
sub
aad
mov
add
das
adc
mov
rclb
push
imulb
sub
mov
xchg
push
outsl
inc
sub
mov
dec
outsb
cmc
push
xor
popa
push
imul
sbb
rol
mov
sbb
sub
stc
xor
les
adc
xchg
jl
leave
xchg
push
dec
mov
aas
cmpsb
inc
fnop
xor
cmp
out
push
fidivrs
xchg
push
lahf
dec
dec
dec
pop
fcmovb
sar
icebp
movsl
add
mov
lret
push
push
mov
mov
mov
test
push
push
push
sub
xor
lret
gs
push
lock
sbbl
pop
sbb
repnz
test
jo
mov
push
and
outsb
mov
jmp
imul
cmp
aaa
test
daa
pop
sub
adc
mov
pop
add
xchg
push
test
in
iret
xorl
adc
mov
shlb
lods
jge
or
lahf
add
test
mov
subl
fs
loopne
fs
jo
jae
loopne
std
dec
lods
xchg
mov
adc
add
sbb
rol
pop
cmp
pop
inc
mov
cmpb
call
mov
sbb
shr
cmp
mov
inc
sub
fistl
lods
mov
xor
iret
repnz
xor
lock
cld
inc
aad
sbb
int3
jno
insl
dec
jle
or
iret
in
pop
sbb
dec
in
test
ret
or
popa
xlat
adc
fwait
jnp
push
xor
fsubrs
stos
sbb
push
cs
or
aam
dec
roll
cmpsb
cmp
and
pop
xor
cmp
rcll
push
outsl
jg
xor
pop
insb
in
loope
fstl
mov
push
push
rol
sub
movsb
add
loopne
pop
mov
test
test
pop
cmp
out
out
stos
pop
outsb
mov
repnz
sub
aas
iret
sbb
aam
jecxz
add
decb
xchg
xchg
sub
movsb
push
push
and
dec
adc
cmp
jge
and
pop
dec
test
mov
mov
xchg
cmp
adc
insl
or
aas
sbb
popl
inc
stc
lods
sub
clc
aad
orl
fists
cwtl
ds
jns
nop
sub
and
inc
jmp
stos
add
xchg
stc
sbb
out
cmp
fsubrs
bound
and
outsb
out
inc
push
jbe
inc
xchg
add
adc
jg
push
push
shrb
mov
add
jge
test
test
mov
xorb
xchg
lea
xchg
into
and
xchg
dec
sub
jg
dec
stc
inc
jno
es
popf
ljmp
mov
out
xchg
jo
sahf
movsb
nop
mov
mov
outsl
dec
or
sahf
or
mov
div
aad
push
push
rcr
shrb
dec
fldt
lret
fucomi
test
adc
jmp
jb
cmp
jns
mov
add
inc
test
push
call
sbb
and
sbb
push
jp
mov
fstpl
jmp
sub
mov
sub
push
mov
mov
daa
xor
ret
in
sbb
rcrb
xchg
mov
dec
and
ja
sbb
inc
mov
inc
test
pop
mov
mov
mov
mov
inc
mov
mov
xor
lret
or
cmpsl
movsl
shlb
rcl
sub
push
cmp
aad
inc
movsb
sub
jae
popf
or
add
or
iret
mov
dec
scas
pop
lea
inc
js
pop
or
mov
xchg
stos
push
cmp
sub
xchg
mov
lret
pop
add
daa
adc
inc
stc
or
inc
popl
negl
mov
mov
call
je
xchg
fisttps
push
mov
cmc
inc
loopne
mov
inc
mov
rcll
pop
mull
out
test
push
sbb
in
xor
out
pop
test
adc
cwtl
sbbb
fstps
fldenv
mov
cmp
fwait
adc
iret
add
jae
mov
dec
xlat
or
sbb
pop
add
mov
jecxz
push
daa
push
xchg
sub
xor
cmp
or
inc
xchg
xlat
lods
adc
cmp
mov
push
imul
jecxz
cmp
test
adc
sbb
fldenv
adc
mov
loopne
sub
sbb
lahf
aam
into
lret
mov
mov
sbb
leave
loope
sub
xchg
xchg
jp
pop
pop
sbb
add
test
daa
or
adcl
pop
adc
mov
mov
xor
xchg
adc
cmp
and
dec
lds
lods
adc
test
add
mov
or
jnp
cmc
sbb
pusha
roll
loopne
fmuls
xor
nop
dec
sub
sar
adc
xor
add
adc
cmpsb
shrb
in
cmp
call
pop
ret
movsb
xchg
subb
mov
push
sti
out
mov
push
fstl
and
push
insl
or
adc
adc
push
inc
adc
xchg
xchg
mov
xor
fimull
inc
outsb
sti
push
cmc
jg
scas
xchg
and
xor
iret
sbb
pop
xchg
push
pop
repnz
mov
ja
or
outsb
mov
mov
sbb
fwait
add
bnd
int3
stc
rorl
insl
mov
loop
outsb
imul
pop
mov
ljmp
pushf
adc
push
cmp
adc
out
inc
push
daa
ror
and
lret
jns
dec
popa
lea
mov
lock
gs
iret
icebp
cltd
ret
mov
xor
cmpsl
push
jae
jo
mov
adc
or
mov
cli
add
and
xor
dec
mov
xchg
jb
pop
sahf
xorb
cmc
cmp
push
cmp
popf
pop
push
rorb
mov
pop
jmp
aas
cmpsb
mov
aad
stc
mov
mov
push
ja
mov
inc
dec
and
fstpl
and
ja
shlb
xor
repnz
js
sbb
dec
xchg
xchg
popf
push
pop
fwait
aaa
jo
fmull
xchg
adc
jns
clc
jne
or
and
loopne
mov
jne
aas
int3
pusha
scas
pop
xchg
jb
add
mov
fmuls
sbb
test
dec
and
scas
sarb
xchg
sbb
adc
addr16
xlat
rcr
sbb
pushf
lret
inc
fs
cs
fstpt
scas
ja
push
ljmp
or
insl
int3
aas
jae
outsb
into
and
pop
out
push
aaa
sub
push
popf
and
jnp
and
popf
jno
pop
testb
in
mov
jmp
mov
lock
xchg
xor
dec
pop
mov
mov
sarb
mov
or
mov
xor
fnstenv
jns
jnp
scas
popa
sbb
lret
adc
mov
cmc
mov
sar
fs
jb
push
adc
testl
imul
jecxz
jmp
add
fnstenv
fldln2
lods
in
es
inc
fs
dec
xor
fwait
push
fldt
push
dec
sbb
orb
lahf
xchg
je
testl
mov
icebp
fnstenv
orb
loopne
inc
movsb
les
dec
jle
lahf
adc
fisttpll
js
adc
inc
adc
cmc
les
popf
cwtl
out
lods
add
and
mov
xchg
push
test
push
mov
push
jns
dec
ss
bound
dec
mov
or
sti
or
fdivl
stc
and
adc
movsb
insb
into
and
shll
pusha
int3
rorb
daa
inc
mov
out
inc
mov
repnz
lcall
pop
inc
mov
jecxz
xchg
or
inc
push
lods
psadbw
mov
leave
movsl
inc
mov
imul
pop
cmpsl
movsb
loope
sub
mov
das
aaa
hlt
and
pop
inc
or
push
adc
les
inc
adc
mul
mov
fnstcw
ja
push
pop
shll
mov
inc
test
cmpsb
stos
ljmp
lret
mov
mov
aam
or
js
fadds
test
jp
test
cmc
insb
jge
pop
dec
jge
in
rolb
cli
jle
add
mov
test
pusha
data16
pop
jo
dec
and
out
test
iret
clc
test
sub
xchg
jbe
add
aad
jge
pop
adc
jecxz
dec
xchg
mov
fnstenv
stos
fs
push
imul
in
or
sbb
jmp
lahf
sbb
adc
jmp
push
pop
stos
sbb
mov
inc
sub
and
outsl
push
jno
pop
jne
push
push
out
mov
jecxz
mov
push
lds
cltd
push
sbb
sar
orl
mov
cld
pushf
fisubrs
cmpsl
push
ja
fmul
push
jecxz
dec
sub
cmp
mov
pop
faddl
push
int3
cmp
adc
sti
in
cmpsl
add
loope
jns
mov
pop
push
adc
inc
lock
mov
jnp
stos
cltd
dec
jne
pusha
pop
pop
pop
push
popf
stos
pop
movsl
shrb
ficoml
pop
out
xor
xor
inc
cmp
dec
cwtl
je
or
aad
mov
dec
xor
stc
adc
mov
cmp
dec
imul
adc
notb
mov
xchg
adc
lahf
jge
dec
xchg
jmp
inc
es
int3
ljmp
test
imul
pop
mov
ret
hlt
mov
loope
subl
stc
add
repz
les
mov
jae
or
popf
stc
mov
mov
lcall
pop
jg
adc
lret
loop
xor
inc
lds
loop
inc
icebp
mov
inc
and
xchg
pop
cmp
lods
xchg
imul
stc
inc
xchg
jg
les
lods
mov
jp
jl
add
ret
out
dec
push
int3
jecxz
inc
stos
adc
sub
push
pop
or
in
gs
lea
insb
or
inc
aam
pushf
or
add
clc
loopne
dec
pop
iret
adc
hlt
movsl
in
mov
ret
adc
or
xor
mov
hlt
call
jne
shlb
shr
inc
jecxz
popf
stos
jp
lods
out
push
testb
jae
fnsave
mulps
push
mov
dec
inc
ret
and
dec
in
js
cs
stos
cmpsb
fcmovb
lret
lods
xchg
loope
rclb
xor
inc
sbb
adc
add
andb
jmp
dec
decb
dec
lock
lret
andb
cli
pop
out
mov
insb
pop
mov
xor
mov
je
lea
mov
mov
push
xchg
fldl
aam
push
mov
fbld
or
inc
daa
and
stos
stos
jl
push
inc
or
xor
push
xchg
filds
push
pop
and
push
fstl
cltd
cmp
sub
dec
popa
xor
jbe
repz
add
mov
mov
stos
movsl
aaa
inc
inc
and
jae
mov
jb
cmp
call
mov
cltd
sbb
and
pop
xchg
mov
cli
dec
into
cmp
pop
add
jp
and
xchg
mov
ret
addr16
iret
ret
pop
adc
cs
inc
fbstp
pop
gs
xchg
pop
xor
dec
or
shll
std
ret
aaa
add
shl
stc
scas
out
mov
cmp
daa
into
fisubrs
mov
ret
add
bound
popa
lea
popf
mov
sti
mov
hlt
popa
mov
add
sarb
rcl
mov
inc
push
or
dec
sbb
ficomps
push
push
mov
dec
xor
aam
jae
aad
psrlw
call
das
mov
lret
andb
xor
or
sub
and
inc
gs
xlat
mov
sub
enter
data16
mov
sbb
hlt
testl
xchg
cmc
mov
aaa
xchg
xor
sub
jecxz
testl
sahf
ljmp
sbb
and
lock
rcr
ja
out
int
jmp
and
jno
mov
dec
push
enter
mov
cmp
cmpsb
dec
sbb
cmp
repnz
xchg
sbb
mov
adc
sub
shlb
rcll
dec
int
popa
jno
lea
xor
fildll
pop
jae
pushf
aaa
inc
or
adc
rclb
stos
out
fadd
adc
cmpsl
mov
ljmp
jns
testl
xor
enter
gs
cli
inc
mov
cmp
rcrl
pop
js
push
lock
fidivrl
pop
push
stc
push
shrb
push
ret
or
or
pop
sbb
icebp
mov
and
arpl
inc
mov
inc
sub
int
lods
adc
mov
repz
lods
ret
outsb
jnp
and
cmp
pop
pop
and
xchg
xchg
mov
push
bnd
js
pop
adc
dec
lcall
idivb
stos
aad
jb
rorl
int
xor
mov
xchg
push
sbb
orl
inc
mov
pop
movsl
sub
xor
cwtl
sbb
subb
outsb
frstor
mov
cmpsl
push
pop
push
aad
in
fadd
js
outsl
je,pt
movb
lahf
sub
pop
loop
lret
add
orl
jp
aad
xor
cmp
pop
scas
mov
adc
fdivrp
sar
aad
cmp
sub
pop
in
scas
stos
cmpsb
mov
lods
mov
scas
sbbl
insl
xor
dec
mov
js
mov
pop
fimull
enter
pop
out
sarb
test
jmp
sub
mov
push
xor
into
xchg
push
es
int3
aas
insl
xor
mulb
test
loope
xchg
adc
pop
sbb
aam
leave
pop
sub
loope
and
pop
imul
add
or
mov
push
jge
or
ss
jge
adc
mov
outsb
aaa
mov
cmp
mov
in
test
ja
call
clc
or
es
movsb
inc
inc
xchg
push
push
stos
pusha
test
test
xchg
lds
scas
xor
shrl
in
hlt
mov
test
movsb
xchg
lcall
inc
and
jbe
cwtl
jp
sbb
xor
imul
inc
fdivrl
stc
dec
sbb
movsl
xor
mov
fdivrl
xor
fcomps
mov
mov
cmp
into
stos
je
or
shlb
ja
cmc
jne
xchg
or
sbb
cmp
lods
call
shrb
mov
dec
dec
jge
loop
jbe
push
lods
lea
lret
rcl
idiv
mov
xchg
jecxz
mov
cmp
jge
sub
enter
rcrl
dec
imul
repnz
mov
sub
xchg
dec
push
xlat
sahf
xor
xchg
fisubl
xchg
dec
stos
in
and
repnz
push
jnp
adc
jle
xchg
dec
pop
scas
rolb
xchg
or
mov
add
shlb
arpl
dec
hlt
dec
mov
bound
out
pop
iret
flds
add
pop
cmp
adc
shl
scas
mov
daa
outsl
xchg
daa
lahf
jecxz
clc
or
inc
mov
dec
mov
outsl
int3
clc
xchg
mov
jo
inc
mov
and
mov
inc
mov
add
bound
jnp
fcomps
cltd
aad
hlt
scas
inc
dec
orb
mov
push
ds
cmc
push
dec
js
popa
pusha
icebp
test
cmc
push
adc
fdivs
pop
fisubrl
mov
mov
lea
arpl
or
mov
movsl
pusha
insl
lods
sub
pop
popa
stc
xor
adc
pop
das
cmc
cmp
xchg
pushf
xchg
mov
andb
js
out
dec
add
movsb
push
sub
sbb
test
ret
jp
push
mov
mov
aaa
sbb
or
mov
cs
mov
pop
dec
icebp
je
pop
daa
pop
invd
mov
movzbl
aas
mov
popa
sub
and
hlt
add
sahf
jp
dec
mov
push
cwtl
xchg
dec
cmc
mov
sbb
stc
inc
adc
int
movsl
ja
jmp
lcall
and
into
add
into
outsl
mov
push
jns
mov
lret
pop
out
sub
mov
neg
xorl
lret
fldcw
aam
or
int
or
ret
add
push
dec
fdivrs
mov
mov
pop
or
insb
sbb
mov
jecxz,pt
in
xor
sub
pusha
sbb
xor
imul
cld
sbb
cmp
mov
lea
enter
sbb
jae
pop
fnsave
sti
lcall
enter
ja
jmp
int3
sti
mulb
fs
cmp
mov
sub
inc
pop
inc
cmp
push
jno
push
pop
adcl
lret
push
or
mov
loop
or
std
pop
mov
mov
push
mov
aam
mov
or
cmp
lods
mov
inc
mov
jb
arpl
mov
ret
dec
push
jmp
add
inc
jle
jmp
mov
dec
dec
cmp
add
outsl
shlb
ficompl
push
mov
xchg
loopne
sahf
sub
jg
imul
lret
pusha
stos
incb
hlt
lds
mov
jo
cmp
out
push
mov
push
outsb
inc
aad
roll
and
sbbl
push
stc
push
sbb
pop
and
aaa
ret
sub
fcoml
repz
and
xchg
lock
rclb
adc
hlt
xchg
jg
jbe
cltd
sbb
xchg
mov
xlat
or
jne
xchg
pop
cmc
adc
push
and
push
push
in
and
and
ljmp
fwait
and
mov
xchg
outsb
fstl
or
loopne
js
or
stc
sub
pop
into
in
loope
adc
ds
and
jb
pop
add
cwtl
shll
sub
bound
stos
cli
lds
stos
jmp
sub
lret
push
fcompl
outsb
sti
or
pushf
add
sbb
in
dec
xorl
rcll
jp
fsubrp
das
call
lret
addb
and
ret
push
inc
aam
push
mov
or
push
push
cwtl
dec
test
dec
fcom
xor
fdivrl
add
xchg
cmc
mov
test
lods
dec
jl
fdivrs
jg
cwtl
add
push
dec
cli
add
das
jne
push
aas
mov
mov
fcompl
xchg
scas
dec
aas
adcl
adcl
lods
repnz
pop
fdivl
popa
jmp
std
or
push
fdivr
or
mov
popa
pushf
loop
lret
push
push
int3
xor
sbb
xorl
lret
cmpsl
and
lret
sbb
sbbb
cmp
push
out
rorb
pop
xchg
mov
dec
sbb
dec
mov
dec
cmp
or
cs
fwait
push
cmpl
movsl
fisttpll
adc
mov
jnp
adc
mov
out
clc
sub
rorb
fwait
mov
push
jg
fwait
hlt
imul
jg
jne
push
inc
xchg
ret
mov
mov
insl
ljmp
aad
in
inc
sub
push
sbb
and
addr16
in
push
mov
push
and
cld
sbb
pop
out
mov
push
cmpsb
and
outsl
jp
push
outsl
repnz
sub
push
adc
push
pop
rorl
mov
xchg
lds
cmpsl
movb
mov
jp
jp
xchg
idivl
or
test
xorl
sbb
mov
into
nop
mov
cltd
or
xchg
mov
or
inc
or
or
sbbl
jbe
cmp
or
sti
xor
jne
sbb
xor
or
sti
insl
cmc
out
stc
in
das
add
lods
pop
cmp
add
jae
scas
lods
daa
push
int
cmc
rcrl
xchg
sub
push
mov
cwtl
push
add
mov
cmp
out
jb
pop
pcmpeqw
jns
hlt
mov
or
push
int3
inc
jb
xchg
bound
push
jmp
shlb
inc
lods
inc
aas
pop
mov
dec
arpl
dec
or
mov
in
lds
fs
jne
mov
stc
mov
cli
pushf
leave
insl
jbe
adc
and
jmp
mov
xchg
sub
pop
mov
add
mov
mov
je
xchg
pusha
pop
stos
add
insb
movsb
or
jmp
inc
jmp
cmpsb
ja
push
cmpl
leave
pushf
push
out
or
das
shlb
adc
push
cmc
pop
pusha
push
mov
xor
push
sahf
dec
ficomps
cli
xor
outsl
repz
movsb
pop
loop
sub
cmpb
pop
ud2
cld
xchg
aaa
ret
in
mov
push
into
xchg
adc
xor
insb
xchg
or
std
xor
push
test
addb
mov
mov
fnstcw
pop
icebp
pop
imul
adc
adc
cli
bound
mov
clc
push
fwait
mov
push
xchg
or
rol
dec
and
leave
aas
ljmp
popf
xchg
and
dec
or
jo
decb
xor
xor
call
mov
dec
addl
bound
das
in
adc
pop
out
mov
pop
loopne
xor
in
xor
mov
enter
adc
jb
sbb
scas
in
add
enter
pusha
push
das
cmovae
jge
out
insl
adc
imul
out
mov
and
es
in
mov
adc
popa
pop
mov
mov
push
call
and
out
fiadds
sbb
sbb
dec
push
test
xor
rorb
pusha
filds
stos
shr
repz
call
adc
xchg
mov
adc
or
sub
movsl
test
mov
popa
cld
aas
test
fs
mov
repnz
inc
mov
dec
mov
cs
dec
xor
jno
mov
inc
mov
fstl
cmpsl
fwait
mov
shl
ret
in
jmp
xchg
cwtl
gs
in
fldenv
push
adc
mov
inc
xchg
xchg
data16
xor
ret
mov
pop
mov
repnz
cld
popf
into
sbb
and
jp
ja
dec
mov
xlat
int
pop
xchg
dec
sub
pop
cmp
out
lret
andl
mov
sbb
in
scas
mov
mov
sbb
jge
xor
pusha
call
cmp
out
scas
mov
add
adc
mov
push
enter
jmp
fiaddl
repnz
lock
sbb
popf
ret
add
loop
add
xchg
lods
mulb
push
xchg
addr16
cmc
adc
les
mov
iret
jmp
div
movsb
xor
enter
insl
cmpb
xchg
scas
jb
pop
cmp
add
dec
jne
fnsave
mov
and
mov
sbb
cmp
or
ljmp
inc
push
xor
mov
cmpsb
gs
pop
dec
add
aam
mov
daa
test
out
es
push
lods
movsl
mov
push
inc
insl
insl
dec
adcl
scas
xchg
mov
push
insb
mov
or
xchg
ret
adc
cld
mov
notl
pop
jecxz
sahf
data16
scas
in
push
add
cwtl
dec
or
sbbb
sbb
mov
fists
ljmp
lods
rcll
aaa
scas
add
pop
xchg
sahf
xchg
mov
inc
cmp
pop
sub
sub
or
pop
pop
xor
adc
mov
test
sub
loop
and
cmc
shlb
adc
add
sub
jecxz
mov
xchg
or
adc
call
pop
xor
iret
adc
jnp
out
leave
mov
orl
lahf
clc
imul
ror
pusha
ss
pop
pop
or
arpl
jbe
aad
pop
add
sarl
into
jp
les
and
cmpsl
cmpsl
sub
jne
aaa
mov
clc
shl
mov
mov
loopne
imull
xchg
out
pop
xor
sbb
stos
imul
ss
imul
xchg
clc
call
jmp
faddp
push
iret
xlat
add
dec
mov
jle
pop
popa
fprem
subb
testb
push
aas
xor
pop
jmp
mov
dec
rcl
mov
or
ss
jl
loope
dec
das
mov
cmp
xor
lods
sbb
loopne
lods
push
inc
xchg
jge
inc
mov
jge
nop
push
jecxz
pop
lods
sub
inc
and
shll
sbb
mov
jle
and
jmp
cmp
or
fsubl
pop
les
xchg
jo
ret
insl
mov
inc
pop
push
mov
mov
aaa
icebp
sub
sub
add
popa
push
cltd
ds
fisubrl
outsb
repz
mov
cmp
andb
dec
cmpsl
or
mov
loope
leave
cli
mov
rcrb
xchg
jno
sub
sti
jge
je
mov
movsb
outsl
push
lcall
xchg
mov
icebp
pop
sbb
adc
lock
repz
lahf
inc
fldl
push
orb
cmp
mov
into
ss
mov
sarb
pushf
xor
pusha
xchg
ret
lea
xor
icebp
outsb
inc
jmp
mov
sbb
lcall
mov
add
cmp
movsl
loop
jbe
mov
adc
in
xchg
inc
xlat
call
mov
jae
mov
decl
shld
rorl
ret
or
lea
jg
sub
out
aam
push
clc
pop
push
mov
inc
pop
mov
ja
sbb
or
ja
test
or
dec
jecxz
leave
or
lret
movsb
xchg
dec
push
dec
sub
js
or
movsl
aad
jo
xor
fistpl
out
lods
mov
cmpsl
in
test
popa
cs
sahf
lret
cmp
test
fwait
test
mov
adc
mov
mov
pop
shlb
dec
insl
add
sahf
int3
in
pop
xlat
shlb
sbb
mov
enter
push
hlt
sahf
test
out
xchg
mov
pop
mov
aam
in
xor
in
mov
push
int
cmp
and
cltd
imul
mov
ss
xor
pop
dec
xchg
int3
addl
cmp
sbb
data16
lahf
xor
sbb
scas
and
sub
stc
and
mov
flds
cwtl
add
in
xor
jbe
roll
icebp
push
push
cmp
or
scas
or
aad
dec
pop
pop
out
sbb
iret
repnz
test
je
push
shr
xchg
cmpb
push
cmp
push
jmp
std
mov
mov
xor
jle
push
rorb
cwtl
jne
das
lret
lahf
cmpsl
pop
push
push
add
add
fbld
mov
fmull
jne
pop
mov
dec
imul
mov
pop
xlat
cmp
xchg
mov
sub
testb
hlt
arpl
rorb
or
es
lcall
stc
xchg
call
xor
push
push
dec
and
ret
inc
out
das
cmc
and
jnp
mov
jecxz
int
rorb
addr16
sahf
jmp
std
movsl
mov
shlb
int
add
mov
fldenv
mov
jbe
jle
inc
cld
rcrb
fs
movsl
push
mov
lcall
mov
mov
jecxz
unpcklps
fnstsw
test
rcll
mov
test
stos
arpl
jns
test
inc
inc
in
push
mov
mov
mov
mov
cmp
or
jo
jp
outsb
sbb
out
add
sti
pop
js
in
not
popa
arpl
mov
push
daa
aad
stc
sahf
jo
test
lahf
test
aas
xlat
adc
in
movsl
lea
cmp
mov
jle
icebp
xchg
std
cli
mov
mov
cmp
pop
inc
int3
mov
sub
cmp
popa
or
pop
adc
ljmp
add
mov
aas
dec
adc
cs
jle
stos
cld
aad
icebp
jnp
ficoms
pop
mov
lret
notb
jmp
test
sbb
jae
add
jns
cwtl
out
shr
cmp
cli
dec
mov
mov
icebp
mov
jecxz
sbb
jbe
cmc
sbb
dec
stos
pop
out
inc
fidivl
mov
add
das
mov
sahf
pop
ss
hlt
sub
int3
test
sub
clc
push
repz
scas
or
jmp
xchg
and
push
inc
or
dec
stc
jno,pt
sub
orb
push
bound
dec
aam
sub
mov
xor
pop
inc
aam
std
jo
lods
gs
imul
jae
insl
and
dec
sub
cmpsl
mov
jl
adc
adc
in
sub
mov
adc
mov
dec
sbb
adc
aam
in
pop
dec
or
mov
push
loopne
movsl
imul
lock
jp
sub
fwait
sbb
bound
es
pop
clc
into
mov
mov
js
and
dec
ds
shl
enter
dec
test
cltd
decl
lea
mov
in
inc
xchg
data16
fsubl
mov
jecxz
aam
fsin
enter
mov
shrb
std
mov
das
cwtl
cs
xchg
cs
outsl
std
or
push
nop
enter
out
add
or
pop
inc
fistpl
and
jne
mov
lock
lret
out
fnstenv
inc
lock
ja
xor
push
sbb
pop
pop
mov
and
mov
loope
adc
mov
mov
es
and
lcall
mov
pop
mov
mov
in
pop
popa
inc
ja
insl
in
or
mov
adc
pop
add
cmc
aad
jl
sti
adc
mov
mov
les
scas
lock
in
jnp
and
lret
enter
scas
mov
notb
push
icebp
dec
stos
mov
pop
push
mov
add
xor
mov
sbb
nop
andl
xor
ljmp
xchg
xchg
in
push
decb
pop
add
pop
outsl
mov
in
jne
push
aaa
sbb
scas
lcall
inc
adc
shrl
mov
dec
xchg
lcall
sbb
lcall
insl
js
test
sub
cmp
dec
xorl
in
aad
lahf
lcall
shll
mov
push
call
mov
inc
and
in
pop
scas
sbb
ret
push
mov
andl
push
jbe
arpl
dec
iret
mov
xor
xor
or
sub
jecxz
mov
mov
repnz
pop
aam
adc
sti
sbb
lahf
sub
fcomps
xchg
jne
stc
pop
mov
clc
jle
not
test
mov
imul
inc
inc
sub
and
pop
xchg
repz
cmp
cmp
cltd
cmp
sbb
jne
push
mov
je
test
fildll
adc
and
clc
pop
aam
lahf
cmpsl
xchg
popa
jb
jmp
inc
dec
out
mov
xorl
daa
xchg
sub
insl
adc
into
enter
dec
mov
xlat
jb
data16
inc
push
or
es
jecxz
or
bound
leave
test
arpl
addr16
das
gs
push
pop
fidivrs
xor
test
sbb
pop
push
int
push
and
jae
sbbb
clc
adc
adc
mov
jns
call
push
aas
xor
aas
xchg
jo
mov
cmp
test
ret
inc
push
movsl
fwait
inc
ja
sbb
imul
call
pop
test
in
cmpb
mov
mov
std
sbb
inc
xor
sub
jb
insb
aad
xor
dec
popa
ret
inc
jns
hlt
xor
popf
cmpsl
cld
mov
adc
loop
movntq
es
lock
cmpsl
jae
cli
dec
ret
hlt
out
mov
or
out
cmp
cmpsl
mov
push
popa
mov
xor
pop
pop
mov
cmp
xor
mov
mov
cltd
insb
fsts
sub
das
lret
inc
push
dec
mov
mov
push
inc
daa
shrb
sub
shll
jmp
fmulp
mov
movsb
push
adc
sub
lret
dec
imul
sub
inc
popa
cld
mov
mov
imul
iret
xchg
add
enter
mov
push
sbb
pop
out
add
fdivs
imul
xchg
in
sub
or
xor
push
push
and
lahf
mov
scas
sub
mov
lods
shll
sahf
lods
sub
clc
mov
rcrb
cmp
and
sbb
inc
cmp
scas
lods
adc
mov
xchg
jle
lret
adc
mov
sbbl
in
fdivl
or
out
jle
and
xor
cmpsl
mov
cltd
imul
popa
inc
inc
stos
lods
imul
sbb
out
jae
hlt
lahf
inc
mov
dec
mov
inc
clc
in
fwait
pop
pop
aam
and
push
pop
sub
mov
and
out
int3
mov
repnz
int
jne
xchg
stc
popf
sti
push
loopne
push
jmp
int3
pop
add
leave
je
mov
mov
add
scas
inc
mov
push
cmp
rorl
insl
aas
ret
push
es
pop
jo
scas
lods
imul
fistpll
mov
cmc
mov
pop
orl
push
popa
outsl
dec
arpl
dec
adc
data16
sbb
call
fwait
fs
popf
sbb
dec
pop
inc
fistpl
cmpsb
adc
in
xchg
adc
sarl
fwait
mov
inc
dec
mov
icebp
sbb
loope
loop
andb
jne
push
das
arpl
mov
push
loop
jnp
or
fisubrs
jae
cs
mov
mov
and
sarb
insb
xchg
adc
psrad
cmp
aam
fwait
insl
jo
fistpll
sbb
aaa
add
mov
and
insb
ljmp
sbb
sahf
cmpsl
imul
mov
scas
or
sbb
dec
dec
push
inc
lahf
adc
scas
push
sbb
js
jmp
lret
xor
dec
rcrb
pop
int
fistl
push
lcall
and
in
ljmp
fmuls
push
data16
mov
divb
adc
aas
sti
mov
stos
rorl
mov
das
mov
mov
and
mov
movsb
sti
frstor
pop
dec
stos
repz
sub
lds
xchg
inc
jmp
add
sub
iret
adc
stos
fldenv
add
xchg
int3
inc
icebp
leave
enter
jne
xchg
mov
out
les
js
jns
mov
jecxz
imulb
sti
dec
inc
cmpsl
jmp
pop
inc
jno
hlt
push
popf
outsb
cwtl
or
jae
xor
or
inc
cltd
rolb
mov
jo
mov
je
push
fisttpll
cltd
jns
sub
bound
hlt
test
and
sbb
jnp
orb
in
jg
inc
or
lods
cmpsb
push
scas
repnz
iret
sub
xor
mov
arpl
lods
xchg
xchg
pop
mov
push
sub
addr16
iret
sub
adc
outsb
mov
xchg
or
js
enter
int3
or
dec
lret
mov
lret
dec
out
cli
mov
or
push
das
sti
imul
mov
rclb
enter
in
inc
push
out
addr16
adc
adc
jl
les
data16
ret
sub
push
ret
mov
insb
inc
dec
cltd
arpl
xchg
into
push
push
cmpsb
dec
sbb
sti
xor
cli
push
push
inc
xor
ds
fwait
in
xchg
scas
fmull
cmp
lcall
test
push
aad
sub
push
sub
cmpsb
jmp
xchg
add
jo
xchg
xor
inc
and
xchg
xchg
aam
xor
das
xor
mov
adc
cmp
inc
xchg
jne
into
inc
mov
jl
dec
stos
stos
stos
add
repz
cli
inc
fldenv
fwait
cwtl
mov
push
mulb
pushf
jge
push
shr
fcomps
mov
mov
fmull
cmp
aas
push
xchg
push
neg
mov
stos
sub
sbb
mov
inc
add
int3
mov
fsubl
xor
mov
scas
add
popf
jecxz
or
mov
xor
cmp
hlt
jecxz
std
adc
pop
sahf
test
cmp
enter
push
jg
xorl
pop
mov
sar
pop
cs
mov
in
sbb
stos
pop
enter
sbb
js
ret
xor
es
test
clc
jno
stc
lahf
sbb
add
push
clc
mov
fidivs
sub
popf
pop
pop
dec
insl
inc
push
daa
dec
pop
outsl
and
subl
daa
addr16
mov
les
or
push
xchg
clc
cmp
std
dec
cmp
fstpl
ret
imul
jl
mov
repnz
cmc
jmp
inc
insl
int3
xor
dec
clc
lret
adc
or
dec
sub
shrl
jb
pusha
cmp
out
push
scas
pop
sahf
dec
adc
push
cmp
and
xchg
stos
jno
out
mov
lret
sti
and
sub
les
sub
sub
movsl
jne
mov
cld
faddl
iret
sti
mov
push
mov
mov
test
cmc
out
cmp
xor
sbb
repnz
loop
outsl
sbb
addr16
lret
mov
icebp
push
sti
test
or
jnp
jg
sub
adc
fdivp
fstpt
xor
lods
add
xor
shrl
xlat
xchg
lods
push
push
repnz
popf
pop
and
cmp
rcrl
mov
xor
es
mov
inc
imul
adc
xor
std
sahf
aad
jl
leave
adc
jne
jns
add
pushf
xchg
popf
fucom
mov
loope
and
insl
mov
aas
mov
mov
popf
cmp
dec
gs
push
out
push
xor
ficoml
dec
mov
sub
cmp
xor
adc
push
adc
fiaddl
fsubrs
xchg
pop
cmpsb
push
and
out
and
dec
push
or
inc
movsl
int
jbe
or
mov
or
test
xor
jbe
inc
sahf
xchg
cli
fwait
pop
add
movl
cs
ficomps
enter
pop
add
popf
mov
pop
pop
pusha
xor
xor
sbb
dec
pop
and
stos
push
or
xor
xchg
repz
push
mov
xchg
leave
in
xor
sub
in
add
repnz
mov
and
mov
stc
daa
dec
fidivrl
sub
cmp
pop
dec
push
fistl
pushf
mov
jle
repnz
push
enter
pop
fs
stos
dec
pop
pop
pop
push
lea
stos
hlt
ret
repnz
mov
cld
sub
jg
jne
pop
and
cmpsl
add
roll
xchg
aas
inc
mov
or
or
jno
lock
push
sub
jg
lret
xchg
cmp
cmpsb
mov
or
mov
push
ss
leave
sahf
in
jb
sbb
pusha
andl
mov
mov
jmp
loop
insl
fcomi
lods
and
jnp
pop
in
mov
popa
cmp
in
mov
ljmp
add
into
cmc
inc
mov
and
jmp
iret
cltd
lods
mov
sbb
or
xor
cmp
xlat
popa
add
dec
stos
dec
mov
pop
nop
lahf
sbb
mov
pop
adc
xchg
divb
mov
add
ficomps
mov
js
roll
jb
cmp
loope
inc
ror
xchg
icebp
shlb
punpckhwd
adc
fwait
push
adc
mov
fdivs
or
stos
inc
mov
or
sbb
push
mov
push
fildl
xor
mov
mov
xchg
lea
fbld
cmp
sti
outsl
push
add
push
push
xor
sub
icebp
leave
sbb
add
daa
rcrl
add
push
pop
jp
xchg
xchg
fs
out
mov
inc
pusha
cmp
push
icebp
mov
loopne
or
mov
sbb
jae
xchg
test
ret
stc
add
cwtl
and
adc
clc
sti
movsb
mov
sub
jne
xchg
and
loopne
lds
mov
fstpt
stos
jno
jns
mov
aaa
sbbl
fsubs
out
ljmp
pop
xchg
add
xchg
inc
repnz
subb
out
enter
imul
xor
sbbb
xchg
dec
mov
repnz
add
sbb
mov
inc
into
xor
adc
mov
loope
out
mov
lods
pusha
xchg
dec
insb
mov
test
dec
sub
test
scas
pusha
pop
xor
or
lods
cmp
xchg
loop
cld
leave
xchg
cmp
xor
cli
shrb
add
push
add
int
fwait
adc
in
add
in
popf
stos
test
imul
push
push
mov
enter
in
cmp
fdiv
fnstenv
push
insb
add
xchg
fs
push
lcall
outsl
into
sub
xchg
ja
loop
mov
add
jp
sti
xor
xor
fnsave
loope
popf
xchg
jae
sub
or
rclb
and
in
int3
mov
inc
mov
push
loop
adcb
dec
sbb
nop
dec
loop
loope
add
stos
fadds
shl
movsb
into
cmp
sub
gs
icebp
cld
cltd
mov
mov
call
out
or
sti
addl
roll
int
adc
xor
and
in
cmp
xor
xchg
nop
push
and
jmp
in
scas
xor
subl
icebp
aad
sub
fidivrl
inc
jp
pop
sahf
repz
dec
mov
or
sub
dec
imul
loope
and
aas
je
fcomps
int
xchg
rcll
sbb
jmp
push
loope
in
xorb
adc
icebp
imul
mov
ja
mov
push
lahf
lock
cmp
into
pop
xchg
ret
scas
je
pusha
call
das
in
cwtl
mov
push
jnp
push
mov
or
pop
jo
shll
repz
popa
mov
rcrl
xchg
inc
out
inc
sbb
or
mov
pusha
ja
sub
or
leave
jne
mov
icebp
dec
sbb
push
jmp
fisubl
add
push
dec
test
enter
mov
jmp
jno
fucom
sub
push
or
pop
mov
inc
rolb
clc
mov
std
mov
jmp
and
xor
xchg
outsl
adc
rorl
mov
push
or
ja
xchg
push
jbe
in
xor
adc
mov
loop
dec
add
cmp
icebp
xlat
out
movsb
mov
pop
xchg
cmp
mov
xlat
lods
push
dec
lods
loopne
add
ret
or
jecxz
fsubrp
test
ss
aam
into
test
fmul
mov
mov
jg
and
inc
pop
push
sbb
stos
sub
inc
adc
sub
insb
sub
xlat
out
xchg
mov
jno
push
push
pop
out
out
and
test
out
bound
popa
fcoms
cwtl
loop
fs
repz
cmpsb
add
pop
adc
scas
outsb
enter
cli
pop
lods
xchg
push
repz
cmc
mov
jo
dec
jl
std
sub
fxtract
js
clc
shll
mov
rol
adc
jno
or
jbe
mov
cli
add
ret
xchg
lcall
and
out
mov
mov
or
sub
les
cwtl
nop
push
repnz
jge
lcall
sub
dec
inc
test
ficoms
das
sbb
andb
das
xor
mov
data16
in
mov
pusha
je
add
jecxz
inc
cmp
mov
sbb
into
adc
mov
aam
xor
pop
repnz
xchg
out
je
mov
bound
jl
enter
xchg
inc
orl
nop
or
cmp
sub
sbb
xchg
mov
xor
scas
pushf
xchg
xor
imul
lahf
adc
andl
mov
pop
xchg
mov
daa
cmp
aas
dec
xor
repz
sub
test
inc
int3
dec
mov
stc
aas
lods
sbb
scas
mov
lcall
push
pop
sarl
lcall
inc
jge
repnz
mov
pop
jmp
mov
dec
pop
ljmp
xchg
movups
dec
push
xchg
xchg
xor
sbb
add
sub
xchg
mov
out
lods
jo
aaa
xor
dec
xlat
ret
sahf
js
inc
rcrl
fbld
push
fldl
jp
shll
arpl
push
js
outsl
in
roll
outsb
shll
aas
push
mov
popf
dec
xlat
mov
sub
xor
or
xor
insb
add
bound
add
xor
inc
clc
inc
or
enter
xor
roll
inc
mov
sub
dec
sbb
arpl
popf
pop
jo
stos
jbe
fildl
loop
test
js
dec
mov
arpl
inc
cmpsb
aam
fidivrs
push
lcall
mov
jb
scas
psubsb
mov
push
fldl
cmpsb
xor
out
inc
icebp
xchg
push
and
mov
push
or
xor
nop
test
push
mov
push
sbb
rcll
adc
out
push
xchg
sbb
and
ja
movsl
mov
stos
cmpsl
mov
jmp
aam
insl
je
sub
enter
pop
inc
add
push
inc
xor
pop
insl
mov
xor
stc
pop
jl
sub
popw
neg
test
data16
cmp
loope
cmpsb
mov
insl
test
sub
xor
xchg
sbb
cli
repnz
mov
or
jge
dec
xchg
scas
mov
xchg
divb
adc
sub
fisubs
push
clc
sbb
lret
and
insb
cmp
inc
sbb
in
add
int
sub
sub
call
mov
scas
add
xchg
mov
pop
pop
cmc
jns
xor
lret
pop
xchg
sub
push
ds
or
inc
sbb
sub
ja
mov
dec
pushf
mov
js
xchg
jb
loopne
test
cwtl
clc
repnz
pop
mov
cmp
dec
loope
cli
aam
fdivs
cwtl
jae
push
dec
pop
scas
dec
imul
ret
sbb
dec
mov
inc
mov
aaa
mov
mov
fcmove
adc
mov
push
in
or
inc
cmp
pop
mov
add
jno
scas
mov
js
mov
loope
jno
xchg
sub
stc
popf
adc
subb
jo
movsb
push
out
sbb
sub
mov
adc
loop
jg
add
xchg
sbb
int3
push
stos
sub
pop
movsb
mov
dec
push
fnsave
or
test
mov
mov
xlat
das
xlat
jbe
push
pop
mov
pop
inc
mov
mov
aas
mov
iret
or
and
cmp
mov
jl
inc
sahf
push
lods
sub
mov
cmpsl
pop
add
fnstsw
push
stos
xchg
jo
pop
sarl
xor
adc
enter
dec
cltd
int
loopne
data16
das
and
jb
nop
and
mov
mov
pop
hlt
pop
es
xor
push
out
jae
lods
cli
push
dec
lds
test
scas
and
lock
pop
lahf
jno
lods
addb
inc
xlat
cli
add
fisubs
js
or
mov
test
add
xor
cmp
lock
fwait
lock
sub
mov
xchg
inc
ret
mov
dec
popa
imul
pop
mov
out
mov
scas
sbb
lret
mov
gs
test
stos
dec
mov
inc
jnp
add
loope
test
outsb
cltd
push
mov
and
adcl
push
xchg
mov
mov
ja
repz
jno
ror
ljmp
push
dec
mov
add
es
add
sar
in
insb
ret
shr
mov
mov
insl
std
cmp
inc
inc
stc
imul
in
je
mov
sub
out
popa
in
cmpsl
ds
pop
mov
dec
push
adc
mov
sbb
xor
pop
sti
fdivrs
add
sbb
in
pop
adc
loop
xlat
lret
pop
and
xchg
push
cmpsl
out
jl
push
xchg
inc
push
test
mov
stos
iret
mov
pop
push
sbb
call
sub
mov
ret
popf
stc
sti
mov
or
orb
push
pushf
js
cmpsl
sahf
ret
cmp
mov
andb
jge
stos
fcmovnu
xchg
addb
mov
ret
or
xor
mov
sub
jae
repnz
roll
mov
inc
pop
fcomps
popf
fsubp
fisubs
cli
rcrl
mull
mov
rorb
mov
push
sbb
xchg
hlt
cmc
jle
fwait
xchg
arpl
mov
jo
xor
ds
pop
jl
sbb
lcall
sahf
movsl
scas
xor
push
jg
xorl
xor
mov
mov
loope
jl
fwait
mov
and
test
xchg
icebp
mov
pushf
push
or
cli
pop
test
or
je
notl
fnstcw
std
cwtl
adc
sub
xor
loop
push
xor
sub
movsl
jno
cltd
fcmovbe
xchg
shr
popa
pop
insl
movsb
pusha
shl
rcrb
and
in
pop
repnz
mov
icebp
adc
xchg
mov
outsl
add
push
int3
xchg
in
or
push
into
sub
push
repz
out
xchg
mov
add
mov
insb
out
push
add
enter
cwtl
rol
popa
imul
and
xchg
imul
das
push
hlt
mov
cmp
hlt
cmc
popl
sub
cwtl
pop
insb
add
dec
or
faddl
mov
xchg
and
mov
xor
and
cmp
lods
mov
loopne
dec
jb
push
lret
aas
out
inc
pushf
adc
outsl
xchg
out
lds
popa
mov
mov
mov
sbb
jbe
ret
push
mov
cli
mov
dec
mov
das
jae
mov
div
dec
dec
pop
add
std
jmp
xchg
jne
cld
lret
or
icebp
rcrl
stc
jae
addb
push
shlb
iret
cltd
mov
push
mov
add
inc
in
nop
xchg
jnp
dec
cli
rclb
inc
test
stc
push
push
in
xor
popa
mov
xchg
lock
lods
mov
xchg
cmp
sub
push
mov
notb
lea
xchg
inc
orb
xchg
lods
pop
nop
jp
mov
or
xchg
pop
jmp
cmp
inc
xchg
lret
ss
nop
and
outsb
or
pop
and
push
cs
add
mov
sbb
insb
int3
mov
xchg
stos
and
sub
cmp
add
test
lods
pop
mov
dec
cmp
js
mov
sub
in
insl
ret
movsb
cltd
bound
cmpsl
jae
pushf
and
stos
cmp
mov
icebp
add
xlat
testb
inc
das
inc
xchg
adc
jge
stc
cmpl
fs
aad
and
or
movsb
rorl
repnz
call
fs
sbbb
mov
mov
fxch
lret
sub
dec
sahf
mov
loopne
loop
adc
or
mov
out
rolb
les
imul
into
sub
repnz
daa
mov
xchg
mov
xor
arpl
clc
xchg
inc
dec
xor
adc
jnp
movsl
and
pop
lcall
mov
pop
cmp
cmp
rcll
add
out
mov
lods
dec
rep
aas
test
mov
push
mov
cli
jns
cltd
jle
fadds
aas
fwait
mov
push
mov
mov
in
imul
xchg
xchg
popf
and
cld
repnz
add
bound
pop
aam
cmp
mov
mov
in
sub
into
pop
push
xor
aas
imul
mov
jne
xor
iret
dec
adc
lock
shl
cwtl
mov
push
xlat
out
or
inc
push
fnstcw
cmp
xchg
jne
jp,pn
lods
in
scas
int3
stc
dec
cmc
lea
mov
add
insl
jmp
ret
stos
andl
movsl
into
add
mov
pop
mov
jmpw
jo
mov
into
shll
pop
bound
cld
push
fisttpll
adc
enter
mov
add
icebp
pop
mov
rorb
mov
icebp
into
insl
mov
jle
xchg
jo
jmp
sub
outsl
sub
xchg
ljmp
mov
aas
mov
test
int3
scas
inc
fwait
and
dec
fs
push
pusha
gs
xor
jg
cmp
movsl
jae
gs
in
mov
bound
xchg
arpl
int3
add
popa
pop
fiaddl
sbb
pusha
or
jo
inc
std
mov
cld
dec
lock
loopne
sahf
repnz
shrl
loopne
sub
das
sbb
jne
mulps
andb
pop
adc
pusha
cmp
or
stc
repz
roll
mov
inc
pop
or
cli
adc
rcrl
aas
lret
dec
hlt
mov
jbe
cmc
fs
sbb
notl
pop
es
cltd
mov
hlt
add
xor
popa
ja
rcll
add
xlat
dec
mov
jge
ret
add
mov
ss
adc
cs
jecxz
push
lods
xchg
lcall
test
xor
loop
mov
push
mov
test
loopne
ret
xor
jl
mov
mov
data16
sbb
jge
or
mov
jno
ds
lret
aad
mov
or
std
sahf
sti
imul
cmp
adc
jne
and
adc
mov
jbe
jp
inc
jle
dec
movsb
push
add
add
and
jg
cmp
adc
clc
mov
nop
pop
popf
mov
or
dec
fimuls
mov
xchg
push
mov
imul
fwait
xor
adc
scas
xchg
std
stos
es
or
mov
js
or
mov
cmpsb
pop
push
iret
mov
add
loop
sub
jmp
in
xor
into
pop
sub
jo
mov
jns
mov
dec
pushf
sbbb
cmpsl
cmp
rcl
lret
lret
xchg
movsb
in
jge
add
xchg
sbb
adc
xlat
mov
fistps
pop
xchg
mov
in
iret
pop
mov
dec
pop
call
sbb
repz
je
out
aas
iret
xlat
xchg
sbb
adc
jmp
and
data16
jle
gs
xchg
xchg
jmp
inc
test
fmuls
jae
je
mov
lcall
ss
mov
push
xor
cmp
iret
int
dec
in
sub
gs
add
sti
fsubl
out
mull
or
mov
and
shr
lods
mov
add
sbb
call
add
int
into
xchg
mov
push
sbb
adc
ss
adc
push
lahf
mov
imul
sbb
loop
iret
clc
pop
out
ficoms
fwait
insb
mov
dec
inc
xchg
inc
mov
sbb
sbb
and
aas
add
in
mov
pusha
icebp
sar
jne
inc
pop
jne
jbe
outsb
cmp
adcl
and
mov
adc
lods
mov
cmpsb
fadd
mov
mov
outsb
dec
shll
cmp
or
mov
enter
pop
and
cwtl
mov
iret
imul
sub
dec
sbb
je
call
jmp
push
aam
shlb
loopne
std
pop
or
push
mov
add
sub
inc
scas
adc
mov
lret
mov
dec
fcmove
mov
mov
sbb
sub
test
push
xchg
jge
rolb
jle
dec
addr16
mov
sub
jb
push
push
jno
pop
hlt
jno
fidivs
adc
jnp
addr16
pop
stc
sub
std
popa
lahf
dec
bound
mov
sbb
mov
xchg
incl
ljmp
int
ljmp
pusha
sub
or
dec
push
aad
sbb
mov
add
mov
mov
inc
sub
sub
test
adc
sbb
addr16
cmc
or
jmp
or
hlt
dec
inc
xchg
imul
pop
jecxz
sbb
repnz
cmp
pop
rcr
cmp
setl
arpl
sub
insb
outsl
add
mov
adc
mov
sbb
jle
cli
shrb
dec
mov
sub
jno
out
jo
xlat
pushf
fldcw
cmp
xchg
mov
sarl
push
sub
lods
callw
add
icebp
rcrl
mov
mov
sub
inc
adc
int
push
fisttpl
data16
and
cmp
mov
inc
insb
loopne
and
movsl
inc
bound
inc
or
insl
xor
xchg
imul
mov
lahf
mov
sub
mov
lret
lahf
movsb
pop
cltd
mov
or
stc
pop
xchg
out
sub
cs
std
pop
cld
push
pop
push
in
inc
or
inc
js
xorl
jle
lea
jae
adc
pop
ss
pop
adc
xor
mov
lds
mov
insb
mov
mov
out
push
or
pushf
cmp
add
rep
sbb
test
shlb
negb
lea
sbb
push
mov
push
push
push
subl
mov
pmaxub
cmp
iret
adc
inc
rcr
repz
add
dec
pop
daa
dec
fcomps
faddl
dec
outsb
call
push
aam
dec
insl
fcomps
in
pop
lcall
mov
test
and
ud1
loope
test
jo
inc
mov
pop
fldenv
jmp
ds
js
jl
push
sub
das
sarb
ret
dec
add
dec
ret
mov
and
or
jg
out
dec
pop
fiadds
test
push
notl
mov
cmpsb
inc
push
add
ja
jnp,pn
xor
dec
test
cld
mov
push
int3
test
pop
cs
sti
inc
popf
adc
mov
nop
movl
es
add
imul
gs
jl
notb
add
mov
nop
int
stc
sub
sbb
push
add
push
clc
jae
call
shll
stos
or
mov
jmp
mov
ljmp
pop
adc
lds
xor
xchg
cmp
fists
cmpsb
jecxz
out
lret
or
and
mov
or
push
in
xchg
adc
inc
sub
lods
pushf
push
xchg
dec
in
in
pop
jmp
mov
cmp
inc
movsb
jbe
out
add
stos
std
movb
inc
daa
mov
stc
cld
jb
ss
push
xchg
push
out
mov
mov
divl
dec
sbbb
mov
mov
je
notb
es
push
fstpl
jb
sub
mov
inc
and
inc
fmull
and
mov
inc
add
jo
mov
inc
or
enter
lahf
movsb
or
arpl
xchg
dec
test
sahf
push
call
push
repnz
inc
sbb
cmp
dec
sbb
jg
add
mov
cld
lahf
outsl
xor
mov
test
data16
rcrb
gs
inc
sbb
pop
cmpl
sub
push
adc
and
repz
push
push
sbb
aas
xchg
cs
sti
mov
es
jl
shll
aam
mov
dec
adc
jge
dec
xor
mov
xorl
mov
xchg
test
jo
push
mov
pop
push
mov
inc
xor
dec
mov
mov
dec
jle
pop
mov
xlat
ret
add
sub
mov
jmp
in
test
cmpsb
mov
aam
dec
mov
xor
or
mov
in
sbb
push
ss
sti
inc
fstpl
dec
js
out
imul
test
test
add
icebp
out
inc
and
ret
outsb
sarb
adc
xchg
cltd
sbb
aad
add
loope
into
cmp
lds
adc
cmp
push
push
aaa
or
repnz
adc
aad
loopne
arpl
or
lcall
xchg
mov
addl
into
call
or
sbb
inc
lods
rcrb
add
icebp
aaa
out
pushf
adc
adcl
sbb
outsl
out
fistpl
dec
mov
rol
xor
incb
mov
pop
push
es
sub
inc
out
mov
lock
pop
repz
insb
gs
loop
push
sbb
aaa
sahf
push
sbb
lret
fsubl
gs
icebp
xor
and
outsb
jns
jne
bndstx
or
push
jb
dec
adc
insl
arpl
cmpsl
push
jecxz
cmp
pop
xchg
and
lret
daa
cs
push
adc
fdiv
pop
xchg
dec
mov
adc
dec
xor
leave
insl
mov
jno
lods
inc
pop
inc
iret
mov
mov
repnz
jecxz,pt
sub
pop
mov
loope
xor
sub
int
inc
loop
test
cld
xchg
cmp
enter
xchg
jo
jbe
xchg
xor
ds
and
cmpsb
sub
sub
mov
fucomip
movsb
mov
out
inc
sbb
pop
cmp
pop
mov
mov
xchg
cmp
aam
loop
stos
ljmp
push
pop
adc
pop
in
adc
jg
xchg
mov
jbe
and
jbe
rcll
fcmovb
pop
dec
add
pop
sbb
push
pop
lods
push
push
outsl
dec
nop
stos
mov
icebp
add
sub
xor
in
insb
push
movsb
jo
loop
subb
das
add
pop
mov
xchg
shlb
sbb
imul
xor
stos
aam
mov
jo
lea
add
xchg
movsb
idivl
mov
enter
insl
in
sbb
sub
xchg
push
and
fmuls
jne
push
in
jecxz
andb
sbb
aam
gs
out
arpl
test
mov
inc
pop
ficoms
xorl
outsb
inc
sbb
add
arpl
and
outsb
jo
cmpsb
pop
pop
shll
and
sbb
les
outsb
mov
mov
out
xor
mov
cmpsb
cmp
mov
pop
mov
or
ljmp
in
xchg
test
add
addl
jo
sub
jmp
xor
pop
lods
sbbl
mov
jns
scas
push
jl
inc
xor
cmp
xchg
dec
jl
pop
pusha
push
imul
pusha
pop
add
push
inc
jle
shr
and
movb
fldenv
add
xor
pop
push
or
push
cmc
in
popa
jns
jmp
adc
sarl
or
pop
pop
mov
std
hlt
mov
xor
es
mov
sbb
or
cld
cmp
or
push
pusha
mov
inc
cmp
pop
inc
insb
or
lret
inc
cmp
mov
cld
cmpl
scas
adc
mov
ds
sub
adc
sub
xchg
cmp
adc
int
daa
out
mov
scas
cmp
mov
aad
ljmp
lods
in
cld
xchg
lods
mov
jl
push
lea
jo
dec
and
addr16
mov
fdivs
adc
push
jno
fiaddl
aaa
add
pop
lods
sub
and
cmpsl
mov
sbb
push
adc
fnstsw
push
mov
loopne
insb
push
andl
mov
jbe
xor
in
or
and
hlt
aad
aas
imul
adc
xchg
mov
clc
ds
mov
push
cmovno
imul
test
es
push
lret
pop
cmp
lock
xchg
and
cmp
push
jne
push
mov
jo
movsl
pop
out
mulb
sbb
jnp
push
push
pop
outsb
outsl
scas
hlt
cmp
mov
mov
adc
pop
pop
bound
and
push
pop
mov
dec
aaa
in
xchg
sbb
outsb
not
add
add
pop
pop
dec
adc
jle
push
xor
xchg
adc
xlat
sub
dec
add
nop
pop
cmpl
push
jno
mov
rclb
outsl
js
mov
inc
sbb
aam
inc
jns
mov
test
stos
les
daa
test
cmp
pop
add
scas
pop
popf
mov
cmp
add
cli
psubusb
leave
loope
jmp
dec
pop
testl
push
fnstenv
xchg
fwait
outsb
adc
and
push
push
mov
push
inc
and
sub
inc
std
stc
sbb
shrl
mov
test
subl
out
push
out
repz
lret
mov
jle
fsts
jno
inc
push
in
data16
xchg
sub
subb
lea
mov
jne
mov
outsl
shrb
data16
dec
push
push
test
sbb
pusha
adc
cli
shll
sahf
or
popf
repz
imul
adc
in
cmp
sbb
fs
mov
in
inc
scas
push
lret
xchg
jnp
cmpsl
stc
mov
mulb
mov
je
icebp
in
call
dec
push
sar
das
test
sub
fistps
or
sbb
adc
ljmp
ret
and
adc
in
sbb
stc
sub
fdivp
scas
cltd
int3
adc
dec
sub
addr16
push
add
sbb
add
ds
mov
dec
lods
sbb
dec
movsb
inc
push
cmp
adc
push
pop
sub
xrelease
call
sub
lock
inc
jb
or
jecxz
xchg
loop
inc
push
xchg
fistl
inc
and
sbb
jmp
arpl
fnstcw
xchg
push
shlb
icebp
jmp
cmp
fmull
stos
das
or
imul
xchg
mov
into
mov
dec
xor
xor
and
movsb
in
in
das
push
jp
insl
xor
mov
inc
outsb
push
xor
out
add
push
ds
arpl
fcomp
pop
stc
loopne
mov
mov
push
mov
push
xchg
mov
rorl
xor
add
mov
xchg
xchg
jbe
movsb
sub
jno
popf
inc
icebp
push
add
int
adc
fiaddl
fidivrl
mov
xor
cltd
jmp
cmpsl
xchg
pop
mov
into
mov
adc
inc
sbb
shr
cmp
movsb
iret
pop
push
cmpsl
aad
in
sub
imul
lcall
scas
inc
movsl
lock
add
insl
aad
push
cld
shl
stos
cmp
mov
mov
in
popa
out
inc
push
je
xchg
test
cli
movsbl
adc
jp
mov
mov
adcb
sub
sti
jo
test
jo
sbb
cmp
xchg
les
sub
mov
sub
cmp
mov
dec
arpl
popf
cmpsl
lea
in
repz
testl
mov
cld
jb
ss
dec
out
dec
insl
push
sbb
sub
jl
jecxz
inc
xchg
or
mov
jl
lret
lahf
stos
inc
pop
rcrl
add
mov
dec
cmpsl
aaa
icebp
cwtl
adc
jns
xor
and
je
xor
in
lret
js
cmp
xor
ljmp
arpl
mov
nop
adc
loope
or
push
xor
and
and
test
push
cmp
or
cld
inc
in
xchg
or
data16
in
mov
xchg
xchg
dec
pusha
imul
pop
mov
dec
inc
jge
rol
push
mov
test
lods
jecxz
out
adc
xor
cli
mov
mov
roll
inc
or
jbe
adcl
vpxor
lock
pop
sahf
adc
push
mov
add
adc
adc
push
sbb
or
dec
xor
les
pop
mov
gs
or
inc
inc
aam
push
neg
or
out
std
inc
rcrl
and
ljmp
sbb
test
aas
push
rclb
push
adc
lcall
stos
sbb
cli
icebp
jg
sbb
jns
test
inc
sub
movsb
and
ret
std
inc
repnz
insb
pop
or
or
push
adc
in
sbb
scas
sbb
pop
dec
lret
inc
mov
xchg
push
pusha
and
xchg
xor
push
sub
xor
ret
cltd
enter
pmaddwd
stos
movsb
fs
inc
mov
sti
fsubrp
xor
stos
mov
or
jne
jl
and
mov
jge
and
push
and
sub
or
cltd
mov
push
push
cwtl
jb
popf
dec
in
adc
sbb
ret
pop
mov
mov
or
inc
testl
hlt
ja
aam
repz
scas
push
lock
mov
cmpsb
mov
pop
mov
int3
lcall
imulb
lret
aad
mov
lods
icebp
sub
ficoml
lret
inc
orb
push
lock
mov
cmp
das
loope
cwtl
and
dec
mov
jb
stos
mov
mov
mov
clc
mov
push
test
aam
inc
and
mov
out
jns
mov
dec
sbb
cmc
insb
lret
out
data16
mov
sub
dec
stc
gs
int
outsb
cs
addl
cmpsl
flds
lret
das
fs
push
test
adc
movsl
cmp
mov
sbb
adc
pop
push
dec
jno
xor
push
sub
push
sub
mov
xchg
jle
cmpsl
lret
xchg
mov
lahf
mov
aad
out
stc
dec
push
adc
scas
stos
jmp
fs
xchg
aam
ss
jnp
adc
adc
add
jle
cwtl
push
mov
fstpt
sbb
lods
jge
clc
rorl
mov
lods
push
pushf
fnstcw
jo
push
rclb
pop
inc
loope
loopne
mov
mov
mov
into
jnp
xor
add
and
jae
in
mov
loop
adc
aam
hlt
pusha
cmpsl
pop
scas
pop
or
push
sti
ret
cmpsl
inc
adc
je
jbe
mov
inc
pop
out
inc
lock
nop
pusha
aad
sbb
fistpll
iret
shrd
addb
xchg
imul
data16
and
pop
or
sbb
scas
test
repnz
cmc
imul
pop
movsb
sub
cmp
inc
add
sbb
cmp
inc
rcr
movsb
pushf
divb
mov
pop
cmc
add
dec
inc
sti
xchg
mov
pushf
sahf
jb
jo
test
fmull
mov
xchg
push
popa
fistl
sbb
sub
mov
pop
cmp
ja,pt
xor
inc
fadds
sbb
jle
add
inc
hlt
add
scas
mov
sti
addr16
test
mov
push
lods
rol
xchg
cmp
dec
mov
mov
arpl
pop
iret
in
jns
cmp
jge
mov
divb
cltd
push
test
sbb
ret
mov
cmp
add
testl
sahf
xchg
in
push
stos
lock
dec
inc
in
pop
sar
sub
adc
scas
imul
add
inc
jl,pt
test
push
mov
je
inc
sbb
sub
sub
out
lock
dec
mov
jo
push
lea
lret
loope
call
and
pushl
sub
popa
es
xchg
mov
fisubs
jmp
push
adc
xor
cltd
push
fsubp
les
call
in
pop
das
mov
pop
insb
adc
add
pushf
cmp
rorb
cmp
and
aam
test
add
push
sti
mov
in
or
sbb
or
push
fsts
out
roll
popa
jle
xchg
mov
sbb
add
ret
scas
flds
mov
das
xlat
test
mov
movsb
fisubrl
xchg
xlat
and
lcall
mov
or
xlat
xor
push
and
mov
mov
nop
je
cmpb
cmp
outsl
in
dec
int
mov
cld
mov
ss
mov
pusha
icebp
int
adc
call
and
inc
mov
and
sub
push
ja
push
jmp
cmp
sbb
test
jg
pop
and
push
mov
outsl
in
push
jno
popa
mov
inc
scas
and
push
in
ds
in
fmul
pop
lds
pop
fiaddl
je
inc
movsl
imul
cmpsb
in
xorl
outsb
stos
or
or
pop
and
cld
xor
sub
sbb
pop
int3
mov
jg
jae
sbb
dec
xchg
xchg
add
xchg
push
stos
out
daa
xor
push
test
into
or
dec
or
push
repnz
and
pop
sbb
pushf
mov
push
dec
sbb
sbb
cmp
mov
push
nop
add
lock
testb
outsb
in
add
sub
sbb
mov
xchg
xchg
idivb
sbb
jb
sti
fiaddl
icebp
inc
adc
xor
iret
jmp
dec
mov
xor
stc
push
cmp
mov
push
push
pop
in
sub
loopne
xor
pop
dec
in
call
std
cli
ljmp
push
mov
pop
or
adc
int3
imul
cmp
icebp
pop
sbb
fistl
mov
mov
add
mov
add
cmp
xor
mov
cs
mov
add
pop
pop
cmpsl
sbb
gs
fdivs
inc
loopne
stos
sbb
aad
sbb
inc
or
andl
sub
icebp
int
cmpsb
pushf
cli
scas
adc
xor
cmp
and
lret
xchg
in
push
cmc
data16
leave
mov
jo
or
jno
cmp
js
inc
aam
out
mov
dec
lds
dec
mov
mov
push
cld
and
scas
addr16
or
jmp
inc
lret
lods
gs
pusha
int
ret
data16
mov
sub
xchg
dec
push
and
push
xor
subl
xlat
or
repnz
insb
mov
add
cmp
push
mov
sarl
mov
or
sbb
aaa
jmp
jne
lea
push
std
push
cltd
pop
sbb
push
repz
jmp
icebp
cmp
xchg
cmp
enter
sbb
cmc
cmp
push
dec
mov
fnstsw
data16
lret
outsl
jne
mov
in
jecxz
mov
mov
dec
mov
xor
dec
cmpsl
mov
rcrb
dec
dec
pop
mov
cld
clc
cmp
arpl
enter
neg
xor
cmp
ficoms
or
mov
pop
out
fildl
ljmp
and
mov
jae
fldenv
jmp
sub
mov
fucomip
add
adc
sub
leave
xchg
hlt
xor
ret
adc
xchg
push
jle
fucomp
mov
jno
in
fdivrs
dec
jmp
pop
pop
test
data16
mov
jle
pop
mov
nop
outsl
andb
push
iret
sub
inc
dec
mov
negl
lods
adc
adc
sub
adc
inc
lret
push
cmp
pusha
stos
inc
pop
inc
cmp
fdivs
or
xor
pusha
mov
call
and
add
jns
fwait
scas
mov
dec
dec
rorb
jno
repz
jge
iretw
sub
cmc
cli
sbb
mov
push
ss
icebp
aam
mov
mov
stc
push
aaa
mulb
pop
jne
dec
lcall
call
inc
pop
movsl
and
sbb
dec
ds
adc
imulb
xor
sub
enter
cmpsb
add
add
push
xor
ja
jae
test
sarb
mov
or
shrl
icebp
push
icebp
fdiv
and
jns
ret
out
lods
cli
in
dec
pop
mov
xchg
push
mov
inc
mov
xor
fisubs
fwait
call
in
jle
push
xor
loope
jo
ja
push
pop
lahf
mov
inc
fiadds
push
push
jmp
cli
or
dec
lret
in
mov
mov
popa
lea
dec
call
stc
or
outsl
aas
test
push
outsb
jnp
xor
xchg
std
jae
inc
hlt
lock
mov
jae
jae
push
pop
push
mov
pop
dec
mov
lds
xlat
sub
cmpsb
mov
das
cmpsl
cld
loope
loopne
inc
push
test
cmp
push
test
lret
repz
sarb
push
mov
and
ljmp
push
outsb
mov
addr16
shlb
icebp
mov
arpl
sar
jo
out
lcall
std
jp
mov
call
and
iret
bound
cmp
lcall
lcall
cli
mov
add
sbbl
leave
sahf
sub
mov
sbb
std
cli
mov
pop
scas
jae
ds
mov
mov
aad
mull
enter
sbb
sub
sub
test
pusha
xchg
push
jg
push
dec
ljmp
outsl
ss
inc
cmp
imul
adc
adc
adc
fiadds
adc
lock
jae
int3
sub
xor
mov
sub
mov
imul
pop
add
rolb
out
push
lret
cwtl
aas
shll
bound
insl
dec
mov
mov
mov
test
negb
lahf
and
xchg
movsb
lods
xor
lock
adc
fisubl
rcll
sbb
out
and
arpl
std
test
push
pushf
out
and
push
dec
jno
lret
dec
int
lods
lds
imul
xor
dec
push
test
das
mov
rcr
jmp
std
fsts
mov
mov
xchg
dec
xor
lods
jmp
cld
lcall
test
jae
lds
cmc
in
sub
adc
arpl
dec
xchg
inc
cmp
loop
ja
cld
push
leave
cltd
test
cmp
scas
fidivs
mov
shll
add
pusha
ret
lock
or
and
into
loop
mov
push
psubusb
divb
add
cltd
mov
sbb
and
xchg
cmp
gs
and
mov
hlt
jo
loopne
fs
adc
lods
or
pop
or
and
rclb
pop
dec
leave
lea
push
mov
adcl
mov
popf
push
sbbb
aas
popf
ss
fwait
orl
adc
imul
outsb
inc
push
inc
cli
sub
cmp
call
in
adc
loope
cmp
adc
push
ucomiss
mov
sti
movl
jmp
rcrb
cmp
out
in
add
xchg
rorb
int3
mov
cmp
mov
jnp
xor
push
sti
repnz
jb
inc
xor
dec
shll
mov
adc
adc
lcall
ds
or
outsl
pusha
popf
adc
pop
pop
outsb
out
sbb
jnp
scas
xor
push
lods
push
sbb
cld
sbb
scas
jno
repnz
or
pop
mov
xor
xor
mov
mov
pop
mov
adc
inc
test
sbb
insl
push
rcrb
gs
leave
jno
mov
testl
ret
add
mov
mov
outsb
daa
in
or
lret
dec
fnsave
stos
lods
pushf
xchg
scas
add
or
out
sbb
xchg
rcrl
call
push
jbe
or
mov
mov
stos
test
jge
push
idiv
iret
test
div
fmull
xlat
addb
sbbb
rcl
xchg
aam
mov
inc
enter
or
dec
jo
imul
pop
arpl
sub
cmpsl
adc
fnop
mov
dec
sti
jae
imul
xor
mov
add
jno
sub
fstl
mov
cmpsl
pop
fisttps
pop
sbb
lea
inc
mov
or
sub
jno
dec
inc
push
imul
iret
push
and
in
mov
sahf
lods
insb
jbe
add
xchg
dec
mov
into
mov
xchg
xor
or
fcoms
aaa
les
lret
mov
shrb
mov
adc
and
sti
add
dec
std
xor
pop
jmp
fsubs
xor
mov
mov
dec
shll
cld
xchg
mov
lock
fsts
sar
call
add
in
mov
popa
push
arpl
lock
xor
cmp
daa
outsl
sbb
push
inc
add
jns
mov
mov
clc
movsb
xor
push
ss
mov
data16
xchg
cmp
sar
test
fldt
fadds
repz
aas
stos
jg
and
aam
pop
sub
setb
push
cmp
jne
cmpsb
and
xlat
jae
lcall
jg
pop
sbb
loop
jae
dec
or
insl
mov
sbb
sub
out
mov
push
dec
shrl
cli
adc
push
sub
sub
outsb
ss
ds
cwtl
adc
dec
fisubl
jne
ficoms
adc
inc
fs
and
mov
jecxz
call
sub
lret
aas
out
jne
pop
std
pop
pop
cwtl
sub
cmc
fwait
out
mov
pusha
pop
push
or
xchg
mov
jmp
pop
scas
adc
aas
jecxz
add
adc
jge
lods
loopne
es
push
hlt
adc
jle
int3
sbb
bound
subl
imul
popa
in
or
xor
aad
test
sub
mov
test
inc
and
mov
pop
mov
sub
ds
dec
ljmp
xchg
loop
call
ss
jmp
loopne
pop
cmp
hlt
imull
xchg
dec
mov
test
xchg
xorl
pop
or
mov
push
or
jmp
lods
add
adc
inc
pop
push
or
cld
lahf
rcll
hlt
test
inc
inc
sbb
in
xchg
or
test
test
out
push
pushf
mov
mov
add
push
jns
in
lock
or
or
in
xchg
xor
dec
test
aas
sub
cmp
scas
aam
pmulhuw
sbb
add
pop
sbb
inc
ret
fldl
sub
cli
movsl
cli
ja
negl
in
testl
arpl
arpl
sub
push
ret
mov
dec
mov
cmp
push
mov
sub
and
rcrb
pop
xchg
enter
in
jecxz
int3
dec
sub
dec
repnz
mov
outsb
ret
push
jne
cmp
sbb
into
lret
mov
out
or
push
adcl
popa
add
mov
jnp
push
aam
lods
sbb
stc
mov
imul
sbb
or
mov
mov
sub
in
inc
jge
cmp
push
nop
aad
mov
gs
add
int3
lahf
dec
in
xor
mov
std
addl
out
lret
mull
inc
mov
pop
add
pop
into
daa
shlb
mov
inc
mov
imull
cmc
mov
cmp
lret
cmp
std
shlb
adcb
lret
push
lock
mov
adc
int
es
fs
test
jbe
mov
pushl
sbb
roll
mov
scas
jns
shlb
cmp
mov
or
jne
push
add
or
test
pop
inc
jp
lock
jg
and
push
mov
mov
pusha
movsb
and
cmp
mov
test
loopne
jns
mov
enter
test
sub
dec
mov
mov
pop
mov
sarb
stc
jl
cmpsb
fs
mov
mov
mov
push
sbb
or
test
mov
lods
and
mov
aad
and
fwait
jp
mov
jecxz
testb
inc
pushf
xchg
xchg
fprem1
mov
pop
cmp
push
cmp
pop
jmp
dec
mov
insl
popf
mov
rcr
or
inc
nop
aas
lods
aas
mov
or
shrl
mov
mov
dec
or
jp
and
pop
push
dec
add
sub
jb
sar
mov
out
cli
icebp
xor
push
sbb
add
add
imul
add
loope
mov
dec
frstpm(287
lea
xchg
in
dec
inc
mov
xchg
negb
mov
lret
insb
pusha
repz
leave
xlat
int3
cmp
lahf
xchg
cld
insb
test
adc
cld
in
dec
mov
push
enter
aam
or
test
cmpsl
adc
mov
dec
cwtl
out
cmp
push
pop
dec
bound
lret
repnz
xchg
cmp
adc
cs
fs
sahf
jmp
fwait
cmp
leave
lcall
imul
push
into
jp
xorb
dec
and
popf
mov
mov
xor
imul
adc
scas
ljmp
mov
sarl
cwtl
int
jbe
popf
lods
adc
aaa
xchg
aaa
add
inc
in
add
das
mov
sub
sarb
mov
mov
xor
mov
sub
mov
das
pusha
insl
lret
push
xlat
out
xchg
pop
out
xchg
push
cmp
aas
mov
fildl
shl
aad
jmp
aas
sub
sar
sub
andl
daa
xor
lea
repnz
fists
test
adc
adc
mov
popa
xor
jecxz
hlt
pop
sub
mov
mov
cld
rorb
pop
sbb
jae
adc
ret
sbb
mov
gs
jecxz
stos
add
or
xchg
mov
adc
movsl
jo
je
adc
cmp
pop
dec
cmpsb
movsb
cmpb
dec
mov
jp
loop
jge
xlat
xlat
es
mov
sahf
sarl
cmp
or
pop
sbb
pop
inc
add
xchg
mov
push
lods
clc
in
mov
mov
and
jno
inc
xchg
fcoms
insb
enter
enter
dec
jecxz
or
icebp
andl
je
jbe
mov
adc
shll
push
test
mov
push
movsb
ret
enter
das
imul
and
mov
stc
xlat
push
sub
pop
lea
pop
fdivrl
sbb
outsb
shlb
cmc
jnp
sub
lock
mov
pop
sbb
pushf
xor
test
lret
ret
push
inc
pop
xchg
rcr
inc
clc
cs
pop
pop
jge
xchg
pop
add
rclb
insl
mov
dec
outsb
jb
fwait
lahf
sub
mov
out
jbe
sub
pop
pop
cmp
or
pop
stos
add
mov
in
addr16
xor
fiadds
xchg
imul
inc
jno
cld
fildl
ss
shl
mov
shlb
mov
mov
add
or
aam
jge
fimuls
push
push
arpl
mov
pop
scas
movsb
fucomi
and
jae
aas
xor
sbb
push
scas
rorl
xchg
push
pop
inc
imul
sub
js
je
mov
jmp
repnz
add
and
sbb
xchg
xchg
push
movsl
adc
dec
mov
dec
xor
mov
sbb
cmp
xchg
mov
add
mov
fstpt
sub
mov
enter
xor
or
jle
gs
or
ja
int
add
out
mov
pop
xor
pop
xor
xor
js
xor
out
out
out
dec
fwait
inc
cmpsl
ds
cli
and
jb
leave
movsb
sub
xchg
loopne
push
mov
clc
push
and
and
cmp
cmp
clc
cmp
pop
fnsave
mov
xchg
fs
mov
xor
divl
cmp
pushf
lahf
lods
test
jge
test
add
jno
jl
out
add
cld
push
push
jb
xchg
out
in
inc
add
popf
xor
mov
xor
and
dec
repnz
mov
jae
jmp
jae
xchg
pop
arpl
adc
fidivl
jge
add
mov
mov
je
xchg
lret
jne
ja
std
aaa
idivb
in
insb
inc
mov
outsb
pop
push
insb
int
fs
jg
sar
sub
cmp
daa
lahf
test
cmp
mov
cmp
lcall
xchg
fsubl
stos
pushf
adc
dec
enter
mov
bound
inc
pop
mov
cmp
and
or
inc
mov
cltd
push
adc
push
lods
loopne
mov
je
and
pop
jecxz
jmp
cli
xor
xchg
mov
cmp
mov
mov
or
enter
or
pop
rcrl
pop
pop
hlt
sarl
daa
push
xor
dec
xor
or
pop
shll
mov
mov
cmp
sub
testb
or
in
sub
out
test
push
jns
movsl
scas
out
sub
pop
in
pop
ret
scas
stos
jnp
add
sti
push
jmp
mov
lock
xchg
loopne
xchg
push
and
ret
xchg
sbb
mov
pop
cmp
dec
push
ret
ljmp
fwait
mov
test
loop
out
adc
cmp
insl
rcr
xor
push
iret
out
test
stos
jb
repnz
in
add
imul
das
and
or
push
mov
dec
mov
sahf
adc
popl
push
push
sti
clc
iret
scas
pushf
jns
pop
js
or
in
push
adc
cltd
jo
xorb
sub
sahf
ret
aas
std
dec
dec
movsb
je
push
ret
hlt
xor
mov
cwtl
leave
mov
imul
push
or
mov
fcomps
fnsave
jo
jmp
and
aad
mov
lea
xchg
mov
leave
xor
adc
pop
in
xor
xor
pinsrw
mov
test
mov
or
jne
rcrl
push
ret
out
int
pop
movsl
xchg
loopne
les
test
out
cmc
test
pop
stos
and
push
and
dec
mov
mov
mov
xor
adcl
mov
xor
adc
or
sbb
fsubrs
hlt
stc
test
insb
adc
fcoml
xor
cmpsl
cmp
ror
add
jb
aad
lock
inc
adc
das
ret
jns
mov
enter
aam
adc
sub
xchg
shll
stos
mov
xchg
pusha
das
mov
pop
push
push
scas
and
jmp
test
mov
fcmovnbe
xor
jg
jmp
xchg
push
fcmove
leave
pop
sahf
and
inc
jmp
push
les
jno
dec
andb
add
loop
aad
add
or
mov
inc
aaa
lahf
movsl
cld
loope
mov
add
adc
or
push
jecxz
pop
mov
mov
pop
pop
cld
iret
jmp
leave
cmp
inc
pop
xor
cs
shlb
into
sarb
stc
ss
sub
mov
xor
fmull
push
xlat
push
or
icebp
mov
push
jnp
jnp
out
cmp
jecxz
loopne
out
dec
outsb
push
lock
cmp
aad
or
lods
jae
pop
cmp
jne
call
push
mov
push
int
gs
jo
mov
and
pop
hlt
jecxz
bound
and
int3
pop
cmp
vpcmpgtd
push
jl
push
sbb
ljmp
out
cmp
test
sbb
mov
loopne
xchg
popf
sbb
dec
icebp
lahf
rorl
ret
cmpsl
scas
xchg
insl
inc
sahf
push
sub
xor
xor
ds
rcrl
test
scas
mov
jl
cwtl
sbb
stos
inc
cmpsb
call
or
clc
mov
push
stc
and
lret
mov
pop
jl
or
stos
subl
mov
ret
pop
pop
jmp
mov
add
sahf
lock
addr16
push
sub
js
out
mov
popa
icebp
in
dec
out
jo
xchg
dec
ja
mov
mov
roll
aaa
ret
and
cli
sarb
clc
lcall
jecxz
outsl
inc
icebp
jns
or
mov
sbb
faddl
arpl
cmp
jle
xchg
jbe
out
jbe
cltd
add
out
sbb
fsin
out
outsb
repz
fsub
adc
lods
xchg
add
outsl
or
and
mov
lods
clc
cmp
insb
or
xacquire
pusha
and
stc
cmp
mov
leavew
inc
decb
sbb
popf
inc
mov
xlat
xor
xchg
std
rcll
mov
out
nop
push
push
xchg
lret
jb
mov
test
pop
inc
test
jns
lret
jae
push
xchg
dec
bts
dec
mov
and
push
lods
js
arpl
jecxz
popf
fmul
pop
movsl
xlat
repz
mov
pop
jmp
aaa
mov
jl
and
cmp
ljmp
pop
movsb
cmpsl
lods
push
in
insl
mov
xchg
out
sbb
int
and
xor
adc
je
int3
mov
pusha
jmp
jb
dec
mov
imul
xchg
sub
icebp
in
add
pusha
mov
or
lods
dec
test
mov
nopl
stc
dec
aam
inc
out
test
mov
inc
fnsave
les
dec
pusha
pushf
cwtl
roll
sub
jno
push
mov
sub
cmp
int3
popa
and
jp
lods
aad
je
out
test
pop
lods
enter
insb
mov
icebp
xchg
sbb
add
sbb
andb
pop
fdivr
mov
movsl
jle
mov
xchg
add
push
push
jno
es
gs
mov
add
push
jne
stos
in
push
cltd
xchg
dec
jl
xor
in
jnp
pop
ret
dec
neg
xor
add
cmpb
data16
fcompl
and
pop
addr16
fisttpll
push
and
adc
push
inc
mov
mov
push
push
dec
xchg
jnp
xor
in
movsl
imul
dec
pop
push
stc
out
xor
icebp
or
mov
aad
pop
adc
mov
pop
repz
sbb
inc
mov
sub
mov
pop
call
jp
push
pushf
sarb
jns
das
lcall
shrb
or
scas
push
jl
das
inc
adc
in
scas
movsl
andb
insb
out
adc
jmp
jecxz
add
cli
sbb
icebp
xor
cmc
mov
inc
xor
pop
pop
cli
inc
inc
dec
outsb
xor
mov
jle
mov
push
dec
ljmp
jp
loop
cmp
xor
fdivrl
inc
sbb
es
xchg
ffreep
negb
cmp
stos
mov
jmp
or
push
jge
aas
mov
sub
stc
or
xchg
mov
pop
jmp
into
push
in
jnp
ljmp
sub
rcrb
pop
insb
pop
or
outsl
nop
scas
insl
cmp
mov
arpl
push
mov
jns
mov
adc
out
sub
xor
add
dec
and
repz
test
mov
push
dec
xor
xchg
in
mov
sbb
mov
ss
ret
pop
add
xor
jecxz
push
and
lods
inc
call
jne
mov
mov
mov
mov
mov
xor
imul
mov
out
decl
das
orl
cmpsl
lods
mov
test
sbb
imul
pop
mov
jb
xchg
add
mov
xchg
nop
test
xor
fnstsw
out
dec
pop
xorb
aam
je
mov
mov
lock
mov
mov
ror
movsb
lods
lret
or
test
mov
lock
add
mov
outsb
push
insb
sbb
rolb
xchg
pop
outsl
sub
rcll
mov
leave
dec
mov
call
sub
test
sbb
xlat
les
nop
pop
aad
sbb
inc
dec
sbb
mov
fisubs
test
cmp
push
jecxz
pushf
mov
mov
jae
aam
mov
in
sbbl
mov
inc
mov
rclb
xor
test
mov
popa
mov
jl
xchg
xchg
sub
imull
roll
pop
cwtl
xchg
or
add
loopne
push
sti
daa
test
negw
int3
cltd
test
ret
and
les
push
dec
jno
clc
not
stos
push
or
xor
or
or
mov
mov
ret
js
addr16
cs
dec
int3
test
push
imull
loop
mov
mov
push
loop
push
lds
popa
jbe
aam
and
arpl
fidivrl
adc
mov
pop
jno
pushf
sub
sub
inc
inc
shlb
mov
bswap
jnp
jecxz
in
inc
outsb
xchg
jge
xchg
stos
adc
popa
fstps
subb
mov
loopne
adc
std
mov
movsl
shl
repnz
arpl
push
arpl
leave
cmpsb
clc
mul
sub
test
shll
in
mov
fs
hlt
push
addr16
push
lcall
dec
fisubrs
mov
fdivs
and
rcrb
sbb
add
subb
jnp
cmp
icebp
pushf
jae
repz
gs
push
cmpsl
pop
arpl
jmp
decb
shl
xor
or
xchg
xlat
mov
in
inc
pop
jns
stos
inc
mov
fldenv
dec
mov
dec
inc
mov
sbb
sbb
test
data16
lahf
mov
mov
or
int
mov
and
dec
arpl
xchg
and
xor
and
sub
imul
adc
cmp
push
or
into
out
jae
mov
inc
ljmp
jmp
imul
lcall
mov
aad
out
les
fidivl
xchg
dec
cmpsb
mov
push
or
jge
push
add
mov
into
mov
fs
xchg
sbb
mov
push
cmpsl
lods
addr16
xchg
sahf
jno
ja
lahf
and
pop
in
sbb
fnstsw
cld
xor
cmc
sbb
mov
fldenv
pop
xlat
xchg
fs
repnz
shlb
sti
fnstcw
cld
ret
pop
xchg
in
in
mov
or
stos
mov
int
pop
notb
pop
xor
aas
and
mov
mov
mov
sbb
adc
mov
xchg
adc
movsl
sub
scas
pop
mov
ss
or
jle
scas
mov
xor
rorl
cmc
dec
xchg
scas
shll
pop
mov
xor
ret
push
jg
popf
xor
insl
or
cmpsl
pop
sbb
jns
loopne
and
shr
cmp
dec
aaa
and
and
je
mov
pop
jno,pt
out
jo
js
stc
sub
mov
arpl
push
out
dec
insb
xor
cmp
ret
or
xchg
or
push
cli
mov
mov
mov
or
cmc
sbb
mov
orl
sbb
sub
dec
mov
call
inc
push
jecxz
aaa
xor
mov
jg
scas
packssdw
nop
mov
jge
mov
ss
mov
xchg
fiaddl
dec
scas
cmpsb
jns
mov
or
pop
dec
jnp
rcrb
and
inc
ret
into
aas
mov
mov
leave
out
or
imul
icebp
bound
sub
or
cmpsl
mov
push
jbe
out
aad
test
adc
push
xchg
xchg
cmp
inc
mov
data16
pop
adc
mov
mov
std
fcomip
fwait
insb
popf
mov
sbb
popf
push
js
mov
sbb
sahf
cmp
ret
mov
jbe
mov
adc
push
cmp
pop
sbb
jmp
decb
in
inc
repz
iret
mov
adc
add
dec
mov
dec
inc
adc
jne
jbe
sbb
push
cmp
jl
lcall
insb
adc
jecxz
mov
je
inc
adc
sbb
es
cs
nop
pop
popf
or
adc
loopne
adc
xchg
push
add
rcrb
dec
movsl
cmc
sub
stos
das
push
cmp
sbb
stos
push
fadds
mov
out
lea
out
je
cmp
adc
xlat
jae
or
fldenv
xchg
dec
cmpsb
jp
mov
cmp
add
mov
das
test
mov
imul
sahf
aad
das
outsl
ljmp
push
inc
clc
adc
pop
cmp
pop
call
les
pop
es
das
rclb
pop
inc
lret
mov
inc
add
in
pop
pop
and
adc
repnz
adc
push
lret
call
mov
movsb
ss
sbb
int
test
rcl
lret
push
ror
fcomi
mov
sarl
les
pop
adc
aad
dec
sub
pushf
xchg
cli
push
pop
mov
insb
or
lret
mov
mov
mov
arpl
cmp
mov
ret
rclb
and
stos
jb
dec
arpl
cmp
mov
je
cmp
hlt
lret
mov
incl
mov
in
sub
pushf
push
mov
xor
int
test
repnz
loopne
mov
xor
popa
std
mov
xchg
fmulp
adc
and
push
nop
clc
and
add
mov
mov
mov
leave
ljmp
iret
xchg
dec
fstpl
mov
jecxz
in
mov
jl
pop
and
and
sub
mov
icebp
nop
daa
mulb
gs
add
inc
pop
cld
jle
xchg
outsb
outsb
jno
mov
gs
push
mov
and
ss
daa
and
fcmovnbe
aaa
xchg
xor
inc
mov
mov
rclb
rorl
and
jecxz
pop
decl
or
cmpsl
add
push
inc
mov
adc
in
inc
bound
jmp
push
xchg
pushf
pop
dec
icebp
jge
das
sbb
or
cwtl
sbb
jle
mov
test
test
and
mov
sub
mov
mov
mov
insl
sub
loop
in
cmp
and
repnz
adc
inc
mov
mov
xchg
mov
outsb
dec
pop
fmuls
push
out
mov
icebp
mov
mov
aaa
add
pusha
mov
fwait
jno
into
ja
cmp
les
add
xor
and
cmp
adc
pop
aam
shrl
push
clc
lret
in
add
fisubrs
sahf
outsb
js
inc
dec
sbb
aam
sub
out
pop
enter
lds
outsb
mov
xor
cmp
mov
dec
mov
out
mov
dec
and
std
int
jb
imul
push
mov
inc
dec
mov
jno
xor
sti
pop
call
push
nop
jmp
and
out
cltd
mov
sbbl
scas
adcl
sub
mov
rclb
mov
ljmp
lret
jnp
push
or
stos
pop
aas
call
lds
lahf
jmp
push
jmp
adc
push
aad
cmp
cmp
push
add
movsb
mov
insl
fcmovb
sarb
ret
ljmp
neg
dec
and
mov
pop
daa
pop
js
je
imul
fidivrl
shlb
stos
jno
jp
clc
jb
push
in
xchg
ret
adc
xor
mov
mov
imul
add
mov
cmpps
pop
hlt
aaa
pop
sub
sbb
fldt
sub
shl
push
mov
inc
arpl
in
or
ja
or
push
mov
lea
dec
jno
sbb
inc
lret
subb
sbb
push
mov
add
lahf
pop
imul
cmp
cs
mov
inc
sub
xchg
repz
and
std
ret
addr16
or
and
xchg
mov
outsb
and
arpl
nop
repnz
xchg
fsubs
cli
imull
sub
dec
inc
mov
bound
aas
dec
imul
mov
xlat
outsb
xchg
mov
shrl
pushf
jecxz
sub
mov
jl
dec
js
fnsave
adc
inc
in
xchg
or
jp
jnp
movl
mov
cmc
inc
pop
ljmp
push
bound
mov
lds
add
xchg
sbb
loopne
pop
cwtl
jbe
sbb
pop
aas
push
mov
aad
jb
dec
das
pushf
cs
lock
mov
jnp
mov
je
push
out
test
push
pop
incl
or
stos
call
mov
rcrl
arpl
stos
in
push
pushf
sub
cmp
sbb
sub
push
push
cmc
and
xor
xor
sbb
xchg
add
push
stc
bound
mov
stc
xor
hlt
adc
imul
adc
dec
and
pop
jns,pt
jge
pop
pop
icebp
inc
adc
sbb
add
pop
jbe
push
mov
dec
aaa
dec
lea
aas
mov
mov
popf
es
fimuls
pop
add
aam
icebp
cmp
jae
jns
nop
inc
sub
sub
dec
int3
or
dec
lds
dec
cmp
pop
test
ljmp
lock
adc
orb
repnz
pop
scas
shl
fsubs
lret
subl
adc
shlb
cmp
dec
ljmp
inc
inc
icebp
jmp
lods
mov
jb
add
imul
sub
and
add
sbb
sub
xchg
hlt
or
fwait
insb
int
fdivl
push
clc
add
adc
shll
pop
pusha
push
adc
ja
adc
test
or
int
mov
mov
mul
fsubrs
xchg
sub
aad
stos
push
cmpsb
mov
scas
cmpsb
jo
fldl
daa
pop
cli
xchg
out
push
inc
xchg
mov
mov
sbb
mov
repz
push
sbb
add
mov
inc
mov
lret
sub
sahf
faddp
fadds
mov
mov
popa
mov
outsl
or
outsl
fiaddl
pop
loopne
xor
mov
sbb
xchg
aam
iret
fsubs
jb
or
dec
bound
cld
ss
test
mov
mov
les
push
adc
fsub
lcall
lahf
inc
push
aaa
je
xor
icebp
mov
push
push
dec
jp
push
lcall
orl
add
lret
incb
add
mov
dec
cwtl
pushf
cs
cmpsb
cs
jle
xor
xor
stos
pop
mov
or
das
ret
fsts
sub
mov
imul
jne
iret
jg
mov
and
and
mov
xchg
push
aas
sbb
pop
jne
repz
dec
mov
nop
lret
test
lret
lock
mov
add
mov
lcall
jne
pop
pop
mov
in
shll
and
lods
in
aaa
adc
pop
jl
mov
add
pop
inc
rcl
xchg
or
or
gs
sti
fldt
data16
outsl
sub
int3
arpl
push
jle
bound
sbb
xchg
dec
pop
push
in
rcll
loopne
pop
mov
out
cltd
jge
mov
movsb
mov
push
lahf
fists
cmpsb
sbb
cmp
xlat
adc
inc
pop
inc
das
cld
xor
sub
and
sub
sub
jmp
lods
mov
test
mov
adc
enter
mov
ficoml
movsl
cmp
xor
jne
inc
negb
cld
mov
cwtl
es
cli
inc
into
sub
sub
push
xchg
cmc
push
jbe
test
imul
mov
dec
pmaddwd
pop
lret
bound
jmp
sbb
mov
les
loopne
and
cmp
popf
cmpsl
xor
iret
jmp
mov
or
dec
in
loop
lods
imull
mov
int3
push
lcall
pop
adc
mov
in
scas
jo
inc
cmp
inc
pop
mov
shlb
fwait
test
loope
nop
fbstp
scas
mov
std
push
or
sahf
lds
testl
in
repnz
scas
into
lret
popa
mov
pop
mov
in
jae
inc
arpl
xlat
out
shll
adc
and
fbld
push
inc
or
sub
nop
testb
xchg
sub
test
loope
push
adc
jb
mov
in
aaa
je
push
add
jno
mov
fcoml
sub
xlat
push
call
cld
push
sub
lds
lret
popf
or
mov
pop
mov
push
pop
movsb
xor
out
cmpsb
jns
sub
jb
push
mov
pop
aad
stos
ds
xlat
or
repnz
adc
pop
pop
dec
sahf
ss
xor
pop
push
sub
repz
fstp
lahf
sbb
inc
sub
call
movsl
pop
or
or
push
cmp
jnp
mov
mov
imull
add
lahf
pop
add
cmc
in
push
fisubrl
ficompl
add
push
rolb
dec
or
test
les
popf
jbe
mov
add
mov
adc
jge
dec
cld
lcall
sbb
push
push
addr16
pop
insb
or
sub
mov
jp
scas
andb
mov
daa
xchg
rcrb
pop
out
jnp
jne
push
add
cmp
es
add
into
ficoms
fsub
lods
and
hlt
clc
mov
pop
sbb
jne
cmp
cltd
sub
sti
in
mov
pop
pop
int3
clc
jne
mov
cltd
in
lods
pop
jg
sbb
into
mov
mov
insb
push
adc
inc
jmp
out
inc
in
adc
inc
out
inc
adc
rolb
sub
mov
sbb
push
aad
inc
inc
leave
lds
lret
push
xor
adc
mov
ret
xor
push
sti
mov
jp
dec
aas
xchg
fsubl
push
int3
les
shl
aaa
popf
and
xchg
inc
loope
fistl
pop
dec
mov
roll
push
or
out
add
dec
cs
rcrl
leave
fbstp
mov
aas
in
mov
jl
push
insl
push
out
lcall
xor
mov
pop
sub
jecxz
push
jbe
xor
sbb
jbe
and
mov
in
les
inc
mov
rorb
xchg
jg
mov
sbb
js
xchg
into
out
lds
inc
inc
hlt
cwtl
arpl
jae
dec
xor
les
out
sub
test
mov
sub
dec
rolb
fistpll
rcrl
pop
mov
jg
and
xchg
xor
sub
jne
cmp
mov
dec
inc
and
cltd
lds
sbb
clc
add
lods
add
xor
sbb
dec
mov
and
jnp
mov
inc
sub
outsl
push
lods
cmp
mov
mov
call
call
arpl
pop
pop
or
push
in
out
xor
push
addr16
jg
mov
fwait
add
pushl
fcmovbe
sub
jle
pop
movsl
lret
fbstp
adc
pop
in
mov
mov
xchg
xchg
ret
lret
insl
pop
aam
sbb
inc
enter
shl
insb
cmp
xor
ss
aad
jae
or
push
enter
push
adc
and
cwtl
outsb
inc
mov
int3
xchg
sti
imul
repz
sbb
inc
js
jge
add
outsl
stos
inc
pop
imul
inc
mov
fstpt
ja
jbe
stos
lea
lret
test
jp
add
jbe
aas
das
fsubrs
enter
das
popa
aam
insb
daa
aas
lret
daa
sti
ret
arpl
jo
adcb
or
loope
inc
pusha
loope
cmp
fiaddl
dec
dec
sti
xlat
test
bound
dec
data16
sbb
ret
lds
push
ficoms
or
jbe
or
lea
and
push
std
inc
cmc
xor
xchg
push
mov
bound
adc
testl
aaa
movsl
enter
and
xlat
jmp
jmp
call
sub
fnstcw
sbb
call
pusha
push
dec
dec
in
and
mov
lahf
punpcklbw
adc
cs
test
pop
xchg
inc
in
xor
inc
adc
les
lret
jecxz
pushf
pusha
dec
les
leave
xor
fsubs
push
repz
imul
dec
dec
adc
data16
sbb
clc
pusha
mov
mov
loope
jns
dec
and
leave
outsb
xor
pushf
sub
lret
push
mov
rcrb
test
aas
bound
pop
mov
mov
push
movsl
popf
scas
xor
dec
movsb
sub
out
lret
out
cs
sbb
mov
ds
je
in
ljmp
sarb
sbb
ljmp
sub
push
stos
or
dec
cs
cwtl
and
xor
orl
sbb
sub
cmc
inc
xchg
jns
nop
mov
push
jb
test
sub
push
movsb
mov
std
fmull
pop
mov
push
or
pop
movsl
fistpl
pop
jmp
push
mov
leave
icebp
xor
jno
adc
push
lods
xchg
mov
xchg
mov
cmp
lods
push
enter
mov
or
loopne
sub
and
sub
cmp
call
jnp
stos
fwait
bound
add
add
sub
or
popf
dec
lea
sub
mov
xor
sbb
push
fs
in
lods
sbb
dec
xor
xor
push
fwait
jecxz
mov
shrb
push
imull
outsl
test
jbe
push
push
outsl
and
stos
imul
xor
rol
mov
sub
imul
xchg
mov
filds
mov
mov
rcr
imul
dec
jg
insb
mov
xor
out
jbe
inc
addr16
lret
test
cmc
and
int3
jae
cmp
test
adc
imul
push
pop
mov
enter
xlat
es
jbe
rorl
push
xchg
mov
pop
nop
jp
mov
icebp
psubw
ss
fcoms
push
insl
js
jge
fwait
sti
inc
pop
inc
add
sahf
mov
jnp
pushf
mov
jno
out
leave
mov
inc
loopne
dec
push
aam
inc
mov
fsubrs
xor
inc
or
cmpsb
xor
push
mov
push
icebp
mov
imul
inc
dec
subb
mov
enter
shrb
movsb
stos
cmp
cmpsb
rcrb
mov
push
sub
xchg
das
lret
jmp
xchg
inc
xor
inc
cmp
adc
xorb
push
push
icebp
divl
push
or
pushf
mov
inc
aad
xor
fdivrl
aad
lock
xor
es
popa
sbb
xchg
pop
cmp
add
add
fwait
xchg
lds
xorb
movsb
inc
repz
xchg
enter
leave
adc
and
mov
das
fisubl
shrl
das
leave
int3
movb
mov
mov
popf
mov
pop
mov
mov
outsl
rorb
fsubrs
out
imul
cmc
repz
xchg
mov
adc
mov
push
jmp
xor
scas
xorl
fwait
xchg
es
leave
xchg
mov
jb
xchg
adc
sbb
cltd
das
popf
in
dec
rorl
lahf
daa
xchg
pushf
sub
fstl
mov
lcall
jmp
pop
lea
pushl
in
subb
lods
mov
jmp
xchg
add
jae
xchg
insl
add
mov
sub
dec
mov
sub
push
pop
test
cmpsb
testb
push
sahf
movsl
in
push
sbb
insl
sbb
lods
gs
add
insb
ss
adc
fimull
adc
ljmp
data16
dec
push
pusha
inc
mov
in
pop
enter
or
xchg
xchg
icebp
mov
adc
xchg
shlb
mov
cmpsb
aaa
adc
fs
leave
into
push
mov
xchg
inc
movsl
test
orb
add
jbe
xlat
pop
daa
popf
out
les
sub
in
movsb
push
mov
mov
xchg
insb
test
dec
gs
push
mov
lret
mov
jne
mov
aaa
cmp
dec
xor
lret
test
cmpsb
mov
imul
out
xchg
inc
pop
clc
je
repnz
aam
push
cs
mov
testl
ret
jnp
in
dec
jle
fwait
pop
cltd
adc
mov
daa
mov
push
fs
push
insl
jmp
test
xor
in
ja
inc
std
push
fnstcw
add
adc
mov
mov
push
push
dec
lret
fcoml
mov
mov
stc
xor
mov
sub
mov
cmp
jbe
jge
rclb
in
pop
push
dec
pop
call
fcomps
xchg
mov
dec
jge
test
stc
cmp
notb
out
pop
shlb
push
loopne
or
fsubrs
pop
pop
cltd
repnz
outsb
mov
mov
sbb
pop
stc
pusha
jbe
ja
adc
jne
xchg
popa
pushf
lds
pusha
mov
mov
movsb
xchg
cmpsl
dec
scas
iret
fisubrl
or
xchg
out
jle
cmpsl
cmp
dec
das
sub
mov
xchg
jbe
shll
jge
sbb
xchg
push
in
inc
xor
mov
je
mov
sbb
add
push
mov
orl
aad
out
cs
or
ljmp
ret
xor
in
das
ficoml
mov
xchg
mov
stc
out
jnp
inc
xchg
sbb
mov
loopne
push
dec
sarl
mov
jns
lret
push
lcall
sahf
rcrb
andb
pop
or
arpl
lahf
bound
xchg
sbb
xor
subl
mov
xor
pop
fdiv
cs
mov
clc
sub
pop
stos
es
push
and
jmp
test
jnp
add
add
dec
inc
dec
push
aad
sbb
test
movsb
lods
dec
ss
xchg
cmp
inc
mov
jmp
cmc
scas
aas
aad
out
adc
cmpsb
aas
inc
rorl
rcr
mov
inc
xor
pop
add
mov
push
mov
fsubrl
sbb
imul
add
hlt
and
sbb
pop
daa
shl
xor
cmp
loope
mov
in
cld
cmp
das
daa
into
dec
mov
add
mov
stos
xor
xor
shlb
test
inc
jae
mov
addr16
popa
xor
jne
adc
lods
push
outsb
loope
mov
xor
or
daa
jbe
jmp
sub
rcrl
inc
movsb
cmp
test
jle
pop
push
adc
dec
mov
fidivrl
sub
or
lock
jae
mov
inc
add
adc
dec
pop
int3
hlt
push
imul
aas
mov
mov
into
sub
pop
sbb
daa
xorb
mov
or
mov
mov
mov
gs
mov
push
cmpsb
into
or
and
adc
sub
pop
push
and
aad
mov
inc
addb
nop
push
leave
sahf
mov
fbld
cltd
sub
xchg
test
mov
outsl
inc
fcom
push
dec
mov
mov
out
push
mov
add
lods
loop
pop
sar
inc
outsl
or
or
loopne
push
shll
inc
movsl
pop
leave
and
sub
ficomps
lock
aad
pop
out
ds
stc
cmp
push
stos
outsb
cltd
jne
jl
hlt
test
insl
daa
jg
icebp
mov
shrb
fisttps
clc
out
xor
cmp
test
test
sarb
loop
xchg
test
xor
enter
scas
or
fistps
loop
dec
loope
into
dec
xchg
jg
aaa
into
adc
pop
test
fdivs
jmp
repnz
rcl
inc
add
or
sbb
pop
in
sbb
hlt
adc
mov
cmp
fstpl
xchg
movsl
lods
call
loopne
int3
jne
xor
cwtl
or
pop
inc
cmp
dec
aam
pop
decb
add
clc
sub
fwait
pop
not
cmp
cmpsb
mov
bswap
push
cmpsb
aas
aas
mov
jbe
or
imul
mov
jmp
xchg
jnp
xlat
jle
in
xor
js
ss
xor
inc
pop
int
aaa
cmp
aas
fprem1
popf
test
pop
into
or
lea
mov
dec
mov
push
bound
cltd
rcl
adc
shlb
mov
dec
jo
mov
jl
sbb
fsubl
mov
and
push
and
adc
xor
inc
cs
pop
loop
xor
scas
xchg
dec
xchg
inc
dec
jns
jmp
ret
cmpsb
xchg
and
xor
jle
notl
pop
lret
rclb
popa
jl
cmp
out
out
repz
insb
rorb
sbb
adc
mov
pop
mov
jmp
jge
xchg
push
sub
cltd
and
lret
scas
push
jmp
ljmp
push
inc
inc
push
mov
fisttpl
and
sub
sbb
std
stos
or
and
push
call
xor
push
push
push
out
pop
mov
inc
add
inc
fwait
loopne
mov
inc
xor
xor
push
icebp
enter
pop
mov
mov
decb
fisubrl
xchg
int3
jmp
mov
mov
dec
and
movsl
mov
shrl
xchg
dec
mov
das
ds
and
hlt
je
daa
das
ljmp
daa
xor
ja
sahf
mov
jne
test
ljmp
fcomi
es
pop
movsb
stos
inc
sbb
js
out
mov
jmp
loope
dec
adc
xchg
adc
leave
and
ss
push
push
push
pop
cs
cwtl
jo
ss
cmp
popf
mov
xor
decl
sbb
sbb
mov
dec
jl
xorl
jb
sti
ljmp
pop
xchg
ret
push
popa
dec
and
dec
sub
int
xchg
ljmp
xor
xchg
cmp
mov
es
mov
pop
mov
js
pop
pushf
add
fisubrs
insl
lods
adc
mov
push
jmp
inc
add
adc
add
cmp
add
add
push
imul
loop
mov
and
lea
xchg
sbb
jnp
mov
sbb
addl
rcr
cmp
pop
sbb
ljmp
call
cmp
stc
hlt
and
out
dec
adc
test
mov
lea
ret
xlat
mov
inc
mov
adc
out
fmull
sahf
add
pop
jae
dec
xchg
dec
insb
in
sub
rclb
sbb
lahf
mov
inc
fnstsw
xor
mov
out
fwait
cmp
sbb
or
out
push
xlat
stos
mov
pusha
cmp
cmp
ret
fiaddl
fists
xchg
cld
adc
repnz
insl
push
icebp
orl
pop
pop
xchg
test
push
hlt
sbb
clc
nop
ret
dec
movsl
test
dec
or
rolb
scas
hlt
jge
fstpt
das
ficompl
data16
mov
stos
xor
inc
dec
lea
stos
push
mov
into
mov
cld
push
cmp
fdivrp
jmp
pusha
add
jmp
dec
aaa
popa
fcmovb
leave
push
push
jbe
sbb
push
add
cmc
cmp
out
sub
lret
xor
adc
repz
mov
pop
push
cmp
scas
iret
jg
mov
mov
sbb
xchg
aaa
outsl
in
inc
pop
test
push
repz
inc
add
or
lret
movsw
insl
mov
shrb
aas
out
cwtl
jae
scas
sbb
out
add
adc
inc
xchg
cmp
outsl
imul
notl
sbb
js
and
scas
shll
cmp
lods
sar
addb
testb
andl
push
push
pop
loope
popa
and
xchg
add
out
lret
cmp
gs
lods
xchg
cli
xor
xchg
andl
mov
imul
push
mov
pop
aas
fcoms
insb
fimuls
mov
es
sub
out
cmp
in
dec
fdivrs
jg
cmpb
pop
mov
xchg
adc
scas
fwait
mov
add
popf
push
xor
sub
mov
add
cmpsl
loop
or
push
test
cmc
mov
sysret
push
push
jp
pushf
pop
test
loopne
hlt
seto
mov
std
mov
jne
xchg
mov
and
lock
dec
sahf
xlat
aaa
das
mov
lea
cmp
decb
imul
add
pop
mov
gs
lcall
setne
sti
sarl
lock
sub
or
mov
pop
bound
pop
loop
mov
in
push
dec
lret
mov
xor
xor
push
xor
or
loopne
fnstcw
movsb
or
lret
push
into
push
fildl
lahf
hlt
cld
jb
sbb
push
shl
sbb
push
arpl
dec
out
and
je
clc
inc
outsb
stos
andl
cmp
mov
mov
sub
ds
addr16
mov
jmp
mov
or
popa
lods
pop
hlt
inc
mov
pushf
test
add
push
aaa
arpl
out
shlb
sub
out
jno
repz
repnz
or
insl
and
cld
sub
and
dec
cld
xor
and
aas
pop
pushf
ljmp
das
mov
rcll
mov
push
cmp
or
or
dec
mov
jmp
push
ljmp
jmp
inc
int3
push
xor
jmp
inc
daa
ljmp
sub
mov
mov
xchg
push
lahf
mov
test
mov
xchg
dec
in
fidivrl
clc
in
lds
jl
fidivs
ss
gs
add
add
push
roll
popf
in
divl
stos
stos
loope
jp
orl
mov
cmp
rclb
lods
stos
cmp
fldenv
icebp
fmuls
mov
shlb
in
loop
adc
mov
arpl
mov
xchg
sub
push
add
add
xchg
mov
leave
dec
icebp
insl
pop
mov
sbb
jb
pop
inc
pop
dec
push
test
add
imul
mov
cs
outsb
mov
loope
pop
das
xor
mov
enter
insl
out
mov
mov
outsl
das
push
nop
jg
cmp
ret
aas
js
push
decl
pop
jo
mov
push
jae
push
push
fstps
push
ret
mov
jmp
wbinvd
adcb
leave
testb
repnz
jecxz
std
push
add
push
dec
push
mov
rcrb
pop
lds
sti
jbe
and
mov
push
mov
jbe
jecxz
nop
sbb
ret
jmp
mov
pop
xchg
mov
or
rcrl
rorl
mov
int
callw
orl
add
push
jne
lret
sub
sub
std
pop
jne
mov
fists
inc
dec
add
add
rclb
aaa
mov
imul
jne
xchg
mov
sub
and
mov
inc
data16
aas
outsl
jno
or
jmp
lret
sub
mov
jle
add
stos
xchg
call
imul
out
aaa
add
mov
cmp
js
fstpl
adc
xchg
mov
jnp
sub
jbe
popa
push
sub
lret
cmc
jb
movsb
xchg
ss
pop
fdivl
int
stos
dec
sbb
inc
fdiv
sub
add
xchg
adc
push
bound
outsb
add
inc
or
loope
ret
xor
nop
pop
cli
push
in
jns
jns
xor
pusha
dec
mov
hlt
inc
mov
xchg
into
icebp
dec
roll
mov
arpl
mov
cld
dec
sbb
xchg
dec
inc
test
aad
inc
jns
and
dec
loope
push
daa
mov
mov
mov
jecxz
test
mov
push
or
loopne
mov
xchg
in
cmpsb
add
sahf
shlb
scas
stc
out
cltd
mov
leave
fs
pop
mov
inc
dec
mov
adc
lods
or
mov
push
ljmp
nop
jge
xchg
imul
bound
mov
and
adc
cmpl
lret
int3
inc
lret
inc
jne
jl
and
nop
in
fcoml
fiaddl
xchg
sub
dec
mov
je
movsb
lahf
mov
cmpsl
lea
jns
pop
mov
add
and
mov
ficoml
push
dec
out
push
sub
inc
aam
gs
mov
or
dec
leave
mov
test
cmp
cmp
dec
out
mov
dec
jns
mov
fbld
mov
lret
jle
gs
pop
enter
and
in
ja,pn
rorl
lret
shlb
xor
xor
sbb
sub
shrl
dec
adc
aad
jp
add
sbb
ljmp
sahf
dec
xchg
and
jno
mov
test
fidivl
pop
enter
incl
das
cmp
cmpsb
sbb
sub
or
sbb
dec
mov
dec
call
sahf
add
push
les
lds
mov
mov
cltd
out
jnp
jno
mov
addr16
pushf
add
xchg
xchg
mov
int
pop
movsb
dec
and
ss
sub
ja
leave
cmp
cmp
pop
mov
jle
jnp
mov
jb
push
cmp
test
stos
insb
into
sbb
add
loopne
in
aaa
jl
dec
xchg
push
xor
push
aaa
scas
out
inc
cmp
and
fwait
xlat
and
repnz
pusha
imul
jge
pop
inc
inc
bound
mov
adc
enter
bound
or
sub
addr16
popf
fidivs
mov
push
jbe
pop
ret
cltd
jbe
mov
push
xchg
adc
insb
cmpsl
xlat
adc
dec
mov
in
dec
icebp
imul
mov
in
sub
subb
das
shll
sbb
push
inc
test
imul
mov
pop
xchg
test
add
out
sbb
lea
inc
push
push
mov
sub
or
adc
jbe
lds
mov
dec
sbb
xor
mov
jg
inc
xorl
jnp
push
rcll
inc
ret
jecxz
sub
dec
xchg
mov
das
sbb
inc
push
shlb
and
dec
stc
aad
mov
enter
fs
lds
enter
push
push
inc
adc
pushf
adc
call
pop
lods
mov
push
xchg
mov
mov
xor
cmp
mov
std
stos
insl
xor
notl
loop
ljmp
outsb
jmp
fdivrs
mov
push
cld
add
arpl
mov
fs
mov
imul
dec
arpl
sti
pop
add
jbe
fdiv
xchg
xorl
das
mov
dec
jg
sbb
cmp
mov
mov
push
or
and
xchg
mov
xchg
iret
insl
sarl
push
lods
fs
arpl
mov
arpl
dec
cmc
mov
outsb
inc
xchg
sbb
fs
inc
mov
push
int3
repnz
mov
xorl
in
add
lods
loop
push
fistpl
addr16
jne
sahf
cwtl
aam
aad
icebp
xor
xchg
test
xchg
loopne
and
repz
inc
inc
dec
xchg
les
and
push
sbbl
xchg
mov
push
mov
xchg
jp
loope
add
sbb
hlt
mov
stc
or
cmpsb
push
jo
push
ret
mov
lock
xor
jmp
into
dec
andl
or
push
sbb
xor
arpl
inc
jge
sub
push
pop
sub
jns
lods
add
dec
xor
xor
jbe
leave
call
hlt
mov
jae
xor
ret
movsl
fistps
das
mov
lods
cmp
sahf
pop
mov
xchg
and
cld
pop
or
stos
aam
sbb
out
pusha
inc
das
xchg
push
add
lcall
adc
movsl
lds
icebp
push
cmp
movsb
outsl
out
icebp
sti
mov
jnp
mov
xorb
aam
jb
adc
out
jg
popa
shrl
or
rorl
lahf
sbb
mov
fwait
or
or
loope
fnstcw
adc
sbb
scas
sahf
jle
or
test
push
push
clc
cmp
je
outsl
pop
xor
rcl
adc
pop
push
mov
aam
clc
xchg
scas
insb
pop
gs
mov
adc
in
inc
pop
mov
pop
cltd
add
sub
xlat
mov
mov
enter
les
into
sbb
pop
xor
add
out
sahf
push
mov
xchg
test
add
addl
mov
xor
or
cmp
or
mov
std
cmp
adc
rorb
cmp
and
icebp
mov
lcall
mov
daa
add
pushl
adc
mov
in
or
mov
pop
insl
arpl
mov
addr16
jnp
sbb
scas
inc
cmp
push
jle
les
pop
push
mov
das
sbb
inc
xor
xchg
push
or
dec
shll
in
lea
add
ja
fisubl
stos
lcall
xchg
xor
cmp
or
ja
pusha
jnp
xlat
xor
inc
in
es
dec
xor
dec
call
mov
push
mov
and
das
in
loop
insl
jmp
xchg
ss
adc
jmp
push
jecxz
sub
jl
or
and
jbe
inc
xchg
pop
sub
mov
jb
sbb
inc
mov
repz
pop
rol
and
jnp
xchg
mov
jb
mov
dec
pop
and
inc
mov
and
mov
sarb
cmp
mov
push
mov
jle
inc
or
pop
pop
cs
int
dec
jns
movsl
xlat
ljmp
in
rcll
gs
jae
cmp
addr16
add
test
sub
or
cmp
xor
xchg
test
inc
sbb
inc
hlt
je
jle
cmpsb
movsb
inc
pop
sbbb
fucomip
imul
repz
mov
push
lods
or
or
and
test
inc
inc
or
or
outsb
inc
lret
xor
cwtl
sbb
push
iret
push
frstor
mov
out
sbb
xchg
adc
les
test
repz
cmp
jne
xchg
or
icebp
movsl
movsb
fiadds
mov
sbb
inc
pop
inc
cmc
outsb
iret
xor
sarl
ss
and
jg
mov
push
xor
fsts
xchg
push
int3
repz
cmp
mov
xorb
cmc
xor
insl
xchg
mov
xor
cmp
pop
mov
lar
stos
imul
adc
sbb
jge
or
sbb
xchg
int
or
mov
lea
aaa
out
adcl
rcll
les
dec
fwait
idivl
pop
cmp
cmc
cmp
movsb
shrl
orl
mov
pushf
mov
daa
jns
and
jmp
subb
imul
mov
adc
add
sbb
push
lcall
int3
out
mov
mov
and
sub
std
xchg
xchg
cmp
into
lcall
mov
cmp
mov
dec
shl
shll
adcl
jp
outsl
enter
pop
dec
fmull
push
xor
adc
je
bound
fbld
out
jae
and
xchg
aaa
push
test
xchg
pop
mov
fwait
sbb
pop
stc
mov
mov
lods
push
popf
mov
sbb
mov
sbbb
xor
test
inc
in
lods
mov
pusha
xor
dec
add
fcoms
es
js
sub
jne
pushl
pop
scas
xchg
std
icebp
mov
mov
bound
popf
jae
sub
or
rorl
adc
lea
mov
mov
aaa
jl
pop
rcrb
pop
stos
add
sbb
test
je
jl
xor
ret
test
xor
sub
mov
push
int3
pop
push
es
inc
add
fdivp
enter
sti
adc
push
and
xor
shr
sub
cmpsl
enter
outsb
mov
stos
lock
in
leave
test
cld
inc
cmp
cs
pop
or
cwtl
mov
je
sbbb
fstl
cwtl
adc
cmpsb
sbb
fistpll
out
dec
push
int
lahf
xor
mov
jp
cmpsb
fildll
aaa
lods
pop
push
into
mov
rcr
xchg
cmc
cmp
mov
mov
push
rcll
into
into
jbe
jl
andb
sub
inc
sti
pop
aad
and
xor
mov
cltd
popf
jbe
mov
adc
cld
adc
cli
mov
and
jp
pop
mov
and
je
mov
xchg
inc
jbe
movsb
xchg
xchg
mov
xchg
imul
into
sbb
cld
cmp
jge
insb
dec
imul
enter
mov
mov
xchg
fidivrs
xchg
pop
je
add
cmp
mov
xor
pop
push
ret
out
sub
or
les
outsl
hlt
mov
xchg
subl
or
hlt
rcll
fwait
dec
fdivrs
adc
scas
mov
add
mov
push
or
aam
jge
es
js
sbb
daa
mov
mov
shr
xchg
ret
or
push
cmpsb
loop
pop
iret
or
xlat
movsb
dec
inc
mov
mov
mov
or
cmp
mov
pop
push
icebp
out
fidivs
or
mov
aas
xchg
sbb
fdivs
mov
jg
ds
int
sub
gs
scas
je
mov
bound
push
pop
and
or
lods
mulb
xor
shll
mov
fstpl
testl
push
cltd
out
gs
nop
lahf
aas
and
inc
push
cmp
sbb
rcrb
push
negb
pop
clc
jae
jbe
and
je
cmp
cwtl
sarl
mov
mov
lods
es
shrl
mov
pushf
scas
cmp
ja
int
inc
jns
mov
ret
jnp
mov
imull
jl
les
adc
mov
xor
data16
mov
mov
bound
sub
aad
lret
lret
jae
xchg
xchg
sbb
jbe
je
into
test
lcall
and
rorl
sub
stos
add
pop
push
insl
nop
pop
addl
pop
mov
xor
popa
test
insb
sbb
fidivs
xor
orb
mov
loopne
roll
add
adc
sub
mov
fcoml
cld
pop
sub
ret
cltd
xchg
pusha
xor
sbb
outsl
fwait
icebp
sub
adc
xor
repz
sti
ljmp
and
pop
in
xlat
xchg
sub
shl
test
lea
sbb
push
mov
pop
pop
stc
in
mov
push
ja
push
xor
jge
jg
pop
xlat
xchg
jno
lahf
movsl
fists
out
int3
dec
sarb
dec
jle
sahf
sbb
fisubs
fildl
sub
mov
push
mov
push
fisubl
data16
cwtl
cwtl
idiv
aam
sub
test
loope
je
in
push
movsl
sub
pushf
xchg
mov
dec
loop
test
and
fs
pop
int3
test
fwait
cltd
mov
xchg
ljmp
into
mov
out
mov
xchg
sbb
js
mov
mov
cmp
stc
insb
or
xor
push
test
mov
dec
push
jmp
lret
sbb
test
sbb
mov
mov
or
push
inc
push
fsubl
adc
fwait
hlt
clc
rclb
popa
adc
gs
pop
dec
mov
adc
push
shrb
pop
push
ucomiss
mov
adc
push
in
inc
lds
xor
int3
gs
jnp
jae
je
ret
int
hlt
sub
jne
or
filds
mov
fldl
inc
mov
push
push
sbb
fwait
sarl
sti
bound
pusha
push
mov
xor
cmp
sahf
jno
jae
insl
mov
roll
add
jecxz
xor
sti
mov
imul
cmpsl
pop
inc
mov
scas
sbb
lahf
and
cmp
push
and
cli
inc
aam
lea
mov
daa
cmc
in
in
fxch
pop
bound
mov
mov
push
out
sub
xchg
cmp
clc
adc
mov
repnz
dec
adc
mov
ds
xor
pushf
and
fstpl
xor
lock
jle
jns
cs
call
and
pop
ja
mov
lret
call
xchg
push
aad
stc
xchg
dec
loope
in
xor
loop
stc
cmc
imul
std
jns
aaa
jecxz
loopne
xchg
mov
inc
push
mov
add
or
movsl
sub
push
fldl
inc
or
repz
and
xorl
scas
pop
int
out
push
es
dec
mov
outsb
cwtl
mov
mov
add
push
negl
and
decb
sbb
push
add
jns
jbe
cwtl
cmp
xchg
mov
adc
cltd
nop
fldenv
cmp
ss
movsl
loopne
fwait
push
push
test
mov
mov
sahf
inc
jae
mov
adc
mov
xor
mov
daa
jbe
loope
shlb
sbb
daa
xchg
xlat
xchg
push
mov
lcall
or
das
mov
testb
sti
scas
test
repnz
add
aaa
xor
shl
jbe
into
or
mov
fs
dec
scas
popw
in
xor
addb
adc
lcall
or
daa
or
push
sahf
lock
xchg
repz
dec
aaa
sub
call
mov
test
inc
xor
int
shrb
in
ds
popa
data16
mov
push
testb
clc
add
push
lret
mov
ljmp
jecxz
xor
sbb
mov
pop
cmp
push
jge
jle
sub
test
xchg
jbe
push
xchg
loop
aad
cmp
in
fsubl
add
shll
in
aaa
stos
add
cltd
push
sbb
mov
loopne
jp
cltd
fs
sub
push
popf
mov
lret
mov
outsb
xor
shlb
and
push
sbb
jl
arpl
dec
xchg
sbb
scas
push
mov
inc
pop
jmp
jne
stc
xor
sub
cmc
sbb
inc
xchg
mov
mov
xor
pushl
inc
jne
inc
sbb
fwait
sbb
jae
std
inc
jbe
jmp
dec
push
inc
xor
shr
and
rorl
jg
and
jno
repnz
xor
sbb
jg
add
cmp
jnp
xchg
je
mulb
ss
and
sub
mov
inc
in
loope
test
imul
aad
test
sti
orl
sbb
lods
xor
fidivs
pop
out
mov
cmc
int
mov
sti
test
inc
mov
mov
filds
popf
jp
test
push
shrl
into
mov
inc
xor
jmp
rcl
xchg
xchg
pop
xchg
cwtl
fcompl
inc
lret
sahf
mov
pop
lcall
iret
jl
jbe
xchg
mov
cli
sarb
xor
cmp
lds
enter
xor
test
push
gs
mov
or
mov
mov
pop
mov
dec
movsb
lret
cmp
sub
in
popf
xlat
cli
movsb
push
xor
pop
inc
dec
sbb
jmp
lock
rcrb
mov
adc
sub
push
stc
in
scas
inc
cli
and
sbb
stos
int3
adc
adc
and
push
enter
test
stc
mov
xchg
fwait
scas
out
sbb
xchg
fs
scas
dec
xchg
jne
cmp
mov
pop
out
icebp
test
mov
cmp
es
leave
push
add
mov
dec
ret
pop
es
ret
shll
xchg
lret
xchg
push
lcall
sbb
sbb
pusha
mov
xor
out
sbb
mov
push
add
ret
clc
mov
les
adc
aam
or
sarl
inc
push
or
leave
xchg
push
sti
xor
mov
shlb
adc
daa
mov
add
ljmp
addl
ds
loopne
pop
popf
hlt
push
fwait
into
aaa
jl
dec
fs
cmp
je
sahf
jns
test
fwait
lds
dec
jp
int3
lods
jmp
inc
popf
or
adc
jecxz
popf
pop
popa
push
xchg
je
or
in
icebp
ss
xchg
jno
leave
pop
mov
xchg
or
fwait
jg
repz
and
lock
push
jg
arpl
into
jecxz
push
dec
and
in
push
sub
push
jmp
xlat
sub
shrb
les
sub
rcr
mov
cltd
mov
add
xchg
sub
scas
mov
mov
inc
lahf
inc
fwait
repz
dec
lahf
fdivs
int3
and
pusha
add
and
push
movsb
sbb
mov
mov
adc
lods
iret
out
sahf
sbb
adc
pop
and
push
lds
mul
hlt
or
ss
and
mov
push
or
lods
mov
jge
inc
loop
mov
jle
shlb
mov
lds
xor
pop
mov
movb
mov
sub
into
sbb
xor
push
push
nop
xchg
pop
rcrl
repz
or
daa
mov
shrb
cmpsl
pop
push
jp
sti
adc
dec
mov
xor
shrb
sti
inc
jecxz
lahf
scas
xor
cmc
outsb
imul
or
inc
sti
fcomp
xor
inc
in
sbb
mov
dec
mov
das
pop
ljmp
xchg
mov
xchg
inc
lds
rclb
adc
xchg
jns
cwtl
mov
mov
inc
adc
nop
fmull
inc
loopne
fwait
mov
int3
movsb
repnz
mov
xor
push
popa
jp
popa
and
mov
shlb
lcall
push
jp
sti
mov
sbb
addr16
subl
mov
sbb
and
sbb
dec
cmp
dec
repnz
out
std
stc
je
outsl
mov
xchg
fisubl
mov
test
xor
jbe
and
add
push
push
jo
jb
and
andl
cmp
xor
repnz
adc
push
inc
add
cmp
call
lock
sbb
mov
adc
mov
aad
push
bound
dec
hlt
pusha
mulb
mov
mov
sub
jb
sbb
fimuls
jno
pop
xor
rorb
imul
out
jmp
pushf
dec
cs
push
icebp
inc
adc
dec
and
add
mov
sbb
mov
sub
imul
push
or
adc
je
out
shlb
stos
mov
dec
les
push
std
sub
pextrw
sbb
repnz
xchg
jle
inc
adc
xchg
cmc
dec
mov
pop
insl
fsubs
into
sbb
sbb
stos
mov
inc
dec
mov
repnz
aas
imul
out
das
scas
inc
shll
pop
pop
xor
les
inc
dec
into
dec
add
fcoml
cs
jb
add
loop
dec
dec
icebp
sti
int
stos
loop
leave
dec
fisubl
pop
pop
stos
pop
sub
push
fiadds
lcall
adc
dec
sub
push
pushf
jl
mov
or
xor
jge
or
fwait
push
mov
pop
dec
cs
out
repz
cmp
adc
lahf
movsl
out
adc
mov
int
dec
jnp
add
push
mov
lods
mov
cmpsl
push
addr16
cli
push
mov
das
push
cli
cmpsb
push
cld
mov
mov
addr16
pushf
cmp
inc
lcall
fs
add
jg
sub
repz
fwait
jle
jecxz
adc
shll
das
cmp
and
jb
scas
fistpl
push
ficomps
add
or
inc
mov
sbb
inc
cld
fwait
call
jns
out
sub
loop
rolb
xchg
ljmp
std
insl
movsb
dec
data16
shll
jnp
aas
addr16
stos
hlt
testb
and
negl
and
movsb
and
pop
pusha
ljmp
jo
ret
in
jb
into
mov
imul
push
mov
xchg
outsl
je
out
mov
gs
mov
sbb
sbb
jle
jmp
xchg
pushf
leave
daa
call
mov
cmp
outsl
test
push
cld
jnp
mov
icebp
daa
pop
leave
mov
repz
or
outsl
adc
mov
js
sub
cltd
mov
mov
sahf
inc
and
sbbb
fs
lcall
mov
pushf
fwait
clc
popf
mov
arpl
dec
imul
jge
or
cmpsb
loopne
jl
lahf
loopne
loop
into
mov
jnp
fisubs
out
jmp
push
addr16
iret
pop
andb
push
cmpsb
sti
or
ja
vpshufhw
and
cmp
aad
std
pop
cmpsl
aad
mov
leave
lods
mov
lahf
stos
pop
in
repz
inc
pop
or
and
jle
out
iret
jmp
push
out
cmpsb
imul
jecxz
inc
mov
jbe
xchg
es
or
outsb
jbe
imul
lock
sbbl
icebp
stc
test
mov
jnp
fwait
inc
jle
das
call
jbe
mov
or
mov
aam
int3
loopne
fld
leave
jo
cmp
cmp
jno
lea
add
push
adc
sbb
push
mov
loop
sbb
pop
into
lock
and
mov
or
cltd
pop
stc
fildl
add
mov
dec
roll
push
add
push
and
inc
xchg
fimuls
xchg
mov
jbe
stc
pop
insl
pushf
or
es
push
or
cmc
push
xor
cmp
in
insb
repnz
dec
daa
lods
arpl
add
fs
inc
addr16
xchg
imul
mov
jnp
cwtl
aad
outsl
movb
out
push
mov
pop
jmp
push
insl
and
pop
add
or
in
dec
or
pop
jnp
mov
sub
xor
jns
mov
je
dec
sbb
incl
lea
xchg
mov
mov
and
pop
mov
out
aaa
lcall
pop
inc
dec
adc
mov
cmp
sbbb
out
subps
dec
pop
xchg
sub
inc
insl
lcall
xchg
bnd
cmp
out
or
push
dec
out
movl
add
or
or
test
cmpl
fsubs
sbb
add
push
sub
push
jle
xchg
out
movsl
sbb
insb
jmp
fstpl
xchg
les
sbb
sub
inc
sbb
out
adc
je
fbld
xor
loopne
jle
add
push
pop
mov
das
fwait
in
mov
inc
jge
into
or
mov
pushf
ljmp
adc
out
adc
ja
int3
dec
xor
jl
sbb
stos
xor
mov
xor
loop
push
add
frstor
jge
mov
loope
dec
call
out
and
ss
cmpsl
pop
stc
mov
into
and
in
test
lds
sahf
mov
sti
cmp
gs
push
pop
push
push
jmp
popa
les
stos
stc
fmulp
mov
fwait
mov
xchg
lcall
loop
and
cmp
cmp
add
cmc
lods
cmpsl
xchg
sbb
add
in
iret
add
xor
outsl
mov
cmp
fiadds
sbb
lret
mov
or
test
sub
inc
add
jge
lcall
lret
mov
xchg
insb
push
mov
dec
and
shl
push
repz
sub
adc
sbbl
add
aaa
sbb
xchg
mov
sarl
xchg
aad
push
sbb
loop
bound
adcb
lods
and
stc
in
lret
inc
in
fcompl
in
mov
arpl
rorl
adc
pop
cli
stos
push
das
pop
in
inc
imul
popf
fwait
xchg
sbb
mov
xchg
movsb
cmp
mov
iret
jne
ret
mov
cmp
jp
jmp
in
outsb
subb
les
or
mov
cs
jle
push
insl
mov
inc
ljmp
addl
ja
int
aaa
pop
jbe
cwtl
xlat
out
ret
adc
mov
jecxz
das
cmp
mov
not
push
mov
mov
stos
jecxz
push
cmp
negb
movsl
icebp
rcll
jne
in
add
loope
xor
jae
and
xchg
cmc
loopne
std
enter
sahf
or
mov
movsl
add
lea
mov
dec
mov
stos
ret
jge
mov
test
xlat
inc
inc
outsb
addb
xchg
mov
dec
insb
or
mov
mov
mov
out
pop
jb
xor
loopne
out
addr16
aam
scas
mov
insb
dec
addr16
js
jecxz
pop
int
or
adc
sbb
fmul
add
movb
out
sub
jns
cmp
add
mov
inc
pop
push
adc
in
outsl
lea
int3
inc
mov
mov
push
and
aaa
sbb
shll
mov
pop
pushf
lret
cmpl
les
xor
cmp
in
push
daa
test
mov
arpl
sub
mov
jns
fldt
jae
cli
cmp
and
xor
scas
sarb
push
repz
mov
mov
rolb
test
in
rcrb
imul
ret
push
lcall
sub
sahf
gs
pop
pop
xlat
sub
insb
mov
insb
sbb
daa
into
sub
mov
mov
aad
je
out
pop
push
insl
jecxz
mov
pusha
jl
inc
mov
fdivs
test
xchg
cmc
sub
mov
lret
sbb
imul
cmc
lcall
xchg
cli
mov
mov
mov
je
mov
div
and
xor
xchg
bound
rcrb
test
fwait
lahf
shlb
jg
xor
inc
or
jae
inc
sbb
mov
and
push
push
nop
push
mov
test
ss
pop
fimuls
mov
adc
sbb
scas
cwtl
jmp
mov
fildl
fldt
mov
leave
pop
cwtl
mov
push
enter
in
test
cltd
mov
and
scas
aas
and
push
and
jno
cmp
xchg
push
test
xor
sbb
scas
sbb
ljmp
cwtl
mov
pop
sbb
inc
xchg
repnz
in
push
and
out
fs
movsl
inc
aaa
js
aaa
adc
jae
test
bound
jns
xchg
push
in
xor
lds
lea
lds
aaa
outsb
loope
iret
movsl
andb
mov
pop
xchg
lret
cmp
repnz
out
add
mov
pop
pop
and
xchg
bound
inc
lea
test
lret
shll
mov
mov
pop
cmp
ss
fcoml
add
enter
les
ror
inc
push
mov
xchg
stos
lock
add
insl
cmp
lea
xor
sti
lret
mov
scas
add
adc
loopne
pushf
sbb
jbe
adc
xchg
push
pop
or
fdiv
pop
push
lahf
popf
pextrw
or
shlb
jno
int
mov
adc
enter
call
mov
mov
mov
push
push
push
jb
xor
dec
xchg
sbbb
mov
clc
jns
gs
pusha
dec
loope
cmpsl
jno
mov
dec
loope
dec
popa
movsl
ficoml
icebp
cltd
nop
fucomi
mov
xchg
lret
push
rcrb
mov
jnp
sub
add
out
cld
dec
xchg
shlb
sub
lret
sarl
add
xchg
mov
enter
icebp
les
shl
pusha
add
pop
stos
or
inc
les
jae
cmpsl
aad
push
lods
call
add
imul
or
cmpsl
data16
shll
fwait
xchg
jo
sub
inc
pushw
aad
adc
xorl
xchg
xor
adc
push
cltd
push
incl
out
shll
xchg
fwait
jmp
pushf
mov
stos
bound
pop
cmp
fisttpll
add
and
notl
outsl
adc
imul
push
pusha
and
fcompp
aaa
mov
pop
je
push
add
das
adc
cmpsb
iret
mov
call
add
outsb
into
push
or
inc
jo
lret
out
out
sub
sbb
jecxz
aas
adcl
sub
pop
movsl
addl
popf
cmpsb
add
and
pushf
cwtl
daa
xor
icebp
imull
push
adc
test
jecxz
mov
movsl
pop
add
push
mulb
stc
imul
pop
fcomps
push
pop
gs
push
pop
mov
sahf
or
test
mov
cmp
hlt
gs
or
xlat
mov
movsl
sarl
add
bound
out
mov
cli
aaa
sti
push
push
dec
jae
cmp
ds
lds
loope
pop
xchg
mov
inc
jbe
outsl
ljmp
mov
xor
dec
enter
daa
jg
sub
xchg
icebp
and
pop
push
jae
gs
inc
inc
out
scas
popa
inc
xor
in
test
or
ret
sbb
sub
cmpsb
sbb
mov
mov
jle
cwtl
daa
inc
and
xlat
test
ljmp
lea
loopne
add
jl
sub
lret
add
lahf
lods
or
stos
es
into
aad
dec
xchg
es
lock
out
or
icebp
pop
sbb
push
lret
and
sub
mov
sub
arpl
sti
pop
cmp
aam
les
imul
and
icebp
lds
cmp
aam
les
inc
mov
lock
xor
cmp
mov
adc
in
dec
inc
lahf
ret
mov
cmpsb
sbb
out
daa
add
hlt
cmc
ja
sbb
jbe
sbb
fs
aaa
test
xchg
ret
fildl
into
jp
jne
push
jecxz
shl
cli
outsb
or
sub
rcrb
and
pop
pushf
fldl
mov
xor
and
mov
push
fimull
push
xchg
cs
pop
loop
jg
jecxz
and
hlt
mov
sbb
sbb
aad
mov
test
clc
fdivrp
cmc
mov
ds
in
rcrb
jg
dec
pop
dec
decl
insl
sti
xor
fstpl
insl
sahf
jge
push
xor
lock
stos
cmpsb
sub
cmp
push
adc
cmp
out
jecxz
leave
jno
dec
ds
cltd
sub
mov
ret
mov
in
mov
lods
nop
test
roll
mov
iret
mov
fwait
xchg
cwtl
jge
add
sub
aaa
lret
int
int
jo
add
shll
divb
frstor
inc
movb
push
decb
mov
jp
jmp
cmp
test
mov
mov
and
push
sahf
pop
in
or
rorb
nop
arpl
mov
adc
aaa
hlt
fcom
jl
inc
xchg
aad
sbb
pusha
in
mov
sub
mov
movswl
add
xor
jl
xchg
or
and
xchg
adc
add
pop
jbe
fildll
add
ljmp
je
jl
rclb
scas
push
xchg
fbstp
mov
or
fnstcw
scas
bound
inc
mov
in
mov
frstor
adc
jg
addl
fstl
mov
mov
push
jns
sbb
adc
push
in
mov
sub
lahf
sti
orl
and
in
push
out
nop
mov
loope
popl
push
cmp
inc
ljmp
inc
xchg
sub
dec
push
and
push
mov
or
repz
out
inc
in
jg
sbb
add
lods
cltd
test
fwait
testb
jp
ret
test
mov
add
fistpl
mov
sub
out
xchg
add
xor
mov
icebp
add
mov
mulb
addl
and
pushf
and
cmpl
mov
das
xorl
sbb
mov
sarb
jecxz
aad
int3
cmp
stos
adc
jbe
int3
je
push
pushf
cmp
repnz
dec
repnz
pushf
and
lods
scas
iret
and
push
call
jle
cmp
out
imul
xor
xor
movsl
sti
mov
add
adc
push
push
call
pop
xlat
pop
push
repz
in
push
aad
jge
push
mov
adc
daa
mulb
ljmp
pushf
imul
je
rcrl
mov
sbb
hlt
xlat
movsl
xor
push
jl,pn
mov
aam
add
adc
push
jmp
sbb
imul
addb
fdivrl
das
mov
in
test
xchg
or
xchg
jnp
pop
mov
outsb
mov
mov
addr16
sbb
adcl
lahf
mov
xchg
jmp
call
icebp
or
sub
jae
add
jns
test
adc
int3
lods
in
and
cmc
mov
out
out
rcrb
fistpl
xchg
push
cwtl
or
jge
sbb
enter
faddl
stos
mov
int3
dec
aad
lock
pop
push
cwtl
cmp
adc
xchg
cmp
jb
ds
mov
xor
sarb
pop
sahf
add
dec
pop
push
sbb
sbb
mov
xlat
insb
push
into
push
mov
pop
insb
and
and
shll
out
mov
mov
js
bndstx
mov
lret
add
xchg
ret
mov
loopne
cmp
jl
in
mov
or
loopne
sbb
aad
cmpl
jecxz
or
imul
in
fs
inc
insl
mov
mov
xchg
sbb
test
cld
ret
in
and
cmp
mov
add
adc
sub
add
mov
xor
inc
in
test
or
or
ss
imul
pop
jle
pop
test
ds
jbe
xor
hlt
add
xchg
incw
add
test
pop
pusha
leave
mov
jb
iret
data16
fimuls
movsb
cwtl
jmp
fadd
mov
xor
cmp
adc
testl
bound
adc
in
jnp
xchg
xchg
hlt
xchg
movsb
nop
mov
lds
mov
pop
lds
outsb
lock
jne
std
mov
xchg
mov
icebp
inc
hlt
loop
aaa
mov
adcb
cli
push
setnp
push
cmp
pop
xor
pop
call
jp
inc
sar
stos
negb
adc
mov
sub
cmp
xor
pop
scas
push
cmp
sub
add
fisubs
pushl
pusha
xchg
fmuls
fisubrs
mov
std
mov
xchg
inc
jns
xchg
push
iret
add
outsl
leave
imul
scas
mov
xorl
lcall
shrl
stos
inc
mov
cmpsl
sub
mov
out
mov
push
pop
das
outsl
std
adc
sub
jb
test
movsb
out
fisttpl
ja
imul
in
mov
sbbb
pushf
mov
adc
jle
cmp
xchg
jbe
out
orb
dec
test
sahf
test
mov
or
lahf
scas
lahf
mov
int
cwtl
js
imul
dec
lahf
in
push
cld
jg
imul
hlt
data16
mov
adc
negl
xchg
rcl
daa
data16
pop
iret
shrb
fadds
leave
add
mov
test
vcvtdq2pd
jb
sub
xchg
decl
dec
pop
pop
cmpsl
sub
enter
push
fldenv
mov
pop
xchg
cld
push
iret
pop
pop
sar
pop
je
iret
jg
and
mov
xor
add
mov
insb
insl
mov
orb
push
std
inc
cli
dec
jmp
ret
imul
pop
in
stos
arpl
lea
leave
inc
std
lahf
pop
and
jno
into
push
xchg
cmp
dec
or
stos
dec
push
pop
iret
ljmpw
jl
pop
dec
ret
xor
icebp
int
mov
ret
in
stos
cmp
push
jle
int
and
mov
xorb
call
nop
adc
xlat
mov
in
std
push
inc
out
mov
int
adc
movsl
mov
and
add
out
dec
in
cmp
adc
jno
inc
pushf
mov
sbb
imul
add
mov
lods
pop
xor
sahf
cmpsb
insl
push
push
test
rclb
mov
add
jns
cltd
pop
dec
scas
insb
xor
lock
adc
insl
mov
cli
pop
aam
fcmovu
loopne
and
je
jl
lret
mov
lods
loop
sub
lret
movsl
test
cmp
scas
mov
jno
or
es
arpl
cmp
sub
push
mov
into
aad
fwait
dec
repz
xchg
fidivl
mov
sub
mov
push
pop
fbld
jmp
pop
int
mov
hlt
push
outsl
push
jo
mov
xor
sarb
outsl
adc
iret
outsl
aad
shlb
cmc
xchg
inc
pop
loopne
cli
mov
fstpt
push
and
dec
jb
stos
lock
add
add
js
inc
jns
outsb
stc
in
xor
sub
fwait
ss
stc
mov
mov
je
or
dec
dec
in
add
dec
pop
shll
mov
dec
aam
in
xchg
pop
call
jg
cmpsb
inc
mov
and
loope
cltd
mov
sub
imul
movsb
inc
out
andb
xor
mov
xor
in
ret
fs
xchg
repnz
xor
mov
jp
lret
scas
push
inc
pop
sbb
lcall
scas
lods
mov
shll
mov
jp
cmp
pop
sub
xchg
jns
lea
pop
xor
push
push
ja
out
dec
push
sbb
mov
hlt
xchg
mov
or
cltd
mov
jne
in
jecxz
leave
adc
sbb
and
out
adc
sub
pop
mov
cmpb
xchg
call
jns
cmp
cmc
mov
cli
lds
push
and
pop
push
das
or
std
adcl
pop
push
pop
xchg
lret
dec
loope
add
fsub
jle
fcoml
jmp
sarb
lock
ret
stos
in
in
enter
mov
lahf
repz
out
jmp
int
cmp
in
cmpsb
adc
push
setae
sbb
or
cmp
je
gs
hlt
je
pusha
in
push
in
daa
sbb
mov
jp
cmp
icebp
cmp
adc
mov
lds
lret
enter
lret
dec
mov
sahf
subb
popa
pop
rcll
stos
pop
fimull
fnsave
cmpsl
lret
es
mov
xor
dec
filds
fldl
test
jge
mov
or
nop
inc
adc
cwtl
xor
lahf
add
enter
jg
push
ss
and
mov
pop
call
sbb
fcmovnb
inc
ret
or
sti
jae
ret
sbb
stc
je
ds
mov
jmp
fisubs
setns
add
mov
int
out
stos
call
sbb
add
sub
sarb
fwait
push
aad
inc
xchg
dec
xchg
je
xchg
dec
xchg
popf
sahf
int
aaa
test
cmp
cmc
mov
inc
push
pop
sbb
add
ret
daa
jmp
mov
fidivs
mov
push
lahf
aam
orl
in
in
mov
pop
cmp
inc
hlt
sub
cli
inc
xor
lcall
or
fbld
ds
mov
cwtl
mov
and
jecxz
mov
movsl
mov
jg
dec
mov
cmpsb
enter
mov
lods
addr16
iret
fldcw
arpl
xchg
or
xchg
out
push
or
jns
inc
adc
pop
scas
push
cmp
and
stos
arpl
jmp
stos
repnz
sbbl
es
sbb
dec
push
push
cwtl
xor
jg
dec
or
pushf
cmp
xchg
push
ret
call
inc
mov
jbe
fcmovb
hlt
jle
fsubrs
out
test
dec
sahf
mov
mov
push
mov
mov
lret
sbb
dec
fsubrl
in
cld
pusha
adcb
bound
stos
dec
jb
sbb
in
test
popa
mov
cwtl
or
inc
xor
sbb
adc
sbbl
mov
daa
js
adc
stos
insb
mov
pop
cmp
and
fidivrs
inc
pop
cld
outsb
test
lods
jae
inc
call
daa
call
andb
xor
leave
leave
add
test
clc
add
lahf
es
int
stos
bound
addb
in
pop
aam
dec
jnp
das
shl
push
ret
hlt
pop
movsb
push
subb
xor
xchg
jno
lock
sbb
shl
or
add
push
cmp
icebp
gs
pop
lock
inc
nop
ljmp
jo
loope
outsb
call
ds
xor
jg
in
sub
mull
out
int
ss
fmuls
lret
lods
jns
fmuls
lcall
ret
xchg
ljmp
nop
pop
sub
out
loop
and
push
lcall
out
mov
add
movsl
icebp
sarl
out
pop
cwtl
fistps
mov
dec
jle
and
dec
cwtl
or
call
fimuls
or
pop
arpl
dec
push
std
lret
or
movsb
leave
and
add
xor
inc
mov
or
pop
sub
xchg
dec
pop
sub
shll
ret
fucomp
cmp
int3
mov
adc
scas
cmp
loop
dec
fldenv
inc
out
jge
gs
out
rclb
mov
inc
push
pop
imul
mov
add
cmp
xchg
jg
jae
inc
cmpsl
es
out
ficoms
add
xor
xor
mov
jo
inc
cwtl
in
jnp
mov
dec
dec
lods
cmp
sub
pop
xor
stos
data16
adc
mov
mov
je
rcrl
out
ja
bound
add
jae
jmp
popf
sahf
cmpsb
add
xchg
inc
and
mov
incl
and
ljmp
movsl
imul
cmp
movsl
cs
out
mov
rclb
inc
xchg
fdivrs
aad
xchg
jmp
jns
enter
cmc
xlat
into
lods
jae
cmp
add
mov
sbb
call
xor
xchg
push
ljmp
test
mov
push
mov
push
fnstsw
sbb
in
shlb
push
std
imul
outsl
xor
fisubrl
add
lds
js
in
dec
cmpsl
movsb
adc
imul
and
outsb
jo
xor
jg
xchg
sti
mov
add
sbb
aas
and
adc
fwait
jmp
movsb
mov
or
pushf
flds
and
fimull
into
hlt
aad
faddl
leave
mov
jns
push
in
push
andl
or
cmp
fcmovnu
push
cmp
in
ret
mov
insl
stos
out
dec
jbe
test
ljmp
out
rorb
out
jbe
jecxz
inc
lret
pop
mov
out
xor
inc
xlat
popa
adc
fwait
stos
rcl
lds
pop
xchg
je
xchg
xor
xchg
inc
inc
push
lret
push
leave
sti
daa
or
mov
fcmovbe
jle
sar
mov
adc
add
xchg
jg
add
daa
pop
and
cli
add
vmwrite
in
data16
aam
stos
out
mulb
jno
push
sti
fwait
xor
sub
mov
test
loop
lea
test
cmc
out
mov
inc
sub
and
inc
in
sbb
mov
pop
addr16
in
pusha
nop
addb
and
xchg
pop
jecxz
sub
dec
add
push
scas
cmpsl
xchg
fwait
inc
out
mov
lds
pop
in
lds
out
mov
icebp
loop
jo
mov
aad
mov
push
lcall
orl
pop
test
xchg
popf
pop
or
xor
jnp
sbb
adc
xchg
mov
jecxz
test
sbb
xchg
cmp
pop
xchg
mul
clc
lock
in
fnstenvs
imul
shll
fistpl
inc
inc
xchg
pop
xchg
or
xchg
sbb
fadd
mov
and
hlt
shrl
lods
ret
mov
xchg
xchg
jl
lret
push
inc
mov
dec
xchg
xor
mov
iret
push
in
test
aad
xchg
sub
xor
aad
cmp
sbb
pop
dec
lret
call
mov
nop
movl
fwait
popf
addr16
out
ljmp
xor
xchg
mov
popa
and
pop
lock
push
mov
jle
ljmp
jne
mov
pusha
jne
scas
lds
mov
frstor
aaa
or
flds
xor
sub
xlat
mov
pop
scas
mov
dec
out
insb
int
xchg
adc
lret
dec
pop
insl
andl
xorl
sarb
cld
mov
daa
dec
and
xor
ss
ficomps
or
les
cmp
into
sahf
and
bound
insb
sbb
aam
sbbl
push
call
pop
cmc
test
fstl
xchg
sub
out
es
mov
lea
test
xchg
call
and
dec
sahf
cmp
scas
cs
sbb
leave
lret
pusha
jbe
ret
cmp
cs
sbb
fs
imul
ret
dec
dec
push
sub
adcb
adc
in
int
dec
loop
ljmp
fiaddl
and
out
iret
xchg
or
lahf
repnz
nop
data16
inc
cs
pop
outsl
mov
int3
lahf
cld
cmp
pop
cmp
dec
pop
sbb
push
push
cmp
jecxz
sub
add
stc
sbb
jnp
pop
pop
enter
lea
mov
pop
xchg
int3
cs
outsl
std
xor
xchg
test
aad
pushf
adc
pushf
mov
inc
mov
fsubrl
push
rcr
xchg
pop
xchg
ret
adc
mov
adc
addr16
int
orl
push
mov
xchg
jge
pop
pop
pop
cmpsb
ja
aaa
push
xor
fsubl
sbb
insb
push
lea
xor
sub
add
repz
imul
cmp
adc
jmp
scas
in
push
and
and
xchg
adc
pop
pop
nop
push
rcrl
sbb
sti
iret
popa
fsubrl
mov
push
pusha
or
repnz
mov
test
sub
sub
mov
adc
inc
ss
movsb
mov
cwtl
imul
mov
sbb
push
pop
movsb
mov
outsl
mov
mov
dec
jne
dec
push
or
push
sbb
add
dec
arpl
xor
or
dec
cmp
dec
sbb
push
mov
pop
sbb
cmp
push
mov
adc
fbstp
addb
jge
pop
incl
xchg
iret
nop
pop
movsb
neg
mov
shlb
push
mov
scas
jg
mov
popa
test
pop
sahf
je
imul
lds
addr16
mov
inc
mov
pmuludq
push
test
insl
sbb
rcrb
sub
pop
jb
xchg
inc
push
adcb
bswap
dec
mov
icebp
jb
test
ret
shrb
mov
lret
jbe
jge
xchg
sub
lods
call
xor
mov
fs
es
jnp
push
les
push
fcmovnu
pop
pop
out
jne
fdivl
call
mov
out
fwait
insl
nop
mov
stos
dec
and
in
ds
push
ja
sbb
inc
shrl
arpl
dec
into
add
pop
dec
pop
xor
inc
jl
sti
les
cli
adc
out
lcall
icebp
jne
jnp
icebp
pop
jl
pop
push
scas
jns
jmp
jbe
dec
enter
insl
pushf
inc
addr16
xchg
subb
xor
sbbl
push
and
in
add
popf
and
sub
add
ret
hlt
or
cmpsb
cltd
mov
mov
mov
sti
stos
iret
cmp
pop
into
mov
dec
push
bound
push
and
test
push
adc
jg
dec
inc
scas
data16
pop
imul
mov
and
stos
jb
out
inc
jns
xchg
gs
cmpl
insl
lret
divb
sbb
cmova
clc
mov
push
adc
loop
sti
lods
pop
and
mov
cwtl
xchg
je
repnz
jl
mov
ljmp
ss
mov
adc
jmp
sti
insl
pop
rclb
mov
mov
lret
mov
pop
fiaddl
mov
iret
jle
std
inc
fnstenv
jbe
pop
dec
es
je
add
or
lcall
mov
adc
push
pop
mov
push
mov
mov
lret
xor
mov
pop
fnstcw
scas
xchg
cmpsb
cmp
outsl
aad
adc
cs
pop
mov
cmpsb
sbb
jbe
ret
test
imull
int3
dec
mov
cmpsl
push
dec
ljmp
repz
jnp
clc
outsl
rcrl
add
jae
cmp
inc
es
movsb
jmp
jg
push
xor
lods
xchg
std
movsb
or
sub
fdivrl
iret
clc
mov
add
adc
test
and
fnstsw
and
mov
xor
xor
cmpsl
int
jp
scas
mov
incb
in
inc
test
aad
shl
clc
adc
xchg
imul
sub
mov
lret
imul
out
insl
outsl
rol
pop
pop
mov
notl
hlt
ds
push
jmp
roll
xor
cli
xchg
aad
ljmp
adc
mov
imull
imul
mov
sub
xor
xchg
jae
es
jmp
mov
cmp
ds
add
cwtl
cli
pop
sarb
enter
dec
xchg
xchg
pop
dec
inc
inc
adc
pop
movsb
xchg
stc
lock
call
pop
shl
clc
or
xor
xchg
ret
cmp
das
dec
mov
or
mov
push
jecxz
sbbl
ja
roll
test
cs
cmp
or
cli
test
cwtl
loope
subb
or
rorl
and
rorb
fdivl
or
push
icebp
sbb
jb
movsb
xor
sub
mov
leave
mov
popa
sahf
pop
into
out
cmp
test
outsl
out
mov
cs
out
fisubrs
sbb
add
push
scas
add
inc
daa
pop
mov
mov
fisttpl
pop
icebp
mov
add
dec
mov
daa
pop
or
scas
rorl
sbb
add
imul
sub
out
in
xchg
imulb
add
movsl
cmpsl
testl
popf
mov
and
push
call
jno
add
out
fistl
or
push
sbbb
pop
mov
rcll
bound
movl
ret
pop
syscall
aam
and
sub
jge
ret
xchg
cmc
adc
mov
and
and
mov
enter
fcompl
jmp
add
insb
cmp
std
cmp
inc
and
pop
mov
xor
add
fsubr
sub
xchg
jo
insb
dec
and
iret
lcall
leave
mov
sbbl
sub
mov
and
xor
mov
outsb
push
sbb
in
les
insl
and
dec
andl
jo
ret
sti
mov
adc
push
cltd
inc
dec
and
jge
cmpsl
push
daa
repnz
jne
mov
inc
out
cs
aas
aam
fistpll
jns
push
imulb
dec
mov
push
stos
push
fadd
ljmp
jbe
cmc
mov
mov
add
popa
mov
sahf
or
cmp
dec
jo
jg
cld
push
jmp
mov
es
and
sub
iret
mov
sub
or
mov
popa
and
jbe
nop
push
pop
hlt
fsub
sub
xor
loopne
xor
cmp
jge
xchg
xor
xchg
int3
mov
scas
pop
dec
lods
push
dec
sub
lahf
mov
es
inc
clc
sbb
or
ret
es
repz
loop
enter
pop
xchg
xor
sbb
jmp
dec
cmc
jp
test
and
pop
adc
dec
mov
inc
dec
push
aaa
or
mov
add
mov
jne
sbb
sub
sbb
ss
dec
push
mov
jl
and
add
test
dec
pop
inc
out
popa
dec
add
jmp
push
fildll
out
sahf
lcall
jmp
mov
xchg
lock
cmpsb
sti
pushf
and
aaa
mov
cs
xor
sbbb
inc
rol
push
call
inc
mov
pop
mov
and
test
adcl
dec
add
sub
test
add
sbb
imul
sub
popf
repnz
inc
out
cmp
inc
xchg
xchg
cmp
out
push
test
cltd
popf
cmp
in
fidivs
jns
mov
add
arpl
cmp
mov
dec
es
pop
repnz
jp
into
rorb
push
inc
call
xor
cmp
push
adc
xchg
dec
sti
ljmp
mov
call
pop
repnz
nop
sub
ret
movsl
adc
jl
jnp
xor
pusha
lods
pop
stos
popf
outsl
inc
dec
fiaddl
andb
jle
scas
mov
test
cwtl
in
mov
movsb
shrb
nop
sti
int
ret
and
xchg
or
les
jecxz
mov
out
dec
jns
loop
out
test
add
jecxz
dec
push
mov
ljmp
cmpsb
sbb
and
repnz
data16
loop
es
test
movsl
jae
cmp
sub
xor
scas
or
inc
push
cmc
sbb
cmp
jmp
mov
or
fstp
out
insl
pop
push
mov
jo
repz
add
mov
ficoms
and
fstpt
jle
or
or
mov
ds
or
mov
jbe
ljmp
xor
int3
xor
pop
jmp
dec
les
xor
inc
fsts
pop
imul
sbb
add
clc
addr16
cmp
cs
mov
pop
inc
mov
and
cmp
and
inc
dec
adc
rol
or
sub
pop
in
int
enter
sbbb
push
lahf
insl
int3
ss
ds
sbb
bound
xchg
testl
out
mov
test
shlb
mov
mov
scas
mov
aaa
mov
lret
or
mov
lods
cmp
popa
adc
inc
pop
sarb
mov
dec
xor
inc
jge
mov
push
psubd
fwait
pop
shrb
cld
imull
push
icebp
jo
push
mov
inc
cmpsb
jge
loopne
pushf
cli
pop
aad
xlat
pop
leave
ljmp
and
fisubs
xchg
add
and
mov
dec
iret
out
cmp
andb
xlat
jg
jae
cs
adc
cmpsb
mov
cwtl
repz
mov
inc
xor
inc
push
mov
inc
cmp
enter
mov
lret
ljmp
ljmp
mov
ds
sti
xor
adc
jmp
imulb
daa
adc
in
aaa
add
mov
popa
lds
push
je
push
repz
inc
lods
fnsave
imul
push
fcmovbe
hlt
cmp
mov
pop
push
je
dec
out
xchg
leave
pop
add
testb
xchg
mov
cmpsb
mov
test
rcr
jbe
inc
test
ljmp
jnp
in
pushf
dec
loop
and
outsl
arpl
ficoms
jle
rcll
jmp
gs
xor
push
int
push
adc
mov
aam
movsb
nop
call
ds
sti
dec
dec
fwait
in
fwait
mov
test
into
shll
pop
mov
mov
repz
jle
loop
clc
push
jo
iret
loopne
lret
dec
icebp
dec
nop
push
sub
xlat
and
mov
xor
jmp
pop
cmp
fstp
mov
stc
insb
cmp
in
cmp
subl
fucom
mov
fldcw
filds
rol
dec
sahf
mov
jns
or
addr16
xorl
sub
pop
push
in
test
or
test
sti
clc
adc
mov
pop
and
push
cmp
bound
in
jle
mov
add
cld
fistpl
push
addr16
lret
cmp
add
sub
xchg
in
cmc
sbb
in
or
fists
sbbl
addr16
movsl
mov
push
xchg
div
mov
in
iret
inc
loop
jnp
in
pop
das
inc
cwtl
into
jle
push
xor
jmp
test
dec
or
imul
lcall
test
cmp
fucomp
jo
in
leave
inc
cmp
dec
ret
mov
cmp
or
mov
adc
in
pop
sbb
push
cltd
cmp
push
add
fwait
xlat
psllw
repz
sahf
dec
dec
mov
mov
sub
add
inc
adc
loop
sub
cmp
sub
add
mov
lock
int
pop
adc
adc
cmp
loop
cmpl
xor
js
addb
pop
mov
push
outsb
int3
in
lret
adc
sub
hlt
test
fnstsw
dec
pop
add
adc
xchg
inc
fcoml
xor
sub
movsb
sub
mov
aaa
dec
jae
dec
lods
out
cmpsb
xlat
or
out
xchg
stos
ret
or
movsl
stc
std
adc
lods
lods
pop
xchg
subl
xor
lock
jnp
ljmp
sbb
ror
sti
xor
and
imul
pushf
inc
ficoml
imull
imul
adc
mov
lods
inc
adc
push
xor
dec
adc
shlb
add
xlat
and
add
sub
mov
mov
mov
cwtl
repnz
and
sahf
daa
aam
xchg
xor
fstpl
out
cmp
fmul
stos
fcmovnu
jae
jne
sahf
lret
mov
cmovnp
call
fucom
test
xorl
mov
xor
mov
sti
mov
pop
inc
push
mov
xor
fld
insb
mov
pop
repnz
lret
adc
dec
xchg
xor
and
clc
sti
mov
aaa
outsb
add
mov
clc
hlt
stos
mulb
and
nop
sarb
cmpsb
mov
aas
cmp
sub
sbb
jle
sarb
inc
test
inc
pop
ljmp
pusha
out
inc
push
and
mov
and
daa
mov
pop
push
mov
int3
xor
mov
mov
addr16
adc
sahf
icebp
cwtl
xor
adc
sbb
sbb
sbb
and
or
adc
fsubs
ja
xlat
aas
add
or
xor
sub
dec
sahf
add
lahf
cmp
mov
xor
push
out
mov
je
pop
add
imul
lea
mov
mov
pop
push
inc
loop
addr16
sahf
push
fiadds
push
adc
repnz
dec
sbb
shll
dec
mov
sahf
mov
fnstsw
ret
add
repnz
lahf
adc
xor
in
loop
sbb
add
filds
jno
lods
jnp
mov
pop
ds
pusha
dec
into
xor
cltd
cmp
lcall
rol
mov
call
push
add
cmp
add
mov
lcall
mov
fcompl
jmp
adc
xlat
adc
scas
sbb
movsb
push
cmp
pop
clc
sub
bound
jle
jo
jle
adc
iret
cmp
movsb
or
mov
jmp
mov
ret
push
push
stc
xor
mov
xor
pushf
pop
xchg
dec
dec
or
popa
cmp
inc
mov
cltd
push
fwait
roll
ficoml
popf
and
cltd
aas
jl
mull
sar
cs
xchg
dec
or
or
inc
icebp
mov
lods
cmpsb
or
mov
shl
adc
inc
mov
sbb
push
jb
xchg
cmp
test
pop
lret
jecxz
gs
out
pushf
in
repnz
and
sub
imul
mov
jp
scas
test
pop
mov
push
xor
mov
adc
loop
faddl
sub
scas
inc
inc
mov
jns
xchg
cmp
add
mov
rclb
arpl
repz
cmp
adc
xor
jmp
add
sti
and
jecxz
stos
lgs
mov
xchg
push
divb
jo
xacquire
push
sbbl
lock
mov
iret
mov
dec
int
icebp
call
dec
int3
pop
jne
andb
subl
fdivrp
xchg
mov
inc
and
xchg
fldl2t
mov
lahf
loopne
shr
push
lods
into
jnp
xchg
xor
mov
pushf
dec
sub
mov
testb
sub
test
imul
lock
inc
sbb
adc
lods
pop
lahf
ljmp
or
sub
adc
in
out
dec
mov
mov
stos
rcrl
push
adc
stos
inc
mov
sub
sti
shlb
mov
arpl
push
aad
ds
add
dec
dec
push
out
mov
mov
fdivr
or
movsb
daa
sub
or
push
adc
pop
jnp
out
loopne
push
and
push
xchg
ds
or
ja
mov
sbb
aam
mov
test
add
pop
jno
cltd
dec
adc
xor
shr
sub
pusha
mov
iret
aam
and
sbb
xor
mov
xor
lahf
mov
push
push
adc
loop
js
js
fisubrs
mov
xor
xchg
pushf
sub
push
or
pop
sbb
lcall
sti
mov
test
xor
orl
adc
mov
sbb
inc
xlat
aaa
cmp
jge
inc
xchg
dec
iret
pop
dec
jno
cltd
sar
xchg
mov
xchg
sub
aas
jmp
mov
fisubs
in
mov
inc
xor
xor
dec
je
xor
jnp
mov
sti
or
cmp
cltd
inc
mov
mov
fcompl
pusha
cmp
loopne
imul
dec
imul
stc
mov
pop
adc
inc
mov
inc
insb
cmp
cmp
ret
int3
sub
nop
js
mov
and
dec
add
mov
and
xchg
sub
iret
mov
mov
xlat
push
movsl
aas
push
mov
in
notl
std
movsl
fsubr
cmp
std
sahf
pop
xchg
test
push
fisubrl
mov
cmpl
adc
aas
mov
jp
cs
int3
inc
loop
mov
add
sahf
mov
inc
das
aaa
inc
xchg
dec
mov
pop
pop
mov
int
and
jns
lea
add
insl
and
push
sub
adc
push
mov
sahf
push
pop
imul
mov
loopne
in
std
hlt
xor
cmp
aam
mov
adc
pop
sub
loopne
mov
sahf
out
andb
and
sub
cmp
mov
xchg
stos
ds
push
sbb
ss
aad
ja
ja
pop
mov
lds
iret
out
pop
ret
cltd
jno
xchg
imul
push
adc
mov
dec
or
negb
test
push
ffreep
dec
je
lds
fldcw
xchg
xchg
jp
cwtl
les
xchg
outsl
mov
cmc
push
mov
js
out
inc
insl
xchg
nop
movsl
mov
adc
jmp
inc
stos
cmovp
xor
pop
and
push
arpl
pop
pusha
loope
cmp
push
nop
aas
stos
pushf
add
aas
cmp
shl
arpl
jge
jae
in
sub
lock
push
fwait
add
dec
or
inc
mov
mov
lea
sbb
adc
jl
or
pop
adc
data16
loope
inc
xchg
sahf
xor
rol
ret
in
stc
and
sbb
test
xor
fdivr
outsl
jo
xor
xchg
scas
fs
es
rcl
push
inc
push
incb
das
jp
push
jne
push
push
mov
add
jge
adc
dec
cltd
dec
aaa
or
cmpl
mov
fdivp
push
adc
cmp
movsl
jg
jp
rol
dec
stc
in
test
pop
mov
or
cmpsb
lret
ficoml
nop
dec
or
mov
jmp
sub
pop
pop
sbb
add
add
cli
arpl
or
mov
inc
mov
fidivl
ljmp
inc
flds
mov
fistl
movsb
jns
fdivr
mov
sbb
lds
out
aaa
adc
imul
mov
lret
imul
es
mov
xchg
xchg
inc
adc
jl
jmp
ret
xchg
sub
aas
cwtl
addr16
push
push
lock
movsl
mov
scas
pop
adc
mov
into
jmp
adc
sahf
add
xor
cltd
mov
lahf
mov
xor
jae
jb
imul
mov
push
pop
int3
ret
jmp
out
pop
scas
push
jo
push
fs
mov
fstpl
push
add
mov
cmp
mov
inc
xchg
outsb
mov
or
and
fs
push
dec
mov
cmp
sbb
arpl
add
scas
cmp
push
or
mov
mov
incl
rcr
daa
mov
bound
jecxz
movsb
cmpsb
loopne
or
nop
movsl
sub
fadd
pop
pop
sub
addr16
and
ffree
jnp
pop
or
nop
push
jmp
mov
sub
or
xor
fiadds
jnp
mov
inc
jno
das
sub
pop
jne
ja
adc
inc
and
out
pop
out
jne
jns
push
or
jb
or
loopne
repnz
push
lds
sub
jb
and
xchg
mov
xchg
inc
and
fists
xor
dec
jp
ret
jne
pop
fists
in
icebp
lods
adc
dec
sub
pop
icebp
and
pop
pusha
adc
pop
mov
loop
rorl
imul
xor
dec
xor
out
cmp
and
fs
addr16
dec
lds
xchg
or
and
or
add
push
jo
fwait
push
jns,pt
in
testl
leave
sub
lods
lods
inc
in
das
sub
xchg
add
insb
jbe
and
shrb
pop
xchg
fsubrs
or
scas
dec
lret
mov
jecxz
add
sub
push
fwait
or
ret
stc
inc
mov
fidivs
pop
jle
dec
or
adc
and
test
mov
cmp
add
and
and
popa
ret
xor
leave
and
jge
sub
pushf
xor
data16
mov
lahf
lahf
add
adc
push
rcr
push
mov
addr16
test
ss
or
mov
sub
mov
cmp
push
jnp
scas
cmp
xorl
into
addr16
iret
fiaddl
idivl
insl
xchg
in
add
lret
pop
cmp
lods
leave
rcll
sbb
pop
insb
stos
cli
lcall
push
jmp
xor
repz
call
mov
sbb
cltd
inc
pop
jmp
aad
rorl
cmc
mov
fs
fsubrs
dec
and
add
lock
cmp
daa
loope
fwait
in
adc
lret
fs
push
cs
ror
add
test
fisttpl
dec
add
sub
or
pusha
xchg
push
neg
pop
and
into
sub
cmp
inc
rolb
push
cs
cmpsb
fs
and
xchg
loopne
cmp
lcall
fidivrs
push
arpl
mov
sarl
stos
loope
cmp
inc
xor
les
xchg
sti
sub
xchg
ret
subl
and
andb
test
out
and
jmp
xchg
push
iret
sub
lret
jecxz
jmp
sub
pusha
sub
push
scas
pop
push
mov
mov
sbb
sbb
nop
push
xchg
add
jno
mov
das
mov
bound
mov
mov
psubsw
shll
mov
dec
xchg
das
sbb
add
jp
xchg
add
xchg
nop
mov
push
fnstsw
pop
mov
sbb
adc
cld
add
mov
lock
ret
mov
inc
mov
add
js
inc
cld
or
lret
pusha
mov
push
je
add
outsl
daa
sahf
fdivrs
iret
sub
adc
pop
call
fisttpl
movsb
jae
jo
fcmovne
xlat
cmpl
test
stos
mov
cmp
adc
xor
adc
test
or
mov
in
push
in
fdivrl
bound
outsl
lret
aam
addr16
adc
movsl
adc
popf
aad
xchg
push
cmp
pushf
scas
scas
cmp
dec
pusha
and
ja
test
int3
add
jne
xchg
sub
pushf
loop
push
lock
popf
pop
scas
mov
je
inc
mov
cmc
inc
lahf
mov
and
cmp
or
mov
jge
adc
loope
sub
std
mov
mov
or
sub
xor
adcl
clc
jmp
sub
mov
ret
or
lahf
out
out
or
in
sti
loope
mov
adcl
pop
mov
xchg
ja
call
jae
and
sub
mov
mov
lret
mov
add
test
adcl
movsb
insl
mov
out
cmp
fistpll
repz
cli
outsl
imul
psrlw
cmp
xchg
call
cld
pop
sub
cmp
sbb
xor
call
into
xchg
sahf
lret
jbe
adc
cwtl
shl
or
cmp
push
loope
mov
inc
or
mov
jp
fildll
lret
sahf
inc
jge
cltd
jg
pop
clc
aas
cmpsb
add
fs
fsubl
jmp
out
fld
icebp
pmaddwd
mov
icebp
pop
scas
adc
jle
inc
lret
mov
inc
dec
enter
xchg
cmc
lea
ja
jp
stos
xchg
cmp
test
sbb
jbe
or
jb
fstpl
jo
sub
aam
push
lret
out
std
mov
jg
jb
push
or
movsb
mov
pushf
mov
and
lret
mov
lret
jo
test
mov
push
cli
nop
dec
jle
in
rcrl
cvtdq2ps
adc
outsl
lret
cmp
sbb
and
in
xor
psrlw
cli
arpl
mov
es
pop
push
mov
xchg
icebp
sub
imul
enter
xor
sbb
xchg
mov
pop
or
lcall
mov
add
fldt
push
xchg
arpl
aam
sub
adc
sti
in
xchg
pop
cltd
stos
das
or
xchg
add
bound
imul
sub
popf
inc
pushf
cmc
sub
lcall
mov
nop
cmp
cmp
sahf
push
lock
fsubrl
cmp
pop
pop
fsubr
int3
lret
lods
mov
sub
xor
sbb
xchg
test
mov
lods
pop
mov
pushf
or
in
js
mov
in
jo
pop
notl
fcoms
cmp
addb
mov
hlt
dec
mov
sub
fldcw
mov
out
or
xchg
cmp
fucom
add
movsb
inc
push
add
lea
das
in
out
or
pop
add
test
in
xor
clc
aas
cmp
add
and
xchg
push
push
xchg
sbb
stos
ffree
fstl
out
in
inc
xor
jb
dec
mov
ret
jmp
lods
popf
push
push
cltd
push
clc
roll
or
notl
jp
fstl
mull
push
dec
dec
mov
imul
jbe
rolb
adc
add
mov
push
mov
dec
imul
outsb
or
in
mov
fidivrl
jb
into
das
addr16
jp
xchg
inc
mov
leave
in
addr16
pop
push
xor
cmc
out
dec
and
xor
bound
push
xor
call
lret
mov
outsl
sub
push
sbb
fwait
out
mov
test
gs
scas
jecxz
pop
jo
push
or
sbb
ds
lret
mov
movl
aad
insb
mov
mov
mov
cwtl
lock
sub
jno
or
pop
dec
pop
testb
sub
stos
cmp
clc
push
fstpl
push
mov
dec
xor
enter
push
test
loop
and
fisttpll
adc
daa
pop
inc
mov
mov
and
test
pmaxub
repz
ret
push
insl
movb
sub
cs
in
mov
cmpsb
jp
andb
xchg
inc
jl
mov
mov
xchg
sahf
addr16
rcrl
out
jmp
fucomp
push
xchg
cmp
int
fnstcw
push
inc
aam
sahf
pop
stos
cmp
inc
fucomip
hlt
push
push
and
push
xchg
mov
in
mov
jns
stos
cmpsl
jecxz
in
jbe
lahf
or
nop
push
dec
aas
adc
hlt
cmp
repnz
or
xlat
pusha
cmpsb
inc
ja
mov
sub
aas
pop
dec
iret
movsb
jns
or
mov
push
int
adc
and
scas
mov
jne
enter
fldt
sbb
mov
fildll
iret
mov
xchg
addr16
add
dec
leave
inc
pop
jp
dec
sbb
or
dec
sbb
fisubl
cltd
sub
in
mov
scas
test
mov
popa
pop
push
sahf
jns
leave
xchg
sub
cmp
adc
push
or
out
cmp
mov
fwait
cmovnp
dec
mov
jne
orb
icebp
adc
pop
rol
dec
mov
xchg
in
cmpsl
sub
out
loopne
adc
out
enter
sbb
and
sub
or
shll
aam
data16
mov
scas
mov
jp
arpl
sbb
sbb
mov
out
lea
xlat
mov
das
or
jmp
sarl
fnstsw
sbb
jp
aam
jge
ficoml
scas
scas
hlt
je
add
xchg
in
sub
mov
jo
jge,pn
outsb
xchg
jae
add
insl
or
cli
adc
stos
das
mov
shl
test
stos
int3
pop
test
in
test
push
es
xchg
imul
push
xchg
pushf
pop
mov
imul
dec
sbb
fsubl
cmpsl
mov
xor
mov
iret
sbb
jp
cmp
filds
jbe
jnp,pn
cwtl
leave
and
or
clc
adc
mov
lret
repnz
push
sahf
fistpll
cs
mov
xchg
xchg
cli
jb
xchg
stc
dec
lahf
push
jne
adc
lock
push
fdivl
in
jo
fsubr
jmp
jno
sbb
or
sbb
mov
fucom
out
mov
dec
stos
mov
mov
mov
cmp
xor
arpl
pusha
dec
jne
pop
fisubrs
les
cmp
inc
xchg
sbbl
xchg
in
sub
mov
outsl
lret
push
mov
in
lods
xchg
xchg
push
mov
lea
xor
sahf
mov
insb
dec
sbb
nop
ds
mov
jmp
popa
mov
and
inc
das
incl
repz
inc
int
and
cmpsl
adc
mov
ds
pop
lahf
fdivp
pop
bound
stc
xchg
or
in
sub
lcall
out
xchg
nop
lock
mov
mov
sbb
in
popf
xchg
jo
aad
xor
std
mov
inc
out
sti
push
popa
insb
xor
and
push
mov
add
out
mov
xchg
sbb
gs
add
cmp
fistl
jns
mov
jl
lcall
cmp
inc
push
mov
mov
insb
ret
adc
adc
cmc
mov
jge
stc
jne
inc
add
or
ret
adc
or
mov
cli
sub
and
or
shl
repz
popf
pop
lret
call
dec
inc
sub
mov
mov
in
cmpb
mov
nop
pop
rcrl
leave
dec
cmp
xchg
mov
xor
pop
mov
adc
push
xchg
and
addr16
add
pop
jle
sub
or
dec
push
xchg
into
dec
cli
xor
mov
mov
test
or
scas
clc
hlt
dec
sub
inc
cltd
lea
mov
dec
mov
lret
std
out
and
pop
xchg
addr16
in
push
sbbl
or
out
cmp
inc
ret
gs
pop
hlt
movsb
xchg
das
icebp
jnp
cmp
dec
dec
and
jecxz
je
pop
int3
and
leave
mov
pop
les
xchg
in
leave
daa
shrl
push
or
pop
jmp
sbbb
xor
adcb
jp
stos
jmp
mov
add
out
adc
jno
data16
mov
cmpsb
cmpsb
sbb
leave
sub
repnz
insl
sti
mov
mov
shl
call
or
jge
jno
loop
loop
or
movsl
xchg
push
cltd
and
jns
push
shl
ret
in
inc
sub
xlat
es
enter
and
push
pop
pop
push
sub
lret
sahf
inc
or
xchg
ret
cld
adc
pop
fmulp
pause
insb
jnp
cmp
lretw
push
stos
pop
repz
shlb
pop
adc
push
sbbl
hlt
adc
or
or
cmp
or
shl
rclb
loopne
pop
pop
push
cmp
cmpsb
in
fmul
mov
filds
es
iret
pop
cmp
jge
out
subb
mov
xor
push
imul
mov
int3
jbe,pn
std
mov
and
int
hlt
fisubrs
daa
dec
xchg
cmp
pop
cmc
stos
inc
push
push
dec
push
rcll
std
xor
repz
call
ds
cmp
mov
add
gs
lock
or
mov
aas
out
push
adc
xor
pop
hlt
jb
fildl
cmp
movsb
adc
aas
roll
pop
pop
inc
in
pop
subl
jmp
jmp
cmp
aad
lods
sub
lock
push
mov
clc
lea
pop
nop
ret
dec
loope
push
jo
add
in
mov
orb
pop
insb
cli
adc
lret
or
mov
push
aaa
lods
sbbl
std
nop
js
lods
enter
jae
jno
fdivl
stc
fld
push
loope
sbb
dec
sarb
push
shll
gs
shl
xor
fistl
data16
les
std
loopne
mov
mov
dec
test
or
cmp
daa
add
dec
pop
push
mov
mov
sti
xchg
pop
lret
cmp
adc
adc
xchg
into
mov
jp
sbb
push
subl
stos
add
mov
cmp
stos
mov
insb
mov
cmp
das
jne
sbb
xchg
push
or
adc
dec
cmp
cmp
xor
call
jne
arpl
fs
out
movsl
fidivs
pop
sbb
push
mov
ds
mov
cmc
jle
dec
inc
fs
cld
scas
sbbb
popa
sub
les
push
mov
fnstsw
jl
scas
mov
sti
imul
jle
cmp
mov
mov
sbb
mov
sub
push
push
jmp
mov
int3
push
add
lock
lret
scas
xchg
mul
pop
std
push
push
scas
call
repnz
push
xchg
fdivr
stc
xchg
cmp
or
push
mov
je
add
cmp
dec
in
loop
sbb
adc
inc
in
rorl
pop
fistpl
push
icebp
rorl
cli
popa
push
dec
push
aaa
xchg
xchg
and
push
mov
ret
cwtl
push
jl
jecxz
or
cmc
in
cmpsl
sub
dec
inc
mov
and
xor
fwait
pop
push
pop
adc
cmc
test
push
push
les
fcoml
lret
jns
push
adc
in
pop
pop
jbe
inc
mov
add
testl
leave
xchg
pop
cld
push
movsb
xchg
fcoml
aam
ficoms
xor
jl
pop
ss
insl
inc
xchg
aam
test
cmp
and
or
out
insb
popa
and
jae
loope
mov
sbb
sbb
js
addr16
jge
add
sahf
pop
cmpsb
jbe
xor
adc
ss
dec
pop
or
and
js
imul
push
mov
orb
or
repnz
or
add
outsl
popa
xorb
or
pop
jae
mov
mov
orl
dec
xchg
fistl
mov
cs
and
cmp
or
and
sub
scas
push
arpl
orl
dec
xlat
and
inc
mov
loope
or
icebp
into
mov
pusha
dec
pop
mov
mov
mov
loopne
cltd
out
leave
nop
fdivrs
pop
pop
js
repnz
and
pop
arpl
in
cmp
jae
nop
test
jno
ljmp
pop
mov
mov
xchg
daa
cmp
and
jne
sahf
movsl
rcrb
and
fnstcw
mov
mov
xchg
pop
lret
jns
cmc
or
jno
mov
dec
mov
jecxz
lods
sbb
divb
dec
out
sub
sbb
ljmp
icebp
aad
cmp
loopne
lret
sub
jns
negl
rcr
cmpsl
mov
xor
add
jne
jo
ret
lods
jmp
ret
int
hlt
jb
or
popa
nop
inc
dec
sub
mov
inc
xor
loop
add
cld
mov
xor
das
int3
sub
ja
mov
test
push
xchg
fdivs
lahf
shll
sub
xchg
repz
jne
ljmp
mov
inc
push
inc
iret
divl
sub
pop
popf
iret
push
js
jle
lret
push
jge
sub
inc
dec
pop
sbb
dec
adc
sbb
push
inc
sahf
mov
mov
add
mov
xchg
outsb
out
mov
in
and
cmpsl
xor
ficoml
mov
sbbw
jmp
mov
pop
imul
and
lods
mov
enter
call
mov
outsl
adcb
inc
add
sub
out
bound
shlb
les
pop
xor
pop
or
aad
xchg
cmp
stc
mov
sahf
xor
lret
and
gs
cs
adc
insl
cmp
ds
push
mov
push
pusha
cmpsl
fcom
xchg
lods
pop
icebp
or
inc
out
lods
mov
repz
xlat
and
arpl
cmc
inc
in
pusha
cmp
xchg
cmc
faddl
xlat
popl
push
mov
or
bound
sarb
xor
cld
ret
aam
ret
sub
dec
out
mov
and
ds
push
mov
jg
shrl
push
or
xchg
loopne
cmp
xchg
jnp
lret
xor
inc
xor
push
dec
iret
ror
mov
stos
sub
aaa
cmp
and
imul
int
mov
cmpsl
gs
pop
sti
or
fsubp
fdivrl
cmpsl
cmpb
fcomp
jnp
add
mov
mov
mov
sbb
xlat
inc
lcall
add
mov
sbb
sub
into
idivl
aad
mov
lds
pmaxub
mov
jl
lods
movsb
clc
in
add
or
nop
mov
addr16
sub
prefetch
inc
adc
ret
jno
mov
clc
insb
jno
mov
imul
and
jne
sbb
sub
in
ret
xchg
lods
adc
into
xchg
mov
add
in
mov
sbb
mov
jle
mov
jae
jae
push
lea
fiadds
stc
adcb
jns
arpl
es
hlt
push
ficoms
push
enter
mov
adc
aaa
cld
cli
xchg
jns
add
jb
je
sbb
and
ret
lea
mov
dec
inc
test
jge
sbbb
mov
or
repz
xchg
aaa
cltd
push
mov
sarl
and
cwtl
adc
mov
xor
pop
data16
outsb
inc
shlb
xchg
or
adcb
mov
jle
pop
decb
pop
scas
mov
inc
mov
push
pushf
pop
add
out
push
xlat
dec
adc
push
jg
jo
pop
mov
sbb
int
xchg
mov
sbb
insb
aad
xchg
stos
outsb
loop
dec
faddl
lretw
lret
hlt
add
jb
jnp
add
add
pop
pop
inc
or
lock
fninit
shlb
cmp
mov
out
lahf
in
pop
jo
mov
xchg
push
imul
sub
inc
fmull
jbe
adc
and
cmp
mov
mov
cmpsl
push
push
pop
test
cmp
and
jp
out
push
cs
dec
push
pop
stc
orb
ljmp
push
pop
outsl
cmpsb
scas
inc
call
subb
mov
ja
in
jo
movhps
mov
dec
or
and
sbb
test
stos
imul
sbb
in
push
ss
xchg
push
les
push
jle
call
jle
xor
and
push
add
scas
jl
sub
imul
jns
push
mov
mov
mov
into
sbb
adc
cmp
mov
lret
mov
inc
addr16
cmp
adc
cwtl
sbbb
test
clc
mov
sbb
mov
divb
mov
insl
rcll
dec
or
inc
scas
pop
mov
ret
je
dec
jl
mov
or
arpl
ds
andl
scas
das
fldl
mov
xor
mov
mov
test
int
jbe
cmp
aas
xchg
xchg
stc
cli
pop
enter
mov
mov
mov
xor
cld
stc
cmp
and
cwtl
ret
movsl
mov
inc
xchg
lea
or
cmpsl
cmp
scas
adc
cmpsb
mov
and
or
or
cli
js
hlt
jmp
xlat
out
lea
stos
dec
adc
in
ret
cwtl
out
push
rcrl
pop
roll
int
sbb
mov
rolb
dec
shrb
popa
rcrb
cmc
lds
ds
xchg
sub
push
int
sub
dec
dec
sahf
cmp
dec
test
cld
sarb
add
push
cmp
fcmovb
iret
jmp
dec
arpl
adcb
sub
push
mov
testl
decl
fldt
pushf
dec
rcrb
dec
cmp
sub
rorb
in
sub
lret
jae
xor
adc
add
lea
mov
repnz
mov
es
cmp
mov
into
cmpsl
mov
xor
and
stos
sub
xchg
pop
push
push
les
sti
mov
add
cltd
cmp
data16
push
mov
push
inc
jo
jg
mov
mov
addr16
push
ret
dec
mov
or
loop
mov
lods
leave
add
arpl
rdpmc
lret
in
movl
fs
push
test
mov
out
xorl
or
cmpb
push
pushf
inc
test
repz
fsts
in
int3
push
mov
pusha
call
int3
insb
sub
push
inc
out
cld
jb
mov
pop
sub
xchg
xchg
sbb
shlb
add
into
and
sbb
js
jg
out
pop
ljmp
aam
adc
jp
icebp
fs
sbb
arpl
mov
icebp
in
aad
jo
inc
pop
fdivl
or
js
or
adc
jl
sahf
mov
dec
ret
dec
xchg
movsl
inc
out
cwtl
pop
xchg
pop
lret
lret
shl
push
add
lods
shrl
jo
test
icebp
sub
dec
movsl
push
dec
inc
jns
popa
or
sbb
sub
mov
xor
xchg
orl
mov
cmpsl
jne
jae
mov
xor
and
ljmp
pop
mov
add
mov
add
push
int3
xchg
dec
and
sub
test
jns
xor
outsl
cmpsl
xchg
xlat
out
push
sbb
insb
int3
sub
sti
add
ret
sub
sub
lret
dec
mov
ret
sub
imul
dec
cmp
aam
add
lods
in
cmp
and
add
jo
imul
fdivs
rcll
xchg
loope
push
fisubrs
enter
pusha
pop
mov
jl
push
sbb
scas
push
pop
addl
lds
iret
pop
insb
test
mov
mov
movb
popf
fwait
sbb
add
rcr
xchg
pop
fisubrs
gs
mov
outsl
xor
inc
shll
sbb
loope
ja
mov
clc
jns
jne
mov
inc
dec
jae
adc
pop
jl
adc
mov
lcall
mov
add
adc
fcomps
test
push
inc
in
cmp
pop
jp
fstpt
addr16
inc
test
inc
xchg
lahf
mov
mov
dec
mov
cli
nop
push
pop
adc
sub
rcl
cmpb
mov
arpl
lods
push
jb
inc
inc
sub
fwait
js
rorl
adc
or
sbb
loope
loope
mov
mov
emms
sbb
cwtl
xor
sti
ja
stos
cmp
repnz
shl
mov
cmp
or
jmp
push
shll
andl
pop
xor
and
dec
dec
ret
nop
sbb
insb
jl
pop
and
sub
into
mov
stos
dec
dec
idiv
inc
mov
mov
xchg
outsl
scas
inc
stos
jno
fwait
inc
outsb
and
loope
bound
aas
insl
jp
sbb
push
nop
xor
sahf
xor
cmpsl
cltd
and
andl
mov
imul
insl
iret
in
rcr
xchg
mov
jbe
inc
ss
pop
fdivr
push
push
divb
ss
ret
jge
jl
fildl
jmp
xchg
and
xchg
sub
arpl
xor
adc
mov
int
int3
rcrb
cwtl
mov
into
inc
dec
scas
daa
or
cmpsl
cmp
cmpl
adc
mov
lret
gs
outsb
mov
repz
pop
inc
add
xlat
int
sub
roll
das
and
stos
xchg
cmpsb
cltd
xor
and
loopne
insb
movsb
fisubl
jmp
fdivr
jno
cmp
in
dec
imul
scas
jmp
andl
push
pop
dec
or
clc
fwait
in
int3
pop
shl
outsb
pop
mov
mov
jg
adcb
mov
dec
jo
mov
push
stos
pop
adc
jge
nop
test
and
push
adcl
sub
or
ret
in
shr
in
or
mov
pusha
pusha
test
mov
add
loop
or
les
pop
inc
xchg
cs
mov
std
ds
sahf
xchg
xchg
dec
cmp
outsl
ret
sbb
push
push
int3
xchg
ds
aam
fucomp
pop
xchg
inc
inc
out
mov
xlat
lds
mov
push
cmc
addl
or
xlat
or
jno
add
fwait
inc
mov
fdivl
das
rolb
jecxz
add
adc
sbb
xor
mov
aas
push
push
aaa
rcrb
rcrb
cmp
or
sub
sub
hlt
rorl
inc
cs
mov
mov
loopne
cltd
or
mov
test
add
jnp
imul
cmp
ret
clc
fists
movsl
cmp
loope
inc
cmp
scas
xchg
inc
or
pop
gs
dec
dec
push
ja
mov
mov
xchg
and
imul
icebp
jmp
mov
inc
pop
jae
out
xchg
lods
mov
or
fists
dec
lock
mov
into
or
mov
fwait
mov
stc
xchg
pop
popf
mov
mov
and
imul
xor
test
jb
mov
in
mov
inc
pop
ja
pusha
cwtl
pop
pop
add
aam
or
repnz
insl
xchg
mov
mov
bound
push
jp
push
cmp
cmp
inc
cltd
cs
inc
pop
loop
xor
mov
ds
cltd
cltd
pop
or
mov
test
sub
push
cld
je
mov
fs
xor
pop
xchg
push
adc
sbb
fidivrs
xchg
jns
jp
rcll
jae
repz
add
outsl
push
cli
xor
out
into
scas
nop
xchg
push
mov
inc
jle
sar
mov
push
jno
insl
xor
jne
aad
xor
cmp
jne
and
stos
lods
lods
hlt
repz
xor
xor
pop
ret
in
in
iret
inc
inc
je
roll
sbb
or
cmp
mov
int
mov
xchg
mov
data16
lods
jle
adc
jl
stc
push
dec
push
push
bound
iret
jo
cmpsb
cltd
ret
nop
pushf
jno
ljmp
loope
loopne
test
stc
filds
mov
sub
xchg
nop
cmp
sbbl
imul
sbb
sub
add
ss
ror
mov
mov
dec
lcall
jno
ficoml
test
mov
std
jae
outsl
or
sub
int3
pop
pop
bound
pop
pusha
into
stos
and
out
outsb
add
and
dec
mov
add
jmp
gs
aad
sbb
mov
cmpsl
cltd
mov
out
sbb
lods
jecxz
mov
push
and
sahf
ficoml
inc
scas
dec
push
mov
adc
fsubrs
hlt
add
dec
push
cmpsl
jo
out
test
outsb
cltd
xor
adc
stos
jl
jl
cli
mov
pop
xchg
scas
jmp
nop
jmp
jp
and
movsl
div
and
loopne
pop
inc
bound
std
daa
lods
data16
xor
jbe
in
pushf
js
hlt
inc
in
push
push
adc
xchg
mov
xchg
out
cmp
fs
loope
dec
or
cmpsb
add
pop
add
rcl
mov
movsl
jne,pn
les
mov
mov
inc
imul
aad
in
push
xchg
cmp
mov
hlt
ja
xchg
mov
in
mov
mov
shlb
jecxz
fwait
xor
cli
rcll
mov
mov
inc
ds
push
popf
bound
mov
jl
pusha
cs
sbb
movl
inc
mov
xchg
mov
pop
push
jns
rclb
inc
hlt
mov
test
mov
push
scas
push
push
int3
sbb
pop
hlt
mov
nop
xchg
lret
test
mov
adc
add
xor
xor
sbb
cmpsl
daa
or
cli
lea
and
movsl
fdivl
add
dec
or
stos
inc
aaa
iret
roll
daa
inc
fst
mov
push
push
int
loopne
add
sub
push
stos
imul
aaa
xchg
push
icebp
ljmp
fistps
jmp
adc
out
lahf
pusha
nop
mov
arpl
push
dec
mov
sbb
icebp
bound
mov
data16
rol
je
popf
into
in
shll
pop
cmpl
ret
test
mov
aam
cmp
xchg
or
xchg
and
xchg
inc
mov
and
out
xchg
sbb
inc
dec
pop
or
push
cmp
lahf
pop
xchg
lret
xor
mov
divl
addr16
sbb
mov
out
cmp
xchg
push
or
cmp
pop
mov
subb
popf
mov
stos
fstpt
lock
fimuls
cmpsb
fistpll
and
pop
or
js
out
dec
cwtl
and
xor
dec
cli
movsl
out
pop
xchg
push
rolb
fwait
dec
xchg
adcl
das
mov
cli
add
data16
mov
mov
mov
mov
ss
pop
sti
mov
adc
sub
cmp
mov
sbb
dec
imul
movsl
es
icebp
mov
push
inc
cmp
loop
add
jmp
fsubs
das
cmp
lahf
mov
xchg
hlt
jns
daa
dec
bound
test
adc
mov
popa
lods
sbb
add
jb
mov
or
sub
movsb
xchg
cltd
mov
push
and
mov
fbstp
hlt
mov
sbb
daa
xchg
cmp
or
cmc
and
cs
and
clc
cmc
mov
push
pop
fstpt
aaa
jmp
outsl
imul
fimuls
pop
enter
add
jno
popa
sub
in
sub
arpl
loope
jge
addr16
pop
enter
pop
sar
jp
movb
jo
push
jecxz
insl
sti
out
filds
aas
jp
mov
sub
int
push
aad
cmpsl
jge
test
out
mov
bound
scas
nop
int3
jmp
mov
pusha
shl
in
lods
lahf
out
xchg
dec
addr16
jle
je,pn
xchg
stos
cs
icebp
mov
jb
scas
mov
push
inc
mov
fs
in
std
sbb
mov
icebp
je
fcomp
cmpsl
xchg
ja
std
and
imul
mov
mov
mov
or
rcrb
jae
in
or
movsl
pop
mov
jg
scas
insb
push
ja
sbb
arpl
scas
les
clc
mov
sub
incl
out
das
es
getsec
xor
outsl
js
xor
mov
pop
xor
and
imul
out
jne
pop
ss
pushf
scas
addl
imul
add
mov
ret
adc
push
mov
cwtl
xchg
shlb
ja
xorl
adc
or
mov
andb
inc
loopne
aam
test
mov
enter
loope
aaa
dec
adc
je
outsb
decl
add
adc
arpl
loop
paddd
sub
inc
fdivl
scas
outsl
fiaddl
inc
dec
cwtl
rcrb
mov
jb
mov
mov
cltd
nop
shrl
pop
mov
insl
xchg
ret
jbe
cli
and
inc
or
mov
aaa
decl
std
xlat
rcl
clc
insl
ret
or
inc
xlat
insb
inc
dec
out
lahf
imul
add
add
sub
testb
or
push
popa
dec
mov
scas
mulb
lods
fwait
mov
stos
sub
ss
adcl
xor
test
out
push
iret
dec
cmp
mov
dec
ljmp
fadd
jp
ret
sub
test
gs
mov
sub
outsl
pop
and
cli
jmp
mov
aas
sub
xchg
loopne
or
flds
cmc
add
stos
inc
add
push
xchg
loopne
inc
cmpsl
sub
fistl
jmp
push
push
aas
xlat
popa
xor
jb
pop
push
repnz
outsl
push
jae
mov
test
and
mov
mov
mov
sub
movsb
dec
sbb
add
arpl
loope
xchg
ss
daa
cmpsl
xchg
xor
cmp
sub
dec
xor
and
addr16
jns
jg
ret
imul
pushf
xchg
dec
aad
jns
inc
std
jno
lock
push
mov
jmp
stc
or
push
pop
pop
jns
push
enter
mov
in
lahf
push
mov
mov
xor
stos
xchg
cmc
or
xor
push
sub
call
or
sub
inc
scas
ss
fidivrs
sub
je
adc
xchg
xchg
mov
mov
fcoms
pushf
inc
add
sti
cld
pop
imul
andb
pop
inc
int
aam
cmpsb
cmp
cmp
popa
dec
test
fldl
xchg
mov
lock
add
inc
scas
aam
dec
stos
repz
pushf
dec
jne
repnz
pop
inc
loop
out
lret
outsl
inc
mov
inc
pop
or
mov
and
mov
inc
mov
mov
bound
in
or
std
mov
cltd
notb
cli
ja
pop
arpl
addl
or
pushf
int
repz
dec
lock
insl
dec
fsubs
popf
lcall
popa
addl
push
arpl
test
scas
shr
and
sub
lods
fcompl
adc
or
icebp
mov
mov
jl
loopne
test
out
lcall
jbe
lea
pop
imull
sub
cmp
mov
cmpl
push
mov
mov
aaa
jg
xor
iret
pusha
pop
mov
mov
loopne
test
fimuls
adc
aam
fs
lods
out
jmp
adc
xor
push
mov
fbld
imul
jbe
xchg
mov
sub
stc
test
scas
je
outsb
repz
sbb
sar
mov
jae
test
dec
aam
push
les
jae
test
adc
xchg
cli
add
xor
dec
addb
push
xor
inc
pop
js
shlb
xor
cld
jbe
ds
lds
shrl
jmp
pop
inc
data16
or
jns
shrl
fwait
sbb
movsb
mov
mov
sub
mov
pop
push
popf
sub
jl
lods
jae
cwtl
int3
xor
mov
jo
mov
lods
fnsave
in
push
das
cmp
jg
rcl
add
pop
xchg
push
jl
stos
aad
cmp
xorl
or
inc
and
rorl
mov
mov
lcall
and
push
dec
sbb
and
pop
ja
sub
xor
sbb
dec
xor
mov
scas
sahf
in
mov
sbb
decl
ds
and
pop
and
mov
or
out
xor
test
or
pop
fstps
xor
or
jp
cmp
lcall
push
and
outsl
divb
xchg
lcall
divl
jge
sbb
je
rcrl
popa
sbb
xchg
push
lcall
cld
dec
icebp
psubusw
test
sti
lcall
pop
adc
mov
add
test
jmp
hlt
xlat
dec
test
ret
xor
mov
add
cmpsb
bound
pop
test
stos
xlat
jp
push
sub
fdivrp
cs
xlat
adc
sub
cmp
popf
sub
fiaddl
cli
sbb
inc
stos
roll
out
inc
addl
sub
push
shlb
or
movb
adc
rcll
adc
mov
das
rol
adc
mov
das
push
add
cmp
xchg
sbbb
out
xchg
out
sub
outsb
cmc
stos
cld
fcmovnu
cmp
inc
fistpl
or
xchg
adc
xchg
scas
jbe
inc
ret
dec
popa
jle
aad
out
fstps
sub
cmp
xchg
adc
out
mov
clc
xchg
pop
mov
inc
std
sar
or
add
lret
rcr
fucomi
jg
scas
movsb
jo
sbb
pop
stos
imul
push
leave
xchg
cld
aaa
in
sub
jp
pop
inc
cs
sbb
hlt
jmp
cli
pop
mov
mov
sarl
mov
sahf
loop
mov
jl
mov
jb
test
ja
sub
xchg
sbb
call
pop
mov
push
test
orl
lds
push
call
mov
jecxz
jae
or
test
sbb
roll
and
or
pop
popa
stos
imul
sub
fwait
jecxz
imul
mov
sbb
clc
aad
mov
pop
mov
dec
sbb
mov
pop
inc
jae
int
jge
sti
mov
or
scas
pop
daa
hlt
jge
adc
jecxz
cmp
pop
and
pop
or
jg
and
mov
cmp
jecxz
fcomps
pop
bound
repnz
cld
orb
insb
inc
scas
ss
adc
cmp
fsubs
jge
in
mov
test
nop
fistl
and
test
lret
mov
decb
mov
dec
test
sub
xchg
repnz
shl
in
pop
jmp
cmp
mov
mov
into
mull
jmp
inc
leave
inc
cmp
mov
outsl
iret
inc
pop
cltd
ret
lea
out
adc
and
leave
cmpsl
mov
cld
test
mov
xor
xlat
pop
or
push
loop
sbb
movsl
pushf
lcall
pop
enter
out
sub
cmp
pop
pop
push
jmp
xchg
scas
cmpsb
sbb
cmp
pop
ja
jb
sbb
xchg
inc
dec
insb
testl
pop
lahf
dec
sti
daa
adc
or
mov
movsb
adcl
dec
rorb
add
out
stc
mov
mov
movsl
imul
fs
pop
xor
popa
mov
adc
sbb
xorl
ja
sbb
stos
inc
pop
mov
sub
xor
out
dec
xchg
jmp
fisttps
imul
leave
dec
mov
mov
sahf
call
push
cli
mov
shrl
mov
out
mov
sub
mov
je
enter
cltd
scas
data16
into
or
movb
xchg
mov
mov
int3
jbe
fstl
stos
icebp
repz
or
add
pop
scas
in
dec
jae
or
xor
sbb
adc
pop
adc
inc
arpl
loope
stos
adc
and
mov
push
fs
shlb
pop
dec
dec
sub
out
clc
sbb
sbb
push
negb
and
cltd
jge
inc
frstor
shrl
cld
mov
out
jp
push
adc
int
imul
adc
mov
mov
sub
aad
outsl
dec
mov
cmp
ss
cmp
mov
les
inc
hlt
and
xchg
rcrb
aad
push
cmp
mov
push
inc
sbb
int
mov
loopne
lds
dec
int3
bound
loope
sub
jle
popf
rcll
and
cltd
imul
jae
fstp
ret
out
dec
aam
fldenv
cmp
mov
leave
outsl
fstps
dec
int3
out
lods
sbb
sarb
sbb
inc
jno
mov
jb
or
movntq
xor
rcrb
jae
loope
cwtl
add
and
dec
ds
cmc
sub
mov
lods
mov
xor
das
in
mov
call
jns
sub
mov
cmp
inc
jno
int3
lahf
jns
sbbb
mov
lods
into
jmp
mov
sbb
repnz
stc
in
mov
push
aaa
shll
fisttpll
movsb
jo
cmc
push
sub
jno
xor
or
mov
loope
lcall
stos
pusha
jmp
cmp
int3
add
mov
sub
mov
fbstp
dec
xor
fs
daa
add
pop
xor
mov
cmp
nop
adc
jb
jle
fs
sbb
sarb
jmp
mov
or
cmp
imul
mov
pmulhuw
fdivrs
or
pop
jo
sbb
lds
mov
adc
shl
adc
and
cwtl
outsb
addr16
rclb
pop
pusha
in
mov
ja
shll
bound
cmp
iret
fs
sahf
or
and
imul
xchg
jbe
test
dec
bound
jne
push
inc
sub
int
push
mov
xor
inc
lret
fistpl
inc
les
pop
pop
in
add
outsl
sbb
mov
inc
pop
xchg
mulb
testb
out
mov
xchg
in
cli
cmp
cli
dec
loope
int
pop
mov
mov
fistpll
pusha
aam
pop
xor
arpl
mov
push
push
push
push
or
enter
arpl
lock
movsb
mov
cmp
mov
lods
sub
lods
aam
push
in
jne
stos
adc
push
push
fmull
les
push
mov
dec
icebp
cltd
dec
pop
test
dec
ds
movsb
and
mov
fists
mov
push
lcall
mov
mov
sub
xchg
mov
add
pop
adcl
inc
movsl
out
lret
sbb
ret
push
lret
jg
dec
pop
incl
inc
test
xchg
into
push
addr16
adc
and
dec
iret
dec
or
xchg
jb
dec
clc
mov
push
mov
push
insl
mov
adc
or
xlat
push
jge
adc
cmp
pushl
cld
inc
sbb
lcall
add
jmp
sub
fistpll
fs
pop
jnp
xor
push
scas
push
fdiv
adc
stos
movsb
xor
mov
pusha
cs
xchg
fidivl
sbb
aam
es
mov
push
mov
loope
mov
lods
mov
and
aas
stos
frstor
xchg
mov
mov
rorb
push
push
xchg
xchg
jg
jo
ds
aas
jae
aad
mov
mov
inc
bound
cmp
mov
mov
cmp
js
jb
mov
and
in
mov
test
jb
adc
mov
gs
mov
fimuls
push
cmp
mov
sub
ljmp
mov
cmc
sarb
sub
into
jmp
xor
push
push
out
inc
rol
loop
shrb
sbb
call
fwait
dec
fwait
rcll
mov
pop
inc
add
imul
add
sbb
les
adc
cli
scas
mov
cmp
shr
movsb
cli
add
filds
subl
cmc
xor
ja
repz
jne
xchg
jno
jbe
dec
cmp
mov
pop
sbb
xchg
fucomp
daa
into
daa
inc
cmc
nop
mov
fld
sub
push
sbb
mov
mov
in
outsb
push
add
push
sub
mov
les
mov
movsb
xor
and
jns
out
cmc
lret
push
pusha
xor
orl
mov
imul
ret
jecxz
jbe
movb
xchg
push
sahf
adc
js
sub
mov
stc
sahf
cli
xchg
mov
ret
fistpll
adcb
shrb
jae
xlat
and
mov
cli
dec
leave
sbb
dec
repz
jns
jno
xchg
repnz
pop
loop
sahf
or
test
ds
and
cmp
xchg
lret
aad
or
stos
push
push
mov
stos
aas
sub
jmp
lcall
mov
ficoms
or
and
aam
repnz
mov
xchg
mov
lock
mov
mov
push
insl
adc
mov
scas
clc
gs
or
les
jae
push
inc
sti
fimuls
jb
out
mov
je
fmull
ja
inc
aad
int3
and
out
push
dec
sub
jp
mov
movsb
xchg
stc
mov
or
mov
pop
xor
shll
mov
imul
shrl
xchg
cmp
xchg
cmp
push
test
dec
jmp
adc
dec
iret
jg
lods
jns
cmp
popa
or
or
jb
xor
outsb
aam
pop
cmp
aad
pusha
pop
inc
icebp
cmp
aaa
pop
leave
inc
or
jb
out
lods
sbb
jl
ss
mov
repnz
push
clc
and
mov
in
rclb
pop
std
cmp
cmp
push
inc
mov
mov
dec
leave
lods
lods
mov
fidivs
dec
pop
fucomi
jbe
lds
scas
or
add
mov
xchg
jnp
xchg
cmp
mov
lock
xchg
push
dec
int3
test
jns
cli
jl
sub
xor
jns
dec
mov
icebp
mov
insl
mov
push
imul
js
out
dec
cwtl
repnz
loope
mov
xchg
cld
push
push
mov
inc
jns
aaa
scas
shlb
jle
lcall
mov
xchg
cwtl
aaa
das
hlt
xchg
ficoms
xor
cmp
sbb
dec
out
push
lock
mov
pop
sub
xor
cli
dec
in
cmp
sub
xchg
cmp
cmpsb
add
fldl
into
mov
shlb
pop
je
rol
stos
adc
or
jge
mov
xlat
mov
nop
jns
loope
sbb
cmp
jl
into
cwtl
add
inc
jge
lret
insb
dec
leave
add
xor
out
xor
in
cmp
iret
inc
into
pop
cmp
scas
pop
jl
inc
in
pop
mov
out
pop
mov
adc
stc
in
mov
sub
stc
jle
test
outsl
xor
fsubs
test
sub
test
addr16
hlt
pop
and
lret
push
pop
addl
loopne
scas
scas
lds
fwait
sub
or
mov
movsb
push
cmp
fiaddl
or
mov
xor
icebp
mov
fwait
adc
jne
cli
cmp
roll
adc
inc
add
xlat
push
pushf
adc
sbbl
sub
orb
js
push
sahf
fldt
dec
inc
ficompl
lahf
in
dec
fs
jmp
popa
push
dec
aaa
pop
or
add
jno
xchg
fimuls
shl
in
jo
xlat
pop
fsubr
call
not
push
ljmp
scas
mov
loop
outsl
je
jae
fs
sbb
insb
aaa
fadd
bound
lock
ja
jnp
xor
cmp
sbb
jge
xchg
adcb
jmp
inc
outsb
mov
pop
das
jg
divb
addb
and
insl
xchg
and
int3
jns
ret
mov
cli
sbb
and
enter
sub
in
fcmovb
bound
or
push
cmp
ds
scas
pop
aad
add
je
sbb
adc
es
inc
pop
es
out
fstps
sub
cmp
dec
loop
cmp
jl
nop
sahf
mov
addr16
pop
sbb
sub
inc
and
pop
sbb
mov
sub
add
fwait
dec
fnstcw
imul
lcall
int3
adc
pop
or
test
jnp
dec
mov
hlt
mov
mov
dec
enter
std
movsl
repz
cmpsb
int
scas
out
push
inc
sbb
cld
sbb
fistpll
outsb
mov
xchg
js
inc
in
sbb
jns
mov
or
adc
jmp
lahf
push
scas
imul
lock
scas
sbb
jmp
sub
jo
mov
push
cmc
ss
cmp
inc
mov
mov
inc
xchg
movsl
outsb
jg
jg
and
js
or
pop
sbb
sbb
inc
rcl
in
movsb
outsl
or
sub
pop
jp
lahf
scas
sub
mov
sbb
ret
ret
inc
mov
ret
in
lahf
aad
aad
push
xor
ret
enter
pusha
cltd
jns
pop
add
cld
shrl
push
push
mov
fs
pop
sub
jno
xor
shll
xlat
xor
inc
out
cmp
mov
xor
imul
push
xor
xchg
push
mov
outsb
push
addr16
sub
in
nop
push
scas
pop
in
sarb
outsb
sbb
inc
dec
sbb
loopne
xchg
mov
gs
xchg
push
push
rcrb
pop
dec
jp
daa
jbe
movups
mov
nop
push
sub
adc
xchg
lods
jecxz
dec
jb
fsubl
xor
lods
mov
addr16
and
ficoml
lret
jo
arpl
insl
add
or
dec
push
mov
fstl
mov
mov
out
ffree
cmp
std
jmp
sub
lds
ja
jo
xchg
movsb
fldt
xorb
sub
xor
les
aas
ljmp
in
pop
push
rcl
mov
movsl
cmp
pop
popf
jge
xchg
adc
sub
push
mov
stos
rcr
pushf
pop
jle
ror
xchg
adc
and
mov
cs
add
testl
mov
push
outsb
xorl
test
lods
or
imul
imul
out
cmp
adc
cmp
mov
lahf
cmp
cmp
test
ljmp
jb
fwait
ds
ret
mov
cs
je
fistpll
es
mov
xchg
stos
repnz
fidivs
xor
ret
cmovne
insl
sbb
cwtl
ds
popa
rorl
cmpsb
mov
sbb
leave
imul
enter
pop
sbb
pusha
sbb
iret
cli
mov
sbb
movsb
jnp
mov
enter
mov
xor
enter
jge
pop
cmp
xchg
mov
jle
lcall
cwtl
push
pop
and
pop
fstpt
cs
and
cmp
test
and
xchg
adc
mov
dec
pop
js
clc
dec
jne
mov
dec
adc
and
cmp
daa
insl
insl
dec
mov
sub
push
push
clc
iret
mov
lret
adc
sub
aaa
inc
jns
adc
das
cmp
xor
pop
pop
adc
dec
mov
xchg
dec
fnstcw
inc
sbb
sti
hlt
add
pop
xor
das
hlt
push
cmp
iret
arpl
and
dec
xchg
into
sbb
stos
jg
insb
rorb
stos
dec
xor
mov
dec
or
lods
aaa
lea
fistpll
repnz
lret
or
dec
mov
pop
fnstcw
inc
sub
sahf
out
lock
mov
push
inc
popf
sar
dec
or
jmp
stos
dec
sbb
call
and
fists
out
or
xchg
in
scas
mov
xor
into
mov
xor
push
sarb
rorl
sahf
xchg
pop
ret
or
xchg
sbb
negl
ret
out
notb
sbb
lahf
roll
fstps
fbstp
jb
dec
jno
mov
sbb
xchg
inc
insl
insl
imul
sub
cmpsb
movsl
in
push
movsl
lods
adc
lods
dec
daa
mov
idivb
dec
pop
aam
mov
add
pop
push
or
stos
sbb
jecxz
or
add
aam
mov
xor
cltd
cmp
mov
xchg
ret
ljmp
mulb
pop
cld
pop
sub
hlt
data16
mov
and
mov
cld
sub
pop
xchg
mov
cwtl
and
inc
vpshld
jg
mov
mov
cwtl
cwtl
rclb
cmpsl
pusha
jecxz
mov
pusha
int3
jb
xchg
jae
stos
or
mull
orb
insl
sbb
mov
icebp
push
movsb
mov
fucom
push
pop
shlb
scas
push
add
inc
call
jnp
lods
loope
inc
push
xchg
sti
inc
sahf
mov
mov
xchg
in
jnp
push
pop
xor
hlt
jns
repnz
inc
aad
popf
push
push
mov
pop
jle
jmp
lock
pop
add
icebp
push
jp
mov
cmp
loop
adcb
insl
loopne
jmp
test
pushf
xchg
xchg
das
and
test
and
mov
push
fstps
lcall
flds
cmpsl
jge
ss
adc
sub
outsb
fldcw
or
lahf
decb
sub
lock
dec
mov
pop
outsb
add
lds
test
punpckhbw
js
fsub
fldcw
rsqrtps
jl
dec
sub
pop
test
push
leave
jnp
call
cmp
jp
imul
dec
lods
jae
xlat
js
sbb
sub
push
stc
xor
in
mov
and
adc
insl
stc
xlat
xor
cs
adc
mov
out
cmpsb
or
pop
lcall
mov
popa
push
sub
mov
out
insl
outsl
in
lret
hlt
adc
jecxz
insb
xchg
aas
inc
sub
add
ja
aad
in
pop
xor
fcmovb
xor
test
hlt
lahf
and
pop
mov
andl
and
inc
lret
sub
rclb
out
mov
dec
hlt
pop
inc
fwait
lret
adc
rcrl
jb
or
call
sbbb
sbb
in
sbb
in
inc
add
je
pop
icebp
mov
out
jbe
cmp
jp
data16
adc
out
add
or
loopne
dec
ret
sahf
out
test
push
mov
leave
stc
out
in
sbb
xchg
add
jmp
movsb
inc
daa
xlat
ret
sbb
and
adc
insb
cmp
xlat
or
bound
pop
jno
decl
inc
cmpsb
cwtl
outsl
mov
dec
inc
and
dec
cmp
push
xchg
pop
jne
jne
fs
pusha
mov
out
push
and
xlat
in
pop
or
push
add
sbb
dec
add
roll
stc
cs
loopne
xor
gs
pusha
mov
or
fs
sbb
mov
sahf
sbb
xchg
xor
jmp
shll
ret
jg
aaa
sbb
xor
icebp
cmp
rclb
pop
jno
cmp
lret
xor
cmpsl
fwait
in
lret
adc
fdivl
out
add
loopne
pop
xchg
ss
popa
scas
push
mov
or
pop
mov
cli
jecxz
arpl
or
adc
repnz
mov
outsl
jns
mov
je
pusha
cmp
adc
xchg
adc
xor
mov
cld
cmp
movsl
mov
rorl
mov
lahf
cmp
jle
adc
testl
xchg
or
pop
stos
mov
loopne
xchg
inc
clc
cmp
inc
xorl
cwtl
adc
ljmp
and
jns
loopne
in
bound
ja
in
outsl
xchg
inc
jne
jae
jp
push
cmpsl
add
fsubl
pop
outsl
pusha
roll
xchg
mov
lret
das
dec
aam
sub
loop
cltd
cmp
int
mov
rcr
ficomps
xor
inc
and
dec
int
push
sbb
or
ljmp
into
insl
js
cmp
push
movsb
das
jno
mov
cld
mov
sub
hlt
or
xor
sahf
sbb
pop
ds
and
out
pop
mov
ljmp
ja
sbb
aam
mov
sbbl
jmp
push
jge
dec
xchg
cmp
aas
cmp
mul
mul
nop
jp
ja
mov
mov
fsubrs
pop
jl
sub
jmp
addb
jp
jl
testb
dec
lock
push
fsubr
stos
add
inc
in
sbb
mov
dec
jno
xchg
mov
and
inc
pusha
add
push
add
mov
and
sbb
jl
std
outsl
pop
sbb
push
jp
les
dec
lock
movb
mov
imul
es
std
test
ss
bound
ds
pop
dec
stc
repnz
test
cwtl
stos
insb
out
push
out
mov
mov
or
ffreep
sub
test
gs
and
mov
push
inc
sti
jae
push
sub
jno
dec
mov
xor
jle
mov
inc
and
and
inc
lret
ds
mov
repnz
pop
outsl
iret
add
add
dec
aam
ljmp
xor
sbb
sbb
jl
std
mov
arpl
lea
mov
pop
data16
fs
dec
call
xchg
nop
orb
adc
cs
mov
rorl
xchg
pusha
cwtl
out
fmuls
repz
pop
dec
xlat
cmp
out
add
data16
jle
xor
daa
xor
mov
cltd
mov
push
outsl
ret
out
jg
fcompl
test
mov
xchg
mulb
mov
adc
xor
adc
sub
pop
daa
and
add
adc
mov
icebp
in
mov
jne
push
outsl
je
mov
xchg
jle
jl
pop
mov
ficoms
std
iret
ljmp
fists
cmpsb
cmpsb
adc
imul
js
scas
daa
dec
decl
jbe
in
lahf
cmp
fsts
mov
shrl
cmc
andb
lock
pop
int
sbb
pop
pop
aad
inc
lret
xchg
pop
adc
mov
outsl
fs
call
cmp
jmp
test
outsb
clc
sbb
push
roll
loope
jbe
dec
adc
imul
into
inc
lods
pcmpeqd
fcompl
inc
push
jg
mov
imul
dec
out
pop
scas
loope
sub
movd
ret
xchg
mov
xchg
cmp
dec
mov
dec
test
xchg
fstpl
cmp
inc
pop
fbld
daa
mov
jp
mov
mov
pushf
les
xchg
int
cltd
adc
imul
push
jae
dec
xor
push
and
pop
dec
xor
je
scas
cmc
mov
and
dec
aas
pop
cmp
hlt
hlt
pop
adc
mov
jmp
cmp
mov
cs
xchg
pop
push
sbb
ja,pt
pop
adc
and
fs
out
hlt
lcall
pop
jnp
cli
add
mov
dec
and
xchg
je
pushf
xchg
mov
lods
or
sub
pusha
inc
pop
inc
cmp
in
mov
sbbb
in
stos
lock
cltd
pop
inc
hlt
aam
push
jg
jbe
push
jl
psrad
xlat
call
js
or
inc
and
mov
pushf
xchg
mov
push
ret
mov
sbb
leave
cwtl
xchg
inc
enter
xor
lret
addl
mov
stc
and
lods
out
mov
loope
mov
in
jp
in
popf
inc
loop
in
sbb
xchg
leave
in
mov
mov
test
lcall
adc
rorb
lods
and
in
and
out
jmp
aas
aas
ror
mov
cmpsb
sahf
lods
jnp
mov
jnp
ret
add
add
clc
in
and
pop
lea
cmpsl
cmpsb
and
cmp
outsl
add
push
or
push
mov
call
mov
push
insb
lods
xchg
xchg
xorb
aad
ljmp
push
test
push
roll
std
mov
jae
and
das
out
adc
test
mov
inc
push
push
lods
push
aam
dec
mov
lcall
mov
pop
fs
das
push
cs
push
mov
lret
xor
iret
fstl
ja
xchg
out
push
jp
pushf
pushf
inc
mov
lret
jle
or
push
mov
enter
dec
pop
adc
mov
cmp
mov
jecxz
test
jge
dec
aad
ret
cli
jbe
jp
cmpsb
mov
popf
iret
lcall
xchg
or
sbb
xor
mov
lock
dec
inc
pop
or
sub
aas
jl
add
jp
dec
stos
imul
xor
sbb
icebp
jns
xor
out
in
mov
rcrl
enter
incb
push
push
out
lock
out
dec
mov
xchg
push
lea
inc
into
loop
popf
shrb
xchg
pop
inc
or
out
xchg
cmp
repnz
or
sub
mov
test
adc
jge
lahf
stc
out
mov
fdivrs
enter
test
push
movsb
aad
jecxz
test
fwait
out
lock
movsb
cmp
movsl
leave
cmpsl
imul
xchg
call
mov
cmc
bnd
fsubs
cmc
jmp
sub
in
lock
sbb
push
or
xor
ds
fistpll
cmp
mov
sti
fistl
addr16
cmp
xchg
test
outsb
arpl
add
push
push
out
cmpsb
int
add
xchg
sbb
lret
sub
and
movsb
jg
pop
push
xlat
push
sbb
fmuls
xor
hlt
test
out
mov
mov
imul
mov
test
sarb
arpl
xor
mov
mov
lret
xchg
xchg
xchg
icebp
sub
out
icebp
outsb
fs
xchg
push
das
pusha
into
rcl
dec
popf
daa
add
xor
dec
loopne
xchg
pop
inc
stos
sub
icebp
cmp
jle
ret
sub
mov
sub
dec
push
dec
push
xor
outsb
lock
and
lret
mov
mov
movsb
fsts
push
jo
inc
xchg
jb
shll
push
mov
outsl
cmp
scas
push
sbb
daa
xchg
mov
or
movd
mov
mov
hlt
cltd
repnz
mov
cltd
xchg
jle
dec
shlb
fcmovnb
sahf
std
insb
out
arpl
inc
cwtl
inc
into
fucomip
push
ljmp
sbb
jbe
dec
push
in
es
cmpsb
lods
sbb
or
mov
dec
pop
mov
xor
shll
shrb
into
fldt
jns
jge
inc
or
cmpsl
bound
push
lret
inc
fimull
pop
inc
std
push
ficoml
mov
dec
mov
out
sbbl
frndint
add
scas
dec
mov
adc
sub
mov
pop
mov
push
mov
mov
cmc
mull
jb
jle
sub
enter
stc
aaa
jmp
fdivrp
cwtl
adc
mov
cltd
movsl
fnsave
inc
pop
icebp
mov
bound
xchg
mov
in
aam
loop
xorb
int3
dec
mov
adc
or
dec
lahf
inc
cmp
lret
sub
adc
inc
mov
or
pop
fs
and
jne
mov
mov
pop
cmp
pop
gs
test
push
pop
cmp
loop
daa
xchg
mov
or
or
shrb
ja
addr16
movsl
cmpsb
jne
mov
sub
fbld
adc
push
fbld
pop
fdiv
xchg
lret
pop
jno
mov
add
fstpl
test
sbb
or
adc
mov
in
xchg
loopne,pn
int
push
pop
xchg
stc
fbstp
mov
repz
sub
je
out
pop
mov
pop
xor
in
cmp
xchg
xor
push
or
inc
test
hlt
lret
cmpsb
push
push
pop
imul
add
sub
enter
pop
cmp
adc
adc
inc
jb
ds
loop
inc
xchg
out
cmp
rolb
js
outsb
js
popf
stc
mov
cmp
dec
in
jno
into
or
add
loopne
stos
xchg
fildl
cwtl
sarb
mov
icebp
mov
and
add
aad
mov
cli
test
mov
inc
sub
push
push
cmc
jp
mov
outsb
push
dec
je
sbb
out
movsb
adc
and
std
das
mov
ret
cmp
out
ret
pop
xchg
push
or
scas
aas
mov
mov
sbb
in
movsb
mov
and
clc
dec
pop
cmc
xor
jns
out
loope
lahf
xchg
adc
imull
movsl
sub
mov
inc
inc
jg
pop
ss
les
mov
mov
sbb
pop
lds
cld
add
adc
cmp
cmpsl
pop
lock
mov
rorb
test
out
pop
pop
add
xor
cmp
negb
xchg
in
adc
pop
dec
pop
outsb
or
sub
jmp
push
cmp
dec
jmp
inc
filds
mov
test
jne
push
push
and
lahf
mov
push
mov
dec
call
test
into
addr16
mov
dec
iret
jecxz
out
shll
pusha
sbb
fldt
xchg
xchg
and
push
push
and
je
xor
shrb
pop
arpl
xor
cmpsl
push
lahf
mov
inc
test
outsb
mov
mov
mov
pop
lahf
filds
pop
dec
gs
loope
xor
add
mov
out
repnz
sub
pop
fisubrl
movsl
ret
push
aaa
mov
cwtl
fsubrl
dec
cmp
add
sub
cmc
pop
aam
iret
mov
sahf
out
in
mov
lahf
mov
mov
stos
jmp
gs
shrl
test
shrb
in
dec
lea
stos
fmuls
xor
inc
pop
js
mov
mov
fs
shl
jae
cmp
or
inc
popf
or
mov
mov
lret
xchg
je
rclb
in
pop
mov
movsb
dec
dec
inc
and
mov
mov
mov
test
push
cs
cmpb
mov
stos
arpl
inc
push
push
mov
mov
mov
xchg
call
in
cmp
fcmovnb
lods
and
pop
loop
mov
mov
std
fdivr
sbb
jnp,pn
popf
jnp
pop
xchg
pop
push
xchg
mov
or
in
rclb
dec
cmp
adc
idiv
pop
aaa
dec
pop
jg
std
mov
in
rclw
pop
int
pop
add
dec
popf
add
mov
insl
test
mov
pop
gs
shlb
and
jno
es
lds
loope
stc
jmp
pop
xchg
mov
out
or
cmpsl
cli
jl
insl
fwait
pusha
push
or
popa
aad
push
dec
pop
fldcw
dec
xor
stc
gs
cltd
and
lods
in
cmp
out
cmp
das
sbb
lea
sahf
push
imul
and
bound
pop
movsb
addr16
pop
mov
js
outsl
les
push
nop
test
je
dec
sbb
add
movsb
cli
and
fiaddl
aas
pushf
pop
pop
or
shrb
addl
xlat
fs
sub
faddl
ucomiss
repnz
add
movsl
mov
inc
arpl
nop
popa
mov
pop
push
in
bound
shrb
pop
dec
xchg
lcall
rclb
dec
fstps
push
jge
add
fisttpl
xlat
fsqrt
mov
mov
lret
adc
and
lcall
scas
divb
cwtl
stc
push
cmp
aas
loope
fsubl
inc
popf
pop
sub
jae
dec
je
shl
cmp
inc
jne
outsb
mov
xor
ret
push
dec
fistl
test
testl
cltd
mov
mov
and
jae
push
lea
fnstsw
push
test
je
cmpb
sub
adc
fcomps
rcrb
lret
sub
pop
adc
sub
in
and
popf
outsl
fs
push
stos
push
test
cmp
sub
loop
rcll
fistps
lds
inc
mov
add
inc
bound
outsl
mov
pop
xchg
mov
callw
add
stos
outsl
mov
iret
cwtl
imul
mov
dec
or
popf
fildll
ja
ret
pop
pop
stos
sahf
dec
lret
rcrw
in
mov
repnz
adc
mov
sub
or
into
dec
lea
clc
test
ret
mov
daa
mov
cld
in
daa
repz
clc
test
fwait
push
es
shlb
outsl
lods
pop
pop
lcall
daa
lret
or
scas
mov
pushf
add
subl
into
movsb
scas
dec
sbb
test
fcoms
imul
leave
cmp
fcomps
loopne
adc
mov
pop
movsb
imul
and
xor
sti
mov
and
addr16
dec
xchg
pop
jg
mov
shlb
mov
push
and
in
xchg
ja
inc
xlat
or
sbb
aad
sub
dec
lret
mov
lret
or
scas
push
dec
add
fcmovb
cwtl
mov
push
lods
cwtl
arpl
and
dec
jb
mov
arpl
cmp
out
xor
cli
aam
lret
leave
pushf
dec
xor
adc
jno
adc
movsl
shll
mov
dec
scas
imulb
addr16
sahf
xchg
jno
adc
js
xor
repnz
mov
mov
scas
fwait
lcall
adc
out
xchg
pop
idivb
int
inc
stc
fistps
ss
mov
lret
cwtl
mov
add
push
jno
pop
in
inc
xcrypt-ofb
cmpsl
push
aam
xchg
test
xchg
adc
sahf
push
movb
jl
push
sub
shll
mov
xchg
jno
scas
sbb
sub
xcrypt-cfb
cmpsl
daa
mov
jp
jge
adc
test
mov
stos
jns
jno
je
stc
sahf
adc
test
stc
dec
xchg
or
aas
arpl
inc
and
mov
jp
or
lret
sbb
dec
and
push
jae
mov
pop
mov
xlat
mov
cmp
xchg
lret
jb
push
lahf
inc
popf
sub
fisubrl
ja
add
rolb
jle
push
inc
leave
ljmp
mov
mov
mov
adcl
mov
pop
lahf
mov
pop
ret
mov
mov
movsb
stc
add
jbe
dec
xchg
dec
xorb
test
inc
adc
mov
cmp
sub
outsl
mov
inc
jp
pop
push
rcrb
pop
mov
hlt
test
mov
stos
pop
je
adc
sbb
adcl
adc
mov
aaa
movsl
lret
jmp
mov
jae
sub
out
inc
xor
lret
or
cmp
addr16
outsb
adc
cmp
dec
adc
mov
mov
mov
inc
das
mov
add
pop
lods
pop
in
sub
sub
add
icebp
pop
xor
lahf
ficoml
pusha
mov
push
mov
mov
rcrb
push
leave
fistpl
fsubl
les
das
mov
jo
push
std
xchg
lahf
shl
lahf
mov
inc
in
add
push
in
out
jmp
xor
adc
lret
mov
cli
xchg
fldcw
jns
add
arpl
insl
pop
adc
push
aad
mov
andb
xor
shrl
lret
xor
push
or
fildl
jae
push
sbb
ret
mov
push
sbb
xchg
and
sbb
outsl
jle
fcmovnbe
jo
enter
mov
bound
ds
imull
in
in
mov
aad
mov
shr
test
pusha
loope
js
popa
dec
sbb
enter
stos
push
push
add
add
xchg
hlt
xor
jo
js
ss
testl
pop
bound
hlt
jp
das
dec
dec
je
cltd
cld
xchg
add
xor
push
adc
in
out
adc
stos
in
movsl
pop
ja
in
daa
mov
inc
mov
jmp
cmc
cmpsl
pop
aad
push
repz
nop
cltd
xor
add
cltd
rcrl
push
lcall
iret
repz
adc
addr16
std
js
sub
xor
or
mov
loopne
sbb
dec
int3
dec
shlb
and
add
sbb
jg
dec
xor
fs
loope
pop
movsb
push
sub
imul
inc
cmp
pop
pop
dec
gs
sub
rorl
or
sarl
lcall
ss
cmp
push
adc
orl
testl
popf
cmpsl
imul
mov
add
sahf
loope
jae
in
cltd
shlb
test
mov
cld
cmp
mov
xor
icebp
ss
mov
push
push
pop
pop
in
ja
mov
sbb
jbe
mov
or
push
xor
cmp
cli
pop
clc
mov
xor
inc
aaa
fimull
dec
add
iret
test
adc
jne
popa
mov
cmc
popa
or
movsb
cmpsb
add
cwtl
jge
lock
cmp
hlt
xchg
pop
pop
inc
pop
mov
movsb
icebp
sub
aas
aas
scas
nop
mov
lret
push
cld
or
test
out
cmp
loopne
insb
pusha
xchg
fldt
pop
xchg
jge
push
insb
roll
jns
sbb
stos
mov
sbb
dec
mov
push
ret
cli
sbb
fmull
jne
je
je
arpl
dec
sbb
loopne
data16
push
cmc
arpl
mov
outsl
cs
cmp
jl
cli
mov
stos
jle
add
dec
add
in
cmpsb
pushf
lods
arpl
and
sub
dec
outsb
addr16
daa
fstps
adcl
int
mov
ret
mov
ljmp
jno
cmpsb
andl
std
rcrl
je
mov
sub
mov
adc
arpl
sub
cmp
dec
divl
out
and
es
stc
pusha
outsl
xor
push
loop
pop
scas
lahf
add
imul
jge
mov
pop
sbb
xchg
movsb
or
pop
jnp
mov
xor
test
cli
and
jecxz
push
push
or
xchg
dec
mov
aad
mov
pop
and
or
inc
pushf
mov
clc
addr16
push
and
mov
cld
lret
and
inc
loop
rcll
mov
test
jne
xor
mov
ljmp
jmp
xchg
cmp
mov
loopne
cmp
xor
mov
fdiv
dec
push
lret
cmpsl
lret
mov
push
and
mov
jmp
cmp
shl
jns
cmp
inc
fistpll
and
mov
cmpsl
push
inc
int3
dec
mov
bound
sbb
mov
and
out
mov
sbb
mov
imulb
jns
btc
cs
sbb
dec
sub
mov
sbb
nop
sbb
sbb
mov
jae
jg
inc
mov
and
xor
testb
adc
sbb
stos
fldl
testl
data16
ficomps
and
stos
pop
xor
xchg
dec
mov
xchg
pop
mov
in
and
insl
sbb
mov
mov
stos
iret
mov
fdivrl
jge
cwtl
test
xchg
repnz
lods
xchg
fisubrl
cmp
add
and
loope
jp
icebp
push
addl
je
and
rol
enter
add
sub
push
mov
out
inc
jmp
xchg
or
sbb
mov
push
and
push
std
mov
adc
mov
shll
inc
pmuludq
lcall
inc
xchg
jae
daa
fdivr
popf
lret
ss
dec
int3
les
xor
xchg
mov
ja
lahf
aas
outsb
mov
test
xchg
ret
push
stc
xor
sahf
jnp
xlat
push
pop
ret
dec
cmpl
pinsrw
scas
xor
fs
shrb
xlat
std
rolb
pop
xadd
push
dec
sarb
add
sub
pop
cwtl
or
testl
das
clc
or
mov
jb
aas
je
out
push
iret
cmp
sti
cmp
inc
sbb
rclb
movsb
sbbb
data16
xchg
jne
push
fcmovnbe
es
lods
loope
test
test
aam
xchg
lods
jmp
add
jge
arpl
and
push
ja
bnd
pusha
mov
sub
push
sbb
xacquire
xchg
xchg
test
loopne
addr16
clc
and
notrack
lea
mov
jno
dec
xor
pop
push
or
push
pop
loope
jle
mov
xlat
aam
shll
std
int
ljmp
inc
push
outsl
mov
jge
xchg
add
cmp
popa
js
or
out
nop
scas
mov
movsb
push
fxch
rclb
pop
xor
and
cld
lcall
cmc
lods
push
add
pop
enter
mov
and
jge
jb
mov
fs
add
cmpsb
out
jg
aad
and
pop
ljmp
aad
addr16
push
cli
outsl
loopne
jmp
or
xchg
push
add
bound
dec
push
int
in
neg
scas
dec
test
scas
test
dec
jmp
sub
shrl
mov
push
inc
cmpsb
xchg
imulb
sahf
xor
je
xor
jmp
mov
rol
and
push
mov
pop
sbb
mov
lds
in
cltd
push
cmp
pop
stos
jo
lahf
xchg
dec
jl
push
enter
jns
test
hlt
pushf
imull
push
shll
pop
sahf
xchg
in
add
mov
sbb
test
cmp
es
lret
pushf
inc
mov
cmp
imulb
xchg
loop
lods
pop
or
inc
fsubrl
add
cmpb
xor
sub
adc
movsb
sub
popf
mov
inc
sub
loope
fisttps
xor
nop
fsubl
cmp
push
xchg
dec
fsts
in
cwtl
stos
or
and
mov
xchg
jge
cmp
xchg
fnstsw
cmp
mov
lcall
loope
insl
jp
mov
ss
jbe
xor
adcb
outsb
cli
push
pop
repnz
xchg
mov
sahf
decl
jle
mov
pop
nop
cltd
sti
arpl
ja
jbe
dec
das
testb
mov
adc
xchg
jge
pop
mov
xchg
push
mov
xor
xor
aad
cmp
pop
shrl
enter
mov
and
and
mov
or
arpl
lods
das
movsb
lea
movb
inc
gs
scas
adc
xchg
aam
jae
xor
jl
sub
int
xchg
jnp
das
scas
mov
frstor
push
rcrl
push
inc
cmp
les
les
mov
insb
fs
lods
mov
and
or
sbb
leave
rcrl
adc
pop
lods
and
sub
clc
cs
out
cmp
movl
and
mov
popf
mul
insb
testl
xchg
jle
sbb
mov
adc
mov
push
pop
mov
add
lea
push
cmp
in
nopl
pop
out
scas
xchg
int3
and
push
mov
dec
mov
mov
sbb
mov
mov
loopne
cmp
dec
jns
in
sbb
xor
pop
add
scas
lock
xor
mov
xor
push
cmp
popf
xor
push
out
sbb
mov
imul
es
cmp
icebp
cltd
lods
sub
scas
fcoml
pop
fistl
xlat
scas
mov
and
xor
pushf
les
js
shrl
daa
mov
mov
jmp
add
rolb
jnp
mov
rorl
add
int
pop
inc
ds
mov
pop
mov
stos
dec
cmp
inc
pop
or
out
or
add
and
lods
out
or
jne
cmp
jle
pop
jbe
mov
push
call
scas
jle
dec
and
sbb
lret
andl
lret
add
mov
pop
ja
xchg
cli
add
cmc
repz
and
call
or
repz
enter
sbb
int3
decl
insl
add
mov
dec
lret
out
jmp
mov
sbbb
sbb
dec
std
enter
jmp
sub
icebp
movsb
sub
es
das
aad
add
cmp
aas
in
outsl
push
cwtl
xchg
or
movsb
sub
mov
sbb
test
jg
call
orb
xchg
mov
emms
das
xchg
push
push
dec
adc
inc
sbb
jle
ja
addb
fcompl
test
mov
loopne
imul
push
push
rcr
or
pusha
xchg
dec
sbb
and
dec
push
push
fdiv
rorl
sarl
enter
jp
and
dec
push
ret
xor
fcmovbe
jge
ljmp
aad
sbb
jae
mov
pop
and
popa
shr
mov
sti
icebp
scas
test
das
xchg
cmp
fcomi
add
fs
fists
cmp
lea
stc
push
leave
pop
mov
pop
fwait
pop
outsb
push
add
mov
int3
sbb
push
mov
loope
outsl
inc
dec
cmp
xchg
bound
lods
cs
sbb
loop
fcompl
hlt
mov
jecxz
dec
add
fadds
mov
lret
sbbl
push
adc
push
add
insl
push
test
addr16
xor
jbe
fwait
xor
adc
jmp
cltd
mov
cltd
pop
adc
in
inc
dec
mov
push
push
add
push
cmp
fwait
dec
lcall
cmp
orb
pop
into
adc
mov
pop
mov
loopne
inc
jecxz
fcomps
xchg
dec
cmovge
mov
movsb
sub
lock
dec
fnstenv
cmp
js
push
push
pop
mov
out
out
pop
cmp
nop
and
xor
push
pushf
xchg
sub
sbb
pop
mov
int3
movd
es
cmpsb
xchg
jb
push
mov
adc
adc
psraw
push
ret
arpl
push
jne
fdivrl
outsl
dec
sub
mov
mov
cmp
fistpll
ficompl
push
mov
mov
call
sub
push
sar
faddl
jne
xor
scas
inc
sarl
sbb
mov
mov
cltd
sub
and
xchg
fcmovbe
pop
fcoml
sbb
adc
fistl
subl
sti
popl
les
mov
loop
movsl
ret
inc
fxch
mov
pushf
xchg
fcomps
sbb
inc
jmp
sahf
jbe
lock
push
or
sbb
mov
jecxz
push
push
inc
inc
fwait
out
sub
xchg
mov
dec
push
out
xchg
push
shlb
bound
or
ret
add
push
xchg
dec
ret
cld
mov
aad
xlat
jae
jmp
inc
adc
stos
into
dec
jns
test
lods
loopne
popf
testb
mov
jmp
cmp
test
sahf
push
adc
jbe
jmp
fidivrl
nop
ret
sarl
insb
ret
ja
int3
xlat
pop
mov
push
dec
mov
sub
clc
push
lods
inc
jae
push
mov
mov
dec
sub
jmp
dec
sbb
xchg
jmp
and
mov
out
cmpsl
clc
push
or
dec
leave
adc
mov
rcrb
jl
pop
ds
imulb
pop
adc
xor
sbb
cmp
ss
aad
std
fistl
sub
mov
add
aaa
or
movsb
push
stc
setg
mov
sti
adcb
dec
rcrl
push
cmp
mov
test
aaa
into
xchg
and
pop
jns
mov
je
adcl
mov
cwtl
lods
fbld
fstpt
stc
mov
jmp
push
lock
test
adc
lcall
movsb
jne
mov
mov
adc
fmull
lret
mov
jle
or
insl
mov
es
ljmp
test
push
hlt
subb
dec
and
and
xor
mov
popa
hlt
and
and
pop
jae
mov
inc
xor
push
or
inc
out
push
lahf
or
push
dec
imul
inc
jg
ret
fdivrl
adc
ds
push
push
sub
cmp
jg
mov
loopne
and
test
daa
xchg
mov
mov
jb
inc
aas
aas
sbb
fsubp
cmp
cwtl
hlt
and
es
ds
mov
ficomps
and
fsubrs
insb
movl
inc
mov
out
mov
mov
std
sbb
inc
push
mov
cmp
in
sti
incl
sti
push
out
mov
rclb
mov
cltd
mov
sub
and
jbe
mov
lock
shlb
dec
jbe
pop
popf
pop
push
nop
loop
lods
int
pop
xchg
in
ret
mov
mov
inc
inc
cmovno
or
and
arpl
movsb
add
adc
jne
sti
mov
jl
insb
mov
iret
and
ficoms
rorl
mov
mov
cmp
in
daa
fcmovnbe
or
or
arpl
sbb
mov
lods
shll
or
mov
push
add
mov
pusha
lods
mov
ret
fsubl
das
xchg
cmpsl
repnz
inc
imul
lcall
fisttpl
loop
lock
cmpsl
std
out
std
push
icebp
out
mov
test
and
inc
add
pop
xlat
sbb
push
and
scas
push
fdivs
popf
inc
or
out
xchg
mov
mov
rdmsr
loopne
imul
adc
sub
aam
lret
clc
idiv
outsb
pushf
sub
shl
stos
xor
mov
mov
lds
fwait
aas
lahf
push
pop
int3
daa
dec
fwait
call
sbb
aas
aaa
or
cld
mov
and
jne
scas
data16
add
xlat
popa
and
into
and
pop
enter
or
ds
and
test
cltd
inc
adc
push
xchg
adc
test
mov
stos
dec
lds
dec
sti
movsl
xchg
insb
hlt
aam
mov
jg
jl
pop
xor
int
mov
out
dec
pop
repz
pop
pop
fdivp
cli
popa
orb
addr16
das
stos
xlat
jnp
cmpsl
lds
ss
ljmp
mov
xlat
aad
data16
or
mov
test
pop
mov
addr16
sarb
mov
repnz
out
fwait
out
ret
xchg
mov
and
adc
mov
insl
test
fiaddl
push
adcb
out
or
xchg
jns
push
pop
ret
lock
cmpsl
iret
xchg
jl
push
add
ljmp
push
std
or
popa
dec
hlt
lea
scas
cmp
inc
sbb
jg
cmc
mov
dec
cmp
ficomps
stos
stos
jae
in
arpl
in
fwait
mov
notb
xor
xchg
mov
inc
ret
rcrl
or
mov
or
inc
test
js,pn
scas
pop
mov
arpl
cld
leave
pop
dec
das
repz
aad
and
mov
jp
outsl
jne
push
lea
loope
sbb
push
ret
lcall
pushf
mov
xchg
add
adc
mov
dec
adc
ja
mov
aas
add
movsl
movnti
int
fldenv
pushl
lds
xchg
dec
dec
mov
int
pop
icebp
pop
insb
adc
in
sub
sub
xchg
xlat
fisubs
out
aaa
addl
mov
ficoml
roll
dec
jecxz
loopne
dec
daa
insl
mov
out
jae
les
dec
mov
jecxz
mov
mov
mov
inc
xchg
inc
adc
xor
xorl
add
shlb
jecxz
cwtl
add
stos
loop
jp
insl
pusha
mov
insl
hlt
cmpl
ljmp
lds
mov
aas
mov
js
pop
lods
mov
mov
sub
dec
icebp
sarb
pusha
popf
jge
cmp
cmpsl
cmovl
xchg
int3
ficompl
xchg
or
cmp
or
movsl
mov
imul
aas
idivl
sbb
push
std
xchg
jecxz
jno
inc
or
in
sbb
push
loope
push
ds
cmp
out
clc
loop
bound
inc
mov
pushf
popfw
popf
cwtl
or
mov
movaps
into
sbb
xchg
push
insb
push
sbb
movsb
sub
pop
loop
iret
and
lods
push
pop
or
int3
dec
js
lods
cmpsl
pop
mov
jb
sahf
leave
aas
cmp
xchg
add
xor
xor
inc
xor
adc
xrelease
fsubrs
mov
push
fbld
lcall
stc
rolb
cmpsl
mov
sub
sub
jnp
icebp
push
mulb
mov
push
inc
insl
sti
adc
xor
mov
mov
push
and
sub
inc
shlb
loope
push
push
pop
mov
mov
xor
aas
and
sarb
pop
pop
shlb
and
mov
pop
sti
dec
or
gs
in
mov
inc
push
hlt
dec
jbe
mov
adc
lret
jmp
push
and
pop
sbb
adc
aam
jle
xor
push
inc
dec
push
pop
xorl
or
add
scas
and
cld
sti
xor
xor
push
mov
fimull
push
push
sbb
lea
xor
cmp
call
push
mov
in
mov
push
into
mov
mov
xchg
repz
push
jns
cmp
pushf
mov
pop
stos
pop
cmp
popf
cmp
xchg
push
scas
mov
stc
and
dec
pop
jmp
push
sub
test
lret
mov
mov
test
xor
adc
popf
stc
pop
popl
cmp
push
es
sub
je
ja
fcoms
std
jnp
mov
test
insb
loop
jb
cli
fs
sbb
nop
movsb
or
mov
xchg
dec
jmp
ja
cwtl
imul
adc
out
push
xchg
fwait
cmc
dec
xlat
cmc
adc
shll
fdivrl
xchg
lock
icebp
and
jne
loopne
aas
pop
enter
fbstp
cmpsb
testl
xchg
aaa
idivb
stos
testb
mov
xor
mov
mov
movsb
imul
dec
pop
ss
jp
jmp
dec
leave
and
sbb
adc
add
inc
sub
ds
lcall
xchg
shrb
testb
ret
test
repz
cmp
sbb
iret
test
lock
lea
shll
mov
add
imul
jecxz
in
and
cltd
xor
sub
or
ficompl
scas
push
mov
sbb
xchg
cmp
aas
aas
lds
dec
cmp
test
ficomps
cwtl
sub
pop
and
dec
dec
adc
dec
mov
ja
dec
mov
inc
hlt
minps
mov
rcrl
pop
mov
lds
mov
lea
inc
bound
or
lods
sub
inc
jmp
inc
test
xchg
cmpl
mov
xchg
jnp
and
loopne
mov
sbb
nop
xchg
dec
push
sbb
lcall
jne
inc
daa
fmull
test
sti
icebp
ret
test
mov
sub
cmp
pop
ljmp
jno
clc
xchg
xchg
pop
mov
loopne
sub
pop
int
vpand
inc
cmp
lds
fidivrl
in
imul
aam
push
cmp
sbb
je
mov
mov
insb
cmp
rolb
mov
mov
mov
jnp
xchg
dec
push
ds
cltd
jnp
or
fisubrl
sbb
repz
dec
add
add
cmp
or
inc
push
add
aaa
mov
jbe,pn
fsubrl
fidivs
cmp
fstpl
xor
dec
out
adc
outsl
sbb
or
pusha
inc
sbb
push
pop
fcompl
xchg
or
aad
lds
mov
jmp
dec
push
testl
pop
fisubrl
fsubrp
pop
xchg
nop
pop
inc
push
fildll
sub
jo
es
insl
mov
add
xchg
sub
jge
push
or
push
jle
mov
dec
insl
ljmp
sbbb
sbb
xchg
ja
mov
pop
ljmp
xor
frstor
test
lcall
mov
out
pop
imul
sbb
or
les
push
inc
sub
jmp
out
jmp
arpl
pop
xchg
mov
xchg
xor
pop
xchg
push
mov
loope
jo
fsubr
xchg
xchg
jb
pop
mov
sub
xchg
ja
nop
bound
jnp
mov
push
inc
and
push
sbbl
ret
xor
xor
xchg
jb
dec
mov
push
pop
inc
or
clc
cmpsb
cmpsb
jp
or
xor
popa
in
and
mov
or
push
fwait
mov
mov
jp
repnz
dec
add
lahf
xor
xorl
or
and
jmp
das
loopne
adc
jmp
sahf
gs
jl
clc
mov
popa
adc
daa
popa
pop
sti
jl
rcl
sahf
dec
shlb
std
es
notl
outsb
push
sbb
xchg
adc
jns
mov
andb
mov
fdivrl
mov
push
test
mov
movsl
les
jp
jb
fs
lret
mov
loop
cmp
xchg
dec
jge
int3
jle
out
xchg
jns
sbb
xchg
add
mov
in
push
cmpsb
cld
push
out
test
fs
aas
lods
in
icebp
jecxz
mov
sbb
adc
into
inc
mov
outsl
adc
insl
or
pop
enter
cmp
fisubs
js
stos
or
jns
push
add
jp
cmp
and
push
jle
pop
inc
xchg
mov
dec
mov
xchg
ds
das
mov
aaa
in
addr16
into
aad
push
pop
mov
inc
or
cmp
in
add
enter
cld
xchg
jns
mov
sarb
lods
dec
cmp
push
or
jle
jg
aaa
push
arpl
insl
push
push
cmp
out
lcall
mov
pop
cmp
insb
xor
sub
and
mov
call
cld
aas
mov
or
out
cmpsl
sub
cmpl
adc
jge
rcrl
test
js
cmp
daa
test
mov
lds
shlb
xchg
mov
pop
pop
cmp
push
dec
mov
jl
xor
pop
insl
push
sahf
aaa
daa
lcall
mov
rolb
in
call
out
std
dec
inc
sub
pop
mov
mov
inc
push
dec
dec
fsubr
jecxz
or
push
inc
fidivrl
push
mov
mov
inc
fbstp
jae
movb
cmp
addb
push
fstl
jo
pop
jmp
sti
int
rcll
leave
xchg
xchg
rcll
push
dec
int
in
dec
add
jmp
mov
test
xchg
push
loopne
imul
jg
mov
fimull
mov
popf
addr16
adc
mov
push
inc
rclb
ja
cld
or
jmp
push
cltd
test
mov
pushf
shrb
xchg
pushf
sti
xlat
jge
sahf
mov
mov
das
xor
pop
je
or
inc
cmp
aam
mov
mov
sub
leave
xchg
std
sbb
ret
inc
push
dec
popa
sti
loope
pop
jp
ja
test
dec
pop
push
movsb
aas
push
mov
sbb
push
cmpsb
popf
faddp
pop
scas
insl
scas
jae
cltd
fisubl
inc
fstps
dec
ss
std
sbb
out
int
sbb
dec
es
mov
leave
loope
loop
jg
mov
adc
mov
inc
cld
cli
jge
xor
or
xchg
int3
in
pushf
mov
rorb
in
jbe
lret
lahf
fwait
mov
dec
out
or
xchg
and
cli
sub
jns
pop
cmp
jg
dec
jb
das
jns
shrl
mov
jne
lcall
aam
fdivp
addr16
js
aaa
mov
inc
mov
pop
xchg
insl
cmp
and
inc
repnz
lock
pushf
aaa
inc
rorb
sbb
mov
ljmp
xor
xchg
jnp
test
mov
aam
xchg
lods
or
lea
or
stc
mov
or
pop
adc
les
adc
add
xchg
shl
add
ljmp
push
adc
out
es
and
push
lock
mov
mov
jmp
or
clc
mov
fmul
jne
lods
lahf
push
lret
mov
fsts
adc
push
cmp
jne
stc
das
pop
aaa
loop
or
mov
lock
mov
outsl
push
cmp
stos
mov
push
lcall
addb
je
lret
mov
pop
in
lret
leave
inc
stc
cltd
dec
mov
jle
mov
divps
mov
push
pop
in
jg,pn
nop
mov
fsts
sbb
mov
fwait
imul
mov
enter
push
test
sbb
xor
mov
fisubrs
pushf
test
dec
pop
aaa
rcll
xchg
push
jp
call
lret
fbstp
mov
orb
sahf
sbb
xchg
ret
imul
cs
data16
mov
lock
imul
enter
mov
pop
xchg
xchg
dec
subl
jno
mov
push
jno
dec
lcall
pop
mov
imul
das
incl
std
pop
push
jnp
mov
cmp
jbe
daa
cs
addb
push
xor
xor
push
ret
pop
xor
inc
cltd
jno
xchg
push
add
dec
daa
jge
leave
pushf
jge
pop
add
movsl
out
aaa
and
adc
das
movsl
or
fwait
movsb
test
mov
add
lret
lret
shlb
adc
je
xchg
out
push
les
loop
insb
dec
mov
inc
dec
pop
fwait
inc
and
cmp
adc
sbb
push
jae
mov
mov
dec
push
inc
pusha
and
fcomps
not
pop
mov
std
push
and
mov
stc
or
subb
mov
pushf
mov
in
pop
cmpsl
add
pusha
push
ja
and
inc
loop
js
push
mov
mov
ss
ja
mov
pop
pop
dec
enter
test
ljmp
sub
xor
in
lcall
pop
mov
aaa
or
aam
pop
fiaddl
pop
mov
sbb
repz
pop
enter
add
adc
mov
xchg
inc
out
mov
js
xchg
jo
and
ljmp
daa
jle
cmpl
jae
fneni(8087
mov
or
add
gs
adc
fs
in
xchg
test
dec
dec
adc
and
daa
jns
inc
push
daa
dec
enter
jp
fistl
iret
push
add
outsl
aam
push
dec
in
fidivl
insb
out
dec
hlt
dec
cmpsl
pop
lods
cmp
adcb
mov
push
rcrb
push
pusha
jmp
dec
pop
push
add
les
add
aam
into
js
lahf
and
pop
lret
iret
push
pop
dec
inc
cmpl
repnz
push
adc
insl
adc
xchg
pop
mov
jmp
cmp
xchg
lock
and
lods
cmpsb
jae
add
movsb
sub
jb
push
push
sbb
test
outsl
test
xlat
daa
insb
or
mov
icebp
mov
dec
and
jl
push
mov
test
adc
mov
jo
push
outsb
jae
jmp
pop
xor
mov
stos
mov
mov
sahf
out
cmp
xor
sbb
fnsave
lock
mov
loope
jp
xlat
data16
cmp
test
sub
push
xchg
shll
push
call
fildll
bound
mov
aam
xchg
and
xchg
xor
ljmp
sahf
out
sub
cltd
cmpsb
pop
cmc
and
imul
jnp
pushf
fmulp
cmp
and
pop
mov
add
out
dec
mov
and
out
lock
cwtl
jae
sarb
in
fwait
rorb
inc
and
stc
pushl
loop
call
fnsave
fwait
insb
cmpsb
xchg
movsb
xchg
pop
mov
adc
xorl
push
cmp
pop
aam
jno
rolb
fninit
repz
jnp
dec
or
push
sti
mov
push
sarl
xchg
pop
sub
and
imul
mov
negb
dec
xchg
repnz
xchg
aas
or
push
sub
adc
cmp
stc
mov
cmpsb
mov
jmp
adcb
sar
aad
enter
push
push
sti
lahf
add
xor
scas
push
dec
scas
fiaddl
test
popa
mov
dec
add
xchg
rorb
lcall
cwtl
sub
or
shlb
mov
shrb
or
loop
mov
ret
xor
pop
lcall
sbb
aaa
movsl
aas
adc
imul
insb
aas
into
scas
dec
arpl
out
push
hlt
in
push
sub
cmp
push
lods
pop
mulb
mov
inc
call
rcrb
sub
mov
mov
xchg
lahf
mov
jnp
popf
popa
pop
cmp
hlt
fisubrl
adc
aaa
out
cmpsl
xlat
gs
push
enter
xchg
popf
push
dec
or
rol
cmpsl
testl
push
cmp
sub
negl
jnp
pop
mov
divb
imul
mov
sbb
hlt
mov
pop
push
cmp
push
mov
ds
pop
cmp
or
mov
cmpl
and
je
push
sti
xchg
mov
xchg
adc
lcall
pmulhuw
pop
dec
out
push
xchg
test
pusha
test
adc
mov
xchg
test
lcall
clc
and
dec
mov
outsl
out
dec
fdecstp
out
inc
jmp
test
xchg
bound
sub
fsubl
into
lods
sarb
push
int
dec
or
enter
shll
movsb
xor
sbb
push
andb
jle
fcoml
xchg
js
and
xor
push
ds
lods
adc
cmp
les
cmpsb
ds
flds
repnz
lahf
xor
roll
shrl
pop
xor
hlt
xor
pop
xchg
cmp
fistpl
pushf
mov
mov
xchg
mov
jno
sub
aam
imul
mov
pop
jg
and
jp
and
mov
or
out
pop
out
jle
movsb
mov
pop
aad
fisubs
fdivl
jmp
aad
popa
aas
outsl
mov
pop
mov
test
push
aad
stos
pusha
push
dec
jne
ret
push
cmp
rorb
nop
dec
fsincos
ds
cmpsl
sahf
mov
jecxz
nop
les
sub
xchg
push
push
jmp
neg
inc
mov
jb
lods
push
pop
ror
adc
es
fistpl
or
push
sub
out
pop
adc
mov
scas
outsl
stc
in
shll
mov
pop
imul
sahf
pop
inc
add
jge
push
icebp
and
lret
test
push
jg
ja
adc
ja
and
movsb
ror
sbb
notb
test
sbbl
mov
sahf
xchg
cmpsb
cmp
adc
and
sub
cs
xor
dec
jo
aam
leave
jnp
aam
test
mov
cld
jb
xor
sti
in
jg
mov
or
lock
push
sar
in
mov
adc
or
sub
jmp
lret
das
mov
lods
cmp
dec
ds
jg
mov
divb
femms
cmp
mov
xor
sub
and
or
popl
shll
adc
pop
sub
call
or
mov
and
enter
jp
pop
ds
nop
jmp
std
dec
movsb
adc
movl
outsb
clc
mov
add
test
movsl
fstl
rcr
aam
cmp
in
push
mov
mov
popf
xchg
jnp
cmp
adc
outsl
cmc
test
loope
fcoms
daa
scas
stos
dec
mov
cs
xchg
mov
or
sbb
les
cli
das
pop
add
inc
mov
gs
mov
subl
push
lea
stos
xor
mov
jge
not
mov
xchg
inc
push
xchg
jg
xor
dec
movsl
scas
pop
popf
fdivs
push
xorb
push
push
jg
push
inc
rcrl
out
mov
fistps
repz
push
sbb
iret
int
dec
mov
out
inc
inc
jg
in
loop
out
xor
mov
test
pop
sbb
sub
jns
and
cli
js
shrl
cs
jmp
push
jge
add
add
xor
stos
xor
mov
fsubrl
cmp
pop
mov
mov
lea
and
addl
pop
cli
push
mov
iret
sub
pop
gs
pop
mov
cld
shll
jp
nop
repz
adc
or
outsb
xchg
push
xchg
xor
or
pop
lods
insb
test
notb
push
push
mov
push
and
lds
aad
add
repnz
jns
lret
fwait
sti
das
clc
mov
cld
add
pop
add
imul
andl
pop
aam
imul
aaa
js
and
jle
lods
mov
lds
add
sti
scas
pop
or
pop
pcmpgtb
cltd
mov
je
ret
pop
js
cmp
inc
lahf
jmp
mov
test
rorb
movsl
pop
cmp
int3
push
cmpsb
add
cmpsl
addr16
sub
jle
fwait
xchg
xchg
sbb
mov
jae
dec
repz
loopne
dec
fldl
push
imul
and
push
xor
test
incl
adc
xor
adc
sbb
out
xlat
jecxz
data16
popf
leave
loope
jne
cmp
inc
pop
adc
mov
insb
mov
push
jge
xor
outsl
inc
or
dec
bound
push
and
cwtl
scas
sbb
add
arpl
andb
mov
out
shr
push
imulb
jmp
and
fisubs
mov
xchg
test
pushf
test
jecxz
dec
jp
imul
lret
adc
add
arpl
icebp
and
and
repnz
inc
mov
mov
outsl
testb
sbb
add
sbbl
pop
ss
fnsetpm(287
mov
sti
or
lret
xchg
ret
cmp
cs
xchg
outsb
and
sbb
sbb
inc
in
adc
fs
inc
sbb
sti
or
pushf
cmp
or
lahf
mov
adc
lock
repz
lcall
inc
mov
movsl
mov
mov
imul
loope
mov
or
mov
cmp
inc
push
mov
push
imul
ret
mov
cmp
cld
inc
int3
mov
xchg
mov
mov
inc
jo
xchg
pop
push
insb
test
pop
push
loopne
imul
inc
cltd
in
xlat
and
in
aam
sub
je
daa
cs
imul
or
test
loop
xorps
xchg
adc
fnstcw
repnz
fwait
cmp
xchg
push
insl
test
outsb
xor
rolb
and
pop
mov
repz
push
pop
lret
into
mov
sbb
movsl
cmp
fcom
cs
mov
mov
out
mov
cmp
subl
test
jae
mov
add
mov
sbb
push
pop
es
mov
inc
and
mov
aaa
int3
adc
fdivrs
dec
mov
add
enter
shrb
sbb
push
in
pushf
mov
cmp
xor
and
push
lret
shlb
cltd
cmpsb
fwait
cli
adc
les
xchg
ljmp
cwtl
or
sar
cmpsl
int
fsubl
mov
add
lahf
mov
fdivrl
and
sub
inc
sub
mov
cld
insl
adc
jne
xor
stos
movsb
iret
lds
subl
add
add
daa
fsubp
imul
or
dec
adc
ljmp
cvtdq2ps
jge
cs
aas
jo
aam
mov
inc
xchg
into
mov
les
pop
mov
jb
fsts
iret
mov
cmp
or
test
pop
or
pop
jno
sub
inc
mov
insb
mov
fst
push
adc
push
or
pop
dec
jge
call
pushf
or
std
jno
or
pusha
movsb
sub
mov
ret
daa
or
clc
repnz
add
sbbb
push
in
loop
jo,pt
inc
in
cmp
push
mov
pusha
inc
scas
inc
mov
jmp
stc
loopne
retw
adc
dec
or
cli
sbb
xchg
or
cld
xchg
pop
and
push
cwtl
adc
sbb
cwtl
imul
mov
cltd
mov
xor
idivb
scas
das
push
or
cmp
sbb
lahf
jmp
push
dec
mov
and
pop
mov
adc
out
cvtdq2ps
test
sbb
std
sbb
xor
add
imul
test
nop
inc
pop
adc
aas
cmp
dec
shl
loop
push
inc
les
repnz
stos
vpmacsdql
jmp
movsl
and
lret
pop
pop
leave
add
adc
push
mov
pop
addr16
sbb
pop
stos
imul
mov
das
cmp
call
test
mov
mov
adc
xchg
xchg
and
push
dec
sub
sbb
fbstp
xchg
inc
mov
xchg
fdivp
xchg
jns
mov
ja
push
mov
jae
stos
xchg
add
mov
xchg
xchg
repnz
in
mov
pop
sub
xchg
push
jno
xchg
lods
repz
mov
insb
ss
adcl
and
xchg
outsl
add
xor
icebp
outsb
push
jno
mov
sahf
stc
add
jge
fldcw
xchg
adc
jle
mov
mov
ror
out
mov
adc
dec
lcall
sub
cwtl
std
lea
and
and
popf
addb
sub
stc
sub
enter
shlb
sbb
popf
ret
add
cmpsl
js
mov
and
push
popf
in
sub
cmp
adc
sti
add
jns
xchg
out
repz
cmp
mov
test
add
aam
mov
icebp
je
xlat
jle
stos
int
jp
sbb
mov
push
cmpsb
jl
clc
popa
fistpll
and
jne
cmp
add
sbb
add
inc
xchg
data16
fisubrl
cmp
je
repnz
lods
mov
sub
out
lcall
xchg
pusha
jb
jl
sbbl
cli
enter
or
add
adc
decl
enter
jns
and
pusha
out
cli
dec
mov
fnstcw
fwait
scas
rclb
stos
pop
shlb
insl
mov
loope
je
sbb
xor
movsl
add
pushf
mov
xchg
jmp
push
or
xor
jmp
sub
jno
in
mov
inc
mov
in
jl
fidivl
dec
test
js
jbe
jne
add
sbb
ret
js
outsl
test
pop
lea
test
jle
adc
mov
sbb
push
fnstenv
add
pop
aaa
inc
test
je
adc
cmp
lret
jg
jae
sub
in
mov
xchg
mov
xor
xor
stc
push
xor
repnz
leave
scas
push
in
mov
pop
daa
dec
test
addr16
and
inc
insb
andl
fdivrl
and
addr16
sahf
out
add
sar
pop
jno
push
and
or
push
fcoml
push
jbe
jae
aam
and
testb
insb
jge
fldenv
scas
fildl
xchg
insb
push
mov
fidivrl
and
arpl
dec
movsb
mov
xchg
out
xchg
cmovle
inc
jg
mov
push
push
sub
dec
cmp
pop
adc
outsb
cmpsl
in
xchg
mov
mov
mov
rcl
push
jo
mov
ja
sub
sub
in
add
mov
and
inc
sub
ret
fpatan
push
and
clc
push
bound
pushf
leave
stc
arpl
mov
xor
jnp
or
in
orb
dec
imul
ret
pop
xchg
popf
lods
cmpsb
bound
test
stos
jno
mov
push
pushf
insl
fisttpll
sbb
int3
out
xchg
sbb
in
pop
add
adc
out
cltd
lea
dec
es
loopne
mov
push
andl
iret
inc
push
ja
cmp
fisubl
shlb
cmp
push
fsubp
insb
pop
ds
daa
rorb
sbb
xchg
out
push
xchg
in
pop
sub
daa
jbe
lods
jmp
adc
jecxz
mov
inc
or
fmuls
leave
inc
hlt
mov
sbb
aas
in
aam
out
cmp
or
in
scas
jno
out
stos
jae
xchg
sub
xor
mov
push
cmp
gs
dec
lods
fsubrs
cmc
push
sub
fwait
jl
jg
sbb
das
shlb
daa
cmp
jb
es
cli
or
sbb
and
out
in
pushf
or
xchg
ffreep
and
lret
enter
loope
push
sti
push
popf
test
test
cmp
das
sbb
push
jnp
xchg
sti
fdivrl
addr16
mov
ja
push
xchg
mov
pop
ja
jg
aam
aas
or
pop
push
mov
push
xchg
push
or
sub
stos
add
repz
xor
or
push
out
data16
test
nop
pop
lret
int3
sahf
stos
pop
leave
mov
pop
fstps
shrl
sbb
xor
or
int
xchg
jl
fnsetpm(287
add
mov
xchg
popa
imul
cmp
xchg
pop
loopne
hlt
pop
mov
sar
fldlg2
out
mov
inc
hlt
sbb
fdivl
popf
cmp
dec
and
xchg
add
je
fwait
or
iret
push
fsub
jg
xchg
sbb
adc
or
cwtl
jnp
stc
mov
inc
sub
dec
jb
mov
jmp
push
repnz
xchg
nop
test
lds
pop
fwait
mov
popa
xlat
sbb
push
mov
push
mov
rol
rol
mov
cld
xchg
sbb
adc
lods
mov
test
das
push
sbbl
popf
pop
xor
or
gs
mov
sbb
add
push
mov
cli
mov
or
stos
icebp
mov
push
nop
dec
cmp
jg
imul
sbb
popf
pop
cmp
fwait
mov
js
ss
cmp
or
xor
inc
sbb
and
add
mov
test
out
ficomps
inc
dec
outsl
imul
test
xor
push
lahf
dec
add
enter
popf
mov
push
testb
dec
lcall
push
sbb
xor
xor
jo
xor
or
push
mov
jg
inc
aad
mov
lods
add
jae
call
pop
xchg
std
dec
cli
iret
int
jle
inc
xor
push
pushf
xor
pop
fsubl
mov
movsb
mov
ja
out
cli
jnp
jmp
lahf
xchg
imul
push
inc
ret
mov
jno
or
xor
and
fcmovbe
adc
mov
sahf
imul
out
pause
lock
inc
adcl
xor
bound
mov
aaa
push
mov
sahf
xchg
incb
loope
inc
ds
jle
jmp
sub
scas
jb
mov
dec
jle
sbb
scas
int3
adc
inc
dec
pop
bound
mov
jns
xchg
stos
arpl
int
test
mov
xor
aad
pop
pop
movsb
add
lcall
push
xchg
mov
push
mov
dec
ret
leave
adc
fcmovnb
mov
cmpsb
fstl
xor
test
pushf
mov
int3
xor
fs
insb
and
std
lret
jno
insb
mov
xchg
jmp
or
lea
sbb
jecxz
mov
movsb
cmp
roll
out
cmp
mov
mov
sarl
sub
int
stos
stc
outsl
adc
inc
push
movb
pop
add
outsl
xor
flds
lcall
gs
sti
call
ret
inc
test
shll
jmp
mov
shlb
jg
popa
inc
xchg
pusha
das
xor
imul
inc
pop
adc
mov
rol
iret
cmp
cmc
inc
push
iret
adc
or
fwait
call
xchg
rcrb
push
jle
in
cmp
notl
ret
mov
and
leave
mov
mov
push
fnstcw
arpl
rorl
xor
loope
inc
rolb
jb
cwtl
negl
or
lods
popw
loopne
aad
xor
inc
xchg
imul
sbb
or
pop
sbb
lret
insl
int
pop
movsl
adc
mov
jae
lret
or
dec
call
add
dec
push
xchg
mov
inc
scas
sub
and
push
aaa
ret
test
loop
jmp
jns
test
bound
inc
call
arpl
add
sbbl
out
les
pop
mov
push
sub
jbe
lods
sahf
pop
in
pop
jle
jbe
jns
dec
in
inc
cwtl
dec
push
dec
xchg
pop
xor
movsl
in
pop
cs
xor
or
daa
inc
sbb
cs
xchg
mov
adc
mov
insb
push
sbb
mov
and
emms
dec
xorl
fbstp
mov
sub
mov
cmpsb
mov
cmp
repnz
in
cwtl
mov
cli
sbb
lock
push
les
imul
sub
jle
mov
subb
ljmp
mov
sbb
xchg
sbb
mov
scas
push
push
add
filds
inc
xor
in
out
push
scas
rclb
jno
test
adc
cmc
push
movsb
add
xchg
push
push
lcall
gs
jecxz
shrl
mov
test
mov
mov
sti
fistpl
outsb
jge
pop
call
jg
lods
sbb
cmpsl
mov
es
mov
sub
add
xor
fcoml
and
xchg
add
mov
jne
cmp
out
sbb
pmullw
mov
shll
movsl
sub
sub
and
sbb
sbb
pop
mov
popf
addr16
mov
cmp
in
ja
jns
xchg
xor
pop
mul
dec
mov
jmp
jbe
push
push
and
test
leave
ret
test
shll
add
dec
xchg
and
mov
dec
ret
push
xchg
out
lods
push
ljmp
jnp
mov
jnp
jo
jl
dec
push
imul
xorb
aaa
jnp
mov
add
lahf
jg
dec
push
mov
xor
lock
push
push
fwait
sbb
or
out
testl
hlt
inc
notl
dec
fdivl
in
jmp
jb
pop
inc
push
adc
fwait
iret
loope
lret
stc
jb
inc
sbb
loopne
adc
repz
xchg
clc
ljmp
jbe
sbb
jb
cli
xchg
call
and
xor
push
jno
insl
aad
andb
lods
push
push
stos
inc
inc
lea
aam
fsts
push
out
sub
ret
mov
dec
dec
orb
mov
stos
dec
push
jno
pop
mov
lds
dec
loopne
jnp
jmp
xchg
sub
or
xchg
sub
in
add
pop
lret
jbe
out
ja
orb
sahf
xor
adc
jne
in
lods
push
mov
push
adc
fistl
push
xchg
or
aaa
dec
mov
inc
and
test
sti
dec
in
movsb
mov
adc
sbb
pop
sbb
xchg
xchg
rcrl
mov
fdivl
xchg
rol
aam
insl
adc
mov
loopne
add
adc
cli
ljmp
mov
inc
loopne
sub
ss
xor
cli
lcall
sub
pushf
mov
pushf
or
test
daa
pop
cwtl
jne
jno
sbb
jbe
insl
fwait
mov
inc
mov
nop
in
mov
xor
push
mov
lcall
add
dec
mov
xor
sbb
jp
mov
outsl
loopne
out
cwtl
mov
pop
int3
xchg
insb
xor
scas
sub
dec
jno
or
outsl
mov
inc
sbb
cmp
jae
lds
fmul
and
cmp
sbb
pop
iret
sbb
das
outsl
pop
outsl
cmp
mov
fadd
or
shll
push
jne
jbe
jo
fsubl
jmp
dec
lock
ret
xor
mov
rorb
popa
xchg
push
add
and
jge
in
stos
mov
iret
push
icebp
sub
cmc
inc
mov
mov
test
sbb
and
sbb
or
je
sbb
jb
data16
imul
test
movsl
dec
push
mov
inc
adc
xchg
rolb
cwtl
adc
mov
dec
aas
mov
out
addl
push
rcr
das
pop
shlb
movsb
push
iret
push
sarb
rcrb
insb
test
das
popa
in
or
sbb
xchg
push
cltd
subl
mov
pushf
or
jne
mov
fstpl
pop
out
inc
stos
cmpsb
lock
notl
lahf
aam
lret
pop
push
mov
sbb
dec
xor
inc
ret
push
outsl
lcall
aaa
ror
lcall
or
cmpsb
or
sub
push
mov
mov
jae
mov
div
or
xor
jg
xchg
into
or
subl
cmp
loopne
add
lahf
jl
divb
mov
xchg
xor
lds
lahf
aaa
jle
jne
data16
out
push
cwtl
ja
mov
push
aam
sub
lret
adc
clc
les
iret
and
xchg
sbb
dec
popf
out
push
jb
loopne
and
adc
jb
imull
xor
pop
xchg
mov
orl
sub
jge
cmp
cmc
dec
sbb
iret
and
inc
push
pop
in
sub
and
jno
repz
inc
outsl
mov
xorb
push
nop
lods
push
mov
out
int
mov
sbbl
dec
xchg
dec
fsubl
pushf
rcll
outsl
add
lcall
orb
cwtl
push
or
pushl
sbb
aam
inc
xor
jg
xchg
xor
in
adc
and
mov
rorb
das
inc
sbb
adc
mov
movd
jno
fs
jge
clc
inc
jmp
rol
ljmp
movsb
mov
pop
or
ljmp
sub
into
lods
cs
mov
pusha
or
jbe
mov
arpl
pop
movsb
out
xchg
xchg
dec
fimuls
inc
sbb
push
imul
repnz
outsb
dec
inc
pop
push
aam
add
idivb
dec
bound
outsl
push
std
roll
sub
or
dec
call
test
ja
rol
sub
dec
jns
stos
cmp
sarl
cwtl
cs
jle
pop
out
sbb
cmp
out
push
orb
psrld
subb
sub
nop
xchg
or
imul
adc
and
mov
sbb
jmp
pop
arpl
mov
dec
inc
inc
scas
mov
cmpsb
lods
add
add
aaa
imul
outsl
adc
inc
enter
ljmp
lahf
jns
in
inc
stos
js
or
jle
adc
imul
stos
xchg
in
push
mov
jb
stos
test
push
and
aaa
aas
scas
iret
cwtl
mov
gs
cmp
or
mov
rcrl
bound
jne
pop
divl
jbe
mov
cmp
add
cvtps2pi
push
mov
jb
jge
xlat
call
jg
test
add
or
lea
xor
cmp
pushl
adc
sbb
push
bound
fdivrp
dec
add
xor
push
sub
push
fwait
loop
mov
pmuludq
movsl
add
test
push
in
repz
push
loopne
and
push
lret
ret
ja
pop
mov
cmc
mov
cwtl
mov
aaa
in
jne
xor
mov
leave
mov
fidivs
lret
lahf
mov
jbe
cld
push
cmp
add
push
shll
inc
imul
lock
push
jbe
mov
cmc
imul
push
fwait
sbb
outsb
push
xchg
cmp
cmpsb
pushl
lcall
adc
cmp
xchg
and
push
shlb
mov
and
mov
jp
or
inc
xor
push
dec
mov
mov
lahf
sahf
lret
lods
fldenv
aam
imul
and
js
adc
mov
mov
shl
xchg
stc
into
or
enter
ficoml
movsb
lret
lret
sarl
scas
and
clc
test
mov
movsl
sbb
in
push
adc
xchg
movb
xlat
push
mov
mov
dec
inc
push
adc
dec
mov
pop
sbb
xchg
shll
fwait
imul
sahf
aaa
dec
call
add
mov
aas
push
jecxz
jb
xchg
insl
lods
mov
sbb
lahf
std
rorb
lret
aaa
xor
in
in
xor
dec
dec
out
adc
and
mov
mov
add
loope
pop
mov
lcall
push
fldcw
pop
stos
cmp
or
mov
out
pop
push
pop
push
fs
daa
or
mov
dec
mov
push
or
xchg
xor
push
pop
jmp
mov
xchg
lret
dec
aaa
fdiv
jno
aad
jp
or
out
jo
outsb
cmp
dec
mov
push
jg
rclb
xor
and
jae
pop
pop
or
stc
imul
cmp
or
imul
dec
or
imulb
test
mov
popa
pop
sub
insl
pop
mov
cmp
jnp
xchg
mov
iret
lret
mov
xchg
aas
cmc
pop
xchg
fcoml
inc
lods
aas
and
cmp
int3
aas
cmpsl
xor
mov
das
fsubrs
sti
mov
ss
and
mov
cmpl
cmp
sbb
jge
enter
loope
push
mov
dec
and
or
add
jno
ss
out
cld
imul
sub
mov
jns
in
rorb
test
lods
stos
shlb
scas
call
jnp
fistpll
daa
or
jbe
adc
fsts
std
enter
shlb
and
xor
or
lahf
xorl
jg
pop
je
mov
xchg
setb
cmp
fmulp
xchg
and
push
push
mov
or
enter
push
cmp
add
je
jbe
test
in
and
mov
jmp
jno
inc
mov
sub
adc
lsl
mov
fstl
jae
cmp
cli
ficompl
hlt
xchg
xor
test
mov
leave
cmp
hlt
inc
leave
scas
nop
xor
out
or
ss
clc
push
push
xchg
cmp
cmpb
ja
js
pop
mov
sbb
xchg
push
fistpl
je
xor
shll
inc
fld1
or
adc
aad
jmp
sbbl
xchg
xchg
fisubrl
inc
sub
in
pop
pop
cwtl
popf
pop
and
adc
cld
fsubs
outsb
jae
pop
ss
outsl
jns
pop
mov
arpl
mov
inc
push
jle
fistps
mov
into
test
aas
dec
push
ss
jb
jp
sub
jnp
out
add
sub
cmp
leave
adc
ret
insl
xchg
insl
lods
rcl
ss
push
test
out
stc
sbb
xor
xor
push
pop
imul
jo
test
sbb
cmp
popf
lret
jmp
dec
dec
and
outsb
stos
push
cmp
ret
loopne
jl
ljmp
mov
push
orb
xor
xchg
mov
cmp
dec
and
xchg
test
mov
pop
mov
into
mov
push
rcl
stos
dec
add
lahf
push
mov
leave
ds
movsl
dec
jns
mov
loope
mov
jg
dec
clc
sbb
inc
add
xchg
sbb
push
int3
or
popw
sub
sbb
dec
mov
jno
sarb
pop
int3
test
imul
rcr
xchg
mulb
mov
fistpll
or
xchg
cltd
pop
mov
inc
cmp
and
xchg
leave
lods
je,pt
fistpl
push
pop
fimuls
and
and
push
scas
xchg
push
push
in
dec
pop
sub
add
sbb
lahf
inc
or
sub
daa
dec
push
sub
outsb
cmc
sbb
xchg
testl
jno
dec
xlat
sar
arpl
sub
jnp
addr16
lods
push
cli
out
xor
ljmp
inc
xchg
lock
outsl
bt
sbb
mov
pop
lds
cwtl
mov
jg
xor
cltd
add
jnp
and
mov
inc
sbb
inc
mov
mov
mov
add
mov
xchg
xchg
sahf
mov
incl
fnstsw
mov
pop
iret
push
xor
and
mov
xchg
mov
sbbb
jp
imull
adc
and
mov
push
sub
jbe
sti
rcll
cmp
push
cmpb
and
or
scas
je
mov
jmp
add
arpl
xlat
xorl
fcoms
inc
lcall
outsb
je
ljmp
fsts
test
xor
and
mov
pop
ss
das
sbb
dec
sbb
mov
adcb
nop
inc
add
test
fidivrl
jb
and
jnp
or
sub
pop
cmpsl
call
gs
cmp
pop
or
filds
test
push
jb
aaa
sarb
std
call
adc
push
pop
pop
frstor
std
or
movsb
jno
into
mov
inc
add
xor
cmp
sub
subl
sbbl
push
mov
ljmp
xor
aad
inc
orl
push
jl
cmp
cld
dec
clc
push
and
test
pop
or
or
filds
pop
cmp
xchg
repz
sahf
hlt
inc
loop
jne
add
sbb
sbb
or
jg
jo
lahf
jne
dec
imul
imul
call
inc
fnsave
out
and
int
test
aas
inc
fcoml
fs
push
xchg
pop
mov
loop
lcall
mov
ss
mov
test
das
rolb
jp
or
movsl
sbb
daa
mov
scas
pushf
arpl
popf
scas
mov
jp
cmpsb
or
stc
adc
add
jle
xchg
fmuls
cltd
mov
mov
insl
pop
push
daa
dec
mov
imull
rcll
ficompl
mov
dec
adc
sub
movsb
jnp
cmpsl
dec
cmpl
lahf
jge
data16
lods
pop
rorb
dec
inc
adc
movsl
sub
xor
ja
mov
scas
out
cmpsl
les
inc
test
mov
mov
in
push
shll
pop
xchg
std
add
ret
out
xorl
pop
xor
out
mov
rcl
aad
fcoml
mov
jnp
movsl
lods
lahf
sbb
pushl
xchg
and
subl
lea
add
xor
mov
mov
lods
loope
dec
lods
daa
and
ss
and
fsubl
enter
lods
das
cmpl
sub
sub
dec
ficoms
inc
and
scas
push
int
test
lods
push
scas
xor
stos
cmc
lret
cmc
cltd
mov
movsl
insl
test
inc
xor
lahf
push
pop
inc
leave
loopne
adc
inc
call
lods
shlb
xor
pop
ljmp
cmp
pop
cmp
add
dec
sbb
mov
mov
push
or
jo
inc
xchg
rorb
lock
pop
popa
adc
pop
enter
mov
fnsave
mov
loop
cltd
push
hlt
jmp
negb
jl
inc
stos
lods
jmp
loopne
xchg
xchg
xchg
sub
xchg
xor
shrb
xor
aas
or
jnp
adc
adc
leave
xchg
adc
lcall
pushf
push
std
xor
xor
inc
outsl
adcb
mov
pop
lret
loopne
lret
inc
sti
xor
xchg
sbb
jbe
pop
or
test
xor
or
cmp
mov
jbe
rcll
jmp
pop
jge
fistpl
sub
jle
fcmovu
addr16
xchg
shlb
popa
xor
mov
das
fiaddl
cltd
pop
es
insb
cmp
pop
cmp
jno
jp
ljmp
mov
lcall
or
or
jge
adc
xor
aam
mov
mov
push
ficomps
aas
cltd
mov
es
outsl
adc
add
cmpsb
cld
jecxz
cmpsb
out
add
cmp
inc
clc
push
jo
add
jecxz
movsb
lret
int
testl
push
sarb
push
fisubl
jle
xor
mov
and
cmc
pushf
popf
mov
mov
pop
add
call
inc
and
bound
test
cs
xlat
mov
cwtl
bound
add
mov
lret
icebp
iret
sub
or
gs
lea
adc
mov
pop
inc
mov
cmpsl
jge
iretw
ja
jmp
rorl
cwtl
outsb
fldl
mov
test
sub
pop
movsb
mov
not
inc
adc
loop
jl
pop
adc
in
js
jp
scas
and
sahf
mov
sti
repnz
sub
fnstcw
push
add
jmp
push
push
or
xchg
fs
mov
mov
cld
std
scas
inc
dec
and
pop
pop
inc
push
inc
call
cmp
xchg
sbb
pop
or
pop
or
xchg
push
outsb
orb
test
subl
dec
xchg
jbe
lret
movsb
xchg
cmpsb
pop
fisttpl
fxch
test
push
addr16
pop
pop
xlat
arpl
mov
or
insl
or
jp
xor
scas
sub
pop
shrd
pop
daa
loopne
xchg
cmp
pop
pop
xor
dec
xor
push
rorl
cmpsl
push
cmp
ret
add
push
mov
std
mov
roll
subb
inc
fwait
or
pop
dec
insl
mov
cmp
cmpb
inc
cwtl
fsubl
jmp
mov
pop
pop
aam
roll
pop
mov
loopne
shlb
lahf
cmp
loope
xchg
aaa
or
fbstp
fidivrs
cld
and
adc
xor
inc
in
pop
jno
pop
das
push
mov
mov
mov
xchg
cmpsl
jl
push
sub
sarb
in
jo
xchg
adc
aas
pop
aad
xchg
ja
mov
rcll
xchg
inc
outsl
pop
pop
push
sti
xchg
and
fcompl
mov
int
jmp
outsl
xchg
bnd
pop
rclb
sahf
lret
push
test
jmp
test
fs
mov
xchg
int
push
cmpsb
or
stos
or
jnp,pt
push
jne
ljmp
cltd
inc
and
cld
popa
mov
out
pop
adc
nop
cltd
popf
cmp
push
fstpt
subl
dec
arpl
iret
mov
aam
test
adc
mov
lss
dec
in
jp
inc
jecxz
es
push
cmp
inc
dec
insl
sahf
push
inc
pop
xchg
mov
jo
fsubr
gs
cmpb
arpl
std
ret
xchg
mov
add
aas
or
jne
in
push
into
jmp
fdivs
mov
sub
lods
sub
adc
fistps
incb
dec
xchg
pop
mov
adc
fs
inc
into
inc
loope
push
push
jl
cmp
aaa
inc
mov
das
jo
stos
lret
xor
mov
xchg
loopne
push
hlt
add
cmc
pop
push
or
test
push
hlt
pop
scas
imul
negl
shll
xor
jb
fwait
pop
jne
add
andb
inc
imul
cmpsb
js
sahf
dec
xchg
xor
xor
roll
lret
loope
loop
pushf
addr16
cmp
add
jae
fs
shlb
add
xchg
out
lods
xor
xchg
mov
adc
adc
cld
xlat
test
mov
icebp
loop
add
lods
pop
mov
dec
cmp
andl
sub
imul
mov
push
test
mov
in
repnz
mov
push
repz
cmpsb
outsl
imul
mov
xchg
xchg
js
fwait
pop
test
test
scas
adc
ficoms
bound
popa
divl
pop
pop
lahf
scas
ds
cmp
stos
fstps
imul
ret
mov
lods
push
dec
sub
mov
pop
iret
mov
pop
or
sub
pop
xor
mov
fdivp
imul
mov
mov
enter
sbb
mov
add
jp
sahf
jge
xor
add
in
ljmp
cli
mov
jbe
inc
jl
pop
add
and
cmp
dec
nop
sub
push
rcl
cltd
rorb
enter
sub
test
xchg
sahf
or
test
cmp
fs
or
imul
pop
or
cld
mov
ret
jp
stc
cli
mov
arpl
sbb
pop
sub
out
cmpsb
sbb
addr16
sub
daa
ret
cmp
add
inc
enter
movsl
rcll
pop
mov
dec
movsb
mov
test
inc
cmp
cltd
cmc
fiaddl
flds
dec
call
sub
xor
sub
loopne
orl
repz
rcrl
xchg
add
push
fisttps
add
jge
es
fnsave
and
lods
push
adc
icebp
adc
or
mov
sub
inc
sbb
das
mov
and
xor
fisubl
jle
pop
cmpsl
sub
sbb
rolb
push
pop
cltd
push
mov
lea
mov
idivl
ljmp
jne
out
mov
xchg
nop
mov
jp
aas
arpl
addr16
xor
inc
jae
dec
stos
fsts
sbb
jno
jmp
lea
lret
int3
decl
add
outsl
xchg
inc
mov
xchg
and
push
inc
inc
gs
dec
xchg
dec
sbb
xchg
shrl
iret
adc
jae
daa
mov
pusha
cmpsb
inc
aaa
lret
xchg
fiadds
inc
into
mov
ret
icebp
test
mov
jg
adc
sar
repnz
push
push
insl
inc
mov
xor
xchg
xlat
test
stc
orb
jnp
pop
mov
xor
mov
mov
pop
gs
xor
mov
and
lea
rcll
mov
push
jmp
jne
decb
inc
mov
dec
jae
adc
outsb
mov
lds
and
push
fcompl
stos
std
leavew
aaa
adcb
icebp
dec
adc
push
stos
popl
aaa
and
pop
xlat
leave
adc
mov
push
jg
dec
jae
sahf
test
ss
or
jb
sbb
add
push
sub
fsts
pop
arpl
adc
mov
fistpll
lds
inc
test
leave
push
mov
inc
fmul
pop
ficoms
popf
sub
cmp
mov
shlb
stos
filds
jo
dec
in
xlat
add
sbb
pop
xor
pushf
test
and
pop
add
sub
fnsave
xchg
outsb
push
xchg
sub
sbb
ret
fistpll
jl
mov
mov
push
repnz
mov
loop
or
loopne
loope
sub
dec
adc
add
cli
clc
stc
or
in
daa
gs
xor
pop
add
mov
inc
data16
jne
fsubrs
or
hlt
xor
sbb
jmp
jecxz
push
dec
ret
lods
rclb
movsb
add
inc
ljmp
mov
xchg
cmp
daa
ret
push
mov
and
inc
inc
dec
xchg
or
mov
mov
pusha
push
sbb
cmp
pop
stos
dec
inc
fistpl
hlt
cmpb
push
aad
xor
mov
jge
jmp
loopne
xchg
push
lock
ja
mov
push
mov
push
bound
inc
ja
pop
mov
lret
cltd
ret
jb
repz
imul
aad
sbb
fdivl
mov
fildll
dec
xor
pop
jmp
popl
scas
or
dec
enter
adcl
in
enter
inc
sub
movd
mov
mov
and
insl
mov
pop
xor
insb
je
lret
jl
jg
xor
pop
cmp
lods
in
sub
addr16
and
jmp
nop
nop
mov
pop
fadds
test
test
sarb
sub
mov
je
iret
ja
cli
scas
sbb
mov
sub
jo
loopne
addb
mov
xlat
sub
sub
fnstenv
and
ret
add
adc
popa
xor
insb
jecxz
test
lock
sarl
call
gs
js
sub
in
ret
jo
fistpl
xchg
push
mov
call
or
icebp
inc
sahf
shlb
sub
sub
mov
int3
movsl
loopne
icebp
mov
dec
push
add
cmp
sti
dec
xchg
sbb
lcall
test
iret
xchg
adcl
adc
dec
icebp
pop
sbb
test
fidivrs
data16
ss
cld
imul
pop
jnp
and
lods
out
push
shll
cmp
lods
jns
sbb
popf
adc
daa
cltd
lret
push
cmpsb
xor
sub
and
es
scas
add
xchg
cli
xchg
or
insl
repnz
sbb
testb
mov
loope
push
pop
mov
out
xchg
or
add
popf
shlb
push
xor
testl
data16
inc
adc
rolb
dec
xorl
mov
sub
sbb
arpl
cmc
sahf
mov
test
sbb
aaa
fisubl
mov
out
cmpsl
add
daa
inc
push
fildl
and
pop
arpl
mov
xor
pmuludq
sti
dec
jp
push
mov
popa
inc
nop
cwtl
mov
shlb
jo
loope
mov
mov
out
into
mov
dec
or
daa
xchg
dec
ror
orl
push
inc
mov
sbb
mov
leave
fnstcw
push
fdivrs
xchg
xchg
in
or
push
pop
sbb
shlb
mov
xor
jo
jmp
test
leave
jl,pn
repnz
mov
xor
and
sbb
jg
sbb
lods
adc
sbb
lcall
out
sub
mov
push
cmp
and
addr16
dec
mov
xchg
pop
int3
ret
inc
sub
iret
movsb
xor
aas
mov
mov
std
mov
xchg
js
and
xchg
rcrl
add
movsl
frstor
rcrb
mov
cwtl
jb
cwtl
pop
test
jne
mov
cltd
xchg
fdivrs
jecxz
flds
shrb
jmp
das
mov
ss
in
push
mov
fdivrl
cmp
loope
out
out
sbb
out
ret
popa
dec
fildll
test
pusha
jne
subb
scas
sub
stos
xor
nop
cld
pop
aaa
push
sbb
aam
addl
cwtl
bound
icebp
leave
xchg
lea
mov
push
sti
xchg
mov
mov
loope
ljmp
in
icebp
or
data16
cmp
xchg
lock
mov
mov
es
pop
inc
mov
pop
push
jno
ret
inc
or
fmuls
push
or
pusha
cmp
int3
pushf
inc
nop
xchg
cld
aas
repz
popl
fwait
push
mov
pushf
enter
inc
mov
call
jmp
cmpsb
mov
cld
in
jb
idivb
dec
jge
cwtl
rorb
sub
sbb
dec
xchg
sbb
mov
out
xor
xor
xor
imul
lods
call
subb
mov
pop
popa
xchg
shr
loop
sbb
or
das
mov
cmpsb
jnp
daa
nop
ficoml
loopne
jb
add
jne
gs
fists
and
aas
fdivl
stc
mov
push
cltd
lods
aas
sbb
xor
adc
mov
xchg
and
jns
sti
push
addr16
xchg
arpl
push
add
mov
mov
sahf
sarl
pop
dec
cmp
cwtl
cmp
fcomip
mov
les
jnp
lock
inc
loopne
inc
xor
fs
sarb
dec
in
sub
pop
xor
jp
inc
lret
into
in
jnp
mov
repnz
call
js
xor
inc
mov
sarb
scas
jne
pop
lds
jp
cmp
adc
or
repnz
or
lds
out
mov
dec
inc
mov
xor
mov
and
mov
xor
mov
mov
xlat
aad
stos
add
jg
mov
lret
dec
jmp
hlt
movsb
aad
imul
sbb
lds
sub
lods
cmp
xchg
xor
nop
ret
outsl
inc
shll
sahf
mov
jnp
adc
dec
ds
aam
sbb
mov
pop
cltd
sub
sub
sub
jb
cmp
out
sub
or
js
or
ds
shl
jb
xor
les
lock
or
std
and
adc
in
movb
jnp
mov
push
dec
cmpsl
jecxz
movsb
push
mov
rcll
hlt
outsl
mov
sub
fidivrs
or
cmp
je
movsb
sbb
mov
popf
loope
notb
jecxz
test
sub
or
test
or
je
mov
lock
inc
xchg
in
and
mov
insl
jne
icebp
cmpb
divl
testb
test
add
sub
sub
jle
sar
add
aam
cmp
adc
sahf
push
int
ficoml
adc
xchg
imul
dec
dec
jecxz
and
pusha
bound
movsl
push
cwtl
and
stos
xor
shlb
insl
out
mov
adc
ror
jecxz
ret
fmul
ss
mov
cmpsl
jmp
jle
xor
loope
movb
sub
scas
and
fwait
jp
inc
jmp
aad
je
and
addr16
iret
movsl
pop
loopne
pop
mov
inc
pop
ja
and
jg
mov
add
int3
mov
loopne
fs
mov
jbe
popa
push
jnp
mov
js
lds
nop
sub
pop
sbb
das
dec
popa
mov
adc
into
mov
jmp
in
shr
ja
insb
cltd
and
add
pop
cwtl
lods
movsb
int
test
push
push
xor
fwait
pop
movsl
lret
push
scas
cwtl
xor
jp
lods
jge
data16
daa
pop
jb
push
ret
add
dec
sbb
out
fcmovu
jg
xor
pop
stos
int
sub
add
inc
orb
leave
sar
inc
dec
stc
iret
and
sub
mov
jns
push
mov
adc
cwtl
push
inc
jg
aam
lods
fisubrl
sub
adc
xchg
jne
and
xchg
ret
lret
out
push
rcrb
fildl
cmp
fisubrl
jno
das
jb
dec
je
push
in
mov
scas
les
lret
cwtl
sbbb
pushf
mov
push
test
in
fcmovu
push
xchg
and
xchg
pop
jecxz
cmpsl
pop
imul
mov
push
add
add
cmp
cs
scas
or
mov
and
inc
loope
xor
mov
jl
sub
cmpsl
or
fdivl
sbb
dec
mov
or
mov
push
cwtl
pop
pop
in
int
xchg
iret
into
jmp
pop
mov
mov
push
adc
test
fxch
and
shrl
push
adc
or
xchg
aaa
sbb
psubb
cmp
dec
dec
adc
loopne
pusha
or
adc
sbb
lock
in
fidivs
jmp
adc
cmpl
mov
inc
hlt
ljmp
fmuls
shr
in
adc
fs
fnstcw
mov
jne
fstp
or
rorl
mov
repnz
sub
out
jmp
jno
xor
dec
inc
mov
cli
mov
out
lret
xchg
and
mov
rcrl
or
and
sub
js
ret
xchg
sti
movsb
scas
lds
jp
mov
into
pop
test
scas
inc
mov
pushf
mov
or
xchg
push
mov
rcrb
fwait
dec
cmp
xchg
cmpsb
jle
cmp
das
dec
dec
aad
popa
repnz
scas
enter
aaa
jb
jge
outsb
and
push
cwtl
fcomps
inc
es
and
pop
xor
mov
ret
call
dec
mov
sbb
mov
loopne
or
cltd
js
insl
and
loop
mov
mov
out
or
cli
pop
inc
inc
adc
sti
cmc
sbb
mov
scas
aam
out
xchg
bound
mov
inc
mov
pop
scas
fmuls
fld
ja
lahf
cmp
jae
sub
aaa
movsl
sub
sub
test
out
cmpl
cltd
xor
xchg
das
subb
mov
roll
test
mov
and
enter
lock
in
mov
mov
pop
mov
push
inc
repnz
mov
outsb
mov
repnz
pop
int
xor
cli
cmpsl
addr16
or
add
xlat
lahf
add
cltd
dec
shll
test
adc
pop
or
cmp
mov
std
ja
and
clc
aam
and
mov
mov
rorl
iret
ss
out
jecxz
movsl
push
ds
icebp
cwtl
jp
mov
call
mov
or
sbb
aas
push
or
int3
push
jno
add
in
jl
add
cmc
lahf
shll
xor
mov
mov
or
xor
and
lahf
in
out
mov
scas
pop
out
inc
jbe
scas
leave
inc
adc
sub
push
or
mov
mov
and
inc
ja
scas
jnp
push
or
sbb
hlt
fldcw
fisubrs
mov
add
mov
mov
dec
jge
imul
lea
xchg
scas
sub
adc
loop
inc
and
clc
shll
jle
cs
out
pusha
fwait
add
inc
xchg
and
lock
out
imul
cld
aas
mov
inc
dec
test
rcrb
stos
inc
dec
xchg
adc
lahf
push
add
dec
add
icebp
sub
jo
mov
push
jg
insb
aaa
mov
push
jl
adc
outsb
xor
mov
jmp
imul
hlt
sbb
push
xor
jecxz
mov
inc
xchg
js
movsl
mov
ja
add
pop
adc
fiadds
xor
push
test
dec
dec
mov
mov
and
mov
loop
jge
lahf
adc
nop
ja
adc
fcoms
xor
pusha
lods
mov
xlat
xchg
hlt
call
mov
push
jo
push
and
lahf
dec
les
scas
and
and
pop
fadds
jns
mov
stc
jmp
insl
dec
outsl
fimuls
mov
shll
push
into
push
add
or
push
and
mov
lahf
enter
adc
cmp
xchg
jl
push
rorb
dec
sbb
mov
nopl
jo
ss
sbb
mov
cs
in
mov
xchg
xor
jae
cs
data16
shlb
push
sub
dec
push
add
jae
adc
sub
imul
jmp
push
mov
insb
xor
mov
pop
jo
je
fucomi
imull
jle
lods
xchg
xchg
add
jnp
push
test
popa
mov
ret
push
add
lea
aam
jmp
dec
enter
icebp
mov
jmp
mov
jnp
imul
addb
jb
jl
mov
pop
inc
mov
or
sub
xchg
lods
mov
sub
aaa
jmp
inc
pop
cmpsl
adc
mov
pushf
rorl
sub
and
push
add
pop
inc
ret
aam
in
popf
push
add
fwait
movsl
call
push
sbb
ja
and
cmpsb
sub
and
int3
sbb
int3
jmp
notl
sub
sbb
sub
jmp
and
lods
xor
aam
sub
adc
sbb
mov
in
lret
lods
scas
pop
dec
or
jmp
mov
jecxz
jg
movsb
ret
mov
mov
sarl
pop
xchg
push
push
adc
lock
or
cmc
push
adc
in
inc
pop
and
mov
test
and
mov
cmpl
mov
or
leave
mov
jns
mov
jo
shlb
arpl
jmp
shl
or
dec
pusha
mov
repnz
mov
sub
call
shlb
out
bound
es
xor
jno
in
cld
outsb
mov
out
add
icebp
out
dec
mov
loopne
or
leave
cltd
jbe,pt
or
dec
and
insb
adc
filds
jb
or
fs
mov
xor
pop
sbb
adcb
add
and
dec
js
movl
jbe
xchg
or
cmp
test
cmp
mov
movsb
sbb
bound
test
inc
pusha
jae
dec
inc
in
push
in
inc
push
dec
or
lret
rolb
ficompl
ret
push
cld
adc
sub
shll
nop
es
cmp
loope
pop
cmp
sbb
and
sar
cld
loope
push
rolb
mov
insb
push
pushf
mov
icebp
mov
mov
iret
jnp
mov
out
mov
adc
leave
cmpsb
je
sbb
mov
cli
cmpsl
mov
xor
in
shlb
mov
scas
mov
push
in
dec
push
ljmp
rorb
fisttpl
mov
adc
into
jg
movsl
add
mov
int
push
mov
cmp
or
sbb
inc
lcall
mov
mov
push
mov
cmp
mov
pop
xchg
ss
cmpsl
lock
aaa
xchg
std
sbb
lret
ficoml
inc
adc
clc
lea
subl
xor
sub
insl
std
xor
fidivrl
xor
dec
or
enter
fs
jb
push
xchg
jge
out
popf
imul
rcr
xor
addr16
dec
imul
jne
push
in
adc
cmpsl
push
add
cs
jne
fcoml
icebp
jmp
stos
push
ds
mov
xchg
xor
mov
lahf
fisttps
mov
mov
xlat
sahf
loopne
movb
mov
adc
and
and
lcall
and
xchg
pop
lock
sahf
mov
push
cmpsl
shll
out
cmc
mov
sbb
andb
mov
pushf
aaa
mov
push
jb
add
les
cmp
jnp
sbb
pop
fcoml
mov
jmp
mov
repnz
repnz
imul
sbb
and
ret
cltd
lret
pop
ret
mov
lods
es
sbb
add
adc
pop
rcrl
mov
dec
jmp
xchg
jbe
pushl
cmp
mov
sbbl
shl
and
popf
sub
retw
dec
pop
push
sub
adc
xchg
sub
cmc
mov
cmp
dec
dec
mov
fs
mov
sbb
mov
mov
stos
inc
out
out
mov
cmc
int
pushf
cmpl
or
dec
cmp
push
cmp
int
ds
mov
arpl
mov
mov
lock
or
cmp
stc
jno
sbb
lock
sbb
jmp
jg
adc
sub
mov
mov
loopne
inc
sbb
mov
mov
in
adc
push
insl
cmc
xchg
mov
fimull
lahf
push
bound
jae
jb
inc
xchg
mov
pop
movsb
icebp
lcall
movsl
sbb
std
stos
fwait
rol
xlat
nop
pusha
pop
inc
xor
xor
scas
mov
mov
insl
out
dec
adc
or
sbb
lods
jno
cwtl
test
jle
xor
dec
sbb
cld
test
jmp
jno
xor
sbb
and
sti
enter
xchg
pop
mov
xchg
and
data16
out
in
fdivs
lods
popa
or
inc
pop
push
clc
aam
leave
cmp
and
popf
inc
or
and
movsl
cld
rcrl
fisubs
mov
filds
push
nop
pop
mov
cmp
jbe
je
int
lret
or
mov
decl
add
or
cli
movsl
mov
fndisi(8087
sti
mov
movsl
dec
pop
mov
in
fs
sbb
rcr
mov
repz
xor
mov
dec
je
xchg
jecxz
push
cwtl
insl
inc
fsubrp
cltd
movsl
iret
mov
mov
scas
repnz
jbe
dec
stos
jne
in
in
inc
fcompl
jo
mov
fisubrl
in
inc
pop
pop
mov
cmc
sbbb
adc
scas
test
add
inc
xor
sub
rorb
inc
shl
popf
pushf
pop
add
inc
xor
sub
cltd
aam
mov
pusha
push
cmp
push
nop
pop
shrl
or
inc
call
mov
mov
sub
out
sub
popf
popa
adc
xor
daa
mov
lods
adc
mov
mov
insb
sub
pop
pop
aas
xor
xlat
pop
sub
ljmp
lcall
call
pop
mov
movsl
mov
jbe
cmp
pop
pop
adc
sub
mov
jns
mov
and
addb
outsb
cli
fwait
ds
sbb
push
inc
flds
rorl
nop
into
aaa
sti
pop
or
xchg
cmp
stos
mov
push
out
xchg
lahf
cltd
pop
jno
aas
pop
mov
out
stos
push
scas
lea
bound
mov
std
dec
sbb
sahf
push
mov
xchg
inc
xchg
out
adc
inc
mov
lds
push
push
mov
add
stc
adcl
inc
dec
sbb
sbb
divb
dec
in
adc
xchg
jge
xchg
mov
mov
xorl
orl
lahf
dec
push
mov
mov
dec
dec
gs
mov
enter
leave
pop
or
pop
push
mov
pop
or
lcall
call
sub
pop
in
lock
lock
fistpl
sbb
cltd
sbb
int
je
rclb
ror
jmp
and
pop
lret
dec
sar
inc
fstpl
push
jmp
mov
xorb
lock
pop
cli
outsl
out
enter
jne
jg
nop
jg
test
or
and
pop
fcomip
pop
stos
hlt
sti
pop
sahf
hlt
divl
nop
mov
aam
lock
push
and
fs
in
dec
in
test
mov
sarl
sub
cltd
pop
push
xor
sub
and
stos
sbb
cmp
jo
jae
pop
in
and
inc
adc
mov
ret
test
push
call
ds
scas
in
scas
lahf
in
jno
ret
mov
mov
rcr
cmc
or
xchg
mov
loope
mov
or
imul
dec
fldenv
fildl
push
mov
mov
sub
loopne
xchg
add
mov
loopne
pop
lock
dec
icebp
repnz
imul
jbe
cld
mov
or
push
dec
lret
test
arpl
cmp
push
xor
lock
sahf
mov
incb
lods
in
cmpsl
or
jo
mov
and
jmp
mov
pop
repnz
gs
aam
mov
mov
fmuls
fwait
adc
insb
subb
mov
aaa
lock
inc
cwtl
or
adc
xchg
mov
xchg
js
mov
and
scas
sbb
lcall
js
push
cmp
or
adc
push
xor
inc
cmp
sbb
ljmp
pop
cmc
jbe
or
cmp
adc
mov
and
or
in
dec
inc
jg
in
pop
adc
scas
fsubrl
jae
rcl
inc
sbbl
sbb
daa
in
sbb
inc
idivl
data16
push
repz
daa
cmc
xor
cmc
jb
mov
add
test
inc
movsb
int3
add
jno
popf
pop
jg
ljmp
add
mov
test
enter
inc
adc
mov
pop
or
es
inc
dec
push
xchg
imul
and
and
out
out
mov
int3
pushf
and
pop
sub
lock
jmp
inc
sarl
add
xchg
cmp
test
ss
loop
insb
sbb
push
insb
push
mov
hlt
sbb
dec
fidivl
cs
fs
adc
push
xor
loop
inc
adc
xchg
jge
decl
out
xchg
xchg
aad
jnp
inc
adc
fstps
jne
addr16
sbb
or
xchg
inc
pop
or
std
fsts
iret
sbb
scas
xchg
jg
mov
scas
pushf
je
insb
pop
imul
and
pop
arpl
dec
push
add
in
xchg
mov
imul
push
mov
addr16
cmp
leave
mov
pop
mov
shll
jns
pop
rcl
or
ret
sbb
mov
loopne
mov
pushf
nop
cltd
sbb
pop
dec
push
adc
call
xchg
pop
pop
cmp
pop
lret
aad
enter
and
dec
imull
daa
into
jge
jae
mov
clc
or
bnd
imul
ja
lds
cmp
jl
xchg
cmpsb
xchg
in
roll
mov
in
test
push
ficoms
xorl
lea
push
out
aam
shr
mov
add
addb
adc
sbb
mov
and
scas
cmp
cmp
adc
sbb
out
das
inc
add
test
loope
mov
fnstsw
scas
push
sbb
mov
fwait
mov
mov
sti
xor
cmp
fdiv
pop
pop
cmpsl
mov
xchg
pop
arpl
cmp
ret
call
jp
leave
pop
inc
xor
jg
cmp
inc
jns
aam
mov
dec
in
inc
cmp
xchg
xchg
sbbl
mov
insb
add
or
pop
xor
push
mov
js
mov
and
std
inc
sub
sbb
ds
dec
js
xor
mov
std
int
fisttpl
pop
fisubrl
push
repz
shrl
or
scas
sti
mov
aam
mov
inc
push
int
jae
popf
rcrb
rcrb
bound
lret
loopne
push
mov
scas
pop
xchg
cld
adc
aad
dec
in
mov
fisubrs
xor
sbb
xchg
test
mov
ret
neg
cwtl
fstpl
mov
test
loop
movsb
sahf
cmp
jmp
jmp
push
jae
in
lahf
sub
aam
xor
shr
add
in
mov
lret
sbb
adc
leave
adc
lock
pop
push
adcl
sub
test
cmp
xor
or
adc
test
stos
push
pop
xchg
pusha
pop
shll
int
and
pop
idivb
adc
xor
pop
cltd
mov
and
test
int
fwait
sub
sub
add
xchg
pop
push
std
and
stos
sub
nop
mov
pop
xchg
or
jns
add
roll
popa
jo
popf
add
push
fcoml
sbb
push
or
xor
loopne
outsb
mov
xor
inc
sbb
aam
xchg
jl
sarl
imul
ror
pushf
inc
push
cld
addr16
adc
and
ja
dec
fsts
mov
fdivs
adc
mov
inc
imul
add
push
lcall
push
fs
testl
dec
subb
cmp
pop
int3
adc
push
jno
fldcw
xor
fists
mov
add
ror
pop
mov
and
arpl
xchg
push
push
jno
add
mov
out
int3
and
sbb
fcomps
pop
mov
xchg
fldt
mov
addr16
rorb
les
jl
xchg
add
sbb
loop
test
notl
into
and
pop
xchg
or
pop
xor
mov
mov
cmp
cwtl
lds
cmp
imul
lock
mov
dec
test
test
lcall
mov
icebp
aam
sub
test
scas
andb
xchg
stos
in
inc
cli
cld
fwait
pusha
sub
je
push
out
sbb
fsqrt
scas
inc
je
int
or
mov
push
cmp
pop
scas
stos
xchg
imul
sbb
inc
xacquire
xchg
sbb
pop
popa
jecxz
mov
ds
xchg
xchg
aad
rorb
push
mov
testl
or
xor
mov
xchg
and
pop
xchg
push
ljmp
test
arpl
clc
in
andl
mov
ss
xorb
add
xlat
xor
xchg
rolb
push
dec
push
cld
outsl
int3
jmp
fwait
outsb
mov
ljmp
add
mov
jb
repnz
mov
push
mov
lock
and
outsb
mov
sbb
inc
shll
push
mov
lret
jg
lcall
push
pop
call
adc
fwait
pop
ret
push
popl
sub
sub
jno
enter
cmpsb
lds
dec
sbb
add
int3
mov
test
pop
mov
jns
mov
int3
out
fnstcw
fcmovu
push
fidivrs
jecxz
in
in
les
sub
and
jns
sbb
xchg
fwait
out
adc
shr
mov
addr16
std
add
push
in
ret
sti
mov
sub
or
dec
jns
mov
daa
or
pop
mov
mov
fdivr
fdivl
sti
dec
push
cmp
out
pushf
xchg
jo
xchg
stc
ror
cmpsl
jno
test
and
pusha
xchg
fsubl
cwtl
mov
sub
jl
push
repnz
jno
fs
jbe
xlat
clc
pop
icebp
leave
add
rclb
add
mov
ds
mov
adc
cld
jno
mov
imul
mov
gs
xchg
arpl
movsb
inc
stc
mov
pop
lret
and
pop
push
scas
pop
orl
mov
sbb
push
testl
or
fsubs
test
cltd
out
or
mov
shl
sub
pop
scas
cs
push
push
sub
pushl
and
jle
aam
mov
icebp
das
sbb
mov
inc
mov
or
pslld
jmp
scas
psrlw
or
mov
jl
nop
mov
cmpsb
inc
fs
sbb
sub
les
and
aas
shl
loope
cmpsb
xor
xchg
in
sbb
inc
test
dec
lds
es
mov
es
mov
clc
push
jp
xor
fbstp
xchg
daa
dec
mov
pushf
jl
jae
and
dec
mov
lds
rorb
psrlq
inc
lock
mov
aaa
sub
fistpll
dec
sbbl
addr16
sbb
scas
icebp
adc
inc
fists
push
push
mov
in
cld
ja
lock
jmp
imul
sbb
pop
inc
jmp
fnop
push
std
in
xchg
jb
cmp
in
pop
or
movb
test
sub
cwtl
or
push
mov
push
or
sahf
and
dec
xlat
and
cmp
stc
stc
or
inc
cmpb
cli
fnstenv
xor
push
rep
ret
movsb
mov
aad
mov
lods
movsl
push
adc
inc
xor
dec
cmp
ret
jg
adc
sub
xchg
push
sub
rcr
sbb
xchg
loope
mov
aaa
inc
ja
mov
insb
movsb
mov
and
xchg
cmpsb
mov
or
sbb
mov
push
dec
stc
test
movsb
mov
out
loope
or
add
jbe
mov
or
scas
int3
dec
mov
or
lods
pop
insb
or
xchg
adc
sbb
or
xchg
inc
push
jns
pop
shlb
inc
jle
ljmp
push
mov
dec
adc
faddl
or
adc
lretw
push
aam
aaa
psubb
mov
cmpsl
pop
ret
enter
mov
inc
data16
repnz
cmpsb
insb
test
inc
stos
ret
jno
sti
xchg
sti
jne
xor
xor
jbe
rorb
adc
in
daa
in
scas
mov
mov
mov
fildll
xor
mov
mov
xor
fldenv
push
push
ret
adc
dec
ja
pop
pop
or
mov
inc
bnd
int3
dec
insb
mov
jp
pop
inc
jge
mov
sti
repz
push
scas
ret
leave
xor
pop
mov
mov
mov
repz
outsl
int3
ret
cltd
es
test
add
popa
mov
mov
add
push
ffreep
movsb
lret
push
or
inc
push
iret
in
adcl
pop
cmp
cmpl
arpl
fnstsw
cwtl
sbb
sub
adc
mov
in
cs
ret
out
ljmp
iret
insl
es
pop
shlb
adc
dec
push
in
adc
das
fmul
scas
mov
sbb
loop
rorb
mov
mov
cs
jge
aaa
cli
icebp
pop
rcrb
outsl
aas
and
push
repz
cli
cli
dec
fwait
xchg
nop
mov
dec
jbe,pt
in
ret
hlt
jecxz
pop
mov
jmp
pop
es
scas
jno
outsl
mov
xor
test
mov
or
or
lock
pop
insb
cmpsb
dec
andl
adc
fadds
nop
cmpsb
push
add
insb
mov
mov
ret
jl
scas
sub
mov
xor
pushf
scas
adc
push
out
push
paddusb
mov
cwtl
pop
pop
xor
cltd
test
lock
mov
xchg
aaa
xor
stos
mov
xchg
fistpll
push
add
pushl
aam
shll
mov
fwait
sbb
filds
jp,pn
or
stos
push
mov
popa
mov
push
dec
add
inc
je
stos
arpl
jecxz
mov
fistpll
mov
xor
xchg
or
sbb
mov
sub
and
dec
add
ret
jmp
shrl
cmpsl
faddl
pop
into
fistps
mov
inc
inc
gs
mov
mov
jg
inc
div
jne
or
stc
sub
mov
arpl
or
incb
or
cmpsb
mov
jno
xchg
lret
push
push
or
lret
push
mov
sub
push
out
test
incl
shlb
dec
call
scas
sub
sti
int3
sbb
fisubl
mov
outsb
mov
je
mov
pop
inc
and
ds
dec
mov
push
movsl
fcomps
outsl
ss
xor
icebp
add
mov
imul
pop
push
push
cmc
jns
mov
add
xorb
pop
ret
cwtl
fisttpll
into
cmpsl
in
mov
lods
mov
sti
mov
xor
loopne
push
aaa
inc
add
cltd
out
pop
cld
sbb
dec
or
mov
pop
scas
cmp
pushf
jp
cld
fsubr
ja
cmp
fstl
in
jp
fildll
sub
xchg
mov
fdivl
push
jb
movsb
xchg
and
inc
pop
gs
add
add
adc
jecxz
repz
pop
lahf
daa
pop
push
out
iret
jecxz
roll
pop
inc
pop
push
mov
mov
adcb
mov
cmc
push
adc
inc
lahf
icebp
mov
and
push
clc
cli
mov
loope
xchg
lock
clc
stc
and
push
clc
sbb
bound
faddp
js
fwait
sub
pushf
std
imul
in
aad
inc
sarb
adc
dec
dec
xlat
scas
add
pop
loopne
aaa
sub
mov
inc
jb
sbb
pop
test
lahf
add
sbb
clc
jge
jmp
outsl
loope
cmp
push
xchg
lods
adc
add
push
jne
andl
into
sti
sub
std
repz
call
je
mov
or
xchg
add
rcrb
data16
out
push
mov
test
sbb
hlt
xchg
push
pop
push
js
shrb
or
push
adc
enter
cmp
xchg
or
inc
mov
test
mov
ja
mov
ja
xchg
mov
inc
jge
push
add
push
mov
mov
and
inc
sub
xor
dec
lock
mov
cmp
mov
jg
sahf
enter
and
sbb
xchg
mov
mov
imul
mov
adc
incl
scas
jecxz
xor
inc
icebp
xchg
ret
aaa
test
jge
imul
imul
pop
divl
pushf
jp
pop
neg
pop
xchg
enter
das
inc
inc
in
mov
fdivs
pop
insb
inc
push
cld
fisubrl
cs
inc
sub
aam
pop
dec
aam
or
sbb
add
scas
int
push
push
jno
addl
in
mov
pop
jecxz
sub
jbe
addb
loopne
sub
inc
mov
movsb
in
aas
push
pusha
mov
add
mov
ret
push
or
jbe
movsl
mov
bound
xor
insb
push
pop
xor
and
pop
jecxz
dec
fstps
pop
or
xor
pop
ss
xlat
xchg
mov
fmul
xlat
adc
cmpb
xchg
xor
lods
push
mov
add
mov
fsubrl
push
movsl
int3
subb
push
and
js
test
aaa
aad
pusha
test
mov
add
ficoms
mov
xor
mov
and
inc
pop
lret
mov
mov
jmp
mov
xchg
xor
or
dec
mov
rcll
push
inc
test
pop
lret
and
insl
jae
push
addr16
pop
ret
enter
jbe
jle
out
pusha
hlt
in
mov
mov
jg
inc
mov
std
repz
adc
mov
lret
or
jge
repz
in
push
test
cs
or
mov
cmp
cs
mov
fstpt
out
test
jo
inc
sbb
es
pop
or
push
pushl
and
cmp
mov
pop
adc
xor
repz
sbb
fcmovbe
movsl
dec
gs
aad
dec
mov
mov
cmp
call
cmpb
or
addr16
les
bound
jecxz
in
in
or
mov
jae
fdivl
cwtl
inc
mov
addr16
jne
pusha
cmp
lahf
mov
leave
test
das
push
inc
aam
add
xchg
mov
mov
pushf
push
pop
cvtps2pi
mov
mov
fildll
cmovno
insb
movsl
ljmp
mov
dec
daa
pushf
jl
cmp
ret
or
and
outsl
push
hlt
mov
sub
rorb
imul
clc
xchg
push
iret
fistpll
test
mov
dec
adcb
push
pop
inc
sub
outsb
les
pop
sbb
push
insb
mov
or
sub
outsb
nop
cvtps2pd
and
pop
gs
inc
insl
mov
xchg
pushf
xor
cmp
sbb
sub
cwtl
repz
lock
shrl
mov
test
and
cli
jne
jge
cwtl
inc
mov
aad
cwtl
pop
sub
push
in
fldl
out
mov
icebp
adc
pop
test
lret
mov
jo
inc
cmp
mov
shlb
stc
add
test
sub
sub
mov
xor
popa
cmpsb
fists
hlt
or
mov
sarb
dec
mov
mov
jo
push
mov
jno
push
sbbl
shl
jl
stc
leave
sub
loope
idivb
push
push
mov
adc
popa
fisttpl
or
aad
mov
push
push
push
push
movsl
fs
gs
mov
xor
pop
jg
sbb
clc
pop
scas
mov
inc
in
sbb
cmp
lret
cvtpi2ps
fbstp
add
ficomps
push
xor
jmp
popa
daa
xor
jmp
cmp
pop
lock
dec
ja
xchg
insl
dec
inc
sbb
jle
and
dec
sbb
popf
addr16
or
xor
ds
lods
nop
push
and
xchg
xchg
rcrb
lea
aas
clc
push
sahf
loope
rorb
dec
adc
leave
mov
or
in
mov
out
rolb
pop
xchg
in
sub
push
or
add
movsb
mov
xchg
dec
daa
fsubrs
loop
sbb
cmp
sti
pop
mov
test
movsb
scas
push
xchg
cld
sub
es
scas
jp
mov
mov
mov
insl
add
mov
cmpsb
addr16
inc
movsb
adc
aaa
addr16
sbb
add
adcb
sub
fwait
and
and
fucomip
pusha
xor
sub
test
fisttps
fists
les
and
in
outsl
nop
fwait
sbbb
cmp
jne
lds
sub
jmp
push
imul
test
out
in
loop
sti
mov
cmp
icebp
mov
or
jg
fbld
insl
seto
mov
mov
aas
ret
cltd
mov
enter
dec
lods
sbb
nopl
mov
or
inc
mov
rolb
aad
mov
and
mov
sarl
imul
aam
jnp
xor
scas
mov
shl
cmp
jl
int3
and
pop
xlat
mov
cmp
ret
scas
sub
sub
push
add
orb
enter
adc
jb
mov
add
sub
mov
jb
out
cwtl
pusha
cmp
into
cmp
add
cmp
lahf
xchg
ret
mov
push
sarl
xchg
sbb
mov
aaa
sub
xor
adc
in
mov
jno
cmp
lods
popf
mov
stc
into
xchg
cmp
es
mov
call
sub
mov
inc
add
mov
jbe
rclb
pop
inc
pop
mov
ss
cmp
aas
add
dec
sub
push
mov
sub
cmpsl
inc
jns
outsl
sub
ds
jp
arpl
cmpsl
adc
adc
fadd
dec
pop
add
pop
inc
cs
pop
add
mov
sub
adc
lds
and
imul
inc
inc
jge
out
fidivl
pop
leave
jo
and
pusha
jle
inc
sub
std
push
adc
shlb
dec
into
push
dec
adc
fisttpll
push
mov
or
jmp
jmp
out
aaa
push
outsl
lods
adc
fldl
mov
outsl
jno
push
and
mov
mov
lcall
mov
movsb
sahf
xchg
jecxz
pop
pop
xchg
imul
insb
and
sbb
fadd
push
jmp
sbb
xchg
jecxz
pop
incl
clc
add
adc
pop
pusha
movsb
adc
sbb
pusha
add
loopne
cmc
jno
push
scas
push
xchg
sub
lock
push
in
dec
or
pop
repnz
pop
cmpsb
clc
mov
out
fs
jmp
bound
fiadds
mov
dec
inc
dec
and
andb
rcll
xchg
aaa
lret
cmp
andb
sbb
and
mov
sbb
movsb
push
sub
mov
loop
mov
xor
dec
fisubrl
push
xchg
jbe
les
cld
fstpt
ret
in
mov
ret
aad
push
cmpsb
mov
clc
daa
jp
mov
out
sub
mov
movsl
int3
pusha
adc
into
cwtl
fsubrl
add
cmpsb
jle
je
or
test
mov
xchg
xor
xlat
xor
mov
xchg
stos
adc
lahf
xor
dec
mov
cmc
pop
jl
scas
sub
inc
pop
pop
test
xchg
outsb
loope
or
aam
addr16
xchg
outsl
outsl
sbb
add
xor
stc
inc
add
xchg
into
jne
push
or
sub
inc
adc
cld
cmp
jle
cmp
push
idiv
sti
cld
movsl
mov
jne
or
ret
les
popa
sub
test
jne
pop
sbbb
push
inc
xor
std
mov
jne
imul
ret
adc
add
fcoml
scas
mov
int
sbb
mov
jmp
enter
mov
jl
push
nop
repnz
or
cltd
stos
jle
jno
and
ja
xchg
out
and
jbe
std
lds
in
fwait
dec
sbb
dec
mov
fwait
scas
outsb
xchg
push
bound
xor
cmpsb
cmp
jbe
pushf
inc
mov
cli
rolb
xchg
cmp
jbe
test
and
sti
dec
cli
outsl
insb
sbb
mov
mov
cli
jp
insb
add
daa
insl
xchg
push
adc
fucom
dec
repz
xchg
cmpl
pop
jnp
test
jns
inc
cmpsb
mov
cmpsb
add
mulb
cltd
or
ljmp
mov
cwtl
daa
inc
mov
and
mov
mov
ss
jnp
push
lods
mov
cwtl
push
inc
jecxz
and
and
push
xchg
push
jmp
mov
inc
jbe
out
test
fisttpll
outsl
pop
inc
and
out
jge
pushf
js
addr16
adc
xchg
leave
dec
bound
repz
out
push
nop
daa
insb
negb
xchg
and
jmp
int3
or
push
jl
mov
fiadds
aaa
lahf
xor
cwtl
int
push
lcall
mov
fs
hlt
in
mov
cmc
mov
inc
sub
cwtl
aas
add
pop
stos
mov
aaa
cmp
jmp
out
int3
in
cmp
and
mov
xchg
mov
jb
inc
add
cmp
cmp
add
test
sbb
cmpsl
sahf
xchg
xchg
and
leave
mov
push
cmp
xchg
push
ret
in
fdivl
fidivl
add
cmc
fcmovnb
inc
in
add
xor
xchg
pop
xlat
cmpsb
icebp
les
mov
in
inc
cmp
fnsave
and
xor
ja
ds
je
sbb
jae
xchg
xor
pop
pop
sbb
jo
adc
insb
xchg
mov
sub
jae
pop
sub
loope
push
fdivp
imul
dec
addb
aam
inc
lock
in
cmp
fbld
stos
jmp
sub
adcl
and
lret
xor
aaa
sub
adc
inc
xchg
inc
inc
cmpsl
inc
and
lds
cmp
jl
insb
popa
in
push
cmp
pop
dec
clc
inc
inc
stos
add
test
push
int3
mov
push
jb
cmp
fildll
mov
les
or
arpl
jp
sub
dec
inc
mov
daa
mov
std
xchg
push
dec
repnz
mov
sbb
mov
inc
ret
scas
or
fdiv
mov
xchg
mov
add
xor
dec
fnstsw
std
enter
jmp
mov
jae
pop
sub
mov
jo
fwait
iret
xchg
decb
rcrb
in
pop
push
xor
dec
cmc
xor
outsl
jnp
xchg
inc
mov
xchg
adc
orl
lods
jo
xor
sbb
pop
dec
or
sbb
notb
mov
and
lret
rcr
cmp
es
cwtl
movsl
xchg
cmpsb
xchg
rcl
loop
test
incb
xorl
jle
aad
mov
lret
lret
dec
shlb
adc
or
cwtl
adc
dec
clc
cltd
jg
lods
mov
add
jge
movsl
inc
ret
outsl
mov
sarb
ret
in
xchg
inc
icebp
stos
mov
dec
add
out
adc
sub
test
and
aam
and
lock
inc
jle
cmp
rcl
inc
in
outsl
hlt
fdivrs
cld
inc
pop
ret
test
loopne
jns
pop
xor
aas
jns
inc
mov
sub
sbbb
lea
sbb
xlat
xor
sar
movsb
js
rclb
jne
aaa
aam
adc
pop
imul
dec
push
dec
jae
mov
rcrl
xor
cltd
dec
mov
stos
xor
lea
fcoms
cmpl
xchg
fistpll
xorl
notb
out
jae
stos
mov
pop
or
xchg
aad
mov
pop
add
mov
pop
pusha
jno
fidivrs
push
icebp
fwait
jno
mov
or
push
out
mov
dec
inc
sbb
cwtl
xchg
shrb
sub
cld
and
dec
adc
mov
jmp
inc
xchg
push
adc
cmc
mov
xchg
nop
loopne
scas
pop
pusha
outsl
hlt
mov
cwtl
int3
mov
or
xor
scas
cmp
fistps
dec
leave
mov
andb
push
inc
imul
pop
mov
cmpsb
arpl
loop
test
mov
outsl
lods
movsb
xor
test
lret
cltd
push
roll
outsl
sbb
jne
xor
or
jnp
sbb
inc
pop
stos
and
xchg
pop
sub
leave
movsl
mov
aaa
jle
in
fistpl
jnp
fsubs
nop
adc
mov
push
test
jo
xchg
xchg
jno
pop
idiv
pop
jp
adc
test
dec
aaa
jle
mov
sbb
js
jl
mov
iret
add
in
rorb
loop
and
xchg
fld
rcr
test
sbb
mov
outsb
sbb
movsb
test
xor
or
inc
dec
mov
inc
loopne
push
ljmp
addb
fmulp
mov
outsl
xlat
mov
jne
xchg
inc
aaa
dec
ss
mov
out
or
xor
cmpsb
shrl
icebp
jbe
and
in
push
sbb
lret
jo
insb
ficoms
bound
lock
rclb
pop
cmpsl
pop
adc
stos
in
movsl
ljmp
lock
movsl
dec
mov
push
lcall
push
mov
inc
dec
xchg
out
jle
xchg
push
outsl
pop
fmul
loope
pop
inc
test
cmp
cli
lcall
mov
inc
mov
mov
jno
push
call
popa
push
sqrtps
sub
xor
adc
xor
stos
add
jecxz
call
lods
stos
ds
ja
adc
insl
or
jle
jns
sub
cmp
cwtl
sbb
jecxz
arpl
dec
rcrb
push
push
push
jge
jecxz
fs
xchg
call
nop
mov
loopne
sub
mov
incb
pop
fdivrs
call
in
ret
adc
loop
out
jge
pop
jecxz
push
pop
ret
inc
jbe
lods
jg
pop
movsb
mov
and
in
pop
rep
cmp
stos
mov
in
lret
fxtract
push
pop
push
cmp
jl
repz
sbb
and
repz
adc
imulb
scas
pop
pop
cs
std
and
insb
sub
shlb
mov
inc
xchg
lahf
lcall
std
jmp
lods
outsl
das
lds
adc
sbbl
push
fisubl
decb
xchg
loope
je
rol
in
pop
xchg
and
jno
inc
adc
jbe
inc
shl
pop
stos
mov
out
movsl
jl
and
lcall
pop
cld
stos
ljmp
daa
add
fiadds
mov
pop
pop
xchg
rolb
es
lds
leave
ja
movsb
adc
jecxz
das
fwait
scas
pop
nop
xchg
test
sbb
lahf
cmp
push
jge
sbb
mov
sbb
mov
mov
rcrl
icebp
loop
jecxz
sub
jecxz
dec
icebp
jg
jp
enter
pop
pop
cmp
push
sbb
je
iret
fldcw
imull
mov
mov
scas
into
repnz
or
or
lods
lods
add
mov
aad
jecxz
fisubrs
lea
pop
notl
pushf
cmpl
mov
leave
mov
xchg
jne
sbb
sbb
shrb
movsl
lds
lahf
call
and
jmp
push
ret
pop
or
mov
jo
testb
mov
into
jge
out
dec
test
outsb
jp
fnstenv
div
sub
xchg
daa
sbb
jne
and
xchg
sahf
fmuls
sub
lret
cltd
add
ror
jne
movsb
or
xor
lds
iret
or
sub
mov
adc
mov
aaa
rcr
sbb
fistps
push
xor
and
into
sahf
mov
add
sub
popf
aad
dec
adc
mov
cmp
ja
or
xchg
sbb
ja
jnp
mov
daa
jbe
or
and
push
xor
stc
xor
mov
push
push
push
pop
push
stos
daa
mov
out
outsl
add
xchg
mov
out
mov
xor
cmp
fiaddl
lahf
dec
push
and
imul
jno
pop
push
movsb
mov
jbe
aam
std
les
push
in
in
adc
ret
jge
add
mov
loope
jb
push
pop
iret
mov
cmp
nop
sbb
out
fidivrs
ds
add
cld
rcrw
popa
daa
adc
and
adc
cld
int
out
cmp
lock
xchg
loope
mov
dec
filds
movsb
test
xchg
shlb
push
pop
xchg
push
or
leave
mov
add
loop
in
mov
dec
lods
sbbb
imul
xor
fsub
push
int
loop
dec
std
sub
lods
movsb
add
dec
js
imul
stc
sub
jecxz
jle
jnp
cmp
daa
cli
bound
add
mov
shrb
pop
addr16
adc
sub
mul
popf
pop
bound
insl
xchg
lock
ret
out
enter
hlt
stos
movsb
sbb
pop
cli
lods
mov
adc
adc
mov
inc
and
jnp
sub
mov
mov
dec
cmp
adcl
fldenv
ret
inc
fwait
fs
pop
xor
hlt
cmpsl
lcall
lcall
sarb
mov
mov
or
jbe
mov
idivl
iret
dec
mov
jecxz
mov
mov
xchg
and
in
and
outsl
sbb
call
mov
mov
pushf
mov
xchg
mov
cmp
cmp
cmpsl
addb
xor
movsb
gs
mov
push
adc
sahf
divl
add
adc
mov
negb
pop
cmc
sbb
out
jne
xor
add
outsl
fcompl
mov
mov
mov
xlat
mov
test
mov
cmc
pop
cmp
pop
lret
mov
bound
cmpl
into
lea
push
outsl
or
add
mov
insb
pushl
ss
mov
je
popa
add
xchg
scas
jno
in
adc
shl
add
popa
fstps
cs
cmp
push
xchg
xor
push
xor
cld
pop
das
sbb
or
jmp
insb
pop
cwtl
sbb
and
movsl
xor
and
ljmp
push
mov
mov
dec
lods
push
jmp
mov
sbb
sahf
mov
and
inc
mov
insb
jge
push
push
divb
xor
or
and
adc
or
and
fidivrs
clc
js
lods
shrl
adc
or
push
sti
mov
pop
daa
mov
inc
mov
scas
inc
push
add
scas
xor
andb
and
adc
adc
fstps
mov
lds
jo
inc
mov
int
pop
cmp
inc
sub
sti
adc
jmp
or
aas
das
daa
cli
roll
jno
inc
mov
rcrb
call
lods
fcmovbe
ljmp
in
cmp
test
push
js
out
repnz
mov
enter
and
jae
pop
lods
dec
pop
sub
nop
push
das
ljmp
mov
loope
push
push
push
test
jecxz
aam
pop
mov
mov
test
cmp
lahf
dec
ja
fildl
pop
stc
movsl
test
and
pop
es
dec
cmpsl
stc
inc
fimuls
mov
insl
outsl
imul
jle
jne
lds
scas
movsl
scas
movsl
inc
popa
ja
das
repnz
movsb
hlt
pop
shlb
pop
pusha
xchg
push
sbb
jmp
mov
cmp
pop
mov
ja
adc
lods
in
pop
or
sub
filds
insb
xchg
movzwl
sbb
popf
lods
lahf
leave
dec
sbb
hlt
mov
loopne
cltd
popf
in
loopne
mov
mov
push
jmp
cmc
mov
push
lret
les
mov
inc
cli
sub
stos
push
sti
in
push
jmp
mov
call
dec
dec
in
cli
adc
mov
and
push
in
inc
lahf
lret
push
sub
cmp
imul
sbb
mov
orl
cmp
or
fnstcw
insl
jp
lock
out
sbb
xchg
mov
push
js
sbb
cmpsb
sbb
mov
mov
js
mov
cmp
lods
pop
or
dec
inc
loop
shrb
dec
in
xchg
jne
inc
int3
addb
lcall
in
movsl
cmp
mov
or
mov
pusha
mov
mov
lret
push
xchg
jo
or
mov
cmp
jb
pop
and
adc
or
scas
inc
jno
mov
sbb
fs
lock
dec
mov
lret
pop
mov
inc
push
sbb
adc
pop
lock
cmc
mov
push
int3
sub
enter
adc
xor
cmp
push
cmp
pop
xor
lds
inc
or
icebp
lea
xor
negl
je
push
dec
jg
mov
roll
orl
sahf
push
mov
fidivs
xchg
pushf
sahf
aaa
and
adc
jmp
pop
addr16
cmpsl
push
push
pop
icebp
addr16
push
pop
cmp
movsb
adc
push
jno
repz
sbb
cmp
inc
test
es
rcrb
arpl
jg
jns
sbb
cltd
xchg
mov
testl
scas
imul
loop
loop
jp
push
adc
cltd
fldcw
sub
mov
daa
out
mov
shl
std
adc
imul
imul
test
dec
and
push
into
sbb
xchg
rorl
out
mov
andb
sub
push
aas
ret
outsl
mov
or
pop
fsubrs
call
jle
insb
rcl
push
xor
add
jecxz
fcompl
or
push
loope
movsl
adc
xor
mov
std
adc
rcrb
outsb
cmp
or
pusha
jo
loopne
lods
push
mov
int3
and
jle
inc
cmp
adc
dec
in
pusha
add
jno
jle
in
dec
notb
test
loope
loop
adc
mov
cmc
es
cld
mov
pop
mov
popf
cmpl
daa
dec
rorb
cmp
fidivl
sub
cs
xchg
mov
push
lods
test
js
cmp
inc
in
or
idivb
shrl
call
mov
ret
fwait
mov
shlb
ret
ljmp
mov
cltd
imul
movsl
std
ljmp
xchg
ss
stos
imul
scas
fbld
movsl
inc
ficoms
dec
roll
leave
and
or
mov
dec
mov
dec
sub
mov
dec
mov
movsl
movsb
add
mov
add
push
fstl
mov
adc
mov
je
stos
push
mov
lcall
adc
jmp
stos
insl
cmp
add
hlt
mov
ja
ss
mov
sti
mov
sub
jg
pop
mov
push
inc
scas
int3
lcall
and
xor
push
cs
enter
adcb
adc
mov
jle
mov
popf
ror
or
test
ss
sbb
mov
fsubr
ja
into
xchg
andl
and
jl
out
fldt
bound
xchg
stos
mulb
dec
push
andb
mov
cmp
mov
cmp
sbb
shlb
addr16
mov
push
aaa
or
sub
xchg
mov
mov
lea
leave
outsb
lods
push
insb
inc
xchg
cmpsb
jge
adc
and
jge
dec
and
mov
add
mov
sbb
mov
jb
jbe
in
mov
test
stc
push
mov
xor
aad
or
insl
xchg
mov
repz
adc
ret
ds
jge
adc
fcoms
inc
mov
int
pop
push
popa
shrl
sti
insl
cld
mov
mov
repz
mov
popa
test
push
xchg
in
jecxz
xchg
sub
clc
jl
mov
jle
lods
movl
mov
scas
clc
rorl
xchg
dec
lret
popf
xor
or
push
fcmovnb
sarb
shr
repz
fldenv
adc
push
jns
jno
repnz
push
jne
aam
push
dec
or
cwtl
sub
sbb
cmpsb
cmp
aas
inc
lods
xor
mov
push
cmp
dec
fildl
fstps
jg
xchg
pop
mov
xchg
mov
jle
xchg
jb
add
loopne
std
aas
test
repz
jl
push
jl
or
mov
arpl
cli
inc
or
cs
aaa
inc
popf
and
cltd
jle
mov
int
repz
xor
fwait
std
xor
dec
dec
sbb
inc
mov
jb
aaa
or
addl
dec
scas
mov
pop
jmp
pop
adc
push
jae
lret
adc
ja
mov
je
mov
mov
mov
cmp
lret
lea
pop
subl
xchg
push
int3
push
popa
adc
cltd
lds
fcomps
filds
sbb
jne
dec
push
outsl
and
sahf
fsts
aad
push
ficompl
fdivs
pop
mov
jb
mov
cmp
sub
mov
xor
cmp
rclb
scas
cmp
call
fldl
jnp
mov
cwtl
jo
test
adc
jle
stc
xchg
nop
std
mov
dec
push
pop
mov
inc
xchg
cwtl
fistl
out
jne
cmp
test
outsb
inc
scas
aaa
mov
lock
sti
fisubrl
fs
or
out
sbb
insl
pop
lods
shll
sub
jno
xchg
filds
jbe
dec
fnsave
or
push
jl
fwait
js
arpl
cli
pop
mov
int
ret
xchg
mov
inc
push
push
xor
jp
push
or
ficoms
fs
push
insl
cmc
stc
xor
mov
adc
cmp
pop
add
xchg
xchg
dec
mov
push
fucom
mov
inc
stos
jb
lds
lods
sbb
out
mov
or
fwait
cmp
shlb
xchg
inc
adc
or
call
sub
shlb
leave
xchg
fstpl
xchg
sbb
test
mov
sbb
aaa
leave
insb
inc
out
je
sub
repnz
outsl
out
xchg
sbb
cltd
scas
adcl
jae
addps
jno
je,pn
xor
pop
sahf
mov
cmp
shrl
popf
mov
pop
pop
outsl
and
pop
pop
jmp
dec
sahf
jecxz
fwait
dec
popf
data16
push
jns
ljmp
lods
and
xor
cmpsb
xchg
out
fmul
jne
mov
gs
and
insl
xor
popa
sub
push
pop
dec
ret
cli
pop
pop
cmp
mov
loop
ss
mov
cs
sahf
xchg
xchg
jp
lcall
lea
in
fbld
imul
mov
cmpsl
mov
mov
shr
adc
fistps
loopne
pop
pop
push
loope,pn
aaa
or
mov
lret
imul
mov
ret
sbb
adc
std
cmc
and
cld
push
mov
pop
mov
stos
imulb
shl
lea
out
out
mov
dec
inc
nop
dec
xor
jae
cltd
dec
nop
push
pop
pop
in
imul
jl
repnz
jo
ret
jno
push
sub
cli
or
icebp
scas
adc
push
pop
pop
mov
jnp
fistps
adc
les
pop
clc
into
or
and
and
loope
iret
mov
jmp
fisubrs
lcall
or
cltd
cmc
pop
xchg
hlt
push
sub
les
jne
mov
xor
enter
mov
ret
lods
jae
add
das
cmp
mov
sbbb
cmp
push
outsb
pushf
pop
dec
flds
cs
mov
xchg
mov
out
add
rcll
scas
inc
inc
xchg
es
and
sbb
jbe
leave
pop
stos
icebp
enter
adc
or
int
sub
lcall
mov
push
out
mov
mov
lret
jle
test
xor
push
mov
push
push
mov
std
test
cs
sub
mov
fcoml
add
xchg
imul
pop
jbe
jae
test
in
mov
fst
loopne
out
pop
sahf
mov
pop
lcall
popa
cmpsb
cmc
ja
pop
xchg
mov
sbb
daa
and
loope
shrl
rcrb
push
mov
js
cmp
sahf
gs
add
orb
pop
inc
mov
pop
mov
shl
jno
and
imul
add
mov
mov
loopne
lock
pusha
ret
add
jl
sti
fnstcw
push
mov
aaa
fs
inc
push
loop
dec
push
pusha
inc
inc
lods
sub
sub
and
add
push
dec
pop
cmp
or
adc
sub
cmpxchg
std
mov
jnp
pusha
mov
stc
insl
stos
testb
loop
flds
daa
push
scas
bound
xor
sub
imul
leave
mov
in
dec
sbb
outsb
xchg
push
and
loope
test
fsubrl
pushf
xchg
ljmp
mov
cmp
daa
jns
ret
pop
scas
jno
or
sub
aas
aad
test
sarb
or
stos
out
rcrb
cmp
sahf
pop
popa
lcall
xchg
jo
add
pop
faddl
mov
dec
push
dec
loop
je
shll
xor
ljmp
mov
insb
sbb
mov
xchg
sti
xor
sub
sbb
std
or
sbb
fcomp
xor
leave
fs
add
add
dec
xchg
pop
aad
mov
clc
mov
sbb
sbb
or
loopne
pop
jb
jbe
sahf
xchg
in
push
xor
imul
rol
outsl
adc
dec
in
daa
mov
mov
add
cmp
adc
jno
iret
add
mov
mov
fwait
ret
mov
arpl
sbb
fstp
mov
and
jb
xchg
loopne
jb
enter
ret
push
shrl
sub
fbld
or
jmp
sbb
add
xchg
cmp
add
or
insb
and
xchg
pop
dec
sub
pop
aaa
mov
test
jg
jae
aad
inc
inc
add
ficomps
pop
pop
inc
sub
jg
xor
lods
and
cmp
lcall
xor
push
xchg
mov
and
push
sub
paddq
int
xchg
aaa
out
inc
jnp
clc
outsl
dec
pop
jae
outsl
jae
js
mov
cs
lds
fbld
pop
mov
and
xchg
sbb
aas
repz
lret
sbb
xor
dec
adc
test
cmp
test
mov
in
lcall
push
stc
sub
ret
or
jnp
push
push
mov
movsb
mov
in
out
insl
stc
sub
insb
or
fiaddl
ja
push
push
xchg
xchg
sbb
adc
sub
dec
jmp
and
pop
in
iret
lcall
imul
jg
jp
je
js
cli
inc
jbe
bound
int
lock
stos
aam
pushf
mov
adc
xor
or
add
cli
nop
in
sub
push
mov
lret
data16
icebp
jno
leave
stos
jns
cltd
jb
sub
lock
sub
pop
or
xchg
mov
inc
icebp
dec
xlat
icebp
adc
push
pop
push
dec
lea
xlat
faddp
jne
stc
sbb
adc
and
mov
mov
pop
dec
insb
pusha
pop
sub
inc
xor
lds
adc
enter
jbe
data16
inc
xorl
enter
adc
push
push
lret
pop
mov
cmpl
cmpsl
decl
cmpl
lods
bound
mov
and
jns
push
xor
ficoml
sbb
mov
xor
mov
dec
in
fistpll
mov
test
test
icebp
je
fnstcw
inc
xchg
jg
dec
adc
lcall
push
cwtl
rclb
out
or
std
cmpsb
lods
pushf
fwait
or
dec
daa
ret
mov
fcmove
fbstp
xor
insl
cld
mov
jle
out
in
dec
pop
out
xor
adc
adc
pushf
and
jno
pop
xor
xlat
inc
aam
mov
mov
dec
mov
out
fisttpll
jmp
fbld
sbb
orl
mov
outsb
out
divl
bound
out
in
repz
js
ss
push
insl
push
pop
in
xchg
pusha
pop
inc
sub
jbe
jae
inc
sbb
rcrl
sbb
ja
xchg
cmp
loop
sub
divl
stos
inc
ret
sbb
sbb
push
insl
xchg
xchg
movsl
pop
xchg
mov
push
pushf
mov
push
xor
adc
enter
push
test
into
xlat
cmp
xor
mov
push
or
sub
jecxz
ret
mov
xchg
push
or
mov
inc
or
jns
popf
jecxz
xor
cltd
hlt
lods
rcr
dec
xor
push
adc
test
test
xchg
cmp
mov
and
fldcw
xchg
jnp
or
xor
mov
or
pop
in
xchg
cmovne
add
dec
adcb
testl
subl
stos
xor
pop
or
popa
out
in
repnz
aas
or
pop
into
sub
lock
inc
outsb
inc
add
ds
hlt
pusha
push
in
mov
inc
jo
cmpsl
push
mov
sbb
mov
fcomps
outsb
add
test
int
mov
pop
cmp
pop
push
int3
xchg
and
mov
test
ljmp
xchg
enter
xchg
pop
inc
lcall
pop
into
gs
sbb
and
ficompl
pop
loope
jge
mov
adc
adc
lods
outsb
out
lcall
dec
pop
cld
xchg
or
jo
cltd
adc
sbb
inc
jg
popf
or
mov
divl
je
outsl
push
aas
push
bound
int
jno
xlat
std
rorb
xchg
fsub
fsub
add
push
lds
fdivl
mov
shll
mov
adc
mov
xchg
xchg
jne
fwait
pop
out
mov
or
xchg
push
es
sub
test
pushf
mov
inc
add
js
mov
xor
inc
and
inc
pop
ja
inc
rorb
fnstcw
adc
inc
jge
pop
and
dec
xchg
pop
div
pop
xor
leave
inc
sahf
scas
push
jmp
jecxz
pushf
pushf
add
rcrb
pushf
repz
loopne
cmp
pop
add
inc
addr16
test
cmpsb
xchg
cmp
fistps
sbb
aad
push
cmp
subb
fwait
push
cs
pop
adc
pop
mov
xor
jmp
call
jnp
mov
xchg
dec
pop
cltd
and
fcmovne
dec
dec
pusha
or
sbb
and
loope
ret
pop
xchg
shlb
je
leave
out
cmp
jecxz
ffreep
xchg
out
or
xor
dec
xor
cmp
cmp
hlt
sahf
rorb
jns
or
xchg
pslld
adc
jns
cmpsl
push
je
sarl
orl
cwtl
mov
xchg
sbb
sti
dec
scas
ljmp
sub
jl
test
lret
cmpsb
push
push
add
andb
mov
rcrb
push
bnd
push
jle
nop
adc
shll
inc
inc
es
stos
mov
jbe
xchg
cmpsl
and
sub
pop
cmp
mov
add
xchg
and
jmp
mov
in
pop
push
add
adc
push
pop
or
push
cmp
cmpsb
jg
xor
push
or
arpl
xor
lea
sub
mov
xlat
inc
add
mov
iret
lret
sub
push
adc
dec
mov
sbb
cmp
fnsave
dec
xor
out
scas
pop
inc
out
ret
addb
fcmovnu
lret
xor
into
mov
pop
test
std
nop
cmpsl
adc
cld
popf
push
out
sbb
add
hlt
loopne
or
clc
mov
xchg
fildl
mov
neg
mov
jae
cmpl
inc
stos
arpl
push
test
ret
cmp
mov
push
cmpsb
shlb
xchg
inc
xchg
xchg
jg
je
xchg
mov
loop
sub
push
pop
push
jnp
mov
push
xor
in
mov
push
icebp
jp
filds
ljmp
js
shl
imul
sub
jl
lahf
mov
aad
dec
sub
test
jne
in
inc
or
xchg
mov
out
je
mov
jle
or
mov
jbe
mov
sbb
ficoms
dec
xchg
dec
inc
bound
mov
imul
push
sbb
adc
push
scas
ret
cs
and
fnstenv
test
lahf
stc
mov
gs
shrl
fmull
outsb
and
ds
call
jae
enter
push
into
int
xchg
push
push
stos
fnsave
or
push
iret
dec
inc
fldl
jno
and
in
arpl
mov
gs
jl
mov
ljmp
je
xchg
jecxz
ret
or
test
mov
pop
popa
faddl
out
cltd
push
stos
xchg
popf
out
sub
sahf
or
js
pop
clc
add
ja
repz
mov
push
mov
roll
add
dec
mov
scas
test
jns
icebp
repnz
jb
test
pushf
pushf
add
rorb
inc
clc
lock
fstl
jne
bound
cld
mov
addb
cmp
mov
adc
fsts
xor
xor
loope
xlat
adc
inc
lea
mov
popf
jnp
add
lock
pavgb
dec
fdivrp
cmp
jnp
test
popf
loopne
inc
jmp
jns
pop
or
inc
test
xchg
jb
lret
jecxz
stos
mov
and
fs
add
inc
cmp
ret
mov
adc
jo
jno
mov
daa
and
stc
push
cli
sbb
shlb
jbe
scas
icebp
out
or
stc
xor
ret
or
in
sbb
sti
andb
sbb
mov
lret
fwait
fwait
aad
lods
inc
sbb
xchg
sub
pop
lret
cmp
out
jnp
sub
pop
lock
stc
mov
jne
dec
lcall
jae
roll
jbe
cmc
adc
cmp
cmpsb
adc
add
add
int
ds
mov
ds
iret
dec
out
cmpsl
jnp
nop
and
jmp
mov
dec
fisubl
daa
push
popa
pop
pop
int3
fimull
rcl
sti
mov
es
arpl
shll
inc
push
add
sub
fists
in
dec
addr16
mov
add
cmpsb
pop
sbb
into
pop
push
xor
insb
pusha
push
cmc
in
into
sub
cld
cs
or
out
int3
pop
out
cld
inc
add
xchg
hlt
lods
inc
int3
fldcw
adc
mov
cld
dec
lods
clc
jle
das
mov
ja
imul
xor
int3
movl
lea
mov
dec
mov
popw
gs
sub
xchg
jnp
and
push
enter
pop
cmc
cmp
push
xchg
movsb
xchg
mov
or
jg
or
mov
lods
xorl
mov
mov
jno
cwtl
adc
mov
sub
out
jmp
cmp
lods
in
xor
popf
sub
mov
enter
dec
jmp
xchg
das
jl
push
or
aam
adc
sti
loopne
push
xchg
test
arpl
xchg
inc
pusha
data16
inc
jle
add
aas
push
push
and
out
and
lods
cmc
enter
and
adc
fcmovnb
pop
xchg
pusha
outsb
pop
mov
push
cs
or
in
fs
nop
mov
push
add
jg
in
dec
push
int3
sbb
mov
fistps
dec
incl
mov
inc
cmp
inc
dec
jns
imul
jmp
pop
inc
daa
rorb
pop
loop
sub
arpl
sbb
jmp
icebp
fwait
test
xchg
cmpsl
dec
fisttpl
xchg
data16
mov
gs
test
mov
jne
xchg
cltd
shr
xor
push
mov
and
in
fcmove
or
add
je
test
jb
or
sahf
pop
aam
dec
dec
push
clc
push
lcall
xchg
fs
out
outsl
ds
and
jae
jae
sbb
int3
sbb
sbb
inc
ds
or
repnz
dec
adc
xchg
push
popa
outsl
push
shll
xchg
mov
mov
retw
pop
add
mov
pop
fildl
pop
iret
adc
jmp
insb
ret
insl
f2xm1
addr16
push
mov
inc
or
dec
mov
mov
cltd
push
mov
add
jb
lcall
mov
rcr
pop
inc
jae
pop
sbb
movsb
cmp
sub
adc
inc
pop
push
testl
cmpsb
lret
sub
or
sub
xor
ror
ja
imul
pop
sub
mov
scas
outsb
pavgb
lahf
jp
mov
shll
cld
inc
sbb
and
cmpsl
pop
mov
out
mov
andb
and
pop
pop
rcll
scas
imul
and
adc
adc
nop
fdivl
push
ss
rorl
pop
hlt
sub
push
mov
sbb
dec
sub
mov
cli
fs
stos
subl
repnz
jae
xor
xor
inc
inc
rcl
jae
dec
mov
and
sbb
jbe
sub
mov
rcrl
roll
shll
mov
xchg
dec
lcall
mov
adc
mov
cs
pushf
mov
int
rcl
ror
fnstsw
popa
jge
cmp
jle
dec
mov
or
ds
cwtl
movsb
adcb
mov
or
mov
cmpsb
adc
aaa
cmp
scas
or
mov
sbb
fnstenv
lret
test
or
pop
fs
dec
fimull
inc
repnz
incb
xchg
xchg
push
in
pop
sub
es
xor
push
test
mov
adcl
push
bound
push
scas
gs
mov
outsl
pop
xchg
ficoms
lods
mov
lods
inc
mov
mov
pop
scas
cmpsl
and
and
fistpl
popa
jle
cmp
sbb
pop
mov
jno
mov
sbb
push
cmp
jp
sub
fsubrp
adc
jecxz
push
cmc
outsb
lock
push
data16
mov
out
or
dec
and
inc
fs
push
icebp
inc
loope
in
sarl
push
mov
out
sub
sub
push
sahf
mov
divb
int
in
movsb
xchg
sub
loope
flds
test
jg
pop
outsl
ljmp
bound
jne
lods
fwait
sub
sbb
test
xchg
mov
sahf
loop
and
pop
icebp
adc
into
aam
inc
fdivl
push
movsb
bound
dec
sbb
xchg
jmp
fidivrs
inc
sbb
insb
fucomp
inc
push
in
lods
sub
inc
cmpsl
sbb
jo
fwait
das
cmpsl
mov
pop
aas
rcrb
mov
adc
in
leave
seta
int
dec
sbb
dec
lret
push
xchg
ja
xlat
inc
or
jnp
imulb
adc
call
out
cwtl
std
out
sti
jne
icebp
enter
xor
xchg
dec
js
mov
push
mov
fldcw
mov
add
jmp
scas
jne
sub
mov
hlt
xor
mov
ds
push
addb
adc
fwait
and
mov
in
sbb
dec
jnp
push
outsb
int
dec
mov
leave
dec
out
xchg
push
or
dec
sbb
call
or
xor
mov
jmp
cmp
bound
push
scas
push
out
lods
rcrb
sub
stc
ja
sbb
es
adc
repz
xor
dec
daa
aad
mov
mov
inc
inc
lret
dec
sbb
popf
jecxz
mov
aas
stos
cmpsb
popa
inc
cs
inc
sbb
mov
adc
mov
dec
int3
mov
inc
orb
mov
mov
mov
test
cmpsb
jae
outsb
js
or
loope
stc
and
adcb
xor
mov
dec
push
pop
xor
scas
adcb
mov
cmpsb
pop
mov
sbb
mov
rcr
inc
mov
jmp
cmc
sbb
out
popf
ret
add
inc
cmp
lds
mov
pop
jnp
jp
push
pop
xchg
es
jb
pushf
xchg
cmp
iret
inc
aam
jno
mov
ret
test
dec
mov
pushw
jle
lahf
bound
stc
cwtl
push
inc
lock
sub
scas
fs
xor
push
lcall
sahf
mov
fildl
jo
push
daa
test
pop
mov
push
ret
bound
and
out
fnsave
adcl
clc
outsl
push
pusha
and
test
jg
mov
jmp
out
popa
adc
mov
stc
hlt
pusha
inc
mov
enter
jae
inc
jl
ret
or
add
pop
adc
scas
fcompl
jge
negl
mov
add
in
xchg
and
inc
dec
mov
fnstsw
popf
jnp
popf
push
push
inc
mov
dec
sbb
mov
inc
cmp
stos
dec
in
pop
jmp
jp
iret
out
ja
cs
lret
je
or
xchg
arpl
movsb
xchg
inc
push
stc
cmpsb
mov
je
movsl
nop
adc
sbb
arpl
fiaddl
repnz
test
add
rcrl
xchg
in
mov
xchg
data16
jnp
test
jbe
pop
mov
cltd
push
stc
fidivrl
lds
pop
in
sbb
stos
in
in
gs
pop
shlb
jnp
sbb
lret
cmp
lods
sbbb
and
popa
incl
pop
add
outsb
lds
jmp
xchg
sub
sub
xchg
hlt
mov
pop
std
stos
inc
xorb
loopne
mull
add
pushf
out
and
fdivl
lret
shr
push
add
push
into
jbe
cmp
loopne
mov
ljmp
jne
push
mov
fbld
jp
mov
mov
xor
call
in
arpl
or
enter
xchg
push
mov
scas
aam
lcall
hlt
ficompl
jmp
pop
lock
xlat
xchg
push
sub
jmp
in
cmpsb
cltd
or
gs
sbb
dec
sbb
cmc
lods
lock
jge
add
mov
fs
daa
lods
sti
loop
ror
insb
push
mov
mov
aaa
call
insb
pushf
dec
imul
xor
adc
loop
cwtl
cmp
fwait
jmp
mov
xchg
imul
pop
mov
or
les
mov
fwait
mov
sbb
jp
aad
lret
add
mov
push
dec
mov
cmp
push
cli
add
lds
jno
imul
mov
enter
xchg
push
sbb
dec
ss
mov
push
xor
inc
xor
mov
add
sub
pop
or
fcmovnb
movsl
sub
mov
mov
mov
dec
sbb
stc
fisttps
lcall
cmc
pop
das
lods
jno
fdivp
push
mov
pop
inc
das
in
cmp
rclb
xchg
jns
fistl
dec
add
push
push
and
ret
mov
bound
jae
stc
adc
jmp
mov
ret
mov
cmpsl
ljmp
daa
mov
rcrb
xchg
loop
test
aaa
je
roll
nop
sub
xchg
and
gs
dec
and
mov
pop
adc
xchg
fisubrl
add
sub
scas
dec
lds
outsb
aad
xchg
cmp
mov
out
dec
cmc
dec
scas
data16
xchg
pop
xchg
xor
adc
inc
fwait
int3
push
scas
js
jno
lcall
cli
pushf
popf
jge
pop
imul
out
imul
cmpsb
test
xor
or
aam
fwait
push
mov
repnz
cld
xchg
mov
cs
adc
leave
daa
test
je
and
push
jb
aam
pushl
xor
mov
pop
shr
std
outsl
das
sarl
jne
xlat
in
cmp
push
lods
xchg
loope
lds
adc
cmp
je
lods
mov
cs
fldenv
mov
inc
sub
jl
test
or
jae
fadds
mov
xchg
mov
push
and
ljmp
adc
mov
dec
cmp
push
dec
xchg
rol
loope
test
add
jl
test
faddl
fistpll
xchg
inc
jle
inc
push
mov
mov
roll
cld
mov
cmpsb
fnstcw
mov
jb
imul
mov
frstor
icebp
xor
push
movb
imul
cli
mov
mov
pop
push
into
add
pop
out
cs
cwtl
jno
push
pop
jmp
inc
orb
push
scas
mul
inc
jns
jecxz
push
inc
mov
sub
xchg
mov
imul
loop
ss
sahf
out
ljmp
icebp
sbbb
jp
mov
jns
add
xor
sbb
cwtl
lcall
add
xchg
pop
pop
arpl
pop
insl
out
mov
sbb
or
sub
mov
call
mov
jo
outsb
xor
es
into
clc
cmp
cltd
pop
aaa
ljmp
adc
xor
cld
mov
xchg
aad
lcall
inc
lcall
jg
sbb
stc
add
repnz
pop
sub
lret
cmc
and
mov
mov
push
mov
xchg
adc
lea
in
loope,pt
rclb
add
add
pop
add
ror
or
test
jmp
add
fldt
jle
cmpsl
insb
cs
dec
sbb
ret
out
mov
xor
shlb
mov
or
loopne
adc
inc
jp
mov
push
dec
xor
std
mov
cmp
adc
pop
sub
sbb
sbb
add
sub
imul
mov
stc
push
cmp
ret
fxtract
ds
sahf
dec
lods
lock
lods
mov
imul
or
test
negb
nop
jne
sbb
adc
daa
mov
cmp
add
push
adc
mov
pop
scas
idivl
not
xchg
outsl
jge
arpl
xor
dec
sti
outsl
pop
out
pop
pop
or
cmp
in
or
mov
fmull
add
popf
add
mov
xchg
pusha
lods
dec
and
ret
rcl
jns
ffree
sbb
dec
dec
mov
ffree
sub
push
insb
call
negb
nop
mov
cwtl
mov
and
movsb
inc
xor
lock
sbb
xchg
and
je
mov
sbb
movsb
rclb
cmpsl
loop,pn
sub
push
ljmp
mov
fwait
clc
arpl
add
mov
and
mov
loope
das
xchg
leave
stos
inc
fcomip
into
int3
notl
aad
in
dec
mov
cmpsb
dec
nop
sarl
push
pusha
stos
mov
and
cmp
loopne
xor
dec
mov
call
lcall
nop
ja
clc
xchg
dec
testl
and
es
sub
sub
jo
add
and
add
xchg
repnz
xor
push
aad
and
icebp
or
cmp
shrl
add
cmp
sub
cmp
leave
fiaddl
lret
leave
leave
jle
loop
fcmovu
and
gs
sbb
lahf
les
push
pop
int
into
inc
sub
add
divl
mov
stos
dec
push
loop
in
adc
mov
ret
mov
loope
mov
cmp
stos
in
aam
stc
and
mov
lods
adc
mull
inc
insl
mov
mov
pop
mov
push
ja
repz
je
in
xor
and
pop
ja
push
flds
aaa
add
lods
sbb
add
sbb
inc
xor
dec
decl
and
jno
xor
or
stc
sub
out
rcr
lods
es
push
pop
pop
popa
shll
into
lock
push
add
mov
xchg
mov
inc
mov
out
stc
sti
mov
adc
dec
aas
push
sub
jb
pusha
add
jne
and
popl
mov
and
xor
lock
jb
pop
out
xor
cmp
popa
out
inc
jmp
dec
into
add
xor
fs
adc
out
dec
mov
inc
shlb
sbb
xchg
lea
test
push
xor
sub
fucomi
jge
fs
push
push
xor
imul
movsl
xchg
enter
mov
push
xchg
orl
repnz
cld
outsb
add
cmp
or
sbb
pop
pop
incb
sub
xchg
jmp
jnp
pop
repnz
repnz
mov
pop
adc
sbb
sarb
sub
iret
daa
call
jno
or
xchg
xchg
push
ret
mov
or
cmp
lods
mov
loopne
cmp
ljmp
ljmp
jecxz
repnz
push
hlt
shl
jbe
xchg
sub
in
mov
jno
or
pop
call
push
xchg
mov
push
jo
dec
out
sub
xchg
jmp
xlat
daa
sbb
std
or
inc
and
repz
in
xlat
sarb
roll
int
pop
movsb
mov
scas
jp
cmp
inc
ficoms
out
push
lods
sahf
cmpl
mov
cmpb
popa
ljmp
test
je
iret
unpckhps
cmp
mov
push
hlt
iret
push
cmp
dec
rcrb
jl
cmp
movsl
std
cld
push
std
add
not
inc
daa
insb
inc
push
xor
out
and
cmc
arpl
mov
call
in
mov
push
insl
adc
push
mov
push
inc
mov
aaa
mov
inc
out
push
loop
stc
jge
jmp
loopne
fidivs
inc
fwait
in
jae
cwtl
ficomps
pop
incl
arpl
jne
or
imul
sbb
push
cmp
dec
pushf
push
push
pop
xchg
aas
push
mov
xor
push
adcb
xor
push
push
dec
pop
xchg
in
sar
add
inc
jle
add
mov
fnsave
push
push
cmp
cmp
std
int
mov
testb
xchg
pop
sub
or
pop
imul
test
jne
xor
in
dec
pop
inc
fstps
ljmp
adc
mov
xor
cmp
jle
and
enter
das
xor
pop
bound
pop
imul
cmp
mov
mov
push
adc
stos
je
mov
shlb
popf
decl
cmp
pop
loopne
rorl
enter
jmp
xor
mov
scas
iret
stos
sbb
mov
or
out
les
arpl
orb
xor
pop
std
mov
push
arpl
fs
jmp
or
out
jne
jmpw
pop
fprem
mov
cmp
aad
xor
int
lods
divb
dec
call
sbb
sub
and
dec
fcomip
test
test
in
sub
and
pushf
filds
rorl
mov
push
push
andl
dec
mov
les
xchg
ljmp
hlt
jl
xlat
ret
jmp
ret
ss
test
ud2
mov
push
jae
pop
int3
je
mov
loopne
popa
in
cltd
sbb
cmp
int
loope
lods
repz
or
arpl
lahf
popf
repz
insl
negl
fisttpl
adc
cmc
cmp
mov
subl
jmp
jl
shll
outsl
jns
outsb
xor
inc
adc
aam
leave
xlat
push
pusha
push
cli
clc
cmp
mov
loop
xchg
lods
outsl
adc
lahf
lods
shrl
loope
sbb
ror
mov
es
mov
mov
cmp
cmp
fs
popf
jo
ss
and
push
or
in
je
push
xchg
pusha
cltd
inc
jmp
add
inc
inc
adc
rcll
int3
inc
jbe
add
insb
jnp
cmp
mov
mov
push
movsl
sti
addb
xor
test
scas
hlt
fmulp
add
adc
sti
adc
jmp
leave
lret
aaa
lahf
pop
xchg
fwait
jmp
mov
push
shrl
and
movsb
sub
jl
mov
pop
nop
test
fnstcw
sbb
jmp
in
push
push
out
xchg
out
jl
or
inc
insl
sub
adc
sbb
and
fwait
xchg
lcall
pusha
testl
lods
xchg
dec
sti
outsb
dec
inc
cmp
test
mul
sub
inc
imul
adc
ja
adc
out
sbb
fstpt
adc
int
cmc
dec
or
pop
sub
xchg
cmp
push
cwtl
out
jno
std
in
pop
sahf
fdivrs
outsl
test
sti
stos
mov
mov
xchg
push
push
daa
movsb
les
imul
adc
jbe
jp
jecxz
push
xor
add
jns
sub
mov
inc
add
enter
xorl
icebp
pop
mov
popf
scas
lret
push
add
inc
mov
gs
mov
or
jg
mov
pop
or
lret
loopne
xchg
mov
subb
pop
loop
scas
pop
mov
sarl
mov
shl
xchg
jge
jg
push
cmp
xor
aaa
test
mov
lods
xchg
jne
or
adc
arpl
gs
cmc
xor
sub
les
xorl
nop
mov
mov
push
cmp
xor
or
mov
addl
jl
inc
or
push
out
outsl
in
cmpsb
dec
push
int3
add
leave
scas
mov
xchg
lea
outsl
arpl
mov
add
fisubs
pop
jno
mov
mov
movsb
js
stos
paddsw
mov
pop
pop
inc
insb
jg
negl
movsb
in
cmp
sar
xchg
xchg
iret
add
scas
jne
lea
dec
ja
pop
mov
aaa
test
out
add
mov
xchg
sar
into
rcl
daa
cmpsl
lds
sub
je
inc
sbb
loopne
fisttps
pop
mov
xchg
jbe
dec
aad
inc
outsl
mov
in
sub
sarl
cmp
fisubl
pop
insb
cltd
mov
adc
ret
inc
adc
scas
scas
in
das
insl
and
outsl
pusha
or
std
mov
cwtl
outsl
lea
stos
inc
jmp
jl
fisubl
outsl
inc
test
lds
stos
les
dec
push
call
stc
mov
negb
rorl
mov
add
sbbl
cmp
fnstenv
bound
pop
cmp
xor
push
ret
mov
adc
mov
cmp
jle
ljmp
rorl
rolb
ret
pop
push
add
test
stos
dec
push
mov
scas
jb
push
mov
or
jo
add
xchg
mov
rcrb
out
in
scas
sbbb
inc
js
imul
xchg
sub
lahf
xchg
js
sub
cwtl
adc
out
rorl
mov
repnz
xchg
dec
cmpsl
push
sub
decl
ja
mov
xchg
xchg
add
in
cmp
movsl
loopne
sahf
and
jecxz
in
mov
mov
pop
stc
out
push
lahf
pushl
mov
xorb
mov
inc
ljmp
loope
xchg
dec
xchg
mov
jmp
fnstsw
sbb
sbb
cmp
sbb
insl
addl
loope
push
xchg
pop
popf
cltd
mov
decb
sbb
xchg
rcr
fnsave
out
aam
or
std
das
push
mov
int
pusha
xor
push
test
ljmp
sti
lods
pop
ret
xor
cld
ret
push
in
arpl
testb
fstps
fidivl
pop
fidivs
mov
dec
jecxz
pop
adc
ret
or
mov
push
mov
loope
movsb
repz
out
ficomps
or
push
insb
pop
pop
sbb
daa
mov
outsb
in
sub
and
add
scas
xor
ljmp
in
inc
arpl
mov
pushf
test
cmp
ss
rcrb
push
mov
clc
cld
mov
mov
repnz
rclb
mov
jp
push
dec
loope
out
popa
lods
sbb
jae
inc
mov
stos
push
lahf
xor
aad
and
and
dec
fcmovbe
scas
out
or
adc
arpl
mov
out
scas
xchg
leave
pop
je
fnstenv
pop
xchg
popf
jbe
push
lea
imul
dec
inc
lods
sbb
imul
lods
mov
call
outsl
pop
inc
imul
loop
mov
rcrl
and
leave
pop
dec
cmp
push
push
bound
pop
test
data16
or
jb
js
push
xor
mov
add
les
push
sbb
pusha
and
lret
push
out
lret
dec
in
or
imul
cmc
ret
mov
ljmp
jl
stc
rclb
mov
sub
pop
mov
cmp
xchg
mov
negb
inc
sti
mov
loopne
sbb
lret
sub
dec
cmpsb
inc
ss
rorb
aas
lret
or
aam
pop
pop
es
mov
jnp
and
or
fs
lahf
and
dec
out
std
cmpb
into
insl
js
cmp
out
cs
ror
outsl
jbe
fs
out
jmp
sub
out
push
jno
call
mov
push
shrl
jmp
xchg
mov
xchg
test
mov
out
xorb
daa
or
test
adc
add
rcrl
jle
xchg
fcom
xlat
pop
inc
scas
sub
xchg
std
jl
pusha
jbe
outsl
mov
nop
mov
adc
movsl
ljmp
push
insl
xor
push
sub
inc
mov
fistpl
js
insl
lret
inc
lret
and
je
in
loope
dec
inc
xchg
gs
scas
push
mov
cli
ret
push
pop
negl
jge
cli
and
jno
rclb
sbb
movsb
aas
push
shl
mov
aad
aas
jbe
push
xchg
in
inc
inc
jo
mov
clc
xchg
sub
adc
and
ds
fs
aas
push
add
or
jge
jno
mov
pusha
aaa
ljmp
push
int
ret
andb
adc
leave
out
ret
roll
in
jbe
push
inc
add
cmp
movsb
add
add
push
call
cld
xchg
inc
pop
inc
pmulhuw
call
push
cmpsl
xchg
pop
les
test
imul
xchg
test
mov
inc
mov
outsl
sbbl
jge
daa
and
stos
mov
addr16
addr16
fimull
adc
sub
push
sub
into
fisttpll
outsl
out
cld
inc
sbb
add
push
fbstp
popf
fisttpll
lcall
rorb
sbbl
rcll
aas
pop
stos
push
xchg
roll
in
ret
je
jge
enter
mov
fwait
mov
mov
lods
jnp
dec
mov
dec
clc
jae
sub
pop
adc
out
jecxz
ret
out
cmpsb
arpl
aas
movsl
mov
push
scas
repnz
sub
sub
ret
aad
jl
inc
cwtl
sub
mov
sub
lock
mov
inc
xchg
pop
mov
mov
lea
and
cmpsl
mov
xchg
mov
cmpsb
inc
xor
sub
sahf
fwait
data16
popf
cs
xchg
lods
add
cli
dec
sbb
mov
mov
pop
fdivrl
imul
xor
in
add
aad
jecxz
cmp
loope
xchg
or
xchg
xor
pop
rcrb
mov
fldt
and
sub
xchg
andb
repz
hlt
add
jecxz
mov
rolb
fs
xor
xor
mov
test
jno
jb
adc
xor
or
mov
daa
and
addr16
fs
out
insl
fnstsw
dec
dec
cmp
xor
mov
dec
add
aad
test
fdivrl
dec
daa
mov
and
sub
inc
adcl
sub
adc
jno
sub
xor
fwait
and
inc
cmp
daa
pop
into
stos
inc
xor
add
jns
jnp
stos
xchg
inc
lea
mov
mov
mov
cmpsl
cwtl
arpl
and
lds
lds
aas
iret
in
mov
negl
jb
movsb
lret
imul
and
cltd
cmpsl
or
imul
mov
or
loop
comiss
mov
sbb
bound
and
cmp
rcrb
pop
adc
adc
lret
or
gs
fsubrs
inc
push
call
in
andb
mov
cwtl
dec
cmp
mov
sti
in
aad
jecxz
scas
and
mov
pop
xchg
and
enter
stos
in
ret
mov
cmp
jge
or
push
xor
pop
xchg
arpl
sahf
mov
fwait
fdivs
call
fwait
mov
ljmp
push
and
shrl
cmc
inc
imul
or
aad
loope
xor
mov
in
cltd
in
mov
xor
inc
jp
lret
lahf
fistl
test
test
mov
jae
cmp
cmp
arpl
push
aad
arpl
leave
mov
hlt
push
fsubrl
inc
fisubrl
xchg
xor
or
xchg
jg
and
jbe
or
pop
rorl
mov
and
test
loopne
mov
mov
popf
lahf
sub
xor
pop
int
cli
mov
outsb
xor
inc
loopne
or
mov
xor
hlt
mov
out
arpl
mov
xor
xchg
scas
stc
xor
incb
dec
outsb
stos
mov
mov
aad
cmc
dec
clc
shl
fwait
in
pop
fsubs
sti
insl
and
push
adc
into
mov
dec
cld
pop
jne
mov
test
jnp
mov
adc
mov
ljmp
jno
fwait
icebp
xchg
inc
arpl
inc
fcmovnu
jnp
xchg
adc
xor
push
js
and
xlat
cmp
in
mov
mov
mov
xor
mov
dec
sbb
add
add
int3
dec
xchg
mov
push
icebp
xor
mov
lds
xchg
xchg
ds
mov
mov
add
jecxz
sarb
or
cmpsl
popf
xchg
jg
and
xor
mov
imul
repz
mov
jne
jbe
loopne
call
int3
and
insl
inc
mov
mov
movl
mov
fildl
das
xlat
pushf
mov
es
popf
sub
adc
movsl
and
add
add
enter
dec
je
mov
loopne
lock
hlt
and
and
jp
or
fwait
mov
mov
push
daa
sub
out
pop
subl
lds
addr16
ret
lods
or
push
jl
xchg
addl
adc
push
xor
cmpsb
lret
cmp
dec
mov
inc
jmp
rolb
pop
dec
or
mov
jmp
dec
xchg
or
cmpsb
cmpl
cltd
scas
pop
insb
and
xor
roll
pop
add
mov
popa
lret
push
mov
jns
imul
inc
or
test
mov
dec
pop
int
aaa
shlb
mov
inc
cmp
loopne
mov
mov
jb
cmp
popa
inc
jno
aam
int3
mov
fcmovnbe
lods
cmp
shll
mov
repz
add
insl
cmpsl
inc
sbb
ret
push
cmp
cmpsb
mov
xor
inc
dec
jbe
pop
mov
lock
test
addr16
test
dec
ss
xchg
and
xchg
pop
add
inc
jbe
cmpsl
lock
mov
fimull
imul
sub
cmp
xchg
scas
inc
leave
xchg
cmp
inc
push
es
jmp
fstps
int3
sub
int
mov
cltd
sub
xor
push
mov
xchg
stos
pop
aaa
jge
xchg
pop
pushl
add
pop
or
insb
ja
cwtl
adc
fdivl
xor
mov
out
in
xchg
xor
fs
outsb
in
cs
imul
mov
push
pop
dec
mov
pop
aad
and
dec
leave
hlt
stc
cmp
andb
mov
inc
or
jle
inc
movb
push
inc
mov
test
jae
sti
mov
jne
stos
jmp
loopne
stos
mov
arpl
pop
mov
cli
push
leave
mov
push
dec
imull
out
int3
adc
mov
je
xor
out
lock
pop
mov
pushf
faddl
ffreep
pop
pop
pop
rolb
into
cmpl
inc
dec
pop
xor
sbb
jmp
jne
int
sub
testl
or
rol
or
adcl
imul
sub
adc
std
fsub
shll
int3
pop
fs
pop
in
cli
xor
insl
insb
into
xchg
loop
cmp
add
in
pop
sbb
mov
mov
shll
push
mov
shrb
and
xchg
xchg
popf
adc
mov
add
sbb
mov
pop
into
fldt
xchg
fs
or
and
push
movsb
cmc
push
mov
mov
mov
out
pop
and
add
aas
mov
jb
jp
lods
leave
lcall
add
loopne
int3
lahf
pop
adc
and
cltd
das
and
xchg
cli
aas
shrb
jae
fdivrl
lock
lahf
adc
mov
popf
sub
das
and
mov
movsb
inc
xchg
pop
jmp
mulb
hlt
xchg
mov
pop
mov
jl
sbb
add
cmp
iret
cld
orl
mov
in
arpl
adc
dec
stos
fimull
leavew
ja
mov
movsl
adc
xor
ud1
jb
ret
add
int
sbb
inc
dec
faddl
outsl
jb
adc
mov
les
movsb
iret
loop
fs
fidivrs
mov
movsb
pop
fisubrl
loop
mov
xchg
cmpsb
hlt
and
scas
dec
addl
movsl
leave
push
pop
adc
mov
mov
mov
aam
nop
mov
das
ficomps
or
vmaxpd
stos
add
rcrb
mov
sub
lea
ss
bound
cltd
aas
fstpl
sub
aad
push
and
pushf
jb
adc
push
add
mov
cld
test
push
xchg
xchg
dec
mov
popf
cmp
inc
or
outsb
sbb
popf
lahf
inc
sub
mov
adc
mov
fnstenv
xchg
bswap
pusha
xchg
jb
scas
clc
test
in
push
in
add
sbb
les
inc
nop
fwait
arpl
push
out
test
ret
xor
ret
les
push
cmp
dec
lods
xchg
xor
enter
test
lea
out
out
pop
scas
adc
negl
lods
adc
repnz
lahf
outsb
test
popa
clc
mov
xchg
mov
mov
fcmovnu
xchg
fildl
cmpb
rcrl
mov
stc
xchg
clc
pop
lods
xchg
mov
mov
sar
mov
bound
call
mov
sahf
daa
in
dec
sub
jg
inc
jo
out
push
rcr
out
jbe
add
xor
shll
mov
mov
repnz
fimull
and
inc
lods
pushw
fldl
mov
cwtl
gs
ds
cmp
add
xchg
loop
je
pop
sbb
or
jbe
pusha
jp
pop
negb
cmpsl
mov
ret
push
or
insb
orb
cltd
addr16
gs
aad
mov
dec
xchg
mov
jb
mov
imul
cmp
jmp
stos
add
pop
in
in
push
mov
jle
rclb
mov
adc
jne
in
mov
adc
mov
lods
adc
dec
jae
and
cmp
adc
add
test
fnstsw
popf
adc
cmp
lret
mov
xor
adc
fdivs
test
mov
test
lret
popa
hlt
fiadds
dec
push
shll
xchg
jmp
std
es
nop
xchg
push
cld
adc
lret
sbb
test
xchg
xchg
xor
and
and
mov
hlt
and
pusha
mov
push
popf
xchg
movsb
out
shll
daa
or
push
xchg
and
stc
and
bound
adcb
mov
adc
call
adc
in
jne
outsb
outsl
popf
xor
lds
jae
arpl
xchg
cmpsb
and
icebp
push
out
and
sbb
out
inc
stc
shl
adc
push
repz
adc
jg
jecxz
inc
imul
data16
cwtl
lret
push
shr
dec
xchg
fistl
push
loopne
or
pop
outsb
ficomps
lahf
fs
mov
push
push
loop
sub
aad
test
add
pop
addr16
fistpll
push
test
and
out
sbb
popf
or
jmp
push
sub
sub
push
mov
ret
sbb
jae
cmp
sti
fwait
mov
aad
rclb
lock
inc
sbb
sub
cmp
lds
pusha
xor
mov
add
jmp
stos
add
aad
in
mov
sbb
mov
sub
mov
mov
add
inc
call
addr16
mov
sti
lods
sbb
icebp
aaa
lret
adc
insb
les
in
mov
hlt
out
mov
sahf
mov
sbb
pusha
jne
fnsave
adc
or
outsb
jbe
daa
shll
mov
fs
cld
xchg
mov
push
stos
mov
lock
in
sbb
cmp
jbe
mov
xchg
xchg
int3
out
cmp
jl
shll
push
mov
iret
jns
mov
push
incb
enter
sbb
mov
mov
sbb
into
test
into
mov
fidivs
lahf
scas
mov
pop
cmc
push
ss
lret
and
scas
push
fnstcw
and
inc
cmp
and
push
lea
mov
pop
das
sub
sub
mov
adc
lcall
out
leave
rcll
add
pushf
das
inc
out
jge
xor
dec
xchg
push
xchg
fists
cmp
ret
fwait
pop
stc
scas
add
outsl
pop
inc
jge
xor
mov
arpl
push
pop
out
pop
call
mov
xchg
sti
dec
incl
test
push
mov
and
or
pop
popf
mov
ljmp
xlat
sub
mov
push
adcb
sbb
jge
cld
pop
jb
mov
dec
je
jns
dec
out
dec
mov
dec
loope
sbb
pushf
jbe
dec
mov
xchg
sti
mov
outsl
lret
cltd
jb
dec
xchg
add
das
in
jbe
cmp
and
xchg
enter
lods
mov
in
arpl
cld
test
enter
cs
pop
xlat
fistpl
into
mov
addl
sbb
mov
sarb
adc
push
inc
stc
das
and
gs
add
cltd
adc
aaa
ss
jb
cmpsl
push
cmp
loop
cs
mov
pop
sub
add
mov
stc
push
fsub
mov
sbb
das
xor
push
pop
pushl
clc
mov
cwtl
xlat
ds
mov
les
mov
ret
loope
add
adc
scas
popa
ljmp
push
nop
inc
xlat
fsts
aaa
sahf
es
icebp
mov
call
xchg
jo
jge
das
sub
mov
push
filds
xchg
ficoms
and
add
xchg
aam
hlt
or
mov
int3
es
mov
dec
xchg
test
push
inc
cmp
arpl
adc
push
sbbb
test
inc
iret
idivl
call
mov
lock
movsl
cli
bound
in
arpl
add
fwait
mov
mov
push
test
mov
mov
cmp
adc
ror
frstor
mov
adc
jne
xor
lea
add
or
scas
and
dec
mov
lret
hlt
sub
out
inc
add
mov
mov
loop
jb
sbbb
push
loope
lds
sbb
fisttpll
into
lahf
push
pop
adc
sahf
cmpsl
add
inc
fbld
mov
jle
jmp
inc
in
addr16
in
push
lret
fs
pop
push
jo
mov
in
out
in
jmp
shll
dec
mov
jo
adc
xor
push
stos
jae
or
imul
cmp
and
gs
ja
rolb
dec
aaa
and
daa
fmull
call
jmp
mov
jge
lods
fcmove
movsl
mov
es
jecxz
test
lret
adc
inc
push
or
nop
pop
mov
xchg
jge
xor
or
ljmp
movsb
popf
xchg
jns
mov
jge
push
lret
fidivl
bound
cs
stc
mov
mov
test
repnz
xor
int
add
hlt
push
jge
mov
movsl
push
jnp
fildll
inc
push
mov
in
popf
loope
xchg
mov
lcall
xchg
push
jge
lcall
or
add
hlt
fbld
cmp
dec
push
mov
leave
jmp
mov
jbe
xor
fs
outsl
rclb
jne
movsl
ds
popf
cmc
shrb
dec
push
add
outsb
stc
push
loopne
inc
pop
out
shl
or
fimull
leave
mov
shl
and
pushf
lock
outsl
mov
inc
and
mov
mov
dec
sub
ljmp
in
push
and
adc
and
or
pop
lcall
adc
lcall
and
stos
loop
dec
sbb
sub
sub
cmpsb
aaa
mov
mov
mov
pushf
outsb
lahf
dec
pop
sub
xchg
xchg
or
orl
leave
mov
sbb
ds
xchg
dec
mov
fiadds
add
subl
pusha
jnp
mov
jecxz
mov
std
in
in
pop
sub
sub
dec
icebp
mov
inc
sbb
lods
test
sbb
jne
fsubr
jb
movsl
in
cmc
fsubrl
jl
cmp
sbb
data16
and
clc
cs
jmp
sahf
dec
leave
test
jl
mov
push
and
xchg
cli
loope
mov
mov
inc
cmp
xchg
pop
repnz
pop
jl
fildll
add
xor
dec
sub
adc
ja
pop
testl
inc
int3
mov
pop
mov
jmp
pushf
sub
fcmove
addr16
lds
jmp
push
cmpsl
out
inc
jns
into
pop
shll
mov
mov
loop
pop
adc
in
movsb
movsl
push
xchg
in
sbb
mov
push
ret
push
flds
lds
out
mov
fwait
ja
or
into
sbb
mov
pop
cmc
arpl
leave
jmp
stc
xchg
or
mov
jne
arpl
loopne
jb
aaa
mov
mov
mov
cmp
sub
sub
sahf
movsb
rclb
mov
in
sub
adc
sbb
push
out
ret
mov
leave
push
push
mov
cltd
xor
dec
pop
inc
mov
dec
repnz
xchg
inc
and
jne
lcall
inc
sbb
stos
sysret
dec
leave
jecxz
aad
ficompl
sbb
push
ljmp
xor
pusha
mov
mov
test
stc
mov
les
sbbb
mov
add
and
cmp
xor
mov
sbbl
pusha
mov
leave
mov
mov
negl
inc
push
and
aaa
dec
scas
lock
in
test
daa
test
ja
arpl
dec
mov
loopne
adc
mov
out
xor
adc
jp
mov
bnd
mov
cmp
push
inc
scas
cmc
mov
or
sarb
cld
xor
inc
and
mov
or
push
jecxz
test
xor
lret
jle
cmpsb
je
fidivrs
sbb
in
js
loope
andb
lods
mov
xchg
mov
adc
cmp
xchg
mov
mov
or
test
outsb
call
cmp
xor
rclb
or
jle
mov
in
jg
xor
push
and
fstps
jbe
lods
je
dec
push
mov
lcall
and
sahf
insl
sbb
xor
inc
call
mov
rclb
out
in
add
rol
sub
xchg
inc
xlat
out
mov
mov
nop
inc
or
ret
adc
sbb
dec
movsb
cmc
stos
mov
test
add
popa
mov
jns
and
or
xor
pop
stos
mov
inc
pop
sbb
std
xchg
cmp
jmp
add
push
ret
cmp
mov
out
inc
mov
dec
mov
mov
icebp
adc
cmp
std
pop
inc
sbb
cltd
loope
push
adc
rcll
daa
cmp
int
or
cs
scas
mov
lods
inc
cwtl
pushaw
call
xchg
cwtl
hlt
mov
adc
outsb
add
rclb
pslld
orl
movsl
addr16
adcb
stos
mov
dec
outsl
jmp
stc
ret
scas
mov
out
hlt
test
jno
jmp
in
pop
cld
inc
and
dec
jbe
stc
std
into
xlat
dec
pusha
call
pop
repnz
or
lahf
mov
decb
es
loope
arpl
add
imul
inc
jge
adcb
or
mov
int3
lret
add
pop
pop
repnz
bound
into
imul
xchg
in
cld
xchg
sbb
push
lods
inc
daa
mov
dec
and
lds
xchg
push
add
mov
pop
ja
xchg
mov
repz
jo
pop
pop
subl
sbb
pop
stos
enter
pop
mov
pop
call
inc
xlat
jns
cmpsb
fisubs
pop
jbe
out
movsl
add
int3
sub
incl
cmc
dec
dec
adc
sbb
pusha
movsb
lods
xlat
xchg
sub
sbb
push
fadd
repz
ja
inc
ret
xor
push
cmp
xor
jae
fcmovnu
lds
xor
xchg
cmp
pusha
dec
add
dec
xchg
add
xchg
sbb
enter
repnz
cmpsb
mov
jo
cwtl
dec
out
mov
and
adc
into
shl
repz
imul
push
push
push
arpl
jbe
dec
into
xlat
scas
or
imul
cs
popf
ss
sahf
cmpsl
jns
adc
and
inc
call
lea
mov
insb
fistl
icebp
push
scas
dec
sar
and
mov
repz
nop
xor
in
push
sbb
mov
fstpt
pop
adc
orl
dec
stc
or
lret
mov
in
jp
ret
mov
shrl
lds
out
rcll
push
push
cmp
in
cmpsb
or
outsb
pop
rcll
hlt
mov
call
mov
jbe
call
add
jecxz
push
stos
ret
or
out
arpl
xchg
pop
imul
lahf
pop
xchg
out
mov
mov
push
xor
dec
inc
out
leave
lahf
xor
std
movsl
mov
iret
mov
pop
mov
pop
dec
xchg
jne
xchg
sub
shll
or
cmc
or
pop
lret
or
xchg
pop
movsl
fwait
pop
dec
test
lret
rcrb
jge
mov
add
stc
in
icebp
ljmp
daa
scas
xchg
test
das
and
loope
xor
repnz
sarl
stc
inc
leave
in
iret
sub
mov
cmp
je
or
fldt
fldenv
jb
orb
adcb
shrb
js
sbb
fwait
inc
sub
push
mov
out
dec
mov
loop
sub
push
ds
addl
imul
sub
sub
movsb
bound
mov
push
div
xchg
lods
fwait
cmpsl
enter
or
hlt
test
xchg
cld
fbstp
and
loopne
cli
or
adcb
push
push
fisttpll
scas
pop
shl
mov
adc
mov
stos
rorb
icebp
add
push
sbb
inc
xlat
jae
jmp
sbb
ljmp
xor
and
mov
shrl
mov
mov
xchg
lret
lea
adc
mov
inc
add
or
jns
testl
imul
mov
inc
mov
lahf
repnz
mov
test
lret
pushf
adc
ja
outsl
aam
sti
cmp
enterw
pop
movsl
cmpsb
mov
stc
inc
add
out
enter
divl
mov
mov
sub
and
push
lods
aad
sub
xchg
mov
das
push
xorl
imul
int3
outsl
scas
leave
shlb
notl
cmpsb
push
or
sbb
mov
mov
shrl
sbb
addl
mov
xchg
pushl
pusha
add
jp
sub
test
loopne
adc
negb
cmp
mov
xor
jnp
test
and
push
pop
bound
mov
dec
mov
xor
enter
pushf
and
notl
scas
mov
xchg
les
jle
xlat
in
ja
lea
lock
push
inc
xchg
dec
movsl
inc
cmp
adc
xchg
push
cwtl
lods
nop
cmp
push
paddd
aad
sbbl
xor
mov
pop
add
jmp
divb
imul
lret
xchg
sub
rorb
in
int
out
jmp
shlb
pushl
scas
out
outsb
or
mov
out
nop
sub
push
pop
lea
dec
fwait
adc
rcrb
out
fst
inc
shll
cmpsb
stos
sbbb
dec
outsl
push
dec
push
xchg
bound
shrb
cmp
test
cmpsb
test
repnz
push
inc
cmpsb
mov
jecxz
mov
movsl
hlt
add
mov
cli
cmpsl
repnz
js
jl
xor
mov
inc
adcl
adc
add
mov
inc
pop
sub
loop
inc
cmp
jae
xlat
sbb
jno
dec
push
mov
cmpsl
in
sbb
test
mov
adc
into
xor
mov
popl
in
outsl
or
mov
shl
inc
inc
pusha
and
and
adc
mov
imul
mov
mov
aaa
cmpl
outsl
and
sub
and
mov
dec
aam
xchg
rcll
cmp
mov
and
mov
jne
in
adc
jne
gs
inc
scas
push
mov
aad
or
int
pop
push
scas
xchg
fsubrs
or
repz
mov
inc
loop
xor
sub
xchg
sbb
incl
ds
shr
cmpsl
sbb
push
jecxz
xchg
outsb
push
sahf
and
dec
or
add
lret
movsl
push
arpl
adc
jbe
push
scas
xor
out
outsb
ficomps
lods
adcb
sahf
fwait
movsl
push
mov
in
and
pop
fstl
out
loopne
je
outsl
cmpsl
xor
push
fimull
add
dec
roll
bound
adc
ss
xchg
out
das
pop
fnop
and
fbld
or
stos
mov
lahf
push
repnz
pushl
xchg
es
fstp
xor
pop
dec
pop
leave
mov
pop
inc
sub
cmpl
movsl
inc
xor
in
outsl
mov
push
stc
imul
or
aas
repnz
cmp
adc
mov
sahf
fldenv
cmp
lea
in
fwait
hlt
add
sbb
xor
int3
add
jg
sub
aas
mov
pop
and
ret
enter
inc
and
mov
jge
in
pop
xor
cmc
jmp
mov
add
jp
lcall
cmpsb
mov
lret
fdivr
in
jg
imul
loope
pusha
xor
int
lcall
jg
fildll
inc
in
shll
inc
aas
into
pop
add
arpl
sahf
pop
jg
mov
rclb
mov
jg
xor
mov
adc
mov
test
pop
fcomps
sub
aas
jl
mov
jl
inc
lret
add
cmp
xchg
push
movsb
dec
push
xchg
pop
inc
stos
rorl
cltd
fimull
inc
cmp
shr
pmullw
loope
bound
adc
and
inc
xchg
lret
or
lock
in
pop
mov
shrb
shl
or
lahf
jne
orb
test
sbb
add
ss
outsb
das
rcrb
into
sbb
loop
xchg
out
cmc
daa
lods
lods
fsubrl
xchg
loope
adc
lcall
mov
ficomps
xor
stos
mov
adc
xor
mov
push
dec
sahf
cmp
dec
ds
cld
add
iret
call
and
sbb
cmp
sub
sbb
cmp
jnp
repz
loop
es
adc
push
mov
or
adc
pop
in
inc
test
xchg
push
xchg
jmp
data16
dec
test
pop
jge
jno
mov
or
inc
aad
cmp
les
add
mov
sahf
mov
push
aaa
mov
xchg
es
lock
xor
jno
fisubs
lods
xchg
in
ss
shrb
pop
cmp
mov
jbe
xlat
testb
fisttpll
pop
fsubrp
mov
scas
xor
pop
movl
rcr
add
loope
testl
das
mov
ja
pop
jle,pn
push
jle
pop
jne
sbb
adc
mov
mov
pop
mov
lea
mov
pop
add
cmp
sbb
jg
jb
adc
out
sub
adc
test
lods
sbb
pmulhw
icebp
dec
dec
pop
shrl
pusha
dec
loopne
pop
xchg
ffreep
sbb
mov
int3
mov
pop
push
movb
add
add
pop
popa
jmp
out
mov
cmp
adc
repnz
cmpsl
cmp
insb
rolb
subb
push
ret
hlt
lods
cmc
xlat
add
out
imul
in
mov
pop
cmpsb
xchg
or
arpl
jne
mov
lea
pusha
das
mov
stc
mov
sbb
ficomps
pop
iret
fnstcw
xchg
mov
dec
inc
mov
or
and
jl
adc
pop
xor
insb
das
pop
jo
pop
and
mov
push
sbb
or
mov
ss
clc
or
jle
adc
cmp
sub
imul
add
sahf
cmp
ret
clc
fcmovnbe
xchg
lods
fsubrp
add
ds
rorl
fs
lods
jp
inc
mov
iret
arpl
pop
mov
cld
and
xchg
adc
push
sti
pop
test
pop
mov
add
in
fs
leave
mov
xchg
fs
test
pop
mov
mov
cmpsl
adc
push
mov
test
push
cmp
mov
outsb
lods
imul
push
mov
clc
jp
push
push
adc
or
push
inc
fistpll
or
mov
leave
xor
xor
dec
mov
add
inc
jns
mov
push
add
movsl
mov
lods
mov
das
sbb
mov
sarl
mov
inc
lds
xor
clc
jne
xor
xchg
loop
adc
rol
pop
pop
in
mov
into
or
fwait
fs
pop
or
ja
push
js
rolb
pop
int3
cli
add
mov
sub
xchg
xor
xchg
xor
shl
jae
cmpb
xchg
pushf
or
inc
cmp
fsubr
clc
mov
sbb
sub
inc
mov
mov
or
mov
push
mov
leave
nop
xchg
int3
fld
shr
pop
mov
xor
mov
inc
pop
cmpsb
mov
push
je
mov
das
iret
sub
roll
mov
cmp
mov
hlt
pop
dec
pop
cmpsb
sub
idivl
jno
sub
sub
dec
or
dec
xor
pop
xchg
inc
das
or
push
hlt
mov
pop
jp
xor
xlat
fwait
push
pop
ss
loopne
nopl
test
push
sub
lret
cmpsl
sbb
dec
and
mov
pop
push
mull
iret
push
test
es
xor
nop
mov
nop
xlat
push
jl
test
rcrb
sub
fcmovbe
mov
jge,pt
imul
clc
xlat
jnp
nop
aaa
fbstp
mov
sbb
dec
jae
xor
aas
mov
mov
cmpsl
jne
into
xor
push
imul
push
xor
mov
inc
fmull
orb
xchg
sbb
mov
test
sahf
push
loope
gs
pop
shll
shll
xchg
fucomi
cmp
xchg
cmp
xchg
push
dec
add
int3
iret
lock
insl
jbe
lds
lahf
dec
push
add
rorb
dec
fistpll
out
fwait
call
mov
or
cmp
ret
pushf
out
sbb
mov
fists
decl
loopne
mov
sub
add
add
xor
in
inc
sub
daa
fcompl
pop
stos
pop
adc
dec
jno
and
inc
loopne
fsqrt
jae
fstpt
fwait
enter
cmp
xor
popf
or
and
rorl
pop
sti
pop
mov
insl
pusha
test
ficoms
inc
push
std
or
cs
mov
insl
aad
and
xchg
xchg
dec
jle
mov
inc
in
sahf
sub
add
out
loop
lret
jmp
xchg
inc
push
jb
xchg
push
pop
adc
push
ds
lods
pop
in
std
repnz
bound
inc
inc
xor
xlat
fidivl
test
mov
pop
mov
xor
lods
call
aas
jle
mov
mov
push
mov
mov
mov
addl
push
aaa
aam
loope
mov
lds
jp
adc
daa
cli
adc
adc
xlat
arpl
or
nop
daa
mov
xchg
cld
daa
mov
in
mov
sahf
mov
sub
in
cmp
jg
movsb
xchg
out
lods
add
jbe
lock
cmc
and
insl
pop
sbb
in
jno
jg
test
fmull
outsl
call
addl
mov
decl
ss
and
repz
subl
xor
and
dec
flds
nop
dec
fildll
mov
cld
test
pop
mov
push
cwtl
pop
leave
iret
aam
cmp
stos
in
scas
mov
jge
jge
insb
mov
mov
inc
jbe
iret
push
repnz
jl
xor
mov
mov
add
call
enter
xlat
test
mov
xchg
pop
pop
loop
xchg
jbe
mov
sahf
out
xor
lret
cwtl
and
movsl
sbb
adc
push
fptan
sbb
xchg
mov
or
xchg
mov
scas
repz
gs
aam
cwtl
bound
pop
jmp
test
mov
mov
scas
xor
dec
mov
mov
lea
jg
fsubp
test
popa
mov
sub
and
xor
and
jp
cltd
arpl
mov
pusha
shll
jb
adc
aaa
call
and
mov
movd
sbb
imul
or
ss
push
stos
les
in
add
aad
enter
or
movsl
inc
add
add
std
jg
add
mov
or
std
and
pop
xlat
jp
pop
or
xchg
ret
adc
mov
test
push
jb
in
inc
mov
xchg
insl
lret
pop
xchg
clc
add
test
dec
pop
xlat
sti
jle
inc
pop
sbb
aam
mov
add
jge
and
pop
lahf
call
lea
push
adc
jl
mov
icebp
adc
cwtl
push
push
mov
imul
std
cmp
cltd
stos
adc
in
inc
mov
rep
and
mov
xor
push
repnz
pop
dec
cmp
lcall
insl
loope
mov
jno
mov
loopne
mov
out
lahf
adc
pop
push
dec
ror
adc
dec
mov
push
inc
push
scas
push
cmp
in
adc
jae
pand
lahf
out
mov
cmp
decb
pop
cmp
mov
mov
and
pop
stc
mov
out
push
rorb
mov
inc
push
push
and
cmovg
mov
or
xor
or
rclb
mov
andl
xor
mov
adc
dec
scas
inc
imul
shlb
insb
clc
mov
pusha
add
pop
xor
hlt
xchg
xlat
mov
pop
and
xor
mov
xor
das
sahf
nop
pop
adc
jg
daa
xor
mov
rolb
mov
xor
adc
subb
mov
pop
xor
and
cwtl
mov
pusha
add
mov
inc
nop
aad
loopne
push
fsubs
pop
sub
push
movsb
mov
out
or
add
mov
sbb
sti
jns
or
pop
push
out
icebp
mov
and
jecxz
arpl
scas
dec
push
divb
or
cmp
mov
hlt
pop
jp
mov
test
sub
aad
cli
inc
insb
xchg
mov
push
adc
fs
mov
outsl
dec
pop
js
fisttpll
adc
pop
dec
ret
adc
fiadds
test
pop
or
punpckldq
add
nop
pop
xchg
outsl
movsl
sub
addr16
fcmovnu
sbb
pop
pop
mov
dec
fsubs
stc
cmpl
sarb
cmp
das
jne
addr16
push
ficoml
push
add
push
push
mov
push
push
cmp
iret
cli
js
push
add
jl
leave
fiaddl
scas
xchg
pop
pop
pmaxsw
pop
cmpsb
xchg
add
daa
and
rol
mov
test
scas
outsl
push
orl
sbb
adc
out
or
imull
aaa
subb
sbb
jg
outsb
pop
sbb
jl
mov
push
adc
mov
push
and
jp
jg
push
ret
jnp
xor
testb
gs
or
pop
into
int3
add
pop
xor
movups
pop
btr
sub
dec
inc
enter
and
pop
and
sbb
stc
sti
mov
orb
ret
jb
xchg
or
cmp
xor
push
mov
sbb
ja
mov
push
dec
lods
and
cmc
outsb
dec
push
andl
js
adc
lods
adc
popa
clc
jo
sahf
stos
cmc
sub
jnp
in
lock
pop
out
iret
insl
mov
fwait
pop
dec
mov
inc
push
jo
sub
add
inc
scas
and
xlat
pop
jns
xor
jecxz
addr16
mov
cmpsl
cli
cmp
jmp
adc
add
stos
repz
inc
dec
fcmovnbe
cmc
out
roll
loopne
out
xchg
mov
fcoml
sbb
cmp
lods
and
mov
dec
dec
sub
movsl
xlat
lds
or
imul
fiadds
xchg
and
femms
hlt
es
cld
push
roll
cmpsb
nop
or
iret
jo
sub
bts
dec
bound
sti
and
icebp
or
or
xlat
out
popa
fstps
lea
adc
jno
test
xchg
add
jecxz
cmp
jle
jmp
jae
add
mov
sub
out
xor
inc
dec
addr16
push
mov
out
jge
in
repz
jge
les
sbb
inc
lcall
out
scas
mov
and
cmp
mov
cmp
cmp
adc
imul
pusha
jnp
stos
dec
mov
imul
in
lcall
lcall
push
or
push
mov
mov
and
mov
enter
std
dec
mov
lea
fiadds
icebp
sbb
cmp
jb
pop
scas
add
adc
pop
xchg
stos
cmpsl
jo
cmc
call
mov
insl
push
dec
dec
push
jg
loope
sub
xlat
std
and
lret
xor
cli
cwtl
push
les
dec
daa
xlat
mul
cmc
push
fsts
and
lcall
out
push
call
in
inc
enter
lods
rclb
cmp
rol
shlb
bound
sub
dec
lds
mov
mov
cltd
sahf
not
lret
add
xchg
pop
loopne
je
mov
stos
dec
hlt
sub
sub
mov
mov
xor
xor
sub
sbb
sub
repz
out
iret
sahf
or
push
jmp
mov
jbe
adc
add
clc
inc
jbe
pusha
pop
loop
pop
insb
mov
and
xchg
or
xchg
sub
int
dec
jmp
add
push
or
insb
fldl
enter
inc
xchg
adc
pop
es
jno
rclb
stc
or
jns
es
or
cltd
xchg
add
jg
xor
enter
cmpsb
leave
loop
outsl
push
jo
xor
rclb
fs
inc
pushf
outsl
fsts
sub
add
scas
adc
jne
dec
out
scas
mov
nop
push
xchg
push
dec
fcoml
add
cmp
out
xchg
push
jne
cmpsl
sub
jle
xor
cmp
xchg
push
and
pop
jg
fsubl
dec
pop
mov
js
les
add
cmc
mov
mov
adc
loopne
dec
pop
pop
mov
cli
push
mov
cs
and
add
dec
test
dec
testl
and
jbe
push
and
test
mov
gs
lods
dec
and
movsb
hlt
je
or
inc
push
frstor
loopne
xchg
or
sbb
inc
add
je
in
mov
js
pop
shrb
lods
add
ljmp
jl
loop
pop
sbb
mov
sub
sbb
add
sbb
dec
pop
adc
mov
sar
add
mov
cmc
fcompl
out
out
inc
jmp
pop
and
daa
das
dec
popf
jae
sub
xor
jmp
addr16
enter
leave
sub
rcrb
sub
inc
sub
daa
xorb
inc
mov
mov
out
mov
cmp
push
clc
sbb
mov
pop
dec
sub
mov
loope
sbb
xchg
xchg
jno
rorl
sub
jge
mov
jmp
add
pop
test
enter
and
clts
popa
mov
lods
xchg
mov
mov
test
cs
insl
mov
mov
xchg
jnp
fs
ret
dec
icebp
pop
xchg
js
ret
add
jp
xchg
arpl
xchg
mov
call
xchg
or
jmp
jo
xchg
sub
out
arpl
dec
mov
leave
dec
movsb
push
cld
iret
std
push
stos
sbb
mov
xchg
out
mov
imul
xchg
lds
mov
int
push
loope
add
test
aam
cld
add
out
ljmp
cmpsb
loop
inc
jg
sub
test
ret
mov
add
mov
inc
mov
jns
xorl
int3
sub
xor
lahf
add
xor
and
xchg
notb
int3
xor
stos
fdiv
mov
jle
pop
and
cltd
ss
cmc
and
lods
ficompl
add
adc
data16
rcrb
push
shll
pop
mov
xchg
test
je
imul
xor
push
or
mov
shll
shlb
xor
or
insb
xchg
inc
out
mov
subb
lods
or
call
pop
lock
pop
mov
js
mov
outsl
fisttpll
cmpsb
cmpsb
inc
fwait
dec
punpcklwd
pop
jmp
movsb
xor
or
nop
outsl
movsb
add
cmc
and
enter
aaa
sarb
in
inc
lahf
push
andl
insb
jnp
fcoml
dec
pop
nop
and
xor
and
mov
repnz
popf
push
movsb
insb
movsl
pop
dec
jp
in
cmp
lahf
xchg
pushl
sbb
jae
mov
icebp
xchg
push
aaa
notl
sbb
and
mov
xor
shl
jg
jp
jg
pop
push
gs
testb
ljmp
imul
mov
jnp
cld
xchg
daa
mov
push
adcl
or
push
jns
jecxz
cs
inc
shrb
mov
les
and
fadds
lahf
adc
add
push
jl
imul
add
mov
cmp
or
in
pop
pop
jmp
jne
push
dec
in
pop
hlt
cwtl
fisubl
shrb
push
icebp
ror
test
adc
ret
push
xorb
adc
aas
into
aas
into
mov
scas
mov
jmp
push
lods
fmuls
pop
or
mov
mov
stos
pop
call
push
inc
into
cmp
mov
pop
fdivl
pushf
es
jne
mov
fisubrs
rcrb
mov
or
orb
es
int3
and
xchg
cmpb
rcl
cmp
push
xchg
xor
aaa
imul
hlt
jb
cmp
mov
mov
ds
jmp
fstl
lock
jo
jle
mov
pusha
fcompl
mov
add
pop
sbb
pop
mov
xchg
add
pop
mov
mov
or
inc
popf
insl
subb
scas
and
movsl
dec
cmp
jne
jmp
adc
mov
mov
dec
addb
add
xchg
jno
mov
outsl
mov
aaa
rorb
dec
imul
sbb
hlt
and
jg
cmp
push
pop
adc
outsb
inc
shl
movsl
mov
add
aam
popa
aas
jo
xchg
rol
jnp
pop
test
cld
loop
push
inc
fsubs
sti
push
inc
cmp
jle
je
cltd
sub
push
stos
ds
bound
fildll
inc
adc
int3
fwait
repz
icebp
bndldx
mov
adc
ss
outsl
jnp
mov
fisubrs
cli
inc
je
mov
add
pop
shlb
pop
mov
dec
pop
sub
roll
out
in
pop
loope
xor
and
push
outsb
pop
icebp
out
and
inc
pop
pop
insb
mov
or
js
mov
dec
xchg
ljmp
mov
jmp
jmp
xchg
dec
mov
test
sub
test
in
bound
test
dec
mov
stos
scas
cmp
add
or
ds
loopne
adc
cli
es
mov
cld
mov
add
mov
mov
add
lods
mov
ret
push
lcall
loop
and
in
push
call
stc
in
shll
cmpsb
cmp
int
ljmp
xchg
xor
hlt
sub
loop
jnp
insl
cmp
bound
cmp
mov
out
xchg
in
cmp
pop
int3
xchg
bound
cmp
adc
sbb
inc
mov
insl
or
out
inc
cmp
adc
xor
imul
cmpsb
inc
xchg
xor
aas
xchg
dec
cmpsb
pop
fildll
jb
sub
xor
inc
filds
adc
fdivr
nop
pop
jle
insl
cli
xlat
or
cmpl
dec
sbb
ret
adc
lret
mov
sbb
or
pusha
sub
sub
cli
adc
movsl
or
es
sub
mov
fsub
xor
push
cltd
mov
aaa
cli
dec
fldcw
rcl
pop
inc
stc
ds
sbb
shrb
cmp
dec
ds
addb
std
and
inc
fldenv
pop
cwtl
leave
mov
icebp
and
mov
mov
out
lret
add
xor
sub
outsb
jg
add
push
shrb
in
mov
stos
xor
pop
icebp
dec
in
cmc
cmp
adc
jge
inc
xchg
mov
sub
and
mov
or
cmp
xlat
mov
lock
dec
mov
in
push
pop
mov
mov
xor
movsb
dec
arpl
cmc
dec
std
pop
lea
daa
loope
sahf
jne
mov
movl
adc
jecxz
aad
mov
push
lock
or
lea
adc
push
inc
cli
lahf
movsb
movsb
xor
leave
mov
and
hlt
inc
or
sti
mov
mov
stos
push
movsb
mov
arpl
repz
xor
push
mull
mov
fidivrs
cwtl
pop
sub
gs
insl
push
mov
adc
jp
movsb
ss
inc
cs
pop
repz
and
dec
subb
pop
push
xbegin
bound
or
pop
sbb
pop
xchg
jl
jnp
pop
jno
mov
inc
push
sub
mov
sbb
je
imul
xchg
and
pop
sar
in
sub
in
xor
add
cmp
shll
sub
out
in
filds
int
xor
notl
pop
or
xor
adcb
pop
mov
push
pusha
inc
mov
push
fs
inc
call
imul
inc
das
outsl
inc
xchg
push
lret
mov
out
push
icebp
cwtl
ret
mov
xchg
fdivrl
adc
iret
xchg
andb
jecxz
sbb
lret
loop
xor
pusha
push
mov
pop
pop
and
jbe
lods
push
dec
adc
je
call
push
loop
sbb
cmpb
cmp
test
js
xchg
mov
cmp
xor
mov
mov
push
xor
mov
adc
cmp
mov
add
fmuls
push
push
pushf
xchg
sub
stc
lock
push
sbb
shr
and
or
xlat
sub
sub
loop
bound
mov
xorl
sub
dec
jo
repz
lcall
ss
push
and
cmpl
imul
rol
das
xlat
xor
xor
test
jo
les
insb
jmp
outsl
pop
push
xchg
lock
mov
sub
add
cmp
ja
mov
dec
add
test
or
scas
fwait
outsb
stos
add
insb
out
aad
in
cwtl
lock
mov
das
test
cmpl
lcall
pop
push
lods
out
mov
mov
sahf
data16
sub
jae
or
xor
add
sarl
es
cld
jo
push
scas
cld
push
daa
inc
lahf
fwait
pushf
mov
jbe
aad
into
xchg
hlt
gs
jle
or
sbb
insl
xlat
or
sbb
ffree
aaa
data16
cmpsb
insl
out
or
sbb
insb
sbb
inc
mov
push
jmp
imul
ljmp
dec
sub
int
mov
jae,pn
mov
adc
fdivr
pop
pusha
sub
test
mov
insb
mov
dec
shlb
incl
cmpsb
aas
jmp
sub
repnz
out
xchg
cli
jp
dec
dec
dec
add
jmp
fwait
ret
fstps
fdivrs
fimuls
jae
pop
fwait
fucomp
test
mov
push
sub
hlt
cltd
sub
inc
sbb
rolb
cmp
sbb
ss
mov
lahf
dec
cmp
ss
xorl
sti
fwait
xchg
lods
shll
and
mov
push
xchg
leave
leave
mov
adc
test
jp
out
adc
pop
dec
insb
inc
pop
jbe
fadds
push
leave
adc
inc
push
mov
mov
lret
and
into
sbb
xchg
pop
lret
push
cmp
scas
sarl
xor
popf
movaps
inc
js,pt
negb
stos
outsb
fildl
adc
nop
inc
les
sub
mov
push
adc
fildll
or
add
sub
lahf
scas
push
bnd
data16
sbb
sub
in
imul
cmp
scas
fwait
lods
nop
xchg
arpl
pop
outsl
test
scas
add
pushl
test
lea
int
lea
xor
jl
jns
js
add
pop
fwait
mov
dec
sub
xchg
jns
dec
cmp
bound
inc
in
icebp
inc
nop
pop
sub
aas
push
jne
mov
shl
sar
faddl
mov
pusha
daa
bound
mov
shrl
sbb
mov
mov
sbb
jnp
enter
shll
cmp
je
outsl
hlt
cmp
shlb
jne
imul
das
das
loopne
jo
xchg
sbb
push
or
mov
xchg
pop
test
enter
shrb
icebp
insb
into
pop
cltd
mov
mov
movsb
mov
fdivrs
add
xchg
neg
dec
push
es
andb
test
inc
mov
es
inc
jl
pusha
jns
xchg
cmp
fisubrs
rcr
fisubs
mov
ja
xor
pushf
sbb
sub
aad
sbb
insl
xchg
rcrb
mov
std
push
adc
adc
pusha
dec
cltd
xchg
addr16
lds
cltd
dec
in
jbe
mov
and
ljmp
lods
pop
mov
xchg
push
xchg
pop
mov
loope
out
test
aad
int3
cltd
sub
cltd
mov
pop
sub
xchg
lea
inc
stc
mov
xor
jle
lret
fisttps
sub
lock
adc
stc
popf
mov
push
dec
repnz
mov
pop
adc
out
adc
in
or
rorl
bound
popa
mov
xorl
mov
jl
xchg
push
cmc
outsl
fwait
push
sub
mov
lods
ficompl
divb
cmp
outsb
pop
repz
pop
fnstcw
fbstp
lahf
imul
sbb
out
pop
adcb
fsubs
sahf
cmpsb
fisttpl
mov
mov
cltd
mov
ret
push
rcrb
and
sub
mov
dec
cli
adc
mov
push
sarl
sbb
jle
out
mov
cld
xor
aad
mov
movl
dec
mov
inc
jmp
sbb
rcrb
dec
mov
dec
aas
iret
xchg
icebp
imul
test
xorb
imul
mov
outsb
sbb
inc
sub
pusha
sti
pusha
call
rcrl
in
adc
sbb
jnp
cmc
imul
mov
adc
fiaddl
cmpsl
lods
pushf
ss
or
dec
cmp
insl
popf
lcall
mov
or
dec
mov
in
aas
stos
inc
sar
fcoml
into
movsb
and
add
cltd
add
sub
mov
fldt
jl
add
xchg
mov
jp
divb
dec
ss
pop
test
lock
mov
popa
out
mov
jno
cmpsb
notl
nop
mov
push
mov
or
mov
scas
push
sahf
xchg
cmpsl
aas
xlat
mull
daa
clc
dec
and
and
repnz
scas
inc
loopne
fisttpl
push
fists
subl
sbb
fldt
out
lock
mov
xchg
leave
xor
push
cmp
xor
xorb
dec
dec
and
xor
inc
es
jo
mov
aaa
imul
divl
adc
xchg
adc
sbb
jle
cmc
outsb
in
jmp
xor
cli
repz
jecxz
aad
push
ljmp
inc
jo
jnp
pop
gs
push
mov
mov
in
fbstp
pop
imul
and
andb
sbb
pop
outsb
jecxz
test
or
xor
insl
jp
fdivrl
xchg
or
mov
nop
loop
mov
mov
push
cmp
mov
cmp
cmp
pop
pop
mov
xchg
lcall
mov
jne
movsl
fisubs
pop
sahf
xor
fstps
sti
out
out
jg
sti
xor
pop
add
push
dec
inc
jp
repz
mov
js
inc
lods
mov
andnps
add
push
movsb
cmp
outsl
shlb
pushf
add
adc
push
add
mov
sarb
dec
dec
xor
cmpsl
inc
insl
push
push
das
js
mov
pop
int
ret
cmp
movsb
sarl
xor
stc
out
dec
add
pop
xchg
les
cmpsb
stos
sub
pxor
add
pop
addl
xor
pop
popa
dec
sbbl
mov
mov
aas
jp
data16
xor
scas
call
lar
stos
mov
push
frstor
xchg
mov
stc
jo
clc
pop
gs
mov
adc
or
popf
test
daa
cmpsb
movsl
iret
arpl
pop
mov
pop
in
iret
jo
sub
outsb
inc
xchg
pop
loop
pop
dec
nop
push
gs
ret
mov
jnp
mov
subl
mov
movl
ficoms
cmc
fs
jge
sub
lahf
fildl
push
int
out
mov
xchg
mov
cmp
movsb
pop
aas
xchg
sub
sub
fcmovnu
shlb
ret
cmpsb
outsb
mov
out
in
mov
jge
dec
orl
outsl
imul
lcall
jo
fcomi
mov
shlb
fiadds
mov
xor
movsl
test
dec
dec
sbb
inc
cmp
ret
out
fnsave
mov
xchg
pop
je
in
xchg
shlb
sbb
xor
mov
ljmp
or
pop
ds
pop
and
xchg
fldl
dec
insl
mov
loop
out
pop
or
mov
stos
sti
pop
popf
ja
jg
lods
stc
pop
add
xchg
lock
push
sar
ficoml
popf
insl
jne
orb
or
popa
mov
lret
call
stos
int3
leave
cld
mov
fcoms
mov
pop
sbb
mov
in
pop
mov
jmp
lcall
cmp
shlb
es
cmp
movsb
lods
xlat
sbb
shl
mov
addr16
daa
add
push
sbb
cli
roll
jae
ds
in
cmp
into
std
outsl
sub
xchg
mov
test
push
push
mov
jl
cli
push
dec
test
shr
add
mov
in
imul
rorb
jecxz
push
ds
jp
cmp
dec
mov
sti
push
push
ret
pop
jne
scas
outsl
mov
inc
push
or
jecxz
mov
das
xor
ljmp
push
jb
xor
mov
mov
mov
cmc
mov
xchg
inc
xchg
mov
pop
cmp
sub
adc
out
mov
popf
lahf
aad
push
cmc
dec
pusha
aaa
out
sub
out
pusha
cmp
push
wbinvd
xchg
xchg
fcompl
add
jae
push
jne
xchg
and
incl
push
push
sbb
sub
dec
test
imul
dec
ret
shl
jnp
mov
mov
cmp
inc
add
jl
jae
mov
sub
sub
pop
dec
test
cwtl
mov
lds
pop
bound
lahf
mov
popa
sbb
shlb
test
rcl
in
xlat
andl
lock
pop
adc
idivl
mov
mov
pop
mov
scas
sti
dec
or
mov
loope
and
jp
lret
pusha
pop
jle
repz
jno
loope
sub
mov
aam
mov
jb
mov
ficomps
push
fdivrp
sbb
adc
mov
push
and
inc
fcoms
das
jns
mov
xlat
xchg
cmp
jbe
inc
sbb
xor
outsb
push
outsl
dec
fcmovne
cmc
and
scas
or
jno
adc
jle
push
in
cld
and
pushf
mov
cmc
out
js
mov
jb
add
pushf
int
andb
mov
lods
sub
cmpsl
fbstp
push
xchg
insb
decl
mov
add
call
movsl
adc
cmp
aam
mov
lahf
fs
push
popa
cmpsb
or
cmp
aam
xor
cmc
sti
lret
fcompl
lods
negb
loop
call
and
js
stc
push
scas
mov
mov
lock
jecxz
mov
dec
out
cmp
jl
add
movsb
shlb
cmp
mov
dec
mov
imul
fsubrs
test
mov
int3
icebp
lahf
pop
or
sbb
xchg
or
cltd
inc
popa
cmpsb
fs
mov
fistpll
push
add
pop
fdivrs
sbb
pusha
xor
mov
sti
dec
sub
cld
pop
out
push
std
das
push
imul
sub
test
arpl
mov
jno
or
flds
fcmovb
cli
pop
hlt
cwtl
pop
lcall
andl
push
add
and
inc
push
add
int3
scas
cmp
mov
stos
push
pop
popa
pop
push
jno
icebp
push
out
shlb
call
sti
pop
mov
push
cmpsl
iret
add
mov
fcmovb
jle
cs
dec
clc
lret
sbb
dec
mov
cmpsb
mov
pushw
call
fsubrl
popa
mov
pop
mov
out
mov
push
mov
sti
xchg
pop
adc
lret
ja
mov
fucom
repnz
sbb
das
out
jge
shll
or
sbb
dec
ret
pop
nop
das
xor
ss
insl
aas
outsl
ret
hlt
ljmp
mov
xchg
pop
testl
nop
xorb
lahf
notb
push
bound
adc
sub
cmp
mov
add
ljmp
cmp
divb
xchg
insl
mov
mov
xor
xorl
xchg
sbb
out
xor
test
xor
inc
std
arpl
add
loop
mov
movsl
dec
adc
mov
movb
inc
and
inc
jp
jne
mov
inc
scas
lea
into
lret
stos
jo
repnz
xor
enter
adc
mov
add
jl
push
pop
jae
es
dec
scas
test
mov
fldl
cmp
maxps
jge
jl
xor
in
into
sub
scas
sbb
pushf
outsl
hlt
ret
fcmovnu
cmp
arpl
xor
loop
pop
aad
outsl
pop
fcomip
negl
insb
cmp
repnz
lcall
addr16
sbb
add
add
fwait
ds
aad
es
inc
test
sub
sbb
pop
push
out
sbb
cmpsl
int3
jno
xor
jle
lea
xor
push
mul
sbb
out
sti
leave
andb
faddp
lret
ud1
adc
enter
mov
out
jae
sub
cld
lock
dec
aaa
sub
mov
and
fxch
push
or
test
jb
stos
ud0
ret
push
pop
dec
jl
mov
pcmpgtw
push
bound
fmul
loopne
fcomi
mov
lods
xchg
add
inc
in
adc
leave
icebp
xlat
jnp
hlt
fisttps
mov
ds
iret
lock
pop
mov
sbb
cmp
pop
mov
icebp
ret
cmpsl
push
lods
sti
pop
and
cltd
mov
lret
add
mov
pop
andl
push
orl
dec
out
lret
loop
inc
ret
clc
xchg
inc
xlat
call
es
lret
adc
repnz
dec
push
ret
pop
push
sub
pop
fwait
scas
pop
or
sbb
push
or
lret
fs
add
fsubs
sub
daa
aad
stc
out
cwtl
dec
test
mov
ljmp
repnz
inc
xchg
push
nop
jl
xchg
xchg
cmc
std
aad
or
sti
or
scas
loop
or
pop
movsl
adc
dec
fdecstp
cmpsl
pop
jge
out
gs
test
out
and
ret
jl
push
mov
xor
dec
inc
mov
ret
mov
mov
mov
out
jbe
adc
hlt
ss
or
sbb
inc
cwtl
mov
jmp
cmp
lcall
jecxz
push
das
sbb
mov
shr
sub
out
jae
sub
xor
dec
push
mov
dec
popa
icebp
out
fidivrs
mov
sti
dec
shrb
aas
cs
and
fcmovbe
jbe
addr16
nop
mov
std
xchg
jb
xchg
mov
inc
sub
sub
ret
mov
mov
icebp
lahf
fstpt
inc
adc
enter
cmp
shll
fnstsw
fsubl
xchg
iret
push
xor
dec
shlb
mov
addl
xor
push
cmpsl
sarb
push
and
or
cltd
hlt
lret
inc
cli
add
pop
test
mov
cltd
or
cmp
sub
jns
sarl
daa
out
mov
cli
xor
jae
pop
in
call
loop
and
in
or
mov
mov
add
cmp
adc
iret
inc
cmpsb
aas
sub
jae
or
inc
push
outsl
add
loope,pn
inc
pop
add
sbb
movsb
sub
and
iret
sub
jnp
insl
shll
lret
xchg
cmp
ss
neg
add
add
xor
xor
lods
bound
arpl
int3
pop
imul
subl
pop
dec
add
xchg
cmp
jnp
cmp
xor
ret
push
push
inc
les
lods
cld
repz
mov
adc
xchg
insl
daa
push
lds
test
jecxz
mov
in
inc
dec
imul
dec
fisttps
sbb
divl
sbb
lds
lret
add
adc
jecxz
sbb
push
dec
mov
push
or
ss
dec
repz
push
xchg
pop
cwtl
outsl
add
cli
repz
pusha
xchg
adc
and
sub
or
arpl
mov
in
sub
dec
insl
sbb
xorl
imul
fidivs
pop
jge
cmp
jmp
sub
lcall
icebp
dec
mov
pop
iret
cmp
imul
lret
inc
leave
loop
xor
xchg
pop
ljmp
sbb
cltd
sbb
dec
mov
insb
xchg
insb
mov
stos
adc
lret
xor
mov
enter
cmpsb
mov
pop
out
sub
jp
cwtl
aaa
mov
inc
insl
dec
sbb
fcmovnu
mov
sti
scas
repz
andl
jae
pushf
xchg
and
dec
rcrb
sbb
sbb
in
mov
mov
pusha
pop
scas
fdivs
stos
test
lret
out
pop
cmp
aam
mov
jle
inc
stc
jle
idivl
or
lahf
aad
push
mov
shrb
bound
xor
arpl
inc
int3
sbbl
lds
orb
into
xchg
jg
addr16
pop
out
fadds
mov
add
push
jbe
cmpsl
mov
stos
repnz
mov
or
hlt
mov
sbb
push
push
push
and
push
mov
gs
insb
std
jle
or
out
adc
or
test
adc
ljmp
jle
movsb
ds
mov
jae
adc
data16
and
xchg
adc
popa
lods
sub
or
jg
xchg
jge
les
movsl
mov
mov
jno
int
mov
mov
lock
leave
adc
jnp
imul
mov
rcrb
push
push
decl
and
push
in
ret
fistpll
dec
inc
pop
std
andb
leave
inc
pop
lods
or
mov
add
jge
pop
fcomp
xchg
lret
out
xor
cs
mov
fisubrl
das
shrb
mov
std
mov
xchg
jnp
mov
cmp
fldl
sub
cmp
or
mov
mov
bound
cmp
pop
cli
pop
inc
hlt
popf
cmp
sbb
ret
scas
sbb
mov
add
cmpsl
and
push
sti
mov
xor
push
or
xchg
rorb
pop
fcoms
mov
stos
cmp
push
mov
or
adc
shrl
mov
xor
adc
sub
fucom
scas
pop
add
jne
push
push
rclb
xor
push
in
jnp
int
jno
push
mov
sbb
push
dec
stos
mov
xchg
outsl
xor
mov
inc
mov
loopne
push
xlat
lahf
icebp
clc
lea
lret
dec
dec
cmpb
fldenv
test
iret
xchg
and
aas
push
in
aam
lahf
dec
stos
in
push
dec
jge
test
pop
jnp
movsb
orb
mov
loopne
and
loope
pop
aam
push
fisubrs
jg
jmp
ret
xchg
bound
ljmp
ret
pop
xchg
mov
enter
add
xchg
cltd
xchg
add
mov
cmp
xor
arpl
pop
rorb
mov
mov
test
or
cmp
adc
mov
repz
push
inc
out
mov
sub
scas
xchg
shrl
xorb
xchg
aad
push
out
icebp
push
xchg
arpl
mov
mov
shlb
incl
jae
test
addr16
adc
insb
mov
rcll
sbb
push
pop
sbb
loopne
dec
out
add
shr
scas
ds
cltd
fidivs
or
mov
cmpsb
pop
fwait
orb
ds
dec
rorl
push
pop
xor
sbb
mov
aas
enter
or
or
mov
jbe
adc
fists
inc
lahf
mov
fistpl
notb
fs
mov
js
push
test
push
hlt
xchg
mov
xchg
js
test
popa
lods
sub
mov
xor
out
inc
sbb
jge
int3
lods
rcrb
sbb
jecxz
xchg
xchg
jb
push
insl
cmc
arpl
push
lahf
sub
jle
mov
shr
cld
or
int3
rol
das
stos
inc
and
dec
sbb
sbb
mov
aad
pusha
adc
and
sti
xchg
jae
cltd
jns
daa
sarb
push
ret
sub
fsubr
ljmp
pop
jno
or
pusha
push
cmpsb
ror
stos
jg
adc
fadd
ffreep
sbbl
mov
add
lods
sub
adc
lret
loope
lods
xchg
mov
jae
push
mov
in
aas
xchg
sub
inc
and
add
mov
dec
outsl
in
int3
mov
jno
repnz
gs
jo
cld
jl
aas
dec
xorb
mov
ficoml
mov
mov
mov
pop
scas
test
aad
dec
fimull
xchg
and
dec
mov
fmull
sub
adc
or
fistps
push
sti
leave
addl
jp
rcrl
jb
jo
pop
icebp
test
dec
pop
stos
rcr
test
cmp
pop
bound
sbb
dec
push
packsswb
imul
lret
xchg
dec
lds
into
sub
inc
and
ficoms
lret
push
ja
mov
mov
pop
int3
xchg
adc
stos
aaa
out
rcll
popa
icebp
repz
lret
nop
arpl
mov
mov
pop
lds
xchg
sbb
in
dec
rcrl
je
repnz
mov
or
jbe
add
lret
ja
inc
cmpsb
xchg
cli
call
call
jge
gs
mov
leave
ds
aam
aaa
inc
push
mov
sarb
add
mov
outsl
or
inc
hlt
xchg
out
mov
lret
inc
add
jae
and
iret
repz
imul
add
sbbb
mov
movsb
mov
push
push
mov
out
popa
test
loopne
loop
pop
jns
enter
jge
mov
dec
rcrl
sub
xor
cmp
stos
fxch
xor
aaa
mov
aas
sbb
mov
cmp
cmp
jge
insb
adc
je
shll
xlat
mov
fcoml
push
mov
push
enter
and
iret
and
int3
imul
inc
cs
pusha
fisttpll
fwait
xchg
les
pushf
das
cli
bound
into
pop
stos
xchg
hlt
les
mov
adc
mov
fisttps
aas
push
xchg
repz
push
xchg
mov
jo
sub
mov
dec
clc
rcll
out
sbb
int
pop
sarl
jp
lds
inc
cltd
pop
stos
arpl
addr16
mov
add
xchg
dec
scas
test
mov
lahf
mov
push
push
inc
adc
sub
mov
stc
fs
aad
data16
subl
pop
mov
dec
or
iret
adc
sub
add
gs
pop
cmp
push
sub
mov
call
push
mov
cwtl
shll
sbb
jmp
popa
popf
iret
inc
mov
rcl
sbb
dec
mov
dec
push
dec
sub
lods
or
gs
decb
push
outsl
pop
mov
sbb
cltd
rcrl
mov
mov
aam
xchg
mov
js
dec
lea
jns
jmp
nop
clc
xchg
inc
fxch
sub
jo
mov
mov
push
addb
mov
popa
xor
fists
jae
sub
cmp
dec
jge
sbb
dec
jg
dec
aam
js
aam
inc
aas
test
mov
arpl
into
push
ret
lds
outsl
and
orl
int3
ret
out
fs
push
push
mov
out
push
push
idivl
js
push
rorl
inc
pop
test
jp
int3
or
fnstenv
frstor
pushf
bnd
rep
push
sbb
fsubs
das
jae
add
inc
shlb
fs
mov
lcall
mov
lahf
mov
gs
inc
ficoml
dec
adc
imul
addb
pushf
mov
jge
fldenv
xor
inc
filds
add
dec
sbb
pop
jecxz
popa
repz
inc
out
and
and
mov
or
adc
shrl
gs
outsb
cmp
cli
mov
cmc
mov
mov
mov
mov
add
xorb
mov
aad
or
ja
xor
scas
pop
dec
sub
sbb
mov
add
repz
push
cmp
inc
jnp
cmp
loopne
in
and
lahf
pop
repnz
mov
add
lret
dec
addl
xchg
popf
cmp
inc
mov
xchg
dec
mov
inc
or
cmp
dec
adc
stc
enter
mov
nop
xor
test
xchg
ja
push
pop
cmp
phsubsw
mov
inc
sbb
cli
xor
into
push
sub
pop
sub
repnz
cmp
sti
popa
push
jmp
flds
sub
adc
jle
hlt
xchg
out
stos
inc
cmp
and
pop
cmp
outsl
int
lahf
mov
sbb
into
loopne
mov
addb
xchg
ss
in
gs
int3
inc
push
aad
adc
cmp
push
sbb
popf
ret
sub
pusha
jb
cmpsb
jb
sbb
xchg
vmwrite
frstor
imul
and
mov
scas
clc
int
or
in
aaa
and
sub
test
lods
movsl
sub
pop
xchg
movsb
dec
out
push
adc
xchg
scas
jns
cmp
adc
add
xor
addr16
loop
inc
loope
dec
xor
bound
sub
std
pop
cmp
xchg
fbstp
lods
int
out
sub
imul
scas
xor
xchg
test
je
aad
jb
jmp
inc
xchg
inc
loope
ret
mov
mov
ret
push
inc
aaa
fidivrs
jl
dec
stos
cmp
test
in
out
xchg
lock
or
adc
or
out
aad
cltd
das
in
movsb
or
rol
cmc
cwtl
scas
sbb
pop
pop
pop
mov
mov
push
cltd
mov
push
cmp
jp
nop
hlt
lret
mov
mov
cmp
jl
or
popa
push
sub
stc
sbb
negb
pop
lret
ret
sbb
dec
mov
pushf
and
fcoml
roll
imul
jl
push
mov
add
xchg
iret
xchg
arpl
outsb
jle
scas
in
decl
xchg
repnz
jl
movsl
push
inc
lret
xchg
or
pushf
add
data16
test
or
daa
clc
pop
and
idivb
pushf
push
mov
fprem
inc
lret
leave
sub
imul
cmp
mov
jl
ja
mov
cmpl
test
or
int
fnstenv
inc
leave
leave
fwait
mov
inc
ret
test
mov
adc
push
les
fisttps
pop
inc
insb
push
sbb
dec
scas
jns
sbb
jno
mov
cltd
sub
jns
sbb
pop
cmc
mov
sub
std
mov
push
mov
adc
lret
pop
subl
repnz
das
scas
pop
dec
or
xlat
or
repnz
jle
add
push
les
sahf
xchg
push
cwtl
adc
xor
xchg
ja
pop
repnz
xor
push
cmp
incl
inc
mov
loope
mov
lcall
outsb
ja
aaa
pop
outsl
jae
fmuls
mov
add
call
leave
out
outsb
mov
add
mov
leave
inc
idivb
sub
test
push
xor
sbb
jge
scas
and
jbe
je
mov
add
jmp
es
leave
jg
pop
pushf
pop
lods
xchg
repnz
and
fisubrs
mov
xchg
inc
dec
jnp
or
ja
jecxz
das
push
dec
addb
adc
mov
lret
cs
sub
adcl
lea
ja
pop
mov
and
repnz
xor
xchg
mov
hlt
cld
mov
and
adc
pop
cltd
add
fbld
inc
loope
xrelease
xlat
loop
jp
pop
int
insl
addr16
ffreep
int3
fwait
decb
out
pop
or
inc
pop
pushl
rcl
mov
out
and
dec
xchg
xor
fdivrl
iret
flds
cmp
inc
fildll
ds
ja
push
inc
aad
cmp
int
xchg
inc
jmp
or
shll
fwait
lock
pop
lock
and
add
aam
pop
imul
mov
mov
push
mov
popa
mov
out
cwtl
aas
adc
jg
inc
in
mov
sub
sbbb
test
ja
xchg
repnz
fiadds
cwtl
mov
icebp
sub
jb
test
mov
adc
rcl
fdivrs
lods
cmp
stc
jns
stos
fisttps
push
je
roll
or
push
fyl2xp1
repz
mov
nop
sub
lret
data16
xchg
stos
movsb
repz
jno
push
fdivrs
pop
and
addr16
lret
jo
and
sbb
test
pop
dec
lahf
in
or
and
mov
sub
idivb
sar
add
xlat
ret
pop
jg
mov
call
pop
dec
cwtl
add
in
pusha
and
aaa
sbb
inc
dec
mov
clc
dec
pop
and
mov
cmc
loopne
fst
enter
arpl
nop
lods
cli
popf
das
mov
jmp
sub
cmp
sbb
sub
in
cmpsb
sub
clc
imul
data16
push
or
xor
pop
cltd
mov
cmp
mov
push
mov
mov
out
insl
in
das
testl
sbbl
mov
push
jns
popa
pop
pop
adc
xor
mov
sbbb
pop
sbb
cmp
inc
sub
test
xchg
outsb
push
outsl
je
leave
and
push
mov
in
dec
cmp
std
test
pop
add
and
out
mov
pop
nop
add
je
xchg
test
lahf
mov
or
sbb
pushf
and
fimull
nop
inc
out
mov
dec
out
lahf
popf
fsubr
xor
movsl
std
xchg
in
es
mov
aad
pushf
xor
dec
imulb
test
mov
push
adc
shl
fstpl
in
cmpb
bound
in
divl
mov
clc
nop
xchg
sbb
lret
jp
xlat
les
in
ficomps
add
in
in
cmc
pop
xchg
push
and
mov
lret
jge
stos
jle
lret
pop
xchg
pop
mov
add
popf
cld
repz
add
rcrl
aad
fimuls
iret
jp
scas
push
push
fisttpll
shlb
adc
sbb
flds
jb
clc
std
add
mov
pop
inc
std
test
js
mov
rcrl
test
push
or
fadd
outsl
mov
bswap
inc
mov
xor
push
push
dec
mov
pop
out
xchg
pop
dec
loope
and
push
loopne
test
adc
test
add
add
jg
shll
xor
mov
mov
and
xchg
xchg
push
adc
mov
jno
loopne
inc
repz
lahf
arpl
jecxz
jnp
cmp
loop
xor
push
jg
push
movsl
fnstsw
cmp
fldl
mov
mov
notl
pop
and
inc
inc
ds
mov
nop
cmp
sbb
add
cmp
dec
mov
inc
mov
imul
loop
mov
ljmp
arpl
jb
push
jae
adc
cmp
xchg
pop
gs
adc
pop
addb
imulb
sub
cmp
movsl
mov
and
ret
das
cltd
testl
xcrypt-ofb
cmpsl
ljmp
lds
jge
jle
and
mov
inc
pushf
dec
dec
or
mov
sbb
imul
imul
sbb
enter
das
sbb
mov
xor
fwait
dec
icebp
mov
test
ds
cmpl
fidivrl
cmp
mov
hlt
xor
sub
aas
outsl
aas
in
pop
sub
xor
fnop
pop
mov
or
cld
jno
cs
push
sub
cmpsl
jmp
arpl
mov
in
mov
dec
sbb
div
mov
mov
push
adc
pop
mov
adc
cmc
adc
push
mov
dec
stos
pop
sahf
cmp
lret
in
mov
test
sbb
dec
push
mov
mov
push
sub
fldcw
mov
lods
xor
inc
out
cwtl
mov
in
imul
mov
test
outsl
ret
les
and
out
sahf
fdivrs
stc
mov
push
out
fs
ljmp
orl
arpl
xchg
fsubl
mov
loopne
hlt
sti
cmpl
rorb
sti
xchg
sub
cmpsl
test
or
nop
lret
adc
pop
mov
add
push
xchg
outsb
in
xchg
sub
inc
mov
aad
jmp
add
insb
addr16
mov
and
les
stc
cmp
jl
and
dec
scas
out
jg,pt
inc
sub
sbb
mov
nop
and
mov
sub
popa
mov
movsl
aam
mov
fistpl
rcll
sarl
pop
jns
test
pop
aad
and
push
fdivrs
push
cltd
out
pop
inc
add
imul
lahf
and
lea
pop
aad
mov
adc
adc
sbb
sub
in
loope
fdivr
es
lret
cmpsb
dec
jg
ja
outsl
mov
call
out
dec
stos
lock
js
or
or
inc
adc
jb
dec
xor
push
mov
dec
pop
loope
inc
push
mov
hlt
repnz
mov
shrb
mov
dec
jae
ss
lea
es
movsb
add
sbb
pop
dec
sbb
clc
insb
xchg
jnp
cwtl
push
mov
mov
imul
sub
aam
or
xor
es
in
adc
pop
ljmp
xchg
imul
test
cmp
rcrb
cmp
in
mov
mov
test
loope
jno
and
sbb
pop
stos
push
div
sbb
arpl
and
cmp
aaa
movsl
andb
push
ljmp
arpl
popa
sbb
xchg
mov
push
inc
mov
inc
fucom
mov
push
inc
sub
dec
ds
aas
hlt
lods
stos
imull
mov
div
inc
addr16
loopne
inc
add
inc
imul
push
sbb
aaa
ret
cmpsb
mov
lret
lcall
movsl
mov
enter
push
loope
arpl
popf
add
mov
push
dec
scas
repnz
int
sbb
mov
push
mov
jnp
cltd
or
sub
rorb
movb
mov
or
lret
aas
stos
das
inc
mov
pop
xlat
test
push
into
xchg
je
out
fs
rorl
mov
sbb
lods
outsb
pop
inc
sub
ret
testb
jo
cs
xchg
loope
xlat
add
nop
adc
or
sub
mov
push
mov
hlt
adc
mov
les
mov
popf
fxch
fsubs
out
xor
pop
jae
rcll
fisttpl
incb
adc
mov
sbb
pop
sbb
add
mov
and
pop
rclb
add
ljmp
cmp
pop
scas
out
es
and
filds
mov
jb
push
adc
daa
cwtl
fdiv
scas
mov
rcrb
insb
rorl
cmpsl
shrb
outsl
jb
lods
push
mov
das
lods
and
stos
xchg
rcll
movsl
fildll
movsl
lret
data16
push
mov
dec
cld
call
cwtl
sub
mov
adc
ret
mov
daa
pop
idivl
int3
outsb
lock
xor
jbe
push
loopne
mov
sub
imul
aad
gs
mov
std
adc
push
xor
mov
mov
mov
jecxz
cmpsb
or
cmp
jbe
nop
add
jno
pop
sbb
inc
mov
xchg
popf
pop
inc
jno
mov
orl
mov
stc
in
xchg
lret
out
xlat
jbe
shlb
loopne
jp
rorb
inc
ffree
pushf
mov
repnz
xchg
cli
lahf
pop
cld
or
mov
out
push
out
fsubp
in
aaa
pop
call
push
daa
divb
or
push
rcrl
adc
lret
ljmp
in
out
lcall
inc
push
adc
adc
clc
dec
sbb
mov
std
push
div
loop
scas
rcll
stos
jb
adc
cmpsl
push
xchg
repnz
daa
aas
mov
and
sbb
cmp
ja
mov
lods
fsubrl
pop
sbb
dec
scas
xlat
xchg
mov
inc
pop
cmp
mov
sbb
push
push
cmp
and
mov
imull
cltd
push
adc
repnz
aam
mov
repnz
test
mov
dec
mov
lea
test
lcall
sbb
sbbb
push
popa
rcl
xchg
popa
sbb
xlat
xchg
mov
xchg
mov
xchg
loop
sbb
xchg
cmp
xorb
xchg
xchg
jmp
leave
pop
imull
int
dec
cmc
idivb
pop
pop
scas
inc
jp
daa
push
inc
adc
scas
scas
mov
test
add
es
fadds
aas
add
in
adc
push
test
dec
sar
cwtl
out
xchg
pop
std
pop
clc
xchg
jno
mov
cmp
lea
dec
add
mov
mov
pop
scas
fstpt
js
into
mov
xor
jle
int3
add
addr16
fdivrp
push
adc
jle
pop
outsl
iret
xlat
inc
imul
cmpl
inc
sub
xchg
xrelease
movsb
out
inc
clc
pop
pop
subl
add
pop
lret
addr16
out
sbb
lods
aad
das
fldcw
cmp
pop
xor
fmull
sbb
pop
out
xor
mov
roll
pop
and
mov
pusha
dec
adc
je
mov
fisttpl
and
insb
rclb
stos
and
push
cmp
in
out
push
lods
cmc
pop
cmp
xchg
push
xchg
jne
fucomip
mov
mov
pop
xor
movsl
xor
fsubrl
inc
jmp
sahf
mov
xchg
mov
repnz
sbb
or
xchg
cld
sub
daa
sbb
jle
xchg
push
movsl
xor
stos
enter
loop
push
push
ds
xor
jg
dec
loopne
push
gs
sub
push
mov
push
cs
pop
push
mov
sub
pop
add
aad
jmp
jmp
jl
outsl
pushf
pop
fdivs
aaa
cmp
sub
repnz
in
rcrb
add
outsl
and
pop
jl
mov
ja
push
mov
jb
fnstsw
or
scas
mov
insl
pusha
pusha
in
adc
clc
loopne
adc
jp
lret
sub
pusha
enter
mov
lcall
xchg
dec
adc
sbb
jo
jl
or
push
mov
lret
mov
divl
push
push
or
jae
push
inc
push
lret
jnp
inc
mov
mov
sub
adc
sbb
mov
notb
sarl
push
inc
dec
add
and
and
or
mov
inc
xlat
add
lcall
cmp
es
and
push
xchg
cmp
xchg
xor
shr
jp
out
aad
cmpsl
and
mov
fistpll
jnp
jg
js
jb
in
sub
xchg
out
xchg
mov
xchg
movsb
ret
or
insb
mulb
ljmp
iret
pop
movsb
xchg
cmp
xor
mov
push
jne
imul
inc
push
frstor
sbbl
and
lds
dec
daa
mov
sbb
mov
jnp
int
movsb
push
in
lea
imul
xorl
cmpl
and
das
xlat
ja
aad
xchg
adc
lret
mov
mov
and
sti
push
fbld
xor
inc
mov
loop
stos
rolb
inc
out
repnz
lock
jecxz
push
push
and
ja
idivl
enter
fwait
push
repz
sub
push
xchg
mov
adc
decl
mov
cs
mov
inc
dec
sub
or
push
lods
or
mov
adc
adc
mov
sti
cmpsl
pop
or
popa
mov
hlt
test
fldl
hlt
pop
jo
pop
and
fsubrs
xchg
mov
and
sub
mov
jbe
push
arpl
mov
inc
adc
xchg
dec
pop
pusha
add
dec
incb
xchg
and
and
out
adc
inc
popf
cmpsb
push
test
push
fists
das
jg
xor
pop
pop
sbb
cmpsb
stc
imul
scas
jge
or
push
xchg
sbb
lcall
push
or
mov
adc
rcrb
mov
dec
sbb
cmp
xchg
mov
mov
dec
jl
or
dec
sub
fadd
adc
insb
subl
mov
jecxz
mov
xchg
add
push
add
imul
ror
lahf
cmp
jp
pop
sbb
rolb
pusha
mov
xchg
push
inc
loope
and
icebp
mov
imul
inc
mov
push
out
push
xor
sub
iret
or
out
mov
add
fiaddl
adc
add
fsubl
fimuls
leave
cltd
xor
out
pop
or
movsl
mov
out
push
hlt
bound
lods
push
imul
and
clc
and
push
fists
and
jnp
lcall
sti
mov
push
les
les
je
mov
mov
movsl
ja
out
push
shrl
addb
sub
outsb
sbb
shll
mov
sti
insb
aam
scas
or
sbb
xchg
and
movsl
sbb
inc
sbb
std
mov
and
push
mov
mov
adc
rorl
push
loope
arpl
pop
mov
std
cmp
lods
inc
push
rcr
fildll
push
pop
sarl
cmp
add
aas
sar
inc
xor
pop
lock
mov
mov
or
xchg
lea
sub
inc
dec
xor
shll
add
xchg
scas
adc
or
lcall
pop
bound
xchg
insb
jb
add
push
adc
mov
lahf
mov
pop
and
mov
mov
das
xor
and
xchg
add
dec
mov
loope
pop
sub
fwait
pop
inc
jo
xchg
push
mov
repz
mov
dec
mov
test
shl
xchg
push
ljmp
in
jnp
dec
or
mov
lds
incb
pop
push
int
add
jno
cmp
mov
xor
scas
push
insb
loop
daa
jbe
pop
xor
in
nop
into
jno
adc
add
adc
sti
jno
insb
ds
loop
mov
push
and
inc
sbb
loopne
andl
mov
mov
and
xor
test
std
lods
sarl
pop
cmp
mov
mov
aad
repnz
lods
dec
mov
rol
xchg
jae
push
sti
lea
pop
sub
popf
xchg
iret
test
mov
or
mov
jne
sub
and
adc
mov
fidivl
cmpsb
add
jle
mov
out
mov
and
les
dec
jl
incb
shlb
fldenv
test
loop
add
inc
adc
ss
in
push
jge
and
loope
int
pop
insb
xchg
mov
jecxz
aaa
imull
or
scas
arpl
mov
pushl
cmp
test
lcall
stos
adc
sbb
dec
jbe
data16
inc
lea
adc
cmpsb
add
dec
push
test
push
mov
mov
fiaddl
lea
jbe
into
jno
fs
add
in
add
xor
pusha
add
hlt
dec
add
add
mov
adc
clc
pop
cs
xchg
sub
adcl
pushf
mov
cltd
xor
push
mov
fildll
jmp
mov
cmpsl
scas
fwait
dec
popf
ficoml
std
daa
stos
pop
pop
push
push
jl
adc
jp
inc
sbb
push
jno
push
mov
pop
sar
xchg
cmp
rcr
test
in
xor
aaa
insl
mov
arpl
test
out
arpl
jg
ret
sub
mov
add
push
icebp
les
out
aam
pop
lods
xchg
cmp
ljmp
cld
pop
pushf
addl
cs
scas
out
je
test
in
cmp
movsb
cmpb
dec
jae
mov
push
cld
in
mov
test
cltd
push
push
xor
addl
mov
mov
mov
out
add
jae
pushf
dec
xchg
test
pop
mov
push
mov
out
rcr
ja
and
in
into
and
lahf
lcall
leave
dec
mov
push
lea
outsb
push
rorb
jl
mov
ret
cli
mov
mov
xchg
les
test
pop
data16
xor
pop
push
cmpb
dec
in
nop
jns
adc
jae
mov
call
divl
popf
cltd
adc
xchg
pusha
flds
dec
cmpsb
mov
int
and
dec
push
push
push
repz
fs
or
mov
adc
adc
lock
inc
sub
bswap
inc
or
test
out
and
stos
je
les
xchg
mov
pop
ja
rcrb
js
shl
xor
or
pop
rcl
ret
and
pop
not
mov
stc
mov
mov
add
sbb
test
jmp
lock
test
aaa
lds
mov
add
jne
loopne
sbb
outsl
add
outsb
mov
adc
insb
jecxz
push
mov
jmp
leave
and
jns
int3
push
repnz
push
fisubs
movsb
lret
dec
ljmp
ja
pushf
push
adc
pushf
dec
cmc
dec
test
mov
stos
pop
sbb
loop
stos
jge
int3
jg
in
push
fsub
je
insb
dec
jne
popa
rolb
insl
fisubl
fdivrl
ret
divb
push
sbb
insl
in
xchg
in
movsb
insb
sub
dec
lods
push
rclb
inc
jmp
add
or
mov
test
mov
bound
repnz
push
pushf
ljmp
add
mov
mov
movsb
dec
stc
scas
mov
cli
in
dec
negl
ss
test
or
push
push
push
sahf
pop
mov
clc
push
xchg
xchg
push
and
out
and
test
mov
sarl
inc
and
sub
and
sahf
mov
pop
popa
mov
and
cmp
push
movsl
pusha
lds
jnp
scas
movl
pop
jbe
inc
cltd
and
test
dec
insl
adc
lock
sti
add
push
pop
imul
xchg
push
cmp
shll
sbb
push
lds
or
les
jmp
jbe
sahf
fs
inc
sbb
lods
shll
cmpb
cmp
mov
xlat
mov
cli
jns
inc
imul
add
call
fsubp
sbb
stos
adc
in
adc
mov
cltd
xchg
loopne
ljmp
fwait
push
std
inc
sub
loop
dec
jmp
xor
cwtl
mov
and
jno
outsl
xchg
add
iret
push
jle
mov
pushf
stos
js
dec
cmp
cmp
pop
inc
cs
mov
pop
les
in
ret
cltd
mov
clc
mov
lds
into
inc
cmp
and
jecxz
lcall
lods
jne
sbb
sub
cmp
push
xlat
mov
or
inc
fcompl
cmp
movsl
sbb
inc
mov
aaa
inc
pop
xchg
adc
mov
jle
inc
push
testl
into
xchg
js
mov
aas
sub
test
ja
jbe
shrb
jne
xchg
jno
cs
popf
cs
cmpsb
js
inc
imul
jp
ds
sbb
andl
scas
pop
cld
push
inc
sbb
mov
xchg
xchg
sub
dec
enter
es
dec
mov
negl
and
pushf
jle
nop
in
cmp
popf
loope
mov
jp
leave
push
cmp
daa
push
push
or
push
aad
test
pop
sub
or
pop
mov
xor
push
adc
jl
sub
sub
in
mov
scas
dec
adc
push
cmp
adc
jno
xchg
cmp
dec
mov
nop
sbb
xlat
sti
pop
vmovdqa
or
mov
push
jp
sahf
jmp
mov
mov
sbbb
and
stc
aas
and
in
mov
pusha
mov
das
pop
mov
and
mov
imul
push
cmc
fstl
add
add
sbb
aaa
mov
xchg
cs
mov
add
jne
push
shll
mov
push
push
jp
fildl
pushf
out
inc
iret
sbb
insl
mov
xchg
ja
popa
std
mov
mov
sar
movsl
dec
imul
mov
mov
add
lret
nop
push
mov
daa
lds
call
test
pop
loop
pop
dec
push
lods
inc
sbb
mov
dec
xor
xchg
ret
dec
mov
jl
loopne
adc
push
sbbl
mov
cmp
lods
xchg
sub
jge
or
add
push
push
push
data16
sti
jno
inc
push
and
lret
pop
mov
xchg
mov
cs
into
mov
jecxz
fildl
daa
push
loope
nop
pop
fwait
scas
push
jo
xor
repz
mov
inc
and
dec
pop
push
xorl
cmpb
imul
dec
in
arpl
jmp
stos
mov
ret
xchg
fwait
jbe
mov
jo
imul
fisttps
jmp
ret
lret
inc
sbb
or
std
and
sbb
pop
ret
rcll
rcr
into
xchg
mov
inc
pop
ljmp
inc
push
jge
ficomps
outsl
inc
scas
xchg
sbb
cmp
lods
icebp
lahf
push
push
cld
into
es
xor
add
mov
or
inc
sub
sbb
xor
pslld
leave
movsl
lahf
adc
clc
jae
rorl
in
sti
es
add
sbb
adc
lods
out
fnstcw
cltd
fdiv
inc
insl
adc
aaa
cs
ret
pusha
shll
pop
es
jge
push
mov
mov
pop
mov
adc
mov
push
or
sbbl
pop
dec
jo
add
xchg
sti
je
cmp
mov
ret
lock
aas
enter
std
push
mov
pop
xor
mov
int
rcrb
push
movsb
mov
out
movsb
pushf
shr
xlat
sub
xor
outsb
scas
addr16
fucom
loope
mov
mov
sub
sub
push
jb
adc
cmp
out
jg
cmp
mov
mov
fs
xchg
shlb
push
movsb
pop
outsb
repz
bound
rorl
fmuls
push
mov
out
outsl
hlt
lods
pop
rorb
dec
adc
push
mov
cmp
cld
xlat
int3
inc
xor
imul
fsubr
in
outsl
mov
mov
leave
push
daa
add
scas
dec
sub
xlat
mov
insb
scas
and
push
scas
repnz
and
rcrb
jno
jg
lock
fimuls
out
mov
adc
or
icebp
mov
push
pop
jo
pop
xchg
pop
lea
sahf
fwait
pop
sub
dec
into
add
push
insb
xlat
daa
xor
xor
mov
in
lret
lahf
lods
ds
jno
je
popf
mov
sbb
ret
int
sub
push
push
mov
out
dec
out
dec
jns
sbb
adc
aam
mulb
xchg
fidivl
pop
enter
push
mov
neg
or
icebp
icebp
in
dec
stc
cmp
and
scas
popf
cmp
in
sub
push
jp
mov
cmp
inc
jecxz
or
jo
retw
jnp
js
inc
daa
fistl
adc
mov
push
test
stos
or
cwtl
jmp
inc
add
aam
les
rcll
sbb
xor
push
lahf
inc
dec
lret
mov
add
pop
fnsave
and
sahf
mov
pop
xor
pop
arpl
lcall
sti
js
imul
mov
xor
sub
xor
test
mov
lods
push
mov
negb
enter
and
inc
cld
pop
hlt
mov
popa
mov
jnp
test
add
mov
mov
jno
cmp
pop
ds
ret
add
or
pop
sarb
imul
dec
mov
jmp
mov
movsl
pop
and
roll
dec
stc
lock
pop
inc
gs
lods
sub
push
imul
out
scas
push
lcall
ds
hlt
rcll
pop
cmp
cmp
xchg
add
pop
inc
mov
adc
mov
mov
mov
push
outsl
mov
xchg
jae
push
xlat
pushf
repz
paddusb
jl
add
xchg
call
sub
stos
xchg
out
das
or
adc
enter
cmp
fdivr
sbb
push
call
cwtl
push
push
or
sbb
add
std
pop
jp
dec
in
fldt
push
bound
int3
xlat
cli
xlat
xchg
insb
bnd
sbb
push
mov
rcll
sub
push
push
adc
fdivrs
pop
dec
repnz
mov
fcmovne
les
xlat
inc
xchg
dec
push
adc
fists
pusha
pop
mov
sbb
sub
test
outsl
in
repz
pushf
cmc
lds
cmp
xchg
lods
mov
xchg
lods
dec
mov
mov
jmp
adc
out
imul
icebp
sbb
jmp
rcrl
mov
or
pop
add
or
mov
xchg
pop
in
out
inc
rclb
sbb
dec
xlat
jp
insl
jns
push
sti
xchg
call
mov
xchg
pusha
add
push
xor
xchg
fs
xor
lods
jno
jne
add
cmp
gs
sub
pop
cwtl
imul
scas
cmp
inc
sbb
pusha
pop
jbe
cmp
ficoms
mov
push
movsb
test
mov
push
pop
mov
pop
loop
adc
orl
mov
pop
sti
push
inc
mov
push
pop
pop
mov
xor
fwait
subl
in
sbb
and
sbb
lcall
xchg
mov
hlt
fistpl
stos
mov
xchg
dec
pop
nop
dec
xor
imul
pop
add
jge
in
jno
sub
inc
mov
std
out
dec
sub
pop
hlt
in
lock
pop
xchg
dec
and
pop
aaa
ja
inc
sti
or
sbb
inc
mov
popa
inc
push
dec
dec
aam
pop
adc
fldl
jnp
or
or
cmpsb
cmp
mov
dec
loope
dec
shll
mov
lock
lahf
loope
pop
loop
icebp
jbe
mov
and
mov
ja
or
clc
aas
popf
es
push
adc
subb
stos
cld
push
dec
outsl
pop
add
push
jns
cmp
cs
sbb
stos
nop
ret
push
and
iret
sbb
jmp
imul
xchg
push
pop
sahf
pop
add
dec
dec
daa
bound
mov
imul
mov
cmp
into
lock
cmp
or
lds
pop
arpl
mov
out
ljmp
push
or
cwtl
add
lahf
idivb
int3
ljmp
sub
mov
jp
cmpsb
push
and
dec
dec
sbb
push
mov
pop
das
mov
add
jnp
xor
mov
stc
lds
inc
jbe
or
movsl
into
daa
je
loop
daa
stc
mov
push
jae
ret
bound
xchg
jg
fidivrs
faddl
arpl
pop
and
lds
insb
adc
shll
cmp
xchg
sti
shrl
add
arpl
fcmovu
fcomps
in
mov
jmp
nop
jp
sub
mov
pusha
sahf
fdivrs
fisubrs
xchg
cmp
and
sbb
xchg
inc
xor
pop
xchg
test
mov
enter
jno
cwtl
mov
daa
push
and
dec
jecxz
jae
dec
mov
pop
jecxz
dec
dec
dec
pop
add
leave
mul
mov
mov
mov
xor
dec
sbb
xchg
jae
cmp
in
jl
xchg
or
imul
xchg
movsb
sub
mov
inc
lret
mov
gs
out
xchg
cmp
movsl
into
mov
test
in
xchg
std
enter
jmp
jae
pop
mov
jge
imul
add
push
shll
mov
test
and
cmc
lahf
adc
jmp
aas
jne
out
les
mov
lock
mov
dec
pop
push
add
fnstsw
aad
in
pop
jbe
xor
push
ja
sub
sbb
mov
mov
pop
mov
adc
addr16
js
mov
xchg
out
addr16
cmpsl
loopne
jns
mov
gs
movsb
dec
xlat
xchg
jb
push
jns
daa
push
fmul
adc
mov
jnp
push
cld
xor
mov
sub
into
mov
pop
cmp
pop
pop
sbb
dec
ret
mov
lret
test
in
mov
gs
xor
pop
aam
sahf
aad
aas
in
pushl
cmp
clc
inc
pop
and
push
lods
dec
xor
int
stos
sbb
rcrb
xor
popa
int
and
xchg
in
in
mov
cmp
push
xchg
out
pop
xchg
or
in
test
dec
std
jno
ss
loop
fwait
push
fwait
mov
mov
jnp
rorb
adc
and
mov
push
repz
sar
int
push
call
sbb
call
lea
lock
xchg
movsb
pusha
testl
xor
loopne
inc
popa
test
fwait
xor
stos
cmp
inc
stos
jg
cmp
popa
lahf
pop
xor
push
mov
lret
jns
mov
dec
shrl
sbb
xchg
xchg
stos
mov
clc
hlt
mov
shll
cmc
push
push
pop
mov
shlb
movsl
xchg
loop
push
or
call
pop
sub
rcrb
adc
fstpt
lcall
imul
pusha
inc
js
sbb
stos
call
gs
or
dec
mov
mov
xchg
das
xor
lret
xchg
mov
mov
shrl
jo
pop
andl
or
add
xor
int3
hlt
mov
sbb
cmp
xor
js
mov
je
loopne
aam
xchg
and
sub
cmpsb
jg
or
addl
jns
lret
and
cwtl
sub
cmp
in
mov
mov
andl
cmp
cli
outsl
cmp
inc
xor
inc
cmp
or
mov
loop
xchg
popa
stos
sbb
in
cmp
imulb
pop
xor
cmp
mov
inc
or
push
cmpl
scas
enter
jne
and
in
or
mov
test
pop
das
cmpsl
add
xor
in
push
push
repnz
dec
aam
xorb
mov
lahf
es
or
jbe
or
notb
inc
dec
dec
aad
jmp
jmp
arpl
xor
jo
insb
jo
jp
fdivl
jnp
xor
iret
push
pop
aad
cmc
cmp
mov
cltd
shl
or
mov
push
sub
lahf
mov
cmp
xor
and
je
std
mov
outsl
xor
push
cs
sub
pusha
mov
cwtl
sub
jmp
or
push
xor
std
ss
scas
lret
cmpsb
push
push
xor
mov
push
dec
fnop
mov
icebp
sub
or
push
jg
inc
ret
push
push
mov
jg
imulb
cwtl
add
xor
xchg
fiadds
das
cmpl
mov
sbb
pop
je
jp
and
mov
jge
in
lcall
sub
pop
es
shlb
inc
sub
aad
adc
nop
mov
sub
popa
mov
fwait
gs
mov
imul
je
imul
or
xchg
das
mov
fmull
cmpl
xchg
push
mov
adc
scas
pushf
lds
pop
push
mov
fwait
mov
outsl
xchg
mov
popa
insl
ffree
inc
imul
lcall
xchg
fwait
and
scas
sbb
mov
xchg
push
into
and
test
mov
adc
mov
ja
mov
mov
aad
push
xor
jns
mov
xchg
pop
inc
ss
scas
cmpsl
xor
addr16
cmp
fcoml
aaa
jae
jo
dec
push
mov
mov
out
les
aad
pop
out
sub
xorl
mov
sub
fisttpl
pop
xchg
lret
and
push
push
inc
add
cli
in
pop
je
inc
popa
add
mov
in
aas
dec
and
lret
jmp
or
scas
lds
sub
sub
stos
jns
lods
lea
mov
rcl
xor
sub
idivb
xchg
hlt
fisubs
push
xor
inc
stos
decl
xor
and
mov
test
in
jl
enter
pop
outsl
loopne
cmc
cmp
lret
or
adc
mov
dec
dec
fwait
mov
or
sbb
dec
ja
ret
jp
jns
sbb
dec
adc
dec
sbb
xor
pop
push
add
xorl
das
pop
nop
mov
push
pop
andl
imul
lds
cli
je
xor
push
pop
mov
xlat
mov
test
andb
das
dec
and
mov
and
cmpsl
sbb
cmpsl
aaa
negb
movb
scas
mov
jae
mov
in
std
mov
mov
loop
outsl
mov
daa
popf
imul
jne
rcl
and
cmp
cmp
int
jne
pop
mov
icebp
ret
lret
sbb
lock
inc
test
mov
cld
fmulp
or
push
xchg
and
and
sti
jge
in
cmp
pop
subl
sarl
lds
sbb
pop
pop
in
ja
test
fcomps
pop
jle
gs
aas
sub
mov
fsubr
pop
xorb
mov
or
in
ja
dec
cwtl
test
imul
test
movsb
mov
aaa
movsl
and
call
fsubrl
push
ljmp
mov
rcrb
insb
and
pop
pop
je
int3
push
inc
gs
lret
ja
insb
mov
jb
jl
xor
rorl
cmpsl
xchg
ret
xor
insl
pop
mov
std
xchg
pop
adc
call
add
cli
scas
mov
cltd
cmp
in
dec
sub
shrb
test
js
sbb
fs
mov
iret
xor
movsl
mov
bound
inc
mov
les
inc
jle
cmp
sub
and
addr16
pop
cmpsb
stos
or
mov
or
fistps
sub
pushf
mov
movsl
push
cld
fwait
xlat
fists
shl
jecxz
and
in
cmc
insb
inc
std
gs
cmpsl
mov
sahf
popf
cmp
in
lret
mov
dec
ret
stos
xchg
mov
dec
xlat
mov
ret
and
pop
jbe
aad
out
or
aad
xchg
loop
cmc
imul
out
je
xor
out
ss
push
movsl
cltd
out
jmp
or
int
subl
mov
add
lret
xchg
inc
ret
cmp
mov
add
and
jle
pop
addl
mov
add
xchg
xchg
imul
xchg
add
icebp
scas
out
leave
xchg
cmp
cmpps
mov
dec
adc
push
rcl
fsubl
push
push
sub
sti
jle
ffree
and
jmp
inc
data16
out
inc
add
outsl
fucomip
pop
clc
cmp
rorb
pop
popf
aas
or
int3
je
push
mov
sbb
vmptrst
nop
add
inc
cmpsl
lcall
cmp
clc
fsubr
mov
jmp
nop
and
fsubr
mov
jecxz
data16
or
les
jae
lods
mov
adc
add
and
popf
push
xor
pop
cmpl
jl
lret
cld
jmp
mov
ret
movsb
out
stos
fs
std
rolb
insb
pushf
idiv
xor
addr16
push
stc
adc
push
test
das
pop
std
test
jbe
mov
inc
and
pop
jo
scas
punpcklbw
es
insl
mov
fisubs
cmp
rolb
lds
cwtl
pop
inc
xor
cmpsl
jmp
ja
jb
adc
cmp
ret
rol
sbb
mov
xchg
scas
shrb
movsl
jmp
addr16
ficoml
sahf
cmp
inc
scas
jb
daa
addr16
xor
jp
mov
cwtl
daa
fcmovb
fs
cmp
mov
or
and
sub
lods
push
xor
xchg
and
int3
xchg
and
inc
inc
adcb
mov
fs
and
test
xchg
push
lret
js
lret
cmp
int
lcall
xchg
stos
sbb
push
pop
std
xor
in
lahf
mov
mov
ds
adc
fdivr
stos
rcl
cmc
mov
imul
dec
sarl
mov
pop
insl
mov
adc
sbb
add
scas
iret
mov
rclb
pop
int3
js
push
sub
call
js
sbb
xchg
cmp
cmpsb
jne
xor
push
shl
in
dec
inc
imul
lret
dec
cmpsb
mov
neg
mov
fwait
notl
popf
or
dec
sti
sub
and
or
into
inc
xchg
mov
jno
out
sahf
outsl
je
jns
sub
xor
add
clc
sbb
cmp
in
jge
dec
pop
cmpl
xchg
add
jle
shll
push
adc
pop
fstp
mov
lea
cld
test
dec
rcrl
out
jg
lds
lahf
jns
xorb
jge
popa
push
repz
mov
or
add
or
out
mov
fdiv
cmp
pop
inc
mov
and
mov
xor
xorl
and
ror
push
mov
shrb
rclb
add
push
jns
mov
stos
pand
sbb
ror
sti
jmp
mov
adc
cmpl
aam
aad
cmp
and
ds
test
daa
cmpsl
in
pop
in
cmp
outsl
add
adc
inc
or
and
loopne
in
cmpsb
movsl
cmc
pop
stos
daa
fiadds
popa
scas
adc
push
dec
insb
stos
aaa
and
fucom
negb
mov
push
mov
xor
fdivrl
inc
popl
adc
filds
sarl
add
mov
xor
aad
imul
jg
inc
jno
lock
cmpsb
inc
cmpsl
push
sub
or
loopne
jge
inc
lret
mov
ror
or
inc
call
mov
shrb
sbb
push
pop
push
add
cmpsb
pusha
xor
gs
pop
push
repz
bound
push
sbb
out
xchg
stos
je
mov
dec
mov
dec
gs
cs
insb
fdivr
add
xlat
cwtl
popf
pop
cld
sub
or
test
data16
mov
jl
mov
imul
jmp
inc
in
cmp
inc
pop
ret
push
sbb
inc
xor
and
jbe
fwait
mov
xchg
inc
pop
ds
xchg
cmp
mov
pop
xor
push
cltd
jne
xor
or
inc
adc
push
sub
sbb
sbb
dec
popa
mov
pop
dec
sbb
jl
adc
pop
push
lods
dec
daa
xchg
mov
add
jbe
and
jle
sbb
add
xchg
pop
mov
sbb
jae
jp
pop
mov
outsl
out
dec
push
aad
aad
mov
push
hlt
pop
repz
sub
xchg
cmpsl
and
pop
cmp
call
mov
cmpsb
push
nop
dec
cld
mov
js
sbb
fwait
pop
sbb
lret
push
add
daa
cld
xchg
iret
mov
out
pop
jne
cmpsb
loop
mov
sub
inc
mov
ja
xchg
outsl
out
xchg
add
xor
ds
jmp
popa
fiadds
mov
and
or
lret
mov
push
data16
out
andps
stos
mov
imull
mov
and
jg
ret
mov
push
cmp
mov
pop
scas
je
add
mov
sub
jecxz
jbe
and
adc
mov
mov
mov
dec
imul
lock
xor
fbstp
xchg
ret
push
iret
out
adc
mov
inc
test
fildl
mov
pop
mov
push
out
jne
push
mov
mov
mov
loope
xchg
push
mov
fistpl
data16
fimuls
push
inc
jne
addr16
pop
or
jl
lock
cltd
jg
loope
jae
pop
push
sarl
or
add
lret
pusha
jle
push
insb
pop
movq
and
subb
fmuls
jmp
dec
dec
pop
movsb
pop
push
faddl
dec
sbb
sbb
in
aaa
jne
in
cs
shrl
negl
or
data16
clc
gs
fstl
fs
lods
std
icebp
push
push
mov
int
push
mov
jmp
data16
insl
icebp
mov
lods
loop
pop
or
push
inc
mov
int
lret
stos
adc
pop
dec
out
es
jl
xor
aam
sbb
jle
mov
dec
mov
adc
and
mov
enter
pop
or
sub
aam
mov
aam
sbb
inc
aam
arpl
dec
mov
or
ficompl
mov
in
add
arpl
inc
adcb
test
mov
stos
ret
mov
xchg
scas
and
jo
cmc
nop
jae
jb
cmp
mov
test
sbbb
ljmp
lahf
cmp
push
fcmovu
out
cmp
idivb
aam
dec
and
cli
sbb
or
mov
push
std
pop
cmpsb
push
lea
stos
out
sbb
out
xor
push
xchg
mov
add
sbb
jge
xchg
dec
lahf
movb
mov
pusha
test
inc
mov
gs
out
movsb
js
out
mov
gs
sti
enter
mov
jle
jns
mov
cmp
scas
repz
xor
xchg
inc
cltd
inc
leave
stos
and
nop
sarb
cmp
inc
js
iret
and
xchg
in
enter
push
subl
inc
mov
add
xlat
and
outsb
test
cmp
pop
jp
in
add
repnz
iret
pop
aad
mov
je
sub
push
dec
inc
xor
mov
jle
test
adc
movsb
lods
dec
dec
je
stos
inc
dec
sbb
sti
lods
data16
cmpsb
int
sbb
inc
out
sbb
arpl
push
movsl
sahf
scas
mov
sub
adc
cmp
bound
pop
fisubrs
rorl
les
sbb
push
mov
insl
ret
dec
mov
test
popf
jl
dec
cwtl
cld
dec
in
xor
in
xchg
cli
push
xchg
pusha
arpl
lods
sub
das
ja
and
cld
jns
sub
xchg
pop
leave
or
mov
adc
sub
mov
push
xor
outsl
jle
xchg
add
pusha
jne
xchg
cli
sarb
ret
sub
repnz
andb
fmulp
push
sub
testb
mov
dec
leave
xor
lea
cmpsl
pop
popf
mull
sbb
nop
cmp
loopne
sbb
jno
out
mul
int3
sub
fwait
test
xchg
add
jbe
cmp
in
jge
frstor
fbld
out
test
adc
mul
cmp
test
fcomi
sti
dec
push
out
movsb
mov
imull
sti
call
push
pop
paddb
scas
sbb
xchg
addr16
push
sbb
push
xchg
sti
jne
lds
lcall
repnz
mov
loopne
rorl
jns
out
cmp
mov
cmp
dec
or
inc
mov
add
scas
arpl
jo
mov
mov
pop
sbbb
jmp
insl
sti
inc
xchg
push
das
test
jae
dec
lret
mov
pusha
pop
in
ret
xor
jb
push
push
push
mov
out
xchg
fsubrs
or
pop
mov
lods
popf
mov
sub
stos
lock
jge
in
mov
xlat
in
fmuls
orb
sbb
test
mov
in
mov
jp
xchg
into
pusha
das
movsl
out
cmp
sbb
sub
cmp
dec
inc
iret
or
shrl
fsubl
ljmp
sub
aam
or
mov
mov
dec
and
and
std
dec
or
jl
lcall
loop
pop
fstp
xchg
ror
mov
orl
mov
les
movsl
sub
leave
lret
lahf
or
std
push
sahf
negl
test
ss
push
inc
in
push
loope
test
mov
push
cltd
rcrl
xor
pop
jg
xor
jno
xor
cwtl
mov
jne
push
ds
add
dec
sub
push
xor
xlat
cmp
sub
ret
dec
lock
mov
pushf
pushf
pop
ds
mov
outsb
inc
pop
push
sti
loope
cmpsb
jne
imul
jle
fsubrs
lret
int
xchg
pop
sbb
leave
movsl
cli
jbe
enter
rol
enter
dec
gs
pop
cmp
add
or
in
call
clc
int
push
pop
nop
add
jmpw
xor
repz
jb
mov
and
add
int3
jg
jno
sbb
testb
ss
out
repz
pop
mov
hlt
in
or
dec
jecxz
andl
push
in
dec
into
rcll
sub
aad
ds
push
fistpl
arpl
add
lds
xor
jno
cltd
lods
stos
imul
or
icebp
enter
ds
es
adc
ss
jp
clc
sbb
sbb
subl
flds
sbb
xor
fistl
out
popa
adc
out
imul
test
mov
in
push
dec
sysret
int
xchg
test
xchg
push
fldl
jg
stos
mov
sub
popa
mov
dec
cmpsl
jb
xor
addr16
xchg
add
adc
sub
daa
in
cli
xchg
insl
orl
cltd
lret
or
pushf
lods
sahf
jae
pop
push
pop
fisttpl
jns
iret
push
inc
dec
adc
jo
jp
js
jbe
dec
ss
les
or
cwtl
bound
pop
or
inc
push
pop
inc
rcrl
inc
jmp
dec
lods
xor
or
int
xchg
mov
cmp
sub
lea
xor
mov
push
stos
adc
scas
std
dec
push
push
loop
jne
mov
nop
jns
into
mov
adc
pop
xchg
push
fistl
enter
cmp
mov
notl
cld
pop
inc
imul
jl
mov
inc
and
jl
arpl
stc
insl
jne
sbbl
dec
popa
adc
push
test
and
out
test
push
repnz
jb
push
mov
cwtl
in
dec
pop
xlat
mov
xchg
ds
fld
out
cmp
xlat
mov
insl
xor
xchg
fs
adc
stos
mov
clc
push
stos
test
jae
in
es
add
movsl
sub
ds
xor
push
xchg
fisubs
sub
shlb
cmp
jno
jp
and
and
xchg
xchg
xchg
push
adc
cli
xchg
pusha
aaa
std
cmp
fwait
je
adc
push
leave
aaa
push
and
cld
mov
daa
cmp
mov
outsb
cmp
fstpl
repz
stos
rcrb
mov
sbb
sbb
movsb
mov
and
mov
dec
mov
js
cltd
push
mov
gs
inc
es
inc
scas
je
lods
fisttpll
push
fcomps
adc
stos
push
ljmp
aas
push
hlt
adc
xchg
mov
movsb
dec
mov
xchg
push
adc
lods
sbb
sub
inc
clc
outsb
dec
push
adc
call
sbb
repnz
cmp
xchg
mov
mov
dec
mov
loop
pop
out
pop
mov
mov
sub
jg
lahf
jle
pop
mov
pop
sub
hlt
mov
inc
or
or
mov
mov
sub
push
in
mov
sbb
scas
mov
lea
rorb
in
add
punpcklwd
lods
jle
sub
mov
xchg
rcrl
or
sti
fdivrl
or
jbe
inc
repnz
sbb
and
lret
inc
and
adc
mov
mov
loop
ret
push
push
pop
cwtl
out
bswap
outsl
pop
test
dec
jle
es
cld
mov
popa
les
imul
xor
rorb
jns
imul
xchg
sub
fwait
xor
inc
test
mov
jne
fmuls
mov
inc
jp
aas
mov
or
loope
lcall
mov
mov
xor
leave
ds
jge
xchg
xchg
lods
pop
inc
push
push
cmp
and
movsl
fimull
push
mov
mov
addr16
inc
pop
ja
fsubrp
test
pop
test
or
xor
pop
inc
mov
jae
in
sub
outsl
dec
and
and
jno
icebp
scas
push
dec
or
dec
ds
mov
sub
out
and
pop
mov
sub
jo
mov
cli
push
pop
les
mov
or
in
jb,pt
or
push
cld
mov
nop
jl
test
shlb
xor
mov
fs
sarl
rolb
push
mov
xchg
and
push
data16
sub
iret
dec
mov
push
rolb
xchg
fldl
xor
or
test
iret
or
xlat
mov
lret
push
lea
mov
or
mov
pop
repz
cmp
int
ds
rcl
jb
jmp
dec
and
test
jne
xor
dec
pop
pop
rcll
and
inc
clc
adc
mov
mov
jl
aas
cmp
xchg
enter
mov
aad
stos
pusha
mov
sub
xchg
out
cltd
mov
lret
dec
adc
iret
repnz
inc
pop
pop
pop
sub
jbe
adc
jl
mov
sahf
xchg
negl
jns
jp
pop
test
divl
inc
fildll
inc
popa
mov
leave
loop
push
prefetchwt1
or
clc
insl
in
jns
fisubl
enter
mov
xchg
push
mov
xor
xor
loope
push
jns
dec
push
jecxz
lahf
and
dec
std
jo
aas
sub
out
adc
xor
shll
rclb
jle,pn
test
mov
imul
pop
or
imul
nop
repnz
jle
mov
ja
outsb
jae,pn
gs
test
jle
ficompl
inc
fisubs
xchg
push
aam
sarb
sahf
dec
jecxz
xor
mov
fldl
fimull
inc
shll
xor
or
or
outsb
orb
mov
imul
sti
movsl
xchg
bound
hlt
cld
inc
jae
push
adc
cld
int3
xchg
pop
and
mov
mov
fstl
fildl
dec
adc
sti
or
mov
dec
aam
es
into
adc
mov
push
lods
push
es
mov
sarl
jg
aam
repnz
pop
and
lods
out
xchg
loopne
std
cld
cmp
cmc
nop
mov
testb
xlat
inc
push
int3
pop
or
and
push
jp
add
or
pop
pop
inc
addr16
rcr
lock
sub
adc
push
sbb
mov
jg
push
xor
dec
mov
xor
cli
sub
loopne
mov
int
cmpsb
mov
push
xchg
test
mov
outsb
repnz
mov
sti
or
push
sbb
addl
xchg
and
shll
adcb
jp
addr16
mov
and
jne
push
jp
push
pop
pop
rcrl
push
jo
push
lds
push
test
rcl
adc
stc
pop
in
push
adc
or
movsb
popa
stos
lret
push
lods
ret
mov
iret
xchg
xor
repz
rolb
dec
jo
xchg
mov
add
xor
xor
lahf
daa
inc
sbb
add
int3
pop
adc
push
ret
aaa
add
pop
mov
and
std
lods
test
int
ret
je
hlt
adc
shrl
push
sti
stos
mov
dec
int3
add
jmp
bnd
ja
das
sub
xchg
xchg
faddl
mov
insl
xchg
pop
xchg
ret
popf
mov
fwait
addr16
mov
popa
cli
sub
sbb
shll
int
ljmp
xchg
test
mov
sbb
xor
xchg
push
push
mov
divb
ss
jbe
xchg
cmpb
sbb
int
jle
xchg
icebp
bound
int3
or
insb
adc
mov
add
ret
cs
lret
pop
andl
repnz
mov
push
pop
cmp
in
cmp
lret
xchg
stc
daa
sbbb
cmp
arpl
or
stos
int3
mov
cmp
leave
sbb
movsb
mov
hlt
aas
aas
mov
jb
mov
lret
push
lahf
cmpsb
adc
cmpsl
stc
fs
inc
inc
das
sub
fdivl
sub
sub
and
push
ss
jecxz
add
xchg
hlt
mov
adc
pop
xor
dec
mov
sbb
ficompl
int
xchg
fs
cld
test
ss
pop
test
es
enter
sub
push
push
lock
mov
fimuls
or
mov
cmp
mov
ljmp
dec
or
mov
or
cmpsl
sub
lcall
mov
pop
lcall
repnz
adc
aaa
jo
es
hlt
sti
mov
xor
fxch
sti
loop
and
repnz
mov
sub
gs
test
mov
jb
or
cmp
xchg
ret
outsb
push
jnp
xchg
stos
imul
cmpsl
inc
lret
sti
cs
xor
scas
test
fdivrp
mov
dec
jb
in
jl
addr16
push
and
clc
dec
xor
decb
cmp
pop
cli
in
scas
or
inc
mov
add
add
sub
fcmovnbe
mov
repz
pop
popf
test
adc
insl
ss
mov
aam
lahf
jno
rorl
mov
add
push
mov
jl
pushf
sub
pop
push
subb
in
push
sub
mov
mov
xor
cmp
sub
lahf
dec
cmp
daa
cwtl
in
out
mov
rolb
sub
pop
fs
scas
pusha
jmp
push
xor
data16
mov
dec
and
push
lods
xor
repnz
ret
loope
lods
test
cs
jno
lcall
out
xor
pop
adc
scas
sub
stos
lock
fdivrl
pusha
dec
je
add
adcl
jb
jl
lock
inc
adc
xchg
xor
pop
mov
incb
mov
xchg
dec
mov
jno
xchg
sbb
xchg
mov
adc
pop
icebp
arpl
xchg
mov
xor
add
lea
cli
mov
cmc
xchg
bnd
dec
imul
lods
mov
xor
test
ljmp
and
pop
mov
call
jmp
popf
leave
cmp
adc
gs
insb
pop
pop
mov
das
sub
fcoml
xor
sahf
pop
jo
mov
mov
ret
loopne
fbstp
mov
or
sub
xchg
or
and
xor
out
pop
cmp
mov
and
movsb
xchg
sbb
jge
ret
arpl
pop
in
mov
repnz
dec
or
mov
push
xchg
push
adc
lcall
popl
cmp
aas
lahf
jge
xchg
jbe
adc
push
pusha
cs
jno
jp
push
rclb
xchg
cmp
cmp
ja
mov
test
mov
sub
and
adc
sbb
fs
pop
jbe
ds
cmpsl
in
pop
repz
or
cmp
dec
addr16
daa
add
dec
xchg
jecxz
je
xor
xor
inc
sbb
pop
mull
sub
pop
fstl
stc
xlat
js
imul
ret
inc
test
inc
push
ljmp
cld
pusha
insb
aad
mov
ret
pop
repz
pushf
dec
and
xchg
int
push
lods
sbb
enter
test
xchg
popa
rcrl
pop
mov
rolb
stc
mov
ss
aad
mov
arpl
push
andl
aas
pop
xlat
mov
insl
ds
dec
cmc
in
adc
or
mov
dec
sub
cmp
jae
xchg
cmp
loope
dec
pusha
lret
es
pop
xchg
js
push
xorl
ljmp
fcompl
push
inc
imul
lock
sbbb
sub
jp
nop
test
cltd
call
cmpl
mov
stos
inc
out
push
xchg
out
xor
int
xchg
aad
cmp
ja
ror
pop
mov
cwtl
aad
cld
pop
hlt
pop
push
mov
jb
cltd
or
das
dec
mov
pusha
movsb
jmp
xchg
or
fidivrs
les
adc
or
xchg
add
mov
loopne
enter
cld
leave
neg
sbb
push
testb
mov
popa
or
xchg
adc
fdiv
and
mov
and
or
xchg
sbb
sbb
xchg
arpl
and
punpckhwd
mov
cmpsl
js
pop
pop
adc
mov
hlt
stc
shl
stc
xlat
loopne
push
cmp
into
xchg
sti
inc
ret
ss
cld
dec
leave
sahf
nop
cli
movsb
mov
sub
rcrb
push
cltd
icebp
mov
fsubl
addb
pop
sti
sub
sti
lret
xor
popf
pusha
mov
adc
ss
mov
push
testl
shrb
pop
adc
dec
or
push
jmp
js
inc
shr
mov
mov
cld
test
out
sbb
sbb
hlt
and
sti
sub
pop
cltd
jecxz
aaa
mov
test
jecxz
js
es
fidivrl
mov
xchg
pop
les
push
pop
add
push
int3
sbb
jbe
lods
pop
out
rsqrtps
pusha
ja
jl
mov
dec
cmp
pcmpgtb
je
ds
fildl
outsl
aaa
mov
je
jl
and
psrld
cmp
add
rcrb
and
xchg
add
mov
and
leave
pop
sub
icebp
mov
fsubrs
loope
imul
mov
leave
daa
xchg
arpl
in
aam
enter
insl
loope
cmpsb
imul
add
scas
cld
jne
hlt
pop
pop
dec
lret
bound
dec
gs
lret
mov
jo
xchg
mov
lret
ret
cli
xor
fiadds
into
lea
xchg
in
enter
test
xor
xchg
pslld
push
adc
sub
pop
sbb
add
xor
inc
jp
in
cld
aad
pop
mov
insl
xor
sbb
stos
sbb
seta
test
or
stc
sub
and
lds
jge
xchg
out
scas
imul
into
call
adc
sti
inc
ljmp
push
cmp
sub
jp
ret
insb
pop
cmp
jb
mov
mov
fidivrl
xchg
pop
negb
hlt
or
dec
test
cmp
pop
sub
mov
dec
fistpl
roll
pop
cld
add
jne
cmpb
out
push
repz
rol
rorb
lds
test
or
and
cli
xchg
les
fdivl
dec
cli
cmp
push
lcall
cmp
jae
mov
xor
push
outsl
mov
leave
xchg
mov
mov
pop
add
mov
neg
push
dec
adc
test
xor
sbb
popa
call
lcall
mov
leave
sbb
dec
popf
into
loope
sub
mov
rolb
adc
add
adc
cli
std
xlat
fcomps
dec
std
jns
xchg
adc
clc
fs
xchg
mov
scas
ret
add
xchg
test
or
fisubl
mov
mov
dec
or
mov
xchg
dec
sub
xchg
push
xlat
jmp
push
adc
sub
aad
mov
cmpsb
lcall
mov
sub
addr16
sbb
inc
ljmp
add
jecxz
incl
and
fisttps
in
and
or
int
add
mov
xchg
pop
enter
sub
out
lds
jl
inc
frstor
mov
lds
adc
ljmp
dec
adc
imul
sub
andb
xor
cmpsl
cmc
sub
mov
in
push
rclb
ss
int3
in
pop
sbb
xchg
flds
fsts
sbb
jb
sbb
pushf
ds
sahf
mov
test
cmpl
and
arpl
repnz
pop
mov
arpl
dec
add
xor
push
repz
fwait
jle
and
rcl
mov
lods
out
mov
push
mov
lret
lret
cmpsl
aaa
mov
push
push
iret
push
ljmp
in
negb
cltd
ljmp
cmp
dec
jae
out
xor
fnsave
mov
push
add
sbb
add
test
in
xor
sub
cmp
add
inc
int
loope
cmp
push
cmpb
int
xor
aas
ret
ja
cli
out
mov
push
mov
xchg
xor
inc
mov
cmp
lock
jne
pop
nop
in
push
ds
lahf
xchg
outsb
out
and
or
add
adc
test
mov
clc
sbb
pop
mov
cltd
mov
jne
iret
sub
fidivs
cld
scas
nop
inc
mov
inc
cmp
or
lahf
cmp
or
imul
loopne
leave
sub
sub
test
or
bound
jmp
iret
clc
aad
push
popa
push
fmull
push
add
mov
je
xchg
jbe
clc
call
popf
pop
dec
jle
lahf
sbb
pop
test
in
push
cmpl
fcoms
pop
jno
cld
test
mov
movsl
xchg
mov
js
jg
xor
mov
arpl
sub
push
cmpsb
jbe
in
sub
adc
cwtl
inc
xchg
add
mov
xchg
into
xchg
movsb
and
das
je
lahf
inc
int
mov
xor
inc
pop
repz
aam
jnp
mov
andb
dec
cld
mov
push
cs
mov
fmull
lods
cwtl
fists
addr16
sub
adc
loope
lahf
test
out
loop
sub
pusha
aas
ret
sbb
jp
nop
mulb
dec
arpl
fsubl
out
xor
ja
add
dec
push
sar
push
or
jno
or
mov
sbb
jg
push
orl
shr
ret
out
icebp
push
rcll
cmp
les
pop
jge
mov
pop
outsl
mov
mov
xchg
js
inc
or
lret
lds
mov
sbb
movsl
pop
adc
std
lods
movsb
dec
cltd
fldt
inc
sub
pop
cmpsb
movsb
or
adc
cld
inc
stos
sub
fcomps
push
je
push
sub
push
repnz
lahf
cld
mov
jg
mov
jnp
cmp
mov
js
test
push
cmc
inc
lods
loop
and
pmulhuw
ds
clc
clc
xchg
inc
jno
enter
add
and
and
pop
xor
sub
push
jp
cmpb
sub
mov
xchg
adc
cli
loop
outsb
jnp
xor
pop
pandn
cmp
and
cmp
fwait
inc
inc
jg
sbbb
or
xor
mov
push
mov
cs
mov
push
inc
in
mov
or
loop
lds
arpl
enter
shrb
test
cmc
cwtl
xchg
pop
jecxz
dec
ja
pop
sbb
xor
cwtl
inc
inc
push
or
cli
aas
sahf
div
cli
mov
dec
and
lods
add
add
clc
into
ret
push
fidivl
jp
or
cmpsl
mov
push
insb
dec
outsl
jo
xor
dec
jmp
sub
or
stos
adc
cmpb
shrl
push
xor
jg
in
popf
imul
icebp
pop
vpandn
ret
mov
sbb
push
lods
mov
je
and
jo
cmp
jb
xchg
dec
aam
jns
orb
xchg
orb
dec
xor
subl
lea
scas
sti
cmp
push
int
mov
and
mov
lds
mov
cmpsl
xor
mov
daa
sbb
sub
aam
mov
mov
in
out
xchg
repz
aas
faddl
jle
icebp
fidivs
xchg
out
jnp
xchg
lret
sub
xchg
popf
or
push
jne
fs
das
jae
lock
ljmp
add
xor
rolb
pop
sbb
orl
xchg
pop
stos
lods
int
pop
sbb
data16
adc
sub
mov
inc
pop
cltd
push
addb
dec
mov
fstps
scas
daa
lea
outsl
or
insb
fsubrl
fisubl
lret
out
cli
adc
test
sbb
fisttpl
icebp
icebp
or
mov
xlat
icebp
push
out
aad
xor
mov
jp
cmp
in
mov
xchg
scas
xchg
mov
sbb
jle
repz
js
mov
or
loopne
mov
push
daa
psadbw
fcmovu
adc
dec
xchg
xchg
sbb
fimull
dec
out
sbb
scas
shrb
inc
mov
xlat
idivl
cmp
mov
ret
cmp
jmp
jo
sbb
jnp
fcoms
lods
in
popa
in
dec
jp
pushf
int3
jp
and
pop
movsb
les
in
mov
iret
fs
out
in
mov
cmpsl
in
push
xor
fisubrs
fistpll
mov
jmp
pushf
jmp
out
leave
xchg
out
test
outsb
ret
ret
add
jg
addr16
loopne
out
pop
cwtl
fs
rorb
xchg
clc
es
leave
aad
mov
and
mov
sub
call
mov
lods
push
ja
and
clc
in
pushf
lret
add
pop
popa
fdivs
push
sub
dec
xchg
inc
and
pop
aam
out
in
shrb
aam
inc
das
test
movsbl
movsb
out
pop
xor
stc
sti
push
push
sbb
ret
lret
repnz
int
out
jae
js
insb
push
jecxz
icebp
adc
mov
ret
mov
push
popl
mov
add
xor
jb
mov
stc
clc
clc
pop
xchg
xor
jmp
test
mov
adc
addr16
and
push
or
and
mov
xor
in
addl
mov
icebp
xchg
push
test
mov
xchg
sub
call
push
pop
push
mov
mov
outsl
pop
scas
cmp
jne
not
jae
mov
fsts
sub
sub
xchg
pop
mov
lock
test
pop
or
push
or
mov
dec
or
ds
cmpsl
hlt
in
in
enter
adc
push
ss
aas
dec
sub
out
xorl
or
pop
dec
outsb
sbb
data16
sub
dec
sbb
xor
xchg
and
sub
xchg
or
bound
xchg
cmp
xor
shlb
ror
bound
adc
fcomps
cmp
mov
pop
sbb
and
xchg
or
bound
data16
xor
repz
addr16
xor
scas
mov
ljmp
mov
sbb
test
mov
out
sub
sbb
push
add
clc
bound
movsb
movsb
sub
add
test
fldenv
xchg
mov
arpl
sbb
sub
sbb
add
push
cmpsb
adc
adcb
loop
lods
mov
fisubl
addl
ljmp
pop
jbe,pn
mov
loopne
cmc
push
loop
pop
add
cmpsl
adc
fcomps
pop
imulb
test
les
popf
jecxz
test
and
pmullw
cmp
add
adc
jmp
je
mov
dec
adc
ljmp
mov
cwtl
insl
jmp
movsb
xchg
cmp
push
cli
sbb
dec
xor
jmp
repz
pop
pop
add
fldcw
jns
testl
sub
clc
or
jmp
sub
outsl
imul
sbb
xchg
sbb
dec
or
inc
insb
and
mov
out
jecxz
dec
mov
ret
arpl
nop
push
sti
mov
mov
pop
push
mov
xchg
sub
jl
jno
icebp
pop
aaa
insl
enter
push
xchg
xor
clc
fnstenv
leave
xchg
xchg
js
sub
mov
and
ret
pmulhuw
mov
sub
cld
mov
ljmp
sub
sbb
insb
jnp
icebp
out
add
push
adc
popf
inc
lods
add
mov
test
mov
rorb
cli
inc
lds
test
fldt
fcomip
xor
int3
jb
dec
fmull
cmp
addr16
pop
jl
or
mov
sub
xor
adc
enter
xchg
push
stos
stc
cltd
mov
cmp
aaa
sub
movntps
out
sbb
clc
mov
subb
ss
cs
cmp
scas
dec
cmpl
ds
or
xchg
inc
jge
xlat
pop
mov
sbb
sbb
inc
cmp
adc
pop
dec
pop
pop
test
push
wbinvd
adc
mov
std
icebp
add
jl
sti
mov
cmpb
es
repnz
xchg
mov
adc
xor
arpl
or
data16
mov
inc
mov
and
imul
add
cmpsb
leave
call
xor
cmpsb
mov
int3
cmp
and
push
push
loop
add
push
inc
repz
inc
lock
sahf
fstl
cs
jmp
dec
inc
not
or
test
pop
enter
in
jnp
insb
imul
mov
or
add
mov
jmp
test
pop
xorl
push
cld
pop
adc
stc
push
ror
lods
xor
sbb
sub
in
loope
loope,pt
inc
push
add
and
mov
enter
aas
pop
iret
out
and
out
or
push
stos
inc
fsubrl
push
in
mov
jecxz
fwait
je
or
fcmovne
mov
nopl
test
xchg
fsts
popa
mov
dec
test
push
pop
filds
add
stos
jns
push
add
jle
insl
dec
leave
add
pusha
sbb
mov
ret
add
imul
aaa
xchg
inc
fimuls
sub
sub
cwtl
les
pop
and
insb
jecxz
scas
test
shrb
popf
jns
test
pop
push
cmp
sub
inc
or
inc
scas
pop
es
push
call
xor
fnsave
jl
cltd
mov
gs
shl
imul
jmp
mov
lret
jb
ja
xor
xchg
pop
mov
pushf
leave
jmp
sbb
pop
xchg
sbb
jns
adc
mov
inc
movsb
in
xor
jmp
and
fcoml
call
push
dec
push
fcmove
inc
mov
aam
xchg
pop
push
aas
and
fmull
adc
and
hlt
int
jmp
push
inc
aam
inc
jp
sub
pushf
aas
bswap
fstl
pop
pop
pop
mov
push
push
cmp
mov
cwtl
test
mov
jo
roll
adc
es
shll
out
aaa
push
test
mov
test
jno
imul
jl
sub
fsubs
scas
jg
je
and
les
scas
jbe
mov
push
xor
stos
in
adc
pop
sbb
iret
adc
ret
imul
mov
cli
sub
into
cmp
dec
aaa
ds
pop
pop
repz
push
xchg
sub
mov
jne
or
aas
leave
hlt
loopne
mov
loop
xchg
push
int3
pop
push
mov
cmpsb
js
mov
push
dec
mov
decl
pop
and
jle
test
fisubl
mov
sub
ret
pop
call
imul
mov
and
pop
cmp
rcr
or
xchg
dec
add
movsl
xchg
shl
rcll
jle
dec
xchg
adc
outsl
nop
cmpsl
adc
add
pop
xchg
push
in
push
sub
stc
pop
test
mov
rorl
and
in
inc
dec
shl
add
ss
fwait
les
xlat
es
push
add
cmp
add
push
stos
and
imul
iret
jl
add
adc
mov
adc
mov
fimull
cli
pop
mov
inc
std
xchg
dec
jno
test
stos
leave
dec
add
rolb
and
and
nop
orb
lea
aas
dec
jbe
fnstsw
mov
push
lods
xchg
jle
sti
daa
in
add
je
inc
mov
push
sbb
push
aaa
mov
and
sahf
mov
mov
cmp
jle
xor
dec
hlt
push
jns
inc
adc
in
leave
rclb
out
fstps
or
in
mov
pop
cmpsb
rclb
daa
cmc
sbb
pop
or
icebp
add
cmp
add
xchg
add
xor
xlat
cmc
mov
dec
stos
xor
jmp
jo
push
cmc
add
jl
ss
mov
fs
aas
jno
pop
scas
insl
dec
lea
cli
leave
lock
cwtl
icebp
bound
jb
leave
pushf
and
das
sarb
add
repz
mov
xor
fmull
pop
sti
in
jecxz
pop
fdecstp
in
xor
inc
dec
imul
pop
push
daa
or
jnp
in
mov
aas
gs
cli
fwait
add
mov
jle
mov
in
mov
inc
dec
imul
jmp
xchg
test
push
sub
adc
and
outsb
xchg
data16
fdivr
cmp
decb
push
push
pop
cmp
mov
or
popf
iret
push
ja
xor
in
clc
mov
cmpsb
mov
dec
jo
call
lods
inc
push
fstl
cmpsb
push
stc
testb
lock
cld
scas
pusha
daa
sti
icebp
movsb
xchg
loopne
mov
mov
les
lock
jb
jns
sbb
lods
pop
aam
jne
nop
cmp
ret
aaa
aas
xchg
jmp
dec
cmp
ret
and
inc
test
mov
out
mov
hlt
pop
adc
call
jmp
cmp
sub
and
adcl
lahf
mov
inc
add
jle
sti
adc
or
aas
jne
or
xchg
mov
xor
popf
add
mov
sub
push
add
fmull
ret
loope
jno
in
enter
mov
adc
push
cmpsl
push
inc
int
in
stc
xchg
and
mov
cmp
mov
cmc
test
and
sbb
jno
stc
dec
int3
je
jl
idivl
mov
xor
scas
inc
movsl
sub
insl
int3
sbb
jns
mov
mov
fs
push
xchg
sti
lea
push
repz
gs
stos
pop
aad
jno
xlat
xor
mov
xor
out
aam
jp
rcr
pop
inc
std
xchg
mov
std
inc
mov
js
mov
and
lock
xor
sbb
cmp
leave
xor
call
cltd
notb
push
pop
into
je
mov
fbld
mov
aaa
repnz
insl
rsm
xchg
cmp
push
stos
nop
lea
cmc
sarl
in
push
mov
dec
inc
cwtl
js
rcrb
gs
gs
jne
xor
mov
mov
lcall
add
push
pop
rolb
pop
cmp
dec
inc
cmp
call
inc
jne
sti
shrl
mov
mov
flds
mov
mov
xor
iret
sti
mov
and
out
push
pop
fidivrl
xlat
sub
inc
push
js
inc
pop
add
rcl
fsubrl
pop
mov
and
xor
in
ret
cli
ficoms
jmp
cmp
adc
xor
cmp
and
jns
popa
out
mov
out
cmpsb
imul
movsl
fistpl
mov
cmpsl
push
loop
enter
pop
pop
test
jae
decb
jo
mov
dec
add
adc
add
cmpsb
leave
sbb
pusha
aaa
aad
lcall
in
xchg
lock
std
lock
mov
sahf
cmc
jmp
mov
ljmp
jecxz
arpl
and
jbe
popa
cmp
jb
xor
mov
jmp
jl
xor
or
ljmp
mov
pop
fisubl
imul
scas
jmp
outsb
and
xchg
hlt
lahf
lret
jmp
mov
xor
xchg
call
or
cwtl
or
pop
les
iret
incb
inc
mov
enter
jmp
aam
xchg
enter
pop
stos
xor
div
in
cld
ds
xchg
push
addr16
xchg
cmp
dec
addb
aas
rorl
mov
test
scas
and
jb
xor
loopne
leave
popa
pop
outsl
lock
xchg
mov
or
pop
push
push
cmovle
bnd
inc
inc
ljmp
fnstenv
dec
adc
imul
imull
imul
loopne
jmp
adc
test
jns
lock
push
mov
testl
add
sahf
filds
inc
inc
repnz
jmp
mov
ja
jnp
ret
jns
fisubrl
loope
cltd
rcrb
pop
push
pop
int
pop
xchg
sahf
inc
add
iret
mov
xchg
loope
mov
or
add
dec
enter
or
push
test
add
dec
mov
add
pop
mov
subb
out
sbb
cmpsb
pop
push
mov
or
stos
inc
shrl
gs
mov
nop
pop
test
cmpsl
xor
or
out
sbb
mov
cmpsl
xchg
mov
test
xchg
jbe
ds
mov
xor
loop
xor
stos
or
cmp
pop
shl
xor
xchg
mov
dec
test
lret
push
xchg
lret
in
xor
pop
push
scas
cli
inc
lock
push
fwait
push
sar
push
ret
xor
cli
jb
and
mov
ds
out
sahf
pop
mov
bound
and
into
sub
sub
stc
cmp
cmp
aam
mov
in
xor
loop
lods
mov
imul
adc
inc
std
mov
scas
jae
movhps
xchg
cmp
scas
jl
rorb
sahf
fsubs
add
push
mov
cltd
lret
xlat
xchg
or
add
test
enter
lds
jne
pushf
xor
adc
adc
jne
fyl2x
sbb
mov
js
pop
jle
mov
mov
and
js
xor
adc
les
push
mov
call
inc
push
bnd
add
imul
rorl
cwtl
rcr
jo
xorb
cmc
ss
mov
jp
ljmp
and
gs
push
add
jne
in
enter
dec
xor
or
add
xchg
loop
mov
mov
roll
and
shrl
jae
dec
bound
dec
sbb
sarb
xor
push
pop
loopne
int3
fnstsw
mov
add
mov
cmp
jp
aad
and
je
ljmp
inc
fmull
pop
xor
clc
imul
ja
icebp
rep
inc
adc
dec
and
inc
into
mov
pop
imul
dec
lret
adc
xchg
jns
cmp
out
leave
jns
adc
shll
xchg
and
xchg
or
dec
mov
inc
push
sbb
sub
shrl
pushf
in
and
fisubs
and
pushf
mov
outsb
stos
mov
rol
out
outsb
xor
lea
sbb
pop
stos
mov
bound
and
adc
fwait
dec
xor
ss
jg
hlt
dec
mov
dec
popf
in
dec
jmp
push
xor
bound
clc
push
jbe
jae
inc
mov
cmp
mov
aaa
clc
xchg
test
mov
mov
cmp
addl
and
inc
jb
pop
add
jl
je
jmp
lea
cmp
fisubl
popf
cld
arpl
adc
out
fisttps
sub
cmp
jno
xchg
inc
hlt
clc
adcl
adc
sbbb
jnp
inc
lret
jmp
in
inc
dec
repz
and
call
xchg
inc
jne
lcall
jmp
lods
sbb
pop
pop
mov
mov
aam
out
dec
movsb
push
add
mov
imulb
lods
mov
mov
push
mov
inc
jne
ljmp
fbstp
mov
mov
xor
cmpsl
adc
ret
xchg
rcrl
pusha
lahf
test
push
xchg
mov
stc
xor
pusha
sbb
pop
stc
fsts
out
ljmp
fldcw
pop
adc
daa
add
shl
mov
cmp
fdivs
and
stos
mov
mov
lret
sbb
inc
pop
adc
lock
xchg
inc
sub
sbb
cld
cmp
xchg
sub
adc
subl
nop
insb
enter
fdivrp
mov
ja
pop
loope
nop
push
cmpsl
fdiv
or
loop
sahf
outsb
mov
sbb
sbb
clc
lods
jns
push
xchg
push
jge
xor
inc
imul
lods
adc
fstpt
pop
pop
es
stos
inc
cmp
xor
mov
rolb
aaa
sbb
push
nop
data16
mov
sub
xchg
inc
sub
les
mov
jae
mov
pop
fmull
movsl
pusha
sbb
pop
loope
es
gs
inc
adc
shrl
insl
hlt
lock
pop
ret
cmp
pop
and
cmpsb
add
xchg
pop
fs
adc
mov
push
sbb
mov
aaa
enter
sub
notl
pop
mov
jmp
mov
repz
xor
xor
mov
xchg
cmpsb
add
push
push
sub
stc
clc
ret
push
jb
push
jae
pop
inc
scas
imul
jle
cmp
mov
repz
fstpl
inc
mov
mov
sahf
sub
adc
mov
dec
sahf
lret
loope
imul
xor
inc
rcrl
repz
mov
sahf
loope
mov
xchg
js
js
sahf
jp
inc
pop
xorl
pop
outsb
push
cmp
jg
dec
movsl
mov
adc
jns
cmc
or
mov
inc
cltd
bound
mov
xor
testl
or
test
inc
xor
add
mov
dec
pop
sub
xor
adc
xchg
in
jmp
xchg
clc
out
sahf
pop
ficomps
repnz
and
pop
sbbl
push
xor
dec
cs
repz
mov
mov
push
and
fs
out
mov
jns
jne
inc
loop
jecxz
fucom
sbb
and
sbb
xlat
sub
hlt
dec
aam
inc
cmp
hlt
arpl
mov
mov
ftst
rcl
mov
fadd
cmp
imul
inc
cmp
push
ret
test
cmpsl
shlb
out
xchg
push
gs
pop
test
adc
sbb
cmp
jle
notb
xor
push
out
xchg
fists
inc
imul
dec
fidivl
mov
jne
dec
ljmp
push
adc
fbld
cmc
mov
xchg
ds
cmpsl
xlat
or
cld
fwait
aam
insl
loopne
xor
out
ficoms
inc
pop
sub
adc
pop
arpl
addb
xor
cmp
iret
aas
lea
out
addr16
jne
and
out
ds
pop
xchg
stos
mov
xor
inc
loope
cmc
rolb
mov
sbb
jp
lcall
cmpsb
jle
jb
add
jmp
daa
mov
sub
cltd
xor
xchg
repz
stos
cmpsb
mov
pushf
cmp
push
mov
aaa
aad
icebp
inc
loope
stos
imul
jb
je
xor
cli
int3
sbb
cmp
cmp
dec
add
xchg
popf
dec
cmpsl
stc
push
nop
xchg
xlat
mov
shll
add
iret
add
sub
jo
je
mov
int3
aam
repnz
mov
xchg
sbb
xor
inc
mov
fwait
mov
cmp
movsb
dec
jecxz
in
jmp
pop
sub
fdivl
rorl
jbe
adc
xchg
mov
cmpsb
jnp
adc
lea
shrl
mov
jecxz
mov
enter
jae
cs
mov
adc
sbb
lret
out
jo
stos
mov
xor
sbb
dec
dec
loopne
add
add
sbb
movsb
fstpt
pop
fwait
sbb
std
sbb
jb
pop
sub
inc
test
inc
lahf
adc
or
test
cs
rcll
push
sub
fisubrs
das
jecxz
xchg
movsb
mov
mov
and
xchg
push
sbb
fs
and
cld
add
mov
pop
add
mov
mov
icebp
pushf
sbb
dec
jne
pop
dec
xchg
icebp
pop
outsw
loopne
pop
popa
push
into
lret
xor
fisttps
mov
clc
addr16
mov
movsl
dec
rorl
in
call
and
xchg
xchg
pop
jno
sub
stos
cmp
dec
leave
inc
pusha
adc
mov
cmc
mov
scas
adcl
sbb
xchg
fs
shlb
negb
js
ljmp
push
push
xorl
jp
mov
shlb
add
fstl
add
mov
sub
cltd
and
test
mov
fmul
cltd
in
inc
ds
clc
sbb
mov
xor
mov
sub
das
gs
pop
xchg
mov
and
adc
dec
loop
pop
xlat
xor
loopne
sbb
decl
imul
imul
adc
mov
or
sti
lods
xchg
cmpsb
stc
jno
pushf
inc
pusha
bound
les
lahf
dec
sbb
xor
or
jne
xchg
sub
push
and
insl
jae
dec
xor
or
out
push
mov
aad
fsts
pop
je
adc
lret
ret
sub
test
cmpsb
xchg
mov
insl
loop
cmp
cmp
arpl
call
stos
scas
lods
movsb
cmp
ljmp
cmp
inc
std
sahf
push
xchg
lret
inc
popf
enter
inc
ficompl
das
lock
add
push
cmp
lds
push
adc
sti
adc
mov
xor
outsl
adc
lock
aaa
ja
movsb
and
adc
pop
push
es
push
imul
mov
iret
jecxz
jbe
sbb
cmc
sbb
jle
adc
xlat
cmp
push
popf
jl
sbb
ficoml
sahf
sbb
aad
cmp
adc
cli
rcrl
xchg
pop
call
repz
loop
pop
mov
cld
shrl
push
jno
mov
mov
mov
xor
xor
repz
inc
cs
addr16
push
mov
lahf
shr
lcall
and
sbbl
sub
push
loopne
aas
dec
mov
idiv
ja
sbb
and
sti
pop
pop
cmpsl
jae
fucompp
leave
cmc
inc
push
adc
xor
pushf
mov
pop
fsubr
adc
cmpsl
xchg
cmp
stos
inc
adc
shrl
inc
mov
cmp
or
pop
or
inc
int3
cmp
inc
add
sub
cmpsb
int
push
icebp
cmp
xor
lahf
pop
loop
or
and
fs
clc
push
xchg
popa
flds
pop
or
hlt
mov
cwtl
fs
test
and
push
int
xchg
ret
adc
lea
addr16
cld
sub
mov
sbb
and
sbb
sub
jl
shll
sub
fs
jo
mov
scas
or
inc
shlb
dec
incl
out
sahf
shl
out
inc
push
clc
push
pop
idiv
ja
pusha
ret
ret
cld
insl
or
or
ret
adc
push
cmp
adcl
divl
movsb
inc
rcrl
sub
xchg
add
jne
ss
sub
loope
out
and
repnz
cmpsl
adc
cmp
xor
jbe
adc
and
pushf
out
cmp
mov
cmp
ljmp
or
icebp
or
in
ficomps
je
push
and
test
jae
mov
adcl
pusha
addl
lods
and
movsl
aas
jnp
add
mov
cmp
imulb
cs
mov
cmp
cmp
out
add
mov
cmc
add
mov
inc
stos
mov
jnp
aad
or
jp
inc
idivb
repz
cmpsl
in
push
inc
shrb
rolb
mov
lret
xchg
push
data16
nop
sub
shrb
adc
sub
pop
sbb
add
aam
cmp
mov
lahf
mov
pop
jp
aas
pop
pop
xor
adc
fimull
aam
mov
int3
nop
test
cmp
div
insl
and
pop
sbb
cmp
pop
inc
hlt
sbb
into
or
pop
bnd
and
subb
js
mov
out
push
mov
jmp
xor
prefetch
mov
xchg
add
cmp
inc
inc
movsb
fcom
sbb
add
or
int
or
mov
push
inc
fistpll
test
les
bound
ret
cmpsl
scas
dec
ja
dec
lods
out
xchg
nop
leave
imul
or
arpl
aam
dec
icebp
cmp
push
xor
sbb
xchg
cmp
xor
jae
adc
test
mov
push
sub
or
lret
cmp
es
pop
jg
push
fisttpll
xchg
lea
je
push
xchg
fisubrl
lcall
mov
gs
es
mov
scas
cltd
insb
aad
mov
ss
test
addr16
xor
mov
xchg
mov
xchg
adc
loopne
mov
cmp
xchg
testb
clc
notb
xor
jmp
loope
mov
mov
cmpsl
sub
fs
scas
mov
outsl
out
clc
mov
cmpsl
arpl
inc
lcall
cmp
pop
jecxz
inc
aaa
or
dec
jecxz
sub
xor
fildl
pop
jb
mov
icebp
fldt
cmp
jl
std
mov
mov
xchg
shrb
pusha
mov
test
bnd
mov
push
fists
aaa
sar
in
dec
and
xor
adc
mov
cmp
sub
shrl
cmc
lea
jmp
jle
cmp
dec
sahf
pop
orb
and
add
out
cmp
xlat
aaa
push
cwtl
push
mov
pop
shlb
xchg
mov
std
dec
stos
xchg
and
divb
adc
pop
dec
sbb
push
mov
fldt
popa
lock
add
mov
push
mov
lea
jae
dec
in
in
cmp
mov
sbb
std
jnp
xchg
clc
in
or
loope
std
inc
dec
mov
dec
or
mov
xor
inc
inc
insl
lcall
insl
sahf
adc
stos
outsb
loop
movsb
mov
fdivrl
ljmp
xchg
int
out
cltd
mov
sbb
fldl
sub
stc
xlat
scas
dec
out
xchg
repz
movsb
xlat
push
mov
ret
xor
or
pusha
fsubrs
adc
out
mov
sbb
cmp
add
frndint
xor
jo,pt
xchg
xchg
sub
cmp
sub
dec
and
mov
lock
xchg
push
add
sbb
xchg
jp
test
cmc
xorb
mov
jae,pt
fsts
out
xorb
push
pushl
xlat
adc
jbe
pop
and
pop
out
mov
sar
xchg
pop
adc
adc
sub
or
inc
sub
stos
mov
pushf
cmp
adc
mov
cmp
in
fisubrl
dec
xchg
pop
mov
jae,pn
pop
pop
mov
enter
rcr
shll
xchg
divl
add
add
dec
mov
ljmp
inc
test
cmp
adc
or
inc
cmp
movd
dec
das
pop
dec
xchg
adc
mov
xor
push
jns
movsl
jge
sub
out
mov
xor
dec
shl
out
jo
mov
aas
xchg
or
jle
imull
lret
in
test
hlt
xchg
dec
jmp
in
lcall
gs
mov
pop
push
test
out
adc
sbb
and
xchg
orl
xchg
adc
test
dec
and
adc
stc
daa
imul
fstpt
arpl
inc
rcrl
xchg
into
jp
into
std
xchg
or
pop
mov
mov
test
inc
enter
aam
iret
data16
adc
jle
mov
movsb
pop
ficomps
xor
mov
dec
pop
daa
rorl
jle
mov
shll
test
sub
stos
pushf
clc
jmp
iret
cs
in
cmp
jae
loopne
fwait
mov
inc
push
dec
mov
mov
inc
loopne
sub
mov
lahf
bound
add
fmull
push
jno
jmp
lcall
fidivl
adc
adc
pop
outsb
inc
xchg
push
sbb
xor
je
pusha
fldcw
push
mov
repnz
dec
icebp
inc
loop
sbb
and
fs
repnz
and
fnstcw
xor
outsb
dec
inc
popa
imul
ret
inc
out
push
xchg
and
addl
test
out
dec
test
add
scas
ljmp
sbb
inc
inc
mov
sarb
out
lds
mov
and
es
mov
xchg
adc
jo
and
inc
sbb
and
mov
cmc
lea
or
shrl
daa
mov
faddl
fidivs
push
or
and
cmp
jno
jne
sbb
pop
fstl
adc
xchg
nop
cmc
xor
imulb
inc
jle
rcrb
add
ljmp
inc
mov
jp
push
outsl
jecxz
daa
sbbb
testl
mov
pop
add
fimuls
cs
insl
sub
repz
xchg
jns
mov
xchg
adc
leave
pop
add
mov
push
and
lcall
repnz
sub
jns
shll
jle
bnd
push
push
and
adcl
sbb
jae
insl
sbb
cmp
and
adc
dec
mov
das
mov
inc
mov
rcrl
mov
pop
dec
push
enter
mov
test
push
or
iret
out
push
dec
ds
test
mov
popf
jbe,pn
out
jae
jae
jbe
in
xor
sub
lahf
aaa
std
aas
adc
cmp
cmpsl
and
bound
imul
stos
das
repz
push
pop
daa
sbb
mov
hlt
sub
lds
cmpsl
inc
shll
fisttpl
int3
rclb
out
mov
stos
bound
pop
cmp
loope
fscale
test
push
and
jo
dec
cmp
test
out
cmp
int3
mov
cmpsb
ja
hlt
dec
lret
cmp
jp
lret
mov
test
cmp
fistpl
scas
fbld
outsb
stos
dec
iret
pop
or
fdivrl
fs
jae
mov
dec
cwtl
insb
jbe
int
popf
inc
ljmp
dec
stc
xor
addr16
rcrl
sbb
adc
adc
dec
mov
dec
lods
scas
and
int
pusha
pop
jbe
sbb
push
fistpl
jmp
push
sbb
mov
lea
mov
jbe
or
jb
jno
aad
mov
push
mov
in
jg
rcrb
lock
out
or
xchg
sbb
push
mov
push
cmpsb
in
push
test
mov
insl
dec
out
push
pushf
mov
aaa
fadds
jg
repz
andb
xchg
pop
aad
inc
pop
xor
fs
outsb
lds
and
xchg
inc
sub
es
gs
pop
clc
stos
cmp
mov
cmpsb
mov
cmc
jae
push
push
imul
pop
jne
stos
in
mov
fwait
ljmp
cwtl
imul
test
cmp
mov
test
add
scas
pop
jge
sub
jnp
mov
and
repnz
sbb
aam
cmp
in
mov
add
mov
xor
movsl
std
mov
lcall
leave
mov
xchg
inc
cmpsb
push
add
mov
enter
lea
cmp
xchg
daa
mov
rcr
adc
push
mov
jb
in
dec
popa
and
lret
sub
mov
movsb
mov
and
out
in
andl
aas
adcl
fdivrl
test
xor
mov
adc
xchg
pushf
test
jp
sti
adc
popf
xchg
andl
fildl
imul
xor
xor
mov
leave
jns
outsl
jp
xchg
sbb
dec
mov
popf
addr16
mov
lods
arpl
dec
sbb
mov
int
lds
test
test
add
xchg
in
cld
movb
adc
and
cmp
shrd
push
and
lret
fcmovb
in
mov
and
mov
sub
xchg
jno
sbb
clc
inc
loope
xchg
inc
imul
xchg
ret
push
sub
add
pop
popa
dec
mov
jns
add
mov
inc
xchg
cmp
mov
lret
aaa
and
ss
adc
cmp
pop
pop
jg
cltd
and
jo
xor
nop
push
sub
cwtl
push
cmp
fcmovbe
into
add
jmp
nop
add
fadds
dec
jo
lea
jl
out
xlat
sahf
sub
stc
jmp
loope
sti
mov
dec
mov
sbb
inc
xor
data16
lds
push
xor
leave
lahf
aas
mov
jne
outsl
push
in
mov
mov
add
xor
xor
xchg
rolb
adc
mov
mov
pop
cld
mov
adc
imul
cmp
sbb
inc
cmp
jno
int
mov
xchg
dec
test
into
test
push
arpl
test
mov
pop
lea
or
xchg
aad
into
sbb
out
rcrb
test
int3
repnz
or
test
ds
or
dec
mov
xchg
arpl
or
xchg
xchg
mov
xchg
ret
add
sbb
push
or
pop
mov
scas
dec
dec
xor
loopne
data16
pop
push
xor
ja
xchg
addr16
pop
das
mov
cmova
fcmovnu
in
pop
pop
add
mov
lds
stc
fists
fcomps
lret
test
enter
pop
rep
loop
cmc
pop
stos
adc
xor
pop
data16
je
movsl
adc
push
stc
test
mov
mov
test
jg
repnz
out
aaa
add
mov
idivb
xchg
mov
lock
pop
push
pop
cltd
inc
pop
xor
and
sub
and
or
mov
das
ficompl
iret
in
mov
fisubl
push
cltd
hlt
bound
in
pop
cld
fisubrs
repnz
nop
ja
and
dec
cld
dec
pop
clc
dec
jge
mov
xlat
mov
mov
ret
dec
xchg
in
pop
push
sub
test
hlt
sub
mov
ret
aad
push
inc
dec
mov
push
mov
aaa
std
dec
jae
mov
mov
xor
or
push
push
dec
out
push
adc
jo
andb
dec
sub
int
mov
test
pop
jp
das
cmc
aad
inc
add
push
mov
ficomps
aam
fidivs
imul
sub
sub
clc
in
scas
call
cli
fsts
jno
sbb
rcrb
nop
sbb
mov
cmp
lret
adc
xchg
xchg
xor
mov
mov
pop
pop
out
roll
adc
pop
or
push
pop
les
mov
jp
popa
xor
loop
pop
pop
sarl
jmp
xchg
inc
je
add
cwtl
mov
mov
sbb
mov
outsb
xor
dec
call
cmp
xlat
bound
pop
setae
push
and
xchg
test
call
hlt
ret
inc
iret
out
fmuls
repz
insl
mov
cltd
adcb
sub
sub
mov
and
xchg
outsb
mov
inc
cmp
jp
push
cld
mov
out
dec
ret
cli
call
movsb
sti
xchg
aad
fs
test
arpl
mov
jl
lret
imul
cld
in
out
out
or
aam
push
daa
outsl
cmp
jno
sahf
jecxz
xchg
jg,pn
repz
fisttps
cmc
call
lret
mov
loop
imul
adc
sbb
push
bound
dec
xchg
jbe
sbb
fsubl
loopne
js
in
iret
sti
into
inc
jae
loope
mov
call
inc
loope
loopne
neg
lea
outsb
and
fistpl
cmpsb
popf
insb
into
inc
cmpsl
hlt
repnz
outsl
pop
movl
inc
push
pop
sbb
icebp
adc
pop
push
xchg
cltd
repz
call
mov
pusha
inc
iret
cmp
das
aas
mov
or
sbb
jb
pop
sub
or
imul
sub
ffreep
inc
mov
lret
repnz
push
add
jg
mov
out
rorl
cmp
cmp
movsl
and
repz
fstl
lods
xor
adcb
mov
in
sbb
push
pop
adc
das
mov
xchg
mov
mov
cmp
xchg
inc
es
adc
fstpl
daa
pop
mov
fiadds
add
popl
aad
dec
pop
adc
jmp
inc
inc
push
addr16
adc
or
daa
loopne
mov
shrl
sahf
cltd
cld
push
dec
xchg
movsl
outsb
insl
das
in
jno
fisubrs
mov
push
jl
ss
add
lods
sbb
jo
adc
dec
shlb
mov
daa
inc
jge,pt
jnp
pop
in
pop
and
cwtl
dec
lods
outsb
hlt
movsl
push
ret
and
imul
and
push
add
hlt
pop
cli
mov
or
pop
lods
xor
nop
inc
dec
iret
das
aad
aas
add
mov
cwtl
dec
stc
jl
and
push
mov
xchg
mov
sub
mov
cmp
pushf
std
jb
xchg
cmc
sbb
cwtl
js
lahf
sub
arpl
lcall
xor
sub
pop
add
push
outsb
lahf
rorl
sahf
adc
mov
mov
jl
pop
jns
aam
popa
xchg
inc
or
xchg
pop
int3
in
dec
sahf
cmp
arpl
ja
sbb
dec
add
cmp
cltd
xor
dec
fwait
jle
outsl
insl
dec
mov
jns
and
mov
cmpsb
imul
sub
pusha
xchg
pop
inc
pop
xchg
pop
jno
mov
repz
mov
sbbb
xor
idivl
mov
out
es
clc
sarl
jne
divl
mov
jbe
or
daa
jns
push
and
and
lret
cmp
fmull
cmp
int
shll
into
pop
rcll
popa
mov
outsl
cltd
push
gs
outsl
ret
adc
mov
scas
call
test
jmp
cmp
pop
inc
cwtl
mov
add
shrb
inc
fmull
fcmovbe
xchg
inc
push
gs
xchg
icebp
or
sub
pusha
clc
out
mov
hlt
cltd
xor
cld
es
out
or
jp
fisubrl
cmp
mov
pop
bound
insb
push
lods
inc
adc
data16
fnstenv
jns
je
add
pop
xchg
aaa
movsb
push
aam
xor
and
loope
jmp
push
mov
outsl
inc
xor
cmp
pushf
mov
lods
inc
adc
and
pop
dec
mov
adc
jb
dec
lds
inc
fisubl
mov
jge
xor
mov
repnz
dec
dec
fldl
movsb
test
and
ret
std
and
sub
lds
mov
inc
adc
and
arpl
andl
adc
add
push
pop
jle
jnp
jae
shl
fwait
mov
xlat
add
or
shll
icebp
jnp
nop
mov
push
enter
shl
push
mov
rcl
rcrb
loope
imul
in
and
cmc
ljmp
adc
cmp
add
add
inc
xor
mov
jmp
into
adc
xlat
decb
adc
mov
insb
jp
jne
ljmp
adc
xchg
and
push
and
xchg
outsb
lods
lock
mov
les
or
stc
addr16
ljmp
inc
psubq
mov
and
cld
push
stos
push
ret
bound
jo
jg
mov
cs
out
mov
pop
sti
xchg
cli
das
lahf
fcoms
xor
mov
cmp
jl
imul
popa
dec
inc
and
test
jbe
adc
test
mov
in
sub
jbe
icebp
or
hlt
jns
mov
mov
int3
test
lret
inc
fcoml
insl
insl
xchg
popf
call
outsb
in
mov
fnstcw
push
je
outsl
jmp
fdivl
pop
adc
lret
clc
stc
add
push
aad
movsb
gs
daa
sub
jb
push
mov
lahf
in
adc
imul
cmp
xchg
push
xchg
cltd
and
out
push
add
int3
daa
pop
sub
loop
aas
adc
sub
imul
xlat
je
and
adc
sbb
and
mov
jbe
ret
loop
fdivrs
in
mov
pusha
inc
imul
rcll
inc
outsl
imul
not
add
insb
outsb
sub
xlat
xchg
add
lret
popf
je
adc
pinsrw
mov
enter
outsb
fucomip
ficoml
add
imul
xlat
mov
ret
push
scas
xchg
movsl
fisubs
xchg
sub
aaa
clc
icebp
loop
mov
adc
adc
lods
out
mov
xor
in
inc
roll
cmpsl
pop
icebp
stos
add
mov
mov
mov
fisubs
xchg
cwtl
adc
mov
lods
add
js
es
xor
in
cwtl
xor
negb
int
aad
popa
mov
js
shrl
insl
jb
int
pop
adc
xor
mov
push
aas
shrb
stos
push
mov
out
push
testb
add
leave
cli
aad
cmpsl
push
and
adc
sbbb
int3
ret
jmp
imul
inc
cmpl
repnz
out
xor
pushf
xor
fldt
jae
imul
jbe
pop
stos
jp
fsubs
lahf
xchg
push
push
jnp
ja
mov
adc
test
lahf
imul
andl
and
dec
stos
fadd
jl
mov
not
mov
stos
pop
mov
cli
push
loop
test
test
pop
cmp
jnp
fidivs
xor
pop
pop
xor
aaa
movsl
loopne
ja
xchg
lea
push
bound
xor
lret
lods
call
loope
inc
inc
push
or
sub
std
std
mov
mov
scas
push
test
cmpsl
or
popf
cmp
push
xor
mov
pushf
inc
or
adc
fldl
xor
dec
mov
and
pop
imul
or
xor
scas
cmpl
add
in
add
das
repz
je
cmp
ficompl
xchg
inc
jmp
cmc
pop
mov
movsl
leave
push
xchg
jmp
jo
popf
in
or
jge
or
mov
aaa
scas
std
pop
loop
xchg
xchg
in
push
enter
movsb
vpcmpgtb
sub
or
sbb
sbb
dec
mov
push
jge
enter
adc
out
adcl
icebp
mov
into
inc
adc
mov
mov
btc
cmc
pop
pop
andl
sub
cmp
mov
mov
negb
les
ret
dec
xchg
fs
pop
xor
movsb
cmpsl
jae
add
sub
dec
mov
pop
insb
mov
inc
fsubrl
repnz
fs
iret
mov
xchg
sub
push
int3
faddp
mov
mov
add
mov
inc
xlat
and
jo
icebp
xchg
cld
inc
pop
hlt
and
aaa
insl
adc
nop
rcl
subl
inc
add
mov
push
into
jge,pn
scas
lret
jecxz
daa
adc
jae
orl
test
fcomip
push
push
shll
pushf
add
inc
out
jmp
xchg
js
xchg
bound
xchg
outsb
outsl
pop
test
retw
adc
xchg
add
pushf
add
pop
inc
dec
fsubrs
mov
jne
jnp
jns
fptan
out
rcr
sbb
hlt
bound
xchg
inc
adc
or
das
hlt
ficomps
vunpcklps
dec
push
push
insb
fnsave
jo
jmp
or
add
imul
lahf
xchg
adc
mov
scas
mov
daa
sub
add
repnz
popa
jbe
out
dec
fcoms
cmp
mov
int
daa
in
in
add
out
or
mov
mov
gs
xchg
jns
pop
pusha
aaa
scas
out
cli
lret
xor
xor
fcompl
jg
jbe
shr
in
pushf
arpl
daa
pushl
shrl
shr
pop
sub
xchg
and
mov
jmp
mov
test
cmpsl
sbb
stc
and
mov
push
nop
inc
pop
inc
lods
pusha
mov
jns
push
test
out
jle
out
test
xor
jnp
push
push
mulb
inc
jo
push
or
and
jecxz
cmp
lahf
rorl
popf
mov
or
fucomp
test
cmp
mov
mov
fwait
lahf
stos
aaa
repz
jb
jmp
mov
dec
daa
jmp
cli
lahf
pop
adc
sahf
add
mov
dec
ja
dec
in
repnz
adc
shlb
xchg
mov
jl
adc
pop
hlt
add
and
incb
mov
in
das
rorb
fists
xchg
gs
inc
sbb
lds
les
shll
xor
cli
insb
lds
lret
in
pop
xchg
insb
mov
push
lret
push
sbb
scas
dec
or
adc
bound
stos
subb
lcall
sti
dec
sahf
push
xor
xor
hlt
ret
pushf
jg
sub
sbb
xchg
add
adc
add
arpl
loop
ds
cld
inc
cmp
js
in
aad
sub
out
inc
mov
sti
or
mov
pop
ret
loope
push
fisubs
pop
rolb
push
jns
insl
test
mov
jp
insl
test
push
push
cmp
mov
mov
xor
repnz
pop
sbb
sbb
xlat
scas
sub
incl
movsl
mov
and
add
lahf
xor
push
ret
mov
int3
lods
stos
mov
movsl
sbb
iret
inc
shll
adc
cmpsl
dec
jb
popf
sbb
outsl
inc
push
adc
push
pop
test
xchg
test
mov
call
mov
hlt
adc
mov
je
cltd
push
add
sub
mov
in
and
pop
ret
pop
das
add
jne
and
test
sbb
sahf
xchg
aas
cmc
sub
adcb
inc
subl
idivl
add
cwtl
push
cli
pop
add
sub
subb
aad
lret
mov
pop
dec
mov
jnp
insl
enter
xchg
jecxz
xchg
jl
and
xchg
leave
rcr
insb
adc
mov
sti
jecxz
test
arpl
stc
add
xor
mov
or
pop
shlb
xor
push
push
push
and
xchg
into
imul
ret
je
sbb
mov
mov
dec
xor
dec
push
jg
dec
pusha
dec
adc
fcmovnb
nop
cld
cmp
rcll
xchg
je
loope
jnp
lods
outsb
mov
rcll
shrl
xor
lcall
pop
pop
imul
jg
xlat
psubsb
clc
frstor
push
shl
xlat
dec
cmp
ret
lret
adc
cmpsb
out
es
test
int3
int3
mov
sbb
jne
mov
add
mov
inc
sbb
fucomi
sub
sbb
stos
das
and
push
push
jmp
sbb
out
outsb
cmpsb
les
cmpl
stos
and
imul
pushf
xchg
es
ficoml
ror
xor
shlb
movsb
dec
push
filds
cmpsb
cs
test
push
pop
cli
ljmp
stc
repz
out
lods
jg
popf
or
inc
in
jg
mov
adc
dec
jnp
or
mov
lret
adc
pop
mov
ss
jbe
cwtl
and
repnz
push
adc
or
in
add
into
sbb
loopne
repz
cmp
push
sbb
popf
shll
out
add
mov
jge
push
imul
and
pop
mov
xchg
sti
mov
jno
test
xor
mov
xchg
dec
icebp
pusha
dec
xor
imul
sbb
out
mov
add
xchg
addl
mov
mov
sbb
cmpsl
add
mov
xor
cltd
sub
add
xchg
sub
scas
or
stc
cltd
dec
std
jno
sub
inc
mov
dec
test
lret
shlb
jbe
imul
ljmp
adc
insl
mov
and
xor
pop
add
pop
paddusw
mov
pop
jne
add
sub
cmp
mov
lods
mov
lods
fidivl
dec
repz
ret
addr16
in
stc
cmp
xchg
pop
dec
dec
lods
inc
in
inc
and
lret
xchg
stos
in
cmp
xchg
bound
sarl
fcompl
adc
std
cmp
dec
enter
scas
adc
fstpt
fldt
mov
lods
shl
out
out
sti
in
pusha
jo
fst
mov
outsb
sti
mov
mov
xor
addl
fadds
loopne
loop
jno
out
mov
jne
lock
shl
loopne
sub
fneni(8087
add
in
in
add
rcrb
push
into
lret
out
imul
int
scas
pushf
cwtl
add
enter
sub
out
cld
sbb
rcrb
fwait
wrmsr
inc
cmp
xchg
call
popa
cli
mov
jo,pt
adc
movl
jge
popa
rcl
push
rolb
popa
adc
ret
loope
push
sahf
stos
dec
aad
xchg
push
lret
repz
sbb
std
lahf
adc
rcrl
aas
inc
pushf
jg,pn
cmpsb
lret
sub
ficoms
shlb
mov
pop
imul
subb
pop
sub
test
enter
icebp
dec
or
es
xor
mov
data16
outsb
lcall
js
lods
pop
mov
jne
xchg
ret
xor
jmp
data16
int
stos
sub
push
in
lods
cmp
or
xor
imul
mov
inc
fists
gs
rorb
xchg
mov
pop
test
insb
inc
aas
out
xor
cmp
push
adc
dec
xchg
inc
mov
add
shrl
movsl
lea
ja
mov
push
pop
inc
fists
flds
cmpb
les
arpl
push
or
in
xchg
mov
popa
mov
call
sub
add
pop
or
int3
and
dec
cmc
lahf
push
mov
stos
sahf
cmp
lcall
sahf
sbb
ljmp
adc
scas
enter
adc
es
inc
divb
push
in
int3
jno
jbe
xor
out
jb
je
sub
lcall
adc
pop
ror
loop
push
fstl
lret
shrl
bnd
sbb
cmc
mov
dec
push
les
inc
add
add
dec
nop
bound
sub
jecxz
cmp
push
xlat
stos
jmp
push
pop
mov
enter
push
ficomps
imul
loop
popa
inc
ret
sub
pushf
and
lods
pop
cmp
icebp
pop
cli
xchg
test
fwait
mov
mov
daa
iret
call
outsl
dec
adc
mov
cmpl
hlt
or
add
inc
push
popa
add
out
and
dec
loopne
int
mov
mov
xchg
lahf
add
jb
repz
xchg
sti
pop
nop
in
or
sub
fnstcw
and
inc
cmpsb
push
fsubrl
arpl
fdivl
in
adc
insb
push
xor
in
push
jne
add
stos
xchg
and
or
mov
jbe
inc
aam
dec
push
add
jge
shll
sub
mov
xor
add
cli
mov
mov
mov
mov
ror
inc
daa
addb
jo
inc
dec
or
jb
jbe,pt
js
pusha
fcoml
daa
out
sbbb
in
mov
jmp
dec
sbb
jmp
mov
stos
sbb
sbbl
pop
lret
mov
jo
das
pop
fcmove
push
add
pop
mov
push
cmp
xor
adc
iret
shrb
pop
push
in
lds
stos
xorb
inc
mov
inc
ret
lret
xor
or
pusha
pop
lret
pop
andb
pusha
aaa
in
outsb
mov
scas
cmp
pop
int3
adc
fcompl
shl
scas
cld
mov
cli
or
outsl
xchg
loop
dec
into
xlat
pop
and
rolb
movsb
scas
lret
arpl
sub
add
pop
insl
stos
ficoml
or
mov
dec
enter
push
out
inc
fcmovb
sti
and
cmc
je
int3
pop
aad
fbld
mov
mov
add
push
xor
icebp
fildll
xlat
int3
insb
es
inc
sbb
push
jbe
pop
jno
sub
dec
dec
icebp
and
and
push
int
jae
cmpl
inc
jno
dec
and
sub
cmp
pop
cmc
add
xchg
cmp
movsl
lods
lahf
inc
cmp
imul
data16
pusha
mov
fs
ja
cmp
std
push
loopne
stc
mov
arpl
add
or
or
cmp
inc
ret
sbb
inc
pop
scas
mov
inc
cmpsl
outsb
ficoml
xchg
mov
enter
inc
xor
es
loope
sbb
mov
push
pop
pop
loopne
mov
in
inc
das
rorl
sub
jnp
mov
sbb
cmp
in
pop
push
repnz
into
mov
mov
cli
sbb
mov
pop
shlb
test
xor
jge
inc
out
push
sti
mov
inc
fisubl
and
loope
inc
int3
insl
sbbb
in
sbb
dec
sub
cmp
jg
dec
lret
push
jmp
and
mov
jno
adc
out
xchg
in
mov
stos
dec
ficompl
lds
xor
stos
pop
es
aam
orl
adc
inc
xchg
stos
sub
xor
mov
xor
dec
pusha
xchg
imul
sahf
mov
jbe
aam
cmp
mov
mov
aas
mov
insl
leave
mov
adc
mov
sub
leave
lret
loope
jne
cmp
gs
and
pushf
or
sarb
mov
mov
push
sub
push
cmp
int3
mov
pop
cld
je
push
push
pop
aad
xor
js
jo
movsl
and
or
loop
push
mov
or
adc
xchg
cmp
fistl
sbb
add
or
pop
xchg
aaa
in
push
jmp
push
divps
xor
stos
adc
pop
inc
push
loop
mov
mov
xor
jo
inc
or
lcall
and
ror
dec
movsl
xchg
test
push
mov
adc
cs
cli
cmpsl
enter
mov
or
and
jbe
mov
out
aas
cli
sub
dec
xor
push
stc
loopne
inc
inc
pop
mov
sub
movsb
fmul
mov
jns
push
aaa
loopne
dec
mov
mov
imul
aam
pop
jp
cmp
rolb
out
push
xchg
in
pop
jb
ds
nop
and
ds
jle
push
sbb
arpl
dec
cmp
xchg
xor
movsl
into
cwtl
push
rcr
sub
adc
daa
dec
cmp
push
sarb
pop
sub
pop
lock
dec
cmp
cmp
nop
mov
mov
fldl
leave
xor
int3
insb
inc
push
mov
and
loop
xchg
int3
mov
mov
pop
and
inc
jno
xchg
push
mov
or
cmp
hlt
movsl
js
test
cmp
mov
mov
sbb
cmc
jle
mov
imul
inc
push
cmc
out
sbb
push
addr16
add
cltd
mov
leave
sbb
fists
pop
mov
ret
and
gs
bound
leave
fwait
mov
lods
jp
jge
mov
sub
xlat
shl
dec
push
es
push
das
mov
dec
mov
xchg
fsubrs
out
and
int
sbb
push
cmp
push
jb
inc
lret
push
call
xchg
movsb
iret
iret
push
fs
adc
out
mov
data16
insb
lcall
outsb
mov
mov
inc
pop
or
test
sbb
out
enter
es
fwait
cmp
dec
push
lock
pop
xchg
or
mov
rcll
mov
dec
pop
out
ret
aaa
jno
popf
sub
pop
imul
dec
sub
add
ds
cltd
add
inc
rorl
outsl
adc
aas
int
push
ds
pop
mov
repnz
mov
jae
loope
sub
jb
mov
test
pop
push
outsl
enter
xchg
jg
popa
stos
inc
dec
mov
loope
movsb
xchg
cmp
pop
stc
popa
sti
stos
in
or
jne
jne
iret
add
jb
mov
ret
inc
in
or
cli
push
jg
inc
xchg
loopne
or
aam
fnstcw
pop
loopne
and
es
in
addr16
xchg
cmpsb
push
adc
lcall
and
fisubrs
jecxz
movsb
xor
loope
mov
sbb
mov
adc
imul
dec
div
test
fcmovu
fsubr
in
mov
int
mov
sub
inc
mov
fsts
inc
jg
jmp
or
decl
daa
sahf
dec
jns
adc
or
dec
mov
mov
std
adc
jmp
xor
push
mov
inc
ja
ja
iret
push
add
sub
mov
mov
shll
mov
fimuls
shlb
fstpl
xchg
je
test
push
std
jg
imul
mov
inc
dec
repnz
jne
ja
frstor
sbb
addr16
push
mov
ja
jb
loop
iret
roll
mov
test
or
aas
push
out
and
push
xlat
js
jge
fcomps
mov
pop
shlb
jbe
fs
sub
push
cmpsb
lcall
ljmp
fiadds
mov
das
rol
outsl
inc
ret
add
mov
mov
mov
sub
jne
mov
mov
out
xchg
mov
dec
insb
mov
dec
xor
hlt
lds
mov
ret
imul
cmp
inc
loope
sahf
fadds
pop
fwait
pushf
push
imul
imul
addl
pop
cmp
test
push
repnz
mov
add
sbb
jno
pop
jecxz
mov
arpl
out
stos
imul
dec
pop
fpatan
mov
sub
xchg
out
or
adc
cmp
out
cmpsb
shrl
or
std
repnz
mov
inc
cli
lret
aam
movsl
dec
cmpsl
xor
fwait
mov
mov
jmp
addl
cmc
or
mov
mov
push
push
icebp
ret
cmp
and
dec
inc
add
aaa
mov
lods
sub
xchg
jbe
cli
pop
jne
popa
push
in
int
push
bound
jge
and
jl
idivl
loop
inc
inc
jns
fwait
push
cmp
je
nop
push
jmp
push
mov
and
jne
insb
fs
and
mov
cs
dec
adc
insb
and
xor
mov
dec
stos
pusha
mov
ret
pop
pop
adc
repnz
pop
insb
inc
fistpll
rcrb
imul
dec
scas
inc
fdivr
mov
aam
push
jne
dec
xchg
inc
jl
les
cmp
enter
outsl
dec
nop
std
inc
rolb
cmpsl
sbb
inc
jae
and
repz
add
sbb
dec
imul
mov
ror
xchg
es
js
adc
mov
outsb
cs
jp
sub
inc
hlt
roll
imul
fistl
movsb
sbb
push
xchg
add
cld
xor
out
ds
pusha
push
sbb
cmp
cmpsb
rclb
shrb
push
push
dec
push
push
or
mull
xchg
inc
jge
jnp
jne
in
jb
pop
ud1
repnz
nop
jae
pop
push
cmp
xchg
test
pop
pusha
cmpl
mov
and
jae
xchg
push
push
cmp
incl
popf
shl
lea
ja
xor
sahf
and
orl
cmpsl
std
aad
sub
repz
adc
push
movb
xor
shrl
cmpsb
mov
in
es
or
int
int3
mov
mov
xor
xchg
mov
call
sbb
out
sub
inc
jp
test
scas
mov
sbb
adc
dec
jp
out
pop
mov
push
leave
lret
pushf
push
jnp
sbb
imul
clc
ret
inc
add
je
daa
mov
mov
insl
pushf
and
les
daa
inc
mov
xchg
or
inc
or
inc
push
std
pop
ret
inc
lahf
xchg
rorb
sub
xchg
mov
add
inc
out
mov
fucom
enter
repz
cmpsl
lret
jle
adc
dec
pushf
iret
sub
mov
xchg
add
push
mov
inc
idiv
in
cmc
adc
mov
pop
xor
addl
stos
inc
xor
stos
mov
lahf
sti
stos
pusha
ljmp
push
or
xchg
mov
or
js
mov
movsl
push
dec
cld
call
push
imul
cmp
and
cmp
movsb
sbb
dec
jnp
adcb
push
stc
push
or
inc
and
subb
jns
dec
adc
fistpl
js
lcall
leave
jne
lock
push
jmp
icebp
jmp
call
hlt
inc
out
pop
dec
jg
fstps
lock
scas
mov
inc
lock
sti
rcll
cli
push
popa
mov
push
xchg
cwtl
mov
std
outsl
push
shlb
pop
cmp
sub
cmpsb
mov
mov
cmp
out
lea
jl
test
sub
es
stos
dec
add
mov
xor
aam
add
inc
mov
test
cmpl
sub
xchg
pop
fists
and
ret
jno
sbb
cmc
inc
xor
loopne
imul
enter
pop
sbb
xor
mov
xor
loope
cmpsb
sbb
adcl
addb
mov
jecxz
loop
movsl
add
popf
mov
jns
stos
push
es
mov
xchg
pop
xchg
inc
idiv
jg
mov
aaa
xchg
pushw
lods
mov
mov
negl
inc
sti
and
push
pop
xchg
push
repnz
adc
inc
addl
aaa
les
pop
sub
cs
cmp
in
mov
adc
mov
mov
push
les
repnz
sbb
add
jp
rolb
mov
mov
stos
sbb
fsubrp
fcomi
js
add
mov
jb
imul
das
sub
xor
sahf
je
jg
jge
jp
push
hlt
out
pop
jmp
push
movsl
fsubs
pop
cmp
jae
in
repz
add
mov
loop
hlt
pop
lcall
add
jecxz
jge
xlat
mov
xor
pop
cs
mov
mov
inc
rol
mov
ret
aam
mov
out
out
cld
inc
add
mov
imul
add
cwtl
xchg
jns
jl
sbb
in
movsb
sbbb
or
inc
in
hlt
bound
arpl
pushf
lods
add
push
std
lcall
cmp
inc
lcall
ss
or
fcom
pop
pushf
mov
sbbl
lea
push
ja
xchg
aas
sub
cmp
addb
cmp
and
pop
adc
jmp
mov
aaa
repnz
push
stc
push
stos
outsb
pop
aad
ficoms
int
jle
das
and
cmp
fs
sub
cmp
in
or
jle
mov
ja
push
xor
mov
cli
xchg
ret
clc
les
push
push
pop
inc
add
roll
fidivrl
imul
cmp
sbb
xchg
aaa
outsb
inc
mov
mov
pop
mov
and
mov
pop
jge
fwait
test
out
stos
cwtl
pop
jo
lods
dec
jb
or
sub
sbb
push
out
cltd
inc
nopl
mov
mov
lds
mov
sbb
bound
xor
aad
cmp
cmpsb
push
jo
jnp
mov
inc
out
aas
dec
lcall
fadds
push
inc
sti
and
aaa
ficoms
xchg
pop
outsl
jae
jle
mov
jle
cld
jg
movsb
js
push
sub
or
imul
into
cmp
push
cltd
sbb
add
addl
out
inc
daa
add
movsl
cld
dec
cwtl
out
lods
adc
mov
hlt
lret
aaa
push
test
rorl
je
mov
test
addr16
pop
mulb
and
pop
hlt
mov
mov
popa
lock
fcomip
xor
sbb
pop
ret
stos
add
mov
add
push
fwait
xchg
xor
mov
aam
sbbl
pop
sub
stos
dec
sub
idivb
xchg
cs
incl
mov
int3
fimull
inc
mov
jnp
inc
fcoml
jno
mov
hlt
mov
add
mov
outsl
mov
scas
js
jl
cld
mov
jl
add
xlat
or
lock
loopne
or
xor
inc
cmpsl
sub
test
ja
and
jne
xchg
pop
sub
add
in
or
jb
fs
repz
lea
xchg
ficoml
repz
loop
jp
inc
mov
dec
mov
inc
and
in
sbb
insl
dec
js
xchg
fcomip
repz
les
jge
je
into
repz
scas
cmpsb
in
sbb
fucomi
out
test
xchg
pushf
dec
mov
ror
push
inc
pop
xchg
stos
jl
push
pop
mov
dec
shrb
es
dec
inc
cwtl
int3
inc
in
repnz
add
jo
dec
xchg
pop
cmp
mov
pop
or
push
lods
mov
pop
push
inc
cmp
das
insl
loop
push
sbb
xchg
jp
out
cmp
xchg
xchg
lock
cmpl
out
pop
jb
inc
xor
repz
xor
inc
jmp
cs
lea
shll
mov
mov
lret
or
int
push
pop
mov
cmpsb
add
adc
mov
out
xchg
stc
mov
cwtl
push
popf
or
test
cli
mov
mov
das
insb
mov
inc
cltd
aam
xor
cmpl
and
and
or
int
xor
sub
bound
adc
mov
das
sub
sub
mov
outsl
shlb
jae
mov
shll
int3
pop
inc
fcmovnbe
testb
mov
in
or
mov
hlt
sub
gs
loop
pop
and
inc
push
push
jg
add
arpl
mov
inc
push
jl
jo
mov
stc
movsb
or
ret
or
add
lock
fwait
dec
mov
sbb
adc
out
lods
adc
ret
xchg
inc
jmp
mov
divb
cmp
mov
or
and
in
mov
add
mov
data16
lret
testb
pop
cmp
popl
idiv
lcall
push
stos
or
shlb
outsl
adcl
cli
stos
imul
or
data16
cmp
leave
and
into
fsubrp
aad
and
pop
pushf
add
lods
sbb
push
xchg
sbb
pop
movsb
mov
rorl
or
mov
sbb
push
outsl
lcall
mov
sub
xor
mov
jns
aam
sbb
cs
dec
mov
rolb
and
add
repnz
sub
sbbb
test
pusha
aaa
icebp
popf
mov
leave
outsl
or
das
dec
jmp
out
sbbb
das
jmp
out
scas
fstl
pushf
lods
cmp
xor
inc
fmulp
addr16
lahf
mov
insb
cltd
pop
cwtl
inc
in
aaa
pop
mov
sahf
clc
push
bound
into
mov
dec
mov
push
test
or
mov
dec
cld
pop
sub
sub
setl
test
inc
mov
clc
cmp
add
popf
mov
pop
test
cmpsb
push
cwtl
mov
add
xor
mov
cwtl
lahf
out
jno
pop
idivb
push
in
jns
lahf
dec
xor
popa
movsl
push
add
decb
push
hlt
sarb
cli
cwtl
jge
mov
push
push
xlat
ds
mov
mulb
pop
adc
out
in
out
push
pop
adc
jecxz
insl
cmp
stos
lea
cld
sbb
dec
mov
inc
xchg
test
aaa
ljmp
dec
push
xchg
lret
fwait
aaa
pop
jae
mov
shll
aam
loope
or
outsb
adc
jne
arpl
mov
add
sub
rcl
cmc
lods
push
push
cwtl
xor
mov
pop
jnp
push
orl
push
adc
ljmp
mov
dec
sub
addr16
js
and
loope
jl
out
idivb
cmp
out
jbe
movsb
pop
mov
dec
into
xor
shl
mov
jmp
mov
push
push
and
pop
push
iret
out
dec
test
sar
inc
divb
out
outsl
lds
lea
jmp
xchg
adc
xor
adc
sti
mov
jae
cs
lret
jnp
xlat
push
popf
sar
imul
aad
sbb
ret
or
push
negb
sbb
mov
mov
stc
cltd
jecxz
dec
insl
add
ja
mov
push
sub
in
push
pop
add
mov
enter
mov
sub
add
cmp
dec
out
inc
pop
mov
roll
and
sub
out
push
sbb
mov
dec
gs
xor
mov
pushf
jnp
enter
sub
xor
mov
ss
cmpsb
mov
push
push
ja
data16
inc
jne
jmp
jmp
je
add
out
mov
in
pop
enter
push
outsb
sbb
or
out
cltd
jle
iret
pusha
mov
arpl
ds
cltd
jecxz
repnz
mov
cmp
jnp
xchg
adc
xchg
test
in
sbb
frstor
xor
cmp
iret
scas
sub
sahf
cli
jge
sbb
add
push
hlt
sub
data16
mov
movb
lret
xchg
xchg
lods
pop
and
xchg
gs
les
test
add
insb
xorb
push
push
into
sbb
cltd
and
js
mov
jae
pop
in
jle
jle
push
mov
fidivrs
mov
lahf
outsb
dec
jb
xor
pslld
xchg
clc
jns
movsl
mov
lock
or
push
push
jo
push
adc
jp
cmp
insl
in
xor
pop
pop
jno
cli
outsl
adc
mov
mov
fcmovu
dec
aad
sarb
mov
test
scas
pop
cmp
scas
xor
and
cmp
insb
rol
jecxz
inc
clc
mov
sub
out
xor
sub
sbb
jmp
jae
xor
push
sub
push
dec
js
adc
and
sub
lea
cmp
andl
cmp
fsubl
and
stos
mov
int3
and
mov
test
repnz
ret
xchg
fidivs
imul
addr16
push
xchg
jae
into
mov
and
push
addb
out
push
cld
imul
jno
not
mov
inc
lret
push
daa
mov
mov
push
nop
sbb
test
bound
jge
mov
mov
orb
pop
mov
xchg
gs
push
insl
aas
jecxz
xchg
xlat
daa
mulb
test
or
mov
jg
mov
idivb
cli
into
push
mull
sahf
mov
sbb
ja
mov
push
cmpsb
shlb
mov
shl
stos
imul
inc
je
cwtl
movsb
jbe
stc
jmp
fistl
xchg
pop
mov
inc
inc
sbb
gs
dec
jns
push
rep
js
inc
dec
fsubrl
je
aaa
pop
push
inc
cmp
push
sbb
jp
xchg
cli
sti
out
sbb
dec
jmp
sub
mov
lcall
mov
scas
and
mov
fisttpl
add
xor
dec
mov
mov
int3
testl
cs
pop
add
fnstsw
jecxz
std
and
push
push
cmp
ljmp
mov
mov
sti
push
sbb
cltd
cmpsl
mov
test
scas
js
pop
xor
shl
and
insb
mov
popf
sbb
shl
or
jl
into
jle
add
int3
and
xchg
xor
shrb
repnz
jbe
in
cld
fmull
adc
andl
andl
ror
enter
int
inc
xor
push
in
lret
or
psllq
insl
lret
into
dec
nop
pop
inc
pop
and
int
push
mov
rep
inc
ljmp
imul
adc
mov
cld
insb
insl
pushf
cmp
mov
inc
adc
data16
stos
dec
mov
adc
pop
js
pusha
adc
add
xchg
jp,pt
sti
roll
mov
nop
push
das
outsb
and
outsb
scas
lret
adc
ret
mov
sti
je
loope
xchg
mov
xchg
dec
add
dec
sub
pushf
std
or
stos
mov
mov
jge
inc
push
mov
test
push
sbb
pusha
arpl
cmpsb
jp
aam
test
adc
mov
pop
out
add
and
or
jno
push
and
pop
xchg
lods
sbb
adc
mov
test
lock
xchg
or
jecxz
mov
bound
jmp
or
lds
dec
mov
mov
jbe
mov
mov
fldl
popa
loop
add
cmovae
dec
pop
out
jo
sub
fldlg2
add
xlat
or
fmulp
addr16
cmc
leave
hlt
add
fstl
nop
and
cmp
scas
arpl
repnz
fidivs
pushf
cmp
or
sub
sti
mov
xchg
cmp
mov
and
mov
test
mov
dec
cmp
notb
add
mov
xchg
sarb
pushf
jne
push
shr
out
jecxz
movl
inc
mov
push
lods
xor
into
push
jge
fwait
dec
or
fnstsw
rcrb
adc
imul
ljmp
mov
test
fstl
add
dec
cmc
mov
repnz
js
aaa
jns
dec
into
cmpsb
ret
loopne
xor
pop
incb
push
adc
jp
xor
ret
movsl
ret
mov
ljmp
fisttpl
and
out
pop
lds
push
add
or
pusha
jle
rcrb
xor
cmp
cmpsl
insl
jno
fs
push
fsubrs
and
sbb
jp
push
sbb
or
insl
stc
les
or
leave
xor
enter
mov
mov
push
xor
or
movsl
sbb
rep
stos
sbb
add
sbbb
pop
shlb
test
clc
fstps
frstor
in
lea
cmp
les
jno
mov
nop
enter
mov
cmc
movsb
test
ret
cltd
pop
inc
xor
shr
pop
arpl
pop
adc
inc
or
rcll
gs
add
in
add
push
int3
out
mov
cltd
jnp
sbb
out
icebp
mov
daa
sbb
test
test
xor
sub
pop
cmpsl
pop
addb
hlt
bound
imul
pop
jmp
push
arpl
test
les
je
fucomi
push
xchg
std
es
inc
das
or
and
lds
sbb
or
outsb
dec
mov
xchg
xchg
sbb
push
das
cmpsl
test
mov
cmpsb
xchg
push
fimull
hlt
mov
lea
or
adc
int
mov
pop
xchg
orb
mov
inc
shl
andl
nopl
mov
jecxz
mov
data16
rclb
stos
mov
and
jle
in
mov
pop
sub
inc
mov
test
cmp
lds
mov
inc
mov
xchg
adc
out
and
insb
pop
addr16
std
notb
sub
int
notb
pop
jg
cwtl
test
adcl
xor
loopne
fdivrl
sbb
out
in
mov
sbb
call
push
lret
lods
popf
fdivl
jbe
add
fbld
mov
pop
jno
sbb
xor
imul
shr
repnz
or
rorb
xor
pop
repz
cmp
mov
jmp
lcall
mov
mov
mov
popf
sarb
loopne
adc
add
fbld
js
sub
js
push
cmc
pop
negb
pop
daa
jp
push
and
push
mov
mov
shll
out
fs
sti
jno
cmpl
xchg
fsubp
pop
in
or
lahf
shrb
fists
loope
out
mov
cltd
mov
aam
mov
adc
push
sbb
add
inc
jns
rcrb
mov
xor
movsl
orb
pop
pop
orb
add
and
sbb
popa
pushl
mull
add
inc
add
ja
addr16
fstpt
xor
push
ret
sub
fld
dec
outsl
ja
pop
sub
enter
int3
ss
js
pop
insb
icebp
pop
mov
inc
std
mov
jae
scas
fcoml
inc
cmpsb
push
iret
jge
pusha
je
mov
clc
sbb
mov
outsl
mov
push
jno
mov
js
in
ljmp
dec
sub
sub
xchg
inc
jmp
test
xchg
pop
inc
je
xlat
shlb
adc
mov
xor
jmp
mov
xchg
out
enter
insl
insb
lock
inc
mov
mov
mov
mov
imul
inc
push
add
inc
cmp
test
pop
jp
xor
inc
and
xor
pop
orb
push
jge
mov
cmp
xchg
cld
jbe
mov
jp
popf
repz
aad
add
rcl
push
mov
xchg
seta
popa
xor
xlat
sub
push
js
icebp
pop
out
js
stos
xchg
push
and
xchg
cmp
add
mov
mov
or
rorl
stos
sahf
or
pop
xor
lahf
inc
adc
fcoml
xor
je
sahf
mov
hlt
push
mov
inc
push
cmc
imul
inc
mov
dec
or
repnz
push
stos
enter
in
imul
sub
das
mov
insl
loop
outsb
mov
and
stc
sbb
mov
cmp
xchg
cmp
inc
mov
shr
stc
icebp
filds
cmp
loop
or
xchg
fnsave
test
lret
xchg
dec
add
sbb
data16
cmp
int
and
sub
pop
or
sbb
adc
mov
jae
dec
push
insb
test
loop
int3
pushf
mov
mov
arpl
in
mov
cwtl
or
ja
pop
mov
fisubl
cmp
mov
mov
gs
push
mov
sub
xchg
mov
mov
fnstenv
ret
push
pop
mov
mov
ss
or
add
mov
stos
imul
stc
mov
push
dec
jae
jae
and
jnp
or
addb
mov
lahf
jnp
mov
popa
sub
leave
or
xchg
incb
mov
fists
and
mov
lret
jl
jmp
adc
rorl
sub
cmp
jnp
dec
lret
sbb
leave
lahf
test
loopne
nop
or
pop
jl
enter
stos
insl
push
scas
int3
jg
push
mov
add
fisttpl
push
dec
push
mov
aad
adc
popa
mov
cld
mov
cltd
pop
fyl2x
adc
sbb
daa
push
out
mov
pushf
mov
add
dec
jl
pop
aad
fdivs
dec
sbb
cmp
push
cmp
fnstenv
in
jmp
pop
les
test
cmp
out
jne
addr16
add
inc
push
mov
loop
pop
outsb
fdivl
sti
pop
jl
or
adcl
jl
je
or
pop
jno
icebp
mov
lret
sub
ljmp
pusha
ds
inc
outsb
fcompl
mull
cltd
repnz
sahf
loop
push
arpl
push
mov
aaa
sub
int3
adc
pop
and
sub
inc
and
dec
xor
push
cld
mov
jns
outsl
xor
mov
jno
aam
cmp
popa
out
pop
shr
lods
push
xor
lret
leave
push
testl
fnstsw
ret
ret
out
in
int3
mov
jl
adcl
out
pop
repnz
imul
outsl
scas
and
push
fucomp
lods
jge
xor
adc
adc
pop
cmp
test
rol
test
sti
mov
jbe
daa
stc
shll
cmp
cwtl
inc
out
loop
jne
pop
cmp
jmp
in
push
cmp
out
lret
cmp
jg
fstps
and
out
sbbl
push
or
add
sub
mov
jbe
das
sbb
daa
movsl
stos
daa
out
fisubl
mov
xchg
mov
das
test
xchg
out
pop
aas
cmovl
movsl
data16
jo
inc
xchg
pop
pop
cmpsl
stos
sbb
lcall
gs
int
jmp
mov
jecxz
jmp
pop
decl
inc
jne
dec
imul
jb
fs
mov
and
pop
and
lods
stos
mov
fwait
jp
stos
xor
sbb
jmp
push
fistps
shlb
adc
mov
imul
sbb
mov
cs
and
leave
mov
test
dec
shll
mov
int
add
sar
xchg
sbb
fcomi
popa
bound
test
mov
mov
push
push
jb
mov
jb
out
rcll
sti
movsb
jmp
pop
daa
sub
xor
adc
sbb
mov
sub
inc
bound
inc
imul
and
pop
mov
xchg
ret
sbb
push
mov
mov
dec
push
in
enter
test
cmc
scas
adc
adc
jmp
lds
adc
xlat
and
dec
adcl
jnp
notb
stos
aas
mov
out
mov
or
sbb
leave
xlat
xchg
andl
out
add
sub
outsb
inc
jbe
sti
out
or
cld
out
dec
outsb
fldt
je
jle
xchg
mov
rcl
jae
cmp
insb
in
mov
popf
cmp
cli
jmp
jmp
mov
cmc
fdivrp
lcall
add
lahf
push
add
loop
jbe
fcmove
and
push
jecxz
mov
dec
fsubl
es
add
in
out
fdivrl
inc
movsl
popa
cs
mov
push
push
les
pop
jl
movsl
pop
sbb
sbb
sub
pop
cmp
dec
in
jno
scas
sbb
outsb
loope
jg
imul
jle
jbe
imull
jp
cmp
jecxz
pop
mov
repnz
test
mov
ss
mov
jp
sti
ljmp
add
jne
lea
dec
inc
xchg
scas
add
adc
and
aas
xor
cmova
xchg
aam
sbb
sub
push
imul
call
cmp
dec
imul
mov
pusha
test
cmpsl
out
movsl
pop
cli
loopne
pop
mov
jl
rcl
lds
mov
mov
popa
scas
adc
ret
xor
ret
push
mov
out
inc
int
sahf
xor
add
in
mov
adc
xchg
mov
popa
inc
out
pop
xchg
sarb
cltd
mov
pop
std
fmuls
and
mov
lods
sub
inc
add
mov
mov
mov
inc
push
and
in
or
add
aam
cmpb
gs
inc
inc
test
inc
pop
fsubr
pop
xchg
push
aam
push
scas
pop
mov
cmp
imul
xor
xchg
xlat
jnp
das
mov
dec
sbb
push
dec
xchg
mov
dec
jae
dec
pop
ds
mov
rcrl
sub
jp
dec
out
insl
sahf
test
pop
pop
lock
mov
imul
sub
cmp
push
mov
xchg
adc
cmp
xor
int
addr16
mov
imul
sti
jecxz
enter
arpl
pop
in
mov
in
scas
dec
hlt
add
pop
mov
xchg
mov
cmp
mov
xor
aas
xor
daa
lods
mov
in
popf
mov
dec
out
into
mov
mov
mov
jo
outsb
jne
jne
and
xorb
std
icebp
adc
inc
cmp
fistpl
sahf
mov
ret
fstpt
xlat
inc
lcall
stos
xchg
shl
scas
std
icebp
mov
mov
xor
xchg
mov
push
sbb
adc
ja
stc
lds
mov
fld
dec
push
aaa
and
cmp
pop
mov
notl
test
lcall
xor
outsb
ret
mov
je
inc
cmc
roll
lcall
pop
popa
ret
cmpsb
shrl
pop
fbstp
jp
std
add
stc
pop
pop
and
sub
stos
out
outsl
mov
adc
mov
push
fsubl
push
insl
dec
cmp
inc
jns
xchg
and
inc
cltd
push
sbb
mov
bound
fcompl
neg
dec
int3
loop
repz
push
jbe
aad
sbb
int
ljmp
inc
push
fistpll
mov
inc
lods
pop
push
sbb
cmc
test
lcall
icebp
lods
sub
sbb
je
das
data16
jns
cmp
pop
jecxz
lret
jns
aam
insb
ret
mov
clc
fnstsw
aas
stos
fildl
andl
into
fucomip
movsb
pop
sbb
lcall
rorb
xor
repz
data16
xor
cwtl
sbb
les
aad
lret
mov
sbb
jmp
sub
jp
adc
mov
out
push
cs
jbe
into
xchg
call
sub
xor
xlat
lock
dec
out
or
std
aas
aas
dec
or
lds
jmp
pop
jmp
mov
cli
mov
mov
pop
push
adc
pusha
rolb
out
paddusw
andl
sbb
adc
mov
ret
fldenv
jbe
lret
cld
or
out
pop
push
adc
mov
loopne
daa
enter
push
ss
scas
inc
cld
mov
fsubr
fldcw
addr16
cmpsb
mov
out
ljmp
jle
mov
insb
sarl
int3
sub
and
or
addr16
or
inc
sbb
mov
mov
jb
push
mov
data16
test
mov
sub
inc
adc
jle
popf
lea
sbb
mov
push
je
push
sub
jns
rcrl
lods
addb
int3
nop
mov
clc
lods
out
stos
mov
test
pop
lock
dec
sti
xor
jno
jecxz
lret
add
pop
sti
mov
ds
out
push
lcall
xorl
mov
fildll
lcall
dec
movsl
or
mov
int3
sbb
inc
arpl
subb
mov
dec
mov
test
and
pop
insl
and
push
movl
add
popf
nop
ds
and
std
loopne
pop
mov
popf
adc
shr
test
add
ret
ja
mov
pusha
insl
xchg
nop
push
test
xchg
or
xor
rol
push
ds
outsb
jg
adc
cli
arpl
lods
pop
sub
and
and
pop
roll
ss
pop
pop
mov
js
std
bnd
addl
test
and
idivl
pop
cmovne
inc
mov
lret
mov
adc
out
ds
test
xor
aas
subl
out
mov
in
xchg
aad
mov
aas
cmp
mov
ja
cmp
fcomps
imull
pushf
aas
jo
jbe
div
mov
arpl
cmpb
sbb
mov
xchg
leave
adc
mov
out
pop
xor
movb
fildll
push
dec
and
pop
jbe
dec
test
jne
xchg
and
sbb
fs
xor
and
cmp
bound
es
dec
cli
fdivr
mov
mov
add
xor
xchg
testl
dec
mov
sbb
cmpsb
sbb
je
adc
adc
rcll
xchg
ss
icebp
inc
add
mov
inc
sub
outsl
add
adc
mov
adc
push
pop
dec
into
mov
cs
icebp
pop
xor
lret
popa
mov
je
cmc
lahf
insl
ja
imul
jae
fs
in
pop
cmp
int
pop
jne
addr16
inc
fcomps
adc
loope
lock
inc
mov
jecxz
mov
in
int
pop
mov
insb
mov
mov
out
fs
maskmovq
mull
mov
mov
test
loope
lahf
fiaddl
andl
repz
xchg
dec
jns
ret
push
dec
or
pop
pop
mov
xor
test
jg
notl
jne
lcall
mov
icebp
mov
aas
gs
call
cli
fnstsw
sbb
jne
sbb
or
or
adc
jne
es
in
xor
cltd
sbb
scas
or
mov
mov
std
sub
js
and
fdivl
bound
jmp
mov
adc
icebp
mov
pop
test
movsl
fdivrs
mov
mov
mov
mov
or
mov
inc
and
xor
int
sbb
fcoms
popf
out
mov
sbbl
sahf
mov
mov
pop
hlt
xchg
push
jge
dec
inc
push
ljmp
mov
push
sbb
push
aam
stos
jmp
pop
popf
ljmp
aaa
test
xchg
push
dec
push
xchg
call
push
sbb
imul
push
sbb
push
filds
pop
dec
push
dec
fimuls
shll
inc
pop
shrb
xor
sbb
or
mov
in
push
mov
dec
jno
pop
cltd
and
shll
cmpsb
or
mov
adc
push
push
xor
fimuls
and
dec
and
testl
sbb
mov
aas
loope
out
inc
in
lret
sub
pop
and
enter
dec
xlat
push
mov
xchg
xor
mov
fbld
es
jno
sbb
xchg
add
ror
cmp
ss
xchg
push
insl
outsb
into
jns
es
insb
adc
aaa
adc
insl
and
jo
stos
mov
bound
adc
inc
mov
ljmp
push
sub
xor
mov
jno
cwtl
adc
out
shlb
xchg
sarl
js
cmp
mov
cmpsb
or
repz
in
cltd
outsb
mov
out
daa
jp
xor
mov
mov
cmp
push
sub
jne
inc
shll
mov
mov
jbe
fdivrl
fsubl
in
or
ret
dec
mov
lcall
xor
jmp
dec
jns
sbb
mov
movsb
xor
xor
dec
xor
mov
sub
fldl
scas
sub
cmpsb
test
add
insl
jmp
cmp
je
cmc
pop
arpl
orl
scas
rcrb
xorl
and
adcl
and
jno
mov
mov
rolb
cs
cmp
adc
sbb
or
dec
lcall
sbb
jb
fwait
ljmp
jmp
push
mov
mov
outsb
or
pusha
inc
push
xchg
pushl
push
shll
inc
cmp
cld
imul
mov
sbb
xchg
enter
and
lret
cmpsl
inc
out
mov
jbe
movl
int3
pop
rcl
xchg
sbb
mov
aaa
mov
jl
mov
es
lret
stos
and
xor
mov
leave
xor
mov
and
sbb
adc
andl
mov
cmc
inc
loop
cli
add
lahf
inc
daa
adc
imul
lcall
dec
fisubrl
sbb
or
adc
push
push
sub
xchg
cltd
into
add
pop
sub
xor
add
xlat
cmc
sub
negl
nop
les
mov
cmp
mov
scas
cmp
xchg
jp
mov
clc
dec
daa
adc
push
sahf
push
roll
cmc
nop
in
xchg
pop
push
add
sarb
leave
ljmp
adc
fs
jecxz
in
sti
mov
out
shrb
xor
inc
pop
mov
rcll
or
das
call
movsl
pop
adc
xchg
ret
jp
and
mov
ja
dec
cld
pop
stos
push
popa
mov
rcrb
inc
inc
mov
icebp
inc
adc
lcall
jne
int
ret
das
cmp
pop
mov
hlt
push
cmpsb
subl
or
or
xor
les
pop
mov
ja
outsb
stos
mov
test
loope
xchg
pop
movsb
xor
repz
stc
pop
jle
jmp
sub
add
cwtl
sbb
inc
push
into
sub
sub
push
xor
mov
popl
mov
adc
cmp
decl
inc
outsb
je
add
mov
cld
push
sbb
mov
pop
out
add
das
mov
mov
ljmp
xchg
jg
sub
roll
aas
jne
lds
loopne
jle
mov
inc
test
or
aas
rorl
cmp
add
push
inc
fwait
sub
loopne
push
adc
je
jne
mov
inc
scas
arpl
xor
adc
sub
jnp
icebp
cmp
cmpsb
call
lods
cmp
push
mov
push
jl
mov
cmp
fbld
rep
xchg
inc
inc
arpl
cmp
xor
and
xlat
jmp
mov
fucomi
test
jl
or
adc
sbb
scas
movb
insl
pop
ret
sub
cmp
sbbl
daa
push
arpl
stc
mov
pop
adc
fbld
jmp
mov
jmp
and
sahf
loop
popf
cmpsb
daa
add
ficoml
outsl
ljmp
aam
pop
mov
dec
aad
lds
mov
popa
inc
xlat
cli
scas
lds
insb
cmp
je
push
xor
adc
pop
stos
and
mov
push
xor
cs
pop
jle
sub
pop
loope
arpl
ret
or
push
mov
aas
pop
lahf
or
xchg
pop
xchg
jb
in
out
dec
fsubrs
xor
ljmp
inc
sbb
mov
sahf
cmc
mov
xlat
clc
imul
inc
jmp
mov
xchg
lods
inc
push
adc
or
mov
out
push
jp
test
or
jb
jne
pusha
mov
test
shr
xor
out
xor
mov
repnz
inc
ja
jp
js
mov
rol
arpl
aas
adc
pop
int3
orb
jg,pn
repnz
icebp
iret
test
jle
mov
ds
jnp
fst
test
sbb
lea
and
inc
pop
incl
mov
pop
push
pop
loop
lahf
cwtl
push
cltd
inc
pop
imul
lcall
or
lret
ljmp
jae
cmp
sbb
pop
iret
aas
into
mov
jae
mov
or
bound
mov
test
sub
scas
mov
jp
pushf
and
loopne
adc
stos
pusha
loope
push
inc
imul
fnsave
jecxz
out
jnp
sub
into
cli
jne
pop
push
fwait
xchg
outsb
inc
pusha
pop
xor
fdivs
in
mov
fcom
aam
dec
fcomip
xor
jns
imul
outsl
adc
cmc
sub
pop
xlat
cli
pop
ficoml
enter
sbb
sub
popf
les
xchg
cmpsl
jmp
jge
lock
cmp
lods
das
pop
repz
popa
pushf
dec
inc
push
xchg
cmp
out
mov
or
movsl
xor
sbb
mov
aam
and
xchg
and
dec
jp
xor
orl
inc
xlat
sti
xchg
dec
ret
mov
enter
rcrl
sahf
mov
mov
jbe
lods
cmpsb
push
fs
into
into
xor
sub
nop
iret
insb
cli
sbb
cli
mov
sahf
jne
arpl
xor
insb
mov
insl
or
or
ficompl
sbb
repz
xchg
push
inc
mov
into
fisubs
lahf
push
xchg
xor
dec
in
in
lret
into
cld
bound
lea
lods
mov
popa
xchg
sbb
and
mov
cmp
sub
mov
ret
sbb
mov
stc
mov
sbb
sbb
call
cltd
imull
xchg
fisubrl
data16
aaa
lock
sar
add
inc
mov
push
arpl
add
jb
icebp
roll
fists
ret
sbb
orb
jge
add
or
aad
dec
pop
out
rcrl
inc
aaa
fcompl
xchg
outsb
mov
int3
fistps
cmp
inc
data16
sub
ja
fisttps
lcall
mov
cmp
push
mov
ljmp
dec
in
mov
subl
xor
mov
mov
xchg
addr16
iret
lds
insl
or
jl
pop
loope
add
fwait
icebp
popa
push
xchg
sub
incb
mov
test
mov
shrl
call
and
iret
lret
lret
js
shrb
adc
fsubrs
dec
cltd
stc
cmp
lock
popa
xor
lock
push
ss
add
ss
push
and
inc
popa
jb
xor
fnstsw
jl
mov
push
ds
and
jnp
dec
bnd
or
adc
push
lcall
mov
mov
fdivrl
or
sbb
mov
mov
jne
dec
je
mov
daa
lahf
pop
dec
push
stos
sbb
lahf
dec
and
add
orb
mov
cltd
arpl
popf
cmp
ficomps
add
mov
lcall
mov
insl
repz
xlat
rorl
lret
lock
es
inc
mov
and
mov
idivl
inc
dec
push
push
aad
in
or
jmp
clc
fstps
mov
outsl
push
in
sub
add
loopne
dec
push
and
mov
cmp
sahf
pop
scas
add
into
test
adc
loope
push
dec
xchg
add
pop
add
pop
popa
sbbb
int
xchg
xchg
fdivl
xor
sub
mov
cmpsl
clc
stc
push
jecxz
xlat
cli
xor
fnstenv
fdivrs
mov
mov
ss
into
push
aam
inc
repz
scas
jmp
nop
mov
sub
int3
daa
in
in
inc
fsts
ljmp
jne
push
cmp
inc
clc
mov
lock
repz
jmp
pop
fcoml
cmc
gs
pop
add
imul
lahf
andl
stos
jne
shlb
mov
xor
shlb
sbb
fsubrs
jo
mov
jecxz
add
lods
sub
adc
idivb
arpl
push
cmpsl
and
pop
lds
sbb
in
cwtl
cmp
sub
lods
or
jno
or
push
xchg
shrb
stos
cmp
addr16
fcoms
push
aad
ja
adc
lods
mov
or
jo
test
inc
les
xchg
stos
or
jno
fstl
jno
fsts
out
jns
dec
inc
mov
sub
popa
cmp
jg
adc
or
rcll
cmpsb
in
xchg
xor
mov
iret
dec
incb
push
andb
das
shlb
mov
ficoml
jge
sbb
mov
fs
cmp
mov
test
and
adc
xor
outsb
push
xlat
insl
pop
les
inc
call
nop
out
insl
pop
pusha
mov
and
jle
int3
sbb
jns
fdivs
and
arpl
shll
cs
inc
sub
mov
es
pop
pusha
mov
int
pop
and
jecxz
or
push
push
mov
out
mov
ret
cli
push
and
push
dec
movb
mov
add
aam
xchg
mov
xchg
push
and
pop
lahf
adc
mov
call
and
dec
sbb
inc
inc
mov
pop
and
inc
sti
fists
int3
outsl
mov
mov
jl
inc
lds
xlat
push
roll
pop
pop
pop
mov
xor
dec
xor
xor
mov
sub
in
in
das
outsl
or
inc
daa
or
jp
adc
xchg
popf
lds
inc
cmp
mov
test
inc
adc
sub
rol
js
outsl
lret
popa
cmpsl
cmpsb
cmp
adc
in
stos
xor
ja
sub
jnp
sbb
xchg
sbb
fldenv
les
sbb
rolb
inc
dec
add
xchg
out
je
pop
movsb
sbb
loopne
stos
fbld
sahf
cmp
cmpsb
mov
lods
imul
jge
inc
jae
push
out
fmull
shlb
xor
jnp
mov
adc
jns
lret
lcall
je
je
movsb
inc
es
mov
jmp
inc
adc
mov
in
mov
mov
jb
fs
dec
movsl
lahf
pop
fs
xchg
jb
sbb
arpl
xor
scas
mov
cmovae
and
std
pushf
push
push
int
gs
cmp
push
lret
sahf
and
insb
push
push
push
inc
loopne
inc
and
lea
popa
or
inc
jmp
into
cmp
repnz
sbb
cwtl
pop
lret
mov
and
mov
xor
mov
stc
dec
dec
andl
ja
int3
fbstp
xchg
sub
adc
aam
daa
iret
sub
pop
xlat
pop
inc
fsubs
fs
rolb
dec
mov
test
mov
aas
lods
cs
data16
ficoms
sbb
leave
or
in
mov
rcrb
scas
pop
enter
mov
mov
sub
mov
xor
add
stc
ljmp
or
adc
jl
mov
dec
push
shlb
push
aas
jbe
and
lds
fstps
in
fstl
dec
sbb
clc
loopne
pop
inc
call
aad
lret
jl
and
call
fstpt
xor
inc
sub
mov
jg
inc
nop
xchg
into
push
sbb
mov
inc
lds
cmp
clc
mov
cmp
push
pop
imul
fisttpll
xchg
mov
movsl
outsb
cmp
mov
aas
lret
lahf
push
cmc
xchg
mov
dec
pop
outsb
xcrypt-ofb
cmpsl
outsl
insl
xchg
rol
test
iret
dec
sub
into
cmpsl
outsl
sub
push
scas
or
dec
dec
fnstsw
inc
rcll
jl
enter
dec
lcall
les
jnp
inc
or
adc
xchg
dec
addr16
and
push
out
pop
sub
inc
nop
adc
xchg
cmp
adc
sbb
outsb
xchg
pop
sahf
call
and
xchg
push
pop
outsb
push
pop
pushf
outsl
fisubrl
in
test
daa
push
inc
and
jo
pop
movsl
cmp
data16
mov
clc
int3
lahf
pop
mov
rcl
push
xchg
mov
dec
stos
mov
push
es
pop
mov
int
inc
mov
scas
mov
mov
dec
add
outsl
fs
int
loop
and
add
std
pushf
fldt
fs
pop
out
cmpsb
inc
loop
mov
mov
movsl
add
dec
scas
add
and
and
mov
mov
int
push
bound
mov
pusha
mov
ljmp
iret
into
insl
mov
sbb
push
pop
jnp
jge
dec
test
and
sti
adc
mov
ljmpw
sub
iret
fwait
out
stc
sub
pushf
pop
pop
dec
mov
pop
mov
add
clc
imul
add
jb
aaa
sub
jmp
xor
fidivl
sbb
pusha
scas
mov
ja
es
cli
out
mul
add
jecxz
sbb
push
jnp
mov
in
or
loopne
pop
dec
inc
add
mov
adc
movsl
loope
inc
and
dec
jo
sbb
inc
clc
fcomi
sbb
repz
xor
cmp
xchg
aad
jle
out
pop
hlt
test
xchg
in
pop
addl
leave
js
or
add
pushf
call
outsl
rcrb
adc
daa
mov
jp
adc
and
pop
test
ret
push
lcallw
mov
sahf
mov
mov
popa
inc
pusha
mov
inc
jecxz
dec
sbb
pop
push
and
adc
mov
xchg
fs
and
jmp
fimuls
and
int
mov
aaa
bound
dec
adc
dec
pop
pop
test
sub
push
pop
gs
outsl
jbe
insl
and
add
enter
lods
jge
and
popf
xor
loope
cwtl
pushf
inc
xchg
notl
or
add
adc
mov
movsl
and
push
or
stos
out
dec
imul
es
std
jge
cltd
int
push
fdivrs
jg
mov
enter
sub
pop
fsubr
jae
xchg
pop
mov
pop
or
push
std
dec
in
fistps
rorl
cmp
dec
push
and
filds
push
adc
mov
xlat
and
mov
test
sub
nop
adc
repz
pop
cwtl
outsl
lods
xchg
and
js
ljmp
mov
cmpsl
xchg
pushf
jo
hlt
adc
inc
in
xor
loop
scas
mov
jnp
lods
dec
jno
imulb
shlb
and
cmpsl
jns
sub
mov
shll
adcb
mov
dec
inc
xor
fwait
pop
adc
cmc
cld
ss
xchg
andb
cmc
aam
cmp
ss
mov
cli
ss
mov
arpl
stos
rcll
insl
sti
or
into
mov
fldcw
cmp
insl
push
fbstp
push
enter
call
lea
out
and
outsl
outsl
flds
pushf
jmp
mov
push
jecxz
bound
test
aad
call
ja
scas
sub
pusha
mov
sbb
in
repz
out
jnp
cmpl
int3
mov
daa
mov
shlb
dec
jp
shrl
subb
or
inc
mov
xor
incl
rep
test
dec
in
lds
mov
les
jl
cmpsl
xchg
pop
lret
lret
hlt
adc
das
jmp
pop
jg
mov
mov
popa
adcl
jbe,pn
sub
ret
fistpl
mov
and
fistpll
add
jnp
pop
aad
push
in
incb
test
cmp
xor
push
or
cmp
bnd
jl
push
mov
jp
insl
dec
push
shl
jecxz
inc
orl
icebp
mov
pop
in
je
je
loopne
xchg
mov
popl
je
sub
fs
into
jge
xor
add
sub
cmp
push
stos
adc
fsubp
test
dec
cwtl
int
push
mov
faddl
push
insb
rclb
mov
sbb
cmp
lcall
cli
loop
sbb
pusha
icebp
fbld
pop
jns
in
in
mov
cmp
mov
pop
scas
lods
jecxz
leave
xchg
fcompl
and
xor
jo
into
aaa
stc
fistps
out
push
movsb
sbb
fisttpll
ficoms
xor
icebp
lock
jl
loopne
mov
ret
movsl
scas
sbb
jno
cltd
pop
add
pop
cltd
or
sub
cltd
pushf
adc
dec
push
inc
sub
xchg
lds
push
icebp
inc
xchg
push
push
ds
push
std
mov
xchg
pop
inc
sub
movsl
mov
xorb
dec
and
jge
popa
mov
pop
test
repz
or
xchg
or
add
dec
orb
xor
push
jns
pusha
mov
jle
leave
push
push
sub
or
stos
xchg
inc
xor
out
es
inc
je
or
adc
sbb
cli
sbb
cmp
icebp
mov
ja
cwtl
aas
fsubrs
push
and
and
cmp
dec
add
xor
fstps
lret
dec
or
lods
mov
in
push
int3
scas
push
inc
lcall
push
shrb
sub
out
out
lea
add
xchg
fldl
pushf
sarb
mov
or
cmpsb
cmp
cs
cs
repz
mov
and
and
mov
mov
arpl
fistl
iret
or
pop
enter
iret
mov
loop
mov
and
add
pusha
pop
push
std
cmp
sbb
insl
push
add
mov
lcall
or
test
xchg
pop
xor
inc
les
fs
dec
movsl
add
repz
xor
je
es
stos
popf
cmp
mov
imul
in
ficoml
sahf
into
push
jecxz
and
push
stc
mov
cwtl
xlat
and
inc
xor
mov
jl
sub
cmpsb
and
cmp
pop
mov
shll
xlat
aad
jnp
mov
adc
adc
sub
repnz
mov
mov
mov
xor
jmp
jecxz
or
loope
jno
inc
pop
xor
adc
jl
jmp
cmp
pop
jl
out
and
adc
mov
or
fbld
sub
mov
xchg
pop
pop
jle
and
mov
mov
pop
mov
jb
mov
loopne
cmpsl
jg
stos
stos
in
ss
mov
gs
mov
idiv
pop
bswap
mov
push
cmp
push
xor
pushf
int3
mov
loop
loop
push
dec
add
mov
frstor
test
add
scas
arpl
add
jnp
into
data16
cmp
addr16
imul
mov
jnp
lret
ret
pop
repz
jge
aas
mov
in
mov
nop
insb
int
test
ja
sbb
or
jne
and
aas
inc
mov
notl
jae
cwtl
pop
mov
lods
rorb
lock
sbb
or
sbb
mov
scas
lret
push
dec
shll
shr
or
xor
aam
fcoml
xor
add
dec
jnp
addl
out
add
ffree
inc
shrl
pop
jle
outsb
movsb
push
add
incl
jns
push
addr16
lods
xor
loope
and
jge
cli
test
xor
sbb
jge
pop
pop
or
insl
out
push
add
inc
orl
mov
loop
stc
in
fidivrl
push
or
cmp
jl
test
adc
cmp
hlt
and
mov
std
xchg
adc
outsl
fcomip
cs
scas
test
repnz
outsb
sub
dec
or
cmc
add
xchg
inc
sbb
repz
fcmovbe
aad
push
adc
cld
push
push
pushf
cmp
loopne
and
inc
lahf
and
pusha
push
rorb
mov
fdiv
adc
fstenv
xorb
mov
std
leave
sbb
xor
jns
push
lret
sub
pop
std
adc
cmpl
sub
fisubrs
mov
mov
and
pop
adc
cmp
mov
sbb
push
out
divl
push
xorb
sti
dec
ja
cmpsb
stos
leave
je
test
out
shll
int
jp
sbb
pop
mov
jge
jne
mov
sub
jno
sbb
xor
sub
insl
mov
pop
jl
inc
stos
mov
sub
lcall
xchg
notl
in
dec
aad
loopne
imul
push
cmp
dec
pop
ret
iret
mov
mov
vmovntps
or
movsl
jo
cld
mov
jb
js
icebp
test
repz
es
arpl
cmpsl
push
gs
adcl
pop
lcall
pop
push
popa
ret
xor
pop
inc
sbb
ljmp
shrl
data16
imul
cli
lock
dec
jle
jecxz
ret
loop
cmp
test
test
in
insb
mov
iret
fwait
pop
insl
cmp
xchg
xchg
in
or
mov
xchg
mov
shr
push
rorl
je
adc
cmp
fldenv
arpl
push
sub
cmp
cmp
insb
in
dec
and
jg
jecxz,pn
out
cmp
jb
sub
leave
ljmp
xchg
test
into
pop
dec
shrl
xchg
xor
mov
stos
ja
enter
mov
and
cld
mov
sub
push
divl
pushf
xchg
pusha
sbb
stos
add
mov
or
test
je
mov
scas
rorb
mov
loop
cmp
lods
roll
push
fs
pop
data16
dec
push
pop
cmp
inc
cmp
push
lret
icebp
xor
xchg
and
andb
cmp
aas
jb
sub
lods
data16
insl
daa
push
leave
xor
lea
andl
gs
inc
add
dec
dec
mov
mov
test
and
push
xor
stos
aaa
mov
or
jnp
sub
ljmp
jge
iret
lret
push
jge
test
enter
in
out
shl
cmp
aaa
cmpsl
mov
dec
and
or
adc
add
enter
adc
dec
in
dec
sub
inc
mov
jmp
sub
adc
fdivrl
fstpt
xor
push
or
fcmovnb
jg
add
hlt
int
mov
negl
in
push
cmp
fwait
lret
cmp
sbb
gs
jmp
or
shrb
sahf
jecxz
and
push
je
in
sub
roll
in
js
cmp
xchg
mov
test
cmpsl
lea
stos
clc
bnd
mov
mov
xchg
sub
xor
pop
push
lea
cmp
sub
sub
out
test
int
jmp
aaa
or
fldenv
fisubrl
push
test
push
add
inc
xchg
xchg
cmp
pop
ja
gs
movsl
cltd
out
fyl2xp1
and
adc
xchg
dec
jne
out
dec
adc
imul
jne
xchg
dec
int
repz
stos
cwtl
cwtl
push
inc
call
cli
rcrb
jecxz
pop
sub
fisubs
and
and
and
bound
cs
popa
lahf
out
mov
or
pop
test
pop
pop
inc
loope
xor
push
mov
pop
dec
outsl
les
ljmp
xor
xchg
jns
jb,pn
inc
repz
mov
repnz
mov
mov
movsb
pusha
jge
pop
sbb
aad
movsb
cmc
dec
out
stos
testl
jmp
xchg
xchg
dec
and
icebp
xchg
xchg
arpl
lret
into
sbb
mov
mov
imul
jmp
addr16
icebp
icebp
mov
mov
jnp
stos
repz
jle
outsb
imul
ret
pop
lret
dec
mov
cmpsb
and
int3
mov
jae
stc
stc
orb
mov
mov
jo
out
inc
inc
stc
rcll
xchg
sahf
hlt
sbb
pusha
xor
aas
pop
push
xchg
xchg
mov
clc
pusha
add
inc
into
jno
aad
lcall
and
pop
out
mov
xor
sarb
xchg
pop
out
mov
rcrl
enter
jmp
mov
xchg
pusha
loope
sti
add
lahf
scas
lds
outsl
xor
xchg
loope
es
loopne
mov
clc
pop
mov
cmc
push
mov
mov
ret
ret
jbe
mov
xlat
xchg
dec
jne
popf
iret
pushf
dec
xlat
mov
in
push
mov
sbb
push
and
sahf
cmp
sbb
push
cmpsl
cld
int
dec
and
mov
aaa
cmc
dec
ljmp
das
inc
test
je
mov
cmp
nop
mov
xor
loop
mov
pop
jb
mov
shrl
adc
fistps
orl
cltd
rorb
cmc
jo
pop
jp
mov
pop
pushf
rol
mov
pop
jge
push
jnp
dec
dec
loope
mov
mov
add
sub
adc
mov
push
xchg
push
popa
andb
jge
add
push
call
pop
repz
jne
mov
sbb
pop
mov
lahf
out
pop
xor
inc
mov
inc
push
xchg
mov
push
es
scas
dec
in
mov
sbb
imul
push
sbb
push
outsl
add
and
fnsave
mov
fisttpll
push
cli
sub
jnp
xchg
jne
xor
push
xor
jl
stos
out
out
scas
push
movsl
addb
add
out
cmp
imul
and
add
and
push
out
bound
push
pop
jnp
xor
jne
pop
push
jo
mov
jmp
lea
sub
push
xor
sbb
stc
pusha
rcrb
das
pop
test
and
loopne
inc
mov
out
jmp
cli
movsl
out
push
push
repz
mov
pop
jmp
insb
xchg
stos
test
mov
arpl
push
cmpsl
outsb
ret
ja
mov
ljmp
ret
xor
addr16
pop
mov
adc
mov
inc
imul
aas
sbb
xor
insb
je
add
aad
mov
dec
cmp
dec
repnz
xchg
shl
pusha
xchg
mov
out
xor
inc
test
stos
pop
jmp
dec
jl
testl
cmp
jmp
cli
push
pop
push
mov
cld
shll
aam
jbe
adc
fwait
cmpsb
inc
push
xchg
xchg
lea
push
andl
in
or
sub
add
scas
jb
nop
jl
mov
imul
pop
inc
jp
jbe
outsl
loope
fwait
sub
lds
dec
roll
sbb
les
pop
push
sub
jne
cmp
cmpsb
jg
jl
sbb
jns
cmp
dec
shrb
iret
movsb
cs
les
enter
cwtl
cmpsl
sahf
js
mov
push
fistl
fildll
sub
inc
and
add
dec
gs
loope
fimull
sub
or
in
movsb
mov
mov
push
mov
push
out
xor
xor
push
cld
push
xchg
lea
iret
fisubrs
push
loopne
in
andps
xor
stos
shrl
jecxz
and
cs
pop
sbb
loope
adc
shrl
inc
xchg
cmp
jp
lea
mov
stos
fcoml
jae
call
lcall
pop
xlat
jns
inc
fcomps
outsb
sbb
cmp
aaa
loope
xor
rclb
lods
pushf
jl
and
jp
sub
cmp
dec
or
inc
std
or
mov
adc
adc
cltd
popf
aas
fs
ds
lret
jno
jg
lcall
sbb
inc
push
jge
out
pop
add
xchg
jmp
int
jns
mov
sub
insl
dec
jb
mov
popf
notl
push
xchg
cwtl
mov
jb
pushf
mov
sti
imul
frstor
mov
shl
dec
mov
icebp
jp
outsb
sbb
repnz
or
ds
out
push
popf
out
inc
mov
add
loope
dec
test
out
ret
call
inc
sub
sar
mov
cs
daa
lods
push
inc
test
cmpb
mov
fwait
adc
fimull
out
push
loope
mov
sbb
es
cwtl
jge
pop
pop
pushl
test
sti
add
js
mov
jg
loop
subb
nop
push
xor
xlat
call
sti
pop
out
int
out
filds
fs
jns
sarb
out
xchg
lods
pop
movsb
mov
nop
and
xor
push
jbe
lds
movsb
sbb
mov
inc
inc
mov
and
mov
inc
dec
mov
les
pop
jno
mov
jb
dec
or
rcll
in
mov
push
xlat
and
sbb
test
pop
ret
sbbl
adc
inc
and
inc
pusha
cli
or
and
mov
mov
xchg
xchg
mov
out
bound
mov
xchg
mov
cmp
call
push
inc
stc
pop
xor
push
push
lret
push
rolb
pop
stos
push
jns
cwtl
or
sub
add
and
lods
dec
or
ljmp
jl
xor
add
daa
call
testb
ret
mov
fimuls
mov
pop
pop
xor
xchg
fiaddl
icebp
jl
cmc
jmp
daa
cmp
pop
adc
pop
xor
stos
aaa
mov
and
in
and
pop
pop
test
xchg
popf
pusha
fstl
lds
clc
sti
sub
adcb
fcmovnbe
jl
xchg
lods
in
inc
ljmp
insl
inc
ss
pop
sub
sub
testb
mov
add
push
pusha
inc
sbb
fwait
push
out
and
mov
cmc
popa
mov
lock
pushf
jne
add
push
ror
pop
mov
popa
in
push
faddl
repnz
ss
mov
pop
push
inc
mov
cltd
mov
icebp
mov
xchg
cmp
cmpsb
push
add
xlat
inc
cmpsl
jne
orb
rol
sub
mov
inc
pop
dec
push
jle
arpl
mov
sub
test
dec
das
inc
aas
or
cwtl
mov
ds
mov
aam
loope
lretw
and
mov
movsb
das
cli
popl
xor
mov
sbb
insl
push
cmpsb
jne
cld
scas
adc
push
ret
and
dec
inc
das
push
pop
sbb
xor
call
outsb
xchg
jo
pop
sbb
jo
jecxz
data16
jno
cmp
add
aad
test
ljmp
rclb
in
sti
add
sbb
ret
inc
jg
sbb
outsl
mov
ret
push
fwait
scas
loop
adc
xor
mov
xchg
hlt
fst
popf
scas
insl
test
js
xchg
cltd
mov
rcrb
dec
loop
cld
xchg
xchg
dec
adc
imul
in
cmpsl
loope
xchg
jo
cli
mov
andb
iret
mov
out
mov
cmc
call
ret
add
leave
jmp
xchg
add
adc
inc
sbb
aas
mov
gs
or
xchg
lock
sarb
sbb
inc
xchg
cmp
xor
push
cltd
jp
mov
mov
cwtl
addr16
adc
test
test
in
cwtl
mov
jns
stc
xor
mov
scas
jae
mov
mov
ja
add
push
dec
ljmp
idiv
xlat
fwait
lods
dec
std
mov
leave
scas
and
mov
movsl
or
les
mov
int3
mov
nop
ds
inc
xchg
nop
addr16
cmpsb
dec
mov
cltd
xor
int3
cwtl
icebp
testl
xchg
dec
add
and
or
ljmp
mov
mov
mov
cltd
xchg
insl
fnstsw
jecxz
sti
fs
mov
out
mov
add
push
pop
sbb
push
or
pop
sbb
fcompl
pushf
add
out
out
cmp
or
sub
jg
fwait
mov
add
pop
sbb
add
and
inc
in
jae
rclb
xchg
aas
or
push
ljmp
cmp
sti
and
cs
and
fiadds
jg
jb
in
sbb
push
sub
jl
sbb
loop
and
es
testl
xor
sub
mov
push
jg
mov
and
scas
loope
icebp
rorb
xorb
test
loop
and
mov
test
pop
pop
daa
pop
dec
xor
test
ljmp
je
fnsave
xor
or
and
jg
mov
or
inc
adc
jg
pop
mov
cld
fldl2t
mov
loope
push
or
psllq
ja
rorb
mov
bound
jl
outsb
xor
loope
adc
push
xchg
and
int
mov
mov
loope
je
nop
fistl
rorb
mov
add
or
lock
lea
fwait
jns
inc
push
cld
push
push
jmp
sub
repnz
mov
pop
push
fiaddl
add
stos
arpl
adc
cld
pop
aas
inc
idivl
or
xchg
out
jle
push
inc
lea
adc
jno
fisubs
jg
movb
pop
popa
aaa
jmp
rcrl
push
in
aam
shrl
test
mov
lret
shrb
out
out
pop
adc
or
push
sub
jno
and
repz
orl
loopne
jns
dec
inc
imul
pop
ret
ss
stos
hlt
aad
insl
mov
out
mov
xor
xor
cmp
xchg
xchg
sti
xor
clc
fidivrl
push
sbb
stos
xor
adc
sub
leave
and
aam
add
scas
loope
stos
lods
dec
ja
fchs
daa
arpl
fsub
xor
adc
dec
cwtl
subb
fimuls
fstp
mov
push
push
push
xchg
xlat
es
daa
adc
shlb
into
sub
sbb
rorb
std
push
dec
clc
jne
hlt
xor
cmp
icebp
pop
or
jb
add
xor
cmp
pop
outsl
sub
inc
and
and
jns
push
xor
lds
or
push
orb
repz
and
mov
xchg
mov
mov
push
orb
and
mov
inc
sub
jno
xchg
shrb
pop
inc
sbb
xor
sar
into
test
daa
adc
pop
in
flds
push
sbb
lcall
jg
mov
testl
daa
fdivrs
jne
pop
fsubr
ret
test
out
ss
inc
push
addl
add
dec
arpl
les
aam
adc
imul
jp
jmp
and
lea
cmp
cmpsl
dec
scas
mov
into
jnp
shl
decl
inc
pushf
cmp
and
push
or
lods
inc
xorl
jb
and
add
sub
add
sbb
jnp
lods
cs
jle
xor
lea
mov
and
sub
mov
or
call
cli
sti
adc
das
or
xor
inc
or
dec
dec
mov
mov
xchg
push
out
mov
test
ds
mov
enter
imull
addr16
sbb
icebp
add
mov
push
push
pop
dec
repz
enter
xchg
pusha
imulb
mov
gs
mov
push
push
outsl
sbb
gs
and
testl
pop
movsb
jecxz
adc
xchg
popf
xchg
or
mov
mov
or
and
nop
mov
mov
or
cmp
and
pop
add
arpl
sbb
push
add
into
gs
pop
fs
out
or
repz
mov
jmp
xor
les
stc
push
hlt
js
mov
mov
pop
xor
iret
outsl
mov
pop
test
lds
cmp
nop
inc
icebp
dec
sub
inc
jne
insl
ret
mov
cmc
sbb
fimull
push
jge
repnz
jecxz
adc
xlat
pop
xor
mov
mov
in
test
out
and
mov
rol
dec
ret
sbb
jge
or
jne
scas
xchg
popa
test
or
cmp
rcll
imul
and
cmp
sbb
jmp
ficoml
mov
mov
inc
loop
mov
sub
sahf
int3
xchg
xchg
pop
jecxz
mov
mov
add
pop
shl
mov
mov
add
sbb
popl
imul
and
xchg
sub
jmp
es
mov
pusha
cmpsb
mov
std
jo
data16
bound
aad
adc
pop
jae
add
and
insb
jo
lea
jecxz
jno
add
sbb
or
popa
lock
xlat
std
test
xchg
test
lods
sahf
cs
dec
cmp
mov
lds
mov
ret
xchg
inc
push
sbb
xchg
pop
adc
inc
xor
aaa
scas
jmp
ja
lods
lcall
dec
std
push
xchg
es
icebp
sbb
mov
inc
cmp
jae
leave
push
push
outsl
jne
ljmp
push
xor
cmovno
idiv
jbe
mov
push
mov
roll
aad
dec
fwait
in
int3
push
loope
adc
mov
mov
and
roll
or
xchg
daa
jecxz
jb
pop
pop
dec
icebp
xor
sbb
in
dec
or
push
pushf
adc
jge
jmp
adc
pushf
enter
jge
lea
rolb
sti
ds
sbb
shl
xchg
insb
dec
cmpsl
cs
and
rcrb
mov
dec
imul
loop
xor
push
outsb
sahf
push
add
sbb
loopne
inc
pop
into
push
adc
mov
lret
mov
stos
xor
aaa
inc
mov
mov
jo
pop
pop
add
jnp
inc
ffree
xchg
pop
jge
mov
movsl
js
mov
adc
popf
nop
jb
inc
jmp
movsb
pop
xchg
jo
mov
popa
xor
sti
pop
cmp
les
cwtl
out
js
jns,pt
pop
push
push
idivb
mov
push
cld
push
push
movsb
into
push
lods
mov
inc
mov
add
xchg
shl
mov
jb
jmp
pop
adc
pusha
imul
pop
icebp
xor
xchg
or
mov
pop
cs
cmpsl
jo
inc
jo
sub
fists
daa
mov
jne
ljmp
popl
mov
mov
arpl
sbb
adc
stos
sbb
sbb
dec
lret
cwtl
enter
aam
data16
adc
outsl
mov
dec
or
inc
jno
sahf
push
fcomps
repz
jmp
int3
adc
jmp
test
test
mov
lret
scas
les
mov
mov
push
mov
mov
push
xchg
mov
xchg
in
rorl
lret
inc
ror
hlt
aad
mov
data16
jp
sbb
mov
mov
rcll
lret
in
clc
sbb
mov
xchg
js
add
dec
jne
jbe
cmc
jno
inc
xlat
ja
sub
sub
test
lcall
cmp
lcall
mov
push
mov
xor
sbb
jecxz
sbbl
push
xor
push
hlt
cmp
imul
es
mov
cmp
sub
loopne
jne
mov
sbb
std
orb
insb
stos
jns
or
outsb
xchg
mov
dec
inc
fidivrl
adc
in
movb
cs
push
mov
and
push
adc
lahf
cmp
xorl
loope
jg
mov
arpl
jmp
es
arpl
pop
push
cmp
idivb
fs
lock
enter
xor
xchg
test
pop
out
imul
pushf
dec
cltd
push
mov
out
ret
or
ss
cmp
mov
dec
jnp
les
mov
adc
shll
pop
sub
or
jae
hlt
push
in
loopne
inc
lret
inc
int3
mov
mov
push
push
adc
adcl
add
or
cmp
out
xlat
sbbb
cltd
aad
jno
cmp
or
movsb
push
es
ds
dec
pop
jecxz
mov
pop
movsl
bound
pop
inc
test
rol
out
in
dec
and
clc
push
das
scas
mov
in
and
sti
out
fwait
ret
test
inc
xchg
adcl
pop
in
mov
lods
lock
dec
push
push
and
ljmp
stos
fnstenv
xor
rclb
out
cltd
adc
in
bound
data16
mov
or
in
sbbl
cli
sahf
jae
mov
gs
push
inc
out
data16
cwtl
dec
cmp
inc
ret
and
pop
push
and
cwtl
adc
ds
mov
adc
xchg
cwtl
pushf
loop
jl
cs
aaa
xor
rcr
mov
pop
fiadds
sbb
call
arpl
out
sub
adc
add
and
or
in
pop
arpl
dec
sahf
aad
jecxz
xorl
mov
lods
in
jg
mov
dec
add
jbe
orb
lds
pop
jecxz
ret
cld
push
fimuls
mov
jns
cmp
ljmp
jl
mov
dec
mov
xor
and
outsl
movsl
jmp
mov
xlat
pop
js,pt
dec
cmp
or
push
cmc
hlt
lock
insb
int3
jae
loopne
inc
adc
cwtl
sub
add
cli
sub
mov
mov
inc
aaa
insl
add
pop
jmp
jle
add
or
loop
outsb
xchg
fs
jo
xchg
xchg
loop
div
push
cmc
push
subl
fcoml
inc
sbb
in
in
xor
pop
push
xor
sarb
stc
pop
jns
rorb
lret
cwtl
movsb
shl
and
imul
dec
mulb
outsl
jbe
push
xchg
mov
test
cs
fdivp
lcall
dec
mov
dec
inc
mov
cld
add
adc
cltd
es
or
test
xor
pushf
mov
xchg
loop
stos
mov
cmp
pushf
mov
iret
rorb
xor
jge
sub
cld
subl
xchg
jae
push
rsqrtps
and
mov
sub
xchg
leave
inc
and
jb
xchg
roll
xor
push
repz
mov
ss
in
cltd
das
adc
pop
repz
dec
sub
fidivrs
pop
push
mov
loope
add
ficomps
loop
push
jo
jo
loop
or
mov
sbb
jmp
fxch
dec
mov
sahf
fstpt
sarl
dec
xor
lods
dec
stc
mov
out
imul
popa
pop
push
movsl
leave
pop
addb
fisttpll
das
mov
arpl
test
lea
mov
mov
aad
fstpt
pusha
mov
call
pop
push
aaa
or
lret
lds
jg
mov
or
int
mov
push
adc
mov
fists
sbb
or
inc
test
mov
jne
fdivr
fucomip
adcb
sahf
je
cwtl
aaa
ss
insb
push
mov
ja
je
out
ret
jmp
cmp
lcall
xchg
sti
sub
icebp
outsl
cmpsl
dec
xchg
cmp
mov
pop
int3
push
push
outsb
sub
mov
nop
jns
jle
in
push
mov
jae
xchg
std
push
xor
gs
pop
cmp
cmpsb
lret
xchg
cmc
jno
xor
insl
and
inc
add
test
inc
and
mov
inc
cs
adc
cmc
insl
test
hlt
hlt
mov
push
xchg
xchg
cmp
pop
cmp
mov
ja
ror
orl
dec
push
pop
push
push
xchg
mov
sbb
cmp
sub
pop
ja
add
push
mov
movb
xchg
mov
xor
lea
mov
out
sbb
lods
jae
cmp
push
ret
and
clc
mov
nop
fiaddl
and
pop
fsts
lds
into
push
push
pushf
xor
cld
ja
sub
xor
sub
icebp
add
je
insb
lahf
andb
insl
stos
cmp
fcoml
shll
cs
lcall
flds
es
movq
push
mov
insl
or
inc
jo
js
or
xchg
adc
push
test
es
hlt
scas
bound
repz
push
cmp
and
int
adc
scas
or
pop
mov
inc
orl
push
sub
lds
daa
and
out
stc
mov
lret
sub
rcrl
movsb
scas
repz
pop
stc
sub
les
lret
negl
testb
fs
mov
rcrb
adc
inc
orb
outsl
movsb
push
fcmovnb
mov
and
loopne
out
aad
or
jae
and
push
xchg
stc
dec
scas
add
pop
jo
loopne
jmp
shrl
cmpsb
sub
fidivl
mov
mov
out
mov
mov
dec
cltd
dec
cmp
lock
loopne
arpl
aam
insb
dec
mov
cmc
shlb
dec
mov
rcrl
nop
jp
mov
scas
mov
fldcw
sarb
hlt
and
scas
sbb
ljmp
xor
xchg
clc
cmc
pop
xor
jne
loopne
jae
sub
movsb
aas
mov
fadd
test
outsl
xchg
enter
pusha
out
js
out
mov
popa
aad
and
test
pop
stos
jmp
mov
ret
inc
out
jp
push
movsl
sarl
aad
inc
jmp
or
popa
pop
addr16
pop
fisubrs
shr
jbe
jbe
inc
les
sbb
push
das
lds
sub
rcrl
scas
ret
push
mov
mov
stos
lock
pop
mov
push
jmp
add
jge
fdivrl
cmp
mov
ljmp
mov
in
cmc
rclb
leave
ss
aas
or
cwtd
insb
daa
loopne
jne
jp
test
outsb
lcall
mov
xor
sbb
mov
pushl
xchg
inc
jle
mov
dec
cmpsb
popa
push
js
stc
cmp
clc
add
cmp
jno
mulb
sti
mov
repz
outsb
push
add
pop
mov
int3
inc
xor
into
outsl
sbbl
mull
push
std
pop
daa
or
pop
lret
mov
and
push
add
lcall
inc
dec
adc
lock
call
dec
icebp
push
push
outsb
and
movsl
pop
xlat
repz
popf
stos
fldenv
cwtl
out
ljmp
ret
aas
pop
push
add
ljmp
jg
out
mov
rclb
push
into
lret
sahf
adc
cmp
ds
adc
arpl
cmp
aaa
or
call
mov
out
push
xor
mov
mov
and
enter
and
ljmp
mov
bound
jne
sbb
jmp
loop
mov
or
loopne
stos
rcll
sbb
and
mov
cltd
std
dec
daa
imul
test
lods
sub
lock
and
fsubl
fstps
mov
mov
inc
repz
out
in
sti
mov
popa
shlb
fwait
and
pop
sbb
fxch
mov
cld
sub
shlb
mov
es
gs
mov
cld
sar
inc
pop
js
mov
sub
ret
push
cmpb
cli
dec
jno
out
imul
lcall
or
sbb
add
xor
xchg
sbb
movntps
push
and
movsl
fimull
lcall
pop
xor
mov
bound
mov
popa
pop
fstps
icebp
js
test
mov
pop
int
cmp
faddl
add
adc
push
or
rclb
push
pop
jmp
test
pusha
xchg
push
test
fiaddl
dec
sbb
and
dec
cld
sbb
fs
cltd
outsl
das
and
shll
lret
sbb
jne
sti
out
outsb
repnz
mov
jmp
inc
cmp
aas
adc
repz
aaa
test
pusha
mov
cmc
sbb
xlat
and
aad
xor
repnz
xchg
xor
sub
test
and
shrb
notb
test
or
test
out
jne
les
jb
es
ds
into
pop
mov
push
test
clc
loop
lods
sbb
pop
stc
lcall
push
push
loopne
arpl
outsl
xor
ficomps
sub
arpl
dec
add
and
jmp
inc
adcl
sub
jle
pushf
outsl
sbb
cld
arpl
inc
loopne
in
jmp
xchg
cmpsb
ds
xchg
cmc
inc
adc
ret
cmp
sbb
mov
testb
inc
cltd
pop
pop
xchg
pop
shl
cltd
cwtl
pop
sub
pop
mov
sbb
enter
fstpt
xchg
or
mov
fwait
sub
ss
xchg
rcrl
mov
dec
xchg
adc
cmp
ljmp
adc
push
xor
cli
jae
adc
dec
stos
outsl
or
sbb
or
pop
adc
test
sarb
push
scas
adc
pop
jbe
sub
dec
data16
pusha
cmpsb
fldenv
inc
add
fwait
push
fistpl
sti
icebp
mov
fidivrs
push
fcomi
je
cmpsb
jb
lcall
jmp
cld
add
jne
xor
je
push
jl
jl
push
cmp
mov
das
cmp
mov
popa
dec
fwait
mov
push
inc
jb
mov
sub
and
cmp
pusha
push
arpl
sub
jle
inc
rcrl
inc
das
pop
ja
jae
jns
sbb
and
dec
add
in
pop
mov
rcll
cmc
pop
cltd
aad
sbb
xchg
ret
setns
push
push
cltd
xor
je
xor
test
xlat
es
adc
or
sti
pop
mov
out
cwtl
in
stos
pop
scas
mov
push
in
sub
mov
dec
sub
xor
or
adc
fsincos
mov
push
out
es
sbb
sub
popf
mov
jno
sbb
mov
addr16
jnp
sub
test
push
sub
out
cwtl
int3
aad
and
nop
jmp
aas
mov
or
cmp
mov
sub
aam
out
imul
daa
push
insl
and
xorb
stos
dec
lcall
mov
mov
sub
out
add
push
pop
sub
std
das
dec
dec
adc
insb
rorb
imul
xlat
rep
push
cltd
mov
add
mov
dec
mov
mov
push
out
loop
mov
dec
dec
inc
fdivrl
mov
mov
movsl
add
shll
loop
orl
fs
idivb
mov
call
fstpl
loope
sbb
adc
scas
adc
dec
adc
or
cmc
mov
adc
mov
cmp
sbb
cmp
mov
mov
sub
aaa
jns
xor
cmp
in
dec
xchg
push
mov
pop
cmp
iret
pop
mov
movsl
mov
sbb
add
cmp
pop
movsb
scas
jae
repz
jp
int3
js
mov
leave
fisttpll
adc
cwtl
xchg
cmp
rolb
dec
nop
cmc
loopne
add
or
and
out
push
cmp
divl
add
jmp
movsb
pusha
movsl
xchg
stc
jo
in
out
popa
mov
mov
push
push
mov
fldenv
dec
cmpl
or
sub
out
add
push
adc
enter
lock
jl
sti
cmp
iret
xchg
in
xchg
cmc
int3
push
mov
popl
cmp
lret
insb
jbe
mov
iret
cmp
les
icebp
sbb
aam
and
ja
jns
add
sub
rcrb
jae
cld
dec
aas
lea
stc
inc
cmp
mov
jp
mov
test
dec
fwait
add
in
stc
clc
pop
ja
out
adc
jno
dec
hlt
test
iret
push
and
ja
data16
mov
pop
sbb
jno
jl
adc
dec
sahf
loopne
mov
push
inc
sub
push
jb
outsb
mov
pop
mov
lea
out
pop
ljmp
xchg
inc
fcmovu
mov
inc
push
fs
and
cmp
addr16
sbb
sub
pop
sub
movsb
jg
mov
mov
stos
lds
pop
cmp
jge
cmp
sub
push
cwtl
add
js
addr16
push
cltd
std
cli
das
test
std
sbb
ds
hlt
mov
push
pop
or
rorl
popa
lcall
stos
push
dec
push
and
xchg
push
jo
outsb
mov
mov
xchg
roll
dec
fildl
movl
adc
out
leave
das
leave
dec
adc
push
push
cmp
mov
out
popa
aaa
lods
xchg
mov
and
imul
lahf
xchg
mov
stos
cwtl
xchg
and
scas
mov
dec
fimuls
sub
add
adc
and
push
lds
cmpsl
jecxz
sub
std
and
loope
inc
mov
aas
mov
fcompl
fbld
js
inc
cmp
out
push
sahf
dec
iret
add
adc
xchg
insl
xchg
xlat
ret
push
mov
das
dec
test
pop
idivb
or
add
sahf
daa
push
add
je
and
lret
pusha
adc
mov
jecxz
shr
cmp
movsl
cmp
and
cmp
loop
into
shrb
repnz
push
sbb
dec
ljmp
jl
xchg
inc
aas
pop
dec
stos
inc
pop
mov
mov
loopne
roll
mov
jle
mov
mov
notb
lods
aam
cwtl
and
push
lods
mov
and
lock
outsb
js
movsb
mov
inc
mov
adc
fdivrs
dec
mov
cmpsb
mov
scas
arpl
sub
clc
jp
push
stc
insb
add
hlt
cld
in
shr
loopne
in
add
push
xor
out
imul
clc
push
pop
jge
inc
std
lahf
mov
xchg
sbb
pop
jmp
sbb
push
push
test
jns
cmp
mull
cmp
dec
push
jge
push
inc
mov
fistpl
js
cld
pop
out
fdivrl
outsl
les
cltd
aaa
xchg
in
ljmp
aad
mulb
mov
jmp
xor
xor
mov
hlt
fucomip
pop
inc
jmp
cmpsl
cmp
enter
lods
dec
jno
sub
fwait
neg
xrelease
mov
icebp
je
mov
jbe
sbb
pop
xchg
or
movsb
into
aam
cmp
sub
mov
xchg
stos
nop
jns
call
loopne
out
pop
mov
mov
pop
aad
ror
inc
test
mov
loop
sbb
and
mov
subb
and
mov
lret
mov
bound
nop
sub
es
add
push
adc
lds
ror
outsl
lods
xlat
gs
lahf
jo
imul
lahf
sbb
insb
fs
nop
psrld
adc
push
sbb
call
in
sub
testb
andb
or
dec
testb
add
push
fwait
and
mov
scas
leave
xor
and
cmp
flds
jg
mov
jmp
mov
jp
ficoms
pop
pop
adc
cmpsl
aam
jle
daa
into
aas
cwtl
inc
sahf
ljmp
popa
addr16
xchg
xchg
sahf
out
push
sbb
cltd
adcb
and
mov
sub
mov
sbb
fistpll
stos
lea
xchg
fdivr
inc
mov
cmp
dec
pop
icebp
lods
mov
outsl
ret
xchg
add
dec
mov
mov
jmp
lcall
jg
stos
addl
mov
into
adc
call
mov
popf
pop
into
dec
dec
repz
sti
lds
and
into
int3
push
sbb
push
call
xor
lds
dec
push
pop
movsb
daa
leave
and
xchg
sbb
das
xchg
jo
in
push
repz
inc
sbb
xchg
in
and
mov
jno
sahf
push
icebp
popa
mov
sbbl
das
and
in
cmp
fisttpl
inc
enter
outsl
jecxz
fmulp
mov
loop
or
mov
fldenv
xor
pop
sbb
pop
mov
invd
or
fnstenv
adc
mov
orb
sar
outsl
jg
inc
inc
fadd
pop
push
pop
pop
jmp
jecxz
jbe
imul
mov
mov
daa
mov
add
jge
cltd
and
popa
in
xor
repz
sbb
mov
pop
cmp
push
in
cs
mov
pop
clc
mov
inc
pop
mov
ret
xor
out
sub
cmpl
jno
shl
pop
fcompl
jb
mov
rcrl
add
lods
repnz
lock
cli
shlb
push
or
outsb
pop
ret
adc
adc
inc
test
sub
xchg
jb
dec
mov
jb
mov
loop
sub
jmp
xchg
aaa
cmp
push
lahf
dec
push
and
lcall
and
ja
sbb
in
fsubrl
lods
cmc
scas
pop
cmc
adc
xchg
pop
sbb
cs
test
or
lock
dec
jns
fs
sbb
or
mov
inc
add
call
push
pop
imul
in
ds
adc
scas
mov
pop
jp
push
subl
scas
scas
inc
mov
jmp
pop
mov
jno
dec
pop
xor
in
or
pop
xor
sbb
ja
dec
sbb
into
mov
decb
shrb
cwtl
jno
xchg
lock
mov
bound
loope
xchg
xlat
push
sub
pop
hlt
mov
push
adc
es
test
mov
jbe
roll
xchg
mov
mov
and
loop
ror
into
lahf
push
xchg
loope
sbb
pop
xor
insl
dec
mov
leavew
loope
ret
aas
push
dec
adcl
mov
movsl
insl
pop
mov
mov
mov
jle
bound
lcall
int3
cli
jge
xchg
push
add
mov
push
sbb
lret
fsts
lea
cmp
cwtl
data16
or
ljmp
inc
hlt
fmull
inc
adc
popa
adcb
inc
imul
adc
scas
sbb
test
adcb
insl
adc
push
jmp
fcomps
mov
and
jmp
dec
call
cmp
lahf
aam
mov
sbb
and
dec
mov
roll
into
adc
jp
push
jae
inc
rorb
mov
jae
leave
andb
mov
inc
lods
fucomip
lock
movb
pop
xlat
dec
mov
aad
push
xor
fwait
xchg
jl
repnz
scas
pop
scas
adc
jb
out
mov
add
and
or
nop
mov
rclb
adc
inc
outsl
sbb
dec
dec
les
dec
jo
cs
test
cmp
das
sub
sbb
repz
jbe
pop
aam
sub
stos
cld
mov
ret
daa
fdivrl
arpl
cmp
sub
into
add
jb
xchg
into
sbb
and
nop
push
adc
sti
xchg
les
lret
leave
cltd
jmp
sub
sub
in
pusha
rolb
xor
add
mulb
inc
lods
or
lods
jecxz
inc
out
or
bound
xor
push
movsb
gs
push
mov
loop
xchg
cmp
les
enter
xchg
xchg
dec
fadd
mull
adc
xor
and
out
adc
inc
sub
xor
adc
push
stos
jnp
shll
push
jb
ds
mov
or
cli
into
imul
stos
icebp
cmc
daa
bound
dec
jecxz
cmp
or
push
push
fldenv
cwtl
int3
loop
jo
test
cmp
or
jbe
mov
or
insl
gs
lods
shlb
adc
repz
int3
lahf
push
jne
ds
fisubs
mov
rcll
insb
xchg
add
insb
ss
dec
punpckldq
jge
arpl
or
out
iret
loop
push
xor
js
cmp
mov
dec
or
or
imul
sub
arpl
loop
cmp
aad
xchg
push
inc
push
mov
adc
add
in
mov
jno
dec
insb
cli
add
in
test
fstp
repz
adc
subl
sahf
xchg
xor
std
movsl
jno
jns
sbb
sbb
cli
jg
dec
popa
mov
lcall
inc
sbb
in
mov
iret
cmp
or
pusha
mov
mov
sub
xchg
pop
jl
ret
xchg
ret
pusha
sub
cmp
shrl
push
pushf
lret
xchg
in
add
hlt
sti
fadds
pop
lahf
jge
push
lods
jae
cmp
mov
mov
push
imul
scas
movsl
xchg
push
cs
add
jecxz
jae
mov
hlt
decl
aas
int3
sub
insl
or
xchg
daa
push
pusha
popa
pop
dec
and
pop
divb
mov
sbb
mov
stc
cmp
or
cmp
repz
shrl
pushf
std
addr16
movsl
jnp
data16
fldenv
movsl
aad
xor
dec
push
mov
in
rorb
jle
adc
xchg
gs
inc
daa
iret
mov
xor
add
ds
add
lods
sub
pop
leave
mov
sbb
pop
cmpb
stc
mov
mov
push
xor
imul
loopne
or
and
in
pop
dec
sahf
dec
xor
mov
mov
xor
das
dec
or
mov
mov
incb
add
and
pop
and
shrd
and
push
stos
outsl
xor
push
push
jbe
pop
and
xchg
pop
and
and
fs
lret
xchg
sar
mov
stc
mul
ja
sub
xor
adc
sbb
sbb
movsl
leave
xchg
out
std
inc
jmp
and
mov
mov
rcrl
test
movsb
push
and
divb
popf
pop
add
mov
clc
xchg
cmp
jge
jno
sbb
loope
xchg
movsb
xlat
mov
insl
pop
outsl
xchg
stos
mov
outsl
outsb
out
aam
in
cwtl
or
push
xor
stc
in
fdivl
mov
inc
inc
cmc
test
mov
inc
std
sub
sti
xchg
int3
mov
dec
sbb
mov
out
inc
jae
mov
add
add
iret
mov
in
sbb
mov
lds
stos
pop
sbb
sub
lock
cmpsb
pusha
mov
or
es
jae
repnz
subl
lock
xor
push
push
push
xchg
sti
clc
mov
jp
sbb
xlat
cmp
push
mov
add
imul
movd
fidivs
sbb
scas
jns
inc
adc
ss
add
pop
ss
popa
mov
mov
pop
sbbb
dec
sub
pop
lods
es
mov
push
fdivrp
jno
cmp
cmp
jmp
pop
adc
int3
movsl
inc
xchg
sahf
jo
mov
daa
scas
sub
mov
and
inc
push
push
roll
daa
xor
mov
scas
xchg
sbb
mov
sub
ja
push
lret
popf
lds
push
pusha
xor
mov
loopne
xchg
jecxz
into
in
mov
jmp
push
push
add
push
out
push
out
popf
in
mov
xor
inc
xlat
sbb
add
mov
ds
rcrb
cld
cmp
push
mov
ja
arpl
stos
mov
daa
adc
outsb
test
jle
and
cmp
inc
daa
xor
outsl
shll
fwait
mov
call
jle
out
mov
cmpsb
call
add
subl
dec
push
imul
mov
xchg
mov
adc
push
in
fnstcw
jae
fstp
es
xchg
mov
mov
cmp
sub
idivl
jp
out
push
int3
nop
out
push
sahf
les
orb
fs
push
jne
mov
pop
add
or
cmc
mov
fildl
enter
and
insl
and
clc
mov
push
scas
fwait
adc
in
ds
jnp
test
sbb
sbb
jns
leave
mov
cld
mov
js
cli
sti
push
fdivrs
insb
mov
xor
popf
outsl
and
pusha
aaa
pushf
lcall
scas
fdiv
lds
cli
jne
ja
popf
stos
push
mov
outsl
sbb
ret
lods
fldl
mov
jle
fstps
mov
jmp
cld
sbb
test
js
push
cmc
ljmp
xchg
or
push
leave
mov
ds
xchg
push
int3
xchg
cs
xorb
xchg
mov
mov
jp
adc
push
rclb
out
scas
in
test
or
mov
mov
jg
test
xor
mov
jl
jp
push
push
mov
and
sarl
arpl
lds
sub
js
loopne
ret
lds
repnz
xor
pop
or
out
mov
jae
mov
inc
gs
jno
loopne
ja
mov
and
sbb
jl
xchg
popa
mov
jb
dec
shll
mov
inc
enter
add
movsl
hlt
or
test
add
mov
rorb
pop
ret
sub
add
xor
rcrb
gs
push
xor
andb
mov
iretw
je
pop
popa
loopne
inc
das
pop
in
xchg
cmp
ds
fidivrl
xlat
adc
movsl
xchg
rcl
addr16
push
inc
sub
jns
dec
xchg
mov
mov
mov
push
sbb
test
inc
and
cmpb
into
and
fs
push
out
pop
iret
mov
push
into
rcll
movsl
aas
negl
loope
leave
fwait
ja
bnd
int
cwtl
xor
test
std
mov
xor
inc
out
sbb
inc
add
in
gs
test
push
sahf
sub
or
lret
push
cmc
subb
data16
mov
cmp
fisubl
xor
fnstsw
dec
lea
imul
or
push
mov
inc
cmp
push
out
out
mov
adc
and
add
fstpt
and
insb
or
push
das
add
popf
mov
imul
xor
mov
testl
clc
das
mov
test
lods
sbb
inc
jb
shlb
mov
or
pop
testl
insb
push
inc
pop
mov
and
inc
adc
mov
in
sti
mov
es
mov
and
jo
fsubrl
lock
jne
add
sbb
aad
add
mov
jae
mov
mov
adc
jnp
dec
or
sbb
jae
std
lahf
xor
pop
pop
fistps
xor
subb
sub
inc
adc
sub
shlb
shrl
insb
fcmove
ljmp
std
sub
pusha
ljmp
mov
add
and
ja
mov
add
add
in
out
rcrl
shr
jo
inc
mov
jnp
iret
add
jnp
jle
pop
ret
cmp
adc
xchg
jmp
mov
inc
imul
cmpsb
stos
nop
jle
cli
dec
ffree
loop
aas
bound
sbb
daa
sub
cmp
xchg
xchg
loopne
mov
and
fsubl
mov
loopne
bnd
sbb
lret
dec
sbb
and
cld
scas
inc
les
and
or
pop
adc
jge
mov
or
dec
cs
daa
xchg
aad
push
iret
mov
xchg
mov
jo
pop
loopne
and
xchg
stc
add
out
pop
mov
xchg
push
orb
cmpb
or
sub
or
out
inc
dec
mov
ljmp
mov
mov
sbb
sub
outsl
jg
mov
adc
repnz
cmp
sbb
add
ljmp
insb
mov
insb
mov
sti
movsb
push
push
repz
pop
add
pop
clc
pop
push
inc
push
mov
clc
mov
sub
notl
dec
or
adc
or
rcll
dec
shrl
andb
dec
sub
jl
nop
dec
lds
mov
pop
les
stc
fincstp
push
xchg
or
repz
insb
inc
popa
mov
aad
mov
push
rorl
or
mov
push
mov
sub
aad
and
cmp
jmp
inc
push
or
out
arpl
fidivl
push
mov
xor
and
stos
jne
xchg
iret
mov
pop
jo
popa
jmp
stc
daa
loope
push
xor
mov
add
and
in
mov
cmpsl
scas
adc
loopne
lds
mov
das
int3
fcom
jp
xchg
add
cmpsb
xchg
out
mov
jp
mov
mov
mov
repz
int3
shrb
nop
push
ljmp
push
mov
cmp
scas
aam
xchg
inc
inc
es
jecxz
xchg
inc
fwait
mov
jmp
mov
into
lret
fmul
mov
mov
ss
sub
es
mov
test
mov
add
cltd
call
and
pushf
iret
and
mov
in
addr16
xchg
loop
cld
adc
test
push
xor
jmp
mov
add
lcall
jo
mov
les
push
std
xor
xor
inc
lds
ljmp
pop
aad
mov
mov
xorl
cmpb
sbb
pop
cmp
in
dec
mov
and
popf
xchg
rolb
inc
xor
bound
imul
mov
std
sub
mov
cli
mov
out
shlb
ss
mov
pop
pusha
orb
mov
ficompl
mov
cmp
mov
dec
jne
rolb
aad
sub
fwait
xchg
xor
test
or
int3
cmp
pusha
sbb
les
fcmovb
das
jmp
lea
add
xchg
fistps
mov
jo
jmp
dec
xchg
xchg
fs
in
fisttpl
mov
add
pop
cltd
sbb
jne
orl
sub
roll
data16
inc
push
sbb
iret
iret
pop
movsl
add
andl
dec
inc
adc
inc
mov
push
xlat
xor
jle
pop
lds
lods
cmp
pop
jmp
popa
push
xor
push
mov
or
gs
cmp
inc
iret
jmp
mov
cmp
push
pop
enter
leave
push
shlb
jl
es
add
pop
cmp
add
mov
sahf
test
xor
jle
call
das
mov
lods
cmc
add
cmp
out
lret
pop
ss
push
insl
inc
ret
icebp
mov
mov
lds
pusha
push
or
ret
or
fbstp
mov
stc
fcmovnu
jae
sbb
pop
and
fnstsw
lcall
divb
mov
sbb
push
sub
adc
cmp
stc
pop
inc
cmp
or
fwait
sub
and
scas
push
stc
test
pop
push
rorb
lcall
out
sub
jbe
xchg
and
sub
dec
in
out
movsl
jne
and
mov
fimuls
mov
jmp
add
jmp
dec
das
pushl
xchg
mov
push
jbe
pop
jns
mov
cmc
data16
jl
fs
fs
mov
jnp
loope
mov
xchg
pop
aaa
repnz
enter
xchg
clc
loopne
sub
scas
mov
popa
adc
sub
fcoml
imul
ja
movsb
arpl
stos
xchg
mov
sbb
inc
mov
daa
and
mov
push
push
popa
and
inc
dec
shll
in
jno
mov
pop
imul
shll
mov
icebp
outsl
sahf
jns
out
rcrl
cmp
imul
push
adc
dec
xor
sbb
dec
pop
lahf
ds
xor
mov
xchg
iret
pop
jne
aad
or
sub
out
mov
ret
aad
adc
xor
je
in
or
pop
cmp
jno
xor
and
push
lea
aas
dec
bnd
push
les
and
mov
xchg
xchg
inc
sbbl
sti
pop
shl
mov
pop
fdivs
xchg
ret
jnp
fiaddl
inc
add
sbb
mov
mov
aad
pop
out
or
xchg
in
cmp
test
cmp
out
cmp
sub
in
subl
loop
loopne
and
aas
sbb
cmp
add
xor
or
inc
dec
rcll
push
fwait
xor
cwtl
in
jl
or
pop
push
jmp
call
stc
sbb
dec
jae
mov
jecxz
dec
cmpl
ljmp
inc
push
clc
adc
scas
cwtl
xchg
inc
sahf
cmp
push
mov
sahf
mov
inc
adc
jp
inc
mov
and
sbb
fadds
ja
xor
int3
xchg
mov
aam
lods
cmp
jmp
add
mov
cmp
pop
push
out
in
ret
jns
cmpsb
cs
cmc
das
es
dec
push
enter
sbb
sub
insb
negb
les
jno
and
dec
jae
xchg
out
push
push
lock
pop
mov
pop
pushf
ret
sbb
push
cmpsl
pop
xor
pop
inc
gs
test
sahf
xchg
mov
push
std
adc
add
mov
xor
call
shrl
cli
cmp
data16
add
stc
mov
sbb
or
cmp
imul
or
push
push
ds
es
hlt
mov
ljmp
cmp
outsl
dec
ret
sub
mov
xchg
xor
jbe
cmp
mov
pop
jle
sahf
mov
sub
data16
or
shl
repz
inc
or
leave
shll
xor
outsb
jp
xchg
fwait
aaa
or
stc
mov
and
jmp
pop
popf
fcoms
lret
divl
mov
cld
idivb
mov
shll
dec
dec
add
or
adc
int3
test
or
and
insl
xor
shlb
hlt
dec
or
ret
lods
stos
mov
fs
loope
dec
out
fsubrs
sahf
mov
or
adc
xor
popa
out
fistpl
add
pop
aam
ljmp
aad
or
mov
mov
lcall
lds
lcall
mov
scas
xor
mov
popa
addr16
scas
repz
cmp
pusha
aad
shlb
lds
jae
xlat
sub
fildl
mov
ret
inc
divl
lds
imul
xchg
lret
jmp
jl
subb
jecxz
mov
in
jp
xchg
pop
cmp
je
push
xchg
jl
jns
xchg
int
pushf
xchg
push
pop
icebp
movsl
shll
in
mov
jecxz
xor
mov
ds
and
rcll
add
fwait
xchg
arpl
sbb
sbb
jmp
not
test
clc
insb
jae
rcl
loopne
inc
test
mov
cmp
mov
sbb
pop
fwait
mov
dec
aam
pop
jl
cmp
mov
mov
rorl
add
in
dec
movb
cmp
add
mov
sub
shl
lahf
mov
mov
dec
jne
xor
pop
imul
das
push
andl
loope
adcb
mov
mov
push
and
mov
fnstsw
dec
es
sti
sbb
xor
lock
stos
xor
or
out
add
jne
xchg
pop
xchg
in
fists
movsb
rclb
sbb
enter
and
adc
ds
and
rcrl
imul
sbb
dec
in
adc
xor
mov
cwtl
test
xchg
fimuls
in
outsb
popf
lret
into
in
dec
lods
jne
xor
loope
sub
xchg
sbb
ss
in
mov
cmp
inc
cmc
lds
inc
or
mov
and
scas
push
addr16
arpl
mov
and
imul
mov
lock
stos
shrl
add
and
adc
popf
cmp
push
outsl
or
fsts
lret
add
mov
pop
inc
mov
or
dec
push
lds
outsl
bound
in
pop
or
add
push
imul
mov
jb
loope
and
pop
mov
ss
out
fcom
out
mov
cltd
pop
sbb
xor
xor
ja
dec
stos
mov
push
xor
mov
icebp
test
adc
stc
lods
mov
scas
lcall
jbe
cmp
loop
xchg
and
mov
stos
mov
faddl
mov
or
xchg
test
loop
xchg
inc
gs
test
xchg
stos
test
loop
out
pusha
stc
pop
push
fidivs
jg
movsl
sahf
daa
ja
gs
xchg
fcoml
mov
xor
xor
xchg
inc
movsb
stc
test
les
sbb
addr16
es
inc
push
add
cli
or
repnz
fsts
fwait
pop
xor
jnp
mov
inc
adc
imul
mov
outsl
loopne
aas
stos
mov
je
sbb
cmp
or
lea
or
dec
add
or
cmc
cmpb
notb
lahf
cmp
popa
jns
xchg
gs
ss
add
push
cmp
xchg
dec
movsl
cmp
negb
mov
jecxz
ret
repz
in
pop
ljmp
cmp
xchg
sahf
xor
sahf
repnz
inc
insl
push
add
popa
shrb
adc
popf
test
fsts
mov
mov
bound
imul
into
fiaddl
or
sti
or
xor
jns
cmp
out
xor
insl
sbb
xor
sbb
sub
lahf
push
pop
stos
mov
insb
push
cmc
icebp
jno
addr16
and
inc
and
mov
roll
outsb
add
test
call
push
mov
jne
mov
xchg
dec
scas
cs
add
je
cltd
cli
jns
out
data16
test
or
sub
sub
mov
or
inc
neg
sub
jae
xchg
stos
mov
sub
js
mov
push
into
mov
inc
loop
je
and
adc
adc
or
xor
push
xchg
ljmp
mov
and
push
jbe
pop
add
cwtl
jle
pop
pop
inc
push
push
iret
leave
inc
mov
sbb
mov
sbb
xchg
fsubl
pop
dec
adc
and
daa
pushf
pop
pop
cld
cld
addr16
enter
cltd
cli
xor
lret
in
fcmovne
shl
push
in
sub
mov
pushf
xor
mov
xor
rcrb
arpl
test
popa
test
fisttpl
cmc
xor
out
loopne
mov
movsb
out
clc
push
xchg
stos
xorb
mov
jge
sahf
arpl
push
andb
out
mov
jle
mov
sbbl
adc
xor
mov
cmpb
insl
pop
mov
mov
das
inc
nop
mov
jecxz
pop
cld
xchg
jmp
cmp
pop
in
sahf
xchg
or
push
lahf
push
rcl
addl
lods
jl
mov
cmp
mov
dec
outsl
jns
jb
push
push
cwtl
popf
int
add
rolb
xchg
ss
iret
aam
push
add
dec
and
sbb
out
fcomps
jle
cwtl
lea
sti
repnz
subb
int3
pop
sub
inc
add
sbb
cmp
dec
test
and
pop
jno
mov
icebp
or
in
test
adc
jne
push
pop
loopne
or
and
mov
xorl
push
push
add
mov
add
xor
sbb
fisttpl
test
aad
xchg
and
add
addb
pop
into
aaa
lea
sbb
orl
mov
jno
sub
testb
rorb
frstor
xchg
xchg
shll
rorl
rorb
leave
mov
cwtl
pop
sarb
add
mov
fwait
ret
pop
mov
stos
imul
jns
call
cmp
or
mov
sarb
pop
in
call
addl
insb
or
pop
int
test
fiadds
mov
sti
mov
mov
rorl
push
mov
popf
jecxz
out
add
into
into
adc
pop
jg
fwait
mov
out
dec
jp
xchg
jae
dec
mov
pop
loop
push
mov
movsb
mov
mov
pop
icebp
or
and
add
insb
pop
xchg
rcrb
stos
mov
fimuls
mov
loop
adc
jmp
xchg
inc
insl
je
adc
pop
ljmp
or
cwtl
pop
adc
cmpb
push
sub
aaa
cmp
clc
sbb
jl
aam
mov
cmp
add
aas
xor
aaa
addl
mov
xchg
out
movsl
adc
inc
aaa
xorb
mov
inc
dec
push
out
aaa
inc
dec
push
cli
aad
dec
mov
pop
inc
push
jle
stos
loop
daa
add
daa
lea
adc
sbb
mov
jmp
outsl
push
xor
add
sbb
or
jb
jae
and
add
loopne
out
jb
lods
and
sbb
dec
dec
and
push
dec
jno
mov
add
push
cltd
mov
aaa
pop
pop
inc
pop
out
adc
push
int
mov
lret
nop
push
xchg
fmull
xor
inc
xor
mov
jnp
xor
insb
out
add
cmpb
jae
push
sbb
rcrb
push
jp
lret
inc
in
test
sub
xchg
mov
mov
jnp
xchg
sub
into
ficompl
ss
lcall
or
and
sub
sbbb
sub
cld
ja
dec
xor
pop
or
rcrl
in
aaa
push
mov
bound
lret
jb
in
inc
sbb
cwtl
pop
add
adc
stos
nop
push
pop
cwtl
out
lret
cs
lods
mov
xchg
mov
xor
rcrl
js
hlt
cmpsb
and
addb
std
sbb
xchg
bnd
fdivrl
and
outsl
jecxz
stos
xchg
or
mov
stc
fistl
clc
clc
push
cs
adc
xchg
add
pop
xchg
sub
negb
sti
pop
and
mov
pop
inc
xchg
xor
movl
sbb
lods
stos
inc
lret
sbb
aas
int3
lods
jl
roll
imul
mov
clc
xor
dec
xchg
dec
cli
lret
mov
push
shl
dec
dec
nop
jg
repnz
pop
adc
psraw
and
insl
fsubs
cli
fwait
pop
and
inc
pop
aas
xchg
mov
enter
lret
xor
decl
pop
ret
sbb
jp
jle
push
jecxz
cwtl
xchg
add
shrl
movsl
pop
fcomp
mov
jmp
cmpsb
loop
daa
mov
cmpsl
mov
xchg
sbb
adc
xchg
cmpl
xchg
push
fistpl
aam
loope
mov
scas
out
cmp
dec
pop
nop
out
xor
xchg
addr16
adc
jmp
xchg
inc
mov
pop
mov
xor
fs
push
xor
xor
enter
stc
or
cli
fnsave
cmp
or
adc
ds
ss
fldln2
inc
lahf
adcb
mov
ljmp
jnp
repz
loop
loop
jbe
fisubrl
push
std
jg
or
imul
insl
push
jge
or
enter
push
insb
or
iret
add
shll
xchg
xor
jo
leave
mov
insb
push
jae
es
test
les
or
jbe
fisubrl
andl
out
movl
int
daa
ds
lds
aaa
mov
push
adc
loopne
arpl
mov
and
or
movsl
mov
xor
in
in
mov
push
push
data16
out
dec
out
add
scas
sub
in
jmp
push
jns
popf
sub
sahf
push
mov
cs
pop
ret
mov
repnz
sbb
or
lea
xor
inc
mov
jne
pop
jmp
mov
push
sahf
sbb
adc
movsl
imul
mov
xchg
xor
fmuls
sti
sbb
jns
js
xor
xchg
and
mov
mov
pop
in
ljmp
or
sahf
loop
cltd
xchg
out
in
add
mov
fs
push
gs
inc
inc
sub
mov
inc
mov
xor
subb
loope
scas
test
scas
movsb
je
out
std
mov
mov
push
xchg
push
test
not
stc
sti
mov
jmp
ds
jmp
imull
dec
pop
add
popf
dec
and
sbb
outsl
and
mov
sbb
mov
popf
shll
cmpsl
pop
out
lret
sbb
inc
adc
pop
out
inc
pop
cmc
enter
scas
mov
xchg
lahf
mov
mov
icebp
jmp
fdivrl
add
mov
and
fisubrl
call
xchg
dec
testb
leave
add
pop
das
adc
push
test
inc
test
xchg
add
pushf
les
adc
push
sub
jnp
add
jl
sbb
addr16
xor
sub
ds
mov
pop
mov
pop
loop
sub
fadds
inc
test
outsb
aad
push
dec
sub
in
xchg
pop
mov
dec
dec
sarl
scas
jno
mov
sysenter
mov
orl
and
pusha
inc
inc
das
xor
push
jb
jb
xlat
popa
xor
push
or
cld
ret
xor
push
movsb
outsb
add
stos
imul
lock
out
scas
lret
inc
rcrb
or
xor
ss
and
and
fdivl
push
adc
adc
cmpsb
cmp
es
das
jecxz
push
and
in
adc
push
xchg
xchg
cmpsl
and
push
insl
aas
dec
ret
or
ret
dec
and
insl
idivb
lea
imul
daa
xchg
arpl
mov
dec
lock
rcll
mov
lods
fs
push
cld
mov
xor
lret
jae
adcl
cs
jge
stos
roll
pop
mov
jns
in
inc
push
lods
mov
sbb
stos
push
mov
cmovp
lds
adc
sbb
lods
out
dec
ljmp
cmp
lret
cmpsb
stos
jl
mov
fsubl
das
iret
xchg
dec
fucomi
mov
pop
cmp
fstl
adc
ss
xor
outsb
mov
lds
add
push
mov
in
push
mov
sti
xchg
fstpl
mov
cmpsl
rcrb
scas
fnstcw
outsl
sbbb
icebp
jge
int
xchg
rcr
cmp
xor
rolb
push
cmp
mov
test
test
daa
push
js
jo
out
push
jecxz
xchg
inc
add
or
adc
adc
sub
inc
mov
je
aam
or
jbe
ret
sbb
fwait
push
xchg
hlt
andl
inc
jns
xchg
jnp,pn
inc
cmpsb
mov
push
cmp
sbb
cmp
in
repnz
insl
imul
or
mov
xor
mov
pop
fs
lahf
test
fidivrl
orb
lods
adc
mov
cmp
mov
push
mov
xchg
dec
pop
sbb
movsl
push
outsb
cltd
ret
sbb
or
outsb
xchg
out
icebp
stos
lea
xor
clc
and
mov
add
ret
mov
lcall
mov
loopne
imul
loop
iret
push
movsb
aad
xchg
repz
cmpb
cmp
stos
sub
iret
cmpl
in
pop
or
pop
aad
inc
cmp
fdivrl
jge
in
cwtl
pop
sbb
repz
int3
mov
push
pusha
push
mov
inc
push
mov
in
jg
cs
xor
add
or
jne
sub
or
in
fwait
mov
cmp
ljmp
jmp
jg
inc
dec
shrl
mov
adc
jae
pushl
jne
mov
mov
xor
mov
xor
pop
cmp
lock
adc
mov
in
mov
or
dec
xchg
popa
js
ret
lcall
inc
or
pop
in
movsl
cmp
sbb
xchg
daa
push
cmp
push
inc
push
mov
out
imul
push
daa
loop
scas
xchg
stc
mov
sbb
int
arpl
sbb
mov
inc
or
jmp
sbb
js
sub
ja
and
mov
jns
inc
fmulp
pop
insb
loopne
shll
sbb
into
mov
out
cltd
dec
in
fldl
in
add
push
inc
mov
dec
mov
mov
addr16
leave
cs
push
loopne
sbb
add
clc
test
add
or
imul
mov
sbb
cmc
insl
jns
dec
int
mov
push
cmp
lods
mov
in
popf
xchg
aad
test
add
mov
test
psrld
hlt
pop
mov
xor
jns
push
adc
and
push
dec
mov
inc
adc
push
pop
xor
sbb
aam
stc
or
and
jb
test
jbe
xchg
vzeroupper
shl
notl
outsl
loope
lods
add
stos
cmp
leave
and
dec
shll
xor
cmc
loopne
cmp
cs
and
sub
cmp
push
in
lods
call
add
or
ffree
ror
pop
push
add
and
pop
aam
jb
add
ret
sbb
cmp
aaa
push
inc
cmovnp
cmp
cmp
mov
dec
and
in
push
inc
lcall
sbb
jb
rolb
out
xor
push
pop
in
sbb
xor
test
sahf
push
rorb
in
stos
push
nop
cli
add
movsl
push
cmp
pop
jns
cltd
jmp
daa
aam
mov
or
repz
in
add
cld
jne
lahf
inc
scas
sub
sbb
shll
inc
or
bound
push
cwtl
xor
xorb
je
mov
cmp
das
mov
xor
sub
lret
push
std
das
push
lcall
lods
cli
je
add
jae
push
js
or
ret
dec
jns
divb
lock
cmp
add
mov
ds
ret
sbb
xchg
notrack
xchg
dec
sar
pop
pushf
xchg
fsts
imul
xchg
fdivrl
add
sub
stc
cmp
aaa
push
jae
inc
xchg
inc
lods
or
jecxz
cmp
pop
iret
jo
test
or
dec
sti
sbb
in
stc
cs
lret
out
dec
shll
in
rorb
jne
pop
xchg
xor
push
test
les
jg
out
push
jo
adc
lret
leave
test
push
xchg
scas
jmp
rorb
mov
mov
icebp
cmp
fiaddl
mov
sub
sbb
sarb
mov
loopne
xor
aas
ja
jnp
xchg
xchg
xchg
imul
jl
loopne
mov
mov
leave
lcall
mov
pop
cmc
ds
sbb
push
mov
addps
ja
cmp
lods
dec
fildl
shll
adc
rclb
adc
iret
stc
stos
daa
ljmp
dec
mov
fildll
mov
fs
xlat
xor
add
inc
mov
scas
xchg
mov
fdivrs
mov
enter
lods
or
dec
push
incb
loop
xchg
outsb
int3
fcoms
dec
in
sbb
insb
addr16
sbb
pop
jp
mov
mov
pop
mov
adc
rcll
xlat
xchg
ret
push
mov
icebp
cmp
pop
jecxz
adc
adc
and
or
adc
mov
jg
jge
add
jl
repnz
fiaddl
lret
in
cmpsl
gs
cs
ja
outsl
cmp
jnp
lret
shlb
sbb
dec
outsl
imul
in
int
les
aas
xor
lds
iret
lcall
call
stos
xor
cmp
sub
xchg
aas
outsb
aaa
mov
jle
xchg
pop
jle
dec
mov
std
jne
mov
xchg
pop
mov
pop
icebp
dec
leave
data16
rcrl
xlat
lret
fistpl
xchg
loopne
push
jb
sub
mov
leave
pop
lea
add
mov
jge
in
jbe
mov
mov
jecxz
inc
add
lcall
imul
neg
clc
test
flds
cld
add
leave
mov
pop
fwait
inc
xlat
add
dec
sub
xlat
imul
shll
lds
dec
jecxz
xchg
mov
sbb
or
and
adc
mov
mov
shlb
inc
mov
hlt
sbb
bnd
aad
int
sbb
div
add
sti
stos
cmp
ja
ret
stc
xor
push
sti
and
pop
leave
lods
movl
adc
loop
ret
or
sbb
stos
repz
out
pop
je
jne
test
jmp
test
lcall
mov
jp
xor
aam
lock
jbe
add
mov
fisubl
insb
mov
mov
pop
idivb
xchg
push
nop
das
test
sbb
hlt
movb
pop
pop
sbb
pop
ss
cld
mov
pop
sub
loope
adc
xor
dec
pop
mov
fildl
into
xor
stos
inc
jnp
sbb
jge
outsl
loop
pop
stc
mov
xor
aaa
sub
addr16
mov
cmpl
pop
vpsubq
mov
sbb
sahf
int
adc
fimuls
ss
sbb
test
in
mov
push
movsb
and
sbb
fs
inc
and
xchg
jnp
jns
or
loopne
and
sarl
pcmpeqw
mov
shl
adc
aad
lret
mov
mov
mov
or
std
jnp
subb
add
mov
imul
jl
lock
mov
push
inc
repnz
lods
mov
scas
pop
inc
add
pop
sbb
and
std
insl
rcrl
sub
stc
or
push
pop
xlat
dec
push
xchg
jb
pop
inc
insl
in
xchg
mov
inc
push
clc
jno
int
mov
jb
popa
nop
xchg
mov
pop
popf
jb
test
mov
cmpsl
adc
jp
arpl
stc
in
jne
xor
mov
inc
rcl
addl
mov
jne
mov
inc
sub
pop
loop
xorl
cld
jmp
daa
pop
std
jp
add
pop
pop
je
hlt
cwtl
in
gs
scas
pushf
cmp
out
push
insb
leave
pop
orl
int3
aad
jns
stos
popa
adc
nop
jno
loopne
mov
mov
insl
and
xchg
call
xor
rclb
add
hlt
pop
fidivs
jge
xor
push
jg
and
sti
das
or
add
loope
mov
sbb
mov
cli
adc
push
inc
jcxz
fnstcw
arpl
sub
mov
nop
cwtl
imul
sti
pop
mov
gs
cmp
fldl
add
mov
ret
rcr
pusha
test
push
xlat
cmc
ret
lahf
or
aad
sahf
xchg
out
outsb
push
in
mov
or
jo
cmp
arpl
mov
testb
call
icebp
outsl
inc
ja
lods
jg
jecxz
rolb
add
cltd
pop
dec
idivb
and
and
lahf
jl
ficoml
mov
mov
rclb
lds
imul
jle
xchg
das
mov
std
xchg
jp
pop
das
inc
jnp
mov
roll
mov
and
pop
xor
sbb
ror
gs
test
fsts
sub
iret
loop
adc
cmpsl
mov
stos
outsb
hlt
lea
cwtl
jmp
cld
cmp
and
fwait
ljmp
fcmovnbe
mov
inc
in
loope
imul
lcall
cmpsl
sahf
rcr
cld
sbb
xchg
push
ret
test
scas
sahf
jne
rcl
fstpt
push
mov
fistps
xlat
lods
xchg
pusha
addr16
out
push
or
xor
mov
add
push
lcall
je
jg
jecxz
jne
nop
repz
aaa
sbb
popf
popf
sahf
push
cmpl
dec
out
mov
and
inc
add
xchg
jo
fs
add
cmpl
fcoml
cltd
movsb
xlat
jns
or
insb
les
add
pop
in
sub
mov
adc
out
xchg
in
cmpsl
nop
jp
negl
adc
mov
sub
jns
out
xchg
xchg
sahf
or
lret
xchg
push
pop
in
jae
pusha
arpl
mov
push
rcl
dec
pop
iret
in
sahf
xchg
mov
mov
call
into
popa
test
mov
loop
mov
lock
cmp
fst
inc
mov
je
pop
faddp
fisubrs
lret
bound
jmp
std
inc
imul
pop
lcall
push
add
ret
cmpsb
cmp
inc
mov
repnz
lea
xor
push
lahf
inc
fdiv
clc
push
xchg
cmp
push
ret
dec
push
adc
fwait
mov
push
cmp
mov
lret
stos
push
daa
repnz
xchg
lret
test
push
das
incl
iret
mov
mov
mov
out
addl
or
xchg
mov
cwtl
roll
mov
in
pop
cld
repnz
mov
mov
pandn
jl
or
lahf
es
ds
sbb
sti
add
adc
fcoml
pop
fisubrs
add
add
ret
xchg
shll
pop
inc
xchg
mov
lock
in
mov
cmp
push
dec
jmp
and
cs
pusha
pop
mov
dec
insl
push
cmpsl
repz
push
pop
adc
jecxz
addr16
push
mov
out
push
gs
fwait
rcrb
mov
and
insl
sub
push
mov
pop
xor
jno
pop
xchg
daa
les
popa
scas
sub
mov
xchg
adc
or
ret
aas
sub
lahf
mov
push
daa
movsb
scas
movsl
jae
mov
or
aam
clc
stc
rorb
mov
cmp
and
sub
test
shll
pop
cmp
mov
or
pop
enter
lret
rcll
ss
mov
fcomps
pop
or
fs
or
pop
cmp
clc
mov
inc
jno
pop
rorb
inc
cmp
sub
pusha
daa
leave
jo
adc
xchg
pop
test
xor
lods
rorl
xchg
movsb
push
test
andl
gs
mov
mov
loop
lcall
and
test
mov
cltd
and
mov
mov
pop
add
jns
add
stos
daa
popf
pop
jnp
pop
fucomi
mov
lcall
shrb
lret
aaa
mov
rcll
xchg
lcall
xor
xor
xchg
std
loope
shll
js
or
push
in
jo
sti
push
xorl
repz
pop
mov
push
xchg
pop
mov
inc
push
or
adc
xor
push
and
inc
bswap
call
xchg
jne
sbb
sti
mov
jo
sbb
xor
into
fs
leave
push
pop
movsl
popf
aaa
add
mov
push
and
andl
sbb
test
scas
notb
cmp
js
sti
jno
subb
insb
fcmovnu
inc
or
jl
dec
idivl
jne
adc
lea
out
fcmove
rcrb
push
fwait
dec
in
pop
lcall
inc
cmp
int3
dec
test
int3
or
mov
rorl
jecxz
mov
and
fidivl
add
test
mov
xorl
push
arpl
das
dec
test
xor
pop
and
mov
ljmp
mov
mov
jns
shll
stos
push
testl
mov
ret
rorb
insl
imul
xchg
movsb
mov
call
hlt
movsl
push
pop
xor
arpl
jnp
mov
or
out
adc
xor
es
add
push
and
inc
fstpt
dec
fisttpl
or
mov
dec
in
icebp
and
mov
sti
jo
pusha
xlat
ret
mov
clc
hlt
jp
mov
dec
mov
mov
pop
pushf
repnz
mov
pop
dec
push
fcom
push
mov
inc
aam
out
mov
mov
cltd
or
push
es
and
pop
pop
inc
fidivrl
fcmovu
negl
in
push
mov
ljmp
inc
movsl
arpl
xchg
iret
rcrl
pop
xchg
fxam
add
jae
xchg
lea
in
adc
aas
gs
iret
mov
mov
roll
pusha
pop
mov
out
lods
popf
push
lahf
jo
sbb
out
test
xchg
fnstcw
or
mov
and
xchg
inc
lods
sub
pushf
enter
cmp
mov
pop
incl
mov
mov
push
movsl
clc
push
mov
pusha
xchg
add
lcall
jno
loop
imul
shll
loop
xor
xbegin
adc
sbb
sub
repz
xor
xor
lds
aas
or
mov
outsb
inc
lret
xor
adc
gs
dec
mov
jmp
add
daa
xchg
enter
loop
mov
cwtl
mov
mov
imul
xchg
fisubrs
aas
imul
dec
negb
jmp
cld
dec
pop
add
imul
fwait
jnp
movsb
stc
mov
add
xchg
out
push
out
cmc
mov
pop
loope
fnsave
popf
clc
jnp
mov
addr16
loope
test
stc
inc
jle
lret
cli
jge
jg
jmp
int
mov
jmp
adc
dec
xchg
dec
mov
and
aam
adcb
cmp
out
add
sub
pop
jge
sbbb
sub
jae
popl
pop
xor
aaa
fucomp
je
call
cmpsl
xlat
cmc
mov
xor
jp
jne
add
dec
dec
insb
xor
inc
rep
cmp
cmp
into
nop
loop
pop
inc
scas
and
jge
stos
rorb
popf
mov
bound
fcomip
sub
add
lret
sub
outsl
sub
jp
sti
scas
jns
inc
ljmp
cli
xor
popf
setl
sbb
or
mov
jbe
xchg
dec
jp
out
push
dec
cmp
loopne
cmp
and
dec
mulb
jbe
xchg
cmc
dec
and
mov
adc
mov
es
cld
mov
test
xchg
popf
icebp
das
cmp
sbb
ss
mov
lock
inc
or
filds
in
movsb
mov
pushf
pushf
mov
aas
mov
pop
movsl
sbb
jg
jge
addb
inc
mov
ret
mov
mov
rcl
cltd
jae
bound
or
lret
inc
fmuls
mov
push
dec
in
mov
sub
insl
mov
je
cld
cli
lcall
fstp
push
push
ja
sbb
jmp
movsl
hlt
sahf
adc
mov
mov
lcall
icebp
out
mov
out
fildll
cmpb
sbb
std
push
cli
popa
lret
roll
dec
cmp
aaa
outsb
mov
dec
mov
adcl
enter
xor
pop
xchg
pushf
lods
scas
dec
jg
push
cmp
pop
pop
sub
mov
cmc
adc
sub
subl
in
insb
lods
pop
xchg
test
cli
mov
call
push
out
and
cmp
rorb
adc
mov
mov
negb
insb
xchg
push
dec
pop
imul
lea
xchg
jp
cltd
sub
into
pop
jge
movsb
sub
mov
fsts
ret
fisttpl
mov
adc
adc
inc
fdivrl
mov
imul
les
jbe
mov
inc
push
mov
lret
xor
pop
lahf
das
mov
mov
push
inc
js
xor
sbb
sub
jl
js
cmp
outsb
ss
sbbb
cmp
scas
adc
out
and
or
addr16
dec
jecxz
push
dec
xorb
clc
xchg
negl
jge
scas
fcomip
adc
mov
test
mov
dec
leave
and
leave
movsl
cmc
repnz
pop
faddl
lret
push
mov
std
inc
pop
repz
xchg
lock
jl
sbb
lahf
inc
rorb
jl
inc
push
xchg
out
aaa
and
or
push
cmp
pop
js
test
aaa
pop
sbb
in
xchg
in
pop
dec
in
es
adc
js
imul
dec
insb
cmp
cld
call
lret
popf
fstpt
jae
mov
cmp
jae
ljmp
mov
int
sahf
out
fdivs
inc
push
jp
sti
inc
clc
xchg
mov
add
xchg
xor
fimuls
add
or
pop
outsl
andb
call
xlat
cmp
xchg
dec
mov
jno
daa
push
sbb
popf
cltd
push
inc
sbb
xchg
jne
outsl
ret
orb
dec
sahf
pop
insb
jg
pop
das
pop
imul
out
insb
inc
rol
push
sub
mov
cmp
mov
add
mov
jp
lock
repnz
ror
inc
out
cmpsl
cmp
or
xchg
out
add
xorl
shrb
cs
test
hlt
jl
shrl
mov
sbb
mov
enter
rclb
or
adc
lret
push
fistps
ds
outsb
push
push
mov
inc
leave
out
xchg
mov
sbb
pop
pushf
push
out
inc
add
push
jns
fnsave
adc
ja
sub
jb
lds
mov
mov
mov
pop
cli
clc
mov
loopne
sahf
jnp
pop
inc
jno
sub
sbb
xor
jmp
scas
int3
scas
lods
popf
mov
xor
mov
or
aaa
mov
sub
imul
jmp
ficomps
jne
mov
add
jb
lahf
imul
stos
adc
inc
jns
out
sub
lea
in
sbb
addb
and
or
in
or
es
xchg
xor
cmp
xorb
je
push
or
mul
in
scas
xor
pop
jae
inc
std
jae
fsubrs
xor
lret
dec
je
call
or
test
int
cmpsb
dec
jmp
adc
fwait
xchg
cmp
adc
addr16
inc
lea
push
add
enter
ret
int
mov
mov
out
cltd
pop
dec
adc
xchg
jnp
sub
ret
out
enter
and
mov
fsub
out
icebp
and
sbb
and
mov
cltd
int
xchg
sub
inc
jnp
mulb
loopne
lcall
mov
and
adc
loopne
hlt
pop
adc
scas
add
fs
fcmovb
xor
movsl
insl
lds
les
xchg
adc
sbb
shll
xor
adc
bound
shll
mov
xor
and
outsb
jmp
outsl
adc
addr16
sahf
add
loope
movsb
je
leave
dec
aas
cmc
loopne
scas
push
lret
lods
ja
je
add
lret
imul
pop
push
sub
ror
ja
fadds
pop
cwtl
mov
jo
inc
cwtl
sub
insl
push
fdivrl
jmp
pop
lcall
jno
adc
andl
push
aas
and
jbe
into
nop
sbbb
rcrl
in
jecxz
sbb
jo
jmp
xor
out
es
cltd
inc
dec
adc
inc
rcll
adc
aam
outsb
icebp
sbb
fiaddl
xlat
outsl
scas
jnp
pop
out
sbb
jp
fnsave
mov
pop
adc
push
cmp
icebp
hlt
in
imul
push
dec
xor
or
or
iret
nop
xchg
or
xor
add
sbb
mov
lea
jle
ljmp
repz
adc
mov
subb
pop
jle
add
push
mov
add
cld
push
adc
dec
dec
mov
adc
jns
cmp
xorl
mov
cwtl
pop
jae
xchg
das
enter
cli
push
pop
scas
push
movsl
outsl
or
fcompl
or
push
mov
xchg
cli
lods
addr16
aaa
xor
testb
xor
cld
inc
in
subl
jge
leave
loop
fmul
mov
pusha
ret
ljmp
jno
mov
add
std
les
iret
sub
scas
lods
testl
mov
inc
pop
add
mov
adc
lds
lds
je
les
mov
sub
and
cmp
lea
cld
push
enter
ret
or
mov
push
out
add
xor
push
adc
andb
or
jmp
imul
cli
inc
je
sub
adc
mov
fdivrl
cmp
pop
push
sbb
xor
adc
jae
sbb
aas
cmp
mov
dec
cli
push
in
lods
adc
mov
adc
sbb
lods
cmp
jecxz
data16
dec
push
pop
xor
hlt
test
repz
lds
jnp
inc
inc
adc
je
push
loop
pop
xchg
and
and
insb
xor
fcoml
aaa
add
inc
jp
pop
fs
xor
iret
les
call
pop
or
and
jmp
cmpb
cwtl
mov
fdivrp
cli
sahf
test
jl
neg
imul
out
cltd
imul
in
leave
pop
dec
lods
pop
movsl
loop
aad
mov
cmp
lods
pop
jl
cmp
cmp
dec
push
cwtl
and
jae
xchg
dec
push
cmp
mov
into
jnp
and
ret
scas
jb
cmp
imul
out
and
rcrb
in
jle
and
xchg
sbb
ljmp
xchg
pop
stc
or
sti
pushw
pop
in
xchg
and
cmp
mov
mov
les
arpl
mov
fwait
pop
aam
jmp
add
nop
cmp
ret
cmpl
enter
aad
movsl
xor
cs
jne
aaa
jb
and
xor
dec
insb
in
lahf
or
jmp
xorb
ret
cmp
mov
js
adc
mov
mov
lea
pop
ret
int
out
popf
imul
test
jge
fxtract
or
fmull
pop
outsl
addr16
jecxz
inc
or
mov
jl
fiaddl
out
mov
cld
dec
pop
mov
xchg
mov
mov
cmp
push
mov
add
ds
inc
jbe
jg
mov
add
bound
push
push
add
adc
ret
xchg
and
fcomps
sub
clc
jbe,pn
add
out
xor
lcall
add
mov
ds
jmp
flds
pusha
lret
mov
pop
ret
or
and
loopne
repz
xor
mov
mov
push
jb
test
jmp
xchg
push
xchg
inc
stc
inc
pop
jg
xchg
dec
test
pop
je
mov
jp
xorl
sbb
lcall
das
push
cld
xor
gs
insb
xchg
in
cmp
testl
bound
inc
iret
and
cld
jo
sbb
dec
lds
inc
sub
cmp
bound
mov
pusha
sub
fwait
jnp
aas
pop
mov
jbe
fwait
pushf
adc
cmp
lret
out
sub
mov
jg
push
in
sub
call
mov
fisttpll
cltd
xchg
sub
int
pop
mov
bound
adc
lods
je
mov
ret
mov
scas
icebp
jmp
outsl
sbb
movsb
jae
scas
jl
daa
in
pushf
ds
sbb
sbb
jg
xor
xchg
repnz
cld
add
dec
mov
or
hlt
cltd
stc
jnp
sub
push
mov
inc
repz
loopne
popa
testl
sarb
int3
mov
test
movsb
jno
xchg
aaa
aaa
push
sbb
pop
lret
pop
add
cmp
add
push
mov
jp
mov
testb
aaa
filds
sarb
sub
sbb
popf
pop
mov
ret
leave
sub
jb
outsb
mov
mov
scas
sub
js
arpl
test
loope
ret
into
cmpsl
call
xchg
xlat
xor
mov
ss
and
jl
addl
pop
pop
fisttpl
outsb
jmp
ret
sub
mov
push
insb
lcall
lods
out
subb
fcompl
push
mov
lcall
jmp
fcoms
into
cltd
in
adc
mov
inc
xchg
mov
jb
inc
js
add
fs
pushf
es
rorl
sbb
push
inc
or
inc
into
mov
sub
and
sbb
loope
adc
leave
mov
ljmp
stos
or
imul
xchg
addps
outsl
arpl
popf
push
pushl
or
mov
xor
mov
mov
pushf
hlt
repnz
dec
pushf
rorb
inc
enter
shrl
xchg
repz
jb
scas
cmp
push
xlat
daa
jg
repnz
or
ret
cmp
and
dec
fidivrl
jne
mov
cli
push
in
xchg
imulb
cmp
mov
push
pop
int3
jmp
jo
cwtl
xor
xchg
loope
pop
jle
rcll
cs
mov
dec
jg
sbb
and
jo
aam
sub
push
xchg
fsubl
in
stos
mov
scas
push
dec
sti
pop
rorb
mov
push
ja
out
dec
push
pop
jbe
xbegin
mov
push
push
arpl
idiv
mov
incl
fnstenv
lock
sub
push
aaa
sub
cs
or
push
aam
xchg
mov
sbb
js
sub
cld
orl
rcr
or
xor
in
cltd
cs
add
pop
enter
bound
mov
pop
add
inc
repnz
cs
outsl
out
popf
popf
push
pushf
mov
or
in
xor
pop
xlat
mov
insl
dec
icebp
jp
sahf
dec
sub
jl
pop
pop
neg
xorb
jo
aad
js
xchg
clc
sbb
xchg
inc
mov
dec
sub
pusha
mov
pop
mov
jle
out
in
vpsllq
in
adc
popl
pop
cmpb
xchg
cmova
cltd
pop
fcomp
ljmp
mov
xor
out
clc
aas
mov
mov
outsl
jne
les
and
lahf
cmp
or
out
fidivs
mov
sbb
push
jae
pop
mov
mov
xchg
pop
cmp
push
rol
test
outsl
popa
stos
or
pop
cmp
push
jo
or
iret
push
mov
and
pop
fldl
add
pop
idivb
mov
push
addr16
hlt
ja
xchg
jbe
mov
sbb
test
and
hlt
pusha
mov
xchg
std
mov
jbe
daa
outsb
out
dec
cmp
jle
in
cli
xchg
pop
repnz
fmuls
into
sbb
in
sbb
mov
loop
cltd
ret
ret
out
sbb
adc
es
es
test
xchg
cmp
les
mov
sahf
mov
mov
cmp
lret
cmc
cld
inc
icebp
mov
lret
xor
xchg
and
fistps
xor
mov
lcall
rclb
mov
scas
and
adc
inc
aaa
xchg
jo
orl
inc
jmp
aas
inc
dec
mov
in
push
cmpsl
mov
adc
inc
ret
jo
ljmp
jbe
adc
lds
les
out
pusha
pop
mov
loope
mov
pop
pop
fcmovnbe
inc
xchg
frstor
ds
inc
add
and
xchg
decl
jmp
dec
inc
pop
dec
push
std
popl
stos
aad
mov
out
stc
jnp
jb
xor
and
aas
ret
sub
out
lds
pusha
push
fisttps
sbb
dec
xchg
stc
ja
outsb
jmp
xor
inc
or
jb
test
push
aas
lds
das
mov
push
lcall
decb
jl
pop
jb
test
xchg
shr
mov
inc
iret
dec
int3
mov
mov
jne
cmp
adc
jns
je
xlat
sbb
cmp
and
add
in
push
and
clc
lret
aaa
mov
mov
mov
xor
jp
mov
xchg
aad
jecxz
inc
mov
scas
rorb
sbb
xchg
ja
push
sub
scas
push
stos
push
sbb
mov
inc
cmp
rorb
sbb
xor
sub
lods
insl
call
adc
and
into
testb
and
cld
and
aam
and
fildll
out
jp
fnstsw
ss
push
xchg
rcll
push
or
movsb
outsb
xchg
call
xor
add
and
insl
push
sub
inc
les
pusha
loop
ret
adc
movsl
mov
cmp
jo
repz
mov
push
mov
leave
xchg
adc
mov
add
pushf
lret
cs
push
call
or
in
adc
mulb
pop
push
jl
out
iret
fisttps
out
mov
cld
cmp
or
or
mov
mov
repnz
xchg
into
mov
cwtl
adc
sub
std
insb
sbb
dec
lret
and
add
loopne
pop
cmp
mov
xor
push
cli
lcall
bnd
push
adc
mov
out
push
lock
mov
mov
cmp
lock
mov
sbb
cwtl
jle
or
jg
adcb
mov
pop
and
jbe
xor
sti
mov
add
cmp
sub
movsl
popf
or
mov
adc
xchg
dec
inc
push
mov
sbb
call
or
or
bound
lretw
and
cmp
or
jns
adc
pop
mov
std
jle
adc
iret
pop
xchg
pop
lahf
push
in
and
test
ret
jne
mov
test
push
pop
pop
mov
fdivl
pop
movsl
pop
add
shrl
mov
imul
out
pop
mov
pop
mov
push
imulb
dec
dec
sti
push
cld
push
and
lahf
and
mov
jo
mov
shl
out
or
push
add
sbb
fld
faddp
cmp
test
pushf
xchg
test
jl
xchg
mov
adc
and
aad
arpl
hlt
ja
push
mov
movsl
xchg
jae
inc
lahf
rclb
pop
pop
jo
fstpt
pushf
lods
mov
or
inc
in
add
lea
in
mov
push
pop
iret
lahf
add
pop
sub
jge
xor
adc
das
mov
inc
sub
and
shrl
in
stc
ljmp
movsb
xor
mov
xor
xor
mov
push
pop
arpl
add
rcrb
fwait
mov
and
stc
lds
rcll
mov
sub
mov
loope
mov
call
int
pop
adc
inc
and
jb
xor
sti
iret
pop
repnz
fdiv
sti
shlb
fnstcw
jae
and
lods
xor
or
jnp
mov
or
mov
in
outsl
xor
push
stos
popa
push
pop
add
jg
aam
pop
jge
mov
je
adc
mov
push
mov
nop
mov
outsb
dec
lahf
pop
push
mov
repnz
out
push
cltd
cmp
stos
in
bound
dec
xchg
push
jge
xchg
jge
mov
pop
lahf
scas
movsl
test
jp
aam
fbstp
xlat
das
push
popa
xchg
pop
icebp
sub
dec
pop
mov
dec
push
xor
pop
mov
sub
inc
js
pop
xor
outsb
cli
add
lods
mov
adc
pop
hlt
loopne
sarl
dec
lock
movsl
jb
and
mov
adc
or
mov
stos
xor
or
mov
in
sub
pop
adc
cmp
sahf
add
mov
mov
pop
out
xor
repz
pop
dec
jns
sbb
jl
pop
add
out
lock
mov
insb
sarb
mov
xchg
shll
scas
mov
out
push
js
sahf
mull
xor
mov
cmpb
imul
pop
js
pop
outsb
mov
rorl
mov
fstp
loop
inc
stos
mov
push
fldenv
pusha
lea
stc
dec
popf
mov
stc
jnp
fs
pop
fldt
inc
pop
jmp
cmc
int3
sub
lods
push
sub
lock
inc
or
mov
int
in
and
dec
imul
fisubrs
testb
aam
out
jecxz
pop
mov
sahf
and
xchg
xchg
xchg
jae
outsb
into
aas
or
jne
sub
test
adc
or
arpl
ret
ret
sbb
lods
cmp
iret
sar
xchg
dec
push
ljmp
add
cmp
xchg
pusha
incb
xchg
dec
dec
xor
shr
jbe
push
std
ss
aas
xchg
mov
or
mov
xchg
flds
xor
cli
rcrl
enter
pop
or
repz
popa
sbb
adc
pop
idiv
mov
jl
jl
jg
sarl
add
push
jecxz
sub
out
dec
adc
sub
mov
dec
sbb
push
popa
xor
test
lods
in
push
mov
and
sub
js
mov
fwait
mov
cmp
shll
shll
movsb
mov
inc
mov
xor
stos
xlat
cmc
aaa
mov
cmp
mov
and
jle
negl
mov
mov
lock
insl
fists
dec
icebp
xor
rolb
sbb
xchg
cmp
adc
mov
loop
fwait
lock
mov
sbb
cmpsl
push
jns
xchg
mov
andps
or
outsb
dec
mov
addr16
bound
enter
mov
call
push
movsb
cld
inc
adc
out
test
jp
jecxz
inc
jo
mov
push
and
pusha
mov
mov
mov
imul
ret
adc
add
jg
sub
movsl
in
imul
pop
or
es
inc
aam
xor
mov
repz
lret
rcll
add
outsb
mov
push
cmp
inc
imul
sub
pop
out
stos
push
jbe
jge
add
cmp
adc
inc
jg
ss
ja
cld
andb
jge
and
aas
repnz
xchg
mov
push
jbe
jmp
or
insl
sbb
mov
ljmp
scas
test
xchg
and
lds
scas
dec
sub
aad
imul
mov
insb
pop
push
jg
pop
cmp
cmp
stos
movsb
mov
jecxz
jnp
add
cwtl
test
in
add
push
mov
or
pop
sub
lock
or
push
pop
push
push
movsb
insb
adc
clc
ror
flds
fucomip
les
in
int3
lahf
mov
inc
je
bound
pop
jns
push
popf
push
divl
sbb
js
and
lret
dec
xor
push
push
scas
outsl
lcall
sahf
dec
sarl
sbbl
mov
xchg
loop
fcoms
mov
fwait
mov
inc
xchg
lods
inc
xor
adc
jp
lcall
pop
in
cltd
notb
add
mov
xchg
jnp
ss
scas
xor
jle
in
cmp
aam
cmc
or
orl
mov
out
mov
xor
sbb
mov
adc
sub
popa
clc
mov
mov
jg
stc
shll
movsb
inc
jecxz
nop
mov
gs
jg
and
mov
xchg
cmp
stos
fstps
jb
jmp
push
mov
push
xlat
fcomip
je,pt
pop
rcrl
pop
xlat
xlat
mov
mov
sbb
cmpsl
mov
fiaddl
mov
mov
mov
jns
rclb
popw
in
push
lods
mov
sbb
daa
cmp
xor
add
je
add
imul
insl
loope
aaa
jge
mov
in
adc
pop
and
sbb
or
sub
in
and
mov
jbe
inc
jp
lock
inc
cmp
fists
mov
push
in
mov
jae
jne
adc
test
add
xchg
outsb
leave
js
lock
arpl
xchg
or
adc
mov
in
mov
outsb
lret
je
out
pop
lods
stc
pop
shlb
scas
stos
in
cmpsb
push
cmp
mov
pop
nop
inc
addr16
outsl
jne
cmp
cmpl
xor
mov
in
out
imul
imul
push
sahf
int
xchg
jne
stos
dec
fnstsw
pop
lret
call
dec
push
shlb
ljmp
in
and
mov
push
ret
arpl
xor
adc
jno
stos
xorl
aaa
dec
stos
add
xchg
and
xlat
jmp
fidivrs
pop
punpckhbw
sarl
repnz
pop
or
jge
insl
xchg
stos
cmpsl
rcl
int
ja
loopne
fisubs
int
into
ss
clc
mov
call
aam
jno
es
mov
push
jmp
inc
xor
dec
test
test
cmc
lock
daa
in
lret
pop
jne
cld
mov
mov
inc
cmp
fmull
push
mov
sbb
dec
scas
incb
dec
mov
dec
add
cld
cmp
adc
les
test
xlat
imul
adcb
fmull
pop
loop
pop
sub
fnstenv
mov
mov
dec
sbb
or
push
sbb
jno
addr16
aas
push
jnp
bound
inc
inc
test
inc
adc
inc
push
in
test
lret
imul
dec
add
cmpsb
mov
and
je
imul
pop
rcll
pop
xorb
pop
shll
push
cmpsb
std
xor
pop
rcr
inc
cmc
jne
lea
data16
add
cwtl
daa
mov
mov
push
shlb
push
and
arpl
sahf
lcall
jns
insl
push
lret
xor
sbb
test
adc
pop
push
push
push
xchg
pop
dec
cmp
jne
cmp
call
enter
and
in
pop
or
mov
leave
mov
add
pop
xor
hlt
cld
test
aam
pop
lods
add
adc
aas
pop
pop
orl
pop
or
scas
inc
mov
push
fists
mov
shlb
add
or
mov
xor
inc
inc
and
aaa
mov
mov
push
push
sarb
or
cmp
inc
dec
mov
cwtl
or
icebp
add
pop
xchg
jge
cmp
ret
jne
test
bound
adc
lcall
jnp
sbb
test
lret
cli
sbb
hlt
sub
xchg
ret
mov
aaa
out
dec
subb
jg
mov
pusha
lods
leave
adcb
fcmovnbe
inc
dec
pop
pop
sbb
mov
add
mov
sbb
adcl
xchg
lahf
adc
pop
dec
inc
data16
loop
mov
divb
adc
xchg
push
dec
xchg
xchg
jg
or
push
movsl
mov
adc
test
pop
mov
ret
jge
cmpsl
icebp
cmp
sub
fistpl
outsl
pop
imul
pusha
int
sbb
dec
cmp
addr16
fadds
push
leave
xor
sbb
outsl
fbstp
es
ja
inc
out
mov
loop
add
pop
mov
out
fdivrp
jg
mov
add
sub
pop
flds
scas
je
pop
aam
mov
mov
lods
dec
push
sbb
loopne
mov
stos
lahf
cmc
fwait
inc
dec
or
fs
test
jg
cltd
gs
scas
ss
dec
xlat
sub
jb
leave
adc
pop
adcl
or
ja
mov
fbld
lret
in
int
or
sbbb
xchg
fdivs
xchg
inc
fwait
cmc
je
inc
hlt
rorl
shll
fs
jp,pt
sub
dec
push
mov
out
jmp
jmp
lods
popf
mov
inc
ja
insl
xchg
and
adc
and
cli
ljmp
iret
dec
xlat
pusha
and
out
and
adc
or
movsl
xchg
ficoml
mov
out
daa
icebp
pop
push
sbb
add
xchg
mov
int3
faddl
out
pop
pop
mov
outsl
xchg
sti
or
mov
inc
repnz
stc
lret
lret
arpl
jecxz
push
or
add
inc
jge
add
adcb
xorl
inc
pop
jae
mov
and
pop
push
sub
loope
out
sub
pusha
jbe
jmp
adc
sbb
lcall
push
and
mov
je
xchg
test
cmp
bound
mov
jno
sbb
in
xchg
jbe
pop
mov
cmp
dec
mov
mov
sub
or
out
dec
pop
fwait
xchg
add
xchg
ficompl
sub
daa
icebp
in
popf
mov
dec
jecxz
stc
push
and
or
inc
add
not
inc
push
xchg
cmp
inc
jno
mov
int
jno
sti
mov
push
and
cmc
cmp
mov
ljmp
ret
mov
inc
lret
movsl
lods
sub
mov
mov
ss
add
out
xchg
cmp
mov
adc
cmpsb
adc
jmp
test
push
jbe
lds
aas
cmpsl
or
std
nop
movsb
mov
push
or
push
dec
sbb
dec
jle
push
mov
sbb
or
sub
in
adc
mov
ds
sarl
cwtl
mov
loop
outsb
cmc
divb
xlat
mov
dec
int
clc
scas
xor
pop
mov
in
jbe
insl
adc
push
dec
mov
jo
aas
iret
addr16
jecxz
mov
and
stos
enter
repnz
fildl
lea
je
dec
int3
mov
arpl
dec
out
dec
and
pop
mov
ds
dec
ficomps
xchg
stos
gs
loopne
pop
pop
cs
mov
mov
fldcw
cltd
cmp
xlat
pop
ds
xchg
or
leave
mov
pop
adcb
fnstenv
pusha
xor
scas
aaa
inc
pop
push
fmuls
call
jp,pt
ret
lcall
icebp
dec
mov
jp
pusha
xlat
pop
imull
adc
mov
cmp
push
dec
xchg
jl
cmp
push
inc
xorb
movsb
sbb
movsl
pop
dec
mov
sub
leave
push
ret
rorl
mov
dec
dec
or
adc
cld
ss
mov
jbe
dec
ja
sbb
scas
mov
lret
jb
fldl
cmpsb
adc
and
divl
outsb
push
fldl
xor
push
mov
jae
lret
stc
mov
dec
lret
pop
jmp
cmp
repnz
pushf
test
aad
test
inc
adc
in
cmp
mov
addr16
inc
dec
push
push
xor
fsts
lods
in
push
cmp
or
inc
pop
jno
xchg
adc
bound
jnp
cmpl
and
pop
and
in
jecxz
dec
sub
loope
cmc
cmpsb
mov
jecxz
push
das
insb
jae
jns
push
lret
sub
inc
xchg
jne
jge
sti
sbb
push
scas
push
adc
out
addr16
jne
mov
mov
dec
popa
cmp
scas
dec
sbb
sub
testl
lret
pop
cmp
je
test
sti
js
xor
fdivrp
bnd
popf
inc
xor
adc
ficoml
adc
out
mov
xchg
gs
xchg
mov
mov
fistpl
insb
xlat
movsb
adc
xor
mov
fmull
std
push
add
mov
add
or
cmp
inc
movsl
push
dec
inc
sbb
cmp
push
sub
sar
add
dec
push
add
arpl
xchg
hlt
repz
sbb
fsts
ljmp
jo
cmc
dec
icebp
push
push
frstor
mov
aas
mov
sub
add
std
xorb
sarl
fisttps
inc
mov
adc
xlat
push
js
and
push
hlt
sahf
mov
out
test
pop
cmp
cli
in
push
stc
sbb
adc
jae
or
push
jecxz
aam
dec
xor
dec
sbb
cmp
or
rolb
cmc
lahf
jae
aaa
test
adc
test
or
mov
and
cmp
gs
xlat
test
mov
push
orb
in
popf
stos
mov
xchg
test
orl
cmp
cmp
inc
int
adc
add
andnps
test
pop
dec
int
out
sbb
xchg
jge
pop
mov
ret
gs
add
das
sahf
cwtl
loope
sub
push
adc
es
in
adc
push
hlt
clc
xchg
lods
pop
cmp
cmp
gs
cltd
repz
cmpsb
cmp
pop
shlb
xor
andl
popf
popa
and
push
fiadds
aaa
stc
cwtl
jno
mov
cs
inc
fdivrl
xor
jno
fsubl
cmp
xchg
into
ds
xor
jne
in
dec
dec
les
mov
loope
ds
dec
jge
push
push
gs
aad
shr
lea
mov
int
sti
popf
xchg
push
xchg
sub
push
xor
lea
out
pusha
jge
ret
imul
movsl
lret
int3
mov
adc
cmc
test
xor
je
repz
pop
push
pop
jge
inc
push
inc
push
push
in
mov
dec
enter
jge
sub
sarb
loope
insl
aas
pop
xor
mov
insb
adc
sbb
cmc
cmc
pop
sbb
xchg
pop
shr
subb
xchg
inc
loop
jmp
mov
jle
jo
pop
test
mov
xor
iret
sub
jne
inc
out
lea
addr16
jg
pop
shrb
dec
jg
dec
inc
fistl
scas
cmp
pop
push
pusha
cmpsb
icebp
sar
int
inc
cmc
out
xchg
fcompl
call
jg
sub
in
es
in
sub
adc
daa
decl
out
push
rorl
cltd
inc
push
inc
lock
jbe
sub
out
loop
xchg
inc
cli
cmp
fdivr
hlt
jle
loope
daa
leave
mov
rol
unpcklps
mov
div
mov
shrl
jns
jle
push
push
mov
or
dec
std
cmp
stos
cmp
pushf
adc
fwait
cmpsl
cmpsl
pop
mov
xor
or
xor
in
add
mov
xlat
inc
ds
xchg
push
and
daa
xlat
mov
xor
addl
sbb
popf
push
scas
dec
xchg
fsubp
and
cmp
rcrb
xlat
insb
pushf
dec
dec
cmp
sbb
fnstenv
outsl
jmp
icebp
adc
fcompl
mov
pop
hlt
jb
sbb
out
or
push
aam
sbb
cmpsb
and
dec
in
test
push
xchg
iret
sbb
fidivl
ss
pop
push
aam
xchg
dec
nop
push
xchg
jbe
mov
divl
fstpt
mov
push
aad
gs
add
iret
mov
rcrl
pop
lods
inc
loop
imul
push
lods
nop
mov
mov
daa
jnp
cmp
mov
mov
lock
lea
mov
test
mov
fs
or
pusha
arpl
mov
movsb
and
jl
orb
movsl
outsb
ret
adc
loop
pusha
movsb
push
ljmp
jae
mov
shll
xchg
xchg
mov
push
insl
jmp
and
adc
mov
jle
rolb
push
leave
xor
cmp
adc
fdivrl
jle
subl
out
mov
pop
inc
inc
imul
icebp
enter
inc
mov
dec
insb
lret
cbtw
push
xchg
push
adc
add
push
rcr
sbb
push
test
stc
test
cmp
scas
sbb
jae
push
lods
shlb
cmp
stos
pop
call
mov
lcall
outsl
or
cmp
mov
xchg
ret
bswap
pop
push
mov
cmc
push
or
movsb
out
or
jbe
rcll
sbb
cmp
outsl
sahf
inc
pop
mov
fwait
das
into
out
lret
imul
rcrb
fsubl
push
fwait
cmc
imul
test
arpl
sub
sbb
xchg
call
in
cmp
xor
sub
pop
push
fs
in
jge
test
pop
mov
inc
leave
sub
xor
push
pop
fcomps
mov
cmp
dec
fwait
in
stos
leave
iret
mov
push
lods
insb
adc
mov
jg
aad
mov
or
test
xchg
cltd
xchg
mov
ss
xchg
mov
cli
dec
ljmp
sahf
jmp
fildl
decb
cmpsb
mov
add
sbb
stos
andb
mov
std
popl
cmpsl
lret
adc
mov
sub
mov
rclb
jns
push
xor
mov
xchg
pop
fcmovu
pop
lock
mov
cmpsb
out
mov
pop
adc
lret
xchg
test
push
fadds
push
js
and
dec
cwtl
stos
sbb
mov
dec
push
mov
cmp
inc
lea
sbb
push
imul
add
lea
xor
push
pop
xchg
test
xlat
inc
xor
mov
mov
ret
push
push
cmp
data16
mov
lret
int
mov
dec
push
xchg
mov
push
or
push
adc
and
jo
cltd
fwait
mov
movsl
mov
sub
sub
jmp
cmp
mov
sub
xchg
cmc
into
cmp
ficompl
bound
dec
popf
enter
loopne
enter
dec
out
mull
sbb
call
mov
lock
inc
inc
adc
lahf
jb
or
xchg
mov
mov
jnp
aas
popa
jg
dec
mov
mov
out
push
fisubrs
rol
sbb
sbb
repz
inc
xchg
mov
scas
decl
mov
pop
cmpsl
push
fdiv
cwtl
sarb
insb
pop
push
jbe
xor
nop
lcall
hlt
dec
xchg
mov
cltd
sarb
insl
popf
mov
imul
xor
xor
sahf
mov
lods
mov
cmp
mov
ret
stc
jge
mov
ret
jbe
and
std
fsubs
dec
mov
outsb
and
inc
sub
aad
cmp
sbb
xor
add
int
dec
pop
adc
popa
jecxz
cmp
inc
fdivrl
fsubs
xor
in
pop
xor
leave
mov
jmp
push
sbb
scas
push
push
cmp
jp
add
inc
mov
pop
out
enter
enter
cmp
and
aas
cmp
es
mov
clc
mov
out
ror
push
jge
shrl
iret
loopne
stc
sbb
test
sub
lods
push
mov
je
in
bound
stos
out
mov
addr16
xchg
js
testl
cld
mov
and
mov
jp
sbb
adc
push
test
mov
mov
sub
add
arpl
sub
lock
or
ret
xorl
enter
je
mov
mov
jle
into
mov
pop
das
lds
xor
sarb
xchg
cmp
sub
sub
test
pop
je
addr16
imul
xlat
mov
shll
pop
shll
push
faddl
mov
roll
jne
xor
orb
or
outsb
lret
out
ficoms
orb
aas
negl
nop
inc
push
mov
test
test
push
push
pop
adc
addl
push
mov
push
mov
pop
or
sbb
xchg
jne
adc
adc
imul
dec
sub
mov
aam
inc
into
push
and
xchg
into
loop
mov
in
loopne
dec
cmp
mov
xor
test
leave
push
insl
loopne
call
add
pop
adc
pop
pop
mov
movsb
dec
cmp
ret
push
mov
imul
or
or
xchg
adc
in
imull
int
dec
xor
jmp
leave
jno
cmp
in
cmp
mov
xchg
pop
adc
es
jp
stos
cltd
ss
call
xor
sub
fucomp
mov
in
out
dec
cmp
xchg
jp
add
xchg
jl
mov
mov
push
popf
xor
sbb
mov
decb
push
lods
div
push
sahf
vmovdqu
stc
insb
push
mov
rorb
adcb
pop
aas
ds
std
std
test
sbb
mov
pop
idivl
iret
int3
je
pop
je
aad
jns
adc
dec
ss
fld
enter
test
dec
cld
hlt
aaa
js
call
xor
and
jge
rolw
mov
xor
pop
sbbl
enter
xchg
or
cmp
pusha
dec
adc
or
lods
pop
xor
jmp
mov
mov
ret
pop
mov
cld
mov
test
in
popa
xlat
imul
xchg
mov
jecxz
lods
clc
cs
sub
pop
xor
into
or
test
jb
add
or
or
sbb
clc
push
inc
cld
mov
or
add
push
jp
mov
xor
pop
push
mov
loop
xchg
mov
xor
fdivrs
fistps
xorl
es
loope
int
mov
cmp
test
xchg
sbb
adc
mov
movsl
test
cmpsb
mov
arpl
not
enter
mov
push
xchg
clc
popf
ds
mov
pop
scas
insl
bound
divb
sub
mov
imul
ljmp
xchg
xorb
out
in
insl
dec
test
cmp
push
cmc
jmp
mov
fld
and
icebp
into
neg
cmp
xor
in
jae
mov
std
nop
pop
sub
cltd
mov
mov
xchg
and
lret
in
xor
aaa
fdiv
jg
jecxz
testl
inc
mov
add
push
fldcw
stos
add
add
clc
xchg
mov
push
push
and
hlt
jno
test
mov
cwtl
adc
sbb
mov
ja
push
push
xchg
xchg
mov
pop
jb
lret
repnz
sbb
mov
xor
push
iret
sbb
orb
mov
repz
out
push
aad
push
insl
push
test
rol
ret
outsb
lahf
addl
dec
lock
xor
je
cmp
nop
cld
add
out
mov
out
loope
add
icebp
push
jbe
hlt
outsb
stc
and
add
cmpl
outsb
xlat
or
mov
test
mov
idiv
lods
insb
rcll
mov
cmpsb
nop
mull
sti
pop
cs
sub
mov
mov
push
stos
gs
dec
push
sbb
sti
aaa
pop
stc
jmp
data16
into
xchg
push
imul
cwtl
dec
daa
mov
xor
and
ret
xchg
insl
pop
xor
sub
jmp
fcmovnu
movsl
int
cmpsb
movsl
sub
popf
out
mov
sahf
ljmp
sarb
shlb
lea
sahf
test
incb
push
movsl
cmp
lcall
pop
xor
movsl
cmp
pop
inc
dec
cmp
mov
imul
lret
ja
mov
push
cmp
dec
adc
test
dec
int3
outsb
jae
pop
lcall
les
sahf
int
jp
push
push
and
add
arpl
rcl
aam
xor
xchg
leave
inc
mov
pop
sbb
cmpsl
stos
jg
repz
enter
mov
in
sub
jge
out
jmp
dec
pop
inc
push
xor
mov
sub
lahf
lods
or
xchg
out
mov
mov
andb
xor
outsb
jae
hlt
inc
add
sbb
sti
xor
lret
xchg
dec
push
int
add
lock
push
arpl
aaa
lock
or
data16
sbb
xchg
inc
xor
loopne
fs
xchg
lcall
jnp
push
inc
fdivr
sbb
pop
inc
jb
or
fcmovb
sub
jnp
xchg
andb
jmp
dec
movl
sti
js
mov
push
idivb
icebp
cmpl
cmp
or
dec
mov
dec
fsts
outsb
pop
cld
xor
mov
arpl
insb
xorl
pusha
inc
dec
add
cmp
mov
test
les
into
pop
xchg
adc
stc
int
outsb
sub
jl
std
jmp
sub
xor
xchg
push
cwtl
addr16
das
jp
test
push
mov
sub
cmp
cmp
rorb
rcrb
mov
and
loopne
lods
daa
jp
xchg
inc
rsm
lahf
mov
clc
ror
mov
clc
mov
div
sbb
mov
rcrl
daa
leave
mov
jb
mov
shrb
nop
adc
push
das
adc
lcall
aas
sti
out
orb
jecxz
sub
push
xor
mov
rorl
mov
mov
rcll
jae
fstpt
mov
and
inc
fmulp
loope
mov
inc
mov
arpl
cmp
scas
inc
or
xchg
add
bnd
roll
add
repz
mov
sbb
xchg
jns
xor
je
jge
push
enter
dec
inc
cmp
pop
das
add
sub
mov
in
arpl
rcr
test
loop
movsb
mov
sbb
xor
idiv
nop
out
lret
ja
lea
std
lahf
xorb
les
into
ficoml
cwtl
jg
push
hlt
add
mov
into
or
insb
mov
ja
dec
in
push
xchg
rorl
pop
stc
sub
std
ret
clc
bound
mov
rcll
mov
addl
xchg
fnstsw
movsl
pop
adc
and
push
dec
movb
jmp
push
mov
sarb
or
mov
andb
aaa
adc
ss
fnstenv
add
pop
xchg
jl
xchg
push
ss
pushf
add
dec
ret
jnp
sbb
cld
adc
add
push
mov
popf
add
lret
es
out
pop
adc
in
lds
decb
call
mov
jge
and
jns
add
and
xchg
movsl
jmp
ljmp
xchg
lcall
dec
pushf
enter
or
popf
xchg
call
sbb
pop
cs
les
mov
insb
xor
jbe
sub
call
ss
imul
mov
mov
mov
lret
in
lods
test
insb
inc
icebp
jbe
inc
cltd
push
lock
movsb
stos
mov
insl
adc
lcall
xlat
idiv
cmp
mov
mov
dec
mov
daa
nop
sbb
adc
push
xor
mov
aas
shr
cli
ret
and
mov
les
movsl
stos
dec
jp
clc
mov
jns
movsb
xchg
ret
mov
mov
pushf
aaa
ss
daa
and
jb
jle
pop
ds
cmp
sbb
or
cmp
jb
fdivrl
xchg
cmpsl
fadds
popa
nop
sahf
pop
cmp
andl
mov
popa
sbb
add
popa
push
cld
movsl
rol
jp
movsl
lahf
jbe
es
or
inc
fwait
out
into
sbb
ror
shlb
jae
dec
lds
jge
adc
xchg
gs
divl
dec
and
fnsave
push
push
addr16
aam
push
imul
out
jle
xchg
sbb
shrb
fwait
or
sub
cs
pop
push
test
movsl
inc
inc
mov
icebp
cmpsl
or
mov
mov
xchg
shrl
push
inc
mov
xchg
sub
lret
push
xor
fcmovb
dec
rcrl
dec
push
movsb
aam
leave
or
mov
in
fisubl
dec
loope
jmp
in
jge
push
sbb
mul
jp
sarl
cld
call
jmp
insl
jne
ss
inc
cmp
dec
sub
xchg
and
in
mov
pop
mov
popf
std
mov
das
sub
ror
pop
and
test
jno
imul
and
dec
test
inc
sti
jp
or
sbb
rcll
sbbl
jnp
jp
jecxz
add
adc
jbe
mov
in
cltd
pop
dec
clc
int3
in
mov
push
stos
xor
mov
fildl
or
lock
jecxz
push
and
xor
lea
fwait
mov
pop
mov
aad
mov
adc
jecxz
lret
xchg
and
xchg
cmp
xor
jg
adc
pop
sahf
dec
sarl
jns
sub
cli
inc
loopne
sbb
cmpsb
aad
push
adc
ja
mov
xor
dec
out
mov
mov
leave
inc
call
shl
cld
push
cmp
ret
push
std
mov
jecxz
movsl
sbb
int3
fldcw
xlat
scas
push
pop
repnz
lods
adc
cmpsl
fcompp
or
outsl
push
push
adc
lds
aaa
push
cmc
in
cltd
jecxz
call
shrb
hlt
pop
lret
fisttpll
pushf
call
dec
or
imul
ljmp
mov
dec
cmp
sub
mov
enter
or
aam
or
jns
lock
pop
movsl
loopne
jo
or
int3
mov
push
dec
push
pop
inc
cmp
out
leave
inc
mov
jno
outsl
hlt
or
push
ret
adc
cmp
pusha
push
pop
push
pop
ja
pusha
pop
gs
jl
pop
push
lods
inc
xlat
cmp
popf
jle
clc
insl
dec
shl
ljmp
jle
out
push
or
pop
or
push
jg
int
cmpsl
int3
fsubrl
mov
in
cli
dec
adc
xchg
mov
sbb
jecxz
fwait
push
addl
mov
push
cltd
mov
jl
xchg
or
mov
les
add
xor
lds
es
pop
mov
add
cmpl
adc
sbb
repz
sbb
push
pop
xor
dec
adc
leave
mov
inc
cld
and
inc
mov
push
pop
mov
push
stc
sub
test
ljmp
adc
insl
sbb
sbb
int
scas
scas
cmp
add
mov
pop
mov
inc
aas
das
cs
xor
dec
cld
sub
xchg
loopne
lds
ud2
out
and
in
lods
mov
push
inc
or
scas
arpl
push
jge
das
push
and
enter
stos
pop
push
cli
and
js
shl
out
popl
bound
lods
inc
test
movsb
ret
push
cmp
incb
aam
insl
fnstcw
add
insl
push
nop
inc
aad
adc
or
jbe
lock
pop
lcall
cmp
pop
cmpsb
jle
lods
xor
xchg
inc
cmp
pop
in
push
pop
inc
push
out
pusha
dec
jnp
push
sar
and
mov
mov
xchg
mov
inc
mov
cltd
sub
push
jl
cmc
jo
sahf
push
jl
sbb
js
test
jge
mov
jo
pop
rorl
daa
mov
popa
mov
loopne
push
jbe
inc
stos
xor
jb
xchg
push
jle
cmp
push
inc
push
fdivp
or
xchg
daa
mov
push
popf
enter
das
push
cmp
sub
inc
jb
cmp
cmpsb
loope
movsl
pop
inc
enter
ss
inc
fimull
or
inc
shr
std
mov
int
cltd
mov
subl
loopne
adc
adc
pop
cmp
add
sub
in
sbb
pop
xor
inc
jne
lahf
and
mov
shll
pop
pop
pusha
aam
add
add
mov
stc
insb
lea
push
and
cli
xor
pop
cltd
scas
jbe
inc
cmpsb
jb
jle
mov
lods
push
out
dec
inc
fimull
test
sbb
xlat
add
mov
pop
dec
add
jne
std
or
adc
mov
aam
out
int3
jle
std
fwait
lods
pop
inc
push
decb
gs
out
imul
pop
fidivrs
int
addr16
popf
pop
mov
sti
sbb
pop
pop
xchg
mov
mov
hlt
sbb
std
sub
xchg
pop
add
push
mov
fwait
loope
and
jmp
xchg
or
es
pop
jge
insb
and
dec
outsb
lret
jns
sbbb
adc
jp
sti
call
adc
or
dec
sub
adc
hlt
dec
adc
shl
in
mov
ds
jg
mov
xor
add
stc
xor
repnz
mov
clc
pop
into
and
jge
xor
adc
or
subl
adc
lods
test
icebp
and
test
stc
imul
xchg
popa
push
int
cmp
or
mov
mov
pop
repnz
push
aam
sbb
rcl
or
aad
cwtl
ret
jb
adc
mov
jne
bound
lock
pushf
cmpsl
sub
adc
jle
cmp
push
xchg
lret
jo
push
in
aaa
rcrb
shll
mov
sub
mov
sbb
sub
sbbb
ret
int3
sbb
iret
daa
mov
or
in
sarl
push
xlat
jb
stos
or
imul
fisubl
sbb
inc
rclb
cwtl
mov
arpl
sbb
push
xchg
das
scas
movsl
gs
mov
adc
cmc
xor
jp
or
push
jecxz
add
in
fistpll
cmp
mov
ds
push
and
jae
subb
repz
rcr
dec
in
ret
xor
pop
in
sti
pop
rolb
pop
cmp
mov
xchg
jae
jmp
or
pop
cmp
mov
jb
cmp
or
ja
adc
repz
or
sub
fstpl
aad
mov
repz
mov
cmp
mov
and
stos
test
pop
and
mov
bound
es
sub
sub
sbb
or
icebp
aam
nop
push
add
cmp
filds
adc
test
ss
test
in
pushf
add
dec
add
out
mov
and
outsb
rclb
subl
popf
notl
arpl
inc
push
push
or
xor
mov
stos
dec
jp
out
fidivrl
dec
add
jg
mov
or
dec
iret
ret
pop
mov
idivb
cwtl
cmp
add
mov
clc
frstor
and
loop
hlt
loop
ffree
and
xchg
dec
mov
insl
pop
leave
jmp
pop
aas
mov
lods
or
xchg
lock
add
pop
aas
pop
mov
push
or
mov
sbb
fdivs
pop
lds
add
ret
mov
pop
scas
pop
mov
xchg
jbe
in
pop
and
inc
in
movsb
fs
or
dec
sub
push
ljmp
movsb
fst
into
push
jnp
xor
out
pop
repnz
jecxz
sub
or
xchg
ret
mov
sub
pop
sbb
sub
lods
xchg
divb
icebp
repz
mov
inc
xchg
mov
inc
xor
dec
dec
scas
xchg
xor
call
repz
sub
mov
pop
jg
xor
pop
into
pop
jnp
adc
rcrl
jae
xchg
test
pop
xor
daa
jo
jge
xchg
xor
pop
into
mov
pop
or
and
jae
ja
subl
idivb
test
hlt
out
loop
iret
ja
lock
adc
cli
imul
add
aam
xor
jns
call
and
out
xlat
or
adc
and
xchg
sub
mov
adc
outsb
xor
mov
push
iret
push
push
xchg
add
jg
cmp
dec
stos
cli
or
add
sbb
pop
jl
pushf
or
loopne
stos
adc
add
and
jg
xlat
ja
mov
repnz
add
pusha
fsts
or
orl
mov
ja
lock
jmp
daa
xor
xchg
sahf
and
pop
sbb
mov
dec
jmp
pop
lahf
je
lock
pop
nop
adc
iret
dec
mov
jg
das
xor
jle
imul
mov
pop
in
mov
pop
daa
pop
and
mov
cmp
jecxz
je
mov
fbld
loope
mov
adc
popa
add
xor
mov
jp
fcomp
jle
sti
mov
sbb
pop
mov
jno
stc
push
je
mov
sbb
mov
push
lea
mov
push
lds
sbb
daa
sbb
imul
mov
xchg
add
rcrb
jne
rclb
hlt
sbb
pop
popa
icebp
add
fmull
sbb
push
fwait
out
push
push
jne
mov
add
or
push
adc
xchg
mov
arpl
pop
jmp
adc
cli
or
dec
sub
daa
popa
and
jae
ljmp
lcall
xlat
jmp
imul
cld
pop
sub
das
or
dec
popa
js
jge
push
mov
lods
movsb
cwtl
sub
mov
xchg
fsts
mov
pop
mov
je
stos
xchg
ds
xchg
mov
push
push
daa
xchg
sbb
mov
test
push
sarb
cmp
jge
std
sub
xchg
dec
hlt
test
clc
inc
push
cld
out
popa
mov
and
sbb
in
xchg
adc
imul
cmp
jbe
sahf
cs
add
or
jmp
mov
adc
jge
inc
mov
andb
movsl
xchg
imul
leave
lods
push
jo
in
mov
pop
sub
mov
jle
mov
pop
dec
xchg
adc
cmp
mov
call
cmp
aad
xchg
jge
testl
mov
mov
xchg
sub
rol
mov
xchg
pop
push
div
mov
and
jo
push
test
cmp
sbb
imul
dec
dec
popa
js
lsl
pop
lret
scas
sbb
nop
jp
cmpl
dec
fistl
mov
xchg
ss
dec
ds
dec
lock
int
scas
sbb
dec
iret
pop
addr16
into
and
testb
imul
sbb
and
mov
fists
sub
mov
nop
adc
adc
cmp
out
lret
pop
lods
dec
xor
leave
test
xchg
fnstcw
popf
sbb
jnp
out
mov
fwait
or
sub
xchg
test
mov
push
sti
inc
in
sbb
cld
jnp
jb
adc
hlt
out
in
jae
adc
addr16
xchg
inc
ss
add
cld
fildl
lahf
ficoms
mov
adcl
mov
xlat
in
lret
xor
xchg
std
inc
fwait
pop
inc
js
push
clc
shl
sub
lods
adc
sub
jo
lahf
dec
pop
lds
dec
and
inc
inc
lcall
push
out
xlat
adcl
sahf
push
push
jbe
cmpsl
xchg
cmpsb
mov
sub
lea
pop
mov
sub
shll
jno
movsb
cmpsb
mov
mov
lret
mov
rolb
out
scas
ja
mov
fcmovbe
jno
cmpsl
scas
cmp
sub
jle
popf
int
lret
ds
mov
ret
cmp
pop
mov
and
mov
jnp
inc
pop
mov
lds
test
popf
xchg
pop
jno
out
jns
cmc
sub
movsb
inc
mov
jg
les
jmp
push
xchg
pop
sub
nop
or
gs
data16
les
xchg
jp
mov
cmp
jecxz
inc
ds
pop
loop
test
jne
lock
repz
jmp
imul
jecxz
jo
or
pop
cmp
mov
sub
jo
scas
add
mov
sub
jecxz
push
rclb
mov
adc
pop
inc
es
leave
inc
pop
and
popa
push
inc
inc
js
outsl
fisubl
les
pop
inc
xor
lcall
mov
jmp
dec
dec
or
rcrb
insb
push
and
add
jne
int
scas
pushl
xchg
scas
mov
jb
adcb
ret
mov
mov
sbbl
test
repz
mov
jle
pop
leave
cmc
mov
xchg
inc
sub
rcrb
mov
loop
repz
cld
cmp
test
add
loope
call
ss
jnp
ss
call
or
iret
xchg
mov
rorl
enter
movsb
or
lock
cmp
or
inc
and
mov
dec
dec
movl
push
in
into
imul
push
push
pop
les
out
inc
sub
scas
cmp
pop
int3
test
xchg
js
ss
in
leave
lahf
ret
ljmp
roll
inc
jno
push
jae
vorps
mov
popf
aam
xchg
mov
push
cmpsb
cli
in
or
jae
test
jno
push
mov
lods
inc
test
add
mov
lret
cmp
das
out
inc
nop
das
sub
out
xchg
mov
xchg
fidivs
negl
inc
and
and
testl
mov
mov
call
cmp
mov
stos
rorb
pushfw
addr16
pop
adc
sbb
outsl
data16
inc
movl
mov
dec
lcall
bound
mov
ja
cltd
mov
scas
or
dec
xchg
shl
outsb
cmp
shrb
das
jle
jecxz
push
mov
or
pop
ja
cmp
imul
pop
xchg
xchg
or
add
pop
ss
test
push
icebp
sbb
int3
dec
or
push
mov
call
push
loop
fisttps
xchg
lcall
jecxz
gs
jbe
out
pusha
movntq
push
scas
sbb
in
dec
ja
inc
mov
lea
repnz
out
test
cmc
ljmp
xor
pushf
lock
scas
orb
add
xor
js
stos
mov
cs
sub
leave
roll
bound
or
lods
cmpsb
ret
mov
mov
push
cwtl
mov
or
insb
mov
in
mov
data16
cmp
mov
jmp
jns
fadd
clc
cmp
mov
sub
fldz
mul
sub
adc
out
inc
mov
pop
mov
aam
push
es
sub
pusha
inc
xchg
xor
or
jmp
cmpb
cmp
sarl
nop
int
mov
push
cmp
push
mov
mov
mov
push
jae
pop
sub
cmpsb
fwait
xchg
mov
insw
sbbl
mov
pop
pop
das
cmp
movsb
ror
jae
dec
mov
dec
cmpl
dec
sub
std
das
xor
mov
pop
push
jb
pop
pop
pop
jmp
jmp
inc
pop
fisttps
dec
xchg
mov
cmc
ret
nop
in
hlt
std
insb
pop
cmp
loope
or
xor
jmp
icebp
and
add
aam
out
cmc
jmp
and
outsl
push
orb
mov
push
mov
rorl
add
lock
xchg
push
pop
and
push
adc
loop
mov
mov
les
shrb
push
fdivrp
rcl
sbb
sbb
mov
push
xchg
adc
popa
lret
lds
shl
mov
nop
sub
dec
lods
push
insb
arpl
into
sti
xor
add
jp
mov
out
mov
mov
cmp
jmp
rclb
sbb
loopne
jle
dec
nop
imul
sbb
mov
adc
rclb
js
loopne
lods
mov
jo
mov
xchg
xchg
rclb
add
mov
mov
xchg
jae
ljmp
hlt
sbb
cmp
ret
mov
loop
test
and
dec
lcall
mov
sbb
test
jg
ja
cmpsl
cld
or
pop
lcall
mov
mov
cmpsl
cmp
or
pop
dec
xchg
je
mov
jle
outsb
mov
cltd
xchg
adc
jg
les
sub
add
mov
dec
xchg
push
sarb
adc
pop
jno
mov
push
mov
test
fnstcw
mov
out
dec
stc
test
cmc
mov
jmp
jo
int
push
sbb
mov
call
mov
pop
push
jb
jno
andl
rcl
xor
or
jg
cmpsb
mov
pop
mov
call
jmp
cld
in
std
xchg
das
subb
inc
ret
push
xor
sbb
int3
movsl
je
xor
jae
push
ss
push
dec
call
pop
or
fs
lods
pusha
cld
and
into
icebp
in
mov
jecxz
or
mov
je
ljmp
sub
jns
push
lock
pop
jge
cwtl
pop
mov
aam
sub
cmpsb
in
lds
push
orb
sbb
jb
jne
aaa
jge
jns
inc
pop
push
sub
arpl
pop
das
inc
xchg
rorb
stc
xor
push
fisubrs
mov
movsb
inc
into
jge
pop
mov
push
aad
in
out
adcb
fsub
push
in
test
into
ljmp
jl
aaa
mov
cmp
jns
insb
fisttpl
pop
sahf
popa
mov
lret
xchg
in
ja
mov
mov
sbb
xor
ret
mov
shrl
pop
lds
fldln2
fidivrs
cltd
mov
mov
sar
push
pop
cmp
push
lods
cmp
mov
adc
popa
sub
cmp
sbb
sbb
jb
testb
lods
cmp
shlb
ja
movsb
push
scas
movb
ds
push
cmc
imulb
and
xlat
mov
test
jecxz
jmp
xchg
stos
adc
xchg
stc
inc
movsb
aam
push
int3
vpmacsswd
sub
and
es
pop
mov
add
cs
xchg
shll
hlt
adc
hlt
lods
rolb
out
cmpsl
cld
outsb
insl
loope
push
lods
jmp
lods
enter
scas
jp
sub
call
mov
call
cmp
lcall
jbe
add
aad
cwtl
rolb
sub
add
arpl
clc
pop
adc
jno
test
outsl
mov
divb
mov
lcall
popf
ds
or
inc
divl
or
inc
out
cmp
sbb
shld
and
jmp
lret
into
jg
in
pop
mov
inc
or
mov
test
xchg
jne
xchg
push
and
in
out
or
adc
push
gs
xor
ficompl
push
adc
inc
xlat
out
mov
lret
sbb
bound
cmpl
addr16
pop
or
xor
lcall
sub
push
jae
shlb
imul
or
xchg
xor
sbb
dec
jle
es
mov
lods
xor
or
cld
shlb
les
lret
cmpb
movsl
imull
les
and
cli
or
pop
dec
iret
daa
mov
jae
dec
mov
mov
mov
dec
jg
push
inc
dec
int
icebp
sbb
arpl
rorl
xchg
cs
lods
enter
mov
lods
dec
clc
leave
sub
adc
gs
mov
in
mov
popa
scas
ljmp
xor
rolb
mov
js
mov
xchg
lret
out
inc
mov
pop
add
inc
push
pop
addr16
mov
mov
mov
ret
or
jmp
mov
lods
dec
stos
mov
iret
jb
pop
cmpsl
xchg
out
cmp
push
or
and
cwtl
sbb
lret
movsl
shll
jp
fwait
add
rol
pop
push
and
jno
movsl
mov
cwtl
pop
popa
out
push
ljmp
pop
mov
xlat
mov
xchg
xor
dec
iret
mov
data16
or
aad
add
lock
pop
inc
cmc
jecxz
je
jnp,pt
push
jecxz
ja
jnp
mov
mov
jle
inc
jae
dec
jns
push
out
or
cmp
scas
cmp
sub
dec
jne
pop
push
inc
xor
mov
dec
inc
push
flds
mov
xor
loopne
xor
ret
cmp
and
hlt
in
jbe
dec
aas
repnz
gs
adc
dec
fdivrs
in
and
call
cmp
push
inc
adc
fsubrl
inc
mov
mov
ds
adc
filds
in
movsb
jbe
xor
into
xor
in
mov
push
and
inc
setl
aam
cmpsb
hlt
inc
icebp
not
sbb
dec
xor
mov
jecxz
adc
iret
or
push
mov
mov
sti
sbb
xchg
add
mov
push
mov
dec
arpl
aas
cltd
adc
cmp
subb
add
and
scas
sub
sarl
jle
nop
or
popl
test
loopne
cld
cwtl
out
sti
fdivs
hlt
mov
pop
testl
subb
jae
ja
push
mov
ret
sbb
out
mov
cmpl
fdivl
shlb
lods
add
cmp
movsb
scas
test
pop
jb
jp
in
sbb
repz
arpl
movsl
mov
pop
sub
or
push
outsb
ret
inc
cltd
xor
andl
lret
imul
adc
daa
sbb
int
insb
and
jne
test
int
push
push
xchg
insb
cmova
ret
pop
jae
jl
add
xchg
jbe
sub
arpl
imul
test
test
fsubr
cmp
dec
adc
sbbb
clc
sub
jnp
dec
add
jp
dec
mov
rcr
pop
stc
mov
inc
bound
or
cli
mov
mov
inc
lcall
and
ret
bound
adc
dec
int
lret
push
xchg
prefetch
es
dec
pusha
xchg
mov
pop
mov
and
push
xor
int3
dec
sbb
adc
loopne
and
std
mov
pop
sahf
xor
nop
mov
cld
cmpsl
sahf
cs
loop
cmp
cmc
sbb
jle
test
push
and
and
icebp
xor
sbb
pop
cmpsb
sbb
sbb
or
jnp
inc
sti
jo
xchg
mov
fwait
mov
cmc
pop
loop
lahf
xchg
fdivrp
sub
iret
psrad
jp
or
add
stc
sbb
push
nop
insl
scas
in
inc
pop
inc
jns
call
dec
push
jbe
cs
je
mov
imul
pop
mov
stc
test
jno
push
jl
sbb
pop
sub
arpl
fistpll
jp
jmp
jne
aam
es
pusha
pop
cmp
jge
lret
mov
sbb
xchg
out
jle
js
push
cmpl
lea
mov
std
scas
cmpsb
mov
pop
pop
js
dec
mov
sub
iret
loop
popf
scas
into
lahf
dec
push
imul
lods
jmp
int
test
bound
imul
dec
pop
mov
lcall
cmp
inc
insl
jno
shll
add
dec
rcl
bound
dec
shrl
mov
add
mov
jno
adc
dec
divb
inc
shll
jne
push
das
mov
push
and
jmp
repz
imul
lret
and
xor
inc
mov
pop
ficoml
aas
dec
retw
outsl
out
xor
iret
sbb
dec
mov
inc
gs
and
stos
leave
shll
and
movsb
lods
jmp
inc
test
in
push
push
dec
dec
cwtl
mov
sbb
mov
or
shll
sbb
or
ret
icebp
xchg
jnp
mov
stos
lods
or
cmc
inc
xchg
xchg
jns
jge
and
pop
jle
inc
addr16
pushf
hlt
xchg
jl
popa
and
sub
in
jns
sub
mull
xchg
adc
scas
popf
or
repz
cmc
cli
jmp
outsl
and
or
cmp
cmp
sbb
sbb
cmp
xchg
and
hlt
xchg
cld
cltd
lret
test
out
js
mov
dec
cli
cwtl
ljmp
or
pushf
sbb
std
roll
or
push
adc
lods
adcb
jb
lods
in
dec
rolb
repz
popf
repz
lea
aad
lods
mov
lea
mov
cmc
cmp
jbe
fnclex
mov
adc
mov
lret
fiaddl
out
push
dec
in
cmp
inc
mov
test
cmp
add
sub
adc
sbb
lret
or
mov
xchg
sbb
sbb
idivl
insl
lret
repnz
xchg
rolb
sub
or
stc
cmp
movsl
adc
add
lcall
fcomps
add
push
sti
push
and
mov
cld
cli
repz
xchg
xor
outsb
pop
jge
jnp
xor
push
push
jns
sub
sub
or
jmp
gs
mov
xchg
push
adc
fs
pushl
shll
test
jecxz
hlt
inc
cmp
movsb
pop
dec
mov
sahf
add
fisubrl
jnp
lcall
inc
jle
fldt
dec
mov
sub
xchg
test
xor
jb
aaa
or
mov
loopne
ret
sti
gs
mov
arpl
movsb
sbb
stos
call
inc
enter
cli
mov
out
les
mov
jno
mov
lods
pushf
lahf
xorb
xor
out
push
sub
dec
out
pop
sbb
cmp
adc
rcl
sub
push
loop
adc
sub
lret
pop
lds
jno
xor
mov
test
add
and
test
add
or
dec
fldl
jecxz
inc
adc
out
cmp
sbb
sbb
sti
or
sub
out
cmp
xchg
push
pop
roll
pop
jp
and
jmp
mov
div
sub
orb
pushf
and
dec
push
in
mov
cmpsl
out
lret
pushf
mov
add
dec
pop
stos
jle
lods
xchg
add
xor
jmp
xchg
jmp
xor
and
rcl
lods
xor
scas
scas
mov
in
aas
loop
jbe
lods
dec
and
push
sub
rclb
mov
loope
cwtl
cmc
or
int3
movb
cmpsb
shll
insb
test
adc
sbb
decb
push
aad
mov
out
nop
cmc
push
mov
hlt
jno
mov
inc
lods
sub
mov
imul
jo
shrb
lret
lret
pop
stc
fdiv
jae
dec
cmpsb
scas
mov
pop
inc
inc
xchg
mov
pavgb
lret
loope
aad
jp
cld
and
dec
push
cmp
test
xor
in
ret
lahf
xchg
fdivs
mov
push
push
sbb
mov
imul
pop
cltd
mov
bound
shr
inc
mov
add
fmuls
or
cs
pop
insb
sub
sub
xor
fistps
jl
test
sub
sbb
subb
sarl
xor
mov
sub
adc
popf
sbbb
imul
add
fldcw
jg
push
shlb
outsb
and
cs
sbb
movsl
testb
jmp
insl
stos
insl
outsb
mov
push
js
xlat
inc
lock
mov
repz
add
jae
lods
nop
stc
in
sbb
inc
dec
out
mov
and
pop
add
fwait
xlat
adc
je,pt
or
ljmp
sub
es
xor
push
loopne
mov
imul
loopne
lahf
mov
fstl
nop
jo
adc
cmpl
out
mov
mov
pop
jnp
lds
incl
mull
pop
movsb
xchg
jno
jmp
sahf
cmpsb
sub
push
fsubs
xor
sarl
adc
pop
in
mov
mov
sahf
add
pop
adc
ja
fnstenv
push
iret
rclb
xchg
mov
xchg
cmp
lret
lds
xchg
in
jnp
dec
push
stos
and
sbb
add
xchg
sbb
adc
insl
incl
divb
add
iret
cmp
jmp
add
fwait
pop
add
or
cmpsl
dec
jle
lret
stos
add
lock
cmp
fstpl
aad
pop
lret
movsb
sub
mov
mov
lcall
or
mov
jns
push
xor
fdivrp
dec
cld
idivl
add
loopne
scas
or
movsb
dec
and
stos
push
mov
cmp
idivb
adc
adc
xchg
insb
inc
scas
sbb
shll
ds
cltd
sbb
int
daa
mov
inc
dec
lea
or
fwait
add
int3
sub
lods
cwtl
icebp
dec
ds
lods
add
int
fisttps
out
enter
jae
cmpsl
lods
rcr
inc
fstl
xchg
into
mov
call
sbb
mov
insb
scas
sub
popf
scas
push
xor
cwtl
test
mov
mov
cmp
shll
addb
fildl
jge
out
sbb
lret
das
shlb
sub
sub
repz
mov
in
cmp
sahf
xchg
out
imulb
push
mov
test
dec
cmp
sti
dec
fcoms
ret
cs
outsb
jg
fdivs
mov
cmpsl
aam
jle
scas
test
pop
test
mov
lcall
popa
rorb
push
xor
icebp
sub
jb
xchg
inc
mov
iret
loope
sub
rcrl
popa
push
stos
mov
les
sahf
dec
xchg
mov
jp
xchg
popa
xor
push
or
clc
sbb
rorb
xchg
dec
mov
insb
mov
inc
in
sbb
out
out
data16
lahf
jbe
sbb
js
mov
jecxz
imul
ja
cmp
jle
in
clc
add
add
mov
lcall
dec
in
test
aaa
rcrl
mov
pop
sti
fwait
mov
inc
sub
mov
out
cld
fcomip
enter
push
scas
shrl
add
jne
aad
je
testb
sahf
adc
sub
fsub
jmp
fisttpll
jmp
xor
mov
mov
cmp
cwtl
int
mov
rcll
ljmp
adc
mov
ret
cmp
ret
push
sub
xor
shll
ja
aaa
int3
dec
cmpsb
mov
or
frstor
sbb
aad
scas
push
adc
arpl
ja
adc
ret
sub
out
ja
stc
adc
sub
jmp
outsb
mov
sarb
cmp
pop
ljmp
mov
js
imul
out
lea
insb
dec
mov
outsb
dec
mov
stos
jo
dec
sbb
xchg
adc
mov
mov
xchg
jno
int3
lahf
push
jp
jle
test
cmp
or
adc
addr16
sub
push
pusha
mov
pop
popf
js
pusha
rclb
ss
push
xor
mov
cmc
je
scas
punpcklwd
jge
xchg
popa
pop
jle
dec
xchg
xchg
repnz
pop
lahf
push
jns
in
out
mov
sbb
mov
out
je
push
cwtl
rcrl
cmc
movsl
push
jae
outsb
jbe
push
xor
es
insb
fwait
inc
cltd
or
mov
push
div
mov
je
enter
sub
pop
insl
pusha
loop
push
jbe
add
dec
mov
test
aas
push
sbbb
cmp
mov
xlat
mov
test
iret
aam
lock
cltd
sbb
or
pop
movsl
sbb
ret
add
dec
stos
jecxz
jg
xchg
push
dec
setne
jb
fcomps
incl
fisubrl
in
and
ss
movsl
pop
or
fsubl
out
push
jmp
push
mov
push
insl
scas
sub
dec
pop
filds
pusha
mov
sub
xchg
mov
jb
jg
mov
dec
pop
pop
and
mov
mov
in
insb
loop
pop
xor
cmpsb
addb
test
push
out
dec
add
dec
shl
rdmsr
push
xchg
cmpb
push
aam
push
xchg
jg
idivl
jnp
and
mov
sbb
xchg
or
xor
cmpsl
lods
pusha
adcl
mov
push
and
mov
adc
mov
cmpb
jne
test
and
ret
xor
sarb
sbb
je
mov
fistps
je
xlat
in
fmull
xchg
or
fs
lods
div
shrb
jno
sbb
pop
dec
stos
mov
xchg
dec
jecxz
stc
scas
cmpsb
in
fisubl
and
pop
inc
rclb
jo
add
ljmp
data16
lcall
mov
pop
gs
dec
adc
mov
cwtl
stos
sub
jle
push
aas
mov
pushf
and
dec
outsb
jbe
gs
or
sub
fildl
push
mov
loop
out
jmp
add
loopne
jb
xchg
out
inc
mov
loop
push
pop
orb
notl
lcall
mov
leave
mov
adc
jg
ja
xchg
dec
test
mov
xchg
dec
ror
or
jp
mov
popa
and
mov
rcl
std
xor
cmp
cmp
add
psubsb
dec
lret
icebp
jne
mov
cmp
pop
fsubrs
cmp
xchg
or
or
mov
mov
or
aas
dec
add
lods
jecxz
xchg
mov
aas
jmp
add
pop
or
loopne
mov
imul
adc
loopne
iret
sbb
and
stos
cmc
sbb
std
out
icebp
fisubrl
xlat
idivl
icebp
and
mov
out
das
loop
out
fimuls
cmp
scas
lea
call
mov
imul
mov
push
mov
jmp
pop
clc
or
push
mov
xor
sahf
push
imul
rcll
cld
pop
xor
jne
lds
jge
mov
inc
ljmp
add
jp
push
jns
mov
or
xchg
add
fildl
rorl
pop
in
ret
addr16
mov
arpl
sti
pop
mov
stos
clc
xchg
stos
cmp
les
mov
push
push
sbb
jecxz
mov
xchg
push
sbb
sub
lods
mov
bound
jl
shll
jb
addl
shrb
sub
sub
fwait
pop
sub
lret
pop
sub
mov
vsubps
dec
ss
mov
bound
pop
sbb
lods
gs
xchg
or
inc
repz
sbb
xchg
ljmp
out
xor
add
stc
lods
mov
das
mov
mov
or
push
jge
and
xchg
in
rorl
and
cmp
clc
push
cmp
ja
xchg
cmp
cmp
xor
fnstsw
cmpsb
clc
adc
movsl
cltd
test
dec
or
lahf
pop
xor
cmpsb
mov
sub
mov
jle
fs
jno
push
dec
pop
adc
je
es
inc
and
cmp
pop
xchg
push
mov
fimull
mov
aaa
xchg
iret
xchg
repz
push
sub
movsb
loop
outsl
add
aas
push
jb
add
adc
repz
adc
in
sbb
sbb
rorb
sti
push
sbb
in
in
inc
aad
jae
pop
fsubrs
sahf
inc
mov
ror
xor
or
push
inc
cmp
mov
dec
nop
cltd
xor
popf
adc
cld
mov
or
inc
test
fstps
rcl
adcl
mov
xchg
mov
sbb
inc
bound
mov
mov
loope
jnp
inc
in
call
bound
mov
adc
es
daa
ror
fs
test
lret
out
mov
lret
inc
or
aas
push
mov
fwait
xor
push
fnstenv
mov
je
sbb
mov
add
sbb
fadds
pop
sti
adc
push
and
imul
and
test
std
mov
incl
stc
mov
pusha
stos
out
lret
les
lcall
ljmp
popl
add
inc
inc
and
cmpsl
jo
adc
aaa
or
stos
or
loopne
jl
lds
cmc
push
or
test
xchg
out
jmp
jl
test
hlt
repnz
dec
dec
cmp
daa
sahf
jns
es
jnp
jg
mov
dec
test
push
test
les
jno
jp
movsl
js
and
test
outsl
loope
bound
sub
sbbl
dec
loop
pop
mov
xor
imul
dec
push
sbb
mov
sbb
sbb
inc
cmc
aaa
or
mov
les
test
sub
and
jbe
jp
sbb
mov
cld
dec
pop
push
mov
fadd
push
push
lock
adc
das
xor
cltd
cmpb
nop
repnz
add
push
cmpsb
cmpsl
rclb
testb
pop
addr16
add
xor
cmc
add
xchg
incl
push
std
adc
js
pusha
jnp
fdivrs
sub
cmp
adc
push
and
pop
out
xchg
sahf
sbb
aam
dec
push
flds
lods
scas
cmc
sbb
popa
cwtl
sub
sub
into
mov
in
xor
jb
mov
xchg
gs
popf
adc
or
mov
mov
mov
inc
shlb
aaa
jmp
xchg
out
cmp
enter
cmp
jl
xor
cs
cltd
inc
andl
mov
mov
enter
incb
mov
scas
ljmp
xor
lods
mov
sarl
das
imul
adc
movsl
lcall
jp
mov
inc
and
insl
mov
pusha
pushf
loop
mov
and
xor
roll
std
mov
sub
movsl
sahf
mov
insl
mov
arpl
pushf
std
xchg
cs
mov
out
add
push
mov
sub
jecxz
cmc
aas
dec
out
enter
push
jge
iret
xlat
push
or
popf
cmp
test
mov
insb
sahf
add
xchg
xor
rcrb
inc
push
adc
aad
inc
bound
lods
adc
mov
sub
addr16
das
push
test
push
into
das
das
or
push
pop
pop
pop
fmuls
mov
popa
stos
loopne
mov
push
push
je
push
jge
jno
sahf
popa
pop
jp
es
push
loopne
and
cmp
add
stos
loop
aad
fstpt
int3
call
addr16
pop
jne
dec
push
clc
xor
xor
dec
and
sub
add
sub
pop
scas
mulb
push
add
dec
ds
cmp
int
fdivr
cmp
inc
push
in
sbb
mov
mov
dec
sarl
mov
imul
cmp
inc
das
fwait
mov
and
add
cld
frstor
lea
mov
insl
xchg
pushf
ret
push
mov
test
add
jns
fwait
xor
loopne
test
inc
dec
test
outsb
sub
push
dec
adc
popa
call
jb
cmpb
out
clc
movsl
pushf
pop
jp
add
push
popa
frstor
pop
mov
notl
leave
lds
lahf
mov
sub
mov
mov
aaa
inc
divl
pop
imul
jp
or
mov
cli
outsl
xlat
jae
cmp
push
int3
imul
dec
pop
mov
jne
rol
jle
mov
lock
xchg
mov
lcall
inc
call
xchg
push
inc
cmp
fistpll
icebp
popa
aad
push
psubd
shl
das
dec
scas
mov
ret
inc
mov
out
int3
es
mov
cmc
or
movsb
mov
dec
fidivl
add
out
aas
loope
dec
aad
adc
out
sbb
shrb
mov
test
cli
out
cmpsl
xchg
pop
nop
mov
pop
sub
int3
in
push
dec
sahf
fistl
mov
stos
mov
jne
les
push
icebp
nop
add
mov
push
movl
repz
aas
test
out
cmp
sub
pop
ss
aam
lock
mov
pop
test
jb
xor
add
sbb
fldenv
jle
dec
dec
push
pop
ja
scas
shrl
lods
std
jo
inc
and
pop
cmc
test
inc
xor
cmpsl
sub
hlt
xor
pushf
xchg
jne
nop
out
pop
adc
push
jae
scas
loopne
pop
orb
mov
jp
inc
lock
imul
cwtl
movsb
pop
pop
xchg
scas
mov
push
mov
mov
inc
jae
ljmp
popa
pop
out
add
inc
xorl
mov
imul
or
scas
xchg
daa
pop
add
ret
adc
fs
imul
addr16
xorb
popf
xor
loope
xchg
mov
dec
mov
or
daa
inc
into
sbb
or
pop
push
dec
lods
and
ret
loopne
pop
pop
ds
lds
mov
jecxz
push
push
sub
or
add
add
xchg
mov
cli
mov
or
inc
in
out
lods
mov
in
enter
xchg
inc
pushf
inc
jg
sbb
cmpsb
testb
ds
or
cmp
mov
sbb
incl
lea
cmp
xchg
arpl
in
xor
or
xchg
ficompl
or
addr16
cmp
repz
dec
pushf
push
dec
repnz
push
inc
nop
sbb
test
pop
in
pop
adc
test
add
jle
jge
add
add
loop
xchg
dec
push
mov
cld
leave
lds
jne
leave
loope
pop
mov
mov
xchg
add
mov
and
scas
xor
jo
mov
into
lret
pop
mov
push
cltd
pop
add
pop
rcll
outsl
icebp
dec
call
jmp
mov
loope
sbb
lods
inc
jg
pop
js,pn
insl
inc
outsb
jo
cmp
mov
jb
cmpsb
xchg
cmp
xchg
shrl
cwtl
ror
push
sub
adc
and
movsb
inc
scas
lahf
pop
cmc
pop
sbb
sti
sub
mov
shrb
cmc
or
dec
sub
mov
call
mov
popa
lahf
adc
lahf
push
add
scas
outsl
and
in
jbe
add
popa
mov
lret
jmp
in
into
and
sub
jb
leave
mov
push
push
jno
imul
arpl
shlb
push
and
cwtl
mov
shll
inc
sarb
jnp
or
adc
sub
ss
xor
mov
adc
fsubrl
mov
sub
fucom
in
xor
pop
insb
mov
push
or
push
pop
pusha
xor
mov
in
into
inc
fcompl
or
in
addr16
or
mov
addr16
jne
adc
cld
hlt
roll
add
or
jge
xor
or
pop
push
outsb
mov
mov
pop
aam
ret
adc
push
cmp
iret
nop
mov
jg
add
cmp
mov
or
jecxz
xchg
mov
out
or
loop
call
ja
std
pop
fsubrp
out
mov
jle
and
xchg
lahf
aam
in
xchg
loop
jns
addr16
adc
mov
outsl
xchg
repnz
inc
test
xchg
jnp
in
jge
lret
in
pusha
sbb
adc
aam
pop
test
mov
and
inc
sbb
dec
inc
and
mov
leave
push
adc
test
cmp
sub
add
jmp
cwtl
adc
sbb
pushf
xchg
stc
or
ljmp
mov
in
call
cli
xorl
add
inc
ret
pop
insl
mov
mov
mov
aaa
cwtl
repz
xor
dec
data16
jb
mov
adcb
push
or
mov
pop
repnz
xlat
xor
and
adc
xor
mov
jmp
jg
adc
popf
pusha
inc
iret
pushf
sahf
jmp
out
pop
das
inc
cltd
xchg
icebp
in
and
lods
cmp
cs
movsb
pushl
sbb
mov
mov
fptan
popa
mov
nop
movsl
inc
adc
add
mov
inc
xor
push
push
mov
call
mov
pop
lea
ljmp
movsb
push
frstor
dec
ss
push
jge
mov
movsl
xchg
lods
daa
outsl
add
or
or
lods
jne
test
mov
and
push
jnp
push
out
in
xchg
jbe
sub
orb
or
aaa
and
movsl
das
jb
outsb
sbb
cmpsl
shll
push
sub
sbb
cmp
mov
fldl
mov
test
inc
jmp
xchg
push
push
test
movsb
inc
mov
and
out
test
sub
fs
xor
cmp
mov
ds
mov
jnp
or
jb
jl
adc
in
mov
pop
xchg
daa
xchg
mov
mov
push
add
push
add
mov
xchg
push
cmp
aad
adc
xchg
mov
cmp
movsb
adc
jno
sub
push
cld
popw
mov
mov
adc
mov
adc
cmp
add
sbb
in
inc
btc
jle
push
jno
sahf
idivl
jmp
in
push
add
and
mov
mov
jo
jb
std
cmp
or
pushf
sub
fcompp
push
push
movsl
jg
xchg
ret
and
and
pop
pop
psraw
pop
xchg
aam
bound
arpl
dec
pushf
aaa
idiv
mov
out
or
xchg
cmp
shrl
push
divb
in
jmp
adc
sbb
insb
ss
aas
adc
imul
push
adc
sbb
sub
ljmp
lret
stc
aaa
add
jo
mov
leave
mov
or
mov
stc
inc
jecxz
lret
into
sbb
hlt
icebp
adc
in
sbb
cmc
xor
sub
jecxz
ljmp
mov
mov
push
xchg
push
mov
sub
in
pop
repnz
lock
jge
in
jnp
inc
adc
xor
cmpsb
mov
xchg
lods
push
aam
add
adc
push
bound
pop
xorl
aam
popf
es
mov
adc
fdivs
mov
lds
inc
js
mov
mov
fdivs
pusha
repnz
pop
xor
mov
test
test
and
loopne
push
xlat
mov
fnstsw
push
ja
push
cli
mov
sub
cmp
movsb
or
and
in
cmp
add
mov
dec
sub
xchg
icebp
movsb
xor
clc
xor
fucom
and
outsl
push
adc
fdivl
push
and
in
and
jl,pt
gs
jae
rclb
cmp
mov
enter
rclb
loope
mov
push
aad
adc
mov
pop
repnz
push
test
aam
cwtl
push
sub
jmp
fcmovbe
fists
and
fadd
xchg
dec
shll
fidivs
sbb
inc
inc
sbb
mov
cwtl
sub
push
pop
loope
in
push
lahf
dec
push
bound
pop
scas
or
data16
cld
loop
mov
adc
cmpsb
sub
cli
lret
xchg
daa
loop
and
xor
inc
in
xor
fnsave
jb
rorl
or
inc
ds
sbb
adc
es
jne
stc
and
adc
push
scas
add
pop
out
pop
loopne
insb
lcall
jge
and
xlat
imul
mov
add
push
mov
pop
xor
jbe
and
jne
mov
pop
xor
ret
arpl
adc
mov
in
xchg
clc
or
clc
dec
pop
cmp
out
or
jmp
and
repz
or
adc
daa
add
push
dec
pop
ds
es
out
jbe
mov
mov
call
in
mov
outsb
mov
lea
shlb
jb
enter
and
loopne
mov
sbb
ret
insb
add
xchg
notl
sub
cld
or
fs
test
push
dec
cmpb
pop
or
int
inc
xchg
hlt
pop
jp
test
ret
sbb
lea
pop
mov
push
cli
data16
xchg
mov
push
mov
mov
fadds
mov
pop
ss
fdiv
repz
and
mov
div
and
aam
dec
ficomps
pop
and
out
pushf
sbb
pop
xchg
inc
xor
popa
mov
push
or
pop
mov
ret
sub
test
pop
jb
cmp
fmull
stos
mov
fs
ja
setp
sub
inc
cmp
aas
stc
xor
stos
mov
add
sahf
pop
mov
std
fisttpll
and
mov
mov
xchg
cwtl
cld
add
sti
xchg
push
dec
aas
jbe
mov
jecxz
inc
cli
fldt
inc
aad
and
int3
lahf
loopne
ja
add
pop
stos
xor
push
push
jmp
sub
pop
icebp
mov
mov
jb
sub
push
pop
jae
push
sbb
popa
cld
push
jns
hlt
push
or
fnsave
cmc
outsl
pop
daa
ss
cmp
inc
inc
ficoml
xchg
sub
popf
jmp
orl
or
xor
arpl
inc
mov
in
fcoms
or
jecxz
xor
xchg
ljmp
push
mov
dec
jg
xchg
out
pusha
mov
test
out
xor
cli
pop
adc
push
sub
pop
int
lds
push
xchg
arpl
sbb
scas
jae
push
jecxz
loopne
not
js
dec
jno
rcl
jne
aas
or
test
test
lcall
bnd
pushf
xchg
xor
mov
fistpl
imul
push
and
cs
ret
inc
ja
and
inc
push
jg
sbb
pextrw
xchg
jo
adc
call
push
pop
mov
call
add
add
jae
cltd
lcall
adc
push
sti
fidivrs
scas
movsl
ss
loope
in
lock
bswap
pusha
cmp
or
push
push
xor
in
add
std
outsb
inc
cltd
jb
sbb
loop
push
jnp
push
and
push
dec
cmpl
movsl
xlat
adc
push
add
mov
test
mov
out
jle
inc
mov
enter
sub
and
jb
inc
ljmp
lods
cmp
sbb
xor
push
repnz
push
sub
mov
aas
ret
or
xchg
add
notb
imul
int
sub
mov
mov
lock
leave
or
add
pop
aas
push
push
fwait
xor
pop
ja
in
test
sbb
pop
sbb
xchg
lods
inc
pop
das
and
jge
testb
jl
pop
or
mov
icebp
dec
movsb
pop
clc
in
xor
xor
xchg
mov
leave
rcll
pop
pop
stc
jge
xor
xor
int
imul
ret
jg
jp
mov
in
or
cmp
cld
iret
mov
into
push
cltd
mov
dec
mov
mov
scas
add
push
or
bound
mov
sub
xor
in
das
jb
mov
and
leave
mov
dec
loop
shlb
sbb
das
cmpb
mov
fistpll
or
pop
loope
jns
jnp
fisubl
mov
mov
cmp
loopne
xor
and
cmp
lea
push
pop
std
out
inc
lea
cmc
ja
jl
out
pop
dec
nop
imul
push
mov
les
int
ret
loopne
or
pop
stc
adc
mov
pop
popf
cmp
jmp
or
dec
lret
xchg
sub
sti
and
repnz
cltd
stc
jbe
stos
ds
jge
push
cmp
into
mov
cmc
dec
les
arpl
jle
mov
dec
push
bound
movsl
pop
loopne
or
stos
fdivs
cltd
xchg
into
xchg
movsb
testl
push
xchg
loope
push
lahf
pop
jno
test
icebp
test
or
int3
ret
inc
jge
ret
call
dec
pop
or
cwtl
sub
scas
cmpl
mov
aaa
jmp
mov
pusha
lret
aas
std
icebp
lret
and
lea
xchg
xor
lock
pop
in
inc
pop
shlb
xchg
fisubs
repz
mov
aaa
jecxz
ljmp
sub
mov
cmp
jns,pn
sub
mov
mov
loop
mov
xlat
scas
jg
mov
mov
jb
das
into
jae
test
out
cmc
outsl
loopne
daa
loope
scas
and
sti
adc
pop
lea
js
je
xchg
mov
push
or
cmp
xor
xchg
mov
fsubs
jno
bound
lods
movsl
pop
cmp
data16
loope
in
sub
decb
jb
push
movsl
sub
inc
aaa
hlt
lret
stc
jle
cltd
pop
adc
sbb
stos
mov
cli
cld
fcompl
dec
int3
add
add
outsb
mov
repz
jle
out
stos
call
push
and
cwtl
andl
dec
sbb
dec
ja
push
xchg
cmp
xchg
test
call
pop
mov
add
jl
mov
rcrl
push
mov
jb
leave
mov
jle
notl
loope
add
pop
rolb
imul
and
adc
cltd
xlat
cmp
insl
psrlw
movb
les
dec
jo,pt
jp
call
movsb
mov
ja
xlat
shlb
in
lock
sub
cmp
lahf
mov
fsubs
in
pop
shlb
mull
lcall
fcompl
aas
movsb
cmp
stos
pop
jecxz
fcompl
pop
test
es
mov
adc
popa
cmp
stos
mov
push
jmp
add
imul
jg
sahf
shrb
jg,pt
push
mov
pop
aam
inc
jl
subb
popa
xchg
sbbl
mov
mov
push
mov
xorl
pop
test
outsl
loope
mov
or
lcall
mov
stc
cmp
add
jle
mov
movsl
push
dec
test
push
xlat
mov
jl
rcr
hlt
add
shrl
mov
rorb
or
cmp
mov
mov
stos
js
xchg
ds
scas
out
xor
roll
xor
and
xlat
jne
mov
mov
cmp
or
inc
fcoml
and
sbb
aam
cmpsb
jle
sbb
addb
fimull
sti
inc
mov
leave
push
sti
arpl
stc
aad
push
mov
jne
push
cmpl
add
shll
inc
rol
sub
jge
addr16
inc
sub
fidivl
orb
jae
ljmp
jl
adc
cmc
aam
addr16
mov
ret
and
push
aas
mov
lret
out
pop
mov
sub
jecxz
mov
stos
xor
test
insl
pop
add
out
dec
rorb
mov
sub
dec
and
insb
movsb
sub
lret
ds
add
or
repz
dec
add
outsb
cmpsl
push
mov
popa
cmpsb
leave
addr16
dec
push
test
lcall
cmpsb
add
mov
xchg
sbb
jns
xor
add
or
daa
loope
mov
and
scas
rolb
adc
je
pop
push
mov
fstl
fisubs
btr
mov
xchg
cmp
outsl
adc
jns
in
cmpb
insb
jne
push
hlt
andb
jg
lods
daa
insb
outsb
ljmp
imul
lea
daa
xchg
and
pop
outsl
mov
iret
cmp
outsb
into
push
jle
mov
addr16
xchg
aas
flds
loop
aam
xor
sub
pop
imul
fildll
sub
xchg
or
xor
loopne
or
scas
xor
xor
lahf
out
mov
dec
sbb
andl
fdivp
imul
dec
sub
xor
ror
pop
ljmp
pop
std
add
cltd
repz
stc
in
pop
cmp
adc
cltd
call
mov
nop
repz
xchg
jno
fbld
enter
outsb
mov
cmp
fwait
mov
inc
mov
lea
mov
dec
sti
push
rorb
pop
jle
pop
iret
ja
add
xchg
mov
jnp
mov
dec
nop
and
stos
adc
adcb
shl
xchg
into
mov
cli
jb
xchg
adc
dec
inc
mov
sub
sbb
dec
push
add
dec
and
add
and
pop
mov
dec
sub
or
popf
stos
mov
rolb
popa
mov
xchg
insb
jmp
adcb
adc
inc
call
outsl
adc
mov
xor
fdivrp
js
push
mov
sahf
inc
int
sti
push
rorl
dec
orb
js
sti
push
adc
sbb
aas
loopne
xchg
imulb
push
lds
dec
add
mov
andl
dec
mov
mov
push
pop
mov
into
int
mov
pushf
and
sbb
mov
stos
daa
div
pop
in
aad
mov
inc
rcrb
jne
pop
mov
push
scas
push
mov
aam
push
test
insl
cmc
xor
in
rolb
in
mov
xor
lcall
and
arpl
sarl
outsb
adc
ss
aam
cmp
xchg
ds
or
inc
mul
in
push
adc
push
add
out
mov
and
fildll
jnp
clc
rol
xchg
fiadds
pop
mov
fs
pop
add
cmp
je
in
push
fs
jb
std
or
in
or
push
cmp
shlb
leave
push
xor
xor
repnz
fmull
icebp
repnz
fsubl
test
movsb
or
imul
or
jae
adcl
xchg
or
sub
xchg
sbb
adc
jb
dec
enter
dec
xor
cmp
xchg
or
mulb
push
pop
adc
jae
out
js
call
dec
jmp
push
push
ljmp
inc
cmp
pop
dec
mov
mov
cmp
dec
lcall
scas
pop
dec
mov
mov
std
or
cmp
out
push
push
sub
cli
sbb
jbe
push
xchg
cmp
mov
iret
scas
push
cmp
fnstenv
sub
or
adc
pop
fwait
adc
mov
outsb
or
sub
test
cmpsb
or
xor
mov
dec
pop
pop
mov
lds
xor
subb
iret
add
fcompl
xor
lret
xchg
pop
fdivrs
in
or
mov
adc
cmpsl
scas
loope
and
fsts
bound
sub
or
sub
fwait
sbb
fildll
and
inc
std
and
push
push
jecxz
or
pop
mov
test
insb
cwtl
leave
dec
push
ljmp
aad
push
fildll
adc
outsb
shl
aad
cmp
jle
mov
pop
sbb
adc
pop
or
fistpl
sbb
push
cltd
pop
pop
stc
jo
pop
add
pop
lea
xchg
inc
cmp
pop
xor
in
les
mov
rorb
out
in
push
xchg
loopne
dec
int
xchg
ficomps
scas
jno
out
loop
dec
out
ds
loop
mov
pop
jle
stos
lret
xchg
cli
pop
lds
repnz
mov
aaa
sub
mov
bound
dec
test
cmpb
fwait
mov
pop
inc
call
adc
jno
adc
xor
push
xor
push
ret
xchg
ljmp
nop
mov
call
and
mov
inc
pop
outsl
pop
scas
in
insl
inc
xor
adc
or
sysret
jno
adc
inc
ja
notb
movb
inc
mov
jne
xor
outsb
sbbb
dec
jp
mov
dec
mov
mov
mov
scas
sbb
lahf
add
sub
adc
int
jae
pop
mov
adc
insb
lret
push
incb
add
paddsb
aam
test
gs
insl
iret
sahf
roll
bound
push
out
push
cld
inc
ja
jle
adc
mov
pop
mov
add
aam
cmovnp
mov
outsl
pop
jo
test
test
pop
test
pusha
push
adc
notl
rep
push
and
aam
es
jle
jg
xchg
iret
push
int3
xchg
sbb
popf
lret
pop
fldl
jno
ja
sarl
out
mov
nop
addr16
scas
push
das
ret
cmp
lds
sbb
fwait
push
pop
or
sbb
pop
mov
pop
xchg
fidivrs
shlb
rep
dec
push
ljmp
cmp
imul
jns
adc
mov
outsl
pop
jno
not
pusha
stos
pop
repnz
sbb
test
push
loope
inc
sbb
adc
cmp
aas
mov
xchg
fcmovnu
jne
inc
xor
and
cs
or
sub
les
das
bound
addr16
mov
lea
xchg
mov
dec
add
mov
mov
cmp
jb
popf
cmc
fistl
repz
test
test
xorb
xchg
addr16
mov
sub
pop
jg
jecxz
inc
test
movsl
and
fdivl
xchg
sahf
sbb
and
repnz
push
jne
dec
jp
js
test
out
inc
call
ret
incb
add
ss
sbb
aaa
adc
add
icebp
sub
jb
xor
cmp
or
jp
sbb
xor
sbb
push
test
shlb
jno
pop
ja
dec
cmp
shlb
mov
push
mov
xor
repz
xchg
in
mov
jnp
dec
das
mov
pop
push
in
orl
cltd
xor
push
cli
mov
jbe
pop
add
mov
dec
xchg
pop
mov
add
mov
mov
outsl
cltd
leave
jp
rolb
mov
ljmp
sub
test
jecxz
mov
ret
pop
push
xorb
xlat
push
dec
in
mov
mov
mov
mov
xchg
sbb
xchg
in
insl
sbb
cmp
push
push
movsb
fnstsw
dec
cmp
call
sub
dec
subl
fwait
shrl
ss
dec
into
test
addl
jb
stc
jns
inc
push
sbb
mov
scas
jl
or
jns
cs
stos
sti
leave
jne
scas
shll
dec
ret
and
inc
callw
dec
stos
jno
cli
ds
fwait
pop
loopne
or
in
jo
xchg
pop
xor
mov
sbb
inc
enter
jno
xorb
insl
mov
push
scas
sahf
dec
push
jl
mov
xor
pop
or
test
lret
data16
stos
pop
push
mov
or
int
pop
cld
ss
jmp
jb
mov
add
xor
mov
pop
adc
leave
jne
mov
pop
inc
int
imul
mov
scas
call
sahf
and
sbb
jns
pop
add
in
iret
cmpb
jns
push
xor
mov
pop
push
push
pop
push
mov
xor
pop
sahf
mov
push
outsl
pop
mov
xchg
mov
and
add
into
mov
je
addr16
add
dec
in
scas
mov
stc
movsl
jno
cmp
fcmovnbe
pop
lock
mov
push
lahf
pop
dec
fstpt
cmp
jmp
jo
or
aaa
xor
sbb
xor
xlat
xor
sbbb
sbb
add
mov
sub
in
jo
cmp
mov
stos
cmpsb
pop
sbb
push
dec
int3
xchg
arpl
cmp
and
xchg
hlt
lods
es
lock
movsl
lock
jnp
inc
xchg
mov
pop
lock
aas
clc
and
xlat
in
pop
lret
jl
mov
ljmp
cltd
sbb
ds
jge
dec
icebp
push
or
mov
inc
mov
fidivrl
mov
pusha
pop
inc
into
enter
pop
pop
xlat
adc
sbbb
add
xor
ret
aad
in
lods
and
or
js
addr16
or
push
dec
icebp
int3
jge
loopne
mov
sub
mov
push
xchg
mov
cld
or
mov
mov
test
mov
daa
loope
ret
test
mov
jns
repnz
into
mov
ds
add
lds
fdivs
xchg
lds
fsubrl
mov
arpl
std
imul
cmp
stc
or
popa
mov
and
and
shlb
pop
xchg
inc
jg
shlb
test
mov
xor
xchg
xchg
es
cwtl
mov
adc
mov
xor
xor
xchg
push
push
ja
pop
leave
and
or
insl
mov
lcall
inc
insb
cmp
dec
pushf
jmp
or
inc
cs
sti
mov
sar
push
mov
mov
inc
xchg
lret
movzwl
pop
xor
outsb
in
jne
adc
add
inc
push
in
jmp
pop
xor
popa
pop
mov
popa
and
xorl
adcb
sub
xor
pop
outsb
inc
xor
jbe
cmpsl
lret
shl
inc
adc
loope
out
xchg
fdivs
sbb
in
fdivrl
or
adc
stos
rcrl
imul
mov
pop
xchg
popf
ret
mov
in
inc
mov
hlt
call
pop
jns
pop
mov
and
outsl
add
cltd
into
xchg
daa
cmpsb
jmp
jb
movsb
pop
call
push
fstps
es
in
dec
lods
lea
mov
shl
xor
jp
loop
cmc
aas
repnz
or
cmpb
lods
mov
xchg
inc
xchg
stos
push
nop
inc
xor
sub
xchg
jns
decb
push
arpl
ja
test
imul
xor
imul
sub
push
mov
and
xchg
inc
mov
xlat
push
test
fiadds
test
push
fists
scas
rcll
sbb
outsl
movsl
imul
sarb
hlt
fists
add
add
in
nop
sub
mov
dec
xchg
loopne
push
inc
cli
das
pop
mov
pusha
jb
xor
iret
mov
cmp
pushl
out
pop
xchg
sbbb
addb
das
enter
ret
sbb
push
mov
cmpb
xchg
arpl
adcb
aam
mov
rolb
gs
test
adc
push
pop
mov
xlat
loop
ss
inc
mov
lods
stc
inc
sbb
rorl
out
or
test
cmp
test
rcll
stos
mov
add
lods
loope
add
xchg
les
data16
into
mov
adc
xor
lahf
mov
jbe
sbb
pop
testl
mov
xchg
in
sarb
cmp
outsl
cmp
and
bound
adc
rorl
sahf
movsl
stc
xchg
in
loop
jecxz
lcall
jns
xor
push
enter
mov
ljmp
repz
dec
leave
aaa
add
xchg
lcall
imulb
pop
cmc
xor
mov
in
in
rcrb
sti
jne
subl
imul
mov
mov
fidivrl
iret
in
rcrl
ret
ret
sarl
das
lods
in
mov
add
pop
sbbb
repz
rolb
pop
or
dec
je
xlat
lock
mov
mov
inc
scas
outsl
enter
popa
mov
ss
dec
jl
pop
cmp
pop
and
ja
cmpsl
or
out
mov
arpl
cmpsl
cld
leave
stos
mov
dec
cli
out
addl
xchg
aam
xlat
sub
pop
pop
lret
repnz
cmp
mov
mov
shll
ffree
jge
dec
loop
imul
int
mov
cmp
mov
cmp
in
rcll
inc
sahf
fldenv
mov
call
and
sub
xchg
out
leave
fdivrs
xor
dec
cmp
or
xchg
lcall
add
lea
call
rclb
push
mov
mov
lea
mov
lcall
in
lret
sbb
ret
cmpb
movsbw
jecxz
mov
adc
sbb
pop
ja
std
mov
fnstcw
xchg
ljmp
xor
andl
mov
push
mov
rcrl
or
lock
js
outsb
rep
add
xchg
sbb
sbb
data16
cmp
or
jno,pn
inc
inc
pop
fwait
inc
in
sbb
push
sarb
jb
mov
ret
dec
pop
jb
in
andb
dec
mov
sti
push
shrb
pop
aas
jno
mov
add
ja
xchg
pushf
icebp
rclb
pop
in
cld
mov
xchg
mov
jmp
gs
test
dec
mov
pop
testl
jne
xchg
push
arpl
mov
loopne
xchg
sbb
fdivl
scas
mov
es
outsb
iret
sub
lods
and
in
dec
mov
cmp
jecxz
ret
sti
xor
das
je
mov
jno
stos
xchg
arpl
mov
lods
pop
dec
mov
fisttps
ret
push
aas
mov
mov
mov
sarb
lret
insb
or
dec
jle
hlt
div
jbe
orb
mov
sub
mov
or
cmpsl
mov
shrb
mov
cmp
mov
insb
lcall
jns
push
xchg
jmp
inc
jl
test
xchg
test
jle
jo
cmp
cmp
fldz
jae
fnstcw
jmp
add
imul
lods
movsl
mov
into
sbb
mov
ror
repz
mov
paddsb
adc
push
imul
stos
rol
xchg
pop
fiaddl
push
cmp
cmpsl
dec
fsubrl
fsubl
xor
inc
inc
add
gs
pop
cmpsb
sbb
xchg
fwait
jg
xor
fisttpl
ja
add
push
jno
rol
pop
mov
inc
out
push
movsb
in
xchg
xor
mov
cli
loope
stos
aas
int
jmp
mov
cmp
nop
les
loope
push
cmp
push
imul
or
lock
mov
int3
ss
add
add
jp
rclb
xor
sahf
call
shl
adc
xchg
xor
sub
sbb
adc
xlat
pop
dec
mov
sub
arpl
pop
fcoms
dec
div
push
sub
loopne
out
xor
adc
insb
movb
add
aam
fcmovnb
and
ja
js
sarb
pop
push
decb
test
fnstcw
loope
insl
xor
dec
xchg
jp
jno
xchg
movsb
fsubl
faddp
mov
pop
and
jle
es
dec
hlt
pop
mov
outsb
nop
dec
xchg
adc
loope
cwtl
pop
jne
add
and
fbld
jmp
ret
aam
cmp
cmp
lods
sbb
pop
jbe
mov
js
pusha
or
vmwrite
loopne
stos
sub
xchg
xchg
mov
and
dec
cld
pop
cmp
fnstsw
pop
jp
jbe
inc
xor
outsl
pop
mov
jae
mov
mov
push
iret
repz
adc
out
pop
lret
ss
and
leave
stos
cli
test
pop
les
pop
or
cltd
stos
push
movsb
lret
cmp
push
imul
out
sub
pop
fcomps
fisubrl
loope
aaa
cmc
inc
pop
mov
mov
insl
xor
call
sarb
sub
mov
test
push
lock
lcall
push
in
push
inc
mov
sub
jo
jecxz
mov
mov
cwtl
pop
sub
mov
xchg
xor
ficompl
ret
popa
cmp
icebp
inc
sarb
mov
jbe
jl
pop
icebp
inc
test
in
sbb
push
std
leave
jnp
add
jns
loop
cmc
mov
inc
cwtl
xor
mov
inc
enter
cmpsb
aam
mov
mov
bound
aas
shrb
lods
and
pusha
sbb
sahf
pop
sub
jecxz
sbb
adc
dec
insl
daa
mov
sbbb
lret
adc
je
push
call
mov
insl
xchg
or
jbe
jne
lret
scas
push
fisttpll
add
ficoml
mov
call
aad
mov
fsubs
xor
popa
pop
sbb
and
addr16
stc
jbe
mov
jns
cwtl
or
inc
inc
cmp
int
sbb
jmp
pushf
jae,pn
loop
dec
enter
addr16
and
xor
aas
pushf
into
cwtl
inc
shll
push
pop
cmp
aas
pop
int3
xor
js
pop
inc
lret
or
add
gs
out
xor
movl
cld
add
lods
push
push
sub
daa
and
js
jns
mov
cwtl
sar
jns
lds
and
cli
sti
jl
popf
xor
or
cmp
imul
icebp
aas
call
or
dec
mov
fwait
pusha
je
xor
subb
push
imul
sbb
out
xlat
cmp
adc
or
int3
lcall
mov
xchg
imul
les
sarl
lds
fwait
loope
sti
cmp
inc
test
test
fwait
xor
add
subb
sbb
shr
test
subl
adc
out
push
ret
and
xor
mov
inc
inc
add
clc
imul
inc
imul
add
insl
lcall
jae
mov
icebp
inc
into
fs
mov
xor
xorb
inc
mov
scas
test
mov
mov
adc
jb
imul
or
test
in
arpl
fcoms
ret
and
pop
stc
and
pop
ljmp
test
in
sbb
pushf
rcrb
lcall
add
jns
mov
push
mov
fcmovnbe
adc
jmp
sbb
fisubrs
inc
jl
sbb
push
dec
popl
adc
inc
and
rorb
sbb
xchg
mov
push
mov
pop
or
dec
mov
push
sub
das
and
xchg
pop
loope
sbb
mov
loope
xor
lcall
scas
and
pop
mov
xchg
sti
adc
ret
inc
push
inc
and
fimuls
and
repnz
dec
aaa
jno
push
sub
pop
lds
daa
call
clc
or
flds
movb
fwait
and
test
ret
jb
xchg
scas
mov
outsl
aam
lret
mov
test
ret
push
jbe
mov
jbe
js
test
fisttpll
ljmp
push
push
shll
lds
mov
in
das
xor
sbb
mov
adc
push
lods
call
fisubrs
shl
mov
sub
mov
mov
sub
jmp
sti
jo
sbb
lret
out
rorl
mov
in
aad
popf
sub
inc
push
mov
ss
mov
inc
shlb
mov
sti
fsubrl
mov
cli
jne
lods
jmp
add
mov
cmp
in
adc
inc
sbb
subl
cmc
pop
insb
fnstsw
sbb
int
mov
pop
lret
push
or
mov
dec
les
jmp
in
test
push
sti
cli
and
lods
mov
sub
sbb
xchg
xchg
sarl
movsl
mov
icebp
jecxz
enter
push
fsubs
push
repnz
rclb
jge
ss
mov
call
adc
sarb
pushf
jmp
out
movb
dec
jmp
sahf
lods
pop
ror
scas
push
imulb
sti
dec
cmpsb
dec
fs
push
mov
test
mov
and
mov
pop
mov
lods
and
sbb
xor
aad
and
mov
in
lds
mov
jb
xchg
movsb
int3
gs
push
movsb
xor
dec
xchg
aam
sub
scas
lea
fisubl
xchg
test
nop
push
mov
nop
lahf
add
cmpl
lods
cmovo
xor
insb
das
sahf
out
pop
pop
jg
imul
and
les
or
jns
addr16
mov
mov
or
mov
and
shll
adc
xor
sti
sbb
js
fisubl
xlat
mov
aam
rorb
mov
push
xchg
lods
xor
pop
sub
pusha
or
frstor
mov
lods
scas
neg
stos
fs
je
sub
dec
loope
adc
aaa
mov
mov
ret
hlt
jl
inc
hlt
fildll
push
push
fimull
jnp
ret
jmp
ljmp
jns
jecxz
dec
in
cmp
mov
pop
leave
mov
imul
mull
dec
out
data16
subl
sbb
inc
sub
or
sarb
jmp
movb
jne
rol
jmp
gs
das
inc
jns
movsl
cltd
add
movsb
push
cld
mov
addb
data16
aas
jmp
push
dec
leave
aam
lcall
call
sbb
inc
and
dec
xchg
inc
stc
faddl
dec
test
xlat
pop
lret
jbe
test
adc
xor
xor
dec
jae
sbb
pop
jnp
cmp
mov
adc
outsl
lahf
and
adc
adc
fisttps
pop
push
sbb
mov
jge
dec
cwtl
das
sub
add
dec
mov
fimull
shr
dec
movsl
cmp
fmuls
les
mov
fs
cmpb
pop
jo
jns
pop
xchg
mov
or
adc
lods
enter
es
jmp
push
cmpsl
test
pop
call
scas
jmp
add
dec
xchg
lcall
sbb
dec
jle
mov
mov
cmp
mov
inc
sub
stc
mov
push
sbb
mov
dec
pop
ret
or
add
loope
cmpsl
add
add
repnz
fs
xor
test
sahf
fdivl
rorb
pop
insl
inc
dec
fld
aad
enter
xchg
mov
mov
pop
das
pusha
inc
mov
or
xchg
jge
mov
sbb
jp
xchg
pop
or
outsl
add
ja
pop
jae
daa
inc
clc
mov
inc
clc
insl
cmp
sbb
pusha
jno
rcrb
pop
xlat
jbe
pop
mov
fnstenv
xchg
jl
movsb
scas
std
ficoml
cmp
push
xchg
jmp
jns
inc
ret
das
dec
pop
sub
mov
sbb
xchg
in
jo
out
adc
sbb
add
in
ret
pop
dec
sub
bound
int
inc
xchg
mull
mov
ficompl
rol
cmpsl
test
mov
fs
cmp
sbb
test
in
test
jmp
clc
push
das
into
dec
jle
xchg
jle
rorb
push
push
mov
outsl
push
mov
jmp
fisttpll
aam
inc
cmpsl
jg
fs
mov
iret
sbb
sub
xor
lret
mov
in
fcompl
and
jmp
dec
popl
cmp
cmp
jo
shrb
out
xchg
scas
lret
arpl
out
test
or
add
pop
sub
sbb
mov
orl
repz
gs
pop
popa
shlb
frstor
insl
cltd
outsl
push
jle
xor
mov
aas
lea
ret
rcll
jno
push
sbb
andb
jle
movsl
pop
sbb
orl
xor
sahf
xor
mov
fldenv
stos
jbe
mov
fisubs
or
or
mov
je
psrlw
jl
xchg
mov
stc
rorb
movsl
pop
icebp
pop
lds
adcb
xlat
loopne
aaa
pop
jge
xorb
ds
cmc
gs
rcll
xor
inc
jnp
loopne
stos
je
int3
push
push
jle
sbb
jns
sbb
aad
cmpsl
or
mov
fadd
insl
jns
mov
pop
stc
adc
xchg
flds
dec
add
repz
pop
and
push
roll
dec
mov
jo
adc
out
lcall
pop
lods
aas
jmp
mov
test
xor
iret
mov
outsl
inc
mov
or
mov
addr16
push
in
cli
sbb
jmp
jle
xchg
mov
jge
jp
ja
add
mov
sbb
clc
xor
lahf
add
cmp
loope
lods
or
pop
mov
push
or
inc
hlt
lahf
jno
arpl
cld
mov
pop
out
inc
push
sub
dec
pusha
cmp
shlb
xorb
inc
mov
ret
vandpd
incl
mov
jmp
jns
stos
dec
cmpsl
test
and
fisubs
test
int
js
ljmp
xor
cmpl
pushf
sub
jmp
inc
leave
lods
inc
fisubrs
pop
scas
mov
cltd
out
imul
sub
mov
ja
mov
dec
out
cmp
pop
loopne
clc
out
test
cmp
mov
cmpb
jno
int
or
rorb
ja
push
inc
push
inc
pop
cmp
cmp
call
rcl
scas
jmp
or
push
xor
nop
jle
pop
lret
mov
daa
outsb
or
jae
outsb
aam
add
lcall
sub
push
mov
jbe
pop
pop
and
je
xchg
fcomps
insb
and
cmp
ss
or
fimuls
mov
mov
ja
jbe
pop
leavew
sub
test
or
sbb
mov
add
cmp
fs
inc
jo
mov
aas
mov
xor
ljmp
mov
ret
lds
jecxz
enter
aad
fsubs
dec
test
outsb
pushf
and
scas
push
cs
dec
sbb
cld
mov
xor
push
lods
andb
leave
mov
add
lea
push
xor
addr16
jno
mov
dec
scas
cmp
ljmp
out
inc
dec
mov
shlb
dec
daa
add
ret
jmp
push
lods
popa
les
pop
add
add
sub
or
jns
cli
and
ret
ja
mov
mov
inc
add
xchg
cltd
add
mov
mov
jo
in
mov
imul
adc
inc
rclb
rcll
mov
aad
push
insl
add
popa
leave
insl
sbb
mov
push
daa
movsb
mov
mov
cmp
test
lods
cmc
imul
add
dec
movd
gs
inc
sarb
add
or
xorl
je
mov
jge
dec
jae
jge
andb
xchg
mov
movsl
xchg
pushf
adc
pushaw
pop
fsubrs
pop
and
int
xor
xlat
pop
in
out
cmp
inc
inc
add
pop
push
outsl
mov
mov
decb
push
int3
add
and
xor
xchg
fwait
xchg
les
hlt
xchg
dec
fdivs
fld
xor
test
pop
rcrl
imul
test
adc
test
push
push
and
in
psubusw
and
cmp
jle
stc
mov
lar
lods
add
insl
out
dec
push
add
xchg
fs
adc
sbb
mov
test
cmpsl
jp
and
jb
in
loop
call
jecxz
inc
aam
out
mov
cmp
test
push
les
dec
or
jbe
out
or
push
lea
addr16
ljmp
cmp
push
call
icebp
mov
pop
xor
adc
jbe
lods
push
add
dec
stc
add
pushf
adc
xchg
aas
rcr
insb
cli
cmp
pusha
mov
loope
lock
stc
jp
mov
sbb
xchg
cltd
push
in
xlat
pop
je
lret
jp
into
cltd
mov
cmp
gs
mov
inc
cmpsl
jo,pn
imul
jmp
test
xor
sbb
bound
adcl
sub
jno
jp
ret
dec
pop
repz
out
lahf
mov
mov
mov
notb
xchg
jmp
addb
adc
orl
sbbl
xchg
data16
bound
dec
fnstenv
inc
roll
pusha
push
testl
and
add
or
inc
dec
cli
pusha
jl
mov
out
int
aas
sahf
popf
ljmp
imul
adc
pop
lock
pop
inc
cmpsb
fs
cmp
dec
inc
jecxz
sub
mulb
jb
in
out
icebp
cmpsl
ret
pop
jno,pt
sahf
sbb
cmp
int
pop
inc
mov
mov
xchg
popf
aas
xchg
mov
xchg
inc
pop
push
icebp
xchg
sbb
mov
mov
mov
dec
movsb
les
push
out
push
rorb
mov
repz
icebp
lds
jmp
mov
mov
or
xchg
aaa
push
jmp
jb
ljmp
push
mov
cmp
std
nop
in
xor
es
push
ficoml
and
adc
aas
sub
shr
stos
push
mov
mov
jnp
dec
inc
dec
mov
mov
jg
push
add
cmpsb
adc
ret
fs
push
loop
xor
stc
or
idivb
adc
jmp
cmpsb
ljmp
sbb
rolb
jp
int3
enter
shll
jns
xor
jmp
shll
inc
inc
jne
cmp
inc
add
mov
and
jne
ret
filds
fidivs
cltd
pop
testb
imul
shrl
jns
xchg
adc
adc
inc
loop
movsl
sahf
xchg
adc
xor
std
mov
mov
stos
bound
out
sbb
pop
dec
sti
and
lods
or
orb
fistpll
out
int3
pop
push
jecxz
pusha
dec
xor
out
es
cmp
icebp
jb
loope
clc
push
sbb
rcrl
incb
jmp
pushf
push
sti
push
stc
dec
imul
dec
imul
cmp
lods
sub
mov
or
loop
lcall
rolb
cli
repnz
inc
and
call
or
add
mov
xchg
xchg
iret
push
fidivrs
shr
xor
pop
and
dec
icebp
cmp
dec
push
repnz
xchg
sub
mov
cli
pop
xchg
lds
jmp
gs
push
adc
inc
sbb
pushf
sbb
cltd
js
out
inc
in
sarb
push
cld
mov
into
lods
insb
or
mov
xchg
inc
jge
xor
sbb
test
or
arpl
out
insb
cmp
cmp
xor
lret
or
flds
jae
cltd
cmp
cltd
add
leave
adc
ficoms
jl
jle
push
cmc
in
into
inc
push
cmpsb
dec
rcl
pop
sub
lret
push
sbb
pop
aam
popf
xchg
dec
rcll
jne
xor
xor
sbb
pop
aas
pop
icebp
mov
adc
jne
aas
jo
cld
popf
mov
lret
mov
adc
jmp
repnz
xorb
mov
inc
inc
in
dec
and
mov
lahf
in
jecxz
mov
loopne
pusha
cmp
sub
push
or
repz
adc
out
cli
out
jnp
insb
sub
fsubrl
cli
addb
shlb
clc
int
mov
rcrb
dec
cmpsb
mov
sub
shlb
sub
mov
cmpsb
gs
dec
mov
xchg
fisttpll
ljmp
dec
sub
xchg
das
int
inc
ret
or
inc
sub
lods
ret
out
mov
repz
xchg
sbbl
cs
addr16
inc
pop
paddb
stos
xor
addr16
int
dec
roll
dec
add
das
add
pop
lods
lahf
jo
fmuls
sbb
pop
cmp
or
cmc
sbbl
subl
push
pop
lods
mov
outsb
xor
pop
std
fidivrs
loopne
add
jge
psraw
and
nop
push
popf
shlb
xor
arpl
movsb
jno
sbb
mov
test
jnp
push
test
daa
movsl
das
popf
iret
lds
xor
mov
sub
lahf
mov
cmpl
cmp
in
lea
cmpsl
inc
shr
xchg
push
out
stos
in
push
pop
fwait
xchg
cli
pop
das
or
je
inc
xchg
imul
push
push
sub
xor
lds
sub
stos
mov
xor
popf
pop
jmp
das
movsb
mov
aas
mov
orb
sub
mov
dec
or
sub
movsb
inc
pop
inc
js
inc
int3
mulb
inc
je
mov
icebp
lcall
int3
xor
aad
int3
pop
out
sbb
loope
outsb
andl
in
jmp
dec
xor
cmp
mov
inc
mov
dec
add
dec
mov
std
imul
xor
jbe
jb
daa
mov
adc
repz
addl
or
cld
push
add
push
or
jle
mov
xchg
xor
push
xchg
fidivl
xchg
mov
xchg
or
pop
lret
out
xchg
pop
fwait
dec
mov
daa
fdivrl
push
pop
adc
ljmp
and
pop
xorl
adc
push
or
jecxz
jl
jno
int
pop
pop
jmp
pop
lcall
push
lods
mov
mov
sbb
fcompl
mov
push
pusha
bound
outsl
push
jle
ljmp
pop
xor
inc
cltd
leave
fidivl
and
ret
jns
sub
imul
and
outsl
dec
in
out
lods
lret
cmpsb
jno
out
out
enter
enter
and
cwtl
add
pop
sub
imul
arpl
cmp
ja
arpl
imul
mov
dec
push
mov
xchg
pop
mov
cmp
cs
jmp
add
jnp
enter
xor
shlb
dec
cmp
add
mov
mov
push
pop
xor
les
mov
sub
movsb
orl
mov
mov
popl
das
lcall
cld
dec
fs
push
mov
dec
push
or
jbe
out
jl
popf
jne
data16
bound
mov
outsb
scas
dec
popa
insl
lcall
stc
pop
dec
lock
mov
fwait
cmp
aas
push
add
in
jmp
hlt
fisubl
repnz
fcmovnb
and
sub
and
lret
jmp
rolb
dec
xchg
out
dec
leave
pop
jb
ja
mov
xchg
mov
sahf
lock
out
sbbb
lock
es
sub
stos
inc
push
add
mov
cltd
out
aam
pop
mov
outsb
jmp
lcall
mov
lret
or
mov
cmpsb
arpl
pop
fldl
cmp
and
dec
fwait
jo
out
aaa
addr16
add
imul
pop
and
or
cld
mov
ret
pop
inc
cmp
jbe
les
dec
test
hlt
and
inc
enter
push
imul
adc
inc
arpl
pop
outsl
dec
sarb
in
push
mov
mov
movsb
fnsave
cmp
add
mov
jnp
ss
add
xor
jns
cmp
xchg
xchg
gs
cmp
lods
cs
push
lcall
es
cmp
andl
cwtl
pop
data16
sarl
das
jo
mov
jmp
adc
bound
mov
popa
cmp
dec
push
movsl
cmp
jmp
mov
movsl
in
add
sbb
pop
sbb
in
les
jecxz
in
adc
mov
sub
sbb
shll
stos
fidivrl
cmp
icebp
xor
inc
xchg
adc
bound
into
xor
mov
ja
mov
ja
mov
lods
ds
jno
push
inc
pop
dec
jbe
sub
addb
mov
leave
pop
gs
aad
std
cltd
cmpsl
pop
cwtl
mov
out
js
lock
loop
jle
add
and
inc
push
popf
fwait
btr
adc
imul
sbb
or
scas
into
mov
and
jne
dec
ret
inc
push
out
sub
shrl
or
xor
xor
xchg
lcall
pop
sbb
cmp
pushf
jnp
push
cld
out
stos
jb
clc
into
fsubr
push
push
push
cmp
repz
loop
les
pop
inc
loop
hlt
bound
dec
add
xlat
fs
push
push
sbb
scas
not
jae
and
in
mov
and
mov
adc
xchg
adc
aas
ret
repz
xchg
mov
mov
scas
loopne
loopne
fsubp
jmp
sub
sbb
popf
mov
xor
sbb
jp
je
outsb
or
cmp
std
mov
roll
sbbb
inc
inc
aam
inc
std
je
idivl
lds
jae
je
lret
sub
lods
sbb
add
dec
sub
mov
bound
jb
cmp
inc
outsl
push
xor
pop
rorb
fistpl
fincstp
jae
sbb
xorb
pop
jg
cmp
stc
xchg
adc
insb
adc
es
sarb
push
sahf
movsl
aad
push
inc
or
push
xchg
inc
subb
jmp
dec
push
xchg
rolb
jp
or
cltd
or
mov
jge
rclb
xchg
cmp
inc
push
outsl
sahf
and
lods
jb
out
lahf
loope
jge
mov
cli
jl
mov
hlt
loopne
mov
test
pop
pop
jne
push
test
push
xor
pusha
repz
xor
scas
adc
jle
cmp
aad
sbb
and
adc
ds
sbb
mov
loop
xlat
jp
ds
aas
add
je
add
xchg
add
test
pop
hlt
inc
push
call
adcb
pop
mov
jmp
add
lahf
push
fcoms
adc
mov
push
out
cmp
pop
jge
mov
dec
or
dec
xchg
xorb
mov
mov
sbb
fdiv
adc
mov
and
aad
push
jbe,pn
std
sbb
add
dec
rclb
xchg
mov
xchg
ljmp
xchg
subl
movsb
and
sbb
jbe
xchg
xchg
inc
xchg
daa
lock
js
xchg
test
out
aas
popa
enter
add
mov
icebp
add
pushf
xchg
jmp
insl
xor
push
mov
das
inc
add
stos
lret
shrb
jbe
lock
mov
iret
cld
cli
loope
jae
addl
push
inc
mov
push
dec
daa
inc
aad
movsb
stos
test
sbb
jl
push
adc
sub
fstps
aam
push
add
aaa
cmpsb
pop
ds
test
sub
dec
adcb
jmp
movsb
aam
ds
and
add
rcr
mov
add
insl
cmp
dec
add
mov
xor
and
in
insl
mov
and
arpl
mov
popf
popa
and
mov
jecxz
icebp
fwait
push
xor
je
push
add
xchg
push
mov
push
iret
jbe
pop
mov
inc
stos
ret
mov
cmp
xchg
xor
cmp
xchg
mov
cmpb
shrl
adc
inc
stos
pushf
cmp
std
pusha
out
pop
sbb
cmpsb
mov
or
fldt
shrl
cmp
xchg
data16
push
sub
push
jne
aas
call
inc
shrb
les
adc
pop
and
hlt
mov
aas
jmp
cmpsl
sub
testl
mov
pop
pop
sub
push
pop
pop
lods
sub
pop
push
jne
aad
iret
aam
xor
xchg
jae
pop
icebp
pop
adc
pushl
mov
insl
dec
cmp
xchg
add
push
fdivp
lods
cltd
adc
in
dec
popa
and
mov
lahf
in
rep
repz
shlb
mov
bound
sti
test
mov
lea
mov
mov
mov
insl
mov
pop
cmpsb
imul
cmp
pop
mov
mov
fisubrs
aaa
pop
scas
cmp
rcrl
cmp
mov
sbb
sub
icebp
pushf
add
sbb
es
fldcw
sub
cs
jge
adc
inc
xchg
dec
in
mulb
stc
test
pop
xchg
outsb
imul
xchg
push
mov
icebp
arpl
sbb
in
cli
cs
aas
rorl
lret
das
add
xor
icebp
or
mov
add
hlt
xorb
ja
ror
xor
shlb
adc
imul
dec
pop
popa
repz
ret
mov
insl
repnz
pop
scas
adc
fwait
dec
xor
ss
and
les
leave
ret
and
stos
push
jp
push
xor
and
pop
ret
out
insb
addr16
push
rcrb
xor
std
fnstsw
fistpl
xorb
jae
leave
push
inc
std
mov
ljmp
outsb
std
jp
nop
pop
subl
js
xchg
mov
movsb
pushf
aam
dec
sbb
dec
mov
push
pop
sbb
movsb
mov
xor
pop
xchg
shll
sub
lods
test
jecxz
sub
mov
push
dec
mov
jle
sahf
fcos
or
push
xchg
fcompl
dec
ljmp
xor
mov
enter
loope
cmp
ds
sahf
jb
push
mov
sub
inc
or
mov
push
scas
outsb
je
mov
push
pop
cmpsb
aas
xor
mov
mov
add
mov
xor
mov
lret
lods
addb
mov
imul
movsb
sahf
shr
pushf
mov
ja
fdivrs
cmp
xchg
js
dec
aam
sbb
dec
fdivl
pop
lcall
enter
adc
mul
or
add
mov
push
push
jle
leave
cmp
sbb
popf
aad
out
inc
and
out
push
mov
fs
js
pop
rolb
sbb
add
adc
mov
dec
bnd
in
pop
add
andb
pushf
sub
sbb
ljmp
jne
xor
in
push
sbb
out
or
cmpsl
cltd
xor
mov
dec
sahf
fidivs
push
daa
mov
add
inc
loop
mov
pop
punpckhbw
xchg
out
sti
pop
rclb
or
push
xor
and
mov
enter
mov
lods
jg
pop
movb
dec
subb
cmp
adc
xchg
repnz
dec
enter
jb
ds
sub
pop
push
xchg
in
inc
test
dec
andl
jb
xchg
aam
sub
push
jb
dec
xor
mov
or
enter
push
mulb
imull
js
cmp
sbb
repnz
addr16
aas
dec
insb
std
add
enter
mov
pushf
data16
ret
mov
popa
lds
mov
je
pushf
ss
cwtl
add
cwtl
adc
rcrl
lret
mov
dec
test
push
mov
mov
dec
or
jp
pop
mov
es
add
addr16
adc
cmpsb
xor
mov
xlat
sbb
scas
loop
mov
idivl
adc
mov
test
pop
pop
fwait
cmp
push
mov
aaa
int
clc
add
and
xchg
fldcw
mov
cli
shr
ror
mov
into
xchg
sub
fisttps
mov
add
incl
fwait
cld
jmp
inc
mov
je
out
add
pusha
mov
sub
mov
movsl
cmc
ds
sub
sub
sar
out
pop
mov
das
and
sbb
daa
roll
pop
sbb
cs
rolb
inc
mov
pop
mov
push
ret
lea
fadds
nop
cmpsl
push
nop
rclb
lahf
popf
imul
mov
or
xchg
jae
fcompl
inc
xor
movb
pop
dec
cmp
div
xchg
and
js
sbb
add
mov
sub
mov
adc
iret
into
or
inc
and
cltd
jg
mov
mov
mov
xor
xchg
mov
leave
icebp
or
push
rcll
nop
movsl
inc
and
jge
xlat
inc
lret
imul
addr16
pop
sbbb
arpl
ret
fisubs
loop
or
dec
mov
stos
adc
std
adc
or
mov
or
add
ds
leave
push
ret
fldcw
incl
pop
and
lcall
add
insl
fcmovnb
notl
mov
movsb
pop
aad
les
mov
jge
sbb
add
jns
or
inc
cmp
aaa
inc
popf
test
rcrl
mov
jbe
clc
dec
fsubrs
mov
inc
dec
xor
outsl
dec
jmp
imul
push
into
iret
pop
push
clc
xor
jnp
jns
xchg
aam
xchg
cmp
adc
jb
sub
sub
cmp
and
ljmp
mov
int3
mov
sti
xor
or
out
leave
sti
cmpsb
fsubs
inc
mov
arpl
sbb
jno
jns
iret
adc
push
mov
lret
cmpsl
test
aam
xlat
ljmp
cmp
cmp
cmp
ror
clc
lock
jo
cmpsb
pop
aad
in
pop
sub
in
sbb
sub
aad
les
dec
stc
mov
pop
xchg
push
adc
mov
jnp
adc
fildl
sbb
lret
cmp
mov
mull
adc
je
and
loope
pcmpeqw
mov
gs
bound
jg
imul
stos
pusha
mov
aas
sbb
xor
lahf
sub
cmp
es
jb
mov
dec
dec
sub
adc
outsl
sbb
sbb
jne
cli
mov
inc
inc
shrb
test
jae
mov
push
inc
xchg
out
cmc
inc
sbb
mov
add
movzwl
fstpl
in
push
jno
and
sub
jl
pop
and
jecxz
or
insl
sbb
daa
daa
enter
xchg
call
insl
clc
mov
mov
pusha
cmp
mov
fcmovbe
insb
out
mov
sub
push
sbb
cld
cli
push
add
mov
or
inc
xchg
inc
mov
add
mov
out
dec
sub
pop
pop
fs
test
jne
sahf
cmp
pop
jb
cs
adc
lock
and
sbb
fnstsw
mov
cltd
ds
mov
sahf
imul
sub
nop
shl
cwtl
divps
lahf
sub
sbb
pop
xchg
dec
call
test
or
add
lods
inc
shlb
aad
dec
mov
lret
out
sbb
ret
test
inc
movsl
outsb
push
push
sbb
pushf
jecxz
movsb
pop
jbe
movsl
mov
mov
xchg
adc
hlt
fistps
xor
dec
repz
xchg
test
jle
fsubrl
leave
test
cmp
loopne
pop
and
insl
int3
imul
mov
hlt
inc
loopne
sbb
push
xchg
hlt
cmc
cld
sahf
icebp
repz
jmp
mov
push
arpl
xor
dec
imul
xor
xlat
xor
xor
stos
cmpsb
rcl
or
dec
sub
subb
movsl
mov
mov
lret
hlt
fidivs
loopne
and
flds
mov
lcall
push
fidivl
int
push
lret
mov
add
push
pop
push
in
sub
xchg
dec
mov
outsb
push
sbb
lock
mov
outsl
jmp
pop
sbb
push
xchg
add
nop
xor
fwait
ds
cmp
test
fiaddl
lock
pop
in
stc
xchg
fidivs
sar
add
xor
pop
in
xor
push
jmp
div
popf
cmpsb
mov
cmp
scas
jg
mov
les
mov
test
push
sbbl
xchg
mov
clc
adc
push
ficomps
sbb
pusha
pop
or
movsb
cmp
jne
xchg
cmp
push
add
sbb
sub
jg
je
jne
std
dec
mov
pusha
cltd
ja
xor
js
insl
dec
push
cld
sbb
add
addr16
dec
pusha
push
in
ficoms
std
ja
rcll
adc
mov
dec
out
adc
jl
aaa
pop
dec
dec
vcomisd
bound
in
pop
push
jns
cmp
ret
hlt
pop
add
insl
lcall
out
push
pop
repnz
xor
pop
jge
shll
xchg
push
sbb
shlb
add
lahf
add
xor
push
outsb
mov
int
push
call
push
pop
push
lret
inc
jge
cmp
int
icebp
cmp
and
stc
xor
je
adc
test
ja
ficompl
cmp
divl
div
add
mov
inc
scas
cmpsb
dec
push
add
jns
pop
cld
mov
cwtl
lods
cltd
jecxz
cmp
xor
fsub
mov
mov
dec
mov
shlb
ds
adc
lods
or
test
jmp
aam
jb
xor
lods
cmp
mov
lods
or
xchg
sbb
xor
fninit
aas
leave
jae
std
stc
mov
cwtl
fidivs
xor
xchg
xchg
test
inc
cwtl
gs
pop
imul
lret
dec
mov
mov
xor
push
add
lods
add
fcmovb
sahf
xchg
js
pop
insl
xor
jecxz
clc
call
jg
in
pop
out
jmp
dec
dec
dec
fists
les
xchg
in
dec
add
inc
data16
fcmovne
mov
inc
cwtl
inc
imul
imul
push
push
xchg
stos
cmpsb
lock
jne
xor
inc
pop
pop
enter
pop
aas
mov
lods
shlb
push
mov
test
sub
js
xchg
inc
nop
lea
or
add
adc
sti
inc
mov
insl
jae
jo
aas
cwtl
push
fnsave
xchg
dec
testb
adc
stos
rolb
inc
imul
icebp
enter
dec
sub
lea
ds
addb
mov
insb
mov
test
xlat
adc
fsubrs
int
jmp
mov
sub
or
dec
lcall
mov
popf
xchg
cmpsb
pushf
jecxz
cld
dec
push
dec
cmpsb
hlt
sbb
add
pop
push
sbb
push
imull
cli
sahf
push
dec
in
inc
push
jo
inc
inc
repz
fldl
mov
mov
add
hlt
xlat
mov
iret
adc
sub
mov
mov
je
jno
sbb
jno
xchg
je
dec
cmp
ret
cld
or
sbb
mov
mov
mov
jnp
or
mov
shlb
mov
lds
mov
and
mov
lea
sub
fdivrl
dec
jecxz
es
pop
arpl
jle
leave
add
and
jecxz
ljmp
mov
cld
mov
add
lods
cmp
bound
xchg
movb
dec
jns
arpl
out
sbb
pop
aaa
mov
dec
scas
outsl
adc
mov
ljmp
pop
mov
pop
add
push
sbb
xchg
xor
jge
xor
movb
dec
shll
sub
jnp
xchg
add
mov
push
pop
stos
jp
or
sbb
adc
in
sub
mov
int
xor
mov
fwait
je
sbb
adc
push
cli
dec
xchg
mov
mov
pop
adcb
cs
jnp
sbb
fdivrs
sbb
std
pushf
xchg
mov
sub
mov
fwait
add
subl
inc
and
lods
test
fisubs
xchg
mov
testl
and
add
inc
imul
add
xor
adc
and
mov
sub
pop
or
lock
pop
out
dec
pop
add
mov
jo
and
icebp
xchg
xchg
enter
pusha
adc
rol
adc
out
test
std
inc
dec
mov
scas
lds
cwtl
jns
lds
movsl
popf
aas
inc
sub
insb
mov
outsb
jle
sub
aaa
dec
repz
repz
mov
mov
sti
mov
inc
jbe
dec
aas
cs
push
inc
aad
pushf
enter
inc
inc
cs
stc
neg
clc
mov
repz
fdivrl
xor
xor
cmp
jp
inc
ja
pusha
add
dec
shrb
cmpsl
cmp
xor
arpl
and
out
in
shrl
cli
mov
in
pusha
popf
enter
mov
fcomip
push
inc
sub
jno
adc
add
inc
push
ret
xchg
aad
fsts
mov
mov
add
icebp
pop
aad
pop
inc
or
adc
lods
inc
pusha
or
mov
shrl
aam
pop
mov
popf
jnp
outsl
andl
out
inc
jmp
add
xor
sti
lods
jb
pop
rorl
jae
sub
sub
push
loop
cmp
mov
push
js
mov
inc
out
xor
fs
mov
mov
lcall
mov
lock
mov
lcall
test
lds
mov
stos
mov
jns
sub
or
pop
and
sub
lcall
sub
inc
jecxz
push
fbld
lods
lock
test
shl
push
cmc
push
int3
aad
addl
mov
mov
and
cld
lret
pop
dec
jmp
inc
adc
movsl
mov
stos
mov
dec
ja
sbb
mov
lock
sub
lcall
aad
pop
mov
inc
lods
push
inc
sub
and
add
ret
jne
adc
rcrb
dec
cwtl
xchg
push
fiadds
mov
sub
push
mov
dec
sub
das
idiv
dec
iret
pop
jle
mov
push
fwait
dec
add
mov
into
lahf
cld
mov
jo
les
lds
add
mov
cmp
scas
add
pop
ret
iret
and
mov
fldenv
pushf
aam
pop
lret
inc
lods
and
adc
mov
scas
mov
push
pop
push
or
push
or
sbbb
xchg
xor
jmp
dec
pop
idivl
lods
mov
stc
cmp
or
and
inc
lea
sbb
inc
pop
icebp
mov
out
test
daa
adc
cmp
in
sbb
rcrb
out
or
add
jecxz
add
sub
addr16
insl
add
cmp
sbb
or
bnd
insb
dec
push
subb
xchg
in
sbb
addr16
jns
insb
loopne
mov
add
jne
outsb
das
mov
cmp
ja
decb
lock
sbb
repz
xchg
out
and
mov
inc
adc
mov
cmp
pop
repnz
sub
outsl
add
xor
xor
fldenv
inc
push
in
xor
adc
cmp
jecxz
cmp
loopne
movl
dec
xchg
mov
push
sbb
cmp
scas
inc
shlb
sub
mov
jns
cmpsb
cltd
add
loop
or
push
test
out
mov
add
mov
outsb
push
mov
mov
jbe
add
mov
std
inc
or
sub
pop
cmp
inc
xchg
lock
pusha
mov
pop
inc
push
and
lahf
mov
mov
dec
iret
jno
ss
fistl
xor
movsb
xor
push
clc
repz
cmpsl
add
loope
cmp
mov
and
out
pop
aaa
adc
insl
hlt
adc
pusha
lods
lock
mov
lea
cmp
or
and
lea
mov
call
inc
sbb
fcoms
xorb
or
cs
jae
fstl
iret
mov
mov
add
lock
mov
and
subb
sbbl
xchg
and
dec
repz
mov
into
fisubrs
movsl
dec
scas
mov
ljmp
arpl
inc
sbb
fidivrs
push
std
xchg
lods
sbb
insl
cmp
stc
scas
or
pop
add
or
jp
arpl
out
adc
jb
out
sub
xor
mov
scas
lcall
lahf
cmc
mov
xchg
pusha
and
inc
shlb
cltd
es
add
and
fnstsw
mov
cmp
adc
push
lea
dec
xchg
repz
mov
mov
mov
and
mov
fstpt
inc
stos
sbb
and
roll
xrelease
xchg
out
ja
jecxz
cmpsl
add
xchg
and
cwtl
xchg
jp
pushf
and
lahf
push
iret
fstpt
ss
scas
cmp
xchg
mov
cmp
les
adc
mov
and
in
fistpl
xor
mov
hlt
frstor
pop
pop
call
jg
stos
inc
cwtl
stc
jbe,pn
idiv
xchg
out
ljmp
rol
es
adc
arpl
sbbl
mov
icebp
ss
test
into
xor
out
outsw
loope
sbb
pushf
cmovbe
push
jle
mov
lock
outsl
imul
push
adcl
leave
xchg
cmp
lcall
adc
adc
xchg
push
scas
xchg
in
pop
fs
loop
outsl
mov
or
shll
insl
mov
or
push
in
dec
cs
jl
sbb
cmp
cmp
ja
adc
insl
cmp
data16
shrb
mov
cwtl
dec
cmp
or
in
push
xchg
jle
jmp
movsl
pop
cld
jecxz
push
sub
mov
mov
jbe
jle
sahf
cmp
sbb
bound
add
test
fstpt
in
shll
mov
pop
out
je
inc
add
sbb
adc
test
sbb
jmp
push
dec
mov
movsb
addl
or
lahf
repnz
xor
hlt
cmp
repnz
add
dec
loopne
scas
cmpb
or
xlat
and
cmp
mov
xchg
std
orb
adc
push
xor
adc
adc
inc
ljmp
js
not
nopl
dec
sub
fldt
out
popf
xlat
jle
loop
ljmp
cmpsl
add
xor
cmp
and
dec
sbb
push
add
shlb
loop
nop
xor
test
repnz
push
rcrb
push
and
add
sti
fildll
pop
mov
mov
cmpsb
insl
sub
sti
jae
sbb
mov
mov
js
lcall
fs
add
mov
add
rcrb
cmp
mov
or
test
aam
push
or
xchg
push
hlt
nop
jb
jg
adc
jmp
inc
mov
sub
es
sbb
das
lcall
test
pop
jo
clc
sarl
cmp
push
mov
add
clc
inc
cmc
aaa
out
dec
pop
divb
xchg
lret
xlat
pop
add
cmp
lret
cmc
pop
inc
out
stos
idivb
dec
inc
sbb
sbbl
adc
pop
lods
jo
aas
inc
fcmovb
popa
mov
sub
jg
and
movsb
mov
add
std
adc
pop
out
push
xchg
mov
jmp
hlt
icebp
mov
sbb
mov
cmpsb
jns
iret
stos
out
mov
cwtl
roll
les
pushl
pop
test
adc
sbb
and
das
int3
dec
cs
icebp
add
cwtl
inc
pop
insl
loop
int3
aas
mov
or
jmp
call
enter
imul
clc
stc
sbb
push
int3
cmpsl
std
dec
insl
imul
cwtl
scas
cs
push
inc
ret
gs
sbb
lahf
test
sahf
pop
inc
jmp
sub
dec
shll
loopne
int
add
decl
test
push
xchg
popa
jae
lret
js
or
ret
es
mov
outsb
sbb
push
outsb
mov
xor
xchg
in
mov
jmp
enter
lds
dec
mov
dec
jb
jo
mov
sbb
iret
in
fdivs
ficomps
repz
bound
ds
or
idiv
pop
sbb
popf
and
int
in
enter
into
push
cwtl
cwtl
push
imul
inc
lods
loope
adc
sahf
sub
adc
mov
sbb
jg
sub
mov
enter
adc
loopne
ret
ficoml
fcmovnb
shlb
fwait
cmp
sbb
pop
fdivl
in
aas
lret
aam
cmpsb
and
jo
outsb
repz
pop
push
adc
mov
fmul
les
jge
jne
add
arpl
lret
mov
dec
add
cld
ds
insb
adc
jbe
xchg
push
lret
add
xchg
test
outsb
mov
fldt
fwait
ret
dec
in
mov
mov
sub
push
and
test
mov
lahf
pop
outsb
adc
mov
enter
pop
sti
and
xor
and
mov
in
adc
cmp
int
stos
mov
jmp
cli
dec
adc
das
cmp
push
popf
adc
jg
lret
lock
sarl
cmc
and
mov
push
push
xchg
lret
imul
push
out
andb
inc
dec
enter
mov
pop
cmp
fbstp
mov
inc
sub
pop
lods
popf
ss
sub
lea
push
sbb
mov
mov
inc
mov
repz
mov
ret
xchg
pop
mov
mov
mov
repnz
pop
lods
inc
pop
iret
mov
out
inc
mov
js
lret
inc
ljmp
adc
mov
jb
das
cmp
inc
or
popf
jl
push
jae
cld
mov
std
mov
xchg
xchg
hlt
mov
mov
fwait
xchg
movsl
cmp
int3
xchg
mov
add
repnz
pop
pop
fcmovne
and
mov
xchg
stos
cmp
fxch
rclb
pop
pop
ja
mov
aam
mov
or
wbinvd
jo
inc
rcr
insb
and
sbb
lock
out
push
repnz
sub
adc
inc
mov
push
enter
cltd
ficompl
or
adc
stos
or
dec
inc
or
outsb
mov
cmp
cmp
sar
add
rcr
xor
xor
inc
xchg
dec
sbb
orb
xorb
cltd
cmc
inc
mov
roll
aad
xchg
or
nop
cs
and
add
aas
push
les
mov
push
fiaddl
das
enter
fisttpll
push
xor
orb
mov
xorl
mov
cmp
jae
sbb
cltd
inc
inc
and
loope
adc
jnp
mov
imul
repz
pusha
andl
cwtl
push
push
jno
mov
lods
mov
sbb
lods
pop
out
test
sbb
ss
and
sbb
je
add
push
xchg
mov
pop
pop
fldenv
adc
xchg
xchg
inc
fld
jmp
mov
adc
arpl
scas
aaa
and
nop
test
sahf
mov
pop
inc
mov
int3
fisttpl
fs
pop
scas
subl
mov
adc
fsubl
xor
jle
icebp
pop
xchg
aaa
or
add
and
xchg
and
std
xor
insb
cmp
ljmp
mov
inc
adc
fwait
cmp
inc
jns
mov
adc
jns
jge
add
mov
hlt
lahf
push
xor
in
js
or
decb
or
pop
ljmp
out
pushl
cmp
mov
stos
imul
negl
cmpsb
mull
leave
rcrl
sub
and
add
xchg
in
push
xchg
std
rorl
imul
popa
aaa
and
fidivrl
mov
addr16
fstpt
jae
mov
mov
and
sbb
outsl
jns
mov
push
inc
enter
hlt
mov
nop
adc
adc
nop
je
push
mull
lret
mov
insl
mov
push
nop
sub
mov
pushf
test
pop
jge
sbb
roll
push
mov
test
pop
jnp
les
xor
js
call
dec
dec
cli
idivb
mov
sub
test
and
adc
nop
sti
dec
push
mov
cmp
or
add
mov
ss
lds
or
adc
rcrb
mov
aaa
mov
enter
cmc
test
push
xchg
push
pop
data16
das
or
mov
jns
jl
outsb
and
cmp
jbe
dec
repnz
bswap
out
or
lods
jo
mov
jmp
adc
xchg
xchg
mov
jmp
mov
mov
mov
inc
mov
hlt
sbb
mov
and
mov
xor
scas
xorps
adc
data16
dec
outsb
lods
cld
push
add
cmp
pop
cmp
inc
fmull
icebp
repnz
mov
insb
xor
mov
sbb
lods
sub
xchg
jecxz
xchg
rolb
xchg
ret
inc
orb
and
pop
xor
gs
xor
adc
jmp
sbb
adc
sbbl
and
fldl
sbbb
or
clc
xchg
cmp
lods
das
clc
xchg
adc
addr16
cmp
jp
pop
jnp
mov
adc
ret
cmp
pop
aaa
and
fucomip
daa
sbb
xchg
xor
mov
vmovupd
push
dec
inc
int3
pop
xchg
out
outsl
aad
sub
or
in
adc
jp
xchg
push
aad
test
mov
mov
add
int
scas
mov
lcall
fsubrl
jo
sbb
pop
cmc
inc
sbb
cmp
jno
or
and
popa
jmp
test
imul
push
and
xor
stos
into
jg
cli
addr16
xchg
sub
mov
repz
scas
dec
sar
cmpsl
jae
jl
inc
addr16
in
lods
mov
sbb
out
test
xorb
dec
jae
pop
jne
adc
pushf
ffree
push
lcall
orb
mov
sbb
cs
ret
pusha
jno
sub
gs
sti
cwtl
xor
xor
sbb
and
imulb
pop
scas
xor
ss
outsb
push
jnp
sub
xchg
cmc
dec
push
inc
cmc
sbb
xchg
mov
mov
push
sbb
xchg
xlat
mov
iret
sahf
jns
jg
mov
dec
scas
mov
aaa
loop
mov
mov
out
lea
into
add
adc
out
incb
adc
les
sbb
lock
or
insb
jmp
jo
scas
inc
pop
clc
xor
sub
push
lret
rcrb
gs
stos
mov
out
rcrb
mov
pop
mov
pop
aaa
cld
xchg
pop
imul
or
xchg
into
mov
lret
adc
mov
lods
leave
xchg
xor
andb
sbb
stos
xor
fdivrs
xlat
xor
mov
lods
mov
mov
fbstp
adc
dec
rcrl
pop
push
lfence
jo
inc
rclb
cs
andb
out
xlat
out
lret
cmp
out
lock
enter
cmp
push
xor
lock
mov
mov
jb
mov
mov
sbb
mov
pop
adc
imul
mov
leave
sub
out
mov
lea
cmp
pop
sbbb
mov
pusha
outsb
jbe
jecxz
mov
cltd
and
add
jle
cmp
mov
aam
xchg
inc
sti
daa
cli
sub
xor
push
push
jb
mov
imul
fsts
pop
xorl
andl
push
add
add
psllq
stc
mov
fists
gs
pushf
pop
inc
imul
cmp
mov
xor
in
lret
cwtl
jns
call
gs
icebp
pop
pushf
xlat
lds
push
dec
xchg
in
add
call
mov
sbb
fldl
lds
add
js
sbb
cmp
aaa
push
ljmp
cltd
cmp
cmp
fnstenv
add
push
push
test
cwtl
lds
bnd
lds
mov
push
dec
mov
les
ret
mov
aas
mov
das
cld
nop
and
push
jg
les
call
sub
jl
dec
push
mov
loop
addb
orl
push
jno
in
ja
hlt
dec
test
out
jae
fsubs
in
incl
pop
jmp
jg
pusha
icebp
cmp
mov
hlt
and
jecxz
xchg
movsb
mov
inc
jmp
mov
add
nop
lds
or
rcrl
mov
in
lods
enter
inc
cltd
inc
rcrl
dec
aam
dec
and
xor
mov
xchg
dec
lret
inc
jns
ror
jp
mov
jecxz
or
inc
pop
jbe
inc
pop
cwtl
or
test
scas
cmp
add
ljmp
dec
cltd
mov
imul
mov
out
fwait
pop
sar
xor
fstl
in
fs
addb
leave
leave
icebp
and
nop
fwait
pop
dec
and
ljmp
fs
push
mov
shrl
xor
push
mov
add
adc
mov
call
hlt
nop
mov
cmpsl
push
or
loop
dec
movsb
mov
fcoml
sbb
test
adc
pop
xorb
jl
xchg
loop
pop
jns
bound
mov
adc
in
jno
mov
fistpll
movsl
leave
inc
or
in
call
sbbl
inc
test
and
cld
dec
orl
icebp
aas
or
cmpsb
mov
inc
xchg
xchg
adc
gs
repz
cmpsl
lahf
dec
push
xchg
jb
fdivrl
inc
mov
cmpsl
notl
inc
ret
dec
mov
push
push
loop
imul
sub
movsl
or
or
push
mov
or
mov
jne
xchg
sbb
inc
mov
sbb
repz
dec
test
pushf
sarb
fistps
and
addl
add
mov
das
jg
int
cmp
sbb
xchg
mov
hlt
sub
lods
or
cmpb
movsl
sub
ljmp
adc
daa
cmc
push
xorl
adc
jmp
mov
mov
cmp
sbb
pop
shrl
jl
mov
push
mov
sbb
xchg
jge
dec
and
mov
sahf
fstps
decl
test
jle
sahf
scas
lds
lret
test
push
adc
ror
mov
out
fnstcw
xor
push
ss
nop
sbbl
in
sbb
sbb
sub
inc
out
inc
into
adc
add
mov
movsb
lods
fisttps
loopne
fs
pushf
jbe
dec
xor
je
mov
jp
sbb
or
popa
mov
lea
xchg
xchg
and
cmp
call
adc
inc
sub
scas
insl
push
ss
outsb
and
pop
fcoms
push
pop
mov
xchg
dec
or
shll
or
popf
clc
dec
or
dec
xchg
jmp
jnp
push
and
jle
nop
enter
inc
pop
jl
sub
test
pusha
dec
inc
ret
jge
sbb
push
pop
aaa
stos
aam
xor
data16
dec
mov
pusha
push
sbb
xor
sbb
scas
lds
hlt
jmp
imulb
fstpt
push
addr16
cmp
push
xor
xchg
sub
jl
cmp
loop
cmpsb
add
and
into
mov
dec
add
mov
iret
pop
popf
mov
and
int3
fs
and
das
xor
jge
add
ficoml
fadds
mov
subb
mov
mov
xchg
mov
std
loope
push
mov
stos
push
or
addb
sbb
or
out
testb
or
jmp
js
adcb
inc
movsb
stos
sarl
pop
sti
or
mov
inc
mov
sbb
fnstsw
repz
sbb
rol
out
pop
or
fdivs
movsb
das
or
inc
adc
jmp
loopne
repnz
enter
xchg
divb
adc
ja
sbb
mov
addr16
call
xor
rcr
out
imul
loope
jge
lock
adc
sahf
or
mov
add
sahf
xor
mov
pop
divl
ds
scas
ds
xchg
into
test
aam
data16
pop
mov
dec
dec
push
sbb
cmpsl
xchg
cs
pop
pop
ret
pop
xor
add
pop
pop
pusha
bound
inc
xor
xchg
cmp
or
data16
xchg
sub
xchg
andl
add
cmpsl
aad
or
add
pop
jg
lret
subb
sahf
push
jne
xor
adc
shrl
pop
cs
pop
push
adc
sbb
pop
cmp
out
xor
call
js
pop
fcmovne
std
or
ja
jmp
bound
jnp
or
lahf
sahf
mov
movsb
sbb
imul
call
mov
jno
inc
lret
lret
rorb
inc
push
cmpsb
inc
push
inc
imul
rcll
mov
xchg
push
mov
push
xchg
out
mov
stos
int3
jle
les
test
push
das
fwait
es
sahf
push
xor
sub
mov
rcrb
or
js
and
mov
xchg
push
mov
dec
mov
and
xor
fwait
pop
push
ds
dec
jge
pop
jmp
mov
adcl
pop
jge
mov
xchg
cmp
sbb
enter
xor
popa
jae
in
repnz
push
blcic
push
movsb
aam
jb,pt
enter
stos
lock
scas
pop
dec
outsl
mov
sbb
xchg
stos
xor
cmp
jbe
enter
enter
and
dec
mov
fsubrl
lea
jne
stos
test
cltd
push
in
dec
xor
in
mov
adc
sbb
scas
mov
cmp
data16
fwait
xor
pusha
movsb
mov
mull
mov
sbb
scas
enter
imul
lret
sbbl
pop
sub
lock
push
fisttpl
push
bnd
or
mov
in
xchg
xor
mov
popf
xchg
or
jg
call
out
push
pop
jns
push
inc
les
pop
inc
fwait
rcrl
roll
test
push
xor
in
in
icebp
cmp
fcompl
shrb
cmp
mov
cmp
and
int
test
les
mov
rcrb
pop
in
mov
daa
aam
mov
mov
sub
mov
lds
xchg
xchg
cli
cmpsl
aam
repz
push
inc
xor
or
dec
ficompl
std
shrb
out
inc
stc
xor
mov
or
lret
adc
mov
icebp
push
mov
push
sbb
les
inc
jg
mov
ret
pop
jg
jno
cwtl
dec
mov
gs
lahf
add
sahf
mov
outsb
pushf
xchg
xor
sbb
jp
shrb
jb
std
fstl
cmp
sahf
cltd
repnz
dec
sub
or
pop
cmpsw
outsb
add
xor
xor
mov
cmp
sbb
mov
jb
push
cld
xor
sbb
inc
or
loop
jae
push
ret
je
loop
inc
dec
icebp
push
add
lods
inc
arpl
sbb
push
mov
cltd
mov
mov
clc
cs
dec
xlat
cwtl
xor
mov
sbb
cmc
leave
je
mov
sti
push
push
das
lock
inc
imul
sub
imulb
xor
jne
jmp
insb
sbb
cmp
sar
mov
jno
out
clc
out
inc
inc
ret
movb
mov
jmp
adc
cmp
leave
enter
xchg
aad
pop
cmpsl
shll
popa
inc
dec
flds
jp
mov
leave
arpl
mov
sbbb
lods
cmp
lock
adc
fnstcw
addr16
sti
leave
and
hlt
sub
pop
or
xor
inc
inc
mul
lcall
push
jle
loopne
ljmp
insb
sti
jle
jo
xlat
das
sbb
mov
jl
cmc
outsl
ret
pop
repz
jl
fimuls
pop
pop
push
test
gs
gs
call
sub
std
jnp
int
and
cmp
jae
jbe
test
sbb
ret
int
shl
inc
mov
pop
incb
cwtl
jecxz
jne
imul
cli
push
jp
fwait
jo
rclb
scas
mov
shlb
in
cmp
mov
mov
xchg
push
icebp
insl
test
scas
cld
popa
lahf
cmp
jl
cld
mov
mov
or
lods
inc
inc
pop
inc
scas
cld
sbb
out
mov
rclb
cld
fmulp
sbb
pop
fs
cmp
xor
push
fldt
jge
cmp
dec
lods
sub
push
xrelease
xchg
cmp
mov
stos
imul
mov
pusha
sbb
cmp
mov
or
mov
or
or
test
adc
jg
aad
mov
dec
xor
xchg
sbb
cmp
or
ret
pop
lret
xchg
rcr
cli
clc
ds
cli
ss
push
fdivrl
cltd
mov
xchg
loop
loop
mov
aad
push
je
clc
and
push
and
es
sub
aad
mov
mov
xlat
push
mov
das
je
lods
cmp
dec
mov
jnp
out
cmp
jnp
mov
sub
pop
push
popa
fildll
neg
jp
add
push
popa
jb
je
mov
dec
inc
lret
or
add
mov
or
bound
jo
jecxz
int3
sbb
pushf
mov
add
mov
aam
jae
dec
pop
fidivl
sub
bound
pop
out
sbb
into
xchg
dec
and
iret
xchg
jnp
call
add
roll
mov
aad
sbb
les
ds
sahf
dec
sbb
xor
sub
pop
jo
dec
mov
sub
fsubs
rolb
pop
push
sub
xor
popf
jg
aaa
add
cmp
xchg
xchg
scas
jnp
cmpb
imul
jo
mov
and
loopne
in
pop
mov
mov
mov
pop
popa
inc
and
outsb
jg
cmpsb
fsubs
sti
dec
outsb
lahf
rcrl
push
xchg
xchg
push
lods
lea
data16
or
sub
dec
out
cmp
das
adc
rcr
sbb
cld
pop
xor
fldenv
xchg
ds
pop
lock
enter
sub
push
xchg
adc
lock
cli
pushf
pop
sub
fwait
montmul
cmpsb
aad
xchg
popf
movl
leave
test
jg
and
xlat
shrb
xchg
jo,pn
test
sbb
test
adc
pop
cmp
inc
imul
cmpsl
pop
sbb
loope
mov
int3
shl
shlb
mov
pop
push
or
xchg
pop
cmp
dec
in
mov
mov
test
mov
lods
cmp
aad
xor
xor
test
cwtl
mov
xor
mov
or
or
in
xchg
cvttps2pi
adc
cmpl
inc
iret
mov
lea
jb
fstpl
jp
push
outsl
in
xchg
mov
pop
xor
cmpsl
rol
insb
dec
scas
adc
xchg
icebp
mov
lds
sti
dec
inc
mov
inc
xor
sbb
and
into
pop
xchg
jae
and
insl
repnz
jne
in
jae
and
dec
adc
cmp
dec
shl
mov
adc
fdivl
pop
outsb
nop
adc
sahf
push
mov
out
add
lcall
daa
movsl
fisubrs
inc
mov
push
xchg
ficomps
iret
out
stos
inc
lds
mov
negl
fisubs
shrb
or
push
mov
jnp
push
subb
mov
popa
loop
xor
or
mov
xchg
mov
sbb
movsl
sbb
add
or
pop
int
cmp
xchg
outsl
jnp
std
add
enter
les
lahf
mov
and
add
or
in
add
in
rcrb
cmp
xlat
pop
mov
into
out
mov
mov
pop
das
out
enter
adc
lods
push
mov
add
mov
bound
sbb
call
or
aaa
mov
jno
sub
test
repz
mov
cmpb
test
es
jg
mov
mov
out
sahf
ds
pop
jge
lahf
mov
shlb
add
cwtl
xchg
dec
cltd
mov
dec
jg
jecxz
jo
xchg
adc
xchg
fwait
fwait
aad
shl
adcb
mul
sub
jae
fnstsw
jnp
mov
xchg
pop
mov
js
lret
push
xchg
aad
cwtl
mov
adcl
into
pop
loopne
or
adc
loope
imul
loop
push
popf
lret
xor
in
mov
lods
xchg
jb
testb
orl
mov
ret
fidivs
insb
mov
imul
jle
sahf
int3
jmp
fistpl
dec
adcl
cmpsb
fwait
xchg
xchg
jb
negb
loop
shll
or
sahf
dec
scas
push
movsb
in
cwtl
dec
xchg
testb
shrl
lds
jae
stc
mov
pop
mov
or
pop
push
lock
loop
cmp
jg
cmp
adc
add
lea
sarl
cld
out
andl
cmp
or
notl
cmp
cmpsb
sub
cmpsb
adc
push
sub
call
sub
jb
xchg
pop
jmp
ret
jmp
pop
mov
lock
xchg
fstl
pop
jb
fdivrl
cmp
inc
out
outsl
or
push
cltd
pusha
negb
push
bnd
xchg
sbb
mov
cmpsb
dec
push
sahf
xor
fdivrl
pushf
rcrl
fisttpl
push
mov
pop
rclb
xor
cmpsl
push
clc
pop
sbb
and
jnp
push
dec
aas
mov
jnp
popl
sub
or
xlat
stos
jecxz
dec
xchg
pop
add
pop
mov
xchg
or
mov
jb
or
jae
negl
cmp
adcb
mov
adcb
cwtl
flds
push
lcall
outsb
mov
imul
dec
pop
mulb
insb
in
rolb
nop
push
dec
add
lret
xor
mov
int
push
xchg
outsb
sarb
push
movsl
aas
mov
loope
jg
or
jae
add
iret
xchg
pushf
mov
and
cmc
adcl
pop
sbb
or
subl
jp
or
push
sub
pop
dec
stos
jae,pn
xor
cltd
scas
xlat
ja
mov
jmp
cmpsb
std
sti
pop
in
negl
subl
or
jne
scas
or
arpl
or
int
mov
icebp
dec
sub
sub
sti
imul
imul
cld
stc
call
xchg
enter
mov
outsl
cmp
pop
add
inc
add
push
fisubl
aas
lods
mov
subb
xlat
mov
jmp
test
mov
jne
popf
test
pusha
fadd
mov
in
hlt
std
jns
and
push
adc
movsb
adc
mov
cld
lcall
clc
test
scas
pop
lds
add
jle
jge
lret
loopne
push
inc
adc
dec
test
pop
movsl
inc
ljmp
icebp
push
fs
cld
addr16
je
and
movsl
pop
in
sbb
shll
inc
mov
filds
sbb
jns
out
lock
dec
bound
loope
jb
sbb
outsw
gs
pushf
lcall
push
insb
mov
addr16
jbe
jp
sub
cli
inc
mov
lods
jno
les
repz
les
mov
icebp
dec
xor
loop
jne
jmp
aam
stos
mov
jb
lret
aaa
sub
inc
push
ljmp
in
jg
popa
gs
dec
int3
cwtl
mov
stc
xor
ficomps
push
xchg
test
mov
mov
pusha
add
insl
lods
inc
loope
je
push
add
ret
mov
xlat
push
in
test
inc
gs
jecxz
insl
jmp
repz
mull
cli
or
xor
mov
adc
je
call
mov
rcl
in
mov
lea
or
out
mov
lds
cmp
popa
rclb
les
add
pop
mov
dec
cmp
punpcklwd
repz
xchg
test
mov
gs
jg
outsb
sub
loop
push
jmp
loope
out
adc
jle
and
xchg
pop
imul
jae
xlat
dec
ja
inc
in
add
data16
fists
cmovns
ja
pushf
push
lcall
lds
jg
je
jae
rorl
out
inc
es
leave
icebp
movsb
sub
repz
cmc
mov
stos
shr
pop
and
call
repz
ds
movsb
dec
js
fsubrl
in
push
pop
sbb
and
push
push
mov
mov
gs
mov
fsubrp
cs
ds
ffree
xor
pop
adc
mov
xlat
jmp
cmp
repnz
ss
insb
aas
or
adc
mov
cld
xchg
mov
or
dec
push
inc
int
or
cmp
loope
xchg
cmp
pop
je
mov
jbe
or
cmp
aam
mov
xchg
movb
enter
xor
pop
add
xlat
sbb
xchg
negb
fbld
add
mov
mov
int
mov
sti
insb
jne
pop
inc
dec
sub
es
xlat
jbe
mov
shr
fdivr
xchg
sti
ret
cwtl
xchg
xorl
lea
fistl
pop
sbb
test
adc
or
rorb
ss
icebp
cmc
insb
xor
xchg
inc
imul
and
push
dec
mov
int3
mov
push
leave
je
dec
outsl
pop
inc
mov
pop
sbb
push
xchg
push
push
dec
or
mov
mov
cltd
loopne
sti
ficomps
add
sub
sti
xlat
mov
mov
mov
fs
push
pop
jmp
ret
xor
or
lahf
ljmp
hlt
int3
sub
repz
sub
ret
mov
arpl
mov
xor
pop
loop,pn
mov
shl
and
cld
or
jo
adc
add
outsb
aad
mov
mov
mov
cmp
and
pop
sti
nop
cmp
lret
aas
sti
inc
mov
sbb
loope
and
popl
inc
cltd
popf
push
xchg
xchg
popf
or
xor
mov
xor
lods
cmp
jbe
sub
push
cmpsl
fsubrl
cmpsb
add
and
sarl
in
xor
stc
xor
icebp
repnz
dec
movsl
xor
mov
sbb
push
mov
fwait
mov
sysexit
clc
sbb
inc
cmp
xor
sub
add
stc
scas
in
orl
icebp
adc
aam
push
stc
pop
jmp
sub
fdivl
cmp
add
lea
sub
adc
jl
aas
dec
cli
xchg
add
icebp
xchg
out
lret
push
push
data16
arpl
jge
dec
jp
xchg
testl
jne
and
in
lods
sub
aad
fs
js
xor
adc
das
cmp
dec
sub
sarl
fs
fdivrl
leave
xor
out
add
movl
xchg
inc
dec
lea
mov
movsl
in
and
xor
fimuls
adc
ret
dec
jp
rcll
adc
insb
push
fcoms
shl
pop
and
or
mul
call
sub
addr16
rcl
mov
aaa
jb
xor
scas
in
pop
int3
mov
pop
jmp
dec
mov
xchg
fbld
pushf
jne
fs
fwait
xor
jae
xchg
sahf
fisttps
jae
icebp
fs
dec
xchg
cmp
xchg
popf
xor
popf
mov
loop
js
push
sub
jmp
fs
pop
dec
push
leave
push
fsts
jo
or
cmpsb
popf
pop
xor
insb
iret
repz
dec
mov
cmpb
lock
mov
sub
lret
or
lock
scas
dec
mov
xor
adc
sahf
push
pop
sbb
fisubs
pushf
add
mov
add
std
fsts
add
fdivrl
icebp
aas
in
iret
in
dec
ret
js
enter
xchg
test
leave
std
shrb
movsl
mov
add
mov
cmp
test
xchg
xor
dec
dec
nop
push
or
int3
xchg
out
mov
mov
jbe
push
xchg
pop
lret
js
adc
shl
mov
mov
ret
lea
mov
add
mov
stos
scas
mov
insb
dec
and
pop
aad
mov
addb
mull
mov
adcl
movsb
addr16
add
adc
nop
cmpb
sub
xchg
xchg
jecxz
sub
and
subl
imul
mov
das
sub
movsb
inc
jle
and
jo
dec
popf
pop
and
mov
cmp
lahf
lea
bound
push
push
mov
out
inc
and
pop
mov
mov
inc
out
ror
dec
mov
enter
or
lret
xchg
test
fcmovnbe
out
icebp
add
shll
scas
mov
inc
mov
mov
fisubrs
in
fwait
pop
jnp
and
push
inc
push
fidivl
push
pop
xchg
dec
inc
and
call
pusha
jne
dec
jns
pop
stc
aas
mov
adc
jecxz
adc
jl
ret
mov
and
push
jmp
dec
fmuls
idivl
mov
and
mov
in
pop
mov
cmp
and
or
mov
add
ficoml
push
sahf
adc
fmuls
pop
mov
loop
fidivrs
xorb
mov
push
lahf
xor
inc
jno
and
into
jmp
mov
pop
cmp
hlt
ljmp
dec
push
mov
mov
in
es
add
sbb
pop
out
jge
outsl
push
imul
sbb
outsb
in
mov
push
stc
xchg
push
in
enter
aas
sahf
pushf
fidivrs
xchg
sub
pop
lods
lods
in
jns
inc
pop
cmp
dec
addr16
adc
fwait
sub
ja
ret
push
aam
jmp
xor
andl
mov
movntq
out
cmpsb
sub
ret
enter
xor
jg
ret
shrb
rcl
jo
push
mov
xchg
fwait
xor
xor
sub
sbbb
loopne
jae
cld
mov
sub
fmull
jge
jne
sti
add
or
adc
stos
mov
mov
mov
jno
mov
mov
sti
and
ja
cmp
push
ret
vrsqrtss
jg
aam
cld
cmp
je
pop
and
les
test
jle
ljmp
mov
and
inc
gs
dec
outsl
push
outsl
imul
fnstenv
insl
fimuls
lea
mov
iret
cwtl
imul
ret
icebp
pop
cmpsb
push
mov
lret
cld
push
and
sbb
add
stos
adcl
jo
popf
loop
clc
xlat
adcb
fisttpl
inc
ss
adc
xchg
push
ret
repnz
jge
pop
pop
lcall
out
sub
mov
cli
mov
das
or
sbb
xor
push
sub
sub
outsb
push
push
mov
dec
cmp
xchg
inc
mov
jns
add
leave
daa
jns
adc
lahf
shrb
xor
pop
data16
push
mov
or
or
lea
test
nop
sbb
mov
popa
fucomip
aas
inc
adc
mov
jmp
adc
cmp
mov
outsl
es
sub
push
orl
adc
or
scas
mov
shlb
add
add
outsl
cmp
push
iret
jne
lret
dec
inc
push
add
cli
vmread
pop
jae
or
in
lahf
jmp
sbb
push
addr16
xchg
leave
or
call
mov
and
idiv
xor
inc
andb
pop
mov
push
adc
add
mov
pop
xchg
cmc
lcall
fmull
stos
mov
fadds
addr16
xlat
leave
cmpsb
ret
sub
shr
enter
in
out
push
add
in
pusha
clc
push
sub
in
jnp
push
add
jo
xorb
mov
lds
push
outsl
push
xchg
xor
or
add
sub
sbb
pop
jo
cld
jae
jge
aaa
test
cltd
jle
cmc
rolb
movsb
in
mov
fistpll
loop
xor
cmp
test
mov
roll
gs
jge
idivb
cmc
sti
push
cmpsl
and
add
xor
sub
pop
test
mov
add
stos
and
sbb
dec
cmpb
mul
xchg
inc
mov
sub
inc
dec
dec
insl
sub
shlb
outsw
negb
mov
lret
fs
or
into
jp
adc
adc
xor
add
and
rclb
lea
rcll
imull
pop
stc
aaa
xchg
je
fldcw
inc
mov
inc
mov
mov
in
or
pop
xchg
fwait
aam
in
mov
mov
inc
cmp
sbb
xchg
rcrl
pop
or
inc
testl
push
mov
adc
pop
stc
push
add
cltd
sub
sbb
loope
fcoml
ds
andl
jno
shll
bound
test
lea
jne
fsubs
sub
in
cmp
hlt
xchg
inc
dec
push
icebp
movsl
xchg
push
test
lahf
out
adc
scas
adc
idivb
sbbl
dec
fiadds
push
sbb
mov
adc
adc
addr16
inc
cmp
ret
lret
xchg
mov
cmp
or
and
sub
push
test
leave
jns
bound
ja
push
mov
pop
cmc
fsts
sbb
rcrb
test
dec
add
pusha
sub
mov
fsubr
scas
mov
push
lds
repnz
cs
loope
call
aad
insl
sub
pop
stos
ljmp
xchg
or
icebp
adc
inc
add
push
dec
inc
rorb
and
push
aad
xchg
clc
pusha
lock
lock
scas
xchg
sub
js
fiadds
lret
sub
andl
and
lcall
add
in
into
jle
sbb
loopne
das
cltd
jecxz
jecxz
mov
test
push
icebp
and
cwtl
into
outsb
pop
jne
mov
lock
in
or
cmp
mov
cmp
sub
mov
mov
mov
out
sahf
int3
pop
scas
clc
rcrb
jnp
out
and
mov
hlt
or
bswap
pop
pop
and
push
adc
les
test
or
ffree
xor
lcall
scas
mov
mov
lret
sub
das
mov
sub
int
sahf
cmpsb
push
out
je
imul
fsubl
sub
sbb
in
mov
pushf
lcall
or
jb
cld
mov
aas
pop
icebp
cmp
or
mov
sti
mov
inc
in
xchg
push
jmp
mov
jb
add
rcr
xchg
ret
movsl
lahf
jge
lods
lea
dec
push
jo
dec
xchg
repz
movsb
dec
ret
imul
testb
jle
jecxz
out
push
xor
mov
lret
mov
loop
inc
fsubrl
pop
in
mov
and
pop
lock
mov
pop
mov
popf
ds
aaa
clc
into
lods
mov
imul
xor
push
pop
icebp
sahf
inc
cmp
rcll
adc
mov
sarb
xchg
adc
jb
fidivrl
push
cmc
push
int
dec
fs
cmp
movsb
or
int3
je
ljmp
inc
call
cmp
shrl
xchg
and
ja
fldln2
add
stc
pop
out
inc
jo
pop
andb
into
mov
sbb
xlat
xor
pop
adc
faddp
xlat
mov
pushl
mov
test
adc
mov
movsl
mov
test
xchg
rcll
inc
imul
out
test
lds
jmp
popf
sbb
cltd
rcrl
xchg
loop
cmc
dec
movsl
add
mov
je
mov
sub
jnp
cmc
cmp
add
in
into
mov
imul
mov
cmp
and
cmp
mov
aam
add
fisubrs
popa
and
adc
int
cmp
ja
sub
or
test
mov
sub
imul
dec
sti
push
pop
ja
push
xor
push
push
stc
fsubr
jae
cltd
and
mov
push
sub
nop
mov
test
imul
les
inc
pop
adc
rorb
test
mov
mov
shrl
imul
mov
clc
popa
fs
jle
movsb
fnstsw
mov
pop
xchg
call
aam
aam
cmc
push
cmpb
fiadds
or
push
outsl
int
xchg
mov
dec
movsl
dec
das
je
add
aaa
imul
mov
dec
sbb
pop
loop
cmpsl
mov
pop
or
lods
cmpsl
ds
sub
lahf
rol
push
xchg
mov
ret
push
push
mov
or
and
cmpsb
lahf
inc
lret
mov
pop
push
aad
dec
test
jno
popf
ret
add
cmpsb
mov
movsb
jns
lods
dec
pop
adc
insb
adc
sbb
mov
mov
fsubl
insl
and
insl
sub
push
mov
jge
sub
in
mov
inc
enter
xor
daa
and
addl
cwtl
mov
imul
or
jb
std
inc
ljmp
jae
jne
sbb
mov
pop
ja
fimuls
scas
push
out
mov
js
pop
push
xor
xchg
push
add
sub
mov
inc
cmpsb
jge
and
or
test
push
push
sbb
pop
insl
xchg
mov
push
adc
sbb
out
mov
and
pop
cli
rcll
aaa
mov
dec
aad
aad
mov
loop
push
inc
xor
mov
leave
lea
out
push
ja
pushf
push
mov
rorl
out
sbb
cmp
lods
inc
popf
cmc
xlat
cmpsb
dec
scas
lret
outsl
mov
les
sbbl
mov
jo
icebp
mov
pop
or
aad
int3
movsb
loopne
adc
repnz
xor
xor
insl
push
adc
mov
push
mov
outsl
repnz
and
push
iret
jle
in
iret
aad
testb
stos
addb
stos
popf
pop
ficoml
fnop
mov
aas
mov
shr
rcl
arpl
lods
mov
cmpsl
in
cmp
repz
push
es
lods
shl
dec
xchg
lcall
scas
dec
mov
dec
push
insl
mov
xchg
popf
std
pop
jge
dec
fsubr
inc
mov
xchg
xor
xor
icebp
out
lock
ja
stc
fcmovu
pop
shll
and
mov
loopne
arpl
cmp
sbbb
enter
pop
leave
movsb
divl
ret
sbb
enter
loopne
fistpll
add
pop
ja
scas
lock
pop
push
test
xor
pop
xchg
pushf
adc
pop
fists
adc
into
cld
push
das
inc
mov
mov
push
inc
out
stc
fbstp
jge
dec
les
orb
std
movsl
mov
dec
sbb
les
xlat
inc
adc
sub
outsl
cmpb
movsb
inc
cltd
lea
flds
jg
adcl
or
orb
mov
pop
or
loopne
pushl
inc
test
jl
pop
push
push
xchg
jmp
push
call
xchg
test
xor
and
and
retw
out
and
cmp
pop
push
and
imul
sub
mov
icebp
imul
sbb
out
xchg
gs
mov
leave
divl
lcall
dec
push
subb
icebp
lods
outsl
mov
lcall
push
mov
adc
in
sbb
mov
push
repz
mov
mov
mov
and
into
adc
imul
sub
sub
jmp
jns
or
loop
sub
push
push
cltd
inc
int3
inc
call
lea
movsb
push
add
arpl
mov
outsl
mov
cli
adc
mov
repnz
inc
aad
lcall
cmp
cmp
test
jmp
loopne
mov
or
mov
jo
mov
int
fcompl
insl
loopne
mov
sub
roll
adc
dec
and
in
mov
imul
aaa
fsts
adc
les
xchg
sbb
add
fdivl
push
rcl
mov
test
pop
sarl
shlb
lea
cmp
push
es
int3
add
xchg
lds
sub
cmp
int
mov
adc
iret
addl
xorb
incb
ss
scas
push
mov
in
sbb
fisubrl
mov
addr16
jne
mul
pop
push
decb
je
aam
or
rorb
or
icebp
ds
cmp
push
nop
outsb
dec
jne
push
sub
fstpt
sbb
push
fmuls
jmp
fimull
mov
in
mov
movsl
and
xchg
lods
jp
mov
jo
or
insb
leave
add
sahf
pop
int3
xor
cmpsl
cmp
orl
sub
mov
mov
xchg
add
sub
mov
or
pop
mov
rorb
dec
out
push
scas
adc
out
jle
es
ss
mov
lock
dec
pop
dec
cmp
add
xchg
adc
and
mov
push
cwtl
xor
xor
movsl
fistps
push
cmp
cmpsl
mov
int3
inc
add
idivb
xchg
pop
les
cmp
sub
aas
out
and
cmp
and
leave
enter
shlb
sub
int
mov
lret
cmp
js
mov
xchg
mov
dec
mov
mov
icebp
fsubr
cli
shll
add
lret
mov
sub
lret
lret
add
subl
sti
sti
imul
daa
pusha
stos
addr16
xorl
pop
or
es
test
call
mov
div
faddl
or
sub
inc
mov
mov
sbbl
add
lret
mov
pop
imul
lods
and
dec
insb
mov
movsl
test
loopne
mov
inc
cmc
xor
in
mov
xchg
ljmp
nop
incb
sbb
mov
or
fisubrl
fistps
sub
adcl
cmc
add
cmp
mov
or
popf
xor
pop
dec
movsb
push
adc
or
outsb
push
or
cmp
pop
push
inc
mov
add
mov
inc
call
insb
push
test
jo
sub
jmp
mov
test
in
push
mov
mov
lock
sub
push
mov
pop
loop
shr
sbb
cltd
stos
sbb
jno
aam
sbb
push
inc
lcall
rcrl
test
icebp
xorl
push
mov
mov
or
dec
xchg
xor
xchg
daa
insb
loopne
pop
mov
inc
inc
pop
push
es
push
into
imul
in
pop
adc
std
sbb
xor
add
push
dec
cld
lcall
loopne
aad
xor
adc
mov
cmp
nop
popf
add
jg
fildll
enter
or
data16
in
pop
hlt
xchg
or
aam
fucom
pop
add
loop
sbb
cmc
inc
or
iret
mov
xlat
cltd
cmc
mov
sbb
lahf
addb
ja
add
aad
push
lods
lret
clc
std
adc
ffreep
lret
popf
int
add
andb
out
mov
xor
xchg
ds
stos
test
mov
adc
xchg
add
in
shlb
aam
jbe
dec
ficomps
fwait
and
sbb
lret
inc
inc
push
arpl
xor
fidivl
mov
mov
xlat
shll
inc
mov
icebp
mov
mov
iret
test
mov
sbb
fimull
nop
jp
pop
xorl
shl
mov
xchg
inc
call
rorl
out
xchg
and
scas
xchg
hlt
sub
les
xchg
add
hlt
mov
or
lods
mov
jo
inc
fstps
imul
mov
lods
out
dec
xlat
fisttps
sbb
roll
mov
mov
scas
add
ja
pop
push
pop
lret
in
outsl
repnz
mov
sub
fisttpll
inc
ljmp
mov
dec
incl
adc
pop
ds
push
daa
mov
add
push
pushf
mov
jp
icebp
testb
adc
add
sbb
jl
cvtpi2ps
ja
ret
xchg
cmp
xchg
mov
jmp
notb
sub
call
jg
push
stos
mov
lret
push
and
mov
roll
mull
push
gs
mov
leave
cmp
dec
jne
mov
add
sbb
adc
sub
aaa
in
jge
push
jae
shll
arpl
mov
and
movsl
pop
adc
pusha
jle
sahf
xchg
shl
out
push
or
in
rolb
jno
inc
xchg
and
cmp
mov
mov
mov
mov
or
inc
sub
imul
lcall
stos
ds
jae
add
push
cmp
pop
inc
mov
mov
fsin
leave
insb
or
jge
mov
cmp
sub
mov
mull
jmp
xorb
add
sbb
pop
les
jns
dec
sti
ss
fmulp
daa
or
cmp
movsb
subl
scas
or
movsl
sbb
dec
shlb
jg
xchg
insb
xchg
fidivs
xorl
push
cmp
add
pop
push
xor
imul
xchg
in
add
out
cltd
aam
xor
das
out
push
ret
out
fwait
insb
jns
nop
dec
pop
aad
inc
inc
mov
sahf
mov
sbb
es
push
xor
hlt
fiaddl
clc
out
dec
push
movsl
jecxz
and
xchg
lods
out
mov
and
loope
dec
add
inc
pop
xor
mov
test
mov
and
dec
fdivrl
mov
mov
dec
pop
rclb
lea
rclb
imul
out
xor
mov
adc
pop
xchg
and
adc
outsb
lods
rolb
adc
out
xlat
in
mov
loope
sti
mov
flds
mov
push
mov
ds
mov
mov
lret
mov
sub
cltd
add
pop
fmulp
cmp
iret
out
out
clc
test
repnz
push
sti
xchg
mov
stos
ss
insb
cmp
arpl
mov
and
inc
mov
fisubrs
sub
pusha
into
mov
mov
mov
push
ret
aam
aaa
lret
in
lods
test
fs
bound
jb
and
pop
pop
pop
jp
cmp
pop
loope
out
mov
pop
dec
xchg
jge
ja
jp
stos
out
rcrl
mov
dec
clc
repz
sbb
or
sbb
pop
xchg
repz
pop
cwtl
lea
add
inc
sub
sti
push
mov
push
push
xchg
xlat
sub
add
repnz
dec
cmovbe
adc
sub
daa
ficompl
cmp
movsb
iret
popa
jle
add
int3
fldt
sbb
pop
mov
imul
pop
inc
dec
and
loop
add
mov
inc
cmp
mov
cmp
push
inc
pop
mov
int
mov
xor
outsl
cmp
jo
cwtl
ret
xor
bnd
lea
fcompl
shl
cmp
and
sahf
jl
outsb
mov
les
mov
cli
addr16
call
cwtl
pop
pop
enter
or
mov
inc
insl
add
in
das
jns
push
xchg
sti
jp
mov
mov
push
mov
rcl
sub
out
sub
cli
test
gs
and
mov
jle
mov
cmc
or
dec
das
outsb
stc
cld
fwait
xlat
pop
or
or
in
cld
inc
orl
pop
pushf
cmp
orl
adc
repnz
sub
lcall
stos
imul
stos
bswap
cmp
pop
cli
cmp
sarl
roll
pop
divb
fldenv
iret
lea
scas
cltd
push
sub
xchg
xor
pusha
popf
jl
sbb
or
les
movsl
push
cmp
adc
push
leave
push
push
or
cmc
loop
xchg
xor
scas
out
mov
sub
sarb
iret
data16
ret
xchg
lods
out
insl
ficompl
out
fidivl
mov
lret
inc
mov
xchg
lds
subl
push
push
sbb
cmp
iret
sub
aaa
or
addb
xchg
bound
insb
es
mov
cmp
rcll
and
rsqrtps
je
loopne
xor
dec
xchg
xor
add
lret
sub
push
movsb
pop
or
popa
mov
pop
lock
cs
pusha
out
nop
cmc
xchg
shlb
push
sbb
leave
mov
outsl
out
das
ds
xchg
xor
negl
loop
bound
dec
lret
cltd
shl
push
ss
xchg
mov
mov
push
push
mov
push
shr
xchg
shrb
sbbl
test
sub
dec
ljmp
xor
inc
ret
neg
mov
in
add
sbb
aad
or
sbbb
pop
mov
push
jle
mov
js
leave
push
adc
aas
test
in
mov
out
dec
sub
enter
insb
outsl
imul
xlat
inc
es
sub
aas
inc
cs
push
sti
sbb
fidivrs
inc
loopne
xchg
bound
lahf
xchg
mull
sbb
push
mov
cwtl
nop
xor
iret
xor
dec
pop
mov
dec
ficompl
lret
sbb
lods
mov
mov
mov
call
cmp
popf
aaa
push
sahf
fstpl
mov
adc
test
jo
push
daa
rclb
sahf
sbbl
clc
dec
inc
push
push
in
test
jno
mov
sub
aam
sbb
loope
test
fwait
pop
in
repnz
ljmp
cmpsb
mov
aas
cmp
fsub
cli
xor
inc
add
cmpb
cwtl
or
inc
hlt
jne
test
jnp
pop
xor
in
jo
insl
addr16
sub
fwait
aam
stos
push
jmp
push
push
push
xchg
xlat
jmp
mov
jecxz
in
jp
dec
lcall
sub
jecxz
cld
test
sbb
sub
xchg
xchg
cmp
lock
dec
in
les
shl
mov
mov
leave
ljmp
mov
in
fiadds
dec
int3
ret
sub
add
iret
lds
xchg
stc
stos
xor
adc
adc
xor
popa
fwait
push
mov
imul
mov
pop
xlat
outsb
scas
das
data16
xchg
scas
dec
sub
rclb
pushf
dec
aas
in
push
jnp
dec
or
lods
fwait
inc
movsl
out
xchg
sub
pop
int
enter
aam
mov
hlt
cmpsb
cmc
inc
cmc
pop
ret
ljmp
cmpsb
mov
bound
call
xor
stos
outsb
pop
rorl
mov
xchg
call
ret
cwtl
loop
sar
stc
daa
out
ret
jmp
fcmovnbe
lods
xchg
mov
loopne
and
imul
int3
jnp
inc
adc
fdivr
mov
push
sbb
sub
addr16
sub
sbb
or
stc
mov
or
test
fimull
and
mov
cld
xchg
ror
ja
lret
ret
add
xchg
in
fs
jbe
pop
inc
test
mov
mov
stos
loopne
insl
push
inc
add
and
xchg
aas
test
mov
rclb
sub
pushw
cmp
fisubrl
cli
repz
stos
popf
es
pop
ja
mov
jnp
mov
pop
mov
idiv
test
mov
jnp
shlb
add
addr16
adc
sahf
jg
das
cld
scas
or
dec
jge
inc
xor
repz
push
xchg
mov
push
or
sub
in
push
pop
pusha
mov
mov
cmp
mov
dec
rclb
or
js
jecxz
fs
or
cmc
lret
add
lcall
lahf
into
imul
push
pop
cmp
xor
push
frstor
mov
ljmp
adcb
xchg
out
icebp
in
pop
test
int3
notl
mov
cmpsl
mov
push
out
mov
aaa
pushf
lahf
mov
scas
movsb
int3
push
xor
test
stc
xchg
ret
and
mov
lock
adc
sbb
dec
add
mov
mov
negb
inc
sub
lods
dec
push
loopne
mov
jb
pop
xor
test
jecxz
std
mov
arpl
xchg
dec
inc
mov
aam
orl
repz
sub
stc
add
je
aaa
pop
out
cli
ja
out
mov
in
mov
jns
sahf
inc
mov
arpl
in
cmpsl
leave
jmp
push
mov
movsl
and
jno
add
mov
push
clc
and
xchg
test
fs
push
std
into
lods
xchg
xlat
imul
add
mov
or
pop
pop
rcr
inc
testb
dec
leave
sbb
mov
adc
cwtl
push
fisubl
push
in
adc
pop
popa
xchg
jge
dec
shll
fs
imul
mov
out
addr16
dec
stc
cmc
repz
outsb
adc
ret
les
repz
mov
loopne
cmpsb
ljmp
int3
sub
lret
xor
arpl
inc
push
fdiv
ja
lock
mov
test
aad
push
outsb
cs
lcall
faddl
mov
pop
inc
insb
or
inc
in
jge
pop
xor
aad
call
pop
mov
mov
ud1
adc
in
stos
push
test
sbbl
pop
jle
or
test
test
jno
rclb
mov
cmovo
xor
mov
mov
aad
jae
lret
sub
insb
jns
sbb
sbb
pop
adc
rcll
addb
sarb
inc
addr16
mov
rcr
mov
mov
ds
stos
aad
inc
mov
jle
fstps
and
dec
nop
and
fxrstor
mov
loope
xchg
ss
sub
enter
xchg
add
push
mov
mov
or
push
add
icebp
pop
jge
fmulp
scas
test
sbb
stc
movsb
std
cmp
pop
sbb
jge
imul
loopne
in
int3
xchg
mov
mov
inc
fcompl
pop
mov
xchg
lods
push
aam
jmp
das
daa
add
mov
dec
push
bound
leave
adc
or
rcr
mov
in
lods
sbb
xchg
les
cmp
nop
mov
fwait
loope
into
push
in
or
loop
in
lods
std
push
pop
xchg
cwtl
pop
or
pop
int3
fisubrs
jno
rorb
lds
js
add
inc
adc
xchg
mov
xchg
pusha
xlat
cmpsb
lahf
mov
sbb
dec
dec
mov
pop
shl
test
clc
out
stos
sub
into
xor
xchg
addb
xchg
mov
or
iret
out
add
mov
mov
push
pop
inc
cmc
mov
mov
pop
outsb
mov
sub
mov
xor
jmp
adc
xor
xchg
iret
in
repz
daa
ljmp
leave
xor
out
push
mov
sbb
mov
das
aad
out
jp
adc
js
mov
xlat
sbb
push
mov
out
out
inc
cltd
xchg
shll
notb
or
pop
xor
popa
xlat
ficomps
cmc
xchg
cld
fbstp
std
scas
leave
xor
sar
lock
xchg
repz
push
xor
push
mov
imul
cmp
or
movsl
test
mov
push
orb
mov
jae
sbb
inc
xchg
iret
jle
cmc
test
lods
adc
push
or
inc
push
cmp
insl
fistps
ds
dec
jmp
mov
xchg
xchg
ss
das
lcall
mov
sarb
pop
mov
lret
outsb
shll
cmc
cmp
or
or
in
out
cld
pushw
and
adc
xchg
inc
scas
adc
test
mov
ret
and
scas
jp
adc
mov
jb
inc
mov
mov
ss
mov
jae
mov
add
iret
add
pop
bswap
pop
daa
int3
movsl
mov
aas
ret
jo
xor
or
jecxz
mov
pop
inc
loopne
inc
int
scas
mov
dec
bound
mov
inc
and
mov
or
int3
push
mov
pushf
adc
jb
dec
jae
mov
stos
mov
adc
aas
incl
push
or
fcomi
sub
xlat
sbb
js
and
jmp
pop
dec
jbe
fidivrs
lock
mov
test
mov
aas
dec
adc
xchg
xor
lret
xor
mov
enter
nop
fisubl
notl
cs
popf
adc
inc
fdecstp
int
lahf
dec
fwait
jo
test
or
push
push
lret
add
shl
flds
pushf
sub
sbb
lock
in
stos
or
dec
rcl
movsb
inc
jnp
jle
negl
inc
mov
sub
cs
xchg
jecxz
adc
lock
cmp
rcll
test
stc
fwait
or
cmp
xchg
test
mov
stc
gs
ss
mov
cmp
lock
aaa
sbb
sbb
cmpsl
xchg
mov
pop
fldenv
pop
inc
fists
xchg
repnz
mov
pcmpeqd
imul
lock
mov
adc
fldenv
pop
mov
stos
bound
mov
push
shl
push
les
push
test
inc
xor
sbb
popa
ja
pop
sub
cwtl
jge
call
mov
add
jl
adc
lock
pop
mov
inc
gs
jno
dec
mov
je
loop
sub
rorl
mov
bnd
push
cmp
imul
xchg
add
jle
adc
in
bound
pop
repz
pop
push
mov
leave
or
nop
inc
dec
sub
movsl
imul
xor
jmp
sbb
stc
mov
cmp
dec
jp
ret
test
jecxz
shrl
cmpsl
fidivs
mov
jae
cmc
out
add
adc
add
jne
pop
xchg
mov
lret
push
arpl
mov
sbb
stos
sub
mov
jle
push
ficompl
or
add
or
loop
cld
sub
or
rol
sub
out
jo
or
ja
pop
lds
mov
gs
mov
jae
sub
leave
incl
or
pop
mov
dec
jle
and
mov
add
aaa
imul
pop
xor
push
mov
mov
mov
jmp
mov
cmpsl
push
rcll
sbb
push
mov
mov
mov
cli
jge
adc
repz
sbbl
fisttps
enter
xlat
cmpsb
pop
cwtl
cmp
dec
adc
mov
icebp
adc
and
lcall
nop
insb
or
lret
aad
jge
push
jge
mov
icebp
es
jnp
push
sbb
and
lahf
xchg
push
lods
outsb
mulb
out
pusha
leave
adc
cltd
aam
and
mov
mov
adcb
insl
jecxz
or
enter
add
fisubs
adc
mov
fwait
adcb
lods
das
std
adc
adcb
dec
xchg
pop
dec
in
cmp
inc
jb
arpl
cli
inc
push
fcmovnb
shrl
mov
bound
hlt
not
xor
inc
xchg
mov
in
xor
dec
xor
adc
jl
push
mov
or
push
clc
test
dec
fs
adc
lret
sbb
sti
aam
jmp
stos
push
mov
in
les
fwait
jge
lds
outsl
dec
pop
mov
js
jb
dec
cmp
push
imul
and
test
aaa
dec
xchg
xchg
adc
or
sbb
mov
inc
sbb
cld
cld
test
ficompl
popa
push
adc
xor
int3
movsb
iret
mov
xchg
data16
push
mov
fildll
outsb
lcall
lock
das
sbb
stc
aaa
call
mov
popf
fmull
lea
mov
push
jge
inc
push
sti
daa
test
jmp
jno
and
sub
mov
inc
cmp
test
jbe
jl
dec
gs
out
cmp
add
cmpb
rcl
jnp
aaa
std
mov
jbe
sahf
xor
xchg
pop
adcb
int
pusha
repz
mov
sbbb
in
sub
pop
pop
mov
lea
popa
aas
push
mov
mov
test
cmc
inc
les
in
xrelease
ret
bound
mov
gs
test
aad
inc
mov
loope
das
addr16
lret
cmp
lahf
and
leave
cwtl
incb
insb
repnz
bnd
or
pop
repz
out
mov
fwait
cmpsb
outsb
pop
xor
fisttps
ljmp
enter
mov
push
pop
adc
shrb
push
sbb
sbb
and
mov
adc
and
repz
xor
jecxz
jns
mov
xchg
jne
jmp
mov
test
lds
sub
lahf
and
pop
lods
je
or
cmp
add
das
mov
pop
es
jnp
sbb
inc
movsl
xchg
js
aas
pop
scas
in
call
outsl
lods
inc
and
cli
pop
out
imul
cs
in
adc
xchg
inc
sub
sbb
inc
mov
xchg
pop
aam
sub
xor
int
mov
out
addl
xor
push
mov
lret
nop
push
cld
cwtl
das
sub
imul
fsts
sti
or
sub
mov
pusha
ds
xchg
cs
popa
lret
aam
cmp
dec
outsl
xchg
xchg
sub
sbb
pop
dec
xchg
fstpt
daa
iret
inc
dec
mov
inc
call
jle
movsb
push
testl
aam
rorl
lea
cmpsl
out
jge
mov
inc
jo
mov
lret
jnp
dec
ret
loop
add
je
push
hlt
inc
imul
jmp
mov
jp
pop
inc
dec
mov
sbb
jge
push
icebp
lret
sbb
rorl
mov
icebp
fisttps
adcb
ljmp
fs
mov
sub
cmp
pop
andl
aas
mov
mov
push
sbb
pop
xlat
mov
mov
fnsave
rcll
adc
rorl
daa
push
mov
mov
rcr
dec
sbb
mov
adc
xor
stc
push
xor
in
aad
pop
mov
or
mov
movb
out
adc
inc
fdivl
incb
cwtl
sub
fsts
js
shrl
in
pushf
incl
add
test
and
sub
rcrl
mov
dec
test
jno
dec
stc
mov
pop
cmp
cmp
sbb
sbb
add
jecxz
sub
inc
xor
sbb
mov
push
sub
mov
jae
sbbl
and
mov
dec
fwait
and
mov
fwait
sbb
dec
jns
shlb
mov
in
jnp
gs
ja
stc
pop
pop
dec
pop
mov
xchg
sub
dec
mov
out
dec
fldenv
fmul
pop
jnp
or
insb
shll
fsubl
push
clc
pop
mov
data16
dec
in
insb
fiaddl
popf
inc
mov
out
rcrb
sub
mov
out
adc
fldenv
pop
je
loope
mov
cmovp
lahf
cld
shrb
testl
sar
push
push
xor
fisttps
repnz
pop
xor
pop
sub
lods
mov
lock
jnp
data16
leave
push
pop
in
pop
jg
int3
fisttpll
shrb
int3
out
lcall
hlt
push
mov
dec
mov
stos
mov
movsl
jnp
sub
sahf
ret
cs
jo
xchg
fcomi
ja
ret
mov
mov
sahf
push
rorb
fisubs
outsb
inc
pmullw
mov
sbb
push
cli
or
idivl
jmp
ljmp
pop
ljmp
cmp
mov
push
into
mov
lret
mov
add
pushl
push
mov
loop
xor
gs
mov
std
sbb
sarb
aad
xchg
pop
insl
je
jnp
mov
push
out
mov
lret
aas
popa
or
cld
push
dec
lock
cmp
xchg
pop
push
mov
addr16
lret
icebp
dec
jle
pop
adc
cmc
pop
fwait
add
lret
xlat
movl
mov
pushf
out
lock
jae
loope
mov
jmp
shrb
lcall
mov
mov
and
sbb
sub
cmp
sbb
pop
das
dec
inc
push
mov
sbb
cmp
push
jne
movsb
push
rclb
roll
adc
int3
cmp
jp
sbbl
sub
or
imul
shlb
test
pop
push
pop
ljmp
jno
pop
sbb
sbb
icebp
add
xchg
loopne
ss
mov
aas
pop
shll
inc
cmp
loope
jmp
push
dec
call
add
mov
push
xor
stc
jbe
pushf
adc
dec
xlat
inc
cli
sbb
dec
rol
mov
jmp
sub
in
in
aas
fdivp
scas
inc
je
cmp
test
inc
sub
add
xor
mov
daa
fs
xchg
jl
insl
incb
enter
push
xlat
stc
faddp
ljmp
subl
sbb
push
imull
xchg
dec
and
mov
into
imull
dec
gs
movsl
xor
inc
inc
add
push
loopne
popf
fmul
push
scas
xor
adc
scas
xlat
repnz
arpl
repnz
mov
xchg
mov
repnz
adc
dec
jae
pop
jle
xchg
xchg
mov
outsb
mov
addr16
and
jge
fsubs
xchg
std
inc
fs
mov
xchg
mov
push
push
notb
jl
adc
dec
and
iret
imul
loope
cli
dec
xchg
enter
test
add
in
fs
push
adc
and
mov
adc
pop
ljmp
dec
cmp
xor
add
and
icebp
or
into
add
iret
ljmp
fdivs
scas
test
adc
fidivs
icebp
cli
sar
mov
mov
jnp
pop
sub
inc
data16
stos
mov
xor
rorl
xor
xchg
fs
cmp
pop
stos
filds
cli
rorb
icebp
cld
push
mov
mov
push
test
lcall
jne
inc
push
idivb
mov
xor
fisubrs
mov
loope
mov
insb
rcrb
dec
sub
sbb
insb
push
push
mov
jmp
subl
test
fmull
mov
roll
insl
push
xchg
dec
movsl
adc
lock
push
and
addr16
fwait
and
insb
testb
cs
hlt
sbb
mov
orb
xchg
pop
add
xor
sub
fldcw
xchg
or
mov
mov
push
scas
loope
jecxz
movsl
filds
ss
popa
lret
and
out
mov
cltd
ds
mov
andl
mov
sbb
ds
daa
mov
jbe
sub
lods
cmpsl
push
scas
sub
or
jbe
xchg
popl
into
mov
adc
sti
cmp
dec
push
stc
adc
adc
scas
xlat
das
sbb
cmpsb
bound
inc
xchg
iret
add
sbb
sub
fmull
xchg
scas
mov
scas
test
rep
clc
cmp
and
or
and
fwait
jmp
and
dec
cmp
mov
jmp
xor
xchg
mov
insl
repz
adc
lods
ja
push
ja
push
and
popa
pop
dec
stc
out
add
loop
pop
fdivrs
mov
xchg
push
cld
mov
scas
or
addr16
cmp
shlb
fcomi
in
pop
mov
and
or
jl
lcall
sbb
ret
jno
mov
insb
and
jp
pop
daa
pop
mov
dec
pop
mov
xchg
adc
inc
pop
xchg
mov
cmc
pushf
daa
sub
or
dec
lahf
xchg
xchg
repz
sbb
pop
hlt
lods
std
push
repz
ret
loopne
jecxz
ret
hlt
out
xchg
sbb
repz
jg
xor
push
cwtl
xchg
xchg
ljmp
pushf
roll
rcr
adc
rcll
call
hlt
cmp
push
lods
subl
mov
incb
and
xchg
pop
shll
out
rorb
sub
mov
dec
cmp
popa
sahf
add
dec
jns
adc
aas
dec
mov
fiadds
mov
lods
xor
leave
fidivs
pop
jae
jns
sbb
cmp
push
or
mov
or
mov
add
pushf
xchg
call
bound
pop
mov
jecxz
mov
add
xor
inc
cmpsl
pop
xchg
daa
mov
push
mov
push
aad
testb
sub
inc
mov
fs
lods
push
jo
mov
pop
lret
lods
leave
repnz
xchg
lods
inc
jecxz
mov
std
lock
fcompl
sub
pop
cmp
outsl
into
andb
cld
cmp
aam
lods
loop
cwtl
xor
adc
sub
xchg
mov
les
mov
iret
int
or
mov
jmp
cmp
test
mov
repz
and
jl
cmp
mov
mov
divb
in
xlat
lds
pop
mov
das
out
insl
rcr
and
xchg
adcl
mov
push
mov
inc
fildll
inc
lods
fsubr
inc
test
or
orb
cmpsb
and
lock
fwait
jge
hlt
jle
lea
aaa
or
xchg
xor
lock
mov
pop
xor
sub
lods
mov
ljmp
mov
add
addl
adc
jle
fsubrs
xorb
jo
inc
xor
jg
pushf
arpl
adc
pop
cltd
cwtl
cld
inc
fwait
in
jno
mov
pop
xchg
ret
pop
jg
fsubrs
lret
test
js,pn
mov
stos
loop
jp
jno
sti
xchg
popf
pop
adc
nop
sbb
cltd
push
fisttps
add
jo
xchg
or
out
pminub
dec
inc
cld
mov
pop
mov
mov
mov
sahf
adc
jecxz
or
adc
syscall
xor
pop
leave
xor
cmp
mov
sti
stc
jge
ficomps
dec
push
sub
stos
outsl
out
insb
xchg
mov
push
popa
pop
or
sbb
cmpsb
jnp
hlt
imul
xchg
add
mov
jae
cmp
js,pt
sub
test
or
int
shl
inc
jb
sbb
xchg
cmpsl
dec
das
fidivrl
mov
xlat
test
sbb
jecxz
mov
mov
mov
fwait
dec
rolb
mov
mov
dec
xchg
bound
fldcw
out
xor
cmp
es
jbe
inc
xchg
fistps
dec
or
imul
rclb
sahf
add
inc
jo
pop
data16
inc
enter
inc
rorb
jo
jo
aad
sti
call
std
cmp
mov
fildl
mov
dec
or
adc
or
sbb
sbb
jge
fists
int3
loopne
or
or
lods
jl,pt
nop
sbb
jp
xor
icebp
lahf
adc
push
mov
addr16
mov
adc
pop
jnp
int
add
sarb
add
test
filds
dec
xchg
daa
test
mov
sarl
jno
fcomip
or
pop
inc
out
pusha
mov
sbb
dec
mov
fldl
les
pushf
gs
lods
mov
outsb
push
mov
xlat
daa
pop
sarb
lahf
cmp
add
pop
sub
test
fidivs
sbb
loop
outsb
hlt
repz
or
mov
lods
dec
je
push
push
jb
stos
xor
push
push
fcmovu
xchg
xor
jb
rol
push
aam
mov
dec
xor
repz
repz
dec
mov
sbb
mov
sahf
sbb
fsubl
repnz
imul
mov
sub
inc
adc
or
sahf
das
stos
push
lret
xor
cld
fcoml
ja
mov
and
xchg
rcrl
js
imul
jge
ja
mov
addb
in
pop
mov
jg
sub
or
in
inc
cmp
adc
sbb
xchg
imul
adc
and
inc
dec
out
rcrl
scas
dec
shrl
ret
sbb
push
jp
std
shll
push
cmovae
rcll
es
xchg
das
mov
sbb
xchg
inc
xorl
movsl
xchg
sbb
mov
cli
ror
je
lds
bound
popa
outsl
pop
cmp
add
pop
xor
sub
mov
sti
and
adc
aaa
pop
mov
hlt
or
int3
mov
pop
add
pop
add
sbb
stc
add
dec
pop
dec
pop
jo
dec
rcll
cmpsb
cli
xlat
arpl
inc
out
stos
movsb
loop
jns
popf
xchg
cmp
aam
xchg
iret
xor
js
mov
or
jb
fs
or
add
xor
loop
or
dec
xor
or
ja
inc
repnz
fyl2x
int3
sbb
sbb
fs
mov
jne
push
mov
sahf
sbb
adc
lds
inc
mov
pop
stos
movswl
jb
cs
data16
enter
dec
mov
outsl
loopne
out
jnp
pop
pusha
lret
ret
mov
ss
sub
inc
lret
xor
fldl
test
inc
xlat
orl
jne
je
mov
mov
jo
out
xchg
xchg
testb
cmc
and
imul
in
push
ja
jno
xor
add
stos
js
or
xchg
ja
mov
mov
jo
sbb
push
mov
xchg
bound
das
stos
fisubrl
aam
xor
mov
add
orl
fs
in
add
cmp
or
sbb
push
and
aas
dec
loopne
bound
jns
stos
sbb
sub
xchg
mov
mov
mov
jo
out
push
fadds
sub
sbb
or
xchg
aas
je
std
or
sub
pushw
aam
pop
push
aad
andl
mov
xchg
loop
ss
lret
sbb
out
add
scas
aam
pushf
or
xor
outsl
adc
popf
stos
std
lcall
loopne
add
mov
add
cwtl
and
pop
fisttpll
fcomps
test
push
cmc
dec
jmp
in
clc
inc
pop
pop
dec
sahf
inc
test
jg
and
pop
subw
xor
iret
dec
mov
addr16
sub
cmp
jne
cmpsl
adc
addr16
and
sub
inc
insl
clc
clc
int
iret
xor
dec
pushaw
cmc
mov
mov
jge
sub
sbb
leave
cmp
mov
shrl
enter
and
cmp
add
push
xchg
shll
sbb
shlb
filds
push
push
aam
aas
idivb
or
sbb
stc
add
in
xchg
cmc
adc
sbb
inc
pop
nop
in
pop
cmpsl
jmp
std
gs
rcrb
push
push
repz
je
pop
xchg
sub
mov
arpl
iret
or
stos
xchg
sbb
sub
pop
loopne
fmull
fidivs
and
adc
mov
imul
xor
insl
cmp
in
fcmovnb
add
add
xchg
lahf
out
pop
jmp
loopne
fwait
pop
pop
cmc
sbb
sub
inc
add
cwtl
pop
mov
inc
push
push
test
or
mov
jmp
cmp
mov
adc
adc
jge
cmp
xchg
mov
dec
sub
inc
inc
es
jo
jne
sub
inc
imul
xchg
stc
daa
cmpsb
dec
cli
cmpsl
mov
sahf
mov
roll
mov
pop
out
xor
mov
rcr
mov
lock
dec
adc
insb
imul
mov
adc
pop
xor
lods
sub
cmp
pop
inc
imul
mov
cs
loop
inc
or
push
mov
jb
mov
cwtl
pop
sub
sub
clc
loop
mov
xor
push
test
pop
dec
inc
hlt
shr
leave
mov
fildll
lock
cmp
xchg
ficoms
inc
jmp
adc
cmp
shr
loopne
add
xlat
add
xchg
adc
lea
pop
lret
popf
jmp
mov
adc
pop
scas
jb
nop
xor
sub
pop
movsb
mov
pop
sarl
mov
fistl
popa
inc
dec
adc
inc
jmp
add
mov
dec
push
mov
ror
inc
inc
pop
add
cmp
cmc
ret
jbe
xchg
add
fistl
xor
lock
xor
movsl
push
sub
pushf
js
cmpsb
fldcw
dec
add
xor
xor
push
inc
addl
cmc
leave
xchg
sarb
bnd
pop
pop
shll
mov
xor
xor
mov
stos
leave
xchg
and
sub
in
inc
subl
pushf
int3
pop
xor
dec
jmp
divl
or
shlb
sarb
push
lcall
inc
jmp
mov
add
inc
pop
sub
fisubs
and
mov
or
xchg
aam
in
sub
rol
jne
nop
imul
push
in
fcomp
mov
mov
addr16
pop
into
dec
ja
xchg
mov
or
punpcklbw
mov
into
arpl
pushf
jne
mov
sub
pusha
gs
insb
jbe
mov
xchg
mov
add
ret
fidivs
pop
pop
fs
ljmp
push
and
mov
clc
mov
iret
lret
cmpsb
ror
vprotw
or
jno
mov
xor
int3
inc
push
add
sub
mov
lret
jle,pn
fdivrs
rcll
pop
cld
cltd
lea
iret
lahf
es
pop
loopne
or
lds
sbb
pop
int3
and
push
or
jmp
inc
xor
and
push
ljmp
xor
jg
xchg
nop
dec
push
roll
jbe
mov
or
ja
dec
adc
aam
fstps
sarl
xor
pop
imull
shr
loope
dec
test
inc
in
repz
add
roll
or
push
outsl
fcoms
inc
xor
pop
mov
stc
mov
loop
sub
mov
mov
rorl
shl
js
push
and
inc
divl
mov
or
stos
push
and
mov
jno
cmpsb
loopne
mov
sahf
mov
cld
or
inc
cmp
pop
mov
push
in
inc
call
inc
xchg
mov
data16
test
aam
pop
xor
ret
dec
pop
inc
scas
xchg
cmpl
push
xor
adc
cmp
mov
hlt
cmpsb
js
dec
xchg
jg
ljmp
xor
lea
hlt
sbb
sub
pop
mov
sub
add
addr16
repnz
jns
dec
popf
xor
iret
repz
push
repnz
jmp
mov
sbb
test
cmp
aaa
stos
jne
mov
and
lea
push
dec
lcall
cmp
leave
jmp
mov
xor
pop
stos
int3
pusha
mov
sbb
inc
loopne
cmc
cmp
aas
into
fisttpl
adc
jmp
fisubrl
adcb
cmp
inc
cmp
mov
aas
mov
cmp
out
push
aam
subb
or
pop
shlb
test
xchg
sub
sbb
dec
repz
jnp
ret
scas
push
sub
push
lods
add
lret
shlb
adc
xor
imul
dec
int3
into
aad
imul
lahf
inc
loope
icebp
inc
sub
xor
push
mov
frstor
punpckhdq
addr16
inc
hlt
sbb
subb
cmpsb
rorb
bound
adc
and
aam
push
int
jo
stos
or
or
test
int3
xlat
and
loopne
daa
aam
jle
lds
sbb
xor
fldt
lcall
mov
sbb
fdivs
je
mov
jb
xor
negb
push
lcall
negb
sub
jnp
mov
test
or
lcall
jb
lock
sbb
addl
sub
dec
sbb
push
xchg
stos
cmp
lock
and
and
das
push
push
mov
gs
pusha
xchg
pop
dec
cmpsl
push
or
repnz
pop
imul
cmp
pop
or
mov
lods
cs
inc
test
jmp
mov
ss
push
cmp
scas
arpl
div
call
stos
outsl
ret
clc
movsl
pop
sbb
and
pop
push
mov
out
rcrl
adc
xorl
out
fimull
xor
cltd
pop
or
pop
shrl
leave
int
dec
mov
test
in
jecxz
dec
xchg
mov
sbb
sahf
push
xchg
jne
mov
lods
inc
jmp
mov
xor
lock
shl
aad
sarl
test
in
inc
js
test
sub
addr16
xor
mov
and
les
mov
or
sbb
or
ret
out
cmp
lods
popf
popf
lods
mov
fdivs
lret
mov
into
je
push
inc
xchg
pop
std
cmp
bound
shrl
jecxz
inc
and
adc
jae
ficoml
fs
scas
cmp
stos
aam
rol
xchg
ljmp
pop
sub
dec
out
xchg
lret
mov
sub
arpl
ficompl
and
push
movsl
inc
in
mov
iret
inc
clc
xchg
jp
add
mov
iret
and
bsr
sub
sbb
or
inc
pop
adc
jne
fmuls
pop
ss
shrl
je
inc
insb
dec
push
push
ja
decl
arpl
pop
jle
mov
les
xor
mov
xchg
int
and
leave
ja
aam
mov
inc
add
mov
aas
shrb
mov
mulps
lea
mov
aam
popa
cmpsl
adc
xchg
pop
test
inc
aas
xchg
mov
and
call
arpl
popf
lods
xchg
mov
loope
fcmovnbe
jb
mov
pop
in
mov
pop
stos
dec
sub
mov
gs
adc
or
je
outsb
add
dec
rcrl
push
sbb
jmp
in
ljmp
dec
mov
sub
pop
mov
loop
jp
stos
clc
rcrl
and
jl
loopne
cld
es
imul
pop
paddsw
insb
add
lahf
jge
xchg
cmp
cmp
cmpsl
ds
mov
out
icebp
ljmp
pop
test
ds
sbb
sbb
or
jle
sub
xchg
cmc
jle
popa
mov
pop
mov
lods
jns
mov
lea
cmp
pusha
cmp
cltd
push
ss
lret
test
mov
jno
std
rclb
dec
inc
xchg
or
rorb
loop
iret
push
in
cmp
out
or
xor
ds
mov
pop
ja
xchg
fmull
mov
inc
sbb
fmul
lods
jg
fs
hlt
rorl
pop
jmp
sarb
push
out
sbb
xchg
cmpsb
push
icebp
loop
push
and
mov
xor
dec
dec
add
in
adc
push
sub
sub
inc
xchg
push
cmp
movb
mov
and
dec
and
jnp
push
sbb
aaa
pop
xchg
push
mov
dec
jne
adc
push
popf
mov
xchg
xor
xchg
out
cltd
hlt
xchg
or
mov
ret
gs
movsb
and
arpl
adc
popa
das
cmpsl
repz
aaa
mov
jg
mov
xchg
mov
xchg
dec
hlt
adc
lcall
out
es
sahf
pop
mov
mov
sub
add
adc
popf
lods
sbb
adc
inc
xchg
int3
lahf
mov
bound
inc
push
in
stc
outsb
jno
test
divb
enter
inc
add
pop
sub
mov
lea
filds
das
out
es
std
stc
cwtl
lcall
dec
or
negb
rorl
adcl
sbbb
mov
xor
dec
dec
inc
pop
push
inc
sahf
mov
pushf
int3
jle
adc
es
mov
fiaddl
fcomps
loope
mov
mov
xor
or
lcall
loopne
inc
ret
into
push
push
loope
adc
sbb
stos
rcr
or
jbe
or
inc
leave
mov
out
adc
icebp
add
loopne
testb
mov
dec
repz
rcrl
and
out
jg
mov
rorb
push
push
sub
pop
stos
xchg
sahf
imul
imul
mov
adc
stos
call
mov
fstps
fadds
or
ds
adc
insb
loope
loope,pn
jl
sbb
add
aaa
test
adc
fldenv
mov
add
hlt
adc
mov
leave
dec
jo
pop
xchg
pop
icebp
mov
popf
imul
jo
hlt
add
cmp
push
cmp
lret
popf
popf
add
pop
out
addr16
and
out
mov
mull
popf
cmc
jmp
ffreep
mov
int3
mov
jmp
testb
ficomps
sub
test
xor
stos
push
push
lcall
add
popf
imul
mov
add
test
sbb
mov
test
movsb
xchg
test
subl
pop
sub
lods
xchg
ficompl
adc
leave
fbld
dec
add
push
stc
jo
jge
cltd
pop
pop
or
fs
adc
sbb
mov
or
sbb
ljmp
cmp
cmp
nop
mov
inc
dec
push
xor
sub
mov
call
mov
adc
mov
lods
stc
lret
inc
jno
arpl
lret
addl
jb
jmp
fdivrl
push
cmp
in
cmp
push
push
fidivl
das
das
or
lret
xchg
sbb
push
int
call
jnp
data16
out
dec
fcompl
iret
push
mov
lock
mov
insl
movsb
es
mov
xchg
fyl2x
push
fisttpl
jg
xor
mov
mov
mov
cmp
pop
and
andl
jb
int3
dec
push
mov
adc
mov
decb
xchg
insb
dec
or
fidivl
mov
test
jno
aam
dec
push
lods
jne
mov
popf
add
idiv
jle
outsb
clc
in
pop
ss
in
sahf
into
jle
mov
adc
adc
repnz
les
push
xor
adc
into
sti
and
dec
pop
mov
stos
ret
xchg
enter
aad
fucomp
add
pushf
fsubs
jecxz
mov
jl
cli
mov
cmp
mov
adc
add
mov
test
mov
imul
xor
pop
push
push
out
pop
rcrl
lods
jecxz
or
mov
iret
xor
mov
das
jp
enter
in
repz
sub
mov
pop
fsts
add
xchg
pushf
mov
lea
cmpsl
movsb
sbb
push
insb
inc
inc
scas
ljmp
sti
test
insl
xchg
jo
dec
xor
sub
push
cs
fcomps
jo
mov
mov
jg
lret
jecxz
adc
mov
mov
jp
and
ficompl
loopne
js
cmp
cmpsl
bound
rcrb
xchg
je
jmp
mov
push
lret
jmp
mov
add
adc
jbe
mov
add
cltd
push
add
mov
sub
xchg
xchg
aam
pop
inc
cld
jb
aam
or
jle
xchg
xchg
jo
cmp
or
add
sbb
xor
aas
pop
aas
fsubrl
jmp
nop
pop
enter
push
js
loop
stc
les
aam
cmc
js
dec
xchg
xchg
pop
mov
pop
add
xor
sahf
and
jo
dec
cmpsb
decl
es
jl
sbb
jmp
xor
fistl
push
mov
sub
mov
fistl
seto
std
notl
out
sub
pop
into
inc
aad
fcom
sub
cs
rolb
pop
push
mov
dec
cmp
xor
sbb
test
mov
mov
xchg
jb
push
inc
mov
inc
adc
lods
xchg
inc
scas
jl
clc
xchg
or
ror
xchg
stos
dec
cmc
jg
xor
or
orb
mov
mov
lea
in
inc
dec
ds
fistl
fwait
mov
ror
rcrl
push
leave
inc
and
loope
pop
sub
push
mov
imul
jbe
out
int
push
jns
scas
sub
mov
cmpsl
adc
push
fnstcw
xchg
or
jg
test
cmp
sub
pop
in
pusha
dec
mov
sub
mov
add
les
adc
jne
roll
clc
aaa
dec
inc
fldcw
mov
outsl
cmp
dec
aaa
cwtl
shlb
subb
xor
insb
adc
in
test
ret
jbe
mul
jecxz
mov
daa
shll
arpl
ljmp
test
testb
adc
or
imul
sbb
repz
push
fadds
pop
scas
rcrl
pavgw
aam
add
jmp
lcall
mov
push
xor
jb
sub
fwait
sub
cmpsb
in
xchg
pop
insl
out
call
lods
xor
dec
leave
or
or
test
pop
push
imul
iret
cmc
sahf
lret
ljmp
mov
lahf
xchg
mov
mov
aad
fcomip
lret
sub
jb
dec
popf
xorl
jge
xchg
pop
sti
dec
mov
fnstenv
add
arpl
push
arpl
sbb
mov
mov
push
mov
jmp
lcall
inc
xor
mov
xor
xlat
cmp
fsubrp
mov
lock
loope
cmp
insl
and
mov
repnz
adc
xor
les
mov
mov
insb
popa
stc
pop
repz
lods
mov
sbb
and
cmpsl
or
aad
dec
movsl
mov
xchg
xchg
fsubs
sbb
cld
lods
mov
ljmp
fcomp
outsl
cmp
jnp
mov
clc
cmc
gs
rcll
add
je
jmp
shrb
xchg
loop
inc
or
jp
inc
std
movsb
daa
in
mov
mov
mov
pop
loopne
push
pop
cs
out
or
das
cmp
int
sbb
mov
imul
sub
sbb
sub
test
mov
gs
push
push
dec
fisttps
lock
xchg
push
insl
dec
shll
lods
mov
scas
or
int
and
dec
jnp
jo
pop
and
into
addr16
push
icebp
repz
sub
inc
in
das
push
adc
sbb
aaa
mov
lea
lret
xchg
xorb
cld
test
loop
dec
out
ret
pop
rolb
or
js
cmpsb
sub
or
pushf
push
dec
adc
outsb
ss
insl
cmpsb
inc
inc
pushf
in
mov
jmp
out
push
adc
sub
pop
jle
out
inc
jle
sub
mov
jl
int3
mov
cmc
mov
call
sub
scas
jb
cmp
testl
stc
mov
push
cs
sbbl
scas
aas
stc
push
inc
jg
pop
stos
pop
inc
jecxz
aam
adcb
pop
dec
xor
testb
dec
pop
mov
xchg
inc
add
mov
xchg
hlt
popa
test
jbe
sbb
jle
aaa
fldl
aas
imul
cli
pop
cmpsl
fbstp
fisttpll
push
push
enter
push
jae
adc
push
sti
sub
xchg
pop
mov
or
outsl
jmp
out
xor
sbb
pop
nop
cmp
sbb
mov
inc
ret
or
cmp
repnz
outsb
pop
or
leave
xchg
pop
push
imul
jp
in
or
rcr
jecxz
add
shrb
push
inc
repz
enter
mov
std
adc
gs
js
ss
loope
push
movsl
cmp
std
ss
and
xchg
mov
lods
pop
jns
xchg
outsb
mov
mov
xor
aam
mov
call
dec
xchg
mov
jb
push
pop
jmp
shlb
pop
mov
pop
adc
xchg
cmp
cld
fnstsw
jae
xchg
xor
adc
scas
jge
gs
push
pop
fs
dec
cmpsb
inc
jmp
xchg
test
push
fmul
shrl
and
lret
jb
inc
pop
mov
out
pop
test
pop
sub
insl
and
mov
or
jo
xor
lahf
mov
imull
sub
in
xchg
push
mov
xchg
cld
fsubr
pusha
repnz
idivl
pop
insb
mov
xlat
movsb
ljmp
sbb
out
pop
insb
scas
cli
pop
out
fsubrs
ffree
std
iret
jns
stc
sbb
test
mov
ljmp
sbb
ljmp
jb
insb
into
mov
rol
sbb
xchg
fldenvs
ljmp
mov
cmc
sub
mov
ljmp
add
int3
je
pop
or
push
scas
fidivrl
sbb
xchg
adc
inc
mov
mov
sub
scas
adc
inc
sbb
xor
sbb
mov
xchg
mov
fucomi
fildll
xor
leave
pushf
addb
pop
pop
push
pop
nop
xor
pop
mov
ljmpw
pusha
cmp
add
push
inc
gs
mov
daa
jne
test
mov
xor
inc
jnp
arpl
sub
and
int3
inc
dec
insb
xchg
adc
stos
mov
push
mov
jmp
sbb
loop
xor
cmp
sti
fistps
dec
lea
ds
in
iret
and
int
or
cltd
sub
rorl
inc
stc
fsubrl
xchg
add
mov
adc
stc
insb
sub
sub
imul
stos
inc
lea
sahf
popaw
dec
adc
sti
dec
in
test
inc
jns
ficoms
pop
inc
test
adc
xor
adc
xchg
in
dec
aad
loop
dec
or
pop
cmpl
inc
lcall
sub
sub
xchg
inc
dec
sbb
das
mov
test
addr16
jbe
sbb
mov
movsb
aad
sbb
cmpsl
lahf
pusha
fcoml
pop
aaa
push
das
sub
push
jecxz
pop
scas
hlt
pop
bound
push
mov
fcmovnu
loop
loop
insl
push
mov
mov
mov
jae
mov
sbb
jb
mov
add
lret
in
jb
xlat
frstor
stc
cmp
fs
dec
sbb
daa
xchg
bound
not
loope
in
test
cmp
fxch
dec
push
cltd
fstps
ds
in
gs
ret
or
lock
sbb
cwtl
imull
mov
xor
test
shrb
push
mov
and
dec
dec
inc
pop
lahf
jle
movsl
push
pinsrw
cld
pop
fs
ret
mov
xor
insl
lret
imul
cmp
jp
sbb
jne
pop
xchg
and
push
in
inc
out
fsubr
sti
loop
popa
fstpt
lahf
jmp
adc
ljmp
sbb
xor
sbb
push
sarl
adc
jbe
js
imul
aad
mov
mov
mov
sub
dec
cli
aam
imul
push
test
fwait
inc
xor
jecxz
jne
lidtl
cmp
or
mov
rcll
jmp
orb
xchg
sbb
hlt
shl
cld
cld
daa
jo
mov
inc
xor
add
push
sub
mov
add
inc
aas
aas
xor
push
mov
fisubl
int3
inc
sub
pop
mov
lods
popa
jns
jns
pop
or
xchg
loope
iret
adc
stos
repz
push
cmpsb
mov
leave
lds
xchg
pop
adc
leave
cmp
insl
mov
iret
sub
and
aad
mov
xor
pop
xor
cs
jo
pusha
xchg
xor
inc
push
shrb
loope
fsubrl
jne
mov
cltd
add
fwait
or
sub
in
xchg
jecxz
jo
add
out
pushf
fs
adc
lret
or
movntps
xor
add
inc
cltd
pushf
sub
dec
ja
pop
je
mov
lcall
mov
in
inc
lea
cmp
popa
sub
or
icebp
pop
repz
insb
mov
fldcw
or
mov
mov
mov
pop
adc
ss
sahf
int3
xor
jmp
imul
test
imul
push
mov
dec
aad
fbstp
out
pop
pop
ljmp
mov
and
xchg
popa
add
mov
mov
cltd
mov
jb
imul
js
jl
fcoml
fsubrl
xchg
fs
cmp
aam
mov
out
mov
jns
add
lahf
sub
std
dec
jle
xlat
jmp
das
outsl
dec
jo
movsl
jg
insl
leave
frstor
sbb
pop
clc
lock
sarl
test
mov
add
out
inc
ficomps
push
stos
inc
and
out
mov
lahf
movsl
add
inc
icebp
int
push
jne
es
lcall
push
xor
in
lods
adc
in
xor
mov
xor
or
or
out
leave
sub
pop
rorl
rcrl
jns
sbb
jo
add
sbb
push
mov
or
stos
pop
push
mov
ja
fdivs
mull
fcoms
hlt
cli
rcrl
xchg
lock
aam
std
push
in
ljmp
and
insb
push
and
jns
pop
ret
insb
jmp
stc
dec
sbb
pop
mov
jne
fsubrs
xor
adc
add
push
popf
add
movsb
jae
and
pop
add
fs
loop
icebp
lds
out
lock
and
fidivrs
pop
pop
inc
inc
ljmp
and
mov
cmp
pop
imulb
dec
loope
cmp
push
repz
and
stos
push
mov
das
out
xchg
jl
adc
sub
or
mov
lcall
mov
insl
mov
fimull
add
mov
jg
add
popf
in
test
mov
mov
movsb
jl
mov
or
call
movsb
test
or
movsl
andb
fsub
jmp
ss
jge
jnp
mov
sbb
loopne
movsb
sti
je
test
test
fsub
push
jl
fdivl
test
sub
pop
enter
dec
add
dec
sbb
adc
lods
js
lret
jp
ret
daa
dec
and
jb
int
adc
test
xor
in
movsb
pop
mov
push
loopne
inc
add
lods
xor
mov
xchg
cmp
mov
js
fs
dec
adc
test
sbb
pop
add
aas
jo
ret
and
sub
addr16
outsb
cld
jge
stos
mov
pop
and
mov
sbb
jp,pt
lods
dec
or
pop
pop
sbb
mov
and
inc
fdivs
mov
test
mov
dec
jne
lds
int3
arpl
cmp
mov
pop
mov
loop
mov
out
lret
movsb
dec
mov
mov
ljmp
and
push
add
pop
aam
cld
loop
mov
mov
mov
xchg
aaa
fwait
shlb
data16
add
scas
out
mov
sbb
repz
xchg
sub
push
pop
push
push
jg
inc
clc
ljmp
leave
or
cmp
sub
and
add
add
shrb
and
pushf
cmp
sbb
sbb
repz
and
dec
mov
adc
aas
data16
aas
mov
loope
fmull
mov
and
aad
push
pmullw
in
int
xlat
insb
lock
adc
sub
push
ljmp
dec
sbb
sarl
dec
jae
jne
inc
add
xor
mov
lds
pop
xchg
and
adc
mov
cli
mov
mov
xor
fldenv
jge
mov
mov
rorl
or
mov
subl
jb
cltd
mov
inc
add
fwait
std
push
xchg
mov
stos
orl
mov
add
ficoml
enter
stos
jns
or
shlb
add
stc
stc
dec
fnstcw
sbb
out
or
jmp
inc
shrl
jnp
je
push
stc
pushf
loop
dec
sti
cmp
scas
adc
xor
xchg
mov
pop
mov
fldt
daa
xchg
push
jl
lret
stc
lods
loopne
out
jb
cs
repz
ret
sub
sbb
push
sub
dec
lods
dec
inc
jecxz
jle
in
push
and
mov
sub
pop
mov
jnp
fldcw
pop
xor
dec
xor
pop
call
inc
icebp
gs
in
xor
shlb
pop
jo
les
stos
xor
mov
push
mov
mov
imul
push
dec
and
test
loopne
fadds
sti
les
imul
mov
fadds
addr16
or
loop
push
jcxz
pop
mov
sbb
call
pop
mov
repnz
repz
push
sahf
jle
and
repz
mov
pop
sub
dec
sbb
insb
lcall
bnd
fldcw
cli
fs
test
sub
sub
outsb
inc
cmp
mov
pop
cvttps2pi
jmp
lds
pop
or
nop
testb
cmpb
adc
fiaddl
mov
mov
aas
inc
sub
clc
jno
gs
pop
add
movsl
fcom
add
sbb
xchg
sub
sahf
push
mov
and
jno
adc
shlb
popa
out
aaa
mov
arpl
jnp
adc
test
push
mov
push
jge
repnz
sbb
mov
cwtl
xor
xchg
sarl
mov
ret
pusha
hlt
aas
fs
sti
adc
jmp
mov
jns
xchg
mov
adc
shl
adc
dec
add
inc
mov
adc
fsubs
mov
mov
cmpsb
aad
daa
fst
or
loopne
sbb
mov
push
sub
shll
xchg
jne
fcoms
add
fisttpl
mov
or
roll
inc
inc
xchg
mov
sbb
cmpsb
clc
lods
pop
or
push
or
jle
inc
sub
pop
sub
aaa
pop
mov
xchg
cmpb
cwtl
dec
aad
js
rol
xchg
cmp
insb
jg
fstp
xor
inc
fmulp
sahf
popa
mov
inc
repnz
ret
cmp
repz
sub
cmp
jne
inc
pop
pop
test
lret
xor
sub
mov
icebp
push
mov
adc
idivb
ja
jo
jbe
push
lods
shlb
add
jle
lock
fs
lcall
icebp
dec
mov
les
lock
adc
mov
imul
jnp
add
xchg
jg
add
adc
aas
insb
sti
adc
xchg
hlt
sub
inc
inc
jp
mov
fimuls
dec
add
loop
ret
dec
das
test
mov
xchg
mov
int3
aad
out
add
pop
sbb
test
sbb
sbb
jp
jbe
shlb
mov
xchg
sbb
loopne
adc
pop
movsl
fiadds
int
lahf
ds
mov
loopne
or
push
ret
jo
enter
cmp
cld
dec
and
aam
daa
add
in
cld
pop
or
jb
or
loope
mov
ficompl
daa
sub
mov
adc
xor
cmpb
addl
lock
stos
loop
jne
loopne
test
cmp
rcl
iret
dec
das
aam
xor
jo
xchg
aam
adc
leave
inc
adc
cmp
mov
mov
jno
pop
mov
lods
outsb
jle
dec
and
cmp
mov
sbb
les
sbb
adc
cmp
hlt
pop
adc
add
data16
gs
adc
sbb
lods
xor
sti
mov
lods
out
and
mull
into
rcr
push
mov
mov
xor
sub
jle
sbb
adc
xchg
mov
mov
aas
xor
mov
test
stos
pop
xor
pop
and
inc
ja
ljmp
jge
xor
jae
stos
popa
stc
imull
shll
test
aaa
push
inc
data16
push
cmp
rorl
jb
adc
scas
xchg
add
aas
jbe
enter
jge
rcll
sbb
loope
mov
mov
jne
xor
adc
xchg
mov
loopne
mov
adc
lock
subl
xchg
punpcklbw
adc
sbb
ret
addl
mov
dec
pop
push
inc
xor
arpl
pop
addr16
ja
icebp
add
sub
and
shll
jnp
adc
mov
out
xchg
add
mov
cli
enter
data16
clc
addl
mov
or
mov
loop
push
hlt
cltd
test
and
jmp
in
insb
mov
mov
jge
test
and
outsb
scas
cmc
lcall
shrb
jns
and
addr16
popa
cli
add
mov
jge
mov
adc
in
mov
insb
in
lea
imul
notl
lods
outsb
pop
cmp
popa
popa
add
push
pushf
mov
repnz
sbb
test
sahf
adc
or
add
dec
gs
pop
sub
push
inc
sti
xor
jp
mov
mov
lods
jecxz
in
mov
fcmovnbe
lods
js
jnp
inc
mov
into
inc
ret
sbb
test
push
rolb
loope
pop
arpl
sti
insl
sub
mov
mov
sbb
fwait
out
dec
jl
add
loopne
ljmp
lcall
ljmp
pop
rorb
ret
mov
fwait
ds
dec
xlat
rcll
jg
sub
into
call
mov
sbb
pop
adc
fadds
insl
idivb
mov
clc
mov
adc
mov
fwait
cmp
mov
aam
mulb
lret
dec
xchg
shl
and
xchg
inc
pop
mov
sub
or
push
pop
push
xchg
inc
das
sub
test
xor
add
sbb
cmpsl
gs
scas
aad
xchg
cmp
or
lcall
es
xchg
fwait
xchg
test
daa
mov
popa
bnd
or
addr16
sbb
enter
xchg
xor
cmc
into
xchg
xor
repnz
mov
mov
test
sub
pusha
push
and
push
js
sub
iret
pop
adc
sbb
gs
subl
xchg
jle
xlat
pop
inc
ret
mov
fldt
sub
xor
pop
inc
sbb
add
aaa
sbb
mov
fdivl
dec
stos
jg
xchg
jecxz
int
push
inc
nop
fwait
pop
cld
mov
mov
movsl
in
lds
xor
push
inc
cmc
lods
and
lds
mov
and
fstpt
sbb
adc
xor
adc
push
push
and
and
mov
pop
pop
adc
inc
nop
xor
js
cmp
sub
inc
rcl
push
jp
mov
js
xor
out
add
inc
addr16
mov
insl
popf
push
jno
and
or
mov
xchg
cmp
xor
test
lahf
pop
push
sub
pop
inc
adc
orb
jmp
shlb
add
addr16
cld
and
pop
movsb
push
sbbl
roll
js
push
fs
mov
mov
push
lds
sbb
fs
bound
fcmove
sbb
cmp
inc
dec
loope
data16
aas
pop
insl
or
fsubrl
sub
rorl
call
fldl2e
popa
insb
lahf
xlat
mov
mov
inc
xorb
in
mov
test
cmc
xlat
jg
out
cs
sti
dec
xor
cmp
mov
push
shll
mov
mov
das
dec
cmpsl
aaa
lret
xchg
mov
test
adc
fldenv
add
test
roll
out
jo,pt
pop
mov
imul
mov
pop
insb
arpl
mov
daa
iret
dec
stos
lret
and
stc
add
fs
movsb
bound
cltd
dec
mov
adc
mov
mov
and
pop
dec
pop
xor
loop
xchg
outsl
in
in
out
sbb
dec
in
clc
and
loope
enter
xor
add
xor
gs
mov
loope
xchg
mov
enter
cmp
lock
loop
jno
jbe
add
cli
jge
pop
xor
mov
sbb
mov
lcall
xor
iret
cmpsb
scas
popf
dec
sbb
or
push
push
daa
imul
data16
sbb
les
inc
mov
xchg
mov
ror
sub
mov
cmpsl
imul
xchg
lar
divb
out
sub
sti
push
scas
cld
jg
and
lock
mov
push
inc
aaa
xor
and
mov
xlat
and
add
jmp
addb
xor
sahf
leave
pop
cmp
and
sub
or
hlt
outsl
icebp
insb
mov
das
jle
out
iret
lods
xchg
cli
add
mov
cmp
add
sbb
icebp
roll
mov
pop
xor
ret
mov
fistl
loope
xchg
out
xor
mov
les
jae
stos
ss
push
xor
inc
out
push
test
sub
dec
sbb
xlat
in
gs
cli
sub
add
cmp
cmp
lods
pop
dec
outsb
cmc
or
fwait
sub
push
and
xchg
jl
mov
sarb
jge
pop
jmp
inc
mov
hlt
cwtl
leave
fimull
loope
lods
fwait
cs
mov
lret
xor
movsb
dec
pop
sbb
add
fsts
jnp
out
shlb
mov
push
lds
add
jmp
push
aas
push
scas
inc
inc
scas
mov
inc
push
cmp
or
sbb
pop
jl
test
arpl
mov
shlb
fists
das
dec
arpl
mov
add
cwtl
shll
xchg
out
mov
imul
jecxz
mov
sub
sbb
xor
mov
mov
stos
push
divl
pop
mov
ss
stos
fbstp
mov
add
insb
push
sbb
es
int
rcrl
and
int3
mov
adc
scas
xor
xor
xor
loope
out
pop
or
nop
lcall
ss
xchg
out
adc
loopne
inc
popf
insb
cmp
lahf
pop
cmp
sti
sbb
shrl
dec
lcallw
out
sbb
or
clc
pop
mov
dec
lea
dec
push
mov
pop
imul
ds
jno
cmp
lahf
cmp
pop
cmp
call
lret
inc
call
clc
adc
jg
repz
sti
lods
cmp
pop
data16
scas
int3
scas
shr
pop
ja
cmp
push
xchg
fdivs
jae
pushf
gs
and
insl
mov
das
popa
push
pop
push
xor
pop
decl
or
mov
jg
mov
shll
and
orb
ljmp
mov
cmp
or
or
mov
xchg
sbb
jno
and
scas
and
pop
add
jecxz
xor
xor
push
mov
scas
into
adc
imul
jne
shlb
stos
cmp
data16
push
xchg
neg
dec
sbb
xchg
push
sub
fcmovnb
stos
cmp
or
push
shll
or
mov
mov
push
mov
and
push
lret
pop
in
xchg
inc
pop
decl
insl
jbe
jno
pop
std
leave
out
das
pushf
cmpsl
mov
lret
aas
sbbb
sub
lods
test
or
lock
add
pushf
roll
shrb
push
bound
mov
mov
stos
cmpsb
cltd
xchg
pusha
js
fs
cmp
lret
cmpsl
das
jl
les
jae
repz
jg
mov
leave
mov
push
inc
xchg
and
inc
loopne
sub
outsb
movsl
inc
mov
leave
aas
sbb
into
lods
lock
pop
lds
sub
lahf
xlat
xor
lds
adc
ljmp
loopne
dec
xchg
lret
push
cmp
mov
outsb
push
sub
mov
pop
mov
loopne
stos
mov
inc
mov
mov
lods
into
cs
clc
je
fs
xchg
push
dec
in
rclb
sbbl
push
mov
xor
daa
popf
jmp
xor
mov
or
lock
jge
insl
arpl
inc
cs
add
lea
pop
lock
shll
ret
dec
sub
jge
lret
ss
cmp
lds
rolb
or
pop
imul
fcompl
movsl
xor
inc
xchg
push
mov
adc
mov
int
nop
add
mov
sub
enter
addr16
inc
shrb
mov
test
js
or
pop
dec
cmpsl
in
mov
subl
lcall
call
pop
js
cwtl
data16
jb
rcrb
inc
out
je
ljmp
insb
scas
jg
mov
adc
ret
movl
rcrb
inc
jge
scas
jne
sub
push
adc
jecxz
lock
mov
scas
fdivl
rclb
out
jmp
cmp
fcmove
mov
mov
fcmovb
inc
sub
in
jp
adc
fdivrl
inc
mov
ret
xor
sbbb
add
sbb
cmp
cld
lds
jg
sarl
sbb
sub
add
enter
push
daa
std
jl
add
mov
test
loopne
and
or
xchg
or
jo
mov
scas
cmp
gs
in
push
or
mov
mov
sub
sbb
push
sbb
jle
jl
sub
loope
iret
lret
add
subl
jl
fimuls
pushf
lods
xchg
js
addb
daa
inc
mov
imul
xlat
popa
sbb
inc
rolb
std
or
loope
sahf
pop
sbb
sub
jge
xor
xchg
lock
insb
mov
fnstsw
out
push
and
xor
movsb
int3
outsb
adc
jae
jg
fdivr
mov
add
mov
daa
xchg
mov
pop
pop
mov
mov
das
adc
dec
ret
in
add
pusha
and
pusha
mov
dec
pusha
popf
or
stc
sbb
xchg
mov
mov
add
loop
pop
sbb
loop
pop
idivl
repz
xor
or
add
mov
arpl
into
out
test
repnz
cmp
je
lods
aaa
push
sbb
cwtl
cmp
out
fisttpl
out
fcomps
stos
neg
movsl
clc
jmp
test
mov
inc
or
sbb
dec
sub
cmpb
loop
jo
add
xchg
xchg
dec
rcrb
xchg
sbb
mov
iret
jl
shlb
lock
rorl
aaa
jno
movsl
jno
insl
mov
fisubl
mov
lret
call
in
cltd
aad
push
or
fsubl
inc
mov
aaa
loop
push
jmp
test
jmp
xchg
insb
jno
push
or
cmpsl
and
sbb
jecxz
xor
dec
mov
outsl
jne
mov
rorb
mov
pushf
and
dec
shlb
sbb
sbb
fldl
dec
cmp
or
pop
xchg
pop
xchg
int3
cmp
mov
and
sbb
jp
adc
sti
pop
xchg
test
push
push
sub
inc
test
mov
lret
sub
push
movsl
loopne
hlt
addr16
loopne
push
push
sub
jp
cmp
pop
movsb
mov
pusha
into
sarl
mov
add
mov
lahf
jl
jmp
sbb
add
shl
mov
test
mov
ret
or
daa
int3
push
gs
enter
mov
sbb
pusha
iret
mov
push
or
and
xor
test
lds
orb
mov
xchg
filds
jmp
adc
mov
jp
mov
test
je
sub
push
in
rcll
lcall
sub
int3
cli
ljmp
xchg
enter
jmp
push
icebp
add
clc
movl
xchg
jo
inc
adc
xchg
cltd
dec
lds
sahf
xchg
sbb
aas
add
mov
pop
pop
repnz
push
push
xchg
loope
arpl
repz
jl
movsl
xor
or
push
jo
jle
inc
out
push
lret
xchg
lahf
iret
jmp
inc
inc
mov
mov
loop
lcall
cli
inc
cmpb
adc
fisubs
cmp
dec
repnz
dec
nop
cmpsl
mov
add
dec
dec
sti
shlb
inc
leave
push
mov
jbe
mov
push
xchg
lods
stos
iret
cmp
xor
aas
aam
popl
and
fbstp
push
iret
cs
imul
jmp
adcb
mov
lahf
push
mov
into
data16
lcall
mov
push
cmc
addl
and
xorl
loope
sub
test
movsl
leave
mov
sub
inc
or
dec
bound
shlb
addr16
in
lods
pop
js
xor
pop
pop
aad
lods
mov
js
mov
mov
inc
push
and
push
stos
dec
inc
loop
cmpsl
sar
jg
inc
xchg
pushf
ljmp
gs
lds
shrb
adc
loopne
bound
push
fwait
mov
fcomps
je
mov
mov
test
mov
lock
insb
inc
xchg
outsl
pusha
adc
inc
mov
dec
sbb
cs
hlt
andl
adc
mov
popf
pop
into
dec
xchg
add
pop
dec
and
adc
pop
dec
popf
xor
shr
fbstp
xor
xchg
fcmovnu
push
pop
xchg
inc
inc
inc
mov
shlb
push
inc
ja
imul
fwait
repnz
pop
xor
jbe
movsl
push
stos
pop
mov
int3
rorb
cmp
push
dec
lock
ret
inc
orb
xchg
mov
add
clc
fisubl
sub
in
dec
sahf
add
mov
mov
mov
cmp
add
movsl
dec
js
push
mov
dec
xchg
mov
ss
cmp
dec
call
ljmp
aam
dec
fdecstp
enter
dec
aad
stos
mov
in
push
dec
out
int
adc
inc
push
jnp
xchg
jg
jae
pop
mov
daa
cli
lds
cmpsb
sbb
inc
mov
test
and
pusha
add
sub
mov
push
lret
dec
int3
add
lret
dec
sbb
push
js
imul
sbb
gs
push
hlt
mov
fs
lret
clc
pusha
push
cmpsb
cld
xor
dec
stos
mov
or
or
pop
cmpsl
mov
test
in
adc
es
nop
add
data16
ss
hlt
rcll
push
cmp
movsb
or
andb
push
cli
dec
imul
sbb
mov
es
adc
sub
pop
xor
mov
mov
cmp
lods
push
nop
and
pop
jp
into
xchg
inc
and
pop
pop
cmp
mov
jno
sbb
xor
roll
sarl
jbe
jge
push
testb
fnstcw
and
sbb
scas
mov
ss
aas
lods
cld
xor
shrb
sbb
lods
push
mov
cmpsb
popf
jns
sub
pop
int
mov
ss
repnz
or
xor
pushf
cwtl
fwait
nop
add
sahf
add
pop
pop
jb
xchg
inc
xorl
lock
call
test
push
hlt
adc
xor
mov
rcrl
xchg
lret
mov
fadds
lea
mov
out
mov
mov
pop
ret
pop
lds
test
andl
and
or
or
cmpsb
stc
mov
notb
mov
adc
adc
mov
ss
dec
xlat
mov
dec
xchg
scas
mov
subb
sub
dec
test
test
dec
jns
pop
xchg
push
lods
cltd
pop
xchg
jo
xor
mov
or
xchg
popf
mov
in
gs
xchg
lock
and
leave
ret
sub
ds
inc
dec
fmulp
pop
cmp
iret
sub
or
loopne
mov
stos
lahf
pop
stc
pop
hlt
out
paddd
mov
scas
ret
mov
insb
sbb
cltd
or
aad
mov
loope
adc
div
subl
out
jno
mov
dec
inc
mov
mov
or
xorb
int3
je
andb
xor
fs
fs
in
nop
or
or
out
jno
mov
hlt
scas
push
lret
stos
inc
mov
sahf
sub
mov
jecxz
test
fwait
push
out
popa
mov
push
adc
pop
aas
ljmp
mov
ret
dec
mov
xor
popf
mov
dec
push
cld
sbb
mov
sub
xorb
mov
and
cmpsl
popf
jecxz
mov
cmp
xlat
adc
xchg
add
sub
mov
jge
pop
or
ja
lds
es
pop
cld
cmp
int3
jno
leave
xchg
push
dec
out
imul
jg
das
sub
mov
inc
js
push
daa
aaa
pop
loope
int3
test
ds
jns
arpl
or
mov
lret
sbb
dec
push
dec
cld
dec
loope
adc
fstl
and
lods
sbb
xchg
lods
pop
and
jnp
jg
jne
xor
xchg
in
adc
and
scas
dec
push
fdivp
jae
mov
jne
jno
cmc
loopne
repnz
mov
outsl
movl
sub
sub
les
or
incb
loop
mov
cmpsb
inc
push
jmp
fsubrl
mov
inc
sub
addr16
pop
sbb
cmc
loope
sub
rcrl
xchg
and
cmp
and
addr16
jnp
inc
mov
push
jns
and
adc
sub
xchg
xchg
lret
fdivr
jbe
lds
fwait
sbbb
iret
shlb
add
outsl
mov
fildl
stc
shll
andl
mov
out
divb
aas
sub
lahf
inc
jns
push
jle
mov
mov
loopne
or
sbb
stos
adc
shrb
and
adc
js
loope
cmpsb
pop
jns
and
fwait
pop
inc
dec
stos
daa
leave
pop
and
sbbb
lcall
mov
and
xchg
lahf
sarl
sub
sahf
js
setge
push
push
jg
sarl
dec
out
test
dec
out
sarl
mov
adc
xchg
fidivrl
sub
jle
lock
pop
pop
dec
mov
jno
sub
push
mov
enter
add
aaa
mov
test
fsubrs
testl
imul
xchg
cmc
cli
enter
ds
cmp
cli
mov
inc
dec
mov
mov
add
ljmp
ljmp
mov
popa
push
daa
loop
push
je
or
inc
pop
lea
sarl
jp
ret
jg
cmpsl
sbb
xor
push
pop
dec
push
xor
jecxz
jmp
out
add
ret
sbb
call
int
lods
xor
aad
or
mul
adc
or
mov
add
inc
dec
dec
pushf
xchg
xlat
bound
push
lds
mov
jnp
adc
xor
lock
and
mov
lea
pop
in
adc
adc
shll
lahf
fildll
test
lods
xor
or
fucom
jp
jns
lods
push
imul
les
pop
push
sahf
xor
push
jl
arpl
fnstcw
mov
mov
cmc
rcr
mov
mov
lea
mov
push
cli
xchg
mov
xchg
lcall
fsubrl
repz
mov
mov
movsb
mov
sbb
js
cmp
outsb
mov
xchg
ja
hlt
pusha
jmp
js
in
dec
adc
sub
pop
xor
and
dec
test
out
pop
xlat
push
nop
dec
sbb
or
mov
mov
gs
cmp
jae
aad
dec
int
in
add
rcrb
sbb
xchg
jne
fiadds
imul
sahf
insb
sti
movsb
pushf
xor
stc
sub
adcb
aad
mov
sbb
movb
inc
fcmovb
das
xor
in
inc
xor
pushf
cmp
movsb
lock
imulb
fsubrs
pop
cli
imul
pop
xor
xchg
xor
adc
sti
stos
sbb
push
push
cld
add
adc
jae
out
xchg
mov
cltd
bound
xchg
xchg
cmpsl
in
and
test
jno
subl
jp
popf
add
jno
sbb
sbb
sub
pop
cmp
and
loope
enter
dec
lods
leave
sub
dec
jae
outsl
mov
dec
push
xchg
les
pop
or
inc
idivl
insl
scas
loope
aaa
jne
lret
dec
cmp
jbe
es
xchg
cmpsl
mov
cmp
icebp
rcr
jle
adc
xor
dec
outsl
push
inc
lock
push
sbb
mov
out
stos
cld
adc
cmp
xchg
push
popa
stos
shrb
es
lahf
mov
xchg
jnp
add
orl
and
inc
jo
lcall
mov
loope
pavgw
sub
dec
lock
ret
mov
movl
call
call
pop
hlt
lahf
lods
fwait
or
add
cmp
pop
adc
sub
mov
out
or
dec
cmp
fsubl
lds
push
lea
pushf
dec
fwait
xor
mov
sub
push
fdivrs
adc
cli
push
sbb
lcall
mov
pop
gs
cs
out
sub
fisubl
add
popa
cmp
adc
or
xchg
outsb
and
in
dec
js
enter
mov
outsl
lds
and
sti
fs
push
scas
mov
icebp
hlt
mov
nop
test
adc
adc
jno
and
es
lret
xor
xchg
ljmp
into
std
cwtl
mov
icebp
in
pop
sbb
jmp
imul
stos
jmp
mov
mov
stos
push
or
push
clc
add
jnp
sub
add
dec
and
mov
jnp
pushf
mov
roll
jp
cwtl
dec
dec
dec
jne
push
out
sbb
jmp
pop
or
lods
inc
lods
repnz
jo
push
pushf
xlat
lea
das
pop
xchg
addr16
std
mov
jp
xchg
out
imul
call
cli
or
popf
adc
xchg
data16
sub
adc
fcoml
adc
push
jg
das
test
repz
fbstp
arpl
test
cmp
mov
jnp
sub
jge
pop
push
adc
mov
test
dec
rorl
scas
loope
jp
xor
push
inc
fldenv
jg
fildll
outsb
scas
push
and
pusha
pop
xor
add
jno
sub
into
lods
add
push
shl
cmp
sbbb
lret
lods
aas
push
sti
cmc
fsubs
shr
push
sbb
dec
mov
outsl
xchg
sub
adc
xor
push
cld
insl
sti
mov
mov
jmp
xchg
jl
orl
cs
mov
test
dec
jae
repz
dec
pop
cmp
mov
push
push
ja
les
jp
inc
lea
push
pop
stos
dec
int3
das
inc
dec
adc
enter
mov
aad
pop
inc
movsl
mov
jno
mov
push
add
in
js
inc
or
mov
pop
xorb
data16
mov
inc
mov
jne
mov
inc
jb
mov
add
mov
mov
fdivl
movsb
out
and
or
fsubl
inc
sub
cmc
or
cmp
notb
pop
ret
push
lods
sub
sbb
xchg
stc
dec
rcll
adc
mov
mov
notb
lahf
sti
cmp
sbb
mov
lods
aas
jne
into
mov
sub
mov
xor
popa
lods
std
mov
push
mov
mov
and
or
lahf
sub
adc
aam
sbb
jno
int
jecxz
mov
hlt
in
test
pushf
jecxz
cmpsb
in
adc
fistps
aad
mov
js
enter
adc
xor
int3
daa
push
mov
adc
lcall
add
xor
inc
inc
mov
push
xor
xlat
push
jo
push
adc
jne
movups
stc
arpl
mov
sbbb
inc
rcll
push
cmp
mov
jecxz
jbe
cmp
lea
int3
sbb
lcall
mov
std
mov
adc
mov
mov
jmp
push
div
call
mov
mov
cmpsb
fwait
movsb
and
cwtl
mov
mov
inc
call
inc
adc
repnz
aas
jnp
mov
cltd
xor
loope
cwtl
jg
push
push
insl
enter
inc
push
outsl
jl
inc
jp
xchg
mov
fildll
mov
or
les
addr16
cmc
mov
stc
sub
mov
aad
push
lret
jb
sti
jge
jge
and
mov
dec
ret
mov
clc
jl
push
cmc
jge
pushf
jecxz
mov
mov
or
stc
in
and
inc
inc
and
out
or
pop
adcl
jge
mov
ds
addr16
mov
add
xchg
aaa
add
mov
outsb
xchg
mov
popa
inc
push
aaa
or
jl
sbb
filds
imul
mov
data16
mov
mov
lret
nop
sub
add
mov
xor
test
das
add
out
lods
das
testb
xchg
dec
imull
bound
pop
shlb
adc
inc
paddd
or
enter
ret
push
lret
xchg
sahf
fidivrs
jg
fiaddl
cli
and
push
push
push
cmp
adc
lods
push
fs
mov
rclb
jb
scas
loop
cmp
add
repnz
icebp
cmp
movsl
daa
ds
and
mov
sub
dec
lea
push
inc
xor
cmpsl
pop
lahf
iret
adc
scas
cwtl
jmp
xchg
pop
repnz
shr
shll
mov
scas
sti
enter
cmp
test
lea
in
cmp
push
mov
dec
sbbl
imul
inc
loope
dec
int
xor
out
xchg
mov
cltd
sbb
mov
test
loopne
pop
mov
mov
call
scas
das
adc
sub
leave
movsl
jae
adc
push
mov
in
mov
sbbb
xchg
xchg
aaa
mov
jne
push
inc
out
test
insb
cmp
push
jge
push
inc
into
push
outsl
repz
xchg
cmp
or
and
adc
fdivl
mov
cmpsl
fs
mov
push
fsub
xor
sti
int3
push
mov
je
in
aad
and
lock
adcl
push
popf
and
push
push
xchg
nop
lret
push
fisubl
fildll
fsubl
lds
dec
dec
js
js
add
pop
cli
and
dec
inc
in
dec
aad
adc
xchg
jge
fimuls
inc
dec
pop
movsb
daa
and
jno,pt
gs
push
lods
jle
fdivrs
out
out
mov
dec
xchg
add
add
ja
jge
imul
dec
test
xor
leave
push
sti
pop
push
int3
mov
xor
sub
xchg
mov
lock
pop
inc
sbb
cmpsb
in
xlat
jle
insl
mov
xchg
and
or
nop
xchg
lds
icebp
mov
push
in
mov
adc
mov
stc
mov
shll
cmp
nop
push
in
repnz
mov
loop
dec
fidivrl
dec
sti
mov
mov
mov
cltd
daa
iret
mov
mov
add
push
dec
add
in
lock
inc
cs
movsb
pop
aad
sbb
push
inc
cld
xchg
dec
outsb
lcall
dec
dec
xor
es
and
scas
cmpsl
out
test
adc
insl
xor
jecxz
add
mov
jmp
xor
scas
jne
cld
xchg
fmuls
cmpsl
adc
push
je
gs
sbb
xchg
aaa
cmc
mov
js
out
mov
dec
cltd
sbb
lret
fidivl
inc
adc
jg
and
adc
inc
adc
das
jmp
hlt
pop
lea
inc
and
fisttpl
test
addl
movlps
aas
mov
inc
push
lods
pop
push
lcall
movsb
dec
xor
sbb
data16
test
jb
add
fadds
in
sub
ficompl
decl
jp
daa
std
sbb
xchg
in
jnp
hlt
nop
jmp
call
loop
pop
cmpb
lahf
pop
jns
rorl
fldcw
pop
inc
pop
aas
adc
fstl
fisubl
add
mov
or
pop
subb
cmpsb
xor
cmp
adc
pushf
push
pushf
cwtl
inc
push
fldl
or
mov
mov
mov
fiaddl
jb
data16
lahf
sub
ss
rcrl
gs
or
dec
dec
mov
inc
loop
ret
jno
mov
in
mov
sti
xchg
data16
jo
jnp
xor
pop
xor
fscale
nop
testb
mov
add
pop
fists
push
jbe
insb
lods
add
xor
dec
push
inc
mov
stos
stc
fsubl
int
xchg
push
push
xchg
dec
add
popa
aam
test
push
and
aam
xchg
nop
sbb
sub
mov
cmp
adc
inc
clc
inc
stos
or
pop
xor
push
xor
ror
test
cmp
cmp
shlb
cli
xor
add
mov
jecxz
add
pop
iret
push
dec
cmp
mov
outsl
adc
orb
arpl
test
dec
repz
mov
stos
in
arpl
mov
dec
dec
les
movsb
add
iret
bound
inc
orl
popf
mov
cmp
fldt
mov
cli
imulb
int
mov
jo
jl
lods
lods
mov
movsb
stc
daa
push
xchg
jl
out
cmp
add
jne
orb
jb
bound
jb
arpl
sahf
and
push
je
xchg
fwait
test
cmp
and
mov
movsb
in
scas
add
ja
inc
inc
inc
ret
movsb
stos
jb
pop
inc
sub
cmc
sbb
or
stos
call
jae
bound
stos
add
inc
pop
mov
pop
push
cli
in
in
mov
xor
push
push
inc
xchg
cwtl
fisubs
or
std
es
adc
je
cltd
jb
mov
lock
mov
inc
sub
test
movsl
pusha
jecxz
cmp
mov
les
fimull
imul
rol
adc
inc
pusha
cmp
pop
iret
xor
adc
add
imul
ja
lcall
cs
pop
not
mov
jmp
push
movsl
adc
mov
lret
cs
cmp
aaa
adc
push
sub
movsl
nop
jns
aas
and
xor
iret
mov
pushl
cld
in
push
mov
mov
mov
mov
sbb
fisttpl
jl
outsb
push
xchg
lcall
xorb
or
shl
aad
or
and
and
bound
stos
pop
pushf
fwait
repz
dec
mov
outsb
shlb
xchg
dec
dec
rorb
jge
iret
loope
repnz
aaa
mov
pop
les
xor
pop
xor
loope
or
adc
push
arpl
xor
mov
shl
adc
mov
enter
repz
sub
popf
popl
lock
popa
test
push
xchg
loope
mov
lods
jnp
inc
pop
dec
xor
lret
sub
push
icebp
push
nop
jae
sti
jmp
ret
rcr
xor
sub
fisttpll
scas
or
stos
xor
mov
scas
mov
fdivp
sbb
add
gs
push
das
cmpsb
push
add
pop
or
xchg
loope
push
bnd
xchg
sub
jb
sub
push
xchg
frstor
inc
rcll
add
dec
push
add
mov
cmp
xor
sub
sahf
mov
mov
mov
sahf
sub
lret
popf
cmp
ret
cmp
lret
lcall
xor
sbb
repz
and
push
pusha
stos
test
arpl
lahf
hlt
mov
mov
ja
sub
xor
outsb
and
notl
movsb
roll
dec
es
scas
mov
fdivl
js
inc
pop
and
mov
stos
test
das
les
mov
push
aaa
inc
dec
jle
push
and
mov
jnp
scas
test
push
je
aam
imull
push
rolb
stos
jmp
arpl
pop
repz
int3
cmpl
gs
shll
inc
dec
ret
xchg
imul
mov
lahf
les
dec
das
dec
lret
pcmpeqd
mov
push
inc
addr16
sbb
mov
scas
sub
icebp
mov
mov
push
xchg
sub
fwait
mov
fsubrs
inc
mov
gs
pop
std
xchg
daa
inc
insl
clc
mov
iret
pop
dec
cs
sub
loopne
out
xor
mov
bound
xchg
out
test
fisubs
outsl
add
in
xchg
outsl
jmp
xor
jno
outsl
loopne
movsb
ret
inc
jmp
leave
and
js
jo
xchg
jae
inc
inc
insl
out
subb
fs
sbb
dec
es
pop
adc
adc
cli
mov
jne
pop
xor
in
repz
loop
cmp
shll
xchg
pushf
and
jbe
and
lret
loope
mov
pop
sub
dec
sub
addr16
stc
mov
adc
adc
pop
mov
jecxz
xor
xorb
nop
add
push
out
sbb
or
shrl
pop
movsl
mov
cmc
aaa
scas
or
pusha
or
or
add
mov
jg
pop
ret
fisubl
scas
or
and
sti
xor
pushf
sbb
sub
jae
dec
pusha
pop
cltd
insl
add
test
mov
aaa
push
mov
data16
xchg
pop
add
imul
stos
jmp
loopne
in
outsb
jl
adc
je
nop
adc
mov
fnstenv
fistpl
insb
das
adc
es
out
loopne
rcrl
dec
jb
mov
fsubrp
sahf
call
pop
shl
push
xchg
shrb
jle
adc
inc
cld
or
and
or
or
jmp
push
out
iret
ficoml
addl
lods
lcall
orb
cmp
adc
loopne
loope
lods
jns
icebp
insl
push
xlat
push
xor
lcall
into
inc
cmp
xchg
icebp
cmpl
push
xchg
xor
xchg
lahf
js
xchg
adc
sbb
jg
mov
ret
jl
or
dec
lret
sub
repz
popf
and
shl
stc
sbb
or
test
sbb
dec
mov
sahf
stos
out
int
sub
push
xor
and
aam
and
jbe
and
data16
fsubl
sti
xchg
pusha
mov
or
cld
arpl
scas
fld
cld
loope
pushl
inc
dec
adcb
iret
pop
sub
cltd
sbb
imul
lcall
push
add
or
mov
sub
mov
cltd
lods
mov
les
mov
pop
dec
sub
adc
shll
mov
adc
insb
inc
and
fcmovb
dec
and
mov
std
push
lahf
xorb
xchg
aas
rcr
jne
outsl
cmp
adc
push
xchg
cltd
jle
test
fnsave
sub
sti
nop
pop
ret
mov
lock
jae
bound
test
mov
sub
dec
mov
xor
xchg
jne
inc
fists
adc
call
shlb
stos
sbb
clc
loop
mov
xchg
inc
add
adc
add
jle
movsl
xchg
insl
mov
cmp
jno
and
out
cmp
outsb
xor
andl
adc
cltd
push
pop
cld
mov
xor
mov
inc
out
xor
fcomi
test
rcrb
out
cwtl
mov
nop
scas
inc
iret
pop
cmc
mov
outsl
sbb
ret
ffreep
jp
adc
mov
push
pop
jb
sbb
stos
movsl
mov
lcall
pop
sbb
add
adc
push
lods
lahf
aam
clc
xor
sbb
push
rcll
inc
mov
jp
and
adc
push
jle
movsb
out
into
movsl
lea
push
mov
inc
cmpsl
std
fwait
jno
xchg
xor
inc
xchg
andl
fldl
xor
sub
sub
xor
rorb
pop
xchg
loope
js
xlat
aas
xlat
or
inc
fistpll
stos
loop
leave
dec
icebp
into
lock
add
test
imul
cmp
and
stos
jle
mov
xor
xor
mov
js
fwait
sub
add
loopne
cmp
pusha
add
shr
popf
shll
cmp
push
or
jmp
cli
pop
negl
fs
inc
push
add
mov
out
xchg
adc
js
add
mov
mov
xor
xor
jecxz
jmp
inc
test
cwtl
negb
mov
mov
call
or
sub
mov
sti
leave
push
cmp
push
fs
in
nop
aad
dec
add
lret
pop
jl
jg
test
cmp
pop
dec
scas
push
sub
pushf
cmpsb
out
insb
rol
lahf
pushf
dec
cs
fisttpl
jp
mov
and
pop
adc
xchg
cmc
add
test
jae
shrd
sar
inc
je
fdivl
add
dec
in
scas
xor
mov
pop
mov
hlt
ljmp
xor
js
lods
adc
aad
mov
ret
mov
add
ja
add
adc
xor
inc
mov
aas
test
test
ljmp
ljmp
pop
repnz
mov
lods
push
divb
jl
push
pop
pop
mov
xchg
cmpsb
mov
mov
mov
mov
push
in
scas
mov
and
mov
add
push
mov
cmc
mov
ret
inc
lcall
out
or
xchg
cmpsb
xor
xor
pusha
sbb
imul
add
push
xchg
dec
cmc
xchg
popa
jno
sbb
sub
or
loopne
mov
stos
fadd
adc
ljmp
icebp
dec
fadd
imul
in
dec
ja
lds
outsl
cmp
mov
jp
jmp
pop
and
test
dec
mov
sub
jne
bound
push
xchg
xor
add
and
ds
cmp
mov
stos
xor
adc
pop
or
mov
ffreep
xchg
hlt
push
cmovge
mov
loop
std
xchg
lret
push
xchg
cli
sbb
sub
push
stos
or
sbb
fdivrl
data16
insb
mov
xchg
loopne
xor
adc
in
lods
or
pop
ret
push
xor
mov
rorb
insb
jb
jns
daa
pop
mov
test
movd
or
xchg
xlat
out
push
mov
bndldx
pop
test
fldt
mov
xor
xchg
mov
fildll
inc
ljmp
lock
or
push
loop
mov
repz
xor
pop
cmp
cld
adc
push
popa
and
mov
mov
mov
jb
pop
xchg
sbb
insb
xor
mov
cltd
inc
sub
ret
cmp
xchg
fs
push
xchg
pop
arpl
scas
or
and
inc
pop
push
adc
mov
rorb
les
dec
incl
adc
push
mov
call
inc
insl
inc
xchg
dec
scas
inc
gs
lock
pop
iret
stos
cmp
repnz
or
repz
sbb
dec
or
jae
loop
fnsave
xlat
out
stc
mov
in
out
pop
outsl
ljmp
xor
jae
jns
cmpsb
call
xor
inc
inc
xor
mov
mov
inc
xchg
add
into
lds
rcrb
cmpsl
cltd
jg
out
mov
cmp
lret
xor
xchg
stos
lret
dec
gs
jbe
xchg
xchg
mov
sub
jb
jno
mov
enter
xor
out
and
jb
push
lea
xlat
and
int
cmp
push
test
int3
and
lea
sbb
xor
xchg
stc
aam
or
sarl
xor
cld
push
inc
maxps
inc
sbb
cli
sti
and
sahf
mov
fisubs
sbb
je
mov
pop
xchg
inc
adc
push
dec
push
imul
xchg
jbe
and
xor
push
imul
fs
mov
lcall
pop
cmp
push
stos
fsubrs
xchg
jmp
test
dec
test
in
in
pop
adc
cltd
adc
dec
nop
test
mov
loopne
xchg
loope
mov
stc
push
aam
loopne
int3
inc
pop
add
jo
mov
mov
aaa
dec
int3
pop
jp
pop
or
jnp
xchg
inc
test
jmp
into
mov
fcom
movsl
pop
out
and
cmp
xor
mov
xchg
sbb
fstl
push
shll
jne
addr16
cmp
stos
pushl
inc
sub
sti
mov
xchg
pop
fwait
mov
xchg
int3
mov
jge
mov
jp
ja
add
in
pop
mov
nop
push
stos
int
out
fwait
dec
mov
cmp
sbb
or
xchg
adc
mov
adc
into
push
dec
daa
sbb
clc
mov
ds
iret
push
jmp
dec
xchg
test
mov
jecxz
inc
xchg
xchg
mov
mov
dec
jae
add
dec
cltd
sbb
sbb
push
imul
mov
push
scas
clc
jecxz
sbb
mov
aad
sbb
cmp
movl
pop
xor
lret
out
jns
or
adc
cmp
lcall
cmpsl
adc
lret
push
sbb
iret
xchg
dec
dec
pop
inc
fdivrs
dec
jl
add
sub
and
add
fcomip
in
push
xor
and
and
xchg
mov
loope
icebp
cltd
pop
add
inc
lret
mov
add
mov
insb
pusha
mov
int3
in
lods
pop
dec
xor
add
inc
ds
mov
fisubrl
cs
add
inc
push
inc
into
jg
imul
jecxz
popa
std
sbb
mov
pop
lods
mov
cmp
popa
adc
shlb
popa
in
push
outsb
dec
loopne
mov
addl
out
lahf
outsl
and
inc
ljmp
mov
cmpsl
fmuls
add
mov
sbbb
dec
mov
repnz
mov
out
das
push
sub
jo
jle
cmp
push
or
lds
or
push
xchg
inc
push
sub
ds
sub
pop
add
mov
xchg
pushf
mov
enter
aaa
adc
pop
dec
dec
adc
data16
popf
push
cmp
jb
inc
out
push
fcomps
loop
push
inc
in
dec
fs
adc
push
mov
lret
repnz
push
iret
xchg
sbb
push
movsl
push
movsb
push
lahf
jp
pop
xor
cmpsb
cltd
hlt
mov
mov
inc
pop
arpl
stos
pop
sbb
mov
ret
mov
sub
outsb
pop
not
dec
js
inc
lock
fildll
xlat
jl
ret
ret
shrl
cmp
mov
add
xchg
xchg
add
push
cmpb
in
mov
bound
dec
mov
xchg
mov
dec
outsb
jbe
scas
ret
or
mov
jle
jmp
dec
and
mov
dec
into
lods
mov
add
xor
insb
pop
lock
stc
push
sbb
inc
xchg
jbe
repz
cmpsl
imul
fmul
jnp
nop
mov
dec
js
xchg
leave
int3
in
add
adc
rcrl
fbstp
push
jno
mov
arpl
cmp
push
in
pmulhw
inc
movsl
subb
add
cmp
sbb
lods
out
lahf
nop
pop
adc
sub
movsl
or
sub
cwtl
and
aas
pop
jmp
xchg
cmp
repnz
in
mov
rolb
sahf
xchg
in
testb
cmp
mov
sub
inc
cli
out
add
mull
outsl
lods
xchg
pop
cli
mov
imul
lcall
jnp
mov
push
ja
jo
or
insl
ljmp
mov
sub
sub
mov
jb
int3
cmp
or
out
jo
xchg
insl
lods
sub
jbe
fimull
mov
pusha
test
push
mov
jp
pop
mov
cmc
orps
lcall
int
xor
fidivrl
pop
xor
xchg
cli
sbb
sti
cs
stos
xor
jae
push
sbb
or
xor
popf
cmpb
mov
andl
int
lret
mov
dec
scas
mov
xor
mov
popf
adc
cmp
xchg
sub
dec
lret
add
and
add
cltd
hlt
jmp
mov
lods
test
insb
dec
mov
or
push
inc
adc
dec
jae
aad
inc
sub
dec
rolb
pop
mov
fnstenv
pop
sbb
xchg
in
lea
xchg
and
jnp
mov
rorb
outsb
popa
pop
sti
test
dec
fcoml
dec
leave
clc
sub
popa
cmpb
aaa
mov
sbb
fidivl
add
adc
dec
push
in
dec
sahf
mov
cwtl
mov
or
xor
add
inc
dec
cli
ds
filds
out
sub
xor
mov
lods
js
test
scas
mov
insb
mov
arpl
lock
pop
push
mov
xor
push
mov
jbe
cvtps2pi
out
pop
scas
dec
pop
and
cmp
pop
addb
mov
adc
into
jno
xchg
pusha
xchg
rolb
mov
fwait
sbb
mov
outsl
mov
fldt
stos
xchg
or
lea
fsubrs
mulb
and
push
adc
pop
mov
mov
mov
ficoml
xchg
inc
rorl
mov
or
es
jo
jle
lret
idivl
mov
push
fs
pop
data16
inc
aaa
push
push
push
in
stc
mov
mov
adc
push
ja
jge
dec
push
or
stos
push
lds
or
mov
lock
sub
pop
xchg
insb
mov
and
push
sarb
jge
sbb
sbb
std
push
mov
xor
ret
ret
pop
xor
xchg
shrb
jmp
pop
pop
out
sbb
notl
mov
or
jmp
jl
stos
imull
gs
std
cltd
mov
subl
sbb
push
repnz
mov
push
bound
stc
push
into
cmp
sbb
sbb
xchg
popfw
sbb
sti
cmp
xchg
imul
adc
jle
or
pop
notl
cwtl
in
push
push
sahf
xchg
jne
push
xor
jg
mov
sbb
loop
in
andl
aam
sub
jp
fsubr
push
pop
dec
cld
xor
inc
mov
jl
ds
xchg
fs
je
inc
imul
pusha
fnstenv
pop
add
mov
xchg
mov
aaa
fisttpl
es
sub
rcrb
or
insb
push
jg
in
outsl
lea
ja
push
inc
push
ret
xchg
xor
or
cmp
cmp
xor
imul
test
popa
test
xchg
je
jne
in
dec
cmp
mov
or
in
ss
dec
xor
loope
hlt
mov
jp
clc
fildl
shrb
mov
or
cmc
push
adc
divb
inc
push
jecxz
jle
mov
cmp
adc
syscall
add
cmpsl
pop
mov
xor
inc
xor
test
push
jecxz
jae
pop
stc
sub
shrl
cmp
mov
ljmp
scas
mov
popf
pop
xchg
inc
sahf
inc
lret
xchg
imul
jle
lcall
jl
outsb
xchg
xor
fmuls
sub
and
sub
out
xchg
mov
dec
stc
rclb
imul
xor
loope
pushf
add
call
arpl
dec
sub
sahf
push
inc
adc
test
pushf
ret
addr16
in
pop
repz
adc
xor
xor
out
clc
jno
adc
pop
or
dec
mov
fisttpl
test
mov
push
cmc
jg
mov
gs
lods
icebp
inc
call
lahf
mov
fsubl
jecxz
add
xor
clc
icebp
addb
negb
xchg
and
push
add
sahf
aaa
lcall
aas
xchg
jnp
sbb
out
inc
and
jo
cmp
repnz
push
mov
lea
cwtl
jnp
mov
push
lahf
sub
or
popa
jmp
inc
cmp
nop
mov
es
jg
sub
test
shrl
mov
loop
mov
arpl
sub
jb
cltd
cmp
pop
shl
push
jae
out
movsl
out
das
jecxz
scas
rcll
shrb
push
scas
out
ja
sub
add
cmpsb
add
out
push
jno
pop
bswap
pop
movsl
fs
xor
sbb
fistpl
and
je
roll
sbb
call
int3
cmc
sahf
mov
jge
mov
pop
pop
xor
lock
inc
insl
outsl
cmp
rol
fists
pop
mov
rclb
cltd
mov
mov
lahf
inc
arpl
aas
or
inc
mov
mov
and
mov
lods
in
sbb
rcrl
and
push
in
add
mov
lcall
mov
hlt
sub
lcall
mov
aas
push
addr16
int3
pop
sub
xor
mov
xchg
and
sbb
pop
cmc
or
dec
push
js
mov
pushf
cmp
iret
push
in
imull
jecxz
sub
call
icebp
inc
stos
jp
sbb
sahf
cmp
mov
inc
popa
mov
mov
hlt
sub
rcl
mov
jecxz
ret
push
mov
call
push
dec
add
loope
add
fwait
mov
adc
xor
rcrb
jle
out
rcr
loope
adc
inc
jae
inc
mov
pop
lock
jns
or
mov
outsl
sub
adc
lods
dec
js
enter
out
add
in
fmuls
xchg
xlat
scas
mov
je
mov
pushf
and
es
enter
rol
inc
cmp
fwait
ja
add
in
enter
lcall
jo
push
js
iret
aad
in
hlt
in
aam
jl
cmp
jecxz
cld
sub
jo
jbe
insb
fmuls
jae
pop
rep
pop
daa
push
negl
xchg
xchg
lods
test
imul
cmp
mov
mov
sbb
xor
mov
and
add
or
stc
adc
sbb
xchg
mov
pop
mov
int
or
mov
movsl
mov
ret
xchg
das
mov
addr16
xor
repnz
add
sar
adc
nop
out
jbe
out
in
and
push
xor
insb
arpl
sub
cmpl
or
add
sbb
inc
inc
xchg
mov
mov
sub
cmp
test
xchg
lods
mov
cmp
test
cmpl
mov
mov
stos
fsts
inc
cmp
mov
adc
cs
or
inc
daa
nop
cmp
les
mov
cs
or
inc
std
lock
mov
jle
cmp
addl
subb
cwtl
or
jo
push
daa
lods
shrb
and
or
xor
pop
add
adc
xchg
inc
xor
movsb
pop
pop
dec
fnstsw
and
mov
mov
rclb
lcall
dec
xlat
cli
cmc
test
movsb
jo
test
clc
out
nop
popf
nop
scas
out
or
push
int3
sbbl
or
pop
stos
cmc
pop
add
addr16
cwtl
scas
std
ljmp
fists
out
stos
fwait
in
sub
fwait
iret
and
sbb
mov
and
add
cmpsl
insl
loopne
test
pop
adc
bound
cld
test
ja
frstor
xchg
and
cmp
adc
and
rorb
stc
test
adc
pand
xor
sti
lods
add
cltd
dec
inc
fs
push
adc
jb
push
add
out
lret
pop
ja
loope
cli
add
subl
hlt
jb
out
fiadds
xchg
fstps
or
jmp
lret
inc
pop
push
loop
insb
lcall
cmp
xor
rdpmc
lahf
sbb
movsl
popa
call
push
adc
fidivl
mov
fldcw
cmp
imul
test
and
xchg
mov
pop
adc
int
out
pop
xchg
pop
inc
scas
add
jae
pop
or
inc
cs
dec
lret
adc
mov
inc
nop
fcompl
mov
nop
mov
ljmp
mov
mov
push
dec
pop
sbb
or
mov
mov
call
int3
rcrl
xor
mov
xchg
and
js
sub
data16
fidivs
mov
adc
mov
and
popf
pushf
rcll
fnstsw
cmpsb
loope
jl
mov
bound
in
call
dec
jno
aaa
mov
jecxz
mov
repz
add
mov
adc
arpl
pop
push
ret
cmpsb
test
jo
test
imul
or
mov
popa
dec
addr16
insl
xor
daa
dec
cmp
pop
xor
xor
ljmp
or
cmpb
cmp
call
sbb
xchg
mov
jbe
sub
push
std
iret
mov
or
inc
mov
cwtl
es
in
jg
test
imul
jmp
push
jbe
lret
out
add
call
inc
xor
cmp
lcall
int
int
dec
sbb
jb
mov
mov
sti
daa
filds
pop
jl
jecxz
mov
into
xchg
jae
mov
pop
mov
rcrb
push
and
stc
xchg
cwtl
mov
dec
std
cmovnp
inc
test
jecxz
mov
mov
jl
add
cltd
bound
sbb
inc
add
fwait
mov
inc
ret
into
mov
xchg
jl
loop
adc
lods
test
sub
int3
mov
shlb
pop
xchg
xchg
nop
sbb
sub
or
daa
cmp
leave
xor
fldl
xor
ret
cwtl
add
mov
loopne
cmp
scas
loope
xchg
inc
add
out
inc
in
call
xchg
or
insb
sbb
mov
sbb
pop
int
jbe
cs
out
push
mov
clc
mov
loop
and
mov
add
sub
mov
fdivrl
sbbl
enter
inc
scas
scas
push
lock
cmp
add
lods
ss
add
sub
aaa
push
insb
stos
push
insl
aas
jno
inc
out
push
insb
je
lahf
lahf
pop
mov
mov
sub
aad
inc
out
pop
cmpl
mov
aad
mov
out
mov
mov
adc
sbb
xchg
aam
lcall
daa
xchg
and
enter
cmp
push
jbe
mov
test
sbb
fistpll
test
sub
mov
ret
pop
push
int3
add
and
insb
cmp
jo
xchg
inc
or
and
xor
mov
ljmp
or
xchg
or
mov
movswl
and
xchg
sub
pop
push
jo
jbe
adc
and
inc
inc
xchg
push
and
clc
inc
aas
mov
fcmovnb
adc
mov
push
bound
fdivrl
jnp
pop
and
mov
mov
out
and
imul
sbb
cs
or
cmp
das
xchg
ds
jo
cmp
xlat
mov
adc
data16
sbb
aas
cld
out
push
sti
pop
dec
lcall
jns
cmpsl
mov
aad
das
adc
dec
call
mov
xchg
clc
add
and
popf
pop
or
xchg
je
lods
dec
dec
shll
add
hlt
neg
out
pop
into
push
mov
lea
sub
sbb
mov
fcoms
lods
lret
push
arpl
pop
push
mov
movsb
mov
cmpsb
jo
repnz
mov
pop
imul
pop
and
sbb
xchg
cmpsl
sbb
mov
sbb
in
pop
and
cvtdq2ps
push
dec
push
xor
out
and
mov
add
xchg
pop
ljmp
mov
jge
leave
addr16
cmc
int
cmp
jl
jne
lds
imul
aas
enter
stos
dec
push
fs
cmc
cmpsb
inc
jns
adc
pop
stc
int
lahf
mov
cmpsb
popf
mov
les
loopne
mov
pop
ret
pop
loop
and
xor
iret
push
jae
in
pop
and
loope
bound
cmp
mov
mov
mov
xchg
ds
insb
or
stos
push
mov
outsb
mov
dec
jno
in
js
mov
mov
adcb
xor
stos
adcl
sbb
mov
scas
sahf
add
pop
jno
xchg
lcall
or
lods
repz
add
std
imul
dec
dec
mov
adc
jnp
test
sbb
pop
movsl
dec
rcl
jns
sub
adc
sti
call
in
mov
push
bound
orb
pop
add
test
les
sub
adc
sbb
mov
in
jae
mul
insl
cmpsb
pop
incl
cmp
add
xchg
mov
aas
mov
add
iret
int3
enter
inc
sbb
jp
pop
leave
cld
jl
cld
ja
fisubrs
cmp
cmpsl
pop
sbb
and
imul
sahf
jnp
shrl
mov
mull
imul
xchg
fnstsw
mov
pop
pop
movsb
aaa
cmp
adc
sub
pop
jmp
lret
xor
dec
iret
add
push
cmpsl
cltd
xor
fs
cmc
ret
das
xor
imul
cmp
fsubrl
push
mov
push
sti
insb
jge
and
loopne
xlat
stos
cs
and
sbb
or
ffreep
int
bound
cld
xor
xchg
fadd
mov
push
cmp
mov
mov
xlat
test
push
pop
add
inc
test
sub
adc
sarl
fiadds
add
mov
or
adc
mov
stos
fcmovnu
lcall
mov
pop
scas
jbe,pn
pop
jg
add
mov
repz
and
pop
cmpsb
or
daa
test
adc
cmp
into
adc
clc
mov
jne
bound
inc
insl
xlat
int
xlat
leave
stc
mov
sub
test
push
mov
mov
push
js
div
divl
cs
jbe
xchg
out
xchg
cmp
jecxz
lea
ja
mov
cltd
add
xchg
in
push
ja
cmpsb
daa
mov
xchg
dec
shr
wrmsr
xchg
dec
mov
sub
inc
push
arpl
out
push
cmpsb
dec
ret
pop
push
fstpl
ljmp
mov
call
pop
mov
cli
mov
pop
pop
ret
mov
rcrl
shrl
addr16
lea
bound
add
sbb
and
pop
jmp
dec
hlt
jo
addl
insb
flds
jle
mov
ficoml
in
and
inc
scas
adc
fwait
dec
xchg
mov
addr16
xchg
xchg
jbe
or
test
mov
test
fnstenv
rcl
and
dec
xchg
das
push
sti
push
orb
push
fildl
sbb
push
loop
and
int3
push
movsb
push
popf
mov
push
stos
xchg
xor
jge
lahf
sub
jp
inc
pop
push
adc
rolb
adc
aad
pop
dec
dec
push
mov
jl
mov
mov
rcrl
mov
mov
fstl
dec
pop
pop
adc
mov
and
fbld
adc
mov
std
jne
dec
rcll
mov
cmc
dec
imul
xchg
ss
lcall
repnz
lds
jmp
sahf
xor
cmc
ss
imull
cmpl
jb
lock
mov
movsl
arpl
aaa
sbb
pop
jno
mov
push
ficoml
sub
out
sbb
jecxz
icebp
les
xchg
fidivl
xlat
mov
dec
push
iret
arpl
mov
dec
das
aas
inc
jp
mov
je
pop
xor
cmpsl
mov
xchg
xor
popf
jg
jecxz
push
ja
leave
push
push
mov
js
or
sub
xchg
xchg
push
mov
inc
push
mov
testl
loop
sti
in
xchg
add
mov
shll
dec
mov
iret
jb
call
cmp
jmp
cmc
fldt
addl
jo
dec
cld
cmp
loop
mov
jmp
cmp
sbb
fcom
and
pop
aam
imul
pop
pop
inc
mull
lret
testl
fistpll
sahf
je
repz
mov
sarb
mov
sbb
outsl
xor
pmulhuw
popf
adc
scas
hlt
test
sbb
andl
xchg
nop
andl
arpl
sub
sbb
add
mov
sub
negl
mov
in
lret
or
das
hlt
sarl
xchg
mov
mov
lock
test
cwtl
ljmp
sub
push
movsb
xor
xlat
jmp
and
int3
mov
jp
inc
dec
mov
pop
movsb
xor
imul
fdivr
clc
repz
out
xchg
imul
movsl
enter
sbbl
sub
inc
icebp
mov
sub
fs
mov
pop
iret
loope
jmp
out
push
bnd
lea
aad
sub
incl
sub
psrld
dec
and
cli
add
test
sahf
cld
xchg
inc
dec
push
nop
cld
popa
or
xor
sub
lret
push
adc
movsl
jbe
jo
popf
xorl
xlat
popf
pop
push
push
push
testb
cmp
out
addr16
cmpsl
push
cld
add
and
cmc
mov
pop
in
add
outsl
push
je
imul
mov
dec
cltd
jmp
int3
jp
cmp
iret
add
fmulp
mov
arpl
push
pop
hlt
and
not
push
iret
rcll
int
rcrb
adc
inc
in
pop
and
hlt
in
loopne
cmp
push
jae
ret
in
xor
inc
ja
gs
push
lahf
scas
pop
mov
and
imul
aas
mov
lds
and
mov
iret
adcl
add
push
imul
push
adc
adc
je
cmp
stc
repz
dec
inc
cmp
popf
out
rcrl
shl
test
add
mov
sbb
in
test
pop
and
push
xchg
dec
inc
jge
pop
lret
sub
jb
sbb
or
sbb
ljmp
ret
pop
fisttpll
clc
mov
add
insb
sbb
lret
leave
repnz
jnp
insl
data16
mov
adc
out
pop
jp
mov
push
sub
mov
imul
cmp
ljmp
add
fisubs
movsl
call
push
xlat
out
adc
jecxz
das
push
mov
ss
stos
lds
sub
or
cmp
or
jns
mov
inc
int
pusha
int3
scas
in
scas
das
pusha
in
xor
loop
inc
xor
sbb
fwait
dec
loopne
ret
dec
movsl
and
xchg
loope
outsb
test
adc
iret
mov
push
movb
sti
jmp
push
mov
inc
push
mov
sar
std
pop
sub
mov
pop
or
clc
sub
pop
xor
push
rcrb
sbb
insb
jae
out
fst
cmp
jmp
adc
push
fcmovnu
and
lret
jmp
add
jo
les
pusha
adc
inc
shlb
fwait
xchg
loopne
ljmp
data16
pushf
jae
lock
mov
rolb
jecxz
sub
stos
es
jae
sbb
xchg
push
lret
sub
jg
inc
aaa
push
clc
shrb
int3
cmpl
jno
in
mov
pop
out
push
dec
lods
test
mov
adc
add
mov
mov
clc
lods
pop
xor
cmp
and
xchg
jb
int
pusha
jae
fisttpl
mov
aad
push
cmpsl
jno
lock
pop
jl
fstps
mov
loop
inc
cmova
mov
out
movsl
scas
iret
jne
push
insb
aaa
jp
test
gs
lea
xchg
jne
mov
xchg
mov
sbb
and
and
or
xor
add
push
xor
shl
fbstp
mov
sub
jb
stc
inc
mov
jae
pop
aad
mov
jb
sbb
popa
dec
inc
and
xor
lret
shrb
test
sub
cmpsb
nop
adc
ret
int
roll
add
pop
pusha
ss
popf
icebp
and
add
or
lds
push
xchg
je
mov
icebp
iret
push
xor
add
xor
popa
and
andl
mov
das
ffree
shlb
mov
add
sahf
fwait
inc
jb
pusha
cmp
ljmp
and
daa
xor
dec
jg
in
in
dec
stc
jnp
in
aaa
mov
adc
fimull
sub
adc
jge
rcrb
in
sbb
inc
xchg
lahf
bound
add
xor
sbb
xchg
in
push
sahf
sub
das
dec
cmp
repnz
int
loope
mov
addr16
lret
mov
jb
lret
add
les
bound
sub
out
sbb
fidivrl
cmpsl
push
mov
loope
test
mov
mov
stc
addr16
dec
ss
cmp
les
sub
fnstenv
stos
iret
xchg
orl
enter
nop
imul
mov
ret
mov
xchg
adc
mov
aaa
xlat
push
pop
dec
jns
push
testb
mov
das
or
sbbb
sti
scas
xchg
out
fs
les
mov
stos
jg
pop
mov
lods
out
jb
int3
aas
mov
imul
or
das
into
lods
inc
xchg
test
sbb
and
imul
xor
pop
cld
ss
mov
clc
inc
icebp
sub
cwtl
jns
push
jg
stos
mov
mov
and
push
push
fists
cld
rolb
arpl
push
or
push
daa
shrl
sbb
aaa
enter
call
cmp
std
lret
shll
push
je
test
mov
shlb
and
aad
dec
mov
daa
xor
jae
dec
gs
es
in
mov
rolb
icebp
je
in
setl
rol
cltd
sahf
mov
leave
cs
push
or
mov
jo
lahf
mov
pushf
shl
inc
lock
sub
out
into
cltd
mov
clc
jnp
xchg
lret
dec
sbb
test
clc
sub
and
or
inc
push
test
dec
cmp
jmp
arpl
mov
push
jno
mov
cmp
and
in
aaa
lahf
negb
jbe
mov
fstps
ret
push
jle
or
and
ret
into
dec
stos
inc
adc
cmp
jmp
fiadds
ret
fmulp
add
dec
dec
pushf
hlt
sarl
pop
lock
ss
cwtl
xor
push
movsb
in
outsl
shr
testb
rorl
pop
fcoml
add
loop
xchg
push
fmuls
hlt
jb
das
jae
nop
adc
cld
jo
xchg
push
add
and
imul
cmpsl
pop
sub
push
movsl
mov
sub
cmpeqps
rolb
cmp
test
arpl
mov
cmp
xchg
imul
xchg
lret
sbb
xchg
adc
pushf
lock
fwait
int
or
jne
inc
add
fsts
mov
inc
in
push
loop
call
sbb
cmp
push
mov
cmpl
sub
xchg
pop
stos
lds
movsb
pop
jns
sbb
lods
ret
pop
pop
mov
jmp
mov
push
rcrl
xor
xchg
push
bound
movsb
inc
stos
xor
xchg
jns
ljmp
inc
int
push
xor
jmp
aam
pop
sub
loop
push
and
int
ret
test
and
addr16
jp
idivl
cs
and
or
mov
sub
ret
pop
xor
cwtl
cmp
inc
loop
mov
sbb
js
or
cmpsb
lahf
addr16
ss
jmp
inc
leave
dec
shll
subl
mov
mov
mov
push
test
push
stc
pop
flds
jbe
cld
xor
aaa
cmc
cs
ljmp
call
push
pusha
and
ficoms
pop
xchg
mov
inc
mov
fiaddl
lock
ret
lods
inc
add
scas
test
inc
or
pushl
jne
push
jnp
jle
sbb
and
movsb
movsb
pop
mov
xor
lock
xchg
mov
mov
out
xor
mov
xchg
xchg
xchg
mov
xchg
inc
xchg
jb
stos
jl
lret
scas
xchg
xchg
mov
inc
ljmp
push
mov
push
ss
lock
xlat
jge
out
pop
test
data16
fists
out
aaa
inc
pop
mov
inc
and
pushl
xor
sub
or
or
adc
pop
arpl
int
push
mov
ret
dec
sub
repz
stos
dec
ss
mov
xor
pushf
add
jb
in
dec
repnz
sub
into
add
pop
jp
aam
dec
jle
push
repnz
repz
jb
lahf
test
sub
fidivrl
lret
sarb
xor
mov
mov
mov
loopne
rorb
loopne
lods
loopne
scas
lds
xor
inc
cwtl
and
or
cli
aad
mov
pop
pop
repnz
ficoml
dec
inc
cmp
dec
xchg
jle
pop
mov
xchg
or
cmp
mov
call
push
orb
sbb
cs
cmp
sbb
push
movsl
lea
xchg
cli
into
xchg
mov
sub
and
int
push
adc
jbe
xor
cmpsb
pop
sbb
sub
cmc
mov
ds
push
call
mov
jl
lahf
mov
clc
cmp
cld
mov
dec
jp
lahf
or
leave
out
fisubrs
inc
cwtl
andb
jmp
xor
fdivrs
btc
jle
adc
mov
and
mov
imul
jne
inc
ret
add
shr
jb
mov
out
ret
jecxz
outsb
shrb
and
rorb
push
jmp
imul
pop
into
xchg
mov
fldenv
fcompl
insl
xor
ss
xchg
push
cmp
lods
inc
pop
sub
decl
cs
dec
jl
movsb
mov
mov
mov
popf
mov
dec
inc
add
bound
jno
scas
xchg
loope
pop
orb
mov
subl
ds
rcll
inc
fs
mov
dec
std
inc
int
xchg
test
push
cmc
push
sahf
movb
adcl
dec
xor
das
out
sti
pop
rcll
gs
jne
arpl
jge
ss
sub
mul
push
sbb
cmpsb
lods
jecxz
movsb
lea
in
test
outsb
mov
rcl
arpl
adcl
lea
mov
inc
les
inc
adc
adc
and
ljmp
jl
push
cmpsb
jp
add
fs
ret
mov
stos
fsubrs
sub
lret
xor
outsl
es
push
movsl
pop
fsubl
enter
or
push
ret
int
mov
mov
sbb
fistps
rcl
sub
xchg
push
loope
data16
jne
jecxz
stc
jae
je
shl
inc
data16
aas
mov
pop
in
dec
push
fistl
ds
push
out
or
push
loope
enter
fcmovnb
mov
dec
mov
fimuls
insb
add
in
stos
repnz
imul
xor
outsb
cwtl
cmp
addr16
ret
nop
lea
dec
mov
mov
cmp
dec
add
insb
cmp
jno
cmpsb
push
sbb
cmpl
nop
int3
jle
pop
lea
xchg
mov
xchg
test
imul
cs
pushf
pop
adc
lea
jmp
test
push
and
push
ja
sub
xchg
mov
mov
lea
es
push
repz
rorl
out
add
mov
test
push
jmp
inc
lahf
faddl
insb
or
add
pop
subl
push
mov
mov
jl
push
adc
xor
mov
movsl
stc
clc
cltd
dec
int
inc
and
fcmovnb
pop
mov
popf
pop
cmpsb
jbe
xchg
jnp
mov
or
faddl
push
jmp
mov
scas
cmp
adc
not
push
lods
jnp
jge
test
cld
dec
cmpsb
dec
out
jmp
int
mov
shlb
loopne
cmpsb
push
and
add
imul
push
xchg
mov
arpl
aad
inc
int
test
cmp
in
sbb
sub
fisttpll
mov
andl
cltd
inc
adc
inc
lahf
fpatan
aaa
push
push
or
inc
sbb
dec
mov
mov
sub
xchg
call
test
mov
inc
ret
cmp
and
inc
mov
sbb
popf
call
fdivp
dec
out
cmp
or
inc
add
jl
test
push
add
xchg
cli
mov
dec
xchg
loope
test
mov
mov
fs
jo
add
pop
jbe
mov
fs
xor
lret
push
adc
sub
pop
scas
popa
mov
cmpsb
mov
push
out
lret
inc
lahf
stc
ss
dec
or
mov
pop
scas
aad
scas
jge
xchg
jecxz
add
call
ror
scas
jp
out
jno
mov
leave
xchg
stos
dec
add
pop
in
cmpsl
mov
decl
lods
inc
stc
insb
ret
pop
jb
fld1
jb
pop
cwtl
fisubrl
vpaddusb
insl
fsubs
sub
call
mov
mov
sub
dec
dec
add
sbb
mov
addb
push
pushf
mov
test
sub
sub
loopne
mov
dec
pushf
adc
sbb
imul
sub
subb
jns
lahf
mov
ss
pop
imul
mov
push
fwait
test
pushf
ss
add
cmp
xchg
jge
pusha
out
xchg
mov
inc
pushf
dec
pop
hlt
jle
andb
sbb
rorl
movsl
jg
mov
mov
mov
sub
imul
andb
adc
mov
lret
in
cltd
ja
jbe
inc
lods
hlt
shll
jge
xor
sbb
popw
adc
xchg
clc
rcrb
fadds
out
dec
push
test
xchg
pusha
in
mov
icebp
and
sub
pop
popa
pop
rcl
add
sbb
adc
cmpsb
add
or
pop
scas
aaa
aam
mov
add
mov
test
jl
sbb
addr16
inc
inc
xor
sub
jo
int
pop
inc
sub
sub
loope
lock
jl
lock
jno
icebp
aam
mov
mov
testb
dec
pop
popf
aaa
leave
sub
push
add
jb
pop
outsb
sub
ffreep
or
loopne
mov
lret
and
shll
jbe
mov
inc
mov
cli
sub
repz
push
mov
mov
das
sub
pop
adc
scas
inc
insb
sub
flds
cmp
popa
lret
movsl
xchg
pop
fidivrl
mov
mov
sbb
jo
push
nop
pop
scas
cmc
pushf
faddl
and
movsl
mov
jne
inc
lods
jb
shl
out
xchg
dec
lds
pop
or
adc
rclb
cwtl
test
je
ljmp
cmp
fcmovb
movsb
sahf
xor
loopne
pop
je
sbb
jne
pushf
jnp
pop
or
pushf
or
out
imul
pop
fldcw
push
jne
mov
out
or
mov
ret
push
in
rcl
mov
xor
bound
xchg
sahf
push
ret
aam
insl
dec
rcrb
into
jb
ret
sub
rcl
mov
cltd
fidivl
sbb
cmc
jecxz
sub
clc
icebp
ds
pop
jp
dec
push
mov
sahf
or
pop
clc
rclb
int3
add
pop
pop
push
fsubrl
cmp
lret
push
mov
frstor
faddl
mov
in
jnp
fnstsw
popf
xor
cmp
xchg
mov
pop
lret
imul
cmp
fldt
xchg
movsb
sub
dec
pop
aaa
aas
cltd
js
out
aad
iret
sbb
adc
stos
add
loopne
inc
addr16
addb
mov
jo
adc
xchg
cmp
enter
push
int
push
lahf
dec
popf
mov
je
xor
xchg
sbb
das
rolb
gs
sbb
mov
inc
jae
mov
cld
rcrb
pop
std
push
dec
jbe
test
cmpsl
pop
repnz
mov
pop
cli
stos
mov
outsb
inc
cmp
xchg
popf
mov
jne
lcall
mov
roll
sbb
shlb
sbb
cmpsl
insl
dec
iret
aam
xchg
jno
ljmp
dec
imul
sbbl
daa
js
inc
mov
fisubrl
arpl
test
pushf
test
sub
sub
ret
sti
mov
cmp
pushf
in
xchg
mov
sub
mov
je
inc
or
sub
or
mov
stos
dec
loopne
jle
pusha
xor
addb
sti
pusha
jb
icebp
scas
lret
xor
and
sbb
cmp
aaa
dec
icebp
pushf
lret
pushf
mov
fildll
jnp
leave
push
ss
push
rcrl
jo
push
sub
cltd
xlat
sub
push
cmpsb
adc
inc
dec
pop
ss
repnz
add
leave
sub
outsl
adcl
xchg
add
or
lahf
ljmp
mov
inc
leave
inc
push
xor
dec
adc
pop
data16
sahf
hlt
jnp
jns
push
inc
dec
aas
pop
xor
mov
push
enter
cmp
dec
and
sti
xor
jo
cmpsb
nop
or
or
cmpsl
movsl
adcb
jge,pn
leave
iret
orl
push
or
push
into
repnz
addb
cmpsl
je
push
sub
mov
es
jbe
lods
mov
into
adc
xor
adc
leave
jmp
lcall
mov
das
cmpsl
xor
and
jbe
nop
loop
daa
xchg
fcoms
call
fstl
gs
push
test
xor
neg
mov
push
sti
clc
in
xlat
test
sbb
pop
sbb
sbb
scas
xchg
pop
cmc
ds
enter
sub
push
lods
sbb
stos
loop
pop
aas
andb
aas
outsl
sbb
ss
lret
mov
mov
js
insb
in
test
test
js
bound
stos
addr16
bnd
jp
idiv
sarl
and
iret
inc
inc
or
sbb
mov
mov
psubq
add
outsl
mov
scas
push
mov
hlt
pushf
fmul
sbb
arpl
xchg
sub
push
sbb
call
iret
inc
sti
xlat
jle
pop
dec
outsl
pop
fstpt
call
jae
fdivl
and
bound
mov
xchg
aaa
lods
pop
fcom
inc
jmp
jne
je
ja
mov
push
outsb
mov
out
dec
popa
sbb
aaa
jns
fidivl
or
popa
cmp
jo
mov
xor
and
sub
mov
jb
imul
dec
aaa
jns
dec
js
mov
push
aaa
jne
lcall
mov
test
xor
add
es
mov
xor
mov
std
mov
mov
pop
icebp
test
xor
aad
jb
lret
cli
int
shrl
xlat
pusha
sub
push
outsb
outsl
filds
in
mov
mov
cmpsb
cmc
int3
cmp
outsb
push
xchg
popa
scas
add
pop
rcrl
rolb
insb
cmp
imulb
pushf
aaa
dec
xor
jecxz
mov
adc
pop
lcallw
mov
push
pusha
sarl
sarl
mov
mov
sbb
in
inc
aaa
ret
xchg
xlat
inc
cmpb
dec
and
jno
mov
xchg
push
push
add
movsl
mov
sbb
repz
sbb
divl
jge
jno
mov
stos
xor
sub
push
testb
xor
fstpl
movsb
pop
jae
shll
into
lahf
cmp
addr16
out
mov
call
push
add
leave
sbb
pop
fsub
pop
insl
outsl
fs
icebp
xchg
ss
loopne
dec
xchg
fs
jmp
push
lods
or
push
ret
adc
movsl
jb
fwait
or
sub
push
cmp
or
mov
xchg
rdtsc
or
movsb
push
push
in
les
es
mov
pop
in
loopne
dec
xchg
int
inc
lret
int
mov
inc
inc
jb
adc
imul
mov
xchg
in
mov
push
jbe
iret
adc
test
inc
mov
repz
mov
iret
subl
aam
lcall
jl
testl
sub
pop
sbb
mov
pop
repz
inc
int
dec
adc
cmp
nop
gs
popf
xchg
andb
sar
mov
xor
push
aas
dec
cmp
mov
sub
xchg
insl
aad
jb
and
fldenv
mov
mov
adc
xchg
xchg
imul
iret
cmp
mov
jne
pop
pop
pop
xor
adc
pusha
cwtl
xlat
or
subb
dec
sbbb
add
dec
inc
cmp
adc
or
mov
dec
leave
add
push
pop
popf
mov
push
xchg
pop
and
test
into
mov
mov
jmp
mov
cs
lock
jp
loop
insb
mov
mov
in
loopne
pop
sbb
xorl
gs
push
or
out
or
xor
jp
jge
sub
pop
sbb
sbb
lock
sti
jecxz
jecxz
mov
adc
xor
jp
in
mov
jecxz
std
leave
dec
outsl
push
clc
fldenv
add
or
loop
subl
or
mov
les
fwait
les
cmp
fucom
out
cmp
and
mov
popf
je
gs
push
dec
add
pop
mov
std
sti
add
mov
xchg
cmp
imul
mov
ret
jbe
pop
cmp
cmp
roll
xorb
lock
shrl
js
xchg
push
sub
les
loopne
xor
call
imul
dec
push
fldenv
mov
es
mov
adc
cwtl
sub
int3
jg
lods
inc
or
mov
test
lods
push
mov
push
mov
xchg
inc
jo,pt
push
dec
pop
in
xor
mov
add
cld
inc
jl
in
rcll
in
fists
fnstenv
sub
leave
push
cli
daa
int3
stos
mov
scas
and
push
adc
jae
fdivrl
push
and
push
push
dec
js
cmpsb
sub
stc
xchg
out
dec
dec
into
cltd
lods
js
inc
push
rolb
xor
loop
notb
cmc
add
ja
lret
fwait
lods
cmp
pusha
xor
in
stos
pop
jo
or
sbb
add
inc
or
subl
push
dec
jnp
mov
cli
cmp
xor
inc
sti
popa
or
and
lods
ss
rorl
add
or
out
jbe
shr
insl
jle
in
pop
std
stos
jp
je,pn
mov
testb
xlat
imul
jg
push
je
insb
xchg
and
xor
inc
shrl
push
in
scas
popa
icebp
mov
and
xor
ljmp
movsl
scas
pushf
in
sbb
dec
cld
inc
inc
mov
mov
push
sbb
in
pop
popf
cmpsb
push
daa
push
adc
ja
loop
xor
stos
ds
and
jne
daa
repz
mov
in
es
jge
mov
jmp
lea
jne
lods
dec
push
aam
add
jmp
imul
cs
rcrl
js
cltd
int
xor
fwait
xchg
or
popa
mov
jnp
pusha
pop
dec
jb
es
cmp
pop
inc
jge
xchg
inc
adc
mov
dec
mov
insb
xchg
lcall
test
stos
and
xchg
into
int3
lret
or
jecxz
mov
stc
movsl
jb
imul
mov
sbb
mov
icebp
adcb
into
mov
sub
in
pop
divl
jl
fbstp
xlat
into
and
addl
repnz
je
aam
fs
dec
lret
mov
xor
cmpsb
popa
mov
jb
jp
inc
into
cs
adc
ljmp
in
xchg
jno
xor
cmp
pusha
push
sub
cmp
mov
enter
cs
imulb
pop
lock
in
sti
pop
mov
mov
fstps
fcoms
sti
sub
mov
mov
adc
sbb
jne
mov
xor
sub
popa
aaa
mov
pop
shll
push
loop
jmp
and
dec
bound
rol
mov
outsl
loop
and
icebp
ljmp
sahf
int
lea
aam
popf
mov
jb
subl
push
xchg
xchg
daa
jmp
or
jg
enter
or
jns
mov
and
sbb
lahf
int
shlb
in
mov
jge
outsb
lds
dec
mov
stc
or
add
or
dec
out
insl
je
jmp
xor
adc
cmpsb
iret
dec
data16
mov
pop
sbb
xchg
sahf
sti
ja,pt
imul
cmp
inc
sahf
lock
imul
shlb
scas
faddl
mov
jmp
mov
or
mov
jbe
cld
loop
or
adc
push
mov
cli
adc
add
lahf
and
mov
icebp
shrb
push
repz
and
mov
cltd
cltd
lahf
sti
mov
pushf
xor
fbld
leave
mov
cmp
mov
scas
fmull
sub
fs
lods
dec
jp
ljmp
cmp
mov
iret
and
les
sub
pusha
lods
out
lcall
insb
shrl
pop
cmpsb
in
mov
and
lret
lret
jns
jb
sbb
rorl
cmp
lds
xchg
add
mov
mov
cmp
sahf
cmpsb
xchg
out
popf
push
jno
mov
mov
loop
insb
fidivrl
ficoms
inc
add
adc
xchg
nopl
daa
inc
xor
jae
js
pop
sub
sbb
outsb
in
mov
mov
int3
popf
xchg
jl
insb
sbbb
push
mov
std
mov
and
pop
rolb
push
outsb
mov
std
or
rolb
movsl
mov
les
jle
repnz
fmuls
xchg
stos
cmp
lret
in
mov
loop
in
daa
add
xor
sbb
jnp
out
ret
out
push
and
idivl
out
xchg
or
sahf
out
mov
xchg
xchg
push
dec
mov
cmp
push
pop
adc
std
loop
add
xchg
mov
sahf
jmp
xchg
fimull
adc
shlb
jb
test
or
js
mov
jmp
das
ljmp
pop
rolb
rcl
push
mov
jb
scas
push
out
pop
sbb
inc
cwtl
jecxz
xchg
sbb
mov
or
cmpl
out
cmpsl
jbe
loop
lahf
pop
jmp
add
fstl
insl
fildll
into
shll
mov
or
pushf
adc
out
mov
cmp
adc
popf
insb
adc
test
arpl
les
call
sbb
jge
test
pop
jge
fidivrl
aaa
shrb
inc
pushf
mov
mov
jno
test
sti
cwtl
subb
fstpl
add
push
or
xorb
adc
hlt
hlt
mov
imul
mov
jns
and
daa
hlt
int3
pop
les
add
and
pusha
mov
int
and
or
push
mov
mov
fs
jae
add
mov
cmp
repz
je
int
cmpsb
mov
dec
nop
dec
into
cmc
pop
inc
fbstp
mov
mov
xchg
leave
xchg
add
push
inc
push
push
je
loop
or
popf
mov
push
xchg
shlb
push
push
push
sahf
adc
or
inc
dec
aam
jle
mov
push
xor
add
test
xchg
addps
fstpt
jge
pop
inc
mov
sub
cli
and
inc
out
jnp
push
imul
mov
push
sub
fists
jp
aas
adc
sub
imul
mov
xor
cmp
nop
cmp
jns
and
rcl
mov
mov
mov
mov
movsb
push
fstl
subl
out
add
mov
or
cmpsl
icebp
sub
sbb
in
and
out
scas
mov
push
test
inc
push
hlt
jb
mov
mov
pop
mov
xor
sbbb
sbb
jne
xor
test
xchg
mov
or
inc
sub
enter
and
sub
scas
or
cmp
dec
mov
fildll
jle
jle
lods
out
push
adc
jp
sti
mov
mov
lret
hlt
push
lcall
enter
lock
lret
jne
mov
cmp
mov
dec
mov
add
and
stos
addr16
sub
or
mov
les
jne
lods
lods
fsts
pusha
mov
je
mov
js
popf
inc
lods
in
pop
out
jmp
outsl
push
iret
leave
cli
add
xchg
or
ss
leave
lods
sbb
sbb
xor
popf
aas
or
stc
cmp
mov
adc
jns
frndint
loope
movsl
int3
mov
xor
ret
fs
xor
pop
pop
addr16
mov
aad
int
push
repz
pop
sub
popf
dec
xor
dec
inc
mov
jno
push
fcomp
pushf
mov
and
jnp
aam
stos
out
es
or
imul
push
adc
popa
lret
sub
dec
adc
sbb
pop
test
mov
inc
add
in
push
jmp
cmp
jecxz
sub
mov
movntq
and
xor
scas
xor
and
or
xor
insb
das
push
inc
fcmovnb
dec
adc
test
sub
mov
add
int3
adc
iret
sbb
in
push
out
lea
in
sub
mov
leave
add
cmp
icebp
insl
xor
pop
and
or
icebp
or
stos
mov
aad
sbb
popa
and
push
addr16
inc
adc
lcall
or
das
stos
cs
std
push
imul
cli
pop
or
inc
pop
cmp
repz
test
clc
jnp
jae
ret
and
inc
and
fbld
sahf
mov
fidivrs
sbb
pop
dec
cs
popa
push
orl
data16
dec
cmp
xchg
outsb
mov
das
dec
insl
xor
arpl
sahf
jle
jne
repnz
ret
fidivs
rcll
sbb
pop
mov
into
sbb
jnp
mov
pop
push
lds
call
xlat
iret
xchg
into
push
filds
sub
mov
jae
lret
dec
scas
insl
arpl
or
cld
push
adc
push
dec
fcoms
pop
fcoms
xor
xlat
dec
and
or
icebp
hlt
push
arpl
mov
pop
ret
xor
cmp
mov
std
dec
dec
in
mov
test
repz
sub
adc
aad
xor
sbb
mov
mov
pushf
inc
mov
add
leave
incb
int
mov
dec
test
xchg
xchg
sarl
int3
push
subb
adc
jge
lods
in
imul
rclb
sbb
inc
cmp
jmp
in
hlt
in
dec
lret
sbb
mov
mov
dec
mov
shr
xchg
cwtl
mov
cmp
movsl
pop
arpl
aaa
push
mov
out
cld
inc
ja
dec
push
clc
cli
je
mov
jnp
sbb
stos
imul
adc
ror
pop
shrl
mov
inc
call
inc
and
icebp
jecxz
cld
xor
das
inc
sub
sbb
add
add
out
mov
fcmovbe
and
mov
shll
push
and
xchg
dec
mov
dec
dec
pop
test
ret
test
test
std
pop
out
lods
adc
mov
mov
mov
out
cmp
mov
inc
fdiv
xchg
push
adc
fildll
sub
dec
cmp
inc
sbb
in
mov
fs
dec
stc
push
mov
jns
test
idivb
sub
and
and
ja
sbb
pushf
add
xor
stos
or
pop
dec
fwait
iret
push
mov
adc
pop
cmp
cmpsl
add
ds
cmp
rcr
fisttps
shlb
out
push
mov
lahf
out
out
jno
pushf
scas
daa
mov
je
gs
mov
jo
lods
mov
pop
xor
pop
mov
xor
ficomps
mov
addb
test
pop
mov
xor
xchg
shll
out
into
ret
xchg
faddl
cmp
cmp
push
lods
hlt
outsb
int3
lods
in
adc
cmpsl
test
pop
mov
ljmp
xor
dec
lret
dec
xlat
sub
mov
sbb
pop
aam
mov
mov
loope
test
xchg
xor
ret
repz
stos
pop
xchg
in
fsts
jae
pop
aad
iret
ds
fisttps
das
loop
add
int
in
jno
sbb
mov
inc
dec
mov
vmwrite
dec
xchg
sub
push
and
push
mov
push
rcrb
push
ret
xor
std
jbe
sbb
movsl
fbstp
loopne
insb
push
out
popa
sbb
xor
sbb
mov
cmpb
mov
ds
stos
dec
aas
andb
outsl
xchg
lcall
jge
clc
loopne
push
ja
ds
hlt
ljmp
mov
jl
push
sbb
and
out
cwtl
or
jmp
cs
test
jge
adc
test
push
data16
pop
inc
dec
ret
cmp
ja
in
pop
xchg
dec
jp
cld
inc
fldl
or
das
sub
push
cmp
dec
sahf
adc
insl
fwait
out
ret
cli
das
lcall
cli
and
mov
cmp
mov
data16
add
cmpsb
out
testb
arpl
les
and
xlat
mov
test
testb
dec
popa
push
aas
aaa
sbb
cmpsl
pop
outsl
movsb
in
add
push
or
sbb
and
aad
jp
inc
mov
insl
push
lea
xor
push
xchg
dec
inc
push
or
mov
shll
push
mov
sbbl
je
outsl
enter
mov
pop
es
cwtl
sub
pop
inc
shlb
lods
rcll
in
idivb
mov
inc
xchg
repnz
jne
xorb
dec
and
loope
scas
je
cmp
mov
xchg
mov
ficompl
jmp
cmc
lods
pop
mov
push
mov
and
sbb
cmc
cmpl
outsb
ja
xchg
sbb
jno
xchg
push
mov
movsb
or
and
stos
stc
pop
push
sbb
sbb
out
add
push
fwait
push
lds
aaa
das
sbb
test
fistpll
loopne
test
dec
ficompl
dec
xor
arpl
pop
push
mov
cmpb
stos
fsubs
cmc
popa
test
fs
mov
mov
clc
es
repnz
movsb
pop
pop
or
mov
into
jno
test
xor
outsb
movq
subb
inc
dec
in
ret
lcall
fstpl
push
pushl
push
dec
pop
nop
mov
push
out
scas
mov
xchg
and
out
dec
sbb
iret
inc
movsb
jnp
fcoml
mov
ljmp
lcall
cmp
dec
cld
fnsave
add
xchg
jecxz
stos
xor
adc
aam
add
dec
test
xchg
loop
cmp
insb
xchg
push
scas
enter
mov
aas
xor
gs
std
jle
pop
insb
dec
mov
popa
lods
lahf
rclb
repz
enter
ret
fdivrs
imul
and
std
fstpt
shrl
fs
ficompl
xor
movsb
jno
rclb
test
test
stos
icebp
repnz
dec
xor
arpl
out
cmp
lea
push
push
add
stos
mov
shrl
aam
push
subb
xchg
pusha
clc
xchg
ss
ret
aaa
inc
mov
sub
add
aas
cs
mov
imul
std
repnz
xor
shll
cmpb
sbb
and
pushf
inc
rolb
cmp
mov
mov
inc
imul
and
mov
dec
push
loope
jo
mov
les
sub
pop
add
push
sub
cli
pusha
iret
jp
mov
in
testl
cld
bsr
cmc
pop
and
cmp
fdivs
lret
xchg
gs
dec
mov
aas
sbb
mov
out
insb
mov
pop
dec
or
adc
xchg
outsl
lea
clc
cltd
mov
mov
sarb
cmp
pop
mov
jecxz
inc
pushl
in
pop
pop
mov
inc
inc
mov
mov
add
sub
stc
mov
adc
xor
cmp
mov
inc
loope
jb
fldl
fiadds
fisubl
mov
xchg
cmp
jg
sub
inc
fsubrs
sub
in
jnp
cvtps2pd
rorl
pop
dec
lock
fs
cmc
out
cmp
cmp
scas
add
pusha
xchg
mov
push
add
mov
pop
sub
mov
jle
and
cmp
push
mov
add
addr16
scas
jae
jae
cmp
pop
lock
push
in
push
cwtl
jae
faddl
outsl
scas
dec
data16
mov
mov
aas
xor
enter
lahf
sub
adcb
xlat
mov
xchg
xchg
fidivs
xchg
mov
repnz
arpl
lods
pop
pusha
jb
mov
jp
mov
xchg
and
mov
adc
call
jne
cld
sti
sub
dec
jl,pt
push
cmp
lret
dec
pop
or
push
pop
addr16
sahf
push
jns
sahf
ret
mov
and
xchg
push
leave
jg
leave
cmp
adc
push
mov
in
lret
loop
sub
leave
or
add
fisubrl
push
faddp
push
push
ja
add
sbb
ljmp
fcmovnbe
push
cmpsl
inc
push
adc
ffreep
mov
push
imul
jle
lret
and
leave
push
xor
push
mov
dec
iret
call
cmp
dec
inc
add
fildll
scas
shl
inc
and
ret
out
mov
sub
push
xor
and
inc
dec
mov
xchg
cmp
mov
lahf
cmpb
xlat
mov
lret
nop
xor
dec
mov
cwtl
jbe
dec
fstps
push
push
ds
pop
push
jae
sar
aas
push
mov
cltd
adcl
mov
shl
out
data16
lcall
bound
mov
loope
jbe
sub
fnstsw
xlat
sbb
popf
jo
mov
inc
pop
bound
and
inc
scas
dec
rorb
fdivrp
inc
add
dec
xchg
mov
leave
push
add
enter
aaa
inc
mov
push
xchg
jae
xor
cwtl
lret
ud1
push
push
sbb
outsl
fldcw
xor
push
push
cmp
outsl
sti
mov
fistl
int
push
loope
cs
mov
inc
pop
xor
sub
add
fcom
mov
cmp
in
aad
loop
sbbb
push
icebp
xchg
test
aam
dec
imul
adc
pusha
inc
iret
leave
rorb
iret
mov
mov
jl
xlat
push
and
flds
xchg
stos
sti
sub
add
daa
fwait
jecxz
test
dec
mov
in
push
xchg
sar
jb
ss
aam
faddl
add
cmp
xor
dec
mov
stos
fcompl
imul
push
inc
aaa
cltd
clc
stc
mov
aas
aam
cmp
mov
xchg
movl
clc
fcoml
push
sub
jmp
mov
int3
clc
sub
push
pop
push
sub
adc
mov
xlat
jecxz
insb
jmp
sbb
out
lea
push
subb
mov
cmpsl
aaa
xor
push
negl
mov
mov
lea
xchg
outsb
insl
stc
dec
sbb
cltd
sub
sub
scas
aaa
mov
cmp
push
push
rcrb
aad
and
mov
mov
fsubs
adc
jecxz
push
mov
mov
dec
out
dec
and
outsl
push
mov
scas
mov
sub
push
imul
mov
xor
addr16
cmc
mov
ret
jbe
int3
lods
jb
jg
lea
cmp
rep
dec
push
cmp
dec
addl
adc
aam
jbe
mov
cli
sub
ds
scas
imul
ss
mov
outsb
pop
add
xor
movl
jl
gs
fwait
xor
clc
push
ret
mov
es
addr16
push
jbe
inc
or
aad
mov
jno
mov
adc
insb
jno
movl
mov
adc
xor
invd
push
aad
push
add
aas
inc
imulb
jg
nop
mov
jl
pop
loope
pop
lds
adc
scas
or
xchg
push
cmp
or
cmp
pop
psubq
data16
mov
fldenv
fnsave
jns
fidivl
or
mov
jo
cltd
jle
cwtl
into
cltd
movsl
stos
test
and
cltd
pop
jnp
test
cwtl
sti
adc
mov
sub
and
xor
adc
subb
xchg
jl
lret
xchg
fadds
test
testl
sahf
add
xchg
iret
fwait
int
cmpsb
sbb
outsb
inc
push
js
inc
add
pop
nop
ret
test
insl
cmp
ret
fiadds
dec
mov
or
ret
insb
pusha
in
lcall
push
clc
mov
or
mov
flds
test
or
dec
aas
mov
repnz
lock
sbb
or
xchg
sahf
mov
mov
xchg
inc
imul
cmovp
push
mov
xchg
in
mov
mov
sub
insb
in
je
xchg
and
pop
dec
dec
cmpsb
mov
pop
call
scas
cmp
jmp
hlt
dec
movsb
mov
xlat
jne
data16
test
mov
xchg
xchg
xchg
mov
jp
push
leave
adc
jb
push
and
cmp
outsb
push
movsl
mov
cmp
call
aad
mov
cmp
ret
dec
gs
jg
push
insb
sbb
fistpl
and
pop
std
xchg
nop
repz
sbb
incl
jns
and
std
lret
repnz
pop
inc
add
lcall
xchg
lods
aad
stos
pop
dec
ud2
leave
mov
push
pop
and
aam
repz
add
mov
imul
cmp
lcall
es
andb
cmp
mov
lock
bnd
std
sti
xchg
xchg
fnstenv
jle
adc
jp
inc
and
or
pop
fimull
jmp
flds
cmp
jb,pn
mov
pusha
aam
insb
mov
add
sub
repnz
xchg
jbe
pusha
in
sti
xlat
push
mov
xor
jae
aas
loope
decl
pop
or
test
imul
in
jecxz
cmovg
xchg
inc
jecxz
jle
dec
jbe
sbb
dec
sub
sub
test
adc
cmpsb
xchg
jno
test
pusha
push
inc
cmp
add
jp
into
std
adc
sub
stos
les
dec
movsb
push
int3
mov
jecxz
in
mov
xchg
fdivr
in
das
insl
hlt
cwtl
jp
push
shrb
xchg
pushf
or
mov
movsl
sbb
or
fsubs
push
into
mov
test
fcomps
fists
push
push
fldl
loopne
mov
repnz
mov
lock
rcrb
or
jle
dec
rcll
pop
mov
repz
mov
push
pop
out
inc
xchg
xor
insb
fidivs
jb
xchg
xor
cmp
push
sub
mov
shl
movsl
lahf
jno
data16
pop
cmp
inc
xor
fs
mov
sbb
fidivrl
lock
ret
repnz
lahf
fildll
mov
xchg
inc
push
inc
mov
sbb
fisttps
loope
adc
push
jp
dec
adc
cs
in
pop
dec
clc
bound
mov
out
iret
jo
lret
std
add
popf
or
aaa
nop
jecxz
xchg
mov
mov
mov
sub
test
lcall
sbb
in
mov
xor
adc
pop
jle
dec
fwait
rolb
push
jge
cltd
push
mov
push
lock
or
mov
js
fnstcw
fwait
xchg
pop
dec
dec
or
lret
addr16
cmpsb
inc
mov
ret
insl
hlt
sub
test
sub
es
popa
dec
fdivrs
dec
ljmp
loope
sub
orb
dec
push
sarb
adc
cmp
mov
negl
push
ss
call
mov
pop
adc
sbb
fldenv
xor
stos
mov
int3
lock
jno
repnz
lea
iret
shrl
xchg
adc
jmp
imul
imul
and
test
and
mov
inc
shl
push
jg
xor
inc
movsl
mov
roll
sbb
std
cmp
repnz
rol
push
pop
imul
sbb
mov
scas
jecxz
push
gs
add
movsl
or
cs
jnp
push
fs
jge
ret
add
xchg
pop
in
sarb
inc
loop
pop
sub
adc
push
sbb
inc
mov
cli
and
fwait
imulb
or
inc
push
dec
into
decb
aam
shlb
sbb
push
pop
push
ljmp
mov
mov
adc
mov
cmovns
push
jecxz
mov
ds
mov
dec
lds
jb
test
mov
pop
mov
jge
jnp
popa
repnz
adc
xor
arpl
cmp
sbb
or
xor
insl
mov
mov
or
test
add
pop
loope
mov
push
jmp
push
jb
mov
adc
cmpsl
xchg
popa
cmpsb
in
lcall
cmp
cmp
and
call
push
ss
out
movsb
adc
cwtl
cmp
and
popf
push
pop
out
insb
cwtl
int
jns
xchg
mov
mov
jo
movsbl
sbb
popf
pop
xor
jb
not
daa
aaa
inc
fiaddl
test
push
mov
sbb
push
mov
decl
std
out
icebp
inc
mov
movb
jno
in
mov
popf
cmpsl
lods
xor
hlt
and
ja
jae
jg
mov
lods
bound
sbb
cmpsl
inc
fwait
pop
mov
dec
jge
std
mov
out
jbe
in
insb
jmp
in
add
mov
cmp
jmp
imul
shlb
fdivp
lods
jo
jae
dec
or
addb
cli
pop
push
xchg
call
ret
add
out
jl
out
adc
idivl
push
mov
ljmp
nop
xchg
jne
je
pop
mov
pusha
out
cmp
lock
andl
aad
lods
and
out
cltd
dec
insb
or
xchg
cmp
lea
das
add
pop
inc
inc
icebp
jecxz
mov
pop
jl
mov
sbb
jmp
cs
loop
imul
xchg
sub
and
subb
aam
shll
nop
icebp
test
arpl
mov
pop
cmp
or
shll
fisubs
sahf
aam
and
repnz
lods
pop
cmp
xchg
dec
jmp
movsb
rol
inc
mov
lahf
dec
or
pop
or
lods
pop
and
adc
dec
scas
xchg
or
mov
test
movsb
aas
ret
imul
jecxz
ljmp
int
mov
inc
test
lods
ret
fnstcw
pop
int
int3
mov
add
xor
int
xchg
frstor
test
jecxz
mov
insb
cmpsl
xlat
mov
add
lret
or
inc
rorl
xchg
cmp
push
fwait
inc
push
mov
push
xchg
cmp
scas
inc
jecxz
push
cmp
pop
mov
movsb
popa
pop
mov
pop
hlt
sahf
scas
pop
mov
adc
rclb
jmp
pop
inc
mov
or
jo
movsl
int3
lahf
test
jbe
and
sub
std
mov
mov
push
hlt
cmp
pop
cmpsl
add
pop
pop
push
push
add
icebp
scas
outsl
popf
lea
or
sti
inc
pop
inc
inc
cwtl
ret
cmp
mov
mov
and
jb
ret
jns
xor
mov
lods
movsb
mov
repnz
loop
sbb
sbb
inc
push
adc
push
lock
addr16
ret
sbbb
int
xchg
sub
push
xor
and
jle
andl
hlt
sbb
jne
sub
leave
pop
xor
push
xor
std
ja
xchg
lret
inc
pop
or
pop
rol
push
lret
dec
out
inc
mov
push
jbe
mov
mov
stc
icebp
lds
xchg
shll
data16
fldcw
sarl
mov
mov
cli
mov
imul
mov
test
dec
sbbb
or
insl
dec
loope
test
adc
fs
scas
movsb
jecxz
divb
pop
popa
pop
push
cmpsb
loope
cltd
jae
daa
or
xor
fisubrl
jge
pop
popf
push
decl
mov
push
int
mov
cmp
cli
fs
sub
push
fs
fs
mov
sbb
mov
jge
sub
pop
scas
dec
adc
jp
mov
test
mov
push
xor
into
insl
ftst
repnz
lods
push
lret
xor
push
sbb
outsl
adc
int
jb
fimuls
dec
mov
pop
outsl
push
xchg
punpckhdq
movsb
lahf
adc
outsl
pop
inc
sbb
xchg
push
mov
inc
cli
push
cmp
sbb
dec
stos
sub
mov
scas
jl
pusha
mov
mov
inc
lods
pop
popf
enter
xchg
scas
fisubrl
mov
mov
push
push
cwtl
fists
mov
ljmp
stc
mov
mov
add
aaa
dec
cmpb
mov
scas
pop
imul
and
sbb
test
in
mov
loope
dec
dec
add
arpl
mov
and
mov
ret
jp
hlt
movsb
mov
ficoml
les
nop
imul
stos
mov
mov
adc
lret
or
ss
daa
ds
adc
ljmp
pop
outsl
ret
jne
das
stos
or
ljmp
inc
mov
and
test
inc
adc
movsb
cmp
test
xorl
sbb
jecxz
add
push
adc
int3
mov
addr16
outsb
add
inc
cld
push
xor
in
mov
jae
xor
loop
inc
and
mov
test
and
or
adc
xor
mul
xor
fwait
psubb
push
call
sbb
mul
daa
mov
xlat
test
mov
imul
cmp
mov
cmp
leave
cmp
mov
adc
imul
jne
in
dec
arpl
vpmacsswd
mov
filds
mov
and
sub
scas
dec
fs
add
cmc
les
dec
test
pop
mov
xorl
push
sub
mov
pop
stos
or
push
shlb
push
clc
jae
shrb
std
out
clc
pop
inc
shrl
sub
xchg
or
in
sub
popa
popf
add
out
adc
xchg
or
jge
mov
sbb
ret
iret
xchg
sbb
xor
fnsave
push
cwtl
push
lods
movsl
cmpsl
inc
xchg
inc
sahf
fimuls
or
push
mov
xchg
out
mov
mov
sbb
into
jns,pt
roll
xchg
sahf
lock
ds
stos
add
repz
push
ret
dec
push
dec
jns
add
lahf
add
stc
aam
data16
fstps
ror
pop
lds
lret
push
pop
loopne
inc
mov
ds
bound
push
rclb
outsl
dec
or
adc
outsb
mov
pop
xchg
sbb
frstor
setb
jo
mov
add
mov
jecxz
sub
cs
mov
lcall
sbbb
lea
inc
mov
popa
divb
psubsw
inc
in
jo
dec
sbb
mov
mov
movsl
into
jno
fmull
inc
mov
lods
in
pop
push
lret
dec
aas
std
dec
xor
add
xchg
popa
pop
inc
cwtl
sbb
in
and
jmp
pop
xorl
lock
mov
sbb
loopne
adc
pop
js
dec
inc
ljmp
jo
or
insl
jb
add
and
xchg
sub
inc
ret
mov
mov
js
daa
popf
jle
scas
mov
movsl
mov
cltd
imul
outsl
and
js
or
adc
ret
pop
pushf
mov
jbe
repnz
bound
aam
mov
ret
inc
popa
xor
pushf
lock
sbb
mov
mov
inc
loop
shlb
scas
push
sahf
fstpl
pop
fwait
cmp
pusha
push
enter
jp
into
xor
jmp
or
data16
push
int
roll
mov
test
or
test
sub
pop
mov
push
pop
or
or
rcr
adc
lret
xchg
orb
popa
scas
sub
adc
dec
sub
xor
sbb
mov
pop
scas
stos
mov
jno
jns
sbb
sbb
adc
pop
aam
xorl
dec
add
mov
shll
aas
inc
and
cmovge
inc
sbb
mov
push
pushf
xchg
mov
or
push
dec
or
add
int3
aad
popa
mov
dec
push
cmp
pop
fwait
jb
sub
rdpmc
shlb
into
lea
jno
or
mov
not
dec
jl
add
ret
shrl
mov
xchg
leave
mov
jmp
fstl
and
rolb
mov
pop
mov
mov
inc
std
fdivrs
out
mov
push
or
test
jno
xchg
cmp
inc
mov
xor
xchg
dec
inc
jne
loop
jmp
pop
rorb
mov
pop
adc
out
sub
es
loop
das
mov
and
mov
xchg
stos
mov
add
in
ror
add
rcl
jne
pop
pushf
xchg
insb
dec
pop
xchg
inc
fdivrl
mov
movl
dec
adc
arpl
pop
sub
jmp
dec
xor
or
decl
adc
pop
cmc
lret
cmp
into
out
cltd
mov
idivl
mov
insb
hlt
iret
iret
cmp
in
lods
xchg
jb
mov
lods
in
pushf
cmp
push
adc
in
jg
mov
jmp
out
sbb
movsb
dec
xor
cmpps
aad
or
adc
pop
pop
inc
sub
cmp
aaa
ds
xor
lock
lcall
pop
dec
adc
sub
cmp
leave
imul
mov
stos
and
stos
jns
and
andb
adc
fldenv
nop
shlb
popf
movsl
std
fcomps
mov
in
add
cmp
loopne
loope
mov
in
enter
fbld
or
fdivl
push
mov
loope
dec
negl
sub
lock
adc
repnz
dec
sbb
dec
repz
test
mov
cmpsb
bnd
out
push
adc
push
shlb
and
dec
jo
or
insl
or
imulb
int3
aas
out
mov
pop
cmp
sub
sbb
add
test
sahf
outsb
mov
fdivrs
ds
into
mov
and
fiadds
sbb
ret
fdivs
dec
ret
ss
ja
xor
pop
cmp
and
dec
dec
scas
xchg
xlat
inc
mov
xchg
cmp
aad
addl
loop
xacquire
push
nop
aas
ja
shrb
sbb
or
fists
jbe
cltd
shll
in
in
pop
outsl
xlat
outsl
data16
lcall
cmc
sahf
or
sbb
int
jns
push
mov
imul
test
pushf
popf
cli
jp
jns
inc
scas
aad
daa
pop
or
cli
inc
cmpsb
subb
sub
fsubl
fs
int3
adc
rcrb
jle
mov
pop
jnp
add
inc
mov
dec
loop
lods
xor
sbb
enter
stc
inc
xchg
fsts
les
cmp
sbbl
xchg
aad
fwait
inc
insl
stos
jge
ret
stos
dec
fistpl
fadds
jo
shr
inc
fsubrl
in
outsl
and
stc
add
imul
jge
mov
pusha
icebp
jbe
jecxz
test
test
inc
mov
stos
inc
jge
adc
dec
cmp
add
lock
cmc
inc
dec
loopne
xchg
mov
andb
roll
push
jle
addl
aas
and
mov
xchg
dec
loop
pop
ret
cmc
sahf
adc
adc
leave
fdivr
lea
ret
fs
inc
out
mov
xchg
jno
cld
xchg
dec
aam
dec
xchg
mov
lds
je
das
jb
dec
and
xor
dec
sub
pop
mov
mov
dec
movd
outsl
test
enter
cmc
shr
ret
mov
imul
iret
push
push
xchg
pop
aam
pop
sti
lahf
jle
mov
sub
jmp
sub
stos
jae
mov
xchg
adc
jecxz
pushf
sbb
sbb
sub
push
call
add
dec
loop
loopne
popf
in
sarb
and
rclb
or
std
xlat
lret
outsb
push
in
notb
imul
pop
ss
ljmp
iret
cmc
jno
jae
std
sti
cmp
arpl
aam
sbb
mov
push
mov
adc
cmp
or
imul
or
cmp
mov
cmp
xor
arpl
movsl
pop
mov
xchg
add
pop
dec
mov
adc
pop
push
and
in
imul
insl
fidivrl
sbb
dec
cmp
cmp
into
out
fisubrl
test
adc
movsl
jl
push
pop
jg
lods
sti
icebp
pop
scas
aam
mov
xor
ret
xor
push
mov
ret
loopne
jnp
mov
add
inc
xor
sarb
stos
add
adc
sub
cmp
notb
push
jl
sbb
dec
adc
mov
ret
sbb
xchg
repnz
pop
adc
enter
sub
xchg
divw
shl
mov
data16
sti
xor
mov
sbb
sahf
js
mov
or
sbb
loope
test
push
pusha
outsb
in
xchg
jbe
repnz
sbb
fndisi(8087
out
notl
and
jne
xchg
das
mov
cmp
cmpsb
mov
andb
pop
lock
mov
repnz
push
jg
cmc
cmp
adc
xor
pop
pop
popf
jmp
mov
repnz
xchg
imul
insl
and
iret
inc
daa
pop
adc
fwait
sarl
xor
dec
cmp
lea
cmp
or
mov
inc
add
stc
mov
adc
fsubl
lock
fldt
sahf
cmp
xchg
mov
inc
clc
cs
sbb
dec
or
push
sahf
lret
cld
mov
mov
mov
divl
pop
push
mov
sbb
in
jecxz
outsb
pop
cmpsl
rcl
lret
scas
cmp
fiadds
movsb
out
mov
daa
pusha
dec
ds
insl
xor
mov
or
out
and
leave
shrl
mov
stc
xchg
sbb
outsb
mov
mov
pop
cmp
mov
pop
loope
rolb
mov
ficompl
shl
stc
mov
adc
xchg
inc
shl
push
xchg
cmc
mov
adc
mov
xor
fs
xor
mov
mov
mov
insl
pop
scas
xlat
aaa
xor
pop
lods
push
inc
dec
mov
adc
test
xchg
or
orl
jae
pop
lret
lret
arpl
pop
add
mov
dec
xchg
push
loopne
shrl
lods
mov
rclb
mov
imul
fsubr
vmread
fadds
jb
mov
hlt
dec
pop
repz
xchg
enter
add
xor
pop
repnz
mov
lret
sbb
addr16
sub
xchg
shl
call
jg
fiadds
pop
sub
hlt
mov
fdivrs
push
mov
cmp
inc
xchg
lret
cmp
xchg
add
fisubs
das
idiv
sbb
inc
and
mov
ljmp
int3
pop
fsubrp
cmpl
fdivs
out
jg
cli
sahf
mov
mov
mov
add
jns
mov
dec
je
test
stos
pop
fnstenv
and
rorb
bound
mov
add
sbb
and
pop
lret
aas
dec
add
jp
sbb
insl
fs
dec
xchg
lds
sbb
xor
aas
add
pop
lock
or
pushf
out
test
mov
fwait
sti
jo
lahf
jg
mov
int3
fnstsw
xor
pop
enter
cltd
int3
stc
daa
pop
outsb
test
stos
cltd
movsl
int
adc
and
xchg
adc
mov
pop
leave
stc
fimull
lret
xchg
gs
mov
mov
pop
cli
xchg
push
ds
out
dec
js
cltd
sub
lods
inc
in
push
mov
lds
mov
loopne
gs
test
fimull
jnp
lods
in
xor
cmp
mov
mov
adc
or
and
xchg
jae
fstpl
scas
call
lds
stos
push
sub
cld
jle
xor
cld
adcb
daa
nop
inc
rcrb
in
pop
in
cli
jl
pop
lcall
lret
movsl
inc
mov
icebp
test
mov
iret
out
mov
ror
daa
ret
sbb
in
mov
inc
sub
imul
jle
shll
push
xor
sub
test
nop
adc
push
sti
ljmp
push
and
add
mov
mov
shll
or
jns
sub
mov
dec
mov
aam
jl
inc
mov
call
icebp
jmp
xor
in
fadd
sbb
or
roll
cmp
imul
push
inc
jns
sahf
xor
dec
inc
jg
push
mov
in
pop
ljmp
in
mov
pop
mov
sti
imul
pop
cli
mov
lahf
jge
icebp
or
jnp
into
add
cmc
imul
xchg
push
scas
xchg
pop
cmpsb
jmp
lahf
mov
lods
nop
loope
aad
dec
fcomps
lret
inc
xchg
sub
clc
pop
jae
push
addr16
sub
lods
sarl
out
sub
fstl
mov
jne
hlt
jecxz
movsb
or
aas
or
mov
dec
xchg
push
pop
fs
mov
xor
dec
mov
xor
cmp
movsl
mov
dec
push
scas
cmp
push
imul
or
jae
aad
clc
ficomps
stc
xchg
repz
sub
or
dec
sbb
shr
push
js
cmp
mov
xchg
idivl
scas
stos
cmp
or
call
icebp
pop
dec
xchg
push
mov
in
xlat
imul
bound
push
or
nop
mov
aas
jb
pushf
sbb
jns
mov
dec
orb
insl
test
scas
in
push
add
cli
pop
test
sbb
gs
jp
adc
rorl
jbe
sbb
xchg
add
mov
imul
mov
and
mov
add
ja
inc
pop
es
push
cmp
jns
iret
repnz
out
xchg
sbb
insl
sbb
ret
jo
repz
scas
jmp
pushf
test
addr16
mov
enter
je
add
test
add
mov
int3
sbb
adc
fldl
dec
test
jmp
inc
lods
cld
xchg
jge
cmp
mov
and
cld
cmpsb
fistps
jecxz
les
subb
jnp
xor
inc
mov
enter
rclb
xchg
ficoms
rcll
mov
outsl
movsb
jae
mov
jmp
fsubrp
dec
push
xchg
fidivs
lods
mov
inc
lret
dec
out
pop
outsl
stos
xchg
add
movsb
inc
jecxz
or
aas
jo
xlat
push
out
cmp
insb
xlat
pop
dec
mov
flds
mov
dec
xchg
ja
fwait
xchg
jg
inc
adc
daa
loop
stos
outsl
dec
cmp
jne
and
fcom
in
lods
fbstp
pop
cmpsb
mov
xchg
in
addr16
mov
adc
xor
push
int3
mov
or
sbb
lret
push
xchg
push
add
mov
push
mov
scas
xchg
fdiv
inc
repz
outsl
pop
dec
out
ret
shll
pop
dec
cmpsb
adc
aaa
push
inc
js
xchg
mov
in
cmp
cs
add
dec
and
insl
jle
pop
mov
test
aas
pusha
fidivs
push
push
and
imul
dec
je
enter
sub
sbb
icebp
pop
inc
repz
jns
scas
xor
call
stos
adc
xchg
xor
enter
push
sub
jp
xor
mov
push
mov
testl
sti
dec
push
ss
mov
xor
rorl
xchg
das
xchg
jbe
scas
push
mov
dec
mov
fs
outsb
mov
mov
dec
or
sub
cwtl
cmp
pop
repz
filds
fildll
dec
cmp
jo
mov
lods
lahf
lds
mov
outsb
out
sahf
add
or
sbb
es
vpmadd52luq
add
outsl
inc
pop
into
push
push
in
in
insl
addr16
cmp
dec
jle
aam
test
dec
adc
call
and
stc
fadds
xor
adc
jecxz
lret
jno
add
or
dec
adc
xor
bound
adc
sbb
sarl
xchg
pop
subb
jnp
cmp
js
push
xchg
and
adcb
rol
fnstenv
mov
or
je
lahf
bound
lock
push
std
xchg
ds
add
pop
mov
push
scas
lcall
or
cld
push
stc
stc
bound
or
mov
out
mov
cmpb
sub
xor
lds
insb
adc
popl
pop
jno
xlat
sub
popf
xchg
test
xlat
outsb
movsb
subb
adc
sbb
pop
jp
add
pop
cli
dec
pusha
scas
sub
xorb
and
sub
outsl
xor
imul
ljmp
cli
adc
dec
lcall
pop
enter
jnp
rclb
mov
dec
mov
out
insb
pop
adc
sbb
sbb
pop
lods
in
inc
aaa
xchg
or
jmp
pop
daa
inc
sbb
in
add
sub
fsubs
cld
mov
mov
mov
mov
mov
jns
inc
jg
negb
add
add
popa
mov
jo
jg
stos
push
aam
orl
inc
das
into
int3
xchg
shrl
movsl
sti
inc
sahf
mov
jecxz
jns
mov
mov
push
add
lret
cmpsb
adc
mov
mov
aaa
xchg
ret
push
psadbw
data16
insb
mov
addb
pop
aaa
int3
xchg
sub
clc
outsb
fs
leave
xchg
lods
mov
ds
push
cld
test
repnz
cli
mov
movsb
cmp
jb
pop
inc
jecxz
add
mov
insl
mov
pop
rorb
mov
inc
push
xchg
movsl
jmp
fwait
gs
dec
dec
das
aam
js
jno
lds
inc
cmp
bound
repnz
addr16
lods
movsl
mov
cmc
lea
loop
test
add
dec
sub
test
imul
ja
pop
loopne
iret
dec
jmp
sbb
push
or
push
jb
jecxz
hlt
jbe
jb
push
fstps
nop
adc
add
push
push
pop
jo
xor
adc
xlat
xor
cmpsb
jmp
daa
sub
ja
cmp
sub
jns
mov
std
pop
xchg
negb
ja
popa
mov
nop
cli
or
dec
lcall
sbb
sub
xchg
arpl
jp
jae
mov
andl
and
cltd
inc
int3
aas
ss
xor
das
ja
bound
fcom
jle
pop
mov
cmp
jbe
mov
push
push
inc
enter
fisubs
out
push
das
ficoms
ja
js
pop
sub
jns
cmp
idivl
lret
hlt
inc
jne
jnp
push
jb
xor
jg
popf
jo
loop
adc
push
imull
cld
dec
adc
std
fsubr
leave
mov
and
incb
arpl
jno
ja
pause
fmuls
or
mov
test
or
mov
jge
lods
ss
dec
test
xabort
or
test
orl
rorl
pop
test
mov
stc
dec
ret
std
dec
push
loop
int3
adc
sub
push
clc
xor
stc
in
rol
xchg
and
jae
out
sarl
mov
lahf
aam
daa
clc
pusha
mov
cmp
inc
sub
mov
mov
es
ficompl
jle
or
jecxz
mov
sub
test
and
add
clc
dec
stos
push
imul
add
mov
mov
xor
add
jno
fdivrp
pop
call
inc
popa
mov
ljmp
push
mov
add
movsb
insb
lret
mov
add
cmc
fisttps
push
jo
iret
mov
enter
cmpl
push
push
inc
scas
mov
adc
pusha
and
inc
scas
pop
aas
stc
cwtl
ss
cmp
iret
mov
inc
scas
or
or
push
push
out
cltd
jb
xchg
add
into
xchg
push
lcall
push
jmp
dec
and
out
sbb
sbb
sarb
outsl
stos
fcmovu
xchg
lods
push
xor
repnz
clc
loop
in
push
mov
mov
sub
lock
fidivrl
mov
mov
iret
push
ljmp
or
xor
or
fs
pushf
int3
insl
lcall
in
dec
push
enter
xchg
pop
mov
stc
mov
add
fs
add
rcrb
jp
mov
jecxz
cmp
dec
xor
push
pop
test
outsb
movsb
je
lods
jae
cmc
xchg
mov
or
gs
xchg
cmp
and
les
add
inc
mov
sbb
lock
push
repz
xchg
dec
loop
push
mov
dec
outsl
loop
int3
or
rcrl
inc
mov
xchg
outsl
and
mov
xor
lahf
into
sub
xor
sbb
std
test
lea
mov
scas
je
and
cli
sub
mov
xor
mov
rcrb
test
jl
sub
jmp
sarl
aam
sahf
fs
popa
cwtl
das
dec
and
push
push
mov
mov
mov
mov
mov
inc
pop
ss
bound
jne
mov
pop
cmp
iret
lret
in
inc
nop
xorb
xor
sub
dec
dec
pop
and
outsl
lock
sbb
mov
inc
roll
jl
call
adc
pushf
inc
sub
gs
gs
call
fisubl
in
arpl
or
cltd
js
jbe
pop
sti
pop
dec
inc
std
cli
push
mov
push
popa
pusha
popf
jmp
sub
mov
sub
adc
mov
cwtl
es
mov
pusha
sbb
or
ljmp
inc
mov
mov
mulb
test
xchg
fisttpll
std
out
mov
xor
push
pop
jle
sbb
in
shlb
jl
pop
mov
jmp
fidivs
insb
out
outsb
push
shl
mov
mov
inc
fimull
ja
dec
call
std
vmovdqu
adc
enter
xchg
inc
xorl
jecxz
imul
lret
pop
ret
jb
cltd
dec
insl
into
inc
aam
test
dec
in
mov
push
stos
stos
scas
lea
inc
xor
jmp
cli
mov
add
rcl
iret
sahf
inc
lret
mov
nop
push
mov
outsb
inc
push
mov
movsb
dec
popf
ja
cmp
xchg
xchg
cli
xchg
sbb
push
xchg
lcall
or
sub
or
insl
dec
and
in
pop
bnd
cs
or
or
mulb
in
and
mov
pop
lock
mov
cli
stc
adc
loope
jb
jb
cmpsb
push
pop
and
sub
mov
or
data16
ljmp
inc
dec
sbb
mov
jae
adcb
pop
add
add
ror
mov
push
and
mov
mov
xchg
pusha
and
adc
xor
test
pop
mov
repnz
sub
mov
sbb
cmp
stos
hlt
cmp
in
sbb
and
pushf
jae
lcall
nop
jbe
call
xchg
adc
sbb
mov
mov
push
int3
xchg
push
dec
insl
std
push
push
jg
xchg
or
and
shlb
sub
outsb
pop
sbb
clc
push
mov
mov
nop
xchg
pop
psllq
clc
mov
outsb
cmp
jno
cmp
mov
insb
fs
adc
cwtl
mov
push
inc
inc
imul
lock
inc
sbb
push
insb
ljmp
fisttpll
out
xchg
pop
in
mov
add
jl
mov
push
inc
push
in
sub
push
dec
mov
in
daa
mov
dec
in
mov
adc
lret
cld
ss
jns
mov
mov
jns
pop
jae
cmc
in
mov
aas
push
mov
fcmovnb
pop
outsl
inc
les
mov
xor
and
mov
sahf
rcl
insl
mov
inc
arpl
out
add
mov
xor
push
adc
mov
imul
lret
inc
rorl
bound
in
int
repnz
xchg
dec
mov
or
mov
jnp
out
or
mov
or
push
clc
pop
pop
cld
aaa
scas
aam
sti
fcmovnu
repnz
lret
push
fdivs
cli
in
push
inc
push
or
sbb
push
mov
gs
add
enter
das
jmp
dec
push
jns
mov
dec
mov
inc
and
out
fnstenv
push
shl
ret
sbb
arpl
popf
iret
inc
mul
adc
popf
mov
sbb
icebp
jb
add
cwtl
jmp
sbb
lret
mov
sbb
and
les
cwtl
lds
dec
cmpsl
leave
inc
das
inc
cmp
xor
cltd
sub
fisttpll
bnd
std
jecxz
movsl
add
nop
push
stos
mov
jno
in
or
sub
cld
aaa
jmp
fisubs
push
push
xchg
xchg
insb
arpl
ds
push
in
cld
insl
pop
inc
mov
inc
enter
add
sarl
popf
les
mov
push
inc
loopne
inc
jns
mov
stc
pop
push
aam
in
shll
adc
mov
sahf
mov
mov
out
lcall
cmp
cmp
mov
pop
bound
roll
movsb
mov
pop
fisttpll
scas
addr16
inc
fldt
push
insb
add
pusha
jnp
punpckhbw
shlb
mov
ss
mov
pop
iret
xchg
and
rorb
cmp
ljmp
rcrb
addr16
mov
xlat
and
lret
mov
pop
fwait
xchg
dec
cmp
not
fidivrl
std
insl
subb
je
push
fdivr
fcompl
mov
jecxz
and
jo
scas
fcomps
add
sbb
xchg
mov
ret
pop
pop
xor
repz
mov
add
andb
popf
inc
cmp
mov
sbb
pop
mov
xchg
pop
pop
lods
std
fwait
test
dec
xor
rcr
stos
andb
aam
inc
push
xchg
mov
mov
leave
and
xor
adc
mov
mov
push
cmp
stc
and
insl
mov
idivb
xor
add
sub
ljmp
xchg
lret
push
enter
sbb
jbe
std
test
dec
sti
pushf
insb
gs
adc
pop
cmp
pop
out
push
push
icebp
sbb
mov
add
clc
outsb
cs
mov
mov
jl
bound
sub
ja
outsl
call
gs
in
xchg
addr16
data16
mov
add
jb
out
inc
add
inc
add
push
jnp
sbb
fnstcw
fs
sbb
scas
xchg
dec
ljmp
lock
cwtl
and
mov
sub
jecxz
orb
pop
jns
in
nop
lret
mov
gs
imul
dec
xor
mov
add
insl
fistpl
pushf
cs
xor
mov
gs
shl
sbb
push
pop
ljmp
fidivrs
sbb
and
int3
xchg
out
cmpsb
lcall
hlt
rolb
push
rolb
push
imul
rol
xor
popf
pop
in
das
movsl
call
push
dec
fs
lds
sarb
cwtl
aas
cmp
adc
mov
xchg
rcr
jp
jo
jnp
inc
fbld
mov
fidivrs
push
jle
lea
jl
push
mov
xchg
xorl
mov
loope
mov
ret
add
nop
outsl
cli
xor
jecxz
imul
or
int3
lock
insb
and
push
sahf
dec
jecxz
rol
dec
cld
lds
dec
xor
push
bound
mov
aaa
iret
shll
pop
xchg
shl
mov
jns
xchg
into
jo
mov
sarl
xchg
gs
lret
xlat
sbb
push
mov
inc
outsb
mov
je
test
push
in
lods
cmpsb
dec
rolb
fadds
insl
pop
ret
arpl
push
push
dec
out
ss
push
js
dec
mov
je
jl
lcall
xchg
bound
repz
lock
or
push
inc
scas
push
lds
dec
bound
pop
and
pushf
jle
fs
icebp
sub
inc
dec
out
or
mov
sub
jmp
pop
mov
idiv
insb
cmp
in
and
out
mov
xor
mov
cmc
add
icebp
add
pop
push
lds
js
sub
mov
inc
or
lods
inc
jmp
arpl
xlat
dec
mov
cmpsl
cwtl
add
xchg
xchg
sbb
pop
sub
aaa
push
insl
xor
sbb
add
mov
dec
daa
fwait
ret
xchg
sbb
jae
mov
xchg
pop
out
lods
xchg
in
out
lret
out
cmp
mov
mov
pop
punpckldq
push
push
adcb
jmp
ljmp
lcall
movsb
cmp
xchg
mov
stos
cmpsl
fdivs
mov
mov
sbb
ret
add
and
push
rolb
aam
std
loope
sbb
mov
and
pushf
nop
in
push
jmp
sub
jmp
and
aaa
orb
and
mov
mov
stos
cmp
mov
insb
sbb
pop
stc
bound
and
fldcw
xchg
inc
jo
shrb
lods
push
inc
nop
xor
adc
neg
shlb
out
adc
xor
pop
hlt
ljmp
sbb
lock
pop
sbb
cmp
sbb
fcmovnb
movsl
sbb
mov
stos
sub
add
test
inc
insl
push
out
push
dec
add
pusha
ret
lock
push
lock
or
xchg
arpl
pop
mov
xor
dec
rolb
aad
push
sub
xchg
inc
lahf
ret
add
cmp
cmc
fistpl
and
in
add
add
or
andb
xlat
fistl
dec
adc
lret
int3
inc
divb
test
jmp
jmp
mov
dec
mov
movsb
sahf
ret
imulb
rorl
jmp
or
lahf
xlat
sub
and
fidivs
jge
sbbb
push
mov
dec
sbb
in
testl
mov
loop
mov
and
xchg
pop
push
push
mov
mov
pop
subl
lods
in
xor
pop
and
xor
add
fsubr
dec
jecxz
inc
pop
test
pop
test
pushf
push
jb
or
add
mov
out
inc
test
mov
sbb
lret
mov
mov
mov
pop
push
pop
lret
orl
push
jae
ja
inc
jae
je
data16
mov
rcrl
add
add
and
xchg
insb
ljmp
addr16
pop
test
ficomps
push
in
into
and
testl
pop
out
lcall
enter
not
mov
jbe
popf
repz
xlat
rolb
pop
fisubrl
jno
popf
jne
pushf
mov
pop
aam
nop
call
add
lea
mov
cmc
lods
jns
int
test
cmpsb
aaa
mulb
sahf
xchg
cmpsl
jg
dec
push
pop
xchg
inc
mov
and
mov
cmpsl
mov
stos
fnstsw
pop
push
dec
lock
fcmovu
pop
xchg
out
jg
add
data16
movsb
adc
mov
repnz
stc
mov
dec
je
mov
xchg
pop
enter
dec
pop
les
decb
push
nop
mov
test
cmpsl
xlat
and
insl
enter
ljmp
rcl
push
dec
movsb
sbb
add
das
xor
lds
cmp
aas
sub
or
es
xlat
or
loope
xchg
fs
xor
std
or
xor
test
mov
rolb
insl
scas
dec
je
inc
cwtl
jl
stos
inc
lock
adc
xor
sub
imul
or
xlat
xchg
cmp
cmp
in
inc
sti
pop
out
dec
dec
cld
lea
loopne
insl
stc
or
pusha
pop
pop
nop
hlt
mov
in
rclb
cs
xor
or
cli
fwait
inc
xchg
push
jnp
lea
fisttpl
mov
fmuls
mov
sbb
mov
fs
mov
stc
and
sbb
push
adc
inc
cmp
cmp
dec
mov
aaa
mov
call
jo
hlt
push
xor
push
aas
xchg
adc
push
lret
ret
cmp
enter
shr
mov
mov
mov
outsb
fwait
shlb
cmp
sub
push
push
loope
ror
add
inc
cli
adc
inc
xor
enter
and
cwtl
and
jno
out
pop
mov
mov
inc
mov
sub
lock
shrl
popa
or
mov
inc
icebp
mov
xor
cmp
lret
mov
mov
ljmp
dec
mull
adcl
pop
addr16
pop
pop
jno
enter
push
jle
lock
xor
adc
sbbb
fidivs
xor
or
and
xchg
movsb
repz
scas
out
mov
test
mov
xor
jecxz
subb
mov
mov
xchg
test
pop
adc
int3
mov
into
je
cmp
aaa
adc
scas
bound
outsb
cli
and
gs
out
jae
or
ret
lods
adc
js
repz
aaa
or
pop
out
jae
leave
add
jge
sub
inc
jb
mov
or
cmc
push
in
or
mov
lds
test
mov
dec
ret
jp
cmovbe
pop
imul
shrb
jns
push
jns
push
add
push
pop
jbe
pop
jo
mov
push
aam
jo
adc
jge
into
fimull
imul
mov
add
outsb
push
cli
jge
pop
jecxz
jb
and
cwtl
stos
pop
xorb
dec
sbb
ret
sbb
mov
rolb
movsl
sub
std
jge
out
push
fisubrl
out
and
pop
enter
sarb
adc
cmp
push
jnp
fwait
loop
xchg
dec
mov
rcll
pusha
shlb
lahf
cwtl
pop
jle
adc
xchg
sbb
or
cli
mov
cld
pop
scas
repnz
insb
dec
addr16
call
mov
in
icebp
cmpsl
mov
cwtl
shll
xchg
add
orl
inc
mov
int3
inc
inc
imul
loope
ljmp
cmpsb
dec
decb
dec
xchg
xlat
adc
stos
test
test
mov
scas
cmc
cld
idiv
and
mov
mov
xchg
xor
add
dec
pop
pop
dec
jno
cmp
out
rcll
lock
das
pop
stos
inc
xor
mov
hlt
push
mov
dec
in
cmp
cmp
xor
ss
sbb
jns
shrb
inc
fbstp
mov
sbb
scas
cld
mov
jns
clc
add
jns
ret
jne
in
add
nop
adc
jae
ficomps
xchg
sbb
test
adc
lods
insb
cmpsl
xchg
aad
or
mov
nop
lahf
fwait
fwait
mov
cltd
mov
xor
nop
sbb
cmp
mov
lcall
pop
mov
jl
sub
adc
inc
ficompl
push
daa
dec
loope
and
addr16
and
sahf
push
sbb
xchg
push
inc
or
lret
call
jp
addr16
inc
and
loop
fsubs
scas
sar
subl
aam
cmpsl
xor
shl
das
lds
sahf
movsb
sub
sarb
sub
sbb
sbb
cltd
insl
std
rclb
ds
data16
jl
gs
ja
sti
scas
push
add
sub
mov
push
daa
adc
add
rorb
inc
mov
sbb
and
add
pop
xchg
push
xor
mov
js
xchg
xor
lret
xchg
loopne
stc
in
inc
enter
mov
aaa
gs
sar
mov
jmp
mov
hlt
lret
pop
fnstsw
call
scas
inc
mov
loop
sub
lcall
mov
ss
or
out
pop
in
lock
jo
lea
or
and
adc
xlat
and
mov
ss
jb
push
out
cmp
call
pushf
sub
imul
lahf
loopne
xchg
sub
sahf
mov
jb
adc
push
loope
sub
mov
lahf
dec
in
mov
or
inc
mov
outsl
mov
sbb
icebp
cmc
mov
inc
pop
scas
add
cmpsb
push
clc
iret
loopne
mov
xor
scas
add
mov
xor
arpl
lods
das
cmp
dec
rolb
mov
hlt
addr16
fldt
sbb
dec
mov
cwtl
pop
fistps
ficomps
popf
in
clc
cwtl
adc
lret
pop
sbb
out
fstl
lret
mov
outsl
stos
mov
pop
push
imul
xchg
cmp
jne
sub
mov
mov
mov
add
push
xchg
leave
fsubrs
sbb
mov
lods
cmp
push
fstpt
mov
sub
fidivs
inc
and
push
icebp
cmp
xor
aas
inc
push
clc
roll
imul
daa
fmull
sbb
pop
adc
jg
nop
fstpl
test
push
push
loopne
dec
int
xchg
loope
pusha
fnstenv
inc
aas
adc
sub
mov
jg
test
pop
mov
roll
and
jp
xchg
xor
call
adc
xor
mov
sbb
or
inc
sub
filds
into
bound
jae
fimull
popa
movups
mov
adc
or
xlat
in
lods
les
test
mov
std
test
fbstp
sbb
push
rcll
inc
inc
das
dec
ficoml
adc
pusha
mov
xor
movsl
leave
sub
push
into
push
and
pop
int
jecxz
movsl
or
ficomps
scas
aas
fists
and
pop
cmpsb
clc
out
ret
mov
mov
les
sbb
cmpsl
mulb
aaa
lcall
cli
and
mov
int
popa
nop
out
cmp
sti
fsubr
or
adc
repz
out
stos
aam
movsb
in
and
add
sarb
jp
ret
xchg
xor
repnz
mov
add
pop
out
xchg
leave
mov
in
outsb
mov
cmp
pop
xchg
add
les
stc
mov
pop
xor
cmpsl
fwait
cld
inc
push
and
popf
sbb
or
test
sbb
fld
push
and
pop
insb
mov
incl
xchg
xor
mov
in
ret
mov
pop
scas
pop
mov
mov
xor
jge
pop
sbb
add
lea
jmp
inc
xlat
filds
das
inc
insb
inc
std
out
in
add
mov
out
scas
repnz
and
and
adc
inc
inc
iret
pop
out
add
popf
aaa
inc
int
push
rorb
or
call
pop
jo
hlt
stc
mov
cs
or
das
fwait
pushf
fdivrl
stos
adc
cmc
push
pop
and
jp
nop
out
int
test
push
xor
into
push
cmp
and
pop
pop
leave
in
fimuls
xchg
cmc
xor
xlat
lret
mov
fcmovne
sbb
add
ljmp
aaa
or
jl
pop
xchg
aaa
and
les
add
cli
in
test
stos
lcall
mov
jno
aas
pop
loop
repnz
jae
call
mov
mov
mov
xchg
xchg
or
xor
mov
add
mov
jae
adc
cmp
or
ds
inc
ja
aam
mov
mov
stc
addr16
cmp
or
loopne
mov
cmp
mov
cmpb
ss
pop
push
jmp
fst
ret
call
jae
je
hlt
mov
ljmp
sbb
push
cli
xchg
pop
mov
int
mov
jnp
sbb
jne
jo
rol
fdivp
pop
add
ret
push
xor
mov
xchg
cmp
xor
xchg
xor
inc
lods
and
lcall
mov
mov
clc
adc
mov
pop
in
push
or
lods
das
xor
mov
push
cld
gs
jl
jl
je
dec
lret
pop
stos
das
mov
xor
xchg
lds
stc
xchg
sub
mov
pop
mov
cwtl
inc
pushf
scas
fisubrl
lahf
mov
popf
cmp
dec
and
fidivrl
jge
in
sub
aas
sub
xlat
mov
clc
jno
adc
xor
ficompl
xor
add
cmpl
mov
push
in
ret
and
int3
cmp
xchg
cmp
mov
out
xorl
sub
in
xlat
leave
mov
sbb
xor
xchg
in
idivb
es
daa
push
insl
mov
xchg
imul
sbb
test
leave
inc
loope
test
sahf
outsb
loopne
xchg
xchg
lods
mov
cmpsl
push
adc
test
sbb
fst
push
cmc
lahf
jb
sub
push
xchg
dec
fwait
call
sbb
fldt
ss
les
add
aaa
jl
shr
mov
sub
int
ret
fidivs
shlb
pop
aas
mov
xor
aas
xchg
nop
pusha
pop
pop
fnsave
cmp
mov
xchg
lock
xchg
jp
xchg
pop
xchg
fmuls
jae
push
push
cmc
adc
test
lret
jecxz
imul
enter
dec
andl
jno
and
int
lods
fildll
cvttps2pi
ss
sarb
bound
inc
add
in
nop
pop
inc
push
dec
mov
movsb
ret
arpl
pop
ret
cmp
or
fsub
pop
dec
mov
bound
scas
lahf
mov
mov
out
arpl
jp
xchg
into
in
fstps
push
adc
xor
jnp
test
aas
movsb
dec
sub
es
pop
xlat
addr16
inc
or
icebp
lds
jl
call
sub
repz
xchg
aam
pusha
dec
dec
iret
out
rcll
fisttps
push
mov
xchg
push
xor
lods
ficoms
scas
adc
or
test
jg
stc
std
or
dec
out
inc
cmp
fsubr
cmp
rcrb
dec
cmp
mov
jle
jb
mov
inc
nop
push
ret
pop
add
push
fildll
add
ss
xchg
fldl2t
mov
addb
pop
lea
push
xchg
fadds
adc
je
cs
in
xor
mov
mov
cmp
mov
outsl
mov
inc
sub
mov
cmp
es
je
push
call
fsubl
xorl
push
jmp
inc
xchg
push
pop
pop
jecxz
inc
mov
hlt
and
cmp
fbld
cmp
xor
sbb
pop
mov
shlb
lret
push
inc
cmp
fwait
insl
push
clc
pushf
jmp
std
mov
or
add
cwtl
and
mov
and
mov
shrb
out
lret
add
sbb
in
aad
pop
sub
call
sbb
aaa
xor
pop
out
mov
jnp
test
mov
inc
cmp
xchg
adc
insb
addr16
icebp
in
fs
push
or
into
loopne
aad
mov
mov
add
ret
out
inc
lods
pop
push
scas
testb
call
mov
xchg
dec
jbe
push
mov
in
jns
push
xchg
mov
dec
pop
cmp
cmp
push
icebp
sbb
push
ret
or
popa
popf
out
int
and
cmp
iret
pushf
jl
xchg
push
push
mov
ret
out
fcoms
xor
sub
shrb
fidivl
fnstcw
push
xor
mov
loope
xor
jg
inc
in
xchg
popf
add
in
xchg
xchg
cltd
adc
sub
dec
and
sahf
adc
adc
cwtl
popa
pushf
and
loop
cmp
loope
shll
cli
add
imul
lret
adc
roll
nop
push
popa
loope
aas
jne
and
lods
pop
fstp
in
aad
mov
jecxz
fs
enter
push
jno
or
or
dec
shlb
incb
aam
pop
clc
in
mov
dec
fmuls
insl
jmp
pop
cs
clc
cmp
into
pop
mov
repz
andb
lock
lret
mov
out
pop
dec
xchg
mov
out
push
sub
lds
cli
in
and
insl
push
nop
cmpb
inc
add
mov
repnz
add
sbb
daa
into
dec
ret
cmc
push
xchg
pop
fs
cwtl
push
subl
inc
xchg
mov
pushf
cld
shl
push
jle
lahf
mov
repz
mov
dec
cmc
adc
aam
dec
push
adc
xlat
add
es
or
mov
loop
xor
mov
pusha
outsb
push
push
inc
mov
inc
ss
or
mov
mov
cltd
mov
nop
gs
sub
pop
ja
cwtl
jb
loopne
adc
mov
xchg
pop
pop
push
test
test
sbb
sub
add
sub
dec
lds
pop
cltd
rorb
lds
into
pop
cmp
push
push
adc
cmp
adc
mov
leave
cld
or
sub
mov
sahf
out
and
push
lea
push
movl
xor
rcll
cmp
mov
hlt
out
clc
push
cwtl
inc
cmp
dec
loope
cmpsb
daa
stos
frstor
movsl
xor
push
fstpt
aad
mov
sbb
push
xor
cmp
sbb
mov
mov
dec
push
aam
sub
int3
xor
daa
add
pop
fmuls
xchg
adc
push
pop
or
shlb
mov
jo
outsl
aam
insl
xchg
sbb
scas
fcmovnbe
inc
enter
in
sahf
mov
fdivrl
pop
mov
adc
xor
shll
mov
cli
push
in
xchg
rcr
push
sub
clc
mov
nop
imul
add
mov
sub
cli
stc
pop
outsb
push
fdivl
and
mov
imul
out
pop
movsb
fwait
mov
sub
and
push
cs
and
push
xchg
push
stos
mov
cmpsl
test
mov
ds
into
inc
cli
scas
into
jge
popl
lahf
adc
neg
xchg
xor
loopne
lret
inc
lret
jl
ficoml
inc
push
sarl
leave
lret
sub
fists
adc
sbb
lods
add
dec
sbb
lret
jp
int3
fidivs
pop
sbb
inc
jecxz
xorb
ret
nop
insl
int3
int3
mov
push
les
cmp
cmpsb
mov
push
or
fcomi
jg
adc
xchg
mov
adc
lcall
xor
mov
mov
icebp
repnz
mov
adc
dec
xor
jmp
es
inc
cltd
bound
fmuls
mov
repnz
fldenv
out
pop
rolb
adc
add
arpl
fisttpl
js
inc
into
pop
mov
popa
leave
ds
xchg
outsl
jnp
xchg
mov
lret
adc
ss
aam
cmp
mov
adc
test
pop
sub
lret
loop
std
js
mov
xchg
dec
dec
mov
lods
and
cmp
jg
mov
bound
adc
ljmp
adc
ret
scas
inc
inc
mov
enter
cmp
or
lods
dec
jge
sub
add
imull
adc
push
adc
and
xchg
outsb
mov
addr16
xchg
sarl
adc
xchg
lods
pop
sti
jne
jmp
outsb
data16
inc
xor
sahf
les
into
sub
xor
cmp
dec
aaa
mov
pop
xlat
mov
cmp
inc
mov
xchg
mov
insb
inc
jbe
mov
rolb
dec
pop
ret
shll
mov
aam
inc
call
lods
jb
push
out
stos
je
xchg
push
repnz
rorl
sub
or
fwait
jne
and
testl
jae
mov
daa
sub
fwait
mov
les
sbb
test
scas
or
mov
cmp
insl
cmpsl
sub
mov
and
mov
push
xor
test
mov
je
scas
or
addr16
movsb
and
dec
fadds
jmp
imul
add
cltd
les
mov
or
mov
fwait
push
jg
cmp
fsubl
ja
repz
xor
jb
addr16
inc
in
outsl
inc
push
pop
pop
mov
cmp
fmulp
fstps
adc
repnz
inc
sbb
xor
pop
enter
jae
ljmp
xor
mov
jo
addl
xchg
divb
push
mov
mov
ss
sbb
ret
cmpsb
iret
xchg
sbb
hlt
add
data16
xchg
cmc
mov
xor
aaa
or
xor
push
pop
xchg
mov
lds
repz
movsb
in
iret
mov
adcb
dec
cmpl
push
in
cmp
ffree
mov
int
push
xchg
cmp
repz
or
pop
pushf
pusha
pop
clc
mov
rorl
pop
fwait
or
popa
inc
in
dec
jnp
notb
ljmp
push
adc
loope
dec
mov
cmpsl
pop
jmp
cmp
out
jns
sbb
xchg
aad
push
add
mov
jbe
mov
fmul
push
loop
fmuls
add
dec
inc
jl
aam
or
cmp
push
cli
jo
push
mov
add
test
stc
and
loopne
hlt
sbb
mov
movsl
cmp
sub
jle
push
xor
sbb
imul
pop
mov
dec
ds
out
insb
pop
iret
dec
out
cmp
lds
ret
or
dec
mov
push
add
push
jle
bound
lods
jmp
mov
lahf
dec
mov
in
mov
ljmp
sbb
repz
jecxz
imul
jnp
or
inc
pop
sbb
adc
push
aad
xor
mov
jge
adc
fistl
add
cwtl
stc
sbb
cmp
int3
inc
dec
shl
outsb
sub
stos
in
sti
adc
xchg
fisttps
cwtl
push
fistpll
and
test
pop
ljmp
jg
movsl
mov
cmp
shll
mov
xchg
or
pop
mov
test
loope
scas
pop
movsb
fbstp
icebp
xor
jle
mov
or
arpl
dec
lcall
loop
das
sbb
inc
cltd
xchg
push
lret
lds
stos
cltd
out
mov
push
xor
inc
mov
push
enter
mov
sbb
mov
jecxz
out
pop
sub
rcl
ds
mov
push
jecxz
cmpsl
outsb
nop
xor
xor
pop
and
mov
xchg
mov
jne
fidivl
aas
out
push
movsb
leave
sti
add
aaa
inc
shll
dec
xchg
mov
shll
push
mov
mov
cwtl
loopne
addr16
cmp
addl
data16
xchg
les
xchg
and
outsl
cs
sub
mov
sbb
push
lcall
mov
cmpsb
lds
mov
mov
and
mulb
out
jbe
fnstsw
xchg
lahf
shrb
lods
lea
jbe
out
pop
push
mov
push
loope
js
push
push
stos
lcall
push
popf
fs
inc
addl
iret
and
js
sub
and
add
xor
lods
pop
dec
outsb
sarl
test
xchg
and
mov
mov
imul
repz
es
mov
out
push
mov
push
es
stos
sbb
aad
jle
and
add
into
out
xchg
sbb
mov
lds
pop
dec
leave
dec
dec
fildll
mov
add
imul
push
pusha
movsl
mov
imul
addr16
jmp
ss
ss
cmp
lcall
push
cmp
mov
aaa
sub
sbb
stos
jnp
adc
dec
lret
xchg
rcrb
mov
dec
xor
ss
ror
dec
lea
sub
push
adc
pop
in
pop
stos
dec
inc
cltd
mov
ret
shll
mov
fstl
jae
and
jp
jne
mov
loopne
scas
mov
loopne
test
fs
imul
add
and
push
jbe
push
das
mov
dec
pusha
jae
sub
sub
clc
mov
lods
mov
mov
lods
push
mov
xor
subb
idivl
fsubr
cltd
mov
inc
push
pop
jbe
jmp
ljmp
push
fdivrs
sub
dec
sahf
xchg
sbb
and
mov
pop
rcl
popa
xor
ljmp
cli
icebp
xor
into
jecxz
sbb
sahf
pop
jle
pop
ja
mov
icebp
addb
inc
lcall
std
repnz
out
jae
mov
xlat
rcll
add
subb
andb
add
sub
xchg
mov
or
mov
shlb
cmp
jmp
mov
outsb
jo
fnstcw
add
mov
xchg
sub
aad
aas
jge
fildl
sti
mov
xchg
fidivrs
faddl
cmp
cmpsb
jg
loope
push
inc
jne
push
in
mulb
outsb
inc
mov
aam
jne
aaa
stc
call
fisubs
xor
paddq
and
addb
nop
mov
fs
cmp
xor
push
mov
pop
das
sub
add
aaa
shlb
in
gs
xchg
movsl
ljmp
ljmp
fadds
mov
mov
inc
mov
push
lds
in
pusha
out
sbb
inc
or
and
dec
out
test
add
shrl
add
add
adc
arpl
cmc
jns
lret
into
sub
jno
inc
fldl
lds
faddp
out
data16
inc
inc
cli
jns
aaa
jge
and
xchg
jp
xor
mov
scas
and
xor
inc
sbb
xchg
cmp
mov
inc
aas
mov
mov
pop
sti
mov
dec
cmp
jo
cld
sbb
mov
arpl
mov
cld
data16
xor
push
mov
in
sbb
mov
mov
rolb
ret
gs
int3
das
gs
sbb
cmp
jo
mov
add
sbb
cli
in
mov
cmpsl
scas
mov
push
lods
ljmp
xchg
test
cmc
xor
in
push
not
bound
ljmp
cmpsb
mov
subb
jbe
popa
pop
repz
xor
scas
call
jnp
sbbl
insb
mov
loop
fldenv
dec
inc
les
addr16
seto
inc
cmp
mov
cmp
pop
mov
call
idivl
mov
xor
stos
xor
movsb
ds
sub
into
popa
or
inc
push
mov
js
insl
push
insb
gs
fisttpl
pop
aas
pop
or
rcrb
ja
fsubl
insl
and
push
mov
sbb
mov
jmp
shlb
xchg
addl
mov
dec
incl
loope
sbb
inc
cltd
cwtl
addl
fwait
std
and
das
rorb
and
les
mov
shll
push
jns
push
cmpsl
sbb
push
fwait
leave
fisubrs
mov
sbb
iret
shl
fists
das
push
repnz
mov
or
aad
mov
shl
js
jnp
in
xor
dec
jne
ljmp
insl
popa
xor
outsl
mov
cmp
insl
mov
test
and
fsubl
filds
mov
popf
add
pop
or
sbb
cmp
lods
xor
jno
push
ljmp
and
push
rclb
sbb
mov
fsubrs
loopne
mov
add
sbb
add
fdivs
adc
adc
loop
jb
cmp
into
std
aaa
mov
push
jo
movsb
std
leave
stc
pop
jle
lods
xchg
jne
and
mov
iret
repz
mov
testl
std
sub
mov
xor
pushf
cmp
jno
xchg
test
imul
and
sub
push
mov
test
or
xchg
leave
jb
int3
cmc
rorl
repz
pop
out
add
lods
push
push
fs
add
or
cltd
lret
out
ja
stos
sarl
std
lods
jo
stos
xor
adc
mov
out
dec
ss
cmpsb
cmp
cs
xchg
lret
fmull
or
imul
push
iret
sbb
int
sahf
dec
mov
call
iret
mov
fsubs
stos
push
xchg
and
movsb
xchg
scas
loope
and
call
xor
iret
inc
clc
out
xor
rolb
sub
adc
das
testb
sti
sbb
mov
or
inc
adc
or
add
adc
jno
add
mov
push
jb
sbb
leave
int3
lcall
jne
or
in
incb
rcrl
or
shlb
stos
mov
cld
imul
mov
outsb
out
popf
dec
loop
jge
fildll
sub
leave
dec
daa
push
mov
mov
and
sbb
rclb
inc
inc
inc
fwait
loopne
sti
xor
or
aam
mov
pmaxub
out
sbb
stc
icebp
pop
xor
movsb
les
ds
lret
idivb
es
in
clc
xchg
in
adc
orl
jmp
popf
scas
cmovp
inc
inc
mov
aaa
mov
out
ljmp
cmp
sbb
cmpsb
jmp
popa
push
pop
decl
xor
ljmp
mov
into
add
xchg
neg
jecxz
cwtl
stos
jne
mov
popf
in
jecxz
daa
pop
movsb
inc
and
aaa
rorl
push
jmp
fcmovnu
imul
pop
mov
dec
cmpps
mov
and
addb
out
fistl
shll
cmpsb
loopne
xlat
cmp
mov
mov
lea
cltd
mov
sbb
push
xlat
cs
push
and
rcrl
lcall
std
lret
stc
xor
and
mov
dec
loopne
dec
mov
popf
icebp
out
rcrb
inc
flds
imul
push
or
flds
stc
pop
into
sbb
xchg
xor
sub
mov
dec
jg
cmp
rolb
roll
stos
xor
inc
xchg
xchg
addr16
iret
je
loopne
int
adc
mov
les
loop
push
mov
pop
iret
jno
fs
mov
scas
sub
gs
cmp
outsl
adc
cltd
sbb
jb
pop
je
lods
sahf
mov
lahf
stos
adc
lods
lcall
mov
std
ret
xchg
das
les
pushf
adc
sbb
loop
cmp
imul
push
mov
into
movsb
and
mov
push
repz
lcall
jecxz
lea
cmp
out
inc
dec
cmc
movsb
or
xor
lock
js
sarb
fadds
jnp
testl
mov
repnz
lea
cmp
and
outsl
or
das
inc
repnz
jmp
pop
xchg
in
daa
popa
add
loope
sub
into
or
push
scas
jae
mov
xchg
xchg
jbe
jb
xor
add
addb
cmp
fsts
into
lret
gs
inc
out
inc
addb
mov
sub
mov
mov
sahf
mov
rcll
cli
in
xchg
shrl
add
loopne
cli
dec
pop
repz
insb
pop
les
mov
mov
xlat
ds
jl
adc
iret
repz
add
push
pushf
push
mov
pop
dec
imul
pusha
or
mov
data16
leave
scas
dec
ret
add
and
dec
int3
xorb
pop
pop
gs
jmp
sbb
xor
inc
pop
inc
mov
mov
in
sub
mov
std
jp
push
in
repnz
in
mov
inc
adc
fcoms
sub
mov
fbld
or
sub
rcrb
roll
test
and
loop
add
outsb
shr
jmp
and
cwtl
scas
push
xchg
mov
rcr
mov
dec
inc
das
adc
sbb
fiadds
sub
rcll
pop
add
imul
flds
imul
ja
cmpsl
nop
dec
jecxz
in
xchg
call
jae
sub
adc
mov
addl
es
arpl
inc
jge
sbb
push
jne
or
cwtl
test
out
jo
adc
ja
inc
data16
xchg
mov
inc
push
xchg
loopne
je
jno
xor
in
xchg
mov
aad
mov
and
sbb
cld
mov
pop
xchg
fnsave
xor
loopne
imul
mov
push
sarl
int3
add
xchg
push
push
out
fistps
adc
ja
das
popf
nop
cmpsl
cmp
cli
jecxz
or
imul
and
test
and
sbb
inc
pusha
imul
or
mov
test
dec
dec
es
cmpsb
inc
imul
dec
fsubrs
jno
dec
out
push
adc
xor
rcrl
xchg
push
rorl
mov
or
pop
cmp
xor
ret
push
imul
cld
or
xchg
div
pop
cwtl
or
inc
mov
in
sbb
movl
cmc
jecxz
pusha
lock
dec
out
test
push
je
addl
out
mov
mov
or
xchg
jno
in
or
inc
data16
movsb
out
push
pop
gs
add
jmp
sub
mov
add
xor
sbb
mov
push
cli
stc
push
xchg
mov
mov
cmc
and
iret
xchg
out
push
xchg
push
xor
mov
xchg
loope
push
cmp
mov
sbb
jne
xchg
rcll
sub
decb
popa
fadds
jge
sbb
push
xchg
mov
pop
mov
mov
pop
or
pop
subl
mov
dec
xor
rorb
jno
sub
outsb
fmul
in
and
xchg
nop
cmp
fs
je
rolb
pop
mov
loopne
sbb
pusha
inc
lcall
mov
and
sub
imul
js
mov
pop
mov
jmp
cmp
loopne
in
les
ja
push
mov
cmpsb
jne
stos
loope
enter
xor
and
mov
arpl
push
sahf
aam
loopne
fistpl
repnz
mov
lret
dec
scas
mov
mov
jns
aas
adc
out
adc
sub
jge
pop
ljmp
push
lds
xor
lods
mov
in
mov
sbb
xor
jg
mov
out
in
xor
sub
test
jbe
mov
jne
lahf
dec
adc
lods
pop
lahf
rorl
cltd
dec
or
stos
idiv
shrb
cmpsb
int3
xchg
or
mov
jg
sbb
inc
call
sarl
enter
cs
mov
push
push
cmp
mov
sbb
aaa
mov
jb
ljmp
leave
push
add
push
cli
xchg
sbb
mov
pop
add
push
mov
jmp
and
fcoms
sub
or
mov
les
add
mov
sbb
subl
leave
dec
xor
or
mov
popa
push
aaa
loopne
sub
mov
dec
pop
outsl
aas
ljmp
lea
adcl
in
outsl
inc
mov
gs
mov
mov
jmp
inc
test
adc
or
fcoml
jno
dec
out
inc
inc
dec
cltd
rcrl
xor
icebp
jnp
mov
inc
rclb
outsb
jae
push
icebp
mov
cmpsl
mov
cmp
jb
inc
mov
inc
and
imul
jge
cltd
shll
xor
fldl
mov
lea
psllw
and
je
cmpsl
jg
mov
cmpsb
push
inc
fsubl
test
js
pop
scas
push
xor
fwait
inc
push
dec
push
mov
add
out
jnp
mov
xchg
iret
xchg
int
mov
jnp
sub
add
dec
imul
hlt
scas
decl
ss
je
dec
xchg
outsl
inc
ds
xlat
adc
pop
push
cli
fucomi
xor
push
push
add
add
shlb
mov
mov
mov
mov
sub
sti
mov
je
out
sti
lods
fcoml
mov
and
aaa
mov
add
or
mov
pushf
aaa
test
mov
mov
loop
mov
ret
mov
ficomps
jns
les
ror
inc
sub
out
movsb
loop
adcl
pop
cmp
inc
inc
or
jnp
inc
cmpsl
sahf
inc
js
dec
push
push
test
push
lods
ret
push
jle
sub
push
ret
pop
xor
nop
mov
jmp
daa
repnz
sbb
repz
add
add
leave
in
jno
pop
das
jp
xchg
fadds
fsubrs
sarb
sbb
xchg
and
enter
mov
stos
jno
xor
lcall
push
pop
jp
mov
aas
pushf
push
sbb
stos
push
es
or
add
movsb
jnp
push
and
cmp
inc
or
mov
cmpsb
add
mov
cli
fmull
push
jecxz,pn
pop
push
cmp
loopne
loopne
jo
out
cmp
lea
insb
lea
aas
push
data16
mov
es
dec
lods
std
xchg
sahf
xor
and
jnp
into
lret
call
and
clc
movsb
inc
jbe
decb
xchg
dec
xchg
scas
xor
sub
push
in
jne
stos
jnp
pop
pop
mov
sub
popa
roll
cmp
and
dec
xchg
mov
push
fcompp
ret
je
and
test
sub
dec
xor
sub
call
mov
loope
pop
cld
jnp
inc
std
push
dec
xchg
shrl
mov
mov
imul
xor
dec
and
dec
imul
cmc
push
insl
insb
test
test
xor
push
jmp
lods
sbb
sahf
cmc
mov
movsb
imul
sbb
bound
inc
mov
xor
fwait
mov
gs
cltd
mov
or
dec
lea
dec
push
push
into
mov
pop
mov
push
add
imul
mov
shrl
std
daa
mov
out
fsubrl
jbe
adc
sti
add
loope
sarl
idivb
mov
clc
jecxz
aam
add
fwait
xlat
jae
jbe
xchg
add
fcomps
stos
dec
addr16
mul
out
rolb
or
fldt
std
jae
dec
rolb
movsl
insb
mov
xchg
in
mov
add
out
dec
nop
icebp
pop
xlat
mov
add
push
fisubl
mov
dec
inc
addl
xchg
das
arpl
xchg
in
bswap
movsl
cmpsb
xor
test
jge
mov
lahf
ja
loope
or
fs
rorl
xchg
adc
adc
aaa
mov
mov
negl
lahf
jbe
dec
pop
ljmp
pop
loopne
xlat
stos
cld
je
inc
push
movsl
sub
and
sub
mov
push
fnsave
mov
loopne
sub
sbb
jb
or
add
aas
cmpsl
cmp
cwtl
jns
jl
jp
mov
hlt
stc
adc
ficompl
out
inc
je
mov
stos
sar
xor
pop
cmp
cs
subl
insl
inc
es
or
mov
out
data16
adc
jmp
mov
das
mov
cmp
ds
data16
inc
or
jl
dec
jbe
scas
jle
or
xor
clc
lret
add
fmuls
lock
jbe
mov
in
sub
and
or
mov
sbb
ja
fildll
xchg
outsl
gs
cmc
mov
test
mov
sahf
dec
repnz
loope
arpl
xchg
shlb
clc
jp
jle
cmp
jmp
out
scas
jnp
fwait
xor
dec
fisubrl
push
ljmp
sub
out
lods
fcmovnu
pop
jns
sbb
pop
or
adc
cmp
pop
push
adcb
sub
mov
jg
xchg
mov
xor
pusha
lahf
in
stc
push
cmpsl
mov
and
jae
mov
inc
nop
add
cmp
loopne
cmp
xchg
outsl
negl
adc
je
mov
xor
or
ja
clc
and
pop
mov
dec
fld
vpshufhw
lret
mov
fwait
mov
cmp
jmp
xchg
xor
shlb
mov
div
ja
movsb
or
and
inc
dec
stos
imul
sbb
lock
sahf
fidivrl
mov
repnz
out
leave
cmp
inc
ljmp
dec
push
pop
aad
aaa
pop
xchg
fstl
xchg
loopne
mov
lods
inc
movsl
mov
mov
dec
jns
es
sub
hlt
shrb
pop
cmp
jp,pn
adc
sub
pop
popf
cmc
xor
mov
scas
scas
in
movsb
pop
fsubr
loop
pop
in
movsl
add
jnp
sub
std
cltd
sub
adcl
mov
xor
or
lods
addr16
jp
jbe
shlb
push
jmp
cld
aam
cmc
popf
mov
mov
push
mov
mov
xlat
iret
push
clc
sub
cmp
das
jge
cmp
add
call
cmpl
pop
mov
mov
sbb
mov
scas
out
push
dec
push
or
fmul
or
xor
movsb
enter
cmp
pop
pop
pop
inc
out
shlb
sub
dec
sbb
or
cmp
xorb
int
lret
mov
mov
iret
in
rorb
cmp
bound
movsl
xor
int3
loope
and
or
push
out
push
arpl
fxam
mov
movsl
add
pop
add
xor
push
das
shlb
dec
push
push
mov
icebp
lock
add
aas
xlat
push
add
add
es
inc
xchg
mov
daa
ljmp
dec
xchg
or
push
mull
mov
add
add
mov
icebp
mov
pop
jge
xor
pop
mov
inc
out
pop
pop
xchg
mov
movsl
and
in
push
pop
pop
adcl
adc
subb
mov
inc
jae
cmp
jg
imul
or
push
sbb
adcb
cltd
jnp
adc
jae
fistpl
xor
in
pop
pop
pop
insb
fidivs
call
xchg
jmp
mov
ja
mov
loopne
mov
in
inc
push
xchg
sub
cmp
mov
js
mov
xchg
leave
stos
popa
mov
cli
lds
lret
aas
inc
daa
inc
sbb
inc
xchg
jns
inc
mov
cltd
mov
mov
dec
and
out
gs
push
or
inc
inc
ret
push
test
roll
adc
in
fwait
movsb
mov
mov
dec
xor
sarb
ret
and
stos
pminsw
jg
and
cmp
push
lret
pop
mov
cmpsl
jae
cld
cmp
push
xchg
shrb
mov
or
cmp
sub
or
out
xchg
and
idivb
mov
lods
inc
pop
mov
and
mov
jg
cltd
lea
push
xor
inc
push
xlat
pop
dec
fstpt
dec
xchg
xor
fildll
xor
stos
call
mov
imul
imul
arpl
or
cmc
pushf
call
jnp
leave
aad
pop
fstl
jl
inc
push
cmp
mov
sub
adc
sbb
xchg
in
xor
mov
scas
pop
pop
int3
xchg
adc
adc
repz
push
mov
mov
inc
je
xchg
adc
int3
adc
push
xlat
imul
in
mov
mov
mov
aaa
cmp
imul
xorb
ds
psllq
fildll
push
cmpl
out
and
je
and
push
push
mov
fbstp
mov
inc
fs
mov
mov
shrl
xor
add
adc
mov
clc
inc
or
mov
mov
pop
cmpb
pusha
or
mov
out
pop
dec
inc
xorb
push
sbbl
dec
jae
movb
sbb
xchg
jnp
sbb
in
add
rcrl
sarl
out
or
sbb
out
jb
movb
push
fldl
push
mov
cmp
stos
loope
fsubl
inc
andl
int
jae
outsl
mov
das
hlt
mov
sub
das
xor
jecxz
popa
es
dec
xchg
mov
pop
jo
fsts
push
dec
js
mov
fcomps
in
cwtl
data16
das
jnp
cmp
pop
cli
xchg
pop
outsl
mov
mov
push
pop
sbb
xor
sub
sub
inc
sub
loope
arpl
adc
ds
adc
push
xchg
jo
mov
insb
cld
xor
in
pop
daa
fldl2e
enter
sbb
mov
dec
divb
jmp
or
inc
rcr
or
arpl
cli
imul
dec
mov
in
jbe
and
mov
fcomip
lea
adc
not
push
outsl
pop
insl
lahf
les
fmuls
mov
imul
push
jg
sbbl
loopne
daa
lea
xor
fildll
push
push
out
mov
adc
ret
popa
insb
mov
xchg
mov
lret
pop
jns
sbb
xchg
xchg
in
shrb
push
test
shlb
setg
call
pop
cs
push
jbe
clc
andl
ret
xor
jae
in
cmc
scas
and
mov
xlat
roll
mov
fmull
aad
mov
mov
xor
sub
jno
movsl
in
sbb
loopne
adc
xlat
push
icebp
out
jecxz
pop
inc
pop
fsubs
in
fadds
cmpsl
xchg
push
ljmp
jecxz
inc
xchg
popa
xor
mov
es
sbb
adc
and
es
js
out
pop
cwtl
inc
pop
pop
insl
push
loop
xchg
pop
cs
pusha
mov
push
pop
jl
stc
rcrb
push
mov
xlat
inc
sub
sub
in
mov
cmpsl
insl
es
jo
int
mov
push
and
leave
and
and
jo
jnp
xchg
insl
sbbb
lret
leave
inc
rorl
ja
test
movsb
mov
fisttpl
jecxz
loop
mov
and
push
mov
add
adc
mov
mov
addr16
fstp
or
mov
xlat
and
je
out
bound
pop
lock
adc
and
mov
xor
aad
push
into
je
sti
idivb
lds
mov
cmp
pop
in
aas
std
pop
lock
aam
dec
pop
out
pop
xor
pop
popf
jno
add
in
cmp
imul
lcall
scas
cmp
lret
mov
jnp
add
mov
imulb
dec
test
jns
sbb
mov
cmp
adc
push
pop
test
das
sarl
in
push
cli
insl
cmp
lahf
test
test
xor
test
jle
sub
mov
inc
push
aam
mov
test
out
sub
xchg
mov
scas
add
hlt
adc
push
dec
pop
movsb
in
push
sbb
lods
add
addl
insl
fdivrs
mov
mov
and
push
ja
push
out
dec
cmp
fstpl
and
ret
sarl
adc
mov
loop
addr16
outsb
cmp
inc
je
inc
push
ljmp
popa
mov
xlat
cli
mov
lcall
mov
lods
andb
scas
mov
cmp
dec
je
jbe
scas
cli
fdivs
or
pop
push
orb
insb
push
xchg
aad
hlt
lret
and
icebp
xchg
stos
push
mov
and
sahf
sahf
add
push
shrl
pop
aam
jl
fsubl
rcl
pop
jnp
cmpl
xlat
outsb
jbe
jne
sbb
jp
or
cld
pop
sbb
pop
in
movsb
add
ret
mov
addr16
mov
xchg
adc
idivl
mov
mov
iret
das
or
gs
or
pop
sbb
jecxz
lahf
cmp
es
xchg
fnstenv
fadd
mov
jge
xor
test
dec
mov
and
inc
ds
mov
pop
or
shrl
mov
fdivs
out
imul
xor
cmp
cmp
jmp
cli
mov
div
pop
mov
sbb
mov
xchg
stc
mov
xor
clc
xchg
repnz
dec
add
mov
ss
fbstp
cs
rclb
jecxz
int
adc
rcrb
dec
xchg
movsl
pop
orl
pusha
cmp
cwtl
and
add
mov
adc
jae
xchg
jg
adc
loop
daa
fisttps
cmp
int
testl
and
cmp
jl
jno
gs
mov
cmp
daa
es
sahf
lret
sbb
push
ret
mov
xor
inc
xchg
mov
emms
imul
arpl
pop
dec
int3
mov
dec
jle
jno
inc
jnp
test
lods
inc
and
inc
je
jmp
sub
cwtl
shll
call
les
xchg
jo
push
lods
testb
in
sbb
xchg
pop
sarb
jno
sub
mov
insl
sub
add
daa
jl
mov
leave
aad
rcrb
fucomip
and
call
cmp
outsl
int
out
add
fildll
loop
pop
scas
push
or
aad
sbb
pop
mov
dec
dec
mov
fmul
xor
sbb
lcall
inc
add
decl
sbb
ljmp
in
add
sbb
ret
dec
out
lods
cmp
pop
jb
adc
iret
pop
jne
ja
pop
and
cltd
mov
shlb
mov
out
int3
sub
std
jns
and
sub
int3
add
ss
inc
inc
rorl
mov
decb
inc
aam
xchg
addr16
dec
cmc
cmp
mov
sbb
ds
cmp
mov
push
jmp
dec
popa
sbb
test
lahf
cvttps2pi
mov
sbbl
xchg
inc
xchg
in
xor
icebp
inc
add
add
imul
test
movsb
test
xor
add
mov
jge
cmp
inc
leave
mov
jae
add
das
adcl
iret
jl
les
int3
sahf
enter
andl
xchg
xchg
test
or
dec
subl
cmc
mov
dec
fidivrl
idivl
hlt
cmp
mov
xlat
popf
pmulhw
outsb
pop
rclb
imul
pop
iret
push
or
popf
fisubs
jnp
adc
xor
xor
jne
push
push
std
incb
mov
adc
xchg
ret
mov
std
fs
and
lods
in
push
flds
cmpb
ret
jle
fldenv
lods
cmp
xchg
xor
lret
mov
ljmp
jns
orl
call
inc
movsl
push
sti
xchg
jmp
adc
fdivl
jno
hlt
aam
gs
cmp
xor
lcall
loopne
inc
rcrl
adc
cmp
movaps
aas
push
xchg
cmp
jecxz
or
lods
inc
cld
sbb
pop
jle
test
sub
jo
pop
jle
push
clc
les
fisubrs
sbb
and
dec
test
sbb
ja
inc
arpl
enter
lock
pop
dec
sub
sub
shlb
notb
mov
repnz
in
add
shll
jnp
inc
pop
push
les
sbb
cmp
int3
mov
les
dec
push
mov
push
mov
insl
inc
pushf
ja
mov
inc
out
add
dec
dec
in
xor
mov
nop
adc
add
daa
mov
sub
cmp
mov
push
lcall
sbb
mov
jno
ljmp
iret
or
fwait
in
lods
inc
add
mov
cmp
mov
push
or
inc
adc
int3
mov
ljmp
insl
sub
int
test
xchg
mov
sti
pop
add
lea
sbb
mov
inc
in
outsl
leave
jp
push
mull
xchg
lahf
xchg
into
jno
popf
lahf
sarb
popf
sahf
and
out
sub
lods
out
push
pop
cli
lock
fnstenv
fisttpll
or
lret
addb
fsts
pop
xchg
or
movsl
add
sub
rcll
sahf
add
sahf
nop
inc
push
inc
aas
xchg
lea
in
cli
subb
sub
mov
add
jns
out
cmpsb
add
push
add
popf
stos
jg
xchg
gs
add
jmp
jb
faddl
imul
mov
fisttps
xchg
sbb
sub
adc
inc
pop
push
jns
xor
fnstenv
in
faddl
sbb
data16
shlb
cmpsb
shlb
rol
add
sub
hlt
scas
test
outsl
push
cmpsl
jne
xor
push
lcall
insl
sbb
jg
push
test
cmpsl
cmp
cmp
stos
es
test
jl
inc
pop
ret
lret
enter
into
inc
mov
jns
ljmp
inc
pop
aam
mov
push
loop
fs
cmpsl
rcrl
mov
in
les
and
lahf
jge
test
loope
mov
das
int3
mov
mov
push
add
loopne
xor
mov
or
add
adc
cltd
cld
dec
xchg
pop
jl
dec
sbb
mov
or
gs
shrb
data16
sbb
xchg
push
outsl
push
sbb
es
or
cmp
test
mov
sub
mov
test
aas
mov
scas
push
shld
ss
js
sub
cli
insb
cmp
xor
cmp
ljmp
loop
xlat
andl
insl
divl
cwtl
ret
jmp
stos
cmpsb
adc
sub
and
ja
mov
ja
scas
jae
insl
dec
xchg
data16
jmp
push
enter
jle
mov
ja
shrl
repnz
xchg
sub
adc
cltd
sahf
lahf
cmc
imul
xchg
dec
inc
enter
push
ret
pop
sbb
pandn
adc
rcrb
test
insb
cmp
out
dec
int
dec
ss
imul
stos
fcomp
scas
adc
cmp
cwtl
mov
push
pop
mov
or
mov
repz
jl
cmp
jg
jb
xchg
cmp
rol
push
movsb
sub
push
mov
or
fs
out
sbb
shlb
push
inc
xor
push
je
xor
outsl
jns
mulb
push
sub
ss
push
cmp
pop
std
ret
lret
and
fnstenv
faddl
ja
cwtl
pop
inc
lds
imul
pop
out
imul
push
stos
lret
ss
loope
pop
loopne
test
in
outsb
call
jnp
add
inc
cmp
cmp
push
or
leave
iret
arpl
inc
std
repnz
xchg
loope
xchg
or
push
int3
mov
push
mov
mov
rcrl
add
divl
test
cmpsl
les
int3
sbb
aas
movsl
inc
add
inc
aas
test
pop
push
add
inc
jp,pn
sahf
das
add
xor
data16
fs
sarl
popa
or
std
and
daa
ds
jbe
xor
sub
sbb
pushf
jbe
outsl
sbb
mov
es
pop
jle
ljmp
dec
dec
lods
out
cmp
fidivs
outsb
mov
jmp
movsl
mov
int
int
cwtl
movsb
xor
jmp
cmp
adc
stos
jnp
mov
push
in
aad
lock
inc
movsb
add
iret
shll
inc
dec
adc
mov
stos
adcb
adc
dec
dec
mov
lahf
test
fidivs
xor
mov
dec
popl
and
dec
and
add
ffreep
dec
sbbb
imul
movsb
inc
popf
cmp
imul
lods
testl
inc
mov
xchg
xchg
lods
and
int3
xchg
dec
lret
pop
dec
sbb
lods
lahf
dec
hlt
test
mov
pop
lret
and
dec
test
pop
clc
xchg
or
or
xor
in
adc
jp
push
jns
jo
cs
loop
sbb
and
fadds
arpl
pop
loope
add
push
push
mov
jmp
addr16
or
clc
scas
xlat
push
push
or
or
bound
cmp
ss
lods
dec
shrl
sbb
clc
sub
je
out
into
adc
out
icebp
jae
mov
pop
xchg
inc
cmp
ljmp
pop
and
mov
enter
cli
inc
fs
jge
and
cmp
lock
cmp
js
sub
test
ret
mov
xchg
nop
or
sbb
fimull
loop
pop
sbb
mov
xlat
pushf
ljmp
clc
stc
ret
pop
pop
sbb
pop
fadds
or
std
xchg
jg
test
nop
mov
push
pop
mov
push
or
sbb
mov
cli
ja
mov
orb
jecxz
aaa
pusha
mov
fsubrl
push
hlt
repz
movsl
jmp
daa
push
cmp
adc
xor
lret
cmpsl
pushw
sbb
testl
add
dec
es
test
cwtl
xchg
loope
dec
rol
mov
and
and
inc
and
out
sub
dec
cmpsb
inc
cmp
pushf
mov
push
mov
loope
movsl
inc
aas
and
dec
cltd
mov
std
jp
xchg
dec
pop
add
dec
xor
lret
fmuls
sahf
js,pn
push
push
push
ret
arpl
scas
out
icebp
sbb
dec
mov
lcall
out
repnz
in
lret
ss
jns
cmc
enter
std
pop
gs
cmpl
adc
cmp
mov
mov
clc
mov
push
mov
cmp
mov
cmp
xchg
sarl
lock
es
stc
mov
fucomp
andb
mov
stc
sub
jge
mov
scas
loope
cld
inc
cmp
xchg
xor
xchg
fsubrp
and
test
lahf
dec
xor
push
lret
ja
and
inc
in
lods
cmp
pop
test
movsl
cvtps2pi
push
leave
popa
sbb
aam
mov
stos
outsb
push
cmp
dec
cmp
xor
orb
iret
xchg
out
xor
jno
mov
shl
in
fcmovnb
getsec
int3
or
ficompl
mov
and
inc
lahf
fdivl
cmp
jns
xor
mov
mov
aad
push
dec
sar
xlat
cmpsb
xchg
fldcw
push
dec
xchg
jb
aaa
shll
jae
in
xor
fdivrs
add
mov
pop
or
add
data16
mov
xchg
mov
and
aad
pop
fbstp
dec
out
fdivs
cmp
testb
jge
out
sbb
or
daa
bound
pop
inc
mov
pop
dec
mov
lods
dec
aaa
dec
enter
push
or
leave
fbld
xchg
fistps
ret
or
in
xchg
stc
in
imul
add
add
mov
ret
pop
in
adc
aad
or
mov
xchg
scas
inc
adc
dec
nop
jmp
sbbl
fsubrs
cs
xor
push
js
and
shrl
std
mov
rcll
jg
rclb
lret
repnz
xor
stos
jmp
and
xor
sti
xchg
pop
adc
cld
and
sbb
xor
xor
jge
or
in
in
push
lret
jno
sahf
mov
mov
imull
and
aam
leave
xchg
in
jp
sahf
hlt
rcrl
mov
mov
cmpsl
adc
and
stos
enter
xchg
scas
cmp
sti
inc
and
push
xor
mov
data16
into
or
add
sub
or
or
shlb
inc
inc
xor
fidivrl
xchg
es
gs
inc
mov
int3
popf
sub
jno
loopne
lea
cmpsb
mov
scas
test
push
mov
mov
push
mov
lock
nop
hlt
push
outsl
inc
jno
pop
mul
repz
in
and
cld
jae
sahf
loop
jp
cwtl
std
cmp
test
push
jo
sub
inc
mov
add
out
mov
push
cld
iret
aaa
lahf
jge
clc
xchg
jmp
jecxz
ror
test
enter
andb
inc
or
int
orb
adc
mov
push
mov
pop
add
out
mov
sbb
into
aad
mov
je
add
push
in
into
repz
gs
dec
push
push
sahf
jns
daa
pop
fiadds
add
inc
sbb
mov
and
dec
lea
sbb
int3
lcall
add
mov
nop
pop
cmpsb
lret
out
lock
jle
andb
mov
in
in
mov
cmp
dec
in
rorl
stos
or
outsl
cmpsb
adc
mov
jmp
jns
add
cld
push
xor
add
lret
dec
repnz
arpl
xor
inc
dec
decb
andb
leave
daa
fwait
or
cwtl
mov
jnp,pn
pop
adc
addr16
cwtl
sbb
movsb
jb
push
sub
addr16
adc
cli
xorb
cmp
fsubrs
pushf
les
test
jae
jle
loopne
lcall
ljmp
pusha
cmc
mov
test
push
cli
jg
xchg
sub
mov
bound
ret
stc
andb
and
hlt
enter
dec
jmp
mov
adc
jle
jbe
call
gs
sbb
lea
add
add
das
push
push
andb
jg
imul
scas
xchg
lock
cmp
test
pop
pop
push
mov
push
lahf
cmp
pop
mov
push
push
mov
ret
test
and
xlat
das
test
xchg
iret
or
and
add
adc
jo
xor
leave
mov
dec
push
mov
sub
lock
or
mov
rorb
scas
inc
or
pop
adc
int3
sbb
scas
pop
mov
hlt
mov
dec
xlat
nop
sbbb
push
pop
xchg
inc
shll
lret
pop
cmp
mov
inc
clc
add
xchg
rcrb
push
in
or
lret
xlat
jno
repnz
nop
xor
xchg
dec
mov
pop
jbe
sbb
fisubl
cmp
movsb
and
mov
jg
add
inc
pop
shrl
pushf
push
pop
cmp
push
test
adc
mov
mov
jnp
xor
pop
out
loope
lods
pop
clc
mov
mov
push
test
cmpsl
push
fs
out
xor
fidivs
push
ds
pop
jmp
scas
sbb
adc
xor
mov
pop
push
mov
dec
push
xor
inc
imul
mov
mov
cmp
ret
cmpsl
or
or
into
jle
sub
das
rcrb
loop,pn
in
xchg
cmp
inc
xchg
notl
fdivrs
aad
inc
and
adc
sub
lcall
mov
pop
lock
pop
jl
jb
shlb
push
add
pop
in
sahf
cmp
push
and
dec
and
out
in
push
inc
xor
mov
icebp
lods
test
iret
in
das
jg
mov
push
je
in
jb
flds
sbb
movsl
jns
fimuls
add
xchg
icebp
in
add
add
jg
mov
cmpsb
sahf
jno
xor
movl
push
and
mov
out
cmp
test
insl
add
scas
mov
call
sbb
jbe
push
and
jno
mov
pushf
mov
js
lret
in
xadd
test
xchg
insl
icebp
xchg
jns
std
add
pop
lock
adc
loope
addr16
imul
in
push
add
inc
in
enter
ret
scas
and
pop
cmp
xor
incl
jnp
xor
push
das
xor
fmuls
add
mov
loop
fndisi(8087
sub
pop
or
call
sbb
push
movsb
sub
sbb
jge
jnp
mov
es
jbe
mov
cltd
mov
jmp
dec
lods
inc
loope
sbb
mov
repnz
mov
jmp
fadds
out
lock
out
adc
xorl
add
icebp
stos
adc
ret
pop
xchg
scas
xor
xor
pop
mov
sbb
cld
into
jns
nop
jns
ret
and
ret
mov
or
add
out
push
arpl
adc
test
sbbb
mov
add
sub
jno
or
cmpsl
push
ret
jmp
xlat
dec
mov
jns
scas
and
xlat
add
das
repnz
pop
repz
push
scas
ljmp
cs
adc
mov
add
add
mov
mov
mov
aaa
stos
test
lcall
mov
cmp
cmp
rcrl
and
add
stc
mov
push
dec
lds
lock
sbb
add
jne
cli
loop
push
pop
jbe
test
inc
ret
push
std
cmp
ljmp
fnstsw
les
bnd
rcll
sub
dec
rolb
add
and
nop
lods
test
push
mov
loopne
mov
adc
mov
in
fisttpll
sub
jg
popf
in
cmp
xor
ja
add
mov
mov
dec
scas
or
dec
shrl
fldenv
jl
add
ss
enter
pop
jne
fcoml
aam
cmpsl
xor
pop
mov
int3
popa
push
cs
lret
mov
xchg
cmp
or
push
gs
mov
xchg
into
sub
ds
enter
fiaddl
xchg
ror
xchg
in
dec
sbb
mov
loope
jp
subb
adc
fsubrl
in
ret
das
je
fidivrs
fisubrl
cmc
push
movsb
lds
sub
imul
mov
or
xchg
lret
push
xchg
cmp
cmp
outsl
mov
inc
les
ss
cltd
push
outsb
pop
ss
call
xlat
inc
push
xchg
arpl
xor
mov
cwtl
sbb
push
xchg
pop
xchg
icebp
push
stos
int
lahf
mov
std
in
add
loope
mov
cmpb
sbb
mov
fbld
mov
das
outsl
sub
stos
mov
bound
stc
cmp
ss
mov
popf
pusha
scas
stos
and
or
je
xor
or
fs
loope
xchg
mov
lcall
adc
mov
fcoml
inc
and
cmc
gs
fdiv
mov
out
cmpsb
fwait
in
sub
test
bound
call
test
fidivs
js
inc
sbb
divl
dec
and
mov
loop
aam
test
scas
ret
mov
add
pop
fnstenv
jg
xchg
mov
negb
jl
xchg
mov
out
jns
into
popl
inc
ss
pop
ficomps
add
cld
pop
push
push
out
mov
and
push
imul
dec
and
mov
fs
test
hlt
lret
cmpsb
jb
sub
call
movzbl
scas
test
adc
nop
jg
adc
inc
int
aam
cli
xor
sub
test
cmp
mov
mull
push
fisubl
xchg
lods
xor
xchg
out
sub
inc
push
inc
inc
sarl
jg
xlat
aas
inc
push
and
mov
mov
sub
pop
lods
and
test
out
lret
xchg
test
xchg
cld
sti
mov
stos
fmul
pop
lods
out
pop
dec
and
call
lods
out
pop
dec
aad
mov
push
popa
repz
out
je
pop
into
leave
push
repz
stos
test
shlb
mov
push
sbb
aad
sub
rorl
stos
sub
pop
in
mov
xchg
mov
jle
mov
mov
rcrb
lods
insb
pop
sub
imul
insb
out
sub
sub
push
add
scas
add
imul
dec
ud1
jg
add
stos
inc
dec
data16
jle
out
xchg
mov
sahf
mov
lahf
cmpsb
sarb
fsubr
dec
inc
dec
cmpsl
stc
dec
pop
outsb
les
mov
pop
dec
pop
xor
leave
insb
mov
pop
mov
sti
add
mov
pop
xchg
sbb
inc
negl
push
test
push
xchg
mulb
push
push
in
dec
xor
mov
sub
inc
test
mov
jb
inc
popf
call
ficompl
sub
ficomps
push
mov
push
lea
or
out
cmp
rorb
mov
pop
mov
or
jecxz
icebp
pop
pop
lock
push
out
aas
push
into
push
pop
and
aad
mov
xchg
test
lods
in
test
push
add
ja
addl
jge
popa
into
adc
cmp
mov
mov
lcall
test
test
xor
lahf
adc
and
mov
ja
ficoml
daa
je
push
ss
adc
movsl
lea
pop
lret
pop
sub
pop
jnp
aam
shr
outsb
sub
mov
in
cmpsl
mov
pop
pop
add
push
push
and
fs
hlt
enter
jp
pushf
inc
mov
test
mov
movsl
stos
sub
inc
fdivrs
sbb
mov
iret
loopne
sub
cli
repz
stc
sub
mov
pop
mov
sbb
je
loopne
repz
sbb
ljmp
add
push
jae
movsb
sti
or
sahf
lock
cmpsl
cmpsb
jb
mov
or
mov
pop
in
push
cmpsl
pop
divb
cs
iret
push
jae
jp
sbb
leave
dec
xor
cmp
push
fmuls
xor
rol
inc
outsb
pop
cli
rcrl
xor
jns
sub
jb
test
dec
andb
sub
mov
mov
outsl
ret
je
sub
inc
popa
out
les
imul
repnz
clc
push
push
xor
bound
cs
or
xor
cli
int3
lods
je
push
mov
adc
dec
add
fldt
adc
mov
fisubl
dec
and
stos
mov
inc
shlb
xchg
cwtl
or
cmp
mov
mov
in
movsb
or
mov
adc
sub
fisttps
cmp
jmp
leave
test
mov
xor
popf
nop
std
inc
xor
cltd
lret
clc
adc
es
push
push
xor
lret
lret
cmp
stos
test
mov
lods
sbb
dec
push
repnz
push
call
xlat
cmp
fxch
lods
dec
mov
sbb
or
adc
cmovb
lret
call
adc
repnz
dec
add
sbb
or
sti
les
and
jecxz
test
jecxz
movsl
jle
inc
aam
dec
lds
outsl
mov
mov
cmp
icebp
sahf
addb
movsb
push
xchg
xchg
pop
adc
movsl
mov
inc
pop
sbb
mov
push
xchg
and
insl
xor
jp
int3
add
push
push
mov
dec
jo
sub
sbb
mov
push
push
shr
or
add
pop
sub
xchg
repz
mov
or
adc
rorl
add
imul
or
xchg
repnz
dec
stos
and
mul
mov
cltd
into
dec
fdivrp
push
loope
push
iret
jecxz
inc
test
imul
jge
imul
sbb
sub
or
xor
repnz
jo
test
outsl
cmp
mov
mov
gs
dec
pushf
push
or
sar
adc
icebp
das
or
movsb
lods
and
fs
repnz
jmp
jnp
mov
jecxz
lcall
into
xor
sub
or
lock
mov
jbe
loope
fcompp
inc
shl
jnp
in
pop
lcall
test
push
testb
mov
arpl
pop
push
mov
std
lds
pop
fdiv
jge
or
repz
xor
add
stos
test
mov
xchg
out
mov
andb
push
ljmp
cmp
sub
jnp
inc
andb
scas
pop
sbb
outsl
insb
dec
into
sbb
outsl
call
ret
cmp
aas
jno
shlb
inc
fsts
pop
gs
imul
cmp
jecxz
xlat
mov
adc
hlt
sbb
inc
cltd
and
aaa
nop
jge
out
or
mov
sub
repz
mov
pushf
das
mov
jns
xchg
and
stos
ljmp
add
push
and
push
dec
rcrb
xchg
inc
lock
fbstp
call
mov
stos
out
cmpsb
in
sahf
ret
and
test
jae
mov
sahf
add
dec
push
out
cltd
lods
out
pop
cmp
mov
int
push
mov
aas
ret
notl
mov
inc
xchg
insl
cmp
js
or
out
inc
outsl
push
jge
sarb
scas
dec
ds
dec
bound
mov
inc
jno
js
cmp
inc
xchg
jo
inc
adc
popa
ljmp
push
lret
roll
xchg
rcr
cmpsl
ficoms
or
out
lea
testl
mov
scas
mov
scas
mov
ss
jecxz
jns
or
xchg
add
and
popa
push
sahf
notb
loopne
push
lods
push
fildll
push
clc
xor
loop
and
enter
fwait
push
xor
or
in
xor
out
movsl
push
jae
mov
jp
jle
iret
dec
stos
cmp
pop
fwait
jae
push
xor
ss
daa
and
movsl
jnp
pop
out
xor
push
mov
and
jle
cwtl
cld
jg
repnz
and
sub
sub
pop
sub
popf
pop
push
hlt
and
cmp
add
int
fcmovnu
jne
int3
ja
test
cmpsb
pop
mov
rcl
pop
mov
cli
dec
dec
test
or
fldl2e
jne
lds
imul
jnp
push
jle,pt
push
xchg
jne
icebp
imul
cmpsb
sub
xor
mov
xchg
sahf
inc
inc
jno
loop
sub
mov
mov
xor
add
pop
pop
add
rorb
lret
sbb
pop
int3
xor
subl
iret
jns
cltd
xor
call
lret
inc
insl
repnz
mov
out
mov
mov
sub
insb
dec
jg
rorb
cmc
pop
dec
test
or
xor
movsb
repnz
sub
subl
cmp
ror
cmc
adc
test
mov
aad
rcr
adc
mov
add
push
addr16
addr16
pop
es
mov
push
mov
jbe
pop
leave
pop
pop
rolb
scas
repz
xor
enter
fwait
cmp
clc
push
jo
mov
xor
jl
mov
test
push
lea
stos
call
pop
xchg
pop
fildl
mov
fisttpll
aas
mov
xchg
lods
movsb
shlb
jno
sbb
shr
cmp
push
xchg
jno
fcomps
adc
inc
bsr
mov
and
cli
or
mov
fmull
sbb
dec
mov
mov
sahf
flds
or
or
or
cmpsl
ficompl
out
mov
ds
inc
jg
mov
inc
in
jo
cs
inc
xchg
sbb
testl
mov
repz
stc
enter
cmp
pop
into
iret
cmpsl
insb
enter
lcall
add
dec
adc
roll
xchg
dec
sub
xchg
out
mov
sbb
add
mov
inc
xchg
mov
or
jbe
sub
cld
enter
or
and
lret
sbb
cmpb
pop
dec
mov
cmp
pusha
daa
arpl
in
pop
aas
in
sbb
mov
adcl
xchg
out
xchg
or
add
lahf
or
ret
sbbl
dec
popa
adc
inc
xor
je
enter
sbb
and
mov
cwtl
mov
dec
lcall
inc
gs
sub
xor
adc
insb
repz
ljmp
mov
pop
mov
dec
jne
test
lcall
xchg
fldenv
xor
fistl
xor
das
fdivs
push
sbbl
repnz
sbb
jmp
pop
adc
xchg
or
divl
pop
leave
int3
sub
xor
adc
popf
or
xchg
push
jmp
jp
jle
out
enter
leave
cmc
sbb
int3
push
sbb
push
test
xor
jno
daa
sbb
fstps
js
fistpll
dec
repz
addr16
dec
cs
adcl
fidivrs
fwait
int3
mov
loope
std
enter
popa
imul
mov
inc
adc
mov
out
icebp
push
pusha
adc
jne
addr16
movsl
mov
xorl
icebp
shrl
cld
test
dec
js
gs
lea
rcl
mov
push
lock
push
xor
test
imulb
or
or
xchg
mov
add
enter
adc
push
push
adc
repz
sti
imul
push
inc
fcomps
loop
xchg
add
and
push
dec
test
jmp
mov
jmp
test
or
bswap
ss
popa
aas
mov
lock
or
stc
mov
fucomip
xchg
sub
xlat
mov
lods
imul
sub
or
push
pop
jnp
inc
push
test
or
out
sub
sbb
dec
push
lahf
dec
pusha
cmpxchg
xchg
and
jge
fadds
jecxz
fst
add
sahf
sub
adc
pop
inc
scas
cld
push
sub
sti
mov
cmp
pop
lahf
cmp
mov
jbe
inc
xchg
sbb
les
rorb
movsl
data16
jmp
xlat
idivl
inc
rol
shrb
sti
daa
sub
and
int3
and
mov
jmp
sarb
sbb
fst
xor
lea
decl
data16
jl
jge
push
stc
jge
inc
jmp
mov
ret
divb
mov
fcoms
adcb
test
push
test
lods
add
inc
sub
adc
imul
ljmp
mov
mov
aad
cltd
popa
xchg
loope
stc
xchg
ret
mov
fcmovnbe
dec
mov
push
push
pusha
inc
lds
fisubrl
mov
movsb
bound
sbb
rol
inc
shrb
push
mov
es
out
imul
add
mov
not
stos
out
in
testb
push
fucom
es
adc
insl
orl
out
jnp
and
sbb
mov
imul
dec
lahf
repnz
cmp
push
jle
into
mov
xor
in
sub
mov
mov
outsl
inc
mov
mov
cmpsb
iret
pop
popa
adc
fs
push
sbb
fildl
cmpl
js
dec
cli
mov
sub
or
cwtl
fisubl
dec
rcrl
or
pop
lret
pop
icebp
mov
or
bound
fidivs
rcll
mov
popa
cld
test
test
or
xchg
sbb
mov
xchg
enter
aas
or
jp
int
jg
dec
jbe
out
iret
push
sub
xor
dec
test
fsubrs
mov
xor
aas
icebp
adc
call
shrb
or
push
popa
mov
push
mov
lret
out
insb
add
xchg
in
jmp
jns
and
mov
jbe
insb
adc
pop
scas
xor
jmp
jge,pn
loope
push
push
aas
stos
push
mov
push
sahf
xchg
sahf
mov
fdivl
inc
bndstx
ds
jge
lret
ja
or
dec
inc
jo
xchg
ret
xchg
adc
cwtl
sub
fnstsw
repnz
cltd
dec
mov
jmp
mov
fld
rcr
xchg
pop
mov
jl
sarl
int
lea
lods
xchg
jns
xchg
aam
dec
cmp
adc
xlat
mov
fwait
sub
jne
fsubrs
xchg
adc
pop
push
loope
xchg
leave
cmp
out
xchg
fidivl
in
mov
cmc
fimuls
or
ss
push
test
inc
cmp
sub
addr16
ljmp
add
test
jb
leave
push
or
repz
into
fwait
adc
mov
jmp
inc
fildl
outsb
sbbb
test
dec
or
les
and
xor
aaa
xor
dec
inc
ss
push
sahf
ficompl
in
jp
add
pop
push
fists
lock
in
in
jge
test
jbe
nop
inc
mov
inc
sbb
dec
inc
into
or
dec
sar
sbb
xchg
adc
es
int
lret
scas
xchg
push
lcallw
cmc
cli
hlt
stc
mov
pop
push
push
xchg
dec
push
fdivs
sub
lods
sbb
adc
xchg
jle
or
hlt
ret
mov
sub
sbb
jo
sub
fisttpll
and
jns
mov
lret
ljmp
or
mov
sub
mov
xlat
leave
pusha
xchg
in
inc
jae
mov
or
cmp
sub
lahf
test
push
mov
mov
enter
jb
or
sub
mov
orb
in
mov
je
jno
xor
rorb
jns
shll
cmp
fwait
sbb
nop
sbb
dec
xchg
xchg
dec
jb
and
fxch
nop
addr16
fcoml
rcrl
and
fsubrp
push
pop
das
fbstp
sti
dec
jnp
cmpsl
loop
ss
mov
cmp
stos
sub
ljmp
mov
jns
inc
xor
pusha
dec
pop
int
xor
sbbb
insb
adc
add
push
add
aam
mov
pop
lea
ds
sbb
ss
test
jo
push
xchg
add
add
icebp
sbb
std
mov
ds
and
andl
mov
fsubs
fildl
cmp
sti
sbb
cmp
cmp
mov
lret
add
fcoml
in
jae
cld
test
sbb
int3
mov
cmpsb
call
sub
repz
aam
lock
sbb
cmp
sub
push
cltd
mov
dec
test
push
loopne
and
mov
scas
or
pop
inc
stc
mov
sub
mov
dec
clc
add
push
test
call
add
movsl
inc
fnstsw
sahf
mov
lahf
fildl
jle
inc
divl
std
mov
pop
lret
push
clc
adc
push
pop
nop
sbb
add
adc
pop
cmp
test
lods
pop
leave
fcomps
cwtl
lods
fcmovb
out
jno
es
js
pop
sti
dec
insl
cmp
mov
add
jge
xor
int
leave
stos
ljmp
orb
cmp
cltd
in
xchg
outsl
adc
xchg
ffreep
cmpsb
push
add
jae
jle
aaa
or
xchg
jb
mov
sub
lcall
push
mov
pop
jns
push
xchg
mov
cmp
mov
add
clc
pop
add
xor
ds
jmp
mov
cmpsl
mov
inc
push
xor
fistps
lock
jns
cmp
nopl
push
sbb
loope
xor
dec
push
inc
push
dec
xchg
or
js
xchg
jecxz
pop
jp
call
ret
sbb
outsb
and
stos
mov
add
xor
push
jg
jmp
jecxz
sbb
hlt
lock
stos
xchg
lea
jo
adc
jb
sbb
mov
cmp
pop
int
jle,pn
dec
or
sbb
sti
cltd
jno
cli
movq
xchg
pusha
cmp
jecxz
fldz
insb
cmp
scas
ret
add
jnp
cld
in
mov
and
loop
pop
jns
inc
adc
rolb
loop
and
add
fmull
xor
into
repz
cmovl
jecxz
ds
mov
fcompl
scas
popf
push
lds
in
mov
xchg
push
fs
ret
push
pop
and
dec
mov
flds
mov
test
jge
fildll
outsb
popa
push
mov
mov
mov
mov
ret
cmp
icebp
mov
test
xor
xor
jb
sub
add
pusha
push
sub
push
xchg
movsl
cmp
sub
sub
mov
adc
sahf
and
stos
imul
mov
out
repz
xchg
lods
aas
cmp
push
xchg
test
mov
ss
in
adc
sbb
pop
das
iret
jmp
scas
lret
addr16
ss
test
ret
cwtl
jle
mov
scas
jge
stos
cli
clc
out
push
jmp
fidivl
mov
pop
push
pop
js
dec
xor
xchg
icebp
and
nop
xor
sbb
adc
aad
dec
loop
mov
xchg
sbbb
jb
shr
xchg
adc
xor
clc
enter
fadd
mov
mov
push
cmp
xor
mov
jmp
cmpsb
adcl
pushf
notb
and
cmp
aaa
bound
out
cmpsb
pushf
shrl
jbe
gs
dec
fistpl
testl
pop
ror
mov
in
or
pop
mov
dec
dec
xchg
daa
pop
mov
jle
mov
test
add
mov
out
popf
mov
jg
sbb
push
cmp
and
mov
pop
sti
sub
adc
adc
adc
ljmp
outsb
mov
xchg
fcoms
pop
add
and
mov
and
adc
cmp
ds
pusha
dec
lret
jmp
cmp
dec
jbe
loope
mov
ret
cli
sbb
inc
cmpsb
xor
stos
ret
lods
sbb
jns
jae
xor
lss
pop
dec
pop
jo
add
mov
fildll
add
fstpl
mov
sub
or
dec
jae
sbb
jo
inc
cmp
and
jne
pop
andl
mov
pop
push
xlat
inc
inc
fistpl
dec
ret
mov
mov
enter
stc
mov
push
and
in
ljmp
add
ficoml
pop
aam
in
movsb
cmp
or
daa
imul
insb
lock
addr16
mov
mov
mov
jmp
lea
das
and
dec
popa
xor
mov
insl
je
pop
ss
and
in
insb
xor
push
cmp
jae
pushf
and
adc
add
inc
orl
loope
pop
mov
fxch
sub
imul
in
mov
jb
sub
xor
mov
or
and
push
arpl
jnp
int3
int
fwait
or
loop
or
das
jge
or
or
push
insl
das
sti
arpl
mov
dec
jle
cli
or
inc
pop
cld
ds
xor
push
jb
add
insb
lods
mov
bound
mov
fcoms
rorl
dec
icebp
xchg
mov
fnstenv
clc
into
icebp
arpl
icebp
sub
mov
or
and
mov
sbb
mov
pop
push
pop
fwait
or
or
mov
add
sub
xchg
sbb
pop
dec
mov
pushf
dec
notb
inc
push
sub
shll
mov
jp
inc
xor
dec
movsl
icebp
sbbb
and
sti
loope
mov
mov
lret
bound
ret
hlt
adc
push
adc
xchg
xor
bound
repz
dec
in
shrb
sbb
repnz
add
sar
inc
jp
xlat
xor
push
cmc
jle
sbb
jg
dec
jecxz
dec
mov
out
test
jbe
pop
cmp
jecxz
and
insb
in
rcll
es
lock
les
sti
mov
imulb
in
loope
mov
and
arpl
test
dec
sub
popf
icebp
stos
fdivl
lcall
xchg
cmp
pusha
mov
add
add
test
cmp
jno
xor
mov
imulb
xor
dec
out
or
xchg
mov
xor
add
cmpsb
ret
cmp
out
data16
cmp
add
pop
daa
xor
mov
rcll
or
or
pop
dec
and
dec
pop
js
rclb
adc
inc
mov
arpl
xchg
test
jmp
in
sub
sbb
mov
push
adc
cmp
adc
test
inc
insb
orb
inc
mov
rclb
jle
mov
cmpsb
pushf
or
fcompl
and
xlat
adc
add
ss
pusha
dec
inc
jne
add
mov
scas
jb
nop
jno
sub
lds
hlt
xor
dec
inc
cld
rclb
repz
leave
dec
mov
add
test
pop
push
pop
cmp
nop
push
test
xor
sahf
xor
mov
and
push
adc
and
pop
adc
pop
daa
push
cmp
aam
xchg
xor
aam
ror
dec
mov
add
add
cmpsb
insw
movsl
xchg
sub
movsl
cmpsb
and
cmc
xor
in
mov
sub
jl
add
jle
negl
cli
dec
jl
bound
stos
mov
pushf
leave
mov
aas
xchg
int3
mov
cmp
cmp
inc
pushf
push
int
sub
xchg
cmp
xchg
push
addr16
fsubl
mov
pop
or
popa
or
int3
fstpt
mov
ror
sbb
decb
push
push
fists
jl
test
xor
nop
iret
sbb
inc
cwtl
sub
push
repz
xor
test
mov
mov
cmp
aad
push
clc
cmp
pop
imul
inc
add
sbb
add
inc
cwtl
push
pushf
sub
outsb
cmpsb
or
aas
mov
addr16
adcb
pop
adcl
leave
pop
jecxz
outsb
jo
mov
je
clc
movsb
add
xor
lods
repnz
jnp
or
sbb
mov
outsb
inc
lahf
mov
cltd
xlat
push
mov
popa
or
les
jl
cmp
mov
fadds
and
aad
fs
lea
test
jl
inc
repz
nop
outsb
and
mov
inc
adc
push
arpl
in
sub
sub
pushf
sbb
ret
cmpsb
icebp
incb
jle
fsubs
add
xor
or
xchg
xchg
lods
lods
loope
mov
bound
xchg
pop
xor
push
xor
loop
inc
out
aam
das
xchg
inc
cmpsb
mov
into
call
xor
adc
add
sbb
cmc
pop
or
jge
sbbl
mov
mov
dec
cwtl
int3
or
push
lret
and
fsubrl
or
dec
shrl
sbb
clc
inc
iret
pop
mov
stc
sbb
bound
loopne
out
cmc
add
push
add
mov
fdivrl
xor
inc
push
dec
pop
mov
mov
fucomp
pop
shl
lahf
test
xchg
int3
in
push
pop
orl
ss
movsb
adc
jge
iret
rorb
jp
and
call
mov
ss
je
push
mov
icebp
pop
jae
cmpsl
call
pop
jns
ret
xorb
or
inc
jbe
push
ja
dec
incl
arpl
jbe
scas
sub
adc
cmpsb
enter
fwait
push
mov
adc
scas
subps
mov
popf
repz
ja
fidivs
repnz
repz
pop
mov
lret
insb
fnstsw
adc
repnz
mov
int
test
nop
scas
shrl
in
nop
add
pop
and
adc
test
xor
aaa
orb
pusha
pop
bound
sbb
rclb
scas
outsl
add
adc
push
rorl
mov
xchg
cmpsb
cltd
jno
pushf
push
push
inc
stos
cltd
pop
sbb
test
mov
cltd
ljmp
lea
jno
clc
pop
out
out
jno
aas
xchg
jmp
insl
mov
dec
xor
lret
or
adc
pop
stc
sbb
jns
xor
xchg
fs
mov
sub
in
push
clc
mov
inc
sarl
inc
push
xchg
dec
pop
push
jb
pop
es
xchg
shrl
push
push
popf
pop
mov
int3
je
bswap
loope
cmp
dec
pop
enter
mov
and
out
push
sahf
lock
jb
jno
and
mov
fsubl
popa
fld
jmp
pop
inc
stos
and
std
dec
test
int3
cmp
mov
mov
sbb
push
call
mov
cmpsl
xchg
mov
call
int3
dec
jnp
cmp
cmp
leave
xor
jae
imul
mov
mov
es
cmc
xor
dec
ret
es
clc
mov
push
cmpsl
cltd
rcrl
int3
mov
addr16
push
das
mov
bnd
mov
test
int3
dec
popa
cmc
adc
into
fisubl
aaa
cmp
inc
xor
gs
sub
outsb
dec
xchg
xchg
or
psubusb
fsubrl
sbb
mov
in
mov
ret
mov
mov
push
popa
pop
ja
insw
push
xchg
pop
jo
lds
mov
cwtl
push
add
mov
arpl
or
movsb
push
das
mov
das
rolb
sbb
int3
bound
dec
fwait
imul
setb
out
lret
rol
mov
rcll
ljmpw
mov
sbb
mov
mov
pop
or
arpl
divl
inc
or
inc
mov
int
xor
xor
lahf
mov
or
sub
test
push
mov
fldl
jno
inc
inc
dec
je
add
adc
mov
movsl
xchg
inc
fs
ja
clc
repnz
sbb
icebp
inc
dec
fadds
lea
xor
mov
fs
jbe
mov
shll
mov
ds
jo
cs
or
rol
divl
sub
or
mov
int
xchg
mov
cmp
jb
filds
enter
jge
in
sbb
add
test
shl
and
shrb
push
and
arpl
and
sarl
cld
test
push
lcall
fstpt
scas
outsl
add
pop
mov
mov
push
int3
ds
outsb
decb
insl
inc
push
sbb
mov
cmp
outsb
shll
cwtl
pop
aam
in
adc
incb
incl
mov
dec
dec
nop
push
ss
mov
or
or
mov
jb
hlt
sarb
xchg
inc
mov
jle
sub
cmp
shrl
xchg
dec
outsl
pop
shrl
adc
xor
das
push
shll
lods
loopne
out
int
mov
push
daa
sti
fmull
dec
xchg
out
push
lea
jb
mov
out
arpl
movsb
or
fdivp
ljmp
xchg
call
jmp
lock
ja
cli
bt
cmc
in
xor
add
sbb
and
lods
ds
push
out
ds
push
test
mov
sahf
lods
mov
cli
int
daa
popl
mov
sbb
repz
dec
inc
push
add
dec
add
aas
or
inc
popf
stos
xchg
cs
xor
sbbl
leave
fldl
jle
push
test
jbe
mov
loope
pop
sub
repz
or
int
pushf
lcall
jmp
adc
loop
neg
pop
jge
jg
jbe
cmp
mov
les
fimuls
aas
popf
sahf
je
nop
cmc
and
repnz
dec
or
outsl
lcall
jbe
push
bound
push
jo
pop
push
sbb
shll
and
inc
stc
xchg
gs
loope
pushf
sbb
stos
xchg
push
pop
cmp
adc
jl
mov
in
arpl
jae
stc
add
lods
fidivrs
in
pop
adc
ss
es
and
pop
out
lods
stos
fdiv
cmc
out
xlat
sbb
test
movsl
cwtl
test
stos
arpl
xor
stos
jle
push
outsb
xchg
mov
popl
inc
and
push
movsl
stos
push
mov
cmp
jno
out
mov
mov
js
mov
testl
mov
xchg
lahf
mov
popf
dec
mov
xchg
rcll
or
mov
out
out
es
cld
jae
test
into
loope
aad
jge
ljmp
pop
divb
repz
fists
repnz
jno
call
mov
imul
push
rol
xor
fstpl
cltd
xorb
shl
fnstcw
loopne
push
pop
and
jb
mov
adc
and
dec
ljmp
add
pop
daa
mov
add
xor
rcrb
nop
pop
pop
pop
xchg
push
mov
sbb
int3
mov
mov
je
shrl
mov
inc
push
adc
xor
pop
push
mov
jne
les
test
and
sub
pop
loop
xor
jmp
cmp
leave
arpl
subb
mov
adc
scas
iret
adc
xlat
mov
adc
dec
add
or
cmp
push
aas
sbb
lods
in
arpl
xor
imul
lods
inc
pop
dec
fldcw
push
loope
adc
jp
xchg
fcomp
mov
jg
and
in
jne
mov
jle
test
lock
jmp
jl
pop
in
sbbb
pop
pushf
lock
in
das
adc
lock
push
and
ficoml
adc
rcl
std
mov
ret
nop
dec
dec
or
push
outsl
insl
repz
je
lds
mov
rcl
mov
sub
rorb
xchg
sub
into
das
jecxz
call
push
mov
or
sub
xchg
mov
or
inc
outsb
ret
jnp
jno
dec
push
repnz
stc
lahf
aas
sub
xchg
lcall
xor
xchg
mov
cmp
push
add
outsl
cltd
pop
ds
vaddsd
aam
adc
outsb
cmp
jg
add
add
out
or
sarl
xchg
mov
mov
test
pop
xchg
aad
xor
inc
sbb
or
imul
gs
jb
outsb
movsb
in
and
iret
jne
push
mov
cwtl
movzwl
or
xchg
icebp
push
imul
sub
mov
push
pop
pushf
es
sub
sarl
popf
test
push
gs
sub
inc
cmp
cmp
bound
test
adc
add
imul
sub
fwait
push
jg
dec
mov
sub
inc
cmp
mov
dec
sbb
aad
jo
dec
pop
dec
je
arpl
xchg
out
jmp
pop
jge
push
pop
jno
lock
and
bound
push
inc
dec
push
and
movsl
mov
icebp
fiaddl
cmpsb
shl
xrelease
xchg
lret
out
movsb
mov
jp
loopew
and
xor
adc
push
leave
cmp
xlat
and
stos
fisubs
jg
jecxz
jae
int
popf
xchg
movsb
pop
xchg
ss
add
out
loope
pop
or
popf
add
out
pop
pushl
adc
cmp
jge
lds
and
jo
andb
vpmullw
pusha
mov
out
mov
aad
lahf
mov
or
sbb
clc
pushf
les
jno
mov
sar
ret
sarl
int
testb
jns
mov
adc
syscall
cmp
jge
lods
fcoms
vpmaddwd
sbb
aad
push
loope
jle
movsb
sbbl
clc
dec
cltd
adc
push
loopne
push
sub
xor
mull
sti
xchg
test
insb
pop
imulb
repnz
mov
test
jb
xchg
add
in
loop
in
aad
lods
push
into
shrb
movsb
fsubr
cs
xchg
push
jge
fcmove
scas
leave
test
fbld
inc
mov
xchg
lret
scas
push
aam
jl
or
sub
roll
orb
js
aad
divb
aaa
ds
xor
dec
push
xrelease
lahf
je
in
push
sbbl
and
loop
inc
or
fsubrs
int3
mov
pop
lahf
xchg
jg
add
add
sub
aaa
and
in
push
cmp
imul
or
lret
pop
jns
mov
clc
sbbb
aas
arpl
shl
cmp
adc
push
mov
push
mov
dec
sub
jmp
daa
lahf
push
xchg
out
inc
cmc
andl
roll
mov
fmulp
mov
xchg
aam
stos
fs
mov
dec
lcall
mov
leave
mov
dec
mov
popa
inc
adc
or
repnz
jl
cmpl
fdivrs
adc
mov
je
push
sub
add
mov
repnz
stos
filds
lods
add
mov
dec
mov
pop
xor
cmp
and
inc
jp
daa
ds
push
dec
cwtl
mov
enter
clc
fcoms
jp
or
rorl
stos
int
cmp
inc
call
movsl
cmovl
sbb
adc
add
scas
shrl
cmp
push
sbb
jl
sub
jg
pop
jecxz
jg
test
mov
insl
mov
adc
mov
mov
xchg
pushf
add
into
scas
xor
aas
pop
xor
cmp
adc
cs
fisttps
add
and
mov
mov
mov
jnp
repnz
mov
out
fsubl
ljmp
repnz
js
les
imul
xor
pusha
movsb
mov
jnp
mov
int3
aas
aaa
sbb
in
push
mov
bound
cltd
sahf
push
xor
ja
ficomps
cmp
test
cmpsl
xor
mov
sbb
in
pop
js
xor
pusha
cmp
or
ja
mov
cld
leave
call
daa
repz
mov
es
cli
pop
data16
xchg
lahf
xor
push
fisttpl
push
fisubrl
mov
xchg
sub
leave
scas
fs
aad
outsb
cmpsl
leave
imul
xchg
xchg
mov
push
inc
scas
sub
jae
pop
es
movups
sub
xor
add
add
nop
push
loope
push
mov
call
and
nop
and
jbe
shll
lea
xchg
adc
push
scas
test
inc
and
lcall
sub
aas
mov
push
jge
je
dec
fidivl
dec
push
jae
mov
and
push
mov
cmp
ret
jne
cmp
adc
jp
iret
sbb
inc
push
inc
loope
pusha
out
adc
ss
movsb
pop
in
xchg
in
fs
clc
das
sbb
pop
out
movsb
push
dec
pushf
cmpsb
jbe
pop
ficoms
mov
cmpsb
inc
xchg
bound
xor
xor
sahf
nop
lahf
adc
mov
mov
or
sub
lds
fwait
sarl
cmp
fdiv
pop
push
outsl
or
inc
iret
add
jae
and
or
imul
cmpsb
gs
icebp
cli
pop
or
xchg
movsl
mov
stos
sbb
jns
push
push
icebp
mov
mov
enter
jmp
fsubr
adc
or
mov
add
or
pop
mov
fwait
lahf
scas
xor
out
inc
mov
ds
pop
mov
jae
push
sub
sub
out
inc
adcl
xchg
add
in
mulps
testb
lods
outsb
jns
aas
xchg
mov
add
imul
mov
xor
push
dec
add
testb
xchg
xor
mov
cmp
inc
imul
outsl
and
push
test
pop
leave
lcall
jp
jo
shlb
dec
add
movsl
inc
jle
pop
vmovaps
jl
lods
imul
loop
or
aaa
cmp
dec
scas
mull
sub
cs
push
or
lahf
mov
cmp
sti
insb
cmp
loop
out
add
fwait
xchg
or
pusha
xor
jge
lahf
ljmp
loopne
fcomps
testl
push
sahf
xor
cmp
je
movsl
loope
cmp
mov
mov
inc
jg
pop
pop
int
addr16
jge
mov
cmp
test
inc
shll
jl
popf
mov
xchg
push
push
loopne
je
push
bound
mov
jge
push
sbb
mov
xchg
ret
push
fisubl
push
pop
lret
mov
in
dec
addr16
mov
add
xor
sbb
mov
das
popf
sub
push
sahf
bound
xor
out
push
pusha
shrl
jo
lods
addr16
test
fstpt
push
lahf
mov
lcall
clc
mov
arpl
and
pop
idivl
mov
in
mov
shr
pushf
jo
pop
loope
inc
inc
faddl
in
pop
xchg
enter
jno
ret
stos
ljmp
fs
bound
xor
out
mov
jnp
dec
and
sub
fsubl
xor
in
lahf
shrb
jnp
dec
enter
mov
and
fidivl
cmp
popa
xchg
cmovg
push
xor
int3
pushf
jnp
pop
add
daa
lcall
and
int3
test
mov
pop
mov
adc
jae
xlat
mov
or
dec
jb
nop
and
sub
push
inc
in
cli
dec
stc
and
arpl
xchg
out
sti
jns
fisttpll
xor
pop
incl
daa
pop
aam
xchg
mov
jl
sbb
inc
sub
mov
in
bnd
repnz
mov
adc
adc
jb
pop
in
in
popa
out
scas
pop
sbb
dec
jae
fisubl
clc
std
push
and
xor
cmp
scas
lods
addl
fwait
in
xchg
sub
scas
push
xchg
fwait
pop
insb
rol
xchg
ds
int
push
cmp
popf
orb
xchg
mov
flds
push
testb
mov
jge
adc
call
enter
lret
in
filds
ret
inc
xchg
aad
add
inc
xchg
pop
cmp
mov
loope
ud2
mov
je
out
aas
fsubs
adcb
bnd
fldenv
sbb
adc
jbe
sub
imul
arpl
ja
xchg
fdivs
addr16
cmp
pushf
jmp
popf
pop
mull
push
fiadds
xchg
inc
cmp
or
xchg
add
xlat
mov
cmp
mov
cmp
jns
mov
call
add
testb
and
xor
insl
popf
cli
mov
pop
push
into
push
outsb
mov
add
stos
cmp
popa
sub
cld
push
mov
je
lahf
lahf
pop
popa
cwtl
dec
xchg
sbb
test
sahf
mov
movsl
adc
push
mov
mov
and
inc
cmp
add
cli
or
dec
lock
xchg
xor
in
xlat
dec
in
cmc
or
xchg
sbb
sbbb
jne
cmpsl
aas
jae
dec
and
add
or
iret
inc
xor
mov
cmpsl
call
jp
jge
dec
ds
imul
jbe
in
xchg
pop
lret
pop
pop
sub
xchg
xlat
incl
push
xchg
xchg
pusha
push
push
pop
lea
cmc
cltd
jl
pop
pop
scas
push
mov
inc
dec
ljmp
fisttpl
outsb
loopne
out
iret
jle
loope
fucomip
pop
mov
push
inc
push
imul
leave
outsb
loopne
lock
mov
ds
jmp
jno
icebp
mov
mov
dec
mov
insb
imul
loopne
mov
mul
mov
pop
lock
mov
sbb
xor
js
ds
lods
lcall
mov
scas
fsubrs
push
or
in
jns
and
fwait
cli
daa
push
add
push
jmp
mov
leave
imul
or
add
push
mov
nop
cmp
aam
leave
out
fldt
push
lods
push
ja
faddl
fnstcw
movsb
fstl
pop
icebp
push
push
je
cmp
pop
lds
das
mov
sub
cmp
add
pop
jge
das
cmp
std
add
jl
mov
inc
sbb
jbe
xchg
inc
xor
sub
cmp
out
inc
jle
aam
call
movsb
test
mov
scas
mov
hlt
aaa
fs
xchg
inc
dec
fidivrs
inc
mov
inc
sbbl
aas
sbb
popa
or
fs
ja
jmp
mov
fists
dec
xorl
push
adc
insl
test
and
xor
fucomp
or
pop
mov
jno
aam
stos
xor
adc
xchg
mov
bnd
push
repnz
dec
xchg
xor
fidivrs
cmp
out
cld
test
mov
das
roll
inc
inc
mov
out
loop
push
sbb
sbb
lcall
jecxz
ds
xchg
sbb
mov
push
outsb
mov
pushf
xor
loop
mov
pop
jns
sub
fwait
xchg
cmp
shlb
inc
daa
dec
xor
or
les
ja
push
dec
pop
rcrb
push
out
cmp
gs
jbe
pop
jl
cmpsl
push
jecxz
push
arpl
in
lahf
mov
dec
movsb
xor
rclb
adc
adc
gs
mov
in
push
test
arpl
sub
mov
loopne
mov
ret
adc
xchg
mov
cmpsl
scas
jecxz
and
push
inc
mov
jae
sbb
arpl
in
pushl
lea
aam
lahf
mov
test
cs
and
dec
stos
mov
call
xor
lcall
cmpsl
rol
ljmp
mov
dec
cltd
add
fcomps
xchg
mov
dec
or
jae
bound
pop
ret
xor
aaa
mov
inc
outsb
les
ret
dec
xchg
and
lods
xor
push
in
push
ss
divl
jbe
push
adc
mov
xchg
dec
jae
mov
mov
cmp
lret
or
add
dec
pop
aad
jge
negb
pushf
ffree
xor
cld
xchg
cltd
adc
xlat
fsub
cwtl
pushw
sbb
xor
inc
cmc
lret
cmp
orb
inc
push
scas
mov
pop
out
ret
mov
stos
or
cmpsb
sbb
push
das
and
cmpsl
and
mov
xor
stc
nop
jmp
test
jl
negl
arpl
jae
push
jge
jo
mov
shlb
out
scas
pushf
das
aaa
sbb
xor
dec
and
int
jno
push
repz
adc
mov
mov
dec
pop
inc
mov
inc
fistl
shll
fdivrs
mov
mov
std
jecxz,pt
lahf
outsl
xor
xchg
mov
cmp
sub
imul
dec
inc
adc
loope
pop
jae
out
mov
repz
sahf
xor
or
into
pop
adc
out
sbb
xchg
mov
sbb
fisttpl
xor
fmuls
ds
push
or
ret
cmp
and
pop
jecxz
not
inc
adc
shll
pop
push
dec
fisubl
fnstenv
jecxz
jb
jg
jecxz
insl
fcoml
cmc
mov
pop
cld
inc
in
mov
mov
mov
js
mov
dec
addr16
jp
mov
stos
ret
shll
fdivp
cmp
jns
push
and
std
ret
or
jne
xor
pop
and
mov
mov
mov
sub
or
shlb
ret
lret
add
into
add
insb
popa
push
add
or
cli
cmpsl
ret
mov
icebp
out
movsl
js
loop
notl
xchg
mov
out
enter
jge
pop
les
mov
sub
push
push
fdivs
inc
cmpsb
sarl
nop
js
jns
stc
mov
imul
mov
mov
mov
loope
call
pop
jg
and
cmp
dec
xchg
sbb
imul
shrb
adc
cmp
sahf
les
pop
aad
call
shl
xor
mov
bound
cmc
in
cmp
mov
xchg
insl
inc
imull
loope
insl
lds
fs
sub
sbb
insb
mov
mov
sbb
test
dec
and
fbld
pop
mov
mov
jnp
add
xchg
iret
lcall
shrl
js
mov
add
xor
cmp
cwtl
add
insl
add
jge
xlat
xor
and
cmp
and
loop
dec
jp
ljmp
xor
adc
jo
push
aas
mov
jns
mov
pusha
ss
loope
dec
insb
data16
or
popa
jnp
mov
xor
aaa
or
and
xchg
dec
push
loop
dec
movsb
mov
in
mov
in
pop
dec
mov
adc
adc
lods
fimull
out
shr
andb
pushf
call
hlt
inc
mov
push
fimull
scas
xchg
dec
loopne
mov
stos
dec
cmp
jno
mov
mov
add
mov
mov
fdivp
in
daa
push
popf
and
fnstsw
incb
sub
mov
ret
fsub
fucomp
stc
xchg
push
nop
rol
gs
lcall
jmp
gs
xchg
push
lcall
add
fidivrl
jp
mov
hlt
bound
fnstcw
jg
mov
push
fwait
push
inc
andb
loopne
movsb
and
xlat
subl
movsl
movsl
adc
and
mov
mov
push
jnp
push
or
pop
iret
add
bnd
loop
sbb
dec
lcall
sbb
xchg
test
push
sbb
repz
or
adc
add
test
mov
jnp
sub
pop
cld
dec
nop
mov
xchg
mov
mov
jg
movsl
pop
cwtl
gs
sahf
push
mov
cmpb
xor
push
cld
or
fidivs
in
dec
cld
push
push
add
wrmsr
out
add
mov
dec
subl
repnz
sbbb
lds
pop
cwtl
ffreep
ljmp
inc
inc
cmp
pop
bound
lods
or
lahf
lods
jns
jb
jmp
aaa
dec
lret
stc
jmp
ds
push
sub
lcall
jecxz
jp
jg
scas
ss
faddl
scas
stc
mov
inc
mov
mov
mov
in
or
lds
mov
xchg
jbe
aas
mov
fcomi
sbb
mov
aad
fmull
cmpsb
sub
imul
popa
hlt
ja
xchg
imul
sub
test
push
cmp
xchg
xchg
mov
and
scas
sar
sub
jge
mov
mov
jg
pop
mov
cmp
push
push
cwtl
or
pop
and
add
mov
pusha
fcoml
and
stos
stos
rcrb
lcall
enter
jp
jnp
mov
mov
lock
out
xchg
hlt
arpl
ja
inc
enter
mov
ljmp
rcr
fdivrs
sarb
inc
stos
testb
rcll
mov
outsb
jbe
test
inc
jg
pop
push
sbb
sbbb
xchg
add
xchg
pop
pusha
scas
add
negl
lret
dec
inc
repz
push
in
outsb
dec
add
lds
inc
mov
sbb
jg
sub
inc
cmp
shrb
adc
div
mov
data16
enter
jb
orl
insl
scas
inc
dec
cmc
push
xor
mov
mov
ficoms
sub
xchg
daa
decb
dec
loop
jl
filds
cmp
jecxz
pminub
sub
in
adc
push
lcall
mov
out
stc
dec
leave
dec
ficoms
cmp
das
sahf
adc
push
cli
add
ficoms
lock
pusha
pop
xchg
addr16
ret
pop
cmp
das
hlt
add
shrb
push
xor
push
adc
sub
nop
test
adc
dec
ja
xor
ret
loop
insb
dec
ret
clc
adc
loopne
jae
filds
sbb
sbb
in
rcr
cmpsl
mov
cmp
dec
movb
cvttps2pi
jae
add
arpl
xchg
xchg
add
popf
pushf
jecxz
xor
dec
dec
fs
aam
call
gs
cmc
arpl
lods
mov
rdtsc
test
xchg
cld
sbb
mov
sub
lahf
push
push
fcompl
std
mov
sti
push
cmp
pushf
cmpsb
arpl
cwtl
mov
mov
sub
repnz
add
push
pushf
cmp
xor
repz
xor
mov
lods
daa
rol
ret
pop
pop
leave
xchg
sahf
mov
jo
jne
out
mov
push
fisubs
and
orb
stos
dec
xor
addr16
std
fdivrl
iret
out
pusha
cs
mov
cmp
jne
fadds
push
out
sarl
clc
shrb
icebp
les
stc
inc
das
ror
mov
jecxz
add
xchg
dec
dec
lcall
mov
pop
push
sbb
clc
mov
lea
mov
sbb
jp
mov
test
jbe
mov
jmp
adc
ret
dec
add
mov
mov
cmp
cli
mov
add
or
or
cmp
sbb
leave
fists
jmp
push
xchg
sub
xor
arpl
mov
push
cmp
int
and
xchg
aam
and
cmp
scas
push
mov
pop
daa
in
pop
xor
inc
mov
xor
imul
outsb
rorl
addr16
cmp
mov
daa
push
push
ss
sub
dec
pop
pop
bound
mov
pop
in
sub
jmp
int
or
cs
mov
jae
int3
out
inc
lret
xor
mov
add
popf
in
negl
mov
push
jg
xchg
xchg
xchg
gs
mov
jo
sub
insb
jbe
jb
dec
clc
add
les
xchg
leave
jae
mov
imul
shl
xor
push
jge
leave
int3
sub
mov
movsb
lcall
fwait
mov
stc
mov
fwait
add
enter
xchg
jns
xor
fwait
mov
jle
sbb
into
jmp
mov
sar
mov
test
xchg
mov
sub
pushf
adc
ljmp
sbb
jno
stos
sbb
xchg
dec
xchg
std
cmp
jmp
aas
jne
push
adc
pop
das
push
jnp
mov
inc
and
push
lcall
xchg
and
and
popf
pushf
clc
shrl
cwtl
fcmovu
xor
push
cmp
cmc
cmp
out
cmp
int3
cltd
je
dec
and
sbb
jne
lahf
mov
xlat
push
jne
inc
xchg
shlb
sbb
pop
mov
cwtl
in
loopne
mov
aam
into
mov
ret
adc
ja
push
es
rol
dec
call
sahf
inc
outsl
jo
sub
jmp
inc
mov
hlt
xlat
jge
push
cs
cmc
dec
arpl
or
jnp
rorb
add
mov
mov
fidivrs
inc
bound
and
jge
out
sti
push
aad
push
sarl
dec
mov
dec
sbb
mov
cmpsb
sbb
imul
add
fnstsw
hlt
xchg
cmpsl
and
dec
andb
icebp
jo
out
mov
divl
push
mov
push
scas
leave
call
pop
lcall
lock
xlat
orl
int
aaa
scas
fcompl
xorb
out
push
ljmp
sbbb
test
fwait
loop
pop
sahf
aam
mov
sub
mov
push
mov
inc
popf
in
sti
and
in
clc
fs
cmp
lds
fistpll
mov
aam
or
dec
movsl
loopne
xchg
adc
rolb
mov
mov
xchg
daa
inc
sub
mov
in
ret
adc
fcomp
push
repz
cmp
imul
incb
and
lahf
dec
enter
fdivrl
and
or
pop
adc
repz
movsb
push
xchg
or
cmp
add
push
aam
mov
pop
cmp
inc
sub
push
popa
or
or
adc
repz
lcall
lcall
je
aad
mov
adc
inc
into
loope
cmp
adc
test
imul
and
sbb
cmp
adc
mov
jle
mov
shl
or
xchg
xor
dec
pop
fwait
aad
inc
int
cmp
incb
pop
mov
jnp
sub
xchg
adc
aam
xchg
add
inc
push
cmp
and
mov
push
cld
pop
push
xor
cmp
jmp
orb
sbb
push
and
xchg
mov
dec
inc
stc
imul
lret
jo
mov
jns
jae
push
je
into
mov
cmp
int3
xor
cmp
or
mov
mov
xchg
pop
loope
and
cmc
cltd
mov
aaa
out
daa
jae
pop
mov
mov
std
jg
jbe
cmc
andl
sub
mov
add
aaa
push
add
pop
nop
mov
dec
mov
inc
or
ds
jo
pushf
inc
pop
dec
inc
adc
jecxz
xchg
adc
jmp
mov
std
sbb
ret
sahf
dec
push
dec
cli
jae
rorl
dec
sti
sbb
test
inc
sbb
sub
xor
sarl
add
sbb
inc
xor
push
clc
mov
outsl
mov
push
ret
fisubs
push
pusha
jg
movsl
out
dec
push
dec
enter
sub
imul
bound
stc
pop
lret
outsl
or
aad
adc
adc
push
and
add
cmp
rcr
mov
sub
pop
fdivr
push
hlt
xchg
fiaddl
hlt
cmp
inc
sub
cltd
add
xor
cwtl
clc
sbb
repz
in
repnz
movsb
sbb
rcrb
mov
mov
test
popf
fistps
sbb
dec
xor
stos
sti
inc
iret
popf
pop
cmpsl
cmp
lods
cmp
inc
ss
rorl
int
cmp
rorb
out
push
not
inc
mov
adc
dec
jl
mov
adc
xlat
adc
mov
repnz
sbb
jg
dec
call
inc
fnstenv
push
cli
mov
cltd
cmc
ja
xchg
aaa
pop
sub
test
loope
andl
xchg
cmpsb
fmull
in
jle
cmpsl
xchg
clc
ja
loopne
cmc
push
inc
arpl
pushf
rorl
daa
sahf
sbb
loopne
mov
sbb
or
push
aad
in
mov
mov
imulb
inc
cmpl
mov
xchg
mov
inc
jmp
repnz
iret
jle
inc
pop
push
cltd
xchg
leave
mov
pop
lock
xor
ja
or
in
or
pop
inc
mov
or
sub
aam
ds
test
jns
push
dec
lea
xchg
add
enter
jb
adc
jmp
mov
push
xchg
js
fadds
lock
sub
jnp
popf
lock
or
pusha
cmp
lcall
xor
iret
xor
in
mov
cwtl
xchg
push
adc
jle
notl
ss
ljmp
sbb
mov
mov
mov
adc
lahf
or
pop
inc
jp
xchg
cmc
pusha
lock
sbb
mov
nop
pop
cmp
add
out
push
mov
cmp
push
fidivrs
dec
or
jecxz
jnp
nop
sub
mov
push
xor
hlt
int3
push
sbb
xchg
cmp
in
mov
cld
insl
jecxz
pop
inc
lret
scas
leave
stos
cmp
jl
gs
sbb
aaa
fwait
stos
pop
icebp
int3
out
ss
test
push
dec
ljmp
add
sub
sti
jne
mov
fwait
and
test
adc
cmp
add
hlt
jecxz
loopne
pop
push
push
ljmp
push
jmp
inc
mov
mov
jg
mov
scas
sub
out
pop
adc
inc
aam
pop
add
lret
cmp
xchg
xor
pop
inc
jecxz
mov
or
std
and
test
and
out
scas
in
movsb
std
push
movsb
pusha
adc
insl
xor
sti
ljmp
cmpsl
cmpsl
xchg
cltd
enter
fnstenv
xor
sarb
jecxz
pop
dec
clts
repnz
adc
xchg
cmp
pop
sbb
int3
cmc
lcall
lea
fisubl
push
ja
pop
out
ljmp
daa
sub
xchg
inc
mov
insl
mov
arpl
mov
and
cmp
mov
dec
pop
cltd
push
into
sub
or
xchg
add
sub
mov
loope
test
sub
cltd
imul
xchg
cmp
push
xchg
pop
jns
insb
stos
push
lods
je
push
mov
adcl
adc
pop
xor
out
cwtl
mov
outsb
dec
mov
inc
lcall
xchg
rorl
sub
dec
mov
cmpsl
std
xchg
xor
ja
push
jp
jp
mov
popa
icebp
sub
inc
pop
pop
dec
in
sbb
shrb
pop
push
mov
pop
xor
or
push
cltd
lahf
insl
mov
test
mov
nop
adc
inc
xor
sahf
das
mov
dec
mov
test
jbe
insl
in
or
push
jecxz
xor
jmp
pop
jle
add
clc
and
testb
mov
dec
sahf
pop
dec
mov
xor
addr16
loopne
stos
popl
out
mov
xor
mov
xor
fstl
dec
call
in
and
or
fwait
xor
jne
xchg
arpl
in
cli
sbb
xor
movsb
push
xchg
adcb
lahf
subb
mov
mov
push
xlat
mov
lret
inc
sbbb
push
push
ja
stos
xchg
jno
cs
hlt
mov
aam
xchg
ljmp
add
lock
ficoml
jb
fs
mov
adc
adc
test
arpl
push
addr16
add
leave
pop
and
pop
outsb
out
loopne
add
xchg
cs
cli
fsub
imul
fcomps
push
cmp
dec
ljmp
push
aas
xchg
jne
aas
icebp
sbb
mov
dec
ja
cmp
xor
ret
mov
jg
jnp
or
sub
in
push
push
cmc
scas
dec
jb
mov
dec
in
push
push
and
adcl
or
push
jo
sbb
push
pminsw
fs
add
dec
pop
add
cwtl
gs
cmp
pusha
loope
mov
mov
dec
pushf
pushf
xor
popa
mov
in
out
xor
in
mov
in
movsb
aas
cmpsb
ret
mov
repnz
shl
sar
mov
jp
lea
fs
jnp
xchg
enter
inc
sub
pop
addl
dec
cmp
mov
mov
aas
push
leave
mov
fstl
xchg
pop
inc
pop
fistl
adc
aam
daa
mov
call
mov
push
idivb
add
imul
insb
push
dec
repnz
mov
jne
hlt
mov
stos
mov
in
inc
sbb
jmp
cmc
sub
mov
sarb
mov
mov
xchg
cmc
pop
or
pop
repz
sbb
jb
sbb
dec
std
dec
out
sub
add
sbb
jmp
mov
push
out
dec
xchg
jae
sbb
insb
stc
jg
sbb
jno
fsubrl
inc
sub
leave
or
jp
cmp
xor
xchg
mov
fiaddl
loopne
mov
pusha
cs
add
ds
out
mov
stc
xchg
aaa
jecxz
jnp
dec
mov
test
jbe
outsb
int3
and
jmp
adc
leave
jno
pop
ljmp
cld
bound
js
sar
inc
loopw
sub
rcr
xchg
pusha
adc
xchg
add
iret
call
mov
addr16
orb
push
xchg
inc
test
xchg
out
jge
adc
jecxz
movsb
shlb
nop
bound
insb
xchg
inc
adc
pop
lods
ss
or
pop
in
jmp
fisttpl
movsb
sbb
pusha
mov
or
and
testb
jge
xchg
mov
out
in
ss
stos
and
inc
push
mov
dec
dec
cltd
movsb
mov
add
cli
xor
mov
aad
sub
mov
adc
or
mov
add
outsl
cmp
mov
test
pop
add
pop
flds
mov
sub
inc
xchg
and
leave
cwtl
fimuls
add
mov
cmc
mov
adc
jbe
mov
xlat
jmp
enter
scas
adc
dec
fcoml
fsubl
xchg
add
loop
sub
mov
or
aas
or
lea
ret
jae
dec
lock
loop
stos
dec
cmpsl
dec
cmpsl
mov
jmp
aad
jg
pop
les
jno
adc
mov
inc
mov
negb
cmc
push
mov
sub
std
sbb
ljmp
arpl
mov
jo
and
or
jg
pop
jp
and
inc
inc
pop
adc
xchg
mov
dec
lea
jle
addr16
jae
ja
or
sbb
push
imul
inc
jge
fidivrs
cmp
inc
jns
dec
cli
pushf
sub
xor
lret
dec
test
std
jl
mov
dec
lret
lock
and
mov
or
enter
xchg
sbb
jp
test
xor
stos
xor
jmp
add
lods
mov
arpl
loop
dec
add
shll
lods
jae
ret
cmc
je
push
and
insl
adc
iret
sbb
repnz
xor
cli
pop
int
adc
mov
mov
inc
fcomps
dec
cmp
adc
int3
pop
xor
repnz
and
adc
lret
inc
sti
dec
aaa
xchg
sub
push
adc
or
scas
mov
pushf
iret
lahf
gs
jo
mov
add
shr
xchg
sbbl
loop
verw
mov
mov
js
adc
lret
add
outsl
movsb
outsl
and
bound
sbb
or
xchg
mov
sub
aam
mov
test
in
arpl
add
xchg
fwait
es
mov
int
sub
pop
add
sbb
shrl
mov
outsb
scas
rorb
ret
outsl
fmull
movsb
loope
fsubr
push
sub
rorl
inc
jmp
rolb
sub
test
pop
inc
cltd
lds
or
cltd
mov
jns
adc
out
clc
pop
loopne
in
pop
xchg
test
scas
push
cld
ret
jns
roll
jnp
sahf
sbb
test
imul
iret
inc
sbb
xor
pop
mov
jge
mov
int
mov
outsl
add
icebp
movsl
or
push
out
sub
repnz
bswap
aaa
sbb
popa
lea
sti
xchg
jmp
stos
jl
orl
mov
ret
dec
shrb
push
inc
andb
sbb
rcrl
xor
fldcw
and
sbb
or
out
pop
mov
aad
jns
jo
pushf
jle,pn
jg
mov
mov
and
jae
and
pop
or
hlt
imul
notb
imul
jno
popa
fistpll
dec
lock
pop
popa
outsl
scas
lods
int3
test
add
insl
scas
pop
dec
aas
cmp
notb
pop
cwtl
je
testl
push
ljmp
adc
add
hlt
push
insl
adc
sbbb
dec
lds
pop
daa
test
xchg
xchg
inc
pop
push
pop
jl
xchg
icebp
cltd
and
fstps
xchg
aad
or
cltd
xchg
insb
lock
scas
mov
xchg
jg
pop
mov
inc
stc
stc
mov
mov
dec
pop
out
fdivs
push
xor
inc
stc
ficoms
cmp
or
cwtl
adc
testb
insb
cmp
mov
loopne
sahf
sub
das
cmp
sub
xchg
pop
cmp
cmp
ljmp
pop
nop
mov
jbe
outsb
sbb
cltd
insb
cmp
lods
ljmp
aam
xor
cmpsb
mov
inc
push
mov
dec
loope
mov
push
orl
or
dec
in
jmp
loop
sbbb
jmp
pusha
das
cmp
adc
pop
orb
int
pop
inc
lea
fwait
ret
mov
loopne
imul
push
and
jmp
sbb
out
enter
test
dec
outsb
popf
fidivs
push
jle
pushf
xor
test
xor
notl
push
mov
xchg
jecxz
pop
imul
or
cmp
or
mov
ljmp
fsub
xor
dec
mov
mov
sub
mov
popf
in
das
insl
dec
xchg
andl
loop
scas
bound
push
das
out
loop
adc
popa
jns
arpl
push
lcall
aas
jnp
sub
add
mov
aas
jge
fstl
push
cmp
sahf
scas
add
cltd
lret
loopne
or
pop
inc
cmp
mov
mov
cmp
jmp
les
aam
lds
xchg
imul
bound
add
out
shlb
push
sbb
xchg
arpl
out
add
push
lods
loop
in
fidivl
push
les
leave
mov
dec
sahf
add
sbb
in
and
pushf
xor
int3
mov
dec
lods
xchg
shr
mov
pop
mov
pop
xor
jns
lds
insb
orl
mov
or
mov
sbbb
clc
test
pop
rcrb
inc
push
ds
mov
xchg
xor
inc
cmpsl
fucomp
out
add
lea
sub
mov
aam
sbb
dec
jg
pop
and
sbb
adc
jg
push
mov
adcb
fstl
lds
dec
jle
sbb
jne
into
neg
push
xor
pop
movsl
fcomps
cmp
mov
jg
fcomps
imul
ret
pop
jg
and
lret
popa
imul
cmp
vmread
mov
push
adc
jp
popf
sub
add
fcompl
or
mov
sub
push
dec
push
daa
mov
les
js
xchg
mov
dec
xchg
into
clc
bound
popf
inc
xchg
or
mov
dec
sbb
adcl
ljmp
xchg
adc
add
mov
cs
loopne
xor
or
and
push
ds
sub
cmp
hlt
into
pop
cli
xchg
and
ret
leave
lea
ficomps
pop
push
inc
repnz
pop
pop
mov
or
fsub
setae
adc
or
mov
out
add
jne
lret
shlb
push
rol
frstor
mov
xor
jae
push
ss
adc
xchg
cmp
loop
jp
cmp
ss
pusha
stos
mov
data16
test
movsb
or
inc
leave
sub
repz
inc
sbb
js
jmp
icebp
int
in
mov
jb
sub
sub
push
in
adc
inc
insb
int3
mov
sub
fsts
inc
int3
cli
jns
xor
dec
add
out
jo
push
sarl
adc
dec
in
in
repz
lods
dec
sbb
sub
bound
add
add
jle
call
leave
or
test
push
jmp
mov
xor
mov
inc
stos
stc
add
inc
sub
test
jns
mov
dec
add
outsl
cltd
icebp
lods
push
sar
out
in
pop
mov
inc
sahf
pushf
ljmp
mov
mov
push
mov
dec
cmp
repz
cli
icebp
lret
imul
jmp
add
popa
or
lcall
rorl
mov
add
roll
adc
rcrb
cld
pop
lods
out
inc
sbb
vprotq
add
mov
push
les
aam
mov
scas
pop
mov
popa
popf
adc
or
out
inc
rcrl
and
aaa
or
out
fmull
ss
or
push
xchg
xchg
out
or
sub
adcl
into
inc
lea
inc
gs
adc
xchg
or
jnp
add
sbb
and
cmp
int
push
outsb
dec
rclb
jp
sbb
mov
sbb
sub
fs
jecxz
xorl
bound
lods
popa
in
cmp
dec
lods
xor
push
xchg
mov
sbb
call
jge
lret
aaa
out
jae
and
cmp
cmpsb
pusha
sti
lea
and
xchg
xor
inc
mov
dec
push
sub
inc
data16
xchg
adc
push
or
mov
add
add
xchg
mov
xor
cld
sbb
cmp
or
cmp
lret
pop
test
jns
addr16
dec
mov
mov
addl
and
imul
add
js
and
subl
mov
lcall
mov
jl
sub
mov
iret
mov
add
insl
ret
xchg
dec
imull
cmpl
nop
lds
lock
adc
mov
mov
push
pusha
jecxz
sub
popa
loopne
addl
mov
pop
mov
mov
and
popa
ds
lods
mov
or
cmc
repnz
xor
jmp
adc
jbe
xor
add
mov
mov
sub
xor
xor
mov
mov
pop
aaa
out
dec
cmp
in
push
xlat
roll
lea
clc
fldt
adc
aad
jmp
test
daa
bound
mov
mov
fdivrs
mov
and
fs
std
rcrl
hlt
xlat
mov
sub
imulb
cmp
dec
mov
xchg
je
in
and
sub
leave
cmc
cmp
stos
movsl
adc
jne
cld
aam
sbb
inc
cmpsl
popf
pushf
stos
cmpsb
add
popa
sbb
jmp
and
pop
push
gs
adc
mov
jae
pop
xchg
andl
inc
out
fstpt
mov
or
push
lds
loop
mov
cmp
mov
cmpsb
dec
push
pop
push
or
jl
jne
push
cltd
js
mov
mov
outsl
cmp
jo
jge
subl
jne
push
inc
imul
and
rcll
gs
lret
in
mov
mov
mov
sbb
and
cmpsb
add
pop
test
dec
loope
push
ljmp
push
push
add
sbb
loope
outsb
lahf
cli
lods
stc
mov
int
mov
lds
pop
out
jmp
mov
mov
adc
fbld
sub
rclb
and
dec
mov
imul
jno
add
frstor
push
int
popa
es
aaa
cmpsl
push
jp
mov
and
push
rol
enter
ja
fildl
jbe
push
icebp
sub
cmpsb
imul
cli
sub
mov
inc
sbb
xor
mov
jmp
xchg
int
inc
lahf
fcomp
jmp
aad
sti
push
and
sahf
jge
push
cs
data16
inc
loope
sahf
inc
lret
push
pop
jcxz
jbe
inc
sub
xchg
pop
xor
dec
sbb
pop
in
repz
jge
out
cs
lahf
fcmovbe
loope
push
sarl
mov
mov
jae
lret
leave
mov
lahf
dec
sti
sbb
dec
imul
les
or
push
add
lea
jmp
lret
arpl
pusha
ds
inc
sbb
aam
mov
jmp
or
dec
lret
and
and
dec
int
out
sub
push
cmp
mov
dec
dec
out
and
adc
aam
jae
test
les
test
mov
jo
test
sti
cmp
mov
orb
mov
mulb
inc
hlt
sub
mov
sbb
adc
loopne
jo
jl
add
dec
lret
aas
aas
jb
fldcw
and
dec
lahf
repz
xchg
jns
push
and
mov
daa
sarl
mov
sub
push
mov
push
and
pop
sub
mov
dec
insb
repnz
pop
lods
push
test
mov
ja
test
jb
push
movsb
or
jno
cmp
sub
fs
sub
push
xchg
mov
pop
iret
cmp
cwtl
ffree
dec
add
mov
decl
xchg
sbb
cltd
mov
test
dec
loopne
lea
mov
mov
lret
iret
mov
mov
jns
jb
nop
add
test
loope
mov
iret
fdivrl
mov
xchg
pushf
push
sub
inc
cltd
inc
xchg
sbb
adc
lods
add
daa
inc
mov
lahf
iret
xchg
dec
adc
push
dec
or
addr16
ja
and
inc
push
test
cmpsb
jle
jp
mov
sub
push
nop
xor
cmp
pop
mov
mov
mov
or
dec
cmp
mov
cld
stos
cmp
dec
mov
out
xchg
or
jle
mov
lahf
xor
out
inc
jbe
stos
inc
mov
dec
aad
fwait
pop
sahf
mov
push
aam
and
push
jp
sub
xchg
cmpsb
ljmp
add
mov
and
xchg
dec
loopne
xchg
and
push
ss
sub
mov
bound
mov
push
outsl
cmc
push
das
sahf
sbb
add
jns
dec
xor
bound
or
or
cmc
out
ror
leave
lcall
adc
mov
inc
test
fnclex
ret
enter
xor
ds
fsts
sti
mov
xchg
aam
arpl
jl
sbb
cmpsb
cwtl
inc
cld
mov
xchg
push
fs
jno
add
cmp
nop
fs
inc
shrb
into
testl
icebp
test
mov
mov
cmp
imull
aas
lahf
and
imul
loopne
ss
sbb
sbb
sub
pusha
cmp
push
outsb
rorb
orl
pop
insb
xorl
or
arpl
dec
lds
mov
enter
shll
jnp
cli
in
repnz
xor
lods
fisubs
sub
sbb
adc
sub
fdivr
mov
xacquire
sbb
and
sub
inc
enter
imul
sub
pop
div
cli
int
in
imul
xchg
dec
bound
lret
gs
mov
in
int
mov
push
jge
pop
sub
dec
add
leave
idivl
loope
sub
xchg
je
jle
call
push
add
cmpsl
pop
mov
test
sti
xlat
dec
xor
cmp
div
mov
jns
rolb
icebp
cmp
sub
push
add
cld
iret
nop
lock
dec
fstps
iret
fimull
mov
daa
push
sbb
pop
fsubrs
push
sbb
pusha
sub
push
cmp
insl
jnp
ja
nop
mov
daa
cltd
js
mov
sahf
mov
int3
and
xchg
pop
mov
or
es
xor
push
mov
rcrb
call
xchg
xor
push
sbb
push
pop
pop
push
pop
das
adc
push
sahf
mov
call
xor
lahf
es
lcall
pop
out
cmp
insl
call
leave
mov
push
adc
popa
push
movsl
repnz
jmp
xor
inc
xor
hlt
mov
add
and
es
xor
mov
lahf
dec
pop
sub
cmp
mov
fists
push
pop
add
mov
add
das
or
mov
push
pushf
lock
lea
ds
inc
insb
and
mov
sub
push
loope
and
mov
push
in
push
xor
test
mov
push
mov
mov
int
fs
or
mov
ja
mov
jae
sahf
dec
clc
addr16
stos
cmp
in
xchg
fadds
dec
lods
inc
dec
lock
movb
movsb
jmp
movsb
aad
addl
inc
pushf
mov
not
add
stc
sub
js
enter
gs
pop
arpl
pop
xchg
fcmovu
cmp
pop
mov
adc
cmp
ljmp
or
fcmovb
test
mov
repnz
testb
adc
ja
push
adc
sub
jecxz
aas
pop
mov
call
adc
icebp
add
clc
add
adc
pop
in
xchg
cmc
nop
adc
and
xlat
mov
outsl
sub
lahf
ljmp
insl
sbb
rcrb
je
xchg
test
repnz
roll
mov
nop
pop
aaa
dec
pop
sbb
jg
popa
add
xchg
adc
stos
fdivs
movsb
sbb
mov
add
cmpsl
xor
jp
mov
mov
adcl
sbb
pop
xor
data16
out
cmpb
adc
jp
int
rclb
push
cmp
fstps
xchg
movsl
jns
pusha
adc
pop
fdivs
test
aas
stos
addr16
mov
cltd
jmp
out
cmpsb
gs
fmull
lret
out
cmp
das
pusha
jmp
orl
sbb
add
mov
push
test
xchg
scas
je
xor
sub
idiv
pop
hlt
xlat
pop
shrb
imul
iret
push
les
and
add
fucomi
fcomps
je
aad
xchg
lahf
mov
mov
outsb
and
sub
in
dec
cld
sbb
movsl
mov
ret
xor
lock
bound
cmp
loope
push
xlat
xchg
cltd
out
push
xor
inc
sub
popf
outsb
mov
sub
push
test
orb
sub
jle
or
pop
repz
mov
push
sbb
outsb
arpl
test
push
jne
add
roll
mov
mov
push
mov
out
sub
sarb
jmp
mov
es
dec
popf
inc
jno
pop
or
mov
orb
mov
les
lahf
fdivl
out
push
inc
push
sub
mov
subl
jg
xchg
std
xchg
lock
ss
push
xor
js
popf
loope
into
xchg
adc
add
in
ja
icebp
inc
mov
jle
ret
aas
mov
arpl
or
divl
hlt
fisubs
ret
jecxz
out
inc
jo
stos
stc
xchg
es
xor
push
jp
push
stos
add
cmp
inc
out
aaa
loope
hlt
roll
dec
adc
jg
pop
pop
ljmp
mov
fdivs
in
adc
push
out
mov
lea
int
bound
imul
addr16
mov
cmc
push
mov
or
adc
ret
xor
andb
dec
or
adc
lret
xchg
adc
fwait
into
adc
out
add
mov
test
enter
scas
xor
inc
jns
arpl
and
mov
addr16
or
mov
mov
out
mov
sbb
insl
jb
add
xor
jnp
or
cmp
xchg
mov
ds
int
jecxz
ds
out
lahf
push
push
push
ljmp
push
into
loop
fists
sahf
out
sarb
mov
push
xchg
clc
leave
xor
enter
pop
mov
push
add
push
shlb
sbb
cmpsl
dec
pusha
pop
xor
mov
test
cltd
test
or
jmp
jp
idivb
mov
test
jbe
or
sub
and
mov
bound
cli
dec
push
test
loop
sbb
pop
dec
add
pop
out
stos
inc
fsubs
div
fstps
leave
std
lcall
sbb
rclb
add
fsubrl
int3
mov
aam
aam
aas
cmpsl
ja
nop
sub
std
jne
loope
mov
nop/reserved
clflush
cmp
into
daa
mov
or
les
adc
pusha
idivb
nop
ret
add
add
ss
je
cs
sbb
cltd
sub
mov
add
mov
clc
jle
adc
mov
ret
es
loopne
mov
mov
cmc
dec
jno
fcompl
mov
mulb
pop
shlb
mov
mov
dec
fsts
lea
and
adc
aas
push
inc
xor
jle
shll
lcall
add
aas
sbb
stc
sub
or
fs
and
fnstsw
loop
lock
test
out
mov
add
push
daa
mov
jge
jg
fisubl
or
outsb
outsw
in
rclb
jecxz
push
rcrb
pop
fs
mov
test
inc
lcall
cltd
mov
sbbl
jne
daa
dec
pop
fists
xchg
sbb
inc
sti
aad
jle
jae
clc
rcrb
add
inc
push
push
sub
or
jae
cmp
mov
jge
imul
sti
loope
adc
addr16
lret
dec
jp
xor
test
in
xchg
arpl
enter
ror
sbb
or
adc
ljmp
insl
push
fstps
dec
stos
nop
push
mov
cmp
mov
adc
xor
stc
pop
mov
popf
lods
ficoml
fcomps
push
mov
mov
and
in
dec
mov
jns
sub
test
in
fsts
das
xlat
mov
mov
vphsubdq
pop
mov
mov
out
jle
and
cli
or
out
imul
inc
lock
push
mov
dec
popf
and
sub
mov
mov
mov
push
or
inc
pop
pop
test
pop
lods
clc
in
mov
pop
shlb
popl
std
popl
add
cld
or
and
pushf
pop
aaa
test
xor
mov
or
add
repz
sti
mov
clc
not
rorl
jp
fiadds
pop
xor
dec
psubusb
xchg
xor
pushf
pusha
clc
cld
leave
and
movsb
mov
notl
mov
pop
cld
int
imul
fsts
in
add
sub
jmp
mov
and
push
jno
pusha
mov
xchg
dec
ljmp
fistps
mov
jecxz
mov
jnp
loop
add
enter
adc
jmp
and
in
jmp
jo
add
movsl
push
sub
lahf
cmp
sarl
cmovle
adc
outsb
arpl
shlb
xchg
jecxz
es
sub
shlb
popf
pusha
xor
xchg
jae
int3
inc
add
lea
lods
mov
scas
mov
fldenv
das
xchg
sbb
out
pop
decl
sbb
mov
ret
dec
pop
mov
mov
adc
jl
sti
sbb
fwait
push
inc
xlat
pop
mov
xor
jecxz
in
cmpsb
in
jbe
sub
xchg
out
shl
push
dec
push
scas
hlt
fsubl
rcr
xor
xorb
pop
popfw
popf
adc
movsb
addl
data16
mov
sub
inc
call
rorl
idiv
jo
scas
mov
xchg
cmp
or
xchg
mov
sti
repz
in
or
lret
inc
mov
shll
mull
sub
sub
ret
addr16
or
roll
test
lcall
and
imul
jge
lods
sbb
movsl
or
jns
pop
fstl
es
pop
bound
jno
pop
lods
or
movsl
sbb
fsubrl
or
aam
cmp
idivb
jge
movl
imull
rorb
push
xchg
push
cs
xlat
fisttps
rol
inc
sub
vunpckhpd
sbb
sahf
mov
adc
mov
xchg
int
xchg
jns
int
push
faddl
xchg
dec
dec
js
imul
notl
fistl
jmp
xchg
and
push
aad
mov
inc
pop
add
add
gs
cmp
nop
jo
sar
in
lcall
outsb
xchg
jge
xchg
in
xor
leave
test
fisubl
mov
cld
mov
rcll
add
ljmp
jmp
mov
pop
pop
test
ret
or
xchg
inc
lcall
mov
lahf
mov
xchg
stos
and
cmp
mov
hlt
insl
and
mov
mov
bound
cmp
inc
mov
repz
clc
test
int3
loopne
add
stos
cvtps2pi
jmp
ret
negb
in
inc
and
xchg
lret
adc
cmc
sbb
repnz
fnstcw
jle
in
outsl
and
addr16
mov
mov
mov
pop
pop
sub
hlt
push
loop
rcrb
ret
imul
sti
out
loopne
sub
dec
cltd
pop
mov
jge
or
enter
outsb
cmovs
sbb
mov
adc
rcll
xchg
lds
aaa
and
lods
xor
xchg
je
test
cld
mov
fnop
fsubrs
push
fnstsw
arpl
loopne
mov
cwtl
sti
lods
sahf
ret
cld
inc
sub
xor
jecxz
jnp
cmp
ja
bound
das
cli
in
sub
cwtl
arpl
imul
scas
mov
nop
xor
sbb
ljmp
sbb
jno
xlat
addl
mov
sub
sub
out
std
mov
mov
daa
mov
out
js
cmpsb
fistl
and
pusha
iret
repz
test
cmpb
xchg
and
push
sbb
imul
repnz
and
loop
add
mov
xchg
mov
xchg
sbbb
xchg
push
xchg
rol
adc
pop
push
in
cmp
shlb
push
popa
inc
andb
lret
mov
and
sub
inc
or
lcall
lahf
add
sbb
sub
add
sbbb
push
push
call
daa
nop
dec
cld
or
xor
cmpsl
sbb
mov
aam
xchg
idivl
data16
jle
dec
gs
int3
mov
adc
outsb
mull
outsl
test
test
test
das
xor
in
in
daa
lcall
inc
in
popa
xchg
bound
cwtl
rcl
cmp
push
test
les
add
or
mov
ficomps
lahf
jbe,pt
int3
jmp
jmp
jnp
mov
adc
jno
xor
cs
push
push
dec
lahf
fadd
jmp
push
add
js
push
xor
jl
sarb
scas
nop
push
inc
sub
repz
and
push
fstpt
mov
adc
jg
pop
jns
fidivrs
or
dec
cmp
orb
out
fcomp
sub
ljmp
scas
adc
in
je
shr
dec
mov
nop
movsb
mov
xor
mov
shlb
leave
cmp
and
lods
mov
fistl
into
cs
ret
inc
push
xchg
push
lods
mov
out
push
mulb
shll
mov
subb
shll
outsl
xchg
test
adc
xor
inc
das
fldcw
in
mov
cmc
mov
dec
inc
fs
loope
popa
and
add
std
jno
push
jb
fsub
fcoml
out
lods
sub
insb
dec
pop
into
scas
fnstcw
sub
enter
push
pop
or
scas
adc
mov
outsl
nop
sti
ja
mov
imul
insb
aas
inc
and
xchg
fsubp
add
mov
push
out
mov
or
lahf
add
dec
xchg
cmp
popf
jle
fucomip
mov
xchg
sub
or
add
sarb
data16
insl
add
adc
loopne
sbb
fildll
jnp
cmpsl
xor
imul
frstor
cmpsl
mull
xor
push
mov
cli
sbb
out
ljmp
addr16
pop
dec
cmp
cmp
dec
mov
sarl
dec
stos
rorb
mov
push
lds
iret
or
cmc
pop
sub
push
test
fs
dec
ficomps
cmpsl
sbb
cld
xabort
enter
mov
xor
inc
inc
hlt
pop
int
sub
sub
push
maxps
jle
aad
xchg
in
rclb
stc
mov
sbb
jns
fwait
ljmp
cmp
push
fucom
shrl
mov
and
repz
mov
add
cwtl
movsb
add
call
lcall
push
jno
pop
pop
imul
cmp
xchg
sbb
dec
adc
cwtl
pop
jb
dec
cmp
iret
stos
shll
testl
loope
pop
cmpsl
mov
stos
daa
fsubs
fnsave
xor
push
push
sbb
mov
push
out
imul
shll
cmpsb
cmp
shlb
cmp
scas
xchg
int3
lcall
dec
or
mov
add
aaa
pop
insb
and
fs
ret
dec
notl
mov
pop
mov
inc
xor
int3
fidivrl
and
nop
ror
cmp
in
gs
mov
xor
stos
outsb
loope
mov
cltd
jnp
out
test
pop
leave
pop
enter
mov
daa
or
rorl
lret
and
xlat
pop
test
adc
jl
movsl
sub
addl
xor
push
push
fisubs
shll
out
or
fisubl
test
adc
cmp
addr16
addb
dec
sub
inc
or
or
loop
aam
mov
sbbl
pop
imul
adc
popa
ljmp
jg
sbb
out
aad
jecxz
insb
lods
aas
and
out
add
lret
sub
or
insb
adc
jge
call
add
add
aas
pop
cmp
push
add
fadds
mov
or
jbe
and
add
sbb
jnp
mov
stos
ja
or
jnp
sarl
mov
jmp
mov
mov
mov
into
add
pop
or
xor
pop
cs
out
movsl
mov
inc
add
push
fmuls
into
jbe
addb
in
jle
push
xor
adc
pop
add
pop
xor
out
add
mov
dec
mov
stc
mov
js
std
adc
inc
xchg
iret
fcompl
into
clc
mov
mov
mov
push
shr
cmpb
int
pusha
inc
in
xor
mov
xchg
sub
mov
mov
push
outsl
jne
iret
xor
jbe
mov
mov
scas
mov
pop
xchg
dec
in
inc
sub
jo
jo
inc
out
mov
xchg
iret
das
loope
push
cld
insl
or
jo
mov
add
inc
int3
xor
sbb
jl
mov
aas
lret
add
rcrl
or
int
jg
pushf
xchg
xlat
bound
lock
jl
ss
pop
inc
gs
ficomps
es
jmp
jae
pop
sahf
and
mov
shrl
mov
jmp
fdivl
cmpsb
icebp
icebp
addb
hlt
cli
addr16
pop
cmp
int3
pop
mov
pusha
sbb
test
aaa
fisubs
std
push
push
or
xor
and
bsr
pop
movsb
xchg
mov
xchg
sub
pop
jno
inc
inc
js
mov
xchg
xlat
ret
fwait
xchg
jo
jb
aas
sub
movsb
int
mov
fs
in
mov
push
lock
fsubrs
mov
jp
jmp
add
push
jmp
mov
jle
mov
ret
push
xor
xlat
in
fimuls
hlt
or
cld
repz
sahf
cmp
dec
das
cmp
pushf
cmp
adc
cltd
xchg
mov
and
clc
cmc
cltd
cmpsb
ret
dec
arpl
sub
icebp
scas
lret
movsb
aad
push
mov
lea
sub
cli
leave
and
and
pusha
cmp
ds
hlt
leave
push
pop
sub
or
xchg
push
fnsave
add
mov
lock
call
mov
shrb
std
addr16
cld
rorb
mov
inc
shll
pop
es
sarb
repz
cmc
mov
sti
insb
int3
and
orl
xchg
mov
insb
and
scas
data16
jno
mov
stos
lret
pop
adc
cmp
cld
dec
mov
and
push
pop
jbe
pop
dec
fidivrs
sub
in
ret
test
popa
and
cmpsb
aas
js
iret
xlat
lds
fisubs
xchg
push
pop
lods
push
add
xchg
jmp
push
add
adc
jg
outsl
out
xchg
scas
jne
loop
and
or
ja
rol
outsb
in
push
insb
and
cltd
and
add
cmpsl
je
popf
mov
or
cmp
jge
or
push
add
pop
mov
call
cld
mov
sub
mov
mov
repnz
enter
and
popf
cmp
pop
mov
ds
sub
sbb
fsubrs
dec
dec
and
sub
lods
mov
es
adc
add
imul
std
xorb
out
lods
insl
jae
call
iret
pop
xor
mov
jns
sub
cli
fs
lahf
fiaddl
leave
inc
in
stos
inc
sbb
xorl
xor
push
daa
pop
push
push
in
decb
jecxz
pop
jmp
mov
push
mov
cwtl
in
int3
loope
aaa
in
es
cld
ret
sarl
mov
stos
pop
push
and
dec
jp
jge
or
sbb
iret
sahf
jmp
jge
xor
xchg
inc
je
out
icebp
shlb
push
stos
movsb
cwtl
adc
and
mov
imull
mov
mov
stos
and
or
mov
dec
mov
adcb
popf
andb
xchg
mov
in
incb
lock
or
lahf
or
enter
and
adc
fcomps
sahf
and
loope
pop
cmpsb
mov
dec
enter
arpl
inc
in
and
fldcw
mov
stos
sub
into
cmp
or
pslld
mov
push
mov
push
push
hlt
ljmp
leave
xlat
add
imul
sub
inc
mov
dec
nop
outsb
cwtl
das
dec
sbb
lret
sub
mov
mov
outsl
int3
scas
mov
test
mov
mov
push
add
pop
idivl
push
jecxz
adc
enter
out
push
mov
inc
or
mov
inc
push
sarb
xor
and
in
xlat
jp
mov
dec
pop
adc
pop
add
loopne
addr16
cld
sahf
icebp
inc
jge
xor
xchg
fsubrs
cmp
or
cmc
subl
andb
sbb
iret
cmp
push
adc
ljmp
sbb
inc
rolb
and
dec
jo
loopne
cmp
into
addl
js
sub
mov
pop
bnd
lods
stos
fiaddl
inc
inc
mov
lcall
inc
loop
sbb
icebp
mov
xor
rolb
xchg
and
jmp
mov
push
mov
push
das
in
push
pushl
push
pop
push
xchg
loop
lret
pop
inc
les
aam
jecxz
push
rep
add
inc
push
int
adc
xor
jl
pop
bound
mov
xchg
rcll
pushf
mov
sahf
or
cmp
movsb
lods
push
scas
mov
push
or
lods
sub
cmp
loope
fwait
ljmp
sub
mov
push
pop
pushf
int
icebp
xchg
out
xor
and
repz
and
lcall
pop
ret
mov
cmp
pop
and
cmp
ss
mov
iret
bound
ja
fdivrs
leave
jmp
mov
les
cmp
push
in
xchg
int3
lret
push
cs
hlt
jno
lods
arpl
push
dec
cltd
xor
stc
ret
mov
pop
lret
jae
ljmp
pusha
lret
bound
gs
mov
mov
aad
pop
push
mov
xorl
repnz
hlt
inc
fcompl
scas
in
pop
ja
pop
popf
stos
xor
lea
es
xor
test
in
push
stos
mov
dec
jnp
sub
repnz
dec
je
mov
sbb
sbb
sub
int
xor
jo
jns
or
mov
inc
and
fucom
movsl
mov
push
mov
mov
das
lea
dec
stos
mov
cmpps
or
leave
inc
test
ds
rcll
push
leave
lods
sub
cmp
loope
push
xor
mov
mov
mov
notl
sahf
wbinvd
or
aam
icebp
insl
enter
fnop
out
mov
mov
imul
dec
mov
pop
sbb
dec
shl
inc
ss
add
dec
out
pop
int
inc
cmp
int
mov
lcall
mov
and
mov
lds
repnz
dec
jle
mov
fiaddl
mov
std
inc
xchg
xor
cmp
fsubrl
psllw
inc
flds
mov
mov
test
aaa
or
mov
xor
mov
imul
fimuls
pop
cs
mov
pop
inc
inc
xor
out
sbb
pop
cmpl
adc
pop
in
lea
subl
enter
dec
sbb
dec
jbe
adc
clc
mov
das
sarl
add
add
pop
lcall
scas
dec
outsb
in
cmp
mov
sbb
or
and
fldl
sbb
cs
leave
test
jmp
clc
gs
adc
cmp
cmp
orl
inc
sbbl
cmp
popl
sbb
in
sub
shll
fmuls
jecxz
out
jg
or
adcb
cmc
xor
fwait
adc
adc
mov
mov
add
in
mov
sbb
fdivr
mov
mov
cwtl
xchg
pop
cmp
addr16
imull
iret
push
and
popa
scas
lcall
xlat
cmp
sbb
jg
dec
pop
inc
xchg
repz
adc
ds
inc
cltd
vpmulhuw
push
xor
in
pop
rcrl
icebp
mov
xchg
stos
xor
and
push
mov
sahf
or
add
std
push
pop
mov
sti
xor
mov
xor
push
xor
mov
sbb
xor
pop
or
adcb
or
sbb
add
and
push
jmp
test
popl
scas
outsb
pop
sbb
or
fcoms
in
in
hlt
insl
repnz
dec
lahf
lret
scas
dec
mov
jns
mov
pop
cli
sub
xor
ljmp
pop
std
xlat
xor
adc
jae
jo
inc
loope
mov
stc
imul
jmp
adc
pushf
jb
or
stc
jge
cwtl
in
cmp
pusha
or
adc
mov
push
mov
lahf
cmp
arpl
adc
and
jae
cs
ret
loope
shrl
cmpsl
jnp
cli
jnp
in
test
xor
js
in
js
out
adc
cmp
cmp
stos
mov
or
sbb
mov
jecxz
cltd
ret
addr16
dec
fsubr
inc
sub
in
or
push
xchg
pop
mov
pop
and
add
xor
ret
clc
or
jae
fldenv
rcr
xor
ja
in
inc
addl
sarl
push
push
or
hlt
push
fildl
cmp
insb
pop
orl
aas
cli
enter
push
pusha
or
in
stos
fsubrl
cmpsb
or
sahf
sbb
adc
mov
jns
lret
and
loop
inc
jnp
xchg
loop
inc
in
inc
mov
mov
mov
mov
lret
pop
pushf
andb
pop
and
lret
pop
pop
aaa
sub
jb
lret
fisubl
ret
stos
ljmp
inc
jle
ret
adc
hlt
cmp
loop
cmp
incb
and
rcrb
les
rclb
dec
xlat
pop
aaa
jmp
pslld
popf
xor
pop
aam
or
xor
jmp
jl
mov
subb
and
ret
mov
and
jae
es
pop
fnstcw
inc
aam
imul
sahf
sti
sub
arpl
scas
sbb
push
out
jo
pop
lea
lret
xchg
js
filds
fmul
mov
sbb
dec
sbb
ror
cmpsl
mov
and
and
in
push
mov
mov
add
mull
dec
dec
ja
and
jnp
xor
jg
movsb
add
fbld
add
shl
adc
add
xchg
aaa
add
lcall
inc
stc
dec
add
and
ds
fidivl
and
lds
push
mov
in
dec
adc
ficoml
gs
cmp
mov
ss
mov
sub
les
mov
and
bound
push
mov
xchg
or
movsb
pushf
popf
dec
pop
out
arpl
out
incb
fcmovu
push
mov
mov
rcrb
push
rcr
xchg
fdivl
push
es
pop
xchg
cmp
stc
inc
mov
int3
pushf
sbb
jecxz
jno
lods
pop
data16
push
adc
stos
mov
clc
rorl
aaa
mov
mov
cmp
pop
push
push
inc
inc
fsubrl
js
xchg
push
movl
pop
mov
add
push
mov
in
cmpsb
mov
mov
pusha
mov
adc
and
mov
sbbl
push
dec
mov
out
dec
mov
stc
flds
add
mov
loopne
bound
cmp
mov
movsb
mov
aaa
sbb
data16
xchg
or
dec
into
push
jle
mov
jl
mov
test
stos
cmp
cmpsb
jmp
and
gs
pop
inc
sub
inc
cmp
insb
stos
cmp
sub
jne
in
pop
or
push
or
mov
jae
hlt
loope
pop
int
out
int
cmpsl
movl
fdivr
cmp
and
shlb
add
mov
pop
popa
push
js
out
hlt
xchg
mov
cld
stos
mov
sub
mov
in
orl
and
and
imul
insl
sbb
mov
cmc
pop
mov
sbb
jnp
pop
inc
cli
cmp
out
sbb
test
cltd
lds
out
loop
out
dec
mov
add
mov
mov
das
lock
push
cmp
call
ja
out
mov
push
dec
test
sub
mov
std
add
push
add
push
add
orb
in
outsb
cltd
ret
movsb
adc
add
call
negl
push
sahf
push
sub
ret
fsts
sti
push
mov
mov
add
push
or
pop
xor
pop
stc
mov
hlt
ljmp
jecxz
jg
push
lds
pop
clc
dec
mov
and
or
cmp
mov
repz
xor
add
idivb
arpl
adc
hlt
pusha
sub
ljmp
gs
xchg
je
idivl
lret
les
aam
les
inc
mov
xchg
lcall
cmp
mov
sub
pop
movsl
std
mov
and
mov
jge
nop
pop
or
in
sbb
frstor
dec
dec
jge
or
and
push
cwtl
xchg
add
pusha
mov
lods
cwtl
js
aad
lods
add
ss
mov
cs
xor
add
dec
add
inc
pop
inc
mov
sbbl
push
inc
adc
mov
mov
popa
jb
cmp
nop
mov
mov
adc
inc
jae
fiaddl
fcmovnb
rcrl
bound
push
insl
cmpsb
mov
lret
dec
xor
push
xor
or
or
shlb
movsb
std
inc
insb
in
rcll
push
lcall
outsl
jne
out
mov
cli
stos
xchg
mov
mov
or
into
dec
mov
sbb
and
inc
repz
ret
fstps
xchg
adc
mov
imul
and
push
adc
js
jmp
repnz
cmp
mov
test
mov
je
insl
sub
pop
lret
inc
sbbl
int
cmpsl
add
dec
adcl
push
or
jl
xchg
out
dec
mov
inc
sub
es
push
stos
mov
jbe
mov
or
popa
or
das
or
in
push
nop
sub
je
pushf
outsb
cmp
adc
addr16
adc
dec
decb
popf
jge
jmp
stc
push
push
dec
data16
pop
inc
mov
bound
decb
mov
stos
sarb
mov
cmp
inc
xchg
pop
inc
jb
xor
mov
lea
fists
xor
pop
call
fsubs
out
push
dec
loopne
iret
test
dec
aas
dec
dec
mov
mov
fiadds
fcoms
mov
pop
loopne
sti
cmpsb
inc
sbb
nop
xchg
jb
xchg
test
jp
fs
je
daa
cmpsb
cs
nop
shll
xor
push
xchg
fcomip
popf
ds
test
add
mov
in
xor
mov
aas
inc
jno
cmpsl
mov
loope
insb
cmp
in
push
out
mov
inc
mov
data16
mov
movsl
and
jno
cld
orps
mov
jl
inc
js
dec
leave
xor
jge
aaa
and
dec
notb
cs
jmp
xchg
inc
mov
pop
sbb
dec
inc
insl
xchg
pop
push
cmpsl
test
arpl
push
test
jl
add
inc
lea
jecxz
in
dec
push
mov
jg
dec
push
mov
sbb
mov
fisttps
push
std
cmp
cmc
jg
aaa
jl
fcomps
ds
popa
xlat
xchg
hlt
adc
rcr
orl
mov
iret
aas
dec
popf
or
fwait
stos
fwait
pop
pop
pop
adc
add
cmp
mov
push
xor
pop
gs
leave
adc
inc
push
and
ds
sbb
mov
pop
in
cmp
movsl
imul
xchg
enter
or
jb
pop
mov
les
and
xlat
push
sub
js
fiadds
movsl
push
cmp
pop
outsl
dec
sbb
movsb
lret
cwtl
dec
xchg
loop
pop
scas
sti
xchg
pop
cmp
test
or
cmc
std
hlt
jmp
cmc
sub
negl
xchg
imul
push
jmp
repnz
pop
inc
xor
scas
cwtl
cmp
pop
inc
jmp
dec
cmp
cld
jl
fstpt
decl
or
sub
stos
sbb
xchg
rcrl
and
lcall
std
adc
mov
movsb
mov
sub
add
imul
xor
repnz
outsl
mov
fists
mov
or
xor
notb
add
lret
pop
cltd
jns
xchg
stos
imul
in
aad
mov
xchg
movsb
pop
fmul
xor
data16
mov
push
mov
out
and
ud1
adc
mov
lret
xchg
pop
lcall
lods
out
jnp
ja
dec
sub
inc
push
push
sbb
pop
fmull
sbb
leave
std
pop
adc
xchg
dec
repz
pop
gs
jne
inc
add
shll
in
jns
cld
jns
fcmove
sbb
sub
xor
pusha
in
out
pusha
cli
adc
rolb
pop
sbb
decb
sbb
pop
mov
in
je
or
aaa
lret
lahf
movsb
lods
fldcw
pop
xor
xor
inc
xchg
push
xor
sub
pushf
imul
xchg
ljmp
adc
dec
addl
addb
aas
movsl
ss
fistps
lods
pop
dec
aam
jbe
mull
xor
fisttps
pusha
int3
or
add
adc
insb
imul
add
jne
nop
testl
inc
ds
int
adcl
and
jmp
fstpt
scas
pushaw
mov
cltd
iret
adc
jmp
filds
push
cltd
mov
imul
lcall
repz
lret
fistl
int
xchg
xchg
insl
into
xor
fcmovne
mov
std
cmp
sbb
ret
xchg
pop
xchg
call
cltd
loop
cmp
test
repz
pop
and
mov
sti
rcrb
mov
sub
lods
sub
movsb
push
movsl
clc
dec
fnstcw
repnz
leave
or
adcl
in
std
xor
sub
imul
sub
or
xchg
jae
sahf
xchg
cwtl
and
mov
insl
popa
outsl
mov
xor
adc
cli
addr16
pop
pop
into
dec
jecxz
sbb
cmp
and
jbe
enter
and
dec
lret
mov
lods
clc
cmc
and
mov
mov
sub
push
xchg
movsl
out
push
cltd
jo
jb
cmp
sub
mov
je
cli
push
inc
sbb
pop
jp
pop
push
mov
pop
dec
xchg
xchg
sub
add
stos
js
sbb
notb
mov
lcall
sbb
lds
cmpb
repnz
comiss
out
scas
pop
pop
ret
xchg
call
cmc
int
pop
repnz
cmp
notb
test
mov
aad
add
sarb
pop
gs
and
add
leave
hlt
adc
sub
out
mov
repnz
xchg
in
adc
lods
popf
pushl
mov
xchg
es
cli
insl
je
push
or
push
subl
out
mov
dec
add
addb
fdivrs
xchg
lret
loop
jae
stos
int3
sub
xchg
inc
mov
out
ret
mov
push
xchg
je,pt
repnz
cltd
ror
sub
addr16
or
out
mov
aaa
aas
sbb
ds
inc
outsl
pop
push
pop
ljmp
test
pushf
fldl
dec
jecxz
das
icebp
jb
xor
push
push
jp
push
sub
dec
scas
out
cmp
or
int3
xchg
test
xor
or
pop
movsl
dec
aas
std
popa
fsubrs
sarl
dec
cwtl
cmp
adc
sub
jmp
or
jge
loopne
inc
mov
leave
sbb
and
dec
mov
and
cmpsl
repnz
and
or
push
fidivs
inc
pop
add
mov
and
dec
mov
mov
imul
and
push
mov
push
mov
fistpll
cwtl
repnz
pop
fdivrl
out
data16
adc
inc
jmp
ljmp
leave
adc
fdivs
int
insb
push
adc
cmp
pop
out
imul
decb
mov
pop
sub
mov
pop
dec
xchg
jg
sub
pop
mov
subb
pop
xchg
shl
add
lea
mov
xchg
mov
leave
lahf
cmp
add
int
lods
xchg
pop
mov
ret
dec
call
inc
mov
jne
lcall
sub
jmp
mov
pop
addr16
popf
sbbb
fwait
dec
pop
insb
xorb
mov
xor
or
jae
movsb
repz
adc
add
repz
push
jb
outsb
in
ja
scas
daa
das
test
sahf
pop
pushf
lock
stos
jmp
mov
nop
scas
inc
repnz
add
in
loop
sbbl
and
pop
or
dec
inc
dec
rcl
fildl
or
jge
pop
xor
cs
insb
ret
push
movsb
or
iret
xor
das
jecxz
adc
es
lds
pusha
stos
and
push
pop
mov
cli
xor
test
jae
scas
push
inc
jg
inc
mov
or
imul
scas
ret
pop
jne
fmuls
jmp
lods
out
clc
fisubs
movsl
push
ret
aaa
repnz
movsb
iret
dec
incb
pop
add
sti
fmull
push
inc
into
jg
ljmp
pop
popa
jg
sbb
mov
lret
inc
fcmovnbe
xorb
test
cltd
push
sbb
test
std
in
rorl
mov
aaa
jae
fnstcw
int
movsb
aam
movsb
add
out
rcl
fistl
push
mov
je
es
ds
pop
lock
cmp
pusha
inc
mov
adc
sbb
mov
adc
mov
or
sub
xchg
cmp
mov
adc
or
outsb
gs
das
xor
popa
decl
insb
fisttpll
ss
inc
sbb
scas
and
leave
or
movsl
pop
cmp
cmp
and
repnz
mov
lahf
push
cs
pop
out
pop
inc
and
scas
cs
movsl
push
negl
jo
out
sbb
or
loope
movsb
mov
arpl
and
shl
pop
insl
jnp
jb
xor
mov
fldl
in
out
dec
jo
xchg
push
and
mov
mov
out
sbb
sahf
jecxz
in
add
gs
mov
jge
rolb
in
lahf
jbe
fs
jmp
data16
mov
jnp
fidivl
mov
int3
dec
or
sar
outsb
adc
bound
sbb
mov
dec
xchg
clc
inc
mov
sbb
xor
rolb
iret
mov
mov
pop
add
inc
clc
or
adcl
adc
lret
sbb
out
dec
lret
push
jb
out
or
test
pop
es
sub
movsl
mov
shll
cmp
cmp
add
mov
sub
mov
fnstcw
mov
nop
fstl
daa
loope
test
adc
dec
sbb
in
cmpsb
ret
pop
push
loope
sub
lods
test
ficoms
adc
addr16
pop
mov
aam
test
dec
insl
scas
movsl
lock
dec
and
or
push
jle
mov
js
clc
stos
repz
jmp
nop
pop
out
fisttpl
and
aaa
adc
scas
sbb
push
cmc
adc
xchg
out
jmp
mov
adc
xor
sti
out
push
sub
pop
test
push
xlat
push
lods
jbe
fldlg2
sub
imul
xchg
popa
enter
lret
mov
mov
pop
adc
fists
xchg
sti
lds
pop
jae
pop
jle
push
call
nop
mov
mov
mov
inc
movsl
movsl
scas
icebp
add
pop
mov
stc
xchg
notb
sub
mov
mov
mov
xchg
das
sub
jns
cmp
sub
int
je
dec
shll
sub
setne
adc
pop
adc
test
in
jle
movsb
xchg
add
and
das
aas
mov
mov
aas
pushf
mov
dec
or
loop
fcmovnb
jg
and
push
shlb
rcll
aam
ss
push
inc
mov
pop
dec
orl
sub
sbb
xchg
add
into
in
jns
ret
popa
loopne
inc
cmp
insl
daa
fnstsw
out
out
sbb
sub
fcoms
repnz
xchg
je
xor
nop
mov
jno
andl
call
jl
inc
sbb
xorb
sbb
or
orb
push
icebp
jg
insb
repnz
cmp
rcll
test
ret
jmp
pop
fdivl
jnp
jg
lret
rcrl
cmpsb
sbb
xchg
popa
mov
cmp
sub
fisubrl
cmp
popl
ret
es
aas
mov
cld
push
mov
sub
jb
jle
loopne
push
and
addb
outsl
mov
pop
subl
ret
and
rclb
cmp
jns
mov
add
mov
sbb
dec
insb
or
sub
arpl
pop
inc
lock
pop
push
sbb
out
sbb
mov
in
and
cmp
mov
and
pop
xor
xchg
cmp
aad
and
xchg
inc
pop
xchg
icebp
xorl
stos
loope
sarb
fistpl
xchg
aaa
in
out
mov
xchg
or
push
mov
and
in
das
pop
enter
or
movsb
out
in
fisttps
and
dec
inc
out
mov
enter
pop
mov
aam
aas
xor
subb
xor
fs
push
adc
xchg
inc
add
lcall
push
scas
in
push
mov
xchg
xlat
dec
out
mov
dec
xor
xchg
jle
clc
mov
jae
rorl
pop
aaa
inc
sarb
push
push
inc
add
jmp
xchg
js
in
and
bound
cld
jb
ds
lcall
or
dec
arpl
clc
outsl
fcmove
mov
sbb
insb
movsb
es
dec
jle
scas
fmuls
leave
inc
in
and
std
nop
add
mov
je
and
ja
xor
lahf
sbb
pop
imul
and
std
insb
ret
addr16
iret
xor
fstpt
lea
mov
out
jo
and
jns
aad
sub
xchg
fnstcw
or
dec
xchg
cmp
subl
fsubrl
sbb
sub
movsb
add
pop
mov
rol
jbe
ret
rcrb
adc
dec
movsb
enter
sbb
xchg
xor
mov
sub
call
sbb
jecxz
push
adc
rcrb
mov
cs
mov
int
jmp
cltd
fadds
imul
mov
out
xchg
push
repnz
fistps
iret
xlat
jmp
lcall
sub
outsb
rclb
mov
sbb
lret
mov
lds
repnz
sbb
jmp
pushf
int3
sbb
mov
cltd
push
aam
lret
mov
idivl
cli
push
cwtl
cwtl
lds
shll
imul
mov
mov
add
mov
mov
push
adcb
dec
bound
pop
push
push
dec
fs
aad
push
daa
in
scas
sahf
xor
outsl
add
push
ljmp
insb
dec
mov
fnsave
mov
pop
out
add
repz
in
and
loope
fisttpl
push
daa
out
xor
sarb
out
cltd
push
or
call
andl
fiadds
cmp
mov
jns
std
mov
sbb
mov
lret
inc
pop
dec
xchg
sub
repz
xlat
inc
pop
in
dec
dec
jge
jmp
xor
adc
xchg
test
imul
imul
cli
insl
outsb
xorb
out
xchg
stos
ss
pop
lock
push
inc
xchg
lcall
ss
shlb
imul
xor
leave
inc
clc
xchg
int
pop
cmpsl
cli
push
cltd
push
int3
mov
mov
mov
inc
cwtl
dec
mov
add
outsl
mov
mov
data16
adc
faddl
mov
inc
std
enter
and
sub
pop
inc
jae
call
dec
aaa
mov
cltd
sub
int
xor
aad
aam
push
add
xchg
push
xor
movsb
mov
enter
cmpsl
push
push
das
or
aad
data16
add
stos
ss
call
inc
sar
test
cld
dec
dec
push
movsb
fiadds
and
movsb
mov
mov
mov
xor
nop
mov
sub
pop
cmpb
insb
mov
icebp
popa
mov
cli
sbb
sbb
push
jmp
push
jbe
pusha
pop
rcll
mov
mov
shlb
test
pop
cltd
mov
lahf
lahf
clc
lock
sbbl
notl
mov
rclb
add
push
sarb
xor
bound
lea
jge
aas
add
fildll
call
push
les
or
and
dec
and
fstps
mov
aaa
add
jnp,pn
add
decb
js
pop
and
enter
sub
shl
xchg
std
std
jo
testb
mov
or
xchg
daa
jg
add
xchg
dec
push
movsl
int
dec
mov
xchg
in
push
icebp
pop
pop
sbb
pushf
cmp
push
popa
or
pop
jmp
dec
cmp
xor
out
pop
push
shlb
mov
sub
mov
lahf
das
in
cs
adc
xlat
mov
xchg
or
shrl
lods
ss
popa
inc
out
push
dec
dec
stos
cmp
mull
rolb
mov
shl
jns
push
frstor
adc
divb
cmp
sub
pushf
add
add
mov
pushf
shlb
adc
jecxz
mulb
push
jae
shrl
push
mov
dec
add
sbb
loope
mov
das
and
cmp
shrb
fisttps
add
sub
push
dec
mov
dec
out
int3
xlat
push
or
cmpsb
jns
cwtl
insb
lret
xor
push
mov
aas
pusha
xor
movsb
mov
ret
out
jecxz
cmp
fiaddl
push
js
adc
out
jecxz
or
add
mov
add
add
cmp
push
adc
push
add
lods
inc
int3
or
pop
fcmovbe
push
repz
pop
sbb
xor
and
les
or
int
fsubrs
xor
inc
xor
loopne
sub
mov
fiaddl
test
mov
daa
push
call
push
iret
ret
adc
pushf
shr
insl
loopne
setg
aam
push
push
mov
xor
sub
and
loopne
jnp
push
mov
inc
adc
mov
pop
jno
adc
jl
and
pop
psubusb
mov
xor
adc
mov
mov
mov
ja
mov
jns
outsb
in
mov
xor
jbe
jns
mov
adc
pop
jo
shll
lahf
adc
sahf
xchg
jg
inc
bound
xchg
out
cmp
enter
or
sbbl
inc
mov
shl
icebp
and
sub
aam
and
inc
shl
sbb
stc
dec
and
xor
orb
insb
lods
push
leave
ret
or
std
sahf
jg,pn
push
movsb
adc
adc
lock
add
pusha
sbb
lret
cmp
out
jbe
jg
rolb
push
sub
insl
xchg
lock
int3
adc
or
cmp
cmpsb
cmpsl
jo
outsl
xlat
inc
sti
mov
push
mov
sti
adc
sub
shll
inc
lcall
in
sub
stos
pop
vshufps
inc
out
inc
es
jmp
sbb
and
test
clc
arpl
and
mov
add
imul
pushf
and
pushf
and
or
shlb
lret
out
call
cli
add
hlt
dec
fdivl
mov
je
xchg
mov
out
test
mov
pop
sbb
adc
jge
dec
lcall
jbe
dec
jns
add
mov
hlt
xchg
notl
push
hlt
mov
popa
pop
test
or
push
sahf
mov
cmpsl
adc
adc
fsts
out
into
enter
sub
lahf
pop
jmp
lahf
test
mov
sbb
rorl
das
jo
in
movsb
stos
sti
enter
cs
dec
clc
jns
test
ret
jl
jg
popf
mov
repz
xchg
pop
insl
aam
add
pop
subb
adc
mov
sbb
jp
jno
push
gs
outsb
int
fidivrl
int
cld
add
jl
dec
cli
bound
scas
jmp
dec
lods
rorl
das
mov
sbb
in
loope
leave
in
push
push
adc
sti
sahf
cs
imul
pop
jb
loopne
jae
es
insb
push
fnstsw
inc
les
leave
adc
xor
xor
pop
push
lea
rcrb
xchg
sbb
mov
cmp
rcr
inc
fbld
fdiv
jnp
imul
push
mov
xchg
pusha
imul
xchg
test
fs
stc
cmp
mov
adc
jp
add
daa
push
cmp
scas
pop
inc
test
popa
testl
das
cwtl
stc
mov
ret
jbe
adc
imul
mov
test
pop
test
sbb
into
sub
lea
mov
icebp
jge
fistpll
in
insl
adc
stos
add
fwait
test
clc
rcr
test
ffreep
or
in
cmpb
icebp
in
xchg
cmp
mov
sbb
call
daa
mov
test
scas
xchg
ljmp
lods
xor
imulb
cli
jmp
inc
xchg
repnz
enter
aas
push
test
popa
mov
sbb
jge
sub
add
fwait
mov
xchg
push
fwait
add
test
sub
pop
pop
sbb
xchg
mov
jecxz
ljmp
or
adc
nop
clc
incb
lods
lcall
icebp
fsub
rcrl
xor
gs
or
or
jecxz
clc
mov
nop
popa
cmp
inc
idivb
je
mov
subl
out
pop
sbb
pop
mov
cmp
push
ja
or
int
mov
add
xchg
or
dec
lret
push
rolb
cmp
push
int3
mov
pop
insb
fs
push
and
add
jmp
ljmp
sahf
int
xchg
or
in
jb
dec
fld
shlb
stos
cmc
addr16
scas
jnp
mov
pop
int3
outsl
cmc
xor
xor
and
xchg
xchg
enter
scas
dec
and
pop
hlt
inc
enter
stc
dec
gs
xchg
fs
ljmp
in
jp
xor
mov
cld
cmp
fwait
addr16
fstpt
push
or
fcmovnbe
dec
sbb
add
add
bound
pop
and
addl
pop
jb
insl
pop
xor
jmp
push
sbb
jb
pushf
and
jmp
stos
fs
xor
dec
dec
pop
mov
xchg
sbbl
clc
mov
lret
push
icebp
pop
adc
pop
cmpsb
fldenv
mov
xchg
subb
inc
cld
and
xchg
sbb
xchg
jnp
fmuls
insb
enter
mov
mov
out
insl
mov
fnstsw
pop
pop
popf
fildl
cwtl
adc
or
mov
leave
and
or
repnz
jle
int
mov
add
inc
push
mov
dec
mov
pop
push
leave
mov
inc
movsb
mov
into
mov
icebp
xchg
aas
or
addr16
out
adc
xor
add
in
add
sub
add
movhps
push
add
push
adc
or
repnz
mov
insl
cmp
dec
add
cmovo
cmp
xor
jp
dec
mov
sahf
shlb
push
xor
dec
lret
arpl
pop
lret
imul
movsl
lods
sbb
test
lds
outsl
and
aaa
call
adc
xor
adc
repz
pop
xchg
fstl
push
mov
jno
psllq
sbb
or
and
movhps
int3
mov
xor
adc
mov
adc
cmp
push
push
in
movl
fs
ljmp
or
cwtl
js
jg
stos
mov
orb
ror
inc
insl
out
imull
mov
add
rcrb
xor
nop
call
roll
fstl
adc
les
or
add
mov
or
ficompl
push
lock
pop
or
es
jne
push
jnp
pop
dec
mov
movsl
ret
popf
rorb
ds
jnp
movsl
xor
rcll
inc
fstpt
jns
xchg
adc
negl
call
inc
repnz
ljmp
ficoml
mov
ret
xchg
cld
cs
clc
and
dec
dec
dec
lods
cltd
in
dec
vphadduwq
sub
lcall
rol
add
sub
inc
dec
popa
loope
outsb
mov
movsb
in
sub
mov
xchg
dec
push
or
in
xchg
xor
mov
lret
jle
test
sub
push
add
into
sub
mov
insb
mov
in
aam
adc
mov
mov
cmp
mov
xchg
rcrb
arpl
nop
push
popf
and
add
es
test
insl
ds
mov
xor
push
cmpsl
xchg
mov
adc
cmpb
popa
in
aas
pcmpgtd
sbb
mov
push
mov
add
icebp
xlat
fildll
mov
cs
test
cmp
outsl
filds
fdivs
add
jmp
imul
out
and
add
sub
cmpl
add
mov
inc
jns
gs
sbb
out
loop
jge
int3
mov
movsl
and
sahf
shlb
mov
adc
mov
dec
mov
sbb
xor
pop
fs
add
push
mov
into
adc
and
cmpsb
sbb
mov
xchg
adc
adc
adc
inc
pushf
mov
pop
adc
lcall
out
xchg
push
xchg
xor
xor
sub
icebp
push
push
cmp
pop
movsl
cs
mull
data16
cli
mov
into
add
pusha
lds
and
mov
lds
repnz
aaa
inc
leave
push
mov
jno
mov
out
fdivs
adc
iret
imul
push
and
out
push
out
fdivrl
xor
adc
xchg
mulb
inc
clc
mov
xor
dec
xor
dec
rolb
imul
cmp
ret
sub
scas
mov
or
sti
push
test
shll
scas
loope
push
out
pop
iret
addr16
in
fldenv
lret
mov
dec
inc
pop
inc
cld
pop
push
push
gs
mov
pop
stc
sbb
cmp
js
pop
inc
cld
add
jl
or
jno
sub
mov
xor
and
sbb
lock
int3
fsts
cmc
push
dec
mov
xchg
xlat
push
sahf
push
out
loopne
jne
cmp
lret
mov
sbb
xchg
jecxz
movsb
xchg
sub
mov
add
sub
lret
repnz
sub
pop
js
lcall
out
or
mov
ret
cmp
filds
mov
mov
loopne
insb
int3
mov
cmpsb
je
fwait
rcr
xor
jne
or
fsubr
sbb
cltd
sub
cli
mov
shrb
repnz
out
js
outsl
andl
push
rep
pop
mov
push
lds
test
sbb
mov
sub
lahf
popa
aam
adc
add
mov
mov
inc
scas
xor
jne
mov
pop
insb
adc
das
mov
mov
aam
jmp
add
or
js
pop
enter
pop
pop
mov
mov
sub
rdpmc
xor
mov
fs
pushf
jne
int
push
lods
and
adc
push
mov
sub
repz
jge
cmp
pop
jnp
rcrb
ljmp
push
rcll
ja
xchg
shl
or
pop
int
jle
rolb
dec
cmpsb
xchg
adc
into
mov
insl
fidivs
cld
mov
xchg
vmovntps
lret
data16
bound
fwait
jae
dec
es
jp
fadds
xorb
adc
pop
std
popa
cwtl
sub
push
test
sbb
out
daa
ds
jae
xorb
jmp
imul
in
xchg
fxch
pop
pop
cltd
cmpsb
sub
jp
cld
les
mov
xchg
jae
mov
pushf
movsl
out
mov
push
adc
mov
sbb
fidivs
ja
ljmp
lea
add
insb
sbb
movsb
daa
add
cmpsb
movsb
pushf
sbb
mov
and
insl
mov
imul
test
stc
cltd
mov
inc
mov
aaa
push
daa
xchg
fisubl
repz
in
xlat
dec
xor
xchg
mov
cmp
in
sbb
dec
jecxz,pt
in
scas
sbbb
push
sbb
and
adc
ret
push
cli
inc
jp
jl
dec
add
pushf
inc
scas
dec
xchg
xchg
pop
add
jbe
mov
cs
mov
mov
xchg
outsb
rcr
sti
xor
iret
sbb
movsb
fbld
aaa
mov
out
adc
pop
fwait
test
add
push
inc
sti
mov
inc
or
ljmp
xchg
imul
out
add
stc
stos
jno
jnp
cmp
mov
sub
mov
or
es
push
sub
fsubrs
rcll
jmp
sub
xchg
std
into
cmpsb
push
push
test
pop
mov
shlb
jecxz
and
jge
scas
aaa
lcall
cmp
das
icebp
fldcw
ljmp
cld
cltd
xchg
pop
sub
pushf
or
test
ljmp
scas
repz
loope
jmp
aam
mov
cltd
sti
cmp
jbe
test
out
mov
aas
bound
stos
mov
cltd
pop
idiv
adc
sahf
les
lock
mov
aas
and
or
mov
in
ljmp
test
scas
addb
xor
adc
or
sbb
test
call
lods
xor
add
or
movb
push
jbe
xchg
dec
icebp
inc
jno
mov
jno
subl
imulb
jmp
jae
cwtl
jg
mov
xchg
mov
negb
das
daa
cli
or
je
xchg
xor
in
iret
xor
loopne
push
movsl
fdecstp
mov
int
mov
push
jbe
ds
sub
jge
sub
and
xor
cmpsl
or
out
sub
adc
in
mov
je
jp
xchg
pop
xchg
pop
jmp
out
fldcw
shrb
cwtl
adc
std
push
enter
cwtl
and
adc
cmp
mov
fnstenv
cmc
mov
dec
sbb
xor
cli
loop
xor
pop
xor
push
pop
mov
adc
icebp
push
pop
ficoml
bound
inc
ffreep
je
dec
jg
aam
push
push
and
inc
mov
shrl
push
dec
adc
cmp
xor
or
push
mov
divl
inc
dec
fisubs
pop
sub
out
mov
mov
jle
setnp
xor
or
pop
outsl
rcll
jge
dec
dec
mov
aas
or
inc
xchg
cmp
fstpt
int3
sbb
push
add
repz
dec
and
aas
scas
jg
shll
in
rorl
sub
adc
arpl
insl
in
mov
xor
imul
icebp
adc
dec
nop
add
add
mov
adc
or
mov
gs
mov
lcall
lcall
dec
repnz
fdivl
mov
imul
sub
xchg
shlb
xchg
scas
pop
shl
sbb
jns
push
xlat
ja
jmp
mov
aas
mov
push
jle
jg
xchg
icebp
add
repnz
fimull
sarl
mov
and
mov
out
stos
jle
mov
dec
sub
mov
rclb
fs
cmp
sub
pushw
fs
mov
mov
or
pop
jle
sarl
in
stos
mov
mov
cmp
mov
adc
cmp
and
jp
loop
inc
pop
mov
andb
roll
xchg
cwtl
imul
test
or
int
fwait
addr16
outsl
call
sbb
push
inc
push
pop
jp
aas
stos
pop
jns
pop
imul
lods
rolb
test
push
call
stos
aas
push
out
test
pop
icebp
pop
popf
add
dec
push
sub
cmpsl
mov
and
cmp
dec
cmpsb
cwtl
repnz
daa
dec
mov
dec
ds
and
jmp
popa
mov
sub
add
test
fucomi
dec
outsl
jge
pop
mov
int3
in
popa
call
loopne
push
lcall
test
inc
sub
push
push
mov
sbb
ret
es
int
mov
push
pop
test
dec
pop
jbe
xor
daa
inc
xor
aam
dec
out
add
push
std
iret
xchg
mov
pushf
xor
push
xor
mov
cli
ljmp
orb
lret
dec
lods
jp
xchg
cmp
cmpb
mov
femms
pop
cwtl
cld
sub
iret
popf
inc
mov
xor
add
ss
and
out
mov
inc
insl
movsl
data16
push
sbb
lds
data16
sbb
dec
jbe
mov
and
xchg
push
adc
fstl
sbb
cltd
cs
pusha
sbb
lcall
cmp
icebp
and
cmp
jb
pop
push
dec
lea
cmp
or
add
mov
mov
pop
mov
cltd
and
aaa
mov
inc
inc
push
dec
lcall
push
or
cmc
mov
les
pop
aad
lea
add
mov
mov
dec
or
push
sub
jmp
adcl
xchg
sub
jecxz
out
add
std
mov
inc
add
out
cld
sub
sbb
xor
and
fs
jne
jp
scas
push
nop
negl
movsl
cli
mov
cmp
sub
addr16
popa
scas
add
in
inc
loope
es
adc
cmpsb
cmp
mov
shrb
push
mov
jns
dec
ror
aam
fistl
lret
mov
and
pop
into
sub
mov
aad
cmp
mov
mov
ja
sbb
es
or
pop
inc
and
sti
sbb
daa
stos
into
cmp
fnsave
sbb
out
add
pop
mov
dec
ja
incb
in
scas
cmc
inc
mov
dec
pop
adc
ds
or
adc
dec
xchg
and
lods
mov
mov
jno
push
mov
popl
movb
sub
jp
out
addr16
sahf
cmp
push
lret
add
dec
xchg
and
mov
mov
lods
popa
dec
es
xor
mov
cmpb
outsl
insl
lret
es
or
mov
fdivrl
add
call
or
inc
test
scas
jmp
push
rcr
mov
mov
inc
aaa
jle
test
pop
cmpsl
imul
and
xchg
mov
dec
movsl
setge
out
stos
mov
lret
mov
std
add
sbb
in
scas
xchg
push
addr16
dec
fwait
sub
cmp
xchg
pop
idivb
cmp
mov
int
push
adc
mov
and
imul
stos
inc
cmp
inc
jae
and
mov
cwtl
push
jne
jbe
shll
out
int
mov
mov
test
mov
in
hlt
xchg
outsb
mov
sub
clc
sbb
test
mov
add
aad
mov
cmpb
jo
cwtl
mov
loopne
add
fcmovnu
out
mov
pop
test
scas
mov
jmp
and
jl
cmp
int3
jg
cs
xchg
gs
cltd
mov
iret
out
cwtl
into
inc
fimull
xchg
push
gs
jb
std
lea
sahf
fmull
dec
in
mov
add
push
les
mov
sbb
xor
daa
mov
mov
stc
pop
or
lds
push
inc
pop
dec
mov
sub
xor
aas
adc
cwtl
cmp
mov
addl
popf
xor
xchg
ja
push
and
rep
shl
push
sbb
arpl
outsl
aam
dec
cli
push
jne
dec
sbb
push
lahf
add
inc
lds
lcall
mov
pop
jo
das
sbb
jb
mov
nop
ja
mov
cli
mov
cmp
push
inc
call
mov
mov
mov
and
add
in
scas
mov
bound
jg
iret
loope
addl
bound
push
test
rolb
jbe
jbe
cld
mov
jnp
in
jecxz
into
pop
mov
fidivrs
cld
mov
lods
in
pop
mov
insl
cli
cli
inc
sbb
dec
mov
cmc
pop
out
sub
xor
je
adc
cmp
sbb
je
out
xchg
pop
loopne
adc
pop
push
mov
xchg
punpcklbw
pop
fimuls
mov
int3
in
jbe
leave
jge
aaa
add
mov
subl
aas
xlat
cmp
movsb
imul
pop
sub
xchg
insl
sbb
sbb
inc
sub
xchg
inc
pop
call
out
int
jns
push
je
push
in
outsb
insb
call
sub
sbbb
sbb
sbb
fisubrs
jecxz
sub
push
fidivs
xchg
xor
dec
mov
mov
pop
inc
xor
movsl
dec
or
ja
leave
imul
in
imul
fstpt
popf
pushf
test
gs
sub
in
jp
mov
in
and
pop
sahf
xchg
jle
push
mov
pop
xor
cmp
inc
jmp
loope
sbb
cmp
mov
popa
adc
ss
mov
aad
jl
mov
in
int3
lds
push
xor
data16
or
xlat
or
pop
mov
inc
int
sbb
jno
lcall
dec
jne
and
es
out
dec
push
stc
dec
lock
pop
nop
gs
mov
and
inc
nop
mov
outsl
iret
xlat
mov
sbb
in
inc
rcrb
inc
xor
gs
mov
std
movsb
pop
je
xchg
pop
int
sbb
mov
repnz
scas
das
clc
sbb
xor
adc
push
movl
sub
int
pop
xchg
push
arpl
jns
lods
mov
fsubrl
xorb
loope
xchg
push
fsubp
dec
test
iret
or
xor
ret
dec
jno
xchg
push
jmp
push
adc
popf
std
cmp
sbbl
mov
mov
cmp
call
xor
adc
sbb
outsb
popf
pop
outsb
mov
mov
fdivrl
lods
jno
jle
into
repz
push
clc
lock
xchg
lret
mov
or
cltd
mov
jmp
xchg
lods
repz
xor
sub
shrd
add
xchg
ss
push
jb
cld
adc
lcall
jbe
stos
daa
fidivl
lock
pop
test
lock
mov
sbb
push
bound
adc
jp
fistps
mov
bnd
adc
jl
maskmovq
lock
mov
adc
ja
xor
push
xor
nop
mov
xor
dec
pop
cmp
xor
and
dec
xorl
and
daa
je
and
lds
pushf
inc
iret
inc
push
dec
sbb
rcrl
test
and
xchg
scas
mov
rcr
leave
out
push
divb
repz
insl
pop
sub
gs
pop
cmp
add
jl
cld
xor
lea
and
add
mov
lock
jno
scas
and
dec
shlb
pop
add
sub
aaa
arpl
call
int
fistps
cli
or
lahf
mov
out
shll
mov
or
inc
and
or
adc
out
aaa
fdivrl
cmc
ret
pop
sti
dec
cli
aad
push
fcomi
mov
jno
add
or
leave
lds
lea
sub
cs
adc
outsb
push
aad
decb
mov
inc
cmpb
cmp
sbb
pop
push
push
outsl
xchg
lock
xchg
pop
stos
stos
jg
cld
outsl
push
adc
sub
aad
daa
fdivrs
mov
push
mov
pop
in
sub
fldt
aaa
ljmp
pusha
cmp
push
push
jle
fstpt
mov
out
add
adc
cmp
jnp
lret
adc
icebp
dec
mov
jb
sub
fsubrl
fs
adc
add
cmp
out
clc
idiv
decl
xor
push
adcl
insl
stc
fucomp
lret
dec
cli
leave
scas
sar
adc
sarl
xor
xor
xchg
sub
jae
jbe
repnz
inc
pop
ljmp
loope
testl
or
pop
sbb
int3
push
addr16
call
aad
adc
lods
cmp
sarb
test
sub
mov
outsl
jno
pop
mov
test
mov
adc
push
rcrl
jmp
outsb
jle
mov
mov
jl
push
mov
in
and
inc
adc
jne
cmp
add
mov
mov
and
paddq
and
ss
pop
pop
subl
adc
adc
dec
and
je
jae
sbb
lret
lcall
dec
loopne
loop
pop
xlat
lds
cmp
mov
cmp
jle
rcrl
jg
xchg
shlb
test
xor
push
shll
add
fs
adc
rep
jno
test
and
or
outsb
ljmp
sti
leave
add
xor
xchg
rcll
xchg
pusha
int3
daa
jl
xchg
pop
push
xchg
pop
pop
adc
leave
into
adc
mov
push
xchg
lods
push
adc
gs
and
dec
cmp
ss
xor
outsl
cmpsl
or
jge
sbb
cmp
cmp
cmp
pop
loopne
lcall
fsubr
push
in
insl
dec
int
inc
push
xor
outsl
icebp
push
lret
rcrl
ret
lahf
aad
fwait
orl
lods
jno
xor
subl
push
mov
rorl
push
mov
adc
mov
stos
insl
pop
cmp
sbb
mov
pushf
lea
decb
int
ja
push
adc
pushf
mov
xorb
jbe
jnp
inc
fdiv
sub
data16
mov
push
shll
add
sbb
sbb
sub
rorb
mov
cmp
jge
int
mov
inc
mov
mov
push
jp
cwtl
add
sbb
mov
pushw
mov
sub
sbb
flds
or
fcoml
inc
xorl
das
inc
cwtl
int
pop
int
pop
jl
mov
lods
cmp
addr16
sbb
mov
add
xor
mov
ss
jg
add
movb
sbb
mov
push
sub
mov
sub
inc
add
mov
lret
in
or
call
ret
fs
icebp
sbb
sti
pop
js
addr16
roll
push
dec
call
xchg
add
xchg
push
mov
sbb
repnz
arpl
add
mov
add
imul
adc
jno
jns
mov
push
inc
repnz
cltd
xchg
sub
es
inc
mov
repnz
mov
insb
and
test
jmp
mov
frstor
add
fnstenv
mov
dec
xchg
sub
andb
xchg
add
faddl
insb
add
sahf
inc
cmpsl
and
out
xchg
xchg
or
jmp
dec
cltd
jo
int3
mov
pushf
in
rorb
mov
cmp
adc
xor
movsl
xchg
movsl
adc
fs
mov
push
sbb
fists
inc
aad
pusha
ss
push
test
xchg
cltd
or
cmp
bound
pop
push
pop
push
xchg
add
mov
add
sarl
scas
fcmovbe
jmp
test
inc
adc
repnz
test
mov
inc
mov
icebp
and
push
dec
cmp
cltd
push
repnz
cld
sbb
mov
push
in
sti
outsl
push
push
sahf
ffree
push
jns
pushf
je
jmp
fiaddl
mov
lock
xchg
cld
iret
add
xrelease
jmp
daa
cmpsl
lret
ds
sub
xchg
lahf
sub
mov
pop
aaa
cwtl
es
test
dec
fs
xlat
mov
xchg
out
insl
adc
inc
jno
aad
popf
jns
aad
aad
fcoml
imul
mov
loop
mov
aaa
pop
xor
pop
mov
jle
sbb
shlb
jbe
movl
push
push
leave
pop
pop
jbe
imul
add
nop
inc
inc
cltd
xchg
mov
pop
xchg
mov
and
pushf
sbb
lock
push
and
sarl
and
cmc
test
lods
lret
xor
dec
ret
mov
rcll
mov
pop
fisttpll
ret
lret
into
sub
in
add
nop
push
daa
mov
pushf
push
mov
push
push
int3
cmp
and
or
or
or
or
mov
jecxz
sub
cwtl
je
roll
push
test
mov
and
cli
and
ds
xor
xlat
mov
jg
sbb
mov
vmovapd
arpl
mov
mov
cmp
jecxz
enter
test
jno
lret
or
add
rcrl
mov
fsubs
mov
cli
cmpsb
sti
mov
mov
shrb
jno
in
int3
mov
push
mov
mov
sub
loope
mov
pop
in
lret
push
add
jo
stc
dec
lret
xchg
adcl
outsl
stc
jno
stc
dec
call
lods
test
cmp
outsb
data16
mov
loop
mov
adc
rorl
dec
add
push
fwait
lret
out
hlt
mov
es
mov
cmpsb
push
or
sbb
inc
xor
jp
push
jle
pop
rol
sbb
sub
out
mov
mov
dec
push
xchg
pop
adc
fldenv
sbb
lea
dec
push
movsb
lea
mov
add
add
lret
repz
imul
pop
das
std
push
stos
fwait
js
imulb
pop
js
mov
sbb
inc
xlat
cltd
jg
data16
sub
stos
les
cld
mov
call
ret
push
test
sbb
or
lods
pop
push
or
mov
lods
test
cltd
cld
cli
adc
repz
lods
movsl
sub
fldenv
shlb
mov
mov
js
xchg
cmp
sbb
xor
ret
jg
cmp
sarb
cltd
inc
lods
mov
and
adc
and
inc
mov
push
xor
out
sbb
pusha
iret
lahf
mov
fdivs
inc
outsb
ret
nop
inc
imul
pop
jb
gs
fistpl
int3
hlt
push
fstpl
out
push
enter
stc
dec
cld
cmp
fcoml
imul
adc
xor
mov
popf
lds
stos
outsl
fnstenv
xor
testl
push
push
jns
mov
lea
dec
bound
fdivrl
call
jnp
mov
lret
and
jge
mov
jno
mov
fnstsw
add
adc
mov
xor
scas
mov
enter
in
dec
adc
sarb
push
adc
jns
or
pop
jne
in
lds
adc
jp
push
add
xchg
ljmp
pop
adc
subb
sub
sbb
nop
mov
cli
pop
mov
add
out
push
test
call
mov
pop
mov
test
icebp
shrb
scas
jp
push
pop
cs
arpl
imul
mov
pop
insl
or
xchg
call
mov
mov
xchg
stc
in
mov
hlt
pop
cmp
push
push
je
pushf
lock
jge
sbb
push
scas
push
into
inc
push
in
orl
pop
cmp
cmp
xorb
mov
adc
loopne
jge
std
adc
sbb
add
cmp
xchg
jge
sbb
fnsave
into
and
arpl
sbb
out
add
xor
mov
pop
push
push
or
mov
jb
int3
call
test
add
jns
mov
mov
hlt
pop
sti
ss
jge
sub
daa
push
cmp
in
pop
iret
sbb
mov
xchg
in
bound
popa
adc
mov
sarb
arpl
add
sbb
jbe
xchg
mov
jle
into
pop
mov
das
hlt
jbe
lods
jno
adc
out
dec
mov
cmp
add
xor
mov
pop
jb
jp
shl
and
add
lret
cmp
dec
cmp
mov
jp
mov
dec
xchg
mov
cwtl
fsubrs
enter
jmp
xor
std
add
shll
repnz
movsl
xchg
ficomps
cmpsb
icebp
jns
pop
dec
fnstenv
js
push
lds
and
movsb
in
mov
add
sti
sbb
ret
sbb
cmp
pusha
aaa
sahf
jmp
sub
lock
sbb
dec
aaa
and
adc
mov
lahf
cmp
fimuls
lds
lret
mov
sahf
lods
dec
and
inc
mov
mov
xchg
push
jge
scas
cmp
xchg
inc
call
mov
mull
mov
aam
movsb
mov
xor
js
scas
shrb
ffree
stos
pushf
add
inc
mov
mov
aas
jmp
out
clc
sub
mov
inc
scas
or
dec
test
inc
sub
enter
jg
je
pop
scas
mov
out
or
in
lahf
jg
ret
adc
and
daa
jge
out
add
xchg
pop
outsl
add
jb
movsl
inc
xor
lahf
cmp
inc
int3
insb
xorb
lea
add
adc
fxam
popf
mov
sub
or
jb
fsub
push
stos
xchg
testl
push
adc
into
mov
je
push
add
or
adc
xor
outsb
or
je
adc
cwtl
xchg
push
push
adc
fstl
jmp
mull
and
idiv
jns
xchg
add
jge
ljmp
add
push
sub
int
and
push
ret
and
rclb
loope
rcll
mov
jmp
stc
jb
push
pop
cltd
jbe
cmp
rcr
xchg
std
js
add
je
jbe
mov
rol
sbb
pop
movl
loop
add
and
das
inc
in
dec
test
xchg
mov
or
ds
push
ja
data16
les
xchg
or
add
mov
ret
int
into
xchg
and
mov
or
ss
inc
push
outsb
mov
lret
in
mov
jle
rorl
stos
mov
das
push
ret
pop
xchg
push
mov
roll
mov
push
sub
stos
jbe
jns
ss
jae
sub
inc
pop
decl
outsl
mov
and
and
add
push
lahf
mov
sbb
aad
push
adc
sbb
mov
inc
inc
addr16
push
imul
or
loop
inc
dec
data16
sub
stos
pop
loop
pop
aam
sbbb
and
loopne,pt
cld
stc
jmp
fwait
and
cmpsl
jno
aaa
jnp
pop
clc
jae,pn
inc
push
inc
cmp
xchg
or
cmp
sbb
insl
xchg
or
or
bound
mov
pop
mov
cmc
sbb
lcall
loope
fs
aad
jne
pop
aad
arpl
lea
pop
mov
jo
xchg
mov
outsl
push
xor
sbb
filds
dec
jge
fstpl
test
and
xor
aaa
xchg
jo
sbbl
push
xorb
dec
sbb
in
popa
jo
das
push
fldt
sahf
push
sbb
cmp
cmc
insl
add
iret
in
sub
mov
enter
int
fisttps
push
or
enter
and
adc
push
mov
test
cmp
scas
inc
push
pop
jo
mov
vmwrite
inc
sub
xchg
clc
pop
pop
xor
aaa
adc
aam
mov
cmp
ds
stos
mov
mov
pop
xchg
inc
movsb
pop
xchg
arpl
adc
cmp
das
push
mov
inc
repz
cmp
or
inc
sahf
cmc
mov
ret
leave
imul
lods
test
pop
push
into
hlt
mov
fwait
pushf
test
fbld
sub
mov
and
arpl
inc
xor
je
adc
stos
mov
mov
and
mov
xor
sbb
pop
sbb
dec
pushf
and
sub
arpl
mul
mov
mov
sbb
aad
dec
or
stos
xor
jp
fcmovnb
adc
in
jae
jbe
mov
dec
adc
leave
mov
jnp
cmovl
fsubrp
inc
out
inc
jle
mov
push
pop
fisubl
sub
pop
sub
push
popf
bswap
hlt
lret
and
sub
js
xor
jl
push
mov
ret
decl
mov
xchg
stos
repz
ljmp
add
es
into
push
ret
adc
push
cmc
mov
hlt
sbb
pop
or
xor
jg
xchg
mov
mov
jecxz
jno
mov
jp
push
cltd
pop
out
add
fdivrl
addr16
lcall
xchg
push
mov
xor
mov
std
mov
fcmove
xchg
mov
out
sbb
inc
mov
dec
cmp
mov
mov
xor
mov
mov
xor
shl
mov
arpl
stos
push
arpl
dec
cmpsb
adc
inc
idivb
sub
jmp
or
mov
in
mov
mov
add
push
xor
pop
and
cltd
je
movsb
leave
and
add
cmp
shll
xchg
xchg
inc
jmp
and
outsl
das
push
or
add
jne
cmp
adc
enter
fldl
scas
sub
repz
out
push
cltd
testl
loop
clc
andb
sub
int3
dec
xor
push
movsb
or
repz
rcll
mov
cltd
outsl
cmp
sub
xor
mov
jg
push
dec
jecxz
mov
stc
push
sbb
fsubrp
xor
mov
and
repnz
inc
ficoms
test
mov
sbb
jbe
mov
sub
sahf
cmp
sbb
jo
jne
std
lea
xchg
shr
mov
mov
or
mov
and
or
or
cld
fcomps
cltd
in
aam
lahf
xchg
cvttps2pi
sub
and
push
jne
pusha
jg
packuswb
inc
paddusb
sub
je
rcr
pop
hlt
xor
je
jmp
gs
aad
loop
mov
mov
pop
out
out
fcmovb
fldenv
xor
xchg
inc
outsb
pop
inc
nop
ret
add
lods
js
jg
add
mov
mov
ljmp
push
add
sub
fwait
mov
cmc
jnp
sbb
pop
xor
les
lret
mov
repnz
mov
pop
jbe
sub
or
lcall
push
dec
add
pop
jbe
cmpsb
bound
loopne
popa
cmpsl
pop
mov
fsubs
outsl
mov
dec
xor
cld
out
mov
push
adc
loopne
ret
faddl
in
pop
cmpsl
add
xor
hlt
and
test
sub
test
adc
shl
aam
sub
int3
push
xchg
mov
daa
fsubr
sub
or
pop
jp
fistl
sub
hlt
in
sbb
andl
dec
push
adc
mov
xor
jbe
adcb
inc
cmpsb
sahf
push
jae
aaa
xor
arpl
mov
push
jo
adc
in
fstpt
mov
lcall
lods
addr16
cmpl
push
push
stos
push
jl
loope
xchg
pusha
inc
or
int3
aam
push
xchg
jmp
repnz
movsb
xchg
repnz
stos
dec
ja
pop
mov
adc
xchg
ja
movsl
fstpt
arpl
jo
jge
mov
int
repz
dec
inc
ja
xor
cmpb
cld
add
loopne
movl
push
push
fstl
adc
sbb
inc
insb
sub
or
int
icebp
jl
pop
add
xchg
movl
push
sub
mov
out
jno
fs
dec
cmp
jmp
in
jnp
pop
loope
mov
sub
push
xor
or
pop
adc
notb
int3
cmc
inc
pop
and
add
ds
ficompl
sbb
xchg
imul
jge
push
push
je
popf
xchg
sbb
cli
lods
pusha
cmp
cmp
fs
lret
dec
sub
xor
mov
push
lahf
in
test
popa
push
rcr
loopne
jge
aad
cmp
popf
lds
and
xchg
roll
mov
lret
in
pop
sub
fisttpll
xchg
jae
xchg
int
and
imulb
pop
push
pop
movsb
stos
pop
jne
cmpsl
cmp
xor
ret
rcr
call
out
and
push
mov
xchg
ja
insl
push
rclb
push
arpl
rolb
push
adc
fidivrl
scas
mov
add
int3
lcall
inc
idivb
add
inc
stos
adc
rcr
push
stos
mov
repz
call
nop
jnp
test
add
loope
lea
test
push
push
mov
xor
mov
lahf
mov
push
in
xchg
iret
ret
int
ret
push
scas
std
hlt
push
mov
cli
push
inc
xchg
add
into
dec
hlt
jp
jae
pusha
fstpl
mov
hlt
jbe
ficoml
es
adc
repz
rcll
dec
ss
push
pop
xor
mov
js
ss
pop
pop
inc
loopne
mov
push
lds
lods
jl
outsb
cmp
imul
ret
loope
and
aad
ljmp
popl
insb
negb
mov
leave
pop
mov
adc
dec
sarl
sbb
jl
ror
jge
lods
cltd
pminsw
stc
xchg
cli
enter
mov
cmc
and
lcall
dec
push
fistps
out
pop
mov
dec
mov
dec
loop
cmc
movsb
cmp
sbbl
xor
iret
inc
mov
leave
sahf
push
dec
adc
rep
adc
repnz
mov
test
mov
lods
daa
push
lret
sbb
cli
je
inc
outsl
not
jl
fmul
jecxz
sbb
ret
cmp
adc
mov
divps
insl
ret
push
cltd
mov
mov
jb,pt
fisubs
fisubrs
jnp
aaa
mov
mov
adc
popa
jecxz
push
inc
das
mulb
sub
aam
inc
push
push
inc
lods
lds
fwait
addl
fsubr
cmp
mov
loop
repnz
xlat
jns
lcall
fdivrs
aad
and
pop
popf
sbb
cmp
dec
mov
popa
push
fidivrs
shll
popf
mov
fidivrs
push
test
jecxz
cmp
out
jns
pop
adc
add
les
jp
rorb
popf
lret
xor
mov
mov
jl
xchg
push
mov
int
inc
and
jecxz
je
xor
out
push
shrl
rcl
sbb
rcr
dec
jne
adc
pop
sahf
jnp
insl
mov
xchg
aas
sub
xor
repz
in
test
loope
cmp
sbb
ror
jb
inc
lods
add
outsb
inc
dec
push
adc
loop
out
mov
adc
nop
das
arpl
jl
in
inc
rcrl
mov
adc
mov
imul
jge
add
lea
sti
or
mov
int3
outsl
scas
and
xor
out
sub
jg
cmc
mov
jns
testl
jo
pop
sub
movsl
sbb
subl
cs
sub
mov
call
adc
out
or
arpl
fstl
adc
ret
dec
push
adc
leave
adcb
imul
jl
cmp
scas
loopne
test
fdivr
and
ja
add
shll
fadds
dec
and
jno
adc
daa
xchg
cmp
std
inc
sub
push
imul
mov
adc
adc
insl
xor
ja
inc
sbb
xor
fwait
sub
scas
mov
out
inc
or
dec
aas
pop
mov
loop
xchg
pop
jns
mov
mov
mov
add
cmp
and
inc
xchg
dec
add
mov
lahf
orb
subl
mov
scas
mov
mov
sub
bnd
jg
push
popf
push
inc
int3
cmp
and
dec
or
mov
pop
pop
xchg
lret
dec
loope
fstl
fwait
orl
jb
xor
inc
in
cmp
jnp
inc
adc
add
arpl
rcll
js
dec
sub
leave
mov
jo
and
jmp
and
or
sbb
push
pushf
cmpl
mov
jae
adc
and
and
sub
mov
mov
lcall
sbb
jae
scas
cwtl
jp
stc
cwtd
and
push
dec
jmp
int
jns
addl
sbb
mov
call
imul
aas
mov
or
push
fstl
sub
cltd
insl
jmp
push
repnz
inc
stos
push
add
push
incb
adc
push
ret
lret
push
pop
xor
or
sub
push
mov
lods
push
mov
cwtl
dec
inc
push
daa
aad
cmp
xchg
xchg
ljmp
pop
or
mov
lcall
movsl
fidivrl
sub
sub
lcall
scas
jmp
add
pop
scas
jp
dec
inc
fidivs
out
jle
mov
jno
sub
stos
mov
daa
pop
fdivl
mov
test
mov
xchg
xchg
je
pop
sbbl
test
out
ret
dec
iret
and
enter
dec
dec
adc
inc
sti
push
sub
test
cmp
in
fdivp
mov
sbb
or
lods
and
add
adc
loopne
push
aas
shll
sbb
pusha
push
out
sbb
mov
mov
rorl
and
testb
into
pop
insb
mov
test
fimull
mov
pusha
pop
adc
adcb
sbb
loope
mov
mov
fnsave
ljmp
js
xor
xchg
sarb
sub
test
lods
xlat
test
out
push
push
or
adc
inc
xor
mov
pop
fldl
mov
rcll
adc
test
aad
push
js
pushl
lret
push
ljmp
xor
lods
inc
ret
pop
or
gs
ret
or
push
pop
inc
jno
lods
push
push
out
mov
jl
xchg
adc
movsb
loop
sub
push
and
mov
mov
adc
shlb
lea
adc
pop
sbb
xchg
push
lahf
dec
sub
mov
outsl
jp
in
mov
outsl
lea
mov
outsl
ret
cmp
sar
lods
in
test
sti
mov
adc
cs
aad
or
out
outsb
mov
andb
sbbb
sub
add
imul
addr16
out
aam
xor
stos
cli
push
add
cmp
ror
popf
lea
rorl
cmpsb
dec
sbb
iret
mov
push
adcb
cli
je
mov
adc
cmp
jne
dec
push
mov
adc
ret
fwait
xor
mov
sub
addr16
push
fs
pop
data16
cli
pushl
xor
mov
js
push
dec
pop
mov
in
imul
or
cmp
push
xor
adc
lods
fs
pop
in
adc
push
mov
xor
cmp
pop
and
push
fbld
cmpsb
add
cmc
xor
xor
lahf
mov
jg
loop
div
cmp
cs
and
call
ja
jae
cmp
out
mov
mov
sbb
rcr
daa
add
mov
int
dec
pop
outsl
mov
inc
jnp
out
xchg
outsl
pop
repz
out
inc
adc
fs
cmc
rcrb
shrb
and
mov
mov
inc
add
addr16
sbb
dec
movsl
mov
imul
pop
popf
and
mov
jle
inc
mov
jbe
jge
and
pop
mov
testb
dec
repz
ss
lea
xchg
cmp
pop
gs
icebp
push
pop
cmpsb
arpl
adc
adc
sbb
and
insl
add
or
stc
xchg
mov
mov
daa
shrl
ja
inc
ja
test
stc
xor
enter
rclb
push
xchg
mov
jmp
pop
or
int3
call
jecxz
cld
pop
pusha
add
stos
sbb
in
adc
nop
lret
std
push
int
fcmovbe
push
xchg
test
push
flds
in
or
das
lds
dec
add
xchg
aaa
sub
ljmp
or
cli
mov
xor
push
stos
aam
loopne
stc
lock
fwait
adc
int3
cltd
subl
or
pop
lods
mov
mov
push
sbb
sbb
rcrb
lret
mulb
cmp
sub
cmpb
adc
lods
jne
push
lea
cmp
cmp
xchg
dec
or
fwait
jle
test
adc
mov
adc
jbe
jge
pushl
lahf
xor
adc
jno
mov
add
sbb
cmp
inc
mov
dec
ds
add
jno
ss
fucomi
or
inc
jae
and
fsubs
ret
add
lods
mov
cmp
or
dec
mov
stos
insb
dec
in
fs
push
dec
mov
mov
mov
scas
mov
sub
add
lea
inc
pop
lods
lods
das
push
jae
mov
lea
and
imul
pop
cmp
mov
add
add
cmpsl
aad
push
mov
packsswb
xchg
jp
jnp
sahf
mov
push
loope
enter
inc
sbb
jo
scas
cmp
mov
jae
loope
xchg
cmp
es
sub
xchg
das
leave
dec
mov
inc
fcompl
jae
jl
inc
sub
xor
mov
lahf
mov
cltd
pop
dec
hlt
inc
pop
sbb
imul
filds
xchg
adc
push
fistl
xor
xor
test
xchg
cmpsl
nop
lret
sar
cmpsl
mov
mov
jp
pop
in
push
sahf
xchg
mov
push
or
jge
or
cmc
cmc
popf
insb
dec
roll
sarl
stos
cltd
mov
add
loope
jns
test
outsb
mov
xchg
ret
mov
jp
pop
jecxz
and
loope
sbb
add
xor
sarl
mov
outsl
pop
paddd
mov
dec
push
mov
sbb
jne
pop
int
dec
lcall
push
lcall
mov
in
jg
int3
mov
jp
bound
or
sub
popl
xor
cmp
outsw
jbe
rcrl
xor
scas
pop
jg
cmp
aaa
mov
cmp
jl
scas
daa
xchg
mov
or
lret
inc
adc
mov
cli
lcall
ds
jo
addr16
movsl
insb
cmp
push
xor
push
xor
loop
pop
or
mov
loope
jno
sbb
sarb
add
loope
daa
cmp
out
out
xchg
mov
xchg
and
cmp
fiadds
mov
xor
cltd
cli
scas
rcll
jnp
outsb
mov
mov
ficomps
pop
lods
cmp
inc
bnd
fcomp
imul
gs
in
sub
inc
sbb
nopl
xor
ljmp
mov
negl
add
sub
fdiv
les
cmp
aad
rorb
arpl
enter
jnp
outsb
enter
mov
push
xchg
jge
imul
iret
push
mov
dec
cmp
loope
incl
dec
aad
jne
sub
aam
sbb
lock
mulb
les
ret
mov
and
dec
push
and
pusha
jmp
sar
push
loop
ficoml
add
mov
sub
outsb
jne
pop
xchg
xor
nop
cmpb
inc
fimull
xchg
leavew
cltd
push
xchg
in
pop
mov
xchg
push
inc
out
dec
cmc
mov
mov
scas
in
push
aad
cmp
xchg
scas
cmp
lret
sub
nop
js
shll
repz
sti
lods
and
push
int3
add
shlb
popf
dec
xchg
pop
fisubl
sahf
cmp
loopne
out
fimull
sub
jmp
in
stc
repz
mov
push
pop
adc
in
test
daa
mov
movsb
int
jb
or
test
out
pushf
popf
or
dec
cmc
cltd
lea
push
and
and
clc
dec
jp
push
sbb
or
jl
mov
scas
jo
ss
pushf
dec
cmc
push
pop
in
xlat
mov
fsubrs
adc
hlt
sahf
out
or
insl
pop
cwtl
lds
mov
iret
jg
adc
js
ds
jno
aas
call
out
and
sbbb
cs
hlt
push
cmp
mov
cmpl
xchg
sub
sti
lahf
xchg
mov
call
adc
push
shrb
iret
outsl
push
xor
cltd
mov
jnp
push
cmp
xchg
dec
sbb
scas
mov
mov
and
xor
jp
out
enter
pop
mov
mov
outsl
or
jno
dec
sti
lock
mov
jmp
pop
push
fmull
jae
sub
push
cmc
pop
mov
inc
adc
and
pop
sub
cmpsb
xor
mov
cmp
iret
adc
mov
repnz
iret
push
shrb
pop
dec
add
cmpsl
or
push
mov
xlat
nop
ja
mov
push
pop
xlat
out
mov
cmp
push
les
cs
mov
xor
scas
inc
andl
outsb
insl
xchg
mov
push
rcll
andl
push
mov
sbbl
ljmp
sub
scas
push
inc
pop
xchg
addr16
jecxz
mov
ss
mov
add
push
imul
pop
push
repz
jb
inc
ss
cmp
movsl
test
hlt
push
loope
xchg
xor
test
xor
xor
pop
pop
mov
push
fistl
mov
pop
adc
sbb
pop
and
scas
inc
add
mov
pop
pop
cmp
jge
jg
pop
jne
inc
out
xchg
and
jne
loopne
outsl
xchg
inc
ret
not
shl
jno
xchg
into
divl
mov
test
outsb
bnd
xchg
scas
xchg
jns
xchg
dec
cmpsl
xchg
pushf
dec
dec
in
das
pushf
xchg
or
daa
xor
mov
dec
mov
out
int
lahf
pop
sbb
inc
push
pop
inc
adc
int3
out
sub
sub
and
mov
push
repnz
in
mov
in
rcrb
mov
rcl
aad
push
lret
pop
mov
aam
mov
sbb
sub
push
sbb
dec
test
add
dec
mov
std
mov
leave
adc
fcomps
in
jo
mov
shrl
ret
incb
and
jae
scas
dec
stos
dec
pop
xchg
jecxz
mov
pop
jo
xchg
mov
int3
jo
adc
inc
es
pop
int3
ja
adc
mov
stc
test
mov
out
sarb
sbb
roll
sub
lock
dec
repnz
mov
sahf
lods
lds
into
std
jge
jmp
mov
fldl
jne
pop
jae
xchg
mov
mov
sahf
or
jp
sbb
xlat
or
or
bts
xchg
cmpsb
clc
ja
es
xor
shl
daa
mov
lcall
mov
and
data16
in
sub
xchg
cld
jnp
es
ret
xchg
jle
neg
push
bound
cmp
jns
jne
lahf
or
test
cs
jbe
jg,pn
cmp
aaa
cli
push
dec
pop
outsb
xchg
int3
jns
adc
inc
ret
jecxz
mov
jge
sbb
push
dec
pusha
jnp
pop
push
gs
insb
pop
and
in
sti
into
sahf
mov
movsl
mov
lock
imul
push
arpl
imul
repnz
imul
xchg
cld
pop
mov
decb
dec
lods
fsubs
sub
and
test
dec
sbb
pop
or
nop
push
xchg
negb
pop
push
mov
adc
lret
sub
push
adc
xchg
pop
es
popa
insl
jae
lock
xchg
out
lds
test
ds
insb
jp
rorl
test
or
rorb
daa
insb
iret
mov
push
bound
push
mov
push
dec
and
pop
inc
fistps
mov
int
orb
push
aaa
mov
mov
out
jno
jl
xchg
outsb
xor
in
and
pop
mov
daa
imul
push
inc
jae
sub
mov
cmpsl
mov
xchg
je
sbb
sub
fisttpl
sbb
push
fldlg2
out
mov
sub
jg
mov
fwait
xchg
xchg
addr16
add
ja
pushf
addr16
leave
out
sub
in
mov
sahf
mov
mov
xor
rorl
mov
adcl
jl
fdivl
ja
iret
cmpsl
adc
pop
mov
jns
pop
cmpl
xor
mov
sub
cltd
cmpsl
add
cmc
lcall
je
pop
int3
mov
gs
mov
popa
adc
cmpsl
dec
jns
lods
rclb
mov
inc
faddl
aam
jmp
fisubrs
int
movsl
es
push
mov
jecxz
cmpsl
push
add
psubb
popf
mov
xchg
mov
les
sarb
push
push
repnz
pop
sub
mov
stos
cs
fistpll
fsubs
add
rcrb
push
or
loopne
lahf
xor
mov
push
js
loop
jp
sub
in
dec
pop
mov
es
inc
pop
xchg
cmp
imul
xor
mov
dec
push
imul
push
shlb
mov
fs
xor
inc
into
mov
mov
pop
jmp
lock
cltd
add
les
fwait
and
aaa
sbb
data16
movsb
lods
int3
fdivrp
xor
push
and
lcall
add
add
fists
xor
xchg
icebp
test
inc
repz
pop
sbb
sub
scas
inc
mov
sbb
jno
pop
sbb
sbb
test
or
ljmp
push
movsb
and
lods
jp
stos
aad
dec
inc
sbb
or
cmp
mov
shlb
mov
and
arpl
add
mov
dec
or
pop
sahf
popf
stos
ret
imulb
add
or
sub
sbb
sub
test
pop
push
jne
nop
or
imul
std
fwait
mov
cmp
cmp
sbb
data16
and
mov
imulb
pop
cmp
sarb
dec
repnz
fsubrp
add
and
rcrb
push
fwait
mov
pop
mov
arpl
adc
and
adc
test
adc
jge
ficoms
sti
ds
mov
cmp
aad
decb
sbbl
inc
gs
cmp
shll
add
mov
adc
mov
aaa
mov
test
add
mov
lods
jb
in
sub
std
leave
test
fcmovu
mov
sbb
sbb
mov
pop
mov
xor
ficoml
add
jb,pn
dec
popf
sti
cmp
mov
push
jae
arpl
xchg
sbb
adc
mov
bound
test
jo
sub
xor
scas
xchg
push
aaa
cmp
and
cltd
out
es
ret
or
sbb
test
mov
or
sub
int
mov
and
mov
dec
sbb
mov
in
dec
mov
movsb
jnp
inc
cmp
cwtl
pop
clc
incb
sbb
push
repz
shlb
test
incb
data16
cli
les
dec
add
sbb
jp
cltd
shrl
push
mov
pushf
mov
push
mov
js
addr16
pop
enter
jecxz
or
dec
xchg
lea
cmp
adc
dec
ret
negb
sar
mov
test
and
iret
rorb
out
or
in
lret
cmpsb
xchg
fidivrs
xchg
push
jbe
xor
lods
or
mov
dec
add
sbb
lcall
cmpsb
ret
push
aaa
test
adc
pop
mov
mov
fimuls
push
cli
dec
mov
cmp
xchg
push
and
inc
test
inc
in
jp
fcmovbe
xor
test
jle
jnp
sar
cwtl
out
sti
cmp
mov
jno
cld
rolb
jp
adc
xor
rolb
les
mov
adc
push
subl
mov
xlat
cmp
sbb
out
xchg
jge
adc
out
testl
dec
mov
jmp
xchg
dec
sbb
icebp
xlat
and
hlt
aas
jne
aam
andl
cli
mov
adc
mov
hlt
cmp
sbb
out
fstpt
mov
cmpsl
mov
adc
ss
test
adc
sub
push
mov
js
imul
xor
dec
inc
nop
inc
xchg
push
aam
es
lahf
jge
sub
fnstenv
sbb
fwait
fld
lcall
ret
inc
inc
xchg
push
movsl
aas
lea
xchg
pop
bound
shr
cmp
xchg
jmp
inc
xchg
add
adc
dec
popa
push
scas
ficompl
nop
test
gs
mov
icebp
in
sahf
cmp
jge
enter
adc
clc
xor
jb
pop
pop
mov
dec
inc
add
pcmpeqw
mov
pop
orb
xchg
out
dec
xor
or
cmp
lret
mov
test
repnz
cmpsl
push
push
adc
lods
dec
data16
push
popa
mov
pop
mov
adc
lods
xchg
sub
test
jge
data16
out
fadd
cmp
inc
jecxz
inc
and
jl
mov
jne
test
fwait
xor
lods
mov
add
push
aam
daa
in
cmp
sub
mov
adcl
outsl
cmp
mov
add
je
and
cld
imul
xlat
dec
xor
loop
push
orl
popa
xchg
loop
lea
mov
lret
xchg
mov
add
cmp
dec
inc
cmp
movsl
adc
jg
sbb
mov
xlat
aam
fmuls
stc
arpl
mov
scas
ljmp
mov
or
scas
cmp
push
mov
dec
mov
aas
xor
xchg
xor
sub
sbb
repnz
pop
adc
pop
mov
pop
shll
jae
pushf
lcall
or
jno
out
flds
shr
push
jl
mov
inc
cmp
jg
jle
xchg
jl
out
fdivrs
mov
and
sub
out
mov
mov
jp
test
stos
push
into
and
mov
mov
rcrb
mov
scas
outsb
xor
pop
jge
mov
mov
xor
dec
push
sub
stc
aas
and
mov
daa
je
scas
bound
rorb
addr16
loop
push
jo
xchg
inc
jo
in
push
jmp
ret
loop
dec
scas
jno
xchg
sti
test
loop
shll
cmp
xor
int3
ja
popa
cli
psadbw
cmp
sub
xor
test
jle
test
sub
leave
fstl
xchg
out
sbb
xchg
pop
bound
or
jb
jno
or
xchg
clc
mov
mov
xchg
ja
sub
push
push
or
cltd
scas
adc
push
arpl
xor
pop
movsl
sub
mov
call
cmc
int3
inc
sbb
jno
cmp
sub
cld
mov
gs
fldenv
adc
aas
jmp
push
fsubrl
scas
pusha
xchg
mov
notb
inc
and
mov
out
mov
mov
xchg
shlb
vpackuswb
movsl
push
cltd
mov
fsubs
bound
sbb
ljmp
fwait
adc
xchg
popa
or
loope
ja
shrb
adc
cmc
xor
dec
addr16
lret
sbbb
jmp
xor
sbb
imul
insb
rorl
xor
and
ret
int
jle
hlt
or
jnp
and
lock
jo
adc
dec
fwait
inc
lods
cmpsl
jmp
roll
add
dec
jae
aas
mov
add
mov
cmp
cli
xchg
bound
js
iret
xor
out
push
bnd
iret
dec
add
jecxz
bound
sub
outsb
fisubs
les
out
inc
cli
inc
mov
sbb
bound
ds
loope
leave
movsl
lods
jb
inc
jbe
mov
bound
insl
jl
int3
mov
mov
and
test
push
xchg
sahf
mov
dec
cs
jl
jmp
mov
sbbb
push
adc
or
mov
call
inc
outsl
add
push
test
pop
push
testl
lret
push
inc
jo
pop
jp
loop
adc
cmc
sbb
cmpsb
push
in
push
call
adc
cmp
popa
ret
iret
pop
mov
fisttpl
push
decl
loopne
adc
leave
stc
mov
outsl
push
rol
cmc
call
idivl
adc
enter
test
mov
in
pop
pop
dec
imul
gs
in
std
push
xchg
jl
mov
sbb
daa
push
insb
cmp
dec
dec
inc
in
scas
fldenv
jnp
pop
xchg
pop
cli
push
dec
mov
jns
push
ffreep
jecxz
cmp
mov
lret
lea
xchg
int3
pop
ret
les
dec
idivl
dec
pop
cmp
mov
xchg
lahf
leave
sbb
aaa
lcall
mov
popa
jle
xabort
ret
pop
js
push
daa
mov
mov
push
mov
add
xor
xchg
push
or
mov
cmpsl
mov
sub
daa
xchg
outsb
sti
pusha
bound
cmp
inc
jno
inc
pop
pop
popa
adc
loopne
or
out
mov
cs
test
cs
inc
cpuid
in
or
adc
xlat
push
mov
out
jb
adc
push
xor
fadds
fstl
cmp
ds
lret
and
icebp
xchg
out
imul
dec
imul
sbb
or
push
dec
mov
iret
mov
arpl
xchg
mov
pusha
mov
xchg
test
pop
and
enter
add
addr16
jo
jp
popf
adc
or
and
notb
or
in
call
inc
ljmp
jne
insb
inc
loope
mov
adcl
movsl
adcl
cli
xor
test
push
xchg
pop
leave
iret
das
mov
test
sti
mov
call
and
sbb
subl
mov
inc
jbe
ficomps
and
fs
mov
dec
les
mov
fcmovnbe
pop
mov
inc
scas
and
scas
addb
adc
movsl
fisubrs
sbb
and
mov
xchg
cld
inc
int3
les
gs
fwait
fs
jge
daa
dec
jo
dec
mov
and
mov
jmp
add
cmp
xchg
lcall
push
xchg
rolb
mov
imul
sub
rorl
jnp
mov
mov
adc
jmp
scas
inc
lcall
popf
stos
pop
div
dec
mov
lds
or
lret
xchg
dec
test
cmp
dec
push
pop
and
addr16
jmp
outsb
mov
dec
ja
loop
cmp
sahf
mov
out
jg
xchg
or
lock
or
cli
and
xchg
lods
inc
js
aad
aaa
imul
and
sub
cmc
pop
pop
popa
or
test
lcall
push
es
test
jno
push
jb
in
dec
ret
push
or
cmpsb
xor
pusha
sahf
pushf
or
aas
test
aas
sbb
and
and
loop
pop
push
jne
clc
push
jle
cwtl
mov
ja
repnz
xchg
xor
xorl
enter
iret
iret
inc
or
scas
aaa
sub
pop
cwtl
into
jo
stos
or
mov
stos
mov
sub
lcall
cmp
xchg
add
mov
mov
push
arpl
inc
shl
in
pop
into
cmp
test
and
add
sbb
lea
cli
xor
ljmp
or
sub
adc
cmp
enter
xchg
cmc
lods
leave
out
inc
scas
test
fucomp
cld
cmp
jge
xchg
gs
pop
test
cmp
and
in
adcb
les
inc
or
xchg
test
lret
pop
sub
adc
int3
and
adc
int3
mov
inc
mov
mov
negb
push
inc
lock
sub
pushf
ss
scas
scas
xor
int
adc
push
jg
in
cmp
jg
adc
mov
les
inc
mov
fs
mov
sbb
xchg
sbb
mov
insb
ret
and
nop
movsb
lret
xor
cmc
div
mov
out
mov
cmp
cltd
xchg
rcll
cmpsl
xchg
jbe
pop
xchg
lock
rcrb
push
pop
jecxz
subl
fs
fwait
pop
aam
mov
lcall
fs
sub
pop
cmpsl
cmp
push
sbb
cmp
or
subb
stc
mov
adc
rcrl
stc
xor
pushl
inc
dec
or
mov
scas
loope
push
mov
jle
sbb
test
sub
inc
in
loop
jg
je
adc
mov
addr16
and
mov
jge
imul
data16
xchg
movb
xchg
aam
push
and
add
insl
fcmove
xor
dec
push
rol
shrb
stc
sti
pop
or
and
mov
in
jg
sahf
aad
inc
jae
push
xor
rolb
jnp
fs
jg
pop
pusha
cltd
cli
fcmovbe
jl
mov
dec
aas
fcmove
jecxz
lret
jb
gs
mov
psllq
add
lods
xor
ret
lods
rclb
insb
arpl
mov
add
mov
pop
sub
add
dec
mov
test
ror
std
xchg
call
pop
push
pop
sar
imul
or
dec
cmp
pop
or
mov
or
xlat
sarb
stos
add
sbb
in
pusha
shl
push
mov
xor
xchg
sahf
shll
inc
xlat
cmp
aam
insl
popf
leave
sbb
in
jecxz
jb
jl
cmp
or
lea
enter
daa
loopne
pop
xor
scas
xchg
sub
xlat
mov
mov
aas
inc
test
test
sbb
dec
cltd
pop
ljmp
insl
and
sarl
movsb
mov
sbbb
lea
push
mov
inc
int
jg
lahf
inc
push
cmpsl
aas
push
add
mov
adc
cmp
inc
mov
xor
mov
lahf
ljmp
clc
hlt
xchg
iret
test
cmp
mov
pop
pop
int3
lret
jl
xor
and
xchg
mov
push
imulb
es
add
add
out
jne
cmp
dec
out
pop
adc
dec
inc
andb
bound
out
inc
and
cltd
push
dec
mov
imul
add
xchg
leave
add
cmp
loope
icebp
adc
movsb
add
test
test
sahf
mov
and
mov
add
outsl
xlat
push
sub
sub
push
clc
push
ficomps
xor
test
mov
cmpsb
aam
out
jae
xchg
out
mov
call
push
cwtl
ds
inc
leave
shlb
lods
scas
xchg
pop
shl
cmpsb
in
pop
inc
or
lock
mov
lds
pop
lahf
icebp
out
loop
pusha
in
leave
inc
in
dec
sbb
jl
fisttpll
cld
shl
push
sbbl
xchg
test
popf
aad
add
dec
jae
push
insb
xor
scas
subb
push
add
mov
adc
push
jnp
sahf
popa
jb
lea
idiv
xor
and
sub
xorb
pop
aas
mov
sahf
mov
cmc
ret
scas
and
sub
lea
jg
cmpsl
mov
cmp
inc
lahf
cmp
add
cs
dec
fnstsw
sub
pop
shll
mov
lahf
gs
inc
ret
mov
jno
inc
rolb
fcomp
sub
inc
icebp
in
imul
lods
jns
sub
iret
push
and
xchg
xor
ss
clc
mov
dec
fidivl
jo
or
loopne
xor
push
iret
repnz
incb
repz
xchg
sub
call
fmull
jnp
lods
cmpsl
repnz
popf
in
out
aaa
es
cmp
fildl
jbe
add
clc
or
call
mov
push
and
jb
or
mov
cmpsl
mov
lret
shrl
mov
lock
inc
pop
or
clc
shlb
push
or
mov
std
pop
adc
xlat
push
ss
lcall
dec
dec
inc
sbb
sub
mov
sahf
add
adc
mov
int3
or
int3
pop
pop
mov
push
add
or
push
jnp
mov
push
out
aaa
push
movsb
pop
call
adc
inc
int3
mov
out
aam
inc
loop
push
das
sub
xor
ret
mov
and
cmp
xor
int
std
mov
lret
xor
fstpl
jmp
jo
testb
frstor
js
sbb
xchg
sub
and
jp
in
add
or
aad
mov
das
push
popf
sarl
cmp
add
mov
ds
jmp
or
push
pop
jbe
inc
fsubs
mov
add
les
sbb
cmp
mov
and
gs
add
xchg
pop
insl
out
lods
arpl
lea
scas
mov
cmp
lret
loope
push
lods
cmpsl
subb
aas
insb
add
dec
pop
push
cmp
xchg
push
dec
cmp
int3
and
cmc
into
ret
mov
nop
cli
scas
unpckhps
out
adc
ja
xchg
call
xlat
jb
inc
inc
out
push
sbb
in
popf
sahf
lods
in
testl
jbe
and
lahf
pushf
xor
sbb
xchg
or
jo
jp
inc
inc
inc
in
outsl
rclb
sub
xor
or
push
scas
cmp
push
fldl
lock
call
inc
stos
pushf
arpl
and
into
int
adc
movsl
cwtl
cmp
mov
xchg
in
shl
data16
cmpsb
push
adc
mov
add
pop
mov
jmp
mov
stos
push
lods
jle
out
jno
cwtl
pop
jge
negb
and
popf
test
xchg
lds
add
adc
mov
clc
pop
shll
jl
mov
fdivrs
push
mov
push
lods
adc
sbb
jns
out
lea
popf
or
popf
xor
push
int
adc
arpl
jp
out
xchg
push
dec
push
push
pop
push
sub
push
rorb
mov
jbe
and
int3
sub
adc
or
push
pop
adc
out
lods
insl
adc
push
push
out
out
cmpsl
push
jb
inc
lds
cld
jb
mov
add
shrw
jno
insb
iret
in
sbb
xchg
popf
ja
mov
mov
lds
cmp
into
sbb
pop
push
scas
mov
sbb
jp
sbb
dec
sarb
pop
fs
cmp
lret
and
and
mov
stos
pop
inc
addr16
mov
inc
outsl
fldt
xchg
pop
jmp
push
aad
xchg
or
aas
decl
cwtl
or
mov
outsl
lds
ja
xor
sub
add
and
mov
ret
test
push
aam
mov
es
and
daa
leave
cmp
pop
fwait
jb
dec
ljmp
adc
in
rcrl
bound
std
sbb
movlps
lock
jne
jne
dec
orb
pushf
iret
jae
sbb
jb
add
push
xor
idiv
mov
mov
adc
mov
cmp
xor
inc
xor
fs
push
sbb
sub
cmp
pop
bound
add
jbe
notl
lds
shlb
rolb
les
dec
sub
aas
pop
add
pop
push
adc
jae
ljmp
mov
pop
and
test
ljmp
lret
out
sbb
pop
inc
les
add
pop
sbb
add
fs
push
inc
movsl
jecxz
adc
mov
lret
sbb
pop
das
sub
mov
add
orb
pop
pop
out
jne
clc
icebp
fwait
in
je
scas
arpl
mov
icebp
lds
aad
add
cmp
fistpl
xor
outsb
mov
aam
es
mov
mov
pop
mov
int3
clc
cwtl
dec
leave
or
push
daa
rcr
or
dec
mov
pushf
daa
enter
jp
jmp
fisttpll
test
and
push
mov
movsb
fildll
cmc
xchg
inc
adc
out
fildl
fs
dec
fldl
push
ds
cmp
jns
enter
jb
lods
adcb
fxch
fildll
mov
jns
shrl
jecxz
jae
xchg
mov
sub
sub
faddl
daa
push
mov
data16
sahf
xchg
and
icebp
mov
or
loop
adc
shlb
and
adc
ret
pcmpeqw
in
add
dec
and
lahf
movsb
xor
enter
popf
fsubs
push
shr
jg
push
fcoms
lret
test
lods
call
xorb
cmc
xor
and
push
xchg
lcall
or
mov
xchg
or
push
outsb
mov
push
xlat
aas
jecxz
or
je
push
push
addr16
pop
mov
push
xchg
cli
shlb
and
enter
fwait
mov
das
push
pop
jbe
jns
xchg
and
imul
xchg
sahf
mov
mov
push
mov
inc
cmp
ror
mov
movsb
xchg
adc
adc
in
popa
sub
subl
aam
mov
xor
test
aaa
lret
sbb
rcrl
push
fs
push
sub
cli
aas
shlb
add
adcb
cmp
pusha
in
xchg
jno
inc
push
outsb
out
shll
jg
sub
hlt
lea
cmp
mov
dec
in
add
cmp
xor
xor
mov
mov
sub
xor
shl
cmp
add
xlat
or
push
ss
out
arpl
outsl
push
cmp
mov
or
and
push
fadds
and
je
dec
mov
mov
inc
je
xchg
xor
cmpsl
xor
mov
mov
xchg
rol
aam
call
aas
in
cmp
push
repnz
mov
gs
dec
fdecstp
out
sbb
pop
inc
mov
pop
and
ret
hlt
xchg
lret
popl
add
inc
lret
repnz
xchg
xchg
sub
or
push
lods
sub
mov
nop
dec
sbb
inc
sub
outsl
push
scas
xor
mov
stos
les
push
xchg
fimuls
test
std
mov
lods
or
jae
xor
dec
push
mov
mov
cli
movsb
decb
pop
movsl
movsb
mov
ret
cmpb
lret
sbb
add
hlt
cmp
in
scas
popl
das
ror
imul
shrb
rol
adc
inc
stc
pusha
mov
das
mov
adc
pop
mov
dec
pop
push
mov
movsl
pop
test
mov
sbb
inc
aaa
movsl
int
and
sbb
jbe
xchg
divb
push
jne
pop
cltd
iret
sub
sbb
push
jnp
xlat
dec
xchg
sarl
inc
sahf
add
cmp
fsubrs
pop
jge
dec
cwtl
ret
mov
call
rclb
sar
push
daa
in
icebp
dec
shrb
add
scas
pusha
xor
adc
adc
or
adc
sbb
sbb
cltd
cmpsl
imul
cmpsb
jl
lcall
in
out
hlt
xor
cmc
fidivrl
lcall
cmp
pop
adc
inc
popf
out
pop
arpl
xchg
jp
lahf
cmpsb
addb
push
xor
mov
xchg
dec
add
xor
cli
mov
cld
mov
cmp
in
lea
sbb
cmc
sbb
add
imul
pop
push
int
add
iret
dec
fcmovbe
jg
call
out
push
push
mov
adc
rolb
xor
icebp
dec
mov
popa
push
in
mov
xchg
inc
imul
pop
repz
std
sbb
or
cmp
repz
push
js
or
xchg
mov
mov
or
scas
jb
cmp
mov
mov
aaa
dec
dec
mov
nop
mov
pop
cmp
fstl
outsl
out
cltd
or
scas
xchg
sub
es
aad
pop
pusha
inc
push
lock
mov
cltd
add
inc
jecxz
push
icebp
loop
jbe
or
lods
ljmp
mov
adcb
cmpb
mov
cmp
mov
push
cmp
push
rol
jl
repnz
in
sub
push
call
inc
sbb
fwait
sbb
sub
cmovp
fistl
push
xchg
add
fistl
cmp
pop
inc
cld
ret
adcb
dec
xor
loopne
dec
sti
cmp
pop
mov
lds
out
jo
sbb
adc
std
ljmp
sub
mov
sbb
add
add
je
mov
shlb
jb
shll
imul
pushf
cmpsl
sub
test
mov
add
push
jge
into
jmp
push
or
or
mov
repz
cmp
movhps
push
jae
int
stos
pop
pushf
dec
ss
inc
xor
adc
outsl
cmp
pop
cmpsb
std
pop
push
test
mov
cli
shrl
les
je
xor
push
mov
je
imul
stos
insl
sarb
lcall
xchg
frstor
xchg
stos
cltd
mov
fs
and
dec
pop
or
rclb
jge
ljmp
sbb
ds
jp
sub
ret
adc
mov
xchg
pcmpeqb
jne
insb
xchg
stc
inc
jmp
sbb
out
add
in
jmp
adc
dec
cmp
jne
mov
mov
jp
ljmp
pop
cmp
sub
arpl
and
not
push
lock
push
and
and
in
movsb
lcall
adc
movl
loopne
leave
sbb
arpl
xor
into
mov
pop
dec
daa
repz
out
dec
cmp
ljmp
in
js
sub
push
movsb
in
scas
mov
jae
popf
stos
sbb
stos
outsl
cwtl
dec
and
jne
mov
inc
sbb
cmpsb
pop
cmp
out
and
cmp
test
mov
add
lds
popa
int
xor
andb
lret
fcomps
jge
jns
lds
stc
mov
out
enter
jge
jne
out
loopne
int3
std
int3
push
aaa
cmpb
sbb
inc
push
sbb
lods
jp
cs
adc
test
push
mov
mov
out
loope
push
lret
mov
mov
inc
test
lods
nop
inc
inc
dec
jl
mov
sub
push
jae
jbe
addr16
ja
roll
push
adc
pop
lea
fnstenv
add
out
lods
and
sub
jo
xchg
push
adc
and
push
xlat
divl
push
mov
mov
icebp
sbb
rorl
lock
adc
inc
int3
cmpsl
mov
pusha
sbb
lea
dec
mov
inc
mov
add
daa
add
mov
push
mov
pushf
cmpsb
dec
setle
icebp
xchg
in
scas
imul
leave
xchg
iret
aas
repz
push
mov
lods
pop
lret
mov
xor
jl,pn
xchg
shll
rol
popa
jbe
enter
lods
and
cmpsl
xchg
stc
ret
incb
dec
jg
sub
ficoml
jle
mov
sub
adc
les
sar
test
aas
in
pop
je
aas
mov
into
sub
push
fnstenv
lock
jecxz
ret
mov
push
nop
arpl
lret
pop
mov
mov
push
cld
popa
sbb
dec
fistl
push
out
and
sbb
outsb
inc
xor
sbb
inc
mov
and
test
fwait
hlt
repz
add
pop
cmpsb
imul
outsb
xlat
or
dec
mov
add
enter
int3
cmp
and
call
sub
arpl
fs
cmpsb
movsb
lcall
mov
xor
adc
push
ret
leave
cmpsb
xchg
jnp
or
imul
push
mov
cmp
lcall
arpl
pop
inc
push
inc
adcl
jmp
arpl
xor
ret
add
imul
stos
por
sar
or
aad
xchg
lahf
jo
mov
mov
aas
int3
dec
jecxz
cmp
je
pop
paddsb
or
jo
mov
fistps
arpl
inc
xor
jg
aaa
orl
mov
jbe
stos
jge
cmp
ret
loop
jnp
mov
cmpsl
dec
sahf
bnd
mov
add
jecxz
push
and
dec
in
jno
jnp
cmp
std
push
scas
push
loopne
lcall
in
out
dec
pop
or
testl
lock
ds
inc
loope
cmpsl
in
ljmp
insl
mov
inc
sbb
cmc
cmp
sub
jge
push
rcrb
sub
mov
cmp
js
push
mov
inc
dec
sahf
jl
adc
out
inc
lret
arpl
lock
xor
xchg
mov
sbb
xchg
ja
rcl
enter
push
out
xor
test
movsb
adc
push
adc
sub
cmp
push
dec
sahf
scas
push
test
fdivl
or
jne
mov
mov
mov
fadds
cs
xchg
or
add
push
jecxz
dec
sub
rolb
les
cmpb
lds
cmp
jge
sbb
insl
dec
or
jge
stc
loop
push
pop
mov
cmp
pop
sub
stc
mov
negl
roll
dec
mov
imul
add
pop
sub
sub
pop
cmp
inc
push
std
out
gs
inc
cmp
repz
es
dec
repnz
mov
cmpsl
inc
and
add
in
push
pop
pop
lret
out
icebp
repz
in
fwait
jne
sbb
imul
dec
xchg
popf
fdivrl
add
les
fstps
int3
cltd
mov
pop
inc
inc
out
test
stos
jmp
xlat
lahf
push
push
jbe
lret
cld
cwtl
and
fcomp
xchg
fstpt
pop
mov
xor
pop
sub
cmp
lcall
adc
adc
movsl
dec
jle
sbb
mov
dec
in
jbe
idivb
xlat
push
imul
sub
test
dec
mov
mov
std
test
sbb
ja
fistl
jae
sarb
xchg
inc
sub
movsl
push
pop
inc
insl
mov
out
or
adcl
pop
sbbl
or
add
aad
adc
fidivrs
xchg
pop
and
and
jae
shlb
fisttpll
xchg
cmp
mov
dec
dec
push
shlb
and
push
mov
pop
cmp
pop
dec
cmpsl
outsl
sahf
gs
pop
mov
popf
mov
pusha
sbb
addr16
cmp
jno
mov
scas
outsl
int3
mov
push
inc
out
call
loopw
add
sbb
pusha
and
ret
repnz
mov
or
jp
test
addr16
in
jb
push
into
in
sbb
cwtl
push
ja
jge
xchg
movsl
out
sub
fbld
js
fsubl
stos
mov
mov
mov
push
mov
hlt
out
sub
pop
lds
xor
inc
ror
aad
orps
dec
ficoml
es
in
push
cmp
cmpsb
lds
mov
aaa
mov
das
les
mov
sbb
sub
out
mov
jnp
jno
mov
lock
mov
cmp
out
insb
loop
push
or
cmpsl
lahf
mov
dec
dec
push
mov
mov
xchg
pop
rorl
data16
cld
sarb
push
lcall
divb
iret
sub
mov
loop
pop
cmpb
xchg
xchg
shrb
scas
jno
mov
or
shr
jno
cmpsb
xchg
pop
test
xor
mov
scas
fisttps
cli
jno
mov
icebp
cmp
mov
sti
inc
adc
pop
mov
js
hlt
testl
pushf
mov
fs
adc
adc
pop
mov
cmc
out
push
xchg
dec
or
dec
adc
xor
or
xlat
xor
cmp
lds
neg
xchg
push
addb
imul
repnz
jb
sbb
and
mov
push
and
cmpsb
das
push
dec
mul
inc
xor
cmc
into
add
test
sti
and
outsl
sbb
lahf
xchg
pop
daa
hlt
fstpl
or
cmp
sbb
in
pop
xor
inc
pop
call
mov
xor
int3
push
icebp
movsb
add
clc
mov
iret
dec
push
mov
dec
push
and
ret
iret
jg
jle
lret
xchg
je
shl
arpl
jb
or
scas
mov
inc
and
mov
add
push
pop
xor
or
insl
call
cwtl
loopne
sub
inc
inc
mov
push
push
rcrl
dec
sub
cmp
sti
mov
fisubs
insb
out
les
sbb
cwtl
pop
gs
dec
popf
clc
add
mov
mov
stos
js
ret
data16
cmc
push
xchg
dec
insb
jno
and
push
test
xchg
and
dec
and
mov
cmpsl
mov
in
sub
mov
sub
push
cmp
push
or
ret
xchg
fldl
ds
mov
or
cld
shll
pop
hlt
mov
std
mov
out
daa
pop
shlb
popa
xchg
call
push
pop
int
ficompl
xchg
xchg
push
push
daa
cs
mov
cmp
mov
mov
sbb
push
inc
inc
sysenter
out
cmc
jne
mov
mov
xchg
repz
test
stos
sbb
push
pop
sti
jl
or
sub
rolb
push
xchg
mov
mov
mov
cmp
ret
push
inc
in
mov
outsl
mov
inc
adc
mov
and
sbb
sahf
xchg
adcb
pop
sub
aam
inc
adc
cld
cmpl
mov
cmc
ss
cmc
cmp
pop
js
xchg
scas
aas
imul
es
xchg
push
cmc
xorb
push
nop
adc
push
dec
jp
fcomp
adc
xor
fsqrt
dec
sub
lea
leave
and
or
mov
push
push
dec
clc
xor
push
pusha
adc
lea
and
adc
sti
jge
jns
ljmp
fiaddl
testl
in
out
pusha
xchg
xchg
add
push
nop
leave
sub
adc
idivb
jmp
xchg
jno
mov
ficoml
repz
and
pop
mov
outsb
loopne
fstps
insl
inc
xor
pop
and
movsb
and
sbb
movsl
jp
push
cmpsb
in
aam
ljmp
addr16
sbb
pop
int3
psubw
fs
xchg
aas
mov
push
mov
cmp
and
push
int
insb
xchg
mov
pop
add
jns
aam
ret
mov
dec
jp
stc
scas
mov
mov
sbb
out
pop
inc
into
ret
cmp
and
lahf
lcall
pop
arpl
add
gs
ror
jp
mov
pop
out
xchg
adc
xchg
mov
jb
adc
orb
sub
pop
mov
mov
test
imul
or
xchg
lods
push
adc
mov
mov
lret
addr16
mov
sbb
cli
pop
jne
ds
popf
pop
call
jo
je
jbe
adc
sub
pavgb
mov
dec
les
or
push
outsl
sbb
dec
cltd
mov
xor
ljmp
push
lea
jmp
dec
movsl
incb
dec
repnz
shrb
pop
fisttpl
pop
cmpsl
ret
jmp
rcr
or
jmp
adc
xlat
xchg
jns
push
cmc
mov
jg
mov
sub
and
mov
mov
into
gs
out
imul
rol
lcall
jae
jae
mov
aas
lods
lods
pop
jp
ret
test
xchg
test
ror
in
pop
popf
popf
inc
popa
and
pop
movl
xchg
jle
dec
mov
dec
jae
inc
push
pop
mov
je
ja
push
rcl
into
jbe
dec
cmp
push
dec
sub
popl
dec
out
mov
subl
into
stc
xchg
mov
xchg
scas
fdivr
lods
mov
adc
mov
fidivs
push
jp
cmp
aad
adc
push
mov
sbb
mov
adc
xor
fnsave
ret
push
rclb
or
call
dec
sub
loope
out
mov
in
rcrl
ja
mov
and
bound
repz
xchg
fmuls
fadds
push
adc
fsub
addr16
ljmp
insl
popf
stc
pop
mov
pop
ficomps
call
push
add
inc
add
dec
pop
enter
mov
adcb
lds
adc
push
jecxz
jae
scas
push
inc
cmc
bound
dec
or
ja
mov
clc
scas
rorl
stos
cmp
fmull
push
hlt
add
aad
test
nop
das
arpl
pop
pushf
adc
loope
mov
and
xchg
mov
cmp
fcompp
adc
push
lds
pop
jmp
dec
xchg
test
jno
lahf
ret
les
and
mov
int
movsl
sar
dec
out
aad
popf
inc
inc
jne
pop
push
pop
clc
jmp
lcall
iret
mov
inc
xor
sti
sbb
hlt
shl
sti
xchg
inc
inc
sarb
sub
or
repnz
test
xlat
sub
movsl
insl
lock
mov
lahf
mov
imul
int3
jmp
add
test
out
mov
iret
push
ret
cwtl
sub
mov
shll
push
arpl
jmp
fcompl
jl
pop
and
mov
or
sub
ljmp
ficompl
cmpsl
stc
inc
stos
addr16
bound
jl
push
cmp
cmc
cmp
clc
mov
outsl
mov
mov
pop
push
dec
fistpll
cmpsb
add
jg
cmpsb
jp
jae
or
push
iret
mov
inc
aam
es
xor
incl
or
mov
cmp
add
aam
insb
cmp
inc
in
cltd
or
jecxz
lcall
daa
push
fadds
lcall
jo
sbbb
out
enter
or
popa
mov
int3
and
shl
or
loop
scas
aam
icebp
xchg
icebp
push
repz
ss
mov
jmp
test
mov
dec
push
ss
pusha
jmp
cmp
movsb
mov
push
sub
mov
repnz
add
sbb
dec
pop
lahf
push
jg
inc
les
mov
mov
xor
mov
std
mov
push
sub
insb
push
sbb
pop
ret
imul
xor
sub
jbe
ljmp
adc
in
xorl
or
je
add
xchg
push
test
adc
aaa
mov
mov
and
mov
jae
pop
outsb
jle
lcall
jecxz
shl
sub
mov
movsb
sahf
pop
jecxz
jl
pushf
ljmp
xor
mov
sbb
ret
pop
fisttpl
mov
cltd
stos
xchg
cltd
pop
dec
dec
cmp
adcb
ss
mov
stos
rcll
orl
test
test
enter
shrb
lock
jo
enter
mov
mov
lods
es
inc
xchg
cmp
xchg
dec
lahf
sub
repnz
inc
sarl
push
ficoms
cmp
push
cld
das
mov
int3
mov
stos
rcrl
aad
mov
xchg
into
push
jno
jge
inc
cmpsb
addr16
cmpsl
out
mov
inc
mov
out
and
sbb
js
sti
pop
mov
or
daa
enter
mov
jle
xor
into
fwait
shll
out
push
mov
je
jne
fidivrs
test
adcb
movsb
aam
sub
add
push
in
add
lcall
stos
ja
negb
or
xchg
add
std
or
cli
and
loope
push
cmc
icebp
or
and
and
shll
idiv
mov
xor
and
fs
aad
rorb
mov
daa
xorl
jae
mov
cli
push
dec
push
jl
dec
xlat
sbb
sub
sti
or
aas
enter
and
inc
int3
dec
lret
sbb
gs
fisubs
ljmp
aam
shrb
adc
push
insl
adc
pop
rol
push
stos
ljmp
and
call
rolb
or
adc
adc
cmp
fadd
gs
push
jg
dec
dec
vaddsd
jmp
lock
stc
ss
ficompl
movsl
xchg
cwtl
repnz
adc
fisubrl
std
mov
mov
clc
movsl
sbbb
loopnew
mov
enter
sbb
dec
fwait
daa
mulb
fwait
adc
test
jne
and
inc
jg
inc
mov
mov
dec
or
push
sub
cmp
lret
mul
pop
addr16
repnz
loopne
xchg
rcrb
repz
xchg
int
and
xchg
sbb
dec
ret
cmc
jb
or
mov
fbld
and
in
or
sub
xchg
bound
and
adc
inc
loop
jle
outsl
inc
lret
xor
rol
xor
test
xor
sbb
jle
jle
xor
adc
dec
mov
dec
les
dec
push
cmp
call
and
cmp
in
sahf
test
aad
roll
mov
pop
dec
or
ja
cmp
xor
outsl
clc
loope
sub
inc
clc
pop
jl
adc
rorb
out
aam
scas
lret
and
xchg
and
mov
adc
test
xor
jmp
push
cmp
js
adc
xor
iret
dec
add
mov
mov
fbstp
jnp
insl
fs
insl
mov
das
neg
push
dec
imul
jne
mov
test
jmp
repz
dec
data16
cltd
mov
insl
sub
lock
scas
mov
xchg
loopne
incl
xorl
pop
orl
xchg
adc
and
jno
adc
ffreep
or
or
cmp
test
jnp
mov
push
ljmp
insl
sarl
jnp
lcall
mov
jne
jo
movl
xor
int3
sbb
or
xor
pop
stos
dec
pop
mov
mov
pop
xchg
add
shll
xchg
inc
lds
mov
push
addl
sbb
sub
inc
or
sbb
mov
push
jae
inc
dec
lahf
ret
xor
loop
hlt
and
xor
jb
fs
movsl
dec
test
mov
sbb
outsb
jnp
adc
stos
jno
clc
cmp
xchg
loopne
adc
fs
test
repz
sarl
insb
sbb
jle
into
lods
in
rcrb
fimull
dec
stos
outsl
or
pusha
cmp
sbb
inc
mov
mov
mov
scas
or
sbb
les
andl
jecxz
add
jle
jmp
jae
add
push
sahf
pop
loopne
psubq
cmpsb
cmc
hlt
xchg
jge
sub
mov
std
sar
push
jecxz
pop
jp
cmp
sbb
test
sub
lock
dec
insl
sub
push
repnz
cmp
es
and
loope
push
sarl
pushf
stos
inc
pop
cltd
or
mov
cwtl
inc
outsb
adc
ljmp
pslld
sub
mov
sbb
mov
mov
popa
mov
sbb
xor
jo
sub
lret
pop
or
ljmp
fisttpll
mov
mov
sub
fs
loopne
push
mov
bound
imul
and
test
lods
mov
jo
pandn
add
hlt
clc
jmp
inc
lock
movsl
lret
cmp
je
cli
sbb
jmp
sub
pop
int3
aaa
push
dec
mov
fstpl
push
mov
mov
enter
pop
ret
jecxz
pop
xchg
jae
cwtl
pusha
xchg
dec
mov
mov
dec
add
dec
lahf
jg
mov
xchg
int
lret
sbb
push
hlt
push
test
mov
fbld
xchg
pop
or
test
dec
xor
push
movsb
add
faddp
mov
sub
gs
ds
nop
mov
inc
ja
adc
repnz
les
icebp
xor
sub
neg
sbb
xchg
std
addr16
test
jbe
fdivrl
lods
pop
cmp
addr16
or
sub
mov
jns
cmc
inc
cmp
shr
inc
ret
mov
pusha
lahf
stc
bound
pop
mov
ja
and
mov
pop
fs
cltd
and
lcall
sub
xchg
dec
push
lret
jmp
jns
mov
inc
jns
filds
mov
out
mov
push
jne
ja
nop
jmp
ljmp
inc
sbb
cmp
add
call
aas
call
out
push
test
or
ficompl
gs
push
cltd
movsl
in
clc
call
sbb
clc
in
xchg
cmpl
jno
adc
dec
insl
sbb
cwtl
mov
fnstsw
aaa
mov
iret
or
mov
imul
fdivrl
push
xchg
aad
hlt
rol
sbb
lret
fwait
dec
dec
aas
mov
data16
xchg
std
push
push
sbb
mov
repnz
mov
ret
mov
std
lret
test
and
and
xor
pop
or
fimuls
movsl
sub
push
xor
mov
xchg
lcall
scas
and
jb
jo
stos
push
dec
sahf
sbb
rorl
dec
cmp
sbb
dec
cmpsl
cmp
sti
jnp
mov
lock
and
lret
mov
inc
sahf
mov
dec
mov
xorb
divb
mov
movsl
lods
stos
sub
or
push
jg
pop
dec
jno
loope
sbb
add
sub
pop
inc
mov
and
adc
stc
loopne
xchg
rorb
inc
mov
outsl
lods
push
adc
xor
mov
pusha
cwtl
push
xchg
fists
or
dec
daa
xchg
loopne
sub
mov
push
mov
lods
out
ret
sbb
jnp
cld
cmp
rorb
sarl
cmp
leave
ret
std
movsb
out
sbb
js
setg
jmp
enter
mov
loop
call
ret
roll
test
rcrb
pushf
or
mov
stos
xchg
es
hlt
loop
xchg
movups
jg
cli
imul
sbb
repnz
or
adc
ficoml
cs
fdiv
mov
add
mov
xor
ds
aaa
pushf
xor
add
dec
add
sub
fisubrl
and
ss
jne
cmp
xchg
jno
icebp
adc
xchg
adc
loop
ror
pop
jne
roll
inc
sbb
loope
adc
jo
mov
loopne
jbe
sub
aad
push
add
movsb
pop
daa
pop
scas
and
adc
mov
sbbl
out
loop
jne
dec
sub
imul
shrb
mov
or
aaa
movsl
lret
xchg
jg
cltd
adcl
add
lahf
pop
push
sbb
mov
add
cmc
imul
aad
sub
subl
push
in
cmp
xchg
and
mov
jmp
out
pop
adc
and
jo
xchg
push
and
std
mov
repz
jmp
jae
xor
popa
test
inc
jmp
ss
dec
push
jns
mov
mov
repnz
popf
lock
and
data16
dec
jmp
int3
out
jnp
adc
out
push
jae
xor
mov
outsl
aam
xor
into
add
inc
cmp
xchg
out
mov
dec
jl
push
jecxz
pop
pop
cmp
jp
into
mov
add
lds
mov
lea
or
inc
inc
outsl
mov
and
int3
shlb
adc
daa
mov
cmpsb
aas
testl
pop
jp,pn
push
movsb
xchg
mov
lret
aas
in
cmpl
xchg
ficompl
sub
divb
scas
outsl
es
xor
out
fldl
adc
dec
push
mov
test
aad
mov
xchg
nop
and
pusha
xchg
fistl
push
lock
mov
out
jo
inc
sbb
or
xor
cmpsl
jg
in
inc
pop
adc
pop
nop
div
xchg
adc
out
inc
dec
cmp
sub
es
shrb
add
push
subl
lahf
adc
loope
dec
scas
mov
jg
bound
jnp,pt
mov
inc
testb
inc
sub
jae
mov
bound
jns
lds
jmp
push
jg
popf
cmc
mov
addr16
xchg
je
mov
mov
jge
mov
mov
fists
and
xor
cmp
fidivs
adc
cltd
lret
push
sub
sub
dec
fnstcw
mov
xor
and
pusha
xor
cwtl
nop
cmp
or
pop
shrb
cmp
fwait
sub
adc
sahf
iret
cmp
mov
mov
xor
mov
leave
or
in
test
scas
test
pop
inc
add
aaa
mov
insl
fmul
xor
nop
ficoms
mov
rcrl
lret
movsl
outsb
dec
mov
pusha
cmc
movsb
cld
push
and
or
push
mov
jnp
aad
ret
stc
mov
adc
insl
pop
gs
or
insl
out
xor
pop
fdivrs
pusha
orl
repnz
dec
xchg
sbb
out
mov
lret
pop
sahf
pop
dec
stc
mov
popf
lds
mov
sahf
int
and
xchg
and
hlt
sbb
repnz
mov
and
add
pop
dec
xor
cld
loopne
lcall
push
jns
and
inc
mov
and
out
cmc
xchg
stos
ret
mov
cmp
and
xlat
hlt
jge
jno
xchg
daa
stos
fisttpll
mov
mov
sti
xchg
in
daa
sub
push
pushl
lret
imul
or
pop
lcall
sbb
sub
cmp
add
imul
addl
adc
dec
leave
outsb
push
sub
mov
scas
add
lret
mov
loop
loopne
das
fidivrs
mov
pop
xchg
xchg
or
shll
cs
dec
repz
adc
cmpb
mov
mov
imul
adc
jecxz
cmp
fwait
sbb
test
imul
jne
rcll
inc
add
insl
sbb
push
cwtl
xchg
xor
jo
pop
sub
pop
push
notl
rclb
xchg
sub
popa
xor
test
xchg
push
in
arpl
ds
stos
cltd
movsl
inc
insl
mov
movzwl
stc
push
mov
dec
mov
mov
dec
movsl
hlt
adc
aas
pushf
in
fstpl
cmpps
pop
jo
in
cmp
adc
xor
leave
test
pop
mov
gs
adc
add
mov
daa
add
jmp
out
fnstenvs
mov
xchg
cmp
ret
stos
mov
add
in
xchg
rcrb
or
push
cmp
and
sbb
stc
push
bound
cmp
popa
mov
lret
jge
push
fnsave
adc
fs
imul
out
mov
inc
jno
sbb
xor
xchg
or
adc
push
in
das
xor
arpl
or
js
fmull
cmp
adc
cmp
cld
ss
cld
pop
jmp
ljmp
outsb
dec
cld
pop
pop
in
inc
addr16
mov
gs
mov
out
push
cmp
out
out
loopne
lahf
rcr
adc
xchg
stc
stc
sbb
aaa
jmp
repnz
stos
push
cmp
rolb
mov
outsl
aad
in
xchg
mov
out
xorb
cld
enter
jmp
js
xchg
sti
popa
cmp
push
jno
and
cmp
test
mov
push
mov
ljmp
movsl
fists
push
xor
in
push
xchg
mov
jbe
cmpsl
in
push
jne
mov
xor
rorb
andl
jb
or
pop
rcl
mov
adc
jl
pusha
inc
stos
add
leave
out
fidivs
mov
push
in
mov
popa
inc
icebp
or
loope
enter
stc
andl
or
pop
ss
sbb
mov
xor
xchg
xchg
loope
testb
lock
xor
sbb
int
imul
shr
loopne
movsb
and
repnz
pop
in
imul
push
mov
mov
subl
dec
test
int
clc
inc
sahf
xchg
push
outsl
xchg
pusha
fwait
push
fidivs
imul
jp
xor
out
and
daa
sbb
je
jo
mov
test
jecxz
movsl
fs
mov
mov
je
pop
mov
das
mov
xchg
add
cmpsl
les
loopne
fcomp
sub
aaa
mov
inc
jns
sbb
jmp
fsubrl
xchg
jp
sbb
sbb
inc
sub
sub
or
push
icebp
repz
dec
rcll
jno
jbe
stos
ret
sti
inc
jp
adc
and
inc
jo
mov
xor
nop
sbb
or
loopne
cmc
data16
fs
scas
mov
test
adc
aam
leave
push
jle
jb
pushf
das
loopne
in
xchg
push
jo
mov
lcall
jmp
movsb
jp
loope
mov
fimuls
mov
adcb
lahf
xorb
mov
fadds
or
int
icebp
xlat
push
sub
xchg
lods
xchg
jno
mov
xchg
push
sahf
adc
mov
sub
xchg
xchg
clc
cmc
iret
test
test
pop
cmpl
mov
jo
addr16
adc
cmp
mov
clc
push
insb
and
push
in
fwait
and
cmp
dec
mov
cs
jo
mov
lcall
cmp
dec
xorb
stos
xchg
jp
xchg
lret
push
push
inc
pop
and
jnp
or
jp
insb
test
icebp
cmpsl
or
sbb
scas
mov
inc
add
fnstcw
cmp
sbb
add
adc
movsb
add
ds
add
pop
push
add
adc
jb
mov
push
fmull
or
mov
add
arpl
adcb
mov
or
mov
jmp
or
lock
aam
iret
enter
push
das
enter
sbb
cmpsl
sbb
jmp
cld
jecxz
adc
xlat
mov
ja
andl
and
nopl
inc
xlat
sbb
stc
pop
mov
out
divl
pusha
aad
stos
cmp
stc
das
jo
iret
mov
or
mov
push
cmp
sbb
mov
sarl
add
add
inc
mov
pusha
fst
xchg
add
xor
adcb
mov
cwtl
fsubl
cmpb
jg
lcall
movsb
insl
rcll
xchg
jmp
bound
jge
ret
sbb
inc
mov
jo
iret
cmp
fistps
out
inc
xor
ja
repz
sbb
and
or
jle
mov
icebp
cmp
leave
out
mov
adc
push
pop
movl
add
cmp
inc
dec
or
adc
xor
insb
mov
xchg
int
fucomp
cmp
int3
stc
outsb
inc
popa
lret
in
not
xchg
jg
int3
dec
cmp
push
xchg
mov
mov
pop
mov
or
fwait
hlt
push
mov
stos
in
cld
sub
imul
mov
cmc
jae
sub
mov
aaa
lods
lcall
xor
test
cmpsb
mov
and
cmpsb
rorl
sbb
xchg
fadds
push
sbb
pop
xor
ljmp
pushf
mov
imul
leave
xor
fcoms
add
sbb
ret
cmc
les
js
sub
mov
loope
out
enter
les
fidivl
fucomip
push
and
data16
ds
ds
lds
out
rorb
int
jl
movsl
inc
push
adc
jge
cltd
or
mov
jo
mov
dec
adc
aad
mov
addl
iret
jae
jno
pop
xor
jnp
xchg
sti
popa
sub
mov
loope
bound
pop
cmp
push
jle
repz
lds
iret
loopne
jbe
loop
push
inc
pop
cs
xchg
add
lea
inc
add
enter
lcall
and
dec
aaa
jge
add
xchg
pop
mov
test
orb
add
ss
fsubr
cli
call
jae
fldl2e
sbb
lods
das
test
lea
mov
pop
mov
js
cmp
sbb
jno
sub
jno
paddusw
cs
mov
outsb
sub
enter
arpl
out
movl
ljmp
jl
leave
cmp
mov
jbe
aaa
out
stc
leave
iret
test
push
mov
lods
xor
pop
outsl
andl
add
inc
call
mov
popf
loopne
in
cld
ja
js
xchg
testl
shrl
mov
jmp
outsb
or
bound
xchg
or
das
fs
jns
cmpsb
aad
jnp
push
sub
idivl
aam
ret
int
or
call
mov
cmpsb
adc
mov
stos
mov
push
ret
adc
std
cs
loopne
and
cmp
xchg
sub
add
andl
xchg
xchg
cvtps2pi
xor
int
nop
repnz
or
and
inc
in
jbe
es
mov
and
dec
movsb
add
test
les
and
fstpt
lods
cmp
xor
push
aaa
aam
push
lds
inc
inc
cmp
lahf
xchg
int3
ds
lock
cmp
sub
lcall
lret
sbb
outsb
das
sbb
dec
mov
push
and
mov
xor
pop
xor
adc
or
and
lock
ljmp
pop
loopne
dec
jbe
lock
cmp
mov
mov
dec
jp
stos
mov
lret
jno
aas
cmp
test
fistps
mov
push
xchg
fidivrl
pop
push
sbb
mov
mov
mov
test
scas
push
fisubl
xor
sub
aas
mov
movsb
addl
pop
mov
pop
lret
and
mov
ret
int3
iret
xor
sahf
xchg
mov
clc
cmc
mov
out
bndldx
jo
out
test
inc
jl
cltd
and
mov
push
xchg
rolb
gs
cli
ret
inc
pop
xor
sbb
jg
out
aam
adc
stos
add
xor
les
jne
sbb
loop
mov
mov
cmpsl
scas
cs
push
or
mov
stos
lret
cwtl
pop
or
sub
loopne
out
mov
inc
repz
aad
inc
mov
imul
xchg
or
mov
mov
mov
aaa
jne
jg
inc
xchg
inc
outsb
jge
add
dec
push
jo
stos
nop
cld
mov
dec
or
inc
dec
and
aad
lods
subl
sbb
movsb
lds
push
loope
sbb
cmp
xchg
fdivrp
mov
inc
leave
imul
dec
cmp
je
lods
outsb
pop
or
or
mov
mov
inc
push
dec
pop
sar
mov
cltd
out
xchg
push
jo
push
jnp
lods
sub
nop
popa
mov
cmp
xor
enter
fnsave
lea
push
dec
dec
mov
lcall
gs
cltd
mov
rcll
jo
mov
jle
xchg
dec
xchg
or
mov
xor
add
inc
dec
mov
mov
mov
xor
icebp
shlb
push
icebp
mov
xor
add
rcrl
cmp
dec
test
popa
xchg
cmp
mov
nop
mov
in
int3
sbb
ss
shlb
out
push
cmpl
loop
mov
inc
dec
xchg
or
jg
in
aad
fists
and
in
cmp
sarb
cltd
cmp
mov
call
push
call
xchg
mov
or
cmpsl
mov
add
jg
ret
fisubl
sbb
or
scas
repnz
push
test
and
rcrb
xor
das
sub
lret
incb
rcrb
sbb
hlt
cwtl
push
shlb
or
mov
sbb
cmp
lret
inc
jg
jbe
dec
movsb
pop
repz
jae
and
dec
or
dec
and
scas
xor
xlat
sbb
imul
movsb
mov
push
in
cltd
sbb
insb
adc
push
movsb
into
sub
popa
out
loope
clc
in
idivl
in
pop
imul
cld
sbb
jno
or
sahf
pop
enter
rorl
fidivrl
pushf
nop
jbe
and
xchg
popa
icebp
adc
stos
adc
outsl
outsl
pop
dec
sbb
repz
sub
popf
mov
fmuls
scas
std
mov
mov
adc
shl
jbe
mov
cmp
flds
cmp
or
les
stos
out
pushf
mov
call
repz
stc
jb
out
mov
adc
addr16
push
std
scas
pop
jb
pushf
enter
sahf
ljmp
lds
loope
lock
pop
xchg
fisubrs
int3
movsl
fs
pop
sahf
outsl
jmp
sub
je
hlt
dec
stc
mov
push
clc
aam
cmp
add
aaa
das
adc
lock
ja
fmull
hlt
cmp
push
and
cmp
rcrb
xchg
out
mov
imul
scas
pop
or
jecxz
andl
mov
xchg
test
popa
mov
shl
cmpsb
cli
popf
or
fldenv
sub
push
jno
lret
pop
adc
pop
add
xor
push
fbld
enter
sbb
fisttpll
sbb
inc
enter
or
fwait
dec
jne
cmc
and
adc
aam
std
push
and
popa
mov
push
outsl
jl
inc
out
xor
sub
and
pop
jmp
push
popf
cmp
push
sbb
ds
mov
inc
popa
aas
add
je
inc
fldt
test
das
xor
adc
fs
bound
lahf
hlt
xchg
jecxz
adc
popf
or
add
pop
js
inc
adc
jecxz
mov
mov
clc
pop
jne
cs
jbe
add
mov
xor
sub
xchg
jg
or
rorl
int
movsl
sahf
popa
adc
push
push
mov
cltd
insl
jmp
movsb
jns
fstpl
ret
test
xor
test
jb
icebp
pop
bound
clc
push
sti
lahf
aaa
mov
pop
ficomps
push
iret
mov
arpl
dec
xor
je
add
orl
orl
mov
repz
movsb
stos
sbb
outsl
xlat
repz
jb
mov
stos
movsl
pop
pop
sub
pop
iret
or
sbb
popa
repz
lds
dec
in
mov
add
stc
push
les
sbb
and
arpl
fldln2
insl
mov
sub
mov
mov
and
adc
lds
hlt
xor
bsf
adc
fwait
add
aam
stos
xchg
xor
xlat
jmp
sbbb
pop
cmp
aad
mov
das
push
adc
push
xorl
rcrb
dec
cltd
xor
pop
out
push
pop
jno
sbb
notb
jp
ljmp
mov
push
jmp
mov
cwtl
pop
lods
pushf
jb
jge
sbb
lcall
mov
push
pop
and
hlt
aaa
adc
push
xchg
ss
fdivrl
clc
inc
jge
lahf
inc
rcll
mov
mov
ficomps
pop
add
lods
mov
push
loope
loopne
cmp
icebp
add
pop
pop
pop
int3
xchg
xor
rorl
sbbb
mov
fwait
xchg
xor
pusha
fucompp
or
sub
add
jecxz
jne
loop
neg
inc
idiv
ret
cmp
test
cmp
stc
xchg
aaa
pop
popa
xor
popa
lock
xor
jmp
jecxz
mov
or
in
mov
jle
cmpsb
mov
add
push
movsl
sbb
mov
js
fmuls
mov
jno
inc
enter
jg
scas
adc
xor
sub
cmp
adc
scas
nop
lret
jl
xchg
ss
fcmovnu
aas
mov
push
lock
mov
jns
imul
rol
mov
divl
fbld
rep
mov
mov
mov
orb
sub
lock
daa
shrb
ljmp
mov
push
mov
jns
push
sbb
jno
cmc
sbb
pop
stc
jb
ss
ja
mov
int
adc
stos
scas
pushf
bound
xchg
push
jbe
add
sti
pop
pop
mov
fs
add
addb
sub
mov
ds
and
iret
jne
frstor
ss
push
sbb
sbb
subb
pop
adc
ficoms
pop
movsb
fstpl
sti
bound
cmp
scas
mov
stos
cmp
push
in
and
and
mov
sub
dec
dec
rcrb
xchg
mov
inc
inc
push
or
lds
mov
loopne
sbb
ret
out
pop
xchg
loopne
lods
orb
rorl
add
xchg
shl
stos
xchg
out
add
shll
or
adc
mull
mov
lods
jbe
push
jge
out
outsb
pop
aad
mov
cmp
xorb
clc
dec
xor
es
jge
sbb
mov
mov
sbb
lods
sbb
sbb
mov
test
push
data16
pop
out
xorl
punpckldq
pop
loope
or
test
andb
add
inc
insb
cmpsl
stos
movsl
and
fsubs
lods
int
dec
pop
pop
fidivrs
mov
cwtl
js
mov
jne
jns
mov
aam
mov
sbb
pop
fldcw
mov
inc
out
hlt
mov
lret
scas
push
mov
xor
cmpsb
aaa
dec
jp
das
jle
aas
mov
mov
mov
pop
insb
out
mov
or
in
fwait
pop
lahf
xor
cmp
add
sub
std
push
shrl
shrb
ret
sbb
cld
xchg
in
add
inc
fdivl
ljmp
jnp
imul
and
push
dec
jle
js
sbb
and
or
pushf
push
lret
cmp
cltd
sub
sbb
sbb
mov
outsl
insb
jbe
movl
test
xor
insb
mov
jae
add
or
pop
jecxz
jl
mov
mov
scas
inc
pusha
xor
in
das
cmpl
cmpl
out
dec
lret
imul
jp
js
test
sbb
insb
and
xchg
push
adc
std
in
mov
adc
pop
aaa
jae
out
addr16
adcl
lret
arpl
cmp
cmpsb
int
rdpmc
xchg
cmpsb
mov
push
imul
cmp
arpl
daa
daa
imul
movsl
xchg
push
pusha
inc
jo
je
pushf
adc
adc
hlt
mov
out
test
data16
lret
jns
xor
out
push
mov
insb
xor
rorb
clc
fidivrs
jo,pn
sbb
sbb
mov
pop
push
popf
sub
inc
lods
adc
jg
inc
mov
cmp
stos
fnsave
mov
ret
jb
je
incb
sbb
add
leave
mov
fnstsw
lds
clc
jge
sbb
jb
cwtl
mov
xlat
mov
jg
xor
push
roll
push
pmuludq
jb
cmpsb
adc
icebp
or
cmp
dec
movsb
pop
cmc
add
fisubrs
inc
fiadds
adc
cmpsb
mov
pop
pop
sbb
pop
iret
or
mull
mov
mov
loopne
popf
sub
or
jecxz
rol
loopne
mov
mov
sbbl
rcll
jg
mov
jle
xchg
insb
in
cmp
pop
cmp
push
jmp
mov
mov
mov
mov
divl
dec
imul
xor
push
push
mov
rcrl
pop
cmp
sbb
movsl
mov
push
faddp
mov
mov
pop
loope
adc
xchg
inc
ja
std
subb
imul
pop
sbb
daa
jb
push
movsl
cmp
std
or
pop
push
rcll
push
or
insb
out
sub
inc
mov
jmp
sub
orl
pop
stos
and
dec
in
mov
push
mov
out
push
jmp
add
add
or
jl
cmp
aad
cmp
icebp
jg
es
xchg
xchg
gs
ss
pop
test
or
mov
xlat
ljmp
cwtl
mov
lea
daa
fisttps
add
xchg
int
and
sub
xor
out
cmp
movsl
add
dec
mov
cmp
sbb
das
cs
adc
ret
pop
and
mov
sub
ret
sub
data16
les
jne
sbb
sub
mov
rolb
cltd
push
fldenv
addb
adc
out
nop
mov
mov
cmpsl
jae
mov
stos
pusha
jle
arpl
dec
add
pavgb
dec
into
fs
pop
gs
mov
ret
and
adc
sahf
fwait
into
mov
daa
cld
lods
mov
arpl
mov
in
arpl
add
mov
xchg
outsb
out
mov
pop
lock
test
sbb
inc
stos
sbb
loopne
decb
aas
adc
jmp
lock
xchg
and
enter
inc
mov
and
rcrl
stos
mov
adcl
mov
inc
jl
rcr
xchg
leave
and
cltd
mov
xchg
mov
sarb
test
cld
das
fisttpl
aad
insb
jl
push
int3
cmpl
mov
ss
out
xchg
inc
test
xor
jl
mov
aaa
loopne
sub
lcall
push
and
arpl
mov
xchg
push
cmp
inc
out
push
pusha
insl
dec
mov
stos
mov
mov
stos
or
aam
das
push
mov
jno
xchg
inc
mov
imul
in
jge
mov
jo
and
mov
pop
insl
dec
xchg
pop
cli
icebp
sar
insl
push
push
cmp
scas
stos
nop
push
mov
mov
mov
roll
xchg
cli
icebp
jb
test
jns
gs
pushf
lret
popf
and
mov
pushf
iret
lock
jne
aad
bound
cmp
or
in
les
jnp
jne
sbbl
pop
adc
xor
xor
inc
imul
bound
xchg
push
ss
test
mov
lret
fisttpll
es
rep
push
adc
pop
push
dec
lcall
ds
gs
iret
in
sbb
ljmp
fidivrs
pop
jle
dec
leave
xor
movsb
push
sbb
jg
cmc
jnp
add
mov
out
xchg
scas
mov
sub
fldcw
and
dec
shrb
rcrb
mov
fdivrl
sbb
dec
push
int
mov
jbe
popf
jecxz
xor
es
clc
mov
mov
punpckhbw
mov
les
and
jbe
test
push
mov
xchg
or
lret
mov
ljmp
mov
mov
das
mov
mov
jbe
dec
xchg
lock
mov
mov
mov
jle
add
jp
pop
scas
hlt
jo
mov
mov
jb
add
push
and
dec
ret
ss
testl
mul
add
int
dec
fldl
lods
xor
incl
inc
popf
out
add
push
xor
ja
fprem
jae
push
hlt
je
lods
sti
sub
lods
ret
jge
pusha
jbe
rcrl
sti
inc
xor
mov
int
cmp
fwait
and
test
and
fsub
ja
ljmp
jbe
mov
aas
lods
movsb
fistpl
or
ds
lret
loope
jle
sub
decb
stos
mov
cmpsl
mov
aaa
sbb
pop
or
jg
push
sbb
sbbb
or
adc
sub
out
push
mov
cmp
sbb
push
in
cmp
int
bound
push
testl
hlt
mov
jno
lods
iret
imulb
out
pop
inc
push
mov
jno
mov
scas
mov
xor
sbb
lods
pop
rcrb
mov
lret
call
sbb
mov
mov
mov
pusha
push
ss
cmp
adc
daa
fisttpl
outsl
jge
adc
fldt
mov
test
mov
mov
mov
movsb
cmc
ss
xchg
pop
cltd
stc
cmp
or
div
mov
dec
in
and
mov
mov
add
or
adc
adc
inc
mov
dec
sbb
xchg
stos
jmp
ja
call
mov
call
or
movsl
or
roll
push
in
cmp
cmp
insb
shlb
cld
dec
xor
cld
cs
sbbl
push
adc
cmp
jecxz
and
inc
adc
repz
leave
call
xchg
inc
xchg
add
outsl
in
loopne
dec
or
adc
mov
movsl
add
sub
ss
scas
in
cmp
mov
sbb
push
in
fistpll
movsl
imul
pusha
jno
inc
clc
dec
movsl
pop
cli
xchg
sub
xchg
lahf
jecxz
ss
jmp
jbe
jns
lahf
outsb
rorl
fisttpl
xchg
push
insl
ficoms
repz
jnp
lret
xchg
in
mov
pop
dec
arpl
aas
or
imul
xchg
jge
inc
jb
pop
sti
sbb
mov
pop
mov
add
call
lock
cli
data16
mov
or
ret
out
es
mov
dec
repz
ret
mov
aaa
imul
xor
andl
lock
in
inc
gs
mov
mov
jnp
sti
aas
jbe
ret
jmp
mov
xchg
int
pop
das
mov
push
inc
aas
pop
cwtl
jg
xchg
jnp
leave
in
xchg
pop
xor
roll
int3
stos
mov
push
sbb
cmpsw
mov
mov
pop
mov
jo
and
jnp
dec
mov
mov
fs
or
ret
pop
aam
sbb
mov
aaa
popf
pop
pop
test
mov
sti
sbb
mov
sub
int3
sbb
jbe
popf
arpl
lret
out
sub
sbb
mov
adc
sarb
jno
pop
fldl
or
mov
push
sub
adc
mov
xor
mov
push
and
sar
jbe
loopne
inc
movsl
mov
test
inc
adc
mov
mov
fnstcw
inc
pop
mov
ja
rorb
mov
xchg
test
sahf
insb
add
addb
lcall
xor
sbb
stc
adc
in
add
pusha
fbstp
xor
and
pop
pop
pop
dec
mov
add
mov
shll
addb
xor
insb
push
sub
push
cmp
cwtl
sub
cmpsb
mov
sub
icebp
jl
inc
lods
negl
add
pop
add
pop
xchg
sub
sahf
pop
lock
jne
subl
dec
and
jmp
movsb
push
dec
aam
inc
mov
xchg
mov
ffreep
sub
cli
into
adc
out
jne
out
inc
push
outsb
fmulp
push
dec
outsl
lahf
and
gs
mov
mov
mov
xor
ficomps
mov
xor
js
movsb
pop
mov
jne
xor
or
push
rcr
mov
out
aam
or
scas
sub
push
andl
xchg
in
cmp
jne
sub
iret
sbb
xchg
fs
fwait
or
jb
cmp
push
pop
jmp
jbe
mov
imul
pop
loopne
xor
jbe
ret
rorb
push
test
sbb
xor
cmpl
jno
pop
enter
out
jne
add
push
dec
out
cmp
je
les
sbb
cmp
or
sub
testl
push
rcll
fdivrl
pushf
ret
sub
loopne
aas
dec
pop
xor
mov
inc
push
cs
imul
cli
and
je
lahf
int3
ret
test
pop
bnd
sahf
imul
mov
xchg
mov
cmpsb
pop
push
cmpsl
shrb
sti
push
jo
xchg
icebp
sti
popa
xchg
inc
push
lret
js
mov
cmpl
mov
xchg
idivb
mov
xor
mov
leave
ljmp
xor
mov
adc
dec
sub
cmpsb
fcomps
xor
lret
shrl
jns
rcll
pop
pusha
and
push
push
repnz
push
jbe
jecxz
nop
pop
pusha
pusha
inc
or
pop
push
push
cmpsb
loopne
popa
push
jp
sarb
cmc
cmp
sub
and
bound
stos
sub
mov
adc
out
and
ljmp
mov
dec
fs
or
sar
mov
nop
and
push
sti
xchg
addb
mov
aam
mov
xor
xchg
into
out
or
ss
dec
sbb
inc
jecxz
loope
mov
add
imul
sbb
cld
push
sub
aam
cltd
xchg
aas
add
pop
add
sub
pop
int3
cmp
push
sub
out
aas
jb
mov
in
out
mov
push
sub
cli
rcrb
es
sub
in
sbb
aas
clc
fst
out
dec
andl
mov
xchg
xchg
push
aaa
nop
loop
ds
push
rcrb
aad
scas
inc
iret
add
xchg
pop
adc
mov
aas
push
inc
ds
rorl
sub
sub
ret
xchg
xor
mov
mov
sub
fldenv
nop
add
lcall
stos
cmpsb
loop
dec
lods
sbb
fildll
mov
mov
gs
jecxz
inc
and
add
dec
mov
inc
loope
cmpsl
push
test
or
mov
in
adc
ret
pop
add
pop
dec
lcall
inc
mov
rcr
or
movsb
or
scas
dec
lds
lret
mov
sbb
sbb
mov
jp
outsb
inc
or
sub
xchg
jg
jno
addr16
lcall
sbb
mov
jle
xchg
inc
sbbl
xor
les
call
jge
add
mov
pop
shrb
dec
sub
cmp
stos
jge
or
dec
xchg
mov
aas
cmpsl
sbb
leave
xor
std
dec
shll
lcall
into
pop
lods
jo
add
push
stos
lock
pusha
ffree
mov
pop
push
inc
or
xor
icebp
and
xchg
shrb
adc
cwtl
insb
out
cmp
mov
jl
mov
xchg
enter
sub
je
into
pop
mov
sub
add
int3
hlt
sbb
push
cmpsb
jecxz
pop
rcl
mov
pop
push
xchg
cmp
in
out
push
mov
push
mov
mov
xchg
mov
sahf
insl
rcrl
mov
push
in
sahf
jg
cmc
mov
frstor
and
das
inc
int3
lods
movsl
cmp
loop
cwtl
hlt
scas
dec
dec
popa
mov
les
movsb
add
repz
data16
es
cmp
adc
dec
cwtl
popf
inc
gs
jl
or
roll
jbe
mov
fcompl
xlat
push
repnz
loopne
mov
fistl
test
int
and
mov
xor
xor
jge
push
ret
pop
push
cmp
mov
bound
pop
dec
mov
pop
icebp
ret
das
push
aas
lods
sub
cltd
jl
add
jg
mov
lock
mov
mov
xor
mov
mov
mov
pop
sub
loop
or
sub
inc
fistps
xchg
lea
aas
insl
mov
arpl
pop
lods
pop
sub
mov
add
daa
push
popa
sbb
cmp
out
roll
xor
sbb
inc
sub
test
test
push
les
std
jo
out
and
lret
call
xchg
xor
or
gs
jae
mov
sub
or
rolb
xor
dec
mov
inc
cmp
inc
push
pop
ja
rep
adc
fmul
mov
add
rclb
dec
xchg
cmp
inc
pop
jne
sub
and
mov
jno
jae
scas
pop
sub
test
push
pop
add
call
cld
addb
jecxz
push
ljmp
xor
inc
out
cmpsl
push
push
mov
mov
cmpsb
shrb
fidivs
movsb
mov
add
stos
aas
cmp
outsb
dec
mov
add
dec
mov
fdivl
sub
mov
jb
lods
addr16
in
pop
xchg
pop
cmpl
insb
shl
sub
lods
in
add
mov
add
test
into
push
xorb
faddl
mov
into
sahf
test
mov
insb
fidivs
cmpsb
sub
mov
lea
mov
sbb
jne
imul
xlat
stc
add
lods
outsl
xchg
in
push
dec
adc
loopne
out
xor
dec
in
lock
adc
pop
nop
add
cld
sub
lds
xlat
call
push
mov
rorl
jns
leave
in
mov
xorb
iret
mov
outsl
mov
orl
and
pop
loope
sub
adc
dec
popl
aam
and
fucomi
daa
sti
test
and
add
xor
mov
sarb
sti
testl
pop
fwait
cltd
xchg
repnz
mov
inc
pop
cli
int
xor
addr16
hlt
imul
outsl
ret
rolb
ficoms
or
add
mov
in
call
fs
dec
inc
lock
aam
icebp
addr16
sarb
jb
xchg
and
sub
dec
mov
push
dec
jecxz
test
jmp
sarb
mov
jg
pop
xorb
lods
cmpsl
xchg
in
push
fstps
lods
push
pop
js
add
xchg
sub
cmp
mov
das
jle
bound
aaa
pop
cmp
pop
xlat
adc
test
adc
aaa
lock
cmpsb
pop
jg
or
stos
repz
stos
sub
mov
sub
push
minps
push
arpl
pop
jbe
gs
sub
mov
jecxz
xor
pop
in
outsb
loopne
xchg
xchg
add
dec
dec
xchg
adc
bound
sub
adc
aad
sysexit
or
dec
scas
xchg
dec
jl,pn
inc
mov
mov
sar
dec
mov
stos
das
iret
lods
clc
mov
dec
adc
mov
mov
nop
hlt
and
xchg
push
aas
xchg
mov
stc
add
mov
in
inc
lcall
mov
mov
movsl
inc
or
pop
aam
add
aam
rcll
mov
ss
les
push
jl
data16
fwait
daa
popf
or
out
inc
test
sub
adc
sti
cs
test
repnz
in
mov
jne
rcrb
fisubrs
mov
std
push
cmc
sti
jbe,pt
xorl
mov
push
mov
mov
jo
fistps
enter
dec
or
loop
sbb
ret
adc
incb
pop
mov
or
xchg
jne
fcompl
sub
clc
test
mov
mov
xor
cli
jns
imul
push
faddp
jl
popa
or
mov
addb
das
adc
leave
fwait
adc
push
hlt
add
inc
call
jns
cmp
jl
cwtl
fdivp
ret
mov
mov
imul
lds
sti
xor
push
aad
inc
and
sbb
mov
out
pop
adc
jg
aam
xchg
roll
enter
push
fstl
xchg
stos
sbb
ja
inc
pop
lock
mov
fidivs
dec
pop
out
notl
jecxz
dec
jae
mov
add
or
mov
push
cmp
ljmp
fsubl
shr
or
fstpt
aaa
push
sbb
xor
rcrl
leave
cmc
push
xor
and
push
adc
xlat
mov
add
sub
xchg
jl
aad
or
xor
rcll
adc
out
shl
mov
mov
scas
cwtl
pop
shlb
push
sti
clc
out
and
sub
hlt
sbb
inc
adc
mov
ljmp
xchg
test
lret
mov
daa
imul
pop
xorb
lahf
jp
or
xchg
mov
push
lret
xchg
inc
jle
adc
insb
jl
decb
push
fwait
cmp
mov
sub
xchg
cs
push
insl
mov
sub
in
mov
lret
sub
loope
mov
lods
push
daa
rcrl
mov
sarb
movsl
xor
lea
sahf
dec
dec
or
mov
and
push
iret
das
data16
into
mov
pop
lods
lret
jnp
incl
std
mov
decl
lret
call
or
sbb
int
mov
push
pop
aas
dec
in
dec
dec
out
test
pop
inc
pusha
push
in
aad
mov
adc
mov
dec
arpl
mov
adc
pop
mov
iret
cli
and
mov
loop
jnp
lret
rolb
mov
roll
cmp
xorb
ror
jne
imul
xchg
push
imul
out
ret
inc
fbld
icebp
imul
shll
jns
mov
or
xchg
sbb
mov
lcall
add
movsb
sbb
push
dec
push
ret
call
lcall
leave
inc
pop
fimull
mov
sbb
push
mov
insb
push
push
inc
inc
outsl
dec
jg
bound
lahf
and
jns
hlt
xchg
pop
cmp
jl
jle
data16
and
mov
mov
daa
aam
pusha
mov
rcrl
fdivrs
mov
dec
cmc
stos
loope
push
imul
xor
scas
dec
cld
cmp
mov
fcmovb
ret
jle
and
sub
mov
sub
push
dec
jle
hlt
mov
inc
push
test
sub
cmp
iret
xchg
out
pusha
lods
push
aas
and
ret
imul
adc
in
pop
mov
ja
rcrb
movsl
popa
fidivrs
out
sub
fsubl
test
fidivrl
sub
and
insb
mov
stos
stc
call
xchg
lods
cmp
or
sbbb
in
sbb
aam
add
std
call
daa
in
add
jns
mov
je
test
scas
addr16
inc
arpl
shrl
in
roll
insb
push
int3
cmp
inc
shlb
mov
scas
mov
mov
rcr
push
repz
pop
dec
leave
mov
or
ss
stos
das
jns
test
ret
in
or
add
sub
or
imul
fnstenv
cmp
mov
push
loop
add
loop
bound
pop
mov
outsb
xor
stos
or
loop
sub
xchg
pop
or
fistpl
lods
in
inc
in
ret
lods
mov
lcall
xor
sbb
ja
andl
pop
arpl
mov
xor
mov
dec
xchg
push
pop
dec
out
add
aad
out
and
mov
mov
or
loop
stc
xchg
mov
nop
setp
outsl
int
and
cld
les
mov
sti
test
cmp
pusha
sbb
xchg
lcall
out
pusha
aam
cli
jl
ja
add
pop
negb
push
pop
push
jmp
adc
adc
lret
mov
out
add
cmpsb
gs
jg
fwait
sbb
adc
jmp
jp
push
sbb
or
cwtl
scas
or
les
cmp
sub
mov
or
or
lock
adc
xchg
add
mov
pop
inc
imulb
mov
add
or
imul
add
out
popf
lea
xlat
xor
or
mov
clc
insb
or
shll
repnz
insl
adc
loopne
push
stos
shlb
popa
add
xchg
push
mov
pop
mov
xor
scas
ja
repz
push
mov
aad
lea
mov
dec
clc
repz
ret
stos
push
mov
cld
pop
out
inc
sub
test
push
subl
gs
int3
mov
add
scas
cs
lea
lahf
and
lret
faddl
xchg
dec
jp
pop
adc
test
iret
mov
ror
mov
mov
sbb
sub
mov
in
adc
jge
test
call
adc
imul
movsb
xchg
fcmovbe
lcall
or
pusha
ror
repz
inc
push
pop
add
adc
fsubrs
call
dec
cmp
cmp
ret
jl
jl
movsb
xor
jb
mov
daa
outsl
and
dec
and
jecxz
pusha
insb
popa
loop
stos
daa
lcall
ss
jle
push
mov
xchg
cmp
in
inc
lea
sbb
decl
mov
and
jecxz
cmp
xchg
bound
cli
scas
gs
pusha
and
inc
mov
repnz
or
add
ljmp
xlat
into
sbb
pop
nop
fs
cmp
sbb
xchg
add
insl
pop
in
add
push
dec
pop
popl
mov
das
pop
lahf
sbb
imul
push
xchg
push
xor
mov
outsl
jbe
insb
jb
aam
xchg
mov
js
dec
cmp
in
inc
aas
pop
inc
inc
ret
divb
addb
mov
arpl
cs
icebp
inc
int
mov
jecxz
dec
and
mov
mov
or
xor
enter
into
jge
enter
icebp
int
cli
mov
out
push
inc
subb
and
sarl
inc
push
inc
mov
push
mov
adc
arpl
sub
out
aas
pusha
mov
sbb
call
je
leave
xor
sbb
mov
xchg
loopne
aaa
into
inc
inc
dec
fmuls
and
hlt
push
lds
xchg
mov
ljmp
movsb
or
sub
add
clc
pop
pop
or
out
cwtl
mov
daa
loop
gs
popa
cmp
ds
shll
inc
cmp
dec
lret
or
mov
push
cmp
mov
mov
pop
mov
mov
jne
inc
shll
mov
pop
mov
push
dec
dec
xchg
ljmp
int3
test
xchg
in
test
imul
xchg
fiaddl
out
add
movd
xor
iret
pop
stos
in
adcb
xchg
lret
negl
mov
stos
dec
stos
xlat
in
mov
inc
mov
aas
arpl
insb
outsl
adcb
test
mov
into
mov
into
hlt
add
fs
dec
push
inc
inc
js
mov
test
hlt
xchg
ret
xchg
lcall
test
in
mov
loopne
mov
xchg
test
das
sub
lahf
lret
inc
mov
out
xor
enter
daa
out
cmpsb
push
leave
cmpsl
cmpsl
cltd
adc
scas
shl
idivb
adc
xor
cld
add
loope
aaa
fwait
inc
mov
jne
xchg
xor
jno
mov
xor
cmc
mov
adc
dec
fstl
es
inc
lcall
bound
data16
loop
jle
cwtl
adc
leave
cli
pop
inc
inc
add
mov
loopne
mov
lods
push
jle
les
div
sarl
dec
jl
inc
sbb
imul
jle
jae
sub
sub
lods
imul
mov
xchg
mov
cmp
and
pop
jo
lahf
arpl
mov
hlt
neg
movsl
xchg
outsb
jle
sub
imul
mov
and
scas
fnsave
mov
cmp
inc
push
dec
into
iret
leave
adc
xor
pop
inc
cld
xchg
vcvtss2si
cmp
push
sti
dec
es
pop
out
sahf
jo
inc
mov
and
add
sahf
pop
sahf
pop
pushl
movsb
es
out
nop
mov
push
or
mov
jecxz
jns
clc
cmpsl
pop
or
insb
jmp
hlt
je
mov
push
cmp
inc
or
popf
shll
outsl
jb
out
lods
and
dec
fnsave
xchg
lods
aas
mov
inc
xchg
cmpsl
movsl
push
add
and
jle
call
jecxz
push
gs
nop
outsl
pop
pop
je
add
cmp
cmp
mov
arpl
imul
stos
in
jns
fcomps
mov
jle
shll
aad
loope
push
mov
roll
popf
xchg
cmp
mov
or
mov
les
jp
mov
sub
push
lds
jnp
adc
loopne
fisttpl
scas
into
mov
js
inc
mov
mov
scas
sbb
jb
in
rclb
adc
and
sub
jecxz
outsl
cmc
xsaveopt
or
daa
add
fstl
lahf
fdiv
fdivs
scas
cmp
scas
fistpll
mov
insb
in
or
je
sub
mov
fcoml
pop
pop
dec
adc
jb
sub
push
push
cmp
int3
cmp
loop
sbb
push
mov
jmp
popf
outsl
or
jmp
vmread
cmp
daa
aad
cld
pop
fistpll
dec
leave
dec
in
ficoml
xchg
adc
jle
xchg
mov
pop
xor
pop
mov
clc
popa
add
mov
xor
pop
mov
or
cmp
outsl
adc
or
roll
cltd
mov
repnz
hlt
add
sahf
push
mov
push
sub
dec
out
jmp
hlt
inc
mov
lret
push
cwtl
push
pop
pop
jo
push
sbb
pop
not
dec
popa
popa
pop
fs
adc
inc
mov
je
dec
enter
dec
repz
mov
mov
lahf
mov
rcll
mov
stos
stc
pop
cmp
xlat
test
mov
pop
inc
inc
outsb
insl
lock
or
fmull
xor
out
sub
popa
add
test
movsb
lret
xor
mov
jnp
shrb
fs
sbb
xor
out
cld
dec
dec
sub
loop
dec
push
addr16
hlt
into
loop
inc
ret
fildl
in
mov
mov
test
pusha
adc
aam
mov
test
fisttps
xorb
cmp
dec
or
test
sbb
mov
pop
sbb
in
mov
out
dec
subb
out
pusha
push
sti
sti
pop
in
xor
pop
xorb
outsb
mov
cld
dec
cmp
cmp
jle
jns
aam
gs
xor
or
repnz
sub
pop
gs
pop
outsl
mov
subl
mov
cmp
ror
div
sub
dec
dec
pop
jg
mov
into
jns
pushf
pop
inc
adc
frstor
rcr
cmp
mov
loop
xor
pop
cmp
out
push
jo
push
pop
cmpsb
jne
inc
inc
leave
pop
cmpsb
into
test
leave
mov
push
loope
add
mov
addr16
sub
mov
out
movsl
sbb
sbb
pop
sbb
cmp
push
cmp
sbb
adc
aam
and
mov
dec
sub
jb
or
or
loopne
out
xchg
add
sbb
dec
inc
out
lcall
add
stos
or
test
jne
add
jl
jo
mov
push
repz
movsb
scas
inc
dec
test
subl
cmp
cmpsl
lret
cmpsl
int
arpl
icebp
cmp
adc
in
aad
call
sbb
out
ljmp
sub
jbe
mov
fisttps
test
mov
mov
add
js
pop
pop
enter
pop
sbb
ja
pop
lods
or
and
loope
ljmp
or
outsb
add
vpunpcklqdq
ret
es
jp
xchg
jmp
shrb
in
xorb
pop
cs
int3
pushf
dec
bound
in
xchg
jge
jno
insl
pop
sarl
mov
sti
or
les
push
add
insb
test
pop
pop
pop
cmpsb
loope
sbb
sub
lods
scas
popa
push
pop
mov
mov
xor
enter
and
push
in
lahf
cmp
repnz
xor
fdiv
mov
cwtl
ja
outsb
es
sub
inc
mov
loope
hlt
stos
mov
orb
outsl
mov
mov
dec
xchg
mov
into
jl
push
lds
jp
bound
fcmove
nop
jns
mov
or
dec
xor
mov
mulb
push
ret
jg
xor
ror
fimull
inc
or
pushw
add
jae
shrl
addr16
jo
jecxz
mov
xchg
imul
and
and
push
jmp
movsl
gs
iret
sub
cwtl
iret
cltd
sti
mov
xor
cmp
add
mov
jns
adc
jb
ja
addr16
rolb
dec
xchg
outsl
shrl
popf
addr16
sbb
mov
inc
xor
xchg
aaa
inc
bound
mov
ds
les
push
pop
jmp
xor
cmp
iret
add
insl
fisttpll
cmpl
and
nop
mov
or
or
imull
or
lds
sbb
lods
fwait
les
pop
pop
sbb
xchg
fstl
cmp
push
pushf
xor
hlt
pusha
push
lcall
xor
mov
ja
xorb
push
popa
mov
push
adcb
and
sar
aaa
and
dec
mov
sarl
stc
inc
ret
push
pusha
mov
daa
add
push
fstpt
mov
or
mov
stos
xchg
xor
xlat
dec
sub
jno
mov
xor
xchg
das
lahf
cmp
shlb
and
push
push
aam
loopne
mov
adc
lret
cmp
cmpsl
pop
mov
cmpsl
mov
xchg
adc
push
testb
fmuls
fisubl
movsb
fwait
pslld
outsl
andb
aad
cmp
sbb
mov
iret
jge
jo
inc
loop
jge
mov
aas
mov
dec
icebp
sub
scas
push
mov
mov
cmpl
std
mov
icebp
andb
push
jg
cli
push
je
mov
dec
inc
pop
in
mov
mov
lds
das
adc
fisttps
mov
test
mov
pop
jg
cmpsl
sub
stos
sub
mov
pusha
sbb
lret
test
jo
cmp
insb
int
mov
fwait
xchg
sub
mov
pop
push
into
sarl
xor
dec
iret
loope
cmp
push
call
xlat
cwtl
mov
push
rorl
fst
push
dec
xor
lret
divl
push
mov
xchg
inc
js
fwait
add
imul
pop
mov
in
sub
loope
or
mov
fistl
mov
repnz
add
iret
dec
push
pop
jmp
testb
cltd
ds
scas
mov
mov
shll
enter
pop
push
sub
push
adc
hlt
mov
testl
dec
sbb
int3
scas
and
push
pop
add
movsl
mov
test
sbb
pop
test
mov
jl
push
sbb
jl
cwtl
mov
xor
mov
push
jno
out
movsl
int3
adc
and
es
je
orb
subl
mov
cltd
mov
dec
js
pusha
or
push
adc
or
jns
cs
inc
jb
inc
jge
xrelease
cmp
or
and
mov
jge
or
hlt
sub
mov
enter
dec
cmc
pusha
inc
in
mov
jp
cmp
mov
push
sbb
clc
xor
fsts
stos
xchg
repnz
dec
pop
pushf
xor
and
xchg
lods
mov
pop
xchg
cli
negb
sub
sub
xchg
icebp
sub
jns
mov
out
pop
fs
loop
out
push
and
ret
xchg
add
repz
ss
js
icebp
inc
push
mov
sub
pop
lock
and
sahf
and
cmpb
pop
push
dec
cmp
aaa
push
or
push
jge
jmp
pop
mov
adc
sbb
xchg
inc
sbb
out
adc
sbb
fiaddl
add
inc
jge
pop
cmp
push
cmpsl
data16
mov
add
xchg
sbb
push
fmuls
sarb
pop
mov
pop
pop
jmp
pop
jg
pop
cmp
sub
aam
xchg
push
cmpsb
cmpsl
outsb
clc
xchg
mov
pop
shlb
cld
jmp
or
data16
pop
mov
mov
aas
push
push
fistpll
insb
push
push
push
out
xchg
push
add
xor
pop
ret
mov
cld
orl
popf
icebp
fucomp
int
cmp
xchg
inc
jns
push
pusha
add
into
in
xlat
push
inc
sub
sbb
ss
push
js
and
mov
dec
rorl
push
flds
or
xchg
jo
mov
cmpsl
loopne
das
fwait
inc
xchg
push
nop
and
repnz
mov
pop
rcl
es
fwait
mov
xchg
xor
jg
sbb
js
outsl
jne
fwait
data16
push
ds
jo
addr16
shrl
lds
dec
inc
inc
mov
in
mov
xchg
and
xchg
mov
mov
cmp
add
scas
mov
fld
or
movswl
notb
popf
push
fbstp
jecxz
fcoms
mov
dec
push
shll
outsb
andl
jne
stos
test
dec
xchg
xor
xchg
decb
lcall
lods
aad
in
aas
imul
sbb
enter
fs
fsubrl
push
pop
arpl
cltd
aad
int
pop
ror
pop
hlt
sbb
stos
std
sub
fwait
dec
test
in
pop
sti
stc
dec
test
inc
xor
jmp
adc
outsb
ficomps
sub
dec
pop
fstpl
dec
or
lea
aad
test
or
fisttpll
mov
cmp
hlt
push
xor
adc
pusha
mov
cli
mov
dec
mov
or
fisubl
sbb
and
xchg
mov
sbbb
xchg
gs
or
dec
xor
xlat
call
mov
daa
cmpsb
mov
cmpsb
push
pop
mov
ss
fistpl
pop
ds
mov
ja
pop
push
pop
icebp
mov
cmp
add
cmp
push
das
add
iret
hlt
sbb
sub
xchg
pushf
xchg
sbb
push
jl
inc
mov
pop
sbb
arpl
sub
sbb
xlat
ret
lods
jb
out
add
mov
fs
xor
lods
mov
daa
pop
lods
push
mov
lcall
pop
lods
ds
xor
dec
je
and
jl
inc
add
out
out
mov
nop
jns
lahf
fimuls
mov
loop
xor
mov
jno
push
test
out
cmp
xchg
xor
pop
or
push
push
fs
and
add
xor
mov
jmp
data16
stos
mov
mov
mov
jmp
cmp
sbb
movsl
scas
add
adc
and
mov
sbb
sbb
dec
or
lret
and
push
sub
pop
imul
pop
test
adc
test
test
daa
or
push
cld
mov
mov
pop
mov
sbb
push
mov
mov
jecxz
xadd
fs
out
and
jno
adc
pusha
test
pop
sub
hlt
aas
add
sub
movsl
sub
jae
xor
inc
scas
adc
pop
inc
roll
inc
jge
mov
dec
sbbl
jnp
icebp
push
clc
and
inc
sub
cs
enter
cltd
xchg
testb
xlat
add
arpl
inc
jb
cmpb
push
sbb
adc
jle
dec
mov
inc
adc
jo
loopne
sub
movsb
js
das
dec
xor
or
mov
imul
cltd
xor
xlat
cmp
shlb
cmc
inc
in
imul
outsl
loop
icebp
jmp
aas
or
lcall
add
jae
orl
std
or
jno
enter
int
adc
jno
es
lret
bound
or
inc
push
ret
xor
or
pop
insl
sbb
inc
loopne
sarb
mov
push
das
sub
or
pop
mov
inc
and
adc
cltd
and
in
jp
pop
jnp
mov
or
test
lret
stos
in
and
cmp
mov
lock
mov
out
pop
cmc
pop
push
les
jp
jno
test
orl
popa
or
sbb
jno
jae
icebp
arpl
inc
lcall
mov
shrb
adc
mov
leave
lds
loopne
add
fldt
cltd
sbb
push
imul
add
cmp
mov
push
les
push
or
out
or
pop
sub
and
movsb
in
into
add
mov
aaa
movq
andl
ja
enter
lret
fstp
rclb
ret
push
fadd
pop
xchg
outsb
fldcw
xchg
pop
sub
cli
mov
sahf
hlt
dec
imul
ljmp
into
insl
cmp
fcoms
jno
xor
rcll
sub
xor
repnz
decl
mull
int3
and
push
fcomi
mov
mov
add
cld
sbb
into
dec
pop
cmp
and
xor
fidivs
adc
mov
sub
pop
jle
movb
loop
xorb
and
sti
cmpl
sarb
push
insl
xor
pop
rorl
addb
loop,pn
std
mov
inc
fwait
dec
xchg
xor
jae
add
imull
call
fwait
or
fldcw
jmp
pop
insl
in
mov
cmpsb
and
cmp
pop
gs
outsl
dec
inc
aaa
cmpsl
fdivrl
dec
js
in
arpl
gs
dec
xorb
pop
clc
pop
inc
mov
daa
int
jbe
mov
jae
inc
pushf
push
outsb
cli
sbb
jae
insb
inc
jge
push
dec
imul
xchg
mov
fisubs
mov
mov
xchg
sub
cltd
mov
mov
mov
inc
mov
divb
mov
xchg
data16
lret
dec
int3
in
pop
jg
dec
sub
hlt
mov
add
lods
test
push
daa
xchg
mov
das
mov
out
or
cmp
popa
jnp
inc
mov
test
test
cmpb
sarl
adc
cwtl
rclb
pop
sbb
ret
out
nopl
hlt
das
scas
adcb
and
or
test
ss
arpl
imul
add
xchg
push
inc
ja
addb
mov
mov
dec
xchg
mov
add
pop
or
ret
inc
in
push
imul
xchg
sbb
sub
stos
add
outsb
lret
in
imull
cwtl
iret
adc
jmp
mov
mov
sub
ss
jmp
xchg
cmp
pop
aaa
mov
cld
ljmp
sub
sbbb
mov
cmp
jge
mov
sbb
pop
jmp
push
jb
dec
rorb
add
mov
movsl
out
das
cmc
xlat
rorl
cmc
leave
mov
dec
inc
xor
repz
mov
inc
imul
scas
xor
xchg
es
lods
cmpsl
out
dec
roll
or
mov
inc
js
imul
cs
pushf
pop
cmp
out
pop
push
pop
jg
or
sub
sub
insl
mov
mov
out
js
cmc
sbb
int3
movsl
leave
out
cmp
pop
push
inc
pop
inc
dec
xor
out
rcrb
lret
mov
notl
lods
test
xlat
aam
push
or
insb
ds
repz
icebp
bound
xor
popa
xor
jge
enter
ja
es
sub
xchg
jb
outsb
adc
pcmpgtb
aaa
outsb
mov
cmp
push
fxch
or
mov
iret
and
or
mov
jge
sahf
sbb
mov
cmp
leave
sub
outsb
add
insl
pop
mov
arpl
or
pop
mov
nop
stos
mov
imulb
sub
or
mov
dec
mov
xor
jle
enter
ja
jecxz
jp
jp
fdivrp
rclb
cmp
test
xlat
scas
sub
std
push
subl
push
pop
in
lds
lock
xchg
or
sbb
movnti
push
dec
ljmp
mov
pushf
add
dec
or
push
dec
xchg
dec
pop
or
in
pusha
push
cwtl
xchg
adc
sbb
inc
fistps
stc
jno
or
xchg
push
les
xor
or
push
fistl
ss
xchg
sub
mov
jl
lea
cltd
ret
dec
and
test
xor
cmp
mov
mov
in
dec
push
inc
ffree
xchg
xchg
out
inc
repnz
add
and
pop
fs
insb
fmull
mov
cwtl
sbb
mov
scas
adc
pop
les
pop
das
or
dec
xchg
xchg
jl
or
sbb
push
push
test
xor
jne
mov
sub
inc
imul
daa
jg
dec
pop
and
ljmp
sti
cmp
cmpsb
iret
into
movsb
and
out
aaa
call
sub
neg
sarb
aaa
pop
add
imul
aam
adc
cmpsl
int3
and
repz
repnz
lea
rcl
bound
outsb
popa
mov
add
cmp
xchg
dec
aam
pop
adc
or
lock
mov
sti
jmp
hlt
mov
mov
mov
push
repz
les
jge
inc
jbe
mov
call
push
in
mov
mov
loopne
mov
jb
xor
popa
lock
add
xchg
insb
mov
mov
imul
pusha
aam
jge
or
aad
stc
mov
pop
inc
loopne
xor
jl
xchg
out
mov
pushf
rolb
hlt
cmp
icebp
sub
inc
loope
cmp
call
cltd
pop
scas
pop
ja
sarl
rcr
popa
dec
xchg
sbb
test
clc
xchg
sub
mov
push
jae
push
push
jae
in
and
jb
shl
iret
or
popf
addr16
sub
mov
cs
lret
subl
out
cwtl
stos
mov
movsl
bound
push
xchg
pop
sbb
xorl
mov
add
push
in
dec
and
sbb
stos
jl
inc
out
push
cmp
xchg
stos
test
fs
sbb
rolb
enter
cld
mov
into
mov
jge
xchg
jge
jno
push
and
out
cmpsl
rclb
or
shrb
inc
cmpsl
cli
sub
inc
gs
bnd
or
subl
mov
stc
cmpsl
arpl
mov
aaa
xchg
je
nop
and
push
repnz
lea
outsb
repnz
outsl
arpl
out
fwait
lret
or
cmc
into
and
sub
mov
jg
push
fdivs
xchg
jecxz
pop
mov
repnz
push
sbbl
mov
ljmp
lds
cmpsl
sub
sbb
aas
and
xchg
push
xor
sbb
jp
insl
mov
jb
jns
jns
das
enter
sub
mov
sub
add
arpl
dec
adc
out
and
sub
fmul
push
leave
sub
xor
cltd
out
push
sbb
xchg
or
add
inc
adc
adc
push
inc
in
xor
fwait
jne
cmp
test
dec
and
and
pop
jno
mov
pusha
lret
ss
pushf
push
sbb
fs
mov
les
stc
leave
movsb
fst
hlt
jge
sbb
clc
xchg
test
and
in
sbb
mov
fiadds
scas
sub
flds
lock
and
push
sarb
pushf
inc
js
inc
dec
jg
test
dec
dec
mov
sar
adc
pop
fidivrs
bound
repz
adc
lock
loop
dec
ds
mov
add
jg
out
out
fwait
jno
sti
loope
daa
lock
or
repz
fistpll
divl
je
int3
out
jl
dec
mov
rol
pop
cld
sbb
xchg
cmpl
outsl
aaa
mov
mov
mov
pcmpgtb
jge
inc
sub
icebp
cmp
xchg
in
jbe
inc
shlb
std
adc
lcall
cwtl
adc
lds
ss
fstps
add
lret
cmp
in
mov
jae
add
out
pop
jl
xchg
mov
lods
add
pop
pop
xor
pop
fsubl
mov
jo
add
movsl
stos
jle
jne
pop
repz
stos
vorps
push
jne
push
mov
jnp
cwtl
mov
cmp
dec
lods
push
or
sar
mov
push
push
movsb
mov
sbb
mov
mov
ljmp
inc
xor
mov
stos
rcrl
or
mov
mov
insb
dec
inc
xchg
xchg
cs
sub
dec
outsl
fwait
arpl
outsb
cmp
aaa
fisubrl
adc
pop
addr16
cmp
dec
in
and
addl
sar
inc
xor
add
lock
orb
mov
push
mov
clc
lahf
into
xlat
in
cs
cs
fwait
push
test
jmp
lock
out
mov
sub
mov
cmpsb
push
mov
xorl
lretw
arpl
adc
movsl
mov
outsw
scas
adc
outsl
cld
inc
call
jno
dec
les
mov
dec
xchg
test
inc
inc
or
inc
movsl
inc
shl
xchg
jbe
xlat
dec
mov
test
cmp
test
shrb
push
in
pop
dec
pushl
pop
push
aam
pop
pop
dec
bound
divb
insl
and
jmp
xor
and
fwait
jle
inc
arpl
xchg
cmp
cltd
popf
insl
cmp
push
stc
test
mov
cmp
cli
gs
sbb
call
and
out
insl
addr16
stc
test
fbstp
mov
shl
add
xlat
sub
jno
mov
xlat
inc
lods
pop
adc
jne
push
xor
mov
daa
js
hlt
mov
or
ja
and
xchg
sub
xchg
test
mov
subb
testb
arpl
xor
jmp
or
jle
jnp
subl
adc
cmp
sub
lret
pop
shrl
xchg
orb
mov
xor
push
rcl
add
cmpsl
push
push
sbb
xchg
pop
stos
iret
add
xchg
pusha
js
lret
das
or
sub
repz
jbe
imul
iret
mov
xchg
push
add
inc
aam
rcrb
dec
out
test
mov
dec
push
cmpsl
repz
sbb
andl
jge
movsb
push
shll
sub
xchg
add
sub
cmp
mov
movsb
jg
lock
push
aad
xor
into
xchg
icebp
cmpsb
fisttpll
jbe
mov
ljmp
cltd
mov
in
dec
je
xor
loop
dec
sub
scas
fadd
pop
and
push
mov
test
mov
jne
mov
jb
sub
fsubl
test
ret
adc
inc
fidivrs
nop
cmp
inc
or
cwtl
jb
xor
je
xchg
pop
rcrb
push
setle
xchg
sub
in
clc
fyl2xp1
xor
cmp
je
clc
mov
stc
loopw
scas
mov
add
fwait
pusha
aaa
test
lods
mov
dec
jns
cmp
sub
aas
enter
sbb
into
lcall
sbb
mov
cmpsb
leave
sub
add
xchg
mov
cld
add
pop
or
adc
push
loopne
mov
jmp
mov
fildll
pop
arpl
lock
std
mov
add
fwait
cmpsb
out
jnp
test
inc
add
jmp
daa
pop
jmp
jae
imul
pusha
mov
push
mov
mov
fcompl
shl
add
jmp
xchg
sub
shlb
pop
jb
sarl
sarl
out
jle
pop
pop
xchg
loop
aad
or
daa
dec
scas
jo
jecxz
test
lahf
mov
mov
sub
or
jne
push
popa
adcb
adc
sbb
add
clc
xlat
mov
mov
mov
adcb
clc
dec
jge
mov
and
push
test
xor
es
fidivl
ret
lcall
ret
stos
mov
mov
push
mov
addr16
jecxz
fmull
pusha
fwait
xchg
lret
outsb
adc
mov
and
mov
lret
shrl
cmp
out
sbb
fsubrl
mov
pop
addr16
sub
sbb
cmc
mov
push
jg
mov
gs
addr16
test
jle
and
sbb
pop
out
cld
push
bound
push
cmp
test
xor
cmpsb
ds
push
xor
mov
sbb
icebp
movsb
mov
mov
imul
shl
xchg
xchg
push
mov
adc
cmp
pop
mov
and
push
int
inc
inc
outsb
andb
push
fcoml
addl
or
jne
sti
aam
xor
in
pop
lret
push
popa
movsb
mov
mov
mov
sti
cltd
cmp
fmull
cmc
xor
cmp
inc
xor
pop
cmp
sub
mov
inc
push
or
cltd
push
mov
cltd
test
ret
jecxz
mov
adc
sbb
adc
cmp
mov
movsb
loope
sub
jle
movsl
loop
push
jecxz
dec
shl
scas
or
inc
out
adc
data16
aaa
sub
clc
xchg
xchg
mov
jg
inc
and
push
jge
inc
lods
iret
loop
add
jnp
xchg
cmpsl
bound
and
push
jge
fsubr
jp
int
pushf
nop
pop
notl
rolb
cmp
lcall
jno
and
inc
cs
in
cs
cmpsl
cmp
jb
rcl
subb
mov
mov
orb
shufps
dec
cmpsl
mov
repz
lods
popf
movsl
movl
xchg
xor
enter
outsb
lods
adc
xchg
dec
xor
inc
in
scas
pop
dec
pop
repz
stos
adc
subb
mov
jno
ja
cmp
pop
push
ret
dec
dec
scas
dec
rcll
movsl
fstpt
xor
adcb
xor
das
add
jmp
pop
jg
out
xchg
lret
cmp
and
cs
mov
mov
push
sub
pop
dec
mov
cmpsb
dec
inc
mov
mov
pop
shl
rorb
scas
and
cld
xchg
push
inc
pusha
out
mov
iret
repnz
sbbl
aas
popf
adc
add
pop
pop
sub
movsl
sub
in
jg
pop
adc
pop
add
sahf
jb
mov
mov
dec
push
mov
inc
push
or
test
and
xchg
mov
push
add
int3
push
push
push
dec
cmp
hlt
jnp
jl
dec
scas
inc
mov
and
orl
mov
fdivrs
ds
mov
and
mov
jb
sub
imul
out
lock
insl
aad
hlt
add
daa
mov
jecxz
sub
js
test
stos
cmp
mov
ljmp
daa
andl
xor
jns
out
sahf
out
jp
std
scas
xchg
in
push
cmpsb
lcall
pop
pushf
sbb
and
jnp
aaa
in
mov
ret
lods
les
cmp
loope
or
inc
or
lods
stc
xor
cmpsl
mov
mul
test
fdiv
sti
ret
mov
std
and
fiaddl
ja
xchg
xchg
shl
jo
adc
add
and
dec
jmp
pop
das
sahf
push
mov
test
cltd
xchg
lock
in
mov
stos
add
adc
in
sbb
out
lods
dec
jmp
in
mov
ds
in
addl
jnp
scas
jmp
and
add
jg
rorb
sbb
pop
jmp
leave
in
adc
pusha
stos
xchg
adcl
push
cwtl
jnp
mov
sub
mov
push
mov
cmpsb
sbb
mov
js
outsl
add
mov
pop
jae
insl
inc
dec
jmp
xor
dec
repnz
enter
gs
dec
daa
sbb
xor
je
or
popf
cmp
sub
call
outsl
push
mov
ret
popf
nop
pop
mov
push
decl
stos
pop
and
pop
xor
rorb
cmpsl
in
push
sub
inc
fadds
cmpsb
sub
add
dec
cwtl
sbb
addr16
push
pop
outsb
in
pop
call
ret
add
in
lods
xor
add
movsb
cmp
xor
les
cli
adc
bswap
test
in
dec
stos
jp
mov
jge
les
out
stos
mov
in
pop
sbb
mov
jne
mov
jl
clc
push
pop
cmp
jle
pop
and
sti
jle
fwait
outsb
xor
fs
xchg
loope
loope
ja
sarl
jo
sbb
in
pop
daa
mov
fs
int
mov
mov
adc
or
pop
int
sub
inc
and
xchg
dec
dec
mov
lret
xchg
xor
sarb
sarl
push
sub
je
enter
movsl
mov
dec
add
dec
dec
mov
xchg
fwait
jp
mov
rolb
dec
jl
xchg
sub
outsl
movsl
std
fsubr
push
popa
sti
inc
enter
push
sub
dec
mov
dec
lock
lcall
jg
fistps
mov
or
jb
mov
iret
stos
and
in
push
jecxz
add
or
cmp
mov
ljmp
outsb
popf
push
jp
pushf
pusha
ds
insb
fs
rorb
sbb
jbe
xchg
loop
lcall
js
mov
jge
xchg
pop
mov
bound
loope
test
int3
push
mov
daa
into
ds
les
and
das
cmp
sub
sub
dec
adc
les
lods
fldpi
outsl
stos
and
jmp
sbb
repnz
pop
dec
rolb
mov
cwtl
cli
dec
lock
mov
mov
or
xchg
or
insb
lods
sub
mov
cmpsl
ret
add
jmp
jp
xor
xor
lahf
dec
add
outsl
enter
xor
arpl
or
nop
rcrl
push
int3
shll
test
lds
sbbb
push
rorb
enter
leave
adc
dec
fnstenv
stc
mov
ja
jae
dec
mov
popa
fwait
arpl
or
adc
xor
push
push
dec
push
in
sbb
out
loope
xchg
mov
jmp
iret
test
dec
in
daa
push
js
les
adc
sub
pop
xchg
fstl
pop
cltd
loop
sub
out
or
jne
dec
in
fdivl
or
cmp
das
fs
xchg
adc
andb
cli
shrl
jle
rcrb
rcr
mov
rcrl
std
loop
inc
and
jae
pop
dec
sahf
inc
jge
out
stos
lea
enter
icebp
outsl
mov
mov
call
jmp
lea
loopne
adc
lcall
fnstenv
gs
call
inc
jmp
daa
push
daa
dec
in
xchg
sub
leave
push
inc
les
jecxz
dec
fildl
test
repz
dec
mov
dec
in
int3
pop
add
mov
or
xchg
dec
cld
push
and
mov
lods
or
add
jmp
push
arpl
or
and
pushf
xchg
xorl
xchg
jae
test
inc
xor
cmpsl
cmpb
negb
mov
push
xchg
dec
ja
xor
cltd
jne
inc
imul
xchg
iret
and
push
sti
js
clc
lret
inc
iret
cld
in
scas
jle
gs
icebp
cmc
mov
adc
mov
mov
sub
mul
xorl
addb
mov
sbb
pop
push
push
scas
dec
fstps
mov
dec
cmp
fnstsw
inc
mov
push
mov
subl
jo
and
rcrb
xchg
cld
or
add
jmp
add
dec
cld
loope
popf
outsl
jne
jns
imul
xor
insb
out
sub
mov
adc
push
insl
and
pushf
push
das
stc
inc
add
int
popa
js
dec
sub
pop
imull
sub
lcall
loopne
dec
gs
cld
or
popf
sbb
ret
test
flds
out
cmpl
mov
into
repz
imul
or
xor
pusha
sub
in
jae
add
pusha
mov
xlat
push
in
push
or
pop
push
mov
out
adc
movsb
f2xm1
xchg
push
jp
cltd
in
inc
and
cmpsb
fcom
mov
call
sbb
jp
push
lahf
leave
and
insl
insl
stc
xchg
aad
sub
jno
ja
fidivrs
loopne
cmp
dec
xchg
jl
xor
cmp
cld
outsb
add
jecxz
pushf
cmc
cmp
orl
inc
subb
mov
int3
mov
data16
sub
or
or
ja
popa
xor
or
pop
pop
jo
jbe
jl
scas
mov
push
mov
adcb
push
mov
dec
xor
mov
sbb
lsl
orl
clc
dec
fistpll
dec
or
js
mov
ficoms
jae
ret
inc
jno
ret
bound
inc
pop
sbb
add
imul
xor
into
jns
push
repnz
xchg
les
xor
lret
mov
call
xchg
sti
rorb
add
imul
mov
pop
lock
test
idivl
mov
jns
lcall
push
dec
cmp
jmp
pop
dec
jb
mov
imul
mov
mov
pusha
lahf
insb
movsl
fistpll
inc
lahf
mov
sbb
add
das
xor
cli
stos
dec
xchg
adc
outsl
scas
mov
pusha
xor
es
out
out
mov
dec
push
je
cld
mov
aam
mov
lock
pop
in
aam
jle
stos
and
jbe
addr16
and
add
jo
andl
mov
popa
ljmp
in
es
shlb
inc
xor
sarl
sarl
leave
xorl
add
lock
xchg
movsb
dec
int3
ja
push
aam
mov
mov
aas
jae
cmp
sbb
push
sub
xchg
push
mov
loopne
es
mov
jo
cmp
addl
mov
mov
jmp
pop
pusha
idivl
arpl
mov
pop
dec
fstl
lret
int3
push
cmc
pop
inc
test
pop
rol
and
and
cmp
inc
xor
les
or
jbe
xchg
addr16
add
adc
xchg
imul
add
jecxz
mov
mov
add
mov
mov
cmp
add
rcl
aad
out
nop
and
in
sub
mov
or
ja
filds
dec
inc
xor
fdivl
mov
ja
pop
mov
aas
xchg
test
add
mov
scas
sub
fbld
or
outsb
imul
jmp
xor
mov
fwait
loopne
mov
sub
push
xchg
ret
sbb
loope
jne
mov
test
dec
xchg
push
repnz
mov
dec
push
xchg
pop
push
aad
jle
dec
pop
loop
xchg
pop
adc
add
inc
roll
jle
mov
frstor
dec
das
aam
xchg
inc
fs
mov
sub
cmp
push
jmp
std
lahf
popf
ljmp
cli
test
fld
in
sti
les
mov
and
dec
dec
xchg
or
mov
rcl
and
push
or
in
loopne
or
inc
das
mov
icebp
jns
mov
or
scas
and
nop
cli
ficompl
enter
pop
scas
dec
scas
fldenv
subl
sbb
mov
xlat
sub
jo
das
xor
mov
jno
jecxz
and
sub
cwtl
pop
jo
pop
insl
mov
ficomps
icebp
cltd
dec
popf
out
aad
cmp
movsl
xchg
push
popa
das
daa
and
jnp
rorb
inc
sbb
ja
mov
cmpsl
push
cwtl
adc
enter
mov
jp
inc
inc
notb
lods
shll
ret
adc
adc
push
fs
fstpl
sub
sbb
xchg
cs
pushf
js
lds
popa
xchg
aad
push
mov
js
jbe
push
pop
lahf
into
cmpsl
shrb
cmp
push
pop
xchg
push
fwait
add
dec
mov
push
int3
mov
mov
push
pop
in
sbb
aad
push
mov
das
mov
loopne
fisubl
mov
mov
loope
andb
xor
aam
test
xchg
into
fiaddl
fnstcw
popa
xchg
insl
inc
jne
push
inc
xor
pop
cmpsl
dec
mov
xchg
adc
adc
leave
cmc
dec
insl
ds
dec
inc
es
cmp
or
cs
sub
jnp
cs
sub
fucomp
xchg
xchg
xchg
xor
push
jmp
imul
shll
fs
into
mov
dec
out
mov
and
xor
lahf
out
xlat
mov
adc
aaa
aas
xchg
fwait
ds
and
push
cmp
jg
sbbl
push
fmull
in
fcmovnu
mov
add
push
test
cmpl
xor
fbld
pop
adc
loop
sarb
adc
or
pop
decl
add
adc
sub
js
sbb
mov
iret
dec
sahf
or
adc
mov
push
xor
rcrb
sbb
jno
sub
out
or
andl
ds
pop
lods
jno
pop
sbb
shll
mov
xchg
xlat
pop
movsl
cmpsl
lea
and
in
push
adc
mov
xchg
nop
das
les
negl
rorl
jmp
add
or
mov
sub
pop
xor
cli
cmpb
stc
inc
test
inc
sbb
ret
imul
in
cmp
loope
in
lahf
ds
cltd
outsb
jecxz
push
jne
pop
addb
mov
inc
aas
cmp
test
or
xchg
sbb
pop
movsl
lret
inc
cmpsl
cmc
or
mov
pop
std
cmpsb
out
mov
jae
ret
insb
es
xchg
pop
stos
mov
jle
xor
push
or
stc
std
imul
mov
lahf
xchg
subl
jne
or
push
idivl
push
cmpsb
rcll
pop
inc
test
shll
in
mov
test
fdivrs
addl
cs
pop
xorb
repz
iret
hlt
xchg
push
scas
cmpl
ds
into
sbb
loopne
cmp
jbe
sub
popa
push
push
lahf
test
mov
and
fidivl
mov
in
or
ret
mov
cmpsl
jle
mov
rol
pushf
sbb
or
sbbb
mov
call
add
ret
cmpl
jmp
stos
and
jno
rcll
fmuls
inc
xchg
adc
out
stos
inc
mov
jge
add
and
pop
xor
mov
pop
mov
enter
pop
or
and
arpl
jne
in
fiaddl
ret
xor
lock
mov
bound
fsub
cmpsb
xor
mov
sbb
fwait
repz
daa
out
rep
fbld
dec
adc
fistpl
push
lock
sbb
ja
ret
adc
and
xor
lret
jge
mov
or
ja
jno
mov
and
xchg
icebp
and
fs
sbbb
mov
cmp
jp
scas
pop
lea
shlb
sbb
mov
jns
mov
fiadds
xchg
inc
xor
std
push
jnp
jnp
inc
push
iret
dec
xchg
ret
pop
xchg
mov
cli
add
insb
mov
repnz
ds
in
repnz
das
mov
xchg
adc
push
dec
arpl
sarl
pushf
and
xor
push
insl
or
sbb
and
popf
repz
insl
cmp
iret
add
bound
mov
stc
lock
pushf
ss
cs
in
lods
pop
jmp
bound
je
ret
mov
and
jge
push
and
pop
lods
jno
test
mov
cmp
inc
push
add
movsl
stos
pusha
stc
mov
pop
inc
out
jle
mov
pop
addps
roll
push
pop
dec
es
cmp
or
fld
mov
cmpsl
mov
xor
lods
pop
scas
mov
outsb
lods
rcll
or
scas
push
sbb
pop
sbb
in
fstps
jle,pt
leave
add
pop
scas
sub
int
popw
je
aaa
iret
loopne
sbb
xor
movsb
cwtl
insb
mov
loop
pushf
jle
das
dec
cmpb
stos
lcall
lods
enter
sahf
stc
xchg
xchg
loope
leave
push
mov
jecxz
jecxz
adc
add
inc
xor
lock
xor
inc
mov
jl
and
add
rcrb
jecxz
inc
leave
or
xor
add
int
cld
sti
scas
sub
sub
jmp
lds
xchg
mov
and
ret
cltd
mov
cmp
in
mov
lds
das
ret
stos
push
pop
xchg
jmp
ret
aam
xor
out
jns
cmpsl
push
xchg
add
repnz
repnz
xor
out
mov
hlt
or
jae
mov
or
jno
jp
xchg
and
popf
pop
and
fwait
aas
mov
jo
mov
imul
jbe
sub
pop
in
cmp
in
repnz
mov
mov
ret
sub
jg
cmp
into
or
in
loop
xchg
cs
aam
mov
mov
shlb
stos
mov
out
xor
addl
jge
cwtl
insl
jb
clc
cwtl
sub
jbe
pop
xchg
daa
popa
loopne
pop
out
mov
nop
adc
pop
mov
adc
sbb
pop
aaa
ja
daa
popf
repz
mov
dec
pop
jmp
lock
push
pushf
pushw
out
std
xchg
repz
add
cmp
ret
shr
aas
jbe
xor
dec
shr
lods
xor
incl
and
mov
pop
xor
sbb
stos
jbe
loopne
or
int3
adc
jmp
cs
push
add
jnp
fmull
xor
adc
lods
adc
xor
inc
mov
loop,pn
cld
movsl
xor
call
aaa
outsl
adc
fidivrs
mov
mov
mov
roll
push
and
jmp
jne
add
cmp
lods
inc
xchg
cmp
lock
daa
sarl
nop
test
jne
aaa
imull
cmpsl
movsb
repz
in
insl
loope,pt
int
arpl
inc
and
sub
sysexit
shlb
pusha
gs
incl
jecxz
out
jmp
or
aaa
adc
and
jg
sbb
inc
out
loop
cs
inc
jbe
push
lahf
push
xor
push
and
adc
add
mov
push
repnz
sub
enter
es
repz
jmp
add
test
pop
rcl
repz
cmp
push
add
aaa
mov
lcall
adc
sbb
pop
mov
push
add
mov
mov
aad
rorl
cmp
and
push
jle
xchg
loopne
fmulp
add
imul
adc
testl
imul
add
fs
push
pop
push
iret
xor
jle
lods
cld
sub
jo
lock
ljmp
cmpsl
pop
in
inc
fwait
sbb
loop
insb
jl
cmpsb
sarl
mov
cltd
xchg
test
sub
mov
fcmovnu
insb
lret
push
dec
dec
xlat
std
mov
imul
mov
mov
sar
shlb
mov
jge
imul
or
cmp
or
mov
jb
repz
mov
xchg
add
mov
pop
adc
xchg
xchg
mov
in
lods
subb
jle
add
mov
or
mov
icebp
pusha
stc
cmp
cmp
je
fsubrs
sbb
push
das
or
push
lock
cwtl
int3
sub
dec
xor
jg
or
lods
push
mov
test
adc
cld
lret
push
fwait
jne
fists
gs
adc
pop
push
xchg
cmp
inc
dec
xor
lock
xchg
lods
out
jns
cmp
cli
into
fnstsw
ds
xor
mov
xorb
inc
push
adcb
ljmp
sbb
inc
dec
test
les
aam
sub
shlb
sbb
stc
adc
mov
sub
test
scas
pop
sbb
add
mov
lcall
and
lods
push
inc
scas
mov
or
nop
pushf
hlt
movsb
add
loopne
enter
mov
and
rorb
jg
mov
enter
rcl
repnz
nop
inc
adc
or
xchg
jno
shll
repnz
dec
mov
loope
test
je
sahf
lock
sbb
cmp
ja
and
fists
or
jg
push
imul
sub
lahf
push
in
repnz
inc
in
and
out
push
addr16
loop
push
jns
pop
rolb
loop
movsb
mov
hlt
hlt
dec
push
mov
sub
mov
xchg
cmp
mov
lahf
mov
add
shl
shl
fs
mov
mov
xor
std
sbbb
mov
outsb
jg
mov
xchg
out
dec
insb
scas
shll
pop
pop
jp
pop
daa
mov
and
fildll
xor
sbb
and
push
mov
or
ja
out
sub
cmc
pop
pop
inc
aaa
mov
jmp
dec
jns
cmc
push
flds
xchg
imul
or
adc
mov
mov
fstps
push
test
xchg
adc
orb
lahf
dec
jmp
pop
test
fmull
mov
mov
inc
jl
inc
lods
mov
jecxz
jne
lods
divb
aam
insb
sbb
push
mov
out
mov
es
sahf
cmp
cmp
mov
mov
adc
mov
cmp
pusha
mov
adc
hlt
lds
sub
push
outsb
xchg
pop
adc
push
testb
pop
mov
lods
popa
test
adc
pop
mov
insl
pop
mov
xchg
push
out
adc
imul
xchg
mov
pushf
lds
pop
into
iret
popf
xor
push
xor
sbb
test
add
cmp
bound
xchg
and
js
pop
push
cltd
and
sbbl
lret
cld
fadds
push
mov
sub
les
inc
sbb
leave
xor
cltd
pop
ret
dec
fisubl
mov
xor
fwait
xor
sti
mov
cmp
clc
sub
sbb
insl
dec
mov
scas
bound
inc
sbb
mov
loop
lcall
xor
mov
mov
cmp
daa
adc
or
mov
decl
repz
inc
mov
jge
xor
lret
sbb
adc
sub
jae
dec
cmc
push
fnsave
stc
push
jge
je
dec
scas
out
es
dec
iret
cmp
test
jae
outsb
sub
sbbb
push
dec
push
add
cmp
dec
push
testb
mov
xchg
jb
mov
sti
movsb
je
mov
rclb
out
sub
into
das
pop
sub
pop
inc
mov
out
ret
out
stos
and
and
shll
add
jns
mov
adcl
cmp
das
into
xchg
jb
pop
fbld
outsb
shrl
xor
lcall
pop
in
jg
mov
out
clc
repz
pop
movsb
sub
dec
js
cmp
ficomps
mov
in
aaa
scas
pop
rorb
xor
xchg
out
dec
in
add
cltd
insb
push
leave
or
mov
inc
std
sahf
ss
js
into
ja
repnz
mov
cmpl
icebp
xor
lods
gs
ret
je,pt
cmp
xor
or
imul
cltd
sub
out
adc
xor
rol
jle
dec
into
es
jnp
and
pop
test
scas
dec
xor
icebp
mov
cmp
dec
mov
fs
xchg
hlt
xchg
movsl
loop
rorb
mov
push
movsl
and
inc
jmp
mov
mov
mov
xor
adc
mov
stc
lea
or
out
push
iret
mov
loope
pop
sbb
xchg
or
fmull
mov
sub
sub
inc
jno
xchg
stos
xor
clc
push
sbb
das
movsl
sbb
outsb
and
xor
sub
jns,pn
push
add
outsl
and
push
inc
xchg
les
xor
in
xor
and
jnp
repz
mov
xlat
inc
loope
jg
push
and
mov
push
jns
pop
bound
adc
std
pop
mov
sahf
sbb
in
push
cwtl
xchg
test
das
jno
add
fidivrl
mov
fiadds
or
xchg
aas
notb
mov
mov
jp
sbb
jge
pop
push
adc
or
push
movsl
mov
add
push
add
les
rorl
mov
stos
or
icebp
add
push
sub
xor
addr16
mov
push
xchg
pop
mov
std
xor
xchg
mov
sub
mov
fs
pop
bound
push
adc
pop
push
sbb
ror
xlat
dec
mov
ret
and
iret
sbb
imul
rol
dec
pop
xor
sub
fistpll
test
pop
aas
lds
pop
xor
lcall
xor
and
cmc
lret
jmp
mov
popf
cmp
xorl
add
mov
les
xchg
lock
aas
aam
dec
and
ret
sub
mov
sbb
aad
mov
xchg
aas
sub
movsl
test
das
mov
jne
push
orb
popa
cmp
int3
cmp
jne
ljmp
aad
addr16
test
mov
nop
int
jno
sbb
add
xchg
xor
leave
pop
rorb
dec
cmp
jns
jne
xor
adc
scas
daa
sbb
in
in
iret
sbb
cmp
sub
inc
mov
notb
cmp
iret
arpl
cmpsb
frstor
inc
or
roll
push
lods
les
rcrb
adc
sbb
pop
popw
pop
jl
outsl
scas
mov
imul
or
adcb
xchg
or
repz
push
add
push
sub
cmp
pinsrw
mov
pop
es
out
rsqrtps
cld
push
imul
inc
xchg
outsl
es
jge
sbb
outsl
push
outsl
bound
sub
sbb
fucomip
pop
mov
ret
sub
imul
cmpsl
dec
sbb
test
clc
fldenv
jb
lcall
jecxz
pop
inc
push
gs
out
popw
jg
and
sub
repnz
sbbb
cvtdq2ps
sub
dec
out
cli
mov
inc
jnp
pushl
std
sbb
lret
xor
dec
cmc
call
bound
mov
inc
mov
icebp
loope
fnsave
sbbl
ljmp
cmpsb
outsl
imul
xchg
cmp
mov
icebp
orl
adc
mov
pop
sub
adc
inc
jecxz
das
mov
mov
adc
cs
addr16
xor
xor
in
mov
cmpl
call
insb
adc
aas
dec
daa
xlat
xchg
insb
adc
mov
lea
xchg
in
je
xchg
xorb
push
cli
xlat
cltd
xchg
in
jnp
sub
negb
das
dec
imul
push
andb
push
dec
xchg
rclb
or
mov
fbstp
call
movb
into
pop
repnz
pop
xlat
rorl
xor
aam
lea
in
push
cli
jne
sub
sahf
rcrl
rorb
ret
or
mov
nop
outsl
mov
push
aam
mov
clc
js
mov
or
inc
lods
cmp
xchg
dec
popa
imul
lock
out
test
or
mov
in
movsl
incl
mov
pop
fs
fildl
push
sbb
mov
xor
cmp
movsl
loop
jo
jae
idivl
mov
fadd
dec
or
xchg
mov
incl
pop
mov
hlt
lds
sbb
mov
inc
hlt
xor
es
lret
cmp
and
or
test
scas
cmp
das
mov
out
fnsave
jae
out
jmp
sbb
pop
or
scas
mov
movsl
xchg
mov
ljmp
shlb
mov
mov
cvtps2pi
fcmovnbe
gs
inc
imul
lcall
fildl
rorl
sbb
popl
int
xchg
stc
repnz
mov
mov
ret
xchg
mov
outsb
xchg
inc
call
movsb
xor
hlt
decb
notb
les
in
jmp
mov
push
push
mov
aas
call
fldpi
aam
mov
ss
fildll
jnp
inc
jp
adc
out
or
rclb
adcl
jl
adc
jle
cwtl
mov
stos
mov
mov
pushf
jb
pop
and
or
sbb
data16
cmpsl
mov
xor
xchg
insl
stc
out
mov
sub
jns
repz
mov
push
movsb
std
lea
push
mov
lahf
lock
stos
outsb
out
imul
cmp
push
or
and
popf
andl
mov
mov
insb
in
sub
popa
inc
shr
popa
and
inc
sbb
mov
sahf
mov
jne
fldenv
sbbl
bound
inc
cmp
pop
add
mov
pop
rcrl
divb
lcall
mov
daa
cmc
pop
aas
ja
pop
shl
pusha
mov
inc
jmp
les
je
dec
dec
cmpsb
enter
repnz
bound
gs
mov
push
dec
mov
dec
stos
dec
fimull
rcll
jb
inc
ljmp
pushf
sbb
adc
out
call
jg
sbb
xor
xchg
pop
cmc
ficoms
add
scas
leave
mov
in
loopne
test
or
mov
adcb
lcall
nop
mov
prefetcht1
sbb
inc
xchg
iret
daa
xor
xchg
mov
cmp
push
inc
dec
orl
jge
mov
mov
mov
dec
fadds
andb
mov
shl
cmp
loop
jbe
lods
xchg
imul
rcll
and
test
std
out
xchg
mov
negb
cmpsb
in
aas
mov
inc
fisubrl
lret
adc
rolb
shl
aaa
inc
dec
aaa
xchg
in
sbb
paddd
out
jecxz
mov
imul
arpl
and
cs
xchg
out
lea
jnp
icebp
fsubs
or
sub
mov
imul
mov
adc
xacquire
stos
jnp
jnp
jmp
ss
cli
xor
dec
std
ret
pop
shl
repnz
ret
cmp
es
sub
add
lret
pop
les
mov
add
cmp
insl
shl
stos
mov
adc
jmp
xchg
push
mov
add
lock
cmp
ljmp
std
cmpsb
out
sub
testl
cmp
add
jno
jle
sbb
pop
fxch
das
xor
in
inc
aaa
js
data16
pop
out
jae
mov
dec
jo
iret
and
jo
sbb
mov
daa
subl
fwait
jmp
mov
and
mov
aas
push
mov
cmc
add
adc
or
int3
aad
push
mov
sbb
jp
lcall
into
mov
inc
inc
lock
out
mov
and
xchg
jl
adc
addr16
push
cmp
popa
int
pop
dec
inc
pop
inc
cmp
pop
popf
push
sbb
mov
and
mov
jp
hlt
cltd
sub
xchg
push
jl
fldl
push
jno
xchg
jno
imul
and
xor
cmp
addr16
inc
lods
loope
fstpl
popf
dec
lret
mov
xchg
dec
je
sbb
ljmp
sbb
mov
dec
sahf
outsb
scas
mov
ret
jge
add
cmc
add
add
call
ds
test
ljmp
cmp
mov
pop
add
imul
sbb
in
adc
mov
mov
out
repnz
adc
push
cltd
jns
sbb
sub
loope
ss
mov
adc
clc
add
pop
jmp
inc
mov
shl
int3
rolb
sbb
test
sbb
cltd
mov
mov
or
jge
sbb
jg
cmp
lea
push
and
stos
fldt
add
enter
repz
ret
pusha
inc
sbb
into
inc
add
add
mov
pop
insb
xchg
test
jbe
jecxz
pop
inc
scas
imulb
inc
pop
iret
out
daa
push
pop
iret
ja
out
repz
xor
out
je
enter
push
jne
push
dec
dec
jg
dec
cltd
xorb
leave
mov
dec
mov
shll
sbb
lock
sbb
daa
xchg
in
aad
idiv
clc
add
mov
xor
mov
mov
ja
mov
adc
cmpsb
mov
test
sub
jo
push
sub
mov
and
or
push
xorl
mov
and
inc
or
outsb
fdivp
or
mov
movsb
mov
aam
push
pop
loopne
xor
fprem
or
aaa
push
jge
fisubrl
inc
fisttpll
ret
scas
sub
test
ret
cmpsl
xor
push
jne
es
clc
ret
movsb
clc
add
xor
lahf
imul
xchg
sub
sub
add
aas
jmp
sub
adc
adc
sahf
rcrb
mov
mov
dec
mov
lret
xor
cmp
mov
cmp
and
pop
outsl
mov
xor
cmp
fstp
xor
rolb
sbb
xchg
pmaxsw
push
stos
shrb
sbb
push
dec
and
scas
mov
idivl
mov
das
gs
inc
pop
or
stos
cmpsb
jne
xchg
imul
mov
sub
and
push
xor
dec
mov
push
test
lcall
push
ret
int
mov
dec
mov
mov
loopne
ret
test
fnsave
int
dec
fdiv
push
imul
pusha
jo
jno
stc
jae
pop
jecxz
arpl
fisubl
dec
fnstsw
bound
mov
aad
jbe
mov
cmpsb
clc
mov
bound
addr16
pop
or
out
sbb
sub
mov
adc
jle
pop
cltd
and
mov
out
mov
inc
or
add
mov
xchg
aas
cs
xor
jl
jb
lret
int
mov
push
es
push
out
mov
insb
adc
sbb
inc
xor
adc
mov
lahf
pop
sub
pop
or
imul
data16
std
jl
test
sub
or
mov
pop
dec
inc
adc
lods
test
inc
loopne
mov
sub
ja
in
loopne
adc
pop
test
cltd
adc
push
gs
mov
imul
pop
loop
mov
out
jg
fnstsw
cmp
sti
sbb
in
dec
jae
mov
or
outsb
cmpsb
mov
decb
pop
add
adc
ret
idivb
mov
add
lret
ret
inc
xor
or
mov
shrb
jae
shl
jmp
int3
fcompl
ret
pushl
fldenv
xchg
fscale
or
cmp
inc
roll
mov
outsl
movsb
sti
lahf
in
xchg
orl
pop
push
arpl
fnsave
or
stos
pop
sti
out
xchg
cwtl
add
mov
dec
fmuls
test
adc
pop
lea
lods
jae
xor
sbbl
add
adc
insl
jle
and
push
sahf
aam
outsb
mov
int
bound
test
push
inc
in
mov
scas
mov
xorl
cmpsl
scas
rolb
addr16
sar
mov
xchg
orb
ret
sub
scas
xchg
js
aam
pop
xlat
adc
mov
sbb
adc
jmp
and
jnp
jns
stc
jae
sti
push
mov
lret
dec
jno
int
push
fistps
mov
ljmp
ret
shlb
sbb
xchg
movsl
mov
daa
add
popf
dec
mov
xchg
inc
aam
int
cmp
ja
xor
inc
sub
or
rorb
fisubs
dec
push
call
cltd
adc
xchg
pushf
xchg
xor
pop
push
push
mov
scas
stos
dec
push
cmp
insl
bsf
and
mov
stos
push
mov
cwtl
pushf
test
repnz
inc
stos
ret
sbbl
cmpsl
cmp
insl
dec
inc
jno
mov
jecxz
adc
jbe
push
je
popa
inc
cmp
mov
out
jae
jne
jbe
jne
stc
stos
push
mov
stc
repz
adc
jb
test
dec
pusha
inc
mov
jmp
jnp
test
add
ret
xor
jle
out
sahf
jb
decb
movsl
cmp
and
sub
jbe
test
push
stos
push
inc
mov
xchg
stos
dec
nop
jne
mov
dec
nop
fchs
daa
lods
or
pusha
mov
and
fwait
or
xor
or
idiv
inc
push
mov
mov
mov
adc
xchg
popf
into
mov
push
adc
add
int3
iret
lret
xorb
cmp
jmp
and
sbb
in
push
les
in
lods
adc
xchg
sub
inc
pop
mov
bound
jle
mov
xchg
es
sbb
cld
jo
repz
insb
in
jp
fs
cld
xchg
and
and
cli
xor
fwait
leave
add
ljmp
flds
xor
orb
mulb
mov
fcoml
loope
or
or
or
mov
or
jle
xchg
sub
pop
cmc
inc
ja
cltd
out
loope
arpl
js
push
xchg
pop
pop
hlt
jp
sub
add
jge
add
cli
pop
mov
jmp
dec
out
mov
dec
ffreep
xchg
sub
ljmp
cltd
arpl
imul
dec
cmp
add
xchg
insl
jl
sbb
xor
or
rorl
or
xchg
aam
shlb
inc
jle
test
xor
pop
fs
inc
popf
fnstsw
pop
cmc
leave
xlat
test
sub
repnz
mov
mov
cwtl
mov
mov
fs
or
jno
adc
mov
in
mov
fwait
aaa
push
lret
mov
pop
int
push
mov
loopne
in
push
cmp
test
enter
mov
adc
loope
xor
mov
stos
cwtl
jle
fs
jl
fadds
cld
pop
pop
sbb
push
xor
inc
pop
cmp
push
gs
jmp
pop
sbb
arpl
fbld
or
sub
out
xchg
or
pushf
xor
sbb
scas
lock
sbb
inc
sbb
jl
popf
aas
int
mov
subl
mov
push
inc
aam
mov
mov
dec
andl
in
and
jb
pop
rorl
sbb
scas
daa
pop
outsl
mov
adc
add
mov
stos
inc
inc
fadds
xor
cmp
adc
cmpsl
push
insl
mov
jl
movsb
arpl
addl
pop
mov
pop
push
addr16
fs
pop
push
push
mov
imul
test
mov
xchg
filds
pop
xchg
inc
mov
mov
sbb
add
push
jnp
or
mov
jne
sahf
fmuls
inc
int
andb
test
push
les
add
lret
push
int
imul
shll
inc
ljmp
mov
insl
pop
mov
cld
mov
or
jecxz
nop
cs
das
xor
cmc
jmp
inc
xor
outsl
sbb
sbb
xor
adc
mov
in
push
in
andl
inc
icebp
js
add
repnz
lods
fnstsw
cmp
xchg
pushf
adc
cmpsl
ficomps
mov
or
cwtl
and
xchg
imul
cld
inc
xor
xchg
fcmove
dec
inc
js
add
shlb
xor
ds
out
xchg
int3
notl
mov
sub
xor
dec
iret
ja
xor
sbb
mov
dec
inc
sbb
sbb
aas
inc
cli
nop
sub
push
jle
jge
xchg
test
sub
or
or
in
test
mov
scas
stos
xor
hlt
mov
mov
pop
outsb
in
lea
into
ficomps
cli
addr16
notl
paddusb
pop
push
fnsave
pop
add
jne
stc
pushf
movsb
mov
dec
shlb
shll
or
push
shll
dec
cmpsb
bound
dec
pop
mov
outsl
sahf
cmp
fistpl
mov
imul
sahf
cmp
push
sub
into
sbb
mov
inc
aam
fidivs
xor
ljmp
cltd
arpl
inc
sub
scas
std
jno
mov
lahf
repz
push
sub
push
inc
std
outsl
xor
nop
out
outsl
fcmove
cltd
push
inc
inc
pushf
fbstp
enter
aas
jbe
out
ret
and
push
sub
notb
shr
les
out
push
and
mov
jo
jge
xchg
pop
test
jp
xchg
es
mov
add
add
ljmp
sub
sbb
imul
gs
cmp
js
mov
test
mov
xchg
fs
add
in
mov
mov
adc
xor
sbbl
test
adcb
orl
or
adc
scas
insb
push
cmpl
sbb
xchg
cmc
inc
popa
mov
pop
outsl
mov
shlb
dec
sahf
jno
sbb
int
pusha
stc
loop
ret
inc
mov
icebp
bound
stos
outsb
cmp
push
pop
repz
jnp
xchg
cmpsb
ret
or
ret
add
clc
addl
xchg
sbb
inc
sbb
xor
insl
repnz
add
sbb
addr16
sub
mov
jae
push
jg
lock
mov
sub
sub
xchg
mov
addr16
movsb
xchg
mov
sub
cmp
xchg
cmp
and
ret
popf
fwait
outsb
nop
push
push
xchg
jmp
inc
mul
test
outsl
xchg
and
icebp
mov
leave
fwait
mov
test
xor
add
lea
fsts
sti
icebp
sbb
pushf
int
or
cmpsl
add
ljmp
adc
arpl
adc
enter
stos
mov
sbb
ljmp
fdivs
xlat
fisttpl
jbe
andb
shll
je
push
and
cwtl
xor
cli
push
movsb
loope
lock
cmp
movsl
push
sub
pop
mov
add
adc
fwait
mov
xchg
sub
xchg
push
ss
vcvtps2pd
icebp
jns
push
cltd
adcb
jo
repnz
add
mov
cmp
int
sbb
fadd
jp
aad
push
fnstenv
ret
mov
sarb
pusha
xchg
out
movsl
jp
lret
and
xor
push
add
pop
cmp
xor
das
and
popa
filds
push
pop
mov
or
or
mov
xchg
stc
push
loopne
push
push
push
jg
cmp
or
xor
push
and
sar
icebp
mov
test
jecxz
pop
dec
push
idiv
fmull
push
lds
out
int
mov
insl
hlt
ja
ljmp
bound
cmpsb
push
jno
lret
dec
and
jno
pusha
jb
add
sarb
movsb
xlat
add
stc
loopne
fwait
das
lods
shrl
pop
or
mov
xchg
jae
aam
add
sahf
xor
xchg
sbbl
jns
test
es
push
mov
sbbb
sti
ficomps
xchg
int3
jae
call
cmp
dec
in
mov
test
rclb
ret
cmp
or
cld
das
sub
call
lret
jle
stos
adcb
fiaddl
pop
or
mov
mov
or
outsb
cmp
fcmovnu
testb
shlb
sub
pop
hlt
iret
push
pop
bnd
stc
xor
cmp
sub
sub
fildll
and
divl
in
add
pop
jno
xorl
push
xor
pop
dec
je
sbb
divb
mov
sti
fstl
or
ja
pop
inc
mov
mov
add
mov
push
pushf
inc
ljmp
push
push
jg
pop
xor
inc
xor
push
pop
test
call
adc
inc
cmp
and
adc
out
std
in
pop
and
lods
xchg
cs
loope
repnz
pop
daa
mov
popa
cld
test
mov
inc
ret
pop
sub
data16
movsb
test
icebp
ficoms
lods
roll
mov
pop
rcrl
push
pop
mov
jl
adc
inc
pop
add
outsl
sub
sbb
pop
sub
std
movsl
push
inc
mull
test
xor
xchg
jbe
xlat
out
add
sbb
cwtl
cmp
icebp
lret
sub
and
icebp
inc
aad
dec
inc
push
xchg
cli
mov
imul
lret
push
sub
dec
push
stc
in
daa
fmuls
repz
fmull
push
pop
mov
inc
dec
inc
xor
sub
mov
cmpsb
xchg
js
push
push
cmp
fs
jl
lods
sbb
mov
push
ss
pop
jb
mov
xor
lahf
popf
enter
aad
movsb
jp
pushf
lret
test
test
ss
and
jnp
adc
lea
bound
and
out
pop
or
test
or
inc
pushf
jno
sub
out
mov
aam
out
in
mov
jge
and
cli
mov
mov
add
subb
cmp
insl
gs
sti
xor
adc
pop
sbb
sbbl
mov
outsl
stc
mov
cli
inc
push
dec
mov
xor
in
and
xor
sbb
outsb
out
popa
xor
pop
arpl
mov
lods
repz
ds
les
cmpsl
sbb
push
cmp
pop
inc
sbb
rclb
add
ljmp
add
nop
out
adc
mov
mov
jae
mov
inc
lods
add
test
cmp
add
xor
popa
xlat
push
mov
sbb
inc
mov
cwtl
imul
mov
mov
push
push
mov
xchg
gs
mov
or
clc
addr16
call
leave
cmp
push
loopne
dec
les
inc
push
inc
mov
lahf
push
push
xor
lods
aas
xchg
adc
push
outsb
test
iret
mov
stc
xchg
shr
pop
push
test
aas
test
sbb
push
mov
loope
pop
mov
fisubl
movsb
inc
mov
add
pushf
push
ret
add
repz
xor
inc
notb
movsb
xor
js
inc
sbb
mov
lret
push
add
addr16
dec
push
cs
ret
test
and
jle
jmp
dec
mov
mov
pushw
sbb
push
in
popa
fiaddl
lods
add
xchg
rep
rorl
orb
xor
cmp
popa
lock
ss
mov
imul
fs
push
out
add
lds
push
ss
xor
mov
sub
xchg
mov
mov
sub
or
inc
fidivrl
pop
jns
lds
stc
sbb
inc
out
xor
pop
jg
neg
mov
cwtl
repnz
pop
xor
fcmove
dec
sub
and
mov
jg
bound
jle
sti
jge
add
sub
adc
xor
es
jg
xor
add
push
mov
andb
sub
ficoml
cwtl
push
push
aam
xor
fs
imull
xor
in
inc
push
dec
mov
fsubl
outsb
mov
ret
xchg
andl
sarb
into
mov
mov
and
lret
shr
jmp
or
jo
jmp
cmp
and
arpl
mov
gs
mov
daa
outsb
test
xchg
sbb
xor
aad
push
add
cmp
mov
push
pop
xchg
iret
out
mov
mov
mov
test
dec
rol
sbb
test
and
pop
xor
xor
and
jp
cs
imul
mov
loop
test
ljmp
push
jb
and
call
sbb
int3
and
mov
or
je
mov
lret
pop
icebp
popf
lret
mov
jl
int
mov
lds
mov
into
lods
popfw
leave
cmp
les
cmp
rorl
test
in
xor
std
loopne
xor
pop
cmp
in
bound
mov
pop
in
stos
xor
or
loop
lahf
inc
ljmp
sub
insl
xor
ret
sbb
cmpsl
ret
and
inc
sbb
inc
jnp
mov
adcb
cmp
cmp
mov
fcoms
jp
sub
incb
pop
push
pop
mov
inc
scas
scas
inc
and
adc
sbb
scas
and
loopne
stc
ret
push
dec
inc
mov
in
vpsubsb
sbb
mov
loope
xchg
xlat
inc
inc
aaa
mov
push
scas
fildll
xor
daa
test
xchg
pop
push
imul
and
mov
mov
out
int3
scas
data16
cmpsb
ret
add
sub
cwtl
mov
outsb
aas
mov
xlat
in
pop
iret
lret
push
inc
adc
mov
out
fildl
push
insl
sub
mov
adc
push
adc
jns
or
pop
orb
jp
lods
pop
mov
xchg
adc
sti
push
and
ljmp
rcl
mov
or
out
dec
xchg
cltd
fnstsw
dec
push
jb
stos
cli
pop
outsl
insb
jne
xor
mov
lods
fimull
aaa
lds
cs
icebp
sbb
jb
mov
loopne
xchg
mov
enter
loope
push
and
sbb
mov
mov
cmpsb
out
adc
cmp
mov
sbb
pop
or
and
adc
mov
stos
mov
ds
cs
and
mov
pop
jmp
out
cmp
add
mov
test
push
mov
int3
movaps
xor
jns
adc
imul
xor
cltd
jmp
sti
jp
adc
insb
rcrl
adc
flds
push
push
jb
movsb
iret
lcall
in
and
out
stc
loope
or
dec
cmpl
cmc
icebp
jp
mov
cmpsl
ret
fmull
addl
xchg
mov
roll
pop
cld
jns
repnz
dec
push
movsb
into
jo
mov
pusha
mov
cmp
inc
or
cs
fdivrp
jns
imul
and
cltd
jl
sbb
mul
dec
jns
sbb
add
aas
xchg
sbb
shlb
dec
into
aas
jae
fimuls
divb
mov
and
cmp
jle
pushf
or
in
push
aaa
xor
and
push
lds
and
cld
ljmp
scas
pop
out
hlt
push
shl
scas
xchg
mov
jg
and
test
xlat
test
jp
outsb
sub
stos
jge
mov
xorl
xor
xor
fwait
addr16
add
aad
out
fmull
ret
add
adc
xor
outsb
repz
push
xlat
hlt
rolb
cmpsl
or
std
lcall
fmull
jge
jp
push
mov
test
cmp
push
addl
pop
pop
mov
add
cmpsb
int
cmp
adc
add
pop
jg
fucomi
fst
xor
xchg
fdivl
outsl
jp
jg
inc
iret
add
jp
inc
xchg
arpl
iret
push
rcll
imul
adc
push
pushf
mov
test
js
es
mov
ret
cwtl
test
push
insl
dec
add
mov
aas
sbb
push
xor
iret
cmp
ja
mov
mov
mov
dec
aam
cld
and
pop
sub
pop
mov
pop
cmp
vpand
fs
add
push
sub
cmpsl
push
sar
xchg
add
fmul
jo
xchg
xchg
inc
gs
arpl
adc
mov
pusha
sbb
sbb
enter
xchg
pushf
mov
jg
scas
idiv
inc
inc
push
xor
imul
xor
movsb
lahf
rorb
in
lods
mov
das
out
pop
cmpl
or
aaa
pop
iret
mov
lock
into
imul
push
rorb
and
hlt
rorb
ret
add
rcrb
sub
pop
hlt
and
jl
sbb
adc
mov
hlt
xorl
jb
sub
push
in
outsb
sub
dec
cmpsl
push
rorb
xor
fwait
dec
push
pop
lds
mov
es
dec
call
mov
test
dec
mov
cmpsb
push
jmp
imulb
or
sub
ret
sbb
fldl
adc
es
out
xor
push
xchg
shlb
or
rolb
decl
pop
sub
loop
dec
lret
mov
xor
pminub
xchg
in
int3
cmp
mov
out
mov
adc
mov
or
inc
repnz
and
dec
das
adc
push
or
fisttpll
mov
leave
add
mov
inc
fdiv
or
femms
add
jo
dec
mov
sub
aad
inc
cwtl
mov
pop
lcall
push
push
cmp
mov
ljmp
adc
mov
call
cmp
pop
imul
mov
js
cli
mov
cmp
fdivrl
jno
mov
or
popa
push
insl
sub
mov
out
leave
pop
and
xchg
lcall
insb
daa
dec
and
xchg
pusha
loopne,pn
cmpsl
dec
add
mov
fisubl
and
adc
repz
mov
outsl
add
lret
in
lcall
fcoms
subb
mov
inc
clc
fldcw
cmc
pop
push
pop
popf
sbb
pop
fwait
jno
and
rorl
cmp
push
shll
adc
arpl
sub
xchg
int
push
dec
test
rcl
xor
pop
shlb
inc
xchg
fiadds
inc
enter
pop
insb
das
nop
add
sbb
andl
insb
pop
bound
mov
add
mov
lret
cmp
xchg
lahf
mov
xchg
or
ja
into
jno
or
daa
divb
loope
pop
inc
sbb
inc
mov
cmpsl
das
sti
aad
imul
out
sbb
lcall
jge
leave
sub
cwtl
fisubl
movsl
sub
test
adc
out
ljmp
into
stc
fs
or
mov
jno
jbe
out
mov
imull
test
and
jne
mov
pop
and
ret
cmp
imul
hlt
aam
icebp
popa
add
xor
xor
cmc
out
fdivr
mov
outsb
daa
push
lret
push
outsl
rorl
loope,pt
add
data16
test
rorl
stos
mov
cmpl
lret
aas
dec
test
test
jb
mov
leave
in
cmpsl
test
dec
cmp
aad
pop
or
or
sbb
mov
xor
mov
xchg
int
sub
in
aaa
xchg
mov
and
inc
test
adc
loopne
pop
pop
nop
mov
mov
outsl
mov
les
and
ret
push
pop
les
sbb
and
and
push
in
es
adc
jns
adc
lahf
adc
sbb
mov
ljmp
imul
faddl
inc
rcl
mov
mov
sub
mov
cmpb
lret
mov
test
mov
fisttpll
out
xor
push
loope
ljmp
mov
lods
sti
inc
sub
or
mov
lahf
xchg
xor
push
les
sub
pop
int
lock
push
and
cmp
cmc
ljmp
adc
sbb
sbb
jg
imul
cli
les
ret
scas
mov
mov
cmp
jp
xlat
xor
ret
jle
push
jbe
movsl
adc
sbb
int
movsb
add
mov
jmp
jmp
adc
dec
inc
xchg
bnd
cmpsl
mov
push
push
clc
std
push
inc
loopne
pop
outsl
inc
ret
and
cmp
sub
inc
mov
out
les
stos
sub
popa
mov
dec
in
loop
cli
jmp
adc
aaa
and
ss
mov
mov
cmpsb
dec
cmp
dec
in
movsl
jnp
leave
push
lock
and
jmp
or
xchg
fistps
sbb
and
frstor
inc
push
outsb
roll
lds
pop
sbb
xor
xor
fwait
sub
cmpsb
inc
test
cmp
jmp
pusha
mov
and
mov
adc
pop
icebp
lock
inc
call
andb
adc
sahf
fstpt
adc
movsl
jle
push
fsubrl
mov
cmp
je
fwait
adc
ret
lahf
or
adc
fildl
int
jne
repz
pop
push
mov
lahf
testb
xchg
or
jp
inc
pop
cli
or
add
and
mov
xorl
jl
fstpl
incb
sub
and
pop
push
inc
cmp
loopne
adc
sub
or
insb
xchg
cmpsb
popa
scas
sbb
ja
addl
push
aad
jge
sti
pushf
mov
push
test
leave
mov
jge
pop
bound
jmp
inc
xchg
lret
mov
xchg
mov
adcb
lahf
cmpsb
ficoml
pop
dec
jp
jl
adc
ss
lds
dec
add
mov
push
ret
xchg
mov
out
dec
cmpb
rorl
stos
das
pop
cwtl
add
dec
push
and
loop
and
push
and
and
sbb
push
dec
pop
or
jp
mov
push
imul
inc
dec
push
adc
pop
or
sti
sub
addr16
in
cmpsl
xchg
out
cmp
jmp
test
mov
xchg
push
stc
mov
inc
jno
mulb
movsb
das
enter
insb
or
scas
movsl
and
and
adc
into
and
pop
mov
movsb
inc
xor
cli
sub
xchg
mov
xchg
rolb
ds
rolb
sbb
movsb
pop
insb
add
sub
or
jg
push
push
stos
jle
jns
adc
mov
pop
mov
sahf
jg
cmp
iret
mov
xor
pop
inc
add
add
cld
xchg
clc
enter
cmp
or
cli
cmp
mov
sub
mov
into
and
push
xchg
orb
mov
push
movsb
test
push
fstps
jno
mov
je
mov
sbb
pop
mov
dec
test
lcall
jne
dec
and
in
sub
push
sbb
pop
std
jge
add
or
mov
mov
pusha
lock
inc
sbb
cwtl
mov
js
dec
divl
sub
mov
setae
xor
loopne
dec
leave
jg
jnp
mov
lret
push
dec
mov
negb
leave
xor
push
cmp
cmp
fldenv
aam
sbb
dec
jmp
cltd
cmp
push
mov
fstl
sbb
imul
inc
out
enter
cmc
sahf
and
outsb
pop
imul
test
dec
sub
mov
ror
popf
scas
fisubrl
sbb
sti
xlat
pop
add
cmc
jp
add
add
xchg
sub
popa
or
repnz
lret
mov
fcmovb
fs
jns
fwait
jns
es
xchg
xchg
and
movsl
xchg
hlt
push
addb
ror
mov
xor
pop
insl
clc
andb
fdivl
aam
or
rcl
push
fisttpll
push
and
xor
jae
or
lcall
sub
stos
fs
inc
dec
mov
in
idivl
imul
fcoms
je
inc
pop
jmp
test
movsb
andl
mov
std
enter
add
dec
push
lcall
scas
xchg
xchg
std
mov
clc
sub
jl
fldenv
out
mov
enter
clc
pop
dec
popf
mov
jb
mov
adc
cmp
icebp
jmp
ret
sub
aaa
adc
dec
cmpsl
and
xor
pmaxub
xlat
or
xor
or
popa
sub
jae
and
cmp
push
add
in
lods
pop
mov
cs
adc
xor
push
out
mov
pop
pop
xor
sbb
loope
popf
jle
jle
mov
or
mov
fcomip
dec
inc
hlt
mov
jbe
outsl
dec
pop
push
inc
ss
and
stos
add
fbstp
pop
popa
out
jge
and
stc
jb
xor
xchg
xor
xchg
enter
icebp
shl
xchg
xor
repnz
mov
xchg
sub
rcl
cmc
add
mov
sbb
dec
iret
mov
jo
xchg
addr16
mov
subb
addr16
jb
dec
jmp
into
jae
adc
jno
pusha
mov
das
xor
les
leave
add
adc
xlat
fs
or
pop
ret
cmovl
gs
push
int3
fldenv
pop
push
fisubrl
ljmp
loope
aam
fmuls
lea
mov
enter
dec
push
gs
pop
fistl
mov
js
adc
push
lret
loopne
addr16
in
mov
cwtl
push
pop
adc
and
es
andl
fcmove
jns
inc
or
cld
repz
jnp
ja
int
out
pop
xchg
or
push
xchg
xchg
xor
jp
lea
rclb
fstpt
lret
add
mov
adc
ss
dec
xchg
addl
js
jno
in
int3
sub
push
inc
cvtpi2ps
pop
xor
call
xor
lock
inc
outsb
xchg
jbe
or
aad
cmp
cwtl
stc
mov
cld
xchg
cmp
push
lcall
or
inc
pop
js
rclb
fwait
inc
dec
andl
addl
jl
popf
mov
gs
mov
add
pop
in
jle
add
arpl
popl
pop
and
je
mov
divb
sub
imul
sub
jge
dec
and
or
cs
mov
pop
pushf
aad
sbb
aaa
js
add
mov
cltd
into
mov
adc
aaa
rcrb
mov
rolb
mov
xchg
adc
mov
inc
dec
clc
push
decb
aam
int
icebp
ret
add
mov
repnz
add
or
ljmp
pop
fwait
add
lock
mov
ret
add
or
push
sbb
icebp
int
sbb
fdivs
call
push
cmpb
mov
loopne
stc
popa
pop
mov
and
mov
sbb
rclb
leave
stos
add
sub
xor
adcl
or
xchg
cmp
ret
bound
imul
ljmp
cmp
es
pop
daa
sub
repz
loope
mov
add
push
sbb
dec
leave
sub
add
leave
cld
pop
addb
inc
stc
jge
ds
add
jns
fistpl
xor
or
pop
call
mov
insb
outsl
pop
push
mov
sbb
fwait
xchg
or
xlat
jnp
int3
push
mov
dec
shr
adc
loope
sub
inc
je
lods
and
stos
orb
bts
js
xor
out
xor
test
lock
test
mov
push
sub
xchg
dec
adc
and
shlb
outsb
cmp
push
outsb
xchg
cld
pop
pop
adc
and
mov
pop
pop
sbb
mov
pop
mov
loopne
lods
cmpsl
cmp
arpl
inc
mov
js
aam
xchg
das
repnz
cmp
adc
push
clc
clc
cmp
popa
movsb
cmpl
pop
sahf
or
push
cmp
jbe
mov
xchg
lret
cld
mov
fwait
lret
nop
imul
cltd
loope
xchg
cmp
or
jmp
and
cwtl
or
xchg
ss
jge
rcr
mov
push
insl
sbb
mov
dec
push
dec
enter
sub
cmp
sbb
push
sub
pop
lds
outsb
mov
es
adc
cmp
push
movsb
jge
jge
jae
cmp
sahf
mov
decl
xor
jne
pop
lods
or
cwtl
or
xchg
pop
shlb
add
add
stos
push
add
sahf
scas
add
jmp
sbb
cmp
repnz
ret
cmpsb
mov
add
jmp
dec
xor
fdivrs
ds
push
lods
mov
cltd
lret
sub
pop
pop
bswap
mov
and
cmp
stos
mov
out
cltd
fists
lods
xchg
mov
pop
nop
leave
rolb
jp
fnstcw
push
loop
dec
lock
mov
jb
dec
inc
inc
daa
mov
negb
and
int3
jmp
stos
mov
loopne
insl
xchg
stc
testl
xor
fidivs
shlb
mov
mov
out
or
inc
and
mov
ja
mov
fstsw
std
vpmaxub
imul
into
mov
pop
jbe
fstpl
mov
cmp
or
add
xor
pmulhw
je
xchg
aad
sub
pop
jns
sbb
xorb
std
xchg
lret
mov
neg
lock
adc
pop
jbe
std
mov
or
xor
push
or
int
icebp
adc
push
push
jno
cmp
addl
add
cld
in
out
pushf
jle
pop
in
pop
test
sub
mov
fstl
repnz
jl
push
pop
sub
mov
insb
mov
mov
sbb
push
cmp
push
test
cmp
outsb
repnz
rcll
repz
sbb
xchg
mov
test
outsl
mov
push
xor
cmp
out
mov
aaa
dec
pop
outsl
test
mov
xor
das
cmp
jae
js
insb
lahf
and
xchg
addl
mov
jns
imul
or
leave
cmp
cmp
cmc
enter
scas
popf
xchg
add
jbe
cmpsb
pop
push
stc
mov
iret
iret
cld
je
aaa
mov
cmc
mov
mov
xlat
inc
mov
push
xchg
enter
popf
pop
sbb
stc
lea
icebp
jle
inc
adc
cmp
push
push
dec
ror
jle
cmp
jge
push
jmp
mov
inc
mov
dec
clc
shlb
pop
repnz
enter
mull
addr16
mov
and
lods
mov
aaa
lock
cli
xchg
rcll
push
ret
inc
sbb
dec
mov
dec
leave
inc
jge
sbb
ret
outsl
jmp
adc
lret
mov
ret
push
sbb
adc
stos
stc
jge
lods
fcoms
lcall
lea
push
dec
pop
ja
dec
test
sub
or
pop
pusha
scas
lea
repz
xchg
cmp
nop
jne
rcl
addr16
cmpsb
jbe
and
jl
fmull
mov
pusha
test
mov
jecxz
cmp
in
test
jo
adc
popa
cmpsl
xchg
fimull
xor
dec
cmpsl
xor
xchg
outsb
pop
mov
roll
into
in
sub
pusha
cmp
test
mov
dec
dec
and
xorb
popf
lret
dec
sarb
push
jge
sahf
cwtl
push
out
repz
out
shrb
addr16
mov
and
jp
mov
aaa
mov
rep
fimuls
jno
popa
mov
push
xor
in
inc
mov
xor
or
jge
add
xor
pop
add
jb
mov
jbe
push
dec
mov
mov
adc
ret
jg
shlb
add
rorl
and
cltd
push
mov
pop
and
fsubrs
or
mov
mov
je
into
dec
add
shlb
dec
in
mov
scas
shlb
fstpt
inc
in
cltd
lods
not
faddl
adc
int
out
movsl
sub
into
push
push
lret
mov
lret
ss
fs
fstl
jg
jp
scas
add
inc
imul
outsb
clc
mov
dec
repnz
aad
fsubrl
repz
emms
shlb
and
in
out
imul
xchg
fsts
mov
test
mov
push
adc
mov
sub
add
rcll
sti
lahf
pop
das
lock
aas
pop
xchg
add
push
mov
lret
inc
pop
and
pop
jae
pop
jl
push
push
sub
push
fsin
popa
mov
mov
and
jnp
repz
rol
in
test
es
dec
call
fstpt
imul
call
dec
or
inc
sub
dec
cmp
dec
mov
jecxz
movsb
stos
mov
pop
ret
cmp
sti
scas
sub
jp
andb
std
push
in
fsubs
out
neg
popl
add
jns
ret
stc
sti
mov
sub
in
sub
jne
mov
cmp
test
inc
xchg
and
shlb
sti
hlt
xchg
mov
and
into
push
das
cmp
add
sub
dec
dec
jbe
xchg
push
rorb
stc
pop
in
cmpsl
push
or
mov
mov
je
hlt
popf
fwait
loope
push
pop
jo
jecxz
or
mov
dec
mov
mov
in
in
jmp
into
rolb
adcl
cmp
push
and
push
movsb
subb
repz
loop
imul
cmp
push
shlb
xchg
out
push
adc
mov
add
mov
add
dec
mov
xlat
cmp
ss
mov
sbb
jb
pusha
cmp
mov
stc
adc
lea
out
jae
sbb
out
sahf
arpl
in
lcall
xor
std
inc
loope
jno
jg
sub
adc
cmp
cmc
les
add
aas
test
push
mov
lds
lahf
adc
push
sbb
fs
xor
sarl
xchg
push
push
out
scas
rcrb
fidivs
outsl
push
bound
imul
data16
mov
das
jmp
mov
add
jg
popf
xchg
pop
int3
mov
pop
add
movsl
fiaddl
enter
mov
xor
jo
mov
and
cmc
fisttpll
iret
je
scas
or
enter
sbb
jge
fwait
arpl
insb
xor
push
movsl
rolb
xchg
jp
dec
sub
mov
push
xor
mov
jns
adc
xor
outsl
hlt
mov
fs
rcr
jb
data16
stc
decl
fisubl
adc
nop
in
and
insl
fld1
inc
in
shlb
js
adc
orb
jns
dec
pushf
xor
clc
loopne
aam
cli
icebp
pop
aaa
cmc
ds
xor
push
cmp
in
in
out
cld
jo
lret
es
xor
pop
gs
push
lock
push
or
push
cwtl
cmp
dec
dec
pop
scas
push
lcall
jne
sahf
mov
popa
adc
fs
inc
push
or
es
sbbb
xor
je
push
pop
push
cmp
std
imul
pop
in
test
std
in
jg
or
push
popa
rorb
cmp
xor
test
orl
jmp
or
test
jbe
xchg
sub
gs
or
adc
pop
scas
mov
xchg
push
scas
ret
jp
pop
das
jmp
adc
fidivrl
xchg
add
lds
out
and
scas
cli
and
and
imul
push
sbb
push
ljmp
mov
mulb
ds
stos
iret
jl
dec
jle
lahf
inc
push
cmc
push
dec
repnz
jb
dec
push
inc
dec
add
js
cmpsl
dec
pushf
mov
push
dec
nop
mov
mov
les
repnz
mov
movsb
insl
cmp
lahf
adcl
and
mov
ds
jns
lret
es
jg
pop
xor
int3
xor
addb
popa
sub
iret
jb
mov
into
movsb
enter
popf
mov
filds
add
xor
dec
adcb
pushf
test
aad
fstl
mov
inc
pop
addr16
xchg
or
jp
jp
in
dec
jp
test
cmpsl
sub
pop
and
test
mov
sub
or
mov
xor
xorl
ret
mov
decl
sbb
lret
icebp
inc
scas
ss
sti
mov
stos
jne,pn
insl
sarb
sbb
xchg
dec
ret
movsb
push
xor
sbb
add
push
sub
pop
push
mov
rolb
pop
pop
lds
cmpsl
test
add
pushf
aad
or
jg
pop
loopne
ret
or
push
test
push
dec
dec
inc
test
iret
jle
jmp
xor
fcoms
xchg
add
repnz
adc
iret
lods
test
sbb
repz
fsub
pusha
pop
loopne
sbb
inc
icebp
cmp
xlat
pop
aad
mov
xor
rcrb
sbb
shlb
mov
loope
rcll
int
push
mov
xchg
addb
pop
fiaddl
push
idivl
hlt
jo
jno
mov
dec
lds
out
int
rorb
ret
xchg
or
jecxz
loope
inc
push
xchg
aad
lea
fdivr
xor
inc
daa
addr16
lods
test
fcoms
es
jb
adc
movsb
push
adc
mov
rolb
mov
mov
outsb
test
or
js
xchg
mov
in
mov
or
inc
daa
iret
outsb
das
mov
dec
orb
mov
das
xchg
inc
scas
int
outsb
adc
popl
push
addr16
mov
jno
cmp
rcrb
pop
inc
pop
add
hlt
ret
mov
dec
cmpsb
adc
add
imul
mov
add
jb
sbb
jns
cs
add
inc
int3
loopne
and
insl
mov
fs
hlt
sub
insb
scas
inc
sub
or
add
inc
sub
iret
icebp
cmp
xor
in
xchg
pusha
and
push
cmp
jge
fs
jne
pop
xor
scas
and
lods
inc
repnz
in
push
add
rcl
es
sub
jne
xor
xor
dec
or
add
mov
add
shlb
cmc
dec
cmc
test
adc
pop
jno
outsl
and
pop
xchg
fstps
je
or
les
dec
in
inc
xor
jns
xor
shlb
mov
nop
fxch
test
push
push
push
mov
out
xchg
movsb
inc
mov
push
push
xchg
cmp
call
iret
ss
ja
jns
ffreep
and
push
push
mov
and
call
cmp
stc
dec
jnp
inc
ficompl
aam
xor
sbb
mov
adc
push
dec
mov
cmpb
jg
pop
xor
call
pop
jle
push
xchg
or
pushf
decl
fs
insb
gs
jns
push
xor
push
jbe
lret
pop
and
fsubl
pop
jns
mov
sbb
pop
pushf
mov
inc
addr16
mov
ficoms
push
push
aaa
or
lret
lds
xlat
sbb
push
call
add
in
dec
cmc
stc
call
fdivl
ret
stc
stc
testl
lods
test
popf
test
pop
xor
add
mov
inc
incb
add
call
jp
mov
mov
jg,pn
xor
movsb
and
and
dec
pop
push
adcl
scas
movsl
fisttpll
pop
cmp
jb
adc
insb
enter
arpl
push
les
mov
or
out
push
pop
xchg
xchg
out
fmul
loopne
dec
lods
test
fdiv
mov
mov
push
dec
loopne
pop
dec
daa
push
push
mov
call
out
rorb
loope
shr
ret
mov
call
push
cmpsl
sbb
jno
in
out
jecxz
push
insl
push
imul
dec
cmp
data16
jno
roll
cmc
stos
stos
lahf
fisttps
inc
mov
cmp
push
sub
lret
push
push
test
loop
adc
psllq
fnstsw
mov
lret
pop
call
xchg
outsl
jl
and
mov
push
dec
lea
pop
cmpsb
adc
pop
pop
dec
hlt
jb
or
mov
scas
push
test
jp
push
dec
push
or
es
cmp
mov
or
les
jl
in
mov
movsl
jne
xchg
push
in
fsub
cmc
inc
in
sbb
andb
mov
addl
stos
lods
imul
call
or
and
mov
push
mov
dec
pop
adc
dec
dec
mov
pushf
sbb
addr16
in
pop
stos
cltd
add
es
loopne
pop
pop
cmp
lahf
pusha
pop
insb
cmpsb
fisttps
mov
or
pop
jp
jb
sbb
lock
mov
test
push
sbb
in
sbb
lea
std
mull
imul
sarb
xchg
call
inc
stos
arpl
test
xchg
cmp
stc
xchg
iret
cs
jle
pop
pop
dec
add
or
dec
or
cmpsl
xor
int3
outsb
lods
ret
add
jbe
pop
jne
xor
loop
fmuls
xchg
movsb
dec
xchg
sub
mov
shlb
mov
scas
cmc
loop
in
sbb
lea
pusha
das
gs
adc
sbb
icebp
pop
push
jecxz
push
xchg
test
into
cmp
fs
jns
push
fidivs
insb
sar
inc
cmpl
in
sub
cwtl
in
jmp
pop
rcrl
mov
pushl
dec
mov
daa
xchg
cmp
loopne
mov
imul
inc
push
push
popa
push
lret
push
mov
add
shlb
jecxz
scas
mov
xchg
pop
stc
mov
lods
outsb
mov
adc
test
das
add
in
insb
mov
mov
shrl
ret
pop
or
inc
je
dec
dec
dec
stc
call
in
icebp
inc
nop
in
sub
dec
mov
xor
out
adc
movsb
out
icebp
mov
sub
xchg
dec
mov
mov
insl
lods
pushf
push
dec
cltd
lret
jle
pushf
inc
cltd
in
movsl
ds
js
mov
dec
lock
or
aad
int3
popf
cmpsb
stc
lcall
inc
cmp
push
dec
fmuls
int
jno
int
xchg
fsubp
add
orl
push
jne
push
enter
out
xchg
sub
nop
cmp
adc
sub
rol
stc
jns
nop
sbb
sbb
dec
inc
adc
shl
sub
mov
fimuls
sub
or
dec
mov
imul
shll
add
mov
lds
inc
push
insl
dec
inc
push
std
pop
mov
dec
mov
sub
adc
cmp
stos
popa
jmp
mov
int3
sub
dec
pop
scas
cmp
mov
mov
jno
bound
pusha
mov
xchg
in
add
jle
jno
scas
sbb
stc
out
inc
jo
add
outsl
xchg
dec
divb
and
mov
icebp
stc
or
inc
push
dec
int
xor
lret
nop
sbb
jae
push
push
fiaddl
es
mov
mov
outsb
jmp
jg
aaa
adc
xlat
cmp
lock
jecxz
pop
es
call
jl
lret
repnz
ret
outsl
scas
sub
jg
and
ss
pop
jbe
sbb
lret
mov
push
and
pop
xor
sub
movsl
ret
daa
add
jecxz
dec
dec
ds
daa
jmp
and
xchg
pushf
lret
sbb
or
clc
dec
fsincos
ja
inc
lock
jno
pop
xor
jg
cmc
outsl
adc
cltd
scas
or
or
fnstsw
pop
dec
adc
lods
lock
fmuls
lock
add
mov
outsb
mov
and
jmp
pop
rorb
xchg
push
int
mov
rcrl
loop
or
jns
loope
mov
xchg
rorl
out
fnstcw
cmp
sub
cwtl
jl
nop
push
idiv
and
push
repnz
jb
das
sbb
fwait
pusha
rcl
mov
test
or
jge
cli
sbb
xchg
stos
ror
cs
pushf
cwtl
std
jmp
in
dec
pop
lret
idivl
mov
mov
and
sub
fwait
or
fcmovnb
fsts
stos
pop
add
cli
lock
jg
and
cmp
std
lret
add
gs
testb
adc
insb
das
inc
adc
jo
jae
xchg
sub
out
sarl
mov
push
addl
test
mov
fadds
mov
xchg
cmpsl
ljmp
mov
sub
repnz
pop
in
clc
push
push
sti
xor
mov
xchg
xchg
adc
dec
and
cwtl
mov
btc
addr16
in
xchg
sti
imul
inc
adc
xor
dec
jle
sub
add
int
into
cmp
std
xor
push
shl
jge
daa
mov
push
enter
cld
jle
xchg
jnp
out
and
push
mov
add
pop
scas
movsl
fdivl
into
mov
cmpsb
sar
xor
xchg
gs
sbb
push
inc
cmc
adcb
mov
adc
sbb
cmp
insb
subl
sub
je
lods
mov
je
test
jle
ret
sti
adc
sub
stos
push
push
sub
mov
inc
test
push
imul
sbb
inc
mov
push
cmc
test
pop
jl
cmp
add
cmp
imul
push
sub
xor
add
sbb
mov
insl
add
cmp
adc
cmp
lods
ret
fistpl
mov
cmpsl
mov
das
pop
pop
ds
sub
xchg
inc
sbb
js
adc
lods
sbb
lcall
and
sarb
add
ret
mov
xor
mov
aam
lret
mov
sbbb
jb
mov
adc
iret
mov
mov
and
incl
cmpsl
mov
sub
rol
inc
xchg
es
and
jo
inc
mov
add
cmp
cltd
xor
in
or
mov
push
push
out
inc
cltd
or
mov
ja
cmc
mov
add
inc
stc
andb
xchg
push
ja
sti
into
or
dec
inc
test
insl
adc
mov
pop
jae
outsl
aas
dec
inc
dec
cmpsl
dec
xor
dec
mov
pop
cld
fdivl
xchg
inc
lcall
sub
insl
out
inc
xorl
xchg
cmc
dec
stos
inc
ret
aaa
test
mov
loop
cmp
xchg
xor
clc
xchg
gs
add
std
xchg
fsts
aad
push
cmp
pusha
out
cltd
dec
jne
push
fnstenv
mov
mov
dec
test
or
cltd
cmc
and
movsl
dec
lock
js
mov
rolb
in
jle
rcrb
popa
cmp
and
aad
jne
mov
add
popf
push
in
cmp
cmp
adc
cs
jmp
cmp
cmp
or
call
adc
mov
insb
data16
sahf
and
dec
jl
or
ret
addr16
fs
mov
insb
loopne
repz
out
test
push
mov
in
cmp
loopne
mov
ds
mov
ja
mov
repnz
inc
fcmovnu
ret
aad
nop
sbb
mov
loop
add
mov
dec
push
aas
sbb
pop
imul
add
ret
insl
ljmp
dec
xchg
es
cmp
and
imul
inc
or
fwait
add
jo
pop
scas
mov
movsl
adc
mov
lea
je
stos
sarb
pop
sub
aam
jne
jns
stos
cmp
cwtl
jno
stos
mov
adc
pop
idivb
cmpsb
xor
adc
shl
pop
ja
test
test
in
xor
rcrb
sarl
mov
cmp
lret
cmp
and
mov
xchg
sub
push
mov
dec
pop
add
and
or
pop
mov
jbe
or
in
out
xchg
imul
add
push
scas
xchg
xor
inc
lods
js
ljmp
movsb
jecxz
xchg
int
mov
leave
stos
loopne
mov
push
dec
jae
jno
dec
pop
iret
cmp
push
lcall
mov
iret
jp
mov
imull
es
mov
fs
mov
or
add
js
sbb
mov
push
push
repz
int
iret
gs
cmp
sbb
or
iret
mov
adcl
xchg
xor
cmpsb
dec
mov
add
and
adc
mov
cmp
lret
cmpsb
add
into
xor
imul
sbb
and
bound
cmp
arpl
and
cmp
call
fld
adc
adcb
inc
test
dec
sub
xchg
test
mov
mov
cwtl
push
xchg
cmp
inc
fwait
add
and
ja
repz
sub
roll
daa
rolb
cmpsb
push
cwtl
into
js
int3
hlt
sbb
hlt
pop
sbb
mov
pop
or
pushf
mov
ja
sbb
cld
cmpsb
xor
jo
imul
arpl
xor
nop
sub
xchg
adc
icebp
push
mov
stc
leave
sbb
dec
xchg
ror
jne
and
jbe
sti
push
xor
push
punpcklbw
inc
cwtl
sbb
cmp
mov
add
mov
sub
popa
adc
inc
lret
fidivs
mov
in
add
push
mov
aad
daa
sub
idivb
int
clc
add
rcrl
sbb
test
aas
and
adc
sub
mov
sub
repnz
idivl
stc
pop
xorb
enter
pop
dec
inc
ds
pop
fsubrs
ret
adc
ja
mov
push
xor
lods
hlt
xlat
mov
in
lds
int3
add
pushl
push
lds
inc
dec
out
push
cmp
jb
mov
lahf
popa
vcvtdq2ps
addl
jno
cmp
inc
movsl
shlb
sbb
hlt
inc
lcall
je
stc
pop
popf
add
cmp
sub
inc
fcmovne
rclb
push
inc
hlt
pop
sbb
mov
mov
jg
dec
lea
push
mov
jge
flds
cmpsl
or
lock
pop
mov
sbb
xor
fnstcw
je
pop
mov
dec
and
or
xor
es
jecxz
sub
lock
mov
in
sub
fs
jmp
inc
or
rcrb
test
jo
jae
shlb
jnp
inc
push
shl
mov
mov
shr
popa
jnp
mov
jnp
adc
sbb
hlt
jnp
int3
add
lret
xor
xor
mov
inc
add
js
jl
push
aaa
addr16
js
ss
dec
fcmovnu
inc
mov
sub
xchg
aad
pop
mov
psrlq
loop
bound
das
insb
imul
sti
sti
aaa
enter
lret
push
jmp
dec
enter
fsubrl
inc
xor
movsl
jmp
xchg
dec
add
pusha
or
fs
mov
cmp
push
test
es
int
sarl
dec
sbb
adc
test
es
cmp
jb
jecxz
es
stos
or
sti
cvtps2pd
push
shrl
pop
sub
mov
xchg
in
cwtl
jp
push
shll
addr16
mov
sub
dec
mov
orb
das
rorl
push
test
and
pop
push
sbb
aam
mov
sub
sbbb
xlat
je
xchg
inc
cmp
ds
jbe
loop
dec
xor
pop
sub
sub
xor
adc
add
enter
stos
pop
data16
call
mov
nop
cmp
jmp
xchg
xchg
lea
mov
push
test
dec
jle
sbb
lcall
imul
pop
jecxz
push
add
jge
dec
mov
pop
fsubl
ja
fstpt
sub
nop
jne
cmc
ror
add
pop
or
ret
pop
xchg
add
mov
mov
dec
push
push
push
inc
adc
fiadds
cmpsl
outsb
xchg
insb
in
xor
inc
cmp
mov
jp
aaa
add
add
inc
iret
xchg
lea
lods
lods
fcompl
aad
push
pop
sti
xor
in
and
jmp
or
inc
out
cmc
int
jae
push
popa
fcmovb
mov
push
nop
shr
adc
inc
dec
and
fsubrl
jb
aaa
shlb
and
mov
sti
je
data16
and
in
push
lret
jg
sub
mov
lret
jns
mov
fbld
mov
loopne
stos
fwait
push
addr16
addl
inc
std
cmpl
fs
sub
cltd
adc
cmp
fwait
xchg
in
and
nop
inc
pop
xchg
ss
les
cli
push
pop
pop
inc
stos
cmpsb
pop
push
nop
lcall
mov
jne
dec
dec
sub
and
jbe
jg
mov
and
xor
test
repz
arpl
and
xchg
sbb
test
jae
xor
push
xor
int3
pop
or
xchg
lahf
test
xor
inc
scas
movsb
mov
sub
addr16
mov
test
and
cmp
pushf
mov
int3
jnp
repnz
jecxz
mov
sahf
jmp
enter
mov
xlat
xor
mov
test
jns
ret
jno
aaa
push
unpcklps
rorb
and
out
pop
or
fmull
mov
inc
popa
pop
or
and
sbb
dec
mov
and
sub
xchg
shlb
jmp
adc
xchg
push
call
ficoml
pusha
shrb
xor
cli
sbb
jne
addr16
mov
push
mov
xchg
and
repnz
dec
repnz
mov
fcompl
adc
dec
out
loopne
in
cmp
and
imul
loope
mov
cli
xlat
pop
test
adc
ret
mov
mov
sarl
notl
sti
add
inc
into
xchg
inc
pop
inc
inc
cmpsl
sub
cwtl
sbb
nop
fnsave
ret
ret
push
cmp
mov
cmp
fstl
jge
sti
sarb
out
jmp
cmp
push
out
clc
ss
jns
push
cmpsb
pop
dec
lock
out
mov
and
das
mov
repnz
jns
fists
inc
movsl
sub
out
test
imul
or
mov
push
sub
add
rol
dec
pop
fcmovu
or
hlt
or
fs
push
pop
stos
mov
cwtl
mov
mov
mov
insl
jg
adc
in
mov
push
std
inc
jmp
gs
sbbb
mov
or
testb
and
sbb
cwtl
movsl
fimull
xchg
data16
xor
cli
xlat
jl
push
movsl
mov
test
mov
xor
insl
lret
int
adc
roll
movsl
mov
js
cmp
enter
cmp
out
in
orb
mov
sub
pop
gs
ss
out
fnstcw
jb
lock
cmp
nop
pop
mov
mov
dec
cmp
insl
add
add
and
xor
sbb
mov
imul
push
and
sbb
inc
lret
jns
stos
jns
lahf
imul
lcall
dec
inc
and
nop
inc
inc
dec
jl
fistpl
sub
stos
inc
stos
ljmp
push
repnz
orl
pop
cwtl
add
cmp
or
sub
movsl
xor
xor
cmpsl
stos
or
enter
xchg
arpl
add
repz
cmc
int3
dec
out
or
xor
test
pusha
punpcklbw
rorb
stos
ret
add
push
stc
mov
ret
pop
out
cmp
stos
aas
add
rol
push
enter
adc
dec
std
enter
loope
push
pop
mov
sbb
dec
mov
mov
jne
fsubl
inc
testb
pop
lock
dec
test
push
leave
mov
add
xchg
and
cltd
jno
loop
push
mov
dec
cmp
inc
cs
js
mov
jecxz
dec
std
xlat
sbb
inc
mov
mov
mov
popf
out
out
mov
in
pop
lret
adc
testl
addr16
inc
fld1
dec
ret
aaa
fsubl
sub
and
jns
ret
loope
inc
ja
fwait
testl
sub
mov
sub
ret
xor
call
mov
adc
jae
mov
dec
repnz
xor
in
xchg
mov
sti
popa
cmp
loope
repz
push
xor
mov
rcrl
sbb
lahf
dec
add
push
or
cmpsl
das
jnp
jp
mov
xchg
or
jnp
call
sbb
mov
fadd
int
sub
pop
dec
repnz
add
mov
jns
roll
fidivs
loopne
adc
repz
push
out
dec
mov
insl
mov
or
add
add
gs
icebp
jno
nop
mul
lret
fcomip
std
mov
mov
push
ljmp
sbb
xchg
sbb
add
mov
push
stos
js
idiv
je
sbb
ljmp
movsb
enter
fnstsw
or
push
aaa
hlt
mov
pop
mov
fistps
jmp
pop
jmp
xor
fdivl
jmp
inc
out
and
sub
adc
inc
dec
loope
adc
push
cmp
xchg
or
add
xor
std
lret
repz
push
es
lods
xchg
and
pop
nop
sbb
pop
insb
xchg
test
pop
mov
push
xor
fstp
lcall
or
frstor
sub
mov
or
dec
xlat
dec
test
pushf
and
mov
or
fidivs
push
xchg
sub
mov
jno
negl
in
popf
hlt
decb
and
fwait
popf
mov
fwait
mov
sahf
ljmp
adc
orl
inc
mov
xchg
mov
test
dec
pop
out
orl
xchg
push
les
imul
sbb
sbb
lret
adc
sarl
mov
mov
into
pop
xchg
pop
sub
test
lcall
aas
sbbl
push
xchg
pushl
clc
mov
rcr
lock
or
mov
icebp
pop
push
push
cmp
loopne
adc
fcomp
mov
int
stos
cwtl
mov
test
and
xlat
pop
push
cmpsb
push
adc
mov
mov
pop
test
leave
stos
popa
scas
sub
ds
jno
adc
mov
or
mov
sub
imul
inc
push
or
imul
cmp
js
frndint
in
cmp
pminub
push
adc
test
fwait
dec
pop
dec
push
add
clc
loop
in
fadd
add
xor
rolb
fstpl
dec
maxps
lods
jle
inc
mov
sub
xor
orb
xchg
cld
lods
mov
jecxz
sbb
push
xor
shlb
and
sub
mov
cli
adc
sahf
cmpb
out
stos
jecxz
mov
jmp
lods
nop
cmp
daa
flds
lret
cli
push
out
addb
adc
push
mov
mov
ja
xor
sbb
sbb
and
sbb
dec
vmovdqu
mov
adc
sub
xlat
inc
gs
and
mov
adc
rcrb
cmpsb
jno
sub
ret
mov
mov
mov
iret
scas
add
pop
sbb
repnz
sbb
testb
and
pop
les
inc
pop
xchg
jl
cs
mov
mov
sub
leave
mov
stos
fdivrl
xor
mov
mov
adc
icebp
out
clc
enter
pusha
outsl
bound
jmp
call
push
nop
pop
lret
sbb
lock
jno
dec
imul
ja
stos
out
dec
sbb
mov
mov
fmul
mov
orb
or
out
sbb
push
jne
mov
or
outsl
sub
mov
pop
mov
sub
fwait
jno
int3
or
mov
test
adc
fidivs
gs
cmp
std
xchg
sub
xchg
mov
lcall
pop
pop
mov
aas
add
int
sbb
aam
in
jmp
mov
adc
mov
jnp
stos
into
inc
pusha
inc
xchg
rol
inc
adc
test
fstpt
arpl
insb
fwait
mov
hlt
dec
add
lret
mov
sti
enter
dec
fiadds
or
or
mov
mov
xchg
add
ja
cld
push
push
lods
push
push
movsl
jno
aad
dec
mov
dec
pop
sbb
adc
and
inc
and
imul
out
arpl
shrb
gs
adc
out
dec
repz
dec
and
cmp
or
popf
roll
mov
inc
jbe
xchg
or
lods
lock
into
jp
inc
aaa
les
rol
and
into
inc
cmp
fwait
add
cmp
mov
push
cmp
push
repnz
inc
vpsubsb
cld
ret
adc
adc
mov
dec
pop
xchg
sub
jge
rcrb
and
jp
xor
jge
mov
mov
movb
hlt
test
cmp
adc
rclb
pop
lods
arpl
dec
mov
idivl
cs
stos
sbb
lahf
inc
mov
inc
and
sbb
pop
xchg
das
mov
int3
cmpsb
out
sti
mov
xchg
cwtl
lock
fldl
pushf
push
stos
les
mov
xor
mov
xor
adc
mov
jae
testb
sbb
lea
xchg
adcl
xchg
jnp
outsl
les
repz
mov
fisubs
push
fidivrl
inc
jbe
and
test
insb
adc
lock
add
jmp
mov
pop
add
jb
push
pop
push
mov
and
jne
mov
cmp
sti
lret
lea
in
aad
add
cs
sti
mov
mov
sbb
inc
jnp
mov
lds
cmpl
adc
push
ds
insl
jle
push
and
xor
and
mov
cmpsb
mov
mov
fistps
iret
arpl
or
sbb
mov
sbb
jo
push
test
ffree
les
jge
or
sub
notl
jecxz
inc
es
jg
push
push
dec
scas
loopne
or
and
dec
jle
testl
add
imul
dec
xlat
imul
mov
into
mov
cmp
jno
jmp
out
aad
fisttpl
addr16
sbb
and
sub
arpl
shlb
add
mov
adc
mov
stos
out
frstor
jecxz
test
sbbb
sub
daa
sbb
mov
mov
lret
push
sbb
fs
notl
inc
in
ljmp
idivl
pushf
stos
and
fsubrs
mov
iret
adc
xchg
pop
xor
and
test
shrl
jno
sub
mov
push
pop
push
sahf
mov
aad
shl
addr16
inc
pop
imull
int
xor
or
sub
sbb
sub
jp
mov
inc
inc
data16
sbbl
subb
adc
movsb
jecxz
lods
push
and
jno
fcompl
bnd
or
pop
cmp
jle
mov
mov
pop
shrb
test
xchg
aad
xorb
mov
cmp
jecxz
popa
aam
mov
jmp
imul
push
movsb
sbb
movb
jg
inc
lods
in
fiaddl
mov
or
test
mov
sub
jno
mov
filds
push
fsubl
fidivrs
fcomp
mov
shll
repz
es
inc
div
les
mov
and
shlb
jae
mov
test
jnp,pn
sbb
in
js
and
nop
cld
and
fiadds
repz
cmp
push
mov
ret
mov
push
sbb
loop
dec
mov
es
mov
popf
cli
cwtl
fildll
xchg
mov
or
clc
xor
leave
xor
inc
stos
pop
cmp
mov
test
cmpsb
inc
mov
push
adc
lea
mov
cmpb
inc
cmp
fdivrp
mov
sub
sbb
cmc
mov
outsb
repnz
in
pop
or
insl
add
fwait
mov
dec
orb
dec
in
jns
outsl
adc
shll
sahf
push
mov
mov
jge
sbb
push
sti
jg
je
xchg
or
ficoms
add
repnz
pop
add
pop
stc
sarb
into
mov
in
cmpsl
jecxz
xor
lock
or
cmp
mov
push
ret
std
rorb
mov
adc
jp
cmp
incb
adc
adc
mov
inc
mov
add
js
sbb
sti
jmp
jge
out
out
xor
sti
push
imul
mov
push
popf
sub
xor
mov
adc
cltd
cmp
push
mov
es
cwtl
jmp
shlb
jecxz
xor
pop
cwtl
xor
outsb
mov
into
mov
and
adc
dec
shll
adc
cmc
insl
cmp
cmp
sub
mov
insl
movsb
fcomip
push
ds
add
xor
and
jnp
inc
maxps
xor
cwtl
dec
int
scas
lret
sahf
sbb
cs
int
scas
mov
outsb
iret
addl
xor
adc
shrb
xchg
mov
mov
pushf
xor
fcomp
xchg
push
and
add
enter
or
daa
cmc
push
lock
xadd
cltd
pop
push
aam
stc
imul
dec
dec
and
pop
pop
sbb
dec
cmpsl
rorl
test
decb
sbb
pop
addr16
call
dec
insb
call
cmc
mov
in
sub
xor
mov
mov
sbb
cltd
sub
mov
gs
jns
ds
lahf
hlt
mov
mov
mov
pushf
repnz
out
repnz
pop
jg
ret
adc
repnz
xchg
inc
scas
iret
es
iret
ljmp
xchg
imul
cli
xor
xor
in
adc
pop
fstps
out
xchg
push
mov
cmpsl
mov
stos
icebp
fldt
repnz
cmpb
push
addr16
pop
movsl
dec
jp
jbe
xor
sbb
rcrb
fisubrl
pop
lret
push
inc
mov
lods
sbbl
and
fwait
stos
mov
dec
orb
push
adc
cmpsl
push
dec
notl
add
stc
shr
sbb
sub
popa
push
inc
fnstenv
in
jp
mov
mov
gs
cmp
dec
cmp
adc
sub
scas
insb
pop
cmp
nop
mov
movaps
xchg
jbe
jb
test
movsb
jg
pop
outsb
scas
lock
sub
ja
cltd
jo
jl
or
sbb
sbb
jmp
enter
xchg
add
iret
addb
mov
push
rcrl
setp
push
clc
outsl
dec
sbb
xchg
fwait
scas
mov
xorb
fdivs
or
icebp
cs
rcr
mov
mov
sbb
les
or
fidivrl
pop
adc
pop
jb
hlt
jl
xorl
add
mov
push
add
sarb
in
jne
lods
jno
jb
fldcw
jnp
fldl
gs
pusha
sbb
push
dec
jo
popa
sub
lret
dec
inc
lds
mov
aad
aaa
mov
jnp
cs
in
test
push
stos
dec
add
inc
shrb
cltd
xchg
test
daa
pushf
xchg
fiaddl
ljmp
loop
addr16
push
inc
sub
insl
mov
push
ds
mov
in
pop
or
fstps
sbbb
push
nop
xor
frstor
fiaddl
and
das
jmp
pop
dec
and
jne
inc
lods
mov
lea
xchg
insb
jns
clc
jle
cmpsl
shr
fstpl
push
pop
stos
inc
pop
mov
jl
fldl
inc
xor
shll
into
adc
mov
cld
push
loop
xchg
adc
push
xchg
cs
mov
push
push
mov
adc
or
lcall
subb
test
pop
inc
sub
jp
sbbl
nop
add
adc
sub
pop
negb
les
xchg
scas
sbb
in
ljmp
or
cmp
mov
dec
add
inc
data16
loopne
mov
inc
pop
push
adc
xor
xor
lret
ljmp
jge
push
fucomip
xor
movsl
rcrl
and
sub
cmp
or
mov
cmpsb
in
std
inc
or
fistl
push
dec
in
push
push
fiaddl
jg
cmpsb
fwait
push
mov
leave
inc
ds
fdivrs
pushf
jo
add
or
jmp
push
xlat
pop
dec
dec
fcoms
cltd
sarb
dec
mov
or
fldl
and
sub
mov
push
or
ja
aad
int3
push
lea
adcb
mov
fmul
shll
lret
jle
je
cmp
test
scas
pop
adc
jl
xchg
popf
imul
pop
cmc
push
mov
decl
enter
test
sahf
mov
push
push
push
pop
lods
cmp
insl
test
enter
stc
stc
xor
xorb
push
sub
dec
dec
bound
sub
mov
add
and
dec
cmp
dec
xchg
std
push
jge
les
push
movsb
fmuls
mov
into
add
pop
jne
cmp
push
repz
sub
or
repnz
mov
jae
sbb
add
mov
cmp
inc
int
push
pop
pop
in
jle
cld
repnz
add
fucom
jle
cwtl
dec
jp
jmp
fcomp
inc
cwtl
int
and
jne
aam
mov
fnstcw
adc
mov
pop
stos
aaa
pop
rol
sbb
mov
movsl
push
dec
aam
jae
mov
mov
js
mov
pop
add
add
jmp
sbb
mov
mov
lea
shr
aad
pcmpgtw
mov
repnz
aam
mov
xchg
jle
push
clc
cli
jle
sbb
orl
clc
sub
push
fstpl
je
or
and
cmpsl
jmp
jmp
inc
aad
mov
aam
cmp
inc
movsl
rorl
or
shll
nop
daa
out
mov
add
call
mov
orl
addr16
mov
xchg
rcrb
lock
popf
stos
or
mov
cmpsl
adc
mov
dec
push
imul
lcall
scas
pop
jo
insb
pop
and
lret
lea
sub
cmp
hlt
mov
stos
xchg
push
lea
outsb
clc
xlat
adc
scas
sbb
stos
xor
lcall
cmc
or
mov
rcrb
push
sbb
shr
cmp
jne
mov
insb
mov
test
lret
std
adc
mov
jg
addr16
pop
movsb
adc
test
aam
mov
in
sbb
lods
or
test
cltd
insl
ja
dec
std
cmp
xchg
cs
inc
mov
push
ljmp
data16
sub
repz
xchg
and
inc
inc
inc
js
push
out
fsubrs
es
mov
add
sub
movsl
jae
mov
xor
stos
inc
mov
inc
adc
cld
test
pop
cld
ljmp
push
stos
in
cmc
inc
xor
jnp
xchg
in
scas
mov
dec
sub
mov
hlt
pushf
xor
pusha
leave
mov
cwtl
insl
aaa
and
pop
rcl
ss
fidivrs
mov
ja
and
je
adc
in
and
cmpsb
mov
and
cmc
adc
mov
cmp
jge
iret
fnstcw
ds
in
aad
mov
push
adcl
ds
data16
add
aam
ss
adc
imul
inc
pop
mov
out
addr16
std
adc
pop
aam
sub
mov
xchg
sub
or
and
or
push
pushf
sub
jae
repnz
inc
jae
ss
dec
mov
or
pop
or
bound
push
aad
mov
and
outsl
mov
jbe
jbe
jl
cmp
pop
js
mov
adc
fdivrl
push
in
mov
arpl
in
inc
adc
repz
pop
sub
add
mov
sbb
add
jo
insw
daa
or
mov
movsl
cwtl
adc
pop
fildll
add
xchg
rcr
dec
jno
pop
movsl
orb
add
mov
out
cmc
lret
mov
mov
gs
dec
push
mov
jae
std
fs
xchg
lcall
sbb
push
popa
and
aad
hlt
sub
ret
cld
sub
pop
icebp
mov
test
xchg
cltd
loope
daa
sub
dec
clc
cmc
push
or
int3
inc
xor
xor
and
outsb
scas
or
adc
sbb
movsl
pop
or
cwtl
shlb
movsl
lret
bound
fldl
push
xor
lahf
rorl
clc
sbb
into
pop
adc
movb
lods
jo
dec
test
nop
test
sbb
clc
sbb
pop
popa
ret
mov
test
mov
aam
sbb
xchg
imul
adc
cmp
rorb
aaa
imul
add
inc
or
js
ror
pop
ljmp
and
adc
add
aas
pop
xchg
pop
cmp
sti
popf
cmp
pushf
movd
movsb
adc
test
or
cmc
xchg
xchg
push
mov
ret
mov
mov
xchg
mov
arpl
or
bound
sbb
shl
mov
outsl
paddsb
dec
rcrb
sub
lods
mov
mov
test
iret
clc
std
push
arpl
loop
dec
aad
mov
adc
cltd
out
or
jecxz
inc
cmpsl
jbe
cmp
mov
lcall
test
jno
pop
shrl
push
ja
cmp
sub
aas
mov
mov
or
sbb
pop
pop
repnz
fs
daa
shrl
jne
aad
mov
or
or
inc
pop
push
leave
mov
dec
fisttpl
mov
mov
jne
inc
push
outsl
dec
mov
dec
ljmp
ja
lds
push
pop
lock
sub
or
xor
mov
addr16
inc
or
sub
scas
hlt
fldenv
in
bound
dec
rcrb
xorb
push
pop
dec
icebp
pop
pop
cmpxchg
jnp
dec
push
loop,pn
cmpsl
cmp
mov
cmpsb
mov
out
mov
jge
push
xchg
imul
shl
mov
push
cmpsb
cmp
outsb
bound
adc
popa
jo
and
pop
cmpsb
jo
cmpsb
jg
lret
mov
sbb
or
cmc
dec
sbb
loop
mov
xor
and
xorl
or
jmp
popf
jne
add
jnp
std
and
negl
out
fld
lods
cld
scas
inc
lds
xlat
cmpsb
inc
pop
or
mov
sbb
adc
movb
push
imul
jp
pusha
daa
lret
cmp
xchg
mov
in
jg
pop
lahf
adc
push
movsb
in
mov
outsb
dec
jge
or
outsl
dec
aad
outsl
sub
enter
dec
add
cmp
sub
bswap
aaa
sub
sbb
scas
in
stos
je
xor
xchg
arpl
sbb
xor
adc
imul
iret
in
and
xor
xchg
cld
sub
pop
add
notl
mov
lea
pop
mov
push
or
aaa
call
mov
mov
cmc
repnz
das
lret
mov
jae
xchg
subb
sbb
mov
pop
cmp
jle
icebp
arpl
sub
enter
aas
cmp
stos
stc
cmpsl
lods
data16
inc
add
jb
dec
inc
enter
mov
push
test
jo
or
dec
aas
aas
in
jp
insb
clc
pop
addr16
lret
into
mov
xchg
cmp
sti
mov
fisubrl
mov
ds
in
mov
push
add
mov
fdivp
jbe
or
xchg
xchg
sbb
jnp
fdivs
and
lock
and
pop
mov
jge
mov
sar
and
divb
test
push
add
in
mov
rcrb
ret
adc
fdivr
aam
pop
mov
push
sub
pop
xchg
nop
and
lcall
fst
and
inc
gs
fisubs
out
xchg
push
sub
enter
out
test
icebp
inc
mov
jecxz,pn
sbb
push
subl
aaa
lcallw
cmp
dec
call
clc
jmp
fisttps
dec
pop
push
xchg
push
sti
ret
jb
cmp
call
test
stc
sahf
jp
cmp
push
xor
xor
sub
mov
push
jnp
push
inc
ja
cli
mov
shlb
jo
lret
leave
ret
xchg
pop
shrl
push
aam
data16
mov
inc
test
movsl
scas
dec
shrl
mov
hlt
subl
ds
mov
cmp
fisttpl
mov
stos
insb
in
pop
mov
push
mov
dec
xor
je
inc
mov
mov
sbb
mov
sbb
ljmp
sub
repnz
mov
or
add
std
xor
call
enter
inc
or
je
push
mov
dec
dec
push
out
out
aaa
jo
std
dec
ret
pusha
mov
jnp
jbe
mov
xchg
mov
inc
fs
mov
lahf
jp
sbb
pop
dec
sub
les
lods
xchg
addr16
xchg
mov
or
popa
fmull
sub
out
cltd
sahf
push
pop
lods
pop
inc
stc
js
ljmp
or
mov
scas
jmp
mov
or
subl
dec
lret
and
pop
pop
aaa
xchg
push
ret
pop
inc
fdivs
add
push
cld
leave
je
jp
adc
sbb
pop
popa
stos
popf
mov
cmpsb
jae
not
sbbl
pop
mov
cltd
jae
mov
lea
sub
call
add
inc
dec
sub
cwtl
sbb
push
and
hlt
test
repnz
sub
inc
sbb
shrb
inc
jp
nop
bound
add
ficompl
mov
hlt
or
loopne
xor
popf
sub
out
sbb
mov
lods
add
jle
gs
in
push
mov
sub
jmp
sbb
pop
ret
pop
fsubrp
lahf
cwtl
jle
ror
pop
test
xor
dec
and
push
adc
pop
jnp
mov
fsubrl
xor
adc
mov
mov
add
mov
in
or
into
enter
icebp
fisubrs
sbb
cltd
andb
int
mov
push
or
scas
lahf
dec
push
jne
dec
sbb
jne
inc
pop
ja
in
les
out
xchg
add
mov
mov
mov
in
lret
scas
clc
push
mov
das
lods
roll
push
mov
fdivr
mov
inc
xor
and
add
fldcw
sub
lds
or
into
mov
push
ficomps
lods
mov
shlb
or
dec
mov
inc
xchg
out
jb
mov
ret
jp
adc
cmc
or
popf
int3
jp
xchg
notl
push
lret
add
lret
cltd
and
pop
inc
inc
and
lcall
sub
jnp
fstp
xchg
jmp
insl
push
jecxz
adc
js
fs
pop
ss
int3
jne
and
mov
dec
pop
jns
sbb
adc
dec
pop
and
sarb
not
fstps
xchg
popf
scas
rcll
dec
fs
repnz
loope
push
push
fs
jns
leave
xchg
sub
or
pop
loope
xchg
mov
ds
xchg
jns
jle
insb
lods
daa
fdivrs
loopne
inc
pop
and
pop
pop
inc
das
out
and
out
pushf
call
pop
cmp
cs
xor
jecxz
lds
and
xchg
pop
jb
cs
dec
js
mov
shrb
sarb
addl
push
fidivs
or
sub
popa
jbe
mov
jno
daa
fcmovnb
adc
bound
push
add
jnp
aas
test
neg
mov
xchg
sbb
ret
cmpsb
leave
mov
mov
dec
inc
popf
sbb
movsl
dec
movsb
mov
fs
mov
cmp
call
into
sub
and
add
test
int3
insb
or
rolb
loopne
adc
dec
fadd
aas
sahf
xorb
jb
aas
cmp
sub
xor
test
dec
sub
or
mov
test
fisttpll
cwtl
lock
jmp
sbb
pop
mov
mov
sub
shl
es
test
stos
jne
xchg
sbb
outsl
ljmp
imul
or
cmp
lods
negl
push
inc
pop
popa
jne
inc
fisubl
xchg
pop
mov
xchg
popa
fnstsw
jp
xchg
push
nop
mov
sub
push
sub
repnz
mov
inc
or
lahf
mov
popf
pop
xchg
sub
fnstsw
stos
or
insw
push
lds
fsubrl
data16
aaa
aad
in
test
js
dec
rol
jl
fistps
fwait
lret
rcrb
dec
out
xchg
pop
pop
mov
scas
xchg
test
enter
and
xor
test
out
adc
fcmovnu
sahf
ss
daa
enter
daa
ret
cmp
insl
sub
xchg
movsl
mov
xor
cmp
or
or
dec
cmp
push
ds
mov
cmpsb
mov
or
push
add
cld
mov
cmc
xor
and
out
push
loopne
cli
movsb
aas
pushf
inc
out
add
popl
push
out
ds
iret
sbb
hlt
ljmp
mov
push
push
lods
daa
inc
mov
jo
test
pop
movb
fs
inc
add
dec
rcrb
outsb
mov
testl
jle
in
jg
cld
es
dec
movsl
mov
mov
imul
inc
mov
orl
xchg
push
push
push
mov
lcall
aam
pop
and
jecxz
enter
fmul
jp
mov
adc
lods
push
in
push
jbe
stos
jmp
xlat
pusha
add
sub
sub
mov
inc
icebp
ljmp
adc
mov
xlat
ror
add
sbb
inc
sarl
bound
ja
add
jb
pop
js
in
inc
mov
xchg
sub
mov
xor
xchg
mov
sbb
ljmp
hlt
dec
lea
xchg
add
cmp
std
dec
call
aam
cmp
jl
loop
jecxz
sbb
pop
lods
add
int3
or
sahf
jb
push
sbb
ret
dec
fsubl
jmp
jp
add
popf
subl
dec
cmp
push
pop
lcall
cmc
arpl
loopne
stos
pop
out
aas
cmp
mov
outsl
or
cmp
adc
ret
dec
stc
shl
sahf
mov
out
outsl
data16
and
loopne
xorl
cs
pop
mov
ds
dec
scas
pushf
loop
loope
std
neg
xchg
into
jmp
pop
push
or
sahf
cmp
xchg
push
inc
pop
mov
dec
sahf
jns
test
sahf
add
fildll
sub
jecxz
jb
aas
orb
lret
in
xor
cmp
insb
loope
jb
pop
pop
dec
shll
insb
jle
mov
icebp
mov
jb
inc
add
wbinvd
enter
adc
sbb
sub
pop
dec
dec
ret
sub
sbb
pop
push
aas
loope
push
in
popl
mov
adcl
test
js
out
adc
xchg
shrb
jle
imul
popf
std
mov
cmp
iret
inc
and
adcl
mov
dec
jb
leave
sbb
int
inc
ret
lea
jbe
mov
mov
dec
bound
ret
sub
shll
js
out
insl
or
dec
adc
dec
inc
popf
sub
jnp
arpl
inc
xchg
xor
sbb
cltd
shll
push
sub
xor
push
sub
xchg
aad
and
mov
mov
lret
xor
jae
flds
jae
sub
mov
adc
lods
inc
xchg
and
addr16
ret
sub
mov
call
mov
es
js
cltd
mov
push
xchg
fstpt
outsb
in
sahf
mov
outsb
adc
mov
push
mov
fstpl
int
and
inc
movb
stos
pop
jae
jb
cld
xor
and
cli
pop
xor
jbe
test
and
arpl
xor
jbe
jb
mov
fwait
lcall
push
push
pop
push
xor
add
cmpsb
das
pop
and
shrl
mov
mov
pop
mov
lahf
inc
mov
sbb
jbe
adcl
dec
inc
shl
pushf
repz
fwait
dec
scas
fistpll
rcll
cld
shll
add
addr16
push
adc
dec
xorl
mov
aaa
sub
jo
add
pop
call
xor
outsb
jecxz
mov
sti
test
repnz
test
loopne
mov
ja
push
xor
hlt
xor
pusha
ss
arpl
adc
stos
test
cmp
ds
pop
jp
andb
cld
jbe
push
test
in
ljmp
out
pop
mov
cmpsl
jb
lret
adc
cli
xor
jno
mov
test
in
movsb
jnp
test
mov
mov
or
mov
insl
jmp
ret
ret
mov
xor
inc
mov
jmp
inc
sub
adc
xchg
loopne
cmpsl
test
cli
ret
add
xor
repnz
out
pop
pop
je
pop
mov
fisubrl
inc
push
xchg
enter
xchg
iret
idivb
fisttpl
lahf
sub
movsl
clc
sub
inc
in
jecxz
sbb
cmpsl
jnp
test
scas
popf
ret
push
enter
js
shl
mov
leave
imul
jne
sbb
mov
dec
outsb
cmp
test
sub
pop
stos
mov
adc
xor
into
jb
stos
push
sub
push
imul
push
mov
mov
sbbb
mov
mov
lods
lods
push
lret
hlt
xor
or
popa
push
cli
idiv
dec
sub
lret
je
int3
push
filds
bound
lods
add
fstps
jmp
cmp
lock
push
or
aam
push
daa
fnsave
inc
push
cld
mov
jp
and
pop
fistl
jle
or
jle
ret
test
andb
xor
jecxz
movsb
stc
or
adc
adc
jnp
in
shrb
ret
jl
out
test
rolb
and
mov
add
ss
repz
loopne
rclb
dec
push
insl
xchg
ret
int
adc
out
enter
cmpsl
rcl
inc
cltd
lcall
in
jns
mov
jp
xor
and
rcrl
jnp
dec
pop
outsb
sbb
idivb
loope
and
fdiv
aas
cmpsb
loopne
jae
pop
das
in
xchg
adc
sti
sub
jmp
repz
das
or
cltd
movsb
and
mov
insl
mov
adc
movsb
mov
ja
into
jnp
fs
fdivrl
pop
fldt
outsl
add
cmp
sub
clc
mov
ret
test
mov
dec
daa
inc
pop
sub
fwait
nop
adc
push
cmp
je
dec
jmp
mov
add
aas
pop
mov
inc
in
mov
lea
adc
pop
les
add
xchg
sbb
add
repz
test
andl
sbb
inc
mov
into
lahf
iret
mov
insb
cmpsb
xchg
dec
fimull
dec
out
sbb
jge
jl
and
inc
repnz
dec
movsb
pop
inc
stc
sbb
test
sysexit
and
test
in
jle
gs
cmpsl
orl
push
mov
sub
jo
ror
mov
mov
jg
xchg
data16
sub
popf
leave
jecxz
push
aaa
push
in
mov
dec
enter
and
je
xor
lcall
sub
or
shr
mov
push
shrl
and
jge
xchg
jbe
fdivp
lret
cmp
mov
cmp
fucomi
push
sub
jbe
jge
mov
fstps
mov
push
inc
cwtl
and
pop
das
sbb
pop
mov
mull
xor
mov
xor
push
adc
inc
out
push
xchg
fistpll
stc
jle
fildll
icebp
imul
repz
shrl
mov
jmp
xor
pushf
mov
add
mov
add
enter
xor
cmpl
insl
mov
loopne,pt
andb
lret
cltd
or
fs
and
xchg
push
fcomps
dec
stos
out
cmp
or
jp
mov
push
adcl
cmp
jne
lcall
ss
loop
inc
jb
jecxz
sbb
popf
fs
movsl
mov
mov
iret
fidivrs
in
sub
inc
outsl
in
lret
pop
adc
push
push
movlhps
jmp
push
jo
lea
mov
pusha
lea
decl
mulb
js
push
xchg
lahf
jmp
xor
iret
pop
pop
push
test
cmpsb
push
rorl
adc
ja
clc
adc
into
jb
icebp
push
hlt
scas
mov
adcb
xchg
sti
nop
xchg
cltd
mov
gs
out
inc
cs
push
or
mov
in
push
xor
rorb
add
or
sub
insl
scas
icebp
popa
and
inc
pop
mov
inc
mov
lds
cmc
iret
jnp
push
push
lods
lock
fldenv
fdivrs
lds
in
call
and
cmp
lcall
mov
jp
mov
stc
sahf
xchg
mov
inc
shrl
out
cmp
movsb
icebp
cmpsb
xor
cmpsl
lea
std
icebp
dec
dec
xor
xorl
js
add
or
xchg
adc
or
xchg
lods
ret
ror
push
lret
and
ljmp
repz
cmpsb
shrl
out
fwait
mov
stos
or
fwait
sub
xchg
mov
out
loope
jmp
stos
inc
xchg
mov
cmp
or
sbb
sbb
lock
adc
sub
or
imul
sub
scas
call
sbb
ljmp
outsb
mov
or
cmp
aam
pop
jo
outsb
pop
fldcw
adc
jmp
jns
xchg
lcall
repz
mov
fabs
push
adc
inc
sbb
mov
pop
cltd
in
jb
sub
add
add
into
addr16
xchg
mov
dec
sbb
or
test
dec
popf
dec
mov
mov
cmp
ret
in
pop
xlat
sbb
jge
and
push
sahf
in
je
mov
cmp
mov
mov
test
and
jge
mov
dec
sub
xor
cmp
xorb
or
cmp
es
icebp
add
dec
mov
fcomp
add
popa
inc
cmp
xlat
cltd
mov
jmp
add
cli
into
insb
rcl
adc
fldlg2
xchg
loope
xchg
sarl
ret
hlt
daa
cmp
jle
push
xorl
cmp
movsl
out
je
jns
repz
outsl
pop
mov
and
call
xchg
push
movl
cmp
std
or
mul
push
push
jae
xor
mov
mov
jbe
in
xchg
adc
icebp
add
and
fwait
aad
jge
cmp
dec
mov
in
sbb
pop
adc
sub
sub
leave
hlt
test
repnz
or
dec
pop
pop
test
jecxz
aaa
sti
cltd
int
scas
push
jl
shlb
adc
in
icebp
iret
or
fisttpll
adc
test
dec
jecxz
sub
mov
jns
mov
icebp
rclb
aam
jb
xchg
and
dec
cmovg
aaa
xor
adc
mov
dec
mov
cmpb
lret
ds
mov
repz
fildll
inc
sbb
cmp
fmull
xchg
mov
sub
subl
or
mov
pop
arpl
push
fisttpll
fdiv
daa
adc
push
cmpsl
icebp
lods
mov
es
cmpsl
pop
rorl
jb
out
inc
enter
add
mov
jns
sub
push
and
aad
xchg
mov
mov
cld
inc
paddd
inc
mov
decl
cld
ja
inc
sahf
scas
cvtpi2ps
mov
adc
fwait
push
mov
mov
rorb
movsb
lret
nop
mov
xorl
ss
and
xor
push
adc
mov
mov
cltd
inc
cmpsb
jae
sub
ds
add
cli
cmp
adc
sub
aaa
pop
cmc
lahf
add
or
push
push
and
fadds
sbb
sbb
dec
stc
push
xchg
mov
xor
mov
sub
test
sub
imulb
lock
movsl
mov
pop
sub
es
cs
sbb
loope
loop
sbb
mov
jmp
cltd
fsubs
dec
adc
enter
mov
scas
cmpsl
xor
jae
test
out
pop
inc
xchg
inc
xchg
cmp
das
fldl
xchg
roll
aas
in
test
dec
les
pop
and
inc
test
arpl
aad
lea
pop
outsb
pop
xchg
hlt
sahf
or
xor
insb
xchg
std
mov
sbb
testl
sbb
add
mov
jbe
sub
pop
pop
pop
xchg
scas
mov
push
pop
bound
inc
hlt
loope
hlt
fs
andb
sub
jb
shrb
aam
mov
outsb
shlb
scas
adc
xchg
mov
dec
stc
mov
mov
lcall
fcmovne
mov
mov
jg
nop
jb
jge
iret
pop
xchg
stc
shrb
xchg
dec
sbb
test
inc
aaa
and
ja
lock
test
cmp
sbb
sbb
mov
sti
push
xchg
push
xchg
lahf
in
push
outsb
iret
and
or
sti
mov
sarl
loope
add
sub
mov
fstps
xchg
and
test
loopne
repz
and
testl
jae
push
fsubr
out
int
arpl
and
shr
out
lods
fcomps
icebp
pop
pusha
and
inc
inc
and
test
lods
sbb
flds
shl
ret
rcll
inc
out
pusha
mov
bound
mov
pop
std
xchg
push
jmp
mov
sub
out
fimull
ja
mov
push
test
or
cltd
aaa
add
lcall
adc
ljmp
xchg
clc
adc
aad
jbe
adc
test
dec
push
fstpl
aaa
xchg
and
xor
pop
add
test
dec
fldt
cwtl
dec
push
pop
sti
sub
sbb
inc
xor
repz
and
mov
icebp
or
sbb
shll
test
mov
sub
loope
mov
inc
imul
mov
enter
adc
and
jmp
xchg
and
stos
push
sub
xchg
imul
aaa
outsw
lret
rorl
loopne
sti
jbe
pop
insb
fists
pop
or
inc
ret
mov
xchg
arpl
and
mov
roll
add
mov
mov
jo
or
add
sub
jp
pop
rcrl
lcall
orb
mov
dec
push
bnd
mov
sahf
into
mov
nop
mov
push
cmp
call
lahf
fs
jmp
daa
js
jbe
sbb
dec
insb
inc
popa
repnz
test
andl
addr16
cmc
fsubp
arpl
adc
xor
enter
stc
push
mov
scas
mov
sub
or
and
add
pop
arpl
mov
ljmp
mov
lea
mov
ret
lea
add
push
in
xor
inc
xchg
pop
hlt
xchg
shll
dec
xchg
sbb
daa
mov
movl
test
lcall
push
add
jge
sbb
push
mov
dec
test
mov
js
fists
cmp
sub
leave
xchg
fwait
es
jg
fnstsw
hlt
icebp
sub
fstpt
mov
popa
inc
repz
inc
mov
addr16
sub
aas
out
mov
fsubs
xor
imul
rol
push
pop
enter
jns
or
gs
cmp
push
and
xchg
sub
sub
repnz
mov
bound
out
aad
xchg
cmp
or
jmp
and
mov
stos
sbb
xor
int
ja
scas
and
mov
pop
sbb
scas
lcall
daa
xchg
pop
jp
mov
mov
add
sbb
in
test
mov
cmpsb
sub
sub
cmpsl
or
mov
push
jecxz
or
add
popf
or
pop
jns
bound
and
or
popf
pop
sbb
and
jmp
or
lcall
mov
loop
dec
loope
dec
dec
or
imull
push
cwtl
sarb
es
dec
stos
stos
int
adc
xchg
push
pop
pop
aam
loopne
popa
aam
mov
insl
lods
lock
or
movl
adc
sbb
int3
dec
pop
and
aas
or
sbb
mov
shl
or
insl
mov
sub
ficompl
daa
stos
stos
push
push
in
xorl
mov
mov
add
rcl
push
int3
enter
dec
xor
sbb
adc
cmc
andl
jb
and
scas
mov
fisttpl
sub
aad
dec
push
ret
cmp
dec
push
les
shr
jo
fcomi
lcall
xchg
leave
sbb
jmp
mov
inc
or
cmp
scas
and
bound
adc
dec
mov
jns
cmpsb
lret
jnp
ficomps
call
mov
dec
sub
jle
movsl
in
pusha
dec
addr16
dec
and
jecxz
cld
les
lock
imul
xor
dec
push
into
jne
movsb
stc
xor
push
sub
sbb
xor
insl
cmp
jae
push
push
jl
xchg
sbb
push
mov
aas
mov
xor
adc
or
and
mov
fwait
dec
movsb
inc
dec
mov
adc
dec
repz
stc
mov
add
sbb
sbb
inc
jo
test
pop
into
notb
adc
out
xor
out
lds
push
jbe
lock
repz
daa
pop
xor
push
push
dec
outsb
out
inc
insb
push
pop
mov
inc
insb
and
ljmpw
and
jmp
imul
dec
xchg
ss
jmp
test
and
into
daa
inc
sahf
sub
hlt
pop
mov
jne
dec
movsl
mov
mov
push
ret
sti
jnp
adc
daa
cmp
sahf
insl
lahf
jl
outsb
xor
xlat
pushf
jb
push
dec
rol
fistpl
mov
xchg
xchg
ficoms
and
cmp
add
and
cmpsb
mov
mov
loopne
iret
xor
rcrl
and
mov
mov
dec
dec
xor
xor
andb
es
test
shll
lret
icebp
and
jne
popf
mov
lea
lods
dec
jnp
mov
in
push
or
push
push
cwtl
inc
dec
inc
inc
xor
lahf
push
or
jmp
paddq
dec
jae
inc
push
pop
enter
rcrb
mov
fists
sbb
test
shlb
push
movsl
insl
stos
std
imul
xchg
jg
pop
cld
sub
loopne
xchg
pop
mov
xchg
pop
push
jecxz
dec
out
jbe
jge
mov
int
jne
mov
jle
roll
das
sub
call
mov
imul
sbb
lret
adc
cmpl
enter
cmc
pusha
jbe
or
add
sub
shlb
dec
stc
pop
test
push
andl
xchg
lods
lods
fsubl
mov
std
andl
testb
adc
sbb
xor
cmp
mov
fdivrs
in
xchg
mov
rorl
loopne
daa
mov
test
outsb
and
scas
cwtl
jecxz
jl
nop
dec
clc
movsl
or
enter
and
stc
add
pop
adc
adc
hlt
sub
out
or
and
lods
mov
arpl
stos
sub
fwait
push
xor
sub
jno
mov
negl
push
test
mov
inc
fs
pop
adcl
out
aad
or
mov
nop
push
in
ss
repz
or
add
insl
cmp
mov
jmp
push
bound
test
lret
lret
shlb
sub
fwait
ja
jnp
lds
dec
pmulhuw
fimull
pop
shll
pop
push
repz
and
lods
adc
cmp
push
test
loope
pop
addb
xchg
jo
in
dec
jbe
mov
imul
jne
popf
repz
je
jg
sti
or
icebp
and
and
mov
fidivrl
es
jae
cli
lcall
fisubs
andb
pop
les
stos
stc
roll
sahf
push
cs
jne
add
sub
jo
jecxz
cmc
lret
in
cltd
sbb
aas
mov
mov
cmc
das
xchg
pop
or
pop
stos
or
ret
adc
fwait
xchg
sub
loope
lret
push
mov
mov
or
mov
sbb
push
inc
std
cltd
inc
aam
ret
cmpsl
aad
jmp
xchg
rol
pop
rclb
pop
cmpsb
push
mov
mov
in
addb
je
inc
fs
mov
sbb
testl
xchg
ljmp
sbb
push
das
sarl
cmp
xchg
mov
xchg
ja
add
inc
test
jo
ja
add
dec
ret
push
cmpsl
push
repnz
inc
filds
gs
or
stos
cs
adc
ljmp
sti
ljmp
xchg
pop
aad
lods
sub
push
popf
mov
fsubs
add
imul
mov
or
jo
jnp
notl
ss
idivl
imul
pop
rcll
mov
jne
insl
push
insl
ror
and
cmp
test
xchg
mov
std
jae
arpl
xor
dec
cltd
lret
je
dec
test
orb
idivl
aaa
lods
add
cmc
stos
mov
je
cmp
jns
mov
add
jns
mov
or
or
mov
decl
pop
xchg
jb
mov
xor
fiadds
add
xchg
push
leave
das
ret
xor
mov
fstp
sarl
lea
loope
adc
lods
dec
je
lcall
mov
sbb
jo
stc
test
jo
dec
loopne
lods
mov
cmp
outsl
jmp
scas
cld
adc
fwait
add
pop
push
sub
fsqrt
fimuls
icebp
push
mov
mov
shlb
sub
stos
arpl
rcll
out
rol
mov
rcrl
xlat
cwtl
clc
es
mov
shr
in
jno
nop
pop
fadd
pop
les
aad
jle
je
jmp
cltd
ret
test
adc
sbb
mov
mov
cmpsb
es
mov
in
popa
movsl
mov
sub
inc
xchg
mov
jns
mov
fsubl
ret
cmpsl
insb
lret
sbb
imul
je
or
lds
nop
sar
adc
cmp
pop
xchg
jbe
rorl
std
cld
je
and
add
daa
xor
push
jnp
fadd
xlat
xchg
xchg
xlat
cltd
adc
popf
mov
cmp
ror
stos
mov
divl
sub
in
dec
lock
mov
rorl
mov
cmp
ret
hlt
sub
into
sub
movsl
pop
test
negl
leave
loop
fsubl
call
sahf
mov
pop
or
repnz
enter
adc
mov
jmp
inc
decl
js
xor
stc
push
add
xchg
ds
imul
push
daa
sbb
ljmp
push
xor
lahf
inc
test
imul
cmpsb
divl
xchg
mov
lret
shld
xchg
dec
insl
cli
insb
hlt
shl
sub
add
sub
or
push
or
ljmp
iret
xlat
pop
out
ret
and
adc
mov
test
dec
imul
aaa
cld
out
jmp
imul
pushf
push
cmpsl
sbb
xchg
mov
in
xchg
or
sub
add
jne
cmpb
aaa
test
jo
add
lahf
pusha
push
ds
shr
ret
or
les
and
test
test
sub
in
xor
jb
iret
mov
shlb
int
imul
pop
ljmp
and
cmpsb
out
xchg
rcll
ljmp
pusha
fstps
mov
push
jp
hlt
mov
push
loopne
add
cmpsl
addb
pop
mov
jb
lret
stos
imul
mov
jnp
insl
and
pop
gs
addb
out
dec
sub
push
out
popf
arpl
cmpsb
inc
out
fwait
mov
mov
mov
jp
inc
push
inc
add
mov
push
xlat
repnz
mov
pop
dec
or
sbb
inc
ja
dec
dec
loope
loope
stc
or
dec
adc
cmpsb
add
roll
iret
adc
lcall
and
jb
sub
shlb
xchg
jge
cmpsb
scas
adc
js
xchg
add
sbb
imul
stc
in
xchg
daa
xor
loop
out
or
mov
sub
xor
xchg
dec
cld
jns
dec
mov
ja
loope
jne
fnstenv
dec
inc
xchg
xchg
push
pushl
call
lret
filds
cmpb
sub
lds
dec
inc
std
and
xchg
sahf
xchg
mov
mov
rcll
mov
cmp
bound
lret
shll
fs
arpl
and
mov
lahf
mov
mov
daa
mov
mov
mov
cmpsb
stc
push
int3
loope
out
push
cmp
xchg
mov
sbb
inc
outsb
insl
add
xchg
fisubrs
daa
mov
mov
cmp
push
cmp
neg
dec
in
jmp
jb
cli
rcll
gs
sahf
lahf
jecxz
cmp
mov
enter
leave
std
push
out
pop
cmpsb
outsb
inc
pop
jge
lods
in
mov
out
mov
jnp
jmp
xchg
data16
ljmp
cmp
push
lods
xchg
enter
lods
imulb
adc
pop
or
inc
aam
xchg
popa
loope
leave
push
cmpsb
aam
out
cmp
add
mov
adc
dec
cmp
out
out
add
xchg
mov
je
pop
jo
and
dec
loop
pop
loope
stc
fidivl
and
pop
xor
pop
mov
int
cmp
iret
daa
das
pop
mov
and
sbb
enter
xchg
rcrb
pcmpeqd
add
xchg
hlt
std
inc
mov
mov
or
push
rorl
add
push
adc
adc
mov
loop
lock
xor
inc
xor
sub
jnp
nop
jecxz
fistpl
out
xor
sub
lock
in
jecxz
adc
jl
out
dec
aad
sub
out
out
or
push
fmul
test
stos
in
es
cmp
rcrb
mov
push
cmpsl
xor
xor
test
mov
mov
sub
jmp
imul
movsl
xor
ror
pop
insb
inc
inc
cmpsl
cmp
fstl
outsl
add
pop
js
in
cwtl
mov
push
cmp
stos
stos
call
lock
lahf
jno
xor
les
mov
sahf
fucomp
lock
inc
loopne
sbb
icebp
int
xchg
xchg
rcrl
jp
dec
or
mov
lock
hlt
pop
je
jno
cld
jo
sbb
rorb
mov
fsts
andl
jl
sbb
popf
inc
out
stos
xchg
xor
outsb
jo
dec
sbb
pop
lods
lret
aaa
xor
pop
iret
cmpsl
jo
mov
xchg
and
and
xchg
stc
mov
cmp
pop
sbb
inc
inc
jne
imul
dec
dec
mov
fisubs
pop
mov
adc
mov
xchg
mov
fnsave
push
lods
mov
push
fildl
push
je
popf
pushl
inc
rorb
lret
adc
scas
jp
dec
cwtl
xchg
insl
cltd
or
jl
dec
imul
ret
std
call
repz
js
outsb
mov
jecxz
sub
mov
int3
xor
push
adc
imulb
lcall
xor
shlb
movsl
int
mov
mov
sarb
std
xchg
lea
in
add
cs
sahf
mov
hlt
test
jns
jmp
add
inc
jae
lods
sub
popf
jge
jg
push
xor
stc
cwtl
add
imul
and
mov
loopne
jae
xor
push
sahf
xchg
int3
xor
inc
pop
add
std
dec
mov
xor
fmull
out
push
xor
imul
inc
add
mov
arpl
adc
mov
pushl
sbb
jmp
mov
pusha
roll
add
mov
xlat
pop
std
lret
sahf
enter
insl
jge
mov
jne
pop
cmpl
call
add
cmp
inc
mov
jns
bswap
xchg
cmovp
lock
js
jmp
popa
jg
cmp
and
cmpsb
lods
js
bound
fs
sub
movsb
jmp
jl
call
mov
shlb
cmp
sbb
push
mov
sbb
cmp
into
in
aam
lea
push
mov
movsl
mov
dec
or
mov
shr
stos
movsb
jb
test
xor
jecxz
jge
cld
rorb
sbb
movsl
lods
inc
clc
mov
pop
mov
aas
std
lcall
aad
loopne
imul
ja
lret
repz
sarb
cmp
xchg
jno
dec
cmp
cltd
jo
mov
dec
sub
outsb
in
or
ret
sti
push
shrl
sub
jg
jo
xorb
popa
sub
scas
dec
lds
xlat
push
sbb
in
add
mov
mov
mov
xchg
push
mov
test
test
sub
and
dec
push
push
inc
fbstp
gs
add
aas
out
mov
inc
and
inc
adc
mov
rcrl
ds
adc
insl
mov
jae
int3
aaa
imul
inc
sub
es
pushf
xchg
ss
movsb
inc
xor
sub
push
sub
imul
mov
inc
cmp
dec
call
push
jge
cmp
mov
mov
js
dec
out
adc
call
clc
pop
in
dec
imul
lret
or
sub
jl
adc
and
or
inc
mov
xlat
popf
rcrl
mov
leave
jno
jo
mov
iret
cltd
shrl
scas
mov
fdivs
sbb
sahf
and
inc
pop
jns
test
test
pop
mov
mov
pop
imul
leave
ficomps
je
orl
popf
cmc
cltd
sbb
pop
push
mov
out
xchg
jo
dec
test
xor
push
into
insb
mov
sub
jmp
dec
mov
lock
fdivrs
cltd
stos
sub
mov
mov
jmp
xchg
mov
xchg
enter
pmaddwd
sub
mov
mov
imul
push
test
add
ret
dec
push
add
ljmp
push
test
and
xchg
stc
aas
test
or
mov
dec
sbb
cmc
dec
sub
push
loopne
and
cmp
mov
outsl
xor
lahf
pop
mov
cmp
movsl
and
adc
popw
es
stos
xor
popa
add
sub
mov
mov
std
jg
stos
xor
add
and
inc
cmpsb
mov
les
ja
jnp
dec
or
stos
clc
adc
enter
mov
addl
aam
add
lahf
cmpb
jle
popa
cmpsl
stos
pop
mov
jl
lret
push
jmp
arpl
frndint
adc
push
idivb
mov
mov
inc
lahf
mov
and
stc
dec
or
sti
test
arpl
add
xchg
jg
test
mov
pop
push
xor
dec
insl
mov
dec
and
push
ljmp
cltd
xor
repnz
jle
add
push
int3
adc
in
rcrl
push
mov
push
dec
or
xor
mov
pop
js
fs
xchg
into
mov
pop
adc
out
mov
lret
add
xchg
jnp
ficompl
fnstenv
enter
push
pop
fisttps
das
push
stos
inc
clc
mov
or
lahf
fmuls
cmp
shll
mov
cltd
scas
push
jecxz
adc
jge
adc
test
imul
sbb
insb
imul
sbb
dec
pop
ja
aaa
push
fldcw
movsl
sub
scas
arpl
dec
cmc
or
popf
shll
enter
add
inc
lcall
xchg
mov
sti
roll
dec
movsl
jge
cmp
fsubrl
iret
imul
notb
cmp
sub
lea
xchg
push
aas
mov
inc
rorb
mov
sbb
mov
adcl
mov
ja
je
movsl
mov
mov
orl
xchg
imul
das
cld
adc
aaa
push
sub
adcl
jp
cmp
int
lods
pop
gs
test
movsl
push
sub
decl
inc
mov
jne
sbb
mov
fnstenv
cmp
leave
mov
fldt
idivl
out
fdivrl
xor
test
insl
push
nop
cmp
mov
xor
pop
das
icebp
stos
and
xchg
mov
shll
frstor
stos
jmp
sbb
pop
sub
fnstenv
clc
nop
pop
ret
arpl
push
inc
clc
xchg
sbb
fldt
hlt
fnstenv
addr16
cli
pop
and
pop
popf
xchg
mov
pop
in
stc
outsl
sub
testl
shlb
insl
lods
adc
scas
fidivl
push
loope
jle
add
pusha
xor
mov
aad
xchg
mov
jmp
push
pushf
dec
lea
lcall
pop
lcall
push
outsb
xchg
xor
enter
xchg
and
inc
pop
imul
sbb
cmp
jns
fs
jecxz
pop
push
pushf
cld
lock
mov
aas
inc
lret
test
ficoms
push
mov
xor
sbb
lea
test
loop
cmp
push
mov
aaa
push
jns
mov
jge
push
repz
sbb
mov
fwait
mov
sarl
pushf
pop
cs
push
sub
sub
lods
cmovno
int3
mov
dec
inc
fldcw
mov
sbb
or
mov
pop
cmp
inc
jge
inc
xchg
notb
mov
out
cwtl
mov
psrlq
dec
jge
into
aam
ds
scas
lods
push
pop
mov
sbb
mov
fstpt
jecxz
in
mov
aaa
repnz
mov
dec
and
sub
push
sbb
jecxz
rcr
add
mov
mov
out
inc
inc
or
stos
dec
cs
jg
aad
push
inc
dec
cmp
icebp
out
push
int3
test
sub
outsl
cmp
imul
jecxz
nop
xchg
scas
sar
xor
outsb
sub
jmp
pop
sub
outsb
sub
push
adc
clc
lea
shll
cmp
flds
inc
fists
aam
jmp
filds
mov
sub
fsubp
xchg
mov
cmpsl
sub
adc
xor
jns
clc
and
incl
and
insb
cmp
sahf
adc
mov
out
lcall
adc
fnstsw
fistpll
mov
and
vmovups
jp
lds
ds
insb
pop
in
sub
repnz
cmp
push
out
and
stos
xchg
out
sarl
push
add
movsb
jp
add
mov
cmpsb
out
stc
clc
fs
add
leave
pop
cs
or
sahf
xchg
test
fdivrl
addr16
in
pusha
dec
pop
subb
mov
sahf
jle
jno
outsb
sub
sti
mov
dec
test
dec
pop
jbe
inc
inc
testb
sbb
and
adc
lret
push
inc
push
push
and
sti
fwait
mov
movl
jl
xor
adc
xchg
cmpsl
jnp
dec
scas
aas
pop
sub
mov
mov
aam
ss
data16
gs
cmc
add
push
loop
loope
pusha
movsb
pushf
lock
xor
gs
xchg
mov
mov
and
dec
out
sbb
stc
inc
mov
sahf
addr16
push
neg
push
stos
jae
and
enter
xor
divb
mov
enter
mov
dec
pop
xor
jmp
out
and
aas
mov
cmp
sub
sbb
push
cwtl
cmp
popf
dec
and
andl
and
ret
xchg
out
or
sub
popa
mov
outsl
inc
int3
and
jg
and
movsl
cmpsb
pushf
xlat
push
and
das
imul
mov
cmp
pop
in
stc
incb
loope
imul
add
pop
jmp
cli
push
inc
scas
sbb
lret
push
cmp
andb
jecxz
and
inc
mov
mov
push
cli
dec
xchg
stos
aam
and
dec
divb
lods
insb
popa
rorb
fadd
out
mov
mov
xchg
pop
in
ret
add
out
xchg
ljmp
test
bound
fsub
mov
adc
in
and
int3
enter
cld
stc
sbb
ret
mov
enter
lret
push
imul
out
sahf
fistpl
loopne
sub
and
mov
sbb
inc
mov
add
popa
jle
adc
cltd
enter
jmp
call
faddl
adc
test
cld
add
push
mov
xchg
out
mov
adc
or
loop
xor
out
pusha
push
adc
xchg
mov
mov
cli
das
pop
hlt
ja
mov
mov
push
cmp
in
mov
pop
daa
pusha
xor
fisttps
add
jo
jg
add
pop
jns
int
mov
push
nop
lret
sub
cmp
repz
and
mov
mov
push
cltd
out
andb
adc
mov
hlt
rdtsc
mov
xor
into
fistpl
rcll
in
loopne
outsl
movsl
mov
jne
ljmp
add
add
cli
icebp
mov
fstps
or
mov
push
dec
in
jo
sbb
dec
test
shll
cs
xchg
xchg
std
insb
outsb
in
mov
mov
int
out
add
int
and
idivb
inc
mov
bound
ret
xor
test
data16
jne
imul
push
je
jbe
inc
push
jno
dec
sarl
push
popa
add
mov
rcll
rcrb
and
push
std
inc
lods
mov
les
stos
cli
arpl
mov
pop
xlat
sbbl
mov
hlt
cltd
bound
xchg
icebp
pop
push
dec
sahf
lret
test
lret
dec
mov
mov
sub
add
es
addr16
jo
and
mov
popf
sarl
clc
repz
clc
fiaddl
orl
aaa
call
inc
lds
mov
in
xchg
test
sub
subl
ljmp
ret
out
into
fldz
cmp
jecxz
xor
call
ds
and
iret
inc
js
xor
xchg
mov
stos
je
in
xchg
test
lds
subb
xor
mov
int3
lds
mov
enter
jl
out
stos
orl
xchg
mov
in
jecxz
shrl
cltd
cli
shlb
pop
push
icebp
in
push
push
mov
aam
jbe
xchg
xor
pusha
or
es
out
fcoml
cmp
sbb
sbb
dec
xor
mov
mov
dec
cltd
push
cld
jp
ss
xchg
mov
gs
icebp
pop
sub
lea
cltd
test
mov
popa
xor
pop
dec
fcompl
push
arpl
ds
rolb
jge
scas
fstpl
push
jmp
adc
or
push
pop
or
xlat
jbe
sbb
test
push
push
or
cmp
xor
ljmp
mov
fmuls
test
fld
in
out
or
inc
les
aaa
xlat
rcrl
in
mov
adc
jecxz
inc
and
rclb
sbb
pop
repnz
addr16
push
fwait
add
sti
jo
or
jns
addr16
stos
jns
cli
sbb
sub
je
pop
fsts
stos
xor
inc
dec
jge
jecxz
jae
push
jge
pusha
into
testl
dec
out
fidivrs
mov
mov
mov
sahf
xchg
push
cmovbe
lds
xor
pop
cmpsb
or
sahf
iret
adc
and
push
mov
cmp
or
stos
das
or
rcrb
xchg
xchg
enter
add
fimuls
das
adc
mov
xor
mov
inc
shlb
sbb
mov
jno
jp
mov
xor
lea
ja
js
xorb
cmp
cmp
cmp
and
out
cmpl
hlt
adc
ret
es
cmp
sub
mov
pop
push
lret
sbb
mov
pop
mov
mov
clc
and
pop
sbb
cs
sbb
popa
push
lods
jp
jp
inc
pop
stos
idivl
xor
jne
mov
rcr
pop
in
push
pushf
jno
push
lods
mov
jmp
aas
pop
ffree
fs
add
mov
pushl
leave
xchg
je
stos
xchg
mov
aam
mov
hlt
data16
mov
jge
lock
mov
jle
cmp
lds
loopne
not
mov
or
enter
jge
cli
rcrb
add
ss
inc
add
jl
or
and
xchg
xchg
and
lret
push
imul
sub
ds
in
push
mov
mov
and
movsb
insl
or
lahf
call
scas
flds
loop
or
sbb
add
pop
jg
xchg
push
in
aad
mov
mov
ret
sbb
pusha
adc
inc
mov
sbb
repnz
sub
arpl
cmp
pushf
rol
imul
inc
cld
push
sub
pop
add
pop
stos
lret
loop
ss
testl
jo
sti
fcomp
mov
scas
fwait
push
push
push
divl
dec
mov
jbe
mov
sbb
push
xor
daa
ss
pop
sbb
sbb
lock
sub
xchg
popf
xor
xor
xchg
jle
adc
cmp
test
mov
sbb
mov
jb
lods
pop
cmp
pop
inc
into
cmpl
daa
sub
lea
sbb
pusha
std
cltd
dec
ss
sbb
push
pop
jne
mov
dec
and
fisubl
mov
je
addb
mov
jg
repz
jecxz
adc
fisubl
and
divl
or
flds
in
adcb
add
and
rcll
sahf
fldt
ffree
sub
adc
lcall
mov
mov
inc
or
mov
xlat
jl
xchg
cmp
sahf
pushf
repnz
cmc
push
loope
sub
mov
push
stos
lds
das
mov
mov
push
negb
inc
lea
add
popf
fmull
loopne
push
dec
sub
out
pop
stc
jle
jo
sahf
pop
inc
pop
repnz
mov
test
xor
icebp
jb
push
ljmp
sub
inc
inc
mov
and
fsubs
int
jo
insb
xchg
and
pop
test
scas
aam
pop
cmp
test
negb
ljmp
sbb
in
xlat
or
out
pop
sub
mov
repz
mov
arpl
push
xor
jne
xorl
out
inc
mov
fiadds
adc
xchg
lods
ret
pop
jmp
movsb
mov
bound
orl
movsl
pop
nop
cwtl
cmp
rorb
mov
or
scas
pop
mov
cmc
dec
movsl
jmp
fsubr
in
jae
pop
cltd
mov
outsl
mov
pop
out
pop
adc
aas
inc
daa
cmpsb
xchg
int3
js
in
ret
bound
inc
enter
inc
rolb
js
ljmp
sub
cli
pop
aad
testb
test
cmp
push
add
pop
stos
jmp
stc
dec
lret
out
fcoml
push
mov
mov
push
enter
in
and
aas
inc
nop
dec
test
rorb
imul
sbb
jns
push
jle
sbb
bound
pop
inc
sbb
mov
ret
dec
xchg
and
and
pop
inc
xlat
push
repnz
jge
add
sbb
sbb
mov
mov
inc
xor
sbb
fnsave
js
repnz
cmp
cli
aas
sbb
fisttpl
jno
or
mov
int3
movsb
gs
aas
shlb
xchg
mov
movb
iret
scas
ret
sub
dec
lret
enter
dec
ret
adc
mov
outsl
sbb
push
push
lret
sub
pop
cmp
imul
pop
sbb
pop
aas
stc
or
push
scas
and
call
sbb
add
mov
xchg
dec
inc
das
mov
test
mov
jge
mov
shr
hlt
es
sbb
out
outsl
fistpl
sub
xchg
jb
dec
add
pop
mov
cmp
fimull
call
xchg
test
jge
cmp
push
push
sub
cmp
imul
jp
fdivs
in
lea
mov
adc
sbb
jl
sbb
test
lahf
mov
sub
gs
test
fistl
adc
stos
rcrb
mov
fldt
and
adc
xor
pop
jae
cltd
pop
imul
sub
gs
jl
daa
js
test
fsts
inc
dec
setns
cltd
pop
dec
jecxz
js
push
lods
dec
xor
xchg
rorl
orl
fidivrs
mov
xor
or
dec
addl
push
iret
je
dec
imul
sub
inc
adc
mov
mov
cmp
sarb
sub
cmp
in
xlat
or
out
mov
xchg
shlb
xchg
lcall
test
push
or
pop
mov
ss
andl
shl
call
adc
pop
add
mov
and
sub
pusha
xchg
scas
push
dec
pop
pushf
fldenv
pop
jns
dec
mov
out
mov
xchg
sti
sub
sahf
fidivs
mov
test
inc
mov
repz
std
icebp
ljmp
dec
scas
inc
mov
les
mov
push
dec
pop
cmp
dec
xchg
fistps
mov
mov
repnz
inc
mov
cmp
lock
nop
mov
dec
jnp
push
dec
cmpl
jle
sti
movsl
mov
pop
sub
lret
icebp
rcrb
jbe
cmp
sub
fldcw
clc
xchg
inc
jl
mov
pop
jbe
sbb
movsb
push
sti
fcmovnu
pop
mov
test
scas
adc
fdivrs
xchg
insb
xchg
je
mov
mov
xchg
aaa
leave
ret
sub
fists
in
push
test
bound
and
fstpl
inc
sbb
adc
pushf
mov
inc
cmpsl
inc
cmp
lcall
mov
and
sbb
addr16
xchg
aaa
cmpsb
das
xchg
and
fcompl
and
lods
mov
sub
cmpsb
mov
cmp
hlt
hlt
hlt
xor
mov
jle
fdivl
insl
adc
mov
adc
fs
adc
out
scas
in
int3
xor
jae
pop
loope
outsl
outsb
js
xchg
xchg
mov
lods
sbb
sub
rcll
rorb
std
xor
iret
outsl
subl
cmc
push
lods
test
lock
ret
and
pop
adc
dec
shrb
push
mov
lcall
jl
cmp
ror
push
lods
adc
mov
dec
pop
gs
mov
cmp
je
or
lods
pop
sub
xchg
stos
cmp
imulb
mov
dec
jnp
inc
fildll
test
es
lods
sub
cmp
bound
jp
aaa
outsb
jp
mov
arpl
cmp
cmc
std
mov
xor
int
hlt
das
lret
adc
mov
adc
popa
mov
or
inc
int3
or
mov
mov
push
dec
sahf
push
jno
or
negb
or
sti
xor
popf
sub
jb
fdivrl
jne
cmpsb
cmp
pop
inc
mov
lret
push
movsl
aas
and
lock
fucomi
test
out
ja
add
fstl
pop
jbe
gs
jge
mov
adc
insb
out
push
in
inc
xchg
rorl
pop
jbe
cmp
stos
mov
repz
cmc
stc
rorb
cmp
jle
lea
dec
mov
jg
inc
stc
orb
test
in
jp
xor
cmp
cltd
fimull
jge
rol
stc
mov
mov
sub
sbb
add
mov
cld
pop
jno
mov
shrb
fistps
mov
add
pop
sub
dec
xor
cmp
into
stos
cltd
stc
push
in
shll
sub
pop
push
int3
pop
dec
mov
cmp
fstp
inc
and
test
aam
aam
pop
mov
daa
mov
mov
sub
insl
cmp
mov
fistpll
inc
fdivrl
mov
iret
bound
imul
popf
mov
ss
shrb
out
mov
scas
ljmp
adc
cmp
and
and
push
lahf
jns
outsb
pop
and
stc
imul
mov
gs
lcall
outsl
repnz
mov
lcall
movsb
inc
lcall
stos
add
xor
and
scas
mov
pop
xor
aad
lret
gs
into
add
jne
outsb
in
bound
pushf
or
dec
inc
rcrl
mov
pop
fcmovnb
and
push
fwait
push
adcl
or
xor
fidivrs
scas
daa
inc
cmp
inc
add
incb
dec
cmp
in
cmc
mov
sub
inc
xchg
dec
and
and
aad
sbb
cld
jno
xchg
jo
sub
imul
adcl
in
push
dec
xchg
call
jbe
inc
fidivl
addb
test
adc
sahf
xor
sub
pop
push
push
movsl
aad
xchg
mov
jp
or
filds
push
or
sahf
leave
xchg
subl
fmull
mov
dec
dec
pop
or
mov
adc
jmp
cwtl
int3
and
imul
std
jne
sub
ljmp
inc
seto
imul
in
cmp
xor
jb
inc
mov
push
pop
rcrl
push
or
aaa
mov
jle
pop
or
jae
cmp
sbb
cmp
lock
dec
cmp
push
push
fidivs
push
xor
pusha
nop
test
movsl
lea
cmp
dec
ret
cld
xchg
dec
dec
and
adcb
rcrb
fwait
outsb
sti
pop
xor
jb
les
cmp
out
rorl
repnz
xlat
out
loope
and
test
testb
mov
ja
mov
jge
xchg
pop
insl
mov
push
push
ljmp
ss
pop
adc
inc
jmp
mov
sub
pop
mov
cmp
inc
aam
sub
nop
popf
aam
jp
mov
insl
jns
popf
in
imul
pop
loope
jp
jns
mov
subl
add
or
adc
mov
jae
xor
pop
jb
lea
dec
negb
lcall
inc
das
inc
jo
pushf
mov
fcmovnbe
hlt
xchg
mov
ds
inc
push
mov
inc
insb
imul
pop
enter
lret
mov
insb
cmpsl
fcomp
cmp
vunpcklpd
and
dec
and
outsb
mov
sbb
xchg
cmp
out
push
data16
mov
adc
in
movsb
jge
pusha
in
ja
cmp
xchg
sti
addr16
sub
sub
fldl
push
and
cmp
test
add
sbb
les
mov
push
fbstp
jne
mov
int3
push
mov
xchg
or
xchg
orl
repz
add
inc
mov
jl
jp
jns
push
xchg
push
data16
jmp
cld
or
inc
dec
movsl
insl
rclb
enter
ret
stos
arpl
pop
mov
pop
inc
aas
aad
dec
xor
add
cmpsb
push
xchg
lret
mov
ds
mov
pop
or
lock
push
mov
outsb
jl
push
cmpsl
jne
mov
push
imul
mov
jecxz
pop
jbe
in
into
pop
enter
es
lret
inc
adc
testl
push
cld
shlb
lock
fstl
outsb
pusha
ret
mov
repnz
add
shrd
dec
sbb
xchg
ret
hlt
push
xchg
jb
movsb
inc
mov
sbb
mov
test
mov
sub
xor
pop
out
sub
ds
sbb
push
es
rorb
cmpsl
movsb
ja
pop
hlt
xchg
jg
test
and
iret
ret
jge
insl
add
pop
xor
fwait
xchg
lods
shrb
movl
fcmovu
mov
pop
dec
sahf
cli
iret
mov
arpl
lret
pop
movsb
push
scas
or
add
int3
or
pop
fcoms
mov
stos
jno
and
fstp
clc
sub
push
fwait
xor
imul
mov
int3
inc
jb
fisttps
fstl
jl
cmp
mov
dec
mov
dec
dec
idivl
mov
mov
cmp
ss
xor
cli
out
xor
jle
jp
adc
mov
xor
fidivl
inc
mov
aas
or
out
rclb
jns
lea
fistpll
mov
jle
call
add
push
pop
mov
sub
pushf
leave
jmp
jbe
out
and
inc
popf
gs
push
js
cmpsl
pop
sub
add
and
fldl
addl
cli
in
pusha
fucomp
sbb
fcoml
pop
out
out
mov
pop
lcall
adc
jle
movsl
daa
xor
leave
ret
inc
cmp
inc
in
int
and
int
ljmp
aas
pop
imul
dec
fidivrs
mov
cmc
xor
test
adc
add
push
ja
xchg
sbb
xchg
and
xchg
add
xor
test
and
les
jg
mov
or
and
push
cwtl
cmp
into
inc
add
jb
xor
bound
fdivrs
xchg
cmc
add
cwtl
mov
stos
dec
push
mov
lcall
push
imul
int3
cmp
ss
xchg
sti
push
add
cs
clc
mov
xchg
ret
cmp
sbb
imul
dec
mov
dec
push
cli
inc
daa
mov
das
int3
out
sbb
xor
inc
dec
arpl
adc
xchg
dec
movsb
sbb
rorb
xor
aad
pop
mov
or
out
mov
mov
fildl
ret
pop
cmc
incl
cld
mov
sub
out
jg
push
in
hlt
mov
and
lock
xchg
mov
repnz
inc
inc
cmp
inc
or
push
and
mov
lods
pushf
lret
js
push
dec
repnz
shrb
cmpsl
cmp
xor
jp
xor
inc
lds
mov
data16
insb
icebp
into
sbb
test
push
cmp
paddsw
mov
dec
sbb
sub
xor
mov
cwtl
push
xor
test
xorl
aad
sub
xchg
imul
adc
ficompl
push
mov
fisubrl
or
xor
repz
jbe
lcall
push
fildl
je
xchg
jmp
test
cwtl
lret
and
inc
xchg
fsubrl
andb
jp
mov
daa
sbb
or
rclb
mov
pop
mov
pop
loop
pop
in
dec
and
jns
cmp
fidivs
push
in
scas
aad
push
push
or
pop
mov
add
outsb
or
int
aas
stc
push
cmp
xor
adc
push
xchg
sub
pop
fcoms
rcrb
pusha
out
xchg
mov
ds
cmpsb
popf
aad
cmp
xchg
jge
pushf
shlb
into
std
xor
or
jno
outsl
push
std
xchg
cli
sub
pusha
mov
push
mov
pop
or
sub
fistps
or
movsl
bound
push
cmp
mov
add
add
and
xchg
mov
arpl
push
inc
sub
push
mov
cltd
test
xchg
push
pop
das
cli
movsl
push
inc
rcll
push
jnp
xor
push
dec
push
jnp
outsl
xor
and
xchg
xchg
into
outsb
in
loop
or
mov
call
cli
scas
jbe
je
jb
sub
dec
mov
lods
adc
mov
inc
dec
xchg
push
outsl
jnp
xor
add
ja
mov
std
push
enter
jne
ret
gs
sahf
aas
arpl
les
jg
pop
ss
xor
cmp
daa
jge
sbb
push
mov
cwtl
mov
lahf
xlat
fisttpll
jecxz
cmpsl
les
sub
jmp
stos
sbb
mov
inc
daa
int3
and
out
pop
jnp
xor
test
int
out
ja
stc
and
mov
cmc
xchg
push
lret
test
add
rolb
mov
xorl
addr16
mov
jmp
aam
leave
dec
inc
pop
mov
cmp
out
adc
jno
xor
aas
fldl
je
add
jns
fstpt
int3
fimull
inc
je
loop
inc
dec
xor
jbe
call
jo
leave
xlat
mov
daa
mov
sahf
aaa
and
push
loop
push
or
xchg
xchg
mov
out
aas
sub
dec
fnstenv
add
aas
push
ficoms
lret
dec
xorb
jmp
mov
xchg
jge
fimull
mov
adc
mov
cmp
and
pop
mov
in
icebp
xchg
insl
pop
sti
rcr
outsb
leave
jno
sub
pushf
inc
jno
xchg
sub
mov
cs
test
sbb
add
lcall
les
pushf
pop
jne
sbb
mov
xchg
pop
push
movsl
cmpsb
cmp
sub
push
push
cmp
cmc
fs
cmpb
cltd
fcomp
enter
cld
lahf
test
iret
dec
subl
xor
es
mov
fcmovne
lcall
xchg
xor
jne
xor
les
fstpt
adc
add
pushf
lcall
sbb
mov
push
pop
enter
jo
dec
mov
sahf
ja
xchg
cmpb
mov
sbb
push
jbe
mov
pushf
cmp
test
dec
sti
pcmpeqb
lods
in
fdivrs
jbe
dec
aaa
leave
push
insb
movsl
sub
loop
jge
pop
pop
inc
ja
fwait
or
sbb
mov
lret
inc
xor
add
and
jge
lock
shll
or
mov
fnstsw
mov
xchg
and
fadds
xchg
lcall
das
mov
in
jno
in
loopne
stos
dec
popa
pop
test
cmpsb
int3
mov
ja
enter
rol
movsb
movsl
rcrl
sub
popf
push
bound
out
lcall
fs
sbb
mov
nop
fucomi
repnz
aas
adc
out
add
jns
out
cmp
cmp
or
add
data16
mov
cmp
daa
imul
mov
mov
mov
sbbb
jne
out
outsb
inc
add
push
mov
addr16
insb
pop
jl
lods
mov
clc
mov
push
xor
cmp
dec
les
pop
dec
andb
push
jae
dec
jo
lea
insb
jns
add
out
jp
lds
aad
jne
and
lea
test
fistl
dec
sbb
lahf
push
test
fistps
roll
cmpsl
xchg
lret
bound
cltd
jae
fs
push
inc
dec
ds
pop
mov
fs
je
xor
sub
jne
fdivr
sub
xchg
pop
push
dec
rorl
loop
fbstp
sub
lret
ljmp
cmp
jnp
js
inc
in
je
lea
sahf
aas
pop
mov
les
mov
call
cmp
pop
inc
and
xor
nop
jne
mov
out
repz
push
xchg
into
js
ret
mov
fistps
stos
dec
mov
out
sbb
sub
xchg
cld
pop
rclb
dec
pop
cmpsl
out
lret
inc
mov
sbb
mov
in
fs
sti
js
dec
jae,pt
pop
lahf
mov
repnz
mov
jmp
mov
dec
lret
jb
jg
dec
mov
out
sbb
or
and
shl
scas
add
and
fsubrl
inc
xchg
mov
xchg
dec
jns
loop
xchg
inc
pop
jge
add
cmp
in
iret
ret
sbb
sti
push
rol
pop
mov
in
sbb
ljmp
frstor
out
inc
inc
in
repz
push
je
and
pop
int
add
iret
cwtl
movsb
xchg
into
out
cmc
mov
sbb
push
jns
idivl
jl
xchg
aaa
enter
push
adc
movsb
jns
xor
cs
inc
mov
xlat
mov
push
xorb
pop
pop
push
push
inc
mov
repz
mov
mov
push
dec
adc
scas
pop
sub
adc
adc
in
outsb
sub
bound
xchg
fwait
les
stos
nop
divl
popf
inc
loope
mov
xor
mov
bnd
add
pop
lock
data16
and
adc
mov
shrb
pop
les
jg
cwtl
inc
fdivp
inc
je
mov
aas
inc
fistl
pop
adc
fisttpll
push
mov
add
sbb
cli
inc
pop
imul
pushf
lahf
xor
xchg
fwait
shll
mov
cmp
adc
test
xor
out
fwait
ljmp
mov
popa
push
out
jno
mov
add
sahf
enter
jb
push
jg
sub
push
or
ret
fldenv
sahf
fstpl
xlat
push
xor
in
fwait
xor
repz
mov
loop
jl
mov
mov
xor
xor
jb
and
add
out
and
hlt
es
lret
lret
push
dec
in
cmp
mov
ja
mov
mov
daa
ds
dec
dec
mov
wbinvd
shlb
inc
aas
push
pop
sub
push
cmpsl
adc
cmpsl
clc
mov
add
rclb
loope
test
sub
cs
xchg
ret
out
cmp
sbb
notb
jo
mov
sbb
jno
adc
adc
imul
es
aad
xorl
add
loopne
pop
inc
dec
fwait
xor
xchg
roll
mov
insl
mov
adc
pop
push
cmp
lret
popf
shrb
jne
cmp
std
inc
das
mov
testb
jge
cli
mov
cmp
pop
cmc
arpl
sbb
int3
add
int3
xchg
clc
fdiv
lods
pop
test
pop
cmpsl
daa
test
loop
adc
push
cld
xchg
loop
and
lret
push
push
push
sbb
xchg
push
int3
dec
inc
push
pop
ljmp
xchg
insl
push
inc
scas
aaa
icebp
dec
mov
pop
dec
and
cmc
popa
sub
sbb
xor
sub
out
mov
ja
aaa
out
faddp
sahf
adc
addr16
cmp
push
mov
ljmp
lcall
outsb
inc
sbb
push
add
xorb
clc
mov
push
in
sbb
es
jo
xchg
jg
fwait
pop
scas
pop
stos
push
jl
movsl
in
fwait
sub
lods
push
mov
or
mov
outsl
cld
adc
xlat
add
lods
jns
dec
stos
add
in
adc
push
sarb
xchg
push
shll
xor
in
cltd
xor
loop
mov
pop
jbe
push
mov
inc
pop
jb
cmp
sar
inc
push
jmp
xchg
jp
int
and
gs
mov
xchg
and
orl
jmp
and
dec
pop
and
or
gs
sti
sub
mov
les
inc
popa
fisttpl
mov
pusha
inc
into
cmpsb
mov
add
shll
add
cmp
cmpb
mov
jg
popl
xchg
testb
rcrl
sbb
cli
push
or
and
xchg
fucomi
add
div
loope
xchg
and
dec
push
sbbb
jecxz
jg
loop
sbb
stos
jne
scas
loope
mov
into
cwtl
int3
scas
push
sti
gs
lret
pop
imul
int
inc
adc
ja
outsl
and
pushf
pop
shl
fwait
mov
popl
mov
dec
mov
arpl
pop
mov
or
ljmp
dec
cmpsb
or
fildll
loope
push
mov
mov
cmpsb
stos
and
bound
cwtl
push
push
dec
mov
les
sbb
cmp
in
mov
adc
lahf
inc
int3
or
mov
lock
shll
mov
mov
jmp
lds
add
adc
sbb
jnp
cli
jp
push
xor
std
sbb
mov
loope
stos
jp
xor
xchg
mov
adc
cmpsl
test
xor
add
adc
in
popa
les
adc
outsl
sbb
cltd
xor
shrl
fnstsw
in
sbb
or
addr16
or
jae
cmp
std
sub
pop
scas
jb
jle
mov
sub
dec
cwtl
mov
inc
xlat
std
adc
xlat
nop
jp
cltd
shll
xchg
and
mov
jle
inc
testl
mov
stos
in
ret
mov
rcrl
dec
scas
lods
push
and
cmp
imul
lahf
sbb
into
shl
mov
push
push
add
je
cwtl
subl
dec
stc
movsb
xchg
js
out
xor
xchg
cmp
ss
out
fstpt
fists
es
outsl
insl
jmp
lret
or
iret
xor
stos
jge
add
inc
lods
into
sbb
scas
pushf
xor
repnz
push
inc
and
in
ljmp
sub
add
jmp
into
test
cmpsl
mov
lret
repz
nop
out
inc
or
dec
in
cmp
push
fimuls
cld
out
inc
ret
add
xchg
imul
push
filds
mov
adc
mov
add
sub
inc
sub
mov
ret
movntps
xchg
push
sub
mov
sbb
mov
loop
repz
xor
pop
sub
test
repnz
repnz
ret
adc
jmp
and
test
test
mov
pop
fimuls
pop
push
stos
push
cli
test
jne
aas
add
clc
ds
int3
cs
adc
adc
fwait
nop
mov
dec
or
mov
enter
add
cmp
xchg
cli
adc
and
and
sub
ss
sub
subl
js,pt
jl
and
sarl
add
gs
cltd
xchg
das
repnz
movsb
ss
ljmp
iret
lahf
test
mov
imul
out
sar
or
sbb
loope
and
cmpsl
jbe
gs
cmp
add
cmp
imul
mov
inc
pop
aaa
adc
hlt
push
rorl
call
mov
mov
sub
rorl
in
dec
mov
mov
popf
inc
lea
jp
xorb
shrl
fbstp
pop
sahf
fistpll
sbb
and
shrl
das
insb
mov
sub
jb
pushf
das
or
xchg
or
push
jmp
fistps
outsl
jns
outsb
sahf
pop
dec
mov
lret
jecxz
clc
jne
call
or
fadd
outsl
and
int
xchg
inc
jo
xor
add
call
mov
pop
mov
or
xor
xchg
inc
sbb
lea
movsb
in
push
ficoms
popa
mov
out
fldl
cmovp
xor
mov
ljmp
insl
push
ret
inc
test
rcrb
fildll
jno
xchg
sahf
lock
pop
pop
xor
cltd
roll
hlt
adc
inc
lret
stc
scas
xor
ljmp
jns
adc
xchg
movsb
pop
bound
loopne
dec
in
addr16
inc
popa
dec
repnz
call
es
mov
lods
cmpsb
or
cs
test
pop
mov
xchg
lock
xchg
sti
pop
dec
jno
cmpsb
js
rol
mulb
jle
adc
push
inc
ds
pusha
inc
das
shr
outsl
xchg
daa
cs
hlt
testb
test
arpl
icebp
vcvtdq2pd
pop
mov
adc
cld
jmp
xchg
imul
xor
sbb
pop
pushf
xor
xlat
data16
aas
mov
pop
jmp
or
pop
mov
add
stos
pop
icebp
fnstsw
lret
lret
inc
fadd
lds
push
fsubs
movsl
out
pop
testb
sbb
lds
fwait
jb
jb
adc
lcall
jnp
pop
inc
loop
loop
xchg
sub
inc
add
cmc
mov
mov
ljmp
test
pop
loope
aad
gs
xor
int3
mov
in
inc
cmp
sahf
dec
lods
sarl
xchg
xchg
stos
inc
pop
mov
push
test
mov
in
mov
push
ja
jae
push
jno
pop
loope
out
sub
cltd
or
xchg
jg
dec
jmp
popa
jge
jge
jnp
mov
push
mov
adc
sub
pop
std
mov
xor
mov
dec
pop
xchg
popl
pop
xchg
sbb
pushf
call
jl
inc
test
push
jg
inc
mov
pop
jg
dec
cmp
sub
leave
lret
jmp
pop
dec
cmp
xor
or
mov
lea
push
scas
js
lret
jne
mov
int
or
push
sbb
fidivs
jo
mov
jge
and
mov
mov
into
dec
call
loope
pop
adc
jbe
out
pop
das
inc
pop
adc
xor
push
rclb
inc
push
sbb
outsl
and
jp
ja
pop
xlat
push
mulb
pop
push
hlt
pusha
pop
mov
or
jge
in
inc
cmpsl
or
lock
or
xchg
xchg
andl
stc
pop
sub
pop
scas
lret
and
push
dec
xorl
enter
jne
inc
mov
lcall
ret
ljmp
test
inc
adc
pop
popa
cmpl
jmp
aas
sub
mov
movsb
jbe
fbstp
stc
and
and
or
mov
stos
in
rorb
and
lret
and
add
aam
scas
inc
fistpll
push
adc
pop
push
cmp
and
sahf
int3
mov
outsl
jl
xor
dec
lret
dec
jnp
or
add
das
dec
das
jmp
sbb
fsubr
popf
cmpsl
enter
mov
adc
leave
adc
jo
cmpsl
add
ds
mov
mov
loop
adc
shll
and
xchg
mov
and
pop
inc
mov
roll
orl
out
and
pop
out
sub
lcall
mov
mov
hlt
out
dec
aas
and
movl
imul
sahf
movsl
adc
sbb
jmp
je
push
xor
int3
mov
loop
sbb
push
mov
jb
push
mov
lock
xor
or
adc
adc
add
in
cltd
mov
int
mov
imul
hlt
fnsave
outsb
test
or
inc
mov
inc
sub
cmp
pop
mov
or
mov
sub
call
add
and
mov
or
dec
loopne
push
incl
cwtl
pusha
and
lods
popf
js
mov
jns
shl
mov
push
sub
xchg
movsl
out
xchg
sbb
sbb
enter
imul
test
inc
mov
in
jle
in
add
push
ja
jmp
stc
pushl
lahf
push
lret
shlb
and
loope
jg
nop
fcmove
popa
cmp
fucomi
pop
stos
outsb
jmp
sbb
les
shll
mov
jae
mov
out
inc
imul
sar
gs
sub
jmp
popa
mov
testl
xchg
aaa
inc
adc
add
enter
dec
cli
bound
jns
push
dec
dec
dec
popa
dec
testl
mov
test
mov
aam
push
nop
lock
lcall
mov
add
fdivl
dec
jne
mov
sbb
fmuls
mov
cmpsb
adc
scas
call
inc
lock
or
in
jbe
mov
cs
xor
lds
mov
jae
mov
gs
mov
sbb
mov
insb
dec
sahf
jp
or
mov
repz
clc
pop
jp
sub
adc
push
fistps
and
mov
in
lahf
sbb
xor
push
mov
jns
pusha
adc
xlat
cmpsb
or
xchg
cmpsb
mov
push
outsb
pop
push
movsb
mov
and
daa
mov
sarb
shrb
pushl
xchg
les
in
push
clc
in
or
sbb
add
push
nop
xor
sub
enter
and
mov
xchg
push
inc
sbb
mov
aas
push
cmc
fsts
inc
inc
pushf
mov
add
mov
mov
mov
and
pop
xlat
and
mov
push
incl
cmp
push
stos
roll
stos
inc
clc
sbbl
add
mov
les
aas
pop
xchg
lret
mov
insb
dec
mov
cmc
icebp
and
sub
out
inc
dec
cltd
mov
xchg
ljmp
mov
mov
ret
dec
js
mov
fcoms
movsl
out
xchg
in
add
adc
sahf
adc
mov
sarb
sti
in
inc
mov
sbb
mov
mov
or
mov
stos
push
jg
jno
in
aad
cltd
mov
push
adc
mov
pop
dec
aaa
cmp
cli
push
es
jecxz
and
xlat
mov
jbe
jecxz
sbb
xor
mov
out
cmp
je
sub
inc
xor
out
push
pop
sub
aas
fisttpl
daa
insb
jne
aas
mov
jb
and
fldenv
xchg
jnp
mov
mov
imul
stos
ret
ds
mov
daa
jb
shlb
add
lds
aas
pop
cmp
push
decl
pop
xchg
pop
add
xor
pop
pop
mov
dec
jl
outsl
mov
insl
push
or
subl
inc
sub
jns
pop
add
sub
int
cmpsl
mov
les
testb
adc
add
sub
mov
cs
sbb
test
mov
cmpsl
shlb
enter
popa
mov
lea
dec
fiaddl
js
cwtl
in
mov
xchg
add
ds
push
and
sbb
arpl
cmpl
test
jo
andl
addr16
inc
loope
pop
in
xchg
scas
cwtl
push
ss
int
adc
test
jnp
or
inc
mov
xchg
sar
jg
push
shll
xchg
dec
and
addr16
adc
xchg
in
fs
push
mov
icebp
sub
arpl
aas
jmp
rcrl
cld
shr
mov
mov
lahf
dec
jbe,pt
and
insb
push
les
mov
fisubrs
pop
xchg
or
cltd
ret
add
popa
clc
fbld
xor
mov
xor
add
adc
fs
lahf
ret
cltd
popf
imul
mov
arpl
sub
rolb
pop
je
aam
mov
movsl
jo
ljmp
out
ret
fstpt
out
inc
add
test
cmpsb
mov
jge
push
xchg
mov
inc
dec
mov
loopne
cmpsb
mov
sti
inc
or
push
test
fdivrs
jecxz
fstpl
mov
movsb
mov
pop
add
sbb
dec
mov
mov
cmp
lret
sahf
call
and
enter
xchg
add
mov
or
add
mov
lahf
ljmp
out
lods
aad
sarb
and
popa
inc
push
add
ret
roll
cmp
imul
and
sbb
addr16
mov
cmpsl
sub
jno
adc
inc
movsb
out
xchg
fnstcw
aam
jo
fyl2xp1
loop
outsl
js
and
ss
push
add
inc
ja
imul
add
mov
mov
add
in
push
pushf
jge
xchg
pop
aaa
push
xlat
ds
mov
faddl
xor
jo
xchg
or
int
les
sahf
add
mov
loope
aas
ljmp
mov
ljmp
push
push
adc
stos
inc
and
mov
sub
and
sub
aam
ss
xor
jl
cmc
int3
cmpsl
lcall
cwtl
outsb
inc
cmp
sbb
shlb
push
aad
daa
xchg
mov
adc
aad
xchg
lcall
fstpl
mov
and
sub
push
ljmp
insl
xchg
aas
je
aaa
push
jg
sbb
daa
push
hlt
ja
ret
cmp
lea
movsl
adc
cltd
inc
inc
loope
test
out
ret
mov
inc
imul
lods
fwait
stos
inc
jl
inc
jle
push
aaa
xchg
push
jmp
inc
adc
out
stos
enter
sub
xor
ja
fs
inc
sub
ret
mov
xorps
sti
ja
sub
divl
pop
dec
insb
pop
xchg
or
loopne
jbe
cwtl
push
shll
enter
faddp
push
dec
or
nop
dec
add
nop
xor
push
or
lahf
aam
ds
mov
mov
xor
aad
lcall
sahf
xchg
inc
inc
mul
xor
xchg
inc
jo
out
repnz
aas
adc
xchg
stos
sbb
mov
sahf
popa
sti
cmp
pop
dec
jl
test
ss
add
lods
fucom
into
fsin
sub
in
adc
pop
sbb
mov
xchg
push
lea
lods
cmp
out
adc
fnop
sbb
pop
jae
sub
cmp
inc
dec
and
je
loop
sbb
stc
loope
mov
xlat
jnp
lret
xorl
pusha
dec
mov
ljmp
pop
repnz
push
adcl
call
jle
xchg
xor
cmpsl
das
icebp
xor
loop
sub
faddl
aaa
add
jg
in
adc
iret
movsbl
lods
loope
xchg
pop
adcl
jno
mov
dec
dec
sub
mov
jo
mov
stos
sbb
lock
scas
xorl
mov
shrl
les
mov
js
and
bound
stc
jae
jmp
lds
scas
and
xor
adc
mov
pushf
fistpll
ret
rol
add
sub
dec
xor
popf
pop
xchg
mov
hlt
enter
mov
or
lcall
jecxz
inc
repz
aaa
mov
mov
cli
mov
aaa
pop
sbb
and
sbb
ljmp
repz
mov
sbb
push
mov
mov
xchg
ficompl
js
ret
les
ret
sub
int
call
test
test
jnp
xchg
test
xor
or
addr16
popf
push
or
pop
sbb
bound
loopne
xor
inc
push
xor
jnp
mov
push
aaa
stos
sub
mov
inc
andb
jg
xorl
icebp
pop
mov
jmp
pop
out
xor
xchg
out
ficompl
dec
pusha
pushf
repz
or
mov
xchg
int3
inc
cld
mov
aas
and
sub
inc
lret
and
add
or
adc
xchg
popa
fidivl
nop
ljmp
xor
push
pop
in
test
add
mov
shll
push
jl
aaa
jl
hlt
xor
outsb
sub
mov
jnp
add
push
pop
lds
sbb
xlat
xlat
mov
pop
push
lahf
sub
sbb
mov
and
es
inc
cwtl
jl
xor
mov
lock
insl
in
subb
rcll
iret
jge
xchg
pop
or
sbb
rorb
jge
flds
push
mov
in
ss
in
sti
sbb
inc
std
fldl
mov
pop
ljmp
outsl
mov
jecxz
lds
xchg
add
dec
adc
mov
mov
push
out
fidivs
in
dec
xor
push
leave
mov
jecxz
cmp
dec
push
add
pop
xor
fisubrs
addl
enter
js
or
push
mov
mov
lock
lods
mov
or
mov
dec
dec
jmp
lret
inc
mov
mov
pushf
sub
ret
xor
scas
fbld
jo
shrb
cmp
mov
xor
imul
sti
fcomip
shlb
shll
lret
fsubr
scas
sub
inc
call
sbb
mov
push
dec
xchg
lods
rclb
jmp
lret
pop
fisubrl
xor
clc
push
or
clc
sub
adc
cmp
mov
pushf
sbb
dec
pop
push
std
mov
ljmp
pop
adc
pushf
sub
ret
mov
pop
sub
jmp
sbb
fisttps
cmp
mov
in
lahf
xor
aad
dec
scas
lea
add
scas
pop
push
inc
xor
mov
jae
int
push
jmp
nop
jg
add
adcb
sub
sub
iret
scas
dec
pop
mov
xchg
jg
or
mov
mov
pop
inc
out
jl
ss
xor
mov
jnp
outsb
push
ret
push
aaa
add
movsb
shl
push
scas
xor
sub
inc
ret
mov
xchg
adc
cmp
sarl
fs
imul
mov
std
adc
push
cs
and
or
scas
lds
ljmp
mov
xchg
mov
sarl
pop
out
mov
add
enter
mov
inc
das
in
outsl
xor
inc
or
adc
and
fidivs
fmul
cmp
xorb
in
add
sub
jl
bound
pop
das
shlb
inc
cmp
ret
aam
mov
lcall
sbb
pusha
cs
pop
sub
insb
mov
mov
jecxz
in
in
pcmpeqb
or
popl
xchg
adc
push
jnp
inc
or
pop
mov
bound
repz
les
mov
sub
xor
push
outsb
jmp
fildl
ret
gs
sbb
sbb
cli
and
mov
mov
xchg
daa
lcall
or
daa
fsubrs
sti
imul
jnp
daa
lods
cli
mov
mov
mov
aaa
test
fbld
cmpsl
mov
sbb
fs
pandn
jle
es
ss
in
lods
pop
add
pusha
gs
dec
adc
cmp
mov
mov
or
outsl
xlat
cmp
aam
pop
pop
mov
pop
adcb
jmp
ljmp
add
push
mov
dec
jne
mov
sub
fisttps
aas
lahf
pop
aad
mov
mov
nop
cld
lret
sub
mov
ret
xchg
mov
addr16
jbe
xchg
out
popf
cli
movsb
notb
iret
and
repnz
xor
mov
inc
hlt
sub
inc
push
test
xchg
fcom
inc
cmp
fildl
sub
xchg
outsb
shrb
int3
add
stos
imul
fidivrs
popf
clc
and
xchg
xlat
sti
sbb
inc
lds
xor
cmp
daa
dec
add
addr16
jnp
arpl
jp
and
and
out
popf
sbb
std
aaa
pop
arpl
insl
add
inc
sbb
pop
adc
test
jb
fwait
daa
push
in
jle
xchg
or
lds
push
fcomps
jmp
test
inc
pushf
ffree
mov
sbb
fldcw
or
hlt
lds
mov
push
inc
mov
pop
cmp
insb
test
jnp
mov
outsl
mov
mov
imul
sub
rorl
pop
fnsave
fdivl
jnp
push
mov
testb
ret
js
scas
shlb
imul
pop
dec
fstpt
pusha
int3
ret
dec
mov
jb
pop
js
or
add
imulb
imul
rcll
and
mov
and
mov
test
ljmp
cmp
repnz
jne
sub
orb
icebp
xor
popa
mov
dec
pop
jnp
loop
lods
xor
xchg
sub
divb
mov
int
orb
cs
cwtl
cmpsl
dec
inc
imul
jnp
in
and
arpl
popa
jo
inc
lret
dec
out
lret
adc
jmp
stos
pop
outsl
aaa
pop
inc
icebp
xacquire
push
sub
dec
jp
scas
sub
add
clc
mov
mov
movsb
leave
mov
stc
hlt
andl
mov
js
pushf
cmp
adc
mov
in
jmp
loopne
mov
mov
jl
cmpb
cmp
sub
jg
sub
mov
inc
pop
mov
xchg
mov
test
pop
push
add
stos
sub
sub
inc
or
dec
mov
out
mov
add
cmc
adcb
xchg
enter
test
mov
scas
and
andb
cld
xchg
jmp
inc
dec
outsl
les
sbb
jo
std
or
out
push
aas
dec
inc
ja
cs
arpl
mov
pop
and
add
cs
xchg
add
push
fwait
pop
out
clc
xchg
jns
ja
adc
daa
lret
rcrb
mov
outsl
ja
jae
mov
pop
daa
loop
ret
inc
js
mov
cltd
mov
mov
pusha
push
push
dec
pop
int
sbb
roll
movsl
push
leave
push
xor
sub
inc
outsb
in
andb
or
pushw
add
mov
popf
call
cs
pop
lcall
jg
add
jno
dec
inc
sub
or
sbb
je
fmull
add
adc
fldcw
stos
call
mov
mov
movsl
das
cmc
test
test
mov
add
lods
outsl
arpl
fmuls
fstpt
movl
jo
mov
lods
aas
dec
test
adc
inc
cmp
xchg
aad
lods
sub
mov
imul
inc
icebp
stc
out
data16
fstp
and
sbb
jle
mov
inc
fsubrl
jmp
iret
inc
inc
movsb
push
dec
xchg
xchg
pop
gs
popf
dec
fs
jmp
lods
gs
mov
dec
jl
popf
jmp
cmpsl
gs
mov
push
movsb
imull
inc
mov
sub
or
and
sbb
ret
out
rorb
push
cmp
push
push
sub
fwait
push
xlat
lret
ljmp
pop
lss
dec
movsb
loopne
adc
imulb
pop
loop
and
and
lods
xchg
mov
addl
mov
clc
repnz
jne
js
cmp
cmc
add
xchg
dec
jnp
pop
stos
sar
add
sahf
inc
sub
in
negb
cmpsl
sub
dec
enter
xchg
push
sub
fcomp
adc
fsubs
or
xor
lock
push
xchg
sbb
cltd
dec
test
xchg
xchg
add
je
mov
lds
xorl
jno
adc
notl
mov
xchg
stc
es
xchg
pop
xlat
nop
sbb
loop
inc
sub
sbb
popa
in
je
dec
mov
gs
sub
movsb
insb
inc
push
pop
adc
adc
push
pop
cmp
es
out
lds
sbb
test
mov
arpl
sub
je
sub
mov
jecxz
mov
sub
sahf
jnp
les
jo
sbb
mov
or
inc
imul
jecxz
push
subl
stos
mov
mov
mov
xchg
lds
or
mov
push
data16
or
mov
pop
addb
jns
pusha
adc
push
in
loope
jle
insl
mov
push
loope
fisubl
fs
lock
or
adc
add
adc
push
push
mov
jnp
testl
adcb
add
mov
repz
mov
sub
push
andb
push
aam
pop
mov
mov
fdivs
in
or
imul
sbb
lods
jg
ja
inc
mov
dec
mov
cmp
adc
icebp
test
inc
int3
fisubl
cmpsb
xor
mov
push
xor
lcall
fbld
shrb
mov
mov
or
sbb
nop
clc
jae
adc
incl
iret
inc
xor
dec
xor
or
xor
inc
mov
ret
push
adc
lods
leave
xlat
outsb
std
mov
mov
add
jne
add
add
es
pause
test
sbb
cmp
jns
dec
sub
fldcw
je
and
lods
ret
mov
cmp
adc
fs
cmpsb
add
xchg
sbb
subl
imul
lock
shll
les
mov
fistl
xchg
pop
data16
outsl
sub
dec
cli
sub
je
or
imul
push
imul
adc
pop
repz
dec
mov
inc
loop
fidivrs
jae
icebp
jae
out
movsb
xchg
lds
jbe
cmp
add
cld
sahf
movsl
hlt
fsubrs
pop
and
cli
push
mov
pop
sbb
cltd
shll
jae
xchg
push
sub
xchg
outsl
push
in
orb
xlat
cld
pop
mov
and
pop
in
movl
xchg
push
add
movsb
cmc
pop
xlat
pop
adc
fsubrl
cmpsb
jae
cmp
mov
xchg
pop
popa
sbb
xchg
dec
mov
out
push
cmc
jnp
pop
dec
gs
jge
test
inc
jl
mov
roll
imul
pop
push
enter
and
jp
push
pusha
adc
outsl
ja
push
mov
sahf
mov
bound
adc
arpl
jp
cmpsb
std
or
adc
xor
popa
adc
cmpl
mov
lret
addl
rcrb
sub
mov
xor
loopne
rcl
mov
mov
mov
imul
mov
sub
inc
je
fmuls
cld
aas
and
mov
inc
call
push
mov
push
in
bound
in
xchg
outsb
scas
loope
mov
mov
jg
loopne
leave
scas
xor
sbb
addb
out
pop
rcll
sbb
cmpsb
cli
pop
decl
adc
jg
xchg
push
or
fimuls
and
std
bound
mov
mov
lcall
jl
ret
jmp
mov
insb
xchg
mov
rcrb
aam
cwtl
mov
movsl
mov
or
enter
loopne
loope
pop
mov
call
xor
filds
xchg
iret
xor
sub
jno
pop
xchg
pop
in
roll
cld
jle
mov
cmp
add
test
hlt
dec
lods
mov
faddl
and
sti
jg
dec
xor
ljmp
dec
sub
ret
jns
insb
bound
fildll
xlat
orb
add
lods
rorl
mov
call
int3
or
das
sbb
xor
pusha
adc
out
stos
adc
movsb
lea
cwtl
xchg
insl
orl
filds
or
arpl
clc
sbb
xchg
sub
ret
sub
mov
jge
rcrl
xchg
sub
push
xchg
sub
xchg
out
sub
jge
dec
xchg
jmp
mov
fs
jno
repnz
inc
arpl
mov
xlat
pop
rorl
xchg
cmp
enter
aas
dec
xorb
mov
int3
pop
inc
arpl
push
or
xor
jo
js
and
cld
adc
lock
add
or
lahf
cmpsb
shrl
ret
jnp
adc
cmp
dec
pop
adc
imul
xor
pushf
mov
loope
and
iret
fcmovnbe
fsubrl
sub
sbb
mov
lods
push
push
dec
xchg
fisttpll
sub
adc
in
sub
push
sbb
add
inc
push
fbld
nop
xchg
out
das
mov
aad
jecxz
out
jle
sarb
fmuls
std
pop
lcall
cli
scas
ljmp
inc
lods
imul
roll
les
jne
dec
repnz
xchg
fwait
or
out
add
and
jbe
loopne
std
insl
pusha
mov
je
repz
loop
sub
pusha
adc
xlat
into
mov
mov
xor
jno
inc
in
xchg
cmpsl
xlat
mov
outsb
jge
loopne
das
mov
jge
mov
shrl
ds
jns
sbb
jmp
jne
lods
inc
mov
mov
outsb
movsb
dec
jnp
sub
push
nop
cmp
lcall
iret
sub
divps
inc
push
fcmovnb
fwait
dec
popf
adc
xchg
pop
add
jno,pt
mov
sbb
jecxz
push
fwait
cmc
out
lds
dec
mov
adc
mov
mov
jl
push
movsl
dec
sub
loopne
enter
push
xor
icebp
movsb
ja
lds
stos
lret
dec
and
jb
push
and
inc
lea
pusha
scas
sub
icebp
mov
into
jge
in
nop
cld
sbb
rcl
incb
fiaddl
or
cmp
mov
movsl
clc
sbb
test
mov
out
xchg
shlb
jns
in
cmp
xor
dec
jae
test
or
mov
adc
pusha
add
clc
rclb
add
out
mov
mov
stc
jns
push
enter
out
push
push
in
sub
push
pop
into
adc
stc
andb
mov
lcall
movsl
jo
fisttps
ja
daa
xchg
fdivl
pop
cmp
or
mov
int
neg
mov
or
movsb
mov
loopne
mov
aas
into
mov
jb
dec
adc
sub
fstpt
pushf
inc
nop
sbb
call
out
xchg
cmp
inc
add
xor
push
rcr
popf
mov
and
in
dec
jae
mov
outsb
mov
adc
xchg
pop
and
dec
adc
insb
lock
call
out
push
rcl
lcall
dec
or
mov
xchg
fwait
and
stos
data16
push
sarb
inc
test
mov
sub
dec
into
mov
iret
lret
dec
pop
aam
sbb
sbb
out
and
out
or
idiv
orl
or
xchg
mov
lret
pushf
imul
mov
or
ss
mov
cmp
pop
lods
cmpl
loope
push
mov
int
mov
dec
or
xchg
loop
cmp
popa
sahf
jb
mov
push
sub
arpl
les
inc
and
dec
xchg
push
daa
std
jae
icebp
xor
pop
jo
add
sub
xor
mov
fimuls
aas
lds
add
pop
or
stos
cmpsb
out
push
sbb
pop
jno
cmp
test
rcll
sub
mov
mov
or
call
jp
fnstsw
divl
sbb
mov
mov
mov
das
mov
cmp
ljmp
or
jl
jmp
repz
notb
and
xchg
sahf
pop
push
jnp
clc
das
imul
ds
adc
cmc
scas
sarl
xor
dec
cmpsl
and
int3
out
rolb
pop
ljmp
stos
pop
sbb
mov
ljmp
arpl
mov
or
call
mov
inc
xchg
dec
push
int
loopne
mov
push
les
fidivl
xlat
push
sbb
sbb
push
data16
fsubr
lahf
and
push
sbb
es
add
ret
mov
inc
insl
fs
les
push
nop
cmp
xor
mov
jecxz
es
xorl
sub
jns
sahf
lock
xchg
enter
push
and
mov
lea
lods
movsb
push
pop
pop
test
out
popf
xchg
aas
xchg
imul
leave
ret
aam
xlat
outsl
ret
ror
mov
inc
mov
mov
and
out
pop
mov
xchg
ss
dec
xchg
and
hlt
mov
rcl
mov
jnp
jl
dec
out
sub
adc
xorb
and
inc
subb
pop
fsubp
pop
add
pop
cwtl
mov
push
cmp
push
pop
adc
pop
adc
sub
ss
dec
fsubl
adc
orl
pop
shll
negb
dec
es
jo
dec
pushf
mov
aad
adcl
sahf
sbb
cs
sub
imul
mov
push
push
and
mov
ja
mov
sarl
ljmp
jno
icebp
inc
fwait
xor
adc
jge
js
mov
out
xchg
call
stc
jno
fucomp
mov
imul
sbb
lock
sbb
out
test
cmp
add
inc
mov
cmp
mov
out
jbe
shrb
xchg
aam
adc
or
lret
xchg
das
dec
loope
pop
out
mov
daa
cltd
jo
clc
out
cmp
dec
lcall
sbb
std
dec
or
or
sbb
xchg
out
lret
xchg
sub
cwtl
add
sbb
push
repnz
pop
pop
test
pop
inc
insb
js
sbb
cwtl
mov
pop
jae
xlat
jne
dec
mov
xchg
pop
outsb
dec
lock
lods
adc
push
jo
adcl
and
andb
jp
add
fmulp
sbb
addb
outsl
in
dec
sahf
jbe
inc
mov
pop
lods
hlt
dec
pop
je
inc
add
insl
mov
inc
movsb
call
mov
ds
xchg
je
test
sahf
outsb
dec
in
imul
out
xor
push
daa
pop
jg
add
iret
mov
js
scas
mov
jl
fimull
sub
add
mov
in
or
add
aam
add
adc
mov
leave
dec
call
cld
fdivs
je
push
dec
jl
movsl
loop
dec
leave
aas
pop
adc
jb
xchg
mov
out
sub
arpl
je
mov
in
lock
cs
sub
js
xor
dec
in
hlt
lods
pop
nop
gs
mov
and
loopne
stos
sub
adc
enter
pop
pop
bound
cltd
fbld
mov
fidivrl
ljmp
cmc
js
sbb
andl
mov
pop
or
mov
xor
insl
xchg
nop
jne
lds
pop
mov
mov
out
add
imul
push
xchg
xchg
cli
and
dec
dec
dec
push
loop
pop
je
cmpsl
adc
push
xchg
dec
jne
enter
shl
xlat
or
adc
fsincos
push
jae
lea
nop
test
mov
mov
pop
jno
in
pop
mov
cli
dec
bound
pop
addr16
pop
mov
and
sub
stos
repz
sub
insl
and
add
xchg
push
dec
and
xchg
pop
jmp
dec
add
lcall
jmp
dec
das
mov
popa
popf
or
and
inc
adc
lahf
ret
sbb
popf
imul
clc
loope
adc
add
std
dec
prefetch
mov
xor
jmp
lea
lret
fdivs
jp
lea
dec
movsb
mov
mov
ss
shll
or
pop
and
stc
out
inc
adc
or
push
xor
hlt
fwait
loop
gs
popf
inc
add
jns
push
pop
ret
xchg
les
jne
ret
mov
mov
add
imul
add
pop
push
lock
pusha
adc
mov
cltd
cmp
clc
sub
loope
jnp
or
std
cwtl
lds
repz
enter
push
lea
sahf
leave
sub
fcmovbe
push
adc
add
in
jno
aad
mov
inc
inc
mov
xor
inc
add
jbe
dec
pusha
pop
sub
adc
adc
shl
test
aas
sti
mov
outsb
sub
pop
push
mov
addl
xchg
sub
lea
xchg
lahf
jbe
xchg
sub
sub
mov
insb
bnd
shll
inc
cmpsl
sbb
js
sti
sahf
leave
addb
cmp
mov
mov
adc
adc
inc
push
mov
lods
aam
jge
xchg
in
loope
mov
daa
add
ret
jo
mov
aam
ficoml
fwait
jl
jmp
and
push
jo
push
xor
out
test
xchg
mov
clc
ret
out
inc
and
rorl
mov
lcall
dec
rorb
and
jno
int
rorl
imul
aaa
data16
scas
adc
in
pop
xchg
and
jecxz
repnz
adcb
push
jo
adc
sub
insb
jmp
adc
jo
and
push
add
dec
rclb
rol
and
add
ljmp
jbe
inc
pushf
mov
push
loope
cmp
xchg
sub
sub
sbb
call
int3
sbb
ret
xlat
xor
mov
pop
jnp,pt
mov
sbb
push
xlat
adc
lock
mov
push
push
aas
jge
mov
lods
jmp
idiv
movsb
lcall
pop
int3
inc
out
jns
aaa
push
xchg
pop
adc
mov
inc
and
add
clc
mov
cli
frstor
cmp
test
scas
push
pusha
sub
mov
dec
stos
loope
shll
fistl
imul
xchg
inc
ret
lock
xor
mov
xor
rcl
push
dec
push
sbb
jae,pn
movsb
ja
cmp
sbb
cwtl
push
inc
cmp
mov
jb
aas
adc
jg
arpl
cmpsl
xor
psrad
jnp
sub
enter
lock
jb
cld
sbb
das
stc
jo
movsb
cmpsl
inc
test
outsb
adc
imul
div
into
imul
sbbb
int3
out
pop
repz
jecxz
push
or
pushf
ljmp
adc
ffree
jmp
and
es
or
cmp
movsl
jno
push
xchg
cmp
pop
hlt
add
popa
jbe
xchg
mov
imull
or
bound
mov
gs
cmp
cli
jle
pop
ret
add
add
xor
mov
mov
cmc
mov
cmpb
fsts
or
test
dec
inc
mov
cmpsl
lea
and
loopne
inc
js
jle
and
enter
push
inc
mov
testb
jmp
shlb
and
jmp
fstpt
jnp
cmp
cwtl
mov
sbb
pop
cmpsb
xchg
mov
jb
test
push
xchg
js
fsubl
stos
pop
jns
or
push
xor
inc
pop
fisubrl
gs
aaa
inc
pop
int
sub
jbe
push
fcmovnu
les
std
cs
inc
sub
mov
loopne
pop
in
inc
dec
mov
sbb
sbb
jbe
and
jae
loopne
cmpsl
mov
push
mov
aam
dec
rcrb
adc
sbb
out
loopne
cmp
jle
imul
into
sub
sar
insb
or
push
pop
lods
cmp
mov
mov
xlat
add
stos
aam
in
jge
clc
sub
popf
nop
jl
pop
mov
repz
aad
or
nop
and
imul
bound
dec
repz
and
test
or
sub
or
lods
dec
sbb
js
xchg
jecxz
sub
mov
stos
push
rolb
mov
xchg
push
jnp
movl
cmp
dec
xor
jmp
sub
fdivrs
mov
addr16
xor
mov
pop
int3
jl
stos
lcall
adc
mov
adcb
cmp
lds
cmc
push
or
lds
mov
enter
sbb
aad
inc
sub
inc
cmp
stos
mov
mov
pop
mov
outsb
ret
jmp
aaa
adc
cmc
sub
dec
jp
shr
push
mov
mov
lds
mov
sub
or
mov
fs
shrl
test
sub
pop
mov
cwtl
pop
repz
aam
addr16
add
xlat
in
jp
cld
cwtl
rclb
rorl
fistpl
aam
orb
push
lods
in
jns
push
stc
push
rep
fcomps
shll
mov
jl
test
sub
test
stos
add
jnp
cmpsb
mov
push
stos
loopne
addr16
psllw
pop
into
add
std
in
lds
jp
icebp
xlat
fidivrs
movsl
and
dec
or
sbb
push
lods
jmp
popa
inc
push
xlat
movsb
jno
cmp
lock
cwtl
daa
sbb
and
daa
push
jl
aas
jnp
repz
pop
scas
add
add
inc
das
mov
divl
pop
popf
fsubrp
jge
or
call
fs
push
xor
dec
cmpsl
cmp
mov
loopne
ss
test
fs
mov
xor
jmp
aad
or
js
lret
mov
xor
int3
mov
lds
adc
xor
mov
sbb
repnz
xchg
jge
outsb
push
add
mov
mov
xlat
lods
mov
push
in
mov
sbb
rcr
loop
pop
cli
and
xor
mov
lock
iret
or
add
mov
xor
push
inc
sbb
and
lahf
mov
ja
leave
xchg
xor
push
dec
sahf
xchg
out
cmp
into
or
int
pop
fisubrs
mov
pop
sbb
and
jg
mov
inc
sbb
cmp
jne
inc
jg
dec
sbbb
mov
and
in
andb
mov
stos
ljmp
pushf
jecxz
pushf
aaa
inc
repz
fsubrs
mov
mov
test
outsb
mov
adc
jecxz
psubsb
mov
mov
sub
pop
push
rorb
xchg
lods
xlat
notl
add
int
add
sahf
sti
xor
js
lcall
dec
mov
jns
pop
sbbb
mov
push
inc
jae
mov
addr16
adc
mov
fnsetpm(287
xchg
sbbb
inc
mov
push
imul
hlt
mov
add
cmp
add
das
jle
pop
dec
push
pop
dec
add
insb
lods
lea
jp
leave
pop
inc
push
add
imulb
xchg
xor
out
mov
xor
inc
div
ret
dec
sar
mov
fnstcw
pop
add
sub
in
out
mov
je
insl
xchg
pop
xchg
in
dec
or
je
lret
fcom
push
ss
xor
pushl
mov
push
icebp
je
les
push
dec
fnsave
cmp
loop
fwait
aas
xor
jae
and
adc
out
and
jbe
jbe
roll
adc
pop
ljmp
loop
xchg
xlat
xorb
notb
into
cmc
inc
orb
aaa
mov
jp
or
mov
jnp
pushf
jle
rcrl
out
inc
dec
pop
add
test
sarl
out
mov
or
xor
or
data16
ret
stos
divb
jmp
mov
into
clc
xchg
push
xchg
adc
add
cmp
add
sbb
fldcw
xchg
insl
leave
cs
adc
test
out
outsb
into
sub
ja
xchg
adc
fwait
lock
mov
aaa
cmp
lock
rorb
sub
pop
test
in
adc
out
fldenv
sbb
cmp
cld
lcall
in
cmp
mov
pop
jo
mov
mov
fistps
lret
adc
cmp
dec
hlt
pop
push
push
ret
popa
fcmovne
mov
or
cmpsb
out
cmpsl
pop
inc
mov
inc
dec
jg
jbe
and
mov
mov
loopne
mulb
ds
sub
mov
dec
outsl
in
xor
cmp
cmp
or
push
out
jae
adc
mov
sbb
hlt
mov
cmpsl
out
dec
leave
cmpsl
fidivs
push
dec
push
cltd
addr16
lds
pop
in
and
cmp
icebp
cmp
pop
notl
lea
sbb
stos
push
dec
sub
push
push
adc
cs
adc
inc
stc
dec
inc
or
int3
out
ficoms
fmull
sti
loopne
cli
mov
mov
jnp
xor
ja
and
movb
outsb
mov
popl
xlat
inc
pushf
ficompl
push
cli
sbb
add
sub
sub
jle
addb
cmp
mov
jb
and
roll
pop
pusha
pop
imul
fldenv
mov
insb
xor
stc
pop
ljmp
push
mov
outsb
mov
and
popf
jne
pop
loop
pop
push
dec
mov
mov
scas
push
in
lcall
push
add
sbb
adc
inc
lret
push
or
xchg
pop
js
jg
sbb
cmp
outsl
push
gs
push
inc
int
jo
adc
stc
shrl
inc
sub
or
mov
into
sbb
loop
out
xchg
mov
sti
mov
push
jns
adc
jne
push
jmp
ds
inc
sub
and
pop
adc
mov
xchg
sub
push
out
daa
pop
cs
negb
xchg
and
pop
pop
dec
add
lock
sbb
lods
mov
mov
and
hlt
dec
or
dec
sub
xor
clc
xor
pop
mov
push
sbb
sbb
cmp
pop
mov
fdivrs
jno
inc
movsb
or
out
imul
fimuls
rolb
jns
mov
mov
xchg
mov
push
add
lcall
mov
out
loop
cld
lahf
xchg
push
dec
pop
sbbl
xor
enter
sub
outsl
pop
xchg
or
pop
sbb
mov
dec
mov
fwait
lods
inc
jmp
out
arpl
or
scas
mov
iret
int
ror
jbe
and
stos
fs
cltd
rolb
mov
sub
jl
dec
pop
pop
xchg
inc
aad
dec
pop
insb
imul
dec
xchg
dec
and
xchg
jbe
stos
jno
enter
and
dec
jo
mov
mov
sbb
push
jno
mov
pop
inc
int3
and
rolb
pop
insb
sbb
mov
jo
fists
jae
adc
out
inc
jb
pop
sbb
sub
loopne
rcll
mov
push
hlt
pop
adc
mov
jmp
ljmp
movsb
aam
stos
pop
pop
pop
cmp
in
pop
mov
mov
and
arpl
xchg
rcll
gs
jns
inc
outsb
jp
cmp
cmp
sarb
sub
in
addr16
push
push
ja
jnp
sti
dec
in
call
mov
call
daa
mov
lea
mov
cld
or
into
or
jb
jns
mov
sahf
mov
cmp
fcoml
xchg
jnp
push
xchg
in
movsb
ret
mov
mov
mov
es
cmpsl
adc
inc
mov
mov
out
lock
fisttpl
or
xchg
xchg
mov
pop
xor
stos
push
jg
popa
popf
or
mul
add
inc
inc
stos
mov
arpl
ljmp
idivl
add
ljmp
rcrb
pop
orb
inc
cltd
sub
push
cmp
repnz
lret
jne
sub
je
jb
daa
mov
mov
push
dec
xchg
punpcklbw
mov
push
cmp
xor
sbb
in
clc
xor
int3
loope
mov
pusha
xchg
stc
cmpsb
stc
inc
shrb
int
in
das
shrl
inc
sbb
pop
xor
dec
lods
sub
fimull
stos
push
xchg
loop
out
adc
loop
movl
aam
jbe
or
aam
push
sti
rcrl
shlb
inc
wbinvd
jo
push
shrl
xchg
hlt
adc
cmp
sub
inc
roll
testl
push
ret
push
sub
xchg
and
push
push
outsb
add
push
in
mov
xchg
jo
and
cmp
push
xor
xlat
bound
adc
mov
sub
lret
and
xor
out
lcall
pop
and
pop
test
mov
nop
sti
bound
xchg
in
fdivrp
mov
mov
jp
xchg
out
inc
mov
add
dec
popf
scas
push
dec
inc
inc
sub
lcall
jl
push
scas
xchg
fisubrs
add
push
test
sbb
repnz
push
or
adc
sbb
jp
push
pushf
and
aad
out
test
sbb
adc
jmp
shl
or
movsb
je
and
lock
shr
cmp
test
jp
out
sub
jae
dec
sub
mov
pop
mov
adc
lea
loope
adc
mov
mov
pop
cld
movsl
movswl
scas
in
or
adcb
dec
mov
es
pop
pop
icebp
cli
ret
or
mov
mov
fsubr
dec
jg
adc
jl
or
jle
shlb
push
xchg
ds
mov
inc
std
scas
dec
adc
bound
cltd
jns
insb
scas
aad
stos
mov
fsubrs
and
adc
add
imul
mov
xor
fmuls
pop
inc
sub
loopne
mov
and
xor
push
xor
adc
insl
sbb
pushf
cwtl
loope
xor
int
add
js
inc
pusha
fucom
icebp
lock
cli
out
iret
pop
into
xchg
rcll
sbb
jns
lretw
jg
sub
aas
jnp
mov
jns
fcmovu
test
push
sarb
outsb
ja
es
sub
jl
lcall
aas
or
sub
scas
lar
cmp
xchg
into
and
adc
sub
mov
lret
push
rolb
or
bound
sti
repnz
leave
imul
jg
xor
inc
or
mov
aas
imul
xchg
inc
adc
aam
sbb
fbstp
outsl
pop
mov
loop
or
dec
out
out
out
scas
xchg
inc
or
jns
mov
sub
xor
sti
add
jp
inc
pushf
and
dec
xor
inc
lods
vpor
aam
lret
sub
nop
sbb
jmp
jnp
xor
xchg
je
push
ja
push
test
xor
in
cmc
jmp
inc
inc
mov
popf
int3
xchg
lahf
jp
mov
fbstp
xorb
push
sbb
mov
test
inc
test
out
repnz
insb
mov
pop
inc
mov
push
sar
or
xor
sti
int
or
xor
loop
push
mov
xchg
aam
pop
leave
and
jae
faddl
jns
iret
xor
mulb
xor
cmp
jb
dec
pop
push
stos
lods
sub
or
fmul
scas
jb
aam
push
and
mov
dec
or
js
xchg
movsl
or
xor
stos
or
aaa
lcall
out
test
idivl
pop
cmpsb
mov
lret
lret
inc
add
clc
mov
mov
inc
inc
aaa
xor
outsl
pushf
cmp
mov
fisttps
jge
mov
aam
xor
cmp
xchg
jmp
cmp
mov
aad
lret
mov
mov
dec
jl
xchg
addr16
xchg
push
stc
rcr
fsubs
imulb
hlt
cs
movsb
add
mov
add
or
outsl
jg
mov
imul
mov
pop
idivl
test
cmp
push
lcall
into
pop
aam
xor
arpl
pop
jbe
jbe
insl
bnd
pop
sbb
jmp
dec
shlb
popa
jmp
fadds
lods
sub
test
sub
mov
jle
and
xor
and
int
arpl
jne
pop
push
fdiv
adc
imul
dec
sbb
iret
and
xchg
add
out
loop
jo
xchg
repnz
sub
xchg
push
cmp
in
jp
jae
aad
add
inc
test
dec
rcl
adc
or
pop
jne
pop
mov
mov
shr
push
out
push
dec
fildll
xlat
lea
and
dec
xor
cmpsb
arpl
ljmp
lahf
mov
fildl
xchg
xor
aas
roll
cltd
or
test
inc
inc
jl
js
pushf
ficomps
fimull
xchg
outsb
pop
cmp
mov
and
add
mov
pushf
xorb
push
jb
push
lock
nop
cmpsb
inc
insl
sbb
lock
or
cmp
push
dec
push
mov
out
or
xchg
lcall
jl
enter
mov
andl
cs
cld
ret
mov
idivb
popf
test
leave
xorl
loopne
mov
or
dec
xlat
xchg
cmp
gs
test
and
adc
mov
je
popf
int3
outsb
sbb
xchg
xchg
push
testl
repz
out
test
inc
mov
movsb
push
and
lret
fwait
add
pusha
jle
gs
ds
sbb
xchg
mov
inc
inc
xor
mov
mull
cmp
dec
pop
pop
in
add
inc
push
hlt
nop
testb
scas
add
ds
cmp
dec
sub
xchg
push
cwtl
xchg
dec
in
inc
hlt
add
sbb
mov
dec
pop
ret
shlb
mov
pop
fisttps
mov
dec
pop
or
clc
dec
in
dec
cmpsl
shrb
lods
mov
dec
xor
stos
push
xchg
and
jecxz
jns
lock
and
test
paddsb
leave
jg
dec
leave
cli
sub
lods
sbb
mov
push
jl
aaa
js
shrl
adc
push
cmp
test
push
dec
ds
push
xchg
adcb
aad
add
nop
or
jb
aad
and
cmpsl
mov
dec
or
lret
dec
inc
leave
sbb
shlb
mov
ret
push
mov
fildll
mov
add
or
push
cmc
ret
pushf
fldl
xchg
arpl
inc
dec
sbb
jbe
rol
popf
lock
pop
pop
je
push
rcr
shlb
sbbb
sub
ret
adc
fwait
pop
xchg
imul
mov
mov
or
push
lods
stc
jbe
cld
mov
out
jmp
mov
iret
inc
std
les
repnz
cmp
jno
push
or
outsb
in
mov
rclb
jg
mov
dec
or
sub
data16
cmp
mov
scas
or
xlat
lret
dec
sbb
adc
repnz
xchg
scas
or
xor
inc
out
cmp
mov
pop
add
out
mov
fisubs
fidivrl
pop
adc
and
rorb
aam
mov
xchg
xchg
adc
in
push
insl
repz
std
loopne,pt
shrb
shlb
add
and
pop
aaa
je
jmp
imul
and
repnz
lock
xchg
jp
ljmp
sbb
xchg
mov
mov
mov
cmc
push
add
sbb
and
lods
shrb
jmp
insb
ret
push
mov
cld
shll
xchg
jmp
mov
idiv
add
push
cli
jnp
jnp
insl
sbb
fstpl
shrl
or
lcall
pop
push
movsl
out
dec
jne
daa
movsl
imul
pop
lea
jp
addl
fistl
sbb
dec
sub
cmp
jmp
shlb
dec
or
xor
pop
cmp
cmpsb
jnp
xlat
cltd
adc
lcall
fsub
leave
dec
push
dec
jae
mov
test
inc
xor
aam
data16
mov
dec
into
mov
xchg
dec
sbb
cmp
imul
lock
xor
jae
mov
add
arpl
notl
in
mov
and
jle
mov
push
lret
neg
leave
out
cmc
loope
cs
lds
cmp
insb
sbb
xchg
in
or
outsb
adc
mov
rorl
jnp
shr
jecxz
popf
xchg
orb
cmpsb
push
mov
add
adc
cmp
test
mov
xor
xchg
rolb
mov
jns
daa
and
pop
lcall
cs
je
dec
adc
and
js
xor
repnz
xchg
xchg
fwait
lea
mov
mov
or
pop
mov
rorb
xchg
movsb
scas
in
inc
sub
add
scas
aas
dec
sahf
popa
fs
outsl
and
jp
aam
add
xchg
loop
xor
push
sbb
cmpsl
arpl
cmp
sbb
movsl
mov
inc
sub
xor
lds
pop
into
cltd
inc
sti
test
mov
pop
fstl
mov
aaa
mov
and
xor
pop
and
cld
lahf
push
add
imul
call
sbb
dec
adc
stos
mov
xor
fstps
in
push
cmp
mov
mov
mov
out
inc
push
inc
inc
jo
insb
enter
addr16
lcall
add
test
jb
or
ret
insb
dec
mov
jle
nop
out
add
pop
hlt
lea
int
and
and
test
imul
push
mov
mov
mov
repz
fsubs
and
shlb
mov
loop
mov
mov
jg
sub
clc
test
roll
push
shll
sbb
and
push
popf
gs
in
dec
and
jmp
scas
push
outsb
cltd
clc
jg
insl
test
xor
add
data16
and
popa
pop
push
popf
gs
jmp
jb
mov
daa
aas
mov
in
adc
adc
pop
clc
add
pop
cmp
push
lret
or
in
in
mov
cmp
push
add
jae
pop
and
loopne
ret
jge
stos
adc
push
ficompl
add
js
sbb
lahf
andb
push
jns
xlat
pop
xorl
test
and
cmp
push
out
lock
and
test
fdivrp
mov
cmp
jnp
int3
sar
outsb
xchg
xor
mov
call
add
xchg
ret
incl
cmc
xor
sbb
lds
shrb
ss
mov
sub
pop
leave
cmp
iret
inc
je
in
fisubrs
test
js
push
adc
mov
notb
fcmovnu
mov
mov
mov
dec
ret
or
jp
fs
xchg
repnz
xor
inc
xor
xchg
or
xchg
cmpsl
fidivrl
test
xchg
push
add
inc
adc
adc
xor
lret
loope
jnp
js
fcmovbe
js
stos
cmc
push
add
push
pop
push
add
movsb
or
outsb
mov
and
mov
jno
mov
xor
lret
mov
cmp
repnz
dec
adc
dec
sbb
push
mov
negl
sub
inc
jo
fstpl
lcall
add
lahf
mov
pop
lahf
jmp
aam
and
inc
mov
jne
je
sub
ret
rcrb
ss
lcall
shr
loope
push
repnz
jne
fcomps
fldcw
mov
xchg
enter
in
xor
adc
mov
xor
xlat
mov
daa
inc
stos
lgs
push
or
nop
rcrl
jbe
mov
inc
out
inc
push
orb
jmp
xor
jo
and
pop
push
push
or
sub
decb
stc
sub
shll
cmpsb
cmp
push
mov
rcll
sti
insl
push
mov
adc
mov
cmp
fildll
icebp
movsb
xor
xor
pop
xorps
sbb
sbb
mov
xor
dec
xchg
jae
xchg
ss
dec
pop
push
into
mov
sub
into
pop
and
adc
sbbl
mov
cs
or
dec
sbb
pop
pushf
out
pop
out
movl
js
adc
pop
das
mov
cwtl
mov
or
sbb
ss
xchg
imul
xchg
les
sbb
hlt
mov
aas
mov
mov
push
loop
pushf
mov
lahf
ret
push
push
xchg
dec
loopne
dec
jns
lahf
out
dec
jle
shl
add
out
in
xor
inc
jp
subl
divl
mov
and
xor
add
xor
jno
dec
test
cmp
xchg
dec
jle
add
adc
xchg
shl
enter
lahf
shlb
sbb
dec
cs
in
int3
cmpl
repz
cmp
xchg
xchg
push
jne
frstor
dec
test
xlat
sbb
jg
idivl
mov
out
pushf
or
add
testl
repz
adc
mov
xor
ljmp
fidivs
mov
push
pop
mov
in
into
and
lock
das
js
das
sbb
adc
bound
sahf
fistps
jb
mov
cmp
inc
pop
adc
push
or
call
sbb
lods
lods
sti
testb
adc
mov
dec
das
daa
cmp
addr16
sti
lret
lret
out
sbb
xchg
jo
jno
ljmp
jge
repz
call
movsb
mov
sbb
or
lret
inc
sti
adc
mov
dec
ja
leave
add
add
jbe
add
iret
jmp
push
hlt
fcomi
xor
xor
mov
cmp
cmc
jo
ljmp
rorb
dec
in
insl
dec
insl
stos
dec
aaa
lods
insl
sub
outsb
ficoms
jb
clc
fistl
dec
lret
lcall
adcl
sub
push
mov
pop
rorb
mov
movsb
push
movaps
data16
leave
sahf
fst
dec
adc
push
adc
lea
movsb
mov
mov
scas
outsl
rorb
pop
push
fsub
leave
push
jecxz
test
out
aam
mov
into
out
add
lahf
shrb
fdivrs
sub
sbb
mov
int
loope
testb
xchg
xor
filds
add
add
cltd
setbe
test
std
arpl
mov
mov
cmp
and
lret
push
sub
sub
scas
ja
fildl
adc
or
inc
enter
aas
mov
aaa
sub
adc
movsl
mov
xchg
dec
cwtl
xchg
sub
adc
pop
xchg
mov
sbb
pop
add
inc
popf
jmp
pop
fnstsw
je
ja
pop
scas
into
mov
adc
rclb
jo
cmp
bound
out
mov
mov
cmpsb
fidivrl
jns
cmp
ficomps
adc
fcmovnb
cli
dec
adc
or
or
cmp
push
mov
loope
loopne
jne
add
xchg
mov
cmpsl
xchg
jo
fildll
mov
and
shrb
inc
and
out
adc
or
out
shlb
dec
lret
xchg
pop
shrb
shrl
test
aad
jp
call
call
mov
int3
repz
stos
int
jge
fsub
lock
clc
dec
decb
popf
pop
sub
sub
jns
ljmp
cmp
mov
lock
jp
push
mov
dec
lcall
mov
dec
sahf
sar
fs
xchg
test
shlb
pop
das
notl
ror
add
gs
cmc
insb
sub
clc
jnp
jbe
xlat
movsl
outsl
mov
xor
outsl
or
and
ljmp
je
mov
in
cmpsb
dec
ja,pt
inc
test
hlt
mov
mov
into
das
data16
jecxz
stc
mov
rcrb
aam
xchg
ja
sbb
add
call
mov
sbb
sbb
pop
sbb
lods
aaa
test
in
jmp
fcmovnb
fcoms
shlb
mov
adc
xchg
test
stos
rclb
test
ret
aam
sti
in
ret
ds
sbb
leave
sub
shll
pop
es
or
adc
mov
lea
sub
cmc
sub
cwtd
jle
jo
dec
jae
pushf
adc
cwtl
push
loopne
mov
pop
inc
clc
lahf
scas
decl
mov
cwtl
test
nop
fwait
addr16
adcl
mov
jbe
jl
aaa
scas
fnstsw
pop
xchg
cli
mov
in
mov
and
mov
aam
mov
in
fidivrs
xor
mov
push
xchg
fdivrs
sahf
test
mov
neg
out
mov
xor
push
dec
sti
icebp
loope
shll
movsl
sub
push
mov
and
cmp
mov
xchg
sbb
mov
popf
cmpl
call
pop
push
xor
cmp
fiadds
xor
dec
cmp
inc
jge
push
or
push
ss
cli
and
fists
cli
ljmp
xor
push
inc
popf
lcall
out
sub
aam
mov
and
dec
jl
or
push
ror
adc
push
xchg
lds
sub
jge
cs
aas
andl
popf
push
inc
fistpl
xlat
xchg
mov
inc
pop
pushf
jg
sbb
push
shrb
xor
das
testb
or
push
xchg
inc
cmp
iret
jl
scas
andb
mov
or
scas
idiv
push
push
and
fimull
xchg
jae
mov
cmp
pusha
shlb
movsb
mov
jne
fsubrl
mov
rolb
adc
fldenv
adc
rcrb
ffree
cwtl
enter
aad
into
dec
pushf
leave
add
push
shl
jge
loop
xor
and
xchg
cltd
push
jmp
pop
dec
fists
cld
and
sbb
jecxz
jp
fbstp
ret
mov
push
mov
xchg
sti
dec
fnstcw
mov
lock
sti
bound
and
adc
fldt
inc
andb
adc
add
mov
push
call
or
add
rcrb
addr16
fdivs
jp
lods
lret
inc
dec
xchg
mov
popa
pop
xor
int
jl
popa
hlt
adc
in
xor
mov
push
imul
into
call
jns
lret
push
test
aad
test
adc
rclb
pop
aaa
ljmp
jns
inc
mov
cmp
repnz
cld
lods
pop
pop
movsl
sbb
addr16
xchg
mov
mov
cmp
push
jp
int3
xchg
out
movsl
inc
lret
pushf
inc
movsb
sti
pop
fisubs
cmc
sbb
adc
adc
and
adc
cmpsb
sti
scas
int
into
movsb
pop
xchg
jp
xor
pop
loop
xchg
testl
or
stc
sub
repz
hlt
jle
call
pushw
xor
inc
push
popf
mov
aam
pop
and
pop
adc
jno
loopne
inc
cmpsl
jmp
int3
xchg
or
js
mov
iret
in
inc
or
gs
iret
mov
mov
ja
pushf
imul
inc
jge
pop
pushf
lods
cltd
inc
cld
movsb
sti
and
pop
xchg
stc
pop
mov
sbb
adc
neg
in
les
loope
insb
fbld
pop
or
movsl
fcompl
add
jbe
push
push
or
popf
and
movsb
inc
incl
sub
int
sub
ficoml
jg
loope
mov
jcxz
add
hlt
inc
add
jge
hlt
fiaddl
pusha
sbb
rcll
int3
mov
aaa
pop
cltd
fs
sbb
das
push
push
lret
or
or
inc
movsb
add
or
repnz
push
xchg
fimull
sbbb
lods
cmp
imul
adc
cmp
sbb
push
dec
add
setbe
add
clc
and
or
jnp
jge
fdivrs
notb
arpl
push
test
cmp
xor
mov
sub
pop
outsl
lret
sbb
cli
fnstenv
jb
and
das
das
testl
sub
pslld
sub
jmp
pop
or
push
repnz
pop
loope
dec
mov
repz
pushf
adc
sbb
and
lods
fstcw
ds
mov
sbb
push
std
inc
xchg
mov
shll
leave
aas
in
and
loopne
or
stos
popa
data16
add
mov
cmp
cmpsb
mov
xchg
add
mov
xor
dec
in
ss
mov
dec
out
push
adc
sub
lret
mov
loope
or
cmp
or
ret
lock
ret
lock
movsb
call
idivl
in
dec
ret
jb
test
es
dec
idivl
push
sti
mov
cmpb
pop
js
push
mov
or
cmc
je
arpl
scas
jecxz
xlat
gs
pop
lret
cmpsb
inc
adc
xchg
popf
rcrb
sti
push
mov
test
test
jo
orb
xor
mov
lds
test
outsb
frstor
pop
ss
in
adc
ficoms
aad
enter
push
hlt
add
xchg
imull
ss
cmp
push
dec
sbb
insl
push
pop
pop
adc
jle
in
icebp
fwait
hlt
cmpl
mov
xchg
imul
cmp
out
shl
stc
pop
lock
pop
lods
xor
outsb
xor
outsb
and
mov
stos
stos
fstp
dec
pop
gs
sbb
mov
xchg
jle
mov
mov
rcrb
cmp
sbb
push
inc
gs
les
icebp
pop
imul
ljmp
sub
mov
outsl
stos
lock
sbb
cli
data16
lahf
jne
je
inc
xchg
sbbl
mov
outsb
or
aas
and
movb
or
inc
pop
shlb
les
js
fwait
loop
or
cmp
pop
cmc
je
decb
and
and
iret
xchg
fidivrs
pop
push
ds
mov
jo
dec
jl
fs
pop
sbb
jnp
loop
inc
push
mov
iret
adc
pop
std
push
cltd
mov
insb
add
xor
push
ss
jmp
jmp
jg
test
cmp
mov
sbb
inc
and
loopne
shll
sub
xor
lret
or
xorb
dec
into
cli
cmpsl
adc
ss
rcrl
aaa
sub
pop
sbbb
xor
js
mov
inc
mov
xchg
push
cmpsb
xchg
cmp
gs
pop
pop
aam
jo
repz
cmp
or
ja
dec
cwtl
call
dec
sub
js
das
out
aam
jns
push
lcall
aam
mov
push
sbb
cwtl
mov
les
in
push
cmp
out
sahf
int
inc
stc
insl
jge
scas
stc
mov
out
adc
movsb
outsl
pop
xlat
sub
inc
and
ret
xchg
stos
cmp
dec
pop
rolb
int3
push
fs
cwtl
add
pop
xorl
je
inc
inc
out
xchg
popf
mov
stc
pop
dec
mov
mov
dec
inc
out
mov
fchs
pop
push
pop
lods
daa
xor
cmp
mov
ja
clc
sub
mov
jnp
dec
lock
enter
roll
jmp
or
cltd
mov
das
sbb
outsb
push
ss
mov
adc
mov
cli
ret
pop
imul
sbb
lea
jl
cmpl
jbe
mov
adc
push
jl
jns
xchg
jnp
cmovs
dec
aam
gs
cli
nop
aad
stos
inc
fs
cmc
iret
ss
test
jne
push
push
rcrl
adc
sbb
xor
cmpl
call
inc
neg
and
cmp
repnz
push
or
cld
sbb
imul
mov
jb
mov
iret
mov
scas
add
cmpsl
fcompl
scas
inc
cmp
out
scas
mov
push
in
mov
xlat
cmp
cmp
leave
enter
dec
pop
adc
mov
lds
test
dec
andb
cwtl
xchg
popa
cmp
das
mov
mov
or
inc
add
jl
add
adc
test
out
je
xor
out
loope
loopne
dec
mov
mov
and
addl
ja
cmc
pop
jno
jb
jae
mov
push
dec
xchg
or
dec
repnz
sbb
push
dec
std
xor
xchg
popf
xchg
dec
add
popa
lock
ret
push
push
insb
xchg
movsb
xchg
repnz
clc
dec
or
out
push
dec
mov
xchg
shrb
dec
xchg
out
push
movl
dec
pop
sbb
dec
int3
leave
pushf
psubd
cs
jae
sar
push
inc
mov
fimull
mov
aaa
cld
test
cmp
xchg
hlt
scas
mov
jns
and
jne
jmp
xchg
and
xchg
lret
cld
and
push
mov
jae
cmpsl
insl
inc
lods
mov
pop
test
push
jecxz
adc
mov
sbb
lds
out
out
or
add
jae
shlb
sbb
pop
mov
mov
into
cmpsl
decl
imul
and
mov
inc
loopne
xchg
sub
outsb
dec
jne
test
add
gs
leave
push
dec
fcoml
adc
cld
pop
lcall
movsl
sbb
mov
inc
fisubl
call
out
add
roll
adc
push
pop
jno
mov
sbb
lahf
pop
int
fsts
jecxz
mov
mov
xchg
jmp
sub
push
nop
aaa
jo
mov
test
sahf
xchg
push
fstpl
out
add
sbb
jge
mov
frstor
lret
mov
das
mov
mul
xor
sbbl
cwtl
sub
fs
cmc
xchg
push
jbe
stos
cmp
ficoml
ss
ja
push
pop
outsl
lods
sub
and
adc
ljmp
cmp
clc
dec
pop
mov
repnz
gs
jo
push
push
lcall
inc
dec
movl
push
push
dec
mov
cltd
in
inc
insl
out
popf
pusha
xchg
xchg
pop
add
mov
push
jnp
lret
enter
add
add
pop
pop
inc
mov
sub
push
xchg
stc
push
lock
add
push
shl
jge
nop
cmp
inc
icebp
cli
cmp
and
ja
fwait
lret
jmp
push
mov
out
and
test
arpl
xchg
subl
xchg
xor
push
cmp
pop
push
push
hlt
popf
ds
push
iret
mov
mov
cwtl
inc
call
aas
js
jbe
out
jo
fildll
out
int3
sub
dec
jle
hlt
movsl
fldcw
cmp
ljmp
or
push
lods
in
les
rclb
movsb
fs
dec
rclb
out
in
cld
xor
pop
out
fwait
int
push
or
bnd
xor
xorb
mov
sti
hlt
movsb
fwait
pop
into
cmp
xchg
jecxz
and
jo
pop
sub
cs
lock
outsl
add
popa
test
test
movsb
push
out
testb
mov
pop
sbb
push
dec
mov
xchg
add
xlat
rcll
push
and
inc
int3
shrb
jl
hlt
movl
pop
mov
mov
add
jg
sahf
adc
xchg
jmp
pushf
popf
lods
in
call
sahf
lret
je
xchg
fucom
pop
stc
sub
cmp
lea
mov
stos
mov
lcall
xchg
cmpsl
test
shll
rcr
xor
imul
lcall
fdivrs
cmp
xorl
pushl
adc
sti
fists
fs
inc
mov
jecxz
mov
stos
scas
cltd
pushf
cltd
or
and
mov
test
movsb
insl
mov
xlat
hlt
and
pop
cli
mov
adc
cmpsl
cmp
jne
adc
and
lret
in
aas
pop
push
std
adc
fbstp
cld
xor
mov
jg
push
mov
push
rorb
xchg
into
pusha
add
fninit
int3
pop
mov
cmp
push
sbb
mov
jp
enter
adc
and
jb
push
icebp
and
cwtl
jecxz
lea
loopne
mov
fldt
xchg
inc
inc
push
rclb
push
lods
daa
sub
mov
jg
das
mov
in
test
jne
and
mov
cmpsb
in
jno
inc
adc
leave
test
add
imul
xor
pop
dec
dec
in
test
orl
adc
leave
mov
sbb
jb
sarb
insl
xchg
ja
or
ds
cmp
inc
cli
inc
daa
sub
rcll
dec
lret
dec
or
pop
mov
dec
xor
cmp
mov
adc
movsb
and
in
test
gs
gs
dec
jns
popf
jne
repz
cwtl
mov
push
xor
cmp
inc
shld
inc
pop
fs
cmpsb
aas
jle
mov
or
pop
outsb
les
inc
jmp
js
pop
mov
sub
adc
dec
sahf
repnz
sub
and
stc
or
mov
sub
dec
dec
aas
xlat
and
dec
jl
ss
cmpsl
lds
inc
ss
in
out
arpl
or
add
mov
mov
pop
push
or
push
clc
arpl
add
or
mov
sbb
and
ficoms
punpckhwd
xor
dec
stos
jle
mov
push
mov
aas
imul
push
rol
mov
in
ljmp
sar
lahf
inc
loopne
into
sub
and
addr16
cmp
cltd
xor
pushf
movsl
movsl
stos
jecxz
addb
pop
sbb
ljmp
pop
loope
sub
inc
inc
popf
mov
test
adcb
movsb
sub
insb
and
cmp
mov
imul
xor
adc
lods
int
ljmp
mov
cmp
mov
rcll
mov
daa
dec
and
xchg
arpl
iret
push
pop
movsl
fiadds
pop
push
sahf
lcall
xlat
sti
cmpsb
push
fisubl
leave
shlb
out
call
mov
push
in
js
imull
dec
into
and
pusha
fwait
inc
jnp
lahf
sbb
jle
adcl
sub
add
outsb
lods
pushf
repz
add
test
ret
push
inc
mov
data16
out
cltd
jecxz
inc
ljmp
push
pop
mov
dec
xlat
dec
stos
push
outsl
insb
orl
xor
aas
jno
mov
xchg
sti
pusha
pop
ja
icebp
and
pop
jp
gs
sub
jae
shr
fucomi
sub
inc
aam
cmp
cmp
pop
pop
jno
fisubl
pop
sbb
mov
push
jecxz
das
jle
or
xor
xchg
sub
mov
jge
sbb
insl
fistps
loop
cmc
pop
jmp
sub
out
adc
adc
daa
or
mov
lods
push
stos
or
data16
sub
push
jb
pop
jg
leave
sti
bound
and
mov
int
pop
xchg
das
jge
adc
dec
movsl
lods
outsl
mov
xchg
jno
shlb
mov
scas
shl
cmp
ret
das
lock
fwait
xchg
jge
adc
sarb
dec
push
mov
add
adc
push
xor
stc
pop
ds
sbb
shrb
sub
push
fucom
data16
iret
xor
fprem1
adc
inc
inc
push
in
fwait
dec
mov
xor
add
decl
sbb
mov
fmull
popf
inc
sahf
dec
mov
test
pop
inc
fidivs
xchg
sti
mov
and
xor
cmp
out
pop
inc
sub
inc
shll
mov
loopne
push
xlat
stos
cwtl
and
lret
out
repnz
scas
movl
cli
lret
data16
aad
sar
loopne
outsb
adcl
inc
jge
dec
cltd
jno
or
push
jmp
xor
test
add
cmp
test
mov
sub
shr
imul
jae
out
cmp
leave
add
dec
dec
xor
test
test
clc
mov
sub
add
out
mov
adc
mull
jnp
pop
in
daa
inc
out
adcb
pop
xchg
cmp
popa
mov
and
lds
insb
inc
sar
jecxz
dec
ss
lods
add
jo
dec
xchg
test
push
andl
add
inc
sub
imul
mov
jmp
ja
jns
nop
sbb
decl
pushf
stos
push
mov
lea
outsb
inc
mov
add
push
and
xchg
mov
lahf
movsb
push
fcoml
dec
inc
add
in
pop
stos
ficompl
sbb
and
fstpl
mov
lock
sbb
in
sub
dec
sahf
movsl
and
fsubrs
repnz
lcall
je
mov
push
in
mov
xor
mov
leave
mov
or
inc
iret
out
gs
lcall
and
pushf
and
cmp
lea
mov
inc
cmp
jp
dec
inc
gs
inc
pop
jl
arpl
les
inc
push
mov
or
in
pop
mov
addb
ds
enter
or
xchg
dec
add
sbb
in
push
popf
inc
dec
and
mov
push
pop
push
cmpsl
insl
sbb
jae
mov
movsl
jecxz
jnp
sbb
xor
push
sbb
fstl
les
incl
test
ficoml
xchg
insb
push
jo
es
mov
pop
mov
popa
mov
enter
push
jl
cmc
xchg
insl
fisttps
mov
sub
loopne
adc
repz
pop
lret
sahf
addl
cwtl
or
mov
hlt
jge
lret
into
adc
repnz
add
xor
fildl
jae
add
pop
sub
sub
and
subl
mov
adc
mov
lcall
mov
in
sti
insl
lods
std
in
sbb
mov
inc
out
mov
test
push
mov
pop
add
adc
push
adc
icebp
rol
pop
test
push
nop
push
rorl
and
xor
in
cmp
push
push
orl
dec
jge
clc
jne
or
lds
addr16
sbb
bound
test
addr16
mov
mov
sub
js
fldl
outsl
stc
fisubs
movsb
pop
ficoml
inc
mov
jne
adc
jae
lods
lods
jp
mov
iret
jge
cs
stc
cmpsb
pop
cmp
lret
fcomps
dec
cmp
xor
ret
xchg
adc
cmp
xchg
imul
jl
xlat
or
cmp
leave
dec
aas
lret
out
fbstp
rcrb
fwait
int
insl
cld
and
cmp
test
jb
pop
popf
pop
mov
leave
sbb
arpl
pop
out
add
lock
outsb
mov
fisttps
xchg
mov
add
pop
cmp
mov
rcr
cmp
pop
jnp
xor
jle
mov
add
pusha
xchg
xlat
push
xorb
pop
cltd
mov
imul
sbb
mov
imul
in
push
and
add
out
in
aam
mov
ja
or
pop
and
test
push
push
adc
call
test
lock
loope
stc
in
or
mov
mov
adc
jecxz
xor
xor
adc
inc
int
fcmovne
bound
xor
sub
rorb
out
addr16
mov
sub
repz
mov
mov
data16
bound
fidivl
xchg
mov
insb
cmp
ljmp
and
data16
enter
scas
pop
sbb
push
mov
enter
xchg
rorb
push
mov
pop
sbb
sarb
jb
ljmp
xor
aad
fsubrs
mov
inc
sti
call
sbb
inc
mov
add
sbb
mov
push
add
fildll
mov
pusha
xchg
std
nop
and
adc
shlb
sub
mov
in
or
push
adc
jg
mov
in
jl
lods
cmpb
or
jb
push
dec
or
mov
add
jae
or
jl
js
jnp
xchg
test
test
leave
add
pop
sbb
dec
mov
push
aas
adcb
jmp
rcrb
sbb
pop
dec
ljmp
orb
jne
xorb
bswap
lods
popf
sbb
mov
dec
cli
jge
out
push
or
or
sub
cmp
cmp
mov
iret
aaa
addr16
or
outsb
jmp
and
aaa
test
push
rcll
test
popa
clc
mov
sahf
rorb
add
divl
ficoml
loope
mov
stc
push
insl
je
cli
inc
arpl
adc
xor
insl
jge
xchg
jnp
pushl
jae
jle
call
adcl
and
lret
lods
test
aad
or
mov
xchg
add
jecxz
popf
sti
jns
fmull
mov
xor
jb
adc
mov
jnp
in
and
mov
imul
inc
int
leave
loope
sarl
jl
movsl
mov
test
fidivs
xor
pop
push
mov
lock
xor
sbb
fists
pop
pop
pop
popf
loope
sub
mov
lods
inc
cli
mov
push
pop
add
xchg
bound
push
xorb
xchg
xor
repnz
xchg
test
arpl
mov
leave
pop
sub
insb
pop
sub
dec
jecxz
jl
sbbb
enter
sbb
xchg
icebp
js
xor
lods
jle
mov
and
outsl
xor
jo
out
out
insl
mov
stc
je
fcomp
sbb
outsl
std
ja
rorb
adc
movl
sbb
pushf
push
jg
pop
mov
mov
movsl
add
inc
xor
xchg
fs
xchg
fsub
cmc
sahf
mov
lds
sub
push
xchg
or
jbe
jmp
mov
and
insl
inc
out
add
add
aam
mov
sbb
lock
or
test
sbb
mov
xchg
pop
xchg
repnz
mov
addr16
pop
insb
inc
mov
in
xorl
add
je
and
icebp
jecxz
popf
negl
hlt
lret
ja
mov
out
test
mov
or
cs
movsl
sub
aaa
dec
xchg
mov
popf
lret
in
mov
lods
mov
mov
adc
les
in
mov
jle
cmc
jo
inc
jg
pop
sub
negb
sub
mov
adc
data16
cmpsb
popa
jle
insl
sbb
rclb
imul
in
aam
stos
pop
sbb
inc
add
cmp
pcmpgtb
pushf
jge
mov
data16
dec
xorl
hlt
add
adc
scas
and
mov
out
and
ds
mov
or
notb
adc
cmp
fldenv
adc
sbb
inc
negb
jmp
push
sub
mov
outsb
ret
dec
ret
mov
cwtl
lret
ljmp
jb
lret
adc
sbb
in
xchg
push
mov
xchg
lahf
push
out
jb
fildl
fwait
sbb
push
pop
mov
fnstcw
pop
aam
mov
test
sub
scas
cmovb
sbb
jno
cld
nop
in
mov
lock
mov
cld
sahf
in
adc
ja
and
cmp
out
mov
jmp
pop
imul
lock
lods
add
popa
and
inc
das
or
mov
dec
icebp
sub
ret
add
jmp
jno
lahf
mov
cmp
pusha
fildll
mov
test
mull
add
xchg
out
outsb
pop
or
inc
test
pop
jb
push
jp
idivl
mov
push
cmp
pop
inc
sti
in
pop
jle
aad
sub
pop
pop
test
repnz
add
mov
mov
jl
fmulp
aad
cwtl
fiadds
sbb
popf
push
adc
or
ss
pop
push
jnp
sarb
mov
scas
leave
mov
jae
push
or
push
mov
js
lods
js
test
adc
xchg
add
jmp
lea
dec
rcl
xchg
mov
mov
je
dec
xchg
rcr
es
in
test
popf
lea
ret
xchg
jno
in
mov
lods
popf
sub
push
push
cmpsb
mov
pop
jb
sbb
mov
xchg
rorb
insl
call
into
pop
adc
nop
movsl
push
push
mov
mov
or
push
jmp
and
psubq
lock
mov
push
test
inc
fcoms
cltd
cld
sbb
sti
js
mov
pop
fmul
jns
mov
sti
sti
jmp
mov
dec
ja
and
fimuls
notl
push
xlat
mov
stos
or
adc
fnstsw
xor
jg
das
les
mov
rcl
loop
mov
daa
and
jmp
mov
aas
xchg
cli
icebp
lcall
inc
or
sub
cmp
popf
shlb
int3
je
cmp
mov
lock
push
test
dec
cmc
push
jns
aad
call
mov
stos
loopne
iret
mov
sar
add
cld
hlt
jo
jecxz
in
xchg
inc
jl
cwtl
daa
cmovno
xor
mov
loop
imul
bound
jnp
clc
adc
push
gs
loopne
or
fistpl
mov
addr16
in
inc
std
leave
inc
je
loop
or
xchg
sbb
daa
sar
ss
movsl
out
sbb
lods
loopne
and
sub
adc
mov
mov
arpl
out
xlat
ret
push
jae
arpl
addl
outsb
cmp
mov
shrl
dec
add
or
out
add
pop
cltd
jnp
adc
hlt
xor
push
fbstp
push
pusha
sbbl
addl
jmp
mov
lret
iret
orb
adc
jo
enter
mov
mov
ljmp
jge
call
loop
push
sub
mov
add
or
out
xchg
insb
shl
ljmp
scas
jecxz
jae
in
jle
push
cmp
pop
arpl
add
dec
push
aas
sub
push
cld
inc
pop
xchg
mov
or
ljmp
jmp
jg
shl
xchg
dec
or
or
mov
sub
add
aam
loopne
xlat
pop
mov
mov
pop
popa
xor
fdivrs
lret
test
js
or
dec
imul
mul
les
dec
scas
dec
idivl
test
add
insl
lods
or
inc
lahf
xchg
outsl
jbe
mov
lods
dec
cmp
cmpsb
xchg
mov
insb
ss
or
fistl
rorl
pop
scas
jae
ret
bound
hlt
sub
push
cltd
pop
push
cltd
rol
sub
xchg
aas
ret
loopne
cwtl
push
and
and
out
mov
lahf
pop
jle
xchg
or
shrl
jmp
sbb
lds
jae
dec
mov
adc
rcrl
mov
inc
fdivp
xchg
sub
fwait
mov
jle
jecxz
push
cli
and
insb
xchg
int
fmull
jmp
xor
rorb
sub
int
scas
cmp
mov
sub
int
imul
jbe
lret
dec
xchg
popf
cld
push
rcrl
cltd
add
stc
push
fcomps
lret
ret
out
mov
mov
fdivrl
mov
pop
addb
pushf
lahf
add
lret
fistps
cmp
out
aad
mov
pop
cltd
push
push
pop
xchg
pushf
sub
jl
inc
out
push
mov
pop
push
mov
sub
mov
sbb
aas
dec
mov
ret
sub
inc
insb
mov
and
add
add
jp
ljmp
push
int3
push
jnp
es
loope
jmp
scas
mov
nop
inc
push
cmc
jmp
dec
sbb
cltd
mov
fs
notl
es
jnp
xor
loop
xchg
lock
sub
insb
shlb
push
cmpl
dec
add
pop
addr16
or
stos
add
fst
aad
cmp
inc
stos
loop
or
movsb
mov
in
add
mov
sub
add
outsb
repnz
add
fidivrl
cs
pop
lock
dec
adc
hlt
dec
mov
loop
ret
cmp
cld
add
aaa
xchg
xchg
xchg
aaa
mov
rclb
cwtl
or
out
xchg
movsl
in
jnp
mov
jno
rolb
lods
jl
dec
in
scas
inc
shrl
outsb
mov
cmp
cmp
xchg
mul
and
das
xchg
fs
add
mov
test
xchg
out
adc
or
insb
les
imull
gs
shl
loop
cmp
inc
jae
cs
shrb
ret
jnp
shll
sbb
mov
pop
jp
shl
nop
call
xchg
in
fdivrp
adc
adc
aad
push
dec
sbb
fldenv
and
es
hlt
or
lods
shrb
lret
pop
aam
int
dec
mov
jo
scas
sbb
addr16
out
jne
sbb
jp
mov
pop
lds
xchg
repnz
lahf
xor
push
pusha
and
xchg
jb
jns
notl
xchg
mov
sub
scas
das
imulb
daa
imul
jp
stos
lods
sbb
stos
sbb
pop
int
rcrl
loop
ja
into
inc
bound
je
cmp
test
popa
jecxz
xchg
push
cmpsb
pusha
icebp
push
mov
adc
fcmovnbe
adc
test
or
fidivrs
xor
mov
fwait
daa
pop
int3
mov
pop
sub
les
lcall
sbb
subb
xchg
mov
je
xchg
xchg
xchg
mov
mov
ret
xor
jecxz
or
loope
mov
mov
cmc
test
rcrl
pop
jmp
push
out
pusha
mov
mov
imul
adc
push
divl
or
or
mov
sbb
jl
jl
jge
adc
scas
ljmp
xor
jg
sbbl
rcrb
jmp
outsl
daa
std
lods
lcall
jecxz
push
jmp
xor
call
ds
jns
movsl
in
loopne
fnsave
push
mov
lret
pop
mov
or
dec
jnp
sub
stc
lods
loopne
and
cmp
cmp
mov
ret
mov
jge
jnp
mov
or
pop
jl
ljmp
insb
data16
push
sbb
sbb
xlat
sbb
out
push
fcompl
sub
mov
jecxz
sub
int3
data16
imul
add
out
pop
push
mov
mov
or
aad
ss
out
movsb
popf
mov
mov
sub
pop
lcall
std
in
pusha
xchg
leave
cmpsb
jp
or
sbb
inc
jl
mov
iret
cmp
les
stos
adc
sbb
ret
mov
cwtl
sbb
mov
push
test
sbb
roll
jo
sub
push
push
cmp
andb
arpl
jnp
adc
mov
mov
mov
pop
stc
sbb
cmp
push
lock
cmp
mov
fbstp
fs
cmp
dec
fcmovne
imull
mov
loopne
fucomip
mov
push
mov
xor
inc
mov
adc
and
loop
adc
cmp
orl
movsl
int
repz
rorl
or
mov
pop
or
pop
test
inc
ret
into
pop
fcoml
sub
xor
jno
aaa
xchg
stos
ret
sub
mov
loope
or
aad
cld
or
or
jg
out
movsl
add
sub
shrl
pop
pop
adc
xor
mov
leave
cmp
lods
outsl
data16
mov
xchg
cmp
enter
mov
pop
mov
daa
jl
sarl
mov
and
push
jle
xorl
dec
lcall
and
mov
inc
jae
jecxz
mov
xor
mov
and
out
jecxz
int
dec
imul
or
or
les
jle
enter
std
sub
int3
mov
dec
int
rorl
cltd
je
aad
cmp
pop
inc
test
and
cmp
out
and
pop
ret
incl
dec
sbb
mov
mov
in
push
rcrl
sbb
push
sub
adc
push
repnz
shll
sbbb
mov
xchg
push
xchg
cltd
loop
sbb
mov
cmp
ljmp
shll
loopne
xchg
scas
fmul
mov
sub
lret
jmp
movsb
pop
and
mov
xchg
jae
loopne
mov
sbb
adc
add
ja,pn
in
sub
mov
sbb
outsl
out
inc
iret
add
mov
inc
movsb
adc
cmp
arpl
xchg
or
pop
rorl
insb
xor
push
mov
fidivrl
inc
rorb
mov
mov
xchg
mov
aas
and
je
push
add
mov
and
push
mov
pop
jge
std
push
inc
lock
imul
mov
sar
jns
sbb
jle
dec
in
stc
pop
scas
into
mov
or
test
mov
dec
hlt
call
and
jecxz
pushf
rcrb
adc
xor
jne
lock
and
xchg
jp
movsl
xor
push
aas
dec
rcrl
push
sbb
push
stos
push
shll
idivb
jae
fldcw
mov
in
fs
mov
leave
ret
fnsave
and
lahf
xor
gs
inc
push
xchg
push
cld
jns
and
dec
inc
dec
xchg
sub
aaa
jl
pop
xchg
icebp
scas
ret
or
add
shll
lcall
stos
ret
add
xor
jb
sti
jle
sbb
in
pop
dec
lcall
test
push
sahf
fldcw
les
fwait
xchg
popf
roll
push
sub
fstpl
movsb
call
popa
xchg
outsb
push
fisubrl
xor
push
xor
mov
lock
ljmp
push
xorb
xchg
fs
jne
or
mov
jnp
cmp
add
idiv
mov
imul
jno
repz
test
push
popa
cwtl
lods
aas
or
jbe
add
xlat
stos
pushf
mull
pop
stos
arpl
lea
inc
fucom
stos
and
mov
pop
push
lods
mov
add
rorl
jo
pop
or
xchg
mov
mov
mov
and
pop
mov
mov
jo
aam
mov
ja
push
in
xchg
pushl
xor
xchg
fisttps
insl
aad
sbb
es
cwtl
xchg
cmp
lds
xlat
sub
sub
sbb
dec
xchg
inc
out
sti
xchg
cwtl
roll
push
jo
lea
pop
popa
add
jp
xchg
test
jo
and
and
xchg
mov
xor
jle
sbb
and
ss
in
sbb
dec
ljmp
or
inc
mov
int
test
jg
or
movsb
ss
into
jb
dec
and
lret
enter
jb
mov
shlb
int3
fmull
xchg
xor
jnp
push
push
jecxz
jle
jo
mov
sti
or
dec
loope
mov
decb
and
mov
cmpsb
ret
cmp
fbld
add
ljmp
dec
mov
jle
jno
or
xor
and
xor
inc
repnz
sub
adc
cmpsl
inc
into
dec
xchg
mov
bound
sahf
jmp
cmpsl
dec
mov
mov
dec
cmp
xchg
rolb
push
xchg
xchg
loop
add
ficoml
ds
add
mov
scas
lods
out
cmpsl
mov
inc
jecxz
push
xchg
pusha
add
lret
cmpsl
jp
mov
stc
movl
push
loope
pushf
es
mov
arpl
xor
pusha
shlb
lret
xchg
pop
lods
and
in
sub
outsb
pop
fmull
sbb
dec
sti
ficompl
lret
or
adc
out
test
fsubr
jo
sbb
add
xor
pop
cmp
test
test
inc
xor
outsb
test
movb
pop
push
minps
sub
push
aas
push
fbld
fldt
mov
sbbl
cli
lods
sarl
mov
imull
dec
adc
loop
add
add
ss
rclb
mov
inc
jge
sbb
fimull
in
imul
lahf
lods
jae
mov
lods
ja
int3
xor
lock
dec
addr16
dec
out
inc
sbb
adc
inc
lcall
hlt
xchg
mov
lods
sbb
xchg
imul
scas
lahf
lea
cmp
cmp
ljmp
subb
test
test
ds
int
cwtl
fucomip
add
insl
sub
out
push
inc
sub
and
jge,pn
mov
dec
sub
lret
enter
jle
push
xchg
mul
push
push
lcall
fimull
scas
out
mov
xchg
jl
out
adc
dec
mov
imul
incl
fldenv
mov
sarb
stc
call
hlt
ljmp
in
ja
push
xor
outsl
cmp
imulb
dec
jb
or
outsl
out
lds
out
xchg
dec
dec
adc
cmpsl
in
mul
sub
cmp
out
inc
pop
sub
call
push
pop
sub
in
shll
into
add
mov
scas
loopne
push
cmpl
sar
mov
aam
imul
sbb
nop
mov
jne
mov
mov
add
sbb
aaa
repz
adc
pop
cmpl
dec
xor
push
xor
sub
outsb
aaa
dec
cmp
pop
rol
xchg
scas
fisttps
pop
or
sti
rorb
pop
dec
xchg
inc
pop
sarb
lods
push
outsb
arpl
mov
sub
and
xchg
xchg
add
addr16
inc
sub
cmp
test
fwait
dec
outsb
clc
loope
jns
lods
jl
ret
push
mov
in
mov
nop
cli
nop
dec
pop
movsl
pushf
sbb
cmpsb
sub
incl
imul
fistpll
inc
pop
hlt
lock
ljmp
pop
in
xchg
les
mov
xchg
fstp
push
outsb
enter
icebp
cld
stos
push
mov
inc
fwait
cltd
add
dec
int3
sub
adcl
jne
movsb
mov
adc
cltd
cs
inc
jp
inc
jo
mov
xlat
mov
call
cmpsl
scas
adc
cmc
jge
out
push
pusha
dec
cwtl
sub
and
and
inc
mov
or
sahf
adc
in
add
sbb
mov
loop
xchg
or
or
jns
push
xor
add
mov
dec
cmp
mov
pop
test
xchg
mov
pusha
push
in
scas
in
int
xchg
sub
pop
vpcomq
aad
xchg
out
andb
insl
mov
xor
jmp
frstor
pop
enter
stc
lods
jno
mov
mov
movsb
ret
clc
pop
xor
jle
dec
mov
jnp
xlat
inc
sbbl
hlt
imul
push
mov
jns
lods
mov
lds
loope
push
enter
pop
je
and
add
xchg
pop
lods
inc
cmpsl
jbe
and
and
loop
scas
sub
jg
mov
es
cmpsb
mov
push
into
js
lea
sbb
push
adc
mov
out
adc
add
into
sub
sbb
push
inc
outsb
clc
in
call
mov
xor
mov
cli
rcrb
push
push
je
sbbb
mov
cmp
clc
nop
idivb
or
lods
pop
xchg
shrl
and
fistps
push
sbb
or
push
adc
sbb
xchg
jecxz
aam
dec
lods
ljmp
test
and
and
jbe
cmpsb
aaa
ret
in
outsb
pop
repnz
mov
dec
fisubrs
mov
insb
pop
push
mov
and
inc
lret
testb
xlat
or
push
jo
cltd
or
push
push
jo
in
cmc
aaa
test
test
fucomp
mov
mov
xchg
jmp
fbld
decl
insb
sub
or
mov
pushf
out
push
dec
lods
iret
xor
jbe
mov
fiaddl
cs
ja
sbb
pop
ljmp
js
imul
jmp
inc
cmpsb
dec
out
scas
popa
push
push
pop
lret
ror
lret
lcall
xor
dec
scas
lock
mov
rcll
sbb
loop
xor
push
pop
in
push
mov
test
js
dec
dec
pop
out
movsl
xchg
mov
outsb
lcall
sub
sbb
popf
daa
mov
lcall
pusha
jl
ja
bnd
outsb
mov
sti
adc
jns
dec
jbe
jge
jmp
aad
mov
mov
sub
pop
in
aad
clc
pusha
and
mov
stos
mov
push
push
pop
adc
mov
cmp
adc
sahf
mov
mov
push
mul
imul
or
sub
or
jmp
repz
jmp
mov
in
ret
xor
insb
fwait
cmp
scas
mov
inc
rcrb
push
fimull
xorb
jp
xchg
xor
popf
inc
jge
jge
jns
enter
xchg
out
std
push
mov
cmp
in
xchg
cmp
mov
mov
pop
xchg
addr16
sbb
clc
call
in
jae
xlat
sahf
mov
pop
scas
dec
roll
leave
xchg
arpl
lods
stc
add
lea
scas
pop
fldenv
adc
and
sbb
je
hlt
movb
gs
ss
lods
mov
sub
cmp
push
jg
and
testb
pushf
arpl
icebp
gs
and
jnp
xchg
aaa
mov
inc
xorb
sub
inc
loopne
fld
outsl
es
rcrw
fildll
push
cmp
push
cs
cmp
cmp
gs
adc
pop
push
sti
in
mov
insl
push
mov
loopne
fstpl
add
push
cmp
push
rol
mov
xchg
call
adc
dec
sub
pushf
dec
push
jl
xor
mov
scas
xor
jle
push
dec
pop
fimull
sub
out
cmp
scas
rolb
mov
je
mov
leave
sbb
pop
or
adcl
dec
js
xor
out
mov
sbb
sub
mov
lahf
fimull
cmpl
pop
imul
push
fs
sbb
shr
sub
jae
cmp
stc
mov
jecxz
scas
dec
add
adc
loopne
pop
mov
sarb
xchg
xor
cs
stos
lahf
daa
test
pop
add
xchg
fldl
pop
sbb
daa
popf
inc
imull
int
cmp
sbb
cs
dec
cmp
pusha
sbb
aas
inc
fdivl
inc
std
jnp
mov
lcall
mov
in
push
sub
and
add
inc
pop
jne
jl
ret
cs
fisttpll
divl
add
pop
xchg
popa
into
inc
mov
xor
test
in
adc
ds
fldcw
xor
cmp
sbb
pminsw
xor
scas
dec
dec
ja
sarl
dec
inc
sbb
fidivrs
inc
aas
lods
jnp
inc
dec
das
xor
test
xchg
aam
ret
popa
lahf
mov
test
outsl
jno
push
xor
ds
inc
test
js
repz
aaa
insb
ja
cmpb
loop
inc
pushf
sbb
adc
icebp
mov
nop
jns
int
fs
mov
int
mov
mov
jne
pop
test
inc
popa
cmp
mov
add
and
out
jl
sub
out
add
dec
clc
inc
pop
scas
insl
out
sbb
cs
out
and
sub
sbb
aam
adc
jl
or
enter
pop
mov
icebp
subb
fwait
and
sub
cmpsl
aam
pop
dec
mov
imul
mov
cli
imul
scas
mov
inc
loope
fildl
cmp
push
xchg
jns
adc
push
cltd
and
fistps
sbb
nop
sbb
cld
scas
test
pop
inc
movsl
fisubl
mov
test
sbb
std
sub
xor
insl
fs
popa
je
andl
rcr
jp
loop
mov
in
pusha
push
push
xchg
sahf
aad
stos
or
pop
loope
mov
sbb
mov
mov
imul
je
xor
lret
mov
insl
mov
popa
inc
test
lds
scas
mov
push
add
mov
mov
mov
out
aaa
xchg
mov
push
cmp
lcall
push
jo
jne
outsl
mov
cmp
arpl
call
xchg
mov
inc
aad
pushl
xchg
stos
or
hlt
cmp
insl
sub
cmpsb
jb
rcrl
outsb
enter
push
or
pop
mov
and
mov
int3
je
bound
lahf
sar
push
sbb
xchg
jp
push
cmc
push
lret
adc
xor
adc
std
push
sahf
in
cmpsl
inc
jecxz
xorl
sbb
adc
xchg
xor
xchg
jmp
mov
jae
dec
push
leave
push
jbe
xorb
xor
cmp
in
or
cmp
xchg
jae
std
pop
xrelease
int
inc
call
daa
insl
mov
jno
push
cmpsl
mov
mov
and
xor
pop
cmpsb
adc
cmpsb
push
jno
icebp
adc
mov
ds
sub
divl
lock
jle
adc
adc
and
xchg
and
mov
and
cmp
or
ljmp
adc
push
pushf
ja
je
std
jno
push
xlat
pop
pop
xor
mov
dec
stc
add
mov
xchg
ss
shlb
arpl
loop
mov
cmpsb
test
jb
ret
test
andb
push
dec
and
xchg
and
les
loop
xor
adc
fistps
pop
cltd
mov
mov
xor
dec
push
xchg
jecxz
sahf
loope
rclb
aad
cltd
lret
xor
repnz
sarl
mov
sarb
enter
pop
enter
xchg
inc
aad
xor
xor
lds
jecxz
inc
add
add
ja
cmp
or
dec
jmp
cs
rorl
shlb
dec
dec
xor
lcall
shll
adc
jl
push
sub
pop
nop
xchg
sub
cmpsl
lods
cmp
sbbb
or
filds
mov
loop
aam
inc
cli
push
adc
sti
sbb
adc
out
mov
mov
les
cmpsb
fiadds
ret
push
push
fstpl
les
xchg
call
ror
int3
arpl
inc
lods
push
cmpsb
je
cs
jge
add
popa
cmpsb
pop
pop
mov
rorb
arpl
dec
xchg
test
scas
mov
repz
inc
lods
mov
adc
das
sti
aaa
or
sbb
lods
adc
xor
rorl
dec
ja
adc
rclb
aas
mov
and
movsb
ret
sti
and
test
push
lret
fistl
clc
ds
pop
sub
xchg
inc
sub
mov
sahf
xor
stos
adc
out
xor
dec
in
xor
mov
dec
pushf
sbb
jp
cmpsl
lahf
jbe
jne
aas
ret
ret
lret
mov
pushf
imul
xchg
arpl
cmp
sub
cmp
imul
pop
xor
or
fdivs
pusha
stc
mov
movsl
fsubs
mov
int3
rorb
jns
in
sbb
sbb
jmp
stc
push
gs
push
sbb
icebp
leave
enter
pop
xor
rorb
lods
daa
shll
mov
mov
sbb
adc
scas
call
jmp
sar
xchg
mov
mov
xchg
add
repnz
jecxz
inc
dec
mov
jae
xor
adc
xor
das
test
cmpl
int3
loope
and
push
push
pop
mov
mov
sbb
adc
mov
out
negl
pop
and
hlt
pushf
mov
push
cwtl
aaa
aam
fdivrs
out
xor
lds
dec
push
mov
pop
jmp
bnd
outsb
mov
jno
cs
es
and
int
xchg
ss
or
test
push
jge
push
lahf
subl
cmp
into
ror
imul
xor
push
xchg
mov
add
mov
mov
sub
dec
idivl
aam
mov
pop
mov
pushf
test
mov
std
sahf
out
sub
cwtl
out
std
inc
mov
sahf
into
mov
xor
sub
mov
jp
aad
lret
lret
push
mov
sbb
andl
mov
insl
fs
popa
push
jg
stos
push
sub
das
int
stos
loopne
add
pop
into
pusha
shll
adc
xor
lods
or
lahf
mov
arpl
jg
and
popa
cmp
hlt
dec
dec
pop
mov
jg
insl
dec
maskmovq
idivl
cmp
mov
js
sub
roll
dec
daa
sbb
push
aaa
mov
test
pop
es
jb
andl
push
jp
test
fcmovnbe
sub
mov
inc
and
mov
cmp
fimull
mov
mov
xchg
cs
cwtl
fisubrl
test
adc
loop
jg
or
fimuls
insl
inc
or
test
clc
xor
and
idivl
insl
mov
inc
cmpsb
jecxz
jg
cmp
xchg
arpl
shlb
inc
ljmp
cmp
repz
in
cmpsl
pop
scas
mov
addl
and
xchg
xor
cmpsl
mov
mov
movsl
adc
out
pop
pop
ret
push
or
lea
sbb
xor
cld
in
ret
mov
sub
movsl
cvtpi2ps
adc
mov
clc
sbb
mov
pusha
dec
dec
bound
pop
pop
iret
lcall
in
fbstp
xchg
sbb
cmc
out
bound
std
cmc
subb
mov
imul
pop
imul
adc
cltd
jge
outsb
or
push
vcvtsd2si
outsb
xchg
adc
stos
aam
divb
fstps
pusha
mov
dec
sub
jl
clc
into
subl
pusha
lods
jne
xchg
out
pop
pop
rcr
outsl
jns
fistpll
add
push
and
inc
negl
dec
out
subl
sahf
je
lds
imull
xchg
adc
or
dec
lock
repnz
and
adc
mov
fidivl
sbbb
lahf
inc
mov
bound
movsl
aaa
adc
xor
sbb
pop
lea
outsb
adc
lahf
cmpsb
jne
repnz
mov
call
and
sub
lret
push
add
fildll
gs
push
fldcw
cmp
movsl
xchg
mov
cmp
xchg
fs
jnp
jno
mov
in
stos
pop
cmp
enter
sub
lods
mov
fldl2t
dec
imul
or
push
and
cwtl
aaa
pushf
mov
inc
mov
mov
cs
repnz
dec
inc
push
cli
inc
roll
cli
mov
sbb
mov
push
frstor
inc
push
fcomip
rcll
ret
andb
mov
mov
mov
pop
xchg
mov
inc
mov
pop
pop
jge
push
je
inc
jno
enter
mov
loope
xchg
push
push
mov
or
push
dec
fcoms
sbb
mov
jae
sub
mov
subb
test
mov
xor
jbe
daa
xchg
sahf
mov
test
jp
mov
cmp
ja
test
mov
lea
pop
cmp
and
add
movsb
inc
jle
nop
add
lea
mov
sbb
lret
leave
out
cmp
xchg
movsb
inc
std
adc
js
xchg
mov
xor
dec
dec
cmp
cmpsb
adc
imull
mov
push
pop
push
gs
shl
and
call
jg
test
repnz
push
shll
mov
sti
adc
or
bound
mov
iret
mov
lea
cmp
gs
enter
nop
stos
shll
adc
stos
pusha
xchg
mov
cmpsb
fmull
arpl
jbe
pop
test
inc
ljmp
jo
cli
mull
movsb
repz
cld
pop
mov
ja
int3
lea
jno
dec
pop
cs
sbb
cmp
fwait
idivl
pop
and
push
fidivl
mov
sub
mov
les
mov
inc
cmp
jbe
mov
stos
ja
push
push
cmp
shlb
jg
fmul
inc
pop
cltd
test
xchg
insl
aam
xor
and
loope
imul
out
pop
arpl
jnp
jo,pn
aam
fimuls
push
push
xlat
clc
daa
lret
out
xchg
leave
jno
or
pop
jecxz
and
or
cwtl
rclb
leave
loopne
or
jmp
fisttpl
push
mul
push
imul
jecxz
ss
jge
pop
cltd
cmpl
cmp
dec
lea
and
adc
stos
pusha
sub
lods
push
jge
mov
sbb
push
sub
lret
sbb
out
mov
push
push
mov
out
jo
outsb
dec
aad
imul
dec
xlat
dec
or
ror
or
cmpsb
and
rclb
std
mov
jno
push
push
ds
cmpsb
clc
sbb
sub
xlat
cld
pop
imul
sbb
jbe
fimuls
jo
call
xchg
repnz
popf
xlat
popf
pop
push
fisubrs
and
orl
shl
sub
jb
push
fs
xchg
push
sbb
push
push
or
push
in
xor
hlt
stos
aam
or
dec
sub
adc
out
add
inc
popa
cmpsl
out
std
dec
scas
jmp
pop
inc
stos
daa
mov
std
cmc
hlt
testl
xchg
and
sarb
sub
in
push
js
inc
pushf
cmpsb
loopne
lret
cli
hlt
dec
jl
xor
mov
popa
in
out
inc
mov
aad
sub
not
test
mov
cmp
mov
dec
add
out
jb
jae
or
pop
les
add
lods
jmp
pop
jecxz
in
icebp
into
push
jle
bound
dec
push
mov
mov
nop
pushl
xor
outsb
gs
add
mov
mov
mov
inc
xor
jp
fs
mov
xor
addb
push
add
mov
jg
jge
loope
cmpl
popl
jl
out
jb
mov
cltd
popf
xor
movsb
add
rcll
leave
inc
inc
add
sbb
jg
pop
cmpsl
shrb
aas
cs
pop
out
fbstp
mov
roll
jmp
adc
bound
out
orb
inc
lea
test
push
fsub
jno
leave
cmc
adc
and
jmp
aam
int3
pushf
cmp
aad
aad
addr16
testb
adc
jmp
es
mov
nop
int3
stc
adc
or
je
jge
icebp
arpl
stc
sarb
scas
das
fcoms
lds
mov
xorl
stos
cmp
shll
sahf
dec
pop
lret
pushf
in
inc
sbb
mov
rcrb
je
int3
cltd
sbb
daa
dec
mov
pop
add
scas
addb
mov
push
dec
mov
pop
dec
lea
dec
int3
fidivl
xor
pop
les
imul
pushf
decl
enter
xor
dec
mov
testb
sbb
ucomiss
sarl
test
xchg
jns
jno
push
pop
dec
mov
lods
inc
fidivrs
jbe
sbb
xor
dec
loopne
cld
and
test
jge
testl
push
jl,pt
jle
xchg
mov
jbe
sar
xchg
rorl
jge
jle
out
sub
mov
ljmp
sub
lds
repz
mov
jnp
dec
leave
xchg
leave
inc
out
ja
sbb
mov
ret
inc
arpl
nop
mov
enter
mov
dec
outsl
mov
inc
lea
xchg
cmp
push
inc
ljmp
xchg
jmp
es
pop
inc
add
std
out
test
test
and
sub
movsb
pop
fs
imul
jecxz
faddl
dec
int3
ror
cmc
pop
ficoms
sbb
fistl
inc
insl
pop
mov
les
into
or
daa
mov
adc
jbe,pn
push
and
jp
fcoms
pop
movsl
sub
mov
and
dec
xor
cmp
iret
icebp
icebp
addr16
xchg
push
xchg
mov
fnstcw
nop
xchg
inc
sub
pop
fs
fsts
lea
jno
adc
inc
sbb
sub
sub
stc
in
cmp
cmpsb
clc
stc
dec
pusha
push
sysret
cmp
mov
ficompl
lret
mov
lret
mov
pop
out
mov
jecxz
outsl
roll
bound
std
sarl
mov
pop
cmpsl
int3
cmp
gs
fs
mov
movsl
and
sbb
into
outsl
xchg
add
jns
test
shrb
loopne
xlat
cmp
mov
insb
movsl
mov
push
sub
xor
xchg
stos
daa
xor
lea
pushf
add
inc
cltd
lods
pushf
cli
sub
mov
xchg
lcall
mov
ret
push
sub
pop
les
jecxz
xor
ficoms
mov
and
xchg
xchg
add
add
jp
cmp
or
jne
cmp
inc
addr16
pop
and
lods
xchg
popf
mov
jmp
sbb
test
or
movsb
push
pop
adc
cwtl
mov
add
sbb
jle
or
lret
imul
jno
mov
adc
test
inc
lock
pop
push
in
inc
icebp
push
and
pop
xchg
fisttpll
add
arpl
adc
pop
fmul
aaa
jo
mov
mov
mov
stos
int
repnz
out
jno
stos
mov
std
mov
nop
fucom
cwtl
inc
push
pop
cmp
mull
sbb
fistpl
cmp
scas
ds
inc
ficoml
clc
push
fwait
jno
xchg
or
and
adc
pop
ds
cs
cmp
jne
call
into
xchg
adc
in
push
inc
or
pop
or
jns
jp
aaa
icebp
andb
popf
sub
ret
incb
ficompl
scas
mov
insb
push
mov
dec
mov
xchg
jp
mov
jns
out
push
jmp
aas
ja
test
lahf
cmpsl
push
or
jb
in
jnp
xchg
pop
sub
mov
jle
jmp
mov
pop
xor
push
jmp
test
loop
pop
cmc
jge
jns
aaa
idivl
popa
lret
bnd
test
test
and
aad
ret
movsl
xor
mov
ljmp
jecxz
mov
push
movsb
leave
sub
dec
mov
int
pop
mov
gs
mov
imul
mov
mov
cmpsb
jg
clc
sbb
shll
ret
dec
test
ja
repz
cwtl
and
imul
jl
pop
rcrb
cmp
mov
arpl
out
and
test
adc
fmulp
or
fsubl
out
push
push
jle
pop
das
ds
sbb
push
xlat
daa
dec
pop
pop
js
jl
aad
xor
xor
sub
sbb
insl
lahf
subb
idivl
int3
xchg
push
dec
adc
fcompl
cmpsl
push
mov
jp
sbb
cli
pop
insb
ret
outsb
cmp
les
bound
dec
push
xchg
incl
or
jp
jmp
mov
test
and
nop
dec
xchg
in
jo
push
push
lret
sbb
mov
sub
scas
cwtl
adc
mov
push
mov
xor
cmp
pop
leave
pop
sub
mov
cmp
dec
cmp
pushf
mov
jnp
and
int3
mov
dec
mov
les
xchg
mov
jne
cmc
mov
mov
dec
les
sub
xor
xor
je
test
dec
mov
push
jno
loope
cmc
dec
imul
sbb
and
ret
cli
mov
popa
pop
in
pop
test
sub
ss
outsl
push
xchg
dec
les
xor
aaa
int3
scas
add
cmp
or
inc
mov
leave
arpl
call
xchg
out
xchg
mov
cltd
push
arpl
fsubs
mov
mov
xor
or
mov
fadds
inc
jbe
xchg
pop
push
icebp
shrb
lret
pop
outsl
faddl
jl
jnp
xor
fisttps
sbb
in
fisubrs
mov
daa
std
enter
jge
icebp
lods
stos
jns
shlb
sbb
std
mov
pop
popf
mov
cli
xorb
popa
in
xchg
add
nop
nop
in
sub
inc
cld
lret
rorb
or
jnp
icebp
cmp
jnp
daa
mov
mov
sub
loopne
jge
ja
push
push
adc
in
lcall
fcomps
shlb
cmp
inc
add
test
pop
daa
or
sub
add
jmp
add
shll
lods
int
rcl
cmpsb
das
test
enter
testb
jns
pop
jo
mov
mov
add
xor
dec
ss
jmp
stos
mov
xor
dec
xchg
call
cmp
cmp
dec
leave
mov
sbb
sbb
movsl
or
push
mov
das
push
inc
daa
subl
inc
jnp
cwtl
sbb
xchg
lcall
out
push
nop
in
negb
and
push
sbb
and
xor
pop
mov
mov
popa
mov
lods
lcall
push
dec
sub
test
in
imul
repz
push
movb
iret
add
or
in
mov
in
test
dec
adc
push
mov
arpl
dec
loope
jno
inc
rorl
xchg
xor
or
adc
fnstenv
push
lcall
bound
and
pop
inc
out
ja
adc
jecxz
shrl
jmp
sbb
mov
mov
cmpsl
lret
push
xor
scas
jnp
dec
jl
sbb
jo
mov
test
mov
sub
ror
daa
dec
pop
jle
adc
dec
mov
jae
ret
es
push
sahf
adc
mov
pusha
ss
sub
ficompl
sub
pop
pop
sub
shlb
rol
or
mov
cli
fisubl
adc
or
mov
std
jae
ret
daa
pusha
jae
mov
filds
inc
fisttps
jle
adc
test
sub
pop
test
add
arpl
cmp
out
sub
movsb
aam
in
mov
sub
scas
inc
loop
jne
push
sbb
xchg
add
mov
add
aam
and
fists
dec
mov
or
pop
rolb
sbb
outsl
add
push
gs
jb
repz
pop
cld
inc
sbb
xchg
inc
sbb
dec
cld
pop
lret
mov
mov
inc
into
xchg
inc
aam
popa
adc
cwtl
jnp
cmpsl
push
jge
sarl
cmpl
adc
les
jge
sbb
fdivrs
fstpl
lahf
in
sub
sub
iret
data16
mov
jl
dec
jae
adc
pop
pop
stos
inc
sbbb
inc
and
andb
and
fnstenv
and
jecxz
sbb
xchg
sbb
fadd
and
gs
and
movsb
sub
inc
fisubl
sbb
int3
mov
cmp
mov
cmpsl
adc
mov
xor
out
xchg
mov
jg
push
pop
cmpsl
and
mov
fisttpl
or
mov
adc
add
fistpl
in
sbb
mov
in
out
mov
sbb
and
push
cmpsl
in
stc
lahf
sarl
mov
lcall
jb
fsubs
pop
mov
inc
aas
cmp
jae
mov
cld
jo
int
mov
sarb
sub
cs
push
lods
xor
xchg
jg
push
cmpl
sbb
cmp
push
pop
outsb
mov
fnsave
cld
lret
mov
mov
xchg
inc
lods
sbb
outsb
mov
add
inc
sub
add
push
jae
in
scas
jnp
inc
mov
pop
das
xchg
mov
cmp
cmc
mov
or
inc
loopne
pop
adc
push
leave
std
sbb
and
scas
movsl
mov
xor
mov
lcall
ret
out
sub
xor
je
adc
add
test
push
fcompl
xor
mov
adc
mov
jmp
jp
jno
sbb
cmp
cmp
imul
in
shr
pop
pop
push
and
or
aaa
faddl
push
pushf
pop
inc
insb
cmpsb
mov
loope
incb
xchg
stc
push
push
inc
inc
cmp
and
lock
repnz
std
out
cld
loope
jl
push
push
adc
lret
add
mov
mov
ljmp
jne
fistpll
mov
ja
xchg
jns
in
push
popl
cmp
cmp
stc
mov
sarb
push
aas
es
pop
into
push
and
cmp
pop
or
jge
mov
mov
or
xchg
repz
pop
mov
fs
mov
push
sbb
dec
das
mov
in
cmp
xor
xchg
test
aam
jle
scas
mov
mov
test
lds
stos
mov
jecxz
test
mov
scas
cmc
sub
rcr
inc
mov
popa
xchg
cs
xlat
popa
push
das
inc
dec
sti
pop
cld
dec
fsubrl
xor
jbe
adc
mov
jmp
cltd
in
je
adc
cwtl
repz
xchg
fidivrs
iret
ret
mov
sub
xor
jle
xor
cwtl
decb
mov
push
jmp
lcall
ja
filds
mov
and
repz
pop
jnp
mov
sbb
int
sub
dec
dec
pop
mov
loopne
call
jg
adc
and
mov
mov
pop
dec
icebp
mov
add
push
xor
fnstenv
mov
push
testb
jl
xorl
sbb
push
popf
xor
or
push
jb
popf
lret
and
inc
mov
fndisi(8087
andl
pop
es
rorl
daa
leave
sub
lahf
fadds
or
mov
pop
sub
mov
movsb
cmp
cmp
lahf
jns
adc
adc
push
inc
jne
jbe
pop
popa
or
mov
imul
push
movsl
sub
add
ret
loope
jle
les
pop
xchg
lret
xchg
ljmp
loopne
xor
push
in
jg
dec
idivb
popf
xor
sub
push
aam
push
push
insl
call
test
addb
rcll
cwtl
js
mov
adcb
mov
or
xor
push
sub
loope
sub
or
push
mov
xor
pop
test
cmp
mov
fisubs
je
push
add
inc
in
add
xchg
enter
cmc
xchg
aad
xchg
mov
or
push
mov
jmp
daa
stc
pushf
xchg
pop
fs
dec
inc
push
add
dec
xor
mov
mov
call
daa
test
test
aam
pop
aad
adc
fisubrl
sub
test
out
mov
xlat
cmp
inc
fs
and
cli
int3
cwtl
push
mov
rorl
push
out
cmc
jo
movsb
mov
pop
and
mov
sti
dec
daa
into
jge
and
cld
int3
mov
js
ficoms
push
sbb
jl
or
rcrb
mov
jle
movsb
lahf
push
or
jecxz
or
clc
and
arpl
sub
decb
loope
push
mov
mov
push
adcb
shll
out
jp
shl
in
inc
mov
inc
icebp
xor
adc
movsb
cmpsl
adc
xchg
and
mov
push
int
loope
repz
fildl
adc
imul
add
lock
push
call
out
adc
js
pop
pushl
sahf
lock
pop
lock
sub
es
je
fcmovu
mov
cmc
outsl
in
stos
ss
dec
in
mov
jo
fbld
shrb
int
xor
or
outsl
pop
xlat
fsub
stc
jl
adcl
jnp
or
pop
cmp
push
and
popf
movsl
nop
dec
aad
in
pop
clc
jbe
aad
aaa
or
jl
dec
repnz
inc
sbb
imul
fcmovb
addr16
mov
jb
enter
add
je
scas
jle
jae
push
sbb
add
lock
movsb
cltd
cmp
sbb
arpl
lods
mov
inc
out
sub
ret
lods
xor
in
cmp
in
out
xchg
push
fcoms
mov
or
scas
pop
lods
dec
stc
in
dec
out
xlat
je
outsl
or
fisttps
mov
out
sub
pop
ret
push
les
popa
sbb
popa
fdivl
mov
jno
jae
inc
mov
push
repz
cmp
js
or
and
scas
in
xchg
add
push
test
cmp
or
and
xchg
sub
cmp
jns
loopne
mov
stc
lods
aaa
fs
push
jmp
fldl
sbb
dec
inc
inc
mov
push
pop
mov
xor
push
lods
pop
dec
or
stos
adc
xor
pop
sbb
push
mov
imul
lcall
stos
sub
out
pop
std
jmp
push
les
sub
aas
insl
fwait
lods
mov
push
add
adc
push
data16
rcrb
js
mov
push
or
mov
insb
imul
cs
stos
decb
std
push
mov
jae
mov
mov
imulb
mov
ficompl
adc
in
lods
xlat
xchg
ds
ljmp
out
sbb
aad
jmp
mov
jo
mov
test
insb
adc
jp
int
arpl
cmp
decl
icebp
outsl
fs
out
insb
jp
pop
lea
stos
sub
mov
lea
repz
mov
and
jo
dec
ss
negb
jp
lods
ret
inc
shll
sti
std
push
jbe
fs
outsl
faddl
out
ficomps
jecxz
out
cmp
ficomps
mov
jecxz
adc
arpl
jp
inc
jmp
adc
sahf
arpl
push
test
mov
push
cld
icebp
popf
jmp
insb
ret
mov
add
push
mov
cs
mov
mov
pop
mov
fsubrl
pop
mov
push
idivb
lcall
out
push
cli
aad
stos
pushf
outsb
in
outsb
add
lret
mov
push
iret
test
xchg
and
adc
xlat
and
loopne
in
lods
add
insl
inc
sub
xchg
add
sub
lret
adc
xchg
mov
and
in
hlt
push
inc
test
pop
jne
mov
add
jno
sbb
fsubrp
add
loope
sbb
mov
mul
cmpb
lock
lahf
xchg
popf
mov
ret
repnz
xchg
sti
nop
xor
dec
shrb
notl
mov
int
in
mov
sarb
out
inc
push
loop
jmp
xor
aaa
mov
mov
loop
je
data16
shl
push
pusha
pop
push
xor
adc
cmpsb
mulb
adc
mov
and
stos
in
xlat
xchg
and
arpl
push
dec
loop
mov
sbb
lret
push
cwtl
or
clc
sahf
gs
jae
fs
sarl
pop
dec
mov
push
xlat
in
cs
in
rol
imul
xchg
movb
std
or
dec
pop
lods
add
dec
jge
out
repnz
test
popa
cmp
xchg
insb
and
sbb
out
jmp
push
movsl
mov
lcall
or
mov
jae
add
aad
lret
sub
test
ror
xchg
aad
mov
outsl
fsubp
push
push
push
int
pushf
adc
jae
int
jecxz
jne
xor
das
mov
cmpl
adc
lret
into
das
js
push
or
aam
data16
jb
push
push
mov
adcb
xchg
sbbl
push
aaa
sub
das
cmp
sbb
arpl
stc
imul
and
xchg
or
mov
xlat
sub
lea
xchg
push
int3
inc
fisubl
test
ret
mov
inc
inc
das
psrlq
aaa
push
mov
fldl
cmp
mov
fs
mov
mov
mov
scas
lcall
xlat
mov
xlat
dec
cmp
repz
pop
add
insb
jp
xchg
and
mov
out
dec
cmpsb
lods
sbb
jo
inc
js
pop
aaa
pop
push
fsubl
bound
push
sub
das
mov
mov
or
xchg
cmc
stos
sti
jg
insb
and
aam
mov
iret
jae
inc
xchg
xchg
inc
and
das
dec
fs
push
sub
push
aam
sbbl
inc
lea
imul
cld
cld
mov
pop
add
popf
push
pop
nop
jb
test
cmp
popa
sahf
sbb
cld
jb
lds
fmuls
cmp
je
fsub
imul
pushf
mov
subb
and
jle
popf
imul
dec
and
arpl
xor
adc
popf
push
cli
xor
and
insb
dec
or
mov
ret
pop
jno
push
dec
sbbl
jg
fsubrp
mov
and
in
adc
roll
shll
test
dec
outsb
adc
sbb
cmovb
aad
push
movb
dec
shlb
aas
shrb
jge
mov
push
cmpsl
dec
jl
or
imul
fwait
adc
rolb
jne
popf
je
dec
pop
outsb
out
xorb
xor
fcomi
jne
popf
push
add
or
sbb
aad
cli
push
inc
inc
mov
daa
jg
push
scas
jg
ljmp
mov
outsl
sti
and
data16
cmc
and
xor
std
mov
cltd
pop
cmp
dec
jp
xchg
ret
push
iret
xchg
and
adcl
xor
addl
clc
sbb
stc
dec
sub
enter
test
add
xchg
sarb
mov
mov
pop
dec
adc
xor
and
pusha
imul
pop
mov
aad
and
je
jmp
pop
out
xchg
and
xor
mov
faddl
lcall
push
inc
loope
es
popw
or
lahf
cmp
jmp
lea
call
insb
pop
std
or
pop
fistps
mov
mov
js
ljmp
out
fiadds
cwtl
push
sub
sbb
cmp
sub
cmpsl
mov
movsb
rolb
test
mov
aas
add
outsl
cld
or
adc
xchg
pusha
lea
xchg
dec
mov
mov
adc
cs
or
add
jmp
and
or
das
lcall
addl
inc
jbe
test
sbb
xchg
push
lods
push
orl
inc
bound
ret
mov
idiv
sub
dec
xchg
lock
mov
iret
sbb
sti
stos
or
icebp
insl
mov
sub
push
clc
or
enter
sbb
arpl
aas
xchg
repz
dec
pop
pop
ret
inc
sub
mov
es
jne
sbb
sbb
std
xchg
fscale
jg
inc
adc
dec
mov
in
fcoms
push
pop
jne
pop
inc
mov
idivl
adc
call
sub
not
dec
stos
lods
jnp
cmp
mov
shrl
pop
sti
test
jae
bswap
or
push
stos
jge
mov
xchg
cmp
stos
imul
dec
jp
cmp
ds
and
and
push
cmp
xchg
push
jb
mov
jecxz
mov
sbbl
jb
out
aaa
or
mov
mov
mov
jmp
les
dec
leave
jl
outsb
outsl
jbe
dec
std
jae
jno
cs
pusha
test
mov
stc
inc
or
stc
lock
mov
dec
adc
out
in
imulb
sub
add
jno
stc
rcrl
popa
inc
cwtl
popf
lcall
jb
or
pop
inc
std
jbe
mov
push
push
or
mov
jle
lods
mov
insl
jle
icebp
push
xchg
and
ret
scas
push
push
ja
sub
dec
int3
insb
shlb
out
dec
xorb
cmpsl
pop
int3
inc
loope
or
adc
sub
ffreep
adc
xlat
pusha
push
orl
dec
pop
sahf
jl
push
or
lods
dec
sub
scas
shrl
rorb
pop
jle
in
cltd
jb
sbbb
lret
addr16
mov
jae
adc
xchg
rcr
inc
icebp
mov
jne,pn
std
jle
dec
lret
shr
dec
cmp
sbb
inc
jg
add
mov
sub
mov
cs
fnsave
ret
call
add
add
sti
push
inc
push
fs
pop
test
call
adc
int3
pop
lods
mov
jbe
push
test
lea
xchg
ret
inc
cmp
mov
ret
cmp
fnstsw
mov
pop
pop
shr
negb
icebp
adc
xchg
or
pop
inc
push
das
ret
mov
mov
sub
mov
test
mov
cmpsb
dec
btr
xor
push
and
add
mov
stc
idiv
adc
adc
test
roll
addr16
ss
sarb
xchg
mov
orl
jbe
or
mov
cs
dec
pop
sub
mov
in
aaa
mov
mov
inc
pop
int3
sbb
ss
fcom
push
push
imul
lret
in
aas
fstps
xrelease
sbb
sahf
out
or
push
nop
jno
jl
in
popa
nop
pusha
add
add
mov
add
sbb
sahf
ds
dec
icebp
int3
ds
aad
xchg
out
in
andl
xchg
ds
loop
fiaddl
repz
jle
notb
arpl
pop
dec
dec
nop
and
mov
clc
mov
push
frstor
shl
inc
jecxz
cmpsb
push
subb
fcomp
dec
jle
pop
imul
mov
jl
jecxz
mov
xor
rcrl
xor
daa
stos
and
mov
or
ss
call
gs
push
mov
arpl
and
sub
jle
add
pop
inc
nop
mov
push
add
cmpsl
adc
xlat
xchg
jns
xchg
leave
mov
fs
and
ds
jle
lods
stc
xchg
xor
add
push
outsl
jae
xchg
into
dec
fs
and
xor
arpl
imul
cmp
loopne
adc
sub
inc
sti
lahf
loope,pt
fwait
pop
mov
sub
imul
adc
jmp
je
sahf
cmp
cmpsb
jne
gs
test
mov
or
mov
roll
add
ret
mov
mov
clc
nop
jp
clc
push
mov
popf
imul
add
xor
mov
fsubr
mov
cmp
mov
faddp
pop
xlat
popa
in
and
and
push
pop
xor
push
in
mov
test
test
push
pusha
imul
sub
jp
fs
fwait
sti
into
xor
movl
xor
push
xchg
cmp
inc
stos
xor
cmpsb
js
push
jl
push
aas
or
xchg
dec
sub
sar
push
adc
scas
jo
or
aam
cmp
mov
sub
jno
outsb
lahf
mov
shlb
mov
sti
cmp
sbb
mov
imul
stc
mov
stos
xor
sbb
xor
inc
js
ss
stc
fwait
xor
adc
sub
rcrb
inc
mov
sub
dec
mov
test
mov
cltd
sub
jo
ljmp
sbb
pop
rolb
orb
fisttpl
dec
inc
sbb
xchg
ss
leave
jg
loope
sbb
sbb
js
aas
loop
out
out
aaa
jmp
outsl
lods
fs
nop
push
cmp
add
inc
jecxz
stc
popa
popf
jmp
cli
and
out
imul
xchg
in
imul
addl
jo
push
cld
fs
sbb
adc
int
fwait
stos
xchg
imul
aam
ud2
daa
mov
push
cmpsl
xchg
loopne
mov
dec
movsb
jp
lcall
dec
jnp
add
jp
mov
daa
fdivr
insl
lahf
jl
dec
ret
add
cli
pushf
lods
arpl
daa
mov
or
or
mov
sbb
pop
dec
dec
and
sub
out
popa
lods
push
push
xor
iret
and
xlat
cmpsl
in
rcr
mov
pop
in
or
pop
lret
jge
daa
sub
sub
dec
lea
mov
fcoms
int
or
jge
mov
orb
cmp
push
mov
fs
out
jge
out
cli
push
movsl
lcall
jb
cli
add
mov
push
mov
roll
fbstp
rorb
mov
mov
push
sub
je
jns
ret
sarb
and
sbb
mov
in
test
movsb
add
lret
mov
fptan
push
stos
scas
popf
xchg
xlat
xor
cwtl
dec
mov
or
rcr
jg
fnstsw
mov
out
aaa
mov
mov
les
test
dec
test
adc
in
adc
leave
in
cltd
outsb
mov
loopne
mov
in
cld
sbb
xor
push
cmp
push
jns
imul
adc
arpl
mov
xchg
shll
loope
or
pop
fcmovnbe
mov
mov
cmpsl
sbbb
xor
xchg
xchg
inc
aas
mov
mov
inc
cmp
lods
mov
test
xor
mov
je
cmp
xor
mov
enter
add
xrelease
daa
shll
sarl
xor
push
push
out
sub
cmpsb
cmpsl
xchg
ljmp
jl
jge
push
and
jo
xchg
xor
rorb
xchg
jmp
jmp
aam
sbb
adc
jmp
fsubr
fildll
sub
pop
mov
push
sahf
mov
dec
dec
pop
sub
nop
add
mov
xchg
in
pushf
push
out
roll
or
into
insl
dec
call
ja
ss
in
insb
jns
pop
cwtl
insb
test
out
add
popf
or
adc
rcrb
add
bound
ljmp
fsubrp
pop
xchg
or
dec
sbb
push
test
cld
adc
aas
repnz
adc
mov
pop
push
dec
icebp
xor
inc
lods
mov
mov
movsl
int3
iret
mov
jne
sahf
or
cmp
jnp
push
sarb
repnz
inc
pop
insl
cmpsl
xchg
dec
mov
xor
mov
mov
bound
dec
imul
mov
sub
subl
popf
push
push
ret
loopne
in
push
or
xor
cmp
fisubs
push
and
push
inc
xchg
cs
fwait
ljmp
xchg
into
xchg
dec
mov
mov
cmpsl
fwait
ja
out
sub
mov
dec
mov
into
xlat
nop
push
dec
je
cmp
mov
call
inc
add
xchg
mov
or
imul
or
pop
mov
push
cmp
cmp
lret
dec
pop
pop
sbb
or
xchg
xlat
inc
sub
aam
sub
and
push
lock
cs
add
push
mov
mov
cmc
js
push
jle
jge
sub
ljmp
imul
pop
test
in
mov
daa
cmp
xchg
inc
cmp
xchg
pop
iret
xchg
jb
shr
xchg
cmp
scas
xchg
mov
mov
stos
test
mov
fs
lahf
sub
xor
push
scas
lcall
iret
sbb
inc
jae
outsb
rolb
pop
jns
test
cmp
mov
sbb
dec
nop
pop
xchg
popf
sub
ret
ss
mov
shl
adc
jp
xchg
add
add
testb
imul
imul
jb
movsl
fsubp
pop
pusha
pop
xchg
cmp
jne
int3
fsts
sarb
ror
stos
rcr
add
ljmp
lods
cmp
sub
fndisi(8087
or
outsl
repz
add
dec
sbb
mov
jo
xchg
mov
dec
push
fists
lods
mov
cmp
cmpsl
cld
ret
out
xlat
pop
xchg
movsl
cmp
mov
sbb
daa
and
daa
cmp
mov
or
xor
jle
dec
dec
aam
mov
fbld
xor
pop
insb
dec
xor
or
repnz
addr16
loopne
jecxz
dec
hlt
pop
mov
or
pop
and
xorl
xor
jbe,pn
idivl
lock
fstpl
mov
shrb
mov
ljmp
leave
mov
js
lock
fists
aas
push
cmp
push
push
mov
adc
leave
filds
fstpt
mov
sbb
ds
jne
push
sbb
arpl
cld
sarb
xchg
paddq
dec
cmp
adc
push
mov
es
fadds
sbb
push
sub
scas
mov
cmp
lahf
inc
sbb
daa
and
mov
sti
sbb
mov
jo
cmp
pop
xchg
sbb
jl
xchg
jne
bound
dec
popf
mov
das
ljmp
push
mov
lea
mov
push
out
data16
push
mov
loop
mov
cmp
pop
daa
jae
addr16
pop
fdivr
aad
sbb
outsl
pusha
xorl
jne
sbb
out
jbe
inc
outsl
sub
sarb
push
jo
cmp
add
ret
inc
and
fmul
mov
sub
ljmp
xchg
adc
mov
mov
xchg
movsl
adc
adc
fistpl
clc
mov
and
loop
test
shr
adc
gs
and
mov
lock
stc
hlt
or
push
cld
ljmp
mov
dec
pop
orb
scas
sub
pop
fdivrl
pop
push
incb
mov
addr16
std
icebp
cmp
inc
push
adc
stos
sbb
mov
std
or
shl
xchg
xor
in
lods
pop
and
xchg
jl
stos
or
jge
mov
das
xor
in
rorb
int3
or
aaa
mov
in
cwtl
loopne
cli
ret
test
mov
mov
xchg
aad
les
cmpsb
lea
sbb
mulb
xchg
jp
sbb
jns
popf
mov
mov
je
push
shl
push
out
aad
rcrl
inc
dec
jecxz
testb
push
mov
pop
dec
add
dec
add
xchg
adc
insl
lret
jl
sbb
in
lcall
fwait
push
jno
push
pop
sbb
jne
pop
dec
stos
dec
outsb
push
pop
test
jo
inc
push
scas
out
pop
add
or
or
push
mov
jecxz
jne
jg
sub
cmp
icebp
mov
mov
rcrb
or
clc
lods
mov
mov
shlb
dec
out
dec
lcall
xor
cwtl
out
add
sbb
adc
std
insl
fs
and
popf
cmp
push
bound
cmp
jge
std
mov
xchg
dec
and
jno
stc
sub
lret
jae
or
lods
cmpsb
loope
mov
mov
insb
stos
jns
aad
jp
imul
fdivrl
jge
adc
leave
fdivs
outsb
call
add
mov
dec
cmpsb
es
push
rorl
xchg
inc
movsb
xchg
lret
notb
mov
sbbl
xor
ja
cmp
mov
dec
push
inc
outsb
adc
xor
inc
pop
mov
test
in
pop
jmp
or
sahf
lahf
and
sub
push
ja
ret
xor
push
mov
std
outsl
fisttpll
test
sbb
loopne
test
vphadddq
imul
mov
imul
test
loopne
stc
pop
mov
cli
nop
es
and
sbb
loope
jb
ds
push
mov
movsb
js
jns
jnp
rclb
insb
push
imul
ds
test
cltd
pushf
and
add
cmp
rcll
cld
adc
push
inc
xlat
jp
push
mov
jp
shrl
bound
fs
scas
outsl
fs
mov
and
push
addb
popa
xlat
xor
mov
imul
bswap
dec
push
mov
xor
fnstcw
fs
cmpsb
jno
add
out
shlb
xchg
mov
fcomip
out
pushf
pop
pop
inc
sub
inc
xchg
fnstcw
mov
xor
outsl
inc
fidivs
dec
aad
bound
popa
adc
cmp
add
xor
push
and
hlt
je
cmp
xlat
cmpsb
stc
icebp
or
test
jge
shrl
cmp
out
xchg
push
cs
mov
sub
jp
sub
jbe
loopne
push
mov
les
xchg
or
stos
repz
push
jecxz
dec
xor
fwait
inc
inc
lea
sub
lods
jns
xchg
loopne
and
dec
gs
jl
cs
fsubs
sbb
add
imul
imul
je
ret
scas
imul
daa
add
push
int
push
scas
add
insl
icebp
mov
std
fwait
iret
inc
push
mov
pushf
and
push
hlt
imul
lcall
add
push
insl
or
push
sbb
fnstcw
fs
sub
jo
scas
mov
adc
sub
xchg
enter
pusha
push
cmp
cmpsb
test
imul
xlat
sub
cwtl
daa
in
jmp
je
sbb
lds
sbb
sbb
lret
mov
movsb
stc
push
jno,pt
cmpsb
mov
mov
roll
loop
int
lea
rcr
aad
js
cld
jno
push
and
jp
inc
inc
daa
addb
test
dec
push
pop
jle
inc
fstpl
aad
mov
mov
faddl
shrb
daa
outsl
fdivl
inc
adc
inc
cmp
mov
pushf
lods
sarl
pop
xchg
push
lret
xchg
inc
jnp
dec
and
bndldx
ret
xchg
mov
imul
jge
mov
xchg
nop
sbb
cmp
out
in
xchg
ficoms
cmpsb
imul
mov
shl
sub
aas
imul
lret
or
mov
jl
jmp
lea
int3
cmp
sub
lods
xchg
xor
or
lods
loop
or
mov
mov
out
push
jb
cltd
jbe
mov
aam
repnz
in
faddl
lcall
mov
ret
rcrb
adc
lods
rcrl
out
rcr
icebp
dec
lds
imul
push
add
add
sahf
adc
jne
ja
ficoms
mov
lret
cmp
arpl
dec
xchg
pushf
adc
scas
in
std
pop
fcomps
sti
jp
dec
mov
and
subb
rcrl
push
shr
addr16
fwait
xchg
pop
repnz
xchg
out
sub
add
add
or
jne
mov
jge
xlat
push
btr
outsl
inc
aad
jmp
inc
test
fsubrs
mov
push
xchg
jmp
lods
pop
cld
cmp
jns
out
push
mov
ret
xchg
cwtl
jbe
xlat
repnz
xchg
sbb
sub
cs
std
xlat
addr16
dec
pushf
js
push
data16
push
cmp
icebp
and
fwait
mov
imul
add
mov
pop
ret
out
inc
fcomp
rcrb
cli
sub
out
and
jmp
adc
sbb
rorl
inc
push
cmpsl
int
add
pop
je
sarb
rolb
mov
add
xchg
fptan
cmp
mov
xor
fs
xor
ja
xor
stos
push
mov
loop
pop
or
sbb
jns
dec
mov
dec
sub
call
xor
pop
mov
test
lcall
pminsw
rep
mov
test
mov
enter
addl
push
xchg
sbb
adc
call
and
sbb
push
mov
sbb
int
inc
cs
fnstsw
inc
add
xor
arpl
cmc
test
inc
inc
imul
cli
inc
push
ja
inc
testb
lret
sbb
mov
out
popa
fs
cmp
adc
cmpsl
fwait
imul
mov
movsb
add
pop
mov
push
test
pop
pop
movsb
clc
pushf
dec
cmp
cld
vpsubb
adc
loopne
mov
mov
cmpsb
dec
jne
loope
ds
cld
test
cli
arpl
test
sub
scas
adc
sub
icebp
jnp
sahf
int
in
scas
cmp
fisttpl
jmp
cltd
inc
pop
into
in
xchg
cmp
and
fcoml
and
xchg
xor
mov
mov
cmp
adc
and
incl
or
out
lds
imul
mov
lods
xchg
imul
loopne
out
outsb
lahf
aas
push
lods
adc
dec
jecxz
fldl
sub
adc
in
pop
or
jne
adc
sub
or
or
push
and
negl
jg
push
xchg
cmp
and
mov
mov
sub
add
pop
loopne
inc
add
mov
in
std
pop
xor
aad
jns
sbb
test
push
icebp
adc
push
icebp
jmp
mov
xchg
push
pop
addr16
xor
cwtl
inc
nop
or
fnstcw
lods
cwtl
popf
pop
sub
in
mov
inc
hlt
shlb
xchg
nop
jb
sbb
sahf
add
jmp
jns
ret
cli
jmp
adc
ds
sbb
sahf
out
xchg
and
jg
pop
mov
mov
imul
sub
pop
add
enter
or
repz
in
or
sub
lds
jmp
add
push
jne
sub
daa
pop
cld
test
and
sub
xchg
inc
fs
cmpsb
push
mov
adc
pop
or
shll
leave
xor
pop
cmp
jecxz
popa
jp
addr16
cmc
dec
jg
add
jecxz
test
lods
sbb
test
pop
pop
loope
fs
cmc
out
sbb
pop
out
cmc
push
loope
xor
jmp
test
push
and
shrb
xchg
sbbb
xor
lea
and
xchg
shll
mov
inc
add
aam
xchg
fisubs
stos
xor
xchg
mov
cmc
incb
and
mov
fidivrl
sbb
dec
push
sub
int
fwait
cmpsl
lods
shll
cmp
add
js
bound
test
les
mov
ss
aad
jb
popf
mov
out
aaa
cltd
jecxz
jge
test
dec
inc
sbb
and
jbe
cmp
cmpsl
cwtl
push
adc
xchg
in
pop
insl
pop
ljmp
in
sub
fldcw
loopne
push
xchg
and
ret
mov
scas
xchg
lea
outsb
lahf
adc
fisubl
bound
push
jl
lahf
jns
mov
sub
push
movsb
sti
adc
dec
popa
test
pop
dec
lds
adc
fadd
pop
push
push
idiv
inc
dec
jno
jmpw
jl
sub
mov
sub
enter
sub
cs
mov
inc
cld
mov
in
mulb
js
je
mov
sub
inc
pop
loope
mov
stos
and
cmpsl
mul
jmp
pop
jg
mov
leave
not
rolb
enter
ljmp
sti
mov
pop
sti
xor
bound
and
lock
addr16
sub
add
xchg
dec
mov
jne
sbb
push
mov
dec
pusha
sub
jp
test
popa
mov
xchg
inc
and
pushl
dec
adc
pop
aaa
push
mov
add
rorl
push
lcall
out
adc
call
mov
xor
xor
jne
fnstcw
inc
decl
xor
xor
mov
cmp
xor
jno
cmp
and
daa
jno
mov
xchg
dec
aad
push
mov
call
jl
sub
mov
sbb
addr16
mov
lods
sar
outsl
cmp
movsb
inc
xor
sbb
cmpsl
scas
call
jle
push
insb
test
pop
dec
stos
add
test
adc
cmp
jns
sahf
mov
mov
pop
scas
push
sub
arpl
imul
rorl
and
iret
sub
int3
lods
sub
out
mov
js
adc
jmp
rolb
mov
popa
addr16
fwait
daa
rcll
std
pusha
mov
insl
iret
or
sub
lds
jecxz
ss
divb
js
aas
sbb
mov
mov
and
jl
sub
shrb
addl
repnz
and
loope
fistpl
pop
dec
adc
or
dec
in
push
or
lcall
popf
rclb
or
jge
sub
data16
rorl
dec
orb
and
mov
push
pop
lods
les
dec
and
jg
push
sub
bound
cmp
xor
aas
leave
pop
insl
loop
mov
movsl
mov
repnz
fldl
sub
fwait
mov
xor
mov
jp
or
xor
adc
shlb
push
sahf
push
icebp
add
mov
push
pop
mov
out
in
sub
jg
adc
or
sbb
xchg
add
sub
les
push
xchg
mov
and
jp
sub
nop
outsb
dec
lock
inc
jbe
pop
push
sbb
mov
mov
ficompl
cltd
or
inc
int3
cld
das
test
pop
jnp
bnd
push
push
daa
jl
iret
mov
in
sub
mov
mov
jb
mov
scas
pop
sahf
mov
mov
mov
add
lret
std
insb
outsl
adc
cmpsl
dec
fimuls
insl
fdivrp
enter
filds
addb
jg
pusha
aam
ret
jg
pop
ret
ss
mov
leave
inc
add
inc
mov
inc
jne
lret
out
mov
das
sub
jae
mov
cli
and
mov
arpl
xor
cmc
push
push
jae
inc
xor
into
inc
dec
stos
out
sbb
lcall
in
inc
adc
pop
or
xlat
push
push
sbb
clc
aaa
sub
lcall
ja
cmpsl
jb
dec
int3
xor
in
sahf
xor
aas
fistps
push
dec
mov
ret
pop
mov
jle
or
fsubrs
xchg
out
push
shl
adc
pop
das
scas
scas
out
lods
mov
or
pop
mull
xchg
mov
cwtl
in
test
pop
or
leave
mov
leave
jle
inc
data16
mov
aaa
std
pop
out
pop
cli
das
std
mov
sbb
out
mov
cmc
xchg
sub
sbb
in
and
push
dec
jecxz
imul
ss
fnstsw
lret
pop
xlat
xor
dec
ret
cli
inc
jno
mov
jge
jo
mov
xor
mov
cli
ficomps
lock
scas
xor
add
popf
js
fsts
mov
test
adc
lcall
ljmp
jg
pop
insl
das
leave
dec
push
pop
in
movsl
fldt
sbb
push
loopne
dec
or
popf
daa
jns
cmpsb
test
sub
jne
ljmp
cmp
sar
cmpsl
mov
roll
xchg
mov
xchg
frstor
les
cmp
aad
cmp
pop
xchg
je
xchg
xchg
sahf
inc
mov
inc
push
mov
adc
nop
ds
js
push
sub
push
and
imul
push
cltd
out
dec
mov
fisubs
mov
fs
cmpsl
xchg
cmp
lock
incl
ljmp
ss
push
add
xor
or
daa
and
xchg
leave
add
ljmp
orb
sub
push
sbb
jp
inc
andb
add
cmp
fnsave
dec
mov
je
loope
int
jg
nop
add
pop
clc
ljmp
cmpsb
loopne
xor
jne
dec
insl
insb
jno
mov
nop
mov
cwtl
sahf
mov
data16
cmp
pusha
push
inc
mov
int3
xchg
jnp
gs
fdivrs
add
mov
jle
popa
fdivl
outsl
or
cmp
mov
mov
not
mov
mov
test
push
scas
aam
mov
mov
out
loope
mov
into
out
cmpsl
pop
into
std
fdivl
dec
and
add
jle
pop
mov
push
imul
xchg
pop
and
and
inc
in
mov
les
lock
daa
xor
cmp
mov
dec
lods
mov
fsubp
clc
rol
push
adc
xchg
sub
ret
or
jne
movsl
push
push
mov
add
hlt
test
mov
ret
ja
add
imul
out
dec
sti
aas
push
out
data16
icebp
out
sub
enter
test
ret
xchg
and
cli
dec
pop
push
imul
jo
test
mov
mov
and
lods
movzwl
inc
mov
es
jns
push
pop
loope
jae
mov
lds
stos
sahf
adc
imul
scas
sub
mov
sbb
or
sub
movsl
adc
jbe
sahf
cmpsl
outsl
jbe
pop
sub
fnstsw
add
int
cmp
cmpsb
push
adc
pop
dec
xchg
cmp
jne
dec
pop
movsb
cmp
jl
adc
pop
xlat
cmpsb
mov
iret
jne
dec
adc
sbb
jecxz
dec
loopne
ret
push
je
nop
or
minps
mov
sbb
pop
lahf
iret
cltd
cmpsl
popa
jl
dec
dec
cmp
push
inc
mov
sub
lcall
push
add
cmovo
and
xor
cmpsb
ljmp
ret
cli
leave
dec
fwait
mov
xlat
jmp
push
clc
jg
add
xchg
sahf
imul
testb
adc
lahf
enter
cli
sbb
stos
repz
test
arpl
cltd
add
xor
sbb
mov
enter
ret
add
fisubl
sbbl
pop
sbb
sub
mov
add
dec
jne
jp
and
push
mov
push
xchg
xor
addb
cs
xor
sar
push
jno
push
das
shll
dec
repnz
movsl
inc
jbe
enter
or
push
jl
lds
dec
sub
scas
inc
shlb
dec
pop
or
add
mov
dec
jg
jbe
push
aaa
or
xchg
adc
or
nop
dec
fmull
call
test
scas
cmp
jnp
test
cs
loopne
in
pop
shll
xor
imul
loope
cwtl
repz
inc
sub
mov
scas
and
push
xchg
pop
dec
arpl
jp
in
mov
test
jecxz
lock
mov
dec
in
mov
inc
rcl
shll
xchg
fdivrl
push
outsb
data16
jno
dec
mov
add
into
rcll
stos
cmp
mov
dec
inc
xor
xor
lods
lock
pushf
popf
in
jno
adc
xor
xchg
loope
es
ja
shll
xor
cmpsb
out
adc
call
popa
push
lret
xor
mov
rclb
repz
pop
push
mov
les
cmp
mov
mov
push
cli
dec
push
pushf
mov
adc
or
push
icebp
cmpsb
ds
mov
shlb
mov
insb
jecxz
or
cmp
sub
dec
pop
and
rcrb
in
enter
push
es
mov
iret
mov
and
mov
cld
scas
dec
int3
sbb
sahf
sbbb
push
mov
jmp
sbb
ds
sarl
sub
xchg
ret
clc
xchg
test
add
stos
sub
xchg
jne
enter
popa
dec
inc
fstps
outsb
push
leave
lret
or
mov
mov
inc
loope
cmc
pushf
jo
mov
daa
cwtl
mov
jae
inc
and
call
push
jmp
push
adc
inc
fisubrs
shll
inc
in
out
and
add
push
pop
ror
cmp
mov
stc
dec
push
adc
xchg
inc
mov
xchg
sub
mov
xor
stos
nop
lcall
sbb
out
and
push
stc
decb
xor
cmp
popf
lods
movsb
lock
pop
test
outsb
aaa
pop
fdivrs
and
imul
aam
or
fsts
test
mov
pusha
jp
add
xchg
xor
adc
cmp
pop
jecxz
rcrb
sub
data16
leave
inc
stc
sbb
inc
mov
push
movb
xlat
loope
nop
shll
popf
mov
or
in
sub
dec
xchg
jl
lahf
shr
xor
stos
jle
xchg
aam
cltd
not
out
in
addw
cli
enter
jge
fcomps
lods
jle
adcl
dec
mov
cmp
xor
lods
xchg
pop
pop
jo
pop
push
stc
outsl
fstpl
ds
stc
push
dec
dec
loop
orb
stc
mov
cmp
jp
push
loopne
pop
imul
mov
cmp
jmp
mov
xlat
xchg
sbb
imul
pop
mov
pop
dec
cmp
inc
out
call
pushf
cmc
xchg
popf
popa
pop
jl
shll
and
int3
lcall
pop
cli
cmp
shr
dec
mov
mov
rol
mov
add
inc
fistps
je
or
xchg
insb
add
out
hlt
inc
jmp
push
sbb
push
jno
or
test
mov
fwait
pop
push
leave
leave
int
dec
pop
lds
nop
cmpsb
hlt
cmp
icebp
and
pop
cltd
sub
mov
mov
push
cltd
imul
std
lahf
shrl
notl
mov
xchg
mov
push
or
xor
rclb
push
add
or
cmp
ja
pop
cmpsl
xor
out
pop
sub
imul
cmp
xor
mov
dec
or
dec
fnstcw
loopne
jmp
mov
cli
es
mov
out
sub
test
mov
push
movsb
imul
push
testl
adc
test
adc
clc
ret
fstpl
xorb
sti
dec
bound
ja
or
mov
dec
dec
dec
fwait
inc
lret
stos
adc
movsb
jecxz
sub
add
add
xchg
lret
dec
out
cltd
xlat
xor
hlt
das
mov
out
xchg
inc
in
mov
xchg
das
jmp
lock
dec
sub
filds
les
jb
les
in
stos
push
pop
sahf
cwtl
xor
iret
loope
add
lret
jnp
inc
imul
xchg
pop
mov
rclb
or
es
dec
cli
sbb
inc
nop
leave
inc
xchg
rolb
mov
add
push
cmp
cltd
push
adc
jmp
cld
push
mov
lret
repnz
and
pop
xchg
xor
sbb
in
jo
inc
in
cltd
mov
adc
cmp
out
das
mov
add
inc
pop
pop
mov
pop
add
and
push
jae
fiaddl
jae
into
nop
add
mov
xchg
aas
das
aas
jns
nop
stos
sbb
lcall
imul
in
je
in
inc
inc
popf
mov
fcomps
lret
call
mov
cs
pop
cmp
testl
cmp
xor
cs
fistl
add
loopne
insb
sub
addr16
lret
push
adc
imul
in
xchg
pop
sub
xchg
in
xchg
testb
add
aam
cmp
ret
mov
pop
sub
xchg
jmp
aas
cmp
sub
inc
rcll
pop
inc
inc
pusha
sub
pop
push
sub
stc
adc
push
jnp
jg
fisubs
icebp
outsl
jns
daa
nop
mov
inc
and
push
jecxz
sahf
imul
into
adc
add
stos
or
adc
dec
test
cmp
sbb
outsl
inc
jnp
push
je
imul
push
and
je
in
lock
outsb
mov
data16
inc
cmp
iret
fs
mov
and
movsb
dec
sbb
cltd
dec
fcmovbe
adc
add
pop
cmp
jns
out
test
sub
fldt
imul
pop
sarl
jb
xchg
pusha
cli
sub
test
scas
sbb
mov
inc
loop
loope
ss
xchg
cmp
test
stos
mov
clc
adc
subl
andb
jg
add
mov
add
jmp
gs
test
data16
lcall
stos
xchg
cmp
cmpsb
fdivr
push
inc
mov
pop
ja
lret
and
mov
pusha
clc
sub
rol
arpl
cmpsb
xor
sbb
jnp
xor
pop
rorb
sti
mov
add
push
or
pop
adc
jmp
insb
lods
cltd
cmp
dec
popa
movsl
or
test
or
out
inc
adc
loope
push
sbb
sbb
fucomp
xor
ljmp
movsl
mov
es
aam
xor
mov
out
push
jbe
dec
mov
loope
push
cmpsl
fsubr
jp
or
inc
sbb
testb
lock
pusha
xchg
adc
mov
test
add
add
scas
pop
jno
lahf
ret
jb
in
push
cmp
add
jns
ds
mov
inc
rolb
jns
jb
push
or
or
fwait
je
jg
push
inc
stos
mov
adc
mov
dec
pop
mov
or
in
cmp
shlb
cmp
inc
arpl
and
pop
in
mov
sub
and
jecxz
inc
stos
pop
cmp
jo
jne
call
or
mov
xchg
mov
xor
and
jnp
push
lds
pop
loope
mov
mov
jbe
push
or
jns
test
in
out
dec
cwtl
pop
jne
int
out
adc
aaa
and
jge
adc
mov
sub
repz
aaa
insb
es
and
adc
adc
dec
int
iret
xlat
fdivr
mov
cld
in
insb
push
icebp
test
jle
sar
cwtl
push
ja
push
fldt
adc
movsl
les
mov
insl
and
mov
and
pushl
into
inc
mov
movsb
mov
lock
loopne
mov
ret
js
aas
bound
dec
or
mov
lock
iret
sub
imul
fst
xor
aad
mov
rorb
jnp
or
rcll
or
dec
adc
lcall
in
rcl
xor
divl
xor
dec
les
sti
mov
lods
and
pop
imul
push
inc
xchg
fwait
sbb
test
fidivl
rcr
test
jbe
andb
imul
push
inc
in
cltd
xchg
adc
and
jbe
mov
setl
rorb
lods
or
xchg
xor
fidivrs
cmp
pop
rorb
jmp
ljmp
mov
shl
add
aaa
jmp
dec
repnz
jge
fcomp
mov
bound
pusha
cmpl
stc
lahf
imul
cltd
lahf
xchg
enter
adc
imul
dec
jno
xlat
shrd
mov
push
xchg
lret
xor
xor
dec
adc
mov
cmpsb
rcrb
pop
andb
aad
stos
xchg
divb
xchg
or
stos
lret
enter
cwtl
push
mov
in
outsl
sar
fidivrs
pop
fnstcw
xor
xor
mov
or
mov
mov
jbe
or
cmp
adc
sub
in
stos
and
xchg
in
in
sti
nop
mov
shll
in
lock
aam
inc
cmpb
jno
mov
mov
dec
mov
fidivrs
out
fld1
std
fstpt
cmp
sbb
xlat
mov
add
notl
into
pop
and
inc
lock
adc
push
sub
xchg
jns
jns
gs
pushf
mov
adcl
lods
icebp
mov
cmp
cmpsb
and
out
pop
lret
fs
xor
or
pop
es
inc
xchg
imul
pop
gs
dec
fcomip
sub
inc
cmp
dec
jg
inc
add
aam
mov
add
flds
scas
iret
shrb
daa
mov
stos
sub
std
mov
mov
adc
xchg
mov
dec
hlt
sti
pop
aad
jb
in
lods
sarb
ja
jbe
hlt
pop
out
aam
fidivrs
sbb
fimuls
pop
cld
cmp
lret
push
adc
test
or
call
pop
pop
jp
movb
jne
xchg
dec
mov
mov
aam
mov
inc
inc
or
aaa
fildll
add
add
xor
pop
push
mov
jae,pn
shll
inc
push
jle
cli
nop
pop
push
lcall
scas
iret
icebp
cltd
mov
inc
jns
push
shrb
movsb
cmpsb
sbb
jae
sub
sbbl
inc
lods
aas
lret
int3
pushf
in
cmc
adc
cmp
fdivr
push
mov
fdivl
xor
cmp
or
cmp
and
cli
int
and
pop
mov
stc
out
ss
xor
rorl
inc
aam
pop
pop
cs
lahf
gs
movsb
out
stos
in
icebp
sbb
jne
cmpsl
ret
test
leave
aas
push
incl
jnp
dec
inc
xchg
mov
jle
jne
mov
lahf
out
out
rorb
stos
scas
fdiv
clc
sbb
mov
mov
inc
lods
stos
test
lea
insb
sub
cld
sbb
push
mov
ds
xor
pop
xor
gs
push
clc
pop
cvttps2pi
inc
insb
icebp
pop
add
jmp
sub
repnz
xor
pop
sub
test
fcomi
cmp
pop
jge
push
jmp
fstpt
dec
inc
jecxz
shrb
sub
fidivl
ja
lcall
mov
bound
iret
rcr
push
pop
repnz
int
xor
gs
shll
test
mov
movsb
call
lods
imul
mov
dec
dec
adc
or
fidivs
sub
or
das
jnp
fadds
dec
fcom
mov
lahf
lods
jae
jns
ds
rclb
lcall
inc
lret
lcall
push
fcompl
adc
adc
enter
add
mov
inc
clc
je
arpl
repz
or
cmp
xor
mov
aam
sbb
cmp
icebp
or
dec
aad
stc
adc
in
xchg
in
mov
lret
push
cli
or
mov
js
rcr
jmp
add
out
push
mov
cmpl
arpl
clc
push
mov
add
es
xchg
push
fdivl
mov
jle
lods
sub
cmovae
daa
mov
test
orl
mov
ljmp
lods
sub
movsb
mov
pop
cltd
stos
push
and
bound
push
adc
jp
sbb
mov
jg
pushf
mov
adc
xchg
loop
nop
push
call
sbb
ret
lret
aam
mov
stos
imul
movsb
arpl
jge
test
std
into
adc
push
shl
mov
mov
jns
lods
xor
test
cmp
nop
or
sbb
mov
pop
ja,pn
test
das
jp
in
push
mov
push
into
addr16
sub
test
scas
lds
inc
fst
adc
imul
rcrl
jns
fidivrs
ss
cwtl
xlat
ds
gs
outsb
or
pop
call
into
push
mov
mov
sbb
jno
leave
out
aam
jbe
loope
inc
cmp
mov
int3
inc
push
or
push
movsl
das
sbb
pop
rdmsr
inc
hlt
out
movsb
push
ret
outsb
std
rcrb
inc
fldz
addr16
adc
add
imul
repz
and
or
and
sbb
stos
mov
mov
mov
fcompl
out
movsl
mov
mov
gs
cmp
cwtl
mov
sbb
sub
mov
sub
mov
bound
das
mov
fnsave
test
aad
ljmp
dec
loope
sbb
stc
mov
and
test
testl
sub
add
jle
loope
scas
pop
int
stc
popa
jne
sbb
xor
test
inc
in
and
sbb
mov
iret
mov
cld
jae
sbb
outsb
push
xlat
xchg
jmp
sbb
into
sbb
and
adc
pop
out
pop
inc
dec
leave
imul
imul
fsubl
fsubl
fcoms
and
pushl
jl
arpl
ret
push
sahf
push
sub
sbb
pop
mov
and
or
jae
xchg
leave
fimuls
bound
nop
xor
in
shl
ret
ret
dec
mov
jp
hlt
jp
cmpb
adc
push
repz
or
lock
and
jno
dec
inc
xlat
sbb
and
mov
xchg
push
and
lret
mov
xlat
cltd
or
sti
xchg
jnp
icebp
jnp
aas
pop
mov
push
and
mov
stos
lret
rorb
dec
xchg
stos
shll
ret
mov
xor
push
and
in
push
int3
out
in
std
mov
sbb
mov
test
and
mov
sbb
mov
xchg
mov
cli
xor
xchg
push
scas
push
push
xchg
xor
rorb
fldenv
pop
fcmove
pop
mov
jmp
int
push
xor
cmp
jb
dec
int3
push
push
leave
in
jg
xchg
aam
mov
pop
shr
jnp
jge
mov
mov
movsl
jle
xor
out
cli
dec
mov
or
les
test
loopne
js
pop
mov
arpl
jle
test
arpl
sub
mov
icebp
repnz
inc
mov
push
add
xor
adc
mov
jno
outsl
mov
popf
imul
sbb
aam
mov
repnz
xor
mov
imul
add
lods
jp
mov
popf
ficompl
fldcw
mov
pop
xor
adc
xorb
push
jae
roll
lock
int3
loopne
icebp
adc
pop
mov
push
pusha
in
adc
push
or
add
out
mov
movsl
pop
dec
rcr
cs
add
lcall
xchg
lock
dec
add
or
cmp
push
aam
aas
inc
mov
and
idivb
imull
cmpsl
jb
addl
es
mov
icebp
inc
inc
mov
xor
fst
adc
jecxz
adc
shrb
jae
adc
mov
dec
lds
enter
and
shll
mov
lods
mov
xor
push
add
xchg
aaa
dec
hlt
mov
cmp
sbb
fstpt
daa
montmul
cmpsb
add
xchg
pushf
jnp
cld
cmpsb
out
into
jp
mov
or
lds
cmp
inc
adc
adc
and
fidivrl
nop
sti
jne
mov
icebp
sbb
mov
popf
cmpsl
lret
cmp
mov
mov
js
adcb
mov
or
mov
rcr
jmp
push
loopne
or
scas
int
mov
pop
addr16
and
les
jb
lcall
std
or
in
shll
lods
xchg
jns
pop
add
fnstcw
test
aaa
adc
sbb
xor
mov
push
fsubrs
dec
imul
dec
mov
out
inc
mov
data16
subb
loop
inc
push
mov
push
lods
mov
ds
jnp
jae
loopne
iret
mov
sbb
add
mov
and
xor
cmpsl
loopne
and
mov
mov
add
mov
jae
dec
adc
xchg
xor
arpl
call
pop
push
in
int
ljmp
sar
addr16
inc
jb
add
pushf
inc
fisubl
mov
sbb
stc
add
pop
mov
jmp
decb
mov
sbb
push
in
aam
jno
fwait
sahf
cmp
test
mov
enter
cmp
xor
mov
aaa
pushf
pop
movsl
stos
out
dec
stc
fdivl
arpl
mov
inc
and
mov
jl
adc
pop
pushf
loope
push
add
pop
push
pop
push
xchg
xchg
pop
ss
and
fsubl
insb
movsl
cmc
clc
jo
iret
in
pop
lcall
imul
loop
sub
fstpl
sbb
lahf
dec
imul
push
mov
test
jg
in
xor
inc
and
cmc
sbbb
pop
mov
or
sbbb
loop
xor
icebp
add
dec
dec
out
sub
fdivl
test
adc
enter
pop
inc
pop
jl
out
lock
xchg
loop
xchg
pop
imul
push
jns
and
sbb
sarl
test
movsb
lret
into
pop
jne
mov
aad
stc
push
cmp
test
je
mov
adcb
outsl
mov
loop
das
add
push
sbb
mov
or
outsl
sbb
mov
sub
imul
idivl
lret
addl
negb
push
push
xchg
push
jae
test
or
xchg
adcl
popa
pop
fdivs
push
push
lahf
hlt
xor
jo
out
inc
sub
push
shlb
ss
ljmp
inc
in
xor
mov
jbe
js
sub
clc
mov
sub
stos
jne
pop
push
imul
in
int
scas
in
adc
call
adc
pop
pop
loopne
enter
lahf
ss
jo
mov
mov
enter
out
xor
xchg
repnz
lret
adc
out
imul
std
dec
dec
adc
das
div
xor
cmpsl
cmp
test
and
mov
ss
iret
sub
sub
or
mov
sub
jbe
pop
lea
and
subb
dec
sbb
test
das
popf
inc
cmp
es
rclb
or
fisttpll
pop
addr16
dec
std
mov
lock
aas
popf
push
mov
sbb
pusha
aad
out
bound
sub
test
mov
icebp
xor
inc
fimuls
sahf
xor
sbb
jnp
push
outsb
insl
movsl
or
jno
or
fbstp
push
fsubrs
add
push
cmp
inc
sub
cld
and
xor
dec
jecxz
push
cmp
lock
sbb
pusha
add
inc
neg
cwtl
outsl
ret
adc
int
jb
mov
lcall
lahf
cli
dec
cmp
test
test
popf
jecxz
push
push
mov
addb
cmp
dec
push
stc
add
in
sahf
dec
lods
or
mov
lcall
xchg
lret
fidivrs
arpl
out
in
xlat
daa
aas
cwtl
mov
xchg
or
loopne
dec
jbe
cwtl
in
cld
out
daa
sbb
push
sti
xchg
xchg
movb
adc
and
add
add
push
aad
fcoms
das
and
pop
inc
mov
mov
lods
xlat
lea
lds
inc
dec
xor
out
jo
mov
rcrb
pusha
cmpsl
imul
call
mov
sub
adc
nop
ss
push
and
inc
adc
insl
scas
ljmp
mov
mov
adc
ja
daa
dec
daa
gs
and
xchg
mov
jmp
fildl
mov
fxam
fnstenv
imul
lea
fcoml
push
cmp
nop
cmp
cmc
mov
jnp
iret
mov
xor
fcomip
aaa
scas
xchg
lahf
outsl
pop
fistpl
xor
cmp
mov
dec
mov
sub
decl
repnz
sub
add
lock
std
ss
push
mov
aas
sub
icebp
shlb
insl
das
outsb
jbe
jmp
lcall
mov
adc
inc
xchg
movl
stos
xchg
cmpl
pop
mov
lea
jmp
sub
push
push
push
lahf
pop
sbb
mov
out
and
cwtl
into
cmp
xlat
inc
aam
je
loope
outsb
push
rcl
hlt
insl
adc
and
xchg
and
sub
pop
mov
das
adc
je
xchg
fs
push
cmp
pop
aaa
je
sbb
shrb
add
enter
out
cmp
pop
dec
fists
mov
mull
imul
out
roll
jl
lret
sbb
clc
dec
mov
loop
filds
test
rol
mov
ljmp
inc
int3
mov
xchg
cmp
cmpsl
in
dec
push
popf
shll
js
in
mov
pusha
xchg
je
adc
inc
sub
pop
jg
sbb
and
shlb
int3
adc
jae
lods
pop
or
jle
mov
mov
rcrl
mov
mov
mov
cltd
out
push
stc
lods
pop
sub
movsl
xor
adc
aam
push
mov
enter
aam
jecxz
xor
jo
mov
aam
das
test
scas
fistpll
dec
dec
dec
or
xor
lea
stc
mov
ss
push
ljmp
pushf
mov
test
xchg
inc
jl
dec
movsb
rorl
xor
mov
std
incl
mov
in
shl
loop
sub
mov
pop
movl
idivb
pop
gs
lret
ret
daa
popa
out
dec
dec
push
jns
xor
sbb
rolb
into
cli
addr16
lods
push
rcr
pop
lods
jne
lahf
cmp
jo
inc
popf
lcall
push
js
gs
sbb
xlat
sub
cltd
pusha
mov
movsb
mov
xor
xchg
or
std
repz
inc
mov
mov
or
dec
mov
jge
and
pop
leave
cld
rolb
jno
daa
rol
push
das
pop
mov
lret
push
lods
sub
scas
cmpsb
or
fs
fisubrs
lock
nop
imul
enter
inc
iret
dec
and
cld
xchg
mov
mov
push
pop
jp
or
push
jp
mov
ds
stc
jne
or
jns
push
jg
or
pop
imul
pop
shll
fists
repz
add
fs
xchg
or
scas
add
test
arpl
inc
pop
lods
sbb
lods
mov
cmp
mov
pusha
lds
outsl
inc
rol
loope
insl
ljmp
lods
mov
gs
dec
sbb
ss
sbb
xlat
adc
decl
scas
or
mov
inc
jp
out
jmp
jnp
mulb
add
test
sahf
xor
dec
xchg
loopne
mov
adcl
test
cli
mov
mov
mov
out
insl
cmovne
cmpsb
in
pop
sarb
mov
ficompl
push
loop
sub
adc
fwait
or
icebp
lea
stos
push
sub
jo
inc
imul
or
dec
jnp
and
add
push
ret
mov
cmpsb
push
negl
pop
mov
cmp
insb
add
ret
dec
dec
loopne
shr
enter
sti
adc
in
sti
pop
int
shlb
xor
loopne
subl
adc
or
pop
fnstcw
push
test
sbb
adc
xchg
outsl
push
pop
lret
adc
pop
fidivl
addr16
je
push
test
inc
out
xchg
test
xor
xorb
cmp
mov
call
sbb
mov
pop
and
mov
fsubr
outsl
xchg
push
scas
cmp
lahf
mov
insl
orb
aaa
ret
ljmp
stos
sub
ja
mov
and
pusha
jmp
hlt
test
pop
dec
sub
or
popf
xchg
and
xor
loop
xchg
add
cmpb
js
push
pop
xor
xorps
sbb
pop
lock
inc
fisubrs
daa
sub
dec
add
popf
pop
jno
mov
inc
data16
sti
or
and
adc
je
xor
sbb
or
lea
shlb
add
and
pop
outsb
pop
cmp
pop
hlt
rcrl
out
dec
adc
in
add
jae
jo
mov
idiv
cmp
cmp
mov
xchg
and
xlat
or
ds
fisttpll
and
stos
lods
and
inc
cmpsb
sbb
in
aam
adcl
add
rorl
shrl
adc
shll
in
adc
insl
mov
ss
cmp
jle
mov
fsubs
sbb
insb
inc
ret
movsl
rcr
scas
push
xchg
cmp
inc
orb
arpl
scas
pop
pop
cmp
aad
pop
js
pop
shlb
sub
aad
cmc
fwait
mov
add
xchg
dec
mov
call
lcall
mov
jo
dec
stos
dec
scas
mov
inc
xor
daa
xchg
ja
xor
jmp
cmpsl
leave
iret
mov
dec
stos
in
rcrl
mov
mov
push
and
leave
add
mov
pop
enter
xor
fsubs
dec
add
sub
dec
add
rcr
inc
pop
div
clc
int3
mov
mov
or
subb
das
and
mov
fdiv
dec
mov
jmp
subb
xor
repnz
and
lods
mov
fsubp
js
cs
lock
dec
adc
jecxz
jg
sub
andb
pop
cs
pop
arpl
xor
jnp
cmc
test
cmpl
xlat
daa
adc
ret
mov
xor
adc
mov
sub
ret
mov
sbb
leave
pushf
ds
mov
nop
mov
mov
push
mov
rorl
xor
pop
push
out
mov
into
mov
dec
push
popf
pop
daa
adc
mov
push
mov
pop
xchg
int3
adc
lahf
push
fsubr
leave
in
adc
iret
cmp
stos
test
jge
fists
pop
adc
repz
lds
gs
pop
mov
push
out
mov
iret
jle
movsb
aas
sbb
add
mov
popf
sbb
cmp
push
gs
xor
jl
pop
push
xchg
imul
sub
jno
rcrb
lret
in
mov
scas
push
xchg
int3
stc
mov
inc
stos
jmp
or
mov
movsb
scas
or
xchg
cmp
mov
out
movsl
lods
test
iret
jp
test
dec
fdivl
rcll
lahf
bound
jns
or
jnp
sub
mov
mov
out
pop
adcb
jo
imulb
mov
inc
in
xor
in
stc
jg
stos
sub
mov
dec
testl
lret
call
or
cmc
dec
mov
call
add
pop
adc
fidivl
pop
jo
or
mov
mov
cmp
and
sub
sub
cli
mov
fmull
dec
adc
stc
gs
mov
sub
mov
add
sbb
xor
orb
inc
pop
jg
mov
push
hlt
fsts
test
shll
fsubrp
iret
repnz
mov
jmp
ds
fcomps
jge
jb
xor
push
cmc
or
jl
fstl
les
nop
lret
push
fcom
jge
int3
ret
insl
das
inc
inc
loope
dec
gs
ret
lods
ret
xchg
mov
in
cmp
lahf
repz
jns
add
mov
push
fldenv
mov
cmp
and
add
inc
jnp
loop
daa
or
jmp
xor
insl
shr
fnsave
les
add
fcmove
add
iret
push
sub
xor
push
push
jno
mov
inc
adc
pop
mov
mov
jne
lods
lcall
sbb
enter
ds
inc
push
popf
xor
pop
stc
push
adc
and
pop
jmp
hlt
ss
lock
es
xchg
sti
or
jo
xor
out
push
negb
iret
sbb
sub
sbb
stos
lret
mov
push
add
mov
popa
aam
sub
decb
or
inc
stc
jle
cmpl
aad
in
jecxz
mov
out
inc
dec
pop
xor
lock
jo
neg
or
mov
fmull
mov
sub
sub
push
into
pop
imul
out
popf
das
push
scas
sbb
adc
repz
enter
xor
pop
sub
popa
out
pop
adc
push
or
imul
aaa
nop
push
xorl
and
aad
enter
or
mov
jmp
cmp
loop
mov
in
adc
and
or
cmc
ds
mov
addl
jecxz
pop
mov
xchg
test
sarb
inc
cmpsb
push
insl
or
sub
mov
mov
inc
aaa
incb
inc
movb
out
jnp
sti
das
adc
popf
pop
dec
adc
mov
or
push
out
stos
aam
stos
push
xor
dec
popf
movsl
lcall
xor
test
incl
mov
push
push
mov
fisubs
in
mov
sbb
imul
push
and
push
loope
jle
rcll
imul
mov
fwait
jae
pop
outsb
xchg
jnp
push
xorl
push
scas
daa
cltd
and
add
adc
cmc
es
and
jecxz
adc
insl
dec
xchg
hlt
loope
push
xor
pop
hlt
push
int
popf
xorb
stos
lahf
mov
add
jge
inc
sti
jmp
sahf
add
arpl
ss
imul
lods
rol
sbb
imul
dec
push
pop
lahf
mov
inc
add
pop
andb
dec
loop
shrl
inc
and
cmpsb
jns
rorb
fxch
cmc
and
in
mull
push
loopne
in
lahf
xchg
dec
popa
or
mov
jae
adc
sbb
popf
pop
aaa
pop
ret
stc
movsb
loope
xor
mov
jnp
aaa
out
clc
std
imul
push
roll
xchg
xor
int3
mov
inc
mov
ret
mov
movsl
mov
fcoml
jl
lahf
out
mov
xor
pop
sbb
iret
or
loop
pop
sbb
cmc
mov
add
fldt
repz
mov
inc
out
xchg
div
lock
xchg
pcmpeqw
push
and
pop
cmc
mov
subl
sarl
in
in
xor
xchg
iret
repz
int
and
cwtl
mov
pop
mov
in
shrb
dec
in
adcb
jb
adc
rolb
cli
pop
jle
or
iret
mov
and
lcall
rorl
popa
aaa
cmp
jmp
mov
das
xor
or
or
ror
rorl
sbb
push
loop
repnz
and
stos
imul
pop
mov
shl
sti
mov
pop
es
icebp
pop
inc
lret
mov
adc
sahf
ret
mov
xchg
mov
in
arpl
loop
and
add
insl
stos
pop
dec
jg
xchg
and
data16
ds
cmp
icebp
jne
jmp
dec
mov
mov
cld
mov
pop
sar
xor
rorb
inc
add
xor
or
orb
ffree
ljmp
xchg
cmp
inc
mov
enter
jne
rcl
test
jns
jg
loopne
xor
idivl
dec
xor
or
shlb
push
and
rcll
hlt
mov
xchg
stc
pop
insb
int
iret
popa
adc
jp
das
or
orl
rorb
lret
out
xor
xor
pusha
mov
mov
adcb
es
jp
rolb
add
lock
mov
adc
jns
outsl
std
add
fldcw
cltd
jo
sbb
mov
lcall
cmp
mov
loop
push
je
xor
repz
test
pop
mov
jno
fst
push
divb
inc
add
add
mov
fs
push
movsb
into
jle
out
adc
mov
xor
and
mov
add
mov
cmpsb
aad
push
xor
sub
sbb
push
xchg
cltd
and
std
adc
xor
fdivrl
in
subl
mov
sbb
mov
pop
iret
cmp
std
dec
cmp
arpl
lcall
jb
sbb
jl
push
into
lcall
push
fs
call
icebp
push
sahf
cmpsl
sbb
movsl
pop
add
mov
xor
int3
mov
mov
jmp
xor
cmp
and
push
iret
or
ljmp
adc
and
push
jecxz
mov
imul
sub
jo
mov
sbb
adc
lret
fstpt
ret
jae
jmp
lods
imul
jne
ja
jae
pop
mov
shrl
jmp
pop
loope
cmp
cmpsl
sbb
fstp
pop
data16
subl
ret
mov
mov
jae
shr
test
mov
cmpsb
mov
in
add
loope
adc
cmp
in
jp
or
jae
jg
xchg
loopne
xrelease
mov
push
lret
mov
lea
repnz
dec
pop
jg
dec
cld
xchg
arpl
jbe
adc
cmpsb
aad
dec
mov
stc
aam
lds
pop
cmp
das
jo
jno
push
sahf
ds
lcall
sub
sub
cmp
push
in
fiaddl
mov
popa
addr16
cmovge
fimull
dec
mov
lods
aad
hlt
imul
scas
cld
pop
push
pop
add
fs
dec
out
lret
add
js
inc
lods
xor
addr16
dec
test
ds
jne
xor
dec
rclb
jle
push
sub
cmp
add
roll
fwait
ror
out
adc
dec
loope
and
movsb
pop
sub
mov
and
pop
lds
mov
adc
clc
in
jo
es
mov
test
iret
ret
cmp
lret
ljmp
dec
mov
inc
rol
inc
nop
cmp
cmp
xchg
cmp
or
push
outsb
ficoml
std
add
into
and
call
push
adc
negl
mov
xchg
shll
inc
add
xor
add
jno
out
mov
inc
sbb
mov
jbe
pusha
fxch
das
je
das
out
movsl
push
mov
add
mov
call
cmp
or
push
sti
repz
jbe
clc
outsb
jge
mov
jns
fwait
or
jno
shrb
xor
mov
int
std
scas
sbb
popa
mov
mov
xchg
dec
loop
gs
out
in
adc
jno
imul
jl
push
adc
mov
lods
pop
mov
add
mov
fldcw
ds
out
sub
std
imul
push
inc
dec
xor
cmc
push
in
or
pushf
xchg
popa
and
nop
jne
mov
je
cwtl
sti
int3
lahf
dec
lods
add
loope
xor
push
or
fdivl
scas
mov
push
push
movsb
or
inc
gs
inc
mov
sbb
mov
ss
dec
xlat
mov
popf
lea
cmpsb
push
mov
mov
jmp
loope
push
jo
stc
jno
int
lods
inc
and
lcall
jmp
test
test
pop
mov
out
fists
or
mov
into
adc
inc
test
dec
in
mov
data16
add
mov
or
xchg
lds
bound
fdivl
popa
sti
into
and
add
iret
ljmp
inc
mov
xor
out
pop
mov
dec
push
int3
adc
addb
sub
ljmp
jno
out
or
cmpl
vmovntps
addb
cltd
aad
and
sub
jne
movsl
icebp
push
cld
ss
add
or
out
dec
mov
or
das
in
sub
inc
mov
and
lret
sub
xlat
clc
add
xchg
into
mov
test
cwtl
push
sub
add
ret
mov
mov
dec
mov
mov
mov
lret
xchg
add
or
lods
enter
popf
mov
pop
mov
xchg
or
bound
fstl
pop
cmc
inc
adc
dec
fstl
cld
in
mov
push
sub
ja
adc
add
push
test
mov
outsb
loope
insb
das
inc
scas
push
test
push
mov
push
cmpsl
add
lret
out
jnp
loop
lea
jno
cwtl
ret
lds
push
xchg
mov
es
sub
add
loop
popf
ljmp
into
out
add
mov
xchg
test
sub
mov
mov
sub
cltd
add
lods
sahf
daa
pop
popa
mov
aas
loop
lahf
adc
imul
mov
imul
mov
push
dec
cwtl
insb
scas
cmp
fnstcw
call
mov
cmp
mov
jbe
inc
add
test
mov
sbb
call
pop
sarb
roll
push
lret
insl
outsb
ljmp
sub
test
stos
insl
or
cmp
dec
sub
stos
add
xchg
pop
or
dec
repz
push
nop
mov
test
jbe
jne
sti
mov
ss
pushf
jno
or
sahf
and
aaa
sbb
push
mov
xor
pop
sub
repnz
loop
adc
and
dec
jg
daa
out
testl
xlat
mov
mov
mov
popf
mov
add
push
jmp
xchg
jmp
xchg
mov
mov
or
rolb
push
sarl
xchg
aas
xchg
dec
shl
cmc
mov
xchg
add
jnp
pop
addl
fs
test
jge
mov
mov
push
repnz
push
and
mov
add
xchg
test
sbb
sub
rcr
aad
mov
pop
sub
xchg
cli
dec
lods
push
pop
or
xchg
loop
ja
sbb
xchg
or
lds
ljmp
sub
nop
fs
clc
insb
subb
test
inc
popa
push
pushf
popf
enter
add
pop
test
mov
aad
rcpps
push
add
daa
popf
sbb
in
or
push
test
outsl
jl
mov
dec
jnp
sub
sub
orb
cmpsb
and
pop
enter
in
daa
mov
jle
xor
and
cltd
shll
dec
mov
push
jle
jae
pop
out
insb
in
pop
lahf
xchg
mov
enter
and
les
andl
rcrl
push
sub
lahf
ret
mov
pop
ja
rorl
push
test
and
push
jo
xchg
out
lods
mov
imul
shll
cld
or
cmp
xlat
sub
aaa
dec
fs
push
ficomps
roll
inc
cmp
sbb
scas
mov
subl
adc
push
mov
push
push
aaa
aam
xchg
mov
stos
adc
sbb
mov
imul
mov
cmc
mov
push
push
stos
xchg
add
bound
repz
outsl
adc
movsb
fwait
adc
push
test
jne
lahf
scas
test
subb
jle
adc
cmpsb
rcrb
insl
mov
into
call
cmpsb
inc
iret
mov
inc
xlat
xor
inc
dec
xchg
stc
cmp
pop
mov
sbb
nop
push
sub
iret
and
sarl
mov
or
shll
test
mov
notb
sbb
pop
sub
inc
xchg
inc
xlat
push
data16
int
cmp
sar
ljmp
xchg
lea
mov
xor
inc
cltd
sub
sbb
stc
loopne
sti
rclb
push
call
inc
pop
js
jb
push
cs
fistl
out
insw
imul
ret
jno
adc
pop
popf
and
das
jg
movsb
icebp
xchg
divl
mov
lret
repnz
nop
mov
ss
pusha
stos
stos
pop
dec
subl
push
pop
add
fwait
push
xor
lea
pminsw
ljmp
dec
loopne
fwait
sahf
jge
pop
leave
push
inc
mov
add
dec
mov
in
jp
pop
shlb
xchg
push
enter
gs
je
pop
fcom
test
daa
repz
fsubl
popa
loopne
daa
sub
mov
cmp
adc
dec
lea
fidivs
xor
cmp
cwtl
fs
in
loopne
pop
popa
cld
pusha
pop
xchg
sbb
ret
xor
lcall
push
cmpsb
andb
jmp
cmp
mov
dec
sarl
mov
mov
in
rcrb
inc
jae
mov
pop
stos
xchg
jne
mov
insl
inc
lret
ds
mov
xchg
xchg
xlat
dec
test
test
push
pop
mov
sub
xchg
mov
ljmp
mov
sbb
stos
ds
push
dec
arpl
jbe
mov
jmp
scas
xorb
mov
adc
sub
xchg
imul
mull
pushf
cmp
ret
xchg
in
xchg
inc
popf
xchg
out
push
test
lods
icebp
test
std
dec
fwait
xchg
in
pop
xor
sub
test
sahf
popa
je
sti
cwtl
hlt
push
xlat
jae
mov
pop
divb
mov
jae
cwtl
mov
adc
pop
scas
push
pushl
es
lret
popf
bswap
add
mov
inc
int
pushf
in
xor
and
sti
loopne
push
jg
mov
cmc
rolb
mov
mov
mov
push
adc
ja
loop
inc
imul
fs
cmp
push
inc
mov
shlb
test
jb
pop
mov
hlt
stc
data16
frstor
imul
lahf
xchg
xchg
mov
pop
les
xchg
jno
test
mov
dec
sbb
xor
in
jne
inc
push
inc
idivl
aam
xor
fiaddl
leave
call
mov
cmpl
fucom
add
shl
pop
xchg
push
dec
decl
jns
or
jecxz
test
mov
mov
rcl
cmpsl
jecxz
add
pop
push
fwait
and
xchg
test
mov
xor
mov
or
in
call
sarl
add
and
fildll
movsb
jns
cs
cmp
push
xor
push
movsl
scas
push
ret
xchg
mov
or
inc
ud1
lret
xor
les
test
inc
mov
ret
mov
aad
or
scas
lahf
sahf
pop
jns
mov
pop
test
xchg
fmull
inc
mov
rcll
push
stos
xlat
mov
xchg
or
xchg
ds
lret
inc
jbe
dec
fwait
sub
add
add
or
icebp
and
icebp
adcb
mov
dec
xchg
test
in
push
scas
std
fistl
fstpl
rclb
mov
mov
nop
pop
rcrb
lods
popa
push
out
lea
cmp
jae
jl
test
dec
jle
jb
movsl
sbb
cmp
fcompl
pushf
jmp
lahf
mov
sbb
xor
pop
test
pop
in
sub
ficompl
notb
inc
in
pop
push
int
mov
xchg
xchg
mov
mov
dec
rolb
js
xor
jo
leave
mov
cwtl
xchg
jbe
mov
sahf
std
dec
leave
inc
ja
dec
dec
and
or
xchg
dec
lret
and
push
pop
daa
gs
in
dec
dec
ds
inc
pop
das
rol
shrb
inc
mov
jb
add
or
jle
pop
or
jae
aad
out
pop
aam
sar
lret
mov
out
pop
cmpsl
data16
add
ret
jmp
xlat
jle
jl
pusha
in
jbe
adc
fldcw
ss
ljmp
and
add
fimull
cmpsl
xor
subl
aaa
call
adc
call
push
pop
sbb
fnsave
add
cmpsb
loop
popf
dec
psubsw
dec
adc
icebp
inc
adc
adc
sub
inc
daa
daa
pop
scas
gs
ja
test
test
mov
xor
imul
out
shll
loopne
test
jmp
add
das
ss
dec
es
insl
pop
ret
ja
sub
dec
fbld
mov
mov
jnp
addr16
add
add
nop
push
jecxz
popa
sub
jno
shrl
out
in
aad
daa
out
outsb
out
pop
dec
xchg
jne
cmp
or
cmp
xchg
mov
sbb
popfw
mov
inc
cmpsb
jg
add
cmpsb
xor
loopne
test
xor
ds
inc
fmull
push
jge
xchg
mov
xchg
pop
dec
xchg
pop
into
mov
popf
addb
popw
jb
pop
mov
icebp
mov
dec
add
cmpl
xor
mov
xor
fwait
xor
or
add
rcrb
aad
push
xor
xorb
imul
jo
std
mov
shl
leave
rcrb
mov
mov
mov
dec
dec
outsl
mov
add
shrb
inc
ss
pop
cmc
pop
or
lea
aas
xchg
mov
je
lahf
aad
pop
mov
push
pop
insb
ss
sarl
test
and
lods
sarl
in
in
xchg
gs
and
cld
loop
push
push
push
push
or
cltd
fisttps
jl
mov
pusha
hlt
push
sbb
out
ss
std
cmpsb
mov
push
shll
and
mov
xchg
pop
aad
xlat
mov
shrl
xor
out
push
inc
fisubl
lahf
cli
sub
enter
dec
ljmp
pop
mov
xchg
add
pop
mov
out
xorl
sbb
lock
iret
mov
out
cld
hlt
aam
jp
ret
jae
pop
pop
outsb
test
loope
or
xor
lahf
sub
sbb
or
sbb
push
cld
test
jo
das
inc
push
sub
or
mov
cmp
in
inc
mov
push
rcrb
rorl
mov
inc
aas
mov
fiadds
insb
lcall
into
mov
or
ret
rolb
push
cmp
ret
sub
stos
jae
mov
ljmp
call
lahf
adc
xchg
mov
mov
push
pop
int3
mov
nop
mov
test
cltd
rcrb
insl
loope
or
shll
movsb
fcoms
xchg
fstpt
jp
jle
pop
cmpsl
pop
add
push
mov
ja
dec
loop
add
jbe
inc
pop
inc
or
xchg
inc
mov
jle
lock
jle
ja
jge
loopne
sti
dec
or
mov
jl
mov
xacquire
jecxz
aaa
ret
cld
out
aas
fidivs
pop
sbbb
fistl
or
sub
and
jnp
adc
out
cltd
out
out
push
fisubrs
enter
shlb
mov
rclb
jl
push
cmp
notb
and
cmp
pop
call
in
out
cltd
in
icebp
fnstenv
push
imul
mov
push
jecxz
lods
lret
mov
and
test
test
xor
adc
aas
fists
int
jp
dec
pop
dec
shlb
mov
test
mov
test
mov
lock
pop
push
bound
add
jnp
jnp
mov
subb
mov
sbb
sub
jne
into
int3
adc
sub
cbtw
cmp
or
ja
daa
cmp
lret
enter
inc
repz
scas
data16
popa
jecxz
jge
icebp
jno
pcmpeqw
sub
mov
inc
pop
push
mov
jle
sarl
jg
and
xorb
test
wrmsr
fidivrs
sub
pushl
jg
mov
and
clc
mov
pushf
or
push
mov
les
cmp
test
xlat
dec
sbb
pushf
rol
jge
das
mov
jl
cltd
sub
add
ljmp
mov
cli
sti
jo
aaa
int3
add
cmp
cmpsl
dec
pop
cli
andb
test
jae
lock
es
mov
nop
pushw
jb
and
andl
mov
loop
push
and
jmp
lods
cld
sbb
addr16
push
add
das
mov
sbb
sbb
sbb
push
into
push
inc
mov
pusha
js
sub
fs
out
ljmp
push
jecxz
dec
movl
pop
xor
mov
movsb
dec
push
jns
hlt
pop
mov
adcl
loope
pop
sbbl
or
imul
add
xchg
jg
mov
mov
fndisi(8087
sbb
hlt
scas
mov
aam
pop
icebp
push
jbe
in
inc
xchg
and
dec
cmpsb
mov
mov
inc
push
cmp
loope
test
sbb
add
inc
adc
jnp
fcomps
lock
rorb
sahf
test
loop
sub
xor
arpl
in
mov
jecxz
movsl
popa
aas
test
push
imul
add
sarl
pop
hlt
lds
add
jl
lahf
mov
ds
add
adc
cwtl
pop
lahf
push
popf
or
mov
inc
enter
scas
cs
imul
test
push
dec
cwtl
testl
and
inc
cli
mov
scas
push
inc
test
hlt
idiv
inc
and
cmpsb
insb
push
mov
pop
stos
sub
jp
inc
leave
or
mov
mov
je
pusha
mov
mov
mov
dec
fidivl
gs
mov
xchg
mov
data16
loope
xor
mov
cwtl
fistl
movsl
les
icebp
loope
xor
xor
and
mov
mov
xchg
imul
stos
lcall
sub
inc
sub
insb
daa
arpl
ja
mov
pop
push
movb
add
pop
dec
movsb
or
test
add
xor
inc
fwait
pop
jmp
lock
sub
int3
jb
push
rorl
iret
jnp
jmp
push
bswap
or
pop
jbe
sahf
cmp
mov
sub
dec
scas
es
sub
jae
adc
sub
mov
jp
cwtl
mov
mov
movsl
dec
iret
inc
xorb
xlat
dec
daa
sub
popa
in
sub
repnz
rolb
lret
or
jp
scas
mov
orl
call
pop
inc
mov
mov
pushf
es
or
and
mov
xor
xor
mov
pop
cli
inc
mov
jbe
push
mov
inc
pop
and
inc
movsb
sbb
push
pop
jg
sbb
hlt
and
push
test
push
cli
movsl
rcll
push
sbb
aad
int
xchg
dec
lds
mov
repz
pusha
and
aad
fldl2t
lret
shlb
xchg
adc
add
cmpsb
movsl
inc
inc
add
fsub
pop
loope
xor
cmp
es
fsubrl
cmp
xchg
push
repz
pusha
jl
aas
sbb
inc
pop
mov
sahf
into
fcompl
cltd
in
scas
inc
adc
aas
test
fidivs
clc
test
imull
roll
rorl
sub
sub
xlat
jbe
or
data16
xor
ljmp
dec
fimull
add
rorl
mov
dec
adc
test
add
pop
je
cmp
mov
add
inc
enter
and
cli
test
xor
push
sahf
les
push
xor
push
out
jnp
test
mov
dec
shll
pop
repnz
and
sahf
imul
nop
in
gs
daa
out
sbb
jle
sbb
ljmp
sbb
scas
in
lods
into
jmp
jnp
out
dec
ss
loopne
adc
dec
jmp
sub
in
sub
and
and
imul
les
xor
out
push
nop
mov
inc
or
xor
inc
lret
or
pop
fwait
xchg
pop
rdtsc
clc
mov
cmp
dec
mov
in
inc
das
sahf
cmp
loop
mov
push
jp
dec
mov
sbb
aaa
nop
fnstcw
jg
mov
xchg
test
mov
sbb
or
ja
sbb
xchg
xchg
or
data16
shlb
and
push
es
add
jbe
cmpsl
mov
leave
in
jbe
push
pop
aam
push
mov
leave
in
and
jle
cmp
jl
mov
xchg
push
mov
rclb
jg
push
mov
mov
jmp
shrl
sub
push
dec
lds
push
fidivl
addr16
dec
jmp
outsl
cmp
mov
cmp
jns
and
push
fadds
das
jp
daa
push
xchg
and
mov
pushf
xchg
movsb
icebp
pop
rcll
jge
dec
in
movsb
mov
out
jae
adc
loopne
rorb
ja
dec
jns
ljmp
xchg
popf
or
in
cld
sbb
xlat
ljmp
mov
ficoml
xlat
fstp
pop
lods
jo
mov
dec
pop
and
ljmp
mov
inc
arpl
inc
mov
out
fisttps
test
jge
mov
jae
movsl
nop
mov
hlt
cmove
or
mov
scas
pop
xchg
lret
mov
divb
xchg
add
adc
and
push
in
fdivrl
mov
mov
lds
cmp
dec
dec
test
lods
fstps
xchg
xor
xor
push
cmp
sbb
and
int
enter
addr16
fiadds
addr16
dec
jmp
sbb
outsl
and
in
sub
push
sub
aas
testb
out
into
mov
jle
clc
mov
aad
mov
out
out
adc
adc
mov
shll
jecxz
mov
cmpsb
xchg
xchg
pop
pop
push
cmp
xor
gs
lods
or
push
scas
std
inc
mov
pop
mov
mov
jl
add
imul
bound
dec
out
cli
call
push
push
jle
pushf
daa
dec
ret
rcrl
sbb
add
mov
inc
test
jmp
push
mov
dec
jl
push
lods
adc
adc
js
in
andl
sub
sub
pushf
adc
bndldx
push
leave
mov
pop
out
mov
imul
out
sub
mov
pusha
cmp
mov
push
aaa
mov
lahf
inc
mov
cmp
sub
fs
xchg
mov
pop
sub
mov
mov
imul
push
das
jb
add
lock
int3
aas
mov
aad
inc
fisubl
or
cmpsl
add
mov
insl
rol
mov
mov
popf
jl
fisttpll
cmp
jo
lret
mov
fldenv
mov
cmp
sub
fdivrl
enter
and
popa
in
nop
repnz
and
imul
xlat
lret
pop
and
dec
out
push
cmp
mov
cmp
out
sbb
and
lahf
lods
roll
fsubrs
cmp
cmp
xor
std
push
lret
cwtl
mov
imul
xchg
pop
xor
xchg
movsl
add
or
pusha
mov
sbb
mov
inc
out
mov
cmc
pop
or
std
out
pop
jnp
dec
sub
stos
jge
mov
rol
fidivl
dec
addr16
fiadds
or
dec
out
mov
or
sbb
int
xor
mov
push
jg
and
ds
jo
mov
je
add
pushf
xchg
lret
gs
mov
mov
popa
mov
jbe
jg
xchg
cltd
or
insb
leave
jns
mov
scas
outsl
repnz
das
pop
add
in
shll
dec
pop
iret
lret
cmp
repz
sub
shr
loopne
cli
jp
flds
movsb
lea
dec
jnp
jbe
sarb
ja
repnz
xor
clc
dec
push
or
in
in
aam
cmp
in
loop
dec
sbb
daa
jns
xchg
mov
or
inc
popa
push
sbb
inc
adc
jle
lret
mov
push
add
fcomps
andl
test
sub
lods
or
int
adc
pop
dec
sub
sub
les
int3
xlat
into
sub
or
mov
out
mov
push
pushf
out
cmp
mulb
dec
test
fadds
jle
dec
mov
out
mov
out
adc
sbb
popf
rorb
fdiv
test
jo
jbe
jmp
and
aad
repz
mov
adc
jmp
nop
iret
push
addr16
test
xor
fldenv
sub
cwtl
repnz
cmc
icebp
mov
mov
mov
js
sarl
ror
clc
pop
sahf
rcll
xor
push
pop
jg
sti
leave
test
insb
pop
loopne
out
mov
movsl
out
std
or
xor
int3
sub
shl
sti
enter
mov
aad
lret
xchg
fs
imul
lods
cmp
and
sub
out
out
and
jb
and
dec
mov
or
mov
arpl
xchg
aad
jns
cltd
or
xchg
sbb
shrl
adc
and
cmp
ja
stos
pop
mov
adc
adc
adcb
sub
lods
sbb
arpl
xchg
or
in
andb
push
xlat
jle
sub
add
inc
into
ret
mov
cmc
mov
idiv
jmp
lods
pusha
and
cld
je
xchg
xorb
mov
inc
mov
imul
mov
xchg
ja
xchg
pop
xor
xchg
push
mov
rcrb
insb
bound
out
ja
sbb
fnstsw
js
mov
jae
inc
push
test
pop
cwtl
push
outsb
das
movsl
js
sub
jne
inc
movsb
jo
cmc
add
jnp
mov
mov
mov
std
or
or
lods
nop
icebp
or
jns
loopne
inc
mov
hlt
adc
xchg
sub
dec
mov
cmp
enter
push
jae
shlb
inc
or
adc
imul
jle
xchg
inc
mov
out
sbb
mov
ss
fcoms
ds
fistpl
mov
outsb
push
pusha
dec
push
mov
adc
add
repnz
dec
test
and
xchg
add
scas
xchg
jecxz
aad
jge
dec
popf
ljmp
pop
jbe
ret
xorl
or
in
xchg
cltd
mov
out
mov
mov
add
sahf
push
sti
int
pop
orl
addr16
xchg
mov
mov
xchg
sbb
dec
mov
and
pop
cmp
lods
cmc
xchg
dec
mov
adc
scas
or
dec
lahf
or
or
xchg
rcr
dec
imul
imul
xchg
mov
sarl
icebp
scas
mov
lods
cvttps2pi
aas
and
pop
push
push
enter
scas
std
push
fmuls
jne
iret
scas
and
add
mov
mov
push
enter
or
push
cmp
jno
push
dec
sub
mov
jp
cld
sub
xor
std
ret
sbb
pop
loopne
jb
inc
mov
js
ja
jne
in
jb
push
hlt
xor
mov
out
cwtl
sbb
lods
stc
xor
inc
ret
push
sub
ss
jmp
push
shr
out
cmpsl
sbb
sbb
add
inc
mov
inc
or
out
hlt
sti
add
rcll
mov
add
jbe
dec
daa
mov
imul
popa
jl
lds
sub
jmp
and
push
pop
mov
and
mov
data16
sub
push
mov
add
add
shrb
dec
inc
cld
enter
or
or
mov
xor
xchg
jo
mov
cmp
xor
add
xchg
sub
pusha
bound
icebp
out
arpl
inc
out
xor
ss
sarb
lahf
xor
int
and
int
or
negb
mov
lcall
in
popa
mov
scas
pop
gs
mov
or
fwait
inc
bound
mov
cmp
xchg
and
fldlg2
lret
bound
and
mov
xor
sbb
fidivl
sub
icebp
mov
sbb
lds
idivb
enter
enter
imul
adc
xor
jmp
fimuls
sti
mov
push
pusha
fwait
sub
fwait
add
lock
add
pop
lods
mov
xlat
jnp
adc
and
sub
push
pop
arpl
inc
adc
inc
mov
les
shr
mov
fistl
rcrb
pop
push
fbstp
push
lret
push
test
mov
jbe
fdivp
dec
and
sub
and
shll
add
mov
cmp
add
shll
or
inc
addr16
sbb
pop
and
insl
stos
jnp
mov
jns
add
xor
xchg
lret
pop
jp
adc
add
addl
repnz
addr16
pop
in
pop
sub
es
rorb
and
mov
lret
stc
sarb
or
pop
xlat
jge
or
dec
push
fpatan
clc
into
std
lea
rcrl
out
push
mov
les
stc
cmp
movsb
imul
xor
sbb
pop
mov
ret
mov
push
xchg
mov
addl
incl
push
bound
notb
fisubrs
mov
lods
mov
rcrl
inc
cmp
jmp
in
sub
test
sbb
jnp
pop
stos
test
lcall
lods
les
in
test
lods
cmp
xchg
bound
dec
adc
xchg
test
push
jge
scas
push
add
loopne
mov
das
lds
push
out
jae
sahf
mov
call
icebp
mov
lock
cld
addr16
dec
mov
fisttps
cli
pop
clc
push
orl
sar
or
mov
mov
lcall
out
mov
insb
aaa
in
push
adc
lods
ja
jg
call
sbb
push
sub
jmp
movsl
aaa
cmp
mov
jmp
loope
cltd
adc
pop
test
jb
test
sar
ret
loopne
mul
mov
jns
scas
enter
andl
hlt
mov
xchg
ret
aas
stc
and
jle
cmp
pop
lods
jl
xchg
ja
popf
fisttpll
fisttpll
leave
cmp
jp
fstps
xchg
pop
int3
mov
rcl
xchg
pop
int
out
insb
arpl
push
jp
sbb
dec
stos
fs
stc
cmc
sti
mov
ret
daa
mov
js
cmp
mov
inc
shll
jno
cmp
std
mov
mov
xchg
test
inc
push
cmp
fcompl
stos
add
fstp
pop
sub
pusha
xchg
out
loop
mov
mov
aas
or
rcll
clc
dec
aas
and
cld
fwait
cmpsl
call
jge
sbb
xchg
mov
cld
daa
add
and
movsl
cmp
sahf
insb
int3
sahf
dec
push
aaa
mov
dec
xchg
popa
xchg
rcrl
out
push
push
or
rcll
mov
cmp
or
test
fisubl
loope
xchg
sub
sub
jns
xorb
or
push
outsb
or
lods
inc
cld
jg
adc
les
fcomi
addr16
push
xchg
je
lds
scas
push
es
dec
sub
xor
mov
add
mov
lds
enter
dec
std
pop
mull
cmp
scas
xor
mov
int
mov
inc
cmp
xchg
scas
fistps
xor
mov
cmpsb
test
gs
mov
lcall
sbb
insl
xor
cltd
add
mov
lret
sbb
sub
cmp
std
ret
xchg
pop
mov
xchg
pop
sbb
pusha
push
outsb
enter
insl
in
push
sub
sbb
es
sbb
xchg
inc
data16
or
inc
pushf
push
mov
enter
pop
cmp
repnz
or
mov
sub
inc
mov
jg
adc
adc
mov
stos
push
push
lret
dec
sbb
ret
sarl
mov
inc
mov
and
dec
mov
call
rcl
mov
jae
mov
stc
test
inc
jp
repnz
int
adc
js
xchg
or
mov
imul
xor
sbb
or
lcall
push
test
lods
xchg
lds
out
aam
inc
lock
imul
pop
jp
xor
lods
sti
adc
ja
push
push
add
jmp
pop
lods
js
cwtl
jns
ret
sbb
push
aad
repz
les
mov
sub
push
movsb
int
lsl
dec
fnstcw
xchg
popf
or
mov
dec
adc
lret
jno
sbb
nop
mov
mov
inc
js
sub
movsb
aam
inc
scas
mov
sbb
loopne
inc
call
pop
out
mov
imul
cmp
jae
cmpsb
mov
and
aad
mov
or
cltd
pop
scas
lea
testl
in
cltd
mov
sbb
in
hlt
call
sbb
dec
arpl
mov
fwait
stos
push
fs
xchg
and
pop
sbb
push
std
int
data16
js
jle
aad
frstor
push
pop
scas
scas
js
les
out
and
cltd
repz
pop
lcall
push
xor
pop
repz
subb
stos
cmpl
or
int
dec
sti
fwait
mov
gs
cs
or
lds
test
inc
mov
or
dec
sub
mov
mov
sub
test
sbb
jno
les
jns
out
shlb
pop
loop
xchg
or
cld
subl
cmp
fcoml
shr
cmc
push
inc
sti
sbb
popa
aas
mov
sub
pop
add
push
out
or
div
xor
fmul
popf
pop
mov
mov
lods
mov
es
cs
and
add
xor
xchg
test
enter
add
daa
push
gs
mov
pushl
inc
shrb
sbb
aaa
and
mov
insl
jo
mov
popa
and
movb
inc
fs
into
mov
je
sbb
pop
popf
jmp
addl
ret
jnp
pop
das
xchg
mov
jno
sub
jae
test
repnz
testl
movsb
xchg
mov
push
mov
jmp
jl
les
xor
or
xor
das
mov
clc
jb
pop
cmpsl
push
push
in
pop
push
jmp
fsubr
hlt
test
inc
mov
xor
and
xor
dec
add
mov
enter
jmp
cltd
mov
add
mov
getsec
push
outsl
mov
ja
enter
cmc
int
data16
faddp
xchg
push
sbb
loope
jl
daa
cmpsl
sbb
sbb
imul
outsb
mov
lods
mov
lock
fcmovne
cs
movsb
imul
imul
in
mov
lea
xor
mov
push
inc
jp
out
inc
fisttpl
inc
iret
sbb
and
insb
imul
adc
aam
pop
push
xchg
test
call
inc
ret
push
mov
or
ss
div
inc
bound
mov
adc
cli
xor
sbb
mov
and
sahf
in
dec
mov
inc
ja
mov
dec
push
xchg
jp
dec
cltd
out
or
push
adc
fcoms
sbb
xor
pop
sub
ror
ficoms
iret
xor
xor
xchg
jge
sbb
fdivs
mov
mov
sarb
mov
test
adc
cmp
mov
lahf
pushf
or
lret
push
xor
inc
test
nop
mov
fsubl
mov
lods
fwait
pop
or
call
or
xchg
lcall
ljmp
loopne
ficoms
xchg
jno
es
mov
push
push
jns
dec
adcb
fsubrl
into
nop
dec
scas
pop
mov
push
das
push
shrl
pop
push
dec
and
pop
mov
js
mov
sahf
adc
jns
stos
mov
loope
mov
sbb
int3
mov
cmp
fs
xchg
xor
int
ss
cmp
adc
inc
xor
dec
push
jmp
fucom
movl
rcrb
pop
jns
loopne
sbb
sti
push
jnp
movsl
fidivl
cmp
out
mov
fs
cmc
push
add
sbbb
jb
insb
adc
sahf
je
mov
jg
sarb
bound
mov
mov
dec
jmp
xor
insb
push
xchg
xchg
cmp
dec
popf
jg
xchg
inc
lock
cmc
jge
jge
xchg
dec
pop
cmp
xor
xlat
orl
loope
fsubrl
ffreep
jb
and
sbb
mov
scas
cmp
dec
mov
test
or
outsl
jecxz
xor
sbb
leave
sub
jmp
out
push
ds
ret
sub
dec
outsl
inc
xchg
shlb
int
enter
pop
cmp
insb
mov
cmovge
mov
scas
pop
into
mov
add
insl
fdivl
pop
or
lods
cmp
nop
jmp
cmp
xor
mov
je
aaa
push
inc
sbbb
inc
pop
lcall
fcoms
adc
loope
aaa
movsl
pop
shlb
xor
aad
dec
bound
stos
mov
jg
rorb
mov
sbb
lret
or
add
call
arpl
push
jbe
adc
inc
ss
cmp
fisttpl
shlb
mov
adc
and
popa
jae
cmc
shll
out
lea
out
push
or
or
mov
loopne
inc
test
push
test
js
sbb
insl
pop
mov
add
in
jge
sub
mov
adc
push
outsb
xor
imul
mov
xor
fldcw
mov
add
cmpsl
cmp
fldenv
ljmp
xorb
dec
in
notl
and
rcll
and
and
cmpsb
sub
jne
or
pop
sbb
inc
je
mov
xor
and
stc
jae
js
or
mov
mov
sbbb
leave
mov
push
lods
rclb
jp
and
adc
push
in
pop
mov
push
ficomps
add
inc
mov
pop
cmp
shlb
or
imul
into
pushf
jmp
pop
xor
xchg
dec
scas
call
sarl
mov
push
outsl
fstl
push
stos
jmp
in
inc
xchg
jmp
ret
xchg
xchg
mov
inc
dec
or
fdivs
test
not
mov
fimull
inc
fs
ficoml
or
pop
movsb
dec
lock
cmp
dec
adcl
xadd
stos
dec
fstpl
mov
aad
jbe
jle
inc
out
sti
jb
rcl
xchg
push
ret
cmpsb
testb
adc
jns
call
pop
fldl2e
jmp
jmp
xchg
pop
loop
sbbb
inc
ljmp
repz
dec
fadds
inc
jns
das
or
cmp
lock
mov
cmpb
das
stos
jle
int3
jl
and
sbb
dec
loope
cmp
test
xor
leave
out
mov
adc
leave
mov
or
push
pop
xchg
mov
jno
rorl
adcl
insb
subl
test
scas
mov
imul
push
dec
scas
jmp
xor
mov
call
add
jbe
sahf
pop
dec
push
scas
sub
cmp
pop
rclb
in
push
mov
mov
jnp
or
icebp
sub
mov
jo
push
or
jne
sub
cmp
outsl
or
jg
jno
add
test
mov
iret
jo
popf
and
xlat
jmp
fistps
pushf
ret
cmpsl
mov
inc
mov
outsl
cmp
sbb
movsb
decb
fs
lods
adc
xor
dec
pop
xor
movsl
mov
fcoms
les
outsb
je
jae
and
cmp
push
pop
mov
stc
scas
xchg
jg
out
jnp
xorl
push
ljmp
dec
fadd
imul
movsb
imul
lods
loopne
sbb
jno
in
clc
sbb
mov
jmp
in
enter
mov
jne
jle
and
adc
mov
inc
and
pop
into
lret
imul
mov
bound
inc
decl
pop
neg
pop
dec
mov
mov
arpl
xor
pop
outsb
hlt
idivl
fildll
inc
lea
xchg
lcall
mov
imul
xchg
imul
xlat
fisubs
push
mov
lea
dec
and
lcall
mov
pop
push
das
pop
sub
test
sbb
lods
sbb
aaa
idiv
inc
out
adc
lods
xor
pop
sbb
clc
or
dec
dec
push
mov
pop
out
xor
nop
ja
jp
sbb
lret
cmpsb
insb
cltd
pop
sub
in
push
jle
nop
cmp
and
mov
loope
rclb
xchg
cltd
pop
sarb
mov
bound
cld
hlt
iret
shlb
dec
lea
out
mov
nop
movsb
dec
cltd
jb
lea
cmp
jmp
pop
add
xchg
cmp
dec
imul
adc
in
fst
js
mov
lahf
cltd
mov
mov
fsubr
lock
inc
cmp
aad
shr
adc
in
inc
cmp
mov
stc
fs
stc
cmp
sub
lods
jne
dec
cmp
push
cmpsb
sbbb
jmp
inc
pop
cmp
stc
xchg
outsl
ja
pop
jge
jg
fiaddl
or
cli
enter
push
sbb
lods
jno
lea
lret
pop
test
sub
daa
lcall
les
daa
add
mov
dec
outsl
in
es
lods
pop
jecxz
daa
leave
ret
lods
scas
cmpl
fdivr
int3
push
ss
sbb
call
dec
dec
and
hlt
shlb
pop
std
sti
pop
incl
sbb
mov
shll
jg
lcall
jle
sbb
sbb
imul
out
add
mov
push
lret
jb
lea
jecxz
adc
nop
jo
cmp
int
int3
fs
dec
jae
fildll
ss
sub
test
pusha
xor
mov
lds
cwtl
xchg
enter
lahf
and
loop
dec
clc
repnz
xchg
add
scas
cmp
cmp
daa
addl
push
push
imul
popa
xlat
enter
pop
int3
cli
out
mov
fdivs
jne
ss
punpckhwd
xchg
mov
call
xor
movsl
dec
aam
cmp
stc
lods
iret
mov
mov
inc
int3
xchg
mov
push
or
cmpsl
xlat
scas
adcb
ss
imul
xlat
icebp
inc
pop
jbe
inc
outsb
mov
faddl
cmpsl
jbe
push
xor
mov
loope
cld
push
mov
jns
popf
dec
shl
fdivr
or
popl
inc
mov
add
sub
nop
stos
or
xor
push
dec
repnz
pushf
mov
mov
lea
lods
sbb
nopl
mov
cmp
repz
dec
insl
loopne
push
mov
xchg
jbe
out
dec
lods
pop
cmp
pop
cltd
sahf
jge
and
fisubs
popa
into
cmc
jne
stos
inc
sub
leave
add
fwait
out
aaa
insb
ret
mov
loope
sar
push
pop
gs
cmp
fmul
in
outsl
mov
cld
lock
shrl
out
xchg
jle
repnz
scas
js
ret
ret
mov
gs
call
push
test
cmpsb
bound
ss
dec
arpl
scas
test
jecxz
cwtl
sub
cmp
and
sarl
push
sbb
popa
sbbb
arpl
cmp
jno
pop
in
jl
fldl
test
mov
or
mov
lret
adc
sbb
push
jb
mov
lea
jmp
in
nop
push
cmp
decb
inc
scas
and
lret
pop
or
clc
pop
daa
xor
add
icebp
setbe
dec
cld
mov
xor
cmpb
cltd
daa
movsl
xchg
pop
stos
inc
adc
xor
rorb
add
mov
aaa
jg
ret
imul
in
in
sub
aas
pop
inc
add
mov
sub
jns
cmp
icebp
push
testl
aaa
push
mov
mov
aad
lcall
roll
xor
mov
jmp
jno
shll
cmpsl
xor
or
sti
aad
push
xor
xchg
inc
mul
mov
fidivrs
inc
mov
adc
sub
sarb
aad
rorb
xlat
orl
push
adc
jle
xor
jno
out
sub
repnz
adc
fs
jbe
xor
movsb
add
dec
je
in
push
loope
aam
push
jp
pop
and
sub
push
jns
inc
push
js
daa
sub
daa
push
push
xor
fmuls
icebp
js
fcmovne
mov
mov
mov
iret
mov
or
xor
jmp
je
adc
mov
inc
scas
in
mov
adc
pop
xor
jge
cmp
lods
dec
dec
mov
insb
scas
adc
arpl
sar
sbb
aas
or
stc
shlb
add
gs
sub
dec
mov
call
les
lea
shll
sti
data16
cmpsb
lods
sbb
nop
lds
notb
in
nop
dec
notl
mov
in
je
and
sub
xchg
shl
inc
xor
add
xor
cmp
dec
cwtl
sub
and
ficoms
push
inc
sbbl
xlat
mov
mov
pop
xor
imul
and
test
notl
stc
or
push
mov
movl
test
pop
or
std
int3
out
pop
fmul
push
mov
popa
mov
jnp
mov
jge
and
ror
fldenv
mov
jb
roll
mov
xor
jl
mov
lahf
sbb
push
incb
pop
hlt
pop
pop
mov
sbbb
movsb
out
dec
push
into
mov
inc
and
jge
sub
jmp
jno
popf
cli
ja
xchg
in
pop
das
js
fwait
cltd
cmpsb
ds
loop
aad
and
outsb
lahf
repz
notl
aam
lahf
pop
push
pop
in
jl
out
or
cmc
add
inc
adc
in
pop
in
pop
fwait
mov
sub
aam
mov
imul
sysenter
jbe
xchg
xchg
mov
xor
mov
iret
cld
sub
mov
mov
test
imul
inc
lock
jnp
pop
lock
psubusw
or
jl
adc
push
push
stc
xor
int
adc
xor
inc
cmp
push
xor
mov
in
dec
dec
rcrl
push
lret
push
ja
ret
xlat
mov
je
data16
mov
jg
lret
mov
scas
imul
xchg
adc
mov
insb
lock
jmp
xor
mov
lods
aas
xor
pushf
pop
sbb
sbb
cwtl
les
outsb
fadd
aad
push
cld
push
scas
add
adc
outsb
jns
add
mov
frstpm(287
mov
and
inc
mov
cwtl
pop
sub
leave
and
sbb
ja
aam
hlt
add
out
lret
dec
hlt
lahf
pop
hlt
aaa
mov
cmp
mov
repz
mov
out
inc
xchg
scas
xchg
fdivs
lret
or
cmpsl
movsb
jne
xlat
in
test
add
inc
xor
or
std
xchg
aaa
mov
arpl
aas
mov
xor
pop
mov
cmp
sub
and
int
or
adc
xor
aas
mov
cld
inc
cmpsb
cmpsl
roll
inc
sbb
jbe
cmpsl
loopne
mov
out
mov
jo
add
xor
mov
cltd
mulb
push
ljmp
adc
pop
decl
lock
jg
fsubrp
ret
mov
mov
add
js
movsl
pushf
pop
add
pop
sub
jo
adc
int
insb
mov
pusha
pop
and
mov
push
pop
test
xor
cmpsb
adc
stos
ljmp
push
ret
or
or
scas
fldl
js
lock
mov
cmp
xchg
push
cmp
pop
daa
sbb
fistps
push
scas
add
mov
cmp
movsb
cmp
xchg
mov
lahf
aam
loopne
aad
xor
into
daa
mov
out
lods
daa
leave
cmp
scas
addl
inc
sbb
mov
test
mov
ljmp
nop
pop
mov
mov
cmp
test
xchg
cmp
add
push
jb
and
pop
or
popf
or
repnz
cmp
subl
mov
sbbl
dec
mov
push
pop
add
stc
orb
out
push
sub
or
push
xlat
imul
inc
cs
into
in
cltd
test
hlt
sub
stc
cmp
mov
enter
mov
fnsave
and
cltd
cmp
xchg
iret
movsl
xor
out
inc
stc
into
xor
lock
jns
adc
mov
std
mov
and
out
arpl
cwtl
mov
xor
mov
clc
cmp
adc
xchg
pop
fldt
cmp
fs
add
sbb
cmc
lea
mov
fisubrs
sbb
daa
repnz
lret
sarl
sub
test
cli
psrlw
pop
lret
jb
rolb
leave
outsb
std
lds
dec
cli
pop
and
out
pop
xor
rcr
fsubl
xor
daa
mov
xchg
mov
in
test
cld
cmp
dec
ret
sbb
jp
pop
mov
stc
test
jbe
dec
mov
add
fdivp
movsb
add
jnp
loopne
inc
dec
adc
push
dec
lock
cld
push
push
jecxz
mov
pop
call
int
pop
dec
int
add
test
inc
rcr
fbld
sub
cltd
and
imul
xchg
dec
in
lea
add
xchg
sbb
cmp
mov
out
ljmp
mov
xor
pusha
inc
repnz
push
jo
out
xchg
sbb
pop
jno
mov
or
lods
sbb
aaa
ljmp
inc
cmp
push
les
lods
int3
cld
xlat
shlb
and
cmp
push
push
fdivr
fwait
in
mov
and
cmpsl
add
leave
addl
jmp
sub
call
sub
cltd
aas
call
lret
sbb
sub
insl
outsl
adc
and
mov
xor
enter
mov
outsl
xchg
testb
in
adc
decb
cld
fs
add
add
add
sarl
in
or
nop
aam
in
push
jb
ja
shll
push
jle
xor
push
and
pop
adc
jns
add
pop
mov
mov
adc
mov
pop
les
int
rcrb
jmp
mov
int3
mov
pop
bound
jbe
mov
mov
pusha
add
cmpsb
pop
xchg
push
clc
or
jp
in
cmp
call
sbb
and
adc
out
add
jmp
cmpsl
mov
xchg
dec
inc
call
xor
jmp
push
subl
mov
pusha
mov
addr16
les
and
fwait
cmp
repz
and
ss
sbb
subl
or
xor
paddd
idivl
mov
push
mov
test
mov
dec
data16
es
lods
sbb
icebp
lret
pop
icebp
or
pop
fcomi
sbb
test
movsl
insl
mov
imul
inc
cmp
pushf
lret
push
jg
lds
xchg
sub
xchg
mov
and
scas
stc
sub
xor
test
mov
fstpl
mov
fsubrs
pop
sbbl
ljmp
inc
or
mov
xchg
aad
ds
test
jb
push
jnp
test
add
mov
sbb
cmpsl
push
pop
rorb
xchg
mov
dec
sbb
cmp
jbe
sbb
adc
add
fdivr
je
in
dec
inc
fwait
sbb
push
clc
ficoms
popf
push
mov
fistpll
outsb
sbb
add
cwtl
fwait
addr16
jmp
lods
jo
sub
pop
bound
mov
iret
xor
xor
jne
lahf
jmp
jmp
mov
stos
mov
and
add
lret
iret
loopne
sbbb
xchg
inc
daa
cmp
mov
xchg
decb
shl
enter
pop
outsb
in
jo
xrelease
out
shll
inc
xor
push
sbb
insl
push
aam
in
int
xor
ret
push
js
mov
leave
ds
insb
stos
xor
sbb
mov
clc
xlat
in
dec
dec
addr16
sbb
mov
xor
xor
inc
mov
sub
pop
xor
jmp
xchg
cld
movsl
and
cmpsl
push
ret
xchg
mov
je
daa
out
pop
xlat
aam
mov
cltd
sbb
mov
pop
mov
loope
jmp
mov
sub
scas
cmp
ss
ljmp
add
imul
outsl
xchg
test
andb
mov
mov
xor
cwtl
shl
dec
sbb
lret
mov
push
or
scas
inc
jno
fistpl
repz
and
or
jb
push
fdivrl
sub
adc
popf
rorb
mov
je
scas
xchg
scas
and
dec
shrb
inc
outsl
or
jl
test
xor
pop
add
addr16
pop
dec
lock
pop
add
mov
cmpsl
xorl
sub
jbe
add
es
cli
pop
loop
cmc
je
sbb
adc
imul
mov
in
rclb
inc
lret
pushf
mov
adc
popf
jmp
jo
test
or
xlat
ljmp
or
ds
int3
insl
ds
aas
xor
ficomps
aas
mov
mov
adc
cs
or
sbbb
sbb
aaa
test
and
push
test
cli
mov
arpl
in
cwtl
cmp
lods
fsts
and
push
in
mov
mov
imul
mov
or
pop
pop
dec
int3
bound
sbb
and
clc
movsb
jno
dec
push
sub
adc
mov
or
mov
push
call
sbb
and
jae
or
in
sahf
adc
mov
in
aam
icebp
lea
add
daa
cs
mov
in
fcmove
mov
fdivs
lahf
xor
outsb
xchg
std
jbe
cmp
shll
dec
jge
ret
div
loopne
xchg
mov
xchg
rcr
push
mov
jmp
ljmp
loopne
mov
outsb
ljmp
add
sbb
or
out
pop
cli
inc
enter
loopne
dec
insb
dec
jecxz
push
fisubl
inc
or
nop
inc
dec
in
lods
in
mov
push
lret
and
inc
jle
lds
xchg
fwait
and
push
xchg
mov
mov
pusha
fisubs
fldl
xor
add
push
out
imul
test
cmp
fnstcw
sahf
and
adc
arpl
fcmovnbe
push
fdivrs
xchg
or
mov
insb
adc
jmp
xchg
aaa
insb
jmp
cmp
dec
jno
sbb
or
aad
dec
fwait
lods
mov
daa
fwait
mov
push
xchg
stos
les
xchg
inc
test
ss
sti
cmpsl
mov
xchg
mov
int3
jecxz
testb
jg
rcll
mov
into
mov
cmp
push
and
mov
loope
push
mov
jg
nop
push
pop
xor
mov
xchg
js
mov
sbb
pop
mov
and
cmp
clc
add
test
or
fwait
mov
inc
mov
pop
inc
les
es
imulb
addb
push
cwtl
repz
hlt
fistpl
jne
jo
dec
fildll
mov
xchg
mov
jo
sbb
out
fdivrl
jp
add
cwtl
fisttps
das
or
rcl
mov
adc
pop
dec
mov
orl
sarl
xchg
test
imul
xchg
je
mov
inc
mov
jno
mov
mov
or
fucomip
cmp
lods
test
dec
test
and
sub
mov
bound
enter
sub
dec
xlat
into
stos
pushl
xchg
jns
push
push
xchg
dec
inc
or
loope
add
in
out
dec
loope
push
push
cmovb
sahf
mov
outsl
fsubl
and
pushf
daa
mov
mov
sbb
fcmove
fdivl
cmp
add
mov
les
push
test
and
mov
es
int
in
pop
loop
or
pop
adc
lods
es
das
adc
sbb
xor
add
adc
cmp
negb
in
sbb
sti
mov
rcrb
enter
out
outsb
sarb
in
movsl
insl
daa
imul
shlb
insb
test
adc
xor
sti
adc
cmp
add
push
fcomip
dec
and
mov
sub
adc
xchg
jge
int
sbb
adc
in
std
mov
rclb
daa
test
icebp
je
pushf
sbbl
and
push
pop
jg
mov
push
mov
jge
cwtl
mov
mov
scas
mov
stc
sahf
push
mov
or
lret
push
jg
and
rcll
cmc
dec
jle
aas
sub
inc
mov
adc
out
ja
xchg
ret
std
xchg
inc
fdivp
adc
cmp
dec
pop
int
cmp
adc
out
and
das
mov
sub
shl
mov
lods
jge
cltd
inc
pop
inc
mov
xchg
into
jmp
jb
and
out
addr16
mov
int
add
mov
callw
xchg
sti
sbb
sahf
lret
xlat
mov
and
lret
pop
inc
std
push
addr16
imul
bnd
scas
addr16
imull
mov
jne
test
cmp
adc
pop
nop
inc
mov
sub
in
cmpsb
stos
push
js
lds
sub
cmpsl
les
cmp
je
mov
push
rcll
push
xor
cltd
jmp
cmp
sub
add
sarl
pop
adc
mov
add
pop
mov
pop
mov
sub
jbe
push
pop
jle
pop
dec
iret
stos
mov
lea
out
ss
popf
iret
fistl
or
mov
cld
lock
pop
in
mov
sbb
adc
sub
popa
mov
aaa
add
aam
pop
popf
jmp
dec
xchg
sbb
call
dec
test
arpl
cmp
cmp
imul
mov
lcall
cmc
loopne
add
ret
push
jo
cmp
imul
pop
mov
mov
test
ja
test
insb
leave
cmp
and
inc
lahf
push
icebp
ret
xlat
adc
xchg
push
int
call
aas
push
flds
mulb
add
pop
nop
enter
push
aaa
adc
outsb
jmp
mulb
dec
inc
leave
or
mov
push
mov
dec
lret
test
out
pop
sub
fsubs
sub
ds
add
cmp
sbbl
xchg
cld
inc
and
fistpl
xlat
sub
leave
pop
mov
inc
test
inc
xchg
imul
arpl
enter
pop
cmp
repz
mov
dec
sbb
lock
add
subl
gs
xchg
cmp
rcrl
inc
pop
or
xchg
inc
je
push
xor
pop
addr16
shlb
gs
dec
and
aas
insl
enter
inc
xchg
push
movsl
pushf
cltd
sub
cwtl
sub
and
subl
ds
pop
xchg
pop
mov
ljmp
lahf
pusha
adc
fwait
mov
mov
out
test
gs
dec
xchg
sub
in
stos
xor
mov
rorb
dec
sahf
jbe
cmp
addb
and
psrad
mov
jne
out
ja
iret
cltd
fbstp
push
aaa
adc
loop
cmp
pop
inc
dec
pop
and
cld
stc
mov
data16
and
dec
xchg
pop
arpl
dec
sub
xor
in
movntq
std
rcrl
sbb
out
sahf
jecxz
sahf
pop
fdiv
js
outsb
push
and
or
out
mov
dec
ljmp
sarb
ret
movb
mov
xlat
test
mov
cwtl
dec
imul
adc
pop
es
jns
jno
and
push
lea
jmp
adc
cmp
cmpsb
js
shll
imul
lcall
jmp
mov
or
aas
push
mov
or
or
push
dec
mov
mov
gs
in
movl
inc
cmc
mov
push
mov
sbb
cmp
fcoms
cli
fistl
imul
and
test
add
jg
mov
jmp
cmpsb
xchg
dec
cwtl
pop
arpl
push
pop
not
imul
add
push
or
jbe
jmp
pop
adc
cmp
cmp
pop
scas
fdivs
call
push
in
add
jl
leave
jp
pop
cmc
fcompl
mov
negl
mov
push
inc
jle
icebp
rclb
mov
daa
repnz
sbb
inc
test
insb
mov
cli
or
mov
enter
cmc
jle
and
xchg
enter
or
addr16
insb
movsl
scas
sub
push
arpl
pushf
sub
inc
iret
and
inc
sub
and
imul
xchg
and
or
jb
sbb
cs
stc
mov
fs
push
and
mov
test
inc
iret
dec
push
jmp
fs
sbb
lods
nop
mov
pop
out
cmpsb
js
mov
enter
test
call
ja
adc
aad
call
pop
dec
out
and
out
inc
jnp
adc
stc
cmp
andl
or
add
and
pop
and
mov
pusha
test
jge
repnz
lret
mov
jno
aaa
or
adc
mov
push
mov
inc
lahf
inc
push
mov
mov
push
fucomp
and
lds
inc
js
dec
push
pop
jle
xchg
test
repnz
mov
cs
mov
orl
mov
adc
xor
mov
movsl
aam
mov
ljmp
xlat
push
lret
add
test
sbb
jne
jns,pn
ljmp
xchg
rclb
pop
mov
mov
rorb
sub
gs
sub
dec
insb
je
lods
call
inc
daa
sbb
push
jmp
fucom
jo
popa
jmp
sub
pop
inc
repnz
dec
push
push
add
aas
fidivrs
push
inc
xor
cmpl
scas
xchg
in
fisubs
imul
pusha
lahf
sub
lret
clc
popf
shlb
idiv
std
popf
test
sar
mov
add
mov
das
push
jnp
push
cmp
fs
out
mov
test
fmull
mov
test
xchg
ret
cmpsb
fbstp
lret
fwait
jl
mov
test
mov
mov
mov
adc
xchg
pop
bound
loope
jne
sbb
sbb
add
or
stos
dec
lods
mov
dec
fimuls
ljmp
iret
jne
adc
inc
xor
dec
xchg
fwait
imul
nop
xor
adc
push
jle
or
mov
mov
movb
pop
cmp
sarl
test
ja
or
out
addr16
inc
dec
jno
jne
push
mov
adc
adc
cmp
sub
leave
pop
push
push
push
and
stos
imul
and
jecxz
sub
add
sub
fmuls
mov
mov
movsl
data16
mov
inc
jle
sbb
lds
or
mov
cltd
nop
mov
push
adc
mov
or
loope
cmp
cmp
push
and
ja
dec
cmp
icebp
add
xor
push
mov
xor
sbb
out
out
dec
std
jg
xchg
js
paddb
out
scas
js
je
sbb
sbb
divb
mov
xchg
dec
and
add
inc
repnz
sub
and
dec
dec
sub
cs
mov
sbb
scas
js
gs
add
int
gs
in
xor
in
aad
test
push
aam
mov
inc
xchg
sbb
packssdw
cmp
popf
addb
je
stc
shr
ds
mov
jg
daa
sahf
or
hlt
in
int3
rcrl
sbb
add
inc
xor
mov
inc
lock
sub
bswap
mov
fsubrl
push
in
es
dec
push
repnz
insb
mov
mov
mov
xchg
and
out
xchg
popf
pmulhuw
add
stc
inc
jno
stc
xchg
sub
xchg
xchg
mov
xor
loop
loopne
cmpsl
xor
stos
sub
mov
mov
call
push
inc
cmp
cmc
mov
inc
jmp
pop
xor
lock
mov
xchg
sub
loope
cmpsl
cmp
cmpsl
pusha
sub
cltd
and
cmp
jmp
ret
pushf
mov
scas
popa
cmp
mov
push
cmpsl
mov
sbbb
mov
mov
sub
pop
mov
sbb
cmp
add
dec
and
test
sbb
sub
nop
jbe
jp
popf
push
ret
in
out
das
popa
lods
push
enter
mov
jae
jns
cs
xlat
cmp
jb
enter
enter
cmpsb
cmpsl
stos
xchg
in
mov
arpl
pop
push
push
loop
test
out
mov
sti
dec
sbb
lea
mov
negl
ss
popa
fwait
jo
push
iret
dec
pop
fistl
rcll
inc
sbb
clc
sarb
dec
mov
test
dec
mov
ds
adc
shr
push
jle
call
insl
fdivs
mov
scas
insb
imul
mov
jmp
imul
mov
ss
fcmovnu
sti
negb
subb
cld
jle
js
fsubrl
aaa
jns
sahf
inc
jmp
push
mov
loopne
test
in
add
mov
ja
or
test
mov
sbb
clc
sbb
les
lods
clc
inc
sbb
xchg
sti
pop
lock
pop
hlt
mov
pusha
sbb
loop
jns
inc
addb
in
lds
es
mov
add
ret
in
ss
gs
fwait
add
mov
je
out
int3
pop
mov
je
sub
jo
sbb
mov
ret
leave
gs
cld
fsubl
test
adc
sub
movsb
fwait
stc
push
cmp
cmp
shrb
mov
pop
adc
test
sbb
xchg
sbb
jecxz
mov
mov
sub
jne
pop
test
int
push
sub
mov
cmp
out
push
inc
jmp
je
cmp
mov
lcall
ljmp
jg
call
out
sbb
adc
lea
outsl
pop
out
pop
xchg
loope
mov
dec
lds
add
inc
pop
jecxz
sub
fdivrs
dec
jnp
in
lods
jmp
scas
mov
pop
dec
mov
les
test
pop
dec
ljmp
call
dec
and
push
jbe
fidivs
add
or
pop
mov
pop
inc
and
test
jnp
addb
jns
sbb
mov
ja
cld
pop
mov
pop
add
out
fwait
inc
jns
cmpsb
js
pop
les
test
inc
xchg
mov
cmp
xorl
pop
mov
lea
out
iret
mov
lock
je
je
xchg
cmp
in
lea
mov
xorb
pop
cltd
lods
mov
adc
jo
push
les
dec
pop
cmp
ljmp
iret
xor
pop
fwait
pop
iret
inc
xchg
or
xchg
fnsave
clc
add
data16
xchg
push
lock
inc
fwait
sbbl
insl
mov
sbb
xor
ret
mov
lcall
ss
data16
inc
test
dec
and
pop
jecxz
xchg
jge
dec
jb
dec
add
inc
idivl
inc
jl
lods
jle
jae
loopne
jl
jmp
jp
jl
pop
cmp
int3
orb
mov
mov
push
dec
faddp
decl
clc
mov
insb
fwait
rcr
es
xchg
jecxz
fldcw
pop
loop
call
std
inc
and
push
enter
and
mov
mov
jo
std
sub
adc
and
in
rolb
sub
icebp
in
sub
fsubrs
std
shll
cld
movsl
cmpsb
dec
dec
push
inc
push
dec
add
fldenvs
xor
outsl
cmp
mov
inc
mov
sub
pop
mov
xor
fs
aas
std
outsl
xlat
std
push
mov
xchg
mov
imul
aam
pop
xor
call
push
sub
enter
cwtl
dec
mov
insl
lahf
fnstsw
adc
fistpll
pop
shrl
orl
xor
push
xchg
subb
push
cmp
fisttps
add
sub
insb
or
fistpl
add
ret
jp
notb
lods
pop
cmpsl
pop
mov
bound
movsb
xor
cmpsl
inc
pop
dec
sarl
adc
adc
pop
pusha
inc
jno
mov
pop
or
nop
andb
push
xor
in
mov
inc
inc
dec
stc
loopne
xorb
mov
mov
hlt
shrl
addl
jns
and
or
shlb
movsb
pusha
push
iret
push
divb
insb
ja
loope
mov
mov
adc
loopne
out
mov
cmp
les
and
repnz
test
ret
mov
fucomp
push
inc
lahf
and
out
cmp
rclb
inc
pusha
dec
repz
jecxz
outsb
fcoml
sub
incl
pop
xor
fistps
in
movsl
mov
stos
ret
adc
fwait
sub
push
test
adc
push
sbb
or
xchg
hlt
cli
ret
ja
xchg
int3
mov
xor
sub
dec
dec
std
loop
or
add
add
mov
call
jmp
pop
aad
dec
loope
inc
inc
adc
scas
mov
mov
jnp
push
pop
cmp
add
insl
inc
mov
hlt
int
jbe
push
mov
pop
and
in
xchg
xor
adc
push
lret
sub
xchg
inc
mov
pusha
or
les
nop
fisttps
inc
dec
mov
fimull
je
push
mov
leave
mov
in
adc
rorb
mov
fildl
pop
repnz
mov
lcall
xor
adc
jne
mov
sub
mov
pushf
fwait
pop
inc
and
repnz
nop
dec
rorb
arpl
mov
out
xchg
xor
jbe
data16
jle
pop
sbbb
sub
mov
sbb
or
arpl
inc
mov
push
cmp
dec
jp
outsl
cli
add
imul
jo
mov
sub
ficompl
in
pop
and
or
mov
mov
push
aaa
mov
sahf
cmpsb
jnp
addr16
movsl
fbstp
adc
mov
sbb
data16
rorl
lds
je
mov
addb
xchg
shl
popa
xchg
test
fmuls
negl
fs
mov
loop
sub
cmovno
scas
mov
push
loope
cmp
test
insb
divb
jnp
outsl
xchg
mov
dec
push
cwtl
fisttpl
out
push
pop
push
adc
xchg
imul
sub
insl
xor
sbbl
sub
push
addb
stos
into
pop
inc
in
and
sbb
addr16
shll
into
inc
sub
jo
xchg
mov
test
ficoml
rorl
lret
aas
inc
xor
inc
mov
dec
enter
rorb
mov
lock
cmpsb
fwait
push
loop
test
or
mov
dec
sub
mov
out
and
or
and
jl
sbb
out
cmp
sub
dec
mov
mov
ret
sub
sbb
mov
mov
sub
xlat
push
in
insw
jae
xorb
in
pop
sub
xchg
pop
inc
push
push
cld
xor
xchg
dec
jp
add
adc
sarb
sub
testb
outsl
xchg
push
jg
out
insb
cltd
cmpsb
mov
subb
add
movsl
repnz
pushf
aad
int3
mov
dec
sub
add
push
pop
nop
pop
jge
xchg
jbe
outsl
inc
cli
stc
icebp
int3
sbb
call
arpl
or
aas
xlat
mov
movsl
jno
adc
jns
call
add
aam
mov
arpl
pop
rcrl
sbb
fwait
push
mov
or
jp
sbb
lea
push
je
cmp
aad
dec
mov
scas
cmp
xchg
mov
or
std
xchg
inc
xchg
aad
jmp
and
out
cltd
add
test
add
js
and
aaa
je
in
gs
jno
cmp
jg
cmp
fisttpl
push
jns
repz
fnstsw
ret
in
inc
xor
mov
cmp
xchg
push
sbb
pusha
add
into
shlb
hlt
and
int
sarl
sub
clc
jns
jmp
lahf
sbb
stc
push
icebp
adc
fdiv
insl
push
je
cltd
ret
fsts
out
jno
push
push
shrl
dec
mov
lret
testb
mov
lods
add
cld
lods
cmp
pop
cmc
adc
jle
or
pop
xlat
mov
inc
outsb
rorl
dec
push
pop
in
cmpsb
call
fldl
and
repz
xor
dec
mov
dec
dec
add
mov
add
push
fwait
mov
pop
scas
lods
ja
pop
cmp
mov
les
les
push
pushf
pop
add
in
mov
xor
sbb
xlat
daa
mov
int
push
push
stc
push
jp
push
cmp
mov
cmp
mov
or
dec
inc
pushf
cmp
fs
or
xchg
xor
pop
stc
cmp
and
adc
pop
jb
mov
mov
inc
push
mov
sub
out
dec
sahf
sub
mov
adc
out
stos
pop
testl
sti
xor
push
lock
fxch
mov
add
aam
inc
mov
popf
jns
mov
sub
fdivrs
out
sbb
std
mov
stos
jb
movsb
orl
popf
xor
mov
mov
mov
stc
out
push
pop
and
insb
lock
add
pop
dec
mov
sahf
imul
xlat
flds
and
inc
mov
lret
insl
loopne
jp
nop
jo
inc
add
xchg
sub
push
or
bound
sub
lret
and
in
push
insl
gs
sarl
mov
orl
je
push
ss
ljmp
call
pushf
or
punpckldq
clc
mov
scas
sbb
clc
invlpg
pop
je
test
arpl
test
fidivrs
lret
jmp
les
enter
std
sti
scas
mov
add
cltd
sub
call
and
mov
sbb
sbb
push
push
into
pop
sub
mov
out
jmp
aaa
add
outsb
pop
dec
fs
jo
into
xor
ret
mov
dec
add
movsl
addb
cmp
jnp
inc
flds
aaa
pop
in
mov
daa
sub
mov
das
jns
movsl
jle
jle
sahf
enter
xor
push
dec
out
mov
xchg
shlb
xchg
adc
lahf
push
aad
hlt
inc
mov
scas
xor
sbb
add
and
xor
xor
std
dec
std
cmp
shll
dec
mov
sbb
mov
ja
sbb
inc
jge
ret
xchg
pop
mov
int3
sti
jo
xchg
fbld
pop
stc
or
xchg
jecxz
push
inc
push
push
push
aad
lods
cmp
push
mov
aas
aam
dec
and
cmp
xchg
test
hlt
clc
xlat
jae
lret
arpl
test
inc
pop
cmp
or
sub
ljmp
pop
xchg
fistps
inc
sub
add
jge
fidivrl
jle
arpl
aam
jbe
push
jecxz
hlt
pop
clc
ljmp
in
pusha
in
outsb
jae
add
out
mov
es
in
ret
movsl
mov
push
push
mov
test
mov
mov
jle
jmp
jmp
mov
add
cmpsl
cmpsb
ljmp
lcall
push
imul
push
jecxz
mov
cmpl
pop
cwtl
dec
rorl
jg
xor
mov
leave
inc
mov
rcrb
pop
sbb
insb
and
adc
movsl
xlat
xchg
sbb
pop
jae
pop
xor
in
dec
dec
movb
outsb
pusha
sti
lcall
mov
push
movsb
push
inc
in
scas
dec
out
pop
xor
xor
aad
mov
sub
cs
cmp
addr16
stc
into
mov
or
nop
adc
repz
scas
testl
ficoml
sbbl
loopne
inc
pop
das
xor
pop
test
pop
jmp
ljmp
pop
dec
adc
test
lahf
pop
lcall
mov
mov
arpl
jo
jns
inc
imul
mov
dec
hlt
mov
into
dec
dec
cli
sub
les
inc
test
jp
sub
mov
and
aas
pop
sbb
sbb
decl
cld
mov
mov
pop
fnsave
lahf
cmc
popa
ja
and
xchg
pusha
pop
push
push
js
movsb
pop
pusha
inc
xchg
dec
fisubrs
mov
setg
jb
fsubl
cmpsb
rol
mov
add
sbb
cltd
and
cld
jmp
xor
stc
aaa
jne
loop
pop
cmp
rcrb
lret
push
sbb
inc
push
leave
fdivs
ss
imul
mov
jb
xor
ds
mov
or
jle
pop
femms
sub
and
test
shll
sub
or
add
adc
inc
sub
push
faddl
xor
aaa
adc
fstps
mov
push
pop
mov
enter
push
pusha
push
sub
lahf
jg
xor
add
in
je
adcb
inc
je
or
and
mov
movsl
pop
imul
fldt
push
movsb
hlt
xchg
push
or
jmp
outsb
sbb
cmp
adc
sub
inc
or
xchg
pusha
mov
fcmovne
add
mov
sub
cmpsl
and
xchg
cmp
xor
and
test
push
lret
les
xchg
leave
inc
cs
addl
cld
pushf
inc
or
bound
or
mov
push
int3
dec
fs
xor
dec
jb
or
inc
jge
fcomps
sahf
fcompl
jne
mul
mov
or
push
add
mov
cli
dec
cmpsb
inc
lods
lret
sub
mov
stos
fwait
fwait
pusha
cmc
into
or
cltd
pop
rclb
cld
xor
xor
test
fidivl
sar
aam
dec
inc
or
mov
stos
mov
lret
icebp
lods
outsb
push
shl
dec
enter
push
insl
mov
fldl
and
clc
dec
fildll
xlat
mov
push
inc
pop
xchg
dec
jecxz
loope
push
outsb
push
arpl
cltd
and
aad
les
inc
push
adc
jg
pusha
int3
sub
cmpsb
adc
push
sbb
pushf
dec
in
cs
push
in
jmp
fsubs
or
lods
pop
orl
clc
adc
fiaddl
pop
mov
adc
sub
fldlg2
inc
loope
in
mov
mov
push
adc
gs
mov
popa
or
or
sbb
xlat
or
jg
fsts
mov
inc
fsub
repz
mov
leave
out
pop
lock
jb
test
js
rcrl
fsubrl
shrb
insb
inc
aas
adc
ss
shl
adc
mov
push
push
mov
cmp
sub
sti
insl
scas
pop
aad
addr16
xlat
inc
sub
fimull
cmpsb
pop
sbb
in
mov
adc
mov
jle
pop
sub
ljmp
loopne
dec
out
jb
ja
lds
mov
pop
shlb
pop
mov
aas
pop
xor
pop
movsl
mov
pop
mov
outsl
js
add
pusha
xchg
stos
jne
mov
inc
inc
ja
add
mov
adc
popa
bound
mov
fsubrp
ljmp
out
gs
scas
mov
inc
call
into
push
scas
dec
xor
dec
sub
out
xor
addr16
incb
in
mov
out
sbb
cmc
or
out
push
xchg
push
lock
call
sub
in
jl
rol
sbb
popf
imul
scas
call
nop
fstps
mov
mov
sbb
adcl
das
stos
test
add
test
add
lods
out
clc
cltd
mov
jns
loope
adc
rcrb
test
das
xor
mov
arpl
fwait
mov
sub
lods
cmpsl
and
add
add
sub
mov
cmp
sarl
push
arpl
addr16
mov
pop
scas
dec
ret
rcr
jne
aad
icebp
incl
addr16
shl
cmpsl
adc
or
push
clc
in
in
xchg
out
mov
cltd
cmpsb
popa
push
pop
repz
scas
addr16
mov
mov
jmp
pop
frstor
mov
mov
test
es
sarl
jae
shl
sub
ret
inc
ss
cmpsl
cmp
sbb
sbb
mov
lods
mov
or
push
ss
rcrb
sub
jns
xlat
enter
cli
fisubl
fstp
mov
int3
clc
pop
add
arpl
filds
inc
inc
pop
into
popf
inc
mov
iret
not
daa
jo
dec
or
fisubs
push
adc
js
push
aad
jae
jle
jae
inc
jmp
pop
sbb
jo
bound
in
stos
ficoml
mov
mov
test
xchg
insb
xchg
test
fdivs
push
mov
js
sub
aaa
jns
cmp
dec
test
dec
out
gs
pop
in
fstps
push
jge
sub
icebp
out
shl
lret
inc
mov
mov
sbb
cmpl
scas
fwait
jp
outsb
imul
mov
fistl
xor
push
adc
add
data16
fisubrl
or
inc
fadd
jle
movsl
jne
lret
ds
fimull
xor
test
stos
and
dec
cli
xor
jbe
call
or
push
or
rcrb
lcall
lcall
pop
shrb
daa
cmp
lds
fisubrs
xchg
stos
fsubs
jb
in
push
test
lods
add
imul
dec
mov
sbb
or
sbb
lods
testl
xchg
jne
mov
inc
lock
fcoml
pop
adc
das
mov
mov
push
loopne
cmpsb
inc
pusha
stc
mov
sbb
mov
or
push
into
push
mov
xor
and
jecxz
pop
inc
orb
sbb
cmpsb
dec
xor
push
lcall
insb
jne
clc
ss
push
stos
scas
das
pop
add
pop
mov
mov
pop
inc
mov
and
dec
jp
stc
imul
mov
ljmp
std
sub
sub
cli
test
mov
stc
roll
ds
incb
lahf
sarl
hlt
incl
or
imul
mov
sub
fcmovnb
nop
inc
outsl
ds
xchg
push
inc
sbb
xchg
push
add
pop
fiadds
cmpb
adc
popf
dec
pop
data16
insl
loopne
jp
sub
inc
pop
nop
lcall
jno
repnz
stos
mov
rorl
jnp
add
or
mov
push
cmp
dec
inc
push
outsl
xchg
mov
jg
inc
adc
lea
cmp
cmp
and
or
jp
mov
and
lock
mov
push
icebp
in
sub
mov
cmc
dec
out
mov
sbb
sub
add
push
dec
loopne
and
cli
xor
pop
add
push
push
xchg
shrb
in
mov
enter
outsb
push
or
ds
sub
in
lret
xchg
insb
jbe
test
sub
push
jae
aad
inc
bound
push
pop
lcall
push
or
fwait
imul
rclb
adc
in
add
xchg
jge
outsb
and
out
fs
mov
mov
cmp
pop
psrlq
call
pop
stc
clc
inc
mov
xchg
mov
lods
imul
and
ffreep
and
mov
ret
xchg
jmp
imul
mov
xchg
xor
mov
mov
push
out
inc
test
xor
test
xchg
mov
jmp
lret
test
ds
push
inc
sbb
xchg
xor
push
sarb
inc
mov
dec
lods
data16
test
inc
jecxz
fnstenv
or
aaa
scas
xor
or
pop
jge
test
jp
enter
jle
lret
push
mov
ss
cs
sbb
cmpsl
push
test
or
adc
xchg
imul
pop
push
ljmp
mov
stc
mov
movl
cmp
push
sub
inc
out
push
ss
cli
push
add
or
jo
imul
enter
push
mov
jmp
sbb
mov
add
test
bound
xor
or
dec
cmp
shl
popa
sub
out
and
jnp
movsb
xchg
imul
mov
cld
or
jmp
cmp
ficompl
in
mov
addr16
mov
in
mov
push
sbb
scas
adc
aad
clc
mov
ds
jg
mul
dec
inc
and
sahf
jl
push
mov
out
cs
and
lods
out
popa
xchg
bound
pop
mov
and
xchg
push
fdivrl
pop
cwtl
hlt
lods
mov
aam
data16
sub
ret
loope
lahf
mov
xor
enter
pop
jmp
mov
inc
pop
pop
aaa
inc
fcoms
add
cmp
xor
adc
out
push
mov
lods
add
pop
incl
loope
sbb
int3
mov
cmc
push
js
jne
insl
mov
sbb
sub
les
or
push
mov
and
xchg
ss
jbe
or
jp
test
lods
inc
sbb
add
xchg
movsl
repz
add
fcmove
shll
sbb
cmpsl
xchg
adc
out
push
mov
push
mov
dec
data16
ljmp
or
mov
clc
movsb
or
rorl
imul
and
repnz
divl
xchg
out
cs
add
aad
in
sub
lret
push
pop
xlat
lea
or
dec
mov
mov
push
jnp
lahf
mov
cmp
mov
inc
cwtl
sbb
jno
mov
movsl
out
dec
ja
push
sbb
test
cltd
out
or
pusha
sarl
cmp
jl
outsl
lds
stos
mov
inc
pop
mov
dec
fdivrp
sahf
int3
mov
int3
sub
loope
sub
leave
lods
ja
or
fcoml
in
das
lret
fsubr
mov
xchg
repnz
jae
cltd
icebp
sub
pop
jae
add
sbb
dec
xor
stos
addl
mov
hlt
jne
out
popa
xor
adc
idiv
xchg
idivb
aad
outsl
or
jmp
xchg
xchg
jle
push
pop
rcrl
nop
xchg
inc
xor
leave
popf
inc
fs
fidivrl
popa
or
fstps
pushf
jmp
xchg
inc
mov
out
or
in
add
xor
test
mov
aam
pop
out
cmp
cmpsl
lret
pop
enter
add
arpl
stos
mov
push
cmp
dec
fcoms
mov
movsb
and
repz
adc
ret
fucomp
lahf
lret
out
xchg
xor
bound
lcall
rcl
mov
pop
push
and
in
xlat
push
rcrb
dec
test
movsb
shrb
pop
lods
lods
mov
or
or
js
push
mov
add
jle
mov
mov
int3
inc
sahf
xchg
hlt
subl
je
xor
imulb
mov
push
inc
cmc
add
test
rcll
push
lea
ja
inc
in
push
xchg
push
test
out
das
sbb
and
and
fwait
in
scas
push
push
imul
xchg
pushf
ja
outsb
xor
pop
out
pusha
and
push
push
sbb
shrl
outsb
lds
lods
adc
adcl
cmpsb
pop
out
imul
xchg
data16
cli
add
arpl
out
mov
cltd
push
pop
mov
sub
cs
test
pop
push
dec
rcrl
ret
rorb
mov
lret
jae
add
pop
hlt
pop
inc
test
stos
add
mov
outsb
bound
mov
mov
pop
add
push
xor
mov
sub
jbe
sbb
jae
das
int
cmpsb
aam
or
leave
jg
inc
pop
adc
jle
mov
push
inc
inc
inc
mov
out
xchg
push
das
leave
ja
pop
mov
or
jle
jne
mov
repz
lock
movsb
sbb
pop
movsl
dec
cmpsl
data16
jb
xchg
xor
mov
xlat
out
into
xchg
jge
mov
xchg
fs
jo
mov
icebp
push
inc
inc
mov
aas
lods
or
subl
ret
icebp
int3
movsl
fldenv
in
jg
jg
cmp
push
fnsave
mov
test
std
aam
add
or
adc
dec
xor
js
gs
test
lcall
push
push
jp
in
popf
and
ds
jmp
and
mov
arpl
dec
push
in
push
and
arpl
in
mov
jns
jns
jo
das
cld
adc
and
hlt
mov
jbe
addr16
or
sub
jecxz
inc
hlt
ss
xchg
in
in
cmpsb
inc
in
in
mull
and
test
or
push
pop
imul
pop
jle
and
or
pop
cmp
inc
pop
cmpsl
add
push
add
fadd
loope
divl
inc
and
mov
icebp
push
push
push
sub
mov
hlt
push
call
push
pop
jne
mov
sub
cmp
loopne
scas
jl
imul
sahf
push
idiv
int3
loop
pop
mov
iret
sub
movsl
mov
and
mov
inc
dec
lret
mov
or
notb
inc
sbbb
add
and
pop
pop
lea
sub
xchg
sub
sbb
pop
test
cs
lret
and
cmpsb
push
fucom
fldcw
mov
dec
sahf
pop
inc
mov
popf
pop
dec
push
inc
mov
xchg
aas
mov
and
sub
xlat
and
jge
sbb
dec
dec
mov
imul
out
lods
ljmp
jo
push
fildll
loop
or
dec
pop
imul
and
pop
jae
mov
cmp
mov
aad
je
jmp
hlt
jmp
pusha
lds
scas
add
xchg
inc
xchg
mov
sbbb
lea
jmp
addr16
mov
xchg
cmp
mov
leave
push
mov
mov
mov
fisttpll
gs
ret
addr16
dec
push
std
cmp
clc
data16
sbb
push
into
jnp
ss
int3
das
mov
mov
sbbb
enter
pusha
fdivl
fs
mov
shrb
jle
mov
cmpsl
ss
or
lock
lea
loopne
inc
pop
popa
negl
mov
movsb
pop
inc
in
cld
adc
adc
pop
or
movsb
test
icebp
loopne
rcrb
lahf
jb
add
jae
add
hlt
addb
mov
scas
inc
fdivp
inc
cwtl
je
push
add
mov
push
sbb
dec
jle
in
inc
push
xchg
cli
shll
mov
arpl
jle
ja
fisttpl
std
cwtl
icebp
fldt
cmp
pusha
jno
fbld
mov
rolb
adc
cmc
dec
pop
jle
cld
adc
pop
xchg
shlb
cld
sub
data16
lret
mov
outsb
xchg
jb
lds
inc
push
and
aam
pop
xchg
mov
jmp
arpl
xchg
scas
imul
je
push
jmp
mov
ds
mov
mov
xor
mov
inc
inc
mov
jecxz
xchg
mov
push
repnz
pop
adc
jmp
pop
loope
dec
lods
jnp
movsl
xchg
or
movsl
xchg
in
push
cmp
mov
mov
sbb
nop
sbb
adc
cmpsl
dec
sub
dec
out
in
pop
mov
mov
jecxz
dec
pop
adc
adc
imul
xchg
mov
xor
mov
inc
sbb
pop
inc
lahf
enter
adc
add
mov
shlb
leave
sti
shl
mov
je
add
rclb
jecxz
test
imul
cmp
push
sub
fs
and
aaa
pushf
add
ret
dec
adc
push
cmp
test
cmp
mov
cltd
subb
outsb
je
xchg
add
popa
push
out
test
test
jne
cmovs
sbb
jae
ja
sbb
repnz
lods
outsl
mov
sbb
pop
and
mov
cmp
cwtl
test
sbb
out
push
push
jecxz
into
or
inc
cmc
cmpsl
xor
xchg
mov
xchg
ret
cmp
ret
stc
inc
lret
in
jecxz
test
lods
cld
dec
dec
jns
std
out
mov
lcall
push
jns
cwtl
pop
scas
mov
and
mov
lahf
inc
scas
sub
leave
adc
xor
enter
fsubrl
dec
add
sahf
rorl
mov
xchg
loop
pop
adc
jne
repnz
aas
cmp
jno
hlt
add
add
xchg
out
or
and
je
lcall
loopne
mov
push
imul
jb
jb
adc
add
das
xor
push
test
aaa
pop
clc
in
inc
fisubrs
sbb
cmpsl
or
jae
dec
iret
popa
mov
push
inc
lods
pushf
mov
mov
mov
xchg
xchg
inc
ret
dec
add
sub
fcoms
inc
jecxz
pop
and
inc
dec
sub
push
shl
jl
cltd
loop
out
add
subl
pushf
shlb
out
movsb
xchg
popa
das
icebp
lahf
inc
adcb
ss
sbb
xlat
mov
outsl
or
rclb
adc
push
cmp
std
sti
dec
popf
adc
sub
pop
push
inc
idivl
inc
and
and
mov
cmp
pop
mov
xchg
pop
test
aam
cmpsl
dec
cltd
data16
fistl
movsl
push
addl
push
and
xchg
mov
bswap
push
sahf
jne
pop
inc
mov
mov
into
adc
std
mov
arpl
mov
inc
jne
lret
lods
jnp
fdiv
mov
add
mov
pop
aaa
out
pop
mov
in
out
movb
jle
push
xchg
out
movsb
mov
jns
dec
fmuls
hlt
andl
push
in
les
nop
adc
insb
jo
push
es
sbb
mov
mov
stos
daa
cmp
push
xchg
adc
arpl
add
rolb
loopne
add
sahf
pushf
popa
out
movsb
in
and
cmp
cmpsl
xor
adc
mov
or
xor
cmp
lahf
ja
js
sub
push
add
pop
inc
jmp
sbb
scas
scas
loop
pop
mov
mov
mov
and
fdivr
and
gs
int
in
pop
loop
cmp
es
aaa
add
pop
popf
sub
stos
faddp
add
jnp
ljmp
cli
push
bound
add
push
cmpsb
push
adc
pusha
loope
inc
jmp
test
mov
push
push
jbe
shrb
subb
cmp
mov
dec
mov
adc
das
lock
jo
xchg
lret
stos
cmp
das
pusha
aam
es
out
inc
push
xorb
sub
dec
dec
or
jae
adc
or
in
scas
cli
pop
outsl
inc
cmp
mov
mov
sbb
inc
fdivs
inc
roll
cld
adc
in
xor
jle
push
xor
xchg
in
aas
ss
ljmp
jnp
fiaddl
mov
jl
call
dec
inc
cmp
test
adcl
mov
xor
xchg
sub
jnp
pop
cltd
movsb
pop
fwait
xchg
cmp
and
adc
sbb
mov
xlat
mov
or
mov
lret
sarb
sub
inc
mov
push
loope
xor
sub
inc
roll
pop
ror
jnp
out
sbb
add
mov
push
ds
cli
xor
jno
fildl
mov
push
push
fimull
test
fidivrl
push
cmp
lcall
test
out
or
jne
leave
mov
aad
lods
cmpb
repnz
mov
adc
cwtl
out
mov
aaa
mov
pop
sbb
jl
dec
outsl
in
jae
arpl
movsl
pop
jle
jnp
cmpsb
sub
inc
jl
js
mov
xchg
inc
ret
add
clc
jecxz
mov
int3
jg
sub
ja
cwtl
or
add
jne
mov
mov
imul
mov
adc
adc
fnstenv
outsl
ja
loopne
mov
xlat
out
daa
jno
out
xchg
dec
data16
xchg
scas
ret
cmpsb
sbb
je
sub
mov
fimull
aad
scas
incl
jno
jnp
mov
add
pop
adc
out
mov
mov
and
pop
stos
jnp
push
xor
xor
movsl
cmp
rcl
jl
add
in
cli
lret
sub
jg
xor
lods
sbb
pop
je
sbb
mov
sti
add
gs
clc
frndint
iret
jnp
cli
jmp
cld
mov
pop
lcall
push
stos
mov
jmp
test
fstpl
aaa
test
das
and
xchg
sbb
or
push
xor
xor
movsl
rol
in
gs
pop
das
addl
cmpsb
sbb
dec
rcll
cltd
push
mov
xchg
xchg
inc
icebp
sbb
xor
lea
nop
cmp
mov
cwtl
add
scas
repnz
jo
mov
mov
subb
aaa
faddl
sub
jae
movl
mov
lea
popf
and
or
push
daa
loop
sub
testb
scas
push
jl
xlat
cmp
popl
dec
in
lcall
jecxz
mov
sti
cwtl
mov
test
push
inc
ja
dec
rorb
jl
jne
xor
cwtl
xor
lret
into
sbb
adc
inc
mov
movsl
pop
cmp
fsubrl
xor
mov
cs
std
out
inc
inc
pop
mov
cmpsl
gs
sbb
inc
outsl
mov
push
jb
inc
test
addr16
loopne
test
pop
push
jg
cmp
imul
iret
stos
ret
int3
push
add
shrb
xor
movsl
ss
aaa
out
mov
add
popf
push
dec
sarb
into
mov
int
js
push
lahf
sbb
lret
pushf
push
in
pop
clc
and
clc
sub
mov
push
int
out
mov
push
roll
out
add
mov
mov
or
scas
xor
mov
sbb
int3
sub
jmp
shlb
aam
mov
sub
sbb
faddl
add
test
push
sti
outsl
movl
sub
pop
dec
test
int3
inc
in
cli
mov
xchg
push
adc
xchg
sub
inc
push
mov
push
arpl
push
xor
in
dec
cmp
stos
jmp
push
and
loopne
cmp
lock
fs
outsl
test
int3
jge
das
in
in
rcrb
in
dec
mov
mov
lcall
in
or
or
cmpsl
in
pop
xchg
mov
lock
int
cmpsl
cmp
loope
aam
or
jmp
movsb
push
insb
mov
out
out
add
inc
push
mov
xor
xchg
addr16
fwait
mov
mov
in
test
in
js
inc
mov
sub
repnz
cli
add
fcomps
jge
jmp
sbb
pop
insl
add
push
dec
sbb
icebp
test
inc
push
out
test
lret
lret
mov
push
or
add
cld
in
dec
out
adc
inc
mov
or
xor
pop
push
aaa
inc
push
test
out
movsb
negl
mov
inc
out
push
lea
jg
daa
test
int
in
stc
cmp
out
mov
test
pop
sbb
enter
insl
jo
sbb
add
data16
push
jp
les
mov
and
xor
pop
pop
xor
add
mov
mov
cmc
imul
and
ret
scas
std
push
sbb
or
add
jnp
or
dec
xchg
movsl
loope
lods
test
mov
lods
dec
push
testl
mov
jp
dec
sbb
stos
aam
loop
sbb
inc
loopne
jo
jns
xor
and
movsl
mov
inc
mov
movsl
jg
fisttpl
mov
pop
cmpl
movsb
xorl
iret
mov
call
pop
or
out
add
fs
push
xchg
aam
sti
ror
mov
popf
cmp
add
mov
in
cs
bound
push
xchg
cmp
pop
inc
fsts
adc
sbb
js
jmp
aam
subb
int
aad
cmp
dec
jl
jne
dec
outsb
cmp
xor
scas
jl
mov
mov
aad
fnstcw
out
mov
mov
sbb
cmpsl
adcl
add
add
fucomip
mov
into
adc
jmp
ret
mov
or
ja
cmpsb
mov
outsl
cmp
stc
mov
in
mov
data16
test
aam
ljmp
adc
mov
ljmp
stc
leave
push
ss
mov
sbb
jle
ljmp
aad
lret
jns
lock
lahf
out
cmp
dec
cmc
std
imul
push
sub
daa
mov
in
pop
movsb
mov
clc
fwait
shlb
mov
mov
dec
ss
sahf
dec
call
stc
mov
test
inc
hlt
movsl
cmpb
dec
add
pusha
movsb
pushf
jns
cltd
mov
lods
popa
mov
sar
pop
aas
jae
sub
clc
dec
stos
inc
dec
popf
out
or
lret
xchg
inc
jns
jb
pop
scas
mov
adc
mov
sub
xchg
jne
pop
pop
mov
loop
mov
cld
mov
inc
mov
fs
xor
mov
popa
testb
cmc
loope
ret
wbinvd
addr16
icebp
or
clc
jne
xor
add
sahf
add
push
gs
in
add
cmp
in
aam
dec
xchg
sbb
test
scas
mov
fildl
pop
or
sub
and
imul
dec
inc
in
je
xor
add
insl
imull
into
push
repnz
iret
push
sbb
mov
xor
fistps
pop
shl
ljmp
and
testb
dec
addr16
orl
popa
jno
dec
xchg
dec
lods
dec
mov
sbb
pop
xorl
shll
testl
stos
jae
pop
mov
mov
enter
arpl
out
mov
cld
cmpsb
dec
pop
int
popa
mov
inc
ja
and
std
xchg
test
shll
fcomip
subl
icebp
dec
inc
adc
lods
pop
mov
pop
dec
pushf
cmc
adc
pushf
sub
iret
adcb
ss
fcmovu
jns
add
add
dec
xchg
xchg
sar
fldenv
pop
cwtl
test
inc
in
jg
jge
add
jno
jmp
inc
mov
enter
cwtl
mov
or
pushf
inc
aaa
push
push
xchg
mov
or
out
jb
fwait
mov
fcoms
xor
mov
movsb
cltd
lea
in
ss
sti
repnz
lret
mov
aam
pop
mov
sbbb
cwtl
pop
or
pop
cmpsl
inc
sub
mov
xchg
in
outsb
add
mov
or
xchg
int
mov
pop
dec
movsb
pop
rcrb
adc
mov
inc
enter
pop
jg
sbb
daa
mov
sahf
dec
call
pushf
aaa
mov
pop
clc
xchg
push
sahf
cmp
mov
scas
xor
sbb
xchg
inc
aaa
pushf
stc
sub
push
jecxz
or
dec
push
mov
xchg
ljmp
aam
and
test
scas
test
inc
imul
lret
and
ret
jmp
mov
pop
or
and
xor
dec
add
pop
or
and
popa
hlt
and
add
popf
ffreep
addr16
aad
push
in
push
add
cmp
add
add
jmp
ftst
subb
inc
in
sbb
aam
push
mov
cmp
cmp
cmpsl
loop
inc
inc
ljmp
and
push
mov
clc
les
or
je
xchg
pop
hlt
outsl
cwtl
push
in
enter
lahf
dec
jbe
stos
mov
cli
sub
add
in
cmp
jno
mov
ja
push
dec
mov
enter
mov
test
das
push
jo
push
scas
dec
lret
popf
mov
push
out
data16
adc
movl
and
mov
jns,pt
js
clc
lahf
out
lcall
or
jno
es
lret
addb
jns
inc
push
imul
pusha
inc
repnz
adc
addr16
ss
out
xchg
pop
pop
leave
adc
lcall
cwtl
xor
psllw
int3
push
testl
out
gs
lods
loope
icebp
pop
bound
movsb
ljmp
xchg
mov
jo
jne
xor
jmp
lcall
data16
cli
rol
stc
dec
sbb
or
popf
ret
pop
jge
jle
mov
sub
lods
mov
jg
or
sub
push
paddsb
mov
lds
cmp
pushf
pushf
movsl
cmp
stc
aas
xacquire
repnz
lret
dec
outsl
cmpsb
pop
pop
icebp
lret
daa
push
mov
mov
enter
jp
faddl
cmp
and
cmc
inc
out
inc
mov
stos
jp
cs
sub
or
sub
aaa
mov
loopne
cmp
incb
ss
jne
sbb
ss
sahf
mov
dec
std
sbb
in
xchg
mov
scas
cmp
xor
mov
jno
lret
rorl
xlat
ret
lret
hlt
dec
push
xor
popf
sbb
cli
shlb
imul
dec
outsl
xchg
cmp
sarb
out
sbb
fldenv
bound
pop
lret
lret
xlat
pusha
ljmp
fnsave
rolb
cmp
pop
std
mov
push
add
xchg
adc
adc
scas
lods
cmp
mov
in
mov
bnd
clc
mov
xor
mov
aam
adc
sub
fcomps
mov
dec
int
pop
stos
cmpsl
dec
pop
subl
cltd
jge
dec
clc
into
mov
cmp
repnz
sbb
and
rcrl
and
xchg
stos
lret
out
sub
lods
leave
iret
gs
pop
lea
shl
dec
call
mov
fsubr
aam
pop
test
arpl
xor
insb
cmpb
push
or
xchg
out
imul
mov
ja
mov
lds
add
inc
or
ljmp
mov
int3
add
mov
call
cmp
rorl
mov
jmp
mov
daa
add
or
push
inc
dec
jecxz
sarb
pop
lahf
add
sbbb
divb
dec
jge
cmp
fstps
pop
add
lahf
xchg
cmpb
cli
cmpsl
jecxz
xor
sbb
pop
test
mov
stc
push
xchg
popa
sub
out
mov
adc
cmpsb
sti
rdmsr
push
popa
cmp
sub
sbb
mov
xchg
pop
inc
rcpps
imul
and
clc
cmp
idivl
cmp
push
pop
dec
lret
sub
jnp
xor
js
push
mov
adc
jl
mov
jle
sub
cmc
sub
lds
mov
mov
fmull
sub
sbb
mov
cmp
inc
aas
sbb
dec
push
test
std
cld
ret
aad
lods
mov
mov
and
jns
mov
add
aam
pop
mov
inc
imul
jg
pop
in
ljmp
dec
aas
insw
mov
sub
movsl
fimuls
mov
repz
jne
xchg
rcl
xlat
mov
add
lock
arpl
xchg
pop
xchg
adc
pop
xorl
pop
aas
sbb
out
sub
sbb
ljmp
push
lahf
or
push
jns
or
sti
and
enter
lods
cmp
popa
ret
jno
and
sub
data16
sbb
sub
inc
cmp
cmp
arpl
adc
testb
iret
call
jp
pop
clc
adc
inc
stos
jp
inc
pop
arpl
cmpsl
ficomps
or
push
push
inc
js
iret
sbb
push
outsb
test
cld
popf
xchg
mov
xor
jbe
call
add
inc
arpl
jne
lock
popf
sub
sarb
cmp
pop
mov
xchg
or
push
jb
js
mov
sub
push
and
pop
cmp
jg
bound
rsm
jnp
jg
inc
loopne
pop
jb
jg
imul
dec
jmp
xor
mov
into
lods
movsl
sub
or
mov
adc
mov
aaa
or
and
mov
lds
fwait
movsl
mov
popf
fildl
push
xlat
out
psubd
lods
xchg
rcrb
xchg
sbb
mov
mov
int
repz
push
jnp
popa
fidivrs
fcoms
and
and
sub
mov
mov
in
adc
pop
adc
sbb
push
mov
push
inc
std
flds
js
icebp
xlat
dec
js
sbbb
fs
jne
in
jge
pusha
inc
loop,pn
jmp
cmc
push
mov
hlt
fwait
sbbl
in
pusha
imul
movb
adc
outsl
fbld
cmp
cmp
sbb
and
cmp
dec
or
or
cwtl
push
xchg
mov
sbb
pop
jecxz
sbb
pop
insl
sbb
inc
sbb
pop
mov
cltd
push
mov
or
sbb
mov
add
ljmp
imull
adc
fldenv
adcl
mov
mov
shll
jns
cmp
jge
call
push
sbb
push
adc
dec
add
lahf
cwtl
lock
icebp
clc
ficoms
sub
mov
dec
inc
mov
dec
js
pop
add
cmc
and
mov
mov
mov
stos
pop
xor
fdivl
jp
inc
xchg
loope
mov
lea
rcll
jnp
jmp
dec
jl
bound
sahf
and
mov
fdivl
imul
xchg
rclb
rcrl
push
and
pop
sbbb
mov
sub
inc
push
incl
daa
gs
pop
arpl
add
pop
in
cmp
shrb
sub
shl
add
ret
stos
or
test
movsl
loope
xchg
aaa
mov
mov
jp
mov
push
adc
test
mov
mov
daa
mov
xchg
adc
add
lret
add
push
fs
out
out
sub
aad
mov
fwait
sti
sti
aas
jns
ljmp
and
pushf
shrl
pop
pop
scas
jle
lret
orl
push
mov
pop
mov
xchg
xor
pusha
dec
rorb
jbe
adc
mov
add
sub
mov
xadd
dec
and
cmovge
mov
imul
or
scas
jp
and
pop
scas
mov
es
jb
sti
aaa
jle
pop
sub
adc
loopnew
repz
lret
arpl
jg
adc
pop
adc
add
jae
rep
loop
adc
mov
lea
test
push
cmp
les
xchg
mov
aad
lahf
mov
pop
mov
negl
xchg
or
mov
sahf
stc
das
fs
loop
jg
cmp
or
xchg
cmp
push
or
mov
pop
idivl
mov
out
loopne
inc
dec
gs
lahf
shlb
sbb
sub
fwait
aaa
int
sbb
push
sbb
adc
jo
sahf
ret
scas
mov
xchg
jle
xchg
mov
pop
mov
lods
cmpsb
enter
lahf
fadd
ret
loope
pop
call
out
aam
sbb
cli
xor
mov
rcr
mov
mov
sti
leave
push
and
rcl
sbb
mov
call
stos
fs
clc
pushf
mov
xor
shll
lret
mov
sbb
imul
and
loop
xchg
adc
cwtl
pushf
and
pop
cmp
repz
adcb
ss
xor
fists
or
cmp
scas
or
xor
in
movsl
sarl
arpl
enter
dec
sbbb
push
push
popf
xor
lods
mov
xor
mov
mov
cmp
addr16
addb
out
test
xchg
push
lds
cmp
push
scas
and
lods
leave
jl
push
in
jp
mov
xchg
fidivs
sbbb
shrb
add
in
insl
ljmp
cmp
lret
mov
test
xor
int3
leave
insb
nop
ret
rolb
xchg
aad
adc
or
jne
leave
jb
popa
inc
leave
fnsave
xchg
gs
and
ljmp
pop
lret
shl
sub
add
jp
add
ljmp
and
cmpl
iret
in
in
xchg
mov
dec
xlat
add
pop
pop
jbe
xor
add
add
repz
jae
push
out
jl
inc
inc
subb
mov
stos
stc
push
fwait
into
xchg
and
jno
data16
sub
adc
dec
adc
jne
pop
mov
xor
leave
das
pop
imul
adc
adc
nop
dec
xchg
mov
adc
xchg
xor
fxch
imul
jle
enter
mov
mov
test
aad
jnp
sub
xchg
and
int
inc
sub
in
pop
lret
xchg
xor
mov
push
pushf
call
addl
xchg
xchg
jp
push
ljmp
popa
cmp
pop
repz
inc
out
cmp
sbb
inc
int
push
mov
clc
fstps
cld
dec
les
sbb
xchg
sub
data16
sbb
pop
cmpsl
mov
insl
int
xor
stos
and
cmp
imulb
pop
or
sub
out
sbbl
jns
sbb
loope
cld
stc
hlt
outsb
cmp
fwait
movsb
in
adc
in
and
imul
orb
and
je
add
lcall
clc
call
dec
stc
or
fstl
jl
pop
or
cmp
pop
jg,pn
add
ret
and
mov
sahf
outsl
jo
cmp
sub
nop
xor
dec
xchg
in
sbb
pop
scas
xchg
loopne
clc
lods
cmpb
jns
loopne
push
add
push
adc
dec
inc
inc
add
jo
imul
lods
and
adc
mov
movsl
and
test
repz
aam
test
pop
inc
mov
std
and
divl
xchg
iret
or
jmp
addr16
xchg
andb
sub
xor
push
mov
or
mov
mov
mov
lods
popf
fsubl
shll
lcall
add
mov
xor
icebp
mov
enter
xchg
or
mov
aaa
enter
jae
ss
scas
push
add
loopne
cs
jg
daa
add
adc
inc
movsb
int
test
mov
cltd
popf
dec
and
lret
adc
mov
and
fdivrs
jmp
push
mov
or
xchg
or
insb
clc
or
dec
cltd
fldl
sub
lds
loope
xchg
repnz
sahf
sbb
xor
xchg
in
iret
mov
xor
lods
and
jbe
test
sbb
inc
adc
dec
lock
ds
call
or
outsb
or
stos
xchg
xlat
fildll
cwtd
inc
dec
xchg
mov
adc
ret
cmp
mov
or
dec
dec
into
lods
cmp
rorb
pop
lock
jg
mov
and
lods
dec
lahf
stos
scas
jns
and
lahf
cld
inc
lods
or
pop
inc
cmp
or
dec
fst
jne
bound
lods
pop
mull
xchg
jg
adc
aas
subb
or
les
enter
inc
xchg
sbb
inc
std
cmp
adc
or
push
xchg
xor
scas
adc
ja
inc
mov
loopne
fcompl
mov
dec
jo
test
es
jno
fs
and
dec
push
adc
daa
jecxz
clc
fisubrs
addr16
mov
sub
jb
scas
cmp
xchg
sub
pop
xor
cmpsb
xchg
test
ret
sub
pmuludq
and
fucomp
outsl
or
mov
pop
jl
stos
imul
loop
inc
loopne
out
push
and
cmp
aas
mov
mov
dec
popa
push
sub
jecxz,pn
sbb
push
xchg
pop
jge
pop
cs
jbe
das
mov
pop
or
movsb
inc
aad
insb
rorb
jne
insb
outsl
sub
aaa
lcall
shlb
lret
xchg
popf
es
jp
divps
jmp
rcrb
rcrb
dec
popf
push
orb
sbb
push
imulb
bound
in
mov
rclb
lds
adc
subb
mov
out
mov
ret
mov
insl
mov
call
adc
and
gs
inc
mov
add
sbb
idivb
out
cmp
xchg
sbb
xor
fldcw
mov
pop
lret
or
jp
cmc
sbb
jno
adc
add
adc
dec
shll
xor
cmp
jns
add
aas
push
jl
sub
cltd
jnp
aas
loop
cli
sbb
out
sbb
mov
ljmp
lods
sarb
xchg
hlt
sbb
movsb
adc
and
cwtl
ja
dec
push
push
je
in
sub
dec
jle
add
push
mov
add
mov
outsl
andl
or
std
cs
out
popa
jge
pop
icebp
jnp
jp
sbb
sub
pop
mov
ret
inc
arpl
inc
xorl
mov
add
cld
jnp
add
mov
sub
push
push
in
push
xchg
shll
lock
sbb
jle
pop
andl
lods
enter
out
decb
stc
int
stos
mov
inc
int
in
xchg
in
pop
mov
push
jmp
push
sbb
js
pop
ljmp
mov
and
mov
mov
je
out
inc
lds
inc
mov
fwait
test
cs
das
test
out
mov
aas
pop
sbb
xor
jmp
popf
scas
mov
fstp
push
push
dec
sub
enter
ja
push
popa
adc
insl
sub
or
xchg
jecxz
add
jnp
adc
inc
xor
mov
mov
loope
lea
sbb
sti
xchg
sbb
jns
add
hlt
daa
inc
cmpsl
ja
test
cmc
mov
xchg
add
xchg
and
push
push
ficomps
in
pop
lahf
decl
test
adc
sub
sti
mov
fdiv
outsb
mov
call
adc
cli
cld
pop
lcall
xchg
xor
pusha
jle
mov
ret
out
outsl
nop
xchg
inc
scas
mov
mov
fcoml
clc
push
repnz
dec
xchg
fsubs
aas
dec
outsl
cwtl
adc
inc
out
das
sub
shrb
mov
lods
or
lock
out
adc
mov
adc
imul
mov
aam
inc
stos
loope
daa
inc
mov
stc
or
mov
dec
pop
dec
add
pop
mov
dec
insb
push
and
add
push
dec
out
cs
jmp
in
xchg
xor
push
fbld
scas
out
fsubrl
sub
fldt
ds
jge
aam
fdivp
xor
sbb
jp
mov
add
fidivl
cmpsb
loop
mov
mov
mov
rcr
xor
punpckldq
movsb
jmp
mov
sub
push
push
add
sub
aaa
push
mov
push
test
int
loop
mov
outsl
es
push
ss
repz
scas
dec
sbb
and
ljmp
rcrl
lods
dec
ficompl
dec
xor
jle
orl
repnz
or
in
xchg
int3
sbb
lock
cmp
aaa
dec
push
mov
cmp
aam
scas
mov
jb
adc
mov
arpl
shlb
dec
das
push
cmpsl
pop
iret
push
fsubrl
ret
or
fistl
pop
jae
ljmp
into
divb
enter
rcl
pop
dec
sbb
xor
cld
rorb
push
nop
cmp
sbb
rcrl
fildl
pop
gs
imul
jns
lcall
or
pop
mov
lret
mov
cmovs
inc
aaa
xor
test
fsub
imulb
mov
sub
dec
sahf
cmp
pop
test
xor
pop
movsl
push
int3
mov
xor
and
mov
test
mov
push
jnp
mov
popf
sahf
sub
sbb
xchg
add
and
mov
cwtl
jae
lods
or
xor
jmp
call
lcall
push
xchg
jecxz
shll
jb
inc
outsb
or
lods
hlt
lock
add
cmp
aas
jno
je,pt
dec
push
cs
sahf
sub
xchg
dec
jge
lret
xchg
mov
pop
xchg
xorb
loopne
push
xor
or
insl
add
and
cmc
icebp
add
and
xor
dec
adc
sahf
dec
xlat
ret
stos
nop
adc
inc
xchg
shll
adc
lret
clc
sub
push
xor
arpl
sbb
and
sbb
xchg
gs
push
sub
repnz
inc
push
das
push
fsubr
cmp
jl
aas
sbb
fiadds
int3
scas
sahf
sbb
dec
add
ja
pop
mov
mov
jp
sbb
iret
subb
jge
cmp
pop
mov
pop
cmp
mov
into
icebp
lods
lcall
inc
fs
pop
loope
into
xor
ret
xlat
cmp
mov
in
pop
adc
inc
movsb
mov
add
or
push
arpl
adc
sub
call
gs
xor
push
sub
lock
pop
ret
in
in
in
dec
push
mov
addr16
fwait
int
mov
sub
fisttpl
jle
xchg
jo
out
and
inc
mov
in
loope
lahf
bound
sub
pop
pop
cltd
insb
ss
out
imul
xchg
movsb
nop
cmp
inc
dec
cmpsb
cmp
sbb
scas
scas
dec
pop
lret
scas
sbb
mov
outsl
push
adc
inc
pop
mov
or
lds
fstl
pop
cmpsl
out
mov
test
repnz
test
mov
mov
push
xlat
sbb
mov
pop
fidivl
push
mov
mov
aas
enter
sub
dec
and
xor
adc
cmp
lahf
ret
fiaddl
dec
inc
jne
pop
sub
dec
cmp
push
inc
test
mov
xchg
fdivs
aad
aam
adc
cmp
sub
scas
cld
arpl
xchg
js
pop
in
adc
cld
fcoml
cmc
xor
push
sub
ret
push
jmp
mov
rclb
daa
pop
notl
lcall
adc
dec
add
loope
inc
sahf
sbb
scas
and
fs
sub
pop
adc
pop
divl
cmp
sub
sbb
pop
lock
adc
rcll
mov
mov
xor
pop
gs
pop
in
add
out
rorl
cmp
outsl
mov
in
dec
gs
push
popf
loop
ror
mov
push
imul
gs
cs
lods
in
fdivrp
mov
shlb
int3
jge
fwait
adc
je
mov
loopne
js
gs
cwtl
mov
xchg
lret
loop
fisubrl
insb
notb
insl
cmp
add
mov
cmpsb
jmp
cmp
ret
in
lea
enter
test
jmp
sbb
jns
shl
pop
sbb
fisttps
and
jne
je
push
lods
out
lret
and
mov
cmpsb
icebp
jmp
imul
cli
adc
testl
cmp
into
insl
mov
arpl
arpl
mov
dec
fcomi
data16
mov
sub
dec
aas
jb
dec
loopne
add
lahf
adc
inc
es
lcall
jp
sub
fiadds
inc
mov
dec
add
in
addb
mov
mov
xchg
std
xchg
xchg
jb,pn
mov
jmp
ss
sbb
add
ljmp
repnz
sti
cmp
test
int
into
jnp
jbe
mov
push
push
mov
inc
aaa
mov
jns
std
push
adc
jmp
xlat
ljmp
cs
pop
vdivps
rcrb
lret
aam
xchg
ret
je
cwtl
loope
mov
sub
sti
ret
push
sub
inc
jnp
dec
in
shll
mov
icebp
insl
mov
imul
adc
push
mov
scas
insl
loopne
push
and
jae
lcall
pop
push
imull
aas
outsl
and
leave
sbb
add
jnp
inc
add
inc
sbb
inc
repnz
pop
pushf
xchg
jmp
add
repz
hlt
insl
pop
and
mov
dec
mov
sbb
and
andb
cli
call
add
rcrb
das
inc
jno
pop
mov
cld
jp
shll
loope
repnz
leave
jae
inc
loopne
daa
add
mov
into
xlat
in
mulb
lret
jge
mov
lods
cmp
push
xchg
dec
daa
mov
or
dec
scas
pop
xchg
imul
out
cmpsl
xor
jl
leave
adcb
les
stos
sar
mov
xchg
xchg
pop
push
rcl
jne
xor
lock
cld
jge
fsubl
sahf
movsb
in
push
loop
inc
push
out
push
cmpsb
gs
std
or
jecxz
lods
add
xchg
or
call
test
xchg
mov
add
repnz
outsb
pop
sub
in
or
aam
sub
nop
sub
xchg
mov
mov
mov
addr16
push
jecxz
fstpt
hlt
jge
mov
mov
inc
pop
mov
ss
xchg
iret
lahf
sbb
mul
mov
pop
or
mov
in
mov
out
mov
insl
sarb
jle
divl
adc
add
aaa
insb
dec
mov
dec
dec
imul
clc
add
pop
xlat
cwtl
cmp
cmp
icebp
jns
data16
hlt
xor
aam
repz
xor
mov
subb
mov
push
pop
cmpsl
add
xor
mov
int3
sbb
lahf
lahf
leave
int3
dec
cmp
sbb
mov
lcall
push
roll
sub
mov
or
xchg
fcos
lret
push
arpl
inc
es
xor
repz
int3
repz
or
cmp
dec
gs
psrlq
aad
xchg
filds
or
lret
jnp
cmp
push
pop
adc
fmull
inc
js
cmpsl
mov
cmp
outsb
xchg
sub
jne
or
and
and
fs
aas
mov
lods
int
movsl
add
push
cmp
lret
mov
dec
jne
mov
idivb
jp,pt
lds
push
roll
adc
sbb
movsl
test
mov
int
jle
cmp
test
mov
cli
ret
in
and
push
and
add
cwtl
cmp
and
sbb
js
insb
inc
sub
in
add
ret
and
sbb
lods
inc
stos
stos
popf
mov
cli
lretw
dec
cli
fsubs
int
dec
or
dec
das
dec
scas
mov
jg
nop
test
hlt
aaa
xchg
mov
fists
jbe
sbb
adc
in
ret
movsl
xchg
inc
or
and
in
xchg
out
mov
jge
pop
mov
push
fbstp
lods
rcll
jge
cmp
test
lods
xchg
imul
movsl
fsubs
or
lret
fcomp
xchg
ret
mov
addr16
rclb
aaa
adc
mov
inc
mov
pop
stos
mov
dec
into
xchg
mov
aas
stos
mov
mov
or
xcrypt-cfb
cmpsl
and
push
mov
add
jbe
ja
into
push
test
cli
hlt
cmp
enter
inc
jnp
cmp
cmc
jecxz
lea
clc
sbbb
xor
in
and
cmp
pop
orl
stos
stos
fnstenv
std
fldl
ljmp
lret
sbb
pop
stos
sbb
mov
jb
jmp
in
arpl
xor
dec
jecxz
mov
shr
cli
jle
xor
mov
das
xchg
sub
inc
ds
push
push
adcl
and
scas
xor
push
pushf
or
adcb
jecxz
daa
lods
repz
outsl
shlb
subl
sbb
shll
aam
sarb
fbld
xor
xchg
out
mov
rorl
jae
ret
arpl
lea
pop
push
adc
dec
fldl
in
pop
nop
mov
int
cmp
out
outsl
push
add
xchg
pop
xlat
inc
cmp
push
lret
or
mov
mov
test
enter
xor
and
insl
adc
inc
shlb
cltd
xchg
mov
push
pop
cmpsl
imul
mov
hlt
or
push
jbe
and
lret
xchg
pop
shlb
ja
repnz
jae
scas
lds
sub
mov
sub
sbb
mov
push
xor
loop
ljmp
lcall
into
dec
adc
rclb
sbb
and
in
aaa
xchg
xchg
loopne
add
or
add
stc
mov
sbb
pusha
clc
sub
aaa
inc
mov
shr
ja
cmp
rcl
mov
aam
jge
xchg
popa
cld
and
out
scas
push
xor
mov
mov
jae
cwtl
xor
inc
and
sbb
int3
dec
inc
xchg
repnz
pop
mov
sbb
xchg
in
jg
xor
mov
jle
outsb
mov
lret
insb
dec
sbb
popa
add
jg
idiv
sub
divb
xor
xlat
movsl
and
lret
dec
xchg
dec
scas
or
push
pop
call
push
add
cmp
out
aaa
jmp
fidivrl
int
pop
cmp
cvttps2pi
loop
mov
addr16
push
and
cmp
test
pop
cld
sub
jnp
lods
push
add
or
fwait
nop
movsl
pop
ret
inc
sbb
loopne
or
dec
pusha
lahf
jns
mov
lahf
mov
or
test
bound
sbb
cmp
mov
push
loopne
cli
sub
mov
sbb
cmp
sub
jp
dec
pop
iret
aas
enter
sub
mov
xchg
adc
jne
aas
scas
jp
pushf
fsubs
lods
add
jb
cltd
popa
lea
dec
lahf
adc
fnstenv
jb
xlat
popa
mov
mov
fsubrs
mov
daa
xor
push
in
dec
cmp
cmpsb
jecxz
repnz
sbb
or
sub
inc
ds
cli
stc
pop
int3
push
sahf
jo
push
stc
inc
std
dec
leave
xchg
cmp
mov
movsb
mov
mov
cld
push
jae
pop
and
test
mov
mov
imul
sub
clc
hlt
inc
push
inc
sub
loopne
mov
fbld
lret
fnstenv
ss
pop
icebp
lock
add
lcall
xchg
adc
sub
sbb
out
cltd
pop
mov
andb
pop
cmc
jbe
shll
dec
adc
popf
test
add
mov
add
or
nop
scas
arpl
andl
cmp
movsl
hlt
add
xor
jo
inc
and
arpl
or
jl
insl
jo
daa
push
jecxz
ror
fstl
lods
call
pushl
cmp
xchg
jo
hlt
loope
sub
jg
jb
jno
cmpsl
jle
lock
cli
jg
fdivs
fidivrl
and
aam
cld
stos
xchg
aas
xor
pop
mov
test
cli
mov
or
loop
ds
xor
sub
std
cmp
mov
jns
pop
sbb
js
mov
lea
ret
mov
cltd
dec
xor
aaa
in
sbb
incl
lds
inc
lret
dec
aaa
jae
mov
adc
jp
jp
xor
adc
lret
rolb
leave
fnstenv
mov
aas
cwtl
out
scas
fwait
dec
sbb
aas
out
push
mov
pop
jge
addr16
stc
jnp
hlt
push
fsubl
and
in
xor
jp
dec
adc
jecxz
loop
lods
xchg
inc
das
sahf
sub
inc
jp
dec
push
pop
mov
fcoms
lods
xor
in
in
ud0
jno
lods
sarb
sub
insb
mov
push
or
inc
sarb
clc
insb
push
inc
cmp
mov
in
bound
aaa
xor
fidivrl
ret
jnp
call
pop
subb
js
fst
in
sbb
int3
mov
add
jne
dec
int3
aaa
mov
call
push
cmp
mov
repnz
xchg
out
es
cmp
in
mov
push
aam
or
in
jae
shr
mov
pop
jns
test
ljmp
lahf
or
je
dec
arpl
scas
and
popf
sbb
aam
call
push
xchg
xor
arpl
shlb
arpl
sbb
adc
or
mov
ljmp
popa
or
adc
xchg
push
inc
fwait
inc
dec
popa
cs
dec
rep
mov
call
lcall
xchg
adc
int
xchg
ficompl
int3
fwait
ret
int3
fwait
xchg
sbb
pop
jle
lcall
pop
add
cmp
or
out
test
pop
push
xchg
dec
add
je
lods
js
addr16
call
adc
mov
fldl
mov
popf
popf
cmp
sbbl
push
ja
sbb
pop
scas
and
jmp
or
xchg
sbb
clc
pop
jae,pn
in
loope
or
lret
cmp
in
addr16
outsb
and
insl
sar
jbe
add
cwtl
jne
lahf
rorl
xorl
jo
inc
sbb
lods
icebp
mov
sbb
mov
rolb
sub
out
cmp
xor
adc
add
pop
jp
repz
add
jbe
pop
xchg
fadds
mov
enter
or
les
sub
imul
mov
inc
movsl
insl
pop
dec
jnp
shlb
sbb
mov
push
fnstsw
sbb
sub
testl
repz
repz
add
inc
loope
mov
stc
loope
jg
adc
adc
sbb
jns
xchg
sbb
adc
mov
push
imul
fs
push
xor
aam
and
mov
ds
outsl
jo
daa
js
dec
js
movsb
dec
cmp
cmp
mov
mov
idivl
pop
pop
and
mov
xlat
pop
repnz
aad
fucom
inc
xchg
cmp
mov
sbb
dec
aas
inc
mov
pop
fisttpl
push
push
push
stc
shr
fidivs
sbb
mov
xchg
mov
pop
push
ja
outsl
jmp
and
and
dec
sti
jmp
cwtl
aam
jbe
lds
fstpl
pop
add
inc
cmp
or
mov
ret
aad
sub
mov
in
sub
enter
add
fldcw
xlat
out
movsl
fsubl
scas
fcom
xchg
es
sar
xor
insb
out
movsb
jne
movsl
inc
cmp
mov
hlt
cmp
inc
das
mulb
lock
mov
imulb
add
adc
fcmovnu
fadds
mov
xor
xchg
dec
inc
and
mov
lahf
xchg
sub
mov
cmp
mov
mov
lods
ds
pop
popa
or
mov
lahf
dec
repz
scas
push
and
hlt
push
std
lock
mov
mul
sbb
test
xchg
fnsave
mov
sub
sahf
mov
sbb
and
dec
scas
xlat
int
jae
ja
stc
call
or
scas
xchg
jmp
and
mov
outsl
cld
add
dec
shl
mov
mov
sub
xor
leave
mov
and
enter
cmp
sub
jb
push
pop
divl
xorb
cmp
sub
xchg
push
jg
testl
es
shrb
loopne
pop
stos
pop
test
in
xor
xchg
dec
sbb
mov
inc
mov
pop
sub
sub
lcall
mov
adc
in
shr
loop
xor
fsubrs
add
fucom
lahf
stos
fistl
outsl
imul
pop
outsb
pop
loop
test
std
sub
imul
sbb
cwtl
aam
jno
adc
mov
popa
pusha
cmp
aad
test
sub
les
stc
popa
pop
daa
testl
sbb
inc
movsl
hlt
movsl
cmp
mov
inc
dec
ja
xor
ss
in
dec
fcoml
sahf
div
jmp
ds
add
xchg
mov
sti
push
mov
push
mov
mov
hlt
mov
sub
rcrb
push
xchg
sub
test
jg
test
out
push
mov
dec
jl
ret
xchg
cmpsl
dec
push
loop
and
rcr
adc
ret
rclb
loop
jmp
mov
adc
int3
cmc
or
mov
adc
das
out
add
cmp
cmp
xor
push
es
mov
int3
pop
into
and
adc
cmc
cmc
punpckhdq
pop
popf
gs
xor
sub
cmpsl
data16
sub
cmp
into
xor
fiaddl
or
mov
jno
xor
data16
push
pand
push
push
push
push
sub
cmpb
call
lcall
pop
xchg
pop
cwtl
in
sbb
in
jne
sbb
add
imul
or
push
xchg
inc
repz
add
icebp
loope
xchg
inc
jno
inc
inc
push
xchg
call
les
push
sub
arpl
loopne
mov
jg
xchg
sarb
dec
xor
clc
addr16
push
inc
cmp
lidtl
hlt
xchg
in
inc
xchg
and
cmp
and
jg
push
mov
ja
lods
cmp
aaa
insb
pusha
push
cmc
das
aas
fwait
outsb
push
stc
push
test
push
jae
dec
push
push
jnp
jmp
sbb
rorb
pop
aaa
inc
adc
stos
push
mov
imul
pop
mov
lahf
bnd
dec
add
xchg
xorb
mov
cmpsl
jnp
jns
addr16
cmp
push
push
neg
aad
gs
movb
and
jle
pop
adc
repnz
or
jns
into
jecxz
mov
jg
out
jo
into
popf
dec
pop
lahf
lret
ja
stc
inc
faddl
xchg
adc
xor
xlat
in
cmc
mov
fsubl
push
rol
loopne
sbb
jb
jmp
adc
ds
fidivl
daa
cmp
jl
or
in
sub
ret
js
lods
incl
jnp
cmpsb
fincstp
out
sub
xchg
jecxz
sti
jp
pusha
adc
add
mov
cmp
les
cwtl
insl
addl
stc
shrl
and
mov
sub
cmpsb
add
je
mov
or
repnz
lods
movsl
dec
and
mov
cmp
lods
orb
icebp
inc
aas
dec
shll
scas
pop
mov
jecxz
mov
cmp
pop
push
mov
pop
xchg
sub
xchg
rcrb
and
mov
sbb
inc
mov
test
fstpt
push
push
jbe
fisttpl
scas
xchg
inc
iret
xor
lods
outsl
mov
push
xchg
testl
inc
or
inc
adc
aaa
jnp
loopne
loop
andl
stos
add
stos
inc
sbb
mov
cmp
xchg
xchg
push
lock
jmp
mov
pop
or
mov
lods
add
mov
jb
lret
into
sub
ret
mov
lock
fs
cmp
imul
xchg
or
outsl
mov
mov
pop
rorl
mov
add
rcll
stos
out
and
outsb
jne
in
stc
cld
popl
push
in
test
xor
dec
outsb
dec
loope
inc
popf
es
or
xchg
dec
shlb
and
mov
imul
adc
sub
mov
sbb
icebp
dec
sti
pop
push
mov
push
mov
dec
cmp
in
cmpsl
sbb
insl
movsb
int3
movsb
cmp
out
loope
movsl
mov
dec
shrl
xchg
push
pop
mov
mov
or
sbb
xchg
mov
sbb
jg
push
push
and
iret
inc
sti
push
aas
dec
enter
sbb
dec
mov
jno
add
jle
or
aaa
cmp
lret
lods
fstps
cmc
pop
daa
rcrl
ds
or
pop
mov
idiv
pop
lea
les
pop
mov
lret
cmp
jo
iret
out
ja
fs
insl
or
cmpsl
pop
in
jnp
cmp
es
jne
cwtl
fldz
push
loop
xchg
mov
jmp
test
pop
jge
jnp
xchg
pop
into
sbb
sarl
clc
cmp
push
movsb
sub
jo
xchg
push
mov
xchg
pop
pop
or
test
sbb
fcompl
icebp
mov
mov
jne
xor
mov
inc
ja
rol
lahf
popa
jle
aam
xchg
cmp
jnp
mov
sbb
cwtl
sub
mov
dec
cmp
or
xor
ret
mov
jno
addb
cmpsl
rorl
jb
les
xchg
inc
loopne
cmc
mov
aas
pop
pusha
fdivrp
adc
in
push
loopne
addr16
aas
cwtl
les
mov
inc
mov
sbb
add
cmpsb
add
lods
push
jg
pop
nop
sub
push
or
xchg
repz
lods
dec
cmpsb
dec
fistpll
jno
sbb
adc
add
mov
push
cmpsb
aas
lea
add
adc
mov
xchg
mov
outsb
fs
mov
insb
adc
das
jns
jg
js
lcall
add
push
push
stos
fwait
add
popa
sarb
mov
mov
dec
fisubl
ds
mov
out
sbb
test
fistpl
orb
add
daa
mov
and
bound
ljmp
repnz
lods
cwtl
jbe
and
and
sahf
jmp
btc
pusha
sbb
mov
add
out
nop
ljmp
out
ret
xor
jno
call
push
cli
insl
les
cmp
stc
xor
cmpsb
dec
mov
mov
pop
leave
add
icebp
imul
and
pop
cmp
and
mov
add
or
iret
repz
jb
jne
repz
cmpsl
std
pop
and
mov
jle
in
mov
dec
inc
out
adc
nop
sbb
je
stos
test
cmp
jae
jg
jp
lods
sbb
shlb
sub
adc
pop
adc
sub
stc
cmp
fadds
push
movsb
xchg
pop
pop
sbb
jns
pop
nop
sbb
mov
stos
std
inc
and
add
mov
call
test
pop
les
inc
or
out
ja
cli
lret
pop
std
adcb
das
xor
cs
push
xchg
je
das
adc
daa
cmp
dec
cwtl
mov
mov
xor
imul
mov
or
dec
adc
test
dec
lods
int
addb
ret
jmp
mov
test
or
or
xor
inc
cs
imul
mov
xchg
rorl
pop
pop
push
dec
push
aas
mulb
mov
insb
jo
fistpl
mov
out
mov
ds
dec
mov
jb
iret
rclb
inc
aas
mov
mov
inc
aaa
icebp
xchg
adc
cmp
sub
das
push
jne
sub
cmc
std
cli
sbbb
incb
sub
xchg
fpatan
rcrb
scas
mov
sahf
scas
clc
or
mov
fucomip
mov
cmpsl
cmc
orb
or
scas
lahf
add
pushf
dec
mov
and
mov
dec
sti
sub
cwtl
cmc
lds
inc
imull
push
movsb
pop
jge
mov
lcall
scas
fstl
cmp
ja
out
pushf
sbb
push
jbe
add
in
sbb
adc
lret
stos
mov
imul
insb
divb
dec
push
push
cwtl
mov
mov
loopne
neg
adc
xor
iret
call
push
addl
sti
adc
xchg
push
arpl
and
xor
adc
aad
pop
xor
hlt
aam
adc
jno
dec
push
jne
push
mov
add
xor
in
je
jl
and
xchg
sti
jmp
add
aas
pop
js
push
aas
jg
sub
stc
outsb
leave
je
hlt
mov
push
imul
pop
arpl
daa
jg
add
sub
cli
arpl
pop
jp
jl
stos
testl
outsb
mov
mov
ret
push
mov
push
adc
mov
pop
sti
call
aad
mov
sbb
loop
shll
lahf
dec
jmp
adc
cltd
dec
test
out
dec
pushf
pop
jecxz
out
pop
je
popa
insl
push
add
cmpsl
mov
jp
ja
icebp
xchg
hlt
mov
sbb
mov
in
and
push
sub
mov
std
icebp
xchg
and
inc
xchg
or
hlt
push
sahf
or
ljmp
dec
add
rol
in
cld
mov
sbb
adc
test
dec
xchg
sub
mov
icebp
aaa
idivl
aas
cmp
enter
repnz
xor
lahf
xor
jmp
push
mov
cs
ja
test
ret
mov
movsl
rcll
mov
lahf
pop
mov
pusha
cmp
add
sahf
ja
in
adc
jge
imul
mov
ljmp
into
dec
mov
jno
and
lods
and
loope
out
mov
cmp
les
and
aas
in
pop
cmp
das
shlb
fldl
out
mov
aad
xor
dec
cli
ljmp
pop
addr16
xor
sbb
sub
scas
movsl
mov
dec
fcmovbe
cli
push
scas
mov
push
and
bound
push
mov
pop
lds
hlt
aam
pop
inc
mov
push
add
icebp
pop
xchg
lret
xchg
aas
dec
push
imul
leave
sbb
dec
mov
mov
nop
sbbl
dec
push
mov
scas
sbb
adc
addb
push
jp
lea
in
loope
es
daa
in
and
jns
hlt
jns
jb
and
ds
xchg
mov
jmp
dec
es
push
add
pushf
lods
sub
mov
jecxz
mov
cmp
into
mov
sub
mov
mov
clc
rorl
iret
inc
cmp
subl
sbb
dec
mov
xchg
adc
push
dec
cmp
arpl
mov
hlt
or
xchg
pop
mov
arpl
jno
pop
loopne
shll
sub
mov
push
mov
aaa
and
sbb
cld
xor
inc
pusha
in
clc
jb
mov
xchg
mov
inc
inc
jne
cmpsl
push
out
xchg
jp
mov
mov
mov
fists
pop
mov
jle
xor
jae
call
imul
xchg
cmpsb
or
jbe
movsl
adc
adc
mov
dec
test
mov
add
out
push
xchg
jne
sti
cltd
push
mov
pop
cli
mov
iret
mov
xor
int3
stos
or
jg
mov
dec
lods
in
out
jnp
or
mov
or
sub
aas
cmpb
mov
mov
loope
jbe
mov
jno
xor
xchg
dec
outsl
adc
aas
imul
pop
sbb
outsb
mov
addr16
sub
mov
leave
repnz
int3
inc
jp
aam
loopnew
mov
dec
add
jp
pop
cs
lahf
sbb
stc
xchg
shrl
jmp
mov
and
subl
cmp
test
cmp
adc
fcoms
pop
and
test
mov
cmpsl
pop
sti
jecxz
jns
inc
push
aas
mov
jns
aam
cld
dec
loope
arpl
pop
lahf
enter
xchg
lret
push
add
xchg
xlat
pop
test
fcmovu
enter
push
das
int3
fstps
arpl
pop
sub
fsts
jne
jns
mov
jne
jg
xchg
cltd
adc
adc
lcall
rclb
or
mov
mov
popa
dec
sbb
out
push
xchg
fcmovb
in
dec
and
mov
add
cmp
xor
push
dec
jns
fucomi
add
stc
mov
leave
out
mov
pop
mov
push
adc
icebp
repz
andb
js
or
jns
mov
hlt
addb
fistpll
andb
and
or
xor
add
inc
inc
inc
pop
cmp
push
divl
repz
cmp
adc
es
mov
xor
cmc
push
cmc
das
aam
pop
adc
jne
addb
dec
sbb
jae
pop
and
jno
lea
mov
in
mov
in
add
mov
inc
xchg
mov
pop
pop
jo
mov
cld
ret
xor
jmp
add
lock
mov
mov
xor
or
imul
xor
pop
ret
pop
std
iret
sarw
fbstp
mov
sub
outsb
inc
mov
fdiv
out
imul
xorb
out
in
mov
adc
lea
in
test
repz
stos
pop
aaa
adc
and
filds
push
fwait
dec
dec
push
jp,pn
test
xor
test
loopne
mov
xchg
lcall
fisubrs
fwait
lcall
xchg
add
jp
cmp
sub
mov
popa
lods
xor
xor
mov
inc
mov
mov
jle
fcomps
loopne
jg
ds
inc
mov
pusha
ljmp
stos
mov
jle
scas
mov
aad
adc
iret
fisubrl
stc
xchg
mov
push
add
in
stc
sbb
push
xor
fcomp
lods
notl
lret
scas
pop
push
pop
cmp
iret
nop
jae
push
into
xor
inc
pop
scas
mov
mov
pop
add
scas
pop
push
addl
sar
lods
cli
in
fstl
fwait
or
ja
mulb
sbb
stos
dec
mov
enter
stos
jg
cmp
fwait
loope
sbb
sub
lcall
sbb
fcoml
sar
cltd
movsb
cli
xor
add
mov
dec
shl
out
sub
inc
idivl
repnz
lea
ss
clc
bswap
inc
imul
mov
xor
dec
imul
xor
inc
jne
shlb
ss
pop
xchg
mov
sbb
and
cmc
rclb
jle
lret
sbb
jo
push
insl
fnstcw
sub
sub
lret
ret
outsl
outsl
jbe
inc
mov
outsl
inc
jne
mov
mov
push
jmp
icebp
dec
sub
cld
fstl
ficompl
loopne
inc
jo
sub
lods
mov
fcom
stos
movsb
ficompl
xor
pop
mov
inc
mov
sub
jno
fiadds
dec
mov
mov
mov
push
jle
mov
mov
xchg
insl
gs
les
jmp
dec
mov
push
mov
push
fisttpl
js
sbb
jb
pop
loop
pop
mov
push
bound
jp
popa
xchg
sub
sbb
scas
sbb
clc
pop
xlat
mov
stc
outsl
lods
xchg
ss
call
cs
sub
imul
ret
mov
fstpt
sub
enter
and
sbb
adc
cmp
call
fsubrl
pop
call
inc
xor
aad
pop
lods
adc
shlb
hlt
in
popa
jne
repz
mov
xchg
jl
pop
jne
cmp
mov
pop
sub
push
push
imul
jmp
adc
xchg
frstor
xor
push
mov
scas
stos
lcall
ds
mov
in
adc
insb
xor
mov
loop
dec
js
sbb
xlat
and
mov
lcall
nop
mov
or
mov
mov
lret
lds
imul
data16
xor
sbb
jge
addr16
lcall
jnp
dec
adc
push
daa
push
jns
pushf
insl
in
xchg
jnp
scas
sbb
sub
mov
mov
xchg
mov
insb
add
ret
icebp
leave
jo
sbb
sbb
stos
test
cmpsb
cs
push
mov
add
xlat
mov
out
mov
add
test
sarl
sub
lods
jl
xor
pop
lcall
add
mov
subl
xchg
xor
mov
push
sbb
clc
sub
jns
pop
hlt
add
mov
cmc
adc
dec
cmpsl
mov
lret
mov
sub
adc
fs
or
call
ret
in
shrl
arpl
xchg
fbstp
xor
mov
not
andb
ret
lea
xchg
out
cmp
shll
test
movsl
aaa
or
dec
rolb
and
enter
jmp
jb
sbbb
mov
sbb
fwait
jmp
pop
arpl
add
call
out
mov
pop
ret
addr16
dec
jae
xlat
pop
sub
jne
inc
xor
mov
cmp
mov
gs
in
outsb
imul
inc
dec
jmp
dec
xor
xor
xor
or
loopne
pop
inc
jbe
jnp
test
adc
xlat
push
pop
inc
bound
adc
jne
push
frstpm(287
xchg
movsl
cmp
jb
enter
addr16
sbbb
inc
out
lret
xor
xlat
xor
adc
mov
out
dec
dec
sar
ja
shlb
sahf
lahf
ficoms
or
dec
push
inc
sbb
cmp
jmp
jg
addl
cmp
cmp
jmp
mov
push
mov
lea
out
cli
aad
inc
pop
mov
lahf
and
movsl
loop,pn
mov
nop
idiv
xor
jns
pop
cmp
add
push
xchg
lods
fstp
cltd
mov
push
jnp
mov
dec
fldt
jae
test
loop
add
jne
mov
stos
mov
push
dec
adc
aad
xchg
mov
xchg
mov
test
pop
icebp
push
cmp
repnz
rcrl
add
bound
cmp
into
insb
or
sahf
jnp
mov
inc
pop
lds
icebp
sub
into
lods
shl
mov
dec
imul
push
xor
rcrl
add
je
leave
xor
xor
in
jle
int3
cmp
cmp
loopne
push
jmp
pop
xchg
jl
es
xor
xchg
les
cmp
add
add
pop
rorb
push
mov
fsubrl
dec
jae
loop
cli
adc
cmp
adc
jne
and
outsl
test
mov
ficoml
xchg
mov
loopne
xor
adc
cmpsl
xor
mov
rolb
divw
aam
cmc
ret
jno
imul
cmc
mov
or
xor
and
or
add
je
fs
call
int
mov
pop
lods
js
test
cmp
inc
les
lahf
xchg
cmc
fldcw
outsb
xchg
repz
mov
mov
push
in
sbb
data16
stos
fs
lret
add
incl
cmp
or
outsb
test
pop
cmc
xchg
or
xor
sbb
in
sub
cmp
fwait
mov
sbb
sbb
lds
daa
imul
fists
add
sbb
cmp
and
outsl
jnp
pop
outsb
pop
dec
outsb
xchg
inc
mov
mov
jle
add
in
adcb
xor
push
push
stos
fnsave
pop
imul
lods
xchg
clc
sbb
iret
je
pushl
jno
out
xchg
sbb
gs
mov
test
fwait
adc
cmc
adc
in
cmp
cwtl
and
movsl
xchg
fstps
mov
push
bound
push
cmpsl
xor
sub
xor
mov
test
xor
out
out
mov
gs
ret
shll
jo
loope
outsb
aad
out
pop
pusha
mov
push
andl
dec
in
xchg
shlb
sbb
dec
movsb
mov
loopne
xchg
lea
enter
add
pop
outsl
mov
lods
lea
sub
mov
xor
sub
and
jnp
sbb
jb
out
mov
mov
mov
sbb
popf
outsb
jns
mov
add
or
cmp
cltd
jmp
mov
xchg
fldenv
stc
sbb
xchg
mov
dec
xor
or
test
test
pop
sbb
mov
lds
add
movsl
lahf
sbb
sbb
push
add
les
stos
sub
out
jo
jge
jnp
xchg
mov
adc
xchg
dec
push
clc
and
js
or
cmp
loop
nop
rcr
bound
daa
xchg
int3
cli
repz
rorb
stos
mov
push
fists
das
sbb
jecxz
out
rcll
shrb
popf
push
adc
fisubrs
shl
fisubl
xor
and
dec
push
mov
popa
push
ret
pusha
loope
fs
shrb
jnp
cmp
push
loope
sub
jbe
es
mov
mov
cmp
pushf
subb
sub
incl
roll
pop
fstl
sahf
fldl
dec
xchg
test
int3
imul
and
cmp
mov
pop
idivb
outsl
les
pop
or
lret
push
mov
mov
js
mov
out
cwtl
enter
mov
cmp
scas
xor
nop
sbb
stos
pop
out
pop
sbb
repz
popf
jle
imul
push
incb
push
call
or
add
pop
xchg
mov
inc
in
scas
sbb
iret
mov
push
flds
adc
sbb
out
push
inc
mov
mov
or
enter
pushf
stc
loop
lret
pusha
xor
in
xor
jecxz
leave
inc
int3
hlt
sbb
push
testb
bnd
mov
pop
and
xor
pusha
mov
add
mov
ficoms
out
and
fucompp
pop
pop
and
psubusb
dec
popa
daa
ffreep
cmp
inc
jnp
sub
mov
sub
or
mov
icebp
orl
pop
cmp
das
pop
and
or
ficoms
or
mov
mov
mov
int
xor
mov
in
dec
test
mov
inc
mov
jp
mov
lds
mov
mov
negl
ficoml
xchg
or
test
into
mov
packssdw
adc
push
xchg
mov
js
inc
pop
xor
pushf
push
sbb
cli
push
dec
pop
stc
ficomps
sbb
ljmp
sbb
clc
loope
ret
test
int
das
jo
mov
bound
push
add
lcall
das
inc
and
cmp
sbb
popf
pop
mov
ja
mov
shll
in
scas
mov
pop
adcl
mov
xchg
mov
cmc
cmp
lea
cmp
in
out
aas
lret
push
fwait
or
xchg
xchg
add
mov
fisubs
lret
and
cmp
push
sahf
and
mov
mov
enter
add
popa
sbb
pop
sub
cmp
rcrl
loopne
pop
and
xor
dec
jl
mov
sbb
fs
xchg
adc
sbb
jmp
sub
jmp
jmp
push
pop
sub
push
jbe
or
sbb
sahf
add
rorb
jmp
out
xchg
lcall
mov
sbb
sti
cli
push
stos
sub
xor
loopne
mov
and
jecxz
jne
jae
popa
nop
lock
aaa
fistpll
xlat
div
mov
enter
dec
dec
and
addr16
shrb
cmp
daa
shr
mov
rcrb
sbb
mov
dec
jl
es
cli
icebp
add
test
clc
in
jo
aas
fincstp
scas
loop
and
dec
xlat
in
into
cli
bnd
sbb
popa
fistps
test
mov
mov
jg
iret
inc
sahf
jl
inc
xchg
lret
adcl
sub
sti
jo
out
jbe
xor
icebp
stc
adc
fiaddl
jo
scas
cmpsb
popa
sti
inc
sbb
inc
xchg
lcall
fidivrl
add
xchg
es
pop
inc
xchg
cmp
jbe
add
fidivrl
sbb
inc
std
out
repz
roll
hlt
int3
mov
aaa
jle
mov
mov
mov
mov
mov
sub
mul
sbb
mov
pop
jp
lock
and
jg
call
dec
jg
cwtl
shll
pushf
nop
mov
mov
lea
faddp
pop
mov
xchg
lret
mov
sahf
dec
sahf
jb
cmpb
clc
push
ja
adc
and
pop
lret
ret
adc
mov
add
xchg
dec
push
push
into
and
fidivs
or
mov
in
adc
mov
pop
add
repnz
arpl
sbb
lcall
push
and
scas
adc
inc
jae
test
cwtl
stos
adc
xor
movl
add
cmp
ret
xchg
dec
cmp
inc
repnz
test
add
out
push
xchg
adc
jmp
jecxz
push
sbb
ret
icebp
testb
inc
inc
rcrl
dec
das
cmp
and
adc
inc
jecxz
scas
mov
repnz
aaa
imul
jno
push
mov
xor
pop
push
lds
rcrl
adc
test
inc
lret
movsb
inc
xchg
pop
adc
mov
dec
dec
lahf
movsb
mov
sbb
icebp
icebp
push
inc
es
aaa
jb
jb
jno
inc
sarl
adc
fwait
xor
pusha
or
push
adc
add
adc
adc
push
testb
ljmp
call
loop
and
lret
lret
lcall
push
flds
decb
lea
mov
imul
ja
xor
mov
mov
daa
rcll
es
push
scas
push
mov
fs
movsb
sub
aad
sbb
ret
lret
inc
sbb
lcall
imul
cmpsl
cmp
std
fs
mov
mov
cmp
add
adc
pop
imul
ds
push
pop
test
mov
dec
pushf
mov
repz
out
jbe
pushf
mov
ja
dec
ds
sbb
sbb
stc
test
jb
rcrl
in
or
or
nop
cltd
cltd
sbb
divb
jl
repz
out
dec
mov
dec
leave
jp
dec
add
shl
clc
xchg
mov
loopne
dec
mov
jno
in
push
fbld
lods
scas
pop
lret
mov
mov
cmp
arpl
add
pop
jle
je
enter
bound
adc
adc
xor
mov
js
ja
call
rorb
ror
jo
shrd
jne
and
out
out
loopne
lods
test
jg
sti
lahf
inc
ret
mov
test
mov
ret
and
mov
in
fmull
mov
lret
and
cwtl
or
or
push
push
rorb
shlb
adc
dec
hlt
jle
and
in
fwait
xchg
jne
popa
mov
inc
aad
orb
xchg
dec
mov
pop
add
fstpt
ret
xor
add
mov
push
or
push
cld
add
push
subl
lods
xchg
add
lods
push
mov
js
adc
repnz
mov
stc
sub
jmp
scas
loope
popf
jno
jg
sub
and
xor
nop
jo
dec
adc
mov
pop
nop
sub
push
mov
push
push
int
stos
in
shll
pop
xor
packsswb
dec
loop
mov
inc
mov
sahf
mov
sub
fbld
fwait
xchg
lea
ds
cmp
push
lcall
faddl
in
xor
cmp
aad
rorl
pushf
cwtl
inc
xlat
sub
sub
fs
das
dec
ret
gs
out
stos
push
mov
divb
mov
out
imul
in
nop
adc
push
pop
imul
es
negb
shrl
sub
outsb
pop
test
ror
adc
xor
pusha
dec
scas
popa
push
push
jg
pop
cmp
add
lock
xor
jae
xor
jmp
leave
cmp
push
jbe
aad
sbb
add
mov
mov
add
and
and
push
bound
and
data16
xchg
lret
loope
insl
orb
add
in
xchg
and
xor
push
push
fs
std
pop
out
dec
sbb
fwait
loopne
lea
cmp
fstl
add
pop
js,pn
ss
popl
jno
daa
pop
cmc
js
pop
xchg
push
pop
dec
dec
dec
movsl
push
data16
adc
scas
push
push
ficomps
add
movsl
lret
mov
mov
icebp
aas
imul
adc
jmp
sub
cmc
ljmp
idivb
cmp
jne
leave
shlb
push
test
lahf
sbb
fimull
leave
cli
mov
mov
pop
outsl
jmp
sub
pushf
insl
mov
rolb
mov
add
in
sub
inc
mov
mov
arpl
mov
add
xchg
xchg
add
and
test
pushf
iret
rcrl
and
je
sti
mov
add
inc
shll
shr
adc
int3
dec
inc
divb
sub
mov
sbb
fucomi
push
and
sbb
and
add
into
jle
ret
mov
jecxz
cmp
push
lret
jge
stc
push
les
add
popa
sarb
xor
sbb
sarl
add
or
adc
ds
fidivl
and
jnp
and
sub
xor
aaa
loop
add
jnp
add
rclb
roll
jg
in
ret
in
lret
shll
pop
and
dec
mov
rorb
xor
sti
add
mov
outsb
into
push
scas
mov
fxch
jge
and
lea
jp
mov
in
insb
xchg
fsubl
mov
mov
loopne
fnstenv
lea
lods
sbb
jmp
cli
lahf
xchg
mov
lret
cmpxchg
mov
cmc
xor
jle
push
mov
push
add
lock
lcall
xchg
and
icebp
mov
enter
xchg
cmpsb
repz
cmpsl
repnz
mov
mov
xor
imul
loope
jle
cmpsb
outsl
lock
push
and
aam
inc
call
jmp
roll
adcl
add
test
xor
add
inc
push
cltd
lahf
pop
sbb
int3
fcoml
test
push
ja
sub
ret
aad
mov
adc
sub
dec
jle
or
mov
pop
out
test
adc
shlb
xor
and
sbb
movsl
and
inc
lds
push
mov
fldt
push
inc
cmp
call
in
sbb
xor
testb
sti
and
sti
or
ss
sarb
sub
addr16
cmc
rolb
enter
mov
inc
sbbb
pop
jecxz
enter
pop
jb
fistpl
sub
popl
mov
popf
mov
cmp
lds
mov
gs
divb
add
cltd
cwtl
xor
setge
cmc
gs
push
aas
add
cs
cmpsb
xor
pop
loop
jmp
ljmp
or
fdivrs
add
sub
mov
cmp
loope
cli
cmp
shrb
and
dec
jle
mov
sub
xorb
push
push
pop
cmp
into
test
retw
lcall
scas
pop
mov
inc
pop
js
xchg
adc
test
ret
and
xchg
es
test
add
hlt
mov
mov
and
cmp
call
and
lods
add
or
cmp
and
xchg
aas
dec
cmp
push
dec
mov
lret
aam
adc
and
xor
jge
test
mov
push
js
fst
add
or
sar
call
or
daa
aas
adc
and
aam
call
orb
mov
dec
sarb
fnstenv
bnd
nop
pusha
sub
cmp
js
mov
movsl
aad
lret
fcomip
mov
xlat
leave
in
mov
mov
imul
sbb
mov
mov
sub
xor
xchg
push
cld
pop
cmp
dec
mov
push
aam
sub
push
inc
xor
pop
xor
les
orb
mov
cmp
call
hlt
mov
push
mov
and
push
mov
aas
add
dec
pop
or
aaa
adc
add
fs
fwait
mov
and
push
jecxz
loop
sbb
pop
jg
enter
dec
imul
sbb
inc
add
jno
mov
or
adc
fs
sbb
mov
fiaddl
adc
xor
subb
fldcw
ret
scas
jecxz,pt
pop
in
imul
jle
jae
subb
lods
repz
push
cmpsl
stos
pop
int3
pop
fdivrl
jnp
sti
loopne
pop
insl
jnp
pop
inc
addr16
or
mov
enter
out
inc
mov
sub
push
int
setae
mov
add
push
inc
mov
xor
sbb
or
mov
insb
jnp
jl
pop
aaa
inc
cmpsb
cwtl
and
js
mov
sbb
sar
int
pop
mov
xor
movsb
shrb
push
or
xlat
jmp
cmpsb
and
cwtl
sbb
fstp
inc
sbb
mov
xlat
aad
loope
shrl
and
and
clc
stos
lahf
xchg
or
pop
mov
rclb
dec
inc
dec
je
int
xor
dec
xlat
dec
pop
pop
mov
xor
orb
imul
std
or
adc
jmp
cmp
loop
jnp
sbb
dec
xchg
js
fs
cmp
decb
cmp
inc
sti
stos
shlb
pop
push
push
cld
and
lcall
pop
ret
subl
ja
mov
mov
js
add
cmc
jno
fcomp
jp
xlat
xchg
jmp
roll
sbb
and
xor
pop
lods
out
aam
clc
jns
dec
xor
mov
and
sub
pop
sub
ljmp
loop
sub
mov
psubsw
subl
inc
sub
sub
dec
lahf
pusha
mov
push
imul
test
lcall
or
xchg
ret
dec
movl
ss
cli
cmp
std
aam
leave
aaa
in
mov
or
push
push
clc
adc
cmp
ret
sbb
arpl
lods
jns
arpl
xor
insb
mov
push
jge
inc
pusha
and
std
in
inc
decb
add
paddq
xor
mov
mov
add
pop
or
and
sahf
push
aam
dec
cmp
jl
jbe
xlat
sub
aaa
mov
mov
pop
aaa
jmp
push
sarl
mov
lods
outsl
adc
sbb
or
or
push
mov
mov
test
rcrl
sub
pushl
repz
xchg
enter
sahf
pop
inc
adc
pop
push
mov
stos
ja
mov
pop
insl
and
cmc
outsl
pop
aas
inc
add
ret
push
lods
mov
aaa
fdivl
in
insl
stos
or
sbb
or
push
movsb
aam
cmp
divb
shlb
xchg
xchg
imul
pusha
negl
mov
pop
pop
pop
xlat
push
js
lds
andb
sub
cld
xchg
and
repnz
movsl
lods
hlt
xchg
in
movsl
xchg
ret
lcall
mov
shrb
out
les
clc
inc
fs
loopne
sti
jns
ja
pushl
push
dec
in
cmpsl
sbbl
sub
mov
dec
or
jl
and
bound
jmp
stos
pop
mov
cmp
or
pop
imul
inc
ret
outsb
sub
cli
shlb
xor
lahf
movsb
mov
fimuls
movsl
adc
mov
mov
xor
cmp
pop
into
jo
mov
pop
dec
int3
sub
xor
mov
mov
pusha
xor
pop
outsl
lret
pop
loope
sbb
inc
jmp
cmp
xor
xlat
push
jecxz
cmp
in
in
loopne
sbb
mov
jne
add
std
lock
jnp
insl
lahf
popa
pop
cmp
test
mov
mov
fsubs
pop
mov
stos
imul
pop
daa
adc
and
jp
ret
addl
addr16
movsl
jg
bound
cmpsb
testb
out
jbe
nop
dec
test
es
stos
inc
jg
in
ja
xlat
dec
data16
jle
es
cmc
pushf
cmc
mov
adc
in
or
cmp
sub
ljmp
sub
push
dec
xchg
jae
jle
loope
mov
dec
pusha
push
je
sbb
lds
lahf
mov
arpl
cld
dec
push
xor
pop
divl
dec
icebp
sbb
cmp
sub
cli
push
int3
ss
inc
dec
jg
fs
test
popa
pop
stc
in
call
cltd
push
push
add
loope
ja
rcrb
in
rorl
inc
cwtl
and
in
shlb
test
std
add
sub
out
mov
les
push
cmpsl
jle
test
hlt
jp
inc
ss
xor
add
cmp
lock
test
mov
fs
adc
sub
ficoml
add
leave
daa
mov
adc
test
dec
or
dec
xor
adc
pop
add
lcall
jne
xchg
out
jge
subb
mov
xor
stos
pop
or
stos
jge
popf
xlat
add
mov
xchg
add
out
and
push
jg
in
daa
inc
adc
mov
jecxz
insl
jecxz
cld
inc
leave
adc
jbe
imul
inc
inc
cltd
push
pop
adc
lock
adc
sti
mov
adc
dec
inc
cmp
popa
or
ficoml
insb
xor
adc
hlt
dec
or
subb
add
sti
pop
pop
xchg
add
fildl
dec
sub
stos
cld
movsl
adc
insb
xchg
pushf
and
mov
push
xchg
xlat
loopne
cmpsb
inc
addr16
jecxz
pushf
add
mov
sub
mov
aam
sub
fs
adc
cmp
mov
or
movsb
jge
int3
sub
aaa
nop
pop
in
imul
xchg
fistpl
xchg
aaa
nop
imul
cli
shll
xlat
roll
inc
mov
sarb
stos
mov
mov
int
or
mov
in
idivb
iret
lock
mov
xchg
ftst
adc
inc
inc
xor
mov
and
sbb
out
dec
shl
clc
shl
adcb
pop
pop
jmp
in
push
test
mov
cmp
add
leave
stc
rorl
mov
pushf
adc
dec
mov
inc
push
xchg
push
lret
es
mov
mov
inc
in
cli
pop
jbe
pop
or
sbb
jmp
jns
xorb
mov
xlat
sbb
pop
mov
pop
sbb
out
lods
imul
dec
orl
xchg
popa
xor
in
sahf
lcall
inc
xor
inc
mov
std
push
int3
not
dec
push
push
jo
dec
push
fidivl
movsl
cwtl
in
mov
jge
fdivl
sbb
arpl
inc
adc
std
jge
scas
test
outsl
stos
int
out
pop
iret
cmpsl
lods
sbb
sti
push
push
mov
lret
sbb
in
xchg
lock
push
test
sub
jmp
cmp
sbb
loope
jb
test
jne
jno
mov
fs
iret
aas
rcll
adc
out
arpl
mov
xchg
imul
lret
lret
add
stc
xor
fwait
or
xor
int
int
sbb
fs
es
fidivs
adcb
rorl
push
sub
ret
pop
lods
dec
int
imul
lods
jnp
jne
shrb
and
adc
mov
js
xorb
pop
adc
or
jp
ds
sti
repz
inc
aaa
and
sbb
sbbl
ret
sbb
test
int
sub
ljmp
dec
mov
scas
addr16
test
clc
pop
aam
lcall
dec
add
sbb
fildl
pop
aas
dec
and
mov
adc
xchg
test
imul
mov
add
fildl
fwait
leave
imul
in
sbb
xchg
scas
lahf
mov
cwtl
mov
movsl
add
aas
shlb
push
pop
fldcw
sarb
idivl
and
test
loope
adc
push
add
sahf
stos
inc
push
das
je
cwtl
jl
std
stc
cmp
push
mov
sahf
jnp
je
shl
inc
xor
pop
pop
adc
loope
aaa
xor
mov
outsl
adc
xlat
xchg
mov
leave
imul
jbe
arpl
hlt
frstor
insb
out
inc
shrb
addr16
adc
out
addb
int3
insb
inc
cmp
test
inc
movq
insl
stc
xchg
in
int3
mov
and
je
add
sbb
xor
inc
mov
sbb
pushf
jmp
xorl
inc
movsb
call
and
iret
fidivl
adc
filds
inc
jge
mov
mov
xchg
mov
jnp
mov
jle
push
push
cmpsb
and
mov
push
out
je
push
push
ficomps
adc
pushf
or
out
fadds
push
movsl
ret
push
xor
fdivl
mov
fdivrs
push
or
ds
adc
insb
or
push
jmp
mov
stos
mov
jecxz,pn
jae
inc
hlt
lahf
lds
mov
sti
inc
pusha
dec
mov
ss
mov
in
lcall
ss
xchg
cmp
das
ss
fs
call
sbb
sti
adc
dec
in
sub
sahf
add
sbb
lret
gs
jne
mov
in
ljmp
dec
es
push
adc
xchg
sub
mov
pop
xlat
pop
dec
test
and
xor
sub
ss
gs
mov
lret
dec
ret
cwtl
push
enter
and
leave
int3
mov
dec
in
aad
push
in
sub
movsb
pop
lock
adcl
fisttpll
movsb
stc
adc
push
int3
push
xchg
rcrl
addr16
aas
pop
fstl
adc
inc
dec
and
cmp
pop
pusha
lcall
inc
mov
mov
insb
push
push
sbb
movsb
mov
cs
aad
idiv
inc
mov
jno
insb
or
xor
push
mov
mov
test
out
mov
add
mov
lock
mov
cmp
xorl
mov
mov
xor
imul
arpl
push
push
bnd
aad
push
xchg
mov
push
fisubrl
sti
pop
pop
inc
dec
pop
mov
dec
ficoml
into
sub
aas
push
xor
fiaddl
dec
mov
les
shlb
xor
inc
test
jmp
adc
push
mov
lds
sahf
dec
xchg
popa
clc
push
lods
je
iret
add
cwtl
in
push
xchg
cmp
and
bound
js
rcll
mov
imul
repz
arpl
mov
shrl
adc
jmp
push
pop
sti
adc
or
bound
mov
enter
cwtl
add
inc
pusha
xor
push
rep
dec
lock
and
jp
gs
adc
test
ja
test
adcl
pop
and
xchg
inc
xor
cmp
mov
fwait
stos
fcompl
xchg
lods
sub
loop
adc
pushf
adc
push
loop
jmp
jbe
mov
push
or
mov
lret
stos
test
mov
nop
dec
cltd
js
pushf
mov
push
sbb
je
xor
outsb
xorb
and
or
testl
mov
jno
aam
sbb
xchg
stos
jns
repz
sbb
mov
add
push
test
ljmp
xchg
add
sbb
or
push
sub
xchg
repz
repnz
sbb
lods
push
push
pop
cmp
mov
inc
mov
out
mov
push
xlat
vpslld
push
push
and
mov
and
mov
xchg
pop
loopne
scas
add
pop
enter
call
push
jne
push
inc
in
add
rcrl
rorl
cmc
je
xor
sub
add
in
fimuls
test
adc
and
fsub
pop
enter
add
bound
mov
fstpl
add
push
dec
lahf
mov
ds
xor
les
or
sbb
shrl
dec
mov
xor
cmpsb
mov
sbb
fnstenv
lret
rclb
pushf
out
out
inc
iret
jecxz
out
test
dec
xor
lcall
fs
jns
jl
mov
sbb
add
or
xor
mov
inc
xor
cmpsb
inc
mov
lds
fisubs
xor
xchg
xor
das
jne
dec
mov
adc
ret
enter
aam
dec
lret
sub
mov
adc
aaa
cwtl
dec
scas
sbb
cmp
cmp
in
pop
int3
ret
lret
pushf
cwtl
sbb
fnstsw
fisttps
jge
out
fildl
call
xor
push
mov
out
pop
std
xchg
cmpsl
scas
xchg
mov
scas
push
or
ret
add
pop
mov
pushf
mov
mov
or
dec
lock
fldenv
shr
sbb
and
mov
shll
jmp
stc
push
xchg
test
or
push
inc
out
jb
movswl
fs
mov
fs
aaa
or
push
push
ret
movl
les
push
and
mov
mov
or
dec
cld
adc
mov
lods
xor
jb
int
ds
lds
lods
loop
mov
inc
jnp
dec
insb
lea
sub
jg
mov
idiv
xchg
gs
jbe
cmp
cmp
jne
xchg
mov
cmp
cld
jnp
in
sti
push
cmp
insl
inc
pop
loope
sbb
cmpl
cmpsb
inc
mov
mov
sarb
xchg
scas
ss
sub
sbb
loop
repnz
clc
mov
cmp
mov
jge
aam
lds
xlat
lds
inc
repnz
xor
inc
and
daa
cli
mov
mov
das
outsl
loope
dec
push
movsl
sbb
lahf
adc
cmc
test
aas
imul
mov
std
sub
pusha
or
int
jnp
dec
in
test
lret
push
ret
ret
out
aaa
cmp
int
scas
sbb
xor
jbe
add
mov
ja
inc
inc
or
je
fisubrs
sbb
jbe
adcl
ret
es
push
or
pop
mov
shlb
cltd
mov
jmp
ds
sbb
pop
out
or
pushf
loope
lret
sub
ror
jae
hlt
jl
push
enter
sbb
sbb
fcmovb
push
push
push
ss
jno
sarb
test
sbb
inc
cmp
cli
xchg
iret
push
xor
and
mov
es
aam
in
or
fldenv
cld
push
rclb
dec
pop
sub
sub
inc
mov
sti
jo
xchg
push
or
jge
les
pusha
fcom
lret
adc
sbb
fisubrs
call
push
mov
and
out
and
lret
out
jecxz
jp
xchg
mov
add
in
sbb
cmpsb
push
sbb
xchg
fsubr
lret
inc
push
insl
or
push
leave
mov
mov
inc
clc
bnd
int3
mov
lret
popf
shlb
mov
sbb
sbb
ja
mov
jp
push
xchg
arpl
dec
js
pop
xchg
jmp
lcall
jmp
fisubs
pop
adc
les
sbb
inc
icebp
jbe
lods
in
popa
repz
jl
mov
cs
pop
inc
shufps
cli
push
adc
outsl
lods
or
or
fucom
dec
mov
dec
mov
dec
pop
call
dec
or
or
clc
push
aam
cmp
jle
pop
lcall
les
insb
push
bound
std
xchg
fs
es
je
cs
and
adc
loop
pop
mov
stc
pop
mov
stos
int3
nop
mov
popf
xor
jb
cmc
in
adc
ljmp
in
test
mov
or
pop
out
loope
cld
add
inc
cmp
int
push
xchg
cmp
jns
lock
repnz
and
femms
xor
lcall
inc
test
adc
inc
xor
test
mov
int3
mov
mov
lods
mov
or
aas
mov
sahf
pop
ss
daa
inc
shlb
sahf
mov
xor
add
jb
out
sub
rcrb
sub
insl
cmp
or
xchg
mov
add
sti
das
xor
mov
sbb
and
xor
lahf
cltd
ret
jecxz
add
shlb
and
mov
mov
cmpsl
jb
cmp
mov
lahf
rcll
or
rcrl
inc
push
xchg
loop
mov
imul
inc
arpl
pop
mov
insl
or
push
sbb
cmc
and
mov
iret
test
adc
dec
mov
call
out
enter
mov
out
je
and
jge
rcrb
push
ja
data16
mov
cmp
sbb
cmc
insb
sbb
dec
aam
mov
cmp
or
or
je
jbe
xor
negl
add
repz
insb
std
test
push
push
cli
and
fwait
xor
mov
cwtl
or
xchg
shll
and
jb
arpl
shrd
sahf
xchg
mov
xor
dec
mov
push
jmp
sti
or
pop
hlt
stos
xchg
popa
cmp
cmpsl
in
sub
outsb
loop
push
hlt
into
in
lds
inc
jnp
jp
fsubr
cmc
inc
pop
das
pop
popa
add
fstpt
push
jecxz
aam
cmp
adc
xchg
pop
test
repz
adc
popf
jmp
iret
call
dec
mov
inc
rcrl
pop
xor
mov
scas
xor
sbb
nop
fimull
aad
std
addr16
xlat
je
sbb
cmp
jle
cmp
xchg
rcr
mov
adc
xor
imul
inc
test
outsb
jno
cli
push
xor
movsb
loope
dec
adc
bound
jmp
push
jbe
sbb
ds
nop
and
bnd
aam
nop
sbb
mov
and
cwtl
fsubl
ds
push
inc
daa
sbb
daa
aam
cmp
jne
and
cmc
adc
pop
scas
ds
dec
jbe
sti
add
or
sti
sbb
sub
or
enter
mov
repz
dec
and
push
mov
add
adc
mov
pusha
add
xorl
es
test
pop
inc
xlat
stos
lock
sub
stos
mov
xor
push
and
out
testb
inc
xlat
arpl
test
pusha
imul
mov
std
cmpsl
je
fcoms
sar
arpl
cld
dec
cmp
lret
in
xchg
int
into
xchg
push
repz
std
fsubs
xchg
scas
loop
mov
jle
test
call
xor
pop
mov
push
jnp
fistpll
xor
rorl
xor
jne
imulb
sbb
pusha
add
popf
mov
xchg
stos
pop
aad
and
push
cmp
mov
xor
pop
rclb
movsb
jns
pop
aas
cli
scas
jnp
or
cld
sbb
dec
icebp
stos
push
js
jns
sub
mov
testb
pop
ficomps
jg
and
adc
call
xchg
je
scas
seto
pop
inc
fldcw
movsl
add
push
mov
in
sub
push
mov
movsb
flds
xor
or
ret
in
je
pop
insl
pop
notl
frstor
jno
push
mov
cmc
adc
cmpsb
or
sbb
mov
out
clc
or
test
je
lret
xor
push
sub
orl
mov
sub
outsb
pop
jg
xchg
rolb
pop
jnp
mov
sbb
sub
jb
inc
cmp
sbb
or
fstpl
lock
mov
imul
notl
adc
add
jb
add
jecxz
push
jg
mull
push
pop
adc
scas
test
jne
imul
fsubrl
jo
out
xor
fs
mov
jo
inc
mov
jp
icebp
out
xchg
and
mov
add
mov
or
aad
in
sub
data16
fldenv
stos
or
lds
push
shl
or
sub
fldl
sahf
jle
add
xor
push
enter
mulb
xor
call
dec
mov
dec
stc
pop
mov
mov
iret
jg
ss
add
and
push
int3
test
nop
xor
jmp
push
and
mov
mov
iret
out
cld
nop
push
mov
mov
sub
int3
xchg
mov
xchg
in
adc
sub
outsb
imul
pop
jo
or
idivb
push
das
aas
test
pop
mov
aaa
push
aas
jae
in
lods
imul
pop
pop
mov
cli
int
inc
or
lock
dec
mov
mov
fmull
push
dec
inc
insl
inc
mov
ret
xchg
lock
jne
push
mov
xchg
ffreep
adc
sbb
data16
pop
or
daa
pop
jg
pop
sbb
dec
les
movsb
or
iret
push
adc
jns
jp
mov
dec
mov
lcall
mov
push
push
adc
test
popf
mov
jecxz
lods
xchg
iret
les
insl
xor
fcomip
es
mov
mov
mov
inc
dec
add
inc
dec
dec
ret
jnp
mov
lret
out
outsb
popa
mov
jae
add
pop
das
adc
shrb
loope
sub
lahf
test
mov
ret
dec
pop
sub
test
pop
push
jae
aaa
xor
cmp
push
push
dec
test
call
std
decl
cmp
xchg
cs
out
xor
adc
sbb
mov
cmp
lods
sub
mov
dec
gs
cmpsl
push
rcll
into
jge
adc
push
imul
and
sahf
ret
bound
aad
cmp
jle
jl,pt
pop
inc
es
ss
jle
loopne
mov
sti
lcall
pushf
ljmp
subl
popa
xor
lcall
data16
outsl
lods
inc
add
lret
xchg
int
cs
dec
icebp
mov
loopne
and
and
repz
xor
lahf
push
jo
rcll
test
lret
das
cwtl
push
push
jmp
mov
xchg
xor
pop
fldenv
ret
mov
es
lret
andb
push
mov
jle
mov
fs
cmpsl
cs
inc
movsb
loope
out
cmpsb
cmp
mov
or
sub
das
pop
mov
push
adc
fwait
mov
mov
js
in
and
mov
fisubl
xchg
cmp
test
es
inc
push
and
mov
call
ficoml
ret
xchg
mov
scas
mov
insb
enter
push
mov
fsts
orl
loop
out
sub
into
xor
jle
pushf
lods
in
sbb
jmp
movsl
adc
or
fwait
les
cli
aaa
sub
sub
inc
out
mov
xchg
sub
inc
je
fsts
mov
pop
sbbb
inc
enter
xor
dec
int3
and
sbb
inc
gs
add
sub
cmp
ss
push
dec
inc
inc
and
pop
inc
sub
into
xchg
sub
mov
gs
adc
sub
test
mov
pop
aaa
dec
sub
adc
pop
jle
jmp
mov
ficoml
out
sarb
adc
jg
dec
xor
mov
add
add
mov
adc
fdivr
pop
sarb
xor
pop
cli
rorl
adc
mov
pop
cli
xor
imul
mov
mov
andw
call
jmp
jnp
add
xor
adc
sahf
cmp
int
cwtl
lea
adc
and
mov
popl
jns
out
imul
jbe
nop
xor
nop
mov
xor
outsl
scas
mov
outsb
ficompl
leave
std
add
fdivs
lods
sbb
jl
call
add
das
clc
adc
icebp
or
sub
and
stc
pop
fwait
loope
out
movsb
insb
cmpsl
pop
insl
loop
sub
cmp
push
inc
lods
movsl
dec
int
ret
sahf
cs
repz
lret
cli
xchg
xchg
sub
xchg
mov
stc
in
fstpl
mov
ljmp
jle
push
xchg
cmp
insl
cmpl
in
sti
inc
divl
imul
push
aaa
dec
and
aas
je
inc
out
shrb
push
sub
mov
cmc
test
and
xchg
in
adc
pop
out
mov
cmp
or
lretw
movsb
mov
addl
cwtl
xor
mov
hlt
pop
lods
adc
mov
cmpsl
sbb
movsb
mov
xchg
loopne
cs
insl
push
lds
movsl
mov
pop
inc
inc
push
scas
xchg
cmova
add
nop
cltd
pop
push
addr16
cmp
sbb
andl
lahf
xchg
mov
sti
sbb
pop
jecxz
push
rorb
test
jl
pop
add
fsubp
mov
and
pushf
pop
push
sbb
push
in
mov
je
lock
mov
mov
mov
in
cmpsb
cld
push
xchg
cmpsl
pushf
mov
sub
sub
outsb
jbe
jle
test
lret
mov
jge
and
pushl
xor
push
std
lahf
sub
lret
inc
insl
out
cmp
dec
data16
nop
loopne
mov
jl
fcoms
aad
sub
shlb
mov
iret
out
inc
orb
lods
mov
and
ror
jno
ffreep
push
int
jmp
mov
mov
pusha
mov
les
cltd
and
mov
pop
pushf
cmp
adc
mov
jnp
int
push
add
push
cmp
dec
orl
fwait
cltd
mov
jne
jecxz
fsubs
and
pop
adc
dec
fs
das
in
cmpsb
lods
pop
sbb
jg
ja
mov
sbb
rolb
push
push
xor
mov
in
and
push
faddl
sub
jmp
scas
push
insb
cmc
pushl
cmpsb
add
push
popa
scas
add
jbe
rcl
add
inc
xchg
sar
jmp
scas
lahf
lds
sti
fdivrs
add
sahf
lcall
stos
psubusb
add
insb
insb
mov
xchg
pop
xchg
cmp
mov
sbb
out
sahf
fsubl
xchg
push
mov
cwtl
in
out
in
clc
adc
ja
leave
add
xor
cld
push
jbe
jle
movsb
addr16
sti
xorb
xchg
push
movsb
sahf
sti
icebp
ss
negb
push
pop
push
mov
loope
clc
jge
call
mov
adc
loopne
inc
inc
mov
mov
push
ja
dec
lcall
cmpsb
rcrl
xor
addr16
push
adc
stos
in
sub
mov
inc
sbb
ljmp
mov
gs
inc
repnz
pop
push
cli
daa
mov
xor
insb
fs
jno
int
sub
cwtl
lods
ss
imul
nop
dec
fwait
mov
jg
mov
adc
fstl
scas
fisttpl
pop
int
or
inc
lods
dec
cltd
add
pusha
jne
aas
ja
aam
repz
loope
cmpsb
xlat
sbb
xchg
stos
push
fmul
mov
mov
cmp
inc
xchg
adc
adc
stc
mov
outsl
sarb
jle
roll
stc
xchg
mov
into
mov
lods
push
in
cmc
inc
lods
popf
sub
cmc
cmp
add
std
aaa
fwait
icebp
lods
lods
aas
or
or
adc
pop
xchg
mov
mov
out
test
mov
movsl
add
ss
push
push
pushw
and
add
ret
movsl
scas
out
lods
cmp
push
imul
push
mov
dec
scas
out
sbb
dec
and
dec
add
mov
sub
shr
push
fwait
shrb
fidivrs
xchg
push
loope
clc
in
adc
add
add
push
loopne
mov
ja
test
das
iret
push
movsb
aam
sub
testb
fstps
ja
in
mov
xor
and
jmp
push
outsl
jmp
shrl
push
dec
push
pop
adc
pop
xor
xchg
mov
in
hlt
aad
test
lds
push
nop
daa
and
les
stos
out
ja
inc
cltd
or
xor
dec
sarb
fcoms
ljmp
jmp
sbb
xor
ss
ljmp
cmc
and
aas
sbb
subb
push
pop
aas
jo
mov
and
mov
mov
jp
mov
popf
enter
fucompp
or
xchg
push
cmp
dec
dec
adc
xchg
add
xor
shr
rcll
mov
sbb
insl
out
add
out
xchg
cmp
mov
test
mov
int
jl
leave
into
cli
mov
lret
clc
push
int3
dec
pop
xlat
popa
adc
jle
out
loop
daa
and
in
mov
inc
loop
fs
imul
mov
gs
xlat
inc
cld
push
out
pop
push
rcll
xchg
adc
clc
jl
fildl
pop
add
pop
repz
fisttpll
sbb
repz
cmp
jl
addb
add
lahf
mov
aas
iret
pusha
and
cwtl
test
xchg
shl
cmp
fyl2xp1
sub
jecxz
push
aaa
cmc
nop
dec
mov
fsubs
in
lds
insl
inc
mov
xor
mov
aas
pop
or
dec
jmp
add
jmp
mov
or
negb
inc
aaa
jbe
arpl
sub
sahf
fdiv
cmova
test
pop
nop
rclb
pop
pop
test
jns
pusha
sahf
jns
pop
ljmp
repz
mov
lea
ljmp
jbe
sbb
andl
test
mov
cld
insb
dec
sbb
out
jmp
lcall
lahf
fs
add
out
push
clc
test
adc
aam
fwait
pop
test
repnz
push
outsl
sub
mov
mov
call
sbb
jne
stos
pop
imul
daa
ss
popa
jae
and
inc
jnp
bound
mov
scas
dec
adc
mov
ljmp
popf
sub
ret
frstor
popf
inc
insl
test
lahf
inc
in
les
mov
jle
mov
lock
jl
dec
jecxz
les
inc
in
sti
mov
xchg
aas
sbb
pop
pushf
mov
cmp
pushf
aad
js
test
in
jl
mov
aam
push
lahf
xchg
push
shll
test
loop
mov
sub
cmp
in
dec
jmp
push
add
add
pop
test
mov
or
aas
push
mov
or
aam
mov
fs
into
mov
jb
jb
jmp
xchg
gs
aas
iret
das
dec
push
sbb
push
sub
shl
fdivr
dec
cmp
cli
es
cmc
pop
inc
pop
xchg
andb
or
pop
in
inc
repz
pop
dec
sub
adc
push
lcall
inc
mov
cltd
sub
jp
rorl
jecxz
inc
sbb
push
test
sbb
cmp
push
bound
movsb
outsl
mov
and
sub
and
sub
dec
jb
es
out
jo
jl
hlt
std
and
push
bound
test
sub
ljmp
loop
fiadds
das
stos
cwtl
imull
repz
testl
jno
add
dec
cmp
xchg
xchg
js
cmp
sbb
mov
adc
ja
mov
sbb
inc
push
stos
out
mov
or
mov
sub
jmp
xchg
pushf
and
cld
cli
das
cld
jp
fstpt
hlt
in
lret
lret
aaa
ja
push
push
or
lock
and
ljmp
lds
cmpl
sbb
mov
outsb
dec
sbb
jno
mov
scas
popf
mov
sub
jb
pop
adc
lcall
jne
in
sti
js
pop
dec
mov
adc
add
aas
dec
inc
push
add
or
mov
push
inc
stos
fwait
and
mov
hlt
testb
jne
xor
xchg
pop
inc
ljmp
imul
mov
xor
jecxz
xor
cs
mov
jbe
jmp
clc
jne
xlat
push
or
or
xchg
sti
and
dec
and
xorl
push
pop
lahf
dec
jmp
push
in
sahf
ja
xlat
rcr
or
or
add
repz
pop
inc
sbb
into
jle
and
imul
cli
shrb
push
leave
and
loope
scas
dec
out
data16
in
imul
push
call
push
aas
in
fstpt
push
dec
or
mov
rcl
pop
or
mov
out
xor
imul
sti
mov
js
xchg
xchg
push
mov
das
into
je
mov
loopne
idivl
mov
xchg
shlb
inc
in
xor
add
ret
pop
inc
jmp
mov
fistl
mov
mov
mov
aaa
pop
fnstsw
mov
mov
jl
adc
sbb
cmp
fstpt
leave
inc
rolb
mov
std
cmp
and
insl
pushf
mov
scas
xor
lods
mov
fstl
inc
loopne
pop
sub
daa
sbb
sbbl
push
push
icebp
push
sub
push
test
jecxz
js
cmp
sbb
pop
jno
test
jmp
cmp
sahf
pop
popf
in
cli
divb
inc
movsl
ret
sti
sbb
scas
push
mov
jae
bound
fisttpl
movsl
mov
or
xchg
ficompl
arpl
xchg
pop
or
cmp
mov
pop
out
lods
loope
js
cmp
mov
jnp
push
add
xchg
jb
lods
std
sbb
sbb
lahf
das
lock
mov
rcrl
imul
push
js
fisubl
dec
mov
divl
mov
or
mov
lahf
shlb
or
add
and
hlt
cmp
inc
sbb
mov
push
add
data16
popa
mov
mov
ss
scas
mov
std
pusha
andl
popf
sbb
jp
gs
enter
mov
push
dec
fcoms
popa
cmp
push
mov
push
mov
mov
lock
xor
sub
out
test
bnd
in
jnp
dec
sbb
fcom
test
pop
lret
cs
xor
xor
fidivrl
aaa
jp
mov
inc
add
mov
gs
mov
mov
test
bound
repnz
mov
inc
lcall
in
inc
enter
nop
jae
adc
dec
rcrb
aad
into
stos
mov
pop
rcrb
out
xor
int3
and
cli
test
push
out
arpl
out
mov
into
aas
lods
add
and
inc
scas
mov
in
mov
jo
test
add
cmpsb
or
or
jg
sub
cmp
cltd
and
cwtl
jbe
ficoml
xchg
and
lods
push
sub
inc
shrl
sbb
lret
mov
push
test
or
add
mov
mov
fnsave
in
fidivrl
in
sbb
ficoml
sbb
push
and
xor
and
or
fisubl
test
outsb
hlt
fwait
ljmp
lret
dec
popa
sub
fistpll
add
xchg
push
inc
pop
movsl
fs
mov
mov
sarl
sub
fwait
scas
inc
fwait
xchg
call
jg
das
ljmp
push
mov
stc
sbb
pop
push
dec
mov
xorb
shrb
push
or
orl
jbe
shl
xchg
mov
dec
shlb
jmp
test
mov
xor
roll
cmpb
fmull
cmp
lods
sub
add
dec
lcall
mov
fs
sub
jbe
jb
outsb
and
dec
rcrb
xlat
rolb
test
imul
ficoms
jg
fs
daa
mov
daa
leave
inc
mov
xor
cmp
mov
fcmovne
dec
in
fstl
sahf
sbb
popa
pop
push
mov
shl
in
lret
cmp
lock
and
cltd
std
mov
rorb
pop
ror
push
sbb
imul
xlat
inc
and
mov
cltd
sti
pusha
pop
jae
xchg
push
stos
fstps
xchg
fdivl
push
leave
int3
pop
sarl
xchg
ret
nop
xor
lods
flds
dec
pop
dec
addr16
xchg
adc
repnz
mov
ja
xchg
jno
stos
mov
push
jecxz
xchg
xchg
les
ss
sar
nop
pop
push
mov
enter
mov
js
cmp
mov
imul
inc
mov
in
jb
jae
and
test
lods
shll
mov
icebp
leave
adc
lcall
mov
repz
in
push
push
mov
out
mov
fbld
push
addr16
adc
cmpsb
mov
inc
cmp
stc
sti
push
push
add
lret
fs
outsl
sbb
scas
hlt
cltd
sarb
loope
mov
and
std
sarb
mov
xor
jb
test
icebp
adc
adc
data16
in
inc
lahf
ss
sar
fimuls
out
jnp
mov
jp
sbb
dec
int
loope
rcll
fimull
rcrb
push
pop
xchg
ret
mov
dec
xchg
push
mov
sti
ss
aaa
stc
mov
addr16
dec
aaa
fsubrs
inc
mov
sbb
pop
adc
push
clc
sub
cmpb
mov
js
cwtl
decl
xor
push
sbb
sbb
adc
push
xor
xor
shl
cld
sub
fcompl
ja
push
sahf
fwait
jne
bnd
xchg
mov
mov
out
icebp
test
inc
jns
test
and
xorb
mov
out
bound
cmpsl
lret
sbb
adcl
pop
lret
push
fdiv
push
dec
movsb
movb
sub
jo
pop
andb
or
sbb
push
pop
icebp
push
movb
call
push
sub
push
push
adcb
daa
dec
call
clc
pop
xor
cld
sti
js
push
jp
push
pop
mov
push
xchg
xor
mov
mov
push
push
push
fwait
cwtl
and
repnz
inc
inc
mov
cmp
xchg
jle
push
adc
add
xor
rcrb
fbstp
loopne
mov
test
movsb
xorl
scas
mov
mov
stos
in
cmp
pop
pop
mov
ret
xchg
lret
xor
xlat
ficomps
push
xor
mov
out
fwait
mov
out
jnp
xchg
mov
stos
add
and
movsl
pop
xor
in
das
and
pop
jb
sub
jne
and
rcll
es
xchg
ss
fildl
inc
pushf
ljmp
arpl
inc
pop
jge
jl
stos
fildl
adc
adc
jo
push
rcr
or
inc
dec
dec
repnz
repnz
sub
lcall
adc
mov
mov
inc
lods
imulb
push
pop
push
ss
testl
mov
mov
outsb
xchg
mov
incb
adc
jno
pop
or
dec
repz
popa
sbb
xchg
fwait
push
mov
repz
inc
sbb
mov
cmp
fidivrl
scas
sub
clc
test
adc
adc
sub
or
sub
cs
inc
data16
sarl
jo
sbb
rcrl
mov
mov
pop
in
or
lods
not
mov
dec
pop
ljmp
loope
mov
subb
rcl
movsl
arpl
rorl
lret
ljmp
xor
cmp
nop
iret
loope
popa
cmp
or
jns
sub
push
ret
jecxz
sub
add
xchg
cmpsl
and
test
popf
mov
push
dec
pop
fucomi
sbb
cmpsb
icebp
loopne
mov
and
xor
sbb
sub
inc
or
mov
pop
fxch
jecxz
addr16
pop
xor
vrsqrtps
add
mov
out
dec
cmp
mov
outsl
jae
test
icebp
je
test
mov
add
xorl
xchg
aas
or
insb
and
fdivs
pushf
inc
sub
adc
ljmp
jge
mov
and
inc
push
mov
inc
fsubrl
mov
jno
movl
cmpsl
in
mov
repz
inc
fwait
cmpsb
insb
popf
out
cmp
mov
cld
mov
mov
xchg
mov
jae
mov
xchg
cltd
data16
pop
mov
cmc
dec
adcw
push
shl
xchg
xor
mov
mov
sahf
ficomps
pop
loopne
sub
cmc
xchg
scas
test
dec
xorb
and
sti
or
mov
std
mov
mov
in
or
dec
jb
xchg
clc
in
rcrb
mov
dec
jp
mov
into
fmul
aas
call
in
push
iret
cld
cmp
lret
shll
pop
push
cwtl
je
inc
aaa
cmp
loope
sbb
mov
movsl
xchg
or
cltd
cs
out
ja
inc
orb
mov
mov
xor
int
xor
negl
adc
sbb
mov
aaa
aam
xchg
lea
scas
pop
inc
mov
mov
xor
gs
add
idivl
sbb
mov
daa
leave
jmp
jge
adc
test
add
mov
jecxz
dec
sbb
loopne
in
add
push
mov
idivl
inc
cmp
and
sub
out
mov
pop
aaa
lcall
mov
daa
lods
pusha
jne
mov
pusha
dec
xor
xor
push
xchg
add
or
popf
xor
sbb
dec
jo
lock
scas
dec
dec
loope
jecxz
jno
dec
rcr
sub
push
push
cwtl
sub
cld
fucom
stos
push
divb
scas
int3
cmpsl
daa
cmpsb
add
cmp
pop
jno
in
jns
mov
jbe
jmp
mov
out
into
lds
lds
lahf
lea
loop
cmpsl
mov
xchg
out
mov
pusha
mov
jo
add
enter
mov
push
mov
xor
ret
push
mov
adc
and
adc
xchg
nop
mov
dec
mov
ja
les
test
xchg
cwtl
add
or
adc
inc
xor
cmp
mov
sbbl
arpl
fiaddl
adc
or
add
or
scas
adc
int3
bound
add
es
xor
dec
in
in
negl
mov
mov
sbb
add
mov
sub
jb
mov
shll
add
jb
push
ss
fs
testl
push
xor
call
stc
cmpsb
in
cmp
dec
in
daa
xchg
push
scas
cmpsb
ss
imul
jb
cmp
insl
xor
jle
test
dec
push
mov
sub
ja
pop
mov
and
setne
jge
enter
cmp
cld
jae
sbb
xchg
test
inc
inc
sub
js
pop
dec
out
test
inc
mov
movl
inc
jbe
sbb
addl
sbb
daa
push
popa
jecxz
xor
lret
pop
jo
ja
clc
rclb
loopne
push
adc
pop
gs
inc
sbb
pop
int
lods
icebp
push
jb
add
inc
popa
mov
cmp
jae
jl
imul
push
push
lret
outsb
mov
imul
jecxz
pushl
pop
mov
sub
movsb
jns
sahf
pop
xor
sbb
les
mov
lods
push
lahf
gs
xor
aam
jnp
mov
mov
push
lret
sahf
xor
or
in
push
push
and
xor
int
cmp
xchg
mov
in
pop
mov
shll
or
es
jp
xor
and
push
mov
push
and
test
adc
dec
aad
lahf
loop
or
jl
cmpsb
cmc
xor
insl
jge
pop
adc
mov
push
mov
add
xchg
fsubrs
into
sub
in
push
stc
dec
xlat
inc
shrl
sbbb
add
je
mov
rorl
add
fisttpll
shr
jecxz
mov
fimuls
mov
mov
inc
inc
imul
fisttps
push
andl
xlat
ja
cld
fists
test
fdiv
and
mov
repnz
dec
mov
sub
jecxz
lret
ds
xchg
rcll
es
xor
add
xchg
xor
in
add
mov
sub
adc
mov
xorl
push
out
cmpsb
xchg
xchg
loop
int
adc
pop
jo
adc
popf
pop
shr
mov
stc
int
mov
or
cltd
inc
inc
shll
cmp
movsl
mov
int
push
jp,pn
xchg
and
aaa
pop
cmp
mov
dec
mov
gs
clc
push
mov
insl
andb
and
clc
pop
pusha
mov
adc
lods
fwait
pushf
dec
out
jae
in
mov
inc
iret
dec
and
rcrl
addr16
pop
jmp
pop
outsb
imulb
stos
shll
adc
jg
andb
aam
adc
mov
inc
test
ret
lods
mov
inc
xchg
mov
enter
movsl
mov
pusha
or
xor
lock
jge
mov
lret
int
mov
loope
pop
and
cmp
mov
in
pop
test
push
inc
daa
mov
jle
fldt
mov
inc
shrl
jne
xor
jge
add
push
ret
iret
call
mov
xor
insb
and
ljmp
movsb
imul
mov
cmp
shll
clc
add
pop
adc
test
in
fs
aam
pop
pop
fcoms
xor
lea
addr16
imul
add
xchg
fisubs
loopne
fcoml
adc
int
or
notl
jae
lods
adcl
out
mov
rol
jl
mov
shlb
push
mov
mov
sub
mov
xlat
loope
fcomi
inc
push
in
add
dec
ja
xchg
jle
lret
jno
adc
out
stc
lret
adc
popf
push
mov
rorl
leave
lret
fisttpl
in
in
inc
les
cmp
les
mov
inc
push
cmp
cmp
cmc
pop
icebp
sub
inc
pmaddwd
scas
scas
adcb
sbb
lret
mov
lahf
daa
sahf
dec
pop
adc
aad
jns
fdivrs
pop
stos
push
lods
xlat
cmp
fisttpll
jl
dec
fs
gs
subl
insb
push
cmpsb
ds
out
dec
arpl
ror
and
lea
icebp
cs
pushf
pop
sbb
not
xchg
sub
imul
andl
or
mov
jg
inc
ja
fdivs
clc
cmp
shlb
jmp
out
icebp
imul
lock
repz
or
inc
out
cs
out
push
adc
in
iret
fwait
jmp
gs
and
adc
jmp
loope
xchg
ds
pop
push
sub
dec
pop
adc
xchg
pop
and
jo
mov
test
lcall
mov
push
mov
push
xor
add
sbb
adc
xchg
xchg
mov
push
call
cmpsb
lods
imul
stos
cmc
cmp
push
jo
adc
mov
mov
out
aas
pushf
test
out
inc
fsubs
push
cmp
sub
fadds
mov
sub
jmp
mov
xor
xchg
pop
test
pop
into
loop
sub
xlat
sbb
xchg
enter
in
cmpsb
rolb
xchg
mov
stos
lret
push
cmp
pop
mov
or
out
pop
sub
shrl
testl
jmp
test
lock
rol
jb
mov
mov
pop
push
aaa
dec
std
mov
aam
and
leave
jnp
rcl
add
mov
and
scas
ss
lds
aad
sub
xor
repz
imul
add
dec
pop
fisttpll
in
cmp
dec
faddl
fadds
pop
and
movsb
sbb
gs
pop
cmp
orb
xor
icebp
jp
aad
or
outsb
iret
xchg
xlat
pop
insl
cmpb
insl
or
arpl
cmpsb
jno
jmp
pusha
inc
or
push
inc
push
pop
or
pop
repz
nop
xor
ret
test
jno
cmpsb
xchg
outsb
dec
ds
adc
dec
jnp
je
or
xchg
cmp
adc
insb
mov
iret
ret
add
inc
mov
cmpsl
les
in
imul
sub
stos
adc
sbb
loope
mov
jg
sbb
push
inc
nop
mov
int
dec
pop
into
mov
mov
push
jbe
push
cmp
lcall
cmpsb
lods
ss
adc
mov
mov
mov
push
das
ret
adc
jp
inc
adc
xor
insl
outsb
movsl
sbb
ss
or
adc
xor
sahf
shlb
les
or
ffreep
lret
movsb
sti
dec
jle
mov
push
cld
lahf
pop
jp
aaa
lods
sub
aas
sub
aaa
sar
pop
cltd
or
xor
xor
pushf
cwtl
fistps
addr16
pop
cmovno
push
mov
ja
xor
and
data16
xor
cmp
push
cs
in
inc
mov
adc
lahf
mov
xchg
or
test
gs
mov
arpl
je
adc
rcrb
test
lods
fs
and
sub
xchg
sub
and
in
pop
mov
pop
mov
dec
push
dec
add
loopne
imul
ret
xor
push
mov
inc
ss
mov
or
push
arpl
pop
xchg
xchg
cltd
lock
mov
push
dec
or
out
lcall
adc
mulb
out
fcomp
mov
sub
dec
sti
adc
std
push
xor
push
adc
in
movsb
fnstcw
sub
or
test
cmp
nop
mov
jmp
push
inc
or
and
pop
push
pop
push
jg
sbb
je
jno
mov
outsb
js
test
data16
and
lret
inc
jno
ljmp
or
popf
test
mov
pop
mov
sbb
xchg
push
or
stc
div
pop
dec
jmp
sub
add
scas
gs
mov
xchg
inc
imul
inc
std
mov
mov
pop
inc
repnz
xor
push
nop
mov
add
fiadds
inc
sub
fldl
inc
stos
xchg
inc
cmp
mov
mov
mov
cli
xlat
lcall
lods
inc
fs
dec
cmp
shrb
xchg
out
ret
and
mov
bound
jbe
xor
sbb
repz
jns
sbb
add
imul
xor
and
repnz
fsubrs
roll
shll
clc
scas
ds
popa
movsb
aad
cmp
shr
stos
adc
and
and
cmp
dec
sbb
mov
push
call
lea
popf
and
jmp
ds
sbb
jae
in
jecxz
out
pop
jge
movsl
pop
mov
adc
in
pop
or
sub
movsb
jg
dec
out
lcall
inc
cli
pop
mov
shll
cs
push
sub
rclb
jl
mov
popa
shufps
out
inc
sbb
mov
mov
inc
or
or
push
lahf
test
negb
dec
ja
divl
pop
or
lahf
mov
cs
add
insb
ret
daa
sbb
xchg
out
jge
int3
flds
loopne
dec
xor
adcl
lea
pop
cmp
mov
mov
lahf
dec
cmp
jge
aad
ret
jl
dec
xchg
xor
mov
add
sbb
out
shlb
jl
fimull
bound
mov
sub
cmp
add
jmp
pop
inc
pusha
scas
vmaxpd
cmp
pop
cmp
ficoms
jl
sbb
in
in
or
loop
push
int
cmp
into
cli
imul
xor
jle
js
xor
push
out
ljmp
push
inc
mov
mov
xchg
dec
pop
cltd
mov
out
loope
cmc
mov
adc
sarl
sbb
dec
lods
loop
mov
mov
cmp
push
or
scas
into
and
xlat
test
insb
mov
popa
loop
mov
repz
test
notb
jno
mov
aaa
mov
dec
icebp
bound
out
cmp
mov
fs
addb
std
mov
lcall
rep
sahf
pop
in
sahf
loopne
xchg
jb
orb
push
sbb
test
jae
adc
cmp
or
leave
push
sbbl
into
dec
cld
inc
xchg
dec
mov
rcrb
lret
sub
inc
data16
std
push
and
pusha
add
mov
test
fldcw
push
xchg
imul
mov
dec
js
or
in
repnz
and
jg
popa
xchg
sbb
fiaddl
dec
mov
inc
dec
xor
lods
inc
add
add
mov
aad
negl
cwtl
fldcw
fs
xchg
dec
out
iret
popa
aam
mov
xor
arpl
jnp
sbb
add
out
push
out
mov
dec
sub
cld
mov
jo
in
inc
push
movsl
sbb
or
xor
mov
xor
dec
mov
and
xor
push
mov
jmp
sub
xchg
push
sub
shlb
mov
mov
test
and
jne
mov
mov
shrl
inc
ss
ss
jo
fs
aaa
js
bound
test
in
bswap
aam
mov
repz
call
pop
cmp
xor
popa
add
jg
lock
mov
xchg
inc
and
jmp
dec
sbb
pusha
test
xlat
or
shrl
daa
mov
pop
call
les
add
cltd
adc
jb
and
movsb
pushf
push
cmc
mull
adc
fsubrl
aaa
sbb
test
ljmp
lock
mov
xchg
sbb
adc
out
in
pop
sub
out
jp
or
and
cmp
xchg
adc
jge
adc
popf
mov
inc
dec
push
xchg
mov
lea
jno
mov
mov
in
aaa
clc
xchg
or
inc
in
dec
jbe
daa
cld
push
lcall
or
jecxz
xor
bound
xor
clc
mul
cmpsl
aaa
shlb
sti
add
loopne
dec
adc
stc
sarl
sub
ficoml
call
jle
adc
out
cmc
inc
repz
ss
sbb
ss
cmp
xor
or
pushf
arpl
dec
imul
adc
inc
mov
dec
gs
mov
out
lret
mov
dec
rorl
pop
pop
xchg
jae
lret
mov
xchg
mov
inc
cmp
dec
cmpsb
int3
scas
add
push
xchg
mov
movsb
das
sbb
addr16
jle
aas
sarl
xchg
lret
ja,pn
leave
cmp
xor
mov
push
stos
adc
xchg
jae
mov
leave
sbb
mov
xchg
mov
mov
push
mov
sbb
out
insl
adc
jmp
mov
sar
cmp
and
loop
fpatan
int3
jne
or
or
jp
jmp
popf
lock
xchg
sub
aam
pop
dec
ds
sub
lahf
adcl
xchg
out
mov
fdivrl
sub
sbb
bound
inc
pop
pop
adc
ljmp
faddl
pop
push
push
fidivrl
test
movsb
sbb
add
aas
lret
xorb
pop
lcall
add
aam
mov
lahf
outsl
pop
xor
lcall
push
outsl
cltd
lret
and
loopne
mov
mov
jo
ret
dec
xchg
push
and
mov
push
mov
push
addr16
and
fstpl
imul
or
outsb
sub
decl
pop
sub
inc
outsb
sub
das
outsb
mov
mov
enter
loop
mull
test
mov
and
cmc
sbb
mov
lds
das
mov
cmp
dec
ret
jg
fsubl
adc
ljmp
mov
pushf
sbb
sbb
mov
inc
jg
jp
fisttpl
push
push
arpl
std
cmc
adc
frstor
imul
jge
pop
movsb
push
jns
cmp
leave
inc
movsl
js
lcall
add
rcrl
bound
outsb
sarb
sub
jnp
mov
sbbl
in
dec
jae
rclb
mov
jp
je
push
sbb
mov
mov
xor
xor
add
jbe
ret
xchg
ret
cmpsb
cli
mov
adc
xor
ret
lods
push
push
jge
iret
sub
adc
cmp
inc
cltd
aad
jge
fildl
mov
das
pushf
mov
orl
aam
aam
ljmp
jmp
in
pushf
ret
jbe
xchg
cwtl
sbb
stc
outsl
call
add
jno
int3
jle
rolb
movl
xor
and
jae
loopne
inc
pop
ja
stc
lds
mov
roll
mov
or
inc
jmp
pop
std
mov
shlb
test
sbb
testb
ret
mov
mov
dec
arpl
pop
pop
xchg
inc
cmp
dec
or
pop
idiv
push
sbb
loopne
out
lods
mov
mov
pushf
xchg
adc
sbbl
testb
add
mov
push
or
mov
push
pop
xor
mov
pop
stc
into
jbe
adc
aam
sbb
lret
js
addb
lea
mov
movsb
fxch
cld
cltd
pushf
nop
sub
mov
mov
and
sbb
mov
push
jb
xchg
cmp
dec
lea
dec
in
cmp
push
and
dec
test
and
adc
sbb
cli
pop
pop
jg,pn
pop
nop
jae
add
sbb
cmpb
push
cmc
sub
aad
faddl
mov
dec
cmp
mov
cld
test
enter
outsb
sahf
xchg
lock
adc
and
and
subb
stos
cmp
int3
xchg
cmp
xchg
add
mov
add
in
mov
jg
imul
and
ss
lea
pop
or
push
xor
test
pop
cmp
rclb
subl
insb
xor
cmc
push
xchg
sbb
sub
test
sbb
add
repnz
popa
clc
insb
jmp
mov
fs
ret
and
aam
in
sahf
push
xor
outsb
xchg
pop
mov
mov
push
ret
add
les
sub
mov
adc
push
movsb
cmp
sub
aad
xchg
mov
iret
jo
or
or
lea
xor
jns
jle
fildll
sbb
push
clc
pop
sbb
xor
jl
and
xchg
clc
enter
test
xchg
sub
xor
fwait
sahf
jno
xor
jge
jmp
fs
xchg
test
pop
stos
dec
mov
cs
sbb
cmp
enter
lcall
or
orl
dec
sar
inc
dec
push
pushf
shlb
add
popf
or
rcrb
leave
push
scas
dec
out
and
sbb
pop
add
inc
aaa
add
sti
push
imul
cs
test
sahf
aam
imul
fidivrl
in
mov
dec
jg
test
mov
jle
xchg
pop
stos
or
cmc
std
jo
jle
movsl
mov
das
leave
sbb
sarb
push
cli
adc
mov
popf
mov
add
sub
cmpb
mov
pop
movsl
xor
out
das
mov
mov
mov
xchg
cwtl
cli
out
stos
adc
lds
fdivrl
aas
or
sub
dec
cmp
addr16
int3
jns
sbb
ss
jl
stc
dec
psrad
fwait
push
sbb
pop
push
pop
or
rorb
sarl
pushf
push
lock
and
push
mov
adc
mov
adc
std
in
test
jb
jecxz
shll
xchg
mov
arpl
cli
adc
decb
inc
jmp
test
pop
push
cmc
ud2
mov
shrl
and
in
xor
loope
jb
ja
add
adc
mov
aaa
sbbb
and
pop
mov
jne
cmp
jo
adc
cmp
das
and
jne
or
jns
jbe
sub
push
test
shll
jbe
pusha
out
add
fs
mov
loopne
add
clc
insb
lret
and
jne
sub
out
fnsave
push
inc
hlt
inc
lods
ds
sarl
test
cmpsb
push
xchg
fistpll
jae
inc
ror
pop
jge
out
jnp
pop
sbb
addr16
pop
ds
mov
test
sbb
ret
push
jno
movsl
mov
mov
sahf
adc
mov
xor
bndldx
fdivr
jge
mov
es
fisttpl
popf
push
xor
addl
cld
push
scas
mov
dec
in
insl
mov
insb
inc
pop
sub
lock
sub
scas
jmp
and
pop
pusha
and
imul
ljmp
sbb
scas
movsb
xor
cwtl
movsb
sahf
sub
outsb
pop
jg,pn
fildl
es
shr
aaa
ret
out
cs
repz
mov
loopne
push
dec
mov
sarb
mov
ss
repnz
dec
imul
scas
sub
sbb
and
out
mov
mov
sti
inc
mov
lods
pop
ja
dec
add
pop
mov
rol
repz
insl
or
jl
pop
call
push
mov
and
adc
cmp
xor
bound
mov
mov
test
imul
adc
in
cmp
pushf
jae
stos
dec
cmpb
std
inc
in
xchg
gs
mov
pop
jle
xchg
add
fildl
pop
mov
push
xchg
mov
setae
pushf
clc
sbb
push
ret
jmp
roll
sbb
data16
or
movsl
pop
loopne
jne
aad
cmp
jmp
or
ja
out
push
mov
and
sub
ficoml
sbb
fs
jge
mov
aad
shlb
mov
push
bound
mov
xor
push
and
sub
cmp
jp
xchg
adc
cmp
and
leave
xchg
clc
jne
pusha
jmp
rclb
inc
and
ss
or
cmp
dec
mov
add
cs
mov
lahf
cli
insl
daa
inc
and
mov
cmp
icebp
mov
jecxz
out
repz
cmpsl
pop
or
ret
insl
push
hlt
js
scas
xorb
pop
xor
xadd
aad
push
xchg
sahf
movsl
rclb
push
lret
pop
scas
push
shll
les
subb
nop
daa
xor
sub
repz
out
mov
call
shr
pop
jmp
jg
sbb
mov
cmp
or
add
jle
aaa
das
popa
lock
inc
xchg
push
dec
shlb
xor
sub
dec
pop
or
ljmp
in
std
rcll
mov
jge
push
cmpsl
push
sub
cmpsl
xlat
mov
sbb
scas
xor
loope
out
int
imulb
mov
add
testb
lods
test
je
xchg
fcoms
repnz
mov
js
jbe
shll
imul
pop
rcrb
shrl
add
stos
pop
pop
les
sub
je
push
pop
stc
xchg
sbb
test
xchg
sub
mov
jo
aam
adc
mov
shl
inc
lahf
pop
lock
fildll
out
js
rorl
xor
je
and
mov
fistps
dec
pop
out
je
shlb
and
rclb
mov
xchg
and
pop
xchg
adc
push
out
leave
das
je
dec
shl
sbb
xchg
pop
adc
out
js
fldcw
push
xor
add
mov
iret
cmp
cmpl
std
fnstenv
mov
addb
rcl
inc
stos
inc
in
push
insb
xor
int3
jbe
cmpl
push
mov
ja
push
dec
or
stc
cmp
iret
or
insb
sti
pop
dec
call
outsl
xchg
pusha
movsl
push
fwait
jae
ror
in
fcompl
sub
fcoml
add
sbb
insl
mov
cmc
or
ljmp
shl
hlt
inc
bound
popf
cmp
mov
mov
cmp
sbb
cwtl
push
mov
xchg
dec
mov
add
fs
push
mov
lcall
cmp
or
mov
ds
pop
cmp
sbb
adc
sbb
loop
stos
mov
add
lret
fcomps
xchg
popa
sbb
test
pop
push
and
ja
jns
icebp
inc
insl
dec
push
mov
mov
mov
fistps
repnz
push
lret
dec
xor
inc
psrad
mov
and
sarl
aam
cwtl
mov
xchg
lock
imul
cli
push
mov
jo
add
rol
scas
push
cmc
sbb
push
out
mov
sub
scas
sub
ficoms
lahf
jne
mov
push
and
push
dec
mov
sbb
xor
dec
or
pop
ret
rcl
fsubl
int
sbb
sbb
inc
lds
shr
leave
rorl
xor
pop
xlat
hlt
dec
test
rcll
xor
mov
or
mov
movsb
cmc
in
and
mov
xor
jl
in
push
xchg
xchg
in
fs
or
jne
sbbb
adc
xor
icebp
inc
xor
scas
mov
cli
add
fists
xor
add
mov
cmp
int
nop
mov
xor
call
lahf
aas
add
mov
push
sub
leave
shlb
stos
push
enter
pop
jl
fists
cs
and
lods
aas
les
enter
jmp
rcrl
test
pop
test
ja
lcall
lods
jae
hlt
jecxz
dec
lock
lcall
int3
lock
or
out
inc
insb
pop
xchg
add
repnz
pushf
stc
hlt
or
adc
int
stos
sbb
repnz
add
jl
inc
andps
cmpsb
jbe
lock
addr16
popa
or
mov
das
aam
fsub
clc
jns
cmpsl
mov
test
outsl
ret
popa
mov
pusha
xlat
sub
cmp
jp
xor
pusha
mov
push
repz
pop
mov
jnp
xor
jle
inc
outsl
aas
push
sbb
cmp
imul
xor
dec
push
add
mov
mov
prefetch
or
cmpsl
pop
mov
lods
sub
inc
data16
shl
pop
mov
sarb
xchg
dec
negb
ficoml
mov
pop
pop
sub
nop
out
jno
sbb
test
xchg
orl
insl
lock
cmp
ds
mov
clc
mov
mov
lcall
ret
pop
cld
stos
in
loop
stc
adc
add
clc
iret
sti
mov
insl
fsubrs
hlt
cli
jmp
lss
cmp
jb
sub
sub
fcoms
dec
cmp
ljmp
into
jae
xor
insl
bnd
js
ret
and
pop
hlt
xchg
fisubrl
es
jae
push
out
and
adc
int
sahf
jl
and
push
or
jo
cmc
popl
out
insl
lret
inc
loope
dec
out
jb
cmpsb
scas
jno
ds
dec
pop
jo
or
in
push
and
mov
cltd
scas
push
test
sub
ret
sahf
sbb
in
inc
mov
lahf
andl
shlb
add
inc
aad
mov
pusha
fstp
inc
sti
imul
or
push
push
and
jb
leave
pusha
cmpsl
fldt
inc
cmpb
and
sbb
fwait
mov
repnz
cmpsb
xchg
push
stos
pop
xchg
les
lods
sahf
mov
test
in
fsubrp
mov
mov
or
lahf
mov
ret
out
fistpl
xlat
es
lret
mov
ror
pop
outsl
or
xor
movl
sbb
adc
test
popf
bound
sbb
add
loop
cmp
pop
or
bnd
sub
push
and
inc
rcll
mov
lea
fs
insb
repz
push
add
jbe
aam
jge
pop
mov
xor
int
xchg
push
sti
hlt
stos
mov
cmpl
mov
dec
push
jbe
add
mov
stc
lock
std
leave
push
pop
mov
jno
adc
insb
pop
aas
aas
push
rdtsc
sahf
inc
sbb
push
aam
dec
xchg
mov
nop
jns
test
pushf
int
adc
mov
cs
leave
gs
sbb
fisttps
loopne
xor
sub
or
push
push
xchg
insl
out
cmp
aam
sub
cwtl
lcall
idivb
sbb
sub
ret
fcompl
jmp
fs
fsubrp
mov
xor
rcrb
adc
push
sbbl
mov
xchg
jb
dec
stos
mov
push
adc
mov
push
dec
int
leave
sbb
cmp
mov
dec
sarb
xorb
int3
xchg
sub
rorl
sti
inc
and
roll
into
jnp
or
scas
aam
int
je
lret
mov
frstor
popf
and
jecxz
flds
jb
aas
hlt
push
ljmp
cmp
inc
or
repnz
shlb
ret
scas
aaa
cli
test
test
push
mov
pop
dec
sub
sbb
lahf
or
and
into
movl
test
cmpsb
jo
cmpsb
xchg
int
in
pop
adc
insb
icebp
bound
daa
or
fisttpll
movsb
jecxz
fs
mov
cmpsl
jmp
or
sarl
ja
xor
add
pop
pop
inc
push
adc
dec
pop
mov
bound
xlat
shrb
dec
ljmp
inc
push
sub
xchg
faddl
dec
fimuls
int3
xchg
sbb
pop
or
cltd
add
xorb
and
test
ss
sub
cvtpi2ps
cmp
pop
sub
lcall
pop
jge
arpl
lahf
and
int
pop
sub
xchg
in
xor
cld
test
popa
repz
or
jmp
aaa
lcall
fsubrl
push
ds
mov
pop
repz
jl
lds
pop
std
xchg
addl
faddl
sub
inc
cmp
add
and
jle
stc
mov
adc
orl
lods
mov
jle
jge
movsl
xor
mov
dec
inc
int
xchg
cmp
fnstsw
jne
sub
mov
lods
inc
dec
jb
pop
gs
pop
gs
fcoms
push
sub
lds
or
cwtl
in
mov
mov
daa
int
repnz
or
inc
imul
loope
pop
add
fiadds
int3
jo
mov
xor
popl
cmp
mov
and
jae
mov
push
fiaddl
in
or
fdivl
add
push
call
inc
add
test
cmp
lea
inc
daa
ret
push
mov
ret
and
test
jns
dec
ret
fildl
sbb
or
push
test
in
jmp
xchg
or
lds
jecxz
mov
scas
je
xor
stos
test
xchg
mov
or
or
pop
divb
notb
inc
jmp
mov
sahf
fsubr
andl
cmp
lock
xchg
ds
pop
jo
fwait
sbb
jnp
or
cmc
add
imul
shlb
push
push
repnz
out
mov
loope
imul
jns
cmp
or
cli
sub
and
icebp
push
sub
xchg
adc
sar
sbb
jle
cmp
jp
cmp
nop
mov
ret
subb
sbb
lock
lret
stc
xor
aaa
popf
popf
cmp
sub
cmp
hlt
dec
dec
mov
add
inc
rcll
out
repz
mov
imul
inc
mov
xor
imul
push
ret
dec
mov
xchg
pop
lock
mov
and
pop
or
push
mov
test
stc
int
sub
movsb
repnz
dec
cltd
icebp
or
xchg
mov
inc
push
jne
lahf
cmp
pop
lea
test
subb
test
cmp
incl
pop
mov
push
and
xchg
pop
or
aam
leave
and
ja
sub
ret
das
fmul
xchg
out
into
mov
lea
sbb
rorl
jnp
mov
loope
cltd
push
scas
call
xor
icebp
stc
xchg
push
push
jnp
sahf
add
lahf
and
and
outsl
shl
bswap
mov
iret
les
jnp
or
movsl
xchg
jb
add
xchg
cmp
popa
add
pop
mov
ret
mov
add
pop
ret
out
xor
mov
xchg
jg
mov
xchg
add
jmp
xorb
pop
pop
scas
xlat
and
xchg
push
jg
push
scas
loopne
in
shrb
rcll
fwait
cmc
mov
xchg
enter
jns
ret
xorb
es
add
push
lahf
stos
test
imull
jns
imul
pushf
add
push
mov
xchg
repnz
enter
stos
fs
dec
push
ss
sub
adc
or
fbstp
add
lods
loopne
dec
xlat
leave
pusha
roll
sub
jnp
loope
mov
sahf
and
pop
repnz
mov
sub
push
mov
pop
xchg
cld
outsb
test
gs
repz
mov
push
insl
mov
pop
daa
xor
pop
dec
sti
mov
sbb
ficompl
push
add
movsl
leave
add
outsb
gs
shll
fdivrs
ja
sub
scas
push
pop
xchg
imul
sbb
mov
cs
sub
dec
pusha
ss
mov
adc
mov
add
clc
lret
outsl
dec
ret
or
fwait
pop
push
popf
popf
inc
sbb
test
insb
shl
cmp
mov
out
addb
js
mov
cmc
sbb
andb
test
mov
and
adcl
popf
shrl
gs
adc
clc
out
or
dec
push
lods
sahf
cwtl
or
cmp
adc
cmp
cli
inc
nop
ss
iret
bound
cmpl
orb
fcmovnu
loopne
or
sbb
subb
mov
xor
movsb
cltd
inc
fidivrs
in
mov
adc
inc
cmp
mov
out
into
cmp
sbb
cmc
pop
add
mov
jns
dec
inc
out
cmc
dec
test
and
sub
daa
mov
cwtl
lock
shl
jl
fwait
mov
dec
push
mov
xchg
outsl
mov
push
vfrczpd
ss
lods
mov
cmpsl
out
jmp
jmp
xchg
stos
xchg
jg
cmp
je
inc
fsts
out
cwtl
push
nop
bnd
aam
aaa
repnz
push
xchg
sub
push
mov
lcall
add
stc
sbb
repnz
add
and
stc
mov
adcl
jne
jg
lds
hlt
cmp
pusha
fbstp
iret
mov
xorl
mov
adc
push
in
mov
and
mov
jno
mov
cmpb
test
push
in
out
mov
adc
xchg
out
cwtl
push
push
push
sub
push
pop
rcrl
aaa
lock
pushf
les
dec
cmc
pop
shr
lea
int
fwait
cmc
jnp
xchg
cltd
mov
xchg
or
inc
jbe
push
fdiv
movsb
rorb
nop
mov
fcom
ja
in
or
mov
and
or
rcl
aas
dec
mov
outsb
lds
test
mov
pop
xchg
js
inc
sarb
xor
bound
mov
xor
and
mov
push
gs
int
pop
lods
sub
add
jbe
xor
lods
loop
sbb
mov
lods
jle
rolb
pop
ret
daa
shlb
pusha
jns
pop
jl
cld
jbe
insl
movsl
pushf
mov
jb
xrelease
pop
and
jbe
lret
stos
fldt
pusha
inc
out
loop
fstpt
iret
xor
jno
mov
popf
dec
jp
mov
rorb
pop
pop
sbb
adc
push
or
sub
popf
jo
sub
popa
inc
mov
pusha
icebp
lods
push
mov
movsl
or
inc
aaa
ret
arpl
xchg
fs
push
add
add
out
adc
inc
inc
add
xlat
mov
mov
fdivrl
and
hlt
xchg
xchg
ret
jle
jbe
mov
lahf
imul
dec
push
popa
pop
mov
mov
cli
xchg
repnz
push
pop
mov
inc
mov
daa
xor
jmp
xchg
enter
cmp
imul
rcr
xor
out
mov
imul
mov
and
push
outsl
ror
fidivl
mov
xchg
loope
std
dec
mov
test
movl
sbb
cmpsb
lcall
sub
pop
or
mov
add
lds
jle
aaa
ss
dec
fs
adc
cmp
lea
movsb
aam
mov
aad
push
test
push
jb
and
mov
js
aad
pop
outsb
push
and
fcmovnbe
cmp
loope
icebp
push
inc
inc
mov
jmp
repnz
mov
xchg
cmpsb
add
jns,pn
in
aaa
xorb
jno
lahf
xchg
outsb
sbb
push
outsl
or
jbe
add
inc
lods
dec
sti
pop
jnp
ret
or
insb
mov
call
add
and
pop
add
lahf
mov
das
clc
popa
inc
sub
out
xlat
in
aad
es
push
lahf
jecxz
and
adc
pop
insb
mov
push
aaa
jg
mov
adc
xchg
xchg
fwait
xor
inc
icebp
into
imull
repnz
loop
lods
sub
xchg
daa
out
clc
adc
pop
add
xchg
or
jecxz
rorb
jmp
or
insb
fnstenv
nop
cwtl
sbb
mov
ret
mov
mov
xor
adc
push
push
mov
movsl
aaa
inc
pop
dec
cmc
lahf
adc
out
in
jl
mov
mov
jle
pop
push
shr
or
sub
push
lock
lahf
mov
movsb
sbb
data16
xor
decb
test
xor
loop
insb
jns
in
insb
repnz
out
add
pushf
dec
and
mov
and
mov
imul
mov
addl
test
push
sub
mov
test
pop
pop
or
imulb
ss
enter
adc
dec
and
push
dec
repnz
mov
sub
test
movb
push
mov
fsts
and
inc
cmp
mov
out
dec
stos
test
xor
into
out
push
xchg
cmp
push
divl
cltd
xchg
ds
ret
aam
scas
xor
xchg
mov
inc
adc
cli
movsb
sub
add
pop
lcall
add
xor
jns
adc
imul
scas
sub
test
movsl
push
lcall
and
sbb
push
adc
jb
mov
nop
jns
jb
aas
into
jns
or
jo
push
adc
daa
jg
xchg
iret
leave
cmp
pop
sub
scas
fiadds
in
cltd
sub
mov
xchg
cmpsb
sub
mov
das
xor
and
adc
jp,pt
mov
das
jge
cmp
nop
dec
cmpl
push
cli
dec
clc
outsb
mov
ret
jno
outsb
daa
inc
loopne
pushf
pushf
mov
and
shlb
cld
cmp
sub
mov
outsb
shll
mov
movsl
rcr
subb
call
pop
sub
sahf
xchg
jns,pt
lods
clc
sbb
lea
daa
add
nop
lcall
ror
cli
push
insl
and
fs
rcl
lret
icebp
adc
mov
fcmovu
add
sar
adc
test
sub
dec
pop
jb
mov
cmp
icebp
in
add
xor
jl
mov
dec
daa
aad
and
out
sbb
lea
dec
mov
cmp
and
popf
cmp
push
mov
lret
js
sub
sbb
in
dec
icebp
stos
sub
xor
xchg
jmp
add
in
sbb
fwait
adc
call
jo
ljmp
bound
shll
int3
notb
popf
fisubl
jno
jno
aas
lcall
ja
hlt
mov
pop
xchg
cmp
inc
ficomps
add
sbb
mov
lret
or
add
imul
stc
std
addr16
ljmp
mov
addr16
inc
inc
xchg
push
int
mov
sub
inc
jle
jne
inc
lds
jo
scas
cmp
push
lahf
int3
fidivrl
xor
jl
scas
mov
xor
sbb
out
shlb
fldenv
ljmp
neg
add
test
sub
push
out
xorb
pop
lcall
cli
or
rcrb
mov
pop
add
inc
out
gs
roll
mov
xchg
dec
push
fdivr
sub
icebp
pop
test
lcall
ret
cmpsb
je
jle
push
jl
xor
je
mov
incb
xchg
stos
and
iret
into
pop
les
lcall
dec
or
jb
rcrb
aaa
push
mov
dec
dec
cld
jp
imul
ret
cmp
or
jo
xorl
aaa
mov
cltd
flds
outsl
xor
jo
xchg
sar
sub
sub
xlat
or
scas
mov
mov
xor
cmc
jo
push
cmp
test
xchg
mov
xlat
loop
mov
dec
test
gs
fwait
lcall
movsl
out
pop
sbb
lock
or
mov
iret
sahf
xor
scas
ss
xor
inc
jns
ja
roll
aad
jecxz
cltd
dec
mov
sbb
pop
jbe
imul
mov
cmpb
adc
mov
hlt
pushf
popf
push
pop
push
push
scas
aad
pop
dec
movsl
call
adcb
and
fisubrs
aad
ds
clc
pop
or
mov
sub
fildl
push
jge
inc
push
cmpsb
stos
hlt
in
inc
sahf
and
adc
es
repnz
pop
xchg
jbe
sti
add
imul
mov
lea
gs
ja
movsl
xor
push
sub
ljmp
mov
xchg
pop
mov
mov
pop
ret
jne
cmpb
movsl
adcb
lea
test
adc
rcll
in
inc
cmpsb
push
into
jg
andl
fstpt
sub
mov
xor
call
cmp
xchg
inc
ret
stc
sbb
out
dec
mov
mov
mov
in
pop
icebp
xchg
pop
arpl
adc
in
enter
pusha
or
imul
push
push
lahf
mov
jne
pop
sbb
lods
dec
inc
jb
pop
mov
flds
sbb
fcoms
xchg
outsl
iret
lret
xor
into
dec
mov
push
xchg
pop
in
mov
cmp
push
ja
inc
cmp
inc
cmpsb
test
jbe
stc
rcll
stc
or
or
inc
push
sub
mov
xchg
adc
ret
into
call
jnp
divl
lods
into
enter
mov
dec
js
daa
repnz
xchg
add
push
jge
xor
mov
inc
fidivrl
jne
pop
mov
cmp
pop
outsb
ret
cmpsl
lret
or
push
ss
lret
shll
xchg
sub
xor
and
push
cmpsl
sbb
in
add
mov
nop
xor
inc
ret
add
xor
stos
sub
and
int3
jns
inc
push
das
cmp
mov
mov
xlat
and
xor
sub
scas
cld
in
mov
adc
cmc
xor
test
xor
ja
adc
out
mov
xlat
inc
mov
addb
lods
push
mov
in
cmc
jle
repnz
ds
or
std
lds
fmuls
push
and
and
or
xchg
test
push
pop
inc
inc
mov
dec
in
test
jb
cwtl
inc
imulb
arpl
push
mov
mov
pop
mov
jno
adc
and
cmp
inc
cmpsb
stos
xchg
mov
test
push
xor
dec
adc
in
xor
adc
js
jl
sti
nop
push
mov
cmp
mov
lds
xchg
jg
lock
in
imul
ds
xchg
mov
jl
inc
cmpsb
mov
out
lcall
mov
repz
jno
gs
mov
in
ret
cmp
loope
cmp
sbb
inc
cmpsb
mov
push
jne
popa
fists
lea
loop
in
inc
test
sbb
lea
xchg
cmp
cmpsb
adc
out
sub
lret
lahf
lret
inc
pop
out
cmc
mov
int
movsb
push
cmp
pop
add
jmp
push
hlt
dec
mov
test
imul
repz
sub
jns
shlb
xchg
or
add
orb
fidivrs
add
inc
xchg
dec
stos
inc
inc
stc
popl
cmp
dec
rcll
negl
gs
scas
daa
hlt
dec
push
push
outsb
and
pmuludq
jmp
xchg
inc
mov
xlat
fs
dec
cmc
mov
stc
mov
ja
pop
in
sti
jno
loop
ret
daa
pop
or
aaa
mov
or
xchg
mov
loope
push
fldcw
xchg
aaa
imul
sub
enter
xchg
push
xchg
mov
pop
out
mov
jl
loop
pop
test
push
add
inc
adc
stos
mov
or
mov
push
loop
stos
sub
mov
mov
mov
rol
dec
push
sahf
cld
push
mov
fildl
jg
mov
dec
mov
popf
inc
test
fdivrl
in
aaa
data16
andb
xor
xchg
cmp
jge
adc
insl
mov
in
in
ret
imul
popa
popa
and
test
test
mov
jp
push
imul
push
xlat
xchg
xor
jg
sbb
aaa
pop
call
sbbl
and
sub
pop
cmp
pop
mov
or
mov
or
cmpsb
mov
loop
jns
xor
mov
fcompl
sub
jnp
repz
push
and
lret
in
test
push
pop
bound
stos
imulb
xchg
int
inc
loope
push
pop
inc
arpl
mov
test
sarl
cmp
pusha
data16
mov
or
daa
push
gs
sbb
call
jge
pop
sub
mov
lds
jl
sbb
pushf
iret
cmpsb
aaa
and
mov
push
dec
lahf
sub
lret
and
jb
and
mov
je
repz
mov
push
dec
sub
lods
stos
stos
inc
push
jmp
sub
xchg
mov
out
push
out
jmp
mov
push
push
push
inc
sahf
add
cmp
movsl
outsl
sub
jbe
repnz
int
dec
pop
mov
ja
das
mov
mov
ss
fcompl
adc
inc
xchg
or
js
fisubl
xor
and
xchg
ffree
xchg
jmp
out
adc
mov
mov
adc
mov
cmp
fldcw
out
loopne
adc
mov
pop
dec
xlat
cmp
fs
and
lahf
dec
xlat
xlat
sub
mov
fdivrp
add
fadds
inc
les
fimull
cmp
xor
sbb
sub
leave
mov
out
jle
xor
mov
adc
sub
sub
xchg
xor
call
js
xchg
frstor
flds
out
mov
mov
jg
push
push
inc
es
cmp
insl
cmpsb
leave
pushf
inc
lcall
cmp
lcall
push
mov
xchg
stc
xchg
cld
pop
js
lds
out
jo
cmpsb
icebp
pop
cmp
mov
mov
ret
imul
mov
sub
mov
adc
leave
dec
mov
cwtl
divb
pop
jo
xlat
test
or
js
xchg
lds
jg
js
mov
push
push
fsub
add
jp
out
and
popf
jle
out
fs
cmp
aaa
xor
pusha
nop
js
and
mov
pop
lock
lahf
insb
push
cmp
adc
loopne
sbb
mov
popf
pop
testb
test
addr16
jbe
test
mov
lods
and
popf
test
jmp
loope
mov
fucom
loope
mov
fs
scas
daa
lret
mov
cmp
enter
cmp
stc
sub
call
cld
sub
inc
fmull
push
or
sbb
fnclex
cmp
fistps
jb
push
push
and
outsl
adc
sub
adc
adc
and
xchg
lock
cli
dec
push
cmp
cmp
sti
push
out
jge
scas
xchg
and
mov
pop
ja
sub
jae
arpl
ds
ret
js
jp
arpl
gs
mov
mov
mov
push
in
xchg
add
dec
jecxz
sub
mov
cmp
out
mov
cmpsb
or
mov
xor
or
add
mov
xchg
mov
inc
push
mov
jmp
inc
adc
das
mov
jno
sub
pop
fbld
add
out
rcrb
dec
subb
sbbl
mov
mov
imull
jecxz
cmpsb
mov
inc
add
and
mov
mov
test
push
cmpl
or
xchg
sub
int
inc
icebp
leave
xlat
bound
pop
scas
adc
inc
xchg
es
xor
pop
cmpsb
in
cmp
adc
jae
push
dec
imull
in
adc
sbb
xorl
and
or
jo
fldt
insl
imul
leave
lret
repz
dec
sbb
test
out
rcrl
outsb
push
sbb
in
pop
push
push
sub
cmpsl
cmp
mov
sub
jno
call
ss
mov
in
jle
mov
and
inc
repnz
xchg
lock
sub
adc
das
or
arpl
adc
fcompl
add
mov
ja
cmp
movsb
adc
int3
mov
dec
cmp
cld
nop
lahf
cmpsb
xor
divl
pushf
and
jge
in
pop
out
mov
and
scas
fadd
repz
xor
lret
and
leave
mov
lock
mov
adc
jle
jb
mov
fistps
xor
cmpsl
lods
add
lcall
jno
scas
jnp
mov
shrb
dec
sub
and
mov
into
outsb
andb
or
fsubs
gs
mov
fwait
pop
mov
stc
mov
or
xor
ret
repnz
cwtl
pop
pop
jnp
out
or
std
arpl
bound
cli
push
daa
mov
pop
cltd
inc
jmp
push
or
stos
imul
mov
idivb
nop
iret
frstor
out
ss
shlb
or
arpl
xchg
inc
cmp
mov
stos
int3
xchg
out
idivl
sub
in
xor
dec
cmpsb
imul
xor
xorl
xchg
inc
enter
mov
lds
js
xchg
mov
dec
into
in
adc
test
mov
mov
pop
jecxz
insb
fnstenv
push
clc
mov
push
jno
daa
push
lret
cmp
fisttpll
cmp
rorl
jl
cmp
std
std
lcall
test
dec
je
or
jb
leave
dec
sub
bound
call
jns
sahf
adc
loope
xlat
fs
lods
mov
int3
cmp
jg
xchg
dec
mov
or
mov
into
dec
cmpsl
mov
loop
sub
mov
mov
sub
cs
addr16
iret
iret
adc
or
test
xchg
shll
arpl
adc
and
ret
pop
negb
les
jns
aas
and
mov
sbb
sahf
pop
cmp
jnp
ror
aaa
enter
inc
push
sub
mov
inc
and
push
stos
sti
jno
xchg
sbb
push
addr16
mov
and
xchg
incb
jae
pop
lds
fsubrs
clc
mov
mov
out
stc
out
jl
jb
xchg
sub
rcrb
xor
push
addr16
adc
addr16
or
push
popf
cmp
into
jle
test
jbe
hlt
xchg
test
pop
leave
das
enter
fs
mov
mov
mov
add
push
scas
push
frstor
jnp
adc
add
imul
pusha
cwtl
jg
iret
orb
mov
in
sbb
push
xchg
cwtl
mov
add
adc
jne
push
mov
mov
xor
sbb
jmp
mov
or
fimull
mov
lahf
push
int
outsb
jecxz
movsl
jb
add
loop
divl
imul
arpl
jns
cwtl
or
mov
mov
out
push
jg
mov
push
mov
and
addr16
cmpsl
imul
add
dec
push
add
pop
push
sbb
xor
inc
orb
out
test
test
xlat
addr16
cmpsb
inc
fdivl
pop
push
mov
xchg
in
cltd
incb
add
xlat
repz
cwtd
mov
sbb
inc
ja
movsb
mov
imull
or
sbb
repz
nop
mov
xchg
xlat
mov
or
testb
pop
mov
or
dec
addr16
mov
jae
push
in
cmp
sub
mov
cmpsb
cltd
dec
subl
mov
test
sbb
aam
xor
mov
fistl
imul
jg
dec
jp
inc
push
cwtl
clc
xor
repnz
xchg
xchg
and
arpl
arpl
or
es
cwtl
pop
xchg
or
and
mov
xor
out
pop
mov
inc
pop
cwtl
sub
jg
popf
mov
in
jmp
stos
out
sbbl
dec
xor
sbb
cli
loopne
test
imul
cld
xchg
rcl
xchg
popf
adc
push
pop
pop
xchg
sbb
xor
setg
xchg
fcoms
ret
dec
inc
mov
mov
xor
lea
roll
addr16
cmp
ret
fs
mov
js
or
mov
xor
mov
loopne
pop
insb
pop
je
shll
add
cmpl
push
push
pushf
push
fs
lahf
in
add
movsb
add
daa
sar
jl
push
mov
push
cs
jmp
ret
clc
in
ret
or
dec
mov
inc
ret
stos
mov
fcmovnb
daa
pop
adc
loope
gs
xchg
push
pop
addr16
pop
popl
popa
int
cmp
push
addr16
cmp
or
in
sub
dec
pop
jnp
mov
into
push
popa
les
cmpsl
stc
mov
push
adcl
push
xor
enter
jmp
loopne
add
fisttps
roll
idiv
mov
mov
test
push
std
pushf
jno
in
fidivrs
inc
sarb
mov
ja
mov
std
es
popf
lcall
hlt
add
out
sbb
add
ss
rcrb
cmp
mov
scas
movsb
movsb
pop
aas
xchg
lock
lock
and
mov
mov
lods
aad
push
jmp
int
in
out
pop
je
mov
cltd
outsl
scas
sbb
fdivr
bound
or
xor
xor
pop
and
cmp
pop
repnz
shl
js
ljmp
mov
sbb
lret
dec
into
adc
xchg
add
sub
mov
rclb
xlat
dec
push
mov
add
fmuls
cmc
cs
adc
dec
xchg
jg
cmpsl
jbe
sbb
nop
cmp
data16
xor
jg
out
test
mov
int3
push
int3
sahf
dec
pop
cmp
cmpsl
scas
hlt
scas
imul
xor
dec
popf
or
les
insb
gs
mov
mov
lea
jbe
pushf
or
ss
rcr
movsl
stc
stos
gs
jne
adcl
in
ss
mov
loopne
dec
pop
bound
and
shll
adc
adc
xchg
jp
shll
sbb
bnd
sub
sbb
test
mov
data16
cwtl
mov
les
loopne
pop
pop
sbb
daa
xchg
out
and
dec
mov
mov
pop
and
push
shrb
mov
dec
jmp
addr16
jg
in
xor
cltd
cs
inc
cli
mov
je
and
sarb
jmp
xchg
xor
jg
rolb
pop
test
neg
and
int
push
sbb
adcl
stc
orb
inc
sbb
imul
scas
pop
stc
fwait
dec
aad
int3
push
int3
mov
pop
dec
stos
mov
pop
fistpl
mov
cwtl
loopne
insl
popf
mov
adc
xchg
hlt
pop
and
ds
movsb
repnz
test
inc
add
fldt
pushf
xchg
cmp
dec
jmp
jle
push
movsl
popf
addl
mov
mov
jge
cs
aaa
sbb
inc
mov
sbb
pop
imul
fs
js
insl
jmp
rorl
das
mov
call
xchg
or
test
mov
mov
mov
dec
out
fisubrl
in
sti
pop
jp
test
hlt
rolb
int3
xor
add
fmuls
movsl
inc
mov
call
popl
enter
and
pop
divb
push
adc
outsb
sbb
scas
and
orl
mov
rolb
dec
addr16
add
mov
jo
in
ret
cmp
aad
cmpsl
inc
xchg
repnz
jns
mov
clc
push
push
addr16
jle
cbtw
pop
add
pop
xchg
filds
dec
addb
push
lret
fstp
pop
jbe
int
fwait
pop
push
nop
lock
stos
or
int
dec
cwtl
dec
hlt
adc
clc
inc
pop
fists
or
or
add
and
repz
push
pushf
dec
imull
add
and
rorb
pop
jmp
popa
cmc
out
rcrb
loop
and
movsl
popl
xchg
and
loopne
ss
insl
shlb
push
sub
jecxz
popf
lds
pop
mov
repnz
adc
sub
cmp
dec
inc
jbe
aam
sbb
dec
mov
jnp
add
xchg
push
xchg
adc
es
and
ss
jg
push
shl
ret
cs
sub
shl
xor
fcompl
cmp
and
in
mov
inc
lea
sub
pop
jo
pushf
xchg
fnstenv
xchg
cs
dec
sahf
push
push
mov
dec
cltd
stos
out
dec
inc
into
sbb
mov
and
mov
mov
inc
cmc
mov
sub
inc
jbe
push
mov
lods
idiv
fildl
aas
sbb
test
test
pop
fistps
aaa
cmpl
jns
dec
cmp
es
sarl
sti
test
dec
and
test
or
pop
jge
mov
in
and
jecxz
pushl
je
sti
sub
mov
inc
stos
mov
popa
in
cmpl
movsl
icebp
jge
inc
cmp
jne
pop
rcrb
pop
nop
sub
jmp
inc
and
dec
mov
test
cmp
int
mov
movsl
dec
movsb
shll
mov
cmc
add
jge
pop
inc
bound
icebp
add
fwait
mov
imul
in
sar
cmp
stos
rorb
and
inc
insb
adc
jge
mov
push
adc
js
dec
pusha
mov
ljmp
lahf
in
jae
pop
jmp
aad
push
dec
repz
nop
push
sub
gs
mov
lgs
and
or
ja
aad
jp
imull
out
cmp
cmp
das
or
leave
dec
loop
ja
mov
jg
test
in
call
popf
gs
xchg
or
leave
stc
xor
jmp
cmp
xor
inc
cmp
in
ljmp
iret
sbb
out
cmpsb
push
lahf
jmp
xchg
and
sub
sti
aaa
jae
dec
sbb
imul
iret
or
cmp
fwait
sub
lahf
mov
cs
dec
inc
add
xlat
dec
jmp
or
imul
add
dec
in
xor
adc
jp
inc
xchg
jno
std
push
scas
aaa
pop
out
rorb
pop
ror
adc
inc
inc
sub
cwtl
inc
dec
push
pusha
pop
loope
mov
cwtl
jp
sbb
mov
sahf
in
lahf
mov
mov
mov
xchg
sbb
or
mov
sub
xor
loopne
imul
nop
andl
loopne
jmp
jle
outsl
pop
cwtl
mov
xchg
cli
sbb
lret
mov
xchg
add
mov
arpl
dec
and
sub
out
ret
pushf
jp
addr16
dec
or
rorl
push
inc
jge
jns
mov
sub
iret
repz
cmp
shll
push
sbb
xor
jle
adc
push
xchg
fs
cmpsb
push
leave
int
les
and
ds
mov
idivl
mulb
inc
or
dec
filds
in
ss
inc
stos
setge
push
mov
pop
jno
sbbb
cmp
jo
inc
cmp
cmc
insl
loope
pushf
loope
cmp
xchg
lds
test
stos
cmc
ljmp
int3
cmp
mov
call
fdiv
sarb
outsl
jns
shlb
mov
int
movsl
ficomps
addr16
push
sub
add
orb
xchg
and
mov
sbb
movsb
arpl
adc
adc
in
data16
jle
das
add
pop
loope
loopne
cmpsb
mov
test
sub
cmp
je
lret
ror
mov
xchg
lcall
pop
and
lock
aad
sbb
ljmp
push
sub
fadd
rcrb
mov
pop
xchg
nop
jmp
and
loope
push
shrb
rcrb
and
das
daa
nop
fisubrl
aas
mov
sbb
ds
adc
divl
cmp
xchg
xorl
mov
mov
lret
cs
loopne
iret
ret
dec
add
or
or
sub
std
xor
je
mov
rol
aaa
int3
imulb
mov
nop
and
dec
gs
mov
mov
lea
mov
fbld
jp
scas
jecxz
fwait
aad
ja
js
sbb
popf
add
pop
xchg
push
int
sahf
aas
mov
clc
in
outsl
nop
std
add
pop
mov
dec
dec
sub
adc
mov
mov
in
pop
int
lea
mov
test
cmpsl
xor
sbb
aas
mov
loope
fs
lods
jmp
cmp
jb
js
lcall
mov
inc
jge
mov
aas
xchg
cmpsb
or
stos
imulb
or
jne
nop
push
icebp
arpl
fldenv
inc
fwait
lahf
movsb
and
pop
adc
out
and
fistps
iret
cwtl
mov
data16
insb
loope
dec
imul
dec
lahf
pop
mov
sub
mov
mov
xchg
mov
mov
enter
out
mov
lea
lods
mov
inc
mov
mov
in
mov
int3
push
in
and
mov
mov
xorb
aaa
shr
mov
icebp
pop
mov
mov
outsl
addl
adc
push
mov
jmp
fsub
stos
rcrb
mov
mov
inc
sbb
mov
add
and
xchg
lcall
cmpsl
stos
in
pop
or
push
sub
in
mov
mov
pusha
jg
jne
mov
adc
outsb
push
sbb
pop
inc
inc
mov
lods
pop
jge
idivb
xchg
in
mov
andb
mov
sub
and
sub
mov
adc
in
jbe
adc
ret
sbb
sub
out
mov
and
cmp
mov
int
jp
in
decb
pop
lods
scas
mov
jmp
mov
sbb
int3
or
or
lea
adc
enter
cmc
lahf
jno
add
xlat
jo
or
and
mov
in
push
enter
les
or
rol
cmp
shll
outsb
jbe
fwait
pushf
dec
mov
push
push
sub
inc
mov
jecxz
sub
and
gs
in
xor
pop
loope
push
in
mov
out
and
push
xor
or
push
jne
sub
je
stos
xchg
sbb
jo
dec
aaa
mov
subb
jmp
cmp
in
shlb
leave
cmp
fidivrl
xlat
lods
pop
in
dec
inc
and
scas
mov
jmp
rcll
xchg
pop
fs
rcr
xor
mov
jno
xchg
mov
fisttpll
mov
jmp
loopne
mov
lcall
xchg
rcll
sbb
aam
test
mov
dec
out
sub
ja
and
or
repnz
push
sub
xchg
ss
popf
cmp
sbb
pop
js
int
testl
in
xor
fdivrp
mov
pop
xor
lea
xchg
xchg
addb
shll
ss
mov
lods
pushf
lret
jne
dec
addl
push
pop
mov
xlat
mov
lahf
lcall
sub
nopl
repnz
mov
ljmp
call
or
leave
dec
mov
rorb
arpl
pop
push
or
xor
js
mov
inc
je
and
mov
fmuls
cmp
mov
add
outsl
shll
jno
sbb
and
fsub
arpl
arpl
movsl
jmp
insb
push
pop
jo
inc
sbb
call
pop
stos
pushf
mov
or
jne
leave
ret
pop
mov
lret
daa
sbb
lret
adc
pop
test
pop
mov
sbb
hlt
and
scas
call
clc
ret
sbbl
leave
jns
jbe
xchg
fiaddl
or
push
mov
jg
flds
xor
pushl
int3
mov
mov
adc
dec
mov
insb
testb
jge
add
and
mov
dec
leave
push
push
add
jb
pop
pop
cmp
clc
orb
pop
test
pusha
mov
cmc
cmpsb
jecxz
fsubs
or
negl
dec
movsb
ljmp
ret
fdivl
enter
cmp
mov
mov
push
rcr
negl
movl
xchg
lret
or
loopne
xchg
add
push
pop
or
mov
cld
adc
test
mov
dec
push
cmc
int3
mov
mov
xchg
fldt
arpl
stos
mov
cltd
out
mov
xchg
lods
gs
mov
loope
inc
insb
out
test
dec
cmp
add
data16
cwtl
push
out
cltd
adc
sub
mov
lock
push
dec
inc
sub
cmp
outsl
lds
testl
xchg
and
push
sarl
shr
lret
mov
sbb
fwait
ja
push
xchg
es
mov
jno
mov
imul
and
lret
sbb
mov
cmc
je
xor
jecxz
iret
das
mov
call
push
aam
sbb
sub
mov
jmp
into
inc
jne
adc
mov
push
mov
xorl
or
add
fs
fld
cs
in
stc
mov
sbb
jae
xchg
and
and
mov
aaa
cmpsb
adc
cli
push
adc
and
int3
fstpt
and
cmp
mov
cmp
arpl
addl
arpl
mov
adc
jmp
xchg
fadds
sbb
add
ret
subl
and
test
js
xchg
clc
push
imul
int3
push
testb
mov
incl
mov
je
aas
movl
into
pop
es
mov
pop
int3
nop
js
std
jo
jecxz
adc
mov
jnp
repnz
pop
jno
cmp
enter
add
lods
mov
popa
stos
add
or
lods
mov
insl
jecxz
pop
clc
mov
mov
pop
loop
cld
mov
lea
lods
test
inc
sub
psraw
daa
fbld
jg
fmuls
xchg
jl
andl
pop
adc
out
xchg
and
es
aad
push
repnz
cwtl
shll
cmp
and
in
xor
out
cmpb
int
push
int3
mov
jae
sub
popa
subl
jl
ret
cmp
adc
dec
stc
ja
cmc
stos
mov
ja
outsb
gs
pusha
sub
rorl
hlt
pop
add
fsub
mov
push
sub
dec
stos
add
enter
or
dec
aad
insb
mov
test
out
lahf
xchg
sub
mov
inc
push
xchg
xchg
sbb
xor
xchg
and
mov
add
ljmp
inc
and
lret
testb
add
nop
aas
data16
out
or
leave
jl
push
subb
imul
repz
xchg
add
or
push
ret
pop
cmp
pop
xchg
lds
and
dec
enter
mov
fisttps
xchg
roll
shr
stc
rcr
and
int3
cmpsb
aas
test
fcompl
insb
sbb
fmuls
xchg
movsb
cmpsb
xor
stos
sbb
into
stc
fstps
enter
pop
loope
mov
xchg
in
subl
jmp
outsl
daa
push
and
push
sbbb
jge
ljmp
js
jge
dec
fwait
data16
or
sub
jmp
jmp
and
enter
sti
mov
sub
js
inc
xlat
xchg
iret
shrb
cli
mov
jmp
pop
push
add
mov
cmp
clc
leave
out
leave
fidivrl
inc
and
xor
pusha
aam
xchg
mov
cmp
dec
sbb
cmp
inc
hlt
adc
pop
mov
jnp
loop
push
sbb
jnp
ja
lods
insb
loope
push
js
negl
ret
xchg
xchg
enter
mov
repz
fldl
mov
negl
pop
or
jo
test
decl
pop
push
mov
mov
push
popf
ss
push
nop
jne
sahf
fsub
pop
sub
push
insb
movsb
mov
mov
lds
arpl
sub
jnp
mov
xchg
push
ret
pop
add
std
cmp
mov
jns
in
fisubs
dec
stos
imul
jno
jbe
and
stos
dec
push
stos
push
or
dec
mov
xchg
cmp
jne
cld
or
in
xchg
js
inc
addr16
mov
xchg
push
rcrb
cmpsl
sbb
nop
pop
pop
push
mov
sub
daa
cwtl
inc
mov
adc
enter
mov
or
ret
push
xchg
pushf
dec
adc
leave
jle
outsb
sub
lret
and
popa
in
ss
andl
enter
ficompl
jae
sub
jle,pn
out
xor
mov
pop
int3
add
mov
xor
mov
cmp
or
adc
sbb
or
xchg
inc
shll
cmp
xor
cmp
sub
xlat
mov
pop
hlt
sub
lods
shrb
std
jmp
dec
mov
adc
xchg
add
js
in
jne
subps
iret
popa
pop
fimull
repnz
xor
jmp
mov
sbb
mov
inc
je
cmp
or
fstpt
pop
movsl
add
fwait
std
and
aam
pop
push
xor
jnp
dec
pop
cmp
mov
xor
insb
xchg
and
fs
cmp
and
aam
or
mov
cmp
gs
inc
cmp
xlat
xchg
mov
lods
icebp
out
sbb
aas
sbb
sbb
jl
sub
add
inc
mov
stos
aam
in
movsl
cmp
xchg
adc
mov
xchg
inc
inc
sub
and
insb
pop
sub
inc
pop
daa
cmp
jns
mov
jnp
shr
cld
stc
jno
lcall
add
and
mov
cmp
fstpt
subl
divb
fucomp
ret
test
movsl
fstl
pop
lods
cltd
sahf
or
fdivp
mov
sti
mov
out
lret
adc
ficoml
mov
sub
pushf
xchg
out
test
add
sahf
inc
jns
repnz
jg
mov
dec
aad
clc
jge
sbb
data16
xor
xor
and
idivl
mov
das
jmp
xchg
scas
mov
rorl
test
dec
rorb
dec
inc
out
mov
insb
std
push
mov
adc
cmp
pushaw
push
sub
mov
sahf
mov
add
jp
std
adc
sbb
cltd
ljmp
aas
jge
cmp
ret
popa
xchg
dec
dec
popf
add
in
insb
maxps
xor
adc
pop
xchg
push
lock
out
fsub
aam
dec
pop
scas
xchg
cmpb
ret
add
add
jae
jbe
enter
mov
addr16
push
fnstcw
hlt
mov
cmpsl
std
sub
rcl
nop
loopne
pop
mov
cld
out
cmpsb
mov
push
sub
ljmp
fsubr
pop
and
push
test
cmc
and
sbbb
insb
addr16
mov
sbb
pusha
mov
into
and
mov
stc
xchg
jmp
or
mov
cwtl
mov
loope
sub
or
cmpsl
cmp
sti
or
dec
in
arpl
je
xchg
sub
mov
pop
dec
shrb
xchg
enter
sbb
jb
sbb
sarl
cmpl
dec
call
pop
loope
mov
inc
sbb
sub
inc
adc
addr16
in
fisttpl
xchg
andl
pushf
pop
mov
jnp
mov
inc
dec
jecxz
ret
xchg
xchg
mov
sbbb
adc
push
data16
fxch
sub
mov
inc
mov
or
fbld
add
mov
inc
pushl
jne
push
out
or
popf
aam
push
out
or
hlt
lahf
xchg
pushf
movsl
je
outsl
or
and
mov
sub
enter
in
es
adc
xorl
fwait
inc
fwait
rorl
add
sub
mov
xor
jb
adc
test
inc
jmp
xor
mov
jbe
or
mov
mov
pop
dec
add
mov
push
mov
sbb
dec
mov
mov
jns
dec
cmp
das
mov
mov
mov
pop
into
pop
insb
mov
les
stc
dec
ret
cmpsl
cld
add
jecxz
mov
adcb
dec
push
lret
or
adc
popf
mov
jg
xchg
femms
sub
aaa
std
cwtl
mov
sbb
xor
jl
and
leave
repz
cwtl
xor
cmp
clc
push
and
ret
inc
cmc
outsb
push
fildl
aam
lea
jo
mov
xor
xchg
mov
shrb
mov
lret
push
mov
les
scas
stos
xlat
loop
jne
push
out
in
mov
outsl
in
jle
jge
scas
cmp
iret
sbb
imulb
or
pop
clc
jo
dec
sub
lea
sti
pop
clc
lods
js
pop
xchg
add
xchg
pop
leave
mov
pop
xchg
adc
pop
nop
mov
fadd
lds
jle
test
push
pop
push
sbb
jle
push
pusha
sbb
fimull
or
mov
lods
stc
out
mov
dec
into
jb
jecxz
lret
lcall
clc
sub
or
jmp
pop
pop
jmp
pop
repnz
mov
mov
mov
xlat
je
pop
sbb
and
cmpl
imul
mov
in
leave
sub
mov
push
add
imul
lahf
lods
arpl
push
xchg
pop
into
or
lahf
push
mov
mov
stos
or
fwait
lods
clc
mov
test
push
test
daa
enter
dec
add
popl
cmp
or
mov
push
jmp
and
popf
ljmp
xchg
push
int3
jns
subl
mov
dec
nop
ret
dec
sub
in
into
jg
inc
out
hlt
mov
repnz
fildl
xor
adc
outsb
or
mov
arpl
iret
popl
mov
or
xor
push
out
shrb
xor
scas
ljmp
pushf
or
jno
shrb
and
mov
sbb
shrl
xchg
mov
ret
xchg
push
lret
xchg
jecxz
dec
cmpsl
inc
mov
sbb
ret
lret
clc
mov
out
call
in
and
lret
cmp
sub
iret
cld
xor
cmpsl
imul
mov
xchg
pop
insb
sbb
fildl
mov
es
lahf
clc
loopne
stc
jae
aaa
fstpt
add
addb
inc
inc
call
fildl
loopne
cmc
cmp
rcll
jg
lea
adc
fistpll
fs
mov
add
mov
adc
xlat
jnp
repnz
pop
fmul
pop
sub
cmp
pop
push
dec
inc
lock
adc
xor
bound
adc
mov
dec
jge
pop
fdivrl
repz
xchg
sbb
fs
mov
xor
push
test
mov
imul
fidivrl
stos
mov
inc
mov
repz
shl
mov
push
lods
jge
sbb
bound
jne
mov
xchg
xchg
lret
cmpsb
addr16
mov
push
and
enter
subl
mov
repz
ficomps
jne
lret
pop
cmpsl
inc
adc
in
pop
ljmp
int
mov
test
in
mov
lods
int3
xor
sbb
imul
jp
lds
jae
inc
ss
sahf
xchg
adc
mov
adc
ret
in
inc
cmpsb
call
nop
cld
mov
mov
sbb
add
sub
mov
std
out
fisubs
into
in
movsl
stc
in
addl
fcmovu
les
mov
in
cmp
enter
pop
inc
cmc
and
in
sub
int
jg
jne
fidivs
jne
xchg
pop
pop
ljmp
sub
sti
fldenv
sbb
sbb
pop
jb
inc
jae
adc
fsubs
lock
xchg
js
stos
pop
test
jge
adc
pop
fadd
push
add
xchg
and
mov
lods
mov
cmpsl
mov
cmpsb
pop
inc
lcall
les
or
lock
xchg
lahf
xchg
aaa
jae
aas
dec
sbb
sub
shl
das
push
and
xchg
scas
xchg
ljmp
stc
sub
cld
in
sbb
add
ja
daa
adc
std
add
outsl
cli
add
or
pop
mov
inc
stos
shll
daa
fs
out
icebp
mov
std
push
in
rcll
inc
es
dec
push
into
or
push
jb
test
aas
sbb
pop
add
mov
es
stos
stc
clc
xor
or
movsl
dec
and
pop
xchg
inc
in
sub
nop
repnz
mov
mov
subb
lock
xchg
aam
cmp
es
push
fsubrs
pop
clc
jp
sub
push
xchg
test
cmp
out
ja
mov
xchg
cmp
pop
cmp
lret
sub
subb
adc
std
jp
in
sbb
mov
ss
push
add
mov
addr16
rorl
lahf
sbb
icebp
fcmovnb
fcoms
fwait
inc
or
sbb
scas
test
lret
lret
clc
js
and
pop
dec
jmp
jae
add
cmp
xor
mov
rcrl
cmpsl
clc
daa
cli
xchg
lcall
and
out
lods
mov
sbb
pop
xor
out
movsl
pop
fwait
ret
pop
push
mov
xchg
xlat
sahf
or
cmp
and
push
lahf
rorb
lcall
cmp
das
push
ljmp
or
jmp
mov
fisubrs
pop
outsb
inc
xchg
sub
jno
pop
inc
lahf
pop
adc
test
outsb
mov
pop
mov
fildl
dec
bound
sbb
movsb
lock
adc
data16
xchg
pop
ret
push
mov
imul
jl
jnp
push
inc
or
jne
and
test
sbb
mulb
fldt
cmp
int
mov
xchg
shll
jmp
pop
jl
mov
sbb
popf
arpl
jge
pushf
sar
xor
cwtl
add
add
pop
lret
test
push
push
push
lods
lds
shl
flds
aas
push
add
xor
movl
cld
xchg
inc
push
mov
mov
push
sti
inc
adc
mov
insb
lret
cltd
sub
rclb
jmp
inc
mov
mov
sbb
mov
int3
xchg
aas
sbb
and
lret
jle
dec
or
lods
jecxz
mov
mov
mov
jae
aam
xor
jmp
xor
aam
dec
lods
or
push
iret
pop
aad
cmp
push
mov
dec
fstpt
push
loopne
in
mov
popa
lea
pop
xchg
scas
iret
or
cmp
scas
fistl
stos
dec
in
add
jb
jmp
loop
lods
adc
mov
imul
mov
imul
dec
movsl
mov
aas
popf
stos
mov
and
jle
dec
or
mov
cmpsb
aam
pop
les
mov
jmp
jge
testb
sub
pop
popa
cmpsb
push
in
mov
fildl
lahf
xor
jp
je
push
call
and
sbb
inc
lods
mov
xor
fsts
mov
int
jnp
addl
add
data16
imul
scas
cmp
mov
rcr
cli
jge
or
les
xchg
mov
and
sbb
adcb
inc
daa
mov
push
jmp
xchg
jne
pop
push
and
add
std
sub
cmp
jecxz
add
outsb
out
jg
mov
rcll
lea
xorl
ljmp
adc
ret
cmp
out
mov
jo
adc
mov
sbb
leave
push
sbb
scas
call
or
cmp
jbe
jl
xchg
into
dec
cmp
cmpsl
ficoms
shrl
fcompl
pushf
and
insl
aas
lret
mov
mov
push
dec
mov
iret
xchg
icebp
scas
push
das
or
test
sbb
out
jg
adc
mov
sbb
and
cli
outsb
mov
mov
xchg
jg
out
mov
inc
iret
test
xchg
stc
lret
push
cs
or
push
in
or
mov
xor
in
ror
cmc
insl
xchg
js
loope
scas
cmc
ror
or
xchg
push
or
incb
sbb
andl
push
enter
sbb
subl
push
lret
pop
hlt
push
popa
mov
cmp
sbb
mov
push
mov
cmp
or
ror
xchg
ficompl
rorb
sub
xor
in
or
out
sbb
insb
call
xor
pop
repz
mov
scas
mov
dec
test
fistps
xchg
lods
fbld
cli
shl
ja
out
pop
psubusb
test
sahf
cmpsl
add
mov
jbe
outsb
xor
in
cmc
xchg
xor
jo
xor
divb
and
outsl
movsb
dec
in
in
mov
mov
mov
lds
jno
fimull
out
or
xor
and
push
insb
out
mov
xchg
std
pop
movsb
data16
inc
shl
es
mov
lahf
mov
cmp
jb
ljmp
scas
mov
xor
xchg
dec
jno
dec
add
lods
sub
fs
sarb
pop
scas
adc
xchg
adc
leave
outsl
fnstsw
inc
pop
testl
mov
push
mov
cmp
mov
imul
in
xor
inc
lods
test
repz
enter
shl
mov
shlb
sahf
jno
cmp
mov
xchg
inc
sbb
cmp
cli
mov
jecxz
ss
test
aas
mov
mov
cmp
int
mov
aas
popa
push
rorb
rol
hlt
sti
lea
stos
pop
push
mov
xor
popf
popf
inc
lret
xchg
jb
and
cmp
pusha
inc
jg
xchg
inc
inc
movsl
sbb
cmc
fidivs
adc
xchg
mov
inc
xor
daa
mov
leave
push
fnsetpm(287
jbe
sahf
jp
cmpsb
mov
pop
testb
mov
into
bound
or
ficomps
ljmp
jmp
es
push
mov
push
cmp
mov
dec
cltd
in
rcr
xor
mov
xor
cmp
cmp
fmull
xlat
push
xchg
push
adc
sub
and
sbbb
in
jne
lds
pop
cmp
jb
sub
or
scas
fidivl
mov
xor
mov
mov
dec
cltd
fwait
testb
les
jge
cltd
pop
test
add
mov
xor
iret
aaa
aam
sbb
xchg
mov
movsl
sbb
nop
pop
jle
ss
push
pop
mov
mov
jle
adc
push
sub
pop
jmp
fs
shll
mov
loope
cmp
jl
or
movsl
dec
jg
orl
andb
mov
nop
jg
add
les
inc
stc
push
push
pop
mov
test
cmpb
call
lea
inc
cwtl
xchg
test
or
repz
fbstp
mov
into
cmp
add
rolb
xchg
inc
sbb
cmp
repnz
lods
xchg
add
imul
fstps
pushf
jecxz
push
aad
or
jnp
pop
lcall
push
dec
aaa
xchg
rcrb
mov
or
sub
scas
push
out
xchg
andl
pop
imul
in
dec
sub
ljmp
ret
bound
xor
lds
inc
jmp
jns
adc
fwait
dec
adc
inc
mov
and
lcall
push
sbb
lods
popa
int3
in
negl
lcall
cmp
jns
movsb
out
fimull
pop
mov
or
fsts
add
cmp
rorl
xlat
mov
int3
in
aam
shrb
into
cmpsb
jnp
cmpsl
in
lahf
push
add
sahf
dec
lret
mov
mov
sub
pushf
popf
mov
shrl
pop
mov
push
shll
push
ret
aam
cltd
test
outsb
jbe
loopne
dec
rcrb
notl
jecxz
movsl
sbb
pop
inc
iret
sub
xchg
lea
leave
mov
push
sbb
and
mov
cs
ds
call
cmp
sbb
imul
xor
pop
sbb
cmovle
call
hlt
jno
stc
add
jmp
xor
and
dec
or
jns
loope
adc
mov
cmp
mov
aaa
jg
lcall
std
jge
std
scas
or
inc
mov
mov
sbbl
pusha
pop
pop
or
adc
jle
ss
or
inc
ja
add
sub
mov
out
push
xchg
rolb
jecxz
repnz
sub
inc
cltd
ss
ljmp
fwait
jge
in
mov
push
add
clc
lcall
repnz
inc
jb
adcb
aaa
stos
insb
jle
push
and
enter
dec
xchg
mov
loopne
push
sub
push
push
lock
aad
lahf
inc
pop
test
sbb
adc
inc
sbbl
cwtl
lahf
loop
fsts
lret
and
test
mov
movsl
movsb
cmp
sbb
stos
cs
mov
xor
ficompl
mov
xchg
test
imul
jns
ss
dec
testl
lcall
sarb
aaa
inc
pop
stos
inc
add
push
pushf
xor
or
popa
mov
inc
dec
mov
daa
aad
mov
mov
jbe
inc
jmp
inc
sub
out
jno
popf
and
pop
nop
jg
testl
xchg
mov
pop
xchg
pop
stc
mov
jp
cmp
mov
lahf
mov
jne
jnp
fildll
into
mov
lods
cmp
sahf
or
daa
int
pop
xlat
repz
mov
cwtl
sbb
xlat
aaa
xchg
and
out
aad
dec
mov
add
jg
dec
pusha
mov
xor
mov
push
jp
addr16
add
xorb
mov
inc
outsb
inc
das
outsl
push
neg
ds
out
aas
in
repnz
dec
jle
daa
divl
jae
mov
lods
inc
test
mov
sub
mov
enter
cmp
lret
sub
loope
push
mov
mov
imul
inc
outsl
in
cmp
and
aam
jae
in
push
fld
jno
stos
std
jmp
push
pop
sti
out
rolb
stc
jnp
scas
dec
adc
mov
repz
add
cmp
cmp
repnz
cmp
fldcw
xor
into
pop
insb
xchg
dec
das
push
pop
push
hlt
add
sbb
sub
cmp
test
mov
js
popf
mov
std
jae
mov
pop
cmpsl
mov
or
in
inc
pop
test
xchg
jne
dec
push
xchg
mov
lods
loopne
jo
imul
mov
add
xchg
or
dec
out
push
push
sbb
mov
jle
push
nop
arpl
jmp
push
xlat
xor
ret
sub
cmpl
mov
xchg
jl
setg
xchg
mov
mov
test
push
test
or
mov
push
and
repz
cmp
inc
lds
sub
lods
dec
cmp
pop
cmp
mov
push
and
push
pop
decb
test
xchg
pop
cmc
call
mov
jg
add
mov
push
in
pop
insl
vpslld
dec
push
imul
inc
jo
and
inc
scas
aam
push
rcr
adc
jo
inc
addr16
mov
mov
inc
sub
ret
sbb
push
jecxz
roll
nop
loope
int3
lret
mov
xor
stc
fadds
rorb
sbbb
movsl
je
pop
out
loope
dec
push
sti
rclb
sarl
int
jnp
inc
in
icebp
les
sub
mov
pop
xorb
popa
dec
mov
lcall
sbb
repnz
repz
add
dec
fnstcw
pushf
pusha
stos
sub
and
mov
stos
push
jle
lret
mov
jecxz
sbb
push
scas
iret
insb
adc
idivl
dec
stc
shlb
mov
shlb
insb
call
rolb
ds
jnp
push
iret
ret
sbb
mov
dec
in
pop
dec
sahf
dec
pop
cld
or
xchg
xchg
lods
xor
gs
dec
xor
stos
data16
inc
ret
fsts
repnz
arpl
dec
mov
rcrb
inc
call
sarl
dec
push
gs
jae
mov
lret
jno
sbb
mov
call
cmc
jmp
xchg
mov
cmp
call
push
xor
cmp
pop
lahf
pop
addr16
inc
pushf
sub
jge
dec
dec
or
sbb
ret
testl
cmp
pop
add
lea
pushf
mov
icebp
mov
ret
loope
jl
orb
addb
sub
ds
mov
xor
sbb
inc
fs
mov
insb
bound
int3
ret
lcall
dec
jnp
sar
jge
jge
int3
pop
xchg
test
lods
frstor
jp
addb
cmc
dec
add
sbb
shll
push
data16
aad
xor
lea
mov
in
adc
aas
fisttpll
and
cmpsl
inc
sub
cmpsl
subl
test
fimuls
sub
dec
std
cli
xlat
lcall
adc
pop
out
pop
sbb
aam
inc
pop
mov
or
fbld
enter
xchg
adc
fstps
sub
loop
lea
mov
jp
push
cmc
iret
xor
movsb
lahf
test
movsb
rcrb
inc
cmpsl
ret
mov
cwtl
mov
or
pop
fcomps
addl
sub
xchg
js
aad
out
loope
lret
shl
and
add
and
pop
lret
scas
rclb
mov
lods
cmpsb
cli
leave
dec
js
shrb
and
and
out
mov
cmp
andb
adc
or
inc
imul
and
cmp
lahf
mov
test
inc
add
into
xor
daa
fisubrl
in
loop
cmc
daa
jno
sub
insb
jg
popa
ss
jnp
and
fiadds
xlat
ljmp
aam
into
hlt
mov
xorl
pop
negl
mov
or
cmc
scas
or
xchg
sbb
mov
pop
ljmp
int
aam
mov
sbbl
or
push
cmp
scas
xchg
add
jne
sbb
jbe
stos
inc
out
lret
add
inc
jo
cmpsb
xor
imul
repnz
leave
test
dec
cmpsb
sbb
mov
push
mov
push
and
ds
jl
add
movsl
out
imul
scas
or
or
jp
mov
je
lret
or
mov
out
push
jp
call
pop
ss
out
xor
push
jns
test
cmp
fstpl
xchg
inc
add
std
and
xchg
or
dec
ret
jle
repnz
int3
lock
popf
push
push
in
xor
mov
mov
popf
sub
push
sub
inc
mov
sbb
or
push
pop
xchg
clc
push
push
aam
push
stos
addr16
cmpsl
inc
sarl
push
jo
ficomps
xor
shrl
sbb
orl
adc
dec
mov
pop
sti
lcall
fnsave
ljmp
sbb
mov
push
cwtl
in
fucomi
loop
add
orl
mov
adc
outsl
imul
sub
xchg
fistl
out
aaa
ret
mov
aam
rorl
sub
and
cmpsl
lds
dec
cld
outsl
scas
cmpsl
ds
dec
sub
jecxz
rolb
cmpsb
das
ret
aas
sub
push
mov
lcall
cmp
sbb
jle
sub
gs
in
imul
adc
dec
je
shr
aam
movsl
xor
inc
push
pop
out
in
mov
xchg
adcb
andb
inc
cmp
popf
mov
sbb
xchg
pop
mov
jmp
push
xchg
xchg
inc
push
pop
lret
add
stos
jp
int
xor
nop
xor
sub
and
insb
and
sbb
mov
movsl
and
in
jp
push
inc
xchg
aas
or
adc
jns
out
daa
mov
push
jnp
test
call
pop
lea
mov
mov
adc
adc
sub
ffreep
bound
es
movsb
xchg
inc
out
jecxz
push
push
cmp
and
inc
push
cmp
mov
inc
xchg
popa
sbb
out
cld
packuswb
ret
jl
int
sbb
ss
and
repnz
mov
cmc
popf
lods
sbb
and
mov
lret
loop
scas
push
mov
ljmp
mov
daa
ret
xchg
fstp
mov
mov
adc
das
subl
mov
loopne
cld
pop
jmp
aam
rcrl
sub
inc
js
mov
cmpsb
mov
enter
hlt
in
mov
jecxz
mov
fdiv
cmp
push
mov
aaa
or
push
iret
add
xor
decl
adc
or
fwait
sub
mov
loopne
fisttpll
or
or
inc
or
call
inc
sub
adc
inc
inc
mov
andl
pushf
mov
mov
out
mov
xor
popf
ret
xor
les
imul
jp
xor
xchg
mov
repz
push
sub
cwtl
imul
push
or
mov
mov
vorps
clc
sub
es
test
loop
inc
cmp
jge
mov
gs
xchg
test
mov
rcll
adc
jmp
xchg
push
or
lret
mov
loope
inc
pop
xchg
cwtl
int
scas
sbbb
mov
sub
adc
inc
cltd
shrb
cmp
std
cmpsl
cmpsb
pop
push
enter
xor
xor
xchg
jno
testb
push
push
imul
pop
or
rcrb
pop
andb
insb
sub
sub
movsb
inc
jge
sub
mov
and
daa
movsb
in
mov
scas
andb
test
ds
pushf
aam
push
or
xchg
bound
and
ljmp
data16
iret
lret
stos
pop
adc
fcomip
sbbl
mov
stc
xchg
cli
mov
cmp
mov
xchg
imul
jecxz
and
adc
cmp
stos
rorl
divl
cmp
sti
ja
add
sbb
nop
jb
sub
or
out
sub
jne
iret
sbb
push
mov
adc
mov
xor
jno,pt
xor
xchg
popf
mov
insl
into
inc
fwait
mov
add
lret
pop
cmpsb
pop
das
cmp
mov
jne
movsl
adc
sbb
mov
ja
je
sub
pop
mov
push
shlb
sarl
clc
sbb
pop
sbb
js
aas
es
fcompl
mov
call
sbbl
sub
mov
mov
xchg
jbe,pn
negl
imul
sub
xor
test
pushl
cld
call
xchg
and
into
arpl
xor
imul
filds
out
daa
mov
dec
pop
outsl
jns
add
cli
test
outsl
stc
mov
mov
clc
or
push
and
adc
popf
jo
je
sbb
negb
cwtl
push
mov
xor
pop
push
addr16
lret
arpl
jmp
ljmp
or
loope
cmc
cmpl
dec
nop
repz
inc
shlb
mov
xchg
push
or
push
test
gs
mov
mov
mov
push
jae
aam
jno
push
cmp
addb
pusha
cs
lea
mov
jg
jae
jmp
pusha
and
pop
jae
lret
mov
jge
in
ja
inc
jae
insl
mov
stos
stc
lea
and
mov
or
xchg
mov
dec
bndstx
sbb
xlat
xchg
xchg
jno
jno
stos
mov
popa
popa
movsb
loopne
dec
sbb
pop
fxtract
fdivrl
mov
pusha
scas
rolb
repnz
int3
into
pushf
sbb
mov
mov
popf
mov
xchg
inc
inc
adc
shll
or
roll
shl
or
fistl
je
jge
ret
adc
dec
sub
mov
ja
push
pop
xor
xor
xchg
cmpsb
push
adcl
pop
cmpsb
xlat
add
divl
int3
jle
into
mov
imul
ret
js
fcomps
lret
lods
or
jno
xchg
in
in
imul
mov
arpl
xchg
and
cmp
ljmp
dec
dec
addl
sti
sub
push
lods
bound
or
insb
mov
es
popa
pop
or
mov
in
mov
out
xor
decl
in
loop
lcall
test
int3
shll
mov
adc
inc
sub
jle
mov
outsl
flds
sbb
pop
stc
mov
jmp
loope
icebp
xchg
jmp
mov
or
lods
add
fstl
scas
jl
aaa
leave
xor
adc
repz
cli
fdivr
cmpl
cmp
das
pop
push
add
je
aad
adc
sti
sub
xchg
ja
lret
jbe
andl
mov
movsb
inc
out
insl
push
in
int
mov
fidivrl
lock
inc
xchg
lods
sarl
add
pop
jno
mov
push
roll
mov
and
xor
mov
sbb
sub
xchg
repz
cs
enter
cwtl
push
mov
loopne
fwait
ss
pop
inc
xor
stos
jne
cmp
scas
in
popf
imul
sbb
mov
or
push
sarb
pop
cs
fs
and
cmpb
sub
in
fs
and
cmp
pop
test
jnp
mov
iret
jecxz
mov
movsl
push
xor
je
and
mov
xor
lods
inc
and
movsb
dec
adc
dec
xor
cmp
push
adc
sbb
daa
xor
in
les
aad
add
xorb
leave
xor
jno
or
nop
mov
outsl
rclb
sar
sub
lcall
enter
push
mov
enter
in
insb
imul
push
scas
ds
lret
inc
adc
std
mov
cmpsb
cmpsb
xchg
pop
jb
jns
or
cmp
mov
movsb
loop
inc
or
jb
mov
push
push
das
movb
sub
ffree
mov
pusha
adc
jae
lcall
fdivl
testl
rolb
sub
aam
mov
out
loope
cmpsb
jg
insl
shll
clc
xchg
adc
loopne
repz
sbb
scas
push
inc
adc
or
xchg
pop
sub
push
push
push
in
dec
loope
jbe
pusha
adc
addl
inc
push
xor
pop
jl
adc
std
je
and
rolb
lret
mov
andl
rcr
push
mov
ret
add
inc
push
loop
into
adc
fs
adc
sub
shlb
repz
mov
mov
lea
adc
negl
jg
nop
add
and
je
push
pusha
pop
push
pop
jno
pop
mov
cmpsb
sub
out
push
xor
adcb
mov
lcall
mov
cwtl
or
sbb
inc
add
mov
jne
cmc
and
sub
mov
mov
and
pop
loop
jae
add
xchg
adc
dec
ja
fwait
push
ja
je
fwait
mov
imul
mov
daa
inc
mov
test
outsl
jecxz
xor
loopne
ss
fwait
jae
inc
repz
push
pop
aad
movsb
adc
push
add
push
sbb
les
into
jp
out
fdivp
mov
mov
mov
sbb
or
pop
out
mov
je
aad
popa
adc
dec
int
outsl
mov
test
hlt
ret
movsl
push
mov
pop
push
and
adc
mov
inc
xchg
mov
mov
aam
jo
and
and
mov
adc
pop
shll
subb
dec
push
mov
fs
sbb
sbb
add
jb
test
sbb
xor
jne
out
inc
leave
out
outsl
test
xchg
jg
loop
jmp
sbb
push
mov
scas
adc
shll
pop
jno
cmp
ja
mov
jmp
pop
mov
popa
cmp
jno
stos
pop
fisttpll
std
dec
push
inc
add
mov
xchg
pop
mov
daa
sbb
dec
nop
cmp
aam
mov
les
cmp
push
add
sbb
inc
hlt
push
jle
scas
xor
xchg
mov
sub
in
mov
jecxz
fs
adc
outsl
out
leave
cmp
js
push
pop
mov
loopne
out
rcll
lret
pop
fs
cli
cmp
aad
push
lcall
and
mov
jnp
cld
xchg
fildll
loopne
repz
pop
faddl
lcall
push
fdivs
imul
jl
aas
xchg
xor
mov
pop
mov
push
repz
adc
cld
in
dec
pop
cs
lret
xchg
mov
push
int3
adc
int
cmp
sbb
hlt
int
add
fisubl
inc
add
insb
in
adc
cli
mov
leave
nop
mov
jge
sbb
aam
mov
addr16
aad
pop
push
mov
mov
aad
cmp
dec
mov
mov
cmpsb
lea
ss
daa
jg
rol
sbb
andl
xor
lcall
fisttpll
mov
aas
inc
dec
xchg
and
inc
test
js
movl
add
jne
add
aad
xchg
mov
inc
push
mov
push
xchg
addb
xchg
pop
pop
lcall
pop
mov
inc
pushf
xchg
xor
sarl
orb
scas
mov
jge
jae
cs
hlt
clc
jnp
dec
mov
pop
push
testl
out
xchg
cmp
imul
mov
test
aam
rcrl
cmpsl
add
punpcklwd
outsb
sbb
mov
or
add
pop
iret
xor
ljmp
sub
dec
adc
fwait
jnp
xor
ljmp
mov
je
pop
out
pop
mov
rorb
popl
or
adcb
rcll
test
push
cmp
xchg
aas
lcall
mov
cltd
test
insb
test
lock
and
sub
inc
test
into
mov
aam
push
xor
mov
and
pop
jo
dec
pop
es
das
jns
retw
fadd
pop
loop
cmp
sahf
movsl
inc
lods
cwtl
sub
loope
and
adc
mov
sub
insl
push
mov
outsl
jmp
imul
sub
mov
jmp
icebp
jno
lods
test
fwait
sti
sbb
lahf
gs
xor
push
jne
movsl
pop
fisttpl
test
add
xchg
push
inc
jl
jmp
iret
mov
adc
add
das
test
jne
cmp
sub
inc
or
mov
pop
push
out
pop
or
mov
push
mov
mov
sbb
aaa
mov
add
mov
test
mov
repnz
outsb
dec
mov
cmp
pop
repz
je
mov
pop
mov
test
pop
or
fcmovnu
imul
xchg
loope
repnz
scas
or
jno
das
and
jle
arpl
in
ljmp
xor
or
cmpsb
push
dec
bnd
das
ds
seta
xchg
pop
sarl
scas
adcl
outsb
ja
mov
adc
jg
loopne
iret
insl
repz
in
jecxz
iret
push
inc
or
dec
ret
sub
add
pop
fisttpll
xchg
mov
ret
pop
cmpsb
adcl
push
jns
std
add
fildl
in
mov
adcb
outsb
repz
loop
cwtl
cmpsb
in
popa
sbb
in
popf
leave
scas
in
fbstp
push
mov
lret
adc
pmaxsw
les
aas
int
mov
je
nop
push
and
punpckhbw
stos
lock
shll
lods
cmc
into
dec
adc
rclb
inc
testb
pop
scas
ret
subl
int3
jmp
pop
jle
test
scas
aas
sbb
jns
and
mov
fisubl
es
cmp
fmull
outsb
cmp
adc
ror
mov
inc
adc
dec
loope
arpl
out
cmpsb
add
outsl
lods
xor
pop
cmpsl
adc
popf
std
add
sub
adc
aad
pop
xchg
popf
movsb
lret
pop
cmpsl
adcl
mov
fistl
pusha
dec
sti
cmp
or
and
xor
mov
jl
mov
loopne
pop
sub
push
lods
fistpl
jbe
mov
es
pop
sbb
out
dec
fnsave
in
xor
int
push
mov
pop
or
addr16
jb
in
je
rcrb
push
gs
push
mov
sbb
mov
lds
adc
add
mov
lock
cmpsl
mov
inc
jne
push
cltd
mov
mov
or
mov
cmp
scas
jo
bound
adc
cmp
mov
inc
mov
mov
jge
inc
sahf
sbb
dec
mov
sub
mov
fldenv
ds
fisttpl
sbb
or
mov
fisubs
xchg
movsb
aaa
adc
mov
fistpll
cli
fisubs
sub
push
push
pop
int3
inc
ret
jb
mov
push
test
into
jp
stc
out
insl
rol
dec
scas
or
int3
in
dec
popf
fildl
dec
xchg
loope
mov
add
sub
cmp
mov
js
lds
ficoms
or
sbbl
pop
aas
stos
add
adc
repz
push
jle
nop
scas
inc
jo
mov
xor
insl
sub
clc
aam
xor
mov
jo
pop
movsl
jno
data16
push
add
clc
popa
and
outsb
insb
lods
cmp
clc
cmp
jb
sbb
cmp
sub
out
roll
pop
loopne
cmp
dec
cwtl
sub
push
nop
mov
xor
sbb
je
jne
popa
outsl
outsl
mov
cmpsl
aam
mov
sub
dec
hlt
movsb
jle
add
test
cmp
mov
cmp
jg
lret
roll
xchg
ret
mov
add
mov
and
sub
lock
out
sbb
push
xor
repz
ret
mov
dec
jnp
insb
pop
repz
push
jp
pop
bound
leave
xor
inc
cmpsb
sub
xchg
ret
int
xchg
cltd
clc
xor
xlat
inc
inc
jecxz
pop
xchg
pop
xchg
popf
mov
mov
inc
sbb
cmp
dec
std
imul
pop
jae
sbb
push
js
adc
je,pn
and
jns
arpl
insb
add
sarb
sbb
int3
aas
pop
or
cmp
test
je
xor
pop
leave
inc
mov
cmp
mov
icebp
test
pop
nop
fadd
jb
out
aam
aaa
xchg
fldcw
fmulp
dec
rol
or
enter
pop
mov
pop
subl
and
inc
push
js
or
sbb
xor
pop
mov
push
fsubl
push
lcall
shrl
mov
sbb
cmpsb
icebp
fldt
notb
or
stos
or
test
or
sub
aad
rorl
orb
into
add
jp
into
icebp
pmulhw
jno,pn
pop
sbb
add
das
cltd
enter
mov
or
into
adc
jbe
pop
daa
sbb
lods
sbb
sbb
mov
add
fistps
loop
pop
idivl
xor
mov
jb
mov
xchg
scas
aaa
mov
xor
mov
scas
push
adc
rolb
push
dec
mov
js
lods
rclb
pop
or
jns
sub
mov
push
fisubs
dec
mov
or
push
dec
shlb
mov
loope
fimull
xor
fwait
dec
movups
mov
movsl
push
fst
movsl
xor
mov
jae
lea
xchg
mov
dec
jb
xchg
inc
in
or
dec
and
shll
insl
orl
scas
ss
fsubl
mov
adc
cmpb
or
inc
xchg
cmpsb
insb
sub
inc
shll
and
and
jecxz
push
jl
mov
mov
in
jb
js
jno
and
imul
sub
and
out
fwait
andnps
push
ljmp
pop
repz
leave
dec
sbbl
and
cmp
dec
lods
and
xchg
xchg
dec
iret
jecxz
jns
movl
ljmp
jns
lcall
xor
jg
shll
mov
sbb
mov
inc
jge
in
imul
inc
push
scas
fbstp
jg
push
and
stc
std
and
xlat
pop
sub
push
pop
cmc
fdivr
loop
das
add
xor
cmc
in
lods
fldenv
loope
mov
stos
mov
pushf
test
jl
test
and
ret
cli
divl
sub
rolb
cmp
call
sub
clc
xor
push
fistpll
lcall
inc
push
cwtl
aam
add
cmp
ds
rorb
dec
dec
jge
inc
mov
movsb
pop
push
mov
sti
lock
mov
hlt
stc
pop
cli
les
sbb
insl
pusha
cmp
mov
inc
je
mov
pushf
xor
sbb
stc
add
pop
gs
mov
mov
xchg
psubsw
cltd
rcrb
aam
dec
push
push
jmp
loopne
xchg
jbe
shlb
mov
cmpsl
xlat
inc
dec
gs
jnp
jo
repnz
arpl
xchg
cmp
popf
sub
cmp
ja
dec
test
pop
mov
or
dec
hlt
ret
push
or
cmc
jne
negl
aas
lods
pop
shll
jbe
sbbb
fwait
jne
lds
aaa
faddl
sbb
adc
into
or
loop
into
mov
rcr
jns
lea
xchg
sub
dec
mov
sub
std
pop
outsb
dec
push
out
daa
les
cli
ljmp
or
roll
std
fidivrs
ljmp
adc
addr16
insb
xchg
mov
stc
adc
inc
jno
divb
jmp
dec
fidivl
pop
int3
mov
inc
cli
sbbb
cmp
dec
stos
jg
xchg
repz
ja
add
popf
out
stc
leave
lock
jg
jle
aam
mov
or
mov
fld
repnz
cmpsb
add
pop
mov
mov
and
pop
lea
add
shrb
push
ja
divl
mov
ds
test
clc
jp
ss
aaa
xchg
movsb
mov
leave
push
cmp
out
ja
clc
jnp
cs
push
sub
mov
out
pop
dec
jl
sub
mov
jo
mov
in
ljmp
mov
cltd
jo
pop
xor
pusha
test
fsubr
ret
daa
loopne
stos
dec
or
fsubr
xor
pop
and
add
add
push
jecxz
repnz
out
inc
xorb
push
in
xchg
arpl
and
jb
cli
scas
push
mov
adc
fbld
movsl
fs
sti
cmp
cli
lcall
aam
mov
ds
mov
mov
dec
out
jns
cwtl
lret
adc
jl
and
add
pop
stos
cmpl
jno
mov
fdivs
int3
or
jecxz
push
push
shlb
push
sarl
adc
xchg
lock
fldcw
adc
daa
xor
aad
ret
pushf
dec
jns
adc
dec
mov
shrb
sbb
inc
mov
into
mov
dec
pop
pop
sub
es
inc
and
pop
push
xchg
sahf
into
scas
inc
out
push
popf
daa
repnz
xchg
popf
loop
je
sub
movsl
ljmp
add
mov
fadds
xchg
adc
mov
or
gs
sbb
and
repz
popf
or
es
into
or
pop
daa
xor
sub
fsubr
je
in
es
stos
xorb
mov
insl
cmpsl
cmp
or
out
pop
mov
arpl
xchg
fwait
iret
stc
push
mov
in
sbb
ret
or
mov
push
inc
in
add
jg
push
mov
outsl
lods
sbb
mov
cli
iret
test
sub
fsubl
inc
dec
sbb
jb
pop
aas
mov
fcomps
or
mov
loopne
jmp
cli
add
cltd
adc
scas
aas
xchg
in
xor
push
mov
sbb
adc
add
dec
in
loop
dec
jo
or
dec
jo
and
mov
ljmp
add
out
mov
fs
jmp
sbb
or
lret
jl
push
dec
mov
adc
lods
in
stc
pop
loopne
push
stos
adc
mov
mov
pop
sbb
pop
test
push
ss
cmp
aaa
rcrb
pop
aad
jo
adc
ret
adc
push
mov
hlt
jge
inc
cmp
or
rcrb
into
pop
hlt
jp
movsb
dec
mov
cli
scas
std
lret
xchg
dec
adc
pop
scas
stos
lcall
out
fldl2t
pop
pop
stc
push
cmpsb
das
dec
imul
xchg
mov
or
or
fnstenv
sarl
mov
jnp
push
mov
adc
mov
add
jo
stos
cmp
mov
add
or
lds
mov
inc
cmp
pop
in
repnz
lret
cltd
dec
pusha
popa
ror
stos
fcmovbe
mov
outsl
cmp
jno
insb
xchg
and
lahf
add
sar
test
and
scas
inc
loop
dec
je
xchg
sti
dec
ss
in
imul
ss
rorl
ret
pop
ds
inc
adc
adc
jno
cmp
add
stos
xchg
dec
mov
jno
mov
hlt
add
out
add
inc
xor
test
fwait
inc
aaa
aad
and
imul
call
pop
jl
gs
sbb
cltd
jnp
es
ds
pop
data16
pop
mov
or
nop
and
test
push
push
mul
dec
cwtl
add
out
aam
iret
and
adc
aad
mov
loop
add
jmp
pop
cmpsl
icebp
cltd
or
sub
pop
xlat
sbb
xor
ret
stc
or
filds
and
or
bound
dec
cli
call
shr
dec
lahf
pop
cmp
dec
stos
cmpsb
sti
cmp
mov
mulb
ljmp
cmp
mov
jns
adcl
inc
test
jbe
jle
sbb
in
jnp
in
stc
xchg
adc
popf
cmp
call
mov
add
fldcw
or
out
les
pushl
popa
mov
and
out
inc
sbb
mov
fs
je,pt
imul
in
enter
pause
aad
jp
rclb
inc
or
icebp
push
sbb
mov
and
cmc
imul
inc
cmp
inc
mov
fistps
sbb
adc
xchg
iret
add
insb
add
and
int
adc
and
pushf
sub
cmp
jb
gs
mov
mov
push
arpl
add
lea
dec
sar
in
lods
or
fcoms
lahf
pop
icebp
jnp
scas
sahf
xlat
mov
mov
decb
sbb
lahf
jo
lcall
cmp
cmpsl
xchg
jno
inc
adc
jo
shll
pop
or
mov
rcrl
fcmovb
loopne
data16
call
mov
push
lds
popa
fisubl
sub
push
popa
adc
sbb
imul
adc
js
xchg
mov
cmpb
sahf
jne
je
je
shll
lods
cli
and
into
dec
enter
jl
imul
push
ret
push
adc
mov
jbe
adc
mov
inc
lods
hlt
imul
lret
call
jmp
ljmp
sbb
mov
and
les
jp
xchg
xchg
jb
movl
imul
xor
loope
cmp
out
shlb
add
cmp
out
jp
or
xlat
cwtl
sub
das
add
in
jmp
cmp
adc
push
cli
or
std
jnp
shll
xchg
or
sbb
sub
lods
popa
out
add
pop
inc
int3
mov
ret
pop
inc
pushw
call
adc
mov
orl
pusha
ja
mov
es
mov
push
mull
fmuls
sahf
test
stc
outsb
popf
ret
sbb
aad
das
adc
lret
fwait
test
test
adc
stos
inc
mov
pop
ret
call
lret
js
add
jns
cmpsb
or
jp
enter
in
cmp
push
imul
mov
arpl
cmp
fisubl
popa
inc
daa
mov
imul
xor
loope
mov
cmp
icebp
push
dec
clc
js
ret
shrb
xchg
imul
or
lods
pop
popa
cmp
xor
mov
aad
jbe
jecxz
cmp
mov
je
outsl
out
imul
sub
aaa
mov
addr16
dec
mov
jmp
fistpll
pop
and
lods
jg
push
dec
push
add
jnp
ja
sbb
stc
popf
and
and
ja
out
in
dec
jb
jl
xchg
das
pop
test
xchg
dec
adc
jmp
sbb
inc
xor
jecxz
xor
mov
lcall
mov
je
andl
andb
mov
ljmp
mov
test
std
lock
cmp
sbb
loop
sbb
pop
insb
cmp
das
pop
sub
aaa
push
fadd
inc
call
fsubrl
push
sahf
xlat
das
pushf
mov
lahf
outsl
jecxz
xchg
outsl
jae
scas
lret
sub
cmc
pop
mov
aaa
shlb
dec
xor
sub
and
add
xor
jo
repnz
fists
lcall
and
cli
ja
pushf
ret
add
shr
add
pusha
xchg
je
mov
xor
xor
dec
dec
or
xlat
sbb
or
es
fdivrl
or
dec
xchg
movsl
push
fidivrs
and
sbb
ss
sbb
popf
rclb
movsl
sahf
or
xor
movsb
cmp
subb
je
dec
dec
ret
mov
nop
pop
lret
fcoml
cmp
pop
mov
push
pushf
sub
std
mov
int
jmp
pop
add
push
xor
mov
jecxz
insl
shlb
jmp
and
pop
sub
cmp
inc
fs
loope
ja
xchg
stc
pusha
jae
sahf
ja
lods
xor
cld
test
push
mov
adc
jp
sarb
sarl
fisttpll
cmp
jae
inc
loope
inc
pop
pop
push
sar
dec
jmp
fs
or
out
xor
cmp
cld
pminsw
mov
push
stos
pop
movsb
jl
repz
adc
cli
inc
daa
mov
lea
pop
lcall
sub
dec
jb
stc
xor
jb
xor
rclb
mov
jle
push
test
sub
cmpsb
cmp
test
insl
sub
orl
out
lcall
mov
mov
dec
and
sbb
pop
inc
addb
adc
popa
movsl
pop
loopne
repz
insl
pop
fcoms
mov
adc
or
xchg
push
add
out
jle
mov
into
push
insb
leave
sbb
shlb
in
data16
ja
pop
js
scas
push
clc
jns
push
arpl
xchg
shrl
out
xchg
mov
add
je
sahf
fstl
mov
fcmovne
jae
add
mov
and
adc
push
shrl
cmc
xor
sti
subl
mov
loop
aaa
stos
jnp
adc
in
and
imul
push
pop
aam
out
and
pushf
adc
ja
xor
add
imul
mov
add
sub
adc
out
imul
call
add
insb
jno
adc
mov
and
out
bound
xchg
icebp
mov
mov
jae
stos
lds
sub
out
pop
push
push
inc
es
cmp
repnz
pop
pop
sub
fs
jge
out
das
bound
shlb
movsl
inc
push
ds
fcmovu
add
push
mov
cmp
sub
xchg
mull
fcomi
dec
fsubrs
orl
int3
xor
aam
stos
out
out
shl
out
xchg
jne
xchg
jp
xor
dec
iret
push
shll
inc
mull
inc
je
lcall
add
jmp
into
les
sub
dec
std
ja
lahf
int
leave
sbb
cmp
inc
fidivrl
sbb
ret
daa
mov
mov
test
aaa
mov
jbe
lret
jbe
in
jp
iret
stos
jp
out
icebp
adc
scas
dec
adc
jmp
lods
adc
xchg
les
pop
test
sub
icebp
repz
mov
lods
ret
lret
sub
insb
test
dec
popf
das
adc
cmp
push
sbb
stos
sub
xchg
xor
pop
dec
pop
mov
push
scas
cmp
mov
jae
cmp
aad
push
push
mov
fdiv
sub
shlb
dec
fsubrs
xorl
push
out
and
fldenv
mov
jecxz
fnstenv
enter
divps
jno
cli
iret
mov
rolb
iret
add
xchg
les
dec
push
xchg
imul
sbb
mov
jb
and
loope
cmp
fists
cmpsl
pop
xchg
loope
jg
fnstcw
in
nop
sbb
leave
push
fwait
push
iret
mov
inc
fiaddl
outsb
bound
ljmp
sarb
je
test
pop
clc
xor
mov
repz
fdivrl
sbb
fsubrs
jge
pop
mov
sbb
test
xor
mov
xor
sub
xlat
jbe
sbb
fildl
test
sbb
dec
pop
fsubrs
repnz
push
push
adc
sub
adc
fcompp
dec
addr16
mov
faddp
fisttpll
inc
add
dec
mov
sahf
ja
in
cmp
out
rclb
fcmove
mov
test
adc
push
fidivrs
mov
mov
jnp
arpl
mov
ljmp
add
push
jle
insb
test
stos
cli
cmpsb
dec
clc
dec
pop
cltd
adc
test
xor
jl
rorb
cmpsb
pushf
outsl
pop
clc
or
cmp
pop
leave
sbbl
icebp
jo
pop
pop
mov
lret
test
enter
fcomi
mov
mov
sub
add
add
arpl
fsubrs
xchg
mov
fsubrp
loop
subl
xor
adc
clc
dec
cmp
jg
push
or
xchg
fnstenv
imul
jmp
mov
sarb
push
fsubl
pop
mov
roll
in
idivl
shlb
lret
pusha
pop
cltd
mov
mull
inc
add
mov
dec
sub
outsl
fisubrs
mov
add
cltd
adc
and
pop
insl
mov
dec
jle
lea
jo
add
sbb
insl
mov
test
rcl
popa
aam
scas
xor
sahf
pcmpgtd
shlb
jns
adc
int
loope
scas
pop
fdivrp
jmp
or
bound
icebp
ficompl
sbb
dec
inc
imul
out
aam
divl
rol
cs
xchg
rcrb
lock
inc
xchg
xchg
mov
sub
pushf
dec
test
mov
js
dec
out
enter
aas
arpl
int
xor
mov
cmpb
fisubrs
mov
add
and
outsb
or
jecxz
adc
arpl
fsubs
cltd
shrb
hlt
mov
sub
dec
jmp
cltd
call
and
sarl
push
push
imul
cli
add
mov
xchg
lret
mov
js
fmuls
cli
divb
das
lret
xchg
inc
sub
pop
inc
out
or
xor
xor
imul
nop
adc
push
add
pushf
push
add
push
in
xchg
xchg
mov
popa
ret
sti
push
mov
and
sar
testl
add
mov
lret
mov
int
movsl
mov
add
hlt
inc
xchg
out
mov
xchg
lcall
and
dec
dec
sbb
inc
leave
jmp
adc
int3
addr16
shll
loopne
imul
cmp
mov
popa
inc
pop
or
insb
lcall
std
mov
mov
dec
shl
test
xchg
fwait
cmpsb
sarb
sbb
fsubrs
mov
fmull
in
mov
out
mov
bound
pushf
push
mov
fisttpll
andl
inc
dec
add
adc
or
scas
add
push
mov
cmp
dec
jecxz
cmpsb
sub
jns
shll
push
xchg
movsb
fisubrs
aaa
das
pop
pop
dec
and
imul
push
rcr
xor
push
jb
jl
mov
inc
xchg
pop
mov
enter
sti
inc
in
scas
pop
and
test
pop
sub
pop
cmp
pop
add
repnz
and
ficomps
cmp
out
cmp
lock
je
out
jae
xorb
lahf
adc
insl
leave
out
sti
aas
mov
jns
int3
and
and
push
add
loop
mov
lahf
or
inc
jnp
out
fwait
es
dec
clc
clc
dec
ja
ja
add
inc
cmp
push
sbb
mov
pextrw
adc
jge
cmp
sbb
mov
aam
xchg
into
idiv
insb
imul
inc
jmp
cmc
dec
int
jb
cs
cwtl
into
rol
fsubs
cmp
inc
imul
inc
inc
cs
push
adc
push
movb
gs
inc
inc
jmp
andl
int3
je
roll
popl
pusha
adc
jno
test
sbbb
pop
popa
push
add
fwait
xchg
out
mov
or
or
xor
pop
cmpsl
push
sub
cli
xchg
push
fisttpll
es
orb
shlb
xor
xchg
push
fidivrs
stos
js
dec
sub
loop
arpl
out
mov
xor
sarb
test
sub
xchg
mov
xchg
pop
xor
sub
int3
aaa
push
add
subb
adc
jae
cmp
pop
sti
mov
and
mov
jg
sbbl
pop
mov
ficompl
roll
dec
fbstp
imul
repz
insb
loope
lock
hlt
lret
xlat
mov
mov
cmp
call
cltd
pusha
and
xor
nop
lret
mov
hlt
mov
mov
subb
inc
pop
sahf
mov
arpl
jg
and
rcrb
sub
push
lcall
xor
push
cmpsl
xlat
mov
cltd
or
sbb
in
sub
outsb
cmpl
cmp
int3
fimuls
sub
mov
ret
mov
pushf
mov
push
rorl
mov
pop
xchg
out
ret
lods
in
mov
cmpsb
sub
adc
sti
psllw
repz
loope
inc
arpl
and
inc
filds
test
stos
repz
fisttpl
cmpsb
mov
inc
cmp
pop
stc
popa
lods
xor
mov
mov
filds
and
mov
into
jne
xchg
jg
cld
mov
ror
jp
inc
sub
or
push
inc
jp
ja
pop
mov
jmp
jl
idivl
jnp
shl
mov
int3
sahf
adcb
or
mov
aam
icebp
shlb
ret
pop
add
sahf
jo
jle
and
add
das
push
lahf
pop
lock
jp
imul
add
mov
mov
mov
aad
cmp
add
stos
leave
dec
pushf
lods
xchg
inc
sbb
push
jle
mov
xchg
ret
xchg
loop
fdivrl
roll
mov
pop
jne
pushf
push
or
xchg
or
ja
and
scas
mov
dec
sbb
dec
clc
jecxz
jae
shrl
sbb
push
sbb
iret
jle
sub
xchg
cmp
cmc
cmp
repz
in
bound
stos
andb
pop
add
aas
js
dec
push
xchg
roll
add
xor
add
xor
std
lds
or
hlt
cmp
lahf
mov
cmp
rol
jno
push
pop
scas
mov
xchg
enter
adc
neg
and
push
mov
rcrb
scas
adc
dec
xor
jb
notl
xchg
inc
iret
adc
add
jo
aam
xor
mov
test
ljmp
add
std
mov
dec
or
mov
xchg
out
rclb
gs
test
das
add
jle
cmpxchg
dec
movsl
rorb
sbb
sbb
shl
dec
loop
cs
fstl
cli
in
jmp
dec
imul
lahf
or
loopne
xor
int3
or
add
mov
ret
lds
xchg
ja
pop
repnz
nop
pop
add
lahf
xor
stc
pop
xchg
jle
repz
sbb
ss
or
push
fiaddl
fbstp
sbb
daa
or
lods
icebp
or
or
jb
cwtl
pop
lcall
or
pop
notl
push
push
lret
add
xor
adc
shrl
jnp
sub
pop
cltd
repz
jg
mov
aaa
or
aas
scas
sti
jb
jmp
cmp
pop
sbb
adc
push
xor
mov
push
dec
ds
lods
pop
pop
or
sub
push
pop
xor
inc
pusha
sbb
cld
adc
lret
lea
cmpsb
aaa
mov
cmp
inc
mov
cli
mov
xchg
add
jnp
cmp
loope
mov
mov
movsb
divl
mov
inc
push
dec
inc
negb
out
and
pop
in
jge
gs
cmp
xor
inc
test
jns
jge
es
sbb
or
stos
ficoms
std
sbb
sahf
jno
sbb
jl
in
scas
pushf
cwtl
dec
and
sar
out
es
xchg
adc
and
daa
sub
sbb
enter
or
jmp
pusha
push
jp
test
ret
es
popa
add
xchg
lods
pop
push
iret
stos
mov
or
scas
jg
push
es
cmpsb
mov
setnp
adc
popf
sbb
js
or
sbb
xchg
mov
or
add
dec
adc
and
aad
xor
mov
nop
fwait
sub
cwtl
jno
insl
rorl
fistl
mov
outsl
repz
mov
pop
inc
xchg
add
mov
adc
mov
sub
jne
add
jno
pop
cs
mov
push
xor
mov
mov
mov
cmp
insl
push
jb
xor
cld
or
cld
es
push
stos
test
inc
and
mov
stos
sbb
lret
subl
es
push
ja
cmp
aad
clc
cmpsl
ds
xor
cwtl
pop
fcoms
cli
and
add
xor
mov
mov
int3
fiaddl
pop
dec
push
sbb
push
stc
addr16
dec
mov
adc
jae
loope
shrb
iret
pop
lock
decl
or
push
cli
xchg
adc
fwait
fwait
movsb
inc
dec
mov
push
and
stos
and
jbe
movsl
imul
add
clc
ja
or
aas
xor
jg
dec
jp
das
call
sarb
aas
add
popa
cmc
ja
adc
mov
sub
xor
dec
xchg
mov
loopne
mov
not
fcomps
add
call
ds
add
or
cmpsb
fsubl
xchg
push
xchg
fwait
jg
movsl
sbb
lret
adc
cmpsl
cmpsb
xchg
add
xor
ss
or
cmp
sbb
sbb
mov
inc
enter
imul
test
or
mov
dec
xchg
xchg
inc
jae
inc
mov
xor
ret
mov
jecxz
lock
push
lds
in
test
stos
xchg
adc
dec
stos
test
cltd
in
mov
stos
inc
fmul
loop
mov
mov
jmpw
mov
cwtl
int3
in
sub
hlt
cmp
jmp
fwait
lock
test
xor
xchg
jp
es
jle
pop
mov
inc
cltd
xor
mov
sbb
movsl
das
bound
xor
out
data16
mov
or
nop
adc
add
xor
addb
data16
pushf
mov
jae
push
mov
xchg
sbb
and
cmpsl
lock
jns
stos
mov
and
sbb
cmp
movsb
dec
xlat
daa
pushf
sub
push
xchg
xchg
adc
sbb
mov
inc
iret
mov
lret
mov
sbb
test
int3
xchg
pop
push
imul
jnp
sbb
arpl
cld
in
repnz
cmp
nop
aaa
in
stos
mov
pop
mov
mov
iret
movl
sub
push
movsb
je
jae
mov
push
push
imull
push
mov
pop
enter
adc
mov
add
shrl
xchg
inc
mov
adc
hlt
sbb
std
cmp
jno
pop
xor
ret
dec
clc
sbb
hlt
mov
jo
dec
mov
or
hlt
add
mov
or
cmpsb
movsb
push
icebp
test
xchg
aaa
cmpsb
mov
ja,pt
nop
mov
dec
scas
imul
or
dec
push
cmp
adc
sbbb
lock
aaa
push
lcall
push
popa
or
cmp
mov
inc
int
sahf
int3
xor
cmp
push
aaa
movsb
test
and
notb
test
int3
loope
test
and
or
mov
push
iret
inc
insb
push
xor
xchg
data16
xor
xchg
and
xchg
lods
int3
pop
leave
mov
sbb
lcall
in
pop
leave
js
pop
mov
cs
dec
addr16
mov
addr16
arpl
mov
adc
mov
aam
in
scas
mov
adc
movsl
pop
test
movsb
lret
push
jle
and
clc
inc
dec
pop
jge
lcall
mov
ljmp
ret
out
dec
mov
clc
mov
lock
aaa
inc
aam
adc
cld
mov
in
or
imul
popa
aad
jo
xchg
xchg
and
pop
xchg
mov
nop
ret
or
lahf
push
mov
push
imul
lcall
push
scas
jb
lahf
mov
shll
mov
js
in
mov
xor
idivl
ds
dec
mov
in
cmc
in
shrb
loop
or
or
add
dec
repz
sti
ret
xchg
pusha
out
jmp
dec
mov
scas
addr16
mov
mov
sti
test
outsl
add
cmp
pop
nop
popf
mov
or
repz
int
mov
mov
or
cmp
repz
dec
push
or
lret
xor
add
lock
lcall
inc
ljmp
jle
xor
stos
inc
pop
jl
and
ds
jbe
pop
das
jnp
decb
cs
mov
popf
jae
mov
or
xlat
jo
and
inc
cld
pop
aam
mov
std
aaa
lods
and
push
cmpsl
add
ds
xchg
pop
jle
xor
daa
jge
mov
sub
movsl
pop
out
or
pushf
outsl
and
test
repz
mov
cmp
bound
cltd
jl
xor
loop
xor
sbb
mov
jmp
sbb
leave
leave
jo
in
movsl
enter
inc
inc
pop
jge
jno
scas
repnz
sbb
outsl
mov
hlt
dec
fs
mov
xor
mov
ja
lret
add
test
jl
test
mov
xchg
scas
xchg
jmp
dec
push
outsb
mov
scas
inc
ffree
push
add
jo
int3
loope
movsb
iret
loopne
pusha
or
mov
dec
push
jg
jnp
aam
lods
jnp
jo
clc
icebp
fdivrl
inc
mov
fstl
or
sbbb
enter
adc
pop
mov
push
test
lds
adc
dec
mov
fwait
mov
movsb
outsb
in
inc
add
mov
cmp
and
push
out
rcl
or
jne
fnstenv
xchg
fldcw
or
add
xchg
jg
lret
popa
stc
mov
lea
lds
cli
pop
sti
in
dec
fldt
push
jg
jns
push
repnz
std
pushf
mov
inc
and
lods
cmc
mov
rorl
ror
push
aaa
cmp
je
xor
outsl
push
rorb
mov
xchg
imul
call
pop
push
and
pop
cmpsl
popa
scas
mov
repnz
ret
add
cmp
fs
sub
cmpsl
or
pop
call
popa
push
enter
leave
notl
lds
pop
daa
add
jg
addr16
pushf
push
in
sbb
xor
xor
pop
jnp
je
mov
lock
inc
mov
std
mov
mov
in
imul
pmaxub
inc
lahf
mov
sti
mov
xor
or
leave
cmp
loope
fisttpl
ss
fdivs
ljmp
mov
popa
inc
inc
addb
pusha
popf
adc
or
and
outsb
xchg
js
enter
lds
jnp
data16
cmp
aam
or
mov
js
jg
jbe
inc
cmpsl
sahf
mov
pop
call
xor
mov
pop
push
sub
jne
jbe
or
sti
ja
pop
and
mov
mov
out
mov
xorl
bound
mov
mov
inc
inc
pushf
or
mov
lahf
inc
mov
jmp
jge
add
int3
add
ret
cmpl
jae
inc
jbe
and
stos
subb
adc
cmp
or
sti
xchg
clc
fnsave
sub
cmp
aas
mov
inc
jnp
faddl
outsl
aad
shll
lods
xchg
out
sti
pop
out
addr16
or
mov
popf
xor
and
pop
lahf
mov
xor
iret
add
xchg
sti
test
xorb
shll
sbb
ljmp
clc
ret
cmp
or
pop
jno
mov
dec
cs
in
pop
dec
das
jle
aaa
xor
out
insl
sub
fsubrp
addb
cmp
and
jmp
adc
push
stos
mov
push
mov
pop
sub
pop
jl
sub
out
pop
cmpl
or
or
push
mov
cltd
sbb
push
xchg
or
fidivrl
xchg
cmp
dec
cmp
icebp
nop
pop
int
xchg
xor
push
mov
sub
cmp
out
or
insb
inc
mov
out
imul
mov
out
or
roll
es
jmp
mov
movsb
sbb
nop
stos
and
sbb
cltd
or
jae
shr
cmp
dec
mov
sub
rcrb
or
pop
ljmp
in
cltd
test
fcomps
jp
pop
xlat
mov
push
jnp
mov
and
outsl
inc
xor
jle
pop
lcall
dec
cmpsl
int
adc
cmp
add
inc
mov
pusha
dec
pop
int3
sahf
outsl
fbstp
cmp
subb
mov
xor
test
lret
mov
cmp
jge
fwait
movsb
je
jbe
lcall
movsl
std
or
xchg
nop
loope
insb
jbe
lock
lods
push
push
lea
mov
dec
sarb
mov
je
test
inc
pop
and
mov
jle
ljmp
lret
aad
dec
mov
aaa
lcall
gs
mov
sub
cmpsl
dec
decl
mov
push
test
jo
mov
inc
cmp
cmpsl
lods
jg
mov
inc
push
ret
sbb
out
rcl
subb
push
push
cmp
xor
or
ficoms
inc
mov
mov
push
pop
popf
xchg
imul
repnz
sbb
je
dec
add
test
xchg
repz
addl
jbe
cmpsl
ljmp
lea
cmp
pop
leave
sbbb
ja
ljmp
mov
and
into
jno
shl
and
cmp
pop
dec
push
mov
cltd
fs
into
adc
into
or
sbb
mov
sbb
loopne
adc
xlat
fstl
sti
and
mov
int3
pop
mov
mov
inc
insb
mov
push
fcmovnbe
sbb
sahf
mov
repnz
fwait
sbbb
and
in
ljmp
clc
test
gs
xor
cltd
in
xor
pop
loopne
dec
stc
add
xor
aad
push
mov
sbb
mov
enter
out
dec
scas
testl
repz
add
jo
in
lret
adc
xor
push
push
fsubrl
pushf
and
sub
adc
lods
fists
mov
aaa
dec
xor
aas
inc
pop
push
fwait
shrb
fcoms
lods
js
in
cmp
push
and
sbb
push
wrmsr
add
movsb
mov
mov
test
sbb
mov
arpl
fsubrs
aad
sbb
fiadds
nop
push
mov
loop
popa
shrb
jnp
insl
repnz
mov
cmp
xchg
out
pop
test
xor
sbb
out
leave
and
movsb
xor
stc
enter
aad
mov
add
addr16
mov
xchg
pop
mov
adc
xchg
xor
cmp
or
scas
push
dec
jp
sbb
pop
xchg
mov
adc
call
pop
movsb
nop
sarb
jbe
mov
repnz
add
aam
fwait
lret
cmp
lret
sbb
pop
push
add
jb
les
inc
nop
in
sub
mov
add
daa
pop
dec
jns
popa
sahf
mov
loop
inc
mov
mov
cmc
lds
jp
mov
jle
cmp
inc
dec
pop
mov
pop
inc
icebp
add
sbb
mov
dec
mov
xchg
lret
fidivl
and
sub
inc
in
lods
fimull
cmp
mov
cltd
test
mov
test
mov
scas
movsl
enter
and
push
sbb
test
mov
cmp
pop
out
scas
and
ja
cmp
iret
addr16
sub
fbstp
insb
adc
movsb
mov
or
insb
mov
and
jae
mov
ljmp
test
data16
test
add
push
xor
fsubr
fwait
cmp
dec
jge
adc
insl
mov
vextractps
dec
hlt
dec
xchg
mov
test
ja
lds
cltd
mov
lcall
xchg
push
imul
jnp
inc
pushf
out
les
push
push
scas
push
call
cmp
subl
inc
outsl
mov
jmp
pop
and
rep
mov
jbe
pop
xchg
fisubl
jl
pop
jmp
fdiv
mov
pop
pop
add
ljmp
jle
repz
sbb
dec
mov
int3
sbb
cmp
inc
cmp
repz
loopne
jo
out
sti
sbb
fmulp
sbb
out
enter
lret
push
xchg
aaa
push
jnp
dec
int3
lret
lret
and
aad
sbb
int3
fsubrl
fdivs
aas
cmp
clc
adc
rorl
jb
int3
arpl
dec
popf
sbb
notl
add
movsb
sub
dec
sbb
mov
shrl
clc
or
mov
mov
shrb
mov
jo
addr16
mov
test
xchg
adc
inc
jl
pop
adc
push
sub
je
arpl
adc
out
cli
int3
or
in
or
jno
or
or
int
jg
aad
or
inc
test
jo
test
fnstsw
jne
jae
mov
xor
jmp
cmpsb
push
or
mov
sti
cmp
mov
and
jge
pop
jge
popf
push
xlat
aad
jge
jnp
jnp
clc
lock
pop
cli
mov
rcl
pop
in
pop
mov
movb
dec
jg
icebp
pop
sarb
push
ds
dec
outsl
hlt
dec
mov
pushf
mov
ret
sahf
outsl
mov
outsl
push
add
xchg
xor
push
xor
das
sbb
adc
std
mov
pop
xor
add
mov
insl
stos
fmull
sub
jns
mov
lock
addr16
adc
mov
mov
lods
adc
nop
jp
mov
lods
in
dec
push
test
shrl
push
rcrl
adc
mov
mov
lods
adc
jmp
lock
aad
arpl
xor
sub
nop
stos
cwtl
mov
jnp
sbb
scas
outsl
xor
cmp
push
xor
fnsave
fdivrs
mov
shlb
imul
mov
cmp
xchg
add
cmpsl
fimull
pop
stos
sub
mov
add
mov
xor
repz
mov
pop
cli
mov
int3
cmpsb
jmp
lods
push
dec
imul
repnz
push
das
test
lds
mov
mov
hlt
cs
push
cli
xchg
jb
push
xor
dec
imul
mov
jb
pop
lods
sub
jmp
repnz
xor
bound
stc
push
stos
cwtl
mov
loope
sbbb
sarb
fidivrl
mov
sbb
das
insl
ljmp
clc
rolb
dec
mov
iret
jge
rcrb
jp
pop
dec
dec
mov
call
lock
mov
xor
xor
cld
icebp
mov
mov
push
and
add
movsl
daa
div
insb
and
cmp
jmp
lods
mov
test
add
mov
inc
js
pop
sbb
inc
cmpsb
add
pop
cmp
aad
inc
inc
pusha
sub
adc
xchg
lds
ret
into
loopne
sub
fildll
mov
loop
jbe
fs
sbb
stc
jno
jecxz
shrl
push
mov
xor
cwtl
fcompl
jp
std
push
xor
inc
mov
xor
stos
test
mov
bound
jno
xor
es
out
jmp
cwtl
fisttpll
popf
sbb
je
lods
ja
loope
sahf
xor
or
or
xchg
pop
lods
push
call
xchg
dec
in
repnz
loope
nop
mov
mov
repz
xchg
xchg
in
adc
push
inc
inc
mov
gs
pop
or
out
pop
mov
lea
xchg
adc
xor
sti
push
or
and
out
add
jno
cltd
inc
lret
int3
dec
rorl
mov
and
add
stos
popf
mov
or
jae
and
fstl
fwait
push
nop
stc
adc
movsl
add
jae
pop
mov
sti
adc
out
repz
loopne
out
mov
in
scas
push
and
les
ja
lahf
add
inc
ljmp
mov
add
push
in
leave
sbb
or
je
mov
add
jns
stos
and
addb
es
fstpt
cmp
xchg
jl
stc
dec
aad
ja
xorb
movsb
jg
popa
or
cmpsl
push
ja
push
dec
sbb
mov
testb
dec
sahf
repz
adc
lret
add
test
sar
fdivl
rolb
les
push
pusha
push
jnp
pushf
xor
lea
push
push
jne
fs
xchg
int3
push
ret
jnp
pop
mov
in
test
xchg
sub
inc
movsb
push
fisubl
add
dec
push
cmpsb
adc
testl
cwtl
test
in
inc
fcompl
lcall
fcmovu
enter
xlat
fwait
lods
and
cmp
mov
pop
push
rcrl
mov
sub
jecxz
sub
bound
sbb
aaa
push
cmpsl
movsb
pushf
adcb
imul
aas
test
subb
in
cli
daa
pop
push
jne
push
mov
mov
mov
dec
cld
mov
mov
mov
or
loop,pt
sbb
aad
xchg
in
pop
hlt
je
xchg
in
pop
ja
push
addb
push
stos
loope
inc
adc
mov
fsts
push
cmp
fdivs
nop
test
out
test
inc
inc
ret
dec
das
sbbl
jno
cld
popf
fsubs
dec
out
mov
cmp
hlt
test
js
or
mov
mov
dec
mov
repz
insb
jle
dec
cwtl
leave
cmp
add
jmp
mov
jecxz
inc
fcmovnu
imul
adc
mov
mov
loopne
add
or
pop
int
pop
lods
fwait
mov
jae
out
adc
fadds
out
push
imull
xchg
mov
mov
sub
push
add
arpl
dec
add
xchg
ja
loope
ret
push
mov
xor
add
cmp
ret
mov
test
adc
sbb
dec
inc
cmp
fwait
int
mov
outsb
pop
es
xchg
add
mov
test
lahf
je
repz
sbb
ss
lods
adc
and
push
cmp
movb
mov
or
in
or
push
mov
mov
movswl
scas
inc
push
loope
xchg
fs
add
test
scas
outsb
out
inc
leave
cmpb
paddd
mov
push
cmpsb
inc
jo
push
xchg
nop
je
popa
jp
mov
xor
or
jnp
mov
lret
stos
adc
adc
loopne
dec
loop
and
or
leave
and
enter
mov
mov
subl
mov
jge
dec
into
iret
and
jno
out
xchg
xor
push
lret
dec
test
cmp
lea
mov
scas
jae
repnz
inc
pop
or
nop
mov
outsb
rep
sarb
adc
push
sti
push
das
mov
pop
pop
mov
orb
jl
sti
push
sbb
add
das
jecxz
mov
xchg
mov
sub
inc
or
mov
in
xlat
push
adc
pusha
test
mov
test
xchg
add
jle
push
stos
in
inc
jle
lea
pop
push
and
add
ss
mov
sbb
repz
cli
mov
inc
sub
cmpsl
cli
pop
lds
cmp
push
icebp
iret
roll
aam
push
inc
cmp
add
mov
sbb
sub
dec
sbb
lock
mov
outsb
fwait
aaa
pop
jg
rcrb
cltd
jbe
ret
pop
aam
call
pop
fiadds
dec
out
pop
pop
fidivrl
dec
inc
add
pop
sahf
sub
outsl
orl
int
mov
and
andb
dec
fistps
jg
inc
dec
dec
xchg
movsl
in
adc
xor
scas
and
in
xchg
push
adc
inc
inc
add
subl
jmp
movsb
or
push
push
jecxz
std
es
ljmp
jge
lret
jmp
sarl
jge
lret
out
fisubrl
ljmp
adc
xchg
pop
or
push
mull
and
or
mov
fs
cli
mov
dec
fidivrl
sahf
fisubl
lods
pop
testl
and
cmc
ret
shl
mov
jg
mov
add
mov
sub
out
arpl
divl
cmp
int
pop
mov
xchg
dec
ljmp
insb
dec
xor
repnz
push
pop
inc
xchg
mov
mov
add
cli
scas
push
rcrb
sub
icebp
jmp
cmp
push
jae
outsb
mov
lahf
cs
lods
xchg
cmpsl
jmp
inc
outsl
lret
sbb
sti
sti
movsl
dec
mov
push
mov
nop
jge
mov
mov
jbe
int
dec
sbb
call
fstl
xchg
test
add
mov
adc
cltd
jmp
lds
dec
aam
iret
hlt
xchg
aas
add
adc
repnz
jb
mov
push
cmc
ljmp
jge
adc
cmpsl
sahf
adc
cmp
jmp
cmpsb
pop
sub
scas
mov
xchg
fidivs
fucom
xor
repnz
lret
es
call
nop
jne
pop
out
xor
in
jl
add
dec
lods
mov
mov
xchg
cltd
xchg
xchg
mov
inc
loopne
leave
popa
int
push
cmc
mov
cs
pop
fnsave
add
inc
pop
lret
mov
filds
lcall
into
mov
xor
push
outsl
xlat
lahf
outsl
or
out
pop
imul
jg
push
push
and
imull
test
dec
out
mov
or
and
mov
pop
daa
jle
movsl
or
test
jl
xor
pop
nop
mov
xchg
filds
sbb
scas
test
daa
inc
push
popf
xchg
adc
jg
lods
pop
ret
scas
adc
stos
lea
imul
push
out
call
inc
mov
int3
in
pushl
sub
stc
dec
jmp
mov
sub
push
fists
scas
repnz
jns
jl
inc
lods
in
mov
push
aad
pop
adc
mov
mov
in
outsl
test
idivl
cli
lds
or
pusha
daa
xchg
pushf
pop
ret
ljmp
jb
jg
arpl
adc
js
cld
dec
fs
addb
or
ret
filds
into
or
lea
pushl
push
cmp
das
xchg
iret
addb
sub
rolb
adc
test
cltd
xor
and
pusha
lcall
testb
xchg
pop
dec
out
mov
mov
mov
lods
cmpsb
inc
cmp
push
or
call
ret
inc
sbb
cmpsl
push
xor
jmp
sub
adc
sub
ljmp
jge
loop
jl
adc
ljmp
add
addb
add
lahf
mov
mov
jnp
mov
mov
jbe
mov
cmp
mov
in
mov
fldt
cmc
movsl
sub
mov
outsb
and
fsubl
jecxz
lcall
push
repnz
and
mov
movsl
jo
xchg
pusha
shll
push
mov
orl
mov
ret
add
sub
sub
pop
sub
mov
in
dec
pop
enter
xchg
sub
cmp
cmp
pop
cli
sar
fdiv
sbb
rorl
inc
call
cli
fbld
test
push
xlat
xlat
je
repnz
jae
pop
and
xor
sbb
lahf
cmpsl
jns
test
cs
cwtl
loop
adcb
stos
and
in
loop
fldcw
jbe
mov
cmp
mov
je
mov
or
fcompl
movsl
adc
or
mov
add
inc
add
and
jno
es
push
adc
stc
stc
test
je
cmp
or
js
cmpsl
adc
xchg
xchg
jno
aam
inc
jne
addb
mov
adc
pop
test
add
pop
sbb
mov
cli
nop
mov
call
insb
outsb
fdivp
cmp
jecxz
hlt
jbe
lods
mov
roll
ja
mov
adc
nop
pushw
sbb
bound
mov
jbe
or
in
test
jge
arpl
mov
fnstenv
out
out
cmp
adc
outsb
sub
xchg
sar
add
popf
sbb
setno
mov
xchg
and
mov
jns
jge
sub
mov
repnz
adc
pop
pop
mov
shlb
push
or
sbbl
lahf
pop
xchg
cmp
js
lahf
xchg
in
ds
inc
push
adcl
adc
push
xchg
sbb
aam
cmp
or
sub
jno
mov
out
mov
fistpll
cwtl
gs
cmp
les
lahf
cmpsb
ljmp
push
negb
mov
leave
mov
mov
dec
pop
hlt
cmp
mov
cmp
iret
js
xchg
cmp
repz
cmc
lahf
push
data16
dec
fwait
xchg
lahf
sbb
in
or
mov
loope
inc
pop
fldenv
inc
aad
inc
outsl
movsb
push
pop
push
jge
cltd
loopne
xchg
repz
pop
arpl
mov
shrl
inc
xchg
movsb
inc
push
or
in
dec
or
roll
addr16
es
pusha
fisttpl
rclb
ja
jnp
jg
cltd
std
sbbl
jge
mov
mov
pop
stc
mov
inc
jbe
adc
cli
repz
adc
jp
aam
jno
icebp
shrl
push
test
stos
fldz
cmp
cmp
int
or
mov
iret
sub
jns
mov
hlt
adc
in
mov
xchg
sti
xchg
mov
jns
jg
cld
fisttpl
pop
aam
add
adc
dec
aad
or
jge
mov
std
pop
jmp
orl
lock
mov
sahf
clc
push
mov
flds
cmpsl
add
inc
xorb
xchg
shl
leave
sahf
xchg
loope
pop
mov
xor
stos
scas
pop
xchg
cltd
arpl
adc
mov
les
repz
sbb
push
std
aad
mov
pusha
loope
mov
inc
jmp
xchg
sbb
add
lods
jecxz
popf
adc
cmp
inc
in
lcall
inc
test
arpl
sub
xchg
cmpl
cmpsb
out
xor
cld
or
mov
push
ljmp
sub
loop
es
stos
out
aad
jne
cmp
lahf
ret
test
xor
popf
mov
inc
lds
adc
out
cli
mov
xor
mov
in
lods
pop
sub
cmc
pop
adc
mov
add
push
xlat
out
push
mov
icebp
mov
or
repz
push
jecxz
cld
add
idivl
fsubrs
or
and
xchg
lds
push
imul
fwait
push
cmp
sbb
dec
pusha
bound
loope
sbb
nop
stos
stos
mov
mov
in
dec
lahf
mov
je
cs
adc
jg
add
pop
js
clc
lds
sbb
push
jle
bound
cltd
mov
xor
call
arpl
and
cld
iret
dec
xor
cld
mov
cmp
fwait
in
and
aam
clc
fidivl
sub
inc
insl
lret
ret
push
inc
dec
cmp
subl
imul
out
nop
adc
xchg
adc
cmp
cmovno
inc
fiaddl
cli
in
jno
dec
xor
jbe
xchg
add
pop
out
pop
iret
jnp
push
push
pop
in
adc
out
mov
inc
cld
shr
pop
mov
xchg
sbb
faddl
sbb
xchg
ds
cltd
int
stos
lods
pop
ds
ljmp
mov
loop
lock
out
adc
xor
loop
pop
sbb
shlb
xchg
or
scas
pop
loopne
adc
sbb
mov
cmpsb
es
loope
icebp
or
jle
push
fistps
div
fs
movsb
jns
pop
aas
jmp
iret
sti
in
aam
cmp
aaa
jo
cmpsl
div
mov
ret
andw
in
sub
jecxz
push
daa
loop
xchg
lods
daa
jmp
sbb
fcmove
jecxz
mov
insl
mov
add
lret
fwait
xchg
push
sbb
fidivrl
aam
test
scas
jo
into
inc
sbb
scas
adc
jl
sahf
jge
das
mov
nop
stc
test
mov
add
and
sbb
fbld
test
mov
xor
sub
nop
or
je
pushf
sar
out
push
or
mov
out
lret
in
sub
pop
cmpl
outsb
pop
cld
jle
and
jo
mov
pushf
in
and
mov
mov
rol
in
shrl
mov
jbe
push
fidivs
int
and
cld
lods
add
cmp
sahf
add
adcl
adc
stos
icebp
rep
mov
jle
dec
outsl
mov
ret
popa
mov
xlat
outsb
mov
lods
sahf
fidivl
shrb
jecxz
adc
ds
adc
or
test
ss
pop
in
ss
ret
popf
out
xchg
mov
fsubrp
push
fnstsw
sti
add
add
xchg
movsb
btc
cvtpi2ps
sub
out
jb
fcoms
insb
iret
jmp
jbe
mov
nop
inc
xchg
jae
sti
pop
and
mov
cmpsl
fsubl
cmc
dec
pop
push
add
push
aad
lds
cmp
cmp
das
shr
dec
xlat
icebp
push
push
sbb
xor
fcompl
fs
lret
push
out
pop
out
hlt
push
push
mov
and
fwait
out
inc
mov
jg
pop
adc
mov
xchg
fidivl
pop
lret
pop
inc
popa
fwait
cmp
sbb
mov
data16
loope
test
xor
das
lret
lods
mov
sbb
push
sub
inc
rol
xchg
cmp
leave
cmc
test
mov
sarb
cmpsl
xchg
aam
outsl
sbb
or
lahf
data16
add
in
fcompl
dec
stos
sub
xor
enter
cs
inc
mov
xlat
push
outsb
adc
jne
xor
pop
fwait
pop
adc
cs
pusha
dec
ficoml
xor
pop
arpl
dec
adc
aam
sbb
lahf
lret
xchg
jbe
lret
push
rcrb
mov
outsb
nop
push
mov
sub
xchg
xchg
sub
imul
aad
loope
ret
xorb
jb
add
repnz
xor
popf
jnp
int
adc
out
jbe
mov
lahf
push
pop
lods
ja
dec
mov
or
outsl
mov
decb
sub
outsl
cmp
stos
sbb
or
dec
or
jae
rcrb
push
dec
ficoml
sub
xor
inc
mov
sub
mov
fadd
pop
jl
jno
addr16
sbb
jns
test
mov
dec
test
and
inc
and
mov
lock
fiadds
jl
inc
es
sub
sub
mov
xor
and
cltd
leave
push
stos
dec
xor
iret
stos
add
adc
ss
cmp
pop
and
test
or
fucomi
and
add
xchg
aad
dec
or
test
pop
jae
mov
add
ljmp
aad
cpuid
pop
sub
mov
sarb
xrelease
add
push
inc
dec
ja
ret
inc
in
out
cmp
dec
aaa
pusha
cmpsl
test
lods
inc
aaa
pusha
clc
test
add
lods
lret
cmpsb
sbb
repz
in
leave
dec
ljmp
mov
or
and
shl
inc
mov
cld
popa
pop
out
push
cmp
jle
cmp
test
std
in
fcoms
adcb
push
into
pop
dec
popf
xor
arpl
pop
cmp
inc
inc
add
push
testl
test
lahf
cld
filds
leave
div
sahf
test
inc
lds
pop
xchg
cld
jns
fadd
push
mov
cltd
push
cmp
or
repnz
push
jg
cmp
mov
nop
out
push
loopne
sub
rclb
sarb
andl
sub
inc
mov
fs
jnp
int
sub
fwait
js
and
enter
fcomps
push
and
cmp
pop
cmpsb
cmp
sbb
sub
cmc
cmpsb
testb
or
mov
mov
into
adc
sbb
in
lea
mov
lea
mov
outsl
mov
xchg
jge
add
fsts
jge
mov
jg
in
in
pop
das
fdivp
mov
jnp
xlat
mov
clc
out
scas
adc
jb
roll
out
push
inc
adc
xchg
or
or
mov
in
and
adc
cmp
rcr
ficoms
mov
dec
jbe
inc
mov
rclb
xor
stos
sub
mov
jl
or
cmp
and
inc
dec
push
jl
test
popa
es
js
sub
insb
or
mov
sti
inc
mov
add
jle
jecxz
icebp
outsl
scas
pop
std
push
push
xchg
ljmp
cmp
int
test
sub
into
loop
push
outsl
mov
mov
cmpb
xor
fisttps
iret
mov
cmpsl
dec
sub
pop
sahf
aas
mov
pop
dec
ret
les
sub
test
mov
jb
imul
mov
dec
lret
sub
cmp
push
or
mov
shrb
xchg
test
ds
nop
movsb
pushf
lahf
hlt
mov
mov
xor
hlt
or
sub
add
inc
rorb
push
and
mov
sbb
add
or
jecxz
imul
lahf
cmpb
push
cmp
mov
mov
arpl
mul
xor
popf
jmp
je
notl
ret
fwait
pop
pop
in
sbb
fsubl
push
mov
cmc
in
cld
movsb
jge
or
fabs
pop
or
scas
sub
xchg
int
lahf
fiaddl
mov
inc
test
movsb
lcall
scas
xchg
fsubrl
and
loopne
cmp
add
addr16
add
sarb
mov
insl
push
lods
adc
sub
inc
punpckhwd
hlt
mov
sub
clc
mov
in
mov
das
xor
cmp
stos
clc
cmp
faddl
ror
testl
add
cmp
push
xchg
and
and
add
negl
inc
hlt
mov
mov
cmpb
xlat
stos
mov
jb
jg
or
in
cmpsl
stos
dec
fs
mov
xchg
xlat
dec
add
xchg
shlb
lods
pusha
mov
arpl
call
repz
addr16
or
push
xor
pusha
add
mov
loopne
jle
mov
mov
mov
mov
jb
ja
inc
push
adc
lock
jmp
stos
jnp
adc
mov
dec
ret
push
sbb
js
scas
iret
dec
jmp
jnp
repz
outsl
mov
mov
jbe
xchg
xlat
sahf
xor
adc
bound
inc
mov
xchg
xchg
rorl
xor
and
xchg
and
sahf
cmp
push
subb
xchg
adc
or
push
xchg
push
xor
inc
pop
ja
stc
out
pop
idivl
iret
pop
negb
sub
notl
dec
test
aaa
movsb
jecxz
mov
xor
stos
sbb
jo
cltd
add
mov
filds
popf
in
cld
mov
sub
adc
cmp
jo
push
sub
jnp
lock
cmp
leave
sbb
inc
sbb
sarb
or
jnp
mov
xchg
and
shrl
lods
or
cs
or
pop
jg
test
xor
xor
shll
dec
jns
aas
or
stos
jg
jno
add
test
roll
decb
xchg
and
mov
mov
call
or
dec
push
cld
testl
mov
sbb
sub
sbb
inc
xchg
mov
inc
add
lcall
lock
loop
adc
inc
fsubs
fbld
or
test
ret
popf
add
loopne
dec
and
aas
stos
jle
inc
ficompl
sub
inc
rclb
lcall
xchg
mov
js
fstp
add
mov
push
adc
mov
xchg
into
inc
popa
sbbl
nop
pop
mov
xor
and
test
cld
insb
fsts
faddp
sahf
roll
shrb
fs
faddl
dec
int
out
rcll
xorl
leave
mov
lea
es
fwait
add
icebp
xor
push
je
out
shrb
notl
adc
and
or
insl
jecxz
loopne
push
or
xchg
js
mov
cld
nop
or
test
sbb
imul
pop
mov
icebp
xchg
ds
jle
fisubs
pop
and
cmp
ja
shlb
rcrb
add
dec
int
dec
clc
and
in
add
repz
jns
lahf
inc
xchg
insl
pushf
les
mov
pop
or
push
scas
iret
dec
addl
adc
clc
xchg
jp
aad
not
mov
sub
int
cmp
int
insb
xor
dec
hlt
popa
aaa
mov
sub
int
push
int
mov
inc
adc
cmp
sbb
popa
inc
and
xlat
sbb
sub
sbb
xor
mov
fadds
imul
add
adc
sub
dec
mov
mov
bound
arpl
mov
lretw
push
adc
andl
sar
push
enter
jb
je
outsl
dec
and
add
sahf
getsec
push
cwtl
mov
push
cmp
push
mov
and
fwait
inc
mov
ret
adc
cmp
add
sub
mov
push
mov
into
clc
sub
loop
ret
orl
pop
cmp
cmp
xor
sub
adc
out
adc
add
test
in
mov
or
lods
jo
test
mov
int
lock
rcll
out
pusha
sub
stc
stos
mov
dec
mov
imul
cmp
xchg
sbb
add
xor
jo
arpl
inc
daa
pop
test
stos
bound
push
jle
call
lods
add
or
fnstcw
bound
fisubrl
pop
add
daa
sbb
outsb
lods
xor
lea
cmp
jae
into
or
icebp
aaa
mov
ret
push
mov
ja
xchg
jnp
fisttpl
pop
js
pop
loope
mov
adc
fs
push
test
push
lock
and
push
jmp
mov
insl
and
jecxz
repz
test
pushf
sub
mov
out
into
test
cmp
imulb
jb
jecxz
mov
adc
mov
lret
sahf
xchg
xor
sub
iret
insl
outsl
into
daa
ljmp
js
mov
roll
xor
mov
clc
ja
xchg
adc
mov
rorl
xchg
popa
pop
mov
cmp
sub
into
aad
leave
dec
mov
xchg
pop
ffree
test
mov
data16
push
icebp
rcrl
imul
and
test
jo
pop
cmp
scas
and
std
lcall
in
test
or
decl
jmp
lods
xchg
out
xor
cmp
pop
cmp
incl
daa
in
and
xor
das
mov
adc
mov
xchg
lret
cmc
dec
jno
add
sub
lret
lds
cmp
pop
ds
push
xor
or
jecxz
int3
sub
notl
cmpsb
pusha
cmpsb
mov
fmuls
pop
adc
imul
and
repnz
xlat
call
push
jg
ja
fisttpl
mov
sbb
lret
sbb
mov
xor
lret
push
add
lods
push
pop
adc
clc
and
aam
jns
sbb
mov
lock
sbb
lods
scas
jg
in
in
push
shlb
push
sbb
nop
lret
fnstenv
pop
mov
pop
enter
mov
cmc
fistpl
mov
sbb
outsb
cltd
cld
xor
lock
or
aaa
or
mov
je
loopne
cmp
mov
mov
mov
mov
adc
test
jmp
jns
scas
arpl
je
test
enter
jecxz
lods
or
pushl
mov
jbe
jae
push
leave
mov
popf
insb
mov
xchg
shlb
pop
push
jnp
int3
add
repz
and
xor
dec
add
lcall
and
dec
or
jno
dec
ret
scas
or
lret
out
or
mov
dec
xchg
push
adc
icebp
icebp
mov
jp
testl
aas
fildll
jbe
xor
stos
cmp
xchg
and
dec
loopne
aas
mov
outsl
mov
jp
jp
stos
test
pop
gs
pusha
mov
or
push
add
outsb
push
loop
shlb
repz
cmp
push
in
xor
dec
andl
and
push
adcl
dec
aaa
lds
fcmovnbe
mov
ss
rcll
push
xchg
add
xor
repnz
or
xchg
or
insb
mov
push
push
mov
fstps
pop
imul
push
in
inc
daa
dec
jp
fwait
cmp
mov
xor
jnp
loop
push
ret
pop
dec
je
and
pop
add
fimuls
pcmpgtw
pop
icebp
push
ja
and
jnp
mov
negl
jl
sbb
dec
lahf
mov
aam
enter
shrb
fld
cmp
push
aas
rcr
aas
in
fstps
sahf
lea
scas
sub
and
xchg
mov
mov
lods
mov
sbb
and
sub
mov
nop
sub
sub
call
aas
jnp
xchg
scas
or
jg
sub
mov
movb
setnp
mov
int
mov
jne
lods
jne
in
shlb
jno
jno
pop
push
push
mov
mov
cmp
test
outsl
push
addr16
mov
pop
inc
decb
inc
clc
dec
dec
scas
jl
loop
loope
in
or
or
push
jns
adc
out
jl
jmp
adc
mov
fiaddl
int3
in
add
and
pushf
xchg
or
mov
bound
rolb
jp
fmuls
and
jb
jns
insl
pusha
xchg
aam
mov
adc
lea
jmp
lock
push
cmc
xchg
test
testb
adc
push
inc
int3
cmp
ljmp
add
push
cmp
add
push
test
add
repz
jne
ror
jp
cmc
pop
faddl
mov
lods
lods
jmp
icebp
push
sbb
loope
sbb
hlt
dec
xor
loopew
sub
dec
cmp
push
das
mov
xchg
mov
test
fsubl
cmpsb
jg
les
cltd
hlt
mov
push
jmp
pop
push
push
jns
adc
pop
mov
cmp
and
push
push
sbb
nop
pushf
test
hlt
adc
inc
repz
push
imul
sub
std
jno
in
leave
test
outsl
mov
sub
js
sub
push
xor
outsb
and
mov
imul
pop
in
fidivrl
lock
out
cwtl
and
sub
inc
arpl
fisttpll
or
xchg
jl
xchg
adc
add
sti
fsubrs
mov
mov
dec
inc
mov
sbb
lea
jg
push
pusha
jnp
jbe
mov
xchg
je
sbb
aaa
cmp
pop
push
mov
clc
xor
les
add
addl
out
sbb
addr16
push
lock
ror
mov
mov
rcrb
sbb
sbb
addr16
and
sub
inc
in
fs
mov
shrl
pop
cmpsl
xor
test
ret
insl
jle
xchg
rcrb
iret
pop
adc
jo
add
shl
ficomps
or
lock
popf
pop
pop
pop
or
addr16
pushf
xor
adc
rorb
popl
push
sub
shll
jne
repz
dec
mov
jno
loope
mov
push
mov
out
ret
sbb
loope
or
test
cltd
or
xor
stos
int
pop
jns
mov
jno
cmpsb
aas
fnsave
mov
mov
jbe
sub
out
dec
mov
push
mov
add
push
arpl
scas
daa
pop
ret
inc
pop
das
shrb
push
pop
xchg
and
bnd
std
inc
lods
mov
jno
dec
enter
adc
jo
stos
pop
pushf
sbbb
adcl
pop
rcr
add
ret
xor
inc
lcall
mov
inc
cmpsl
push
aas
lods
mov
inc
je
jle
scas
pop
or
test
notb
ss
push
or
pop
or
add
fiadds
add
pop
mov
sub
outsl
push
xlat
cmp
test
decb
pop
call
out
cltd
jmp
test
fcomps
incb
mov
mov
sbb
nop
mov
fs
push
dec
mov
lods
push
je
test
fs
lds
sbb
les
cli
cwtl
incb
mov
mov
sub
jl
mov
shll
ficoms
out
vpunpckhbw
pop
jne
cwtl
stos
mov
iret
cmp
adc
dec
or
fidivrl
inc
js
cmpsb
fldenv
ljmp
out
std
loopne
test
dec
outsl
add
xchg
mov
sub
push
adc
xor
sub
cmc
stos
addr16
adc
test
push
dec
test
pop
cmp
or
das
mov
cs
mov
decl
sbb
dec
push
in
sti
add
imul
jno
in
push
adc
dec
test
sbb
movsl
mov
outsb
xchg
jnp
std
iret
daa
sbb
sub
in
jb
and
call
popf
jecxz
pop
sarb
or
cmp
pop
ret
pop
pop
and
je
xchg
inc
loopne
data16
mov
jmp
pop
cld
xchg
call
cmp
sarb
dec
fwait
fsub
xchg
jbe
lods
cmp
pusha
outsb
fcoml
mov
in
das
in
in
call
push
pusha
enter
je
sub
jo
les
add
push
push
imul
inc
pop
cmc
mov
js
mov
ror
mov
ss
insl
add
add
in
sbb
in
scas
jns
add
sub
sti
jge
pop
add
jnp
or
lock
test
hlt
mov
jae
add
mov
cltd
repnz
sbb
mov
cmp
jge
and
xor
lret
pop
jnp
push
stc
sub
xchg
sar
dec
int
jbe
ja
sbb
jae
and
orl
sub
add
xchg
cmp
mov
dec
mov
insw
and
xchg
inc
call
movsb
pushf
jg
push
loope
xchg
inc
lcall
test
bound
dec
outsl
inc
mov
push
fwait
scas
xor
xchg
inc
andl
adc
mov
sbb
mov
test
pop
or
jns
add
pushf
jns
leave
insb
cmovge
adc
or
sub
int3
pop
inc
mov
jl
cmp
icebp
sti
xchg
stos
inc
jbe
fadds
ss
mov
lahf
mov
out
aam
pop
out
imul
inc
mov
mov
aad
push
outsl
lret
mov
imul
inc
in
lcall
mov
test
jnp
mov
jnp
data16
pushf
shr
test
cmp
fs
dec
jns
or
or
lcall
jnp
cli
sti
cwtl
cmpsl
or
je
andl
xlat
push
imul
fisubs
cmp
movb
sbb
xor
or
and
shl
and
inc
push
xorb
mov
jl
dec
call
sarl
sbb
and
or
push
pop
sbb
add
jmp
and
movsb
das
aad
shrl
hlt
cwtl
outsl
test
pop
cli
and
lods
mov
in
lea
jg
or
insl
iret
sahf
lods
jmp
or
outsl
negl
mov
out
inc
xor
pop
mov
cmp
stos
sbb
mov
pop
inc
sub
inc
jae
cmc
xchg
jno
shll
inc
addr16
and
xor
pop
sbb
stc
mov
and
mov
test
jmp
add
mov
popa
ljmp
add
aad
inc
lods
mull
push
mov
bound
xor
mov
cmpsl
std
sub
jge
fisubrl
sbb
sbb
into
add
push
popf
xchg
jne
je
jle
orl
mov
add
bound
shrb
pushf
push
shll
mov
xchg
arpl
push
push
fwait
or
pop
and
inc
subb
es
in
mov
ds
push
outsb
mov
cwtl
decl
push
mov
repnz
xchg
and
movsb
mov
test
je
cli
mov
ss
mov
mov
into
out
movsl
xchg
imul
in
mov
sub
shlb
mov
add
cmpsb
push
or
bound
push
bound
lahf
sub
popa
push
lea
stos
out
mov
push
pop
in
shr
pop
sub
out
adc
dec
mov
stos
add
hlt
xor
jg
sbb
movsl
andb
mov
test
out
lods
into
pop
rorb
adc
add
fidivrl
xor
mov
jle
shll
shl
push
pushl
xor
ret
mov
inc
je
pop
aam
lea
in
add
sahf
inc
aam
jne
pushf
push
mov
dec
mov
ret
push
pop
ret
fisubl
out
test
push
mov
stos
js
fs
or
cmp
cmp
arpl
add
push
movsl
out
push
pop
dec
jnp
xchg
inc
iret
add
clc
push
test
or
arpl
cwtl
orl
pop
fsubrl
testl
cmp
dec
ljmp
addr16
enter
or
mov
mov
xorl
xchg
adc
cmp
add
sti
daa
inc
insb
in
mov
xchg
fimull
js
lds
xchg
movsl
and
mov
ret
mov
pop
mov
sub
cmp
add
das
stos
or
xor
data16
adc
mov
les
push
pop
mov
lock
out
push
mov
clc
int
sbb
into
lahf
lret
test
fidivs
pop
in
mov
mov
pop
jmp
fisttpl
jecxz
sub
mov
inc
mov
lret
scas
lods
lret
fdivrl
mov
inc
cltd
xchg
and
das
out
jnp
and
cmpsl
inc
sbb
sbb
rol
xor
enter
xor
shl
movsl
in
jmp
out
out
pop
xchg
daa
pop
fldcw
xchg
mov
test
xchg
stos
xor
dec
cmpb
jns
popa
pop
and
fldt
jmp
mov
mov
mov
sbb
and
clc
shrb
test
xor
pop
pop
push
test
jb
ss
inc
jp
stos
in
mov
popa
popf
rolb
sub
lcall
addr16
idivb
out
hlt
xchg
das
lods
idivb
fcoms
or
pop
sahf
or
inc
pusha
cmp
in
dec
mov
jnp
inc
cmp
fwait
stos
mov
sub
cmp
hlt
cmp
dec
sub
lods
cmp
cli
or
fs
mov
cmp
mov
int
ret
mov
stos
mov
jge
mov
lock
inc
ret
stc
mov
sahf
cs
xor
push
push
enter
lea
push
add
addb
cmp
enter
lret
shll
fldenv
mov
push
inc
cmovb
cs
faddl
push
test
and
fucom
pop
push
inc
andb
mov
rcrb
sbb
mov
add
adc
sbb
pop
subl
fisubrl
sbb
scas
mov
gs
fwait
ja
push
cmp
mov
push
fists
out
clc
xchg
bound
clc
loopne
push
add
jns
sub
mov
insb
in
cmp
pop
in
sbb
pop
out
pop
jo
mov
jg
add
jmp
in
in
sbb
pop
dec
lret
adc
jg
enter
adcl
mov
inc
push
mov
jg
xor
mov
push
nop
xor
icebp
call
daa
cltd
cld
fdivs
mov
scas
adc
movsl
inc
loopne
jl
mov
sbb
adc
addr16
adc
jp
adc
add
sub
jge
ret
scas
loope
imul
nop
hlt
or
jecxz
sub
out
pop
repz
pop
mov
mov
repz
xchg
xor
dec
pop
scas
out
call
cmpsb
push
pop
push
icebp
scas
sti
ss
fistps
mov
aas
dec
scas
pushl
fcom
imul
enter
ds
in
dec
lock
mov
mov
ljmp
mov
lret
xor
addl
arpl
es
fnsave
jbe
lahf
mov
hlt
push
cli
jbe
gs
test
stos
xlat
or
dec
push
xchg
push
test
inc
insl
mov
sub
shlb
ret
mov
or
les
leave
call
bound
out
shl
loopne
jl
bnd
ret
jae
call
popa
loopne
sub
orb
jbe
adc
cmp
cs
xlat
je,pt
pop
loopne
jne
lea
movzbl
cwtl
notl
inc
int
cmpsb
dec
stc
adc
dec
fucomp
movsl
rorb
add
xchg
dec
xor
gs
fiaddl
out
dec
test
mov
fidivl
pop
sbb
das
cmpsb
icebp
or
xor
adc
jbe
fidivl
pop
adc
mov
mov
aas
inc
sti
addr16
loopne
mov
lret
in
loop
dec
xchg
cli
aas
cs
mov
jae
mov
jb
cmpsl
xchg
fmuls
push
and
scas
loopne
add
push
sti
popf
aaa
cmc
sbb
aad
je
mov
movsl
das
movsb
inc
pop
nop
push
cmp
pop
mov
fs
data16
stc
mov
outsl
jecxz
popf
imul
scas
jg,pn
push
cmp
mov
pop
stc
arpl
sahf
jge
mov
scas
dec
jae
es
push
fwait
ret
enter
gs
mov
mov
mov
sub
stc
inc
or
pop
loopne
mov
mov
icebp
mov
ss
aad
xchg
xchg
mov
xor
into
fidivrl
flds
gs
and
shrb
inc
sub
sbb
push
loopne
je
cmp
inc
jno
scas
bound
into
mov
fimuls
sub
cmp
cld
shlb
push
loope
jl
dec
mov
mov
stos
lods
not
cs
jb
fs
cmpsl
ret
in
test
loopne
sbb
inc
adc
iret
aam
test
loopne
std
inc
addr16
repz
jae
dec
daa
arpl
pop
add
xor
sbb
fwait
out
daa
cmp
sub
inc
push
mov
mov
sbb
out
enter
add
imul
jae
jb
filds
or
pop
and
cltd
dec
xlat
not
mov
pop
mov
inc
xchg
mov
lret
jp
add
inc
push
in
pop
mov
out
pop
int
ud2
mov
out
sub
into
fsubrl
mull
out
push
dec
cmp
iret
and
mov
adc
or
cwtl
cwtl
adc
testl
jns
repz
into
dec
xlat
loope
sub
lret
into
push
pop
imul
out
je
push
loope
je
cmc
jmp
and
jmp
testb
popf
int
mov
pop
xchg
sar
in
or
add
adc
jp
loop
cmp
sub
mov
jbe
add
and
sahf
mov
adc
xor
dec
int
xchg
insl
fsubr
aas
and
xor
lret
les
pop
sub
aam
and
imul
orl
add
sbb
sbbb
int
out
xchg
push
push
fisubl
in
inc
mov
test
or
jb
mulb
ficoml
adc
icebp
mov
pushf
jecxz
lcall
fdivrs
and
sbbl
xchg
mov
jne
jno
add
pop
xor
and
sub
and
inc
add
inc
popf
sub
dec
addr16
cmp
mull
mov
push
testb
add
ficompl
jbe
mov
lret
mov
iret
and
cmc
jo
leave
xor
sub
fstl
push
dec
jo
push
xchg
ja
adc
jl
stos
sbb
jae
sbb
data16
sbb
lods
xor
lock
popf
mov
inc
push
xor
sbb
testl
push
sbb
sub
adc
mov
mov
dec
lds
lahf
in
mov
fsub
aad
or
push
lock
in
inc
mov
mov
cli
xor
dec
and
pop
add
mov
adcb
pop
jno
push
lcall
sub
cli
or
fucomp
sub
push
out
fwait
adc
push
xchg
fdivl
dec
fdivrl
sbb
into
divb
mov
js
pop
rcl
std
push
cmp
xor
shll
jns
outsl
scas
fisubl
loop
or
data16
dec
push
les
push
fsubp
mov
pop
mov
push
adc
inc
dec
faddl
jp
fcomps
inc
test
out
nop
out
pop
xor
mov
mov
mov
and
mov
mov
sub
push
test
push
cmp
insl
xor
icebp
scas
mov
cmp
inc
mov
outsl
lds
pop
or
in
adc
cwtl
jmp
mov
xor
pop
pop
orl
sahf
pop
adc
out
out
inc
fs
add
arpl
mov
enter
dec
loop
mov
lock
inc
mov
pop
xlat
cmp
ljmp
push
mov
jl
adc
xchg
nop
push
inc
fdivl
in
nop
inc
in
push
scas
shlb
cmpsl
loope
cld
push
xchg
repnz
xchg
lea
dec
ret
stos
aas
and
bnd
gs
lods
fcomi
in
jne
xchg
cld
imul
jle
pop
add
and
xor
fistps
sbbl
incl
leave
mov
cmp
inc
inc
mov
sub
mov
inc
or
adc
jnp
sbb
mov
and
outsl
pop
jecxz
xchg
mov
in
mov
sbb
mov
pop
dec
dec
orl
filds
jae
repz
mov
inc
adc
repnz
repnz
lret
sub
jmp
sub
mov
xor
push
mov
pop
dec
inc
cmpsb
cmc
loope
ss
iret
jmp
lock
in
push
jbe
sarl
mov
cmp
cmpsb
sarb
mov
ret
push
xor
ret
sub
out
add
pop
fwait
rcr
mov
inc
cmp
ffreep
lds
mov
ja
aaa
testb
cmpsb
aaa
ljmp
and
mov
aaa
xchg
dec
mov
mov
jnp
insl
xchg
dec
lahf
ret
cli
mov
js
xor
sub
xchg
sub
decl
es
mov
jmp
fadds
sbb
js
cli
adc
int
add
int3
inc
outsb
adc
push
sarb
test
mov
out
jmp
repnz
or
adc
xchg
scas
mov
shlb
hlt
push
in
arpl
std
data16
jno
xlat
pop
inc
ror
into
inc
stos
das
sub
mov
orb
out
repnz
push
stos
push
aas
mov
inc
loope
sub
dec
pusha
dec
pop
stos
push
adc
outsl
dec
jns
sub
scas
out
dec
xchg
stc
xor
int3
repz
fdiv
es
jne
jmp
or
cmpsl
test
sahf
ret
inc
mov
movl
dec
jecxz
or
lds
js
daa
and
ss
in
inc
sub
pop
repnz
cmp
testl
sub
jns
mov
pop
mov
sti
cmp
std
xor
add
pop
inc
sti
push
sbb
add
add
pop
iret
ja
push
and
fnsave
mov
aam
or
test
and
pusha
arpl
push
cmp
in
sbb
mov
aas
mov
pop
lcall
sti
xor
sarl
pop
sbb
cli
mov
or
test
or
addl
pop
mov
jb
scas
iret
xorb
jo
cltd
testb
jmp
daa
js
jmp
enter
cmpb
inc
jae
pop
and
jl
lods
inc
enter
mov
test
mov
loope
and
data16
pop
jno
insl
cmc
jb
push
mov
imul
ljmp
jge
stos
movsb
mov
inc
mov
inc
test
xchg
enter
push
cmp
ret
and
cld
insb
leave
leave
push
inc
and
sub
add
jbe
insb
and
fistpl
pop
into
mov
mov
movsb
aam
sti
in
push
mov
outsl
sub
xor
push
adc
inc
jnp
cwtl
in
mov
mov
push
insl
push
lods
aam
jl
push
inc
mov
test
xor
inc
jno
xor
sbb
test
sub
pop
mov
arpl
sub
pop
dec
test
jnp
stc
orl
or
push
mov
add
pop
mov
xor
push
mov
insb
test
xor
sub
lods
scas
shll
push
push
icebp
cmp
and
int
xchg
and
push
jg
in
inc
dec
lret
and
int3
cmp
aam
and
popf
loope
rol
cmpsb
pop
and
inc
push
push
or
sbb
push
mov
leave
pusha
mov
jo
dec
or
sti
out
xchg
cmpl
cmpsl
xchg
jbe
or
cmpsb
pop
adc
fildll
dec
test
sub
xchg
addb
mov
testl
mov
mov
mov
lret
inc
popa
push
jno
inc
push
in
mov
nop
iret
ss
popf
in
cmp
in
pop
roll
jns
push
inc
xchg
ja
push
push
cmc
xor
andl
and
ret
cli
mov
jb
out
lds
test
pop
loopne
add
loop
xlat
stos
mov
cmp
ds
hlt
hlt
cli
lret
inc
pop
pushf
stos
mov
dec
xor
sub
test
ficompl
pusha
orb
negb
push
adc
pop
lahf
loope
arpl
pushf
ret
pop
mov
js
sub
aad
xchg
gs
cmp
lcall
mov
in
hlt
sbb
shlb
push
mov
pop
inc
imul
out
inc
shl
inc
jb
adc
mov
dec
mov
cmc
adc
lods
mov
in
test
sbb
cltd
insl
idiv
xchg
inc
into
cmp
jnp
pop
sub
xchg
xor
inc
lcall
rep
repnz
arpl
push
lret
mov
sbb
ja
inc
adc
repnz
arpl
aas
mov
daa
ret
cmp
sbb
inc
cmpsl
das
shl
jge
aad
pop
adc
xchg
push
stc
dec
dec
cmp
xchg
cmp
dec
pusha
sbb
rep
xor
popf
cltd
js
push
mov
sub
ds
repz
jo
sub
ret
imul
cmp
jnp
and
imul
adc
je
arpl
aas
dec
sahf
jo
dec
and
push
stos
icebp
mov
leave
jnp
clc
fiaddl
in
jmp
mov
movsb
jbe
je
mov
dec
std
enter
push
cmp
mov
fstp
or
add
mov
imul
sahf
es
jne
addr16
and
nop
das
imul
push
cmpb
insl
rcr
and
mov
push
fstpl
and
pop
push
aas
and
dec
icebp
movsb
inc
inc
jns
loope
mov
lret
ljmp
mov
inc
jnp
mulb
test
inc
pop
push
pop
cmp
daa
rcll
fistps
push
mov
cld
sbb
in
mov
cmc
lahf
xor
mov
adc
pminub
xchg
loopne
movsl
shlb
es
cmp
pushf
imul
jns
xchg
aas
inc
push
les
imul
push
pop
js
in
or
inc
xor
rol
dec
adc
mov
outsl
mov
lods
imul
stos
cmp
enter
jb
sub
mov
or
pop
cmp
ficomps
ss
mov
add
push
xor
ljmp
cmc
ljmp
jl
jnp
test
lock
xorl
and
stos
dec
arpl
stc
pusha
fistpl
insl
iret
mov
sub
or
daa
mov
jecxz
mov
sbb
insl
jle
ljmp
mov
inc
js
mov
cmp
daa
xchg
gs
fs
cmp
ficomps
jg
movsb
je
mov
imul
into
mov
jl
pop
cmpsb
test
mov
mov
aaa
inc
sbb
jns
fmulp
aaa
sarl
sbb
jnp
mov
test
add
cmc
movsb
stos
popa
mov
inc
popa
pop
cmp
jl
add
mov
push
sbb
ljmp
mov
sbb
sbb
xor
and
mov
cmp
dec
sub
push
in
in
ss
mov
adc
jp
es
cmpsb
jecxz
sub
inc
push
daa
and
add
loope
imulb
movsl
leave
test
lcall
negl
rcrl
fdivr
fdivrl
sbb
mov
add
or
test
mov
mov
mov
test
test
pop
imul
dec
push
sbb
jmp
sarl
push
bnd
dec
jmp
jecxz
nop
xor
fs
in
inc
outsb
out
add
sarb
push
push
iret
adc
mov
push
push
pop
orb
inc
mov
xchg
aam
mov
cld
push
xor
pushf
popa
push
or
lock
xor
push
push
add
mov
mov
andl
jmp
mov
fdivr
jae
rolb
stos
daa
sub
arpl
xchg
ljmp
mov
rol
xor
insb
push
push
jne
push
clc
jecxz
std
push
adc
repnz
andl
cli
int
gs
xchg
in
stos
ss
dec
xlat
pop
push
and
fidivl
mov
fistps
cmpsb
stc
sbb
hlt
outsb
lods
stos
aad
incb
jmp
jno
sar
mul
xchg
pusha
test
xchg
add
in
jle
ret
stos
jmp
inc
test
mov
dec
pop
test
es
cwtl
ja
in
add
and
sub
int
cmp
jbe
xor
dec
add
jmp
fsub
imul
popf
mov
and
mov
cmpsl
aaa
sub
inc
lods
mov
inc
loopne
sbb
jns
loopne
xchg
dec
nop
add
adc
pop
cli
or
cmc
or
mov
inc
int
test
movsb
fisubl
jmp
notl
sub
sub
leave
jmp
rorl
push
aaa
mov
scas
mov
cmp
and
jno
push
lcall
pop
test
cmp
xchg
in
testb
jae
inc
xchg
or
jo
pop
dec
add
xorb
dec
push
shlb
mov
sbb
push
cwtl
jae
movsb
test
je
test
loope
jae
pop
dec
imul
sub
sbb
shlb
mov
add
mov
sbb
xchg
pop
popa
jmp
in
test
setge
mov
leave
cltd
push
xor
imul
add
jg
gs
pop
into
sti
cmp
lahf
sub
xor
popf
int3
hlt
rol
clc
jmp
dec
popf
lret
ficomps
mov
cmp
fidivrl
add
jmp
mov
es
sub
cmp
mov
rolb
pop
mov
push
mov
xor
pop
popf
lret
arpl
ror
push
cmp
in
cld
lods
xchg
lahf
jp
adc
cmp
subb
jg
and
jl
cmp
adc
ss
ret
ja
xor
vpshufhw
cli
adc
outsb
jo
dec
fisubl
test
jge
add
aam
stos
inc
and
stos
adc
adc
aas
push
jg
stos
jnp
bound
jns
lods
jle
mov
xchg
xor
orl
add
ds
ret
jne
stos
sub
fbld
ljmp
pop
or
and
or
mov
jg
decb
sbb
shrb
dec
mov
lahf
mov
jp
xchg
cwtl
or
clc
adc
hlt
lods
leave
xchg
mov
cld
cmp
out
addr16
or
out
loop
sbb
das
adc
sub
out
push
xchg
xchg
out
inc
das
inc
xchg
push
adc
sarl
sbb
loop
pop
popa
cmp
jge
test
mov
fdivrl
push
or
jne
jno
int3
push
lret
cld
cmpsl
enter
orb
jg
xchg
xchg
rol
lock
push
fdivrs
push
xor
push
mov
negb
push
loope
out
cmp
xor
push
in
roll
nop
fiaddl
and
dec
jmp
das
scas
ret
popa
mov
es
cmp
pop
pop
mov
ljmp
sub
repnz
add
push
adc
inc
movsl
std
aas
add
jl
cmp
jle
rcrl
cmc
jae
push
sbb
repz
inc
jle
cli
fldl
and
sahf
fistpl
inc
dec
dec
push
pop
addr16
fdiv
inc
xchg
pushf
scas
imul
mov
cld
mov
push
enter
ja
sbb
mov
addl
sti
mov
aaa
mov
es
dec
push
mov
sub
imul
mov
pop
pop
pushf
dec
fildl
push
aam
imul
cltd
dec
mov
call
jne
or
shl
scas
jns
dec
sub
dec
loop
mov
jp
mov
in
cmpsl
icebp
inc
or
adc
push
out
mul
pop
xchg
popf
sbb
and
call
enter
dec
les
and
movsl
outsl
mov
mov
push
leave
mov
daa
push
scas
or
jmp
inc
ficomps
dec
rcrl
rcll
ljmp
enter
or
into
iret
daa
aad
test
add
inc
mov
cmc
out
xlat
mov
sbb
test
adc
iret
pop
call
shrl
bnd
mov
cli
lods
or
jp
popf
popf
xlat
and
imul
inc
aad
scas
xor
in
aaa
jle
cmp
cmp
inc
jle
sbb
enter
inc
addb
mov
lcall
repnz
push
es
inc
outsl
mov
sarl
push
movsl
push
sub
into
repnz
arpl
lea
mov
mov
push
pop
imul
xchg
gs
flds
mov
dec
xchg
aas
sbb
loopne
cmp
inc
ret
popa
lods
lahf
lahf
push
push
ds
sub
push
test
cli
repnz
in
sub
inc
fiadds
mov
std
push
xor
daa
pop
push
push
pop
outsl
pop
and
pushf
fcom
loope
rclb
cmp
scas
and
mov
dec
inc
xchg
cmp
clc
inc
pop
and
pop
fisubs
cltd
out
loope
and
leave
andl
pop
push
xchg
inc
adc
icebp
cmp
inc
pop
mov
cmp
sub
pop
xchg
movsl
lods
mul
xor
mov
hlt
pop
mov
cli
divb
sbb
xchg
or
ss
push
leave
sbb
in
mov
cmp
xor
fcom
xchg
pop
mov
out
pop
aam
subl
xchg
imul
paddw
bswap
push
shrl
inc
lcall
scas
push
adc
adc
outsl
fcmovnu
pop
push
hlt
xor
rol
mov
negb
sbb
add
mov
jbe
ret
xor
xchg
inc
sahf
xchg
out
sub
orb
lcall
iret
jb
push
push
mov
ljmp
imul
je
xchg
lret
movsl
mov
das
movb
adcl
push
in
fwait
rorb
test
mov
push
insl
scas
iret
mov
iret
imul
dec
orb
lock
adc
sub
sbb
push
testl
jg
popl
sub
lret
outsl
aas
sbb
cmp
in
pusha
push
icebp
icebp
into
mov
loop
mov
rol
ljmp
aam
push
jo
xlat
mov
or
jbe
xchg
ret
sub
pop
mov
mov
fstpl
xchg
ja
fcomip
popf
into
icebp
mov
es
mov
xchg
das
push
out
and
cmp
ret
repz
mov
dec
mov
mov
les
fdivrs
pop
mov
adc
xchg
insb
jnp
daa
loop
sub
dec
mov
sarl
xor
inc
pop
or
push
add
leave
in
or
mov
icebp
std
adc
push
sbb
repz
mov
xor
fsubr
xor
outsl
repz
xor
pop
jnp
lahf
dec
push
rolb
xor
jns
adc
add
lods
rclb
lods
fwait
mov
push
fldcw
js
test
pop
outsb
sbb
sahf
adc
popa
mov
sbb
pop
inc
clc
ljmp
jp
and
in
mov
movsb
les
jne
mov
add
data16
sub
je
cmp
inc
adc
out
divl
inc
or
nop
rorb
add
sahf
sar
mov
fdiv
mov
mov
sahf
inc
inc
fxch
mov
cmp
cmc
mov
mov
xchg
jo
nop
push
insb
lcall
mov
ss
es
mov
adc
xchg
dec
ds
cs
lods
dec
icebp
in
push
mov
mov
cmpsl
nop
scas
notl
cmp
dec
ret
dec
mov
xchg
or
push
ja
mov
sub
les
clc
cmp
jecxz
dec
inc
pop
mov
adc
rcl
or
imul
mov
xor
dec
fistpll
add
xor
pop
jae
into
mov
cmp
sbb
mov
push
pop
xchg
popf
mov
pushf
push
cmp
arpl
fildll
mov
cwtl
inc
iret
mov
xchg
and
ljmp
sbb
cltd
jno
arpl
ret
mov
popa
in
ja
mov
lock
dec
cli
inc
push
and
popa
adc
lea
sub
xchg
js
into
sbb
jbe
sub
hlt
mov
xchg
clc
xor
jecxz
or
cltd
xlat
inc
scas
in
mov
mov
repz
jnp
pop
fs
jl
mov
sbb
cmp
and
rorb
nop
push
push
lock
shl
arpl
pop
cmp
mov
xchg
pushf
pop
sub
dec
mov
sbb
cmpsb
in
shrl
mov
jbe
and
add
outsl
inc
addl
xor
xchg
es
pusha
xlat
push
invd
jmp
and
pop
int3
push
pop
lds
stc
cwtl
adc
or
fistpl
or
shl
cmpsb
out
xchg
mov
xorb
rol
and
xchg
mov
stc
fucomi
cmpw
sub
jae
fucomi
sub
notl
and
sti
jae
sbb
es
sub
dec
inc
sub
fstl
pop
inc
sub
push
loopne
mov
es
or
lds
ds
scas
scas
jo
loop
mov
push
push
outsl
mov
cs
pop
mov
mov
je
in
sbb
add
add
in
cmp
lods
lock
mov
call
dec
and
push
lds
cmp
pop
iret
adc
bnd
mov
xor
push
orb
or
bound
outsb
movsb
xchg
mov
or
mov
fcomp
pop
fwait
mov
jne
jge
das
push
rcrb
push
je
insl
in
dec
pop
insl
sbb
mov
cmp
repnz
lret
std
out
inc
lods
xchg
ret
sub
jo
fdivr
add
xchg
adc
cmpsl
push
jmp
stos
dec
cmp
into
movsb
aaa
fldl
fstps
pop
or
std
adc
out
push
lods
test
mov
mov
js
pop
int3
nop
cmp
ret
shrl
pop
pop
pop
test
test
jecxz
push
inc
pop
push
or
xchg
dec
cmp
mov
gs
outsl
push
arpl
leave
mov
push
lds
xor
les
cmpsb
add
xchg
cmp
les
lea
pop
outsb
repnz
aad
and
cmp
leave
push
cltd
imul
shll
dec
aam
and
pop
jns
ljmp
jbe
mov
lcall
lcall
rolb
daa
push
dec
cmp
in
cmpsl
add
int
fbstp
mov
and
xchg
lods
and
jns
mov
das
std
insl
les
cltd
loop
movsb
out
dec
lret
inc
repz
test
inc
jmp
pop
test
fnstsw
jle
add
ror
iret
ds
ret
pcmpgtd
sbb
jno
jmp
push
mov
loopne
push
adc
ret
push
into
mov
xchg
sub
mov
scas
dec
mov
inc
mov
std
pop
mov
out
out
xor
into
mov
dec
dec
and
inc
push
mov
mov
popa
div
xlat
sub
ds
mov
and
mov
imul
sahf
jge
test
dec
hlt
xchg
xchg
pop
out
sub
xchg
nop
mov
mov
inc
pop
sbb
scas
stos
xor
pop
dec
or
stc
or
and
test
hlt
clts
cmpsl
add
ljmp
jg
fimull
scas
repnz
cld
jo
scas
jecxz
add
sti
jge
cltd
cmp
repz
aaa
cmc
adc
cmp
mov
push
mov
loopne
add
xchg
xchg
push
xchg
and
imul
repnz
push
inc
int3
jecxz
sahf
xlat
stos
inc
mov
out
roll
out
xchg
test
mov
sub
cmp
pop
adcl
adc
mov
or
mov
xchg
jo
cmpl
jecxz
sub
xor
jns
and
mov
notl
addr16
jb
sub
gs
sbb
leave
mov
mov
scas
fistpl
jmp
cmp
adc
and
push
in
mov
icebp
sub
xor
in
scas
jae
pop
mov
mov
mov
mov
iret
addr16
movsl
aam
sbb
pop
sub
dec
gs
push
loope
stos
fmuls
xor
jecxz
mov
add
shrl
and
inc
pop
mov
cmp
mov
mov
setne
cmpsb
jne
mov
mov
outsl
jl
pusha
xor
sub
sahf
mov
mov
jb
lds
lahf
outsl
adc
add
jmp
jg
xchg
jle
push
sahf
xor
cmpsl
xlat
into
jbe
movl
bound
or
fsub
fistpll
rol
scas
mov
loope
enter
mov
push
outsl
aas
xchg
mov
push
leave
loopne
scas
fistpll
int
adc
fisttps
sub
outsb
aaa
jl
cli
iret
fadd
ljmp
mov
or
mov
test
pop
pop
gs
in
and
or
inc
mov
mov
loopew
pop
or
xchg
mov
xor
mov
popf
aas
pop
mov
aad
lret
sub
xchg
sbbl
fistpll
adc
out
pop
push
das
aam
jle
or
jp
loope
adc
dec
xorb
or
and
inc
dec
cmp
jecxz
push
icebp
out
iret
es
mov
std
cli
notb
sub
xor
sub
sbbb
ja
sub
push
jmp
mov
clc
sahf
add
loope
cmpsl
pusha
sub
cmp
xchg
or
idivl
add
loope
das
popf
push
mov
lock
push
lds
jp
cmc
cmp
xor
iret
and
lret
xchg
pop
les
fwait
push
pop
repnz
mov
pop
movsb
jmp
aam
pushf
icebp
ljmp
add
lgs
and
sahf
mov
stos
pop
mov
cmp
pop
out
jl
pop
addr16
add
inc
dec
xchg
mov
mov
push
mov
and
pop
sbb
addr16
jne
or
jbe
jp
mov
mov
lret
inc
adc
call
xor
stos
dec
stos
arpl
adc
inc
pusha
fs
movsl
out
mov
in
lock
mov
inc
mov
dec
inc
jl
cmp
insb
mov
and
sahf
ds
filds
push
lcall
subl
lock
mov
std
ret
lods
pushf
test
mov
xor
xor
out
ljmp
enter
mov
inc
into
jecxz
push
shlb
clc
inc
fdivrl
xchg
xor
sahf
dec
mov
sti
lods
xor
mov
fimull
xchg
add
sub
xchg
and
cmp
movsl
xchg
bound
pop
mov
in
inc
sbbl
arpl
inc
and
pop
jecxz
cwtl
jb
jp
cmp
xlat
in
jno
cs
and
outsb
rolb
je
dec
ret
outsl
repz
and
add
movsl
loope
in
out
mov
inc
ds
subl
stos
push
xchg
push
xor
sti
test
sahf
hlt
into
jns
and
lods
pop
bound
inc
pop
and
mov
inc
arpl
int
data16
mov
or
stos
clc
mov
popa
dec
add
add
test
pop
cwtl
cmp
fisttps
add
pop
adc
insl
jmp
aaa
rcll
mov
push
mov
mov
mov
cmp
dec
jnp
xchg
or
in
lcall
imul
inc
jne
out
jno
add
aam
sbb
cmp
in
dec
int3
sub
fstpt
cmp
pop
hlt
aam
mov
out
dec
cmp
ret
mov
jg
icebp
in
inc
dec
push
pusha
cmpsb
pop
dec
push
inc
mov
xor
sahf
push
pop
std
sub
ret
mov
xchg
xchg
arpl
dec
pop
adc
bnd
sbb
js
xchg
sbb
popf
insb
imull
mov
mov
repnz
cltd
outsb
iret
mov
mov
xchg
push
iret
mov
and
stos
sub
sbbb
dec
testl
inc
mov
in
mov
mov
pop
cltd
jp
or
aas
test
in
xchg
mov
pop
inc
fsubrl
loop
mulb
sbb
jnp
out
sub
pushf
cli
fimull
inc
sub
shll
or
out
mov
jle
aad
mov
nop
jbe
and
ret
lret
push
sub
hlt
cmpsb
daa
addr16
push
sub
jbe
push
lods
jne
dec
cmpsl
ds
jb
subb
into
inc
jp
xchg
xchg
mov
aaa
into
aaa
cmp
xchg
and
adc
dec
push
out
dec
jg
stos
sbb
push
sub
gs
mov
cli
ret
pop
les
xor
jnp
or
enter
aam
imul
imul
dec
cmp
out
loop
mov
or
inc
andb
loopne
xor
data16
stos
fsubs
hlt
test
lret
cmp
xchg
iret
outsb
lcall
lcall
cmp
xchg
aam
add
jmp
or
dec
rcl
add
dec
mov
xchg
shrl
sub
fisttps
in
fs
jo
xchg
add
inc
pop
aad
fidivs
aas
push
lcall
out
xchg
test
divl
xor
push
in
je
pop
pusha
jnp
push
xchg
pop
mov
mov
insl
pop
push
aaa
std
mov
pop
jo
sub
out
mov
dec
inc
scas
adc
inc
adc
aad
mov
shl
adc
sti
aam
aaa
outsl
cli
fsubs
mov
and
int
fisttpll
insb
push
inc
dec
in
or
popa
inc
xor
lods
idivb
jge
sbb
lea
in
xor
sub
jmp
aas
rcrl
pop
or
es
sahf
push
sbb
cmc
inc
pop
jb
test
stos
xor
dec
andl
pop
mov
mov
push
orb
dec
daa
lahf
mov
mov
mov
and
iret
dec
shlb
ficoms
sbb
pop
cwtl
rorb
gs
cmp
and
xchg
or
xor
popa
sbb
inc
adc
push
xor
imul
push
add
int
push
cmpb
and
mov
sub
dec
pop
clc
sbb
sub
mov
or
call
adc
sbb
clc
jbe
adc
pop
jg
loopne
xchg
push
sarl
mov
mov
iret
out
in
adc
and
push
outsb
imul
dec
pusha
cmpsb
mov
push
cltd
cltd
cmp
mov
push
push
sub
iret
sub
jle
std
push
xchg
mov
push
xor
mov
cmp
pop
sbb
push
repnz
adc
mov
iret
fsubrp
and
and
push
xor
xchg
xor
mov
shll
inc
pusha
push
lods
lahf
pop
test
out
ret
or
push
loop
xchg
sar
jns
divb
subl
shlb
xchg
mov
cwtl
xchg
repz
sub
dec
stos
cwtl
enter
sub
pop
and
loop
lret
mov
jo
clc
shrb
loop
in
int3
and
pop
jno
sbb
out
jne
ds
gs
out
mov
jns
test
sub
pop
or
push
fs
inc
pop
clc
sbb
insb
aas
cmp
stos
loopne
xor
outsl
int3
adc
shll
jg
outsl
loopne
mov
rorl
icebp
or
cmp
hlt
fwait
outsb
xchg
push
sti
xorb
nop
stc
dec
ds
push
add
lret
arpl
xor
mov
sub
adc
sbb
lods
or
sub
push
js
push
add
cmp
rol
rcl
scas
inc
sbb
pop
push
mov
mov
repnz
lock
in
pop
popa
js
mov
leave
and
mov
dec
xchg
inc
sbb
mov
out
not
fisttpll
inc
sahf
add
inc
pop
push
xor
pop
dec
movsl
adc
test
in
jno
shl
pop
leave
in
xchg
jne
cs
icebp
testl
xchg
int
bound
mov
shlb
nop
jp
orl
sub
in
pop
or
mov
push
scas
mov
inc
fs
ja
test
test
or
imul
bound
push
out
fistpll
fnstsw
stos
push
sarb
or
and
or
and
mov
movsb
test
pop
out
xlat
or
and
je
xchg
mov
mov
cmpsb
movsl
rcrl
cmp
adc
out
enter
sbb
jns
out
xchg
sub
add
mov
jbe
out
lret
add
fimuls
inc
out
mov
xchg
mov
inc
or
mov
rclb
push
sub
notl
fcoms
or
cltd
mov
fmuls
xor
aaa
xchg
pop
rcll
pop
wrmsr
push
dec
jecxz
sub
adc
andb
push
jmp
test
mov
jae
mov
leave
out
jle
sbb
xchg
mov
xlat
rcrl
xchg
and
mov
pop
cltd
push
sbb
mov
out
hlt
jmp
dec
mov
or
sub
cmpsl
push
adc
xchg
fwait
mov
hlt
scas
repnz
loope
es
ret
outsl
sbb
test
mulb
mulb
pop
sti
and
subb
add
inc
add
call
jns
sbb
movsl
rorl
mov
jbe
jl
inc
out
in
xchg
jp
pop
aas
xor
in
aas
rclb
aaa
jb
or
std
sahf
dec
and
mov
jecxz
adc
das
add
idivl
mov
mov
call
fcoml
insb
add
xchg
loopne
dec
enter
js
sbbl
or
orb
repz
cmp
pop
dec
lods
insb
stos
adc
cmp
mov
fiadds
hlt
imul
mov
mov
test
shrb
cs
add
adc
sbb
in
xchg
dec
pop
jae
and
sbb
adc
mov
and
jb
out
xchg
cs
fdivr
shr
mov
es
bound
loope
sbb
sbb
pusha
dec
scas
cmp
xor
jmp
test
push
es
mov
lods
int
insb
shll
lock
mov
rol
mov
dec
bound
pop
sub
popf
popf
jnp
pop
and
mov
repnz
jl
add
fimuls
adc
add
jbe
mov
nop
adc
mov
pop
cmp
push
inc
je
mov
push
mov
adc
jne,pt
mov
aam
push
aam
adc
add
aas
jae
movsb
push
test
in
jno
mov
and
xorb
sar
mov
int
insl
cmp
fdivl
dec
popa
popa
sbb
loope
mov
rcll
insl
fcoml
mov
popa
cmp
mov
int
and
fnstsw
ds
dec
sbb
pop
lods
movsb
xor
mov
mov
je
jns
push
mov
into
je
repnz
insl
inc
shl
dec
xor
xor
push
pop
inc
mov
xor
dec
stc
int3
stos
xor
or
jp
lock
sub
mov
out
lret
dec
push
add
and
add
or
pop
push
sarl
sarl
hlt
sub
xchg
call
sbb
dec
mov
or
das
stos
cmp
pop
aad
movntq
ljmp
bsr
rclb
or
aas
aaa
hlt
addl
loope
jmp
push
es
add
mov
shll
mov
add
xorl
xchg
ds
cwtl
es
cs
mov
pop
mov
mov
sub
ds
pop
inc
push
adc
push
ret
cli
cs
ja
stc
sub
push
lcall
jp
sahf
inc
subb
push
js
shlb
pop
mov
sbb
or
inc
adc
pop
fmul
sbb
pop
mov
imul
add
data16
not
loopne
and
mov
in
xchg
int
pusha
xor
jae
sar
inc
divl
aam
popf
cmp
jge
stos
add
and
cmp
lods
sub
mov
and
push
fists
mov
popf
mov
lea
addr16
iret
inc
outsb
jle
fadds
mov
mov
fmull
rcrl
insl
dec
xor
mov
cmp
addb
cs
jg
aam
lods
push
inc
js
or
mov
cmp
mov
jo
jno
lahf
pusha
cmp
dec
dec
les
rcrl
fs
rcll
jmp
cmpsl
sbb
in
jmp
stos
shrl
push
pop
sbb
loopne
inc
xchg
decb
mov
punpckldq
ja
inc
loop
dec
xor
aam
aaa
ljmp
adc
shlb
mov
in
jmp
imul
jge
mov
sub
push
push
dec
outsb
or
repz
sbb
sarb
mov
jns
out
in
mov
test
lahf
int
or
push
or
into
push
das
mov
cmp
xchg
sub
xchg
mov
ja
pop
iret
les
pop
jge
fstpl
repnz
or
add
jne
mov
mov
movsl
orb
xor
stos
pushf
dec
mov
repnz
mov
push
andb
ret
xchg
lret
setae
push
repz
jl
lret
aam
mov
and
jle
dec
loop
xor
mov
push
push
push
loopne
cmp
mov
sub
cmpsb
outsl
jne
push
cmpsb
xlat
inc
loop
or
lea
xor
sbb
jnp
arpl
xchg
flds
pop
pop
pop
pop
gs
cmp
adc
outsb
mov
sub
loop
incb
pop
imul
jns
jbe
fsubp
ss
cmp
sub
or
mov
xor
inc
in
add
iret
cmp
add
aad
js
mov
xchg
sub
aas
stc
jp
push
icebp
mov
xlat
rolb
mov
cmovae
cld
inc
test
fbld
addr16
mov
cmp
xlat
es
popa
and
imul
mov
outsl
out
lahf
ret
sub
mov
sub
or
loop
shll
orl
add
sahf
hlt
xorl
loop
mov
mov
jo
add
arpl
ss
loopne
popf
bound
cmp
xchg
rcl
xchg
insb
dec
and
leave
dec
mov
push
outsb
outsl
in
sub
cmpsl
imul
xor
nop
and
stc
jecxz
cmp
dec
cwtl
mov
repnz
push
fst
pusha
push
xchg
sbb
ja
data16
adc
jb
or
jp
jmp
and
add
call
and
adc
or
mov
ljmp
lods
dec
ds
xchg
in
daa
sub
pop
xchg
lret
push
inc
add
insb
icebp
lret
or
ja
test
call
ljmp
cwtl
aad
jmp
jge
xchg
lret
jno
inc
sbb
adc
mov
jb
sbb
ret
out
fs
pop
cmpsl
and
arpl
aad
jno
xchg
pop
shlb
inc
and
lock
sbb
loopne
psadbw
fisubrl
out
xchg
cmpsb
orb
mov
das
and
pop
mov
out
jmpw
or
mov
test
inc
push
and
cmp
lods
xchg
mov
ret
and
pushf
dec
and
jl
and
xor
jge
mov
roll
sub
xchg
lret
in
pop
stos
scas
mov
data16
jge
mov
int
fldcw
lret
mov
addr16
xor
cmpsb
jg
sbb
in
hlt
mov
std
add
jnp
lods
fsubrl
pop
jnp
mov
stos
xchg
jb
lock
nop
add
adc
mov
imul
dec
jle
daa
loop
shrl
outsl
cmp
outsl
jg
adc
xlat
in
mull
in
cmp
adc
mov
cmp
push
xor
sbb
pop
jno
push
leave
or
and
and
dec
fdiv
mov
dec
and
jo
jmp
pop
mov
and
stc
sbb
insb
or
sarl
loope
cltd
mov
xor
sti
hlt
dec
ljmp
jnp
lret
bound
inc
hlt
push
push
je
lods
lret
and
inc
testl
out
jno
jmp
sbb
lock
cwtl
jbe
ds
mov
or
mov
jl
add
mov
aam
out
cmpsb
xchg
mov
dec
xchg
shlb
xlat
or
mov
movsb
pop
add
xchg
cmp
repz
sbb
cmpsb
xor
clc
push
cmp
xchg
adc
pusha
mov
js
mov
orl
imul
adc
dec
mov
nop
jo
in
xor
adc
and
shlb
clc
repz
dec
push
dec
shr
out
mov
mov
pushf
ret
je
pop
and
xchg
xor
push
scas
sub
sub
dec
mov
mov
and
mov
repnz
lock
mov
fadd
pushf
mov
dec
mov
lods
or
or
xchg
mov
add
dec
push
arpl
jge
cmp
bound
fisttpll
in
clc
or
std
icebp
cld
mov
test
sbb
cltd
pop
jle
and
pop
cmp
push
std
jmp
pop
mov
rorl
cmp
mov
gs
mov
pop
dec
push
cmp
push
lret
es
sti
bound
cwtl
shll
rclw
nop
call
inc
mov
fcmovnbe
cltd
and
mov
mov
cld
rorl
nop
sub
mov
mov
xchg
add
pusha
pushf
inc
test
cs
adc
cmp
xchg
push
mov
adc
daa
pop
out
sub
and
bound
push
fiadds
shrb
nop
xchg
mov
insl
sti
and
mov
add
jmp
mov
dec
mov
and
mov
push
jl
int
std
into
insb
jnp
xor
mov
repz
je
cmpsb
mov
int
push
lret
aad
jae
push
inc
push
or
aaa
dec
enter
jle
xor
insb
cld
adc
das
in
imul
adc
mov
pop
cmpsb
data16
mov
mov
jg
jno
pop
fcmovu
pop
mov
jne
icebp
dec
insl
sti
movsl
jg
rcr
xchg
scas
insb
std
test
lods
add
sbb
pop
xchg
mov
gs
gs
std
andps
and
xchg
add
add
push
ret
out
pop
shlb
int
push
lods
jmp
xlat
and
jmp
je
push
test
push
mov
repz
mul
add
pop
gs
sahf
inc
sub
ja
imul
sub
xlat
bound
test
mov
adc
loope
popa
fcmovne
jnp
popf
gs
jp
jmp
cld
stos
and
mov
js
mov
imull
mov
cmp
add
fidivrl
or
dec
xchg
scas
aas
cmp
mov
in
pop
fisubs
movsb
imul
or
movsl
mov
and
into
add
pop
data16
ficompl
in
je
adc
sbb
shr
dec
ljmp
out
lea
cltd
pop
loop
xchg
cmpsl
inc
icebp
add
xor
xor
pushf
aaa
adcl
mov
loope
jmp
or
imul
sbb
push
loopw
in
mov
sub
xor
int3
mov
mov
sbb
popa
imul
jp
cmp
cltd
les
call
xchg
fists
stos
xchg
insl
pop
sub
inc
movsl
ds
mov
cmp
xorb
cmp
call
dec
jnp
testb
ljmp
out
dec
outsb
and
sbb
sbb
pop
push
inc
loop
sub
sbb
icebp
lods
addr16
mov
push
sub
stos
add
mov
outsb
cmpsl
bound
or
iret
mov
in
lods
cmpl
lods
punpckldq
sub
lahf
insb
inc
xchg
imul
pop
mov
push
daa
cmp
ss
not
stos
clc
daa
imul
pop
das
pop
arpl
pusha
dec
rcll
je
mov
and
inc
test
add
jbe
mov
lcall
mov
mov
push
mov
or
cmc
mov
adc
add
pop
push
int
cmp
cmp
into
jp
adc
dec
inc
hlt
fcmovbe
mov
sbb
pshufw
mov
mov
mov
or
xchg
sub
int3
sub
add
mov
xor
mov
push
or
jae
cltd
cmpb
sbb
inc
xor
xor
fnstcw
lret
sub
lcall
lcall
rolb
pusha
xchg
sarb
sbb
jp
sti
lret
bound
idiv
pop
push
into
jns
shll
stos
mov
std
loop
lahf
xor
fdivl
test
loopne
mov
iret
mov
add
push
jo
loope
sbb
sub
in
pop
hlt
pushf
pop
paddq
in
out
sub
mov
jns
mov
mov
cmp
jno
ret
mov
and
clc
imul
mov
repz
adc
mov
and
es
push
rcrb
aaa
or
cmc
test
mov
adc
aas
jnp
fnstenv
fmul
adc
sub
loope
das
shl
dec
pop
insb
iret
adc
jnp
testl
pop
js
mov
es
cmpsl
pop
push
jnp
cmp
inc
pop
incb
test
nop
shlb
dec
mov
mov
rorb
pop
jo
out
push
jge,pt
ds
mov
push
jle
adc
sbb
leave
insl
and
addb
adc
lret
mov
fistps
push
int3
xor
adc
xchg
jge
fsubrl
or
cmp
shll
hlt
arpl
or
jl
add
xor
jo
mov
mov
pop
loopne
sbb
lcall
leave
and
scas
outsl
test
or
mov
sub
lods
pop
test
aam
push
js
ss
mov
daa
mov
incb
xor
inc
cmc
out
ret
mov
subb
repnz
adc
mov
push
es
adc
sbb
push
rcrl
jp
add
into
sbb
cmpsb
out
into
cmp
jle
lock
scas
int
stos
popf
fs
mov
and
push
jle
sbb
mov
pop
sbbl
fists
and
or
jnp
out
lret
aaa
lock
push
rorb
xor
push
adc
push
or
jl
sbb
iret
in
adc
fs
xor
or
mov
mov
jle
push
push
test
mov
inc
dec
daa
mov
adc
mov
or
or
inc
mov
test
xor
pop
rclb
insb
mov
pop
fnsetpm(287
popa
stos
mov
mov
mov
outsb
push
mov
mov
cmp
mov
push
pop
and
jbe
lahf
push
xchg
jbe
cmp
mov
jle
lret
ret
dec
loope
xor
mov
and
xor
jl
and
popf
loop
sub
mov
pop
push
and
daa
push
lahf
push
pusha
data16
inc
loop
jne
jl
xlat
dec
jp
cwtl
add
xchg
stos
mov
sbb
dec
inc
xchg
stos
cli
sbb
xchg
je
jbe
pop
hlt
add
pop
icebp
in
je
or
out
test
out
adc
lods
fcmovbe
xor
xchg
ds
ret
aad
loopne
inc
bound
pop
xlat
add
or
and
cmp
sub
faddp
inc
jno
dec
cmpb
andb
cmp
icebp
outsb
adc
sub
sub
adc
and
sub
in
cltd
cmp
jno
lods
hlt
fs
pusha
imul
adc
or
ja
sub
pusha
js
adc
lahf
inc
je
loopne
push
int3
pop
movsl
adc
xchg
rep
je
mov
cwtd
int
mov
lret
jbe
call
lods
stos
pop
inc
daa
ljmp
pop
insl
jbe
ficoms
dec
xlat
cmp
or
jae
ret
sub
out
shlb
mov
adc
out
arpl
xor
out
shll
sub
rcrl
xor
lods
shll
lret
and
add
ret
fisubl
in
mov
les
enter
add
sbb
fiaddl
imul
dec
dec
loop
dec
out
jl
sbb
popf
lcall
inc
cmc
repnz
enter
push
aas
push
push
xchg
push
mov
or
cmpsb
mov
xchg
push
jmp
out
aam
jnp
add
loope
pop
xchg
sbb
xor
xchg
clc
cmp
mov
aad
push
out
dec
sub
fwait
mov
iret
fisubrl
mov
fiadds
jne
fidivl
out
xchg
jle
test
repz
pusha
mov
inc
add
jmp
sbbb
xlat
int
mulb
out
and
cltd
add
or
xchg
sub
imulb
xor
sub
cmp
push
push
repz
iret
adc
enter
fisubs
into
daa
dec
iret
sub
sti
or
ret
std
ss
imul
mov
dec
dec
ds
jle
mov
inc
push
xchg
movl
imul
xor
js
jae
test
jge
fstl
inc
test
xlat
pop
lret
test
mov
xlat
cwtl
push
fstpl
xor
movsb
pop
mov
jb
js
cmp
xor
lahf
imul
test
cmp
inc
popf
xorl
notl
mov
sub
pop
adc
mov
or
push
sub
and
xor
mov
loope
push
adc
lret
movsb
in
cltd
push
dec
pop
jge
and
pop
and
repnz
test
jo
mov
push
bswap
lds
add
ficoml
jnp
addr16
push
mov
dec
mov
inc
incl
stos
adc
into
jno
cmpsl
mov
xchg
insb
push
test
decl
add
mov
jnp
sbb
repnz
test
sub
sti
in
pop
lock
xchg
mov
cltd
fnstsw
lods
fnstenv
adc
pop
fs
rorl
add
adc
lahf
adc
lret
fadds
fwait
mov
out
or
icebp
enter
jg
mov
cltd
push
xchg
call
and
xchg
push
push
les
dec
xchg
push
das
sbb
lahf
add
mov
push
nop
repnz
leave
cmp
nop
push
adc
xchg
inc
nop
pop
fcomip
icebp
or
ljmp
mov
repnz
pushf
adc
add
int3
in
sbb
nop
lahf
je
popa
js
les
mov
mov
pushf
jmp
mov
sbb
ljmp
jg
sub
cmp
jmp
mov
sub
int
in
pusha
push
aaa
shrl
ljmp
or
push
sbb
bound
mov
rol
out
xor
adc
mov
andl
inc
jb
lods
pop
dec
pop
sbb
outsb
jne
push
dec
inc
fwait
push
faddl
jne
pop
mov
sub
mov
es
out
cmp
mov
daa
push
ss
push
jecxz
les
bound
daa
sbb
add
cs
xchg
push
lods
inc
xchg
or
and
std
clc
lahf
inc
clc
and
xlat
fbstp
pop
push
cmp
xor
daa
pop
ljmp
mov
aam
dec
arpl
leave
pop
in
cli
pop
push
outsb
sub
xchg
xchg
push
jle
or
jb
jp
fstpt
sub
sti
insl
enter
mov
pop
xchg
push
add
sub
push
fwait
sbb
xor
mov
mov
imul
jl
jnp
adc
leave
cmp
dec
xchg
jno
fistpll
push
iret
sbb
or
sarb
popf
sbb
gs
push
test
pop
ds
push
fwait
test
arpl
and
jns
adc
lret
mov
jmp
add
xchg
push
push
in
lds
ror
mulb
les
pop
aam
cld
pushf
ljmp
arpl
mov
adc
int
sub
mov
ja
dec
fistpll
bound
and
test
arpl
xchg
push
gs
xchg
mov
xor
fcmovu
sarl
mov
out
aaa
mov
push
cmp
cmp
jne
sbb
push
adcb
movsb
push
sbb
cli
sub
jecxz
pop
pop
mov
ja
pusha
outsb
add
int
cmp
cld
mov
ljmp
mov
imul
mov
dec
cwtl
inc
out
cmp
shrb
addb
jle
mov
js
xchg
push
adc
je
mov
stos
or
ja
xchg
ret
leave
aas
lock
jo
adc
jmp
mov
js
inc
cmc
xchg
stos
loope
cmp
mov
mov
xor
pop
into
inc
pop
fisttps
scas
cltd
cmpsl
or
push
inc
aaa
test
xchg
dec
outsb
scas
push
or
es
mov
dec
or
jo
and
and
clc
inc
pop
cltd
shlb
mov
xchg
xor
pop
or
cmpsb
xchg
inc
adc
cmp
jg
sti
sub
cmp
lods
cmp
and
inc
ret
fwait
fwait
aaa
stos
pop
mov
adc
jle
xor
push
jecxz
cltd
les
in
xor
pop
fcoml
sbb
iret
sub
imul
mov
mov
lods
add
loopne,pt
out
rcrb
repnz
mov
jne
cmp
inc
ss
ret
mov
icebp
inc
xchg
lret
stos
mov
into
into
mov
fwait
jns
scas
lcall
xor
sbb
jl
or
pop
int
in
adc
cmp
or
mov
mov
lret
mov
cltd
push
rcrl
roll
push
scas
data16
hlt
lahf
push
add
sub
movsl
push
dec
in
mov
sub
push
cld
lock
push
cld
stos
mov
bound
aaa
sbb
nop
rcll
fidivrs
and
in
dec
jns
mov
in
jg
stc
out
stos
cmpsl
push
mov
add
lret
adc
mov
bound
sbb
mov
stc
ja
sar
inc
sbb
xchg
inc
mov
out
bound
outsl
gs
pop
add
sbb
add
adc
lds
sbb
mov
mov
fwait
outsl
or
lea
push
movsb
xchg
subl
sub
mov
cwtl
push
mov
in
xor
js
or
insb
xor
xchg
shll
mov
sbbl
adc
fildl
lock
jno
xchg
mov
outsb
outsb
jecxz
test
pop
cmc
add
mov
xlat
lock
rorb
leave
ret
or
jmp
scas
sub
and
hlt
add
in
es
push
aaa
insb
cli
outsb
shll
sahf
dec
sbb
je
inc
inc
test
mov
pop
dec
adc
test
pop
movb
in
jp
pop
out
stc
insl
ret
mov
frstpm(287
jp
movsl
popf
mov
gs
and
jno
stc
cltd
mov
lds
push
dec
sub
xchg
xchg
jl
jmp
jbe
rcl
flds
push
push
pop
cmp
mov
jmp
aam
not
push
fistpl
sub
jnp
mov
mov
movsl
jecxz
in
xor
pop
and
dec
lahf
mov
adc
xor
cmc
push
pop
cmp
sarl
ret
or
in
dec
jb
dec
jnp
sbb
cmc
rolb
sti
or
lret
inc
mov
sti
xchg
ret
lahf
test
mov
dec
roll
pop
jge
cwtl
mov
sub
test
push
enter
scas
dec
out
add
popa
jae
xlat
xchg
mov
test
mov
sub
clc
jl
inc
mov
jns
add
fsubrl
dec
push
int3
movsb
dec
push
stos
mov
inc
add
mov
cmp
jo
cmpsb
scas
add
lret
into
sub
sub
jnp
pushf
cwtl
adc
mov
sbb
ss
mov
hlt
xor
cs
cmp
inc
push
mov
xor
shlb
xor
lcall
mov
mov
das
mov
cmp
outsb
push
xor
je
inc
xor
sti
mov
stos
xchg
sahf
roll
xorl
mov
outsb
mov
lahf
cs
pop
imul
ljmp
add
xor
into
cmp
int3
xor
test
mov
adc
cmp
xchg
call
fadd
pop
xchg
repnz
std
sti
insl
push
jecxz
popa
push
xchg
gs
in
fbstp
cmp
xchg
call
out
mov
push
and
xchg
mov
pop
shlb
and
fdivl
arpl
push
aas
mov
cmpsl
sub
adc
cmp
cld
repz
pop
or
mov
add
inc
cmp
sbb
insb
shl
rolb
cmc
pop
repz
sub
cmpsb
jbe
movb
lret
pop
shll
add
filds
jle
mov
pop
push
jl
jns
add
rorl
sbb
movsb
cld
cmp
ret
mov
mov
and
inc
sbb
xchg
xor
mov
mov
inc
cld
sub
push
repnz
ja
xchg
inc
ljmp
out
or
jae
xor
dec
cmpl
push
out
xor
add
jmp
stos
sub
adcb
mov
sti
dec
cltd
pop
orl
jae
adc
hlt
xchg
mov
repz
pop
push
xlat
mov
ret
lods
cld
push
sbb
cld
jnp
loopne
das
movsb
rolb
cmp
rorl
xchg
xchg
add
call
testb
lods
mov
push
leave
fdiv
test
loopne
aad
nop
inc
jge
cmc
into
push
mov
push
icebp
lods
mov
inc
inc
mov
or
jle
es
cli
imul
dec
adc
pop
lret
clc
fxch
push
insb
push
orl
mov
jle
xchg
imul
sbb
gs
call
add
adc
mov
inc
dec
jge
out
shrb
test
mov
jns
loope
push
jl
int3
imul
sub
stos
jmp
lret
add
mov
movsb
subb
lret
pop
sbbb
pop
pop
dec
ja
jns
push
shrl
mov
mov
fs
orl
xor
or
mov
loopne
out
push
lahf
push
das
push
adc
add
cwtl
cmp
xchg
ja
xor
cltd
out
dec
aaa
sub
xor
inc
leave
cltd
stc
cld
scas
adc
mov
fstps
xor
adc
popa
sbb
add
out
lea
shl
and
inc
xlat
and
dec
fdivl
adc
cld
daa
jl
or
repnz
cmc
adc
in
xchg
mov
pushf
out
js
sti
adc
jno
imul
daa
fldenv
pop
mov
push
das
hlt
int
sbb
mov
pop
dec
push
rclb
cmpb
mov
ret
xor
push
jmp
mov
test
or
dec
jbe
push
std
jno
into
stos
fstpt
int3
daa
in
lds
popa
inc
aaa
shll
pop
or
outsb
subb
test
pop
mov
cmpl
xchg
ds
inc
jae
popa
sti
dec
iret
cld
mov
pop
sbb
jnp
fnstenv
je
mov
sti
mov
xchg
mov
adc
jp
insl
es
xchg
packssdw
repz
test
lret
sub
cmp
stc
push
repz
in
stc
and
xor
dec
lret
adc
dec
rclb
inc
out
inc
addl
stos
pop
enter
lea
jnp
cli
orl
test
in
lds
fimuls
jbe
fldl
jno
pushf
sbb
movsl
jl
or
popf
test
pop
out
inc
adc
mov
dec
aas
mov
sbb
xchg
ss
dec
data16
hlt
push
imulb
movl
pop
mov
pop
dec
les
xor
push
pop
sbb
cmp
xchg
call
sahf
in
jnp
das
inc
and
and
sbb
xchg
cmp
lahf
add
popf
cmc
or
sarb
sbb
mov
sbb
sbb
dec
loop,pt
je
pusha
testl
enter
cmp
pop
mov
mov
cwtl
inc
lea
roll
je
cmpsb
dec
aaa
test
jle
es
movsl
or
es
sti
out
mov
sbb
imul
lea
outsl
sbb
jbe
mov
shlb
xchg
in
test
sub
push
mov
repz
add
push
subb
repnz
inc
sub
sti
iret
mov
shl
adc
mov
pushf
jl
pop
jmp
inc
adc
aaa
sub
mov
inc
notb
jne
xor
ret
xchg
and
jo
adc
xor
cwtl
movsl
adc
or
in
stos
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
test
dec
xchg
int
cmpsb
jne
fnstenv
mov
xchg
dec
xor
bound
movsb
mov
insl
sub
shrb
adc
mov
or
andl
insb
mov
clc
sub
mov
inc
jmp
xchg
ja
jmp
mov
rep
scas
roll
idivb
imul
inc
ljmp
fsubr
icebp
inc
pop
clc
adc
xor
xchg
mov
inc
lock
rcr
jg
xchg
cli
jbe
inc
inc
aam
pop
mov
aad
repnz
jl
inc
xorb
sbb
in
sbb
jae
outsl
dec
jmp
inc
pop
rcrl
sub
loop
and
in
jne
popa
sbb
aad
out
mov
mov
mov
jae
fwait
sbb
jg
mov
or
jns
mov
notb
sbb
imul
imul
fcmovnbe
pop
and
inc
fnsave
and
aaa
lahf
push
mov
adc
jge
mov
pop
rolb
mov
cmc
sti
popf
lods
xor
pop
insb
xlat
out
arpl
dec
ljmp
xor
sti
jb
xchg
je
addr16
fsubl
stos
aad
xor
add
add
add
push
jno
lods
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
sub
mov
add
mov
