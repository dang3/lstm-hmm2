jne
mov
cmp
jne
and
mov
lea
push
lea
call
mov
test
pop
jne
mov
mov
call
xor
push
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
inc
push
push
lea
call
cmpl
pop
pop
jne
mov
lea
call
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
pushl
call
test
pop
je
mov
mov
push
pushl
push
call
mov
jmp
mov
mov
push
call
xor
ret
mov
pushl
mov
pushl
mov
push
call
movsbl
add
and
ret
push
mov
push
push
push
push
push
xor
push
lea
mov
call
mov
mov
lea
push
push
call
mov
cmp
mov
jne
push
lea
mov
call
mov
lea
push
push
mov
mov
call
mov
test
jne
testl
mov
lea
push
push
jne
call
mov
test
jne
mov
mov
push
pushl
push
call
mov
lea
call
lea
call
pop
mov
pop
pop
leave
ret
mov
push
push
push
call
cmp
je
xor
jmp
call
jmp
mov
ret
int3
int3
cmpl
push
push
mov
jne
add
add
add
test
sbb
adc
add
test
je
push
push
xor
mov
lds
test
or
mov
mov
cmpsb
inc
add
push
mov
call
pop
pop
mov
call
test
je
mov
mov
push
push
push
call
test
js
mov
cmp
je
test
jne
test
je
mov
mov
push
call
mov
test
mov
jne
test
je
mov
mov
push
call
pop
pop
ret
orb
jmp
mov
jmp
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmpl
jne
cmpl
jne
cmpb
jne
xor
pop
ret
mov
mov
mov
call
xor
pop
ret
sub
push
mov
push
push
mov
mov
push
mov
mov
test
movl
movl
mov
je
mov
mov
mov
mov
mov
lea
push
push
lea
call
mov
mov
add
test
jne
test
jne
test
jne
mov
mov
mov
push
call
mov
test
mov
jne
mov
push
call
add
push
mov
call
mov
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
cmpl
jbe
xor
mov
movl
lea
mov
push
push
call
push
mov
call
mov
add
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
lea
lea
cmp
je
lea
mov
jmp
lea
test
je
push
movl
movl
movl
call
mov
add
add
cmp
jne
mov
addl
mov
add
cmp
mov
jb
xor
pop
pop
pop
pop
add
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
mov
test
push
je
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
je
mov
lea
push
push
push
movl
call
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
movl
pop
xor
pop
ret
cmp
je
cmp
je
xor
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
mov
add
call
ret
int3
push
mov
push
mov
imul
xor
cmp
mov
jg
sub
js
push
mov
cmp
jge
movzwl
add
cmp
ja
cmp
jb
add
movzwl
shl
add
sub
jns
pop
pop
pop
ret
cmp
jb
cmp
ja
and
shl
lea
jmp
lea
cmp
jbe
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
cmp
push
mov
jne
test
jle
xor
jmp
lea
movzwl
cmp
ja
cmp
jb
add
cmp
jl
push
xor
cmp
setne
push
push
xor
add
mov
call
mov
push
mov
mov
call
mov
push
mov
mov
call
add
cmp
je
mov
or
shl
or
mov
shl
or
pop
pop
pop
mov
mov
pop
pop
ret
cmp
jb
cmp
jbe
add
cmp
jbe
pop
xor
pop
pop
ret
cmp
je
pop
xor
pop
pop
ret
mov
shl
or
mov
mov
shl
or
mov
shl
or
jmp
push
mov
and
mov
sub
push
xor
cmp
push
push
je
mov
push
lea
mov
call
mov
mov
mov
mov
lea
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
mov
lea
push
push
pushl
push
push
call
mov
test
je
mov
test
mov
je
mov
mov
push
call
mov
mov
call
mov
lea
call
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
cmpl
jne
mov
push
mov
push
mov
testb
push
je
mov
sub
je
push
call
add
add
mov
xor
pop
pop
pop
ret
mov
lea
lea
push
call
add
test
je
mov
movl
mov
push
lea
push
push
call
add
movb
mov
pop
pop
xor
pop
ret
mov
push
lea
mov
push
lea
jmp
push
call
pop
add
cmp
jne
pop
pop
ret
pushl
call
ret
mov
call
mov
ret
push
mov
push
push
decl
cmpl
jne
push
movl
lea
mov
push
mov
mov
add
shl
add
cmp
je
mov
jmp
mov
lea
call
mov
call
addl
cmp
jne
mov
push
push
push
push
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
lea
call
mov
call
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
mov
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
push
mov
push
andl
push
push
lea
call
mov
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
mov
pushl
push
call
lea
mov
call
mov
pop
leave
ret
mov
cmp
mov
je
cmp
je
sub
neg
sbb
not
and
mov
ret
mov
add
jmp
push
mov
cmpl
jne
pop
ret
mov
call
lea
int3
movb
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
andl
andl
lea
call
lea
call
lea
call
lea
call
push
lea
push
push
call
push
lea
push
push
call
add
mov
ret
int3
int3
sub
mov
push
push
xor
push
lea
lea
mov
movl
mov
mov
mov
call
mov
cmp
je
mov
lea
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
jne
mov
cmp
je
mov
lea
push
push
push
mov
call
test
js
cmp
jne
push
lea
push
push
call
mov
add
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
mov
test
pop
jne
test
je
mov
push
call
add
mov
push
push
call
add
cmp
mov
jne
mov
mov
shr
and
cmp
je
mov
lea
push
push
push
mov
call
test
js
mov
cmp
je
mov
lea
xor
and
xor
lea
call
pop
pop
add
ret
mov
lea
push
movl
lea
movl
mov
mov
push
push
call
mov
mov
mov
push
push
push
call
jmp
mov
jmp
push
cmpl
jne
cmpl
je
mov
pop
ret
push
call
test
pop
je
call
mov
push
mov
call
call
test
jns
xor
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
push
push
jne
call
test
je
push
push
push
call
add
test
js
push
mov
mov
mov
call
cmp
pop
je
movl
mov
lea
call
cmp
je
push
lea
call
mov
mov
lea
push
pushl
push
push
call
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
mov
push
mov
add
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
lea
push
mov
mov
push
call
test
mov
jne
call
or
test
movl
mov
movl
je
or
or
movl
mov
movl
add
cmp
mov
leave
adc
add
je
lret
adc
mov
add
cmp
test
movl
mov
movl
jne
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
push
mov
mov
pop
push
mov
and
or
pop
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
or
pusha
loopne
adc
add
shr
adc
add
clc
xchg
mov
loopne
adc
add
enter
movl
mov
movl
mov
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
and
or
or
or
or
or
or
add
mov
add
and
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
leave
adc
add
add
add
sbb
lret
adc
add
lock
jecxz
adc
add
and
lret
adc
add
sbb
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
and
add
or
or
or
or
or
or
or
mov
mov
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sub
lret
adc
add
adc
mov
leave
adc
add
push
icebp
lret
adc
add
xor
out
adc
add
je
lret
adc
add
js
mov
leave
adc
add
cwtl
icebp
lret
adc
add
fs
adc
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
in
lret
adc
add
adc
mov
leave
adc
cmp
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
leave
adc
add
enter
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
jmp
jmp
lret
adc
add
push
mov
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
and
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
add
add
cmp
lret
adc
add
add
jmp
adc
add
pusha
test
jmp
adc
mov
leave
adc
add
test
lret
adc
add
cmp
in
leave
adc
add
test
lret
adc
add
sub
in
leave
adc
add
int3
test
in
leave
adc
xchg
mov
leave
adc
add
lock
in
leave
adc
xchg
mov
leave
adc
add
adc
lret
adc
add
pop
or
leave
adc
add
cmp
lret
adc
add
adc
in
leave
adc
add
add
lret
adc
add
je
mov
leave
adc
add
test
lret
adc
adc
movl
movl
mov
movl
movl
or
or
or
or
add
or
and
or
or
or
or
and
and
or
and
and
or
or
or
or
mov
push
mov
mov
mov
inc
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
add
and
lret
adc
adc
adc
add
xor
lret
adc
add
jl
mov
out
leave
adc
add
cmp
lret
adc
add
clc
cld
mov
icebp
leave
adc
add
inc
stc
lret
adc
add
enter
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
add
or
and
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
push
pop
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sbb
lret
adc
add
and
mov
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
movl
movl
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
movl
movl
add
test
mov
hlt
leave
adc
add
mov
lret
adc
add
cwtl
mov
hlt
leave
adc
add
cwtl
cld
lret
adc
add
mov
jl
leave
adc
add
cld
lret
adc
add
push
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
add
test
mov
cld
leave
adc
add
jo
int3
adc
add
cwtl
mov
cld
leave
adc
add
js
int3
adc
add
mov
in
cld
leave
adc
add
addb
std
leave
adc
mov
std
leave
adc
add
mov
sub
leave
adc
lret
sbb
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
pushf
push
int3
adc
add
enter
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
adc
int3
adc
add
mov
mov
lret
add
sub
int3
adc
add
int3
in
mov
add
adc
add
dec
pop
int3
adc
add
pushf
in
mov
add
adc
add
push
pop
int3
adc
add
lods
in
mov
add
adc
add
pop
pop
int3
adc
add
mov
sbb
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
cwtl
mov
push
lret
add
js
int3
adc
add
nop
cltd
mov
add
in
lret
or
adc
add
sbbb
push
lret
add
nop
or
adc
add
add
mov
push
lret
add
cwtl
or
adc
add
mov
mov
pop
lret
cmp
or
or
or
or
and
or
or
or
or
or
or
or
add
and
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
lret
add
insb
or
adc
add
mov
mov
lret
add
je
int3
adc
add
dec
mov
lret
add
cwtl
or
adc
add
call
sbb
movl
movl
mov
movl
movl
mov
add
call
cmp
or
or
or
add
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
mov
movl
mov
mov
movl
movl
mov
add
les
int3
adc
add
insb
out
adc
adc
add
rorb
int3
adc
add
pop
out
adc
adc
add
fmuls
int3
adc
add
jl
mov
or
adc
add
loopne
int3
adc
add
mov
mov
or
adc
add
call
add
pushf
out
adc
adc
add
lock
adc
add
lods
out
adc
adc
add
clc
or
adc
add
int3
out
adc
adc
add
add
int3
adc
add
mov
sbb
movl
movl
mov
movl
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
sbb
int3
or
les
int3
adc
add
or
lock
call
or
adc
add
jo
mov
push
lret
add
orb
adc
add
nop
cmpl
add
nop
or
adc
add
clc
xchg
push
lret
add
mov
add
call
sbb
movl
movl
mov
movl
add
enter
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
mov
mov
movl
movl
mov
movl
call
xor
mov
add
ret
je
mov
lea
push
pushl
mov
push
call
add
inc
cmp
jl
xor
push
call
inc
cmp
pop
jl
call
push
push
call
movzbl
push
push
mov
call
movzbl
add
mov
movl
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
mov
push
mov
je
mov
js
mov
add
test
jne
lea
push
push
mov
movl
movl
movl
mov
movw
mov
call
lea
push
lea
mov
movl
call
add
push
lea
mov
call
test
je
test
je
mov
mov
lea
mov
test
jne
test
jne
test
je
mov
cmp
je
cmp
je
mov
mov
add
push
add
add
add
rcrb
and
add
add
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
call
test
je
mov
mov
cmp
jne
mov
test
je
mov
mov
mov
lea
cmp
je
lea
movzwl
lea
cmp
movzwl
jbe
mov
add
add
cmp
jne
pop
pop
pop
pop
ret
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
jne
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
push
mov
mov
push
push
mov
mov
mov
xor
test
je
mov
add
test
jne
sub
je
mov
mov
mov
mov
mov
mov
push
call
test
je
mov
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
and
or
mov
mov
mov
mov
mov
mov
mov
mov
sub
push
call
mov
push
call
lea
call
mov
mov
test
jne
test
jne
mov
push
push
call
add
test
je
mov
mov
push
push
call
add
test
je
pop
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
xor
movl
mov
movl
mov
cmp
push
push
je
lea
push
mov
mov
mov
mov
push
push
mov
call
mov
test
mov
je
mov
mov
lea
mov
mov
test
jne
test
jne
push
call
mov
mov
mov
and
add
or
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
call
test
je
movl
orl
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
test
push
mov
je
mov
lea
push
push
push
mov
call
test
jns
mov
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
call
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
push
lea
and
xor
push
push
call
add
cmpl
mov
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
movzbl
mov
shl
xor
push
and
xor
lea
push
mov
mov
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
test
movzbl
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shr
mov
mov
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
cmpl
je
mov
lea
xor
and
xor
mov
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
mov
and
xor
call
lea
push
push
call
add
push
lea
call
test
je
movw
mov
test
mov
mov
pop
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shl
xor
xor
and
xor
mov
and
xor
test
je
mov
mov
lea
push
push
push
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
and
push
xor
mov
call
mov
test
mov
jne
test
je
mov
push
call
add
mov
test
jne
test
je
mov
push
call
add
pop
pop
add
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpl
je
push
mov
push
mov
push
push
push
call
inc
add
pop
pop
pop
ret
test
je
lea
push
push
mov
call
test
jns
mov
test
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
mov
movl
call
test
jne
mov
mov
call
test
jne
push
push
mov
call
pop
pop
pop
pop
ret
mov
cmp
cmpsb
inc
add
cmp
into
inc
add
cmp
fwait
inc
add
mov
mov
add
push
call
pop
mov
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
cmp
je
mov
cmp
jne
mov
call
cmp
jne
mov
call
test
jg
mov
call
cmp
jne
mov
call
test
jg
xor
pop
ret
mov
pop
ret
cmp
je
jmp
cmp
jne
mov
call
fmull
push
fstps
flds
fstps
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
mov
push
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
mov
mov
mov
mov
mov
call
mov
addl
add
cmp
jne
mov
addl
mov
pop
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
test
push
jne
mov
test
je
cmpl
je
mov
pop
pop
ret
push
call
add
test
je
movl
movl
movl
mov
test
mov
je
mov
mov
push
call
mov
pop
pop
ret
mov
mov
call
test
je
in
mov
add
mov
mov
call
test
jne
pushl
mov
push
call
xor
pop
ret
push
mov
and
sub
push
push
mov
call
test
jne
and
mov
mov
lea
push
push
call
test
js
mov
test
je
andl
mov
lea
push
push
call
test
js
mov
mov
lea
push
push
call
cmpl
jb
mov
andl
mov
lea
push
push
call
mov
push
call
mov
pop
mov
test
mov
jne
cmp
je
lea
push
push
push
pushl
call
add
test
je
cmpl
jg
pushl
call
push
call
pop
pop
xor
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
mov
test
jne
cmpl
je
push
call
test
je
mov
mov
mov
test
je
cmpl
je
mov
test
jne
pop
mov
pop
ret
call
jmp
push
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
mov
movl
mov
push
xor
mov
mov
push
lea
lea
mov
mov
mov
movl
mov
mov
call
cmp
je
mov
mov
mov
lea
push
push
call
test
mov
js
cmp
je
lea
call
lea
call
lea
call
xor
mov
pop
pop
pop
pop
xor
call
inc
add
or
mov
push
lea
mov
lea
push
lea
mov
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
push
call
mov
mov
push
call
mov
push
lea
lea
movl
mov
mov
call
cmp
je
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
jne
mov
call
lea
mov
mov
call
mov
push
lea
call
lea
repnz
add
push
lea
mov
call
test
js
mov
cmp
je
addl
push
lea
call
mov
mov
lea
push
push
call
mov
push
lea
call
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
lea
push
push
mov
call
cmp
jg
cmp
sub
mov
lea
push
mov
push
call
test
mov
js
cmp
je
mov
cmp
je
lea
push
mov
push
mov
mov
mov
push
push
mov
call
cmp
jne
lea
lea
push
push
mov
lea
mov
mov
movl
movl
mov
mov
call
add
push
lea
push
call
inc
add
add
add
out
cmp
test
jne
mov
mov
lea
push
mov
push
push
mov
call
cmp
mov
je
mov
push
mov
mov
call
mov
addl
mov
cmp
jge
addl
mov
call
inc
add
cmpl
jge
lea
mov
jmp
call
mov
mov
add
adc
cmp
jg
mov
jl
cmp
jbe
jmp
lea
call
mov
mov
push
push
call
add
lea
call
lea
call
lea
call
jmp
push
mov
lea
call
jmp
push
mov
lea
call
jmp
int3
push
mov
and
sub
fildl
lea
push
lea
fstpl
push
fildl
mov
fstpl
fildl
fstpl
fildl
fstpl
call
fldl
lea
fstpl
push
fldl
fstpl
fldl
fstpl
fldl
lea
push
fstpl
call
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
push
mov
mov
mov
rep
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
cmp
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
scas
lods
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
mov
mov
mov
cmp
jne
movzbl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzbl
mov
mov
xor
mov
mov
jmp
lea
mov
movzbl
movzbl
lea
push
lea
call
mov
call
push
lea
mov
push
lea
push
call
mov
add
add
cmp
jl
pop
pop
mov
pop
pop
add
ret
int3
sub
mov
xor
mov
push
mov
mov
test
push
lea
jne
mov
call
lea
call
add
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
test
je
testl
je
push
call
add
mov
pop
pop
xor
call
add
ret
push
call
add
jmp
push
mov
mov
mov
push
call
add
jmp
push
mov
sub
cmpl
je
leave
ret
cmpb
jne
cmpl
je
push
push
lea
call
lea
mov
mov
call
mov
mov
mov
andl
andl
push
lea
mov
mov
movl
movl
call
mov
test
je
mov
test
mov
je
mov
lea
push
push
push
call
test
js
mov
xor
cmp
setne
inc
push
movzbl
push
call
pop
push
push
push
call
test
js
pop
pop
leave
ret
andl
jmp
push
mov
push
mov
push
xor
inc
cmpl
jne
testb
jne
xor
testb
je
pop
leave
ret
test
jne
mov
mov
mov
push
push
mov
lea
push
lea
mov
call
add
mov
neg
sbb
neg
call
mov
shl
xor
pop
and
xor
pop
jmp
mov
jmp
mov
andl
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
add
push
je
mov
mov
mov
push
xor
call
mov
cmp
jne
xor
cmp
mov
jne
mov
mov
push
mov
lea
mov
mov
call
mov
cmp
je
mov
mov
push
push
mov
call
mov
mov
cmp
je
movl
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
cmp
je
mov
lea
push
push
mov
call
test
js
cmp
jne
cmp
je
cmp
je
cmp
je
add
xchg
adc
mov
dec
and
push
lea
push
lea
push
mov
movl
movl
mov
mov
mov
movl
mov
mov
shll
mov
mov
mov
mov
mov
push
push
call
mov
test
js
cmp
jne
cmp
jne
mov
mov
mov
push
push
call
cmp
mov
jne
mov
add
mov
push
lea
push
mov
push
push
call
mov
lea
movl
call
lea
call
mov
cmp
je
mov
mov
push
call
lea
call
cmp
jne
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
mov
push
push
push
call
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
push
xor
push
lea
mov
call
mov
mov
mov
lea
push
push
call
test
js
push
lea
mov
mov
mov
mov
call
mov
cmp
mov
jne
mov
mov
mov
push
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
push
mov
lea
mov
mov
call
test
js
mov
mov
cmp
je
movl
cmp
lea
jne
xor
lea
lea
mov
test
je
mov
cmp
jge
mov
mov
mov
mov
mov
push
push
call
add
add
jmp
xor
mov
mov
mov
push
push
call
cmp
mov
mov
jne
jmp
lea
mov
test
je
mov
cmp
jge
mov
mov
mov
mov
mov
push
push
call
add
add
jmp
xor
lea
call
lea
call
lea
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
pop
pop
add
ret
xor
jmp
xor
jmp
push
mov
push
mov
push
push
push
push
call
mov
mov
mov
andl
andl
test
mov
mov
lea
mov
mov
je
mov
push
call
push
push
pop
mov
andl
push
lea
pop
mov
mov
call
push
push
pop
push
lea
pop
mov
call
test
pop
pop
mov
jne
mov
push
push
pop
push
lea
pop
call
push
lea
push
push
call
push
push
pop
push
lea
pop
mov
call
add
pop
pop
pop
mov
pop
ret
mov
pushl
mov
push
call
ret
push
mov
decl
mov
je
pop
ret
lea
movl
call
lea
call
push
call
pop
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpb
jne
push
push
push
mov
movzbl
mov
xor
cmp
jne
push
call
add
test
je
push
mov
call
mov
test
je
test
jne
add
mov
lea
call
mov
mov
lea
call
mov
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
call
mov
mov
test
movl
je
mov
mov
push
call
movb
movb
xor
pop
pop
pop
pop
ret
sub
cmp
ja
jmp
push
call
add
test
je
flds
push
push
fstps
mov
mov
call
lea
add
push
push
movl
movl
movl
call
flds
fstps
mov
jmp
push
call
add
test
je
push
push
mov
xor
mov
call
mov
mov
mov
mov
jmp
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
push
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
arpl
cmp
xchg
cmp
shll
adc
and
mov
cmp
and
imul
cmp
cmpsb
daa
or
mov
cmp
push
cmp
popf
and
adc
and
adc
and
adc
daa
or
pop
and
cmp
enter
call
es
dec
es
sbb
push
push
call
mov
movsb
add
mov
loope
pop
xlat
xchg
movb
jl
test
mov
add
je
jmp
xchg
fadds
jmp
mov
mov
out
add
add
add
add
enter
add
pop
add
lahf
add
mov
add
jo
mov
add
call
fcmovne
fcoms
add
push
push
add
rcll
test
add
add
idivl
outsl
add
mov
add
std
add
xchg
add
fldl
ja
add
xchg
add
add
in
add
test
add
add
push
add
clc
add
add
ljmp
add
cmc
add
add
add
jge
push
mov
add
push
push
lea
push
push
lea
push
lea
push
push
push
push
push
push
call
add
outsl
cld
add
jmp
add
pusha
add
in
add
push
add
add
add
add
popf
add
push
add
jo
pushf
push
add
leave
add
nop
pusha
add
mov
mov
add
add
filds
xchg
test
add
in
jmp
pop
movsb
add
jbe
test
add
insb
add
add
add
mov
lea
pop
movl
push
lea
push
lea
push
push
push
push
call
xorb
add
add
add
imull
add
add
add
add
mov
add
aam
add
movsl
mov
xlat
js
nop
add
fadds
mov
flds
loopne
gs
xchg
mov
mov
mov
mov
lea
pop
popl
push
push
lea
push
push
lea
push
push
push
push
lea
push
lea
push
call
mov
add
fucomi
push
add
into
out
push
add
add
les
add
add
into
out
jmp
add
out
add
add
fs
add
int
add
add
add
bound
add
add
loop
loopne
add
add
lea
add
add
insb
add
add
add
mov
in
add
icebp
add
add
jns
add
nop
in
orl
push
push
push
push
call
sti
out
popa
lods
mov
jnp
in
jecxz
iret
ret
repnz
jo
add
mov
push
lret
data16
jne
xchg
sti
fcomps
roll
rcr
add
add
popf
add
hlt
add
repnz
lret
add
add
insb
add
mov
pop
addl
push
push
mov
lea
pop
push
push
call
push
push
push
push
lea
push
push
push
lea
push
push
call
add
push
mov
add
mov
andb
jbe
add
insb
add
add
loope
les
jb
neg
adcl
xchg
cmpsl
flds
add
movsb
mov
add
ljmp
add
outsl
cmpsl
scas
stc
xchg
mov
in
fwait
je
mov
in
addb
aad
scas
add
xchg
mov
int3
lea
pop
call
push
push
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
xchg
add
add
mov
lcall
jnp
cld
pop
mov
pushf
mov
jno
mov
add
add
fwait
push
xchg
add
add
add
xchg
pop
js
mov
loope
fsubl
sahf
loopne
out
cmpl
aam
fldt
les
lock
add
jmp
ret
push
push
lea
push
push
push
push
push
push
call
add
add
sbb
icebp
add
cld
add
add
test
xchg
add
movsb
add
popa
push
add
add
add
add
lods
fs
mov
jbe
add
add
cmpsb
gs
out
push
fwait
add
clc
mov
add
add
and
pop
mov
mov
roll
mov
fwait
mov
mov
lea
pop
mov
push
push
lea
push
lea
push
push
push
push
push
call
stos
js
out
aad
add
scas
cwtl
lret
into
testl
int3
add
mov
mov
add
mov
movsl
add
imul
xchg
add
out
les
enter
add
lods
mov
mov
mov
mov
add
add
fsubs
jp
lods
cmpsl
add
add
fwait
add
mov
lea
pop
mov
push
push
push
push
push
push
lea
push
call
fildl
mov
icebp
mov
add
xchg
mov
add
add
std
add
into
clc
mov
popa
pop
xchg
pusha
popf
add
lock
add
mov
aad
mov
in
push
xchg
jo
add
pop
add
add
subb
mov
jl
sti
add
jno
clc
add
movb
push
add
sbb
add
push
push
lea
push
push
lea
push
lea
push
lea
push
call
rolb
iret
bound
xchg
pop
push
add
mov
xchg
add
pop
jle
imul
add
pop
sahf
aam
add
mull
push
add
add
add
add
add
test
mov
xchg
add
add
jns
into
add
cmpl
lods
cltd
add
pusha
mov
add
sti
iret
add
pop
add
push
push
push
push
push
push
call
fistpl
mov
add
sti
add
pop
add
aam
add
add
pop
pop
add
mov
add
stc
stos
mov
rolb
add
add
add
popa
aad
sarb
scas
std
add
mov
pushf
mov
add
add
mov
lea
fidivl
mov
mov
add
add
mov
lea
pop
add
mov
push
push
push
call
cmpsl
test
push
add
push
add
pushf
loop
in
jmp
int
add
fcomps
fisubrs
mov
adcl
add
mov
test
test
ja
add
fsubrl
imul
add
mov
push
imul
add
out
pop
add
jp
mov
lea
pop
xor
push
push
push
lea
push
push
push
lea
push
call
add
add
add
fstpl
cmc
add
add
add
push
add
add
xchg
mov
sahf
iret
add
negl
mov
cld
into
popa
cwtl
add
arpl
in
add
in
add
fbld
add
add
xchg
add
mov
in
fs
jle
mov
pop
add
push
push
lea
push
lea
push
lea
push
lea
push
push
call
loop
mov
je
incb
push
add
add
jp
add
pop
gs
arpl
mov
add
addl
lock
pop
in
out
add
addl
scas
add
stc
popf
hlt
scas
test
mov
cmc
stc
aad
add
add
nop
cmpsb
repnz
faddl
out
add
add
jmp
xchg
add
add
add
add
cmpsl
orb
add
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
add
pop
mov
add
mov
icebp
pop
add
add
push
popa
jl
mov
lahf
addr16
add
cmc
insb
addl
jge
add
add
jnp
jbe
add
jbe
mov
add
add
add
js
into
fwait
add
rolb
add
incb
mov
scas
aad
mov
add
add
jecxz
in
bound
loop
int3
lea
pop
call
mov
xor
push
push
rol
push
or
inc
add
shr
sub
inc
xor
pop
shr
shl
shl
pop
push
push
call
rcrl
fistpl
pop
mov
fildl
sahf
popa
push
add
add
lods
cmc
push
js
add
mov
add
add
mov
xchg
aam
pop
mov
push
lods
mov
add
add
je
add
add
test
int
in
add
cmc
mov
push
mov
add
jbe
push
xchg
add
add
mov
add
add
mov
lea
pop
pushl
push
push
lea
push
push
push
push
push
call
add
lds
xchg
add
repnz
mov
test
add
add
lcall
add
je
add
add
lods
add
mov
bnd
lock
lahf
roll
jecxz
les
add
jge
rolb
fcmovnu
movsl
ljmp
add
add
jbe
test
lcall
add
mov
jnp
les
insb
pop
add
mov
movl
push
push
lea
push
push
push
push
call
pop
movl
jb
rorl
push
add
cwtl
loop
jl
lahf
pushf
jl
add
test
add
scas
add
fsubrs
lahf
pop
fwait
stos
cltd
add
gs
push
pop
mov
add
shlb
add
mov
cltd
add
cmpsl
arpl
neg
pop
imul
fiadds
mov
out
mov
shl
pop
mov
decb
pop
lea
push
push
push
lea
push
lea
push
push
push
call
add
mov
add
add
mul
jno
int
add
jns
rcll
add
xlat
fdivl
loop
mov
add
ficoms
rcl
icebp
movb
add
lahf
jb
cld
lods
pop
add
add
add
scas
in
cli
add
shll
fldl
ret
out
test
mov
rorb
push
push
push
push
push
push
push
call
xchg
add
pop
jno
add
in
mov
mov
in
pop
jb
add
lods
test
add
in
add
int3
test
add
lea
add
add
add
sbbl
add
lret
sti
subb
in
jle
pop
add
add
add
xorb
pop
add
add
pop
mov
lea
pop
pushl
pushl
call
push
push
push
lea
push
push
lea
push
lea
push
push
push
lea
push
call
add
add
shll
push
xchg
add
add
add
faddl
negb
pop
decb
movsb
rcrb
stos
cmc
repnz
add
add
into
add
mov
int
cmc
add
lcall
out
jno
int
add
xchg
outsl
xchg
out
xchg
xchg
in
mov
jp
add
pop
fisubl
pop
in
mov
lea
pop
pushl
push
lea
push
lea
push
push
push
push
call
jb
add
add
mov
add
jmp
into
lock
push
pop
add
add
jne
add
add
fbstp
aam
jmp
add
leave
xchg
add
rcll
into
test
add
add
add
mov
mov
mov
add
add
icebp
add
add
pop
add
mov
lea
pop
pushl
push
push
push
push
push
push
push
call
add
mov
enter
add
add
loope
pop
add
mov
fnstenv
leave
add
add
fildl
jmp
loop
jmp
add
mov
in
add
xlat
aam
add
xchg
in
push
mov
int
jb
add
fprem
xchg
push
add
add
add
xorl
fiaddl
push
mov
stos
add
add
mov
enter
out
add
jp
add
les
add
push
mov
rclb
enter
lret
push
roll
add
add
sub
rol
pop
inc
pop
push
push
push
push
push
call
add
lret
int3
cld
cld
add
add
mov
jecxz
rolb
xchg
add
add
add
add
test
aad
movsb
cwtl
out
add
insb
add
addb
mov
jmp
jp
add
add
scas
xchg
add
fldcw
add
pop
in
mov
add
add
popl
mov
mov
add
adc
pushl
call
push
push
push
shr
inc
push
and
add
shl
inc
lea
sub
sub
pop
sub
rol
ror
sub
pop
push
push
push
push
push
push
push
push
push
call
xchg
mov
add
add
mov
jnp
lahf
mov
filds
loopne
mov
int3
leave
fcompp
add
add
add
ret
add
cmpsb
cltd
add
cwtl
in
roll
jl
les
data16
test
bound
pop
sahf
add
fwait
mov
add
popa
add
lahf
add
scas
pop
mov
lea
pop
push
push
call
push
push
lea
push
push
lea
push
call
add
add
arpl
fldl
add
mov
add
cmc
addr16
add
in
movsb
add
add
add
add
icebp
fldl
mov
add
fdivp
pop
bound
add
imul
add
arpl
in
test
movsb
add
add
mov
lea
mov
scas
jge
lahf
mov
lea
pop
mov
push
push
push
lea
push
push
lea
push
call
add
add
add
lock
test
push
mov
mov
mov
add
add
add
pop
add
mov
fsubs
cmpsl
shrl
add
add
pop
mov
js
jecxz
hlt
mov
out
cld
mov
cwtl
fiadds
add
fwait
mov
mov
leave
call
push
add
sbb
push
lea
push
push
push
lea
push
push
call
bound
push
out
mov
jmp
mov
push
movsb
outsl
pop
jo
test
push
add
push
add
add
jne
add
mov
bound
imul
add
add
call
add
nop
xchg
mov
xchg
push
jae
mov
pop
aam
stos
outsl
test
out
mov
lea
pop
push
mov
push
push
call
push
add
add
in
arpl
add
jnp
loopne
fxam
add
xchg
test
fcmovnbe
mov
loop
ljmp
push
add
hlt
lcall
std
add
mov
add
pop
out
pop
mov
lahf
add
add
jl
jecxz
pop
add
add
mov
add
add
les
xchg
add
xlat
add
add
add
fwait
pop
pop
cmpsb
mov
lea
pop
add
add
add
push
push
push
lea
push
call
xchg
movb
jecxz
add
push
add
enter
lret
push
xchg
add
clc
jnp
add
add
popf
lods
movb
into
add
pushf
xlat
add
add
sahf
add
add
add
mov
add
xchg
mov
push
rclb
add
add
movb
add
add
add
cmpsl
add
add
pop
mov
xor
push
push
push
call
add
add
mov
pop
add
lret
jp
pusha
mov
add
gs
je
cli
mov
pop
jecxz
add
add
add
out
add
add
add
lcall
out
xchg
cltd
mov
add
lods
aam
add
add
add
roll
in
mov
add
faddl
add
xchg
imul
mov
lea
pop
add
push
push
push
push
push
push
push
push
lea
push
lea
push
call
mov
subb
mov
push
jl
add
xchg
loope
add
mov
add
add
jnp
add
mov
lahf
add
loope
jmp
jge
test
jp
test
push
add
not
push
add
js
push
cltd
rcrb
rcrb
shl
lods
pushf
add
add
shrb
test
pop
push
mov
xor
push
push
push
lea
push
push
call
jne
add
incb
add
add
add
xchg
popf
mov
mov
add
add
push
cmpsb
hlt
imulb
add
jl
add
add
push
lcall
addb
push
aam
add
add
lods
add
add
sti
shrl
add
jle
cmpsb
jnp
mov
out
add
aad
jne
iret
fldcw
pop
jne
flds
bound
cld
lea
pop
add
pop
mov
xor
push
push
call
lret
jbe
ret
mov
orb
pop
add
movl
add
outsl
add
test
cltd
cmpsl
sbb
jbe
lcall
popa
add
add
add
mov
arpl
cmc
loop
jo
mov
add
add
fcoml
add
add
lcall
js
push
cwtl
cmpsl
add
sti
jmp
mov
int3
lea
pop
push
mov
xor
push
push
lea
push
call
add
add
into
addl
in
lock
add
lock
add
push
test
filds
xchg
add
add
xchg
cmc
filds
push
pusha
ret
xchg
add
add
add
add
add
addb
pop
xchg
push
mov
add
xchg
add
ficompl
stos
add
mov
addb
lock
or
sub
push
lea
push
push
call
lock
add
faddl
loope
add
add
pop
ret
push
ret
jb
cmpsb
push
pop
add
lods
add
out
sahf
jl
lods
add
add
add
jmp
add
xchg
add
mov
jae
mov
movsl
jno
mov
enter
add
adcl
pop
add
add
add
jae
add
int3
fldl
scas
pop
mov
imul
pop
pop
push
push
push
push
push
call
jmp
nop
mov
pop
popa
add
jnp
jo
add
xchg
repnz
lea
push
add
cmpsb
repnz
gs
loope
mulb
loop
add
add
add
pop
fstl
add
add
lret
mov
add
add
add
cmpsb
jb
mov
add
add
sar
add
add
sar
cmc
test
add
cmc
add
aam
bound
rep
push
push
lea
push
lea
push
push
lea
push
push
call
add
lret
add
add
sub
pop
mov
jns
test
add
ja
add
add
add
js
test
scas
leave
add
out
icebp
add
jb
mov
mov
jne
aad
add
pop
movsl
add
add
add
add
add
add
sahf
pushf
push
pop
loopne
stc
xchg
jecxz
testl
in
push
push
call
clc
in
mov
fwait
pop
mov
xchg
push
repnz
into
and
rcr
xchg
add
pop
bnd
add
xchg
add
loop
shrb
push
movl
jo
push
shrb
mov
xchg
add
add
rolb
add
lds
popl
mov
fildl
leave
cwtl
add
leave
add
mov
fimuls
pop
push
add
or
pop
in
push
call
jge
add
mov
mov
out
add
test
add
idivb
movsb
push
push
addb
imul
mov
notl
decb
add
xchg
add
push
add
add
add
push
add
scas
add
loope
push
xchg
pop
add
add
scas
mov
pop
out
add
cmpsb
jp
add
pop
add
mov
mov
lea
pop
add
add
mov
xor
push
push
call
idivl
xchg
xchg
add
lcall
add
cltd
add
jns
clc
add
scas
test
add
add
jle
mov
xchg
add
out
filds
add
mov
imul
add
jne
pop
imul
mov
add
push
xchg
add
xor
add
shlb
rclb
xchg
add
mov
add
add
pop
mov
push
push
push
lea
push
push
push
push
push
push
push
push
call
jle
add
add
gs
rcr
sti
in
pop
mov
add
add
in
xchg
pop
add
cwtl
in
add
out
add
lcall
add
add
fiadds
pop
mov
add
test
std
lret
into
mov
add
addb
loopne
mov
sub
adc
push
push
lea
push
push
push
push
push
lea
push
lea
push
push
call
xchg
jmp
mov
mov
mov
mov
xchg
fildl
add
mov
add
int3
push
add
add
add
push
push
mov
add
add
add
add
mov
add
add
add
add
push
je
xlat
mov
add
fsubrs
jb
jp
mov
cli
in
jo
add
add
movsb
add
jns
push
movsb
add
fiaddl
mov
lea
pop
add
push
lea
push
lea
push
push
push
push
push
push
call
popa
lods
mov
add
add
mov
stos
jne
jo
add
jmp
mov
pop
pop
mov
pop
xchg
std
jno
jnp
loopne
pushf
jne
fwait
mov
add
cwtl
popf
add
loop
js
jge
xchg
push
lea
cli
mov
jns
mov
xchg
add
add
mov
push
add
pusha
jl
mov
outsl
cli
add
fadds
leave
add
xchg
insb
ret
lea
pop
mov
xor
push
lea
push
push
push
push
call
pop
add
add
imul
addb
mov
pop
andb
add
add
je
out
movsb
sahf
add
scas
add
popa
fwait
jb
push
add
jmp
stos
stos
rolb
test
add
flds
jno
add
xchg
divl
test
test
int
jbe
int
add
movsb
in
jle
fimull
pop
add
push
push
push
push
push
call
fwait
add
add
movsb
icebp
faddl
test
mov
mov
add
fidivs
lods
je
mov
xchg
addb
ret
iret
mov
jae
add
sti
mov
movl
jne
faddl
push
outsl
add
mov
lret
stc
ja
jp
add
add
iret
cmc
add
add
add
iret
imul
leave
mov
add
mov
lea
pop
add
mov
push
push
sub
push
sub
add
dec
xor
ror
sub
lea
sub
pop
add
pop
push
lea
push
push
push
push
lea
push
lea
push
lea
push
call
xchg
out
add
add
xchg
add
clc
add
cwtl
int3
and
jp
mov
test
loope
int
pop
addl
add
sahf
add
leave
mov
fidivrl
lea
shrl
add
loop
add
out
fcmovbe
add
add
add
mov
add
mov
add
mov
pop
pushl
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
out
add
roll
add
movsl
mov
add
cli
jge
xchg
lret
cmc
add
pop
jmp
movb
leave
loope
add
call
in
add
pop
add
add
add
jecxz
aad
add
call
xchg
mov
add
add
add
add
je
shlb
add
loopne
js
add
les
mov
lea
pop
call
push
lea
push
push
push
push
push
call
add
add
pop
add
ret
int
add
mov
jmp
mov
out
push
bound
xchg
rol
jmp
mov
cltd
ljmp
fcomps
fdivs
add
add
addb
fistpl
int3
add
add
jne
add
fdivl
jmp
lock
lods
loop
lahf
mov
lea
pop
push
push
push
sub
lea
push
and
add
shr
lea
sub
sub
inc
pop
inc
shl
not
shr
pop
push
push
push
push
push
push
lea
push
call
test
push
xchg
ja
cltd
xchg
enter
add
add
pop
add
bound
add
mov
call
jns
mov
add
bound
jmp
add
enter
mov
cwtl
fadds
roll
add
add
add
lret
add
lea
add
mov
lea
pop
push
push
push
push
push
call
aam
pop
add
add
add
jl
push
fisubs
mov
mov
add
mov
mov
add
add
mov
add
test
notl
add
add
iret
mov
movb
std
add
add
mov
add
add
insb
jecxz
add
lea
pop
call
mov
push
push
push
call
pop
popf
leave
stc
divl
imul
stc
add
add
add
leave
mov
fiadds
addb
add
fldl
stc
add
mov
lods
add
add
sti
loopne
add
call
in
rcr
in
push
mov
add
nop
add
xchg
add
mov
add
pop
push
push
mov
push
push
lea
push
lea
push
call
add
iret
in
add
pop
push
js
add
add
cmc
fcoml
add
add
add
in
add
add
lea
sahf
add
add
add
andl
push
ljmp
cltd
cmc
mov
loopne
xchg
imul
jl
imul
arpl
ja
out
aad
outsl
jnp
mov
add
add
mov
xlat
fiaddl
mov
lea
pop
add
add
add
push
lea
push
push
push
push
push
call
mov
xchg
pop
in
sti
push
test
lods
addr16
movsl
stos
sti
lret
add
jge
out
add
int
addb
push
ljmp
add
sti
xchg
add
scas
test
mov
js
add
popa
add
add
hlt
add
mov
add
test
jno
in
add
insb
mov
lea
pop
mov
xor
push
lea
push
push
push
push
push
push
push
push
call
add
test
testb
push
cmp
add
repnz
add
mov
std
int
aad
mov
into
cmpsl
lahf
xchg
jns
mov
push
mov
add
hlt
add
add
fwait
jo
add
ljmp
add
movsb
mov
add
pop
popa
imul
popf
add
fistpll
fwait
clc
add
add
mov
in
add
pop
add
push
lea
push
lea
push
call
aam
jno
add
fistpll
add
add
int
rolb
rcll
fidivrl
add
flds
test
mov
add
in
add
or
add
scas
add
add
in
mov
jo
add
mov
add
out
subb
mov
add
nop
mov
lea
pop
push
mov
push
push
push
push
push
push
call
pop
ljmp
add
not
fs
add
scas
jmp
mov
fs
add
add
in
add
mov
arpl
bound
add
hlt
add
add
add
mov
add
cli
roll
mov
push
nop
add
pop
add
mov
add
add
aam
jne
cmpsb
out
jmp
add
pop
xor
push
lea
push
push
lea
push
push
push
call
testb
add
js
add
mov
popl
push
add
add
mov
cmpsl
add
lahf
add
push
add
shr
rcl
pop
add
jbe
add
mov
push
add
add
mov
add
xchg
int3
fildl
add
add
push
ja
add
add
push
loop
add
add
pushf
jmp
cld
lea
pop
add
push
push
push
push
push
push
push
push
push
push
call
mov
pop
add
add
add
call
add
push
les
int3
add
mov
add
pop
add
mov
scas
iret
mov
fildl
jne
shlb
push
mov
pop
add
mov
add
cld
xchg
fldl
arpl
add
mov
add
add
push
out
jns
push
sahf
push
xchg
les
mov
add
mov
int3
lea
pop
add
push
sub
add
pop
pop
push
push
lea
push
push
lea
push
lea
push
lea
push
call
add
test
testb
push
push
add
add
add
add
sahf
push
add
cli
add
add
add
add
jbe
add
fiadds
std
add
out
add
add
mov
add
mov
mov
lahf
cltd
mov
out
add
ret
mov
enter
mov
add
pop
mov
xor
push
add
not
lea
pop
rep
push
ror
dec
rol
pop
mov
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
lea
push
call
lahf
outsl
test
jmp
add
add
add
int
add
add
out
mov
pop
add
pop
add
xchg
add
add
mov
xchg
mov
cmc
xchg
jb
mov
mov
add
roll
push
push
out
movsb
push
add
add
add
xchg
xchg
add
jne
test
mov
sub
or
push
push
push
call
lcall
jnp
add
popa
add
je
push
add
add
jns
roll
add
push
fucomip
fwait
sahf
mov
add
cmpsb
iret
pop
out
add
int
mov
add
rclb
add
mov
loope
loop
add
xchg
add
rolb
add
lock
fisttpll
cli
add
xchg
fs
fisttps
pop
add
push
ror
pop
or
je
push
lea
push
push
push
push
push
push
call
fisubs
jge
jp
mov
lods
mov
movl
adcb
mov
mov
stos
imul
add
add
push
pushf
add
pop
add
add
testl
popf
add
aad
add
fstp
add
xchg
add
pop
add
fists
mov
movsl
je
add
add
add
add
fcmovb
add
mov
jle
aam
bound
mov
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
mov
add
mov
mov
popa
stos
add
add
cwtl
scas
add
add
scas
adcb
jle
sti
add
int3
sbbb
cli
mov
jl
incb
data16
add
jmp
in
jo
add
jmp
pop
add
add
push
xchg
add
add
fwait
movb
add
and
xor
push
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
xchg
into
cmpsl
mov
lret
scas
add
mov
add
call
add
add
out
jo
jecxz
jp
add
movsl
orl
faddl
add
add
add
lock
out
add
add
fldl
add
add
filds
jbe
jle
xchg
add
xchg
add
jl
jecxz
add
test
add
icebp
test
jns
pusha
pop
cld
loop
add
mov
add
pop
add
push
xor
add
sub
pop
mov
push
push
push
lea
push
lea
push
push
push
call
push
add
push
shlb
jge
loop
add
mov
test
add
out
jbe
mov
lods
imull
mov
push
sahf
jne
aam
sahf
out
add
sarb
add
addl
roll
add
flds
mov
enter
jno
jle
imul
add
add
add
rolb
lods
faddl
hlt
cmpsl
sti
movsl
aam
add
push
mov
lea
pop
xor
push
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
js
fildl
lea
in
lret
mov
pop
add
jno
jnp
add
mov
mov
add
push
lahf
push
mov
add
jo
add
stc
jbe
add
push
jns
jp
add
add
add
jns
std
sarb
repnz
loopne
mov
jl
push
rcr
jne
jge
fwait
add
scas
rolb
add
xchg
movsl
scas
data16
stos
mov
xchg
in
mov
lea
pop
add
push
sub
lea
ror
pop
add
add
push
push
add
sub
dec
pop
mov
push
push
push
call
mov
cmpsl
int3
testl
add
add
mov
add
ljmp
add
xchg
pop
arpl
pushf
push
jp
roll
xchg
add
out
fwait
stc
jae
out
loope
jmp
ljmp
add
fs
add
jge
add
ret
mov
cmc
cwtl
jns
add
ljmp
fadds
lea
fwait
popa
push
jp
retw
add
mov
lea
pop
xor
push
push
push
push
push
lea
push
lea
push
push
call
add
insb
add
pop
xchg
add
cld
add
cmpsb
loop
cmc
les
add
movsb
xchg
add
add
nop
test
add
aad
mov
repnz
add
add
scas
mov
lea
jbe
fwait
xchg
push
je
leave
out
movb
add
pop
add
add
xchg
push
test
mov
lea
pop
add
add
push
push
push
lea
push
push
push
push
lea
push
call
add
xchg
push
push
test
insb
lods
test
aam
jge
jle
jp
cmpsb
push
mov
add
pop
add
xchg
int3
add
mov
add
add
add
shrl
cmpsb
push
cltd
pushf
pop
fistl
add
addl
add
movb
add
add
add
pop
mov
mov
add
add
add
mov
lea
pop
pop
push
add
sub
pop
rep
mov
push
push
push
call
add
xchg
add
mov
push
mov
add
jae
mov
jmp
add
add
mov
add
add
sti
add
fcomp
mov
add
out
mov
stos
test
outsl
in
add
add
int
add
bnd
sahf
lret
jnp
addl
nop
iret
mov
clc
sti
mov
pop
xor
push
push
push
lea
push
push
push
lea
push
push
call
imul
add
bound
add
stos
add
cmpsb
faddl
cmpsl
shr
add
mov
pushf
into
add
jnp
add
shlb
mov
test
add
shll
hlt
jo
cmpsb
data16
int3
mov
lds
push
hlt
add
mov
addl
mov
les
les
push
lea
push
push
push
push
push
push
call
add
add
mov
push
add
add
insb
stos
add
jbe
call
bound
add
loopne
xchg
mov
pop
lods
lret
mov
stos
lret
add
add
stos
stos
adc
add
mov
mov
in
add
filds
enter
add
popa
stos
add
add
test
sti
add
add
imulb
hlt
lea
pop
or
je
mov
push
push
push
push
push
push
push
push
call
add
add
add
imul
add
push
push
pop
mov
frstor
add
test
add
add
in
add
xchg
add
icebp
add
jo
add
popa
insb
imulb
mov
add
aam
pushf
and
movb
add
ficoms
std
jnp
bound
pop
add
push
push
call
leave
stos
add
add
lds
add
sti
add
add
mov
cmpsl
add
jl
fstp
add
mov
mov
pusha
xchg
add
test
add
test
imul
add
mov
js
mov
xchg
shlb
js
enter
iret
test
jb
cld
lea
pop
add
rep
pop
push
push
shl
rol
ror
push
xor
add
add
sub
inc
ror
rol
pop
rol
pop
push
push
push
push
push
call
add
add
add
sahf
imul
mov
aam
rolb
add
add
add
ja
add
fwait
add
divl
add
add
addr16
add
fdivr
add
add
add
in
add
xchg
iret
mov
add
jp
outsl
mov
pusha
add
stos
add
add
les
push
dec
pop
mov
push
lea
pop
mov
push
add
ror
not
add
pop
mov
push
inc
add
rol
sub
pop
jmp
push
push
lea
push
lea
push
push
call
jae
add
int3
mov
add
xchg
add
add
pop
sahf
mov
ljmp
hlt
add
add
add
lock
add
jle
add
add
pop
in
add
scas
bound
mov
jns
fldl
jp
int
jle
jmp
pop
add
add
add
flds
out
push
rcr
orb
push
push
lea
push
lea
push
call
cmpsl
clc
cmpsl
xchg
mov
add
add
int
lret
in
mov
shll
leave
fdivs
out
arpl
std
xlat
rolb
test
push
rcr
add
add
jb
fnstcw
add
callw
xlat
mov
js
stos
sti
add
xchg
add
add
push
lret
cld
lea
pop
mov
add
push
push
sub
pop
push
push
push
push
lea
push
push
lea
push
push
call
xchg
pushf
cmpsb
gs
mov
jle
jmp
push
add
jp
insb
add
addl
pop
clc
data16
add
add
add
add
out
fwait
cmc
out
data16
mov
mov
shrl
add
pop
mov
add
add
pop
add
add
add
add
mov
lea
pop
push
push
push
shl
inc
pop
mov
pop
push
lea
push
push
push
push
push
call
lods
imul
fildl
test
jmp
add
subl
add
in
cmpsb
add
cltd
add
sti
mov
add
rolb
jecxz
add
mov
add
mov
cmc
fwait
mov
add
add
add
in
les
push
leave
mov
add
push
arpl
popa
mov
repnz
pop
add
pop
pop
pop
pop
push
inc
not
pop
leave
push
not
rol
pop
ret
push
add
ror
pop
push
mov
add
push
lea
push
push
lea
push
call
cmc
add
mov
add
ljmp
nop
push
add
add
aad
add
add
sar
add
add
hlt
add
cmc
add
imul
pop
push
popa
mov
cmpsb
xor
mov
mov
jbe
add
add
add
mov
add
in
add
add
pop
bound
add
add
mov
lea
pop
push
push
push
push
push
call
icebp
add
lods
add
add
test
mov
add
add
add
pop
add
mov
add
out
mov
add
aad
add
jns
rcrb
pop
add
loopne
fcmovnbe
add
lods
mov
cmpsb
mov
addb
leave
fidivs
add
add
scas
in
int
insb
add
mov
data16
stc
add
test
cld
lea
pop
push
movl
push
push
push
lea
push
push
call
in
add
mov
add
movsl
cli
divb
mov
leave
add
pop
pop
add
push
add
mov
add
mov
mov
add
pop
lea
movsl
cli
pop
xchg
mov
push
add
add
ja
add
add
imul
lahf
lods
add
test
add
add
add
mov
lea
pop
addl
push
dec
pop
test
je
mov
pop
push
lea
push
push
push
push
push
call
rcrl
mov
add
cmc
into
xchg
add
push
add
add
add
cltd
shrl
int
pop
mov
add
add
add
add
add
mov
add
add
push
movb
push
pop
loop
cmpsb
add
add
add
fmuls
add
add
add
bound
lea
pop
pop
push
push
push
push
lea
push
push
lea
push
call
add
pop
add
fmull
arpl
hlt
xchg
add
repnz
loop
mov
mov
imul
add
out
std
add
mov
pop
movsb
add
add
clc
add
ret
mov
add
popa
out
add
cmpb
shlb
mov
add
add
push
mov
lea
pop
pop
pop
leave
push
push
push
push
push
push
push
lea
push
push
lea
push
call
jecxz
mov
mov
rcrl
fadds
add
add
add
fcmovnbe
rolb
push
pop
jecxz
add
push
add
xorl
fcomip
ret
pop
cmp
add
add
mov
add
imul
xchg
cwtl
add
add
js
add
add
ljmp
pushf
add
pop
lret
add
lret
fwait
add
lahf
mov
ljmp
xchg
jnp
add
mov
lea
pop
ret
push
push
rol
pop
mov
push
push
lea
push
push
call
shrl
xchg
add
aam
mov
push
mov
mov
add
mov
bound
add
in
jo
add
lods
add
add
shl
add
cmpsb
aad
mov
scas
les
add
mov
add
mov
mov
add
add
add
jmp
add
addb
testl
subl
add
push
push
sub
ror
pop
push
push
lea
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
add
in
roll
add
xchg
cmpsl
sahf
leave
js
jge
push
je
lods
add
pusha
pushf
add
push
add
add
jo
xchg
test
mov
pop
popf
push
scas
scas
add
mov
loop
popf
js
add
fscale
pop
rcr
faddl
mov
add
add
pop
add
neg
insb
mov
lea
pop
push
push
shl
xor
shr
not
pop
push
push
ror
dec
xor
not
pop
testl
push
push
push
push
push
push
push
lea
push
lea
push
call
add
add
test
add
push
add
movsb
iret
push
mov
add
jns
stos
movl
int
cmc
jae
leave
in
add
push
aam
push
jle
add
add
add
add
stc
cmpsb
cltd
stc
mov
andb
pop
add
test
addb
movl
add
add
add
mov
lea
pop
addl
push
push
sub
inc
ror
pop
call
mov
push
shr
pop
pushl
push
not
pop
push
push
call
push
push
push
call
mov
xorb
add
rolb
cli
add
jbe
push
mov
mov
fadds
add
pop
hlt
popa
add
cltd
in
xchg
stos
jae
add
test
imul
test
add
cltd
testl
pop
jge
add
add
push
mov
outsl
add
fiadds
fwait
jo
lock
add
add
enter
pop
add
mov
jecxz
lret
add
pop
cmpl
jne
push
push
push
lea
push
lea
push
push
push
push
call
add
push
mov
add
add
add
pushf
add
loope
out
mov
add
add
mov
add
add
add
mov
add
add
add
sahf
bound
add
push
add
jbe
add
nop
add
nop
add
not
mov
sarb
rolb
add
pop
pop
push
xor
pop
pop
push
lea
pop
pop
pop
push
lea
push
push
lea
push
lea
push
lea
push
push
call
add
lahf
movsl
gs
add
movsb
add
jp
add
jle
add
pop
lahf
add
lea
mov
jb
add
mov
lret
cmpsb
andl
cmpsb
mov
add
rolb
repnz
xchg
add
mov
jle
filds
fisttpll
push
fs
add
add
push
roll
imul
add
add
mov
add
add
sahf
mov
lea
pop
leave
push
push
lea
push
push
push
call
imul
in
jle
add
rcl
lret
add
in
nop
fwait
ret
out
add
mov
add
add
add
mov
add
add
add
add
add
add
add
in
add
add
lock
cmc
sbbl
loope
les
clc
movsl
gs
mov
scas
imul
lea
pop
ret
push
shr
ror
lea
pop
push
push
push
push
push
lea
push
push
push
push
push
push
call
add
xchg
add
lahf
gs
mov
cli
add
les
test
push
jb
add
cli
nop
add
add
flds
push
add
add
add
add
add
imul
add
pop
jle
add
call
add
jb
nop
jae
sahf
add
add
mov
pusha
lret
push
int
enter
fildl
add
push
fmull
pop
mov
add
push
push
push
push
call
cmpsb
xchg
xlat
lds
out
shlb
aad
mov
mov
add
aad
mov
mov
jne
add
add
add
cmpb
add
add
jae
hlt
ret
out
add
loopne
shl
add
cmpsl
std
pop
mov
cwtl
push
pop
push
mov
shr
jbe
mov
lret
push
add
cmpsl
pop
jns
in
add
add
icebp
test
add
add
or
push
push
push
add
ror
not
dec
pop
push
push
lea
push
lea
push
push
push
call
cmc
add
jo
add
add
add
mov
cwtl
jb
outsl
mov
lahf
mov
out
fcomps
add
jle
push
add
fnstenv
add
mul
mov
ljmp
xchg
stos
add
add
add
lahf
mov
push
jge
add
add
sahf
add
jb
cmpsl
mov
add
pop
movl
push
call
push
push
push
push
push
push
push
call
fstpt
jo
add
pop
cmpsl
add
xchg
cli
jne
sarb
popa
add
fisubs
test
in
mov
add
add
jne
outsl
add
pushf
add
enter
addr16
jo
add
add
jmp
lock
xchg
add
add
out
xchg
push
jbe
lea
add
add
arpl
arpl
bound
push
push
sub
add
pop
call
push
push
lea
push
push
call
test
push
mov
add
xchg
add
cwtl
add
add
mov
add
rcrl
jno
add
scas
add
in
add
add
add
fnsave
xchg
add
add
leave
ja
rcrl
movsb
cld
in
testb
aam
mov
pop
iret
add
mov
add
out
in
mov
lea
pop
subl
push
inc
pop
cmpl
jne
pop
pop
push
lea
push
lea
push
push
push
push
push
push
call
std
out
add
cld
icebp
add
movsl
add
mov
mov
addr16
pop
clc
cld
roll
test
je
stc
out
mov
add
les
jecxz
jbe
add
pop
mov
out
lock
rcrb
add
lods
jmp
data16
push
push
push
iret
pusha
testb
mov
adcl
fwait
in
mov
lea
pop
pop
pop
push
lea
pop
leave
ret
push
push
xor
xor
sub
pop
mov
push
ror
rol
rol
pop
add
push
push
push
call
in
mov
add
test
add
add
pop
add
add
jle
bnd
mov
ja
push
push
adcb
add
jnp
test
mov
add
mov
xchg
lret
jbe
lods
fwait
popa
rcll
add
lea
pop
push
push
not
not
add
pop
push
push
push
push
push
push
push
lea
push
call
popa
ja
subl
in
push
add
arpl
ljmp
add
add
sahf
push
mov
xchg
add
push
scas
mov
add
mov
test
xchg
mov
stos
add
popf
add
pop
push
mov
xchg
xabort
cld
mov
jl
lods
je
mov
ret
lcall
add
lcall
add
add
scas
lock
add
mov
xchg
add
pop
push
mov
push
shr
pop
lea
push
lea
push
push
lea
push
lea
push
push
push
lea
push
call
xchg
mov
add
add
jge
orb
pop
pop
add
xchg
popf
stc
mov
fisubl
push
mov
add
fists
xlat
add
fstpl
push
add
add
cwtl
add
add
push
loop
jae
add
mov
movsb
add
mov
aam
pop
push
jno
stc
jbe
add
pop
sub
mov
shr
push
push
lea
push
push
push
push
push
push
push
call
ja
leave
add
add
add
mov
add
add
add
add
add
mov
mov
add
test
mov
add
clc
cmpsl
add
push
add
add
add
add
addl
pop
add
add
add
add
rclb
int3
lea
pop
add
mov
mov
push
push
lea
push
push
call
rcrb
jne
mov
out
pop
pop
add
add
add
lods
add
pop
mov
add
add
mov
add
iret
xchg
aam
add
js
pop
mov
fldl
mov
add
add
add
out
cli
iret
add
iret
add
add
pop
add
add
mov
push
lea
push
push
push
call
add
add
mulb
add
enter
xchg
xchg
sahf
xchg
sarb
jae
out
mov
add
add
add
in
incb
mov
add
test
enter
mov
add
outsl
les
int
enter
add
call
add
jmp
add
add
add
imul
scas
popf
add
int3
lea
pop
mov
push
add
pop
cmp
jne
cmp
jne
mov
push
sub
shr
pop
movl
jmp
push
lea
push
push
push
lea
push
push
push
push
push
call
jae
add
add
add
cwtl
scas
add
shrl
lock
add
cwtl
int3
xchg
out
add
jno
jge
xorb
fiadds
add
stc
ret
add
add
add
pop
lods
add
in
mov
cli
add
int
add
icebp
add
lock
fadd
cli
subl
mov
add
test
fildl
jnp
mov
lea
pop
mov
push
lea
push
push
push
push
lea
push
call
pop
movsl
add
shrb
pop
cli
add
imul
andb
fsubrs
cmpsb
out
stc
mov
loopne
add
imul
add
add
add
ja
add
jge
lcall
push
jp
add
add
loopne
add
outsl
add
add
push
movsl
cltd
jbe
sbb
mov
lea
pop
mov
sub
jne
mov
push
push
lea
push
push
push
call
test
sahf
add
add
ljmp
add
mov
mov
js
pusha
pop
jno
mov
add
jl
pop
add
add
popa
add
pop
pushf
ret
jle
push
cltd
jns
add
lea
lock
lahf
add
xchg
add
in
add
mov
jge
jnp
bound
mov
lea
pop
movl
push
add
inc
rol
pop
jmp
mov
push
shl
pop
mov
push
shr
rol
shr
pop
cmp
jne
mov
movl
push
push
push
lea
push
call
add
add
int3
xchg
outsl
fildl
jb
jle
nop
scas
add
in
jge
add
mov
push
ret
aam
mov
mov
jo
fadds
icebp
sbbb
mov
add
out
mov
add
insb
add
jge
add
scas
add
popa
add
jmp
adc
scas
or
cld
cmpw
jne
push
push
push
push
call
popf
mov
add
add
popf
add
add
jns
test
mov
add
and
in
add
add
push
jbe
pusha
mov
add
ror
pop
out
jmp
nop
nop
add
mov
add
call
clc
sarl
jne
xlat
add
add
test
add
add
add
adc
inc
adc
mov
push
push
push
call
add
add
push
add
add
jl
scas
nop
leave
aad
add
add
hlt
xchg
mov
xchg
pop
add
mov
cld
add
movsb
stos
xchg
fs
add
add
into
add
rolb
add
xlat
mov
movsb
mov
add
cltd
cli
cwtl
jp
mov
addl
jbe
add
mov
lea
pop
movl
jmp
pushl
push
lea
add
lea
pop
pop
push
inc
rol
shl
sub
pop
mov
mov
push
lea
push
push
push
call
push
lcall
add
add
add
movb
add
data16
add
cltd
add
add
mov
add
lret
aam
ret
fisubrl
add
xchg
xlat
add
add
cwtl
aad
test
mov
cmpsb
jns
cld
mov
out
add
out
gs
add
add
stos
sti
cli
add
xchg
add
add
pushf
add
add
add
add
push
data16
push
or
enter
sub
add
dec
push
or
inc
add
sub
lea
inc
pop
not
pop
push
add
pop
push
push
ror
shr
pop
call
cmpl
je
push
push
add
sub
push
sub
add
lea
dec
sub
shr
xor
pop
not
pop
push
pop
push
call
push
lea
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
mov
loop
fdivrs
add
xchg
add
add
cmpsl
add
mov
arpl
add
call
lods
add
mov
jne
js
movb
mul
pop
mov
add
xchg
pop
add
stos
add
add
mov
add
scas
add
jb
idiv
add
xchg
add
mov
xchg
pop
cmpl
je
push
push
sub
xor
lea
push
or
not
add
dec
xor
lea
sub
add
rol
lea
rol
pop
lea
sub
shl
inc
pop
push
lea
rol
pop
push
push
lea
push
push
push
push
push
push
lea
push
call
jnp
add
out
incb
filds
test
aam
sahf
add
push
lea
add
scas
add
sti
add
iret
add
add
cmc
push
add
jnp
add
clc
push
cli
fistpll
divl
fsubs
mov
add
jb
cli
fldl
mov
add
and
fildll
add
push
xor
inc
pop
cmpl
je
push
push
lea
lea
push
push
pop
add
inc
sub
inc
xor
not
not
pop
lea
dec
ror
pop
push
add
lea
shl
pop
push
call
cmpl
je
push
push
add
push
sub
add
xor
inc
sub
sub
xor
pop
add
shl
pop
push
lea
push
push
push
lea
push
lea
push
push
lea
push
call
add
fxch
push
mov
add
hlt
lds
test
sahf
fiaddl
add
bound
pop
push
test
jle
mov
jp
add
mov
pop
pop
xchg
lock
icebp
loope
push
aad
bnd
test
mov
add
fs
lock
add
add
add
mov
lea
pop
push
push
sub
inc
inc
pop
call
push
push
push
push
push
push
push
lea
push
push
push
call
xchg
add
add
loopne
add
aam
mov
ljmp
add
call
ja
mov
cmc
lret
in
add
mov
imul
add
add
add
add
add
pop
js
add
xchg
roll
jae
out
add
scas
js
popf
add
addb
mov
mov
add
ja
mov
lea
pop
cmpl
je
push
push
ror
xor
add
push
push
pop
add
xor
sub
sub
pop
add
not
shl
pop
push
push
call
pop
sbb
add
add
test
enter
iret
jmp
iret
pop
popa
push
clc
mov
mov
loopne
add
jne
popf
add
xchg
fildl
jge
add
aad
loopne
mov
xchg
add
les
add
jecxz
aad
std
add
xchg
add
add
test
add
hlt
lea
pop
push
call
cmpl
je
push
push
inc
lea
push
and
add
lea
sub
xor
sub
add
pop
shr
inc
add
pop
push
lea
push
lea
push
push
push
lea
push
push
push
call
mov
out
add
add
add
add
xchg
mov
add
test
mov
add
xchg
addr16
imul
faddl
arpl
fs
fs
fsubr
add
add
lea
cmpb
sti
add
add
add
add
add
shl
mov
push
add
addb
push
movsl
mov
lea
pop
push
push
rol
xor
pop
call
cmpl
je
push
push
dec
not
add
add
push
or
not
add
not
xor
sub
sub
add
sub
pop
sub
sub
dec
pop
push
shl
dec
pop
push
push
lea
push
call
out
xlat
stc
xchg
pop
add
clc
pop
ffree
add
xchg
loop
push
add
jmp
jns
mov
sti
fwait
add
ret
out
mov
push
add
add
add
push
call
arpl
rolb
add
jne
mov
sti
add
add
push
add
add
add
add
clc
mov
mov
add
mov
add
outsl
jo
xchg
into
mov
lea
pop
call
push
lea
push
push
lea
push
push
push
push
push
call
mov
cmc
ror
xlat
cli
lret
hlt
add
scas
fst
shlb
pop
out
push
fldl
std
pop
add
fcoml
add
add
test
loopne
int
rcrb
enter
pushf
fiadds
add
mov
call
aam
pop
add
add
add
pop
mov
pusha
les
pop
fadds
shll
add
idiv
xchg
stos
nop
add
lea
pop
cmpl
je
push
push
dec
sub
sub
push
sub
add
add
xor
sub
ror
pop
shl
pop
push
push
lea
push
push
push
push
lea
push
push
push
call
imul
add
add
add
out
ficomps
add
add
add
in
cli
aam
add
add
pop
mov
ficoms
push
sti
test
mov
add
add
mov
add
add
add
mov
bound
add
push
scas
movsb
add
pusha
and
push
call
cmpl
je
push
push
add
lea
shr
push
sub
add
sub
sub
sub
inc
shl
pop
sub
rol
shr
pop
push
push
push
push
push
lea
push
call
popa
nop
xorb
add
popa
add
js
add
leave
in
shll
add
nop
sahf
out
pop
outsl
add
mov
xchg
lds
add
add
vpsadbw
mov
loopne
loop
pop
data16
xacquire
add
nop
rcrb
cli
or
add
add
push
out
add
iret
stos
mov
ret
imul
arpl
pop
push
push
add
pop
call
push
rol
sub
pop
cmpl
je
push
push
inc
rol
sub
shl
push
or
not
add
not
sub
rol
sub
add
pop
add
sub
xor
pop
push
lea
push
push
push
push
push
push
push
push
push
call
int
mov
add
test
add
jae
bound
add
xchg
fists
mul
xchg
icebp
mov
mov
into
xchg
add
imul
loopne
add
lods
jno
add
cmpsb
std
add
movsb
in
addl
add
add
data16
xlat
jo
ret
in
push
add
mov
add
add
addb
stos
add
pop
push
call
cmpl
je
push
push
sub
sub
push
or
inc
add
shr
shr
shl
sub
shr
pop
shl
rol
pop
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
add
add
fs
pop
les
add
push
add
add
add
add
mov
xchg
iret
push
test
add
mov
add
lcall
lods
mov
pushf
add
add
add
icebp
push
jle
lock
ficoms
lock
pop
add
add
add
outsl
push
mov
lea
pop
push
push
lea
pop
call
cmpl
je
push
push
push
and
add
sub
sub
dec
ror
sub
pop
lea
sub
pop
push
add
xor
dec
pop
push
push
not
pop
call
cmpl
jne
push
rol
shl
pop
mov
push
push
push
lea
push
push
push
push
call
mov
add
scas
mov
fstpl
add
xchg
add
mov
stos
faddl
add
movsl
add
mov
clc
add
push
pop
movsl
fmulp
add
test
pop
pop
add
mov
add
ret
mov
add
add
push
incb
push
add
add
add
enter
mov
pop
add
add
mov
lea
pop
movl
jmp
push
push
push
push
push
lea
push
push
lea
push
push
call
add
add
add
incb
out
shlb
aam
add
push
add
jp
add
lcall
add
fs
out
jns
jno
sti
add
scas
stc
add
std
data16
add
mov
fwait
subb
add
jge
mov
mov
lea
pop
xor
push
shl
rol
shl
pop
pop
push
sub
pop
pop
push
add
xor
not
lea
pop
pop
push
lea
pop
pop
leave
ret
push
sub
sub
pop
push
mov
push
ror
pop
add
push
push
push
push
push
push
push
lea
push
call
add
xchg
add
add
stos
add
sahf
roll
push
jae
pusha
movb
pop
add
add
add
add
mov
jle
add
cmpsl
fiaddl
ret
pop
test
mov
add
insb
add
add
add
pop
add
add
add
add
add
aam
add
lea
mov
lea
pop
cmpl
jne
push
push
shr
shl
shr
push
push
pop
add
sub
ror
add
shl
not
pop
inc
dec
pop
push
rol
add
rol
pop
pushl
call
push
lea
add
pop
push
push
push
push
push
push
push
push
push
push
call
add
stc
add
add
add
push
push
add
test
pop
add
add
outsl
out
jne
out
fidivs
add
pop
mov
scas
aad
popa
fwait
add
ja
add
add
add
out
add
mov
jae
mov
add
add
add
mov
add
sti
add
add
pop
fildl
add
add
add
rorl
call
push
ror
sub
inc
ror
pop
jmp
push
push
push
lea
push
call
add
jo
mov
test
push
sti
add
add
add
popf
mov
add
fsubrs
fiadds
in
leave
add
scas
push
out
add
faddl
add
in
add
testb
addr16
add
aad
add
jb
xchg
mov
jnp
add
add
out
add
mov
pop
addb
pushf
push
fs
add
movsb
push
pop
add
mov
add
adc
jge
add
test
jge
add
add
push
push
call
gs
add
add
jmp
clc
in
push
xchg
test
add
add
add
add
lea
mov
push
add
add
xchg
jnp
mov
add
jno
add
shll
int3
add
out
push
add
pop
xchg
add
jae
cwtl
call
add
lock
xchg
std
sahf
add
mov
lea
pop
leave
push
push
push
push
push
push
call
flds
jmp
add
add
std
loope
fbld
add
in
in
cmpsl
add
add
add
add
add
jns
add
push
fcoml
jecxz
mov
add
add
add
add
push
push
mov
icebp
add
insb
std
mov
lea
pop
add
push
push
push
push
call
push
xchg
add
hlt
add
mov
stos
iret
add
mov
xorl
add
cmpsb
jbe
add
add
add
addl
std
add
lcall
hlt
test
add
shrb
add
addb
int
jge
add
add
add
add
jb
mov
add
mov
add
mov
lea
pop
pop
pop
pop
push
lea
push
call
jge
jmp
add
add
pop
pop
aam
lret
mov
addl
add
push
clc
add
jo
xchg
pusha
hlt
lret
mov
add
xchg
ljmp
in
int3
mov
int3
jmp
lea
cmc
imul
push
add
add
leave
mov
add
add
fcmovb
imul
jge
enter
pop
add
add
fdivs
add
add
mov
lea
pop
pop
push
push
push
lea
push
push
push
call
test
add
push
mov
stc
add
add
push
movl
add
lahf
pop
add
lea
add
movsl
mov
jne
push
add
add
rol
out
add
scas
add
add
aad
mov
add
add
hlt
add
pop
icebp
cwtl
mov
add
mov
lcall
stc
add
test
sbb
push
add
inc
pop
add
push
add
add
pop
ret
jmp
push
inc
pop
cmpl
jne
push
push
add
not
sub
push
push
pop
add
shr
shr
sub
add
rol
pop
dec
pop
push
dec
rol
xor
pop
pushl
call
push
push
push
push
lea
push
push
push
lea
push
call
add
jl
mov
jbe
add
je
push
pop
add
popf
add
bnd
pop
hlt
add
add
add
mov
imul
add
add
addl
into
popa
mov
jp
lds
add
add
add
lret
popa
push
mov
add
jo
add
fbstp
mov
xchg
addb
add
add
push
leave
test
enter
mov
lea
pop
call
jmp
push
push
lea
push
push
push
push
push
push
push
call
pop
arpl
ljmp
mov
push
adc
add
addb
pop
lock
add
push
add
lds
rorl
xchg
add
add
cmc
cmc
mov
into
call
flds
mov
add
add
add
cmc
add
lahf
in
loope
test
iret
add
jne
add
lcall
add
mov
jecxz
clc
mov
lea
pop
cmpl
jne
mov
mov
push
push
call
mov
jle
movsb
xchg
decb
pop
rclb
add
add
add
mov
aam
add
mov
cltd
add
add
add
hlt
loop
rcrl
js
xchg
add
cwtl
pop
add
add
mov
cmpsl
test
xchg
out
push
hlt
add
add
adc
mov
lea
pop
jmp
push
push
pop
pop
push
push
push
push
push
push
push
lea
push
call
add
cwtl
stos
loop
add
scas
testl
cld
add
shrb
add
icebp
lcall
add
add
xlat
add
lahf
scas
mov
cltd
mov
lret
addr16
add
movsb
pop
mov
sbbb
push
mov
cltd
mov
pop
mov
add
fs
xchg
add
sarb
xchg
iret
mov
lea
pop
dec
jne
push
inc
pop
call
push
sub
pop
jmp
call
push
push
shl
not
rol
push
xor
add
add
dec
sub
xor
add
rol
pop
add
shl
lea
pop
push
pop
pushl
call
push
push
push
lea
push
call
ljmp
add
jne
xlat
add
loop
add
add
mov
add
add
mov
hlt
add
add
add
add
mov
roll
pop
test
mov
xchg
jmp
add
movsb
add
add
add
add
add
add
add
add
cmc
mov
add
add
pop
call
push
push
lea
push
push
lea
push
push
lea
push
lea
push
push
push
call
scas
out
arpl
add
add
cld
add
sti
jge
addb
sbbl
out
data16
add
add
add
jecxz
lods
movsl
pop
push
imul
add
add
add
jbe
add
add
xchg
jno
add
mov
add
in
add
test
int3
add
add
rcrl
mov
mov
xchg
stos
xchg
std
add
mov
mov
lea
pop
mov
lea
push
push
sub
xor
rol
push
sub
add
sub
xor
not
xor
pop
lea
pop
push
push
call
sar
add
push
repnz
add
add
add
test
push
ljmp
int
stos
jmp
add
add
add
add
in
xchg
add
mov
fsub
add
test
add
push
les
out
add
add
push
icebp
pusha
add
add
stc
mov
lea
pop
pushl
call
push
push
sub
xor
add
pop
call
push
push
shr
sub
push
push
pop
add
xor
add
add
sub
sub
pop
shr
shl
pop
push
not
lea
shr
pop
pushl
call
call
push
lea
push
push
push
call
pusha
fidivs
int3
add
mov
add
mov
push
test
cmpsl
mov
add
add
fmuls
ret
mov
add
out
add
add
js
movsl
add
add
test
add
add
nop
jp
push
sahf
add
add
bound
lea
pop
mov
lea
push
push
add
shl
xor
rol
push
push
pop
add
inc
not
xor
sub
sub
shr
shl
pop
shl
inc
lea
pop
push
add
xor
pop
pushl
call
push
sub
shr
add
pop
lea
push
sub
lea
pop
push
push
push
push
pop
pushl
push
push
push
or
not
add
sub
dec
sub
pop
add
shr
pop
push
ror
shl
not
pop
push
call
push
push
shl
push
push
pop
add
shl
lea
sub
ror
lea
not
dec
pop
xor
sub
dec
pop
push
push
push
push
push
push
push
call
call
add
xlat
mov
mov
test
test
sti
add
add
add
add
add
out
lret
add
jle
add
lock
testb
add
data16
add
aad
add
jne
add
add
jmp
mov
mov
add
jno
shll
lea
pop
pushl
push
push
call
in
jo
pop
mov
insb
cmpsl
out
bound
stos
add
xchg
mov
movsb
gs
jo
fadds
add
icebp
add
lods
add
flds
pop
mov
lods
scas
lock
lods
push
fwait
add
arpl
je
mov
outsl
xchg
add
jno
lret
jno
add
jmp
testb
mov
add
pop
add
or
push
adc
add
mov
add
or
pop
lea
push
push
push
lea
push
push
call
in
add
pop
popf
test
mov
or
add
add
fwait
stos
add
add
add
stc
outsl
add
add
movsl
add
addl
jp
add
add
mov
add
iret
orb
add
add
add
add
les
mov
shrb
test
jle
mov
lea
pop
push
call
push
push
sub
not
push
xor
add
xor
sub
lea
shl
pop
add
sub
dec
pop
push
shr
pop
pushl
push
not
not
pop
call
push
shl
rol
pop
call
jmp
push
inc
pop
pushl
mov
jmp
push
push
dec
push
or
inc
add
dec
shr
inc
sub
add
not
lea
sub
pop
dec
ror
pop
push
not
rol
add
pop
pushl
push
shr
pop
call
push
push
push
call
add
add
scas
cmpsb
mov
xchg
ja
lods
mov
into
mov
sahf
add
mov
fcmove
iret
mov
jo
test
jno
lds
addl
add
ljmp
mov
add
add
xchg
add
add
add
pushf
out
add
jecxz
mov
add
add
addl
test
mov
lea
pop
call
push
push
not
shl
ror
push
and
add
inc
inc
rol
sub
add
pop
sub
pop
pushl
push
lea
push
push
push
push
call
add
scas
mov
add
fildl
add
add
add
jle
add
std
push
ja
add
iret
mov
fstl
pop
scas
jge
call
add
add
icebp
jo
loop
popf
add
jmp
add
add
add
movsb
add
add
xchg
add
movb
insb
imul
add
clc
add
or
add
xchg
push
pop
jp
mov
mov
movsl
mov
lea
pop
call
push
rol
sub
sub
pop
push
call
leave
push
rol
rol
dec
pop
add
push
shl
shl
rol
rol
pop
pop
push
lea
push
push
push
call
fildl
add
iret
mov
add
mov
js
add
faddl
add
cld
add
push
add
movsb
add
aad
loop
mov
mov
add
lods
cld
push
add
jmp
data16
mov
push
push
lret
add
mov
loope
movsb
ficoms
jnp
test
imul
pop
push
add
pop
pop
push
push
push
push
push
push
lea
push
call
mov
les
jo
pop
data16
stos
test
fidivs
in
movsl
jno
fmul
pushf
xchg
addr16
lods
mov
add
xchg
push
fcomps
add
cli
lret
fisubrl
mov
cld
mov
mov
loop
pop
into
std
popf
add
jecxz
outsl
xchg
jl
andl
lea
add
imul
pop
push
add
pop
leave
add
ret
push
sub
pop
leave
ret
push
push
push
push
push
push
push
lea
push
push
push
call
rolb
add
add
add
add
mov
add
add
mov
add
popf
outsl
lret
call
scas
add
add
repnz
out
add
jecxz
mov
fwait
insb
mov
add
add
stos
add
lret
mov
xchg
roll
add
js
mov
orl
jge
add
test
add
add
ja
push
call
mov
add
xchg
movsl
scas
nop
add
cltd
test
fwait
add
add
add
add
jmp
addl
hlt
je
add
pop
mov
icebp
add
push
flds
loope
faddl
test
pop
scas
ljmp
test
add
scas
add
lahf
aam
add
add
leave
out
add
mov
lea
pop
mov
push
push
push
push
push
push
push
lea
push
call
sti
add
add
jmp
gs
add
pop
add
xchg
push
jecxz
movsl
imul
lcall
fldl
add
add
add
add
xchg
bnd
rolb
push
cwtl
cwtl
cmpsb
testb
mov
scas
aam
add
sarl
add
lock
add
ljmp
add
add
add
sbbb
pop
jmp
mov
and
push
pop
xor
push
ror
rol
pop
xor
add
push
lea
push
push
call
add
add
rclb
xchg
lret
lret
insb
add
add
add
fiaddl
push
add
jne
add
add
jle
jnp
add
in
lret
add
fdivrp
add
xchg
add
je
ljmp
js
aad
add
addr16
in
mov
mov
pop
pusha
xchg
faddl
jnp
add
pop
xor
push
push
push
call
jb
test
xchg
add
pop
nop
xchg
add
mov
jbe
mov
call
push
add
jo
add
jbe
sahf
cmc
sahf
mov
adcl
add
pop
jp
add
imul
loop
add
add
pushf
adcl
add
loopne
add
add
bound
dec
sub
jmp
push
shr
pop
sub
push
rol
pop
pushl
pop
push
push
lea
push
push
push
push
push
lea
push
call
mov
in
mov
add
push
cltd
jmp
add
add
bound
add
imul
xchg
mov
xchg
add
add
add
lret
int3
test
bound
out
hlt
mov
add
testl
add
push
fadds
push
bound
pop
rorb
pop
sub
cmp
jne
mov
push
lea
push
push
push
push
call
insb
stos
add
rolb
add
add
add
fimuls
flds
add
into
jmp
mov
test
stos
add
outsl
add
lret
aam
filds
add
add
fs
add
jno
clc
add
mov
xchg
out
add
add
add
add
xchg
mov
add
in
add
add
add
add
push
fwait
xchg
xchg
pop
lea
sub
mov
push
xor
sub
shl
pop
shr
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
add
add
add
shrl
add
xchg
mov
xchg
addl
into
ror
push
mov
aad
add
loop
cmc
cwtl
loop
lods
jbe
fldl
mov
fwait
mov
cmpsl
add
cltd
mov
add
add
pusha
add
mov
iret
add
add
mov
nop
add
push
add
fsubr
mov
arpl
add
sub
push
not
pop
pushl
push
lea
push
call
arpl
sti
jl
insb
cmpsb
rolb
add
pop
mov
add
add
mov
mov
imul
add
mov
mov
xlat
xchg
jecxz
lret
into
add
add
add
faddl
flds
add
test
loopne
ret
push
ret
scas
loopne
add
push
bound
add
bound
jmp
xchg
add
roll
cwtl
jp
add
cwtl
cmc
add
add
mov
lea
pop
pop
shr
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
pop
add
flds
gs
out
mov
add
lods
cli
pop
add
cwtl
mov
add
add
add
add
stc
aad
cmpsb
add
js
add
add
icebp
lods
add
add
mov
pushf
add
push
cli
add
fldl
add
add
jbe
hlt
lea
pop
and
sub
cmp
jne
push
dec
shr
ror
pop
leave
push
sub
sub
add
pop
ret
push
push
push
call
jp
jle
loope
add
xchg
lock
addb
add
movsb
int
js
add
add
add
arpl
jns
fldl
ljmp
add
cmpsl
movsl
ljmp
add
pusha
add
add
je
add
leave
scas
roll
add
add
je
add
add
stos
lret
add
out
add
cli
add
std
lcall
sahf
jo
add
mov
add
mov
lea
pop
mov
push
push
lea
push
push
call
xchg
in
add
add
add
add
add
pushf
mov
std
add
out
jbe
add
add
aad
add
test
add
int3
jne
nop
subl
iret
loop
add
rorb
cli
add
add
test
add
stos
push
add
stos
add
data16
add
sarb
in
jmp
add
lea
pop
add
push
lea
push
push
push
push
push
push
push
lea
push
push
call
xlat
add
xchg
add
lret
add
add
add
add
push
add
in
cmpsl
mov
add
add
lret
mov
add
nop
mov
jne
loopne
lcall
roll
call
add
pop
call
jae
cmc
add
push
add
add
movsb
js
mov
pop
lret
add
je
fisubs
add
pop
push
push
push
push
push
push
lea
push
lea
push
push
push
push
call
push
mov
stos
lock
lret
lret
add
mov
movsl
jne
shr
add
cmpsl
add
in
ret
mov
call
add
push
mov
add
mov
push
lret
mov
xorb
popf
add
icebp
js
lds
xchg
faddl
lock
jge
jmp
pop
lcall
add
add
pop
fists
stos
pusha
add
add
icebp
add
pop
push
push
sub
ror
add
pop
push
push
push
lea
push
push
lea
push
push
push
lea
push
lea
push
call
pop
out
push
add
add
add
add
lea
lret
jne
sahf
movb
xchg
add
out
lcall
data16
popa
add
add
scas
add
add
add
cmc
add
add
jle
mov
stos
movl
add
add
add
rclb
testb
pop
mov
lea
pop
push
push
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
push
sbbb
fcoms
add
add
out
mov
imul
mov
xchg
call
into
call
add
xlat
shl
pop
stc
xchg
add
mov
addr16
loop
imul
add
test
in
add
movsl
add
mov
add
jbe
fdivs
mov
add
lcall
mov
lea
push
sub
pop
sub
mov
push
lea
push
push
push
push
call
lret
jmp
bound
jecxz
sarb
sahf
repnz
mov
add
imul
addb
add
call
arpl
add
test
add
add
add
out
add
push
fwait
ja
ljmp
icebp
loope
add
subb
add
mov
int3
lea
pop
shr
push
push
lea
push
push
lea
push
push
call
xchg
fldl
push
mov
add
add
idiv
or
add
pop
add
add
add
stos
add
add
jnp
add
int3
add
add
push
add
add
mov
loopne
mov
push
jns
add
stos
roll
repnz
add
jmp
lret
add
add
jae
pop
fbstp
popa
sar
add
out
xchg
fcomp
jo
push
add
add
data16
fimull
add
js
ss
lea
push
lea
push
call
xchg
push
insb
add
mul
out
popf
add
mov
add
jp
push
push
icebp
jae
out
add
sbbb
add
add
mulb
test
jp
xchg
mov
jne
popf
add
mov
mov
bound
fwait
mov
add
fcmovnu
data16
jnp
push
idiv
pop
jmp
rcll
into
add
flds
xchg
jb
mov
add
lret
add
mov
lea
pop
add
push
ror
pop
mov
add
push
lea
push
lea
push
push
push
call
jae
add
add
iret
add
movsb
out
mov
add
shl
incb
add
mov
add
add
jmp
in
roll
leave
add
add
pop
pop
add
add
mov
stc
pop
add
mov
call
mov
mov
add
repnz
add
add
mov
add
movsb
aam
loop
test
scas
add
leave
mov
lea
pop
xor
mov
and
push
sub
add
rol
pop
call
push
add
inc
pop
add
push
push
lea
push
push
push
push
push
push
call
add
lret
add
loopne
add
stos
jne
scas
addl
iret
add
xchg
jmp
mov
push
add
arpl
shrb
jae
jle
movsl
add
data16
rcl
addl
add
push
std
std
add
jge
les
add
add
in
add
pop
jl
addr16
push
push
mov
add
add
pop
add
enter
mov
les
inc
or
test
adc
jnp
add
test
shl
dec
pop
xor
pop
push
add
shl
pop
pop
pop
pop
push
push
push
call
add
pusha
test
add
jns
cltd
out
add
mov
pop
add
jno
push
add
jmp
add
test
mov
arpl
ja
sbb
lock
add
mov
add
xlat
jne
mov
jmp
movsl
mov
fwait
add
add
pushf
fadds
gs
mov
lea
pop
pop
leave
ret
push
add
not
pop
mov
push
push
push
push
lea
push
push
call
ljmp
add
jno
add
fcmovbe
mov
fisttpl
add
loope
loope
addl
add
jl
test
add
cmpsb
add
pop
push
call
repnz
add
add
cld
add
call
mov
add
add
add
add
add
rolb
insb
add
add
sbbl
in
popa
xchg
jne
fimuls
pop
add
push
push
shl
lea
pop
push
push
ror
ror
dec
dec
pop
pop
pop
push
rol
add
ror
sub
pop
mov
push
shl
add
add
pop
push
push
push
push
lea
push
push
call
add
out
add
jae
test
push
popf
gs
pop
fdivrl
add
loop
add
add
add
sub
add
mov
xchg
loope
add
mov
testb
imul
xchg
pop
les
add
js
add
xchg
jo
loope
cmpsl
cmc
jbe
push
add
xchg
test
add
test
mov
lea
pop
call
push
lea
push
call
loope
pop
add
lcall
add
movsl
imul
push
jmp
add
add
mov
push
push
leave
in
add
add
add
add
stc
mov
add
lds
cwtl
add
out
mov
add
xchg
cmpsl
jo
push
jbe
add
hlt
add
add
add
scas
mov
lret
jge
push
test
subb
mov
arpl
pop
xor
pop
pop
push
push
push
push
push
push
push
call
lret
les
fdivp
test
add
cwtl
data16
add
lcall
imul
sarl
xchg
stc
call
fs
add
mov
mov
xchg
add
add
add
mov
add
rol
cmpsl
sahf
xchg
je
add
pop
mov
add
add
js
cli
fs
add
pop
pop
pop
push
shl
sub
shl
pop
pop
leave
ret
push
push
call
lret
jnp
pop
xchg
add
mov
mov
mov
arpl
out
jno
loopne
into
fdivrs
lods
addl
enter
add
push
xorb
testb
lret
add
icebp
add
data16
data16
enter
add
add
pop
mov
lea
pop
push
mov
push
lea
sub
add
pop
add
push
push
push
sub
shl
pop
push
push
push
push
lea
push
lea
push
call
fdiv
pop
pop
fadds
mov
popa
jo
mov
add
jne
push
nop
pop
xchg
add
add
mov
lea
negl
call
mov
jmp
add
mov
xlat
add
fs
add
push
loopne
add
popf
enter
testb
popl
lahf
fildl
add
pusha
mov
xor
addl
add
xchg
popf
add
add
add
mov
lea
pop
mov
push
pop
push
push
push
push
push
push
push
push
call
add
mov
mov
push
add
mov
add
add
add
test
cltd
add
cmc
xlat
mov
addl
xchg
push
pop
jl
mov
clc
out
xorb
mov
add
add
lock
pop
test
jle
in
add
pop
add
pop
lea
sub
mov
push
push
lea
push
push
push
push
push
lea
push
call
fs
add
push
mov
add
add
jno
add
incb
add
add
mov
add
add
cltd
scas
lock
add
scas
std
mov
bnd
add
mov
in
xchg
add
fnsave
add
add
add
int3
lea
pop
shr
push
push
push
push
push
call
loope
mov
mov
push
xchg
fiaddl
add
add
add
xlat
add
xchg
jle
popa
add
lods
add
lret
xchg
jno
pop
add
loopne
pusha
add
add
imul
rorb
fmulp
cli
add
jbe
lcall
add
add
mov
push
js
add
pop
subb
mov
cwtl
jno
imul
cld
lea
pop
add
push
push
push
push
push
push
push
push
call
pop
add
pop
add
push
jnp
add
mov
xchg
in
add
jge
add
add
xchg
add
add
jno
addb
add
lret
add
stc
frstor
add
cmpsl
jge
aad
imul
stos
add
aam
movsb
mov
shl
rolb
call
mov
lea
pop
mov
push
push
lea
push
call
popw
add
xchg
out
insb
fldl
addl
add
pusha
add
add
xchg
push
jle
arpl
jle
add
add
cmc
movsl
xlat
cmc
add
xchg
test
push
jp
add
jno
mov
imul
lods
addr16
test
jp
mov
push
mov
add
pop
add
push
push
call
push
add
add
sahf
mov
imul
lds
pop
lods
movsl
add
int3
incb
add
add
push
add
cld
sti
out
push
mov
add
add
fwait
mov
add
add
push
add
add
mov
add
xchg
xchg
lock
sahf
fsts
mov
add
addl
divb
hlt
lea
pop
pushl
push
add
shl
pop
popl
mov
push
dec
add
pop
add
xor
push
shr
not
pop
lea
push
push
call
pop
pushf
fildl
cwtl
data16
lret
add
add
mov
mov
test
add
add
add
jbe
movsl
pop
add
fdivr
add
xchg
push
mov
add
loop
add
fxam
subl
arpl
mov
pusha
add
add
scas
mov
add
pop
mov
add
xor
push
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
mov
add
jmp
xchg
jo
filds
movl
add
add
add
add
add
add
add
add
cmpsb
add
jno
add
add
mov
jmp
add
add
mov
add
jecxz
int
cld
lea
pop
call
push
push
lea
push
call
pop
add
pop
add
fucomp
add
lret
push
shr
cmc
add
lea
lods
add
xchg
add
xchg
add
add
add
popa
mov
fdivrp
lods
add
pop
out
xchg
mov
movsb
add
add
lods
fildll
xchg
add
add
pop
rcr
in
add
out
add
mov
lret
add
add
arpl
add
push
shl
pop
nop
push
lea
shl
pop
nop
cmp
je
nop
push
push
lea
push
call
jmp
out
push
jmp
stc
cmc
mov
fildl
loope
movsl
aad
add
sahf
add
add
add
add
push
outsl
add
jae
mov
push
add
push
add
shrb
add
add
jle
add
filds
loop
push
popa
icebp
xchg
pusha
add
imul
mov
lea
pop
nop
inc
push
lea
push
push
push
push
push
push
push
push
push
call
add
add
idivl
add
iret
add
jle
mov
stos
rcrl
push
add
add
stc
lcall
add
mov
add
imul
add
popa
add
adcl
xchg
add
mov
mov
lea
pop
nop
nop
push
lea
push
push
lea
push
push
push
push
push
call
mov
add
notl
add
in
add
data16
add
add
add
fs
out
add
iret
mov
add
mov
jecxz
xlat
mov
push
push
in
jle
add
jnp
add
mov
aam
mov
add
add
leave
mov
fwait
outsl
push
mov
lret
rorb
cmp
jb
xor
push
not
lea
sub
ror
pop
jmp
push
add
sub
pop
mov
add
movzwl
push
push
push
push
lea
push
push
push
push
call
popf
sahf
jbe
mov
lods
lds
add
add
add
push
add
mov
add
xchg
add
cmc
pop
add
mov
xchg
xchg
add
lret
lock
rolb
push
add
mov
jl
add
scas
in
push
add
mov
lea
pop
mov
push
not
add
pop
add
push
push
push
push
push
push
push
push
push
call
pop
bound
add
mov
pop
fnstsw
jge
add
into
jecxz
jle
test
mov
cmc
rcrl
add
jmp
add
roll
mov
jecxz
add
add
fdivrs
pushf
add
add
add
enter
add
add
pusha
add
mov
lea
pop
mov
push
push
call
stc
add
mov
movsl
add
jns
call
add
jmp
add
mov
add
mov
mov
out
add
add
mov
jo
mov
add
add
lds
movb
lahf
mov
xchg
add
mov
cmpsl
add
loopne
leave
stos
fld
in
add
mov
cmc
lcall
jle
outsl
add
xchg
add
lret
add
hlt
xchg
pop
xor
push
push
call
int
xchg
add
add
mov
nop
int3
test
notb
scas
mov
xchg
lock
mov
mov
add
mov
fsubrp
mov
lcall
add
add
mov
lcall
iret
into
add
mov
out
test
int
add
add
mov
add
pop
add
scas
push
mov
xchg
mov
lea
pop
xor
push
xor
dec
pop
shl
xor
shl
push
push
call
mov
addr16
add
fldl
out
add
push
js
out
add
add
data16
fldenv
pop
adcl
add
jne
add
mov
push
add
mov
xlat
in
les
add
xchg
mov
add
iret
push
loop
add
jae
xchg
add
add
add
fimuls
pop
xor
shl
push
lea
pop
xor
mov
add
push
inc
add
pop
pop
pop
pop
push
lea
shl
ror
pop
pop
leave
push
lea
inc
pop
ret
push
xor
add
pop
push
mov
push
push
push
push
lea
push
call
add
add
into
jnp
mov
jmp
out
pop
xchg
add
mov
into
cld
add
mov
add
add
fadd
fists
shl
hlt
jb
add
out
add
cmp
jo
imul
pop
shll
add
xchg
cwtl
mov
loope
add
mov
lea
pop
push
push
push
dec
lea
pop
push
push
mov
push
xor
pop
mov
push
lea
push
push
push
push
push
push
lea
push
push
call
add
cmpsb
add
jp
add
lret
icebp
xchg
jl
xchg
mul
add
stos
in
mov
cli
jnp
add
lret
cmc
add
add
add
stc
out
out
add
in
pop
cli
mov
add
lea
add
add
pop
roll
add
add
add
insb
add
pop
mov
test
je
push
add
lea
add
not
pop
mov
push
push
push
push
call
add
fnsave
loopne
add
jecxz
mov
addl
jl
lret
cltd
popa
std
add
add
lahf
add
hlt
cli
add
push
aad
leave
push
rolb
int3
pushf
add
add
add
rolb
add
cli
test
roll
jae
jecxz
aam
xchg
pop
out
ljmp
add
push
pop
add
repnz
lea
pop
test
je
mov
mov
push
sub
not
pop
mov
push
add
sub
pop
inc
cmp
je
test
je
push
push
call
add
add
arpl
mov
xchg
add
mov
insb
add
add
add
add
enter
call
jl
test
add
stos
sahf
stos
add
jno
lahf
ljmp
add
je
add
rol
add
ret
add
test
addl
jecxz
mov
jne
popa
mov
add
add
mov
lea
pop
mov
push
dec
shl
pop
inc
push
lea
push
push
push
lea
push
call
scas
mov
mov
call
add
mov
je
mov
xchg
mov
xchg
add
fwait
xchg
pop
add
add
pop
mov
pushf
jge
add
add
andl
add
add
add
add
ret
add
insb
movsb
add
add
lea
pop
cmp
je
test
jne
xor
push
push
lea
push
lea
push
call
add
add
aam
lret
add
xchg
xchg
xchg
add
add
lds
add
xlat
add
jnp
push
ja
add
add
into
push
stos
mov
add
cmc
add
ret
movsl
add
pop
pop
add
add
add
add
jns
pop
jp
add
pop
test
insb
cli
mov
nop
add
jb
jno
add
add
add
push
push
xchg
add
mov
jmp
add
pop
pop
pop
pop
push
push
push
lea
push
call
mov
mov
add
mulb
mov
xchg
int3
add
add
mov
test
testb
add
jb
addr16
add
add
pushf
int3
jo
add
ja
data16
in
jne
mov
add
jne
xchg
jge
add
out
add
pop
add
arpl
xchg
cmpsl
xchg
mov
cwtl
imul
mov
lea
pop
pop
leave
push
lea
push
push
push
call
add
add
xlat
shrl
mov
stos
xchg
push
add
add
jge
add
int3
enter
cmc
data16
add
call
add
subb
mov
add
mov
add
out
addr16
push
add
jnp
add
add
pop
add
mov
lea
pop
ret
push
sub
not
pop
mov
inc
push
lea
push
lea
push
push
push
push
push
push
call
add
in
add
std
add
xchg
add
add
add
int
add
add
jmp
leave
fildl
add
mov
mov
add
add
add
add
jge
pop
into
imull
pop
gs
mov
in
popf
je
pop
lea
xchg
mov
lea
pop
cmp
jne
lea
push
push
push
call
add
popf
fsubrs
add
jne
add
mov
cltd
add
xchg
loope
test
add
rcll
enter
fdivrs
add
out
add
ljmp
add
shrl
stos
add
xchg
mov
add
push
mov
add
mov
arpl
jo
fldenv
cld
lea
pop
mov
push
dec
inc
pop
test
je
push
shr
pop
mov
push
push
push
call
pop
imul
lea
push
icebp
lret
fldl
int3
jmp
bound
enter
add
vprotd
xchg
in
lcall
add
call
rclb
pop
add
add
test
add
mov
add
mov
mov
cli
call
stc
add
add
push
pop
je
add
add
or
add
cmp
jne
push
push
push
push
push
call
mov
ljmp
add
add
mov
pop
subb
lea
xchg
incb
add
jge
into
lea
jb
mov
aam
pop
lahf
add
jge
push
jb
mov
pop
add
add
add
lds
mov
add
jecxz
into
add
leave
add
adc
mov
push
push
push
lea
push
push
call
mov
rcrl
mov
push
cld
cmpsl
insb
jecxz
call
add
jp
add
fstpt
add
add
mov
leave
lods
test
in
pop
xchg
add
add
add
add
loop
sbbl
mov
lretw
add
mov
push
xchg
add
add
jb
add
imul
stc
mov
pop
test
je
push
lea
push
push
push
call
add
add
jp
into
add
xlat
mov
mov
add
and
mov
lret
jge
add
mov
add
add
xchg
add
iret
add
add
clc
arpl
ret
mov
add
push
mov
lret
sti
jb
add
add
leave
cmpsb
aam
cmpsl
mov
add
jo
cmp
mov
shl
std
pop
add
pop
mov
push
inc
dec
dec
pop
add
push
rol
add
xor
sub
pop
cmp
je
jmp
push
push
push
push
push
push
push
push
push
call
add
add
popa
add
jl
lds
rorb
add
leave
mov
fs
loope
push
in
mov
add
jne
cmc
arpl
add
xchg
add
js
add
add
std
sahf
pop
les
ficoml
push
lods
add
iret
mov
test
cwtl
lock
add
add
add
lock
pop
xor
pop
push
push
lea
push
push
push
call
add
lock
mov
imul
add
pusha
add
add
fwait
test
loope
cmpsl
mov
popf
add
xchg
add
push
mov
add
movb
add
mov
mov
lods
fildll
lods
mov
add
add
js
add
add
xchg
add
mov
jae
xchg
rcr
mov
add
scas
xlat
mov
lea
pop
pop
pop
pop
push
rol
pop
leave
push
add
ror
ror
pop
ret
lea
push
lea
push
call
add
scas
movsb
add
add
add
mov
pop
movsb
xchg
loopne
add
add
pop
jne
jmp
into
add
add
cmpsl
add
popf
push
enter
scas
mov
add
add
lea
arpl
add
mov
mov
add
xchg
add
add
lret
add
fmull
pop
pop
push
add
pop
pop
push
push
lea
push
push
push
push
push
push
push
push
call
out
pop
popa
add
pusha
pop
jns
call
out
nop
mov
arpl
xchg
add
add
rorl
stc
test
add
mov
add
add
mov
sahf
arpl
arpl
mov
xchg
xchg
in
push
insb
add
stc
pop
xlat
add
addb
mov
mov
mov
lea
pop
leave
push
lea
push
push
push
call
add
add
std
add
add
cmpsb
jno
mov
shl
sti
in
add
lret
mov
fistps
xchg
add
rolb
jmp
add
pop
pop
add
add
ret
add
mov
add
mov
div
add
cltd
je
js
add
add
call
andl
xchg
add
xchg
xchg
test
add
lea
pop
ret
push
push
lea
push
push
lea
push
push
call
push
jne
add
imul
add
ljmp
insb
mov
rcrl
add
add
mov
add
mov
add
add
add
loopne
lret
xchg
scas
add
jne
xlat
mov
push
push
aam
fidivrl
clc
add
xlat
in
jnp
push
ja
fldl
xchg
add
add
int3
add
int3
lea
pop
mov
pop
pop
push
push
push
push
push
call
add
icebp
insb
sahf
pop
in
pop
mov
add
jbe
bound
add
add
cmpsl
jl
movb
stc
add
add
add
ja
jnp
out
out
add
add
sahf
fdiv
les
jbe
adc
add
mov
sar
xchg
mov
in
mov
jnp
ret
push
popa
jae
repnz
add
add
stos
test
popf
popa
mov
lea
pop
pop
push
lea
push
push
push
lea
push
call
fnstenv
cmpsl
add
add
mov
add
add
add
add
add
add
add
mov
stc
push
fisubrl
add
mov
cltd
mov
add
add
add
add
pop
pop
mov
add
xorb
xchg
add
cltd
mov
add
add
jecxz
rolb
push
scas
add
mov
add
mov
data16
pop
leave
ret
push
rol
dec
pop
rol
rol
push
push
push
push
push
push
push
push
lea
push
call
rolb
mov
add
mov
add
jbe
pop
mov
testl
ja
lods
rol
mov
stos
mov
pusha
mov
xchg
bound
add
add
add
ja
add
jne
mov
stos
add
hlt
jo
call
xchg
jmp
gs
mov
lea
pop
xor
push
add
pop
inc
push
add
add
sub
pop
cmpb
jne
ret
hlt
nop
mov
sti
movsb
shll
sti
movsb
shll
sti
movsb
inc
mov
sti
imul
mov
sti
inc
loopne
sti
lock
mov
sti
movsb
sub
sti
sub
mov
add
inc
xchg
stos
push
ret
insl
xchg
jle
lret
psubw
sbb
icebp
xor
mov
clc
or
mov
cmpsl
push
stos
jae
lret
bound
jns
adc
or
mov
xchg
ja
mov
push
xorb
adc
stos
insl
mov
test
mov
test
xchg
test
enter
xlat
xor
mov
pop
addr16
inc
push
sbb
push
mov
dec
adc
andb
incl
lock
mov
mov
test
inc
std
and
shrl
pop
sbb
enter
mov
xor
mov
or
inc
and
jge
cmp
outsb
pop
std
call
xor
imul
inc
aas
stc
bound
lock
loopne
fmul
test
or
xchg
sub
frstor
lock
std
insl
jbe
jbe
cmpsl
mov
ss
das
out
ds
dec
cmpsl
mov
push
mov
push
inc
jbe
jl
fildll
jns
jb
add
repnz
insl
dec
mov
fnsave
push
fwait
or
add
test
mov
into
mov
subb
shll
lds
xchg
xchg
xchg
jge
mov
cmpsb
or
or
ja
or
xchg
sbb
inc
aam
scas
jg
push
or
lret
xorl
pop
lret
pop
mov
cmpsl
push
pop
lahf
sbb
xchg
mov
es
inc
mov
sbb
mov
cmp
adc
pusha
out
push
cmp
addb
jmp
cmp
dec
sbb
fisttpl
add
cmp
adc
and
imul
sbb
repz
add
adc
fcoms
mov
ja
pop
xor
vmovntps
sarl
cltd
call
fs
arpl
ret
mul
nop
or
or
mov
sub
sub
iret
ds
dec
in
pop
xor
cmp
xor
sbb
pop
mov
mov
fdivrl
jb
leave
lods
sbb
test
pop
dec
hlt
push
adc
lods
iret
sub
push
mov
fs
adc
cmpsb
add
into
mov
jne
xor
rorb
stos
nop
bound
jno
fwait
js
adc
in
jnp
sbb
ja
ljmp
jmp
jnp
cmpsl
in
movsl
mov
sbb
cmpsb
add
mov
cmp
loop
inc
cltd
adc
lcall
je
fnstcw
mov
hlt
pushf
popf
enter
sub
hlt
push
jb
pop
jl
cmp
popf
das
cmp
mov
stos
add
iret
cmp
xor
rol
outsl
dec
jne
or
add
je
sub
push
test
mov
jmp
pop
mov
dec
xchg
adc
jo
bound
cmpsb
sahf
fcomps
pop
shll
scas
pop
and
out
cmp
fisttpll
and
add
aad
rol
pusha
dec
lock
subl
daa
inc
pushf
inc
adc
push
jmp
or
idivb
sub
and
rcll
push
pop
outsb
call
int3
mov
clc
insb
enter
jo
call
adcl
pop
ficoml
pop
lcall
loopne
cltd
push
add
mov
adc
stos
or
test
dec
inc
into
push
fnstsw
fwait
sub
and
jns
mov
adc
adc
lock
pop
adc
cmp
cwtl
filds
out
lds
fdivs
xchg
leave
inc
dec
cs
jecxz
out
pushf
pushf
ss
out
xchg
mov
mov
enter
push
into
jp
mov
hlt
scas
dec
outsl
jle
pop
andl
dec
subl
mov
out
in
pop
into
les
or
sub
jge
inc
push
imul
js
jns
mov
sbb
fs
pop
mov
xor
and
jb
or
add
sbb
or
pop
jl
fiaddl
dec
pop
cmovp
stc
sahf
imul
sti
pushf
inc
lods
cmpsl
fwait
cmp
push
mov
dec
cwtl
lahf
push
std
mov
dec
loope
insl
andb
sti
out
lds
arpl
jo
mov
inc
adc
in
dec
sbb
mov
lahf
add
cmp
mov
call
repz
jmp
loope
dec
arpl
neg
sbb
jp
data16
mov
push
cmp
data16
aam
hlt
test
test
mov
daa
shrl
push
stos
aam
inc
add
movsb
push
cmp
mov
enter
inc
jnp
std
dec
adc
cmp
push
mov
js
sub
or
movsl
mov
enter
sub
xchg
shr
add
pop
xchg
arpl
out
pop
mov
add
push
cs
ljmp
shrl
in
mov
xlat
mov
insl
inc
fildl
adc
or
jo
dec
add
xchg
int3
ljmpw
cmp
dec
insb
add
cli
in
andb
adc
bound
mov
repnz
aam
jo
popa
ret
enter
arpl
dec
push
push
xor
jl
loope
or
incl
bound
and
jae
mov
xchg
xor
mov
or
push
or
pop
iret
pushl
cmp
cli
movsl
inc
pop
mov
faddl
cmp
pop
xlat
xchg
and
sub
mov
pop
xchg
mov
add
loop
sbb
out
jnp
cltd
or
mov
add
push
mov
add
mov
js
fisubrl
jl
loope
mov
lret
std
cmp
push
test
sub
fs
jnp
sbb
out
pusha
cmc
movsb
das
sub
or
xchg
testb
xchg
mov
or
out
push
jnp
lret
push
pop
les
jge
jmp
inc
cmp
and
out
add
je
cmp
jbe
in
repz
push
adc
add
inc
or
push
sti
mov
cmp
scas
cmp
in
fistpl
cwtl
notb
out
xchg
fstpt
jae
popa
mov
out
push
insb
sub
inc
out
sbb
sbb
and
sbb
stos
in
lret
fistpl
mov
adc
inc
sub
aam
fcompl
sti
stc
xchg
imul
lods
cld
ljmp
pushf
ret
andb
out
or
sub
cmp
sahf
xchg
and
xchg
mov
notb
leave
mov
mov
or
mov
xchg
mov
sbb
mov
push
flds
push
mov
xor
or
cld
xlat
and
mov
and
adc
js
cmp
xlat
in
mov
mov
jge
aad
xor
jmp
imul
insl
cmp
sbb
mov
or
jp
add
add
sub
iret
popa
popa
popa
addb
adc
and
iret
out
sahf
dec
sub
jl
loopne
ds
popa
icebp
in
sbb
sbb
mov
pop
gs
ja
pusha
and
sbb
mov
xchg
and
addb
mov
sub
nop
into
and
stc
and
ret
sbb
jo
popf
sti
xchg
xchg
and
stos
inc
std
test
jg
dec
int3
int
sbb
pushf
icebp
push
test
sbb
scas
data16
js
jb
pop
sub
adc
int3
sub
dec
test
pop
ret
push
out
test
test
add
mov
xchg
jp
mov
pop
out
cmp
iret
adcb
cli
cmp
mov
int3
aas
sub
push
add
add
sti
sub
fsubrs
mov
jno
lea
lock
or
es
sub
gs
dec
mov
in
out
sbb
mov
add
xchg
add
add
int
sub
ja
lret
mov
add
lods
scas
mov
add
inc
mov
inc
cli
sar
bound
lcall
push
int3
mov
popf
xchg
mov
lret
pushf
lcall
das
add
test
sub
push
ret
jo
iret
pop
jne
cmp
push
scas
ret
mov
xchg
sbbb
ds
jae
out
jbe
xor
cli
push
mulb
add
cmpsl
or
jns
imul
je
seto
lcall
ret
dec
aam
xchg
fsubl
mov
mov
xorl
adc
scas
jge
mov
add
ss
push
sbb
sbb
testl
lods
inc
iret
mov
jne
inc
xor
fcoml
push
sub
pushf
and
xchg
xorb
and
xlat
sub
mov
rclb
lods
cmp
inc
xor
pop
in
mov
sbb
xor
sbb
jle
cmp
psubw
fptan
xor
add
out
repz
lods
inc
iret
push
mov
sbb
icebp
cltd
cmp
or
push
xchg
sbb
lds
sbb
mov
les
ss
movsl
repz
mov
rorb
push
ljmp
fidivl
ja
mov
aas
adc
outsb
or
in
cltd
rolb
push
mov
mov
fsubs
arpl
sub
add
lods
xchg
xchg
fdivp
mov
clc
imul
ds
popf
repnz
adc
jno
push
test
cmpsb
jge
addl
mov
and
dec
aad
pop
and
test
sbb
inc
daa
push
push
test
loop
test
mov
mov
out
cli
sbb
mov
sahf
sbb
iret
push
sub
jbe
ljmp
pop
dec
insb
test
das
mov
jbe
cld
in
xchg
add
mov
lods
dec
clc
sahf
cmc
push
pop
aad
and
bound
add
push
xchg
ficoml
push
subb
adc
pop
cmpl
movsb
aam
cmpsb
loope
fnstcw
pop
and
mov
inc
bound
inc
mov
or
repnz
inc
cmp
mov
inc
rcrb
ficompl
inc
and
push
mov
inc
xlat
negb
pop
and
mov
aam
xchg
loopne
sbb
cli
push
push
clc
inc
adc
pop
scas
inc
cmp
in
pinsrw
in
add
adc
adc
daa
arpl
divb
jge
lret
mov
cmp
jg
xchg
mov
xor
in
lcall
xchg
adc
insl
adc
mov
js
ret
push
adc
inc
or
sub
arpl
pusha
imul
arpl
out
inc
out
sub
divb
orl
repz
xchg
jns
dec
ja
cmpsb
mov
or
sub
std
int3
pop
in
invlpg
outsb
push
jae
movsb
mov
cmp
test
push
stos
jo
xchg
jle
mov
ds
sub
cli
in
clc
mov
mov
push
lahf
imul
xchg
sbb
mov
icebp
inc
es
pop
loop
or
cmpsl
sbb
add
mov
xor
lret
and
rolb
lds
xchg
out
movsb
push
cmc
mov
movsl
leave
cmp
mov
aaa
outsb
into
xchg
dec
adc
in
inc
mov
add
call
ret
in
aas
cld
sahf
sbb
jno
xchg
push
bound
mov
sub
sbb
adc
leave
rcrl
or
lods
push
insl
ljmp
mov
jle
lahf
insl
out
and
cltd
hlt
pop
mov
add
rcll
push
and
lock
mov
stc
insl
test
int
pop
add
leave
xchg
xchg
and
out
stc
sub
int
fmuls
sub
pop
cli
xor
jmp
ja
push
lds
or
mov
daa
cmp
jns,pn
push
jae
lahf
inc
xchg
std
mov
mov
mov
dec
and
pop
jge
fld
lahf
aaa
shlb
in
js
inc
ds
imulb
jmp
pop
clc
fwait
loop
aam
aam
btc
rolb
sub
push
adc
int3
xchg
jae
sarl
hlt
pop
xchg
les
insl
push
fwait
and
cmp
into
sub
or
cmp
xor
cmpsl
in
inc
sbb
std
jno
mov
arpl
adc
pop
in
movsb
jg
cmp
xchg
popf
add
fwait
cmp
cmpsl
cmp
test
mov
jnp
ja
insb
pop
fdivs
rcll
push
push
cmc
lea
inc
rcr
mov
fisttps
pop
stc
mov
jbe
fdivrl
inc
adc
jae
or
cmc
fwait
out
and
movsl
popa
xchg
shlb
cs
push
out
cmc
repz
ljmp
lods
lret
stos
inc
mov
xchg
inc
pop
cli
in
jae
pop
imul
dec
cmc
add
loop
test
rcll
pop
mov
push
ss
aad
cs
adcb
add
xchg
inc
cmp
pop
and
sbb
jne
or
lock
shlb
arpl
and
push
imul
ja
xor
or
cmp
xchg
sub
fnstsw
or
mov
pushf
push
aad
push
hlt
mov
insb
mov
mov
clc
daa
dec
pop
stos
ds
push
jle
fidivrs
pop
aaa
mov
outsb
test
pop
push
loope
lret
insl
into
int
sbb
mov
add
xor
jb
push
aam
shlb
xchg
pop
add
es
push
sbbl
fmuls
pop
mov
jmp
int
fisubrs
or
cs
dec
xchg
repnz
lret
jl
dec
loop
adc
cld
push
mov
stos
jl
fcomps
adc
loopne
adc
add
or
mov
stc
js
call
xchg
testl
hlt
repz
sar
adc
stos
out
mov
arpl
pop
mov
movsl
inc
les
lds
mov
fisubrs
leave
mov
mov
mov
arpl
out
xor
jp
jne
pop
adc
and
cli
xor
lret
repz
jp
mov
pop
xchg
and
and
push
push
pop
and
push
test
mov
fwait
cmp
mov
jns
pop
xchg
xor
js
iret
jge
sbbb
fidivrl
jle
xchg
iret
ja
out
inc
test
loop
sbb
mov
lods
js
imul
mov
adc
icebp
loop
dec
ljmp
cmpsl
add
movsl
movsl
dec
pusha
pushf
enter
aam
inc
dec
sub
ds
pop
loop
iret
adc
outsl
push
sahf
repz
loopne
sub
cli
xor
and
mov
fwait
imul
sti
in
test
xchg
shrb
ficoms
imul
sub
jmp
aad
imul
xlat
popa
hlt
test
xor
js
jo
inc
push
pop
mov
rclb
sub
jg
ljmp
or
mov
mov
stos
and
lea
pop
outsb
pop
pop
test
and
adc
mov
and
mulb
in
test
into
aaa
cltd
scas
jno
xchg
addb
xchg
fwait
lret
push
xor
les
scas
hlt
xor
mov
xor
mov
xor
dec
xor
mov
pop
loopne
inc
das
jg
lahf
cmc
call
dec
inc
xor
mov
test
leave
dec
outsb
jbe
xchg
leave
clc
lret
dec
push
mov
movsl
fcmovnu
xchg
mov
pop
jmp
adc
push
or
test
dec
mov
mov
cmpsl
or
push
dec
out
sub
push
aad
inc
xor
pop
icebp
test
fildll
mov
xchg
iret
inc
cmp
leave
inc
pop
inc
cmp
fldenv
push
mov
or
pop
jns
fisubs
xchg
or
adc
mov
mov
mov
test
pop
sbb
jbe
dec
lods
insl
push
test
cmp
imul
lret
cmp
jecxz
arpl
cmc
sub
jae
dec
mov
fadd
stos
sbb
mov
into
jmp
lret
add
je
fcmovnb
pop
and
and
xor
mov
sbb
xchg
fcmovb
add
arpl
out
push
mov
shll
add
xor
imul
adc
jns
gs
jge
hlt
lock
cmpsb
push
inc
shlb
psllq
lock
mov
pop
push
repnz
js
popa
mov
fidivrs
jle
call
lods
rcll
repz
xchg
int3
cli
sar
add
sbb
mov
call
idivb
xchg
jo
orl
fsubrl
pushf
test
adc
imul
aaa
mov
add
dec
je
dec
cwtl
repz
or
andl
cwtl
std
xchg
fnstenv
add
add
pop
push
ret
in
xor
outsl
pop
rorb
fucomi
fstp
int
out
insl
aas
push
sub
fildll
dec
push
cmc
xor
mov
aas
mov
or
mov
lahf
mov
push
pop
in
sub
fwait
das
or
rdmsr
ja
mov
dec
int
xlat
xchg
add
xor
push
dec
pop
out
in
and
shrb
sbb
call
sbb
add
dec
push
stc
cmp
stos
ret
imul
jns
pop
repz
jo
sub
xchg
push
pop
sub
sbb
jns
lret
xchg
or
xchg
dec
push
leave
jle
fdivrs
hlt
loop
inc
loopne
clc
dec
push
dec
sub
adc
test
call
mov
xchg
mov
mov
dec
in
mov
sub
aad
jne
adc
movsl
cmp
das
push
xor
mov
push
lret
pop
mov
add
dec
mov
int
aas
pop
jle
inc
fiadds
movb
xchg
jbe
sbb
mov
mov
and
mov
lret
adc
ret
or
dec
adc
or
sahf
out
cmc
aas
fisubl
cmp
gs
push
push
mov
fwait
mov
mov
cmp
inc
jmp
jne
iret
pop
lods
dec
xorl
roll
fs
xlat
fildll
cmp
sub
mov
pop
inc
inc
imul
dec
cmp
and
push
pop
loop
push
sub
rorl
notl
das
ret
mov
jge
jno
dec
push
push
add
add
or
mov
add
push
add
gs
scas
enter
mov
cwtl
bound
sti
clc
mov
enter
in
push
inc
mov
aam
outsb
pop
nop
mov
mov
mov
jnp
pop
nop
mov
or
jne
outsb
in
loope
xchg
dec
or
dec
scas
mov
aam
mov
mov
xchg
lods
mov
aas
cld
jmp
data16
cmp
jecxz
lock
ret
outsl
scas
xorl
loop
fwait
push
js
rolb
inc
push
jo
test
lds
outsl
frstor
fs
inc
jmp
xchg
aas
sub
rolb
popf
jae
mov
aam
lods
mov
fdivrl
sbb
mov
jmp
mov
mov
in
sub
sub
cmpsb
inc
cwtl
jno
adc
mov
push
leave
sarb
xchg
xchg
dec
movsl
out
push
scas
push
sub
iret
and
inc
sbb
movsb
mov
lcall
mov
enter
aaa
add
jp
xchg
sarl
int3
jl
mov
sahf
js
adcl
mov
push
mov
cmp
nop
push
cmp
jns
popa
dec
sub
mov
loope
pop
aaa
xor
cmp
mov
mov
fcoml
call
xor
cli
or
sub
out
in
mov
icebp
mov
aaa
push
movsl
aam
mull
pop
mov
pop
jmp
hlt
xchg
mov
inc
outsl
jle
sbb
fwait
call
jae
lods
inc
lret
daa
push
test
xchg
push
jnp
and
jo
push
pop
push
xacquire
push
paddusb
dec
jbe
aad
stos
mov
mov
scas
xchg
mov
daa
sbb
adc
lods
movsl
test
fimull
je
ret
add
test
cmpsl
jb
xchg
out
loopne
daa
xorl
mov
mov
int
jmp
fucomp
xchg
nop
fisubs
vfrczpd
mov
sub
je
ret
fs
scas
xlat
pushl
sub
sahf
rolb
mov
jb
inc
or
in
mov
push
inc
mov
dec
pop
fmull
push
out
fldcw
in
test
addr16
movsl
add
scas
mov
jle
fcomp
inc
rcl
mov
lcall
cli
imull
pop
mov
push
mov
icebp
icebp
dec
xchg
xchg
or
pushf
outsb
mov
inc
inc
ret
mov
mov
sub
dec
nop
cmp
movsl
and
leave
fisubl
mov
cld
add
xor
and
push
mov
push
addl
push
mov
add
jp
xor
xchg
outsl
cmpsb
loop
fiadds
rsqrtps
cmp
jbe
pop
mov
push
jecxz
insl
fcomps
dec
aaa
jle
sbb
inc
pushf
lret
cltd
xor
pushf
pop
les
jge
or
dec
or
add
enter
push
test
adc
aad
inc
aas
dec
xor
pop
jle
pop
xor
pop
jb
sarl
xchg
lcall
cmc
cmp
daa
pop
jmp
xorb
lcall
pop
push
push
mov
fdivr
xor
mov
pop
lock
lods
push
sbb
arpl
mov
jl
sub
imul
test
or
ficompl
sub
mov
fsub
pop
jb
push
repnz
iret
push
rorl
dec
scas
xor
jb
loopne
or
mov
cli
aas
popa
es
sarl
push
icebp
push
call
mov
xchg
es
or
jno
sub
pushf
stos
xchg
and
inc
add
insb
mov
pop
mov
inc
out
jecxz
and
mov
pushf
xchg
pop
push
stc
outsb
out
int3
lods
daa
enter
out
sub
cmpsb
adc
or
nop
loope
mov
mov
xchg
repnz
psllw
inc
push
sub
rcrl
mov
pop
rcrl
or
into
ljmp
aaa
aam
dec
notb
enter
mov
push
or
inc
xchg
and
sbb
in
popa
mov
mov
icebp
pop
cmp
fistpll
xlat
jle
sub
data16
test
mov
aas
fwait
jbe
or
rorb
add
jl
out
test
icebp
xor
test
jno
jbe
fdivrp
jns
xchg
xlat
push
mov
add
inc
sbb
aam
les
in
mov
mov
bound
pop
sub
xor
inc
pop
andb
xchg
jecxz
xchg
mov
push
lods
es
push
out
lods
shr
push
mov
sbb
or
nop
adc
arpl
xchg
add
sbb
pop
loop
jns
jne
xchg
icebp
mov
xchg
imulb
mov
pop
call
xchg
loope
mov
addr16
dec
adc
jl
cmp
xchg
loop
inc
or
es
mov
out
data16
mov
jbe
jb
cmp
cmpsl
andb
xchg
fwait
mov
in
inc
in
pop
mov
fisubl
leave
inc
sub
cmpl
cwtl
clc
adcb
fnstcw
sub
fldcw
lea
aaa
pop
out
jb
dec
push
mov
int3
lods
cmp
fs
repnz
test
cmpsb
mov
sbb
fwait
sbb
ret
test
pop
in
pop
xchg
mov
mov
inc
push
add
insb
mov
fimuls
jno
sub
mov
fldenv
loope
jno
pop
fldl
rcll
lods
adc
jmp
int3
cmp
cmc
or
push
adc
in
xchg
stos
or
stos
call
jne
idivl
fcmovu
sub
push
push
shll
data16
in
pop
loopne
sbb
dec
jae
imul
inc
fbld
push
xor
popa
push
dec
sub
ret
xor
ja
add
push
lea
mov
lods
ss
and
rol
mov
jl
sub
mov
dec
mov
push
fsubrl
push
cwtl
incl
imul
fwait
push
testl
lds
imul
jl
jb
fs
jnp
sub
popa
push
mov
mov
xor
cmp
xchg
pusha
shrb
or
insl
xor
mov
enter
jp
add
fcompl
cmp
ds
rorl
sub
mov
inc
es
or
movsl
loop
push
pop
in
rclb
xchg
jle
inc
cwtl
pop
xor
mov
mov
scas
js
xor
jp
stos
or
dec
adc
dec
hlt
cltd
rorl
cmpsb
test
fistpll
shll
mov
leave
inc
inc
iret
stos
sub
movsb
sahf
jmp
adc
xchg
pop
push
iret
cmpsb
pop
sub
orb
int
shrb
inc
mov
and
push
aaa
add
dec
jp
scas
ret
outsl
dec
es
pop
pop
mov
push
pop
fstpt
push
push
xor
js
dec
pushf
dec
cmp
cli
loop
js
or
mov
add
and
xchg
lods
dec
push
mov
jge
dec
mov
mov
out
pop
and
adc
out
pop
mov
xchg
xchg
sbb
or
cs
shl
je
inc
mov
inc
shrl
stc
sbb
and
sbb
inc
lret
lock
mov
scas
add
dec
adc
test
shr
push
addb
push
dec
les
shlb
dec
pushf
or
push
movsl
dec
cmp
dec
repnz
jae
or
cmp
fldt
adc
push
fs
jae
adc
mov
xchg
repnz
or
scas
mov
add
mov
cwtl
imull
mov
xor
jp
insb
push
jle
add
pop
movsb
iret
shl
mov
xlat
adc
sbb
out
cmp
cld
sub
sete
aad
add
cmpsl
pop
ret
sbb
push
xchg
test
cmpsb
pop
push
and
lahf
mov
xchg
repnz
mov
lcall
inc
sub
or
pop
faddl
cwtl
js
adc
jle
dec
mov
rcrl
and
cld
pop
cmp
rcrb
repnz
clc
jmp
jg
dec
out
or
ja
imul
cmpsl
and
and
into
push
push
sbb
pushf
pop
dec
and
inc
lock
movsl
or
xchg
out
insb
mov
dec
inc
push
les
popf
push
out
xor
mov
xor
test
push
ja
fwait
enter
call
test
popa
stos
imul
jg
xor
add
and
movsb
pop
jns
adc
in
mov
in
es
push
dec
cmp
sub
push
xchg
sub
dec
mov
jle
pusha
out
repnz
xor
and
mov
or
je
out
jge
mov
in
test
dec
sbb
fiadds
xor
sbb
lret
xchg
cmpsb
fwait
imul
jge
int
push
mov
dec
std
mov
push
subl
sbb
cs
cld
adcl
inc
xor
or
jecxz
mov
dec
sub
fadds
out
xor
aad
imul
xchg
cmp
and
pop
data16
push
adc
inc
mov
fidivs
call
arpl
cs
lock
mov
sbb
repz
inc
cld
dec
in
rolb
push
mov
xchg
jp
and
and
cmp
fs
addr16
fistpl
mov
xor
push
lahf
cmpsb
xchg
pop
sub
mov
insl
lcall
add
mov
mov
xchg
xor
mov
repnz
cmpsl
mov
mov
test
xlat
push
imul
xchg
insl
rcrb
mov
js
adc
mov
shlb
stos
shr
in
push
fistpll
ret
icebp
movsl
push
fcoml
xor
je
bound
imul
mulb
in
xchg
push
out
xor
push
sub
adc
inc
notl
stc
int3
enter
imul
call
and
pop
push
sti
sub
xchg
pop
pop
aad
mov
loopne
pop
and
dec
cmpsl
dec
xchg
icebp
repnz
pusha
dec
mov
mov
cmp
insl
out
addr16
sarb
and
clc
add
or
in
fwait
sbb
sbb
test
fnstcw
cli
out
call
inc
xchg
imul
mov
inc
ljmp
aam
mov
lods
pop
cmc
rcrl
xor
or
mov
leave
lods
jae
jg
jne
jecxz
adc
mov
enter
out
lods
sarb
jo
jo
arpl
mov
mov
lret
pushf
and
jnp
xchg
outsb
fstl
cmp
jo
cmp
xchg
dec
xchg
stos
test
mov
or
push
call
or
lds
stos
push
add
sbb
fcomps
or
call
mov
in
loope
inc
or
mov
mov
dec
in
insl
sub
xor
loopne
loop
mov
mov
add
or
push
call
daa
pusha
cmpsb
sbb
leave
cmp
repz
mov
push
lcall
adc
sub
dec
je
jmp
imul
mov
lock
out
xor
cwtl
pop
test
sarl
fstpt
dec
pop
inc
shlb
and
jae
fsubl
stc
lods
sahf
decl
xor
jp
pusha
inc
inc
cmp
popa
xchg
orb
outsb
adc
and
loope
sbb
mov
xchg
push
nop
mov
insl
jge
add
inc
mov
jmp
in
nop
or
stos
call
mov
mov
mov
enter
out
test
into
push
popf
ss
pop
fmuls
push
es
hlt
jno
push
mov
scas
cs
dec
inc
sub
repnz
push
lds
dec
cld
push
push
and
in
or
dec
pop
pop
mov
jne
les
cld
mov
inc
xchg
or
aas
movsb
dec
loop
sahf
add
mov
out
inc
dec
sahf
xchg
mov
lods
sti
cld
shll
inc
loop
fldcw
fisubl
imull
push
into
xchg
add
into
inc
iret
sbb
out
mov
jb
jg
scas
fwait
push
inc
cld
loopne
inc
cmp
ljmp
cmp
cs
mov
cs
sti
arpl
lds
dec
adc
mov
insl
inc
in
dec
add
mov
rcrb
addb
jp
pop
mov
testb
xchg
mov
rcl
vcvtps2pd
lcall
xor
aad
sbb
add
cmp
test
leave
insl
pop
cmpsb
cmpsl
jmp
rorl
arpl
les
lock
cmp
lret
test
int3
movsl
push
sahf
xor
add
mov
mov
leave
out
movsb
test
sub
cli
lea
pop
into
aad
ljmp
bound
lahf
and
push
enter
in
cmpsl
dec
inc
inc
jno
xlat
lock
inc
aas
or
cmpsl
mov
add
dec
jne
push
in
bound
cmp
inc
cmpsl
in
mov
inc
nop
setbe
jnp
push
adc
in
and
ljmp
push
fidivrl
mov
stos
ss
pop
pop
imull
nop
inc
ficoml
daa
out
stos
movsl
gs
sbb
pop
iret
xor
ja
mov
xor
mov
insb
enter
mov
xor
or
adcl
push
lahf
lea
xlat
cmpsl
hlt
sahf
push
jmp
sbb
jecxz
xchg
movzwl
sti
les
divl
add
and
inc
xor
pop
pop
out
addb
add
xor
cmp
and
sbb
movsl
jae
mov
mov
xchg
or
scas
cwtl
loop
fiaddl
dec
sub
popa
scas
xchg
sbb
adc
mov
push
imul
fdivp
jo
leave
call
dec
inc
mov
xchg
push
mov
shll
ljmp
adc
cmc
add
ljmp
addr16
aam
push
aaa
add
addl
add
xor
xor
xchg
lcall
xchg
jl
lods
mov
xchg
in
stos
inc
fimull
std
sub
scas
iret
cmp
lcall
inc
cs
iret
pop
lock
jno
lods
lcall
dec
icebp
or
ds
das
outsl
flds
lcall
ret
loop
mov
pusha
iret
jne
mov
mov
push
mov
xchg
iret
test
push
xchg
loop
mov
adc
icebp
add
xlat
call
pop
fisubl
rorb
pop
mov
and
or
insl
adc
mov
xorb
sub
sbb
test
aam
sti
mov
ret
xchg
lret
in
lcall
fdivr
in
xor
inc
adc
xchg
in
dec
mov
mov
xorl
xchg
out
lcall
arpl
adc
loope
xchg
xchg
fwait
inc
addr16
shrb
lods
pushf
iret
cmpsb
xor
sbb
test
xor
mov
push
sti
pushf
mov
push
jmp
sbb
and
sub
aaa
rorb
cmp
outsb
cmp
stos
stos
xor
test
mov
mov
adc
push
adc
loope
shrl
das
hlt
jmp
and
pusha
into
subb
push
inc
nop
sub
pop
repnz
sub
sahf
lret
push
aad
xlat
and
icebp
push
mov
mul
mov
aam
mov
mov
xchg
pop
std
sti
je
into
sub
sbb
push
add
push
dec
lret
mov
loop
out
lret
mov
mov
popa
in
pop
inc
jp
icebp
mov
cmpsl
push
xchg
mov
pop
cmc
xlat
cltd
mov
outsl
int
pop
rcl
adc
adc
mov
test
mov
xchg
fwait
mov
repz
push
rol
or
ljmp
fisttps
mov
pop
popf
cmp
push
xor
or
sub
dec
rclb
dec
rorb
pop
add
stc
jg
lret
popl
jle
inc
mov
ret
int3
inc
test
add
shll
clc
pop
mov
cwtl
mov
cwtl
das
sbb
loopne
aas
cli
sub
pop
cmpsb
jb
add
scas
xor
cmp
int
jae
mov
mov
mov
leave
pshufw
jo
clc
adc
cmc
test
adcl
negb
dec
imul
std
vcomiss
xchg
scas
add
repnz
jnp
lock
in
mov
mov
ss
inc
pop
mul
push
loope
cld
inc
push
or
dec
or
xchg
dec
mov
pop
ret
sub
or
jb
in
push
scas
mov
xor
pop
pushf
dec
fnstcw
adc
pop
add
or
cmp
decb
cmp
mov
loop
loope
imul
cltd
pop
and
and
in
movsb
mov
inc
cwtl
fwait
add
sub
jp
sub
xor
es
sbb
cmp
adc
xlat
movsbl
movsl
stos
mov
out
les
icebp
ja
bound
sarl
pop
test
movsl
dec
xor
cmp
aam
cltd
jg,pn
bound
aad
ss
outsl
inc
loopne
xor
scas
mov
mov
mov
sbb
ret
inc
and
cld
pop
lods
dec
mov
push
xor
mov
cwtl
jge
lret
sub
insl
and
outsl
push
sbb
aam
mov
out
and
mov
js
xchg
pop
cld
pop
hlt
sub
xchg
insb
stc
adc
out
lahf
and
arpl
add
cmp
sbb
data16
js
xchg
cld
add
inc
push
mov
adc
rcrb
out
icebp
inc
sub
jb
test
lds
xor
xchg
aam
das
cmpsb
in
push
or
bound
std
dec
push
jg
loope
add
popa
push
dec
jae
insb
shll
sub
and
dec
adc
add
add
add
xchg
repz
ja
fs
inc
xor
out
fisttpll
orb
ds
imul
movsl
lods
imul
fcoms
out
sbb
sti
cmp
nop
dec
sti
sbb
imul
push
ret
xor
stos
adc
push
movsl
mov
mov
cmp
std
lcall
jmp
cmp
daa
push
out
mov
jg
daa
adc
mov
cltd
add
sbb
bnd
int3
push
push
rorb
mov
inc
xor
jmp
and
fwait
sahf
fists
mov
pop
sub
sbb
or
ror
sbb
ret
leave
mov
sbb
sub
push
xor
aam
cmpsl
int
aam
aad
inc
push
xor
popa
es
xorl
inc
repnz
movsb
xorl
mov
lahf
push
fstpt
jmp
cmp
cmpsl
lret
clc
insl
cmp
jg
inc
pop
popa
add
sahf
enter
fldenv
outsl
mov
in
push
mov
dec
jecxz
and
insl
mov
rorl
shlb
fdivl
hlt
sbb
dec
inc
jge
xlat
jno
add
jne
pop
ja
or
jg
mov
in
mov
jle
aam
inc
mov
mov
test
mov
adc
enter
jo
and
pop
stc
stos
mov
movsl
push
jge
or
mov
fldt
aad
cli
push
pusha
xor
dec
daa
enter
dec
ret
mov
mov
mov
and
jae
mov
ret
mov
repz
mov
and
mov
iret
popf
jae
jmp
add
test
mov
pop
jne
scas
dec
xchg
mov
sub
or
push
sbb
cmp
push
jae
sbb
jmp
out
ds
in
lea
mov
cli
jnp
add
dec
orb
xor
push
daa
rcrl
pop
mov
add
arpl
dec
icebp
dec
and
in
jle
pop
pop
cltd
loop
push
mov
aas
popa
jge
test
cmp
xchg
inc
jnp
aad
mov
aaa
cmpsl
xlat
sbb
sub
sbb
mov
fistps
ljmp
mov
dec
jmp
rolb
adc
pop
adc
es
dec
push
mov
sub
jb
iret
lcall
and
cmpsb
pop
jmp
call
xor
sbb
xchg
push
out
ljmp
arpl
push
sahf
fcomps
mov
pop
inc
fildl
es
mov
loop
xor
inc
xchg
jns
rorb
mov
into
jnp
ljmp
or
adc
push
pop
lods
mov
shrl
mov
orb
sbb
dec
sbb
js
sbb
aam
add
dec
or
imul
or
notb
popa
pop
mov
in
or
xchg
adc
subl
push
sub
pop
sbb
enter
notb
daa
movsb
mov
incl
fdivr
aad
nop
inc
test
leave
rolb
sar
subb
adc
nop
arpl
aam
dec
aam
pop
inc
mov
and
fldcw
jns
icebp
mov
mov
out
in
and
addr16
sbb
sbb
mov
push
mov
lods
orl
xchg
imul
push
flds
xchg
cmpsb
xchg
cs
and
xor
jle
leave
pop
testl
jno
aaa
dec
decl
sub
fistpl
pushw
or
push
push
cmp
ja
push
lcall
cli
cmp
out
ja
cmc
adc
js
jno
xchg
pop
pushf
ljmp
sub
repz
xchg
cmp
jae
inc
loop
cltd
lret
stos
jbe
cmp
ds
sarb
pop
push
add
call
dec
pop
inc
pop
out
rolb
movsl
lcall
ret
ret
push
xchg
adc
call
fwait
aam
cmp
jecxz
sub
pop
je
in
out
call
xor
push
ret
xorb
xchg
mov
ljmp
ljmp
inc
pop
arpl
mov
or
or
pushf
xchg
mov
fstpl
scas
push
push
test
mov
adc
xchg
lea
mov
jno
movsl
icebp
ret
jle
adc
adc
dec
xor
mov
stos
mov
cmpsl
jmp
jo
pop
pusha
movb
jb
cld
xor
faddl
push
push
or
and
jbe
and
jecxz
inc
jl
sarl
xchg
pop
add
mov
mov
mov
xor
or
iret
xchg
and
icebp
mov
int
cmp
jl
fldl
cmpsl
and
pop
push
sbbb
fwait
xlat
lea
leave
adc
lock
push
daa
add
xchg
sub
std
or
mov
repz
loop
or
cmp
push
add
addr16
movsl
popa
sbb
cld
lahf
cmp
in
loop
in
js
xchg
mov
aam
jl
sbb
cmp
lret
addr16
sbb
mov
test
fimull
pop
jge
ss
dec
ficoms
mov
ret
addr16
adc
xchg
test
push
jne
or
movsl
std
sbb
subb
pusha
ds
orb
inc
mov
out
jae
clc
ljmp
dec
cmp
dec
ss
inc
inc
cmp
adc
int
sbb
loopne
sbb
ljmp
jle
or
push
cld
repz
rolb
je
dec
fildl
in
and
pusha
inc
popf
mov
rorl
inc
pop
outsb
dec
pop
pop
out
imul
sbb
jb
ss
mov
cli
insb
popa
ljmp
adc
cmp
mov
push
jmp
mov
movsl
pop
inc
sbb
jnp
mov
push
push
pushl
mov
mov
roll
stc
sub
movsl
faddl
sarb
lods
or
mov
in
bnd
js
aaa
scas
rolb
lahf
jp
repz
jecxz
add
in
add
mov
inc
push
imul
pop
lcall
sbb
stc
pop
xchg
push
mov
notb
cmpsl
lods
xchg
cmpsl
fwait
test
push
rcll
sub
dec
mov
shlb
into
out
jae
sub
add
mov
sarb
mov
fidivrl
xor
test
hlt
sub
dec
mov
add
aas
cmp
push
push
mov
scas
jge
mov
push
shll
xor
das
xor
popf
cmc
out
out
pushf
push
xchg
mov
inc
shl
push
mov
in
xor
mov
add
iret
jmp
mov
jecxz
cwtl
pushf
pusha
leave
in
fistl
pop
sbb
out
ror
lret
and
lods
dec
cmp
repnz
test
dec
mov
scas
clc
add
cmp
xor
ja
adcb
in
mov
dec
mov
adc
sub
mov
lea
lcall
mov
or
daa
push
pop
enter
mov
rolb
mov
jo
push
scas
push
cltd
out
sbb
dec
cmc
mov
leave
push
das
mov
inc
imul
insb
cmpsl
xor
xor
add
mov
imul
sub
dec
gs
mov
mov
dec
xor
fstpt
stos
dec
add
cmp
dec
cmp
jl
loop
out
inc
dec
xchg
aaa
push
dec
popa
gs
lret
mov
mov
call
clc
fcmovnu
mov
mov
xor
push
insl
rcrb
imul
aas
pop
xchg
mov
sub
movsl
xor
ljmp
push
pop
add
inc
adc
jecxz
jle
mov
adcl
mov
lock
outsb
les
pop
push
xchg
push
js
scas
jno
das
mov
ret
cmp
cmpsl
inc
dec
jne
loopne
iret
inc
jbe
adc
daa
push
fs
test
or
sub
sub
jae
or
adc
pop
adc
stc
sbb
mov
or
clc
adc
lds
shlb
mov
inc
mov
fwait
or
and
pushl
loopne
lock
add
xor
mov
shl
addl
loop
jg
push
ret
push
mov
imul
dec
sub
mov
adc
jnp
cld
popa
lea
jnp
xchg
enter
fdiv
insb
into
rcll
roll
inc
mov
loope
pop
jns
or
out
repnz
sbb
inc
lret
cmc
pop
cmp
pop
inc
add
xor
in
je
fidivrl
adc
movsb
cmpsb
push
inc
out
std
and
mov
jno
rcrb
sbb
xchg
jo
xchg
lahf
mov
scas
mov
jae
loop
cltd
dec
pop
insl
adc
sahf
pop
std
push
fwait
jecxz
or
mov
ret
jnp
movsl
mov
in
sbb
shll
addr16
nop
cmp
cmp
mull
mov
popf
in
mov
es
push
mov
xchg
mov
jle
dec
stc
jnp
testl
mov
push
xchg
ja
sbbb
dec
or
jo
mov
pop
adc
mov
mov
je
stos
adcl
stos
rol
xlat
mov
mov
out
divl
push
pushf
or
mov
push
sarl
lods
mov
in
mov
inc
test
add
shrl
mov
lds
imul
mov
mov
mov
shl
mov
movsb
addr16
mov
add
mov
push
xor
test
mov
inc
push
movsl
ffree
ds
mov
insl
lods
mov
mov
dec
dec
loop
cmp
stos
xchg
mov
mov
test
daa
mov
jmp
les
and
adc
imulb
insb
pop
es
mov
mov
inc
adc
xorb
fnstsw
xchg
cmp
je
sub
stc
rolb
sub
pop
cmp
jecxz
mov
cs
jbe
xchg
cmpsb
outsl
out
ljmp
mov
loop
addr16
inc
mov
std
lahf
outsl
jge
push
mov
jmp
cmp
jbe
push
inc
cmp
jns
sbb
lcall
imul
mov
aas
or
insb
imul
nop
stos
sarb
dec
jp
sub
mov
dec
mov
sub
adc
xchg
int3
mov
lods
jecxz
orl
xchg
xchg
sbb
sbb
jmp
jle
gs
xchg
jmp
nop
jl
or
pop
lcall
sbb
mov
push
xchg
int
jbe
lahf
sub
push
ja
cld
mov
lret
add
add
mov
cmp
adc
outsl
outsl
inc
dec
add
push
shrb
mov
cmc
cld
dec
jmp
or
subl
ret
aaa
fs
mov
loope
inc
dec
xchg
hlt
sub
movsb
push
pop
in
inc
xor
push
decb
test
inc
xor
sub
or
les
pop
lret
clc
je
ror
das
dec
cli
pusha
int
dec
jns
pop
hlt
les
daa
mov
push
out
enter
cmc
push
mov
or
sti
les
push
ja
push
jp
dec
add
pop
push
mov
je
cmp
dec
cmp
pop
test
in
ss
adc
leave
out
es
mov
jo
pop
addb
fnstcw
sbbl
push
push
xor
mov
mov
adc
push
jne
xor
lret
push
fldl
mov
cmp
cmpsl
movsb
ja
sbb
lahf
sub
xchg
rcrl
mov
inc
jecxz
and
aam
cmpsl
out
push
ret
adc
mov
mov
rorb
add
or
hlt
mov
sub
aam
inc
xor
xchg
pop
sub
mov
fbld
sbb
jae
cmp
popf
adc
jg
nop
movsb
ret
cmc
or
pop
push
dec
and
loop
mov
insl
sahf
outsb
iret
sub
jns
push
mov
sbb
aas
push
xchg
rep
lods
and
push
cmp
lcall
dec
in
mov
sbb
jb
cli
test
scas
loopne
mov
aaa
or
pop
xor
push
mov
or
jmp
add
sahf
gs
lahf
inc
test
cld
sub
pop
lods
call
outsl
jno
pop
aaa
adc
pushf
sbb
dec
mov
pop
inc
sbb
decb
sarb
mov
loopne
mulb
out
ja
loopne
ja
inc
pop
push
pop
xchg
cmp
adc
jno
pop
xchg
and
paddsw
xchg
test
jnp
jno
js
ret
in
jo
scas
push
lret
adc
cwtl
adc
push
test
and
push
sbb
mov
push
jae
push
and
lahf
xor
mov
cmp
mov
movsl
push
mov
pop
aaa
pop
mov
sahf
and
faddp
imul
sub
cltd
sbb
xchg
mov
aad
dec
xor
add
add
out
and
xchg
push
or
push
out
cmp
pop
mov
ficoml
fadds
mov
pushf
mov
jnp
lods
sbb
mov
mov
push
cmp
es
push
and
dec
xorb
rorb
sub
out
jne
inc
or
shll
inc
jg
lret
lret
scas
outsl
inc
pop
arpl
or
in
sub
movsl
nop
mov
mov
idivl
lock
mov
test
sbb
aad
dec
rcll
data16
jne
lods
sti
xor
imul
push
rol
sub
mov
fmuls
adc
pop
jb
lea
lcall
pusha
mov
cmp
push
xlat
add
leave
mov
jmp
ret
and
fs
xchg
mov
mov
pop
rcll
mov
dec
cs
cmp
inc
shll
adc
mov
jae
imul
popf
or
enter
cwtl
mov
jo
or
jae
push
xor
ja
mov
pop
test
subl
cs
pop
xor
jb
movsb
inc
ret
mov
jg
stos
pusha
stos
mov
pop
xchg
jl
lahf
fwait
leave
xor
mov
sbb
mov
aas
pop
push
sub
ja
cmp
fiadds
adcl
shr
in
inc
in
sub
gs
js
and
dec
pusha
imul
mov
test
imul
jbe
xchg
sbb
jmp
mov
xchg
inc
cs
mov
jp
push
loop
pop
cmp
rcll
es
mov
pop
push
mov
adc
mov
sbbb
mov
subl
scas
cmc
lds
xor
popf
pop
scas
xor
pop
das
into
pop
mov
mov
jns
xchg
xor
lods
mov
lss
jecxz
sbb
imul
jne
or
inc
cmc
add
dec
imul
rclb
pusha
sbb
mov
daa
int
fistpll
shl
add
inc
pop
lret
xlat
pop
mov
divb
mov
iret
xor
push
lock
lods
xor
pusha
mov
outsb
pop
sub
lock
xchg
les
scas
pop
in
mov
addr16
mov
sbb
adc
dec
test
xchg
into
mulb
xlat
arpl
mov
adc
rorb
ficoml
or
pop
iret
mov
fcoms
dec
lret
push
jle
dec
fnstsw
test
sub
nop
movsb
dec
mov
inc
adc
ss
lods
push
loopne
ret
or
mov
mov
mov
add
add
pop
or
test
xchg
out
icebp
gs
adc
divb
sub
insb
cs
or
gs
inc
test
inc
rcrl
add
fdivrl
dec
es
sti
lock
and
flds
cld
cmp
test
and
pop
data16
out
push
add
jge
imul
mov
mov
scas
dec
icebp
movsb
out
cmp
divl
jecxz
out
subb
cltd
int3
add
inc
lds
repz
adc
out
movsb
stos
cmp
fnstcw
jno
out
jmp
dec
shll
das
in
lret
loope
add
xor
ds
imul
xchg
popf
or
push
aaa
lret
fisttpll
jp
out
sub
push
pop
fsubrs
out
dec
pop
jb
inc
jmp
out
das
mov
shlb
imul
pop
push
in
push
repnz
fadds
sub
xchg
cltd
dec
mov
aas
adc
ljmp
paddb
popf
outsl
orb
dec
xchg
fwait
adc
bound
and
push
inc
mov
enter
xchg
jbe
lock
mov
insl
mov
mov
xchg
jg
ljmp
dec
jl
cmpsb
push
or
push
pop
xor
leave
mov
pop
loopne
sbb
shl
popf
scas
jno
ds
dec
iret
jmp
sub
or
loop
xchg
push
stos
enter
mov
fidivl
xchg
clc
mov
idivb
mov
sbb
lods
jle
push
cld
and
mov
jmp
adc
fidivrl
mov
add
test
movl
pop
hlt
jae
leave
cmp
in
mov
inc
js
arpl
push
cmp
mov
cmc
ficoms
filds
mov
push
push
fsubrs
or
dec
inc
rsqrtps
and
cwtl
cwtl
fmuls
or
push
sub
push
jae
lods
jbe
mov
jne
jno
test
ss
sbb
adc
popa
xor
ja
out
inc
cmp
mov
ret
mov
xlat
pop
test
out
adc
iret
andl
mov
in
cmc
shlb
mov
int
stos
sbb
jmp
jnp
cwtl
addb
push
imul
out
inc
fsts
in
stc
clc
jo
into
std
and
pushf
adc
mov
pop
bound
mov
cmp
lcall
add
mov
push
pusha
les
aas
jl
cmp
test
cmc
sub
loopne
jne
lds
insl
mov
nop
fildll
inc
pop
jbe
push
lcall
cs
outsb
mov
jne
cmp
lods
imul
jo
imul
mov
test
mov
xchg
jge
out
popa
mov
mov
and
fidivrl
insb
adc
loop
jecxz
bound
ljmp
mov
jo
sti
xor
pop
add
or
pop
jbe
add
inc
test
fs
xor
nop
fdivp
dec
in
pop
xlat
adc
add
push
lcall
push
mov
imul
cmp
aam
je
inc
lcall
ret
icebp
mov
dec
inc
js
push
divb
sub
lret
gs
jno
pop
pop
pop
cmp
lret
jge
pop
sub
and
adcb
imul
jp
mov
jecxz
ret
inc
outsl
mov
or
jo
adc
jg
and
add
or
inc
cmp
lock
sub
popf
mov
sbb
sub
cltd
insb
movsb
lahf
xlat
xchg
inc
push
and
fdivl
jns
jp
push
dec
test
fisubrs
fbld
ja
sarb
in
test
shl
jge
cwtl
and
faddp
and
pop
movb
loop
jbe
add
add
mov
cmp
dec
pop
jge
ret
mov
adc
jl
and
sbbl
aaa
out
lock
mov
lret
mov
sbbb
cmpl
pop
pop
sub
in
adc
jb
xchg
daa
sahf
pop
fs
ljmp
lahf
mov
dec
std
dec
loop
stos
pop
pushf
adc
and
popl
inc
shll
cld
dec
dec
xor
jl
stos
movsb
cmp
mov
mov
decb
jg
sbb
pushf
cmc
sbb
out
imul
cmpsl
or
or
mov
fidivl
adc
inc
push
mov
xor
sub
jo
and
jnp
jne
push
std
mov
jge
mov
sbb
mov
stc
mov
or
and
stos
sarl
mov
push
lret
xor
mov
shlb
test
mov
pop
mov
notl
jmp
fisttps
sahf
inc
sbb
push
gs
hlt
pusha
orl
xor
hlt
mov
lea
pop
out
xchg
add
and
push
andb
clc
and
test
adc
dec
je
sbb
lods
fdivl
lret
pop
cmp
cmp
sbb
jg
cmpsl
in
mov
mov
cwtl
mov
mov
jbe
lret
xchg
xor
and
jae
and
pop
lea
dec
mov
pushl
xlat
cmp
sub
sahf
mov
jno
push
mov
js
jae
std
xchg
add
mov
arpl
call
sub
fs
in
mov
sbb
jbe
adc
ljmp
lahf
popa
jmp
shlb
add
jle
cmpsb
inc
mov
test
jno
sbb
cmp
stos
lahf
bound
imul
gs
mov
xchg
jns
pop
jnp
rsqrtps
pop
aas
sahf
mov
push
mov
das
mov
pop
fcomip
dec
mov
adc
adc
cmpsb
jl
cmc
mov
mov
add
mov
fdivrl
push
scas
shlb
jo
icebp
in
dec
sub
fwait
lret
daa
xor
sbb
push
jae
add
sar
push
mov
ljmp
imul
fisubl
lcall
mov
ss
lret
mov
ficoms
or
int
mov
pushf
scas
out
sub
jp
setno
mov
loopne
adc
pop
mov
pushl
sbb
fildl
and
xor
shl
pop
jg
int3
jne
gs
xchg
sbb
pop
ljmp
sbbl
testw
setge
mov
add
icebp
lcall
add
jne
dec
mov
in
movsb
stos
mov
xor
stos
in
jecxz
cli
dec
test
iret
pop
inc
add
insl
cmp
sbb
or
arpl
int
fwait
enter
popf
jnp
sbb
pop
fstps
les
inc
xchg
ret
mov
cmp
outsl
pop
mov
imul
test
std
rcrb
cmp
push
or
adc
das
dec
push
mov
into
das
fisttpll
xchg
adc
dec
mov
in
pop
mov
xchg
divl
bound
xchg
and
loope
outsb
movsl
add
test
je
insl
test
repnz
jne
dec
sub
adc
push
cmpsb
sahf
sub
add
fwait
inc
inc
shrl
mov
mov
je
push
jmp
movsb
cld
aad
push
jge
stos
jle
xchg
mov
out
add
sub
test
xor
sub
add
jmp
push
push
js
rcll
push
pop
cld
cltd
jle
test
jae
fisttpll
loope
inc
and
push
pop
iret
rol
stc
outsl
push
add
out
pop
rclb
pop
pushf
sbb
push
or
jle
addr16
adc
pushf
outsb
lock
xchg
lds
xchg
pop
ffreep
mov
addr16
std
jge
add
jle
jae
sarl
js
dec
and
adcb
mov
xchg
jnp
ds
addr16
sub
jmp
cmp
fmull
mov
stc
popa
test
push
out
mov
or
in
push
call
stos
push
xlat
aaa
mov
insb
arpl
cltd
mov
cmp
cli
push
loop
les
std
cmp
jmp
push
les
inc
lahf
pop
cmp
mov
test
lcall
adc
cltd
movsb
jo
jbe
xor
or
mov
mov
mov
mov
mov
push
andl
mov
insb
inc
mov
ret
mov
jg
xchg
jmp
cmp
sarb
dec
xchg
pop
lret
invd
push
jmp
fildl
shl
cmpsl
dec
out
fdivs
les
mov
roll
jmp
loope
cld
xchg
pop
pusha
int
or
mov
mov
cs
jg
movsb
adc
inc
out
jno
movsb
sbb
mov
and
sbb
push
repz
adcl
jmp
pop
push
mov
mov
dec
popf
fisubrs
mov
inc
mov
test
fldcw
and
je
mov
cmp
imul
int
cmc
jae
jecxz
inc
xor
scas
lods
pop
jmp
dec
pop
sbb
and
pop
xor
jae
std
inc
mov
add
cs
mov
xchg
xchg
out
inc
add
cmp
mov
push
or
push
in
in
dec
mov
xor
xchg
inc
mov
icebp
mov
cmp
iret
nop
dec
mov
pop
inc
cmp
mov
imul
inc
repz
pop
xchg
jb
pop
jb
int
mov
pop
test
loope
test
push
std
cmp
xchg
xlat
inc
pop
jne
shll
outsl
dec
push
out
xor
and
in
xor
xor
xor
pop
out
test
xor
fadds
pop
ret
dec
dec
js
fs
stos
add
call
aad
xor
mov
imul
lods
jge
jbe
inc
inc
dec
dec
push
mov
int3
aad
adc
adc
stc
cmp
dec
or
mov
sub
mov
les
push
mov
sub
xchg
sbb
push
fiaddl
repnz
popf
xchg
push
and
adc
or
es
lock
cwtl
arpl
push
add
aam
bound
test
adc
sub
mov
ret
sbb
dec
mov
sub
aad
bound
add
aam
sbb
xchg
inc
inc
imul
ror
sub
dec
movsb
lods
xchg
out
rolb
or
and
adc
pop
lcall
nop
sub
push
xchg
into
xorb
and
stc
or
dec
xor
mov
sub
jp
cmp
in
cld
imul
dec
xchg
arpl
lods
cmp
mov
cmpsl
insl
into
xchg
add
adc
mov
mov
mov
ljmp
insl
xchg
or
and
hlt
out
outsl
out
les
sbb
jnp
arpl
jp
push
mov
lods
pop
cld
cmc
jmp
outsl
repnz
dec
out
mov
lods
ret
test
movb
test
rcrb
xor
jbe
mov
jmp
adc
adc
iret
mov
sub
sbb
shrb
bound
gs
repnz
push
jl
mov
test
jo
rcll
out
mov
mov
mov
mov
mov
xor
call
pop
cmpsb
xor
cli
les
cmp
std
repnz
mov
movsl
cmpsb
push
mov
je
sar
fstsw
mov
and
outsb
mov
es
mov
popf
mov
inc
jo
test
xchg
jae
in
mov
imul
cli
cli
stos
aam
int
jecxz
imul
push
imul
ss
jmp
imul
stos
push
pop
fbld
test
inc
es
inc
and
dec
jle
mov
cmc
or
fsubrp
or
int3
sbb
mov
subl
clc
mov
push
pop
or
and
or
jle
jnp
jno
mov
imul
dec
outsl
mov
lret
bound
xlat
adc
push
lock
adc
movl
xor
int3
mov
mov
pop
jne
cmc
or
push
mov
mov
das
rorb
aas
add
xor
xor
sub
sti
popf
lea
imulb
jecxz
out
cmc
ljmp
out
test
iret
xor
int3
and
jmp
mov
fisubl
ret
sbb
sub
push
imul
pop
cltd
mov
das
and
fcoms
dec
inc
sub
inc
or
leave
and
pusha
add
pop
les
pop
push
in
adc
lcall
and
imul
mov
mov
aaa
test
jmp
inc
jp
push
lret
ljmp
lods
mov
push
ret
pop
daa
or
cwtl
loop
xor
mov
cmc
sbb
orb
leave
dec
cmp
jae
push
xlat
push
test
ret
adc
push
xchg
xor
popa
and
mov
cmpsl
inc
xchg
inc
scas
int3
sbb
daa
lcall
int3
fdivrs
sbb
bswap
fsub
into
js
xorl
mov
xorb
or
aas
and
ret
lret
sahf
xor
int
mov
bnd
mov
sti
es
mov
es
adc
mov
jmp
in
inc
add
lea
in
mov
es
inc
in
ljmp
roll
jae
jbe
adc
adc
pusha
popa
repz
sbb
enter
jle
stos
pop
xor
push
out
sbb
mov
dec
sbb
push
aam
je
add
ljmp
add
rolb
sub
shlb
in
stos
adc
lods
inc
fs
aas
push
xor
rol
or
lahf
shl
mov
iret
mov
leave
sub
and
push
and
dec
pop
notl
dec
leave
jle
outsl
adc
repz
js
dec
push
int3
inc
aam
cmp
xchg
ret
rcrb
es
pop
sbb
xchg
add
or
sub
aam
into
push
sbb
push
xchg
jmp
cmp
xor
rcrl
sahf
jle
sub
pop
inc
pop
jmp
decb
lods
and
jecxz
dec
enter
jbe
lock
push
enter
sub
into
es
ret
mov
in
dec
mov
pop
mov
sub
jp
push
inc
shl
jnp
call
inc
adc
iret
push
idivb
into
mov
add
or
mov
fstl
test
add
outsl
and
sbb
mov
jg
fnstcw
in
fsubrp
fiaddl
inc
xor
test
int3
rorl
es
jmp
mov
jbe
sub
ja
lret
inc
outsb
stos
jns
mov
pop
leave
je
idivl
fsubl
lret
fildll
icebp
fnsave
sbb
cs
inc
cwtl
popf
jns
jnp
mov
adc
jp
repnz
dec
xchg
insb
in
xchg
cmp
cli
loop
stc
dec
cmp
adc
nop
jnp
vmwrite
leave
out
cld
sarb
mov
add
cltd
and
push
cmp
inc
or
js
out
sbb
shrl
subl
pop
pusha
sbb
mov
dec
out
pop
adc
and
push
dec
into
push
xchg
xor
shrl
jae
into
push
popf
les
sbb
loop
or
ret
mov
daa
push
aas
pop
dec
mov
leave
loope
jo
add
ja
pop
lods
add
xchg
outsl
dec
and
add
inc
lsl
push
sub
sub
and
or
faddl
mov
mov
clc
push
push
push
push
jne
cmp
cltd
data16
pusha
rcl
scas
rclb
sub
xchg
gs
xor
fbstp
inc
rcl
sub
imul
adc
movsb
dec
adc
and
mov
enter
es
nop
mov
scas
int
pop
pop
cmp
jl
mov
adc
out
test
cmp
pusha
ret
clc
stc
or
mov
loopne
mov
mov
cs
mov
sbb
clc
pop
adc
in
aam
sub
dec
push
mov
stc
push
lret
xlat
mov
push
sbb
sub
bound
push
sbb
aas
push
pop
sub
sbb
mov
or
movsb
mov
sub
sarb
jge
xor
js
hlt
out
pop
sbb
popf
sbb
insl
test
pop
sbb
adc
lock
shlb
rclb
push
mov
pop
dec
sbb
push
and
sbb
mov
inc
jbe
pop
sarb
pop
rol
test
dec
enter
or
sahf
sub
nop
mov
insb
dec
jb
pop
mov
pop
or
pushf
scas
or
nop
inc
fsubrl
add
jge
dec
push
dec
orb
jb
cli
inc
mov
popf
imulb
add
std
call
scas
cli
movsl
iret
fistpl
pop
arpl
sbb
cmp
dec
sub
shr
cmp
loopne
stos
xchg
aam
mov
pop
xor
sti
ret
mov
push
mov
jmp
out
add
in
stos
jg
emms
ds
sahf
enter
hlt
scas
je
adc
testl
dec
push
or
cmp
int3
fiadds
loop
shrb
jg
int3
sbb
enter
mov
iret
or
jns
test
cld
addr16
clc
mov
and
mov
popf
xchg
addr16
hlt
pop
in
pop
js
enter
pop
imul
add
adc
and
or
cmp
and
into
outsl
pop
cmpsl
dec
pop
push
mov
stos
les
cmpsb
lds
icebp
cld
mov
xchg
aam
or
hlt
xchg
jnp
and
je
jmp
pop
stos
xor
jae
dec
mov
jne
inc
in
adc
mov
fsubrl
js
push
sbb
xchg
and
clc
cs
pop
xchg
fwait
out
orb
es
iret
add
push
fstpl
pop
lods
pop
es
addr16
ss
es
sub
or
jns
inc
std
out
sbb
mov
into
ffree
pop
flds
std
int
test
xchg
and
dec
xchg
fadd
pop
cltd
adcl
loop
and
jne
jp
das
insb
dec
or
addr16
sar
loopne
shll
and
mov
xorb
bswap
test
mov
or
das
std
fimuls
mov
jg
adc
xchg
fstpt
gs
lahf
sbb
push
or
loop
mov
imul
and
or
repnz
das
insl
ficoms
jg
in
jl
jl
in
pushl
jle
ljmp
je
dec
mov
fwait
xchg
mov
movsl
ja
shrb
mov
sbb
movsl
push
lret
xchg
or
mov
adc
jne
mov
imul
outsb
mov
add
jge
and
lahf
mov
mov
out
jbe
insb
ret
rol
dec
pop
subb
fisubl
dec
pusha
jns
sbb
adc
mov
test
sub
push
fwait
mov
push
andb
idivl
in
test
mov
jg
and
xchg
or
inc
jne
pop
jb
jecxz
cmp
scas
call
cmp
pop
in
push
mov
insb
mov
mov
push
push
ret
hlt
mov
popa
push
rorl
ret
cmp
cld
xlat
fs
pop
xchg
pop
mov
cli
cwtl
mov
sub
int3
test
sahf
scas
jp
jmp
xchg
lds
aaa
sub
jnp
jge
das
inc
aaa
mov
les
sahf
testl
rol
xchg
and
in
jge
jne
mov
test
fsubrl
add
sbb
and
sbb
cwtl
adc
lods
jae
lret
movsb
loopne
movsl
test
sub
push
orb
sti
in
int
cmp
call
stos
popf
pop
int3
test
dec
jl
and
adc
aam
test
dec
fwait
mov
inc
push
popa
mov
xchg
pop
test
out
rcrb
fnsave
nop
and
mov
sbb
sar
sbb
mov
ficoms
je
repz
mov
cs
jne
call
ss
jmp
cmp
xor
je
sbb
test
movsb
sbb
jecxz
cltd
jecxz
pop
inc
jae
shl
lret
stc
xchg
push
fcomps
mov
push
loopne
loop
push
jno
mov
pop
push
or
cwtl
pusha
int
dec
lds
popf
jg
or
add
aas
pop
push
inc
push
loop
mov
push
lcall
in
inc
inc
and
add
push
dec
mov
imul
clc
cltd
dec
xchg
icebp
sub
jne
in
mov
mov
or
xor
out
iret
xchg
jmp
inc
xchg
mov
mov
test
xor
dec
adc
pop
aam
sub
in
cs
or
inc
xor
sub
lds
mov
and
ret
jns
jae
and
hlt
dec
jns
stc
mov
pop
dec
mov
sbb
je
mov
mov
add
jecxz
pushf
out
add
inc
mov
sbb
movsl
inc
pushf
insb
loopne
push
push
xor
bound
or
popa
sbb
test
xchg
xchg
pop
jno
stos
push
loopne
loope
sahf
add
loop
outsl
pop
cltd
mov
sub
or
mov
cmc
dec
push
insb
fiadds
sahf
pusha
pop
mov
mov
stos
and
fldcw
pop
or
popf
leave
mov
mov
mov
je
mov
push
push
scas
sbb
sub
loop
pop
in
loopne
sbb
cmp
loopne
push
arpl
inc
push
xchg
and
inc
mov
test
or
mov
movsb
hlt
call
mov
bound
mov
jb
sti
cltd
push
movsb
or
int
insb
in
lods
push
push
sbb
cwtl
dec
jne
popa
inc
jmp
or
jg
jbe
add
ret
sbb
or
ror
stc
push
dec
mov
iret
aas
mov
ja
aaa
sub
jle
push
jae
mov
cmp
out
pushf
adc
xchg
insl
mov
pop
push
mov
sbb
and
cmpsl
nop
or
push
lods
jnp
pop
rolb
mov
fwait
mov
or
fwait
scas
add
mov
cmp
xor
xor
and
or
pusha
sbb
xchg
mov
or
pushf
les
sub
popf
or
sbb
pop
scas
insl
xchg
push
jecxz
mov
push
jns,pn
dec
jge
imul
pop
mov
mov
fdivrl
sahf
enter
stos
outsl
lcall
inc
dec
sbb
andb
mov
sti
lcall
and
adc
adc
add
jno
add
fnstsw
jno
cwtl
fcoms
or
in
dec
je
stc
mov
aam
xor
in
push
scas
cmp
sub
das
clc
mov
std
cwtd
pop
add
mov
inc
push
adc
aaa
dec
js
add
fstl
xor
dec
xor
dec
add
or
into
int
xor
pop
je
out
sub
mov
add
inc
xor
call
lret
icebp
in
fs
sub
or
fwait
pandn
daa
fdivl
dec
nop
dec
add
bound
ffreep
in
xchg
mov
cmp
arpl
loop
cld
mov
jp
hlt
cli
imul
lcall
ljmp
in
lods
arpl
push
cmpsl
jnp
push
stos
sbb
xchg
inc
aam
pop
cmpsb
in
call
cld
sbb
sahf
xchg
out
xorl
sti
stos
inc
mov
cmp
notb
inc
pop
adc
out
flds
sbb
mov
mov
in
repnz
int
fsubrp
lcall
int
out
push
cmp
mov
mov
fmull
add
jg
xchg
sbb
push
outsl
push
pop
xchg
push
fsubr
push
mov
inc
js
jl
sub
pop
push
push
jne
pop
pushf
popf
mov
xchg
data16
xchg
es
insl
into
enter
adc
adc
out
fimuls
adc
in
cmp
cmp
xchg
push
dec
aam
inc
outsb
arpl
jl
mov
enter
lret
xchg
insl
push
jb
sarb
popf
sahf
cmp
mov
mov
push
mov
xchg
aaa
push
cmpsb
out
mov
les
cmp
mov
xor
xor
outsl
testl
icebp
scas
lcall
mov
ret
mov
pop
lret
lret
xchg
loop
out
jmp
pop
dec
pop
pop
rolb
mov
jl
lret
fnstsw
repnz
push
popa
imulb
pop
dec
fimull
pop
iret
stos
fimull
mov
lods
mov
mov
imul
pop
outsl
decb
and
push
push
ljmp
xor
xor
adc
lahf
ret
aad
lret
fisubrs
inc
bound
add
inc
cmp
jbe
push
lock
mov
outsl
and
push
pop
add
or
movb
lahf
mov
fs
xchg
fcmove
int3
cli
lahf
mov
fisttpll
call
cltd
hlt
pop
add
popl
mov
cs
cltd
cmp
fst
mov
test
sub
ss
dec
mov
push
jae
enter
in
ret
ljmp
imul
mov
xor
fs
mov
inc
cmpsl
outsl
jmp
and
jge
adc
test
push
xchg
lods
out
xor
inc
pop
cmp
xlat
int3
dec
lcall
jb
pop
jb
ficomps
cltd
mov
les
inc
nop
icebp
outsl
lods
lcall
cwtl
mov
mov
or
ret
test
pop
shlb
je
adc
stc
lahf
in
push
jecxz
enter
push
shll
dec
std
and
dec
aad
fnstsw
jns
out
cs
xchg
pop
mov
cmp
mov
cmpsb
xchg
outsl
popf
idiv
add
movsl
fsts
xor
xchg
insb
jecxz
gs
pop
push
pop
mov
repnz
or
mov
cmp
sub
jp
xchg
aad
lods
inc
into
out
mov
push
stc
mov
scas
ret
loope
jmp
xchg
jae
pusha
std
repz
mov
xchg
icebp
xchg
pop
popa
mov
lock
out
cwtl
enter
sbb
xor
hlt
and
dec
inc
mov
adc
imul
in
clc
pusha
dec
push
inc
jmp
test
rorb
cmp
test
inc
repnz
pop
pop
ss
mov
sahf
mov
idivb
sti
xor
in
mov
cmp
sub
mov
aaa
xchg
mov
mov
je
hlt
loopne
add
add
xchg
xchg
push
mov
lret
mov
and
lret
testb
repz
je
jmp
cltd
dec
push
scas
add
sub
cs
push
loope
adc
add
movq
push
add
lods
mov
mov
cwtl
xchg
xchg
xchg
out
mov
ljmp
aad
lds
movsl
sub
xchg
mov
imul
bound
dec
jae
rolb
mov
daa
daa
mov
popa
xchg
ret
repnz
scas
nop
pop
icebp
das
into
out
or
mov
nop
inc
daa
sub
sub
lods
dec
jo
mov
movd
inc
or
pop
mov
and
and
push
fadds
jns
cmp
cmp
invd
ret
ja
stos
pop
daa
lret
loop
pop
push
imul
fbstp
xchg
leave
jo
test
mov
mov
inc
inc
faddp
js
xor
test
ja
xor
mov
add
inc
xchg
rcrb
push
inc
popf
repnz
push
jmp
dec
xchg
jecxz
jb
loopne
cmp
mov
scas
dec
rep
jecxz
ficoml
xor
xchg
cmpsl
ds
cwtl
stos
shll
sub
mov
mov
div
ret
bound
in
test
stos
int3
sbb
mov
dec
lock
in
mov
pop
pop
int
and
nop
xlat
push
mov
add
mov
pop
add
fimuls
push
int3
mov
repnz
jo
repz
fcoms
sti
sbb
xor
addr16
and
push
mov
cld
test
adc
inc
dec
popf
jb
out
aas
jecxz
addl
cltd
insb
popf
pop
lahf
push
lcall
push
inc
or
in
test
dec
or
mov
aaa
mov
test
popf
sti
or
pop
and
pop
mov
xor
fidivrs
xor
jnp
out
ds
fs
not
iret
mov
cmp
push
fmull
mov
aaa
hlt
test
jmp
jl
daa
xchg
xchg
out
mov
loopne
mov
test
cmp
jnp
insl
clc
cmp
hlt
inc
and
add
fimull
rorb
and
inc
dec
jle
pop
mov
inc
or
arpl
add
dec
lcall
push
lahf
std
jo
xor
aad
ror
daa
orl
mov
aad
xorl
das
sbb
daa
jo
dec
add
mov
pop
je
xchg
xor
aas
imul
pop
stc
std
or
xchg
mov
cmp
xchg
jmp
movsb
ficompl
jge
test
in
push
xor
shr
cmp
adc
xchg
gs
std
jg
sarl
std
sbb
fmuls
movsl
add
fucom
mov
sbb
dec
jecxz
popa
cmp
jl
mov
sub
in
movl
int3
xchg
push
mov
sbb
mov
scas
pop
outsb
jno
cld
out
mov
daa
stos
xor
inc
xor
sub
or
test
cltd
in
insl
ja
xchg
xchg
mov
ret
push
cmpsl
loope
push
cli
fwait
shrb
xorb
sbb
add
sbb
in
push
call
sbb
aaa
cmpsb
mov
and
jle
int
daa
leave
cs
stos
popf
jno
adc
jle
xchg
nop
ljmp
mov
call
leave
xor
cmpsl
fdivs
or
outsb
or
cwtl
mov
add
lods
pop
mov
jo
cmc
or
stc
imul
xchg
adc
and
iret
or
cmp
es
lret
repnz
mov
xchg
pop
pop
jns
addr16
lds
sbb
pop
stos
sbb
jb
out
sbb
mov
jmp
cmp
data16
aaa
out
rolb
jnp
imul
mov
dec
dec
mov
jmp
jmp
xor
sub
nop
xchg
add
dec
outsl
and
lret
aam
mov
call
inc
cltd
test
scas
or
adc
fcomip
les
idivl
or
popa
insl
lock
sub
jle
adc
lds
add
add
frndint
pushf
movsb
lret
push
arpl
test
sahf
adc
lcall
or
bound
and
fs
outsl
pop
pop
sarl
sub
inc
xchg
rorl
dec
call
int
fs
push
xchg
inc
xor
cmpsb
pop
adc
lahf
leave
sbb
or
insl
mov
arpl
fs
pop
mov
pusha
mov
and
repz
inc
jecxz
test
maskmovq
divl
add
testb
rcll
aas
or
and
cmc
mov
fistpll
inc
std
mov
popa
pop
ret
fdivrl
add
loope
popf
aaa
sahf
pushf
push
lcall
icebp
and
lods
fcompl
js
and
jp
ffreep
lods
fistpll
cltd
sbb
mov
notb
or
xchg
lret
loop
iret
or
pop
out
idivb
mov
mov
dec
lock
add
add
in
add
test
mov
xchg
sub
out
cltd
cmc
gs
test
jp
xor
dec
and
rep
dec
ffree
mov
mov
or
pop
pop
mov
test
push
push
jb
imul
jne
daa
in
je
mov
in
cmc
rorl
repz
mov
pushf
fwait
add
movsb
mov
push
loopne
cmp
icebp
xlat
andb
or
sbb
aas
popa
leave
xchg
fbstp
pushf
leave
xor
cmpsb
inc
jae
sti
xor
sbb
cmpsl
rcll
xchg
jo
mov
sub
mov
clc
inc
out
mov
cltd
xor
out
sahf
adc
cmc
pop
xor
sarb
inc
cmpsb
jmp
add
adc
sub
push
inc
in
pop
lret
mov
dec
fdivrl
and
jle
dec
sti
mov
inc
mov
pop
xchg
test
cmp
jle
test
jecxz
xor
fcoml
adc
mov
jge
jns
ret
adc
jns
push
inc
jecxz
mov
inc
xchg
addr16
cltd
mov
jecxz
sti
jb
leave
push
adc
rcll
inc
mov
mov
dec
fs
and
iret
test
push
push
arpl
add
fs
sbb
sub
xlat
and
push
mov
pop
sub
scas
pushf
pop
sbb
ds
out
xor
call
pop
push
and
dec
or
xlat
cmp
lret
dec
sub
mov
mov
pop
xlat
shrl
or
jp
aad
cmp
cmp
xchg
xchg
dec
popa
or
xchg
movsl
mov
inc
rcrb
mov
or
pop
rolb
dec
movsb
sbb
nop
mov
js
push
jl
pop
push
cli
push
jg
jl
int3
sbb
cmp
jmp
dec
pop
xchg
cld
push
aam
jge
inc
jp
loopne
dec
test
mov
jmp
lods
mov
push
jbe
mov
pop
aas
push
movsb
sub
aam
jecxz
shll
cmpb
add
test
cwtl
mov
mov
pop
pop
pop
add
sbb
fwait
out
lea
imul
ret
xor
sub
or
mov
ss
jmp
sub
pop
stc
mov
jbe
and
popa
push
js
sbb
push
ss
adc
repnz
fwait
xchg
push
outsl
ds
popa
movsb
add
or
or
lret
push
ds
mov
sbb
sub
mov
rolb
cld
jle
xchg
in
push
xor
and
clc
push
enter
movsl
cwtl
and
leave
adcl
loopne
dec
push
inc
sub
sbb
mov
xchg
cmp
dec
test
push
clc
dec
pop
mov
push
dec
adc
dec
fdivs
test
xchg
push
in
lahf
popa
xor
sbb
push
sub
adc
sbb
jge
lods
mov
jne
xchg
sub
popa
xlat
push
testb
fcompl
lea
cmp
push
sbb
add
cwtl
cmpsb
div
sbb
dec
loope
pop
push
sub
dec
mov
mov
imul
lret
fnop
ret
adc
fucomp
rolb
pop
notl
mov
sbb
notb
mov
dec
push
mov
fcompl
data16
jns
mov
push
imul
xor
lahf
stos
insb
inc
call
adc
lret
jl
enter
andl
jl
mov
cli
sarl
fsts
lret
mov
or
pop
inc
pushf
mov
mov
js
mov
inc
out
xchg
jl
push
inc
cld
ljmp
ss
cmpsl
imul
jb
dec
loope
push
mov
sub
xor
cld
stc
jae
dec
andl
lret
or
lret
test
pop
inc
lret
mov
mov
scas
mov
inc
inc
scas
inc
cmp
mov
hlt
sbb
and
mov
mov
dec
arpl
roll
pcmpeqd
add
cmpb
push
xchg
imul
mov
pop
cltd
ret
mov
xor
ret
dec
cmp
in
loope
ror
iret
sbbl
mov
jo
outsl
popf
cmp
sbb
in
pop
ffree
push
lods
in
and
xor
pop
mov
pop
or
pop
mov
pop
lds
pushf
pushf
ss
xchg
inc
aam
inc
dec
push
mov
mov
inc
and
notl
enter
jmp
sahf
jp
mov
push
or
and
or
test
pop
inc
icebp
add
xchg
into
xchg
out
fiadds
mov
ljmp
repnz
cld
jp
add
fbstp
cld
xchg
lods
sub
shll
ljmp
hlt
imul
insb
push
dec
sti
push
cwtl
movsl
lahf
lret
shlb
dec
inc
mov
mov
je
inc
adc
outsl
pop
iret
ret
fildll
lea
pusha
popa
jne
mov
jmp
mov
dec
and
cs
daa
ret
add
cmp
and
and
stc
jbe
pop
sahf
or
push
mov
inc
push
jg
scas
roll
rolb
insb
lret
or
sahf
out
outsl
cs
pusha
repnz
xchg
stos
cwtl
arpl
cwtl
fsubs
inc
pop
addr16
lods
jl
lahf
stos
cmp
sbb
mov
pop
push
mov
movsb
push
mov
arpl
or
enter
add
das
mov
lret
lret
icebp
add
add
dec
jo
scas
or
cmpsl
jnp
push
test
adc
cmpsb
jo
pop
mov
call
or
cmpsl
mov
in
mov
rol
jg
shll
mov
cmpsl
in
mov
jmp
inc
insb
nop
push
and
insl
adc
cmp
stos
fstpl
add
fwait
test
mov
outsl
pop
cmpsb
dec
cmp
orb
js
dec
cmpsb
push
stos
rorb
das
adc
movb
outsl
insl
mov
shll
inc
ds
mov
mov
inc
sbb
jb
sub
packuswb
mov
or
movsb
jne
pop
mov
pop
mov
jns
push
popa
out
mov
push
dec
mov
inc
lcall
dec
pop
jl
stc
jbe
xor
mov
fs
cmpsl
or
pop
jp
mov
int3
daa
dec
test
sub
lds
and
pop
inc
arpl
bound
in
cmp
in
and
test
sub
add
pop
fcomip
inc
mov
repnz
scas
dec
or
mov
sbb
push
mov
pop
cmpsb
aad
roll
dec
pop
jns
inc
and
or
movsb
inc
inc
pop
fdivrs
or
ret
das
xchg
into
push
sbb
sbb
inc
aas
sahf
les
jl
cmpsl
scas
push
mov
jle
inc
adc
push
into
mov
mov
mov
push
mov
in
in
out
cmp
ss
jo
or
idiv
dec
cmc
xchg
mov
mov
pop
dec
inc
jl
dec
rcrb
sub
dec
movl
inc
fstpt
add
sahf
or
jnp
inc
fdivrs
sti
add
jmp
cld
xchg
aam
ja
pushf
pop
push
bound
and
ds
jg
inc
or
xor
sbb
mov
das
fincstp
cld
test
es
shlb
add
pushf
in
add
pusha
adc
lods
jnp
xchg
xorl
jne
and
icebp
and
fstpl
and
and
or
aaa
mov
push
and
in
scas
push
inc
dec
cmp
push
imul
xor
aam
aam
lds
insl
push
push
and
imul
mov
cmp
xchg
jbe
adc
cmp
adc
add
push
outsl
test
push
push
mov
or
push
pop
mov
les
sub
dec
fwait
dec
icebp
out
dec
rorb
sub
jp
ret
orl
out
mov
orl
adc
cmc
sbb
push
dec
iret
leave
jmp
push
out
cli
ja
lods
xor
add
repz
aam
mov
mov
push
and
inc
dec
out
jecxz
mov
and
outsb
pop
clc
fistpll
mov
aaa
movsb
add
sti
aas
dec
cltd
in
cmp
sub
arpl
or
negb
ret
pusha
adc
stc
pop
xchg
ret
inc
int3
push
sub
popa
inc
or
add
mov
add
push
into
lcall
nop
in
dec
xchg
cmpsb
and
mov
xchg
inc
sbb
push
push
idivb
stc
xchg
cmpsl
sub
add
xchg
fdivrs
stc
je
popf
xor
mov
stos
cmpl
mov
outsl
jmp
enter
inc
mov
idiv
test
fs
push
inc
test
dec
mov
pop
lahf
imul
into
das
fcompl
pop
rcll
fld
negl
inc
mov
pusha
xor
ret
dec
or
sub
rolb
les
das
adc
cld
fistl
push
jae
insl
aam
cmpsl
cmpsl
inc
mov
je
xor
jmp
in
icebp
faddl
ficomps
push
add
lahf
adc
fs
push
jmp
pop
push
jle
jmp
xor
adc
or
hlt
inc
rcll
mov
rcll
aam
pop
rcll
push
loope
repnz
cmpb
imul
jl
lea
imul
mov
xchg
jl
inc
es
mov
add
pop
mov
pusha
fbld
push
xor
pop
mov
shrb
pop
mov
in
mov
sub
aad
cli
sbb
jo
inc
pop
add
or
pop
lea
and
jl
push
call
pop
dec
push
aas
ret
mov
inc
inc
mov
push
loope
sub
scas
or
test
dec
fistpl
cmp
or
pop
mov
arpl
test
test
call
movsb
push
sbb
sub
clc
cwtl
cmp
mov
stos
fstpt
data16
or
scas
loopne
pop
mov
fnstsw
add
nop
arpl
push
mov
mov
aas
and
jo
loopne
nop
or
pop
movsb
shlb
cs
sub
add
xor
shll
push
inc
push
mov
movsl
add
sbb
pusha
xor
and
shll
ljmp
xor
std
sbb
sbb
stos
cmp
sbb
out
inc
jle
add
adc
cmp
xor
mov
and
ret
jbe
stos
nop
clc
jbe
enter
mov
add
inc
mov
or
sub
dec
dec
movsb
xchg
imul
arpl
inc
push
xchg
inc
outsl
or
inc
fists
daa
fldcw
aam
loope
xor
xchg
das
int3
xor
fmul
or
mov
sub
aas
insl
fstps
lea
cmc
insl
push
and
dec
popa
cmc
dec
xchg
out
xor
ljmp
insb
scas
imul
scas
pop
leave
push
pop
adc
gs
scas
pop
jb
ret
xlat
sub
test
out
push
mov
pop
push
lret
fidivrs
lea
dec
out
push
mov
sub
int3
bound
jle
jg
mov
xchg
mov
daa
jb
das
es
test
cmp
xchg
repz
lahf
call
sbb
pop
push
fimuls
imul
lods
push
int3
movsb
adc
fisubrs
daa
aas
hlt
jne
ret
mov
je
push
sub
pop
inc
clc
lret
inc
out
inc
xor
mov
push
movsb
push
shlb
lret
cli
lret
xor
adc
stc
inc
rcll
xchg
iret
pusha
dec
cwtl
mov
cmp
inc
imul
jae
rolb
push
bound
ljmp
cmpsb
mov
out
ja
aad
aaa
mov
cmc
inc
mov
adc
sbb
rol
movsb
jne
clc
stos
jo
mov
js
test
and
adc
cmp
push
sahf
mov
lret
dec
imul
sub
adc
pop
ret
js
xchg
xor
pop
fisttpl
xchg
inc
mov
test
ret
cmp
jmp
and
andb
dec
fdivrl
pop
inc
test
sub
int3
push
inc
cmp
movsb
cwtl
fistpl
jo
or
or
ljmp
dec
fmull
mov
push
inc
out
roll
fistl
lods
fnstcw
jecxz
push
fcoms
dec
lods
sub
pop
leave
mov
loop
push
lods
decb
xchg
dec
add
ret
xchg
add
pop
add
out
pushf
in
and
fcomp
bound
movl
mov
mov
mov
mov
int3
fcoms
sub
pop
xchg
leave
adc
ljmp
adc
inc
dec
sbb
push
sub
pop
lcall
push
inc
dec
movsb
cmpsl
adc
or
cmp
push
mov
in
xchg
mov
insl
pop
mov
call
lods
mov
sbb
fwait
push
cmp
andl
add
in
inc
jmp
arpl
inc
pop
xchg
and
dec
lret
out
shrl
ret
jp
xor
inc
sub
pop
arpl
hlt
xchg
int3
jb
jg
jae
les
push
jnp,pt
or
mov
push
mov
add
and
hlt
cmp
push
push
adc
pop
and
gs
sbb
push
mov
or
call
jb
jb
push
dec
fistps
mov
fbld
iret
lock
xor
into
daa
cmp
jmp
sar
subps
mov
gs
out
mov
xchg
mov
mov
push
adc
push
lret
popf
das
fnstsw
mov
jecxz
outsl
shll
in
pusha
push
adc
xor
jmp
or
xchg
pop
out
xchg
pop
scas
mov
outsb
mov
arpl
ficomps
or
cld
bnd
and
test
rol
out
adc
pop
add
imul
decb
repnz
push
sbb
xor
idivb
repz
xor
sub
mov
lock
lds
loopne
loopne
or
es
lods
or
and
fnstsw
in
stos
jb
loopne
xchg
push
shll
add
outsb
or
lock
movl
jl
push
iret
fstl
pop
dec
aaa
xchg
imul
pop
ret
mov
ret
push
fistpll
jbe
adc
movsb
adc
push
fnstsw
dec
sbb
sahf
fnsave
in
outsl
sti
addr16
in
adc
sub
lcall
aas
inc
lock
rcrb
push
dec
xor
xchg
ror
mov
cwtl
cmp
mov
mov
cli
divb
mov
pop
lret
sub
das
jne
pop
pop
shll
or
cmp
inc
xchg
xor
out
stos
cmp
call
mov
mov
nop
push
pop
inc
or
mov
inc
mov
jo
xchg
outsl
cld
push
mov
das
xchg
jns
adc
fwait
stos
mov
mov
jbe
imul
mov
xor
nop
xchg
notb
jmp
mov
pop
int3
fwait
push
pop
cld
pop
pop
loop
mov
inc
popf
in
scas
mov
daa
cmpsl
out
lods
sub
loope
test
fcoml
shl
test
push
nop
mov
ficomps
loop
or
out
leave
and
xor
or
xor
fstpt
and
loop
pop
pop
ja
jle
push
out
or
xchg
jp
mov
cmp
das
fnstenv
imul
ja
dec
popa
aam
and
mov
push
gs
xor
out
inc
xor
jecxz
jle
test
sub
addr16
sbb
cmpsl
adc
sub
sbb
lret
xchg
lds
and
lcall
sbb
ljmp
cwtl
outsb
lods
xor
pop
test
movsl
mov
jb
adc
cli
add
icebp
jecxz
lahf
std
dec
cld
dec
iret
leave
es
and
jle
xor
arpl
and
add
aaa
push
mov
jno,pt
in
popa
fidivrs
adc
or
mov
enter
into
movsb
outsb
es
fcmovu
cld
xor
sub
pop
stos
pop
enter
je
rolb
aad
cltd
push
loop
lcall
data16
in
xor
fs
outsb
movsl
jmp
adc
sarl
xor
xor
fisubrs
dec
mov
inc
loop
sub
xchg
adc
jmp
add
inc
aaa
jg
mov
out
jmp
and
mov
xchg
sub
aas
push
pop
dec
push
cli
repnz
aad
popf
push
or
outsb
sbb
loop
ret
lcall
add
movsb
lret
add
insl
test
lea
loop
pusha
outsl
outsl
das
or
adc
sub
mov
fnstsw
adc
out
xchg
bnd
dec
fcoms
adc
lea
cmp
addr16
push
mov
sbb
dec
push
or
aaa
nop
jbe
cwtl
push
pop
loopne
fistps
shll
cmc
outsl
and
or
addb
sbb
out
lahf
mov
push
jg
xchg
push
cmp
inc
fsubrs
adc
repz
int
out
push
mov
mov
adc
clc
lods
aam
data16
add
or
popl
dec
aam
mov
mov
popa
add
sbb
mov
jb
push
adc
das
lahf
pop
inc
pop
in
dec
dec
lods
mov
insl
jns
scas
add
sub
es
js
dec
adc
inc
jae
pop
out
std
pop
pop
push
ss
ja
mov
xchg
fwait
mov
int3
add
mov
insb
mov
scas
lret
inc
arpl
imul
dec
iret
sub
mov
imul
inc
add
sbb
sti
mov
jo
pop
xchg
es
xlat
iret
fldt
fisubrs
cld
adc
adc
adc
sti
pop
pop
pop
mov
outsl
aaa
push
out
cli
notb
inc
pop
popf
fists
adc
cltd
ljmp
push
xchg
and
stos
dec
or
fistpl
add
test
inc
js
sbbb
rcrb
frstor
mov
imul
movsb
fdivs
mov
jns
add
or
inc
add
scas
cmp
inc
cmpsb
gs
add
call
into
inc
pop
rcrb
in
mov
mov
jb
or
pop
out
ret
outsl
je
rorb
imul
sub
imul
inc
int
and
aad
jecxz
int
aas
push
push
in
stc
icebp
into
mov
addl
pop
xchg
mov
inc
mov
push
fs
pop
cli
lods
pop
mov
mov
nop
jns
out
enter
popf
pop
pop
pop
ljmpw
repnz
inc
sbb
shlb
push
mov
imul
arpl
sub
repz
lock
and
and
ljmp
add
or
cld
or
sbb
add
and
jbe
xchg
mov
cli
sbb
jge
sub
sub
sub
daa
dec
hlt
fstps
jg
cltd
dec
sti
cs
out
mov
pop
mov
fdivl
frstor
inc
xchg
insb
xchg
jo
adc
lods
addb
xchg
in
dec
ret
jno
push
sub
pop
ret
mov
test
mov
push
lods
jecxz
scas
insb
sbb
pop
adc
push
sbb
dec
dec
fdivl
inc
in
lret
repnz
std
test
sahf
cmpsb
repz
cmp
or
pop
cmpl
sub
into
sub
mov
pop
ljmp
xchg
xor
in
push
mov
mov
sbb
dec
mov
inc
loope
mov
push
sbb
pusha
push
inc
push
mov
stos
sub
iret
aam
iret
hlt
sbb
xchg
aam
sbb
in
sbb
add
aas
mov
adc
dec
movb
fnstenv
add
adc
xchg
test
pop
pusha
add
sbb
insb
cmpsl
pop
xor
or
pop
scas
fs
popa
push
xchg
jne
and
mov
jnp
popf
movsb
in
or
inc
jge
mov
push
sbbb
jae
xor
add
pop
push
outsl
push
push
sub
cmp
dec
xor
lock
adc
inc
lea
dec
lahf
sub
xchg
mov
aas
dec
daa
push
push
lret
dec
mov
push
mov
adc
js
jne
mov
push
imul
gs
cli
mov
fcoms
pop
gs
xchg
aad
mov
cmp
dec
testb
out
out
insl
adc
or
rclb
leave
push
lods
inc
and
scas
dec
loope
mov
pusha
lahf
lds
pushf
or
dec
lods
mov
shl
cltd
lahf
add
das
das
or
sbb
or
cltd
std
push
les
and
cmp
xor
pop
sub
pop
xchg
lahf
imull
jl
insl
int3
mov
mov
xorb
in
inc
xchg
leave
mov
cmp
push
and
es
mov
aaa
pop
push
dec
mov
stos
fmull
jge
push
shl
cli
popa
int
sbb
cmpsl
xchg
jnp
add
in
mov
sbb
or
std
add
dec
mov
jnp
xchg
dec
test
in
sbb
fwait
pop
loopne
push
nop
and
push
leave
xchg
in
loope
jg
lods
cmpsl
or
int3
pop
mov
push
sbb
ret
jmp
add
inc
push
test
mov
inc
scas
aad
ljmp
in
dec
xor
xor
shlb
fiadds
cmp
call
add
out
movsb
les
jb
or
out
leave
lock
dec
int3
push
add
mul
push
out
xor
sub
push
inc
test
push
int3
pop
in
jle
insl
mov
test
pop
adcb
popa
inc
imulb
aaa
mov
movsb
inc
iret
xor
testb
push
push
test
add
fsubrs
adc
loope
out
add
cmc
stos
dec
xor
mov
inc
orb
inc
aaa
inc
sub
mov
xchg
popf
lds
mov
push
popl
inc
pop
pop
fnstenv
insl
outsb
xchg
mov
rcrb
push
stc
and
imul
pop
mov
lret
dec
cmp
push
insb
pop
outsb
push
sbb
rcrb
cmp
push
fiadds
lret
sbb
mov
sub
movsl
jns
jno
cld
aad
inc
jo
xchg
push
cmc
push
inc
cmc
aam
ljmp
and
mov
fadd
push
adc
std
push
lcall
out
xorb
loope
insb
ficoml
data16
mov
pusha
data16
imul
inc
icebp
shl
xor
dec
rcl
adc
xchg
pop
mov
jnp
xor
mov
mov
addb
les
aad
insb
icebp
push
scas
cmp
imul
add
lods
daa
rorb
pop
mov
jl
lret
rolb
push
js
das
loop
add
xchg
push
test
push
loop
outsl
scas
mov
mov
adc
add
push
rcrb
mov
nop
dec
lods
imul
mov
insl
rcrb
cltd
xchg
aam
ret
jns
and
dec
int
mov
mov
mov
xchg
std
imul
push
xchg
mull
xchg
mov
sbb
idivb
pop
outsl
loope
jl
add
ror
pop
dec
mov
xchg
jle
mov
test
dec
sub
pusha
repz
call
movsb
xchg
xchg
ljmp
cmp
jg
xchg
data16
sbb
sub
adc
sti
jne
cmc
and
fwait
sbb
notb
cmp
sti
addr16
push
pop
mov
shll
in
aad
mov
sub
inc
mov
nop
loope
mov
fnsave
mov
adc
dec
add
dec
out
mov
les
sub
popf
push
mov
xor
jbe
mov
pop
push
pop
dec
imul
rcll
xor
and
sbb
out
filds
cmp
and
mov
insl
mov
mov
mov
mov
movsb
pop
pop
push
dec
adc
adc
stc
mov
divb
cmp
dec
out
pusha
pushf
pusha
xchg
mov
fnstcw
dec
add
xchg
push
jne
lock
mov
xchg
in
mov
repz
das
enter
es
push
sub
jg
lret
and
outsl
out
or
into
int
out
jmp
xchg
push
pop
cmpb
xor
test
mov
jl
popa
movsb
insl
dec
add
addb
sub
gs
ss
push
adc
mov
repz
pushl
fldt
pop
mov
cmp
fisttps
bound
pop
lock
sub
out
imul
out
xchg
adc
push
xor
cs
scas
cmp
inc
xor
outsl
nop
xor
or
mov
cwtl
adc
outsl
inc
lret
mov
outsb
aad
lock
sti
fdivrl
imulb
cs
push
jno
shrl
loop
pop
mov
nopl
movsl
sbb
sub
repnz
pushw
test
push
pop
in
sbbl
data16
stos
mov
cmc
fdivl
and
mov
fcoml
push
sub
adc
jo
fdivrs
jb
push
in
lea
cmpb
add
fisubrs
je
xor
inc
int
dec
and
jo
dec
in
xor
push
lahf
xchg
add
sahf
daa
outsl
lcall
mov
xlat
aaa
lods
xlat
mov
fcompp
int3
in
lcall
mul
ret
mov
aam
imul
stos
js
jmp
inc
call
fstps
lds
addb
into
xor
std
test
add
inc
xchg
leave
into
insb
add
xorl
pop
push
stc
or
ds
and
push
test
mov
push
js
test
les
push
cld
sbb
repz
cmpl
push
popf
add
sub
dec
bound
loope
or
call
js
mov
clc
push
jg
jge
pushf
sbb
cmp
sub
shlb
fstp
movsb
mov
xor
pop
popa
sub
pop
push
cmpsl
cmp
enter
sub
and
push
push
filds
ret
xchg
gs
or
mov
adc
test
fsubrl
mov
mov
in
pop
and
bound
adc
xor
imul
scas
stc
dec
adc
sub
scas
fdivr
mov
xor
sti
inc
enter
subb
popf
mov
add
test
lds
push
jb
ret
xchg
adc
dec
push
mov
pushf
fdivr
mov
xlat
jg
movsb
mov
in
mov
jge
lds
loope
cmpsb
fwait
outsb
stos
adc
pop
sbb
jp
sti
adc
xchg
pop
cmpsb
jns
insb
adcb
pop
push
dec
or
lods
shlb
fidivl
pop
int3
cmp
sbb
adc
push
inc
sub
jge
lcall
lods
out
insb
dec
or
arpl
pushf
scas
dec
inc
jae
inc
daa
adc
ficoml
es
pop
jmp
pop
sub
lock
lock
and
jno
xlat
cmp
imul
addr16
outsb
sbb
jmp
fnstenv
leave
movsl
mov
rorl
jns
mov
sbb
mov
insb
cmpsl
sbb
sbb
pusha
rolb
imull
pop
lods
push
lcall
pop
cs
lahf
fmulp
out
add
push
leave
jb
add
sbbb
sub
jae
shrb
cmp
dec
loope
xchg
pusha
xchg
xchg
mov
stc
cli
loopne
sub
stos
jae
orl
sbb
lret
sbb
jp
into
lock
mov
jmp
mov
and
xor
add
xor
insb
xchg
cli
jno
jg
sub
sbb
jns
int
pop
mov
aam
mov
mov
pop
pop
into
leave
add
cld
repnz
jmp
pop
fcmovnb
test
mov
notb
mov
mov
aaa
test
nop
mov
negl
cmp
sbb
mov
push
jb
imul
mov
daa
inc
adc
arpl
sub
jo
clc
adc
sub
jo
outsb
pop
xchg
call
add
insb
pop
jecxz
dec
js
or
testl
xor
adc
mov
cmp
or
xchg
mov
jp
jo
dec
into
jnp
cmpl
pop
mov
jmp
xor
and
push
lods
and
jmp
mov
or
pop
gs
inc
mov
dec
mov
mov
movsb
xchg
push
push
fwait
jno
sahf
pop
add
mov
es
loop
mov
mov
mov
iret
popf
cld
mov
div
push
sbb
aad
js
mov
xor
inc
and
int
push
insb
adc
pop
out
mov
mov
in
or
test
fcoml
sbb
fists
and
les
xchg
xchg
sarb
loopw
into
stos
pop
mov
js
xor
jns
xchg
jp
mov
jmp
adc
sub
mov
inc
nop
and
pop
sahf
cld
dec
mov
out
addr16
in
jno
or
pop
jmp
stc
lahf
sbb
loopne
push
add
mov
xchg
add
movsb
icebp
loopne
dec
nop
fimull
dec
mov
insl
pushf
pusha
fiaddl
lret
idivb
mov
int3
xlat
sub
add
hlt
enter
xchg
push
shrb
call
and
int
icebp
xor
movsb
aaa
xchg
inc
psrlw
lock
frstor
adc
adc
cmp
cmp
sub
xor
inc
popf
setle
nop
enter
es
int
or
mov
xlat
mov
adc
xor
inc
and
xchg
jae
sub
fimuls
mov
cmp
mov
and
xchg
xor
mov
bound
test
repz
sahf
dec
out
xchg
rorl
aas
sub
daa
adc
lea
inc
lahf
int3
pop
outsb
push
mov
pop
movsb
test
nop
or
cmp
jmp
push
add
addb
cmp
xchg
iret
xor
test
outsl
mov
jle
mov
adcl
adc
jle
add
and
stc
pop
and
add
or
mov
adc
fnsave
pop
jg
push
sarl
ja
sahf
fdivs
ja
repz
cmp
jle
insb
and
outsb
stc
cmp
fstl
fdivrp
and
sti
hlt
pop
or
xchg
lock
fbstp
adc
insl
mov
xchg
jg
insb
out
xor
pop
popa
in
adc
leave
fistpl
into
in
outsl
imul
push
jecxz
jp
jno
jge
jne
test
hlt
jmp
xchg
mov
sti
inc
int3
sub
dec
dec
std
pushf
cs
out
add
xchg
in
movsl
sti
std
fdivrs
fs
ss
add
testb
je
dec
adc
push
lods
aad
les
xchg
sbb
or
xor
loop
pushf
mov
xchg
sub
addr16
fcomps
lea
aas
sbb
fisttpl
das
pop
subb
jne
dec
xorb
push
cwtl
mov
rcr
xchg
cmpsb
mov
dec
ret
ja
test
incb
pop
xchg
loop
cmp
nop
ret
add
sahf
push
jle
pop
xchg
sub
sbb
ss
mov
cmpsl
dec
ja
dec
add
outsl
xchg
push
icebp
les
mov
sahf
pop
mov
bound
xchg
jmp
jecxz
pop
mov
or
movsl
jecxz
cwtl
add
imul
addr16
adc
ret
push
sbb
into
aam
pusha
repz
ja
mov
ret
clc
xchg
pop
xchg
mov
js
jmp
fistpll
cmp
xchg
cwtl
sub
sarb
inc
add
mov
inc
outsb
nop
std
stos
mov
and
aaa
add
cli
ror
addl
and
lret
leave
test
cwtl
stos
clc
add
push
test
cwtl
cmc
stc
lods
mov
sbb
in
rol
push
cli
mov
out
xor
test
jl
popf
add
jnp
cmpsl
jge
or
cld
adc
inc
ror
int3
rorl
stos
or
mov
xchg
push
and
repnz
inc
std
test
in
std
out
lret
inc
aad
ret
movsb
movsl
in
fnstenv
sbb
data16
jl
xor
jb
mov
and
pusha
add
pop
pop
leave
loope
adc
xchg
movsl
adc
addb
enter
pop
and
std
dec
mov
test
test
push
call
ljmp
xchg
stc
adc
ret
mov
jecxz
int
fnstcw
cmp
sub
rcll
imul
ja
add
jge
mov
cmpsl
adc
dec
cmp
lods
fcomip
repnz
adc
dec
xchg
push
je
rcr
dec
fimull
shrb
xlat
or
jecxz
adc
add
gs
int3
notl
dec
push
xor
sbb
mov
cld
push
dec
loope
ret
data16
xchg
sbb
sub
mov
mul
icebp
fwait
dec
inc
inc
jge
xor
mov
add
mov
iret
arpl
or
loopne
xor
mov
es
aad
out
sahf
stos
jg
sbb
sbb
pop
pop
jnp
jne
jns
xor
imulb
inc
es
jecxz
push
lods
mov
mov
mov
orl
mov
ja
cmp
loop
repz
jnp
outsb
or
mov
mov
dec
stos
mov
popf
and
jne
jle
jb
bound
xchg
pop
jne
dec
loope
sbb
mov
das
cmpsb
pop
movsl
fiadds
cmp
dec
xor
dec
cmp
xor
sub
or
test
jbe
and
das
sub
inc
pop
aas
xchg
mov
cmp
loop
mov
jecxz
mov
stc
daa
leave
cmp
jge
cwtl
or
in
in
icebp
mov
sbb
add
mov
jb
sub
mov
or
xchg
dec
xor
insl
dec
jecxz
jno
mov
xchg
cmp
dec
mov
and
leave
enter
sbb
add
insb
rcll
dec
xchg
dec
nop
dec
cmp
and
push
inc
into
xchg
push
imul
mov
fwait
bound
xchg
clc
pop
jb
jns
sub
test
xchg
push
inc
mov
mov
inc
inc
pop
sub
xchg
shl
out
test
aaa
repnz
cmp
mov
mov
rolb
fldenv
movb
pop
pusha
inc
sbb
aad
xchg
dec
add
cmp
cmp
aas
fsubp
fcomp
std
jg
int
mov
into
or
mov
hlt
fs
or
push
mov
and
loop
xchg
adc
push
inc
std
cmp
inc
pop
xor
adc
add
fdivrp
xor
out
dec
shl
jecxz
xchg
dec
push
sbb
sahf
inc
rcrl
mov
stos
mov
addr16
aaa
dec
mov
lock
add
not
out
push
dec
notl
cs
xchg
xor
sbb
add
loopne
lcall
add
inc
push
push
add
in
mov
das
or
fs
xor
jecxz
cltd
jmp
stc
mov
add
shll
shlb
fiadds
push
iret
mov
xchg
loop
sub
test
sub
scas
fistpll
push
test
xor
test
subps
pop
test
pop
adc
jle
lds
or
ja
cmp
sub
inc
aad
bound
std
gs
sarl
push
push
jecxz
or
sbb
bound
jns
and
repz
xchg
ja
add
push
pop
push
lret
mov
ds
mov
iret
cmp
mov
daa
pop
movsb
jmp
in
daa
xor
push
lahf
iret
mov
jmp
pop
mov
rcr
dec
mov
lock
leave
pop
imul
cmp
push
dec
add
cmp
pusha
dec
subb
sub
cmpl
push
inc
iret
cld
adc
cmpsl
cmp
movsl
add
xor
sbb
cmp
cmp
inc
push
cmc
push
repnz
jne
pusha
xor
loop
push
pop
push
adc
ret
jmp
enter
and
dec
iret
hlt
jge
sbb
out
inc
lret
mov
lret
inc
incb
cmp
sub
lods
jnp
fisttps
or
and
jle
f2xm1
rcr
sti
dec
das
push
jno
in
jnp
int3
loop
cwtl
call
mov
adc
add
repnz
mov
pop
imul
jle
insb
dec
push
xchg
pop
loope
fs
mov
xor
mov
sub
xor
test
pushf
leave
add
jg
insb
ljmp
int
ja
loope
fbld
xor
mov
pop
lcall
std
push
sbb
aaa
addr16
push
bound
test
or
sub
mov
mov
shl
cli
or
sbb
mov
imul
leave
xor
out
mov
daa
push
aaa
mov
adcl
push
out
bound
fisubs
iret
sub
push
cmpb
or
mov
fisubrl
mov
push
adc
sbb
mov
jmp
test
int3
jb
jns
out
mov
mov
mov
bsr
idiv
js
les
jbe
pop
inc
cmp
pop
jge
jg
push
cmp
or
pusha
loop
insl
push
dec
or
cmc
sub
das
fdivrl
xchg
jmp
mov
xchg
sub
xor
std
xor
cwtl
or
popaw
mov
shrl
ja
adc
inc
jne
int3
sub
shlb
adc
imul
ja,pn
adc
jno
and
cmpsb
iret
subl
add
mov
loope
aas
inc
movsl
shll
dec
mov
cmp
test
lods
je
lret
cmp
adc
hlt
mov
insl
sub
mov
fsubs
ror
mov
icebp
cmpsb
xor
adc
jae
and
insb
pop
andl
imul
rolb
jle
ret
xchg
test
xor
adc
mov
adc
xor
cli
mov
push
shll
lret
sub
into
addr16
mov
mov
pop
jp
int3
sub
cmovne
in
shl
xchg
jecxz
dec
jbe
js
dec
xchg
push
push
jae
push
inc
cltd
outsl
lods
xor
lcall
xchg
cmp
fmuls
mov
mov
mov
iret
or
test
lcall
mov
add
or
pop
in
xchg
xlat
ljmp
jmp
pop
and
shll
imulb
sub
adc
mov
nop
das
fs
shr
cmc
test
inc
mov
and
sub
cwtl
cli
cmp
pop
fistl
mov
fisubs
loopne
imul
dec
or
push
xchg
push
push
bound
iret
sbb
insl
add
test
pop
aad
enter
pop
push
adc
pop
sub
popa
jecxz
push
ja
test
cld
pop
push
bound
mov
pop
rcrl
subb
jecxz
js
pop
ds
fstps
mov
xor
xor
imul
dec
lcall
fcmovne
cli
jno
test
in
loop
xchg
sbb
ds
je
fstl
pushf
ja
mov
movsl
pop
ljmp
jnp
imul
aaa
icebp
iret
aad
out
test
test
jle
js
xchg
sti
sbb
inc
push
pop
arpl
inc
roll
lods
xchg
sbb
or
mov
movsl
ds
xlat
push
inc
mov
ret
mov
pop
xor
lahf
pusha
cs
out
pop
sbbb
out
lret
xor
std
outsb
lds
or
loope
lret
sub
push
mov
lahf
imulb
scas
std
ljmp
wbinvd
xor
icebp
lahf
cmp
jp
int
gs
cld
xchg
cld
jne
imul
std
adc
mov
in
fcomps
jb
dec
pop
ljmp
cmp
popa
and
pop
das
mov
adc
jl
xchg
loope
jb
sub
jp
jp
imul
cmc
gs
mov
or
out
mov
or
mov
mov
insl
int3
scas
xchg
popa
xchg
add
enter
mov
cmp
je
fdiv
push
movsl
rcrb
mov
out
in
fidivrs
sbb
imul
mov
dec
sub
push
mov
stc
push
testl
test
icebp
mov
stos
aam
xor
mov
loope
push
mov
xchg
outsb
mov
mov
jge
hlt
sub
enter
adc
add
sbb
repz
push
inc
inc
iret
push
stos
adc
jg
loopne
pop
xor
mov
jae
pop
push
jle
sbb
leave
pop
adc
push
std
add
jmp
jecxz
stos
jne
cwtl
orl
mov
jno
cmpsb
jmp
add
sub
add
sub
jg
into
fcoml
setg
arpl
sarl
jb
jns
fistpll
imul
outsl
jbe
mov
ret
jg
les
pop
std
mov
stos
cmp
dec
push
imul
ds
leave
xchg
out
fists
fmuls
or
loopne
sub
out
xlat
dec
mov
out
out
mov
in
sub
leave
movsb
daa
movups
and
std
mov
xchg
cmp
and
dec
adc
sbb
adc
xor
xchg
mov
dec
lods
fiadds
and
mov
jl
mov
cs
push
mov
fdiv
push
mov
xor
inc
enter
mov
sarl
jecxz
jbe
mov
mov
and
cmp
shrl
repnz
xorb
mov
add
popf
imul
jl
pop
imul
aaa
inc
fdiv
clc
cmpsl
int
mov
sbb
aas
push
xor
dec
movl
pop
jns
push
adc
inc
enter
repnz
fwait
aam
shll
ja
rep
and
lret
cmpl
mov
out
popf
push
xchg
xchg
inc
jne
adc
nop
cs
sti
push
sbb
jl
mov
mov
faddl
clc
in
testl
bound
dec
jbe
sub
leave
cmp
adc
push
movsl
loopne
lea
xchg
mov
and
int
jle
xchg
notb
arpl
xchg
inc
sahf
push
ja
sub
outsl
pusha
sti
out
ja
mov
mov
add
sub
cmp
or
push
xchg
out
cmp
jb
xor
jp
push
xor
rorl
xchg
add
mov
lods
sbb
add
test
or
xchg
cli
sub
and
out
in
mov
pop
out
jl
pop
adc
jns
mov
fdivr
out
xor
pop
rcl
sarb
pop
pop
lret
out
mov
mov
mov
jmp
push
inc
in
dec
dec
and
push
mov
mov
xchg
loope
pop
add
cltd
jmp
hlt
dec
dec
movl
add
add
pusha
arpl
js
mov
stos
stos
xchg
sub
pushl
hlt
scas
imul
loope
jo
bound
pushf
push
mov
adc
xor
mov
insb
jg
mov
out
jg
mov
dec
sbb
sbb
inc
or
arpl
mov
movl
xor
push
insb
sbb
out
bound
jg
icebp
arpl
jp
inc
push
idiv
addr16
add
cmp
hlt
xor
sub
pop
mov
xor
jnp
lcall
test
push
push
xchg
or
xlat
push
sbb
lea
push
aad
adc
dec
call
mov
pop
mov
mov
dec
out
sbb
mov
cmp
mov
cmpl
or
jbe
pusha
arpl
inc
sub
pop
and
jno,pn
test
or
xchg
or
outsl
mov
dec
insb
loopne
fisubs
pop
adc
dec
pushf
fildl
pop
test
mov
cld
dec
flds
loopne
jle
rcl
xor
sti
mov
movsb
stos
jl
inc
and
leave
cmp
ds
out
outsl
push
ja
and
das
xchg
movsl
dec
add
imul
in
ret
sahf
dec
cmp
std
jecxz
mov
cmp
cmp
hlt
mov
mov
sub
jb
jle
push
enter
pop
inc
mov
movsb
jl
ret
pop
push
xor
cwtl
dec
popl
pop
arpl
sbb
mov
or
dec
outsb
jae
pop
dec
add
js
flds
lcall
cmp
mov
pop
dec
pop
xorb
inc
push
and
mov
jno
out
pop
and
sub
jo
in
xchg
clc
mov
jp
insl
mov
aas
sbb
jmp
ja
pop
cmpsb
leave
adc
mov
aaa
sbb
inc
arpl
add
pop
pop
rcr
jbe
and
mov
push
xchg
jg
jmp
mov
pop
inc
pusha
sbb
mov
sbb
std
cmp
daa
dec
pop
mov
aam
lock
xor
enter
mov
inc
in
mov
or
orl
mov
in
mov
and
jae
mov
jge
add
pop
sbb
cwtl
out
adc
mov
imul
xchg
push
pop
sub
test
pop
mov
pop
sbb
fmull
cli
push
stos
ret
cmp
mov
jno
pop
sti
aaa
scas
daa
xchg
ljmp
jne
movsb
mov
jp
mov
pop
imul
in
mov
xchg
fstl
jge
mov
addr16
pop
pop
add
movl
mov
jl
cmc
xor
pusha
mov
mov
pop
sbbb
mov
and
mov
sub
hlt
jmp
xor
stc
xchg
out
stos
sbb
mov
sub
popf
jmp
xchg
bound
mov
testl
xchg
dec
je
push
dec
pop
pop
or
sub
sub
push
scas
mov
in
imull
imul
mov
popa
mov
sub
cld
mov
das
jle
insb
jns
repz
sub
adc
inc
test
test
cmp
inc
inc
addb
imul
js
cmp
int3
cmp
inc
loopne
lahf
inc
pop
inc
push
aam
mov
in
sbb
in
negl
popa
cwtl
mov
movsb
push
stos
inc
add
and
mov
or
popa
mov
mov
pop
push
out
xor
iret
jb
test
lret
xchg
xchg
lahf
ktestw
mov
test
ja
xchg
mov
add
stos
in
mov
push
subps
inc
lods
sti
icebp
xchg
lds
lret
fisttpl
rclb
test
mov
sub
mov
scas
lds
mov
sbb
and
mov
push
dec
movsb
loopne
insl
cs
mov
jg
fadds
pop
cltd
mov
ds
sub
jmp
mov
arpl
add
je
in
push
enter
mov
fwait
mov
inc
sarl
out
frstor
icebp
and
dec
pusha
xor
jl
enter
movsb
out
jecxz
xorb
or
push
addr16
or
or
fdivl
movsb
and
jl
loopne
inc
das
popa
dec
mov
xchg
mov
jo
sub
pusha
add
sub
loopne
scas
hlt
and
mov
xchg
cmp
cmp
xchg
fadd
add
xchg
push
cli
iret
mov
orb
ds
shll
push
test
or
out
lahf
mov
lret
std
adc
jg
cmpsb
test
dec
dec
stos
lods
mov
dec
mov
out
push
lret
mov
outsb
mov
xorl
sub
scas
test
bound
ja
rcrb
xchg
lods
xchg
lret
pop
std
jmp
scas
lods
cmp
mov
push
pop
outsl
pusha
mov
push
inc
rcrl
fcomip
insb
cmp
andb
rcll
inc
ror
mov
cli
xor
clc
xchg
bound
push
addr16
mov
fidivs
add
cwtl
add
sti
adcl
mov
out
push
xchg
lahf
movsl
popa
outsl
out
push
insb
es
daa
out
shll
pop
das
pop
adc
adc
mul
sbb
cli
adc
bound
aad
ds
out
cld
xchg
cld
push
rcl
xor
hlt
scas
nop
arpl
daa
fwait
addl
sub
dec
xor
ficoms
pop
cmp
arpl
stc
adc
jp
mov
int
push
rcr
inc
mov
or
dec
nop
call
idivl
pop
jae
fwait
aam
mov
gs
add
dec
cwtl
sbb
cs
push
sbb
insl
xchg
sahf
add
xor
popl
div
push
pop
xor
jle
mov
aam
dec
push
mov
fistpl
push
push
jle
insb
and
mov
and
pop
dec
addb
mov
outsl
pop
fdivs
jbe
lcall
cmpl
mov
sbb
lret
outsb
xchg
and
mov
cmp
std
sbb
add
mov
add
loope
fdiv
hlt
or
cmp
adc
push
and
rcrl
cmc
xlat
inc
mov
push
jecxz
js
sub
cmp
add
pop
das
push
cmpsl
repz
roll
sub
lock
lcall
add
and
xchg
xchg
inc
test
mov
cwtl
imul
add
mov
iret
cmp
test
int
and
out
rorb
aaa
jb
dec
add
fmuls
mov
mov
test
pop
cmp
movsb
bound
out
inc
dec
mov
push
mov
inc
xor
inc
int3
sbb
out
insb
in
into
and
inc
mov
stos
fisttpll
pop
add
insl
cmp
aas
popa
jle
pop
mov
fsubrl
jmp
xchg
int
and
inc
shll
popa
aam
enter
fiadds
sub
dec
sbb
xlat
xchg
pop
pop
pop
jge
out
sbb
rorl
mov
scas
sub
mov
lret
dec
mov
cmp
repz
enter
dec
mov
inc
cmp
push
and
xchg
jns
mov
dec
mov
in
pop
outsl
mov
icebp
imul
das
jo
mov
hlt
sbb
repz
hlt
insb
sbb
pop
push
popa
int
dec
lods
rcll
lea
push
cmp
inc
shlb
add
dec
sub
enter
shrl
into
ret
and
jl
jecxz
cmpsb
std
imul
lock
pop
pop
xchg
out
xchg
je
sti
xchg
shll
cmpsb
dec
xchg
mov
or
push
test
rclb
adc
fwait
jnp
jne
inc
or
rsqrtps
es
sti
repnz
push
push
xor
clc
pop
hlt
insb
cmpsl
inc
arpl
int3
xor
jb
ret
xor
push
dec
jnp
in
xchg
subl
push
dec
cmp
mov
scas
lds
movsl
aam
mov
dec
repz
scas
jp
inc
imul
jae
sbb
xor
popa
ljmp
xchg
sbb
cs
scas
subl
shrb
test
push
ret
push
int3
int
ljmp
cmc
in
push
xchg
cs
lds
xlat
lods
cltd
in
xchg
mov
and
mov
std
jl
loop
je
scas
dec
mov
cmc
mov
inc
scas
inc
xchg
test
push
ss
or
mov
add
add
scas
mov
cmpb
aad
insl
add
iret
ret
dec
cmpl
cs
lret
mov
jne
jae
cmp
cld
lea
pop
and
sbb
fs
inc
adcb
sub
movsl
inc
pop
rol
iret
and
bound
push
pop
sub
rorl
mov
mov
cltd
ret
or
jnp
lods
jne
pop
adc
aas
jbe,pn
fistl
sahf
int
sbb
jne
mov
sub
mov
adc
lock
repz
dec
ret
mov
faddp
xor
mov
sub
jne
cmpb
mov
add
not
scas
out
sub
pusha
ja
jnp
cld
adc
ds
sti
test
ficoms
mov
cwtl
xchg
cwtl
xor
movsb
sub
jmp
or
mov
jno
test
or
cs
inc
push
cmc
jae
hlt
jl
addr16
cmp
and
pop
xor
push
xlat
nop
sti
adcb
fistl
mov
jo
in
rclb
lea
mov
addb
cmp
test
sub
gs
xchg
cmp
cmp
call
cmp
xor
mov
imul
mov
sarb
add
mov
inc
imul
add
cmp
jbe
adc
jnp
int3
fdivs
pop
repnz
add
mov
xor
out
lea
sbb
push
cmp
clc
lretw
addr16
sub
loopne
adc
cmpsb
mov
sub
inc
pushf
add
lea
inc
pop
push
leave
shlb
cltd
in
push
testb
jl
fs
pusha
fadds
lret
or
cmp
cwtl
jbe
rcll
sub
jle
push
and
adc
filds
jbe
lahf
xor
pop
xor
dec
ret
insb
inc
add
int3
dec
iret
and
enter
aam
cmp
push
xchg
outsb
xor
push
push
inc
cmc
or
cld
sub
sbb
rcrl
pop
pop
push
stos
test
loopne
loopne
popa
aas
out
lods
xor
pop
add
pushf
fstps
pop
cltd
je
push
ja
loope
outsl
loope
mov
into
not
les
lret
xchg
sub
enter
sbb
data16
or
or
xchg
lret
or
rclb
or
sbb
mov
stos
bound
lds
adc
loop
sub
arpl
loop
subb
xor
pop
jmp
add
adc
mov
and
or
jmp
idiv
pop
aam
sub
lock
push
xorb
jne
xor
sbb
mov
mov
mov
cmp
inc
outsl
ss
jg
push
xor
xor
and
pop
mov
cld
xlat
insl
bswap
cmp
adc
ja
cmp
rclb
cltd
mov
insl
mov
dec
and
and
in
push
repz
mull
inc
add
and
mov
iret
rcrl
xchg
dec
pop
int
mov
sub
add
into
mov
les
jns
push
inc
sub
mov
fs
xchg
enter
imul
cwtl
addr16
loope
push
cltd
xchg
cmp
rolb
icebp
sub
cli
cwtl
add
mov
repz
sahf
out
mov
mov
addr16
mov
add
and
aad
je
xchg
cmpsb
cmp
aam
dec
stos
and
fsubs
push
ficompl
adc
mov
pop
cmp
jmp
cltd
mov
mov
mov
push
out
imul
or
lret
xor
int
in
or
aas
shlb
fdivrl
mov
filds
roll
add
fnsave
cld
and
inc
lds
add
jg
mov
pop
xor
lods
fsqrt
out
push
rcrb
clc
xchg
leave
stos
cmp
in
inc
dec
lock
pop
inc
push
outsl
icebp
shr
mov
push
es
jnp
int3
add
cs
sbb
sarb
rol
mov
stc
out
cmp
loope
mov
lret
push
mov
add
xchg
push
mov
call
jl
pop
xlat
pop
mov
int3
dec
mov
cmp
in
cmp
lahf
push
ja
mov
jo
loopne
xor
aad
mov
fwait
pop
push
xchg
dec
cmc
aad
insl
mov
xlat
stos
and
sbb
push
divl
mov
add
jle
xchg
push
cmp
call
cmp
hlt
pop
aam
int3
call
mov
fsubl
imulb
not
mov
mov
push
jae
add
cltd
pop
imul
or
inc
insl
rcrb
add
dec
test
push
xchg
jns
movb
int
sbb
xor
xor
pop
jnp
inc
lods
loopne
es
xor
pop
pop
and
mov
sub
sarb
xor
adc
mov
sti
or
jno
sub
dec
mov
sbb
cmp
arpl
adc
pop
repz
lods
ret
lcall
push
xchg
mov
xchg
scas
loope
faddl
out
stc
scas
test
push
imul
adc
or
jge
pushf
stos
test
adc
out
sbb
inc
xlat
push
iret
jnp
jle
imul
cmp
sbb
jbe
inc
pop
fadd
hlt
fcoml
xor
test
mov
bound
jmp
mov
das
mov
xor
js
loopne
into
mov
sub
hlt
jl
ss
std
lods
aam
mov
pop
mov
rcrl
movsl
jl
ljmp
test
inc
or
test
addr16
push
push
xor
sahf
push
shrb
jmp
mov
dec
push
and
dec
xchg
mov
outsl
mov
jl
or
pop
daa
dec
push
lea
into
leave
mov
push
cmp
loope
xor
mov
dec
mov
adc
test
test
or
cwtl
push
ja
in
sub
ds
cmp
lahf
fdivrs
sbb
shl
out
bound
xor
testb
cmp
fldl
xor
cmc
insl
into
test
pop
sar
ss
mov
push
lods
popf
pop
imul
pop
cmc
outsb
sub
pusha
jne
aad
pushf
push
jecxz
jge
pop
mov
adc
in
pop
sbb
enter
or
xchg
push
mov
out
dec
lret
out
xor
rclb
jb
or
rclb
add
into
pop
lret
push
xlat
sti
js
roll
idivb
enter
sar
punpcklwd
mov
enter
loop
cmp
fstpt
jge
adc
push
into
dec
and
clc
test
sbb
and
or
jae
xchg
push
push
pushf
popa
inc
xchg
negb
inc
imul
xlat
fsubs
dec
lock
roll
push
adc
adc
jl
or
arpl
mov
mov
sbb
jno
adc
test
jnp
mov
cwtl
add
js
cmp
or
gs
insl
nop
jmp
stc
or
push
enter
mov
xorl
xchg
stos
xlat
arpl
nop
imul
cs
or
pusha
xchg
movsb
ja
fimuls
push
mov
add
imul
xlat
add
xor
jle
mov
ds
rcrl
jl
dec
push
pop
fbld
jno
cmp
cmc
pop
sub
stos
std
mov
push
fcmove
mov
jbe
cmp
and
dec
pop
lahf
mov
gs
cmpsb
dec
push
jmp
dec
aad
inc
fimull
mov
loop
mov
rcrb
mov
xchg
ficoml
and
xlat
inc
cmpsb
mov
adc
imul
or
push
xlat
inc
mov
or
loope
les
cli
pushf
outsb
aaa
pushf
sbb
insb
push
or
mov
stc
loop
add
pusha
xchg
cwtl
pusha
loopne
adc
ljmp
ja
adc
in
fmull
pop
push
inc
push
lret
mov
shrb
std
addb
push
inc
daa
sub
adc
add
jmp
adc
adc
ret
jmp
jle
lret
ucomiss
lret
repz
add
out
inc
sti
add
jecxz
movsl
mov
dec
xor
aas
dec
pop
rcrb
lahf
outsl
xor
inc
out
fwait
or
pop
andb
add
inc
pusha
es
adc
sub
xor
xchg
shrl
jns
out
shlb
dec
pop
xchg
jl
jecxz
add
mul
adc
fwait
and
jg
daa
ret
or
and
jae
jo
jl
addr16
or
leave
push
mov
daa
cs
mov
cli
sbb
ds
lcall
stc
mulb
sbb
andb
jae
or
push
insl
sti
pushf
push
and
pop
adc
dec
icebp
pop
std
int
inc
out
aam
out
femms
outsb
and
shll
cmpb
rol
push
jge
fmul
movsl
out
sbb
int
lods
icebp
push
cwtl
in
aad
orl
xchg
mov
fcmovbe
addr16
mov
xlat
dec
jmp
faddl
push
xchg
gs
and
sti
cwtl
fcomip
das
popf
icebp
pop
push
lret
test
inc
fiadds
adc
jae
int
orb
xlat
sbb
mov
xor
jl
mov
push
sbb
push
data16
repnz
in
std
xlat
pop
mov
mov
cmp
sub
je
pop
sub
aas
scas
push
adc
leave
and
inc
cld
fs
or
fs
and
daa
fcoml
cmp
cmpb
call
pop
outsb
push
push
movsl
jecxz
sub
sbb
push
mov
xchg
test
pop
jl
jne
inc
sub
jle
repnz
add
xor
incl
jg
inc
shrb
rcrb
xchg
mul
xchg
mov
lret
dec
stos
add
mov
insl
jno
aaa
popa
ja
inc
test
cltd
mov
jle
pop
mov
jp
in
test
fs
daa
pop
jno
inc
jl
pop
cmp
movsb
loope
lods
clc
mov
cmp
gs
adc
pop
push
pop
aas
push
ja
dec
cmp
xor
mov
cltd
mov
add
shrb
mov
js
dec
ret
icebp
es
inc
mov
lret
cmpsl
jp
and
ds
mov
aaa
or
or
lock
add
test
imul
mov
sbb
dec
push
hlt
jecxz
mov
fmuls
cli
mov
mov
cld
cmpsl
stc
push
fdivp
pop
bound
mov
adc
sub
aas
iret
inc
shll
scas
or
arpl
out
pop
movsb
push
adc
jge
dec
cs
jge
add
sbb
int
fdivs
jne
js
dec
add
ret
movsl
movsb
or
aad
mov
xchg
cmpl
mov
lea
mov
aaa
imul
or
ja
repz
popa
popa
dec
ds
lret
int3
out
ljmp
sub
pop
ja
out
dec
sub
push
mov
push
sbb
jl
inc
je
adc
adc
shr
fcomps
popf
xlat
lret
addr16
sbb
jbe
inc
pop
jns
aam
outsl
daa
cmp
insb
xlat
sbb
bound
pop
popa
loop
mov
movl
into
cmp
dec
cmc
shrb
es
add
lock
mov
xor
cltd
push
nop
in
inc
adc
mov
fadds
or
hlt
lods
cld
movsb
pop
out
xlat
adc
xchg
mov
push
dec
test
test
test
pushl
mov
dec
or
sbb
std
test
jmp
mov
scas
addr16
aas
mov
xorb
lock
sub
xchg
xchg
mov
int3
xchg
inc
adc
cmp
cmpsb
jg
out
aam
jo
sbb
mov
test
push
in
stos
sbb
les
fstpt
xor
jae
scas
and
into
fldenv
aas
mov
mov
mov
jmp
and
aad
mov
ljmp
adcb
jmp
cmp
rolb
mov
pop
lea
push
sub
jbe
es
aad
pop
pop
ds
pushf
ljmp
in
ds
xlat
cmp
xchg
sub
inc
fs
lret
sbb
add
xor
cmp
enter
jnp
adc
jg
ficoms
bound
addb
xchg
or
push
sub
mov
sbb
adc
leave
in
xchg
xchg
mov
dec
pop
lds
les
dec
in
sbb
mov
arpl
inc
loop
cmp
test
push
fdiv
faddl
pusha
xor
xor
dec
enter
pusha
out
xlat
and
rclb
xchg
and
push
add
mov
sub
fists
add
pop
in
adc
push
inc
jle
mov
out
out
cltd
int
or
push
inc
mov
mov
sti
pop
jle
sub
jo
lahf
push
aad
or
pop
xorb
sbb
jl
dec
push
or
xchg
mov
shrl
loop
jbe
ret
xor
push
pop
lods
in
or
scas
ret
popa
mov
loopne
add
jl
pop
test
jo
lods
mov
cmp
xlat
push
call
cmp
fistpl
dec
jne
popf
or
popa
jne
push
mov
xlat
gs
sub
loop
test
jge
sub
fidivs
xchg
cmp
jbe
adc
ret
ret
stos
movsl
sub
fstps
mov
popa
sub
xor
dec
lcall
clc
rcrl
and
les
scas
testl
mov
inc
mov
mov
and
inc
push
repnz
adc
loop
jecxz
dec
aas
mov
sbb
in
rcrb
adc
inc
ret
push
fnstsw
ficoml
inc
dec
psubsb
imul
adc
and
jle
enter
gs
xchg
mov
ret
inc
jno
cs
clc
shrb
sbb
scas
mov
xchg
pop
cmp
and
lcall
jns
mov
mov
sub
insl
inc
xor
mov
roll
mov
adc
sbb
rorb
loope
iret
and
sbb
testb
into
pusha
call
stc
add
xchg
jo
mov
inc
and
mov
pop
out
mov
ljmp
inc
test
rcll
movsb
adc
jne
rolb
rcl
xchg
fsubr
mov
out
pop
test
push
out
lret
divb
les
mov
sub
push
pop
mov
xchg
ds
lahf
sbb
mov
imul
stc
imul
inc
dec
jb
pop
add
ret
jl
movsb
adc
lret
pop
lea
xor
xor
dec
dec
ds
jns
addr16
pushf
gs
xchg
loope
lea
int
dec
or
sub
push
mov
cmpsl
xor
in
xchg
pop
pop
js
rcrb
push
aas
aad
dec
daa
inc
imul
shr
ja
int
ja
leave
push
add
hlt
ss
jle
cmp
pop
sbb
lds
adc
call
mov
test
push
adc
adc
out
mov
cmp
es
movsl
out
ljmp
sbb
jg
mov
jno
xor
pop
lds
mov
jmp
add
inc
out
icebp
aam
xor
and
ret
xchg
xchg
xchg
mov
popf
mov
xchg
add
arpl
sti
push
xchg
adc
loopne
movsb
xor
dec
jp
mov
inc
cmp
dec
cli
stos
leave
into
outsb
lds
movb
fs
xchg
cmp
les
xchg
mov
in
pop
mov
mov
mov
jle
fs
dec
fs
jmp
dec
fisttpll
aaa
xlat
test
and
jmp
add
or
pop
xor
ljmp
inc
test
mov
cltd
in
xchg
push
jo
into
sub
scas
mov
mov
scas
push
add
sbb
lret
fchs
negb
ja
rcll
cmp
fiadds
jecxz
jbe
cmp
xchg
xor
es
popa
xor
adc
adc
out
aaa
leave
in
lods
jo
mov
mull
cli
pop
jne
repnz
into
mov
mov
sub
in
stos
in
roll
int3
pop
movsb
subl
adc
inc
jno
mov
bswap
mov
orb
lret
and
push
or
popa
pop
inc
aas
popa
mov
lret
jo
imul
or
inc
cmpsl
and
outsb
cmpsb
imulb
loope
jp
adc
rolb
adcb
cmp
cmp
and
push
ja
sbb
fisubs
dec
push
inc
frstor
jecxz
fsubl
or
cmp
inc
jg
cmc
cmp
int
aad
loope
mov
jp
iret
int3
ret
faddl
js
jecxz
add
fmuls
mov
mov
xchg
xchg
mov
dec
xor
fistps
loope
outsl
test
cli
shlb
rclb
sub
mov
into
dec
scas
pop
adc
push
stos
lds
stc
pop
pop
stos
icebp
mov
lret
xchg
sbb
shll
mov
jns
int
cmp
mov
sarb
cltd
in
movsl
jg
pop
fdivs
mov
jno
xchg
jbe
fdivr
mov
jb
stos
addr16
push
dec
loop
in
lret
sub
aas
cmpl
push
dec
push
push
stc
js
jae
sub
fsubrl
repz
adc
stc
fdivs
das
cmp
cmp
push
sbb
bound
jp
cld
push
inc
dec
sbb
push
cmp
aas
jne
inc
addb
cmpsb
mov
adc
int
or
in
xor
loop
push
std
addl
pop
mov
adc
sarb
movsl
push
stc
cmp
lret
xchg
fcoms
pop
cmp
addb
and
sub
or
xchg
stc
cmp
dec
mov
sbb
sti
or
repz
xchg
arpl
xchg
mov
sub
loopne
imul
outsb
mov
arpl
lds
cvtps2pd
js
sti
dec
test
nop
sbb
jno
pop
enter
pop
cmp
adc
mov
int3
mov
arpl
arpl
pop
mov
ljmp
pop
pop
sahf
and
out
int
ljmp
adc
add
mov
pop
into
mov
jo
ss
inc
sub
and
jle
push
fdivs
or
sub
add
and
movsl
repz
inc
inc
cld
jns
data16
fmul
leave
pushf
mov
call
inc
cltd
sub
ds
divb
out
leave
jmp
xor
in
lock
mov
lea
rorb
roll
ja
fistl
fstps
xchg
jo
jne
xchg
pop
pop
sarl
dec
pop
mov
out
inc
ja
les
ja
jmp
jmp
lods
inc
std
jbe
idivl
mov
push
inc
jge
and
repnz
cmp
push
mov
push
add
insl
xchg
adc
push
rorb
jnp
sbb
cmp
mov
faddl
out
roll
test
lods
mov
push
lcall
cmpl
cltd
pop
pop
push
fsubrl
jne
push
adc
mov
add
push
and
cmp
adc
js
in
jg
in
cltd
sub
dec
gs
cld
pop
icebp
dec
mov
or
iret
inc
jle
dec
jmp
mov
push
scas
jecxz
clc
xchg
out
or
sub
lret
jecxz
aas
pop
xchg
je
fistpl
into
lds
in
in
or
xor
aaa
ja
dec
mov
xor
mov
push
jne
ljmp
sbb
jo
arpl
mov
movsl
xor
xlat
cmp
aas
std
jecxz
cltd
insl
pop
sbb
and
stos
and
mov
and
scas
mov
mov
cmc
mov
jns
shll
xchg
mov
sbb
mov
xor
out
imul
test
sbb
int
xor
fdivr
inc
or
imul
ret
ret
std
shrl
sti
lret
inc
mulb
call
fisttpll
add
sbbb
leave
add
pop
addl
adc
sbb
ja
ret
lods
add
push
cmp
push
rcl
jnp
mov
sub
or
jl
cmp
sbbl
nop
enter
je
orb
fidivs
mov
iret
cmp
mov
and
adc
jg
lret
out
cmp
inc
mov
dec
push
imul
repnz
test
mov
mov
push
inc
movsl
inc
mov
xor
mov
loop
nop
insl
out
mov
sbb
mov
and
mov
and
int
jle
idivl
fadd
das
jecxz
push
inc
or
ljmp
jbe
dec
sbb
lds
push
mov
add
mov
push
or
cmpsb
mov
call
jbe
in
shrb
sub
mov
mov
sbb
andl
es
lret
adc
mov
sbb
imul
shl
mov
and
xchg
sbb
jl
inc
or
aaa
pop
fwait
inc
cmp
xchg
xchg
push
clc
cli
imul
dec
xchg
xchg
or
or
inc
and
pusha
mov
movsl
hlt
jp
enter
mov
xlat
leave
jmp
jecxz
jo
or
lret
iret
cmc
call
lcall
mov
push
sub
mov
into
xchg
outsb
push
inc
test
sbb
push
mov
jne
add
push
dec
pop
xchg
jno
pop
mov
xchg
cs
stos
jp
sbb
loop
mov
addb
mov
jmp
jns
adc
lods
push
leave
sar
or
imul
dec
pop
mov
inc
and
test
push
nop
mov
cltd
int3
mov
scas
ljmp
cmp
movsb
int3
fisubl
insl
mov
cmp
clc
cli
gs
xchg
fwait
out
pop
rorb
test
and
int
mov
in
stos
mov
push
cwtl
pop
and
jg
and
sbb
cld
push
pop
jecxz
jns
jp
cmp
mov
mov
jg
enter
and
mov
pusha
push
inc
inc
fcmovne
out
out
xchg
popa
xchg
test
xorl
mov
lahf
shll
jbe
xchg
pop
xchg
decb
jge
nop
mov
lcall
int3
pusha
sub
incl
mov
mov
mov
cltd
xchg
or
insl
cli
cmp
xor
fildll
cmpsl
ret
inc
aad
xorl
ljmp
pop
or
stos
imul
push
lcall
and
mov
push
dec
in
add
cld
push
sbb
sahf
aas
push
sub
scas
sbb
jle
pop
cmpsb
adc
mov
arpl
pusha
and
scas
call
in
das
arpl
cmp
lcall
sub
mov
sbb
and
aas
cwtl
xchg
ss
popf
xchg
jg
inc
nop
loop
and
stos
and
or
imul
pop
daa
adc
aas
xor
add
push
lock
mov
cs
rcrl
stc
movsl
in
cmp
xchg
cmc
sub
mov
icebp
sbb
aas
pop
dec
fidivs
cltd
loop
sbb
movsl
mov
lret
jge
mov
dec
lods
sub
mov
sbb
repnz
xchg
cwtl
dec
cmpsl
dec
dec
stc
sub
push
or
push
jg
dec
nop
jmp
push
dec
cmp
push
xchg
sub
or
out
dec
movsl
jp
push
push
mov
popa
lret
icebp
push
xor
push
pop
addr16
xor
stc
insl
jp
lods
daa
jl
dec
movsb
cmp
push
arpl
test
sbb
adc
mov
inc
roll
mov
jnp
mov
jp
mov
and
shll
test
mov
repz
imul
mov
xor
decl
mov
adc
sahf
sbb
inc
push
aam
jo
das
dec
mov
shrb
je
mov
xchg
mov
and
sub
and
es
mov
mov
inc
rcr
pusha
xchg
orl
sub
adc
xor
push
sbbb
sbb
adc
daa
jg
xor
xchg
aad
adc
jg
or
dec
jl
nop
push
add
aas
push
jo
adc
mov
mov
fadd
xchg
xchg
int
stc
into
outsb
nop
pop
adcb
dec
fwait
and
cmp
out
adc
push
jb
xor
inc
sub
hlt
mov
pop
rorb
mov
xchg
and
lds
xchg
hlt
aaa
das
in
stos
das
cmpsb
stos
mov
dec
in
xchg
mov
pop
lahf
cltd
mov
jmp
mov
stc
les
push
cwtl
fsubr
mov
sub
sbb
les
repz
out
lahf
push
xor
aad
pushf
leave
sub
lahf
inc
jo
test
push
popa
sti
into
lret
xlat
or
mov
dec
pusha
push
test
ret
stos
fnstsw
and
lahf
int
inc
movb
loope
sti
push
shrl
xchg
jl
push
dec
incb
daa
push
mov
std
add
test
or
sub
call
loop
or
aaa
push
push
std
adc
xor
or
lcall
and
dec
repz
imul
push
push
push
les
inc
and
jl
jne
lock
adc
push
out
mov
data16
jne
xchg
xchg
arpl
pop
sbb
add
jno
scas
jge
popf
push
mov
cs
push
aaa
push
push
push
sbb
sbb
adc
in
mov
push
mov
lods
pop
sbb
enter
xchg
dec
mov
push
mov
push
or
arpl
jle
xor
mov
inc
xchg
xchg
xor
pop
int3
add
ljmp
daa
dec
jb
and
hlt
jl
insb
xchg
jnp
mov
push
sbb
scas
call
movsl
xorl
das
fistpl
mov
inc
adc
out
mov
or
pop
in
aad
pop
fs
mov
int
or
xchg
push
in
lds
cmpsl
pushf
jle
pop
ljmp
dec
in
mov
clc
jo
sbb
mov
out
jb
push
ss
mov
repnz
inc
xchg
xchg
xor
or
aas
mov
xor
dec
ja
jmp
cmpsl
sub
imul
and
xchg
sub
cwtl
cmpb
push
out
mov
and
leave
mov
int3
jl
outsl
add
push
cmp
adc
mov
in
ljmp
loope
mov
cmp
scas
dec
and
fstpl
jns
fldt
adc
sbbb
test
and
xchg
mov
adc
enter
leave
jb
xchg
push
lret
out
jns
xlat
xchg
nop
and
aad
adc
xchg
lds
outsl
jge
and
xor
mov
push
and
mov
repz
int3
mov
imul
rclb
ds
sti
push
nop
leave
xchg
mov
inc
inc
fsts
adc
lea
fwait
out
mov
lods
mov
aad
and
jecxz
mov
inc
cs
cltd
inc
imul
cs
nop
inc
testb
add
mov
ret
cmp
pushf
add
jle
shl
aam
mov
ljmp
pop
ret
pop
pop
mov
push
in
xor
jo
add
xchg
push
out
repz
adcb
ds
les
or
pop
mov
pop
mov
mov
adc
pushf
pmuludq
push
inc
les
popa
jne
xchg
xchg
ds
dec
pop
test
cmp
adc
imul
in
cmpsl
and
rorl
shlb
push
jmp
mov
mov
mov
fisttpll
adc
and
sti
lahf
dec
add
orl
clc
jo
ret
cmpb
orb
in
es
fcoms
sbb
inc
push
data16
mov
insl
cwtl
test
fmull
out
call
shll
push
mov
outsl
jae
fnsave
sti
outsb
pop
and
cmpl
dec
loopne
sar
mov
or
arpl
lds
jmp
imul
in
outsb
loop
dec
xchg
es
cs
lea
xor
fsts
into
outsl
lods
stos
inc
sbbb
imull
in
sarl
or
xor
and
cli
adc
jl
test
push
xorl
andb
pushf
repnz
cs
subl
mov
adc
lea
jge
jg
dec
sar
xchg
adc
xchg
ffree
jge
shll
lar
aas
je
test
or
test
std
leave
cmp
daa
mov
pop
movq
xlat
push
aaa
mov
sbb
mov
jb
dec
cltd
and
xchg
ficompl
inc
add
fucomip
pusha
fmulp
lret
fidivs
in
dec
add
xor
test
imul
jl
icebp
mov
and
movsb
jge
and
arpl
xor
scas
sbb
lret
movsl
loopne
std
jg
cmp
jbe
cmp
loopne
mov
sarb
lahf
idivl
mov
mov
push
push
xlat
sub
aaa
pushf
outsb
pushf
test
mov
adc
cld
add
scas
aas
cmp
lret
aad
push
cli
negb
adc
jmp
jg
movl
lahf
add
mov
enter
mov
mov
sbb
add
push
lret
and
cltd
push
sti
cmp
je
add
aaa
push
add
mov
adc
jge
xlat
pop
movsb
lds
popa
fmulp
inc
loop
sti
call
out
aaa
mov
sub
sti
push
aam
dec
clc
xchg
fcmovnu
inc
pushf
xchg
add
into
push
mov
push
repz
imull
pop
mov
lods
sub
test
fisttpl
fs
or
pop
mov
sub
stc
test
jl
cmp
shrl
inc
rcll
or
add
inc
mov
popa
jmp
or
add
cmc
cmpsl
push
sti
push
pop
xchg
popf
mov
mulb
addr16
jle
jge
pop
mov
out
out
jle
fstl
shrb
mov
pop
mov
pop
mov
and
mov
movlps
xor
inc
sbbl
adc
loope
jg
ret
jae
jg
lock
into
pop
pushl
xor
fs
jnp
dec
pop
leave
or
dec
jns
mov
dec
adc
cmp
fisubrl
mov
repnz
leave
sahf
mov
sub
inc
cmpsl
dec
pop
repz
mov
add
pop
sbbl
mov
jle
rorb
sbb
call
icebp
loope
inc
sub
mov
aad
add
dec
mov
call
or
jmp
cwtl
pushf
clc
movaps
add
fimull
mov
push
pop
inc
xchg
xlat
out
sbb
jns
add
sbbl
sub
dec
sti
movl
out
xchg
jne
cld
bnd
xor
add
bound
and
add
movsl
loope
add
add
or
sahf
xor
daa
xchg
imul
cli
popa
or
cwtl
in
sbb
ret
outsl
cmp
cld
mull
movsl
pushf
repz
aaa
ret
addr16
ss
repz
aas
repz
sbb
xchg
je
icebp
sbb
xor
inc
sub
ret
pop
mov
dec
arpl
lock
add
sti
out
imul
je
leave
adc
push
push
mov
popa
add
add
scas
cld
test
fistps
jl
jl
les
lock
mov
mov
or
mov
cltd
sub
lods
shlb
imul
les
mov
cwtl
ret
out
addb
dec
jbe
push
scas
fisubrs
leave
stos
lahf
dec
sub
lcall
adc
cmp
mov
fbstp
imul
cmp
rcrl
pop
pop
cmpsl
sbb
int
sub
sbb
fcmovnb
cmp
mov
mov
or
cmp
je
xor
movups
xacquire
or
jns
xchg
data16
add
inc
sub
jle
arpl
inc
jne
dec
pop
fbstp
add
xlat
in
add
sbb
xchg
loop
and
mov
and
xchg
das
or
mov
decl
cwtl
rcll
mov
arpl
movaps
xchg
adc
cli
dec
pop
mov
lret
pop
pusha
ja
sti
jecxz
movsb
addr16
cmp
scas
mov
xor
daa
shlb
sbb
pop
mov
mov
inc
and
shrb
lock
in
ja
outsl
gs
and
add
pop
add
es
pop
mov
int3
rolb
dec
xchg
push
popa
loope
not
pop
popa
cmpsb
rol
addr16
cld
adc
cli
stc
cmp
and
mov
jp
leave
fisttps
sub
cmpl
icebp
fistps
dec
mov
lea
inc
test
jns
cmp
push
aas
mov
mov
pop
test
jns
xlat
mov
lock
loop
jns
imul
cmp
mov
push
inc
jle
adc
fiaddl
aad
jp
mov
add
call
es
movsl
out
adcb
push
test
movsl
loope
sub
cmpsl
xlat
pop
pop
sbb
stos
loop
xchg
xchg
cmpsb
cmpsl
fs
or
in
pop
jno
sub
mov
out
sub
push
aaa
cmp
ret
mov
fildl
in
imul
dec
jle
cli
mov
insl
data16
dec
fs
stos
push
cmpsl
in
fisttpll
pop
idivl
or
mov
dec
add
arpl
pop
jecxz
add
sub
fistps
fiadds
mov
add
push
xchg
lret
ljmp
push
lret
mov
cmp
mov
dec
js
pop
lds
into
aas
hlt
fidivs
addr16
movsb
cltd
inc
jns
fcmovnb
xchg
xor
inc
mov
sub
pop
xchg
pop
or
pop
jo
mov
outsb
cmc
dec
cmp
and
lahf
jns
imul
dec
cld
xor
stc
xor
push
adc
pop
ja
pop
out
jp
mov
cs
lahf
lret
hlt
pop
xlat
in
pop
mov
stos
int
add
mov
push
cmp
scas
jnp
xor
push
cmp
mov
test
pop
cwtl
into
adc
adc
mov
or
xor
mov
mov
mov
or
cwtl
add
push
insl
sub
cs
pop
arpl
cmp
mov
cmp
and
js
mov
fidivs
jecxz
dec
mov
or
ljmp
and
jl
xchg
into
mov
sub
cmpl
xor
clc
xor
nop
ret
add
js
rclb
mov
stc
inc
test
adc
and
adc
insb
sarb
ja
add
bound
gs
inc
pop
rorb
mov
mov
xchg
and
stos
fildl
adc
sarl
mov
mov
stos
aas
cmp
clc
and
mov
inc
and
xchg
jae
dec
xchg
jmp
inc
cmp
dec
adc
pop
aaa
mov
loope
popa
or
sbb
sti
add
arpl
push
add
jb
push
xchg
ljmp
mov
push
imul
cmp
in
sub
js
add
mov
lret
adc
pop
jo
inc
jae
jne
inc
and
call
jno
jb
in
add
fnsave
push
dec
add
mov
adc
xor
xor
dec
jno
and
les
ret
dec
fdivs
out
pop
or
push
push
push
sahf
decb
mov
mov
xor
in
in
dec
mov
sbb
mov
insl
xchg
icebp
and
addb
popa
fs
data16
icebp
jl
mov
and
add
dec
jl
mov
inc
loopne
mov
in
adc
and
or
xchg
sub
movsb
cltd
mov
dec
dec
mov
jmp
jnp
loope
inc
imul
movsb
sub
add
mov
clc
and
frstor
je
mov
inc
scas
adc
and
push
mov
jo
movsl
cs
push
dec
dec
imul
sti
mov
or
pop
push
and
in
pcmpgtw
inc
in
mov
pop
mov
and
xchg
pop
or
and
push
rolb
in
push
mov
xchg
xor
clc
xor
push
mov
fcmove
xor
test
enter
ret
fcoms
into
sahf
mov
leave
add
mov
lds
shlb
mov
mov
inc
sbb
or
sbb
negl
insb
pushf
ja
mov
add
icebp
or
sub
push
enter
push
in
test
cs
or
xchg
dec
call
adc
or
fneni(8087
pop
dec
stc
test
ret
jle
jbe
inc
dec
push
jg
add
mov
push
pusha
lret
jae
mov
lock
lea
inc
jecxz
or
sarb
lods
movsl
jp
mov
mov
push
sub
cmp
jl
fxch
fdivrs
subb
xchg
pop
in
and
xchg
or
or
scas
and
jmp
cmp
jl
adc
dec
daa
mov
add
lret
nop
pop
adc
shll
mov
fldcw
repnz
jmp
inc
lcall
clc
scas
inc
xchg
pop
mov
cli
mov
fdivrs
sarl
mov
xor
dec
inc
mov
cmp
mov
mov
inc
aam
push
sub
in
push
fs
add
daa
jb,pn
popa
xor
sbbb
insl
jle
xchg
dec
outsl
cmpsb
std
in
movsl
insl
jb
add
out
iret
test
push
gs
aaa
call
hlt
mov
or
add
call
loope
xlat
mov
mov
iret
push
enter
or
mov
pushf
or
jl
mov
fcmovbe
ret
out
xchg
sub
cmp
xchg
xor
dec
in
mov
mov
sbb
ds
ret
inc
popf
test
inc
shrb
mov
and
imul
mov
push
cs
hlt
jecxz
les
lea
xor
push
mov
push
push
pop
dec
gs
jecxz
sbb
push
mov
hlt
jo
fisttpl
imul
cwtl
jp
loop
fistpll
les
sbb
or
stos
xor
in
lds
clc
add
out
mov
insb
out
sbbb
inc
inc
outsl
and
xchg
jnp
call
cmpsl
xor
adc
push
arpl
push
jae
sub
or
ja
mov
pop
or
lods
sbb
adc
mov
fimuls
push
leave
fisttps
popf
mov
arpl
cmp
imul
xchg
inc
fwait
std
divl
push
add
xorb
push
inc
inc
mov
xor
ds
mov
jl,pt
lods
mov
arpl
lods
jecxz
orb
cltd
adc
or
lods
lods
push
or
jge
out
pop
cli
inc
inc
and
jecxz
pop
mov
adc
mov
in
out
or
xchg
or
daa
sbb
push
int3
or
jno
cmp
js
rcll
js
fsubrl
pop
ss
dec
sub
ficoml
fcmovbe
ja
dec
mov
adc
mov
xlat
xchg
test
sub
add
push
sub
leave
cli
sub
mov
sub
ficoml
fs
test
stos
in
cmp
stc
sub
adc
xor
xor
dec
pop
mov
les
xchg
cltd
cmp
dec
pop
jbe
adc
jbe
dec
fiaddl
hlt
xor
pushf
das
sbb
es
inc
insl
je
pushf
inc
sahf
mov
fistps
xchg
into
adc
lret
into
pushf
push
xchg
xchg
leave
imul
and
jbe
push
loope
out
pop
fidivl
fisubrs
xor
mov
imul
out
jno
mov
cmp
xor
cli
push
aas
stos
lods
push
inc
push
sbb
data16
mov
mov
cmc
and
movsb
mov
scas
out
jmp
clc
push
push
and
push
xchg
push
std
dec
jp
jb
out
into
sub
xor
dec
xlat
cmp
test
xchg
and
sahf
lea
adc
lret
mov
repnz
inc
pushf
rdpmc
fsts
push
dec
mov
push
adc
xor
mov
sbb
out
data16
cmp
leave
roll
ret
pop
mov
push
jnp
fwait
add
mov
dec
repnz
mov
aad
add
cli
or
jo
inc
nop
test
shlb
mov
into
xchg
xor
into
add
stos
or
lea
and
stos
adcl
inc
popa
sub
mov
scas
aas
jbe
rcr
cmpsb
mov
ljmp
into
sub
mov
xor
pop
pop
ret
dec
jno
jge
or
jmp
dec
movl
mov
shlb
in
pop
sbb
push
push
and
shlb
jne
dec
ret
loopne
cmc
mov
in
mov
adc
mov
mov
dec
pushf
sbb
insb
mov
add
rcr
and
insb
sbb
xchg
pextrw
xor
mov
mov
jp
sbb
ficoms
out
xchg
jne
cmp
adcb
mov
out
xchg
fldenv
sbb
sub
cmp
sub
insb
push
popa
fwait
jge
and
push
popa
cmp
add
leave
popa
mov
inc
dec
aas
adc
pop
aaa
fmull
adc
mov
inc
jne
xorb
jns
sbb
xchg
pop
cmpsb
cmp
ret
and
notl
stos
jmp
clc
jns
cmpsl
js
andl
inc
dec
and
mov
dec
ljmp
loop
pop
in
jge
push
cmovae
nop
pop
arpl
pop
test
push
enter
gs
jg
adc
test
bound
dec
out
cmp
test
ss
lcall
and
push
ss
daa
mov
mov
mov
sbb
jle
and
aam
push
das
xchg
popf
and
inc
sbb
mov
mov
mov
out
mov
ds
mov
adc
leave
mov
lret
orb
js
test
inc
mov
inc
jbe
outsb
loop
bound
push
cmpl
in
push
jl
ja
lock
negb
popf
in
adc
push
and
inc
movsb
mov
fscale
add
in
fs
popf
cs
or
in
movsb
sub
subl
imul
outsb
arpl
insl
jno
mov
or
or
mov
mov
adc
add
mov
int
jmp
sub
js
xchg
test
fdivr
sbb
cwtl
mov
mov
push
fwait
movsb
jb
outsb
inc
and
jb
sarl
leave
mov
inc
std
jbe
add
or
pop
mov
sbb
gs
clc
out
mov
mov
rolb
andl
mov
adc
push
jo
cld
sbb
cwtl
jnp
fs
sbb
aas
std
ret
jbe
jae
jbe
es
jmp
mov
sbb
pop
jae
je
aam
xchg
xor
pusha
dec
jge
jmp
jp
mov
bswap
loop
pushf
inc
out
fxch
jg
imul
jmp
cmpsl
cmpsl
push
mov
imul
insb
mov
popf
mov
dec
sar
sahf
enter
sbb
ss
cmp
scas
pusha
in
add
sub
arpl
fdivrs
inc
pop
adc
jmp
bound
jno
repnz
xchg
xchg
ds
mov
insb
lds
outsl
mov
mov
xlat
out
mov
cltd
sub
imul
pushl
and
and
sub
cmpsl
push
call
mov
jno
and
das
and
lock
jmp
lret
daa
insb
sti
sub
inc
es
daa
clc
sub
xchg
mov
mul
rolb
fcomps
test
test
negb
mov
icebp
lea
aam
sbb
clc
lea
sahf
repnz
stos
xchg
xchg
out
pushf
mov
cmc
xor
jl
test
dec
adc
fwait
jl
sbb
shrl
lock
dec
pop
outsl
inc
mov
leave
icebp
dec
les
xchg
aad
test
and
pop
mov
inc
mov
sti
inc
dec
pop
fisttpll
loopne
dec
in
ret
xchg
ljmp
cli
ss
xor
jbe
push
clc
loopne
in
stc
pop
jg
mov
dec
arpl
jp
rcrb
mov
adc
insb
xor
fimull
mov
repnz
mov
pop
push
pusha
sub
repnz
mov
adc
imul
imul
cmp
jecxz
les
cmpl
jl
mov
or
mov
rcl
mov
pop
data16
jnp
mov
mov
js
mov
sbb
mov
mov
outsl
mov
ss
ljmp
pop
ljmp
xchg
xchg
and
addr16
fs
xchg
mov
test
ljmp
aad
lock
push
negl
and
adc
sbb
addr16
test
mov
and
dec
sbb
pop
mov
inc
mov
loop
ss
dec
xorl
mov
out
or
inc
sbb
mov
idivb
sub
xchg
dec
in
sub
aas
lods
pusha
outsl
popf
mov
add
rcr
je
ret
daa
fisttpll
lret
fs
rcll
bound
mov
mov
dec
dec
out
in
ljmp
jp
inc
mov
xchg
adc
sarl
cmp
sbb
stos
add
into
popf
or
and
xchg
mov
xor
lds
pop
jo
and
loope
ret
cli
ficoms
bound
test
rorl
adc
adc
repz
test
xchg
or
sbb
jge
repnz
sti
popf
mov
pusha
add
aaa
push
inc
mov
xlat
arpl
dec
mov
jmp
leave
sarl
pushf
insl
add
add
pop
nop
bound
xchg
enter
jl
insb
mov
repnz
add
sbb
rorl
fsubrs
xor
lret
adc
stc
jns
shl
incb
jns
adcb
shl
loope
sub
and
imul
subl
push
cmpsb
adc
ret
fisubrl
jge
mov
lods
cmpsb
fistpll
into
pop
add
adc
push
xor
mov
loop
or
repz
lret
fldcw
xor
arpl
push
repnz
jnp
add
iret
jb
sub
stos
and
js
cltd
xchg
outsb
ss
cmp
inc
adc
push
out
int
push
bound
inc
fisubrl
aad
hlt
add
push
pushf
loop
into
enter
sbb
or
aam
dec
cli
mov
pop
mov
sbb
test
push
sbb
ret
inc
rorl
ja
and
push
or
xchg
xor
pop
ret
leave
push
lds
sub
pop
shrl
mov
repnz
sbb
sub
jmp
divl
fsubl
xchg
sub
mov
sarl
sbb
mov
inc
aam
sbb
test
push
adc
pop
cmpsb
mov
cmpsb
mov
test
jle
ret
ljmp
pop
mov
or
xchg
inc
test
shlb
push
push
push
mov
or
jp
sub
xchg
sub
mov
adc
inc
arpl
sub
adc
clc
in
xchg
cmp
xchg
mov
jb
jb
xchg
sub
std
and
sbb
aam
mov
xchg
pop
les
pop
push
cmp
mov
jo
and
roll
sub
xchg
jmp
push
sarb
pop
fwait
test
xor
subl
roll
cmp
xor
inc
lret
cmp
inc
jg
fbstp
xor
xchg
xchg
leave
fldl
fbstp
sub
ja,pn
cmp
shrl
push
or
inc
and
out
out
mov
stc
jbe
pop
into
popf
jnp
sub
ds
or
push
cmp
arpl
insb
aam
rcll
push
rcrb
clc
add
jb
in
push
xor
xchg
mov
pop
pusha
mov
mov
inc
cmpsb
sub
sbb
pop
and
pop
jp
ja
pop
pop
fwait
xor
mov
loopne
mov
ja
lods
sbb
pushf
in
aas
sub
emms
xchg
pusha
sub
pusha
xchg
fstpl
jmp
aad
in
cmp
sub
test
ds
ds
xor
outsb
mov
sub
movsl
insb
shlb
jge
cmp
and
aaa
add
pop
push
pop
or
mov
insb
dec
ret
pop
mov
push
leave
mov
fiadds
scas
mov
push
cwtl
in
aad
ljmp
ret
inc
xorl
lds
and
leave
nop
push
lea
push
cmp
adc
xor
push
sub
xor
enter
test
sbb
mov
mov
pop
and
pop
and
adc
mov
test
cmp
push
xchg
inc
dec
je
xor
add
rcl
fidivs
xor
insl
jns
pop
add
les
jl
add
pusha
mov
pop
fdivr
dec
mov
inc
jno
adc
rcrl
or
dec
pop
mov
loope
sub
shll
mov
aaa
sub
cltd
icebp
inc
roll
out
xor
sub
mov
test
lock
mov
ds
pushf
stos
lahf
push
aas
test
pop
out
js
mov
mov
repz
xchg
in
mov
push
mov
xorl
lea
mov
inc
or
mov
jge
loopne
xchg
sbb
or
jecxz
push
cmpsb
push
jo
inc
pop
sbb
sub
loop
dec
lods
mov
add
addb
sub
mov
jb
aaa
sub
adc
mov
mov
push
test
test
iret
jo
in
push
xchg
lret
loopne
lcall
cmp
lahf
shr
call
scas
dec
cs
jg
aas
andl
mov
outsb
hlt
jbe
pop
loop
int
fadds
and
push
push
test
dec
dec
arpl
test
jnp
or
and
lahf
scas
add
pop
cwtl
push
sbb
xor
pop
dec
xor
mov
sbb
pop
sahf
mov
jns
sti
xchg
mov
sbb
inc
aas
into
jl
sub
or
jns
pusha
ret
in
lock
cltd
sub
sub
xchg
fs
scas
mov
icebp
add
add
lods
imul
cmp
xor
fs
dec
popa
clc
pop
mov
sti
inc
pop
std
add
lods
and
push
or
adc
dec
xchg
cld
imul
inc
or
int3
push
ja
fldt
cld
test
fistpl
or
mov
pop
rcl
cbtw
roll
mov
iret
fsts
cmp
mov
mov
pusha
popf
aad
imul
xor
cmpsl
in
pop
mov
rcrl
sbb
movsl
mov
iret
ss
cmp
fldpi
in
jns
inc
inc
pushf
pop
dec
pop
pop
adc
and
aam
imul
inc
dec
es
sbb
pop
cmc
lods
xchg
mov
aam
movsb
cs
sahf
xor
ficompl
push
ret
cwtl
lods
mov
enter
inc
and
stc
jb
fidivrl
mov
outsl
push
add
xchg
push
dec
dec
adc
icebp
cmc
jle
cmpsl
fwait
jnp
or
std
hlt
gs
vmovlpd
mov
movsb
mov
sbb
enter
mov
mov
push
bound
loop
mov
mov
enter
and
add
and
iret
popa
sub
fstpt
pop
test
jmp
into
std
or
rcll
out
cmp
sub
xorl
stos
loope
ds
into
and
mov
daa
aaa
pop
cmpsl
or
sub
jmp
shlb
aaa
test
jl
inc
adc
roll
push
cltd
test
mov
jecxz
repz
lret
sub
out
pushl
mov
out
mov
arpl
mov
mov
stos
inc
subl
sub
jae
add
inc
mov
mov
loopne
mov
pop
jge
sbbb
mov
inc
jge
jbe
dec
jmp
in
ja
add
xor
inc
push
lret
or
sub
push
iret
loop
jae
cs
movsb
lods
or
pop
cld
loop
imul
data16
lods
aam
popf
sub
in
sub
xchg
jb
repz
adc
test
fbld
xchg
mov
dec
incl
jae,pt
popf
scas
mov
push
orl
jp
xor
mov
mov
xor
add
movsl
mov
pushf
les
psubw
xlat
in
cmp
or
pop
filds
stc
or
arpl
push
and
ss
lret
into
dec
test
test
nop
pusha
fldl
int
sub
fmulp
je
popa
xchg
cmp
sbb
xchg
test
sbb
jg
mov
imul
mov
pop
dec
mov
repnz
scas
xchg
leave
xor
scas
in
xor
std
inc
adc
sub
cs
in
outsb
or
and
dec
insb
dec
cmp
push
add
leave
xor
call
pop
dec
add
fprem1
dec
lret
xor
jg
sar
es
loop
inc
mov
icebp
dec
leave
cmp
or
jmp
inc
mov
sarl
hlt
loopne
cld
push
lret
pop
mov
lods
inc
push
mov
and
jge
les
push
xchg
faddl
notb
lcall
cmp
xchg
sub
popa
aaa
xchg
mov
jge
pushf
ss
xor
aam
mov
sbb
inc
in
push
ja
lods
adc
cmp
and
lock
cltd
cld
enter
in
shrb
cmp
pop
xlat
movsl
sbb
pop
xchg
sti
lret
les
out
lcall
xchg
sub
mov
aad
dec
daa
lret
mov
testb
add
mov
sub
jb
xor
sbb
repz
shrb
js
mov
xchg
cmp
lea
int
jo
adc
aaa
and
rol
jp
cmp
insb
xlat
in
sub
jb
jnp
mov
in
jne
cmp
adc
cwtl
lods
das
jg
mov
daa
cmp
lock
mov
mov
dec
cmpsb
mov
insb
lahf
pop
adc
fstpt
int3
xor
jb
insb
jl
xor
lcall
push
and
and
mov
shlb
arpl
jns
outsl
ljmp
sbb
lret
mov
mov
cmc
gs
xchg
test
cmpsb
mov
or
add
push
clc
and
out
mov
test
pop
mov
cmpsb
cmp
es
inc
pop
test
pop
lock
cli
adc
push
imul
jno
movsb
loope
push
outsl
mov
pop
leave
cmc
mov
mov
or
ljmp
adc
add
adc
jg
inc
lods
jmp
mov
jg
jl
adc
cmp
adc
adc
adc
adc
push
or
cmpsb
mov
int3
roll
bound
lcall
loop
dec
pop
add
or
mov
insl
and
cmp
notl
repnz
inc
pusha
loop
xlat
xor
icebp
and
and
rol
xchg
loopne
jns
pop
leave
in
cmp
mov
xchg
aaa
or
pop
in
aas
loope
mov
je
pusha
gs
jae
ljmp
jecxz
jg
out
out
mov
or
sbb
xchg
cld
rolb
cld
jne
loop
movw
popa
enter
stc
je
daa
pop
hlt
xlat
movsl
fwait
adc
nop
imul
pop
jmp
cwtl
mov
push
and
dec
jne
rolb
adc
arpl
into
hlt
enter
jne
jo
es
out
jge
xchg
loope
inc
ljmp
jecxz
cli
or
adc
aas
mov
divl
flds
and
sub
ret
test
jle
mov
sbb
dec
adc
xor
aaa
mov
xchg
icebp
pop
loope
push
push
jns
pusha
xor
mov
sub
push
inc
lret
fistpll
mov
push
push
mov
or
add
inc
sahf
icebp
ret
cmp
add
jo
nop
xor
cli
adc
dec
mov
mov
inc
push
pop
xchg
fstl
rcl
std
das
out
or
xchg
mov
mov
andl
adc
cmp
push
iret
lcall
jle
add
dec
adc
incb
add
dec
mov
rcll
xor
into
xchg
ret
jo
dec
int
xchg
in
mov
stos
pop
insb
jecxz
les
pop
loop
fcoms
and
sub
sahf
mov
aaa
jnp
and
shl
jne
jmp
icebp
pusha
test
stc
ds
sbb
adc
cs
cmp
lods
pop
inc
jo
jmp
mov
adc
lds
push
mov
adc
pop
and
cmp
stos
lret
dec
push
cmp
stc
fnstenv
add
lahf
mov
push
mov
dec
cmp
mov
fimuls
xor
test
cmc
mov
insb
jmp
mov
mov
cmp
sbb
ljmp
add
into
add
add
push
mov
pop
cmp
inc
inc
fidivrs
xor
and
or
xchg
test
push
cmp
rorl
xchg
add
push
lods
sahf
aaa
xor
movsl
xchg
sbb
and
stos
sbb
ds
pop
ds
mov
cltd
fwait
pop
outsl
cmpsl
and
push
je
cmp
sub
adc
pop
lds
xchg
cld
pop
into
loope
daa
into
pop
mov
clc
push
outsl
or
and
xor
xor
scas
push
fisttpl
adc
mov
inc
inc
fidivrs
ret
ffree
fsubs
inc
jne
lcall
dec
fiadds
adc
in
loop
clc
mov
jb
jge
int3
in
aam
lods
int
cld
cmpsl
stc
mov
pop
or
or
jb
mov
cmpsl
leave
daa
sub
test
or
lret
lcall
mov
cmp
cmp
and
sbb
fsts
arpl
or
push
sahf
stc
inc
inc
mov
mov
stos
mov
jb
xchg
insl
mov
and
and
push
inc
push
xor
out
jp
adc
xchg
in
inc
flds
add
push
dec
rcl
aas
push
xor
mov
sub
add
pop
mov
adc
mov
pop
dec
out
lods
adc
mov
pop
cmp
jbe
add
jbe
out
iret
lock
loopne
pop
sub
push
pop
jl
mov
dec
mov
enter
mov
mov
shll
imul
dec
inc
mov
int
mov
std
mov
jl
fmulp
cmpsl
xchg
enter
cld
sub
aas
into
sahf
push
aad
in
ja
push
add
int3
in
popa
pop
or
inc
mov
dec
pop
cmp
adc
mull
push
inc
or
jno
out
hlt
shl
hlt
mov
pop
lahf
cltd
push
jne
loopne
mov
pop
sub
lods
stc
loop
mov
repz
mov
movsl
xchg
ja
mov
or
mov
jae
pop
sbb
adc
hlt
pop
add
or
push
clc
adc
dec
and
call
jecxz
data16
out
push
sahf
xor
ficoml
std
addr16
mov
ss
into
imul
xchg
xor
mov
loope
dec
shll
or
in
sub
inc
fiadds
loopne
xor
ds
std
push
hlt
imul
or
cli
mov
mov
imul
repnz
inc
fwait
push
cmp
js
push
jge
xchg
icebp
int3
sub
addr16
push
and
jne
mov
popf
imul
push
mov
daa
arpl
sbb
or
leave
cli
or
loopne
fnstsw
int
pushf
into
sub
push
fldenv
sub
lea
out
sub
cli
inc
sti
jno
sub
leave
mov
fwait
adc
dec
pop
sub
xor
cmp
dec
and
mov
aad
pop
mov
jp
in
sub
or
xchg
fnsave
pop
sbb
adc
xchg
mov
add
add
and
adc
neg
cmp
mov
adc
xchg
cmp
sub
fbld
cmpb
mov
repnz
cmpsb
fiaddl
loopne
xor
je
xchg
xchg
or
xor
outsb
les
mov
outsl
add
push
xor
sub
xor
dec
fcmovb
adc
cltd
and
add
cmp
add
pop
push
test
jg
imul
imul
out
daa
xor
dec
loopne
cmp
orl
addr16
mov
sbb
jmp
mov
sub
imul
gs
movsl
cmpsl
in
jge
mov
inc
mov
xor
andb
in
imul
arpl
out
mov
rcrl
lds
lcall
adc
fidivrl
or
push
or
sbb
hlt
cmpsb
sbb
mov
scas
or
jp
push
cmp
push
pusha
dec
or
iret
mov
or
mov
pop
hlt
mov
out
add
sarb
stos
xchg
movsb
or
jecxz
lods
dec
pop
mov
cmpsb
lahf
dec
scas
adc
cmc
into
lret
ds
std
movsl
arpl
fchs
jns
xor
fimull
and
imul
jp
push
xor
xor
sub
mov
sub
sub
cmp
jae
push
mov
jae
enter
push
mov
add
adc
pop
sub
into
push
insb
lahf
pop
lea
mov
je
mov
loopne
fstpl
sub
cmc
sub
xor
cwtl
aam
out
xchg
cmp
repnz
nop
rcrb
mov
aam
mov
pop
sub
add
mov
push
mov
dec
or
xchg
ss
insl
mov
mov
jge
mov
sub
pop
and
and
idivb
add
jmp
repnz
push
rcrb
inc
popf
es
mov
jle
testl
sti
movsl
fimuls
xchg
fdivr
xor
ret
mov
loopne
in
mov
fistps
jge
pop
adc
sub
cmp
cwtl
pop
xchg
stos
mov
or
jno
sub
movsl
xor
sbb
add
int
es
push
mov
aas
mov
push
jmp
pop
add
ret
pop
imul
decb
fiaddl
out
hlt
ret
adc
in
enter
cmc
push
pop
notb
mov
and
dec
gs
xorb
bound
enter
ljmp
mov
fdivrs
pop
pop
cmp
daa
add
mov
push
js
call
test
lds
adc
cmpsb
add
cmc
adc
dec
xor
dec
sub
rorl
jg
scas
sbb
fmul
mov
pop
dec
inc
rolb
push
jp
dec
out
inc
inc
ljmp
jle
xchg
rol
icebp
loope
fwait
imul
aam
jg
mulb
cwtl
aaa
or
mov
jnp
dec
in
jmp
xlat
xchg
inc
out
insb
shr
or
clc
push
sbb
rorb
in
push
into
fs
lock
inc
fstpt
outsb
pop
or
fistps
ret
cmc
hlt
int
mov
pop
mov
popf
sub
and
enter
shll
dec
pop
or
test
push
sahf
mov
add
mov
xchg
insb
cmpb
loop
das
je
in
adc
cwtl
dec
lcall
out
aam
push
mov
test
xchg
cmp
stc
jge
cwtl
out
push
stos
inc
loop
jl
dec
mov
add
inc
sbb
dec
xor
mov
int3
or
fs
out
ret
aas
pop
mov
dec
pusha
xor
jle
sub
sbb
in
flds
jo
les
bound
clc
and
mov
add
sbb
push
or
das
lods
xchg
rcrl
sbb
push
mov
das
mov
mov
pop
fists
in
and
movsb
inc
or
pop
push
push
or
sub
xchg
inc
neg
xchg
aas
mov
push
stc
and
push
scas
outsb
clc
pushw
cmp
out
jne
nopl
out
aam
data16
imul
pusha
mov
popa
sub
jae
ja
xchg
fst
or
pop
repz
shrb
in
mov
testb
jae
mov
ret
shll
out
xchg
subl
ret
out
cli
mov
adc
js
les
add
dec
xchg
mov
cmpsb
adc
jne
add
adc
sbb
jmp
es
cmpxchg
addr16
sub
into
lret
mov
pusha
xor
xor
push
mov
push
insb
inc
push
iret
jbe
clc
push
in
cmpsb
pop
orb
das
xor
xchg
js
into
hlt
test
pop
cmp
adc
lea
jle
jmp
sub
fadds
jmp
outsl
mov
jmp
int3
or
xor
sub
xor
xchg
lret
clc
lret
arpl
mov
das
xchg
adc
pop
cmp
cwtl
push
xor
pusha
push
clc
mov
enter
dec
arpl
out
push
mov
cmp
pop
push
sub
dec
mov
mov
pusha
nop
sub
daa
mov
je
cmpsl
popl
or
out
add
jle
adc
mov
iret
add
sbb
xchg
push
mov
lds
pop
add
push
imul
adc
xor
outsl
cmp
xor
in
push
mov
movsl
add
popa
mov
test
sti
jne
pop
ja
cmpsb
inc
xchg
pop
cwtl
mov
fwait
out
fs
push
rcrb
in
sub
mov
call
addr16
adc
bound
and
xchg
cli
inc
xchg
sbb
xchg
mov
sub
mov
sub
jg
pushf
inc
les
pop
xchg
outsb
idivl
fisttpll
pop
fld
jne
or
arpl
xor
loope
subl
in
insl
shrb
es
nop
jp
cmp
movsb
movl
cmp
adc
add
jno
push
lret
mov
sub
faddp
addb
xor
fbld
imul
clc
add
jecxz
fistpll
mov
xchg
xor
sub
fcoml
mov
cmp
loop
push
stos
stos
adc
cmp
nop
mov
jne
cmp
mov
mov
pushf
mov
pop
push
xlat
mov
pop
popa
cmp
mov
mov
aad
mov
popf
mov
fcomp
xchg
pusha
ljmp
mov
mov
out
push
stc
outsl
pop
ljmp
inc
fistl
in
mov
dec
mov
push
xchg
adc
inc
in
mov
rcr
push
sub
into
scas
or
loopne
shll
ljmp
mov
popa
imul
and
lcall
bound
jns
je
hlt
mov
and
int
scas
popf
jmp
test
mov
xlat
fldt
dec
add
js
popa
push
fs
xor
sub
jns
insl
cmp
in
fimull
int
mov
pushf
mov
adc
add
pop
jmp
mov
and
mov
movsb
add
or
push
mov
push
cs
pop
mov
mov
pop
cwtl
dec
scas
pushf
push
into
movsl
lahf
nop
add
adc
fists
in
notb
inc
leave
mov
loope
xor
mov
xchg
sbb
sub
inc
pop
popf
movsl
lcall
mov
xchg
xchg
mov
inc
test
insb
jl
jne
xlat
incl
fcomip
pop
fldenv
mov
inc
aad
xor
iret
mov
insl
mov
or
jp
xor
and
sub
cs
bound
jp
xor
adc
popa
xlat
jnp
fimull
jb
push
jecxz
cmovb
lahf
pop
sbb
fmulp
adc
fistpll
je
adc
mov
fimuls
cmp
and
aad
mov
jge
jno
xor
cltd
test
mov
gs
sbb
stos
ja
leave
dec
add
in
add
jecxz
sub
push
adc
lds
cmc
inc
mov
lock
pop
fiadds
mov
inc
cmpsb
cmp
cmpsl
push
test
push
inc
cmp
cld
mov
mov
cmp
int3
xchg
icebp
or
sbb
aad
pop
jg
dec
mov
pop
dec
add
imulb
jecxz
out
push
mov
inc
test
and
inc
mov
cltd
mov
jb
and
rcr
mov
cmp
das
jecxz
cmp
push
stos
out
jo
jg
pop
mov
das
push
in
lods
outsb
out
pop
add
iret
scas
pusha
and
das
pop
fstpt
test
mov
and
adcb
inc
pop
mov
adc
bound
rep
scas
jg
repz
lret
xor
ret
xchg
loope
cmpsl
jbe
or
lahf
pop
repz
hlt
loopne
jmp
pop
fidivrl
jno
mov
pop
pop
and
cmc
mov
push
add
pop
mov
pop
jns
out
mov
cmc
loopne
jnp
out
push
sbb
push
push
sahf
je
stos
movsb
loopne
pushf
sahf
out
inc
jecxz
sti
push
loop
ljmp
testb
jbe
mov
imul
cmp
or
jmp
enter
repnz
arpl
sub
cmp
das
xlat
daa
and
xlat
aam
inc
mov
adc
stos
enter
push
mov
std
movl
jae
sbb
lret
and
insb
mov
leave
dec
into
pop
ret
jle
sbb
fildl
push
enter
rolb
or
mov
sub
dec
xor
push
call
rclb
push
test
cmp
sub
inc
push
fcom
lea
sbb
cli
mov
mov
hlt
filds
pop
xchg
stos
sti
adc
or
mov
in
sbb
stos
push
enter
orl
gs
dec
sbb
xor
fsubrp
sub
dec
and
rorl
ds
call
jnp
lret
jge
and
cmpl
les
js
mov
repz
iret
xor
xor
push
xchg
dec
lahf
imul
pushf
xor
cmp
rolb
loopne
ljmp
clc
dec
mov
repnz
sub
scas
lea
xor
dec
hlt
out
mov
mov
mov
mov
lea
insb
imull
repnz
mov
and
push
dec
and
dec
ss
push
xchg
loop
xlat
jae
test
iret
fldl
and
push
dec
cltd
out
mov
dec
call
sahf
adc
scas
mov
mov
and
jp
lds
add
adc
cmp
mov
insb
scas
ljmp
push
sbb
dec
aad
push
das
aaa
mov
int
dec
adc
sbb
movb
mov
rolb
cwtl
sub
jae
out
mov
ds
sub
sbb
insl
inc
jle
pushf
lods
mov
in
mov
test
fstpt
aam
inc
mov
sbb
mov
cmp
mov
jle
xor
int
pop
movsb
pop
mov
push
addr16
xor
jle
icebp
or
aam
xor
add
pop
and
les
jb
cmc
adc
mov
jge
insb
sbb
and
fs
lahf
out
adc
shrb
repz
mov
ret
inc
test
sahf
mov
pop
sbb
xor
inc
pop
stc
pushf
sahf
fs
mov
jae
xor
mov
add
arpl
loopne
pop
shl
popa
repz
fistps
ud2
cld
rcrb
scas
sub
cmp
js
sub
xchg
dec
das
inc
mov
mov
test
pop
pop
mov
fwait
outsl
xchg
out
rol
cmp
movsb
incl
mov
daa
and
inc
sahf
mov
outsb
add
inc
jl
and
jecxz
je
pushw
or
lret
mov
add
iret
dec
lahf
jecxz
arpl
push
mov
rcl
mov
sahf
xchg
xchg
xlat
sbb
or
scas
ds
push
scas
mov
fdiv
mov
pop
arpl
xchg
xchg
pop
popf
sbb
mov
jnp
and
inc
jb
xor
sub
dec
out
mov
sub
shll
xlat
cmpsl
add
and
add
cmc
add
aaa
fs
les
stc
push
fstpl
aad
orb
ret
cmpsl
fstpt
pop
adc
int
push
mov
pop
outsb
andb
mov
cmpsb
cld
inc
aas
js
sbb
out
divl
add
test
mov
dec
mov
sub
callw
dec
rclb
mov
mov
repnz
jb
leave
mov
jo
cmp
xor
sub
mov
in
cmp
hlt
sbb
cmc
push
cmp
mov
rcr
lret
aaa
outsb
test
mov
cmp
jne
loopne
ret
pop
std
sbb
mov
push
in
dec
mov
sub
cwtl
and
jbe
push
test
cmpsl
ss
dec
je
xor
xchg
popf
into
mov
out
mov
in
push
add
or
jbe
pop
jle
pop
es
popa
fstl
lret
mov
lret
mov
pop
push
xchg
lods
push
push
int3
add
jnp
pop
and
aam
les
xchg
or
push
test
insb
int
sub
jo
mov
pop
mov
insb
das
gs
shll
add
push
sbb
dec
out
pop
sbb
xor
xchg
cmp
jecxz
sub
aas
cs
add
sahf
decb
aaa
lods
movsb
subl
cmp
repz
mov
inc
stos
push
push
sub
lods
mov
sti
xor
test
pop
aad
int
dec
loopne
sbb
pop
dec
push
mov
popf
xchg
je
les
xor
lcall
xchg
ljmp
and
xor
fistpl
cmp
call
rol
push
in
inc
inc
in
inc
push
out
mov
aas
sbb
inc
pop
mov
xchg
add
icebp
test
pop
rolb
insl
pushf
and
loopne
pusha
movsb
addr16
pop
dec
push
or
rol
jg
aaa
ret
shrb
and
iret
sbb
xor
fbld
sub
lret
scas
add
scas
or
jl
dec
jmp
jno
push
cld
mov
and
dec
lret
or
mov
loope
int3
lret
add
out
or
movsl
scas
aaa
lock
repnz
push
cwtl
outsb
adc
je
js
add
pop
fistpll
inc
rcr
out
cmp
sub
test
mov
ds
cmp
scas
cmpsl
cmp
std
lods
aaa
push
mov
inc
mov
hlt
rcrb
mov
push
adc
loopne
lret
rorb
inc
cmc
cmc
push
or
inc
mov
push
and
ja
push
fists
cmpsb
push
sub
sub
movsl
fcmovb
shl
pop
std
clc
dec
pop
popa
push
imulb
adc
test
or
fs
inc
cmp
inc
or
out
ret
mov
mov
mov
fadd
addr16
adc
add
aas
mov
std
xor
test
add
jl
arpl
mov
adc
sahf
jp
fistl
sub
add
inc
popf
shr
test
xor
pop
xor
mov
and
ja
push
cmp
stos
dec
cltd
dec
lock
cld
mov
sbb
cltd
inc
jmp
sbb
mov
mov
sbb
sbb
lods
mov
dec
mov
in
xchg
push
mov
ljmp
sub
aaa
loop
imull
cs
mov
es
aaa
mov
addr16
inc
addb
pushf
shrb
jmp
movsb
bound
je
push
adc
scas
push
sub
pop
xor
inc
pop
or
dec
fwait
mov
scas
lea
sbb
scas
les
subl
cs
lcall
inc
clc
fidivrl
push
popf
xor
inc
push
gs
icebp
enter
cmovle
and
mov
out
jbe
sbb
addps
ja
mov
pop
out
push
lret
jmp
outsb
add
dec
jnp
mov
xlat
jl
jae
sbb
mov
push
sahf
pushf
mov
cltd
stc
pop
les
aas
push
call
jecxz
xchg
cltd
jle
dec
mov
in
mov
cltd
das
hlt
int
insb
pop
iret
cmpsl
iret
cltd
insl
adc
jmp
mov
insl
hlt
addr16
pop
push
pop
mov
lock
xor
and
ljmp
loopne
dec
xchg
or
orl
or
and
daa
or
in
sbb
inc
dec
ds
sub
jp
pop
xorb
fwait
jo
aaa
jge
rcrb
repz
jno
lret
xor
outsl
int3
inc
cmc
insl
aaa
rclb
mov
roll
shlb
roll
cmc
inc
flds
int3
popf
jmp
mov
das
mov
jecxz
cmpsb
jecxz
mov
pop
cld
and
push
cwtl
inc
adc
lods
roll
popl
add
js
inc
push
sub
mov
mov
pop
push
cs
or
jl
out
sbb
fiaddl
xor
and
mov
jecxz
jmp
and
or
inc
sar
cli
adcb
cmp
inc
cmpsb
fisubs
mov
out
fcoml
sub
scas
into
in
xor
pop
xor
mov
inc
inc
fs
or
ja
dec
int3
fadds
mov
xor
fildl
sar
sbb
scas
sbbl
dec
and
or
scas
inc
jae
loope
and
iret
mov
xor
lret
into
ljmp
jne
dec
and
mov
popf
out
test
xchg
enter
xchg
sarb
xchg
ror
mov
adc
sub
mov
gs
jnp
mov
test
lcall
mov
jae
adc
cmova
xchg
push
xchg
sahf
arpl
xor
fildll
in
pop
pushf
fcmovbe
inc
xchg
and
fwait
mov
iret
pop
cltd
stos
movsl
pop
jmp
or
mov
cmpsb
out
sarb
mov
add
nop
sub
pop
pop
jle
push
testb
gs
mov
sbb
cmp
test
nop
add
ss
pusha
mov
out
add
fcomi
jns
inc
cwtl
mov
scas
sub
daa
mov
nop
andl
sbb
xchg
jne
push
fcomps
fcom
mov
xor
fimuls
and
in
nop
cmp
in
and
mov
lea
in
mul
xlat
arpl
andps
sbb
mov
sti
push
xchg
adc
sbb
add
je
mov
leave
out
popa
sub
sub
mov
dec
sahf
inc
sbb
jb
rcll
ret
xchg
cmp
orl
adc
xor
push
cmp
or
add
inc
mov
lods
dec
lcall
jmp
pop
sbb
dec
dec
std
orb
popf
xor
mov
inc
mov
insb
sbbl
fnsave
sub
loope
ljmp
stc
sbb
sbb
jmp
data16
push
mov
loope
adc
jecxz
mov
lock
xlat
in
add
xchg
or
loope
cmp
jo
dec
pusha
cmp
dec
fisubrs
or
cmpsl
clc
in
enter
hlt
mov
popl
jno
xchg
filds
jno
jne
pop
cmp
push
int
cmpsl
lods
je
jecxz
dec
ret
jnp
lods
outsb
lret
in
sbb
das
push
daa
icebp
outsl
in
clc
ljmp
sbb
push
cmc
out
scas
fsubrs
stos
shrb
jb
jo
popa
clc
dec
add
push
incb
imul
fwait
lret
or
andl
pusha
dec
push
push
dec
dec
es
aas
sbb
loop
mov
int
adc
jnp
in
jg
jbe
gs
lcall
leave
xor
mov
enter
lds
lahf
lret
rcrl
nop
and
gs
push
in
lock
inc
jo
call
fnsave
cld
mov
pushl
xchg
into
mov
or
xchg
nop
out
pop
mov
dec
xchg
mov
and
inc
int3
pop
fs
rorb
loop
sti
not
fwait
out
push
and
xor
sub
jno
repnz
lods
jge
fcoms
sub
das
shlb
push
push
lea
mov
idiv
mov
clc
les
xchg
jb
sub
pop
call
mov
popf
or
imul
add
shll
out
movsb
and
repz
fs
jbe
stos
and
scas
push
lods
inc
into
sahf
sarb
cmp
push
xorl
add
shrb
xchg
cld
cltd
pop
push
push
mov
mov
mov
xchg
in
aaa
int3
iret
dec
arpl
pop
adcb
or
mov
mov
movsb
jo
enter
inc
movsb
and
fildll
scas
ljmp
rolb
cltd
cltd
mov
fistpl
xorb
lds
dec
repz
push
add
repnz
mov
fstl
nop
xchg
pushf
jb
mov
xor
push
lret
dec
mov
leave
and
leave
mov
pop
add
inc
pop
push
add
dec
dec
sbb
xchg
or
push
ficoms
mov
adcl
sbb
fisubrs
mov
ljmp
lea
cmp
add
mov
add
jl
sub
mov
dec
mov
or
mov
mov
mov
fidivrs
gs
pop
push
jecxz
and
ds
and
pushf
sbb
dec
add
lds
ljmp
rcr
outsb
mov
out
cmp
test
and
inc
and
dec
add
jle
push
adc
addr16
xor
sub
pop
sub
iret
mov
aaa
repnz
jmp
lock
jbe
or
sbb
mov
adc
pop
fmull
popa
xchg
xchg
mov
nop
push
movsl
xor
mov
jae
mull
push
sbb
daa
jge
xchg
add
ljmp
xchg
std
call
sub
pop
xchg
push
sub
mov
mov
jo
lods
movsl
sti
das
inc
fisubl
out
mov
bnd
bswap
mov
pop
lds
sbb
stc
mov
inc
call
imul
or
iret
jmp
push
jge
mov
shlb
sahf
push
jnp
sub
mov
ficoml
fnstcw
lea
push
xchg
test
mov
into
fisttpll
mov
sti
popf
pop
out
xor
inc
stos
sti
mov
sbb
xor
mov
mov
dec
push
xchg
cmpsl
ljmp
add
pop
icebp
adc
int3
aam
imul
sbb
repz
rorl
in
clc
aad
mov
dec
dec
xor
sub
xor
xlat
repz
cmp
inc
lret
int
inc
push
bound
lahf
mov
sub
inc
adc
sbbb
sub
scas
test
paddw
out
outsb
sub
inc
cmp
jns
or
call
imul
push
mov
xor
out
adc
test
xchg
les
lods
fldenv
pop
loope
repz
add
popf
daa
cmpsl
in
pop
test
fdivrl
push
fnstcw
jecxz
push
or
test
outsb
push
in
xchg
lret
inc
arpl
movsb
or
and
dec
and
mov
dec
mov
pop
sbb
insl
pop
loope
in
push
push
sahf
xor
fcompl
mov
fs
or
xor
mov
mov
push
sub
into
jns
ja
sub
std
sub
inc
xor
inc
out
int
arpl
lds
push
push
ret
enter
jle
repz
mov
jmp
jge
pop
andb
mov
adc
ja
push
into
mov
xchg
dec
mov
aaa
push
mov
cwtl
mov
lcall
js
pop
mov
cltd
fnstcw
push
inc
movsb
mov
scas
jge
jmp
rcll
negl
testb
sahf
xorb
sub
adc
or
cld
mov
adc
out
pop
mov
imul
sarb
movsl
insl
xor
inc
or
sub
sub
pop
shl
bound
frstor
adc
icebp
mov
es
add
mov
xor
mov
repz
int
ror
pop
push
xor
mov
jo
loop
daa
mov
cs
push
dec
pop
add
mov
mov
adc
dec
mov
jnp
pop
cmp
ror
jge
push
int
mov
imul
sub
sbb
mov
scas
aaa
mov
inc
inc
mov
into
mov
xor
sbb
daa
in
xchg
xor
mov
movsl
xor
mulb
sbb
int
jne
sbb
in
aaa
add
enter
sub
and
mov
and
and
mov
jae
or
fistpll
cmp
and
cmpsb
jnp
popa
push
push
xchg
aas
addl
icebp
aaa
mov
fwait
ss
in
lods
push
xchg
movl
xlat
xchg
jb
cmovbe
push
xchg
insb
popa
pushf
lret
xchg
mov
ret
lret
and
icebp
in
adc
jg
faddp
and
mov
stc
daa
scas
stos
jns
xchg
inc
mov
sbb
inc
arpl
mov
subl
aad
pusha
mov
pop
icebp
inc
int3
loop
dec
pop
dec
lea
scas
and
je
xchg
bound
xor
jnp
cltd
cmp
jge
imulb
arpl
jl
pushf
iret
add
mov
pop
jns
les
jbe
sbb
out
in
out
pop
or
fs
inc
inc
rcrl
push
fninit
ja
stos
fdivrl
adcl
fucomi
es
xor
dec
popa
in
pop
xor
cmp
add
addr16
adc
ja
or
jae
shlb
ret
je
sub
mov
adc
das
andl
xchg
inc
call
in
xchg
xchg
lods
ja
jbe
fcoms
and
inc
pop
jno
sbb
inc
xor
mov
mov
scas
daa
les
jae
mov
lods
xlat
mov
add
mov
pop
rorb
mov
shlb
sub
push
xchg
in
add
mov
call
push
jl
aam
lea
outsb
xchg
ljmp
mov
adc
divb
cmpsb
push
cmp
dec
cmpsl
xlat
mov
leave
clc
or
sbb
mov
fidivrs
dec
or
dec
dec
xchg
and
mov
xor
push
test
pushf
ret
popa
aad
mov
mov
in
cmp
js
dec
int
in
jae
pop
add
pop
jnp
mov
inc
cli
xchg
adc
fidivrl
or
lock
mov
jns
jbe
mov
stos
push
or
fnsave
push
sbb
mov
xchg
pushf
lods
mov
das
es
rol
mov
pop
mov
mov
mov
inc
nop
mov
mov
rcll
in
mov
dec
xchg
sbb
xchg
xchg
std
arpl
fistpl
jl
popa
loope
js
repz
imul
push
push
jns
ljmp
iret
pop
dec
push
ja
ret
inc
stos
test
bound
mov
push
pop
push
jne
mov
jnp
xchg
ret
pop
call
jae
je
arpl
push
cld
mov
cs
add
out
aas
jg
nop
add
push
inc
sub
add
mov
jns
and
movsl
lock
add
aam
mov
fsubs
dec
adc
insb
dec
mov
dec
add
pop
hlt
aaa
hlt
inc
adc
jnp
jge
mov
shl
arpl
xchg
jmp
mov
cmp
push
cmp
mov
je
aas
dec
inc
pop
mov
stos
ror
ret
xchg
sbb
add
push
lods
ficoml
ret
dec
jecxz
jl
or
mov
lea
aas
or
movsb
arpl
out
lcall
fs
ds
fwait
xchg
mov
cmp
jmp
stos
in
inc
push
jno
xchg
mov
out
mov
cmp
loopne
stc
push
dec
sbbl
mov
jmp
push
cltd
out
mov
push
sbb
lods
pop
mov
rclb
fcomi
mov
xchg
cmc
pop
sub
jcxz
addr16
aaa
push
popa
jns
idivl
mov
jne
inc
xor
jmp
sti
rolb
xchg
jge
add
lcall
pop
lods
jnp
sub
out
cmp
inc
fidivl
in
stos
adc
fnstcw
es
je
or
fcmovb
xor
dec
iret
subl
inc
movsb
or
dec
rcl
insl
xchg
fbld
mov
out
js
cmp
cld
scas
hlt
dec
lahf
jge
adc
iret
sub
pop
push
xor
adc
rclb
repnz
push
sbb
mov
pop
sub
jno
ret
xor
les
cld
lahf
addr16
adc
jecxz
insb
cmp
stc
ss
mov
outsb
into
add
fildl
add
in
dec
sbb
jp
cmp
pop
in
adc
jnp
aaa
xor
roll
mov
repnz
gs
mov
adc
insl
mov
ret
xor
push
pop
sti
xor
jo
sub
aam
jl
pop
sub
pop
stos
repz
xor
loopne
jp
out
incl
lds
mov
xor
push
fistpl
dec
or
imul
roll
adc
push
pushf
mov
push
je
mov
inc
outsb
mov
out
mov
fimull
int
aas
popa
loope
ret
xchg
push
fmull
push
xchg
aaa
lods
pop
xchg
push
outsl
mov
int3
cmpsb
jle
sub
mov
or
rol
and
sbb
push
rorl
xchg
inc
mov
pop
fsubrl
xchg
icebp
sub
adc
pop
in
outsl
jge
adc
xor
shrb
pop
addr16
or
pusha
iret
fs
sbb
sbb
mov
sbb
in
call
inc
test
mov
mov
in
dec
cmp
jg
or
mov
xor
xlat
sub
add
adc
fadds
add
cmp
push
xor
xor
outsl
sub
push
and
and
push
imul
sbb
xchg
fbstp
add
and
popf
test
enter
dec
mov
lahf
imul
sbb
cmp
or
dec
mov
sub
sbb
leave
cmpsl
or
loop
and
xorl
jge
cmp
sub
gs
mov
icebp
inc
test
add
push
jnp
inc
or
outsl
daa
rolb
mov
in
push
cmp
mov
dec
push
das
jle
std
stos
mov
jo
push
xchg
cmp
std
cmp
or
clc
pop
cld
in
ds
mov
aaa
int3
cmc
push
pcmpeqd
call
mov
ror
and
xor
sar
xchg
and
stc
mov
inc
xorl
xchg
jb
cmpsl
pop
je
inc
fdivrl
fsubrl
inc
ret
dec
or
js
lds
orb
mov
inc
clc
push
pop
add
arpl
stc
pop
in
mov
inc
add
aaa
inc
subl
in
sbbl
push
inc
ja
gs
imul
out
lcall
and
out
sub
test
mov
outsb
jl
mov
push
stos
loopne
inc
lret
push
and
cmp
and
or
cmp
stc
xchg
push
or
cmp
in
mov
adc
mov
fldt
pop
mov
or
out
pop
mov
daa
dec
idivl
in
push
or
jnp
fwait
cmp
subl
adc
movl
mov
in
pop
inc
jb
ss
popf
popa
jp
push
lea
test
cwtl
leave
dec
and
push
std
cmp
push
je
adc
push
adc
and
xchg
leave
dec
mov
mov
cld
inc
movsl
dec
ja
adc
imul
and
rcrl
inc
pop
test
cmp
js
add
xchg
outsb
pop
xor
call
mov
xor
popf
inc
xchg
out
pop
repz
mov
data16
gs
mov
stc
mov
mov
ds
sahf
into
add
fisttpll
mov
and
lret
cmpsl
jecxz
add
fbld
jl
lods
mov
cli
push
mov
mov
retw
andl
loopne
mov
jecxz
insl
and
repz
or
hlt
adc
mov
xor
fsubr
jno
jno
push
dec
adc
stos
or
mov
inc
loopne
and
decb
and
xor
aas
cmc
popa
scas
push
test
imul
pop
inc
sub
adc
push
sub
pushf
push
in
in
pop
jge
in
mov
mov
ret
jae
xor
xchg
or
push
in
xchg
inc
push
loope
outsb
sbb
ret
mov
sub
pop
cmp
outsb
pop
outsl
cli
sub
add
outsl
cmp
pop
lcall
in
adcl
dec
addb
lock
pop
push
int
dec
inc
cli
push
std
jle
xchg
lds
clc
inc
dec
ret
orl
cmp
cmp
dec
outsb
pop
test
cltd
mov
mov
push
insb
fstp
sahf
mov
pop
outsl
pop
mov
mov
xchg
push
mov
negl
dec
cltd
jnp
dec
dec
loope
mov
push
pushf
insl
pop
push
jmp
cmp
dec
add
cmp
add
loope
cmc
xor
mov
lods
stc
sti
gs
fisubrl
xor
fsts
andl
testb
loop
out
push
arpl
or
repnz
iret
lea
or
sbb
sub
into
sarb
outsl
jecxz
negl
pop
std
inc
sahf
xor
repz
lret
pop
mov
cli
fsubr
std
out
jecxz
sub
call
icebp
in
pushf
jg
inc
and
test
push
test
out
cmc
lret
gs
cmp
scas
in
xor
xor
imul
inc
out
enter
jae
push
cmp
scas
mov
mov
mov
fdivs
push
mov
scas
pusha
lcall
cwtl
xor
and
cmp
fstl
add
jle
pop
adc
pushf
xchg
inc
inc
arpl
push
sbb
mov
sub
adc
push
push
in
sub
and
and
xorl
in
xor
dec
add
jl
fs
or
or
out
and
push
mov
arpl
inc
or
dec
cmpsb
adc
jge
repnz
jns
notb
jmp
cmp
nop
dec
fstps
add
fidivs
insl
mov
and
in
and
cli
loopne
imul
outsb
cmovl
ljmp
push
sbb
cwtl
cmc
js
int
dec
test
and
out
mov
push
arpl
push
cmp
adc
lods
sbb
je
mov
aam
ret
xchg
jge
jo
jle
cmp
cmp
xchg
mov
test
mov
and
lret
mov
sbb
mov
add
testl
and
xchg
xlat
stc
icebp
pop
repz
and
push
jmp
sub
add
stos
fldl
lret
and
jge
stos
cltd
xchg
sub
aam
mov
mov
adc
xor
into
test
add
fdivl
lds
adc
leave
cli
and
movsl
subl
incl
mov
mov
and
lret
inc
pushf
pushf
mov
mov
pop
int
xchg
or
sub
dec
aad
bnd
jge
mov
call
and
stc
and
mov
insb
inc
js
lock
inc
sub
jg
lods
sahf
sti
movsb
int3
sub
popf
sub
scas
dec
out
out
sbb
movsb
loopne
add
add
jge
fisubl
xchg
cmpsl
mov
sbb
pop
sub
loopne
mov
pushf
sbb
pop
inc
xchg
xchg
nop
dec
pop
lea
pop
inc
or
push
sbb
mov
jo
inc
or
lds
push
mov
pop
jmp
aad
dec
stos
adc
stc
jle
dec
ret
mov
pop
cmp
imul
stos
jecxz
xor
loopne
icebp
insb
rclb
xchg
jecxz
lret
xchg
sahf
push
dec
jecxz
add
outsb
cmp
xchg
sub
in
cmpsb
xor
or
jecxz
ljmp
xchg
enter
add
xchg
sarb
push
push
test
sub
shll
jae
rorl
pop
cmpsb
lcall
in
clts
jb
pop
and
xchg
jmp
jp
insb
cmpsb
rol
insb
pop
cmp
scas
or
mov
cmp
jmp
pop
rcrb
push
pop
rcrb
sti
dec
dec
xchg
negl
arpl
push
add
pop
jo
lock
imul
add
mov
mov
test
sbb
xor
fcmovbe
lcall
and
outsb
push
adc
loop
aas
add
sbb
rcll
or
xlat
out
push
mov
jne
jmp
in
pusha
loopne
aam
adc
into
pop
cmp
dec
pop
jnp
mov
pop
mov
sti
cmpsl
rorl
or
xchg
das
movsb
and
push
cli
pop
xchg
lods
idivb
lds
cwtl
pop
and
insl
or
xchg
xchg
jmp
cmp
push
xlat
sbb
je
mov
popf
fldcw
lea
sub
std
bound
mov
movsb
push
sbb
push
data16
jnp
das
add
dec
mov
jmp
cmpsb
sbb
leave
outsl
inc
add
cli
inc
pop
lret
sub
xchg
jo
push
test
push
les
mov
aad
and
shll
push
jb
push
repz
jnp
mov
jl
insw
jl
ret
scas
addr16
sarl
ret
sbb
lahf
inc
sbb
jns
jecxz
sbb
mov
ljmp
pop
sbb
pop
jno
inc
sub
pop
mov
adc
adc
inc
test
ljmp
idivb
rol
mov
sub
jl
shl
jmp
mov
fsts
cmp
loopne
mov
popa
out
mov
push
rol
jge
mov
push
sub
jmp
imul
xor
and
inc
mov
dec
or
je
out
jno
push
mov
dec
idivl
sbb
mov
adc
dec
add
pop
into
mov
flds
popa
xlat
cmp
xor
mov
xchg
cmp
xchg
xlat
fs
push
mov
int
fcmovu
fcoml
pop
push
pop
rep
cltd
ss
dec
andl
xor
dec
dec
les
outsb
rorl
cli
or
repnz
sbb
loopne
inc
popf
movl
mov
or
add
inc
scas
fwait
jecxz
pop
loop
ficomps
sti
jns
inc
mov
shrb
and
stos
fisubl
testb
mov
sub
fcoml
insb
mov
sti
ljmp
ret
stos
xchg
mov
test
lods
sub
sbb
inc
pop
xor
push
ljmp
pminsw
sbb
jne
sbb
sti
test
or
mov
inc
mov
sti
mov
sbb
hlt
mov
push
imul
pusha
lahf
cmpsb
sbb
out
pop
rorl
xor
outsl
or
pushf
lcall
je
mov
lea
mov
clc
inc
push
inc
into
push
in
push
cmp
inc
in
pop
cltd
fisttpll
stc
arpl
lcall
add
sbb
js
stos
and
mov
jbe
jg
insl
push
lock
pop
xor
xor
mov
pop
or
jbe
sub
jno
jo
popa
sbb
imul
int
push
hlt
dec
xor
add
pushf
repz
ja
stos
push
mov
loope
lcall
dec
dec
sub
out
sti
push
adc
mov
scas
jo
jno
sub
repnz
xchg
fwait
push
cvttps2pi
divl
jp
orb
push
lea
mov
lcall
int3
call
pop
mov
fidivrs
sub
xlat
add
xchg
adc
mov
rcll
push
fmuls
pop
xchg
mov
sti
fmul
in
fcomp
xchg
mov
mov
mov
stos
xchg
je
push
pop
sub
sub
enter
cmpsl
enter
divb
pop
repnz
ret
fists
sbb
inc
cmp
sbb
xor
cli
out
pop
lret
cmc
dec
cli
xchg
movsb
xor
pushf
out
mov
insb
xor
in
out
xchg
inc
rcrl
insl
insl
ja
loope
jg
fwait
push
add
clc
xor
mov
int3
sub
dec
jmp
cmc
popa
sbb
in
jecxz
int3
int3
or
mov
lahf
hlt
pop
mov
mov
out
rorl
filds
mov
add
jmp
sar
xchg
imul
xchg
pop
lcall
cwtl
lds
pop
xchg
sub
jmp
int3
repz
les
popf
adc
pop
jle
jns
sbb
jns
lcall
inc
test
lds
add
mov
arpl
movsb
inc
mov
adc
out
push
xchg
dec
mov
xchg
shl
mov
dec
push
mov
test
sbb
popf
add
cmp
pop
imul
jmp
mov
add
or
pop
cmc
in
dec
into
sub
adc
cmp
out
push
cmp
or
repz
cwtl
mov
xchg
mov
adc
mov
repnz
ja
pop
cmp
fisubrl
push
push
dec
pop
js
popa
xchg
sub
daa
ret
lods
in
mov
idivb
cmp
ljmp
adc
dec
mov
xor
ljmp
and
xchg
arpl
insl
pop
aas
mov
pop
or
lock
int3
fmuls
cmp
xlat
in
cmp
mov
cmp
cwtl
mov
fstps
and
testb
das
stos
mov
and
push
mov
in
cmp
nop
fsts
adc
push
dec
mov
mov
adc
dec
inc
loop
repz
fistl
xchg
mov
xchg
mov
push
mov
ja
insl
push
pop
sub
pusha
inc
push
frstor
sub
daa
out
sbb
sub
add
cmp
fwait
ret
icebp
cmp
popa
rcrl
adcl
xorl
push
mov
enter
fadds
sub
mov
mov
add
mov
cld
push
in
in
jmp
mov
xchg
lcall
mov
test
andl
scas
mov
sub
mov
in
std
mov
insb
lret
les
push
xor
inc
jae
pop
in
cli
arpl
pop
scas
lods
mov
pop
mov
jae
xchg
jp
data16
jnp
addl
jecxz
hlt
xchg
shll
aas
scas
popa
ficoml
and
fldcw
stos
fwait
and
sub
adc
cmp
fs
mov
inc
adc
scas
pop
int
outsb
push
js
sub
mov
imul
push
mov
xchg
int
dec
andb
shll
ss
xlat
aas
cmpsb
jae
ds
pop
test
sti
jge
xchg
adc
or
ffreep
push
sub
mov
xor
popa
into
scas
push
fmull
fdiv
inc
jecxz
aam
push
inc
ret
dec
push
push
sbb
test
mov
mov
sbb
or
push
aaa
fldenv
mov
or
jnp
out
xorb
pop
aas
ljmp
inc
loope
sub
data16
dec
pop
mov
and
adc
add
jmp
xor
mov
repz
mov
out
adc
fs
movsl
sbb
adc
mov
jecxz
fldenv
or
test
or
lcall
mov
sti
test
xchg
aam
lahf
xchg
pop
scas
outsb
leave
loopne
sti
movsb
jl
jnp
sub
pop
addr16
push
push
mov
add
inc
cmp
call
in
push
fildll
add
mov
movsl
adc
lds
out
jmp
mov
insb
push
dec
rcr
dec
pop
and
iret
arpl
mov
and
push
icebp
and
shll
insb
nop
bnd
lds
jge
loop
mov
or
shlb
int
mov
es
arpl
and
xor
inc
das
aam
xor
imul
cld
sub
push
inc
push
mov
mov
mov
or
fld
fisubrs
and
xor
jecxz
xor
xchg
mov
lods
test
das
out
aam
jnp
shrb
and
fcomps
adc
scas
xchg
and
xlat
pop
or
rcrb
dec
sbb
xor
hlt
movsl
bound
or
cltd
filds
push
enter
aad
add
pop
push
dec
xor
in
dec
cmc
mov
daa
adc
arpl
xchg
cmp
mov
pop
arpl
adc
push
loope
std
movsb
dec
inc
loopne
or
pop
mov
and
or
lods
fs
addr16
fbstp
sbb
loope
loopne
adc
dec
and
or
sar
add
fcmovb
jo
les
outsb
jnp
rclb
je
add
sti
incb
mov
pop
adc
hlt
mov
icebp
iret
dec
es
dec
movl
insl
push
and
repz
lods
stc
cld
push
rcrb
in
out
movsb
mov
jge
scas
jg
fidivrs
xor
add
jle
jo
test
leave
mov
jecxz
sbb
aad
out
mov
push
push
xchg
lahf
or
cmpsb
repnz
inc
in
dec
sbb
icebp
and
out
xor
dec
add
sub
sub
ljmp
int
imul
adc
scas
mov
in
mov
adc
mov
jge
fsts
call
lahf
xor
mov
fsubrs
int
pusha
jae
xor
pop
add
loop
push
call
int
in
out
pop
xchg
loopne
push
in
pushf
mov
mov
repnz
pop
jmp
arpl
push
ss
adcb
dec
xor
xor
iret
jae
xchg
xor
push
push
sbb
outsl
fiaddl
xchg
sbb
mov
in
scas
mov
mov
xchg
xchg
out
jl
lahf
mov
mov
dec
jg
std
jb
testb
or
push
and
insl
insl
push
in
punpckhwd
inc
inc
jmp
cld
and
jnp
sti
cmp
addl
pextrw
mov
jmp
mov
jbe
inc
sub
mov
hlt
in
lret
or
movsb
inc
xchg
sarl
stc
int3
fwait
and
inc
stos
sbb
mov
push
lahf
out
rclb
iret
mov
stos
fbld
dec
lret
push
push
sub
jb
movsl
fnstcw
and
clc
add
pusha
fmuls
dec
mov
popf
sub
pop
adc
pop
rorl
int
sahf
push
pop
clc
push
loope
aas
aad
in
mov
mov
or
pop
pop
cwtl
mov
sar
sbb
arpl
xchg
xor
jnp
insl
lahf
cmc
rorl
int
clc
xor
pop
mov
leave
movsb
mov
bndstx
pop
out
fimull
xchg
ret
jns
test
jge
push
outsl
mov
jno
mov
aad
mov
cmp
jge
mov
icebp
fisttpl
fstps
cmp
out
sub
in
sbb
movsl
push
popa
mov
int
jbe
sbb
add
jmp
scas
push
or
lret
dec
mov
cs
and
cld
and
movb
enter
test
testl
das
mov
and
adc
in
adc
mov
inc
imul
test
xchg
loop
push
cmp
add
mov
imul
mov
sbbl
leave
xor
fbld
sub
xchg
cs
pushf
sbb
data16
cmp
jns
adc
bound
mov
test
or
outsl
adc
inc
adc
sub
mov
jg
cmp
push
stc
insl
mov
mov
aam
push
jp
and
stos
sub
mov
inc
popa
xchg
dec
jp
mov
sti
add
fbld
lods
cmpb
mov
or
cwtl
insb
lret
pop
cld
aas
sbb
xlat
scas
push
dec
mov
pop
pusha
rcrl
push
or
inc
pop
ds
cmpsb
mov
jge
loop
mov
not
cmp
jge
lods
and
ret
pop
fldl
aas
jp
xchg
ja
xor
jle
cs
lds
rclb
movb
and
ret
bound
leave
cmp
jle
lret
shr
jmp
cmp
pusha
xchg
fucomi
fsubs
sbb
add
imul
jl
cmp
adc
or
and
push
and
xor
fwait
inc
push
adcb
leave
push
jecxz
push
int
dec
jl
bnd
push
popf
imul
imul
fstpt
jl
addr16
cli
scas
jl
fnsetpm(287
jmp
xlat
pop
dec
scas
xor
test
dec
cmp
jmp
fcoms
aam
je
outsb
sahf
inc
out
and
aaa
add
pop
push
pusha
or
pop
or
loope
xchg
insl
fidivs
push
push
mov
insb
dec
pop
insb
push
adc
and
mov
popa
or
scas
xchg
jl
pusha
mov
mov
xchg
or
lret
ja
ljmp
push
jb
into
popa
xchg
or
dec
mov
jecxz
inc
jnp
cwtl
pushl
dec
popa
les
xchg
pop
cmp
and
mov
adc
or
mov
enter
jl
addr16
mov
or
mov
sub
fisttpll
fbld
and
lods
cmpsb
sbb
push
ss
xchg
add
ret
ret
mull
mov
int
int
cltd
xor
data16
ja
rorb
enter
mov
or
orb
pop
out
enter
pop
xchg
xchg
es
or
insb
lret
xchg
aad
cmp
mov
out
push
cwtl
xchg
or
inc
shlb
jle
mov
enter
test
ljmp
sub
test
jbe
leave
push
jnp
or
rol
mov
push
int
in
mov
adc
sbb
cld
cmp
cwtl
in
mov
idivl
pusha
repz
xor
sbb
push
mov
mov
jle
xor
fldl
and
add
dec
stc
push
adc
pop
fs
cmp
cs
rorl
jno
push
insb
xlat
or
pop
sti
sbb
mov
icebp
in
int3
mov
rolb
fwait
xor
pop
sub
mov
adc
dec
xchg
test
sub
shll
in
loopne
jmp
fiadds
cmp
mov
dec
jnp
enter
movsl
sub
mov
outsl
aam
lods
cld
leave
sub
jmp
sbb
mov
not
aad
mov
or
jns
adc
fcompp
dec
gs
orb
fildll
sahf
insb
aam
addl
icebp
shr
outsb
cltd
adc
sahf
sbb
int3
test
or
adc
into
push
int
jmp
aad
jp
in
sbb
test
fs
std
repnz
mov
aaa
pushf
sahf
pop
stos
jns
mov
jnp
push
jle
mov
mov
ret
mov
pop
pop
push
sahf
rorb
ret
or
or
pop
jp
sti
les
xor
outsl
add
jnp
bound
cmpsl
test
addr16
pusha
add
pushf
pop
dec
insb
pop
dec
insl
lods
ret
adc
icebp
mov
jg
dec
pop
fisubrs
sbb
dec
rclb
ds
aam
sub
imull
xlat
cmp
mov
sub
sarb
and
pop
or
add
decl
add
cmp
add
in
rorb
xchg
cmp
roll
sbb
dec
shrb
test
mov
and
push
mov
cmp
pop
fwait
jb
xchg
int
cmp
lret
aaa
mov
xor
jae
cld
cmpsl
stos
lret
mov
and
outsl
rcll
sub
scas
fldcw
std
inc
or
lods
and
adc
ret
cs
pusha
aaa
dec
mov
inc
pop
pop
mov
icebp
ja
je
iret
xor
dec
stos
shr
movb
movsb
rcll
gs
lcall
sbb
es
test
adc
jge
jnp
repnz
xor
insb
inc
sti
jns
hlt
xlat
fists
int
cmp
push
adc
fdivrp
cmc
cmp
test
pop
push
jae
pop
addr16
push
mov
or
push
lret
repz
pop
es
stos
cmpsb
mov
xchg
dec
adc
sahf
ljmp
mov
outsl
pop
out
or
fdivl
aas
mov
cmp
jmp
xor
aas
stos
rcrb
pop
addl
cmp
sub
movsb
sbb
mov
sub
xchg
popf
xchg
or
inc
cwtl
sti
test
dec
js
and
es
push
adc
test
fwait
sbb
ds
jb
mov
lea
fldt
xor
sub
mov
push
push
sub
or
add
test
jmp
mov
fwait
mov
sub
add
jns
xchg
push
and
les
jle
lock
mov
xchg
shlb
jl
push
mov
dec
push
mov
and
push
pop
insb
jl
jb
cld
or
inc
cmp
popw
pop
sub
popf
shll
mov
sub
fs
inc
mov
jge
ficompl
jle
dec
pop
and
in
push
stos
jmp
call
clc
cmpsb
cmp
jae
or
jge
jo
and
pop
pop
jge
and
sub
clc
ror
dec
mov
pop
outsb
mov
daa
inc
orl
push
daa
mov
xchg
aaa
add
mov
push
fcoml
sub
xchg
xchg
test
sbb
or
adc
out
aad
dec
push
inc
sbb
scas
sub
out
cwtl
cmpsl
enter
xchg
sbb
lret
inc
pop
push
loopne
push
bound
fcmovbe
test
iret
or
xchg
test
repnz
sbb
or
jmp
xor
pusha
bound
adc
lahf
rorb
inc
popf
fucomip
mov
inc
ljmp
loop
lcall
rol
jmp
xorl
fs
sbb
mov
xchg
arpl
pop
jo
mov
filds
loopne
xor
push
pop
ss
rorb
jns
imul
es
and
cmp
pushf
dec
scas
out
and
lods
or
mov
sub
js
stos
je
fstpl
xchg
aad
mov
inc
repz
inc
inc
mov
js
cwtl
loop
jl
mov
add
aas
es
lds
insb
inc
aam
iret
rclb
roll
idiv
adc
xor
cwtl
jbe
dec
cmc
aaa
lret
sbb
inc
xor
push
rcl
outsl
inc
mov
cmpsl
xchg
imul
mov
lret
pop
imul
das
test
cmp
adc
rolb
dec
mov
mov
and
push
mov
push
lock
xor
outsl
aad
pop
xchg
repnz
mov
mov
cmpsb
inc
repnz
popa
int3
andl
xor
cmpl
ds
ss
repz
fucomip
mov
iret
pop
xor
mov
jb
test
mov
loop
xchg
push
ret
lods
mov
cmpb
inc
int3
and
add
mov
cmp
roll
sub
insb
js
sahf
out
pop
lret
clc
xchg
cmpsb
jmp
ja
and
xor
repnz
xor
test
xchg
and
arpl
stos
cwtl
xor
sub
mov
arpl
stc
test
fstps
sub
arpl
push
enter
jecxz
out
bound
cvtps2pd
imul
addr16
sub
cwtl
pop
pop
mov
fnstsw
or
aas
sahf
imul
cmp
mov
pop
sbb
mov
gs
cmp
add
pop
xorl
adc
xchg
jp
jmp
out
jp
stos
repz
addr16
insb
xchg
jp
lods
es
lods
cmc
icebp
push
sbb
push
and
lcall
add
popa
enter
xchg
sub
dec
das
adc
dec
xor
cmpl
daa
in
sahf
lds
mov
pop
xor
insb
or
ljmp
insl
ss
mov
push
sub
int3
jbe
hlt
js
dec
insb
daa
jo
and
cmpsl
ret
cmpsb
mov
mov
lods
in
mov
jb
push
pop
cwtl
push
in
pop
jp
sbb
jecxz
test
dec
out
push
sbb
mov
sti
pop
dec
div
repnz
dec
push
repnz
push
xor
xor
xchg
das
stos
pusha
inc
adc
mov
stos
mov
mov
lcall
sbb
lahf
mov
jno
cmc
push
push
dec
scas
aad
cmpsl
adc
fdivs
fstpt
lret
addb
push
sub
arpl
dec
jecxz
loop
mov
jb
cmp
daa
pop
xchg
jns
push
inc
aam
stc
test
repz
cmp
cmp
and
add
mov
xchg
jle
fidivrl
pusha
mov
and
iret
dec
lock
xor
xor
test
pop
xchg
adc
mov
aas
mov
jo
adc
rorb
and
mov
jb
cmpsl
xor
andl
add
subl
out
xorl
jmp
inc
loopne
sub
out
insl
or
iret
movl
add
cld
adc
mov
je
ja
dec
sbb
sbb
jmp
jno
add
mov
cmp
pop
stc
pusha
adc
lret
push
mov
sub
int3
push
popl
dec
outsb
aas
movsl
jns
out
sub
jb
inc
mov
pushl
xor
dec
adc
adc
sbb
adc
pop
pop
int3
or
cld
in
lds
cltd
pop
es
sti
jecxz
stos
out
addr16
sbb
lock
fnsave
mov
das
jbe
cmp
sub
lret
scas
mov
jns
add
pop
xor
fdivl
dec
sub
ret
sysenter
mov
cmp
shll
mov
dec
cmpsb
xchg
lods
out
or
mov
int
lret
and
pushf
cmp
imul
fs
jge
adc
jg
mov
jae
lahf
jp
cmpsl
mov
push
data16
add
call
je
in
inc
adc
jecxz
add
add
jbe
mov
and
nop
lock
add
mov
pushf
sub
out
inc
ljmp
cmpsb
push
clc
mov
test
scas
jmp
push
jl
aas
xchg
jg
pminub
or
jbe
insw
jne
mov
mov
sub
xor
mov
or
nop
mov
out
fs
dec
mov
fiadds
xchg
rolb
mov
repnz
mov
cwtl
enter
push
arpl
rcrb
xchg
lds
add
lds
les
mov
inc
scas
cmpsl
mov
jle
inc
mov
aad
repnz
scas
dec
sub
jnp
sub
repz
shrb
push
xchg
cmpl
lret
mov
repz
lahf
ret
adc
adc
sbb
pop
jle
loop
in
dec
sti
sbb
xchg
sahf
hlt
rclb
lret
aas
lea
div
or
add
sbb
pop
int3
loope
mov
pop
jb
or
jmp
jmp
cmp
inc
xor
insb
ret
mov
mov
inc
das
test
mov
sbb
popf
inc
fsubl
pop
add
pop
pop
outsl
xor
push
adc
pop
stos
inc
pop
mov
mov
repnz
outsl
mov
cwtl
sub
fstps
push
pusha
ret
mov
xchg
or
es
fstp
iret
popf
dec
push
jge
ljmp
mov
hlt
in
pop
int3
aas
cwtl
push
jb
xor
ficompl
dec
mov
mov
test
iret
add
ja
or
data16
mov
gs
push
movsb
cmp
cmp
sbbb
mov
push
loope
push
decb
xor
add
mov
loope
jbe
xor
jl
loopne
pop
std
cmc
add
ljmp
cld
sti
add
out
xchg
adc
outsb
mov
inc
orb
sti
rclb
aaa
adc
sbb
dec
insl
sbb
jl
lcall
in
or
xor
movsl
and
sbb
mov
sbb
inc
mov
lds
rcr
push
add
cld
pop
popf
les
mov
jge
es
cmp
sub
test
out
mov
aaa
pop
xlat
sub
cmp
inc
imul
jne
adc
out
and
lret
adc
push
push
leave
mov
ficomps
scas
push
sbbb
cmp
or
jg
add
pop
outsl
bound
xchg
or
in
lcall
clc
fidivl
and
push
mov
ds
add
jmp
sbb
in
add
xchg
jp
pop
ficoml
rcrb
mov
jmp
jne
adc
cltd
popf
outsl
inc
fistpll
int
xor
inc
mov
lds
je
dec
inc
mov
and
adc
add
cld
inc
push
mov
push
pushf
lahf
adc
outsl
das
sub
call
push
lods
pusha
dec
xchg
push
movl
xor
int3
xchg
inc
outsl
and
test
pop
inc
mov
leave
lret
scas
jae
addl
ret
mov
xor
lds
mov
mov
pop
mov
lods
xchg
add
mov
mov
cmp
sbb
out
scas
mov
inc
push
stc
and
mov
bound
outsb
adc
mov
push
aaa
loop
mov
mov
push
jb
sarb
push
jp
or
sbb
dec
out
lods
mov
je
adc
jb
nop
push
mov
fdivs
push
pop
lcall
inc
mov
jbe
push
rolw
fincstp
cmpsl
cmp
jns
std
pop
add
push
inc
std
xchg
imul
mov
lea
repnz
mov
dec
mov
add
movsb
mov
ret
xor
push
push
mov
rolb
mov
jecxz
mov
jl
push
rcr
outsb
ss
shl
pop
shrl
add
mov
sti
push
ss
push
int3
shlb
adc
dec
js
jmp
loope
in
mov
push
lds
cmp
jecxz
xor
clc
add
push
ret
lret
and
out
and
movsl
cltd
cmp
mov
iret
sub
ss
and
mov
mov
das
inc
cmp
jmp
outsl
insb
jnp
add
cmp
mov
mov
cmp
push
pop
inc
add
pushl
jo
gs
xor
pop
push
sbb
xchg
or
lods
adc
mov
les
xor
xlat
xor
and
adc
notrack
cli
out
push
xchg
outsb
mov
jecxz
je
pop
scas
lret
repz
jae
sub
push
or
add
mov
insb
inc
aam
sti
jo
adc
sbb
mov
inc
or
xchg
add
popa
insl
cs
addr16
inc
inc
aam
mov
mov
and
jne,pn
mov
pop
mov
cmp
stos
mov
adc
dec
decl
cmp
aas
cld
pop
mov
mov
out
in
mov
out
xor
sub
sbb
test
push
cmp
sbb
pop
fs
sbb
stos
out
push
stos
push
push
sub
xchg
nop
push
dec
es
and
call
lods
int3
fdivl
popf
mov
jmp
push
arpl
cmp
cli
fwait
push
imul
leave
rolb
xor
mov
cmpsl
and
aad
jno
cmp
sbb
jbe
adc
clc
dec
aas
and
cltd
repz
cmpsb
lds
adc
mov
mov
jmp
ret
cmpsl
inc
mov
mov
aas
and
push
loopne
mov
rorl
cs
xchg
cltd
cs
adc
lahf
in
bound
in
lds
lret
dec
or
inc
sub
and
stos
inc
cwtl
mov
pop
mov
lea
inc
aad
into
lods
push
ret
sbb
push
pop
stos
mov
fwait
mov
mov
cmc
scas
adc
fists
lds
ret
pop
icebp
out
adc
pop
mov
jb
bound
mov
jle,pt
xlat
dec
pop
push
icebp
imul
je
sub
rorb
cmpsb
mov
sbb
insb
dec
fistpll
lods
inc
inc
push
dec
dec
push
mov
pushf
pop
pusha
dec
jnp
push
jno
cmpsl
xchg
pushf
pop
outsl
sarl
fldt
xor
fsts
lcall
ficomps
push
mov
mov
cmpsb
jmp
push
push
or
cltd
ja
push
mov
adc
insl
push
xchg
and
or
int
repz
out
icebp
mov
shrb
jb
push
sbb
inc
movsl
insb
xor
loop
je
outsl
sub
inc
movsl
and
dec
cmp
sti
mov
xor
clc
inc
fwait
push
ret
cltd
mov
adc
stc
addl
inc
andb
xchg
ljmp
push
jg
xchg
stc
cmpsl
inc
insb
mov
das
pop
pop
push
or
addb
and
out
pop
lock
fcmovne
and
jne
out
js
mov
out
or
loope
insb
xor
add
movsl
sub
fsub
jns
ret
ret
std
xchg
fimull
cmp
imul
daa
outsb
sub
add
mov
ljmp
fwait
xchg
push
adc
ret
push
mov
inc
movsl
jnp
stc
int
inc
aas
xchg
push
xlat
fistps
lds
mov
sub
jo
mov
xlat
mov
std
mov
add
jp
stc
dec
add
out
or
xchg
ret
mov
js
lea
data16
fstpl
outsl
jae
mov
lds
mov
cmp
xor
adc
inc
xchg
dec
push
mov
xlat
in
dec
loopne
bound
orb
mov
or
test
sub
and
leave
inc
add
pop
push
xchg
cwtl
xlat
and
dec
adc
and
movsl
fwait
mov
pop
cmp
add
mov
fnstenv
push
bound
aaa
stos
repnz
sub
psubsb
cmp
push
shlb
jmp
push
sti
sbb
hlt
add
sbb
or
es
out
jbe
mov
cli
aam
xchg
xlat
mov
push
cld
stc
int
pop
ljmp
add
cmc
cld
roll
and
in
inc
int
fimuls
aas
inc
jns
and
mov
rorl
jb
sub
xchg
mov
out
inc
jnp
pop
inc
iret
aad
cltd
xor
int
addr16
das
pop
adc
lahf
sbb
scas
sub
sub
mov
inc
or
cmpsb
fistps
bound
mov
out
outsl
lea
cmp
leave
sub
pop
and
mov
ja
fsubrl
add
ljmp
scas
mov
mov
into
push
inc
ds
shlb
xchg
scas
mov
xchg
dec
push
dec
and
mov
out
aad
lret
fnstcw
or
shrb
btr
jbe
dec
fndisi(8087
pusha
add
sub
mov
push
mov
and
or
test
inc
ja
jo
jecxz
aad
inc
push
and
nopl
in
mov
jbe
pop
inc
fwait
xchg
xor
bound
or
jmp
movsb
fdivl
fwait
and
mov
loop
pop
jnp
mov
loop
leave
popa
jae
into
sarb
cld
lock
xor
mov
dec
shlb
ljmp
adc
adc
xchg
xlat
enter
pop
je
movl
stc
mov
jae
adc
ffreep
loope
inc
adc
dec
fwait
inc
stos
jno
xchg
mov
das
adc
jmp
xchg
ja
ljmp
sub
xchg
je
iret
or
mov
push
lret
jne
mov
mov
orb
sbb
jg
mov
sahf
popf
mov
repnz
inc
mov
lds
test
sbb
cmp
divl
pop
rcl
imul
cmp
mov
add
inc
sarl
mov
fists
pop
test
out
mov
sub
add
mov
lahf
push
sti
pop
daa
in
ljmp
push
sbb
leave
inc
cmpsl
inc
inc
pop
int3
sarl
pop
std
rclb
aaa
jns
adc
or
dec
cmp
aam
sbbb
jl
push
mov
and
mov
sub
push
pop
in
fmull
lea
lock
mov
sub
cli
popf
adc
scas
lahf
lea
fisttpl
sub
cs
dec
sarb
leave
add
data16
cmp
pop
push
mov
xchg
jae
mov
bound
pandn
aam
adcb
or
jae
jecxz
test
sbb
xchg
sbb
and
add
cld
sub
mov
mov
ljmp
std
gs
mov
jmp
movsb
inc
js
xlat
cmp
mov
cld
les
or
enter
es
mov
mov
push
push
in
push
push
mov
xchg
decb
fstps
scas
hlt
in
loopne
fcomps
nop
stos
cmp
xchg
loope
test
movsl
push
adc
xor
pop
movsb
cmp
xchg
popfw
lret
sbb
pop
jae
pop
jmp
sub
mov
mov
jmp
cmpb
repnz
inc
hlt
nop
fdivrs
dec
ficoml
cwtl
int
lock
insl
adc
or
lea
incl
mov
nop
xor
inc
je
cmp
xchg
mov
lock
jo
mov
sbb
sbb
or
aas
jns
js
pop
jnp
sbb
pop
lcall
imul
das
cmp
aas
sbb
repz
mov
push
aaa
sub
push
inc
mov
jmp
add
fstpt
add
or
stos
mov
xchg
pop
dec
pop
dec
aam
stos
ds
sub
fistps
jne
inc
and
mov
dec
lock
dec
loopne
enter
jno
shll
mov
test
nop
mov
push
ret
add
stc
dec
stos
leave
xchg
jno
mov
insl
sub
int3
lock
mov
xchg
and
in
fidivrs
cmp
pcmpgtd
adc
arpl
cltd
clc
cmpsb
pop
mov
mov
xchg
movsl
dec
add
inc
fwait
xor
cmpsb
mov
xchg
jbe
in
push
sbb
sub
loop
xchg
inc
pop
jnp
sbb
shll
inc
out
dec
dec
insl
and
xchg
jmp
mov
dec
xlat
add
push
or
pop
loop
pop
jl
adc
lret
xchg
scas
adc
add
mov
jl
mov
jl
adc
or
aad
adc
pop
pop
pop
imul
mov
xor
mov
inc
cli
push
mov
add
mov
lds
xor
into
jae
push
lahf
jne
jle
cmp
push
inc
call
mov
les
jp
mov
xchg
push
sub
adc
xor
adc
repz
pushw
fimull
inc
mov
pop
les
shrl
xor
jb
push
stos
push
mov
jne
scas
cwtl
lea
xchg
jmp
cmc
mov
repz
pop
test
cmp
pop
test
pop
ds
sarb
add
jb
clc
sub
and
adcl
sbb
jg
mov
sbb
mov
lock
pop
push
or
jne
inc
adc
in
cmpsb
xchg
inc
mov
aaa
push
lods
mov
xchg
negb
pop
addl
mov
sbb
rcll
cmp
cltd
fxch
lcall
call
or
mov
cmp
dec
push
fnstenv
push
notb
sub
and
jmp
sbb
clc
push
add
cli
mov
cmp
pop
pusha
scas
rcrl
lds
scas
mov
mov
xor
sbb
dec
ljmp
sub
es
push
out
mov
pop
cmp
jecxz
andl
add
jnp
push
xchg
sarb
cltd
bound
jl
lea
test
xor
mov
mov
sub
mov
aam
inc
das
cli
psraw
iret
nop
push
pop
dec
enter
xchg
leave
scas
lods
sbb
add
ds
sub
in
mov
fldenv
cmpsb
fldcw
ja
out
and
cwtl
cmp
push
push
xchg
add
sbb
jne
add
push
test
cwtl
dec
lods
inc
js
sarl
mov
into
and
aas
ret
cmp
cwtl
pop
mov
xor
das
pop
push
cmp
or
xor
inc
push
sti
stos
mov
xor
push
popa
push
push
popf
mov
mov
mov
adc
xchg
fdivs
pop
imul
pop
cltd
aas
adc
fs
xor
inc
rcll
and
cmp
inc
in
cmp
stos
and
mov
jno
cmp
scas
cwtl
pop
adc
stos
pushf
inc
pop
push
cltd
call
add
loope
iret
ljmp
xchg
fdiv
mov
push
jne
mov
mov
cs
jecxz
in
je
and
rcll
cmp
add
stos
mov
mov
dec
sbb
das
or
push
mov
aaa
sti
dec
imul
dec
mov
mov
sub
sbb
lods
lret
lea
movsb
dec
sub
sbb
xchg
push
push
dec
lcall
fidivrs
pop
pop
xchg
popa
jmp
push
push
mov
out
xchg
in
mov
testl
test
cmc
ficompl
add
inc
adc
jo
pushf
ret
rorb
sahf
or
push
ds
lcall
data16
popf
mov
bound
enter
cwtl
cmc
fwait
push
jge
mov
adc
lods
or
mov
jne
xorl
insb
pop
pop
add
jno
mov
mov
push
dec
mov
add
inc
xchg
pop
cld
test
outsb
inc
xor
pop
or
dec
sbb
pop
lret
inc
xchg
cmp
xor
or
or
push
adc
push
jno
in
lret
outsb
inc
mov
inc
sti
push
pop
xor
mov
lock
popa
xchg
mov
js
sbb
sub
dec
lahf
sbb
push
repnz
jno
dec
ja
stc
stos
out
outsl
ret
lock
daa
clc
fwait
xchg
ret
inc
hlt
rorl
cmp
adcl
imul
repz
xchg
repz
adcl
or
dec
scas
inc
adc
mov
sub
sub
aaa
loopne
pop
or
je
sub
aaa
jne
aaa
test
sti
and
jmp
push
push
or
fnstenv
daa
dec
sti
xchg
push
push
mov
push
push
pop
dec
ret
adc
xor
cwtl
and
mov
add
mov
jecxz
push
push
clc
in
mov
pop
sub
adc
adc
mov
push
sbb
sub
and
xor
dec
fnstcw
pop
sub
add
psrad
adc
fidivrs
mov
mov
mov
and
lds
insl
sub
jle
and
jle
lock
add
and
popa
jp
insb
stos
jnp
sub
add
cwtl
pop
and
outsb
int
aaa
xor
insb
paddsw
pop
mov
cwtl
lcall
sbb
mov
imul
insb
and
fmul
cwtl
lds
dec
icebp
fldl
out
loopne
pushf
dec
arpl
pop
dec
add
mov
push
or
nop
lret
xchg
adc
lock
idiv
loopne
test
test
push
cmpsl
repz
cli
adc
push
or
fnstcw
mov
and
repnz
movsl
nop
cld
pop
mov
lret
mov
dec
mov
aas
pop
das
sub
push
aas
pop
add
lahf
stc
push
inc
push
push
fsub
cli
cltd
addl
std
cmp
fwait
push
cmp
sti
push
lds
sti
aad
dec
xchg
add
lret
mov
shlb
mov
sub
lea
cmp
into
jo
shr
aad
ret
addl
outsl
in
cpuid
xor
xor
pop
stos
testb
mov
fsubl
popf
pop
ret
mov
sub
pop
clc
loop
sub
mov
mov
or
pop
data16
shlb
in
cltd
std
out
dec
xchg
in
daa
dec
je
in
arpl
shlb
js
int
mov
pop
scas
push
setb
xchg
mov
xchg
push
loop
pop
xor
cld
sbb
in
mov
loope
add
pop
clc
imul
ror
and
dec
cmpsb
movsl
add
xor
cmp
dec
cmp
xchg
xchg
push
cwtl
sbb
test
xchg
les
mov
sbb
arpl
fisttpl
repz
bound
pop
dec
pop
test
movsl
arpl
mov
orb
xor
and
mov
or
fbstp
cmpsl
mov
mov
cmp
mov
xchg
decl
fwait
movsb
addb
stos
pushf
jbe
xlat
sub
pop
shrb
ds
lock
pop
and
jno
xchg
dec
ss
stos
incl
loop
nop
jne
add
cmpsl
aad
xchg
lods
inc
pop
mov
inc
repz
lds
xchg
cltd
jo
jl
test
mov
mov
or
cmp
mov
mull
sbb
xor
es
les
xchg
inc
push
aas
dec
mov
push
shll
or
movsl
fwait
int3
mov
mov
test
inc
jo
xor
mov
mul
sbbl
scas
pop
lock
xchg
and
imul
mov
push
shl
push
in
pop
int3
lret
das
push
je
lds
mov
lock
jb
roll
sbb
mov
je
add
dec
cmpsb
cmp
sbb
fdivs
fisubl
aad
add
mov
out
sub
pop
inc
jge
and
lcall
pop
fs
sti
pop
lret
imul
lret
incl
mov
dec
pop
pop
or
and
sub
jle
shlb
cmpsb
pop
lock
xor
incb
mov
ja
dec
fimuls
or
cmpb
or
mov
divb
push
aas
clc
inc
mov
das
fdiv
inc
jmp
cmc
fs
add
icebp
push
dec
out
stc
shll
jae
xchg
inc
movsb
xlat
mov
int
mov
inc
das
push
jmp
add
push
push
push
adc
in
outsb
ret
or
fstpl
lcall
mov
clc
xchg
shrl
jns
pop
sub
add
or
scas
aad
pusha
xchg
jmp
lret
inc
lods
add
mov
lds
or
mov
pop
dec
insb
cmpsb
dec
xor
xlat
mov
cmpsl
dec
iret
loop
xlat
or
jbe
dec
cmp
push
inc
mov
sbb
stos
lret
sbb
aam
push
xchg
or
pushf
add
jns
mov
inc
adc
loope
xchg
xchg
mov
lea
fnstenv
adc
das
xor
adc
sub
push
push
cs
lods
xor
call
vpcmpgtd
sub
scas
out
iret
cmp
inc
aaa
fldl
aas
xchg
jecxz
push
jecxz
pop
inc
inc
sub
popa
scas
incb
add
cmp
push
xor
aam
movsb
fildl
sbb
xchg
subb
cmp
movsb
btc
push
out
aas
subb
push
xlat
hlt
dec
xor
xor
mov
sbb
add
out
js
iret
jno
jmp
es
sub
and
pushf
dec
rcll
lahf
ss
aas
jno
je
gs
dec
or
movsl
jle
lret
repnz
xlat
loope
push
loope
mov
mov
popf
add
pop
xchg
push
imul
outsb
push
dec
sbb
add
or
push
lods
xchg
dec
repnz
fiaddl
push
mov
repz
cld
mov
std
jecxz
dec
adc
dec
fnstsw
fcmovnbe
cmp
inc
pop
push
arpl
idivb
rcll
outsb
inc
mov
push
mov
xlat
scas
adc
leave
in
sub
scas
pop
mov
cld
cli
sti
mov
mov
mov
inc
imul
in
rorb
sahf
cli
xchg
inc
mov
mov
xchg
dec
loopne
pop
cmp
pop
out
pop
lea
les
jno
addr16
xchg
and
and
insb
in
adc
aas
lret
scas
cli
jmp
shrb
aas
and
cltd
or
sbb
xor
cmp
adc
fxch
pop
call
aad
icebp
mov
lock
rclb
mov
into
repz
outsb
lock
dec
push
std
shl
imul
in
fistps
in
nop
daa
cmp
mov
xchg
or
test
adc
or
addr16
add
lret
or
and
pop
popa
into
xchg
daa
pop
mov
jp
fldt
inc
and
adc
enter
push
dec
sub
push
divb
jb
lock
cmc
inc
mov
dec
jne
icebp
sti
jns
aad
fiadds
add
mov
or
test
inc
and
sub
jmp
fldt
sbb
sub
jl
adc
scas
enter
inc
sub
shll
sti
outsl
jb
out
adc
fistl
or
xorb
xchg
inc
icebp
sbb
dec
or
and
fimull
ljmp
fwait
in
aaa
fs
pop
xchg
sahf
loope
sub
mov
jmp
xorl
cmpsl
iret
add
adc
inc
lds
mov
fcomps
sub
adc
lods
insl
dec
mov
cmpsb
mov
mov
xchg
xchg
or
js
lds
jnp
aam
jg
popf
mov
andb
movsl
lcall
mov
dec
ds
fsts
mov
pop
mov
jge
shll
adc
popa
test
inc
rolb
sbb
mov
stos
lock
iret
mov
les
sub
outsl
push
sub
mov
cmp
fisttps
inc
dec
sub
test
and
mov
scas
jle
or
or
ror
dec
stos
int3
movb
nop
sbb
jmp
xchg
aad
mov
cmp
cmp
addr16
sub
outsb
lcall
leave
inc
jne
xor
dec
pop
sub
cmp
push
add
jge
jp
shr
and
aaa
xor
pop
add
pusha
sub
xchg
mov
nop
xor
sbb
fwait
notb
sbb
aaa
in
sahf
mov
std
decl
jne
sub
jne
daa
and
mov
add
fnstenv
lret
pop
daa
inc
adc
hlt
fst
cld
lock
cmpb
outsb
pop
scas
pop
test
jmp
call
setg
cmc
inc
jno
mov
mov
sub
xor
mov
in
cmp
test
jl
sub
popa
sarb
add
ss
repnz
mov
or
fs
sbb
jb
hlt
sub
aad
jne
dec
and
inc
movsl
xor
or
mov
xor
or
in
push
ss
test
xor
lahf
jnp
mov
mov
mov
xchg
adcl
mov
sbb
cmp
add
mov
add
cmp
stos
xor
scas
jb,pt
test
out
pop
lcall
and
mov
lods
xchg
fcoms
mov
xchg
inc
ja
jg
push
insb
jns,pn
pop
pop
out
insb
dec
movsb
bound
addl
add
popf
jp
inc
divl
clc
pop
xor
push
loopne
jecxz
out
sbbl
inc
adc
inc
push
out
adc
xor
jb
dec
cwtl
inc
clc
jmp
out
jl
adc
movsl
or
stc
inc
ss
sbb
in
jnp
cmp
cmp
inc
adc
aam
daa
push
sbb
out
or
call
fisubrs
add
jb
rolb
fcoms
out
cs
cmp
and
mov
aas
in
sub
mov
dec
nop
xchg
movsl
ret
mov
mov
mov
adc
adc
divb
pop
lahf
aaa
mov
lea
mov
int3
push
sub
mov
pusha
ja
neg
mov
addr16
arpl
lock
je
rcr
imul
jmp
cmp
and
adc
dec
sbb
fsubrs
push
push
pusha
into
ficoms
xchg
and
out
cmp
in
dec
aaa
jne
shlb
cmpsl
repz
push
fnstsw
dec
out
je
std
dec
js
sub
insl
lcall
jbe
mov
addr16
xchg
push
clc
cmp
jne
push
sbb
sub
hlt
sbb
jle
add
ss
adc
lods
and
dec
aas
enter
gs
dec
push
cmp
imul
cmc
and
mov
out
inc
sbb
xor
clc
jmp
test
mov
add
dec
fldt
push
subb
lods
mov
inc
leave
pop
aam
pop
push
mov
xchg
pop
cld
xorb
push
mov
mov
out
add
pop
xchg
loopne
rorb
dec
dec
fdivrl
loope
add
in
sbb
lds
mov
int
cmpsl
mov
adc
test
enter
addr16
mov
arpl
sub
xor
adc
mov
sub
cmpsl
and
mov
loop
mov
aam
adc
cmp
push
adc
insb
inc
ret
ss
data16
adc
push
push
lods
jl
icebp
aad
inc
push
cmp
push
jne
mov
clc
cmp
test
mov
pusha
inc
ret
cwtl
dec
jnp
ss
xchg
push
mov
lret
faddp
stos
pop
loop
mov
pop
js
fldl2t
ret
xchg
push
movsb
pop
push
fsubrl
and
fwait
outsl
cld
sbb
push
jmp
ds
arpl
add
daa
lods
pushf
pop
jno
setne
cmp
or
push
cmp
cmp
sub
sub
inc
popf
js
or
ds
sbb
scas
test
repz
aad
mov
iret
js
outsl
fcmovnb
call
push
jae
xchg
mov
or
adc
jbe
sbb
int3
out
cmpsl
in
sbb
sbb
add
loop
jbe
pusha
lahf
lea
lods
pop
pop
filds
cmp
shrl
lods
jns
lret
sub
sub
adc
insb
loope
aad
sahf
adc
rcl
int
xchg
daa
ja
sub
das
popl
sub
pop
movsl
cmp
or
jge
dec
and
and
xor
lea
mov
js
sbb
sti
cli
xchg
pop
daa
mov
mov
pop
push
and
jae
scas
and
gs
pop
pop
xchg
pusha
imul
xchg
mov
outsb
dec
pop
jp
jno
shrl
add
pop
scas
inc
in
dec
ret
mov
cwtl
push
cmpl
cmpsl
pop
insl
xlat
mov
and
inc
pop
xchg
xorb
jne
push
cmpsb
pop
sub
pop
nop
dec
xchg
xor
stos
clc
stos
xlat
scas
adc
iret
inc
cltd
mov
xor
mov
pop
les
int
aas
mov
sbb
ja
inc
mov
aam
inc
pcmpeqd
jle
adc
out
fs
dec
scas
and
dec
fwait
inc
xlat
outsb
std
mov
mov
scas
test
inc
add
mov
mov
cmc
les
mov
lock
add
and
outsb
das
mov
in
mov
mov
cmp
sub
stos
xchg
mov
js
fstpl
out
rcll
rclb
xor
add
out
jge
cmp
push
int
out
mov
mov
lea
xlat
push
adc
sbb
xor
fcoms
sub
dec
lods
call
cwtl
fisttpll
jg
daa
inc
in
and
mov
mov
inc
mov
fists
push
arpl
add
cmc
shl
faddl
jecxz
mov
pcmpgtw
dec
add
aam
pop
cs
xchg
int
xor
dec
cmp
andb
dec
sub
pop
jne
sub
arpl
shll
cmp
or
addb
loop
add
mov
insb
add
les
xchg
or
cmp
push
hlt
xor
mov
mov
xor
add
sub
mov
cmc
and
mov
js
lods
shl
push
aad
mov
xchg
fdivr
bound
mov
dec
jb
mov
fwait
push
ret
cmpsb
or
inc
mov
dec
pop
mov
mov
clc
add
dec
xchg
cmp
nop
sbb
sub
lods
jnp
cmp
ret
add
mov
shll
cmc
xor
mov
js
xchg
aaa
adc
loope
lret
fmull
sbb
or
hlt
fisttpll
test
aaa
ja
xchg
jg
dec
xor
and
shll
jge
cmp
out
sbb
xchg
sbbl
sbb
popa
mov
cli
add
repnz
ss
mov
fistps
hlt
clc
xchg
jae
jb
inc
pop
mov
out
imul
test
sub
or
pusha
jle
and
shll
das
cwtl
ret
test
sbb
sbb
fiaddl
or
mov
adcl
sbb
cmpsb
mov
mov
je
leave
repz
adc
xor
mov
jb
cs
add
rorl
ljmp
adc
aam
neg
sbb
rcrl
or
int3
rcrl
push
in
xchg
test
ret
lock
inc
mov
aad
or
ljmp
dec
push
pop
push
add
mov
rep
adc
mov
pop
xor
xor
push
mov
mov
push
push
addr16
inc
in
mov
xor
mov
rclb
mov
outsb
ret
fldt
mov
or
lret
andb
test
add
addr16
out
test
ja
pop
mov
cmp
bound
mov
jb
and
subb
xor
hlt
cmp
jle
jb
mov
aas
fnstsw
std
loope
mov
add
xor
pushf
push
cmp
aam
or
loopw
push
cmpsl
or
imul
movzbl
adc
adcb
mov
lret
inc
scas
push
mov
lds
adc
loop
push
jge
cmp
sti
and
rcll
insl
aaa
sub
lret
test
add
adc
and
ficoms
adc
inc
mov
inc
fstps
call
loop
js
mov
sub
push
sbb
shlb
fmull
sub
fwait
push
mov
imul
mov
mov
add
or
ds
xor
adc
aam
icebp
test
or
ret
scas
lea
jne
outsb
xchg
mov
scas
popa
leave
pusha
rolb
lock
gs
sbb
add
mov
push
pop
mov
rcl
scas
ret
mov
mov
inc
pop
lods
cmp
pop
and
dec
ds
cmp
decl
or
sbb
cli
aam
xchg
push
rorb
repnz
mov
ljmp
es
ds
cmp
es
in
insb
mov
push
jo
mov
pop
mov
cld
fadd
sti
pop
jb
out
add
inc
jmp
xchg
adc
and
dec
dec
icebp
push
xor
inc
adc
call
arpl
jb,pt
iret
ja
lods
popa
call
lret
pop
mov
rclb
xor
adc
mov
xchg
rorl
cld
or
aam
xor
testb
ljmp
mov
mov
mov
pusha
jecxz
das
pop
adc
xor
clc
mov
test
stos
adcl
cmpsb
dec
pop
ljmp
mov
ljmp
xchg
xchg
iret
xchg
shll
bound
inc
adc
cwtl
mov
cwtl
mov
test
xchg
stos
adc
fmull
rorb
mov
ss
das
scas
daa
add
adc
ficomps
dec
mov
iret
addl
enter
push
xor
imul
addr16
out
fcmovbe
dec
pushf
mov
cmp
fildll
call
dec
loop
adc
mov
mov
dec
mov
je
leave
incb
mov
sarl
pop
ds
loop
jge
lods
movsl
adc
or
out
cli
pusha
xchg
xor
jge
sbb
int3
mov
not
movsl
sub
mov
ljmp
inc
iret
fs
sti
stos
inc
cmp
in
pop
sbbl
pop
adcl
rcrb
lock
push
mov
clc
push
inc
xor
ss
sbb
int3
out
fadd
cwtl
jb
push
mov
mov
lods
fildll
hlt
aam
pop
fisubs
test
repnz
xor
xchg
arpl
dec
xchg
cmp
mov
cmp
lahf
sub
pop
lret
xor
or
inc
push
sub
mov
scas
ret
pop
in
bound
pop
test
pushf
inc
xchg
insl
rol
inc
cmc
push
movsb
cmp
sbb
xchg
call
pusha
inc
test
push
mov
jae
sub
xchg
sub
gs
or
mov
mov
aad
movsl
ljmp
jno
negl
sbb
push
mov
std
inc
adc
mov
cli
cltd
mov
mov
fwait
data16
adc
loope
int
ret
inc
mov
nop
outsb
xlat
les
inc
fs
mov
sbb
hlt
push
push
js
int
gs
dec
mov
mov
fs
sbb
sarb
notl
popa
pop
sbb
add
push
push
cmc
add
inc
cmc
testl
bt
cmp
xchg
pop
mov
push
or
mov
cs
xlat
jbe
lock
mov
dec
icebp
xlat
stos
fidivrl
enter
jns
mov
add
test
int
or
call
fcomp
iret
adc
loopne
arpl
in
fs
add
mov
xor
add
xor
xchg
sbb
ljmp
push
je
and
xchg
mov
mov
leave
lods
arpl
test
repnz
shr
popa
lods
dec
mov
or
jne
mov
fs
mov
xor
divb
dec
xor
int
lcall
inc
cwtl
ret
jle
pop
ja
add
lahf
xor
stos
leave
aas
mov
push
cmp
scas
xor
inc
mov
or
mul
fdivs
xor
adc
dec
dec
xchg
pop
shll
cmc
int3
lea
jl
sbb
pop
clc
int3
insb
cld
jae
jmp
jle
in
mov
out
add
push
inc
mov
or
dec
cmpsb
pop
out
lea
daa
insb
mov
cmp
lock
inc
pop
jno
xor
xchg
std
subl
cmc
sbb
lea
push
mov
cmp
sub
jo
mov
nop
les
imul
js
in
mov
rorb
aad
mov
dec
cmp
jp
lods
inc
aaa
adc
cs
aaa
je
out
shlb
js
xchg
mov
cltd
lea
ret
inc
pop
mov
jbe
lret
ret
jae
mov
ja
inc
or
jp
cmp
xchg
orl
inc
jbe
outsl
push
imul
cltd
mov
add
adc
std
fsubl
sub
push
repz
or
jns
ret
mov
add
jnp
mov
inc
push
jg
inc
xor
cmp
inc
mov
cltd
data16
mov
cs
add
fadd
mov
xor
in
jo
ret
jecxz
testb
or
mov
std
add
and
insl
or
fs
loope
pushf
jb
arpl
jae
push
xchg
mov
das
sbb
xchg
push
xor
out
stos
or
daa
mov
repnz
jg
add
sub
popa
dec
loopne
and
and
fld
leave
test
jae
jne
adc
sub
push
dec
cmpsb
dec
xchg
mov
sub
fdivs
add
inc
test
lret
pop
mov
push
or
mov
pop
fidivl
in
inc
gs
jne
mov
incb
out
or
gs
ss
pop
ret
fs
add
lods
orl
cmpl
jbe
pop
lds
sub
mov
adc
or
inc
data16
push
inc
or
jmp
push
mov
rcll
clc
loope
test
lahf
popf
adc
cltd
cmp
pop
stc
pop
jg
nop
filds
js
push
lds
pop
xchg
repz
jle
push
or
test
repnz
pop
pop
sub
decl
repnz
push
lcall
pop
mov
ljmp
aas
dec
insb
popa
outsb
inc
cmp
fs
pop
mov
jge
es
arpl
push
xchg
pop
pushf
fs
aas
mov
dec
int
mov
loopne
sub
ret
mov
sti
xchg
cltd
in
mov
mov
icebp
es
in
dec
jnp
nop
mov
ljmp
scas
mov
sub
jge
mov
cmp
in
mov
pusha
cmp
dec
pop
mov
negl
fucomp
enter
nop
and
nop
xchg
pushf
ja
dec
jno
xor
push
insl
mov
cwtl
cmpsb
dec
sbb
enter
dec
lods
xlat
stos
and
push
ja
aas
addr16
jo
fidivl
loop
push
repnz
out
fldenv
aaa
sub
mov
lahf
scas
ret
mov
xchg
iret
add
leave
jae
mov
lcall
andl
add
mov
rcrb
outsl
add
inc
int
orb
sbb
sub
rcrl
push
push
je
push
cmc
jp
pmaddwd
inc
lods
lea
xchg
inc
lods
lock
xor
leave
or
mov
pushf
imul
or
jmp
ss
in
mov
fidivl
test
mov
adc
mov
sbb
jmp
jmp
jb
sbb
mov
ss
ljmp
dec
xchg
pop
and
sbb
and
hlt
adc
es
cmpb
cmp
cs
adc
xchg
add
sub
mov
and
adc
int
int
std
xchg
ret
and
adc
leave
and
sbb
cmpsl
inc
aad
ljmp
jmp
and
shl
mov
scas
push
jmp
je
je
mov
test
pop
mov
into
lds
xor
aam
mov
xchg
stos
daa
inc
mov
ljmp
cmpb
in
fdivrs
arpl
loopne
inc
les
and
mov
mov
fnsave
daa
pop
shl
cltd
mov
iret
cs
mov
jmp
mov
and
xor
outsb
mov
rcll
repnz
stos
fwait
pop
push
mov
dec
cmp
adc
sub
pop
test
dec
mov
in
dec
or
int
popf
jnp
push
xor
jmp
stc
es
js
cmp
mov
mov
xchg
ror
push
shl
jp
xor
cmp
push
mov
outsb
inc
sahf
call
sub
lock
mov
jne
daa
inc
mov
andl
call
xchg
inc
jmp
adc
jge
jne
insl
cmp
sbb
xchg
shll
cmp
out
pop
mov
push
xor
pop
sub
ljmp
pop
mov
sbb
rol
enter
mov
mov
xchg
mov
jge
jo
js
mov
fidivrl
dec
lret
jns
scas
push
stc
pop
xor
shr
push
ds
repnz
movsl
or
std
jmp
or
jbe
adc
mov
xor
movsl
aas
or
imul
js
adc
dec
out
jbe
cwtl
and
sbb
push
gs
movsl
loope
sbb
jno
cmpsb
insl
fldt
add
shrd
adc
and
pop
shrb
xor
cmpsl
negl
insl
in
lcall
xchg
mov
cmp
movsb
fcoml
or
push
je
ret
ljmp
repz
sbb
xchg
fbstp
jge
sub
leave
cli
jg
mov
jbe
je
jne
mov
loopne
insb
inc
iret
push
jecxz
sub
icebp
andb
leave
dec
stos
shll
lret
cmp
sar
pop
mov
xor
push
lods
popf
ljmp
ret
aam
sub
rorl
sbb
cmp
repnz
mov
incb
dec
inc
adc
movsl
stos
sbb
xchg
fistl
mulps
mov
dec
mov
es
push
fdiv
scas
dec
adc
xchg
push
pop
jge
mov
and
sarb
adc
ja
push
jbe
jbe
mov
jb
popf
pop
sbb
sub
cmpsl
les
aad
sub
add
push
push
dec
sbb
clc
pop
dec
push
lods
inc
popf
inc
adc
outsb
cmpsb
sub
cld
cmpsb
or
test
pop
call
fidivs
or
ja
enter
rol
movb
push
je
or
out
in
cmpsl
jae
mov
dec
or
pop
lds
push
test
jb
into
enter
pop
sbb
arpl
inc
mov
frstor
sub
mov
ja
and
stc
lods
mov
or
test
inc
dec
jle
or
xchg
popa
fcompl
inc
test
xchg
addb
push
stos
pop
aam
inc
push
packsswb
sub
push
sahf
push
scas
incl
xor
cmp
mov
lret
insl
cmp
xchg
pop
daa
lahf
sbbl
or
cmc
leave
fcoms
test
ret
cmc
fldcw
cmpsl
inc
cs
cmp
mov
ret
push
jb
icebp
dec
lret
sub
mov
call
and
ds
dec
shrb
shrl
mov
inc
in
loopne
push
nop
pop
ds
cmp
mov
in
dec
dec
push
jge
ret
xchg
push
push
mov
mov
jl
cwtl
lea
cmpsl
scas
mov
fcoms
add
xor
enter
das
dec
inc
aas
inc
int3
icebp
sbb
cwtl
mov
xchg
push
or
aaa
pop
cmp
pop
hlt
add
xchg
jmp
dec
xchg
pop
pop
xchg
out
repz
sar
cwtl
fbld
shll
movsl
and
outsb
mov
test
lods
mov
js
loopne
push
and
jg
dec
data16
mov
mov
push
incl
movsl
rcrl
add
add
icebp
mov
pop
mov
push
shl
pop
adc
xor
xchg
sti
sahf
mov
dec
ds
mov
std
sub
dec
loope
pop
add
out
fistl
jp
adc
je
addr16
sub
xor
scas
xchg
cmpb
test
sub
jecxz
xor
lods
repnz
add
pop
orl
add
sbb
xchg
dec
mov
cld
hlt
sbb
or
xlat
push
cmc
ret
push
std
mov
sbb
test
sbb
fdiv
out
lds
xchg
addl
mov
cmp
cmp
cs
test
lods
cmp
jne
xor
fsubrs
in
push
cwtl
jp
stos
andb
daa
daa
xor
cld
dec
into
imul
into
gs
jbe
test
inc
dec
lahf
jle
leave
add
shlb
mov
cmpsl
mov
inc
push
ret
jl
xchg
filds
jp
xchg
jl
addr16
call
add
ds
subb
cld
in
les
xor
inc
fsubrs
fwait
or
mov
mov
cwtl
lahf
pop
mov
daa
jnp
xchg
mov
movl
pop
pop
dec
pop
mov
and
movsb
adc
fildl
std
mov
movsl
repz
pop
mov
mov
inc
out
jle
xchg
or
shll
mov
mov
inc
cltd
int3
xchg
stos
and
jecxz
mov
stos
ficomps
xchg
sti
sbb
pop
cmp
mov
in
ret
aas
mov
dec
jno
lea
arpl
fisubl
sbb
out
push
aaa
movsb
scas
test
fimuls
push
mov
cmc
inc
jne
add
jae
jne
sub
or
fwait
stos
dec
sahf
movsb
jecxz
add
aas
test
call
aas
divl
and
jo
mov
dec
sti
adc
adc
imul
inc
pop
neg
movq
inc
in
adc
nop
addr16
pop
test
mov
cwtl
add
rorl
ja
cmp
inc
ds
adc
inc
xor
sbb
aam
sti
cmp
loopne
addr16
cmp
out
ret
sbb
xchg
cmp
push
ds
xorb
inc
push
arpl
sbbl
mov
fstps
push
mov
jmp
out
dec
mov
add
int
add
iret
xor
mov
adc
enter
push
and
add
das
xchg
inc
adc
aad
aas
sbb
dec
loope
inc
push
mov
fisubs
xchg
pop
mov
jmp
stos
mov
arpl
shrl
ja
cmpsb
repnz
or
sbb
arpl
enter
test
inc
add
out
lcall
push
lods
lds
outsl
mov
sub
mov
leave
mov
or
and
lods
out
loope
push
test
arpl
cmc
jno
pop
loop
xor
sub
pop
jg
rcr
add
std
test
sbb
stos
sub
mov
sub
and
push
cmp
jge
jp
pop
repz
xchg
inc
jle
mov
out
idiv
das
push
mov
sti
sarl
in
cmp
loop
mov
or
dec
cltd
loope
pop
pop
or
lcall
dec
jne
js
push
cs
inc
mov
pop
nop
movsb
xchg
pop
decl
push
lods
ss
inc
pop
ja,pn
inc
mov
sub
and
fimull
js
xor
aam
div
cli
or
es
and
xlat
stos
lods
int3
jmp
jge
adc
scas
mov
fstps
loop
sub
fsubrs
fcmovb
add
call
xchg
jle
test
ljmp
stos
jge
add
pop
fidivs
xchg
stos
ds
mov
xlat
pop
cs
or
and
jl
jecxz
movsl
sahf
pop
test
sub
push
in
negl
cwtl
insb
sbb
lea
popf
repnz
cmp
popf
inc
scas
xor
xchg
daa
fidivl
sbb
mov
stos
lods
dec
idivl
hlt
xor
dec
or
pop
adc
fisubs
pushf
inc
push
mov
or
lods
sar
fisttps
clc
enter
pop
mov
inc
pop
imul
not
xor
loopne
scas
test
and
ja
xlat
jns
xor
xchg
das
cmc
jo
int
push
sub
or
or
fisttpl
addr16
aad
mov
daa
jge
stos
mov
stos
sub
enter
dec
mov
dec
call
sbb
jge
push
aaa
sbb
std
push
rorb
movsb
pop
xchg
xor
mov
pop
movl
daa
ds
clc
add
mov
jne
adc
inc
lods
adc
data16
or
mov
dec
inc
call
pushl
stos
mov
pop
sbb
sti
outsl
or
mov
sti
and
xor
jmp
cmp
push
cmpsb
enter
pushf
mov
pop
xchg
cmp
testl
inc
mov
and
push
js
jbe
mov
jle
jnp
sub
cmp
sub
gs
xchg
jle
jbe
rcrl
rorl
je
push
jle
add
dec
cmpsb
mov
fidivrl
aas
mov
mov
outsl
fwait
cmp
mov
adc
cmp
out
jmp
jae
sahf
in
mov
in
arpl
aas
mov
scas
stc
test
push
ret
add
out
repz
ret
aaa
pop
mov
mov
leave
mov
aad
push
lcall
adc
sub
stos
test
or
enter
add
xor
jae
imul
adc
in
jge
cltd
adc
or
jmp
sarl
lret
dec
repnz
xor
mov
cmp
sub
sbb
xchg
add
jae
dec
or
push
lods
xchg
scas
jge
or
xchg
cltd
dec
fcoms
jge
or
mov
dec
cmp
xchg
nop
aas
out
and
and
pusha
test
cmp
dec
jge
lods
das
add
sbb
add
out
adc
test
mov
lret
cmp
insb
jo
sub
shll
add
daa
repnz
or
cs
mov
arpl
xchg
mov
cmp
ja
aaa
out
mov
add
call
rclb
pop
pop
notl
inc
pop
rcl
and
xorb
mov
insb
jp
pop
jg
jg
jge
insl
in
fcom
dec
or
fidivrs
out
or
or
ds
jo
push
das
xchg
fildl
xor
lahf
xor
lret
push
in
movl
jno
dec
xor
jp
in
push
and
xchg
mov
mov
mov
hlt
lock
mov
xlat
ret
xchg
enter
jmp
or
into
imul
jl
and
insb
fimull
pushf
jae
sar
popf
inc
in
jnp
leave
sub
cmpsl
jnp
and
sbb
icebp
pop
cmp
je
js
out
ljmp
sbb
cwtl
mov
pushf
push
pop
mov
lods
jle
shrb
jae
test
lods
cmp
or
xchg
cwtl
test
dec
dec
lret
push
out
fmull
je
xchg
mov
insl
fisttpl
xor
inc
mov
add
aas
push
push
and
cmp
insb
jle
jb
repz
jns
dec
mov
dec
inc
pop
cs
or
and
out
inc
or
cmp
xor
add
dec
movsb
fisttps
pop
jne
ds
jg
lock
int3
roll
stos
cli
outsl
das
popf
outsl
jl
pop
test
pop
fildll
inc
outsb
iret
movsb
aam
aam
sbb
mov
or
and
or
cvtps2pd
jno
in
add
mov
sub
loope
cmpl
xchg
into
sbb
nop
mov
xchg
push
fcmovne
pop
or
popa
mov
adc
sarl
shrl
jae
cmc
dec
lods
jge
sahf
cmpsb
repnz
mov
jae
or
adc
xchg
sbb
adc
jge
orb
add
xor
pusha
adc
cmp
shl
cmpsl
clc
ror
nop
imulb
shr
popa
adc
pop
insb
ljmp
xchg
cmpsb
std
mov
pop
rcll
fldenv
push
lods
mov
rcrl
out
lcall
adc
xchg
rorb
mov
lea
pop
pop
inc
imul
hlt
mov
pop
movl
outsb
dec
lea
cmp
stos
xor
push
mov
adcb
fdivs
xchg
mov
sahf
mov
sub
bound
popf
adcb
and
sbbb
sbb
pop
mov
mov
xor
jne
cmp
ret
pop
stos
in
movsb
ss
pusha
rep
and
pushf
xor
inc
sbb
out
sti
insl
push
imul
mov
loope
je
cs
inc
cmp
icebp
xchg
or
lahf
jne
xchg
pop
jae
push
sti
call
loopne
das
in
cmp
aad
jbe
shrl
fildl
mov
push
fdivrs
jnp
fidivrl
push
xor
shlb
cld
add
in
or
sbb
or
idivl
sbb
pop
jge
ret
xchg
and
es
sub
bound
mov
pop
pop
xchg
sbb
rcll
or
jp
lods
inc
flds
sub
push
mov
mov
cld
or
roll
push
hlt
mov
inc
jns
fstp
pop
dec
add
addr16
push
mov
mov
out
incl
sub
push
lret
sub
popf
cwtl
xor
arpl
jmp
mov
imul
sti
into
and
mov
cmp
mov
xor
scas
shlb
hlt
sbb
sbb
mov
add
loope
add
insb
push
push
mov
es
out
mov
daa
and
cld
jne
ret
jne
adc
pop
test
es
cltd
adc
mov
ret
mov
fldenv
pop
rclb
push
mov
cmp
fs
mov
sbb
aam
jp
push
or
xor
sub
jecxz
test
or
add
subb
adc
inc
les
in
mov
jle
jno
icebp
in
and
adc
or
dec
pop
aad
scas
inc
sub
jecxz
adc
lods
sbb
fsubrs
adc
and
mov
adc
call
or
rol
xchg
jns
or
lods
scas
add
sahf
mov
adc
lret
gs
scas
ss
pop
rcrb
jne
mov
int
xchg
mov
hlt
lock
nop
mov
jae
inc
imul
jo
lea
fmuls
xchg
insl
inc
push
xchg
sbb
cmpsl
ds
jae
sahf
fdiv
addr16
jg
xlat
sbbl
xor
cwtl
fs
dec
cmpsl
andl
jmp
aaa
lcall
jg
popa
nop
ds
push
pop
and
aaa
push
rcll
std
mov
dec
inc
stos
push
fmulp
jns
ficompl
adc
jmp
add
lea
fcomip
mov
push
lock
add
loopne
std
loop
mov
jg
jmp
clc
push
aas
xchg
push
lods
imul
cmpsb
bound
cs
sub
push
pop
cs
add
adc
lahf
rcll
mov
lds
cmpsl
imul
pop
mov
push
pop
add
or
dec
sbb
or
pusha
jb
pop
daa
out
pusha
bound
add
mov
jbe
and
or
mov
imul
or
xchg
out
je
lret
aaa
or
push
push
cmp
or
push
sarl
cmp
mov
sbb
orb
insb
xor
jle
sub
or
sbb
sbb
pop
mov
call
sub
rolb
xchg
pop
or
jno
loop
cmp
sti
stos
roll
push
sbb
xchg
in
cltd
in
fsubs
scas
dec
test
sub
xor
dec
cli
adc
and
cld
xchg
es
dec
mov
lret
cmp
adc
shrb
mov
ss
repnz
repnz
test
pop
sub
add
dec
test
loope
stos
daa
test
test
lds
je
cmpsb
inc
jno
lcall
jg
enter
adc
push
sub
push
pop
inc
sub
incl
jg
mov
add
mov
push
icebp
sbb
cmp
xchg
adc
jge
jl
sbb
test
shlb
inc
call
repz
mov
fs
fidivrs
xchg
jmp
outsb
xchg
add
idivb
and
les
add
sbb
fidivl
push
xor
imul
shll
push
and
sbb
adc
or
cmpb
shrl
js
popa
cmpsb
push
ja
movl
dec
aad
mov
leave
movaps
xor
mov
lea
push
dec
mov
repnz
cmpl
and
ljmp
jecxz
push
xchg
lret
cmpsb
loope
jg
in
cmc
and
ret
leave
dec
or
jbe
sbb
test
out
aad
mov
cmp
add
test
mov
repnz
mov
dec
pusha
mov
pop
xchg
das
je
xchg
sbbl
dec
xchg
sti
dec
and
ret
jo
mov
dec
inc
int3
push
imul
cmp
ljmp
xor
sub
jb
lret
int
xor
and
xorb
cmp
xchg
popa
inc
xor
mov
xchg
orl
dec
into
lahf
clc
mov
adc
outsb
sbb
inc
into
sub
jbe
scas
cld
lea
negl
jbe
cmp
sub
movsl
notl
call
pop
call
adc
dec
sarl
stos
repz
inc
fdivr
ds
ds
sub
inc
cmp
push
adc
cltd
das
mov
push
mov
loop
lcall
jno
les
add
ss
push
adc
mov
lret
aas
jb
xchg
std
dec
cmpsl
iret
pusha
shrb
xchg
mov
ret
pop
scas
adc
jmp
repnz
test
dec
push
xor
hlt
incl
lret
xchg
add
shrb
xor
jge
pop
sahf
cmp
and
idivb
cli
fbld
inc
or
pop
rorl
or
pop
sar
jbe
popf
inc
subl
inc
xchg
sbb
xchg
push
in
mov
fcomps
cmp
push
cld
es
cmp
cli
mov
push
out
push
dec
push
cmp
repnz
or
dec
stos
out
pop
or
js
in
xor
mov
jl
mov
pop
push
ret
mov
movsl
ljmp
in
icebp
in
or
gs
and
frstor
push
xor
dec
mov
sbb
push
dec
and
cmp
jle
and
adc
inc
into
sub
popa
sub
dec
or
sbb
mov
out
mov
cmpsb
jae
pop
push
mov
push
les
hlt
mov
fs
imul
popa
imul
jle
cmp
mov
je
mov
and
dec
aaa
or
decl
enter
push
jg
sub
jge
push
or
fucomip
popf
negb
sub
dec
fldcw
or
imul
stos
stos
rcl
and
popf
jno
cld
pushf
orl
pop
xor
es
xor
mov
jns
xchg
call
xchg
loop
dec
xor
adc
xchg
out
push
repz
mov
sub
or
sbb
jle
test
cmp
lcall
stos
cltd
add
aad
cmp
insb
dec
xlat
jl
or
scas
popf
mov
dec
sahf
ljmp
paddw
push
mov
incb
jno
fisttpll
xchg
lahf
repnz
inc
clc
pushf
xchg
int3
sbb
push
fildll
pop
adc
fisubrl
add
adcb
xchg
hlt
or
gs
in
or
push
cli
jo
jno
add
and
ljmp
sub
dec
xchg
leave
ret
lahf
loop
jg
pop
cmc
cs
sub
jbe
jmp
mov
enter
mov
pushf
fwait
icebp
sti
lock
push
rol
aaa
adc
mov
xorb
jae
sub
pop
cmp
mov
jge
pop
nop
push
loope
pop
adc
aad
sbb
enter
add
stos
incl
test
xchg
inc
cwtl
add
or
cltd
mov
xor
test
pop
xor
or
mov
mov
subb
mov
outsb
push
mov
repz
dec
test
imul
lock
xor
pop
out
adc
testb
call
dec
out
fsubrp
push
mov
mov
cmp
ja
call
mov
mov
sub
dec
xor
dec
fidivrs
das
out
retw
in
inc
lret
pop
call
ret
push
sahf
cld
cwtl
fimuls
movsl
and
xor
mov
jns
jmp
pop
je
mov
lret
arpl
das
jo
pop
or
jle
xchg
ret
int
movsl
pop
cld
push
rcll
xor
xchg
test
test
pop
fcoms
test
ja
mov
cmp
pop
pusha
xchg
inc
push
dec
xchg
push
sub
lcall
jg
xor
rorl
in
outsb
push
sbb
aas
xchg
cmp
mov
out
fdivrs
js
ljmp
in
ret
sbb
pop
add
popf
enter
in
fwait
dec
mov
mov
jg
sub
jne
mov
scas
jle
popa
mov
and
ss
cmc
in
jmp
pop
xchg
jne
xchg
xor
andl
insb
xchg
adc
orl
imul
inc
mov
xor
sub
add
inc
fldcw
aad
sbb
movsb
inc
movsb
ret
lcall
mov
fldl
jge
call
sahf
mov
jmp
mov
leave
insb
mov
add
xchg
mov
dec
aam
mov
jge
les
aaa
pop
rol
jmp
cld
fst
push
add
pusha
ljmp
xchg
leave
mov
dec
shlb
js
mov
in
in
cmp
cltd
popfw
jns
lds
lock
xor
arpl
sub
push
pushf
stos
mov
add
cmc
sub
popf
push
jg
jle
into
outsl
and
jbe
fstpl
popa
ss
xchg
fcoml
and
add
push
or
mov
xor
cld
shl
sarl
or
mov
out
into
sub
dec
inc
andl
xchg
or
sbb
das
and
call
iret
push
fiaddl
stc
mov
mov
pop
xchg
sub
in
add
mov
xor
inc
int3
xchg
loopne
mov
mov
jp
mov
out
pop
push
pop
in
cmp
and
arpl
in
xor
jno
lock
mov
mov
jne
xchg
sarb
daa
testb
mov
inc
cwtl
imul
xor
into
cmp
and
ljmp
push
xor
mov
fimuls
push
pop
dec
mov
int3
arpl
out
in
adc
ja
push
in
dec
pushf
in
xorb
test
pop
mov
xor
mov
mov
in
mov
sbb
xchg
dec
jno
sub
adc
fisubrl
dec
cld
jbe
in
ss
js
mov
imul
sbb
jp
inc
cmp
outsb
cmp
or
out
fsubl
cmp
mov
enter
into
mov
mov
lret
ja
gs
mov
or
jle
int3
fadds
stos
jecxz
sti
int
mov
push
jg
push
dec
out
mov
sub
mov
dec
cmp
mov
add
fs
imul
lcall
mov
dec
test
add
xchg
mov
sub
pop
jmp
ret
mov
xchg
adc
int
inc
xchg
sbb
out
or
adc
mov
push
push
lds
adc
cmp
adc
pop
popa
inc
jo
lahf
cs
push
sbb
pop
xor
lea
mov
cli
flds
or
cld
add
jmp
push
mov
xchg
std
outsl
cmp
mov
mov
shl
shrb
push
loope
pop
mov
mov
push
dec
or
dec
lea
push
mov
mov
add
or
inc
sub
jns
cmpsb
push
shl
int3
jecxz
pop
outsb
ret
dec
test
lods
daa
and
fcmovb
loop
or
fs
loop
rolb
jle
in
popf
xlat
xorb
shrb
cmc
xchg
dec
into
dec
dec
adc
enter
and
mov
pop
push
and
sub
dec
es
or
inc
xchg
push
lods
loope
sbb
filds
insl
cmpb
cmc
pop
cld
dec
inc
jnp
out
scas
js
aad
xor
mov
jg
dec
or
jmp
movsb
pusha
shrb
dec
lods
or
push
jp
call
lock
pop
test
adc
sbb
xor
jae
push
add
rolb
loopne
and
mov
gs
or
mov
fstp
jb
loope,pn
pusha
cmpsb
test
ss
add
push
and
jmp
cltd
xchg
scas
sbb
ljmp
cmp
cwtl
adc
movsb
xor
imul
dec
cmpsb
and
mov
push
fsubr
or
adc
cmp
and
jae
xlat
fld
fs
push
int3
imul
push
stc
or
mov
inc
lcall
sub
jb
out
out
xchg
mov
xchg
push
cmpb
aas
imulb
lods
loop
xchg
push
stc
add
mov
ret
xor
push
fisttps
cmp
lret
lcall
mov
xor
or
shl
xchg
jge
ds
sub
cld
lcall
cmp
fildl
mov
jl
push
mov
add
aas
pop
in
in
test
mov
ja
cmp
jns
adc
sbb
sbb
add
leave
mov
stos
fcoms
mov
sbbb
push
push
mov
gs
add
add
jns
and
daa
push
push
fdivrs
jbe
pushf
push
cld
push
sub
mov
xor
jae
push
cli
mov
push
leave
inc
cmp
pop
push
dec
mov
lods
mov
jl
mov
aaa
add
out
call
pop
jle
sbb
pushf
out
add
cmp
cmpsb
cmp
xchg
pop
sub
mov
outsl
add
cmp
stos
cli
mov
or
out
xchg
pcmpgtw
stc
imul
imul
fldpi
pop
cltd
adcb
js
xchg
add
adc
jecxz
adc
fiaddl
pop
lahf
inc
sbb
out
sub
daa
push
out
repz
jno
addr16
and
les
pop
mov
lock
adc
mov
and
shlb
leave
push
push
xor
imulb
xor
and
clc
xor
push
add
rcrb
sbb
sahf
cmc
test
stos
jg
mov
jmp
sbb
das
add
or
xlat
sbb
out
dec
jae
inc
xchg
pop
add
aad
cmp
xchg
jle
add
jmp
inc
rcl
adc
dec
adc
pop
icebp
out
fstps
jno
scas
stos
mov
and
jl
and
mov
ljmp
adc
cltd
pop
ss
jo
iret
or
mov
fstpt
imul
xchg
and
mov
jecxz
mov
dec
pop
xor
insb
in
xor
mov
arpl
cltd
lret
leave
mov
ljmp
out
mov
add
into
out
sub
lea
lock
stos
mov
jg
popf
jb
push
dec
and
clc
xchg
int
popa
notl
or
movsl
inc
rorl
jne
arpl
mov
mov
fs
fwait
test
roll
jb
sarb
vpminub
in
arpl
mov
andl
gs
mov
es
xor
fdivp
xor
inc
or
mov
call
xchg
cli
mov
adc
push
sub
lret
push
jne
js
insl
insl
xor
mov
shll
fwait
mov
ret
out
idivl
in
repnz
sub
mov
and
inc
dec
xor
ret
movsl
cltd
fwait
xor
sub
cmp
ds
adc
int3
sbb
loopne
add
adc
xchg
push
mov
dec
inc
std
mov
push
and
xchg
and
adc
mov
xchg
xor
pop
pop
and
pop
leave
jecxz
sbb
addr16
jno
jp
orb
sbb
icebp
pop
sahf
scas
pushf
push
cmp
add
test
in
dec
pusha
popa
outsl
and
xor
int3
mov
xchg
or
mov
mov
fmul
dec
jg
out
dec
repnz
lret
mov
inc
lods
pop
aas
or
cmp
frndint
mov
jp
adc
sbb
movsb
sub
test
mov
das
mov
or
inc
fwait
das
pusha
sub
ret
mov
leave
pop
push
xor
xor
pop
xor
fidivrs
pop
stos
jae
orl
sahf
notb
pushf
ret
movsl
pusha
pop
adc
push
mov
lret
mov
enter
inc
test
mov
ja
pusha
inc
ret
cmpb
loop
jmp
fadd
xor
jmp
bound
mov
mov
fcmovne
inc
push
fucomi
cmp
jge
mov
jne
inc
andb
xchg
les
and
pop
cli
jb
mov
in
sub
adc
mov
xchg
pop
jl
fnstcw
xchg
flds
lock
notl
in
je
sub
std
inc
or
imul
inc
xchg
inc
ljmp
out
add
aaa
push
aam
mov
test
aam
or
cmp
xchg
inc
adc
mov
cmp
mov
lret
faddl
mov
mov
fsub
divl
and
cmpsl
int
xor
mov
or
lds
xchg
mov
fcmovu
cltd
sub
sub
mov
stos
lea
pop
xor
mov
jl
cmpsl
cmp
xor
cmp
out
push
or
dec
scas
int3
and
gs
xchg
inc
cmpb
add
arpl
or
push
inc
xor
lock
mov
lcall
mov
std
loope
dec
sub
popl
dec
pop
push
jns
fcmovnbe
cwtl
add
aam
in
jnp
mov
xor
xor
inc
movsb
push
fdivl
and
push
xor
add
jno
cltd
adc
cld
mov
xor
fwait
jns
loop
and
es
ret
xor
push
push
scas
or
jmp
push
std
test
pop
test
cmp
or
lahf
pop
xchg
jp
imul
mov
scas
movsb
shrb
ficompl
lret
cmp
dec
daa
nop
pop
xor
xchg
ret
sub
inc
lods
sbb
jmp
push
ret
js
sbb
lret
js
and
ja
sbb
jbe
fnstcw
stos
jg
test
jbe
and
inc
pop
add
outsb
fsubl
sbb
in
lds
testl
das
int3
mov
or
popa
aad
aam
push
pop
adcb
iret
or
test
jmp
dec
push
sub
adc
or
insb
add
popa
scas
ficompl
adc
push
dec
add
xchg
aam
and
inc
adc
ror
or
cmp
outsl
enter
insl
inc
jae
es
xor
lock
inc
into
xchg
add
xor
fidivl
popa
clc
ss
cmp
scas
sub
push
sub
in
testb
jmp
or
sub
popa
into
push
adc
mov
scas
notb
cld
les
movsl
dec
add
cld
push
loop
jns
faddl
fucomi
fsubl
mov
insb
push
and
lret
jo
sarl
mov
jmp
insb
aad
je
lahf
andb
pusha
xchg
arpl
test
dec
push
outsb
mov
jmp
mov
sub
aad
call
es
mov
push
clc
bound
mov
in
cmp
push
fstpl
jl
add
mov
mov
ficomps
fwait
cmpsl
faddl
outsb
ret
jl
movsb
push
and
mov
out
out
into
xor
adc
cmpsb
cmp
xor
push
popa
mov
icebp
pushf
add
stos
lret
adc
scas
rolb
sti
test
iret
inc
lock
sub
into
sbb
shrb
imull
andb
xchg
iret
aam
ds
leave
add
int3
ror
adc
add
in
fmuls
inc
lret
inc
adc
rcrl
std
pop
or
or
or
xor
fcmovu
in
adc
inc
sub
push
adc
ret
outsl
pop
test
jb
lods
jb
push
in
lahf
in
arpl
imul
xchg
ret
sbb
stc
mov
push
mov
hlt
dec
cmpsl
add
dec
pop
and
and
push
xchg
and
jnp
dec
loope
sub
popa
es
rcrb
inc
leave
loop
xchg
nop
outsb
mov
cmp
lcall
inc
int
les
sub
mov
mov
mov
add
mulb
pusha
add
or
movsb
mov
jae
or
inc
shll
sbb
fsubl
lcall
aad
fucomp
outsl
iret
addr16
mov
xchg
mov
and
fxch
test
cli
sti
gs
sti
adcl
jle
mov
idiv
or
insb
mov
cltd
lcall
xor
leavew
sarb
dec
jno
popa
in
mov
and
ss
data16
std
out
call
xchg
cmpsb
xlat
sbb
cmc
hlt
xlat
clc
fsubl
push
leave
cmp
push
out
int
hlt
mov
xchg
ror
or
gs
in
jle
xchg
dec
add
xchg
aam
movb
andl
fistps
adcl
add
jp
xchg
xchg
fstp
jge
lret
in
xor
fstps
xchg
sti
pop
stos
xchg
pusha
scas
adc
jle
or
mov
stc
dec
mov
and
fwait
insl
ret
mov
leave
jg
subb
jo
jmp
mov
mov
mov
jb
in
out
outsb
fcom
scas
mov
and
pusha
lcall
sti
iret
nop
das
mov
cmp
jb
dec
mov
out
push
dec
push
enter
adc
js
enter
fldenv
xchg
xchg
aaa
xchg
shlb
clc
xchg
cs
fisubs
rcll
in
mov
mov
pop
aaa
or
lahf
or
and
in
call
loope
mov
ljmp
adcl
add
movsb
cmpsb
dec
bound
mov
insl
ja
cmp
inc
inc
push
lcall
rorb
