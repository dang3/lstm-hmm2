nop
nop
nop
nop
nop
nop
nop
mov
push
mov
and
push
mov
call
inc
add
xchg
add
add
call
pop
ret
nop
nop
mov
add
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
inc
add
add
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
call
mov
call
add
push
push
push
push
call
mov
call
mov
pop
ret
push
mov
call
test
jne
pop
ret
mov
call
mov
push
call
add
test
jne
mov
test
jne
xor
pop
ret
mov
pop
ret
nop
nop
nop
push
mov
push
call
inc
add
add
add
rolb
cli
inc
add
stos
add
mov
call
inc
add
call
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
neg
sbb
neg
cmp
je
mov
mov
call
pop
ret
nop
push
mov
call
mov
call
inc
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
push
mov
push
mov
call
lea
movl
mov
call
mov
mov
movl
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
lea
push
push
call
mov
add
test
je
push
mov
xor
lea
rep
push
lea
push
push
call
mov
mov
push
lea
push
push
push
push
call
add
lea
call
neg
sbb
push
neg
mov
mov
mov
lea
push
push
push
push
call
push
call
add
pop
pop
pop
add
ret
sub
push
mov
push
push
lea
push
push
call
mov
add
test
je
push
mov
xor
lea
rep
push
lea
push
push
call
mov
mov
push
lea
push
push
push
push
call
mov
add
test
setne
push
lea
call
push
call
add
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
push
movl
call
add
mov
test
movb
je
mov
push
mov
call
jmp
xor
mov
movb
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
je
mov
test
je
mov
push
call
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
pop
ret
nop
nop
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
inc
add
mov
and
jmp
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
inc
add
sbb
and
xchg
call
nop
push
push
mov
push
mov
push
push
mov
mov
call
push
movl
movl
call
mov
add
mov
mov
pop
add
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
call
mov
push
push
call
mov
add
mov
call
mov
push
call
add
test
je
push
call
add
call
mov
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
xor
movl
mov
mov
mov
mov
ret
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
mov
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
call
ret
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
jne
mov
mov
mov
mov
mov
mov
add
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
movl
movl
mov
pop
ret
nop
nop
cmpl
jne
mov
test
je
push
mov
push
push
push
lea
push
push
and
push
push
mov
mov
push
call
mov
push
call
pop
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
movl
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
call
mov
xor
mov
mov
mov
movl
mov
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
push
push
cmp
push
mov
jb
cmp
jb
cmp
jb
cmp
jae
mov
mov
cmp
je
pop
pop
mov
pop
ret
cmp
jb
cmp
jae
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
mov
call
pop
pop
pop
ret
add
cmp
ja
jmp
mov
test
jne
pop
pop
mov
pop
ret
pop
movl
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
push
mov
call
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
mov
mov
push
push
mov
call
pop
pop
xor
pop
ret
mov
test
je
mov
cmpl
jb
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
movl
mov
push
movl
test
push
je
mov
push
push
add
push
push
call
add
jmp
mov
mov
push
push
push
call
add
mov
test
je
mov
mov
push
push
mov
call
test
je
mov
mov
push
push
push
call
add
push
push
call
add
sub
je
sub
je
movl
push
movl
call
mov
add
pop
pop
pop
pop
ret
push
movl
movl
call
mov
add
pop
pop
pop
pop
ret
movl
push
call
add
mov
pop
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
mov
cmp
jb
mov
mov
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
xchg
and
pop
and
fcompl
and
pop
and
jmp
pop
and
jbe
and
sbbl
xchg
pop
and
enter
mov
push
mov
mov
mov
test
jne
call
mov
mov
mov
test
jne
call
mov
mov
mov
test
je
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
xor
push
mov
push
mov
push
mov
mov
rep
mov
test
jne
mov
mov
mov
rep
pop
pop
pop
add
ret
mov
push
mov
mov
lea
mov
mov
mov
sub
mov
mov
mov
mov
sub
sub
mov
mov
lea
add
mov
movl
jmp
mov
mov
mov
add
add
push
mov
push
mov
mov
mov
mov
push
push
call
mov
mov
add
add
push
push
mov
mov
push
push
call
mov
mov
sub
mov
mov
sub
movl
jmp
mov
mov
add
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
add
mov
mov
add
mov
add
mov
dec
mov
mov
jne
lea
movl
mov
lea
mov
mov
sub
sub
movl
mov
lea
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
mov
mov
add
mov
add
cmp
mov
mov
jl
mov
lea
pop
mov
add
add
cmp
mov
mov
jl
mov
pop
mov
pop
pop
add
ret
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
mov
test
je
mov
test
je
push
mov
xor
lea
rep
mov
mov
mov
mov
lea
push
push
push
mov
call
lea
push
push
call
add
add
lea
mov
push
push
sub
push
push
lea
push
push
push
push
push
call
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
push
jne
mov
pop
mov
pop
ret
mov
test
movw
movw
jbe
push
mov
push
mov
push
push
push
call
push
push
push
call
add
add
dec
jne
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
push
xor
test
jbe
mov
mov
test
jle
mov
push
push
push
call
add
test
je
jmp
cmpw
je
inc
add
cmp
jb
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
nop
push
push
push
mov
push
cmpw
jne
add
cmpw
je
mov
mov
push
push
call
mov
add
test
mov
jne
push
push
call
add
mov
mov
mov
sub
sar
cmp
jbe
mov
mov
mov
push
push
push
push
call
add
test
jne
mov
lea
lea
lea
mov
lea
mov
shr
rep
mov
and
rep
mov
add
lea
mov
lea
movw
mov
inc
mov
mov
cmp
jae
mov
cmpw
mov
jne
lea
cmpw
jne
pop
pop
pop
pop
ret
nop
mov
push
mov
xor
mov
push
push
push
rep
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
mov
push
mov
push
mov
and
push
push
push
push
push
call
mov
add
and
test
je
mov
lea
push
push
lea
push
push
call
mov
lea
push
push
lea
push
push
call
mov
lea
push
push
add
push
push
call
push
lea
push
push
push
call
add
and
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
mov
push
push
mov
push
push
push
push
push
call
mov
push
lea
push
push
and
call
push
lea
push
push
push
call
lea
lea
push
lea
movl
lea
lea
push
push
movl
movl
call
lea
push
lea
push
push
call
add
add
lea
push
push
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
test
je
push
push
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
and
cmp
jne
mov
mov
push
push
push
push
mov
push
push
push
push
push
call
ret
mov
mov
push
push
mov
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
movl
call
test
jne
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
mov
pop
pop
mov
mov
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
mov
push
lea
push
mov
push
lea
push
push
push
lea
push
push
mov
call
test
je
pop
pop
pop
xor
pop
ret
cmp
jbe
pop
pop
pop
xor
pop
ret
mov
cmp
je
cmp
je
pop
pop
pop
xor
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
pop
pop
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
mov
call
test
je
pop
pop
xor
pop
pop
ret
cmpl
je
pop
pop
xor
pop
pop
ret
mov
mov
cmp
jbe
pop
pop
xor
pop
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
sbb
pop
pop
inc
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
call
test
jne
cmpl
ja
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
push
push
lea
push
call
mov
mov
mov
push
shr
push
movw
lea
push
call
add
mov
pop
pop
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
mov
push
push
push
push
call
neg
sbb
inc
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
lea
push
push
push
push
push
call
add
adc
nop
nop
nop
nop
push
mov
push
call
mov
mov
lea
push
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
push
push
push
call
add
ret
nop
mov
sub
lea
push
push
push
push
call
lea
push
call
mov
lea
shl
push
push
push
call
mov
mov
lea
push
push
push
push
call
add
pop
add
ret
nop
nop
nop
mov
sub
lea
push
push
push
call
test
jne
add
ret
lea
push
push
call
add
test
je
add
jmp
lea
movw
mov
push
lea
push
push
call
add
lea
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
push
call
mov
inc
lea
push
call
mov
add
test
jne
mov
pop
pop
pop
add
ret
push
push
push
call
mov
mov
add
lea
mov
mov
push
mov
push
push
lea
push
mov
mov
push
push
push
push
push
mov
mov
call
test
je
mov
push
call
mov
add
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
sub
push
mov
cmp
jbe
xor
pop
add
ret
mov
mov
mov
mov
mov
mov
test
mov
je
lea
push
push
push
call
add
jmp
movw
test
je
mov
push
mov
mov
push
lea
shr
rep
mov
and
rep
pop
pop
mov
lea
push
mov
lea
add
push
push
mov
lea
push
push
push
push
push
push
call
test
je
xor
pop
add
ret
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
call
mov
lea
push
lea
push
push
push
call
add
test
je
xor
add
ret
push
mov
test
je
mov
lea
push
push
push
call
add
test
je
mov
xor
test
mov
setne
mov
pop
add
ret
movl
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
lea
push
push
xor
push
push
mov
mov
call
mov
add
cmp
jne
pop
xor
pop
add
ret
mov
cmp
je
cmp
je
push
lea
push
push
call
add
jmp
lea
push
push
push
push
call
add
test
jne
mov
lea
push
mov
push
mov
test
je
cmpw
je
mov
xor
test
jne
push
lea
push
push
call
lea
push
lea
push
push
push
call
add
test
jne
mov
lea
push
push
push
push
call
add
test
je
lea
lea
push
push
call
add
test
jne
mov
mov
neg
sbb
lea
and
add
push
mov
push
push
push
call
add
test
je
mov
mov
lea
push
push
push
push
call
add
test
je
movl
mov
push
call
mov
test
je
mov
inc
test
je
jmp
mov
test
jne
mov
test
je
push
lea
push
push
call
lea
push
lea
push
push
push
call
add
test
jne
mov
lea
push
push
push
call
mov
mov
lea
push
push
push
push
call
add
test
je
movl
mov
push
jmp
push
lea
push
push
call
lea
push
lea
push
push
push
call
add
test
jne
neg
sbb
mov
and
lea
add
push
mov
push
push
push
call
add
test
je
mov
lea
push
push
push
push
call
add
test
je
movl
mov
push
call
mov
test
jne
lea
push
lea
push
push
push
call
add
test
jne
mov
lea
push
push
push
push
call
add
test
je
cmpw
jne
mov
lea
push
push
push
call
add
mov
mov
lea
push
push
push
push
call
add
test
je
movl
mov
push
call
push
call
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
sub
mov
push
push
push
push
mov
mov
xor
lea
mov
rep
lea
lea
stos
mov
push
push
push
push
push
movl
call
add
test
je
mov
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
je
lea
lea
push
push
push
push
push
movl
call
add
test
je
lea
lea
push
push
call
add
test
je
inc
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
jne
push
lea
push
push
call
mov
lea
push
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
mov
push
mov
push
push
push
lea
movl
push
call
xor
mov
xor
lea
add
mov
rep
mov
mov
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
mov
movl
test
je
push
call
add
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
test
push
jne
pop
pop
pop
xor
pop
ret
mov
test
jne
mov
lea
xor
test
je
push
call
mov
add
inc
test
jne
lea
push
call
mov
add
test
mov
jne
pop
pop
pop
pop
ret
mov
xor
mov
shr
rep
mov
and
rep
mov
test
mov
mov
mov
jle
mov
mov
mov
mov
add
dec
jne
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
xor
mov
push
mov
test
jbe
lea
cmp
je
inc
add
cmp
jb
jmp
mov
lea
mov
test
mov
jne
mov
call
mov
test
jne
mov
mov
movl
call
mov
add
test
je
mov
jne
xor
jmp
mov
push
call
test
je
mov
push
call
mov
add
test
jne
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
mov
cmp
jae
xor
ret
mov
push
mov
cmp
pop
je
xor
ret
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
lea
push
call
add
cmp
mov
jne
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
lea
test
je
mov
add
test
jne
mov
mov
cmp
jne
push
call
add
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
mov
call
lea
movl
mov
call
mov
movl
movl
add
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
mov
push
push
push
mov
mov
call
lea
xor
mov
mov
call
mov
movl
movl
add
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
add
movl
call
add
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
push
mov
mov
test
je
mov
push
call
mov
test
jne
mov
test
je
mov
mov
cmp
ja
mov
call
pop
ret
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
push
mov
call
ret
jmp
nop
nop
nop
nop
nop
push
mov
test
je
cmp
je
mov
push
call
push
call
mov
push
push
push
push
call
pop
ret
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
mov
push
call
test
jne
mov
mov
cmp
je
push
call
cmp
je
pop
pop
pop
xor
pop
ret
mov
cmp
je
cmp
je
push
cmp
push
push
mov
je
call
pop
pop
pop
pop
ret
call
cmpl
jne
mov
test
je
push
call
pop
pop
pop
mov
pop
ret
push
mov
call
test
je
mov
mov
call
jmp
push
mov
call
test
je
mov
mov
call
push
mov
call
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
call
pop
ret
nop
nop
nop
nop
sub
push
push
push
mov
call
mov
push
call
push
call
mov
mov
push
push
push
push
call
mov
test
je
push
lea
push
push
mov
push
push
lea
movl
movl
mov
mov
call
mov
push
push
push
push
call
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
sub
mov
push
lea
push
push
push
call
lea
push
push
movl
call
mov
add
test
je
push
call
add
cmp
je
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
movl
push
call
add
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
push
push
push
push
call
lea
push
push
xor
call
mov
add
test
je
push
call
add
cmp
je
push
call
mov
add
test
je
push
push
push
push
call
mov
push
push
push
push
call
add
test
je
push
push
push
push
call
mov
add
test
je
push
call
mov
add
test
je
mov
mov
push
push
push
push
mov
mov
call
add
mov
mov
pop
pop
pop
pop
add
ret
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
push
mov
test
je
mov
push
call
push
call
add
pop
ret
nop
nop
nop
push
push
push
push
push
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
mov
lea
push
push
push
push
call
add
test
jne
cmp
je
lea
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
pop
ret
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
mov
push
dec
push
cmp
push
ja
mov
mov
mov
jmp
push
push
push
call
add
test
jne
push
push
call
mov
add
test
je
push
push
push
push
call
add
test
jne
push
push
call
add
mov
pop
pop
pop
ret
mov
mov
mov
push
push
push
call
add
pop
pop
pop
ret
xor
pop
pop
pop
ret
pop
jnp
and
and
fwait
jnp
and
and
nop
nop
nop
nop
push
mov
push
push
test
push
je
mov
mov
test
jne
test
jne
mov
test
je
mov
mov
movl
lea
mul
shr
lea
cmp
jae
mov
pop
pop
pop
xor
pop
ret
mov
xor
mul
xor
shr
je
mov
jmp
mov
xor
xor
mov
mov
inc
mov
inc
xor
mov
mov
sar
and
and
shl
mov
inc
mov
mov
sar
and
inc
or
and
shl
mov
mov
mov
sar
and
inc
or
and
inc
mov
mov
mov
mov
mov
inc
dec
mov
jne
mov
mov
mov
xor
mov
div
dec
je
dec
jne
xor
mov
mov
xor
mov
mov
sar
and
and
shl
mov
mov
mov
sar
and
inc
or
inc
and
mov
mov
mov
mov
jmp
xor
mov
mov
and
sar
and
inc
shl
mov
mov
mov
mov
inc
movb
inc
movb
inc
mov
movb
pop
inc
pop
pop
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
test
je
mov
mov
test
jne
test
jne
mov
test
je
mov
movl
cmp
jne
or
xor
repnz
not
dec
mov
mov
lea
shr
lea
cmp
jae
test
mov
jbe
mov
cmpb
jne
dec
jne
mov
and
jbe
shr
add
lea
add
mov
cmp
jae
mov
pop
pop
pop
xor
pop
add
ret
xor
cmp
mov
mov
mov
jbe
xor
xor
xor
cmp
jae
mov
xor
mov
inc
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
call
inc
add
inc
and
add
add
jmp
mov
cmp
jae
mov
xor
mov
inc
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jae
xor
mov
inc
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jae
mov
xor
mov
inc
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
xor
mov
mov
xor
mov
mov
mov
mov
mov
and
and
mov
shl
or
mov
sar
and
shl
or
mov
mov
sar
and
inc
shl
or
mov
mov
inc
mov
inc
test
mov
jne
mov
mov
cmp
jae
mov
mov
jmp
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
add
inc
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jne
xor
mov
mov
mov
mov
mov
shr
and
and
shl
or
mov
mov
sar
and
shl
or
mov
mov
inc
mov
inc
mov
jmp
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jne
cmp
jne
mov
mov
mov
shr
and
shl
or
mov
mov
inc
mov
mov
mov
mov
pop
mov
xor
test
pop
pop
sete
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
mov
push
push
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
mov
jmp
mov
mov
add
test
je
mov
shr
push
push
push
call
add
jmp
movw
jmp
mov
mov
mov
xor
add
shr
rep
mov
and
rep
mov
test
je
mov
mov
mov
add
shr
rep
mov
and
rep
mov
add
test
jne
pop
pop
pop
pop
ret
mov
scas
andb
mov
andb
mov
nop
nop
nop
nop
nop
nop
nop
push
push
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
shr
push
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
shr
push
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
add
test
jne
pop
pop
mov
pop
pop
ret
mov
pop
pop
ret
lea
jnp
and
xchg
andl
rolb
and
nop
nop
nop
nop
push
push
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
mov
push
push
push
call
add
test
jne
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
add
test
jne
pop
pop
mov
pop
pop
ret
mov
pop
pop
ret
mov
push
test
and
and
mov
test
and
push
mov
mov
mov
mov
test
je
push
mov
push
mov
push
mov
mov
mov
test
je
mov
lea
cmp
ja
jmp
mov
push
mov
lea
push
mov
push
jmp
mov
mov
add
push
push
push
jmp
mov
add
sub
je
sub
jne
push
push
push
push
push
push
call
add
test
jne
jmp
push
push
push
push
push
push
call
add
test
jne
movl
mov
add
test
jne
mov
pop
pop
pop
pop
pop
ret
lea
xor
test
and
and
pop
test
and
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
mov
lea
cmp
ja
jmp
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
jmp
mov
lea
mov
mov
push
mov
add
push
push
push
push
call
add
test
jne
xor
mov
jmp
mov
mov
add
mov
sub
mov
je
sub
jne
lea
push
push
push
push
push
call
jmp
lea
push
push
push
push
push
call
add
test
jne
xor
mov
jmp
mov
mov
add
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
pop
pop
pop
ret
mov
sbb
and
xchg
and
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
push
mov
xor
mov
div
mov
mov
push
mov
mov
xor
div
mov
mov
mov
mov
xor
div
mov
mov
mov
xor
div
mov
mov
mov
xor
div
mov
mov
mov
xor
div
xor
test
mov
jbe
mov
mov
and
and
mov
xor
mov
and
xor
mov
and
xor
mov
and
xor
mov
and
xor
mov
xor
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
inc
cmp
mov
jb
add
mov
inc
cmp
jb
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
mov
movl
mov
ret
nop
nop
nop
push
mov
test
jbe
mov
push
mov
push
push
push
call
add
movw
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
jbe
mov
push
mov
push
push
push
push
push
push
call
movw
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
test
jbe
mov
push
mov
push
push
push
push
push
push
push
push
call
movb
pop
pop
ret
nop
nop
nop
push
mov
test
ja
mov
pop
ret
push
mov
push
call
add
cmp
jae
push
mov
push
call
add
mov
pop
pop
ret
lea
push
push
mov
push
call
add
movw
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
push
call
mov
mov
push
call
mov
lea
add
cmp
jae
lea
cmp
ja
push
push
call
add
mov
pop
pop
pop
pop
ret
mov
lea
sub
push
push
push
call
add
movw
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
xor
lea
push
push
push
push
movl
call
add
test
je
mov
mov
push
call
add
test
je
mov
mov
add
inc
cmp
jae
lea
push
push
push
push
call
add
test
jne
pop
pop
pop
mov
pop
pop
ret
mov
cmp
je
cmp
je
cmp
jne
movw
pop
pop
pop
mov
pop
pop
ret
movw
pop
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
push
push
push
call
add
test
jne
pop
ret
mov
xor
cmp
pop
sete
ret
nop
nop
nop
sub
lea
push
push
push
mov
push
push
push
push
call
add
test
je
mov
cmp
jne
lea
push
push
push
call
add
test
je
mov
cmp
jne
lea
push
push
push
call
add
cmp
jne
mov
add
push
push
call
add
test
jne
lea
push
push
push
call
add
cmp
jne
lea
push
push
call
add
test
jne
mov
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
mov
mov
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
cmp
jne
lea
push
push
push
call
add
cmp
je
sub
pop
neg
sbb
pop
and
pop
add
pop
add
ret
push
push
call
lea
push
push
push
call
add
cmp
jne
pop
pop
pop
mov
pop
add
ret
cmp
jne
lea
push
push
push
call
add
test
je
mov
pop
sub
pop
neg
sbb
pop
and
pop
add
add
ret
cmp
jne
pop
pop
pop
mov
pop
add
ret
push
push
call
lea
push
push
push
call
add
cmp
je
pop
pop
pop
mov
pop
add
ret
cmp
jne
lea
push
push
push
call
add
test
je
mov
cmp
jne
push
push
call
mov
lea
push
push
push
push
call
add
test
je
cmp
je
lea
push
push
push
push
call
add
test
jne
cmp
jne
push
push
call
mov
push
dec
call
mov
add
test
je
lea
lea
push
push
call
mov
mov
mov
xor
add
cmp
mov
mov
fildl
add
mov
mov
mov
je
mov
cmpw
jne
lea
push
push
push
push
call
add
test
je
cmpw
je
lea
push
push
push
push
call
add
test
jne
cmpw
jne
mov
mov
mov
pop
pop
pop
pop
add
ret
cmp
jne
push
call
mov
add
test
je
lea
lea
push
push
call
mov
mov
lea
add
test
movl
movl
movl
mov
je
mov
lea
push
push
push
push
call
add
cmp
je
cmp
jne
mov
lea
jmp
cmp
jne
mov
lea
jmp
cmp
je
lea
push
push
push
push
call
add
cmp
jne
pop
pop
pop
pop
add
ret
mov
mov
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
mov
xor
mov
test
je
mov
inc
test
jne
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xor
mov
test
je
cmpl
jne
inc
mov
test
jne
ret
nop
nop
nop
nop
nop
mov
xor
mov
test
je
cmpl
jne
inc
mov
test
jne
ret
nop
nop
nop
nop
nop
mov
push
lea
push
lea
lea
push
push
push
push
movl
call
push
mov
call
add
cmp
mov
ja
mov
pop
pop
ret
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
mov
push
mov
xor
mov
test
jbe
test
je
mov
inc
cmp
jb
xor
cmp
setne
dec
pop
and
ret
nop
nop
nop
nop
nop
nop
push
push
push
call
mov
xor
add
cmp
jne
pop
xor
pop
ret
push
call
add
cmp
mov
jne
push
call
add
xor
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
push
push
call
push
mov
call
mov
mov
add
mov
test
jbe
mov
push
push
call
add
dec
jne
push
push
call
lea
push
push
mov
call
mov
add
test
jne
push
push
call
add
jmp
xor
push
push
call
mov
add
test
je
cmpl
jne
push
push
call
lea
push
push
call
push
push
call
mov
mov
mov
inc
add
adc
add
inc
add
add
mov
add
cmp
jae
mov
mov
add
push
call
add
test
je
mov
push
push
push
push
call
add
test
je
mov
or
inc
add
add
mov
add
cmp
jb
push
push
call
add
inc
push
push
call
mov
add
test
jne
mov
test
jne
push
push
call
mov
add
jmp
pop
pop
pop
mov
pop
add
ret
push
push
call
mov
add
mov
test
je
xor
push
push
call
add
test
je
cmpl
jne
lea
push
push
push
call
add
test
jne
inc
push
push
call
add
test
jne
mov
test
je
mov
test
je
test
jbe
mov
push
push
call
add
dec
jne
push
push
call
mov
push
push
call
push
push
call
add
xor
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
push
push
push
mov
push
mov
mov
mov
dec
xlat
inc
add
call
mov
int
inc
add
add
mov
add
cmp
jae
mov
mov
add
add
push
call
add
test
je
mov
test
je
mov
cmp
jae
mov
mov
mov
add
add
dec
sldt
mov
add
cmp
jb
mov
test
je
mov
cmp
jb
pop
pop
pop
mov
pop
ret
movw
mov
inc
pop
pop
mov
pop
xor
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
push
movl
call
add
test
jne
mov
pop
pop
ret
mov
mov
push
mov
push
push
push
push
call
add
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
push
push
movl
movl
call
mov
add
test
jne
pop
ret
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
xor
cmp
mov
mov
mov
mov
je
mov
dec
mov
jmp
mov
mov
push
push
call
mov
add
cmp
jne
mov
mov
mov
mov
inc
cmp
mov
mov
je
mov
pop
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
mov
add
test
jne
pop
ret
mov
lea
push
push
call
mov
movl
movl
movl
lea
mov
add
mov
test
je
lea
mov
test
jne
mov
mov
pop
ret
nop
nop
nop
nop
push
push
mov
test
movl
jne
lea
mov
cmp
jne
xor
pop
pop
ret
test
jne
mov
lea
mov
test
je
mov
lea
test
mov
jne
mov
test
je
jmp
mov
test
je
mov
jmp
mov
lea
test
mov
jne
mov
test
je
mov
cmpl
jne
movl
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
push
push
push
push
mov
movl
test
jne
lea
mov
push
push
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
jne
cmpl
je
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
pop
ret
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
jne
cmpl
je
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
ret
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
push
push
mov
push
lea
push
mov
lea
push
push
push
push
movl
call
mov
add
test
jne
push
call
mov
add
test
jne
pop
pop
mov
pop
pop
ret
lea
push
push
call
movl
movl
movl
mov
mov
add
mov
mov
mov
mov
mov
movl
pop
pop
xor
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
lea
push
mov
lea
push
push
push
push
call
add
cmp
jne
pop
ret
mov
mov
mov
push
mov
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
xor
push
mov
lea
push
push
push
mov
call
mov
add
cmp
je
push
call
push
call
lea
push
push
push
call
mov
add
cmp
jne
mov
pop
pop
xor
pop
pop
ret
nop
nop
mov
add
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
je
xor
ret
mov
add
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
cmp
jne
push
mov
or
xor
repnz
not
dec
pop
mov
push
mov
lea
mov
movl
dec
add
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
lock
test
je
mov
mov
lea
lea
push
push
push
push
push
movl
call
add
test
jne
mov
lea
push
push
call
add
test
je
lea
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
add
or
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
mov
pusha
stos
jbe
add
xchg
filds
add
pop
arpl
fiaddl
je
fwait
push
add
fildl
push
scas
add
mov
call
add
push
push
push
call
add
gs
add
std
repnz
add
xchg
lret
fildl
add
lcall
add
add
add
add
add
rolb
scas
add
test
cwtl
add
add
movb
test
add
mov
popa
mov
popl
push
push
push
push
push
lea
push
call
add
xchg
add
test
add
addr16
lea
pop
imull
add
add
add
add
jmp
stos
mov
imul
add
lahf
out
add
sub
pop
push
push
push
push
push
push
push
push
push
push
call
add
add
ffreep
push
add
add
in
add
add
idiv
cmpsb
add
jl
add
add
je
lods
stc
mov
add
out
int3
add
add
mov
mov
add
add
jmp
je
add
loope
mov
sub
pop
push
push
push
lea
push
call
lods
fs
add
add
divl
add
add
lock
gs
add
fnstcw
add
addl
out
imull
add
add
add
add
jmp
sub
pop
push
push
push
lea
push
call
push
loope
fadds
jo
add
flds
add
lock
add
popa
push
jb
std
add
js
incb
add
xchg
lret
add
mov
outsl
add
jno
add
push
add
add
fsubl
hlt
lcall
cmp
add
push
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
cmpsb
add
mulb
mov
out
jl
pop
add
add
lds
mov
mov
cmc
push
je
add
add
shlb
add
add
bound
sar
add
sub
pop
call
push
push
lea
push
push
push
push
push
call
mov
shr
movsl
pop
lods
pop
addl
add
mov
add
add
out
add
add
ficompl
movsb
mov
push
add
add
fldl
add
xor
add
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
imul
add
ja
add
add
dec
add
cmpsl
add
add
push
add
popa
add
mov
add
nop
add
add
in
fsubs
insb
add
cmpsl
sub
pop
jmp
ret
push
push
lea
push
push
call
add
add
add
mov
add
add
add
fildl
pop
cli
jmp
add
fldl
inc
hlt
push
push
push
call
lds
add
test
add
xchg
xchg
mov
jmp
insb
bound
lea
mov
add
add
add
add
bound
add
xchg
pushf
mov
add
add
lcall
into
out
add
sub
pop
mov
add
push
push
push
call
jae
stos
mov
rclb
add
popa
add
add
cld
bound
movl
push
push
rcrl
add
add
lods
int
mov
jbe
add
add
ret
add
add
add
push
push
push
push
lea
push
call
cmpsb
mov
mov
addl
add
scas
add
add
add
add
lock
add
add
jo
pop
add
add
mov
lds
jno
fs
add
loop
leave
icebp
pusha
cli
add
pop
add
xor
adc
push
lea
push
push
push
push
push
push
push
call
add
add
add
jbe
add
add
in
insb
add
out
add
fildl
mov
add
add
add
push
add
add
movl
pop
add
cmpsl
jl
loopne
add
add
add
add
les
jnp
xchg
addb
out
add
mov
sub
pop
xor
push
lea
push
push
lea
push
push
push
call
fiadds
add
add
add
push
xchg
add
lea
push
xchg
add
add
add
jle
mov
cmc
mov
jmp
add
add
sub
pop
add
push
push
dec
ror
sub
push
or
inc
add
lea
add
inc
sub
dec
pop
sub
sub
pop
push
lea
push
lea
push
push
push
push
lea
push
push
call
add
add
call
jl
add
stc
loope
div
add
add
add
cmpsb
bound
add
movb
fsubrp
std
add
push
add
mov
mov
pop
pushl
push
push
lea
push
lea
push
push
call
arpl
add
add
xchg
mov
jecxz
add
ret
jae
xchg
pop
lock
add
cmpsl
cld
imul
mov
loope
in
ljmp
mov
rcll
add
add
testb
push
test
int
add
nop
sub
pop
call
push
push
push
lea
push
push
push
push
call
arpl
int
mov
mov
sti
in
mov
add
add
jle
add
add
movsl
lret
movsl
add
sahf
outsl
sahf
je
xchg
add
into
repnz
jp
mov
faddl
bound
js
subl
int
xchg
je
movl
add
mov
rolb
lock
push
push
lea
push
push
push
lea
push
lea
push
lea
push
call
add
lods
lahf
mov
aam
mov
add
push
scas
push
add
add
pop
mov
sub
pop
lea
push
push
push
push
push
push
push
push
push
call
pushf
mov
shlb
xchg
lea
add
cwtl
mov
add
add
add
icebp
mov
add
mov
cwtl
jbe
subl
mov
mov
mov
mov
lcall
cmpsl
add
loopne
pushl
push
push
push
push
call
out
fwait
mov
add
jecxz
movsb
scas
pop
sahf
push
mov
add
loop
scas
add
jae
xlat
add
insb
xchg
add
add
add
in
lock
lcall
jne
call
push
push
push
lea
push
push
push
push
push
call
mov
out
add
add
sti
add
add
test
popa
pop
add
movsb
mov
add
add
in
add
mov
add
mov
js
lret
out
repnz
sub
pop
pushl
push
push
push
call
add
mov
jns
add
add
ljmp
flds
and
add
mov
enter
add
cmc
ljmp
lret
pop
add
add
cwtl
add
fdivr
add
mov
mov
add
jp
add
mov
jns
add
sub
pop
pushl
push
lea
push
push
lea
push
push
lea
push
call
pop
add
mov
push
pop
mov
add
add
add
mov
fsubl
loopne
lods
mov
fwait
popf
add
add
add
in
testl
fildl
enter
int3
sub
pop
call
push
push
ror
shr
sub
shr
push
xor
add
dec
sub
not
rol
add
pop
ror
pop
push
lea
push
push
call
jbe
hlt
add
add
aad
sahf
add
mov
call
mov
fwait
mov
add
cmc
jmp
add
subb
int3
mov
mov
roll
xchg
in
hlt
lcall
jne
push
push
push
push
lea
push
push
push
push
call
sti
mov
add
stos
mov
add
ja
test
lds
add
add
add
add
add
mov
add
add
add
add
jp
lahf
stc
add
in
add
add
in
in
loopne
lcall
out
add
push
lea
push
push
push
lea
push
push
push
push
call
lock
cwtl
add
add
add
xchg
js
add
insb
out
add
js
addr16
pop
lock
sti
add
push
iret
incb
add
add
fiadds
lcall
inc
push
push
shl
xor
push
or
inc
add
xor
sub
inc
sub
rol
ror
lea
lea
pop
add
add
ror
pop
push
push
push
lea
push
push
push
call
add
loopne
add
add
je
add
mov
incb
pop
jns
lcall
mov
mov
add
add
xchg
clc
jl
add
int
push
add
mulb
add
pop
shr
cli
add
mov
lahf
add
leave
sub
pop
push
push
lea
push
lea
push
lea
push
lea
push
call
mov
pushf
add
pushf
add
add
ret
jmp
add
pop
popl
add
cmc
add
pop
mov
add
clc
add
roll
add
lret
mov
add
out
in
in
lcall
add
in
lea
push
lea
push
push
lea
push
push
push
push
call
icebp
add
mov
scas
mov
test
add
faddl
xchg
mulb
testl
pop
rcrb
xchg
mov
stos
add
pop
imul
push
add
add
bound
bound
add
add
add
add
add
add
jb
add
add
push
sahf
sub
pop
call
mov
push
push
call
add
lods
add
add
add
loope
add
mov
lock
add
add
fwait
js
rcll
mov
add
lret
test
add
loope
mov
pop
std
add
add
iret
rcl
add
sub
pop
push
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
enter
mov
jns
jle
add
cmpsl
add
add
in
push
and
out
lcall
add
push
aam
pop
je
into
xchg
pop
mov
call
rolb
cli
je
xchg
test
testb
add
repnz
add
jb
popa
flds
mov
ja
pop
add
lcall
push
lea
push
push
push
push
call
add
xchg
lret
add
popf
add
add
jne
add
stos
lret
cwtl
add
lahf
add
push
push
lods
test
icebp
jecxz
mov
add
jp
filds
shl
jo
add
add
rolb
cmc
cli
add
add
lods
pusha
pop
sub
pop
mov
add
push
push
push
push
push
push
call
lea
mov
int3
add
repnz
add
add
out
ficoms
cltd
insb
cltd
add
add
jecxz
add
fisttps
add
popf
mov
add
fistps
fcompl
test
fnstcw
add
ret
add
add
push
push
lea
push
lea
push
push
push
push
lea
push
push
lea
push
call
push
add
ja
push
fs
xchg
test
sahf
lds
shl
add
add
add
add
add
add
loope
add
lcall
ret
dec
inc
add
push
push
lea
push
push
push
push
push
push
call
jl
jecxz
add
add
addl
test
add
mov
outsl
xlat
add
add
add
push
add
add
mov
hlt
testl
pop
jle
mov
pusha
add
pusha
add
test
add
test
test
jp
mov
add
lcall
xor
adc
jmp
cs
push
call
cmpsl
sti
mov
movsl
add
je
jp
outsl
pop
mov
scas
ret
add
pusha
loopne
mov
add
fdivrs
hlt
xchg
pop
add
add
add
add
add
aam
js
push
pushf
add
mov
mov
lcall
jne
push
push
push
call
adc
test
cli
mov
jne
add
add
out
jp
fstpl
flds
mov
add
loopne
in
hlt
pop
push
mov
xor
push
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
call
add
mov
push
call
hlt
add
xchg
add
xchg
scas
add
add
mov
jnp
movsl
fnstenv
add
mov
in
loopne
add
push
lea
push
call
push
in
js
add
pushf
enter
jno
add
mov
jecxz
pop
filds
mov
add
add
pop
les
add
jno
lods
add
gs
sub
pop
pop
mov
push
push
push
push
push
push
lea
push
call
add
jne
test
mov
mov
pop
add
mov
add
idivb
add
addr16
add
in
test
pushf
add
add
mov
lahf
xchg
add
ja
pushf
add
cld
jp
add
push
mov
in
call
xor
push
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
test
clc
mov
add
jno
popl
jnp
add
add
mov
fbstp
cmc
loop
lods
add
cltd
nop
add
push
sti
add
add
lret
pop
sub
pop
add
push
lea
push
push
push
call
xchg
add
push
fwait
imul
lea
add
scas
add
add
in
in
movsb
jle
push
add
xlat
add
mov
in
lock
lcall
push
push
lea
push
push
push
push
call
cmc
mov
add
mov
jns
add
push
add
iret
push
data16
add
addb
filds
xlat
incb
xchg
fucomi
test
stc
add
cmpsl
add
frstor
imul
call
mov
xor
push
push
push
push
push
push
lea
push
push
push
call
aad
aam
imul
add
xorl
ja
mov
add
add
mov
fwait
xchg
gs
cmc
add
into
cmpsw
add
add
add
jp
add
fxch
ret
fcompl
enter
adc
movsb
add
push
push
lea
push
push
push
push
call
addb
stos
jno
hlt
cmpsl
arpl
add
mov
test
add
mov
add
add
lds
add
push
scas
in
add
ret
jnp
leave
add
mov
pop
rep
push
push
push
push
call
imul
add
scas
add
test
add
add
add
cld
add
add
in
add
sarl
mov
add
test
add
push
add
repnz
in
lock
pop
push
push
lea
push
call
sti
in
add
add
add
mov
mov
mov
add
add
jecxz
lods
add
pop
add
add
cmc
outsl
lret
mov
andl
scas
jo
jae
data16
insb
mov
aam
mov
roll
mov
add
pop
add
sub
pop
mov
push
lea
push
push
call
xchg
add
push
into
lret
add
pushf
push
mov
add
add
loope
add
add
fidivs
add
xchg
add
add
add
add
fs
cli
xchg
xchg
lret
jno
add
add
jae
in
hlt
lcall
pop
in
push
push
push
call
mov
pop
push
add
loope
add
push
mov
add
pop
xchg
fcompl
insb
add
pop
in
jmp
add
sub
pop
add
push
push
push
lea
push
push
push
call
mov
add
mov
add
add
xchg
jnp
push
jle
add
add
push
push
add
jle
xchg
add
pop
lods
cli
jne
add
push
mov
add
mov
add
mov
pop
sub
pop
add
mov
xor
push
lea
push
push
push
push
push
lea
push
push
push
call
test
add
ljmp
cld
add
insb
xchg
jl
add
movl
nop
pusha
in
cmpsb
pushf
faddl
add
iret
xchg
push
xchg
pop
mov
fimuls
push
nop
leave
test
add
add
push
mov
add
ljmp
fcoml
mov
in
fcompl
push
and
repnz
adc
lds
dec
pop
mov
lcall
aaa
mov
pop
add
add
push
add
jle
add
lock
sahf
add
mov
mov
add
add
lret
ja
lock
add
add
cli
fs
add
and
add
nop
add
call
nop
add
jmp
add
test
pop
mov
push
push
lea
push
lea
push
push
push
lea
push
lea
push
lea
push
call
add
add
nop
js
fiadds
stos
add
add
lods
pop
add
loopne
add
add
pop
test
pop
add
add
stos
in
add
add
add
mov
in
loopne
xor
push
push
lea
push
push
call
add
lahf
mov
into
add
pop
add
add
faddl
push
jl
add
notb
pushf
mov
lret
add
add
jae
add
add
leavew
out
mov
add
add
mov
pop
add
push
push
push
call
jae
add
add
out
mov
add
push
add
xchg
add
sahf
pop
in
out
mov
sahf
mov
insb
int
add
pop
mov
filds
jmp
js
push
jnp
add
lret
add
add
lods
add
mov
test
add
out
push
lcall
shl
test
pop
loop
sub
pop
add
push
push
lea
push
push
push
push
call
stc
in
repnz
add
xchg
jbe
fcoms
add
lret
push
test
sarw
roll
mov
pusha
mov
jo
stos
popl
ja
add
lcall
rcll
jno
sub
add
mov
repnz
add
xchg
mov
nop
imul
add
add
into
push
int
mov
hlt
pop
mov
push
push
sub
shl
lea
push
or
inc
add
lea
ror
sub
shl
rol
pop
add
sub
pop
push
push
push
lea
push
push
push
push
call
add
push
fildl
add
add
mov
add
add
out
add
mov
add
add
mov
out
add
add
add
nop
add
add
test
push
shll
sar
pop
mov
mov
pusha
add
loop
mov
in
pushl
push
shr
lea
pop
call
push
push
push
lea
push
push
lea
push
push
push
push
call
add
lahf
call
add
in
pusha
mov
data16
xchg
scas
jp
shl
add
jecxz
out
mov
loope
lret
add
hlt
pop
mov
add
roll
jp
push
sub
pop
push
push
push
sub
lea
sub
push
sub
add
rol
sub
add
add
pop
not
pop
push
push
lea
push
push
push
push
push
lea
push
push
push
call
lods
bound
fs
add
add
int
popf
add
ret
add
add
xchg
movb
xchg
xchg
add
iret
add
lcall
push
push
push
lea
push
push
push
push
lea
push
push
call
add
xchg
add
movsb
mov
std
scas
mov
stc
add
test
add
or
hlt
jae
add
mov
add
sub
pop
push
call
push
dec
pop
mov
push
lea
not
ror
lea
pop
push
push
push
lea
push
push
push
push
lea
push
push
push
call
int
jge
aam
add
add
add
movsb
add
test
add
into
add
pop
fcom
add
pop
movsb
add
add
hlt
pop
mov
fildll
mov
add
sahf
popa
add
jno
mov
lcall
mov
push
lea
push
lea
push
push
lea
push
push
call
stos
push
add
pop
add
add
pop
aad
rolb
mov
xchg
out
add
mov
push
push
stos
add
add
movsl
push
mov
pop
jp
add
aam
add
push
xlat
push
push
add
mov
xchg
add
add
movsb
pop
fwait
add
addb
in
push
lea
ror
pop
add
add
push
push
push
push
push
call
test
add
rcr
test
fisubl
add
jge
add
push
add
test
pop
mov
push
push
push
push
push
call
add
mov
add
add
roll
pop
addr16
add
clc
add
add
pusha
add
jbe
loop
xchg
insb
jo
mov
popl
pop
xchg
add
lock
mov
lea
sub
pop
xor
push
lea
push
push
push
push
push
lea
push
call
rolb
out
add
lcall
add
in
lods
add
je
mov
add
add
into
add
hlt
nop
je
loope
addb
data16
out
add
add
jge
mov
test
fistpl
add
sub
pop
add
push
push
lea
push
push
push
call
add
cmpsb
add
jb
mov
add
std
imul
in
add
ficoms
add
imul
aam
jge
add
add
add
filds
mov
iret
xchg
outsl
xchg
add
cmc
stos
pop
scas
pop
add
popl
jne
push
push
lea
push
call
push
add
icebp
in
add
pop
lcall
add
push
add
add
add
add
pop
mov
add
test
mov
insb
loop
add
lahf
mov
out
lret
into
add
lahf
add
jno
je
stc
add
add
lcall
inc
adc
lock
adc
jg
push
push
call
add
test
out
add
add
mov
pusha
mov
push
fldl
outsl
mov
pusha
addl
cbtw
add
push
mov
add
shr
ret
add
add
add
add
fiaddl
add
add
add
mov
add
lcall
js
jno
add
lock
push
push
lea
push
call
iret
mov
movl
jecxz
testb
xlat
pop
add
lret
addr16
out
shl
std
bnd
testl
aam
sub
pop
pop
mov
push
push
push
push
push
push
push
push
push
push
push
call
in
add
add
add
pop
fdivrs
mov
fs
mov
fadds
cmpsl
hlt
mov
add
test
popa
pop
add
add
test
add
in
test
xchg
addl
fidivs
push
xchg
add
add
mov
add
sub
pop
xor
push
push
call
loopne
jecxz
mov
add
add
shlb
mov
into
add
popa
scas
add
mov
fwait
xchg
int3
add
repnz
add
add
add
pop
add
push
add
sub
add
pop
rep
push
push
push
push
push
call
jne
add
in
push
fisubs
add
test
cmpsl
add
fwait
call
add
les
add
lcall
add
stc
add
mov
xchg
in
add
add
push
imul
lcall
dec
and
icebp
xor
adc
call
add
add
in
push
add
out
into
subb
add
stos
mov
int
add
add
add
cmc
fucomi
test
mov
add
add
mov
addb
xchg
lcall
leave
je
push
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
gs
add
add
loopne
add
jl
cwtl
push
int
hlt
mov
add
add
nop
add
add
add
cltd
add
add
add
data16
mov
push
push
push
call
add
push
xchg
rcrl
incb
test
mov
in
add
add
cli
add
fbld
xchg
gs
add
lcall
xor
push
push
push
lea
push
call
mov
scas
xchg
add
jl
add
js
ja
fcompl
lcall
pop
imul
mov
add
push
add
sub
pop
add
push
push
lea
push
push
push
call
insb
push
sahf
xchg
mov
add
mov
filds
push
xchg
bound
add
iret
jge
add
cmpl
jo
add
add
pop
add
test
test
mov
cltd
pop
jb
je
add
fs
mov
mov
stos
lahf
xchg
cmpsl
mov
in
lcall
push
sbb
adc
xor
lea
push
push
push
push
push
push
push
call
add
out
hlt
fildl
push
sarl
xchg
add
add
cmpsl
sahf
jge
add
add
add
nop
jo
ljmp
mov
add
add
test
jle
add
enter
data16
add
mov
add
add
push
dec
add
pop
push
push
lea
rol
pop
mov
push
push
push
push
push
call
jae
imul
testl
add
fldenv
add
js
cltd
fiaddl
push
cltd
add
xchg
add
add
lods
jo
pop
movsl
movsl
flds
lea
add
add
add
cld
add
add
mov
jo
mov
rolb
ret
add
add
add
out
mov
addb
hlt
add
sub
pop
xor
push
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
push
cmpsb
add
xchg
fs
call
add
add
in
imul
mov
push
mov
ret
cld
add
cltd
xlat
add
in
fcomps
les
add
push
push
push
lea
push
push
push
push
lea
push
push
push
call
out
lods
jle
add
pop
scas
pusha
mov
add
mov
jle
stos
add
stos
add
stos
jmp
add
pop
mov
mov
jbe
fwait
rcl
add
add
mov
jl
mov
fcomps
lock
sub
pop
pop
rep
push
dec
pop
mov
xor
push
shr
pop
or
je
push
add
not
inc
pop
mov
add
push
push
push
push
push
push
push
push
push
call
data16
lret
les
hlt
add
in
jnp
mov
addr16
add
mov
add
push
ja
mov
mov
enter
add
add
push
addb
repnz
pop
jnp
xchg
add
cmpsl
add
push
jl
test
jbe
jno
add
push
bound
add
lcall
movb
add
push
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
or
hlt
add
add
cmpsb
add
mov
add
add
scas
je
add
add
add
push
shrb
add
out
mov
add
in
fcomps
movsb
pop
push
push
dec
add
push
and
add
shl
add
sub
pop
rol
pop
push
push
push
push
call
add
in
jne
gs
add
popf
lods
add
add
in
mov
mov
cli
jo
jge
mov
int3
stos
xchg
sub
pop
pop
mov
push
lea
push
push
call
mov
add
mov
add
add
mov
jl
add
add
popa
ficomps
add
mov
subb
out
xchg
roll
lret
add
add
lods
pop
mov
fldcw
add
add
sub
pop
mov
push
push
push
push
push
push
call
lret
pushf
lock
add
push
insb
clc
lret
adcb
adc
nop
mov
mov
xchg
add
fldl
add
arpl
mov
add
add
add
sub
pop
mov
push
sub
ror
pop
jmp
push
push
push
push
push
push
push
call
xchg
add
pop
testl
or
push
jl
add
shr
add
in
ret
add
int3
loopne
out
add
jae
rolb
out
add
cwtl
pop
rol
jbe
jl
imul
lret
std
scas
pop
mov
stc
xchg
add
rcrb
in
lcall
push
push
lea
push
push
push
lea
push
call
add
add
scas
add
jb
jne
jb
sti
lods
add
in
add
add
leave
pop
add
add
add
add
lret
add
pop
in
add
push
mov
mov
movsl
scas
add
mov
pushf
push
add
xorb
stc
add
sub
pop
mov
push
push
call
xchg
add
pop
add
loop
add
add
movsl
imul
movb
push
sahf
add
add
add
lret
add
mov
popa
sub
pop
add
push
sub
lea
pop
push
push
sub
add
pop
push
push
sub
lea
rol
pop
push
push
push
xor
pop
mov
pop
push
sub
pop
pop
pop
push
lea
push
push
call
add
rcr
add
add
jbe
add
enter
add
jae
jp
mov
add
xchg
add
jmp
shl
hlt
add
add
add
imul
addb
out
in
in
movsb
fsubr
sub
pop
pop
push
push
call
add
out
test
jb
add
incb
xchg
push
insb
push
stos
add
add
add
fistpl
cmpsb
out
add
add
out
or
jmp
icebp
sahf
push
std
push
stos
movsl
fsubs
loopne
add
rolb
mov
add
roll
add
in
lcall
lcall
push
lea
push
push
lea
push
call
add
jle
movb
notl
add
lods
mov
add
out
add
pop
pusha
loopne
add
stos
mov
add
add
mov
add
or
push
push
push
push
push
push
lea
push
call
add
xchg
add
xchg
push
add
add
add
out
mov
js
add
add
movb
push
add
mov
fucomi
stos
push
cli
mov
jnp
add
push
out
add
add
add
mov
test
cmpsb
add
add
add
push
call
clc
push
push
push
push
push
push
push
push
call
jmp
shrb
lcall
jp
add
out
testl
mov
fwait
add
hlt
int
cwtl
out
add
add
clc
add
enter
push
out
scas
jns
mov
js
jecxz
add
add
add
popf
je
scas
push
imul
add
add
lcall
push
push
push
lea
push
push
push
call
stos
out
pop
sahf
movsb
fucomip
arpl
hlt
add
add
popl
mov
jnp
add
aad
ret
add
enter
jae
add
xchg
mov
add
add
cltd
jge
pusha
loop
push
mov
xlat
jns
xchg
add
add
jb
sub
pop
push
push
sub
pop
push
push
push
push
push
lea
push
push
call
cld
add
add
add
out
add
test
push
out
cwtl
mov
xchg
add
lcall
inc
cld
add
add
push
lea
push
call
testl
incb
jb
clc
iret
mov
add
xchg
add
add
in
add
sahf
add
sub
pop
addl
push
shl
pop
test
je
push
push
push
push
call
jmp
add
add
add
movsb
add
stc
cwtl
insb
popl
into
mov
filds
cmc
add
mov
add
add
rcr
movsl
arpl
mov
subb
push
mov
push
xchg
filds
fisttpl
pop
add
add
lcall
inc
or
push
lea
push
push
push
push
call
add
jecxz
pop
clc
add
add
lahf
add
pop
add
mov
mov
add
imul
add
popf
stos
jo
mov
jp
fs
fnstenv
mov
add
xchg
enter
xorl
xchg
add
ror
sub
pop
pop
push
lea
push
push
call
push
mov
rcrb
lods
cld
js
mov
lahf
pop
imul
je
leave
mov
xchg
imul
add
push
iret
int
mov
test
add
add
add
push
insb
loop
push
add
add
test
movsb
mov
test
scas
add
lcall
leave
push
lea
push
push
lea
push
push
push
push
call
add
les
add
les
add
fistps
mov
fistpl
arpl
je
test
sar
mov
add
mov
ret
push
push
shl
pop
mov
push
ror
lea
rol
dec
pop
add
push
shl
sub
add
inc
pop
push
push
ror
add
shl
pop
push
push
xor
shr
pop
push
push
push
push
lea
push
push
push
call
pop
xchg
push
add
clc
add
add
jle
mov
lret
int3
out
iret
add
add
add
mov
push
jecxz
mov
clc
jnp
add
jmp
jb
fwait
arpl
mov
fs
xchg
into
mov
add
lcall
push
push
push
push
lea
push
push
call
add
add
push
movsl
mov
jecxz
xchg
add
andb
out
fiaddl
add
push
add
add
add
mov
add
lahf
pop
add
popl
fistps
iret
add
leave
mov
lcall
add
outsl
add
add
jae
test
lret
imul
push
add
lcall
inc
cld
add
add
addl
push
push
call
roll
enter
lret
lcall
push
mov
out
jle
add
add
jnp
lock
sub
pop
push
call
push
not
pop
mov
pushl
push
xor
pop
push
push
push
lea
push
push
push
push
push
lea
push
push
push
push
call
lret
out
orl
xchg
xchg
add
jb
mov
jb
jl
add
sarb
add
jo
movsb
jne
popf
fsubl
stos
add
stos
loopne
add
outsl
lret
add
sub
pop
call
cmpl
jne
push
push
push
push
push
lea
push
push
push
push
push
call
out
mov
test
nop
popf
add
lods
idivb
incb
imul
fildll
add
cli
test
int
lcall
loop
add
movsb
mov
ja
sti
loop
add
mov
enter
jmp
add
add
sub
pop
pop
push
lea
push
push
lea
push
lea
push
call
xchg
add
in
fs
in
aad
add
add
jecxz
loop
fiaddl
scas
add
add
add
js
gs
add
add
cmpsb
add
push
add
add
add
mov
leave
rolb
mov
add
sub
pop
pop
push
push
lea
push
push
push
push
call
cmc
in
jmp
add
jl
scas
stos
jbe
mov
clc
xchg
mov
sahf
add
cld
add
sti
test
add
movsb
roll
add
add
pop
push
add
cmpsl
add
in
push
lret
add
add
add
add
add
sub
pop
pop
pop
push
push
push
push
push
lea
push
lea
push
push
push
call
add
fcomi
jbe
mov
lret
out
xchg
xchg
jl
insb
in
nop
add
jbe
add
gs
mov
mov
pop
add
add
imul
fildl
mov
jnp
add
fcompl
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
add
in
test
add
add
fmull
mov
mov
jl
add
lret
sti
add
add
imul
mov
jb
pop
pop
arpl
enter
sub
pop
ret
push
push
push
push
push
push
push
push
push
lea
push
call
pop
add
add
into
icebp
hlt
lcall
addl
out
rolb
into
add
lock
rolb
add
cwtl
sub
pop
mov
push
rol
pop
add
push
push
push
push
push
lea
push
push
lea
push
push
call
leave
bnd
pusha
scas
add
xchg
add
in
ljmp
add
enter
leave
rcr
stos
pusha
jmp
add
jl
mov
add
lds
add
add
add
push
shr
pop
push
push
dec
shr
pop
push
push
push
push
lea
push
push
lea
push
call
std
ja
add
add
jl
add
mov
addb
icebp
test
jb
fmul
loop
loopne
add
mov
mov
xchg
xchg
pop
test
test
in
in
pop
movl
push
push
push
push
push
push
push
lea
push
push
lea
push
call
mov
push
add
les
add
mov
add
add
movsb
std
ret
add
xchg
add
jno
push
add
in
add
in
into
jbe
call
pop
add
lcall
add
enter
jb
call
pop
push
push
push
push
push
push
push
call
add
add
stos
cmpsb
add
imul
in
add
xlat
addl
add
into
add
mov
push
cli
lahf
mov
add
xlat
lods
add
jl
mulb
in
call
call
pop
subl
push
push
push
push
call
add
leave
xchg
pop
mov
add
jecxz
add
lret
add
jne
jge
add
pusha
ja
repnz
out
xchg
test
in
lock
cmpl
jne
pop
push
xor
add
pop
pop
pop
push
add
pop
pop
push
lea
push
lea
push
push
push
call
mov
popf
fiaddl
ret
add
xchg
jecxz
mov
add
clc
jmp
sub
add
lock
add
lods
add
fmul
add
mov
lcall
push
push
push
push
lea
push
lea
push
push
lea
push
lea
push
call
add
in
add
jnp
imul
add
jnp
mov
popf
lea
add
pop
push
mov
push
add
mov
add
lcall
push
lea
push
push
push
push
push
push
push
call
ljmp
add
cmpsl
add
loopne
lods
add
mov
add
pushf
add
add
out
in
mov
hlt
add
push
out
add
scas
out
fiadds
mov
add
add
add
stos
mov
add
add
lcall
push
push
push
lea
push
push
call
add
data16
cmc
add
add
ljmp
rcll
xchg
jecxz
popl
add
pop
add
out
add
xlat
mov
xchg
add
add
sub
pop
mov
add
push
not
pop
push
push
push
push
push
push
lea
push
push
push
call
add
aad
leave
mov
add
rol
add
add
pop
add
push
add
nop
stos
andb
add
xchg
out
jbe
mov
add
imul
les
loopne
push
push
ror
pop
push
push
push
add
pop
mov
push
push
push
lea
push
push
push
push
call
add
mov
scas
add
fildll
push
jo
add
push
mov
add
xlat
leave
pushf
in
fldl
sahf
xchg
negb
add
sub
pop
lea
push
sub
pop
sub
push
push
push
push
lea
push
push
push
push
push
lea
push
call
fstps
mov
cmpsl
int
outsl
addb
lea
out
add
testb
xchg
mov
mov
adc
mov
xlat
add
in
jmp
add
jno
enter
jns
add
mov
enter
lcall
add
add
lcall
add
pop
shr
push
inc
not
inc
add
pop
add
push
push
push
push
push
push
push
push
call
jns
pop
call
add
add
shl
imulb
add
aad
lds
pop
testb
ja
add
jne
pop
iret
add
add
add
sti
in
add
sahf
xchg
mov
loop
add
add
in
loopne
mov
push
push
push
push
push
push
lea
push
push
push
call
mov
jb
lcall
pop
push
repnz
fiaddl
add
add
add
fstl
add
addr16
sarl
fcompl
andb
out
fildll
repnz
ror
pop
add
push
add
add
dec
pop
add
mov
push
shl
lea
pop
mov
push
push
push
push
push
lea
push
push
push
push
push
call
je
mov
add
in
pop
add
lods
add
pop
mov
sti
pop
mov
add
add
movsb
stc
add
add
add
lock
cmc
mov
scas
jne
stos
add
mov
add
xchg
add
add
push
add
lret
add
add
sub
pop
cmp
jne
push
lea
push
lea
push
call
add
add
jl
push
rolb
add
out
popa
lea
jnp
add
add
add
xchg
aam
mov
add
add
sbb
jge
add
jae
jbe
in
hlt
pop
cmp
jne
push
lea
push
call
xchg
fsts
add
jae
add
cltd
sarb
add
add
pop
stos
jne
add
les
add
push
add
icebp
pushf
fiaddl
add
fldz
mov
add
icebp
add
outsl
mov
add
arpl
add
mov
add
in
clc
pop
mov
push
rol
not
ror
pop
movl
jmp
push
not
pop
mov
push
push
push
push
lea
push
push
call
test
add
out
add
add
xlat
add
into
add
add
pop
add
test
add
push
pop
cmc
add
xchg
add
jno
stos
jl
imul
divb
cmpsl
add
add
add
fists
mov
push
add
sub
pop
mov
push
lea
push
call
subl
pushf
add
jmp
addl
push
faddl
mov
add
lods
fiadds
add
hlt
add
add
add
add
popl
mov
enter
lock
mov
add
add
ljmp
popl
add
mov
push
not
pop
movl
jmp
push
push
push
lea
push
push
push
call
add
movsb
orb
add
add
add
add
imul
in
stos
movsl
pusha
std
roll
mov
xchg
add
push
add
mov
add
add
pop
jmp
mov
nop
add
add
add
add
pop
mov
test
add
jmp
pop
iret
mul
fwait
mov
ljmp
sub
pop
mov
push
push
lea
push
push
call
add
add
add
testl
add
mov
in
mov
add
in
push
aam
xlat
cmpsb
add
call
cmpsb
pushf
lret
add
in
lock
mov
cmp
jne
push
not
ror
pop
mov
movl
push
add
add
pop
jmp
mov
push
ror
add
pop
cmpw
jne
push
rol
shl
pop
mov
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
fildl
lcall
add
bound
imul
add
add
lahf
popa
add
leave
rolb
int3
loop
nop
add
fadds
stos
push
stos
popf
sub
pop
movl
push
push
lea
push
call
pop
add
add
add
add
fstpl
jno
cld
iret
mov
add
mov
add
movsb
aam
mov
lcall
pop
or
add
aam
push
dec
outsl
pop
pushl
push
not
inc
pop
pop
push
push
call
add
add
add
out
add
ficompl
jno
jnp
add
add
add
add
add
pop
lcall
popa
mov
mov
add
add
outsl
add
add
clc
pop
mov
mov
push
push
call
outsl
add
add
icebp
mov
sti
mov
loop
in
sti
jae
add
stos
lret
pop
lods
add
nop
add
add
add
add
xchg
add
add
add
test
mov
add
pop
mov
push
push
add
xor
sub
push
or
not
add
not
shr
sub
add
xor
pop
rol
shl
add
rol
pop
push
inc
pop
push
call
push
not
pop
cmpl
je
push
push
xor
push
sub
add
dec
sub
rol
pop
ror
pop
push
lea
push
push
push
push
push
call
jmp
mov
pop
add
mov
jge
cli
add
jne
cmpsb
cmc
mov
cmpb
pusha
add
mov
pop
ja
add
out
cmpsb
mov
push
call
push
push
push
push
push
push
push
push
lea
push
push
call
insb
scas
int
test
add
iret
fiaddl
add
mov
add
push
lds
rcr
hlt
mov
pop
push
add
xchg
jl
jge
add
mov
add
add
add
in
addl
popa
test
add
mov
imul
in
fdivr
lcall
js
int3
fldz
ret
push
or
add
testl
add
add
xor
xor
sub
sub
pop
sub
pop
push
shr
sub
pop
push
push
sub
pop
call
push
not
not
pop
cmpl
je
push
push
inc
add
shl
push
push
pop
add
sub
sub
sub
pop
sub
sub
pop
push
rol
shl
inc
pop
push
push
ror
not
ror
pop
call
cmpl
je
push
push
sub
ror
lea
push
or
inc
add
not
rol
xor
lea
sub
rol
pop
add
shr
rol
pop
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
jb
cwtl
jns
add
jae
pop
leave
call
add
mov
loope
int
mov
pushf
add
scas
mov
rolb
mov
repnz
add
insb
loop
mov
in
fcompl
push
not
pop
call
push
lea
rol
shl
shr
pop
cmpl
je
push
push
sub
push
or
not
add
shr
ror
inc
shr
sub
rol
add
rol
pop
xor
dec
pop
push
rol
shl
pop
push
push
push
push
call
ja
xchg
add
add
loope
bnd
add
jl
add
fldt
add
add
mov
cmc
ja
add
add
push
add
add
mov
cld
lahf
pop
lds
mov
jnp
add
mov
jg
add
push
add
sub
inc
add
pop
cmpl
je
push
push
sub
shl
shr
push
xor
add
dec
inc
sub
rol
add
pop
ror
xor
dec
pop
push
lea
push
push
push
push
push
push
lea
push
push
call
jo
add
pop
add
push
loopne
add
fstps
stos
mov
add
mov
imul
add
test
lcall
push
push
lea
push
push
lea
push
push
push
push
push
push
call
iret
jl
lock
pop
push
loopne
add
add
add
sti
rclb
out
add
mov
add
add
mov
xchg
add
add
cli
pop
aad
stc
add
mov
imul
xor
add
shll
cmp
or
int3
je
push
push
add
xor
push
or
not
add
sub
shr
sub
shl
pop
add
sub
sub
shl
pop
push
sub
add
rol
pop
push
call
push
push
push
lea
push
lea
push
push
push
call
lret
mov
add
lcall
out
outsl
add
add
leave
push
in
int
stc
cld
mov
jecxz
movsl
mov
lcall
js
int3
fldz
ret
inc
add
add
jg
rclb
cld
push
and
add
xor
dec
sub
shr
pop
ror
sub
ror
inc
pop
push
lea
sub
add
pop
push
call
push
push
call
push
add
add
pop
add
add
add
mov
mov
movsl
test
jmp
xchg
insb
add
add
enter
nop
mov
add
mov
jmp
xchg
mov
popa
cmc
mov
shll
popf
add
pop
sub
pop
cmpl
je
push
push
add
not
push
or
not
add
add
shl
sub
xor
dec
pop
lea
add
not
ror
pop
push
add
pop
push
push
sub
sub
pop
call
push
inc
xor
inc
pop
cmpl
je
push
push
not
sub
push
xor
add
inc
sub
inc
inc
sub
ror
xor
pop
inc
add
xor
pop
push
push
push
push
push
lea
push
push
call
add
mov
pop
add
lret
jnp
cli
add
sti
movsb
push
add
stos
jnp
add
add
add
jecxz
add
xchg
xlat
add
add
addb
popf
xchg
lods
add
mov
mov
add
test
lcall
push
add
shl
not
add
pop
call
push
push
push
push
push
push
call
add
mov
add
pusha
pop
add
pusha
push
jb
imull
add
movsl
enter
add
faddl
in
gs
add
push
add
mov
pop
cmpl
je
push
push
add
push
sub
add
shl
sub
sub
not
pop
shr
xor
not
lea
pop
push
push
call
add
popa
add
lcall
add
add
push
lods
fcmovnbe
mov
xchg
mov
add
test
lods
jl
mov
add
loopne
jmp
jge
jo
pop
js
fwait
add
pop
add
push
fists
out
fdivrl
cltd
add
push
lea
push
push
lea
push
lea
push
call
add
pop
lods
add
sarl
cmpsb
mov
aam
add
mov
ret
add
mov
pushf
add
add
add
sti
push
out
std
add
add
loope
popf
mov
pop
pop
add
sub
pop
call
push
add
ror
dec
pop
cmpl
je
push
push
sub
push
and
add
inc
ror
dec
sub
ror
pop
not
shl
pop
push
push
lea
push
push
push
push
lea
push
push
push
push
call
loopne
pop
add
add
add
add
fs
fiadds
push
ror
mov
fwait
jle
out
roll
add
sub
pop
push
push
push
lea
push
push
push
push
call
lcall
icebp
jecxz
sahf
cltd
add
xchg
add
add
mov
pop
pop
add
ret
mov
mov
call
push
lea
push
push
push
push
push
push
push
lea
push
push
call
jecxz
lock
add
addl
jae
mov
add
add
add
popf
mull
add
pop
add
add
int
out
cli
test
arpl
sub
pop
cmpl
jne
mov
push
shr
shl
pop
movl
jmp
push
dec
pop
xor
push
sub
add
pop
pop
pop
push
push
lea
push
push
push
push
push
lea
push
push
push
call
pop
je
test
lds
add
aad
movl
add
jbe
popf
jmp
mov
mov
jnp
mov
add
scas
jae
add
add
mov
je
sub
pop
pop
pop
push
lea
push
push
push
push
lea
push
push
push
push
call
hlt
pop
mov
jnp
add
add
pop
lods
mov
leave
xchg
mov
mov
pusha
cld
add
leave
xchg
pop
out
add
push
sub
inc
pop
ret
push
push
push
push
lea
push
lea
push
call
fstp
jle
aad
add
pop
add
add
push
add
add
add
loopne
add
add
add
mov
add
add
jecxz
int3
add
push
std
pop
add
add
test
mov
je
loope
out
hlt
jbe
push
jb
mov
lahf
add
add
cwtl
add
xchg
xchg
add
in
in
lcall
in
push
push
call
xchg
stc
push
lret
xlat
stc
add
nop
fcomi
js
mov
add
pusha
sahf
iret
add
bound
roll
in
cltd
adcb
stos
in
sub
pop
add
cmpl
jne
push
push
inc
dec
inc
push
push
pop
add
sub
inc
sub
add
pop
ror
pop
push
dec
rol
sub
add
pop
pushl
call
push
push
push
push
push
lea
push
push
lea
push
call
out
xchg
mov
cli
fnstcw
roll
add
add
xchg
int
jmp
push
mov
fdivl
movsb
add
enter
stos
popf
addl
add
mov
mov
add
imul
xor
rol
ror
pop
call
push
ror
inc
ror
pop
jmp
push
push
push
push
push
push
call
add
testb
cwtl
popl
mov
jmp
add
shlb
add
add
add
add
out
add
add
imul
in
rcr
test
lcall
jge
add
test
add
add
lahf
cmc
cmpsl
scas
and
push
push
lea
push
call
add
pop
add
xorb
jmp
add
rorl
xchg
mov
add
jmp
xchg
add
add
cld
imul
add
jecxz
xchg
add
add
add
sub
pop
cmpl
jne
push
lea
push
push
push
push
push
push
push
call
xchg
add
add
add
add
movsw
add
push
add
out
add
loope
mov
out
pushf
sahf
rclb
push
addr16
add
add
aad
jnp
mov
add
add
sub
pop
leave
add
push
dec
ror
sub
inc
pop
pop
pop
push
sub
pop
pop
push
add
xor
xor
pop
pop
push
shl
lea
shr
lea
pop
leave
add
push
lea
push
call
push
add
add
mov
add
push
add
add
pop
mov
push
flds
flds
add
loopne
jae
add
add
mov
rcrb
icebp
fistps
pop
add
jge
push
xchg
addl
push
add
add
sub
pop
ret
push
push
push
push
call
xchg
stos
mov
mov
stc
loopne
jnp
jno
mov
testl
aam
add
add
bound
lock
lcall
fcompl
add
cmpl
jne
push
push
xor
push
sub
add
add
lea
sub
ror
ror
xor
pop
rol
dec
add
pop
push
inc
pop
pushl
push
sub
pop
call
push
push
shr
shl
pop
call
jmp
push
push
push
push
push
push
lea
push
push
push
call
leave
add
xchg
mov
flds
add
add
add
rcr
jmp
movsl
stos
int3
iret
push
xchg
push
loop
add
mov
mov
mov
popa
mov
cltd
add
jge
add
test
sbb
add
push
push
push
push
push
lea
push
lea
push
push
push
push
call
std
xchg
lea
xchg
add
mov
fs
icebp
pop
jecxz
stos
pushf
xchg
add
sub
pop
mov
push
shl
inc
pop
push
push
push
inc
push
xor
add
inc
rol
ror
add
sub
sub
lea
pop
dec
lea
add
shr
pop
push
shr
pop
pushl
push
shl
sub
pop
call
call
push
push
push
or
not
add
sub
sub
dec
pop
pop
push
shl
sub
lea
pop
pushl
call
push
sub
not
rol
shl
pop
call
push
push
add
ror
push
sub
add
ror
sub
sub
lea
add
sub
rol
pop
add
not
dec
not
pop
push
shl
shl
pop
pushl
call
push
push
push
push
lea
push
call
std
jns
add
test
add
call
add
add
mov
sahf
add
add
add
in
xchg
stos
add
add
add
sub
pop
call
push
push
lea
rol
push
push
pop
add
not
not
inc
sub
not
pop
shl
inc
xor
pop
push
push
push
push
push
push
push
push
call
mov
js
int
xchg
arpl
nop
loopne
push
fdivrp
add
mov
add
movsb
add
add
lcall
jne
push
lea
dec
inc
pop
call
push
push
push
lea
push
push
push
push
lea
push
call
iret
add
loope
in
add
test
add
jb
add
jle
lock
xchg
push
add
add
ja
rolb
sbb
clc
lods
add
outsl
faddl
lcall
shrb
std
fcomps
push
or
inc
add
sub
shl
sub
sub
pop
rol
dec
rol
ror
pop
push
push
push
push
push
push
call
push
add
add
test
add
nop
add
push
imul
add
add
add
lret
add
aad
mov
clc
pop
fadds
mov
js
pop
mov
xchg
push
out
data16
add
addl
imul
jno
add
fwait
add
jae
sub
pop
pushl
call
push
sub
pop
call
push
push
ror
xor
add
inc
push
xor
add
inc
sub
pop
not
not
shl
pop
push
xor
shl
dec
pop
pushl
push
dec
pop
call
call
push
push
lea
push
or
not
add
lea
sub
add
sub
pop
lea
pop
push
xor
inc
dec
pop
pushl
push
push
call
push
lods
fs
movl
jl
add
add
add
ficompl
add
int
test
add
clc
lcall
aaa
add
push
push
lea
push
push
lea
push
call
mov
int3
outsl
mov
add
mov
add
add
mov
jae
xchg
mov
add
mov
fidivs
addl
add
imul
add
add
push
add
add
add
mov
lcall
shrb
adc
push
lea
push
or
inc
add
sub
rol
sub
shl
pop
sub
pop
push
lea
inc
pop
pushl
push
lea
push
push
push
lea
push
push
call
lock
mov
imul
out
push
mov
pusha
xchg
pop
mov
mov
xchg
add
adcb
in
loopne
xchg
js
mov
out
addb
loopne
add
addr16
xchg
test
add
data16
add
add
mov
mov
lcall
sub
pop
sti
xor
push
call
mov
fwait
add
mov
add
add
pop
imul
imul
add
call
pop
shlb
add
xchg
lds
sarb
add
lcall
shrb
pop
aam
push
rol
push
or
not
add
shl
ror
add
sub
not
xor
pop
ror
pop
push
push
call
cmc
pop
add
add
add
push
imul
push
lea
in
neg
add
add
add
mov
add
add
add
mov
add
test
mov
mov
add
popf
push
push
add
add
ja
add
lds
add
mov
lcall
jne
push
push
push
push
push
push
push
push
push
call
add
pop
insb
ret
add
add
ror
add
mov
mov
add
pop
add
mov
pop
popw
call
shrb
xchg
push
add
not
push
push
pop
add
add
lea
not
lea
sub
lea
shl
shr
ror
pop
shl
pop
push
dec
shr
dec
inc
pop
pushl
push
lea
push
push
push
push
push
push
lea
push
push
push
call
mov
add
jle
add
add
int
lods
ljmp
sti
mov
mov
jge
mov
mov
adc
mov
in
fcomps
inc
and
add
call
add
add
std
add
add
repnz
fadds
add
stc
add
mov
fcmovnb
pop
outsl
jle
mov
mov
test
icebp
add
mov
add
cmc
lret
push
xchg
loopne
test
pop
lea
push
lea
push
push
call
in
add
add
fnstcw
add
mov
add
fiadds
cltd
add
add
stos
fiaddl
push
sahf
sarl
popf
mov
cltd
add
iret
out
add
test
mov
aam
xchg
xchg
add
add
add
xchg
cmc
mov
add
lds
arpl
sub
pop
push
call
push
push
add
add
dec
xor
push
or
not
add
xor
shr
sub
rol
shr
pop
dec
pop
push
push
push
push
lea
push
push
push
lea
push
push
call
enter
cld
loopne
aad
mov
add
jne
add
add
push
mov
popa
add
shr
pop
add
xlat
push
je
add
push
add
add
lahf
roll
add
int
add
les
into
shlb
mov
add
movsb
add
aam
add
mov
cltd
add
add
roll
jne
call
push
sub
sub
pop
call
push
push
sub
shl
push
push
pop
add
lea
sub
dec
ror
ror
pop
pop
push
lea
push
push
push
lea
push
call
add
rcr
ljmp
mov
fisubrl
jb
add
stc
jns
int
xlat
out
arpl
out
xlat
add
add
push
add
add
add
sub
pop
pushl
push
add
pop
call
push
lea
push
call
add
pop
add
mov
xchg
push
stc
pop
add
add
arpl
add
jo
lahf
in
loopne
in
push
cmpsb
cld
add
xchg
add
scas
std
jecxz
mov
in
clc
pop
call
push
push
sub
push
sub
add
sub
sub
add
pop
rol
dec
pop
push
shl
lea
shl
pop
pushl
push
not
pop
call
push
shr
pop
call
push
shr
dec
pop
lea
push
push
inc
add
push
or
not
add
rol
rol
sub
sub
xor
ror
sub
pop
add
xor
pop
push
lea
push
push
lea
push
push
call
add
mov
add
lock
imul
je
xchg
mov
add
add
add
faddl
fstps
sahf
iret
insb
sbbl
lcall
jne
push
sub
rol
lea
pop
call
push
push
push
push
lea
push
push
push
push
push
call
mov
push
add
cwtl
arpl
out
add
in
add
loopne
add
test
popf
add
out
cwtl
fwait
fs
mov
jp
scas
aam
shl
pop
jle
add
add
in
add
add
rolb
fidivrl
sub
pop
push
call
push
push
sub
shr
push
push
pop
add
shr
shl
ror
inc
sub
dec
sub
sub
pop
sub
pop
push
lea
push
call
mov
jno
gs
pop
mov
jbe
lret
andl
mov
add
xchg
movsb
test
add
out
add
add
add
jae
add
xlat
add
mov
mov
jne
xchg
fidivl
add
add
sub
pop
pushl
call
push
pop
call
push
add
pop
mov
push
push
inc
lea
push
and
add
ror
dec
sub
dec
ror
sub
pop
xor
pop
push
lea
push
call
add
add
fcomip
mov
mov
roll
xorb
in
fistpl
int
add
sub
scas
add
rol
add
add
into
add
add
push
pop
push
mov
stos
sub
pop
pushl
push
push
push
push
push
push
lea
push
push
lea
push
call
add
add
movsb
hlt
addb
add
pop
add
lds
add
push
fists
roll
add
xchg
cwtl
test
call
add
jnp
test
lea
mov
xchg
add
scas
mov
xchg
popf
add
lcall
mov
add
push
shl
pop
push
push
push
lea
push
push
push
push
push
push
call
pop
add
rcr
lahf
add
add
test
add
adcl
pop
mov
add
add
mov
scas
jp
insb
mov
lret
add
sub
pop
pushl
push
lea
push
lea
push
push
lea
push
push
push
push
push
push
call
hlt
add
aam
push
add
add
add
fsubr
idivb
add
add
add
add
jbe
cli
add
pusha
mov
popl
subb
imull
movsb
popf
jp
mov
popf
jnp
sub
pop
call
push
push
lea
sub
add
push
or
not
add
shl
ror
sub
sub
add
pop
shl
sub
sub
pop
push
not
shl
ror
shr
pop
pushl
call
push
push
inc
push
or
inc
add
add
not
sub
add
add
not
pop
pop
push
push
rol
xor
sub
push
push
pop
add
add
add
sub
not
xor
pop
xor
not
pop
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
movsb
add
lds
aam
add
arpl
aam
cltd
shlb
incb
add
xlat
add
add
add
rcr
jecxz
add
xchg
add
fidivs
clc
pop
add
jb
sub
pop
call
push
push
sub
sub
ror
push
push
pop
add
xor
sub
shl
rol
pop
shr
add
pop
push
shl
ror
shr
pop
pushl
call
push
dec
ror
add
add
pop
mov
lea
push
inc
pop
lea
push
push
call
aam
imul
mov
mov
shlb
loopne
mov
fwait
addl
pop
mov
ja
push
add
add
add
cmpsl
xchg
xchg
rolb
xchg
shlb
sti
xchg
sub
pop
push
push
add
not
ror
add
pop
push
push
push
call
add
enter
jno
push
cmpsb
add
pop
add
mov
out
jnp
mov
push
push
cld
out
mov
add
add
leave
std
mov
add
add
push
jp
cwtl
roll
subl
add
push
sub
rol
pop
push
push
not
not
pop
push
push
push
not
dec
ror
pop
push
pushl
push
lea
push
call
std
add
mov
add
add
add
stos
loop
add
cwtl
xchg
rolb
test
add
add
jecxz
add
idivb
add
add
jb
mov
into
add
add
add
jge
push
out
ret
shlb
imulb
cli
movl
mov
pop
push
call
push
push
rol
sub
push
or
not
add
shr
sub
sub
xor
dec
add
pop
shr
pop
push
push
push
push
push
push
call
cli
mov
mov
add
add
addb
pop
out
add
loop
mov
mov
add
mov
popa
in
sar
mov
xchg
fldcw
mov
jns
add
lcall
jne
push
push
lea
push
call
iret
lods
add
stos
add
add
popf
add
stos
add
add
fiaddl
add
lahf
out
popa
mov
add
mov
cwtl
mov
jmp
add
xchg
add
add
push
js
add
lcall
inc
sbb
add
rclb
addr16
push
push
push
lea
push
call
ret
out
add
loope
add
push
loope
arpl
add
add
add
pop
cmpsl
divl
add
into
add
mov
adcl
mov
add
lcall
inc
clc
pop
push
inc
pop
dec
jne
push
lea
push
push
lea
push
push
push
call
vpsrlw
add
pop
in
add
arpl
out
xchg
push
add
jle
mov
xchg
stos
add
add
add
add
js
xchg
push
add
arpl
gs
jle
add
mov
add
pop
lret
add
repnz
cwtl
add
popf
add
in
call
add
call
push
push
shr
add
rol
push
or
inc
add
dec
inc
dec
sub
inc
not
pop
rol
pop
push
lea
push
push
call
arpl
mov
jne
stos
add
mul
shl
add
clc
idivl
gs
pop
xchg
pop
ja
pushf
sub
pop
pushl
push
push
push
push
lea
push
call
mov
rcll
fwait
add
add
add
roll
mov
add
pop
jno
mov
mov
add
out
cli
cwtl
add
add
add
js
mov
mov
push
mov
add
add
ja
add
sti
mov
fcoml
filds
rcl
neg
testb
pop
add
push
push
ror
shl
pop
call
mov
push
lea
push
push
call
pop
mov
add
xchg
add
roll
lods
ja
add
ja
gs
add
ret
add
add
cmpl
fs
add
int3
lret
add
imul
add
cli
fwait
pop
popf
into
sub
pop
lea
push
push
inc
sub
dec
push
xor
add
sub
lea
inc
sub
inc
sub
pop
lea
sub
dec
pop
push
lea
push
push
push
call
jmp
push
popf
add
add
jb
add
add
in
fs
mov
cmpsl
push
mov
add
callw
add
mov
scas
add
enter
shrb
add
add
add
enter
gs
lock
jne
push
shr
pop
call
push
push
lea
sub
add
shl
pop
call
push
push
rol
dec
sub
push
and
add
ror
sub
shr
pop
ror
shr
pop
push
dec
pop
pushl
push
sub
add
pop
call
push
push
push
lea
push
push
push
push
push
call
jae
add
xchg
in
add
cli
add
add
add
lock
ficompl
jnp
add
aad
lret
add
int3
mov
add
in
mov
push
call
test
out
lods
icebp
sti
mov
push
mov
sub
pop
call
push
add
sub
ror
pop
mov
lea
push
push
lea
shr
rol
push
sub
add
add
sub
sub
sub
shl
sub
pop
not
pop
push
push
push
call
pop
stos
test
lret
mov
add
cmpsl
xchg
cli
add
add
mov
stos
add
fcomip
jl
mov
add
add
sub
pop
pushl
push
inc
pop
call
lea
push
push
push
push
push
lea
push
call
mov
aad
out
mov
jmp
out
mov
add
movsl
test
add
xor
popa
push
add
add
add
mov
push
lea
xor
add
pop
push
push
lea
sub
inc
pop
push
pushl
push
push
dec
sub
dec
push
sub
add
xor
sub
lea
pop
sub
xor
not
pop
push
shr
pop
push
push
shr
sub
pop
call
push
push
sub
push
or
not
add
ror
add
sub
add
sub
shr
pop
add
sub
pop
push
not
shl
pop
pushl
push
ror
ror
sub
sub
pop
call
push
push
lea
push
push
push
call
add
mov
fiaddl
xchg
add
imul
cmpsw
fsubrs
mov
add
fbld
test
add
mov
add
mov
iret
popf
ret
add
add
add
add
add
add
add
sub
pop
push
push
push
call
add
mov
jo
add
add
aad
stos
add
loope
cwtl
les
jo
add
neg
clc
jecxz
adcb
test
add
add
add
push
xchg
lcall
add
into
mov
add
pop
test
add
xchg
add
lcall
shrb
pop
lea
ret
fisttpl
dec
push
or
inc
add
dec
sub
rol
rol
pop
add
pop
push
lea
push
push
push
call
cld
jno
add
cltd
in
into
pop
add
add
push
add
add
add
add
add
pop
loop
jl
sar
add
add
cli
add
add
pop
xchg
add
mov
lcall
jne
call
push
shl
add
pop
call
jmp
push
inc
shl
pop
pushl
push
sub
rol
pop
mov
push
shl
sub
rol
rol
pop
jmp
push
push
sub
sub
push
and
add
sub
shr
not
ror
sub
sub
pop
add
add
pop
push
sub
inc
pop
pushl
push
ror
sub
xor
pop
call
push
push
call
xlat
mov
fisubl
add
testb
rolb
jle
push
gs
jle
xchg
lcall
jmp
mov
ljmp
clc
lcall
add
shrb
dec
rcl
push
xor
ror
inc
push
and
add
sub
lea
dec
not
pop
sub
lea
pop
push
pop
pushl
push
not
rol
pop
call
push
push
push
push
push
lea
push
push
call
sti
je
push
int
shr
add
nop
nop
add
xchg
out
cmpsb
pop
add
jle
add
add
jecxz
adcb
add
popa
add
int
lret
mov
bnd
add
add
call
call
push
add
shr
pop
leave
push
lea
push
push
push
call
loopne
add
add
add
add
add
stos
pop
push
enter
mov
jnp
add
lcall
lock
mov
mov
add
iret
add
lea
pop
add
add
add
roll
push
xorl
sub
pop
add
pop
push
push
push
push
push
lea
push
push
push
push
push
call
add
pop
aam
xchg
rcrb
movsb
outsl
out
add
add
add
add
pushf
add
add
outsl
fs
jp
fcomip
icebp
push
aam
add
xchg
lcall
push
inc
xor
lea
shr
pop
pop
push
xor
sub
pop
pop
push
ror
pop
leave
add
push
push
push
push
push
push
push
push
push
call
jnp
fimull
roll
add
add
lods
filds
pusha
gs
test
imul
in
add
add
mul
add
add
enter
andb
push
pop
add
cmc
jb
add
push
add
fwait
rolb
sub
pop
ret
leave
push
push
push
push
push
push
lea
push
lea
push
call
mov
push
mov
add
mov
add
ror
jno
incb
add
lock
loopne
loop
add
add
mov
add
mov
fadds
push
call
add
fchs
int3
mov
std
popf
add
or
push
push
push
push
lea
push
push
push
call
cmpsb
cli
add
aam
add
jbe
xchg
add
push
ffree
add
add
add
out
lret
roll
add
add
call
xchg
mov
add
lcall
in
cmpl
jne
push
push
push
push
lea
push
push
push
push
push
call
push
mov
push
pop
add
add
jle
mov
add
mov
sub
pop
mov
jmp
push
push
push
push
call
xchg
popa
div
mov
addl
add
push
add
pop
xchg
add
popa
xchg
in
add
stos
xchg
add
roll
add
push
add
jge
add
loope
std
add
outsl
add
jle
fs
add
add
add
lds
testl
imul
sub
pop
mov
push
not
pop
and
xor
push
push
push
lea
push
push
push
lea
push
push
push
call
loop
add
add
add
cmc
add
add
leave
jo
push
gs
jne
movsb
add
jno
add
add
add
repnz
jge
stc
add
pop
fiadds
movsl
enter
add
push
push
int3
add
mov
icebp
leave
jbe
rolb
lcall
push
push
dec
xor
pop
xor
push
ror
pop
dec
push
sub
add
add
add
pop
sub
jmp
push
lea
push
lea
push
push
lea
push
push
call
add
xlat
add
add
xchg
lods
call
cmpsl
mov
add
lret
andl
add
sahf
lock
add
rolb
add
scas
enter
out
in
call
add
push
not
sub
pop
pushl
pop
push
inc
pop
sub
push
lea
push
lea
push
lea
push
lea
push
push
push
lea
push
call
std
add
mov
add
add
pop
mov
add
scas
add
add
out
mov
add
pop
add
mov
call
out
add
gs
push
fldl
hlt
add
lods
mov
jl
add
sahf
stos
add
mov
cmp
push
call
push
push
push
call
add
arpl
add
mov
fcmovu
jb
add
stos
add
loop
clc
add
int3
add
roll
iret
add
sahf
add
add
mov
cltd
addr16
push
pop
cli
pusha
add
add
xchg
loope
add
add
mov
add
outsl
pop
add
add
xchg
imul
mov
push
push
push
push
push
lea
push
push
push
push
call
stc
testl
mov
mov
add
in
mov
int3
lock
pusha
jb
xchg
arpl
xchg
add
movsl
add
add
cli
add
fcomps
add
jbe
add
xchg
enter
and
push
lcall
add
add
add
add
in
fcompl
dec
cmp
jmp
test
push
ds
push
push
push
push
push
call
pop
jmp
js
pop
add
add
mov
push
mov
mov
roll
add
mov
add
lods
lods
jae
cmp
add
add
add
mov
add
add
add
roll
cmc
mov
cmpsl
xchg
add
add
lods
out
in
fdivr
lcall
or
rol
xchg
shr
dec
pop
shr
push
ror
sub
ror
pop
add
push
push
push
push
push
lea
push
push
push
call
add
add
xchg
std
cmpsl
add
add
add
cmc
xchg
add
mov
push
mov
add
mov
add
mull
push
add
sti
add
add
push
add
lds
lcall
mov
into
scas
add
mov
sub
pushl
push
push
push
push
lea
push
push
call
add
xchg
jmp
mov
mov
aad
repnz
xchg
add
fwait
add
jmp
mov
mov
sti
pop
add
call
mov
xchg
rcrb
aam
jne
add
add
add
lcall
push
push
push
push
push
push
lea
push
call
xchg
sti
add
sti
out
push
add
jne
add
add
add
mov
aam
add
add
shll
fmul
icebp
add
ja
add
clc
rolb
flds
add
add
movsl
cltd
add
loopne
add
iret
testl
add
jmp
call
fsubrl
add
nop
mov
lcall
add
mov
add
push
pop
lock
cmpsb
jmp
add
add
loope
incl
add
movsb
sbb
add
add
add
lahf
add
add
pop
add
add
add
push
test
jecxz
mov
sti
add
js
nop
stc
add
in
int3
add
add
add
ljmp
push
flds
cltd
push
pop
nop
imul
lcall
jmp
push
ror
pop
cmp
jne
leave
push
push
push
lea
push
push
lea
push
call
and
loop
mov
pop
fiaddl
jle
js
add
imul
add
cmpsb
loopne
testl
movsb
add
add
push
push
call
js
lods
jmp
mov
mov
pop
xorl
lret
pop
test
stos
stc
fucomi
jmp
mov
add
jp
out
add
add
addl
roll
stos
popa
mov
jns
jecxz
mov
add
arpl
add
jp
add
clc
pop
push
mov
push
push
push
push
push
push
lea
push
call
fcmove
jmp
mov
scas
add
add
add
add
mov
int
stc
cli
add
gs
add
add
mov
in
in
lcall
cld
push
push
call
add
add
jne
jnp
add
mov
add
add
push
enter
add
out
ret
movb
iret
nop
sarl
mov
jecxz
add
push
push
xor
pop
push
push
push
push
push
lea
push
call
jmp
cld
arpl
shll
insb
mov
fs
mov
je
add
add
add
test
aad
add
popa
testl
mov
sub
pop
push
push
push
add
lea
shl
ror
pop
mov
push
push
call
fidivrl
mov
add
add
add
xchg
add
lea
pop
cmp
mov
add
add
add
add
add
roll
mov
std
xchg
push
add
arpl
add
add
in
int3
add
clc
pop
lea
sub
push
add
lea
pop
mov
push
push
call
add
jp
iret
cmpsl
add
mov
mov
add
add
ret
add
test
add
mov
pop
add
jnp
arpl
addb
pop
jae
add
add
rolb
je
scas
mov
pusha
add
add
clc
lcall
ljmp
push
call
push
int
mov
push
rolb
add
xchg
add
jne
add
xorl
add
stc
add
mov
mov
push
lods
in
out
bound
int
mov
add
out
add
pop
add
pop
mov
push
xlat
add
gs
add
sub
pop
mov
push
rol
sub
pop
add
push
lea
push
push
push
push
call
add
test
add
add
scas
iret
ja
in
iret
add
test
jmp
mov
add
add
add
add
xchg
add
cld
push
add
add
lods
jnp
mov
cmpsb
ret
add
ret
mov
add
std
out
popl
sub
pop
mov
add
push
add
pop
xor
push
xor
add
pop
mov
push
xor
pop
and
push
push
push
push
push
push
push
lea
push
call
fdivrs
add
pop
mov
stos
add
arpl
test
popf
je
sbb
add
into
sub
pop
rol
push
rol
lea
sub
pop
rol
push
lea
push
push
push
push
push
push
push
push
push
call
test
add
push
std
mov
add
add
add
mov
add
add
loope
movsb
repnz
test
add
add
std
stos
incb
lods
add
add
sub
pop
xor
inc
push
push
push
push
lea
push
lea
push
push
push
push
call
push
mov
lahf
je
jp
pop
add
add
add
mov
loop
jbe
pushf
add
adcl
lret
xchg
add
addb
lret
add
add
mov
sub
pop
cmpb
jne
add
push
push
push
push
push
call
lcall
sbbb
add
bound
add
lods
add
insb
cli
jno
in
add
add
arpl
add
xchg
jbe
push
idivl
push
mov
js
add
mov
pusha
sub
pop
cmp
je
add
push
lea
pop
cmpl
jne
push
push
push
lea
push
push
push
push
push
call
jp
hlt
addl
jl
fistpll
scas
lret
add
add
add
add
mov
pop
add
sti
pop
push
imul
xchg
pusha
mov
loop
jecxz
mov
add
add
pusha
add
ret
out
lahf
sub
pop
xor
push
add
add
inc
pop
pop
push
push
push
push
push
push
call
mov
mov
aad
loopne
lods
xlat
lods
lret
clc
pop
cmpsl
popa
jp
pop
add
add
ret
shrb
lret
int
add
add
mov
rcll
mov
shll
add
js
lods
jne
test
les
mov
arpl
in
cli
add
add
add
add
je
stos
out
xchg
mov
call
pop
pop
push
lea
push
push
push
push
push
push
call
add
add
scas
mov
mov
subl
cli
xchg
push
into
add
fcoml
add
push
jnp
js
ror
add
mov
add
add
sub
pop
pop
push
shr
rol
pop
pop
leave
push
push
push
lea
push
push
push
call
aad
add
imul
add
cmpsb
add
xlat
add
pop
into
add
add
xchg
jmp
add
add
xlat
add
fsubrs
jecxz
lds
les
jbe
push
mov
push
add
sub
pop
ret
push
dec
rol
add
pop
mov
push
sub
shr
pop
add
push
push
lea
push
lea
push
lea
push
call
add
add
sarl
mov
popl
mov
add
push
xchg
push
add
jae
clc
sarl
add
lock
in
jle
jnp
fildl
add
leave
fsubrs
test
lret
fmulp
add
add
mov
mov
sub
pop
push
push
sub
pop
push
push
sub
ror
pop
add
mov
push
lea
push
push
lea
push
call
imul
add
add
filds
test
mov
mov
add
xchg
add
jns
int3
pop
jmp
add
loop
add
mov
add
sub
pop
testw
push
ror
shl
rol
pop
pop
push
lea
push
push
push
lea
push
push
lea
push
call
loop
fiadds
add
add
mov
push
mov
pop
jmp
repnz
pop
add
mov
aam
mov
aad
test
pop
addl
push
stos
add
xchg
fwait
js
loopne
add
ret
pop
lods
fildll
jle
add
add
push
jle
out
push
js
mov
imul
in
lcall
push
ror
pop
mov
push
push
sub
add
rol
lea
pop
call
xor
push
shr
shl
pop
pop
push
push
push
push
push
push
call
pop
add
fidivrl
imul
popa
shll
add
add
add
imul
add
in
call
dec
add
xor
pop
pop
push
xor
pop
pop
leave
push
not
pop
ret
push
sub
pop
push
push
sub
pop
mov
push
push
push
lea
push
push
lea
push
push
push
call
imul
add
add
jmp
lods
addb
xchg
stos
add
add
mov
nop
xchg
push
add
mov
add
je
arpl
test
pushf
add
add
add
add
add
add
in
sub
pop
add
push
push
lea
push
push
push
push
push
push
push
lea
push
call
movl
test
jbe
add
add
add
add
rcrl
sahf
add
call
mov
add
add
xorb
sub
pop
push
push
shr
pop
push
push
push
push
lea
push
call
xlat
fadds
add
jbe
movb
add
add
mov
ret
nop
add
repnz
add
in
mov
add
int
add
push
pop
icebp
add
mov
lret
mov
fbld
push
lea
push
lea
push
call
add
add
add
int
jl
add
scas
jbe
jbe
add
xchg
into
addr16
add
mov
mov
add
test
les
stos
add
add
add
cld
mov
jle
add
add
mov
add
mov
add
sub
pop
push
push
push
lea
push
push
push
push
push
call
mov
test
add
add
cli
add
cld
xchg
rolb
pushf
mov
icebp
jne
add
add
mov
imul
xchg
sti
add
icebp
jp
add
ret
fld
jbe
in
in
lcall
pop
or
mov
push
push
push
push
push
push
push
push
push
call
lcall
xchg
add
add
add
add
test
imul
xchg
add
add
pop
add
add
xchg
cmpsl
jae
pop
rolb
xlat
lret
nop
hlt
add
into
push
ljmp
sub
pop
lea
push
push
push
push
push
lea
push
push
call
jmp
add
add
add
add
mov
popa
add
jne
scas
into
imul
ja
jecxz
add
add
out
add
lcall
xchg
add
sub
pop
sub
mov
push
not
rol
dec
add
pop
shr
push
lea
push
lea
push
lea
push
push
push
lea
push
push
call
cli
adcl
mov
test
notl
popl
add
mov
add
add
add
add
pop
mov
add
pusha
add
call
sub
pop
add
push
shl
shr
pop
mov
add
push
not
rol
pop
pushl
push
lea
not
pop
popl
push
not
lea
add
shl
pop
mov
push
push
push
push
push
push
lea
push
push
call
xchg
add
imul
mov
mov
xchg
lock
jnp
jmp
add
xchg
mov
mov
xchg
mov
add
int
lock
lcall
stc
push
pop
xor
push
lea
push
lea
push
push
call
stc
add
lds
mov
stos
jmp
aad
xchg
fwait
iret
xchg
lock
add
add
mov
push
rcrb
imul
add
lock
sub
pop
lea
push
push
push
push
push
push
push
push
push
call
add
add
add
rcll
add
into
add
shlb
mov
add
js
xchg
add
shlb
sti
jge
add
add
jb
mov
enter
fdivs
sbbb
add
lock
push
pushf
add
aam
pop
add
mov
jl
roll
add
lcall
adc
clc
shl
pop
add
push
xor
add
sub
pop
xor
rol
push
not
pop
nop
push
push
push
lea
push
lea
push
call
push
loopne
xchg
add
loop
pop
loope
add
mov
nop
mov
xchg
add
add
fsubrs
mov
testb
addb
in
in
pop
nop
xor
push
add
pop
nop
push
push
push
call
sti
movl
lret
pop
out
push
mov
jnp
filds
mov
add
add
mov
mov
lock
pop
add
push
sub
pop
nop
push
push
push
call
rclb
push
add
bound
adcb
lods
xchg
add
out
add
jl
add
jl
addb
mov
add
js
pusha
add
mov
jmp
add
add
add
mov
add
hlt
pop
inc
push
inc
lea
pop
nop
push
xor
add
lea
pop
nop
push
lea
push
push
push
push
push
push
call
add
lock
leave
add
add
aam
movsl
jnp
pop
add
lahf
fiadds
add
push
add
add
add
cld
mov
call
add
ljmp
jle
add
sub
pop
cmpb
jne
push
xor
pop
add
push
push
push
lea
push
push
push
call
ljmp
jno
add
push
faddl
cmpsb
xchg
mov
in
jbe
loop
shrl
add
test
bound
pop
fldl
add
cli
ret
xchg
mov
mov
pop
add
enter
sub
pop
nop
push
not
pop
nop
cmp
je
push
pop
nop
nop
push
push
push
call
add
mov
add
add
mov
cmpsb
cmc
loop
mov
les
add
add
aam
loope
jo
bound
mov
fcomi
out
arpl
fiaddl
mov
add
icebp
mov
out
add
add
fldl
add
leave
sub
pop
inc
nop
push
inc
pop
nop
push
rol
pop
cmp
jb
push
lea
shr
pop
xor
push
push
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
add
mov
pop
add
add
repnz
add
add
subb
in
add
mov
pop
fiaddl
int3
lret
push
cltd
add
mov
add
jns
mov
call
mov
movb
push
incb
addb
xchg
cltd
add
repnz
add
add
lds
repnz
pop
jmp
mov
push
push
push
push
push
push
call
rcll
mov
add
mov
add
movsl
add
add
add
fs
out
out
cmc
repnz
loop
add
loop
loopne
mov
shrl
loope
fidivrs
add
jae
arpl
fcompl
sub
pop
add
movzwl
push
push
call
js
add
sahf
jno
adcb
mov
jno
fdivr
scas
add
mov
add
adc
add
inc
sbb
shl
add
pop
add
push
dec
pop
mov
xor
push
inc
sub
not
pop
xor
push
push
lea
push
call
stos
mov
loopne
add
repnz
mov
add
add
add
incb
add
je
mov
jge
add
test
fstpt
add
add
jmp
add
fiadds
flds
sub
pop
shl
push
add
pop
xor
push
push
push
call
add
pusha
mov
push
add
mov
add
mov
mov
cld
add
xchg
add
mov
movb
repnz
add
lret
popa
mul
bound
add
mov
add
add
add
iret
cmc
cld
push
test
add
incb
lods
lahf
sub
pop
shl
push
ror
pop
xor
shl
push
push
lea
push
call
cli
push
add
add
add
add
add
jle
add
jb
add
mov
out
test
jns
add
add
pop
add
lcall
mov
incb
add
scas
add
movsb
movsl
add
test
loop
add
mov
mov
leave
stos
shll
add
rcrl
sub
pop
xor
push
lea
lea
pop
mov
add
push
lea
push
push
lea
push
push
push
lea
push
push
call
add
sbb
cltd
movsb
add
popa
test
rcl
add
add
add
add
add
fsubl
cltd
flds
add
jns
hlt
shlb
cld
push
mov
add
mov
lret
jl
jecxz
add
add
mov
add
mov
into
sub
pop
pop
push
pop
pop
push
add
pop
pop
pop
push
push
push
call
jmp
add
add
add
jmp
stos
xorb
arpl
pop
sar
add
push
int
in
hlt
lcall
push
shr
pop
ret
push
sub
not
pop
push
push
push
lea
push
lea
push
call
add
out
add
add
add
mov
add
mov
add
push
pusha
add
stos
add
add
mov
pusha
add
lcall
in
push
push
ror
pop
push
push
push
lea
push
push
push
push
push
push
push
call
add
test
add
xlat
int
repnz
add
add
mov
jl
xlat
outsl
jle
add
add
jb
rolb
add
mov
jae
add
add
loopne
push
mov
push
push
call
js
mov
add
aad
scas
add
imul
add
addr16
add
ljmp
add
lcall
adc
not
rol
pop
mov
push
add
xor
not
pop
test
je
push
pop
mov
push
push
call
jmp
mulb
push
lods
add
add
in
add
notb
mov
mov
jb
xchg
add
call
mov
cmpsb
add
mov
push
mul
mov
testb
loopne
add
push
dec
pop
mov
mov
push
pop
mov
inc
push
not
lea
ror
ror
pop
cmp
je
push
push
lea
push
call
xchg
add
add
and
in
cltd
arpl
cmpsl
add
cli
add
lret
xchg
bound
lock
jnp
rcll
popf
mov
cltd
rol
mov
mov
mov
add
bound
pop
idivb
add
jne
icebp
sub
pop
test
je
push
shr
add
rol
pop
mov
inc
push
lea
push
push
push
lea
push
push
lea
push
call
add
add
lahf
add
add
popf
roll
ljmp
mov
cwtl
mov
cmpsb
lods
add
add
mov
jo
mov
pop
mov
add
enter
xchg
push
mov
addr16
fmull
in
cmp
je
test
jne
push
push
lea
push
push
push
push
push
lea
push
call
add
lods
add
xchg
add
add
push
mov
lcall
movsl
add
mov
add
add
add
lods
add
jno
add
pop
add
push
add
push
xlat
popa
fcoml
sub
pop
xor
pop
push
push
push
push
push
push
push
call
xlat
add
shlb
in
fiaddl
movsl
add
sahf
fldl
shl
add
enter
mov
loope
push
jecxz
push
add
add
add
jne
add
add
insb
add
incb
add
popa
test
int3
outsl
jb
mov
xchg
add
add
jmp
add
mov
in
in
lcall
pop
push
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
add
add
add
hlt
jp
mov
movl
mov
jge
push
scas
test
roll
jge
add
popa
mov
jge
fwait
add
roll
add
loope
add
sub
pop
pop
push
add
pop
leave
push
ror
sub
rol
shl
pop
ret
mov
push
push
push
push
push
push
call
stos
out
push
add
add
enter
cld
push
mov
mov
add
add
add
add
aad
pop
mov
add
mov
lcall
cmp
jne
push
lea
pop
lea
push
lea
push
lea
push
lea
push
push
push
push
push
call
add
add
lock
add
cld
filds
out
cmc
enter
test
jmp
stos
add
in
pop
add
loop
int
out
lock
sti
add
je
bound
add
in
sti
push
out
jl
stos
add
add
mov
sub
pop
mov
push
push
push
push
push
call
xchg
lock
add
int
fbld
pop
add
fildl
jge
mov
scas
add
add
stos
popf
add
lock
add
int3
test
mov
addr16
add
mov
mov
jl
mov
add
add
loopne
fiaddl
add
add
mov
mov
icebp
add
mov
in
test
inc
pop
mov
push
lea
push
call
add
mov
fcoml
jmp
in
iret
sarb
add
shlb
mov
roll
mov
mov
add
push
mov
add
add
fsts
mov
sub
pop
add
push
sub
add
pop
cmp
jne
mov
push
push
push
push
push
push
push
push
call
aam
add
int
add
fiadds
pushf
add
add
add
add
add
add
push
mov
fadds
into
add
shlb
jne
jno
jecxz
cli
in
mov
add
add
add
add
fwait
jl
cwtl
popl
rorb
scas
add
add
push
lea
push
lea
push
push
push
call
add
xchg
aam
addl
add
roll
mov
jns
xchg
add
add
ja
add
add
outsl
add
sahf
fistpll
mov
cli
jnp
sub
pop
add
cmp
je
push
push
push
call
add
mov
add
xchg
mov
add
jl
push
in
cld
add
push
mov
add
test
add
enter
add
subl
in
hlt
lcall
jae
call
pushf
mov
push
lea
push
push
call
fsts
xchg
jno
add
add
mov
mov
add
jb
lods
add
mov
add
mov
add
imul
xchg
add
add
hlt
fadds
rclb
xchg
shl
pop
pop
push
pop
pop
push
not
pop
pop
pop
push
add
dec
pop
leave
ret
push
push
push
push
push
push
push
push
push
push
call
add
add
add
out
add
stos
cld
pop
fldl
testb
add
mov
popa
sahf
scas
insb
add
add
jne
add
popl
incb
push
jnp
add
add
add
mov
stc
add
mov
hlt
fcoms
add
call
add
add
jp
addl
call
xchg
jge
push
lea
push
push
push
push
push
push
call
popa
popl
add
add
mov
xchg
mov
mov
test
add
out
add
add
add
scas
push
xchg
aad
pushf
mov
add
add
add
rcr
xchg
jle
bound
push
push
push
call
jmp
les
into
in
add
mov
add
rcrb
mov
leave
mov
mov
add
xchg
add
leave
addr16
stos
mov
testl
add
fadds
lcall
push
push
push
lea
push
push
push
lea
push
push
call
shlb
movsl
mov
add
add
add
add
add
jb
pusha
test
ffreep
add
outsl
add
add
add
add
addr16
mov
xchg
push
lret
mov
mov
cmc
mov
cmpsl
add
pop
sub
pop
pop
push
lea
sub
inc
rol
pop
pop
push
shl
add
rol
pop
leave
push
push
push
push
push
push
lea
push
call
cmpsb
rcll
outsl
push
add
add
shl
fldenv
popa
add
jl
add
scas
xlat
mov
or
mov
push
ror
pop
pop
pop
push
push
push
lea
push
push
call
add
loope
je
add
add
jmp
in
xchg
jne
add
popf
add
test
outsl
mov
out
add
xchg
cmpsl
add
pop
jns
out
lds
cwtl
add
insb
add
lcall
push
ror
pop
pop
push
push
push
lea
push
push
push
push
push
push
call
mov
jmp
push
cmpsb
add
add
out
ficompl
add
add
add
add
mov
add
movl
add
enter
mov
popf
add
test
ficoml
pushf
sub
pop
leave
ret
xor
cmp
rorb
adc
icebp
adc
adc
adc
xor
adc
cmp
mov
popa
cmp
xor
adc
mov
add
lea
dec
testb
mov
stc
shrl
jo
mov
inc
mov
push
mov
or
mov
push
sbb
or
cmp
arpl
push
hlt
push
xchg
mov
mov
mov
jo
add
pop
mov
cltd
stos
fs
stc
inc
imul
and
cmp
and
sbb
xchg
repnz
repnz
iret
aam
nop
fsub
add
aaa
jle
dec
dec
es
and
sahf
jb
mov
ljmp
mov
aad
mov
mov
movsb
jecxz
push
mov
test
test
es
leave
gs
popa
bound
dec
cmpsl
ds
aas
leave
loop
lcall
int
xorb
ja
xor
cmp
pop
insl
fnsave
mov
scas
iret
lret
test
rol
jl
xchg
xchg
in
mov
adc
ss
nop
mov
test
xorb
adc
int
jecxz
and
jge
push
sbb
sub
into
in
xorl
or
pop
mov
inc
add
jnp
cld
inc
push
aam
int3
dec
mov
push
push
dec
add
pop
sti
sub
stc
test
jbe
iret
push
fisttpl
adc
rclb
pop
lods
dec
fs
mov
mov
adc
mov
or
or
jl
mov
xor
mov
dec
sub
or
or
push
imull
xchg
mov
das
mov
and
jp
lcall
add
addr16
lahf
enter
mov
or
mov
cmp
rorb
std
cmp
pushf
outsb
sbb
movsl
and
push
repz
clc
ret
or
std
notb
inc
aaa
ds
lret
bound
shl
mov
or
push
in
cmp
mov
xor
andl
mov
je
sti
xor
and
dec
mov
push
ds
cmc
jp
push
adc
std
pop
outsb
push
pushf
pop
push
addr16
sub
fmull
push
or
mov
repz
pop
fdivl
bound
fists
jg
mov
push
and
pop
lds
pop
push
pop
out
mov
jp
leave
mov
repnz
outsl
repnz
fidivl
jmp
divb
aam
dec
mov
shll
mov
pop
dec
nop
push
or
loopew
and
les
push
outsb
pop
or
in
mov
push
aad
fcoms
jp
fdivr
sub
mov
arpl
xchg
imul
cmp
dec
push
push
fidivrl
push
mov
in
pop
add
cwtl
xor
pushf
sti
sub
or
hlt
mov
pop
lret
fwait
dec
inc
sub
rcr
jno
rclb
adc
xchg
lret
inc
shll
sub
mov
lahf
test
jns
pop
pop
pop
fs
or
out
or
nop
loope
outsl
jo
jle
idivb
and
dec
and
sbb
push
sbb
lcall
cmpsb
add
ficompl
xchg
in
mov
add
in
add
adc
das
mov
std
push
repnz
xchg
cmpsb
sahf
test
or
ja
leave
cwtl
pop
fldcw
xor
cmp
add
mov
je
jp
cli
mov
mul
insl
or
leave
loopne
inc
fcoms
inc
sub
xchg
cwtl
outsl
jns
pop
shll
int3
jbe
add
rorl
mul
dec
pop
mov
mov
or
loopne
xor
fistl
push
sbb
xchg
and
jle
mov
push
mov
inc
repz
sub
push
rcl
arpl
or
add
sbb
out
cmp
pop
mov
fucomi
xchg
and
int3
add
dec
lods
cmc
mov
out
sbb
std
aad
adc
into
imul
fwait
xchg
jne
jno
mov
adc
cmp
rcll
cltd
lock
sbb
mov
movsb
repnz
cmpsb
jnp
xchg
push
lods
iret
aas
dec
divl
dec
pop
inc
mov
das
in
call
xchg
sub
and
pop
jl
mov
add
aaa
jo
mov
shll
scas
cmp
mov
mov
out
js
lret
insl
dec
je
shrb
es
jo
out
add
cs
fisttps
xorb
in
and
mov
sbb
adc
pop
jae
aad
add
sarl
ss
mov
popf
sub
out
int
pop
stc
ret
repnz
insl
jbe
mov
dec
ret
movsl
mov
fs
jecxz
sbb
out
mov
jge
bound
jl
rcrb
psubb
je
popa
je
add
fistpl
push
mov
inc
jge
lret
mov
nop
clc
les
mov
mov
add
aam
pop
lcall
jo
mov
lds
rcrl
in
test
hlt
insb
sahf
leave
mov
fldenv
pop
subl
popa
out
sbbb
insb
rolb
cmp
int3
jns
sub
jno
sbb
icebp
lods
jbe
mov
push
jp
in
sbb
inc
ret
and
and
out
or
out
push
cmp
xchg
out
imul
or
shrl
sbb
out
jge
clc
dec
or
mov
aas
test
or
sub
les
push
fbld
ja
inc
push
sub
pushf
pop
imul
loopne
rclb
stos
or
rorb
adc
insl
in
popa
lret
inc
pop
push
push
mov
jb
cmp
push
decb
clc
xchg
lcall
je
pop
push
in
and
js
call
iret
xor
adc
mov
pop
cmp
pop
loope
xchg
repnz
xor
adc
cmpsl
js
mov
push
pusha
decb
pop
test
sarb
push
ljmp
call
adc
sbbb
cmp
arpl
sbb
sbb
xchg
scas
mov
pop
cmp
sahf
movsl
push
lret
or
push
in
jo
dec
insl
adc
popa
xchg
out
xlat
dec
jne
out
mov
jp
mov
jle
adc
cmp
xchg
ljmp
add
jbe
push
or
mov
adc
sbb
mov
out
mov
sbbl
pop
xchg
data16
jmp
mov
pop
sub
mov
sar
mov
jb
rorl
movsb
into
cmpsb
ret
test
pop
inc
sarl
cmp
in
cmpsl
adc
jnp
jl
sbbl
cmpsb
pushf
cmpsb
mov
mov
add
addb
insb
pop
inc
lret
sub
and
mov
arpl
mov
call
imul
cmpl
pop
pop
adc
repz
pop
or
jb
hlt
mov
mov
enter
pop
js
cmp
or
shl
ret
cltd
add
int
xchg
ss
dec
mov
scas
fldl
mov
imul
mov
daa
push
xor
fiaddl
sbb
out
popf
push
call
mov
or
add
popf
jp
mov
in
jge
xor
addr16
mov
inc
dec
fstps
mov
sahf
mov
inc
xchg
fdivrl
dec
add
ss
dec
rorl
out
cmp
push
push
cmp
dec
pop
aam
aas
mov
test
fnstcw
mov
or
int3
mov
xor
enter
fisubs
inc
xor
stos
xchg
jmp
addl
dec
pop
cmp
arpl
aaa
daa
mov
stc
dec
jno
cmp
dec
push
inc
ja
sbb
pushf
cmp
sbb
mov
mov
mov
stc
stos
rcl
push
fdiv
mov
mov
push
int
std
cmp
stos
xor
mov
xor
mov
pop
add
into
loope
cs
scas
iret
popa
xor
fs
push
sbb
insb
adc
sahf
dec
and
shlb
mov
lods
movsl
pop
mov
adc
fs
add
jb
loopne
xchg
add
mov
loopne
pop
sbb
mov
ja
cld
shll
aam
hlt
test
xchg
adc
mov
xchg
pop
movsb
push
scas
int3
lock
dec
jnp
inc
das
xchg
inc
add
xorb
rolb
sbb
mull
xor
add
daa
and
add
cs
push
dec
test
popf
mov
push
out
cmp
mov
mov
push
pop
arpl
lea
xor
xchg
mov
repz
iret
push
mov
imul
aad
sbb
aas
xchg
xchg
inc
xor
xor
jg
sub
imulb
icebp
test
faddp
addr16
cmp
daa
cmp
test
aam
and
stc
xchg
xchg
add
mov
call
enter
mov
test
sbb
mov
mov
pop
loope
loop
mov
xor
push
movsb
fsubs
and
push
sub
xchg
paddb
setbe
mov
push
stos
jnp
in
daa
sarb
jl
mov
jmp
pop
popa
daa
xchg
lds
ret
lcall
or
ljmp
pop
pop
inc
xchg
mov
test
or
jg
pushf
test
push
jg
and
xorl
pop
sub
pop
pop
dec
shll
and
mov
mov
xor
js
popf
jbe
push
ret
mov
jecxz
add
lahf
xchg
mov
cmp
adc
jne
pop
inc
mov
mov
in
xorl
push
rclb
fisubs
mull
cmpsl
ljmp
and
xchg
lret
arpl
add
jp
imul
loopne
mov
jmp
cmpsl
adc
in
imul
inc
rorl
int3
jb
clc
jno
cmpsb
sahf
test
dec
xor
fdivrs
push
shrl
or
int
cmp
out
xchg
inc
cltd
aas
mov
neg
mov
jnp
or
pop
jge
push
push
fs
int3
stos
cmc
rclb
ret
push
sbb
pushf
gs
insl
fwait
add
jbe
mov
imul
lret
sahf
xor
adc
mov
les
xchg
cmp
mov
mov
mov
sbb
or
dec
rorb
and
shrl
jb
inc
ficoml
pushf
jb
dec
int3
cmp
xor
pushf
repnz
xor
mov
dec
inc
out
stc
lahf
test
mov
out
xchg
decb
mov
pop
aam
mov
es
out
pop
shlb
and
jp
mov
test
imul
ljmp
xlat
lods
cmpsl
pop
jne
fsubs
push
xor
out
push
adc
dec
inc
xor
or
in
bswap
dec
mov
push
lar
jecxz
insl
outsb
push
or
fwait
popf
jae
xor
pop
and
push
mov
jge
fs
jle
call
in
jo
clc
pushf
dec
fs
mov
xor
sarb
mov
push
mov
xchg
fisubl
push
jbe
sahf
push
jbe
and
xchg
call
jne
mov
fmuls
mov
adc
shll
add
imul
scas
jge
add
pop
fcoml
fisubrs
add
test
and
jae
dec
addr16
adc
mov
push
pop
sbb
test
imul
sbb
sbb
add
adc
xor
pushf
add
mov
cmc
inc
cmp
jnp
dec
jnp
pop
push
loope
add
add
repz
xor
into
adc
cwtl
ror
xchg
cmpsl
out
and
xchg
inc
insb
and
cwtl
or
lods
cwtl
adc
ret
cs
aad
adcl
jbe
xchg
test
push
adc
loope
xor
lods
dec
std
sub
out
or
std
jl
repnz
and
pop
in
sub
or
xor
sbb
cwtl
ja
arpl
cs
jmp
loop
loopne
pop
cmpsb
andb
mov
xchg
sub
jmp
clc
rcrb
fwait
inc
or
pop
sub
and
sbb
pop
sbb
xchg
adc
je
inc
mov
pop
lcall
lods
movsl
pushf
jno
xlat
fbld
xor
push
xchg
sbb
jo
fildl
adc
daa
jmp
clc
stos
ss
pop
cmp
das
adc
dec
inc
pop
add
cmp
xor
fnstenv
daa
arpl
in
dec
les
roll
and
pop
mov
pop
mov
out
adc
jb
xor
dec
shrb
sub
xchg
pop
push
test
pop
jb
andb
fcmovnbe
call
in
loope
fstps
and
mov
ss
es
hlt
dec
inc
jmp
shll
loope
in
adc
rcr
cld
sahf
mov
cmp
push
out
and
and
rclb
inc
adc
sub
aad
test
popf
mov
fcomi
push
out
inc
pop
sbb
lods
fldcw
xchg
hlt
xchg
sti
fidivrs
int
sbb
cli
cmp
popf
sub
bnd
outsl
data16
std
je
aam
imul
lods
sub
lds
call
out
and
cmpl
fistps
jp
idivb
dec
push
sahf
jecxz
movsl
test
lods
in
arpl
les
ljmp
sbb
test
cmc
jmp
xor
popf
mov
sbb
insl
mov
push
lcall
push
mov
fucom
ffree
xchg
lcall
mov
mov
jae
iret
insl
xchg
push
cmp
pop
test
mov
bnd
sub
jle
es
stos
fsub
imul
push
movb
test
xchg
js
sbb
pop
jne
pop
mov
add
int3
mov
cld
ret
inc
sbb
inc
add
and
ja
jae
jns
fs
dec
mov
mov
das
or
test
mov
or
mov
mov
or
out
mov
pop
mov
pop
out
cli
push
push
jo
and
xor
fsubrs
scas
push
mov
jnp
outsl
loop
ljmp
mov
push
movsl
cmp
jnp
mov
in
pop
push
add
jno
loop
fadds
movsl
pushl
or
pop
mov
push
fdivs
aad
mov
sbb
dec
mov
dec
sub
sub
xlat
in
sahf
mov
push
es
adc
pop
in
shrb
movb
sub
mov
mov
add
in
in
sbb
pop
les
int
adcb
add
jno
mov
lea
mov
lahf
add
lods
push
mov
mulb
sbbl
xor
into
push
pop
pop
and
out
test
pusha
dec
iret
in
loop
lahf
jle
sub
in
out
repnz
loopne
inc
sub
roll
jb
ret
imul
jecxz
mov
outsb
repz
es
cmp
xor
cmp
repnz
lcall
mov
shl
dec
xor
adc
pop
inc
cld
daa
cltd
mov
and
cmpb
sbb
fldt
idivb
fsts
cmp
adcb
push
adc
maxps
sbb
aad
insl
lret
jge
sbb
xchg
add
lds
add
mov
jmp
fildl
push
test
in
jge
into
sbb
pusha
iret
std
outsb
pusha
inc
call
jle
sub
mov
mov
pop
mov
pusha
xor
xor
add
call
lods
xchg
ret
test
dec
test
scas
mov
inc
lret
sbb
adc
dec
push
js
fidivrs
and
mov
ffreep
mov
out
outsb
fcompl
mov
out
repz
xorb
ljmp
aad
xchg
loope
imul
mov
adc
hlt
and
pop
cmp
out
out
xor
movsb
mov
insb
add
jnp
cmpsb
lcall
inc
xchg
jmp
popa
clc
sarb
xchg
movsl
lahf
out
je
adc
push
dec
mov
imul
insb
cmpsl
loop
inc
test
mov
or
test
cs
out
les
jl
daa
cwtl
setae
iret
jmp
and
mov
add
cltd
fnstsw
mov
jp
adc
arpl
adc
xchg
mulb
mov
loope
xchg
xlat
sahf
adc
pusha
fisubs
jmp
sub
sbb
inc
sbb
cmp
push
mov
pop
mov
mov
pop
pusha
lods
cmpl
or
syscall
dec
sbb
dec
daa
adc
xchg
idivb
or
cmpsl
lahf
sub
pop
sbb
push
sbb
lahf
bound
or
adc
lcall
sub
and
push
or
movsl
sbb
mov
and
adc
mov
push
loopne
xchg
divb
stos
popa
add
stc
jns
lods
ja
dec
in
cmpl
std
xorl
insb
fnstenv
sub
movsl
and
movsb
cmpsb
ss
imul
and
mov
sbb
aad
mov
les
jg
mov
xchg
lock
in
jae
dec
lahf
push
hlt
rcrb
int
pop
cmp
bnd
mov
in
testl
out
inc
lret
iret
mov
jle
les
mov
pop
pop
mov
push
inc
aad
mov
sbb
pop
scas
scas
pop
push
inc
stos
vpackssdw
sub
pop
lods
test
in
loope
mov
xor
dec
inc
xchg
push
enter
mov
mov
dec
xor
xor
xor
xchg
sbb
arpl
arpl
pop
jnp
mov
xor
mov
add
add
enter
sbb
pop
adc
insb
pop
cmp
clc
add
xchg
das
inc
imul
cmp
data16
or
mov
mov
inc
dec
std
test
dec
pop
dec
push
pop
int
inc
adc
shl
pop
test
inc
xchg
or
in
fsubrs
xchg
pop
imul
insb
bound
pop
pop
xor
enter
mov
and
push
in
adc
add
jg
fisubl
cmc
pop
inc
push
sbbl
mov
cmp
or
cmp
mov
mov
pop
mov
mov
pop
aad
pop
and
in
ss
adcl
mov
test
sbb
testl
jle
xlat
icebp
push
lcall
in
lret
push
nop
sarb
lods
dec
fs
xchg
rorb
and
mov
enter
pop
movsb
stos
mov
mov
ficomps
jbe
adc
sbb
popa
sbb
scas
dec
in
stos
cmpsb
mov
lea
js
add
loope
pop
and
push
jmp
outsl
scas
mov
xchg
jmp
jns
outsb
and
pop
dec
in
out
test
xor
fcomps
aad
inc
and
loop
cld
and
aam
mov
aaa
test
cmp
lret
or
jb
inc
push
ljmp
mov
test
cmp
sti
mov
push
sbb
gs
cwtl
add
jae
or
mov
cmc
loop
gs
pop
scas
xchg
push
xchg
xchg
mov
xor
scas
pop
jg,pt
sbb
in
repz
and
inc
cmp
dec
test
dec
dec
jle
je
mov
mov
cltd
fdivrl
mov
and
mov
sub
ds
pop
pusha
push
test
mov
cli
dec
lret
stos
lea
insl
pop
das
pop
jg
sbb
clc
imul
sub
add
xchg
daa
ljmp
es
lock
aad
lret
xchg
fs
cmp
test
scas
fistpl
fsubrs
sbb
sub
repz
cs
mov
call
push
je
sbb
sub
pop
cmpsb
cmc
pop
fcomip
lahf
mov
int3
and
push
or
adc
shrb
add
dec
cmpsl
push
mov
jae
push
sbb
sub
and
mov
mov
into
insl
mov
fs
mov
rcrb
cli
jno
mov
dec
addr16
addb
shll
lods
push
mov
pop
sub
dec
push
cmovbe
xlat
dec
xchg
sub
sub
out
ret
ret
les
add
pop
jno
push
sub
test
mov
sub
test
push
mov
not
leave
arpl
lcall
outsl
xor
lods
mov
test
sub
jnp
sub
rorl
mov
cmp
or
test
mov
mov
sbb
fdivp
cmp
mov
lea
push
cmp
adc
push
rcrl
mov
inc
nop
int
jecxz
and
xlat
lcall
sarb
insl
xlat
or
mov
out
popa
adc
sub
and
dec
jp
xchg
ljmp
popf
frstor
ja
popf
mov
push
hlt
das
pushf
into
fstpt
sbb
push
xor
inc
inc
dec
int
sub
mov
sbb
xor
ljmp
enter
shlb
loopne
xchg
lret
stc
ret
xor
dec
or
int3
mov
rol
mov
mov
rcr
mov
icebp
insl
adc
mov
add
cmp
and
jmp
data16
loop
xchg
les
sub
movsb
dec
inc
sub
xchg
xchg
sbb
out
add
push
mov
stc
sbb
faddl
cwtl
cmpsl
test
dec
sbb
outsl
mov
sub
jnp
cmp
mov
ss
add
mov
lock
xor
sbb
mov
rclb
notb
push
mov
rorb
xchg
daa
adc
push
pop
icebp
inc
je
or
jb
es
fbld
jns
popa
xor
mov
fcomps
testb
nop
mov
sbb
aas
pop
ror
inc
sub
xchg
stos
jge
inc
test
mov
dec
jl
nop
xchg
xchg
lahf
sahf
test
dec
pop
xchg
dec
testl
push
inc
sbb
xchg
int3
hlt
mov
mov
lock
adc
cmp
outsl
cmp
shrl
lcall
mov
mov
inc
mov
and
movsl
add
sbb
test
mov
cmp
mov
imul
adc
mov
cmc
or
stc
push
je
add
cmc
mov
pop
dec
jo
xor
jp
xor
test
mov
jae
fldt
and
dec
stos
pop
adc
jne
and
inc
stos
lret
push
push
bound
hlt
xchg
and
dec
imul
push
mov
andl
cli
jo
xchg
movsb
popa
pop
push
or
inc
insl
imul
mov
je
outsl
mov
gs
sar
orl
pop
xor
or
or
or
inc
fistpl
mov
adc
repnz
jo
and
fldl
mov
ss
aaa
mov
iret
and
out
pop
push
stc
xchg
dec
sub
fbld
cmp
inc
sbb
jge
and
test
fcomi
loopne
pushf
cmc
cli
lcall
out
inc
pop
adc
or
lahf
scas
cltd
orl
jno
stc
sbb
icebp
nop
repz
cld
cmp
int
and
loopne
jg
pop
in
and
sbb
in
adc
pushf
and
int3
ret
xchg
or
popf
push
cmc
imul
or
nop
pop
mov
filds
or
andb
movsl
jle
addb
and
add
push
dec
dec
aas
inc
out
push
andb
mov
push
add
jl
and
pop
aaa
jns
xor
jae
cmpxchg
ret
icebp
popw
and
cwtl
jne
pusha
or
xchg
xchg
aas
push
xlat
filds
dec
inc
jbe
arpl
xchg
dec
inc
fnstenv
xchg
dec
imul
jnp
imulb
xchg
insb
outsl
rclb
add
mov
cmp
add
pusha
fwait
vshufps
hlt
test
shl
es
jg
js
es
outsl
cwtl
in
pop
mov
insb
scas
test
cmpsb
dec
repz
movsl
pop
add
mov
aas
test
mov
int
gs
dec
ljmp
dec
fcoml
mov
fisttps
inc
arpl
mov
sub
mov
pop
pop
push
push
test
and
jae
fwait
add
lock
test
mov
cmc
sarb
jb
aam
ljmp
xchg
dec
jbe
push
xchg
pop
lods
dec
xchg
cmp
cli
adc
xor
jg
sub
or
or
mov
jbe
loopne
pop
jmp
mov
loope
incl
push
stos
hlt
out
push
mov
inc
dec
movsl
int3
add
inc
pop
xchg
push
xchg
iret
into
insb
test
mov
fisttpll
sub
xchg
push
mov
rol
popa
fdivrl
das
mov
movsb
stc
ret
outsb
cmp
inc
add
xor
clc
scas
cmpsl
mov
or
push
out
add
pop
dec
test
test
sahf
xchg
cwtl
xchg
cmp
int3
sbb
push
jno
les
lds
jge
lcall
pop
pop
adcb
mov
xor
add
xchg
rolb
movsb
cld
rorl
xor
call
sahf
js
push
xchg
pop
pop
mov
dec
xchg
add
dec
push
movsl
sub
add
fbld
xor
rclb
add
pop
mov
mov
cmp
aas
pushf
xlat
sub
mov
je
repnz
into
pop
in
addr16
mov
subb
and
mov
in
test
pop
fwait
adc
mov
jecxz
jmp
loopne
push
rorb
jno
or
xor
paddsb
ds
mov
lock
inc
mov
mov
sbb
sub
sbb
int
aas
sarb
mov
lgs
ljmp
pop
xlat
inc
cmp
jg
mov
sbb
int3
int
fcompl
push
shll
jns
xor
aas
mov
pop
dec
pop
subb
push
imul
out
inc
push
mov
add
rcll
stc
sub
ja
or
outsl
cli
fldl
clc
mov
fnsave
adc
clc
scas
fdivr
mov
pop
in
jbe
aam
sub
jmp
dec
stos
inc
repnz
sti
jbe
inc
dec
not
xchg
orl
mov
pop
xchg
insl
shl
lahf
sahf
jns
ja
das
paddq
dec
bound
jmp
push
imul
mov
adc
fstpl
pushl
push
pop
shll
bound
mov
push
pushl
inc
lds
inc
mov
jno
pop
push
push
in
test
mov
or
sbb
xchg
jns
mov
shlb
cltd
clc
xchg
mov
aam
inc
cli
in
mov
sbbl
dec
xchg
xor
outsb
mov
sub
lahf
mov
mov
mov
lea
and
addr16
xor
push
dec
nop
outsb
rcr
cmp
mov
ret
cwtl
xchg
mov
ret
push
lahf
push
sbb
outsb
insl
aas
xor
popa
test
cmp
ffree
dec
daa
push
jo
mov
test
mov
or
sbb
xor
movsb
and
lret
scas
and
sub
stos
xchg
daa
jecxz
dec
mov
nop
mov
cs
test
jbe
stc
pop
movsb
pop
insl
add
enter
addr16
nop
jl
mov
int3
add
xor
fbld
mov
mov
dec
addr16
jp
les
mov
arpl
fstps
sahf
jbe
pop
lcall
out
jmp
fidivs
cmp
mov
cmp
and
push
les
sub
call
xor
test
lcall
pop
fildl
inc
mov
jbe
je
cmpsl
js
mull
mov
gs
mov
js
cmp
push
or
and
imull
shlb
cmp
inc
xor
lcall
dec
les
rorl
fs
nop
jg
cmp
fisttpll
xor
pop
adc
mov
sbbb
imulb
hlt
cli
xchg
xchg
xchg
sub
loop
mov
inc
cmp
andl
adc
enter
push
rclb
cmc
or
sub
pusha
loop
cmc
inc
add
jns
mov
push
fmul
push
out
mov
lcall
int3
xchg
mov
push
inc
xor
xor
dec
daa
mov
cmp
stc
pop
push
fdivp
call
fisttps
xchg
insl
testl
in
repnz
aas
mov
clc
or
jle
adc
sti
cli
popf
push
ret
or
sub
mov
adc
in
mov
xor
shl
cmp
enter
jns
pop
sbb
inc
out
inc
stos
xchg
out
out
loope
cltd
mov
leave
add
jbe
imul
loop
fisubrl
orb
mov
sub
insb
add
dec
xchg
lods
xor
pop
ss
or
or
insb
push
cwtl
jno
addr16
mov
mov
sti
push
adc
pop
movsb
and
jle
sub
movzwl
sbb
or
icebp
jo
pop
insb
xor
jle
lret
and
xchg
addb
test
pop
leave
or
sub
inc
or
loop
pushfw
dec
sub
mov
pop
loope
xchg
je
in
scas
jp
in
mov
repz
adc
cmp
fs
int3
pop
stos
inc
popf
pop
cmc
outsl
xor
mov
in
dec
dec
fistpll
mov
and
mov
ds
ret
fiaddl
cmp
jle
cmp
jae
int3
cli
xlat
adc
jl
mov
mov
ror
jge
js
push
leave
jle
mov
sub
xorl
inc
scas
cmp
cmp
inc
dec
mov
xchg
fs
outsl
les
cmp
out
lret
mov
popa
adc
jb
pop
add
in
sti
ja
adc
mov
cmc
cmpsb
lods
xor
leave
inc
push
inc
pop
or
fnstsw
fucomi
shl
sub
jb
into
pusha
ret
in
jo
dec
in
push
pusha
adc
and
mov
fstl
xor
das
lret
enter
jg
insb
je
ret
stos
mov
mov
add
mov
cmc
jb
pop
aaa
push
jno
sub
jno
mov
outsb
scas
pop
sbb
stos
mov
or
adc
xor
paddsw
dec
aaa
ror
cmp
inc
add
dec
je
pop
push
xchg
jae
cmp
jne
ss
in
cwtl
adc
fldl
mov
dec
sub
mov
scas
fadds
into
leave
and
or
test
inc
arpl
or
in
mov
shlb
xor
xor
imul
xchg
inc
popf
scas
and
sbb
pop
sub
jmp
or
jne
std
loop
mov
mov
mov
jecxz
cltd
push
repz
and
push
mov
adc
cmp
pop
add
cs
inc
push
xlat
or
arpl
lds
lret
mov
lret
out
sub
mov
out
xchg
inc
rcrb
jno
movb
jno
xorb
mov
ds
sub
in
mov
sub
cltd
mov
xchg
or
mov
popf
mov
push
xchg
jno
mov
push
insl
test
inc
pop
fs
lea
gs
test
call
add
imul
xchg
inc
pop
outsl
mov
insb
cli
or
lret
lret
add
cwtl
and
xorl
add
mov
pop
mov
sar
es
cwtl
push
mov
mov
inc
hlt
push
rcl
push
lcall
pop
cmp
xchg
in
ret
lock
inc
jle
xchg
fcmovu
adcb
popf
sub
outsl
add
adc
fdivp
fdivrp
pop
das
lret
mov
out
movsb
pop
mov
sahf
add
sub
and
fildl
sbb
jo
mov
add
ja
inc
fldl
or
int
ret
inc
mov
pop
xor
cmp
outsl
and
push
stos
mov
and
insb
rorb
inc
xchg
in
rorb
cmp
xor
mov
and
mov
pop
arpl
xchg
sahf
rorl
leave
call
aad
adc
xchg
sub
fdivrl
pop
lods
nop
test
xorl
fstpl
or
pop
jno
pop
call
cli
aad
sbb
xchg
dec
loopne
ljmp
neg
xchg
mov
push
out
cli
inc
xchg
enter
cmp
mov
jne
push
cmc
clc
pop
pop
add
stc
subb
testb
add
std
inc
cmp
mov
jmp
scas
rclb
clc
dec
fdivs
and
jbe
xor
test
add
imul
and
xchg
mov
push
nop
int3
push
dec
dec
xchg
ja
sbb
mov
nop
jae
fsts
pop
outsb
add
sbb
pop
add
push
lcall
in
test
imull
mov
xchg
inc
and
and
daa
mov
cmc
sti
popa
push
pop
add
xchg
rolb
test
jp
cmp
dec
fsubrs
jl
jg
sbb
dec
mov
pusha
popa
mov
adc
js
sbb
inc
aad
cli
out
gs
sahf
inc
aas
sub
lods
inc
dec
addr16
enter
mov
into
sbb
into
out
push
in
movsl
sub
push
inc
ljmp
cli
adc
aas
test
push
arpl
inc
dec
leave
adc
jmp
out
incl
cmp
sub
lcall
js
or
mov
cmp
sub
lods
ret
call
adc
in
inc
popf
inc
mov
mov
mov
insb
add
cld
or
sbb
fxsave
inc
stc
adc
pop
leave
fisttpll
jnp
popf
or
flds
nop
dec
das
loope
mov
test
icebp
pushf
or
or
stos
ret
push
push
in
shl
mov
lea
insb
mov
or
xchg
mov
mov
ss
cltd
jmp
in
iret
aas
loopne
and
aam
jle
push
or
sub
xchg
rcrl
sub
add
outsb
mov
mov
inc
arpl
inc
mov
imul
roll
fidivrs
leave
scas
popa
ja
test
sbb
adc
jnp
popf
ror
sbb
push
mov
push
adc
push
insl
sti
adc
out
in
pop
pop
adc
fst
mov
xchg
outsb
adc
nop
inc
jae
mov
cmc
sub
imulb
dec
arpl
imul
test
xchg
js
jmp
add
or
mov
mov
fdivl
mov
add
cmp
cmpl
ret
daa
adc
icebp
lret
inc
inc
cmp
mov
adc
cmpsl
das
push
les
ds
mov
ss
adc
ret
dec
inc
gs
test
lret
mov
int3
aaa
and
popa
jecxz
addl
or
lods
inc
inc
mov
jmp
sub
jmp
sbb
mov
fdivs
or
int3
in
adc
cltd
mov
fldcw
add
fadd
dec
jo
mov
push
sbb
push
xor
lret
es
pushl
lret
jo
mov
rorb
cmp
mov
pop
mov
mov
sbb
sbb
xchg
ja
adc
jg
rorb
sbb
sub
test
gs
sub
dec
mov
ljmp
ljmp
lret
jnp
cltd
daa
pop
mov
jp
add
xor
les
xor
daa
jns
jne
shll
icebp
arpl
lcall
push
pop
lds
fldcw
inc
es
pop
aam
cmp
mov
in
mov
push
push
pop
cmc
lods
nop
inc
shll
add
xchg
jle
xorb
lret
cmpl
insl
or
jns
js
xor
dec
sbb
imul
scas
sub
scas
sub
outsb
xor
fidivs
xchg
mov
sbb
push
ret
out
pop
sbb
ja
mov
je
ljmp
adc
sti
enter
daa
mov
xor
mov
push
xor
sub
adc
or
les
outsb
call
test
cmpl
pop
loopne
int3
aaa
fnsave
pusha
sbb
lret
shll
pop
push
add
cld
lods
sub
incl
js
and
pop
dec
lea
mov
dec
popf
pop
call
cmp
movsb
ret
nop
mov
push
pop
push
in
hlt
xor
popa
sahf
inc
hlt
std
sahf
fdivrl
lods
mov
cmp
cli
roll
pop
inc
xchg
sub
inc
jae
mov
mov
stos
sub
inc
mov
cmpsl
jmp
adc
stc
adc
mov
sahf
outsl
xor
jo
lods
test
and
insl
mov
jnp
push
push
scas
enter
clc
stos
test
cmp
mov
mov
dec
pop
adc
test
mov
jmp
mov
sub
mov
in
sbb
pop
shlb
fisttpl
inc
imul
sbb
dec
push
dec
fdivs
add
pop
jbe
or
mov
mov
and
jno
ss
lds
sub
and
sub
add
test
aas
fdivrs
aad
loop
xor
cmpsl
push
pop
insb
lcall
adc
push
stos
push
dec
pusha
adc
or
leave
and
mov
insl
mov
pop
xchg
sub
cmpsl
push
fcmovu
pusha
mov
outsl
repnz
add
mov
fs
rclb
add
pop
sub
les
fldl
xlat
mov
pusha
add
cltd
repz
add
loope
xor
mov
jmp
ret
push
mov
fs
in
outsl
imul
jns
add
or
sbb
sbb
xchg
sti
int3
mov
icebp
mov
adc
dec
fwait
cmpsb
push
push
je
int3
xor
jg
inc
inc
jecxz
sbb
mov
in
std
lods
test
inc
xlat
xchg
dec
push
out
lcall
ds
sar
cmp
imul
inc
pop
xor
sub
mov
add
movsl
or
inc
push
out
imul
cli
jo
or
arpl
js
outsl
or
loopne
sbb
test
mov
jl
add
jp
int
js
sub
outsb
xor
shrl
pop
pop
jle
ljmp
imul
add
loope
sub
add
lods
adc
ss
jecxz
or
mov
xchg
add
pop
clc
dec
ror
and
xchg
ret
push
cmc
mov
pusha
sub
jae
in
cmpsb
push
jbe
movsl
push
pop
xchg
stos
jmp
stos
lock
sub
add
mov
mov
jge
mov
pushfw
mov
hlt
andl
sbb
jbe
pop
out
scas
mov
pop
leave
dec
fsts
enter
adc
sti
adc
out
cmp
ret
or
cmp
cmp
lahf
aas
and
pop
xchg
je
mov
lods
flds
in
test
lret
les
mov
stos
sti
repnz
mov
imull
iret
pusha
inc
sub
dec
sub
adc
jp
mov
arpl
fld
and
loop
dec
mov
in
push
pop
mov
xor
mov
cmc
add
das
push
xor
push
and
fs
or
stos
or
push
mov
shll
xor
xchg
or
jl
decl
jmp
jge
movsb
mov
aad
test
xchg
mov
inc
aas
jno
or
pushf
outsl
jge
cmp
push
xchg
idivb
ss
cwtl
pop
in
scas
addr16
push
pop
cmp
cmpsb
pop
aam
xchg
inc
pop
xor
push
scas
jp
cmp
test
sbb
xchg
add
int3
int
arpl
leave
pop
int3
add
or
jge
jl
push
jge
mov
push
jmp
mov
mov
out
lea
mov
dec
adc
sbb
ret
sub
stos
xchg
daa
mov
movsl
loopne
xlat
outsl
mov
xchg
adc
outsl
adc
fmuls
scas
mov
inc
mov
lea
sub
add
fimuls
inc
aas
jne
mov
idivl
setl
jge
es
cmp
imul
aaa
and
mov
cwtl
jnp
jg
jns
call
inc
pop
or
and
lret
shll
scas
testl
pop
mov
fldl
sub
sub
push
dec
inc
gs
cmpsb
push
or
push
xor
lods
ja
inc
ljmp
push
mov
repz
mov
sub
nop
cmp
out
in
add
int
add
inc
xchg
cmp
cli
mov
mov
fdivs
jge
mov
iret
outsb
push
int
leave
mov
notb
xchg
repnz
bound
mov
xor
sub
sub
test
xor
sbb
jp
fwait
pop
aam
test
mov
jae
push
and
lret
fists
decl
rorb
xor
adc
ret
mov
stos
in
xchg
jp
jb
push
xchg
out
dec
cwtl
dec
add
jl
imul
out
dec
cli
aam
int3
xchg
addr16
jno
xchg
repz
popa
adc
pusha
stc
xor
insl
push
xchg
es
inc
test
fs
pop
mov
sub
popf
mov
mov
or
clc
inc
imul
push
xor
pop
or
addr16
stos
iret
jecxz
mov
jl
push
dec
mov
out
lds
xchg
insl
mov
inc
out
cltd
add
mov
outsb
repz
lods
sti
push
cmp
push
cmp
dec
adc
lret
bound
ds
dec
ret
mov
in
and
jns
imul
add
test
add
call
mov
inc
dec
stc
and
mov
xor
imul
imul
sahf
imull
out
cmp
mov
imul
inc
push
jbe
sarl
hlt
and
pop
sbb
mov
cs
or
insb
pop
rorl
mov
inc
mov
add
fs
inc
add
cmp
idiv
mov
xchg
push
adc
lcall
std
imul
inc
jl
jno,pt
jg
jmp
dec
xor
sbb
adc
nop
mov
test
or
loop
not
cmp
lret
mov
movsb
mov
ret
aaa
mov
dec
mov
popf
xchg
cmp
fdivs
fwait
dec
mov
dec
cmpsb
xor
and
adc
push
lock
xchg
clc
lea
test
cmp
pop
adc
jmp
push
pop
inc
ret
mov
adcb
movsl
jecxz
test
mov
mov
inc
ja
dec
and
out
rclb
jne
shrb
lea
jne
lds
out
sahf
dec
xor
mov
or
mov
cmp
test
insl
push
jno
and
sub
jge
adc
mov
add
mov
sbb
imul
adc
mov
or
jmp
pop
ss
pop
mov
cbtw
cld
push
jmp
cmc
pop
jp
in
loop
out
mov
popa
data16
mov
lods
in
lcall
out
scas
cmc
enter
add
or
xchg
shll
out
jmp
xor
mov
or
mov
outsl
bound
cwtl
add
mov
cmpsb
push
gs
jecxz
popf
insb
test
shrb
loope
jmp
sub
pop
jge
inc
adc
mov
sbb
mov
pop
xchg
push
pop
jo
test
js
cmc
daa
rol
xor
fimuls
jo
mov
ret
mov
xorb
or
or
sti
jg
cmpsl
add
sub
jne
adc
push
adc
insl
add
xchg
cld
mov
xor
push
add
dec
sub
int
add
popf
dec
sub
ficomps
and
andl
mov
push
mov
adc
ljmp
movb
push
ret
pop
pop
add
ljmp
jnp
das
out
dec
pop
jle
shrb
dec
mov
sahf
xchg
mov
mov
pop
jne
jae
movsb
data16
ret
imul
xor
aaa
mov
popa
shlb
pusha
clc
addr16
sbb
mov
nop
fmulp
adc
negb
rcll
out
jno
adc
repz
xchg
adc
ret
sbb
sahf
fidivs
dec
loop
fwait
out
pusha
jecxz
push
push
pop
pop
or
inc
cs
add
popf
push
loop
in
mov
sub
pop
push
add
jbe
cmp
xor
pop
and
pop
fcompl
jns
jne
or
or
cltd
pop
dec
in
pop
jge
enter
js
mov
jmp
xchg
xchg
xor
dec
jae
push
jge
adc
lods
pop
inc
test
cmp
xchg
inc
incb
sarl
add
sub
iret
loopne
mov
mov
xor
call
push
dec
ret
push
and
dec
lahf
xor
and
push
adc
lea
dec
adc
in
add
add
mov
cmpsb
fldt
or
aad
nop
adc
popa
inc
enter
mov
push
sbb
fisubs
mov
packuswb
push
and
movsb
arpl
jmp
cmpsl
push
mov
div
adc
std
jp
in
mov
inc
jl
or
xchg
jo
mov
add
cmp
and
es
mov
jge
cld
mov
stc
push
cmp
std
mov
adc
pop
xor
andnps
mov
ficoms
mov
mov
ljmp
in
sahf
ror
or
lock
mov
inc
dec
fdivrl
int3
and
shll
jge
popa
sbbl
cmp
dec
sbb
repnz
xchg
adc
lock
dec
adc
cmc
in
xchg
mov
inc
xor
scas
jge
xor
pop
rclb
sub
cmc
pusha
imul
dec
scas
repnz
and
mov
fwait
inc
scas
ljmp
lahf
jae
lret
inc
arpl
mov
mov
xchg
add
dec
jge
das
ljmp
test
stos
push
ss
mov
js
push
xchg
xlat
xor
hlt
enter
mov
movsl
jg
dec
mov
mov
dec
sarb
lret
ss
sti
xrelease
jne
test
in
and
divl
lock
fcmovu
dec
dec
mov
movsb
mov
popa
sahf
bound
jnp
fchs
mov
dec
scas
jbe
mov
pop
push
add
cs
lods
sub
repnz
pop
mov
out
add
aas
outsl
adc
inc
mov
sbb
test
sbb
das
pop
lods
push
stc
pop
dec
mov
and
sets
inc
sbb
ret
in
cld
sbb
or
jb
pop
in
scas
cmp
fdivl
aas
jle
or
repnz
testl
inc
adc
or
pop
xchg
test
mov
mov
sti
pop
or
inc
int
stc
adc
ror
inc
push
cld
test
cmpl
adc
fs
push
xchg
and
mov
sti
xchg
pop
or
out
or
sbb
xlat
xlat
test
shr
out
ja
imul
cmp
insl
pop
fnstenv
cmp
pop
cmp
popa
cmpsb
out
cs
mov
jp
jo
add
push
add
das
jmp
xchg
and
or
push
stc
insl
lods
arpl
push
xor
push
pop
and
xor
in
jns
push
hlt
add
push
in
sbb
or
test
lds
push
xlat
adc
fsubrs
jns
loopne
sub
lds
mov
cmp
cmp
out
adc
cmpl
fistpll
leave
pop
fstpt
sahf
and
out
andb
repnz
sub
pop
repz
jae
adc
fists
mov
sub
xor
jecxz
lret
xchg
push
xorps
xchg
lret
mov
sar
sub
aas
inc
adcl
cmp
rcll
or
push
jmp
outsb
incl
jb
jp
xlat
hlt
icebp
idivb
lods
mov
gs
mulb
pop
push
loopne
roll
stos
aam
ljmp
or
das
inc
loopne
jp
hlt
mov
outsb
or
add
adc
ljmp
xlat
js
xor
add
std
adc
add
fwait
pop
adc
sub
repz
into
mov
mov
lock
cmc
addr16
orl
enter
push
fcmovne
imul
loop
andb
push
pop
sub
or
fcmovu
in
insb
loope
inc
outsb
lcall
mov
outsb
iret
ret
out
mov
dec
adc
inc
adc
mov
xchg
sti
pop
adc
daa
inc
lret
and
push
cmp
pop
lahf
decl
lret
mov
aam
in
add
repz
icebp
sbb
add
nop
and
or
scas
loope
ljmp
iret
lds
jae
adc
mov
or
sbb
jge
int
clc
mov
and
lea
das
sti
push
rolb
popf
out
mov
and
cmp
hlt
test
push
and
movsb
mov
dec
mov
jl
sti
in
shrl
add
lds
subl
pop
in
repz
dec
add
leave
sub
imul
pusha
cs
idivb
enter
dec
rol
lock
cmp
xor
xor
xor
mov
or
lahf
push
data16
int
xor
push
sub
adcl
fld
rcl
mov
add
xchg
add
jle
call
and
or
scas
ror
or
rclb
ja
out
lret
add
stc
cmp
mov
and
adc
in
lods
testb
cmp
divb
sub
pop
xor
push
pusha
lods
or
jno
adc
mov
mov
xor
or
jle
ret
adcl
lods
shll
dec
stc
sbb
addl
shl
pusha
jecxz
stos
jecxz
cmc
sub
sbb
leave
in
cmp
or
dec
fisttpll
xchg
cmpb
lret
je
or
inc
pop
insl
inc
flds
push
dec
ljmp
sub
imul
pop
xor
pop
lret
cmpsl
mov
pop
push
pop
imul
pusha
fiaddl
cmc
ret
mov
xlat
ja
mov
jno
pop
inc
cmp
push
cmp
sub
cwtl
repz
and
xor
pop
insb
mov
cmp
jnp
pop
adc
add
loope
loop
mov
pushf
pop
or
jo
std
cmpsl
mov
fadd
loope
ds
inc
jp
into
push
test
xchg
sti
xchg
add
adc
sbbl
jp
out
orl
push
xor
or
pop
in
cmp
pop
jae
sbb
lods
push
adc
and
sbb
leave
stos
je
mov
add
push
jne
nop
and
and
inc
pop
push
daa
pushf
pop
mov
aad
stos
fwait
xchg
mov
dec
icebp
sub
jae
add
sarl
mov
fcoml
dec
inc
cwtl
mov
adc
idivl
mov
orl
adcl
mov
js
and
sahf
mov
mov
sub
inc
outsb
cmc
lods
aam
loopne
ficompl
jecxz
adc
adc
adc
bswap
xor
pop
mov
xor
mov
cmp
jne
addr16
jg
jl
sbb
add
shl
into
push
cmp
into
sbb
inc
inc
and
shrb
pop
insb
push
sarl
mov
in
dec
cld
sti
outsl
add
aam
and
xchg
mov
jmp
cli
push
scas
movsl
or
cmp
jl
fistpll
xchg
repnz
cld
test
pop
cmp
xor
lds
shl
push
cmp
js
jp
and
pop
outsb
mov
or
sbb
andl
xor
negl
add
mov
pushf
jo
jbe
mov
xor
and
inc
adc
jno
dec
push
jo
cs
stos
fcoms
fldcw
mov
mov
clc
fwait
lret
xchg
xchg
ljmp
add
fdiv
insl
or
int3
cltd
pop
mov
insl
pop
aad
test
sbb
lea
adc
mov
aam
cmpsl
add
cltd
cld
jecxz
movsl
pop
sbb
addr16
sbb
lock
mov
lret
mov
jge
dec
lcall
push
popf
mov
sub
popf
outsl
imul
pop
push
xor
inc
xchg
push
rcll
push
loopne
shl
icebp
add
adc
jnp
aas
lods
cs
jge
xor
popf
inc
sub
mov
xor
sbb
in
adc
loop
stc
inc
pop
adc
mov
jbe
add
push
pop
push
cmp
pop
pop
mov
push
ljmp
pop
sub
aaa
fisubl
add
dec
jp
lods
mov
xor
pop
loop
dec
mov
mov
iret
not
iret
jbe
sub
scas
rcl
fildl
data16
loope
sahf
stos
push
jle
loope
dec
stos
sbb
outsl
stc
orl
mov
push
popf
sahf
jnp
add
mov
cmpsl
xchg
or
in
data16
and
mov
jmp
fcomi
xor
icebp
dec
mov
imul
or
pop
sbb
lret
je
adc
repz
js
data16
cmp
inc
inc
ds
insl
in
mov
mov
lcall
xlat
xchg
call
popf
ja
inc
das
loope
aaa
and
push
out
out
and
les
movzbl
mov
shrb
call
xor
or
inc
push
ja
adc
mov
xchg
rep
cmp
aas
xchg
stos
cmp
out
popf
push
outsl
xchg
scas
aaa
decl
adc
push
test
test
mov
xlat
rcrl
inc
push
fcomip
pusha
pushf
lea
out
cld
jbe
push
aad
lods
jmp
scas
jno
and
loope
cmc
test
inc
inc
xchg
push
inc
xlat
ljmp
in
xchg
aaa
mov
add
pop
push
or
cmpsl
and
dec
cmp
out
sti
icebp
adc
mov
stos
mov
push
sbb
test
inc
in
push
aaa
adc
iret
and
jbe
xchg
pop
jge
and
jno
xor
push
and
adc
adc
hlt
popf
ljmp
and
mov
pop
push
mov
add
add
jmp
repnz
add
push
xchg
neg
sbb
push
sbb
push
sub
cmp
adc
pushf
cltd
mov
xchg
sub
lret
int
pop
addr16
imul
jmp
sbb
cmp
sub
icebp
in
mov
int
or
hlt
es
pop
in
mov
pop
xchg
mull
daa
mov
sbb
pop
jbe
scas
cwtl
movsl
stc
and
cmp
fnstcw
fnstenv
pusha
inc
movsb
cwtl
imul
sahf
cli
xchg
icebp
xchg
je
in
ja
add
lret
lret
in
jge
popa
iret
leave
mov
inc
xchg
cmpsb
out
out
cwtl
cmp
and
adc
sub
and
iret
movsl
mov
in
xlat
adc
xchg
mov
xor
clc
adc
adcb
lret
jns
es
xchg
add
push
and
je
lcall
xchg
fdiv
add
dec
fildl
and
int3
mov
aaa
iret
out
push
out
fildl
mov
adc
int3
mulb
xchg
scas
lahf
pop
pop
jae
add
cmp
shll
popa
push
and
mov
add
dec
stos
xchg
pusha
cmp
les
jmp
test
pop
lods
cmp
out
pushl
xchg
and
fldt
negb
inc
push
js
lahf
xor
xor
inc
push
insb
cmp
push
adc
es
mov
js
imul
sbb
sbb
adc
mov
xchg
sub
in
xchg
mov
incb
jg
int3
push
into
or
out
es
std
repz
mov
and
cmp
push
and
loopne
negb
inc
inc
lds
dec
mov
stos
cmp
jp
push
xchg
jne
jg
into
mov
mov
jl
pop
mov
nop
cmp
push
pop
test
jnp
jns
push
pop
mov
fimuls
fisubrs
xor
lahf
dec
bound
push
sub
cwtl
xor
push
inc
ds
sbb
sbb
imulb
inc
xlat
out
lds
xor
call
add
pop
outsl
mov
fs
lahf
fidivl
cmp
or
pop
jmp
jno
lock
xor
pop
aam
loopne
repz
push
iret
mov
data16
or
adc
int3
push
xor
sbb
movsb
aam
enter
les
shrb
add
jns
dec
pushf
lret
push
lods
mov
dec
xor
push
inc
cmp
pop
sbb
orl
xchg
pop
aad
jne
inc
xchg
int3
xchg
stc
leave
aad
fdivrl
adc
fincstp
movsl
push
stc
push
insl
cld
cld
test
cmpsl
or
add
sub
lods
mov
sub
jbe
int3
fstpl
orl
xchg
ljmp
popf
sahf
push
ficoms
and
imul
leave
fistpll
fdivl
pop
mov
add
adc
push
pop
shrl
fimull
std
leave
sub
loope
adc
dec
xor
add
adc
fwait
dec
ficoms
ja
icebp
dec
bound
add
or
jae
sub
cli
cmpsb
pop
rcrb
arpl
and
or
adc
das
call
push
outsl
cmp
sub
jle
sbb
inc
cwtl
jg
cs
xor
pop
sbb
stc
and
shll
sarb
jae
push
das
pusha
xor
lret
inc
sti
cmpsl
mov
push
iret
mov
sbb
fbstp
ds
movsb
push
cmp
fsubrl
xor
test
mov
sbb
mov
into
push
inc
adc
not
pop
adc
adcl
pop
pop
mov
lock
xor
add
out
loope
roll
stos
push
sub
sahf
les
mov
stos
sub
pop
test
repnz
cmp
hlt
push
leave
lds
jg
pop
pop
ljmp
sbb
imul
loope
out
jg,pt
stos
mov
mov
jb
stos
mov
pop
adc
in
fildl
pop
mov
out
mov
daa
xchg
mov
nop
ja
jno
xchg
add
cmpsl
incl
jne
xor
repz
mov
jmp
loop
js
mov
jo
jle
mov
pop
pop
int
push
mov
xchg
faddl
cltd
mov
jl
rcll
test
and
gs
push
xchg
lret
cmc
xor
mov
std
ljmp
in
mov
xchg
push
and
cltd
mov
mov
fldenv
xor
fcoml
pop
out
orb
testl
fcoms
hlt
test
aam
shll
test
loopne
imul
pushl
jns
sti
push
bound
cmp
cmp
nop
aas
shll
mov
mov
inc
push
cmpsl
repnz
jnp
mov
loop
je
mov
fcmovnb
mov
mov
jns
mov
ret
push
out
popf
out
inc
sub
add
loope
popa
cltd
test
mov
and
into
push
out
xor
cmp
outsl
ds
mov
mov
jo
and
scas
xchg
xor
movsl
mov
call
fadd
cld
fiaddl
repz
pop
xor
lods
add
je
rcl
jg
cmp
push
gs
cs
lea
icebp
cmp
subb
sub
pop
sbb
lods
popf
xchg
add
cmp
iret
shrb
frstor
adc
inc
pop
add
sbb
push
push
mov
xchg
daa
or
rorl
lret
lds
in
fadds
or
xchg
std
orb
jp
or
test
push
mov
clc
mov
lock
ret
sbb
mov
into
mov
push
into
push
or
repnz
hlt
xchg
lcall
pop
xlat
cmp
push
pushf
cmove
mov
ljmp
and
cmp
or
stos
cltd
push
scas
movsl
fmul
ljmp
hlt
sub
pop
push
and
popa
ja
pop
xor
test
dec
mov
dec
cmp
sarl
stc
add
dec
mov
and
pushf
or
repz
cmpsb
mov
push
iret
sbb
aaa
xlat
sub
or
mov
and
insb
into
sbb
idivb
mov
xor
js
out
and
mov
pop
loope
dec
xor
repz
jp
fldt
shl
xor
jmp
cwtl
popa
test
faddl
int3
pop
test
jae
rorb
or
inc
shl
jge
dec
loope
in
push
lcall
loop
lcall
pop
rolb
frstor
insl
push
fstpt
cltd
sbb
xor
sub
test
add
out
daa
or
sahf
int3
xor
jle
push
sbb
mov
pop
pop
aaa
mov
mov
lret
sarb
cmpsb
jge
and
xchg
lcall
loope
test
in
in
sub
dec
sbb
push
ss
sub
stos
movsb
out
scas
adc
xlat
jl
add
push
ljmp
test
and
out
movsb
flds
xchg
lds
sub
in
ss
cmp
jp
out
filds
nop
mov
sub
test
xchg
and
mov
dec
and
inc
in
les
mov
pop
adc
aaa
sbb
pushf
fsubr
ret
pop
mov
jp
mov
pop
xchg
adc
inc
out
sahf
lods
inc
stc
inc
xchg
out
imul
out
or
mov
adc
fwait
sub
sti
pop
pop
rolb
not
mov
mov
or
pop
ret
into
in
popa
xchg
push
int3
inc
cmpsb
sahf
mov
fdivl
idivb
cmpb
mov
sub
fmuls
shl
adc
pop
mov
scas
hlt
mov
fsubs
mov
xor
mov
and
lahf
dec
jl
cmp
pop
jge
dec
mov
pushf
mov
fstl
mov
je
and
repz
pop
mov
xor
imul
pushf
adc
fs
js
fldenv
mov
stos
outsl
stos
ss
aas
cmpsl
mov
sbbl
mov
xor
xlat
ljmp
inc
test
mov
fisubl
and
and
or
mov
fadd
and
pop
test
nop
cmp
vcomisd
mov
cli
ret
add
js
dec
pop
adc
stc
xchg
or
xlat
sahf
dec
das
mov
or
sbb
xchg
fcoms
jge
jmp
add
cmpsl
jnp
add
outsl
sti
pop
lahf
or
out
jle
repz
sub
jl
pop
clc
mov
adc
inc
xchg
roll
jmp
pop
dec
mov
cmpsl
push
lret
out
mov
pop
inc
es
adc
lahf
push
popf
dec
es
out
mov
fstpt
imul
movsb
mov
stc
loop
popa
add
dec
dec
add
test
pusha
or
mov
xor
sbbb
push
push
jbe
sbbb
addr16
mov
in
push
stos
aas
xor
sbb
test
inc
pop
repz
sbb
in
mov
and
lods
mov
xor
dec
sti
dec
fsubp
mov
imul
inc
pop
aad
pop
and
jecxz
insb
icebp
es
xchg
pop
jg
enter
jbe
push
test
cli
aam
cmp
leave
push
loopne
ljmp
pop
and
sbb
pop
mov
push
mov
stos
push
pop
push
popf
call
jle
mov
sbb
or
mov
or
in
jmp
stos
stos
stos
sub
movsb
or
dec
and
jb
loop
cld
inc
ret
enter
adc
jle
push
or
lcall
test
insb
inc
imul
clc
incl
movsl
mov
lods
cmp
repz
inc
repz
pop
mov
cmp
and
mov
dec
es
lods
stc
sbb
andw
clc
test
mov
test
jg
jge
daa
fcmovnbe
cmp
jg
cli
popa
push
in
jmp
rclb
ret
repz
mov
fnstcw
imul
mov
sbb
pop
jae
jb
jmp
test
ljmp
add
dec
dec
stos
popf
cmp
mov
jg
outsb
mov
out
imul
jmp
push
in
mov
add
ret
rep
or
imul
jo
add
mov
jb
test
xlat
in
iret
xlat
add
lcall
or
icebp
push
lret
shlb
dec
mov
testl
sbb
push
push
jmp
lods
add
mov
out
jo
cmc
jne
sahf
sub
neg
out
jecxz
xchg
notl
add
push
decl
mov
rol
sarl
add
adc
fisubrs
jb
sbb
sbb
sub
fldl
push
or
mov
ret
cmpsb
jno
iret
inc
jmp
fsubp
sbb
aas
and
xchg
mov
das
cmp
ss
cmp
pop
ds
push
xor
in
xor
jo
fisubs
lock
clc
inc
frstor
jne
mov
inc
jp
sbb
nop
cli
enter
xor
jae
push
or
bound
xchg
scas
and
scas
lods
mov
xchg
mov
sub
pop
pop
adc
jne
add
test
jno
push
and
push
out
pop
lock
jp
xchg
es
fs
add
cli
inc
and
xchg
icebp
push
mov
mov
push
mov
sahf
fdivs
jae
push
jae
mov
push
int3
cltd
pusha
sbb
inc
rcll
inc
mov
test
into
fdivrl
test
mull
movsb
ljmp
push
decl
cmp
push
lret
xor
pop
push
xor
jg
clc
cmp
jge
stc
or
pop
cli
mov
jno
jg
pop
test
xchg
dec
lahf
loop
sub
jbe
scas
rorl
popf
in
sbb
pop
cmp
xor
repz
mov
dec
adc
out
ret
mov
xchg
push
lret
xor
xchg
jmp
push
or
outsb
xchg
fbld
xchg
add
fildll
dec
mov
cli
insb
sbb
loopne
and
lahf
sbb
push
mov
sti
mov
arpl
mov
mov
mov
pop
hlt
sahf
or
sbb
push
jecxz
inc
adc
xlat
and
mov
test
cld
shlb
push
xor
pop
or
jle
mov
and
sbb
mov
add
inc
inc
pushf
or
add
xchg
adc
jl
sub
fimull
dec
dec
clc
xchg
nop
mov
pop
neg
cmp
lcall
cmp
sub
jnp
adc
out
or
popf
shlb
xor
xchg
insb
mov
or
ret
adc
adc
and
sub
cmp
f2xm1
mov
xchg
jb
ljmp
cmp
ljmp
or
lods
scas
test
mov
and
mov
pop
mov
inc
jno
or
and
jno
movsl
xchg
cmp
pop
and
fucom
xchg
push
dec
popa
mov
jnp
bound
cmp
decb
ret
mov
push
arpl
std
lahf
mov
push
outsb
shll
pop
mov
or
roll
enter
xlat
stos
cmp
bound
push
mov
leave
inc
cmc
and
dec
sbb
daa
call
sub
pop
popf
xor
or
push
pushf
dec
rcrl
push
aas
xor
push
outsl
jae
repz
mov
xorl
mov
div
and
mov
into
shll
sub
adc
mov
dec
lret
sub
lahf
repz
pop
cli
sbb
add
pop
scas
inc
push
sbb
cltd
cmp
iret
cltd
jle
cwtl
cmc
sub
adc
rolb
in
das
jp
iret
rcrl
xor
jecxz
cmp
cmp
inc
in
xchg
pushf
ja
test
mov
loop
dec
movl
inc
sub
xchg
xchg
mov
dec
dec
into
jmp
jo
int
movsl
cmpsl
add
and
scas
mov
cmp
sub
mov
and
cltd
lret
fists
jmp
scas
cwtl
incl
loope
xchg
sub
insl
dec
ljmp
andb
lock
mov
push
repz
scas
inc
xor
inc
daa
push
aad
push
xor
adcb
sub
gs
inc
std
stc
cmp
mov
shrl
dec
loop
sbb
or
sbb
fnstsw
pop
xchg
repnz
dec
inc
push
arpl
push
mov
xchg
and
cmc
sbb
jae
mov
ret
cmp
mov
popa
push
mov
sahf
daa
push
repz
fs
jnp
ret
in
fcomps
dec
lret
push
push
scas
cmpsb
out
xor
xchg
or
mov
jecxz
fidivl
nop
jb
inc
fcoms
cmp
in
sub
lock
mov
adc
jns
cs
add
jae
lea
jl
cmp
pushf
add
int
push
xchg
mov
push
aas
sbb
cmp
sub
rcr
pop
xor
loope
push
inc
push
loope
add
movsl
push
jecxz
nop
jo
lds
in
test
js
pop
cmp
push
loopne
push
and
sbb
mov
or
mov
sub
cli
push
push
pop
mov
or
jg
data16
mov
sbb
dec
adcb
lea
jb
jge
sbb
add
xor
sub
outsl
mov
sti
xor
push
cmc
or
popa
shlb
jl
pushf
jge
mov
in
lcall
roll
mov
loop
psubw
inc
lods
push
or
call
shrl
mov
leave
jno
lahf
mov
pop
fcmovnb
push
jne
rorb
das
mov
or
aas
jnp
adc
inc
cs
fstl
pop
hlt
int3
pop
loop
int3
ret
das
mov
std
or
or
in
popf
aas
int3
sarl
fnstenv
ffree
mov
mov
jb
inc
iret
jmp
int
inc
mov
cltd
lret
pop
mov
inc
outsb
mov
jle
push
into
call
cmp
mov
ret
int
or
cld
pop
lods
pushf
pop
mov
and
les
cmp
jne
ds
orb
js
inc
sbb
shrb
dec
push
cmp
mov
lcall
ja
cmc
and
adc
out
movsl
ret
iret
push
inc
jge
fsubrp
sbb
pop
xor
adc
mov
pop
mov
ret
jl
mov
mov
insl
dec
xchg
cmp
movsl
test
jb
mov
xor
and
push
mov
jbe
adc
in
inc
cmpl
and
push
and
push
pop
xor
pop
pusha
sub
xchg
xor
jmp
xchg
in
inc
ret
fimuls
in
push
xchg
nop
dec
leave
jmp
ret
stos
notb
shll
in
mov
sbb
outsb
icebp
adc
mov
lds
lcall
lret
into
sti
add
daa
xor
call
mov
daa
daa
inc
sbb
pop
aad
addr16
jb
outsb
idivb
jge
mov
lea
jecxz
or
jne
ss
fs
imul
in
inc
inc
inc
out
or
fbstp
adc
std
in
push
test
in
dec
adc
in
push
bound
jns
xor
mov
daa
loope
cmp
sti
cli
dec
or
loope
in
push
mov
adc
pop
lods
int
out
cld
or
jns
fldt
mov
dec
movsl
int
adc
mov
int
push
xor
pop
sub
imulb
mov
adc
data16
sbb
aaa
mov
fisttpll
push
loope
and
in
sub
push
out
push
sbb
test
lock
pusha
or
std
mov
test
add
mov
cs
push
fiaddl
xor
test
sbb
cltd
adc
out
xor
inc
shr
lods
mov
cmp
out
xchg
and
fimull
out
nop
pop
or
lock
mov
push
inc
xor
int
into
mov
aaa
std
pop
dec
imul
test
pop
clc
pop
cltd
lahf
stc
stc
inc
gs
xor
movsl
int
fldl
repnz
adc
je
cmpl
or
pop
pushf
sub
jmp
in
je
test
push
push
rorl
bound
sub
and
xchg
inc
sbb
cmpl
popa
or
dec
sbb
push
adc
popa
adc
outsb
rcrl
in
inc
mov
jb
in
xchg
push
adc
insl
mov
lods
jno
inc
xor
cmp
in
and
test
mov
push
sti
pop
aas
repz
cwtl
jg
and
cli
push
pop
daa
out
sti
dec
stos
hlt
pop
mov
sbb
mov
in
sbb
imul
cmp
pusha
fisttps
mov
jb
fcompl
push
and
cmp
mov
or
rorb
jne
aad
cltd
pushl
sub
jno
push
ja
cld
and
or
out
fldenv
or
cmp
mov
cmp
inc
cmpsb
into
pop
cmc
rclb
adc
push
adc
jmp
push
scas
jge
cli
outsl
mov
fsubs
jns
fldt
jbe
push
xchg
sbb
jbe
jnp
fisubl
sbb
cld
inc
icebp
mov
push
out
add
xlat
mov
movsb
lcall
lods
movsb
arpl
fistpll
in
mov
mov
xor
aad
or
add
leave
dec
loope
mov
pushf
ret
cmpsb
aaa
test
fmul
sti
or
or
mov
popa
dec
xlat
cmc
add
fistl
mov
aad
pop
rcl
xor
push
pop
push
repz
addr16
sbb
xchg
clc
xchg
js
js
inc
in
jns
jg
out
shlb
insl
arpl
mov
repnz
sub
dec
pop
js
lods
xchg
fidivs
add
adc
mov
pop
mov
xlat
arpl
out
out
fnsave
or
in
mov
aas
mov
cli
adc
popf
cmp
inc
cmc
xor
cmp
jge
mov
arpl
mov
popa
mov
sub
or
inc
sahf
insb
and
jno
jbe
and
xor
and
in
hlt
fsubr
pop
test
sbb
pusha
inc
xor
shlb
aad
imul
enter
daa
in
sbb
lret
dec
lods
mov
mov
in
lahf
jae
adc
xchg
mov
sbb
outsl
dec
or
hlt
cwtl
fwait
leave
lcall
inc
inc
cmpsl
ret
jmp
imul
testb
rolb
fadds
push
arpl
cli
jb
in
pop
dec
sub
lcall
mov
mov
or
mov
mov
dec
ret
loopne
add
outsb
adc
out
xor
icebp
fst
pop
cmpsl
cmp
les
sbbb
pop
cltd
orl
lods
fisubl
fldt
das
ljmp
std
movd
into
jb
pop
add
mov
jg
inc
and
cmc
mov
call
and
icebp
adc
cli
lret
data16
dec
push
xchg
pop
fstps
mov
push
rcl
fidivrl
in
mov
cs
sub
daa
sub
jmp
jno
fisubl
sti
fs
xchg
outsl
dec
xchg
mov
aas
adc
sbb
je
cmp
lret
cld
add
shl
jmp
lcall
adc
loopne
out
hlt
inc
cs
inc
sub
push
adc
push
in
ja
aas
scas
aas
push
pop
out
sbb
dec
stc
aam
inc
in
add
mov
cmpsb
addr16
pop
xor
std
add
daa
mov
sbb
push
les
or
dec
adc
adc
push
sub
out
pop
ss
jnp
jae
lods
push
adc
mov
dec
push
jb
sub
inc
stos
jl
pop
mov
filds
sub
aam
cmp
xchg
inc
xchg
sahf
or
cmp
mov
ret
flds
and
xchg
out
jp
fstps
mov
cltd
or
cwtl
lahf
add
faddp
sbb
loope
mov
xor
mov
sti
dec
push
xchg
sbb
out
std
cmpsb
adc
rcrb
pop
fimull
fwait
jns
jbe
into
or
clc
lahf
jno
imul
cli
add
dec
into
sbb
repnz
lret
mov
loopne
rol
adc
out
mov
sbb
mov
rcll
aaa
loope
andl
test
insb
xchg
lret
scas
push
mov
mov
loope
fsts
scas
push
cmp
mov
xchg
mov
xlat
cmp
push
or
daa
bound
sub
das
nop
dec
mulb
ret
dec
and
in
and
cmp
sbb
mov
aad
in
mov
ljmp
jo
ret
mov
loopne,pn
mov
xor
sahf
inc
fldcw
jmp
addr16
inc
repz
outsb
and
int
xchg
or
or
out
cs
and
cmp
pop
mov
je
es
shl
sbb
shr
iret
scas
dec
add
das
cmp
scas
pop
push
rol
mov
test
jle
fldcw
add
push
js
scas
push
mov
aam
test
mov
mov
xchg
shl
inc
ficoml
jne
sub
stos
cs
inc
mov
divb
das
sbb
xchg
pop
rclb
xchg
or
mov
ficoml
push
sub
pop
outsb
xor
fucomip
mov
aas
insb
sbb
ja
sbb
sbb
fiaddl
push
mov
mov
aaa
pop
in
outsb
inc
sti
daa
mov
jne
std
repz
sbb
add
dec
inc
mov
sub
xor
rolb
adc
cmp
or
lahf
and
sub
gs
xchg
jl,pn
int3
aaa
cmp
scas
and
mov
inc
sbb
pop
loopne
pop
or
sbb
fnstsw
sbb
add
int3
fisttpll
repz
lods
sbb
ret
cmp
sub
inc
sahf
fadd
movsl
xor
mov
sar
add
mulb
stos
mov
js
outsl
or
jg
or
sbb
icebp
xchg
dec
xchg
inc
repnz
push
push
mov
mov
jb
sbb
sbb
ficomps
movsb
mov
inc
pop
dec
inc
and
fldt
pop
mov
inc
sbb
rcrb
jl
inc
das
stc
sub
sbb
xchg
punpckhdq
xchg
stc
jp
js
mov
rol
mov
dec
bound
rclb
pop
dec
push
pop
je
cmp
jne
inc
in
or
sub
cmpsb
leave
mov
ja
stc
jns
sub
lds
in
pop
cmp
or
test
fldl
jne
repz
mov
cmp
adc
xorb
add
jb
addr16
clc
mov
or
int
inc
dec
push
cli
daa
xor
call
jnp
loop
popa
mov
mov
lret
and
and
loop
loope
les
xor
jp
or
jno
jno
scas
mov
clc
cmp
aad
mov
push
call
and
fisttpl
js
mov
mov
fs
rcr
mov
pop
cmp
or
movsl
iret
and
mov
cli
xor
mov
dec
dec
std
fs
push
jl
mov
add
iret
rcll
out
in
imul
sbb
cmp
mov
xor
cltd
cmc
out
fld
addr16
imul
pop
push
loop
sti
mulb
push
and
inc
mov
sbb
fsts
sub
xor
dec
idivl
xor
xchg
iret
aad
data16
push
sbb
lcall
popf
sbb
mov
sub
dec
or
push
negl
jl
mov
cmp
xor
daa
dec
daa
les
hlt
int3
ret
jno
das
mov
cwtl
jb
jge
xchg
aad
jbe
jne
or
jbe
mov
ja
xchg
sbb
jl
lods
outsb
icebp
xlat
mov
add
es
pop
adc
and
rcrl
push
mov
jecxz
or
jl
sbb
adc
push
and
leave
insb
fcoml
test
push
push
inc
adc
xor
sub
add
cmpl
mov
pusha
pop
xchg
loop
push
mov
gs
sub
fnsave
adc
mov
sarl
mov
aad
pop
cmp
movsb
insb
dec
cwtl
push
and
test
add
xor
subl
shlb
wbinvd
sbb
jmp
les
mov
jae
and
pop
add
and
pop
jmp
xchg
and
ret
ret
add
call
wrmsr
add
js
push
in
jp
push
add
sarb
jno
push
push
icebp
jo
mov
pop
cld
roll
adc
outsl
adc
movsl
add
adc
adc
mov
sbb
inc
jle
rclb
jle
mov
or
call
lods
xchg
jo
cmp
cld
xchg
inc
sbb
ret
insl
shlb
mov
jge
and
insb
adc
sahf
inc
outsb
pop
rclb
mov
cmp
xlat
jno
imul
orb
xor
mov
popf
xorl
ret
and
mov
sbb
daa
push
out
adc
sub
call
aad
jmp
dec
and
sub
xor
sub
mov
or
lcall
sub
push
clc
or
iret
pushl
dec
sub
jecxz
sti
jge
and
sbb
mov
lock
dec
popa
mov
fs
pop
push
sub
push
push
dec
int3
dec
popf
mov
sub
decl
lock
mov
shl
arpl
xor
ds
jnp
shl
dec
sahf
and
lods
cs
jbe
rcrl
mov
mov
inc
sti
rolb
cmp
mov
stc
fldenv
sbb
cmp
jnp
xchg
call
out
test
mov
adc
inc
in
sub
mov
or
pushf
xchg
push
or
cmp
lods
xor
mov
cmp
fwait
mov
test
sub
mov
adc
push
scas
cmc
icebp
jae
jp
mov
test
ret
mov
mov
test
out
in
data16
adc
movsb
out
mov
mov
aam
push
and
cltd
imul
and
nop
mov
mov
mov
add
fcompl
imul
call
imul
lods
loop
mov
mov
aad
shl
or
mov
mov
decb
sub
xchg
rcll
sbb
ret
cmp
cmpb
adc
insl
pop
popf
push
cltd
ljmp
dec
lahf
fwait
pop
push
pushf
adc
fcomip
cmp
add
int
mov
fmuls
push
jb
cmp
loopne
mulb
shll
or
roll
push
jne
cmp
cld
std
and
nop
pop
dec
cmpsl
push
inc
es
cmpsb
lea
cmc
or
jne
enter
mov
cs
or
ja
jno
pusha
and
cmpsb
dec
out
xchg
out
out
lea
fimuls
dec
jb
fists
fadds
adc
push
sub
dec
call
dec
xor
sub
fistps
cld
aad
enter
cwtl
jl
clc
inc
hlt
cwtl
pop
sub
and
int
jbe
mov
scas
jl
jnp
mov
and
sub
dec
outsb
sbb
push
or
cmp
jns
inc
push
add
push
adc
jecxz
add
mov
ret
and
cmp
mov
idivb
push
nop
or
push
mov
jp
idiv
outsb
sub
xchg
mov
je
pop
push
pop
ret
dec
test
mov
jmp
sbb
mov
and
push
xchg
cltd
fadds
loope
jnp
mov
out
jns
xor
push
mov
pop
jne
lods
js
in
push
fistpl
call
jmp
mov
cmp
test
les
or
sub
pushf
xor
mov
adc
cmp
push
adc
dec
jl
adc
aaa
imul
imul
cmp
popa
aas
jg
pop
lret
mov
dec
lcall
daa
inc
cli
pop
or
jmp
jb
cmp
push
enter
das
lods
xchg
popa
dec
dec
popf
mov
dec
fimuls
or
push
dec
push
lock
ja
cmp
fimull
test
arpl
sbb
jp
ja
xlat
or
mov
outsb
gs
and
xchg
jl
mov
int
cmpl
cmc
in
push
jp
sub
inc
or
popf
add
xor
loope
lea
inc
lcall
insb
fisttpl
scas
mov
pusha
imul
xchg
enter
add
faddl
ror
iret
mov
in
sti
stc
inc
mov
mov
jno
inc
mov
pusha
dec
jae
ljmp
shrb
add
mov
adc
cwtl
jmp
xlat
ds
in
ja
cmpsl
or
add
xor
outsl
in
sahf
mov
mov
lds
lds
add
ret
int3
xchg
adc
or
push
or
into
scas
xchg
in
loop
jecxz
pop
or
xchg
pop
jmp
xchg
inc
mulb
test
jle
imul
pop
das
int3
mov
sub
cs
aaa
mov
repz
lcall
mov
dec
cmp
add
and
xchg
lahf
cmp
cmp
es
mov
inc
xor
out
movsb
out
cmp
in
add
imul
jecxz
je
aam
imul
and
hlt
jp
popf
test
mov
int
fdivrl
inc
pusha
add
mov
mov
lcall
pop
scas
pop
test
loope
push
lcall
into
notl
and
cmp
loopne
inc
dec
or
mov
and
adc
pop
inc
lret
push
jnp
xor
aaa
std
xchg
mov
and
orl
test
inc
out
in
outsb
out
push
mov
shlb
sub
add
and
ja
or
fstpt
push
imul
inc
push
mov
lahf
test
mov
jle
loop
sti
add
ds
cmp
xor
in
mov
repz
push
cmp
sub
pusha
not
adc
cmp
dec
jne
cmp
adc
and
icebp
in
push
and
inc
adc
xchg
stos
in
dec
test
mov
xlat
xchg
sub
dec
nop
fstpl
cmc
cmp
jo,pt
pop
incl
out
push
and
je
jmp
fcmovbe
mov
lods
in
fadds
and
inc
inc
xor
push
push
sub
popa
xor
sub
xchg
push
repz
shl
arpl
in
fs
imul
jbe
in
aas
sbb
pushf
fwait
adc
ret
fcmovne
add
enter
xor
pop
imul
adcl
lahf
aaa
lcall
fcompl
pop
icebp
cmp
add
xlat
or
sar
cmp
xlat
push
lret
pop
adc
cltd
cwtl
xchg
aas
or
ret
and
cwtl
adc
shr
mov
dec
cmp
and
sub
mov
gs
ret
push
sub
adc
sbb
sub
sbb
push
lods
dec
js
push
shll
shll
lahf
idivl
inc
es
fcmovnb
dec
add
sarb
orb
adc
test
imul
les
adc
and
dec
cmp
cmpsl
inc
xchg
jl,pt
jg
inc
inc
mov
outsl
imul
clc
adc
sbb
mov
add
cmp
xchg
fstpl
pop
je
pop
or
sbb
jns
push
inc
jbe
and
mov
out
fidivrl
mov
fnsave
dec
mov
jl
in
in
clc
and
cld
pop
pop
xchg
int3
pop
aad
adc
sarl
call
movsl
mov
pop
in
ficompl
int
pop
jg
imul
test
and
sub
mov
sbb
icebp
or
ret
out
in
xchg
test
mov
push
gs
enter
int3
mov
and
fldenv
adc
aaa
fs
popf
iret
iret
inc
xchg
push
xchg
enter
rcll
pop
clc
pop
jmp
rolb
es
out
sub
cmpsl
mov
mov
das
nop
cwtl
sbb
xchg
repnz
cmpsl
pop
cmpsb
pop
sbb
pop
test
add
push
loopne
rcll
lahf
jge
aam
pop
mov
inc
xchg
or
lcall
pop
pop
cmp
notb
or
xchg
or
cmp
adc
dec
jo
dec
in
aas
jb
loop
leave
inc
andb
push
repnz
mov
aaa
scas
movsl
xorb
xchg
inc
jge
inc
xchg
popf
and
push
pushf
mov
mov
push
push
mov
and
divb
mov
push
lods
xchg
mov
mov
addr16
jbe
mov
xchg
fwait
jnp
and
mov
cmp
lret
mov
std
sbb
push
mov
push
mov
in
idivb
xchg
cwtl
and
mov
cmp
nop
ret
cltd
xorl
xor
pop
mov
xor
iret
aas
movsl
repz
push
and
repnz
jmp
test
adc
and
pop
scas
or
inc
inc
addb
imul
mov
dec
sub
sub
mov
ret
dec
cmpsb
adc
cltd
loopne
jne
in
out
fists
cmp
jmp
cli
cmp
pop
pop
pop
inc
stc
and
pop
and
mov
add
sti
sarl
sbb
adc
xchg
add
xor
jo
mov
dec
push
nop
mov
pop
inc
inc
inc
leave
lret
mov
cli
push
sub
xchg
xchg
mov
ret
sub
subb
jbe
push
jp
pushf
movsb
pop
ficoml
pop
pusha
adc
pop
or
int3
cli
sbb
jb
rorl
mov
sbb
sub
in
nop
push
sbb
and
lea
sti
and
sub
cmp
push
dec
sarl
arpl
pop
add
sbb
mov
mov
mov
mov
in
sbb
inc
lcall
mov
fisttpl
adc
push
push
mov
xchg
dec
sahf
into
jnp
sbb
mov
int3
out
outsl
aas
inc
mov
pop
cmp
sub
jmp
push
ja
pusha
fldl
jmp
inc
jae
sub
sub
jne
lcall
xchg
stos
cld
fldcw
sbb
sub
cmp
fstl
or
adc
or
pushf
sbb
adc
leave
enter
aam
ficomps
dec
cmpl
dec
xor
mov
add
in
stc
paddsw
pop
inc
hlt
or
fnsetpm(287
es
aad
fs
and
insl
cmp
loopne
jnp
push
sbb
movsl
push
sbb
je
lods
adc
mov
repz
iret
insb
icebp
inc
loop
jle
fbld
and
bound
pushf
mov
push
fsubs
sub
dec
stc
in
into
aas
xchg
cmp
mov
pop
sub
push
jl
out
cs
push
jbe
push
add
fstps
fwait
push
popf
ret
icebp
popf
shlb
push
adc
cld
mov
xor
mov
jge
lock
sbb
out
jmp
sarb
push
xchg
sub
jmp
pop
ss
data16
push
pop
int3
sbb
fnsaves
imul
xor
jae
and
push
cs
sbb
mov
mov
mov
fs
xor
jl
arpl
pop
jp
data16
jne
mov
ss
mov
popf
insb
addb
in
int
jmp
adc
int3
loope
inc
push
and
inc
inc
jb
mov
push
mov
xchg
adc
add
and
mov
mov
inc
xchg
xchg
arpl
mov
mov
lahf
popf
xchg
repz
int3
inc
mov
scas
rcr
icebp
test
fwait
adc
pushf
cmp
aad
stc
leave
sbb
mov
push
es
sbb
ds
test
jb
jg
jmp
call
fsubrp
fwait
sub
sub
icebp
test
pop
test
add
xchg
bound
stos
ret
fmull
stos
jae
push
jecxz
and
bound
addr16
iret
xor
aad
xchg
lock
imul
cmpsb
xchg
es
xchg
lea
ret
sbb
inc
push
cli
jecxz
imul
and
adc
insb
sbb
pop
and
xor
cmpsl
sahf
hlt
inc
lahf
pop
int3
fisttpll
lret
jp
fs
dec
lock
into
in
pop
mov
out
sub
ljmp
cltd
xor
lock
push
push
popa
xchg
je
pop
xchg
or
andb
adc
cwtl
faddl
testb
nop
jae
call
and
cmp
inc
cmpb
cmp
stos
inc
imul
ljmp
ret
fbstp
std
movsb
mov
xchg
sbbl
pusha
xchg
push
push
jg
cmpsl
loop
aad
inc
or
and
jae
ljmp
cmp
mov
outsl
add
test
jns
xchg
sub
inc
pavgb
cli
pop
push
pop
adc
das
xchg
lahf
je
fisttpll
loop
inc
xchg
mov
jbe
sahf
in
cmpsl
and
adc
sub
sub
and
inc
jo
incl
sbb
adc
xchg
sub
push
aaa
xchg
inc
clc
jnp
jp
jmp
pop
pop
sar
lds
pop
xor
cmp
aas
jp
xor
jg
cmpsl
icebp
push
adc
xor
mov
xor
sub
hlt
imul
mov
stos
cmpsb
mov
sub
es
mov
jmp
test
xchg
ss
gs
inc
xor
jecxz
mov
pop
imul
out
push
daa
xchg
stos
or
call
ret
ret
and
js
hlt
xchg
movsb
rcrl
callw
test
out
fldt
inc
cmc
mull
sbb
sub
inc
and
inc
add
out
xchg
lock
sbb
mov
sahf
pusha
adc
mov
push
movsb
pop
push
inc
mov
xor
xchg
out
or
sbb
addl
ret
cmp
pop
ds
inc
and
sub
movsl
dec
and
ret
cmp
sahf
xlat
dec
gs
xchg
mov
jne
pop
adc
les
out
movl
cmp
out
nop
pop
xor
dec
pop
fisttpll
dec
int
push
xor
or
test
adc
or
pop
dec
xor
test
add
xchg
inc
mov
and
insl
cmp
nop
das
dec
inc
adc
jbe
scas
sub
inc
into
aas
mov
outsb
and
and
lods
add
push
rol
adc
add
stc
hlt
pop
aam
dec
add
cmpsb
sbb
sbbl
sahf
mov
aam
in
sub
jmp
jno
ja
mov
imul
mov
mov
into
jmp
mov
adc
and
call
lods
pop
jo
das
mov
rcll
adc
ja
cli
nop
mov
ljmp
push
push
mov
cmp
lcall
xchg
mov
dec
dec
mov
sbb
stos
ss
nop
mov
sbb
lahf
cmp
mov
imul
cmp
mov
call
in
push
mov
mov
jmp
mov
fbld
inc
pop
sbb
cli
les
xchg
xor
push
mov
or
cmp
lret
shlb
add
into
aas
add
adc
mov
cltd
mov
aad
add
sbb
and
push
sbb
xchg
inc
cmpsb
add
xchg
mov
lea
jl
bound
mov
aaa
inc
mov
sbb
jmp
pop
sub
dec
inc
inc
out
mov
je
movsl
aaa
or
sbb
sbb
mov
rdpmc
stc
jmp
daa
js
pop
cld
mov
bound
sbb
and
scas
out
mov
mov
mov
fs
mov
cltd
dec
xor
and
addr16
lcall
stos
xchg
addr16
repz
sbbb
int
jno
inc
push
lahf
jne
aas
scas
jbe
adcb
mov
sbb
std
adc
jne
ja
leave
xchg
xor
add
mov
push
repnz
add
gs
mov
push
mov
scas
or
in
mov
not
dec
stos
pop
icebp
inc
outsb
and
call
jbe
push
out
call
pop
mov
sub
jo
and
rcrl
xor
or
cli
ret
and
and
xor
push
hlt
mov
notb
shll
inc
mov
icebp
int
dec
mov
pop
int
and
inc
jns
ljmp
mov
stc
sbb
testb
sbbl
mov
push
push
inc
scas
dec
out
mov
mov
push
mov
enter
xor
xchg
in
js
add
push
sbb
xlat
test
mov
imul
hlt
orl
mov
lret
xor
and
insb
imul
loopne
adc
shrl
pop
mov
aad
daa
movsl
stos
cmp
cli
leave
scas
sbb
fnstsw
cli
addr16
ret
std
testl
dec
out
xchg
mov
add
adc
sub
adcl
fmuls
pshufw
lods
iret
pop
mov
adc
aaa
push
mov
scas
add
and
dec
pop
mov
movsb
add
jle
xor
cmp
stos
dec
push
or
aam
jnp
push
jae
add
xchg
arpl
das
mov
inc
mov
mov
mov
test
cli
arpl
das
movsb
mov
lock
pushf
add
ret
cmp
mov
mov
enter
lock
fidivs
jns
iret
add
aas
arpl
repnz
dec
or
mov
nopl
cmp
cmp
cmc
movsl
jecxz
sti
sbb
mov
mov
push
adc
ret
js
inc
fistpll
nop
push
out
iret
sbb
aam
unpcklps
test
int3
int
pop
or
or
inc
mov
jl
mov
shrb
loope
gs
sarb
pop
rorb
stos
dec
fidivrs
pop
stc
mov
mov
outsb
out
dec
shrb
fwait
mov
cs
rorl
ret
es
rorl
inc
sub
fiadds
dec
les
lahf
cmc
sub
add
shrb
jge
xchg
daa
in
push
scas
int3
pop
pop
mov
xor
shrl
cmp
push
adc
rolb
in
inc
adc
jl
jmp
loope
hlt
inc
fwait
ds
xchg
fldpi
or
out
jg
or
popa
push
iret
cmpb
push
pop
out
mov
fs
push
cmc
mov
mov
adc
mov
pop
scas
or
push
int3
aad
xchg
jno
mov
nop
lahf
sahf
push
xor
lock
cs
mov
add
fs
shrl
loope
movsb
pop
xor
stos
xor
xlat
inc
dec
lea
lea
or
sub
jmp
mov
inc
and
test
in
ffree
xor
leave
adc
jmp
pop
cmp
js
push
fcmovnu
mov
pop
or
jo
or
mov
sbb
in
adc
fdivrs
push
lods
cmpsl
add
mov
repnz
gs
hlt
push
repnz
cli
std
sub
sub
push
adc
stos
ss
push
into
or
or
adc
xchg
pushf
call
mov
ret
jp
movsl
mov
cli
mov
scas
loope
xor
and
mov
rcl
sbb
scas
mov
icebp
pushf
aad
repnz
pop
or
and
test
cld
sub
add
in
xchg
loopne
jns
icebp
jno
not
pop
insl
or
fldl
sbb
and
in
stos
repz
aaa
bound
xor
loope
and
testl
stos
xor
stos
in
mov
push
cmp
loopne
fldcw
add
call
sbb
sub
adc
or
add
cmp
xchg
cld
test
les
xchg
int
mov
ret
mov
pop
xor
sub
cwtl
movsb
sahf
xchg
jnp
movsb
and
sub
lret
jno
mov
scas
push
jb
sub
ficomps
sbb
es
stc
daa
or
stc
sub
cmc
pop
push
cwtl
add
sahf
arpl
push
sahf
jg
pop
data16
jb
xchg
push
test
add
mov
sub
movsb
pop
jge
jecxz
repnz
rcr
adc
or
jbe
movb
daa
iret
std
adc
fbld
call
mov
arpl
lods
je
cmp
dec
cmp
rclb
cmp
inc
mov
and
mov
inc
mov
fisttps
imul
sarb
jmp
inc
dec
xchg
adc
scas
and
push
add
cmp
jmp
xchg
ljmp
int
jmp
cmp
mov
mov
mov
lods
shl
pop
dec
pop
mov
adc
mov
xchg
aas
mov
lds
push
aad
shrl
push
cltd
xor
int
fwait
stos
in
mov
cmp
dec
sbb
into
das
rorb
mov
mov
repz
xchg
sub
fsubrs
and
iret
sbb
int
je
lret
mov
push
mov
xor
jl
nop
outsb
lret
lcall
outsb
jg
sub
outsb
inc
xor
cwtl
adc
loope
dec
xchg
inc
mov
push
fldenv
out
in
stos
xchg
or
pop
jno
clc
add
xchg
xchg
sar
push
xchg
cmp
std
popa
ror
outsl
stc
in
lahf
pop
and
cld
filds
mov
hlt
test
push
aad
mov
lds
mov
ja
popf
into
popf
cmc
fstpl
roll
ficoms
mov
pushf
iret
cli
push
xchg
loop
add
loope
mov
in
mov
pop
test
or
filds
xchg
xor
loop
andl
ret
scas
mov
fcomps
scas
mov
leave
jl
mov
mov
cs
push
add
adc
cmc
mov
sub
lods
sahf
add
dec
and
pop
out
stc
dec
mov
sbb
cmp
andb
cmp
rol
aas
mov
mov
adc
jne
sahf
mov
pop
loop
sti
stos
leave
jno
xor
xor
push
adc
ss
cwtl
jecxz
testb
test
test
out
push
inc
fdivs
xor
rcl
daa
mov
paddq
popa
push
test
ds
mov
or
pop
jo
push
cld
adc
cwtl
dec
and
pop
adc
dec
or
or
mov
ljmp
pop
out
es
mov
test
and
ret
lahf
mov
pop
or
arpl
aam
jo
push
mov
outsb
pop
inc
mov
inc
dec
xchg
in
ret
mov
mov
popf
add
push
std
imull
outsl
cmp
adc
sub
xchg
lds
sbb
mov
or
cmpsl
add
inc
jle
cmc
inc
mov
cmp
addr16
movsb
ds
int
sti
jge
aaa
xchg
jbe
bound
and
aas
mov
mov
in
loope
mov
dec
push
sbb
mov
lret
xchg
lds
aaa
inc
lea
mov
pop
push
ss
xchg
dec
leave
insl
mov
sub
xor
jl
jne
test
jg
rcrl
xchg
mov
jg
in
pop
add
adc
rcrb
mov
xchg
cmpsb
xor
mov
mov
jae
das
out
xchg
vaddsubps
dec
pusha
xor
mov
dec
jo
fsts
cmpb
pop
cmc
test
cmp
movsl
cmp
mov
xchg
xchg
cltd
inc
jg
cltd
mov
adc
arpl
enter
xchg
jnp
aas
out
imul
sbb
test
mov
mov
inc
xchg
into
mov
inc
or
cmc
inc
jp
icebp
daa
negb
jns
mov
ret
mov
lods
cmpsb
test
repnz
jnp
ficoms
mov
push
loop
ret
pusha
cmp
mov
aam
sbb
sbb
sub
push
test
arpl
add
lds
sub
test
sahf
mov
int
mov
xor
adc
sub
and
sbb
xor
sbb
dec
mov
and
xor
movsb
push
mov
sti
mov
fnstcw
xchg
dec
andb
jmp
push
shlb
popl
jb
in
cmpsb
call
les
in
sub
and
dec
std
pop
xlat
ficoms
movsl
add
ljmp
leave
cltd
xchg
xor
repnz
adc
lret
inc
cmp
imul
push
gs
add
sub
js
jnp
xor
rorl
sbbl
imul
repz
lds
xor
push
cld
cmp
xchg
lret
and
mov
outsb
in
loop
lcall
jo
out
and
mov
and
repz
ja
xchg
push
sbbb
enter
xchg
shll
rdpmc
cmc
mov
mov
jge
lods
pusha
sti
mov
sub
and
xor
jecxz
xchg
pop
fdivs
stos
xor
cmp
test
int3
sbb
add
out
icebp
fnstenv
mov
mov
sbb
inc
dec
lcall
mov
nop
add
hlt
dec
mov
loop
inc
ja
sbb
or
xchg
jmp
ss
inc
cmp
jecxz
push
inc
ficomps
shrl
cli
pushf
pop
test
cmc
aas
leave
rcrl
pusha
movsl
test
lock
insb
sub
jne
ds
and
cld
and
stc
xchg
cmp
cmp
cld
sub
out
push
ret
lretw
sbb
jae
xlat
inc
pop
js
fstpl
sti
jecxz
mov
xchg
adc
cmp
rcrl
test
and
jbe
and
lods
leave
pop
mov
pusha
cmp
loop
dec
loop
js
adc
scas
pushf
sbb
sub
mov
pop
mov
mov
xchg
cli
xchg
and
es
jnp
fdiv
dec
out
cmc
nop
dec
aaa
adc
movsb
sub
scas
rolb
insl
mov
adcl
das
inc
jge
mov
or
dec
pop
mov
stc
jmp
repnz
jns
lods
inc
fldcw
push
ja
adc
sbb
arpl
das
pop
daa
fmul
mov
cltd
lods
test
xchg
xor
xor
fmuls
ret
mov
fdivs
in
mov
mov
adc
jp
shrl
push
sub
adc
pop
jle
push
jnp
cmc
loopne
cld
jmp
mov
cltd
push
mov
jp
sbb
or
dec
xchg
jecxz
rcr
je
xchg
cwtl
imull
mov
xchg
sub
push
cmp
xor
fsubl
jns
jle
repz
add
cmpsb
ret
sub
inc
mov
mov
cld
mov
pop
jb
dec
jne
cltd
les
jb
ret
stos
aaa
push
mov
ljmp
test
fucom
mov
rolb
mov
fisttpl
mov
nop
out
in
sarl
and
movsb
aas
stos
insl
jecxz
jle
cli
out
arpl
shll
testl
out
mov
mov
mov
jmp
dec
rorb
cld
sbb
xchg
xchg
icebp
js
jne
push
xlat
pop
adc
jmp
out
push
dec
or
push
dec
orb
int
and
nop
out
and
pop
data16
mov
fisubrs
popa
or
pusha
sti
sub
lock
cmp
adc
push
xor
inc
mov
fstl
sbb
mov
and
ficoml
inc
sub
loope
mov
imul
fst
dec
insb
jae
xlat
sahf
fnstsw
addl
jns
adc
xchg
mov
push
inc
test
dec
ret
jbe
add
jb
sbb
and
fsubrl
sub
mov
jp
mov
mov
scas
ret
mov
pop
es
repz
jns
jle
das
test
push
mov
push
dec
push
mov
inc
lahf
pop
sahf
ja
jmp
mov
jmp
push
iret
divl
sbb
dec
mov
mov
push
test
jmp
inc
or
in
fwait
mov
push
ret
mov
fcom
fists
push
rcrl
and
sub
data16
sub
aaa
mov
mov
aam
cli
push
pushf
push
sub
insb
loop
xchg
cmp
scas
inc
xchg
fildll
sub
xor
cmp
adc
push
dec
lret
hlt
adc
add
cmp
sub
xchg
ret
loope
fistpl
inc
test
daa
sub
xchg
and
ja
adc
sub
mov
or
sub
mov
test
mov
aaa
or
sbb
das
ret
pop
fsts
mov
mov
outsl
lret
std
lods
in
jne
lahf
push
icebp
cmpl
mov
jl
mov
pop
mov
fldenv
cmp
pop
push
dec
add
rcrb
mov
in
jecxz
loop
mov
and
xor
add
das
popa
arpl
push
jne
lods
lods
lods
dec
cmpsl
push
xchg
lret
scas
pop
mov
filds
push
fildll
pusha
jecxz
mov
shll
addr16
dec
mov
push
aam
xor
jp
in
stos
sarl
push
outsl
mov
and
inc
hlt
and
fnsave
or
pushf
inc
sbb
jbe
nop
adc
imul
nop
call
pop
inc
std
xchg
lret
mov
dec
mov
pop
jae
rorl
gs
sub
pop
or
add
addr16
in
mov
loop
icebp
filds
jbe
xor
and
in
je
in
ss
xchg
pop
push
pop
out
jmp
sbb
out
add
cld
shll
aaa
bound
push
sbb
cmp
push
aas
shll
rclb
insb
js
cmp
bound
pushf
orl
negb
icebp
cwtl
stc
inc
sub
or
int3
adcl
es
iret
xchg
jns
dec
iret
subl
adc
in
adc
ds
mov
dec
push
sub
dec
out
ret
pop
adc
out
lahf
mov
pop
cmp
aas
stos
add
enter
call
icebp
push
mov
shlb
in
testb
mov
sub
xor
mov
inc
push
int3
and
cmp
cmp
stos
lea
dec
mov
test
pop
test
es
cli
in
loope
imul
or
sahf
in
les
or
mov
mov
cmpsl
push
stos
enter
das
out
fdiv
xchg
push
mov
bndstx
jmp
mull
in
mov
es
lea
cmp
int3
sbb
mov
testb
cmp
add
ljmp
rcrb
mov
aam
sbb
aaa
nop
push
mov
jnp
dec
fisttps
repz
ret
rolb
mov
xlat
insb
leave
ja
jns
xchg
mov
aaa
or
jp
mov
and
arpl
mov
test
cld
push
jno
jle
mov
test
xor
or
cmp
cmpsb
sbb
jb
mov
add
lret
sbb
andl
test
shrb
loop
fucomip
pop
enter
jb
mov
fnop
daa
inc
loope
fdivrl
push
jp
sub
stos
repnz
test
mov
push
mov
stc
rcl
push
leave
fdivr
push
add
jnp
cmp
push
divb
and
xchg
movsb
pushf
cmpsb
cmp
pop
sub
and
push
jecxz
xor
sub
mov
ja
add
add
sbb
xor
xor
push
and
add
ret
mov
cltd
outsb
sahf
pop
fidivl
xor
repz
rcrb
adc
inc
jo
ret
dec
dec
test
xor
and
leave
cwtl
enter
sbb
pop
filds
cli
jge
aas
mov
push
das
je
lods
pop
mov
div
data16
and
inc
mov
mov
inc
loopew
out
popa
cmc
lret
pop
xor
in
fs
shlb
jecxz
popa
fdivr
insl
cmc
inc
subl
dec
mov
jae
cmp
out
add
sub
aaa
xor
in
movsl
xor
test
push
lds
addr16
into
mov
sub
jnp
icebp
pop
fildll
out
into
pop
clc
inc
pop
loope
xor
lret
loope
push
mov
jb
mov
mov
fadds
fcmovb
sbb
push
adc
filds
mov
popf
dec
psubusw
lods
xor
cmp
call
lods
sbb
out
sbb
push
inc
sub
pop
movl
xor
or
pop
sub
leave
insb
mov
push
cs
fnsave
int
test
into
pop
andl
pusha
fcomi
or
cmc
imul
pop
xchg
jbe
and
data16
mov
je
xor
daa
cltd
aaa
push
aaa
mov
mov
int
xchg
mov
push
mov
mov
icebp
call
inc
out
jbe
sub
lret
sti
inc
rcrb
cmpsl
pop
imul
mov
xor
addr16
dec
xchg
lahf
mov
je
insb
mov
pusha
dec
jbe
addr16
jmp
lahf
mov
repz
aaa
mov
xchg
in
ret
lahf
jbe
dec
lods
sti
mov
cli
movsb
dec
int
adc
sti
jb
mov
pusha
shll
cli
xor
pop
es
in
pop
and
call
stc
sbb
sti
cli
push
fstpt
stos
add
loop
xlat
aad
mov
xchg
inc
mov
inc
mov
push
pop
xor
sub
andb
daa
push
test
jno
mov
divb
fcompl
xchg
je
aaa
pop
push
xchg
sbb
lock
mov
testl
mov
gs
out
xor
fsubrs
dec
pushf
pop
adc
aaa
cmp
es
cmpsb
adc
xchg
cli
or
pop
fldcw
into
sbb
jecxz
or
addr16
inc
jb
out
xor
je
addr16
fucom
outsb
adc
imul
outsl
inc
xchg
cmpsl
inc
push
shrb
and
popf
fstpt
pop
lret
jae
clc
mov
adc
sub
std
xor
mov
addr16
rcrl
add
gs
pop
notb
repnz
push
scas
mov
mov
mov
ret
idivl
add
mov
jno
pop
out
out
jnp
fimull
pop
call
xor
or
cli
cmp
cmp
outsl
xor
mov
dec
loopne
out
xchg
sbbb
pop
cwtl
pop
sub
int
add
sar
push
test
movsb
bound
lahf
ljmp
cmp
lret
jo
mov
adc
and
pusha
inc
leave
rclb
cli
iret
cmp
push
sarb
imull
xor
sahf
test
adc
insl
pop
movsb
out
add
ret
and
bound
popa
mov
and
push
jbe
xchg
mov
sub
push
adc
sbb
shr
popf
jg
jp
mov
push
jbe
lods
lods
sub
xor
lock
or
lods
jmp
adc
inc
add
sti
test
mov
subl
dec
nopl
cmp
outsl
pop
enter
adc
add
ret
enter
dec
sbb
je
call
mov
pop
cmp
xchg
rorb
out
jl
xor
mov
inc
sub
movsl
movsl
nop
sbb
fs
sbb
testl
mov
xor
imul
leave
movsl
mov
mov
scas
ret
scas
sub
cmp
inc
mov
enter
adc
test
inc
faddl
out
orl
mov
sbb
dec
out
xor
mov
mov
mov
clc
add
gs
rol
inc
pushf
rcll
pushf
and
mov
cmpsl
iret
cmp
fstps
inc
pop
mov
movsb
push
daa
mov
imul
rclb
imull
jle
cmp
sub
xchg
loop
push
push
cmp
xchg
rclb
daa
lock
cmp
js
push
fs
mov
cmpsl
mov
insb
dec
fcoms
sbb
jl,pt
fadds
add
hlt
dec
loope
mov
leave
or
sbb
or
dec
xor
and
push
loop
xchg
inc
loopne
xorb
popa
push
ficompl
mov
das
scas
mov
addl
clc
jmp
lret
dec
push
pop
out
mov
sahf
cld
out
pop
mov
jmp
mov
aad
fnstcw
jne
cs
pop
stos
test
clc
cmp
jae
sbb
fstps
sub
or
daa
jbe
cmp
test
fpatan
inc
aad
pushf
scas
adc
repz
shlb
jbe
inc
xchg
ds
pop
shlb
mov
mov
cmp
inc
shll
or
fcmovnb
inc
mov
pop
into
mov
add
clc
pusha
stos
xor
out
clc
incl
xor
insl
xchg
inc
sbb
jp
mov
add
add
jge
and
and
xchg
mov
inc
mov
xlat
adc
fildl
daa
xor
hlt
adc
sub
pop
fxch
iret
les
test
xchg
pop
push
cmpsl
ret
fs
adc
xchg
add
lcall
dec
xchg
xor
add
jae
mov
dec
ja
jno
or
es
pop
outsl
push
mov
adc
jns
inc
cmp
xchg
push
mov
idivl
jg
mov
dec
aad
lea
incl
dec
push
or
pusha
mov
ljmp
fmuls
call
jo
fsubrl
lcall
pop
xor
stos
sub
xor
dec
add
in
inc
rclb
xchg
xor
sbb
xchg
clc
xor
ljmp
mov
loop
leave
xchg
cwtl
or
lcall
cmp
out
test
stos
dec
stos
jnp
add
aaa
rolb
mov
mov
pop
movsl
int3
test
lret
leave
ret
bound
ret
jmp
fstpt
aad
push
xchg
test
jae
push
out
loope
sti
sub
inc
insb
fdivrs
popa
fnstcw
jnp
jmp
and
mov
push
pop
fdivrp
cmp
imul
lar
mov
pusha
ret
pop
in
arpl
or
inc
retw
loop
popf
lahf
out
insl
fmulp
jg
inc
push
xor
mov
test
push
jno
mov
dec
or
and
aaa
mov
idivb
mov
hlt
jp
and
xchg
sbbl
test
and
mov
rclb
shll
cmp
dec
adc
clc
movsb
lea
insl
or
mov
lahf
lds
and
sub
out
clc
mov
push
lock
jne
dec
iret
inc
mov
cwtl
data16
in
push
scas
jge
incb
popa
loop
mov
aaa
mov
cmpsl
jns
inc
shll
add
or
push
push
jp
cwtl
arpl
cmp
lock
dec
dec
les
lret
adc
cmp
stos
lcall
gs
arpl
add
jns
adc
push
jl
fiadds
jb
pop
mov
dec
bound
clc
ret
dec
popf
insb
movsb
fiadds
jp
jne
pop
adc
cmpl
add
mov
shll
cltd
sti
inc
mov
insl
outsl
xchg
fwait
outsl
in
cmp
push
add
call
pusha
movsb
test
shr
add
xor
cmp
call
cmpsl
fdivrl
scas
imul
inc
outsb
jns
lea
subl
or
sahf
sub
fwait
mov
aad
pop
cli
sub
pusha
rcrb
scas
punpckldq
sbb
popa
imul
scas
fimuls
jp
ret
push
and
and
cmp
insb
xor
sti
mov
popf
mov
std
out
insl
xor
lods
or
aad
scas
add
mov
insb
jo
ds
push
shrb
loope
daa
mov
or
xor
hlt
or
mov
jmp
sub
jae
lret
push
push
mov
push
lret
jg
jb
inc
cwtl
loop
mov
and
adc
ds
call
add
xor
testl
pop
mov
xor
rorb
repz
push
jge
lret
leave
inc
mov
push
mov
mov
gs
repnz
lret
aaa
add
fwait
push
ja
ret
cltd
fdivrs
pop
push
or
cmp
adc
mov
cs
fs
xor
stc
mov
xor
jmp
pop
mov
shll
imul
out
xchg
push
inc
std
inc
xor
sbb
cmp
jl
scas
adc
or
mov
hlt
jbe
and
std
mov
push
pop
sbbb
sbb
sub
movsl
loope
mov
mov
test
lahf
scas
add
dec
cmpsb
sbb
push
mov
sub
out
mov
sub
jo
jmp
test
jo
xor
loope
mov
out
pop
nop
mov
ds
dec
rcll
mov
fcomi
jb
lret
pop
mov
mov
sub
xor
fsubl
jg
fs
fisttpl
stos
ljmp
sub
cmpsb
rclb
movsb
fidivl
cmp
cmpl
std
mov
mov
push
dec
jae
scas
leave
ljmp
or
ds
jbe
add
fwait
mov
mov
jmp
lahf
fisttps
or
rclb
out
aas
ds
pop
popf
jb
es
popf
push
mov
std
lea
push
testl
adc
fstl
mov
jp
or
push
add
xchg
scas
xchg
enter
lock
into
nop
mov
xchg
notl
mov
repz
les
push
push
jb
and
fs
jb
jmp
xchg
cltd
mov
or
movsl
or
xor
gs
aaa
das
pop
sub
cmp
sub
stos
jbe
add
jecxz
xorb
xor
stos
pop
ret
andl
xchg
mov
pop
and
cmp
fisttps
inc
test
test
jb
mov
jno
fldenv
aam
stc
test
cmp
or
out
xor
insl
sbb
sbb
push
shll
jne
cs
in
sbb
xchg
push
les
lea
cld
in
data16
inc
rclb
jge
cmc
pop
sbb
iret
xchg
hlt
dec
mov
adc
stos
movsl
mov
add
sub
cmpsb
test
rcl
icebp
mov
dec
arpl
in
outsb
mov
imul
and
imul
ds
ljmp
sahf
pop
cltd
add
jb
rorl
push
das
gs
fwait
arpl
xor
mov
xlat
sahf
andl
cs
sahf
pop
aas
push
add
and
push
in
aaa
xor
mov
inc
pop
fstl
ret
adc
cld
shrb
movsl
xchg
insb
jecxz
cmovb
fcomip
mov
int
arpl
xchg
es
stc
fwait
sbb
scas
mov
xchg
faddl
mov
mov
push
add
ljmp
dec
dec
mov
jmp
xchg
push
mov
push
ret
sbb
es
sbbb
sub
sbb
aam
dec
jge
je
call
jae
loopne
jge
cmpsb
sbb
jp
add
dec
adc
dec
push
mov
loop
inc
addb
and
repnz
or
xchg
xor
aaa
aaa
js
stos
mov
popf
dec
xlat
xchg
xchg
lds
cmpsl
gs
in
add
stc
lret
xchg
cld
idiv
outsl
xorl
mov
dec
pop
outsl
jo
int
dec
mov
movsb
jbe
jae
and
pop
pop
and
ss
je
pop
sbb
pop
push
cli
ret
aam
push
sarl
and
dec
jge
pop
sbb
jecxz
dec
ficoms
push
adc
jne
mov
sub
and
adc
xchg
sub
aaa
sub
sbb
lahf
enter
and
mov
adc
nop
mov
dec
mov
or
dec
or
xor
xchg
mov
lret
or
mov
iret
outsl
ljmp
jmp
xchg
in
push
dec
into
or
and
cmp
cmp
xor
or
bound
jb
mov
dec
and
jne
sub
mov
adc
jg
jnp
dec
ljmp
mov
mov
jo
les
push
arpl
adc
mov
push
lock
aad
dec
insl
ret
out
movl
mov
lds
adc
mov
mov
adc
and
inc
adc
jmp
fimull
sbb
mov
lock
push
jmp
cld
cmp
fimuls
pop
and
fsubr
sub
dec
xor
popf
push
inc
imull
jle
rclb
mov
scas
cmp
pop
mov
les
mov
daa
xchg
fs
mov
xor
mov
or
shll
sbb
pop
ja
ffree
sub
pop
push
stos
iret
mov
inc
rolb
jg
aad
enter
movsl
ds
je
xlat
mov
outsb
adc
push
mov
test
shll
cwtl
hlt
stos
xor
inc
or
add
test
pop
xchg
jg
movsl
or
in
movsb
push
imul
mov
xchg
daa
push
outsb
rolb
insb
mov
adc
es
push
add
pop
ss
std
lods
loop
sub
push
imul
flds
dec
xor
outsl
int
push
or
sbb
xchg
idivl
mov
jg
ss
loope
stos
push
cmpsb
mov
pop
addl
out
mov
loope
xor
scas
insb
loop
cmpsl
aam
and
push
test
es
xor
pop
stos
or
push
jns
and
xchg
ja
bound
aad
out
into
pop
xchg
mov
sbb
nop
decl
and
sub
add
gs
push
nop
push
jle
cmp
xchg
addr16
cld
add
mov
push
pop
cld
adc
push
fdivl
xor
sbb
es
pop
loop
mov
push
add
add
jp
sub
shlb
push
shl
jl
imul
mov
pop
mov
add
push
xchg
cmp
leave
movsb
lahf
jns
mov
ljmp
jg
sub
pop
ljmp
add
roll
sbb
add
pop
hlt
add
sub
xchg
xchg
hlt
push
repnz
xlat
dec
or
scas
jns
mov
push
mov
xchg
popa
push
add
jb
aam
lods
push
pop
xor
sbb
jo
outsb
fildl
pusha
call
fcomi
push
or
mov
test
or
idivb
dec
mov
loopne
cmpsb
ljmp
xor
daa
call
stos
jb
adcb
mov
mov
sbb
js
and
fucom
push
push
mov
xchg
into
mov
jbe
cmp
fxch
xor
insb
int3
jns
push
call
jno
xor
out
aas
cmp
mov
mov
jbe
mov
es
enter
fisubs
daa
out
outsl
nop
jno
lahf
add
adc
push
leave
mov
cmp
push
faddp
test
inc
xchg
mov
mov
mov
popf
mov
out
xchg
dec
push
test
push
nop
adc
es
jle
fwait
cwtl
arpl
sub
xchg
adc
push
mov
shlb
fmull
fadd
lods
das
xchg
mov
and
push
andl
inc
in
fisubrs
cmp
mov
push
xor
outsb
stc
xchg
mov
sub
imul
inc
mov
fwait
outsl
ret
in
mov
ret
inc
cmp
fnstsw
sub
js
lods
push
int3
movsb
jge
adc
inc
and
rcrb
xor
mov
jne
mov
pop
fwait
daa
xchg
cmpsb
jno
jecxz
mov
fadd
sub
push
pop
stos
mov
adc
shlb
mov
push
lock
adc
push
sbb
jnp
mov
mov
hlt
out
mov
cmp
push
lahf
sti
xor
push
push
fxch
xchg
sbb
inc
push
dec
mov
iret
add
jbe
outsl
push
jbe
sbb
push
rorb
imul
mov
rcll
push
push
enter
push
orb
cmp
xchg
data16
insb
inc
fldcw
mov
jmp
sbb
rcl
lret
mov
mov
push
and
outsb
adc
jb
cmp
fstpt
call
sbbl
stos
lret
xor
out
in
outsl
jne
mov
cmp
jne
inc
lock
lods
aaa
inc
pushf
push
neg
add
test
shll
push
ja
xorb
cs
push
mov
insb
mov
or
iret
popa
fsts
cmp
push
push
int3
jle
stc
imul
bound
pop
xor
adc
add
pop
lods
inc
jnp
xor
lcall
scas
bound
or
cld
sub
idiv
inc
loope
pop
xchg
cmp
adc
jno
sub
adc
das
cmp
insl
in
jb
bound
or
bound
pop
mov
mov
scas
aaa
or
jnp
sub
jmp
sbb
mov
call
out
add
adc
xchg
jno
pop
push
mov
mov
jae
inc
mov
dec
push
dec
mov
outsb
movsb
xor
add
xchg
into
cmp
andb
mov
sarl
mov
int
xor
daa
leave
xlat
or
lahf
lea
test
fidivl
les
mov
adc
push
adc
inc
pop
sti
xor
lock
mov
mov
in
sbb
icebp
imul
imul
stc
inc
cmp
movsl
push
cmp
mov
add
cs
shrl
outsl
cwtl
ja
or
jmp
sub
push
dec
insl
imul
push
sub
dec
cs
push
cld
rolb
jl
gs
push
adc
popa
je
jne
int
sub
cmp
bound
fldenv
repz
and
jecxz
pop
mov
ret
enter
ss
cs
push
dec
jle
fnstcw
pop
jnp
mov
lcall
push
mov
shlb
test
mov
inc
cmpsb
in
sub
sbb
jne
in
sti
mulb
lods
xchg
rcl
stos
shrl
add
scas
lods
adc
jns
pop
xor
addr16
mov
jnp
andl
insb
test
std
jne
push
jg
adc
sbb
es
adc
scas
repnz
inc
lds
jle
and
push
cmp
pop
jo
sbb
adc
cli
and
sti
mov
pop
lahf
out
cmp
mov
sahf
lret
jno
jb
pop
jl,pt
outsl
ja
mov
dec
ss
es
sub
push
stc
lds
mov
cli
pop
idivb
es
pushf
xchg
lock
add
adc
dec
scas
dec
push
push
ds
cmp
filds
push
xor
scas
rol
cmp
jne
jle
pop
pop
push
pop
rcrl
fistl
and
xchg
lcall
ds
loop
jns
inc
leave
add
pop
jmp
fucomi
xor
data16
pop
outsl
sbb
sbb
push
dec
xchg
lahf
add
movsb
add
testl
cltd
cld
pop
cmc
scas
mov
adc
aam
fs
xchg
pop
xor
mov
rolb
xor
inc
jb
jbe
aaa
aad
push
dec
insl
hlt
sbb
fimuls
movsl
in
xchg
cs
mov
sarb
pop
sbb
fidivs
push
pop
xor
mov
pop
cmp
andb
add
sub
cld
bound
dec
daa
add
mov
push
scas
aaa
mov
inc
or
movsb
incl
or
add
inc
jge
imul
push
mov
adc
mov
pop
cwtl
add
repnz
mov
ret
outsl
dec
gs
and
call
jno
pop
mov
ret
add
leave
stos
call
mov
pushf
mov
push
push
icebp
cmpsl
and
insb
addr16
pushf
fldcw
add
call
ds
ret
insb
fwait
negb
pop
xchg
bound
call
outsl
adc
fldcw
push
in
in
and
cmp
sub
xchg
mov
and
cmp
dec
nop
shrb
cmc
mov
sub
xchg
fs
fidivrl
sbb
pop
or
andb
jnp
push
sub
iret
adcb
jle
roll
popf
es
push
sahf
add
xor
sub
stc
cmc
inc
adc
or
mov
je
mov
fs
jp
jl
ficoms
or
pop
mov
fcoml
cs
in
or
stc
loop
ja
sbb
inc
gs
gs
mov
jns
pusha
es
repnz
dec
pop
orb
cmp
out
cmp
inc
aaa
loopne
inc
mov
pusha
lcall
call
stos
jecxz
or
out
push
cmp
or
imul
vmfunc
cwtl
dec
add
roll
jo
dec
xchg
mov
adc
jge
or
hlt
cmp
xor
inc
push
jno
sbb
xchg
lret
shr
inc
pop
mov
les
mov
daa
iret
push
les
cmpsl
popa
imul
hlt
xor
fs
mov
sbb
push
add
lock
jmp
adc
lock
dec
dec
sub
push
push
mov
sahf
stc
sbb
mov
dec
jp
inc
mov
mov
pop
push
ljmp
sub
mov
xor
push
push
aas
jb
mov
or
sbb
push
xchg
and
mov
cmp
dec
mov
xor
mov
dec
jnp
inc
clc
cmp
test
in
sbb
mov
inc
mov
inc
cs
in
or
adc
stos
mov
inc
xor
or
pop
mov
push
daa
sub
scas
jnp
sbb
xchg
gs
sahf
iret
mov
sub
repz
inc
mov
addr16
iret
sbb
out
pop
push
dec
fiadds
loope
pop
add
inc
add
shll
cmp
mov
xor
jp
add
dec
lea
test
roll
push
movsb
xchg
cmp
push
dec
pop
dec
push
dec
cmpl
rorb
lds
sahf
mov
add
das
jns
es
icebp
mov
fwait
push
push
lods
cmp
mov
jge
outsl
sbb
nopl
in
outsb
or
cld
frstor
cmp
push
fcomp
gs
aaa
sub
xchg
pop
lock
sub
ss
hlt
in
cmp
jnp
cmp
mov
jns
out
sbb
adc
fwait
cs
jge
cmpsl
out
pop
cmpb
mov
pop
ret
xlat
mov
xlat
std
pop
rol
pop
dec
cld
and
stc
jmp
insl
fsub
movsb
testl
push
pushf
cmp
and
arpl
jg
jae
push
shr
dec
int
jo
cs
imul
push
dec
inc
shlb
and
lods
xor
cltd
in
insb
xchg
jecxz
dec
pusha
icebp
and
in
adc
and
shll
xchg
in
sub
add
xor
jmp
call
push
adc
repz
push
repnz
lret
ficomps
shll
sbbl
cmpsb
inc
add
sbb
lods
mov
cmp
xor
icebp
pop
scas
mov
int
mov
xlat
inc
and
jge
jbe
pop
jl
mov
ret
out
adc
stos
inc
xchg
or
mov
pop
insl
and
xor
stc
movsl
push
insb
xor
xor
fildll
push
dec
je
sub
push
push
mov
or
pop
cmp
mov
mov
sbb
sub
mov
or
cmpsb
repnz
outsb
in
shlb
mov
lods
imul
das
mov
addb
pop
push
inc
incb
dec
outsl
fwait
dec
fldl
xchg
push
fwait
dec
mov
aas
fcomi
xchg
sub
sbb
jae
out
mov
mov
pop
imul
adc
cmc
xchg
sbb
xchg
jo
out
clc
in
leave
or
out
lods
add
or
inc
lcall
into
sbb
insb
test
mov
jno
cmpl
jae
xor
or
add
int
dec
cwtl
je
ja
es
clc
dec
mov
test
add
pop
push
xchg
aas
je
adc
mov
pop
insl
enter
xchg
shlb
test
add
mov
jge
movsb
cmp
shlb
push
lret
xlat
mov
sbb
and
cmp
mov
cmp
pop
add
sbb
or
sahf
sub
mov
movsl
xor
dec
push
push
lret
cwtl
jno
sbb
push
mov
inc
cmpsl
in
mov
cmp
dec
movsl
pop
mov
test
call
mov
loope
cltd
out
push
xor
insb
pop
jo
adcb
es
push
stos
int
pop
mov
add
in
in
xor
xor
lret
imulb
sub
and
lock
inc
add
push
sub
pop
push
shll
cmc
adc
imul
mov
stos
je
roll
aaa
mov
shlb
mov
in
mov
adc
popa
popfw
dec
inc
ss
sbb
xor
hlt
dec
pop
into
push
mov
inc
dec
jbe
testl
subb
mov
and
rcll
test
dec
inc
sub
ds
push
jecxz
and
mov
in
pop
push
dec
cmp
faddl
fs
mov
loopne
sub
mov
push
les
dec
std
sahf
test
xor
std
pop
imul
mov
xchg
lods
mov
and
push
ret
cwtl
sti
xor
test
icebp
inc
push
insl
mov
call
sbb
push
insl
mov
jp
arpl
mov
les
mov
hlt
lods
ds
addr16
scas
lcall
inc
jbe
dec
mov
inc
mov
inc
pop
clc
cltd
pop
jmp
montmul
cmpsb
dec
cmp
push
mov
adc
pop
sbb
mov
push
loop
lcall
push
aaa
pop
fdivrl
das
movsl
cld
xchg
mov
dec
outsb
cwtl
adc
lods
loopne
push
pop
dec
das
cmp
cmp
lods
sbb
xor
cwtl
call
push
leave
adc
adc
decb
test
mov
inc
cmp
sub
sbb
push
repnz
sarl
xor
jno
xchg
imul
scas
or
je
mov
imul
movsl
xor
jl
mov
mov
mov
subb
repnz
dec
push
in
adc
cmp
xor
test
addl
in
mov
stos
sub
jbe
fcoml
lock
inc
addr16
lds
mov
scas
mov
clc
mov
jl
pop
push
xor
iret
repz
insl
outsl
popa
jne
push
shr
aaa
cmpsl
jmp
popf
imul
dec
adc
push
lahf
incb
mov
js
jmp
rcrb
shr
rorb
arpl
and
sbb
inc
xor
pop
arpl
loop
jne
outsb
lock
cli
stos
mov
or
inc
movsb
dec
int3
pop
fdivrl
lahf
jl
fistpll
int
sahf
aas
xor
fsubs
lods
pop
mov
push
sbb
inc
stos
into
xchg
std
loope
fwait
sub
xchg
and
mov
xor
test
aaa
cmp
cmp
enter
imul
mov
lcall
push
xor
xchg
nop
and
in
mov
and
xor
ja
repz
jne
enter
cmp
push
or
lods
mov
xchg
std
or
int3
into
dec
es
mov
lds
xlat
sbb
leave
insb
xor
jp
sbb
mov
sti
adc
push
stc
jnp
cli
add
lock
nop
jge
lret
xchg
testl
insl
fsubrs
stos
cmp
adc
jne
enter
mov
fs
push
arpl
es
and
loope
push
loop
push
outsb
mov
sub
push
xor
nop
sub
jle
mov
xor
iret
xchg
push
cmp
in
lods
jno
roll
scas
mov
push
and
and
sbb
out
rcrb
push
push
mov
arpl
mov
mov
fnstsw
shrb
lock
clc
sarl
mov
xor
push
mov
inc
add
cmp
and
or
je
push
add
orl
push
sarb
cmp
int3
xlat
sub
loopne
push
dec
divb
in
pop
mov
call
idivl
push
sub
in
jnp
lods
jmp
adc
sbb
imul
sub
push
rcll
pop
imul
mov
sub
rolb
add
jo
jmp
sub
out
sub
std
daa
fcmovbe
add
std
and
pop
sub
cmc
negb
outsb
or
test
push
cltd
scas
js
or
xchg
adc
add
lods
popf
inc
rolb
js
jne
mov
inc
push
push
imull
out
or
xor
lcall
out
xchg
pop
mov
insl
seta
sti
cld
jne
pop
sbb
mov
xchg
pop
cmpsb
int3
popf
repz
lret
jmp
inc
scas
data16
inc
loope
pop
sub
sub
lock
loopne
int3
sbb
mov
pop
and
in
add
xchg
inc
in
shrl
add
lods
and
add
pop
and
std
push
push
xchg
adc
movsb
sbb
mov
mov
scas
leavew
mov
xchg
loope
mov
add
cmp
gs
aaa
push
shlb
pop
iret
ja
dec
cmp
pop
dec
imul
in
vpavgb
inc
push
push
fcoml
add
mov
cmp
imul
adc
jl
mov
add
pop
or
jbe
fistl
mov
in
jecxz
outsb
and
dec
ret
push
mov
pop
xchg
jbe
dec
xorl
imul
and
xor
out
dec
mov
xor
mov
ljmp
decb
dec
shll
nop
mov
dec
ret
leave
inc
repnz
mov
xchg
adc
ret
addl
mov
cmpsl
or
add
jl
sub
lea
add
test
aas
es
dec
add
push
in
adc
shrb
cs
or
dec
insl
fmull
or
loope
stc
pop
in
push
dec
mov
fldenv
cmp
adc
dec
fidivl
mov
push
cmc
es
testl
sbb
mov
mov
push
call
int3
insb
sub
scas
jge
test
xor
jae
inc
rcll
xor
test
pop
push
lret
mov
inc
in
shll
fdivrl
daa
mov
lods
ljmp
mov
xchg
push
loopne
xorb
pop
pop
ret
repnz
mov
dec
ss
mov
cmp
jne
std
pop
subb
lret
fs
mov
movsb
shl
mov
mov
jbe
push
jmp
push
test
lock
js
mov
fnstsw
jmp
rolb
pop
out
and
adc
mov
lods
mov
or
cmp
sbb
fidivrl
xchg
pushf
mov
aas
sbb
push
mov
insb
std
or
mov
icebp
popa
stos
aad
xchg
js
pop
mov
mov
push
fs
dec
lods
sbb
icebp
mov
cmc
xor
or
mov
fwait
xchg
pop
leave
inc
fucomip
int3
bound
dec
inc
in
stos
shll
push
ja
adc
adc
aas
insb
or
sti
into
mov
cmp
sbb
sbb
xchg
mov
xor
movb
inc
inc
enter
fucom
xchg
sahf
or
ficompl
inc
idivl
cmpl
data16
jae
sti
imul
and
add
loope
jns
jo
sub
xchg
inc
test
fstpt
lds
out
stos
orb
int
aas
fnsave
xchg
hlt
lret
jbe
dec
repnz
inc
xchg
xor
pop
cmp
cld
mov
or
lcall
pop
jno
push
mov
imul
or
dec
xor
or
mov
cmpsl
jne
ss
js
dec
insb
adc
repnz
or
dec
push
xchg
in
jbe
sub
dec
pop
mov
out
push
sbb
and
movsb
inc
and
sub
sub
push
movsb
xchg
popa
jae
lds
mov
inc
movsl
mov
xchg
mov
mov
mov
imul
addr16
in
mov
xor
xchg
mov
popa
pop
add
xchg
mov
jge
aas
ljmp
loop
lcall
mov
xor
insb
and
mov
or
cmp
jbe
cmp
daa
sub
shlb
nop
mov
pop
jae
pop
xchg
mov
and
push
add
cmpsl
push
cmpsl
push
xor
inc
in
insb
mov
pop
fimuls
sbb
into
and
fs
aaa
lods
inc
adc
xchg
mov
push
lret
imull
lods
scas
xor
lret
mov
push
lea
add
clc
add
jo
into
out
jo
push
fadd
jno
mov
cmc
loop
pusha
pop
mov
fnstenv
in
mov
test
in
push
adc
cmpxchg
and
jns
repnz
adc
or
jecxz
fs
mov
mov
cs
out
out
mov
adc
and
lret
testl
xor
aaa
in
fimull
scas
hlt
cmp
push
adc
loopne,pt
imul
jle
push
xor
mov
out
mov
in
or
mov
sbb
fwait
sarl
jle
sub
push
iret
add
mov
pop
rolb
inc
shrl
cmp
test
push
movb
ja
or
fsubrs
pusha
lea
push
jecxz
inc
jl
pop
ss
push
push
orb
rcl
addb
lret
mov
imul
mov
mov
pop
jo
fprem1
xor
cltd
jmp
call
push
cmp
movsb
or
lea
leave
adc
cmp
aas
mov
sti
xlat
xor
or
repz
cli
xchg
pop
das
imul
or
xchg
xchg
addl
lret
fstps
dec
std
xor
inc
test
dec
test
ss
ret
gs
call
add
inc
imul
jbe
ja
out
bound
aam
jno
lock
mov
lret
insb
inc
ficoms
fnsave
in
scas
in
sbb
mov
push
das
xor
orb
jecxz
adc
loop
or
lcall
les
push
mov
push
sbb
inc
subl
ja
push
fiaddl
sub
pop
and
lahf
pop
cmp
pop
loopne
insl
jno
pop
imul
sahf
roll
adc
lea
mov
pop
jo
aad
dec
jne
sbb
dec
sbb
aas
dec
jle
mov
pusha
mov
mov
movsl
dec
push
es
mov
xchg
mov
call
mov
push
xor
divl
stos
jecxz
sbb
repz
lods
jae
clc
leave
push
cltd
cltd
push
mov
mov
pop
dec
inc
mov
adc
sbb
push
push
subb
mov
nop
sub
insl
js
insb
sub
mov
cmp
insl
movsl
int3
in
dec
testl
jle
cs
jae
mov
jecxz
inc
jo
or
cmpsb
cmc
mov
cwtl
int3
xchg
pop
nop
movsb
fnstenv
jmp
pop
jl
pop
jp
pop
cwtl
mov
cmc
jno
inc
psadbw
and
push
fdivp
aaa
leave
inc
mov
and
rcl
test
cmp
cmp
push
xchg
jno
mov
push
xchg
out
fidivs
dec
ret
xchg
mov
jle
fistpll
not
addb
repz
xor
into
jmp
out
cmp
jns
cli
sub
xchg
aaa
js
lahf
sbbl
push
cmp
inc
pop
xor
push
jg
fucomp
pop
push
or
sub
jecxz
mov
fstl
mov
imul
push
popf
ljmp
sub
dec
loop
or
loop
push
push
shll
add
scas
xchg
or
xchg
jno
mov
cld
stos
pop
jae
test
adc
cs
mov
pusha
fwait
xchg
mov
xchg
sbb
cmp
data16
pop
lret
jae
add
aad
into
fstpt
out
dec
test
adc
hlt
icebp
fs
dec
clc
pusha
aam
cmpsb
sahf
in
lock
test
in
mov
pop
dec
mov
ljmp
fdivl
push
pushf
rorl
pop
mov
dec
and
dec
sub
sub
mov
adc
inc
lea
lods
mov
push
js
cmc
ss
je
imulb
jg
fs
cmp
aas
jmp
xchg
push
dec
push
cmp
jne
jecxz,pn
mov
cmpsb
fcompp
aad
and
aam
repz
or
lret
xor
cmp
xchg
pop
es
stc
or
int
push
inc
fnstenv
fwait
dec
mov
imul
mov
sub
xor
repnz
in
clc
or
lea
mov
xchg
cwtl
aas
imull
pop
jmp
jl
jns
cmpsb
jecxz
sub
scas
fldenv
and
fs
aas
imul
push
push
outsb
adc
lret
pop
iret
into
or
popa
xor
adc
in
and
es
lret
xor
rcll
sbb
sub
mov
mov
clc
add
jb
aas
cli
rorl
lret
addr16
ja
gs
std
enter
and
mov
adc
mov
cmc
pop
add
push
inc
pop
and
insl
add
daa
sahf
mov
pop
dec
add
lods
cmpsl
das
lods
push
iret
stos
or
stos
sti
bswap
mov
fimuls
mov
dec
sub
shr
jp
sti
cmp
mov
roll
mov
cmpsb
insb
and
mov
cli
mov
cmpsb
cmp
mov
jg
arpl
and
jge
push
ja
and
and
call
jmp
xchg
je
movsb
pop
leave
mov
cmpsb
cmp
xchg
fcoml
mov
or
dec
lods
into
subb
ds
data16
add
pop
ret
and
int3
fdivr
cld
stc
lret
lea
mov
dec
enter
in
addr16
push
imulb
xlat
and
push
adc
push
fldcw
or
mov
dec
mov
imul
imulb
test
xchg
popa
dec
xor
mov
push
mov
in
pop
mov
sbb
out
push
push
ljmp
out
mov
xor
ret
cwtl
dec
inc
pop
in
mov
push
sbbb
cmp
stos
orl
jae
mov
sarl
insl
xor
xchg
cmpsb
pop
mov
sbb
cmp
popl
clc
lods
outsb
test
sbb
adc
or
into
xor
fisubrs
lods
ret
cmp
xor
mov
imul
or
in
shlb
dec
sbb
jns
adc
cltd
push
cmp
movsl
mov
pop
int3
xchg
arpl
jo
push
ret
mov
push
cmp
xor
cmpsb
aam
sahf
lea
test
loop
mov
add
mov
add
scas
sar
and
or
insl
cli
mov
in
loope
adc
dec
jle
or
lock
sti
out
outsl
ret
xchg
xlat
mov
jb
in
lahf
pushf
xor
mov
cmpsb
mov
test
pop
and
int3
jmp
call
jnp
adc
jno
jecxz
and
outsb
mov
dec
xchg
lcall
add
int3
sti
push
add
cmc
test
sahf
out
fsubr
mov
mov
insl
mov
fiaddl
ret
pop
or
xor
hlt
fisttpl
pmuludq
pop
clc
lock
xor
push
mov
ds
lcall
inc
mov
dec
pop
and
adc
jmp
pop
jb
scas
add
dec
decb
fwait
arpl
adc
dec
sub
es
dec
dec
push
mov
daa
adc
adc
shll
fimull
xchg
into
mov
or
repz
cli
ljmp
lret
sbb
aas
rorl
pop
jg
ljmp
mov
and
ljmp
icebp
push
jnp
pop
mov
jmp
out
dec
cmp
dec
fildll
mov
movsb
inc
xchg
xchg
das
xlat
shll
sbb
call
and
ret
rcl
aaa
jae
pop
stos
fnstsw
hlt
fwait
aad
jnp
add
inc
stos
jne
loope
ror
test
addr16
repnz
sbb
mov
loopne
xchg
adc
gs
popf
iret
loop
xor
insb
das
xchg
inc
pushf
mov
dec
jecxz
xchg
cmp
xchg
inc
std
push
pop
mov
mov
mov
or
in
dec
es
mov
dec
std
fiaddl
cwtl
leave
mov
jne
icebp
dec
sbb
out
jp
push
sbb
mov
and
sbb
adc
push
fidivl
mov
push
mov
psubd
std
lea
cld
std
stos
stc
stos
push
mov
push
notb
fbld
in
fisubrl
in
ljmp
sahf
xchg
jo
xchg
in
push
cmpsl
test
vmread
test
aas
xchg
into
xor
push
cmp
mov
mov
stos
cwtl
jg
and
inc
sub
adc
iret
icebp
in
sbb
xor
mov
add
rorb
sub
xor
lcall
popa
mov
aam
hlt
mov
jae
iret
shll
sbb
and
inc
xchg
mov
lcall
outsl
mov
mov
push
mov
mov
jge
test
nop
shlb
fwait
sub
dec
xor
icebp
scas
mov
and
scas
out
stos
cmpsl
push
mov
sbb
call
push
sbb
adc
cmpsl
in
inc
xor
pop
ja
add
inc
ja
adc
push
sub
fldt
or
lcall
cmp
shrb
out
in
aad
mov
aaa
mov
enter
das
mov
sti
jmp
pop
xchg
jae
data16
push
xor
add
add
mov
add
inc
pop
push
out
xchg
mov
mov
mov
movsb
les
sub
popa
sbb
push
xchg
lret
mov
sub
pop
cmpb
push
jmp
pop
xor
push
xchg
clc
test
jbe
insb
adc
mov
cmp
or
push
jle
jb
cltd
or
sub
xchg
cli
ret
lret
add
adc
sub
test
lods
repz
push
ss
jecxz
int
push
ret
stos
mov
enterw
and
aaa
ja
xor
mov
jge
pop
sbb
jle
mov
adc
sti
add
adc
and
test
fdivr
jno
outsl
arpl
push
call
in
in
dec
xor
fsts
jl
xchg
leave
sbb
sahf
lods
add
and
sbb
or
mov
loopne
lds
sbb
sbb
mov
mov
cmp
outsl
outsl
mov
cmpsl
gs
add
movsb
cmpb
and
sahf
mov
lods
push
roll
xchg
notb
add
jo
push
cmp
out
pop
call
push
cld
aaa
jge
shrl
jno
stos
shr
pushaw
in
xor
mov
pop
xor
lds
sti
mov
cmp
pop
mov
aaa
fwait
int
mov
push
fisubl
mov
xchg
ud1
cwtl
add
xor
loope
addl
and
dec
popf
outsl
popf
fwait
inc
loope
fsubs
pushl
testb
stos
push
push
es
je
mov
icebp
or
repnz
mov
icebp
mov
push
ljmp
fidivrs
fdivs
inc
pop
mulps
jno
bnd
ja
mov
adc
add
aaa
int
inc
jae
mov
loope
add
iret
push
rcrl
icebp
fcoml
xchg
or
push
fcmove
or
popf
call
xor
inc
mov
xchg
or
inc
test
daa
outsl
bound
cmp
inc
add
xor
jge
sbb
sti
lahf
clc
cmpsl
das
stos
jl
xor
inc
sahf
aaa
lahf
and
lahf
stc
les
lahf
mov
test
test
jmp
cs
lret
lods
ror
xor
scas
jmp
cld
mov
mov
adc
subl
mov
mov
push
fmuls
ficompl
push
cld
push
dec
add
mov
pop
iret
call
pop
test
bswap
shl
out
pop
test
movsl
mov
sbb
push
mov
orb
aam
cld
push
aam
xor
mov
mov
xchg
movsl
ficompl
mov
pop
inc
bound
cmp
out
mov
aaa
psadbw
es
and
dec
stc
lock
jmp
cmc
or
dec
add
sbb
movsl
or
adc
sub
pop
mov
roll
or
add
sub
adc
and
mov
mov
mov
adc
jmp
adc
sub
mov
and
popaw
pop
pop
imul
cmc
lock
rcrb
and
fidivrl
jle
add
sub
cmc
add
mov
or
in
iret
cmp
sahf
sbb
into
push
test
cmp
pop
add
lcall
mov
daa
jae
sbb
pusha
or
sub
jmp
lret
sbb
jmp
fstpt
and
mov
int
xchg
icebp
dec
pop
push
pop
ds
lret
mull
scas
inc
popf
adc
js
push
dec
jo
sub
lahf
push
dec
cmp
inc
mov
out
data16
out
sub
mov
aad
dec
mov
mov
lret
dec
mov
cmp
cmp
or
dec
mov
cli
xchg
inc
iret
ljmp
dec
scas
sub
jg
pop
push
cld
cmc
sbb
stc
out
dec
iret
lds
aas
xchg
push
jae
aaa
and
shl
sbb
xorb
test
fiaddl
push
mov
add
scas
inc
lods
lret
mov
fildl
mov
mov
jle
aam
mov
push
scas
mov
adc
les
cmpsb
jl
mov
addb
mov
cmp
pop
leave
lock
inc
or
and
das
add
jl
in
dec
xor
and
adc
and
xchg
push
pop
lea
sahf
mov
and
shrb
cltd
jp
mov
mov
or
cmc
jge
xchg
loop
and
jp
in
jns
mov
ret
jno
cwtl
inc
shrb
nop
gs
or
adcl
scas
pop
int3
mov
in
out
dec
stos
mov
addr16
mov
roll
sub
cltd
push
jae
xchg
cli
pushf
add
fsts
mov
and
ss
push
cmp
and
clc
stos
cmp
xor
ret
lahf
scas
and
dec
cltd
add
sbb
sbb
ss
mov
pop
pop
and
iret
pop
mov
or
out
daa
push
vpavgw
loopw
fsubl
lock
xchg
xchg
imul
daa
push
jae
mov
mov
mov
xchg
jmp
rolb
lods
iret
adc
add
jecxz
out
loopne
or
pop
xchg
repz
sbb
sbb
icebp
mov
out
ror
cmpsb
imul
repnz
clc
test
jl
sbb
js
mov
inc
test
mov
mov
shlw
insl
xchg
test
add
rol
inc
push
sub
cmc
mov
cmpsb
in
rolb
fldl
repnz
roll
jecxz
cld
jmp
xchg
mov
imul
icebp
ljmp
sbb
mov
or
test
int3
jno
int3
mov
push
out
jbe
mov
pop
mov
dec
xor
mov
xchg
or
lds
mov
mov
push
int
or
push
xchg
lods
lods
dec
aas
lds
icebp
mov
adc
push
push
rcl
sahf
pop
das
call
pop
test
sbb
sbb
cmp
dec
add
fidivs
les
jl
out
aam
cmp
cld
xchg
mov
jge
cwtl
dec
mov
es
imul
adc
testb
shll
arpl
sub
adc
or
lahf
xor
leave
push
adc
jge
aad
cmp
xchg
or
pop
ret
jge
sarb
xor
call
jbe
mov
adc
mov
mov
pop
out
mov
out
in
subl
mov
inc
in
xchg
mov
or
inc
data16
inc
sub
push
movsb
fs
aad
inc
inc
add
mov
es
out
iret
push
jmp
adc
loopne
xchg
hlt
dec
sbb
call
cli
pop
cld
and
lahf
fidivs
in
dec
fld
jne
js
jnp
lock
out
lods
jno
fstl
fists
xor
into
push
adc
mov
push
pop
pop
jnp
and
sbb
out
dec
pop
rorl
scas
mov
js
mov
in
mov
mov
ljmp
in
or
dec
fmuls
xor
pusha
aad
loopne
push
mov
cmp
aaa
aas
das
adc
popf
pop
prefetch
jb
mov
stos
lds
out
iret
dec
out
and
jge
sub
andb
add
xor
imul
in
mov
xor
scas
mov
inc
or
int
sarl
daa
pushf
push
pop
les
test
pusha
sahf
jle
and
xchg
nop
cmp
cli
adc
es
sub
adc
push
sub
arpl
jne
sub
jbe
ficompl
scas
sbb
int3
xchg
xor
sbb
and
fs
xchg
icebp
int3
inc
into
cmp
cmp
mov
add
jno
outsb
shlb
or
inc
adc
mov
pop
adc
xcrypt-ecb
cmpsl
rdpmc
sbbb
or
sti
adc
xchg
pop
xchg
pop
scas
mov
adc
cs
sub
lods
int
movsl
aam
mov
cli
dec
cmp
sbb
ds
scas
testb
lahf
rclb
ljmp
push
add
sbb
and
fistpll
and
sbb
add
jnp
sbb
sub
addl
pusha
jmp
repnz
repnz
pushf
je
mov
jp
xchg
jnp
addr16
imul
mov
add
jl
lds
dec
sub
ror
pushf
adc
leave
xlat
xor
pop
ret
mov
imul
sub
out
or
cmp
mov
inc
movsl
aad
jl
mov
dec
mov
cmp
icebp
cmp
mov
lret
adcl
xor
mov
js
cmpsl
rorb
mov
or
jnp
or
test
lret
test
xchg
jp
mov
xor
out
xchg
decb
lret
dec
pop
leave
mov
mov
add
fistpll
push
pop
adc
pusha
push
push
jbe
pop
or
push
jmp
xor
shl
inc
shll
mov
jo
in
sub
ret
sbb
cmp
inc
add
pop
add
and
ficompl
inc
fcomps
jl
int3
fldt
jl
cmp
daa
int3
push
inc
pop
push
sub
divb
into
or
add
mov
sbb
xchg
add
push
jb
out
sti
xchg
icebp
fildl
xchg
adc
dec
icebp
sub
imull
mov
mov
mov
in
cmpsb
aas
daa
sbb
sarb
cmc
loope
fstpl
mov
jbe
mov
test
mov
push
cli
stc
into
loopne
add
mov
push
ror
pop
jnp
fsubs
xor
push
loopne
cmp
pop
cmc
pop
out
lds
hlt
mov
mov
dec
clc
mov
mov
jno
mov
fcompl
dec
lcall
inc
dec
lds
push
push
mov
push
ret
dec
pushf
addb
add
jo
mov
imul
addb
lods
loope
cmpsb
cmp
rcrb
add
cmp
jmp
lcall
ss
xchg
sti
lret
stc
ret
outsb
call
test
icebp
add
adc
fiadds
xor
jo
push
outsl
cmpsl
loopne
cltd
sub
mov
stos
mov
insl
inc
out
adc
fdivs
iret
sub
stos
test
shll
sbb
clc
sbb
push
lahf
insl
bound
xchg
adc
dec
sub
enter
jmp
inc
jbe
pop
cmp
gs
lret
or
push
mov
into
mov
popa
lret
lds
mov
add
inc
sub
or
in
out
inc
pushf
mov
shrl
mov
nop
aaa
mov
arpl
fidivs
pop
xor
mov
xchg
sarb
mov
mov
inc
cmp
lahf
mov
stos
lea
mov
push
aam
xor
imul
cmp
xor
push
sub
pop
adc
dec
mov
clc
cld
js
and
mov
out
cmp
dec
loope
data16
xchg
fcmovnbe
or
lods
dec
mov
or
out
cmp
inc
push
rcrl
dec
lret
in
xor
or
fdivr
sbb
pop
mov
inc
in
popa
pop
add
popf
jl
pop
adc
rolb
test
movsl
and
subl
mov
sub
shrb
sbb
sub
leave
inc
fs
imul
push
lahf
mov
adc
icebp
int
dec
imul
sub
jns
dec
call
xor
aad
idivl
cld
ret
lcall
call
ja
adc
cmp
call
out
mov
or
shlb
cmpsb
mov
xchg
sete
sahf
ss
jl
stc
jg
ja
xor
addr16
add
sbb
mov
jp
arpl
int
call
imulb
pop
bound
push
aam
fstpl
xor
test
pop
addb
and
repnz
pop
cwtl
loopne
je
mov
movsl
stc
inc
adc
inc
bound
popf
pop
clc
loope
pushf
jae
testb
adc
xchg
sarb
add
push
sti
jle
decb
outsl
cmp
xchg
lds
movsb
adc
jp
sarb
cmp
push
cld
mov
push
and
inc
push
fstl
pop
outsl
hlt
push
cmpsb
int3
fdiv
sahf
pop
and
adc
cwtl
rcr
out
outsl
loop
aas
jbe
ret
dec
inc
test
negl
lods
sub
cs
sbb
out
mov
sti
outsl
jbe
test
movsl
fldl
pusha
sti
and
lcall
push
jno
mov
fs
jle
ret
or
pop
add
clc
xor
xchg
pop
fstps
scas
lds
mov
mov
orl
mov
cld
out
sarl
daa
je
test
hlt
fldl
std
xor
inc
mov
cmp
in
sub
pushf
sbb
sahf
jge
lret
faddl
testb
movsb
lcall
xchg
cmp
sub
xchg
jl
in
pop
mov
arpl
push
out
test
or
dec
xchg
sti
pop
push
loop
dec
pop
mov
shlb
ret
mov
popa
lds
aas
lods
inc
or
and
pop
mov
mov
and
pushf
dec
out
stos
adc
add
cmp
scas
xchg
push
sarl
cltd
int
pop
pop
mov
inc
pop
jp
movsl
inc
push
stos
inc
mov
divb
dec
dec
mov
rcr
push
iret
aad
push
cld
orb
mov
popf
inc
in
shrb
repnz
adc
fmul
push
int3
iret
xor
jo
imull
mov
pop
mov
adc
and
xlat
ret
push
rcll
jno
stos
xor
cmp
bound
mov
pop
mov
add
sub
mov
stc
mov
jmp
mov
shl
dec
mov
fcompl
les
mov
inc
aam
xlat
pop
cwtl
add
shll
mov
xchg
fildl
subl
mov
and
cmp
js
pop
add
outsl
jns
mov
mov
test
mov
and
fnstenv
mov
clc
fdivs
loop
hlt
lret
sbb
ljmp
adc
or
testb
insl
push
jnp
int
out
inc
jge
pushf
jp
and
mov
int
repnz
jnp
je
shlb
push
adc
sub
sahf
sbb
std
or
pop
ficoms
cmp
adc
ja
sub
cwtl
aad
or
jle
data16
nop
cmp
icebp
dec
adc
add
movsl
mov
imul
add
icebp
fildll
jmp
insb
fbld
sbb
add
push
pop
shlb
jno
pop
dec
add
pop
lds
iret
sub
mov
pop
jae
xchg
mov
movsb
xor
hlt
pusha
push
adc
leave
dec
sbb
sub
clc
jnp
cmp
je
push
cli
adc
pop
xor
push
mov
hlt
jecxz
fidivs
xor
repz
cld
notb
ret
dec
push
lds
push
in
mov
mov
jnp
dec
and
nop
pop
in
cmp
lock
std
mov
movsb
test
loopne
popa
outsl
jp
push
outsb
rclb
and
inc
enter
dec
cwtl
cmc
out
aam
sbb
shl
aas
scas
push
inc
jl
jle
inc
add
adc
fildl
sbb
addr16
mov
pusha
dec
jge
les
dec
cmp
adc
hlt
repnz
adc
cmc
mov
not
mov
fiadds
adc
loopne
and
cmp
sub
out
cmp
pop
mov
xchg
xchg
in
jae
aad
das
fisubs
push
dec
outsl
add
push
cwtl
mov
pop
sub
lods
and
inc
data16
insb
ret
lret
inc
adc
jne
push
out
icebp
xor
pop
pop
ss
inc
pop
sbb
in
jb
xchg
mov
clc
mov
shrl
addb
loop
xor
dec
out
js
inc
aam
dec
mov
in
dec
jp
dec
nop
sbb
pop
sti
rcrb
pop
fidivl
mov
orb
lret
filds
sbb
sub
mov
xor
fwait
jno
std
xchg
fxch
loopne
nop
sub
jbe
sub
fwait
push
neg
mov
test
inc
mov
repnz
xor
and
cs
jne
loope
leave
push
adc
fdivrl
inc
mov
add
adc
and
icebp
std
jae
mov
jne
xor
cmpsb
aad
and
jmp
sahf
movsl
pop
subl
addr16
mov
xchg
aam
adc
mov
pop
mov
bound
dec
pop
xor
nop
push
mov
scas
inc
mov
hlt
cs
cmpsl
in
inc
sbb
aam
cmp
sub
xlat
out
jne
push
das
imul
push
or
mov
lea
xchg
mov
fs
lods
ds
sbb
test
mov
loopne
jns
sbb
data16
loope
jp
pop
daa
jo
std
cmp
xchg
shlb
mov
dec
leave
sub
jbe
stos
and
fsubrl
mov
mov
filds
mov
arpl
int3
cltd
sbb
fbld
push
cli
scas
insb
movsl
loop
sub
xor
xchg
popa
in
jns
sub
daa
push
or
and
stc
jmp
insl
and
pop
popf
pop
xchg
mov
push
xor
jmp
mov
data16
mov
sbb
addr16
negb
pop
mov
mov
jmp
roll
dec
in
xchg
xchg
lea
push
iret
lret
sbb
push
data16
mov
das
dec
mov
or
xchg
mov
scas
or
pop
mov
mov
push
pop
sarl
fdivrs
or
lcall
pop
mov
add
xchg
sbb
mov
jmp
or
flds
xor
fildl
jge
in
jmp
test
cmp
int
cli
mov
xchg
shr
outsl
ljmp
adc
add
mov
pop
and
call
inc
test
inc
in
sarb
xlat
sub
push
in
clc
pop
mov
je
mov
inc
sbb
or
adc
pop
adc
insb
mov
fcmovnbe
or
lods
std
cmp
pop
pop
jne
mov
add
or
sub
and
popa
scas
or
add
xchg
pop
mov
test
incb
dec
sub
cmpsb
cld
in
out
xchg
jb
xorb
push
sbb
lahf
nop
aas
mov
subb
enter
test
mov
les
xor
mov
pushf
scas
sub
pushf
stc
je
icebp
xor
js
sub
push
add
pop
fldl
in
and
jp
test
ret
jmp
loopne
leave
jbe
xor
fs
outsl
sahf
fcmove
jnp
jo
inc
insb
xor
arpl
mov
in
inc
jle
push
or
lcall
push
imul
ljmp
xlat
cmpsb
shl
push
stos
in
push
cmp
mov
scas
pusha
fdivl
inc
cld
fbld
lock
ds
xchg
adc
xchg
cmp
mov
jge
ljmp
test
popf
mov
das
push
mov
mov
aaa
std
fistpll
test
andb
cwtl
sub
cmpsb
into
xchg
fldl
daa
ljmp
dec
adc
xchg
push
jno
pop
sub
fsubrl
push
mov
fstl
xor
fildll
fdiv
xchg
les
push
insw
in
jno
and
mov
stos
sub
dec
mov
jle
fnstcw
negb
lods
loop
insb
push
mov
bound
fnstenv
mov
mov
aad
andl
pushf
fidivrs
sbb
into
jne
mov
jb
sbb
movsb
mov
fwait
mov
dec
outsl
out
fstpt
mov
push
lods
jns
es
xchg
insl
arpl
sub
or
in
xchg
xlat
in
cmp
gs
int
pusha
ja
add
mov
jmp
loop
push
bound
sub
bound
clc
xchg
test
xchg
cmp
sbb
mov
mov
fwait
cs
push
sti
out
scas
stc
xor
arpl
pusha
xor
fistps
cmp
mov
sti
push
es
jne
and
shll
push
dec
cmovs
ja
mov
and
inc
lock
inc
fsubl
dec
mov
jge
xor
jbe
mov
popf
mov
inc
adc
arpl
push
lret
imul
inc
test
out
scas
jp
test
mov
mov
es
inc
xor
push
cmc
fmul
xchg
es
push
repnz
sahf
pop
or
ss
outsl
mov
push
dec
out
fldenv
sbb
push
sbb
scas
jno
scas
pop
lret
xor
push
insb
xchg
and
out
xor
sub
lods
xchg
jb
ret
imul
pop
fidivs
iret
mov
fcmovu
stc
mov
lcall
mov
fstpt
outsb
mov
inc
movsl
repz
out
scas
js
mov
lods
dec
jle
scas
fcom
push
push
sbbb
push
dec
cmp
add
in
shrl
std
and
test
dec
bound
xor
dec
inc
pop
repz
aam
xchg
fucom
push
test
arpl
fisubl
sbbb
mov
pusha
data16
notb
push
mov
dec
cmp
mov
push
jmp
das
outsl
mov
push
in
push
sbb
stos
xchg
sahf
lahf
sbb
sbb
ror
push
int3
cld
in
cmp
mov
and
mov
aam
inc
jo
fwait
loopw
sbb
mov
test
mov
stc
jle
xchg
pusha
adc
repz
es
les
xchg
test
mov
or
sub
loop
outsb
jge
cs
pop
pop
sbb
xor
call
push
jg
cmp
mov
add
pop
das
and
bound
push
mov
inc
leave
in
add
iret
mov
mov
scas
les
xchg
cld
rorb
leave
movsb
xchg
add
cwtl
jg
stos
nop
xor
into
xorl
xchg
ljmp
mov
xor
lock
cmp
sub
mov
shll
call
pop
add
insb
aam
fdivl
jmp
mov
repnz
aad
mov
sbb
outsb
or
pop
pushf
jnp
dec
pop
sbb
xchg
adc
cmp
jle
push
xor
scas
sbb
xor
test
dec
sbb
imul
test
cmp
jne
xchg
sti
mov
repnz
insb
or
pop
jb
jo
scas
cmp
sub
jo
int3
das
push
cli
int3
push
pushf
sub
out
int
and
aaa
cwtl
push
cmp
gs
cmc
outsl
pop
in
cmpsb
shll
and
pop
subb
aas
or
icebp
aaa
add
les
inc
cmc
popa
iret
mov
data16
or
add
imul
cld
xor
pushf
sbb
mov
hlt
addl
clc
push
shrb
movsl
mov
jl
sub
add
popf
pop
pop
leave
pop
jb
mov
mov
aaa
cmc
iret
mov
fildl
adc
mov
adcb
xlat
xchg
pushf
mov
xor
cmp
loop
lock
xor
mov
stos
xor
js
stos
xor
sahf
sbb
push
xor
loope
push
pop
les
cmp
in
inc
call
push
cli
dec
or
imul
lret
loope
inc
dec
insb
pop
and
iret
ja
lret
mov
inc
mov
dec
mov
out
cmpsb
mov
fldz
inc
enter
jecxz
inc
outsb
xchg
xchg
into
shll
cmp
push
add
add
pop
cld
out
outsl
cmc
enter
mov
push
inc
xchg
mov
pop
or
xchg
sbb
fisubrs
nop
dec
test
fisubs
out
ret
mov
hlt
push
pop
sbb
mov
mov
cmp
std
jg
sub
pop
pop
fiaddl
daa
push
testl
scas
or
jbe
add
jmp
adc
repz
in
mov
mov
lcall
sub
cmpsl
ret
adcl
flds
daa
jns
jnp
mov
dec
js
sahf
lcall
sub
jmp
inc
das
shld
jb
cmp
push
push
inc
repz
fiadds
add
loope
scas
popa
adc
jecxz
insl
push
inc
cli
int3
jnp
popa
dec
pop
xchg
sbb
sbb
and
push
insl
out
ss
jmp
and
mov
push
inc
cmpsb
dec
shr
decb
cmpl
mov
js
push
add
jae
mov
repnz
lret
jbe
sub
fcmovu
lea
jge
in
mov
ss
movb
je
add
jae
push
push
fisubrs
fwait
pop
push
add
stc
roll
pushf
std
push
dec
push
ja
sub
incb
dec
adc
and
mov
outsb
inc
mov
dec
inc
shll
arpl
mov
mov
pop
je
dec
cli
gs
lret
inc
sbb
lea
lret
add
ja
arpl
lea
test
cmp
aad
or
fstl
mov
aas
in
or
dec
add
loope
ret
rclb
mov
pop
inc
add
mov
ljmp
xchg
adc
pushf
jecxz
insb
sub
pop
ljmp
mov
lahf
aad
add
push
cmp
sbb
dec
and
mov
ret
dec
adc
jae
sub
mov
addr16
ds
xchg
aam
lcall
aam
pusha
xchg
insb
iret
neg
mov
popf
mov
add
ficomps
roll
aas
push
lods
stos
dec
mov
dec
fisttps
ja
push
nop
dec
sbb
dec
add
jbe
cmp
mov
out
insl
sarl
lret
fbstp
imul
sbb
xor
fisubs
xchg
imul
aas
jle
xorb
lods
and
sbb
cmp
das
inc
rorl
and
cltd
jmp
cmpsb
sarb
out
sub
cltd
sub
mov
and
mov
adc
dec
mov
bound
mov
mov
inc
call
or
jle
repnz
nop
cltd
xor
inc
int3
aad
sub
inc
pop
mov
pop
repnz
dec
stos
insb
subl
jns
popf
push
adc
lret
add
mov
sub
or
add
addb
pop
jno
fidivl
addr16
dec
lds
ficoml
sbb
ja
mov
dec
scas
test
mov
sbb
dec
out
cmp
cld
inc
or
mov
pop
cld
jns
int3
pop
push
pop
iret
xlat
outsl
adc
jge
mov
outsl
out
out
aad
jae
int
mov
int
mov
cmpsb
cmc
test
sbb
or
and
rcr
aaa
pop
inc
mulb
call
and
mov
mov
cld
sbb
sbb
mov
ficoms
and
sub
mov
jo
mov
fs
addr16
ret
fwait
or
imul
and
das
test
push
cltd
loopne
testl
ljmp
lret
sbb
dec
jecxz
repz
adcb
movlps
xchg
and
or
lretw
je
movsb
in
out
xor
xchg
inc
pop
or
and
push
mov
cmp
sbb
ds
fs
subb
movsl
jo
sbb
lcall
or
std
pop
mov
loop
inc
push
xor
dec
sti
mov
lret
aaa
mov
out
das
repnz
test
loope
popa
in
xchg
pop
arpl
popf
xchg
cld
xchg
cmp
fbld
cmp
mov
adc
lods
rcrl
hlt
ss
sbb
enter
lea
push
nop
aam
xor
pop
push
pop
inc
or
xchg
and
push
jo
cmp
jae
ds
xchg
fildll
push
add
mov
es
jge
xor
mov
jns
loope
imul
push
or
rcll
cld
jbe
call
mov
xchg
adc
test
mov
popl
adc
mov
cmp
jne
inc
cmpsb
mov
lds
mov
ret
rcrb
mov
add
push
jg
test
inc
jl
insl
push
clc
out
dec
lods
call
xor
lods
push
cmpsb
clc
loopne
ljmp
in
adc
jne
pop
or
push
in
xchg
popl
push
out
xchg
je
dec
and
cmp
cmpsl
ror
sub
dec
int3
mov
in
or
mov
ss
ret
mov
in
mov
insb
cmp
or
mov
mov
push
cmp
mov
jns
arpl
dec
mov
jle
sub
jo
rcrb
pushf
sar
adc
xor
or
and
fbld
cmp
shll
cmp
sbb
mov
push
sti
inc
push
das
imul
and
jae
or
and
xlat
jle
dec
outsl
pop
shlb
call
stos
dec
mov
xchg
ja
push
cmp
rol
shr
inc
cwtl
or
sbbl
lahf
dec
das
inc
fs
jle
xchg
ficoms
add
push
push
popa
or
xchg
xor
inc
adc
addr16
pop
xor
fwait
xor
les
sub
cmp
jnp
sub
pop
cli
test
or
or
rorb
fnstcw
int
and
stos
inc
aas
loopne
ror
aaa
fadd
adc
dec
movsl
stos
enter
stos
aam
out
rcrl
mov
lods
in
cmp
push
cmp
mov
pop
and
out
lds
test
or
sbb
sarl
pop
loope
imul
cli
cli
popf
ret
pushf
xor
mov
in
aad
test
dec
fadd
sbb
jae
xor
push
add
lret
mov
and
xor
aad
lret
fmul
fiaddl
sub
aaa
pop
orl
repnz
movsl
insb
cmc
push
mov
cltd
cmp
loope
and
ljmp
movsl
or
sarb
int3
leave
lds
test
lahf
lret
dec
lahf
dec
mov
sbb
cltd
je
jo
or
xorl
test
xor
aaa
mov
jg
sbb
aaa
mov
xor
nop
movsl
mov
sub
scas
ret
test
mov
lds
shll
inc
sbb
aad
dec
popf
in
push
cwtl
out
and
and
cwtl
push
xor
sub
xor
in
nop
adc
pop
shlb
in
xchg
rcr
popa
lahf
fdivl
jg
or
cmp
push
and
cmp
dec
rcrb
movsb
dec
nop
push
je
mov
or
pushf
das
mov
fcmovb
popf
dec
jb
dec
jg
loopne
push
in
jecxz
mov
sbb
jae
push
xchg
leave
pop
mov
stc
sbb
xor
cmpb
sub
mov
scas
xchg
jge
scas
stc
das
jae
mov
adc
cld
mov
sbb
scas
inc
movsb
stc
sbb
sti
jge
push
push
xchg
movsb
adcb
mov
fistpll
in
xchg
rorw
pop
cltd
shll
cmpsb
mov
adc
pop
pushf
xor
cmpsb
add
mov
icebp
lds
xchg
jl
add
pop
xor
orl
jge
loopne
adc
dec
ud2
mov
pop
and
jno
cli
lds
loopne
scas
mov
pop
and
xor
mov
dec
out
inc
push
or
jnp
incb
mov
mov
daa
loop
mov
leave
lahf
stos
dec
lahf
pop
das
sbb
shlb
and
push
jg
sub
bound
repz
aas
and
scas
mov
mov
push
ja
dec
mov
mov
aas
mov
or
pusha
sub
sbb
mov
ljmp
fdivl
inc
add
lret
jbe
mov
push
jg
aad
mov
cmpl
lfs
xor
cs
ud2
popa
push
inc
fsts
jbe
ret
lret
dec
mov
jmp
icebp
sbb
xchg
dec
cld
stos
clc
call
std
mov
adc
xor
mov
lock
test
fcompl
add
sub
adc
sbb
jne
idivb
pop
pop
push
dec
mov
mov
xor
xor
mov
add
sub
ret
fyl2x
cmp
add
ljmp
inc
rolb
sub
or
jge
add
jnp
mov
out
inc
pushf
add
out
aaa
pop
jp
and
or
ja
xchg
imul
int
mov
aam
xchg
scas
testb
push
aaa
pushf
in
xor
ja
sub
repz
ljmp
inc
imul
dec
jge
push
stc
jp
aad
repnz
sbb
jle
xchg
pop
insb
mov
dec
push
mov
or
mov
push
jno
sub
mov
adc
cmp
mov
mov
scas
mov
lret
and
les
movsl
add
aad
sbb
or
xchg
xchg
mov
cmp
xor
dec
call
inc
fcmovnb
stos
leave
dec
stos
lcall
fistpl
xchg
cmp
jns
out
add
add
int3
mov
repnz
shrl
test
mov
push
lods
lret
cli
jnp
or
fmul
arpl
ret
push
and
push
lds
inc
fisttpl
sub
cld
push
inc
cs
shll
adc
sub
xchg
das
jo
dec
rorl
mov
icebp
xorb
or
sbb
hlt
pop
imul
xchg
fimull
aam
rep
mov
hlt
in
dec
lock
jno
cltd
flds
xor
sahf
sahf
pop
dec
or
xchg
push
ljmp
xchg
stos
push
inc
jb
movsl
loopne
xchg
xchg
lea
and
fadds
inc
out
sbb
jne
mov
jns
loop
sbb
stc
inc
fstpt
push
lret
mov
rcll
lock
enter
cmp
push
mov
hlt
xchg
mov
push
pop
sahf
push
add
push
lret
scas
fcomp
mov
sub
in
sub
mov
arpl
or
xchg
enter
test
loop
push
mul
xchg
mov
jnp
pop
rol
loopne
fstpl
data16
mov
test
add
add
fildl
pusha
sub
dec
jge
and
mov
cmpsb
fs
cli
or
sbb
lcall
test
loope
or
addr16
movsl
shrb
mov
int
sub
std
call
sub
stc
les
dec
dec
mov
lcall
pop
cltd
xchg
mov
push
shr
push
push
dec
lods
lds
pop
inc
loopne
push
ss
or
sar
ss
push
fiaddl
mov
out
ljmp
jbe
fadd
cmp
dec
clc
out
scas
xlat
lds
mov
insl
pop
cld
jno
loop
mov
mov
or
loop
loop
or
out
scas
pop
loope
xor
ret
outsb
iret
mov
pop
or
shl
and
and
leave
push
xor
sub
andb
jae,pn
and
shll
ret
jmp
mov
popl
xor
jmp
popa
lods
and
loop
pop
outsb
mov
test
mov
and
jns
inc
add
dec
add
cltd
jne
popa
push
fstps
popf
and
faddl
ds
repnz
inc
out
adc
lret
leave
and
xchg
dec
add
scas
insl
and
std
mov
jmp
icebp
xor
mov
dec
dec
pop
push
mov
adc
insb
in
sarl
sub
repnz
cli
std
mov
adc
aad
ljmp
pop
adc
jmp
push
adc
notl
mov
aam
mov
dec
shll
jl
sub
std
mov
adc
mov
push
std
dec
dec
sbb
xor
out
test
lock
stos
inc
hlt
pop
mov
outsl
xchg
and
addl
lcall
mov
lcall
filds
inc
ljmp
mov
das
dec
xor
or
dec
add
shr
pop
out
mov
in
fptan
popa
fdivrl
imul
mov
jle
xlat
push
std
sub
fistpll
mov
dec
lret
sti
and
pop
cmp
jnp
sahf
das
test
mov
iret
lods
or
push
out
repz
mov
and
xchg
aas
adc
test
iret
popf
pop
push
fisttpll
lcall
std
inc
inc
mov
js
jnp
cmpsb
sahf
pop
cwtl
mov
pushf
push
fstps
fimull
dec
lock
xchg
jg
pop
pop
in
out
mov
cmp
adc
int
mov
in
mov
loop
sbb
lret
push
sarb
incl
sub
cwtl
or
data16
add
fsubr
cmp
inc
decb
jmp
loopne
xchg
add
and
arpl
and
sub
fs
mov
push
push
lds
insl
push
sub
pop
jo
pop
mov
or
in
xor
pop
sub
sub
iret
mov
in
jle
or
push
lahf
jge
or
pop
call
add
cmp
ljmp
int
lret
mov
outsl
mov
push
inc
xor
pop
ja
or
jl
cmp
xor
aas
jne
mov
xor
out
mov
mov
add
or
and
shll
xchg
ds
lds
pmaxsw
or
pusha
mov
dec
or
popl
out
push
and
repnz
dec
cld
mul
sub
add
add
mov
popf
aaa
int3
sub
push
test
popa
aas
jns
add
cltd
add
lret
cwtl
lds
cmp
fadd
es
in
xchg
jg
movsb
testl
push
dec
inc
mov
int3
jecxz
or
xor
pop
jp
insl
mov
scas
test
mov
loope
jg
fadd
xor
jge
push
fs
add
mulb
dec
sub
and
je
repnz
pop
mov
mov
testb
inc
ja
pop
adc
pop
jecxz
shlb
cmp
lods
xor
les
sti
mov
enter
mov
mov
cmc
sub
in
mov
or
inc
and
sbbl
push
and
pusha
test
jmp
and
enter
aaa
pop
cmc
xor
dec
out
jecxz
pop
lret
in
adc
mov
gs
cmp
orb
sarb
jo
push
dec
int3
dec
lret
in
adc
pop
cmp
xchg
mov
and
sub
fsubr
and
add
push
popa
pop
fldl
add
loop
inc
add
fwait
or
mov
insb
stc
and
xor
ds
inc
clc
and
xor
pop
fnstsw
inc
mov
loope
or
jecxz
fistps
fs
hlt
cli
shl
push
fidivl
inc
aas
mulb
ret
aas
out
cwtl
adc
mov
dec
pusha
cmc
sbb
jmp
arpl
out
ds
cmc
pop
mov
pushf
push
mov
jcxz
mov
or
mov
xor
sbb
test
sub
or
sub
out
mov
outsl
push
mov
hlt
inc
jnp
dec
sbb
es
jecxz
iret
push
scas
xchg
sti
cmp
gs
ja
lods
inc
aam
imul
xchg
scas
es
jae
inc
lret
lods
and
pop
fildll
adc
xchg
jmp
movsl
dec
rcrb
arpl
cmp
xchg
pop
mov
movsb
jno
mov
jge
and
mov
jge
nop
std
push
or
inc
mov
inc
pop
pop
xchg
xor
aas
xor
push
inc
mov
enter
jne
ja
test
imull
inc
iret
fimuls
maxps
mov
or
or
das
dec
sti
dec
push
aas
xchg
bound
push
jae
nop
xchg
cmp
mov
jae
pandn
dec
and
lods
jmp
and
in
xor
jae
push
sbb
mov
outsb
iret
jge
push
cs
inc
out
jo
clc
lea
pushf
mov
aaa
xor
and
jge
insb
fildl
popf
dec
das
pop
lahf
ficompl
out
gs
and
and
mov
out
mov
fs
test
dec
fisttps
ret
aas
test
and
mov
sbb
test
daa
mov
pop
jge
out
out
dec
test
xchg
mov
popa
pop
or
pop
mov
dec
or
cmp
lret
dec
mov
orb
sbb
or
mov
sub
fdivs
out
push
lret
mov
xor
jo
jge
push
cwtl
fwait
mov
out
ds
sbb
rorl
pop
push
roll
enter
insl
test
imul
mov
add
push
pop
pop
cmp
or
lret
stos
popa
gs
rcr
xor
add
xor
xchg
dec
sarl
int
je
gs
enter
test
pusha
fnsave
dec
push
ret
cwtl
xor
mov
or
jg
stos
cmp
mov
xchg
jnp
pushf
or
mov
inc
jbe
ss
aaa
lret
jb
cld
adc
mov
mov
hlt
movsb
bound
fbstp
add
call
xor
mov
cld
mov
jp
inc
mov
jg
aam
cmc
push
sahf
ret
in
mov
push
les
xchg
nop
inc
int3
sti
repnz
pop
bound
mov
sub
je
je
hlt
xor
and
jbe
fildl
cmp
iret
testb
or
imul
dec
lock
mov
data16
dec
push
adc
fildll
in
and
int
fstpt
xchg
adc
stc
xchg
jle
xor
insl
shrb
stos
jg
orb
push
jbe
mov
mov
orl
cwtl
pop
clc
out
xor
or
repnz
sub
insl
jp
and
dec
inc
sub
xchg
in
vlddqu
lret
xchg
cmp
and
inc
je
repz
jnp
push
ja
push
clc
pop
sub
repz
lahf
insb
jg
movsb
ret
and
cli
lret
leave
movsb
push
push
std
dec
push
mov
int3
rcl
pushf
mov
push
ja
aam
pushf
shll
xchg
ret
pop
andb
or
fbstp
add
push
jns
inc
enter
mov
xor
stc
cmp
imul
les
mov
loop
push
jle
xor
aas
stc
jmp
add
mov
jle
js
sahf
mov
imul
mov
ret
stos
push
mov
icebp
xor
xor
sub
adc
add
in
arpl
popa
movl
repnz
sbb
lods
pop
outsb
pop
mov
add
pop
pop
sbb
cwtl
jecxz
lea
stos
loopne
stos
hlt
and
xor
daa
cmp
lods
mov
stos
xchg
pop
pop
mov
fwait
jmp
call
inc
xchg
pusha
clc
dec
push
add
xchg
push
sahf
in
mov
nop
daa
dec
fucom
rcrb
pop
xchg
pop
fcom
mov
es
pushf
add
stos
int3
add
fadds
xchg
or
or
push
mov
or
sbb
lahf
ds
iret
aad
cmpsl
add
int
push
mov
and
xlat
icebp
sub
mov
mov
cmp
cli
mov
cwtl
stos
pop
fwait
ret
xor
outsb
fwait
dec
mov
test
mov
xchg
and
adc
push
xchg
movsl
mov
repz
push
adc
xchg
pushf
jbe
dec
cs
mov
push
cmp
fstl
inc
cmc
nop
flds
popf
add
xor
cld
mov
stc
or
pop
jecxz
scas
popa
or
movb
inc
dec
pusha
dec
mov
jb
imul
loope
add
inc
mov
es
clc
inc
insl
stos
mov
aas
cwtl
sub
cs
sbbl
aaa
pop
jmp
sbb
add
repnz
bound
xchg
repnz
ret
or
rolb
sub
es
lea
sti
lods
dec
pop
lods
lret
pop
dec
jl
and
mov
fmull
jp
fs
icebp
jae
popf
icebp
mov
dec
test
sbb
lret
fcomp
xchg
andb
mov
or
push
or
cwtl
push
cmp
sub
add
mov
mov
push
mov
mov
out
je
push
int
cmp
shr
adc
fsubrs
and
xor
in
filds
cld
and
or
std
rcrl
iret
lea
aad
xchg
in
stc
cltd
pop
shr
mov
iret
dec
or
ss
sbb
rep
pusha
pusha
int
mov
out
hlt
xchg
sahf
jl
cmp
enter
imul
and
scas
jns
cs
nop
hlt
std
xchg
and
adc
ss
mov
stos
stos
jne
cld
push
mov
ds
push
xor
mov
out
jne
arpl
mov
popa
ss
out
les
lock
rcrl
notb
inc
icebp
adc
fsts
mov
push
or
push
mov
or
adc
pusha
pop
out
xchg
xchg
int
data16
jno
das
xchg
jg
xor
fwait
shlb
and
imul
lods
mov
mov
jp
mov
xchg
loopne
mov
inc
pop
xchg
mov
mov
push
xchg
xchg
push
out
xchg
xchg
add
push
adc
lods
adc
mov
cmp
adc
lcall
std
pop
mov
xchg
add
inc
or
leave
pop
or
aad
test
in
dec
loopne
mov
jo
lods
test
mov
loop
testl
icebp
mov
addr16
dec
iret
pushf
sub
mov
xchg
ds
movsl
pop
roll
enter
repnz
ret
insl
xlat
dec
test
cmp
dec
dec
fs
cld
pop
push
jne
arpl
aas
sub
pushf
daa
frstor
iret
dec
cmpsb
xchg
push
jne
lret
add
sub
bound
adc
and
fldl
pop
mov
mov
ret
aas
dec
mov
xor
mov
cmp
mov
pop
xor
xor
rcll
cmp
inc
in
jle
mov
xchg
xor
les
dec
insl
ret
mov
push
int3
daa
out
aad
es
dec
or
cmp
pusha
arpl
cmp
and
inc
jmp
xor
inc
pop
sbb
mov
aad
adc
lea
pop
dec
fucomi
loop
mov
cmpl
shlb
pop
call
sbb
test
lock
dec
mov
js
xor
mov
dec
pop
pop
dec
and
mov
pop
mov
jge
out
mov
mov
lahf
cmpsl
jp
std
mov
sub
lcall
stos
xchg
shrl
imul
inc
sarb
cli
xchg
pushf
and
xorl
and
sub
mov
scas
mov
mov
fldl
mov
mov
dec
pop
jo
cwtl
and
pop
orb
mov
sub
and
notl
sti
call
xor
mov
fwait
pop
jno
mov
inc
lds
fsubl
sbb
daa
insl
inc
in
add
stos
outsl
test
in
ret
pop
cmovns
push
jo
arpl
fbld
push
add
idivl
fdivs
mov
lcall
cmp
and
gs
push
out
clc
fdivs
sti
mov
popl
out
sbb
add
in
cmp
outsl
mov
rolb
adc
cmp
arpl
mov
adc
ficoms
insb
iret
leave
cmp
cmpsb
cmp
pop
call
xor
movsl
imul
pop
and
dec
mov
in
push
divb
in
push
pushf
sub
sub
mov
leave
outsb
in
scas
inc
xor
dec
addl
xchg
rcrl
gs
andb
jne
data16
inc
test
in
inc
pop
cmpsb
sub
jae
jl
std
and
js
setb
mov
std
adcb
lea
inc
repnz
sub
in
xchg
xchg
rcll
dec
sbb
jle
dec
mov
cmp
leave
dec
jbe
push
pop
add
test
aas
lds
stc
dec
aaa
mov
enter
pop
mov
in
cmpl
sbb
dec
jg
inc
mov
je
and
pop
enter
cltd
into
jae
lea
addr16
push
inc
fdiv
fisttps
je
call
xor
xchg
cmp
dec
xchg
cmp
jmp
fbstp
add
mov
mov
inc
fidivl
cmp
pop
or
popf
repnz
adc
xor
nop
mov
call
aaa
pop
movsb
mov
mov
pop
out
out
mov
mov
jle
xchg
or
inc
add
les
cmpb
pusha
scas
and
mov
fnstenv
cmp
arpl
daa
dec
lods
fdivr
sub
iret
insl
jb
and
pop
leave
sbb
aad
adcb
mov
ret
rcll
fcomps
jno
repz
aaa
sbb
out
jecxz
xor
mov
arpl
fsub
ret
or
stos
cmp
fsubrs
orl
jae
adc
xchg
and
inc
mov
cmp
xchg
jne
int
inc
lea
xorl
mov
rorl
sahf
mov
and
pop
dec
fisttpl
mov
aaa
cmp
lret
in
xchg
sub
push
imul
sub
or
mov
bound
dec
mov
loopne
sarl
xor
mov
sbb
test
mov
mov
mov
repz
xchg
addr16
xor
xchg
stc
out
push
adc
mov
push
outsl
scas
pop
dec
adc
cmp
int
jns
outsb
add
movsl
test
insl
jb
not
jl
push
xor
aas
mov
dec
aam
add
jno
push
rorl
jl
adc
adc
hlt
cmp
jmp
xor
mov
pop
mov
ljmp
xchg
sbb
mov
scas
xor
sub
mov
mov
mov
and
add
shlb
push
sbb
int
aam
mov
push
pushf
push
fdivrs
into
imul
lds
cmp
shll
add
inc
dec
dec
scas
mul
jnp
in
in
hlt
push
popf
xchg
sub
negl
jno
mov
cs
popa
call
lods
mov
xor
push
mov
popa
inc
inc
dec
popf
inc
fbstp
mov
jb
cmp
lcall
cmp
push
mov
push
lock
dec
cmpsl
cmp
jge
push
les
add
dec
ret
lea
lea
scas
add
lods
fidivl
inc
or
nop
mov
mov
jns
arpl
popf
stc
jle
push
xchg
sub
dec
es
test
ret
push
rcrb
cmp
mov
mov
fdivl
mov
dec
popf
mov
jp
test
std
mov
inc
mov
mov
insl
repnz
mov
les
jge
daa
inc
ret
ja
fwait
imul
sub
out
inc
pop
mov
shll
inc
testl
inc
adc
xchg
add
int3
shll
stos
je
mov
mov
inc
roll
mov
add
xor
cwtl
inc
sti
pop
mov
and
outsb
clc
xor
push
popf
cltd
mov
test
pop
mov
cmp
dec
xor
push
test
xor
dec
xor
mov
shrl
out
mov
adc
and
mov
pop
dec
shlb
addr16
das
pop
outsl
fdivp
xor
mov
xor
jne
push
cmpsb
hlt
sbb
add
xlat
lret
and
push
mov
call
xchg
jp
leave
add
je
shlb
push
mov
testb
jge
inc
dec
pushf
aas
mov
sub
gs
mov
pop
data16
lock
dec
arpl
jmp
sbb
jle
cmp
push
stos
loope
pop
pusha
dec
jbe
outsb
mov
xchg
daa
lds
push
sub
call
fstpt
in
cltd
mov
dec
cmp
lahf
mov
inc
out
addr16
in
pop
icebp
fnsave
shll
pop
cltd
out
xorl
sti
xchg
fwait
sbb
xor
fcoms
inc
es
sti
shll
ljmp
repz
insl
pop
es
pop
inc
dec
add
xchg
aas
add
ret
xorb
cwtl
in
out
data16
lcall
int3
xchg
mov
aam
sarl
xor
xlat
sbb
push
nop
adc
mov
je
inc
fcmovnu
lock
or
push
adc
out
or
xor
xchg
cmc
add
pop
je
mov
or
je
lds
push
test
sub
out
sahf
jnp
xchg
mov
push
lock
sbb
push
inc
lds
idivb
inc
mov
lcall
mov
lods
bnd
adc
xchg
out
push
cli
xchg
cmpsb
sub
jge
movsb
xchg
leave
add
push
mov
mov
dec
jl
sbb
inc
stos
sbb
ss
aaa
pop
addr16
fisubrl
std
es
add
and
sbb
ds
xchg
push
pop
lods
push
and
cmp
push
sbb
scas
pop
inc
push
push
cwtl
mov
roll
push
inc
movsb
and
icebp
mov
mov
pop
lret
out
sub
xchg
cwtl
or
xchg
push
mov
xor
insl
jmp
and
shll
test
test
testl
pop
aaa
cmp
mov
and
stos
pop
mov
cmp
push
pop
xchg
idivl
cmp
hlt
mov
jae
hlt
lds
push
pop
call
punpcklwd
xor
daa
jle
mov
test
jnp
popf
insb
in
adc
push
test
mov
mov
fs
hlt
std
mov
xchg
cld
lea
add
add
jne
add
cmpsb
and
ss
xor
daa
jmp
cs
ret
sub
lret
mov
push
sti
fcomps
daa
lea
andl
jge
mov
push
push
sbb
adc
mov
cs
inc
ss
xchg
ret
push
ss
aas
ss
and
add
jp
xor
aad
lock
loop
ret
fidivl
jae
pop
sbb
cltd
sarl
addl
pop
mov
cld
cmpsb
shll
pop
ret
test
jmp
or
imul
aas
push
fiaddl
xchg
cmc
inc
jo
add
cwtl
jno
fcom
add
mov
outsb
cmp
mov
inc
fcomps
push
push
xchg
es
addr16
mov
xlat
xchg
mov
jbe
dec
mov
xchg
arpl
scas
dec
inc
mov
fistpl
test
mov
push
mov
sub
cmp
xor
mov
xchg
sub
push
ljmp
lret
inc
aas
jne
lock
movsl
push
scas
mov
xor
jb
mov
in
gs
ret
pop
fisttps
cltd
shlb
lcall
sahf
lcall
leave
shrb
sahf
add
aam
add
push
bound
fcomi
les
xor
mov
jno
into
or
inc
in
sub
cmp
outsl
jl
cmpsl
mov
xorb
xchg
sub
pop
xchg
jg
fisttpl
xlat
jg
cmp
xor
and
xchg
adc
adc
fs
sub
int
mov
and
dec
dec
pop
mov
imul
adc
out
bound
xor
rorl
jns
push
xor
add
aam
inc
sub
jmp
xchg
jl
iret
push
xchg
xor
pop
sub
out
add
xor
sbb
mov
cmp
outsl
or
aam
std
ss
inc
lret
sbb
mov
out
jmp
push
shlb
popf
cltd
xchg
out
sub
out
jno
out
cmp
or
in
jg
pusha
mov
inc
or
hlt
ret
insl
leave
pop
push
fnstcw
sbb
fadd
iret
lea
inc
and
mov
dec
and
stc
xchg
mov
js
sub
sbb
adc
and
insl
ds
mov
pop
mov
dec
sbb
dec
and
stos
stos
lds
add
xor
inc
stc
push
push
xchg
or
out
jae
cwtl
adc
pop
and
ds
push
mov
icebp
lret
mov
daa
xchg
test
gs
lret
jecxz
xor
sub
out
pushf
push
iret
push
into
test
addr16
pusha
pop
push
pop
pop
in
jmp
addl
mov
lea
xchg
xchg
mov
testl
adc
cli
imul
lret
clc
jbe
push
mov
push
mov
pop
sti
xchg
xor
icebp
xchg
sahf
jno
call
in
push
jecxz
mov
jnp
out
cmp
pop
lods
test
jb
rcl
movsl
sub
sti
cli
mov
add
mov
fdivs
lahf
adc
lahf
js,pt
test
push
mov
sbb
mov
mov
lock
push
and
call
mov
xchg
sub
mov
pop
jo
ret
loopne
sub
mov
roll
or
dec
call
out
test
sbb
es
xor
popf
jns
push
das
xlat
fstpt
jnp
mov
repz
into
jbe
cmp
xor
mov
repnz
inc
cmp
pop
lret
hlt
aad
mov
into
cmp
leave
push
aaa
sbb
shrl
cmc
adc
nop
jecxz
or
dec
jbe
jecxz
inc
fcom
inc
aam
ret
push
or
jnp
jne
xchg
lea
dec
add
push
div
or
push
test
scas
push
push
out
fidivrs
adc
das
mov
mov
inc
sbb
fcomps
sub
mov
inc
stc
mov
or
ret
add
adc
push
inc
es
jp
stc
dec
push
idivb
adc
lods
mov
pop
push
jno
or
mov
and
repz
scas
aam
xchg
inc
push
in
out
mov
stos
cmp
and
lcall
stc
test
repnz
inc
out
or
movsl
mov
cld
mov
scas
inc
lods
lock
cmp
fstl
ja
jg
popf
adcb
aam
adc
mov
push
lods
lds
jne
repnz
adc
xchg
jno
mov
aas
mov
xchg
sbb
cli
shl
xchg
sar
stos
out
dec
push
xchg
mov
xchg
pop
mov
fldt
call
out
sub
mov
outsl
and
les
mov
js
test
mov
cmp
cltd
adc
fisttps
aam
mov
push
movsl
pop
gs
cmp
shll
push
fisubl
xchg
cmpsl
xchg
fisttpll
mov
adc
call
cmp
fsts
adc
push
dec
inc
mov
or
cld
movsb
movsl
and
outsl
and
imul
loopne
les
sbb
push
movsl
xchg
mov
das
jge
xchg
iret
mov
test
lea
pop
lock
js
dec
sub
jmp
packssdw
jmp
xchg
mov
xor
xor
push
push
mov
sbb
push
repnz
shl
mov
test
mov
mov
aaa
cld
ret
pop
pop
add
xor
aas
dec
subb
push
mov
xchg
lret
push
fwait
sub
pushw
mov
adc
push
or
cmp
or
adc
cmp
pop
jnp
pop
lcall
push
pop
push
std
loop
mov
mov
ret
push
test
push
push
xchg
adc
pop
popf
and
adc
sbb
pusha
mov
es
cmp
xchg
loopne
and
std
call
push
jle
ror
dec
rorl
cli
call
pop
push
fwait
pushf
pop
xchg
test
jecxz
test
cwtl
sub
fistpll
mov
and
movsb
pushf
fdivrl
mov
mov
xchg
adc
test
ja
ret
pop
ss
rcrl
inc
repz
push
je,pt
or
adc
dec
repz
in
adc
addr16
cs
repnz
aad
or
inc
xlat
sbb
push
pop
adc
xor
push
jb
push
sahf
call
jge
adcb
xchg
xchg
insb
fldl
add
pop
outsl
inc
loopne
popa
pop
jge
dec
push
push
js
repz
mov
mov
adc
jge
movsl
push
jbe
lret
lea
push
add
mov
aad
lock
push
es
out
pop
sub
test
xor
ja
repz
clc
pop
add
cmp
fsubs
enter
or
mov
mov
bound
jnp
jo
xchg
addr16
xor
daa
push
mov
push
inc
outsb
dec
lret
in
insb
roll
xchg
in
inc
roll
imul
stc
xor
mov
push
add
mov
xor
lods
popf
and
push
jmp
xchg
adc
out
push
iret
int3
mov
cmp
xchg
lds
in
or
cld
lret
or
cmp
es
not
ds
mov
sbb
fs
xor
stc
popl
xchg
inc
out
pop
int3
add
jmp
addl
jnp
xchg
jmp
enter
lock
mov
aam
shrl
push
mov
sbb
pushf
mov
fildl
gs
mov
add
inc
sbb
pop
sub
cmp
adc
or
lods
lods
mov
movsb
leave
in
push
xor
popa
and
divl
xor
ds
mov
mov
sbb
shrl
lret
imul
push
adc
clc
into
inc
adc
xchg
test
scas
mov
and
dec
data16
or
push
push
outsl
mov
pushf
mov
xchg
and
sub
test
inc
xchg
inc
and
lods
cli
in
push
imull
nop
push
arpl
push
mov
and
or
rorl
push
imul
xchg
mov
jmp
and
push
or
pop
in
inc
ljmp
mov
cmpsb
insb
loope
push
cmp
pop
inc
out
lret
stc
mov
xor
imul
les
outsl
inc
cwtl
nop
out
pop
inc
test
dec
inc
mov
test
mov
mov
test
shlb
jae
and
push
xchg
mov
test
mov
fidivrl
add
add
inc
repz
xor
inc
idiv
sub
pop
adc
push
stos
in
mov
jg
push
xor
ret
stos
popa
cmp
push
aas
int3
pop
push
push
jg
sahf
cmpsl
dec
pop
jmp
mov
mov
sbb
mov
negb
in
dec
sarl
mov
cltd
or
out
movsb
test
insl
dec
adc
pop
and
cs
fmul
aaa
jno
push
xor
fistpl
je
movsl
cli
in
xor
lcall
fcoml
xchg
adc
mov
mov
ja
sub
xchg
ficoml
inc
out
mov
adc
movsb
lods
loopne
push
mov
pushfw
mov
add
or
iret
inc
insb
sub
xchg
int
xchg
push
mov
inc
stos
xchg
out
imul
pop
in
inc
or
jle
repz
sub
enter
testb
stc
mov
mov
clc
and
cmc
out
sbb
call
inc
ficompl
pop
sub
nop
or
sarl
sub
test
add
int3
adc
cmp
lock
lods
xor
nop
add
je
pop
gs
inc
sub
jge
add
dec
sarl
loope
aad
fstpl
call
popa
test
mov
adc
xor
add
and
adc
jns
push
test
xchg
sub
stos
sbb
out
sbb
pop
loope
cmp
ret
mov
aam
pop
ret
cmpsl
sub
scas
in
mov
not
ret
test
ret
sub
ficoml
arpl
stc
lods
xor
jecxz
cmp
mov
outsb
add
or
jmp
out
test
scas
cmpsl
mov
insb
lret
icebp
js
xor
cmp
pop
das
js
push
jae
and
outsb
adc
xor
mov
dec
push
dec
cmpl
sarb
and
jns
hlt
and
loopne
aaa
mov
add
out
xlat
shll
push
sub
add
sarl
add
loop
push
call
push
xor
cmp
add
push
mov
push
mov
gs
dec
inc
adc
or
mov
cmp
out
stos
mov
jecxz
iret
mov
cs
or
aam
add
or
sbb
ficompl
mul
add
mov
cmp
es
adc
cmpsl
rorb
push
aad
je
outsl
cltd
out
xchg
call
in
push
ds
push
int3
lods
mov
enter
mov
call
jne
mov
flds
sbb
or
ret
outsb
call
cmp
gs
dec
adc
cld
call
adc
movsl
sub
adc
in
pop
decb
test
lcall
scas
xlat
out
cmp
push
repnz
test
notb
jno
pop
jp
mov
jns
jmp
add
fwait
je
leave
inc
pop
xor
cmc
cli
or
mov
testl
mov
xchg
adc
or
ja
out
xor
shlb
nop
xchg
or
mov
aas
nop
shr
rcr
sbb
out
push
xchg
push
mov
aaa
scas
jmp
jmp
in
push
sub
jnp
cmp
daa
dec
mov
pushf
lret
sbb
pop
arpl
adc
add
mov
sahf
ret
mov
inc
xchg
and
aaa
adc
in
popf
add
test
arpl
xchg
fidivs
cltd
dec
xor
fbld
mov
pusha
leave
lret
inc
into
iret
aas
sub
test
xor
jae
mov
mov
inc
cmp
push
mov
and
cltd
loop
test
mov
and
outsb
cmp
daa
jp
aam
mov
in
rclb
lds
in
pop
andnps
sbb
mov
dec
dec
je
sti
sbb
sub
mov
pop
and
mov
pop
les
pushf
jmp
pop
or
das
in
dec
pop
jl
cmp
cs
and
shlb
push
jg
inc
adc
jge
faddl
sbb
mov
test
stc
ja
adc
push
cmp
fcoms
jp
out
fsts
add
and
and
dec
testb
jo
les
sub
mov
mov
or
pop
arpl
cmp
insl
jmp
iret
jnp
int3
inc
pop
xchg
add
pop
mov
test
cmp
lret
movsb
xor
jno
cs
int
mov
jmp
sub
mov
mov
mov
dec
push
and
pop
inc
lods
repz
es
into
in
ret
test
aad
lret
repnz
in
test
push
nop
mov
fwait
mov
and
jecxz
and
test
lret
mov
adc
push
add
mov
mov
cwtl
and
inc
outsl
and
dec
push
fdivrl
fwait
xor
popf
ss
adc
orb
ja
dec
ja
dec
bnd
pop
test
adc
push
xor
adc
insl
xchg
inc
pop
inc
lahf
or
shlb
fwait
adcb
mov
outsb
fmuls
jns
pop
shr
xchg
icebp
fnstsw
jg
mov
ret
xchg
out
outsb
push
jne
adc
adcl
lret
data16
and
fs
lock
jne
xchg
xlat
mov
add
push
sar
sar
fs
hlt
sti
cmpsb
ret
ljmp
jecxz
inc
stc
cmp
and
stc
pop
outsb
pusha
fcoms
mov
push
cmpsb
sahf
ret
pop
jae
out
test
cmp
inc
sbb
rolb
jno
arpl
cmpb
push
call
js
scas
addl
mov
or
mov
xor
pop
xchg
int
sbb
push
iret
push
leave
out
repnz
pop
ret
dec
mov
cmp
add
xorl
or
mov
jge
mov
push
and
xor
xchg
push
jg
inc
push
or
xor
outsl
push
loope
cmc
pop
pop
xchg
jo
loope
lods
cmp
xor
ficomps
dec
mov
push
add
dec
sbb
inc
jecxz
sbb
mov
stc
cmc
in
rorl
add
sysret
mov
lds
gs
xchg
insl
ds
pushf
push
adc
aaa
stos
rclb
mov
cs
jb
outsl
xchg
jg
arpl
sbb
andl
adc
mov
add
xchg
push
ficompl
pop
mov
gs
sbb
fs
lret
popa
inc
xchg
mov
sarl
mov
test
xor
mov
xor
gs
loop
std
mov
shl
push
call
roll
out
sbb
in
js
fdivs
push
add
pusha
cs
rol
stos
lahf
cld
movsl
imul
inc
and
add
xchg
sub
out
add
pop
dec
mov
ja
jecxz
cs
addb
fwait
push
jae
aad
jge
pop
push
ffreep
cmc
or
lahf
hlt
sbb
sub
cmp
test
sbb
adc
pop
and
rolb
and
pop
lret
dec
lcall
loopne
rolb
daa
decl
jae
push
sub
cmp
fsubrs
sub
push
jnp
push
outsl
and
or
mov
test
test
rorl
jno
dec
jg
adc
push
xchg
arpl
out
mov
mov
scas
sar
fnstsw
mov
jae
dec
sti
js
fcmovnu
mov
cmpb
cmp
xchg
ds
inc
jb
mov
cmp
fwait
hlt
mov
pusha
or
daa
push
mov
neg
iret
adc
adc
int3
sbb
sbb
add
outsl
stos
xor
pop
cmp
mov
popa
aad
popf
add
aad
ja
or
jg
loopne
std
add
sub
and
mov
xlat
sti
mov
aam
cmp
sbb
inc
ja
aam
dec
push
mov
imull
and
fcmovne
or
mull
mov
pop
xchg
insl
pop
ljmp
cld
scas
sub
dec
fisubl
int3
inc
fwait
loop
mov
addl
stos
pop
pop
inc
stos
mov
dec
icebp
inc
inc
loopne
mov
icebp
loopne
sub
inc
sbb
sbb
out
sbb
scas
jns
sbb
mov
cli
cmp
in
mov
out
inc
cmp
and
les
mov
dec
jb
data16
mov
xchg
push
pop
add
ret
cli
and
push
movsb
orb
int3
add
orb
dec
lea
std
fldenv
cli
fidivl
inc
mov
or
pop
roll
and
in
pop
int3
adc
xchg
mov
mov
jmp
push
pop
dec
cmpsb
fcoms
cmp
pop
ja
loope
cmc
ss
call
mov
pop
leave
lods
iret
cwtl
add
inc
mov
outsb
add
icebp
ds
out
or
lods
shlb
ffreep
jnp
push
addl
mov
sbb
jle
dec
push
mov
bound
dec
bound
xchg
mov
out
sbb
leave
nop
inc
xchg
xchg
sbb
ss
push
fstpt
inc
dec
pushf
cmp
enter
popf
inc
movsb
movsl
dec
xchg
roll
push
sti
jo
sbb
repz
inc
lahf
loope
cmp
addb
jmp
lahf
or
cmp
dec
ret
subl
lock
or
test
xchg
lods
xor
stc
fneni(8087
pop
pusha
sub
mov
push
mov
cmp
jbe
jge
cmp
lds
cmpsb
sub
cli
pushf
jecxz
inc
dec
fdivl
pop
sbb
bswap
pop
push
mulb
mov
cmp
add
jl
inc
je
loop
nop
mov
mov
pop
sbb
jecxz
xor
por
jns
adc
repz
xchg
pop
cmp
jg
popf
je
xadd
in
outsb
cli
jns
add
or
cmp
mov
xorb
inc
arpl
push
fwait
jbe
add
inc
aad
or
mov
push
adc
xor
aaa
stos
repz
hlt
push
lods
loop
mov
mov
inc
stc
leave
gs
xchg
nop
xchg
and
xchg
and
xor
ja
leave
test
xor
xor
push
inc
cwtl
pop
xor
mov
mov
mov
and
xchg
push
not
jecxz
dec
mov
or
push
das
rcrb
repz
imul
dec
adc
adc
inc
pop
outsb
mov
fwait
mov
inc
pop
shl
and
cwtl
push
in
inc
mov
push
adc
xor
pushf
or
aaa
in
mov
in
int
pop
dec
sub
push
rorl
adc
push
jg
push
mov
js
adc
jp
lods
test
lea
jecxz
loopne
arpl
inc
inc
or
insl
mov
cld
imul
popf
push
ds
dec
inc
push
xor
orl
mov
in
mov
fwait
pop
scas
or
jo
push
mov
adc
xchg
lcall
push
nop
and
pop
or
add
dec
das
add
cwtl
or
xchg
test
fsts
pop
mov
shrl
jg
lahf
mov
std
ret
mov
ret
sar
add
jge
enter
xchg
loope
lds
out
dec
jns
call
push
or
fsubrs
pop
in
lahf
adc
jmp
sub
push
stc
rcl
cmp
std
repz
popf
mov
cmovs
inc
push
push
rclb
add
outsl
mov
enter
shlb
jb
xchg
push
push
outsl
and
movsl
orl
mov
push
xchg
lret
adc
xchg
jne
mov
push
cltd
sti
aam
inc
in
xchg
jae
adc
sti
add
sbb
pop
aam
popa
mov
mov
into
add
and
imul
sahf
scas
and
lds
stos
mov
add
cmc
mov
pushf
xchg
outsl
lock
pushf
add
xchg
mov
cmp
jg
push
push
frstor
outsl
jle
jle
addr16
sbbb
imul
jb
pop
clc
or
faddl
push
data16
cmp
or
pop
mov
fs
mov
andb
cltd
sbb
out
pop
fs
adc
dec
pop
daa
pop
loopne
inc
cmp
inc
scas
jecxz
pushf
imul
movsb
aas
in
imul
lods
cld
rclb
push
dec
mov
call
fcmovb
sbb
xchg
push
aaa
fsubrl
jge
sbbb
and
mov
mulb
or
inc
adc
sbb
xchg
sbb
xchg
fldenv
inc
adc
test
lock
mov
scas
dec
cld
xor
std
ret
and
cmp
cld
loopne
xchg
sbb
fildll
and
or
sbb
mov
adc
or
push
es
mov
adc
inc
pop
mov
pop
fsubrl
ja
xor
negb
into
sub
jmp
push
jl
or
cmpb
nop
jecxz
inc
and
in
sub
loop
rcrb
push
mov
lods
sti
mov
cmpsb
sub
rclb
aad
bound
leave
daa
ds
ficomps
mov
insl
or
dec
fcoml
or
mov
xchg
add
push
fstpt
or
int
nop
or
pushf
adcl
insl
xchg
and
dec
cmp
sbb
jg
xor
sbb
cmp
aaa
push
dec
pop
mov
add
das
std
jg
xlat
movsl
sbb
mov
rcrl
call
rcr
xchg
stc
repz
int
in
push
call
sub
jl
pop
mov
addr16
adc
repnz
jae
in
loopne
and
fnstcw
lret
pop
add
sbb
pop
push
imul
and
dec
cmc
test
jmp
or
cmp
sbb
mov
inc
mov
andl
jle
aam
jnp
shll
sbb
xor
jae
mov
ret
jno
jle
add
shrb
mov
push
clc
and
jge
add
das
xchg
pop
mov
or
and
gs
and
cmc
vpackusdw
pand
pop
aad
out
xchg
sub
lret
rorb
cltd
sarl
jl
dec
outsl
mov
add
aad
incl
cwtl
aam
jg
mov
pop
loopne
scas
rorb
mov
sbbl
je
addl
add
add
mov
push
xchg
lahf
jl
cli
lcall
dec
aam
jo
xor
imul
sbbl
lock
inc
xor
stc
mov
stc
aaa
xchg
aad
mov
test
sbb
rorl
lods
push
sub
cld
adc
outsl
mov
pop
imul
xor
pop
xor
add
cmpsl
jg
inc
sub
sub
mov
inc
arpl
mov
lret
mov
dec
loope
cmp
les
push
sti
push
mov
xor
mul
test
das
push
dec
call
inc
inc
pop
in
cmpsl
and
rcl
subb
jno
mov
pop
int3
xchg
scas
push
pushl
and
loopne
dec
dec
data16
lret
mov
dec
add
inc
inc
roll
mov
mov
sysexit
leave
dec
je
scas
testb
aam
out
jae,pn
lods
xchg
xor
aam
fdivl
ficomps
ret
mov
aad
push
mov
loope
repnz
aad
scas
sbb
add
outsl
mov
xchg
dec
add
dec
sti
push
dec
and
sbb
mov
mov
divb
pusha
add
rcll
and
sbb
mov
xchg
inc
and
call
dec
data16
jge
inc
hlt
stos
cmp
outsb
mov
mov
jb
add
jp
cmp
call
fistl
sarb
pop
jns
and
xor
cmpsl
aaa
call
fwait
jp
call
fcmovnbe
lds
adc
pusha
pop
iret
cmp
cs
jno
cmp
dec
cld
sarb
dec
sub
pop
rcr
push
das
sub
rorl
popf
scas
int3
movsl
push
pop
inc
sub
stos
mov
sub
mov
adc
jbe
add
pop
mov
sbb
imul
dec
fcompl
adc
pop
popf
sub
dec
jp
stc
mov
sub
xor
inc
cmp
xrelease
mov
fadd
adc
xchg
push
lret
aaa
mov
adc
or
sbb
cmp
scas
fcompl
cmpsl
adc
pusha
repnz
addr16
clc
nop
call
fsubr
lods
fs
sub
and
add
roll
sbb
aas
xchg
shrb
stc
ret
cmpsl
mov
cwtl
ret
fdivr
add
mov
push
decl
or
fildll
mov
push
repz
mov
push
movsb
sub
mov
and
push
in
mov
mov
inc
dec
push
xor
mov
movsl
cmp
cld
mov
repnz
lods
inc
std
dec
dec
rcll
jae
aam
cmp
push
sbb
das
dec
stc
jmp
push
push
xchg
and
loopne
jge
repnz
data16
addb
loopne,pt
cmp
inc
xorl
dec
lock
sub
pusha
dec
pusha
imul
call
inc
pop
adc
cs
inc
adc
outsl
aad
mov
pop
outsl
add
leave
inc
inc
pop
push
mov
imul
mov
movsl
inc
sub
jae
fcoml
add
inc
dec
adcl
xchg
pop
test
mov
aas
push
loop
or
mov
push
in
lds
add
out
mov
test
fs
xor
loope
mov
call
inc
xor
in
sub
xor
push
in
or
sarb
push
shrb
into
imul
mov
mov
aad
adc
sub
lods
std
loopne
jne
and
jp
mov
jmp
movsb
lret
mov
push
lock
imul
and
mov
stos
loope
pop
test
imul
cmp
jp
orb
cs
mov
sub
imulb
xor
mov
or
and
stos
aam
mov
push
xor
scas
in
or
adc
popa
mov
fcompl
sbb
cmp
sbb
push
dec
shll
outsb
mov
aas
outsb
adc
repz
pushf
call
outsb
stos
jno
frstor
and
popa
popa
or
nop
mov
mov
lcall
inc
mov
xchg
nop
ljmp
mov
mov
imul
xor
mov
movsl
jmp
gs
pop
mov
and
mov
adc
xchg
popa
cmpsl
in
sarl
lods
pop
jne
mov
mov
addr16
cs
rep
inc
mov
xchg
inc
in
in
pop
scas
adc
int3
pop
je
std
sub
xchg
mov
shr
lea
mov
pop
dec
fdivl
lock
inc
and
dec
test
push
lds
mov
cmc
ret
mov
popa
push
inc
inc
or
insb
sahf
sbbb
outsl
lret
mov
cs
sub
mov
mov
into
pop
push
bswap
sbb
aam
lret
lea
aaa
cmp
imul
pop
pop
mov
lea
dec
insb
clc
adc
mov
inc
fimuls
jb
outsl
push
sub
call
rorl
lods
es
mov
repz
jle
rcll
cwtl
cmp
mov
mov
inc
mov
movb
and
pop
inc
jo
lcall
leave
mov
sub
je
dec
dec
mov
xchg
sub
jg
fdivr
imul
push
movsb
loop
scas
xchg
into
push
push
or
fistpll
aas
ficompl
sbb
movsb
into
adc
out
inc
ds
je
das
dec
in
mov
sahf
mov
cmpsl
stos
inc
push
repz
cmp
inc
jbe
mov
sbb
adc
jecxz
adc
cmp
stos
test
sub
xlat
xor
jecxz
repnz
cmpl
dec
inc
inc
cwtl
lret
sbb
and
sti
outsb
mov
les
xchg
imul
adc
and
ret
and
pusha
mov
or
pop
cmp
and
test
loope
pusha
faddl
xor
add
aad
mov
mov
adc
mov
sub
sbb
pusha
cmpsl
sub
or
mov
in
cltd
jle
ja
cmpsb
mov
adc
push
mov
aas
call
xchg
stos
sahf
pop
outsb
xchg
aad
sbb
ja
lret
pop
jb
fucomp
stos
sbb
jmp
jno,pn
les
xlat
mov
add
loope
push
leave
inc
xor
mov
std
xchg
add
cmp
push
out
sar
fstpl
in
and
out
rep
mov
jp
dec
inc
fwait
sbbl
and
jmp
sbb
push
cmp
out
sub
xchg
xchg
mov
out
hlt
jb
in
sbb
jnp
rep
into
or
icebp
out
ds
icebp
xchg
adc
adc
mov
adcl
pop
inc
add
js
dec
jp
icebp
in
mov
je
aad
orl
push
lahf
push
js
cs
cwtl
mov
mov
in
add
sahf
jp
xchg
bound
cmp
scas
or
mulb
cs
jp
fisubs
in
adc
rorb
gs
xchg
push
fiadds
into
fwait
repz
cmpsb
xor
imul
xchg
shll
push
mov
rorl
jo
stc
ja
mov
or
sbb
in
push
hlt
sub
mov
jae
and
stos
mov
out
sbbb
push
idivl
psllq
test
enter
dec
jecxz
push
fiadds
mov
dec
int3
dec
cmp
xchg
mov
addr16
and
clc
sbb
addr16
mov
mov
mov
aad
cmp
sbb
jge
jno
andl
and
jmp
jecxz
testb
mov
out
xchg
dec
pop
cltd
incb
clc
ret
imul
and
dec
js
pop
add
rcr
pushf
xchg
mov
mov
lods
cmp
xor
lret
orl
push
inc
aam
xchg
mov
and
lods
lods
rep
inc
filds
xor
xor
add
jne
aam
icebp
pop
repz
jno
jmp
add
xchg
test
test
fildll
fsubl
push
jmp
popl
out
pop
outsb
jp
jbe
mov
into
or
mov
loope
jmp
add
movsb
lcall
adc
lcall
sti
push
aad
sbb
clc
jae
xchg
mov
xor
sarb
lret
out
mov
mov
lret
mov
aas
push
lods
out
mov
dec
lods
xchg
sub
test
je
sahf
scas
popa
movsl
xor
pushf
lds
mov
fdivp
jb
outsl
xchg
divl
ret
test
jl
mov
pop
cs
mul
movsb
mov
popa
testl
and
repnz
fdivrl
in
add
fcompl
adc
int3
jle
outsl
das
arpl
ficoms
jecxz
xchg
xchg
xchg
sub
sbb
inc
push
int
sahf
inc
mov
xchg
daa
push
xchg
fisubl
and
shlb
pop
xlat
dec
rcrb
sbb
jne
and
cmp
mov
sbb
add
movsl
mov
xchg
popa
pushf
or
int
mov
mov
ljmp
mov
ja
das
cmp
xchg
ds
es
loopne
clc
lret
frstor
inc
lea
adc
pop
xchg
or
in
cs
inc
adc
dec
mov
sbbl
mov
xor
pop
js
test
xlat
push
adc
jg
sub
jne
jecxz
inc
in
dec
cli
cwtl
aad
push
jp
xor
jae
xor
xchg
add
push
es
rcrl
rorl
mov
nop
xchg
fld
xor
shll
sti
xchg
ss
xchg
popa
add
pop
andb
ret
xor
cmp
fsubrp
add
jb
rorl
jbe
pop
jecxz
lds
xor
sub
cwtl
or
lock
gs
inc
lods
jl
lret
mov
into
push
int
or
mov
into
pop
ret
adcb
pop
movsl
adc
jb
mov
hlt
xchg
test
pop
dec
push
push
je
add
cmc
fisttpll
scas
adc
add
hlt
cmp
mov
cld
inc
lret
push
pop
mov
pop
push
hlt
movsl
sub
stc
adc
dec
add
xor
dec
push
jnp
outsl
pop
fdivl
jecxz
mov
lret
sub
dec
in
js
mov
aad
jecxz,pt
int
mov
mov
test
sbb
push
jg
jne
mov
out
jns
adc
xchg
in
loop
arpl
ja
mov
pop
loopne
dec
lahf
push
adc
mov
adc
or
push
inc
aad
mov
roll
push
jge
ljmp
jbe
cltd
jg
mov
movsl
xor
mov
mov
cmp
mov
or
xchg
push
jbe
jo
std
xor
push
cmpsb
mov
out
add
int3
ss
push
pop
mov
and
call
push
push
cs
sbb
ds
mov
push
in
push
insl
cli
jbe
bound
push
cltd
mov
movsl
and
dec
inc
bound
xchg
dec
push
sbb
aam
and
mov
sarb
add
xchg
mov
ret
std
push
insl
hlt
xor
adcb
out
iret
ljmp
mov
push
dec
mov
mov
jp
and
iret
cmpsb
sarb
fisubrl
dec
shlb
lret
mov
ds
fmull
sub
xchg
ljmp
fabs
adc
cmpsb
inc
mov
lea
sub
pop
push
push
ss
jae
sub
popf
loope
insb
adc
jmp
out
mov
xlat
movsl
cmp
in
and
push
fnsetpm(287
xor
push
mov
dec
add
jmp
std
popa
in
and
stos
fildl
nop
inc
jbe
xlat
jle
cmp
sbb
hlt
cmc
push
pop
jge
add
nop
andl
mov
sub
jb
aas
sbbb
daa
push
pop
ja,pn
xchg
mov
push
andb
insl
jle
inc
dec
fsubrs
js
xchg
popa
nop
in
in
cld
imul
pop
js
and
pushf
xchg
sbb
mov
push
gs
iret
xchg
mov
xor
xor
sbb
fisubrs
scas
fnstcw
in
out
and
cmp
push
cli
sub
xchg
repz
jnp
or
addb
and
add
test
inc
shlb
push
popf
mov
outsb
movsl
out
adc
rcrb
push
cmc
enter
push
cwtl
roll
xor
aad
push
mov
lods
mov
mov
cld
inc
cmp
jnp
push
sbb
iret
cmpsl
mov
clc
out
jne
gs
jno
movsb
js
lahf
mov
mov
push
push
movb
mov
cmp
mov
xchg
pop
mov
push
aaa
jbe
jbe
sahf
daa
mov
sbb
jl
xlat
sahf
mov
xchg
sub
js
add
xchg
neg
or
inc
sbb
xchg
xchg
lcall
movsl
cmp
lods
or
loop
add
mov
add
jae
xchg
jp
addl
add
test
pop
sub
sbb
in
dec
lods
popa
ljmp
dec
hlt
fildll
movsb
mov
dec
cmp
fucom
mov
mov
out
mov
sbb
push
and
inc
add
arpl
cmp
rolb
in
xchg
int3
ds
movb
jbe
xchg
sbbb
pop
cmp
pop
or
mov
add
sbb
movsb
sub
inc
movsl
or
dec
pop
cwtl
add
adc
nop
ret
xor
ljmp
sbb
sbb
mov
bound
adc
insl
and
jne
fsubrl
push
notl
xchg
int
cmp
sub
lret
mov
jl
mov
push
lock
xchg
sbb
in
lods
xchg
pushf
xchg
mov
and
movsb
pushf
popf
xor
insl
dec
or
lock
xor
loope
arpl
adc
xadd
fs
cmp
imul
rclb
xlat
push
movsl
insb
add
call
xlat
push
je
insb
andl
shrl
clc
dec
mov
xor
mov
out
dec
das
lret
movsb
idivl
in
jg
sub
jae
mov
cmp
push
stos
mov
add
mov
mov
movlps
or
jb
fcmovu
lret
rorb
adc
jmp
push
test
pmullw
sub
roll
aas
push
shll
push
xchg
xor
scas
dec
inc
adc
xchg
sub
icebp
popf
lret
jl
or
scas
sbb
das
sbb
ljmp
mov
aaa
pop
sbb
sarb
jne
test
insb
aad
cmp
lock
dec
push
adcl
mov
les
scas
in
stc
in
cmpsl
neg
push
int
sbb
mov
aad
fisubrl
mov
fcomps
daa
mov
leave
cmp
imul
stos
sbb
xchg
or
cmp
sub
add
sarb
ljmp
mov
int3
testb
or
icebp
or
mov
dec
cmp
dec
pop
xchg
cmp
pop
add
xchg
pop
fs
aam
xchg
jl
pop
dec
ret
call
cmp
rorl
mov
fcmovb
inc
es
pop
rorl
cmpsb
mov
das
pop
lret
pushf
sahf
add
fdiv
mov
mov
xor
fstpl
mov
cmpsb
cs
inc
mov
popa
push
add
pop
xchg
mov
dec
test
mov
dec
mov
mov
xlat
push
add
ret
mov
clc
mov
ret
jmp
insl
mov
stos
mov
mov
xlat
xor
lods
lock
xchg
pop
movsl
cmp
mov
pop
xor
sbb
sbbl
add
sub
mov
and
out
negl
pop
sti
xor
in
inc
push
xor
pop
loope
clc
pusha
and
xor
int
scas
jge
and
add
lcall
enter
sarb
adc
cmp
xor
mov
adc
testl
push
in
cmpsb
cld
xchg
sub
jo
or
mov
stos
add
mov
out
jb
aam
sub
jb
mov
push
aaa
or
sbbl
fiadds
push
and
xor
je
mov
or
inc
mov
scas
and
leave
mov
icebp
push
sub
gs
inc
cmp
stos
jno
pop
jns
jg
sub
mov
sbb
fs
pop
dec
mov
das
aam
lahf
sub
fsub
inc
add
or
push
test
insb
xchg
sbb
pop
aam
fs
jo
test
mov
or
xchg
loopne
or
cmpsb
vpunpcklqdq
mov
pop
hlt
jl
outsl
fistpll
in
cli
pushf
sbb
sbb
lea
fldenv
mov
sbb
cmp
lock
sahf
dec
out
sub
push
and
into
sub
mov
insb
movntps
mov
push
sbb
in
mov
shr
mov
aaa
gs
xchg
inc
popf
test
xor
jp
sub
mov
lods
xchg
push
xor
xchg
lret
dec
xchg
sub
sub
in
lds
xchg
or
fisubl
data16
xchg
pop
mov
mov
mov
fwait
bound
and
add
jl
cmp
shl
mov
sahf
in
shll
xor
movsl
xchg
std
sbb
push
enter
stos
fisttpl
or
fnstcw
daa
jmp
pusha
inc
add
jl
insb
pushf
xchg
pop
mov
lcall
xchg
inc
sti
scas
adc
or
and
adc
adc
scas
movsl
sub
jp
mov
inc
fwait
mov
insb
and
xchg
aaa
daa
xor
mov
scas
pop
sub
jo
mov
lods
sti
test
pop
or
cltd
mov
loope
sub
outsl
fwait
pusha
lahf
es
mov
lock
mov
mov
lcall
sahf
or
in
and
cld
aad
xlat
cmpsl
lea
adc
xor
xchg
lea
je
or
mov
jecxz
adc
jne
xor
imul
fs
xchg
add
arpl
dec
add
cmpsl
xchg
or
inc
mov
push
add
adc
push
imul
add
cmp
pop
mov
aaa
mov
mov
mov
add
inc
into
lea
sbb
xor
incb
sbb
cmp
adc
in
stos
inc
out
cmpsl
lcall
dec
or
push
jmp
sahf
mov
fisubrs
fs
sahf
insb
dec
sbbb
imul
mov
iret
xor
mov
xchg
int3
mov
fsub
lea
mov
add
push
rorb
jb
xlat
or
repnz
rol
dec
push
aam
idivb
dec
xor
clc
sub
mov
pop
nop
fistpl
fnstenv
add
dec
loop
jmp
jne
out
into
xor
mov
int
cli
cmp
cmpsl
inc
adc
push
orb
popf
das
mov
mov
das
mov
lahf
shrl
jl
xchg
or
paddb
cmp
or
pop
mov
or
push
inc
dec
cli
hlt
sbb
or
xlat
push
jecxz
aam
jb
or
dec
bndldx
pop
xchg
xor
inc
add
dec
pop
or
push
ljmp
xor
dec
or
or
jae
adc
js
dec
mov
mov
inc
mov
pushf
daa
test
fs
mov
push
out
xor
xor
ljmp
jne
imul
pushf
xor
std
clc
aaa
adc
inc
push
fnstsw
int3
or
push
xor
xor
mov
loopne
adc
sub
insl
inc
lea
adc
insl
mov
gs
push
shr
loope
or
or
in
mov
arpl
and
jl
mov
shrd
jns
clc
jmp
cmpsb
adc
fildll
pusha
in
push
sub
pop
js
sbb
loop
cli
inc
or
cltd
andb
and
mov
cwtl
xor
push
sbb
dec
dec
pop
fnsave
stos
std
xor
lods
das
sbb
jo
ret
push
movsb
addr16
push
cs
cmp
pop
es
sub
cmp
lret
adc
lods
push
mov
xor
push
nop
shlb
inc
leave
adc
lret
pop
push
jnp
xor
fsubrp
xor
sub
dec
adc
pop
or
ret
push
cmpsb
testb
js
sti
repz
pop
sarl
into
mov
dec
in
mov
push
mov
lock
mov
mov
mov
dec
xor
inc
rclb
int3
and
cmpsb
push
clc
inc
cmc
xchg
sub
or
jbe
sbb
mov
inc
insl
cmp
loopne
test
pop
into
outsb
fimull
mov
pop
imul
insb
fmul
into
std
aaa
mov
jg
mov
add
scas
add
les
adc
fwait
lret
in
push
add
sub
ret
jp
loope
pop
mov
in
dec
bound
bsr
xchg
inc
adcb
in
lods
dec
add
call
ss
sbb
mov
std
out
jae
jo
add
lods
and
adcb
jmp
movsl
fdivrs
push
arpl
movsl
pop
pusha
pop
jecxz
push
jp
stos
or
daa
push
mov
or
jge
decl
mov
push
dec
push
mov
ffree
sahf
add
lcall
in
stos
mov
push
xchg
mov
iret
adc
adc
xor
xor
pop
test
push
data16
arpl
xchg
push
sub
xchg
jae
adc
or
xor
shll
mov
rolb
add
sbb
std
adc
mov
pop
outsb
test
stos
adc
jno
cmp
mov
in
mov
sub
and
lock
in
cmp
lret
or
das
mov
xchg
dec
jb
lods
jns
shl
xor
icebp
mov
ss
add
jae
cmp
fdivl
lods
mov
mov
fsubs
mov
lcall
test
mov
sub
mov
fwait
ja
clc
mov
int
cmpb
shrb
pop
or
xor
xor
in
popf
aad
adc
scas
dec
andl
adc
in
jge
fisubrs
and
enter
repnz
icebp
repz
push
lret
xchg
loopne
lret
xorl
cltd
outsb
sub
stos
xchg
push
sbbl
rorb
mov
xchg
mov
add
jecxz
xchg
pop
inc
nop
lea
ret
fisubrl
inc
mov
cmpsl
fwait
movsb
movl
push
mov
lret
jp
aaa
sub
push
arpl
mov
jnp
pop
sub
pop
jmp
cmp
movsb
and
cmpsl
clc
mov
sbb
add
pop
fsub
dec
inc
into
push
ror
in
inc
je
cmp
lahf
movsl
es
das
cmpsl
pop
subb
and
rsm
shl
mov
mov
cmp
ljmp
dec
mov
and
xchg
dec
push
stc
add
sbb
sbb
rorb
jnp
and
mov
repz
jp
xchg
xchg
test
les
shrb
xchg
sbb
xchg
sbb
cs
stc
sub
cmc
pop
adc
jae
add
std
insb
cmp
xchg
ret
pop
sub
movsb
xchg
sbb
sbb
scas
adc
shrl
stc
jle
lea
pop
push
leave
push
jp
bound
cld
dec
ljmp
repz
movsb
cltd
push
mov
gs
and
add
hlt
pop
fucomp
hlt
dec
or
dec
adc
adc
popa
xor
negb
mov
mov
jg
mov
ret
shrl
or
and
mov
loope
jle
sbb
sbb
push
jb
push
push
repz
and
loop
ds
test
lods
iret
inc
mov
mov
mov
add
mov
iret
cmc
lret
jmp
xchg
sbb
inc
add
jno
sbb
jle
adc
imul
popa
mov
rcrl
xchg
push
jne
mov
gs
divps
cld
push
cmp
push
mov
or
sub
xchg
xor
cld
xchg
lcall
xchg
cmp
jg
push
loop
push
dec
cmpsl
out
dec
js
xor
pop
ljmp
xchg
scas
sub
pushf
js
test
and
dec
mov
movsb
jle
pop
daa
jbe
lods
mov
jne
and
push
mov
pop
outsl
test
sbb
scas
cs
rcrb
loop
popf
pop
scas
es
mov
in
call
test
inc
adc
dec
in
enter
and
sub
ja
sub
loop
and
shlb
cmpb
fs
xor
or
sub
push
loopne
test
nop
pop
repnz
cmp
xchg
iret
inc
dec
cli
nop
inc
mov
xlat
pop
mov
sbb
shll
mov
add
aas
dec
fdivrs
insb
lods
les
js
aas
or
cltd
cmp
cli
mov
neg
jae
or
xchg
sbb
and
inc
xchg
dec
sbb
leave
sahf
inc
loopne
pop
pop
jb
inc
inc
mov
ret
mov
cltd
rcll
xor
inc
test
jg
adc
insl
test
mov
mov
adc
dec
jmp
inc
js
inc
sub
ss
and
sbb
cld
stos
cmp
sbb
loopne
ret
aas
xchg
push
add
cmp
adc
repnz
imul
je
cwtl
mov
or
mov
cmp
adc
add
data16
lods
movsl
scas
jnp
add
nop
out
testb
xchg
insb
pop
gs
sbb
enter
push
mov
icebp
mov
inc
hlt
push
xchg
cmp
pushf
push
add
aad
icebp
out
xchg
roll
inc
jb
test
jg
lock
das
enter
pop
lea
lds
mov
pop
cmp
mov
pop
dec
pop
xlat
fiadds
and
ss
mov
mov
pushf
rcrl
aas
cmp
mov
test
inc
sub
fadds
stc
call
je
jp
pop
xor
loop
lods
sbb
jl
sti
pop
push
fbstp
add
fdivrp
xchg
sbb
mov
imul
je
pop
xchg
popa
movsl
insb
and
dec
jne
sub
ret
movl
xor
test
mov
lods
je
xor
int
adcl
outsl
add
cwtl
pop
jno
std
lods
adc
loopne
or
outsb
jns
sarl
xor
xor
les
push
mov
xchg
xor
dec
inc
fdivrp
or
cwtl
xor
inc
jnp
mov
mov
cwtl
out
out
cmpsl
lret
sbb
pushf
jmp
adc
xor
aad
test
inc
jmp
push
fdivp
push
sbbb
stos
jnp
ret
or
fdivrs
icebp
mov
test
push
repz
in
mov
pushf
xchg
arpl
or
fistl
adc
push
mov
cli
jle
push
jns
in
imul
fdivrp
xor
jle
dec
sti
movsl
movsl
popa
cld
adc
cmp
xchg
fimull
and
outsb
push
cmp
cld
je
lret
mov
push
push
sub
mov
adc
lcall
gs
xlat
aad
movsl
pop
cmp
loopne
jbe
rolb
pop
sub
movsb
jg
das
add
cmp
sub
mov
mov
sar
pop
negl
dec
or
lds
xchg
fisttpl
je
mov
push
sbb
test
or
mov
mov
int3
inc
pop
xchg
loope
mov
push
adc
jnp
mov
xchg
imul
inc
push
aam
mov
inc
cwtl
pop
insb
aaa
scas
mov
daa
push
loopne
inc
mov
dec
aas
test
add
pop
or
mov
movsl
bound
clc
inc
mulb
adc
movsl
add
push
sar
mov
xchg
and
mov
sbb
add
imul
mov
and
pusha
mov
cmp
pop
mov
enter
push
outsb
out
xchg
mov
adc
lret
push
mov
dec
mov
ljmp
cwtl
daa
adc
push
xchg
cmpb
roll
mov
mov
outsl
cmp
sbb
and
shrb
push
mov
push
je
movsw
add
je
popa
leave
out
jl
or
cmc
dec
push
or
jns
jb
jne
xor
clc
sub
sub
or
xlat
int
and
stos
ficompl
cltd
rclb
xchg
mov
fs
pop
mov
pop
mov
ret
sbb
jge
movsb
icebp
jnp
push
cwtl
pop
xchg
mov
cmpsb
fmull
lods
xchg
dec
sbb
ds
outsl
das
out
subb
add
loopne
bound
pop
stos
xor
aam
cmp
cmpsb
in
in
lret
dec
jp
and
pop
jno
dec
or
mov
out
in
adc
jp
add
sub
jns
repz
fistpll
test
pop
xchg
cmp
pop
int3
pusha
rcl
popf
int3
mov
cmp
add
xor
das
out
cmc
rcrb
int3
adcl
mov
fimuls
mov
ja
mov
jge
cmpsl
adc
mov
testb
rcrb
jno
int
cmp
adcb
dec
push
mov
movl
mov
sbb
xchg
push
mov
sahf
addr16
stos
mov
mov
cmpsb
inc
pop
inc
mov
dec
mov
inc
lret
iret
pop
mov
jmp
sbb
pop
loope
sbb
out
icebp
mov
cmp
pop
hlt
xor
imul
dec
repz
jle
shr
repz
psubq
pop
dec
sahf
cmp
mov
arpl
jle
pop
lds
pop
push
or
fld
jns
lea
loopne
adc
mov
punpckhdq
mov
testb
sbb
sub
xchg
mov
mov
sbb
add
lahf
xchg
pop
insl
hlt
mov
and
jnp
mov
test
fwait
cmpsl
pushf
std
subb
cli
cltd
xchg
ljmp
adc
dec
mov
mov
out
in
mov
lds
or
sbb
xor
push
jno
inc
inc
insl
ret
add
cli
imul
fisubrl
daa
ja
add
sbb
jae
lret
aas
dec
jno
jge
mov
xor
xlat
fnstcw
jns
aaa
mov
ja
dec
outsb
testb
mov
mov
cmp
imul
xor
jp
rcll
xchg
lret
sub
mov
cmp
and
loopne
cmc
and
cmp
data16
test
mov
ss
aam
lods
push
lods
call
xchg
stos
mov
cs
mov
mov
rcr
push
sbb
fstps
adc
jg
inc
jo
cmp
mov
in
xchg
shll
adcl
xchg
cmp
sub
add
call
adc
mov
push
repnz
inc
and
loope
jl
xchg
stc
call
repnz
ret
iret
leave
jge
push
movsl
sbb
into
mov
sbb
jae
not
sub
outsb
lods
or
cmpsl
loop
nop
pop
adc
cmpsb
imul
pop
rclb
and
pop
mov
inc
loope
push
daa
movsl
cmpsb
incl
hlt
cltd
lahf
push
dec
xchg
icebp
jp
sub
cmpb
sahf
or
inc
inc
lahf
push
stos
hlt
mov
cmp
push
lea
push
jne
pop
cmpsb
sbb
dec
push
push
add
outsb
jecxz
mov
cmpb
cmpsb
cld
in
movsl
push
sbb
int3
lahf
cld
push
push
and
cli
lret
xchg
xchg
mov
mov
push
push
les
xor
jb
or
ljmp
xchg
jne
jl
out
insl
fisttpl
incb
cmpsl
lret
pop
mov
or
push
pop
in
mov
push
es
pop
inc
fisttps
mov
rorl
es
adc
dec
and
cltd
mov
in
iret
xchg
xor
cmc
jbe
dec
icebp
filds
insb
xchg
mov
ret
out
hlt
xor
xchg
nop
clc
xchg
inc
in
movsb
xchg
xchg
mov
cmpsl
push
lahf
lcall
jno
jbe
xor
test
add
mov
sbb
xchg
pushf
fisubl
inc
or
add
mov
lahf
mov
sub
pop
sub
fucom
pop
es
sub
pop
adc
scas
jecxz
fisttps
lods
mov
mov
lods
push
lcall
stc
sub
call
and
dec
cmpsb
dec
sub
gs
jns
inc
rclb
iret
out
push
add
adc
add
add
cmp
push
mov
addr16
or
sbb
scas
insl
inc
dec
out
sub
sahf
aam
mov
or
fisttpl
cmp
lret
cmp
jb
push
add
jns
jl
cwtl
hlt
cmp
sub
shlb
xor
jae
lods
stos
mov
sbb
popf
fisubrl
xorb
cmp
xor
sbb
movsl
mov
xchg
and
or
pop
xchg
orb
lcall
xchg
imul
nop
inc
pop
and
add
movsb
out
adc
adc
dec
ficoml
out
mov
pop
ret
fmul
sbb
cs
aam
ljmp
jbe
push
pop
push
sbb
test
adc
les
pushf
mov
jg
mov
jno
and
push
sahf
mov
mov
mov
jp
cmp
cltd
fmulp
test
add
pop
mov
testl
imul
negl
pop
cmp
negl
push
stos
jno
mov
jne
mov
add
sti
lods
sbb
out
and
out
fildl
fwait
or
ja
inc
addr16
testw
mov
leave
xor
mull
or
test
out
je
dec
imul
add
jp
out
cli
sbb
sub
add
sub
push
insl
clc
insb
les
in
cltd
mov
sub
fisubs
mov
je
jl
lea
jp
cmc
rol
cli
sub
xchg
lds
push
negb
fs
lods
cmc
xor
mov
mov
das
jb
sub
xchg
mov
sub
xchg
or
fmull
xlat
out
and
imul
push
daa
jne
pop
gs
clc
xchg
push
mov
ficoml
test
or
aas
mov
inc
lock
push
stc
dec
test
loope
pop
aad
jge
popl
pop
cmp
ret
jg
and
or
adc
ret
pop
xchg
pop
lds
cmp
std
mov
xchg
arpl
stos
push
jne
inc
sbb
cmp
xchg
or
mov
aad
xor
fadds
xchg
decl
loop
data16
adc
adc
push
mov
xor
mov
popa
lock
fwait
sbb
lods
scas
bound
push
dec
outsl
xor
sbb
or
imul
jnp
leave
ja
mul
ljmp
mov
lahf
shll
mov
test
insb
push
and
lds
xchg
rcll
mov
pop
outsl
inc
push
xor
mov
pop
lret
into
stos
movsb
mov
pop
jle
ret
cmp
movl
mov
pop
pop
mov
cs
dec
inc
movsl
xchg
orb
and
insl
push
js
stc
inc
xchg
cmpsl
subl
push
mov
dec
or
inc
xor
cmp
enter
int
lock
aam
inc
ss
ss
test
fwait
inc
add
iret
sub
mov
sahf
pop
mov
aad
shl
and
fs
xchg
movsl
mov
cmp
ja
sarl
push
pop
repnz
lahf
lcall
pop
push
jb
ss
stc
mov
mov
mov
orb
sub
pop
pop
iret
add
test
inc
jmp
sub
adc
iret
fcoml
mov
lds
out
and
or
xchg
nop
lods
push
add
lret
mov
lret
add
int
push
mov
mov
push
sbb
pushf
cmp
aaa
push
xor
js
or
inc
mov
jmp
mov
xchg
cmp
or
mov
icebp
ret
sbb
popf
push
pop
mov
outsl
out
sub
fstpl
scas
dec
push
stc
xchg
pushf
add
jecxz
pop
fisttpl
movsb
pop
cmp
fwait
inc
call
ret
fdivrp
in
aad
push
add
stos
jecxz
push
hlt
repz
cs
or
jno
into
mov
add
xchg
andb
and
mov
add
mov
xlat
les
dec
jle
mov
pop
insl
sbb
fdivrl
mov
subb
cld
out
loope
aam
jg
mov
push
jecxz
outsb
mov
or
add
sbb
loopne
fistl
notl
mov
mov
push
inc
test
repz
lcall
or
sub
cs
cwtl
lods
pop
mov
add
inc
out
mov
mov
mov
ret
adc
aam
aas
add
push
push
sbb
scas
xchg
es
jne
lds
or
mov
lods
in
push
xchg
or
loop
dec
mov
movb
sti
cmpsl
in
enter
or
movsl
fsubrp
inc
push
pop
lea
into
push
adc
cmp
sub
jns
ret
fldenv
loope
mov
adc
add
lods
push
in
imul
testb
add
cmp
into
and
fidivs
sbb
shll
ljmp
daa
jg
in
xchg
aad
cmp
mov
pop
cld
je
repnz
and
mov
or
mov
repz
loope
popf
pop
inc
lcall
dec
outsb
inc
outsl
test
add
popf
ficoms
pop
push
xchg
add
xchg
or
inc
mov
mov
es
ljmp
inc
sbb
jmp
je
sarl
or
and
adc
movsl
movsb
hlt
cmp
sbb
mov
aas
mov
dec
jg
sbb
cmpsl
jne
or
int
aad
pop
fidivs
mov
sub
shl
or
sub
pop
fsts
out
subl
popl
add
mov
cli
push
dec
cmc
mov
out
or
mov
sahf
inc
xor
repnz
fwait
loop
lcall
mov
push
loopne
push
loope
jns
addr16
rolb
mov
mov
cmp
mov
sbb
mov
cmc
cmpsb
aad
or
dec
lahf
jmp
je
jo
or
push
cs
xor
adc
cmp
adc
adc
dec
dec
data16
jecxz
mov
xchg
int
sbb
pop
mov
aam
subl
roll
mov
outsb
test
mov
push
dec
xchg
mov
test
mov
sbb
sub
leave
lcall
js
jae
mov
pop
imul
sbb
decl
divb
cli
inc
mov
sbb
mov
fwait
sbb
and
mov
ret
loopne
or
mov
inc
jnp
ss
xchg
cmp
int3
cmpsb
push
pop
mov
xor
inc
xchg
mov
lret
frstpm(287
ds
mov
das
repz
fwait
stos
jmp
adc
inc
fisubs
push
ficoms
push
xchg
fadd
stos
sahf
sahf
scas
lret
or
sub
mov
mov
push
xor
shrb
nop
inc
insb
mov
stos
fwait
sahf
add
pop
xchg
dec
aad
add
sub
xchg
aaa
cmp
arpl
rolb
cmp
in
andb
mov
sub
pop
shl
lds
mov
hlt
push
cmpsb
mov
mov
sti
sti
sub
fsub
movsl
or
dec
xchg
mov
imul
pushf
push
dec
cmp
dec
lods
fnstsw
cli
loop
lret
jp
pop
push
fnstenv
mov
icebp
push
jne
lahf
sub
bound
sbb
sub
lret
wrmsr
sar
xor
inc
sbb
aas
repnz
fs
adc
and
jp
pop
cmpb
push
mov
and
sub
ljmp
pop
iret
popf
movsb
cmpsl
nop
lods
scas
push
pusha
dec
add
inc
xor
addr16
add
adc
lahf
lods
jno
mov
jne
test
rep
push
xor
and
test
mov
jo
data16
gs
lock
xor
mov
xor
push
cmp
push
stos
xor
push
std
mov
lds
xlat
ret
hlt
mov
sbb
pushf
dec
push
test
xor
mov
repz
movl
pop
roll
into
fwait
outsl
popa
arpl
cmp
or
cmpsb
adc
xor
sbb
xchg
xchg
cmpl
push
or
dec
mov
jge
dec
outsb
xlat
ror
test
mov
xchg
mov
jg
dec
cs
pop
and
pushf
xchg
and
test
insb
or
pop
out
imul
stos
xchg
icebp
xchg
xchg
cmp
mov
jbe
xchg
or
out
mov
inc
sbb
arpl
jl
scas
and
add
inc
sub
testl
je
subb
shll
ja
in
push
loope
test
jno
out
sub
rolb
fdivs
and
mov
insl
bound
inc
push
push
or
cmpsb
jecxz
dec
shl
test
loopne
cmc
and
add
jmp
lods
mov
shrb
sub
xlat
aaa
adc
sbb
arpl
sub
popa
xchg
sub
les
es
and
pop
sbb
and
add
xor
mov
jae
sti
fisubs
adc
dec
adc
test
jg
jae
push
popl
sub
mov
xor
push
xchg
sbb
mov
push
or
test
adc
sbb
mov
or
gs
xchg
adc
inc
call
adc
mov
xchg
test
loopne
xor
xchg
inc
rolb
pusha
imul
fwait
cltd
mov
xor
or
dec
push
and
or
mov
inc
clc
ret
add
aaa
sub
outsl
inc
stos
jo
cmp
rolb
dec
jmp
sub
push
xor
pop
sub
mov
jns
sbb
lcall
mov
lock
cltd
ljmp
push
mov
sub
stc
push
push
cwtl
pop
pushf
scas
mov
cld
add
jo
adc
arpl
adc
in
xchg
cmp
mov
enter
je
divl
sub
jno
cltd
sbb
xor
adc
stos
mov
mov
pop
push
add
out
clc
call
out
ret
push
dec
sbb
or
add
inc
fadd
xchg
ja
jp
hlt
mov
xchg
aam
lret
inc
sub
add
jns
out
add
sbb
aas
adc
xlat
imul
pop
outsb
int3
sahf
mov
or
and
jb
bound
stos
filds
pusha
dec
fcoms
cld
scas
or
fidivl
inc
jne
inc
mov
xor
xlat
and
push
movsb
or
leave
movsb
jno
cli
aad
aam
pop
sub
roll
inc
aam
push
hlt
loop
mov
mov
adc
jg
push
mov
into
dec
mov
jecxz
inc
mov
movsl
fisttpl
sub
cmp
sbb
add
jmp
cmp
dec
mov
les
in
int
fs
mov
dec
enter
andb
jnp
xor
mov
popa
in
mov
fwait
jg
loopne
jnp
sub
popf
and
aaa
inc
roll
lods
lock
loop
mov
jmp
jg
repnz
sbb
xor
jnp
mov
sbb
add
test
cmp
sub
mov
fidivl
xor
dec
outsb
outsb
xchg
imul
adc
aam
movsl
in
daa
movb
add
je
insb
mov
mov
lock
push
and
incb
insb
cld
repz
xor
xchg
mov
adc
pop
pusha
repnz
test
jl
inc
sbb
cmp
pop
sahf
add
icebp
insl
mov
fs
enter
and
inc
shll
mov
mov
faddp
mov
aaa
js
enter
lds
sar
push
add
pop
test
rorb
mov
fwait
mov
dec
insb
iret
rolb
pop
aaa
cmp
fiadds
xlat
sub
std
and
xor
in
aam
jbe
push
insb
test
adc
pop
mov
sbbl
adc
loop
lret
inc
xor
repz
cmp
add
inc
in
aas
bound
sahf
mov
jmp
cmpsl
loopne
sub
and
sbb
das
lcall
push
and
popf
mov
lods
add
int
das
daa
lods
mov
push
fcmovnb
mov
repnz
mov
repnz
push
or
rcrb
sub
decl
in
fsubrl
cmp
and
or
push
repnz
pop
sbb
sbb
push
int
into
repnz
nop
sub
adc
aad
ja
dec
cmpb
add
push
popf
xchg
cmp
mov
lret
or
stos
xlat
test
push
out
outsb
divb
aam
xor
and
cmc
mov
jbe
cmc
or
into
adc
adc
jns
or
es
test
or
and
fisubrs
bound
testb
sub
ja
fcomip
shl
daa
add
ss
stc
setg
es
loopne
addr16
push
cmc
jmp
sub
sahf
ficomps
sbb
dec
popa
dec
fisubrl
push
mov
cld
adc
js
push
push
jmp
cwtl
fs
cmp
ja
dec
aad
adc
std
enter
inc
call
int
lcall
jmp
sbb
push
mov
movsb
dec
test
in
shlb
out
fisubrs
testb
sbb
mov
popf
push
xor
xchg
in
mov
test
aad
sbb
pushf
push
dec
adc
cmp
lahf
or
btr
out
mov
faddl
jge
inc
addr16
pop
stos
les
xor
xor
ret
sub
ds
addb
movsb
pop
mov
inc
idivl
mov
adc
and
in
and
nop
es
push
pop
lcall
iret
addr16
loopne
pop
gs
or
cmpsl
lret
lds
mov
mov
push
fiaddl
sbb
in
jo
leave
inc
mov
roll
or
mov
icebp
xor
lods
dec
push
std
sub
or
jg
loopne
mov
out
shrb
inc
mov
and
xchg
call
imul
pop
cltd
mov
mov
sahf
mov
in
leave
xlat
iret
roll
ds
aaa
loopne
xor
dec
pop
aaa
por
adc
pop
cld
push
pop
shll
int3
dec
push
xchg
int3
shrb
inc
popf
rcl
aad
jg
mov
int3
imul
sub
gs
mov
inc
push
adc
movsl
fdiv
mov
int3
jge
pop
test
sub
fucomi
mov
mov
mov
mov
and
insb
cs
mov
push
dec
ret
scas
adc
aam
call
fsubs
pop
ss
les
adc
and
sbb
insb
mov
jp
jl
inc
inc
sub
xor
cmp
mov
fstl
cmpsb
in
std
mov
es
inc
out
push
stc
fbld
sub
mov
out
std
xor
idivb
hlt
test
fwait
jb
xchg
jnp
sahf
mov
scas
dec
imul
jecxz
movsl
notl
xchg
pop
pushf
outsb
adc
fmull
es
push
jbe
fbld
mov
xchg
cmp
mov
rcll
out
bnd
nop
movsb
jmp
dec
xorb
push
sbb
jae
and
mov
test
or
rorb
xor
cmc
iret
lods
cld
addr16
add
jbe
cltd
inc
dec
adc
fprem
test
pop
mov
pusha
or
mov
imul
dec
sub
int3
or
arpl
jmp
jns
inc
sbb
dec
in
pop
add
in
pop
imul
cmpb
pop
in
jae
aam
int
push
orl
sbb
sub
dec
and
mov
popf
mov
ljmp
fildll
xor
pop
push
push
xor
xchg
cmpsl
rclb
mov
push
sub
add
js
ss
fbstp
xchg
xor
into
dec
fistpl
jb
mov
push
data16
mov
cmp
add
std
scas
rcll
jnp
mov
or
push
sub
inc
mov
std
hlt
adc
mov
push
fmuls
cltd
cld
xor
icebp
sbb
cmp
inc
or
fildll
xor
daa
insl
adc
pop
cmp
or
mov
sub
mull
shll
dec
loope
jno
xor
pop
ljmp
adc
cmp
dec
mov
xor
test
adc
push
outsl
push
inc
push
pop
insl
fdivrs
lcall
jae
pop
rcll
lea
or
es
jecxz
inc
imul
add
inc
lea
call
and
mov
cmc
imul
push
xchg
mov
lds
fldenv
outsl
push
loopne
popf
cmpsl
jl
pop
mov
fstl
cli
ja
or
imul
rorb
mov
jmp
pop
test
mov
addr16
iret
mov
sbb
and
insl
in
outsl
and
ds
data16
sahf
in
jl
into
das
adc
nop
sahf
inc
mov
scas
in
inc
xchg
jg
mov
hlt
mov
mov
push
pop
int
lods
inc
cmp
add
gs
or
test
pop
mov
sbb
add
add
shlb
xchg
je
stos
imul
add
jg
bound
push
sbb
inc
sahf
int
nop
mov
into
dec
inc
and
mov
pop
stos
inc
into
pop
daa
pop
int3
mov
repz
out
mov
mov
lock
test
lret
mul
fs
nop
cld
sub
push
jne
stc
mov
fucomip
mov
dec
xor
xchg
pop
enter
mov
fwait
fwait
or
push
inc
jae
movsb
mov
dec
or
mov
aad
push
dec
shl
and
push
push
loopne
sub
ret
pushf
mov
leave
mov
mov
mov
xchg
or
mov
icebp
rcll
adc
jle
test
inc
fildl
or
mov
test
sti
cmp
pop
mov
add
jp
pop
loop
xor
cld
repz
mov
push
mov
repz
jp
subl
inc
sub
jns
jle
mov
insb
pop
xor
jge
xor
movsb
mov
imul
sub
pusha
sbb
inc
xchg
cltd
aam
jne
and
rorl
jno
mov
fstps
insl
push
sub
cmp
cmp
pop
fstl
jo
cmp
scas
push
ja
or
out
lahf
rolb
ja
adc
in
imul
pop
push
add
xchg
int
inc
fcmovb
insb
xor
lret
mov
outsb
lods
add
cmc
xor
xor
jge
mov
jns
push
addb
cwtl
fstps
pextrw
mov
insb
or
fidivrs
setae
bswap
xorl
insb
scas
mov
daa
inc
aam
adc
lea
insl
cld
test
repz
mov
and
insb
insb
das
cli
or
pop
arpl
xchg
pop
jmp
mov
stc
cmc
add
test
lea
jbe
repz
lret
cmc
cmp
cmp
mov
or
pop
rolb
pop
pop
fs
mov
jp
imul
fwait
push
dec
or
xor
mov
test
mov
test
mov
mov
movsb
add
js
dec
imul
fisubrs
inc
and
mov
imull
mov
ret
mov
add
cmp
xchg
and
xor
cmp
add
out
jge
shll
movsb
mov
pop
cmp
data16
pop
aas
shll
mov
mov
iret
lret
lods
dec
jo
repnz
scas
mov
lods
and
push
push
pop
mov
loope
mov
pushf
repnz
xchg
xchg
das
xchg
jl
data16
pop
test
int3
or
pushf
aaa
sub
popa
imul
pop
test
fwait
inc
mov
test
fistpll
shll
mov
arpl
sbb
pop
or
fnstsw
stos
or
cmpl
or
out
pop
loop
addr16
mov
lds
xchg
js
daa
popf
push
xlat
mov
ficompl
scas
push
lahf
pop
mov
sub
test
fs
int3
inc
push
mov
scas
lds
or
daa
add
and
sbb
cmp
and
xchg
lcall
movsl
scas
rcrl
ljmp
add
ret
gs
push
out
sub
mov
ss
jmp
push
loope
lret
dec
imul
sbb
dec
adc
loop
or
and
xchg
adc
lret
loop
mov
stc
xchg
stos
inc
fsubrl
push
gs
stos
xchg
mov
push
ljmp
cwtl
imul
adc
stos
aaa
add
and
imul
inc
outsl
movsl
cmpsl
dec
xor
out
sub
ret
jae
cmp
inc
fadds
mov
in
fbld
jb
movsl
sbb
aad
in
sbb
out
or
cwtl
push
scas
pushf
les
mov
inc
lock
dec
or
adc
inc
or
mov
js
mov
lahf
lahf
pusha
dec
xor
push
cmc
cmpl
mov
inc
ret
hlt
mov
daa
cltd
pop
and
inc
lret
dec
dec
lods
inc
cwtl
xor
insb
cltd
cmp
mov
xchg
and
sti
int3
mov
sbb
inc
mov
out
dec
call
adc
cmp
or
add
cmpsb
push
imul
mov
aas
decl
nop
cs
lret
xchg
fcomi
lds
xor
ror
or
pop
add
adc
pusha
mov
sbb
inc
xor
rorl
xchg
xor
scas
adc
inc
sub
xchg
test
jbe
out
cld
iret
fidivl
mov
es
rolb
add
jno
xor
push
push
pop
mov
mov
pop
cmp
lcall
lds
stc
test
xor
shlb
jb
nop
cld
xchg
adc
xchg
push
imulb
cmp
push
or
jno
xchg
mov
loopne
xchg
jno
xchg
into
imul
das
andl
neg
in
pushf
sbb
xor
xor
fimull
adc
stos
mov
clc
mov
xor
mov
jno
scas
add
cmp
or
xchg
sub
iret
test
jge
xchg
push
inc
pop
jbe
ret
fistps
in
pop
adc
mov
push
dec
ja
sbb
push
out
xchg
add
and
rolb
sbb
mov
mov
rcl
adc
xchg
or
xchg
in
push
sub
aaa
std
adc
push
or
hlt
jae
push
fisubs
xchg
adc
and
xchg
clc
sub
dec
xlat
adc
in
cwtl
clc
cli
cmpsb
inc
ja
stos
inc
incl
movsl
mov
push
lret
ds
pusha
popf
mov
pop
ficoms
aaa
pop
lock
add
sahf
imull
inc
add
cltd
mov
mov
testl
jo
push
xchg
push
push
mov
jmp
sahf
test
and
out
push
pusha
jge
mov
pop
ret
out
daa
lret
rcrl
lahf
xchg
push
in
scas
or
icebp
cwtl
cmpsl
jne
hlt
jo
movsb
push
mov
dec
shrb
push
xor
loope
notl
mov
and
addr16
inc
cmc
dec
inc
decl
dec
pmaddwd
inc
pop
or
dec
sbb
pushf
test
test
cli
fwait
mov
and
insb
aaa
imul
addr16
jb
ds
cmp
inc
imull
lret
pushf
shlb
test
je
xchg
js
xor
into
inc
mov
mov
cmp
in
insb
jmp
pop
shrl
adc
test
add
into
in
lock
test
sbb
mov
fcmovb
cmp
notb
scas
mov
frndint
in
xchg
in
adc
scas
push
fs
push
jmp
fs
xor
loop
call
cmc
xchg
xchg
ret
fs
pop
stos
or
add
lret
icebp
enter
ds
jecxz
loope
push
push
into
dec
dec
xor
je
std
mov
call
add
mov
dec
iret
jno
enter
daa
imul
repnz
in
push
mov
xor
dec
movups
das
sub
daa
fldt
mov
aad
push
mov
and
dec
movsb
dec
and
bound
sti
mov
push
mov
sub
sbb
jne
jp
jnp
jne
jno
movsl
sbb
punpckhbw
es
inc
jl
mov
fcmovu
mov
mov
add
loop
cmpsb
cmpsl
and
pop
mov
inc
add
push
scas
sub
xchg
jnp
adc
pop
inc
aaa
cmp
cltd
or
inc
or
add
adc
rclb
xor
sub
js
mov
icebp
lret
mov
xchg
mov
and
mov
fwait
mov
inc
loopne
pusha
hlt
jmp
xorb
cmp
out
adc
addr16
jbe
mov
dec
sti
cmpsl
test
cli
in
fnstenv
cmp
in
sub
sbb
pop
mov
shr
movsb
or
jge
shl
sub
jae
lock
push
xchg
or
xor
shrb
leave
pop
popf
jno
in
add
cltd
mov
push
add
pop
inc
in
push
fisttpll
out
enter
test
aas
test
or
nop
pop
leave
scas
push
cld
jg
or
je
and
roll
mov
xor
insb
jnp
in
pop
inc
mov
or
inc
gs
jne
cmp
shlb
fcmovnbe
orb
rol
dec
popa
dec
fstps
jg
icebp
or
or
pop
xchg
int3
push
fs
scas
mov
sahf
ss
ds
push
dec
test
movsl
cmp
add
or
xor
dec
cmc
sub
fwait
nop
rcl
movsb
paddsw
push
test
inc
mov
pop
xchg
dec
hlt
imul
xor
mov
push
jno
xchg
mov
out
mov
inc
adc
out
scas
fwait
jbe
mov
xor
out
call
mov
idiv
fistpll
sbb
or
iret
outsl
cs
mov
mov
daa
and
outsb
es
orw
outsl
aas
push
push
cmp
leave
fdivl
test
not
sti
pusha
leave
loopne
sbb
ss
xchg
int3
mov
add
int3
loope
pop
sti
inc
scas
mov
pop
insb
lods
cmp
xor
lahf
cmpl
xlat
mov
xchg
shlb
lods
in
mov
jo
sti
clc
push
pop
pop
or
jb
pop
imul
sub
push
outsl
sub
mov
dec
mov
std
in
xor
xchg
mov
fsubp
fcoms
xlat
out
mov
adc
push
ficoml
enter
xor
jno
inc
pop
pop
insb
pop
jmp
inc
dec
pop
xchg
out
je
idivl
bound
jmp
lea
pop
fwait
sbb
hlt
sub
jecxz
mov
mov
aaa
inc
lods
mov
push
pushf
mov
xor
jb
and
call
inc
repz
shll
add
fistl
sub
add
mov
fsubrs
jae
mov
cmp
rclb
js
mov
xor
ret
rcrl
clc
jne
aam
stos
imul
mov
out
mov
loop
nop
pop
ss
or
das
nop
push
loope
sub
and
sub
cmp
xchg
call
pop
pop
je
dec
add
stos
adc
sub
mov
dec
pop
mov
xchg
sbb
das
add
in
and
cmp
es
ret
adc
test
scas
xchg
mov
jge
cmp
clc
pop
pop
jo
movsl
or
xchg
mov
add
ret
cmp
cmp
dec
adc
mov
jb
cmp
iret
ds
aad
idivb
jp
xchg
int
pop
jo
aas
daa
hlt
or
push
out
push
lcall
sbb
je
or
fcmovnbe
lock
cli
push
inc
jle
dec
aas
jg
jmp
pushf
mov
rolb
xchg
enter
pop
nop
xchg
shll
push
gs
pop
pop
sub
in
fistpll
xor
insl
mov
sbb
sbb
fmuls
jb
paddw
in
repz
mov
shll
mov
hlt
or
mov
mov
es
movsl
push
push
sub
sub
inc
into
xor
jle
ja
sub
mov
bound
mov
fidivrs
xor
mov
shll
sub
enter
pop
pop
scas
sbb
adc
and
xchg
push
mov
fcomps
adc
ss
pop
outsb
ljmp
mov
or
sbb
jb
out
jnp
mov
aaa
ja
dec
jge
aas
sti
sub
clc
shll
inc
ret
mov
push
push
es
in
fsubr
inc
fs
mov
popf
mov
in
xorb
rclb
push
movsb
cwtl
or
jbe
jb
out
pop
arpl
mov
scas
mov
dec
mov
jae
pop
test
push
sbb
bound
loop
push
push
lods
or
jge
test
loopne
push
pop
xor
mov
mov
cmpsl
scas
fsubrl
imul
cmpsb
adc
mov
dec
popa
mov
test
pop
xor
mulb
jb
shll
mov
adc
pop
iret
cmp
aaa
stc
pop
pop
inc
add
cmp
daa
cmp
ljmp
aam
or
push
ret
or
mov
ss
adc
dec
jne
outsb
pop
xor
xorb
push
enter
add
ficompl
dec
ror
and
rcr
int
fisubl
or
xchg
add
or
xchg
cmc
adc
dec
shrb
mov
pop
and
out
das
adc
xchg
pusha
outsb
pop
sbb
jo
sub
cmp
stc
dec
pop
scas
mov
or
cmp
or
or
lods
iret
lret
scas
loop
add
fwait
int
decb
inc
clc
notl
test
and
push
inc
sub
push
pusha
mov
pop
push
nop
add
stc
mov
sub
popf
dec
mov
jl
adcl
and
pop
rorl
jl
sbb
dec
jb
jp
sbb
test
cmp
leave
imul
sub
cli
popf
fsts
jbe
outsl
dec
mov
or
lcall
pusha
add
xor
mov
xlat
xor
sti
xchg
xor
fistl
and
push
test
mov
inc
or
jge
push
int
xchg
dec
cltd
je
mov
lea
cmp
push
into
test
daa
cli
push
jecxz
iret
inc
add
add
imul
int3
cmpsb
ds
mov
insl
repnz
dec
out
mov
cltd
jb
pop
pop
mov
repz
or
xor
daa
cmpl
push
jl
pushf
pop
clc
rcr
testb
sbb
adc
stos
insl
xchg
loopne
cmpsl
arpl
aad
xor
push
test
insl
daa
mov
cmp
push
push
lock
jno
ss
lahf
mov
push
dec
inc
or
add
mov
xor
clc
lahf
lret
mov
adcb
pop
sbb
or
fidivrs
adc
sbb
addl
dec
psubusw
outsl
mov
sub
js
jecxz
jge
rcl
jg
add
push
push
int3
push
int3
mov
sbb
dec
adc
outsb
mov
mov
and
push
mov
mov
pop
sub
mov
adcb
out
jecxz
icebp
jge
pop
jmp
jns
andb
pop
aam
cmp
insb
push
or
pop
js
jb
mov
testb
cmp
shll
rolb
loope
hlt
and
imul
mov
jne
cmp
inc
imul
iret
lods
mov
adc
push
mov
hlt
scas
lret
xchg
pop
xchg
psubw
int3
divl
fcomps
jge
test
ret
mov
dec
test
insl
iret
jnp
fdivl
add
cltd
xor
pushf
push
mov
jne
jnp
stos
in
inc
mov
sti
roll
insb
push
jns
lods
push
aam
sub
shl
cmp
sub
popf
mov
jae
and
daa
cwtl
aad
popf
fildll
push
jge
aam
sbb
xlat
xchg
and
xchg
push
fsubr
jns
insl
decl
xor
xchg
bound
cmp
hlt
stos
inc
lahf
jae
add
cltd
cmp
or
sub
mov
mov
xchg
mov
inc
lods
jne
jp
push
mov
dec
sbb
cltd
adc
inc
rorl
insl
pop
xchg
inc
loope
jb
mov
or
in
or
sub
mov
pop
add
scas
sbb
mov
xchg
sub
xchg
dec
xchg
out
xor
jmp
lock
ljmp
outsb
aaa
data16
mov
loope
gs
in
lret
and
insb
hlt
push
jge
lods
push
cmp
stc
xchg
lds
xchg
and
fnsave
repz
stc
pop
dec
xchg
sub
jb
lds
or
arpl
adc
ljmp
mov
hlt
je
mov
adc
dec
adc
sub
xor
cmpsb
dec
mov
in
mov
add
xor
xchg
pop
mov
mov
popa
repnz
lahf
pop
inc
inc
mov
and
addl
test
movsb
sbb
popa
test
out
andl
fmul
mov
cmpsl
cmp
cmp
insb
and
subb
mov
orb
fucomi
pop
mov
adc
xchg
xchg
jbe
and
sbb
inc
and
mov
lea
mov
jge
cmp
sbb
int3
pop
aaa
xchg
mov
orb
jp
addb
decb
mov
ret
stc
adcl
sahf
sarl
inc
add
xchg
cld
push
mov
jae
or
rolb
cltd
push
push
xor
shrb
mov
fisttpll
ss
mov
int
push
int3
xchg
dec
lret
subl
jo
popf
pop
lahf
orb
jns
mov
cmpsb
outsb
cmp
iret
jle
pop
jae
jno
xlat
xchg
popa
sbb
js
leave
push
xchg
jp
cltd
fidivrl
jmp
and
sub
mull
add
push
jbe
sahf
lds
push
dec
sbbb
push
and
fwait
dec
push
cld
std
lret
clc
imul
aam
adc
int
push
imul
ds
ret
movsb
jg
test
mov
cli
pop
xorb
inc
push
inc
sbb
push
xlat
arpl
mov
clc
mov
xor
xchg
fdivrl
and
imul
inc
adc
popa
and
out
rorb
addb
mov
mov
movsl
sbb
sub
xchg
shr
push
loopne
stc
mov
mov
ja
pop
jge
cmp
sub
repnz
sbbb
mov
dec
stc
loop
inc
jmp
adc
ret
dec
push
cmp
fldenv
test
addb
sahf
dec
aas
sub
fidivrs
subl
ss
add
inc
and
jmp
xlat
fdivrs
xor
test
inc
inc
pop
ret
in
inc
scas
xor
mov
std
add
push
jg
inc
lea
pusha
fistpll
xchg
xor
rcrl
inc
jge
fwait
sbb
scas
and
and
xor
adc
stc
mov
fisubl
push
lret
mov
sub
mov
sub
mov
jbe
sub
sti
and
push
pop
insb
sub
mov
ret
js
mov
rcrb
js
inc
sbb
test
aam
dec
js
inc
cltd
xchg
jno
cld
sub
jmp
xchg
push
adc
push
mov
xchg
js
push
call
leave
xchg
inc
icebp
adc
outsl
xor
notl
cs
xchg
inc
xor
sbb
jl
cmp
popa
or
xchg
inc
mov
and
icebp
mov
lock
mov
inc
hlt
dec
scas
mov
imul
pop
aaa
outsb
jnp
or
sub
stc
js
xchg
stos
mov
push
mov
pop
push
adcl
and
jnp
add
jmp
rcll
xor
leave
mov
lock
js
mov
cwtl
shl
adc
jae
lods
and
or
loopne
mov
lds
jo
pop
mov
cmp
dec
in
adc
cli
mov
out
loope
mov
mov
mov
sbbb
mov
jno
mov
sbb
fisttps
mov
cli
fnstenv
mov
inc
jnp
sub
push
jno
dec
dec
aad
jo
insl
push
in
or
stc
scas
or
leave
xor
bound
sub
out
xchg
fdivs
pop
out
adc
cltd
pop
rorl
push
jne
aaa
rorl
dec
pop
xor
rclb
sub
in
movsb
scas
aad
pop
cmc
mov
ja
sbb
jae
jmp
or
pop
xchg
inc
jnp
mov
fbld
jae
gs
std
inc
lock
and
push
mov
das
mov
mov
sub
out
mov
cmp
inc
movsl
test
int3
push
shll
jmp
out
lret
and
lea
out
or
or
jg
xchg
popf
loope
arpl
jb
inc
xchg
xchg
mov
sub
sbb
dec
shrb
addb
mov
das
outsb
mov
sbb
xor
lcall
cmc
add
mov
stc
mov
cmp
enter
mov
adc
cmp
mov
in
ret
mov
cmpsb
mov
mov
rorl
lods
imul
out
add
push
dec
cwtl
repnz
sub
push
add
and
pop
mov
xchg
fstpt
pop
out
int3
daa
dec
pop
rclb
inc
dec
rclb
add
push
lret
inc
push
add
and
mov
add
or
inc
push
xor
sub
adc
jle
mov
and
stos
repnz
dec
adc
dec
sub
sbb
out
arpl
jp
cwtl
mov
subl
mov
mov
test
push
fcoml
cld
add
pusha
fldl
mov
sti
inc
and
adc
dec
mov
or
or
les
cmc
dec
jmp
adc
fldt
jo
adcb
rcll
iret
mov
cmp
fwait
mov
mov
ret
imul
mov
dec
insb
adcb
icebp
adc
fmull
rorb
dec
out
in
lret
adc
aam
xor
lods
test
movsl
push
sbb
insl
stc
cli
pop
push
lahf
adcl
test
mov
ret
sub
es
call
push
rorb
cmpsb
jle
cld
pop
cwtl
repnz
mov
or
dec
adc
mov
js
insb
push
mull
xor
or
ret
dec
mov
pop
je
adc
xor
pop
fstps
out
push
popa
or
xchg
int
mov
imul
std
sar
mov
ret
stos
inc
add
sti
rcrb
adc
mov
aad
push
addr16
fucomp
pop
and
mov
out
pop
repnz
fwait
adc
in
fidivs
stos
in
jp
jle
in
lret
mov
xor
lea
mov
dec
test
ljmp
cld
jge
jg,pn
mov
mov
dec
sub
imul
push
fcmovnu
bound
fcoml
xchg
mov
sbb
push
xor
rorb
jbe
fwait
ret
std
push
les
dec
fisttpll
mov
inc
loop
inc
mov
cmpsb
sbb
sub
dec
movsl
cmpsl
test
aam
lahf
or
jb
inc
int
cmpl
int3
shll
cmpsb
push
push
pop
pop
mov
popa
mov
adcb
mov
pop
jns
sbb
or
add
or
pop
dec
addr16
mov
lahf
sub
cmp
movlps
push
sbb
into
push
popa
pushf
aaa
cmp
fisubrl
inc
xchg
out
faddl
mov
hlt
insl
and
ja
fdivl
jns
lcall
xor
mov
into
jnp
inc
mov
sbb
fidivrs
insl
pop
pushf
fstpt
test
sarb
cmp
shll
mov
sbb
int
ja
xor
jmp
daa
rcrl
and
dec
sub
dec
mov
dec
insl
into
mov
arpl
daa
jmp
sbb
dec
xchg
mov
repnz
sbb
push
int3
dec
jae
sbb
sbb
pop
lods
sbb
leave
fcoms
mov
ret
or
pop
pop
in
data16
cmp
es
adc
pop
lret
xor
push
cs
cltd
sbb
mov
add
es
mov
inc
ljmp
sbb
outsl
jnp
lods
mov
inc
aas
icebp
outsb
nop
shlb
fs
mov
out
movsb
insl
test
outsb
rcrb
xchg
movsl
pushf
sub
test
push
push
jecxz
fwait
ljmp
mov
insb
in
test
popa
pop
dec
roll
mov
sbb
clc
dec
mov
cmpsl
mov
inc
push
pop
or
fsubs
stc
dec
mov
outsb
xor
inc
cmc
jg
or
and
cmc
stc
nop
imul
lret
clc
adc
adc
xor
pop
mov
mov
mov
xchg
popa
ficoms
insl
and
push
pop
mov
in
pop
fdivl
jns
scas
popa
and
clc
and
sbb
imul
pushf
dec
push
dec
fistpl
jge
add
jne
insb
das
bound
cld
iret
lret
jecxz
pusha
mov
sti
push
aas
bound
mov
jmp
mov
cmp
outsl
ss
fucomp
mov
push
and
bound
jg
in
adc
add
cmp
dec
frstor
xor
gs
lods
xor
bound
ljmp
fimull
dec
sbb
adc
inc
push
rcrl
les
lcall
pop
shl
pop
fdivl
push
outsl
popa
pop
je
repnz
sbb
xor
aam
and
sbb
jnp
inc
jne
jle
dec
cwtl
sub
xchg
mov
xor
or
push
shlb
lea
leave
mov
out
cmpsb
aaa
xor
xchg
imulb
add
jl
xchg
and
add
jae
dec
xlat
into
fldl
pusha
xchg
add
push
push
out
mov
mov
adc
mov
das
dec
jle
xchg
test
xchg
rorb
pop
ljmp
into
out
sbb
mov
pop
jno
jnp
bound
out
rcll
lret
out
or
test
sbb
subb
push
and
dec
push
out
jbe
jae
push
ds
jo
rolb
imul
xchg
inc
jno
or
push
or
fldt
or
decb
fs
sub
ds
xlat
mov
xchg
sbb
repnz
and
call
ret
push
push
sub
pop
nop
je
cmp
dec
pop
sub
sbb
ljmp
mov
out
mov
imul
outsb
xchg
adc
ljmp
inc
pop
loopne
in
jle
dec
dec
sub
jno
cmp
inc
loopne
sub
in
inc
mov
data16
aam
cmpsl
lods
fiaddl
jnp
sbb
and
sbb
repz
mov
sahf
dec
sti
mov
aam
aam
mov
sbb
shlb
xchg
mov
adc
and
dec
aaa
adc
xchg
and
cli
pop
xor
pop
sarl
jecxz
popa
stos
notb
roll
in
mov
dec
xchg
mov
dec
in
js
hlt
push
cli
jno
out
mov
mov
add
dec
insl
fsub
and
cmpl
dec
xchg
arpl
mov
bound
repz
pop
or
xchg
inc
pusha
repnz
adc
cmp
sbb
or
in
sbb
idivb
and
aam
enter
loope
xchg
cmc
daa
mov
jb
inc
add
jmp
clc
loope
test
xchg
in
lret
add
in
mov
cs
call
lea
bound
aas
adc
outsl
push
dec
jle
movsb
fisubs
aaa
hlt
mov
mov
insb
mov
and
xchg
push
xlat
sbb
mov
mov
xchg
enter
or
dec
add
mov
jmp
rep
xor
xchg
xchg
xchg
data16
stos
jmp
adc
in
add
mov
cwtl
inc
rcrb
or
cmovne
jmp
repnz
inc
dec
add
gs
sahf
jecxz
or
lret
imul
lahf
dec
lods
divl
es
sub
and
mov
mov
lret
popf
and
push
sbb
aaa
test
clc
hlt
inc
popf
xor
scas
loop
jns
lcall
push
and
loop
mov
je
pop
sub
shr
lods
add
addr16
push
neg
lea
mov
ljmp
push
in
daa
outsb
int
fistl
aaa
fildl
jb
int3
cmc
sub
inc
fidivs
xchg
jmp
daa
pop
jge
lock
fdivrp
jmp
mov
adc
cs
jb
sti
ja
test
out
dec
decl
mov
out
xchg
mov
cmp
sbb
mov
cmp
fstpt
shrb
add
cmc
or
mov
repnz
xor
cmovb
clc
je
push
mov
mov
cli
fs
mov
in
lods
pop
push
cmp
sbb
pushf
fldl2t
popa
cmp
mov
mov
fsubrl
test
aas
into
push
push
sahf
stos
pusha
es
fimuls
loopne
mov
sbb
sub
les
out
sbb
aas
enter
outsb
sti
inc
or
mov
in
nop
pop
leave
pop
sbb
mov
mov
and
ret
shlb
push
pop
cmp
movsl
push
idiv
xchg
clc
inc
push
sbb
lea
xchg
mov
pop
mov
mov
popa
fiadds
test
mov
addb
dec
rcrb
aam
sub
add
mov
mov
jecxz
fs
xchg
in
testl
repnz
ss
pop
es
cmp
pop
enter
adc
jno
pop
or
jp
ds
adc
cli
xlat
inc
add
cmp
inc
jmp
in
sti
adc
add
pop
xchg
sbb
cmpsl
push
mov
data16
cwtl
iretw
xchg
scas
jecxz
gs
mov
cmp
push
stos
push
inc
xchg
lcall
adc
addr16
jp
lret
adc
dec
in
mov
jmp
lret
cmpsl
push
shrl
mov
cmpsl
outsl
push
fcompl
lods
sahf
lods
std
mov
shll
adc
jg
aad
xchg
fucomp
out
pop
jecxz
push
cs
mov
sahf
hlt
push
shl
adc
jno
sarl
and
and
xor
or
fidivs
cmp
jmp
orl
or
aad
push
push
pop
and
fcompl
push
mov
jo
sbb
movsl
dec
les
jmp
in
sub
scas
mov
insl
add
push
and
js
adc
bound
xor
jecxz
std
jl
mov
nop
jecxz
or
dec
or
in
sbb
sti
jmp
orb
jo
roll
jmp
out
xchg
insl
sarb
mov
and
inc
out
pop
mov
out
or
pop
sub
jp
and
popa
mov
or
movsb
mov
hlt
push
inc
push
cmc
xor
out
and
pushf
dec
and
scas
push
leave
in
mov
push
inc
or
decb
scas
arpl
xor
popa
dec
xchg
hlt
and
fadds
sub
mov
pop
dec
add
pop
pop
in
adc
gs
leave
pop
push
outsb
cwtl
mov
cmp
loope
adc
xor
adc
or
out
jno
sbb
insl
lret
cltd
arpl
call
lret
popf
fcompl
nop
pop
push
inc
pop
bound
dec
xor
xor
in
pop
jl
test
jg
lods
je
dec
jmp
pop
popa
add
adc
clc
and
mov
mov
lods
fstpt
mov
aad
xor
adc
mov
fisubl
arpl
rolb
dec
lock
mov
loopne
fwait
dec
ds
ljmp
lds
mov
in
push
nop
mov
add
sbb
lea
stc
pushf
mov
xor
sbb
repz
push
ror
jo
mov
or
jno
xchg
mov
mov
add
pop
adc
fstpt
sub
or
insb
andb
and
mull
mov
jno
js
pop
pusha
and
roll
aaa
loopne
mov
out
mov
out
mov
mov
xor
rol
cld
outsb
mov
out
xlat
jns
addr16
out
mov
sub
cmc
xchg
loopne
pop
mov
xchg
jae
rolb
mov
pop
cmpsl
jl
mov
xchg
cmp
stos
subl
jecxz
push
xchg
dec
test
rcrl
jmp
push
jle
lret
push
mov
ficompl
mov
adc
mov
jns
push
mov
pop
xchg
sbb
shlb
loope
ljmp
test
or
mov
add
out
cld
push
ror
gs
das
push
and
fstpt
je,pn
xchg
and
mov
iret
imul
faddl
sbb
aam
cmp
outsb
out
orb
mov
sbb
test
jno
xchg
stos
inc
in
lea
movsl
pop
sbbl
sahf
sub
lcall
lahf
add
int3
leave
mov
inc
sub
fcoms
pop
xchg
pop
and
pop
pop
fs
or
adcl
jb
in
lds
and
add
pop
sub
fcmovu
cltd
sbb
mov
std
jb
inc
test
out
sti
sbb
shrl
xchg
add
sbb
mov
loopne
shrb
jecxz
dec
inc
inc
push
dec
popa
call
cmp
out
inc
adc
repz
jle
sub
mov
pop
movsl
aaa
sub
scas
sbb
push
or
xor
jnp
xchg
daa
ret
jmp
movsl
outsl
xchg
js
test
outsl
dec
fnstsw
nop
test
popa
push
aad
scas
dec
xchg
cltd
pop
cmp
mov
mov
adc
and
in
lret
pop
clc
sbb
push
jmp
leave
movsl
repnz
add
in
jg
or
aaa
subl
sub
loope
inc
jmp
and
enter
mov
or
repz
fcomps
mov
fsub
pop
cltd
arpl
aad
je
in
decb
shll
repz
sbb
ja
push
pop
xchg
or
dec
xor
daa
nop
loopne
dec
cmpb
stc
das
xorl
ja
sbb
imul
fs
cltd
jb
jb
fs
ljmp
add
add
fimuls
and
lcall
lea
inc
jmp
mov
lahf
mov
sub
or
orb
ss
jl
fstpt
outsb
addr16
outsl
xchg
jle
xlat
dec
add
sahf
ret
clc
dec
ja
xor
or
shr
nop
cld
mov
push
ret
int3
xor
das
inc
mov
sub
fcompp
roll
cmpsl
pop
fidivs
std
fs
xor
push
popf
mov
push
lods
subl
movsl
jl
loope
sbb
inc
fwait
xor
shlb
mov
xchg
adc
leave
cmp
ljmp
push
and
adc
fs
sarb
mov
pop
jl
push
imul
lahf
imul
jl
pop
xor
push
jge
sbb
jg
subb
push
xchg
ja
inc
cmp
int
cmpsb
push
sub
cmpsl
pusha
sbb
dec
jge
clc
hlt
test
and
jo
xchg
jae
insl
or
mov
mov
lret
dec
jb
mov
cmp
sbb
imul
add
mov
pusha
gs
aam
cmp
nop
pusha
pop
pop
xchg
xor
je
loop
xor
mulb
in
push
and
sub
xchg
xorb
and
mov
cmp
mov
sbb
into
push
je
push
pop
push
add
jbe
imul
mov
xor
scas
jb
pop
popf
jl
lret
or
mov
push
cwtl
xchg
aam
pop
imul
insl
xor
xchg
enter
aam
daa
pop
pusha
sub
add
sbb
sub
jmp
loopne
fists
andb
or
sarb
js
jmp
jbe
sub
xchg
jae
pop
mov
loopne
test
adc
push
shlb
jb
mov
adc
scas
xor
mov
jp
adc
dec
lods
test
dec
cmpsb
or
mov
xor
or
cmp
stos
sbb
loope
pop
xor
pop
pushf
adc
push
cld
add
mov
xchg
mov
imul
pop
jae
fsubrl
pop
aam
mov
sub
mov
outsb
add
pushf
xchg
imulb
jae
pushf
sbb
mov
cli
or
jle
inc
mov
xchg
sarl
fldenv
arpl
lock
pop
movsb
push
sbb
mov
lcall
push
leave
test
cmc
inc
addr16
fsubrp
sbb
jg
jno
mov
mov
adc
pushf
imul
cmpb
out
loope
into
pop
stos
lahf
in
mov
scas
or
sahf
pop
nop
mov
sbb
push
lea
lea
pop
cmc
in
cltd
fisttpl
imul
fstpl
mov
mov
mov
scas
int
add
mov
iret
rcll
mov
jg
icebp
and
push
daa
push
fwait
push
ret
cmpsb
sub
loop
insl
iret
add
dec
xor
jmp
fs
sbb
popf
jp
ljmp
cmpsl
sbb
lahf
stos
fisubrl
sub
test
inc
dec
add
cmp
lods
pop
sub
test
sahf
pop
insl
ret
iret
xchg
loope
add
cltd
cli
mov
je
je
leave
gs
inc
push
pop
cmpsl
mov
loop
xchg
stos
sub
fld
xchg
sbb
mov
xchg
xor
and
push
lds
cli
cmp
test
aad
sbb
leave
push
xchg
test
add
push
and
into
adc
jae
scas
fisubrs
adc
lock
dec
loope
pushf
aaa
shll
cmp
dec
rolb
fucom
js
push
mov
mov
cmp
imul
cmp
and
push
lahf
push
mov
cmp
mov
add
jl
lret
cli
pop
and
loopne
cmp
fisttpl
fsts
fs
shl
and
and
testl
call
xchg
push
push
test
xchg
and
shrl
fistl
add
xor
jae
inc
mov
sarl
sarb
stos
js
mov
movsl
push
cwtl
xor
add
aas
mov
sub
jmp
push
add
popf
mov
cltd
pop
mov
shlb
push
push
ficomps
sub
lcall
jae
pop
mov
jns
adc
jecxz
popa
pop
mov
inc
push
pop
or
dec
repnz
jo
sub
rclb
dec
fisubl
cmp
icebp
add
sahf
imul
bound
cwtl
hlt
in
xor
imul
divb
mov
movsl
push
rorl
pop
arpl
out
mov
mov
xor
mov
xchg
push
xchg
ret
xchg
mov
orb
sbb
mov
sub
or
pop
outsl
push
ret
stos
push
rcrl
mov
mov
mov
cli
rcll
add
ds
sub
call
orl
inc
js
inc
pop
mov
add
sbb
lods
jecxz
out
daa
sub
push
in
cmp
mov
in
and
dec
and
std
jne
fnstsw
or
lret
out
je
stos
lcall
sbb
test
iret
iret
pop
icebp
inc
cmp
das
jo
rol
mov
ror
arpl
inc
push
jle
popl
or
jnp
push
and
fimull
stc
mov
sar
xchg
mov
xor
in
sti
inc
sbb
pop
xor
addr16
pop
xchg
repnz
out
jg
fwait
or
push
pop
ret
jg
or
mov
push
and
and
ljmp
add
je
psubd
mov
pop
shlb
arpl
imul
mov
or
test
das
adc
xorl
cmp
lcall
aaa
repnz
cs
xchg
ret
nop
repnz
jge
fldpi
insl
inc
pusha
je
lock
and
xor
jnp
push
add
add
dec
aaa
mov
cltd
leave
jo
sub
adc
pop
ss
addr16
inc
aaa
int
xor
repz
fistl
repnz
cwtl
jne
add
mov
pop
mov
pop
nop
call
jo
lret
jle
iret
fidivrs
call
fstpl
adc
push
cld
movsl
out
lds
mov
jmp
sbb
icebp
push
pop
roll
jge
adc
aaa
push
test
rclb
dec
adc
push
leavew
or
arpl
push
sub
nop
cmpsb
mov
xchg
int3
sbbl
mov
xchg
cmp
push
inc
mov
cmp
into
es
lret
cmp
in
aaa
addr16
adc
xchg
fistpll
xchg
icebp
stos
call
cwtl
lret
roll
iret
mov
jnp
aam
sub
mov
cmp
sub
xchg
cmp
push
mov
call
jno
int
ret
pop
dec
jb
add
sbb
fwait
add
push
ljmp
push
sahf
xorb
iret
imul
int3
jle
es
sub
mov
mov
mov
sahf
jae
test
ja
add
test
push
and
mov
cli
imul
mov
xor
arpl
cmp
mov
push
dec
lock
aas
sbb
std
and
ds
pop
cmp
cmp
in
or
and
and
mov
nop
adc
jne
mov
dec
adc
sbb
arpl
daa
das
mov
outsb
fdivl
leave
jmp
js
dec
aam
pop
mov
int
mov
iret
and
fs
aam
cmpl
divb
pop
jbe
aad
add
lcall
cmpb
ss
mov
movsl
cmpsl
mov
test
and
inc
add
stc
sti
lret
xchg
jmp
pop
dec
push
sub
mov
imul
sbb
cmp
push
subl
out
jb
jl
cmp
pop
push
call
outsb
pop
mov
cmpsl
adc
xchg
fisttps
insl
ljmp
pop
rorb
xor
or
sub
and
js
jns
cmc
call
ja
ret
pop
lea
cmp
inc
outsl
lahf
push
inc
jbe
dec
aam
or
lret
test
jge
aas
fsubs
lods
push
sbb
sub
pop
sbb
addr16
adc
sub
xor
push
inc
fwait
mov
ret
pop
dec
addr16
inc
imul
sub
mov
in
jle
inc
pop
inc
hlt
es
shrl
ss
int
movsl
jnp
insb
mov
addr16
add
iret
mov
movsl
ljmp
pop
js
cmp
push
popf
lea
push
push
pop
lods
into
add
sbb
and
or
lea
add
mov
shl
mov
sar
test
divl
pushl
into
sarb
dec
add
dec
test
dec
inc
loop
mov
outsl
cltd
enter
enter
sbb
inc
cmp
fiaddl
adc
push
std
pusha
out
pop
fistpll
das
cmp
sarl
push
pop
rclb
aam
inc
test
mov
cmpsb
in
aam
add
or
jo
lahf
test
fucom
mov
cmp
xlat
xchg
jne
push
leave
jmp
dec
movsl
dec
jecxz
fisttpl
push
shlb
adc
xor
lret
add
bound
fwait
dec
dec
outsl
ret
ret
inc
mov
pop
fcomps
cmp
xchg
jle
fsts
and
jp
and
das
cltd
xchg
cmpsb
adc
fnstenv
mov
insl
fstps
gs
sbb
push
sbb
ss
mov
inc
mov
inc
jno
cs
test
ds
mov
xchg
dec
lds
int3
add
pusha
sub
and
adcb
outsb
pop
fdivp
sbb
inc
sub
pop
and
pop
mov
scas
jp
ror
aam
push
fsubl
sahf
inc
adc
jo
xchg
sub
fcmovne
je
fcmovnb
jbe
inc
insb
cmp
decl
and
inc
adc
or
cmp
lret
mov
dec
pop
mov
jne
sbb
jb
pop
mov
pop
ja
pop
xor
stc
movsl
aaa
add
and
mov
ljmp
leave
sbb
sahf
insl
add
push
pop
clc
stos
cmp
into
lcall
in
mov
stos
sub
dec
jo
sbb
xor
cmp
push
fs
mov
pop
movsl
sub
adc
test
jae
push
lcall
repnz
push
cmpl
mov
pop
out
adc
pop
dec
aam
stos
cmpl
fs
out
jmp
data16
dec
aaa
ret
push
sti
rsm
repz
dec
and
pop
lods
sbb
inc
xor
add
jmp
ss
xchg
xchg
pop
stos
int3
pop
cmc
pop
jnp
mov
cmpl
repz
sub
xchg
gs
fimuls
arpl
jg
or
fwait
mov
inc
or
je
mov
xchg
add
std
into
dec
minps
sub
lret
xchg
mov
test
xchg
lret
in
mov
mov
into
insl
or
sbb
mov
sub
jno
jp
in
test
cmpsl
loop
dec
js
ja
enter
sub
push
xor
nop
clc
adc
jb
out
add
inc
push
orl
cmp
mov
neg
sbb
jmp
lock
or
fwait
sti
dec
scas
sbb
xchg
adc
insl
or
clc
not
sub
pop
cld
sub
push
addr16
cmp
pop
mov
sub
and
xor
mov
push
adc
jl
mov
add
and
sbb
loopne
pop
and
or
jecxz
add
aad
push
mov
jne,pt
adc
mov
das
movsl
fmuls
popa
int
bound
outsl
push
test
int3
dec
mov
mov
scas
add
out
aam
leave
inc
or
sti
mov
sub
push
loopne
mov
sbb
pop
sbb
test
rorb
out
fsubrl
test
in
mov
sub
push
mov
nop
or
cmpsb
into
rclb
jp
pop
aaa
adc
mov
iret
insb
inc
or
call
dec
jg
push
cmc
adc
cmp
in
mov
imul
pop
out
sbb
pop
lds
aaa
mov
pop
inc
popf
and
ret
sbbl
ljmp
xor
mov
xor
xor
add
pop
jmp
fidivl
or
mov
dec
imul
sbb
insl
push
jnp
mov
sub
in
xchg
ss
or
sbb
sbb
inc
pop
loop
inc
out
das
repz
push
or
sub
dec
jno
mov
mov
push
popa
cmpsl
mov
cmc
push
int
cmp
test
in
rcll
cmpsl
rcrl
or
or
or
in
add
insb
jge
das
add
mov
inc
push
xor
jae
mulps
jl
mulb
and
xor
lea
sub
fwait
and
mov
jae
pushl
pusha
lret
pop
ficoml
in
into
mov
testb
ja
lret
out
and
call
push
outsl
sub
dec
fildl
in
mov
lahf
push
daa
insb
push
pushf
adc
cmp
push
subl
dec
push
bound
pop
mul
aas
fcom
pop
mov
pop
inc
adc
push
xor
arpl
mov
xor
lea
jbe
mov
or
mov
push
lock
int
jg
xchg
out
int
jno
lahf
add
lods
cltd
aaa
add
test
out
xor
ss
or
dec
pop
aam
jmp
pop
je
or
faddl
mov
shl
sbb
and
dec
loop
mov
mov
inc
out
push
cli
jg
in
add
fcomp
inc
jge
and
mov
xchg
fmulp
aam
dec
aad
sbb
sti
or
rcr
rcl
jne
and
daa
and
mov
cmp
outsl
mov
lret
scas
test
adc
cmc
mov
fcoml
sub
dec
sbb
das
jbe
aas
loop
outsb
jbe
cmpsl
testl
cmp
test
pop
xchg
pop
mov
mov
das
adcb
addb
mov
cmp
push
sub
sub
es
hlt
stos
sub
sbb
movsl
xor
movsl
dec
cmc
cs
add
es
push
pushf
jl
pop
or
inc
icebp
insl
jp
ficomps
cld
in
aad
mov
imul
stc
jl
cmp
push
inc
lahf
clc
jno
xor
das
daa
sbb
int
icebp
imul
movsl
dec
dec
int
adc
dec
jno
test
dec
sbb
scas
scas
mov
sbb
jns
cmp
inc
jl
fisubrs
test
dec
ficoms
and
adc
lock
xchg
sbb
xchg
jo
adc
cmc
mov
fwait
outsl
xor
out
cmpsb
push
inc
adc
lods
and
aam
popl
imul
sub
mov
cld
inc
loop
out
adc
lock
imul
jns
xchg
lret
loopne
jb
sbb
mov
inc
pushf
pop
je
cmp
out
push
push
push
fdivs
lahf
nop
fsubrs
mov
pop
shlb
cmpsb
adc
cld
mov
aam
rorl
dec
lods
or
decb
cmp
mov
lcall
and
jnp
cmpsb
push
xchg
dec
fdivs
push
pop
fcoms
clc
mov
pop
mov
fwait
outsl
sbb
rcr
gs
sub
out
push
sti
hlt
and
mov
je
adc
mov
iret
rorl
aad
pop
loopne
mov
sbb
test
lret
outsb
fisubl
outsb
cmp
push
fs
or
mov
dec
cmp
insb
stos
xchg
or
nop
popa
pop
lea
jae
add
mov
dec
inc
or
pop
add
or
enter
xchg
jmp
test
mov
xor
or
and
adc
dec
cmpsb
sar
fwait
mov
dec
pop
sti
orb
mov
xor
in
push
lods
dec
lods
xchg
jecxz
dec
jo
jnp
jg
pop
or
pop
aam
fbld
lods
aad
jg
in
repnz
int3
ds
test
fcmovnbe
movsb
jns
mov
jmp
cmc
cmp
sarl
mov
es
mov
push
jmp
roll
icebp
mov
dec
jp
cmp
out
pop
mov
cmpsl
mov
imul
cmp
rclb
adc
push
cwtl
js
fcmovbe
fidivl
clc
pop
mov
stos
mov
xchg
xchg
bound
jae
inc
rorl
and
adc
adc
loopne
and
loope
dec
std
popa
fidivl
xchg
jne
cmpb
arpl
mov
ficompl
sti
mov
lahf
mov
cmpsl
inc
dec
jb
out
scas
into
les
adc
pop
mov
dec
and
dec
mov
lods
sarb
iret
adc
fistl
jbe
mov
movsl
mov
dec
and
push
outsl
inc
dec
mov
out
xchg
inc
xchg
cmc
jnp
sbb
jo
cwtl
cs
cmp
dec
inc
es
mov
test
sbb
pop
into
inc
sbb
and
or
imul
lret
je
or
cld
sbb
test
jp
sarb
mov
sub
push
gs
rcrl
adc
mov
shll
push
rcrb
xchg
stc
out
jae
jl
adc
dec
montmul
cmpsb
inc
and
cmpl
pop
push
clc
insb
and
aam
cmp
ss
cmc
inc
les
out
xchg
loop
mov
test
mov
mov
mov
scas
enter
mov
and
into
hlt
ret
xor
adc
mov
ret
push
inc
mov
ret
je
xchg
jmp
iret
mov
icebp
jp
jle
mov
mov
packuswb
ljmp
dec
fstl
or
sbb
inc
inc
sahf
stc
mov
int
sbb
ja
imul
pop
xchg
notl
inc
cmp
jnp
enter
lahf
xor
mov
mov
cmpsb
movsl
push
loope
and
push
rcrl
xor
push
lahf
mov
add
aas
inc
xchg
mov
out
push
mov
movsl
mov
int
divb
sub
popf
and
adc
add
rep
bound
jne
aad
and
repz
aas
xchg
mov
call
in
subb
mov
xor
movsb
leave
insb
ret
je
leave
lods
push
adc
cmp
push
movsl
push
movsl
in
adc
int3
icebp
or
movsb
mov
pop
ljmp
mov
mov
iret
test
ljmp
mov
imul
jo
ret
fistpl
lret
jno
cmc
int
movsb
das
mov
inc
xorl
out
cwtl
mov
sbb
xor
push
rclb
or
inc
pop
clc
xor
clc
movsl
out
fs
xor
mov
out
sbb
lods
xchg
lcall
adc
out
xchg
aas
cmp
inc
mov
pop
cmp
push
fisttpl
je
xchg
dec
xlat
filds
mov
jbe
test
sub
or
call
mov
mov
mov
dec
cli
test
enter
aad
inc
add
xchg
sbb
adc
into
jp
insb
xor
js
popa
fisubs
jae
mov
unpckhps
out
inc
ficoml
mov
arpl
cmp
lea
jns
and
mov
jl
mov
dec
adc
popf
push
clc
fsts
mov
mov
xchg
xchg
sub
loope
imul
dec
xorb
or
xchg
stc
cmpsb
fs
ja
in
mov
sahf
cmp
cmp
js
leave
rcl
xchg
daa
in
mov
dec
pushf
push
movzbl
aam
jno
pop
fmull
arpl
shrl
dec
testl
sub
pop
and
and
add
push
out
repnz
lahf
faddl
jg
pop
cltd
dec
add
outsb
jnp
or
cwtl
xchg
fiadds
ljmp
sahf
movsl
mov
loopne
rolb
dec
lods
inc
or
sbb
add
lock
dec
and
fdiv
xchg
adc
cmp
aam
and
push
jno
lret
das
fisubs
fistps
dec
stos
mov
call
mov
mov
mov
inc
ror
cmp
aas
sbb
jmp
sub
test
mov
cltd
jge
ret
test
sbb
imul
rcrb
filds
aam
test
xor
pop
pushf
icebp
xchg
scas
push
jb
jle
int
add
cmpsl
movsb
ja
repnz
imul
int3
jb
repz
addr16
ret
mov
xor
movsb
jne
xchg
bound
pop
xor
arpl
xchg
aaa
cmp
inc
mov
mov
test
es
xlat
jecxz
les
xchg
pop
cmp
sti
icebp
loopne
mov
push
out
pusha
sub
lods
test
push
jno
cmp
movsl
mov
out
nop
jb
dec
movsl
mov
mov
dec
jne
jl
loopne,pn
test
and
xor
dec
lcall
out
aaa
or
out
inc
mov
jb
je
pop
lock
push
lea
out
dec
aad
xor
adc
dec
or
jg
push
push
bound
xchg
xchg
je
int3
repnz
push
and
fistps
adc
push
sarl
push
daa
jae
repnz
add
xor
inc
add
inc
inc
sbb
mov
mov
or
mov
push
xor
fs
data16
ficomps
mov
push
xchg
enter
mov
sar
cmp
xorl
lods
inc
mov
pop
and
mov
dec
jns
jne
push
pop
icebp
mov
or
xor
or
xchg
div
add
inc
imul
push
subb
pop
in
dec
adc
push
sbb
fucomp
adc
pop
cmc
lea
inc
add
ljmp
sbb
mov
in
xchg
bound
lds
jns
lods
lods
and
pop
movsl
sarb
in
mov
loopne
lea
loope
leave
pop
or
stos
out
mov
mov
cmp
jnp
sub
xchg
data16
aad
or
push
int3
push
pop
push
shlb
or
push
shrl
cld
sbb
mov
inc
cmc
xchg
cmpsl
sbb
stc
xchg
cld
push
xor
mov
mov
sahf
jb
mov
sbb
lock
in
mov
subb
sub
ret
push
add
ret
pop
subb
xchg
lock
mov
dec
jecxz
rcll
out
xor
imul
xor
jne
push
push
movsb
push
sahf
mov
pop
mov
sbb
inc
nop
inc
cmpb
mov
push
lret
data16
sbb
xor
shll
jne
cmp
out
test
mov
jns
jns
and
and
in
cmp
outsb
repnz
mov
in
push
pop
pop
mov
int
pop
and
mov
mov
lods
lret
jne
fucomi
pop
lret
mov
jne
jbe
cmp
or
inc
shl
dec
mov
adc
hlt
sbb
cmp
jbe
jl
outsl
mov
sbb
mov
mov
sub
idivl
shrb
push
sarl
mov
daa
addr16
shll
jb
sbb
xchg
or
ret
inc
adc
push
push
push
fistpll
sub
frstor
pop
mov
nop
mov
je
cmp
adc
jle
pop
int
push
sbb
imul
jbe
daa
sub
dec
loope
adc
mov
fcoml
push
daa
in
jmp
ds
je
test
out
push
sub
and
push
stc
das
adc
lock
imul
and
inc
push
jmp
ja
addr16
lods
mov
xchg
or
sub
pop
fldenv
push
mov
xor
aad
pop
fidivl
imul
cmp
mov
mov
test
hlt
out
imull
wbinvd
aam
sub
mov
icebp
fwait
in
lods
leave
pop
adc
xchg
lcall
stos
mov
cmp
or
mov
clc
mov
cmc
dec
or
inc
jp
out
mov
hlt
scas
push
xor
outsb
jo
ficoml
xor
addr16
in
adc
bound
push
xor
push
pop
pop
mov
sahf
inc
jecxz
mov
in
push
adc
push
test
jecxz
push
mov
into
xor
dec
test
mov
fisttpl
xorl
cs
dec
shr
push
xor
mov
mov
test
insb
pop
cmp
pop
xlat
and
pop
test
inc
addr16
mov
jp
sbb
aaa
pop
sarl
cli
cltd
cmp
cld
mov
fistpl
jg
sbb
pop
inc
or
push
fsubrp
jae
push
mov
inc
xchg
inc
adc
pop
test
pop
arpl
jg
mov
pop
jnp
pand
cltd
lea
adc
adc
jo
push
mov
ja
and
sbb
stos
inc
xor
stos
dec
mov
in
adc
pop
fmull
repnz
cld
pop
shlb
push
push
or
fs
xor
dec
and
icebp
inc
aam
mov
or
push
loop
dec
mov
mov
lock
insl
stos
fistpl
jecxz
in
xchg
inc
ja
jmp
mov
bound
repnz
xchg
clc
in
insl
jo
or
fiaddl
pushf
ret
adc
lret
mov
and
dec
fisttpll
int
shrl
and
ret
jns
or
add
dec
ss
adc
sahf
addr16
mov
dec
push
lds
add
mov
clc
adc
inc
shlb
lods
sti
in
cmp
in
cmp
test
pop
and
fwait
out
push
sub
push
add
sub
ja
shll
ljmp
xchg
shlb
lcall
mov
push
sti
cwtl
push
sbb
cltd
stc
stc
fsts
mov
out
and
aam
jo
mov
pop
xchg
mov
dec
xor
cmp
xchg
das
mov
pop
mov
xchg
gs
or
out
or
jae
xor
inc
lods
lods
out
mov
mov
inc
shl
flds
adc
shll
sbb
mov
mov
aaa
divl
xchg
add
inc
orl
out
jns
add
popa
dec
das
addr16
jp
rorl
push
out
or
mov
cmc
or
fcoms
repz
cld
les
inc
int3
adc
rorb
shlb
pop
repnz
jmp
dec
mov
ss
jl
xchg
pop
and
sbb
xor
repnz
cmp
sub
adc
test
xchg
push
ljmp
shll
xor
test
popa
inc
emms
loop
aad
push
mov
enter
and
jae
xlat
push
jmp
fisubrl
mov
add
adc
sbbl
les
cld
fnsave
nopl
out
outsb
jne
jg
mov
ret
rorl
pop
push
inc
cmp
out
shlb
inc
adc
pushf
push
das
pop
andl
test
mov
xlat
loopne
mov
push
jecxz
pop
lcall
and
sub
pop
or
jle
fdivrs
out
add
call
clc
lods
call
mov
mov
shrb
mov
imul
mov
cmp
xor
sbb
jno
pop
jno
test
ja
mov
outsl
xor
inc
shl
adc
pop
add
push
pop
cmp
xchg
fistpl
xchg
setbe
ret
mov
test
andl
lcall
in
push
fs
frstor
into
xchg
cmpsl
mov
sub
jmp
jo
cmc
rcll
rolb
mov
mov
shrb
call
push
xor
xchg
mov
int3
mov
imul
push
pop
mov
push
fwait
mulb
or
push
and
mov
mov
and
cli
in
sbb
add
mov
lret
inc
faddl
mov
and
pop
push
aas
xchg
pop
cmp
and
jg
popfw
mov
xchg
sbb
xchg
icebp
push
dec
dec
or
stos
das
decb
jbe
inc
aaa
mov
adc
pop
rcr
add
in
push
inc
cmpsl
mov
or
sahf
add
sbb
cld
cmc
mov
sarl
test
mov
fists
and
add
sub
mov
jnp
jecxz
sbb
in
negb
aaa
jp
sub
mov
bnd
inc
sub
int
push
lcall
add
ljmp
fdivl
xchg
and
subb
push
gs
sub
insl
cmp
stos
dec
and
daa
pop
or
out
or
cli
xor
cmp
cli
mov
fs
mov
jg
or
sbbl
imul
mov
mov
xor
test
or
loope
and
iret
pop
stc
mov
lret
in
push
repnz
insl
dec
lcall
mov
adc
aaa
scas
jae
sbb
inc
mov
cmpl
adc
mov
imul
fists
fldenv
fstpl
frstor
lret
sti
jmp
andb
iret
xchg
loope
loope
pop
sub
pop
add
stos
jb
rcl
das
mov
movsl
ds
inc
inc
push
mov
inc
sub
test
loop
aaa
or
inc
rolb
cmpl
jo
adc
xchg
fistpl
xor
out
movsl
imul
icebp
and
mov
je
les
imul
push
ja
cmp
pop
mov
xchg
fsubl
mov
pushf
add
pop
sbb
add
mov
fists
bound
test
js
jo
jmp
mov
or
in
add
and
xchg
dec
mov
sbb
js
ficoms
mov
add
mov
xchg
mov
mov
sub
pop
test
or
scas
xchg
push
test
stc
int
mov
in
aaa
int3
jp
rclb
cmp
or
lcall
sbb
mov
jno
clc
cmp
sbb
divl
add
fildll
inc
fcoml
pop
ror
fisubl
mov
in
dec
xchg
and
inc
xchg
cs
sub
cmp
popa
stc
mov
xor
mov
cmp
jmp
pop
movsb
push
add
and
inc
iret
dec
sbb
xchg
mov
sub
pushf
insb
clc
adc
mov
jecxz
dec
pop
and
cmpl
stos
fldcw
leave
ret
dec
jo
mov
imul
mulb
add
jno
push
jecxz
daa
cmpsl
pop
ss
aam
push
nop
push
mov
push
xchg
mov
mov
xor
and
decl
xor
cmp
lret
xchg
repnz
call
test
sub
jno
cli
sbb
add
add
xchg
imul
sbb
sub
jo
das
bnd
cmp
test
pop
lock
bound
dec
test
mull
addr16
leave
sbb
scas
test
inc
push
aad
rorl
popa
add
in
cmc
neg
and
sti
dec
pop
sub
lods
sbb
call
es
pusha
imul
out
sub
lret
push
movsb
sub
aam
cmpsb
cmp
jns
imul
pop
mov
fs
pushf
ljmp
jne
cmp
mov
decb
adc
daa
cmp
xchg
sub
mov
insb
daa
mov
lret
cmc
dec
fwait
inc
lret
add
push
lds
jg
sub
push
cld
jg
jnp
icebp
pop
ficoml
xchg
xlat
jl
imul
adc
or
and
jp
int3
jmp
push
dec
mov
mov
decb
cmp
sbb
add
int
iret
jae
jne
and
xchg
scas
daa
adcl
push
test
cmp
in
dec
mov
mov
push
cmp
repz
or
inc
sbb
fistpl
dec
repnz
ja
int3
mov
into
mov
loop
mov
inc
je
adc
xorb
sbb
and
push
out
mov
int3
int3
pop
bound
addr16
mov
movzwl
arpl
call
aaa
shrb
xchg
mov
sahf
fwait
dec
cmc
dec
xchg
mov
sub
jge
jns
mov
cmp
push
push
xor
in
mov
xchg
cmp
test
xchg
je
repnz
lock
roll
js
cmpsl
fs
add
push
mov
ja
fwait
in
push
shl
mov
in
ss
scas
lret
test
sbb
rcrb
rorb
or
or
sub
xchg
mov
cmpsl
inc
aad
jl
enter
lods
xor
pop
imul
pop
in
cmp
imul
dec
xor
in
cmpsb
mov
stc
popf
aaa
jecxz
xchg
sbb
aam
lock
jecxz
lods
sub
mov
add
xor
sbb
hlt
hlt
mov
fcmovbe
mov
add
test
andb
out
and
fldl
push
push
dec
mov
ret
insb
repz
sbb
jae
sbb
pop
lret
loope
jmp
jo
sbb
sub
cltd
dec
idivl
imul
and
in
enter
xor
mov
and
fs
push
mov
push
insl
push
sub
ljmp
add
cmp
mov
pop
cs
rorl
and
push
pushf
imull
xchg
cli
pop
nop
out
add
hlt
lret
cmp
enter
mov
int
pusha
mov
icebp
sbbb
mov
cltd
jnp
pop
cmp
imul
inc
mov
out
sub
and
dec
icebp
in
mov
sti
movsb
push
xlat
jg
mov
or
mov
xor
outsl
xchg
imul
mov
aas
cmpsl
cwtl
into
adc
fcompl
inc
and
je
adcl
ret
iret
fs
jecxz
in
fucomp
mov
mov
lret
pop
out
jp
fdivrs
xchg
lret
fs
out
idivl
lds
enter
negl
fnstenv
sbb
push
jno
dec
and
scas
fcoms
xchg
rorl
xor
sub
push
xchg
enter
jecxz
mov
lahf
xor
fbld
fidivs
sbb
xor
sbb
sub
cmpsl
sahf
jb
lret
pop
sbb
test
fiadds
mov
divb
insb
mov
or
in
add
inc
add
add
dec
push
addr16
inc
sbb
rclb
cmp
movsb
pop
fadds
pushl
jmp
mov
xchg
xchg
jo
mov
pop
psrld
adcb
lock
xor
jg
js
push
pop
nop
loopew
mov
inc
insl
xor
fildl
popa
push
xchg
inc
scas
dec
pop
negl
adc
pop
int
daa
inc
gs
das
sbb
popl
push
loope
adc
iret
icebp
call
sahf
mov
gs
or
call
lods
lcall
adc
dec
xor
mov
movsl
xchg
lds
fstpl
int
jno
movsl
or
arpl
popa
mov
sub
pop
xor
push
xor
inc
cmp
iret
in
sub
ficoml
push
pusha
cmp
xchg
nop
in
scas
inc
int
orl
push
xchg
pop
jo
mov
inc
les
xor
imul
bound
adc
jmp
inc
in
fisubl
cmp
out
or
pop
adc
sbb
dec
cmp
iret
cmp
js
leave
or
add
mov
dec
mov
dec
or
xchg
mov
dec
das
cwtl
imul
and
jle
sbb
test
in
ret
ficompl
adc
insl
sbb
pop
ret
test
sarb
aaa
shlb
push
fidivrs
mov
mov
fadd
loopne
lods
adc
sub
fdivl
adc
cmc
mov
jmp
aaa
push
pop
sahf
js
mov
dec
cmp
lret
xchg
pop
or
and
fwait
inc
popf
test
jns
enter
in
lods
mov
push
in
mov
sbb
scas
xor
mov
aad
orb
sar
xchg
in
xor
mov
idivb
leave
loopne
or
test
xor
loop
leave
faddl
xor
jbe
cmp
dec
sar
adc
pop
lret
pop
pop
jo
mov
fcomps
adc
shll
inc
sbb
lcall
sbb
or
out
jns
jno
mov
outsl
lcall
fdivs
ffreep
adc
adc
jnp
inc
out
add
loopne
dec
adc
inc
push
ss
ficoms
loopne
fdivrl
mov
fiaddl
dec
dec
xchg
adc
mov
movb
nop
adc
xor
xorps
mov
sub
adc
lret
mov
int3
xor
test
xchg
dec
data16
mov
movsl
lods
addr16
int3
ja
in
pop
xchg
ficompl
loope
mov
mov
cli
mov
jmp
jl
shr
inc
out
bound
cmp
aaa
jb
xchg
imul
mov
imul
cmpsl
loope
push
push
jmp
jae
sti
pusha
sub
movsb
pop
mov
or
cmpsl
adc
and
sub
jle
sub
mov
iret
pop
dec
push
sub
sbb
push
dec
adc
dec
xlat
xor
shll
push
lock
outsl
sbb
out
incb
add
pop
enter
xchg
rolb
bound
cltd
pop
je
in
test
pop
mov
addr16
insb
push
fs
jbe
test
aam
roll
mov
mov
jmp
mov
adc
bound
icebp
iret
dec
std
jnp
sahf
push
jl
ret
lret
and
or
inc
fiadds
mov
in
lods
into
inc
sub
mov
in
outsb
lretw
lahf
outsb
sti
push
sbb
xchg
inc
daa
imul
jae
sub
cmp
andl
outsb
test
lret
cld
std
push
fs
lahf
mov
rorb
xchg
and
jnp
fs
xchg
stc
outsb
inc
fs
pop
iret
cwtl
lcall
jecxz
arpl
mov
sti
add
iret
sub
test
shl
std
inc
or
cmpsl
lret
push
mov
ja
mov
dec
add
xor
sbb
jno
gs
ss
xchg
or
cwtl
mov
pop
sbb
icebp
je
std
lret
or
push
ss
and
mov
inc
pop
sarb
pop
idivb
xlat
cmpsl
push
fs
call
and
add
add
lret
lret
rcl
pop
push
ss
or
pop
push
inc
addr16
push
dec
xor
pop
dec
je
xor
fnstsw
xor
mov
repnz
out
sbb
sbb
mov
inc
es
adc
sbb
inc
mull
push
test
mov
sarl
push
xchg
dec
pop
enter
test
pop
hlt
stos
mov
inc
jmp
mov
jbe
push
fcoms
mov
fistpl
push
or
or
test
xchg
mov
xor
ss
jp
jg
aaa
fimull
pop
or
push
mov
pop
in
or
and
repnz
push
scas
lcall
jmp
push
imul
dec
mov
mov
pop
push
mov
dec
pop
in
aad
mov
pop
jg
xchg
jp
pop
rorl
lcall
enter
imul
fisttpll
and
aas
and
jnp
cld
xabort
loopne
out
stc
cmp
sar
andb
cs
fistl
cmp
popl
add
lods
pop
jecxz
imul
mov
push
insb
push
scas
dec
scas
fsubrp
pop
pop
orl
sbb
xchg
jns
push
mov
push
popf
add
push
lcall
add
jno
and
jo
mov
loop
add
xchg
mov
lea
jns
jl
mov
pop
adc
imul
sbb
and
jmp
pop
out
js
inc
jno
pop
sbb
xorl
jno
mov
inc
int
lret
mov
iret
clc
cs
mov
pop
add
fstps
push
test
lcall
fcoms
and
movsl
addl
dec
std
adc
xor
dec
pop
mov
or
push
cltd
shlb
mov
and
imul
cs
pusha
loopne
mov
mov
jns
fadds
push
and
cmp
sub
add
insl
arpl
es
mov
mov
cwtl
imul
xor
push
test
mov
lods
inc
hlt
jae
popf
pop
mov
pop
in
inc
adc
popa
push
lret
aaa
jno
out
mov
icebp
mov
jae
xchg
or
xor
sbb
push
hlt
and
outsb
loopne
jg
in
add
repz
adc
aas
arpl
hlt
lods
stc
sub
dec
imul
pop
enter
movsl
std
sub
jae
outsl
push
inc
jecxz
in
rcll
rorl
fcoml
sbb
iret
adc
dec
and
addr16
jbe
dec
push
xor
xor
jmp
cmpsl
js
jb
sbb
cli
push
mov
iret
jmp
inc
adc
call
pusha
add
ret
insb
movsb
ja
cmpsb
pop
jecxz
sti
mov
lret
sbb
inc
ds
data16
jg
jle
pop
aas
xor
loopne
mov
rolb
stos
push
pop
xlat
lret
add
stos
aad
enter
jb
or
mov
arpl
cmpsl
push
enter
push
decl
add
cmpsb
push
ss
dec
iret
jo
adc
cmp
addr16
push
scas
add
inc
or
arpl
ret
lds
push
ror
sub
popa
jno
xchg
xor
jns
mov
mov
inc
lahf
aas
vmread
leave
sarb
cvtpi2ps
scas
jns
mov
pushf
lcall
pop
mov
rcr
jp
shlb
sbb
push
and
mov
sbb
call
sbb
ret
push
or
or
das
repnz
dec
inc
xor
mov
add
ds
pop
push
xlat
movsl
pop
ljmp
fsub
pop
outsl
pop
cmp
jae
adc
ret
adc
add
addr16
pop
lock
dec
loope
jmp
mov
outsb
dec
repz
std
pop
push
lock
call
fdivrl
data16
cmp
adcl
jmp
pop
addr16
or
and
push
dec
add
cmp
xchg
pusha
mov
mov
mov
cld
xchg
lret
xchg
adc
popf
loopne
scas
iret
pop
mov
push
adc
ss
or
adc
addr16
mov
stos
ret
repz
cmp
cli
dec
in
movsb
lret
jg
movsb
fsubs
into
xchg
scas
jns
add
mov
int3
mov
lods
aaa
xchg
lret
lahf
jmp
pop
in
jg
mov
or
or
les
jb
cld
popa
shll
lds
mov
pop
sub
sbb
mov
in
xchg
fsubr
fs
jp
pop
and
cmp
jge
push
aaa
sbb
les
lods
test
dec
pop
mov
call
scas
sbb
popa
popa
mov
jno
subl
cmpsl
adc
xchg
nop
roll
sahf
push
push
ret
movsl
xchg
pop
xchg
sbb
cmp
jmp
adc
adc
int3
loop
adc
lea
and
cmp
aaa
int3
cwtl
pop
or
mov
push
popf
adc
jle
aad
sar
xchg
push
mov
fbstp
mov
fldt
ret
sbb
lds
insb
dec
sti
in
mov
popw
mov
cmp
lret
out
adcl
lods
mov
pop
inc
dec
jle
in
push
push
sbb
addr16
dec
xor
loope
sub
inc
mov
mov
ret
pop
pop
xchg
sub
lods
sbb
dec
jmp
stc
pop
jecxz
push
mov
mov
enter
mov
stos
es
icebp
sbb
sub
sub
jecxz
icebp
adc
pop
mov
mov
jae
clc
in
xor
data16
push
ljmp
push
push
cmc
ja
mov
icebp
repz
mov
push
sbb
lcall
jns
lcall
dec
jnp
xchg
test
push
scas
mov
stos
cmp
xchg
pop
mov
cwtl
push
fcompl
push
xchg
mov
dec
pop
fwait
mov
push
mov
or
int3
sub
mov
shl
pop
inc
push
mov
int3
add
pushf
ljmp
xor
decl
inc
testl
xor
cmp
adc
or
je
add
xlat
bound
mov
ret
jnp
daa
or
fsubrl
and
sbb
xchg
test
fwait
xor
sub
in
movsl
iret
sub
into
jbe
mov
outsb
cmp
push
dec
mov
loop
or
sahf
push
push
popa
xchg
push
pusha
in
fsubs
aaa
pop
mov
fs
subl
test
stc
pop
and
roll
cmc
mov
push
data16
and
cmp
loop
jl
int
out
cwtl
rcrl
push
mov
jle
jecxz
inc
mov
mov
xchg
cmp
lea
xor
mov
inc
and
dec
cmp
loop
aaa
cli
out
in
mov
out
jns
sub
xor
iret
and
clc
repnz
jne
and
jmp
nop
push
push
xor
lahf
dec
stos
punpckhbw
dec
scas
fdiv
add
mov
aas
mov
xchg
lods
aaa
mov
push
test
cmp
mov
cmpl
xchg
outsl
jnp
lahf
sub
lret
testb
jle
stos
add
jmp
sbb
bound
dec
imul
jl
xor
aaa
sub
loopne
jne
in
inc
pop
cmpsl
shrb
xor
sub
pop
push
addr16
addr16
jle
and
icebp
aam
dec
xor
cli
and
xor
lods
aad
testl
pop
sbb
loopne
mul
les
jb
shlb
mov
dec
and
lret
ds
inc
fwait
lret
call
xor
dec
inc
push
dec
dec
xor
fwait
push
test
sbb
insl
pop
lcall
add
js
ljmp
jp
imul
loope
jb
int
daa
mov
insb
pop
add
xchg
sbb
sub
xor
rol
popa
jp
mov
or
subl
pop
lcall
jno
sti
sbb
pop
xchg
dec
imull
lea
ja
out
sub
fcmovnu
sarl
inc
ret
sar
call
mov
xchg
ds
fcompl
in
cwtl
mov
stos
inc
outsb
mov
push
orl
fldcw
sbb
xchg
cmp
xchg
sbb
fs
cltd
xchg
cltd
or
pop
cmpsl
xchg
mov
push
jo
push
or
push
mov
push
cs
pop
add
sahf
les
fcomps
inc
mov
adc
xchg
mov
mov
jmp
shlb
push
mov
and
xor
and
mov
mov
mov
mov
popf
pop
mov
xchg
push
cwtl
loopne
stos
xchg
frstor
xorl
andl
xor
push
sbb
xor
pop
mov
out
pop
sbb
pushf
and
popa
mov
scas
cmp
adc
lods
loope
js
sub
add
and
and
xlat
call
insl
nop
sbb
jmp
cmp
or
xchg
inc
and
jno
xchg
inc
cmpsl
cmpb
mov
mov
xchg
das
inc
movsl
out
lock
mov
test
fucomip
inc
outsl
inc
pop
push
jae
sarb
mov
lahf
and
outsb
fldenv
sub
mov
jnp
dec
out
jne
mov
jns
cli
sbb
in
js
fcoml
orb
push
jecxz
lock
insb
lret
sarl
pop
mov
insl
sub
outsb
sarl
ds
cmp
fldcw
daa
lods
inc
push
and
jmp
lret
inc
jnp
movsb
push
jmp
jg
subl
xor
pop
stos
jne
mov
dec
in
push
scas
hlt
xor
mov
xor
loope
cmpl
imul
dec
lret
cltd
push
shlb
mov
mov
ffree
mov
xchg
dec
daa
jle
je
not
stos
pop
fisttpl
lea
js
mov
xor
jb
pop
js
mov
adc
sbb
push
mov
mov
cmp
mov
inc
lret
lret
xlat
mov
je
mov
lahf
fwait
pushf
push
pop
lret
stc
shlb
inc
in
jecxz,pn
cmpsl
push
shrl
fmulp
push
rcr
cmpsl
xor
dec
lods
sbb
in
imul
jmp
jo
xchg
add
scas
jo
ja
fnstsw
xlat
ss
cwtl
xor
lahf
repnz
jno
mov
cmc
sbb
adc
ljmp
in
pop
nop
cmp
test
xor
mov
add
cmpsl
push
adc
inc
bound
int3
ljmp
test
repnz
mov
hlt
sti
aas
sbbb
push
and
and
sbb
jg
and
pop
push
adc
xrelease
and
out
sti
shlb
ljmp
sub
jp
aas
bound
bound
and
mov
push
movsl
out
pop
jb
dec
das
mov
sbb
or
sub
icebp
and
loope
cld
push
mov
std
sbb
call
xlat
sbbl
jbe
or
ret
sbb
lock
insb
pop
adc
add
cs
lahf
sub
popf
sbb
ret
repnz
sbb
dec
mov
jecxz
or
aas
ljmp
push
in
add
pop
gs
push
scas
ffree
or
mov
les
loopne
jae
jne
mov
popf
xlat
das
add
jge
in
mov
sub
clc
cltd
push
sbb
mov
xchg
mov
stc
shlb
pop
subb
inc
adcl
xchg
ret
aam
pop
mov
push
imul
cmp
je
insl
jbe
insb
jmp
test
repnz
ds
popa
sub
and
jmp
jg
stos
rcll
data16
hlt
popa
fwait
das
call
insl
xlat
addr16
mov
dec
test
in
sahf
xchg
je
xlat
lods
repnz
enter
inc
pusha
mov
insl
pusha
sbb
enter
call
xor
mov
sub
subb
jbe
cs
mov
sbb
add
mov
xor
push
inc
in
test
js
dec
mov
lea
and
push
stc
dec
outsl
sub
insb
or
mov
sti
adc
sti
mov
daa
fsubrl
jnp
mov
add
mov
out
cwtl
mov
or
fildll
sbb
pop
shrb
add
jbe
shr
lds
jmp
and
mov
push
push
jns
stos
nop
fdivrl
jo
xchg
rorl
incb
fbstp
mov
movsb
in
sbb
xor
loop
lcall
gs
movsl
cld
or
je
sahf
sbb
sub
sbb
hlt
mov
dec
add
repnz
jl
inc
add
aas
ss
shrl
mov
mov
pop
iret
add
mov
jo
movsl
ljmp
insl
and
mov
mov
pop
xchg
dec
enter
in
jno
xchg
mov
outsb
xor
fsts
push
arpl
xor
fwait
cld
mov
jmp
pop
outsw
enter
popl
popa
dec
or
pop
xchg
hlt
or
or
jo
xchg
or
loopne
shlb
hlt
aas
in
cmpsl
aas
push
pop
daa
add
mov
push
sub
sub
push
into
fcoms
xchg
xchg
jl
aam
inc
insl
xor
jnp
pushl
dec
lock
movsl
adc
push
mov
cmp
and
clc
mov
mov
inc
pop
daa
jns
cli
dec
xchg
ja
pop
js
movsl
or
nop
mov
inc
je
cmp
add
jg
or
cltd
fxch
cs
aas
xchg
js
arpl
cwtl
insb
pop
xor
fstl
stos
push
inc
scas
mov
push
jle
shr
sub
je
nop
stos
mov
out
lahf
adc
movsb
or
outsl
in
fucomi
jne
dec
mov
in
jmp
inc
xchg
add
pop
clc
jmp
sub
sarl
adc
inc
hlt
cmp
mov
pop
stc
mov
ja
cmp
rcl
jecxz
aaa
addr16
and
cmp
lods
jecxz
enter
mov
pop
mov
cmp
xor
and
notl
repz
jmp
into
xchg
and
mov
xchg
out
sbb
test
xchg
push
inc
jecxz
pop
pop
dec
outsl
lock
cmpsb
loope
mov
mov
xor
mov
xorb
ficompl
ja
hlt
je
fimuls
loopne
stos
dec
imul
shrb
jne
push
mov
aad
loopne
das
push
out
add
cmc
mov
jmp
pop
jg
mov
xchg
test
cwtl
lock
in
xchg
frstor
fucomp
imul
and
jnp
enter
and
in
xchg
and
mov
sbb
mov
lods
pop
cmpsb
xchg
adc
jmp
mov
fdivrs
ja
adc
insl
and
sbb
jbe
sbb
cmp
jecxz
ja
push
enter
sarb
je
push
push
dec
or
ja
pop
push
and
mov
push
and
stos
or
lock
pop
andl
lcall
ja
push
mov
push
mov
xor
push
outsl
mov
push
dec
pop
addl
imull
mov
pop
lahf
push
xor
dec
jbe
cld
jle
mov
mov
je
inc
jns
sbb
push
cmp
aad
jae
adc
pop
iret
dec
rol
ja
stc
sbb
movsb
cmpsb
imul
mov
ret
out
xor
sarb
leave
jo
or
push
das
adc
in
pop
testb
mov
jbe
scas
xor
sbbl
pushf
xchg
mov
xchg
push
jbe
movl
cmc
add
fcomip
jl
subl
xchg
insb
mov
aam
mov
sbb
stc
and
mov
mov
xchg
js
push
les
push
or
out
fsubrs
roll
jmp
arpl
xchg
cs
pop
or
mov
or
fistps
mov
cltd
ja
sub
and
cmp
es
decl
jo
lods
mov
std
jmp
bnd
xor
pushf
add
nop
cmp
std
dec
fwait
xchg
sti
fsubr
push
or
sub
mov
sub
cmp
lock
pop
scas
cmpl
sub
mov
jl
inc
jno
adc
xchg
jne
inc
lcall
imul
imul
xor
sbb
xchg
mov
push
jns
hlt
jl
or
out
scas
stos
mov
xor
sbb
xchg
dec
imul
fwait
sub
nopl
into
bound
cmpsl
pop
aaa
ja
xorl
inc
sbbb
xchg
cli
orl
aas
mov
xor
jne
jle
lret
push
xchg
ja
sbb
cs
sahf
xchg
push
push
xor
inc
fildll
pushf
loope
dec
mov
pushf
cmp
test
loop
rorl
mov
getsec
cs
mov
sbbb
mov
jp
outsl
notb
dec
clc
decl
add
pop
mov
push
push
lds
mov
xor
sub
movsb
mov
aad
push
stos
and
jae
xchg
mov
inc
nop
or
in
pop
inc
xchg
bound
xor
inc
jbe
mov
push
rcll
inc
push
mov
sbb
stos
xlat
and
shlb
cmp
mov
bound
leave
scas
and
and
bound
pop
lahf
sti
xor
aaa
xchg
jge
mov
stc
push
cli
mov
lock
sbb
and
jge
fdivl
cmp
push
dec
cmp
scas
mov
repnz
icebp
out
std
mov
and
sub
sti
add
sarb
stc
cmp
inc
les
dec
aas
and
aaa
add
fbstp
pop
cs
into
xchg
popa
popf
jg
popf
sub
and
mov
leave
call
jl
das
out
es
adc
call
shrl
movsl
aaa
pop
mov
add
gs
xchg
jne
sub
mov
in
xor
push
pop
sbb
jns
stc
sahf
add
outsl
nop
imul
loope
aaa
or
and
add
mov
sub
sub
xor
mov
fincstp
sbb
ret
pop
mov
scas
enter
pop
sub
mov
jns
or
ret
into
outsl
arpl
adc
cmc
mov
jmp
xor
ficompl
popa
mov
jne
pop
mov
fbstp
ret
mov
and
out
addr16
fstps
mov
scas
inc
sarl
mov
lods
jg
pop
inc
mov
ror
sbb
add
xlat
inc
subb
movb
mov
jmp
cmp
addr16
mov
insl
icebp
imul
insb
stos
ret
stos
cmpsl
mov
adc
mov
xchg
or
popf
lods
jb
in
or
push
adc
mov
pop
mov
aad
cmpsl
add
cmp
xor
popl
push
xor
pop
jno
ja
sbb
popa
mov
iret
lahf
lret
or
repz
inc
inc
cwtl
inc
popf
or
inc
insl
fdiv
int
lea
mov
outsb
ja
lock
sbb
jge
sub
adc
int3
fistpll
cmp
enter
cmp
ffree
cmp
dec
jmp
and
fcmovb
xchg
push
lcall
lret
add
dec
push
pop
dec
push
arpl
test
cld
in
inc
ljmp
sbb
test
stc
inc
mov
pop
sub
js
daa
pushf
push
in
mov
stos
cmp
adc
mov
and
inc
or
pmaxsw
cmp
pushf
scas
into
pop
movsl
push
in
and
arpl
cmc
adc
jge
mov
mov
sub
out
scas
add
push
xchg
shrl
pop
xor
mov
push
xor
inc
adc
in
mov
bnd
cltd
xor
pushf
fldt
sahf
insb
mov
bnd
jae
dec
addb
pop
loopne
dec
mov
inc
pop
add
add
rclb
cs
rcll
pop
mov
leave
add
fisubl
cmpsl
lcall
sbb
shll
push
push
sbb
outsl
sbb
push
add
in
sbb
cltd
incl
rolb
jbe
cmp
jle
sub
cmpsl
aam
or
in
cmp
nop
jl
loop
pop
pop
dec
ljmp
jnp
add
lds
cmp
mov
stos
in
enter
ds
ja
jg
sub
inc
or
in
xor
testb
rcll
mov
mov
into
sbb
les
and
sub
jp
repnz
xchg
mov
shrl
loop
xchg
push
push
and
cmpl
sti
das
cmp
pop
pop
testb
std
mov
dec
jbe
daa
stos
add
mov
jbe
lret
xchg
in
and
insb
mov
mov
adc
adc
lods
cltd
xor
push
xor
cmp
mov
movsb
fisubl
mov
cwtl
xchg
push
pop
cmp
push
outsl
mov
mov
mov
inc
or
lret
xorb
xor
loope
cmp
out
cwtl
cmp
add
mov
clc
or
mov
in
add
jae
cmc
pop
incb
jbe
dec
lcall
push
mov
xor
repnz
mov
mov
movsb
mov
ds
xchg
pop
shr
sbbl
xchg
ljmp
xor
jp
test
adc
stos
mov
std
fs
mov
inc
pop
pop
bound
int
fnstsw
dec
popf
das
clc
fs
push
jns
xor
or
ljmp
push
push
out
popa
adc
mov
mov
int
lret
call
cmc
sahf
out
jnp
sub
out
into
pop
shr
mov
mov
das
movsl
insl
dec
and
push
xchg
sbb
nop
xlat
out
popf
lods
or
cs
dec
jnp
push
mov
push
in
pop
test
and
stos
cmp
jae
lods
js
idivl
or
inc
sti
dec
ss
in
mov
lds
push
lds
repz
push
add
push
es
xchg
push
ret
insl
cmp
sbb
push
outsl
in
imul
sbb
jbe
popa
sti
adc
imul
cmpsb
and
xchg
fcmovnb
addl
mov
ljmp
mov
loopne
ja
int
xchg
jecxz
lcall
xchg
xchg
adc
fwait
ret
out
dec
int
mov
jne
add
call
nop
lods
pop
fst
jb
cmpb
rcll
and
hlt
repz
dec
gs
dec
and
or
mov
push
aas
cld
push
clc
mov
jne
xor
data16
sub
test
cmp
cltd
mov
shrl
es
paddd
add
mov
test
test
stos
mov
rcll
les
sub
mov
cli
jae
iret
mov
and
inc
jecxz
adc
mov
movsl
cs
mov
and
pop
out
adc
cmp
add
pop
ret
cmp
repz
lret
hlt
inc
add
repz
daa
and
pop
push
pop
jg
lds
popa
pop
aaa
sbb
sarb
loopne
jg
mov
test
push
mov
imul
lock
fisttps
test
push
jo
stos
popa
cwtl
test
into
popa
test
je
std
sbb
push
pop
or
adc
pusha
inc
mov
cld
in
fistpl
je
or
xor
or
inc
jns
lods
adc
add
mov
and
push
es
roll
push
mov
imul
jl
pusha
pop
and
outsb
push
mov
scas
push
pop
xchg
mov
outsb
mov
jns
jns
aad
lahf
divb
imul
pop
enter
adc
push
mov
jl
jne
jge
mov
test
xchg
push
ret
mov
push
ffreep
in
sahf
mov
ds
cmp
add
jmp
jecxz
cli
insl
loopne
dec
xchg
dec
or
cmp
loop
ljmp
xor
mov
out
push
push
ljmp
enter
xchg
add
scas
cmp
leave
stos
mov
xor
push
pop
clc
das
mov
cmp
loope
sti
push
mov
movsb
mov
pop
call
push
jl
js
loopne
pop
xchg
push
sbb
mov
mov
mov
leave
rcrb
or
ret
je
pop
shlb
adc
das
out
andl
pop
and
leave
fcompl
push
fildll
pop
mov
cmp
jae
fstps
mov
fdivrs
loopne
xchg
rcr
pop
call
aas
xchg
pushf
mov
out
push
bound
sha256msg2
ja
bound
cmp
sbb
sub
and
dec
sub
call
jb
scas
fcmovu
or
lds
inc
mov
stc
mov
aam
push
fadds
pop
fisubrs
dec
mov
pop
cltd
or
jp
sub
push
and
subb
cmp
xor
add
clc
out
jns
pop
inc
pop
std
cs
mov
stc
mov
int3
imul
lret
inc
inc
repnz
lret
pop
std
hlt
mov
cmc
cmpb
push
lds
xchg
adc
fdivrp
jo
leave
jl
push
mov
stos
jmp
sbb
in
mov
mov
aad
add
push
xchg
pushf
mov
mov
cmpsl
and
in
push
push
cwtd
push
hlt
into
subb
aad
push
cltd
fimull
pop
in
out
lahf
fstpt
fldcw
stos
fstp
leave
cltd
dec
out
js
mov
sarl
ret
push
movsl
xor
sub
into
sub
rcrb
cltd
dec
je
pop
xchg
jbe
out
jns
sub
cli
sbb
jmp
adc
leave
xchg
int
stos
inc
cli
adc
and
inc
ret
enter
es
push
xchg
adc
filds
mov
or
sti
fdivl
into
loope
sbb
xor
xchg
mov
pop
cmp
lcall
cwtl
jle
je
fidivl
dec
add
cmp
in
loope
push
jp
or
addb
xor
mov
xchg
dec
data16
sbb
hlt
pop
je
xchg
mov
aas
stc
insl
pop
and
and
jl
and
lock
shlb
fsts
pop
bound
adc
aas
pop
jp
cmp
jbe
test
jmp
xchg
dec
xchg
fisubrl
dec
cmp
xchg
lods
sti
pop
dec
jno
mov
fdivs
cmpsb
xlat
jecxz
push
int3
add
add
cmp
mov
fldl
and
icebp
aad
or
xchg
rcll
scas
mov
fwait
xor
roll
mov
add
pop
inc
mov
insl
sbb
in
cmp
movsb
outsb
mov
jg
mov
jae
jle
jb
add
cmc
jl
shl
into
icebp
out
dec
sbb
cmpsb
cmp
sub
jnp
and
test
mov
xor
pop
cmp
cltd
les
sub
mov
stc
into
xor
fcoml
bound
repnz
add
xor
mov
cmp
popa
out
sub
stos
adc
fsubl
xor
push
sbbb
sbb
movsb
xchg
fcomps
sti
imul
jge
hlt
pop
jecxz
jmp
iret
mov
xor
test
shlb
mov
inc
movsb
pop
outsl
sbb
pop
icebp
cltd
push
mov
dec
scas
stos
mov
jns
fidivl
inc
out
rclb
add
stc
pop
out
add
jns
pop
jno
mov
pushf
sbb
iret
aam
dec
xor
shll
cmp
sbb
popa
pop
mov
or
and
fisttps
jmp
cld
addr16
in
vminss
mov
inc
bound
jge
dec
jae
lods
je
xchg
or
imulb
pop
mov
enter
or
mov
lret
idivb
and
rorl
je
sbb
mov
pop
xor
out
push
das
shll
cmc
add
lea
xor
xchg
pop
push
sub
pushl
adc
sbb
test
lods
push
data16
inc
adcb
jo
cmpsb
cmp
adc
sti
sub
lahf
dec
add
js
mov
sbb
push
hlt
cmp
icebp
xor
cwtl
cmp
daa
in
fnstenv
mov
cmp
cmp
adc
xor
or
ret
and
sahf
push
xchg
sbb
cmp
inc
adc
fs
or
imull
sub
jg
das
xor
xchg
jg
add
nop
ja
adc
cli
int
or
mov
or
mov
mov
stc
std
std
in
xor
sahf
loopne
into
pop
and
in
pop
ljmp
scas
xor
xor
cmp
mov
xor
jnp
mov
jno
in
repz
xchg
in
push
fs
add
outsl
fs
les
in
lret
xlat
hlt
in
sbb
nop
fwait
mov
push
sub
aaa
add
scas
jle
xchg
imul
mov
pop
xchg
jbe
push
fwait
ljmp
adc
shrl
mov
dec
mov
ret
pop
pop
mov
stc
mov
fmuls
leave
icebp
pop
adc
mov
jmp
mov
jge
pop
imul
xor
call
cmc
lock
cwtl
test
lods
cmp
jecxz
adc
nop
pushaw
xchg
in
dec
or
rcl
pop
sub
stos
in
test
hlt
idivl
cmpsb
popa
repz
and
cltd
cmp
cltd
stos
mov
mov
arpl
mov
jge
sub
orl
das
sub
mov
xchg
dec
push
dec
or
jp
inc
xlat
in
xchg
add
test
fiaddl
dec
outsb
jg
daa
inc
adc
xchg
xchg
arpl
jle
and
ret
inc
insb
outsl
popf
sub
pop
out
cmpsl
xchg
icebp
and
inc
xchg
add
punpckhdq
gs
in
fidivrs
push
sub
loope
mov
pop
daa
pop
sbb
out
inc
dec
fwait
xor
dec
push
imul
sub
jno
jns
test
andb
xchg
pop
and
add
inc
push
pop
lock
inc
mov
clc
xchg
and
mov
or
cmpsb
cmp
nop
test
adc
insb
or
cmc
dec
stc
std
pushf
mov
fwait
cmpsl
fnstenv
ret
mov
mov
push
dec
adc
jb
dec
and
xchg
dec
and
mov
cmp
cmc
push
jno
jno,pn
xor
mov
jno
sub
mov
mov
pop
xor
jnp
enter
lret
stc
call
pop
sbb
pop
xchg
rclb
aaa
out
ret
mov
and
mov
jmp
outsb
and
loope
sub
negl
fcoml
add
mov
push
lds
xchg
les
fs
es
test
repnz
pop
jne
ss
inc
xchg
orb
lcall
mov
test
popf
fistps
push
arpl
cmp
push
inc
push
adc
and
lea
xor
mov
iret
or
mov
popf
xchg
xchg
inc
mov
insb
ss
jo
dec
jg
or
pop
xchg
dec
mov
inc
dec
fimuls
fisttpl
push
pop
call
sahf
cs
imul
mov
push
xor
lcall
or
inc
bnd
mov
loope
sbb
nop
ljmp
test
into
push
data16
fldcw
and
movsl
fistpl
and
stos
xor
and
mov
sbb
out
jecxz
mov
xor
adc
xchg
cltd
mov
xchg
js
fiadds
push
mov
outsb
testl
addr16
es
fildll
jmp
mov
sbb
out
call
pop
test
inc
daa
insb
sub
dec
inc
add
popf
in
int
imul
and
mov
mov
loop,pn
sbb
jb
ficomps
in
popf
inc
scas
inc
daa
jmp
pop
aam
sbb
push
sbb
jns
add
mov
pop
jge
fistpl
cmp
add
cli
xlat
test
leave
push
cmp
sub
jb
jne
shlb
sbb
xchg
xor
movsb
jo
ret
pop
push
loope
dec
aam
push
jle
pop
fldl
ja
xor
jb
sub
mov
nop
mov
rorl
adc
mov
push
push
xor
pop
popa
pop
lcall
aaa
mov
adc
repnz
fmulp
cli
movsl
xchg
sub
pop
icebp
sub
or
jb
lcall
stos
mov
das
arpl
cmpsb
sbb
pop
lds
push
scas
fdivrs
inc
call
dec
repz
cli
inc
ret
jns
inc
call
fistps
xchg
test
xor
xchg
ret
pop
popa
and
xlat
pusha
pop
xor
imul
test
mov
push
pop
or
push
jecxz
or
lcall
cmp
stc
ds
lahf
cwtl
and
xchg
lea
cltd
dec
adc
inc
mov
enter
hlt
daa
add
movsl
add
mov
adc
dec
inc
add
lea
push
fadd
shrl
push
push
or
pop
sahf
mov
and
out
add
pop
dec
cmpsl
cs
jmp
xchg
pop
lahf
or
adc
lahf
push
jecxz
fdivrl
cltd
roll
and
sub
sti
in
sahf
sarb
subb
cmp
lock
xchg
out
aas
call
jle
xchg
xchg
pop
or
mov
hlt
jp
mov
aaa
stos
jb
jne
mov
in
cltd
test
mov
mov
sahf
loope
movsb
adc
dec
sub
add
repnz
fs
fdivrs
cmc
or
cmpsb
adc
jb
daa
ja
sbb
mov
mov
inc
jbe
pusha
jae
lahf
outsb
adc
std
push
dec
jl
push
mov
leave
xor
loope
out
dec
imul
icebp
adc
jmp
andl
roll
mov
sbb
faddl
mov
mov
bound
push
mov
popa
nop
mov
cltd
fstpt
outsb
fists
imul
dec
sub
sti
nop
aaa
push
pop
cli
xchg
leave
aad
fisttpl
ja
or
xor
mov
in
xor
cmpsl
ret
lods
stc
imul
adc
mov
push
adc
push
ret
cmp
add
xor
jmp
xlat
imul
into
dec
adc
call
scas
cmp
test
xchg
and
and
test
adc
outsb
adc
ljmp
inc
mov
cmpsl
jecxz
pop
cmc
xor
xchg
xchg
push
cli
in
mov
mov
stc
das
in
sbb
or
jb
leave
mov
inc
adc
dec
xchg
or
in
mov
jmp
push
xor
and
addr16
sarl
or
or
in
std
int
int
repz
push
mov
arpl
divb
mov
fisubs
rclb
pop
cs
iret
pop
mov
xchg
pop
add
and
out
mov
jmp
popa
dec
aam
or
fisubl
dec
push
xor
aas
pop
cmpsb
push
jne
jae
cld
aaa
cld
cmp
dec
shl
mov
inc
bound
call
xchg
xor
stos
popa
xor
lea
cmc
popa
inc
sub
fwait
dec
pop
sbb
cwtl
sbb
pop
mov
movsl
fiadds
push
mov
cld
pop
mov
sbb
xchg
test
xor
lea
jl
jmp
xorb
loopne
cmc
ljmp
add
das
scas
pop
xor
mov
mov
in
cmp
inc
xchg
mov
int3
cli
mov
and
lds
jg
les
imul
jb
jmp
frstor
and
into
in
and
sbb
push
negb
add
orb
test
gs
mov
mov
add
shrb
int3
daa
mov
les
xchg
in
jp
jnp
and
xchg
jg
lods
or
imul
mov
dec
xchg
push
movsl
mov
mov
nop
outsl
mov
les
lcall
lret
pusha
xchg
dec
push
cmc
ljmp
ljmp
inc
sub
dec
fcomip
cmpsb
push
aad
ljmp
jae
arpl
call
enter
loopne
pop
mov
sub
dec
jbe,pn
sbb
sbb
sti
and
sbb
push
mov
repz
idiv
add
mov
mov
arpl
mov
sub
pop
leave
pop
idivb
jno
xchg
dec
orl
adc
and
add
popf
push
addr16
shll
xchg
sub
not
mov
xchg
cmpsl
xchg
out
ret
arpl
mov
fdivrp
xchg
repnz
loop
int3
popa
out
cwtl
pusha
aaa
mov
mov
mov
jp
sub
lret
gs
rcl
jne
add
repnz
cmp
inc
int3
into
inc
xchg
je
fnstenv
pop
xchg
push
sub
scas
and
push
ja
jecxz
push
imul
xchg
imul
jnp
mov
pop
jge
pop
sbbl
adc
jp
mov
outsb
mov
push
sub
outsl
stos
sub
es
popa
and
cmp
mov
mov
enter
andb
std
cmp
imul
mov
mov
xchg
jno
shlb
cmp
dec
xchg
mov
push
or
push
gs
inc
in
cmp
int
mov
popa
shlb
stc
cmp
cmpsl
adc
adc
in
jns
js
and
adc
insl
add
mov
mov
in
shl
jno
and
sbb
cmc
cmp
or
movsb
adc
jmp
clc
xor
xchg
push
andb
mov
xchg
in
aam
jmp
fisubl
dec
nop
aas
incb
data16
add
ss
adc
jp
xchg
cmp
adc
jnp
enter
icebp
call
dec
adc
pusha
mov
and
out
sti
lods
mov
mov
add
xor
pop
pusha
fwait
popf
mov
push
icebp
imul
test
add
loope
adc
hlt
lret
insl
xor
push
and
mov
mov
movsb
into
mov
ret
pop
mov
adc
xchg
push
or
pop
jg
iret
xor
iret
inc
pop
lds
xchg
cs
cmp
dec
cmpsl
jbe
ss
jg
outsl
xor
aam
ficompl
aad
insl
ljmp
dec
mov
and
fidivrs
call
sahf
pop
pop
iret
call
cmc
imul
xor
insb
shr
pop
adc
cmp
sbb
mov
push
dec
or
dec
xor
loopne
mov
outsl
shr
pop
out
add
aas
lcall
and
inc
js
adc
aam
mov
in
cmpsl
aaa
ja
push
test
in
sbb
rcl
push
aaa
inc
jns
aam
jno
outsb
pop
out
xchg
rorb
ljmp
cmp
fxch
arpl
or
push
jo
enter
xor
jb
shr
cwtl
push
xor
movsl
jl
jg
lods
pop
or
shll
testl
jp
pusha
lret
fcompl
add
xchg
sub
mov
cmp
dec
xchg
cmp
outsb
lret
insb
cmp
adc
pop
pop
jge,pt
cwtl
push
dec
mov
jecxz
aam
cmp
fmulp
xor
cmp
fmull
fxch
out
movsb
loop
mov
imul
mov
dec
xor
cld
xor
test
les
cltd
idiv
xchg
ror
test
xor
jmpw
stc
push
push
fs
clc
xor
and
push
jmp
icebp
cld
data16
stc
sbb
push
gs
cmp
pop
outsb
add
xchg
stos
sbb
xchg
cmp
hlt
shr
aaa
and
jg
fimuls
mov
sti
test
cmp
pop
or
test
push
lods
out
insb
inc
push
hlt
mov
or
mov
das
sti
stc
aaa
std
jb
jmp
test
lahf
imul
pushf
xor
inc
test
mov
sahf
into
lret
call
adc
push
mov
scas
js
clc
lods
lds
xchg
stos
push
mov
inc
js
mov
sarl
loope
test
sbb
je
dec
lcall
push
mov
out
inc
xor
test
push
jg
and
push
sbb
in
loop
aas
fmulp
xor
lock
sbb
inc
adc
iret
ret
stc
loope
push
imul
mov
jp
rclb
mov
xchg
lods
or
int3
insb
test
int
xorl
fs
movsb
push
inc
jge
call
push
adc
push
xchg
add
xchg
adc
adc
loopne
lahf
jns
nop
mov
bound
cmc
mov
ds
pusha
jg
andb
test
es
das
cs
cmpsb
mov
insb
sub
loopne
push
add
mov
sbb
cmc
loop
adc
add
fldt
scas
push
push
adc
out
xchg
push
leave
mov
ja
pushf
nop
stos
sub
test
loopne
rorl
shll
and
push
les
out
xor
cli
mov
inc
imul
out
lock
add
push
add
std
shll
push
jbe
add
cwtl
cmpsb
xor
dec
and
repz
shrb
mov
pusha
jle
bound
xrelease
shrb
in
testl
popf
inc
cmc
loop
inc
inc
ja
mov
jmp
jns
test
push
mov
es
ja
idivb
lcall
push
loope
or
ror
aam
push
sbb
dec
sbb
and
dec
das
jl
out
les
or
xor
cmp
sbb
iret
pushf
mov
stos
repz
in
flds
pusha
inc
outsb
inc
push
pusha
push
int3
stc
jg
and
sub
xor
adc
pop
xchg
cmc
cmp
ljmp
data16
fs
div
in
sbb
push
pop
fsubs
scas
xor
mov
fwait
insb
or
mov
lahf
jnp
test
sbb
pop
jo
add
jg
push
push
lock
mov
xor
mov
mov
fiaddl
ficoms
sahf
lock
rclb
cli
and
and
adc
cmp
add
arpl
mov
push
call
dec
cmp
or
mov
jmp
fs
inc
mov
movsl
pop
pop
rclb
stos
les
test
outsb
roll
cld
dec
lcall
or
or
cmp
and
xchg
jmp
pop
mov
dec
xchg
fadds
cmpsb
push
fsubs
test
jl
aad
pop
xor
mov
dec
in
aad
mov
idivl
les
cld
cmpsb
add
cmp
test
jg
fs
cld
icebp
test
scas
sbb
jb
mov
push
mov
cmp
adc
and
cmpsb
aas
jl
cwtl
repnz
int
sbb
sub
pop
stc
sbb
mov
inc
dec
pop
imul
fmul
cwtl
jg
push
std
mov
pop
out
ret
cltd
movsl
mov
lahf
push
xchg
mov
xchg
lret
notb
roll
mov
int3
rorb
out
mov
fbld
int3
mov
fcoml
xchg
adc
pop
pusha
pusha
lret
dec
dec
icebp
pop
jae
pop
fisttpl
sbbb
mov
loope
xor
add
dec
fcoml
stos
mov
fs
repz
xor
je
lock
repnz
jnp
mov
daa
addr16
cmp
pop
stc
aam
fucomp
cmp
test
add
cmp
in
mov
jecxz
inc
pop
mov
or
data16
insl
leave
scas
mov
xor
pop
insl
xchg
es
test
es
ficoml
in
inc
inc
or
popa
mov
in
cmpsb
in
jb
mov
ds
test
jnp
jbe
adc
gs
loopne
xor
ja
xchg
add
pop
mov
jbe
mov
stos
xchg
sbb
mov
scas
addl
inc
dec
jp
add
inc
mov
jge
cmc
into
sbb
dec
movsl
xor
inc
call
dec
insl
pop
insl
lock
mov
arpl
sahf
push
sar
stos
lds
shl
aaa
cli
xchg
lock
inc
das
jg
stos
fisttps
frstor
add
xchg
push
movsb
rorb
mov
and
xor
repnz
add
shll
xor
shlb
mov
iret
fbstp
add
xorl
xchg
rorl
sub
jle
xchg
fstps
ret
arpl
scas
xor
pop
movsb
shlb
push
std
pop
cli
mov
shlb
cmpsb
xor
pop
and
push
mov
dec
jno
nop
sub
push
cmp
test
sub
and
les
lods
aas
out
mov
sbb
mov
mov
out
shlb
push
fstps
repz
sbb
clc
push
nop
sbb
jmp
icebp
jns
adc
adc
sub
es
and
jae
lret
cmpl
out
push
popa
fidivl
int
inc
pop
jo,pn
pop
pop
push
xchg
mov
aaa
add
pushf
movsb
sbb
notl
pop
mov
rcll
push
mov
pop
or
mov
addr16
fwait
sahf
enter
dec
dec
les
inc
sub
clc
fxch
adc
xor
sub
repnz
test
xchg
sub
sub
cmp
jae
test
xchg
aaa
dec
test
push
and
sbb
pop
pusha
mov
inc
dec
mov
jnp,pt
cmp
in
push
xchg
sub
xchg
adc
rcl
les
aam
incb
pop
lods
push
mov
dec
mov
pop
add
loopne
sbb
xlat
and
aam
adc
push
pop
daa
jl
pop
fisubrl
xchg
sahf
push
sub
icebp
das
sub
ret
sbb
inc
pop
inc
sti
jecxz
jns
inc
ret
aad
mov
pop
jb
pop
mov
or
cmp
add
jp
testl
mov
add
pushf
xchg
popa
mov
jl
lea
sbb
fcmovne
sbb
xor
adc
mov
ja
and
sub
sbb
push
js
adc
add
adc
lods
test
pop
push
jns
lock
jg
lods
rolb
xchg
jmp
popf
adc
xchg
pop
lock
push
decl
popf
and
ficoms
xchg
jmp
mov
out
daa
adcb
imul
cmpsb
fildl
into
mov
sub
adc
les
jb
sarb
popf
push
insl
mov
test
fisttpll
xor
sbb
sub
stc
pusha
call
add
inc
movsb
xchg
enter
mov
out
in
add
and
mov
inc
xor
fnstenv
lods
js
push
fmuls
xorb
aad
lret
repnz
lea
pop
mov
out
and
mov
stc
jo
jnp
fcmovne
lahf
adc
and
mov
in
out
push
test
testl
stos
xchg
out
test
sbb
inc
cmpsl
sub
lods
mov
xchg
and
pop
outsb
jl
xor
add
lea
in
jo
fwait
ds
xchg
ret
filds
pop
sbbl
out
mov
mov
push
mov
xchg
lock
mov
mov
jnp
mov
hlt
add
roll
dec
addr16
test
fcmove
out
xlat
outsb
cmp
sbb
lahf
divb
sbb
sti
mov
aas
out
cmp
mov
mov
sbb
lods
adc
sbb
ret
movsl
ljmp
jecxz
mov
int
ds
clc
jmp
out
push
test
sub
push
nop
xchg
inc
lods
add
pusha
xor
pop
or
std
aas
cmp
pushf
imul
mov
or
enter
push
fdiv
push
dec
jmp
xchg
movsl
repz
fcomps
mov
mov
lahf
sbb
inc
or
imul
sub
jge
loopne
cmp
in
sti
jne
nop
mov
stc
fisubs
nop
mov
mov
mov
xchg
paddq
cmpsb
or
lods
and
loopne
xor
or
pop
pop
jbe
bound
sti
lock
add
iret
sub
push
jbe
and
mov
lret
fdivl
scas
inc
adc
push
mov
int
js
fcmovb
xor
or
test
mov
jbe
test
loopne,pn
pushf
fidivs
aaa
test
sti
xlat
test
in
imul
dec
fisubrl
push
xor
dec
je
cld
add
or
mov
ja
aaa
mov
xor
fldcw
add
pop
adc
xchg
int
mov
push
repnz
and
cli
mov
cld
ljmp
lcall
ja
popa
xchg
sub
xor
insl
add
das
lea
push
cld
movsb
xor
xor
lods
add
or
and
pusha
repnz
out
sbb
cmp
addr16
push
pusha
mov
scas
pshufw
mov
daa
fsubrl
pop
cmp
sub
xlat
push
clc
dec
fucomi
hlt
movsb
jge
sbb
sbb
push
rcll
sbb
das
cmc
or
cmp
push
xchg
inc
push
mov
mov
or
dec
mul
mov
fnstenv
lock
popf
lods
dec
imul
mov
adcl
cs
jo
pop
shlb
cmp
sbbl
test
cmp
pushf
mov
push
ds
inc
xchg
push
pop
cmc
sub
and
inc
add
push
add
dec
push
jno
mov
insb
jae
in
cmp
pop
add
jbe
ret
mov
test
loop
mov
rol
aaa
scas
out
clc
lret
sbb
js
daa
aad
bound
pop
repnz
xor
push
mov
clc
xchg
mov
jnp
shl
push
mov
je
lods
mov
push
cs
push
mov
push
sbb
ljmp
dec
pop
lods
outsb
les
push
xchg
mov
sbb
fwait
and
jg
ret
mov
cmpsl
repnz
dec
imul
xchg
mov
cmc
push
fdivr
mov
gs
stc
lret
adc
sub
push
sahf
push
and
movsl
adc
mov
out
inc
popa
push
nop
ja
sarb
stos
pop
scas
clc
rol
rcr
adc
neg
stc
cmp
imul
and
cmp
sarl
and
pusha
xor
daa
fldenv
aam
fldl
and
and
lock
aas
cmp
xor
aas
pop
and
es
pop
loope
push
roll
push
ljmp
les
cmp
sub
stos
sbb
mov
add
mov
shll
or
scas
sarl
popa
pop
in
ljmp
xor
adc
cmp
inc
xchg
jb
push
mov
arpl
ficompl
fcomip
cmp
clc
lds
adc
and
lret
inc
loopne
lea
icebp
sbb
mov
test
incl
inc
sub
mov
int
mov
aas
popa
xchg
ret
data16
xor
add
outsb
icebp
daa
sahf
xlat
pop
arpl
int
sub
daa
add
xchg
nop
adc
pushf
popf
xor
rcrl
aad
adc
xchg
add
enter
sub
lret
mov
xchg
mov
xchg
or
cltd
sbb
lret
int3
int
jl
mov
xor
mov
mov
push
cmp
cmp
shl
sti
mov
dec
pop
test
xchg
or
jne
mov
cli
adc
lcall
vscatterqps
ss
add
rcrb
xor
dec
out
mov
add
insl
insb
push
stos
pop
rcll
pop
ljmp
popf
mov
popa
adc
inc
xchg
push
daa
mov
jbe
and
inc
cmp
scas
jp
xor
dec
cmpsl
orl
in
xor
fldcw
add
mov
jno
mov
adc
cltd
inc
cli
bnd
mov
add
out
iret
std
pop
xor
popa
out
in
push
pusha
adc
push
dec
int3
inc
xor
loopne
inc
push
dec
pop
loopne
or
and
cltd
pop
xchg
cmp
adc
data16
push
es
ja
mov
add
mov
testb
sub
push
mov
aaa
in
ucomiss
out
pop
fnstsw
ljmp
cmp
xchg
andl
jp
mov
imul
jo
sub
xor
dec
nop
popf
aad
push
icebp
cmp
push
pop
mov
mov
or
cmp
outsl
cmp
jae
cld
lock
push
xadd
xor
mov
cwtl
sbb
ret
jne
imul
pop
test
leave
inc
push
jge,pt
pushf
dec
fstl
jo
hlt
fcoml
inc
dec
mov
dec
xchg
insl
lea
fsubrs
aad
cmpsb
addb
cmp
rol
gs
ret
pushf
rorl
in
arpl
stos
sub
pop
cmpsb
arpl
int3
arpl
imull
push
iret
mov
xor
dec
insb
dec
jae
in
push
mov
xchg
mov
mov
das
xchg
jb
dec
adc
jecxz
xchg
or
push
fdivrl
xchg
sbb
mov
mov
adc
ret
mov
inc
popf
out
xchg
or
inc
int3
sti
cmp
or
mov
xor
test
add
cmp
dec
lods
mov
sub
mov
sbb
xor
xchg
out
jge
xchg
mov
repz
sti
push
pop
int3
xlat
mov
sbbl
dec
push
jp
fnsave
push
pop
pushf
mov
cld
xor
inc
pop
xchg
xchg
inc
rorl
add
cmp
fnstenv
imul
inc
jno
xchg
repnz
pop
xchg
out
out
sbb
jb
rep
cmc
or
adc
mov
and
pop
mov
insl
add
addb
cmp
insl
lods
jmp
addr16
adc
xor
cmpsl
push
fstpl
ja
or
ret
pusha
je
cld
fistpl
adc
das
jb
jp
xchg
mov
or
push
ret
or
cmp
mov
loope
fs
jno
lods
push
jo
mov
addr16
xchg
and
sahf
les
mov
and
add
mov
cmpsb
repz
sub
sarb
push
repnz
ja
push
ljmp
adc
insb
aad
or
sbb
pop
sahf
sbb
pop
push
fwait
push
cmp
dec
xchg
negb
mov
fcmovnu
push
mov
subl
cs
test
in
jne
daa
jmp
mov
in
loope
mov
test
les
inc
and
popf
cwtl
filds
cld
scas
fwait
xor
scas
xor
cld
ror
inc
bound
push
stos
popa
pop
xor
test
sbb
push
jno
and
inc
shr
or
jecxz
cld
lea
cmp
insl
ljmp
out
ss
mov
mov
sub
mov
jle
jnp
lcall
adc
pusha
push
push
popa
mov
aad
sub
xchg
or
xchg
mov
or
fstl
adc
jnp
lock
pop
dec
mov
pop
fs
sti
and
adc
lods
push
scas
pop
inc
jns
pop
int
out
leave
sti
testl
jno
pop
inc
outsb
mov
push
xchg
sbb
les
test
pop
dec
or
push
sub
mov
ss
xor
sub
and
aaa
out
cmp
sub
sbb
lret
push
adcl
mov
xor
and
call
shlb
rcrl
push
pop
dec
fdiv
lods
iret
lock
jne
in
mov
mov
andl
fcomip
fisubrl
mov
bound
test
aaa
pop
insb
ret
dec
je
jb
mov
outsb
inc
mov
push
dec
pop
xchg
dec
pop
mov
inc
lret
imul
pop
adc
xchg
stos
aad
push
mov
sbb
pop
dec
lea
adc
mov
mov
xchg
adc
or
mov
repnz
push
or
out
dec
pusha
pop
add
ljmp
jle
mov
inc
test
dec
xor
jns
bound
xchg
pop
mov
roll
inc
in
shrl
sub
movsb
stc
lcall
aaa
mov
jno
dec
fld
not
insl
loop
sub
push
push
lods
xor
loop
repnz
inc
push
popa
leave
mov
mov
cmpsb
dec
cmc
sarb
je
xor
pop
mov
decl
fwait
inc
lahf
adc
add
and
fwait
dec
xchg
scas
and
aad
push
mov
repz
loop
leave
cltd
lock
adc
mov
add
repz
pop
xchg
xchg
mov
sbb
adc
clc
addr16
xchg
fidivrl
xlat
inc
cld
xchg
cs
pop
arpl
out
cmpsl
push
cmp
add
push
aad
cmp
dec
stos
movsl
cmp
cmp
pop
lret
xchg
jle
push
aam
ret
add
test
int3
outsb
sub
mov
add
xchg
cmp
sub
add
jae
imul
push
jb
mov
push
adcl
loopne
mov
leave
dec
jge
jmp
ja
and
or
push
and
adc
and
adc
test
xchg
xor
cmp
std
or
sarl
inc
jne
fdivrs
jb
push
scas
dec
pop
mov
jge
arpl
cmp
xor
mov
nop
les
and
imul
inc
hlt
daa
push
fwait
push
jg
jo
mov
inc
mov
shlb
jge
lods
aaa
outsl
sahf
add
scas
cmpsl
cmp
cmpsb
sbb
pop
test
stos
imul
aad
adc
fidivs
in
xchg
in
pop
jl
ljmp
jg
sub
jge
movsl
and
mov
jmp
and
out
jmp
adc
shlb
std
fmull
fidivl
in
xchg
ljmp
js
fmuls
mov
popa
ljmp
mov
push
imul
enter
icebp
jae
sub
pop
pop
stos
pop
nop
and
lds
test
xchg
loop
sahf
inc
push
test
dec
fstpt
movsb
inc
xor
dec
add
mov
jle
pop
cmp
in
rorl
dec
mov
mov
jnp
jmp
cmp
xor
inc
cwtl
sbb
adc
or
mov
lds
and
sbb
ja
mov
jbe
ficoml
push
dec
push
bts
test
rcrb
sahf
pop
loope
xor
insb
ret
inc
lods
imul
test
outsl
jge
sbb
mov
repz
stos
dec
in
and
loope
loope
aam
xor
mov
sahf
dec
mov
shlb
stos
cltd
mov
mov
lea
inc
or
push
mov
sbb
pushf
sbb
sbb
cmp
es
in
gs
cli
and
lods
insb
test
insb
cmp
mov
adc
or
add
aad
adc
add
jmp
jo
xlat
xor
mov
mov
ja
or
add
sti
js
and
lock
push
pop
sbb
sub
out
and
jg
sub
mov
xchg
xchg
push
repz
ret
mov
insb
jecxz
addr16
sbb
pop
adc
mov
xchg
in
pavgw
loop
dec
int
test
hlt
test
scas
outsb
xor
push
lods
lea
rolb
addl
leave
insb
sub
sbb
movsb
int
xor
pop
js
mov
or
popf
popf
mov
lret
and
push
xor
mov
adc
dec
aad
sub
imul
and
sub
xor
and
mov
mov
push
adcb
and
jmp
jl
orb
add
pop
pop
fs
xlat
mov
jne
xchg
cmc
pop
mov
push
shlb
jne
mov
js
loopne
and
icebp
adc
daa
pop
inc
inc
jo
lock
hlt
xchg
ds
in
sub
and
fcmovne
push
lret
iret
adc
popf
loopne
mov
dec
jmp
cmp
adc
adc
xor
cmp
sti
pop
push
cs
mov
addb
imulb
sbb
repnz
sub
xchg
and
in
cmpsb
mov
add
xor
dec
js
je
inc
sub
call
mov
xor
out
scas
mov
ficoml
jns
xorb
adc
loopne
pop
add
xchg
mov
pop
sub
shll
lcall
bnd
arpl
cmp
std
repz
or
inc
das
in
mov
pop
pop
dec
push
into
pop
and
pop
sub
jmp
xor
mov
pusha
fistpl
sbb
push
outsl
adc
loop
inc
xor
clc
jg
ret
add
xor
add
push
adcl
sbb
and
push
cmpsb
and
lahf
out
sub
aas
inc
leave
aas
pop
aas
mov
jbe
mov
outsb
dec
cmp
pop
cmp
mov
pop
ret
cmp
and
push
leave
push
push
out
mov
fnstcw
dec
test
stos
test
ja
loopne
add
add
icebp
jne
mov
inc
sbb
jge
mulb
mov
push
ret
test
xor
mov
inc
dec
xor
lods
fcomi
lcall
xlat
sub
push
jnp
inc
jecxz
jnp
pop
test
fidivs
xchg
cmovno
cli
jo
sbb
inc
in
js
sbb
mov
push
dec
mov
pop
xchg
xlat
out
bswap
loope
cmp
outsl
sub
and
dec
mov
cmp
fs
sub
mov
and
rcrl
jmp
push
repnz
inc
dec
xchg
outsl
fstpl
sub
push
lods
xchg
mov
movsb
jae
jge
les
pop
ja
out
icebp
hlt
xchg
mov
sti
imul
xor
mov
mov
mov
jl
cltd
cmp
push
lea
xlat
sahf
out
int3
roll
inc
fnsave
scas
test
pop
jmp
outsl
mov
inc
pop
push
sub
dec
popa
loope
inc
repnz
fldt
mov
jl
mov
sub
sub
push
shll
cmpsl
bound
inc
test
mov
in
push
xchg
sbb
in
fisubl
dec
icebp
shrl
jb
out
cmpsl
out
test
pushf
xchg
adc
fstpt
xchg
mov
mov
rcll
and
xor
mov
jne
jg
insl
loop
jg
mov
jle
adc
fists
mov
jo
push
pop
xchg
fsubr
daa
and
arpl
sbb
xorb
sti
lret
repz
lock
pop
push
xor
jo
jmp
and
nop
frstor
lahf
cld
out
pop
sub
dec
mov
push
mov
les
mov
out
shlb
data16
int3
adc
frstor
mov
stc
and
mov
or
push
aaa
data16
xor
push
jo
push
mov
lock
sbb
fisubs
out
hlt
andl
je
push
cmp
out
call
nop
xchg
inc
inc
dec
ret
inc
cmpsl
and
dec
pop
dec
lods
push
lods
cli
or
and
lret
or
test
xlat
outsb
and
add
fs
aas
push
and
jmp
lock
pop
adc
jo
xlat
mov
enter
xchg
pop
lock
fdivp
dec
stos
jne
or
mov
and
sbb
jb
movsl
mov
mov
mov
sub
cmp
arpl
jb,pn
std
mov
sub
test
rorb
aad
mov
and
mov
loopne
sbb
or
xchg
mov
shlb
mov
xor
or
popa
frstor
mov
cmp
xchg
cmp
push
add
out
fstpt
daa
xlat
push
pop
cmpsb
add
push
and
ret
test
fistpl
call
clc
cmpsb
mov
imul
xchg
fs
sbb
mov
shll
pop
lret
shlb
push
push
int
stos
mov
mov
push
pop
pop
sub
inc
pop
out
xchg
xchg
dec
jno
dec
test
jecxz
or
and
dec
mov
mov
js
es
dec
test
jae
sbb
ret
mov
mov
jno
dec
cs
sbb
push
das
popa
sub
pop
lret
xor
jge
lds
repnz
dec
pop
enter
jmp
jle
push
pop
addb
inc
mov
push
adc
inc
mov
jecxz
decb
ja
mov
stos
adc
mov
decl
adc
insl
data16
lods
stos
aaa
cmpsl
lret
lods
lods
mov
sub
enter
stos
and
xor
data16
xlat
scas
pop
iret
xlat
je,pn
jbe
xchg
mov
xor
mov
jecxz
leave
je
sub
mov
lcall
pop
repnz
sarl
xor
repz
xchg
jg
lea
adc
aad
out
jg
sti
andl
add
cmpsb
jns
jecxz
adc
push
fstpt
insb
out
jmp
and
jle
mov
jae
dec
movsl
xchg
jmp
jecxz
fisubrl
cmpsl
fdivl
cmp
in
push
sub
pop
notb
cwtl
imul
or
lods
or
mov
adc
mov
xor
inc
inc
sbb
mov
mov
or
dec
and
ss
push
in
cmp
sbb
mov
push
add
mov
cmc
rcr
pop
sbb
insb
xchg
or
mov
push
xchg
ret
sbb
sub
sbbb
divl
push
ss
negl
sti
inc
imul
jb
shll
in
xchg
add
add
jnp
ja
int3
lret
mov
gs
in
mov
pop
addr16
cltd
xchg
ss
inc
jecxz
inc
jo
inc
mov
mov
cmp
jge
out
test
lods
and
pop
arpl
inc
sbb
arpl
fcomi
in
notl
int3
lret
push
adc
sbb
movsl
inc
loope
ret
cs
dec
rclb
jg
jno
sub
outsl
andl
add
cld
cwtl
mov
xlat
push
lret
nop
sbb
inc
lock
lahf
xor
add
inc
cmp
rcl
push
cmp
cmp
out
sub
lcall
mov
jns
int
mov
xor
dec
div
fcmovne
lods
test
je
in
push
xchg
into
test
dec
xchg
loope
les
cmp
ds
ds
test
inc
ja
sbb
mov
imul
loopne
pop
incl
in
pop
mov
in
int3
push
inc
adc
xor
jno
sub
jmp
not
leave
inc
pop
data16
arpl
imul
int
inc
and
mov
std
insl
adc
dec
or
xor
mov
and
and
in
dec
sub
pop
ud0
mov
cmpsb
scas
pop
imul
lock
xchg
dec
push
lea
aaa
fwait
xchg
cmp
jb
popa
xchg
cwtl
in
aam
or
inc
cmpsl
and
cmp
std
lods
dec
mov
jl
sbb
shll
out
lods
divb
mov
outsl
push
test
test
or
call
pop
sub
adc
mov
int
mov
or
dec
rcr
jb
cmp
mov
sub
arpl
adc
insb
lcall
out
pop
mov
clc
jecxz
cmp
aad
push
sbb
xchg
and
scas
sub
int3
or
adc
xorb
mov
scas
jp
push
cmp
jl
push
gs
dec
fucomp
insb
or
mov
idivb
mov
ljmp
jge
sbb
pop
push
adc
je
lds
and
rolb
insb
call
xor
hlt
popf
ja
scas
aas
bound
cmp
xor
inc
mov
jns
js
test
divb
test
aaa
xor
cwtl
fcmovnb
subb
xchg
inc
and
ja
ret
jmp
cmc
dec
jl
fs
int3
stos
outsl
mov
repz
sub
jmp
bound
jo
add
shlb
pop
or
and
cmpsb
xor
sub
xchg
xchg
sub
test
mov
cmc
movsb
xlat
jnp
insb
fdivl
nop
pop
add
pop
insl
xchg
mov
popa
dec
movsb
inc
sar
sub
jno
cmp
lret
jmp
outsb
dec
and
cwtl
sub
stos
shl
mov
fiadds
shlb
or
xchg
sub
pop
inc
rcrb
push
xor
push
sbb
and
cltd
loop
xor
outsl
or
pop
shlb
or
imul
fldcw
jbe
call
into
movsb
in
push
cmpsl
lcall
dec
mov
aas
cmp
inc
xor
add
xchg
xor
add
inc
inc
or
movsb
repz
fisubrs
ret
mov
mov
xor
pop
sub
jo
les
repz
nop
imul
pop
bound
pop
push
sub
enter
mov
cmc
inc
add
outsb
or
xor
or
inc
mov
fs
pop
movsb
jnp
mov
ss
sbb
pop
mov
adc
fadds
je
stos
sbb
and
push
popf
addr16
bound
vpmullw
popa
xorl
mov
sub
mov
aad
jl
in
cmc
dec
xchg
subl
xor
push
sti
inc
push
and
xor
xchg
inc
int3
inc
sti
loope
ror
daa
and
adc
sub
and
inc
xorb
xor
mov
sub
jno
in
aas
or
jecxz
inc
sub
nop
ljmp
xor
xorl
mov
test
push
pop
xor
cwtl
enter
sbb
cmp
test
mov
pop
mov
es
sar
add
insl
adc
jno
xor
mov
inc
lcall
push
adc
inc
sahf
mov
push
iret
jno
pop
cmc
dec
test
test
jle
jmp
fcompl
mov
iret
rcll
movsb
fildll
adc
ja
xchg
das
adc
insl
pop
xor
rcrb
testl
lret
pop
jo
xchg
and
es
icebp
into
mov
faddl
cltd
cmp
xor
popa
scas
add
xchg
mov
or
out
pop
mov
dec
lcall
cltd
sub
sbb
mov
xorb
xor
int3
jb
push
cwtl
scas
or
aad
push
outsl
xchg
repnz
cli
adc
and
bound
fildll
pop
mov
fimull
sbb
movb
xchg
push
mov
iret
leave
xchg
push
fs
push
lcall
mov
jno
mov
sarb
outsb
xor
jp
dec
das
inc
shll
in
pushf
test
cld
repz
xchg
movsl
cmc
popf
scas
pushf
pop
sti
int3
lret
xor
aad
xor
and
sarb
outsb
pop
xchg
sbb
cli
mov
pop
mov
int3
adc
push
mov
ja
in
aaa
outsl
and
sbb
cmp
push
shlb
xor
mov
mov
data16
push
je
and
dec
imul
jns
ds
or
jmp
xchg
push
js
jo
fmull
and
jl
or
lock
push
dec
jge
mov
sahf
jne
add
sub
mov
testb
pop
push
je
inc
jmp
jo
cmp
or
imull
dec
cmp
jne
or
fldcw
lahf
jns
scas
lods
nop
jne
add
adc
repnz
bound
pop
test
fbstp
movsl
into
xor
rcrb
imul
mov
jo
xchg
lret
push
out
not
cs
xor
pop
mov
and
mov
aam
xlat
jp
cltd
dec
cmp
dec
push
inc
xchg
dec
jb
addr16
es
push
fwait
popa
mov
cmp
ret
and
ljmp
sbb
dec
test
hlt
or
jne
dec
jno
rorl
shrl
mov
movsb
xor
popf
ret
cmp
scas
in
or
cs
aaa
sub
fldt
test
outsb
xchg
mov
cwtl
and
push
lahf
out
inc
or
aad
mov
popf
jns
cs
mov
jp
fnstsw
push
add
xchg
roll
lods
orb
sbbb
loop
push
ficomps
into
insl
fs
jb
add
cmp
mov
cs
dec
testb
adc
scas
mov
mov
or
testl
test
mov
dec
imul
xchg
fcoms
xor
or
dec
and
sub
arpl
mov
aam
add
js
or
jg
xor
sahf
lcall
xor
xorb
xor
push
add
je
in
adc
sbb
mov
fidivl
inc
mov
out
rol
sbbb
mov
pop
inc
in
scas
or
push
xor
mov
cld
or
jp
pop
fsub
jmp
dec
cwtl
jp
mov
bound
fbstp
gs
ss
xor
dec
out
enter
outsl
push
cs
mov
lcall
add
dec
daa
lods
push
test
jp
or
mov
mov
lods
mov
fidivl
in
in
dec
shll
ss
les
sub
addr16
pushf
mov
push
stos
ffreep
in
enter
mov
mov
loopne
insl
not
adc
sub
loop
sbb
pushl
xchg
lea
pop
test
and
and
jns
xor
and
mov
jno
outsb
mov
daa
test
dec
cmpsb
sbb
mov
dec
or
popa
mov
add
push
rclb
push
rcrl
arpl
dec
in
enter
leave
js
cmp
xor
jmp
pop
and
jnp
test
xlat
test
out
inc
adc
fwait
xchg
cmpsb
add
mov
adc
adc
loopne
add
fcomps
out
enter
leave
mov
popa
pop
cmc
push
outsl
jp
jno
imul
mov
mul
sbb
xor
push
dec
mov
xchg
into
inc
je
mov
je
popa
mov
xchg
cmp
imul
sbb
enter
mov
insl
xor
inc
push
in
xlat
cmp
and
mov
lahf
ljmp
push
addr16
push
imul
jne
ret
push
pop
testl
cmpl
out
inc
and
sahf
rorl
add
pushw
movsb
test
or
add
sub
mov
cld
mov
flds
mov
and
mov
add
push
push
add
inc
push
rorb
and
or
pop
jle
test
inc
mov
loopne
fcoms
dec
imul
popa
push
movsl
push
xchg
insl
jo
lahf
movsl
cltd
gs
ds
xchg
fwait
hlt
and
lcall
not
jnp
fstps
cmpsb
cltd
insl
repnz
xchg
mov
xor
imulb
in
jp
dec
push
xor
insb
popf
into
aas
jbe
insl
daa
outsb
add
mov
lret
test
aam
pop
or
je
les
adc
push
fadd
cmp
ss
shlb
push
xor
sbb
ret
loope
imul
ljmp
loop
xchg
mov
mov
mov
xchg
dec
and
mov
add
sbb
pop
push
sbb
lret
mov
sub
mov
push
jns
repnz
mov
mov
js
scas
stos
adc
xor
xor
inc
daa
mov
add
and
inc
mov
addb
xor
mov
in
pop
push
cmp
lret
cmp
enter
out
xchg
fwait
js
je
int
shll
pusha
mov
addr16
pop
pusha
cmpsl
fdivr
sbb
mov
in
mov
enter
mov
movsl
mov
inc
jno
or
outsl
push
icebp
mov
xchg
add
xlat
mov
mov
movsb
fwait
inc
dec
mov
inc
xchg
testb
inc
pop
or
inc
jae
adc
nop
ss
addr16
jecxz
xlat
imul
add
lods
dec
sti
mov
cwtl
insb
fwait
ret
imul
inc
and
outsl
push
sbb
push
fisubrs
sub
xlat
mov
xor
cmp
mov
dec
fsts
xor
and
adc
outsl
sub
sub
into
loope
inc
pushf
int
in
jnp
ss
push
cmp
or
ds
mov
mov
push
and
inc
daa
and
pop
mov
aas
cmp
int
stos
fistpl
jl
jnp
xor
sbb
xchg
fnstsw
rclb
inc
jns
pop
out
lcall
rclb
xorb
js
adc
enter
test
sbb
stos
dec
mov
notl
sarb
or
out
dec
inc
out
jp
add
jg
clc
push
into
jg
and
sub
push
popf
popa
dec
fstps
mov
scas
call
dec
add
dec
xchg
mov
sub
lds
aam
hlt
push
fs
push
leave
repz
sbb
and
pop
push
add
in
pushl
ja
mov
push
adcl
push
mov
pusha
jmp
pop
sub
jmp
data16
mov
addr16
pusha
sub
inc
ret
cmpl
add
clc
xchg
rcrl
mov
pop
movsbl
mov
popf
push
out
in
test
push
dec
in
xor
mov
mov
scas
lods
in
sarb
cmp
add
push
insb
repz
loope
cmp
stos
push
in
xchg
adc
dec
add
xlat
xor
mov
sti
push
add
and
pusha
jmp
jb
cmp
call
pop
sub
shll
sbb
jb
xchg
mov
fmul
sbb
jb
xchg
push
xchg
mov
sbb
jge
or
jmp
jo
clc
cmp
data16
aad
pop
in
mov
lahf
mov
repz
notl
dec
idiv
js
pushf
addr16
stos
jp
fs
loope
push
jo
add
push
imul
or
in
push
sbb
mov
mov
cwtl
insl
xchg
addr16
mov
stc
xchg
mov
nop
cmp
xchg
loopne
add
mov
cmp
mov
or
push
adc
mov
lahf
shrb
out
out
mov
pop
cmp
ret
fisubrs
loope
gs
push
pop
and
pop
add
mov
push
mov
aad
in
xor
lods
push
out
jecxz
fcmovne
jbe
test
imul
mov
scas
or
ja
push
repnz
cmp
xor
pop
sub
aas
lods
in
xchg
je
sub
sti
shrb
int
sbb
mov
cmpsb
push
out
push
mov
mov
jmp
bound
mov
lods
popa
mov
movsl
cmpsb
sub
xchg
jecxz
arpl
inc
adc
cld
imul
push
push
mov
mov
push
xchg
adc
mov
mov
sti
scas
inc
push
xor
decl
inc
testl
adc
rcr
and
into
sub
push
cmp
lods
sbb
es
repz
outsl
popf
pop
mov
test
fcmovnbe
hlt
cmp
in
sbb
ficoms
enter
mov
mov
fdivs
lea
icebp
pop
imul
outsb
mov
test
cwtl
sub
jno
fimull
sbb
push
xchg
and
inc
cmp
divb
out
sbb
or
aaa
ss
stc
jne
popf
xchg
pop
ljmp
add
inc
or
jnp
popf
xchg
xlat
dec
push
mov
mov
adc
loope
fsubrl
push
lahf
addr16
cmp
xor
pop
data16
das
iret
xor
mov
mov
pushfw
mov
lret
mov
clc
mov
or
mov
or
int3
icebp
out
dec
out
jb
push
sbb
sbb
mov
xchg
cmp
pop
mov
call
dec
cltd
or
dec
push
xchg
push
jbe
jle
push
inc
dec
sub
inc
ljmp
sbbb
mov
pop
aaa
clc
pop
stos
subb
or
push
mov
icebp
stos
out
xchg
mov
dec
ljmp
jp
int3
in
jns
nop
pop
adc
and
subb
imul
push
imul
popf
ds
lods
test
insl
out
in
jg
pop
adc
movb
scas
das
hlt
inc
nop
outsb
cmp
sbb
add
rolb
rcrl
mov
jae
notl
pop
es
fstpl
add
add
jb
inc
lahf
mov
call
mov
sub
lret
test
push
pop
inc
mov
cmp
jne
mov
and
push
call
dec
repz
shll
aam
lcall
mov
push
inc
test
and
add
test
notb
loopne
xchg
popf
dec
mov
aad
mov
push
mov
insl
bswap
test
cmp
in
pop
mov
cld
xchg
adc
pusha
mov
mov
xchg
push
jecxz
mov
scas
gs
mov
rolb
or
xchg
in
add
mov
xor
xchg
push
push
pop
add
mov
popf
out
aad
and
sbb
out
jmp
lea
adc
ret
xor
daa
mov
out
pop
xor
pop
ret
inc
sub
add
xchg
xor
push
cmp
push
flds
inc
dec
loope
sub
jne
sbb
stc
pop
mov
xor
stos
stc
pop
lods
jg
xchg
add
sub
mov
mov
jne
clc
mov
sbb
mov
push
inc
int
fldenv
push
orb
cld
adc
xchg
bound
loop
push
or
mov
loope
fcompl
loopne
lahf
push
pop
dec
stos
fcmovb
inc
int
mov
jp
jmp
cltd
adc
in
popa
lods
mov
xor
in
xlat
orb
mov
cmpl
fmull
dec
xor
fwait
stos
in
popf
and
sub
int
mov
fldenv
adc
sub
jne
mov
or
test
lds
mov
mov
and
out
lcall
push
pusha
mov
scas
or
imul
sub
cmpsb
dec
mov
cmp
push
inc
popa
and
enter
cmp
rolb
sbb
jae
mov
and
xor
aad
shl
aad
imul
rcl
ss
enter
and
xor
cld
jmp
mov
mov
js
lret
mov
bound
stos
clc
cmp
test
sbb
add
lock
inc
jg
pop
ljmp
pop
nop
xchg
fs
lds
shll
mov
imul
fidivs
sbb
xor
push
sbb
mov
push
mov
pop
push
adc
dec
daa
pop
icebp
push
testl
icebp
je
pop
fisubl
ret
into
mov
inc
add
dec
ljmp
push
mov
fdivl
scas
sbb
xchg
jge
add
lea
xchg
push
cs
nop
fcoms
mov
mov
inc
mov
imul
es
mov
lahf
lds
subb
dec
cmp
jo
les
add
and
data16
in
dec
lods
pop
mov
es
outsl
mov
mov
adc
mov
ficoms
mov
xor
arpl
test
or
les
test
fsubrs
ja
dec
fwait
push
add
in
das
call
pop
gs
fwait
or
les
das
ss
mov
mov
leave
loope
inc
push
notb
xchg
sub
mov
daa
inc
test
jns
mov
pop
jae
mov
je
hlt
mov
inc
xchg
mov
aad
pop
mov
js
mov
mov
jbe
mov
sbb
gs
repnz
std
push
jmp
jl,pn
jae
jge
in
sbb
lret
data16
push
push
in
add
xchg
enter
test
arpl
test
adc
scas
sbb
dec
pop
mov
pushf
xchg
aad
sbb
sbb
inc
psubsb
in
jmp
movsb
je
out
xchg
or
mov
or
std
adc
xchg
outsl
fidivl
fisttps
push
jecxz
lock
cmpsb
push
and
rcl
out
dec
cmp
xchg
dec
test
popa
mov
sub
mov
repz
mov
stc
mov
cmc
fwait
sub
stos
rcll
bound
shrb
xchg
jbe
push
sub
push
xchg
mov
mov
sbbb
fldt
pop
jbe
xchg
mov
jne
sbb
loope
test
scas
int3
xor
test
cmp
inc
sbbb
iret
jo
enter
jmp
cmp
popf
lods
add
push
hlt
push
mov
test
mov
pop
notb
mov
jecxz
mov
in
cmp
mov
xchg
mov
fxch
adc
mov
aas
fwait
nop
mov
mov
pusha
andl
clc
pop
orl
add
mov
rorl
lcall
sahf
aam
daa
lahf
jg
test
loop
inc
jg
dec
popf
push
jo
fisubrs
outsl
adc
shll
xchg
out
push
inc
push
dec
aam
cwtl
jnp
dec
push
pop
flds
shll
adc
scas
jnp
mov
in
xchg
inc
cmpsb
nop
mov
enter
sub
mov
lock
push
pop
out
out
mov
and
pop
add
jl
iret
mov
inc
imul
insl
arpl
jmp
popa
sbb
in
mov
aas
inc
adc
sbb
shrb
xchg
test
fnsave
fadd
scas
nop
fabs
loopne
sub
xchg
dec
lock
popf
push
lahf
subb
pop
nop
mov
xchg
je
mov
or
fidivrl
pop
hlt
sahf
inc
xchg
inc
cmp
aam
add
push
pushf
dec
nop
mov
dec
push
insb
xlat
leave
sub
test
pop
dec
in
frstor
add
cmp
inc
inc
add
jb
fdivp
jl
inc
jnp
stc
xor
and
outsl
xlat
jge
mov
lahf
mov
jmp
cmpsb
mov
jbe
dec
es
jl
pop
cmp
fwait
gs
mov
push
jno
sub
or
push
xchg
xor
xchg
adc
movsl
xor
aaa
mov
popa
add
int
xor
xor
cli
ds
adc
mov
mov
or
sti
xchg
test
inc
test
dec
call
lods
jo
hlt
lods
in
jp
fwait
jb
cmc
or
insb
mov
shlb
jmp
movsl
in
xlat
loop
ret
mov
push
add
lahf
addr16
sub
in
lds
mov
jae
pop
or
cmp
out
pop
push
pushf
les
push
jne
aam
sbb
push
mov
adc
into
jle
pushf
imul
ret
insb
test
xchg
fisubrl
int
dec
mov
dec
and
jae
push
ljmp
jo
fst
xor
xchg
lahf
loopne
pop
and
dec
in
sbb
dec
pop
sti
mov
jg
leave
xchg
mov
pop
dec
js
enter
xlat
push
lea
or
jmp
pop
sub
in
in
ja
mov
fcomip
add
pushf
fwait
xchg
pop
mov
mov
mov
int
xchg
pop
roll
hlt
lds
push
adc
jmp
popf
fistpll
xchg
fs
cmp
mov
inc
sbb
mov
xchg
dec
bound
fs
loope
outsb
push
js
ljmp
loope
and
into
lret
mov
es
shr
dec
and
dec
or
xchg
dec
addr16
jmp
scas
pop
call
mov
push
add
xchg
call
and
ljmp
or
incl
jle
stos
and
jns
out
aas
jb
ret
cmpl
fdivrs
out
push
jmp
cmpsb
mov
rcll
push
rcrb
fmull
repnz
mov
dec
addr16
mov
cmp
mov
mov
roll
cld
jmp
mov
cwtl
and
cli
data16
mov
push
xchg
or
sbbb
and
loopne
jno
int
into
lock
movsl
nop
shl
adc
mov
push
mov
ss
mov
les
mov
jbe
subb
mov
adc
out
inc
test
jge
ja
fsubl
iret
data16
xor
xchg
loop
cmpsl
mov
dec
push
jno
sbb
nop
xchg
iret
ja
fwait
rcl
andl
stc
cld
lret
add
std
in
mov
into
fdivs
pop
and
leave
ret
jp
jg
and
sub
repz
sbb
loopne
push
out
rcrb
cmpsb
insb
sarl
arpl
and
lcall
aad
cmp
xchg
xor
lahf
xor
fsubrl
mov
mov
mov
dec
popf
push
shll
adc
aas
ret
testb
adcb
addr16
push
push
inc
jno
sbb
into
jno
test
rolb
mov
jno
mov
addl
aas
loopne
sti
jle
push
mov
test
std
lahf
inc
outsb
js
dec
mov
mov
mov
and
jns
ja
stc
inc
pop
lds
jl
pop
dec
fsts
cltd
cmp
xchg
roll
jbe
cmp
sub
xchg
inc
adc
inc
popa
and
mov
adc
mov
ljmp
aaa
hlt
sub
jns
mov
xchg
je
add
roll
and
addr16
dec
imul
cs
faddl
aaa
cmp
and
lret
icebp
cmp
lahf
nop
sbb
mov
fistl
dec
stos
xchg
pusha
adc
js
aaa
fmull
xor
pop
mov
lcall
add
mov
cltd
xor
and
xor
das
arpl
jg
repnz
and
insb
and
iret
sbb
inc
add
dec
movsl
xor
jle,pt
mov
jb
mov
in
in
imul
xchg
icebp
push
repnz
jb
pusha
addr16
test
dec
aaa
outsl
addr16
mov
dec
imul
repz
mov
outsl
mov
adc
jb
sub
push
push
nop
imul
xchg
pop
sub
or
adcb
sub
cs
imul
jg
mov
ljmp
push
cmp
jnp
push
sub
sbbb
scas
push
mov
ss
sarb
int
popf
adc
repz
ss
lods
xor
sub
sbb
add
or
aas
popa
scas
lahf
cmp
push
mov
pop
cmp
sub
daa
test
or
cmpsl
outsb
enter
mov
push
add
push
jmp
mov
mov
mov
pop
pushf
xor
push
dec
lds
jb
add
pusha
bnd
and
mov
add
dec
pop
mov
in
xchg
aas
mov
sbb
push
mov
pushf
cmp
cmp
inc
mov
pop
stos
jae
clc
mov
popa
jns
xchg
xchg
mov
pop
arpl
cld
out
into
cmp
mov
adc
lods
in
orb
jb
inc
and
addr16
ror
fsubrl
or
aam
xor
jge
aaa
mov
sub
xchg
stos
mov
or
xor
push
mov
cmp
decb
xchg
mov
or
jl
mov
lret
mov
sub
popf
fistpll
out
sub
jmp
div
bound
shll
xor
sub
enter
std
data16
test
sub
pop
mov
push
test
mov
lods
outsb
mov
mov
cmp
sub
sarb
add
push
roll
mov
not
push
test
or
loope
rcrl
clc
dec
pop
or
xchg
xor
out
gs
subb
sbb
add
rcrb
sub
push
or
rcrl
arpl
sbb
roll
pop
das
icebp
sbb
mov
fsubr
leave
push
inc
movsb
mov
push
jge,pn
mov
rol
nop
out
jge
mov
neg
sarl
push
xchg
sub
cltd
jle
xor
sub
push
fldl
sub
cmp
insb
jge
cli
cmp
jno
clc
sarb
repnz
ret
cmpsl
and
xchg
icebp
jmp
or
push
push
insb
inc
daa
pusha
xor
jae
push
aad
mov
stc
shl
sahf
mov
in
in
fldt
ds
sarb
mov
jmp
add
inc
sbb
sbb
gs
sbb
lods
pusha
insb
and
rcrl
pop
jb
mov
mov
popa
xor
sahf
outsl
in
xchg
out
in
fsub
lret
pop
sarb
shlb
jle
call
and
mov
xchg
push
rcrl
scas
jbe
jo
gs
ds
fnstsw
cmc
daa
pop
jmp
xchg
or
ljmp
out
adc
rcl
add
popf
adc
dec
out
inc
loopne
inc
push
cmp
dec
adc
push
pop
icebp
or
out
leave
mov
mov
xor
sti
mov
ds
adc
inc
mov
fistpl
push
xor
dec
jne
repz
lret
push
imul
mov
xchg
xor
pusha
add
out
aaa
cwtl
pop
add
push
sbb
dec
test
stos
mov
or
insl
cld
shlb
mov
jp
lock
cs
pop
clc
lods
int3
xchg
or
pop
sub
and
jl
sahf
icebp
sbb
mov
fildll
sbb
test
shl
ljmp
ja
mov
pop
xchg
xor
in
out
dec
inc
hlt
lock
mov
fnstsw
ljmp
fadd
xchg
fsubrs
jl
xchg
in
mov
movsb
les
mov
imul
and
adc
iret
int3
imulb
pop
outsl
sahf
lea
sbb
jae
mov
sahf
cwtl
or
xor
mov
les
cmpsl
in
int
popf
pop
adc
das
lods
lods
lahf
xchg
pop
mov
push
imul
stos
mov
fsts
or
xchg
enter
adc
or
cmc
hlt
xchg
rcrl
fs
lahf
push
mov
xchg
jbe
sub
loop
iret
cmp
scas
into
in
rorl
jno
je
push
les
mov
pop
push
mov
scas
pop
popf
lahf
outsb
cmp
lret
push
nop
sub
inc
and
out
outsl
mov
add
sbb
and
popf
cltd
and
cmp
dec
sarb
mov
xchg
adc
fiaddl
jnp
ret
and
jnp
nop
inc
je
shrl
lahf
push
std
in
dec
xchg
mov
xchg
or
outsb
fstpt
call
lret
and
mov
or
push
mov
icebp
sbb
push
in
adc
mov
inc
scas
mov
mov
jmp
icebp
push
leave
xor
int
jecxz
mov
mov
adc
mov
cmp
and
aam
notb
imul
mov
ljmp
adc
and
fucom
sarb
pop
mov
push
das
pop
push
inc
ds
adc
cld
stos
sub
sbb
or
pop
aad
stos
out
jne
flds
inc
aad
aas
test
xor
inc
xchg
inc
xchg
mov
in
adc
cld
sahf
aas
nop
xor
test
jno,pt
xchg
fstp
loope
sub
mov
enter
pop
and
in
cmp
or
aaa
in
icebp
ss
ret
pop
cmp
aad
push
pop
lcall
dec
fnstcw
cmp
xor
add
jecxz
inc
dec
xchg
xchg
sbb
rcrb
rcrb
and
insl
jp
idiv
xor
cmp
mov
dec
sahf
rclb
push
mov
xchg
daa
mov
xor
inc
cmp
push
jo
gs
scas
repnz
ljmp
push
mov
jp
xorl
testb
jbe
inc
icebp
mov
dec
fidivrs
sbb
fs
push
xchg
aad
pop
pop
pop
insb
int3
ss
cs
inc
movsb
pop
pop
cmpsb
xor
test
inc
int3
mov
mov
lret
dec
add
test
in
shrl
insl
mov
jo
jne
inc
sub
or
test
mov
or
jp
pop
xlat
cmp
sbb
fs
push
std
scas
imul
push
or
enter
push
in
cltd
sub
sub
into
and
stc
ds
outsl
mov
xor
inc
cmpsl
aaa
xor
xchg
or
mov
push
inc
inc
faddl
pushf
lahf
arpl
std
loop
ja
mov
jno
shlb
cmc
xacquire
xchg
mov
divb
dec
mov
dec
add
out
dec
cs
cld
xchg
jb
xchg
cmc
and
push
cmp
dec
mov
dec
imul
push
or
in
sbb
dec
push
pop
pop
push
cltd
cmp
loop
repnz
and
pop
jecxz
jae
rcl
ret
jnp
jg
jl
cld
in
loope
into
lods
mov
adcl
hlt
inc
sub
divl
adc
push
jbe
push
inc
pop
or
sti
flds
xchg
xchg
shll
xchg
ljmp
pop
dec
out
in
inc
adc
lret
inc
push
int3
and
addr16
daa
add
xor
shlb
cs
xor
int
sub
mov
xchg
aaa
cwtl
pop
cmc
hlt
xchg
pop
sub
adc
add
sarb
daa
andl
push
mov
cwtl
cwtl
ljmp
lret
inc
shl
xor
cmpsb
mov
push
jp
data16
lret
scas
in
xchg
jl
ret
mov
rcrl
xchg
cmp
test
inc
cltd
dec
inc
mov
repnz
repnz
mov
or
gs
xchg
mov
testb
or
or
fistps
inc
sbb
out
push
adc
sahf
push
pushf
popf
cmp
insl
imul
out
loop
scas
dec
mov
mov
repz
mov
cmc
fsubr
stos
call
insb
sub
fldcw
dec
jle
sar
xchg
addr16
push
cwtl
rclb
and
sbb
outsb
xchg
test
into
fdiv
fdivs
and
addr16
pop
mov
xchg
jp
aas
push
push
inc
out
dec
adc
sti
pop
outsl
std
ds
insl
xor
pop
loopne
inc
adc
subb
arpl
pop
cmpsb
js
mov
clc
cmpl
not
dec
sbb
mov
sub
sub
mov
and
movl
and
jno
mov
or
push
dec
shrl
mov
sub
out
stos
rcrb
loop
cmpsl
push
adc
nop
or
call
out
jecxz
dec
and
out
dec
pop
pop
push
mov
inc
int
fcompp
mov
insl
pop
or
repz
xorl
sarb
and
loope
in
and
sbb
mov
into
std
psubsw
int
cmc
adc
nop
adc
push
lods
test
pop
mov
push
sub
scas
in
lods
and
push
ficoml
add
dec
std
xchg
jp
ret
lock
xchg
ret
xor
cmpsb
xor
subb
sbb
and
mov
mov
lret
std
push
bound
xor
lods
aad
mull
sub
pop
fists
mov
aad
jae
pop
movsb
outsl
loop
add
cli
add
cltd
bound
jecxz
mov
lcall
fdiv
adc
add
fisubrs
lods
lret
popf
and
pop
push
push
add
mov
pop
mov
xchg
cld
cmc
fnsave
bound
testb
adc
xor
cmp
dec
insb
int3
mov
mov
xchg
sbb
leave
lahf
add
dec
subl
adcl
dec
fxch
or
mov
fsts
shrl
jne
xor
mov
scas
cld
adc
pop
insl
or
hlt
and
ds
cwtl
mov
and
and
das
jmp
test
icebp
fnstcw
daa
mov
add
pop
nop
aaa
xchg
loope
xchg
xor
adc
scas
int
imul
push
xor
pop
xor
cmpb
lods
push
addr16
mov
pop
adc
cmp
mov
xchg
cmp
mov
xor
or
aas
test
sub
mov
sub
adc
inc
addb
add
lods
ljmp
and
pop
sar
jb
mov
xor
dec
cmp
sub
pop
lahf
mov
inc
orl
mov
push
lret
fnstenv
ds
sub
or
mov
aas
or
or
stc
or
mov
fdivl
jmp
jl
inc
mov
fadd
cltd
and
mov
and
andb
jae
or
sbb
fistpll
outsb
sar
push
jae
sbb
hlt
push
sub
leave
stc
jnp
fisttps
andl
xchg
repnz
outsb
fstp
icebp
cmp
sub
jnp
mov
popa
pop
push
pop
and
mov
ds
test
mov
push
data16
fistpl
xchg
notl
inc
gs
adc
fldl
cs
push
shll
in
std
and
mov
sbb
lods
jb
xchg
fimuls
adc
sub
jns
ret
mov
mov
js
jae
lcall
mov
cmp
push
sbb
outsb
pop
pushf
aas
addr16
mov
pcmpgtb
adc
cmp
mov
enter
mov
test
push
sub
ds
xchg
cmpxchg
mov
repnz
sub
loopne
sahf
or
icebp
and
or
mov
sub
out
jl
scas
stos
mov
addr16
mov
pushf
lret
rcl
inc
cmc
movsl
or
lret
xchg
divl
js
fs
inc
xchg
sub
xor
sbb
je
repz
pop
xchg
xchg
add
mov
lods
dec
lahf
jb
addr16
rorl
inc
aaa
fs
leave
into
in
sbb
xchg
cld
lcall
jge
fsubs
stos
icebp
xlat
stos
movsl
xchg
jae
out
and
inc
loope
daa
rcr
outsl
dec
push
pop
outsl
mov
mov
push
cmp
lret
call
jmp
call
add
dec
std
push
arpl
outsl
cltd
cli
sbb
loope
cmp
cwtl
mov
sbb
push
dec
les
test
sarl
cmp
push
sub
pop
cmp
bound
popl
scas
jg
sbb
push
sub
cmp
int3
xorb
xchg
adc
mov
inc
scas
sbb
shl
ficomps
fiadds
mov
mov
dec
in
inc
sbb
lock
int3
inc
out
inc
mov
incb
sub
lahf
ljmp
cmp
fs
xchg
mov
cs
imul
push
roll
inc
lcall
or
xor
mov
sub
mov
fstp
dec
push
or
lods
daa
mov
ret
cmpb
cmp
iret
adc
push
push
loop
mov
xchg
sbb
rolb
insb
jnp
jge
cmp
sub
js
add
fucomip
sbb
adc
jle
and
add
stos
jp
adc
fidivs
sbb
lods
mov
and
add
dec
fcoms
sbb
jnp
jecxz
daa
lock
cld
cmp
call
push
push
push
pop
pop
xchg
jp
mov
dec
dec
je
xchg
outsb
cltd
fimuls
int3
jnp
cmp
lcall
pop
rolb
js
mov
jecxz
add
lock
dec
or
jge
jo
push
sub
mov
lret
loop
decl
lret
lret
sub
in
into
sbbb
push
pop
cli
mov
ds
call
sub
imul
sub
pop
mov
xchg
mov
bound
push
aad
xchg
cmp
rolb
ret
mov
push
jo
incb
pop
sub
xorb
xlat
add
std
dec
aam
adc
repnz
cmp
add
flds
sub
xchg
cmp
lahf
lahf
jb
mov
or
xor
mov
into
lret
in
or
mov
cmp
cmp
mov
aas
add
mov
outsb
push
das
sbb
add
jle
repz
inc
subl
mov
pop
aad
dec
dec
cmpsl
pop
pop
orl
popf
xchg
shlb
ficoms
jb
xchg
and
xchg
fwait
and
popf
shll
fs
adc
jns
cmp
pop
push
jge
add
je
pop
dec
inc
icebp
mov
lea
sub
mov
test
fsubrs
lock
xor
shrl
popa
jecxz,pt
sbb
pop
inc
add
lret
mov
xchg
sbb
lea
jmp
out
and
imul
add
clc
ret
stos
pop
pop
add
lcall
outsl
xchg
js
stos
sub
push
and
mov
test
test
lods
repz
fsubrl
adc
insb
pushf
repz
add
scas
inc
rcrl
jge
adc
mov
in
mov
mov
mov
fldenv
out
jo
bound
jbe
dec
cli
mov
enter
iret
loop
lds
in
imul
in
pop
sub
mov
jbe
hlt
aaa
out
lea
rcrb
add
enter
sbb
push
xor
sub
pushf
shll
arpl
cmp
mov
pop
jle
mov
sbbb
outsl
rol
cltd
sub
inc
and
xchg
sub
sub
or
insb
movl
jmp
mov
pop
es
xor
pop
sub
das
fcom
adc
add
fsubp
stos
out
das
lock
pop
dec
jns
test
lret
adc
out
lds
imul
xor
fsts
lea
fsubrl
fidivs
addb
outsb
xor
arpl
std
mov
mov
ljmp
jb,pn
mov
sub
and
movsl
mov
adc
sti
sbb
not
jbe
rcl
into
inc
xor
arpl
xchg
inc
sbb
mov
mov
cli
or
rcll
cltd
clc
xchg
ficomps
stc
or
and
vmwrite
jg
mov
inc
mov
and
push
aad
sub
ja
sub
movsl
xor
pop
loope
cmp
and
or
pop
clc
mov
in
fisubs
push
jmp
out
mov
insl
mov
sub
sarl
daa
add
push
jg
lret
cltd
stos
sub
icebp
jge
adc
outsb
add
jno
pop
xchg
xor
adcl
ficoml
imul
fstl
pop
xor
xor
push
imul
insl
mov
pop
xor
and
test
xchg
cmp
repnz
outsl
pusha
inc
adc
xlat
es
imul
mulb
data16
fadds
push
mov
nop
mov
jne
xchg
push
mov
inc
shlb
jecxz
add
push
divb
jp
scas
fcoms
mov
sbb
push
push
daa
ret
mov
mov
inc
mov
rorb
leave
fisttpll
inc
xchg
xchg
aaa
es
bsf
jg
repnz
sub
test
cli
jge
in
mov
jge
js
mov
shlb
stos
xor
stc
xchg
mov
sbb
rep
imul
xchg
sub
iret
or
push
pop
jmp
and
mov
and
jo
sbb
mov
xor
adc
adc
jne
stos
popf
fcompl
push
enter
xor
fldl
popa
leave
div
jbe
dec
jne
movsl
stos
sahf
dec
fsubl
cmc
xor
push
out
ljmp
adc
negb
movsb
iret
out
jge
xchg
movl
cmp
mov
or
stc
pop
pop
sbb
sub
sbbl
test
daa
lock
sahf
dec
push
jp
out
xchg
dec
mov
sar
lahf
cmovp
mov
xchg
jne
mov
loop
into
inc
push
sub
mov
mov
jecxz
sub
jecxz
fstl
mov
lcall
sub
dec
movntps
mov
das
cmc
ds
jo
adc
popf
xor
loopne
jecxz
adc
xor
sub
rcrb
mov
mov
popa
stc
punpckhdq
or
pop
mov
std
aam
push
sahf
inc
in
bound
aam
stos
sbbl
pop
xchg
bound
xchg
adc
lcall
add
mov
jae
adc
push
imul
loope
inc
out
mov
rcrl
data16
and
addb
add
pop
jnp
or
call
xor
adc
xchg
pop
mov
cmc
or
ret
lret
xchg
mov
cli
jbe
pop
call
mov
out
mov
dec
lock
mov
std
dec
enter
pop
in
fistl
andb
dec
in
in
jae
pop
jbe
sub
imulb
or
outsl
sub
jecxz
jp
dec
and
fstpt
sub
push
addr16
cld
aaa
testl
jne
xchg
test
popl
cld
in
loop
add
loope
and
mov
orb
fs
imul
mov
jg
mov
dec
add
xchg
hlt
cld
lods
jl
lds
xchg
push
hlt
mov
insl
nop
push
mov
ret
jne
movsb
pushf
mov
in
hlt
mov
xchg
mov
push
push
popf
out
test
cwtl
mov
mov
test
xchg
je
mov
push
add
dec
dec
xchg
pop
mov
mov
cmp
push
arpl
adcb
push
jb
or
sub
pop
sarl
mov
imul
push
jbe
rol
loope
fcom
daa
jmp
shrb
call
push
out
addb
outsb
add
mov
pushf
movhps
divl
ret
mov
dec
rorb
push
das
mov
mov
jge
je
jmp
mov
mov
cli
or
lods
push
stc
je
lods
insl
add
push
imul
outsl
push
scas
cmp
sbb
cli
lret
mov
pusha
cs
les
adc
mov
jle
stc
ljmp
shlb
in
imul
leave
add
adc
or
imul
pusha
repz
mov
in
gs
in
jle
cs
and
cmp
out
leave
push
inc
push
mull
aas
arpl
xorb
in
lods
insb
fiaddl
adc
xchg
jns
xchg
adc
adc
clc
bound
sbb
mov
sub
clc
jae
pop
cmpsl
in
int
sarl
out
mov
pop
jg
cmc
fsubl
jb
scas
mov
or
vfnmadd231sd
mull
ret
fimull
loopne
sbb
jo
daa
mov
jnp
or
in
or
rep
cwtl
aam
mulb
jns
ja
sub
outsl
ss
dec
add
inc
mov
ret
and
pop
sti
fistpl
or
add
pop
imul
aaa
das
ret
push
nop
adc
call
lock
test
inc
inc
xchg
cmc
loope
xchg
mov
adc
dec
push
sbb
jns
insl
add
add
popf
inc
push
dec
push
push
push
repnz
frndint
xor
lods
sub
push
test
dec
sub
mov
mov
jb
mov
movsl
outsb
sbb
cwtl
cli
adc
enter
add
jns
sub
adc
cli
addr16
xlat
add
adc
sbb
cli
outsl
rorl
stc
mov
or
imulb
mov
sub
std
rcll
xor
push
inc
push
add
cmp
dec
mov
pop
lret
fs
outsb
jle
test
add
xor
loopne
addr16
cli
bound
leave
add
adc
fistpl
aas
push
mov
or
fs
fnstcw
cltd
inc
sbb
fists
mov
sbb
fs
pop
cmp
movsl
repnz
mov
rolb
and
jle
cmpsb
xchg
ss
pop
int
and
cs
stos
xchg
std
mov
add
out
popa
dec
inc
mov
inc
pop
fcoml
mov
sub
jno
dec
test
sarl
dec
or
repz
pop
push
add
es
sahf
fldt
fs
outsl
add
insl
bound
xor
xor
jle
je
std
cmpsl
sub
repnz
rcrl
popf
or
mov
js
inc
fidivl
cmp
aam
inc
add
fdivr
cmpsb
icebp
or
mov
daa
dec
xor
out
push
xchg
shlb
push
sbb
lds
xor
and
dec
pop
xchg
xchg
pop
mov
dec
add
adc
cmp
cmc
repnz
jle
arpl
dec
jge
add
fiaddl
icebp
out
push
movsb
insl
std
ss
and
pop
bound
imul
in
std
test
mov
inc
shrl
xor
and
iret
xchg
sub
jmp
cli
cmp
sub
imul
jp
jge
andl
loop
mov
and
jle
lea
jb
mov
stos
fisubrs
push
or
lods
and
outsl
subl
ja
mov
imul
ja
and
xchg
clc
andl
pop
mov
dec
repnz
sbb
xor
and
mov
sbbb
add
arpl
lods
xor
jle
pushf
out
and
aas
divl
ret
push
insb
aas
xor
push
outsl
lock
pop
test
mov
orb
mov
pushf
aam
cmp
leave
and
loop
std
int3
jp
ljmp
inc
xor
loope
daa
lods
add
out
jl
in
adc
xor
inc
sahf
gs
xchg
or
fnstsw
or
dec
insl
fcomip
add
push
ljmp
int
leave
lock
or
push
add
dec
sbb
inc
mov
rcr
push
xor
unpcklps
testb
test
popf
fdivl
xchg
addr16
jg
cmpsb
mov
dec
adc
adcb
insl
pop
cmpsl
jg
mov
lahf
popl
ja
xlat
cmp
imul
jmp
lds
pusha
xor
loopne
pop
mov
jp
shr
dec
xor
orb
pusha
adc
test
mov
pop
push
lds
xor
das
mov
cmpsb
jecxz
nop
pop
inc
nop
dec
xchg
sahf
or
dec
scas
inc
pop
pusha
jbe
nop
xor
arpl
test
mov
cmp
add
dec
cltd
xchg
xor
xor
test
push
mov
js
push
mov
sti
add
cs
jnp
sbb
pop
ficoms
push
inc
mov
pop
pop
out
xchg
xor
dec
pop
in
adc
add
inc
cs
xor
jg
sub
xor
jmp
cmp
jge
sub
jae
lea
out
rorl
ss
or
mov
insl
mov
sub
xchg
xor
sbb
loopne
shrl
dec
movsl
cltd
addr16
cmp
addr16
push
xor
cwtl
mov
fwait
sub
mov
test
ror
adc
int
dec
stos
push
cmp
push
jns
and
cmp
pop
adcb
dec
sbb
cltd
hlt
inc
xor
mov
stos
dec
cmp
and
cwtl
andb
sub
iret
lea
testb
aaa
cmp
sti
mov
ja
adc
mov
popa
scas
popf
push
dec
in
stos
icebp
jbe
push
jo
aaa
jge
dec
cmp
mov
js
clc
pusha
cmp
inc
test
sahf
in
ljmp
xor
test
pushf
dec
pop
repz
jecxz
fcomps
fdivrs
out
mov
loop
adcl
push
movsb
cmp
scas
push
inc
xchg
in
xchg
dec
dec
jae
lds
das
jmp
inc
jb
and
ret
aam
pop
mov
cwtl
jp
stos
xor
popw
jnp
mov
movsl
adc
jge
xchg
fdivs
insl
and
fst
fwait
adc
fidivs
jbe
scas
adc
mov
gs
inc
add
cmp
addr16
cmpsl
add
sbb
pop
adcb
mov
pusha
test
adc
inc
and
sbb
lea
push
cli
dec
addr16
mov
mov
mov
cmpsb
add
fsubrp
mov
sbb
mov
enter
cmp
pop
jg
out
paddusb
push
jo
shl
jg
push
cltd
ficoml
and
aam
lret
sub
fwait
je
adc
lods
adc
cmpsl
mov
jnp
sub
jg
mov
ret
push
lahf
mov
dec
inc
push
pop
arpl
push
xchg
ds
sub
cmp
push
sbb
pop
adc
lret
sbb
sub
cmp
fsincos
stos
xor
dec
stos
fs
fs
pop
xchg
xor
and
xor
fsubp
mov
jb
push
dec
jmp
and
mov
mov
dec
pop
mov
int3
pushf
cmp
push
dec
adc
loopne
xchg
aam
or
test
add
mov
pop
add
dec
mov
cwtl
mov
mov
shlb
fwait
sbb
mov
mov
aaa
push
enter
xchg
rcl
lods
pop
repnz
hlt
jl
push
cmpsl
jbe
sub
call
mov
sub
loopne
pop
dec
xchg
pop
loop
jnp
insb
movsl
add
inc
ret
pop
je
push
call
dec
sub
or
subps
mov
cli
or
call
repz
adc
adc
and
inc
je
mov
push
dec
jge
stos
ljmp
mov
xchg
insl
and
push
aaa
nop
js
sti
add
cmp
mov
and
mov
addl
push
xchg
mov
adc
fimuls
mov
std
mov
int3
sbb
jae
les
loopne
jnp
fdivs
push
sbb
xchg
sub
or
jle
sbb
mov
push
xor
push
jo
sbb
sub
insl
inc
les
lods
or
xchg
or
xor
add
adc
fwait
pushf
sbb
push
cmp
cmp
addl
jbe
in
mov
clc
xor
jmp
movsl
popf
fstl
loopne
inc
es
int3
ret
bound
out
xor
fdiv
hlt
loopne
xor
rol
xchg
dec
jb
icebp
sub
sub
xor
push
jbe
fwait
adc
cmc
inc
sbb
leave
sbb
shll
or
fisttpll
mov
adc
loopne
add
cmp
inc
les
adc
inc
out
mov
inc
sub
pop
andl
jmp
sub
mov
xchg
loopne
fisubrs
packsswb
fcomip
sbbl
push
out
ret
es
jg
stos
sub
in
xchg
mov
pmulhuw
mov
mov
sub
scas
cmp
in
aad
jmp
js
aam
dec
pop
push
repnz
std
ds
mov
lds
pop
jecxz
lock
mov
jmp
sbbb
cmp
and
cmc
or
add
scas
xchg
inc
movsl
cmp
fwait
outsb
mov
fdiv
jbe
scas
shll
sub
pop
adc
lea
outsl
aad
jecxz
push
jg
cs
mov
sub
ljmp
adc
lods
scas
pop
inc
in
popa
jmp
pop
aam
ret
mov
loopne
inc
repz
push
xlat
mov
cmc
outsb
pop
add
sub
xlat
mov
out
push
sbb
leave
stc
je
scas
stc
jmp
je,pt
es
mov
mov
in
dec
dec
cwtl
std
jbe
retw
xor
mov
mov
sbb
cltd
int3
mov
dec
lcall
and
mov
nop
inc
mov
lahf
js
imul
pop
insl
aam
dec
or
jno
and
inc
and
xchg
in
movb
sahf
icebp
repnz
add
mov
inc
insb
iret
test
cs
dec
hlt
mov
movsl
dec
shl
icebp
cmpl
pop
scas
pop
mov
gs
cmpsl
xchg
fs
mov
push
call
nop
adc
add
pop
out
das
pushf
test
pushf
pop
jg
cmp
lods
inc
add
ljmp
scas
lods
mov
sub
mov
cmpsb
inc
jp
inc
cmp
pop
fmul
js
pop
daa
loopne
enter
int3
sub
xchg
popf
jecxz
in
xor
in
lds
mov
aaa
or
adc
mov
and
repz
mov
push
mov
dec
hlt
std
stos
insl
out
push
mov
mov
stc
lcall
test
xchg
or
push
jbe
divl
xor
cmp
mov
dec
jbe
insb
gs
scas
incl
fwait
nop
xchg
sbb
loop
aas
into
or
jecxz
adc
mov
cli
xchg
fwait
aad
aad
xor
xor
std
inc
mov
lods
ds
js
mov
roll
faddp
ljmp
xchg
xor
dec
popa
add
or
mov
xor
xchg
subb
and
fwait
mul
cmovnp
lcall
sbb
sti
inc
cmp
aaa
addr16
xor
dec
mov
daa
mov
es
jo
xor
push
sbb
and
dec
lds
push
cmp
xor
pop
sub
jecxz
push
push
push
sbb
jge
pop
fwait
das
push
push
imul
shlb
inc
aas
orl
cld
icebp
push
mov
pushf
lds
movsb
push
nop
test
cmpsl
jl
pop
lahf
lock
inc
push
ljmp
outsl
fisubrl
std
sub
jmp
std
push
daa
mov
mov
ds
insb
ds
xor
fsubr
lea
push
movsl
fcmovnbe
xchg
sarb
popa
push
test
sub
imul
or
mov
sub
les
andl
addb
pshufw
jecxz
rcl
and
push
sbb
sub
inc
decl
pop
in
in
movsl
stos
and
pop
test
inc
in
xor
jge
sbb
ja
pop
lods
jns
cmp
sti
mov
pop
test
mov
sub
inc
cmp
push
aas
mov
sub
sbb
das
pop
notl
popa
and
push
push
jo
xlat
test
mov
cs
mov
push
imul
xchg
sbb
and
add
test
mov
mov
repnz
call
into
pop
rcll
icebp
mov
out
xor
sub
mov
mov
in
pop
mov
aam
clc
fdivr
jg
mov
xor
lret
push
pop
pop
shlb
call
in
sbb
jmp
mov
pusha
push
inc
mov
shrb
insl
dec
rcr
xchg
xor
lods
add
mov
subl
out
add
in
lods
ret
imul
lret
lock
push
ret
out
dec
ficoms
movsb
arpl
loope
sbb
mov
push
loope
xchg
sbb
adcl
in
xchg
pop
push
xchg
out
xchg
mov
pop
dec
xchg
adc
adc
shrl
loope
lret
push
add
sahf
je
pop
gs
lret
jo
inc
jle
mov
into
scas
mov
fiadds
mov
xchg
std
adc
and
fwait
aad
in
inc
js
jp
movsb
sbb
insl
repz
pop
fcmovnu
cmp
ds
push
jg
push
ds
gs
out
cmpsb
cmp
fld
xor
jb
cli
adc
imul
dec
jmp
mov
call
pop
sbb
add
sbb
cmp
dec
mov
pushf
fsubr
call
lret
stos
pop
in
lods
out
jbe
jge
mov
cmp
inc
fwait
sbb
enter
adc
cmovle
add
js
lahf
jns
fildl
lret
divb
shl
rcll
mov
imul
mov
dec
addr16
jmp
sub
sub
add
sub
arpl
dec
into
cmpsl
or
push
lods
push
push
cmp
int3
lret
xor
test
and
inc
jae
xor
sbb
push
pop
fs
scas
fistps
sarb
jbe
pop
dec
pop
pop
lret
cmp
je
mov
sbb
cmp
xlat
vshufps
sarl
mov
xor
mov
push
fisttpll
jmp
jno
clc
xchg
test
fdivr
push
movsl
fnstenv
sbb
mov
lahf
rclb
je
push
cmp
adc
aas
fwait
rolb
dec
inc
shll
dec
fidivrl
adc
sub
mov
push
test
shrl
xor
pop
and
push
ret
orl
push
out
push
test
les
mov
dec
mov
adc
jbe
pop
mov
insl
sarl
movsb
nop
dec
stos
inc
in
lods
adc
sbb
fwait
outsl
pop
popf
nop
mov
sbb
xor
xor
xlat
stc
fdivrl
cmp
jno
sub
pop
fwait
mov
mov
loopne
push
ja
jp
mov
loope
ds
gs
repz
lds
shrl
xlat
lock
and
aas
xchg
addb
add
mov
jo
sahf
imul
pop
push
mov
std
xor
and
repz
push
mov
daa
jge
inc
cmp
das
mov
cmp
scas
adc
repnz
int3
repnz
stos
mov
lcall
fdivl
sub
jl
scas
sbb
arpl
cmp
aaa
xor
icebp
mov
or
out
jo
pop
and
pop
outsb
inc
int3
test
and
je
mov
lret
std
clc
mov
test
in
jle
push
imul
mov
insb
mov
dec
movsb
lods
rclb
mov
jb
dec
sub
xlat
inc
loopne
add
mov
test
push
sub
mov
push
jecxz
sub
jnp
add
and
popa
fwait
and
imul
sbb
imul
sarl
dec
xor
mov
sub
adc
iret
xchg
int
add
test
loopne
pop
pop
outsl
or
sbb
and
xor
push
in
shll
mov
adc
pop
and
int3
outsl
sub
loope
xchg
imul
sub
repz
or
ret
sub
jnp
stc
sub
aas
mov
repnz
push
add
ret
movsb
add
mov
inc
or
mov
lea
cli
pop
in
xor
es
scas
xchg
enter
ss
adc
sub
sbb
cmc
nop
data16
xchg
fcomp
push
popf
add
fidivl
push
sti
repz
sarb
cltd
lock
pop
sahf
test
pop
xchg
lret
nop
cmc
scas
sar
xor
jmp
pmaddwd
pop
inc
cmp
fstpl
cltd
pop
and
jb
scas
pop
cmpsl
lret
cmpsb
clc
ja
cmp
pop
cmp
testb
adc
inc
and
daa
out
mov
sbb
add
dec
xor
adc
sub
cli
adc
shl
lods
cmpsb
lea
or
mov
cmp
push
push
cltd
iret
jo
int
in
xchg
in
leave
add
sbb
movsl
daa
xchg
fcmovbe
ret
into
cmp
test
aad
loope
icebp
leave
mov
loopne
adcb
xor
fcomi
stc
lds
cli
mov
xor
out
ljmp
and
fmull
mov
insb
shrl
rcll
test
fistps
outsb
fstl
sbb
push
fmuls
and
inc
push
or
sahf
cmp
jns
gs
ja
sub
and
xor
popf
push
imul
mov
pushf
push
add
orb
dec
ficoms
jmp
hlt
xor
mov
insb
iret
xor
je
push
cmp
dec
lock
lods
movsb
jmp
mov
shll
sbb
aad
fdivl
ret
cmp
sub
push
mov
cli
inc
push
icebp
cmp
hlt
int3
xchg
pop
shl
jecxz
int3
adc
jb
or
or
and
rclb
mov
rep
sbb
stos
push
dec
out
cmp
xchg
cmpsb
cmp
das
sbb
dec
lret
lret
popa
cltd
imul
lret
inc
fisubs
jae
dec
jmp
daa
add
inc
imul
pusha
push
nop
push
xor
mov
inc
jae
push
fidivl
or
and
inc
test
iret
bound
cs
dec
dec
stos
jns
mull
add
add
aam
mov
push
jmp
push
lods
mov
add
pop
out
pop
mov
mov
jecxz
inc
stos
dec
xor
in
ds
hlt
ja
xor
mov
adc
cmpsl
iret
pop
add
push
and
dec
cli
xchg
and
jg
repnz
mov
adc
add
pop
fidivrl
mov
mull
movl
pop
es
test
or
inc
je
popa
loopne
pop
mov
rorb
out
test
sbb
sub
xlat
dec
sbb
adc
pop
inc
mov
loop
jne
fisttps
ret
in
cmp
push
int3
pop
shrl
sub
add
or
lods
mov
or
jnp
adc
xchg
xor
xchg
push
push
xor
in
lcall
mov
loopne
data16
lods
out
xchg
sbbl
hlt
pop
movsl
in
outsb
sub
cmpsl
fiaddl
lea
out
add
push
inc
sub
jae
pop
push
popa
out
cs
shrl
movsl
sub
out
lret
sahf
sahf
and
lret
mov
fidivrs
jecxz
mov
adc
aaa
das
xor
xlat
ja
in
pop
xor
fsubrl
pop
nop
cmp
push
cli
or
in
in
loop
ljmp
mov
mov
pop
dec
push
sbb
stos
jg
js
mov
and
xor
imul
sub
mov
add
mov
cmpsl
add
clc
xchg
fcos
mov
ret
xchg
outsb
inc
test
push
jle
out
sbb
insb
cltd
lret
rcll
out
add
sub
push
jne
rolb
adc
das
jmp
add
or
jbe
push
sarb
jbe
or
rcll
pop
mov
jg
neg
jne
ja
rclb
je
insl
outsb
in
les
lods
fldenv
mov
mov
and
int
cmpsb
shll
xchg
arpl
mov
jecxz
pusha
subb
mov
sub
outsb
fs
mov
add
out
xor
lea
test
je
fucomip
fwait
popf
nop
dec
rcrb
les
inc
cmp
call
test
pop
push
int3
rcll
cli
dec
lods
pushf
mov
js
lcall
test
cmp
cmp
mov
fldcw
dec
inc
shl
cld
scas
test
add
push
mov
scas
fimull
jmp
out
dec
mov
les
and
mov
xorl
jno
cmc
repz
ret
pop
gs
repz
inc
popa
test
insb
addr16
sti
add
jne
xlat
fs
fnsave
movsb
cld
cmp
mov
aad
in
flds
dec
ja
pop
fisttpl
fs
repnz
pop
push
clts
pop
lahf
repnz
xor
addb
gs
lea
mov
test
negb
mov
idivb
push
stos
add
cmp
and
loopne
push
mov
mov
pop
fldt
cmp
jle
adc
push
pop
fildll
daa
in
pop
sbb
mov
lods
xor
and
out
push
xchg
cmp
push
dec
fiaddl
inc
fildl
sub
int
sbb
insl
repz
jge
cmp
or
mov
jle
lcall
mov
mov
sbb
nop
outsb
pop
cmpsb
cli
enter
push
out
call
aam
jbe
movsb
or
out
cmp
xor
pop
ss
or
nop
jecxz
mov
pop
ficoml
cltd
cmp
mov
repz
dec
pop
add
xor
mov
push
not
inc
pop
inc
cmp
jnp
sbb
dec
mov
sti
push
sub
sbb
in
lock
and
imul
les
xchg
sub
in
add
xchg
and
adc
mov
pop
popf
jl
sbb
sub
xor
popa
jbe
inc
pop
mov
insb
fwait
pop
out
mov
mov
push
loop
in
out
ljmp
inc
mov
adc
lahf
push
sbb
hlt
das
pop
jbe
inc
cmp
in
insl
into
inc
jo
dec
jecxz
iret
lods
jo
or
aad
test
sbb
xchg
in
negl
push
xchg
test
push
xchg
jg,pt
movsl
inc
cs
pop
mov
jo
test
arpl
mov
push
mov
sbb
aas
nop
aam
jecxz
or
mov
loopne
mov
and
subl
out
pop
mov
dec
mov
and
roll
pop
pop
stc
cmc
pusha
sub
dec
out
mov
mov
arpl
jl
cmp
add
shll
popf
lea
stc
cltd
or
jbe
and
cmp
pushf
mov
cltd
repz
xor
xor
aaa
dec
jnp
dec
gs
leave
mov
aas
pop
pop
fdiv
xlat
fsubrs
push
out
cmc
dec
repnz
pushf
lea
xchg
data16
test
cmp
or
mov
outsl
inc
dec
es
xchg
out
xchg
push
add
pop
rcll
or
fs
cmp
and
adc
jno
fwait
push
dec
stos
cmpb
roll
rcll
add
imul
add
in
adc
add
popa
add
adcl
pop
xlat
inc
adcl
lods
inc
lds
sbb
leave
or
shrb
push
arpl
mov
jne
call
outsb
and
sbb
stos
xchg
mov
aas
or
adc
fwait
sbb
jle
ljmp
subb
pushf
sbb
or
jb
jmp
add
xchg
mulb
xor
mov
jmp
in
scas
xor
mov
roll
scas
inc
shll
std
lods
fcmovb
outsl
inc
pop
rorl
push
jl
addr16
aas
push
dec
ret
sub
enter
dec
and
mov
sub
jb
xlat
dec
shl
jmp
insb
outsb
xchg
clc
js
xchg
cltd
dec
leave
icebp
sub
and
iret
jns
xchg
push
mov
out
jmp
dec
inc
sbb
mov
or
sub
mov
inc
jg
adc
daa
sbbl
jge
push
cmp
repnz
rcr
subb
push
lods
or
inc
push
mov
dec
test
xor
decb
dec
gs
cs
fcoms
ds
repz
dec
test
mov
lretw
jle
cmpl
mov
mov
data16
btc
push
les
sbb
mov
add
jecxz
jg
jno
xor
push
push
mov
mov
filds
out
cmpsl
shlb
jmp
or
in
or
loop
add
das
mov
jp
lods
and
in
inc
popa
jo
xor
scas
adc
jp
sbb
shr
xchg
inc
jecxz
aas
shrb
cld
shr
jl
fstps
clc
mov
jle
das
push
addb
mov
jl
xor
jle
ja
cmp
xchg
sbb
bound
popa
sbbl
and
mov
dec
data16
sbb
mov
je
ret
cwtl
dec
mov
jae
and
pop
cmp
fucomi
leave
jg
repnz
push
into
xchg
jns
popa
sub
mov
fs
nop
or
addl
pusha
cmp
push
outsl
push
mov
push
outsl
inc
jne
loop
inc
cmp
in
insl
sbb
adc
adc
jne
mov
test
dec
mov
mov
and
mov
lret
ret
cs
out
jo
enter
arpl
mov
mov
lea
sub
pop
imul
inc
iret
adc
icebp
aas
push
je
push
mov
dec
lahf
add
jno
dec
add
adc
mov
or
ljmp
xchg
subl
sub
test
lds
pop
push
add
mov
jge
fnsave
pop
mov
mov
fisttpl
mov
xchg
int
dec
call
cmpsl
imul
pusha
jo
aas
or
mov
mov
jns,pn
fadds
add
push
cmp
cmp
adc
jecxz
mov
xchg
aas
mov
fldl
mov
sub
in
inc
loopne
scas
fstpl
jnp
xor
sbb
mov
mov
ffree
mov
xchg
mov
nop
pop
popa
and
ja
dec
push
mov
mov
add
adc
dec
mov
aas
mov
push
leave
adc
scas
xchg
mov
out
int
outsb
and
jmp
into
pop
insl
mov
daa
mov
in
mov
pop
data16
pop
lcall
cs
cld
icebp
mov
push
outsl
ret
test
cs
popa
inc
insb
js
sahf
xor
adc
popa
cmp
add
aas
push
sub
lds
or
jne
inc
arpl
mov
stos
and
idivb
loopne
pop
or
inc
lea
test
fistps
lret
into
mov
sbb
shl
cwtl
or
das
mov
inc
add
in
loope
cmpsb
push
pop
sub
pop
fidivs
sbb
jne,pt
cmp
cmpsl
xchg
call
ficoml
rol
testl
ss
sub
mov
dec
lret
jp
iret
in
orb
cmpsb
sbb
loop
enter
iret
mov
lcall
out
fldcw
jns
sbbl
cmp
test
jecxz
js
dec
mov
call
aas
jecxz
imul
in
inc
fucomi
mov
es
or
cmp
mov
pop
cwtl
mov
mov
mov
cltd
xchg
xchg
xchg
test
in
fwait
fwait
xor
mov
cwtl
or
cmp
mov
pop
daa
push
fildll
outsw
jl
into
fsts
dec
test
jle
aam
in
dec
mov
outsl
popf
psubusw
aaa
sub
andb
testb
dec
jmp
popa
in
fildl
jle
outsb
in
cld
aad
cld
inc
out
cvtps2pi
xchg
xor
jge
adc
es
mov
fiadds
mov
insl
mov
cmp
mov
insl
xor
jnp
xchg
hlt
gs
lcall
fldcw
ret
inc
dec
cld
decb
fcoms
jmp
mov
cmp
imul
movsl
mov
sbb
jns
outsb
lcall
dec
mov
loop
fcompl
sbb
sub
sbb
add
scas
and
xchg
aas
scas
or
xchg
sbb
mov
icebp
cli
push
mov
inc
jo
push
sbb
cmpsl
fcomps
in
cwtl
sbb
cmpsl
sahf
xor
outsl
xchg
int3
adc
ret
push
cld
sub
cs
mov
xor
xor
loope
jge
outsl
mov
xor
fnstsw
mov
cmp
lods
push
dec
pop
add
cmpsl
je
xchg
bound
gs
insb
shrb
push
dec
leave
les
repz
loopne
cmp
xchg
imul
ret
add
dec
data16
das
pop
push
int3
jne
decb
mov
push
out
scas
inc
jae
jns
cld
scas
ret
addr16
pop
cs
or
sbb
push
lret
cmp
nop
insb
pushf
daa
cmp
int3
inc
sub
movsl
inc
push
lcall
jmp
jbe
mov
cld
inc
movsl
or
sahf
shll
das
ficoms
sbb
mov
lcall
lock
xor
adc
jae
ds
mov
popf
push
pop
pusha
jno
add
lret
inc
sub
xchg
lahf
jne
xor
add
mov
lods
fadds
daa
mov
dec
push
cmp
mov
mov
jne
and
shlb
adc
enter
or
mov
xor
stos
imul
sub
xlat
imul
sti
jl
mov
jo
mov
push
enter
clc
outsb
jmp
orl
insl
movsl
sbb
aas
shlb
into
inc
rcrl
pop
fbld
movsb
rcll
and
into
daa
xchg
jb
ror
stc
xchg
fucomp
mov
scas
lock
mov
arpl
push
bnd
pop
fnsave
mov
inc
mov
stos
mov
cli
and
out
mov
mov
adc
inc
popa
inc
sub
arpl
cmp
test
fnstenv
jnp
aaa
adc
test
jae
jp
clc
and
lea
inc
mov
mov
cmp
sub
arpl
push
pop
popf
and
gs
mov
cmp
hlt
push
ljmp
mov
or
or
push
mov
sub
popa
cmpb
inc
add
dec
std
lret
xor
jne
ret
dec
pop
cs
sub
sub
jmp
mov
popf
adc
pop
rcrb
in
dec
or
clc
xchg
in
mov
mov
xor
lods
daa
ljmp
pop
mov
lret
dec
in
bound
sar
lds
dec
clc
das
add
add
jae
daa
xor
and
pop
jmp
aaa
fiadds
xchg
jmp
jbe
loopne
jp
popf
mov
cmpsb
push
pop
sbb
das
inc
adc
mov
leave
cwtl
mulps
pop
cmp
jge
lret
into
push
std
add
xchg
sarb
out
mov
push
ret
dec
jb
fwait
notl
popa
jle
push
jge
xor
sbb
fadd
punpckhdq
aad
mov
fnstsw
call
or
add
fildl
jmp
fsubrp
jl
mov
sub
decl
stos
js
add
jb
mov
imul
pusha
gs
inc
jge
lcall
je
fdivp
jmp
pop
mov
std
xor
mov
mov
push
aad
ficoml
popf
jmp
shll
jne
adc
mov
cmc
inc
jp
loope
mov
pop
fistpl
pop
imul
adc
jge
jg
inc
add
or
flds
push
dec
adc
dec
push
into
push
adc
enter
inc
pushf
mov
push
cmp
or
xchg
mov
or
cmp
sbb
vmovntpd
bnd
push
in
pop
push
mov
out
xor
push
mov
es
dec
fcoml
adc
mov
cli
scas
cmpsb
pop
test
inc
sub
adc
bound
arpl
jecxz
mov
sbb
mov
imul
pop
cli
dec
and
or
test
sti
loope
xor
xchg
jne
pop
mov
mov
fsubrp
xlat
jbe
fidivrl
cmpsl
jmp
xchg
scas
imul
xchg
movsb
adc
fs
sarl
ja
pop
les
rcll
les
das
xchg
pop
pop
mov
and
push
mov
fisubl
pop
cmp
jae
cmpsl
pop
xchg
xchg
lahf
sub
adc
dec
sbb
mov
lret
dec
mov
sbb
adc
adcl
cltd
adc
lcall
pushf
mov
out
mov
lock
mulb
enter
sub
jnp
mov
notb
enter
mov
lcall
fstp
pop
sarl
and
push
mov
insb
enter
xchg
xchg
outsl
pop
cmp
xchg
stc
int3
mov
xchg
dec
mov
add
push
xchg
or
mov
add
cld
popf
cmp
adcl
aad
sbb
mov
xor
jb
popf
sbb
and
sbb
dec
mov
xor
adc
jbe
xchg
xchg
push
push
lcall
fs
negb
iret
adc
add
in
in
aas
mov
mov
fwait
dec
xchg
xor
sbb
sub
mov
out
outsb
jae
mov
dec
pushw
cs
add
jg
pop
mov
aas
dec
lds
and
daa
push
xchg
and
mov
imul
pop
jl
mov
cmc
arpl
out
push
mov
ss
call
pop
sub
fs
push
iret
mov
jl
scas
and
xor
cltd
adc
cmp
insb
jnp
pop
dec
subl
add
mov
mov
xchg
jge
or
fimuls
idivl
jp
insl
ljmp
cmp
aas
loopne
cli
inc
inc
scas
scas
push
xchg
das
mov
call
mov
sbb
in
xorb
loop
jmp
mov
add
dec
jl
mov
pusha
sub
mov
les
orl
fildll
cmp
cmp
inc
mov
cmp
adc
mov
imul
lods
push
testw
mov
push
test
mov
stc
xor
test
stc
fisttpll
push
fadd
jb
inc
adc
inc
dec
clc
shl
inc
inc
push
iret
out
lods
arpl
int3
mov
xor
ret
push
shlb
notb
sbb
pop
or
das
and
outsl
dec
lret
adc
mov
xor
mov
jbe
mov
negb
cwtl
dec
cmc
jbe
cmp
mov
inc
in
xorl
into
pop
xor
add
push
adc
sahf
sahf
idivl
sub
jmp
mov
add
inc
cmpl
fisubrs
push
pop
movsb
insl
or
dec
xchg
push
xchg
sahf
cmc
cmc
lods
stos
sbbl
inc
adcl
lods
scas
mov
sub
iret
arpl
sbb
dec
cmpsl
mov
ja
cltd
jnp
inc
xchg
mov
add
and
inc
stc
and
jbe
aas
mov
pop
add
mov
lret
aam
int
pop
inc
mov
add
scas
js
jge
imul
ret
sub
into
fcmovnb
sub
in
cmp
push
cwtl
mov
dec
pop
ja
filds
sti
cld
xorl
push
roll
les
push
pushf
or
push
jp
xor
addr16
adc
push
les
add
lret
or
pushf
sub
imul
call
sub
pushf
sbb
js
cmp
pushf
adc
mov
sbb
inc
ds
scas
add
out
in
scas
test
and
loope
sub
adc
push
push
aad
dec
out
pop
lret
and
push
lds
xor
push
movsl
sbb
or
dec
xor
scas
scas
pusha
insb
sarl
jge
sbb
xor
icebp
xchg
repz
xor
test
sub
insl
push
or
insl
test
cmp
or
pop
repz
lahf
fnstcw
pop
ljmp
and
out
sub
jb
clc
stos
ror
lahf
movsb
and
lea
and
inc
mov
cltd
ss
jbe
mov
push
out
shll
jmp
in
cmp
and
xor
gs
aam
mov
lock
in
sbb
and
mov
shlb
jno
xchg
push
out
inc
pop
fsub
in
cltd
aaa
xor
jno
pop
jne
cs
sbb
jnp
cld
shlb
pushw
cmc
dec
or
or
dec
std
repnz
xchg
mov
xchg
sbb
inc
mov
outsl
stos
out
shrb
loope
stos
out
cmp
fbld
adc
dec
pop
mov
xor
mov
sub
mov
jecxz
push
nop
mov
inc
xchg
mov
pop
pop
mov
rolb
lret
jno
jnp
dec
loop
dec
pop
cld
dec
or
fprem
xchg
dec
test
mov
xor
push
push
sub
jbe
loopne
inc
ret
push
gs
push
jl
in
or
jmp
mov
jne
mov
les
icebp
js
xor
inc
jmp
sbb
add
mov
loop
xchg
mov
out
cmp
or
enter
adc
repz
jns
mov
arpl
ljmp
lret
sub
leave
xchg
inc
dec
aas
js
cmp
add
popa
or
and
inc
sbb
sbbb
popf
out
sbb
movsb
das
test
pop
or
mov
cld
imul
sub
shll
pop
jo
mov
xchg
pop
pop
mov
dec
mov
shlb
inc
call
imul
xchg
cwtl
xchg
or
fs
inc
sub
mov
sub
movsb
ficoml
or
bound
bound
dec
outsb
adc
mov
or
mov
add
mov
mov
mov
into
mov
pop
jle
and
xor
dec
repz
dec
mov
push
ret
insb
pop
movsl
pop
or
fbld
shlb
stos
mov
dec
xchg
push
jbe
les
xchg
xchg
inc
cmc
mov
data16
cld
xor
mov
ljmp
xor
pop
arpl
cmp
sahf
add
mov
add
loopne
shl
rolb
pop
pop
mov
imul
fdivr
mov
arpl
xchg
test
xchg
sub
bound
sbb
inc
cmp
inc
outsl
cmpxchg
aad
and
mov
arpl
fisttps
add
pusha
mov
sub
mov
and
xchg
fidivrl
or
push
jne
out
adc
mov
scas
call
popf
xor
enter
stos
cli
push
stc
pushf
in
movsb
dec
or
push
cwtl
and
mov
pusha
add
xor
jns
cmpsl
loope
fisttps
test
loopne
push
mov
add
mov
mov
lods
out
mov
xorl
dec
xchg
cld
and
sub
adcl
jns
xchg
pop
sub
push
arpl
jmp
and
imul
fsts
mov
xor
xor
ds
fistl
xchg
cmp
xor
sub
and
sub
es
sub
scas
adc
dec
xchg
dec
mov
add
inc
push
ret
fsubr
jbe
mov
stos
test
mov
lret
jae
cmp
cltd
cmpsb
pusha
inc
or
sub
add
sub
jo
inc
pop
jns
idivb
rcrb
test
lods
pushf
fmul
insb
cli
cmp
in
add
push
push
nop
add
fstl
filds
sbb
cmpsb
dec
push
cmpb
xchg
stos
inc
stos
into
mov
jg
xchg
pop
movsb
cmp
xchg
int3
lret
push
cltd
repz
test
push
push
ja
inc
sub
dec
flds
xchg
jp
mov
push
add
pop
adc
out
xor
push
adc
addb
sti
add
add
ljmp
fnsave
inc
xchg
mov
inc
cmpsl
dec
shl
xchg
repnz
pop
imul
leave
dec
sbb
shrl
add
test
inc
mov
inc
pop
sub
repz
mov
enter
jb
cmp
or
push
cmp
ret
adc
repnz
mov
and
mov
xorl
xor
sub
or
jbe
xchg
insl
pop
test
shl
mov
xchg
pop
cmp
ds
adc
shr
cmp
icebp
mov
or
mov
sub
mov
enter
loope
ret
mov
xor
inc
xchg
shl
add
cmp
jbe
lret
xchg
and
popf
cmp
xor
aas
jno
sarb
cld
shr
cltd
movsl
sub
aas
int
cmc
xor
jmp
addl
shll
xor
sti
dec
xorl
mov
adc
sti
sti
cltd
stc
push
rcrb
fldt
xor
sti
adc
mov
adc
movsb
jl
mov
adc
nop
jle
arpl
aas
inc
lds
inc
and
dec
push
bnd
movsl
hlt
pop
xchg
pop
cmp
jg
and
mov
leave
pop
inc
mov
inc
sbb
inc
push
shl
call
xchg
add
push
dec
outsl
add
dec
cmp
and
adc
inc
test
jl
mov
ret
push
test
xor
test
das
pop
mov
lods
xchg
sub
lods
lret
out
adc
and
adc
inc
cmp
xorl
sub
leave
mov
mov
inc
cmp
shrb
imul
xor
pop
mov
fldenv
mov
inc
dec
add
xchg
mov
mov
adc
insb
dec
lea
push
sbb
lods
ss
test
out
mov
mov
push
les
add
sbb
dec
or
ret
push
lock
and
mov
adc
push
ror
adc
test
push
mov
test
out
push
scas
out
mov
sub
vmovmskps
jb
push
dec
cmp
push
lods
cwtl
pop
leave
lock
xchg
nop
stos
mov
mov
push
test
aas
add
imul
push
jnp
cld
mov
daa
test
bswap
jb
mov
shl
scas
pop
sysenter
dec
pop
scas
add
js
xchg
add
jae
test
pop
mov
dec
xchg
mov
in
add
scas
das
sub
or
and
imul
push
xchg
nop
pop
std
movsl
and
push
cmp
test
pusha
std
cmp
movsb
into
hlt
scas
mov
arpl
pop
movb
addr16
mov
jae
divl
jno
inc
jnp
imul
fs
xor
fnstsw
inc
mov
xchg
leave
in
nop
inc
lret
or
leave
mov
imul
test
fcoms
jne
ret
sbbl
aam
xchg
mov
add
leave
sub
add
inc
sub
rolb
sbb
rorb
stc
inc
mov
mov
add
insb
mov
add
popf
inc
xor
jge
push
mov
pusha
jge
xor
sub
cmc
jo
mov
or
dec
mov
jmp
jno
jmp
add
sti
xchg
mov
fdivrs
xchg
mov
mov
ret
and
push
js
push
sbb
mov
cmp
aad
les
arpl
movsb
and
sarl
mov
lcall
add
xchg
loop
repnz
jmp
imul
xchg
and
and
push
xor
mov
cmp
std
dec
jmp
or
push
lret
and
inc
mov
data16
mov
in
mov
sahf
cmp
xor
fsubrs
std
out
orb
xchg
push
je
sub
xor
cmp
mov
or
leave
pop
dec
push
nop
rolb
pop
push
mov
and
xchg
aam
push
adc
test
cmpsb
in
cmp
ds
loop
push
mov
inc
inc
mov
shl
sbb
repnz
je
mov
test
jo
sub
dec
icebp
ret
repz
jae
mov
mov
fcmove
dec
test
ss
push
and
mov
sbb
push
in
shlb
loop
lret
xor
pop
rorl
jbe
push
jbe
addr16
sub
outsl
xor
xor
push
pushf
fnstcw
subl
mov
das
mov
cmp
xchg
mov
pusha
mov
arpl
push
pop
insl
aas
xchg
ficoms
movsb
fiadds
fidivrl
mov
mov
lcall
cltd
out
adc
cmp
inc
push
jbe
sbb
loop
push
xchg
dec
rcr
inc
imul
inc
dec
adc
dec
jns
adc
push
xor
xor
mov
addr16
lahf
punpckhdq
pop
cmp
in
clc
push
add
inc
add
sahf
popf
xchg
repz
adc
add
outsl
jb
outsb
jg
sbb
imull
pop
js
add
mov
int
in
mov
xor
clc
movsb
adc
cmp
add
outsl
xchg
push
cld
scas
cmp
les
adc
or
sbb
dec
ss
jl
sbb
fidivrl
call
or
fld
adc
gs
mov
inc
iret
aaa
jae
js
inc
jns
adcb
dec
inc
cli
ss
shll
stos
xor
cmp
add
pop
add
mov
cmp
inc
lods
ja
mov
fwait
cmp
aad
add
mov
adc
je
cmp
inc
lret
stc
mov
adc
inc
popw
add
pop
xor
int3
inc
lret
or
mov
js
ficompl
pop
repnz
popa
or
mov
sbb
insl
test
aad
cmpsl
sub
into
add
sahf
push
jecxz
sub
sub
mov
sub
ds
add
sbb
add
mov
or
cmp
int
mov
ds
pop
lea
add
aas
loop
mov
push
adc
mov
test
adc
or
xchg
enter
xor
fs
fildl
fs
lret
scas
mov
xchg
add
fnstcw
rcrb
outsb
repz
mov
push
test
mov
dec
mov
fidivl
or
sbb
mov
mov
xor
idivl
xchg
dec
xchg
mov
or
xchg
mov
test
pop
sbb
lea
inc
hlt
cmpsl
mov
pusha
or
ss
jae
fistpll
repz
jmp
or
sub
lret
rcrb
test
sti
adc
clc
gs
out
movsl
push
pop
test
mov
jecxz
xchg
mov
test
gs
ss
sahf
push
push
xor
je
lods
xchg
lea
ds
mov
push
or
cmp
inc
shr
ret
dec
mov
shl
pop
push
pop
dec
seto
jbe
xlat
xchg
in
jg
or
push
xchg
mov
pushl
mov
rol
sub
push
sub
push
imul
sub
mov
jb
bound
adc
fldcw
or
mov
and
xor
leave
mov
nop
mov
pop
loop
or
outsl
in
inc
repnz
ret
cmp
cli
add
push
shrb
mov
fadds
sub
push
decl
push
idivl
cmp
dec
cmp
jl
push
fidivrl
push
pushl
adcb
push
gs
mov
or
cmp
sbb
sti
imul
jne
test
fistps
cs
pop
loopne
sub
lahf
scas
and
imul
sti
dec
les
push
aad
mov
std
pop
sbb
pop
shrl
movsb
bound
ds
mov
or
aas
sarb
add
fcmovu
mov
insb
sti
push
imul
xor
ficoms
mov
inc
sbb
ds
outsl
or
push
cs
fs
enter
rcll
fidivs
jle
ljmp
lcall
mov
rol
sub
xchg
neg
push
xchg
or
cwtl
jl
notl
mov
xchg
adc
mov
mov
in
and
jecxz
icebp
dec
fdivs
ret
pushf
sbb
xchg
imul
or
xchg
or
xchg
mov
addb
imul
imul
push
xor
into
fstl
or
xlat
fidivl
std
out
insl
cs
or
mov
push
ret
dec
push
mov
clc
sbb
outsl
imul
add
jns
cmp
xchg
cmp
std
add
testl
loop
adc
push
aas
ss
movsl
or
out
aaa
and
and
stc
fcomps
cld
xchg
sti
inc
sub
mov
jnp
std
jle
int
pop
or
hlt
inc
xor
repz
and
and
iret
adc
inc
fimuls
cld
mov
mov
ds
fimuls
cmp
gs
ret
inc
dec
mov
ret
jae
ss
ljmp
stos
and
mov
jae
das
in
clc
bound
rcll
add
sbb
mov
cwtl
dec
scas
dec
ljmp
andl
dec
int3
fstps
push
or
or
cmp
jo
xor
inc
sbb
push
jnp
arpl
std
xchg
add
ljmp
ljmp
xor
jle
fadds
mov
ret
andl
ror
int
mov
test
test
sub
sub
jecxz
fidivs
repnz
cmp
xchg
mov
jnp
pop
imul
sbb
lret
outsl
adc
xor
cmp
mov
mov
loop
rcrb
ret
dec
ljmp
loopne
mov
lds
dec
add
push
aad
push
cmc
jmp
cmp
push
call
cmp
cmp
lea
and
in
ret
je
int
lcall
repnz
dec
icebp
jmp
jecxz
rcll
ljmp
jle
lret
mov
mov
xchg
inc
mov
ss
dec
loopne
test
ja
rcr
xchg
ret
cmp
daa
dec
mov
cli
xchg
sub
clc
or
das
cmp
dec
test
shll
mov
insl
call
out
loopne
mov
or
xchg
popa
xlat
orl
pop
xchg
and
mov
mov
xchg
stc
outsb
adc
loope
test
inc
mov
jb
test
aaa
test
sbb
cmp
mov
fs
sbb
add
scas
stc
rolb
xchg
or
dec
into
popf
mov
notl
cltd
pushf
dec
mov
xchg
xor
cmp
cmp
inc
xor
mov
dec
lock
jno
xor
mov
sub
mov
enter
push
ret
and
dec
je,pn
std
pop
shr
xchg
mov
pop
or
jne
in
mov
mov
add
mov
and
test
call
adc
xor
nop
xchg
outsl
jae
popf
sti
push
stos
cltd
mov
jno
xor
sbb
jno
sbb
aam
inc
dec
xor
mov
fidivs
xlat
icebp
mov
rcll
push
cmp
and
or
add
bound
xchg
sti
mov
mov
or
sbb
mov
loopne
lahf
ljmp
js
and
cmp
xchg
mov
fimuls
or
test
xchg
outsb
adc
mov
inc
push
outsl
jo
mov
push
pop
int
push
ret
pop
or
aam
inc
dec
clc
dec
scas
pop
xchg
lds
sarl
adc
xor
sub
pop
mov
cmpsl
pop
adc
pop
leave
jle
cmp
inc
cmp
stos
fwait
or
scas
inc
fists
cmp
pop
add
jge
xor
rcrb
pop
repz
call
add
xchg
jns
es
pusha
pop
lret
jp
pop
fidivrs
xchg
jnp
les
movsl
jns
into
cmpsl
mov
push
cmp
lods
scas
jnp
cmp
test
das
dec
or
add
rorb
push
out
dec
xchg
dec
xchg
out
bound
inc
push
mov
jmp
rclb
jbe
das
fucomp
call
data16
data16
repz
jecxz
xor
mov
and
pop
cmp
cld
lret
cs
pop
mov
add
outsb
inc
nop
aam
cmp
fsts
in
sub
dec
aas
and
mov
sbb
loope
mov
out
mov
das
sbb
int
mov
repnz
js
imul
rcpps
push
pop
dec
les
pop
add
push
and
mov
ljmp
outsb
mov
lahf
imul
pop
cmp
les
leave
mov
cmpsl
and
in
mov
out
fdivp
pop
lret
std
fmulp
mov
adc
push
or
jmp
or
cli
push
les
dec
sahf
push
inc
xchg
cmc
ss
int3
push
add
add
xchg
lcall
and
xchg
mov
stc
popf
mov
mov
jmp
jbe
sub
lock
test
push
fstpt
push
mov
sahf
pop
rcrl
call
cmpb
sbb
inc
inc
mov
int
je
int
arpl
cmp
or
pop
outsl
mov
nop
xor
out
mul
inc
je
or
test
push
sbb
xorl
or
out
cmc
jns
inc
xor
push
imul
sub
sub
mov
xor
fnstsw
iret
jmp
int3
pop
xchg
mov
stos
xchg
jge
andb
in
push
pop
out
mov
cli
into
mov
dec
clc
das
in
aam
hlt
arpl
mov
push
push
decl
push
mov
cmp
lods
imul
call
int
jbe
jne
jge
cmp
and
inc
jp
sub
lcall
bound
push
xchg
int
lahf
sub
jnp
jmp
scas
xor
scas
mov
jecxz
cmp
shlb
adc
hlt
xchg
mov
dec
adc
and
ljmp
lea
stos
testl
and
xchg
fistpll
clc
test
std
pop
jp
movsb
adc
mov
jle
add
das
in
xchg
test
jge
popf
push
xchg
les
push
jl
inc
stc
ret
negl
movsl
loopne
je
and
mov
xor
ljmp
imul
cmpb
and
aad
mov
jg
cmp
push
add
pop
ret
test
jo
sti
scas
std
gs
lods
ficoml
inc
mov
pop
and
cli
cld
inc
add
xor
mov
fildl
inc
push
sub
enter
mov
loop
loop
cmp
in
or
pop
sbb
xor
add
aam
popa
push
sub
loope
add
scas
ss
shll
imul
jo
xor
or
sahf
add
fnstenv
stc
xchg
loope
dec
movsl
jg
ljmp
jge
insb
movsb
faddl
test
sbb
nop
push
pop
fs
test
or
in
add
inc
add
cmpsl
inc
fdiv
mov
mov
stos
jp
add
fsubrl
sbb
sbb
mov
jnp
gs
cld
jnp,pt
aaa
popa
js
jns
dec
lret
sbb
push
mov
pusha
sub
loop
das
jbe
xchg
mov
inc
fstpl
out
push
sub
into
xchg
pop
mov
shrb
movsl
jae
pop
push
push
cmc
mov
negb
scas
mov
sahf
sub
mov
loop
lds
xchg
xchg
fsubrs
mov
jecxz
dec
in
adc
dec
int
cmp
lcall
cmp
cmp
fcompl
je
insl
aaa
push
arpl
jb
stos
jle
jmp
lcall
or
sub
out
add
cmpsb
xchg
lret
push
sub
lods
fwait
jle
mov
test
decl
push
out
icebp
stos
inc
stos
test
push
cwtl
cwtl
push
inc
mov
mov
sub
mov
sbb
xor
gs
push
xchg
outsl
fisubl
mov
andb
mov
push
bound
arpl
mov
jmp
in
xchg
inc
jecxz
mov
inc
fldcw
sub
popf
arpl
ucomiss
ret
imul
ja
fmul
pushf
push
mov
sbb
shl
stos
xchg
jp
or
xchg
or
fmuls
fs
ljmp
ljmp
or
pop
in
cmpl
dec
clc
icebp
fs
or
fs
jmp
sbb
lods
fdivrs
jmp
dec
inc
scas
mov
test
mov
stc
repnz
into
lret
and
push
int
cli
fisttpl
bound
cwtl
add
xchg
push
ss
out
loop
cmp
jb
push
bound
jmp
nop
inc
jle
rsm
or
in
int
inc
add
push
fimull
clc
push
ret
pop
subb
and
movsl
cmc
ret
cmp
xor
out
js
and
lahf
push
stc
xchg
sbb
scas
mov
or
shlb
lfs
adc
ja
imul
pop
mov
and
add
lret
xchg
sbb
xor
pop
push
fisubrs
imul
fs
xchg
xchg
inc
rorl
and
push
add
out
ret
fs
out
or
pop
pop
insl
add
nop
pop
xchg
out
or
inc
push
ret
js
je
js
mov
push
lea
adc
inc
and
xlat
pop
hlt
sub
mov
addr16
dec
mov
je
cli
cli
in
es
sahf
mov
mov
mov
test
pusha
repz
test
jbe
pop
rolb
push
xchg
sub
adcl
sub
sbb
and
adc
cmc
pop
or
sub
mov
ret
adc
add
add
iret
sbb
pushf
cmpsl
fbld
sub
pop
aad
pushf
in
pop
lahf
sti
sbb
in
in
aam
lock
pop
test
fdivrp
aaa
jb
add
xor
jge
outsl
aad
addr16
sarb
sub
shrb
xchg
or
out
daa
xor
aam
stos
rcl
inc
xor
xchg
or
das
cli
push
negb
jmp
cmp
mov
imul
lahf
mov
pop
mov
sbb
cmpsl
ljmp
mov
mov
les
push
rolb
cmp
sub
outsl
push
sbb
outsb
sbb
out
stc
fimull
mov
push
das
repnz
gs
jno
push
cli
cmpsb
mov
push
dec
mov
sub
ret
imul
cmp
testl
loope
adc
test
gs
jo
inc
inc
xlat
adc
aas
jecxz
mov
jp,pt
es
mov
cmpsb
jno
loope
xchg
mov
fldt
cmpsl
out
mov
popf
roll
in
sub
xchg
xchg
into
das
repnz
push
ljmp
fistl
sub
out
lds
pop
adc
test
arpl
fsubrl
xlat
dec
std
and
das
aam
dec
mov
jnp
sub
push
jbe
mov
push
jb
stos
push
push
push
test
or
mov
xor
adc
sarb
mov
mov
lea
push
enter
bound
fwait
add
cld
or
add
mov
scas
int3
ficoms
lds
insb
icebp
jbe
xchg
inc
stos
stos
ljmp
push
and
add
jnp
lods
jl
dec
out
adc
push
icebp
in
outsb
push
inc
and
pop
imul
xlat
xlat
xchg
mov
pop
test
mov
xchg
mov
ljmp
add
lcall
mov
ret
int3
stc
cmp
sbb
movsl
push
les
push
lret
push
hlt
dec
xchg
mov
mov
pushf
lods
push
not
lds
dec
out
and
fdivs
sbb
xchg
notb
cmp
aam
adc
pop
push
mov
sbb
push
test
xlat
mov
mov
push
call
dec
fisttps
rorl
shrb
lcall
inc
inc
or
mov
test
loopne
cmp
icebp
cmpsb
push
sbb
ror
dec
pusha
sub
xor
sbb
movsl
jp
add
int3
fstl
out
mov
inc
pop
fnstenv
lea
stos
xor
iret
sbb
xchg
and
stos
sarl
mov
and
sub
sahf
or
shrb
loop
mov
scas
bound
jns
into
cmp
mov
jmp
and
cltd
in
push
insb
mov
fisubs
sub
sti
shl
inc
sbb
add
aaa
jbe
cmp
xchg
and
fmul
mov
jmp
or
dec
das
xor
mov
test
jo
adc
lock
int3
clc
into
in
jp
fdivrl
je
add
and
ljmp
push
push
sahf
test
mov
movsl
push
sahf
testb
addr16
jbe
dec
out
xor
cmp
jns
jno
adc
adc
dec
jp
bound
test
sub
push
dec
cmp
rolb
jb
icebp
pop
inc
pop
mov
push
jbe
js
shll
sub
rcrb
movsl
jmp
addr16
es
in
xchg
cmp
cmpsl
inc
shlb
mov
mov
gs
pop
mov
gs
std
stc
out
mov
mov
mov
mov
push
inc
inc
sbb
push
in
mov
xor
pusha
adc
jne
call
daa
push
cli
out
dec
inc
cmpsb
jl
outsb
add
push
pusha
icebp
push
fisubl
cltd
lret
mov
mov
sbb
sti
add
sbb
out
imul
addb
inc
mov
pop
in
arpl
movsl
sbb
mov
xchg
aam
imul
lods
mov
or
mov
rcrb
xchg
pop
or
sub
pop
stc
mov
mov
bound
dec
adc
fnstenv
mov
cmp
mov
inc
push
mov
pop
imul
enter
loop
mov
jge
mov
pop
test
jmp
popf
mov
inc
aas
xchg
arpl
or
mov
push
jp
repz
fstp
jge
cmp
xchg
sti
out
add
and
adc
jae
imul
ret
outsl
mov
mov
jno
and
or
adc
out
sarb
ljmp
jnp
pop
mov
fyl2x
movsb
faddl
jb
mov
push
and
ljmp
ror
test
fadds
mov
sub
add
pop
movsb
sarb
cmp
xchg
inc
aaa
pop
adcl
xor
sub
push
es
loop
jmp
fmull
pop
jg
mov
in
icebp
or
pop
mov
pop
test
and
mulb
mov
call
xchg
xchg
xchg
jmp
shlb
mov
mov
lret
ficoml
outsb
push
inc
add
mov
cmp
push
in
imul
pop
js
pop
xchg
cltd
cmpb
cld
hlt
pop
aaa
add
ja
jle
mov
inc
mov
je
push
fstpt
cmp
xchg
enter
and
adc
dec
jae
arpl
enter
sahf
gs
sbb
mov
add
sahf
popf
insb
loopne
push
leave
mov
repnz
repz
mov
dec
or
push
cli
pop
repnz
fbld
icebp
ret
jp
dec
ret
sbb
in
sbb
imul
add
mov
sbb
fsubl
ja
mov
orl
sbb
dec
repnz
pop
xchg
sbb
fists
sub
add
cli
das
rcll
arpl
or
es
xchg
xor
push
push
inc
fwait
push
icebp
push
mov
imulb
fistl
jno
sbbb
neg
mov
cwtl
sub
and
cs
inc
scas
bound
jne
data16
aam
adc
xchg
mov
into
out
sbb
xor
jb
aaa
faddp
mov
aad
sub
arpl
push
add
mov
xchg
mov
xor
and
pop
push
xchg
push
out
bound
aaa
stos
xor
gs
add
scas
mov
push
or
fwait
pushl
imul
ljmp
int
push
fs
mov
add
mov
nop
arpl
mov
data16
stc
push
call
lods
add
fnstcw
and
push
xchg
inc
push
out
add
adc
daa
jns
shl
test
jmp
fldenv
hlt
in
in
xchg
push
jp
add
cmpsb
mov
mov
jmp
push
movsl
or
lods
stos
mov
xchg
ja
fidivrs
mov
cld
ljmp
inc
mov
leave
subb
and
push
lds
jg
adcb
mov
pushf
pop
inc
xchg
pop
and
or
or
out
ss
mov
out
sub
add
lret
loop
ret
icebp
xchg
push
popa
mov
orl
inc
and
loopne
repnz
data16
daa
mov
loope
dec
xor
clc
sub
push
add
push
fcom
jnp
inc
iret
mov
sahf
sub
push
jge
xchg
sub
enter
xor
cmp
pop
inc
dec
insl
add
jmp
bound
cmc
lds
add
mov
hlt
sbb
xchg
addr16
add
rcll
jmp
adc
cmp
insb
imul
mov
out
inc
mov
paddw
addl
pop
mov
xor
lret
jecxz
imul
mov
mov
scas
dec
inc
or
repz
lcall
popa
push
sub
jmp
cmpsb
popa
and
div
cmpsl
sbb
mov
in
pop
arpl
xor
arpl
jl
out
xlat
or
add
add
adc
hlt
subps
xor
dec
insb
icebp
clc
pushf
imul
in
pop
arpl
adc
xor
andl
mov
mov
out
loop
inc
add
loopne
mov
sbb
jno
jno
dec
add
loope
adc
into
pop
push
push
mov
fwait
pop
mov
mov
out
pop
je
shlb
in
xor
ret
mov
or
mov
test
jp
xor
xor
mov
jg
sub
dec
mov
leave
mov
pop
test
ljmp
inc
in
sub
xlat
mov
aad
cwtl
inc
mov
icebp
xor
popa
jae
popa
dec
xchg
xchg
pop
daa
lret
jo
xchg
sarb
rcrl
push
sub
outsb
testb
jbe
lcall
push
and
fistpll
inc
inc
jge
mov
into
mov
out
jbe
sahf
sub
shlb
icebp
imul
fdivrs
mov
mov
and
aam
inc
mov
and
ret
imul
mov
fsub
jecxz
pop
or
push
dec
jmp
xor
dec
dec
inc
cmpb
nop
jge
sbb
insl
lret
mov
lahf
sbb
cmp
andb
pop
jl
jmp
and
xor
int
aas
inc
mov
push
and
movsl
push
rorl
clc
daa
mov
push
sbb
pop
sbb
xor
and
cmp
pop
imul
xor
push
pop
dec
loop
and
nop
jbe
push
int
pop
xor
mov
shr
test
pop
mov
aam
xchg
sub
aaa
xor
jb
xchg
mov
cmc
in
fwait
and
pushf
jno
lea
mov
cmc
jae
scas
add
dec
push
jmp
sar
or
xchg
jg
out
andl
or
aad
pop
xchg
je
mov
sub
test
mov
or
scas
cltd
data16
shr
xlat
inc
les
inc
sub
ljmp
mov
loop
je
inc
rcll
fs
mov
push
inc
add
inc
pop
sub
sub
sbb
xor
xchg
mull
stos
cmp
cmp
adc
push
repnz
inc
loope
lods
inc
clc
mov
inc
mov
pop
call
enter
lret
xor
xorb
adc
cld
sbb
or
insl
adc
dec
ret
jmp
mov
dec
cli
jno
stos
dec
sti
leave
inc
fimull
pop
or
mov
xchg
cwtl
out
int3
jns
mov
dec
xor
inc
stos
adc
push
or
js
or
out
cmp
adc
mov
jo
mov
mov
sub
test
addr16
loope
add
lret
cmpl
and
insl
pushf
pop
in
xor
inc
sbb
xchg
fdecstp
lds
orl
test
sbb
inc
lahf
xor
jp
mov
add
nop
and
call
imul
push
lcall
aad
mov
idiv
cmp
xor
sub
sub
ud2
add
in
insl
cltd
sbb
push
mov
call
inc
popa
add
rcl
jl
mov
cmp
and
or
in
dec
dec
addb
enter
std
mov
cmpsb
sbb
pop
popa
inc
sar
cmpsb
sub
add
or
sbb
adc
push
and
pop
pop
out
sub
mov
gs
stos
jp
movsb
and
add
fwait
add
sbb
jb
and
dec
movaps
sbb
cld
mov
sbb
xchg
es
out
sarl
rcrl
fcmovnb
mov
lret
mov
jmp
dec
sbb
lods
iret
jbe
sub
movsb
mov
jg
inc
adc
test
inc
rcrb
push
lock
and
push
dec
push
pop
mov
stc
lret
push
mov
int3
cmpsl
sbb
idivb
jmp
nop
inc
es
outsb
insl
js
addr16
lock
jbe
adc
dec
lea
cmp
jl
lahf
mov
call
inc
push
xchg
xchg
mov
test
sahf
sti
push
movsb
into
imul
fisubrs
cmp
jae
or
cmpsb
jo
in
scas
xchg
jno
les
fldt
call
mov
adc
scas
or
aas
cmpsl
arpl
jno
loop
aas
or
push
aad
aad
fimull
mov
sbb
loope
mov
add
js
stos
jg
rolb
dec
ret
push
mov
fstpt
xchg
shrl
push
out
cli
jp
pusha
pop
add
jg
mulb
frstor
mov
icebp
in
pop
mov
iret
mov
lcall
push
sub
adc
hlt
add
pop
cli
xchg
jg
or
add
mov
add
in
xacquire
jmp
shlb
scas
cltd
imul
cmp
icebp
clc
iret
or
sbb
or
pop
or
xchg
stc
xlat
inc
icebp
mov
mov
jae
jb
dec
int3
cli
lcall
lret
push
and
cmp
xlat
dec
les
into
mov
dec
insb
mov
scas
cmc
mov
push
and
adc
and
jmp
pop
aas
nop
cmpsl
insl
lret
out
adc
lcall
outsb
add
enter
adc
incl
xchg
popa
cmp
mov
push
aad
stc
jbe
mov
or
out
es
xchg
lods
inc
add
xor
cmp
inc
dec
dec
js
lret
orb
aas
dec
inc
pusha
cmp
andl
rcrb
pop
mov
je
xchg
aaa
mov
and
or
movsb
lds
sub
and
xor
scas
enter
mov
or
push
push
les
cs
xor
and
pusha
imul
xchg
push
and
shll
cmpsl
lcall
pop
jecxz
cmp
sbb
jmp
out
sub
lret
cmp
ljmp
inc
jno
lret
jg
pop
push
stos
sbb
jp
fwait
dec
pop
mov
push
mov
jb
pop
push
cmp
push
jo
in
push
or
dec
and
sti
insl
pop
adc
rol
or
cmp
mov
pop
stos
mov
in
push
cmp
rol
adc
sti
sarl
mov
lret
fwait
movsb
pop
pop
pusha
push
adc
ret
fldt
or
sub
sbb
rcll
lcall
pop
mov
and
adc
pop
xchg
rclb
sbbl
lods
test
call
hlt
arpl
jle
push
add
fcoms
inc
call
lret
xor
js
cmp
sub
call
popa
mov
and
push
xchg
sub
add
xchg
sbb
insb
out
imul
mov
mov
cmc
test
mov
negb
inc
fimuls
pop
cmpsb
and
mov
jecxz
xchg
and
addr16
negl
push
pop
shl
pop
orb
dec
popa
leave
dec
fisttpll
jg
dec
stos
push
dec
lock
iret
mov
jnp
sarb
sub
dec
sbb
in
xchg
popa
pop
or
andb
inc
in
mov
psubq
mov
jo
inc
loope
adc
xor
push
add
sti
pusha
inc
cs
jmp
xchg
hlt
and
bnd
cmp
fisttpl
mov
cmpsb
fcompl
lock
in
xor
mov
xor
sub
inc
enter
sub
imul
nop
adc
cs
aad
idiv
jmp
iret
retw
sbb
repnz
in
mov
mov
dec
inc
sbb
xor
xchg
iret
sub
aas
jp
pop
jne
xchg
sahf
push
xor
in
mov
mov
out
pop
enter
cmp
fbstp
loop
ss
and
mov
cmp
cmp
adc
enter
repz
mov
and
xchg
xlat
loope
push
cli
xchg
inc
outsb
cmpsb
jmp
imul
nop
mov
setbe
les
pop
inc
movsl
fcoml
addr16
cmp
int3
shrb
add
gs
push
out
xchg
cmpsl
adc
mov
adc
orl
mov
stc
fistl
mov
jne
pop
fstps
or
lock
mov
imul
mov
int3
popw
inc
adc
cmp
outsl
sbb
xchg
push
push
and
or
push
movsb
pop
jl
subl
jmp
jl
mov
popf
or
xchg
mov
movb
call
stos
mov
stos
xchg
data16
mov
lods
popf
adc
into
mov
test
pop
push
call
mov
push
cwtl
xchg
cmp
setp
ja
push
and
or
test
push
cmc
or
pop
cli
lcall
and
or
push
in
cwtl
in
mov
or
in
cmc
dec
add
cmp
jl
or
or
hlt
std
pop
xchg
xchg
sbb
insb
jge
cwtl
fbstp
lock
repnz
test
or
fidivrl
mov
and
push
xchg
cld
fistpll
test
jo
inc
aad
mov
cwtl
push
vmovapd
pop
iret
neg
sbb
sub
and
cmpsl
into
pusha
jp
int3
jne
fmuls
cmp
fcmovb
sarl
jne
repnz
adc
or
int
or
dec
adc
jae
sub
dec
stc
lock
enter
inc
andl
test
loope
mov
lret
imul
test
enter
test
push
xor
sbb
mov
popa
popf
push
mov
jmp
dec
std
xor
and
pop
adcl
repnz
lock
outsl
ja
adc
popa
cwtl
xchg
and
mov
jle
orb
scas
jge
dec
lea
test
or
ds
xchg
fldenv
int3
aaa
cmpsb
mov
cwtl
xor
jne
ffreep
xor
sbb
sbb
lea
shrl
lods
div
and
in
jle
adc
pop
sub
or
push
stos
add
mov
leave
mov
inc
inc
push
push
and
inc
fildl
mov
inc
jp
add
mov
stos
sbb
je
arpl
aas
lret
xchg
cmp
xchg
js
pop
pop
test
nop
xchg
out
mov
xchg
jecxz
out
mov
stc
fdivl
add
mov
out
dec
std
pop
push
push
insl
sbb
push
mov
add
mov
out
adc
testl
push
icebp
mov
xor
sub
lahf
mov
pop
jecxz
mov
push
es
iret
inc
add
imul
xchg
add
incb
divl
adc
cwtl
jp
add
cmp
cmp
xlat
and
mov
push
inc
icebp
ds
dec
lock
mov
fstpl
xchg
sahf
sbb
jmp
sub
push
mov
div
or
xchg
cmp
jae
cmp
js
out
insb
xchg
in
mov
and
leave
sbb
adc
xchg
xchg
push
repz
test
and
xchg
rcrl
or
outsb
xor
xchg
pop
mov
pop
data16
push
cltd
dec
push
data16
push
pop
lret
mov
stos
push
ljmp
mov
and
mov
es
dec
cld
sbb
push
and
mov
fbld
pop
pop
shll
inc
xorb
cld
inc
adc
jmp
fstps
movsl
or
testb
or
es
cwtl
adc
mov
outsb
inc
testb
pop
pop
movl
nop
cmpsb
decb
pop
and
hlt
push
inc
out
stos
jnp
dec
add
fildll
pushl
xchg
rcll
mov
or
sub
nop
je
subl
shlb
test
sub
das
pop
ja
aad
and
sti
mov
nop
sbb
pop
mov
and
xor
mov
jbe
and
jae
dec
out
fcoml
or
in
cmp
sub
jmp
mov
leave
mov
inc
xor
cld
jp
cmc
dec
outsl
cmp
sbb
int
or
push
insl
cmp
mov
adc
mov
and
lds
adc
aad
repnz
adc
popa
push
lret
ds
mov
sbb
decb
xchg
adc
into
icebp
imul
xchg
aas
movsb
or
mov
les
sbb
insb
mov
xor
mov
xor
jae
mov
cmpsb
clc
outsb
or
ds
jmp
addb
bound
arpl
mov
adc
xor
loop
into
pop
mov
xchg
lret
mov
bound
ret
push
mov
adc
mov
pop
jnp
arpl
dec
sti
leave
mov
pushf
cli
adc
or
mov
fcmovu
aaa
mov
ds
ret
inc
lds
cltd
lret
mov
lds
jg
or
adc
out
leave
mov
je
pop
repz
dec
rorl
pop
out
out
inc
cmpsl
test
sub
mov
inc
xchg
sbbb
scas
loopne
xchg
cmp
inc
ljmp
mov
mov
add
sbb
mov
jge
scas
fimull
xor
out
xor
cmp
mov
push
sub
clc
fstps
into
cmpsb
cmp
xchg
test
mov
sahf
pop
imul
pop
adc
adc
dec
add
dec
xchg
jo
inc
insb
mov
lds
sub
mov
arpl
sub
in
or
test
pop
mov
dec
sub
mov
fcoms
sti
lcall
xor
mov
stos
inc
imul
outsl
icebp
cmp
stos
fisubl
xchg
in
jae
jl
cmc
ret
leave
in
out
jecxz
cltd
sbbl
jno
fisubrs
jecxz
movsl
jnp
push
hlt
pop
repnz
in
pop
scas
sarb
mull
xor
sarb
stc
cmp
cld
mov
pop
dec
pop
add
into
adc
fldcw
cli
fwait
leave
ds
xor
cli
jns
call
or
and
sbb
nop
xchg
mov
les
fdivrs
icebp
pusha
popf
push
lock
pop
pop
jae
add
push
in
inc
enter
shl
fs
and
dec
cmp
int
add
sub
addr16
lock
enter
shrb
notb
xchg
sbb
cmp
test
mov
lahf
out
fcmove
mov
int3
push
add
stos
sbb
dec
aad
pop
in
out
xor
xchg
js
jmp
xchg
cmp
push
sahf
aad
fdivr
pop
pop
mov
jne
and
xchg
icebp
or
nop
pop
dec
fmuls
leave
cmp
pop
inc
cmc
scas
ja
in
les
xchg
dec
xchg
loopne
stos
pop
jecxz
push
stc
mov
pop
xor
jecxz
dec
sub
lea
push
jns
leave
jp
inc
data16
inc
push
jge
mov
fimuls
inc
scas
xchg
or
push
sbb
jo
push
cmp
fisttps
or
sub
std
push
cmp
push
js
jp
sbb
jge
push
es
push
test
pop
add
add
negl
add
cld
ss
daa
sub
cmc
movsl
and
orb
stc
ja
push
jno
xchg
lods
dec
cmpsb
and
out
fsub
xchg
popa
js
xor
out
inc
je
mov
lret
addb
mov
inc
cmpsb
lret
jmp
xchg
jno
and
xor
mov
and
fadds
fs
add
scas
xor
stc
adc
lds
int3
lock
bound
or
jge
insl
xchg
push
dec
xchg
xchg
lds
sar
mov
js
lock
cmpb
and
mov
add
clc
sub
das
stc
mov
addr16
cmp
rcll
lds
xor
cmp
into
int
cmp
negl
shrb
in
push
insb
push
jle
std
jb
out
xchg
or
push
test
ljmp
es
aam
push
jp
jns
inc
call
outsb
icebp
popf
repz
movsb
ja
ss
js
test
jge
fsubp
dec
dec
repz
push
mov
stc
mov
xchg
pop
in
movsl
mov
inc
int
mov
imul
sub
in
xchg
push
or
adc
or
xchg
in
in
mov
sbb
jb
jbe
imul
xlat
repnz
imul
or
int
imul
cli
sub
loopne
mov
mov
sub
mov
cmpb
repz
mov
imul
lret
mov
jmp
mov
popf
xchg
xor
sbb
js
push
in
fimull
jle
mov
jo
imul
rorb
adc
dec
fistpl
push
and
std
es
push
pusha
stc
sbb
out
stc
dec
xor
std
insb
insl
xor
cs
push
enter
in
in
das
aam
test
in
sub
shlb
push
pop
sbb
subl
cmp
jge
cmp
loopne
test
addr16
movsb
nop
or
fdivrs
inc
push
adc
loopne
xor
mov
gs
xor
jae
outsl
gs
data16
and
lods
data16
fsubs
xchg
xchg
rorl
ljmp
xchg
jp
xchg
cld
and
je
lods
dec
scas
mov
test
rorb
in
mov
orb
jp
mov
aas
insl
pop
and
sub
sbb
call
fdiv
mov
jno
daa
push
cld
in
movsl
xchg
mov
jle
xor
or
push
and
stos
scas
inc
xor
xor
sub
xchg
push
and
hlt
jmp
add
jecxz
or
pop
mov
pop
sub
sub
cmp
dec
sbb
xchg
push
or
ljmp
es
popf
insb
les
sub
cli
lods
push
pop
movb
es
aam
mov
pop
in
shll
cmpsl
mov
decb
rcll
xchg
mov
fbstp
in
dec
pop
int3
imul
jae
leave
pop
pop
call
outsl
ja
mov
cmpb
dec
xorb
pop
jo
nop
inc
sub
pop
movsb
fiaddl
jmp
xorb
push
ret
pop
dec
testl
lock
xchg
pop
iret
or
loope
push
rclb
out
daa
mov
fwait
inc
push
shlb
inc
xor
aaa
or
shll
sub
fidivs
inc
in
mov
or
jge
fsub
adc
add
popa
mov
ss
sarl
mov
sub
ds
and
jb
stc
out
inc
jmp
mov
jb
dec
pop
adc
pop
dec
mov
scas
cmpsb
icebp
adc
cmp
pop
adc
push
pop
lods
lds
shll
xchg
stos
and
cs
cmp
test
pop
icebp
std
pop
sub
jnp
daa
into
lock
cmp
add
hlt
shrl
stc
das
rorl
sbb
lret
scas
dec
sub
hlt
sub
sbb
jp
adc
stos
cwtl
mov
scas
cld
push
jge
lods
iret
pop
nop
xchg
not
stos
dec
push
pop
sbb
repnz
sub
sbb
jnp
aas
inc
or
mov
repz
call
or
mov
pop
nop
repnz
inc
push
ret
cltd
push
icebp
and
pop
xchg
pop
scas
out
cmc
cmc
jg
jae
insb
js
mov
test
add
cmp
jp
add
icebp
sbb
js
cs
dec
pop
cld
repz
sbb
fsubs
loop
test
lock
and
orl
std
stos
movsl
cmp
lcall
xor
dec
sbb
out
mov
mov
adc
divb
mov
stc
adc
das
ret
dec
dec
ljmp
dec
add
dec
xor
stc
cmpsb
test
jg
stos
push
xor
or
cmp
rorl
fadds
sub
sbb
mov
cmp
stos
nop
rorb
scas
es
icebp
mov
ret
fcomps
insl
aad
dec
dec
inc
push
sarb
decb
jno
aam
sti
push
pop
ss
int3
in
mov
pop
jp
in
or
push
outsb
into
in
add
test
roll
fisttpll
aam
pop
hlt
outsb
inc
iret
and
hlt
xchg
icebp
add
iret
loope
mov
cmc
mov
cmpb
jle
int3
lea
adc
xchg
adc
mov
or
mov
dec
lods
jge
sub
push
jae
call
outsb
dec
xor
cltd
add
xchg
pop
insl
xchg
push
mov
mov
or
sbb
xchg
jo
xchg
clc
subb
mov
jg
pop
mov
pop
sti
stos
fwait
sub
inc
mov
push
mov
fisubl
insb
inc
fdivrs
mov
dec
rcll
stos
xor
outsb
sbb
adc
jg
cltd
jne
fidivl
sbb
xor
shll
pop
cmpl
push
or
in
xchg
jbe
or
leave
and
cmp
in
inc
and
imull
add
das
fsub
push
add
inc
cmp
lods
das
and
bound
mov
mov
fwait
push
ja
aas
or
mov
fsubr
mov
push
pop
or
mov
aas
pusha
or
inc
jle
in
das
ljmp
inc
lret
in
lods
and
daa
jbe
jns
je
fwait
in
mov
out
or
sbb
cld
les
movsb
pusha
mov
mov
jmp
clc
and
cmpsl
adc
scas
ret
sti
cs
sbb
stos
mov
push
out
push
jb
int3
add
sbb
aam
sub
lahf
js
mov
ljmp
es
cmpsb
add
or
xchg
stc
je
out
call
int3
je
movsb
aad
repz
lock
nop
xchg
fadds
or
shll
ljmp
jno
mov
push
sub
mov
mov
repnz
and
stos
sbb
lahf
sbb
push
outsb
jno
mov
lret
std
lcall
repnz
dec
push
xchg
pop
dec
pushf
scas
xor
inc
sbbl
aas
mov
jo
adc
adc
loope
imul
jle
mull
xor
dec
push
cmp
pushf
outsb
addb
scas
pop
std
pop
sahf
mov
add
inc
xor
pop
push
xor
cmp
mov
sub
push
leave
push
xor
mov
int3
adc
jl
addr16
sbb
xor
push
xor
nop
decb
mov
mov
jecxz
outsl
cmp
and
adc
imul
dec
sub
inc
sbb
test
loopne
ret
sub
gs
push
push
std
pop
lret
in
xor
inc
pop
movsb
iret
add
gs
push
cltd
jge
cmp
imul
aad
mov
decb
std
and
mov
or
rcll
mov
cmpsl
out
adc
push
add
aad
fnstenv
inc
jae
aas
ljmp
mov
jns
aas
xchg
dec
sub
dec
cmp
pop
push
stos
jge
movsl
or
jo
andl
cmpsb
outsl
int
test
jle
push
addr16
pop
dec
stc
out
dec
out
cmp
fdivrl
aaa
arpl
push
repnz
mov
aad
and
push
xchg
fisttpl
inc
cmc
inc
stc
push
dec
push
pop
fs
sub
jecxz
cmpsl
loopne
sbb
movsl
dec
push
repnz
ja
push
lea
icebp
cmpsb
call
test
jle
sbb
mov
lfs
imul
xor
cld
fwait
xchg
sbb
xor
add
pop
movsl
inc
xchg
xorb
push
push
lea
pusha
mov
sbb
ror
pop
cmp
pushf
mov
xor
xor
scas
cmp
nop
jge
pushf
jo
lahf
sub
pop
cltd
mov
int3
jnp
push
sub
xor
ret
int
xchg
mov
aaa
mov
inc
cmp
dec
test
pop
bound
in
or
mov
movsl
or
mov
pop
jmp
in
insb
outsl
push
fs
dec
or
dec
push
stc
xchg
test
or
icebp
mov
leave
and
adc
ds
pop
icebp
lret
gs
or
ljmp
lock
push
adc
pushf
mov
sti
add
add
mov
cltd
inc
ret
jg
lds
xchg
push
jno
and
mov
aas
call
es
fs
mov
inc
inc
add
jl
ds
inc
addb
and
lret
mov
sub
xor
ljmp
adc
mov
push
bound
sub
outsl
aaa
in
cli
aad
mov
push
jnp
mov
xor
popa
lret
xor
into
aaa
xor
jnp
clc
cmpsb
inc
movsl
inc
pop
cmp
sub
pop
out
cs
fadds
daa
jno
imul
lret
ret
mov
mov
in
cmpsb
jecxz
mov
scas
adc
dec
fistps
mov
mov
movsl
aam
inc
dec
in
mov
push
das
pop
xor
test
inc
loop
fsubp
mov
bound
outsl
mov
mov
call
fildll
ret
cmp
xchg
imul
sbb
push
lret
pop
sbb
xor
jnp
mov
int3
mov
in
cmpsl
or
adc
xor
jne
in
xor
rorl
cltd
pop
cmp
hlt
jae
sub
adc
dec
jge
mov
or
add
push
repz
scas
xchg
ret
rcr
lock
cltd
divl
shrl
mov
out
cmp
sub
dec
ret
pop
cs
jle
push
ss
or
popa
xchg
outsb
sti
adc
shrb
stos
jmp
popa
or
outsb
inc
xchg
mov
push
out
pop
mov
nopl
loop
stc
add
mov
int
mov
dec
loope
mov
mov
in
ds
cs
psubsb
inc
mov
jns
mov
insl
pop
icebp
pop
lock
ds
push
sub
bound
movsb
mov
hlt
pushf
scas
and
pop
jl
lods
lahf
popa
test
in
xlat
cmp
gs
jno
hlt
cmp
cmc
loopne
and
movsl
fildll
rcrb
inc
mov
mov
dec
sub
mov
out
das
lock
outsl
and
fstl
jae
jge
adc
fcomps
jno
testb
xchg
inc
and
push
loop
push
popf
rorb
push
rorb
mov
mov
sub
lock
pop
xchg
mov
sub
cmpl
in
ret
adc
mov
stc
and
xor
cmp
sahf
pop
ror
sahf
flds
sub
inc
sub
into
or
adc
push
hlt
pop
ds
inc
cmc
fs
inc
pop
sti
jle
xchg
xchg
xchg
out
lahf
lcall
test
xor
xchg
repnz
cmp
inc
or
test
fsubp
sgdtl
cmp
xor
mov
int
stc
lods
dec
dec
sbb
mov
pop
ja
inc
cmp
mov
gs
mov
push
pop
cmpl
aam
mov
pop
cmpsl
push
mov
lods
xor
xchg
lret
add
in
sub
mov
inc
jnp
decb
aam
aad
ss
ljmp
jb
or
mov
lret
into
mov
jbe
jge
pop
dec
adc
cmpb
lret
mov
je
sub
ja
xchg
outsb
sub
and
jmp
adcl
in
repz
sbb
stos
jnp
lahf
clc
cmp
idiv
xchg
aas
mov
daa
lds
leave
imul
repnz
cltd
or
push
mov
jb
aaa
adc
daa
sarb
lods
jle
loopw
imul
dec
inc
jge
lock
xor
loop
shlb
and
fbld
fldlg2
mov
pop
dec
mov
movsb
mov
and
hlt
cmp
outsb
sbb
mov
xorl
mov
and
out
jmp
bnd
scas
scas
ret
imul
notl
mov
fucomi
shrl
ja
notl
ficompl
imul
movsb
iret
ror
mov
call
shll
mov
pop
sub
cmp
fldl
adc
arpl
or
out
mov
es
jno,pt
test
and
cld
jmp
push
sahf
call
pop
shlb
mov
cmp
mov
adc
xchg
mov
xchg
js
lcall
addb
lret
jo
dec
sti
fcmovne
add
stos
enter
or
push
push
hlt
xor
neg
decb
out
addr16
rol
sub
mov
test
rcrb
imul
inc
hlt
loopne
dec
jge
pusha
mov
cmp
je
xchg
mov
cwtl
addl
cmp
in
aam
loope
gs
test
xlat
leave
js
repz
jle
xor
sub
xchg
dec
or
or
stos
mov
push
jbe
cmpsb
add
xorl
fcompl
mov
fxch
lods
and
jp
push
sbb
mov
imul
cmp
movsl
loop
sarl
mov
mov
sub
imul
cmc
mov
popa
lea
xchg
in
or
inc
mov
mov
mov
loopne
ds
ds
sbb
sahf
push
pop
iret
push
leave
outsl
cmp
mov
imul
test
dec
lahf
dec
dec
inc
mov
inc
pusha
push
mov
nop
cltd
dec
mov
loopne
push
mov
rol
and
loop
sbb
cmp
nop
lock
sub
in
test
add
aam
adcb
inc
sub
mov
and
repz
fisubl
loope
xchg
push
out
jmp
push
mov
cmp
fwait
lahf
adc
mov
and
dec
and
pusha
push
inc
divb
pop
lahf
and
out
frstor
jg
cmp
es
fcoms
sbb
enter
cmpl
push
fists
loope
aam
cmpsl
aam
outsb
lock
dec
mov
push
mul
dec
daa
lods
mov
adc
add
imul
jbe
pop
xchg
jae
mov
dec
aas
pop
cmp
mov
sahf
cmpsl
stos
sahf
pop
icebp
mov
popa
inc
sub
sub
mov
movsl
addl
cli
or
jno
add
stos
test
add
lahf
adc
add
push
mov
out
xchg
test
xchg
dec
cmp
cmp
mov
jnp
mov
mov
mov
test
cli
lods
subl
pushf
sub
movsb
xor
fcoms
adc
xor
fxch
sub
xchg
cwtl
jns
xchg
scas
frstor
mov
sub
std
sub
push
push
ss
mov
fdivl
dec
xor
mov
imul
pop
movsl
jmp
jbe
jecxz
pop
test
call
push
outsl
inc
xchg
out
call
mov
sbb
adc
cli
jne
pop
and
adc
pop
jae
mov
pop
popf
jp
jo
aam
mov
push
in
pop
test
gs
ljmp
mov
push
jbe
push
insl
mov
add
pushf
enter
mov
test
and
test
sti
out
fisubs
cmpsb
ja
or
and
sbb
xorb
and
repnz
jo
sarb
xchg
inc
stc
xor
leave
jmp
add
popf
or
and
add
xor
pop
popf
xor
mov
cmp
aad
in
push
das
jl
xor
or
jecxz
and
mov
mov
or
pop
cmpsb
lock
sahf
add
in
es
push
filds
mov
cltd
pop
testl
xor
sahf
or
inc
in
sub
inc
xchg
xor
dec
adc
cld
mov
roll
repnz
lock
sub
aas
ror
jl
dec
push
and
daa
fdivrs
out
jb
aad
cmpsl
jecxz
mov
mov
pop
dec
push
ja
add
ror
jns
sbb
mov
outsb
ret
sbb
aas
jg
or
fisubl
pop
outsl
xlat
cwtl
stos
jb
data16
dec
test
or
aas
fists
hlt
loopne
mov
imul
int
xor
push
inc
ss
lea
es
push
int
pop
sbb
repz
cmp
dec
pop
nop
js
lret
mov
daa
and
xor
jne
insl
js
repz
sbb
sarl
test
push
mov
adc
in
cmp
xchg
test
mov
jns
scas
fwait
gs
mov
inc
stc
sbbl
out
not
cmp
jge
in
iret
pop
jo
mov
mov
xor
mul
mov
jo
cld
pop
fcoms
push
aas
int
out
add
movsl
je
pop
sahf
cmp
jb
test
jne
aas
in
adc
mov
adc
mov
mov
xor
dec
dec
test
aas
testb
sbb
add
adc
sub
loope
out
call
cmp
mov
push
jge
push
inc
cmp
movsb
push
mov
pop
and
insb
pop
dec
dec
repz
dec
or
cmp
sbb
fdivl
add
mov
icebp
stc
adc
lods
outsl
fsub
xor
xchg
lds
pop
dec
js
cld
xor
mov
xlat
dec
jle
jl
dec
or
pop
sbb
cmp
cli
dec
das
xchg
aas
outsl
jnp
cld
cwtl
or
cs
imul
inc
and
sub
mov
dec
loope
add
mov
dec
cmc
mov
shrb
jmp
sub
jae
jg
out
pop
xor
xchg
imul
and
imul
xor
cs
sarl
adc
add
and
cmp
sub
adc
stos
xor
add
pop
mov
sahf
popa
insl
movl
jb
fidivl
nop
jae
mov
cmpsl
mov
ds
mov
test
xor
add
xchg
xchg
push
xchg
fimuls
jo
push
mov
repnz
sbb
aad
adc
fistl
inc
clc
dec
fildll
fiaddl
sbb
pop
and
cmp
xchg
imul
lods
mov
mov
lea
test
test
arpl
jno
jno
fnstenv
jno
jb
push
mov
aam
adc
xchg
sbbb
jle
push
sbb
push
inc
movaps
adc
mov
xchg
or
push
movsb
mov
adc
dec
scas
inc
test
mov
sub
jge
xlat
mov
ret
in
jb
pop
stos
ret
fdivrp
pop
jns
jbe
mov
lret
cmovns
into
pop
mov
stos
fbld
les
pop
pop
push
dec
inc
repz
inc
jae,pt
out
popfw
pop
xor
fdivs
jae
push
ljmp
pop
mov
xchg
lods
test
mov
movb
outsl
adc
call
push
xor
nop
inc
jmp
lods
push
cwtl
inc
movsl
push
sbb
push
inc
jmp
fstl
lret
movsl
leave
lahf
adc
insb
and
sbb
mov
mov
rcrb
push
testl
inc
shlb
xchg
in
inc
add
pop
iret
xlat
scas
sbb
cmp
jle
jb
leave
test
fnsave
test
shrl
stc
xor
mov
dec
pop
fistpl
loope
or
dec
int3
faddl
cmp
xor
push
xlat
jnp
mov
push
push
shrl
scas
cmp
and
xor
xchg
outsb
jnp
mov
andb
xchg
test
repnz
xor
mov
out
mov
cli
test
push
adc
pusha
jecxz
push
xor
jne
mov
mov
xchg
sub
loopne
cli
cmp
clc
mov
and
aas
sbb
cmp
add
xchg
adc
jge
add
js
xchg
gs
out
xchg
es
aam
movsl
and
cmpsl
jnp
and
pop
sub
nop
mov
mov
repnz
scas
inc
mov
test
icebp
mov
jo
pop
ss
xor
jae
xchg
inc
add
mov
sarl
pshufw
adc
jge
test
sub
shl
mov
test
fs
dec
cltd
bound
loop
sub
les
cmp
inc
mov
movsl
cwtl
lds
cmp
cltd
and
push
add
js
and
add
unpckhps
xor
aam
mov
ret
call
mov
fsubrs
sub
sbb
aam
aaa
test
xlat
dec
add
jnp
mov
les
fimuls
cltd
sub
cmpsl
pop
sub
les
mov
or
push
pop
dec
dec
stc
cmp
mov
jo
add
dec
adc
les
cmpsl
pushf
orb
fmuls
sbb
ja
mov
loope
cs
mov
rcrl
into
pop
shlb
jo
jl
jnp
call
mov
jmp
push
cmp
sahf
mov
cmp
jns
xchg
xor
mov
and
aad
das
pop
lds
lcall
dec
bound
in
sub
jbe
bswap
cmpsb
mov
outsb
xor
add
movsb
fdiv
dec
dec
testl
cmp
aaa
rclb
hlt
mov
push
push
daa
inc
pusha
cwtl
mov
inc
fbld
sub
mov
insl
dec
sbb
and
and
mov
or
fisttps
movlps
adc
inc
cmpsb
imul
jge
movsb
shrb
cmpsl
push
loop
pop
js
aad
xor
addr16
pop
sub
or
xor
cmpsb
shrl
inc
mov
pop
mov
call
push
lcall
hlt
aas
jo
and
clc
push
lret
and
mov
add
xchg
mov
mov
push
nop
call
outsb
jp
xor
add
in
cmp
addr16
adc
movb
pmaxub
gs
inc
fwait
hlt
cli
dec
push
test
dec
push
or
mov
popa
push
ret
pop
sub
cmp
inc
les
pusha
icebp
leave
xor
push
frstor
nop
mov
test
fstp
stc
cltd
ljmp
cli
sbb
mov
xchg
dec
mov
fildl
int
je
aad
mov
inc
insb
and
and
jmp
and
mov
and
je
pop
sub
fs
dec
popf
enter
fsubl
iret
pushf
sbb
std
pusha
imul
push
into
out
jb
rcll
push
test
pop
and
movl
dec
test
mov
cmpsb
mov
ret
inc
inc
add
fmull
mov
jl
pop
rsqrtps
ret
pop
repz
and
shrb
pop
iret
xor
sub
push
add
mov
aad
sub
push
test
cli
lret
leave
xchg
cmp
stos
push
addr16
xor
mov
mov
or
inc
scas
loope
cli
jne
int
lods
ret
sbbb
aam
xor
in
pop
mov
inc
sbb
js
dec
negb
cmp
addr16
cltd
sahf
in
pop
hlt
sub
sub
je
ljmp
stc
daa
bound
stc
into
notl
inc
cmp
sub
aas
pop
sti
dec
cli
daa
inc
dec
pushf
xchg
mov
jecxz
icebp
mov
mov
adc
roll
out
push
test
jmp
add
cmp
and
fcmovnb
dec
scas
inc
or
cmp
pushf
cmp
pop
sub
data16
push
adc
jbe
pop
std
mov
sbb
hlt
aaa
pusha
xchg
cmpsb
push
lods
roll
mov
jne
and
or
add
adc
mov
jecxz
rcrl
sbb
xor
push
adc
das
fnstcw
push
inc
jo
outsb
das
shrb
ja
lea
mov
push
or
mov
dec
cmpsl
ss
mov
adc
jb
sub
sub
adc
mov
cmpxchg
adc
pop
mov
mov
dec
mov
mov
and
into
call
call
into
dec
test
cmp
scas
int
cmp
xchg
pop
lods
push
xor
xor
mov
call
inc
cld
sahf
cmpsl
adc
and
mov
xor
sti
mov
mov
scas
call
cmp
scas
test
cld
sbb
and
cmp
push
test
dec
lahf
ds
std
fidivl
dec
dec
mov
xor
rcll
jl
and
mov
adc
scas
push
cmp
inc
push
ja
iret
lods
mov
push
mov
mov
pop
insl
pop
inc
enter
sub
and
push
or
add
mov
cmpsb
imul
inc
jo
xlat
mov
pushf
mov
pushf
pop
pop
inc
pop
pop
and
stc
mov
in
negl
inc
xlat
jbe
rcrl
mov
ljmp
cmpsl
xor
sbb
lock
fldl
pop
ds
pop
movsb
xchg
xchg
xchg
sti
and
dec
test
inc
dec
int
mov
iretw
xchg
call
or
sub
mov
jge
cmp
shrl
mov
xchg
cmp
imul
dec
sbb
imull
jecxz
or
scas
jnp
and
cmp
jp
test
roll
in
add
imul
fs
cmc
xchg
popf
mov
push
testb
xchg
ret
ucomiss
popa
fisubs
push
addr16
lret
xor
dec
fdivl
outsl
adc
and
dec
ljmp
stos
jbe
push
movups
test
xchg
cmp
mov
clc
xor
lea
test
fcmovne
or
push
inc
js
push
icebp
cmp
or
or
pop
sub
aad
fsubrs
rol
loopne
adc
clc
mov
sub
jo
xor
stc
loop
xor
in
mov
lock
in
sub
gs
jge
adc
scas
popa
fldl
pushf
out
stos
in
or
mov
jne
arpl
pop
push
stos
cmp
mov
and
pop
popl
pushf
aas
popf
sbb
fistpl
lahf
dec
popf
cmp
insl
sar
into
lahf
mov
jecxz
arpl
addr16
cld
and
or
xchg
jl
cld
and
insb
sub
sbb
pop
mov
mov
out
push
ss
add
inc
xchg
data16
in
cmc
pusha
loope
addr16
lcall
ret
mov
push
mov
mov
stc
ret
out
pop
sbb
aas
add
mov
mov
jle
shl
fs
or
pop
or
push
lods
or
sbb
dec
loope
sarb
push
mov
cmp
jle
or
and
xchg
addr16
push
pop
pushf
xor
int3
xorl
push
inc
xchg
int3
and
or
cmpsb
pop
mov
sbbl
ds
pop
jns
cmp
out
arpl
lret
xor
fcomps
inc
xor
push
mov
xchg
cltd
xchg
hlt
dec
inc
mov
inc
fsts
sbbl
mov
loope
inc
mov
rcll
repz
outsb
repnz
lcall
imul
loope
jns
jl
xor
xor
mov
outsl
inc
andb
jo
xchg
in
fdivs
setnp
mov
push
pop
pop
mov
sub
push
mov
pusha
insl
jp
fsubrs
and
add
mov
bound
aam
call
das
outsb
add
out
mov
pop
ret
lcall
cltd
mov
mulb
notb
add
mov
xorb
mov
ret
cmc
insl
mov
ss
jg
pop
mov
mov
cmp
in
jnp
enter
sbb
ss
aas
and
pop
mov
mov
aam
aad
out
xchg
movsl
mov
dec
popf
xchg
jb
addr16
sbb
rcll
in
cmp
ficoms
mov
ja
pop
arpl
aaa
scas
mov
icebp
dec
ljmp
fs
out
adc
ret
roll
dec
add
lret
out
mov
adc
jg
sarl
sub
icebp
out
addr16
mov
leave
gs
or
dec
pop
mov
fsubrl
inc
aas
lods
xchg
lods
stos
dec
pop
or
push
mov
sbb
xchg
jnp
test
out
jnp
mov
mov
xchg
dec
in
scas
pop
mov
mov
xchg
fwait
ds
daa
cmp
je
out
inc
jnp
push
loop
jns
jmp
lea
and
addr16
bswap
jo
ret
pushf
xchg
dec
pop
jne
xor
xor
mov
inc
mov
stos
inc
cmp
notb
int3
mov
fdivrl
cmp
in
dec
pop
cmpsl
stos
out
adc
push
into
sub
mov
rcrb
sub
outsl
dec
ss
orb
xchg
add
cmp
aam
scas
jno
pusha
test
xor
cli
jmp
xchg
lahf
inc
adcl
ret
sbb
add
jo
push
leave
dec
pop
push
push
adc
loopne
mov
xchg
pop
or
mov
push
add
xor
scas
lock
rol
pop
and
stos
xchg
cmc
iret
or
popa
sub
sub
loope
aaa
add
push
cld
ret
sub
popa
js
xchg
lods
imulb
pop
das
mov
inc
rcr
iret
xchg
or
pop
int
sub
mov
mov
adc
push
lea
lcall
push
lock
mov
mov
popf
adc
aam
pop
mov
push
loop
xchg
push
inc
adc
mov
mov
cmp
and
dec
mov
xchg
in
pop
mov
addr16
out
imul
icebp
adc
and
sbb
rcll
sbb
adc
mov
push
pop
or
cli
in
xor
into
stos
cmp
std
ljmp
ret
push
cmpsb
lods
imul
movsl
and
and
cmp
ja
subb
pop
std
daa
mov
in
scas
out
mov
or
icebp
out
add
out
test
inc
mov
mov
out
add
mov
push
fs
xchg
adc
and
dec
scas
fmulp
mov
inc
addr16
imull
popa
je
int
mov
arpl
clc
dec
fwait
add
cmp
xchg
mov
roll
dec
loop
jbe
sub
aas
repnz
fbstp
pop
xor
sti
push
mov
cmp
test
add
divb
jl
adc
lock
test
lcall
mov
ss
dec
sub
out
sarb
and
lea
pop
fsubp
inc
cld
dec
dec
out
into
into
push
dec
and
ret
hlt
popf
cmp
pop
xor
movsl
imul
or
adc
mov
mov
pop
inc
mov
bound
cmpsb
inc
push
mov
jge
inc
ss
in
push
xchg
dec
jb
pusha
dec
in
fstps
ffree
pop
jns
add
push
mov
repz
test
add
mov
inc
sub
fldl
jns
push
add
or
xchg
fst
push
hlt
adc
shr
sbb
lret
adc
mov
xchg
push
shl
mov
in
push
pop
mov
sub
fsub
and
sub
xchg
cld
inc
das
or
cmp
jle
xchg
lds
and
les
or
ret
std
divl
sbb
add
loope
xlat
lds
mov
es
add
aad
cs
adc
mov
or
xor
scas
xor
cmpsb
pop
mov
out
rorl
aam
push
gs
addr16
pop
rclb
jmp
aaa
or
popf
sub
sbb
fidivrl
xorl
pop
jle
mov
ficompl
mov
and
adc
jbe
insb
xor
mov
mov
or
mov
mov
outsb
xor
out
cmp
sahf
iret
pop
mov
aam
clc
sahf
cmovge
int
mov
addb
push
bound
clc
fildll
sub
cwtl
push
pop
jp
cwtl
dec
pop
add
add
inc
repz
mov
das
pop
imul
pop
push
push
mov
push
mov
mov
jo
outsb
icebp
test
arpl
mov
sbb
imul
add
mov
or
add
sarl
jae
inc
pop
mov
stos
nop
xor
cld
mov
loop
inc
arpl
adc
push
mov
jmp
push
iret
mov
xchg
mov
das
jg
dec
jne
into
inc
ds
mov
and
ss
and
pop
xor
inc
scas
insb
out
sarb
cmp
mov
jmp
sbb
mov
sub
test
cmc
js
lock
xor
add
jmp
ja
clc
adc
add
lret
push
lcall
sbb
popf
leave
adc
sbb
dec
jmp
cmp
xchg
test
es
les
adc
arpl
fsubrs
mov
inc
out
or
and
adc
test
sbb
stos
pop
inc
pop
nop
insl
xor
fldl
inc
dec
in
mov
dec
scas
inc
cmp
adc
mov
imul
iret
mov
ds
sbb
dec
mov
push
jp
add
add
inc
pushf
scas
sbb
add
push
push
add
push
lods
testb
adc
iret
sub
cwtl
inc
movsl
push
pop
cmpsl
dec
test
ljmp
add
inc
andb
xchg
push
stos
and
fxch
fs
int
stos
enter
ja
fcmovnb
mov
ret
mov
iret
xchg
std
pop
in
aam
popa
jbe
dec
push
lahf
int3
push
sub
stc
pop
and
inc
ds
je
outsl
cmpsl
lahf
loope
or
loope
pop
movsl
lret
cld
dec
mov
mov
dec
test
jg
adc
mov
xlat
add
jl
xchg
pop
lods
mov
and
mov
xor
sbb
push
add
push
lock
inc
insb
xor
lods
mov
xchg
dec
into
add
arpl
out
and
ds
cmpsb
in
dec
mov
and
push
push
xorb
repnz
enter
call
sarl
stos
inc
xchg
lods
xchg
xchg
cli
mov
mov
popf
pop
sub
scas
int3
das
jl
into
orb
test
mov
push
jnp
xor
test
stos
jnp
jno
stos
ss
lds
xchg
popa
test
cmp
cmp
in
test
mov
pushl
mov
clc
daa
sub
cmp
mov
dec
lret
dec
int
imul
in
dec
pop
out
movsl
data16
xchg
pop
movsl
enter
dec
fcomps
xchg
loope
xor
fstl
dec
adc
or
mov
push
and
sub
in
and
xchg
inc
dec
andl
mov
mov
adc
pop
cs
repnz
xchg
dec
lods
sub
jbe
jo
xchg
xchg
mov
jl
xchg
jg
test
cld
push
jo
in
push
sbb
cs
ds
fwait
rorb
mov
ret
lds
xor
std
mov
xchg
pop
dec
ficompl
clc
push
cli
push
push
in
std
mov
xchg
xor
jmp
popf
add
add
jb
mov
cmpsb
pop
hlt
push
sbb
out
aas
pop
imul
pxor
and
adc
push
mov
les
pop
fisubrl
jge
and
ficoms
mov
inc
in
mov
rolb
pusha
lahf
roll
jmp
in
jb
js
jno
or
xor
insl
icebp
lds
jmp
mov
push
xlat
nop
mov
sbb
dec
xor
mov
test
out
jecxz
fadd
jl
lods
orl
cs
cmp
les
dec
dec
jecxz
fs
cmp
push
adc
fidivrs
pushf
inc
pop
mov
addr16
mov
cmpsl
ret
mov
xor
dec
fimull
xchg
popa
pop
and
sbb
lea
cmpsl
mov
lcall
pop
hlt
fidivs
mov
pop
add
insb
xchg
cmpsb
dec
push
inc
xor
push
xlat
inc
cmp
movsl
rorb
outsb
mov
jae
sbb
jmp
jge
and
and
xchg
pop
dec
cli
hlt
inc
jp
dec
pop
or
shlb
repz
sbbb
orl
int
cmpsl
scas
popf
jge
lock
cmpsb
push
outsl
jb
xor
mov
subb
lods
mov
and
lea
ljmp
sbb
push
or
fmull
push
sub
cmp
fnstenv
hlt
dec
adc
or
cmpsb
rolb
fistpl
int3
cmp
stos
scas
xor
sub
cli
xchg
movsb
pop
aaa
out
ret
lahf
gs
aad
fs
out
dec
xchg
add
jg
or
repnz
xchg
fldenv
js
insb
dec
fwait
call
jae
movb
and
and
fdivr
fcoml
idivl
arpl
push
jns
stos
shll
mov
cs
pusha
pop
or
lahf
divl
and
rorw
dec
mov
orb
je
or
sbb
jo
inc
subb
mov
movsb
push
ret
mov
pop
fwait
inc
stos
cmp
int
add
pop
lret
jno
add
dec
xchg
arpl
mov
cmpsl
aam
sub
sarb
pop
aam
pop
subl
push
pop
fisubrs
fdivs
push
outsb
fisttpll
mov
jns
stos
xchg
push
leave
jg
sti
lret
movsl
jae
sub
xlat
push
movsl
mov
xchg
cmp
inc
push
fsubrp
scas
adc
sti
test
xor
frstor
and
inc
mov
cmp
jno
or
fistps
mov
mov
push
es
jl
cld
xchg
xchg
adc
data16
cmpsl
pop
bound
popf
cmp
cmp
lcall
pop
negl
test
jno
lea
pop
add
xor
iret
inc
jge
and
mov
lods
bound
pop
mov
mov
adc
icebp
push
decb
fcoml
push
and
jnp
sarl
xchg
inc
cmpsl
das
insb
mov
xchg
push
jp
into
insl
inc
sub
cmp
push
sub
and
inc
cltd
popf
mov
sbb
je
fcomip
inc
add
movsb
enter
sbb
mov
ror
mov
fdiv
inc
cld
jns
push
aas
xchg
out
sbb
xlat
lea
xchg
call
and
ret
xor
xor
cmp
mov
mov
mov
inc
push
js
ss
jl
movsl
in
leave
in
push
popf
rorb
pushf
mov
hlt
sbb
pusha
loop
sbb
or
jae
popa
pop
std
into
or
movsb
jmp
push
subl
fs
aad
lret
addr16
repz
and
push
psubsb
lea
sarl
and
and
loopne
mov
push
push
repz
lret
outsb
cltd
ret
and
sbb
xchg
jo
andl
cwtl
jns
mov
js
cmp
pop
xlat
dec
xlat
pushl
add
jae
push
jbe
in
adc
lds
xor
jns
inc
jno
adc
or
cmp
inc
ficomps
int
popl
xor
fadd
aad
inc
xchg
aas
sbb
cmp
and
mov
jmp
jae
rcl
lods
cld
adc
dec
lahf
fisttps
mov
arpl
push
inc
iret
and
dec
sub
xchg
push
push
testb
shlb
mov
cmp
mov
ret
test
cmpsl
nop
xor
xor
pop
setb
and
lods
mov
jns
stc
loopne
mov
dec
mov
fstpt
ss
mov
dec
cmp
xor
rolb
mov
mov
out
push
ret
sahf
subl
out
int3
pop
je
pop
adc
out
sbb
xchg
sub
mov
cmc
xchg
jns
and
bound
xor
lea
push
je
mov
pop
fsubrl
fildl
xor
mov
jns
rcll
orl
fstp
push
and
test
mov
inc
xlat
or
out
hlt
ss
and
inc
test
mov
pop
xor
mov
lods
cs
mov
icebp
int3
aad
mov
add
fcoml
ja
sar
add
xor
xchg
rcl
sbb
fdivr
shlb
js
pop
je
dec
xor
mov
push
mov
insl
lods
cmp
addr16
mov
sbb
xor
add
cmp
jnp
jae
xor
movsb
push
sbb
sbb
jg
cmp
sub
inc
jecxz
push
mov
push
cmp
jno
adc
or
cli
jecxz
icebp
stc
push
sub
or
xchg
lods
pop
xlat
fcmovne
inc
xor
cmp
add
daa
imul
leave
ds
cwtl
roll
movsb
cld
fs
add
fsub
push
aam
dec
bound
test
popf
sbb
sub
insl
in
and
ret
xor
adc
rcl
shll
pop
lea
call
fmulp
mov
and
xor
jne
int3
push
insb
push
pop
rcll
movsw
test
xchg
into
and
xchg
inc
repz
int
xchg
cmp
scas
ds
int3
inc
xorl
jg
add
test
pop
sete
iret
mov
ret
xor
shrb
daa
push
addr16
inc
and
xor
cmp
sub
and
out
or
pop
daa
lock
fiadds
aad
test
fistl
cmp
mov
jbe
push
mov
xchg
pop
dec
hlt
or
cli
push
popa
outsl
xchg
or
cmpsl
add
in
ret
cli
insb
nop
pop
and
jmp
pusha
push
ret
stos
rolb
mov
cmp
mov
aad
lret
fcoml
and
sbb
inc
push
mov
sub
repnz
mov
jge
lcall
ss
jmp
sbb
ret
outsb
or
movsl
aas
push
dec
inc
sbb
mov
bound
or
xor
cmpsb
sbb
pcmpeqd
push
mov
hlt
inc
je
add
rclb
aam
push
mov
and
cwtl
imul
sub
daa
mov
dec
xchg
sti
xchg
hlt
push
in
or
pusha
jbe
orl
sbb
stos
push
push
cmp
xchg
push
jmp
push
outsl
ret
mov
jbe
jae
adc
bound
daa
outsb
jnp
push
lret
mov
cmc
add
int3
sub
fstps
idivb
jno
sub
push
js
pop
push
mov
adc
mov
sarb
xchg
in
mov
test
pusha
popa
bound
push
lods
xchg
cmp
inc
sub
imull
mov
adc
jle
add
and
cmc
pop
rolb
in
xchg
add
std
out
jmp
xlat
sahf
xchg
movsb
push
addr16
mov
out
adc
arpl
push
mov
iret
jecxz
push
xlat
cwtl
pop
jge
sbb
mov
jmp
or
in
add
pop
xor
nop
xor
jae
sbb
and
decl
fbld
add
xchg
push
push
scas
mov
fisttpll
inc
inc
mov
cmp
sbb
mov
clc
or
cmp
outsl
ret
mov
jo
lret
leave
pushl
arpl
out
and
add
jbe
sahf
hlt
stos
adc
test
lock
pop
mov
cld
mov
fcoml
mov
cld
and
into
scas
sub
lods
insb
xchg
lock
out
bound
dec
and
mov
jecxz
push
cld
out
push
xchg
xchg
pushf
outsb
mov
cli
or
fsubl
sti
xor
sub
scas
pop
daa
cmp
ret
rorl
inc
lcall
jecxz
mov
test
jae
test
mov
roll
inc
std
sahf
jmp
and
mov
dec
je
lcall
jb
dec
pop
lret
sbb
dec
xor
movd
add
sub
repz
loopne
and
jne
push
jo
fdivrl
out
add
and
mov
push
test
call
jne
ds
mov
pusha
cmp
push
jg
bound
and
loopne
ficoml
jg
mov
loope
aaa
xor
mov
popa
xchg
iret
and
fcos
iret
cmp
pop
mov
mov
inc
out
orb
les
mov
push
pusha
jne
cld
sbbb
mov
movsb
insb
dec
add
jecxz
fwait
enter
jg
in
mov
ja
aas
aam
pop
xor
mov
out
cmc
dec
push
pop
xor
movsl
call
stos
int
sbb
mov
mov
sarb
std
addl
jge
testl
jnp
imul
test
cmpsl
xor
and
scas
mov
and
pushl
inc
subb
rorl
or
inc
push
scas
fistpll
cmp
push
movsb
add
shrb
add
ret
insl
hlt
mov
add
imul
push
mov
push
cmpsl
std
int3
enter
notl
insb
in
aam
ja
xchg
and
mov
xchg
cmpsb
mov
jg
mov
jnp
mov
sti
lret
into
shlb
fbstp
sahf
sub
movsl
imul
stc
dec
xchg
mov
inc
orl
les
loopne
test
aaa
psadbw
jbe
popa
push
movsb
sbb
bound
icebp
data16
jmp
adc
xor
popa
in
jl
mov
outsl
inc
sub
adc
ficoml
add
call
dec
lret
sar
arpl
push
xor
pop
mov
sbb
mov
mov
mov
mov
rclb
cmp
adc
mov
out
mov
cs
add
fdivl
mov
and
cld
or
adc
je
xor
xor
pop
mov
push
imul
add
int
out
ja
or
push
cmp
mov
xchg
inc
sub
test
xchg
sbb
mov
push
xor
sub
xor
aas
push
mov
iret
nop
test
push
push
cmp
into
addr16
aad
cmp
lret
pop
sub
pop
add
fs
bound
mov
outsl
leave
push
push
aaa
jmp
and
mov
fildl
xchg
push
das
or
int
xorb
pop
inc
pop
pusha
gs
jmp
inc
push
int3
subb
scas
arpl
xchg
insb
stos
int3
mov
gs
mov
int3
sub
out
add
xorl
xchg
dec
bound
dec
push
int3
mov
sar
int3
aaa
in
jl
movsb
stos
ficomps
out
adc
lock
and
subb
jo
xor
xchg
or
dec
add
jg
int3
data16
adc
dec
mov
movsl
sbb
cmpsb
ljmp
mov
popa
in
pop
fstpl
cwtl
and
lret
std
pop
pushf
sti
push
sbb
add
push
mov
inc
stos
insl
loope
cmp
jns
jne
pop
cmpsl
out
jge
push
xlat
test
hlt
scas
scas
outsl
add
pop
mov
sub
mov
dec
mov
outsl
pop
scas
mov
lret
cmp
popa
mov
push
mov
sbb
jae
stos
push
into
out
mov
pop
jg
push
lret
mov
jne
cmpl
test
repz
fiaddl
cmpsb
test
xor
mov
pushf
adc
sarb
clc
call
imul
notl
or
push
sarl
mov
dec
outsb
mov
push
lock
stos
cmpsl
stos
xchg
jge
test
scas
mov
fmul
popf
loop
cmpsb
cmp
push
test
clc
repnz
inc
sub
lds
lret
je
pop
or
pushl
dec
dec
hlt
fs
xchg
out
js
fdiv
inc
inc
push
jne
aas
sbb
aad
push
negb
je
das
orb
and
jno
jmp
sbb
rorl
test
lea
in
jno
or
or
jg
jns
adc
out
int3
push
add
daa
ficompl
pusha
jne
out
jl
add
or
add
ret
pop
sub
addb
cmp
push
jl
or
or
fsubl
fsub
sbb
in
ja
jb
sub
sub
ljmp
inc
ret
mov
pop
cmp
cli
pop
xchg
add
cmp
jp
mov
mov
fwait
mov
test
movsl
test
arpl
pop
clc
adc
fwait
mov
or
adc
sub
push
cmp
mov
stos
dec
mov
imul
inc
repz
xchg
dec
ss
inc
adc
ficoml
cwtl
popf
xor
cmp
xor
add
testb
arpl
dec
adc
cmp
dec
int
push
mov
pusha
fcmovbe
popa
lahf
sbb
pop
push
gs
pop
aam
xchg
push
cs
ja
dec
sub
in
mov
scas
sar
cmpsb
pop
cmp
les
sub
enter
mov
mov
pop
xchg
dec
insb
mov
sbb
push
mov
pushf
mov
inc
imul
mov
push
andb
fcomi
pop
pop
insl
clc
cli
outsb
iret
out
jge
cmp
jns
call
data16
cwtl
ss
mov
jle
xchg
push
aaa
xchg
mov
pop
or
adc
mov
dec
lret
mov
testb
inc
outsl
mov
xchg
jne
ja
jge
dec
jne
jge
les
test
cld
and
adc
push
add
mov
mov
lods
adc
xchg
in
add
dec
test
sub
add
lods
es
inc
cmpsb
pusha
je
nop
jge
mov
mov
pop
pop
cs
add
pop
pop
adc
add
testl
imul
int
cmpb
jns
inc
lds
in
lea
or
mov
inc
stos
icebp
push
stc
jnp
sbb
mov
mov
xchg
sti
idivb
nop
jnp
jo
icebp
stc
inc
mov
xchg
in
ret
sub
pop
sub
movsb
in
push
xchg
fiadds
clc
mov
xor
or
mov
test
mov
inc
negb
loope
xor
mov
cmp
xchg
stos
or
repz
jnp
mov
dec
fmulp
jmp
or
pop
insb
jno
nop
mov
or
test
inc
arpl
inc
or
sub
or
push
pop
cmpsl
cmp
dec
ljmp
mov
jp
into
out
pop
mov
xchg
cmp
pop
loopne
cmp
pop
jle
and
shll
cltd
test
add
jg
mov
sbb
dec
push
cmc
fs
lds
aad
sbbb
cmp
jno
push
or
shlb
pop
testl
test
mov
ds
pop
pop
sub
or
and
cmc
mov
insb
in
in
cli
aaa
data16
or
pop
dec
mov
aam
xor
leave
inc
outsb
fld
push
dec
movsb
test
xchg
cmp
pop
fidivrs
add
fildl
cwtl
adc
rcll
mov
add
sahf
dec
insl
push
cwtl
int
pop
mov
push
cmp
or
nop
lock
fsub
jg
cltd
fdivl
pusha
push
jno
cmpsb
mov
push
lock
insb
leave
sbb
xlat
out
mov
out
test
popa
iret
mov
add
add
les
add
sub
pushf
leave
es
sub
frstor
sbb
push
nop
test
in
in
pop
lods
sbb
pop
pop
stos
pop
stc
mov
fdivrs
inc
lcall
add
jge
inc
sarb
lods
insb
mov
fisubrs
shll
imul
sbb
inc
jl
js
imul
aad
movsl
and
pusha
cltd
inc
popa
in
cmp
mov
or
leave
in
pushf
lcallw
pop
icebp
arpl
popa
cmp
cmp
loop
lods
push
adc
testl
mov
mov
mov
jnp
mov
add
push
aaa
lret
jae
sahf
sbbl
xlat
ljmp
and
fildll
dec
cmp
push
stc
imul
movsb
fs
jmp
imul
test
stc
arpl
jb
popf
pop
push
mov
mov
xchg
sbbb
js
jae
int3
stos
dec
mov
push
divl
mov
push
dec
fstp
push
or
pushf
cld
fisubrs
inc
sbb
mov
int3
loope
repz
cs
push
xchg
push
lods
push
mov
jo
stos
add
mov
sbb
mov
or
xchg
push
push
mov
cli
jmp
divl
push
cld
adc
adc
lods
cmp
int
pop
outsb
dec
mov
popf
mov
jp
pop
aam
sbb
pop
add
or
xchg
aad
fidivl
and
mov
flds
lods
lds
cmp
jne
rolb
subb
fiaddl
jno
lds
and
mov
out
push
aad
scas
mov
ret
clc
pop
sub
aad
lcall
imul
mov
in
cmpsl
lahf
ljmp
sbb
pop
fdivrl
xchg
loope
sbb
add
daa
loop
cmp
gs
jae
jno
jb
pusha
je
loop
pop
adc
fidivl
dec
pop
ds
mov
test
movsl
test
xor
arpl
fsubrl
lock
jecxz
in
iret
lea
lods
xchg
mov
fcos
fsubrl
pop
enter
xchg
pop
xchg
mov
cs
lcall
mov
mov
cltd
jae
push
mov
jmp
or
orb
shrb
or
adc
mov
in
xchg
pop
inc
and
aas
mov
rcrl
mov
mov
mov
jmp
mov
add
cmp
fdivrs
in
push
movsb
sub
xchg
jecxz
xor
or
loopne
mov
fs
dec
dec
fcompl
push
jmp
mov
or
jns
outsl
sbb
ret
mov
fdiv
cld
push
fs
rolb
mov
enter
jnp
sub
outsb
add
or
cmpsl
es
sub
sahf
pop
scas
leave
dec
lods
insb
imul
xchg
adc
inc
lea
xchg
movsl
pop
mov
fwait
in
pop
and
lods
sub
jecxz
dec
and
xor
adc
lock
movsl
push
dec
loopne
dec
sub
in
fcomip
push
repnz
mov
jge
int3
jge
inc
push
std
outsl
in
xchg
cmp
mov
into
out
gs
popa
dec
sub
pop
mov
add
call
and
and
pop
and
mov
addr16
jnp
mov
jo
insb
and
jnp
jb
arpl
mov
push
fildll
cld
or
adc
out
stc
mov
mov
jge
mov
scas
in
dec
cmpsb
shl
push
sbb
inc
pop
cwtl
and
xor
and
sub
dec
xor
scas
lret
outsl
xor
lahf
cltd
mov
mov
dec
sbb
and
pop
mov
aas
in
and
inc
popa
mov
push
imul
jae
jmp
push
in
les
je
sub
dec
les
cmp
sti
jb
jl
lahf
cmp
fisubrs
mov
stos
or
push
xorb
insl
jg
dec
pop
les
popf
into
loop
and
xorl
pop
inc
iret
mov
pop
movsl
xlat
rcrb
pop
mov
fidivrs
test
push
leave
test
idivb
stc
xor
aad
cmp
mov
test
scas
and
movsb
push
xchg
test
test
jmp
or
lret
or
fcompl
xchg
cli
add
ds
movsb
and
in
sub
jo
lods
les
adc
push
shl
sbb
or
lods
xchg
mov
stos
dec
movsb
cli
jmp
mov
fucomi
xchg
fwait
int3
test
jp
sbb
insl
movsb
pusha
sub
ds
cmp
lret
cmc
fistps
pop
xor
rcr
push
pusha
push
in
xor
inc
sub
mov
push
sub
pushf
inc
inc
inc
mov
les
std
stc
xchg
jnp
dec
xor
cwtl
stc
pop
mov
loopne
insb
cld
pop
or
jne
repz
xchg
pop
inc
push
jns
jg
cltd
lods
xor
les
cmpsl
or
pop
fcmovb
lret
mov
or
and
jl
movsl
xor
mov
push
movsl
popa
out
and
push
movsb
jae
scas
add
pop
or
sbb
pop
pusha
inc
dec
dec
sbb
cmp
movsb
cmp
jmp
cltd
daa
xchg
push
movsb
insb
int
dec
mov
fmul
test
lock
popf
sti
fwait
sbb
or
jecxz
fs
clc
mov
xchg
or
adc
fucomp
clc
movsl
dec
pop
inc
lret
sub
jmp
xor
mov
or
stos
jge
push
dec
jp
inc
and
xor
idivl
loop
lret
pop
add
ljmp
mov
mov
jne
xchg
pusha
adc
flds
xor
insb
es
xchg
mov
pop
sub
jnp
xchg
jmp
xor
jp
fxam
mov
loop
movl
xchg
xor
push
cld
sbb
into
cmpsb
nopl
in
fsts
jge
bnd
dec
stos
cmp
outsl
scas
add
pop
mov
cmp
xor
xchg
mov
loopne
das
inc
sub
arpl
add
lret
inc
fisttpll
fldt
addr16
sub
inc
sarb
pop
arpl
mov
dec
pop
xchg
push
inc
adc
mov
ret
sub
jmp
sarb
inc
arpl
mov
fs
lret
jns
pop
lcall
xchg
orb
push
add
mov
ret
imul
sub
insl
dec
iret
aas
les
mov
and
cmpsb
sbb
je
cltd
sub
lret
xor
push
sbb
push
popa
jno
xor
in
shl
int3
lods
aaa
pop
lock
inc
sarl
aad
loop
inc
cmp
jl
sar
pop
ds
sbb
ljmp
inc
inc
and
daa
sub
popf
pop
dec
xchg
xchg
movsb
in
lcall
and
jno
xor
add
cmp
adc
jne
inc
jg
mov
adc
adc
clc
xor
test
mov
mov
pop
pop
xor
xor
sbb
lcallw
adc
test
neg
icebp
pushf
mov
inc
ficompl
sub
xchg
int
ja
or
out
jne
mov
dec
pop
mov
aaa
adcl
mov
rcrb
test
dec
cwtl
hlt
enter
cmpsl
test
sbb
movsb
fxam
nop
mov
xchg
inc
cmp
push
pop
mov
mov
lds
pop
and
ds
dec
pusha
lret
test
or
pop
sbb
loope
addb
loop
cs
nop
cs
inc
ret
inc
push
and
adc
push
lods
shr
out
add
and
jo
gs
sbb
mov
add
dec
lods
data16
pushf
into
repnz
mov
in
jbe
xchg
cmp
xlat
std
xchg
fisubrs
rorl
cmp
ficompl
fcoml
fistpll
mov
imul
mov
ficomps
mov
mov
pop
insb
jno
xor
adc
cmp
xchg
sub
fadds
ficompl
ret
jp
mov
add
mov
xor
pop
xor
insb
dec
dec
adc
adc
loope
push
sbb
fnsave
subb
sub
xchg
cmp
lods
aam
add
cmp
scas
push
dec
mov
andb
push
sub
xchg
mov
sub
push
cmp
and
xchg
push
xchg
lea
outsb
xchg
andl
adc
subb
in
loop
stos
subb
loopne
into
aaa
movsb
nop
out
fmul
and
lahf
jg
test
lods
inc
jae
ret
std
aaa
or
pop
xchg
sar
rorb
and
mov
mov
cmp
add
pop
xor
mov
xor
push
int3
xor
dec
pusha
cld
cli
int3
jnp
mov
push
cltd
pop
jecxz
enter
sub
mov
rorl
rclb
andl
xchg
cli
add
push
pop
repnz
jecxz
xor
lret
adc
jb
icebp
push
mov
add
subb
push
enter
mov
mov
fdecstp
es
fsubrl
xorl
imul
push
push
in
out
or
sbb
push
mov
fs
pop
or
mov
add
lea
push
adc
in
jle
ret
inc
into
and
out
ljmp
aam
adc
fbld
daa
pusha
dec
mov
inc
sti
mov
je
xchg
dec
out
ret
loope
jae
ljmp
sbb
bound
dec
mov
aaa
arpl
iret
andb
in
frstor
adc
xor
fildl
pusha
nop
lret
insl
or
jno
imul
lea
aad
sub
xchg
xchg
mov
jmp
cmovl
lods
out
or
or
push
aad
mov
jmp
popf
les
inc
add
push
lods
xor
xchg
adc
cmp
push
lds
dec
mov
or
cmp
adc
jae
shll
jmp
fmull
aam
fsts
jge
mov
test
stos
mov
test
ljmp
lock
adc
roll
mov
or
mov
inc
cs
je
xor
das
dec
jg
test
movsb
push
cmp
test
rorb
outsl
iret
insb
decl
aaa
cld
push
push
cwtl
jns
fcompl
in
xchg
sbb
lods
imul
xchg
neg
call
dec
mov
insl
mov
add
pop
mov
jne
call
ficomps
pop
pop
scas
stc
sti
or
dec
std
movsb
sub
push
mov
sar
add
mov
xchg
rorb
jne
cmp
pop
arpl
mov
push
jg
fs
xchg
into
mov
or
sub
loop
jb
cli
leave
into
jb
mov
dec
icebp
les
imul
xor
shrl
jl
ds
pop
mov
cltd
mov
push
fdivrl
loopne
movsl
popa
mov
cltd
xchg
adc
xchg
mov
jg
sbbb
lea
pop
push
adc
stc
loop
add
xchg
outsl
in
enter
imul
pop
xchg
cmp
push
xchg
push
in
aad
jo
scas
mov
or
lods
enter
cld
jmp
sti
orb
pop
fwait
movsb
outsb
jns
cmp
jle
push
in
push
stc
add
sub
fstpl
scas
pusha
or
aad
neg
push
enter
xchg
stos
cmp
imul
ljmp
fsubl
nopl
mov
imul
push
sbb
sbb
sub
daa
xor
mov
dec
mov
mov
add
into
js
xchg
or
stos
icebp
jb
sub
push
repz
sub
mov
les
push
mov
jbe
js
repnz
cltd
mov
scas
mov
or
inc
mov
or
into
shll
mov
add
call
nop
add
dec
mov
divl
sbb
jg
imul
leave
pop
sahf
pushf
adc
sahf
das
push
xor
xor
imul
loope
add
insb
cltd
push
insb
xor
dec
in
xorb
out
xchg
into
dec
gs
gs
push
mov
cld
leave
lock
enter
inc
pop
lds
or
fsubl
pop
mov
or
inc
ljmp
dec
lock
cwtl
adc
out
adc
xchg
int
out
cmp
mov
mov
lcall
jecxz
cmpsl
sahf
sub
xchg
jge
loop
shll
sbb
lea
aas
aam
cmp
sti
cmp
movsb
sub
push
cwtl
rcrb
sbb
adc
inc
xchg
sub
aas
lcall
es
pop
pop
jo
mov
mov
insb
xchg
movsb
imul
rolb
xor
push
imul
sbb
mov
les
outsl
daa
daa
add
lds
dec
in
int
add
jle
fwait
cmp
imul
push
inc
pop
and
pop
ret
jle
pushf
movsl
xchg
xor
or
mov
cmp
ret
dec
push
xchg
test
inc
je
das
ret
push
mov
cld
arpl
addr16
sbbl
test
cmc
loope
xor
stc
ss
sub
push
mov
fs
filds
jecxz
leave
insl
icebp
xchg
das
sbb
pminsw
cwtl
adc
call
xorb
ret
dec
push
pop
xorl
iret
jns
push
and
jb
jb
sbb
repnz
mov
cmp
icebp
mov
das
roll
mov
push
loopne
